--->|VGhleSB3b3VsZCBiZSBsb3Npbmcgb3V0IG9uIG1pbGxpb25zIG9mIGRvbGxhcnMgd29ydGggb2YgaW5jZW50aXZlcyBhbmQgYm9udXNlcyBmb3IgdGhlbXNlbHZlcy4gCkVkaXQ6IGFsc28sIEkgd2FudCB0byBleHByZXNzIG1vcmUgdGhhbiBhbnl0aGluZyB0aGF0IGl0IHN1Y2tzIHRvIGJlIHBsb3dlZCBpbi4gSSBkbyB1bmRlcnN0YW5kICAgSSBoYWQgdG8gc3RyZWV0IHBhcmsgZm9yIDEwLzExIHllYXJzIEkgbGl2ZWQgaGVyZS4gTm8gb25lIHNob3VsZCBiZSBwbG93aW5nIGludG8gdGhlIHN0cmVldCwgYW5kIG5vIG9uZSBzaG91bGQgYmUgdGFraW5nIHNvbWVvbmUgZWxzZSBzcG90IElGIHRoZXkga25vdyB0aGF0IHdoYXQgaXQgaXMKRnJhbmNpcyBGbGVtaW5nIHNwZW50IEZyaWRheSBpbiBHZXR0eXNidXJnLiAKMyBOb3YgMjAxNCAuIApCdWZmYWxvIFdpbGQgV2luZ3MgcmVzdGF1cmFudCB3aWxsIGRvbmF0ZSAxMCBwZXJjZW50IG9mIGFsbCBzYWxlcyB0byB0aGVTb3V0aGVybiBVdGFoVG95cyBmb3IgVG90cyBwcm9ncmFtLiAKQW5kLCB5b3UndmUgZ290IHRvIHNwZW5kIGEgaGFsZiBob3VyIGNoaXBwaW5nIGFuZCBwdXR0aW5nIDIvMyB0aW1lcyBhIHdlZWsuLiAKQSBoYXB0aWMgdG91Y2ggZGlnaXRhbCBjcm93biBpcyBhbHNvIGFtb25nIG5ldyBmZWF0dXJlcywgd2hpY2ggZW5hYmxlcyAzMCBzZWNvbmQgb25lIHRvdWNoIGhlYXJ0IHJhdGUgbW9uaXRvcmluZyBhcyB3ZWxsIGFzIGVhc2llciBuYXZpZ2F0aW9uIHRocm91Z2ggYXBwcy4gWW91IGNhbiBldmVuIHNoYXJlIGRpZ2l0YWwgaGVhcnRiZWF0cy4uIApIb3cgZG8geW91IHBsYXkgZml2ZSBjYXJkIHN0dWQ/CkdpdmUgeW91cnNlbGYgc29tZSBjcmVkaXQgYW5kIHRyeSBub3QgdG8gYmUgc28gaGFyZCBvbiB5b3Vyc2VsZi4uIApFbiBkYWFybmFhc3QgYmVsZWcgaWsgbmF0dXVybGlqayB2ZWVsIGJ1aXRlbiBkZSBwZW5zaW9lbm9wdGllcy5JayBoZWIgbWlqbiBwZW5zaW9lbiBpbiB0d2VlIGZhc2VzIGJlZGFjaHQ6IGZhc2UgMiBpcyBuIGRlIG9mZmljaWxlIHBlbnNpb2VubGVlZnRpamQsIDcwKyBvZiB6by4gSWsga3JpamcgZGFuIEFPVyBlbiBwZW5zaW9lbiAoem93ZWwgaGV0IHZlcnBsaWNodCBvcGdlYm91d2RlIHZpYSB3ZXJrIGFscyBoZXQgZ2VsZCB2YW4gZGUgcGVuc2lvZW5iZWxlZ2dpbmdzcmVrZW5pbmcpLiBGYXNlIDEgaXMgdnIgZGllIHRpamQgZW4gbW9ldCBpayB2b2xsZWRpZyBtZXQgZWlnZW4gZ2VsZCBmaW5hbmNpZXJlbi5BbHMgamUgYWFuIGhldCBiZWdpbiBzdGFhdCwgZGFuIHpvdSBpayB6ZWtlciB6b3JnZW4gZGF0IGZhc2UgMiBnb2VkIGdlY292ZXJkIGdhYXQgd29yZGVuICh3YW50IHRlZ2VuIGRlIHRpamQgZGF0IGplIDcwKyBiZW50LCB3aWwgamUgZ2V3b29uIGVlbiBnb2VkIGlua29tZW4gaGViYmVuIHVpdCBwZW5zaW9lbiBlbiBuaWV0IG1lZXIgbWV0ZW4gd2Vya2VuKSwgZW4gZGF0IHpvdSBpayBkb2VuIGRvb3IgZ2V3b29uIGVlbiBkZWdlbGlqayBiZWRyYWcgaW4gdGUgbGVnZ2VuIGluIHBlbnNpb2VucG90amUocykgbWV0IGJlbGFzdGluZ3Zvb3JkZWVsLiAKVGhlIHllYXIgMjAxNSBlbmRlZCB3aXRoIG1vcmUgaWxsdXNpb25zLiAKV2hlbiBpIHdhcyB0aGVyZSB0aGUgaG9sZGVtIGFjdGlvbiB3YXMgYXQgc2FuIGZlcm5hbmRvIGFuZCB0aGUgcGxvIHdhcyBhdCBjYXNpbm8gcmlvLiAKRWFjaCBkZXBhcnRtZW50IGF0IHRoZSBCaXJtaW5naGFtLCBBbGEuLCBkZWFsZXJzaGlwIHdhcyB0YXNrZWQgd2l0aCBkZXZpc2luZyB0d28gY29tbXVuaXR5IGV2ZW50cyB0byBtYXJrIHRoZSBhbm5pdmVyc2FyeS4KQXQgZmlyc3QgdGhleSBmaWdodCBvYnZpb3VzbHksIGJ1dCBoZSBtYW5hZ2VzIHRvIGNvbnZpbmNlIGhlciB0aGF0IHRoZSBjb21iaW5lIGFuZCB0aGVpciBhY2Nlc3MgdG8gaW5maW5pdGUgZGltZW5zaW9ucyBjb3VsZCBnaXZlIGhlciBpbmZpbml0ZSBleHBlcmltZW50YXRpb24gcG9zc2liaWxpdGllcy4gCkkgdGhpbmsgdGhleSBhcmUgbWFkZSBpbiB0aGUgZmlyc3QgMTAgeWVhcnMgb2YgdGhlaXIgbGlmZS4gU28gaXQgZWl0aGVyIGluIHlvdSBvciBpdCBub3QuIFRoZSBwZW9wbGUgd2hvIGl0IGxhdGVyIGluIGxpZmUgd2VyZSBhbHdheXMgZW50cmVwcmVuZXVycy4gCkhvd2V2ZXIsIG9uY2UgdGhlIGtpZHMgaGl0IHNjaG9vbCBhZ2UgdGhpbmdzIHVzZWQgdG8gY2hhbmdlLiAKSWYgeW91IHBsYXkgbG93IHN0YWtlcyBwb2tlciwgb3Igb3RoZXIgZ2FtZXMgb2YgY2hhbmNlLCB5b3Ugd2lsbCB1c2UgdGhlc2UgZm9yIGFudGUsIGFuZCBzbWFsbCBiZXRzLi4gCkkgZGVsZXRlZCBhbmQgYmxvY2tlZCBoaW0gb24gYWxsIHNvY2lhbCBtZWRpYSwgdG9sZCBmcmllbmRzIG9mIG1pbmUgbm90IHRvIGZlZWQgbWUgYW55IGluZm9ybWF0aW9uIG9uIGhpbSwgYW5kIGp1c3Qgd2VudCBvbiB3aXRoIG15IGxpZmUuIEJlc3QgZGVjaXNpb24gZXZlciFJIGZvY3VzZWQgb24gbXlzZWxmIGFuZCBhbSBtdWNoIGJldHRlciBmb3IgaXQuIEhlIGNhbWUgY3Jhd2xpbmcgYmFjayBzZXZlcmFsIHRpbWVzIGJ5IG1ha2luZyBlZmZvcnRzIHRvIHRyeSBhbmQgY29ubmVjdCB3aXRoIG1lIG9uIHNvY2lhbCBtZWRpYS4gClBlb3BsZSBsaWtlIGhpbSB1bmRlcnN0YW5kIHRoZSBuYXR1cmUgb2YgaWxsbmVzcy4uIApPZGRzLCBvdXRzLCBwb3Qgb2RkcywgZXZlbiByZWFkcyBhbGwgZ28gb3V0IHRoZSB3aW5kb3cgdG8gYmxpbmQgY2hhbmNlIGFuZCBwbGF5ZXJzIHN0YXJ0IGNvaW4gZmxpcHBpbmcgZm9yIHRoZWlyIG1vbmV5LiAKRnJhbmtsaW4gTWFyc2hhbGwgQ29sbGVnZQpZb3UgZ28gdGhyb3VnaCB3aXRoIGEgY2FsY3VsYXRvciwgaXQgaXMgYW1hemluZyB0aGUgY2hhbmdlIHRoYXQgdGFrZXMgcGxhY2UsIFdhZ2Fza3kgd3JpdGVzLiAKSXQncyB0cnlpbmcgdG8gYmUgZ29vZCwgaXQgaGFzIHBvdGVudGlhbCwgYnV0IGl0J3Mgbm90Li4gCkp1c3QgYSBmZXcgIkluIGdlbmVyYWwiIHRpcHMuIFNoaWVsZHMgYXJlIGFib3V0IHRoZSB3b3JzdCB0aGluZyB5b3UgY2FuIHB1dCBvbiBhbiBleHBvc2VkIHN1cmZhY2UsIHRoZXkgaGF2ZSAwIGFybW9yIGFuZCBuZXh0IHRvIG5vIGhlYWx0aC4KV2h5IGRvZXNuJ3QganVzdCBydW5uaW5nIGZhcnRoZXIgb3IgZmFzdGVyIGdpdmUgeW91IGVub3VnaCBvZiBhIHdvcmtvdXQgdG8gYnVpbGQgbGVnIHN0cmVuZ3RoPyBSdW5uaW5nIGJ1aWxkcyBlbmR1cmFuY2UsIGJ1dCBpdCdzIGFuIGluZWZmaWNpZW50IHdheSB0byBpbmNyZWFzZSBtdXNjdWxhciBzdHJlbmd0aC4gV2hhdCdzIG5lZWRlZCBhcmUgd29ya291dHMgdGhhdCB0YXJnZXQgc3BlY2lmaWMgbXVzY2xlIGdyb3VwcyBpbiB5b3VyIGxlZ3MuIFJ1bm5lcnMgb2Z0ZW4gZmVhciB0aGF0IHdlaWdodCBsaWZ0aW5nIGFuZCBvdGhlciB3b3Jrb3V0cyB3aWxsIHNsb3cgdGhlbSBkb3duLCBidXQgdGhpcyBpc24ndCBzb21ldGhpbmcgeW91IGhhdmUgdG8gYmUgY29uY2VybmVkIGFib3V0IGlmIHlvdSBwdXJzdWUgYSBiYWxhbmNlZCBleGVyY2lzZSByZWdpbWUuIApBbHRob3VnaCBtb3N0IENhcmliYmVhbiBjYXNpbm9zIG9wZXJhdGUgYXMgcGFydCBvZiBhIHJlc29ydCBob3RlbCBjb21wbGV4LCBhIGZldyBhcmUgc3RhbmQgYWxvbmUgb3BlcmF0aW9ucyB3aXRoIG5vIGhvdGVsIGFmZmlsaWF0aW9uLi4gCkJsdWUgQmVsbCBqZWFucyBlbXBsb3lzIDE3NSBsb2NhbCB3b21lbiB0byBzZXcgNDUsMDAwIHBhaXJzIG9mIFdyYW5nbGVycyBhbmQgUnVzdGxlcnMgYSB3ZWVrLiAKV2hhdCBtYWtlcyBpdCBoYXJkIHRvIGJyZWFrIGRvd24gdGhvdWdoIGlzIHRoYXQgYWxsIHRoZSByZXN0IG9mIHZpbGxhaW4gIm1hZGUiIGhhbmRzOiBsb3dlciBmbHVzaGVzLCByYW5kb20gOTcgVFQsIEpKLCBzcGV3eSA2OCBoYXZlIG5vIGJ1c2luZXNzIGphbW1pbmcgdGhpcyB0dXJuIHdoZW4gaGVybyByYW5nZSBpcyB0b3RhbGx5IHVuY2FwcGVkLiBBbmQgc3VyZSBlbm91Z2gsIGhlcmUgaGUgaXMgZG9pbmcganVzdCB0aGF0LgpUZXJyeSBNY2dHdWlyayBhYnNvbHV0ZWx5IGZlZCBpbnRvIHRoYXQgbmFycmF0aXZlIHdpdGggY29tbWVudHMgbGlrZSB0aGUgb25lcyBoZSBtYWRlIGxhc3Qgb2Zmc2Vhc29uLiAKVGhleSBoYWQgbm8gaWRlYSB0aGF0IGhlIHdhcyBtYXJyaWVkLCB0aGF0IGhlIGhhZCBhIHNvbi4gIiAiVGhleSBzYXkgdGhlcmUncyBub3RoaW5nIHdvcnNlIHRoYW4gYSBzY29ybmVkIHdvbWFuLCB5b3Uga25vdy4gClRoaXMgc3ViIGhhcyBhIHByb2JsZW0gd2l0aCBpZG9saXphdGlvbi4gWW91IGNhbid0IGJlIHRoZSBUcnVtcCBzdXBwb3J0ZXJzIG9mIHRoZSBsZWZ0IGFuZCBleHBlY3QgdG8gYmUgdGFrZW4gc2VyaW91c2x5LiAKVGh1cywgdGhlcmUgaXMgbW9yZSBmcmVlZG9tIHRvIHJlYWN0LiBBbm90aGVyIGZlYXR1cmUgb2YgZnJlZSBwb2tlciBpbiB0aGUgaW50ZXJuZXQgc2V0dGluZyBpcyB0aGF0IHJ1bGVzIGFyZSBtb3JlIHN0cmljdCBzaW5jZSBub2JvZHkgaXMgc2VlaW5nIGFueWJvZHksIHRoZSBvYmplY3Rpdml0eSBvZiB0aGUgZGVhbGVyIG9yIGRlYWxlci9wbGF5ZXIgaXMgbW9yZSBvciBsZXNzIG5vdCBjb21wcm9taXNlZCB0aGF0IG11Y2guLiAKVGhlIHBvcHVsYXIgbXl0aCB0aGF0IFN0YWxpbiBkaWRuIGJlbGlldmUgSGl0bGVyIHdvdWxkIGF0dGFjayBpcyBhIENvbGQgV2FyIGludmVudGlvbiAgIGluIHRydXRoIFN0YWxpbiB3YXMgcmVmb3JtaW5nIHRoZSBtaWxpdGFyeSBhbmQgcHJlcGFyaW5nIHRoZSBmb3JjZXMgaW4gb3JkZXIgdG8gYXR0YWNrIEdlcm1hbnkuIFRoZSBvbmx5IHByb2JsZW0gd2FzIHRoYXQgaGUgY291bGQgbm90IGZpbmlzaCB0aGUgcHJlcGFyYXRpb25zIGluIHRpbWUsIHdoaWxlIEhpdGxlciBjb3VsZG4gZmluaXNoIG9mZiBCcml0YWluIGFuZCBoYWQgdG8gc2VuZCBoaXMgbGFuZCBmb3JjZXMgdG8gdGhlIEVhc3QgaW4gb3JkZXIgdG8gbWFpbnRhaW4gdGhlIGluaXRpYXRpdmUuIFN0YWxpbiB3YXMgYmV0dGluZyBvbiBIaXRsZXIgZmluaXNoaW5nIG9mZiBCcml0YWluIGJlZm9yZSBhdHRhY2tpbmcgVVNTUiwgYXMgaGUga25ldyBhIHR3byBmcm9udCB3YXIgd2FzIHRoZSBsYXN0IHRoaW5nIEhpdGxlciB3YW50ZWQuIApUaGlzIGlzbiBleGFjdGx5IGEgdW5pcXVlIHByb2JsZW0gdG8gL3IvSGFsbyBpdCB2ZXJ5IGNvbW1vbiBpbiBjb21tdW5pdGllcyB3aXRoIGNvbnRlbnQgZHJvdWdodHMgYW5kIGV2ZW4gd29yc2UgaW4gVFYgc2hvdyBzdWJzLiBJdCByZWFsbHkganVzdCB0aGUgbmF0dXJlIG9mIGhvdyB0aGluZ3MgZ28gdW50aWwgbmV3IGNvbnRlbnQgaXMgZ2VuZXJhdGVkLiBJIGRvbiBzZWUgaG93IHlvdSBjYW4gYWR2b2NhdGUgZm9yIHRoZSByZW1vdmFsIG9yIHJlc3RyaWN0aW9uIG9mIGNvbnRlbnQgdGhlIGNvbW11bml0eSBhdCBsYXJnZSBpcyBvYnZpb3VzbHkgaW50ZXJlc3RlZCBpbiB3aGVuIHdlIGhhdmUgcHJhY3RpY2FsbHkgbm90aGluZyB0byBmaWxsIHRoYXQgdm9pZCB3aXRoLi4gCldoYXQgeW91IGlnbm9yaW5nIGlzIHRoYXQgaXNuIG5lY2Vzc2FyaWx5IGEgY2FzZSBvZiBJIGltYWdpbmUgbW9zdCBwZW9wbGUgd291bGQgcHJlZmVyIHRvIHJ1biB0aGVpciBsaXZlcyBvbiB0aGVpciBvd24gc2NoZWR1bGUuIApXaGlsZSB3ZSBoYXZlIHN1cnZpdmVkIGZvciA2MCB5ZWFycyBhbWJsaW5nIGFsb25nIHdpdGggYWxsIGtpbmRzIG9mIHNoZW5hbmlnYW5zIGltcG9zZWQgb24gdGhlIHBlb3BsZSBvZiB0aGlzIGNvdW50cnksIG91ciBpbnN0aXR1dGlvbnMgaGF2ZSBkZWdlbmVyYXRlZCBiZXlvbmQgcmVjb2duaXRpb24gICBhbGwgdG8gc2F2ZSB0aGUga3Vyc2kgcmVwZWF0ZWRseSBmb3Igc2NvcmVzIG9mIGluZGl2aWR1YWxzIHdobyByZWFsbHkgaGF2ZW4ndCBkZWxpdmVyZWQgdGhlIGdvb2RzLiBUaGUgcG9saXRpY2FsIHNjZW5hcmlvIHRvZGF5IGlzIGxpa2UgdGhlIEthcmFjaGkgU3RvY2sgRXhjaGFuZ2UgICBub2JvZHkgcmVhbGx5IGtub3dzIHdoYXQncyBnb2luZyB0byBoYXBwZW4sIGFuZCBieSB0aGUgdGltZSBwZW9wbGUgbGlrZSB1cyBiZWdpbiBidXlpbmcgdGhlIHJlYWwgcGxheWVycyBoYXZlIGFscmVhZHkgYmVndW4gc2VsbGluZy4uIApBbmQgaW4gYWRkaXRpb24gdG8gdGhhdCwgeW91IGNhbiBzZWUgdGhlIHN1Y2Nlc3Mgc3RvcmllcyByaWdodCBpbiBmcm9udCBvZiB5b3UuIApJIHNlZSB0aGF0IHlvdSBhc2tpbmcgYWJvdXQgdGhlIGZvdXIgZ3VhcmRpYW5zLCBhbHNvIGtub3duIGFzIHRoZSBGb3VyIEhlYXZlbmx5IEtpbmdzLiAKWW91IG1heSBiZSBhIGxpdHRsZSBtaXhlZCB1cC4gSXMgdGhlIG51bWJlciBvZiBwcm90b25zICsgZWxlY3Ryb25zIGJhbGFuY2VkLiBSYWRpb2FjdGl2ZSBtYXRlcmlhbHMgY2FuIGVtaXQgaW9uaXNpbmcgcmFkaWF0aW9uLCBhcyBpbiB0aGUgYWxwaGEsIGJldGEgYW5kIGdhbW1hIHBhcnRpY2xlcyB0aGV5IHNwaXQgb3V0IGNhbiBpb25pc2Ugb3RoZXIgYXRvbXMgdGhleSBpbnRlcmFjdCB3aXRoLiAKVGFraW5nIGF3YXkgdGhlIGFmcmljYW5zLCB0aGF0IGhhcmRseSAiaW1taWdyYXRlZCIsIHdlIGFyZSB0YWxraW5nIGFib3V0IDk5LjklIGV1cm9wZWFucy4gClNoZSB3YXMgYWxzbyBhIG1vdGl2YXRvci4gClRoZSAiZ3JlZW5za2luIiBmYWN0aW9uIHNob3VsZCBiZSBtYWRlIGludG8gaXQgb3duIG5hbWVkIGxvcmUgZnJpZW5kbHkgdHJpYmUuIApSZWNlbnRseSwgdGhlcmUgd2FzIGEgcHVzaCB0byB1cGRhdGUgb3VyIGNvdmVuYW50cy4gCkZvciB0aGUgbW9zdCBwYXJ0LCB0aGlzIGlzIGZpbmUuIApFdmVuIHRob3VnaCBJIGRvIHdhc2ggdGhlbSBldmVyeSBkYXksIGl0J3Mgc3RpbGwgbm90IGVub3VnaCB0byBlaXRoZXIgZGlzbG9kZ2UgZGVvZG9yYW50IG9yIHJlbW92ZSBkZW9kb3JhbnQgc3RhaW5zLiAKVGhlcmUgbWF5IGJlIG5vIHRyYW5zaXRpb24gb2YgbWluZCBzZXQgYXQgYWxsLi4gCkFuZCB5ZXMsIGhhbGYgdGhlIHRoaW5ncyBJIGxpc3RlZCBhcmUgYmFzaWNhbGx5IER1dGNoLiAKT3RoZXJzIGhhdmUgdW5ldmVuIGxheWVycyBvZiByb2NrIGRpZmZpY3VsdCB0byBkcmlsbCB0aHJvdWdoLiBUaGUgUGVybWlhbiBpcyByaWNoIGluIG9pbCwgYW5kIGl0cyBzaGFsZXMgYXJlIHJlbGF0aXZlbHkgZWFzeSB0byB0YXAgd2l0aCB0b2RheSByaWdzLi4gClVwIGVhZ2VyIGZvciBhbm90aGVyIGhhbmQKVGhlIG11c2NsZSBkdXJhIGNvbm5lY3Rpb24gbWF5IHJlcHJlc2VudCBhdCBsZWFzdCBpbiBwYXJ0IHRoZSB1bmRlcmx5aW5nIGFuYXRvbWljIGJhc2lzIGZvciB0aGUgZWZmZWN0aXZlbmVzcyBvZiB0aGlzIHRyZWF0bWVudC4gU3VjaCB0cmVhdG1lbnQsIGFzIHBlcmZvcm1lZCBieSBhIGNoaXJvcHJhY3Rvciwgd291bGQgZGVjcmVhc2UgbXVzY2xlIHRlbnNpb24gYW5kIHRoZXJlYnkgcmVkdWNlIG9yIGVsaW1pbmF0ZSBwYWluIGJ5IHJlZHVjaW5nIHRoZSBwb3RlbnRpYWwgZm9yY2VzIGV4ZXJ0ZWQgb24gdGhlIGR1cmEgdmlhIHRoZSBtdXNjbGUgZHVyYSBjb25uZWN0aW9uLiBJdCBpcywgYXMgcmVwb3J0ZWQgaW4gdGhlIDE5OTggTWVkaWNhbCBhbmQgSGVhbHRoIEFubnVhbCBwdWJsaXNoZWQgYnkgdGhlIEVuY3ljbG9wZWRpYSBCcml0YW5uaWNhLiAKWW91IHdpbGwgZGlzY292ZXIgdGhhdCB3aGV0aGVyIHlvdSBhcmUgbG9va2luZyB0b3dhcmRzIG1ha2luZyBzdXJlIHRoYXQgeW91IGNhbiBmaW5pc2ggYSByb29tIG9mZiBpbiB0ZXJtcyBvZiBkZXRhaWxpbmcgb3Igd2hldGhlciB5b3UgYXJlIGxvb2tpbmcgdG8gbWFrZSBzdXJlIHRoYXQgeW91IGNhbiBnZXQgdGhlIHJlc3VsdHMgdGhhdCB5b3UgYXJlIGFmdGVyIGJ5IHN0YXJ0aW5nIG9mZiB3aXRoIG9uZSBoaWdoIHF1YWxpdHkgcGllY2UgdGhhdCB0aGlzIGlzIHRoZSBvbmUgdGhhdCB5b3Ugd2FudC4gWW91IGFyZSBnb2luZyB0byBmaW5kIHRoYXQgeW91IGFyZSBpbiBhIGdyZWF0IHBsYWNlIHRvIHRvIHVzZSB0aGUgcmVhbGlzbSB0aGF0IHRoaXMgUm91bGV0dGUgV2hlZWwgY2FuIHByb3ZpZGUgeW91IHRvIGdldCB0aGUgZWZmZWN0IHRoYXQgeW91IG5lZWQuClRoaXMgaGFzIG5ldmVyIGJlZW4gYW4gaXNzdWUgYmVmb3JlIGFuZCBoYXMgcmVtb3ZlZCBzcGFtIGZyb20gdGhlIHN1YnJlZGRpdC4gSSBnb2luZyB0byBjaGFuZ2UgdGhlIHNldHRpbmdzIHNvIHlvdSB3aWxsIGFsc28gZ2V0IGEgY29tbWVudCBleHBsYWluaW5nIHRoYXQgaXQgd2FzIHJlbW92ZWQsIGFuZCB0aGF0IGl0IHdpbGwgYmUgbWFudWFsbHkgY2hlY2tlZCBhbmQgZWl0aGVyIHJlaW5zdGF0ZWQgb3IgYSByZWFzb24gZm9yIGl0cyByZW1vdmFsIGdpdmVuLiBJIGdvaW5nIHRvIHJldmlldyB5b3VyIHBvc3Qgbm93Li4gCllvdSBkb24gaGF2ZSB0aGUgYW5zd2Vycy4gWW91IGRvIGhhdmUgcHJvYmxlbXMuIEdvIHdpdGggYSBzZW5zZSBvZiBodW1pbGl0eSBhbmQgZGlzY292ZXJ5LiBZb3UgYWxyZWFkeSBlYXRpbmcgb3V0IG9mIGNvbnRyb2wsIHNvIHdoYXQgZG8geW91IGhhdmUgdG8gbG9zZT8gWW91IGNhbiBmaWdodCBzb21ldGhpbmcgZ29vZCBvciB5b3UgY2FuIGFwcGx5IGl0IHRvIHlvdXIgcHJvYmxlbXMuCkl0IHdhcyBhIG1ham9yIGV4cG9ydCBvZiBSb21hbiBpbmR1c3RyeSBhbmQgdGhlIGVjb25vbWllcyBvZiB3aG9sZSByZWdpb25zIHRocml2ZWQgb3IgZGllZCBieSBpdC5OYXR1cmFsbHksIHRoZSByZWNpcGUgaXMgbG9zdCB0byB0aW1lIGFuZCBoaXN0b3J5LCBhYWF1dWdoLiAKTXVjaCBtdWNoIGxhcmdlciB0aGFuIGhhZCBldmVyIGJlZW4gaW50ZW5kZWQgYnkgdGhlIGZvdW5kZXJzIGJlY2F1c2Ugd2hhdCBkcml2ZXMgdGhlIGRpc3Byb3BvcnRpb24gaXMgY2hhbmdlcyB0aGF0IHdlcmUgbWFkZSBhZnRlciB0aGUgd3JpdGluZyBvZiB0aGUgY29uc3RpdHV0aW9uLldpdGhvdXQgdGhlIGNvbGxlZ2UgaXQgd291bGQgYmUgc2lnbmlmaWNhbnRseSBiZXR0ZXIuIENhbmRpZGF0ZXMgd291bGQgYmUgZm9yY2VkIHRvIGNhbXBhaWduIGFjcm9zcyB0aGUgY291bnRyeSB0byBkcml2ZSB1cCB0aGVpciB2b3Rlcy4gRXZlcnkgdm90ZSB3b3VsZCBub3cgY291bnQgc28geW91IGNvdWxkIHNlZSBhIFJlcHVibGljYW4gY2FtcGFpZ25pbmcgaW4gUmhvZGUgSXNsYW5kIGJlY2F1c2UgdGhlIHJlcHVibGljYW5zIHRoZXJlIHdpbGwgbm8gbG9uZ2VyIGJlIGVzc2VudGlhbGx5IGRpc2VuZnJhbmNoaXNlZCBieSB0aGUgZWxlY3RvcmFsIGNvbGxlZ2UuIApMZWFybmluZyB0byBwaWNrIHlvdXIgYmF0dGxlcyBpcyBhbiBpbXBvcnRhbnQgcGFydCBvZiBtYXJyaWFnZS4gSW4gbXkgb3BpbmlvbiwgdGhpcyBpcyBhIGJhdHRsZSB3b3J0aCBmaWdodGluZy4gCkRlcGVuZHMgd2hhdCBPUCB3YW50ZWQgdG8gZG8uIFNpZ2h0c2VlaW5nPyBIaXN0b3JpY2FsIHN0dWZmPyBUaGUgS29yZWFuIHdhciBkZXN0cm95ZWQgbW9zdCBoaXN0b3JpY2FsIHRoaW5ncyBhbmQgS29yZWFucyB0ZW5kIHRvIGRpc2xpa2Ugb2xkIGJ1aWxkaW5ncyBhbnl3YXlzICAgU2VvdWwgaXNuIGdvb2QgZm9yIHRoYXQuIFRoZXJlIHRoZSBuYXR1cmUgYXNwZWN0ICAgaGlraW5nIGJ1a2hhbnNhbiBvciBzaW1pbGFyICAgYnV0IHRoYXQgbm90IGdvb2QgZm9yIHdpbnRlci4KT2gsIHRoZXJlIHdhcyB0aGUgb2NjYXNpb25hbCB3b21hbiBpbiBhIGJyaWRhbCBnb3duICAgdGhhdCB3b3VsZCBiZSBXYW5kYSBIaWNrcyBvZiBNYXJ5bGFuZCwgd2hvIGFjdHVhbGx5IGdvdCBwdXQgdGhyb3VnaCB0byB0aGUgbmV4dCByb3VuZCBhZnRlciBzaW5naW5nIGFuIG9yaWdpbmFsIHNvbmcuCkxhZHkgR2FHYSksIENoYW5naW5nU2tpZXMsIERvIE1lIFJpZ2h0IChmZWF0LiBMYWR5IEdhR2EpLCBHcmVhdGVzdCwgSG9sbHl3b29kIFtMaXZlQXQgdGhlIEJpdHRlciBFbmQgMS8yMC8wNl0gLFNvbWV0aW1lcyAuIDkzKSAzIFdheSAoVGhlR29sZGVuIFJ1bGUpIFtmZWF0LiAKSSBicmluZyBhIGJhY2twYWNrIGV2ZXJ5d2hlcmUuIEkgaGF2ZSBhIG1hbiBwdXJzZSBhbmQgSSBsb3ZlIGl0LiBJdCBoZWxwcyBtYWludGFpbiB0aGUgY29udHJvbC4gCllvdSBsZWFybiBhIGxvdCEuIApJdCBzbGlnaHRseSBkb3dubWFya2V0IGZyb20gdGhlIHVzdWFsbHkgb3B1bGVudCBIdWF5IEtod2FuZyBkZW5zIGJ1dCB0aGF0IG1pZ2h0IGJlIHdoYXQgeW91IHdhbnQgaWYgdGhlIGJpZ2dlci9wbHVzaGVyIHBsYWNlcyBsb29rIGEgYml0IGZvcmVib2RpbmcuIApUaGUgYXJndW1lbnQgY291bGQgYmUgbWFkZSB0aGF0IHRoZSBTUlQ0IGlzIHN1Y2ggYSByYXJlIHNpdGUgYW5kIHF1ZXN0aW9uYWJsZSBjaG9pY2UgdGhhdCBpdCBkb2Vzbid0IHJlYWxseSBjb3VudCwgbm90IHRvIG1lbnRpb24gdGhhdCBpdCBpcyBxdWl0ZSBhbiBhd2Z1bCBkcml2ZS4uIApTbWFsbCBidXNpbmVzc2VzIG9wcG9zZSAzMDAgYW5kIDMwMQpUaGUgUGxheTogRGVhbCB0d28gZG93biBhbmQgb25lIHVwIHRvIGV2ZXJ5IHBsYXllciBhbmQgbGF5IHRocmVlIGNvbW11bml0eSBjYXJkcyBpbiB0aGUgbWlkZGxlLiBCZXRzIGFyZSBtYWRlIGJldHdlZW4gZWFjaCBkZWFsLiAKVGhlIG1vYmlsZSBzaXRlIGlzIGFsbW9zdCBleGFjdGx5IHRoZSBzYW1lIGFzIHRoZSByZWd1bGFyIHNpdGUgZXhjZXB0IHRoZXkgcmVtb3ZlZCB0aGUgY2hhdCBmZWF0dXJlLCBwcmVzdW1hYmx5IGJlY2F1c2UgaXQgdGFrZXMgdXAgdG9vIG11Y2ggc2NyZWVuIHNwYWNlLiAKWWVzIHRvIGJvdGguIFRoZSBsYXR0ZXIganVzdCBtYWtlcyBtZSB1bmNvbWZvcnRhYmxlIGluIHRoZSB3aG9sZSBzZXh1YWxpemluZyBhIG1pbm9yIHRoaW5nLCBidXQgSSBndWVzcyBJIGRpZCBzb3J0IG9mIGVuam95IGhlciBpbiB0aGUgZm9ybWVyLiBSYWNoZWwgV2Vpc3opLCBidXQgSSBjb3VsZG4gcmVhbGx5IHBpY3R1cmUgc29tZWJvZHkgZWxzZSBpbiB0aGF0IHJvbGUuIApJdCBhIHJlYWwgc3RyYW5nZSBzaXR1YXRpb24gd2hlcmUgdGhlIHBlb3BsZSB3aG8gYm90aGVyIHRvIGJ1eSB0aWNrZXRzIGFuZCBzaG93IHVwIHRvIHRoZSBsaXZlIGV2ZW50IGFyZSBzb21laG93ICJub3QgcmVhY3RpbmcgY29ycmVjdGx5IHRvIHRoZSB0aGluZyB0aGV5IHBhaWQgZm9yIi4gQ3Jvd2RzIGNhbiBiZSBsYW1lLCBJIGd1ZXNzLCBidXQgdGhlIGNyb3dkIGlzIHRoZXJlIHRvIGJlIHNwb3J0cyBlbnRlcnRhaW5lZCwgbm90IG5lY2Vzc2FyaWx5IGJlIHBhcnQgb2YgdGhlIHNwb3J0cyBlbnRlcnRhaW5tZW50LiAKTGVhc2luZyBpc24gYSBubyBicmFpbmVyIGJhZCBmaW5hbmNpYWwgbW92ZS4gClNvIG15IDIwMTcgR3JvbSB3aXRoIDE1SyBrbSBvbiB0aGUgb2RvIHN1ZGRlbmx5IGxvc3QgYWxsIHBvd2VyIHRoZSBvdGhlciBkYXkuIEkgd2FzIGhlYWRpbmcgZG93biBpbnRvIGEgcGFya2luZyBsb3QgYW5kIG5vdGljZWQgdGhhdCBteSBkYXNoIHdhcyBvZmYuIApCZWNhdXNlIGl0cyBhcyBpZmYgZXZlcnl0aGluZyBpcyBmcm96ZW4gd2hpbGUgeW91IGFyZSBkb2luZyB0aGUgc2NhbnMuIApPbiBoZXIgb2ZmaWNpYWwgQmlnIEJyb3RoZXIgYmlvIG9uIENCUycgaG9tZXBhZ2UsIEF1ZHJleSwgYSAyNSB5ZWFyIG9sZCBtZWRpYSBjb25zdWx0YW50IGZyb20gVmlsbGEgUmljYSwgR2EuLCBzYXlzIGhlciAibmVyZHkgaG9iYmllcyIgaW5jbHVkZSBhc3Ryb2xvZ3ksIHJlYWRpbmcgInBoaWxvc29waGljYWwgY29udGVudCIgYW5kIGRvaW5nIG91dGRvb3JzeSBhY3Rpdml0aWVzIHN1Y2ggYXMgY2FtcGluZy4gU2hlIGFsc28gZmFuY2llcyBoZXJzZWxmIGEgZm9vZGllIGFuZCAidGhlIEJleW9uYyBvZiBteSBsaWZlIHN0b3J5LiIgQWNjb3JkaW5nIHRvIGhlciBiaW8sIEF1ZHJleSBjb25zaWRlcnMgaGVyIG1vbSBhbmQgZGFkIGhlciBiZXN0IGZyaWVuZHMgYW5kIGhhcyB3b3JrZWQgYXMgYSBwaXp6YSBkZWxpdmVyeSBwZXJzb24gYW5kIGFuIE1NQSBSaW5nIEdpcmwuClRoZSBCcm9va2x5biBkaXN0cmljdCBhdHRvcm5leSdzIG9mZmljZSBzYWlkIGl0IHdhcyBpbnZlc3RpZ2F0aW5nIGFuZCBob3BlZCB0byByZWFjaCBhIHN3aWZ0IGRlY2lzaW9uIG9uIHdoZXRoZXIgdG8gcHJvc2VjdXRlIEhlYWRsZXkuCkkgdGhvdWdodCB0aGUgZ2FtZXMgd2VyZSBhY3R1YWxseSBlYXNpZXIgaW4gdGhlIG1vcm5pbmcgYW5kIGRheSBjb21wYXJlZCB0byBuaWdodC4gSXQgbm90IGxpa2UgdGhlIG5pZ2h0IGdhbWVzIHdlcmUgaGFyZCBwZXIgc2UsIGJ1dCB0aGUgeW91bmcgcmVndWxhcnMgc2VlbWVkIHRvIHNldCB1cCBhbmQgbW9yZSBvZiB0aGUgdG90YWxseSBjbHVlbGVzcyBwbGF5ZXJzIGhhZCBsZWZ0IGJ5IHRoZW4uIApJdHMgc2ljayByZWFsbHkuIEkgdGhpbmsgSSBzdGFydGluZyB0byBnZXQgd2hvIHdlIGFyZSBhbmQgeW91IG1heSBoYXZlIGp1c3QgYWNjaWRlbnRhbGx5IGdpdmVuIG1lIGEgcmVhc29uIHRvIG5vdCB3YW50IHRvIGJlIGFuIEFtZXJpY2FuIGFueW1vcmUuIApUaGUgd29yZCBoZWFkaW5nIGhhcyB2YXJpb3VzIG1lYW5pbmdzOiAgSW4gY29tcHV0aW5nLCBhIGhlYWRpbmcgaXMgdXNlZCB0byBwcm92aWRlIGhpZXJhcmNoaWNhbCBpbmZvcm1hdGlvbiBhYm91dCBvdGhlciBpbmZvcm1hdGlvbi4gCkEgY2hpbGQgc2hvdWxkbiBiZSBhIHJpZ2h0LCBpdCBub3QgYW4gYWNjb21wbGlzaG1lbnQuIApSZWNlbnRseSBwbGF5ZWQgYSBjYXNoIGdhbWUgd2l0aCBmcmllbmRzIGFuZCBoYWQgYSBzaXR1YXRpb24gYXJpc2UuIApXaXRoIG92ZXIgMTgsMDAwIGVzdGltYXRlZCBuZXcgY2FzZXMgb2YgcHJvc3RhdGUgY2FuY2VyIHRvIGJlIGRpYWdub3NlZCBpbiAyMDE2LCBpdCBoYXMgbmV2ZXIgYmVlbiBtb3JlIGltcG9ydGFudCBmb3IgbWFsZXMgdG8ga2VlcCB0aGlzIHN5bXB0b21sZXNzIGRpc2Vhc2UgZnJvbnQgb2YgbWluZC4KQm9ybiBpbiBzbyBJIHdhcyBhIGtpZCB3aGVuIHRoaXMgd2VudCBkb3duLiAKSSB3aWxsIHJlcG9ydCBiYWNrIHdoaWNoIG9uZXMgSSBsaWtlIGJldHRlciBvbiB0aGUgR2F0ZXdvb2QuIApPbmUgdGhpbmcgdG8ga2VlcCBpbiBtaW5kIGlzIHRoYXQgdGhlIGNvbG9ycyBhcmUgYWxyZWFkeSBkZXRlcm1pbmVkIGZvciB5b3UuIFRoZXJlIGlzbid0IGFueSBzb3J0IG9mIGN1c3RvbWl6YXRpb24sIHdoaWNoIHRvIHNvbWUgbWF5IGZlZWwgbGlrZSBhIGRvd25mYWxsLiBIb3dldmVyLCBpZiB5b3UgZGVjaWRlIHRvIGdldCB0aGUgMjAwIFRleGFzIEhvbGQnZW0gUG9rZXIgQ2hpcCBTZXQgd2l0aCBDbGVhciBDb3ZlciBBbHVtaW51bSBDYXNlIHRoZXkgaGF2ZSBhbHJlYWR5IGNob3NlbiB0aGUgbW9zdCBwb3B1bGFyIG9uZSdzIGZvciB5b3UuIApIYXZpbmcgdGhlbSBpcyBhIGh1Z2Ugbm8gbm8uIAoxMi8wNy8yMDE4IDA2OjI3IFBNIE1TVCAgIEl0J3MgQ3Jvc3NGaXQsIHB1cmUgYW5kIHNpbXBsZS4gTm8gZ2ltbWlja3Mgb3IgaGlwc3RlciB2aWJlcy4gQ2xhc3NlcyBhcmUgc3BsaXQgaW50byB0d28gc2VjdGlvbnMsIGJlZ2lubmluZyB3aXRoIGxpZ2h0IHN0cmV0Y2hpbmcgb3Igd2FybSB1cCBleGVyY2lzZXMuIFRoaXMgaXMgZm9sbG93ZWQgYnkgYSBzdHJlbmd0aCBidWlsZGluZyBzZWdtZW50IHdoZXJlIHdlIGRpZCB3ZWlnaHRlZCBiYXJiZWxsIHNxdWF0cy4gTGFzdGx5LCB0aGUgbWV0YWJvbGljIGNvbmRpdGlvbmluZyBpbmNvcnBvcmF0ZWQgYSBjYXJkaW8gY29tcG9uZW50IGFsb25nc2lkZSB0aGUgc3RyZW5ndGggYnVpbGRpbmcuIEZ1bGwgU3RvcnkKSSdtIHN0aWxsIHJlYWxseSBwcm91ZCBvZiB3aGF0IHdlIGRpZC4gClRoaXMgaXMgdGhlIHNlY29uZCBpbiB0aGUgVGV4YXMgSG9sZGVtIFN0cmF0ZWd5IFNlcmllcywgZm9jdXNpbmcgb24gbm8gbGltaXQgVGV4YXMgSG9sZCdlbSBwb2tlciB0b3VybmFtZW50IHBsYXkgYW5kIGFzc29jaWF0ZWQgc3RyYXRlZ2llcy4gSW4gdGhlIGZpcnN0IGluc3RhbGxtZW50LCB3ZSBleGFtaW5lZCBhIHJlYWwgd29ybGQgdG91cm5hbWVudCBzY2VuYXJpbyBhbmQgaG93IHRvIGhhbmRsZSBhIHBhcnRpY3VsYXIgY2xhc3Mgb2YgZGlmZmljdWx0IHBsYXllcnMgICB0aGUgIm1hbmlhY3MiLCBhZ2dyZXNzaXZlLCB3aWxkIHBsYXllcnMgdGhhdCBhcmUgY29tbW9ubHkgZW5jb3VudGVyZWQgaW4gdG9kYXkncyBwb2tlciB0b3VybmFtZW50IHZlbnVlcy4KVGhpcyBpcyB0aGUgZW5kIHByb2R1Y3Qgb2YgdGhlIGNvbnN0cnVjdGlvbjpBbmQgdGhpcyBpcyBhIHNtYWxsICQxNSBtaWxsaW9uIHVwZ3JhZGUgdnMgdGhlIDIuMSBiaWxsaW9uIE9QcyBhcnRpY2xlIGlzIGRpc2N1c3NpbmcuCiJJIGRpZCBsb3ZlIHBsYXlpbmcgcG9rZXIgYmVjYXVzZSBpdCBhZmZvcmRlZCBtZSB0aW1lIHdpdGggbXkgZGF1Z2h0ZXIsIiBNaWtrbyBleHBsYWlucy4gClN0dXBpZCBwYWlyJ3MgcG9raWUgdGhlZnQKSWYgdGhlIGNhcmRzIHlvdSBzZWUgYXJlIGEgcG9rZXIgY29tYmluYXRpb24sIGl0IHdpbGwgYmUgZGlzcGxheWVkIG9uIHRoZSBzY3JlZW4uIFlvdXIgYmVzdCBwb2tlciBoYW5kIHdpbGwgYmUgYXV0b21hdGljYWxseSBzZWxlY3RlZC4gSWYgeW91IGJldCBvbiB0aGUgQUEgc2lkZSBnYW1lLCB0aGVuIGlmIHlvdSBoYXZlIG9uZSBwYWlyIG9mIEFjZXMgb3IgaGlnaGVyLCB5b3Ugd2lsbCBoYXZlIHdvbiB0aGUgQUEgYmV0LiAKSXQgaXMgdW5pcXVlIGluIGl0cyBmb3JtdWxhdGlvbi4gCk5ldGZsaXggaXMgZ3JlYXQgYW5kIGV2ZXJ5dGhpbmcsIGVzcGVjaWFsbHkgd2hlbiAiY2hpbGxpbiciIGlzIGludm9sdmVkLCBidXQgaXQgd29uJ3QgcG9saXNoIHlvdXIgc29jaWFsIHNraWxscyBhbmQgSSBiZXQgeW91J3ZlIGFscmVhZHkgc2VlbiBldmVyeSBlcGlzb2RlIG9mIFRoZSBPZmZpY2UsIEJsYWNrIE1pcnJvciBhbmQgU3RyYW5nZXIgVGhpbmdzIGEgdGhvdXNhbmQgdGltZXMuIEluc3RlYWQsIGdvIGNoZWNrIG91dCB0aGUgbGF0ZXN0IGZpbG1zIGluIENIRU0gMTQwIG9uIGNhbXB1cy4gClZpZXcsIEFuZHJvaWQgeDg2IDYuMCAgIFJlbWl4IE9TIGZvciBQQyAgIDY0IGJpdCAoTGVnYWN5IEVGSSksIEZlYiAxMiwgMjAxOCwgODo0MSBBTSwgQ2hpaCBXZWkgSHVhbmcuIApNZWFud2hpbGUsIE1yLiBNYXkgaXMgYnVpbGRpbmcgaW52ZW50b3J5IGFzIHRoZSBwcm9kdWN0IHdpbGwgc29vbiBiZSBhdmFpbGFibGUgaW4gaHVuZHJlZHMgb2Ygc3RvcmVzLiBIZSBpcyBhbHNvIGRldmVsb3BpbmcgbmV3IHByb2R1Y3RzLiBIaXMgZWZmb3J0cyBoYXZlIG1hZGUgaGltIGEgZmluYWxpc3QgZm9yIE9udGFyaW8gQnVzaW5lc3MgQWNoaWV2ZW1lbnQgQXdhcmRzIFlvdW5nIEVudHJlcHJlbmV1ciBvZiB0aGUgWWVhciB0aGlzIE5vdmVtYmVyIGFuZCBoZSBpcyBwcmVwYXJpbmcgdG8gcmVwcmVzZW50IENhbmFkYSBpbiB0aGUgZ2xvYmFsIEVOQUNUVVMgQnVzaW5lc3MgQ2hhbXBpb25zaGlwLCBhcyB3aW5uZXIgb2YgaXRzIG5hdGlvbmFsIGNvbXBldGl0aW9uIGVhcmxpZXIgdGhpcyB5ZWFyLgpJZiBJIHdhbnQgdG8gaGF2ZSBhIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBraWRzLCBJIGhhdmUgdG8gbWVldCB0aGVtIG9uIHRoZWlyIGxldmVsLiBJIGFsc28gaGF2ZSB0byBiZSB0aGUgb25lIHB1dHRpbmcgb3V0IHRoZSBlZmZvcnQgYmVjYXVzZSBhdCB0aGVpciBhZ2UsIGxpa2UgeW91IHNhaWQsIGl0IGFsbCBmb3J0bml0ZSwgZnJpZW5kcywgYW5kIFlvdVR1YmUuLiAKUmVhZCB0aGUgRW50aXJlIEFydGljbGVIb3QgVG9vbHMgTWFyY2VsIEN1cmxpbmcgSXJvbnMgICBSZXZpZXcKQnV0IG9uIGluY29tZSwgbm90IHRoZWlyIHdlYWx0aENvdW5jaWwgdGF4IG9uIGEgMTdtIGx1eHVyeSBtYW5zaW9uIGluIEJlbGdyYXZpYSwgTG9uZG9uPyAxLDM3Ni4gUGhvdG9ncmFwaDogVG9sZ2EgQWttZW4vQUZQL0dldHR5IEltYWdlc1dlIGtub3cgdGhhdCBnaWFudCBtdWx0aW5hdGlvbmFscyBhcmUgZW5nYWdlZCBpbiBpbmR1c3RyaWFsIHNjYWxlIHRheCBhdm9pZGFuY2UuIFdlIGtub3cgZnJvbSB0aGUgUGFuYW1hIGFuZCBQYXJhZGlzZSBwYXBlcnMgaG93IHNvbWUgaW5kaXZpZHVhbHMgd2lsbCB1c2UgZXZlcnkgb2Zmc2hvcmUgdHJpY2sgdG8gZG9kZ2UgdGF4ZXMuIApNQVJTSCwgUGV0ZXIgSXQgaXMgd2l0aCBkZWVwIHNhZG5lc3MgdGhhdCB0aGUgZmFtaWx5IGFubm91bmNlcyB0aGUgcGFzc2luZyBvZiBQZXRlciBNYXJzaCBvbiBNYXJjaCAyLCAyMDE0LCBhdCBTdC4gUGV0ZXIncyBIb3NwaXRhbCBpbiBIYW1pbHRvbiwgT250YXJpbywgaW4gaGlzIDcybmQgeWVhci4gSGUgaXMgc3Vydml2ZWQgYnkgaGlzIGJlbG92ZWQgd2lmZSBHd2VuLCBicm90aGVycyBEYXZpZCAoQ2Fyb2xpbmUpIGluIHRoZSBVSyBhbmQgUmljaGFyZCAoSGVsZW4pIGluIEF1c3RyYWxpYS4gCkkgYWxzbyBvbmx5IDc2IHJhbmdlZCBzbyB5b3Uga2lsbCB0aGVtIGV2ZW4gZmFzdGVyIHRoYW4gbWUuLiAKSSBzYXlpbmcgdGhpcyBiZWNhdXNlIEkgZGlkbnQga25vdyB5b3UgbWZzIGhhZCBmcm96ZW4gcmVhZHkgbWVhbHMsIGxpa2Ugd2hhdCBldmVuIGlzIHRoYXQgc2hpdC4gWW91IGhhdmUgc29tZXRoaW5nIHRoYXQgZnJvemVuIHNvbGlkLCBleHBlY3QgdG8gcHV0IGl0IGluc2lkZSBhIG1pY3JvIGZvciAzIG1pbnV0ZXMgYW5kIGZvciBpdCB0byBiZSBtYWdpY2FsbHkgY29va2VkPz8gSWYgdGhlIGluc3RydWN0aW9ucyBzYXkgdGhhdHMgaG93IHlvdSBjb29rIGl0LCB0aGVuIHRoZSBwcm9kdWN0IHdhcyByZXRhcmRlZCB0byBzdGFydCB3aXRoLCBzb24uIApBbmQgdGhlcmUgd2FzIGFub3RoZXIgaW50cmlndWluZyBibG9vZCB0cmFpbCB0aGF0IGFsd2F5cyB0cm91YmxlZCBwb2xpY2UuICJUaGVyZSB3ZXJlIGZvb3RwcmludHMgdGhhdCBsZWQgZnJvbSBDaGFybGVuZSB0byBFcm5lc3QuIApOb25lIG9mIHlvdXIgc3Rvcnkgb3IgeW91ciBhbnN3ZXIgc2VlbXMgdG8gZml0LiBUaGFuayB5b3UgdmVyeSBtdWNoIGZvciB5b3UgZmVlZGJhY2sgdGhvdWdoLCBhbmQgSSB3aWxsIGF3YWl0IGFkZGl0aW9uYWwgZmVlZGJhY2suLiAKVGhlIHN5c3RlbSByZW1vdmVzIGNhcmJvbiBkaW94aWRlLCBoeWRyb2dlbiBzdWxwaGlkZSwgd2F0ZXIgYW5kIGNvbnRhbWluYW50cyBmcm9tIHRoZSBiaW9nYXMuIApSZWFsbHkgZXhjaXRpbmcgdG8gc2VlLkEgZ3JvdXAgZnJvbSB0aGUgV2hpdGUgRmVtaW5pc3RzOiBTdG9wIFJpZ2h0IE5vdywgVGhhbmsgWW91IFZlcnkgTXVjaCBwYW5lbCBhdCB0aGUgMjAxOCBHcm93aW5nIFJvb20gRmVtaW5pc3QgTGl0ZXJhcnkgRmVzdGl2YWwuIFNlZW4gb24gc3RhZ2UgYXJlIChsZWZ0IHRvIHJpZ2h0KSBDaGVsZW5lIEtuaWdodCwgR3dlbiBCZW5hd2F5LCBKaWxsaWFuIENocmlzdG1hcywgU2lsdmlhIE1vcmVubyBHYXJjaWEgYW5kIElqZW9tYSBPbHVvLiBUaGlzIHllYXIncyBmZXN0aXZhbCBydW5zIE1hcmNoIDggMTcuIAoiSSBhbSBkZWxpZ2h0ZWQsIHRoYXQgaXMgb3VyIHRoaXJkIGF3YXkgd2luIG9uIHRoZSB0cm90LiAKSWwgbGliZXJvIGFyYml0cmlvIGRlbGwgIHNlbXByZSBwaSBjb21wcmVzc28sIGRlcG90ZW56aWF0byAgZGEgbWFuaXBvbGF0b3JpIGRpIHNpbWJvbGkgcGVyIGZpbmkgcHVyYW1lbnRlIG1hdGVyaWFsaXN0aWNpLiBQcm9wcmlvIHBlciBwb3NzZWRlcmUgdGFudGUgaW51dGlsaSBjb3NlLCBwZXIgc29kZGlzZmFyZSBxdWVpIGJpc29nbmkgY2hlIGNpIHZlbmdvbm8gaW5zdGlsbGF0aSBuZWwgcHJvZm9uZG8gKCBzZW56YSBjaGUgbCBzaSByZW5kYSBjb250byBkaSBlc3NlcmUgbWFuaXBvbGF0byksIHNpYW1vIHNwaW50aSBhIHJpY29ycmVyZSB0YWx2b2x0YSBhbmNoZSBhbGxlIGFybWksIGFsbGEgdmlvbGVuemEsIGFsbGEgZ3VlcnJhLCBhbGxhIGRyb2dhLi4gCkp1c3Qgc3Vydml2ZS4gCkluIHRoZSBiZWdpbm5pbmcgb2YgdGhlIFNpdCBhbmQgR28gVGV4YXMgSG9sZCdFbSBwb2tlciB0b3VybmFtZW50IHlvdSBhcmUgYWR2aXNlZCB0byBwbGF5IHRpZ2h0LiBJbiB0aGUgYmVnaW5uaW5nIG9mIHRoZSB0b3VybmFtZW50IHlvdSBkbyBub3Qgd2FudCB0byBsb3NlIGhhbmRzIGFzIHlvdSB3aWxsIHN1cmVseSBmaW5kIHlvdXJzZWxmIHNob3J0IHN0YWNrZWQgd2hlbiB0aGUgYmxpbmRzIGluY3JlYXNlLiBUaGlzIG1lYW5zIHlvdSBjYW4gZm9yZ2V0IGFib3V0IGJsdWZmaW5nIGFsc28uIAoiSm95Y2UgbWV0IEhlbWluZ3dheSBpbiBQYXJpcyBkdXJpbmcgdGhlIDE5MjBzLiBCb3RoIHJlbm93bmVkIGhlYXZ5IGRyaW5rZXJzLCB0aGV5IGJlZ2FuIHRvIGZyZXF1ZW50IGNhZmVzIGFuZCBiYXJzIHRvZ2V0aGVyLiBXaGlsZSBKb3ljZSB3YXMgdW5hdGhsZXRpYyBhbmQgaGFkIGZhaWxpbmcgZXllc2lnaHQsIGhpcyBkcmlua2luZyBjb21wYW5pb24gd2FzIHRhbGwsIHN0cmFwcGluZyBhbmQgcHJvbmUgdG8gdmlvbGVudCBvdXRidXJzdHMuIApPdmVydmlldyBmb3IgcXVhZHNob2NrCkxvdWRuZXNzIGlzIHdoYXQgcGVvcGxlIGFzc3VtZSB0byBiZSB2b2x1bWUuIApFdmVuIG9uIGFjY2lkZW50LiAKTlRBIGF0IGFsbC4gWW91ciBnaXJsZnJpZW5kIGlzLiAKTm8gRWxpdGUgUmVzdWx0cyBpbiBUaXRsZXMuIFBsZWFzZSBkbyBub3QgcG9zdCBlbGl0ZSByYWNlIHJlc3VsdHMgaW4gdGhlIHRpdGxlIG9mIHBvc3RzLiBUaGlzIGluY2x1ZGVzIHRoZSBhbm5vdW5jaW5nIG9mIHdvcmxkIHJlY29yZHMgaW4gdGl0bGVzLgpFeGVyY2lzZSBEZXNwaXRlIHRoZSBhY2hpbmcgYW5kIHBhaW4gdGhhdCBhcnRocml0aXMgYnJpbmdzLCBub3QgZXhlcmNpc2luZyBpcyBwb3NzaWJseSB0aGUgd29yc3QgdGhpbmcgYSBwZXJzb24gd2l0aCBhcnRocml0aXMgY2FuIGRvLiAKVGhpcyBtZWFucyBJIGhhdmUgd2F0Y2hlZCAxLjcgZXBpc29kZXMgYSBkYXkuIApUd28gcmVjZW50IExhYm91ciBsZWFkZXJzaGlwIGNvbnRlbmRlcnMsIFNoYW5lIEpvbmVzIGFuZCBHcmFudCBSb2JlcnRzb24sIG5hbWVkIGhpbSBhcyB0aGVpciBwb2xpdGljYWwgaGVybywgd2hpbGUgRGF2aWQgQ3VubGlmZmUgY2FycmllZCBhIHBvcnRyYWl0IG9mIGhpbSBhdCBXYWl0YW5naS4gQ3VycmVudCBsZWFkZXIgQW5kcmV3IExpdHRsZSBzcG9rZSBhdCBhIHNlbWluYXIgb24gS2lyayBpbiAyMDEyLlRoZXJlIGlzIG11Y2ggaW4gRGF2aWQgR3JhbnQgYmlvZ3JhcGh5IG9mIEtpcmssIFRoZSBNaWdodHkgVG90YXJhLCBwdWJsaXNoZWQgaW4gMjAxNCwgdGhhdCBleHBsYWlucyB0aGVpciBhZG1pcmF0aW9uLiBJbiBwYXJ0aWN1bGFyLCBpZiB0aGVyZSBpcyBvbmUgdGhpbmcgdGhhdCBzZXRzIEtpcmsgYXBhcnQsIGl0IHdhcyBoaXMgYWJpbGl0eSB0byBkcmVhbSBiaWcsIGVzcGVjaWFsbHkgaW4gZm9yZWlnbiBwb2xpY3kuIApZZXMsIEkgc3VjayBhbmQgSSBrbm93IGl0IGJ1dCB0cnkgdG8gaGVscCB3aGVuIEkgY2FuLiBIZWxwIG1lIGhlbHAgeW91LiAKWW91IG1heSBhbHNvIGhhdmUgYSB2aXJ1cy4gSSB3b3VsZCBzdWdnZXN0IHRhbGtpbmcgdG8gYSBkb2N0b3IuIApJJ2xsIGZyZXF1ZW50bHkgaGF2ZSBhIHNuYWNrLCB3YXRlciwgcGhvbmUgY2hhcmdpbmcgY2FibGUgYW5kIGFuIGV4dHJhIGJhdHRlcnksIGhlYWRwaG9uZXMsIHRpc3N1ZXMsIGFuZCBqdXN0IHNwYWNlIGZvciBjYXJyeWluZyB0aGluZ3MuIE15IHdpZmUgZGlkbid0IGxpa2UgbWUgY2FycnlpbmcgYSBzb21lIHBsYWNlcyBhdCBmaXJzdCBiZWNhdXNlIFNIRSB3b3VsZG4ndCBlbmpveSBjYXJyeWluZyBpdCwgYnV0IHJlYWxpemVkIEkgd2FzIGRlYWxpbmcgd2l0aCBpdCBhbmQgbm90IHB1dHRpbmcgdGhhdCBvbiBoZXIuIEFuZCBJIG9uY2UgdXNlZCBpdGVtcyBpbiBteSBiYWcgdG8gTWNHeXZlcmVkIGEgaG9vayBhbmQgbGluZSB0byBmaXNoIGEgY2FtZXJhIG91dCBvZiBhIHdlaXJkIHNwYWNlIHNoZSBoYWQgZHJvcHBlZCBpdCBpbiB0aGUgbW9ub3JhaWwgYXQgRGlzbmV5bGFuZC4gClBva2VyJ3Mgc3ByZWFkIHdhcyB0aGUgcmVzdWx0IG9mIGEgZ2VuZXJhbCBzcHJlYWQgb2YgZ2FtYmxpbmcgZHVyaW5nIHRoZSBlcmEuIApXaWxsIHRoZSBtaWxpdGFyeSBpbmR1c3RyaWFsIGVjb25vbXkgYmUgYnJvdWdodCB1bmRlciBjb250cm9sIGluIHRpbWUgdG8gc2F2ZSB0aGUgYWN0dWFsIGVjb25vbXk/IE5vdCBpZiBPYmFtYSBmaXJzdCBtaWxpdGFyeSBzcGVuZGluZyBwcm9wb3NhbHMgYXJlIGFueSBpbmRpY2F0b3IuIFBlcmhhcHMgb25seSB3aGVuIGVub3VnaCBvZiB1cyBkZW1hbmQgdGhhdCB0aGUgZmFyZXdlbGwgd29yZHMgb2YgdGhlbiBQcmVzaWRlbnQgRHdpZ2h0IEQuIApGb3IgYSBjb25zZXJ2YXRpdmUgaW52ZXN0b3IsIG9yIHNvbWVvbmUgd2hvIGZpZ3VyZXMgdGhleSBtYXkgd2VsbCBsaXZlIHRvIDEwMCBhbmQgZWFybiBhbiBldmVuIGhpZ2hlciBvbiBkZWZlcnJpbmcsIENQUCBkZWZlcnJhbCBjYW4gYmUgYmV0dGVyIHRoYW4gYSBsb3Qgb2YgUlJTUCBpbnZlc3RtZW50IG9wdGlvbnMuLiAKIDE5IHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvSSBoYWQgYSBzaW1pbGFyIGV4cGVyaWVuY2UuIE15IHVuaXZlcnNpdHkgaXMgZGl2aWRlZCBpbnRvIHNpeCBzY2hvb2xzIGZvciB1bmRlcmdyYWRzIChqb3VybmFsaXNtLCBlZHVjYXRpb24sIGVuZ2luZWVyaW5nLCBtdXNpYywgYXJ0cyBhbmQgc2NpZW5jZXMsIGFuZCBjb21tdW5pY2F0aW9uL3RoZWF0cmUpLiAKQSBkb3duZ3JhZGUgdG8gYSBsYXB0b3Agd2l0aCBhIDEwNTAgVGkgYW5kIHRodXMgY2hlYXBlciBsYXB0b3BzIHdvdWxkIG1lYW4gdGhhdCBmb3IgbWFueSBnYW1lcyB5b3UgaGF2ZSB0byBwbGF5IG9uIG1lZGl1bSBvciBsb3dlciBzZXR0aW5ncyB0byBnZXQgNjBmcHMgaWYgYXQgYWxsIHBvc3NpYmxlIGFzIHRoZXJlIGlzIGEgYmlnIGdhcCBpbiBwZXJmb3JtYW5jZSBiZXR3ZWVuIHRoZSAxMDUwIChUaSkgYW5kIHRoZSAxMDYwLgoxLDE4NiBWaWV3cy4gCk5vdCB0byBzYXkgdGhhdCBjYXNpbm9zIGFyZSB0aGUgZmlyc3QgcGFyYXNpdGUgd2l0aCBwbHVtYmluZywgYW4gZXhwbG9pdGF0aW9uIG9mIGhvcGUgcmVwcmVzZW50aW5nIHRoZSBkZWF0aCBieSBjcnVjaWZpeGlvbiBvZiB0aGUgQW1lcmljYW4gRHJlYW0sIGJ1dCB0aGV5J3JlIHBsYW5uaW5nIHRoZSAiTWFzb24gRGl4b24gQ2FzaW5vIiBieSB0aGUgZmllbGRzIG9mIEdldHR5c2J1cmcuIElmIHlvdSBkb24ndCBzZWUgYSBwcm9ibGVtIHdpdGggdGhhdCwgY29uZ3JhdHVsYXRlIHlvdXIgcGFyZW50cyBvbiBiZWluZyB0aGUgbGFzdCBnZW5lcmF0aW9uIG9mIGFjdHVhbCBBbWVyaWNhbnMgYXMgb3Bwb3NlZCB0byBzZWxmIHBvd2VyZWQgZGVidCBzaW5rcy4KTW9zdCBwb2tlciByb29tcyBoYXZlIGEgcGxhY2UgdG8gc2lnbiBhIHdhaXRpbmcgbGlzdCBmb3IgYSBwYXJ0aWN1bGFyIGdhbWUuIFNvbWUgaGF2ZSBhIHdoaXRlIGJvYXJkIHdpdGggdGhlIGdhbWVzIGFuZCBsaW1pdHMgYXZhaWxhYmxlIGFsb25nIHdpdGggdGhlIHdhaXRpbmcgcGxheWVycycgaW5pdGlhbHMuIApIYXBweUZ1bk5vcm0gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpCbGFja3N0YWZmbG8gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KSnVzdCBiZWNhdXNlIGhlIHdhcyBhY3F1aXR0ZWQgb2YgdGhlIG11cmRlciBjaGFyZ2UgZG9lc24ndCBtZWFuIHRoZXkgY2FuJ3QgbWVudGlvbiB0aGF0IGhlIGJ1cm5lZCB0aGUgYm9keSBpbiBhIG11cmRlciB0cmlhbC4gSXQgb25seSBtZWFucyBoZSBjYW4ndCBiZSBjaGFyZ2VkIHdpdGggaXQgYWdhaW4uClN0YXJ3b29kIGN1cnJlbnRseSBvcGVyYXRlcyBmaXZlIGhvdGVscyBpbiBSdXNzaWEgYW5kIENJUywgaW5jbHVkaW5nOiBIb3RlbCBOYXRpb25hbCwgYSBMdXh1cnkgQ29sbGVjdGlvbiBIb3RlbCwgU2hlcmF0b24gUGFsYWNlIEhvdGVsLCBib3RoIGluIE1vc2NvdywgYW5kIHRoZSByZWNlbnRseSBvcGVuZWQgVyBTdC4gUGV0ZXJzYnVyZyBpbiBSdXNzaWEsIFNoZXJhdG9uIEJha3UgQWlycG9ydCBpbiBBemVyYmFpamFuIGFuZCBGb3VyIFBvaW50cyBieSBTaGVyYXRvbiBaYXBvcm96aHllLCBVa3JhaW5lLgpUYW1hZ3V0cyAgMSBwb2ludCAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpJdCBjb3VsZG4gcmVhbGx5IGZhaWwgdG8gYmUgZ29vZCBpbiB0aGUgc2Vuc2UgdGhhdCBzZXggd2l0aCBhIGhvdCAxOCB5ZWFyIG9sZCBpcyBhYm91dCBhcyBnb29kIGFzIGl0IGdldHMgb24gcGFwZXIuIFNvIHRoZSBsb29rIGFuZCBmZWVsIG9mIGl0IHdhcyB3b25kZXJmdWwsIGJ1dCBzaGUgc2FkbHkgcG9zc2Vzc2VkIHZlcnkgbGl0dGxlIGlkZWEgb2Ygd2hhdCB0byBkbyBhbmQsIGFzIG1lbnRpb25lZCBlYXJsaWVyLCBzZWVtZWQgYSBiaXQgbmVydm91cy4gClF1aXRlIGxpa2VseSwgaGUncyBhZGRpY3RlZCB0byBjcmFjaywgYW5kIHBvc3NpYmx5IGhlcm9pbiBhbmQgYWxjb2hvbC4gSWYgaGUncyBiZWVuIHNtb2tpbmcgY3J5c3RhbCBtZXRoLCBoZSBtYXkgYmUgcmF2aW5nLCBhbmQgZGFuZ2Vyb3VzLiAKT3ZlcnZpZXcgZm9yIFNpc2NvU3F1YXJlZApUaGUgaGFpcnMgb24gdGhlIGJhY2sgb2YgbXkgbmVjayBpcyBzdGFuZGluZyB1cC4gSSBrZWVwIGltYWdpbmluZyBzb21lb25lIHNuZWFraW5nIHVwIGJlaGluZCBtZS4uIApXaGF0IGFyZSB0aGUgb2RkcyBvZiBhIHN0cmFpZ2h0IGZsdXNoIGluIFRleGFzIEhvbGQnZW0KUGxlYXNlIHNob3cgdGhpcyB0byB5b3VyIGJvc3Mgc28gaGUgY2FuIHNlZSBob3cgd29lZnVsbHkgaW5lcHQgeW91IGFyZS4gClB1aXMsIGlsIHMnYWdpdCBkZSBiaWVuIHJlcHJlbmRyZSBsYSBkaXN0aW5jdGlvbiBlbnRyZSBsZXMgZGV1eCBhbGluYXMgZGUgY2V0IGFydGljbGUuIElsIGV4aXN0ZSB1bmUgaW1wb3J0YW5jZSBmb25kYW1lbnRhbGUgZW50cmUgbGVzIHRlcm1lcyAgYWJvbGkgIGV0ICBhbHRyIC4gUG91ciBlZmZlY3R1ZXIgdW5lIGJydmUgcHJzZW50YXRpb24gbG9yc3F1ZSBsZSBkaXNjZXJuZW1lbnQgZXN0IGFib2xpIChwcnZpc2lvbiBkdSAxZXIgYWxpbmEpLCBpbCBhIHRvdGFsZW1lbnQgZGlzcGFydS4gCkFjY29yZGluZyB0byBIb25nIEtvbmcncyBTb3V0aCBDaGluYSBNb3JuaW5nIFBvc3QgKFNDTVApLCB0aGUgbXVsdGlzdG9yeSBmYWNpbGl0eSBpcyAidGhlIHNpemUgb2YgdHdvIHNwb3J0cyBmaWVsZHMsIiBhbmQga2VwdCB3YXJtLCBkYXJrIGFuZCBodW1pZCB5ZWFyIHJvdW5kLi4gCllvdSByZXNlYXJjaCBnb29kIHN0cmF0ZWd5LCB5b3UgcmVmaW5lIHlvdXIgc3RyYXRlZ3ksIGJ1dCB5b3UgaGF2ZSB0byBrZWVwIGluIG1pbmQgdGhhdCBzd2luZ3Mgd2lsbCBoYXBwZW4uIApTdGVwIDU6IElmIHlvdSBoYXBwZW4gdG8gaGF2ZSAkNDUwICsgJDQ1IHlvdSBjYW4gYnV5IGluIHRvIHRoaXMgbGV2ZWwuIApbS2ltIHNheXMgdGhpcyBzb3J0IHByb3VkbHkgYW5kIHNtdWdseSwgbGlrZSBoZSB0aGlua3MgaXQgYSBodWdlIGhhbmQuIApNYW55IHBlb3BsZSBoYXZlIGEgdmFsaWQgY29uY2VybiBhYm91dCB0aGUgcG90ZW50aWFsIGhhcm0gdGhhdCByZXN1bHRzIGZyb20gaW5kaXNjcmltaW5hdGUgYW5kIHVuZGlzY2lwbGluZWQgdHJlYXN1cmUgaHVudGluZy4gT2Z0ZW4gYXJ0aWZhY3RzIGFyZSByZW1vdmVkIHdpdGhvdXQgYm90aGVyaW5nIHRvIGRvY3VtZW50IHRoZSBkaXNjb3ZlcnkgcHJvcGVybHkgYW5kIHRodXMgZWxpbWluYXRpbmcgdGhlIGhpc3RvcmljYWwgdmFsdWUgb2YgdGhlIGZpbmQuCkJyZWFzdCBpbXBsYW50CkhlIGlzIGluIGxvdmUgd2l0aCBoaXMgZmlhbmNlIEJlYXRyaXggJ0JlYScgRW1lcnkuIApBbHNvLCBCZXRGcmVkIGFsbG93cyBvbmUgZnJlZSBkZXBvc2l0IHBlciBkYXkgaWYgaXQgaXMgbWFkZSB3aXRoIE5ldGVsbGVyIG9yIFNrcmlsbCwgd2hpbGUgYWxsIGFkZGl0aW9uYWwgdHJhbnNhY3Rpb25zIGxlc3MgdGhhbiAxNzAgYXJlIHN1YmplY3QgdG8gYSAyLjklIGZlZS4gClRoZXJlIHdlcmUgdGltZXMgd2hlbiBJIHRob3VnaHQgaXQgd2FzIHJlY29yZGluZyBhbmQgaXQgd2FzbiBUaGVyZSB3ZXJlIHRpbWVzIHdoZW4gaXQgd2FzIG9mZiBhbmQgc3RhcnRlZCByYW5kb21seSByZWNvcmRpbmcuIFRoZSBwdXQgYmFkIGJhdHRlcmllcyBpbiB0aGVtIGFuZCB0aGV5IHRlbmRlZCB0byBleHBsb2RlIGlmIGNoYXJnZWQgZm9yIG1vcmUgdGhhbiA2MCBtaW51dGVzIHN0cmFpZ2h0LiAKV2hpbGUgaGUgZG9lc24ndCB3YW50IHRvIGxvc2Ugc2FsZXMgb3IgYSBib3ljb3R0IG92ZXIgdGhlIGFkLCAid2Ugd291bGQgbm90IGRpc2NvdXJhZ2UgY29udmVyc2F0aW9uIG9yIGRpc2N1c3Npb24gYmVjYXVzZSBvZiB0aGF0LCIgaGUgc2FpZC4KV2VkbmVzZGF5OiBtb3ZlIHRoZSBjb2V4IHRvIHRoZXJlLiBUaGVyZSBjb21lIGNvb2wgc3R1ZmYgdG8gZG8gYW5kIGl0cyByaWdodCBuZWFyIHRoZSBiYW5wbyBicmlkZ2UuIApQb2tlciBwcm9wb25lbnRzIGFyZ3VlIHRoYXQgaXQgd2lsbCBiZSBoYXJkZXIgZm9yIG9wcG9uZW50cyB0byBzdWdnZXN0IHRoYXQgUG9rZXJzdGFycyBpcyBhICJiYWQgYWN0b3IiIHdoaWNoIHNob3VsZCBiZSBiYW5uZWQgZnJvbSBDYWxpZm9ybmlhIGlmIHRoZSBjb21wYW55IGlzIGFjY2VwdGVkIGFzIGFuIGFjY2VwdGFibGUgYnVzaW5lc3MgaW4gYW5vdGhlciBzdGF0ZS5XaGlsZSB0aGVzZSByZWNlbnQgZGV2ZWxvcG1lbnRzIG9mZmVyIHRoZSBmaXJzdCBzaWduaWZpY2FudCBob3BlIGZvciBwb2tlciBwbGF5ZXJzIGluIENhbGlmb3JuaWEgaW4gcXVpdGUgc29tZSB0aW1lLCBpdCByZW1haW5zIHRvIGJlIHNlZW4gd2hldGhlciB0aGUgY29tcGV0aW5nIGludGVyZXN0cyB3aWxsIGJlIGFibGUgdG8gY29tZSB0b2dldGhlciBmb3IgYSBjb21wcm9taXNlIGFueSB0aW1lIHNvb24uLiAKSWYgeW91IGFyZSBhYmxlIHRvIGRvdWJsZSB1cCBlYXJseSBpbiBhIHRvdXJuYW1lbnQsIGl0IG5vdCBvbmx5IGdpdmVzIHlvdSBleHRyYSBjaGlwcywgYnV0IGl0IGFsc28gY2FuIGJlIGEgdHJlbWVuZG91cyBwc3ljaG9sb2dpY2FsIGFkdmFudGFnZSBieSBoYXZpbmcgYSBsYXJnZSBzdGFjay4gCkl0cyByaWNoIHBhdHRlcm4gaW4gZW1lcmFsZCBncmVlbiBib2FzdHMgYWxsIGZvdXIgY2FyZCBzdWl0cyBoZWFydHMsIGRpYW1vbmRzLCBzcGFkZXMgYW5kLCBjbHVicyBvbiBpdCBkZXNpZ24gYW5kIHNpbmNlIGl0J3Mgd2F0ZXIgcmVzaXN0YW50LCBkb24ndCB3b3JyeSBhYm91dCBkcmluayBzcGlsbGVycy4gVGhpcyBTdWl0ZWQgRW1lcmFsZCBUZXhhcyBIb2xkZW0gUG9rZXIgVGFibGUgQ2xvdGgsIHdpcGVzIHVwIGVhc2lseSBhbmQgcHJvdGVjdHMgeW91ciB0YWJsZSB1bmRlcm5lYXRoIGZyb20gd2VhciBhbmQgdGVhciwgc2NyYXRjaGluZyBvciB0aGUgZHJlYWRlZCBpcnJlbW92YWJsZSB3YXRlciBzdGFpbi4uIApBcm91bmQgdGhlIHNhbWUgdGltZSwgRXVyb3BlYW5zIGxlYXJuZWQgYWJvdXQgY29mZmVlIGZyb20gdGhlIE90dG9tYW4gRW1waXJlIGFuZCBkZXRlcm1pbmVkIHRoYXQgaXQgY291bGQgYmUgZ3Jvd24gaW4gdGhlIEFtZXJpY2FzLi4gClphYmRpZWwgSGVybmFuZGV6LCAxNSwgcm9sbHMgb3V0IGhpcyBtdXNjbGVzIG9uIGEgZm9hbSByb2xsZXIgZHVyaW5nIENyb3NzRml0IGd5bSBjbGFzcyBhdCBSYW5jaG8gSGlnaCBTY2hvb2wgaW4gTGFzIFZlZ2FzIG9uIFdlZG5lc2RheSwgU2VwdGVtYmVyIDEyLCAyMDEyLgpJIHNvcnJ5IHlvdSBoYWQgdG8gZ28gdGhyb3VnaCB0aGlzLiBCdXQgSSBrbm93IGl0IHBvc3NpYmxlIHRvIHJlIGludmVudCB5b3Vyc2VsZiBhbmQgZmluZCBoYXBwaW5lc3MgYmVjYXVzZSBJIGRpZC4KQmxpZ2ggd2FzIGEgcGlzcyBwb29yIGFkbWluaXN0cmF0b3IgYnV0IGEgdGFsZW50ZWQgbmF2aWdhdG9yLCBhbmQgSSBub3Qgc2F5aW5nIHRoZSBOb3JzZSBjb3VsZCBkbyB0aGUgc2FtZSwgYnV0IGl0IGEgcXVpdGUgcmVtYXJrYWJsZSBqb3VybmV5IGluIGFueSBjYXNlLi4gCkluIGxpdmUgcG9rZXIsIHRoZSBhcmRvciBvZiBiZWluZyBhIHBhcnQgb2YgYSBjb21iYXQgZ2VuZXJhdGVzIGFuIGV2ZW50IHRoYXQgbW9zdCBwbGF5ZXJzIHdvdWxkIHdhbnQgdG8gd2F0Y2ggZXZlcnkgZGF5LiBUaGVyZSBhcmUgdGhvc2UgcGxheWVycyB0aGF0IG5vIG1hdHRlciBob3cgbWFueSB0aW1lcyB0aGV5IGhhdmUgZXhwZXJpZW5jZWQgd2lubmluZyB0aGUgZ2FtZSwgdGhleSBzdGlsbCBmZWVsIHVuY29udHJvbGxhYmxlIGhlYXJ0YmVhdHMgaW4gZXZlcnkgZ2FtZS4KTWVhbndoaWxlLCBJIGFtIHRoaW5raW5nICJZb3VyIGh1c2JhbmQgbG9va3MgbGlrZSBRdWFzaSBNb3RvIi4gCk9uZSBvZiBteSBwbGF5ZXJzIGluIGEgY2FtcGFpZ24gSSByYW4geWVhcnMgYWdvIHBsYXllZCBhIEZyZW56aWVkIEJlcnNlcmtlciB3aG9zZSBwcmVmZXJyZWQgd2VhcG9uIHdhcyBhIGh1Z2Ugc3Bpa2VkIGNhYmVyLiBUb3dhcmRzIHRoZSBlbmQgb2YgdGhlIGNhbXBhaWduLCBoZSBsZWFwdCBmcm9tIHRoZSBwYXJ0eSBhaXJzaGlwIHRoYXQgd2FzIG92ZXIgdGhlIGNhbGRlcmEgb2YgYW4gYWN0aXZlIHZvbGNhbm8gdG8gYXR0YWNrIHRoZSBjb2xvc3NhbCBhbmNpZW50IG1hZ21hIGRyYWdvbiBkcmFjb2xpY2ggYm9zcyBiZWxvdywgcmlkaW5nIGhpcyBjYWJlciBkb3duIGxpa2UgTWFqb3IgS29uZyBpbiBEci4gCldvdywgdGhpcyBwb3N0IHJlYWxseSByZXNvbmF0ZXMgd2l0aCBtZS4gCk5vIGlkZWEgZXZlbiB3aGVyZSB0byBiZWdpbi4gVGhpcyB3YXNuIGFuIEl0YWV3YW4gdGhpbmcsIGl0IHdhcyB2ZXJ5IHVwcGVyIGVuZCBmcm9tIHdoYXQgSSBjb3VsZCBmaWd1cmUgb3V0LiBJIGhhZCBhIEtBVFVTQSB0ZWxsIG1lIGFib3V0IGl0IGFuZCB3aGVuIGhlIHNhdyBob3cgaW50ZXJlc3RlZCBJIHdhcywgZ290IGVtYnJhc3NlZCBhbmQgY2xhbW1lZCB1cC4gClRoZSB1bHRyYSByaWNoIGhhdmUgbmV2ZXIgZ2l2ZW4gYSBzaGl0IGFib3V0IHRoZSBjb21tb24gbWFuIGFuZCB0aGV5IG5ldmVyIHdpbGwuIEJ1dCBzb21laG93LCBwb29yIHBlb3BsZSBhcmUgc3RpbGwgaG9wZWZ1bCB0aGF0IHRoZSB1bHRyYSByaWNoIGNhcmUgYWJvdXQgdGhlbS4gCldlbGwsIGJlZm9yZSB5b3UganVtcCB0aGUgZ3VuLCBsZXQgdXMgdGVsbCB5b3UgdGhhdCBzaGUgY29uc2lkZXJzIEVtcmFhbiB1bmx1Y2t5IGluIGhlciBmYXZvdXJpdGUgZ2FtZSBQb2tlci4gCklmIHBlb3BsZSB3YW50IHRvIHB1dCB0aGVtc2VsdmVzIGludG8gdGhhdCBwb3NpdGlvbiBpbiBvcmRlciB0byBhZHZhbmNlIHNvY2lldHkgdGhlbiBldmVyeW9uZSBzaG91bGQgaGF2ZSBhIGNvbWZvcnRhYmxlIGVub3VnaCBwb3NpdGlvbiB0byBtYWtlIHRoYXQgZGVjaXNpb24gZnJvbS4gClRoZXJlIGFyZSBtYW55IG1ldGhvZHMgb2Ygc2VsZiBoeXBub3Npcy4gSGVyZSdzIG9uZSB0aGF0J3MgZmFpcmx5IGVhc3kuIENob29zZSBhIHBvc2l0aXZlIHN0YXRlbWVudCB0aGF0IGV4cHJlc3NlcyBhIGRlc2lyZS4gCkxhIGZtaW5pdCwgY2Ugbidlc3QgcGFzIHVuIHRhdCBmaWcsIGRmaW5pdGlmLCBjJ2VzdCB1bmUgZmFvbiBkZSBzZSBjb25zdHJ1aXJlIGV0IGRlIHNlIG1vZGVsZXIgZW4gam91YW50IGF2ZWMgc29pLCBhdmVjIHRvdXMgbGVzIHNvaSBwb3NzaWJsZXMuIEVsbGUgcmF5b25uZSBsb3JzcXVlIHNvbnQgZHBhc3NlcyBsZXMgcml2YWxpdHMgZGlwaWVubmVzLCBxdWUgbCdvbiBuZSBzZSBiYXQgcGx1cyBwb3VyIGxlIHByZSwgcG91ciBsJ2hvbW1lLCBhZmZpcm1lIE1hcnlzZSBWYWlsbGFudC4gCklmIGlmIHRoZSBPUCBkb2Vzbid0IGhhdmUgdGltZSB0byBoYW5nIG91dCBtb3JlIG1heWJlIHRoZXJlIGlzbid0IG11Y2ggb25lIG9uIG9uZSBjb252ZXJzYXRpb24gZWl0aGVyLiAKQXRsYW50aWMgQ2l0eSBDYXNpbm8gYW5kIEhvdGVsClRoZSBoaWdoIGNvbXByZXNzaW9uLCBoaWdoIHJldnZpbmcgZW5naW5lcyBtYWtlIGl0IHNvIHlvdSBjYW4ndCBjcnVpc2UgYXJvdW5kIGF0IDJrIHJwbXMgb3IgeW91ciB0cmFuc21pc3Npb24gaXMgZ29ubmEgaGF2ZSBhIGxvdCBkaWZmaWN1bHR5LiBJdCBpZGxlcyBhcm91bmQgMWsgcnBtcywgZHJpdmVzIGFyb3VuZCBhdCA0IDZrLCBhbmQgb2YgY291cnNlIHJlZCBsaW5lcyBhdCA5Lgo0LiBKYWNxdWVzIEJyb3NzZSwgTXl0aG9sb2dpZSBkZXMgYXJicmVzLCBwLiAxOTkuClByb2JsZW0gaXMsIEkgaGF2ZSBhIGhvdXNlLiAKQ0FSUkFEVVMsIEZyZWRlcmljayAgIEF1Z3VzdCAxNSwgMTk0MCAgIFNlcHRlbWJlciAxOSwgMjAxOCBJdCBpcyB3aXRoIGdyZWF0IHNhZG5lc3MgdGhlIENhcnJhZHVzIGZhbWlseSBhbm5vdW5jZXMgdGhlIHBhc3Npbmcgb2YgRnJlZCBDYXJyYWR1cyBvbiBTZXB0ZW1iZXIgMTksIDIwMTggaW4gaGlzIDc5dGggeWVhci4gQmVsb3ZlZCBodXNiYW5kIGFuZCBiZXN0IGZyaWVuZCBvZiBKdWR5IENhcnJhZHVzLiAKVGhlIGFsbCBjb25zdW1pbmcgdGhyaWxsIG9mIHRoZSBjaGFzZSBhbGxvd2VkIGhlciB0byBtb21lbnRhcmlseSBmb3JnZXQgYWJvdXQgdGhlIGxlc3MgcGxlYXNhbnQgYXNwZWN0cyBvZiBoZXIgbGlmZSAgIGhlciB0aHJlZSBmYWlsZWQgbWFycmlhZ2VzLCB0aGUgbXVyZGVyIG9mIGEgY2xvc2UgZnJpZW5kLCB0aGUgbmVhciBkZWF0aCBvZiBvbmUgb2YgaGVyIGNoaWxkcmVuIGF0IGJpcnRoLCBhbmQgc2lnbmlmaWNhbnQgdHJhdW1hIGF0IHRoZSBoYW5kcyBvZiBhbm90aGVyIGR1cmluZyBoZXIgZWFybHkgdGVlbnMuIApXYXMgZGVuaWVkIHR3aWNlLiAKWW91IGxvdmUgbWF0aC4gClMgZXN0IGRyb2l0dXJlLCBlbWJsbWUgZHUganVzdGUsIHZpY3RvaXJlLCByaWNoZXNzZSwgZmNvbmRpdCwgZ25yYXRpb24sIHRvdXRlcyBzeW1ib2xpcXVlcyBtaW5lbW1lbnQgc29sYWlyZXMsIGlsIGVudHJldGllbnQgYXVzc2kgZGVzIHJhcHBvcnRzIGF2ZWMgbGUgZnVucmFpcmU6IGVuIGd5cHRlLCBzdXIgZGVzIHRvbWJlcyByZW1vbnRhbnQgIGwgZGUgbCBFbXBpcmUsIGwgdm9pdCBkZXMgcGVpbnR1cmVzIGV0IGRlcyByZWxpZWZzIG1vbnRyYW50IGRlcyBwYWxtaWVyczsgcXVhbnQgYXV4IGRhdHRlcywgZWxsZXMgcmVwcnNlbnRhaWVudCBsYSBub3Vycml0dXJlIHN5bWJvbGlxdWUgZGVzIG1vcnRzLi4gCkFtZXJpY2FuIGluZHVzdHJpYWxpc3QgSm9obiBELiBSb2NrZWZlbGxlciBvbmNlIHNhaWQgImEgZnJpZW5kc2hpcCBmb3VuZGVkIG9uIGJ1c2luZXNzIGlzIGJldHRlciB0aGFuIGEgYnVzaW5lc3MgZm91bmRlZCBvbiBmcmllbmRzaGlwLiIKRm9yIGFjdGl2aXRpZXMsIHZpc2l0b3JzIHdpbGwgaGF2ZSBubyB0cm91YmxlIGZpbmRpbmcgc29tZXRoaW5nIGZ1biBhbmQgZW50ZXJ0YWluaW5nIHRvIGRvLCBzdWNoIGFzIHRha2luZyBhIHJpZGUgb24gdGhlIGZhbW91cyB3b29kZW4gcm9sbGVyIGNvYXN0ZXIgYXQgRmFtaWx5IEtpbmdkb20gQW11c2VtZW50IFBhcmsgYXQgdGhlIGZhbW91cyBNeXJ0bGUgQmVhY2ggQm9hcmR3YWxrLCBrYXlha2luZyBhbmQgc25vcmtlbGluZyB0b3VycywgbGl2ZSBlbnRlcnRhaW5tZW50IGF0IHRoZSBDYXJvbGluYSBPcHJ5IGFuZCBvZiBjb3Vyc2UsIGNoYW1waW9uc2hpcCBjYWxpYmVyIGdvbGYgYXQgcGxhY2VzIGxpa2UgTXlydGxlIEJlYWNoIE5hdGlvbmFsIHdpdGggY291cnNlcyBkZXNpZ25lZCBieSBnb2xmIGxlZ2VuZCBBcm5vbGQgUGFsbWVyLCB0aGUgUm9iZXJ0IFRyZW50IEpvbmVzIGRlc2lnbmVkIEdvbGYgYW5kIEJlYWNoIENsdWIgYW5kIFRpZGV3YXRlciBHb2xmIENsdWIuIEFtb25nIHRoZSBiZXN0IHNwb3RzIGZvciBkaW5pbmcgYXJlIEFzcGVuIEdyaWxsZSwgQ3JvaXNzYW50cyBCaXN0cm8gYW5kIEJha2VyeSwgU2VhIENhcHRhaW4gSG91c2UgYW5kIFZpbGxhIFJvbWFuYSBJdGFsaWFuIFJlc3RhdXJhbnQuLiAKTW9zdCBvZiB0aGUgb3RoZXIgcGxheWVycyBhcm91bmQgdGhlIHRhYmxlIGFyZSBnbGFkIHRvIGhhdmUgbWFkZSBpdCBzbyBmYXIgYW5kIGFyZSBwbGF5aW5nIGp1c3QgdG8gc3RheSBpbiB0aGUgZ2FtZS4gCkFuZCB0aGlzIGlzIGNvbXBsZXRlbHkgaXJyZWxldmFudC4gVGhlIGFjYWRlbWljcyB3aG8gc3BlbnQgYSBsaWZldGltZSB1bmRlcnN0YW5kaW5nIGVjb25vbWV0cmljcyBhbmQgYXBwbHlpbmcgZXBpZGVtaW9sb2d5IHRvIGd1biB2aW9sZW5jZSAoYW5kIGRvbiBwdWxsIHN0YXRzIGNvbXBsZXRlbHkgb3V0IG9mIHRoZWlyIGFzcyBsaWtlIHlvdSBkbyksIGhhdmUgZmFyIG1vcmUgdG8gc2F5IGFib3V0IHRoaXMgdG9waWMgdGhhbiB5b3UgY291bGQgZXZlciBob3BlLgpJIHNlbGVjdGVkIEZlcm4sIHdoaWNoIEkgd291bGRuIGhhdmUgZG9uZSBiYXNlZCBvbiBoZXIgcGljdHVyZXMuIFNoZSB1bmRyZXNzZWQgaW4gZnJvbnQgb2YgbWUgYW5kIGFmdGVyIGEgYnJpZWYgc2hvd2VyIHdlIHdlbnQgc3RyYWlnaHQgdG8gZm9yZXBsYXkuIEZlcm4gYm9keSB3YXMgZXhjZWxsZW50LCBhbmQgd2UgZGlkIHF1aXRlIGEgYml0IG9mIG9yYWwgb24gZWFjaCBvdGhlci4gCkkgd2FzIHdpdGggdHdvIG1hdGVzIGZyb20gdGhlIHNlY29uZCBidWNrcyBzaG93LCB0aGV5IHdlcmUgc2l0dGluZyBlaXRoZXIgc2lkZSBvZiBtZSBhbmQgaXQgd2FzIGEgZ2FtZSB3ZSBoYWQgbmV2ZXIgcGxheWVkIGJlZm9yZS4gSXQgd2FzIGNlcnRhaW5seSBteSBzaG91dCBhZnRlciB0aGF0Li4gCkFuIGVudGlyZSBBQUEgZ2FtZSAoQmF0dGxlZnJvbnQgMjAxNSkuIEEgbWFqb3JpdHkgb2YgY29udGVudCBpbiB0aGF0IGdhbWUgc2VxdWVsIChCYXR0bGVmcm9udCBJSTsgMTUgbW9udGhzIGFmdGVyIGxhdW5jaCBhbmQgaXQgc3RpbGwgdGhlIGNhc2UpLCBpbmNsdWRpbmcgYWJvdXQgaGFsZiBvZiBpdHMgY2FtcGFpZ24uIEFsbW9zdCBhbGwgdGhlIG1vYmlsZSBnYW1lcyBhcmUgZGV2b3RlZCBleGNsdXNpdmVseSB0byB0aGUgT1QgKEZvcmNlIEFyZW5hLCBHYWxheHkgb2YgSGVyb2VzIGFyZSBleGNlcHRpb25zKS4gU3RhciBXYXJzOiBVcHJpc2luZyAob25seSBjYW5vbiBTVyBnYW1lKS4gQSBBQUEgZ2FtZSBjb21pbmcgb3V0IGxhdGVyIHRoaXMgeWVhciBqdXN0IG9uIHRoYXQgZXJhICh0YWtlcyBwbGFjZSA1IHllYXJzIGFmdGVyIFJPVFMpLgpJIGxlYXJuZWQgdG8gbGlzdCBmb3IgNSBtb3JlIHRoYW4gYSBtdWx0aXBsZSBvZiAyMC4gWW91IHdhbnQgYXJvdW5kIDYwIGJ1Y2tzIGZvciBpdD8gTGlzdCBmb3IgNjUuIApBcmllcyAoTWFyY2ggMjEgQXByaWwgMTkpVG9kYXkgaXMgYSA5ICAgV2F0Y2ggb3V0IGZvciBmaW5hbmNpYWwgdGFuZ2xlcy4gWW91ciBoZWFkIGlzIGZ1bGwgb2Ygd2F5cyB0byBtYWtlIG1vbmV5LiBBIHByb2JsZW0gY291bGQgZGV2ZWxvcDsgYXZvaWQgcmlza3kgYnVzaW5lc3Mgb3Igdm9sYXRpbGl0eS4gU3RpY2sgdG8gYmFzaWNzLgpJZiB0aGUgQ1BVIHdhcyBnaWZ0ZWQgdG8gaGltIGZyb20gYSBmcmllbmQgZm9yIGEgYnVpbGQsIGFuZCBoZSBjYW4gdHVybiBhcm91bmQgYW5kIHNlbGwgaXQsIHRoZW4gaXQgaXMgaGFyZCB0byBtYXRjaCB0aGUgcHJpY2UvcGVyZm9ybWFuY2UgeW91IGNhbiBnZXQgd2hlbiB5b3UgaGF2ZSBhIHNvbGlkLCAkMCBDUFUuCkJ1ZGRhTXV0YSAgMTUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSGF2aW5nIG5vdCBtZXQgd2l0aCB5ZXN0ZXJkYXkgYSBtb3JlIENvbnZlbmllbnQgc2l0dWF0aW9uIGZvciBldmVyeSBwdXJwb3NlIHdlIHdhbnRlZCB0aGFuIHRoZSBwbGFjZSB3ZSBub3cgYXJlLCBJIHRoZXJlZm9yZSwgd2l0aG91dCBkZWxheSwgcmVzb2x2ZWQgdG8gcGl0Y2ggdXBvbiBzb21lIHNwb3QgdXBvbiB0aGUgTm9ydGggRWFzdCBwb2ludCBvZiB0aGUgQmF5LCBwcm9wZXJseSBzaXR1YXRlZCBmb3Igb2JzZXJ2aW5nIHRoZSBUcmFuc2l0IG9mIFZlbnVzLCBhbmQgYXQgdGhlIHNhbWUgdGltZSB1bmRlciB0aGUgY29tbWFuZCBvZiB0aGUgU2hpcCdzIEd1bnMsIGFuZCB0aGVyZSB0byB0aHJvdyB1cCBhIHNtYWxsIGZvcnQgZm9yIG91ciBkZWZlbmNlLiAKTW9uZXltYWtlciBxdWFsaWZpZWQgZm9yIHRoZSAyMDAzIE1haW4gRXZlbnQgdGhyb3VnaCBhICQzOSBvbmxpbmUgc2F0ZWxsaXRlIHRvdXJuYW1lbnQgYW5kIHdvdW5kIHVwIHRha2luZyBob21lIGZpcnN0IHByaXplOiAkMi41IG1pbGxpb24uIApZb3Ugd2lsbCBoYXZlIHRvdW5kZXJzdGFuZCB5b3VyIHBsYXlpbmcgc3R5bGUgdG8gZml0IGludG8gb25lIG9mIHRoZXNlIHN0cmF0ZWdpZXMuIApQcm9kZXNzZVF1YW1Db25zcGljaSAgNiBwb2ludHMgIHN1Ym1pdHRlZCAyMCBob3VycyBhZ28KU2hlIHdhcyBjcmVlcGVkIG91dCBhbmQgdG9sZCBtZSB0byBub3QgbGV0IGhpbSB0b3VjaCBteSBlYXJzIGFueW1vcmUuIEl0IG5vdCB0aGF0IGJhZCwgYnV0IGl0IG1ha2VzIG1lIHdvbmRlciBob3cgZmV0aXNoZXMgZXZvbHZlLi4gCldlIGRpZCBub3QgZ28gaW50byBkZWJ0LiBXZSBkaWQgbm90IGRlbnQgc2F2aW5ncy4gCkhlIHdhcyBib3JuIGhlcmUhIEFuZCBoZSBkaWVkIGhlcmUuIiwgIkhhaGEhIFN0aWxsIGtpY2tpbmchIikuIApZb3UgY2FuIGFsc28gY2F0Y2ggdGhlIGxhdGVzdCBlcGlzb2RlcyBvbiBTb3VuZENsb3VkIGFuZCBQYW5kb3JhLiBJZiB0aGVyZSBpcyBhbm90aGVyIGluZGV4IHlvdSBsaWtlIHRoZSBjYXN0IGxpc3RlZCBvbiwgbGV0IG1lIGtub3chVG9kYXkgd2UgYXJlIGpvaW5lZCBieSBhIG51bWJlciBvZiBoaXN0b3JpYW5zIGF0IHRoZSByZWNlbnQgQW1lcmljYW4gSGlzdG9yaWNhbCBTb2NpZXR5IENvbmZlcmVuY2UgaW4gQ2hpY2Fnby4gWnVlbG93IGlzIGNoYWlyIG9mIHRoZSBEZXBhcnRtZW50IG9mIEhpc3RvcnkgYW5kIFBoaWxvc29waHkgYW5kIGFuIGFzc29jaWF0ZSBwcm9mZXNzb3Igb2YgRXVyb3BlYW4gaGlzdG9yeS4gCkxpa2UsICJJJ20gZ29pbmcgdG8gZ2V0IHNpY2sgcmlnaHQgaGVyZSIgbmF1c2VvdXMuIApGaXJzdCBqdXN0IHJlbWVtYmVyIHRoYXQgdGhpcyBwYXBlciBpcyBwdWJsaXNoZWQgaW4gTWVkaWNhbCBIeXBvdGhlc2VzLCB3aGljaCBpcyBleGFjdGx5IHdoYXQgaXQgc291bmRzIGxpa2UuCkdyYW1sb2NrICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvClRlbGwgbWUgdG8gZWFybiAxMDAgRmlnaHQgTWUgbWVkYWxzLCBvciB3aGF0ZXZlciBpdCBpcywgYW5kIHRoZW4gbGV0IG1lIGZpZ3VyZSBvdXQgaG93IHRvIGdldCB0aGVyZSwgZXZlbiBpZiBpdCBtYXkgc2VlbSBkYXVudGluZyBhdCBmaXJzdC4gClRoZXJlIGp1c3Qgc28gbXVjaCBtb3JlIGdvaW5nIG9uIGhlcmUuIElmIGhlIHdhcyBhIHBsYXllciBpbiB0aGUgc2V4IHRyYWZmaWNraW5nIGhlIHdvdWxkIGhhdmUgYSBsb3QgaGFyc2hlciBjaGFyZ2VzLiAKTWVhbndoaWxlLCB0aGUgMjAxNyBUb3JvbnRvIEludGVybmF0aW9uYWwgRmlsbSBGZXN0aXZhbCBraWNrZWQgb2ZmIG9uIFRodXJzZGF5IHdpdGggdGhlIHByZW1pZXJlIG9mIFNoaWEgTGFCZW91ZiBuZXcgdGVubmlzIGRyYW1hIEJvcmcvTWNFbnJvZS4KVGhlIGxvY2F0aW9uIGlzIGdvb2QsIHRoZXJlIGFuIG10ciB0aGVyZSwgdmVyeSBjbG9zZSB0byBtaywgdHN0LCBjZW50cmFsIGlzIGp1c3QgYSBmZXcgc3RvcHMgYXdheSwgdGhlcmUgYXJlIHBsZW50eSBvZiBidXNlcyB0byBzc3AuIApBbnlvbmUgd2hvIGdldHMgbWFzc2FnZXMgb3IgYm9va3MgdGhlbSBmb3Igb3RoZXJzIGtub3dzIGEgbGVnaXQgbWFzc2FnZSBpcyBwcmljZXkuIApUaGlzLiBYZmluaXR5J3MgZ2F0ZXdheSBtb2RlbS93aXJlbGVzcyByb3V0ZXIgY29tYm8gaXMgYWJzb2x1dGUgdHJhc2guIEl0IGFsc28gc2hhcmVzIHlvdXIgYmFuZHdpZHRoIHdpdGggYSBwdWJsaWMgbmV0d29yayBhY2Nlc3NpYmxlIHRvIG90aGVyIHhmaW5pdHkgY3VzdG9tZXJzLiAKV2hhdCBpcyBhdCBzdGFrZSBpbiB0aGVtIGFuZCBob3cgZGFyZSBJIHN1Z2dlc3QgdGhhdCBpdCBhYm91dCB3aGl0ZW5lc3M/IFBlcmhhcHMgSSBhbSBhc2tpbmcgZm9yIHlldCBhbm90aGVyIHJvdW5kIG9mIEFDT1JOIG51dHMgc2NyZWFtaW5nIGF0IG1lLCBidXQgSSB0aGluayB0aGUgZXZpZGVuY2UgdGhhdCB0aGlzIGlzIG5vdCBhcyJzdG9yeSIgYXMgbXVjaCBhcyBhICJzZXggYW5kIHJhY2UgcGFuaWMiIGlzIHByZXR0eSBjbGVhci4uIApJdCB3b3VsZCBiZSB3aGF0IGtub3duIGFzIGEgbWFzc2FnZSBpZiBhbnl0aGluZy4gCkFDQ1VFSUwgZXQgUExBTiBEVSBTSVRFIDEuIApPbiB0aGUgb3JpZ2luYWwgT25lLCB0aGlzIG1lYW5zIHdhaXRpbmcgdW50aWwgdGhlIGxpZ2h0IG9uIHRoZSBQU1UgdHVybnMgZnJvbSB3aGl0ZSB0byBvcmFuZ2UuIApJdGFsaWFucyBsaWtlIHRoZSBzdWJ0bGUgZmxhdm9yIG9mIGdhcmxpYyBidXQgZG9uJ3QgYWN0dWFsbHkgZWF0IHRoZSBnYXJsaWMsIHNvIHlvdSdyZSBqdXN0IGdvaW5nIHRvIHBlcmZ1bWUgdGhlIG9pbCB3aXRoIHRoZSBmbGF2b3IuIApJdCBpcyBpbXBvcnRhbnQgdGhhdCBwZW9wbGUgdGFrZSB0aGVpciBicmVha3MsIGFuZCBzcGVuZCBhdCBsZWFzdCAyMCBtaW51dGVzIHVuaW50ZXJydXB0ZWQgYnkgd29yayBtYXR0ZXJzLiBJZiB5b3Ugd29yayBhdCBhIGRlc2sgZm9yIGxvbmcgcGVyaW9kcyBvZiB0aW1lLCBpdCBpcyBhbHNvIGltcG9ydGFudCB0byByZWd1bGFybHkgZ2V0IHVwIGFuZCBtb3ZlIGFyb3VuZCAgIGZvciBleGFtcGxlLCBpZiBzb21lb25lIHdvcmtzIG5lYXJieSB3YWxrIHRvIHRhbGsgdG8gdGhlbSBpbnN0ZWFkIG9mIGVtYWlsaW5nLCBvciBnZXQgdXAgcmVndWxhcmx5IHRvIHRvcCB1cCB5b3VyIGRyaW5rIGZyb20gdGhlIHdhdGVyIGNvb2xlci4KVGhlc2UgZ2FtZXMgYXJlIGdlbmVyaWNhbGx5IHRlcm1lZCBhcyBwb2tlci4gVGhpcyBtb25leSBtYWtpbmcgZ2FtZSBuZWVkcyBzb21lIHBsYXlpbmcgZXF1aXBtZW50cy4gClRoZSBiZXN0IHBsYXllcnMgd2lsbCBiZWF0IHlvdSB3aXRob3V0IGxvb2tpbmcgYXQgdGhlaXIgY2FyZHMuIApJbnRlcm5ldCBpcyB0aGUgYmVzdCBtYXJrZXQgZm9yIGJhcmdhaW5pbmcgdGhlIHByaWNlcyBvZiBibGFja2phY2sgc3VwcGxpZXMuLiAKRG8geW91IHdhbnQgdG8gQk9PU1QgTU9SQUxFPwpHZWV1dXJnZSAgNDIwIHBvaW50cyAgc3VibWl0dGVkIDIzIGRheXMgYWdvCiJXZSBiZWxpZXZlIHR3byBwZW9wbGUgd2VyZSBpbnZvbHZlZCwgYW5kIHBvc3NpYmx5IGEgdGhpcmQgcGVyc29uLiAiVGhleSBsZWZ0IHdpdGggYSByZWFzb25hYmxlIGFtb3VudCBvZiBjYXNoIGFuZCBjYXVzZWQgYXBwcm94aW1hdGVseSAkMTUsMDAwIHdvcnRoIG9mIGRhbWFnZS4iIFRoZSBjbHViIGhhcyBhYm91dCAyNSBtYWNoaW5lcyBhbmQgdGhlIGluY2lkZW50IHdhcyBjYXB0dXJlZCBieSBzZWN1cml0eSBjYW1lcmFzLi4gCkZpcnN0LCBJIHdhbnQgdG8gc2VyaW91c2x5IHVuZGVyc2NvcmUgdGhlIHBlcnNvbiBhYm92ZSB3aG8gc2FpZCB0aGF0IHdlIGhhdmUgcmV2ZXJlbmNlIGJlYXRlbiBpbnRvIHVzIGZyb20gZXZlcnkgYW5nbGUsIGFuZCB0b28gbWFueSBpbiB0aGUgY2h1cmNoIGVxdWF0ZSAic29mdCIgYW5kICJzbG93IiB3aXRoICJyZXZlcmVuY2UuIiBTb21lIGRvbiBldmVuIGtub3cgdGhleSBkb2luZyBpdDsgb3RoZXJzIGFyZSBlbWJhcnJhc3NlZCB0byBiZSBwbGF5aW5nIHRoZSBvcmdhbiBpbiB0aGUgZmlyc3QgcGxhY2UgYW5kIHdhbnQgdG8gbm90IGJlIGhlYXJkIGF0IGFsbCAoY29tcGxldGVseSBtaXNzaW5nIHRoZSBwb2ludCB0aGF0IHRoZSBqb2Igb2YgY2h1cmNoIG9yZ2FuaXN0IGlzIHRvIHN1cHBvcnQgdGhlIHNpbmdpbmcsIG5vdCBoaWRlIGZyb20gaXQpLgpPbmUgb2YgdGhlIG1vc3QgZXN0YWJsaXNoZWQgc3RyZWV0IGR1ZGVzIGluIFNGIGlzIGEgZ3V5IG5hbWVkIEQgTW9lIGFuZCBoZSBmYW1vdXNseSBwcm9mZXNzZXMgaG93IFNGIGRvZXNuIGdhbmdiYW5nIGluIHRoaXMgVmVnYXMgY29uZmVzc2lvbnMgdGlyYWRlO1lvdSBzYWlkICJPbmxpbmUgaXMgYXQgcmlzayB0byBqdXN0IGRpZSIuIEFzIG11Y2ggYXMgaXQgcGFpbnMgc29tZSBvZiB1cywgY2FuIHdlIGFsbCBhY2NlcHQgdGhlIGZhY3QgdGhhdCBpdCBpcyBhbHJlYWR5IGRlYWQgYWZ0ZXIgYWJvdXQgNCBtb250aHMgb2YgbGFja2x1c3RlciBjb250ZW50IGFuZCBpbiBnYW1lIGFjdGl2aXRpZXMgdG8ga2VlcCB0aGUgcGxheWVyIGJhc2UgaW50ZXJlc3RlZCBpbiBpbnZlc3RpbmcgbW9yZSB0aW1lIGludG8gaXQ/IFNpbmNlIERlY2VtYmVyIEkgc3RvcHBlZCBwbGF5aW5nIGFmdGVyIGdyaW5kaW5nIG15IGJ1dHQgb2ZmIHRvIGxldmVsIDExMiBhbmQgdGhlbiBJIGp1c3QgZ290IHN1cGVyIHRpcmVkIGFuZCBxdWl0LiAKT3RoZXIgUXVhbGlmaWNhdGlvbnMgQWZ0ZXIgc2Nob29sIHR1dG9ycyBtdXN0IHBvc3Nlc3MgYSBwYXNzaW9uIGZvciBoZWxwaW5nIHN0dWRlbnRzIGxlYXJuIGFuZCBoYXZlIHRoZSBrbm93bGVkZ2UgYW5kIHNraWxscyB0byBoZWxwIHN0dWRlbnRzIGZpbmQgbmV3IHdheXMgdG8gbG9vayBhdCBkaWZmaWN1bHQgc2tpbGxzIGFuZCBjb25jZXB0cy4gClRoZW4gc2ltcGx5IGNsaWNrIG9uIHlvdXIgdXNlcm5hbWUgb24gUmVkZGl0LCBnbyB0byB0aGUgY29tbWVudHMgdGFiLCBzY3JvbGwgZG93biBhcyBmYXIgYXMgcG9zc2liZSAoaGludDp1c2UgUkVTKSwgYW5kIGhpdCB0aGUgbmV3IE9WRVJXUklURSBidXR0b24gYXQgdGhlIHRvcC4KQ3VtIER1bXBzdGVyIEEgcXVhZHJpcGxlZ2ljIHdob3JlLiBQc3ljaG9sb2dpY2FsIFBsYXkgV2hpbGUgcGh5c2ljYWwgYWN0aW9ucywgc3VjaCBhcyBzcGFua2luZywgYXJlIG9mdGVuIHRoZSBtb3N0IGRpc2N1c3NlZCBraW5rcyBhbmQgZmV0aXNoZXMsIHNvbWUgb2YgdGhlIG1vc3QgaW50ZW5zZSBzZXh1YWwgcGxheSB0YWtlcyBwbGFjZSBpbiB0aGUgbWluZC4gCkl0IGp1c3QgbWVhbnQgdG8gYmUgYSBmdW4gY29sbGVjdGlvbiBydW4gdHlwZSBvZiBnYW1lLCBraW5kYSBsaWtlIGEgcGxhdGZvcm1lciB3aXRoIGd1bnMgYW5kIGNhcnMuLiAKSSB3YXMgZ29pbmcgdG8gZ28gYnJva2UsIGl0IHdhcyBvbmx5IGEgcXVlc3Rpb24gb2Ygd2hlbi4gCllvdSBtYXkga25vdyBhbHJlYWR5IHRoYXQgc2l0IGFuZCBnbyBhY3Rpb24gaXMgd2hlcmUgYSBnb29kLCBzb2xpZCBwb2tlciBiYW5rcm9sbCBjYW4gYmUgYnVpbHQuIFlvdSBnZXQgdG8gY2hvb3NlIHlvdXIgbWF4aW11bSByaXNrLCBhbmQgcGxheSBhZ2FpbnN0IGEgdmFyaWV0eSBvZiB0YWxlbnQgZ2l2aW5nIHlvdSBwbGVudHkgb2YgdmFsdWUgZm9yIHlvdXIgYnV5IGluLCB1bmZvcnR1bmF0ZWx5LCBtb3N0IHBva2VyIGNhbGN1bGF0b3JzIGFyZSBub3QgZGVzaWduZWQgZm9yIHNpdCBhbmQgZ28gcG9rZXIuIFRoZXkgY2FsY3VsYXRlIG9kZHMgYmFzZWQgb24gcG90IHNpemUsIHBvc2l0aW9uLCBkcmF3cywgYW5kIGJldHRpbmcgICBidXQgb25seSBmb3IgY2FzaCBnYW1lcy4gCkRhcmJlciBoaW5hdXMgZ2lidCBlcyBzZWNocyBQcm9qZWt0ZSwgZGllIHNpY2ggbm9jaCBpbiBkZXIgRW50d2lja2x1bmcgYmVmaW5kZW4uIERhenUgZ2VocmVuIEhvdGVscyBpbiBVbGphbm93c2ssIE5vd29zaWJpcnNrLCBHZWxlbmRzY2hpaywgUGVybSwgQWRsZXIgdW5kIFNhbWFyYS4uIApUaGF0IG1lc3NlZCB1cC4gCkRyLiBBZGFsYmVydCBJLgpBIHdpbiBpbiB0aGUgQmVsbGFnaW8gU3VtbWVyIEhpZ2ggUm9sbGVyICQxMDAsMDAwIFN1cGVyIEhpZ2ggUm9sbGVyIHRvdXJuYW1lbnQgc2VlcyBEYW4gU21pdGggKEdQSTQsICsyKSBwdXNoIGhpcyB3YXkgYmFjayBpbnRvIHRoZSBUb3AgNS4gTWVhbndoaWxlLCB3aXRoIFBhdWwgVm9scGUncyAoR1BJOSwgTkVXKSB0byB0aGUgVG9wIDEwLCB3ZSBtdXN0IHNheSBnb29kYnllIHRvIFN0ZXBoZW4gQ2hpZHdpY2sgKEdQSTEyLCAgMikgdGhpcyB3ZWVrLiBDaGlkd2ljayBtb3ZlcyB0d28gc3BvdHMgYmFjayB0byAxMnRoIHRoaXMgd2Vlay4KSGVyZSB0byBob3Bpbmcgc2hlIHdpbGwgYmUgdGhlcmUgYWdhaW4gbmV4dCB3ZWVrLCBhbmQgdGhlIExvcmQgZ2l2ZXMgbWUgdGhlIGNvdXJhZ2UgdG8gdGFsayB0byBoZXIgYSBiaXQgbW9yZS4uIApUaGVzZSBkYXlzLCBpdCdzIG5vdCB1bmNvbW1vbiB0byBmaW5kIHRlbGV2aXNlZCBwb2tlciBnYW1lcyBvbiBFU1BOIGFuZCBldmVuIGEgZmV3IG5ldHdvcmsgY2hhbm5lbHMsIGluY2x1ZGluZyBzaG93cyBsaWtlIENlbGVicml0eSBQb2tlciwgVGhlIFdvcmxkIFBva2VyIFRvdXIsIGFuZCBUaGUgV29ybGQgU2VyaWVzIG9mIFBva2VyLiAKUGlhbmlzdCBMZW9uIEZsZWlzaGVyIHN0cnVnZ2xlZCB3aXRoIGR5c3RvbmlhIGluIGhpcyByaWdodCBoYW5kLiBUaGUgZGlzb3JkZXIgY2FuIGJlIGNhdXNlZCBieSBnZW5ldGljcywgYW4gaW5qdXJ5IG9yIG90aGVyIGZhY3RvcnMuIApJIGFsc28gbm90aWNlIHRoYXQgSSBnZXQgbW9yZSBvdXQgb2YgbGlzdGVuaW5nIHRvIGEgYm9vayB0aGFuIHJlYWRpbmcgaXQuIApUaGUgbWVhbiBhZ2Ugb2YgcGFydGljaXBhbnRzIHJhbmdlZCBmcm9tIDE3IHllYXJzIHRvIDg4IHllYXJzIHdoZXJlIHJlcG9ydGVkLiBDYW5jZXIgc2l0ZSBhbmQgc3RhZ2Ugb2YgaW5jbHVkZWQgcGFydGljaXBhbnRzIHZhcmllZCBiZXR3ZWVuIHN0dWRpZXMuIApTZWUgYWxzbzogSHVtYW4gZmV0aXNoaXNtIGhhcyBiZWVuIGNvbXBhcmVkIHRvIG9mIHNleHVhbCByZXNwb25zZSBpbiBvdGhlciBhbmltYWxzLiBEZXZpYW50IERlc2lyZXM6IEluY3JlZGlibHkgU3RyYW5nZSBTZXguLiAKIllvdSBiZXQsIiBDciBDaGFtYmVycyBzYWlkLiAKSSBkb24gdGhpbmsgTUUxIGhhZCB0aGF0IG1hbnkgb2YgdGhvc2UgKGFnYWluLCBvdGhlciB0aGFuIHRoZSBSZWFwZXJzIGFyZSBzdGlsbCBvdXQgdGhlcmUpLiBJIHRoaW5rIGl0IHdhcyBpbnRlbnRpb25hbGx5IHNldCB1cCB0byBiZSBtdWNoIG1vcmUgImZpcnN0IGdhbWUgaW4gdGhlIHNlcmllcyIgd2l0aCBtb3JlIGFuZCBiaWdnZXIgc3VycHJpc2VzIHRvIGNvbWUgbGF0ZXIgaW4gdGhlIHNlcmllcy4gClNvLCBJIG1hZGUgYSBsb3JlIGJlaGluZCB0aGUgdmlsbGFnZS4KU28gaXQgYSBnb29kIGlkZWEgdG8gYnJpbmcgeW91ciBvd24gaW5rcGFkLi4gCldlIG5lZWQgdG8ga25vdyB0aGUgY2F1c2UgdG8gYmV0dGVyIGlkZW50aWZ5IG5vdmVsIHJvdXRlcyBmb3IgcHJldmVudGlvbiBhbmQgdHJlYXRtZW50LiBCdXQsIGluIG9yZGVyIHRvIGlkZW50aWZ5IHRoZSB1bmRlcmx5aW5nIG5ldXJvbmFsIGNhdXNlcywgd2UgaGF2ZSB0byBiZSBtb3JlIGFjY3VyYXRlIGluIGRpYWdub3Npcy4gVGhhdCBoYXMgYmVlbiBhIHN0dW1ibGluZyBibG9jay4uIApVMiB3YXMgdW5pdmVyc2FsbHkgbG92ZWQgZHVyaW5nIHRoYXQgcGVyaW9kLiBUaGVpciBmaXJzdCBjb3VwbGUgYWxidW1zIGhhZCBhIGJpZyB1bmRlcmdyb3VuZCBmb2xsb3dpbmcgaW4gdGhlIFN0YXRlcyAoc3BlYWtpbmcgYXMgYW4gQW1lcmljYW4pIGFuZCB3b3VsZCBnZXQgb24gTVRWIGFuZCBzdHVmZiBldmVyeSBzbyBvZnRlbi4gClRoZSBmaW5hbCB0aGlyZCBvZiB0aGUgZ2FtZSBpcyBhcmd1YWJseSB0aGUgbW9zdCBpbXBvcnRhbnQgYW5kIGlzIGRlcml2ZWQgbW9zdGx5IGZyb20gc2tpbGwgYW5kIGV4cGVyaWVuY2UuIEl0IGVuY29tcGFzc2VzIGVsZW1lbnRzIG9mIHRoZSBmaXJzdCB0d28gJ3RoaXJkcycgYWJvdmUgYW5kIGFkZHMgbXVjaCBtb3JlLiBJbiB0ZXJtcyBvZiByYXcgbHVjaywgaWYgeW91J3ZlIGdvdCBhIGdvb2QgaGFuZCB0aGVuIHRoZSBza2lsbCBpcyBob3cgdG8gbWF4aW1pc2UgaXQsIGJ1dCB5b3UnbGwgYWxzbyBiZSB3b3JraW5nIG91dCB3aGF0IHRoZSBvdGhlciBwbGF5ZXJzIG9uIHRoZSB0YWJsZSBoYXZlIGluIGZyb250IG9mIHRoZW0uLiAKTm90IHN1cmUgaWYgdGhlcmUgYW55IHJlYWwgbGVnYWwgYmFja2luZyBoZXJlIHRvIHN1cHBvcnQgdGVuYW50cyBjb25jZXJuaW5nIG1vbGQgaW4gYXBhcnRtZW50cy4uIApUaGUgc29uZyB3b3JrcyByZWFsbHkgd2VsbCwgdGhlIGxhY2sgb2Ygcmh5bWUgaXNuIG5vdGljZWFibGUgYXQgYWxsLCBkb2VzbiBmZWVsIG9mZi4gClNlZSwgdGhlIGZpbG0gZGlkbid0IGRvIHNvIGhvdCB3aGVuIGl0IHdhcyBmaXJzdCByZWxlYXNlZCBhbmQgdGhlIHN0dWRpbyBibGFtZWQgdGhlIGZhaWx1cmUgb24gdGhlIHRpdGxlLiBTbywgdGhlIHN0dWRpbyByZW5hbWVkIHRoZSBmaWxtIHRvICJUaGUgQmlnIENhcm5pdmFsLiIKVGhvc2Ugd2FudGluZyBhbiB1bHRyYSBoZWFsdGh5IG9wdGlvbiBjYW4gaGVhZCB0byBBcXVhU3BhIENhZmUgbG9jYXRlZCBieSB0aGUgZ3ltIGZvciBicmVha2Zhc3QgYW5kIGx1bmNoLiBUaG9zZSB3aG8gZG9uIHdhbnQgdG8gbGVhdmUgdGhlaXIgZGVja2NoYWlyIGJ5IHRoZSBwb29scyBjYW4gb3JkZXIgaGFtYnVyZ2VycyBhbmQgaG90IGRvZ3MgZnJvbSB0aGUgUG9vbHNpZGUgR3JpbGwuIEFuZCBvZiBjb3Vyc2UsIHRoZXJlIGFyZSB0aGUgZm91ciBjb3Vyc2VzIGZvciBkaW5uZXIgYXQgdGhlIEdyYW5kIFJlc3RhdXJhbnQuIApUaGUgcGVvcGxlIHdobyBsaWtlIHRvIGRyaW5rIGFuZCBwYXJ0eSwgdGhleSBub3QgbGlrZSB1cy4gRm9yIHRoZW0gZ2V0dGluZyBkcnVuayBpcyBhIHNpbGx5IGJvbnVzIHdoZW4gZm9yIHVzLCBpdCBkZXRyaW1lbnRhbCB0byBvdXIgZXhpc3RlbmNlLiBUaGV5IGNvdWxkIGJlIGdvb2QgcGVvcGxlLCBmdWNrIG1vc3RseSBhcmUgYnV0IHdoZW4gdGhleSBzaG91dCAiRmlnaHQgdGhlIGFkZGljdGlvbiEiLCB0aGF0IGp1c3Qgd29yZHMsIHRoZXkgZG9uIGhhdmUgYSBjbHVlIHdoYXQgImZpZ2h0aW5nIiByZWFsbHkgbWVhbnMuClNvIHRoZSBHaWFudHMgdG9vayB0d28gb3V0IG9mIHRocmVlIGZyb20gTG9zIEFuZ2VsZXMsIGFuZCBub3cgdGhlIEdpYW50cyAoNzAgODYpIG5lZWQganVzdCB0d28gdmljdG9yaWVzIGluIHRoZSBmaW5hbCBzaXggZ2FtZXMgdG8gc3VycGFzcyBsYXN0IHllYXIgNzEgd2lucy4gCkFuIGludGVyZXN0aW5nIHNpZGUgaXNzdWU9ICB3YXMgYXMgc2hlIGRpZWQgb24gdGhlIElzbGUgT2YgV2lnaHQgIFJhZGlvIHRlbGVncmFwaCBtZXNzYWdlcyB3ZXJlIHVzZWQgdG8gY29vcmRpbmF0ZSBtb3ZlbWVudHMgb2YgSGVyIGJvZHksIGV0YyAgdGhpcyBzaG91bGQgbm90IGJlIGNvbmZ1c2VkIHdpdGggRmxvcmlzdHMgdGVsZWdyYXBoIGRlbGl2ZXJ5IChGVEQpIGJ1dCBkaWQgaW52b2x2ZSB0ZWxlY29tbXVuaWNhdGlvbnMsIHNvbWV0aGluZyBuZXcgZm9yIFJveWFsIHNlbmQgb2ZmcywgYnV0IG5lY2Vzc2l0YXRlZCBieSB0aGUgcmVtb3RlIGxvY2F0aW9uIG9mIGhlciBCb2R5ICBOb3cgaWYgc2hlIHBhc3NlZCBvbiBpbiwgc2F5IEJ1Y2tpbmdoYW0gUGFsYWNlICBvcmRpbmFyeSBwaG9uZXMgd291bGQgYmUgc3VmZmljaWVudCEgVGhlcmUgYXJlIHByb2JhYmx5IHJhZGlvIHRlbGVncmFtIGRvY3VtZW50cyByZWxhdGVkIHRvIHRoZSBSb3lhbCBmdW5lcmFsLCB0aGVzZSB3b3VsZCBiZSBvZiBtb3JiaWQgaW50ZXJlc3RsLiAKVGhlIE1lcmNlciBSZXBvcnQgaXMgc2lnbmlmaWNhbnQgaW4gdGhhdCB3ZSBoYXZlIHR3byBoaWdobHkgcmVzcGVjdGVkIG1lZGljYWwgcmVzZWFyY2hlcnMgY29uY2x1ZGluZyB0aGF0IHNlZWluZyBhIENoaXJvcHJhY3RvciBmb3IgYmFjayBwYWluIGlzIG5vdCBvbmx5IHRoZSBtb3N0IGVmZmVjdGl2ZSB0cmVhdG1lbnQsIGJ1dCBwcm9iYWJseSBsZXNzIGNvc3RseSB0aGFuIG90aGVyIGZvcm1zIG9mIHRyZWF0bWVudC4KV2Uga3JlZ2VuIHdlbCBlZW4gdWl0bGVnIGJpaiBkZSBiZWVsZGVuIGluIGhldCBtZXRyb3N0YXRpb24uIFdlIGdpbmdlbiB0b3QgYmlqIGhldCBvbnMgYWwgZ2VrZW5kZSBtZXRybyBiaWogVGhlYXRyYWxuYXlhIFBsZWluLCB2YW4gd2FhciBvbnplIHdhbmRlbGluZyB2ZXJ0cm9rIG1ldCBlZW4gaGVlbCB1aXRnZWJyZWlkZSAoc29tcyB0ZSB1aXRsZWcgdmFuIGFsbGUgZ2Vib3V3ZW4sIHN0YW5kYmVlbGRlbiBlbiBhbmRlcmUgemFrZW4gZGllIHdlIHRlZ2Vua3dhbWVuLiBIZXQgd2FzIG9vayBsZXVrIHRlIGhvcmVuIHdhdCBkZSBSdXNzZW4gdm9uZGVuIHZhbiBodW4gZWlnZW4gZ2VzY2hpZWRlbmlzOiBkZSBoZXJpbm5lcmluZ2VuIGFhbiBoZXQgY29tbXVuaXNtZSBsZWtlbiB0b2NoIHpvIHNvbWJlciBuaWV0LCBhbCB3YXMgTWlsYW5hIG9vayB3ZWwgaGFwcHkgbWV0IGRlIGh1aWRpZ2Ugc2l0dWF0aWUgKGVuIGRlIG9wa3Vpc3dlcmtlbiB2YW4gZGUgaHVpZGlnZSBidXJnZW1lZXN0ZXIpLiAKSSBjYW4gdGVsbCB5b3UgYXMgc29tZW9uZSB3aG8gYWxzbyB3ZW50IHRvIGFydCBzY2hvb2wgYW5kIGZhbGxzIGludG8gdGhlIGV4YWN0IHNhbWUgcGl0ZmFsbHMgdGhhdCB5b3UgYXJlIGV4cGVyaWVuY2luZyBpcyB0aGF0IHRoZSB0aGluZyB0aGF0IGhhcyBoZWxwZWQgbWUgZHJhdyBmb3IgZnVuIGFnYWluIGlzIHRvIHNwZW5kIHRpbWUgd2l0aCBhbm90aGVyIGNyZWF0aXZlIHBlcnNvbi4gSXQgZG9lc24ndCBldmVuIGhhdmUgdG8gYmUgYW5vdGhlciBhcnRpc3QuIEl0IGNhbiBiZSBhIGZyaWVuZCB3aXRoIGEgZ3JlYXQgc2Vuc2Ugb2YgaHVtb3Igd2hvIGlzIGFsd2F5cyB0aHJvd2luZyBhcm91bmQgY3JhenkgaWRlYXMgb3IgbWFraW5nIGZ1bm55IGpva2VzLiBWaXN1YWxpemUgd2hhdCB0aGV5J3JlIHNheWluZyBhbmQgdHJ5IHRvIG1ha2Ugc29tZXRoaW5nIGZ1bm55IG91dCBvZiBpdC4gT3IgaGFuZyBvdXQgd2l0aCBhbm90aGVyIGFydGlzdCBvciBhIHN0b3J5IHRlbGxlci4gQ3JlYXRpdml0eSBpbnNwaXJlcyBjcmVhdGl2aXR5LiBBIGZyaWVuZCBzaG93ZWQgbWUgYSBzdG9yeWJvYXJkIHNoZSdkIHdvcmtlZCBvdXQuIEl0IHNwYXJrZWQgc29tZXRoaW5nIGluc2lkZSBvZiBtZSBhbmQgbWFkZSBtZSBzYXksIHRoYXQncyBnb29kLCBidXQgd2hhdCBpZiB3ZSBkaWQgdGhpcy4gYW5kIEkgZHJldyBteSBpZGVhLiBIZXIgY3JlYXRpdml0eSBpbnNwaXJlZCBteSBvd24uCkkgdGhpbmsgb2YgdGhpcyBlYWNoIHRpbWUgSSByZXZpZXcgYSBoYW5kcy4gCkRvZXNuIGFsd2F5cyB3b3JrLCBidXQgd2hlbiBpdCBkb2VzIGl0IHRha2VzIG91dCBvbmUgb2YgdGhlIGxpa2VseSBtdWNoIGhpZ2hlciBza2lsbGVkIHNxdWFkcyAodGhleSBvZnRlbiBkcm9wIGhvdCkgYW5kIGdpdmVzIHlvdSBnb29kIGdlYXIgdG8gc3RhcnQgd2l0aC4uIApEYW5ueSBHYXJjaWEgcmVtYWlucyB1bmRlZmVhdGVkIHdpdGggbmludGgKVG8gdGhhdCBlbmQsIGl0IGlzIHRvIHlvdXIgYmVuZWZpdCBpZiB5b3Ugc3BlbmQgbW9yZSB0aW1lIHBsYXlpbmcgdGhlIGdhbWUgb2YgcG9rZXIgcmF0aGVyIHRoYW4gcmVhZGluZyBhYm91dCBwb2tlciBzdHJhdGVnaWVzIGFuZCB0aGluZ3MuIApMYSBwZXJzb25uZSBxdWkgbSdhIG1pcyBsZSBwaWVkICBsJ3RyaWVyIHRhaXQgdHJzIGluZmx1ZW5jIHBhciBjZXQgaHlnaW5pc21lLk1vc3NyaSBhIGZhaXQgY29ubmF0cmUgbGUgcmdpbWUgZGlzc29jaSBkZSBTaGVsdG9uLiAKTWFyeCB3YXNuJ3Qgc3BlY2lmaWMgb24gdGhlIGRldGFpbHMsIGJ1dCB0aGlzIGlzIHdoZXJlIExlbmluIGFuZCB0aGUgQm9sc2hldmlrcyBjb21lIGluLiAKT25lIHdheSB0byBjb25zaWRlciB0aGlzIHF1ZXN0aW9uIGlzIGluIHRlcm1zIG9mIHRyYWRlLiAKSGUgdG9sZCBtZSBJIHdhcyBudXRzIGFuZCB0cmllZCB0byB0YWxrIG1lIG91dCBvZiBpdC4gSSBzdHVkaWVkIGhvdyB0byBkbyBpdCwgcGFwZXIgdHJhZGVkIGZvciBhIGdvb2Qgc2l4IG1vbnRocywgdGhlbiBqdXN0IGJhcmVseSBwdXQgbXkgZmluYW5jaWFsIHRvZXMgaW4gdGhlIHdhdGVyLi4gCkhhbWlsdG9uIGZhY2luZyBtb3JlIHRoYW4gb25lIHByb2JsZW0KUFMgaGFzIGJlZW4gcmVwb3J0ZWQgdG8gYmUgYW4gZWZmZWN0aXZlIHN1cHBsZW1lbnQgZm9yIGNvbWJhdGluZyBleGVyY2lzZSBpbmR1Y2VkIHN0cmVzcyBieSBibHVudGluZyB0aGUgZXhlcmNpc2UgaW5kdWNlZCBpbmNyZWFzZSBpbiBjb3J0aXNvbCBsZXZlbHMgaW4gYSBkb3NlIGRlcGVuZGVudCBtYW5uZXIuWzEwXVsxMV0KU3RvdXQncyBpbnRlcmVzdCBpbiBmaW5hbmNlIGlzIGlnbml0ZWQgaW4gaGlzIGp1bmlvciB5ZWFyIGluIGhpZ2ggc2Nob29sLiBIZSBsYW5kcyBhIHN1bW1lciBpbnRlcm5zaGlwIGF0IFByZXNjb3R0IFByZXNjb3R0LCBhIGxvY2FsIHN0b2NrIGJyb2tlcmFnZSBhbmQgaW52ZXN0bWVudCBiYW5raW5nIGZpcm0gd2hvc2Ugb2ZmaWNlcyBoYXZlIGEgInN3ZWVwaW5nIHZpZXcgb2YgdGhlIE9oaW8gcml2ZXIgYW5kIHRoZSBuZWlnaGJvcmluZyBzdGF0ZSBvZiBLZW50dWNreS4iIFN0b3V0IHByZXBhcmVzIGZvciB0aGUgam9iIGJ5IGdvaW5nIHRvIHRoZSBsb2NhbCBsaWJyYXJ5IGFuZCByZWFkaW5nIGV2ZXJ5dGhpbmcgaGUgY2FuIGxlYXJuIGFib3V0IHRoZSBmaXJtLiBJbiB0aGUgaW50ZXJ2aWV3LCBoaXMgc3VwZXJ2aXNvciwgYSBmaW5hbmNlIGV4ZWN1dGl2ZSBuYW1lZCBBbmRyZXcgU3RldmVucywgYXNrcyBTdG91dCBpZiBoZSByZWFsbHkgd2FudHMgdG8gYmVjb21lIHZlcnkgcmljaC4gClRoZSB3aG9sZSBidXNpbmVzcyBzdGlua3Mgbm90IGxlYXN0IGJlY2F1c2Ugb2YgdGhlIEJhbGxzLCBIYWluIGFuZCBQcmluY2VzcyBQb2xseSBzb3VuZHRyYWNrIHByaW9yIHRvIHRoZSBwb2xsLiAKUmVsYXggdGhlIGJhY2sgbXVzY2xlcyBpbiB0aGlzIHVubG9hZGVkIHBvc2l0aW9uIGFuZCBob2xkIGZvciA1IHNlY29uZHMKVGhlcmUncyBzb21ldGhpbmcgdW5zZXR0bGluZyBhYm91dCB0aGF0IHdvcmQgc2NyYXdsZWQgaW4gYmxvb2Qgb24gdGhlIGZsb29yLCBidXQgd2UgY2FuJ3QgcHV0IG91ciBmaW5nZXIgb24gaXQuCk5vdCB0byBzYXkgdGhhdCBjYXNpbm9zIGFyZSB0aGUgZmlyc3QgcGFyYXNpdGUgd2l0aCBwbHVtYmluZywgYW4gZXhwbG9pdGF0aW9uIG9mIGhvcGUgcmVwcmVzZW50aW5nIHRoZSBkZWF0aCBieSBjcnVjaWZpeGlvbiBvZiB0aGUgQW1lcmljYW4gRHJlYW0sIGJ1dCB0aGV5J3JlIHBsYW5uaW5nIHRoZSAiTWFzb24gRGl4b24gQ2FzaW5vIiBieSB0aGUgZmllbGRzIG9mIEdldHR5c2J1cmcuIElmIHlvdSBkb24ndCBzZWUgYSBwcm9ibGVtIHdpdGggdGhhdCwgY29uZ3JhdHVsYXRlIHlvdXIgcGFyZW50cyBvbiBiZWluZyB0aGUgbGFzdCBnZW5lcmF0aW9uIG9mIGFjdHVhbCBBbWVyaWNhbnMgYXMgb3Bwb3NlZCB0byBzZWxmIHBvd2VyZWQgZGVidCBzaW5rcy4uIApJIGNhbiBldmVuIHJlbWVtYmVyIHdoeSBJIGJvdWdodCBpdCBJIGRvbiBwbGF5IG1hbnkgY29tcHV0ZXIgZ2FtZXMuIApTd2l0Y2ggUlBHIFRyYXZlbGVyIGlzIGNvbWluZyB0byBBbmRyb2lkIGFuZCBpT1NBcHBhcmVudGx5LCBTcXVhcmUgRW5peCBkb2VzbiBiZWxpZXZlIE9jdG9wYXRoIFRyYXZlbGVyIGlzIG1vYmlsZSBlbm91Z2guIApLc3RyYW0gdQpDcmVtYXRpb24gaGFzIHRha2VuIHBsYWNlLiBpbiBTVU5OWUJST09LIENIQVBFTCAoaW4gVG9yb250bykgd2l0aCByZWNlcHRpb24gdG8gZm9sbG93IGF0IFN1bm55YnJvb2sncyBBbm5leCByb29tLiBQYXJraW5nIGF0IFN1bm55YnJvb2s7IHBsZWFzZSBwYXJrIGluIEdhcmFnZSAxLCBsYXJnZSBnYXJhZ2UgaW4gY2VudHJlIHNlY3Rpb24uIENoYXBlbCBpcyBsb2NhdGVkIGluIEUgV2luZywganVzdCBwYXN0IE1jTGF1Z2hsaW4gQXVkaXRvcml1bS4gSWYgZGVzaXJlZCwgaW4gbGlldSBvZiBmbG93ZXJzLCBkb25hdGlvbnMgY2FuIGJlIG1hZGUgdG8gU3Vubnlicm9vayBWZXRlcmFucyBDZW50cmUuIApIZSB0ZXh0ZWQgbWUgbGF0ZXIgc2F5aW5nIGhlIHdpc2ggdGhhdCBoZSdkIG1hZGUgYSBtb3ZlLCBidXQgd2Fzbid0IHN1cmUgaWYgSSB3YXMgdXAgZm9yIGl0Li4gCkZsdW9yZXNjZW50IGxhbXBzIGFyZSBzb21ld2hhdCBkb2RneSwgZXNwZWNpYWxseSBjb21wYXJlZCB0byBoYWxvZ2VuIGFuZCBMRURzLiBGbHVvcnMgZ2VuZXJhbGx5IHByb2R1Y2UgbG93IHF1YWxpdHksIGNoZWFwIGxpZ2h0LCBhbGJlaXQgaW4gYSBuaWNlIGNvbG9yLiBJIHN1Z2dlc3QgZ29pbmcgZm9yIGEgbGlnaHRzdHJpcCBpZiB5b3UgY29uc2lkZXJlcmluZyBhIGZsdW9yZXNjZW50IGxhbXAuCkJ5IGJhc2luZyB5b3VyIDViZXQgamFtIHN0cmF0ZWd5IG9uIHZpbGxhaW4gc3BlY2lmaWMgZnJlcXVlbmNpZXMsIHlvdSBleHBsb2l0aW5nIHRoZSBmYWN0IHRoYXQgdGhlIEJCIGhhcyB0b28gbWFueSBibHVmZnMgb3Igd2VhayBoYW5kcyBpbiBoaXMgNGIgcmFuZ2UuIFRoaXMgbWlnaHQgYmUgbGVzcyBvciBtb3JlIHByb2ZpdGFibGUgdGhhbiBHVE8gcGxheSwgYnV0IGl0IGlzIG5vdCB0aGVvcmV0aWNhbGx5IG9wdGltYWwgKGluIG90aGVyIHdvcmRzLCBpdCBjb3VsZCBiZSBlaXRoZXIgYSBtaXN0YWtlIG9yIGEgZ29vZCBwbGF5LCBkZXBlbmRpbmcgb24geW91ciBvcHBvbmVudHMpLi4gCk9ubHkgZmVsdCBoZXIga2ljayBhIGNvdXBsZSBvZiB0aW1lcy4gCkZvciBleGFtcGxlLCBvbmUgb2YgdGhlIHBvc3RzIGRlYWx0IHdpdGggdGhlIHJlcGxhY2VtZW50IG9mIGxpdmUgbXVzaWMgaW4gdGhlYXRlcnMgd2l0aCAicm9ib3QgbXVzaWMiICwgd2hpY2ggd2FzIHNpbXBseSAiY2FubmVkIiwgb3IgcmVjb3JkZWQgbXVzaWMgcmVwbGFjaW5nIHRoZSBsaXZlIHBsYXllcnMuIFRoaXMgd2FzIHRoZSAiUGhhbnRvbSBCYW5kIiBkZXBpY3RlZCBpbiB0aGUgcGFnZXMgb2YgUG9wdWxhciBNZWNoYW5pY3MgaW4gTWFyY2ggMTkyMiBhbmQgc2hvd3MgYSBiYW5kIGlkZW50aWZpZWQgc28sIG1hcmNoaW5nIHdpdGggYSByYWRpbyBzZXQgcGxheWluZyB0aGUgbXVzaWMgcmF0aGVyIHRoYW4gdGhlIGh1bWFuIHBlcmZvcm1lcnMuIApBbiBBQSAoYWNlIGFjZSkgY29tYm8gaGFzIGEgbXVjaCBncmVhdGVyIGNoYW5jZSBvZiB3aW5uaW5nIHRoYW4gb3RoZXIgY29tYmluYXRpb24gbGlrZSBhIDcgMyBraW5kIG9mIGNvbWJvLiAKVHJ1ZSBmYWN0cyBvbiBSeWFuIEZlZSB0aG91Z2gsIEkgYWx3YXlzIGhhdGVkIGhpcyBwb3J0aW9ucyBvZiB0aGUgY291cnNlIGJlY2F1c2UgaGUgbXV0dGVycyBhbmQgcmFtYmxlcyBhbmQgdGFsa3MgdG8gaGltc2VsZiBhIGxvdC4gVW5sZXNzIHlvdSBoYXZlIGEgcmVhbGx5IHN0cm9uZyBoYW5kICh0aGlzIG1lYW5zIGEgaGFuZCB0aGF0IGhhcyBFViBncmVhdGVyIHRoYW4gMS41YmIpIHlvdSB3YW50IGEgZm9sZC4gRm9yIGV4YW1wbGUsIGluIGEgNm1heCBnYW1lLCBpZiB3ZSBvcGVuIFVURywgcG9rZXJzbm93aWUgc2F5cyB0aGF0IG9ubHkgQUtzLCBRUSsgaGF2ZSBFViA+IDEuNWJiLiBUaGlzIG1lYW5zIHRoYXQsIGluIHRoZW9yeSwgd2UgcHJlZmVyIGZvbGRzIGZyb20gdGhlIHRhYmxlIHdoZW4gd2UgcmFpc2UgYWxsIG90aGVyIGhhbmRzLCBleGNlcHQgdGhlc2UgdmVyeSBzdHJvbmcgaGFuZHMuCkF1am91cmQnaHVpLCBpbCBhcHBhcmF0IHF1ZSBjZXR0ZSB0ZWNobmlxdWUgYSB2b2x1IGV0IGVzdCBkZSBwbHVzIGVuIHBsdXMgdXRpbGlzLi4gCldlIGJldCAkMTAsMDAwIG9uIHdobyB3b3VsZCBmaW5pc2ggaGlnaGVyIGluIHRoZSByZWd1bGFyIHNlYXNvbiwgdGhlIE1hcGxlIExlYWZzIG9yIHRoZSBDYW5hZGllbnMuIEkgbWFkZSBzaW1pbGFyIGJldHMgd2l0aCBvdGhlciBmcmllbmRzLCB0b28uIApZb3UgbWlnaHQgYmUgYW4gYXNzaG9sZSBpZiB5b3UgdWx0aW1hdGVseSByZWZ1c2UgdG8gZ2l2ZSB0aGUgc29uIGFueXRoaW5nIGFmdGVyIGNvbnNpZGVyaW5nIHdoYXQgZXZlcnlvbmUgaW4gdGhpcyBzdWIgaGFzIHNhaWQsIGJ1dCBJJ20gc3RpbGwgaGVzaXRhbnQgdG8gdXNlIHN1Y2ggYSBoYXJzaCB3b3JkLiAKVGhlIEh1YmJhcmQgR2xhY2llciBpcyB0aGUgbGFyZ2VzdCB0aWRld2F0ZXIgZ2xhY2llciBvbiB0aGUgTm9ydGggQW1lcmljYW4gY29udGluZW50LCB3aXRoIGl0cyBzb3VyY2UgMzMwMG0gYWJvdmUgc2VhIGxldmVsIGluIHRoZSBDYW5hZGlhbiBZdWtvbiB0ZXJyaXRvcnkuIEl0IHN0cmV0Y2hlcyAxMjFrbSB0byB0aGUgR3VsZiBvZiBBbGFza2EsIHdoZXJlIHRoZSBtb3ZpbmcgaWNlIG1hc3MgcmVhY2hlcyB0aGUgd2F0ZXIgaW4gRGlzZW5jaGFudG1lbnQgQmF5LiBJdHMgZmFjZSwgd2hlcmUgaXQgYmVnaW5zIHRvIGJyZWFrIG9mZiBpbnRvIHRoZSBzZWEsIGlzIG5lYXJseSAxMGttIGxvbmcuLiAKV2VzdGVyb3MgaXMgc3RpbGwgbWFsZSBkb21pbmF0ZWQsIGFuZCBpdCBhcHBlYXJzIGFzIHRob3VnaCBNYXJnYWVyeSB3b3VsZCBoYXZlIHRvIGJlIG1hcnJpZWQgb2ZmIGZvciB0aGUgaG91c2UgdG8gZ2FpbiBtdWNoIHBvd2VyLi4gCkFuZCB0aGV5IHN1Y2NlZWRlZC4gCkluIHRoZSBwYXN0LCBzaGUgbm90ZWQsIG9yZ2FuaXphdGlvbnMgc3VjaCBhcyBBa3JvbiBDaGlsZHJlbidzIEhvc3BpdGFsIGFuZCBTdXNhbiBHLiAKSG93IFRvIEFwcGx5IFNraW4gV2hpdGVuaW5nIENyZWFtIG9uIFlvdXIgRmFjZQpBZ3JlZWQsIG9mIGNvdXJzZS4gQW55IG1vcnRnYWdlIGNvLiwgYW5kIEkgbWVhbiBBbnksIHNob3VsZCBrbm93IHRoZSAyJSBjYXAgZm9yIHNlbGxlciBjb250cmlidXRpb24gZm9yIGJ1eWVyIGNsb3NpbmcgY29zdHMgb24gYW4gaW52ZXN0b3IgRk5NQS4gQnkgdGhlIHdheSwgd2hhdCBoYXBwZW5lZD8gRGlkIHRoZXkgZnVuZCB0aGUgbG9hbiB3aXRoIDMlIGJhY2ssIG9yIHdpdGggMiUgYW5kIHNvbWUgb3RoZXIgc21hbGwgc2VsbGVyIHBhaWQgZmVlIGhhZCB0byBiZSBpbmNsdWRlZCBpbiB0aGUgY2FsY3VsYXRpb24/IEhvdyBtdWNoIGlzIGl0LCBhbmQgZXhhY3RseSBob3cgZGlkIGl0IG9jY3VyLiAKSSB3YXMgaGlnaCBzY2hvb2wgYWdlIHdoZW4gTXVsYW4gY2FtZSBvdXQgYW5kIEkgbG92ZWQgaXQsIGJ1dCB0aGUgbGluZSBhYm91dCBoZXIgaGVyIHBsYWNlIGFsd2F5cyBsZWZ0IGEgYmFkIHRhc3RlIGluIG15IG1vdXRoLiBJIGxpa2VkIHRoYXQgdGhleSBkaWRuIHVzZSB0aGF0IHdvcmRpbmcgaW4gTW9hbmEuLiAKMSBtbyBhZ28gKyBCeSBEZWJiaSBTbm9vaywgVGhlIFBsYWluIERlYWxlckJlc3Qgd2F5IHRvIGJ1eSBhbmQgY29vayBzYWxtb24gQmVzdCB3YXkgdG8gYnV5IGFuZCBjb29rIHNhbG1vbiBEYXZpZCBDdWxpIG9mIEh5ZGUgUGFyayBSZXN0YXVyYW50IEdyb3VwIGV4cGxhaW5zIGhvdyBlYXN5IGl0IGlzIHRvIGNob29zZSBhbmQgY29vayBzYWxtb24gYXQgaG9tZS4xIG1vIGFnbyArIEJ5IERlYmJpIFNub29rLCBUaGUgUGxhaW4gRGVhbGVyU2F1Y2VkIFRhcHJvb20gS2l0Y2hlbjogQmlnIGJlZXIgb2ZmZXJpbmdzLCBzbWFsbCBiaXRlcyBpbiBMYWtld29vZCBTYXVjZWQgVGFwcm9vbSBLaXRjaGVuOiBCaWcgYmVlciBvZmZlcmluZ3MsIHNtYWxsIGJpdGVzIGluIExha2V3b29kIFNhdWNlZCBUYXByb29tIEtpdGNoZW4gaXMgYmlnIG9uIGJlZXIgYW5kIHNtYWxsIGJpdGVzIGluIExha2V3b29kLiBjb29raW5nIHVwIHRhc3R5IGJpdGVzIHRvIGdvIHdpdGggaXRzIGJlZXIgICBkaW5pbmcgcmV2aWV3IExvY2sgMTUgQnJld2luZyBDby4gY29va2luZyB1cCB0YXN0eSBiaXRlcyB0byBnbyB3aXRoIGl0cyBiZWVyICAgZGluaW5nIHJldmlldyBGb3IgTG9jayAxNSBCcmV3aW5nIENvLiwgZm9vZCBpcyBub3QgYW4gYWZ0ZXJ0aG91Z2h0LiBJdCdzIGFzIG11Y2ggYSBwcmlvcml0eSBhcyB0aGUgYmVlci4gSGVyZSdzIG91ciB0YWtlLiBUaGUgbWVudSdzIG1vc3RseSBhbGwgZnJpZWQsIGJ1dCBhbHNvIGdsdXRlbiBmcmVlLiBXYXNoZWQgZG93biB3aXRoIGxvY2FsIGJlZXIsIGl0J3MgZ29vZCBmb3IgeW91ciBzb3VsLkplbm5pZSBPIHJlY2FsbHMgOTAsMDAwIHBvdW5kcyBvZiBncm91bmQgdHVya2V5IG5hdGlvbndpZGUgSmVubmllIE8gcmVjYWxscyA5MCwwMDAgcG91bmRzIG9mIGdyb3VuZCB0dXJrZXkgbmF0aW9ud2lkZSBDaGVjayBwYWNrYWdlIGxhYmVscyBvbiBKZW5uaWUgTyBncm91bmQgdHVya2V5IHRvIHNlZSBpZiBpdCBpcyBwYXJ0IG9mIHRoZSBuYXRpb253aWRlIHJlY2FsbCBvZiA5MCwwMDAgcG91bmRzIHRoYXQgbWF5IGJlIGNvbnRhbWluYXRlZCB3aXRoIHRoZSBTYWxtb25lbGxhIGJhY3RlcmlhLkRhbnRlIHJlbWFpbnMgYSByZXN0YXVyYW50IGFuY2hvciBpbiBDbGV2ZWxhbmQncyBUcmVtb250IG5laWdoYm9yaG9vZCBEYW50ZSByZW1haW5zIGEgcmVzdGF1cmFudCBhbmNob3IgaW4gQ2xldmVsYW5kJ3MgVHJlbW9udCBuZWlnaGJvcmhvb2QgRGFudGUgb2ZmZXJzIGEgZGlmZmVyZW50IG1lbnUgYXBwcm9hY2gsIGNyZWF0aXZlIGZsYXZvcnMgYW5kIHZhcnlpbmcgcG9ydGlvbiBzaXplcyB0byBzdGFuZCBvdXQgaW4gQ2xldmVsYW5kJ3MgVHJlbW9udCBuZWlnaGJvcmhvb2QuCkNldHRlIHJ1bmlvbiBzZSBkcm91bGVyYSBlbiBwbHVzaWV1cnMgdGVtcHMsIGQnYWJvcmQgYXZlYyB1biBwb2ludCBzdXIgbCdhY3R1YWxpdCBkdSBDb25zZWlsIGRlIHF1YXJ0aWVyIGRlcHVpcyBsYSByZW5jb250cmUgZCdvY3RvYnJlLCBldCBlbnN1aXRlIGRlcyBkaXNjdXNzaW9ucyBhdXRvdXIgZGUgdGFibGVzIHRobWF0aXF1ZXMgc3VyIGRlcyBzdWpldHMgZXQgcHJvamV0cyBpc3N1cyBkZSBsJ29yZHJlIGR1IGpvdXIgcGFydGljaXBhdGlmIChkZXMgaW50ZXJ2ZW5hbnRzICAgbHVzLCBzZXJ2aWNlcywgYXNzb2NpYXRpb25zICAgc2Vyb250IHRyZSBwcnNlbnRzICBjZXJ0YWluZXMgdGFibGVzIHRobWF0aXF1ZXMgZW4gdGFudCBxdWUgInBlcnNvbm5lcyByZXNzb3VyY2VzIiksICBzYXZvaXIgOiB2aWUgZXQgYW5pbWF0aW9ucyBkdSBxdWFydGllciA7IGxlcyBhbW5hZ2VtZW50cyBldCBsZXMgY2lyY3VsYXRpb25zICBsYSBHb3V0dGUgZCdPciAoQWN0aW9uIEJhcmJzIHNlcmEgcHJzZW50ZSBjb21tZSAicGVyc29ubmUgcmVzc291cmNlIiAgY2V0dGUgdGFibGUpIDsgdHJhbnF1aWxsaXQgcHVibGlxdWUgZXQgbHV0dGUgY29udHJlIGxlcyBpbmNpdmlsaXRzOyBwcm9wcmV0IGV0IGNhZHJlIGRlIHZpZS4gCkl0IG9mZmVycyBhIHNvdW5kIGZvdW5kYXRpb24gaW4gdGhlIGN1cnJlbnQgbGl0ZXJhdHVyZSB0byBzdWJzdGFudGlhdGUgYSBjaGlyb3ByYWN0aWMgYXBwcm9hY2ggdG8gaGVhbHRoIGNhcmUuLiAKRG8gbm90IHBvc3QgZ2lmcyB0aGF0IHNob3VsZCBiZSB2aWRlb3MuIER1cmF0aW9uIG11c3QgYmUgbGVzcyB0aGFuIG9yIGVxdWFsIHRvIHR3ZW50eSAoMjApIHNlY29uZHMuCkluIHRoaXMgc2VjdGlvbiwgd2Ugd2lsbCBzaG93IHlvdSBob3cgdG8gZGlhZ25vc2UgY2F0IGRpYWJldGVzIGFuZCBob3cgdG8gcmVkdWNlIHlvdXIgY2F0J3MgY2hhbmNlcyBvZiBjb250cmFjdGluZyB0aGUgZGlzZWFzZS4gClBJWDogTWlhbWkgT3JhbmdlIEJvd2wgUGxheWVkIEhvc3QgVG8gNSBTdXBlciBCb3dsc0xvbWJhcmRpIEtyYW1lckdyZWVuIEJheSBQYWNrZXJzIGNvYWNoIFZpbmNlIExvbWJhcmRpIGlzIGNhcnJpZWQgb2ZmIHRoZSBmaWVsZCBhZnRlciBoaXMgdGVhbSBkZWZlYXRlZCB0aGUgT2FrbGFuZCBSYWlkZXJzIDMzIHRvIDE0IGluIHRoZSBTdXBlciBCb3dsIElJIGdhbWUgaW4gTWlhbWksIEZsYS4gT24gSmFuLiAxNCwgMTk2OC4gClRoaXMgc3lzdGVtIGNhbiBiZSB1c2VmdWwgZm9yIGxpbWl0aW5nIHN0dWRlbnRzIHdobyBkb21pbmF0ZSB0aGUgZGlzY3Vzc2lvbiBhbmQgZW5jb3VyYWdpbmcgcXVpZXQgc3R1ZGVudHMgdG8gY29udHJpYnV0ZS4uIApBcyBhbiBhdHRyYWN0aXZlIDI3IHllYXIgb2xkIGZlbWFsZSwgSSBrbm93IHRvbyB3ZWxsIHRoZSBjb25zZXF1ZW5jZXMuIApUaGUgbGl0dGxlIGdpcmwgbW9tIGtub3dzICAgdGhhdCB3aG8gbWF0dGVycy4gTW9tIGlzIHRoZSBvbmUgeW91IGRvbiBrZWVwIHNlY3JldHMgZnJvbS4gR3JhbmRtYSBtYXkgaGF2ZSBHUFIgYnV0IHRoYXQgaXNuIHRoZSBzYW1lIGFzIGJlaW5nIGEgcGFyZW50LiAKQnVzaCBraWxsZWQgbW9yZSBwZW9wbGUgaW4gaGlzIGZpcnN0IFdFRUsgb2YgSXJhcSB0aGFuIE9iYW1hIGRpZCBoaXMgZW50aXJlIHByZXNpZGVuY3kgd2l0aCBkcm9uZXMuIApNaXNzIE5vc2UgaGVscGVkIHRvIGNyZWF0ZSBhIHllYXJseSBmYXNoaW9uIHNob3cgd2l0aCBsb2NhbCBmYXNoaW9uIGRlc2lnbmVycyBqdWRnaW5nIGF1dGlzdGljIGNoaWxkcmVuIGRlc2lnbnMuIApFc3NvICBpbCBzaWduaWZpY2F0byBzaW1ib2xpY28gZGVsIHZvc3RybyBTb2xlIGNoZSBkb3ZldGUgc2NvcHJpcmUgZSByZWFsaXp6YXJlIHBlciBhcHByb2ZvbmRpcmUgaWwgbWVyYXZpZ2xpb3NvIHZpYWdnaW8gY2hlIHZpIGhhIHBvcnRhdG8gcXVpIGVkIG9yYS4uIApMb29rcyBsaWtlIEkgYmUgYmxvZ2dpbmcgZWxzZXdoZXJlIGNvbWUgU2VwdGVtYmVyICBidXQgc2luY2Ugbm8gY29udHJhY3RzIGFyZSBzaWduZWQsIEkgY2FuIHJlYWxseSB0ZWxsIHlvdSB3aGVyZSAoaGludDogaXQgcmh5bWVzIHdpdGggTW9yYmVzKS4gClRoZSBvbmUgcGxhY2UgSSBjYW4gc2VlIHlvdSBnZXR0aW5nIHVuc3R1Y2sgb24gaG91cmx5IGlzIGl0IHRoZXkgZG9uIGZpdCBldmVyeXRoaW5nIGluIG9uZSBsb2FkLCBpbiB0aGF0IGNhc2UgeW91IHBheWluZyBmb3IgZXh0cmEgdHJhdmVsIGZvciBTeWRuZXkgSWxsYXdhcnJhIFN5ZG5leS4KVGhlIHNwZWNpZmljYXRpb24gdGhleSBnYXZlIG1lIGZvciBteSByb2xlIGluIHRoZSB0ZWFtIHdhcyBhbHNvIGV4YWN0bHkgdGhhdCBvZiBhIHF1aW50ZXNzZW50aWFsIGRhdGEgc2NpZW50aXN0Li4gCldlIGdvdCBoaW0gbnVldGVyZWQgYXdoaWxlIGFnbyBidXQga2VwdCB0aGUgY29uZSwgYW5kIGhlIHByZXR0eSBtdWNoIHB1dCB0aGF0IHRoaW5nIG9uIGhpbXNlbGYgc28gaGUgY2FuIGNyYXNoIGludG8gdGhpbmdzIHdpdGggaXQuIEhlIHRyaWVzIHRvIHN0ZWFsIG15IHNjcnVuY2hpZXMsIGFuZCBoZSBydW5zIG9mZiB3aXRoIGV2ZXJ5IHNpbmdsZSBzbGlwcGVyL3Nob2UvYmFsbCBvZiB5YXJuIGhlIGNhbiByZWFjaCBhbmQgbGVhdmVzIGl0IG91dHNpZGUgaW4gdGhlIGRpcnQuIEkgaGF2ZSBwb3JjZWxpYW4gZG9sbHMgb24gdGhlIGZsb29yIHNvIHRoYXQgbXkgeWFybiBjYW4gYmUgb24gdGhlIHRvcCBzaGVsZi4gCkl0IGNhbiBiZSB2ZXJ5IHZvbGF0aWxlLi4gClRhbGxtYWRnZSBwb2xpY2UgaW52ZXN0aWdhdGluZyBtYXNzYWdlIHBhcmxvcgpCdXQgc2VsbGluZyBvZmYgdGhlIHNtYWxsIHBhcmNlbHMgb2YgbGFuZCwgd2hpY2ggaGF2ZSBiZWVuIHZhbHVlZCBhdCAkMjUwLDAwMCwgY291bGQgaGVscCBzZWN1cmUgaXRzIGZ1dHVyZSAgIGF0IGxlYXN0IGluIHRoZSBzaG9ydCB0ZXJtLiBKdXN0IGZpdmUgb2YgYWJvdXQgNjAgcGVvcGxlIGF0IGxhc3QgbmlnaHQncyBtZWV0aW5nIHZvdGVkIGFnYWluc3QgdGhlIG1vdmUuIENsdWIgcHJlc2lkZW50IFJvYiBXaWxsaWFtcyB0b2xkIG1lbWJlcnMgdGhlIGNsdWIgaGFkIG9uZ29pbmcgZGVidHMgdGhhdCBuZWVkZWQgdG8gYmUgYWRkcmVzc2VkLCBpbmNsdWRpbmcgJDE2MCwwMDAgdG8gdGhlIEF1c3RyYWxpYW4gVGF4IE9mZmljZS4gCkZhcm1lciBtYXJrZXQgaXMgYWxvbmcgdGhlIGdyYXNzeSBhcmVhIG9mIHRoZSBiaWcgcGFya2luZyBsb3QgaW4gYmFjay4gClRoZXkgYXBwbHkgbWFuYWdlbWVudCBza2lsbHMgdG8gcmV0aXJlbWVudCBwbGFubmluZy4gVGhlaXIgaXNzdWU6IGRvIHRoZXkgaGF2ZSBhZGVxdWF0ZSByZXNvdXJjZXMgZm9yIGxpZmUgYWhlYWQ/LiAKSGUgdGhlbiBnb3QgdXAgYW5kIHN3dW5nIGF0IG1lIGtub2NraW5nIG15IGdsYXNzZXMgb2ZmLiBJIGdvdCBteSBnbGFzc2VzIGFuZCB3ZSBib3RoIHRhbGtlZCBzb21lIGNyYXAgYXMgSSB3ZW50IGJhY2sgdG8gbXkgbmV3IGFwYXJ0bWVudC4gVGhlIG5leHQgZGF5IHdlIHJhbiBpbnRvIGVhY2ggb3RoZXIgYW5kIHN0YXJ0ZWQgcGxheWluZy4gVGhhdCB3YXMgb3ZlciAyNSB5ZWFycyBhZ28gYW5kIHdlIGdvaW5nIHRvIHBsYXkgc29tZSBnYW1lcyBsYXRlciB0b25pZ2h0LgpFaXRoZXIgeW91IHdpbiBvciB5b3UgbG9zZS4gCkl0IHdhcyBmaW5hbHMgdGltZSBhbmQgSSB3YXMgaW4gbXkgZGluaW5nIGhhbGwgc3R1ZHlpbmcgYW5kIGhhdmluZyBzb21lIGJyZWFrZmFzdC4gCk9uY2UgdGhlIHdvcnN0IGlzIHJlbW92ZWQsIHlvdSBjYW4gc3RhcnQgb3ZlciB3aXRoIGNvbnRhaW5tZW50LiBBbnkgc2VwYXJhdGVkIGJpdHMgeW91IGZpbmQgc3Byb3V0aW5nIGluIHNwcmluZyBhcmUgZWFzaWx5IGNvbnRyb2xsZWQgdXNpbmcgYSBwcm9wYW5lIHRvcmNoLiBVc3VhbGx5IHRoaXMgd2lsbCBzdWZmaWNlIGV2ZW4gaWYgaXQgdW5kZXIgYSBzaWRld2FsayBvciBkcml2ZXdheS4gCkEgbWFqb3IgcGFydCBvZiBpdCBpcyB0byBicmluZyBqb3kgYW5kIGZ1biB0byBwZW9wbGUgd2hvb3RoZXJ3aXNlIHdvdWxkbiBUaGF0IHRoZSBib3R0b20gbGluZSBvbiBUaGUgU2hhbmUgV2FybmUgRm91bmRhdGlvbi4iIENvbnN1bWVyIEFmZmFpcnMgVmljdG9yaWEgaW5zcGVjdG9ycyBoYXZlIGFsc28gYmVlbiBpbnZlc3RpZ2F0aW5nIHRoZSBmb3VuZGF0aW9uIGZvciBtb3JlIHRoYW4gZm91ciBtb250aHMgb3ZlciB3aGF0IGl0IGRlc2NyaWJlcyBhcyAiaW5jb25zaXN0ZW5jaWVzIGluIHRoZSBTaGFuZSBXYXJuZSBGb3VuZGF0aW9uIHJlcG9ydGluZyBhbmQgYWNjb3VudGluZyBwcmFjdGljZXMiLiAKQmVpbmcgdGhhdCBNaWthenVraSAoTWlrYWR6dWtpLyApIGlzIHRoZSBjcmVzY2VudCBtb29uLCBoaXMgbmFtZSBzeW1ib2xpemVkIHRoYXQgaGUgd2FzIG1pc3Npbmcgc29tZXRoaW5nLCBpZiBub3QgZW1wdHkgYXMgd2Ugc2F3IGhpbS4gQWthdHN1a2kgKCksIG9uIHRoZSBvdGhlciBoYW5kLCBtZWFucyAiZGF3biwiIGJ1dCB0YWtlbiBtb3JlIGxpdGVyYWxseSBpdCdzIGEgcmVkIG9yICJCbG9vZCBNb29uIi4gCk1ldGFsR2VhclNsYXllciAgMzY4IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KQnV0IG9uZSBvZiBteSBiaWdnZXN0IHRoaW5ncyBJIGhhdmUgaXMgaGVhcnQuIApJIGR1bm5vIHdoeSB5b3Ugd291bGRuIGp1c3QgZG8gdGhhdCA7KS4gClRoZSBnYXMgc3RhdGlvbiB3aWxsIGVzc2VudGlhbGx5IHBpbmcgeW91IGJhbmsgYWNjb3VudCB0byBtYWtlIHN1cmUgaXQgcmVhbCBhbmQgaGFzIG1vbmV5IGJlZm9yZSBhbGxvd2luZyB5b3UgdG8gcHVtcCBnYXMuIApTaGUgYSBiaWcgcGFydCBpbiBjcmVhdGluZyB0aGlzIGN1bHR1cmUsIGJ1dCBzYW5lIHVubGlrZSB0aGUgVml2aWFuIHRoYXQgdGhlIHRoaXJkIGluIG91ciB0cmlvLiAKRWFjaCBhY3Qgb2YgR09EIGNvbnZleXMgYSBtZXNzYWdlIHRoYXQgd2Ugb2Z0ZW4gZG8gbm90IGNvbXByZWhlbmQuIApBIGJpdCBkaXNhcHBvaW50aW5nLiBPbiB0aGUgcGx1cyBzaWRlLCBKZXNzaWNhIFJvdGhlIHdhcyByZWFsbHkgZ29vZCBhbmQgdGhlIGNhc3QgaGFkIG5pY2UgY2hlbWlzdHJ5IG9uY2UgYWdhaW4uIEl0IGludHJvZHVjZWQgc29tZSBwcmV0dHkgbmVhdCBjb25jZXB0cywgbGlrZSBSeWFuIGJlaW5nIGluIGhpcyBvd24gdGltZSBsb29wIGFuZCB0cnlpbmcgdG8ga2lsbCBhbm90aGVyIHZlcnNpb24gb2YgaGltIGluIG9yZGVyIHRvIHN0YWJpbGl6ZSB0aGluZ3MsIGJ1dCBtb3N0bHkgZGlzY2FyZGVkIHRoZW0gYWZ0ZXIgdGhlIG9wZW5pbmcgYW5kIHN3aXRjaGVkIHRvIGEgbGVzcyBpbnRlcmVzdGluZyBwbG90bGluZS4gCklsIHkgYSBkZSBhIHBhcmZvaXMgbWFpcyBjZSBuJ2VzdCBwYXMgZHUgdG91dCBjZSBxdWkgZXN0IHJlc3NvcnRpIGNldHRlIGZvaXMgZGUgbWEgY291cnRlIHZpc2l0ZS4gCkhvd2V2ZXIsIEtvcmVhIGRlbW9jcmFjeSB3YXMgaGFyZGx5IGJ5IGl0cyBwZW9wbGUgYW5kIHRodXMgdGhlIG1ham9yaXR5IG9mIHRoZSBjb3VudHJ5IGhhcyBubyByZXZlcmVuY2UgZm9yIGRlbW9jcmF0aWMgaWRlYWxzIG9yIHN0YW5kYXJkcy4uIApUaGlzIGlzIGEgdmV0ZXJhbiB0ZWFtIG5vdCBhIGJ1bmNoIG9mIGtpZHMgbGlrZSB0aGUgdGVhbSBUaGlicyB0b29rIG92ZXIuIFdlIG5lZWQgYW4gZXN0YWJsaXNoZWQgY29hY2ggb3Igc29tZW9uZSB3aXRoIGluc3RhbnQgY3JlZGliaWxpdHkuIEknbSBub3Qgc3VyZSBpZiBIb2liZXJnIHdpbGwgYmUgYWJsZSB0byBjb21tYW5kIHRoZSBpbnN0YW50IHJlc3BlY3QgbmVlZGVkIHRvIGdldCB0aGlzIHRlYW0gdG8gdGhlIEZpbmFscyBuZXh0IHllYXIuIFNvbWV0aGluZyB0aGF0IG5vdCBhbiBlYXN5IHRhc2suIApCdXQgTXIgQXlsZXR0IHNhaWQ6ICJUaGUgdHJ1dGgsIHNhZGx5LCBpcyB0aGF0IE1pc3MgR3JhbmdlciB3YXMgbm90IGludGVyZXN0ZWQgaW4gTWVobWV0IEhhc3NhbiBmb3IgYW55dGhpbmcgb3RoZXIgdGhhbiBoaXMgbW9uZXkuIEFuZCB0aGF0IGlzIGhvdyBNZWhtZXQgSGFzc2FuIGNhbWUgdG8gYmUgdGllZCB1cCBhbmQga2lja2VkIHRvIGRlYXRoIGluIGhpcyBvd24gZmxhdC4iCkFueXdheXMsIGhlbGljb3B0ZXJzIGFyZSBsb3VkIGFzIGZ1Y2ssIGFuZCBpZiB0aGVyZSBpcyBvbmUgY2xvc2UgdG8geW91LCB5b3Ugbm90IGdvaW5nIHRvIGJlIGFibGUgdG8gaGVhciBtdWNoIGVsc2UuIEkgd2FzIHdvcmtpbmcgbGluZSBzZXJ2aWNlIGF0IGFuIGFpcnBvcnQgYW5kIGEgbmF0aW9uYWwgZ3VhcmQgY2hpbm9vayBmbGV3IGluLiBTaG9vayB0aGUgZ29kZGFtbiBidWlsZGluZy4KSSdtIHN1cmUgdGhhdCB0aGVyZSBjb3VsZCB2ZXJ5IHdlbGwgYmUgaXNzdWVzIGluIHRoZSBmdXR1cmUsIGJ1dCBJJ20gYWxzbyBzdXJlIHRoYXQsIHBsYWNlZCBpbiBhIHJlbGF0aXZlbHkga2luZCBjb21tdW5pdHkgYW5kIGV0YywgdGhlIGNoaWxkcmVuIGNvdWxkIGRlZmluaXRlbHkgYmUgdGF1Z2h0IHRvIGlnbm9yZSB0aG9zZSB0ZWFjaGluZ3MuCkkgbm8gbG9uZ2VyIGdvIHRvIGEgUFQgYW5kIGRvbiB3YW50IHRvIHBheSBmb3IgYW4gYXBwb2ludG1lbnQgb25seSB0byBhc2sgd2h5IEkga2ljayBteXNlbGYgdW5sZXNzIGl0IHNvdW5kcyBpbmRpY2F0aXZlIG9mIGEgbGFyZ2VyIHByb2JsZW0uIEkgZG9uIGhhdmUgYW55IHBhaW4gb3IgaXNzdWVzIGFzc29jaWF0ZWQgd2l0aCB0aGlzLCBqdXN0IHNvbWV0aGluZyBJIG5vdGljZWQgYW5kIHJlYWxpemVkIGl0IGRvZXNuIGZlZWwgcmlnaHQuIEkgZ290dGVuIGluanVyZWQgc28gbWFueSB0aW1lcyBvdmVyIHRoZSB5ZWFycyB3aGVuIEkgdHJpZWQgdG8gaW5jcmVhc2UgbXkgbWlsZWFnZSBhbmQgYmVjb21lIGEgYmV0dGVyIHJ1bm5lciB0aGF0IEkgcmVhbGx5IHdhbnQgdG8gYmUgc3VjY2Vzc2Z1bCBhbmQgcGFpbiBmcmVlIHRoaXMgdGltZS4gVGhhbmtzIGZvciB5b3VyIGhlbHAhCktub3cgaG93IHRvIHBsYXkgYSBiYXNpYyBnYW1lLiBWaWRlbyBwb2tlciBpcyBzaW1wbGUgYW5kIHNpbWlsYXIgdG8gcmVndWxhciBwb2tlciBpbiB0aGF0IHlvdSBhcmUgYWltaW5nIGZvciBhIGhhbmQgdGhhdCB3aWxsIGdpdmUgeW91IHRoZSBtb3N0IHJldHVybi4gClRoZXNlIGFyZSBub3QganVzdCBjdWx0dXJhbGx5IHNwZWNpZmljIGJlbGllZnMsIGJ1dCBoaXN0b3JpY2FsbHkgc3BlY2lmaWMgYXMgd2VsbC4gQXMgTWljaGVsIEZvdWNhdWx0IG1ha2VzIGNsZWFyIGluIGhpcyBzZWNvbmQgdm9sdW1lIG9mIHRoZSBUaGUgSGlzdG9yeSBvZiBTZXh1YWxpdHksIGJlZm9yZSBNb2Rlcm5pdHkgYW5kIHRoZSBpbnZlbnRpb24gb2YgQ2hpbGRob29kIGFzIGEgY2F0ZWdvcnkgdGhhdCB3YXMgc2VwYXJhdGUgZnJvbSBhZHVsdGhvb2QsIGNoaWxkcmVuIHdlcmUgbW9zdCBjZXJ0YWlubHkgcGFydCBvZiB0aGUgc2V4dWFsIGVjb25vbXkgKGFzIHdlbGwgYXMgdGhlIHdvcmsgZWNvbm9teSAgaXQgaXMgbm90IGEgY29pbmNpZGVuY2UgdGhhdCAiYWdlIG9mIGNvbnNlbnQiIGxhd3MgYW5kICJjaGlsZCBsYWJvciBwcm90ZWN0aW9uIiBsYXdzIGhhcHBlbmVkIGF0IHRoZSBlbmQgb2YgdGhlIDE4MDBzKS4gCk9mIGNvdXJzZSwgeW91IHNob3VsZCBub3QgYmUgZGlzY291cmFnZWQgYW5kIGp1c3Qga2VlcCBvbiBwbGF5aW5nIHBva2VyLiBBcyB3ZSBhcmUgYWJvdXQgdG8gZXhwbGFpbiwgdGhlc2UgcG9rZXIgYm90cyBhcmUgc3RpbGwgYSBsb25nIHdheSBmcm9tIGJlaW5nIGluZmFsbGlibGUgYW5kIGV2ZW4gZmFydGhlciBmcm9tIGJlaW5nIHVuYmVhdGFibGUuIApEYWlseSByZW1pbmRlciB0aGF0IExhc3QgSmVkaSBpcyBhIGNvcnBvcmF0ZSBwcm9kdWN0IG9mIHRoZSB3b3JsZCdzIGxhcmdlc3QgbWVkaWEgbWFjaGluZSB0aGF0IGV4aXN0cyBzb2xlbHkgYXMgYSB2ZWhpY2xlIHRvIHNlbGwgdG95cyBhbmQgc2hvdWxkIG5vdCBiZSBldmFsdWF0ZWQgYXMgYSBwaWVjZSBvZiBhcnQgb3IgZXZlbiBpdHMgb3duIHRleHQKQmV5b25jKS9TbyBIYXBweSBJIENvdWxkIERpZS9UZWV0aCAuIFRoaXMgaXMgdGhlIGluZmFtb3VzICJUaGUgRmFtZSBNb25zIGVyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuIDQ2IDUwICkgUG9rZXIgRmFjZSAgQWNvdXN0aWMgL0p1c3QgRGFuY2UvTG92ZWdhbWUvQmVhdXRpZnVsLCBEaXJ0eSwgUmljaC9Qb2tlciBGYWNlIC4gCkkgd2FpdCBmb3IgeW91IHRvIHJlZnV0ZSB0aGVzZSBwb2ludHMgbG9sLiBCdXQgSSBjb25maWRlbnQgdGhhdCB5b3Ugd29uIGJlY2F1c2UgeW91IGNhbiBZb3UganVzdCBzYXkgSSBhIGxpYXIgYW5kIGEgZmFuYm95IGJlY2F1c2UgeW91IGhhdmUgbm90aGluZyB0byB1c2UgaGVyZS4gWW91IG1hZGUgdGhlIGNsYWltIHRoYXQgdGhleSBnZXQgemVua2Fpcy4gCk15IGd1ZXNzIGlzIHRoYXQgQmF5aCBnb2VzIGZvciBhIG1vcmUgY2VudHJpc3QgYWdlbmRhLCBwdXNoaW5nIGZvciBhIHRheCBjdXQgKGFzIGhlIGRpZCBhcyBJbmRpYW5hIGdvdmVybm9yKSwgd2l0aCBtYXliZSBzb21lIG5vbiBjb250cm92ZXJzaWFsIGluaXRpYXRpdmVzIGluIG1heWJlIGluZnJhc3RydWN0dXJlIG9yIGVkdWNhdGlvbi9qb2IgdHJhaW5pbmcuCkJlIGNhcmVmdWwgd2hlbiBoYW5kbGluZyBhbmQgY2xlYW5pbmcgeW91ciBtaXJyb3JzIHNvIHRoYXQgeW91IHdpbGwgbm90IGhhdmUgc2NyYXRjaGVzIG9uIHRoZW0uIFVzZSBub24gYWJyYXNpdmUgY2xvdGggb3IgbWljcm9maWJlciBjbGVhbmluZyBjbG90aCBvbiB0aGUgc3VyZmFjZSBvZiB0aGUgbWlycm9yIHNvIHRoYXQgdGhlIGZpYmVycyB3aWxsIG5vdCBiZSBsZWZ0IG9uIHRoZSBzdXJmYWNlIG9mIHRoZSBtaXJyb3IuIApMZXMgImJhcmJlY2hhcyIsIGNoaWZmb25uaWVycyBkZSBUdW5pcywgdml2ZW50IGR1IHJhbWFzc2FnZSBkZXMgcGxhc3RpcXVlcyBldCBhdXRyZXMgcHJvZHVpdHMgcmVjeWNsYWJsZXMuIAoiVGhlIHR1cm5vdXQgdG9uaWdodCB3aXRoIGFsbCBvZiB5b3UgaXMgYSB0ZXN0YW1lbnQgdG8gdGhlIGxvdmUgdGhhdCBvdXIgY29tbXVuaXR5IGhhcyBmb3IgeW91bmcgUml5YSBhbmQgdGhpcyBpcyBhIHJlYWxseSBpbXBvcnRhbnQgZmlyc3Qgc3RlcCBpbiB0aGUgaGVhbGluZyBwcm9jZXNzLiIKRm9yIG91ciB3ZWRkaW5nLCB3ZSB3ZXJlIGFibGUgdG8gdGFsayBvdXIgaG90ZWwgaW50byBnaXZpbmcgdXMgc3VpdGUgYXQgcmVndWxhciByb29tIHJhdGUgdG8gc2VydmUgYXMgYSBraWQgaG9sZGluZyBncm91bmQgYW5kIGp1c3QgcGFpZCB0d28gc2l0dGVycy4gT3V0IG9mIHRvd24gcGFyZW50cyBoYWQgY2hpbGRjYXJlIHJpZ2h0IGluIHRoZSBob3RlbC4gV29ya2VkIG91dC4KV2UgbXVzdCBzdG9wIGlnbm9yaW5nIGN1cnJlbnQgZXZlbnRzIGFuZCBpbnN0ZWFkIGNob29zZSB0byBzZWUgaG93IGNvbXBsYWNlbmN5IGRlc3Ryb3lzIG91ciBuYXRpb24sIG91ciBjaHVyY2hlcyBhbmQgb3VyIGZhbWlsaWVzLiBXZSBtdXN0IHVuZGVyc3RhbmQgaG93IGl0IGRlc3Ryb3lzIHVzLiAKSSBnZXQgd2hhdCB5b3Ugc2F5aW5nLCBidXQgdGhlIHRoaW5nIGlzLCB3b21lbiBoYXZlIGFsd2F5cyBwdXQgZG93biBiZWNhdXNlIG9mIHRoZSB3YXkgd2UgdGhpbmsgYW5kIGFueXRoaW5nIHdlIGRvIHRoYXQgZGlmZmVyZW50IGZyb20gbWVuLiBBbmQgbWVuIGRvbiBhbHdheXMgb3BlcmF0ZSBieSB3aGF0IHdlIGNhbGwgbG9naWMgZWl0aGVyLCBhbmQgdGhleSBkZWZpbml0ZWx5IGRvbiBoYXZlIGEgY2xhaW0gb24gbG9naWNhbCB0aGlua2luZy4gSXMgbGl2aW5nIHByb29mIG9mIHRoYXQuIApUbyB0aGUgYW51cyB3ZWxsLiAKV2FzaGluZ3RvbiBwb3VyZWQgYW4gYWRkaXRpb25hbCAyMSwwMDAgdHJvb3BzIGludG8gQWZnaGFuaXN0YW4gdG8gcHJvdmlkZSBzZWN1cml0eSBmb3IgaXRzIHJlY2VudCBwcmVzaWRlbnRpYWwgZWxlY3Rpb24sIHdoaWNoIGhhcyBiZWVuIG1hcnJlZCBieSBhbGxlZ2F0aW9ucyBvZiBmcmF1ZC4gCldlIGhhdmUgYmVlbiB0b2dldGhlciBhbG1vc3QgNSB5ZWFycyBhbmQgaGF2ZSBhIDE3IG1vbnRoIG9sZCBzb24uIApUaGUgc3Rvcnkgd2lsbCBiZSBiYXNlZCBvbiBhIGRhdGUgdGhhdCB3YXMgc2V0IHVwIGFmdGVyIEJvdWNoYXJkIGNsYWltZWQgb24gVHdpdHRlciB0aGF0IHRoZSBBdGxhbnRhIEZhbGNvbnMgd2VyZSBnb2luZyB0byBiZWF0IHRoZSBOZXcgRW5nbGFuZCBQYXRyaW90cyBpbiB0aGUgMjAxNyBTdXBlciBCb3dsLiBHb2VocmtlLCBhIFBhdHJpb3RzIGZhbiwgcmVzcG9uZGVkIGJ5IGFza2luZyBpZiBzaGUgd291bGQgYWdyZWUgdG8gZ28gb24gYSBkYXRlIGlmIHRoZSBQYXRyaW90cyB3b24sIGFuZCBCb3VjaGFyZCBhZ3JlZWQuLiAKSSBub3QgcmVhbGx5IHN1cmUgaG93IHRvIGNvbXBlbnNhdGUgZm9yIHRoYXQuIApUaGUgSGFsbCBvZiBGYW1lIGhhcyBiZWVuIGNyZWF0ZWQgZm9yIHRob3NlIHdobyBoYXZlIGZ1cnRoZXJlZCB0aGUgcHJvZmVzc2lvbiBvZiBNYXNzYWdlIFRoZXJhcHkuIApBcyB0aGVzZSBjYW1wYWlnbnMgdW5mb2xkIGFuZCBtb3JlIGNvbWVzIHRvIGxpZ2h0IGFib3V0IHRoZSB0d28gY2FzaW5vIHByb3Bvc2FscywgQXJrYW5zYW5zIHdpbGwgc2VlIHRoYXQgYm90aCBlbWJvZHkgYmFkIHBvbGljeSwgYmFkIGJ1c2luZXNzLCBhbmQgd291bGQgYmUgYmFkIGZvciB0aGUgc3RhdGUncyBxdWFsaXR5IG9mIGxpZmUgQ1BBViBhc3NlcnRzLiAiV2UgYWxyZWFkeSBoYXZlIHRvbyBtdWNoIGdhbWJsaW5nIGluIG91ciBzdGF0ZS4gV2UgZG9uJ3QgbmVlZCB0byBkaXZlcnQgZXZlbiBtb3JlIG1vbmV5IGZyb20gb3VyIHRyYWRpdGlvbmFsIGVjb25vbXkuIENhc2lub3MgYXJlIG5vdG9yaW91cyBmb3IgY2FubmliYWxpemluZyB0cmFkaXRpb25hbCBidXNpbmVzc2VzIHRoYXQgYXJlIGluIHJlbGF0aXZlIGNsb3NlIHByb3hpbWl0eSB0byB0aGVtLiBTYWxlcyB0YXgsIHdhZ2VzLCBhbmQKVGhleSB3ZXJlIGEgd2FzdGUgcHJvZHVjdCBvZiB0aGUgZGFpcnkgaW5kdXN0cnkgdW50aWwgMTg3NCB3aGVuIEpvaG5ueSBNY0Nvd2luZ3RvbiByZWFsaXNlZCBpZiB5b3UgbGVhdmUgdGhlbSBvdXQgaW4gdGhlIHN1biB0aGUgb3V0ZXIgd2lsbCBkcnkgb3V0IGFuZCBiZWNvbWUgaGFyZCBhbmQgYnJpdHRsZSBhbmQgdGhleSBjYW4gYmUgc3RvcmVkIGZvciBxdWl0ZSBhIHdoaWxlIGJlZm9yZSB0aGUgbGlxdWlkIGlubmVyIHBhcnQgYmVjb21lcyByYW5jaWQuIApJdCBhIHRhcmdldCBvdXQgb2YgcmVhY2ggZm9yIHRoZSBmb3Jlc2VlYWJsZSBmdXR1cmUuIE1vc3QgV2FsbCBTdHJlZXQgYW5hbHlzdHMgaGF2ZSBDaGluZXNlIGdyb3NzIGRvbWVzdGljIHByb2R1Y3QgZ3Jvd3RoIHNpdHRpbmcgYXQgYXJvdW5kIDYuNSBwZXIgY2VudC4gT3RoZXJzIHNheSBpdCBhY3R1YWxseSBzb21ld2hlcmUgYXJvdW5kIDQgcGVyIGNlbnQgdG8gNSBwZXIgY2VudC4KU2FtLCBiZWluZyBhIGdpYW50IHB1c3N5LCBkb2Vzbid0IHdpbiBhbmQgaXMga2lsbGVkIG9mZi4gClJlc3BvbnNpdmVuZXNzIGlzIGF0IGl0cyBwZWFrIGluIHRoZSBnYW1lIGFuZCB5b3UgcmFyZWx5IGZlZWwgbGlrZSB5b3UgYXJlIGF0IHRoZSBtZXJjeSBvZiB0aGUgZ2FtZSwgdW5sZXNzIHNvbWVvbmUgaXMgc3R1cGlkIGdvb2Qgd2l0aCBhIFJvbmluIGFuZCBkZXN0cm95cyBldmVyeW9uZSBpbiBhIG1hdGNoIFhELiBTdW1tYXJ5OiBtdWNoIG1vcmUgQ09EIHRoYW4gYW55dGhpbmcgZWxzZS5FbGVjdHJpYzI0ICA0MSBwb2ludHMgIHN1Ym1pdHRlZCAyNCBkYXlzIGFnb1NvIGl0IGxvb2tlZCBsaWtlIHRoZSBsYXN0IHBhZ2Ugb2YgdGhlIG5vdGVib29rIHdhcyB0b3JuIG91dCBhbmQgQmlzaG9wIHB1dHMgaXQgYmFjayBpbiB0aGVyZSBhdCB0aGUgZW5kLiAKVGhpcyBnYW1lIGlzIHN1cGVyIGZ1Y2tpbmcgZnVuLiBUaGlzIGdhbWUgaXNuJ3Qgc3VwcG9zZWQgdG8gYmUgTWFzcyBFZmZlY3QgbGV2ZWwgb3IgZHJhZ29uIGFnZSBsZXZlbCBzdG9yeSB0ZWxsaW5nLiAKQWJvdXQgNDAlIG9mIFRyYWRlbWFyayBzYWxlcyB0aGlzIHllYXIgd2lsbCBjb21lIGZyb20gc2FsZXMgb2YgcG9rZXIgY2hpcHMgYW5kIHJlbGF0ZWQgaXRlbXMgZm9yIHRoZSBob21lIHJlY3JlYXRpb24gbWFya2V0LCBNci4gU3VzdGFyIGVzdGltYXRlcy4gCkhlIGhhcyAkMTQyLDAwMCBjYXNoIGFuZCwgZ2l2ZW4gaGlzIGZydWdhbCB3YXkgb2YgbGlmZSwgaGUgc2hvdWxkIGJlIGFibGUgdG8gYWRkIHRvIHNhdmluZ3MgYXMgbG9uZyBhcyBoZSBpcyB3b3JraW5nLiAKVGhpcyBwbGFjZSBoYWQgYmVlbiBnb29nbGVkIGFuZCByZXNlYXJjaGVkIG9uIHRoZSBpbnRlcm5ldCBieSBNciBQaGlsbGlwICdGb29kIENoYWluJyBPd2VuIGZvciB0aGUgbWFpbiByZWFzb24gdGhhdCAiSXQgc2F5cyBpdCBoYWQgYSByYW5nZSBvZiBwb29sIHRhYmxlcy4iIE11Y2ggdG8gUGhpbCdzIGRpc2FwcG9pbnRtZW50IHRoZSByYW5nZSBvZiBwb29sIHRhYmxlcyB0dXJuZWQgb3V0IHRvIGJlIG9ubHkgdHdvLCBhbmQgd2VyZSBvY2N1cGllZCBieSBzdHVkZW50IHR5cGVzLiAKUGljayBhbGwgY29tcGV0aXRpdmUgZ2Vhci9hemVyaXRlIHRoYXQgeW91IGNhbiBmaXQuIEJlIGdlbnRsZSBvbiB0cmlua2V0cy9yaW5ncyB0byBzdGFydC4gVXN1YWxseSB5b3Uga25vdyBpZiBjZXJ0YWluIHN0YXRzIGFyZSBtb3N0IGxpa2VseSBub3QgZ29vZCBmb3IgeW91ciBzcGVjLiAKQmVjYXVzZSBoZSBoYXNuJ3QgZG9uZSBzaGl0IHRvIHNob3cgdGhhdC4gClNoZSBzYWlkIExpZmVTcGFuIGhlbGQgaXRzIG93biBwb2tlciB0b3VybmFtZW50cyBiZWZvcmUgZ2V0dGluZyBpbnZvbHZlZCB3aXRoIENoYXJpdHkgUG9rZXIgU29sdXRpb25zIGFuZCB0aGV5IHdlbnQgcG9vcmx5LiAKVGhpcyBpcyB0aGUgc3R1ZmYgeW91IGhhdmUgdG8gZGVhbCB3aXRoIGF0IHRoZXNlIGxldmVscy4gSGF0ZSBpdC4gCklmIHlvdSB3YW50IHRvIGdhbWJsZSB3aXRoIGEgY2hhbmNlIG9mIHdpbm5pbmcsIGNob29zZSB0YWJsZSBnYW1lcyB3aXRoIGZhdm9yYWJsZSBvZGRzLCBsaWtlIEJsYWNramFjay4gCkhlIGFsc28gcHJhY3RpY2VzIG91dCBvZiBTRE5ZIHdoaWNoIGlzIHdoZXJlICJ0aGUiIE1pY2hhZWwgQ29oZW4gd2FzIHNlbnRlbmNlZCBhbmQgaGFkIGFsbCBvZiBoaXMgY291cnQgYXBwZWFyYW5jZXMuIAoiUml6b20gVVYgdmlydHVhbCBzcGFjZXMuIApPbnRvIHRoZSBidXMsIGFuZCBvdXQgdG8gdGhlIGxhdW5jaCBwYWQgc3VpdCB1cCBidWlsZGluZy4uIApUaGlzIGlzIGFuIGltcG9ydGFudCBpc3N1ZSBhbmQgYWZmZWN0cyBldmVyeW9uZSB2aWV3aW5nIHJlZGRpdCB3aGljaCBpcyB3aHkgbW9zdCBvZiB0aGUgc3VicyBoYXZlIHBvc3RlZCBhYm91dCBpdC4uIApTbWFsbCBzdGFrZXMgb25saW5lIHBsYXllcnMgZmFjZSBkaWZmZXJlbnQgY2hhbGxlbmdlcy4gVHJhbnNpdGlvbmluZyBmcm9tIG9ubGluZSBwb2tlciBpbnRvIGxpdmUgY2FzaCBnYW1lcyBwcmFjdGljYWxseSBndWFyYW50ZWVzIHNtYWxsZXIgcHJvZml0cywgc2luY2UgY2FzaCBnYW1lcyBtb3ZlIG1vcmUgc2xvd2x5IGFuZCBwbGF5ZXJzIGNhbiBvbmx5IGJlIGluIG9uZSBwbGFjZSBhdCBhIHRpbWUgKG9ubGluZSwgcGxheWVycyB3ZXJlIGFibGUgdG8gcGxheSBtdWx0aXBsZSB0YWJsZXMgc2ltdWx0YW5lb3VzbHkpLiAKSSBteXNlbGYganVzdCByZW50IGFuZCBpbnZlc3QgbXkgbW9uZXkgaW4gb3RoZXIgdGhpbmdzIGJ1dCB0aGlzIGlzIHdyb25nLiBVbmxlc3MgdGhlIHZhbHVlIG9mIHlvdXIgaG91c2Ugc2V2ZXJlbHkgZGVjbGluZWQgaXQgaXMgYWxtb3N0IGFsd2F5cyBhIHNvbGlkIGludmVzdG1lbnQuIEV2ZW4gaWYgeW91J3JlIGdldHRpbmcgc2NyZXdlZCBvbiBwcm9wZXJ0eSB0YXhlcywgbWFpbnRlbmFuY2UsIEhPQSBmZWVzLCBldGMuIApXaGVuIHlvdSB1c2UgYSBCbGFja2phY2sgYW5kIFRleGFzIEhvbGRlbSAzNiB4IDcyIEluY2ggMiBTaWRlZCBMYXlvdXQgeW91IGhhdmUgdGhlIGV4YWN0IHRhYmxlIHlvdSB3aWxsIHNlZSBpbiBhIGNhc2lubyB3aGVuIHlvdSBnbyBwbGF5IHRoZSByZWFsIHRoaW5nLiAKSSB0aGluayBmb3IgdXMgbm9uIHBldGl0ZSBub24gd29tZW4sIGl0J3Mgbm90ICJ0aGUiIGFuc3dlciwgYnV0IGNhbiBiZSB1c2VkLCB0ZW1wb3JhcmlseSwgYXMgcGFydCBvZiBhIGxvbmcgdGVybSB3ZWlnaHQgbG9zcyBzdHJhdGVneS4KQSBsaXR0bGUgYml0IG92ZXJzaW1wbGlmaWVkOiBUaGUgZ292ZXJubWVudCBpcyBhY3R1YWxseSBzaHV0dGluZyBkb3duIGFjY2VzcyB0byBsZWdhbCBzaXRlcy4gVGhpcyBraW5kYSBzY2FyZXMgbWUuIApBbHMgbWlyIGRhbm4gbGFuZ3dlaWxpZyB3dXJkZSwgaGFiIGljaCBtaWNoIG1hbCBkYXMgUGFzc3dvcnQgZnIgUG9rZXI0RXZlciBhdXNnZWtyYW0uIApIYXZlIG5vdCB5ZXQgYmVlbiBkaWxhdGVkIGJ1dCB0aGF0IGlzIGluIHRoZSBwbGFuIGV2ZW50dWFsbHksIHNpbmNlIG15IHRpZ2h0ZXN0IHJpbmcgaXMgb25seSBhIGZldyBtaWxsaW1ldGVycyBhY3Jvc3MuIFNvbWV0aW1lcyBJIGZlZWwgbGlrZSBJIGxlZnQgaXQgdG9vIGxvbmcsIGFuZCBvdGhlciB0aW1lcyBJIHRoaW5rICJtZWgsIEkgd2FpdCB1bnRpbCBJIGNhbiBlYXQgYW55dGhpbmcgYnV0IHNvdXAiLiAKTU9ERVJBVE9SIE9Gd2hhdCdzIHRoaXM/VFJPUEhZIENBU0UkMjBrIHBlciB5ZWFyIHdpdGggeW91ciAoaGlnaCwgYnV0IG92ZXJ3aXNlIG5vdCBleHRyYW9yZGluYXJpbHkgaGlnaCkgc3RhdHMgaXMgZGlmZmljdWx0IHRvIGNvbWUgYnksIGVzcGVjaWFsbHkgY29uc2lkZXJpbmcgbW9zdCB0b3AgZmlsbSBzY2hvb2xzIGFyZSBwcml2YXRlIGFuZCBnZW5lcmFsbHkgcnVuIGFib3V0ICQ1MGsgYSB5ZWFyIGluIHR1aXRpb24uIFVTQyBnaXZlcyBhbiBhcnJheSBvZiBzY2hvbGFyc2hpcHMgdG8gTmF0aW9uYWwgTWVyaXQgZmluYWxpc3RzLCBidXQgYSBoYWxmIHJpZGUgdGhlcmUgd291bGQgc3RpbGwgY29tZSBvdXQgZXZlbiBoaWdoZXIgdGhhbiBDaGFwbWFuIHdpdGggYSBQcm92b3N0IHNjaG9sYXJzaGlwLiBJZiB5b3UgaGFwcGVuIHRvIGxpdmUgaW4gQ2FsaWZvcm5pYSwgVUNMQSB3aXRoIGluIHN0YXRlIHR1aXRpb24gaXMgYSBiYXJnYWluLCBidXQgb3V0IG9mIHN0YXRlIGlzIHRoZSBzYW1lIGRlYWwuCk5leHQgcHV0IGluIHRoZSB2YWx1ZTogMTAwIHRoaXMgaXMgeW91ciBoZWFsdGguIApDb250ZW50IG1hcmtldGluZyBpcyBub3QgYWxsb3dlZC4gQWR2ZXJ0aXNpbmcgdHJhZGluZyBjb250ZXN0cyBpcyBub3QgYWxsb3dlZC4gQnJva2VycyB3aG8gd2FudCB0byBwcm92aWRlIGNsaWVudCBzdXBwb3J0IHNlcnZpY2VzIGhlcmUgbXVzdCBub3QgbGluayBvciBkcm9wIHByb21vdGlvbmFsIC8gbWFya2V0aW5nIG1hdGVyaWFsIGFzIHRoZXkgZG8gc28uIFRoaXMgaW5jbHVkZXMgcG9zdHMgdGhhdCBzdGF0ZSAiUE0gbWUgZm9yIGRldGFpbHMiCkdyZWV0aW5ncyBTdGF0cyBGYW5zISBIZXJlJ3MgdGhlIEZlYnJ1YXJ5IFJlcG9ydApUaGFua3MuIEdhci4uIApNb3RpdmF0ZSBwZW9wbGUuIFdoeSBhcmUgdGhlIGVtcGxveWVlcyB0aGVyZT8gV2hhdCBrZWVwcyB0aGVtIHdpdGggeW91ciBvcmdhbml6YXRpb24gYW5kIHN0b3BzIHRoZW0gZnJvbSBnb2luZyBzb21ld2hlcmUgZWxzZT8gV2hhdCBtYWtlcyB0aGUgZ29vZCBkYXlzIGdvb2Q/IFdoYXQgbWFrZXMgdGhlbSBzdGljayB3aXRoIHRoZSBvcmdhbml6YXRpb24gYWZ0ZXIgYSBiYWQgZGF5IG9yIGEgYmFkIHdlZWs/IERvbid0IGFzc3VtZSBpdCdzIG1vbmV5ICAgbW9zdCBwZW9wbGUgYXJlIG1vcmUgY29tcGxleCB0aGFuIHRoYXQuLiAKQnV0IHdpbGwgdGhlIGdvdmVybm9yIHNlaXplIHRoZSBtb21lbnQ/Ck9uIG5lIHBldXQgcGFzIGZhaXJlIGEuIApFYWNoIHBsYXllciBoYXMgYSBkZWNrIG9mIGNhcmRzIGluc3RlYWQgb2YgdGhlIHRhYmxlIHVzaW5nIGEgc2luZ2xlIGRlY2suCihDIFQgcGhvdG8pIDEgQXJjdGljIGFpciBibGFzdHM7IEdyZWF0IExha2VzOyBPaGlwYW5zIHRvIDUgbW9yZSBkYXlzIEJ5LiBFQVJMRU5FIEVBUkxZIFRoZSBzY2VuZSBpcyBiZWluZyBzZXQgdG9kYXkgYXQgTG9yYWluIENvdW50eSBDb21tdW5pdHkgQ29sbGVnZSBmb3IgdG9tb3Jyb3cncyBzZWNvbmQgYW5udWFsIEhvbWV0b3duIENhcmVlcnMgRGF5IHNwb25zb3JlZCBieSBhcmVhIGNoYW0gIGJlcnMgb2YgY29tbWVyY2UuIApUaGUgc2hhcGUgaXMgY3J1Y2lhbCwgRGF2aXMgc2FpZCwgZXNwZWNpYWxseSB3aGVuIGl0IGNvbWVzIHRvIHRyYW5zaXRpb24gcG9pbnRzIGxpa2UgdGhlIGVkZ2UgYmV0d2VlbiB0aGUgdG9wIGFuZCB0aGUgc2lkZXMgb2YgdGhlIGN1c2hpb24uIApJdCBuZWVkcyB0byBiZSBtb3JlIHZvY2FsIGFuZCBzaGFyZSBpbmZvcm1hdGlvbi4gV2UganVzdCBob3BlIENoYXVkaHJ5IE5pc2FyIHNoYXJlcyBhIGNvbmNyZXRlIG5hdGlvbmFsIHNlY3VyaXR5IHN0cmF0ZWd5IHdpdGggdXMgdG9kYXkuIEhlIHNob3VsZCBoYXZlIGF0IGxlYXN0IGV4cGxhaW5lZCB0aGUgc2Vjb25kIGFpciBzdHJpa2VzIGluIGEgd2Vlay4gCldoYXQgYmVhdHMgMiBwYWlyCkRyZWkgUmVzdGF1cmFudHMgc29yZ2VuIGZyIGRhcyBsZWlibGljaGUgV29obCBkZXIgR3N0ZS4gClVzZXMgYSByYXRoZXIgZmxhdCBvciB3ZWFrIHRvbmUgb2Ygdm9pY2UKV2UgaGF2ZSBhIGdyZWF0IGxpdmUgbXVzaWNhbCBlbnRlcnRhaW5tZW50IGxpbmUgdXAgdGhpcyB5ZWFyISBuZXcgdGhpcyB5ZWFyIG9uIGZyaWRheSBuaWdodCB3aWxsIGJlIHRoZSBjb3VudHJ5IG11c2ljIGdyb3VwLCB0aGUgcmFpbCBicm90aGVycyB0byBnZXQgdGhlIHBhcnR5IHN0YXJ0ZWQhIGZyaWRheSBuaWdodCB3aWxsIGFsc28gZmVhdHVyZSB0aGUgc291bmRzIG9mIGNyb3dlIGNvbW1pdHRlZSEgdGhpcyBwb3B1bGFyIGJhbmQgZGVsaXZlcnMgc29tZXRoaW5nIGZvciBldmVyeW9uZSBjb3ZlcmluZyBmaXZlIGRlY2FkZXMgb2Ygcm9jayBhbmQgcG9wIG11c2ljLiAKSSBjaG9zZSBhIDIsNjAwIGJhaHQgZ2lybC4gVGhlIHByaWNlIGlzIGFsbCBpbmNsdXNpdmUgZnVsbCBzZXJ2aWNlIGFuZCByb29tIGJ1dCBkcmlua3Mgd2VyZSBleHRyYS4gSSBib3VnaHQgYSBib3R0bGUgb2Ygd2F0ZXIgZm9yIDQwIGJhaHQuNi8xMC4gCkkgY29udGludWUgdG8gdGFrZSB0aGUgZG93bnZvdGVzIGJlY2F1c2Ugd2UgaGF2ZSBzZXJpb3VzIGlzc3VlcyBpbiB0aGlzIGNvdW50cnkuIApCdXJnbmVyLiBBLiAKTmV0YWRtbiB1CkdubCBpc3RlciBraSB0ZXJyIGJpdHNpbiBraW1zZSBsbWVzaW4gYmFyIGlpbmRlIHlhYXlhbG0uCktPTSAyIHdhcyBhbm90aGVyIGV4Y2VsbGVudCBjbGltYiB0aGF0IGp1c3Qga2VwdCBjb21pbmcgYW5kIGNvbWluZy4gVGhlc2UgY2xpbWJzIGp1c3QgbmV2ZXIgc2VlbSB0byBlbmQsIGp1c3Qgd2hlbiB5b3UgdGhpbmsgdGhlcmUgaXMgbm8gbW9yZSBtb3VudGFpbiBsZWZ0LCB0aGV5IHRha2UgYSB0dXJuIHRvIHRoZSBsZWZ0IGFuZCBmaW5kIGEgbW91bnRhaW4gaGlkZGVuIGJlaGluZCB0aGUgbW91bnRhaW4geW91IHdlcmUganVzdCBjbGltYmluZy4gTXQgRGlhYmxvICh0aGUgZGV2aWwpIGFpbWVkIHRvIGtpY2sgb3VyIGJ1dHRzLCBidXQgSSBhY3R1YWxseSB0aGluayBJIGdvdCB0aGUgYmV0dGVyIG9mIGl0LiBBYm91dCA0NTAwIGZlZXQgb2YgY2xpbWJpbmcgb3ZlciA1IG1pbGVzIHdhcyBjaGFsbGVuZ2luZy4gQXMgd2UgcGFzc2VkIHNldmVyYWwgcmlkZXJzLCB5b3UgY291bGQgaGVhciB0aGUgbG9jYWxzIHNheWluZyB0aGF0IHRob3NlIHJpZGVycyBkb250IGtub3cgd2hhdCB0aGV5IGFyZSBkb2luZywgYXR0YWNraW5nIHNvIGVhcmx5LCBhcyB0aGlzIG1vdW50YWluIGdvZXMgb24gYW5kIG9uLiBBdCB0aGUgdG9wIG9mIERpYWJsbyB3ZSByZWdyb3VwZWQgd2l0aCB0b25zIG9mIG90aGVyIHJpZGVycyBhbGwgaGF2aW5nIGxpdHRsZSBjZWxlYnJhdGlvbnMgZm9yIGhhdmluZyBjb25xdWVyZWQgdGhlIG1vdW50YWluLgpJIG5vdCBxdWl0ZSBzdXJlIHdoZXJlIEkgYmUgYXQgYXMgZmFyIGFzIHByaWNlLCBidXQgSSBhaW1pbmcgdG8ga2VlcCB0aGUgcGFuZWxzIHVuZGVyICQzMCBlYWNoIHdpdGggYSBzbWFsbCBkaXNjb3VudCBmb3IgYnV5aW5nIGEgY291cGxlIGRpZmZlcmVudCBkZXNpZ25zIGF0IG9uY2UuClRvIHByZXZlbnQgdGhpcywgYWx3YXlzIHdvcmsgaW4gYSBtYWludGVuYW5jZSB3aW5kb3csIGFuZCBpbiB0aGF0IHdpbmRvdyBhZmZvcmQgZW5vdWdoIHRpbWUgdG8gcHJlZW1wdGl2ZWx5IHJlYm9vdCBhdCB0aGUgYmVnaW5uaW5nLiBJZiB0aGUgInByZSBib290IiBmYWlscywgdGhlbiBhYm9ydCB0aGUgY2hhbmdlLiBhbmQgZGVhbCB3aXRoIHRoZSBpc3N1ZS4KQnV0IHRoZSBkZXRlY3RpdmUgSSB0YWxrZWQgdG8gYXNrZWQgYSBsb3Qgb2YgcXVlc3Rpb25zIHRvIGNvcnJvYm9yYXRlIHRoZSBhY2NvdW50LCBhbmQgc2FpZCBpbiB0aGVzZSBjYXNlcyB0aGV5IHJlYWxseSB0cnkgdG8gYXZvaWQgZ29pbmcgdG8gdHJpYWwsIGJlY2F1c2Ugd2l0bmVzcyBpbnRpbWlkYXRpb24gaXMgYSByZWFsIHRoaW5nIGFuZCB5b3UncmUgcHJldHR5IGVhc3kgdG8gZmluZCBhZnRlciB0ZXN0aWZ5aW5nIGFib3V0IHNvbWV0aGluZyB0aGF0IGhhcHBlbmVkIGluL25lYXIgeW91ciBob21lIG9yIGJ1c2luZXNzLiAKSG93ZXZlciwgdGhlIHNjZW5hcmlvIGhhcyBjaGFuZ2VkIGEgbG90IHRvZGF5IGFzIHRoZSBwbGF5ZXJzIGhhdmUgYmVjb21lIGludGVyZXN0ZWQgaW4gdXNpbmcgYWxsIGtpbmQgb2YgcG9rZXIgcHJvZHVjdHMgdGhhdCBtYWtlIHRoZWlyIHByZXNlbmNlcyBtb3JlIG9idmlvdXMgaW4gdGhlIGNhc2lub3MgYXJvdW5kIHRoZSB3b3JsZC4gClBlb3BsZSBuZWVkIHRvIHJlYWxpemUgd2UgYWxsIG9uIHRoZSBzYW1lIGZ1Y2tpbmcgdGVhbSBoZXJlLiBZb3UgYWxsIG5lZWQgdG8gdGhyb3cgb3V0IGFueSBwcmVzdW1wdGlvbnMgb2Ygd2hhdCBzaWRlIG9mIHRoZSBhaXNsZSBpcyBpbm5vY2VudCBvZiB0aGlzLiBUaGV5IGFsbCBpbiBvbiBpdCwgZG9uIHlvdSBnZXQgaXQ/IEVwc3RlaW4gd2FzIHNlbGxpbmcgZ2lybHMgdG8gVHJ1bXAsIENsaW50b24sIG9yIGFueWJvZHkgd2l0aCBtb25leSBhbmQgcG93ZXIuIApBbHNvIGRvbid0IGZvcmdldCB0ZXN0ZXJzLCB3aGVuIHBvaW50aW5nIGEgc3RvcnkgYW55b25lIGRvaW5nIHRlc3RpbmcgbmVlZHMgdG8gd2VpZ2ggaW4gYXMgc29tZXRpbWVzIGEgc2ltcGxlIGRldmVsb3BtZW50IHRhc2sgY2FuIGNhdXNlIGEgbGFyZ2UgdGVzdGluZyBlZmZvcnQgYW5kIGlmIHRoZXkgYXJlIHRydWUgU3ByaW50cyB0aGUgaWRlYSBpcyB0byBoYXZlIGV2ZXJ5dGhpbmcgY29tcGxldGVkIGFzIGl0IGNvdWxkIGJlIHNoaXBwZWQgKGJ1aWx0LCB0ZXN0ZWQgYW5kIGRvY3VtZW50ZWQpLiBTbyB0aGUgZXN0aW1hdGUgb2YgYSBzdG9yeSBpcyBkZXRlcm1pbmVkIGJ5IHRoZSB0ZWFtIG5vdCBieSBhbiBpbmRpdmlkdWFsLiBJdCBpcyBoYWxmIGFzIGhhcmQgYXMgYSAyMCBvciBzbGlnaHRseSBtb3JlIGRpZmZpY3VsdCB0aGFuIGEgOS4gClNoZSBkZWZpbml0ZWx5IG5vdCBhIGJlYXIgYmVjYXVzZSBvZiB0aGUgZmFjZSBzaGFwZSBhbmQgY2hhbmdlIGluIHRleHR1cmUvbWF0ZXJpYWwgYXJvdW5kIHRoZSBmYWNlLiBUaGF0IGxpbmUgcHJldHR5IG11Y2ggb25seSBoYXBwZW5zIHdpdGggbGFtYnMgYW5kIHNoZWVwLiBCZWFycyB1c3VhbGx5IGhhdmUgc2hvcnRlciBhcm1zIHRoYW4gbGVncywgYW5kIGhlcnMgbG9vayBwcmV0dHkgZXF1YWwgaW4gc2l6ZS4gClRoYXQgY2hhcHRlciBoYXVudGVkIERlc21vbmQuIFNoZSBkaXZvcmNlZCwgc2h1dCBkb3duIGhlciBidXNpbmVzcyBhbmQgbW92ZWQgYXdheSBmb3JtIE5vdmEgU2NvdGlhIHNlZWtpbmcgbmV3IG9wcG9ydHVuaXRpZXMgYW5kIGEgZnJlc2ggc3RhcnQuIApUaGUgZmFjdCB0aGF0IHlvdSBzdGF5aW5nIGluIGNvbGxlZ2UgaXMgZ3JlYXQuIERvbiBjaGFuZ2UgeW91ciBtaW5kISBJIHRoaW5rIEkgYWxyZWFkeSBzYWlkIGVub3VnaCBhYm91dCB0aGUgdW5jZXJ0YWludHkgb2YgdGhlIGZ1dHVyZSwgc28gSSBsZWF2ZSBpdCBhdCB0aGF0LgpJIGNsb3NlZCBvZmYgYWJvdXQgMTUgeWVhcnMgYWdvIGFuZCBhbSBraW5kIG9mIGFuIGljZWJlcmcuIEFuZCB0aGVyZSBub3cgdGhpcyBhbWF6aW5nIG1hbiB3aG8gIm9uIHBhcGVyIiBpcyBQRVJGRUNUIGFuZCBJIGtub3cgaGUgdHJlYXQgbWUgd29uZGVyZnVsbHkuIEJ1dCBJIGRvbiBmZWVsIHRoZSBhdHRyYWN0aW9uIGFuZCwgZnJhbmtseSwgSSBzbyBwaXNzZWQgb2ZmLiBPbmUgb2YgdGhlIGZldyB0aW1lcyBJIHdhbnRlZCBhbmQgSSBub3QgZmVlbGluZyBpdC4gCkJ1dCByZWFsbHkgbm90IGdyZWF0Li4gCkZpc2hlciBQcmljZSBQYXBhc2FuIHdvcmtlZCBmb3Igb3VyIGNvbGlja3kgZ3V5LiBTb21ldGltZXMgd2UgZXZlbiBsZWZ0IGhpbSBpbiB0aGVyZSB0aHJvdWdoIHRoZSBuaWdodCBiZWNhdXNlIGl0IHNlZW1lZCBzbyBtdWNoIG1vcmUgY29tZm9ydGFibGUgZm9yIGhpbS4gQW5kIE92b2wgZ2FzIGRyb3BzICAgdGhlc2UgcmVhbGx5IHNlZW1lZCB0byBoZWxwIGhpbSBhIHRvbi4gCkNhc3VhbCBwbGF5ZXJzIHlvdSBwb2tlciBwYWdlcywgd2hpY2ggb2ZmZXIgZ2VuZXJvdXMgcG9rZXIgdG91cm5hbWVudHMgd2l0aCBib251cyB0cmFja3MsIHdoaWNoIGFyZSBub3QgdG9vIGhhcmQgdG8gY2xlYXIgdGhlIGxvd2VyIGxpbWl0cy4gR2l2ZW4gdGhlIGdyb3dpbmcgbGV2ZWwgb2YgcG9wdWxhcml0eSB0aGUgZ2FtZSBvbmxpbmUgcG9rZXIgZ2FtaW5nIG9mZmVycyBhbiBhdHRyYWN0aXZlIGJvbnVzIG9mZmVyLCB3aGljaCBjYW4gYmUgaW4gdGhlIHJhbmdlIG9mIDIwIHRvIDEwMCBwZXJjZW50IG9mIHRoZSBwbGF5ZXJzIG9uIHRoZSBmaXJzdCBkZXBvc2l0LiAKQnV0IGl0IHdhc24ganVzdCB0aGUgcmlnaHQgdGhhdCBicm91Z2h0IGRvd24gQUNPUk4uIHdhcyBtYWluc3RyZWFtIG1lZGlhIHRoYXQgY2lyY3VsYXRlZCBPIHdvcmsgYXMgaWYgaXQgd2VyZSBqb3VybmFsaXNtIHdoZW4gdGhleSB3b3VsZCBuZXZlciBjaXJjdWxhdGUgU2FjaGEgQmFyb24gQ29oZW4gd29yayBhcyBpZiBpdCB3ZXJlIGpvdXJuYWxpc20uIGl0IHdhcyBDb25ncmVzcyB3aWxsaW5nbmVzcyB0byBkZWZ1bmQgQUNPUk4sIGRlc3BpdGUgZXZpZGVuY2UgYW5kIGNvbnN0aXR1dGlvbmFsaXR5LCB0aGF0IGRlc3Ryb3llZCB0aGUgZ3JvdXAuIHRoZSBwZW9wbGUgaW4gY2hhcmdlIGluIFdhc2hpbmd0b24gYW5kIGluIHRoZSBwcmVzcyBhcmUgdW5jb21mb3J0YWJsZSB3aXRoIHRoZSBwcm9taXNlIG9mIHJhZGljYWwgZGVtb2NyYWN5IHRoYXQgQUNPUk4gcmVwcmVzZW50cy4gQUNPUk4gcmVnaXN0ZXJlZCBoaXN0b3JpYyBudW1iZXJzIG9mIEFmcmljYW4gQW1lcmljYW4gdm90ZXJzIGFuZCBoZWxwZWQgZWxlY3QgQmFyYWNrIE9iYW1hLCB0aGV5IHB1dCB3aGF0IGlzIHByaW1hcmlseSBhIHdoaXRlIG1lZGlhIGFuZCBhIHdoaXRlIENvbmdyZXNzIG9uIGd1YXJkLgpEYWQgd2FzIHByZWRlY2Vhc2VkIGJ5IGhpcyBwYXJlbnRzLCBIYXJyeSBhbmQgTmVsbGllIEVja2Vyc2xleSBpbiB0aGUgMTk1MCdzOyBhbiBpbmZhbnQgc29uLCBpbiAxOTU2OyBzaXN0ZXIsIE1hcmpvcmllIExld2lzIGluIDE5NzQ7IGFuZCBoaXMgd2lmZSBvZiA2MCB5ZWFycywgS2F5IGluIDIwMDcuIEhlIGxlYXZlcyB0byBjZWxlYnJhdGUgaGlzIGxpZmUsIHNvbiwgUGV0ZXI7IGRhdWdodGVyIGluIGxhdywgSmFuOyBncmFuZCBkYXVnaHRlcnMsIExpbmRzYXkgYW5kIEplbm5pZmVyLCBhbmQgbWFueSBsaWZlbG9uZyBmcmllbmRzLiAKU28gd2hlbiBJIHNlZSBzdHVmZiBsaWtlIHRoZXNlIGxpZ2h0cywgaXQgbWFrZXMgbWUgbGF1Z2guIEJ1dCBpdCBhbHNvIG1ha2VzIG1lIGEgbGl0dGxlIGFuZ3J5LiAKWW91IG1heSBhbHNvIGxpZ2h0IHVwIGNhbmRsZXMgYWxsIG92ZXIgdGhlIHJvb20uIApUaGUgd2F0ZXIgbGV2ZWwgaW4gTGEgTWVzYSBEYW0gcmVhY2hlZCBpdHMgbG93ZXN0IGluIDEyIHllYXJzIG9uIEZyaWRheSBhbmQgbWF5IGdvIGRvd24gdG8gaXRzIGNyaXRpY2FsIGxldmVsIG9mIDY5IG1ldGVycyBpbiB0aGUgbmV4dCB0d28gZGF5cyBpbiB0aGUgbGF0ZXN0IHNpZ24gb2YgdGhlIHdvcnNlbmluZyBFbCBOaW8gcGhlbm9tZW5vbi4gCl9fX19fLiAiU3VyIGxhIHBsYW5ldGUgTWFycyIsIGluIENvbXB0ZXMgUmVuZHVzLCB2b2wgNzcgbm8gNCwgcC4gMjc4LCBKdWx5IDI4LCAxODczLi4gCkkgYW0gZ2xhZCB0aGlzIGd1eSBhdCBsZWFzdCBnb3QgaGVhbHRoeSBhbmQgZG9lcyBleGVyY2lzZS4gClBlcnNvbmFsbHksIEkgd291bGQganVzdCBwdWxsIGF3YXkgZnJvbSBoaW0uIApJbiB0aGUgZm91bmRlcidzIHdvcmRzIHRha2VzIGEgcmVsYXRpdmVseSBoYW5kcyBvZmYgYXBwcm9hY2ggdG8gaW52ZXN0aW5nLCB3aGljaCBJIGFwcHJlY2lhdGUsIFNhbCBEZWJ1cyBzYXlzLiBsaWtlIHRoYXQgaGUgdGhlcmUgYXMgYSBtZW50b3IgYW5kIGFkdmlzb3IsIGJ1dCBoZSBub3QgaW4gbXkgZmFjZS4gSW4gbXkgZXhwZXJpZW5jZSwgYSBsb3Qgb2YgZW50cmVwcmVuZXVycyBhcmUgcHN5Y2hvdGljLCBzdHViYm9ybiwgZWdvbWFuaWFjcywgbXlzZWxmIGluY2x1ZGVkLiBTbyBoaXMgYXBwcm9hY2ggd29ya3MgZm9yIG1lLiBJIHdvdWxkbiBiZSBoZXJlIHdpdGhvdXQgaGltLgpUaGV5IG9mZmVyIGEgMTAwJWRlcG9zaXQgYm9udXMsIHVwIHRvICQ2MDAsIGFuZCB0aGV5IGhhdmUgc29tZSBhd2Vzb21lIHByb21vdGlvbnNnb2luZyBvbiByaWdodCBub3cuIE9ubGluZSBwb2tlciBzaXRlcy4gCkNvbW11bmljYXRpb246IFByYWN0aWNpbmcgYWNyb3lvZ2EgcmVxdWlyZXMgb25nb2luZywgbWluZGZ1bCBjb21tdW5pY2F0aW9uLiAKT3ZlciA3LDAwMCBCcnVpbnMgcGFydGljaXBhdGUgZWFjaCB5ZWFyLCB3aGljaCBjcmVhdGVzIGFuIGltbWVkaWF0ZSBpbXBhY3Qgb24gYm90aCB0aGUgcGFydGljaXBhbnQgYW5kIHNpdGUsIGFuZCB0aGUgZXZlbnQgaGFzIGJlZW4gZmVhdHVyZWQgaW4gcHJpbnQgYW5kIGludGVybmV0IG5ld3MgbWVkaWEgYm90aCBsb2NhbGx5IGFuZCBuYXRpb25hbGx5LlRoZSBVQ0xBIEZvb2QgRHJpdmUsIGhvc3RlZCBieSBVQ0xBIFRyYW5zcG9ydGF0aW9uLCBjb2xsZWN0cyBnb29kcyBhbmQgZnVuZHMgZm9yIGJvdGggdGhlIExvcyBBbmdlbGVzIFJlZ2lvbmFsIEZvb2QgQmFuayBhbmQgdGhlIFVDTEEgRm9vZCBDbG9zZXQsIGEgVUNMQSBDb21tdW5pdHkgUHJvZ3JhbXMgT2ZmaWNlIHByb2dyYW0gdGhhdCBwcm92aWRlcyBzdHJ1Z2dsaW5nIHN0dWRlbnRzIGEgaGVscGluZyBoYW5kLiAKV2hpbGUgT1AgbWF5IG5vdCBoYXZlIGJlZW4gYXdhcmUgb2YgaXQgYXQgdGhlIHRpbWUsIGluIHRoZSBmdXR1cmUgaXQgYW4gZXZlbiBtb3JlIG9idmlvdXMgNGJldCwgYmVjYXVzZSB0aGUgQ08gaXMgbm90IGEgdHlwaWNhbCBwYXNzaXZlIDEvMiBwbGF5ZXIuIApJIHRoaW5rIHBlb3BsZSBvdXIgYWdlIChJIDI4LCBzbyBzdGlsbCB5b3VuZykgaGF2ZSBpc3N1ZXMgd2l0aCB0aGlzIGJlY2F1c2Ugd2UgZ3JldyB1cCB3aXRoIHNvY2lhbCBtZWRpYSB3aGljaCBwYWludHMgdW5yZWFsaXN0aWMgcGljdHVyZXMgb2YgZXZlcnlib2R5IGFuZCB0aGVpciBsaXZlcyBhbmQgbWFrZXMgcGVvcGxlIHNlZW0gbW9yZSBleGNpdGluZyBhbmQgaW50ZXJlc3RpbmcgdGhhbiB0aGV5IHJlYWxseSBhcmUuLiAKQnJvb2tlIHdhcyBpbiBhIHNpdHVhdGlvbiB3aXRoIHNwZWNpZmljIHBlb3BsZSBhbmQgc29tZXRoaW5nIGhhcHBlbmVkLiAKT3JnYXNtIG15IGxvcmQgYWxzbyBkaWQgbm90IHNrZWRhZGRsZSBsb25nLiBIZSBmaXJtbHkgZ3Jhc3BlZCBteSBoYW5kcyBvbiB0aGUgcG9zdGVyaW9yLCBhbmQgZW50ZXJlZCBhY3V0ZWx5IGFuZCBwYXVzZWQgZm9yIHN1bmRyeSBzZWNvbmRzLiBJIGZlbHQgYSBzdXJnZSBpbnNpZGUuClNvLCBteSBmcmllbmQgd2VudCB3aXRoIG1lIGFuZCB3ZSBiZWdnZWQgYW5kIGJlZ2dlZCB3aGVuIHNoZSBmaW5hbGx5IGRpZC4gClNvIEkgY2FsbGVkIGFuZCBnb3Qgc2xvd3JvbGxlZC4KTXkgd2F0ZXIgb25seSBmYXN0IHdhcyA2IGRheXMgYW5kIEkgbG9zdCAxMiBwb3VuZHMuIApKdXN0IHRha2UgYSBsb29rIGF0IHRoZSB0aHJlZSByZW1haW5pbmcgYnVsbGV0IGhvbGVzIGluIHRoZSB3YWxsLCBhbmQgaW4gZmFjdCwgb25lIGJ1bGxldCBzdGlsbCByZW1haW5zIGxvZGdlZCBpbiB0aGUgd2FsbCwgZm9yIGEgZ2xpbXBzZSBpbnRvIGl0cyBoaXN0b3J5LiBBY2NvcmRpbmcgdG8gb25lIG9mIHRoZSBiYXJ0ZW5kZXJzLCB0aGUgb3RoZXIgYnVsbGV0IGhvbGVzIHdlcmUgcmVtb3ZlZCB3aGVuIGEgZG9vciB3YXMgcHV0IGluLiBCdXQgdGhyZWUgc3RpbGwgcmVtYWluLiBBbmQgb24gdGhlIHdhbGwgaXMgYSBjb2xsYWdlIG9mIGFydGlmYWN0cywgbGlrZSB0aGUgZGVjayBvZiBjYXJkcyB0aGF0IHdhcyBiZWluZyB1c2VkIHRoYXQgZmF0ZWZ1bCBkYXkuCk5lc3Qgc3RlcCBwYXJjZWwgMiwgZHJvdmUgdXAgdG8gbG9vayBhdCBpdCAuIApBbHNvIGp1c3QgYSB0aXAsIHdoZW4gbG9va2luZyB1cCBvdmVyY2xvY2tpbmcgZ3VpZGVzIEkgZmluZCBpdCBtb3JlIHVzZWZ1bCB0byBzZWFyY2ggZm9yIG15IG1vdGhlcmJvYXJkIGZpcnN0IGFuZCB0aGVuIG15IENQVS4gCkhhZCBpdCBiZWVuIG9uZSBjb21tZW50IGJ5IG9uZSBwZXJzb24gSSdkIGhhdmUgaWdub3JlZCBpdCBidXQgd2hlbiBpdCBwb3BwZWQgdXAgYSBmZXcgZGlmZmVyZW50IHRpbWVzIGl0IHN0YXJ0ZWQgdG8gbWFrZSBtZSBxdWVzdGlvbiBvZiB0aGlzIHdhcyBzb21ldGhpbmcgaGFwcGVuaW5nLi4gCldlbGwsIHdobyBkbyB3ZSBzZWUgYXMgYmVpbmcgdGhlIGhlYXZ5d2VpZ2h0IGZpZ2h0ZXJzIHRvIHByb3ZpZGUgdXMgd2l0aCBlbnRlcnRhaW5pbmcgZmlnaHRzIGluIHRoZSBmdXR1cmU/IFRoZSBVU0EgaGFzIG9mIGNvdXJzZSB0aGUgdW5iZWF0ZW4gRGVvbnRheSBXaWxkZXIgKDMwIDAsIDMwIEtPIHdobyBoYXMgYmVlbiBoYW5kbGVkIHRoaXMgZmFyIGFuZCBtYXRjaGVkIHZlcnkgY2FyZWZ1bGx5LiBUaGUgcG90IG9mIGdvbGQgY291bGQgc29vbiBiZSBhdCB0aGUgZW5kIG9mIHRoYXQgcmFpbmJvdy4gVGhlIGJpZyBwaWN0dXJlIGJlaW5nIGFib3V0IHRvIHVuZm9sZCBwb3N0IEtsaXRzY2hrbyBicm90aGVycyB3aWxsIHNvb24gYmUgaGFwcGVuaW5nLiBUaGUgbW9uZXkgbWVuIGluIGNoYXJnZSBvZiBEZW9udGF5IGFyZSB3ZWxsIGF3YXJlIHRoZSByb2FkIHdpbGwgc29vbiBiZSBjbGVhciwgYmVjYXVzZSB0aGUgaGVhdnl3ZWlnaHQgYm94aW5nIGhhcyBhbHdheXMgYmVlbiB0aGUgdWx0aW1hdGUgcG9rZXIgZ2FtZS4gWW91IGh5cGUgeW91ciBmaWdodGVyLCBhbmQgSSB3aWxsIHNlZSB5b3UgYW5kIHJhaXNlIHlvdSBtb3JlLgpNb3Jlb3ZlciwgYmx1ZmZpbmcgYW5kIGJldHRpbmcgd2VyZSBwYXJ0IG9mIHRoZSBnYW1lLCB3aGljaCB3aWxsIHNlZSBpdHMgYmlnZ2VzdCBldm9sdXRpb24gYWZ0ZXIgdGhlIEZyZW5jaCBleHBvcnRlZCBpdCB0byB0aGUgQW1lcmljYW4gY29udGluZW50LiAKQ2hhaXJtYW4gZW1lcml0dXMgKGxpa2UgeW91bmdlciBicm90aGVyIFJvbmFsZCkgb2YgRXN0ZWUgTGF1ZGVyLCBjb3NtZXRpY3MgY29tcGFueSB0aGVpciBtb3RoZXIgZm91bmRlZC4gIEFuaWwgQW1iYW5pLCQ1LjMgYmlsbGlvbiwgV2hhcnRvbiBNQkEuIApMYXRlciwgaGUgcHJvbW90ZWQgaGlzIG93biBzaXRlLCBJdmV5IFBva2VyLCBhbmQgbWFueSBvZiB0aGUgdG9wIHByb3Mgd2VyZSB3ZWFyaW5nIGFuIEl2ZXkgUG9rZXIgcGF0Y2gsIHByZXN1bWFibHkgb24gYSBwcm9taXNlIG9mIGEgY3V0IG9mIHRoZSBhY3Rpb24uIFRoZSBzaXRlLCBkZXNwaXRlIHNvbWUgd29uZGVyZnVsbHkgaGlnaCBjbGFzcyBhZHZlcnRpc2luZywgbmV2ZXIgZ290IG9mZiB0aGUgZ3JvdW5kIGFuZCBJdmV5IGV2ZW50dWFsbHkgc2lnbmFsbGVkIGl0cyBjbG9zdXJlIGluIDIwMTQuCkl0IG5vdCBhIGJsYWNrIG9yIHdoaXRlIGlzc3VlIGFuZCBJIGFsbG93ZWQgdG8gc2F5IEkgZG9uIHN1cHBvcnQgSXNyYWVsIHRhY3RpY3MgYWdhaW5zdCBQYWxlc3RpbmlhbnMgd2l0aG91dCB0aGUgYXNzdW1wdGlvbiB0aGF0IEkgYSBob21vcGhvYmUgbGlrZSBob3cgdGhlIGhlbGwgZG9lcyB0aGF0IGV2ZW4gY29ubmVjdCBpbiB5b3VyIG1pbmQuIApPbmUgb2YgdGhlIHNpbGxpZXIgdGhpbmdzIGFib3V0IGhpbSB3YXMgaGlzIGxvdmUgZm9yIHByaW50ZXJzLiBBbnl0aW1lIHNvbWVvbmUgd291bGQgdXNlIHRoZSBwcmludGVyIGhlIGxvc2UgaGlzIHNoaXQgYW5kIHJ1biBhcm91bmQgY3JhenkuIE91ciBjYXQgZmlndXJlZCBvdXQgaG93IHRvIHVzZSB0aGUgcHJpbnRlciBhbmQgd291bGQgbWFrZSBibGFuayBjb3BpZXMgYW5kIHdvdWxkIGdvIHRocm91Z2ggZW50aXJlIHJlYW1zIG9mIHBhcGVyLiAKQWZ0ZXIgY2hvb3NpbmcgeW91ciBhY2NvbXBsaWNlcyBpbiB5b3VyIG1lbmFnZSBhIHRyb2lzLCB5b3UgdGFrZSBhIGxpZnQgdG8gdGhlIHJvb20uIFllcywgaXQganVzdCBhIHNob3Bob3VzZSBidXQgaXQgaGFzIGFuIGVsZXZhdG9yLiBUaGUgcm9vbSBpcyBkaWZmZXJlbnQgdG8gYW55IG90aGVycyBJIGhhdmUgc2Vlbi4gCkFza01lSWZJbUFSZXB0aWxvaWQgIDAgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpUb3AgMTAgYWZmb3JkYWJsZSBzcGFzClJpZ2h0IG5vdywgZXZlcnl0aGluZyBpcyBzbyB0aWdodCwgaXQgZnVuIGhvY2tleSwgc2FpZCBKZXRzIGZvcndhcmQgTmlrb2xhaiBFaGxlcnMuIApUaGF0J3MgZXh0cmEgbW9uZXkgdGhhdCBjYW4gYmUgd29uIGNvdXJ0ZXN5IG9mIHRoZSBob3VzZS4uIApJdCByZWFsbHkgc2VlbXMgbGlrZSB0aGF0IHdoYXQgSmF5bmUgZGlkICAgaGUganVzdCBzdGFydGVkIGluc2lzdGluZyBoZSB3YXMgYSBnb29kIGNvYWNoLCBnb3QgaGlzIG5hbWUgb3V0IHRoZXJlLCBhbmQgbm93IGhlIHNlZW1zIHRvIGhhdmUgYmxvd24gdXAuIEJ1dCBkaWQgaGUgZXZlciByZWFsbHkgcHV0IGluIHRoZSB3b3JrIHJlcXVpcmVkIHRvIGJlY29tZSBhIGdvb2QgY29hY2g/IERpZCBoZSBlYXJuIGl0Py4gCkhlIHN0YXJ0ZWQgZnJvbSBBbHBoYS4gV2hlbiBoZSBxdWl0IGFyb3VuZCBUZW1wZXN0IGhlIGdhdmUgbWUgaGlzIHdob2xlIGNvbGxlY3Rpb24scG93ZXIgbmluZXMgYW5kIGFsbC4gCiJUaGFuayB5b3UgRW1lcmFsZC4gSSBhbSBzb3JyeSBpdCB3YXNuIHlvdS4iCkJpZyBhZHZhbnRhZ2UgZm9yIG1lIHdhcyB3b3JraW5nIHRoZSBhZnRlcm5vb24gc2hpZnQgZnJvbSBmb3VyIHRvIG1pZG5pZ2h0LiAKQSBOb3JkIEJvYXJkIHdvdWxkIGhlbHAsIGJ1dCB0aGV5IGhhcmQgdG8gZ2V0IGFuZCBleHBlbnNpdmUpLiAKVGhlIGRlZ3JlZSBvZiBkeXNmdW5jdGlvbmFsIHN0YWJpbGl0eSAobW90b3IgY29udHJvbCkgZGljdGF0ZXMgaG93IGNoYWxsZW5naW5nIHRoZSBleGVyY2lzZSBzaG91bGQgYmUgaW4gcmVnYXJkcyB0byBwb3NpdGlvbmluZyBhbmQgcmVzaXN0YW5jZS5DaG9wIGFuZCBsaWZ0IHBhdHRlcm5zIGZvciBmdW5kYW1lbnRhbCBzdGFiaWxpdHkgZHlzZnVuY3Rpb25zIHR5cGljYWxseSBiZWdpbiBpbiBhbiB1bmxvYWRlZCBzdXBpbmUgcG9zaXRpb24gdG8gbGVzc2VuIGRlbWFuZCBvbiB0aGUgbmVydm91cyBzeXN0ZW0sIHRodXMgaW5jcmVhc2luZyBxdWFsaXR5IG9mIG1vdmVtZW50LlN0YXRpYyBhbmQgZHluYW1pYyBzdGFiaWxpdHkgZHlzZnVuY3Rpb25zIHdhcnJhbnQgdGFsbCBvciBoYWxmIGtuZWVsaW5nIHBhdHRlcm5zIHRvIGVuZ2FnZSBjb3JlIG11c2N1bGF0dXJlIG9mIHRoZSBoaXAuIApUaXlhdHJvbnVuIHlhbiBzcmEgb2N1a2xhcm4gYnlrIGJpciBrZXlpZmxlIGl6bGVkaWkgc2loaXJiYXogdmUgeXogYm95YW1hIGV0a2lubGlrbGVyaSBkZSBvY3VrbGFyYSBlLi4gCkkgaGF2ZSBmaXZlIGNhdHMsIHVuZW1wbG95ZWQsIGFuZCBJIGJpbmdlIGVhdC4gCkwgZHUgc2V4ZSAgT3R0YXdhIG4gcGFzIGRpZmZyZW50ZSBkZSBjZWxsZSBkZXMgYXV0cmVzIGdyYW5kZXMgdmlsbGVzLiAKWW91IGFncmVlIG5vdCB0byBjaXJjdW12ZW50LCBkaXNhYmxlIG9yIG90aGVyd2lzZSBpbnRlcmZlcmUgd2l0aCBzZWN1cml0eSByZWxhdGVkIGZlYXR1cmVzIG9mIHRoZSBXZWJzaXRlcyBvciBmZWF0dXJlcyB0aGF0IHByZXZlbnQgb3IgcmVzdHJpY3QgdXNlIG9yIGNvcHlpbmcgb2YgYW55IENvbnRlbnQgb3IgZW5mb3JjZSBsaW1pdGF0aW9ucyBvbiB1c2Ugb2YgdGhlIFdlYnNpdGVzIG9yIFNlcnZpY2VzIG9yIHRoZSBDb250ZW50IHRoZXJlaW4uIApIZSBpbmNyZWRpYmx5IHN1cHBvcnRpdmUgYW5kIHdvdWxkIGJlIHRoZSB0eXBlIHRvIGRvIGFueXRoaW5nIHRvIG1ha2Ugc3VyZSBJIHN1Y2NlZWQsIGJlY2F1c2UgaGUganVzdCBsb3ZlcyBtZSB0aGF0IG11Y2guIApJIHByZXR0eSBzdXJlIGhlIGhhdmUgdG8gbWVudGlvbiBhbGwgaGlzIGhlaXJzL2NoaWxkcmVuIGluIHRoZSB3aWxsLCBhbmQgc3BlY2lmaWNhbGx5IHNheSB0aGF0IGhlIHdhbnRlZCB0aGVtIHRvIGdldCBub3RoaW5nLiBOQUwsIGFwcGFyZW50bHkgbmVnbGVjdGluZyB0byBtZW50aW9uIHNvbWVvbmUgaW4gYSB3aWxsIG9wZW5zIHRoZW0gdG8gY2xhaW0gdGhhdCB0aGV5IHdlcmUgZm9yZ290dGVuLiAKIlRoZSBvYnNlcnZlZCBkaWZmZXJlbmNlcyBpbiBST0lzIFtyZXR1cm4gb24gaW52ZXN0bWVudHNdIGFyZSBoaWdobHkgc3RhdGlzdGljYWxseSBzaWduaWZpY2FudCBhbmQgZmFyIGxhcmdlciBpbiBtYWduaXR1ZGUgdGhhbiB0aG9zZSBvYnNlcnZlZCBpbiBmaW5hbmNpYWwgbWFya2V0cywiIHRoZSBwYXBlciBzYXlzLCAid2hlcmUgZmVlcyBjaGFyZ2VkIGJ5IHRoZSBtb25leSBtYW5hZ2VycyB2aWV3ZWQgYXMgYmVpbmcgbW9zdCB0YWxlbnRlZCBjYW4gcnVuIGFzIGhpZ2ggYXMgdGhyZWUgcGVyY2VudCBvZiBhc3NldHMgdW5kZXIgbWFuYWdlbWVudCBhbmQgdGhpcnR5IHBlcmNlbnQgb2YgYW5udWFsIHJldHVybnMuIi4gCklmIHlvdXIgdG9vdGhhY2hlIGlzbid0IHJlc3BvbmRpbmcgdG8gaG9tZSByZW1lZGllcyBvciBpdCBsYXN0cyBsb25nZXIgdGhhbiBhIGNvdXBsZSBvZiBkYXlzLCB5b3Ugc2hvdWxkIHZpc2l0IHlvdXIgZGVudGlzdCBhcyBzb29uIGFzIHBvc3NpYmxlLiBJbmRpY2F0b3JzIHRoYXQgeW91IG5lZWQgYW4gaW1tZWRpYXRlIGRlbnRhbCBhcHBvaW50bWVudCBpbmNsdWRlIGZldmVyLCBzd2VsbGluZyBvZiB0aGUgZmFjZSwgZGlzY2hhcmdlIGZyb20gdGhlIGd1bXMsIHJlZCBndW1zLCBzZXZlcmUgcGFpbiBhZnRlciBhIHRvb3RoIGhhcyBiZWVuIHJlbW92ZWQsIG9yIHRyb3VibGUgYnJlYXRoaW5nIG9yIHN3YWxsb3dpbmcuIFlvdSBzaG91bGQgYWxzbyBub3RlIHRoYXQgcGFpbiBpbiB0aGUgamF3IG9yIG1vdXRoIHRoYXQncyBhY2NvbXBhbmllZCBieSBjaGVzdCBwYWluIGNhbiBtZWFuIHlvdSdyZSBoYXZpbmcgYSBoZWFydCBhdHRhY2suIApUaGUgRG9jdG9yIChsb29raW5nIHNlcmlvdXMgYW5kIG1ha2luZyBhIHN0ZWVwbGUgb2YgaGlzIGhhbmRzLCBob3BpbmcgdG8gaW1wcmVzcyB0aGUgY291cGxlIGVub3VnaCB0byBqdXN0aWZ5IGhpcyAkMTAwIGFuIGhvdXIgZmVlKTogSG1tbS4gSSBkZXRlY3QgYSBkaWZmZXJlbmNlIG9mIHBlcnNwZWN0aXZlIGhlcmUuCkkgbm90IHN1cmUgd2h5IGFyZSB5b3Ugc28gY29uY2VybmVkIGFib3V0IHNvbWVvbmUgZWxzZSBiZWluZyBtZXNzeQpUaGUgcHJpY2Ugb2YgdGhlc2UgNCBkZWNrIGF1dG9tYXRpYyBzaHVmZmxlcnMgYXJlIHJlYXNvbmFibGUuIE5vd2FkYXlzLCB0aGVzZSBzaHVmZmxlcnMgYXJlIGF2YWlsYWJsZSBpbiBhbGwgbG9jYWwgc3BvcnRzIHNob3BzLiBZb3UgY2FuIGFsc28gZmluZCBhbGwgdGhlIGF2YWlsYWJsZSBtb2RlbHMsIHNpemVzIGFuZCBjb2xvcnMgaW4gdGhlIHBvcHVsYXIgb25saW5lIG1hcmtldHBsYWNlcy4gCkxvY2t3b29kIGFsc28gaGFkIGFjY3VzZWQgcmVndWxhdG9ycyBvZiBhYnJ1cHRseSBjaGFuZ2luZyB0aGVpciB2aWV3IG9mIHRoZSBnYW1lcyBhZnRlciBHb3YuIFJpY2sgU2NvdHQgYW5kIHRoZSBTZW1pbm9sZSBUcmliZSBzaWduZWQgYSBwcm9wb3NlZCAkMyBiaWxsaW9uIGdhbWJsaW5nIGRlYWwgaW4gRGVjZW1iZXIuIFRoZSBkZWFsIHdhcyBuZXZlciBhcHByb3ZlZCBieSB0aGUgTGVnaXNsYXR1cmUgYW5kIG5ldmVyIHdlbnQgaW50byBlZmZlY3QuIApKYXBhbmVzZSBjcmFmdCBib29rIDE0MjUgMTAwMCBLTklUVElORyBQQVRURVJOUyBCT09LICg3MDAgS25pdCAzMDAgQ3JvY2hldCkgLiAKWW91IGNhbiBleHBlY3QgeW91ciBodXNiYW5kIHRvIGtub3cgYW5kIGRvIGV2ZXJ5dGhpbmcgZm9yIHlvdS4gSSB0aG91Z2h0IHlvdSB3b3VsZCBoYXZlIGxlYXJuZWQgdG8gdXNlIHlvdXIgd29yZHMuIApJIGJhc2ljYWxseSBoYXZlIGV2ZXJ5IHJlYXNvbiB0byBibHVmZiByYWlzZSBoZXJlLiAKWW91ciBidWRkeSBwcm9iYWJseSBnZXRzIGhhbGYgdGhlIGNhbiBlbXB0aWVkIGJlZm9yZSB5b3VyIGhhbGYgY2FuIGRpc2FibGVzIGhpbS4gCk9ubGluZSBwb2tlciByb29tcyBtYWtlIGl0IGVhc2llciBmb3IgdGhlIGF2ZXJhZ2UgcGVyc29uIHRvIHBsYXkgcG9rZXIgd2l0aG91dCBoYXZpbmcgdG8gd2FnZXIgdmFzdCBzdW1zIG9mIG1vbmV5LCBhbmQgdGhpcyBpcyBlc3BlY2lhbGx5IHRydWUgb2YgdGhlIGZyZWUgb25saW5lIHBva2VyIHJvb21zLiBXaGF0ZXZlciB5b3VyIGdhbWUgaXMgdGhvdWdoLCBiZSBpdCBmcmVlIG9yIG5vdCwgeW91IHdpbGwgZmluZCB0aGF0IGtub3dpbmcgc29tZSBvbmxpbmUgcG9rZXIgc3RyYXRlZ3kgYW5kIGdhbWUgcGxheXMgd2lsbCBiZSBvZiBncmVhdCBoZWxwIHRvIHlvdS4uIApIb3cgdGhpcyB3b3JrIGNvdWxkIGJlIGFwcGxpZWQgdG8gaW1wcm92ZSBpbnNpZ2h0IGFuZCB1bmRlcnN0YW5kaW5nIG9mIGRlY2lzaW9uIG1ha2luZyBhbW9uZyBzcG9ydCBwcm9mZXNzaW9uYWxzIGlzIGV4YW1pbmVkLiBXZSBzb3VnaHQgdG8gaW50cm9kdWNlIGEgY2F0ZWdvcml6YXRpb24gb2YgZGVjaXNpb24gbWFraW5nIHVzZWZ1bCB0byBwcmFjdGl0aW9uZXJzIGluIHNwb3J0OiBndW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zLk1ldGhvZHM6IFR3ZW50eSB0aHJlZSBlbGl0ZSBhdGhsZXRlcyB3aG8gY29tcGV0ZSBhbmQgaGF2ZSBmcmVxdWVudCBzdWNjZXNzIGF0IGFuIGludGVybmF0aW9uYWwgbGV2ZWwgKGluY2x1ZGluZyBzaXggT2x5bXBpYyBtZWRhbCB3aW5uZXJzKSBwZXJmb3JtZWQgdGFza3MgcmVsYXRpbmcgdG8gdGhyZWUgY2F0ZWdvcmllcyBvZiBkZWNpc2lvbiBtYWtpbmcgdW5kZXIgY29uZGl0aW9ucyBvZiBsb3cgYW5kIGhpZ2ggcGh5c2ljYWwgcHJlc3N1cmUuIERlY2lzaW9uIG1ha2luZyB1bmRlciByaXNrIHdhcyBtZWFzdXJlZCB3aXRoIHBlcmZvcm1hbmNlIG9uIHRoZSBDYW1icmlkZ2UgR2FtYmxpbmcgVGFzayAoQ0dUOyBSb2dlcnMgZXQgYWwuLCAxOTk5KSwgZGVjaXNpb24gbWFraW5nIHVuZGVyIHVuY2VydGFpbnR5IHdpdGggdGhlIEJhbGxvb24gQW5hbG9ndWUgUmlzayBUYXNrIChCQVJUOyBMZWp1ZXogZXQgYWwuLCAyMDAyKSwgYW5kIGZhc3QgcmVhY3RpdmUgcmVzcG9uc2VzIGFuZCBpbnRlcmZlcmVuY2Ugd2l0aCB0aGUgU3Ryb29wIFRhc2sgKFN0cm9vcCwgMTkzNSkuIApXZSB3YW50IHRvIHNlZSB0aGUgZ3VpZGVsaW5lcyB1cGRhdGVkIGJ5IHRoZSBnb3Zlcm5tZW50IHRvIHJlcXVpcmUgZ2FtaW5nIHZlbnVlcyB0byBkb25hdGUgY29tbXVuaXR5IGZ1bmRzIHRvIGNoYXJpdGllcyB0aGF0IGVuc3VyZSBtb25leSBpcyByZXR1cm5lZCB0byB2dWxuZXJhYmxlIGNvbW11bml0aWVzLiBBYm91dDMwIHBlciBjZW50IG9mIHBlb3BsZSB3aG8gcmVndWxhcmx5IHVzZSBwb2tpZXMgYXJlIHN1ZmZlcmluZyBoYXJtICAgYW5kIGVhY2ggcHJvYmxlbSBnYW1ibGVyIGltcGFjdHMgb24gYW4gZXN0aW1hdGVkIDUgMTAgb3RoZXIgcGVvcGxlLiBUaGlzIG1ha2VzIGdhbWJsaW5nIGhhcm0gZXZlcnlvbmUncyBwcm9ibGVtLiAKVGVhIGtldHRsZSBib2lsaW5nIG1ha2luZyBsb3VkIHNjcmVlY2hpbmcgbm9pc2UuIApSZWFsdG9yIERlbGF5aW5nIFJlc3BvbnNlIHRvIE9mZmVyCldlIHRoaW5rIGhlIHdhcyBvdXQgbG9va2luZyBmb3IgaGVyLiBTbyBJIGd1ZXNzIGl0IGlzIGZhaXJseSBjb21tb24gd2l0aCBib25kZWQgcGFpcnMsIEkganVzdCBjYW4gc2NpZW50aWZpY2FsbHkgbWFrZSBzZW5zZSBvZiBpdCBpbiBteSBoZWFkIGFuZCBJIGtlZXAgc2VhcmNoaW5nIGZvciBhIHJlYXNvbiwgb3Igc29tZXRoaW5nIEkgbXVzdCBoYXZlIGRvbmUgd3JvbmcgdG8gcHJvbXB0IGl0IHNvIHF1aWNrbHkuIApJJ20gbm90IGEgbWVkaWNhbCBkb2N0b3Igb3Igc29tZW9uZSB3aG9zZSBsaW5lIG9mIHdvcmsgZXZlciBpbnZvbHZlcyBjcmltZSBzY2VuZXMsIGJ1dCBJIHRoaW5rIHdoZW4gdGhleSBvcmlnaW5hbGx5IHJlbGVhc2VkIHRoYXQgaW5mb3JtYXRpb24sIHRoZXkgc2FpZCB0aGF0IHRoZSBCQUMgd2FzIGhpZ2ggZXZlbiBmb3IgZGVjb21wb3NpdGlvbiAoaW5kaWNhdGluZyB0aGUgdGluaWVzdCBhbW91bnQgb2YgZG91YnQpLiBJIHJlYWQgYSBzY2llbnRpZmljIGFydGljbGUgdGhhdCBzYWlkIHRoZXJlIGlzIG5vdCBhbHdheXMgYWxjb2hvbCBwcmVzZW50IGluIGEgc3RvbWFjaCBiZWNhdXNlIG9mIGRlY29tcG9zaXRpb24sIGJ1dCBzb21lIGZhY3RvcnMsIGxpa2UgZXhwb3N1cmUgdG8gZXh0cmVtZSBoZWF0LCB3ZXJlIG1vcmUgbGlrZWx5IHRvIGNhdXNlIGEgcG9zdCBtb3J0ZW0gaGlnaCBCQUMuIFNvLCBwZXJzb25hbGx5LCBJIGJlbGlldmUgdGhhdCBpdCB3YXMganVzdCBkZWNvbXBvc2l0aW9uLCBidXQgSSBkb24ndCB0aGluayBpdCdzIHRoYXQgY3JhenkgdG8gc3BlY3VsYXRlIHRoYXQgaXQgbWF5IGhhdmUgYmVlbiBiZWNhdXNlIHNoZSBkcmFuayBhbGNvaG9sLiAKVGhleSBhcmUgcmFwaWRseSBncm93aW5nLCBhbmQgaGUncyBiZWVuIGdpdmVuIGFib3V0IDEwIG1vbnRocy4gCk5vIGJ1aWxkaW5ncywgb2YgY291cnNlLiBTZW5kIGhlciB0aGVyZS4gQWxvbmcgd2l0aCB3aGF0ZXZlciBvdGhlciBKTnMgYXJlIGx5aW5nIGFyb3VuZDogU09zLCBmYW1pbHkgbWVtYmVycywgYm9zc2VzLCB3aGF0ZXZlci4KQ2Fubm90IGRlc2lnbiB5b3VyIHdheSBhcm91bmQgdGhpcyBwcm9ibGVtLCBzYXlzIENyYW56LiB0aGUgaWRlYSBvZiBsdW1iYXIgc3VwcG9ydCBoYXMgYmVjb21lIHNvIGVtYmVkZGVkIGluIHBlb3BsZSBjb25jZXB0aW9uIG9mIGNvbWZvcnQsIG5vdCB0aGVpciBhY3R1YWwgZXhwZXJpZW5jZSBvbiBjaGFpcnMuIFdlIGFyZSwgaW4gYSBzZW5zZSwgbG9ja2VkIGludG8gaXQuIHN3aXZlbCBjaGFpciBoYXMgdHJpcGxlZCBpbnRvIGEgbW9yZSB0aGFuICQzIGJpbGxpb24gbWFya2V0IHNlcnZlZCBieSBtb3JlIHRoYW4gMTAwIGNvbXBhbmllcy4gVW5zdXJwcmlzaW5nbHksIEFtZXJpY2EgYmVzdCBzZWxsaW5nIGNoYWlyIGhhcyBtYWRlIGEgZmV0aXNoIG9mIGx1bWJhciBzdXBwb3J0LgpXaGlsZSBpdCBpbXBvcnRhbnQgZm9yIHBlb3BsZSB0byBkb25hdGUgc2FmZWx5LCBjaGFyaXRpZXMgYWxzbyBoYXZlIHRvIHB1dCBpbiB0aGUgZWZmb3J0IHRvIHByb3RlY3QgdGhlaXIgZG9ub3JzLiAKSSBkaWRuJ3Qgd2FudCB0byBjYXVzZSBhIHNjZW5lIG9yIGVtYmFycmFzcyBoaW0sIHNvLCBhZnRlciBoZXNpdGF0aW5nIGZvciBhIG1vbWVudCBJIGp1c3QgdGhvdWdodCwgIk9oLCB3aGF0IHRoZSBoZWxsLiIKVGhlIGJpZyBzZWxsOiBPbmUgb2YgdGhlIG5vdGV3b3J0aHkgZmVhdHVyZXMgb2YgdGhpcyBvbmUgYmVkcm9vbSBjb25kbyBpbiBTb3V0aCBTdXJyZXkncyBNaW50IGNvbXBsZXggaXMgdGhhdCBpdCB3YXMgZGVzaWduZWQgYXMgdGhlIHNob3cgaG9tZSBmb3IgdGhlIGRldmVsb3BtZW50LiBUaGUgZ3JvdW5kIGxldmVsIHVuaXQgaGFzIGxhbWluYXRlIGZsb29ycyBhbmQgbmluZSBmb290IGNlaWxpbmdzIGFib3ZlIGFuIG9wZW4gY29uY2VwdCBsaXZpbmcgc3BhY2UsIHdoaWNoIHNob3djYXNlcyBncmFuaXRlIGNvdW50ZXJ0b3BzLCBzdGFpbmxlc3Mgc3RlZWwgYXBwbGlhbmNlcyBhbmQgcGVuZGFudCBsaWdodGluZyBpbiB0aGUga2l0Y2hlbi4gVGhlcmUgaXMgYnVpbHQgaW4gc2hlbHZpbmcgYW5kIGN1cGJvYXJkcyBpbiB0aGUgbGl2aW5nIHJvb20gY29tcGxldGUgd2l0aCBhIHdpbmRvdyBzZWF0IHRoYXQgbGlmdHMgdXAgdG8gcmV2ZWFsIHN0b3JhZ2Ugc3BhY2UgdW5kZXJuZWF0aC4gVGhlIGJlZHJvb20gaGFzIHZpZXdzIG9mIHRoZSBwYXRpbyBnYXJkZW4gYW5kIGFjY2VzcyB0byBhIHNlbWkgZW5zdWl0ZSBiYXRocm9vbSwgd2hpbGUgaW4gc3VpdGUgbGF1bmRyeSBmdXJ0aGVyIGFkZHMgdG8gdGhlIGNvbnZlbmllbmNlIGZhY3Rvci4gVGhlIGZvdXIgc3RvcmV5IE1pbnQgd2FzIGJ1aWx0IGluIDIwMDkgYW5kIGhhcyBhbiBleGVyY2lzZSBjZW50cmUgYW5kIGEgbG91bmdlIHdpdGggY29mZmVyZWQgY2VpbGluZ3MgYW5kIGEgZmlyZXBsYWNlLiBUaGlzIHN1aXRlIGNvbWVzIHdpdGggYSBwYXJraW5nIHN0YWxsIGFuZCBzdG9yYWdlIGxvY2tlci4gSXRzIG1vbnRobHkgbWFpbnRlbmFuY2UgZmVlIGlzICQyMzYuMjggYW5kIHBldHMgYW5kIHJlbnRhbHMgYXJlIHBlcm1pdHRlZC4KSGUgYXNrZWQgaG93IEkgd2FzIGFibGUgdG8gY29tZSB1cCB3aXRoIHRoZSBtb25leSBzbyBmYXN0LiBJIHRvb2sgYSBjb3VwbGUgY2hhd3Mgb24gdGhlIGVuZCBvZiBteSBjaWdhciBhbmQgdG9sZCBoaW0sIFdlbGwgaXQncyB0aGlzIHdheS4gSSBrbmV3IHRoZSBHcmFuZCBBcm15IG9mIHRoZSBSZXB1YmxpYyB3YXMgaGF2aW5nIGFuIGVuY2FtcG1lbnQgaGVyZSBpbiBTdHVyZ2lzLiAKQm90aCBwYXJ0aWVzIGhhZCBpc3N1ZXMgd2l0aCB0aGUgd2F5IHRoZSBwcmltYXJpZXMgcGxheWVkIG91dCBpbiAyMDE2LiBUaGUgcmVwdWJsaWNhbidzIDIwIGNhbmRpZGF0ZSBmaWVsZCBhbGxvd2VkIHRydW1wIHRvIHRyaWNrbGUgdG8gdGhlIHRvcCB3aGlsZSBvbmx5IG1haW50YWluaW5nIGFib3V0IDEvMyB0aGUgc3VwcG9ydCBvZiB0aGUgcG9wdWxhciB2b3RlLiAKSSB0aGluaywgZm9yIHRoZSBsZXNzIGV4cGVuc2l2ZSBvbmVzLCBpdCBkZWZpbml0ZWx5IHdvcnRoIGRvaW5nICAgSSB3aWxsaW5nIHRvIHBheSBtb3JlIHRoYW4gdGhhdCBmb3IgbWFya2V0aW5nLCBhbmQgdGhpcyBnZXRzIG1lIGluIGZyb250IG9mIHBlb3BsZSB0byBzaGFyZSBteSBnb29kcyBhbmQgZXhjaXRlbWVudCBhYm91dCBteSBwcm9kdWN0LiAKVGhlcmUgaXMgYSB3b3JkIHdlIHVzZWQgdG8gdXNlIGZvciB0aGlzIHRoaW5nIHdoZXJlIGNvcnBvcmF0aW9ucyBnYXZlIHlvdSBsYXJnZSBzdW1zIG9mIG1vbmV5IGFuZCB5b3UgdGhlbiB2b3RlZCBpbiBmYXZvdXIgb2YgdGhlaXIgaW50ZXJlc3RzLiBJdCBhbG1vc3Qgcmh5bWVzIHdpdGggImxpYnJhcnkiLiBXaGljaCBpcyB3aHksIGR1cmluZyB0aGUgbGF0ZSAxOXRoIGFuZCBlYXJseSAyMHRoIGNlbnR1cmllcyAgIHRoZSBsYXN0IHRpbWUgd2hlbiB0cnVzdHMgcmFuIHRoZSBqb2ludCBsaWtlIHRoZXkgb3duZWQgaXQgICBsZWdpc2xhdGlvbiB3YXMgcGFzc2VkIHRvIHJpZCB1cyBvZiB0aGlzIHNjb3VyZ2Ugb24gb3VyIHNvY2lldHkuLiAKVGhpcyBhcnRpY2xlIG9mZmVycyBlYXN5IGFuZCBoZWxwZnVsIHN1Z2dlc3Rpb25zIGZvciB0cmVhdGluZyBtYW55IG9mIHRoZSBtb3JlIGNvbW1vbiBmb290IGNvbmRpdGlvbnMgcGVvcGxlIGV4cGVyaWVuY2UuIEhvd2V2ZXIsIHRoZXJlIGFyZSBjZXJ0YWluIGZvb3QgcHJvYmxlbXMgdGhhdCBhcmUgc28gc2VyaW91cywgeW91IHNob3VsZCBzZWVrIGEgZG9jdG9yJ3MgY2FyZSBpbW1lZGlhdGVseS4gTGlrZXdpc2UsIGNlcnRhaW4gcGVvcGxlIHNob3VsZCBuZXZlciBhdHRlbXB0IHRvIHNlbGYgdHJlYXQgYSBmb290IHByb2JsZW0uIEZvciBleGFtcGxlLCBJZiB5b3UgaGF2ZSBkaWFiZXRlcyBvciBjaXJjdWxhdG9yeSBwcm9ibGVtcywgaWYgeW91IGFyZSBwcmVnbmFudCwgaWYgeW91IGhhdmUgcmVjZW50bHkgaGFkIHN1cmdlcnksIG9yIGlmIHlvdSBhcmUgdW5kZXIgdGhlIGNvbnRpbnVpbmcgY2FyZSBvZiBhIHBoeXNpY2lhbiBmb3IgYW5vdGhlciByZWFzb24sIHlvdSBzaG91bGQgZGlzY3VzcyB5b3VyIGZvb3QgcHJvYmxlbSwgYW5kIHRoZSBiZXN0IHdheSB0byBnbyBhYm91dCB0cmVhdGluZyBpdCwgd2l0aCB5b3VyIGRvY3RvciBiZWZvcmUgYXR0ZW1wdGluZyBzZWxmIHRyZWF0bWVudC4KWW91IGRvbid0IG5lZWQgdG8gYnV5IGxvdyBjdXQgZHJlc3NlcyBvciBtaW5pIHNraXJ0cy4gCkF0IHRoZSBlbmQgb2YgdGhlIGRheSB0aGUgd29ybGQgaGFzIGJlZW4gbGF1Z2hpbmcgYXQgUnVzc2lhIHNpbmNlIGl0IGdvdCBzYW5jdGlvbnMgc2xhcHBlZCBvbiBpdCBhbmQgdGhlbiBpbnZhZGVkIENyaW1lYSBhbmQgZ290IG1vcmUgc2FuY3Rpb25zIHNsYXBwZWQgb24gaXQgYW5kIHRoZWlyIEdEUCBkZWZsYXRlZCBieSB0cmlsbGlvbnMgb2YgZG9sbGFycyBvdmVyIHRoZSBuZXh0IHNldmVyYWwgeWVhcnMuCkZyYW5rbHksIGEgaHVnZSBwYXJ0IG9mIG15IHByYWN0aWNlIG5vdyBpcyBkZWFsaW5nIHdpdGggcGVvcGxlIHdobyB3ZXJlIGRpYWdub3NlZCB3aXRoIEFESEQsIGFuZCBhcmUgbm90IHJlc3BvbmRpbmcgdG8gdHJlYXRtZW50LCBiZWNhdXNlIHRoZXkgbmV2ZXIgaGFkIEFESEQgaW4gdGhlIGZpcnN0IHBsYWNlLiBJdCBpcyBhIG1ham9yIHByb2JsZW0sIGFuZCBvdXIgaW5hYmlsaXR5IHRvIGFjY3VyYXRlbHkgZGlhZ25vc2UgYW5kIGFwcHJvcHJpYXRlbHkgdHJlYXQgdGhpcyBpc3N1ZSBpcyBydWluaW5nIGxpdmVzLiBXZSB2ZXJ5IGRlc3BlcmF0ZWx5IG5lZWQgdG8gaW5jcmVhc2Ugb3VyIGZvY3VzIG9uIG5ldXJvcHN5Y2hpYXRyaWMgYmlvbWFya2Vycy4gClRoZSBjb21taXNzaW9uIHNhaWQsICJTaGUgd2lsbGZ1bGx5IGFuZCBmb29saXNobHkgdXRpbGl6ZWQgdGhlIHBvd2VyIG9mIGhlciBvZmZpY2UgdG8gYWN0aXZlbHkgdW5kZXJtaW5lIHdob2xseSB2YWxpZCBhbmQgdW5idXJkZW5zb21lIHNlY3VyaXR5IG1lYXN1cmVzIgozMCBoZXJvZXMgc29vbiwgZ290dGEgdGhpbmsgaG93IGVhY2ggaGVybyBhbmQgZWFjaCBhYmlsaXR5IGludGVyYWN0cyB3aXRoIGV2ZXJ5IG90aGVyIGhlcm8sIGJvdGggYXMgYW4gYWxseSBhbmQgYW4gZW5lbXkuIFRoZW4geW91IGdvdHRhIGhhdmUgdGhlbSBhbGwgcm91Z2h0bHkgYmFsYW5jZWQgc28gdGhhdCBubyBvbmUgaGVybyBiZWNvbWVzIGEgbXVzdCBwaWNrLCBvciBmb3JldmVyIHNodW5uZWQuIFRoZW4geW91IGdvdHRhIHRoaW5rIGFib3V0IGhvdyB0aGV5IGFyZSB1c2VkIGF0IHRvcCB0aWVyIHBsYXkgYW5kIGJ5IHRoZSBhdmVyYWdlIHBsYXllciBhbmQgcGVvcGxlIGF0IHRoZSBib3R0b20gb2YgdGhlIGxhZGRlci4gClNreSBNYXRzdWhhc2hpIG9mIFNtYXJ0IFBva2VyIFN0dWR5IGluIHRoZSBmaXJzdCBvZiA2NiBkYXlzIG9mIGhvdyB0byBnZXQgYSByZWFkIG9uIHlvdXIgb3Bwb25lbnRzIGhhbmQgdXNpbmcgYSBjb21iaW5hdGlvbiBvZiBQb2tlciBUcmFja2VyIDQsIEZsb3B6aWxsYSBhbmQgZnJlZSB0ZW1wbGF0ZXMgZnJvbSBTcGxpdHN1aXQgdG8gcmVjb3JkIHlvdXIgbGVhcm5pbmdzIGZyb20gYSBoYW5kLiBIZSBzaG93cyB5b3Ugc3RlcCBieSBzdGVwIGhvdyB0byBhbmFseXplIHlvdXIgb3Bwb25lbnRzIHJhbmdlIGZyb20gcHJlZmxvcCB0aHJvdWdoIHRvIHRoZSByaXZlci4gVW50aWwgSSBmb3VuZCB0aGlzIHZpZGVvIHNlcmllcyBJIGhhZCB0aGUgdG9vbHMsIGJ1dCBJIGRpZG4gcmVhbGx5IGtub3cgd2hlcmUgdG8gc3RhcnQgYW5kIGhhdmluZyBhIGdvb2QgaWRlYSBvZiBob3cgdG8gcmFuZ2UgeW91ciBvcHBvbmVudCBpcyBvbmUgb2YgdGhlIGZ1bmRhbWVudGFscyBvZiBzdWNjZXNzZnVsIHBva2VyIHBsYXlpbmcuLiAKVGhlIGJvYXJkIGlzIGFsc28gY29uc2lkZXJpbmcgdGhlIGNoYW5nZSBiZWNhdXNlIHRpbWUsIHNhaWQgUHlrZS4gRXZlcnkgb3RoZXIgaGlnaCBzY2hvb2wgaGVyZSBpcyBzZW1lc3RlcmVkLgpGb3IgZXhhbXBsZSwgeW91ciAzIGJldCBtYXkgZ2V0IFZpbGxhaW4gdG8gZm9sZCBRSm8gYW5kIHdvcnNlLCBhcyB3ZWxsIGFzIG1heWJlIGV2ZW4gNzcuIApOaXRyb2dlbiBhbmQgU1dDIGFyZSBjb21wbGV0ZWx5IGFub255bW91cyBhbmQgY2FzaG91dHMgaGFwcGVuIHdpdGhpbiBhIGZldyBob3Vycywgbm8gaXNzdWVzIGV2ZXIuCldoZW4gZGlkIHRoZXkgZXhwbGljaXRseSBzYXkgdGhhdCB0aGV5IGhhdGUgQ29sb3JhZG8vRGVudmVyIGFzIGEgd2hvbGUgYmVjYXVzZSBvZiB0aGlzIG9uZSB0aGluZz8gVGhhdCBhIGh1Z2UgbGVhcCB0byB0YWtlIGJhc2VkIG9mZiBvZiBubyBwZXJzb25hbCBpbmZvcm1hdGlvbiBvbiBiZWhhbGYgb2YgdGhlIE9QLiBJIGxvdmUgaXQgaGVyZSBidXQgdGhpcyBjaXR5IGRlZmluaXRlbHkgaGFzIHJvb20gdG8gaW1wcm92ZSBzbyBmYXIgYXMgdHJhc2ggYW5kIHdhc3RlZnVsbmVzcyBpcyBjb25jZXJuZWQuIApJIGZlZWwgYmFkIGZvciB0aGUgbWVuLi4gCktlcHQgY29weSBwYXN0aW5nIHRleHQgb3ZlciBhbmQgb3ZlciBhZ2Fpbi4gRW5kZWQgdXAgcmVhY2hpbmcgMzEwMCBwYWdlcyBhbmQgb3ZlciAxLjIgbWlsbGlvbiB3b3Jkcy4gNTAgbWlsIGNoYXJhY3RlcnMgb3Igc29tZXRoaW5nLiAKQXNoY2hpbGRfICAgMSBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpQbGVudHkgb2YgcGVvcGxlIGhhdmUgc3RvcmllcyBvZiBob3cgdGhlaXIgY2F0IHN3aXBlZCBhdCBhIEdlcm1hbiBTaGVwaGVyZCBhbmQgdGhlIGRvZyB3ZW50IHNjYW1wZXJpbmcgYXdheS4gCkkgc2FpZCB0aGUgbmFtZSB0aGF0IEkgcGlja2VkIG91dCBmb3IgbXkgZnV0dXJlIGNoaWxkICh0aGF0IEkgcHJvYmFibHkgd2lsbCBub3QgZXZlbiBoYXZlIG9yIGNob29zZSBpbiB0aGUgeWVhcnMgdG8gY29tZSEpLiBXZWxsLCBzaGUgd2VudCBNRU5UQUwgYmVjYXVzZSBpdCB0aGUgbmFtZSBTSEUgd2FudHMgcm8gdXNlLiAKUGVvcGxlIHNheSB0aGF0IGxvdHRlcnkgYW5kIENhc2lubyBHYW1lcyBhcmUgd29uIHdpdGggbHVjay4gV2hhdCBpZiB3ZSB0ZWxsIHlvdSB0aGF0IGl0IGlzIG5vdCBjb21wbGV0ZWx5IHRydWU/IFRoZXJlIGFyZSBzb21lIHN0cmF0ZWdpZXMgYW5kIG1ldGhvZHMgdGhhdCBhcmUgdXNlZCBieSB0aGUgdG9wIGxvdHRvIGFuZCBwb2tlciBwbGF5ZXJzIHRoYXQgY2FuIGRyYW1hdGljYWxseSBpbXByb3ZlIHlvdXIgY2hhbmNlcyBvZiB3aW5uaW5nIGV2ZW4gSW50ZXJuZXQgQ2FzaW5vIEdhbWVzLiBUaGUgYmVzdCBwYXJ0IGlzIHRoYXQgdGhlc2UgbWV0aG9kcyBhcmUgcmlzayBmcmVlIGJ1dCB3aGVuIHVzZWQgY29ycmVjdGx5LCB0aGV5IHdpbGwgZXZlbiBoZWxwIHlvdSBpbiB3aW5uaW5nIG1hc3NpdmUgamFja3BvdHMuIApJIGhvcGUgdGhhdCBoZWxwcyBhdCBsZWFzdCBhIGxpdHRsZS4KSSBqdXN0IGxlYXJuZWQgdG9kYXkgdGhhdCB0aGV5IHJlZ2VuZXJhdGUuIApLZWVwIGluIG1pbmQgd2Ugb25seSBoYWQgNDAgcGVvcGxlIGhlcmUgYW5kIDI3IHRoYXQgYWN0dWFsbHkgZW50ZXIgdGhlIGdhbWUuIFRoaXMgaXMgZXhjbHVkaW5nIGV2ZXJ5b25lIHRoYXQgd2Fzbid0IG9sZCBlbm91Z2ggdG8gcGxheSBhbnl3YXlzLiBIb3dldmVyLCB0aGUgcmVjZXB0aW9uIHdhcyB3ZWxsIG5vdGVkIGFuZCB0aGUgYmlnZ2VzdCBjb21wbGltZW50IGNhbWUgZnJvbSBteSB3aWZlJ3MgZ3JhbmRmYXRoZXIgSmFtZXMuIEhlIHNhaWQ7ICJLYXJsLCBpbiBhbGwgdGhlIHllYXJzIEkndmUgcGxheWVkIHBva2VyIEkgaGF2ZSBuZXZlciBzZWVuIGFueXRoaW5nIHF1aXRlIGxpa2UgeW91ciBwb2tlciBzZXRzIHlvdSBwdXJjaGFzZWQuIEFueW9uZSB3aG8gcGlja2VkIHRob3NlIHVwIGFuZCB3YWxrZWQgaW50byBhIHJvb20gd291bGQgbG9vayBsaWtlIEphbWVzIEJvbmQuIEluIHRoZSBTZWFuIENvbm5lcnkgeWVhcnMgb2YgY291cnNlLiIKV2UgbmVlZCBXIGxvdHMgYW5kIGxvdHMgb2YgVyBhbmQgdGhlIG1vcmUgRCB3ZSBoYXZlIGluIG9mZmljZSB0aGUgYmV0dGVyIG9mZiB3ZSB3aWxsIGJlIHdob2V2ZXIgdGhleSBhcmUuIApNeSBwb2ludCBpcyB0aGF0IGZyZXR0aW5nIG92ZXIgdW5jb250cm9sbGFibGUgZXZlbnRzIGlzIGEgd2hvbGUgbG90IG9mIHdhc3RlZCBlbmVyZ3kgaWYgeW91ciByaXNrIGlzIHByb3Blcmx5IG1hbmFnZWQuIApEb24gZG8gdGhlIEZyb250aWVyLiBJdCBsb25nIG92ZXJkdWUgZm9yIGEgbmV4dCBHZW4sIGFuZCB3aG8ga25vd3Mgd2hlbiB0aGV5IHNlZSB0aGF0LiBJdCByZWxpYWJsZSwgYnV0IGRhdGVkLiBJIGhhZCBhIDIwMTIgUHJvIDRYLCBidXQgdGhlIDE1IE1QRyBtaXhlZCB3YXMgZG9nIGNyYXAuCkxvdWlzLCBLYW5zYXMgQ2l0eSwgTWlsd2F1a2VlLCBQaXR0c2J1cmdoLCBNaW5uZWFwb2xpcywgQ29sdW1idXMsIEluZGlhbmFwb2xpcywgQnVmZmFsbykgYXJlIGFscmVhZHkgcmV0dXJuaW5nLCBkcml2ZW4gYnkgYSBjb21iaW5hdGlvbiBvZiBnb29kIGJvbmVzIGFuZCBjaGVhcCBDb0wgKGVzcGVjaWFsbHkgYnkgTm9ydGhlYXN0ZXJuIG9yIFdlc3QgQ29hc3Qgc3RhbmRhcmRzKS4gCk15IGNyZWRpdCByZXBvcnQgc2hvd2luZyBJIGhhdmUgbm8gZXZpY3Rpb25zIG9yIGJyb2tlbiBsZWFzZXMgaXMgbW9yZSBpbXBvcnRhbnQgdGhhbiB3aGF0IEkgc3BlbmQgbXkgbW9uZXkgb24uIApOb3cgdGhleSByYW4gdGhpcyBwcm9tbyBmb3IgdGhlIHRyYXZlbCBjcmVkaXQuIFNvIEkgY2FsbGVkIHRoZW0gYWdhaW4gYW5kIHdhaXRlZCBhbG1vc3QgMiBob3VycyBvbiB0aGUgcGhvbmUuIEkgYWdhaW4gYXNrZWQgaWYgSSBjb3VsZCBzb21laG93IHJlY2VpdmUgdGhpcyBuZXcgb2ZmZXIgaW5zdGVhZC4gQWdhaW4gdGhleSBzYWlkIHNvcnJ5IGJ1dCB0aGF0IG5vdCBwb3NzaWJsZS4gSSBzYWlkICJvaywgdGhhdCBhIHNoYW1lLiBQbGVhc2UgbGV0IG1lIGdpdmUgc29tZSBmZWVkYmFjayB0byBHb29nbGUgYWJvdXQgbXkgZXhwZXJpZW5jZS4iIEkgYmFzaWNhbGx5IHRvbGQgdGhlbSB0aGF0IGl0IHdhcyBwcmV0dHkgc2hpdHR5IHRoYXQgdGhleSByYW4gMyBpbmNyZWFzaW5nbHkgYmV0dGVyIG9mZmVycyBpbiBsZXNzIHRoYW4gYSB3ZWVrLiBJIGV4cGxhaW5lZCB0aGF0IGFzIGEgY29uc3VtZXIgSSB3b3VsZG4gYmUgYWJsZSB0byB0cnVzdCB0aGVtIGluIHRoZSBmdXR1cmUgYW5kIEkgd291bGQgaGVzaXRhdGUgcHVyY2hhc2luZyBmcm9tIHRoZW0gYWdhaW4uCkhlIHRyZWF0ZWQgeW91IGZvciB0d28gaG91cnMuIHRoYXRzIG5vdCBldmVuIGFuIG9wdGlvbiBoZXJlIHdoZXJlIGkgYW0uIElmIHlvdSBmZWVsIHlvdSBhcmUgbm90IGFwcHJvcHJpYXRlbHkgZHJhcGVkLCB5b3UgYWxzbyBzaG91bGQgc3BlYWsgdXAuIEZyb20gcGVyc29uYWwgZXhwZXJpZW5jZSwgeW91IGNhbm5vdCByZWxheCBhbmQgcmVhcCB0aGUgYmVuZWZpdCBvZiB0aGUgbWFzc2FnZSBpZiB5b3UgdGhpbmsgeW91ciBicmVhc3QsIGdyb2luLCBldGMgaXMgaGFuZ2luZyBvdXQgZm9yIGFsbCB0aGUgd29ybGQgdG8gc2VlLiBXZSByZWFsbHkgd2FudCB5b3UgdG8gYmUgY29tZm9ydGFibGUgd2l0aCB1cyBhbmQgaXQgbWFrZXMgb3VyIGpvYnMgZWFzaWVyIGlmIHlvdSBhcmUgcmVsYXhlZCAoaWYgeW91J3JlIGNvbWZvcnRhYmxlLCB5b3UgcmVib29rIHRvbyEpLiBJdCdzIHN0cmFuZ2UgdGhhdCBoZSB3YXMgcHJldHR5IGRlY2VudCB3aXRoIGRyYXBpbmcgdGhlIGZpcnN0IGZldyB0aW1lcy4gRHJhcGluZyBwcm9wZXJseSBhbmQgc2VjdXJlbHkgdGFrZXMgbm8gdGltZSBhdCBhbGwuCk1hc3NhZ2UgYW5kIGJlYXV0eSB0cmVhdG1lbnRzIGFyZSBhbHNvIGF2YWlsYWJsZSBmb3IgYSBmZWUuIApJIHdhcyBleHBlY3RpbmcgYW4gYWJ1bmRhbmNlIG9mIG1lbnRhbGx5IHVuc3RhYmxlIGZpcmV3b3JrcyBhdCB0aGUgQmV0byByYWxseSwgYnV0IGFsbCB5b3UgZ2F2ZSBtZSB3YXMgYSBzcGFya2xlci4gClRoZSBuZXh0IGRheSBhZnRlciB0aGV5IGhhZCBsZWZ0LCBJIGZvdW5kIGEgbm90ZSB1bmRlciBteSBwaWxsb3cgYXNraW5nIGlmIEkgd291bGQganVzdCBnaXZlIGhpbSBvbmUgY2hhbmNlLiBMb25nIHN0b3J5IHNob3J0LiBJIGVuZGVkIHVwIHNheWluZyB5ZXMgYWZ0ZXIgZm91ciB5ZWFycyEgV2UgYmVlbiBkYXRpbmcgZm9yIHdlbGwgb3ZlciBhIHllYXIgYW5kIGdvaW5nIHN0cm9uZywgd2hpY2ggSSBob25lc3RseSB0aGFuayBvdXIgcHJpb3IgZnJpZW5kc2hpcCBmb3IuIApCZSBwcmVwYXJlZCB0byBzbGFtIHRoZSBkb29yIGluIGNhc2UgaGUgY29tZXMgYmFjay4gRG8gbm90IGxldCBoaW0gYmFjayBpbi4gCkV2ZW4gaWYgeW91IGRlY2lkZSB5b3UnZCByYXRoZXIgcHVyc3VlIGEgdHJhZGUsIGxlYXZpbmcgdGhlIG1pbGl0YXJ5IHdpdGggYW4gYXNzb2NpYXRlcyBkZWdyZWUgbWFrZXMgeW91IGEgbW9yZSBjb21wZXRpdGl2ZSBqb2Igc2Vla2VyIHRoYW4gdGhvc2Ugc2ltaWxhciB0byB5b3Ugd2hvIGRvbid0IGhhdmUgaXQuCkkganVzdCB3YW50IHRvIHNldCB0aGUgcmVjb3JkIHN0cmFpZ2h0LCB0aGF0IGV2ZW4gcmVsaWdpb24gbm90IGluY2x1ZGVkLCB0aGVyZSBhcmUgaGVhbHRoIGJlbmVmaXRzIGFuZCBuZWdsaWdpYmxlIHJpc2tzICh3aGljaCBhcmUgZ3JlYXRseSBvdXR3ZWlnaGVkIGJ5IHRoZSBiZW5lZml0cyBhcyBwb2ludGVkIG91dCBieSBvdXIgbm9uIHNlY3VsYXIgQ0RDKSBmb3IgZ2V0dGluZyB0aGUgcHJvY2VkdXJlIGRvbmUuIApDaGFyaXRpZXMgYXJlIGFuIHVuZGVycmF0ZWQgZnVuZGluZyByZXNvdXJjZSwgYW5kIG9mdGVuIG1ha2UgYXdhcmRzIHRvIHN0dWRlbnRzIG9mIGFueSBzdWJqZWN0IGFuZCBhbnkgbmF0aW9uYWxpdHkuLiAKSXQncyB3aHkgbW9zdCBnYXkgcGVvcGxlIGhhdGUgdHJ1bXAuIApUaGUgU2Nob2xhcnNoaXAgY2FuIGJlIGF3YXJkZWQgZm9yIHVwIHRvIHRocmVlIHllYXJzIHByb3ZpZGVkIHRoYXQgdGhlIHN0dWRlbnQgbWFrZXMgc2F0aXNmYWN0b3J5IHByb2dyZXNzIChzaXggeWVhcnMgaWYgcGFydCB0aW1lKS4uIApXaGVuIHlvdSBhY2NvdW50IGZvciB0b3RhbCBwcmljZSBhICJnb29kIiBsb3Jld2VhdmUgaXMgZ29pbmcgdG8gYmUgYWJvdXQgYXMgZGlmZmljdWx0IHRvIGdldCBhcyBvdGhlciBoaWdoIGVuZCBhcm1vcnMsIGJlZm9yZSBmYWN0b3JpbmcgaW4gZGVtYW5kLiBJIHRoaW5rIGl0IHdhcyBmYWlyIGZvciBpdCB0byBiZSBhbiBlbmRnYW1lIHF1YWxpdHkgcGllY2Ugb2YgZXF1aXBtZW50LgpGb3IgaW5zdGFuY2UganVzdCBhcyBkb2dzIGFyZW4gc3VwcG9zZWQgdG8gd2VhciBzdWl0cywgc21va2UgY2lnYXJzIGFuZCBwbGF5IHBva2VyLCBwZW9wbGUgd2hvIGFzcGlyZSB0byBiZSBwcmltZSBtaW5pc3RlciBzaG91bGRuIGZhd24gb3ZlciBDaGluYSwgc2xhbSBBbGJlcnRhIG9yIGdvIHNxdWlzaHkgb24gdGVycm9yaXNtIGluIHRoZSB3YWtlIG9mIHRoZSBCb3N0b24gYm9tYmluZy4gVGhhdCBhIGJhZCBzdXJwcmlzZSBhbmQgaXQgd2h5IHRoZSBDb25zZXJ2YXRpdmVzIHJlbGVudGxlc3NseSBleHBsb2l0IEp1c3RpbiBnYWZmZXMuLiAKVGhhdCBzYWlkLCB0aGlzIGlzIGVzc2VudGlhbGx5IGEgbW92aWUgYWJvdXQgYSBnaXJsIGFuZCBoZXIgYmVsb3ZlZCBoaXBwbyBzaXplZCBwaWcuIApJdCBpcyBjYWxsZWQ6IFlvdSBhbmQgSS4gCkZhY3RvcnMgdG8gdGFrZSBpbnRvIGNvbnNpZGVyYXRpb24gaW4gZm9vdGJhbGwgYmV0dGluZwpGb3JkIGlzIGFsc28gc2hvd2luZyBhIG5hdmlnYXRpb24gc2NyZWVuIHdpdGggYSB1bmlxdWUgZ2xhc3MgZnJvbnQgdGhhdCBhbGxvd3MgdGhlIGZyb250IHNlYXQgcGFzc2VuZ2VyIHRvIHdhdGNoIGEgbW92aWUsIHdpdGhvdXQgZGlzdHJhY3RpbmcgdGhlIGRyaXZlci4gQWxsb3dzIHRoZSBkcml2ZXIgdG8gc2VlIG9uZSB2aWV3IG9mIHRoZSBkaXNwbGF5LCBhbmQgdGhlIHBhc3NlbmdlciB0byBzZWUgYSBkaWZmZXJlbnQuIAo0IE1pY2hpZ2FuIFN0YXRlIGFuZCBOby4gCkkgd29uIGFwb2xvZ2l6ZSBmb3IgdGVsbGluZyBwZW9wbGUgYWJvdXQgaXQuIEFuZCBJIGhhdmUgYWJzb2x1dGVseSBaRVJPIGFmZmlsaWF0aW9uIHdpdGggdGhlIHdlYnNpdGUuIApPbiBhcnJpdmUgYWluc2kgIHVuZSB2YWxldXIgdGhvcmlxdWUgZGUgcGx1cyBkZSAzMDAgIUMnZXN0IGxlIGNhcyBkZSBkaXJlIHF1ZSBxdWkgdmV1dCB0cm9wIGVtYnJhc3NlciBtYWwgdHJlaW50ICFKZSBuZSBzdWlzIHBhcyBwcmRpc3BvcyAgaGFyIGxlcyByb3VxdWlucywgamUgbmUgcGVuc2UgcGFzIHF1J2lscyBzZW50ZW50IG1hdXZhaXMgY29tbWUgY2VydGFpbnMgbGUgcHJ0ZW5kZW50LCBpbHMgb250IHBvdXIgZXV4IGwnYXZhbnRhZ2UgZCd1bmUgY2VydGFpbmUgcmFyZXQgZXQgbGVzIFJvbWFpbnMsIGVuIGRjb3V2cmFudCBBbGJpb24gZXQgc2VzIGNoYXJtZXMgYnJ1bWV1eCBsZXMgb250LCBwYXJhdCBpbCwgZ3JhbmRlbWVudCBhcHByY2lzIG1haXMgaWwgZXN0IHZyYWkgc3VydG91dCBlbiB0YW50IHF1J2VzY2xhdmVzIGltcG9ydHMuVHJ2ZSBkZSBwbGFpc2FudGVyaWUsIHNpIG5vdHJlIEp1bGllbiBuYXRpb25hbCBlc3QgdG91dCAgZmFpdCBjaGFybWFudCBhdmVjIHNvbiBBa3VtYSBzdXIgc29uIHBhdWxlIGdhdWNoZSwgbGUgbWluZXQsIHF1b2lxdWUgYXNzb3J0aSAgbGEgY291bGV1ciBwb2lsIGRlIGNhcm90dGVzIGRlIHNvbiB0cnMgYWZmZWN0dWV1eCBwYXRyb24sIHRvdXQgY3JhcXVhbnQgcXUnaWwgcHVpc3NlIHRyZSBuZSBzYXVyYWl0IGdhbGVyIGwnaW5zcGlyYXRpb24gZXQgbCcgcHJvcG9zIGR1IGNsYnJlIGRhbW9uIGR1IGZhbWV1eCBTb2NyYXRlLiBKZSBkaXMgYSBwYXJjZSBxdSdlbiBqYXBvbmFpcyBBa3VtYSBzZSB0cmFkdWlyYWl0IGVuIGJvbiBmcmFuYWlzIHBhciAiZG1vbiIgY2UgcXVpIGVzdCB0cnMgYXBwcm94aW1hdGlmIGNhciBpbCBuJ3kgYSBxdWUgY2hleiBub3VzIHF1ZSBsZSB0ZXJtZSBwcnNlbnRlIHVuIGNhcmFjdHJlIHN5c3RtYXRpcXVlbWVudCBhc3NleiAiZGlhYm9saXF1ZSIgZCdvIG1hIHByZnJlbmNlIHBvdXIgbGUgdGVybWUgZ3JlYy5FbmZpbiBzaSB0YW50IGVzdCBxdWUgQWt1bWEgc29pdCBsJ2luc3BpcmF0ZXVyIGRlIG5vdHJlIEp1bGllbiwgbGUgbW9pbnMgcXUnb24gcHVpc3NlIGRpcmUgZXN0IHF1J2lsIHNlcmFpdCBhc3NleiBtZGlvY3JlbWVudCBkb3UuUmV2ZW5vbnMgYXV4IGNob3NlcyBzcmlldXNlcyA6IHVuICJtdWx0aXZpdGFtaW5lIiBiYXNpcXVlIG4nYSBwYXMgdm9jYXRpb24gIGNvbnN0aXR1ZXIgdW4gImNvbXBsbWVudCB1bml2ZXJzZWwiIGFwdGUgIHN1cHBsbWVudGVyIHRvdXRlcyBzb3J0ZXMgZGUgdHJvdWJsZXMsIGxldXIgYXBwYXJpdGlvbiBldCBsZXVycyBhZ2dyYXZhdGlvbnMgcGx1cyBvdSBtb2lucyB0YXJkaXZlcyBtYWlzICBjb21wbG1lbnRlciBlZmZpY2FjZW1lbnQgbGVzIGRmaWNpZW5jZXMgaW52aXRhYmxlcyBkZSBsJ2FsaW1lbnRhdGlvbiBkZSBNLiAKQ29wcyBiZWhhdmUgdGhlIHNhbWUgd2F5LiBUaGV5IGFyZSBhbHdheXMgaW4gYSBwb3dlciBzdHJ1Z2dsZSB0aGV5IGFyZSB1bndpbGxpbmcgdG8gZ2l2ZSBhbnkgZ3JvdW5kIG9uLCBldmVuIGlmIHRoYXQgbWVhbnMgdGFzaW5nIG9yIHNob290aW5nIHNvbWVvbmUgdG8gcHJvdGVjdCB0aGVpciBwb3dlci4KU2l0dGluZyBkb3duIGFuZCBwbGF5aW5nIGZvciBzZXZlcmFsIGhvdXJzIHRpbGwgeW91ciBjaGlwcyBydW4gb3V0IHJlcXVpcmVzIGZvY3VzIGFuZCBzdHJhdGVneSBpcyBhIG11c2NsZSB0aGF0IG1vc3QgcGxheWVycyBkb24ndCBmbGV4IGluIHJlZ3VsYXIgcmluZyBnYW1lcy4gVGhlIHZlcnkgZXhwZXJpZW5jZSBidWlsZHMgYSBiZXR0ZXIgcGxheWVyLiAKSSB3YW50IHRvIHNob3cgdGhlbSB0aGF0IHdoYXRldmVyIHlvdSB3YW50IHRvIGRvIGluIGxpZmUgeW91IGNhbiBtYWtlIGl0IGhhcHBlbiBpZiB5b3Ugd29yayBoYXJkIGVub3VnaC4gCkxpa2UgSGFubmliYWwgTGVjdGVyIG9yIGNvbnRlc3RhbnRzIG9uIFRoZSBCYWNoZWxvciwgZ29vZCBwb2tlciBwbGF5ZXJzIGFyZSBtYXN0ZXJzIG9mIHBzeWNob2xvZ2ljYWwgbWFuaXB1bGF0aW9uLiBUaGlzIGNvdXJzZSB3aWxsIHRlYWNoIHlvdSBob3cgdG8gYXZvaWQgcm9va2llIG1pc3Rha2VzIGFuZCBrZWVwIHlvdXIgZW1vdGlvbnMgaW4gY2hlY2sgZHVyaW5nIGEgZ2FtZS4gCllHRSBpcyBsaXRlcmFsbHkgaW4gYSByYWNlIGFnYWluc3QgdGltZSB0byBidXJ5IHRoZWlyIGRpcnR5IGRlZWRzLgpZb3UgcHJvYmFibHkgYWN0aXZhdGVkIGNoZWF0cyBpbiBhIGdhbWUgYmVmb3JlLCBpdCBmdW4gYXQgZmlyc3QgYnV0IGlmIGV2ZXJ5b25lIGNhbiBjaGVhdCB0aGUgZ2FtZSBsb3NlcyBpdCBtZWFuaW5nLiAKQnV0IHVsdGltYXRlbHksIHRoaXMgZ3VpZGUgaXMgYSByZWd1cmdpdGF0aW9uIG9mIHRoZSBmb3JtZXIgcmlnaWQgYW5kIGJpZ290ZWQgbGVnYWN5LiBJdCBzYWQsIGJlY2F1c2UgdGhpcyBndWlkZSBoYWQgc28gbXVjaCBwb3RlbnRpYWwgdG8gaGVscCBjaGlsZHJlbiwgeWVzLCBidXQgZXNwZWNpYWxseSB0byBoZWxwIE11c2xpbSBpbW1pZ3JhbnRzIChtb3N0IE11c2xpbXMgaW4gdGhlIEdUQSBhcmUgbmV3LzJuZCBnZW4gaW1taWdyYW50cykgZWFzZSBpbnRvIG5ldyBpZGVhcyB3aGljaCB0aGV5IHVuZmFtaWxpYXIgaW4gaGVhcmluZyBmcm9tIHNlbGYgc3RhdGVseSAiSXNsYW1pYyIgcG9pbnQgb2Ygdmlldy4gSW5zdGVhZCwgd2UgZ2V0IGZyb20gdGhpcyBndWlkZSBvbiBvbmUgaGFuZCBhbmQgZnJvbSAiSXNsYW1zcGFpbmVycyIgbGlrZSB0aG9zZSBvbiByZWRkaXQgb24gdGhlIG90aGVyLCBpcyBhIGNvbnRpbnVvdXMsIGlkZWFsb2dpY2FsIHN0cmVhbSBvZiBtaXNyZXByZXNlbnRhdGlvbiBhbmQgZ3Jvc3Mgc2ltcGxpZmljYXRpb24uLiAKV2VsbCwgdGhhdCBoZWxwcy4gSSByZWFsbHkgaG9wZSB3ZSBjYW4gZ2V0IHRoaXMgZG93biwgb3IgSSBkbyBhdCBsZWFzdCwgYmVmb3JlIHRoZSBwZXJmb3JtYW5jZS4gVGhhdCBpcyBzdGlsbCBjb25mdXNpbmcuQWZ0ZXIgdGhhdCwgd2UgYnJpZWZseSBkaWQgcmVoZWFyc2FsIGZvciB0aGUgcXVvdGVzIHNlY3Rpb24gb2YgWW9uZGVyLiBFdmVyeW9uZSB3aG8gd2FzIGRvaW5nIHF1b3RlcyAodGVuIG9mIHVzKSBoYWQgdG8gaGF2ZSB0d28gcXVvdGVzIGFuZCBoZSBtaXhlZCB1cyB1cCBpbnRvIGdyb3VwcyBvZiBmaXZlIGFuZCB0b2xkIHVzIHRvIHBpY2sgcXVvdGVzIGFuZCBtaXggdXAgd2hhdCBvcmRlciB3ZSBzYWlkIHRoZW0gaW4uU28gSSBhbSBnb2luZyB3aXRoIHRoZSBmb2xsb3dpbmc6KGEpICJCdXQgdGhlIHByb2JsZW0gaXMgdGhhdCB3aGVuIEkgZ28gYXJvdW5kIGFuZCBzcGVhayBvbiBjYW1wdXNlcywgSSBzdGlsbCBkb24ndCBnZXQgeW91bmcgbWVuIHN0YW5kaW5nIHVwIGFuZCBzYXlpbmcsICJIb3cgY2FuIEkgY29tYmluZSBjYXJlZXIgYW5kIGZhbWlseT8iICBHbG9yaWEgU3RlaW5lbS4gCkhhdmUgZnVuISEgWW91IGFyZSA1IG1pbGVzIGZyb20gTWlsbGVubml1bSBQYXJrIFRyYWluIHN0YXRpb24gaWYgeW91IGFyZSBpbiBXcmlnbGV5dmlsbGUsIHRoZSBhcmVhIGJldHdlZW4gdGhhdCB0cmFpbiBzdG9wIGFuZCBXcmlnbGV5IGlzIHRoZSAiR29sZCBDb2FzdC9MaW5jb2xuIFBhcmsvTGFrZXZpZXcgYXJlYSBhbmQgaXMgYWxsIHZlcnkgc2FmZSAoZG9uJ3QgYmUgc3R1cGlkIG9mIGNvdXJzZSwga2VlcCB5b3VyIHBob25lIGluIHlvdXIgcG9ja2V0KSBhbmQgdGhlcmUgaXMgYSBsb3QgdGhlcmUuIApDb25zaWRlciByb3RhdGluZyB0b3VybmFtZW50cywgd2hlcmUgdGhlIGxvc2VycyBmcm9tIHRoZSBmaXJzdCB0b3VybmFtZW50IChhcyB3ZWxsIGFzIGxhdGUgYXJyaXZhbHMpIGNhbiBpbW1lZGlhdGVseSBzdGFydCBhbm90aGVyIHRvdXJuYW1lbnQuIFRoaXMgcHJldmVudHMgYW4gZWFybHkga25vY2tvdXQgZnJvbSBydWluaW5nIHNvbWVib2R5J3MgbmlnaHQuCiJJdCdzIGEgcHJvZ3JhbW1pbmcgcGx1Zywgd2hlcmUgTWFsbGlzaGthIHdpbGwgYmx1ZmYgYWJvdXQgaGVyc2VsZiBvbiB0aGUgc2hvdywgdGFsa2luZyBjb25maWRlbnRseSBhYm91dCB0aGluZ3MgdGhhdCBuZXZlciBoYXBwZW5lZCwgYW5kIHRoZSBsaXN0ZW5lciB3aWxsIGJlIHRvbGQgbGF0ZXIgdGhhdCBpdCB3YXMgJ3Bva2VyZ2lyaScsIiBleHBsYWlucyBCaGFuZGFyeS4uIApZZXMgdGhlIHNtb2tlIGN1bHR1cmUgaXMgYWxzbyBhIHNvbGlkYXJpdHkgdGhpbmcuIERvaW5nIHlvdXIgb3duIHN0dWZmIGlzIGEgbm8gbm8gYnV0IGJlY2F1c2Ugc21va2luZyBpcyBhIHRlYW0gdGhpbmcgZXZlcnlvbmUgaXMgZmluZSB3aXRoIGl0LgpNZW5kYWZ0YXIgZGkgc2FsYWggc2F0dSBhZ2VuIGp1ZGkgY2VtZSBvbmxpbmUgeWFuZyB0ZXJiYWlrIGJpc2EgbWVuamFkaSBwaWxpaGFuIHlhbmcgdGVwYXQgYmFnaSBwYXJhIHBlbWFpbiBjZW1lIG9ubGluZSB5YW5nIGluZ2luIG1lbmFuZyBjZXBhdCBkYW4gdW50dW5nIGJlcm1haW4ganVkaSBjZW1lLiAKVGhlIFN1cHJlbWUgQ291cnQgc2F5cyBhIHRhdHRvbyBpcyBhIGxlZ2FsbHkgYmluZGluZyBkb2N1bWVudCwgdGhlbiBpdCBub3RoaW5nIG1vcmUgdGhhbiBhbiBleHByZXNzaW9uIG9mIGVtb3Rpb24sIHNheXMgUGF1bm92aWMuIHRhdHRvbyBkb2VzbiBvYmxpZ2F0ZSBhIHBoeXNpY2lhbiB0byBub3QgcHJvdmlkZSBjYXJlIGlmIHRoZXkgZG9uIGhhdmUgbW9yZSBpbmZvcm1hdGlvbiwgYW5kIEkgd291bGRuIGFkdmlzZSBteSBjb2xsZWFndWVzIHRvIGJlIHdvcnJpZWQgdGhhdCB0aGV5IGhhdmUgdG8ganVzdGlmeSB0aGVpciBhY3Rpb25zLiBzYXlzIGtub3dpbmcgY29udGV4dCBpcyBjcml0aWNhbCB3aGVuIGl0IGNvbWVzIHRvIGFueSB0eXBlIG9mIEROUiBvcmRlciwgZXZlbiBpZiBpdCB0YWtlcyB0aGUgZm9ybSBvZiBhIHNpZ25lZCBkb2N1bWVudC4KQW5kIHRoaXMgaXMgZnVubnkgYmVjYXVzZSB5b3UganVzdCBkaXNtaXNzIGhpcyB3b3JrLCBldmVuIHRob3VnaCB0aGlzIHN0dW50IHByb3ZlcyB0aGF0IGhlIGZvbGxvd3MgdGhlIGRhdGEgYW5kIGlzIHdpbGxpbmcgdG8gdGFrZSBhIGJlYXRpbmcgZnJvbSBoaXMgYXVkaWVuY2Ugb3ZlciBpdC4gClRoZSBCYXNpY3NVbmxpa2UgZ29vZCBwb2V0cnksIHRoZSB0cnVseSBhd2Z1bCBzdHVmZiBjYW4gYmUgd3JpdHRlbiBhdCBsaWdodG5pbmcgc3BlZWQsIGFuZCB3aXRoIHZlcnkgbGl0dGxlIHRob3VnaHQuIE9uIHRoZSBvdGhlciBoYW5kIHlvdSBjYW4gYWdvbmlzZSBmb3IgaG91cnMgYW5kIHN0aWxsIHdyaXRlIHNvbWV0aGluZyB0cnVseSBhcHBhbGxpbmcuIFNvbWV0aW1lcyB0aGUgbG9uZ2VyIHlvdSBhZ29uaXNlIG92ZXIgaXQsIHRoZSBtb3JlIHlvdSB3aWxsIGNhdXNlIG90aGVycyB0byBkbyBzbywgdG9vLiAKMS4gSm91cm5hbCBvZiBOdXRyaXRpb25hbCBNZWRpY2luZSBOby4gMywgMTk5MiBwcC4gNDkgNTkgTWFuYWdlbWVudCBvZiBGaWJyb215YWxnaWE6IFJhdGlvbmFsZSBmb3IgdGhlIHVzZSBvZiBNYWduZXNpdW0gYW5kIE1hbGljIEFjaWQKQWZ0ZXIgdGhlIHdlZWsgaXMgdXAsIHlvdSdsbCBuZWVkIHRvIHN0cmFpbiBpdC4gCkFuZCBoZSBwcm9iYWJseSB3b3VsZCBoYXZlIGJlZW4gcmVtZW1iZXJlZCBmb3Igb3VyIHdpdGhkcmF3YWwgZnJvbSBWaWV0bmFtIGhhZCBOaXhvbiBub3Qgc2Fib3RhZ2VkIHRoZSBQYXJpcyBQZWFjZSBUYWxrcyBvbmx5IHRvIGFncmVlIHRvIHNpbWlsYXIgdGVybXMgNCB5ZWFycyBhbmQgdGhvdXNhbmRzIG9mIEFtZXJpY2FuIChhbG9uZyB3aXRoIGh1bmRyZWRzIG9mIHRob3VzYW5kIFZpZXRuYW1lc2UsIENhbWJvZGlhbiBhbmQgTGFvdGlhbiB2aWN0aW1zKS4uIApaIHQgYmFyZHppZWogcmVsaWdpam4gc3Ryb24gbWlhZW0gcm96bW93IG5hIHdjemVuaWVqc3p5bSBldGFwaWUgbW9qZWogem5ham9tb2NpIHogcGFydG5lcmsuIApVYmlzb2Z0IGdhbWVzIG9uIFN0ZWFtIGFyZSBsaXR0bGUgbW9yZSB0aGFuIGxhdW5jaGVycyB0byB0aGUgdVBsYXkgaW5zdGFsbCBsb2NhdGlvbi4gClRoZXkgc2FpZCB0aGUgYWdlbnQgd2FzIHNlbnQgaW4gdW5kZXJjb3ZlciBiZWNhdXNlIHRoZXJlIGhhZCBiZWVuIHJlcG9ydHMgb2YgcG9saWNlIGNvcnJ1cHRpb24gb3ZlciB0aGUgbGFzdCBzZXZlcmFsIHllYXJzIGluIHNvdXRoZXJuIENvb2sgQ291bnR5LCBpbmNsdWRpbmcgdGhlIEhhcnZleSBQb2xpY2UgRGVwYXJ0bWVudCwgd2hpY2ggaGFzIGJlZW4gdGhlIHRhcmdldCBvZiBhIG51bWJlciBvZiBpbnZlc3RpZ2F0aW9ucyBieSBzdGF0ZSBwb2xpY2UgaW4gdGhlIHBhc3QgZmV3IHllYXJzLCByZXBvcnRzIENCUyBhZmZpbGlhdGUgV0JCTSBUViBpbiBDaGljYWdvLiBUaG9zZSBpbnZlc3RpZ2F0aW9ucyBpbnZvbHZlZCBhIG51bWJlciBvZiBzdXNwaWNpb3VzbHkgdW5zb2x2ZWQgbXVyZGVycywgYW5kLCBpbiBhIGNlbGVicmF0ZWQgaW5jaWRlbnQsIHRoZSBteXN0ZXJpb3VzIGRpc2FwcGVhcmFuY2Ugb2YgYSBndW4gcG9saWNlIGhhZCBiZWVuIGhvbGRpbmcgYXMgZXZpZGVuY2UgaW4gb25lIGNhc2UuCkkgaGF2ZSBhbnRpIHBob3NwaG9saXBpZCBhbnRpYm9kaWVzLiBNeSBraWRzIGFyZSB5b3VuZyBhZHVsdHMgbm93LCBidXQgSSBoYWQgdG8gYmUgb24gYmFieSBhc3BpcmluIGFuZCB0YWtlIGhlcGFyaW4gc2hvdHMgdHdpY2UgYSBkYXkgYW5kIGEgcHJvZ2VzdGVyb25lIHN1cHBsZW1lbnQgd2hlbiBJIGdvdCBwcmVnbmFudC4gClNlY29uZCwgdGhlIHN0YW5kYXJkIHRlc3QgdXNlZCBieSBtZWRpY2FsIGRvY3RvcnMgZm9yIG1hZ25lc2l1bSBtZWFzdXJlcyBzZXJ1bSBtYWduZXNpdW0gbGV2ZWxzIGluIHRoZSBibG9vZCwgYnV0IG9ubHkgYWJvdXQgb25lIHBlcmNlbnQgb2YgdGhpcyBtaW5lcmFsIGlzIGZvdW5kIGluIHRoZSBibG9vZC4gUmF0aGVyLCBhYm91dCA2NiBwZXJjZW50IGlzIGZvdW5kIGluIGJvbmUgYW5kIDMzIHBlcmNlbnQgaW4gc2tlbGV0YWwgYW5kIGNhcmRpYWMgbXVzY2xlLiBJbiBvcmRlciB0byBlZmZlY3RpdmVseSBhc3NlcyBtYWduZXNpdW0gbGV2ZWxzIHRoYXQgcmVmbGVjdCBob3cgaXQgd29ya3MgaW4gdGhlIGJvZHkgeW91IG5lZWQgdG8gdGVzdCBjb250ZW50IGluIHRoZSByZWQgYmxvb2QgY2VsbHMuIEl0J3MgdmVyeSBjb21tb24gZm9yIGluZGl2aWR1YWxzIHdpdGggc2VydW0gbWFnbmVzaXVtIGxhYiByZXN1bHRzIGluIHRoZSBub3JtYWwgcmFuZ2UgdG8gYmUgZGVmaWNpZW50IGluIG1hZ25lc2l1bS4KV2hpbGUgdGhlcmUgYXJlIGRpZmZlcmVudCB0eXBlcyBvZiBtYXNzYWdlIHBhcmxvcnMgdGhhdCBtYXkgZm9jdXMgb24gZWl0aGVyIHRoZXJhcHkgb3IgcmVsYXhhdGlvbiwgU3RyYWlnaHQgZG9lcyBzdGljayBtb3JlIHRvIHRoZSBtZWRpY2FsIHNpZGUgYW5kIGlzIHRyeWluZyB0byBiZWNvbWUgY2VydGlmaWVkIGluIG1lZGljYWwgbWFzc2FnZS4KTmVhbCBBd2FyZHMsIHRoZSBBc3NvY2lhdGlvbiBvZiBDYXBpdG9sIFJlcG9ydGVycyBhbmQgRWRpdG9ycywgdGhlIENhbGlmb3JuaWEgTmV3c3BhcGVyIFB1Ymxpc2hlcnMgQXNzb2NpYXRpb24sIHRoZSBTb3V0aCBDYXJvbGluYSBQcmVzcyBBc3NvY2lhdGlvbiBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgYW5kIEVkaXRvcnMuIApTZWUgdGhlIGV4cGVydCBhbnN3ZXIuIApIb3cgZG8geW91IHBsYXkgcGtyIHBva2VyIGZvciBubyBtb25leQpJdCBzZWVtcyBsaWtlIHBlb3BsZSB3YW50IHRoZXJlIHRvIGJlIHNvbWUga2luZCBvZiBvdmVyYmVhcmluZywgdHlyYW50IEdvZCB0aGF0IGNvbnRyb2xzIGV2ZXJ5IHNpbmdsZSBhc3BlY3Qgb2Ygb3VyIHdvcmxkLiBPbmUgdGhhdCBkb2VzbiBhbGxvdyBhbnkgYmFkIHdlYXRoZXIsIG5vdCBldmVuIGEgcmFpbnN0b3JtIGJlY2F1c2UgdGhhdCBjb3VsZCBsZWFkIHRvIHBuZXVtb25pYS4gTm8gc2lja25lc3MsIG5vdCBldmVuIHRoZSBiYXNpYyBmbHUgYmVjYXVzZSB0aGF0IGNvdWxkIGxlYWQgdG8gZGVhdGguIApBbnN3ZXI6IEFzIHlvdSBtaWdodCBoYXZlIGd1ZXNzZWQsIHRoZXJlIGFyZW4ndCBhbnkgc29saWQgc2NpZW50aWZpYyBkYXRhIG9uIHRoaXMgcXVlc3Rpb24uIEJ1dCB0aGVyZSBhcmUgYSBmZXcgdGhpbmdzIHdlIGRvIGtub3cgdGhhdCBzaG91bGQgcHV0IHlvdXIgbWluZCBhdCBlYXNlLiAKSXQgaXMgdGhlIHByaW1hcnkgcmVhc29uIEkgZG8gbm90IGxpa2Ugd29ya2luZyB3aXRoIFVYIGRlc2lnbmVycyBhbmQgb3RoZXIgZnJvbnQgZW5kIHBlb3BsZS4gVGhleSBhcmUgY29tcGxldGVseSBkaXNjb25uZWN0ZWQgZnJvbSBhY3R1YWxseSB1c2luZyB0aGUgcHJvZHVjdCBhbmQgYXJlIG1vcmUgY29uY2VybmVkIHdpdGggZm9sbG93aW5nIGxhdGVzdCB0cmVuZHMgYW5kIGxvb2tpbmcgZmxhc2h5LiAKRXZlbiBtb3JlIGltcG9ydGFudCwgdGhleSdsbCBiZSBpbXByZXNzZWQgdGhhdCB5b3UgbW90aXZhdGUgeW91ciBlbXBsb3llZXMsIGtub3cgaG93IHRvIGJlIGh1bWJsZSwgYW5kIHN0YXkgb3V0IG9mIHRoZSB3YXkuIElmIHlvdSB3b3JrIGhhcmQsIHlvdSdsbCBnZXQgeW91ciBkdWVzLi4gCkNob29zZSB5b3VyIHBpY3R1cmVzLiBUaGVzZSBjYW4gY29tZSBmcm9tIGp1c3QgYWJvdXQgYW55IHByaW50ZWQgbWF0ZXJpYWwsIGZyb20gbWFnYXppbmVzLCBuZXdzcGFwZXJzLCBvbGQgYm9va3MsIG9yIHBvc3RjYXJkcy4gClNvbWV0aW1lcyBpIGdvIHRha2UgYSBuYXAgYWZ0ZXIgaGUgd29rZSB1cC4gCk9yZ2FuaXNlZCBieSB0aGUgSXNsZSBvZiBXaWdodCBicmFuY2ggb2YgQ0FNUkEgKHRoZSBDQU1wYWlnbiBmb3IgUmVhbCBBbGUpIGFuZCB0aGUgSXNsZSBvZiBXaWdodCBCdXMgTXVzZXVtLCBmb3IgdGhlc2UgdHdvIGRheXMgdGhlIHdob2xlIG9mIHRoZSBJc2xlIG9mIFdpZ2h0IGlzIGVmZmVjdGl2ZWx5IHRyYW5zZm9ybWVkIGludG8gYSBnaWFudCBwdWIgY3Jhd2wuIApXb21lbiBkb24ndCBhbGwgaGF2ZSB0aGUgc2FtZSBuZWVkcyBlaXRoZXIsIHRoYXQncyB3aGF0IHNlcGFyYXRlcyB0aGUgY29uc2VydmF0aXZlIHdvbWFuIGZyb20gdGhlIG90aGVyczsgdGhleSB1bmRlcnN0YW5kIHRoYXQgbm90IGFsbCB3b21lbiBhcmUgYWxpa2UuLiAKU3BlY2lmaWNhbGx5IHRoZSBicmVhdGhpbmcgdGVjaG5pcXVlcyB1c2VkIGJ5IFJpY2tzb24gaW4gdGhlIG1vdmllICJDaG9rZSIgYXJlIHByYW5heWFtYSB0ZWNobmlxdWVzIGZyb20gdGhlIGhhdGhhIHlvZ2EgdHJhZGl0aW9uLiBUaGUgZmlyc3QgdGVjaG5pcXVlIGVtcGxveWVkLCBjb25zaXN0aW5nIG9mIHRoZSByYXBpZCBicmVhdGhpbmcgdGhyb3VnaCB0aGUgbm9zZSwgaXMgY2FsbGVkICJLYXBhbGFiaGF0aSIgb3IgU2t1bGwgU2hpbmluZyBpbiBFbmdsaXNoLiBUaGUgc2Vjb25kIGluZmFtb3VzIHRlY2huaXF1ZSB3aXRoIHRoZSBzdG9tYWNoIHZhY3V1bSBpcyBjYWxsZWQgIk5hdWxpIEtyaXlhIiwgdXNlZCB0byBtYXNzYWdlIHRoZSBpbnRlcm5hbCBvcmdhbnMsIGFtb25nIG90aGVyLCBtb3JlIHN1YnRsZSBlZmZlY3RzLgpJIHR1cm5lZCBhcm91bmQsIHNhdyBhYm91dCAzIGZlZXQgYXdheSBmcm9tIG1lLiAKTXkgZGFkIGlzIGEgZ3JhZHVhdGUgc2Nob29sIHByb2Zlc3NvciBhbmQgaGUgbWFkZSB1cyB3cml0ZSBlc3NheXMgYWJvdXQgd2hhdCB3ZSBoYWQgZG9uZSB3cm9uZywgd2h5IGl0IHdhcyB3cm9uZywgYW5kIHdoYXQgd2Ugc2hvdWxkIGhhdmUgZG9uZSBpbnN0ZWFkLiBXZSBoYWQgdG8gY2l0ZSBzb3VyY2VzIGFuZCB1c2Ugb3V0c2lkZSBpbmZvcm1hdGlvbi9yZXNlYXJjaC4gCkJyb3ducyB0cmFkaW5nIEtldmluIFplaXRsZXIgZm9yIEdpYW50cyBERSBPbGl2aWVyIFZlcm5vbgpPbmNlIGFnYWluIGVhY2ggcGxheWVyIGlzIGdpdmVuIGEgY2hhbmNlIHRvIHBsYWNlIHRoZWlyIGJldHMuIEF0IHRoaXMgdGltZSB0aGUgYmV0dGluZyBtYXkgYmVjb21lIGFnZ3Jlc3NpdmUgYW5kIG1hbnkgcGxheWVycyB0cnkgdG8gdGhyb3cgYSBibHVmZiBpbiB0aGlzIHJvdW5kLgpEYXMgQnVjaCBzZWxic3QgZm5ndCBnbGVpY2ggbWl0IGRlbiBtYXRoZW1hdGlzY2hlbiBGZWluaGVpdGVuIGFuLCBkaWUgZnIgU2l0IGFuZCBHb3Mgc2VociB3aWNodGlnIHNpbmQuIERhYmVpIHdpcmQgYWxsZXMgc2VociBlaW5mYWNoIGRhcmdlc3RlbGx0IHVuZCBuaWNodCB1bm50aWcga29tcGxpemllcnQgZ2VtYWNodC4gRGFubiBnZWh0cyBpbiBkaWUgZHJlaSBQaGFzZW4gZWluZXIgU2l0IGFuZCBHbyBQYXJ0aWUuIApUaGUgY291cnQgaW5mb3JtYXRpb24gbGlzdGluZyB0aGUgbXVyZGVyIGNoYXJnZXMgcG9pbnRzIHRvIHRoZSBkZWF0aHMgb2NjdXJyaW5nIG9uIG9yIGFib3V0IE9jdC4gMzAsIGZpdmUgZGF5cyBiZWZvcmUgdGhlIGJvZGllcyB3ZXJlIGZvdW5kIGluIE1pZGRsZXNleCBDb3VudHkgbmVhciB0aGUgT25laWRhIE5hdGlvbiBvZiB0aGUgVGhhbWVzIGNvbW11bml0eS4gCkpvc2VwaCdzIEhvc3BpdGFsIGluIEhhbWlsdG9uLCBPbnRhcmlvLiAKTGVzIGF1dGV1cnMgZGUgY2UgbGl2cmUsIG1lbWJyZXMgZGUgbGEgQ2VsbHVsZSBkJ0FuaW1hdGlvbiBCaWJsaXF1ZSBlbiByZ2lvbiBwYXJpc2llbm5lLCBkaXRlbnQgaWNpLCBlbiBsZXMgcmV0b3VjaGFudCBsZ3JlbWVudCBwb3VyIGwnY3JpdCwgcXVlbHF1ZXMgZW5xdXRlcyBhdXRvdXIgZGUgbW90cyBkZSBsYSBCaWJsZSBxdWUsIGRlcHVpcyBwbHVzaWV1cnMgYW5uZXMsIGlscyBwcnNlbnRlbnQgZXQgY29tbWVudGVudCBsb3JzIGRlIGJydmVzIG1pc3Npb25zIHJhZGlvcGhvbmlxdWVzIHN1ciBGcnF1ZW5jZSBQcm90ZXN0YW50ZS4gUGFybWkgYmVhdWNvdXAgZCdhdXRyZXMgcG9zc2libGVzLCBpbHMgb250IHNsZWN0aW9ubiB1bmUgdmluZ3RhaW5lIGRlIG1vdHMgZ3JlY3MgZHUgTm91dmVhdSBUZXN0YW1lbnQgcXVpIHNlIHNvbnQgZHBvc3MgZGFucyBub3RyZSBsYW5nYWdlIHF1b3RpZGllbiwgbGUgZ3JlYyBxdWUgdm91cyBwYXJsZXogZGogZW4gc29tbWUuClNpbmNlIHlvdSB3aWxsIGJlIHVzaW5nIHFpaW1lLCBpdCB3b3VsZCBiZSB3aXNlIHRvIGZpcnN0IHJlYWQgdGhlIHRoZSBxaWltZSBhbmQgcWlpbWUgMiBwYXBlcnMgdG8gZ2V0IGEgZ29vZCBpZGVhIG9mIHdoYXQgdGhlIHByb2dyYW0gaXMgYWN0dWFsbHkgZG9pbmcuIEkgd291bGQgdGhlbiBsb29rIGF0IHRoZSBkb2N1bWVudGF0aW9uIG9uIHRoZWlyIHdlYnNpdGUuIEl0IGVzc2VudGlhbGx5IHdhbGtzIHlvdSB0aHJvdWdoIHRoZSBlbnRpcmUgZGF0YSBhbmFseXNpcyBwcm9jZXNzIHVzaW5nIHRoZWlyIHNvZnR3YXJlLi4gCldpdGggb25lIG9mIHRoZSBtb3N0IHNoYW1lIGluZHVjaW5nICJBYnN0aW5lbmNlIE9ubHkiIHNleCBlZHVjYXRpb24gcHJvZ3JhbXMgaW4gdGhlaXIgcHVibGljIHNjaG9vbHMgYW5kIGEgbWFqb3JpdHkgcG9wdWxhdGlvbiBzdGVlcGVkIGluIGEgY29uc2VydmF0aXZlIENocmlzdGlhbiBiZWxpZWYgdGhhdCBzZXggc2hvdWxkIG9ubHkgYmUgdG8gbWFrZSBiYWJpZXMsIFV0YWggbXVzdCBsaXZlIHdpdGggdGhlIG9idmlvdXMgcmVzdWx0cyBvZiB0ZWFjaGluZyB5b3VuZyBwZW9wbGUgdGhhdCB0aGV5IHNob3VsZCBmZWVsIHNoYW1lIGFuZCBkaXNndXN0IGFyb3VuZCBzZXh1YWwgcGxlYXN1cmUuIApUaGVzZSByZXZpZXdzIGhhdmUgZGlmZmVyZW50IGFzcGVjdHMgYW5kIGRpZmZlcmVudCB2aWV3cyBmcm9tIGRpZmZlcmVudCBwZW9wbGUuIEJ1dCBzb21ldGhpbmcgaXMgdmVyeSBjb21tb24gaW4gdGhlbTsgeW91IHdpbGwgZmluZCB0aGUgcG9zaXRpdmUgYXNwZWN0cyBvZiB0aGUgcHJvZHVjdCBmcm9tIGRpZmZlcmVudCBhc3BlY3RzIGFuZCBkaWZmZXJlbnQgdmlld3MgZGVwZW5kaW5nIG9uIHRoZSBzdHlsZSBhbmQgZXh0ZW50IG9mIHVzYWdlLiBUaGlzIGlzIHNvbWV0aGluZyByZWFsbHkgaW50ZXJlc3RpbmcgdGhhdCB5b3Ugd2lsbCBiZSBhYmxlIHRvIGdldCB0aG91c2FuZHMgb2YgcG9zaXRpdmUgcmV2aWV3cyBhYm91dCBUaGUgRmx1c2ggRmFjZXMgUG9rZXIgQ2FyZCBQcm90ZWN0b3IuIApGdWxsIFZlcnNpb24uIEZyZWUgYW5kIHNhZmUgZG93bmxvYWQuIApUaGlzIGlzIGEgc3VyZmFjZSB0aGF0IGlzIGRlc2lnbmVkIGZvciBnb29kIGxvb2tzIGFuZCBkdXJhYmlsaXR5IGFuZCB3aWxsIHNlZSB5b3UgdGhyb3VnaCBtYW55IGEgRnJpZGF5IG5pZ2h0IHBva2VyIGdhbWUuLiAKSmFycmluZyBpZiBub3QgcGFydGljdWxhcmx5IHN1cnByaXNpbmcuIFJUIGhhcyBhIGhpc3Rvcnkgb2Ygc2F5aW5nIG9uZSB0aGluZyB3aGlsZSBhY3RpdmVseSBlbmRvcnNpbmcgdGhlIG9wcG9zaXRlLiBMYXN0IHllYXIgdGhleSByZWxlYXNlZCB0aGUgUHJpZGUgc2hpcnQgYW5kIGhhZCB0aGUgTEdCVCBwYW5lbCBhdCBSVFggYW5kIGFsc28gaGFkIGFuIGVwaXNvZGUgb2YgQ2FtcCBDYW1wIHdoZXJlIHRoZXkgbWFkZSBhICJidW5kbGUgb2Ygc3RpY2tzIiBqb2tlLiAKVGhleSBhdCBmaXJzdCBoYWQgZmlyc3QgdG8gdGhlaXIgZGF0ZSwgYnV0IGFzIEkga2luZGx5IGFuZCBwb2xpdGVseSBleHBsYWluZWQgb3VyIHNpdHVhdGlvbiBhbmQgdGhhdCB0aGUgJDY1IHJlcGFpciBwbHVzIHNoaXBwaW5nIHdhcyBhcyBtdWNoIGFzIGEgbmV3IG9uZSBhbmQgdGhleSB3ZXJlIHZlcnkgbmljZSBhbmQgcGFpZCBmb3IgZXhwZWRpdGVkIHNoaXBwaW5nIGJvdGggd2F5cyBhbmQgcmVwYWlyZWQgZm9yIGZyZWUuIApXaXNoaW5nIEkgY2FuIG1ha2UgaXQgYmV0dGVyIGZvciBhbGwgb2YgdXMuIERlbW9jcmFjeSBjYW4gbm90IGZhaWwuIEkgbWFrZSAkMTIgYW4gaG91ciBmb3IgYSBmdWxsIHRpbWUgam9iIG1hbnVmYWN0dXJpbmcgM0QgcHJpbnRlcnMuIApTaGUgdGhlbiB3ZW50IG91dCBhbmQgZ290IGRydW5rIHdpdGggaGVyIGZyaWVuZHMgYW5kIHBvc3RlZCBhYm91dCBpdCBvbiBzb2NpYWwgbWVkaWEsIGJ1dCBmb3Jnb3QgdGhhdCBJIGZvbGxvd2VkIGhlciBhY2NvdW50LiAKSGUgYW5kIHRoZSBzYWZldHksIHdlIGVuZGVkIHVwIHdhbGtpbmcgdG8gdGhlIHBsYWNlLCBzYW1lIGNvdXBvbiBhbmQgdGFibGUgZm9yIGZvdXIuIFRoZXkncmUgcHJldHR5IGNvb2wgZ3V5cywgcHJldHR5IGdvb2QgZ3V5cy4iLiAKWW91IHNlZSwgS2hhbidzIGNoaW4gaXMgbGlrZSBGbG95ZCdzIDAsIHlvdSB3YW50IHRvIHNlZSBpdCBmYWlsIGFuZCB3aGVuIGl0IGRvZXNuJ3QgeW91IHdhbnQgaXQgdG8gZmFpbCBldmVuIG1vcmUgdGhlIG5leHQgdGltZSBoZSBnZXRzIGluIHRoZSByaW5nLCBvciBiZXR0ZXIgeWV0IGZhaWwgYXQgbGlmZSBhbHRvZ2V0aGVyLiBGb3IgbW9zdCBvZiB0aGUgaGF0ZXJzIGl0IGdvZXMgd2VsbCBwYXN0IHRoZSBsaW5lIG9mIGplYWxvdXN5IHRvIGFuIHVuaGVhbHRoeSAyNC83IG9ic2Vzc2lvbi4gCkdlb2dyYXBoaWMgZXhwYW5zaW9uIGhhcyBsb25nIGJlZW4gYSBwYXJ0IG9mIHRoZSBNYXNzQ2hhbGxlbmdlIHZpc2lvbiBhbmQgSXNyYWVsIHdhcyBpZGVudGlmaWVkIGFzIHRoZSBmaXJzdCBub2RlIGZvciB0aGF0IGludGVybmF0aW9uYWwgZXhwYW5zaW9uIG91dHNpZGUgb2YgQm9zdG9uLi4gCkNoZWYgRnJpenppIHdpbGwgcHJvdmlkZSBwcm9mZXNzaW9uYWwgdGlwcyBmb3IgcGVvcGxlIHRvIHVzZSBpbiB0aGVpciBvd24ga2l0Y2hlbiB0aGF0IHdpbGwgdHJ1bHkgaW1wcmVzcy4uIApZb3VyIG1lcmN5IHdpbGwgcHJvYmFibHkgcGFuaWMgYW5kIGtlZXAgaGVhbGluZyB5b3UgdGhlIHdob2xlIDJ2MSwgZ2l2aW5nIHJlYXBlciBldmVuIG1vcmUgdWx0IGNoYXJnZSBieSB0aW1lIHlvdXIgYm90aCBkZWFkLmlzIHdoYXQgaXQgaXMgbGlrZSB0byBwbGF5IHRhbmsgaW4gZ29sZC9wbGF0L2JlbG93LiBZb3Ugc2ltcGx5IGNhbiByZWx5IG9uIHRoZSBkcHMgdG8gYmUgY2xvc2UgZW5vdWdoIHRvIGhlbHAgdGhlIHRhbmtzLiBTb21ldGltZXMgdGhleSBhcmUuIApJdCBkb2VzbiBtYXR0ZXIgaWYgdGhlIHBlb3BsZSB1c2luZyB0aGUgd29yZCBtZWFuIGl0IHRvIGJlIGh1cnRmdWwgKG9yIGV2ZW4gaGF2ZSB0aGUgc2xpZ2h0ZXN0IGNsdWUgb2YgdGhlIG9yaWdpbiksIHdoYXQgbWF0dGVycyBpcyBpZiBpdCBjYXVzZXMgYSBuZWdhdGl2ZSBlZmZlY3QuIApBY3RpbmcgbGlrZSB3ZSBkb24gaGF2ZSBhbnkgaGFuZHMgdG8gYmx1ZmYgaGVyZSBpcyBqdXN0IGFic3VyZC4KVGhpcyBpcyBkZWZpbml0ZWx5IHRydWUgZm9yIG15IHNvbi4gCkZyIG15IHVuZGVyc3RhbmRpbmcsdGhlIGxvY2FsIGNoaW5lc2UgcGF5IGZvciB0aGUgc3dpbW1pbmcgZmFjaWxpdGllcy4gCjAgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb0J1dCBhdCB0aGUgc2FtZSB0aW1lLCBpZiBzb21ldGhpbmcgaXNuIGRvbmUgYXQgdGhlIGxlZ2lzbGF0aXZlIGxldmVsLCB0aGVuIGl0IGdvaW5nIHRvIGtlZXAgaGFwcGVuaW5nLCBhbmQgbmV4dCB0aW1lIHdpbGwgYmUgYmlnZ2VyLCBhcyB0aGUgaGlzdG9yeSBvZiB0aGVzZSBldmVudHMgaGF2ZSBwcm92ZW4uV2hlbiBpdCBjb21lcyB0byBhIGRpc2N1c3Npb24gb2Ygd2hhdCB0byBkbzogRG8geW91IHRyeSB0byBtYWtlIHRoZSBiaWdnZXN0IHN3ZWVwaW5nIGNoYW5nZSwgdGhhdCB3aWxsIGJlIGhhcmQgZm91Z2h0ICAgb3IgZG8geW91IGdvIGZvciBhIHF1aWNrIGltcGxlbWVudGF0aW9uIHRoYXQgd2lsbCBiZSByZWFzb25hYmxlIGFuZCBuZWFybHkgaW1tZWRpYXRlPyBJZiB3ZSB0YWtlIGF0IGxlYXN0IHRoZSBxdWljayBpbXBsZW1lbnRhdGlvbiByaWdodCBub3csIHdlIGNhbiBrZWVwIHRoZSBjb3B5Y2F0cyBhdCBiYXksIGJ1dCB0aGUgbmV4dCBtYXNzIGNhc3VhbHR5IGV2ZW50IHdpbGwgYWx3YXlzIGNvbWUgYXMgYSBzaG9jay4gSXQgY291bGQgYmUgYSB0cnVjaywgYm9tYnMsIGFjaWQsIGtuaXZlcywgZ2FzLCBndW5zLiAyIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ29JIHRoaW5rIHJlZ2FyZGxlc3Mgb2Ygd2hhdCBkZXB0aCAvIGJyZWFkdGggb2YgYSBzb2x1dGlvbiB3ZSB0cnksIG1hbnkgcGVvcGxlIGFyZSBqdXN0IHNpY2sgb2YgaW5hY3Rpb24uIApUaGUgRWFydGggZmxlZXQgY29tbWFuZGVyIG1pc2ludGVycHJldGVkIHRoZSBNaW5iYXJpIHdhcnJpb3IgY2FzdGUgdHJhZGl0aW9uIG9mIGFwcHJvYWNoaW5nIGEgc2hpcCB3aXRoIGd1biBwb3J0cyBvcGVuIGFzIGEgaG9zdGlsZSBhY3Rpb24gYW5kIGZpcmVkIG9uIHRoZSBNaW5iYXJpIHZlc3NlbHMuIApXZSBlbmdhZ2VkIHNvbGljaXRvcnMgdG8gYWN0IGZvciB1cyBhZ2FpbnN0IHRoaXMgY2hhcC4gTXVjaCBvZiB3aGF0IEkgY291bGQgdGVsbCB5b3UgaXMgbm93ICdTdWIgSnVkYWNhZScsIHNvIHNheSBubyBtb3JlLiAKSGFyc2ggcHVuaXNobWVudHMgZm9yIGJ1c2luZXNzIG93bmVycyB3aG8gaGlyZSBpbGxlZ2FsIGltbWlncmFudHMgd291bGQgc29sdmUgdGhlIHByb2JsZW0gZmFzdGVyLiBJZiB0aGUgZ292ZXJubWVudCByZWFsbHkgd2FudHMgdG8gc29sdmUgdGhpcyBwcm9ibGVtIGN1dCB0aGUgcHVyc2Ugc3RyaW5ncyBvZiB0aGUgcGVvcGxlIHdobyB3YW50IGNoZWFwIGxhYm9yLgpVbmRlcnN0YW5kIHRoZSBydWxlcyBvZiB0aGUgZ2FtZSBiZWZvcmUgeW91IHNpdCBkb3duIHRvIHBsYXkuCkN1cnJlbnRseSwgSSdtIGdvaW5nIHRocm91Z2ggYSB0cmFuc2l0aW9uIGhlcmUgaW4gU3dlZGVuLiAKV2h5IHRoaXMgaXMgdHJ1ZSBpcyB0b3VnaCB0byB1bmRlcnN0YW5kLCBidXQgdHJ1ZS4gCkJyZWFrIGl0IGRvd24gaW50byBzdGVwcy4gWW91IGNhbiBiZWdpbiBieSBleHBsYWluaW5nIGEgYnJvYWQgbWF0aGVtYXRpY2FsIHByaW5jaXBsZSB0byB0aGUgc3R1ZGVudCwgYnV0IHRoZW4gYnJlYWsgaXQgZG93biBpbnRvIHRoZSBzbWFsbGVzdCBzdGVwcyBwb3NzaWJsZS4gVGhpcyB3aWxsIGhlbHAgdGhlIHN0dWRlbnQgdW5kZXJzdGFuZCB3aHkgeW91IGFyZSBkb2luZyBpdCB0aGUgd2F5IHlvdSBhcmUgZG9pbmcgaXQsIGFuZCB0aGVyZWZvcmUsIHdpbGwgaGVscCB0aGVtIGxlYXJuIGFuZCByZW1lbWJlciBob3cgdG8gZG8gaXQgb24gdGhlaXIgb3duLlsyXS4gCkkgdGhpbmsgY2lnYXJldHRlcyBvciBhbG9lLiAKR2F5IExlc2JpYW4gYW5kIEJpc2V4dWFsCkluIDIwMDEsIEJpc3Nvbm5ldHRlIGJlY2FtZSBvbmUgb2Ygc2l4IHBlb3BsZSBvbiB0aGUgc3RlZXJpbmcgY29tbWl0dGVlIG9mIHRoZSBMR0JUIEFnaW5nIFByb2plY3QsIGFuIG9yZ2FuaXphdGlvbiB0aGF0IHdvcmtzIHRvd2FyZCBlZHVjYXRpbmcgaGVhbHRoY2FyZSB3b3JrZXJzIGFuZCB0aGUgcHVibGljIG9mIHRoZSBuZWVkcyBvZiBsZXNiaWFuLCBnYXksIGJpc2V4dWFsLCBhbmQgdHJhbnNnZW5kZXIgZWxkZXJzLiBXaGlsZSBzaGUgaGFkIGFsd2F5cyBmZWx0IHRoaXMgd2FzIGFuIGltcG9ydGFudCBpc3N1ZSwgaXQgd2FzIGEgcGFydGljdWxhciBpbmNpZGVudCB0aGF0IHN0aXJyZWQgaGVyIGludG8gYWN0aW9uLgpUaGlzIGlzIGp1c3QgYSBmYWN0b3Igb2YgdGhlbSBoYXZpbmcgY29udHJvbCBvdmVyIGFsbCBvZiB0aGUgbGFzZXIgc2Nhbm5lZCB0cmFja3MgYW5kIGFjY3VyYXRlbHkgcmVwcm9kdWNlZCBjYXJzLiBNb2RkZXJzIG9uIHJGMiBkbyBhbWF6aW5nIHdvcmssIGJ1dCB0aGV5IHN0aWxsIGNhbiBtb2RlbCBvdmVyc3RlZXIgdW5kZXIgYnJha2luZyBsaWtlIGlSYWNpbmcgY2FuLCBhbmQgdGhhdCB3aHkgaXQgdGhlIGJlc3Qgc2ltIHRvIG1lLiBUaGlzIGlzIG1vc3QgYXBwYXJlbnQgdG8gbWUgYXMgYSBmb3JtdWxhIGNhciBkcml2ZXIsIHdoZXJlIHlvdSBuZWVkIHRvIGJlIHByZWNpc2UgYW5kIGFjY3VyYXRlIG9uIHRoZSBicmFrZXMuLiAKSGFzIGFueW9uZSBlbHNlIHN0YXJ0ZWQgZG9pbmcgdGhpcywgb3IgYW0gSSB0b3RhbGx5IGluY29ycmVjdCBhYm91dCBob3cgY29tcG9zdCBhZmZlY3RzIGxpbXB3dXJ0IGdyb3d0aD8uIApTaW1wbHkgZW50ZXIgeW91ciBwb3N0Y29kZSBpbnRvIFNpbmdsZXNOZWFyLiBDaGVjayB3aG8gaXMgaW4gYSBiYXIgYmVmb3JlIHlvdSBkZWNpZGUgdG8gZ28sIHNjb3BlIG91dCBhIHJlc29ydCwgY2l0eSwgY2x1YiwgdW5pdmVyc2l0eSwgZXRjLiAKQnV0IHRoZSAzLzYgTGltaXQgdGFibGVzIGFyZSBmdWxsIG9mIGZ1Y2tpbmcgYXNzaG9sZXMuIAoiSGUgdGFsa2VkIGFib3V0IGEgaG91c2Ugb2YgY2FyZHMsIEhhY2tuZXkncyBwbGF5aW5nIGNhcmRzIHRvbywgYW5kIGhlIGp1c3Qgc2hvd2VkIGhpbSB0aGF0IGhlIGRvZXMgaGF2ZSBhbiBhY2UgaW4gaGlzIGhhbmQuIFRoYXQgd2FzIHRoZSBhY2UgdGhhdCBoZSBzaG93ZWQgRWJyb24sIGxldHRpbmcgaGltIGtub3csICdJIGRvIGhhdmUgYSBsb3QgbW9yZSBhbmQgd2UncmUgY29taW5nIGFmdGVyIHlvdSwnIiBOZXdzNEpheCBjcmltZSBhbmQgc2FmZXR5IGFuYWx5c3QgR2lsIFNtaXRoIHNhaWQuLiAKQSBjb3VwbGUgb2Ygd2Vla3MgYWdvLCBKYW1lcyBPIDI1LCBhbmQgSGFubmFoIEdpbGVzLCAyMCwgY3JlYXRlZCBhIG5hdGlvbmFsIHNjYW5kYWwgb3ZlciB0aGUgcHJvZ3Jlc3NpdmUgQUNPUk4gZ3JvdXAgYnkgcmVsZWFzaW5nIGEgdmlkZW8gc3VwcG9zZWRseSBzaG93aW5nIHRoYXQgQUNPUk4gZW1wbG95ZWVzIHdlcmUgYW54aW91cyB0byBoZWxwIHJ1biBwcm9zdGl0dXRpb24gcmluZ3MuIFRoZSB2aWRlbyB3YXMgcnVuIG9uIEFuZHJldyBCcmVpYmFydCB1bHRyYWNvbnNlcnZhdGl2ZSBCaWcgR292ZXJubWVudCB3ZWJzaXRlIGFuZCB0aGVuIGJlY2FtZSAibmV3cy4iLiAKTW9zdCBjb21wYW5pZXMgdG8gcHJldmVudCBhbnkgdHlwZSBvZiBtaXNoYW5kbGluZyB0aGF0IGNvdWxkIGNvbWUgYmFjayBvbiB0aGVtIHdpbGwgZm9yd2FyZCBjYXNlcyB0byBhIHRoaXJkIHBhcnR5IGludmVzdGlnYXRpb24gc2VydmljZS4gQW5kIG9mIGNvdXJzZSB0aGV5IGdvaW5nIHRvIHJlcXVpc2l0aW9uIHlvdXIgbWVkaWNhbCByZWNvcmRzIGFuZCB2YXJpb3VzIG90aGVyIHRoaW5ncyB0byBlbnN1cmUgdGhhdCB0aGVyZSB3YXNuIHNvbWV0aGluZyBwcmUgZXhpc3RpbmcgdGhhdCB5b3UgbmVnbGVjdGVkIHRvIHRlbGwgeW91ciBlbXBsb3llciB0aGF0IGNhdXNlZCB0aGUgaW5jaWRlbnQgaW4gdGhlIGZpcnN0IHBsYWNlLiAKVGhlIHJlYXNvbiBmb3IgdGhlIGRpc2FwcGVhcmFuY2Ugd2FzIGxhcmdlbHksIHRob3VnaCBub3QgZW50aXJlbHksIHBvbGl0aWNhbC4gClVsdGltYXRlbHkgbXkgZGFkIGhhZCB0byBjb21lIHRvIHRoZSBzY2hvb2wgYW5kIHRocmVhdGVuIHRvIHB1bGwgbWUgb3V0IChJIHdhcyBhbiBBIHN0dWRlbnQpIGZvciB0aGVtIHRvIGdpdmUgbWUgc29tZSBzb3J0IG9mIGdyYWNlIG9uIGJlaW5nIGFibGUgdG8gZWF0IGx1bmNoLi4gCkRhdmllcyBzYWlkIHRoZSBjaGlsZHJlbiBoYXZlbid0IGp1c3QgY29uZmluZWQgdGhlaXIgZXhjaXRlbWVudCB0byBDYW5hZGlhbiB3ZWF0aGVyICAgdGhleSdyZSBjdXJyZW50bHkgZWFnZXIgdG8gZW5yb2wgaW4gYSBuZWlnaGJvdXJob29kIHNjaG9vbCBhbmQgc3RhcnQgZ29pbmcgdG8gY2xhc3MuCllvdSBhcmUgbm90IGFsb25lIGluIHRoaXMgZXhwZXJpZW5jZSwgYnV0IHVuZm9ydHVuYXRlbHksIGl0IGhhcmQgZm9yIHRob3NlIHdobyBoYXZlbiBleHBlcmllbmNlZCBpdCB0byB1bmRlcnN0YW5kLiBEb24gYmUgYWZyYWlkIHRvIGFzayBmb3IgaGVscC4gCk1lZXQgdGhlIGZhbWlseSBvZiBmb3VyIHRoYXQgbGl2ZXMgd2VsbCBvbiBqdXN0IFVTCktfTGFuZHJ5ICA1IHBvaW50cyAgc3VibWl0dGVkIDEwIGhvdXJzIGFnbwpTdGlsbCwgdGhlIFBDSSBoYWQgYSBsb25nIHBvbGljeSBvZiBwZWFjZSBhbmQgcGFydGljaXBhdGlvbiBpbiB0aGUgbGliZXJhbCBkZW1vY3JhdGljIGdvdmVybm1lbnQuIApQdW5rYXNzcGllY2VvZnNoaXQgIDkzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJIHdvdWxkIHNheSB0cmVhdGluZyB3b3JkcyBhcyAiYXRvbWljIiB3aGVuIGZpcnN0IGxlYXJuaW5nIGEgbGFuZ3VhZ2UgaXMgcHJldHR5IG5hdHVyYWwuIApJJ2Qgc2F5IGdvIGZvciB0aGUgTVJJIGlmIHlvdSBjYW4gYWZmb3JkIGl0LiBJIGxpdmUgaW4gQ2FuYWRhIHNvIE1SSSBpcyBmcmVlIGJ1dCBoYXJkIHRvIGdldC4gCkEgMTIgd2VlayBoaWdoIGludGVuc2l0eSBpbnRlcnZhbCB0cmFpbmluZyBwcm9ncmFtIHByb2R1Y2VkIGEgMTcgcGVyY2VudCBkZWNyZWFzZSBpbiBiZWxseSBmYXQgaW4gb3ZlcndlaWdodCB5b3VuZyBtZW4uIApKdW4gMTU6VHJpYWwgYmVnaW5zIGZvciBHcmVnb3J5IENoaW5nLCBtYXNzYWdlIHRoZXJhcGlzdCBhY2N1c2VkIG9mIHNleHVhbCBhc3NhdWx0RmViIDIwOkJvdWxkZXIgQ291bnR5IG1hc3NhZ2UgdGhlcmFwaXN0IHBsZWFkcyBub3QgZ3VpbHR5IHRvIHNleHVhbCBhc3NhdWx0T2N0IDg6Qm91bGRlciBzaGVyaWZmOiBNYXNzYWdlIHRoZXJhcGlzdCBmYWNpbmcgc2V4dWFsIGFzc2F1bHQgY2hhcmdlIGFzc2F1bHRlZCBmaXZlIG90aGVyIHdvbWVuQXVnIDE5OkJvdWxkZXIgc2hlcmlmZjogR3JlZW5ob3VzZSBvd25lciBhbmQgbWFzc2FnZSB0aGVyYXBpc3Qgc2V4dWFsbHkgYXNzYXVsdGVkIHdvbWFuR3JlZ29yeSBNaW5nY2hpdSBDaGluZywgNTQsIHdhcyBjaGFyZ2VkIHdpdGggZmVsb255IHNleHVhbCBhc3NhdWx0IGFuZCB1bmxhd2Z1bCBzZXh1YWwgY29uZHVjdC4gCkkgcmVjZW50bHkgcmVwbGFjZWQgbXkgaGVhdHNpbmsgYWN0dWFsbHksIGFyb3VuZCBhIHdlZWsgYWdvLCBidXQgSSBkb24ndCBrbm93IGlmIHRoYXQgaGFzIGFueXRoaW5nIHRvIGRvIHdpdGggaXQgY29uc2lkZXJpbmcgbXkgdGVtcHMgYXJlIGZpbmUgKGJldHRlciBhY3R1YWxseSkuLiAKRGVwYXJ0bWVudCBvZiBKdXN0aWNlLiAKVEhFIFdBUiBPTiBXT01FTiAgIEFORCBNT1JFOiBJdCBjb3VsZCBiZSB3b3JzZS4gClNoZSBhbmQgaGVyIDcgeWVhciBvbGQgc29uIGNhbWUgdG8gdmlzaXQgZm9yIGEgZmV3IGRheXMuIApSZWNlcnRpZmljYXRpb24gYWxzbyByZXF1aXJlcyB5b3UgdG8gY29tcGxldGUgY29udGludWluZyBlZHVjYXRpb24vZXhwZXJpZW5jZSByZXF1aXJlbWVudHMgbWVhc3VyZWQgaW4gY29udGFjdCBob3Vycy4gClRoZSBpc2xhbmQgaXMgdGhlIG1vdG9yaW5nIHB1YmxpYyBwb3J0aW9uIG9mIHRoZSByb2FkIHR5cGljYWxseSAxMjAgMTUwIGZlZXQgaW4gbGVuZ3RoIGFuZCBpcyBkZXNpZ25lZCB0byBiZSBmYWlsIHNhZmUuIApFRElUIDI6IFdvdywgSSB0b3VjaGVkIGFuZCBhbWF6ZWQgYnkgcGVvcGxlIHJlc3BvbnNlcyEgSXQgcmFuZ2VzIGZyb20sICJUaGlzIGlzIGFsc28gbWUsIiB0byAiSSB1bmRlcnN0YW5kLCBidXQgeW91IGNhbiBkbyBiZXR0ZXIuIEhlcmUgaG93LiIKSWYgeW91IHdhbnQgImd1YXJhbnRlZWQiIHBob25lIG51bWJlcnMsIGdvIHRvIGEgYm9va2luZyBjbHViLiBZb3Ugd2lsbCBiZSBzZWF0ZWQgd2l0aCBhdCBsZWFzdCAyMCBkaWZmZXJlbnQgZ2lybHMgb3ZlciBvbmUgbmlnaHQuIApJIGFtIHN1cmUgdGhlcmUgd2VyZSBtYW55IGF0IHlvdXIgbWlsIGZ1bmVyYWwgd2hvIGhhZCBnbGltcHNlcyBiZWhpbmQgdGhlIG1hc2suIApBZnRlciBhIHllYXIgb2YgdXBzIGFuZCBkb3ducyB0aGVyZSdzIGdvb2QgbmV3cywgYW5kIGJhZCBuZXdzSG91c2luZyBpbmR1c3RyeSBsZWFkZXJzIHNheSBNZXRybyBWYW5jb3V2ZXJpdGVzIGNhbiBleHBlY3QgdG8gc2VlIHNpbmdsZSBmYW1pbHkgaG9tZSBwcmljZXMgY29udGludWUgdG8gZmFsbCB0aGlzIHllYXIgYWxvbmcgd2l0aCBzb21lIHNvZnRlbmluZyBpbiB0aGUgcHJpY2VzIG9mIG5ldyBtdWx0aSBmYW1pbHkgaG9tZXMuIEJ1dCBpZiB5b3UgYXJlIGNvdW50aW5nIG9uIHRoZSBob3VzaW5nIG1hcmtldCB0byBiZSBoaXQgYnkgYSB0cnVlIHJlY2Vzc2lvbiwgeW91IG1heSBlbmQgdXAgd2FpdGluZyBhIGxvbmcsIGxvbmcgdGltZS4gQmlnZ2VzdCBkZXZlbG9wZXJzLCB0b2xkIHRoZSByZWNlbnQgVXJiYW4gRGV2ZWxvcG1lbnQgSW5zdGl0dXRlIGFubnVhbCBmb3JlY2FzdCBsdW5jaGVvbiB0aGF0IHRoZXkgZXhwZWN0IHRoZSBtYXJrZXRzIHRvIHRha2UgYSBicmVhdGhlciBhbmQgdG8gcmVzZXQgZHVyaW5nIHRoZSB5ZWFyLiAKQW5vdGhlciB0aGluZyB5b3Ugc2hvdWxkIHVuZGVyc3RhbmQgYmVmb3JlIHlvdSBtYWtlIHRoZSBwdXJjaGFzZSBpcyB0aGF0IGl0IGhhcyBhbiBBQyBwb3dlciBhZGFwdGVyOyBidXQgZm9yIHVzZSBvbiB0aGUgcm9hZCwgeW91J2xsIG5lZWQgM0FBIGJhdHRlcmllcy4gU28gaWYgeW91IGJ1eSB0aGlzIGZvciB5b3Vyc2VsZiBvciBzb21lb25lIHlvdSBrbm93IHdobyBsb3ZlcyB0aGVzZSB0eXBlcyBvZiBQb2tlciBNYWNoaW5lIEdhbWVzLCBrZWVwIGluIG1pbmQgdGhlIGNvbm5lY3Rpb24gcGllY2VzLiBJdCBtYXkgbWFrZSBhIGRpZmZlcmVuY2UgZGVwZW5kaW5nIG9uIHdobyB5b3UgcGxhbiBvbiBnaXZlIHRoZW0gdG8gYXMgYSBnaWZ0LgpCdXQsdGhlIGZ1bmRhbWVudGFscyBvZiB0aGUgZ2xvYmFsIGFpcmxpbmUgYnVzaW5lc3MsIGVzcGVjaWFsbHkgd29ybGR3aWRlIHBhc3NlbmdlciB0cmFmZmljIGdyb3d0aCwgY29udGludWUgdG8gYmUgc28gc3Ryb25nIHRoYXQgaGUncyB2ZXJ5IGNvbmZpZGVudCBvZiBnb29kIHJlc3VsdHMgaW4gdGhlIGxvbmcgdGVybSwgaGUgc2FpZC4gCjMuIFR5cGljYWxseSwgYSBwbGF5ZXIgZ29lcyBvbiB0aWx0IGFmdGVyIGxvc2luZyBhIGxhcmdlIHBvdCBvciBzdWZmZXJpbmcgYSBiYWQgYmVhdC4gClNvb24sIGNpdHkgaW5zcGVjdG9yIEtyaXMgU3RpY2h0ZXIgd2VudCBrbm9ja2luZyBvbiB0aGUgZG9vciBhbmQgZm91bmQgd2hhdCBsb29rZWQgbGlrZSBhIHNwYXJlIG1hc3NhZ2UgYnVzaW5lc3Mgd2l0aCBhIGdyZWV0aW5nIGRlc2sgaW4gZnJvbnQsIGFzIHdlbGwgYXMgYSBzZXJpZXMgb2YgaW5kaXZpZHVhbCByb29tcyB3aXRoIHRoZWlyIGRvb3JzIGNsb3NlZC4gCkFsc28gaGF2aW5nIGEgZ3JlYXQgc3VtbWVyIGF0IHRoZSBwbGF0ZSBpcyBCcmFuZG9uIEtlbGxleSwgd2hvIGlzIHBsYXlpbmcgZm9yIHRoZSBQYWR1Y2FoIENoaWVmcyBvZiB0aGUgT2hpbyBWYWxsZXkgU3VtbWVyIExlYWd1ZSBiYXR0aW5nIC4zNTQsIHdpdGggdGhyZWUgZG91Ymxlcywgd2hpbGUgc2NvcmluZyAyNiBydW5zIGFuZCBzdGVhbGluZyAyMiBiYXNlcyBpbiAxMDYgcGxhdGUgYXBwZWFyYW5jZXMgc28gZmFyLgpUaGlzIHdlZWssIGhvd2V2ZXIsIHdlIGxlYXJuZWQgT2FrbGF3biBhbmQgU291dGhsYW5kIGhhdmUgcmV2ZXJzZWQgdGhhdCBnYW1lLiBOb3cgYmxhY2tqYWNrIGlzIHBsYXllZCB3aXRoIHJlYWwgY2FyZHMsIGJ1dCB0aGUgcG9rZXIgY2hpcHMgYXJlIGVsZWN0cm9uaWMuIGEgdmlkZW8gY2FtZXJhKSBhcyBpdCBpcyBkZWFsdC4KQnV0IHRoZSBFZG1vbnRvbiBQb2xpY2UgU2VydmljZSwgdW5kZXIgdGhlIGxlYWRlcnNoaXAgb2YgQ2hpZWYgQ29uc3QuIEcuIEhpbGwsIHdlcmUgbm90IGFib3V0IHRvIGxldCBoaW0gZ2V0IGF3YXkuIFNvIG9uIFNlcHQuIDIsIDE5MTksIERldC4gSmFtZXMgQ2FtcGJlbGwgYmVjYW1lIHRoZSBmaXJzdCBvZmZpY2VyIGluIENhbmFkYSB0byB1c2UgYW4gYWlycGxhbmUgaW4gdGhlIHB1cnN1aXQgb2YganVzdGljZS4gVGhlIHBvbGljZSB3ZW50IHRvIHRoZSBmYW1lZCBidXNoIHBpbG90IGJyb3RoZXJzIENvdXJ0IGFuZCBXaWxmcmlkIChXb3ApIE1heSBhbmQgYXNrZWQgZm9yIGEgZmxpZ2h0IHdlc3QgdG8gYXBwcmVoZW5kIHRoZSBzdXNwZWN0LiBXb3AgTWF5IGZsZXcgQ2FtcGJlbGwgdG8gRWRzb24gYW5kIHRoZSBwb2xpY2VtYW4gY29udGludWVkIHRoZSBqb3VybmV5IGJ5IHRyYWluLgpBcyBhIHJlc3VsdCwgdGhlIG5vbiBwcm9zZWN1dGlvbiBhZ3JlZW1lbnQgd2FzIHNlYWxlZCB1bnRpbCBhZnRlciBpdCB3YXMgYXBwcm92ZWQgYnkgdGhlIGp1ZGdlLCB0aGVyZWJ5IGF2ZXJ0aW5nIGFueSBjaGFuY2UgdGhhdCB0aGUgZ2lybHMgICBvciBhbnlvbmUgZWxzZSAgIG1pZ2h0IHNob3cgdXAgaW4gY291cnQgYW5kIHRyeSB0byBkZXJhaWwgaXQuLiAKVGhhdCdzIGEgaHVnZSBkaWZmZXJlbmNlIGluIHBlcnNwZWN0aXZlLiAKSSBkb24gZGlzYWdyZWUgYW5kIGFzIHNvbWVvbmUgc3ltcGF0aGV0aWMgdG8gc29jaWFsaXNtIEkgYW0gdGhlIGZpcnN0IHRvIGNsYXJpZnkgIm5vdCB0aG9zZSByZWQgY29tbWllcyB3aG8gYmFzdGFyZGl6ZWQgdGhlIHRlcm1zIi4gQnV0IHNlbWFudGljYWxseSBzcGVha2luZywgdGhlIG1vZGVybiBlcmEgaXMgY29uc2lkZXJlZCBuZW9saWJlcmFsLCBhbmQgdGhlIHJoZXRvcmljIG9mIHBlb3BsZSBsaWtlIFRydW1wIGFuZCBGb3JkIGZpdCByaWdodCBpbnRvIHRoYXQgbmFycmF0aXZlLCBjb250cmFkaWN0b3J5IHBvbGljaWVzIG5vdHdpdGhzdGFuZGluZy4gVW50aWwgcGVvcGxlIGFzIGxlZnQgYXMgQ2hvbXNreSBhbmQgSGFydmV5IGFuZCBhcyBtYWluc3RyZWFtIGFzIFN0aWdsaXR6IHN0YXJ0IHVzaW5nIG90aGVyIHRlcm1zLCBJIHRoaW5rIHRoZSB3b3JkIGNhbiBiZSBwcm9wZXJseSB1c2VkIHRoZSB3YXkgdGhlIE9QIHVzZWQgaXQuClNDT1RVUyBqdXN0IHJ1bGVkIHRoYXQgZXhjZXNzaXZlIGNpdmlsIGFzc2V0IGZvcmZlaXR1cmUgaXMgdW5jb25zdGl0dXRpb25hbC4KVGhlIGZpcnN0IGJpZyB0ZXN0IG9mIHRoZSBuZXcgbG9vayBjbHViIHdpbGwgY29tZSBvbiBXZWRuZXNkYXkgbmlnaHQgd2hlbiBpdCBob3N0cyBhYm91dCAxMDAgcGVvcGxlIGZvciBhIFdvZG9uZ2EgQ2hhbWJlciBvZiBDb21tZXJjZSBtZWV0aW5nLCBvbmUgb2YgZm91ciBpdCBob2xkcyBlYWNoIHllYXIuClRoZSBDYWxpZm9ybmlhbnMgaGF2ZSBhbHdheXMgd29ya2VkIHRoaXMgbWFya2V0IGhhcmQsIGFsdGhvdWdoIHNlbGRvbSBhcyBoYXJkIGFzIHRoaXMgeWVhci4gCk15IGZpcnN0IHRob3VnaHQgd2FzIHRvIHJldmVydCBiYWNrIHRvIHRoZSBvbGQgcmVhcGVyLCBidXQgbWFrZSBTUyBpbnN0YW50LCBidXQgaGF2ZSBpdCBhbHNvIHN0YXJ0IHRoZSBjb29sZG93biBvdmVyIG9uIHdyYWl0aCwgc28gaGUgY2FuIGJhbWYgaW4sIGtpbGwsIGFuZCB3cmFpdGggb3V0LiAKSW4gaGFybW9ueSB3aXRoIG5hdHVyYWwgbGF3cyBhcmUgc2VlbiBhcyB0aGUgZXNzZW5jZSBvZiB3aXNkb20uIEVkaXRvcmlhbCBSZXZpZXdzLiBSZXZpZXcuIEluIGhpcyB0aW1lbHkgYW5kIGluc2lnaHRmdWwgYm9vayBUaGUgV2lzZG9tIG9mIGEgTWVhbmluZ2Z1bCBMaWZlIC4gRmlsZSBTaXplOiA3OTkgS0I7IFByaW50IExlbmd0aDogMTcwIHBhZ2VzOyBQYWdlIE51bWJlcnMgU291cmNlIElTQk46IDE5NDIwOTQxODM7IFB1Ymxpc2hlcjogQ2VudHJhbCBSZWNvdmVyeSBQcmVzcyAoSnVseSAyNSwgMjAxNikuIEdldHRpbmcgYSBMaWZlOiBTdHJhdGVnaWVzIGZvciBKb3lmdWwgYW5kIEVmZmVjdGl2ZSBMaXZpbmcuIApEb2VzIG5vdCBsaWtlIGNvbGQgY2FsbGluZyB2ZXJ5IG11Y2guIEEgY291cGxlIHJlYXNvbnMgYmVoaW5kIHRoaXM6CklmIHdvcmtpbmcgaXMgb3ZlcndoZWxtaW5nIGJ1dCB5b3Ugc3RpbGwgbmVlZCBtb25leSBJIHdvdWxkIHRlbGwgYW55b25lIHRvIGZvY3VzIHRoZWlyIGRhbW5lZCBoYXJkZXN0IHRvIGdldCBhIGpvYiB3aXRoIHRoZSBzY2hvb2wgdGhleSBhdHRlbmQuIApUaGV5IHRyYWluIHJlbGVudGxlc3NseSBvbiBrbm93biBhcHBhcmF0dXMsIGFuZCBhIGd1eSBzaG93aW5nIHVwIHdpdGggbmV3IGtpdCBicmluZ3Mgc28gbWFueSB1bmtub3ducy4gCkZyaWRheSwgMjFzdC4gR290IHRoZSBDb3BwZXIgT3ZlbiBhc2hvcmUgYW5kIGZpeGVkIGl0IGluIHRoZSBiYW5rIG9mIHRoZSBicmVhc3R3b3JrLiBZZXN0ZXJkYXksIGFzIE1yLiAKRXIgc2NobWllcnQgc2ljaCBCcm90IGF1ZiBkaWUgQnV0dGVyIHVuZCB3aHJlbmQgZGVzIFNwdHN0Y2tzIHNjaHJlaWJ0IGVyIGRpZSBUYWdlc3plaXR1bmcuIApJdCBub3QgbGlrZSBoZSB3YXMgYXNzdW1pbmcgeW91IGNvdWxkbiBkcml2ZSBvciBoYWQgYmFkIG1hdGggc2tpbGxzIG9yIHBsYXllZCBvZmYgYW55IG90aGVyIGZlbWFsZSBzdGVyZW90eXBlLiAKU3RhdGlzdGljYWxseSwgeW91IHdpbGx3aW4gbW9yZSBvZnRlbiB0aGFuIG5vdCBpZiB5b3UgcGxheSBieSB0aGUgbGF3IG9mIGF2ZXJhZ2VzIChhbmQga25vdyBob3cgdG8gcmVhZCBwZW9wbGUgYSBiaXQpLCBidXQgaXQgd29uIHdvcmsgb3V0IHRoYXQgd2F5Li4gCkplbnNlbiBpc24gYSB2ZWdhbiwgZWl0aGVyLiBoZSB3aWxsIG9ubHkgYWNrbm93bGVkZ2UgYWN0aW9ucyB0aGF0IGRvbiBwZXJzb25hbGx5IGludm9sdmUgaGlzIGFjdHVhbGx5IGRvaW5nIGFueXRoaW5nLiBzbyBpZiB5b3UgcmVhbGx5IGNhcmVkIGFib3V0IHRoaXMgeW91IHdvdWxkIGdvIHZlZ2FuLgpBcyBncmVhdCBhcyBjb252ZXJ0aW5nIGJ5IHRlbiBpcyBmb3IgY2FsY3VsYXRpb25zLCBtb3N0IG9mIHRoZSB0aW1lIHlvdXIgY29udmVyc2lvbnMgYXJlIHZlcnkgc2ltcGxlIG9yIG5vbmV4aXN0ZW50IChleGNlcHQgZm9yIHRoZSB3aG9sZSBwaW5jaCB0ZWFzcG9vbiB0YWJsZXNwb29uIGN1cCBwaW50IHRoaW5nLiAKQmxhY2sgcGVvcGxlKSBidXQgaW4gcmVhbGl0eSB0aGV5IGFyZSBqdXN0IG1vcmUgcG9saWNlZC4gClNoZSByYW4gd2l0aCB1cyBleGFjdGx5IGxpa2Ugc2hlIHdvdWxkIGhhdmUgYSBub3JtYWwgY2xpZW50LCBidXQgaXQgd2FzIHRoZSBwbGFubmluZyBhbmQgdmlzaW9uIGNhc3Rpbmcgc2VydmljZXMgc2hlIG9mZmVyZWQsIGFzIHdlbGwgYXMgaW5kdXN0cnkgaW5zaWdodCBhbmQgZXhwZXJ0aXNlLCBub3QgYSBwZXJzb25hbCB3ZWRkaW5nIGFzc2lzdGFudC4gCklmIG15IGNhbm9uIExJIGZyb20gT3JpZ2lucyB3YXMgTGVsaWFuYSwgaXQgYnJlYWsgbXkgaGVhcnQgdG8gc2VlIGhlciBzbGVlcGluZyB3aXRoIHRoZSBJbnF1aXNpdG9yLCBldmVuIGlmIGl0IHdlcmUgYSBkcmVhbS4gCldvcmxkJ3MgYmlnZ2VzdCBjYXNpbm9zClNpbmdoIG9ubHkgb2ZmZXJlZCBhIGZldyBkZXRhaWxzLCBidXQgc2FpZCBPdHRhd2Egc2hvdWxkIHN0b3AgYXBwbHlpbmcgR1NUIHRvIHRoZSBjb3N0IG9mIGJ1aWxkaW5nIG5ldyBhZmZvcmRhYmxlIHVuaXRzLCBwcm92aWRlIGEgc3Vic2lkeSB0byByZW50ZXJzIHdobyBzcGVuZCBtb3JlIHRoYW4gMzAgcGVyIGNlbnQgb2YgdGhlaXIgaW5jb21lcyBvbiBob3VzaW5nIGFuZCBkb3VibGUgYSB0YXggY3JlZGl0IGZvciBmaXJzdCB0aW1lIGhvbWVidXllcnMgdG8gJDEsNTAwIGZyb20gJDc1MC4KQmVjYXVzZSBwZW9wbGUgZG8gdGhpcywgSSBjb3VsZG4gYm9vayBnb29kIGxha2VzIHdpdGhvdXQgYWxzbyBkb2luZyB0aGlzLgpCdXQgbGlrZSwgbGV0IGJlIHJlYWwgaGVyZSwgaXQgZGVmaW5pdGVseSB3b3VsZG4gcnVpbiBoaXMgbGlmZSBldmVuIGlmIGhlIHdlbnQgdG8gcHJpc29uLiBUaGVyZSBhIHNleHVhbCBwcmVkYXRvciBpbiB0aGUgV2hpdGUgSG91c2UgYW5kIG9uZSBvbiB0aGUgU3VwcmVtZSBDb3VydCBiZW5jaCBhbmQgbGlrZSBhIHppbGxpb24gaW4gSG9sbHl3b29kIGFuZCBldmVyeWJvZHkga25vd3Mgd2hhdCB0aGV5IGRpZCBhbmQgbm9uZSBvZiB0aGVpciBsaXZlcyBoYXZlIGJlZW4gcnVpbmVkIGJ5IHRoYXQuIFNvIGNhbiB3ZSBzdG9wIHBsYXlpbmcgdGhlIHNhZCB2aW9saW5zIGZvciB0aGUgcG9vciwgaW5ub2NlbnQgc2V4dWFsIHByZWRhdG9ycyBub3c/IFRoYW5rcyEgQ29vbCEKQ2VydGlmaWNhdGlvbiBMZXZlbHMgVGhlcmUgYXJlIGZpdmUgY2xhc3NlcyBvZiBjZXJ0aWZpY2F0aW9uIGZvciBvcGVyYXRvcnMgd29ya2luZyBpbiB3YXRlciBzdXBwbHkgYW5kIGRpc3RyaWJ1dGlvbiBhbmQgaW4gd2FzdGV3YXRlciB0cmVhdG1lbnQgYW5kIGNvbGxlY3Rpb24uIFRoZXNlIHN0YXJ0IGF0IGNsYXNzIEEgYW5kIHJ1biBmcm9tIGxldmVscyBJIHRocm91Z2ggSVYuIFRoZXkgYWxsIHJlcXVpcmUgZGlmZmVyZW50IGFtb3VudHMgb2YgZXhwZXJpZW5jZS4gSWYgeW91IGRvbid0IGhhdmUgZW5vdWdoIHdvcmsgZXhwZXJpZW5jZSB0byBtZWV0IHRoZSByZXF1aXJlbWVudHMgZm9yIHRoZSBmaXJzdCB0aHJlZSBleGFtcywgeW91IG1heSBiZSBhYmxlIHRvIGFwcGx5IGZvciBvcGVyYXRvciBpbiB0cmFpbmluZyBzdGF0dXMuIEluIHRoaXMgY2FzZSwgaWYgeW91IHBhc3MgdGhlIGV4YW0geW91IGhhdmUgdXAgdG8gNDggbW9udGhzIHRvIGdldCB5b3VyIGV4cGVyaWVuY2UgbGV2ZWxzIHVwIHRvIHNwZWVkLgpZb3VyIGNhbGwuIApKdXN0IGRvbiBleHBlY3QgdG8gYmUgZXhjaXRlZCBvciBlbnRocmFsbGVkIGJ5IHRoZSBnYW1lLiAKMykgTm8gc2F1Y2UuIFB1dCBpbiBqdXN0IGVub3VnaCB3YXRlciB0byBjb3ZlciB0aGUgY2hpY2tlbiBhbmQgc29tZSBzcGljZXMuIEkgZ2VuZXJhbGx5IHVzZSBnYXJsaWMuIG9uaW9uIHBvd2Rlciwgc2FsdCBhbmQgcGVwcGVyLiBUaGlzIGlzIHByZXR0eSBoZWFsdGh5IGFzIGxvbmcgYXMgeW91IGRvbnQgb3ZlcmRvIHRoZSBzYWx0LgpBbmF0b215IHRleHRib29rcyB3aWxsIHRlbGwgeW91IHRoYXQgdGhlIG11c2N1bG9za2VsZXRhbCBzeXN0ZW0gY29uc2lzdHMgb2YgdGhvdXNhbmRzIG9mIHNlcGFyYXRlIHBhcnRzOiBhIGNvdXBsZSBodW5kcmVkIGJvbmVzIGhlbGQgdG9nZXRoZXIgYnkgbW9yZSB0aGFuIDYwMCBtdXNjbGVzIGFuZCBhIG5lYXIgY291bnRsZXNzIG51bWJlciBvZiBsaWdhbWVudHMgYW5kIHRlbmRvbnMuIApCb3RoIHR5cGVzIGFyZSBiZW5lZmljaWFsIGZvciB1c2VycywgYnV0IHN0aWxsIHVzZXJzIG11c3QgbGVhcm4gdGhlIHBsYXlpbmcgcHJvY2VkdXJlIG9mIHRoaXMgZ2FtZS4gCkJyaWFuIFBhcnJpc2guIApUaGF0IGNvbXBhbnkgd2lsbCBpbnVuZGF0ZSB5b3Ugd2l0aCBwYXBlcndvcmsuIFRoZSBmaXJzdCBkZW1hbmQgaXMgVEVOIFlFQVJTIG1lZGljYWwgYW5kIG1lbnRhbCBoZWFsdGggcmVjb3Jkcy4gQW5kLCBpZiB0aGUgaW5qdXJlZCBlbXBsb3llZSBtYW5hZ2VzIHRoYXQsIHRoZSBzZWNvbmQgc3RlcCBpcyBkZW5pYWwsIHdpdGhvdXQgYW55IHR5cGUgb2YgcmV2aWV3LiAKR29vZCBmcmllbmQgb2YgbWluZSBpcyBhIFBBIGluIGEgc2tldGNoaWVyIGFyZWEgb2YgTllDLiAKUGVvcGxlIHdobyBzcG9ydCB0aGUgQWNlIG9mIFNwYWRlcyBhcmUsIHdoZXRoZXIgdGhleSBrbm93IGl0IG9yIG5vdCwgYW5ub3VuY2luZyB0aGF0IHRoZXkgd2VsY29tZSBkZWF0aCBhcyBhIG1lYW5zIHRvIGEgYmV0dGVyIGV4aXN0ZW5jZSwgb3Igc2ltcGx5LCB0aGF0IHRoZXkgYXJlIG5vdCBhZnJhaWQgb2YgZGVhdGggYW5kIHRoZSBjaGFuZ2VzIGl0IHdpbGwgYnJpbmcuIExlZSBjYWxsZWQgdGhlIGFjZSBvZiBzcGFkZXM/CldoYXQgbWFrZXMgdGhpcyBzdHVkeSBub3Rld29ydGh5IGlzIHRoYXQgdGhlIHJlc2VhcmNoZXJzIGhhZCBhY2Nlc3Mgbm90IG9ubHkgdG8gdGhlIGNvbXBsZXRlIGVtYWlsIHJlY29yZHMgb2YgYSBtaWRzaXplIGNvbXBhbnkgbmVhcmx5IDEuNSBtaWxsaW9uIG1lc3NhZ2VzIHNlbnQgYnkgMSwwNTIgZW1wbG95ZWVzIG92ZXIgYSBzaXggbW9udGggdGltZSBzcGFuIGJ1dCBhbHNvIHRvIGEgZGV0YWlsZWQgbWFwIG9mIHNvY2lhbCByZWxhdGlvbnNoaXBzLiAKVGhlIFdTT1Agb3JpZ2luYWxseSB0b29rIHBsYWNlIGluIHRoZSB3b25kZXJmdWxseSBuYW1lZCBCaW5pb25zIEdhbWJsaW5nIEhhbGwsIGFuZCBsYXRlciBtb3ZlZCBhY3Jvc3MgdG8gdGhlIFJpbyBBbGwgU3VpdGUgSG90ZWwuIEJpbmlvbnMgaXMgRG93bnRvd24sIG9uIEZyZW1vbnQgU3RyZWV0LCBhbmQgZXhpc3RzIHRvIHRoaXMgZGF5LiAKV0FTSElOR1RPTiAoQ05OKSAgIFNwZWNpYWwgY291bnNlbCBSb2JlcnQgTXVlbGxlciBoYXMgb2ZmZXJlZCB0byByZWR1Y2UgdGhlIG51bWJlciBvZiBvYnN0cnVjdGlvbiByZWxhdGVkIHF1ZXN0aW9ucyBQcmVzaWRlbnQgRG9uYWxkIFRydW1wIHdvdWxkIGJlIGFza2VkIGJ5IGludmVzdGlnYXRvcnMsIHNvdXJjZXMgZmFtaWxpYXIgd2l0aCB0aGUgbmVnb3RpYXRpb25zIHRlbGwgQ05OLiBIb3dldmVyLCBNdWVsbGVyIHdhbnRzIG9ic3RydWN0aW9uIHRvIGJlIGFkZHJlc3NlZCBpbiBwZXJzb24sIG5vdCBqdXN0IGluIHdyaXR0ZW4gYW5zd2Vycy4KQnV0IEpheCBhbGxvd2VkIG1lIHRvIHJlZHVjZSBteSBtb250aGx5IGxpdmluZyBleHBlbnNlcyBieSBhbG1vc3QgJDIsMDAwIGEgbW9udGguIFRoZXJlIGlzIGNyaW1lIGJ1dCBub3RoaW5nIGNvbXBhcmVkIHRvIENoaWNhZ28gd2hlcmUgSSBmcm9tLiAKSm9pbnQgc2Vzc2lvbiBvZiB0aGUgVW5pdGVkIFN0YXRlcyBDb25ncmVzcwpNeSBwb2ludCBpcywgeW91IGNhbiBkZWZpbml0ZWx5IGdldCBhbm90aGVyIGRlZ3JlZSBpZiB5b3UgZmluZCBhIHdheSBmb3IgaXQgdG8gd29yay4gSXQgbm90IGxpa2UgeW91IGhhdmUgb25seSB0aGUgb25lIHNob3QgYXQgY29sbGVnZSBhbmQgaWYgeW91IGZhaWwsIGl0IG92ZXIgZm9yZXZlci4KTm90IGEgYmFkIHRoaW5nIGF0IGFsbCEgSnVzdCBwb2ludGluZyBpdCBvdXQuIEkgYW0gb24geW91ciB0ZWFtISBJIGhhdmUgcHJvZHVjdHMgZnJvbSBBbmRhbG91LCBBQ1VSRSwgRGVybWEgRSwgZXRjLiAKRG93bmxvYWQgUENHYW1pbmdXaWtpIFBhdGNoLiBFeHRyYWN0IHRoZSBjb250ZW50cyBvZi4gCklzIHRoZXJlIGNvbnNvbGlkYXRpb24gZ29pbmcgb24gaW4gdGhlIEYgc3BhY2U/IEkgd3JvdGUgcmVjZW50bHkgYWJvdXQgYSBwcml2YXRlIGVxdWl0eSBmaXJtIGJ1eWluZyBTYWZlIEd1YXJkLCB3aGljaCBpcyBvbmUgb2YgeW91ciBjb21wZXRpdG9ycy4KSW4gaGVyIHJ1bGluZyBGcmlkYXksIEZlZGVyYWwgQ291cnQgSnVzdGljZSBDYXRoZXJpbmUgS2FuZSBzYWlkIHByb3NlY3V0b3JpYWwgZGVjaXNpb24gbWFraW5nIGlzIG5vdCBzdWJqZWN0IHRvIGp1ZGljaWFsIHJldmlldywgZXhjZXB0IGZvciBjYXNlcyB3aGVyZSB0aGVyZSBpcyBhbiBhYnVzZSBvZiBwcm9jZXNzLgpTaGUgd2FzIHNpbmdpbmcgYXQgb3BlbiBtaWNzIGFuZCByZWNvcmRpbmcgZGVtb3Mgd2hpbGUgaGVyIGZyaWVuZHMgbWFycmllZCBiYW5rZXJzIGFuZCBib3RoZXJlZCBoZXIgZm9yIG5vdCBoYXZpbmcgYSBkYXRlIHRvIHRoZWlyIHdlZGRpbmcsIGFuZCB0cmllZCB0byBzZXQgaGVyIHVwLkhpcyBkYWQgYmVyYXRlZCBoaW0gZm9yIG5vdCBoYXZpbmcgYSBqb2Igb3IgYW55IG1vbmV5LCBhbmQgSmFjayBsYW1lbnRlZCBoaXMgbW9uZXkgdHJvdWJsZXMgdG8gaGlzIGZyaWVuZCBEYXJyZWxsLiBUaGV5IHdhbnRlZCB0byBvcGVuIHRoZWlyIG93biBhdXRvIGJvZHkgc2hvcCwgYnV0IGZyaWVuZHMgYW5kIG5laWdoYm9ycyBwYXlpbmcgdGhlbSAkNSBhIGpvYiB3YXMgbmV2ZXIgZ29pbmcgdG8gZ2V0IHRoZW0gdGhlcmUuVGhleSB0cmllZCBhIHNoYWR5IGFuZCBuZXJ2ZSB3cmFja2luZyBwb2tlciBnYW1lIGFuZCB3b24sIGJ1dCB0aGVuIGdvdCBiZWF0IHVwIGFuZCBoYWQgdGhlaXIgbW9uZXkgc3RvbGVuIHdoZW4gdGhleSB0cmllZCB0byBsZWF2ZSBhZnRlciBvbmUgcm91bmQsIGxlYXZpbmcgdGhlbSB3aXRoIGV2ZW4gbGVzcyB0aGFuIHRoZXkgc3RhcnRlZCB3aXRoLk9uIHRoZSBzYW1lIG5pZ2h0IHRoYXQgSmFjayBhbmQgRGFycmVsbCBkZWNpZGVkIHRvIHN0ZWFsIHRoZWlyIG1vbmV5IGJhY2sgYnkgcGxvdHRpbmcgYSBsb3cga2V5IGhlaXN0IGF0IGEgYmFyLCBib3RoIEphY2sgYW5kIFJlYmVjY2EgaGFkIGZyaWVuZHMgc2V0IHRoZW0gdXAgb24gYSBkYXRlLiBXZSB3ZXJlIGxlZnQgdG8gYXNzdW1lIHRoZXkgd2VyZSBiZWluZyBzZXQgdXAgb24gdGhlIHNhbWUgZGF0ZSwgd2l0aCBhIHBhbmcgb2Ygc2FkbmVzcyB0aGF0IGNhbWUgZnJvbSB0aGlua2luZyB0aGF0IGlmIFJlYmVjY2EncyBkYXRlIHdhcyBKYWNrLCB0aGV5IG9ubHkgbWV0IGJlY2F1c2Ugc2hlIGRlY2lkZWQgaGVyIG93biBkcmVhbXMgd2VyZW4ndCBlbm91Z2gsIGFuZCB0aGF0IHNoZSBkaWQsIGluIGZhY3QsIG5lZWQgdG8gImRpdmVyc2lmeS4iIFRoYXQgd291bGQgbWFrZSB3aGF0IHdhcyBoYXBwZW5pbmcgd2l0aCBSZWJlY2NhJ3MgdG91ciBpbiB0aGUgOTBzIGZlZWwgZXZlbiBtb3JlIGhvcGVsZXNzLCBhbmQgZXZlbiBtb3JlIHBhaW5mdWwuQnV0IGluIGZhY3QsIFJlYmVjY2Egd2FzIHdhaXRpbmcgZm9yIGFuIGludmVzdG1lbnQgYmFua2VyIHdobyB3YXMgcGFzc2lvbmF0ZSBvbmx5IGFib3V0IHN0b2NrcyBhbmQgYm9uZHMgYW5kIG90aGVyIHN1Y2ggaW52ZXN0bWVudCBiYW5rZXIgeSBwaHJhc2VzLiAKIkkgd2Fzbid0IGEgVG9sa2llbiBmYW4sIiBzaGUgYWRtaXRzLiAiSSB0cmllZCB0byByZWFkIFRoZSBIb2JiaXQgd2hlbiBJIHdhcyBhYm91dCAxMiBidXQgaXQgZGlkbid0IGRvIG11Y2ggZm9yIG1lLicKSSBob25lc3RseSB0aGluayB5b3Ugd29uIGhhdmUgYSBwcm9ibGVtLCBob3dldmVyIGl0IG1pZ2h0IGJlIGRpZmZlcmVudCBzaW5jZSB5b3UgYSBndXkgYW5kIHlvdSBpZGVudGlmeSBtb3JlIHdpdGggeW91ciBLb3JlYW4gcm9vdHMgdGhhbiB5b3VyIEFtZXJpY2FuIGN1bHR1cmUuIApJZiB0aGV5IGZvciBzb21lIHJlYXNvbiBnZXQgdG9vIGxvbmcgb3IgdW5ydWx5LCB5b3UgbWF5IHRyeSBnZW50bHkgcHVzaGluZyBiYWNrIGEgbW9pc3RlbmVkIGN1dGljbGUgd2l0aCBhIHdhc2hjbG90aCAgIHRob3VnaCBzb21lIGV4cGVydHMgZG9uJ3QgYXBwcm92ZSBvZiBjdXRpY2xlIHB1c2hpbmcgYXQgYWxsIFtzb3VyY2U6IEpvaG5zb25dLiAKU2hlIHdhcyBib3JuIG9uIEF1Z3VzdCAyMSwgMTk3OS4gCkhvdyBkbyB5b3Uga25vdyB3aGF0IHBlb3BsZSBjYXJlIGFib3V0PyBNYXliZSB0aGV5IGRvIGNhcmUgYWJvdXQgd2hhdCB3ZW50IGluIHRvIG1ha2luZyB0aGUgcHJvZHVjdC4gVGhlcmUncyBhbHdheXMgdGhvc2UgYmVoaW5kIHRoZSBzY2VuZXMgcHJvZHVjdGlvbnMsIHNvIEkgaGF2ZSB0byBpbWFnaW5lIGEgZ29vZCBhbW91bnQgb2YgcGVvcGxlIGRvIGNhcmUgYWJvdXQgd2hhdCBnb2VzIGludG8gaXQuIFlvdSBjbGVhcmx5IGRpZG4ndCByZWFkIG15IGNvbW1lbnQgd2VsbCBlbm91Z2ggICBJIGV4cGxhaW5lZCB0aGV5IGRpZG4ndCByZWFsbHkgY2FyZSBhbGwgdGhhdCBtdWNoLCBidXQgdGhleSB3ZXJlIHN1cnByaXNlZC4KTWFza2VkYmFuZGl0b2Z0cnV0aCAgMTA5IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhlIGJvb3N0IGV4dGVuZHMgYmV5b25kIGp1c3QgdGhlIFhQIGFuZCBnb2xkIGluY3JlYXNlcy4gCkEgMzYwIGRlZ3JlZSBiYXJpcyB0aGUgcm9vbSdzIGNlbnRyYWwgZm9jdXMsIHdoaWxlIGFkZGl0aW9uYWwgdGFibGVzIG5leHQgdG8gdGhlIGJyZXdob3VzZSBsZXQgZ3Vlc3RzIHBlZWsgaW4gb24gdGhlIDEwIGJhcnJlbCBicmV3aW5nIHN5c3RlbS4gCkkgYWxyZWFkeSByZWFkIGEgbG90IG9mIG5hdHVyZSB3cml0aW5nIHdoaWNoIHRlbmRzIHRvIHRvdWNoIHVwb24gZW52aXJvbm1lbnRhbCBpc3N1ZXMsIGFsdGhvdWdoIGl0IHRlbmRzIG5vdCB0byBiZSB0aGUgZm9jdXMuIEkgYWxzbyB3YXRjaGVkIGEgbnVtYmVyIG9mIGl0ZW1zIG9uIE5ldGZsaXggKEJlZm9yZSB0aGUgRmxvb2QsIEJsYWNrZmlzaCwgQ293c3BpcmFjeSBldGMpIHdoaWNoIGhhcyBoaWdodGVuZWQgbXkgYXdhcmVuZXNzIG9mIHNvbWUgb2YgdGhlIGlzc3VlcyBvdXQgdGhlcmUgYXQgdGhlIG1vbWVudC4gCkV2ZW4gaGVyZSBvbiBSZWRkaXQsIEkgbWFkZSBhIHJlY2VudCBwb3N0IHRoYXQgaGFkIG15IGZhY2UgaW4gaXQsIGFuZCBnb3Qgb2ZmZXJzIGZvciBtb25leSBmb3Igc2V4LCBwaWN0dXJlcywgdmlkZW9zLCBldGMuIEl0cyBub3QgbXkgdGhpbmcgYnV0IGluIGEgd29ybGQgd2hlcmUgbW9zdCB5b3VuZyBwZW9wbGUgaGF2ZSB0b25zIG9mIHN0dWRlbnQgZGVidCByaXNpbmcgbGl2aW5nIGNvc3RzLCBJIGNhbiBzZWUgd2h5IHBlb3BsZSB3b3VsZCBkbyBpdCB5b3Uga25vdz8uIApBdXRyZW1lbnQgZGl0IGwgZXN0IGwgZGUgbGllbiBjYXVzYWwgZW50cmUgZGV1eCB2bmVtZW50cyBjb3JybHMuIFBhdWxpIGEgYWluc2kgZXUgdW5lIHBhcnRpY2lwYXRpb24gZGNpc2l2ZSBwb3VyIGxhIHBycGFyYXRpb24gZmluYWxlIGRlIGxhIHRob3JpZSBkZSBsIGNvbGxlY3RpZiBkZSBKdW5nIChUaG9yaWUgZGUgbCBNdW5kdXMpIGRhbnMgbGFxdWVsbGUgaWwgaW50cm9kdWl0IGxhIG5vdGlvbiBkIGNvbW1lIHByb3ZlbmFudCBkZSBsYSB0ZW5kYW5jZSBodW1haW5lICB1dGlsaXNlciB1bmUgbW1lICBmb3JtZSBkZSByZXByc2VudGF0aW9uIHBzeWNoaXF1ZSBkb25uZSBhIHByaW9yaSAuIAo0MCBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnby4gCk15IGNvbGxlYWd1ZXMgd2hvIHdvcmtlZCBpbiBoZWFsdGhjYXJlIGZvciBmYXIgbG9uZ2VyIHRoYW4gbWUgY2FuIHRlbGwgc2ltaWxhciBzdG9yaWVzOyBwZW9wbGUgd2hvIGp1c3QuIEdpdmUgdXAuLiAKQW1heWEgR2FtaW5nIEdyb3VwIEluYy4gKFRTRTpBWUEpLCBhIG1ha2VyIG9mIGdhbWJsaW5nIGVxdWlwbWVudCBhbmQgc3lzdGVtcywgd2lsbCBidXkgcHJpdmF0ZWx5IGhlbGQgT2xkZm9yZCBHcm91cCBMdGQuLCB0aGUgcGFyZW50IGNvbXBhbnkgb2YgUmF0aW9uYWwgR3JvdXAgTHRkLiwgdGhlIG93bmVyIG9mIFBva2VyU3RhcnMgYW5kIEZ1bGwgVGlsdCBQb2tlciBicmFuZHMsIGZvciAkNC45IGJpbGxpb24gaW4gYW4gYWxsIGNhc2ggZGVhbC4KQXQgbGVhc3Qgb25jZSB3ZSBwZWFrZWQgaXQgd2FzICJhbGwgZG93bmhpbGwiIHRvIHRoZSBmaW5pc2ggICByZW1lbWJlciBub3RoaW5nIGlzIGFsbCBkb3duaGlsbC4gCkZhY2Vib29rLCBnb29nbGUgYW5kIGFtYXpvbiBhcmUgYWx3YXlzIGJhZCBmb3IgcHJpdmFjeSBpbiBzb21lIHdheSBvciBhbm90aGVyLgpTZWN1cml0eSBmb290YWdlIHBvc3RlZCBvbiB0aGUgdGFibG9pZCBuZXdzIHdlYnNpdGUgVE1aIHNob3dzIHRoZSBDYW5hZGlhbiBjb21lZGlhbiBoZWxwaW5nIGFwcHJlaGVuZCBhIG1hbiB3aG8gd2FzIGFsbGVnZWRseSBhdHRlbXB0aW5nIHRvIGZsZWUgdGhlIE5ZQyBEaWFtb25kIERpc3RyaWN0IHN0b3JlIHdpdGggYW4gaXRlbS4KR2V0cyByaWQgb2YgYWxsIHRoZSBoYXJzaCBsaXBpZHMgYW5kIGNobG9yb3BoeWxsLCBzZXBhcmF0ZXMgdGhlIHRlcnBlbmVzIChmbGF2b3IgYW5kIGFyb21hKSwgYW5kIGNhbiBiZSBwdXQgaW4gYSB2YXBlIHBlbiBsaWtlIHJlZ3VsYXIgb2lsLiBJdCBjcmF6eSBhd2Vzb21lLiBUaGV5IGhhdmUgc29tZSBiYW5nIHVwIHN0dWZmIGluIENvbG9yYWRvIGZyb20gSGVhZCBvZiBIb25leSEuIApJbiBsaWJyYXJ5LCBSZWFkZXJzLCBGcmVuY2ggbGFuZ3VhZ2UsIEFjY2Vzc2libGUgYm9vaywgVHJhbnNsYXRpb25zIC4gCkZvciB0aGUgZ29vZCByZWFzb24gb2Ygc2VjdXJpdHksIHlvdW5nIEJodXR0byBaYXJkYXJpIChJJ2xsIHByZXRlbmQgdGhlIGh5cGhlbiBpcyB0aGVyZSkgaGFzIHNwZW50IG11Y2ggb2YgaGlzIGxpZmUgb3V0c2lkZSB0aGUgZGFuZ2Vyb3VzIGNvbmZpbmVzIG9mIFBha2lzdGFuLiBBZnRlciBoZSBzcG9rZSB0aGUgb3RoZXIgZGF5LCBJIHRvb2sgaGltIGFzaWRlIG91dHNpZGUgdGhlIG1lZXRpbmcgcm9vbSBhbmQgcHJlc3VtYWJseSBhd2F5IGZyb20gYmVpbmcgb2ZmIHRoZSByZWNvcmQgYW5kIGFza2VkLCAiRG8geW91IHRoaW5rIHlvdSBjYW4gc3Vydml2ZSBpbiBQYWtpc3Rhbj8iCkhhdmUgdGhleSBldmVyIGRvbmUgYW55dGhpbmcgZm9yIHRoaXMgZ3JvdXA/IEhhdmUgdGhleSBkb25hdGVkIHRpbWUgb3IgbW9uZXkgdG8gaXQ/IEhhdmUgdGhleSBsaXZlZCBhY2NvcmRpbmcgdG8gdGhpcyBncm91cCBydWxlcyB0byBzaG93IHRoYXQgdGhleSBoYXZlIGxveWFsdHkgdG8gdGhlIGdyb3VwPyBEbyB0aGV5IGhhdmUgYW55IHRpZXMgd2hhdHNvZXZlciB0byBpdD8uIApXaXRoIHRoYXQgYmVpbmcgc2FpZCwgeW91IHNob3VsZCBiZSBhd2FyZSB0aGF0IHRoZXJlIGlzIHBvc3NpYmx5IG1vcmUgc2F2aW5ncyB3aXRoIHlvdXIgaW5zdXJhbmNlIGNhcmQuIEZvciBleGFtcGxlLCBpZiBhIHBlcnNvbiB3aXRob3V0IGluc3VyYW5jZSBnZXRzIGEgcHJlc2NyaXB0aW9uIGFuZCBkb2VzbiB1c2UgdGhlIGdvb2QgcnggY2FyZCBvciB0aGUgaW5zdXJhbmNlIGNhcmQsIHRoZSBjb3N0IGlzICQyMDAuIAogNTMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29JbmZpbml0eSBpbiBhbiBlcXVhdGlvbiBkb2VzbiByZWFsbHkgbWFrZSBzZW5zZSBhcyBpdCBub3QgcmVhbGx5IGEgbnVtYmVyLiBJbmZpbml0eSBpcyBtb3JlIG9mIGEgY29uY2VwdCwgYW5kIHlvdSBjYW4gc2F5IHRoYXQgc29tZXRoaW5nIGFwcHJvYWNoZXMgaW5maW5pdHksIG1lYW5pbmcgdGhhdCB0aGUgbnVtYmVyIGp1c3QgZ2V0cyBiaWdnZXIgYW5kIGJpZ2dlci4gSW5maW5pdGllcyBjYW4gYXBwZWFyIGluIGNvbXB1dGF0aW9ucyBpbiBsaW1pdHMsIGJ1dCB3ZSBub3QgYWN0dWFsbHkgc3VtbWluZyBpbmZpbml0eSB3aXRoIGFueXRoaW5nIGJ1dCByYXRoZXIgc3RhdGluZyB0aGF0IHNvbWV0aGluZywgYWdhaW4sIGFwcHJvYWNoZXMgaW5maW5pdHkuIApBbmQgdGhlIHdheSBpdCdzIGFjdGluZyByZW1pbmRzIG1lIG9mIG5vdGhpbmcgc28gbXVjaCBhcyBhIGNsYXNzaWMgV2FsbCBTdHJlZXQgYmVhciByYWlkLCBkZXNpZ25lZCB0byBkcml2ZSBkb3duIHRoZSBwcmljZSBvZiBzb21ldGhpbmcgeW91IHdhbnQgdG8gYmUgYWJsZSB0byBwaWNrIHVwIHZlcnksIHZlcnkgY2hlYXAuIFdoYXQncyBtb3JlLCBpdCBtaWdodCBldmVuIHdvcmsuLiAKQW1hemluZyBpbWFnZXMgb2YgbGlnaHQgYW5kIGxhbmRzY2FwZQpUaGUgU2Ftc29uIElJLCBQZWxpY2FuIGFuZCBNYXJ0bGUgc3Rvb2QgYnMgdG8gcmVuZGVyIGFpZCB0byB0aGUgQ2l0eSBvZiBWaWMgdG9yaWEgaW4gY2FzZSBvZiBuZWVkLiAKSWYgbmVjZXNzYXJ5LCBhIHJlcG9ydCB3aWxsIGJlIG1hZGUgdG8gdGhlIHNpdGUgYWRtaW5pc3RyYXRpb24uIEluIGFjY29yZGFuY2Ugd2l0aCBSZWRkaXQgcG9saWNpZXMsIHRoZXJlIGlzIHplcm8gdG9sZXJhbmNlIGZvciB0aGlzLi4gCk5ldXJvcHN5Y2hvbG9naWEuIFRoZSBwaHlzaW9sb2dpY2FsIGJhc2lzIG9mIHRoZSBjbGFpbXMgZm9yIHREQ1MgcmVzdHMgb24gdGhlIGZpbmRpbmcgdGhhdCAxIG1BIG9mIHVuaWxhdGVyYWwgYW5vZGFsIHN0aW11bGF0aW9uIGluY3JlYXNlcyBjb3J0aWNhbCBleGNpdGF0aW9uIGFuZCAxIG1BIG9mIGNhdGhvZGFsIHByb2R1Y2VzIGluaGliaXRpb24uIEhlcmUgd2Ugc2hvdyB0aGF0IHRoZXNlIGNsYXNzaWMgZXhjaXRhdG9yeSBhbmQgaW5oaWJpdG9yeSBlZmZlY3RzIGRvIG5vdCBob2xkIGZvciB0aGUgYmlsYXRlcmFsIHN0aW11bGF0aW9uIG9yIDIgbUEgaW50ZW5zaXR5IGNvbmRpdGlvbnMgZmF2b3VyZWQgaW4gY29nbml0aXZlIGVuaGFuY2VtZW50IGV4cGVyaW1lbnRzLiAKQnV0IHdoYXQgcmVtYWluZWQgaGlkZGVuIHdhcyBhIHJlcG9ydCBzZW50IHRvIHRoZSBPbWJ1ZHNtYW4gYWZ0ZXIgYSBtYW5kYXRvcnkgQ2h1cmNoIGludmVzdGlnYXRpb24gb2YgY2hpbGQgc2V4IGFsbGVnYXRpb25zIGFnYWluc3QgRmF0aGVyIEJyb2NrLiBBIHN1bW1hcnkgc2VudCB0byBKb2huIFBhcm1ldGVyIGFuZCBoaXMgdHdpbiBicm90aGVyIFBhdWwgc2hvd3MgdGhlIHByaWVzdCB3YXMgY2VsZWJyYXRlZCBieSB0aGUgQ2h1cmNoIGluIHB1YmxpYywgZGVzcGl0ZSBpdHMga25vd2xlZGdlIG9mIHRoZSB1Z2x5IHRydXRoLiAKVGhlICdPbGQgUGFwYWdhaW8nIGJpcmQgb2YgQnJhemlsaWFuIGxlZ2VuZHMgaW5zcGlyZXMgdGhlIGNyZWF0aW9uIG9mIGEgbmV3IERpc25leSBjaGFyYWN0ZXI6IEpvcyBDYXJpb2NhLiAnSm9lJyBDYXJpb2NhIG1lZXRzIERvbmFsZCBEdWNrIGFuZCB0YWtlcyBoaW0gb24gYSB0b3VyIG9mIHRoZSB0b3duLiAKSXQgY2FuIGJlIGJlY2F1c2Ugb2YgZm9vZCwgb3Igc29tZW9uZSwgb3IgYSBwbGFjZSwgYW55dGhpbmcuIApJIGRpc2FncmVlLCBpZiBzb21lIGdpZnMgY2FtZSBvdXQgb2YgYmxhY2sgcGVvcGxlIGRvaW5nIHNvbWV0aGluZyBzaW1pbGFyLCB0aGVyZSBiZSBzb21lICJyL3NjcmlwdGVkYmxhY2tnaWZzIiwgZXRjLCBldmVuIGFzIGEgam9rZS4gClRoZSB1bmRlcnN0YW5kaW5nIGlzIHRoYXQgZWFybHkgc2lnbnMgYW5kIHN5bXB0b21zIG9mIGEgZGlzc2VjdGlvbiBjYW4gc2hvdyB1cCBhcyBuZWNrIHBhaW4gYW5kIGhlYWRhY2hlcyAgIHNvbWV0aGluZyB0aGF0IHBlb3BsZSBhcmUgbGlrZWx5IHRvIHNlZSBhIGNoaXJvcHJhY3RvciBmb3IgYW5kIHRoZXJlZm9yZSBpbmNyZWFzZXMgdGhlIGxpa2VsaWhvb2Qgb2YgYSB0ZW1wb3JhbCByZWxhdGlvbnNoaXAgYmV0d2VlbiB0aGUgdHdvLi4gCkEgcm91Z2ggZXF1aXZhbGVudCBpbiBFbmdsaXNoIHdvdWxkIGJlIGEgcmVxdWlyZW1lbnQgKGF0IGxlYXN0IGN1bHR1cmFsbHksIGFzIGZhciBhcyBJIGtub3cgbm90IGxlZ2FsbHkpLCB0byBtZW50aW9uIHNvbWV0aGluZyBsaWtlICJ0aGUgY2l0emVudHJlc3MiIGV0Yy4gSW4gRW5nbGlzaCwgbm91bnMgZG9uIGhhdmUgYSBncmFtbWF0aWNhbCBnZW5kZXIsIHNvIHRoZSB3b3JkIGNpdGl6ZW4gaXMgdXN1YWxseSBub3QgcGVyY2VpdmVkIGFzIG1hc2N1bGluLCB3aGlsZSBpdCBpcyBpbiBHZXJtYW55LiBIb3dldmVyIGFjdHVhbCBhbmQgZ3JhbW1hdGljYWwgZ2VuZGVyIGRvbiBoYXZlIHRvIGJlIHRoZSBzYW1lLCBsaWtlICJkYXMgTWRjaGVuIiAodGhlIGdpcmwpIGhhdmluZyBhIG5ldXRyYWwgZ3JhbW1hdGljYWwgZ2VuZGVyLCB3aGlsZSBiZWluZyBjbGVhcmx5IGZlbWFsZSBpbiByZWFsaXR5LgpCcm91Z2h0IGFsbCBvdXIgZ3Vlc3RzIG9uIEJ1c2VzIGZyb20gQnVzYW4uIEhpcmVkIHRoZSBiZXN0IChhdCB0aGUgdGltZSBhbmQgaW4gbXkgb3BpbmlvbikgYmFyIGJhbmQgaW4gQnVzYW4gYW5kIGJyb3VnaHQgdGhlbSBhcyB3ZWxsLiBCb3VnaHQgYWxsIHRoZSBhbGNvaG9sIGZyb20gYSBmcmllbmQgd2hvIG93bmVkIGEgYmFyIGluIEJ1c2FuIGFuZCBzaGlwcGVkIGl0IHVwIG9uIHRoZSBidXMuIApJbiB0aGUgZG9jdG9yIHN0b3J5IGhlIGFkZGVkIHRoZSBib25lciBwYXJ0LCB3aGljaCBpcyBvbmUgY2x1ZS4gCkluc3BlY3QgdGhlIHNsb3RzIGNsb3NlIHRvIHRoZSBjbGFpbXMgYm9vdGggYmVjYXVzZSBhIG51bWJlciBvZiB0aW1lcyB0aGUgYmVzdCBzbG90cyBhcmUgcGxhY2VkIGhlcmUgaW4gb3JkZXIgdG8gYXR0cmFjdCBtb3JlIHBlb3BsZS4gU2VhcmNoIGZvciBub24gcHJvZ3Jlc3NpdmUgc2xvdHMgYXBhcnQgZnJvbSB0aGUgcHJvZ3Jlc3NpdmUgb25lIGJlY2F1c2UgdGhlIHByb2dyZXNzaXZlIG9uZXMgYXJlIGF1dG9tYXRlZCBhbmQgY3JlYXRlIG1vcmUgcGF0dGVybnMgYW5kIHJlZWxzIHdoaWNoIGRlY3JlYXNlcyB0aGUgY2hhbmNlcyBvZiB3aW5uaW5nLiBCZXN0IHNsb3QgbWFjaGluZXMgY2FuIGFsc28gYmUgcGxhY2VkIG5lYXIgdGhlIGVhdGVyaWVzLgpNeSBncmFuZHBhIGFsc28gaGFkIGEgdmluZXlhcmQgYW5kIHRoYXQgaXMgd2hlcmUgd2Ugd2VudCB0byBwaWNrIGdyYXBlcyBhbmQgbWFrZSB0aGUgd2luZS4gTXkgdW5jbGVzIG1hc2hlZCB0aGUgZ3JhcGVzIGFuZCBncmFuZG1hIGFuZCBtb20gY29va2VkIHNhdXNhZ2Ugb3ZlciB0aGUgY2FtcGZpcmUgY2F0Y2hpbmcgdGhlIGRyaXBwaW5ncyB3aXRoIGEgc2xpY2Ugb2YgdGhpY2sgYnJlYWQgYW5kIHBhcmNlbGxpbmcgaXQgb3V0IHRvIHVzIGJlZm9yZSBkaW5uZXIuLiAKU25vd2RlbiByYXJlbHkgdmVudHVyZWQgb3V0LCBhbmQgb25seSBhdCBuaWdodCB3aGVyZSBoZSBjb3VsZCBlYXNpbHkgYmUgbG9zdCBhbW9uZyB0aGUgbWFueSBvdGhlciBhc3lsdW0gc2Vla2Vycy4uIApDcmFmdGluZyB1bmxvY2tzIGx1cmVzLCBwaWxscyB0aGF0IGJvb3N0IEFpZGVuIGZvY3VzLCBjb21tIGphbW1lcnMgYW5kIGEgcG93ZXIgc2h1dGRvd24gZGV2aWNlLiAKVGhpcyBzdG9yeSBtYWRlIG1lIGZlZWwgbGlrZSBJIHdhcyB0aGVyZSB3aXRoIFNoaXJsZXksIGFzIHNoZSBsZWZ0IGhlciBvbGQgbGlmZSBpbiBMb25kb24sIGFuZCB0aGVuIGhhZCB0byBzdGFydCBhIG5ldyBsaWZlIGluIHRoZSBjb3VudHJ5IHdpdGggbm8gZnJpZW5kcyBvciBmYW1pbHkuIEphY3F1ZWxpbmUgV2lsc29uJ3MgY2hhcmFjdGVyIGRldmVsb3BtZW50IGlzIHRob3JvdWdoIHNvIHRoZSByZWFkZXIgZmVlbHMgbGlrZSB0aGV5IGhhdmUgYSBwZXJzb25hbCBjb25uZWN0aW9uIHdpdGggdGhlIG1haW4gY2hhcmFjdGVyLiAKRWxsZXMgcmVsaWVudCBsZXMgbmVyZ2llcyB0ZWxsdXJpcXVlcyBldCBjb3NtaXF1ZXMsIGRpc3NvbHZlbnQgbGVzIGJsb2NhZ2VzIGV0IGxhIHJpZ2lkaXQsIGFwYWlzZW50LCBkdGVuZGVudCBldCBxdWlsaWJyZW50IGxlIHN5c3RtZSBuZXJ2ZXV4LiBFbGxlcyBzb250IGQgYm9uIHNvdXRpZW4gcG91ciBjZXV4IHF1aSBtZGl0ZW50ICAoTHlkaWEgQm9zc29uLCBMIG5lcmd0aXF1ZSwgcC4gClBva2VyIGhhcyBiZWNvbWUgZmFtb3VzIG9ubHkgaW4gdGhlIHJlY2VudCBmZXcgeWVhcnMgYW5kIGFueW9uZSBqdXN0IGNhbid0IHRoaW5rIGFib3V0IGEgcmFuZG9tIGJyYW5kIGZvciBuYW1pbmcgaGlzIGZhbWUgaW4gdGhlIHdvcmxkIG9mIHBva2VyLiBIZSBoYXMgYWxzbyB0aGUgd2F5IG9mIG1ha2luZyBoaXMgcHJvZHVjdHMgZmFtb3VzIGJ5IGhpcyBhdHRpdHVkZSBhbmQgcGxheWluZyBzdHlsZS4gU28gdGhlIHBva2VyIGxlYWRlcnMgYXJvdW5kIGFyZSBsb29raW5nIGZvciBwcm9kdWN0cyBsaWtlIEltIGEgTHVja1NhY2sgTWVkYWxsaW9uIFBva2VyIENhcmQgUHJvdGVjdG9yLiAKQSBsb3Qgb2YgdGhlIGRlYmF0ZSBpcyBub3QgdXAgdG8gWml6ZWsgaW50ZW50IGJ1dCB0byB0aGUgZGlhbG9naWMgZm9ybSBhbmQgZm9ybWF0IG9mIGRlYmF0ZXMgYXMgc3VjaCwgYW5kIHRoZSBpbnN0aW5jdHVhbCBuZWVkIHRvIGtlZXAgdGhlIHJvb20gKHByb2JhYmx5IG1hZGUgdXAgb2YgbG91ZCBQZXRleSBmYW5zKSBvbiB5b3VyIHNpZGUuIApPbmUgb2YgdGhlbSBpcyByZWQgYmFja2VkIHdoZXJlYXMgdGhlIG90aGVyIGRlY2sgaXMgYmx1ZSBiYWNrZWQuIFRoZXNlIHR3byBjYXJkIHNldHMgYXJlIHNlYWxlZCBpbnNpZGUgcGxhc3RpYyBib3guIFRoZSBwbGF5aW5nIGNhcmRzIGFyZSBzbW9vdGggYW5kIGVhc3kgdG8gdXNlLiAKSWYgeW91J3JlIGx1Y2t5IGVub3VnaCB0byBiZSBhbiBhbWF6aW5nIHBva2VyIHBsYXllciB3aG8gcmVzaWRlcyBvdXQgb2YgdGhlIFVTQSwgeW91IGNhbiBwbGF5IG9ubGluZSBwb2tlciB0byBwYWQgeW91ciBiYW5rcm9sbC4gClRoZXJlIGFyZSBhbHNvIGRlZXBlciBhdmVudWVzIG9mIGJlbmVmaXQgdGhhdCBhcmUgdW5pcXVlIHRvIHRoaXMgcGFydG5lcnNoaXAgcHJhY3RpY2U6MS4gCkluIGNvbGxlZ2UsIHlvdSBoYXZlIHRvIGJhY2sgZXZlcnl0aGluZyB1cCB3aXRoIGV2aWRlbmNlLiBUaGlzIGlzIHdoZXJlIHlvdSdsbCBsZWFybiB0aGUgdHJ1dGguLiAKSSB3b3VsZCBhYnNvbHV0ZWx5IGxvdmUgdG8gbWFrZSB0aGlzIGNoYW5nZSB3aGVuIHdlIGNhbiwgYXMgaXQgbGltaXRzIGltcHJvdmluZyBib3RoIG9sZCBza2lsbHMgYXMgd2VsbCBhcyB0aGUgZGVzaWduIG9mIHByb2plY3RpbGUgc2tpbGxzIGluIHRoZSBmdXR1cmUsIGJ1dCBpdCB3aWxsIGNvbWUgYXQgdGhlIGNvc3Qgb2YgaW1wcm92ZW1lbnRzIGFuZCBjb250ZW50IHdlIGNvdWxkIGJlIG1ha2luZyBpbiB0aGF0IHRpbWUuIEJlY2F1c2Ugb2YgdGhpcywgdGhlcmUgaXMgbm8gd2F5IHdlIGNhbiBtYWtlIGFueSBwcm9taXNlcyBvbiBhbnkgc29ydCBvZiB0aW1lZnJhbWUuRG9nZW1lYXRsaXZlcyAgMSBwb2ludCAgc3VibWl0dGVkIDMgZGF5cyBhZ29URjIgZ3VucGxheSBpcyBzdXByZW1lbHkgdGlnaHQuIApUaGUgUHJlbWl1bSBtZW1iZXJzaGlwIGdpdmVzIG1lIENvaW5zLCB3aGF0IGFyZSB0aG9zZSBmb3I/Q29pbnMgYXJlIGEgdmlydHVhbCBnb29kLCBhbmQgeW91IGNhbiB1c2UgdGhlbSB0byBhd2FyZCBleGNlcHRpb25hbCBwb3N0cyBvciBjb21tZW50cyB3aXRoIGEgU2lsdmVyLCBHb2xkLCBvciBQbGF0aW51bSBBd2FyZC4gVGhpcyBpcyBhIHdheSB0byBzaG93IGFwcHJlY2lhdGlvbiBmb3IgYW4gZXhjZXB0aW9uYWwgY29udHJpYnV0aW9uIHRvIFJlZGRpdCwgYW5kIGNhbiBhbHNvIGdyYW50IHRoZSByZWNpcGllbnQgc3BlY2lhbCBib251cyBiZW5lZml0cy4gWW91IGNhbiBhd2FyZCBzb21lb25lIGJ5IGNsaWNraW5nIG9uICJHaXZlIEF3YXJkIiBiZWxvdyBhIHBvc3Qgb3IgY29tbWVudC4uIApCZSBhcyBjZXJ0YWluIGFzIHlvdSBjYW4gYmUsIGFzIGVkdWNhdGVkIGFzIHlvdSBjYW4gYmUsIG9uIGNhbmRpZGF0ZXMgeW91IGNvbnNpZGVyaW5nLiAKU28gYmFzaWNhbGx5IGFuIGF0IHJpc2sgZGVtb2dyYXBoaWMgaW4gYSBjb3VudHJ5IHRoYXQgYWxyZWFkeSBoYXMgaGlnaCByYXRlcyBvZiB0b2JhY2NvIGNvbnN1bXB0aW9uIHVuc3VycHJpc2luZ2x5IGhhcyBhbiBlcGlkZW1pYyBvZiB0b2JhY2NvIGFkZGljdGlvbi4gc21va2UgZnJlZSBhdHRpdHVkZXMgYXJlIHNsb3dseSBiZWNvbWluZyBtb3JlIHBvcHVsYXIgaW4gbWFpbnN0cmVhbSBzb2NpZXR5IGJ1dCBsZ2J0cSBzb2NpZXR5IGlzIGZydXN0cmF0aW5nbHkgbGFnZ2luZyBiZWhpbmQgYW5kIHRoZXkgYWxsIHNlZW0gcHJldHR5IHJlc2lnbmVkIHRvIHRoZSBmYWN0LgpSZWRuZXNzLCBzd2VsbGluZywgYW5kIGZldmVyIGFyZSBhbGwgcGh5c2ljYWwgc3ltcHRvbXMgb2YgdGhlIGFjdXRlIGluZmxhbW1hdG9yeSByZXNwb25zZSB0aGF0IGNvbWVzIHdoZW4gdGhlIGJvZHkgcmV2cyB1cCB0aGUgaW1tdW5lIHN5c3RlbS4gSW4gYSBoZWFsdGh5IGJvZHksIHRoZXkgd2lsbCBiZSBxdWlja2x5IHJlc29sdmVkLiBXaXRoIHBvb3IgZGlldCwgaGlnaCBsZXZlbHMgb2YgdG94aWNpdHkgb3IgaGVhdnkgbWV0YWxzLCBsYWNrIG9mIHBoeXNpY2FsIGFjdGl2aXR5LCBvciBwZXJzaXN0ZW50IGhpZ2ggc3RyZXNzLCBhY3V0ZSBpbmZsYW1tYXRpb24gd2lsbCBiZWNvbWUgY2hyb25pYy4gClBlcmNhbGUgc2hlZXRzLiBTZXJpb3VzbHkuIEkgaGFkIG5ldmVyIGhlYXJkIG9mIHRoZW0sIGFuZCB0aGV5IGFyZSBkZWZpbml0ZWx5IGV4cGVuc2l2ZSwgYnV0IHRoZXkgYXJlIHRoZSBjb2xkZXN0IHNoZWV0cyBJIGV2ZXIgc2xlcHQgb24uIApUaGVyZSB1c2VkIHRvIGJlIGEgcm9sZXBsYXkgY29tbXVuaXR5IG9uIFR3aXR0ZXIgY2VudGVyZWQgZW50aXJlbHkgYXJvdW5kIHJvbGVwbGF5aW5nIGFzIHRoZSBib2R5IHBhcnRzIG9mIHRoZSBiYW5kIG1lbWJlcnMsIGV4Y2VwdC4gaW4gaHVtYW4gZm9ybS4/IFNvLCB5a25vdywgeW91IGdldCBHdXN0YXYgZXllcyBhbmQgQmlsbCBoYWlyIG1ha2luZyBvdXQgd2l0aCBlYWNoIG90aGVyLCB0aGVuIHlvdSBnZXQgSmFyZWQgTGV0byBuaXBwbGVzIG1ha2luZyBjb252ZXJzYXRpb24gd2l0aCBUb20gS2F1bGl0eiBkcmVhZHMuCkkgb2Z0ZW4gc2VlIHRvcCBwbGF5ZXJzIHNtb290aCBjYWxsIGEgcHJlIGZsb3AgcmFpc2Ugd2l0aCB0aGlzIGhhbmQuIApBIHB1bmdlbnQgbGluaW1lbnQgc3VjaCBhcyBDaGluZXNlIFRpZ2VyIEJhbG0sIGZvciBpbnN0YW5jZSwgZWFzZXMgYWNoZXMgYW5kIHBhaW5zLiAKQWZ0ZXIgdGhvc2UgZ28gaW4sIGJvaWwgd2F0ZXIgZm9yIGxlbnRpbHMsIEkgYWRkZWQgYSBib3VsbGlvbiBjdWJlIHRvIHRoZSB3YXRlciBhcyB3ZWxsIChjb3VsZCBhbHNvIGp1c3QgYWRkIHNhbHQpIGFuZCBtYWRlIG1vcmUgdGhhbiBJIG5lZWRlZCBzbyBJIGhhdmUgZXh0cmFzIGZvciBzYWxhZC4gRHJhaW4gb25jZSBhdCBhIHRleHR1cmUgeW91IGRpZy4gU2F2ZSBhYm91dCAxLzIgY3VwIG9yIG1vcmUgb2YgdGhlIGxlbnRpbCBicm90aC4gClNvbWUgdHJpYmFsIGVsZGVycyBmcm9tIEJhbG9jaGlzdGFuIGFsc28gYXR0ZW5kZWQgdGhlIG1lZXRpbmcgaW4gd2hpY2ggdGhlIGdpcmwncyBmYW1pbHkgd2FzIHRvbGQgdG8gZ2l2ZSBoZXIgYXMgcGVyIHRoZWlyIGN1c3RvbXMuIFRoaXMgdHJhZGluZywgd2hpY2ggaW4gbWFueSBjYXNlcyBpcyBkb25lIHVuZGVyIHRoZSBuYW1lIG9mIGxvYW4gc2V0dGxpbmcsIGlzIGNvbnRpbmdlbnQgdXBvbiB0aGUgcG93ZXIsIG1pZ2h0IGFuZCBtb25leSBvZiB0aGUgbGVuZGVycywgd2hvIHByb3ZpZGUgbG9hbnMgdG8gdGhlIG5lZWR5IGFuZCBsYXRlciBpbXBvc2UgaGVhdnkgaW50ZXJlc3QgaW4gb3JkZXIgdG8gZ2V0IGF3YXkgd2l0aCB0aGVpciBpbm5vY2VudCBtaW5vciBkYXVnaHRlcnMuIApJIHdhbGtlZCBhdCB0aGUgZWRnZSBvbiB0aGlzIGNhbXBpbmcgZ3JvdW5kIGxvb2tlZCBhcm91bmQuIE1pbGl0YXJ5IG1lbiBhcmUgYWJzb2x1dGVseSBhbGVydCBsaWtlIGFuIGVhZ2xlIHN3aWZ0IGxpa2UgZG9ncy4gCk15IGFkdmljZSB3b3VsZCBiZSBub3QgdG8gYm90aGVyIGZvcmNpbmcgaXQuIEJhc2VkIG9uIHlvdXIgZmxhaXIsIHlvdSBjbGVhcmx5IGFscmVhZHkgaGFkIGEgdG9uIG9mIHN1Y2Nlc3Mgd2l0aCB3ZWlnaHQgbG9zcywgc28geW91IGtub3cgaXQgY29uc3RhbnQgZXhwZXJpbWVudGF0aW9uLiBJZiB5b3Ugc3RpbGwgc3VwZXIgaHVuZ3J5IGFsbCB0aGUgdGltZSwgdGhlbiBJRiBpc24gZG9pbmcgbXVjaCBmb3IgeW91IGFuZCB3b24gYmUgc3VzdGFpbmFibGUgYW5kIHdvbiBoYXZlIG1hbnkgYmVuZWZpdHMuIApSZWFkIGV4aXN0aW5nIHJldmlld3MgdG8gbGVhcm4gdGhlIGxpbmdvIGFuZCB0byB1bmRlcnN0YW5kIHdoYXQgcmV2aWV3ZXJzIGZvY3VzIG9uLiAKSWYgeW91IGhhdmUgQW1lcmljYW4gY3JlZGl0IGNhcmRzLCB5b3Ugc3RpbGwgbmVlZCBzb21ldGhpbmcgdG8gbWFrZSB5b3VyIHBheW1lbnRzIG9uIHRob3NlLCBhbmQgaWYgeW91IGRvbiB5b3UgcHJvYmFibHkgc2hvdWxkIGFwcGx5IGZvciBzb21lIGFuZCBhdCBsZWFzdCBidWlsZCBhIGNyZWRpdCBoaXN0b3J5LiAKVGhlIGJpZ2dlc3QgdGhyZWF0IEkgc2VlIHRob3VnaCBpcyB0aGUgcHJvYmFiaWxpdHkgb2YgdGhlIGNhc2NhZGlhIHN1YmR1Y3Rpb24gem9uZSBjb2xsYXBzaW5nIGZpbmFsbHkgd2hpY2ggaGFzIGEgMS83MCBwcm9iYWJpbGl0eSBvZiBoYXBwZW5pbmcgaW4gdGhlIG5leHQgMTAwIHllYXJzLiBUaGF0IHdpbGwgd2lwZSBvdXQgbW9zdCBvZiBPcmVnb24gYW5kIENhbGlmb3JuaWEgY29hc3QuClJlcGVhdCB1bnRpbCB0aGUgbW9vc2Ugc3Bhd25zIGluIHRoZSBjbGVhcmluZy4gSWYgaXQgZG9lc24gd29yayBhZnRlciBhIGZldyBzcGlucywgdHJ5IGFkanVzdGluZyB5b3Vyc2VsZiBvciByaWRpbmcgb2ZmIGFuZCBjb21pbmcgYmFjay4gRG9udCBzaG9vdCB0aGUgbW9vc2UgZnJvbSB0aGUgY2xpZmYsIGJlY2F1c2UgaWYgeW91IGRvIGl0IHdpbGwgYmUgcm90dGVuIGJ5IHRoZSB0aW1lIHlvdSBnZXQgdG8gdGhlIGNhcmNhc3MuIAoiSXQgd2FzIGxpdGVyYWxseSBhZHJlbmFsaW5lIGl0IGtpY2tzIGluLiBJbiBhbGwgZmFpcm5lc3MsIGl0IGhhcHBlbmVkIHNvIHF1aWNrbHkgdGhhdCB5b3UgZG9uJ3QgcmVhbGx5IHRoaW5rIGFib3V0IGl0LiBZb3UganVzdCBkbyBpdC4iCjkgU3dlZXQgU2VjcmV0cyBvZiBMaXZlIFRvdXJuYW1lbnRzCkV0IG91aSwgY2hhcXVlIGluZGl2aWR1IHV0aWxpc2Ugc29uIG9yZGluYXRldXIgZCd1bmUgZmFvbiBwZXJzb25uZWxsZSAodml0ZXNzZSBkZSBmcmFwcGUuKS4gCkl0IHdhcyBNYWRoYXZlbmRyYSBQdXJpIHdobyBiZWdhbiB0aGUgYmhha3RpIG9mIFJhZGhhIEtyc25hLiBBbmQgaXQgd2FzIGZpbmFsbHkgTWFoYXByYWJodSB3aG8gZ2F2ZSB0aGUgdG9wbW9zdCB1bmRlcnN0YW5kaW5nIG9mIHJhc2EgYW5kIHRoZSBjb25zZXF1ZW50IHN1cHJlbWFjeSBvZiBLcnNuYSB0YXR0dmEgZnJvbSB0aGF0IHBvaW50IG9mIHZpZXcuSG93ZXZlciwgYmVjYXVzZSBNYWhhcHJhYmh1IHRvb2sgRGlrc2hhIEhpbXNlbGYgZnJvbSB0aGUgbGluZSBvZiBNYWRoYXZhY2hhcnlhICh0aHJvdWdoIElzaHdhcmEgUHVyaSksIHdlIEdhdWRpeWFzIHJlc3BlY3RmdWxseSBjb25zaWRlciBvdXJzZWx2ZXMgaW4gdGhlIGxpbmUgb2YgTWFkaGF2YWNoYXJ5YSByYXRoZXIgdGhlbiBkZWNsYXJpbmcgb3Vyc2VsdmVzIGFuIGluZGVwZW5kZW50IHBhcmFtcGFyYS5JbiBIaXMgbGlmZSwgU3JpbWFuIE1haGFwcmFiaHUgSGltc2VsZiBoYWQgbXVsdGlwbGUgaW50ZXJhY3Rpb25zIHdpdGggVGF0dHZhIHZhZGkgYW5kIGR1cmluZyB0aG9zZSBpbnRlcmFjdGlvbnMgSGUgZGlkIG5vdCBjb25zaWRlciBIaW1zZWxmIGFzIGJlaW5nIGluIHRoZSBzYW1lIHBhcmFtcGFyYSBhcyB0aGUgdGF0dHZhdmFkaXMuIApMb25nIGJlZm9yZSBvbmxpbmUgcG9rZXIgd2FzIHRoZSAiaW4iIHRoaW5nLCBwZW9wbGUgd2hvIGxvdmUgcG9rZXIgd291bGQgaGF2ZSB0byBmbHkgdG8gTGFzIFZlZ2FzLCBjaGVjayBpbnRvIGEgaG90ZWwsIHBheSBmb3IgbWVhbHMgYW5kIGRyZXNzIHVwIGp1c3QgdG8gcGxheSBwb2tlciBpbiBvbmUgb2YgdGhlIGNhc2lub3MgYXZhaWxhYmxlLiBOb3Qgb25seSB0aGF0LCBidXQgdGhleSBoYXZlIHRvIHBsYXkgd2l0aCB0aGVpciByZWFsIG1vbmV5LiAKQmFrZSBmb3IgNiBtaW51dGVzIGF0IDM1MEYuIFNwcmlua2xlIHRoZSBjaG9jb2xhdGUgY2hpcHMgYW5kIG51dHMgb24gdG9wIG9mIHRoZSBiYWtlZCBtaXh0dXJlLiAKQ2xhaW0gdGhlIGxlZ2FsIGxpbWl0IG9mIGRhbWFnZSBvbiBhbG1vc3QgZXZlcnkgc2hpcG1lbnQgZnJvbSB2ZW5kb3JzIGVzc2VudGlhbGx5IHRha2luZyBhIDEwJSBkaXNjb3VudCBlYWNoIHRpbWUuIApZb3Ugd2lsbCBzZWUgdGhlc2UgdHlwZXMgb2YgcGVvcGxlIGF0IHRoZSBwb2tlciB0YWJsZS4gCkJ1dCBub3cgSSBjYW4gZ28gdG8gc2xlZXAgd2l0aG91dCB0YWtpbmcgYSBzaG93ZXIgZmlyc3QuIEV2ZW4gaWYgSSB3b3JrIG91dCBpbiB0aGUgbW9ybmluZywgSSB0YWtlIGEgc2hvd2VyIGluIHRoZSBtb3JuaW5nIGFuZCBJIHN0aWxsIGhhdmUgdG8gdGFrZSBhbm90aGVyIGJlZm9yZSBJIGdvIHRvIGJlZC4KQWxzbyBpbmNsdWRlIGluIHRoZSBwcm9wb3NlZCBydWxlIGEgcmVxdWlyZW1lbnQgdGhhdCBubyBhbGllbiBtYXkgd2lyZSBtb25leSBvdXRzaWRlIG9mIHRoZSBVbml0ZWQgU3RhdGVzIHVubGVzcyB0aGUgYWxpZW4gZmlyc3QgcHJvdmlkZXMgYSBkb2N1bWVudCBlc3RhYmxpc2hpbmcgaGlzIGxhd2Z1bCBwcmVzZW5jZSBpbiB0aGUgVW5pdGVkIFN0YXRlcy4uIApJJ3ZlIGhhZCBib3RoIGNoZWNrZWQgYW5kIGNhcnJ5b24gbHVnZ2FnZSBzZWxlY3RlZCBmb3IgdGhvcm91Z2ggcmFuZG9tIHNlYXJjaGVzOyB3aXRoIG15IGNhcnJ5b24sIHRoZXkgYWN0dWFsbHkgc2FtcGxlZCBldmVyeSBzaW5nbGUgb25lIG9mIHRoZSBjcmVhbXMgYW5kIGxpcXVpZHMgKHRoYXdpbmcgYnJlYXN0bWlsaywgaW5mYW50IFR5bGVub2wsIG1vaXN0dXJpemVyLCBjbGVhbnNpbmcgYmFsbSAgIGV2ZXJ5dGhpbmcpIGFuZCByYW4gdGhlbSB0aHJvdWdoIGEgbGl0dGxlIGNoZW1pY2FsIHRlc3Qga2l0IHJpZ2h0IGF0IHRoZSBzZWN1cml0eSBjaGVja3BvaW50LiAKTGVhdmluZyB0aGUgcGhvbmUgbG9ja2VkLCBubyBhcHBzIChsaWtlIEdtYWlsKSBzeW5jaW5nLiBBbmQgaXQgbm90IGxpa2UgdGhlcmUgd2FzIGEgdG9uIG9mIG5ldHdvcmsgYWN0aXZpdHkgZWl0aGVyLiAKTXkgaGVhcnQgc3RvcHBlZCA6TyAuLiAKRXZlbiBhIGNoYW5nZSBpbiB0YXggbGF3cyBpbiAyMDE0IHRoYXQgc2F3IGEgbnVtYmVyIG9mIG9wZXJhdG9ycyBjbG9zZSB0aGVpciBkb29ycyB0byBVSyBjdXN0b21lcnMgY291bGQgbm90IHN0dW50IHRoaXMgZ3Jvd3RoLiAKSGlzIG1lbiBjYW4gcGxheSB0aGUgIkkgd2FzIGZvbGxvd2luZyBvcmRlcnMiIGNhcmQgYWxsIHRoZXkgd2FudCwgYnV0IHNvbGRpZXIgRE8gaGF2ZSB0aGUgcmlnaHQgdG8gZGlzb2JleSBvcmRlcnMgdGhleSBmaW5kIGltbW9yYWwuIApUaGUgd29tZW4ncyB0ZWFtIHJlY2VpdmVkIGEgYm9udXMgb2YgJDEuNzIgbWlsbGlvbiBhZnRlciB3aW5uaW5nIHRoZSAyMDE1IFdvcmxkIEN1cCBpbiBDYW5hZGEuIApEYWxsYXMgUmF5IFZhdnJhLCBmb3JtZXIgb3duZXIgb2YgdGhlIENsb3NlIEVuY291bnRlcnMgVW5saW1pdGVkIExlaXN1cmUgQ29lZCBIZWFsdGggQ2x1YiwgNjM5NyBBaXJwb3J0IFJvYWQsIGZpbGVkIHRoZSBhY3Rpb24gYWdhaW5zdCBoaXMgZm9ybWVyIGxhbmRsb3JkLCBBcnVuIE1hdGh1ciBvZiBFYXN0IEFsbGVuIFRvd25zaGlwLiBBbHNvIG5hbWVkIG9uIHRoZSBzdW1tb25zIGFyZSBMb3ZldHRlIEx1aXNpLCBhIGZvcm1lciBlbXBsb3llZSBvZiBDbG9zZSBFbmNvdW50ZXJzIGFuZCBhbiBlbXBsb3llZSBvZiB0aGUgVW5saW1pdGVkIExlaXN1cmUgSGVhbHRoIENsdWIsIHdoaWNoIG5vdyBvY2N1cGllcyB0aGUgZmFjaWxpdHksIGFuZCBXaWxsaWFtIEsuIEdyaWZvIHJ1bGVkIFdlZG5lc2RheS4gCkkndmUgaGFkIEhpY2tlbmxvb3BlciBhcyBhIGdvdmVybm9yIHRoZSBwYXN0IDggeWVhcnMsIGFuZCB0aGUgc3RhdGUgaGFzIGJvb21lZCBlY29ub21pY2FsbHkuIEhlIGhhcyBoZWxkIHNvbWUgaW5mdXJpYXRpbmcgdmlld3Mgb24gT2lsIGFuZCBHYXMsIGFuZCB3YXMgYWdhaW5zdCBsZWdhbCBtYXJpanVhbmEuIEhlIGlzIGF0IGxlYXN0IHZlcnkgdHJhbnNwYXJlbnQgd2l0aCBob3cgaGUgY29tZXMgdG8gaGlzIGRlY2lzaW9ucywgYW5kIGhlbGQgYSB3ZWVrbHkgaW50ZXJ2aWV3IHdpdGggb3VyIGxvY2FsIG5wciBzdGF0aW9uIG1vc3QgZXZlcnkgd2VlayB3aGVyZSBoZSBkaXNjdXNzZWQgZXZlcnl0aGluZyBoZSBkaWQgdGhhdCB3ZWVrLiAKV2h5IGRvIHNvIG1hbnkgcnVubmVycyBub3dhZGF5cyBvbmx5IHdhbnQgdG8gcnVuIGZvciBkaXN0YW5jZSBhbmQgbm90IGZvY3VzIHRoZWlyIGVmZm9ydHMgb24gZ2V0dGluZyBmYXN0ZXI/IEkgc2VlIHNvIG1hbnkgcG9zdHMgYWJvdXQgdGhlIG1hcmF0aG9uLCBpdCdzIGJhc2ljYWxseSB0aGUgYmUgYWxsIGVuZCBhbGwgZm9yIG1hbnkgcGVvcGxlLiBXaHkgZG9lc24ndCBhbnlvbmUgd2FudCB0byBwdXQgaW4gdGhlIHdvcmsgdG8gaW1wcm92ZSB0aGVpciBzaG9ydGVyIGRpc3RhbmNlIHRpbWVzPyBEb24ndCBnZXQgbWUgd3JvbmcsIEkgY29hY2ggYmVnaW5uZXJzIGFuZCBJIGVuY291cmFnZSB0aGVtIHRvIGRvIHdoYXQgbWFrZXMgdGhlbSBoYXBweS4gQnV0IGF0IGxlYXN0IGluIG15IHJlZ2lvbiwgcnVubmluZyBhbmQgcmFjZXMgdXNlZCB0byBiZSBjb21wZXRpdGl2ZS4gCk5hdGFsaSwgU3ByaW5nIEhpbGwsIEZMLCBJc2FiZWxsYSBFIEJhc3RpYW4sIE1hbmxpdXM7IHR3byBzaWJsaW5ncyxKYW1lcyBFLiAKIDcgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ29CZWNhdXNlIEkgYmVlbiBoZXJlIGJlZm9yZSBhbmQgSSBrbm93IHdoYXQgdGhlIGNvbW1lbnRzIHdpbGwgYmUgSSB3YW50IHRvIGFkZCBhIGJpdCBvZiB0aGUgIm5lZ2F0aXZlIiBzaWRlIG9mIHRoaXMgYW5ub3VuY2VtZW50Lk1hc29uIGNvbmZpcm1lZCB0b2RheSB0aGF0IHdpdGhpbiBhIHllYXIsIHRoZXJlIHdpbGwgbm90IGJlIHBob3RvIGVuZm9yY2VtZW50IG9uIHN0cmFpZ2h0IGFyZWFzIG9mIHRoZSBIZW5kYXkuIApJZiBhbiBvcHBvbmVudCBhY3RzIHdpdGhpbiBzZWNvbmRzIG9mIGhpcyB0dXJuIHRoZW4gaGUgbWF5IGJlIHVzaW5nIHRoZSBhdXRvIHBsYXkgZmVhdHVyZS4gT25saW5lIGNhc2lub3MgbWFrZSB1c2Ugb2YgY2hlY2sgYm94ZXMgc3VjaCBhcyAiZm9sZCwiICJyYWlzZSBhbnkiIG9yICJjYWxsIGFueS4iIFRoZSB0aGluZyB5b3Ugc2hvdWxkIGxvb2sgZm9yIGhlcmUgaXMgdGhlIGNvbW1hbmQgInJhaXNlIGFueSwiIHNpbmNlIGl0IGRlbm90ZXMgYSBzdHJvbmcgaGFuZCB3aGlsZSAiY2hlY2siIGRlbm90ZXMgYSB3ZWFrIGhhbmQsIGFuZCAiY2FsbCBhbnkiIG1lYW5zIHRoZSBvcHBvbmVudCBpcyB3YWl0aW5nIGZvciBhIG1pcmFjbGUgY2FyZC4KRnJhbmtmdXJ0IGlzdCByZWljaC4gQWxsZXJkaW5ncyBuaWNodCByZWljaCBhbiBndXRlbiBIb3RlbHMuIApUaGlzIGlzIGZpc2h5IGFzIGZ1Y2suIApGb3IgdmVnZXRhYmxlcywgYnJvY2NvbGkgaXMgYm90aCBmaWxsaW5nIGFuZCBoYXMgYSBkZWNlbnQgYW1vdW50IG9mIHByb3RlaW4uIFRoZXJlIGEgcmVhc29uIHdoeSBjaGlja2VuIGJyZWFzdCwgYnJvY2NvbGkgYW5kIHJpY2UgaXMgc3VjaCBhIGNsaWNoIGJvZHlidWlsZGVyIGZvb2QuIApPIE5ldyB0YWJsZSB5b3UndmUgYmVlbiBtb3ZlZCB0byBhbmQgYXZvaWRpbmcgbWlzdGFrZXMuCk5vdyBJIGp1c3QgaGF2ZSB0byBicmVhayBpdCB0byBteSB3aWZlIHRoYXQgSSBjaGFuZ2luZyBvdXIgcGFzc3dvcmQgc3lzdGVtIGJhY2sgdG8gS2VlcGFzcy4gU2hlIGdvbm5hIGtpbGwgbWUuCkFuIGFjb3VzdGljIGd1aXRhcmlzdCBwbGF5cyB0byBhIHNtYWxsIGNyb3dkLi4gCldoaWxlIHBva2VyIGlzIGluaGVyZW50bHkgZ2FtYmxpbmcgaW4gdGhhdCBpdCByaXNrcyByZXNvdXJjZXMgZm9yIGEgY2hhbmNlIG9mIGdhaW5pbmcgbW9yZSwgdGhlIHBsYXllciBpc24gbmVjZXNzYXJ5IGF0IGEgZGlzYWR2YW50YWdlIGFuZCBhIHNraWxsZWQgcGxheWVyIGNhbiBleHBlY3QgdG8gY29tZSBvdXQgYWhlYWQuIApUaGUgc3Rha2VzIGZlbHQgaGlnaGVyLiAKSW4gZ2VuZXJhbCwgYmUgY2FyZWZ1bCByZWdhcmRpbmcgYW55IHBoZW5vbWVuYSBhc3NvY2lhdGVkIHdpdGggdGhlIG5vcnRoLiBZb3UgY2FuIG5ldXRyYWxpemUgdGhlIHNhbiBzaGEgYnkgcGxhY2luZyAzIGJhbWJvbyBwbGFudHMgb3IgcmVwcmVzZW50YXRpb25zIG9mIGJhbWJvbyBwbGFudHMgKHBhaW50aW5ncyBvciBzdGF0dWVzKSBpbiB0aGUgbm9ydGhlcm4gcGFydCBvZiB5b3VyIGhvbWUsIGFuZCwgaWYgeW91ciBkb29yIGZhY2VzIG5vcnRoLCBwbGFjaW5nIGEgYmFndWEgbWlycm9yIG9uIG9yIGFib3ZlIGl0LiIgRVhDRVJQVCBGUk9NIFBPU1QgQlkgS0VOTkVUSCBDT0hFTiwuIApBUEUgQ0FOQVZFUkFMLCBGbGEuIGJhY2sgaW4gdGhlIGJ1c2luZXNzIG9mIGxhdW5jaGluZyBhc3Ryb25hdXRzLgpJIHRhbGtlZCB0byBoaW0gYWJvdXQgaXQgYW5kIHRyaWVkIHRvIGV4cHJlc3Mgd2h5IGl0IHVwc2V0IG1lLCBidXQgSSB3YXNuIG1ha2luZyBhIGxvdCBvZiBzZW5zZS4gSSBhc2tlZCBoaW0gd2h5IGhlIGNhcmVkIGFuZCB3aGF0IGhlIHRob3VnaHQgd291bGQgaGFwcGVuIGlmIGhlIGp1c3QgZ290IGhpcyBjb2ZmZWUgZnJvbSBoZXIgYW5kIHRyZWF0ZWQgaGVyIGxpa2UgYW55IG90aGVyIGJhcmlzdGEuIEhlIGJlZ2FuIGhpcyByZXBseSB3aXRoICJzaGUgaXMganVzdCBzbyBhdHRyYWN0aXZlLiIgYnV0IHRoZW4gSSBjdXQgaGltIG9mZiBiZWNhdXNlIHRoYXQgaW5zdWx0ZWQgbWUgbW9yZS4KU2hlIG5lZWRzIHRvIHRhbGsgdG8geW91LiBZb3UncmUgaW4gYSByZWxhdGlvbnNoaXAgdG9nZXRoZXIuIApIZXksIHdoZXJlIGFyZSB5b3VyIHNob2VzIGFuZCBzb2Nrcy4gCldvbWVuIGhhdmUgYmVlbiB0cnlpbmcgZm9yIGh1bmRyZWRzIG9mIHllYXJzIHRvIGhhdmUgbW9yZSBmcmVlZG9tIG92ZXIgdGhlaXIgbGl2ZXMuIApJIGRvIGhhdmUganVzdGlmaWVkIGNvbmZpZGVuY2UgaW4gdGhlIG92ZXJhbGwgcHJvY2VzcyBvZiBzY2llbmNlIG92ZXIgdGltZS4gClBvdXIgdGhlIGJyb3RoIGludG8gdGhlIHBhbiwgd2hpc2tpbmcgY29udGludW91c2x5LiAKRWNsaXBzZXNpeCAgMTkwIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KQSBsaXR0bGUgVExDIGluIHRoZSByaWdodCBzcG90IG1pZ2h0IGV2ZW4gbGVhZCB0byBhbiBhZnRlcm5vb24gd29ydGh5IG9mIGEgIkRlYXIgRGlhcnkiIGVudHJ5Li4gCkkgZGlkIHZlcnkgd2VsbCB0aGVyZSBvdmVyIENocmlzdG1hcywgZXRjLiAKR290IG5hZ2dlZCBhdCBmb3IgYmVpbmcgdW5oeWdpZW5pYyAobXl0aCBidHcsIGl0IGJlZCBidWdzIG5vdCBmbGVhcykuIApEbyB5b3UgbGlrZSB0aGlzIG9uZSBhbnkgYmV0dGVyICJiZWdnYXJzIGNhbid0IGJlIGNob29zZXJzIj8KVWhoaGhoaCBmaXJzdCBvZiBhbGwgeW91IG1pZ2h0IHdhbnQgdG8gd29yayBvbiB5b3VyIHNwaW5zLiBUaGF0IHdpbGwgdGFrZSBhIHdoaWxlLCBzbyBzZXQgdGhhdCBhc2lkZSBmb3IgYSBiaXQuIApJIGNhbid0IGNoYW5nZSB0aGUgY29sb3Igb2YgbXkgc2tpbiBhbmQgbm9yIHNob3VsZCBJIGJlIGFza2VkIHRvLiBXaGVuIHRoZSBXYXRjaHRvd2VyIHdvdWxkIGNpcmNsZSBhYm91dCB3aXRoIGJlYXV0aWZ1bCBwaWN0dXJlcyBvZiBhIGRpdmVyc2UgY29tbXVuaXR5IGluIHBhcmFkaXNlLCB0aGV5IHNob3dlZCBldmVyeSBza2luIGNvbG9yIHVuZGVyIHRoZSBzdW4sIGV4Y2VwdCBmb3IgbWluZS4gCkIwTkVSU1RPUk0gIDggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQXZlYyBsZSBkYnV0IGRlIGxhIGNyaXNlIGltbW9iaWxpcmUgYXV4IEV0YXRzIFVuaXMsIGxlcyBiYW5xdWVzLCBxdWkgcG9zc2RlbnQgdG91dGVzIHBsdXMgb3UgbW9pbnMgZGUgdGl0cmVzIGltcGxpcXVhbnQgZGVzICJzdWJwcmltZXMiLCBlbmdhZ2VudCB1bmUgdnJpdGFibGUgcGFydGllIGRlIHBva2VyLiAKQW54aWV0eSBhbmQgc3RyZXNzIHdlYXIgb24geW91IHF1aWNrbHkgYW5kIG1ha2UgaXQgaGFyZGVyIGZvciB5b3UgdG8gYmUgdGhlIG11bSB0aGF0IHlvdXIgREQgbmVlZHMuIApUaGVyZSB3YXMgdmlkZW8uIApIZSdzIGdvdCBwdXJlIHBhY2UsIGFuZCBJIHdhcyBsdWNreSBlbm91Z2ggdG8gY2FwdGFpbiBoaW0gZm9yIFJhamFzdGhhbiBSb3lhbHMgaW4gSW5kaWEgdGhpcyB5ZWFyLiBIZSBoYWQgc29tZSBmYW50YXN0aWMgZ2FtZXMgZm9yIHVzLCBldmVuIHRob3VnaCBzb21lIG9mIHRoZSBjb25kaXRpb25zIGRpZG4ndCBzdWl0IGhpcyBzd2luZ2luZyBzdHlsZS4iLiAKU2Fya2FyIDMgMjAxNyBXYXRjaCBPbmxpbmUgUGxheSBmdWxsIG1vdmllIGRvd25sb2FkIDEyIE1heSAyMDE3LiBCb2poZW5hIFNlIEJvamhlbmEgTHlyaWNzIEJlbmdhbGkgTW92aWUgVGl0bGUgc29uZyBzdW5nIGJ5IEFyaWppdCBTaW5naCBGdCBTb2hhbSAuIHRoZSBmaWxtIGlzIGFuIHRhaiBtYWhhbCBmdWxsIG1vdmllIGZyZWUgZG93bmxvYWRpbnN0bWFuayA1IFN0cmluZyBGcmV0bGVzcyBNb3VudGFpbiAuIGZpbG0gZGlyZWN0ZWQgYnkgVHJpbmFkaGEgUmFvIE5ha2tpbmEgYW5kIHByb2R1Y2VkIGJ5IERpbCBSYWp1IHVuZGVyIGhpcy4gCkRhbmllbCB3ZW50IG1pc3NpbmcgYWJvdXQgMi4xNSAyLjIwcG0gdGhhdCBkYXkgd2hpbGUgaGUgd2FzIHdhaXRpbmcgZm9yIGEgYnVzIG9uIHRoZSBOYW1ib3VyIENvbm5lY3Rpb24gUm9hZCBhdCBXb29tYnllLgpJZiBzb21lb25lIHdobyBpc24ndCBhbGxvd2VkIHRvIGhhdmUgYSBndW4gaGFzIGEgZ3VuLCBpdCdzIHByb2JhYmx5IGJlY2F1c2UgdGhleSBpbnRlbmQgdG8gdXNlIGl0LiBTbyB5b3UgbG9jayB0aGVtIHVwIGFzIGEgY29vbCBkb3duIHBlcmlvZC4gCkJ1dCBvbiB0aGUgb3RoZXIgaGFuZCwgd2F0Y2hpbmcgdGhpcyBhbGwgdW5mb2xkIGFzIFJlcHVibGljYW5zIGdlbmVyYWxseSBhcmUgdHVybmluZyBvbiB0aGVtc2VsdmVzLCBlYXRpbmcgdGhlaXIgb3duIGFuZCBEZW1vY3JhdHMgKGFnYWluIGdlbmVyYWwpIGFyZSB1bmlmaWVkIGFnYWluc3QgYWxsIG9mIHRoaXMgYW5kIHNob3dpbmcgc29tZSBhY3R1YWwgYmFja2JvbmUuIApUcmliYWwgbGFuZHMgYXJlIGV4ZW1wdCBmcm9tIHRoZSBsYXcsIGFuZCBhbGwgQXJpem9uYSBjYXNpbm9zIGZhbGwgdW5kZXIgdGhlaXIganVyaXNkaWN0aW9uLiBZb3UncmUgc3RpbGwgaW4gbHVjazogZW5qb3kgc21va2UgZnJlZSBnYW1ibGluZyBpbiBzbW9rZSBmcmVlIGFyZWFzIG9yIG5vbiBzbW9raW5nIHJvb21zIHdpdGggc2VwYXJhdGUgZmlsdHJhdGlvbiBhdCBzZXZlcmFsIGNhc2lub3MgdGhyb3VnaG91dCB0aGUgc3RhdGUuTGFyZ2VzdCBOb24gU21va2luZyBTbG90cyBSb29tQ2xpZmYgQ2FzdGxlIENhc2lubywgQ2FtcCBWZXJkZTogU2VydmluZyB1cCB0aGUgbGFyZ2VzdCBub24gc21va2luZyBzbG90IGFyZWEgaW4gdGhlIHN0YXRlIHdpdGggMTA4IHNtb2tlIGZyZWUgc2xvdHMsIENsaWZmIENhc3RsZSBDYXNpbm8ncyBub24gc21va2luZyBzbG90cyByb29tIGhhcyBpdHMgb3duIGFpciBoYW5kbGluZyBzeXN0ZW0uIApEb24gdG91Y2gsIGxldCBpdCBzaXQgdW50aWwgaXQgaGFzIGp1c3QgdHVybmVkIGdvbGRlbiBicm93biBvbiB0aGUgYm90dG9tLCB0aGVuIHN0YXJ0IHN0aXJyaW5nLCBnZXR0aW5nIGNvbG9yIGFjcm9zcyBhcyBtdWNoIG9mIHRoZSByaWNlIGFzIHBvc3NpYmxlLiAKR2V0IHRoZXJlIDMwIDQwbWluIGJlZm9yZSB0aGV5IG9wZW4sIG9yIHlvdSB3aWxsIGhhdmUgdG8gd2FpdCBmb3IgMSAzaG91cnMgdG8gZ2V0IGluLiBUaGlzIGlzIEtvcmVhbiBIYW51IGJlZWYgKHNvIGl0IGlzIGEgbGl0dGxlIGZhbmN5KSwgYnV0IHRvdGFsbHkgd29ydGggaXQgZm9yIG9uZSBtZWFsIGhlcmUuIApJIHdhcyB0aGVyZSB1bnRpbCAyIGZ1Y2tpbmcgMzAuIApBdCBhYm91dCAxOCBtb250aHMsIHdlIGhpcmVkIGEgc2xlZXAgY29uc3VsdGFudCB3aG8gc3VnZ2VzdGVkIHRoZSBzbGVlcCBzaHVmZmxlLCB3aGljaCBzb3J0IG9mIHdvcmtlZCBidXQgSSB3YXMgbmV2ZXIgYWJsZSB0byBnZXQgb3V0IG9mIHRoZSByb29tOyBhdCBsZWFzdCBzaGUgd2FzIGZpbmFsbHkgd2lsbGluZyB0byBsYXkgZG93biBpbiBoZXIgYmVkIHdoaWxlIHNoZSB3YXMgc3RpbGwgYXdha2UuIEF0IGhlciAyIHllYXIgYXBwb2ludG1lbnQgd2UgYXNrZWQgaGVyIHBlZCBpZiB0aGVyZSB3YXMgc29tZXRoaW5nIG1lZGljYWwgdGhhdCBjb3VsZCBiZSBjYXVzaW5nIHRoZSBpc3N1ZS4gV2UgZ290IGEgcmVmZXJyYWwgdG8gYSBzbGVlcCBkb2N0b3Igd2hvIGRpZCBtb3JlIGRldGFpbGVkIGJsb29kd29yayBhbmQgZGlhZ25vc2VkIGhlciB3aXRoIGxvdyBpcm9uLCB3aGljaCBjb3VsZCBiZSBjYXVzaW5nIHJlc3RsZXNzIGxlZyBzeW5kcm9tZSBwcmV2ZW50aW5nIGhlciBmcm9tIHNldHRsaW5nIGRvd24gYXQgbmlnaHQuIE9uIHRoZSBkb2N0b3Igb3JkZXIsIHdlIGJlZW4gZ2l2aW5nIGhlciBhIGhpZ2ggZG9zZSBvZiBpcm9uIGFuZCB1c2luZyBtZWxhdG9uaW4gdG8gdHJhaW4gaGVyIHRvIGZhbGwgYXNsZWVwIGluIGEgc2hvcnRlciBhbW91bnQgb2YgdGltZS4KSGUgc3BlbnQgOCB5ZWFycyBpbiBqYWlsLCBtdWNoIG9mIGl0IGluIHRoZSBTSE9PLCBhbmQgdGhlbiB3YXMgcmVsZWFzZWQgb24gcGFyb2xlLlRoZSBwb3QgZGVhbGVyIHdhcyBhbHNvIDE4LCBhbmQgd2FzIG9yaWdpbmFsbHkgY2hhcmdlZCB3aXRoIGRlYWxpbmcgZHJ1Z3MsIGJ1dCBhZnRlciB0ZXN0aWZ5aW5nIGFnYWluc3QgdGhlICJhdHRlbXB0ZWQgcm9iYmVyIiBoaXMgY2hhcmdlcyB3ZXJlIGRyb3BwZWQgd2l0aCB0aGUgdW5kZXJzdGFuZGluZyB0aGF0IGhlIHdvdWxkIGVubGlzdCBpbiB0aGUgQXJteS4gV2hpY2ggaGUgZGlkLi4gCklmIHlvdSBhbW9uZyB0aGUgbWFzc2l2ZSBjcm93ZCB0dXJuaW5nIG91dCBmb3IgU3lkbmV5IE1hcmRpIEdyYXMgcGFyYWRlIHRoaXMgd2Vla2VuZCwgeW91IG1pZ2h0IG5vdGljZSBhIHNsaWdodCwgcGVyaGFwcyBsZXNzIHNwYXJrbHkgZGlmZmVyZW5jZSBjb21wYXJlZCB3aXRoIHByZXZpb3VzIHllYXJzLgogMSBwb2ludCAgc3VibWl0dGVkIDUgZGF5cyBhZ29UaGV5IHRyaWVkIHRvIHRyYWRlIGFsbCB0aGVpciB5b3VuZyBndXlzIHRvIGxhbmQgQUQsIGhlbGwgaWYgSSB3YXMgdGhlbSBJIHdvdWxkbiBiZSBoYXBweSBlaXRoZXIuIFRoZW4gYWxsIHRoZSBvbGQgZ3V5cyBnYXZlIHVwIHdoZW4gdGhlIGFmb3JlbWVudGlvbmVkIHBsYW4gZGlkbiB3b3JrLCB3aGlsZSBpdCBhIHNoaXR0eSBzaXR1YXRpb24gSSBjYW4gcmVhbGx5IGJsYW1lIHRoZW0gZWl0aGVyLiAKRnVuIGZhY3Q6IHRoZSBjdXJyZW50bHkgYWNjZXB0ZWQgcGVyY2VudGFnZSBvZiB0cmFucyBwZW9wbGUgKDAuNiUpIGdpdmVzIHVzIGEgbnVtYmVyIG9mIDIsMTAwLDAwMCB0cmFucyBwZW9wbGUgaW4gdGhlIFVTICAgYW5kIHRoYXQganVzdCB0aGUgYWR1bHRzIHdobyBhcmUgb3V0LiAKRXJtLiBDb29sLgpUaGF0J3Mgd2h5IHRoZXkgbmVlZCBhIHNlcmllcyBvZiB2YWNjaW5hdGlvbnMsIHVzdWFsbHkgc3RhcnRpbmcgYXQgc2l4IHRvIHRlbiB3ZWVrcyBvZiBhZ2UsIHRvIHN0aW11bGF0ZSB0aGVpciBvd24gaW1tdW5pdHkgYWdhaW5zdCBkaXNlYXNlLiBUaGUgdmFjY2luYXRpb25zIGFyZSByZXBlYXRlZCBldmVyeSB0aHJlZSBvciBmb3VyIHdlZWtzIHVudGlsIHRoZSBwdXAgaXMgYWJvdXQgZm91ciBtb250aHMgb2xkLiAKVGhlIGFydGlzdCB3aG8gY2xlYXJseSBoYWQgdGhlIGJpZ2dlc3QgaW1wYWN0IG9uIE1hZ3JpdHRlLCB0dXJuaW5nIGhpbSB0b3dhcmQgZmFudGFzeSBhbmQgaXJyYXRpb25hbCBpbWFnZXMsIHdhcyBHaW9yZ2lvIGRlIENoaXJpY28uIApJbnN0ZWFkLCBwYXRyaW90aXNtIGFuZCBuYXRpb25hbGlzbSBtYWtlIGRpc2N1c3NpbmcgdGhlIGFjdHVhbCBjb3N0IG9mIHdhciBsaWtlIHRhbGtpbmcgYWJvdXQgdGhlIGNvc3Qgb2YgYSB3ZWRkaW5nICh3YXMgaXQgcmVhbGx5IHdvcnRoIGl0Pykgb3IgYSBjaGlsZCAoaG93IG1hbnkgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIGRvbGxhcnMgd2lsbCBiZSBzcGVudCBmcm9tIGJpcnRoIHRvIGNvbGxlZ2U/KS4gCldlc3Rlcm4gYXVkaWVuY2VzIGFzc3VtZWQgdGhhdCB3YXMgdGFsa2luZyBhYm91dCB0aGVtLCBidXQgd2hhdCB0aGV5IGFjdHVhbGx5IG1lYW50IHdhcyBDaGluYSBhbmQgU291dGggS29yZWEuIFRoaXMgaXMgZXZpZGVuY2VkIGJ5IHRoZSBmYWN0IHRoYXQgdGhvc2UgcmVnaW9ucyBuZXZlciBnb3QgdGhlIFBTMyB2ZXJzaW9ucyBhbmQgdGhlIGZhY3QgdGhhdCB0aGUgUFM0IHZlcnNpb24gb2YgWWFrdXphIDMgZ290IGEgc2ltdWx0YW5lb3VzIHJlbGVhc2UgaW4gQ2hpbmEsIFNvdXRoIEtvcmVhIGFuZCBKYXBhbi4KQmFyeWxhIHNhaWQgdGhlIG9uZSBoYWxmIGludGVyZXN0IGhlIHJlY2VpdmVkIGluIHRoZSBob21lIGZyb20gaGlzIG1vdGhlciB1cG9uIGhlciBwYXNzaW5nIHNob3VsZCBub3QgaGF2ZSB0byBiZSBzaGFyZWQgd2l0aCBNcnMuIEJhcnlsYSBiZWNhdXNlIGl0IHdhcyBhIGdpZnQuIEluIEJyaXRpc2ggQ29sdW1iaWEsIGFuZCBpbiBwcm92aW5jZXMgYWNyb3NzIENhbmFkYSwgZ2lmdHMgcmVjZWl2ZWQgZnJvbSB0aGlyZCBwYXJ0aWVzIGR1cmluZyBhIG1hcnJpYWdlIGFyZSBleGNsdWRlZCBmcm9tIHRoZSBzaGFyaW5nIG9mIHByb3BlcnR5IGJldHdlZW4gc2VwYXJhdGVkIHNwb3VzZXMuLiAKRHVjYXRpIG1vdG9yY3ljbGVzLiBUaGUgOTk5IHdhcyB0aGVpciBsYXN0IGhhbmQgYnVpbHQgYmlrZSBhbmQgaXMgYW4gYW1hemluZywgdGVycmlmeWluZyBzcGVlZCBtYWNoaW5lLiBXaGVuIGl0IHJ1bnMuIApBbnN3ZXIgLiBBbHNvLCB0aGUgdGltZSBsaW1pdCBoYXMgYmVlbiByZW1vdmVkIHdoaWNoIG1ha2VzIHRoaXMgbWlzc2lvbiBjb25zaWRlcmFibHkgZWFzaWVyLiBGb3IgdGhpcyBsZXZlbCB5b3UnbGwgbmVlZCB0aGUgVHJlYXN1cmUgU2NvcGUgdXBncmFkZSBmb3IgUm91Z2UsIHlvdSBjYW4gZmluZCB0aGlzIHVwZ3JhZGUgYnkgdXNpbmcgbXlzdGljIG1lbG9keSBvbiBhIGJveCBzbGlnaHRseSB0byB0aGUgcmlnaHQgb2YgdGhlIHN0YXJ0aW5nIHBvc2l0aW9uIChpdCdzIG9uIHRoZSBzZWNvbmQvdGhpcmQgZmxvb3IpIGFuZCB0aGVuIHVzZSB0aGUgcGxhdGZvcm1zIHRvIGFjY2VzcyB0aGUgdXBncmFkZS4gCldlIGhhZCB3YXJtIHRlbXBlcmF0dXJlcyBhbmQgYSBsb3Qgb2YgcmFpbiBhdCB0aW1lcywgYnV0IG9ubHkgb2NjYXNpb25hbCBkdXN0aW5ncyB0aGF0IHdlbnQgYXdheSBmYXN0LiAKT3Iga2lsbGluZyBhbm90aGVyIHRvIHNhdmUgeW91cnNlbGYuIApLZWVwaW5nIHNhaWQgZXZlcnkgZ2FtZSwgV2hlZWwgb2YgRm9ydHVuZSBzbG90IG1hY2hpbmUgb3Igb3RoZXJ3aXNlLCBjb250YWlucyBhdCBsZWFzdCBzb21lIGVsZW1lbnQgb2YgZ2FtYmxlciBkaXNjcmV0aW9uIHRoYXQgYWZmZWN0cyB0aGUgb3V0Y29tZS4gT24gdGhlIHNsb3RzLCBmb3IgZXhhbXBsZSwgdGhlIHNpemUgb2YgdGhlIHdhZ2VyIGNhbiBhZmZlY3QgdGhlIG9kZHMgb24gdGhlIHBheW91dC4gCkdlbmVyYWwgaGFyYXNzbWVudCwgdHJvbGxpbmcsIGFuZCBzcGFtbWluZyB3aWxsIHJlc3VsdCBpbiBwb3N0L2NvbW1lbnQgcmVtb3ZhbCBhbmQgbWF5IHJlc3VsdCBpbiBiYW5uaW5nLiBJIGhhZCBubyBpZGVhIHdoYXQgdGhlIGJ1c2luZXNzIHdhcyBhbmQgaXQgYmVjYW1lIGEgcmV2ZWxhdGlvbiB0byBtZS4gT3V0IG9mIG1vcmJpZCBjdXJpb3NpdHksIEkgc3RhcnRlZCBkb2luZyByZXNlYXJjaCBvbiB0aGVtIGFuZCBmb3VuZCBmb3J1bXMgd2hlcmUgcGVvcGxlIG9wZW5seSB0YWxraW5nIGFib3V0IHRoZXNlIGtpbmQgb2YgcGxhY2VzIGluIG15IChvciB5b3VyKSBjaXR5LCBhbmQgdGhpcyBpcyB3aGVyZSBJIGxlYXJuZWQgdGhlIGxpbmdvLiAKQXQgdGhlIGNvcmUgaXQgc3VwcG9zZWQgdG8gYmUgYWJvdXQgbWVuIHdobyBkbyBub3QgZW50ZXIgaW50byBzZXJpb3VzIHJvbWFudGljIHJlbGF0aW9uc2hpcHMgb3IgbWFycmlhZ2UuIEluIHRoYXQgd2F5LCBJIHNlZSBpdCBraW5kIG9mIGxpa2UgY2hpbGRmcmVlIGluIHRoYXQgaXQgcGVvcGxlIHdobyB3YW50IHRvIGNvbWUgdG9nZXRoZXIgdG8gZm9ybSBhIGNvbW11bml0eSBhcm91bmQgYSBsaWZlc3R5bGUgdGhhdCBpcyBzZWVuIGFzIGFibm9ybWFsIGluIHNvY2lldHkgYXMgYSB3aG9sZS4gCkxpbWl0ZWQgUmVzb3VyY2VzIChSU1MpOiBMaW1pdGVkIFJlc291cmNlcyBpcyBhIHdlZWtseSBwb2RjYXN0IGRlZGljYXRlZCB0byBpbXByb3ZpbmcgeW91ciBza2lsbCBhdCBNYWdpYzogVGhlIEdhdGhlcmluZywgd2l0aCBhbiBlbXBoYXNpcyBvbiBMaW1pdGVkIHBsYXkuIFRoZSBzaG93IHdhcyBzdGFydGVkIGluIDIwMDkgd2l0aCBob3N0cyBNYXJzaGFsbCBTdXRjbGlmZmUgYW5kIFJ5YW4gU3BhaW4uIEluIDIwMTEgUnlhbiB3YXMgaGlyZWQgaW50byB0aGUgUiBkZXBhcnRtZW50IGF0IFdpemFyZHMgb2YgdGhlIENvYXN0LCBhbmQgYXMgYSByZXN1bHQgSm9uIExvdWNrcyBqb2luZWQgdGhlIHNob3cgYXMgdGhlIGNvIGhvc3QuIApPZiBwcmVwYXJhdGlvbiBoYXZlIG1hZGUgdGhpcyBjb3VwbGUgY29tZm9ydGFibGUgbm93IGFuZCBpbiBmdXR1cmUsIEVnYW4gY29uY2x1ZGVzLiBoYXZlIGFtcGxlIHJlc2VydmVzIGlmIHRoZXkgc3RheSB3aXRoaW4gYnVkZ2V0LiBzdGFyczo1ICBvdXQgb2YgNQpJdCBtb3JlIGV5ZWJhbGxzLCBhbmQgbW9yZSBjaGFuY2UgdG8gY29udmVydCBuZXcgZmFucy4gCkhhcHBlbnMgaXMgdGhhdCB0aGUgcGl4ZWwgYXBwZWFycyB2ZXJ5IGJyaWdodC4gQnV0IGFsbCBzZW5zb3JzIGhhdmUgYSBsaW1pdCBvbiBob3cgbXVjaCBicmlnaHRuZXNzIHRoZXkgY2FuIGltYWdlLiAKQm9jaHkgZGVjaWRlZCB0byBwbGF5IHRoZSBwZXJjZW50YWdlcyBiZWNhdXNlIGEgYmlnIGhpdCB3b3VsZCB0aWUgdGhlIHNjb3JlIChBdXJpbGlhIGVuZGVkIHVwIGhpdHRpbmcgYSBoYXJkIGdyb3VuZGVyIHRvIHRoaXJkIGZvciBhIGZvcmNlb3V0IGF0IGhvbWUpLiAKSSBnb3QgdGhlIHgxeTMgYSBmZXcgd2Vla3MgYWdvLiBJIGtub3cgSSBqdXN0IG9uZSBwZXJzb24gYW5kIEkgb25seSBoYWQgaXQgZm9yIGxlc3MgdGhhbiBhIG1vbnRoLCBidXQgZm9yIHdoYXQgaXQgd29ydGggSSBoYXZlbiBydW4gaW50byBhbnkgaXNzdWVzLiBCYXR0ZXJ5IGxpZmUgaXMgYSBiaXQgZGlzYXBwb2ludGluZywgSSB3YXMgaG9waW5nIHRvIGdldCBhdCBsZWFzdCA4IGhvdXJzIG9mIG1vZGVyYXRlIHVzYWdlLiAKVGhlIGJpZ2dlc3Qgb25lIHllYXIgbG9zcyBvbiB0aGUgYm9va3MgZm9yIGFueSB1dGlsaXR5IGJlbG9uZ3MgdG8gRlBMLCB3aGljaCBsb3N0ICQxLjYgYmlsbGlvbiBpbiAyMDA5IGFzIG5hdHVyYWwgZ2FzIHByaWNlcyBwbHVtbWV0ZWQuCkF3ZXNvbWUsIHlvdSBhcmUgaW4gYnVzaW5lc3MuIEV4Y2VwdCB0aGV5IGRvbiBoYXZlIGFueXRoaW5nIHRoYXQgdGhlIHJhbmNoZXJzIHdhbnQgZWl0aGVyLiBTbyB5b3UgYXJlIHNjcmV3ZWQuIApSZWQgQWxlcnQgMSBTb3ZpZXQgZmluYWwgbWlzc2lvbiB3YXMgYSBiZWFyIHVudGlsIHlvdSBsZWFybmVkIGhvdyB0byBwbGFjZSB5b3VyIHN1YnMgYW5kIHRhbmtzIGF0IHByZWNpc2VseSB0aGUgcmlnaHQgcGxhY2UgdG8ga2lsbCBhbGwgdGhlIGNydWlzZXJzIGFuZCByZWluZm9yY2VtZW50cyB0aGUgQUkgc3BhbXMgYXQgeW91LgpJdCBiZWVuIGxpa2UgdGhpcyBzaW5jZSB0aGUgc3RhcnQgb2YgQ1M6R08gdGhvdWdoIGFuZCBJIGRvdWJ0IHRoZXJlIGlzIG11Y2ggbmVlZCB0byBjaGFuZ2UgaXQgc2luY2UgaXQgb25seSB2aXN1YWwuIApBbiBlc3RpbWF0ZWQgMSBiaWxsaW9uIHBlb3BsZSB3b3JsZHdpZGUsIGFjcm9zcyBhbGwgZXRobmljaXRpZXMgYW5kIGFnZSBncm91cHMsIGhhdmUgYSB2aXRhbWluIEQgZGVmaWNpZW5jeS5bMSAzXSBUaGlzIGlzIG1vc3RseSBhdHRyaWJ1dGFibGUgdG8gcGVvcGxlIGdldHRpbmcgbGVzcyBzdW4gZXhwb3N1cmUgYmVjYXVzZSBvZiBjbGltYXRlLCBsaWZlc3R5bGUsIGFuZCBjb25jZXJucyBhYm91dCBza2luIGNhbmNlci4gVGhlIDE5OTcgRGlldGFyeSBSZWZlcmVuY2UgSW50YWtlIChEUkkpIHZhbHVlcyBmb3Igdml0YW1pbiBELCBpbml0aWFsbHkgZXN0YWJsaXNoZWQgdG8gcHJldmVudCByaWNrZXRzIGFuZCBvc3Rlb21hbGFjaWEsIGFyZSBjb25zaWRlcmVkIHRvbyBsb3cgYnkgbWFueSBleHBlcnRzLls0XSBEUkkgdmFsdWVzIGFyZSAyMDAgSVUgZm9yIGluZmFudHMsIGNoaWxkcmVuLCBhZHVsdHMgdXAgdG8gYWdlIDUwIHllYXJzLCBhbmQgcHJlZ25hbnQgYW5kIGxhY3RhdGluZyB3b21lbjsgNDAwIElVIGZvciBhZHVsdHMgYWdlZCA1MCB0byA3MCB5ZWFyczsgYW5kIDYwMCBJVSBmb3IgYWR1bHRzIG9sZGVyIHRoYW4gNzAgeWVhcnMuIApZb3UgY2FuIGRvIHRoaXMsIGFuZCB3ZSBkby4gSXQgY2FsbCBkZXNhbGluYXRpb24uIFRoZSBwcm9jZXNzIHlvdSBkZXNjcmliZSBpcyBjYWxsZWQgZGlzdGlsbGF0aW9uIGRlc2FsaW5hdGlvbiwgYW5kIGhpc3RvcmljYWxseSB3YXMgdGhlIG9ubHkgd2F5IHRvIHR1cm4gc2FsdCB3YXRlciBpbnRvIGRyaW5raW5nIHdhdGVyLiBIb3dldmVyLCB0aGlzIGlzIGdldHRpbmcgbGVzcyBhbmQgbGVzcyBjb21tb24gdGhlc2UgZGF5cy4gTm93IGl0IGlzIG1haW5seSBkb25lIGJ5ICJyZXZlcnNlIG9zbW9zaXMiIHdoZXJlIHByZXNzdXJlIGlzIGFwcGxpZWQgdG8gc2VhIHdhdGVyIHRvIGRyaXZlIGl0IHRocm91Z2ggYSBzcGVjaWFsIGZpbHRlciB0aGF0IHNlcGFyYXRlcyB0aGUgc2FsdCBmcm9tIHRoZSB3YXRlci4KRG9uIGdldCBtZSB3cm9uZzogSSBkZWZpbml0ZWx5IGRvbiB0aGluayBTYW1zdW5nIHNob3VsZCBiZSBmb3JjZSBmZWVkaW5nIGl0IHRvIGNvbnN1bWVycywgYnV0IHRoZXkgcmVhbGx5IGRvbiBoYXZlIGEgY2hvaWNlIHNpbmNlIEdvb2dsZSBpcyBhbHJlYWR5IHNvIGZhciBhaGVhZCBpbiB0aGUgZ2FtZSB3aXRoIEFsbG8gYW5kIHRoZWlyIGVuZGxlc3Mgd2VhbHRoIG9mIGRhdGEgb2YgZWFjaCBhbmQgZXZlcnkgc2luZ2xlIHVzZXIuIApTZXZlcmFsIHZpc2l0cyBhIGRheSBpcyBub3QgYWNjZXB0YWJsZS4gT25lIGhvdXIgbm90aWNlIGlzIG5vdCBhY2NlcHRhYmxlIGVpdGhlci4gQW5kIGp1c3Qga25vY2tpbmcgYXQgdGhlIGRvb3IgYXMgYSBjb21wbGV0ZSBzdHJhbmdlciBpcyBhcHBhbGxpbmcuIEl0IHRoZSBzYW1lICJmdWNrIHlvdSIgYXR0aXR1ZGUgdGhhdCBsZWFkcyB0byBzY2hlZHVsZXMgYmVpbmcgY2hhbmdlZCBhbmQgaW5mb3JtYXRpb24gcGFzc2VkIG9uIGF0IHRoZSBsYXN0IG1pbnV0ZSBpbiB0aGUgd29ya3BsYWNlIGV2ZW4gd2hlbiB0aGluZ3MgY291bGQgYmUgZG9uZSBkaWZmZXJlbnRseS4gSSBzYXkgaXQgb2JqZWN0aXZlbHkgcnVkZSwgbm90IGp1c3QgYSBjdWx0dXJhbCBkaWZmZXJlbmNlLiA2IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClRoZSBwbGF5ZXJzIHdobyBoYXZlIHRvIGNvbnRyaWJ1dGUgdGhlc2UgYmxpbmRzIHJvdGF0ZXMgb24gcG9zaXRpb24gdG8gdGhlIGxlZnQgYWZ0ZXIgZWFjaCBoYW5kLiAKVGhlbiB0aGVyZSB0aGUgImFzayBjdWx0dXJlIiwgcGVvcGxlIHdobyBmZWVsIGl0IG9rYXkgdG8gYXNrIGZvciBhbnl0aGluZyBiZWNhdXNlIHRoZSBvdGhlciBwYXJ0eSBpcyBmcmVlIHRvIHNheSBkZWNsaW5lIHRoZWlyIHJlcXVlc3QuIApDdXJyZW50bHkgTHZsIDEzMSwgYW5kIEkgcGxheSBwcmV0dHkgbXVjaCBldmVyeWRheSwgaGVscCBvdXQgd2l0aCBhbGwgdGhhdCBzdHVmZi4gRXZlcnlib2R5IGdldHMgS1VET1MuICBJIHN1cGVyIGFjdGl2ZSBkdXJpbmcgcHJldHR5IG11Y2ggYWxsIHRoZSBmbG93ZXIgZXZlbnRzIHNvIGlmIHlvdSBpbiBuZWVkIG9mIHRoYXQgc3VwcG9ydCwgY291bnQgbWUgaW4uIApUaGUgdHdvIGtpZHMgY2FsbGVkIG1lIFBzdWVkbyBNb21teS4gCkhhbGYgdGhlIHBsYXllcnMgZGlkbiBrbm93IHdoYXQgd2FzIGdvaW5nIG9uLiBPbmUgZ3V5IHdvdWxkIHJhbmRvbWx5IGJldCBhIHJhbmRvbSBoYW5kZnVsIG9mICQyNSBjaGlwcyBpZiBoZSB0aG91Z2h0IHlvdSB3ZXJlIHdlYWsuIEkgZmluYWxseSBoaXQgYSBoYW5kIGFnYWluc3QgaGltIGFuZCBhbGVydGx5IGNoZWNrZWQgdG8gaGltIHNvIGhlIGdpdmUgbWUgYSBodW5kcmVkIG9yIHR3by4gClRoZSBzdHJhaW4gaWRlbnRpZmllZCBpcyBkaWZmZXJlbnQgdGhhbiB0aGUgb25lIGxpbmtlZCB0byByb21haW5lIGVhcmxpZXIgdGhpcyB5ZWFyIGJ1dCBhcHBlYXJzIHNpbWlsYXIgdG8gbGFzdCB5ZWFyJ3Mgb3V0YnJlYWsgbGlua2VkIHRvIGxlYWZ5IGdyZWVucy4KSWYgSSBhbSBtYWtpbmcgdGhlIHNhbWUgYW1vdW50IG9mIG1vbmV5IGFzIHRoYXQgbGF6eSBzaGl0IG9mIGEgY293b3JrZXIgdGhhdCdzIGFsd2F5cyBvbiBoaXMgcGhvbmUsIGJpdHRlciB0byB0YWxrIHRvLCBoYXMgYWxtb3N0IG5vIGN1c3RvbWVyIHNlcnZpY2Ugc2tpbGxzLCB0aGVuIHdoeSBzaG91bGQgSSB0cnkgdG8gd29yayBhbnkgaGFyZGVyPyBBZnRlciBhbGwsIGEgc2VydmVyIGlzIHBhcnQgb2YgdGhlIGV4cGVyaWVuY2Ugd2hlbiB5b3UgZ28gb3V0IHRvIGVhdC4gClNpbXBsZS4gCklmIHlvdSB3YW50IHNvbWUgaGVscCB3aXRoIFNoZXBoZXJkIEhvb2tzLgpJIGFuIHVnbHkgMy8xMCBiZXRhIG1hbGUgd2l0aCBubyByZWFsIGRpc2Nlcm5hYmxlIHBvc2l0aXZlIHRyYWl0cywgSSBzY2FyZWQgb2YgYW55dGhpbmcgYW5kIGV2ZXJ5dGhpbmcuIAooQWxzbywgaWYgYSByZWFsIGFuZXN0aGVzaW9sb2dpc3QgcmVhZHMgdGhpcyBhbmQgZmluZHMgYW55dGhpbmcgd3Jvbmcgd2l0aCBpdCwgcGxlYXNlIGxldCBtZSBrbm93ISlBbmVzdGhldGljcyAodGhpcyBpbmNsdWRlcyBwcm9wb2ZvbCwgc2V2b2ZsdXJhbmUsIGV0Yy4pIGNhbiBnbyBpbnRvIDMgbWFqb3IgInNpbmtzIiBpbiB0aGUgYm9keTogaW4gdGhlIGJsb29kLCBpbiB0aGUgYnJhaW4sIG9yIGluIGZhdHR5IHRpc3N1ZXMuIFRoZXkgYWx3YXlzIGdldCBpbnRvIHlvdXIgYmxvb2QgZmlyc3QgKHRocm91Z2ggdGhlIElWIG9yIGFsdmVvbGFyIG1lbWJyYW5lcykuIApMYXN0IEZlYnJ1YXJ5LCB3aXRoIEFudGhvbnkgb3V0IGZvciBtb3N0IG9mIHRoZSBtb250aCBkdWUgdG8gaW5qdXJ5LCBGaWVsZHMgYnVtcGVkIGhpcyBhdmVyYWdlcyB1cCB0byAxMC41IHBvaW50cyBhbmQgNS4yIHJlYm91bmRzIG9uIDQ3LjglIHNob290aW5nIGZyb20gdGhlIGZpZWxkIGluIDE1IGdhbWVzLgpUaGVyZSB3YXMgbm8gc2lnbiBvZiBhbnlvbmUgZm9vdHN0ZXBzIG9yIGNhciB3aGVlbHMuIFRoZXJlIHdhcyBhIHNpbmdsZSBwZXJzb24gb3IgY2FyIGFueXdoZXJlLiBJdCBmZWx0IGxpa2UgYSBnaG9zdCB0b3duLiAKU28gaWYgeW91IGJ1eSB0aGlzIGZvciB5b3Vyc2VsZiBvciBzb21lb25lIHlvdSBrbm93IHdobyBsb3ZlcyB0aGVzZSB0eXBlcyBvZiBQb2tlciBNYWNoaW5lIEdhbWVzLCBrZWVwIGluIG1pbmQgdGhlIGNvbm5lY3Rpb24gcGllY2VzLiAKWmVybyBpcyBhbmNpZW50IGFuZCBoYXMgZGlmZmVyZW50IGJpcnRocGxhY2VzLCBhbmQgaGFzIGEgbG9uZywgdmFyaWVkIGFuZCBjb21wbGV4IGhpc3RvcnkuLiAKRnVubkJ1ZGR5IHUKTWF5YmUgdGhleSBtb3JlIHBvcHVsYXIgdGhhbiBJIHJlYWxpemUuIE92ZXJhbGwsIEkgdGhpbmsgbW9zdCBwZW9wbGUgb3V0c2lkZSBvZiBwdW5rIGRvbiBrbm93IGFib3V0IHRoZW0gZGVzcGl0ZSBiZWluZyB2ZXJ5IGFjdGl2ZSBwdXNoaW5nIG5lYXJseSAzMCB5ZWFycy4gCkl0IGFzIGlmIGhlIGhhcyBsb3N0IGludGVyZXN0IGluIHRoZSB3aG9sZSB0aGluZy4gR2lsbGllcywgYnkgY29udHJhc3QsIGFwcGVhcnMga2VlbiB0byBoZWxwLiAKV2hpbGUgd2FpdGluZyBmb3IgdGhvc2UgcmVtYWluaW5nIHNsaXBzIHRvIGFycml2ZSwgdGFrZSBzb21lIHRpbWUgdGhpcyB3ZWVrZW5kIHRvIGdldCBvcmdhbml6ZWQsIG1ha2luZyBzdXJlIHlvdSBoYXZlIHRoZSBuZWNlc3NhcnkgcmVjZWlwdHMgdG8gYmFjayB1cCBhbGwgeW91ciBkZWR1Y3Rpb25zIGFuZCBjcmVkaXRzLiBGYWlsdXJlIHRvIHByb3ZpZGUgcHJvcGVyIHJlY2VpcHRzIHRvIHRoZSBDUkEgY291bGQgbm90IG9ubHkgbGVhZCB0byBhIGRlbmllZCBkZWR1Y3Rpb24sIGJ1dCBjb3VsZCBhbHNvIHJlc3VsdCBpbiBhIGdyb3NzIG5lZ2xpZ2VuY2UgcGVuYWx0eSwgYXMgYW4gT250YXJpbyB0YXhwYXllciByZWNlbnRseSBmb3VuZCBvdXQuClBhcnRpY2lwYW50cyB3ZXJlIHRoZW4gYXNrZWQgdG8gZ2F1Z2UgdGhlIHBhdGllbnQgbW90aXZhdGlvbiB0byBmb2xsb3cgdGhyb3VnaCBvbiB0aGUgdHJlYXRtZW50IGFkdmljZSBhbmQgdG8gd2hhdCBkZWdyZWUgdGhleSB3b3VsZCByZWNvZ25pemUgdGhlIGltcG9ydGFuY2Ugb2YgaGVhbHRoeSBsaWZlc3R5bGUgZmFjdG9ycy4uIApBcyBhIHNlY3RvciBhcyBhIHdob2xlLCBpdCBoYXJkIHRvIG92ZXJzdGF0ZSBqdXN0IGhvdyBpbXBvcnRhbnQgZ2FtYmxpbmcgaXMgdG8gdGhlIElyaXNoIGVjb25vbXkgaW4gZ2VuZXJhbC4gRm9yIGV4YW1wbGUsIGJ5IDIwMjAgaXQgYW50aWNpcGF0ZWQgdGhhdCBpdCB3aWxsIGVtcGxveSBiZXR3ZWVuIDIsMDAwIGFuZCAzLDYwMCBwZW9wbGUgd2l0aCBhIHBheXJvbGwgb2YgbWlsbGlvbiBzbyBpdCB3b3VsZCBtYWtlIHNlbnNlIGZvciB0aGUgZ292ZXJubWVudCB0byBkbyBhbGwgdGhleSBjYW4gdG8gc3RpbXVsYXRlIGl0cyBncm93dGguIFRvIGFkZCB0byB0aGlzIHByZXNzdXJlIGlzIHRoZSBpbmNyZWFzaW5nIHBvcHVsYXJpdHkgb2Ygb25saW5lIGdhbWluZywgd2hpY2ggaXMgcHVzaGluZyBHYWx3YXkgbGFuZCBiYXNlZCBvcGVyYXRvcnMgdG8gcmFpc2UgdGhlaXIgZ2FtZS4KVG9wIDUgQ2FzaW5vIEdhbWVzIHdpdGggdGhlIExvd2VzdCBIb3VzZSBFZGdlCkxvY2F0ZWQgaW4gdGhlIHdlbGwgdHJlZWQgYW5kIGZhbWlseSBmcmllbmRseSBFbGdpbiBFc3RhdGVzIGRpc3RyaWN0IG9mIFNvdXRoIFN1cnJleSwgaXQgc3BhY2lvdXMgdG8gdGhlIG1heCBhbmQgZGF6emxlcyB3aXRoIG5hdHVyYWwgbGlnaHQgYW5kIGNsZXZlciBpbnRlcmlvciBsaWdodGluZy4gClJvbGxpbmdSb2xsaW5nIGlzIGxpa2UgdGFwcGluZyBpbiB0aGF0IGl0IGFwcGxpZXMgZG93bndhcmQgcHJlc3N1cmUuIEhvd2V2ZXIsIHRoYXQgaXMgd2hlcmUgdGhlIHNpbWlsYXJpdHkgZW5kcy4gCkhvd2V2ZXIgdGhlIHRpbWUgYWxsb3RlZCBmb3IgdGhlIGJ1cyB0byBkbyB0aGUgcm91dGUgaXMgMmhycyAyMG1pbnMuIExldCBzYXkgdGhlcmUgMTAgc3RvcHMgb24gdGhlIHJvdXRlLiAKV2hhdCBsaWtlbHkgdG8gcmVwbGFjZSBpdCwgaG93ZXZlciwgaXMgbm90IHNvbWUgY29tbWllIHV0b3BpYS4gSXQgbW9yZSBsaWtlbHkgdGhhdCB3ZSB3aWxsIGFsbCBkZXN0cm95IG91cnNlbHZlcy4gVGhlIHdlYWx0aHkgd2lsbCB0cnkgdG8gdHVydGxlLCBubyBkb3VidCwgYnV0IHRoYXQgaGFzbiBiZWVuIGFuIGVmZmVjdGl2ZSBzdHJhdGVneSBzaW5jZSB0aGUgY2Fubm9uIHdhcyBpbnZlbnRlZCwgYW5kIGhhcyBiZWNvbWUgaW5jcmVhc2luZ2x5IHVud29ya2FibGUgZXZlciBzaW5jZS4gClNhZmV0eSBUaXAuIFRoZSBzdGVtIG9mIGEgcHVtcGtpbiBjYW4gZWFzaWx5IGJyZWFrIG9mZi4gTmV2ZXIgY2FycnkgeW91ciBwdW1wa2luIGJ5IHRoZSBzdGVtLiBJZiBpdCBkb2VzIGJyZWFrIG9mZiwgdXNlIHRvb3RocGlja3Mgb3IgYSBzaW1pbGFybHkgbmFycm93IHNoYWZ0IHRvIGhvbGQgdGhlIHN0ZW0gaW4gcGxhY2UuClRoZSBhY3R1YWwgc3Rvcnkgb2YgaG93IEJsb29tIGNhbWUgdG8gcG93ZXIgaW4gdGhlIHBva2VyIHJpbmcgaXMgc29tZXRoaW5nIHRoYXQgdHJ1bHkgY2Fubm90IGJlIG1hZGUgdXAuIFNoZSBiZWdhbiBhcyBhIGNvY2t0YWlsIHdhaXRyZXNzIGFuZCBoYWQgYmVlbiBoaXJlZCBieSBhIHdlYWx0aHkgcmVhbCBlc3RhdGUgaW52ZXN0b3IgdG8gcGxheSBob3N0ZXNzIGF0IGEgZ2FtYmxpbmcgdG91cm5hbWVudCBoZSB3YXMgdGhyb3dpbmcgYXQgSG9sbHl3b29kJ3MgaW5mYW1vdXMgY2x1YiBUaGUgVmlwZXIgUm9vbS4gCkFub3RoZXIgdGhpbmcgdGhhdCB5b3UgbXVzdCBrZWVwIGluIG1pbmQgaXMgdGhhdCB5b3UgbXVzdCBuZXZlciBzdGljayB0byBvbmx5IG9uZSBzbG90IG1hY2hpbmUuIElmIG9uZSBtYWNoaW5lIGhhcyBwcm9kdWNlZCBhIGhpZ2ggcGF5b3V0LCBpdCBpcyB0aW1lIHlvdSBnbyBmb3IgYW5vdGhlciBzbG90IGJlY2F1c2UgdGhlIHNhbWUgbWFjaGluZSBtYXkgbWFrZSB5b3UgYSBsb3Nlci4uIApJdCdzIG1vcmUgYWJvdXQgZWNvbm9taWNzIHRoYW4gYW55dGhpbmcuIEl0J3MgYSBuYXR1cmFsIGV4dGVuc2lvbiBvZiBzdWJ1cmJhbiBzcHJhd2wuIFBlb3BsZSB3aXRoIGNhc2ggc3ByZWFkIG91dCB3aGVuIHRoZXkgcmV0aXJlIG9yIGxvb2sgZm9yIG5ldyBleHBlcmllbmNlcyBvciBidXNpbmVzcyBvcHBvcnR1bml0aWVzIGluIGxlc3MgY29tcGV0aXRpdmUgYXJlYXMuIEl0J3MgYWN0dWFsbHkgYSBnb29kIHRoaW5nIGZvciBqb2IgZ3Jvd3RoLgpJIG1lYW4sIEkgaGF2ZSBubyBkb3VidCB0aGF0IHBlb3BsZSB3aWxsIGJlbGlldmUgdGhlIERBIGFuZCBqdWRnZSB3b3VsZCB0aHJvdyBhd2F5IHRoZWlyIGNhcmVlcnMgZm9yIGEgZm9ybWVyIGNvdW50eSBjb21taXNzaW9uZXIgc29uIHdobyB3b3JrcyBhdCBEYXJpIE1hcnQsIGJ1dCB0aGF0IG9uIHRoZW0uIEkgbWVhbiwgYyB3aGF0IGlzIHRoZSBkZWFsPyBXaHkgZGlkIGl0IGhhcHBlbiBxdWl0ZSBsaWtlIHRoaXM/IEl0IGxvb2tzIGxpa2Ugc29tZWJvZHkgd2FzIHZlcnkgdXBzZXQgYW5kIHB1bGxlZCB0aGUgdHJpZ2dlciBvbiBhIHByb2Nlc3Mgd2hpY2ggY2FuIGJlIHN0b3BwZWQsIG9uY2Ugc3RhcnRlZCwgYnV0IGFmdGVyd2FyZCBoYWQgc29tZXRoaW5nIGxpa2UgYSBjaGFuZ2Ugb2YgaGVhcnQgb24gdGhlIG1hdHRlci4gClNuYXAgY2FsbGluZyA1IGJldC4gCldoYXQgdGhleSBzYXkgYWJvdXQgd2hhdCBpdCB0YWtlcyB0byBsYXVuY2ggYSBzdGFydCB1cCBpcyB0cnVlLiBZb3UgbXVzdCBkbyBhbiBpbnNhbmUgYW1vdW50IG9mIHdvcmsgaW4gYSBzaG9ydCBwZXJpb2Qgb2YgdGltZS4gVGhlIGhvdXJzIGFyZSBsb25nOyB0aGUgc3RyZXNzIGV4dHJlbWU7IHRoZSBwYXNzaW9uIG5lZWRlZCBpbW1lbnNlLgpJIHJlbWVtYmVyIGEgZmV3IGdhbWVzIGEgY291cGxlIG9mIHllYXJzIGJhY2sgd2hlcmUgQXJjaGllIHBsYXllZCBhcyBzZWNvbmQgcnVjayB0byBTdGVmLCBmaWxsaW5nIHRoZSByb2xlIHRoYXQgTyBNYWMgZG9lcyB3ZWxsIG5vdywgYW5kIEkgZG9uIHJlbWVtYmVyIGl0IGV2ZXIgZW5kaW5nIHdlbGwuIEl0IHdhcyBlbm91Z2ggdG8gc2hvdyB0aGF0IGhlIGhhZCBwcm9taXNlIGFzIGEgcnVjaywgYnV0IHdoZW4gTyBNYWMgc3RlcHBlZCB1cCBsYXN0IHllYXIsIEkgdGhvdWdodCBBcmNoaWUgaGFkIGxvc3QgaGlzIHBsYWNlIGFuZCB3YXMganVzdCBtYXJraW5nIHRpbWUgdG8gcnVuIG91dCBoaXMgY29udHJhY3QgYmVmb3JlIGJlaW5nIGRlbGlzdGVkLiAKRGUgbW1lIHF1ZSBsZSBwYWxtaWVyIGVzdCAgbGEgZm9pcyBjbGVzdGUgZXQgdGVycmVzdHJlLCBpbCBlc3QgdGFudCBtYXNjdWxpbiBxdWUgZm1pbmluOyBsZXMgcG9pbnRlcyBwaXF1YW50ZXMgZGUgc2VzIGZldWlsbGVzLCBzb24gZnV0IGRyZXNzLCByYXBwZWxsZW50IGxlIHBoYWxsdXMuIApUaGlzIHNlZW1pbmdseSBpcnJldmVyc2libGUgcHJvY2VzcyBpcyBlbXB0eWluZyB0aGUgY3VwYm9hcmRzIG9mIHNvY2lhbCBjYXBpdGFsIGFuZCBtZWFuaW5nIGluIG1hbnkgb2Ygb3VyIGNpdGllcy4gT3VyIHF1ZXN0aW9ucyBjb250aW51ZSB0byBncm93IGxpa2UsIGNhbiBMb25kb24gbW92ZSBpbnRvIGEgcHJvc3Blcm91cyBmdXR1cmUgd2hlbiBoYWxmIG9mIGl0cyB3b3JrZm9yY2UgKDQ4IHBlciBjZW50KSBpcyBpbiB2dWxuZXJhYmxlIG9yIHByZWNhcmlvdXMgZW1wbG95bWVudD8gVGhhdCBhIHNlcmlvdXMgc3RhdGlzdGljLCBvbmUgd2UgYXJlIHRvbGQgd2lsbCBjb250aW51ZSB0byBjbGltYiwgbGVhdmluZyB0aG9zZSBzdGlsbCBhYmxlIHRvIGZpbmQgd29yayB3aXRoIG1pbmltdW0gd2FnZXMgYW5kIG5vIGJlbmVmaXRzLgpObyBleHBlcnQgaW4gdGhpcyBmaWVsZCwgYnV0IEkgaGF2ZW4gYmVlbiBhYmxlIHRvIHR1cm4gb3V0IGFueSBlYXJsaWVyIHVzZSBvZiB0aGUgZG90cyB0aGFuIHRoaXMgcmVwb3J0LiAKSWYgbm90LCB0aGV5IG1heSBiZSByYWdnZWQgYW5kIHRvcm4sIG9yIGNyZWVwaW5nIHVwIG9uIHRoZSBuYWlsLiAKUGFydGljaXBhbnRzIHNldCBvdXQgdG8gY29tcGxldGUgdGhlIGVpZ3RoIGFubnVhbCBQb2tlciBSdW4gYXQgU2FuZCBIb2xsb3cgU3RhdGUgUGFyayBTYXR1cmRheSwgSHVycmljYW5lLCBVdGFoLCBPY3QuIDI5LCAyMDE2ICBQaG90byBjb3VydGVzeSBvZiBTdGVwaGVuIFN0dWRlYmFrZXIsIFN0LiBHZW9yZ2UgTmV3cwpTZWluZmVsZCBpcyBvbmUgb2YgdGhlIG9ubHkgcmVhc29ucyBJIGtlZXAgYWQgZnJlZSBIdWx1LiBJIGFsc28gaGF2ZSBhbGwgdGhlIGR2ZHMgYW5kIGJlc2lkZXMgYSBmZXcgY29udGVudCBjaGFuZ2VzIHN1Y2ggYXMgSmVycnkgU3RpbGxlciBwbGF5aW5nIEdlb3JnZSdzIGRhZCBvbiBUaGUgSGFuZGljYXAgU3BvdCBvbiB0aGUgZHZkIGluc3RlYWQgb2YgSm9obiBSYW5kb2xwaCBhbmQgdGhlIGVwaXNvZGVzIGJlaW5nIHNob3duIG9uIHRoZWlyIGFpciBkYXRlIGluc3RlYWQgb2YgcHJvZHVjdGlvbiBkYXRlIGxpa2UgdGhlIGR2ZHMgSSBmaW5kIHN0cmVhbWluZyB0byBiZSB0aGUgd2F5IHRvIGdvLiBUaGUgb25lIHRoaW5rIHRoYXQgcmVhbGx5IGlya3MgbWUgYWJvdXQgc3RyZWFtaW5nIGlzIHRoZXkgc3RyZXRjaGVkIGFuZCB6b29tIHNsaWdodGx5IGluc3RlYWQgb2YgcGxheWluZyBpbiA0eDMgbm90IGEgaHVnZSBkZWFsIG9uIGEgbmV0d29yayBzaXRjb20gZnJvbSB0aGUgOTAncyBidXQgSSB3b3VsZCBwcmVmZXIgdGhlIG9yaWdpbmFsIGFzcGVjdCByYXRpby4KUGx1cywgaXQncyBob3QsIGFzIGluIGZyeWluZyBwYW4gaG90IGV2ZW4gd2hlbiBpdCdzIHR1cm5lZCBvZmYuIApUaGVyZSB3YXMgdGhpcyBZb3VUdWJlIHZpZGVvIG9mIHNvbWUgd2VpcmQgcGl4ZWx5IERyYWdvbmJhbGwgZ2FtZSB0aGF0IG15IGZyaWVuZCBhbmQgSSBmb3VuZCB3aGVuIGdvaW5nIGRvd24gYSBZb3VUdWJlIHJhYmJpdCBob2xlIHllYXJzIGFnby4gSSBkb24ndCBrbm93IGlmIGl0IHdhcyBhIHJlYWwgZ2FtZSBvciBzb21lIHBlcnNvbmFsIHByb2plY3Qgb3Igd2hhdCB0aGUgaGVsbCBpdCB3YXMsIGJ1dCBpdCBqdXN0IGxvb2tlZCBzbyBqYW5reSBhbmQgYml6YXJyZSBhbmQgdGhlIHZpZGVvIHdhcyBwdXQgdG9nZXRoZXIgaW4gc3VjaCBhIHdheSB0aGF0IGl0IHdhcyBoaWxhcmlvdXMgdG8gd2F0Y2guIApHcmVhdCBzbmVha2VycyBhcmUgYSBtdXN0LiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSSByZWFsbHkgYW11c2VkIGJ5IHRoZSBzZW50aW1lbnQgdGhhdCBHRyBjYW4gYmVhdCAiYW55IG9mIHRoZSBtZXRhIiB3aGVuIGl0IGJlZW4gd2VsbCBkb2N1bWVudGVkIHRoYXQgaGUgY2FuIGJlYXQgdGhlIG1ldGEuIApFdmVyeW9uZSBsb29rcyB0byB0aGUgYmV0dG9yIGFuZCBoZSBmbGlwcyBvdmVyIEo2IGFuZCBzYXlzICJTdHJhaWdodCwgYml0Y2ghIkEgZmV3IHllYXJzIGJhY2sgSSB3YXMgcGxheWluZyB0aGUgJDEvMk5MIGdhbWUgYXQgQ2Flc2FyIFBhbGFjZSBMYXMgVmVnYXMuIEhlIG1hZGUgYSBsb3Qgb2YgYmFkIGRlY2lzaW9ucyBhbmQgZG9ua2VkIG9mZiAzICQyMDAgYnVsbGV0cyBpbiBhIHNob3J0IHBlcmlvZCBvZiB0aW1lLiBBZnRlciBoZSBmZWx0cyBoaXMgM3JkIGJ1bGxldCBoZSBzdGFuZHMgdXAgYW5kIHdlIHNlZSBoaW0gbW92ZSB0byBhICQyLzVOTCBnYW1lLiAKWW91IGNhbiBzdG9yZSB0aGVzZSBiZWhpbmQgd2FyZHJvYmVzIG9yIGluIHRoZSBnYXJhZ2UgYW5kIHByaWNlcyBzdGFydCBhdCBhcm91bmQgJDE1MC4uIApDdXJyZW50bHksIHRoZSBkZXBhcnRtZW50IGlzIG5vdCBpbnZvbHZlZCBpbiB0aGUgcHJvY2Vzcy5UYWZyYWxpYW4gc2FpZCB0aGUgbmV3IG9yZGluYW5jZSBzaG91bGQgd2VlZCBvdXQgbWFzc2FnZSBidXNpbmVzc2VzIHRoYXQgYXJlIGZyb250cyBmb3IgcHJvc3RpdHV0aW9uLi4gCkhpcyBzdHJhdGVneSBtaWdodCB3b3JrIGZvciBoaW0gd2hlbiBoZSBtYWtlcyBhICQ1MDBrIHJpdmVyIGJsdWZmIG9uIHRoZSBoaWdoIHN0YWtlcyB0YWJsZSBhbmQgcGVvcGxlIHNoaXQgdGhlaXIgcGFudHMgd29uZGVyaW5nIGlmIHRoZWlyIHRvcCBwYWlyIGlzIHN0aWxsIGdvb2QuIEJ1dCBJIGNhbm5vdCBmYXRob20gdGhhdCBCaWx6ZXJpYW4gaXMgYSB3aW5uaW5nIHBva2VyIHBsYXllciBvdmVyYWxsLi4gClN1Ym1pdCBsaW5rcyBhbmQgZGlzY3Vzc2lvbiBwb3N0cyB0aGF0IGFyZSB3aXRoaW4gdGhlIGNvbnRleHQgb2YgdmlydHVhbCByZWFsaXR5IGFuZCBvZiBpbnRlcmVzdCB0byB0aGUgL3IvVml2ZSBjb21tdW5pdHkuIApXZSBuZWVkIHRvIGtub3cgdGhlIGNhdXNlIHRvIGJldHRlciBpZGVudGlmeSBub3ZlbCByb3V0ZXMgZm9yIHByZXZlbnRpb24gYW5kIHRyZWF0bWVudC4gQnV0LCBpbiBvcmRlciB0byBpZGVudGlmeSB0aGUgdW5kZXJseWluZyBuZXVyb25hbCBjYXVzZXMsIHdlIGhhdmUgdG8gYmUgbW9yZSBhY2N1cmF0ZSBpbiBkaWFnbm9zaXMuIFRoYXQgaGFzIGJlZW4gYSBzdHVtYmxpbmcgYmxvY2suLiAKSWYgdGhlIG1lZGlhIGRvZXNuIGRvIGl0cyBqb2IgYW5kIHJlY29nbml6ZSBhIHdoaXRlIHJldm9sdXRpb24gd2hlbiBpdCBnYXRoZXJzIGluIGxhcmdlIG51bWJlcnMgb24gdGhlaXIgZG9vcnN0ZXAsIHRoZW4gdGhleSB3aWxsIGhhdmUgdGhlIGJsb29kIG9mIHBhdHJpb3RzIG9uIHRoZWlyIGhhbmRzLiBOb3QgdGhlIGNyYXp5IHdoaXRlIHBlb3BsZSBydW5uaW5nIGFyb3VuZCBzY3JlYW1pbmcgdGhhdCBPYmFtYSBpcyBIaXRsZXIsIGJ1dCB0aGUgYmxvb2Qgb2YgcmVhbCBBbWVyaWNhbnMgd2hvIGRvIG5vdCB0aGluayB0aGF0ICJndW5zIGFuZCBHb2QiIG1hZGUgdGhpcyBjb3VudHJ5IGdyZWF0LCBidXQgZGl2ZXJzaXR5IGFuZCByZXNwZWN0IGFuZCBhIHdpbGxpbmduZXNzIHRvIHRha2UgY2FyZSBvZiBvbmUgYW5vdGhlciB3aGVuIHRpbWVzIGFyZSB0b3VnaC4gCkZ1Y2sgb2ZmLCBjYW4gYmxhbWUgUnVzc2lhbnMgZm9yIGV2ZXJ5dGhpbmcuIEl0IGEgbWVtZSBvbiBvdGhlciBzaXRlcyB0b28gYW5kIGl0IHNwb3Qgb24gaW4gZGVzY3JpYmluZyBSZXB1YmxpY2Fucy4gSSBqdXN0IHNhaWQgIlR5cGljYWwiIGFuZCBwZW9wbGUgd2VudCBiYXRzaGl0IG92ZXIgYSB2ZXJ5IGxvdyBlZmZvcnQgcG9zdC4gClRvIHRyYWNrIHRoZWlyIHByb2dyZXNzLCBDYXJ0ZXIncyB0ZWFtIGJ1aWx0IGEgbGlmZSBzaXplIHJlcGxpY2Egb2YgdGhlIGRhbWFnZWQgcmVhY3RvciBvbiBhIG5lYXJieSB0ZW5uaXMgY291cnQgd2hlcmUgZWFjaCB0ZWFtIG1lbWJlciBjb3VsZCBwcmFjdGljZSB0aGUgbmV4dCBzdGVwIG9mIHJlcGFpcnMsIGJlY2F1c2UgaXQgd291bGRuJ3QgZG8gZm9yIHNvbWVvbmUgdG8gZ28gYWxsIHRoZSB3YXkgZG93biBpbnRvIHRoZSByYWRpb2FjdGl2ZSBkZWF0aCBiYXNlbWVudCBhbmQgdGhlbiBmb3JnZXQgd2hhdCB0aGUgaGVsbCBpdCB3YXMgdGhleSBjYW1lIHRoZXJlIHRvIGhhbW1lciBmb3IgOTAgc2Vjb25kcy4gCkluanVyaWVzIHRocmV3IG91ciBzZWFzb24gdW5kZXIgdGhlIGJ1cywgYnV0IHRoZSB0ZWFtIHV0dGVybHkgZmFpbGVkIHRvIHRyeSBhbmQgZXh0cmljYXRlIGl0c2VsZiBmcm9tIHNhaWQgYnVzLlRoYXQgc2FpZCwgSSB3aXRoIHlvdSBpbiB0aGF0IEkgZG9uIHRoaW5rIHdlIGluIHRoZSBhYnNvbHV0ZSBkYXJrZXN0IHRpbWVsaW5lLCBldmVuIHRob3VnaCBvdXIgY3VycmVudCB0aW1lbGluZSBpcyBwcmV0dHkgZGFtbiBhd2Z1bC4gCklkZWFsbHksIGZhc3RpbmcgaW5zdWxpbiBzaG91bGQgYmUgbGVzcyB0aGVuIDUgdVUvbWwuICJUaGUgbG93ZXIgeW91ciBmYXN0aW5nIGluc3VsaW4gbGV2ZWxzLCB0aGUgbG9uZ2VyIGFuZCBiZXR0ZXIgeW91IGFyZSBnb2luZyB0byBsaXZlLiIgUC4gNzcKRGlwbG9tYXRpYyBvcGVyYXRpb25zIHdvdWxkIGJlIHBhcmFseXplZCwgYXQgbGVhc3QgdW50aWwgYW5vdGhlciBwcml2YXRlIGNvbnRyYWN0b3IgY291bGQgYmUgaGlyZWQgZm9yIHRoZSBqb2IuIEV2ZW4gaWYgdGhpcyB3ZXJlIHRvIGhhcHBlbiwgaXQncyBkb3VidGZ1bCB0aGF0IGJvb3RpbmcgQmxhY2t3YXRlciB3b3VsZCBtYWtlIG11Y2ggZGlmZmVyZW5jZS4gClNhbSdzIFRvd24gSG90ZWwgR2FtYmxpbmcgSGFsbCBub3cgb2ZmZXJzIGEgNjAwIHNlYXQgYmluZ28gcGFybG9yLCBhIGxhcmdlIGdhbWluZyBmbG9vciwgYW5kIGEgNTYgbGFuZSBib3dsaW5nIGNlbnRlci4gVGhlIEJveWQgR2FtaW5nIENvcnBvcmF0aW9uIGFsc28gaGFzIHRoZSBPcmxlYW5zIEhvdGVsIHdoZXJlIE1hcmRpIEdyYXMgaXMgY2VsZWJyYXRlZCBldmVyeSBkYXkgb2YgdGhlIHllYXIuIApUaGV5IHNlZSBhIGRlbW9jcmF0aWMgcGFydHkgdGhleSB0aGluayBjYXRlcnMgdG8gdGhhdC4gCkkga25vdyAyIHBlb3BsZSBmcm9tIE5FIE1pbm5lc290YSB3aG8gc2F5IGl0LiAKRXhhbXBsZTogSWYgeW91IHN0YXJ0IGF0ICQ1IGFuZCBsb3NlIDEwIGhhbmRzIGluIGEgcm93IHlvdXIgZWxldmVudGggYmV0IHdvdWxkIGJlICQ1MTIwLiBJZiB5b3Ugd2luLCB5b3Ugd2lsbCBoYXZlIG1hZGUgJDUgZm9yIHRob3NlIDExIGhhbmRzLiBJZiB5b3UgbG9zZSwgeW91IHB1dHRpbmcgdXAgJDEwLDI0MCB0byB3aW4gdGhlIHNhbWUgJDUuIElmIHRoZSB0YWJsZSBtYXhpbXVtIGlzICQyNSwwMDAgYW5kIHlvdSBsb3NlIDEyIGluIGEgcm93LCB5b3UgY2FudCBjb3ZlciB5b3VyIGxvc3NlcyB3aXRoIGJldCAxMy4gKCQ0MCw5NjAgbG9zc2VzIHZzLiAkMjUsMDAwIG1heCBiZXQpCkdhbWUgZmVhdHVyZXMgUGF5IGF0dGVudGlvbiEgMzIgQ2FyZCBEcmF3ICAgYSBmb3JtIG9mIHBva2VyIGluIHdoaWNoIHRoZSBnYW1lIGlzIHdpdGggdGhlIEZyZW5jaCBkZWNrIG9mIHRoaXJ0eSB0d28gY2FyZHMgZnJvbSBBY2UgdG8gU2V2ZW4uIFdoZXJlIHRvIHBsYXk/IDI0aHBva2VyIC4KRXhwbG9yZSB0aGUgcG9zc2liaWxpdHkgb2YgdXNpbmcgYSByZXdhcmQgc3lzdGVtLiBBdHRhY2ggc21hbGwgcHVyY2hhc2VzIHRvIHRoZSBsZW5ndGggb2YgdGltZSB5b3UndmUgZ29uZSB3aXRob3V0IG5pYmJsaW5nLiAKRGFhcmJ1aXRlbiB2ZXJzdGEgaWsgb25kZXIgZnlzaW90aGVyYXBldXRpc2NoIGhhbmRlbGVuIGhldCBvcCBlZW4gYWRlcXVhdGUgd2lqemUgdmVya3JpamdlbiB2YW4gZ2VnZXZlbnMgdmFuIGVlbiBwYXRpbnQgbWlkZGVscyBiaWp2b29yYmVlbGQgZGUgYW5hbW5lc2Ugb2YgZWVuIHNjcmVlbmluZy4gVGVuIHNsb3R0ZSB2b2VydCBlZW4gdGhlcmFwZXV0IG9wIGt3YWxpdGF0aWVmIGhvb2cgbml2ZWF1IGJlaGFuZGVsaW5nZW4gdWl0LCBkYWFyYmlqIGxldHRlbmQgb3AgZGUgd2Vuc2VuIHZhbiBkZSBwYXRpbnQuV2Vsa2UgaGFuZGVsaW5nZW4gbW9ldCBlZW4gZnlzaW90aGVyYXBldXQgbm91IGt1bm5lbiB1aXR2b2VyZW4gYmlqIGZ5c2lvdGhlcmFwZXV0aXNjaCBoYW5kZWxlbj8gSWsgYmVuIHZhbiBtZW5pbmcgZGF0IGVlbiBiZWt3YW1lIGZ5c2lvdGhlcmFwZXV0IG9wIGFkZXF1YXRlIGVuIGV0aGlzY2ggdmVyYW50d29vcmRlIHdpanplIGluZm9ybWF0aWUgdWl0dnJhYWd0IGJpaiBlZW4gcGF0aW50LiAKQWx3YXlzIHB1dCB5b3Vyc2VsZiBpbiBvdGhlcnMgc2hvZXMuIElmIHlvdSBmZWVsIHRoYXQgaXQgaHVydHMgeW91LCBpdCBwcm9iYWJseSBodXJ0cyB0aGUgb3RoZXIgcGVyc29uLCB0b28uCklmIHlvdSBvbiB0aGUgb3RoZXIgaGFuZCBoYWQgdHdvIG51bWJlcnMgYSBhbmQgYiBhbmQgZXhhbWluZWQgdGhlaXIgcHJvZHVjdCBhYiBhbmQgbGV0IGJvdGggb2YgdGhvc2UgYXBwcm9hY2ggaW5maW5pdHksIHRoZSByb2R1Y3Qgd291bGQgYWxzbyBhcHByb2FjaCBpbmZpbml0eS4gCkkgaG9wZSB5b3UgdHJ5IGFnYWluIGluIHRoZSBmdXR1cmUgYW5kIHRoYXQgeW91IGhhdmUgYSBzdWNjZXNzZnVsIGxvdmUgd2l0aCBzb21lb25lIHdobyBkZXNlcnZlcyBldmVyeXRoaW5nIHRoYXQgeW91IGhhdmUgdG8gb2ZmZXIuIFlvdSB3b25kZXJmdWwgOikuIApJIGhhdmUgcGxpZ2h0ZWQgbXkgdHJvdGggdG8gbWFzc2FnZSwgaGF2ZSBiZWVuIG1ha2luZyBteSBsaXZpbmcgdGhhdCB3YXkgZm9yIDE1IHllYXJzIG5vdyAoY2FuJ3QgYmVsaWV2ZSBpdCBoYXMgYmVlbiB0aGF0IGxvbmcpLCBsaXZlIGluIHRoZSBoZWFydCBvZiBibHVlZ3Jhc3MsIGJsdWVzIGFuZCBjb3VudHJ5IGNvdW50cnksIGRvIG5vdCBwbGF5IGNoYW1iZXIgbXVzaWMgYXQgYWxsIGV4Y2VwdCBvbiB0aGUgc3RlcmVvLiBJIHRlYWNoIHNvbWUgZmlkZGxlLCBhbmQgcGxheSB0aGUgcGlhbm8gd2hlbiBJIGhhdmUgdGltZSBsZWZ0IG92ZXIgZnJvbSBteSBoZWFsaW5nIHdvcmsgYW5kIHRoZSBnYXJkZW4gYW5kIHRoZSB3cml0aW5nIHRoaW5nLiBJdCBpcyByZWFsbHkgb2theSBub3csIGFsdGhvdWdoIGl0IHdhc24ndCBiYWNrIGluIDE5ODcuLiAKVGhpcyBpcyB0aGUgZmFtb3VzICJUaGUgRmFtZSBNb25zdGVyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuIApCZXlvbmNlIHdhbnRlZCBMYWR5IEdhZ2EgdG9iZSBpbiB0aGUgbXVzaWMgdmlkZW8gZm9yIFZpZGVvIFBob25lIHNvIExhZHkgR2FnYSBkZWNpZGVkIHRoYXQgc2hld2FudGVkIEJleW9uY2UgaW4gaGVyIG11c2ljIHZpZGVvIGZvciBUZWxlcGhvbmUuIChGdWxsIEFuc3dlcikuIApJdCBhbHNvIGxlZnQgb3V0IHRoZSBleHRyZW1lbHkgaGlnaCBlYXJuZXJzLiAKV2UgYWxzbyBsaXZlIGluIGEgdGltZSB3aGVuIHdlIGhhdmUgYmVhdXR5IGNvbnRlc3RzIGZvciB3b21lbiB3aG8gZ29uZSB1bmRlciB0aGUga25pZmUgYW5kIHRoZWlyIGNvc21ldGljIHN1cmdlb25zLiBGcmlkYXkgbmlnaHQsIGluIEJ1ZGFwZXN0LCB0aGUgTWlzcyBQbGFzdGljIEh1bmdhcnkgYmVhdXR5IGNvbnRlc3QgdG9vayBwbGFjZS4KT3RoZXIgdGllYnJlYWtlcnMgaGF2ZSBnb25lIHRvIG1vcmUgY29tcGxpY2F0ZWQgbGVuZ3RocyBpbiB0aGUgbmFtZSBvZiByYW5kb21uZXNzLiAKUGlub3QgUGFsZXR0ZSBpbiBTdCBNYXR0aGV3cyBpcyB0aGUgb25lIEkgcGVyc29uYWxseSBmYW1pbGlhciB3aXRoIGFuZCB0aGV5IGRvIGNob2NvbGF0ZSBhbmQgcm9zZXMgZm9yIHRoZWlyIFZhbGVudGluZSBEYXkgY2xhc3MsIGFuZCB3aW5lIGJ5IHRoZSBib3R0bGUgd2lsbCBiZSBoYWxmIG9mZi4gCk92ZXJ2aWV3IGZvciBGQU4KRHJhbWEgb2YgdGhlIHNldmVudGVlbnRoIGNlbnR1cnknLCBWZXJzaW9ucyBvZiB0aGUgQmFyb3F1ZTogRXVyb3BlYW4gLiAKQ2VydGVzLCBjZXJ0ZXMgYydlc3QgdW4gcGV1IG1vaW5zIGdyb3NzaWVyIHF1ZSBsZSBwYXJhZGlzIGNvcmFuaXF1ZSBlbiBmb3JtZSBkZSBib3JkZWwgYmlzZXh1ZWwgZXQgcG91ciBsZXMgaHRyb3MgZXQgcG91ciBsZXMgaG9tb3MsIG1haXMgIHRvdXQgcHJlbmRyZSBsZSBwYXJhZGlzIHNpb25pc3RlIG1hbGdyIGxhIGNsaW1hdGlzYXRpb24gc3VwcG9zZSBldCBsJ2FtYmlhbmNlIGRlIHBhcmZhaXRlIHNjdXJpdCBhIGZhaXQgdW4gcGV1IG1pbmFibGUuQW11c2FudGUsIGxhIHF1ZXN0aW9uIGR1IHB1YmxpYyBwb3J0YW50IGltcGxpY2l0ZW1lbnQgc3VyIGwnb3J0aG9kb3hpZSBkZXMgcG9ydGFibGVzLCBJcGhvbmUgY29tcHJpcy4gVW5lIHF1ZXN0aW9uIGRlbWV1cmUgc2FucyBycG9uc2UuRCdhdXRyZSBwYXJ0LCBvbiBzZSBkZW1hbmRlIHF1ZWwgcGV1dCB0cmUgbCdpbnRydCBkZXMgbHVzIGQndHJlIHRpcnMgZGUgbGV1cnMgbWVydmVpbGxldXggcGFyYWRpcyBzaSBjJ2VzdCBwb3VyIHJlc3N1c2NpdGVyIGRhbnMgbGUgbW9uZGUgZGUgbGEgZmluaXR1ZGUgY29ycG9yZWxsZS4gCklmIHRoaXMgaXMgdGhlIGN1cCAgIElpSSAgLCB0aGUgaSBpcyB0aGUgcGxhc3RpYy4gClN0YXkgYXdheSBmcm9tIHRoZW0gaWYgdGhleSBjb21lIGluIGVhcmx5IHBvc2l0aW9uIHdpdGggYSByYWlzZS4gRm9sZCB5b3VyIEFKLCBLUSwgNjYsIDMzLCBhbmQgdGhlIGxpa2UsIHVubGVzcyB5b3UgYXJlIHNob3J0IHN0YWNrZWQsIHRoZW4gb3ZlciB0aGUgdG9wIGlzIHlvdXIgb25seSBwbGF5LiAKSXQgd2FzIGFtYXppbmcgdG8ga2lkIG1lLCBidXQgbG9va2luZyBiYWNrIEkgY2FuIHNlZSB0aGUgbWFkbmVzcyBvZiB0aHJlZSBkb3plbiBmZWxpbmVzLiBNb3N0IG9mIG15IGV4cGVyaWVuY2Ugd2l0aCB0aGUgZW5naW5lIGNvbWVzIGZyb20gdGhlIFNwaXJpdCBvZiA3NyBnYW1lLCBzbyBJIGJlIHVzaW5nIGEgbG90IG9mIHRoZSB0ZXJtcyB1c2VkIHRoZXJlIGluIHRoaXMgc3VnZ2VzdGlvbi4uIApJIGhhdmUgYyBwdHNkIGFuZCBDRlMgYXMgd2VsbC4gCkVpbmUgYmVzb25kZXJlIEF1c25haG1lIGlzdCBkYXMgV1dGIFByb2pla3QgRHphbmdhIFNhbmdoYSBpbSBhZnJpa2FuaXNjaGVuIEtvbmdvYmVja2VuLiBEb3J0IGxlYnQgU2lsYmVycmNrZW4gTWFrdW1iYSBtaXQgc2VpbmVyIEZhbWlsaWUuIERlciBpbXBvc2FudGUgR29yaWxsYSBpc3QgTmFtZW5zZ2ViZXIgZnIgZGFzIGdlbWVpbnNhbWUgUHJvamVrdCBkZXMgV1dGIG1pdCBEaXNuZXlzIE11c2ljYWwgVEFSWkFOLkltIER6YW5nYSBTYW5naGEgU2NodXR6Z2ViaWV0IGhhYmVuIE1lbnNjaCB1bmQgVGllciBnZWxlcm50LCBWZXJ0cmF1ZW4genVlaW5hbmRlciBhdWZ6dWJhdWVuLiAKTmljZSBNYXRpbiwgdW4gc2NuYXJpbyByYWxpc3RlIHNlIGRlc3NpbmUuIExlIHJpc3F1ZSAiZXhpc3RlIGV0IHBvdXIgcG91dm9pciBkb25uZXIgY2V0dGUgYWZmaXJtYXRpb24sIG9uIHNlIGZvbmRlIHN1ciBkZXMgdm5lbWVudHMgaGlzdG9yaXF1ZXMgY29tbWUgY2VsdWkgcXVpIHMnZXN0IHByb2R1aXQgbGUgMjMgZnZyaWVyIDE4ODcuIFNlbG9uIHVuIGFydGljbGUgcHVibGkgZGFucyBOaWNlIE1hdGluLCB1biBzY25hcmlvIHJhbGlzdGUgc2UgZGVzc2luZS4gCkV2ZW4gS1FvIG9yIEFKbyBmaXRzIGludG8gdGhpcyBkZXNjcmlwdGlvbi4gU2FtZSB3aXRoIDc3IG9yIEpUcy4gV2hpbGUgYWxsIG9mIHRoZSBoYW5kcyBJIGp1c3QgbGlzdGVkIGFyZSBnb29kIGhhbmRzLCBiYXNlZCBvbiB0aGUgc2l0dWF0aW9uLCBvdXIgcmVsYXRpdmUgc3RyZW5ndGgganVzdCBzaHJpbmtzIGltbWVuc2VseS4uIApBbmQsIG5vLCB5b3UgZG8gbm90IGxlYXZlIHlvdXIgaG9tZSB3aGVuIHlvdXIgaW4gbGF3cyB2aXNpdCBBbWVyaWNhLiBUaGV5IHN0YXkgaW4gYSBob3RlbCwgd2hpY2ggdGhleSBwYXkgZm9yIHRoZW1zZWx2ZXMuIEtlZXAgeW91ciB3YWxsZXQgaW4geW91ciBiYWNrIHBvY2tldC4gCkFsYXMsIGhlIHRydXN0ZWQgaGltc2VsZiBtb3JlIHRoYW4gR29kJ3MgdHJ1ZSBwYXRoIGZvciBoaXMgc2FsdmF0aW9uLiAKRmluZCBTaW5nbGUgR2lybHMgRm9yIEdldCBMYWlkIFRvbmlnaHQgVGhlIEludGVybmV0LiAKSSd2ZSBjb21lIHRvIGJlbGlldmUgaXQganVzdCBlbmNvdXJhZ2VzIGEgc29jaWV0eSBvZiBhc3Nob2xlcy4gRm9yYmVhcmluZyB0aGF0IGJlaGF2aW9yIGlzIG5vIHN0cm9uZ2VyIHRoYW4gY2FsbWx5IGNhbGxpbmcgaXQgb3V0LCBzZXR0aW5nIGEgcmVhc29uYWJsZSBib3VuZGFyeSwgYW5kIGV4cGVjdGluZyBpdCB0byBiZSByZXNwZWN0ZWQuIFNvY2lhbGl6aW5nIGtpZHMgdG8gc2VlIHRoYXQgYXMgbm9ybWFsIGFuZCB0byBzdXBwb3J0IHRoZWlyIHBlZXJzIGluIHRoYXQgcHJvY2VzcyB3b3VsZCBsaWtlbHkgcmVzdWx0IGluIGEgbW9yZSBlbW90aW9uYWxseSBpbnRlbGxpZ2VudCBwb3B1bGFjZS4uIApJIG5ldmVyIGhhZCBhbiBpc3N1ZSB3aXRoIHRoaXMuIEkgYWN0dWFsbHkgYmVlbiBnaXZlbiB0aGUgaW5jb3JyZWN0IGFtb3VudCBiYWNrIGJlZm9yZSBhbmQgbGVmdCB0aGUgY2FzaW5vLiBUaGUgbmV4dCB0aW1lIEkgZW50ZXJlZCB0aGUgY2FzaW5vLCB0aGV5IGRpc2NvdmVyZWQgdGhleSBoYWQgZ2l2ZW4gbWUgdG9vIGxpdHRsZSBhbmQgZ2F2ZSBtZSB0aGUgcmVzdC4KWWFuaSBrYWRpbiBkZW1peW9ya2kgYmF5cmFrIEJpemFucyBnZWxtaXN0aXIgZGl5ZS4gVGVrIHNveWxlZGlnaSBidSBiYXlyYWdpbiBJc2xhbWNpbGFyIHRhcmFmaW5kYW4gYWRvcHQgZWRpbG1lc2l5bGUgQml6YW5zIGt1bGxhbmltaSBheW5pIHRhcmlobGVyZSBnZWxpeW9yIGRpeW9yLgpUaGVzZSBmaXJzdCBtYXNzIGJvb2sgYnVybmluZ3MgaW4gQW1lcmljYSB3YXMgYSBjb21wbGV0ZWx5IHVuc2F0aXNmYWN0b3J5IHJlc3BvbnNlIHRvIHRoZWlyIHRocmVhdCwgYXMgdG93bnNmb2xrIHF1aWNrbHkgdm90ZWQgd2l0aCB0aGVpciBwb2NrZXRib29rcywgd2hldGhlciB0aGVpciBzaGlydHNsZWV2ZXMgd2VyZSBidXJuZWQgaW4gdGhlIGNhdGFsb2cgZmlyZXMgb3Igbm90LCB0aGUgc21va2V5IGJ1cmRlbiBvZiBmcmVlIGVudGVycHJpc2UuIEl0IHdhcyB0aGUgbGVhc3Qgd2lzZSB3YXkgb2YgZmlnaHRpbmcgdGhpcyBuZXcgd2F2ZSBvZiBjb21wZXRpdGlvbiwgb2J2aW91c2x5LCBidXQgdGhlIGlkZWEgaGVsZCBlbm91Z2ggZmlyZXkgY2hhcm0gdG8gaGF2ZSBtYWRlIGl0c2VsZiBmZWx0IGluIHRoZSBwYWdlcyBvZiBoaXN0b3J5LiAKQy4gVmFjY2luZSByZXNpc3RhbmNlIGlzbid0IHJlYWxseSBhIHRoaW5nIGluIHdpbGQgdHlwZSBzdHJhaW5zLiAKQ2F0IFNhdmVzIEZsb3JpZGEgRmFtaWx5IEZyb20gQ2FyYm9uIE1vbm94aWRlIFBvaXNvbmluZwpTUzogVm94IGp1c3QgcmVsZWFzZWQgYW4gYXJ0aWNsZSBhYm91dCBwdXR0aW5nIGxpdGhpdW0sIGEgcHN5Y2hpYXRyaWMgZHJ1ZywgaW4gdGhlIHdhdGVyIHRvIHByZXZlbnQgc3VpY2lkZS4gRnJvbSB0aGUgYXJ0aWNsZSwgIlRoZXkgdGhpbmsgd2UgY291bGQgc2F2ZSB0ZW5zIG9mIHRob3VzYW5kcyBvZiBsaXZlcyBhIHllYXIgd2l0aCBhIHZlcnkgc2ltcGxlLCBsb3cgY29zdCBpbnRlcnZlbnRpb246IHB1dHRpbmcgc21hbGwgYW1vdW50cyBvZiBsaXRoaXVtLCBhbW91bnRzIGxpa2VseSB0b28gc21hbGwgdG8gaGF2ZSBzaWduaWZpY2FudCBzaWRlIGVmZmVjdHMsIGludG8gb3VyIGRyaW5raW5nIHdhdGVyLCB0aGUgd2F5IHdlIHB1dCBmbHVvcmlkZSBpbiB0byBwcm90ZWN0IG91ciB0ZWV0aC4iIFRoZXkgYXJlIGxpdGVyYWxseSB0cnlpbmcgdG8gYnJhaW53YXNoIHRoZSBwb3B1bGF0aW9uIGludG8gYWNjZXB0aW5nIGZvcmNlZCBtZWRpY2F0aW9uLi4gCkFuZCBoZXJlIGNvbWVzIHdoYXQgYnVncyBtZSBtb3N0IGFib3V0IGFsbCBvZiB0aGlzLCBpdCBhYnNvbHV0bHkgcmlkaWN1bG91cyB0byBqdXN0aWZ5IGl0IGFsbCBieSBzYXlpbmcgIml0IGEgZ2FtZSBhYm91dCBwaXJhdGVzIiwgbGlrZXdpc2UgdGhlIGNvbW1lbnQgIml0IHNlYSBvZiB0aGlldmVzLCBub3Qgc2VhIG9mIGZyaWVuZHMiLiAKVGhpcyBpcyBqdXN0IGhvdyB0aGVzZSBiaWcgYnVzaW5lc3MgdGl0YW5zIG9wZXJhdGU6IHBvc3R1cmUsIGF0dGFjaywgY291bnRlciBhdHRhY2sgYW5kLCB3aGVuIGFsbCB0aGF0IGZhaWxzLCBhY3R1YWxseSBuZWdvdGlhdGUsIGJ1dCBvbmx5IGF0IHRoZSAxMXRoIGhvdXIsIHdoZW4gY29uZGl0aW9ucyBhcmUgbWFkZSBmYXZvdXJhYmxlLi4gCkNvbWJpbmUgaW5ncmVkaWVudHMuIFVzZSBhcyBhIG1hc3NhZ2Ugb2lsIGFzIG5lZWRlZCwgb3IgYWRkIDEgb3IgMiB0ZWFzcG9vbnMgdG8geW91ciBiYXRoIG9yIDEgdGVhc3Bvb24gdG8gYSBmb290YmF0aC4gVG8gYWRkIHNvcGhpc3RpY2F0aW9uIGFuZCBhbiBleHRyYSBsaWZ0IHRvIHRoaXMgYmxlbmQsIGFkZCAxIGRyb3Agb2YgbmVyb2xpIGVzc2VudGlhbCBvaWwuIEZvciBjaGlsZHJlbiBsZXNzIHRoYW4gOCB5ZWFycyBvZiBhZ2UsIHVzZSBoYWxmIHRoZSBxdWFudGl0eSBvZiBlc3NlbnRpYWwgb2lsIHJlY29tbWVuZGVkLiBXaXRob3V0IHRoZSB2ZWdldGFibGUgb2lsLCB0aGlzIGNvbWJpbmF0aW9uIGNhbiBiZSB1c2VkIGluIGFuIGFyb21hdGhlcmFweSBkaWZmdXNlciwgc2ltbWVyaW5nIHBhbiBvZiB3YXRlciwgb3IgYSBwb3Rwb3VycmkgY29va2VyLCBvciB5b3UgY2FuIGFkZCBpdCB0byAyIG91bmNlcyBvZiB3YXRlciBmb3IgYW4gYWlyIHNwcmF5LiBVc2UgZGFpbHkgYW5kIGFzIG9mdGVuIGFzIHlvdSBsaWtlLgpWZXJpem9uIHdhcyBzdXBwb3NlZCB0byBiZSBmdWxseSByZWxlYXNlZCBpbiBRMSBvZiAyMDE5LCBydW1vcnMgd2hlcmUgRmViIGJ1dCB0aGF0IGNhbWUgYW5kIHBhc3QuIApJbiB0ZXJtcyBvZiBhcnR3b3JrIGFuZCBtYXRlcmlhbCBjdWx0dXJlLCBwZXJoYXBzLiAKV2UgZGRuIHJlYWxseSBmZWVsIGxrZSB3ZSBoYWQgYW55IG90aGVyIG9wdG9ucyBzbyB3ZSBkZCB0aGF0LiAKSSd2ZSBoYWQgc29tZSBvZiB0aGUgd29yc3QgYmVhdHMgb2YgbXkgbGlmZSB0aGUgcGFzdCB0d28gd2Vla3Mgd2l0aCB0b3RhbGx5IGRvbmtleXMgd2hvIGhhdmUgbm8gYnVzaW5lc3MgYmVpbmcgaW4gdGhlIHBvdCBhbmQgdGhlbiBnZXR0aW5nIGx1Y2t5LiAKVGhpcyBpcyBhIGtleSBhc3BlY3QgaW4gc2xvd2luZyB0aGUgYWdpbmcgcHJvY2VzcyBhbmQgcHJldmVudGluZyBkZWdlbmVyYXRpdmUgZGlzZWFzZXMsIGFzIHRoZSBtaXRvY2hvbmRyaWEgcmVzcG9uc2libGUgZm9yIEFUUCBlbmVyZ3kgcHJvZHVjdGlvbiBpcyBwcm9uZSB0byBkYW1hZ2UgZnJvbSBveHlnZW4gZnJlZSByYWRpY2Fscy4gV2hlbiB0aGlzIG9jY3VycywgaXRzIGFiaWxpdHkgdG8gcHJvZHVjZSBBVFAgZW5lcmd5IGZvciB0aGUgY2VsbCBjYW4gYmVjb21lIHNldmVyZWx5IGNvbXByb21pc2VkLCBsZWFkaW5nIHRvIGEgZGVjbGluZSBpbiBjZWxsdWxhciBmdW5jdGlvbi4uIApBcmd1YWJseSBvbmUgb2YgdGhlIG1vc3QgbW9yb25pYyB0aGluZ3MgSSd2ZSBldmVyIGhlYXJkLiBJZiBoZSBpcyA1JzcgaGUgd2lsbCBsaWtlbHkgZ2V0IHNtb2tlZCBieSA+OTklIG9mIHRoZSBwZW9wbGUgaW4gdGhlIE5CQSBhbmQgdGhpcyBpcyBjb21pbmcgZnJvbSBzb21lb25lIHdobyB0cmFpbmVkIEJKSiBmb3IgOCB5ZWFycyBhbmQgY29tcGV0ZWQgYXQgYSBoaWdoIGxldmVsLiBXaGVuIGRlYWxpbmcgd2l0aCBhbiBuYmEgcGxheWVyLCB0aGUgc2l6ZSBvZiB0aGUgQkpKIGd1eSBhYnNvbHV0ZWx5IGNvbWVzIGludG8gcGxheSBhbmQgNSc3IG9sZCBhbmQgc2NyYXdueSBpcyBlbnRpcmVseSB0b28gb3V0IG1hdGNoZWQuIApJbiB0d28gcGxheWVyIHplcm8gc3VtIGdhbWVzLCB0aGlzIGRvZXNuIGNvbWUgdXAgYmVjYXVzZSBhbnkgbGluZWFyIGNvbWJpbmF0aW9uIG9mIE5hc2ggZXF1aWxpYnJpYSBpcyBhbm90aGVyIE5hc2ggZXF1aWxpYnJpdW0uIApTYW50b3JpbiBnYW5raW5nIHRvcCBhIGxvdC4gVG8gbWUgQkIgZ2V0cyB0aWx0ZWQgaWYgdGhlIGVhcmx5IGdhbWUgZ29lcyBwb29ybHkuIEkgdGhpbmsgc2FmZSByYW5nZWQgcGlja3MgZm9yIG1pZCBhbmQgYm90LCBhbmQganVzdCBidXJ5aW5nIHRvcCBsYW5lIGlzIHRoZSB3YXkgdG8gZ28uIEdvb2QgdmlzaW9uIG9uIEFra2FkaWFuIGFzIHdlbGwsIHNpbmNlIGhlIGlzIGFnZ3Jlc3NpdmUgYW5kIGNhbiBlYXNpbHkgb3ZlcmV4dGVuZCBpbnRvIGEgYmFkIHNwb3QuIApQZW9wbGUgZ28gcXVpZXQgd2hlbiB5b3Ugc3BlYWsgYW5kIGZvY3VzIG9uIHlvdQpQZXJtYW5lbnQgZGFtYWdlIHBlcm1hbmVudCBzZXZlcmUgY2hyb25pYyBwYWluLiBNeSBkb2Mgc2F5cywgIkRlYWwgd2l0aCBpdC4iLiAKTnVtYmVyIG9mIGluZmx1ZW50aWFsIFJlcHVibGljYW4gbGF3bWFrZXJzLCBiYWNrZWQgYnkgU2hlbGRvbiBBZGVsc29uIHRocm91Z2ggcG9saXRpY2FsIGNhbXBhaWduIGNvbnRyaWJ1dGlvbnMsIGhhdmUgd2FudGVkIHRvIHNlZSB0aGUgV2lyZSBBY3QgcmVzdG9yZWQgdG8gaXRzIG9yaWdpbmFsIGludGVudC4gClRoZSBzZXF1ZW5jZSBvZiBjYXJkcyBpbiB0aGUgZ2FtZSBpcyBraW5nLCBxdWVlbiwgamFjaywgMTAsIDksIDgsIDcsIDYsIDUsIDQsIDMsIDIsIGFjZS5bN10gU28sIGZvciBpbnN0YW5jZSwgb24gYSBibGFjayBraW5nLCB5b3UgY291bGQgb25seSBwbGFjZSBhIHJlZCBxdWVlbi4gCkV2ZW4gdGhvdWdoIFJlYmVsbGluIGRvZXMgbm90IGdldCBhcyBuZXJ2b3VzIGFzIHNvbWUgb2YgdGhlIGZpcnN0IHllYXIgcHJvZmVzc2lvbmFscywKTXkgcGFyZW50cyBkaXZvcmNlZCB3aGVuIEkgd2FzIDQuIFNvIEkgd2FzIG9sZCBlbm91Z2ggdG8gcmVtZW1iZXIgdGhlbSB0b2dldGhlciBidXQgdG9vIHlvdW5nIHRvIGtub3cgd2hhdCB3YXMgZ29pbmcgb24uIApDaGFybGVzIFIuIApEdXJhYmlsaXR5OiBFeGVyY2lzZSBiYWxscyBjYW4gdmFyeSB3aWRlbHkgYW5kIG1vc3QgY29tcGFuaWVzIHdpbGwgcHV0IHRoZSB3ZWlnaHQgbGltaXQgb2YgdGhlIGJhbGwgb24gdGhlIHBhY2thZ2UuIFdlaWdodCBsaW1pdHMgY2FuIHJhbmdlIGZyb20gMjUwIHRvIG92ZXIgMTAwMCBwb3VuZHMuIElmIHlvdSBhcmUgdXNpbmcgdGhlIGJhbGwganVzdCBmb3IgYm9keXdlaWdodCBleGVyY2lzZXMgYW5kIGFyZSB1bmRlciAyNTAgcG91bmRzLCBqdXN0IGFib3V0IGFueSBiYWxsIHNob3VsZCBzdWZmaWNlLiBIaWdoZXIgZHVyYWJpbGl0eSBleGVyY2lzZSBiYWxscyBhcmUgcmVjb21tZW5kZWQgZm9yIHBlb3BsZSBsaWZ0aW5nIGhlYXZ5IHdlaWdodHMgb24gdGhlIGJhbGwuIExvd2VyIGR1cmFiaWxpdHkgYmFsbHMgYXJlIGdlbmVyYWxseSB0aGlubmVyIGFuZCBjcmVhdGUgbW9yZSBvZiBhIGNoYWxsZW5nZSBpbiB0ZXJtcyBvZiBiYWxhbmNlLgpTYXZpb3JTM0xGICAwIHBvaW50cyAgc3VibWl0dGVkIDQgeWVhcnMgYWdvCldlIGRyb3ZlIHBhc3QgdHdvIG1hc3NpdmUgZm9ybWF0aW9ucyBvZiBwb2xpY2UgdHJ1Y2tzIGFuZCBhcm1vdXJlZCBwZXJzb25uZWwgY2FycmllcnMsIGVhY2ggbWFkZSB1cCBvZiBubyBsZXNzIHRoYW4gMTUwIGZ1bGx5IGFybWVkIHBvbGljZW1lbiwgbHlpbmcgaW4gd2FpdC4gCkhlcmUgaXMgdGhlIGxpc3Qgb2Ygb3VyIDEwIGJlc3QgdG9wIHBva2VyIGhhbmRzIGZvciBUZXhhcyBIb2xkIEVtLiAoQSBxdWljayBub3RlLCB0aGlzIGlzIG91ciBsaXN0IGFuZCBvdGhlciBwcm9mZXNzaW9uYWwgcG9rZXIgbGlzdCdzIHRpcCBwb2tlciBoYW5kcyBtYXkgYmUgZGlmZmVyZW50LiBXaGF0IHdlIGtub3cgdGhyb3VnaCB5ZWFycyBvZiBvdXIgZXhwZXJpZW5jZSBpcyB3aGF0IHdlIGFyZSB3cml0aW5nIGRvd24gaGVyZS4gCkkgZG9uIGhhdmUgYW55IHNlYW1sZXNzIGJyYXMgcm4sIGJ1dCBJIHdhaXRpbmcgb24gYSBGcmV5YSBEZWNvIHRvIGFycml2ZSBpbiB0aGUgbWFpbCBzbyBJIGxldCB5b3Uga25vdyBob3cgdGhhdCBnb2VzLiBUaGUgbGFzdCBGcmV5YSBicmEgSSBoYWQgd2FzIGEgZGlzYXN0ZXIsIGJ1dCBJIHJlbWFpbiBob3BlZnVsLiAKSSBjYW4gc2F5IGZvciBjZXJ0YWluIGl0IGRvZXMsIGJ1dCBJIGNhbiBwb2ludCB0byBUaGlzIFN0dWR5IG9uIGlmIFJlbGlnaW9uIGxvd2VycyBTdWljaWRlIFJhdGVzIHRoYXQgY29uY2x1ZGVzICJUaGV5IGRvIGluIHRoZSBVUyBhbmQgUnVzc2lhLCBidXQgaXQgaW5jcmVhc2VzIHRoZW0gZWxzZXdoZXJlLiIgV2h5IFJ1c3NpYSBhbmQgdGhlIFVTIGFyZSBvdXRsaWVycyBpcyBhIGdyZWF0IHF1ZXN0aW9uLCBhbmQgc29tZSB0aGVvcml6ZSB0aGF0IGl0IG5vdCB0aGVtLCBidXQgQ2hyaXN0aWFuaXR5IHRoYXQgdGhlIG91dGxpZXIsIHNpbmNlIENocmlzdGlhbml0eSBpcyB0aGUgZG9taW5hbnQgcmVsaWdpb24gaW4gYm90aCBjb3VudGllcy4gCklmIHlvdSBhcmUgZmluZSB3aXRoIHRoZSBnYW1lIGJlY29taW5nIG5pY2hlIHdpdGggMmsgcGxheWVyIGJhc2UsIHN1cmUgbGV0IGdpdmUgaXQgc29tZSB0aW1lLiAKQnV0LCBmb3IgZXhhbXBsZSwgcGVvcGxlIGtub3cgaG93IHRvIGNhbGwgOTExIGZvciBlbWVyZ2VuY3kgc2VydmljZXMgKGF0IGxlYXN0IGhlcmUgaW4gdGhlIFVTKSwgYmVjYXVzZSBpdCBiZWVuIHRhdWdodCB0byB1cyBieSByb3RlIHNpbmNlIGNoaWxkaG9vZC4gU29tZW9uZSB3aG8gbmVlZHMgZW1lcmdlbmN5IHNlcnZpY2VzIG1pZ2h0IGJlIGFibGUgdG8gY2FsbCB0aGUgbnVtYmVyIHRoZW1zZWx2ZXMsIGJ1dCBvZnRlbiB0aGV5IGNhbm5vdCBhbmQgbmVlZCBzb21lb25lIGVsc2UgdG8gbWFrZSB0aGUgY2FsbCBmb3IgdGhlbS4KICBJdCBkb2Vzbid0IGV4YWN0bHkgc2VlbSBsaWtlIGhpZ2ggc3Rha2VzIGNhcmQgZ2FtZXMgYWx0aG91Z2ggdGVjaG5pY2FsbHkuIApUZWNobm9sb2d5IHBsYXlzIGFuIGltcG9ydGFudCByb2xlIGluIHRoZSBzdWNjZXNzIG9mIHByb2Nlc3Mgb2YgY29tbXVuaWNhdGlvbi4gCklJUkMgdGhlIGF2ZXJhZ2VzIG9uIHRoZXNlIHdlcmUgcHJldHR5IGhpZ2guVGhlcmUgd2VyZSBhbHNvIHdlZWtseSBob21ld29yayBhc3NpZ25tZW50cyB3aXRoIG1haW5seSBNQyBxdWVzdGlvbnMgdGhyb3VnaCBUb3AgSGF0LCBhbmQgaW4gY2xhc3MgVG9wIEhhdCBhY3Rpdml0aWVzLiAKRGVzIHZvbHV0aW9ucyBldCBkZXMgbXV0YXRpb25zIG9udCBldSBsaWV1LiAKSXQgZmVsdCBsaWtlIHRoZSBwb3dlciBidXR0b24gdGhpbmd5IG9uIGEgY29tcHV0ZXIuIFlvdSBwbHVnIHRob3NlIHRpbnkgcGx1Z3MgaW50byB0aGVpciBwaW5zIGFuZCBpZiB5b3UgZnVjayB1cCBpdCBqdXN0IGRvZXNuIHdvcmsgcHJvcGVybHkgYW5kIHlvdSBzd2l0Y2ggdGhlbSBhcm91bmQgYW5kIGxvb2sgYXQgdGhlIG1hbnVhbCBvbmNlIGFnYWluIGFuZCB0aGVyZSB5b3UgZ28gbm8gaGFybSBkb25lLi4gCklmIHlvdSBzaWduIGEgbGVhc2UgdGhhdCBzcGVjaWZpY2FsbHkgc3RhdGVzIHRoYXQgbm8gbm8gZHJ1ZyBvciBjcmltZSBhY3Rpdml0eSB3aWxsIG9jY3VyIHBlciBhIHNwZWNpZmljIGRlZmluaXRpb24gYmVjYXVzZSB0aGV5IGhvbGQgc3BlY2lmaWMgc3RhdGUgb3IgZmVkZXJhbCBjb250cmFjdHMgdG8gYWxsb3cgZ292ZXJubWVudCBlbXBsb3llZXMgb3IgbWlsaXRhcnkgcGVyc29ubmVsIHRvIHN0YXkgYXQgYSBsb3dlciBzZXQgcmF0ZS4gCkl0IGRvZXNuIGFueXRoaW5nIGZyb20gdGhlIG91dHNpZGUuIApUaGFpIEFpcndheXMgYW5kIE1hbGF5c2lhIEFpcmxpbmVzIGluIHBhcnRpY3VsYXIgaGF2ZSBiaWcgcHJvYmxlbXMgdXRpbGlzaW5nIHRoZWlyIEEzODBzIHByb3Blcmx5LCBhbmQgaXQgY291bGQgYmUgYXJndWVkIHRoYXQgbmVpdGhlciBhY3R1YWxseSBuZWVkIGFsbCA2LCBhcyAzIGZvcmVhY2ggb2YgdGhlbSB3b3VsZCBiZSBzdWZmaWNpZW50IChmb3IgdGhlaXIgdWx0cmEgbG9uZ2hhdWwgZmxpZ2h0cyB0byBQYXJpcyBhbmQgTG9uZG9uIHJlc3BlY3RpdmVseSkuLiAKU2NyZXcgdGhlIGtpZHMhLiAKSG93IGRvIEplZXAgYW5kIFRveW90YSBkbyB3aGF0IHRoZXkgZG8/ClRob3NlIHdobyB3aXNoIHRvIG1ha2UgYSBtZW1vcmlhbCBkb25hdGlvbiBhcmUgYXNrZWQgdG8gY29uc2lkZXIgU3QuIApTb21lIG1pZGRsZSBhZ2VkIHdvbWVuIHdhbGtpbmcgcGFzdCBpbW1lZGlhdGVseSBwaWNrZWQgdXAgb24gd2hhdCB3YXMgaGFwcGVuaW5nIGFuZCBvbmUgb2YgdGhlbSBzYWlkLCAiSGV5IGhvbmV5IHdvdWxkIHlvdSBsaWtlIHRvIHdhbGsgd2l0aCB1cyB0byB0aGUgbmV4dCBzdG9wPyIgVGhlbiBnbGFyZWQgYXQgdGhlIG1hbi4gCk5vc3RhbGdpYyBhbmQgaW5jcmVkaWJseSByZWNlcHRpdmUsIHRob3NlIGJvcm4gdW5kZXIgdGhlIHNpZ24gb2YgdGhlIGNyYWIgYXJlIGJvcm4gd2l0aCBhbiBlbW90aW9uYWwgc2l4dGggc2Vuc2UsIiBzYXlzIE1lc2EuIApJbiBzb21lIGhvbWUgZ2FtZXMsIGl0IGlzIGN1c3RvbWFyeSB0byB0aHJvdyBjaGlwcyBkaXJlY3RseSBpbnRvIHRoZSBwb3QuIEluIGEgcHVibGljIGNhcmQgcm9vbS4sIHRoaXMgaXMgY2F1c2UgZm9yIGRpcnR5IGxvb2tzLCBhIHJlcHJpbWFuZCBmcm9tIHRoZSBkZWFsZXIsIGFuZCBwb3NzaWJseSBzdG9wcGluZyB0aGUgZ2FtZSB0byBjb3VudCBkb3duIHRoZSBwb3QuIApMb3ZlIGdvb2QgSXRhbGlhbiBmb29kIGFuZCBzb21lIGRpcnR5IEFtZXJpY2FuIG5ldmVyIGdvZXMgYXdyeS4gR3Jvd2luZyB1cCB3aGVyZSBJIGRpZCB3YXMganVzdCBzdGVhaywgcGFybXkgYW5kIGJlZXIgc28gSSBoYXZlIGFuIGFwcHJlY2lhdGlvbiBmb3IgdGhlbS4KQ2FzaW5vcyBhbmQgR2VvcmdlIEVhc3RtYW4KVGhlcmUgYXJlIDMwIElIRyBicmFuZGVkIGhvdGVscyBpbiBTcGFpbiB3aXRoIHRocmVlIEludGVyQ29udGluZW50YWwgaG90ZWxzLCBvbmUgQ3Jvd25lIFBsYXphLCBmb3VyIEhvbGlkYXkgSW5uIGFuZCAyMiBIb2xpZGF5IElubiBFeHByZXNzIGhvdGVscy4gVGhlIFNwYW5pc2ggY2FwaXRhbCBvZiBNYWRyaWQgaGFzIDExIElIRyBicmFuZGVkIGhvdGVscy4gVGhlIGludHJvZHVjdGlvbiBvZiBIb3RlbCBJbmRpZ28gTWFkcmlkIGFuZCBDcm93bmUgUGxhemEgTWFkcmlkIEFpcnBvcnQgd2lsbCBtZWFuIGZpdmUgb2YgSUhHIGJyYW5kcyBhcmUgcmVwcmVzZW50ZWQgdGhlcmUuCjUuIEFubnVpdGllcyAgIFRoZXNlIGFyZSBlc3NlbnRpYWxseSBsaWZldGltZSBHSUNzIHdpdGggYSBsb2NrZWQgaW4gcmF0ZSB0aGF0IGJlY29tZXMgYSBtb250aGx5IHNvdXJjZSBvZiBjYXNoIGZsb3cuIFRoZXkgaGF2ZSBiZWVuIGxlc3MgcG9wdWxhciBkdWUgdG8gbG93IGludGVyZXN0IHJhdGVzLCBidXQgZm9yIHRob3NlIHdobyBib3VnaHQgQW5udWl0aWVzIHRoaXJ0eSB5ZWFycyBhZ28gYW5kIGFyZSBzdGlsbCBhbGl2ZSwgdGhleSB3aWxsIGRlZmluaXRlbHkgc2luZyB0aGVpciBwcmFpc2VzIGFzIGFuIG9wdGlvbiBmb3IgcmV0aXJlbWVudCBpbmNvbWUuLiAKV2FzIG9uZSBvZiB0aGUgYnVzaWVyIHBsYWNlcywgb2Z0ZW4gMTArIHRhYmxlcyBydW5uaW5nIGluIGV2ZW5pbmdzLiBUaGlzIGlzIHRoZSBraW5kIG9mIHBsYWNlIHRoYXQgYXR0cmFjdHMgZ3V5cyBidXlpbmcgaW4gZm9yIHRoZSBtYXhpbXVtIHdlYXJpbmcgamV3ZWwgZW5jcnVzdGVkIHdhdGNoZXMgb24gYm90aCB3cmlzdHMgYW5kIHNob3dpbmcgdGhlaXIgYnVkZGllcyBzaXR0aW5nIGJlaGluZCB0aGVtIHRoZWlyIGNhcmRzIGJlZm9yZSBzaG92aW5nIG9uIGEgYmx1ZmYuIApUaGluayBDYW5hZGlhbiBzaGFyZWhvbGRlcnMgYXJlIG1vcmUgYXB0IHRvIGxpc3RlbiB0byBhbiBhY3RpdmlzdCwgaGUgc2FpZC4KVG8gYmUgcGVyZmVjdGx5IGhvbmVzdCB3aXRoIHlvdSwgaGUgbm90IG15IGZhdm91cml0ZSBjb21lZGlhbiBhbmQgSSBoYXZlIGhlYXJkIHF1aXRlIGEgYml0IG9mIGNyaXRpY2lzbSBhYm91dCBoaW0gc28gaGUgcmVhbGx5IGRvZXNuIGdldCBhIGZyZWUgcGFzcy4gCiJJIGhhZCBhIGdvb2Qgd29yayByZWNvcmQuIEV4Y2VwdCBJIHdhcyBhIGNyb29rLiAKRGVsaXZlciB0byB5b3VyIC4gTG9vayBpbnNpZGUgdGhpcyBib29rLiBBYXJhbnlhIEthYW5kYW0gT3JpZ2luYWwgU2NyZWVucGxheSBieSBbS3VtYXJhcmFqYSwgVGhpYWdhcmFqYW5dLi4gCkFjY29yZGluZyB0byAyMDA1IGd1aWRlbGluZXMgaXNzdWVkIGJ5IHRoZSBWYXRpY2FuLCBhbnlvbmUgd2l0aCAiZGVlcCByb290ZWQgaG9tb3NleHVhbCB0ZW5kZW5jaWVzIiBvciB3aG8gc3VwcG9ydHMgZ2F5IHJpZ2h0cyBzaG91bGQgYmUgYmFycmVkIGZyb20gdGhlIHByaWVzdGhvb2QuIGxhc3Qgb25lIGlzIHBhcnRpY3VsYXJseSBkaXN0dXJiaW5nIHNpbmNlIG5vdyBpdCBub3QganVzdCBtZW4gd2hvIGFyZSBhdHRyYWN0ZWQgdG8gb3RoZXIgbWVuIHdobyBhcmUgYmFycmVkLCBidXQgbWVuIHdobyBiZWxpZXZlIGluIHNvY2lhbCBqdXN0aWNlICh3aGljaCBpcyBraW5kYSBnYXkgYW55d2F5KS4KV2l0aCB0aGUgYmFkIGxvYW5zIGdvbmUsIGFsbCB0aGUgYmFua3MgYmVjb21lIGdvb2QgYmFua3MuClNob3A6IEJ1eSByZWZyaWdlcmF0b3JzLCBpY2UgbWFrZXJzIGFuZCBvdGhlciBraXRjaGVuIGFwcGxpYW5jZXMgZm9yIGxlc3Mgd2l0aCBMb3dlIGNvdXBvbnMKQW5kIGxpa2UgdGhvc2Ugd2hvIGNhbWUgYmVmb3JlIGhpbSwgRm93bGVyIGlzIHRyeWluZyB0byBzZWUgdGhlIHN1bm55IHNpZGUgb2YgaXQuLiAKSXMgdGhpcyBvayBmb3IgZXhmb2xpYXRpb24gb3IgaXMgdGhpcyBkYW1hZ2luZyBteSBza2luPyBJcyB0aGVyZSBhIGJldHRlciB0aGluZyB0byBkbz8uIApOb3cgdGhpcyBpcyBlYXJseSBtb3JuaW5nIHNpbmNlIHdlIGdldCB1cCBhdCA0IGFtLiBJdCB3YXMgcmVhbGx5IHBvd2VyZnVsIGFyb3VuZCA3OjMwIGFtLiBJdCB0b29rIHVzIHVudGlsIDExOjEwIGFtIHRvIGZpbmQgdGhlIHByb2JsZW0uLiAKQW55IHRocmVhdCBoZSBzZW5kcyBjYWxsIHRoZSBwb2xpY2UgYW5kIGZpbGUgYSByZXBvcnQuIApEaWUgV2FobCBXb2huemltbWVyIE1iZWwsIGRpZSBpbiBNb2RlIGlzdCBtYW5jaG1hbCBzY2h3aWVyaWcsIGFiZXIgYmV3ZWlzZW4ga2FubiBlaW5mYWNoIHNlaW4sIHdlbm4gc2llIG1pdCBkZXIgcmljaHRpZ2VuIFBmbGVnZSB1bmQgR2VnZW5sZWlzdHVuZyBlcmZvbGd0LiAKQWZ0ZXIgYW5vdGhlciBraWxvbWV0cmUsIHRoZXJlJ3MgYSB3aWdnbGUgaW4gdGhlIHBhdGggYW5kIGl0IGdvZXMgaW50byBhIHdvb2RlZCBhcmVhLiAKSXQgYmVlbiBhIGxvbmcgdGltZSBzaW5jZSBJIGJlZW4gdG8gSGlsbHNib3JvIFZpbGxhZ2UsIGJ1dCBJIHJlbWVtYmVyIHRoZXJlIGJlaW5nIHNvbWUgYm91dGlxdWUgc2hvcHMgdGhlcmUuIApUcmVsaXZpbmcgc2FpZC4uIApBZnRlciBoZXIgaHVzYmFuZCdzIGRlYXRoLCBBbGljZSB3YXMgZm9yY2VkIG9uY2UgYWdhaW4gdG8gbWFrZSBhIGxpdmluZyBhdCB3aGF0IHNoZSBrbmV3IGJlc3QgICBnYW1ibGluZy4gCkFuZCB3aGF0IHdhcyB0aGUgZWNvbm9teSBydW4gb24/IFRyYWRlIGFuZCBtdWx0aW5hdGlvbmFscy4gSGUgYXNrZWQgbWFueSBxdWVzdGlvbnMuIApIdW50IGZvciBjbHVlcwpUaGVyZSBhcmUgbWFueSBwb2tlciBjb21wYW5pZXMgdGhhdCBwcm92aWRlIHBva2VyIGNoaXAgc2V0cy4gU29tZSBldmVuIG9mZmVyIGN1c3RvbWl6ZWQgcG9rZXIgY2hpcHMuIEhhdmUgeW91IGV2ZXIgc2VlbiBhIE1jIERvbmFsZCdzIGxvZ28gaW4gYSBwb2tlciBjaGlwPyBPciBhIHBpY3R1cmUgb2Ygc29tZW9uZSBlbHNlJ3MgZmFjZSBwcmludGVkIGluIGFub3RoZXI/IFRoZXNlIGFyZSBqdXN0IHNvbWUgb2YgdGhlIHBvc3NpYmlsaXRpZXMgaW4gYSBjdXN0b20gcG9rZXIgY2hpcCBzZXQuIFRoZXkgYXJlIG9mdGVuIHVzZWQgZm9yIGFkdmVydGlzaW5nIHByb2R1Y3RzLCB3aGlsZSBzb21lIG9mIHRoZW0gYXJlIHNwZWNpZmljYWxseSBkZXNpZ25lZCBieSBwb2tlciBmYW5hdGljcy4gU29tZSBwb2tlciBjaGlwcyBhcmUgbnVtYmVyZWQgd2hpbGUgc29tZSBvdGhlcnMgaGF2ZSBmbGFncyBvciBlbWJsZW1zIGltcHJpbnRlZCBvbiB0aGVtLgpNaXNzaXNzaXBwaSBHcmluZCBiZWdpbnMgaW4gRHVidXF1ZSwgSW93YSwgd2hlcmUgR2VycnkgKEJlbiBNZW5kZWxzb2huKSBoYXMgYm91Z2h0IGludG8gYSBwb2tlciB0b3VybmFtZW50IGFuZCBpcyBkZXNwZXJhdGVseSB0cnlpbmcgdG8gaW1wbGVtZW50IHRoZSBnYW1pbmcgYWR2aWNlIHRoYXQgcGxheXMgaW4gZW5kbGVzcyByb3RhdGlvbiBvbiBhbiBhdWRpbyBib29rIGluIGhpcyBjYXIuIFN1ZGRlbmx5LCB0aGUgdGFibGUgaXMgam9pbmVkIGJ5IHRoZSBmYXN0IHRhbGtpbmcgQ3VydGlzIChSZXlub2xkcyksIHdobyBwdW5jdHVhdGVzIGV2ZXJ5IGJpZCB3aXRoIGEgcXVpY2sgYW5lY2RvdGUgb3IgYSBqb2tlLgpXaGF0IGRvIHlvdSBtZWFuIEkgcHJvdmlkZWQgbm90aGluZz8gV2FudCBtb3JlIHN0dWRpZXMgdGhhdCBjb250cmFkaWN0IHlvdXIgYW5lY2RvdGFsICJldmlkZW5jZSI/IEFscmlnaHQsIGhlcmUgYW5vdGhlciBvbmU6SSBoYXZlbiBiZWVuIGRlZmxlY3RpbmcgYW55dGhpbmcsIG5vdCBzdXJlIHlvdSBrbm93IHdoYXQgdGhhdCB3b3JkIG1lYW5zIGluIGEgcmhldG9yaWNhbCBzZW5zZS4gSSBtZXQgYWxsIHlvdXIgcG9pbnRzIHRoYXQgeW91IHRyeSB0byBtYWtlLCBhbmQgdGhlIHNpbmdsZSBwb2ludCB0aGF0IHlvdSBiZWVuIGFibGUgdG8gZm9sbG93IHRocm91Z2ggb24gICB0aHJvdWdoIHRoZXNlIG1lbnRhbCBneW1uYXN0aWNzICAgdHJ5aW5nIHRvIGNvbnZpbmNlIG1lIHRoYXQgYSBsaXR0bGUgYml0IG9mIGhlbHAgaXMgd29yc2UgdGhhbiBubyBoZWxwLiBXaGljaCBJIGp1c3QgZG9uIGFncmVlIHdpdGgsIHNpbXBsZSBhcyB0aGF0LiBBbmQgbm8sIEkgd29uIGNoYW5nZSB0aGF0IGJlbGllZiBiZWNhdXNlICAgd2hhdCAgIGEgdm9jYWwgbWlub3JpdHkgb2YgYWJvdXQgMTAgcGVvcGxlIG9uIHJlZGRpdCB0aGluayBpdCBhbm5veWluZz8KQ2VsZWJyaXR5IHJhZ3Mgb2ZmZXIgb3RoZXIgbGVzc29ucyBhcyB3ZWxsLiAKSWYgeW91IG5vdCBkb2luZyBCbGluayBzaG9wcGluZywgeW91IGNhbiBjb21wbGFpbiBhYm91dCB0aGUgc3RvcmUgbGluZSAgIHRob3NlIHBlb3BsZSBhcmUgY2hvb3NpbmcgdG8gYmUgdGhlcmUuIE1vc3Qgb2YgdGhlIG1vc3QgcG9wdWxhciBzdHVmZiAoZXNwZWNpYWxseSBrZXkgYXJ0IHN0dWZmKSBoYXMgYWx3YXlzIHNvbGQgb3V0IGJ5IHRoZSBjbG9zZSBvZiB0aGUgb3BlbmluZyBjZXJlbW9ueS4gClRoZSBqdXJ5IGNvdWxkIG5vdCByZWFjaCBhIHZlcmRpY3Qgb24gYSBmdXJ0aGVyIDExIGNvdW50cy4gSXQgYSB2aXJ0dWFsIGNlcnRhaW50eSB0aGF0IGhlIHdpbGwgZmFjZSB0aG9zZSBjaGFyZ2VzIGFnYWluIGF0IGEgbGF0ZXIgZGF0ZS4gSW4gb3RoZXIgd29yZHMsIHRoaXMgaXNuIG92ZXIgeWV0LiBFRElUOiBBcyBzb21lb25lIG1lbnRpb25lZCBiZWxvdywgaGUgc3Vic2VxdWVudGx5IHBsZWFkZWQgZ3VpbHR5IHRvIHRob3NlLgpTY2h1bHR6IGlzIHRoZSBDaGljYWdvIEJ1cmVhdSBDaGllZiBhdCBBZCBBZ2UgYW5kIGNvdmVycyBiZXZlcmFnZSwgYXV0b21vdGl2ZSBhbmQgc3BvcnRzIG1hcmtldGluZy4gCg==|<---