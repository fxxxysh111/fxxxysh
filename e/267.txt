<!DOCTYPE html>
<html class="no-js" lang="en-US" prefix="og: http://ogp.me/ns#">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="en_US" property="og:locale">
   <meta content="article" property="og:type">
    <meta content="BOSS Programs - Building Opportunities for Self-Sufficiency" property="og:title">
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="page-template page-template-template-map page-template-template-map-php page page-id-162 woocommerce-no-js boss-programs">
  <header class="navbar navbar-inverse banner" role="banner">
   <div class="container">
    <div class="row" id="topnav-wrap">
     <nav id="top-menu">
      <form action="/" class="search-form form-inline" method="get" role="search">
       <div class="input-group">
        <label class="hide">
         Search for:
        </label>
        <span class="input-group-btn">
         <button class="search-submit btn btn-default" type="submit">
          Search
         </button>
        </span>
       </div>
      </form>
      <ul>
       <li>
        [link]
        
       </li>
       <li>
        <ul class="social-links">
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/turnlivesaround" id="tweet" target="_blank">
          </a>
         </li>
         <li>
          <a href="/user/casboss" id="youtube" target="_blank">
          </a>
         </li>
        </ul>
       </li>
      </ul>
     </nav>
    </div>
    <div class="row">
     <a class="navbar-brand" href="/">
     </a>
    </div>
    <div id="main-nav-wrap">
     <ul class="nav nav-pills" id="menu-primary-navigation">
      <li class="dropdown menu-who-we-are">
       <a class="dropdown-toggle" data-target="#" data-toggle="dropdown" href="/who-we-are/">
        Who We Are
        <b class="caret">
        </b>
       </a>
       <ul class="dropdown-menu">
        <li class="menu-mission-history">
         [ahref]
         
        </li>
        <li class="menu-leadership">
         [link]
         
        </li>
        <li class="menu-board-of-directors">
         <a href="/who-we-are/board-of-directors/">
          Board of Directors
         </a>
        </li>
       </ul>
      </li>
      <li class="active dropdown menu-what-we-do">
       <a class="dropdown-toggle" data-target="#" data-toggle="dropdown" href="/who-we-serve/">
        What We Do
        <b class="caret">
        </b>
       </a>
       <ul class="dropdown-menu">
        <li class="menu-who-we-serve">
         <a href="/who-we-serve/who-we-serve/">
          Who We Serve
         </a>
        </li>
        <li class="active menu-boss-programs">
         <a href="/boss-programs/">
          BOSS Programs
         </a>
        </li>
       </ul>
      </li>
      <li class="dropdown menu-take-action">
       <a class="dropdown-toggle" data-target="#" data-toggle="dropdown" href="/take-action/">
        Take Action
        <b class="caret">
        </b>
       </a>
       <ul class="dropdown-menu">
        <li class="menu-conference-room-rental">
         [ahref]
         
        </li>
        <li class="menu-donate">
         <a href="/take-action/donate/">
          Donate
         </a>
        </li>
        <li class="menu-join-the-board-of-directors">
         [link]
         
        </li>
        <li class="menu-partners-supporters">
         [ahref]
         
        </li>
        <li class="menu-volunteer-opportunities">
         <a href="/job-type/volunteer/">
          Volunteer Opportunities
         </a>
        </li>
       </ul>
      </li>
      <li class="dropdown menu-whats-new">
       [link]
       
       <ul class="dropdown-menu">
        <li class="menu-events">
         [ahref]
         
        </li>
        <li class="menu-latest-news">
         [ahref]
         
        </li>
        <li class="menu-job-opportunities">
         [ahref]
         
        </li>
        <li class="menu-press-room">
         [ahref]
         
        </li>
       </ul>
      </li>
      <li class="nav-button menu-donate">
       <a href="/take-action/donate/">
        Donate
       </a>
      </li>
     </ul>
    </div>
   </div>
  </header>
  <div id="top-link" style="width:100%;">
   <div class="mapp-layout mapp-align-default" id="mapp0_layout" style="width: 100%; border: 1px solid #000000; ">
    <div class="mapp-map-links" id="mapp0_links">
    </div>
    <div class="mapp-dialog" id="mapp0_dialog">
    </div>
    <div class="mapp-canvas" id="mapp0" style="width: 100%; height: 300px; ">
    </div>
    <div class="mapp-directions" id="mapp0_directions" style="width:100%">
    </div>
   </div>
  </div>
  <div class="wrap container" role="document">
   <div class="content row">
    <main class="main col-md-9" role="main">
     <div class="page-header">
      <h1>
       <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
      </h1>
     </div>
     <div class="entry-content-asset">
      <iframe allowfullscreen="" frameborder="0" height="641" src="https://www.youtube.com/embed/5hEQ852f_Zs?feature=oembed" width="1140">
      </iframe>
     </div>
     <p>
      For 45 years BOSS has worked to fight poverty, homelessness and injustice, and to bring love, hope, and support to families and individuals in need – Please watch and Share the following video marking 45 years of service to our community![ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][link]<li>[ahref]</li>[link]<li>[link]</li>[ahref][ahref][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
     </p>
     <p>
      [search]<li>[search]</li>[ahref][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
     </p>
     <div class="mapp-poi-list" id="mapp0_poi_list" style="width:100%">
     </div>
    </main>
    <aside class="sidebar col-md-3" role="complementary">
     <div id="aside-wrap">
      <section class="widget custom-menu-wizard-5 widget_custom_menu_wizard">
       <h3>
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <ul class="menu-widget " data-cmws='{"menu":2,"branch":"current","start_at":"2","depth":1,"depth_rel_current":1,"exclude":"50,49,48","title_from":"branch1","siblings":1}' data-cmwv="3.1.4" id="menu-primary-navigation-1">
        <li class="cmw-level-1 cmw-an-included-sibling menu-who-we-serve">
         [link]
         
        </li>
        <li class="active cmw-level-1 cmw-menu-item-had-children cmw-current-item menu-boss-programs">
         <a href="/boss-programs/">
          BOSS Programs
         </a>
        </li>
       </ul>
      </section>
      <section class="widget woocommerce_widget_cart-3 woocommerce widget_shopping_cart">
       <h3>
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <div class="hide_cart_widget_if_empty">
        <div class="widget_shopping_cart_content">
        </div>
       </div>
      </section>
      <section class="widget recent-posts-3 widget_recent_entries">
       <h3>
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <ul>
        <li>
         [link]
         
         <span class="post-date">
          December 3, 2018
         </span>
        </li>
        <li>
         <a href="/news/new-home-new-start/">
          A New Home, and a New Start
         </a>
         <span class="post-date">
          November 27, 2018<li>[link]</li>[ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li><li>[search]</li>[link][ahref]<li>[link]</li>
         </span>
        </li>
        <li>
         [ahref]
         
         <span class="post-date">
          November 7, 2018<li>[link]</li>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>
         </span>
        </li>
        <li>
         <a href="/news/2018-ctec-graduation-best-graduation-yet/">
          2018 CTEC Graduation – The Best Graduation Yet!
         </a>
         <span class="post-date">
          October 31, 2018
         </span>
        </li>
        <li>
         <a href="/news/boss-ebaldc-ebho-address-resident-leadership-council/">
          BOSS, EBALDC and EBHO address Resident Leadership Council
         </a>
         <span class="post-date">
          October 18, 2018
         </span>
        </li>
       </ul>
      </section>
     </div>
    </aside>
   </div>
   <footer class="content-info" role="contentinfo">
    <div class="row" id="footer-widgets">
     <section class="widget text-2 widget_text col-sm-4">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="textwidget">
       <h4>
        PARTICIPANTS
       </h4>
       <ul>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/participant-classes/" target="_blank">
          Classes
         </a>
        </li>
       </ul>
       <hr/>
       <h4>
        STAFF
       </h4>
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/?page_id=900">
          Forms
         </a>
        </li>
       </ul>
      </div>
     </section>
     <section class="widget gform_widget-4 gform_widget col-sm-4">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="gf_browser_unknown gform_wrapper" id="gform_wrapper_8" style="display:none">
       [link]
       
       <form action="/boss-programs/#gf_8" enctype="multipart/form-data" id="gform_8" method="post">
        <div class="gf_page_steps" id="gf_page_steps_8">
         <div class="gf_step gf_step_active gf_step_first" id="gf_step_8_1">
          <span class="gf_step_number">
           1[search][link][link][ahref][ahref][ahref]<li>[search]</li>[ahref][ahref]
          </span>
          <span class="gf_step_label">
           Details
          </span>
         </div>
         <div class="gf_step gf_step_next gf_step_pending" id="gf_step_8_2">
          <span class="gf_step_number">
           2
          </span>
          <span class="gf_step_label">
           Personal Info<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[search]</li>[search][search][search][search][search][search]
          </span>
         </div>
         <div class="gf_step gf_step_last gf_step_pending" id="gf_step_8_3">
          <span class="gf_step_number">
           3
          </span>
          <span class="gf_step_label">
           Payment
          </span>
         </div>
         <div class="gf_step_clear">
         </div>
        </div>
        <div class="gform_body">
         <div class="gform_page" id="gform_page_8_1">
          <div class="gform_page_fields">
           <ul class="gform_fields top_label form_sublabel_below description_below" id="gform_fields_8">
            <li class="gfield gfield_price gfield_price_8_1 gfield_product_8_1 gfield_contains_required field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_1">
             <label class="gfield_label" for="input_8_1">
              Donation
              <span class="gfield_required">
               *
              </span>
             </label>
             <div class="ginput_container ginput_container_product_price">
             </div>
            </li>
            <li class="gfield gfield_price gfield_price_8_1 gfield_option_8_1 gfield_contains_required field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_13">
             <label class="gfield_label" for="input_8_13">
              Frequency
              <span class="gfield_required">
               *
              </span>
             </label>
             <div class="ginput_container ginput_container_select">
              <select aria-invalid="false" aria-required="true" class="medium gfield_select" id="input_8_13" name="input_13" tabindex="2">
               <option value="1|0">
                One-time
               </option>
               <option value="12|0">
                Monthly
               </option>
               <option value="4|0">
                Quarterly
               </option>
               <option value="365|0">
                Annual
               </option>
              </select>
             </div>
            </li>
            <li class="gfield gfield_price gfield_price_8_1 gfield_option_8_1 field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_3">
             <label class="gfield_label">
              Do you want to give your donation a special purpose?
             </label>
             <div class="ginput_container ginput_container_radio">
              <ul class="gfield_radio" id="input_8_3">
               <li class="gchoice_8_3_0">
                <label for="choice_8_3_0" id="label_8_3_0">
                 Yes
                </label>
               </li>
               <li class="gchoice_8_3_1">
                <label for="choice_8_3_1" id="label_8_3_1">
                 No
                </label>
               </li>
              </ul>
             </div>
            </li>
            <li class="gfield gsection field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_4">
             <h2 class="gsection_title">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
            </li>
            <li class="gfield gfield_price gfield_price_8_1 gfield_option_8_1 field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_5">
             <label class="gfield_label" for="input_8_5">
              I want my donation to be designated toward:
             </label>
             <div class="ginput_container ginput_container_select">
              <select aria-invalid="false" class="medium gfield_select" id="input_8_5" name="input_5" tabindex="5">
               <option selected="selected" value="Where most needed|0">
                Where most needed
               </option>
               <option value="Rising Stars 2015|0">
                Rising Stars 2015
               </option>
               <option value="Housing|0">
                Housing
               </option>
               <option value="Health|0">
                Health
               </option>
               <option value="Social Justice|0">
                Social Justice
               </option>
               <option value="Children's Learning Center|0">
                Children's Learning Center
               </option>
               <option value="Berkeley Lions (pass-through)|0">
                Berkeley Lions (pass-through)
               </option>
               <option value="Youth Artworks (pass-through)|0">
                Youth Artworks (pass-through)
               </option>
              </select>
             </div>
            </li>
            <li class="gfield field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_6">
             <label class="gfield_label" for="input_8_6">
              I want my donation to be dedicated to:
             </label>
             <div class="ginput_container ginput_container_text">
             </div>
            </li>
           </ul>
          </div>
          <div class="gform_page_footer">
          </div>
         </div>
         <div class="gform_page" id="gform_page_8_2" style="display:none;">
          <div class="gform_page_fields">
           <ul class="gform_fields top_label form_sublabel_below description_below" id="gform_fields_8_2">
            <li class="gfield gfield_contains_required field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_9">
             <label class="gfield_label gfield_label_before_complex" for="input_8_9_3">
              Name
              <span class="gfield_required">
               *
              </span>
             </label>
             <div class="ginput_complex ginput_container no_prefix has_first_name no_middle_name has_last_name no_suffix gf_name_has_2 ginput_container_name" id="input_8_9">
              <span class="name_first" id="input_8_9_3_container">
               <label for="input_8_9_3">
                First
               </label>
              </span>
              <span class="name_last" id="input_8_9_6_container">
               <li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]
              </span>
              <div class="gf_clear gf_clear_complex">
              </div>
             </div>
            </li>
            <li class="gfield gfield_contains_required field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_10">
             <label class="gfield_label gfield_label_before_complex" for="input_8_10_1">
              Address
              <span class="gfield_required">
               *[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[link]<li>[link]</li>[search][search][search][link]
              </span>
             </label>
             <div class="ginput_complex ginput_container has_street has_street2 has_city has_state has_zip has_country ginput_container_address gfield_trigger_change" id="input_8_10">
              <span class="ginput_full address_line_1" id="input_8_10_1_container">
               <label for="input_8_10_1" id="input_8_10_1_label">
                Street Address
               </label>
              </span>
              <span class="ginput_left address_city" id="input_8_10_3_container">
               <li>[link]</li><li>[ahref]</li><li>[search]</li><li>[link]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][search][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][search]
              </span>
              <span class="ginput_right address_state" id="input_8_10_4_container">
               <select id="input_8_10_4" name="input_10.4" tabindex="12">
                <option value="">
                </option>
                <option value="Alabama">
                 Alabama
                </option>
                <option value="Alaska">
                 Alaska
                </option>
                <option value="Arizona">
                 Arizona
                </option>
                <option value="Arkansas">
                 Arkansas
                </option>
                <option selected="selected" value="California">
                 California
                </option>
                <option value="Colorado">
                 Colorado
                </option>
                <option value="Connecticut">
                 Connecticut
                </option>
                <option value="Delaware">
                 Delaware
                </option>
                <option value="District of Columbia">
                 District of Columbia
                </option>
                <option value="Florida">
                 Florida
                </option>
                <option value="Georgia">
                 Georgia
                </option>
                <option value="Hawaii">
                 Hawaii
                </option>
                <option value="Idaho">
                 Idaho
                </option>
                <option value="Illinois">
                 Illinois
                </option>
                <option value="Indiana">
                 Indiana
                </option>
                <option value="Iowa">
                 Iowa
                </option>
                <option value="Kansas">
                 Kansas
                </option>
                <option value="Kentucky">
                 Kentucky
                </option>
                <option value="Louisiana">
                 Louisiana
                </option>
                <option value="Maine">
                 Maine
                </option>
                <option value="Maryland">
                 Maryland
                </option>
                <option value="Massachusetts">
                 Massachusetts
                </option>
                <option value="Michigan">
                 Michigan
                </option>
                <option value="Minnesota">
                 Minnesota
                </option>
                <option value="Mississippi">
                 Mississippi
                </option>
                <option value="Missouri">
                 Missouri
                </option>
                <option value="Montana">
                 Montana
                </option>
                <option value="Nebraska">
                 Nebraska
                </option>
                <option value="Nevada">
                 Nevada
                </option>
                <option value="New Hampshire">
                 New Hampshire
                </option>
                <option value="New Jersey">
                 New Jersey
                </option>
                <option value="New Mexico">
                 New Mexico
                </option>
                <option value="New York">
                 New York
                </option>
                <option value="North Carolina">
                 North Carolina
                </option>
                <option value="North Dakota">
                 North Dakota
                </option>
                <option value="Ohio">
                 Ohio
                </option>
                <option value="Oklahoma">
                 Oklahoma
                </option>
                <option value="Oregon">
                 Oregon
                </option>
                <option value="Pennsylvania">
                 Pennsylvania
                </option>
                <option value="Rhode Island">
                 Rhode Island
                </option>
                <option value="South Carolina">
                 South Carolina
                </option>
                <option value="South Dakota">
                 South Dakota
                </option>
                <option value="Tennessee">
                 Tennessee
                </option>
                <option value="Texas">
                 Texas
                </option>
                <option value="Utah">
                 Utah
                </option>
                <option value="Vermont">
                 Vermont
                </option>
                <option value="Virginia">
                 Virginia
                </option>
                <option value="Washington">
                 Washington
                </option>
                <option value="West Virginia">
                 West Virginia
                </option>
                <option value="Wisconsin">
                 Wisconsin
                </option>
                <option value="Wyoming">
                 Wyoming
                </option>
                <option value="Armed Forces Americas">
                 Armed Forces Americas
                </option>
                <option value="Armed Forces Europe">
                 Armed Forces Europe
                </option>
                <option value="Armed Forces Pacific">
                 Armed Forces Pacific
                </option>
               </select>
               <label for="input_8_10_4" id="input_8_10_4_label">
                State
               </label>
              </span>
              <span class="ginput_left address_zip" id="input_8_10_5_container">
               <label for="input_8_10_5" id="input_8_10_5_label">
                ZIP Code
               </label>
              </span>
              <div class="gf_clear gf_clear_complex">
              </div>
             </div>
            </li>
            <li class="gfield gfield_contains_required field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_11">
             <label class="gfield_label" for="input_8_11">
              Email
              <span class="gfield_required">
               *<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]
              </span>
             </label>
             <div class="ginput_container ginput_container_email">
             </div>
            </li>
            <li class="gfield field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_14">
             <label class="gfield_label">
              Anonymous Donations
             </label>
             <div class="ginput_container ginput_container_checkbox">
              <ul class="gfield_checkbox" id="input_8_14">
               <li class="gchoice_8_14_1">
                <label for="choice_8_14_1" id="label_8_14_1">
                 Please check this box if you'd like your donation to be anonymous.
                </label>
               </li>
              </ul>
             </div>
            </li>
           </ul>
          </div>
          <div class="gform_page_footer">
          </div>
         </div>
         <div class="gform_page" id="gform_page_8_3" style="display:none;">
          <div class="gform_page_fields">
           <ul class="gform_fields top_label form_sublabel_below description_below" id="gform_fields_8_3">
            <li class="gfield gfield_contains_required field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_12">
             <label class="gfield_label gfield_label_before_complex" for="input_8_12_1">
              Credit Card
              <span class="gfield_required">
               *<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]
              </span>
             </label>
             <div class="ginput_complex ginput_container ginput_container_creditcard" id="input_8_12">
              <span class="ginput_full" id="input_8_12_1_container">
               <div class="gform_card_icon_container gform_card_icon_style1">
                <div class="gform_card_icon gform_card_icon_amex">
                 American Express
                </div>
                <div class="gform_card_icon gform_card_icon_discover">
                 Discover
                </div>
                <div class="gform_card_icon gform_card_icon_mastercard">
                 MasterCard
                </div>
                <div class="gform_card_icon gform_card_icon_visa">
                 Visa
                </div>
               </div>
               <label for="input_8_12_1" id="input_8_12_1_label">
                Card Number
               </label>
              </span>
              <span class="ginput_full ginput_cardextras" id="input_8_12_2_container">
               [link]<li>[link]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[ahref][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li>
              </span>
              <span class="ginput_full" id="input_8_12_5_container">
               [search]<li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[link]</li>
              </span>
             </div>
            </li>
            <li class="gfield gform_validation_container field_sublabel_below field_description_below gfield_visibility_visible" id="field_8_15">
             <label class="gfield_label" for="input_8_15">
              Phone
             </label>
             <div class="ginput_container">
             </div>
             <div class="gfield_description">
              This field is for validation purposes and should be left unchanged.
             </div>
            </li>
           </ul>
          </div>
          <div class="gform_page_footer top_label">
          </div>
         </div>
        </div>
       </form>
      </div>
     </section>
     <section class="widget text-4 widget_text col-sm-4">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="textwidget">
       <p>
        Are you homeless, disabled, or low-income and looking for assistance?
       </p>
       <p>
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[link]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
       </p>
      </div>
     </section>
    </div>
    <div class="row" id="very-bottom">
     <nav id="footer-nav">
      <ul class="nav nav-pills" id="menu-footer-links">
       <li class="menu-privacy-policy">
        [ahref]
        
       </li>
       <li class="menu-sitemap">
        [ahref]
        
       </li>
      </ul>
     </nav>
     <p id="copyright">
      <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[link]</li><li>[ahref]</li>[ahref]
     </p>
    </div>
   </footer>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0270
  </b>
 </body>
</html>
