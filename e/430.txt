<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="text/css" http-equiv="Content-Style-Type"/>
  <meta content="text/javascript" http-equiv="Content-Script-Type"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="Keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="Description"/>
 </head>
 <body>
  <div id="container">
   <div id="container-wrap">
    <div id="header-area">
     <div id="header-logo">
      <a href="/kr/">
      </a>
     </div>
     <div id="header-nav-block">
      <div id="header-utility">
       <ul>
        <li>
         <a href="/kr/inquiry/">
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <ul id="header-word-select">
        <li class="first-child">
         [link]
         
        </li>
        <li>
         <a href="/en/">
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
      <div id="global-nav">
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/kr/board/index">
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/kr/company/">
         </a>
        </li>
       </ul>
      </div>
     </div>
     <ul id="topic-path">
      <li class="first-child">
       <a href="/kr/">
        HOME
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       <a href="/kr/bus_services/haneda/index">
        하네다공항선
       </a>
      </li>
      <li>
       [ahref]
       
      </li>
      <li class="stay">
       <em>
        JR치바역 서쪽출구
       </em>
      </li>
     </ul>
    </div>
    <hr/>
    <div id="contents-area">
     <div id="contents-body">
      <div id="main-contents">
       <h1 class="design-01">
        <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
       </h1>
       <div id="main-body">
        <div class="tab-nav-block">
         <ul>
          <li>
           <a href="/kr/platform_searches/index/3/152">
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
         <p>
          <a href=")" onclick="print();return false;">
          </a>
         </p>
         <div class="tab-text">
          JR치바역 서쪽출구 <출발> → 하네다공항<도착>
         </div>
        </div>
        <div class="anchor-link">
         <ul>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
        <div class="section">
         <p class="win-icon">
          [link]
          
         </p>
         <h2 class="design-02" id="timetable">
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         <div class="note-block">
          <ul class="note-02">
           <li>
            ※운행시간표의 도착시각은 예상시간입니다. 도로사정에 의해 연착하는 경우가 있으므로, 여유를 가지고 이용해 주십시오.
           </li>
           <li>
            ※연착등으로 인해 발생한 피해등에 관해서는, 운행회사에서 책임지지 않으므로 양해 바랍니다.
           </li>
          </ul>
         </div>
         <table border="0" cellpadding="0" cellspacing="0" class="table-layout-01">
          <colgroup>
           <col width="18%"/>
           <col width="2%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
          </colgroup>
          <tr>
           <th class="c-rborder">
            JR치바역 서쪽출구
           </th>
           <th class="time-table-layout">
           </th>
           <th class="c-center element-top">
            04:35
           </th>
           <th class="c-center element-top">
            05:02
           </th>
           <th class="c-center element-top">
            05:32
           </th>
           <th class="c-center element-top">
            05:52
           </th>
           <th class="c-center element-top">
            06:12
           </th>
           <th class="c-center element-top">
            06:45
           </th>
           <th class="c-center element-top">
            07:15
           </th>
           <th class="c-center element-top">
            07:45
           </th>
           <th class="c-center element-top">
            08:35
           </th>
           <th class="c-center element-top">
            09:20
           </th>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항제2터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            05:50
           </td>
           <td class="element-top">
            06:17
           </td>
           <td class="element-top">
            06:50
           </td>
           <td class="element-top">
            07:17
           </td>
           <td class="element-top">
            07:37
           </td>
           <td class="element-top">
            08:23
           </td>
           <td class="element-top">
            08:40
           </td>
           <td class="element-top">
            09:07
           </td>
           <td class="element-top">
            10:10
           </td>
           <td class="element-top">
            10:42
           </td>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항제1터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            05:55
           </td>
           <td class="element-top">
            06:22
           </td>
           <td class="element-top">
            06:55
           </td>
           <td class="element-top">
            07:22
           </td>
           <td class="element-top">
            07:42
           </td>
           <td class="element-top">
            08:28
           </td>
           <td class="element-top">
            08:45
           </td>
           <td class="element-top">
            09:12
           </td>
           <td class="element-top">
            10:15
           </td>
           <td class="element-top">
            10:47
           </td>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항국제선터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            06:02
           </td>
           <td class="element-top">
            06:29
           </td>
           <td class="element-top">
            07:02
           </td>
           <td class="element-top">
            07:29
           </td>
           <td class="element-top">
            07:49
           </td>
           <td class="element-top">
            08:35
           </td>
           <td class="element-top">
            08:52
           </td>
           <td class="element-top">
            09:19
           </td>
           <td class="element-top">
            10:22
           </td>
           <td class="element-top">
            10:54
           </td>
          </tr>
         </table>
         <p class="element-right">
          [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>[ahref][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>
         </p>
         <table border="0" cellpadding="0" cellspacing="0" class="table-layout-01">
          <colgroup>
           <col width="18%"/>
           <col width="2%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
          </colgroup>
          <tr>
           <th class="c-rborder">
            JR치바역 서쪽출구
           </th>
           <th class="time-table-layout">
           </th>
           <th class="c-center element-top">
            09:42
           </th>
           <th class="c-center element-top">
            10:15
           </th>
           <th class="c-center element-top">
            10:50
           </th>
           <th class="c-center element-top">
            11:15
           </th>
           <th class="c-center element-top">
            11:35
           </th>
           <th class="c-center element-top">
            12:02
           </th>
           <th class="c-center element-top">
            12:27
           </th>
           <th class="c-center element-top">
            13:05
           </th>
           <th class="c-center element-top">
            13:47
           </th>
           <th class="c-center element-top">
            14:15
           </th>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항제2터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            11:17
           </td>
           <td class="element-top">
            11:37
           </td>
           <td class="element-top">
            12:25
           </td>
           <td class="element-top">
            12:37
           </td>
           <td class="element-top">
            13:10
           </td>
           <td class="element-top">
            13:29
           </td>
           <td class="element-top">
            14:07
           </td>
           <td class="element-top">
            14:32
           </td>
           <td class="element-top">
            15:27
           </td>
           <td class="element-top">
            15:42
           </td>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항제1터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            11:22
           </td>
           <td class="element-top">
            11:42
           </td>
           <td class="element-top">
            12:30
           </td>
           <td class="element-top">
            12:42
           </td>
           <td class="element-top">
            13:15
           </td>
           <td class="element-top">
            13:34
           </td>
           <td class="element-top">
            14:12
           </td>
           <td class="element-top">
            14:37
           </td>
           <td class="element-top">
            15:32
           </td>
           <td class="element-top">
            15:47
           </td>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항국제선터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            11:29
           </td>
           <td class="element-top">
            11:49
           </td>
           <td class="element-top">
            12:37
           </td>
           <td class="element-top">
            12:49
           </td>
           <td class="element-top">
            13:22
           </td>
           <td class="element-top">
            13:44
           </td>
           <td class="element-top">
            14:19
           </td>
           <td class="element-top">
            14:44
           </td>
           <td class="element-top">
            15:39
           </td>
           <td class="element-top">
            15:54
           </td>
          </tr>
         </table>
         <p class="element-right">
          <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[search]</li>[link][search]<li>[link]</li>
         </p>
         <table border="0" cellpadding="0" cellspacing="0" class="table-layout-01">
          <colgroup>
           <col width="18%"/>
           <col width="2%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
          </colgroup>
          <tr>
           <th class="c-rborder">
            JR치바역 서쪽출구
           </th>
           <th class="time-table-layout">
           </th>
           <th class="c-center element-top">
            14:45
           </th>
           <th class="c-center element-top">
            15:15
           </th>
           <th class="c-center element-top">
            15:35
           </th>
           <th class="c-center element-top">
            15:55
           </th>
           <th class="c-center element-top">
            16:22
           </th>
           <th class="c-center element-top">
            16:45
           </th>
           <th class="c-center element-top">
            17:05
           </th>
           <th class="c-center element-top">
            17:32
           </th>
           <th class="c-center element-top">
            18:05
           </th>
           <th class="c-center element-top">
            18:35
           </th>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항제2터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            16:12
           </td>
           <td class="element-top">
            16:55
           </td>
           <td class="element-top">
            17:02
           </td>
           <td class="element-top">
            17:22
           </td>
           <td class="element-top">
            18:02
           </td>
           <td class="element-top">
            18:12
           </td>
           <td class="element-top">
            18:32
           </td>
           <td class="element-top">
            19:12
           </td>
           <td class="element-top">
            19:27
           </td>
           <td class="element-top">
            19:57
           </td>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항제1터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            16:17
           </td>
           <td class="element-top">
            17:00
           </td>
           <td class="element-top">
            17:07
           </td>
           <td class="element-top">
            17:27
           </td>
           <td class="element-top">
            18:07
           </td>
           <td class="element-top">
            18:17
           </td>
           <td class="element-top">
            18:37
           </td>
           <td class="element-top">
            19:17
           </td>
           <td class="element-top">
            19:32
           </td>
           <td class="element-top">
            20:02
           </td>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항국제선터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            16:24
           </td>
           <td class="element-top">
            17:07
           </td>
           <td class="element-top">
            17:14
           </td>
           <td class="element-top">
            17:34
           </td>
           <td class="element-top">
            18:14
           </td>
           <td class="element-top">
            18:24
           </td>
           <td class="element-top">
            18:44
           </td>
           <td class="element-top">
            19:24
           </td>
           <td class="element-top">
            19:39
           </td>
           <td class="element-top">
            20:09
           </td>
          </tr>
         </table>
         <p class="element-right">
          <li>[ahref]</li>[search][ahref]<li>[search]</li><li>[link]</li>
         </p>
         <table border="0" cellpadding="0" cellspacing="0" class="table-layout-01">
          <colgroup>
           <col width="18%"/>
           <col width="2%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
           <col width="8%"/>
          </colgroup>
          <tr>
           <th class="c-rborder">
            JR치바역 서쪽출구
           </th>
           <th class="time-table-layout">
           </th>
           <th class="c-center element-top">
            19:00
           </th>
           <th class="c-center element-top">
            19:30
           </th>
           <th class="c-center element-top">
            20:05
           </th>
           <th class="c-center element-top">
            20:35
           </th>
           <th class="c-center element-top">
            21:05
           </th>
           <th class="c-center element-top">
            22:05
           </th>
           <th>
           </th>
           <th>
           </th>
           <th>
           </th>
           <th>
           </th>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항제2터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            20:17
           </td>
           <td class="element-top">
            20:42
           </td>
           <td class="element-top">
            21:17
           </td>
           <td class="element-top">
            21:47
           </td>
           <td class="element-top">
            22:17
           </td>
           <td class="element-top">
            23:17
           </td>
           <td>
           </td>
           <td>
           </td>
           <td>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항제1터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            20:22
           </td>
           <td class="element-top">
            20:47
           </td>
           <td class="element-top">
            21:22
           </td>
           <td class="element-top">
            21:52
           </td>
           <td class="element-top">
            22:22
           </td>
           <td class="element-top">
            23:22
           </td>
           <td>
           </td>
           <td>
           </td>
           <td>
           </td>
           <td>
           </td>
          </tr>
          <tr>
           <th class="c-rborder cell-01">
            하네다공항국제선터미널
           </th>
           <th class="time-table-layout cell-01">
           </th>
           <td class="element-top">
            20:29
           </td>
           <td class="element-top">
            20:54
           </td>
           <td class="element-top">
            21:29
           </td>
           <td class="element-top">
            21:59
           </td>
           <td class="element-top">
            22:29
           </td>
           <td class="element-top">
            23:29
           </td>
           <td>
           </td>
           <td>
           </td>
           <td>
           </td>
           <td>
           </td>
          </tr>
         </table>
         <p class="element-right">
          [link]
          
         </p>
         <h2 class="design-02" id="notes">
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         치바(치바시 카이힌 에리아 계통)를 출발하는버스는 예약제가 아닙니다.이용일 당일,직접 승차장까지 와주십시오.
         <br>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
         </br>
         휴일운행관련안내
         <br>
          [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><li>[search]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search]<li>[link]</li>
         </br>
         요일에 관계없이 매일같은스케쥴로 운행하고있습니다.
         <br/>
         치바지역은 마크하리지역과 동일계통으로 운행노선은 지역별페이지「경유상세정보」를 확인해주십시오.
         <h2 class="design-02" id="reserve">
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <table border="0" cellpadding="0" cellspacing="0" class="table-layout-01">
          <colgroup>
           <col width="30%"/>
           <col width="20%"/>
           <col width="25%"/>
           <col width="25%"/>
          </colgroup>
          <tr>
           <th class="c-center bold">
            승차장소
           </th>
           <th class="c-center bold">
            전화예약
           </th>
           <th class="c-center bold">
            인터넷예약
           </th>
           <th class="c-center bold">
            승차권의 구입장소
           </th>
          </tr>
          <tr>
           <td class="c-left">
            JR치바역 25번승차장
           </td>
           <td class="c-left">
            전화예약은 받지않습니다
           </td>
           <td>
            -
           </td>
           <td class="c-left">
            주요여행대리점(발권수수료가 발생할경우가 있습니다)
            <br/>
            또는 승차시 운임상자에 지불해주십시오
           </td>
          </tr>
         </table>
         <div class="two-column">
          <div class="two-left">
           <h2 class="design-02" id="price">
            <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
           </h2>
           <table border="0" cellpadding="0" cellspacing="0" class="table-layout-01">
            <colgroup>
             <col width="50%"/>
             <col width="50%"/>
            </colgroup>
            <tr>
             <th class="c-center bold">
              성인편도
             </th>
             <th class="c-center bold">
              소인편도
             </th>
            </tr>
            <tr>
             <td>
              ¥
1370
             </td>
             <td>
              ¥
690
             </td>
            </tr>
           </table>
           <div class="note-block">
            <p class="note-col-01">
             <li>[search]</li><li>[link]</li><li>[link]</li><li>[link]</li><li>[ahref]</li>[link]<li>[search]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li>[search]
            </p>
            [ahref]
            
           </div>
          </div>
          <div class="two-right">
           <h2 class="design-02" id="time">
            [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
           </h2>
           <table border="0" cellpadding="0" cellspacing="0" class="table-layout-01">
            <colgroup>
             <col width="100%"/>
            </colgroup>
            <tr>
             <th class="c-center bold">
              평균소요시간
             </th>
            </tr>
            <tr>
             <td>
              약
50											분-
95											 분
             </td>
            </tr>
           </table>
          </div>
         </div>
         <div class="link-block">
          <p class="icon-link-m">
           [ahref]
           
          </p>
         </div>
         <div class="frame-layout-01">
          <div class="layout-01-body">
           <h3 class="design-03">
            [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
           <div class="section">
            <ul>
             <li class="icon-link-m">
              [link]
              
             </li>
             <li class="icon-link-m">
              [link]
              
             </li>
             <li class="icon-link-m">
              <a href="/kr/platform_searches/index/6/145">
               카이힌마쿠하리역 북쪽출구
              </a>
             </li>
             <li class="icon-link-m">
              [ahref]
              
             </li>
             <li class="icon-link-m">
              <a href="/kr/platform_searches/index/6/147">
               호텔 프랑크스
              </a>
             </li>
             <li class="icon-link-m">
              [link]
              
             </li>
             <li class="icon-link-m">
              <a href="/kr/platform_searches/index/6/149">
               호텔 그린타워 마구하리
              </a>
             </li>
             <li class="icon-link-m">
              [ahref]
              
             </li>
             <li class="icon-link-m">
              [ahref]
              
             </li>
             <li class="icon-link-m">
              [link]
              
             </li>
             <li class="icon-link-m">
              <a href="/kr/platform_searches/index/6/155">
               케미가와하마역
              </a>
             </li>
             <li class="icon-link-m">
              <a href="/kr/platform_searches/index/6/227">
               멧세츄오
              </a>
             </li>
             <li class="icon-link-m">
              [ahref]
              
             </li>
            </ul>
           </div>
          </div>
         </div>
         <div class="normal-line">
          <hr/>
         </div>
         <p class="element-center">
          <li>[link]</li>[link][link][link][ahref]
         </p>
         <div class="link-block">
          <p class="icon-link-m">
           [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
         </div>
        </div>
       </div>
      </div>
      <div id="sub-contents">
       <h2>
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <div id="side-utility">
        <ul>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <hr/>
    <div id="footer-area">
     <div class="goto-pagetop">
      <p>
       <a href="a">
       </a>
      </p>
     </div>
     <div id="footer-layout">
      <div class="wrap">
       <div id="layout01">
       </div>
       <div id="layout02">
        [ahref]
        
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0432
  </b>
 </body>
</html>
