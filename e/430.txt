--->|UHJpc29uIHRoZXJhcGlzdHMgYWxzbyBzcGVuZCBhIGdyZWF0IGRlYWwgb2YgdGltZSB3cml0aW5nIHJlcG9ydHMgYW5kIGV2YWx1YXRpb25zIG9mIGlubWF0ZXMsIHNvIHdyaXRpbmcgYW5kIGNvbW11bmljYXRpb24gc2tpbGxzIGFyZSBleHRyZW1lbHkgdmFsdWFibGUgYW5kIG1heSBiZSByZXF1aXJlZCBkZXBlbmRpbmcgdXBvbiB0aGUgY29ycmVjdGlvbmFsIGZhY2lsaXR5LiAKT25jZSBhZ2FpbiBpbiBub3cgd2F5IGEgZmxhdyBvZiB0aGUgaW5kdXN0cnksIGp1c3Qgc3R1cGlkIHBlb3BsZSBiZWluZyBzdHVwaWQuLiAKVGhleSB3b3VsZCBubyBsb25nZXIgbmVlZCB0aGUgY29uZG8gbmVhciBoZXIgZm9ybWVyIHBsYWNlIG9mIHdvcmsuIApJbiAyMDA1LCA5MyBwZXIgY2VudCBvZiBTaW5nYXBvcmVhbnMgb3duZWQgaG9tZXMsIG9mIHdoaWNoIDg4IHBlciBjZW50IHdlcmUgYWZmb3JkYWJsZSBwdWJsaWMgaG91c2luZyBmbGF0cy4gCkkgaGFkbiBldmVuIHRhbGtlZCB0byBoaW0gb3IgYWNrbm93bGVkZ2VkIGhpbSBhbmQgeWV0IGhlIGZlbHQgdGhlIHNhbWUgdGhpbmcuIApIZSB3aG9sZWhlYXJ0ZWRseSBhZ3JlZWQgYW5kIHRvbGQgbWUgc2hlIHdhcyBpbmRlZWQgcHVzaGluZyB0aGUgYm91bmRhcmllcy4gTm93IEkgZmluZCBvdXQgaGUgd2VudCB0byB0aGUgZ3ltIGFuZCBzaGUgam9pbmVkIHRoaXMgd2VkbmVzZGF5LiBXZSBkaXNjdXNzZWQgdGhpcyBmZW1hbGUgbWFueSBtYW55IG1hbnkgdGltZXMuIApUaGUgODc1JyBsb25nIHRhcGVyZWQgcGlwZSB3aGljaCB3YXMganVzdCBhIGZldyBpbmNoZXMgaW4gZGlhbWV0ZXIgYXQgdGhlIGV4cGxvc2lvbiBwb2ludCwgZ3JhZHVhbGx5IGJlY29taW5nIDEwJyBhdCB0aGUgZW5kIHdhcyBmYWJyaWNhdGVkIGludG8gYSB0aG91c2FuZCBmb290IGxvbmcgdHVubmVsIGR1ZyBpbnRvIHRoZSBzaWRlIG9mIFJhaW5pZXIgTWVzYSBpbiBBcmVhIDEyIG9mIHRoZSBOZXZhZGEgVGVzdCBTaXRlLiBJdCB3YXMgYmFzaWNhbGx5IGEgY29sbGVjdGlvbi9kaXJlY3Rpb24gZGV2aWNlIGFnYWluc3Qgd2hpY2ggbWlsaXRhcnkgY29tbXVuaWNhdGlvbnMvd2VhcG9ucy9ldGMgY29tcG9uZW50cyB3ZXJlIHRlc3RlZCBmb3IgdGhlIGVmZmVjdHMgb2YgcmFkaWF0aW9uIGdlbmVyYXRlZCBieSB0aGUgd2VhcG9uIGV4cGxvZGVkIGluIFJvb20gWmVybyAod2hpY2ggd2FzIGFsc28gcmVmZXJyZWQgdG8gYXMgdGhlICJwb2ludCByb29tIiwgcGlucG9pbnRlZCBhdCAzNy4xMjAyOTkgMTE2LjEyMjU4MykuClN1bmRheTogRHlsYW4gTW9yYW46IFllYWggWWVhaCwgVGhlIEJsYWNrIEJveCBUaGVhdHJlLCA4cG0uIApFZGl0MzogSW4gTVNJIEFmdGVyYnVybmVyLCBJIHdhcyBhYmxlIHRvIGdldCBDb3JlIENsb2NrIHRvICsyMTFNSHogYW5kIE1lbW9yeSBDbG9jayB0byArNTU1TUh6LiBJIGhhdmVuIHRyaWVkIGFkanVzdGluZyBzaW5jZSB1bmRlcnZvbHRpbmcgdGhlIENQVS4gSWYgYW55b25lIGNvdWxkIHVwZGF0ZSBtZSBvbiB0aGlzLCB3aGF0IHRoZXkgaGF2ZSBzZXQgd2l0aCB1bmRlcnZvbHRpbmcgSSByZWFsbHkgYXBwcmVjaWF0ZSBpdC4KSWYgeW91IHNheWluZyB0aGF0IGlmIG9uZSBoYXMgcGVyZmVjdCB0ZWNobmlxdWUsIGJ1dCBpcyBvdmVyd2VpZ2h0IGFuZCBhIGNvdWNoIHBvdGF0bywgdGhleSBjb3VsZG4gc3dpbSAxNTAwbSBhdCBhIGZhc3QgcGFjZSwgSSB3b3VsZCBnZW5lcmFsbHkgYWdyZWUsIGJ1dCBpdCBwcm9iYWJseSBzdGlsbCBkZXBlbmRzIG9uIHRoZSBwZXJzb24uIApIZSdzIGRvbmUgV0FZIFRPIE1VQ0ggdG8gYmUgZm9yZ2l2ZW4gYW5kIG5vdCBnZXQgdGhlIG1heGltdW0gc2VudGVuY2UuIApJIGp1c3QgZ29pbmcgdG8gcG9zdCBteSBwZXJzcGVjdGl2ZSBoZXJlIGZyb20gd2hlbiB0aGlzIHBhcnRpY3VsYXIgcnVsZSB3YXMgbWFkZSBhbmQgc29tZSBpbnNpZ2h0IGludG8gb3VyIHByYWN0aWNlLiAKSWYgdGhhdCB3YXNuIGVub3VnaCwgd2UgaGF2ZSBib3RoIHRoZSBTZW5hdGUgUHJlc2lkZW50IFBybyBUZW0gUGhpbCBCZXJnZXIgYW5kIEhvdXNlIFNwZWFrZXIgVGhvbSBUaWxsaXMgaW4gc3R1ZGlvISBUeXBpY2FsbHksIEkgbGlrZSB0byBoYXZlIGEgcmVwdWJsaWNhbiBhbmQgZGVtb2NyYXQgdG8gZXZlbiBvdXQsIGhvd2V2ZXIgd2l0aCBicmFuZCBuZXcgbGVhZGVyc2hpcCBJIGZlbHQgaXQgd2FzIGltcG9ydGFudCB0byBnZXQgdGhlIHRvcCB0d28gbGVhZGVycyBpbiBzdHVkaW8gYXMgc29vbiBhcyBwb3NzaWJsZS4gQmVsaWV2ZSBtZSwgd2Ugd2lsbCBoYXZlIHBsZW50eSBvZiByZXNwb25zZSBmcm9tIGRlbW9jcmF0cyB0aHJvdWdoIHRoZSBzZXNzaW9uLiBJIGRvbiB3YW50IHRvIGdpdmUgYXdheSBhbGwgdGhlIGdvb2Qgc3R1ZmYgYnV0IGxldCBqdXN0IHNheSBTcGVha2VyIFRpbGxpcyBpcyB2ZXJ5IGNhbmRpZC4gSGUgbWFrZXMgbm8gYXBvbG9naWVzIGFib3V0IHRoZSBjbG9zZWQgZG9vciBjYXVjdXMgbWVldGluZ3MgaW52b2x2aW5nIGxvYmJ5aXN0cy4gSGUgYWxzbyBoYXMgc29tZSBpbnRlcmVzdGluZyBzdHVmZiB0byBzYXkgYWJvdXQgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIEdPUCBsZWFkZXJzIGFuZCB0aGUgZ292ZXJub3IuIFdoaWxlIHRoZXJlIGFyZSBiaWcgcGhpbG9zb3BoaWNhbCBkaWZmZXJlbmNlcywgaXQgYXBwZWFycyB0aGV5IHN0aWxsIHBsYW4gdG8gdHJ5IGFuZCB3b3JrIHRvZ2V0aGVyLiBJbiBmYWN0LCB0aGVyZSBpcyB0YWxrIG9mIG1lZXRpbmcgaW4gcGVyc29uIG9uY2UgYSB3ZWVrIG9uY2UgYnVkZ2V0IG5lZ290aWF0aW9ucyBiZWdpbi4KSWwgQ29uc2lnbGlvIERpcmV0dGl2byB2aWVuZSBlbGV0dG8gZGFsbCBkZWdsaSBhc3NvY2lhdGksIGNoZSBwdSBkaXJldHRhbWVudGUgZWxlZ2dlcmUgaSBzb2NpIGNoZSBhbmRyYW5ubyBhIHJpY29wcmlyZSBsZSBzaW5nb2xlIGNhcmljaGUsIG8gZGl2ZXJzYW1lbnRlIGkgc29saSBjb21wb25lbnRpLCBjaGUgc3VjY2Vzc2l2YW1lbnRlIGFsIGxvcm8gaW50ZXJubyBkZWZpbmlyYW5ubyBpIHJpc3BldHRpdmkgY29tcGl0aS4KMSBwb2ludCAgc3VibWl0dGVkIDE5IGhvdXJzIGFnb0kgYXNzdW1lIHlvdSBrbm93IGhlciBleGFjdCBkYXRlIG9mIGJpcnRoPyBJcyB0aGVyZSBhbnkgY2hhbmNlIHlvdSBrbm93IHRoZSBleGFjdCBwbGFjZSB3aGVyZSBzaGUgd2FzIGJvcm4sIGFwYXJ0IGZyb20gIkdlcm1hbnkiP0dlcm1hbnkgaGFzIHNldmVyYWwgdmVyc2lvbnMgb2YgdGhlIGJpcnRoIGNlcnRpZmljYXRlLCBvbmUgaXMgdGhlIGNsYXNzaWNhbCBiaXJ0aCBjZXJ0aWZpY2F0ZSB0aGF0IHdvdWxkIHNob3cgaGVyIGFkb3B0aXZlIHBhcmVudHMgYXMgaGVyIHBhcmVudHMgYW5kIG5vdGhpbmcgZWxzZSBhbmQgYW5vdGhlciB3b3VsZCBiZSB0aGUgc28gY2FsbGVkICJBdXN6dWcgYXVzIGRlbSBHZWJ1cnRlbnJlZ2lzdGVyIGlua2x1c2l2ZSBhbGxlciBSYW5kdmVybWVya2UiIChleGNlcnB0IGZyb20gdGhlIHJlZ2lzdGVyIG9mIGJpcnRocyBpbmNsdWRpbmcgYWxsIHJlbWFya3MgaW4gdGhlIG1hcmdpbnMpLiAKMSBiZXQgbGltaXQgY29zdHMgJ2V4YWdnZXJhdGVkJwpEZXBlbmRpbmcgb24geW91ciBhdmVyc2lvbiB0byByaXNrLCB5b3Ugc2hvdWxkIGNvbnNpZGVyIGFuIEVURiB3aXRoIGEgbG93IGV4cGVuc2UgcmF0aW8sIG9yIGp1c3QgYnV5IG11dHVhbCBmdW5kIG9mIGJvbmRzLi4gClNvY2lhbGx5IGNvbnNjaW91cyBsaWJlcmFscyBtYXkgd3JpbmtsZSB0aGVpciBub3NlcyBhdCB0aGUgdmVyeSBpZGVhIG9mIG1vdmluZyB0byBUZW5uZXNzZWUgICB3aGVyZSBEYXZ5IENyb2NrZXR0IHdhcyBib3JuIG9uIGEgbW91bnRhaW50b3AgICBidXQgQmlnIEFwcGxlIGRlbml6ZW5zIHBheSB0aGUgaGlnaGVzdCB0YXhlcyBpbiB0aGUgbmF0aW9uIGFuZCBmYWNlIGV2ZXIgcmlzaW5nIGNvc3RzLiBTbywgdGhvc2Ugd2hvIHdvcnJ5IGFib3V0IHRoZWlyIGNvbXBhbnkncyBib3R0b20gbGluZSBnZXQgaXQuIApQcmFjdGljZSB3aXRoIGEgc2luZ2xlIGJhbGwgYXQgYSB0aW1lLCBvbmUgaGFuZCB0aGVuIHRoZSBvdGhlciwgdW50aWwgeW91ciB0aHJvd3MgYXJlIGNvbnNpc3RlbnRseSBhY2N1cmF0ZS4gUHJhY3RpY2UgaW4gZnJvbnQgb2YgeW91ciBiZWQgKHNvIHlvdSB3b24ndCBoYXZlIHRvIGJlbmQgZG93biB0byB0aGUgZmxvb3IgdG8gY2F0Y2ggZmFsbGVuIGJhbGxzKSBhbmQgZG9uJ3Qgd29ycnkgYWJvdXQgY2F0Y2hpbmcgdGhlIGJhbGxzLiAKTm8gbWV0aG9kb2xvZ3kgY2FuIGd1YXJhbnRlZSB0aGF0IHRoaW5ncyB3aWxsIGFsd2F5cyBnbyBhY2NvcmRpbmcgdG8gcGxhbnMsIGFuZCBBZ2lsZSBpcyBubyBleGNlcHRpb24uIEluIHRoaXMgd29ya3Nob3Agc2VnbWVudCwgd2Ugd2lsbCBsb29rIGF0IHJlYWwgc2NlbmFyaW9zIGFuZCBkYXRhIGZyb20gYWN0dWFsIEFnaWxlIHRlYW1zIHRoYXQgZ290IGludG8gdHJvdWJsZSwgYW5kIHdlJ2xsIGFuYWx5c2Ugd2hhdCB3ZW50IHdyb25nIGFuZCB3aGF0IGNvdWxkIGhhdmUgYmVlbiBkb25lIGFib3V0IGl0LiAKSW4gdG91cm5hbWVudCBwbGF5LCB3aGlsZSB0aGUgZGVhbGVyIGlzIGRlYWxpbmcgdGhlIGNhcmRzLCB0eXBlIHBva2VydGVuLCB0aGVuIGhpdCBlbnRlci4gCk9uIHNlbGVjdCBzaGlwcywgcGxheSBmaXZlIGNhcmQgQ2FyaWJiZWFuIFN0dWQgUG9rZXIgdG8gd2luIGF0IGxlYXN0ICQxNSwwMDAsIGJhdHRsZSBmb3IgdGhlIGJlc3QgaGFuZCB3aXRoIExldCBJdCBSaWRlIG9yIHZpc2l0IHRoZSBzdGF0ZSBvZiB0aGUgYXJ0IFRleGFzIEhvbGQgJ0VtIFBva2VyIHRhYmxlIGRlc2lnbmVkIHRvIHJlZHVjZSBwbGF5ZXIgd2FpdCB0aW1lcyBieSA1MCB0byA2MCBwZXJjZW50LiAKQWdhaW4sIHRoZSBwZXJmdW1lIHNob3VsZG4ndCBiZSBib2xkLCBidXQgbW9yZSBpbmNsaW5lZCB0b3dhcmRzIHN1YnRsZXR5Li4gClRoaXMgaXMgd2h5IHRoZXkncmUgb2Z0ZW4gcmVmZXJyZWQgdG8gYXMgJ2hhcHB5IGhvcm1vbmVzJy4gVGhlIHJlbGVhc2Ugb2YgZW5kb3JwaGlucyB3aWxsIG1ha2UgdGhlIGF0aGxldGUgZmVlbCBiZXR0ZXIgYWJvdXQgdGhlbXNlbHZlcyBhbmQgY291bGQgcG90ZW50aWFsbHkgaW1wcm92ZSB0aGVpciBwZXJmb3JtYW5jZSBpbiBzcG9ydC4uIApJZiB0aGVyZSBpcyBhIGJldCBhbmQgYSBwbGF5ZXIgYWN0aW5nIGFmdGVyIHRoZSBiZXQgbXVzdCBjYWxsLCBmb2xkIG9yIHJhaXNlLiAKTm9uIHNldWxlbWVudCwgbGVzIENSUyBuJ29udCBwYXMgdm9jYXRpb24gIHRyZSBkZXMgYWN0ZXVycyBkZXMgb3ByYXRpb25zIGRlIGRtYW50bGVtZW50IGRlIHJzZWF1eCBkZSB2ZW50ZSBkZSBzdHVwZmlhbnRzIG8gZGUgcHJveG50aXNtZSwgbWFpcyBpbHMgc29udCB1biBsbWVudCBmb3J0IHBvdXIgc2lnbmlmaWVyIHF1ZSBjZSBxdWFydGllciBlc3Qgc291cyB0ZW5zaW9uLiAKTU9OVFJFQUwgICBEb2xsYXJhbWEgSW5jLiBiZWNhdXNlIG9mIENhbmFkYSdzIHBsYW5zIHRvIGltcG9zZSB0YXJpZmZzIGluIHJldGFsaWF0aW9uIGZvciBBbWVyaWNhbiBkdXRpZXMgb24gYWx1bWludW0gYW5kIHN0ZWVsLCB0aGUgY29tcGFueSdzIENFTyBzYWlkIFRodXJzZGF5LgpXaGlsZSB3YWl0aW5nIHRvIGdldCB0aGUgYmFsbG9vbiBwbGFjZWQgYW5kIHRoZW4gcGl0b2NpbiBldmVyeXRoaW5nIHdhcyB2ZXJ5IGNhbG0uIEkgd2FpdGVkIGFuZCBvbmNlIHRoZSBjb250cmFjdGlvbnMgZ290IGdvaW5nIEkgc3RhcnRlZCB0byBmZWVsIHRoZW0uIApJIHdvdWxkIHNheSB0aGF0IGlmIHlvdSBkaWQgd2FudCB0byBzZWUgaGltIGluIHRoZSBmdXR1cmUgSSB3b3VsZG4gZG8gaXQgYWxvbmUuIEkgd291bGQgc3VnZ2VzdCBpZiB5b3UgYW5kIHlvdXIgZnJpZW5kcyBoYXZlIGNhcmQgbmlnaHQgeW91IGRvIHRoYXQgdG9nZXRoZXIuIEtlZXAgaXQgZnJpZW5kbHkgYW5kIHNxdWFzaCBhbnkgY29udmVyc2F0aW9ucyBhYm91dCB5b3UgdHdvLiBEb24gaW5kdWxnZSBoaW0gYnkgdGFsa2luZyAicHJpdmF0ZWx5Ii4gVGhpcyB3aWxsIGdpdmUgaGltIHRoZSBjaGFuY2UgdG8gdHJ5IHRvIGJlIGZyaWVuZGx5L2ZyaWVuZHMgd2l0aG91dCB0aGUgcHJlc3N1cmUgb2Ygb3BlbmluZyB1cCB0byB5b3UgcGVyc29uYWxseS4KSXQgd2FzIGdyZWF0IHRoYXQgc2hlIGdvdCB0aGUgb3Bwb3J0dW5pdHkgYW5kIGl0IHdpbGwgY29udGludWUgdG8gaGVscCBoZXIgZ3JvdyBhbmQgZ2V0IGJldHRlciBhdCBpdC4gSXQgd2FzIGdvb2QgYW5kIG5lY2Vzc2FyeSBmb3IgQ2FkdWNldXMgdG8gYmUgdGhlcmUgKG9yIEZqb3JkIG1heWJlKS4gSXQgd2FzIGFsc28gbmljZSBvZiBtYXR0IHRvIGJlIHNvIGdyYWNpb3VzIGFib3V0IHRoYXQgICBJIG1lYW4gcmVhbGx5IHRoYXQgZnVtYmxpbmcgY291bGQgaGF2ZSBnb25lIHZlcnkgZGlmZmVyZW50bHkuIEFuZCBwZW9wbGUgY2FuIGdvIGJhY2sgYW5kIGZvcnRoIGFib3V0IGhvdyB0aGV5IHdvdWxkIGhhdmUgRE1lZCBpdCBhbmQgaG93IGFueSBkaWZmZXJlbnQgcGF0aHMgbWlnaHQgaGF2ZSBiZWVuIGJldHRlciBvciB3b3JzZSwgYnV0IHdoYXQgaGFwcGVuZWQgaGFwcGVuZWQgYW5kIHdlIGdldCB0byBzZWUgd2hlcmUgaXQgZ29lcy4KVGhhdCdzIGJlY2F1c2UgdGhlIFByZWRhdG9ycyAoMTEgOSAyKSBwb3VuY2VkIG9uIG1pc3Rha2VzLiBXaGVuIFRvcm9udG8gd2luZ2VyIE1hc29uIFJheW1vbmQgaGlnaCBzdGlja2VkIERhdmlkIExlZ3dhbmQsIHJvb2tpZSBkZWZlbmNlbWFuIFNldGggSm9uZXMgc2NvcmVkIG9uIHRoZSBwb3dlciBwbGF5IG9mZiBKYXkgTWNDbGVtZW50J3Mgc3RpY2suCkkgd2FzIHdvcnJpZWQgYWJvdXQgYmVpbmcgaGl0IGJ5IGEgTGV4dXMgdGhhbiBiZWluZyBhc3NhdWx0ZWQgYnkgYSBob21lbGVzcyBwZXJzb24uLiAKSGUganVzdCBjb250aW51aW5nIGhhcmFzc2luZyBtZSBmcm9tIGEgcG9zdCB5ZXN0ZXJkYXkuIEl0IHJpZGljdWxvdXNseSBwZXR0eSB0byBjYXJyeSBvdmVyIGJlaW5nIGEgZGljayBvbiBhIHRvdGFsbHkgZGlmZmVyZW50IHBvc3QsIGVzcGVjaWFsbHkgd2hlbiBiZWluZyBhIGRpY2sgd2FzIHVud2FycmFudGVkIGluIHRoZSBmaXJzdCBwbGFjZS4gSWYgeW91IGp1c3QgdHJ5aW5nIHRvIGJlIGEgamVyaywgdG9vLCB0aGVuIGdvIGZpbmQgc29tZXRoaW5nIGJldHRlciB0byBkbyB3aXRoIHlvdXIgdGltZS4gCkxha2UgQ2F0aGllIGJyZWVkZXIgU3RldmUgTHVsaGFtIHdhcyByZWNlbnRseSBuYW1lZCBhIGxpZmUgbWVtYmVyIG9mIHRoZSBTaWxraWUgQ2x1YiBvZiBBdXN0cmFsaWEuIE5ldyB0byBzaG93IGNpcmNsZXMgaXMgeW91bmcgRHVzdGluIEdyZWVuIG9mIFdpbmdoYW0uIApBIHBvd2VyZnVsIGVtb3Rpb25hbCBjYW1wYWlnbiB0aHJvdWdoIGFnZW5jeSBWQ0NQIGVuc3VlZCBhcm91bmQgYSB0aGVtZSBvZiBmcmVlZG9tIGFuZCBlbmFibGVtZW50IHRoYXQgZm91bmQgYSBodW1hbiBleHByZXNzaW9uIGZvciB0aGUgcHJvZHVjdHMgb24gb2ZmZXIuIFRoaXMgaGVscGVkIHRyYW5zZm9ybSB0aGUgYnVzaW5lc3MuIEN1c3RvbWVyIGFjcXVpc2l0aW9uLCBsb3lhbHR5IGFuZCBhdmVyYWdlIHJldmVudWUgcGVyIHVzZXIgYWxsIGltcHJvdmVkIGRyYW1hdGljYWxseS4gClBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiAKTGUgam91cm5hbGlzdGUgbGUgcGx1cyAgZHJvaXRlIChqJ2VudGVuZHMgcGFyICJkcm9pdGUiIDogImRyb2l0ZSBjb252ZW50aW9ubmVsbGUiLikgdHJvdXZlIGxlIG1veWVuIGQnZW5jZW5zZXIgbGVzIGRldXggbWF0YW1vcmVzIHF1ZSBzb250IEFydGhhdWQgZXQgUG91dG91LiBDZSBxdWkgcmVjZW50cmUgYXVzc2l0dCBsYSBkcm9pdGUgZXQgcmVuZCBsYSBjc3VyZSBkdSBkYmF0LCBkZSBmYWl0LCByaWRpY3VsZS4gVG91dCBsZSBtb25kZSwgZW4gcmV2YW5jaGUsIHRyb3V2ZXJhIGxlIG1veWVuIGRlIG1ldHRyZSBkdSBwb2lsICBncmF0dGVyIGRhbnMgbGVzIGNvbHMgZGUgRmlsbG9uIGxlIGJvdXJnZW9pcyBvdSBMZSBQZW4gbGEgRmFzY2lzdGUuLiAKSGVyZSB0byBob3Bpbmcgc2hlIHdpbGwgYmUgdGhlcmUgYWdhaW4gbmV4dCB3ZWVrLCBhbmQgdGhlIExvcmQgZ2l2ZXMgbWUgdGhlIGNvdXJhZ2UgdG8gdGFsayB0byBoZXIgYSBiaXQgbW9yZS4uIApMZXQgYmUgcmVhbCwgdGhlIHZhc3QgbWFqb3JpdHkgb2YgZ3JlZW5ob3VzZSBnYXNzZXMgYXJlIHByb2R1Y2VkIGJ5IGxhcmdlIGNvcnBvcmF0aW9ucywgbm90IGJ5IGluZGl2aWR1YWwgY29uc3VtZXJzLiBDb2xsZWN0aXZlbHksIGluZGl2aWR1YWwgY29uc3VtZXJzIG1ha2UgdXAgbWF5YmUgMTAlIG9mIGFsbCBncmVlbmhvdXNlIGdhcyBlbWlzc2lvbnMuIEFuZCB5ZXQsIHRoZSB2YXN0IG1ham9yaXR5IG9mIG91ciBlZmZvcnRzIHRvIGN1cmIgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zIGFyZSBhaW1lZCBhdCB0aGF0IDEwJS4gCkhlIGhhcyBuZXZlciBzaG93biBpbnRlcmVzdCBpbiBpdCBlaXRoZXIgYnV0IGhlIGRlY2lkZWQgdG8gbWFrZSBtZSBhIHdhbmQgd2hpY2ggSSB0aG91Z2h0IHdhcyBvZGQuIEhlIGJyb3VnaHQgaXQgdG8gbWUgYW5kIEkgdGhhbmtlZCBoaW0gYnV0IEkgZ3Vlc3MgaGUgY291bGQgc2VlIHRoZSBjb25mdXNpb24gb24gbXkgZmFjZSBhbmQgc2FpZCAieW91IGRvbiBsaWtlIGl0Ii4gClRoZXJlIHdhcyBhIGNvbXBhcmlzb24gb2YgS2FpcmkgcG9zdGVkIHRoZSBvdGhlciBkYXkgYW5kIG9uIHRoYXQgb25lIHlvdSBjb3VsZCBhbHNvIHNlZSB0aGF0IGhlciBmYWNlIHdhcyBtb3JlIHJvdW5kZWQsIGNoZWVrcyBzZWVtZWQgYSBiaXQgcHVkZ2llciBhbmQgdGhlIHByb3BvcnRpb25zIGluIGdlbmVyYWwgd2VyZSBhIGJpdCBkaWZmZXJlbnQgdGhhbiBpbiB0aGUgS0gyIG1vZGVscy4gVGhlIHNhbWUgcG9pbnRzIGFyZSB2ZXJ5IHZpc2libGUgb24gdGhlc2UgcGljcyBvZiBTb3JhIGFzIHdlbGwuSW4gbXkgb3BpbmlvbiB0aGUgS0gyIGRlc2lnbnMgYXJlIHN0aWxsIHN1cGVyaW9yIGFuZCBJIGFtIHdvbmRlcmluZyB3aHkgdGhleSBldmVuIGNoYW5nZWQgdGhlbSB0aGF0IG11Y2guIApJbiBhbiBlZmZvcnQgdG8gTk9UIHNob290IGFueW9uZSwgSSBoYXZlIHZvd2VkIHRvIHNwZW5kIHRoZSByZXN0IG9mIHRoZSBkYXkgTk9UIHRoaW5raW5nIG9mIHRoZSBncmVlZCBhbmQgY29ycnVwdGlvbiBhdCBBSUcgYW5kIGluIFdhc2hpbmd0b24uIEluc3RlYWQsIEkgYW0gYXR0ZW1wdGluZyB0byB2aXN1YWxpemUgcGluayBwb25pZXMuIFBpbmsgcG9uaWVzIGxlYWQgdG8gcGluayB1bmljb3Jucywgd2hpY2ggaW1tZWRpYXRlbHkgYnJpbmdzIHRvIG1pbmQgdGhlIHJhdGhlciBicmlsbGlhbnQgdmlyYWwgeW91dHViZSB2aWRlbywgIkdheSBVbmljb3JuIFBsYW5ldC4iICJHYXkgVW5pY29ybiBQbGFuZXQiIGF1dG9tYXRpY2FsbHkgbGVhZHMgbWUgdG8gZ2F5IG1hcnJpYWdlLCB3aGljaCBmb3JjZXMgbXkgaW1hZ2luYXRpb24gdG8gbW92ZSBmcm9tIHRoZSBkaXJ0eSwgbm8gZ29vZCBjb3JyaWRvcnMgb2YgYmlnIGJ1c2luZXNzIHRvIHRoZSBtdWNoIGNsZWFuZXIgaGFsbHMgb2YgdGhlIFZlcm1vbnQgbGVnaXNsYXR1cmUgaW4gTW9udHBlbGllciwgd2hlcmUgZ2F5IG1hcnJpYWdlIGlzIGJlaW5nIGNvbnNpZGVyZWQgdG9kYXkuLiAKSHVycmljYW5lIEthdHJpbmEgSGlzdG9yeSBhbmQgRWZmZWN0cyBUaGUgZGV2YXN0YXRpbmcgZWZmZWN0cyBvZiBIdXJyaWNhbmUgS2F0cmluYSB0ZW1wb3JhcmlseSB3aXBlZCBtb3N0IG9mIEJpbG94aSBhd2F5IGluIEF1Z3VzdCAyMDA1LiAKQnV0IEkgYmVsaWV2ZSBSZWVzZSdzIGNoYW5nZXMgdGhlaXIgcmVjaXBlIGZvciB0aGVzZSBzcGVjaWFsdHkgc2hhcGVzIChlZ2dzLCBwdW1wa2lucywgZXRjKS4gCkp1c3F1JyBwcnNlbnQgbGVzIGNhYmluZXRzIHF1aSBzZSBzb250IGludHJlc3NzIGF1IHN1amV0IG4nb250IGd1cmUgZmFpdCBtZXJ2ZWlsbGUgc2FucyBjb21wdGVyIHF1ZSBsZSBwcmVtaWVyIGVuIGRhdGUgYSBzdXJ0b3V0IGV4Y2VsbCBkYW5zIGxhIGRzaW5mb3JtYXRpb24gZXQgbW1lIGwnaW50b3hpY2F0aW9uIGRlIGNvbGxlY3Rpdml0cyBsb2NhbGVzLkEgc3VpdnJlLCAgdG91dGVzIGZpbnMgdXRpbGVzLkondml0ZXJhaSBhdXRhbnQgcXVlIHBvc3NpYmxlIGxhIHBvc2UgZHUgTGlua3ksIGplIGNyYWlucyBzdXJ0b3V0IGxlcyBzdXJmYWN0dXJhdGlvbnMsIGxlcyBjb3VwdXJlcyBpbnRlbXBlc3RpdmVzIGV0IHF1YW5kICBsYSBwb2xsdXRpb24gdmVudHVlbGxlLCBqZSByYXBwZWxsZSBxdScgcGFydGlyIGR1IG1vbWVudCBvIGxlcyB2b2lzaW5zIG9udCBsZXVyIExpbmt5LCBpbCBmYXV0IHRyb3V2ZXIgdW4gZmlsdHJlIGFkcXVhdCBuZSBzZXJhaXQgY2UgcXVlIHBvdXIgYXNzdXJlciAgbm9zIGFwcGFyZWlscyBldCBlbiBwYXJ0aWN1bGllciBsZXMgb3JkaW5hdGV1cnMgZXQgY2UgcXVpIHJlbHZlIGRlIGxhIEhpIEZpIHVuIGNvdXJhbnQgInByb3ByZSIuIFBvdXIgbCdpbnN0YW50LCBqZSBuJ2FpIHBhcyBwcm9ncmVzcyBjb25jZXJuYW50IGxlIHRlc3QgZHUgZmlsdHJlIHZvcXUgZGFucyB1biBwb3N0IHByY2RhbnQgZmF1dGUgZCdhdm9pciBwdSBtZSBkcGxhY2VyIGVuIGRpcmVjdGlvbiBkJ3VuIExpbmt5LkFycnQgZGUgQmxhZ25hYyA6IFVuIGp1Z2VtZW50IHF1aSBlbmZvbmNlIGRlcyBwb3J0ZXMgZ3JhbmRlcyBvdXZlcnRlc0NlIHF1aSBjJ2VzdCBwYXNzICBCbGFnbmFjIGVzdCB1biBwZXUgZGlmZnJlbnQuIApNb3N0IHNpZ25pZmljYW50bHksIHRoZXJlIGlzIHZlcnkgbGl0dGxlIGFjdHVhbCBtb25leSBleGNoYW5nZWQgaW4gc2xvdCBtYWNoaW5lIHBsYXkuIFRoZSBjdXN0b21lciBpbnNlcnRzIGJpbGxzIHRlbiwgdHdlbnR5LCBmaWZ0eSwgYSBodW5kcmVkIGludG8gdGhlIGRldmljZSB3aGljaCB0aGVuIHNwaXRzIG91dCBhIGNhcmQsIGJhc2ljYWxseSBhbiBpbiBob3VzZSBnYW1ibGluZyBkZWJpdCBjYXJkOyBsb3NzZXMgYXJlIGRlZHVjdGVkIGFuZCB3aW5zIGNyZWRpdGVkIGF1dG9tYXRpY2FsbHkuIE5vIG5pY2tlbHMgaGF2ZSB0byBiZSBwdW1wZWQgaW4gb3IgY29sbGVjdGVkIGluIGFuIG9sZCBjb2ZmZWUgY3VwLiAKRGVzcGl0ZSB0aGUgZGlmZmljdWx0eSBpbiBwaW5uaW5nIGRvd24gd2hhdCBoYXBwaW5lc3MgaXMgYW5kIGhvdyB0byBhY2hpZXZlIGl0LCB3ZSdyZSBnb2luZyB0byB0YWtlIGEgc3RhYiBhdCBpdCBpbiB0aGlzIGFydGljbGUsIGluIHdoaWNoIHdlIG9mZmVyIDEwIGtleSB0aXBzLiBXZSdsbCBzdGFydCB3aXRoIGEgZmV3IHRoYXQgbWlnaHQgc2VlbSBtb3JlIG9idmlvdXMgYW5kIHRoZW4gbW92ZSBvbiB0byBzb21lIHVudXN1YWwgcmVjb21tZW5kYXRpb25zIGZvciBib29zdGluZyBoYXBwaW5lc3MuLiAKU2luY2UgdGhlcmUgYXJlIG5vIGhvdGVsIG93biBiZWFjaGVzIGluIFRoYWlsYW5kIGFsc28gcGVvcGxlIG91dHNpZGUgdGhlIGhvdGVsIGNhbiBjb21lIHRvIHRoaXMgYmVhY2guIApUaGUgdHJ1dGggaXMgd2UgZG9uJ3QgcGxheSBhIGxvdCBvZiBwb2tlciBhbnltb3JlLiBUaGVyZSBpcyBhbiBldmVudCBhdCBvdXIgaG91c2UgZXZlcnkgb3RoZXIgd2VlaywgYW5kIEkgd2lsbCBwbGF5IGF0IG9uZSwgYW5kIEphcXVpZSB3aWxsIHBsYXkgYXQgdGhlIG90aGVyLiBJbiB0aGUgbWVhbnRpbWUsIHdlIG1ha2UgZW5vdWdoIG1vbmV5IGZyb20gdGhlIDEwJSB0aGF0IGl0IGNvdmVycyBvdXIgZWxlY3RyaWMgYmlsbCBlYWNoIG1vbnRoLCBhcyB3ZWxsIGFzIHRoZSBleHRyYXMgeW91IG5lZWQgYXQgYSBub3JtYWwgZ2V0IHRvZ2V0aGVyIChmb29kLCBkcmlua3MsIGV0Yy4pLgpMRUQgU2Vuc2VzIGFuZCBEaXNwbGF5cyBBbWJpZW50IExpZ2h0IEludGVuc2l0eQpUaGFuayB5b3UgZm9yIHlvdXIgcHJvbXB0IHJlcGx5IGFuZCBhbGwgdGhlIHByb3ZpZGVkIGRldGFpbHMuIEkgc3VnZ2VzdCB5b3UgY2hlY2sgeW91ciBpbnRlcm5ldCBjb25uZWN0aW9uIGFuZCBtYWtlIHN1cmUgaXQgaXMgcHJvcGVybHkgd29ya2luZy4gSWYgYWZ0ZXIgZG9pbmcgdGhpcywgeW91cmUgc3RpbGwgZXhwZXJpZW5jaW5nIGlzc3VlcywgcGxlYXNlIHRyeSB0aGUgc3RlcHMgYmVsb3c6ClRoZXkgbGVhcm5lZCBxdWlja2x5IHRoYXQgaWYgdGhleSB3YW50IHRvIHNlZSB1cyBvciBtYWtlIHBsYW5zIHRvIGhhdmUgdGhlaXIgYWN0IHRvZ2V0aGVyLiBXZSBkb24ndCBndWlsdCB0aGVtIG9yIHRyeSB0byBjaGFuZ2UgdGhlbS4gV2UganVzdCBtYWtlIHBsYW5zIGFuZCBkbyBvdXIgdGhpbmcgd2V0aGVyIHRoZXkgaGF2ZSBpdCB0b2dldGhlciBvciBub3QuIApJZiB5b3UgZm9yZXNlZSBsb3RzIG9mIGxlZnRvdmVycywgZW5jb3VyYWdlIHlvdXIgZ3Vlc3RzIHRvIGJyaW5nIGNvbnRhaW5lcnMgdG8gdGFrZSBsZWZ0b3ZlcnMgaG9tZS4gCkFzaG1lYSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KVGhlIGFtb3VudCBvZiBwcm9vZiBzaG91bGQgYmUgcHJvcG9ydGlvbmFsIHRvIHRoZSBtYWduaXR1ZGUgb2YgdGhlIGNsYWltLiBUaGlzIGlzIGFic3VyZC4gSSBvbmx5IGNvbW1lbnRlZCBpbiB0aGUgZmlyc3QgcGxhY2UgYmVjYXVzZSBPUCBpcyBsb29raW5nIHRvIGhlbHAgc29tZW9uZSB3aXRoIGEgbWVudGFsIGhlYWx0aCBwcm9ibGVtLCBhbmQgSSB0aGluayBpdCdzIHBvdGVudGlhbGx5IGRhbmdlcm91cyB0byB0cnkgdG8gY3VyZSBhIHNlcmlvdXMgaGVhbHRoIHByb2JsZW0gd2l0aCB2aWJyYXRpb25zIHdoZW4gdGhlcmUgYXJlIGV4cGVyaW1lbnRhbGx5IHZhbGlkIHRyZWF0bWVudHMgYXZhaWxhYmxlIHRoYXQgbWlnaHQgYWN0dWFsbHkgc2F2ZSB0aGVpciBsaWZlLiAKVGhlIHN3b3JkIGxvb2tzIGxpa2UgYSBuYWlsIGluIGEgQmljIHBlbiB0dWJlIHNjYWJiYXJkLiBUaGlzIGlzbiBhIGdvb2QgcGljdHVyZSBvZiBpdC4gCkZvdW5kZWQgaW4gMTk3NiwgdGhlIFNvdGhlYnkgSW50ZXJuYXRpb25hbCBSZWFsdHkgYnJhbmQgaXMgYSB1bmlxdWUgbHV4dXJ5IG5ldHdvcmsgb2YgYnJva2VyYWdlIGFnZW5jaWVzIG9mZmVyaW5nIGEgd2lkZSBjb2xsZWN0aW9uIG9mIGx1eHVyeSBob21lcywgZXN0YXRlcyBhbmQgcHJvcGVydGllcyBmb3Igc2FsZSB0aHJvdWdob3V0IHRoZSB3b3JsZC4gV2l0aCBtb3JlIHRoYW4gOTkwIG9mZmljZXMgYW5kIDIyLDUwMCBzYWxlcyBhc3NvY2lhdGVzIGFjcm9zcyA3MiBjb3VudHJpZXMgYW5kIHRlcnJpdG9yaWVzLCBvdXIgbmV0d29yayBpcyBjb21taXR0ZWQgdG8gaGVscGluZyBpdHMgY2xpZW50cyBmaW5kIGEgaG9tZSBhbmQgbHV4dXJ5IHJlYWwgZXN0YXRlIGFnZW50IGluIHRoZSB3b3JsZCBtb3N0IGRlc2lyZWQgbG9jYXRpb25zLCBoZW5jZSBvdXIgcHJlc2VuY2UgaW4gUXVlZW5zbGFuZC4gV2Ugb2ZmZXIgYSBjb21wbGV0ZSBwYWNrYWdlIG9mIHJlYWwgZXN0YXRlIHNlcnZpY2VzIGtub3duIGZvciByZXByZXNlbnRpbmcgZXh0cmFvcmRpbmFyeSBsdXh1cnkgcmVhbCBlc3RhdGUgdGhyb3VnaG91dCB0aGUgd29ybGQuLiAKTGFzIHNpZ3VpZW50ZXMgQ29uZGljaW9uZXMgZGUgc2VydmljaW8gc2UgYXBsaWNhbiBhbCB1c28gZGUgZXN0YSBSZWQuIAooVGhvdWdoLCBJIGRvbiBrbm93IGlmIEJvbmVzIGlzICJpZG9saXplZCBieSBuZWFybHkgZXZlcnlvbmUgZWxzZSIpCkJ1dCBpdCBjb3VsZCBiZSB0aGF0IHRoZSBoZWFkcGhvbmVzIGFyZSBiZW50IG9yIG5vdCBjbGVhbi5JZiBpdCdzIHlvdXIgcGhvbmUgaXQncyBhY3R1YWxseSByZWFzb25hYmx5IGNoZWFwIHRvIGZpeC4gSSBmaXhlZCBteSBpUGhvbmVzIGF1eCBjb3JkIGZvciBhIGNvdXBsZSBkb2xsYXJzIHdoZW4gSSB3YXMgaGF2aW5nIGlzc3Vlcy4gVW5mb3J0dW5hdGVseSB0aG91Z2ggaXQgdGFrZXMgaG91cnMgY2F1c2Ugd2l0aCBtb3N0IHBob25lcyB5b3UgaGF2ZSB0byBmdWxseSBkaXNtYW50bGUgdGhlIHBob25lLiAKQnV0IEkgdGhpbmsgYXMgZnJlbmNocywgd2UgbWFrZSBhIHBvaW50IHRvIHNlcGFyYXRlIHRob3NlIHdobyBhY3RpdmVseSBjb2xsYWJvcmF0ZSwgbGlrZSBQdGFpbiAoZXZlbiBpZiBzb21lIG1heSBqdWRnZSB0aGlzIGNvbnRyb3ZlcnNpYWwuIApXaGF0IGRvIHlvdSBndXlzIHRoaW5rPy4gClRoaXMgc2VsbGVyIHdhcyByZWFkeSB0byBzZWxsIG5vdyBhbmQgd2FudGVkIHRvIHJvbGwgdGhlIHByb2NlZWRzIGFzIGEgMTAzMSBleGNoYW5nZSB0byBhIHByb3BlcnR5IGluIGhpcyBob21ldG93biBvZiBWaXJnaW5pYSBCZWFjaCAod2hlcmUgaGUgd2FzIGN1cnJlbnRseSBsaXZpbmcpLiBIZSBzYWlkIG1ha2UgYW4gb2ZmZXIuIEkgYXNrZWQgZm9yIHNvbWUgb2YgaGlzIGZpbmFuY2lhbHMgYW5kIHRvbGQgaGltIGFnYWluIEkgY291bGQgb2ZmZXIgJDIwNWsgZm9yIGl0LiAKW01dICBbc2NvcmUgaGlkZGVuXSAgc3VibWl0dGVkIDYgZGF5cyBhZ28KTnVtYm5lc3MgaXMgd2VsbCBrbm93biB0byBoYXBwZW4gaW4gdGhlIGZhY2Ugb2YgcGVyc2lzdGVudCBhbmQgaG9ycmlmaWMgaW5mb3JtYXRpb24sIGVzcGVjaWFsbHkgd2hlbiBubyByZWFsIGhvcGUgaXMgaW4gc2lnaHQuIE51bWJuZXNzIGlzIGEgY2VudHJhbCBzeW1wdG9tLCBhbiBlbnZlbG9waW5nIGV4cGVyaWVuY2UsIGZvciBwZW9wbGUgd2hvIGhhdmUgYmVlbiB0cmF1bWF0aXplZC4gSSBub3QgYXJndWluZyB0aGF0IHRoZSByZWFkaW5nIHB1YmxpYyBzdWZmZXJzIGZyb20gY29sbGVjdGl2ZSBQVFNEIHdpdGggaXRzIGNvbnN0ZWxsYXRpb24gb2Ygc3ltcHRvbXMgbGlrZSBuaWdodG1hcmVzLCBmbGFzaGJhY2tzLCBhbmQgYmVpbmcgZWFzaWx5IHN0YXJ0bGVkIGJ1dCBJIGZlYXIgdGhhdCBvdXIgbnVtYm5lc3MsIG5ldmVydGhlbGVzcywgbWF5IGNsb3NlIHVzIG9mZiBmcm9tIHRha2luZyBhY3Rpb24gYXMgYSBjb3VudHJ5IHRvIHJlaW4gaW4gdGhlIGRlYXRocyBhbmQgZGVzdHJ1Y3Rpb24gY2F1c2VkIGJ5IGRpc2Vhc2UuClp1IGRpZXNlbSBaZWl0cHVua3Qgd2FyIGVzIGRhbm4gc2Nob24gc28gZWluIGdld2FsdGlnZXIgVW13ZWcsIGRhc3Mgc2llIHdpZWRlciB6dXJjayBnZWZhaHJlbiBzaW5kLi4gCkZvbGxvd2luZyBhIG11Y2ggaW1wcm92ZWQgcGVyZm9ybWFuY2UgdGhleSB3ZXJlIHZlcnkgdW5sdWNreSB0byBsb3NlIDMgMiwgd2l0aCB0aGUgY2l2aWwgZW5naW5lZXJzIHNjb3Jpbmcgd2l0aCB0aGUgbGFzdCBraWNrIG9mIHRoZSBnYW1lLi4gCkFueXdheSwgd2hhdGV2ZXIgaGFwcGVucyB3aXRoIG15IG5leHQgY2FyZWVyLCBJIGtub3cgdGhhdCBJJ2xsIG5ldmVyIHRydWx5IHN0b3AgcGxheWluZyBwb2tlciAoanVzdCBhc2sgRmVkb3IgSG9seiB3aGF0IGhhcHBlbnMgd2hlbiB5b3UgcmV0aXJlKSEgU2VyaW91c2x5IHRob3VnaCwgSSB3aWxsIGFsd2F5cyBsb3ZlIHRoZSBnYW1lIGFuZCB0aGUgcGVvcGxlIGluIGl0IGFuZCBJJ20gc28gdGhhbmtmdWwgZm9yIGV2ZXJ5b25lIEkndmUgbWV0IGFuZCBldmVyeXRoaW5nIEkndmUgZXhwZXJpZW5jZWQuIFNvIHdpdGggdGhhdCwgc28gbG9uZywgYW5kIHRoYW5rcyBmb3IgYWxsIHRoZSBmaXNoIS4gCkkgbmV2ZXIgcHV0IHRvbyBtdWNoIHN0b2NrIGludG8gdGhlICJ3b21lbiBhcmUgdGhlIHJha2Ugb2YgbGlmZSIgc2F5aW5nLCBidXQgaXQgY2VydGFpbmx5IGZlbHQgdGhhdCB3YXkgbGFzdCBuaWdodC4gTXkgb3duIGZhdWx0IHJlZ2FyZGxlc3MsIGJ1dCB0aGUgc2lsdmVyIGxpbmluZyBpcyB0aGF0IEkgb2J2aW91c2x5IGhhdmUgc29tZSBmb2N1cy9tZW50YWwgbGVha3MgaW4gbXkgZ2FtZSB0aGF0IG5lZWQgcGx1Z2dpbmcuCkJvc3RvbiBHbG9iZTogSXQncyB0aW1lIGZvciB3ZXN0ZXJuIE1hc3MuIHRvIGdldCB1cCB0byBicm9hZGJhbmQgc3BlZWQKRWFybHkgb24gYXQgdGhlIEFOQSBNYXN0ZXJzIG9mIE1hcmtldGluZyBjb25mZXJlbmNlIGluIE9ybGFuZG8gdGhpcyB3ZWVrLCAyMDAgdG9wIG1hcmtldGluZyBleGVjdXRpdmVzIGdhdGhlcmVkIHRvZ2V0aGVyIHRvIGhhc2ggb3V0IHNvbWUgb2YgdGhlIGJpZ2dlc3QgY2hhbGxlbmdlcyBhbmQgb3Bwb3J0dW5pdGllcyBmYWNpbmcgdGhlIGluZHVzdHJ5IHJpZ2h0IG5vdy4gKEZvciBtb3JlIG9uIHRoZSBNYXN0ZXIncyBDaXJjbGUsIHNlZSBvdXIgRGF5IDEgYmxvZy4pIENoaWVmIGFtb25nIHRoZSBwYXJ0aWNpcGFudHMgd2FzIEFsaWNpYSBIYXRjaCwgdGhlIERlbG9pdHRlIERpZ2l0YWwgQ01PIGFuZCBhIGJvb3N0ZXIgZm9yIHRoZSBtb2Rlcm4gbWFya2V0ZXIuLiAKb25zIGRlIG1hbHZlcnNhdGlvbnMgZGFucyBkZXMgY2FzaW5vcyBQYXJ0b3VjaGUKU28gZXZlbiB0aG91Z2ggaGUgb2ZmZXJzIHRvIGhlbHAgbWUsIEkgdGhlIG9uZSB3aG8gd2FrZXMgdXAgd2hlbiB0aGUgYmFiaWVzIGRvLCBhbmQgSSB0aGVuIGhhdmUgdG8gd2FrZSBoaW0gdXAuIApTYWlkIGEgZGlmZmVyZW50IHdheSwgaWYgeW91IGEgY291Y2ggcG90YXRvIGFuZCBkb24gY2hhbGxlbmdlIHlvdXJzZWxmIG1lbnRhbGx5IG9uIGEgcmVndWxhciBiYXNpcywgYnJhaW4gdHJhaW5pbmcgY291bGQgYmUgaGVscGZ1bC4gCkRlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgdG8gcHJvdmlkZSBwaHl0b3Nhbml0YXJ5IGNlcnRpZmljYXRlcy4gVGhleSBhcmUgYWxzbyBhIGdvb2QgcmVzb3VyY2UgZm9yIGFkdmljZSBvbiB3aGljaCBwbGFudHMsIHN1Y2ggYXMgaW52YXNpdmUgc3BlY2llcywgY2Fubm90IGVudGVyIENhbmFkYS5SZWxhdGVkUmVhZCBtb3JlIGFib3V0IGdhcmRlbmluZ0V2ZXJ5dGhpbmcgeW91IG5lZWQgdG8ga25vdyBhYm91dCBzcHJpbmcgZ2FyZGVuaW5nRm9vZCBpcyBhbHNvIGEgYmlnIHBhcnQgb2YgdGhlIHNob3cuIFRoZSBDb252ZW50aW9uIENlbnRlciBmb29kIG91dGxldHMgZG8gYSBnb29kIGpvYiwgYW5kIG1hbnkgb2YgdGhlIGJvb3RocyBvZmZlciB0ZW1wdGluZyBmb29kcyB0byBzYW1wbGUuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbk5vIGV4dHJhIHBva2VyIG1hY2hpbmVzIHdpbGwgYmUgYWxsb3dlZCBpbnB1YnMgYW5kIGNsdWJzIGluIFdhcnJhd29uZywgV2luZGFuZywgQmVya2VsZXkgYW5kIFdhcmlsbGEsIGFzIHBhcnQgb2YgYSBnb3Zlcm5tZW50IGNyYWNrIGRvd24gb24gcHJvYmxlbSBnYW1ibGluZy4gTlNXIHJhY2luZyBtaW5pc3RlciBQYXVsIFRvb2xlIGFubm91bmNlZCB0aGUgcG9raWVzIGNhcCBvbiBUdWVzZGF5LCB3aGljaCBtZWFuc3RoZSBnb3Zlcm5tZW50IHdpbGxub3QgYWxsb3cgdGhlIG51bWJlciBvZmdhbWluZyBtYWNoaW5lcyB0byBpbmNyZWFzZSBpbiAiaGlnaGVyIHJpc2siIGNvbW11bml0aWVzIGFjcm9zcyB0aGUgc3RhdGUuICJDb21tdW5pdGllcyBjb25zaWRlcmVkIHRvIGJlIG1vcmUgdnVsbmVyYWJsZSB0byBnYW1ibGluZyB3aWxsIGJlIGEgbm8gZ28gem9uZSBmb3IgYWRkaXRpb25hbCBtYWNoaW5lcywiIGhlIHNhaWQuIApVUyQgaW4gZGVuIEJhdSBkZXIgSG9jaHNjaHVsZ2VidWRlLiAKSnVzdCB1c2UgTWVzc2VyIG1hbiwgSSByZWFsbHkgZG9uJ3QgdGhpbmsgeW91J2QgbmVlZCBhIGJvb2suIFlvdSdyZSBhIG9uZSBzb3VyY2UgdHlwZSBJIHRoaW5rLiAKSU1QT1JUQU5UISBQTEVBU0UgUkVBRCBUSEVTRSBURVJNUyBPRiBTQUxFICAgUFJJTlQgUFJPRFVDVFMgQ0FSRUZVTExZLCBBUyBUSEVTRSBURVJNUyBBRkZFQ1QgWU9VUiBMRUdBTCBSSUdIVFMgQU5EIE9CTElHQVRJT05TLiBUSEVTRSBURVJNUyBHT1ZFUk4gWU9VUiBQVVJDSEFTRSBPRiBDSElDQUdPIFNVTiBUSU1FUyBQUklOVCBQUk9EVUNUUy4KUGVvcGxlIExpa2UgVXMKVGhlIHdob2xlIGRlY29yIHN0eWxlIGhhcyBhbiBpbnRyaWd1aW5nIGZsZWEgbWFya2V0IGxvb2suIE9uY2UgcGFpbnRlZCwgdGFraW5nIGEgcGllY2Ugb2Ygc2FuZCBwYXBlciBhbmQgZ29pbmcgbGlnaHRseSBvdmVyIGRpZmZlcmVudCBhcmVhcyBvZiB0aGUgcGllY2Ugd2lsbCBnaXZlIHRoZSBwaWVjZSB0aGUgZGlzdHJlc3NlZCBsb29rLiAKVGhpcyB0eXBlIG9mIHRoaW5nIGlzIHdoeSBtYW55IHN1Z2dlc3QgbWFzc2FnZSB0aGVyYXB5Li4gCldoZW4gdGhpcyBjYXJkIGlzIGFscmVhZHkgZmFjZWQgdXAsIGxhcmdlIGJldHMgd2lsbCBiZSBwbGFjZWQgb24gdGhlIFRleGFzIGhvbGRlbSB0YWJsZSBiZWNhdXNlIGl0IHdpbGwgYmUgZG91YmxlZC4gV2hlbiB0aGUgcml2ZXIgY2FyZCBvciB0aGUgZmlmdGggY2FyZCBpcyBhbHJlYWR5IGRlYWx0LCB0aGUgcGxheWVycyB3aWxsIGRlY2lkZSBpZiB0aGV5IHdpbGwgcmFpc2UsIGNoZWNrLCBjYWxsIG9yIGZvbGQuIFRoZSBkZWFsZXIgZGVhbHMgb3V0IDIgY2FyZHMgZmFjZSBkb3duLiAKV2hlbiBzaGUgY3Jvc3NlZCBhIGxpbmUsIEkganVzdCBzYWlkIG5vLiAKVG91cm5hbWVudHMgd2VyZSBoZWxkIGluIGx1eHVyeSBob3RlbHMgaW4gQmV2ZXJseSBIaWxscyBhbmQgb3JnYW5pemVkIGJ5IGEgd29tYW4gaWRlbnRpZmllZCBhcyBNb2xseSBCbG9vbSwgd2hvIGlzIGJlaW5nIHN1ZWQgZm9yIG5lYXJseSAkNDc1LDAwMCBwYWlkIHRvIGhlciBieSBSdWRlcm1hbiwgdGhlIGxhd3N1aXRzIHNheS4KSXQncyByZWZyZXNoaW5nIHRvIHNlZSB0aGUgc2lsdmVyIHNjcmVlbiBzcGluIG9uIHRoZSBsaWZlIG9mIGEgZ2VuaXVzIGJhbGFuY2VkIHdpdGggdGhlIHRydXRoIGFib3V0IHdoYXQgYSBwcmljayBzYWlkIGdlbml1cyBjb3VsZCBiZS4gClRoZSBwcm9ibGVtIGlzIHRoYXQgdGhvc2UgImxhcmdlIGJ1c2luZXNzZXMiICh3aGljaCBhcmUgdXN1YWxseSBjaGFpbiByZXN0YXVyYW50cyB0aGF0IGFyZSBhY3R1YWxseSBzbWFsbCBmcmFuY2hpc2UgYnVzaW5lc3NlcyB3aXRoIGFuIG92ZXJhcmNoaW5nIGNvcnBvcmF0ZSBzdHJ1Y3R1cmUpIGluIG9yZGVyIHRvIHBheSBpbmNyZWFzZXMgaW4gd2FnZXMgYXJlIGdvaW5nIHRvIGVpdGhlciBpbmNyZWFzZSBwcmljZXMsIHJlZHVjZSBhdmFpbGFiaWxpdHkgb2Ygc2VydmljZSBvciByZWR1Y2UgcXVhbGl0eSBvciBwb3J0aW9ucy4gT3Igc29tZSBjb21iaW5hdGlvbiBvZiB0aGUgdGhyZWUuCklmIHlvdSBzZWxlY3QgdG8gY29udGludWUsIHlvdSB3aWxsIGhhdmUgdG8gcGF5IHN1YnNjcmlwdGlvbiBmZWUgd2hpY2ggaXMgbm90IGJpZy4gSXQgc3RhcnRzIGF0ICQxOSBwZXIgbW9udGguIApFRElUMjogWW91IGNhbiBnbyB0byB0aGUgU3RhdGUgQm9hcmQgb2YgRWxlY3Rpb24gVm90ZXIgTG9va1VwIHRvb2wgYW5kIChldmVudHVhbGx5LCBvbmNlIGl0IHNldHRsZWQpLCBmaW5kIHlvdXIgc2FtcGxlIGJhbGxvdCB3aXRoIGFsbCB0aGUgZWxlY3Rpb25zIHlvdSBhYmxlIHRvIHZvdGUgb24gaW4gTm92ZW1iZXIuIEZyb20gdGhlcmUsIHlvdSBrbm93IHdoaWNoIGNhbmRpZGF0ZXMgeW91IG5lZWQgdG8gcmVzZWFyY2ggdG8gbWFrZSB0aGUgbW9zdCBpbmZvcm1lZCBkZWNpc2lvbi4gCkhpbSBpbiBjbG9zZS4KQW0gU2Ftc3RhZywgZGVuIDE2LiAKWW91IGRvIG5vdCBuZWVkIGEgZGVncmVlIGluIHBzeWNob2xvZ3kgdG8gZGVjaXBoZXIgd2hhdCBwb2ludCBCYWxlIHdhcyBtYWtpbmcgd2l0aCBoaXMgcHJpY2tseSBib2R5IGxhbmd1YWdlLiBIaXMgZGlzcGxheSBvZiBkaXNzYXRpc2ZhY3Rpb24gYXQgYSBsYWNrIG9mIHBsYXlpbmcgdGltZSB1bmRlciBTYW50aWFnbyBTb2xhcmkgd2FzIGRlbGl2ZXJlZCB3aXRoIGFib3V0IGFzIG11Y2ggc3VidGxldHkgYXMgYSBwZWFjb2NrIHRyeWluZyB0byBzdGF5IGluY29nbml0byBhbW9uZyBhIGZsb2NrIG9mIHBpZ2VvbnMuLiAKV2hpbGUgcmVnaXN0ZXJpbmcgdG8gYW55IHdlYnNpdGUgdXNlcnMgd2lsbCBnZXQgdGhlIE1hYydzIHBva2VyIGJvbnVzZXMnIGNvZGUsIHdoaWNoIG11c3QgZ2V0IHRoZSBvZmZlcmVkIGJlbmVmaXRzLiAKSSBkb25lLiBJIGhhZCBlbm91Z2guIFlvdSBjYW4ganVzdCBzcGFtIC9yL0hhaWxDb3Jwb3JhdGUgYW5kIGV4cGVjdCBhbiB1cHZvdGUuIFlvdSBjYW4ganVzdCBiZSBsaWtlICJkdWRlLCB5b3UgcGxheWluZyBhIGdhbWU/IiBhbmQgcG9zdCAvci9IYWlsQ29ycG9yYXRlLiBZb3UganVzdCBjYW4gZG91YnQgeW91IGV2ZW4gd29yayBmb3IgY29ycG9yYXRlIGdpdmVuIGhvdyBhZ2FpbnN0IHRoZW0geW91IGFyZS4gWW91IGxpdmUgaW4gYSBjYXJkYm9hcmQgYm94LCB0eXBpbmcgb24geW91ciBDcmFwQm9vayBQcm8sIGZlZWxpbmcgZ29vZCBhYm91dCB5b3Vyc2VsZiBiZWNhdXNlIHlvdSB0aGluayB5b3UganVzdCAiY2FsbGVkIHNvbWVvbmUgZWxzZSBvdXQiIGZvciBiZWluZyBhIGNvcnBvcmF0ZSBzaGlsbC4KRHJlaSBSZXN0YXVyYW50cyBzb3JnZW4gZnIgZGFzIGxlaWJsaWNoZSBXb2hsIGRlciBHc3RlLiAKVGhlIFNwaXRmaXJlcyBoYXZlIGFuIGludGVyZXN0aW5nIGZpbmlzaGluZyBraWNrIHdpdGggdHdvIGdhbWVzIGFnYWluc3QgdGhlIEZpcmViaXJkcyBhbmQgdHdvIGFnYWluc3QgdGhlIEdyZXlob3VuZHMuIE5vdCBvbmx5IHdpbGwgdGhleSBoYXZlIGEgc2F5IGluIHRoZWlyIG93biBmYXRlLCB0aGV5IHdpbGwgaGVscCBkZXRlcm1pbmUgdGhlIEtpbmdzdG9uIEZsaW50IHR1cnRsZSByYWNlIGZvciBmaXJzdCBwaWNrIG92ZXJhbGwgYW5kIGFsc28gdGhlIFNhZ2luYXcgU2F1bHQgU3RlLiBNYXJpZSBqb3VzdCBmb3IgV2VzdCBEaXZpc2lvbiBjaGFtcC4uIApJdCBhIGRlYWQgZW5kIGNhcmVlciBwYXRoLiAKSXQgd2FzIGEgYnJlYWt0aHJvdWdoISBObywgdGhlIGJyZWFrdGhyb3VnaCBoYWQgbm90aGluZyB0byBkbyB3aXRoIHRvbGVyYW50bHkgZW5kdXJpbmcgYSBnYXJydWxvdXMgY2FiYmllIHdpdGggYSBkaXBsb21hIGluIGZpbG0gYXBwcmVjaWF0aW9uLCBidXQgdGhlIGxpYmVyYXRpbmcgYXdhcmVuZXNzIHRoYXQgSSBjb3VsZCBnYW1ibGUgaW4gTWFjYXUsIGV2ZW4gaWYgSSB3YXMgYSBjdXJkIHJpY2UgZWF0aW5nIEl5ZXIuIEJlc2lkZXMsIG15IHdpZmUgd2FzIHN0aWxsIGluIE11bWJhaS4uIApUZXJlbmNlIEthd2FqYSwgd2hvc2UgTHVtYXNjYXBlcyBzaG93aW5nIHRoZSB2YXN0IGp1bWJsZSBvZiBtYXJrZXRpbmcgdGVjaCBwbGF5ZXJzIGhhdmUgYmVlbiBzdGFwbGVzIGF0IG1hcmtldGluZyBjb25mZXJlbmNlcyBmb3IgeWVhcnMsIHVudmVpbGVkIGhpcyBsYXRlc3QgY3JlYXRpb24gYXQgdGhlIEFOQSBNYXN0ZXJzIG9mIE1hcmtldGluZyBDb25mZXJlbmNlIGluIE9ybGFuZG8sIEZsb3JpZGEgb24gVGh1cnNkYXkuIFRoaXMgb25lIHNob3dzIGRpcmVjdCB0byBjb25zdW1lciBzdGFydHVwcyB0aGF0IGhhdmUgYmVlbiBlYXRpbmcgYXdheSBhdCBiaWcgZXN0YWJsaXNoZWQgYmVoZW1vdGhzIGxpa2UgUHJvY3RlciBHYW1ibGUgQ28uClRoZSBuZXdzcGFwZXJzIHNvdWdodCB0byByZWFjaCB0aG9zZSBuYW1lZCBpbiB0aGUgd2FycmFudC4gTW9zdCBkZWNsaW5lZCBjb21tZW50IG9yIGRpZCBub3QgcmV0dXJuIHBob25lIGNhbGxzIGFuZCBlbWFpbHMuIFNpbXBseSBiZWluZyBuYW1lZCBpbiBhIHNlYXJjaCB3YXJyYW50IGlzIG5vdCBhbiBpbXBsaWNhdGlvbiBvZiB3cm9uZ2RvaW5nLgoiSSBkaWRuJ3QgbG9zZSBob3VzZXMsIGNhcnMsIGZyaWVuZHNoaXBzIG9yIHJlbGF0aW9uc2hpcHMsIiBoZSBzYWlkLiAiWW91IGNhbiBnZXQgaGVscCBiZWZvcmUgaXQgZ2V0cyB0byB0aGF0IHBvaW50LiIgSGluZG1hcnNoLCB3aG8gc3Bva2UgdG8gMTUwIHBlb3BsZSBhdCBBbGJ1cnkgVEFGRSBhcyBhbiBhbWJhc3NhZG9yIGZvciBDbHVicyBOU1cgZm9yIFJlc3BvbnNpYmxlIEdhbWJsaW5nIEF3YXJlbmVzcyBXZWVrLCBlbmNvdXJhZ2VkIHBlb3BsZSB0byBzcGVhayB1cCBpZiB0aGV5IHdlcmUgY29uY2VybmVkIGFib3V0IHRoZWlyIGdhbWJsaW5nIGhhYml0cy4gClRoaXMgZG9lcyBub3QgbWVhbiB0aGF0IGFsbCBpbmZvcm1hdGlvbiBtdXN0IGJlIHByb3ZpZGVkIGluIHJlc3BvbnNlIHRvIGEgcmVxdWVzdCwgdGhlcmUgYXJlIHJlYXNvbnMgaW5jbHVkaW5nIERhdGEgUHJvdGVjdGlvbiwgQ29uZmlkZW50aWFsaXR5IGFuZCBDb21tZXJjaWFsIEludGVyZXN0cyB0aGF0IG1heSBleGVtcHQgdGhlIGluZm9ybWF0aW9uIGZvciBiZWluZyBwcm92aWRlZC4gSWYgdGhpcyBpcyB0aGUgY2FzZSB0aGUgVW5pdmVyc2l0eSB3aWxsIGV4cGxhaW4gaW4gZnVsbCB3aHkgaW5mb3JtYXRpb24gaXMgYmVpbmcgd2l0aGhlbGQgYW5kIHlvdSBoYXZlIHRoZSByaWdodCB0byBhcHBlYWwuLiAKU2FpZCBib3QgYXBwbGljYXRpb25zIHdhdGNoIHRoZSB0YWJsZXMgYW5kIGRhdGEgbWluZSBhbGwgaW5mb3JtYXRpb24gdGhhdCBnZXRzICJwb3N0ZWQiIHRvIHRoZSBjaGF0IGxvZy4gCkFtb25nIHRob3VzYW5kcyBvZiBwb2tlciBwcm9kdWN0cyBvdXQgdGhlcmUsIHlvdSB3aWxsIGF1dG9tYXRpY2FsbHkgZmluZCB5b3Vyc2VsZiBydW5uaW5nIHRvd2FyZHMgYSBwcm9kdWN0IGxpa2UgU2lsdmVyIEJ1ZHdlaXNlciBTcGlubmVyIFBva2VyIENhcmQgUHJvdGVjdG9yLiBUaGlzIHByb2R1Y3Qgd2lsbCBhdHRyYWN0IHlvdSBieSBhbGwgbWVhbnMuIFRoaXMgcHJvZHVjdCB3aWxsIGRlZmluaXRlbHkgbWFrZSBzdXJlIHRoYXQgeW91IGZlZWwgc29tZXRoaW5nIHNwZWNpYWwgd2hlbiBob2xkaW5nIGl0IGluIHlvdXIgaGFuZHMuIApJY2kgbGVzIGFuZ2xhaXMgZGUgTWFuZnJlZCBNYW5uIHNvbm5lbnQgYml6YXJyZW1lbnQgY29tbWUgbGVzIGNhbmFkaWVucyBkdSBCYW5kIHJlcHJlbmFudCBEeWxhbiwgZXQgb24gY3JvaXJhaXQgcHJlc3F1ZSBlbnRlbmRyZSBSaWNoYXJkIE1hbnVlbCBub3VzIGRjbGluZXIgbGEgbXRvLCBkZSBzYSB2b2l4IGQnb3V0cmUgdG9tYmUuCklmIHlvdSB3aW4gdGhpcyB3YXkgaW4gYW4gZWFybGllciBiZXR0aW5nIHJvdW5kLCB0aGV5IHdvbid0IGV2ZW4gZmluaXNoIGRlYWxpbmcgdGhlIGNvbW11bml0eSBjYXJkcyBvdXQuIApTZW5hdGUgUHJlc2lkZW50IEpvZSBOZWdyb24sIFIgU3R1YXJ0LCBoYXMgc2FpZCBoZSB3YW50cyB0aGUgTGVnaXNsYXR1cmUgdG8gYWRkcmVzcyB0aGUgd2lsbCBvZiB0aGUgdm90ZXJzLiBCdXQgZm9yIHRoZSBTZW1pbm9sZXMsIHNsb3RzIG91dHNpZGUgb2YgQnJvd2FyZCBhbmQgTWlhbWkgRGFkZSBjb3VudGllcyBhcmUgYSBubyBnby4KQnV0IHRoZXkgYXJlIGNsZWFybHkgbGV0dGluZyB5b3Uga25vdyB0aGF0IHRoZXkgaGF2ZSB0aGF0IGFiaWxpdHkgYW5kIGNhcGFiaWxpdHkgICBhbmQgdGhhdCBpdCBtaWdodCBjb21lIHlvdXIgd2F5LiAKSXQgYSBsb25nIHByb2Nlc3MgdGhhdCBoYXMgdG8gY29uc3RhbnRseSBiZSBhZGp1c3RlZC4gCk0gcHJldmlvdXNseSBhaXJlZCBhIGNvbW1lcmNpYWwgaW4gdGhlIDIwMTQgZ2FtZSBzdGFycmluZyBZZWxsb3cgTSBJbiBpdHMgMjAxMyBjb21tZXJjaWFsLCAiTG92ZSBCYWxsYWQsIiBSZWQgcHJvZmVzc2VkIGhpcyBsb3ZlIHdpdGggYSByb21hbnRpYyBzZXJlbmFkZS4gCkRhbW4sIHRoaXMgaXMgZXhhY3RseSBob3cgaXQgZmVsdCEgVGhlIGNvbnN0YW50IGFuZCBhbm5veWluZyByYW1ibGluZyBmcm9tIHRoZSBib3NzZXMgc3VyZSBsb29rcyBsaWtlIGl0IHdhcyBjYXVzZWQgYnkgdGhpcy4gSSBsaWtlZCB0aGUgb3ZlcmFsbCBzdG9yeSBzdHJ1Y3R1cmUsIGdvaW5nIGZyb20gdGhlIG9sZCBUcmlzdHJhbSBjYXRoZWRyYWwsIHRvIE1vdW50IEFycmVhdCBhbmQgdGhlbiB0aGUgSGlnaCBIZWF2ZW5zLiBCdXQgeWVhaCwgaXQgd2FzIHJvdWdoIGFuZCBtYW4sIGtpbGxpbmcgQ2FpbiBpbiBhIGluIGdhbWUgY3V0c2NlbmUgd2l0aCBhIGJ1dHRlcmZseSBmYXJ0IGZyb20gTWFnaGRhIGZlbHQgZGlzYXBwb2ludGluZyEgaGFoYWgKVGhleSBzZWUgdGhlIHBhdGllbnQgYXMgYSB0YXNrIGluc3RlYWQgb2YgYSBwZXJzb24uIFRoaXMgaXMgd2h5IGkgc3Ryb25nbHkgYmVsaWV2ZSB0aGF0IG9uZSB5ZWFyIG9mIG1lZGljYWwgc2Nob29sIHNob3VsZCBiZSBzcGVudCBhcyBhIG51cnNlIHdvcmtpbmcgb24gdGhlIGZsb29yIHNvIHByb3ZpZGVycyBjYW4gZ2FpbiBzb21lIGVtcGF0aHkgYW5kIGxlYXJuIGhvdyB0byB0cmVhdCBwZW9wbGUsIHdoYXQgYWN0dWFsbHkgd29ya3MgYW5kIHdoYXQgZG9lc24ndCwgYW5kIGhvdyB0byB0aGluayBsaWtlIGEgbnVyc2UgYW5kIHByaW9yaXRpemUuLiAKU2hlIHR1cm5lZCB1cCBoZXIgY2FyZHMgICA3IDMgb2Zmc3VpdCBidXQgaGFkIGdvbmUgb24sIGluIGEgY2xhc3NpYyBmcmVhayBvZiBiZWdpbm5lcidzIGx1Y2ssIHRvIGdldCBhIGZ1bGwgaG91c2UuIApUaGlzIGNvdWxkLCBpbiB0dXJuLCBoYXZlIGVmZmVjdHMgb24gc2xlZXAgcXVhbGl0eSBhbmQgdGhlIGJvZHkgYWJpbGl0eSB0byByZWd1bGF0ZSBib2R5IHRlbXBlcmF0dXJlLCBibG9vZCBwcmVzc3VyZSBhbmQgZ2x1Y29zZSBsZXZlbHMuIApJIHdpbGwgc2F5IHRob3VnaCwgdGhhdCBJIGFtIG1haW5seSBzZWVpbmcgaXQgYXMgSSBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byBkbyBzby4gSXRzIGEgYmlydGhkYXkgZ2lmdCBmcm9tIG15IG11bSwgYXMgYmVpbmcgYSB2ZXJ5IG11Y2ggeW91bmdlciBmYW4gb2YgdGhlIHNlcmllcyAoMSksIEkgaGF2ZW50IGhhZCBtdWNoIG9mIGEgY2hhbmNlIHRvIGFja25vd2xlZGdlIGFuZCBleHBlcmllbmNlIGJpZyB0aGluZ3Mgb2YgaW1wb3J0YW5jZSByZWxhdGluZyB0byB0aGUgc2VyaWVzIHdoZW4gY29tYmluZWQgd2l0aCBiZWluZyBzdHVjayBpbiBmYWlybHkgYm9yaW5nIFN5ZG5leS4gClN0aWxsIFJpdHRlbmhvdXNlIGlzIG15IGdvIHRvIGV2ZXJ5ZGF5IGRyaW5rZXIgYW5kIEUgSCBUYXlsb3IncyBSeWUgaXMgcHJldHR5IGdyZWF0IGFzIHdlbGwsIGp1c3QgYSBiaXQgb24gdGhlIHByaWNpZXIgc2lkZSBhdCAkNzBpc2guIElmIHlvdSBjYW4gc25hZyBhIGJvdHRsZSB3aGVuIHRoZXkgcmVsZWFzZSBpdCBuZXh0LCBXaWxsZXR0J3MgMyBhbmQgNCB5ZWFyIFJ5ZSBpcyBleGNlcHRpb25hbC4KQWx0aG91Z2ggdGhlIGJlc3QgZGVhbCBpcyB0byBmaW5kIGEgZnJpZW5kIHdobyBhbHJlYWR5IGhhcyB0aGUgdG9vbHMuIEkgZG8sIGFuZCBJIGRvbmUgdGhpcyB0cmFkZSB3aXRoIGEgbG90IG9mIHBlb3BsZSAgIHdvcmsgaW4gbXkgc2hvcCBtYWtpbmcgc2ltcGxlIHN0dWZmIGZvciBtZSB0byBzZWxsIGZvciBhIGZldyBob3VycywgYW5kIGluIHJldHVybiB5b3UgY2FuIHVzZSBteSB0b29scyBhbmQgSSBzdXBwbHkgdGhlIG1hdGVyaWFsIGZvciB5b3UgdG8gbWFrZSB5b3VyIG93biBnZWFyLgpTZWUgaWYgeW91ciB0aGVyYXBpc3QgY2FuIHRhbGsgYWJvdXQgdGhpcyBpc3N1ZSBhbG9uZyB3aXRoIHdoYXQgeW91IGFyZSBjdXJyZW50bHkgd29ya2luZyBvbi4gCllvdSBjYW4gZXZlbiByaWJib24gb3V0IGEgcGllY2Ugb2YgY2xvdGggb24gdGhlIGJhc2tldCdzIGhhbmRsZS4gVXNlIHlvdXIgY3JlYXRpdml0eSBhbmQgaW1hZ2luYXRpb24gd2hlbiBkZWNvcmF0aW5nIHRoZSBnaWZ0IGJhc2tldCBmb3IgYmVzdCByZXN1bHRzLi4gCllvdSBjYW4gc2VlIHdoZXJlIHRoZSBnYW1ibGluZyBpcywgYW5kIHdoZXJlIGl0IGlzIG5vdC4iSXQgd291bGQgYmUgZXh0cmVtZWx5IHNpbGx5IHRvIGdvIGRvd24gdGhlIGdhbWJsaW5nIHJvdXRlLiBJZiB5b3UgbWVldCBnYW1ibGVycywgeW91IGFyZSBnb2luZyB0byBtYWtlIG1vbmV5IGZyb20gdGhlbS4iQnV0IFJpY2hhcmQgYWRtaXR0ZWQgeW91IGNhbid0IGNvbXBsZXRlbHkgZXJhZGljYXRlIGx1Y2suIklmIEkgcGxheWVkIHlvdSAxMDAgdGltZXMsIEkgd291bGRuJ3QgYmVhdCB5b3UgMTAwIHRpbWVzLCIgaGUgZXhwbGFpbmVkLCAiYnV0IEkgd291bGQgYmVhdCB5b3UgbW9yZSB0aGFuIDUwIHRpbWVzLCB3aGljaCB3b3VsZCBtZWFuIEknZCBtYWtlIG1vbmV5LiJOb3Qgc3VycHJpc2luZ2x5LCBSaWNoYXJkLCB3aG8gc3BlbnQgdHdvIG1vbnRocyBwbGF5aW5nIHRoZSBWZWdhcyB0YWJsZXMsIHdhcyBpbnRyb2R1Y2VkIHRvIGNhcmRzIGF0IGEgdmVyeSBlYXJseSBhZ2UuIApJIGFtIHN0YXJ0aW5nIHRvIHdvcmsgb24gYSBnYW1lIHRoYXQgSSBwbGFuIHRvIGp1c3QgdHVybiBpbnRvIGEgc2hpdCBzaG93LiAKS25vdyB3aGF0IHlvdXIgMTIgeWVhciBvbGQgaXMgZG9pbmcgb24gdGhlIEludGVybmV0LiBJbnN0YWxsIGEga2V5bG9nZ2VyIGlmIHlvdSBoYXZlIHRvLiBDaGVjayB0aGVpciBoaXN0b3J5OyBnZXQgdGhlaXIgcGFzc3dvcmRzLiBQcml2YWN5IGlzIGltcG9ydGFudCwgYnV0IG5vdCBvbmxpbmUuIEdpdmUgdGhlbSBwcml2YWN5IGluIHRoZWlyIGJlZHJvb20gYW5kIHRoZSBiYXRocm9vbTsgZG8gbm90IHJlYWQgdGhlaXIgd3JpdHRlbiBvciBvZmZsaW5lIGpvdXJuYWwsIGJ1dCBzbm9vcCBvbiB0aGVpciBJbnRlcm5ldCB1c2FnZS4gSXQgYmUgYSBnb29kIGxlc3NvbiBmb3IgdGhlbSwgdGhhdCBub2JvZHkgaGFzIHByaXZhY3kgb24gdGhlIEludGVybmV0LCB0aGF0IHRoaW5ncyB5b3UgcG9zdCBjYW4gY29tZSBiYWNrIHRvIGhhdW50IHlvdS4gTW9zdCBpbXBvcnRhbnRseSwgdGFsayB0byB0aGVtLCBhbmQgcmVhbGx5LCByZWFsbHkgbGlzdGVuIHRvIHRoZW0sIGFuZCBsZXQgdGhlbSBrbm93IHRoYXQgdGhleSBjYW4gYW5kIHNob3VsZCB0ZWxsIHlvdSBhbnl0aGluZy4KQXNpZGUgZnJvbSBpc3N1aW5nIGEgc3RhdGVtZW50IHRvIHZhcmlvdXMgbmV3cyBvdXRsZXRzIHRoYXQgaXQgZG9lcyBub3QgY29tbWVudCBvbiBsZWdhbCBjYXNlcyBhbmQgdGhhdCBpdCAiaG9sZHMgZnJhbmNoaXNlIG93bmVycyBhY2NvdW50YWJsZSIgdG8gaXRzIHBvbGljaWVzLCBNYXNzYWdlIEVudnkgaGFzIGxhcmdlbHkga2VwdCBzaWxlbnQuIENvbXBhbnkgcmVwcmVzZW50YXRpdmVzIGRpZCBub3QgcmVzcG9uZCB0byBBZCBBZ2UncyByZXF1ZXN0IGZvciBjb21tZW50LiAKUG9rZXJTdGFycyBoYXMgYmVlbiB0ZXN0aW5nIFBvd2VyIFVwLCB3aGljaCBkaXNydXB0cyB0aGUgdHJhZGl0aW9uYWwgZ2FtZSBvZiBwb2tlciBieSBnaXZpbmcgcGxheWVycyBhIHdpZGUgcmFuZ2Ugb2YgYWJpbGl0aWVzIHRvIHNlZSBvciBjaG9vc2Ugc3BlY2lmaWMgY2FyZHMuIFRoZSBoeWJyaWQgdmVyc2lvbiBpcyB0aGUgbGF0ZXN0IGF0dGVtcHQgYnkgUG9rZXJTdGFycyBvd25lciBUaGUgU3RhcnMgR3JvdXAgSW5jLiBUbyByZXZpdmUgZ3Jvd3RoIGluIGl0cyBjb3JlIGJ1c2luZXNzLCBhbmQgdGhlIG5ldyBnYW1lIHdpbGwgYmUgZm9sbG93ZWQgYnkgb3RoZXIgdmFyaWF0aW9ucywgYWNjb3JkaW5nIHRvIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIFJhZmkgQXNoa2VuYXppLiAKU28/IERvIHdlIGRldmVsb3AgdGF4IGxhd3MgcGlja2luZyB3aW5uZXJzIGFuZCBsb3NlcnMgb3Igd2l0aCB0aGUgb2JqZWN0aXZlIG9mIGZhaXIgYnVzaW5lc3MgcnVsZXMgcmVzdWx0aW5nIGluIGEgbGV2ZWwgcGxheWluZyBmaWVsZCBmb3IgYWxsIChub3Qgc2F5aSBnIHRoaXMgaXMgYWx3YXlzIHRoZSBjYXNlIGJ1dCBpcyB0YWtlbiBhcyBhIHN0YXRlZCBvYmplY3RpdmUpCkxhc3QgeWVhciwgTWV0cm8gaW52ZXN0aWdhdGVkIDEzMSBqdXZlbmlsZSBwcm9zdGl0dXRpb24gY2FzZXMsIG1vc3QgaW52b2x2aW5nIGZlbWFsZSB2aWN0aW1zLCBhY2NvcmRpbmcgdG8gZGVwYXJ0bWVudCBkYXRhLiBPZiB0aG9zZSwgNzQgcGVyY2VudCB3ZXJlIGZyb20gTmV2YWRhICAgYW4gaW5jcmVhc2UgY29tcGFyZWQgd2l0aCBwYXN0IHllYXJzLgpSaXNrIGFuYWx5c2lzIGluZGljYXRlcyB0aGF0IGNvbnN1bXB0aW9uIG9mIGZhcm1lZCBBdGxhbnRpYyBzYWxtb24gbWF5IHBvc2UgaGVhbHRoIHJpc2tzIHRoYXQgZGV0cmFjdCBmcm9tIHRoZSBiZW5lZmljaWFsIGVmZmVjdHMgb2YgZmlzaCBjb25zdW1wdGlvbi4KV2l0aCBteSB0cnVzdHkgY2FtZXJhKHMpIEkgaGF2ZSB2aXNpdGVkIHRocmVlIGNvbnRpbmVudHMgYW5kIG51bWVyb3VzIGNvdW50cmllcyBpbmNsdWRpbmcgd29ya2luZyBhdCBmb3VyIE9seW1waWNzLi4gCkRlYXIgdW5jbGUgb2YgRGF2aWQsIENyYWlnLCBNeW5kaWUsIFNhcmFoLCBFbWlseSwgSmFjb2IgYW5kIEVyaW4uIEJvYiBsb3ZlZCBzcGVuZGluZyB0aW1lIHdpdGggYm90aCBoaXMgZmlzaGluZyBhbmQgcG9rZXIgYnVkZGllcyBhbmQgaGFkIGEgcGFzc2lvbiBmb3IgZ29sZi4gSGUgbG92ZWQgdGhlIG91dGRvb3JzIGJvdGggYXQgaG9tZSBhbmQgYXQgdGhlIGNvdHRhZ2UuIApOb3csIEkgd2VsbCBhd2FyZSB0aGF0IGdpcmxzIG1vdmUgYXJvdW5kIGZyb20gdGltZSB0byB0aW1lLCBhbmQgdGhhdCBzb21lIHdvcmsgaW4gbW9yZSB0aGFuIG9uZSBwbGFjZS4gUGVyaGFwcyB0aGV5IG93biB0aGVpciBvd24gcGhvdG8gcG9ydGZvbGlvcyBhbmQgYWxsb3cgdGhlIG1hc3NhZ2Ugc2hvcHMgdG8gdXNlIHRoZSBwaWNzIHRoYXQgdGhleSBwcm92aWRlLiAKV2hlbiB5b3UgZ2V0IHplcm8gcG9saXRpY2FsIGNhcGl0YWwgZnJvbSBpdC4gWW91IGdldCB6ZXJvIHJldHVybiBmcm9tIHRoZSBvdGhlciBwYXJ0eSBhbmQgYWxsIHlvdSBkbyBpcyBpbmNyZWFzZSByZXB1YmxpY2FuIHBvd2VyIHdoZW4gdGhleSBhcmUgYSBtaW5vcml0eS4uIApUaGUgNCBQb2ludCBpcyBhICJsaXZlZCBleHBlcmllbmNlIiB0aGF0IGlzIHRhbnRhbW91bnQgdG8gZmVlbGluZyBsaWtlIGEgbGl2aW5nIHNwZWVkIGJhZyB0aGF0IGJveGVycyB0cmFpbiBvbiBbaW5zZXJ0IHRoZSBzb3VuZCBvZiBsZWF0aGVyIGdsb3ZlcyBoaXR0aW5nIGEgbGVhdGhlciBiYWcgb24gYSBwaXZvdCBpbiByYXBpZCBzdWNjZXNzaW9uIGR1aGR1aGR1aCBkdWhkdWhkdWggZXRjLl0gYW5kIHRoZSBzZW5zZSBvZiBsaWZlIHNoYXR0ZXJpbmcgb24gdXMgbGlrZSBhIGtub2Nrb3V0IHB1bmNoIGZyb20gZ29kIHRvIGEgd2Vha2VuZWQgamF3LiAKTXkgdW5pdmVyc2l0eSBoYXMgYSB2ZXJ5IGdvb2QgdW5pb24gZm9yIG5vbiB0ZW51cmUgdHJhY2sgZmFjdWx0eSBhbmQgZ3JhZCBzdHVkZW50cywgYW5kIEkgZGlkbiByZWFsaXplIHVudGlsIHJlY2VudGx5IGhvdyBsdWNreSBJIGFtIHRvIGF0dGVuZCBhIHBsYWNlIHRoYXQgaXMgdW5pb25pemVkLi4gClRoZXkgYXJlbiB0ZWNobmljaWFuIHR5cGVzIGVpdGhlci4gSSB3YXMgYW4gZW50cnkgbGV2ZWwgU29mdHdhcmUgRW5naW5lZXIgYWNjb3JkaW5nIHRvIG15IGxhYm9yIGNvZGUgYnV0IHN0YXJ0ZWQgYXQgMTQgaHIuIApUaGV5IHN1Y2ggY3VudHMgdGhhdCB0aGUgQXVzdHJhbGlhbiBnb3Zlcm5tZW50IGFkdmljZSBmb3IgZGVhbGluZyB3aXRoIHRoZW0gaXMgdG8gc3VnZ2VzdCB5b3UgdGFrZSBhIGRpZmZlcmVudCByb3V0ZSBuZXh0IHRpbWUgKGJpdGNoKS4gCkRvZXMgdGhpcyBhY3R1YWxseSBoYXBwZW4/IElmIGkgbGV2ZWxsaW5nIEkgdXN1YWxseSBqdXN0IGhhdmUgcGFya3MgYW5kIHJlYyBvciBzb21lIG90aGVyIHNob3cgb24gYSBzZWNvbmQgc2NyZWVuIGFuZCBqdXN0IGJsaW5kbHkgZHBzIG15IHdheSB0aHJvdWdoLCByYXJlbHkgd2lsbCBzZWUgYW55b25lIHNheSBhbnl0aGluZyB0byBlYWNoIG90aGVyIGV4Y2VwdCBmb3IgYXQgdGhlIGVuZCwgb3IgZ2V0dGluZyBtYWQgYXQgcGVvcGxlIGZvciB3aXBpbmcgdG8gdGhhdCBGRUVMIFRIRSBFQVJUSCBCRU5FQVRIIFlPVSBjYXRhIGR1bmdlb24gYm9zcy4gSSBhZ3JlZSB3aXRoIHlvdSBnZW5lcmFsbHksIGJ1dCBsZXZlbGxpbmcgaW4gZHVuZ2VvbnMgaXMgaGFyZGx5IGEgc29jaWFsIG9jY2FzaW9uLiAKSG93IGNvdWxkIEkgaGF2ZSBtaXNjYWxjdWxhdGVkIHRoaXMgYmFkbHk/IFdoYXQgZGlkIEkgZG8gd3Jvbmc/LiAKSSdtIHN3ZWF0aW5nLiBOb3cgdGhlcmUncyBhIGZsdXNoIGRyYXcgYW5kIGEgc3RyYWlnaHQgZHJhdyBvbiB0aGUgdGFibGUuIEphbWVzIHRoaW5rcyBmb3IgYSBzZWNvbmQgYW5kIHNheXMgdGhlIGZhdGVmdWwgd29yZHM6ICJBbGwgaW4uIiBCdXQgbm8sIGhlIGNhbid0ICAgaXQncyBpbXBvc3NpYmxlLCB0aGVyZSdzIG5vIHdheSBoZSAgIGRhbW4gaXQsIHRoaXMgaXMgZ2FtYmxpbmcsIG5vdCB0cmFkaW5nIG11dHVhbCBmdW5kcyEgTXkgY2hpcHMgZ28gZmx5aW5nLCBhbmQgdGhlIHRocmVlIG9mIHVzIGJpdGUgb3VyIG5haWxzIGFzIEV2YW4gcGVlbHMgb2ZmIHRoZSBsYXN0IGNhcmQuClJlY2VudGx5IHRoZXkgc2hvd2VkIGEgbWFnaWNpYW4gd2hvc2UgYWN0IHdhcyB0byBndWVzcyAicmFuZG9tIiBudW1iZXJzIGdpdmVuIGJ5IGF1ZGllbmNlIG1lbWJlcnMgd2hvIHdlcmUgInJhbmRvbWx5IiBjaG9zZW4gYnkgdGhlIHNob3cgaG9zdHMgKFNoaW4gRG9uZ3l1cCwgRmF0IGxhZHksIGV0YykuIApXaGlsZSBpdCBtYXkgZmVlbCBvdmVyd2hlbG1pbmcgdG8gdGhpbmsgYWJvdXQgaG93IHlvdSBtaWdodCBnbyBhYm91dCByZXdpbGRpbmcgdGhlIHdvcmxkLCByZXdpbGRpbmcgdGhlIGxhbmQgd2hlcmUgeW91IGxpdmUgICB5b3VyIHRvd24sIHlvdXIgbmVpZ2hib3Job29kLCBtYXliZSBldmVuIGp1c3QgeW91ciBvd24geWFyZCAgIGlzbid0IHNvIGRhdW50aW5nLiBDb25zaWRlciBzdGFydGluZyBzbWFsbDogUmVmb3Jlc3QgeW91ciB5YXJkIHdpdGggbG9jYWwsIG5hdGl2ZSB0cmVlcyBhbmQgdmVnZXRhdGlvbi4gSnVzdCBwbGFudCB0cmVlcyBhbmQgb3RoZXIgZ3JlZW5lcnkgdGhhdCB3b3VsZCBuYXR1cmFsbHkgZ3JvdyB3aGVyZSB5b3UgbGl2ZS4gCjUuIEQgbm9tcywgbW90cywgdGl0cmVzLCBwaHJhc2VzLCBsb2dvcywgZGVzc2lucywgZ3JhcGhpcXVlcywgaWMgZXQgbWFycXVlcyBkZSBjb21tZXJjZSBhZmZpY2ggc3VyIGxlIFNpdGUgd2ViIHBldXZlbnQgY29uc3RpdHVlciBkZXMgbWFycXVlcyBkZSBjb21tZXJjZSBkZSBMYSBQcmVzc2Ugb3UgZGUgdGllcnMuIEF1Y3VuIGNvbnRlbnUgZGFucyBsZSBTaXRlIHdlYiBvdSBkYW5zIGxlcyBGb25jdGlvbm5hbGl0IG5lIHNhdXJhaXQgaW50ZXJwciBkZSBtYW5pIHZvdXMgY29uYyB1bmUgbGljZW5jZSBvdSB1biBkcm9pdCBkIGRlIHF1ZWxxdWUgbG9nbywgZGVzc2luIG91IG1hcnF1ZSBkZSBjb21tZXJjZSBkZSBMYSBQcmVzc2Ugb3UgZCB0aWVycy4uIApMYSBtYXRpbmUgZnV0IHRyYW5xdWlsbGUsICBib2lyZSBkdSB0aCBldCBjb3V0ZXIgbGUgQ0QgZGUgRGVwYXJkaWV1IGNoYW50YW50IEJhcmJhcmEsIGNhZGVhdSBmb3J0IGJpZW4gY2libCBkZSBNb25zaWV1ci4KQ2FwdGFpbiBKaW0gd2FzIHRoZSBtb3N0IGZyZXF1ZW50IGd1ZXN0IG9mIHRoZSBsaXR0bGUgaG91c2UsIGFuZCBub25lIHdhcyBtb3JlIHdlbGNvbWUuIEV2ZXJ5IGRheSBBbm5lIGxvdmVkIHRoZSBzaW1wbGUgc291bGVkLCB0cnVlIGhlYXJ0ZWQgb2xkIHNhaWxvciBtb3JlIGFuZCBtb3JlLiAKVGhlIFVTQSBoYXMgYSBoYXJkIHJpZ2h0IG1haW5zdHJlYW0gR09QIGFuZCB3aGlsZSBpdCBtaWdodCBub3QgYmUgZnVsbCBvbiBmYXNjaXN0LCBpdCBjcmVlcHMgY2xvc2VyIGV2ZXJ5IGVsZWN0aW9uLiBUaGUgbGVmdCBpbiB0aGUgVVMgbW9yZSBjbG9zZWx5IHJlc2VtYmxlcyBjZW50ZXIgcmlnaHQgcG9saXRpY3MgaW4gRXVyb3BlIGJhc2VkIG9uIGxhYm9yIHJpZ2h0cywgd2VsZmFyZSwgaGVhbHRoY2FyZSwgZW52aXJvbm1lbnQuIEp1c3QgbG9vayBhdCBob3cgbHVrZSB3YXJtIHRoZXkgYXJlIHRvIE1lZGljYXJlIGZvciBhbGwgb3IgZnJlZSBjb2xsZWdlIG9yIGFueSBvdGhlciBwcm9ncmFtIGFscmVhZHkgaW4gZXhpc3RlbmNlIGluIG1hbnkgY291bnRyaWVzLiBXZSBoYXZlIG9uZSBvciB0d28gY2VudGVyIGxlZnQgb3IgbWF5YmUgbGVmdCB3aXRoIGRlbW9jcmF0aWMgc29jaWFsaXN0cyBidXQgZXZlbiB0aGV5IGFyZW50IGFueXdoZXJlIG5lYXIgaGFyZCBsZWZ0IEV1cm9wZWFuIHBvbGl0aWNpYW5zIHBhcnRpZXMuCkkgZmluZCBvdXQgdGhhdCBteSBncmFuZG1vdGhlciBvbiBzb2NpYWwgc2VjdXJpdHkgbWFrZXMgbW9yZSBtb25leSB0aGFuIEkgZG8uIEkgd2FzIHRvbGQgdG8gdGFrZSBhIGxvYW4gb3V0IGFuZCBmaWdodCB0aGlzIGJ1dCBJIGp1c3QgZG9uJ3Qga25vdyB3aGF0IG15IG9kZHMgYXJlIG9mIGV2ZW4gY29taW5nIG91dCBvbiB0b3AuIApTbyB0aGFuayB5b3UhIDIgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnby4gCkhhdmluZyBmdW4sIGFuZCB3ZSB3YW50IHlvdSB0bywgdG9vLiAKU3llZCBpcyBzZXJ2aW5nIGEgbGlmZSBzZW50ZW5jZSBhZnRlciBoZSB3YXMgY29udmljdGVkIGluIDIwMDAgb2Ygc3RyYW5nbGluZyAxNyB5ZWFyIG9sZCBIYWUgTWluIExlZSBhbmQgYnVyeWluZyBoZXIgYm9keSBpbiBhIEJhbHRpbW9yZSBwYXJrLiBNb3JlIHRoYW4gYSBkZWNhZGUgbGF0ZXIsIHRoZSBwb3B1bGFyICJTZXJpYWwiIHBvZGNhc3QgYnJvdWdodCBTeWVkJ3MgbG9uZyBydW5uaW5nIGNhc2UgdG8gbWlsbGlvbnMgb2YgbGlzdGVuZXJzIHdpdGggaXRzIGRlYnV0IDIwMTQgc2Vhc29uLiAKSSBuZXZlciBmYWlsZWQgYXQgc2Nob29sIGJlZm9yZS4gClRoaXMgZ3V5IGlzIHBhcnQgb2YgYSBncm91cCB3aG8gc2hvd3MgdXAgZXZlcnkgeWVhciBhbmQgY2FtcHMgbmV4dCB0byB0aGUgb2ZmIHJhbXAuIApUaGlzIHdhcyB0aGUgcGVyZmVjdCBhZHZpY2UgZm9yIG15IHNpdHVhdGlvbi4gSSBiZWVuIHNvIGRlcHJlc3NlZCBsYXRlbHksIGl0IGhhZCBiZWVuIG1vbnRocyBzaW5jZSBpIHdvcmtlZCBvdXQuIApXaGVuIGl0IGlzIHRpbWUgdG8gcmVmaW5pc2ggeW91ciBob21lIHBva2VyIHRhYmxlLCBjb25zaWRlciBzb21lIG9mIHRoZSB1cGdyYWRlZCBjaG9pY2VzIGluIHBva2VyIGZlbHRzLCByYXRoZXIgdGhhbiBDb21tb24gR3JlZW4gUG9rZXIgRmVsdC4gCigzKSBTdXJlLCBidXQgdGhpcyBpcyBhIHR3byB3YXkgc3RyZWV0LiBQZW9wbGUgd2FudCBtb2QgcGFydGljaXBhdGlvbiB3aXRoIGhlbHBmdWwgcmVwbGllcyBhbmQgeWV0IHdoZW4gd2UgZG8gdGhhdCwgd2UgZ2V0IHNoaXQgb24gYW55d2F5cy4gV291bGQgeW91IGZlZWwgbW90aXZhdGVkIHRvIHBvc3QgaGVyZSBnaXZlbiB0aGF0IHRyZWF0bWVudD8KQW5kIHRoaXMgaXMgd2hhdCB0aGUgYm9vayBpcyBhYm91dCBtb3JlIHRoYW4gYW55dGhpbmcgZWxzZTogYSBncm91cCBvZiBmcmllbmRzIHdobyBmaW5kIGVhY2ggb3RoZXIgYW5kIGJlY29tZSBmYW1pbHkgd2hlbiB0aGVpciBvd24gZmFtaWxpZXMgYXJlIHVuc3VwcG9ydGl2ZSB0byB2YXJpb3VzIGRlZ3JlZXMuIFRoaXMgY29tbXVuaXR5IGlzIGEgaHVnZSBwYXJ0IG9mIHRoZSByZWFzb24gV2VuZHkgdGhpbmtzIHRoaW5ncyBoYXZlIGdvdHRlbiBiZXR0ZXIgZm9yIHRyYW5zIHBlb3BsZSwgYW5kIGl0IHdoeSBzaGUgaXMgYXQgZmlyc3Qgc3VycHJpc2VkLCB0aGVuIGFuZ3J5LCB0aGF0IGhlciBmcmllbmQgd291bGQga2lsbCBoZXJzZWxmIHRoZXkgaGFkIHN1cHBvcnQgdGhhdCBkaWRuIGV4aXN0IHdoZW4gc2hlIGZpcnN0IHRyYW5zaXRpb25lZC4gU2hlIHNwZWFrcyBzZXZlcmFsIHRpbWVzIHdpdGggQW5uYSwgYSBmcmllbmQgd2hvIGtuZXcgaGVyIE9wYSBzZWNyZXQuIApCZWNhdXNlIGl0IGRpZG4ndCB3b3JrIHRoZSBmaXJzdCB0aW1lIGFuZCBhIGJyaWNrIHJpdmVyIGRpZG4ndCBpbXByb3ZlIHlvdXIgYWJpbGl0eSB0byBibHVmZi4gSWYgeW91IGJsdWZmZWQgYW5kIGhlIGNhbGxlZCBpdCBvbmNlIGFuZCB0aGUgdGV4dHVyZSBvZiB0aGUgYm9hcmQgZGlkbid0IGNoYW5nZSwgd2h5IHdvdWxkIGhlIGZvbGQgdG8gYSByZXBlYXQgb2YgdGhlIHNhbWUgYmx1ZmY/CkhvdyB0byBzdG9wIGZlZWxpbmcgYmFkIGZyb20gd2lubmluZyBpbiBwb2tlcgpUaGVyZSBpcyBubyBsZXZlbCBvZiBub24gbW9uZXRhcnkgc3VwcG9ydCB0aGF0IGlzIG5vdCBoZWxwZnVsIGZvciBhIHNpbmdsZSBwYXJlbnQuIAoiV2Ugd2FudGVkIHRvIGhhdmUgYSBncmVhdCBGQVEgc2VjdGlvbiBiZWNhdXNlIG9mdGVuIHRoZSBwbGF5ZXIgaGFzcXVlc3Rpb25zIHRvIHdoaWNoIGhlIG9yIHNoZSBjYW4gbm90IGZpbmQgYW55IGFuc3dlcnMuIEJ5IHBsYWNpbmcgdGhlRkFRIGluIGEgc3RhbmQgYWxvbmUgYXJlYSB3aGljaCBpcyBlYXN5IHRvIG5hdmlnYXRlIHRoZSBwbGF5ZXIgd2lsbCBmaW5kb3V0IGV2ZXJ5dGhpbmcgdGhleSBhcmUgbG9va2luZyBmb3IuIgpBIEJldHJheWFsIG9mIFBlbmd1aW5zOiBFbmRhbmdlcmVkIGZvciBhIFJlYXNvbiwgTW9ucm9lcywgNXBtLiBGb2lsLCBBcm1zIEhvZzogQ29tZWR5IERvZXNuIFBheSwgS2luZ3MgSGVhZCAoUnVieSBSb29tICksIDZwbS4gClNtaXRoIGFuZCBBbmRlcnNvbiBjb21lIGZyb20gdHdvIHZlcnkgZGlmZmVyZW50IGJhY2tncm91bmRzLiBTbWl0aCBncmV3IHVwIGluIHNvdXRoZXJuIENhbGlmb3JuaWEsIHRyYWluaW5nIG1haW5seSBpbiBCcmF6aWxpYW4gaml1aml0c3UuIApXaGlsZSBpdCB0cnVlIHRoYXQgRGFuaWVsIE5lZ3JlYW51IHdhcyBwcm9iYWJseSBib3JuIHRvIHBsYXkgcG9rZXIsIGl0IHNvbWV3aGF0IHVubGlrZWx5IHRoYXQgaGUgd2FzIGZsZWVjaW5nIHJvdW5kZXJzIG91dCBvZiB0aGVpciBiYW5rcm9sbHMgd2hpbGUgYXR0ZW5kaW5nIG51cnNlcnkgc2Nob29sLiBUaGUgZmFjdCBvZiB0aGUgbWF0dGVyIGlzOyBwZXJmZWN0aW5nIHlvdXIgcG9rZXIgc2tpbGxzIGlzIGEgcHJvY2VzcyB0aGF0IHJlcXVpcmVzIGJvdGggdGltZSBhbmQgZGVkaWNhdGlvbi4KSGUgc3VwcG9zZWRseSBhdWdtZW50ZWQgaGlzIHR1aXRpb24gdmlhIHNhdnZ5IHBva2VyIHBsYXlpbmcuIFdoYXRldmVyIHRoZSB0cnV0aCBvZiBzdWNoIEtsdWdlIHRvbGQgdGFsZXMsIGhlIHdvdWxkIHJlcGF5IENvbHVtYmlhIHdoaWNoIG5vdyBjYWxscyBoaW0gYSAiSG9yYXRpbyBBbGdlciBmb3IgdGhlIFR3ZW50aWV0aCBDZW50dXJ5IiBtYW55IHRpbWVzIG92ZXIgYnkgcGxlZGdpbmcgJDQwMCBtaWxsaW9uIGZvciBzY2hvbGFyc2hpcHMgdG8gYmUgcGFpZCBwb3N0aHVtb3VzbHkuLiAKVGhlIHJpZGUgdXN1YWxseSBiZWdpbnMgd2l0aCB0aGUgdHJhaW4gZ29pbmcgdXAgYSBsb25nIGNoYWluIGxpZnQsIGdyYWR1YWxseSBoaWdoZXIgYW5kIGhpZ2hlciwgdGhlbiB3aGVuIGl0IGdldHMgdG8gdGhlIHRvcCwgdGhlcmUgaXMgbm8gcGxhY2UgdG8gZ28sIGJ1dCBkb3duLiAKT24gdGhlIFp5bnEgdGhlcmUgYXJlIGFsc28gc29tZSBhZGRyZXNzIHNwYWNlIGdvdGNoYXMuIApBbGlhYSBUcHJhIEhhbGsgRWl0aW1pIE1lcmtlemknbmRlIHNhaG5lbGVuZW4gb3l1bmEgdGl5YXRyb3NldmVybGVyIHlvdW4gaWxnaSBnc3RlcmRpLiBBbGlhYSBCZWxlZGl5ZXNpIFNhbmF0ZXZpIChBU0VWKSBTYW5hdCBZbmV0bWVuaSBEZW1ldCBTYWthJ25uIGhlbSB5YXpkIGhlbSBkZSB5bmV0dGlpIG95dW5kYSBBTEJFVCBrYWRuIG95dW5jdWxhciBzYWhuZSBhbGQuIApJIGJlbGlldmUgaW4gY29uc3RhbnQgZWR1Y2F0aW9uIGJlY2F1c2UgcHJvZHVjdHMsIHN0eWxlcywgYW5kIHBlb3BsZSBjaGFuZ2UgYW5kIHdpdGggb3V0IGVkdWNhdGlvbiB5b3UgY2FuIGJlIGxlZnQgYmVoaW5kLiAKWW91IGNvdWxkIHBsYXkgcG9rZXIgb25saW5lIGF0IHNjaG9vbCBpZiB5b3VyIHNjaG9vbCBpcyBub3QgYmxvY2tpbmcgd2Vic2l0ZXMgdGhhdCBhcmUgZmxhZ2dlZCB1bmRlciB0YWcgIkdhbWJsaW5nIiBvciBzaW1pbGFyLiBNb3N0IHNjaG9vbHMgYXJlIGJsb2NraW5nIHRoZXNlIHdlYnNpdGVzIGFsb25nIHdpdGggc29jaWFsIG5ldHdvcmtzIGxpa2UgRmFjZWJvb2suIEluZm9ybWF0aW9uIG9uIGhvdyB0byB1c2UgYSBwcm94eSBjYW4gYmUgZm91bmQgb24gdGhlIHJlbGF0ZWQgbGlua3Mgb2YgdGhpcyBxdWVzdGlvbi4gCkhlIGxhdGVyIGJlY2FtZSBjaGFpcm1hbiBvZiBISiBIZWlueiwgc3VjY2VlZGluZyBISiBIZWlueiBJSS4gTydSZWlsbHkgbWFkZSBoaXMgaW50ZXJuYXRpb25hbCBydWdieSBkZWJ1dCBhZ2VkIDE4IGFnYWluc3QgRnJhbmNlLiBIaXMgdHJ5IHNjb3JpbmcgcmVjb3JkIHNldCBkdXJpbmcgdGhlIDE5NTUgYW5kIDE5NTkgTGlvbnMgdG91cnMgaGFzIG5vdCBiZWVuIGVxdWFsbGVkLi4gCkF0IGhlciAyIHllYXIgYXBwb2ludG1lbnQgd2UgYXNrZWQgaGVyIHBlZCBpZiB0aGVyZSB3YXMgc29tZXRoaW5nIG1lZGljYWwgdGhhdCBjb3VsZCBiZSBjYXVzaW5nIHRoZSBpc3N1ZS4gClRvIHBsYXkgb25saW5lIHBva2VyIDcgQ2FyZCBTdHVkIEhpIExvIHlvdSBoYXZlIHRvIGJlIHRlY2huaWNhbGx5IGdvb2QgYXQgcG9rZXIgYW5kIG51bWJlcnMuIApTdGFydCB5b3VyIGRheSBhcyBhIHByb2R1Y2VyLiBXcml0ZSBhIGJsb2cgcG9zdCwga25vY2sgb3V0IGFuIGl0ZW0gb24geW91ciB0b2RvIGxpc3QsIHNlbmQgZW1haWxzIHRvIHBlb3BsZSB5b3UgYmVlbiBtZWFuaW5nIHRvIGdldCBpbiBjb250YWN0IHdpdGgsIGV0Yy4gCkV2ZW4gd2UncmUgbm90IGJ1eWluZyBpdCBhbnltb3JlLiAKUHJlc2lkZW50IE9iYW1hIGhhcyBoYWQgaGlzIGNvbWV1cHBhbmNlIGluIHRoZSBtaWR0ZXJtIGNvbmdyZXNzaW9uYWwgZWxlY3Rpb25zLiBIZSBsb29rcyBjaGFzdGVuZWQgYW5kIGEgYml0IGJlYXRlbi4gVGhlIEFtZXJpY2FuIGVsZWN0b3JhdGUgaGFkIGEgY2hvaWNlIGFuZCBpdCBoYXMgZXhlcmNpc2VkIGl0LiBCdXQgd2hhdCBpZiB0aGVyZSB3YXMgc3VjaCBhIG1vbWVudCBpbiBQYWtpc3Rhbj8gV2hhdCBjaG9pY2Ugd291bGQgd2UgaGF2ZT8gV2hhdCB3b3VsZCBiZSB0aGUgYWx0ZXJuYXRpdmVzIG9uIG9mZmVyPyBOb25lLCBiZWNhdXNlIHRoZXJlIHdvdWxkIGJlIG5vbmUgdG8gYmVnaW4gd2l0aC4gSnVzdCBtb3JlIG9mIHRoZSBzYW1lLCB0aGUgcGFzdCByZWN5Y2xlZCB0byByZXByZXNlbnQgdGhlIGZ1dHVyZS4gVGhpcyBpcyBhIGdyZWF0ZXIgY3Jpc2lzIHRoYW4gYW55dGhpbmcgb24gdGhlIGVjb25vbWljIGhvcml6b24uCldlIHdlcmUgdmljdGltcywgYW5kIG5vdyB3ZSBhcmUgc3Vydml2b3JzISBJdCBkb2VzIGdldCBiZXR0ZXIuIApJbiB0aGlzIHRoZXNpcywgd2UgYWltZWQgdG8gZWx1Y2lkYXRlIHRoZSBpbXBhY3Qgb2YgZW5oYW5jaW5nIHRoZSB0cmFuc3BvcnQgb2Ygb3JhbGx5IGFkbWluaXN0ZXJlZCBjYW5uYWJpbm9pZHMgdG8gdGhlIGludGVzdGluYWwgbHltcGhhdGljIHN5c3RlbSwgdGhlIG1ham9yIGhvc3Qgb2YgaW1tdW5lIGNlbGxzLCBvbiB0aGUgaW1tdW5vbW9kdWxhdG9yeSBlZmZlY3RzIG9mIGNhbm5hYmlub2lkcy5PcmFsIGFkbWluaXN0cmF0aW9uIG9mIGxpcG9waGlsaWMgY2FubmFiaW5vaWRzIHdpdGggbG9uZyBjaGFpbiB0cmlnbHljZXJpZGVzIChMQ1QpIHdhcyBpbnZlc3RpZ2F0ZWQgYXMgYSBzaW1wbGUgYXBwcm9hY2ggdG8gZW5oYW5jZSB0aGUgaW50ZXN0aW5hbCBseW1waGF0aWMgdHJhbnNwb3J0LiBUaGUgZWZmZWN0IG9mIExDVCBvbiB0aGUgaW50cmFsdW1pbmFsIHByb2Nlc3Npbmcgb2Ygb3JhbGx5IGFkbWluaXN0ZXJlZCBjYW5uYWJpbm9pZHMgd2FzIGFzc2Vzc2VkIGJ5IG1lYW5zIG9mIGluIHZpdHJvIGxpcG9seXNpcyBtb2RlbC4gClRoaXMgaXMgdGhlIGhpZ2hsaWdodHMgYW5kIG1hbnkgcGVvcGxlIHJlYWxseSBsb3ZlZCBhbmQgZW5qb3llZCB3aXRoLiAKSXQgbm90IHRoYXQgSSB1bmF3YXJlIG9mIEFmZ2hhbmkgcGF0cmlhcmNoeS4gCkFMU086VGhlIFNjb29wIFRlYW0gICBQTSdzIFBvc3QgQ2FiIDQvMy8xOTogVGlja2V0IFNjYWxwZXJzIGFuZCBKaWhhZGlzUk5aICAgQ2FsbCBmb3IgTlogdG8gdGFrZSAnS2l3aSBqaWhhZGknIE1hcmsgVGF5bG9yIGxpa2VseUF1Y2tsYW5kIE1heW9yYWx0eTogJ1JlYWwgUmFjZScgQXMgR29mZiBDb25maXJtcyBDYW5kaWRhY3lBZnRlciBzdGF5aW5nIGNveSBmb3Igd2Vla3MsIHRoZSBjdXJyZW50IG1heW9yIFBoaWwgR29mZiBoYXMgZmluYWxseSBtYWRlIGl0IG9mZmljaWFsICAgaGUgd2lsbCBydW4gYWdhaW4uIApJdCBpcyBhIGNvbWJpbmF0aW9uIG9mIGNhcmRzIGRlYWx0IGZhY2UgZG93biwgdXN1YWxseSB0aGUgZmlyc3QgMiBjYWxsZWQgaG9sZSBjYXJkcyBhbmQgdGhlIHJlc3QgZGVhbHQgZmFjZSB1cCB3aXRoIHRoZSBwb3NzaWJsZSBleGNlcHRpb24gYmVpbmcgdGhlIGxhc3QgY2FyZCBkZWFsdCBmYWNlIGRvd24uIApCdXQgdGhleSBhcmVuIHdvcnRoIGFueSBzdHJlc3Mgb3Igc3RyaWZlLi4gCk15IHNlcnZpY2VzIGluY2x1ZGUgVGhvcm91Z2ggU3BvcnRzLCBUaGVyYXBldXRpYywgTG93IGJhY2ssIExlZ3MsIEdsdXRlcywgZmVldCwgU3dlZGlzaCBhbmQgU2Vuc3VhbCBzdHlsZSBNYXNzYWdlcyBwbHVzIHJlbGF4aW5nLCBnZW50bGUgb2lsIHJ1YnMgZm9yIG1lbiBhbmQgd29tZW4gYXMgd2VsbC4gU2V4eSBDRCBzZXNzaW9ucyBhdCA4MCBmbGF0IHJhdGUgZG9uYXRpb24gSSBnbyBieS4gIiIgLgpWYW4gRXBwcyB3YXMgYSBtZW1iZXIgb2YgdGhlIE9ub25kYWdhIENvdW50eSBCYXIgQXNzb2NpYXRpb24sIHRoZSBOZXcgWW9yayBTdGF0ZSBCYXIgQXNzb2NpYXRpb24sIGFuZCB0aGUgQW1lcmljYW4gQmFyIEFzc29jaWF0aW9uLiBIZSBzZXJ2ZWQgYXMgYSB2b2x1bnRlZXIgZXhlY3V0aXZlIGZvciBVbml0ZWQgV2F5IGFuZCB3YXMgYSBtZW1iZXIgb2YgdGhlIGJvYXJkIG9mIGRpcmVjdG9ycyBvZiB0aGUgSGlzY29jayBMZWdhbCBBaWQgU29jaWV0eS4gQWZ0ZXIgbmVhcmx5IHRoaXJ0eSB5ZWFycyBvZiByZXNpZGVuY2UgaW4gdGhlIEZheWV0dGV2aWxsZSBNYW5saXVzIGFyZWEsIE1yLiAKSSB3b3VsZCBsaXRlcmFsbHkganVzdCBjYWxsIGhpbSBvdXQgYW5kIHNheSAiSGV5IHNvIHRoaXMgbGFzdCB3ZWVrZW5kIEkgc3VzcGVjdCB5b3Ugd2VyZSBjaGVhdGluZywgYSBzZXQgb3ZlciBzZXQgb3ZlciBzZXQgaXMgb24gdGhlIHNhbWUgbGV2ZWwgb2Ygb2RkcyBhcyBtZSBnZXR0aW5nIGEgYmxvd2pvYiBmcm9tIEthdGUgVXB0b24gYW5kIHRoZSBmYWN0IEkgc3RhcmVkIHlvdSBkb3duIGFzIEkgZm9sZGVkIG15IHNldCBhbmQgeW91IHNlZW1lZCBzdXJwcmlzZWQgZnVydGhlciBtYWtlcyBtZSB0aGluayB5b3Ugc2V0IGl0IHVwLiAKVGhpcyBjYXJkIHRyaWNrIGlzIGVhc3kgdG8gcGVyZnJvbS4gCkJ1dCBoZSB3b3VsZCBvZiBoYWQgdG8gZ2V0IHRoZSBkYXVnaHRlcnMgZG5hLCBhbmQgdW5sZXNzIHRoZSBTSUwgdG9vayBoZXIsIHRoZXJlIGlzIG5vIHdheS4gQnV0IGl0J3MgYWxzbyBhIGxpdHRsZSBmaXNoeSB0aGF0IGhlIHN1cHBvc2VkbHkga25ldyBhYm91dCB0aGUgZGF1Z2h0ZXIgYnV0IG5ldmVyIHNhaWQgYW55dGhpbmcgdW50aWwgbm93LiAKQSBmb3JtZXIgbG9jYWwgbmV3cyByZXBvcnRlciBhbmQgbGF3eWVyLCBLZWxseSBlbGV2YXRlZCBoZXIgcHJvZmlsZSBkdXJpbmcgdGhlIDIwMTYgcHJlc2lkZW50aWFsIGVsZWN0aW9uIHdoZW4gc2hlIHNxdWFyZWQgb2ZmIGFnYWluc3QgRG9uYWxkIFRydW1wIGFuZCBoaXMgc3Vycm9nYXRlcywgc3VjaCBhcyBOZXd0IEdpbmdyaWNoLiBPbiBvY2Nhc2lvbiwgc2hlIG91dHBlcmZvcm1lZCBmZWxsb3cgZm9ybWVyIEZveCBOZXdzIGhvc3QgQmlsbCBPJ1JlaWxseSBpbiB0aGUgcmF0aW5ncywgYW5kIHNoZSBoYWQgYmVlbiBzZWVuIGFzIGtleSB0byBoZWxwaW5nIHRoZSBuZXR3b3JrIGF0dHJhY3QgeW91bmdlciB2aWV3ZXJzLi4gCk9ubHkgZm91ciBzdHVkaWVzIHdlcmUgZGVlbWVkIHRvIGJlIG9mIGFkZXF1YXRlIG1ldGhvZG9sb2dpY2FsIHJpZ291ci4gCkRpZ2l0YWwgYm9va2xldCAoUERGKS4gVGhlIEh5cGVyaW9uIEZyZW5jaCBTb25nIEVkaXRpb24gLiAKSW5kZXggZGVzIGFydGljbGVzIHByb3Bvc2FudCBkZXMgY29tcGwKTWFpcyBjZWxhIG5lIHN1ZmZpdCBwYXMgISBFc3QgY2UgbCd1cmdlbmNlIGRlIGNhZGVhdXggZGUgTm9sLCBsJ2VudmllIGRlIGwnb2ZmcmlyLCBxdWVscXVlcyBwZXJzb25uZXMgc29udCBkZW1hbmRldXNlcyBzYW5zIHRhcmRlciBldCBqJ2FpIGR1IG1hbCAgZGlyZSBub24sIGMnZXN0IHRvdWpvdXJzIHVuZSBvY2Nhc2lvbiBkZSByZW5jb250cmVzIHN5bXBhdGhpcXVlcy4gClRoZSBwcm9zcGVjdCBvZiBjYXJpbmcgZm9yIGEgeW91bmcgbGlmZSB3YXMgb3ZlcndoZWxtaW5nLCBtZW50YWxseSBhbmQgZW1vdGlvbmFsbHkuIFRoZSByZXNwb25zaWJpbGl0eSBvZiBwYXJlbnRob29kIGV4dGVuZHMgZmFyIGJleW9uZCBqdXN0IGZlZWRpbmcgYW5kIGNsb3RoaW5nIGEgdGlueSBiZWluZy4gQXMgYSBwYXJlbnQsIHlvdSBiZWNvbWUgYSBtb3JhbCBndWlkZSBmb3IgYSBmdXR1cmUgbWVtYmVyIG9mIHNvY2lldHksIHNldHRpbmcgZXhwZWN0YXRpb25zIGFuZCBzdGFuZGFyZHMgdG8gbGl2ZSBieS4gWW91ciBldmVyeSBhY3Rpb24gYW5kIGluYWN0aW9uIGluZmx1ZW5jZXMgdGhlIGNoaWxkJ3MgZnV0dXJlLCBjb250cmlidXRlcyB0byB0aGVpciBjaGFyYWN0ZXIgZGV2ZWxvcG1lbnQuIEl0IGRldGVybWluZXMgd2hhdCBraW5kIG9mIGxpZmUgdGhleSdyZSBnb2luZyBsaXZlLCB3aG8gdGhleSdyZSBnb2luZyB0byBsb3ZlLCB3aGF0IGtpbmQgb2YgY2FyZWVyIHRoZXknbGwgaGF2ZS4gSXQncyBhIGJpZyBjaG9pY2UuIFRoZSBkZWNpc2lvbiB0byBoYXZlIGNoaWxkcmVuIHNob3VsZCBuZXZlciBiZSBtYWRlIGxpZ2h0bHksIGFuZCBJIGhhZCBrbm93biBmb3IgbW9zdCBvZiBteSBhZHVsdGhvb2QgdGhhdCBJIG5ldmVyIHdhbnRlZCB0byB0YWtlIG9uIHRoZSB0YXNrLgoiSGUncyB3YWxraW5nIHRocm91Z2ggbGlrZSBoZSdzIGEgY2FyLCAiIFZhbiBTYW50IGNvbW1lbnRlZC4gCkFjdHVhbGx5LCBJIHdhbnQgdG8gdGFsayBhIGxpdHRsZSBhYm91dCB0aGF0LiBJdCdzIGJlZW4gdGhyZWUgeWVhcnMgc2luY2UgIkxvc3QgU291bHMuIiBTbyB0ZWxsIG1lIHdoYXQgaGFzIGJlZW4gZ29pbmcgb24gaW4gdGhhdCBwZXJpb2QuCjE0IHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ29Gb3JnaXZlbmVzcyBkb2VzbiBtZWFuIG5ldmVyIG1lbnRpb25pbmcgc29tZXRoaW5nIGFnYWluLiAKQXMgdGhpcyBhcnRpY2xlIHdpbGwgY29uY2VudHJhdGUgbWFpbmx5IG9uIHRoZSBsZWFybmluZyBhc3BlY3QsIEkgdGhpbmsgaXQgaXMgYWx3YXlzIGEgZ29vZCBwb2ludCB0byBzdGFydCB3aXRoIHRoZSB2YXJpb3VzIHR5cGVzIG9mIGdhbWVzIGFuZCB0aGVuIG1vdmluZyBmb3J3YXJkIG9uIHRvIHRpcHMgZm9yIHNwZWNpZmljIGdhbWVzLi4gCk15IG1vbSBoYXMgZmFpcmx5IHNldmVyZSBSTFMsIGFuZCB1bmZvcnR1bmF0ZWx5IEkgc2VlbSB0byBoYXZlIGluaGVyaXRlZCBpdCBmcm9tIGhlci4gCkhhdmluZyBoYWQgbmVpZ2hib3VycyBsaWtlIHRoaXMsIG15IGFkdmljZSBpcyB0byBsZXQgdGhlbSBmaWdodCBpdCBvdXQgYW1vbmcgdGhlbXNlbHZlcy4gSXQgc291bmRzIGxpa2UgdGhleSBhcmUgdmlvbGVudCBzbyBnZXR0aW5nIGludm9sdmVkIHdvdWxkIGxpa2VseSBqdXN0IGNhdXNlIHlvdSBtb3JlIGdyaWVmLiBZb3UgZG9uJ3Qgd2FudCB0byBwaXNzIHRoZW0gb2ZmIGFuZCBoYXZlIHRoZW0gc3RhcnQgdGFyZ2V0aW5nIHlvdSB3aXRoIGFidXNlLiBJJ20gc3VyZSBldmVudHVhbGx5IGl0IHdpbGwgZ2V0IHNvcnRlZCBlaXRoZXIgYnkgb25lIG11cmRlcmluZyB0aGUgb3RoZXIgb3IgZ2V0dGluZyBraWNrZWQgb3V0IGJ5IHRoZSByZWFsZXN0YXRlLiBJbiBteSBvcGluaW9uIHRoZSBvbmx5IHRpbWUgdG8gaW52b2x2ZSB0aGUgcG9saWNlIGlzIGlmIHRoZXJlIGFyZSB5b3VuZyBjaGlsZHJlbiBwcmVzZW50IGluIHRoZSBob3VzZWhvbGQgYW5kIG1heWJlIHRoZW4gdGhleSB3aWxsIGRvIHNvbWV0aGluZywgYnV0IGV2ZW4gc28sIHVubGlrZWx5LiBJIHdhcyBhIGtpZCB3aG8gaGFkIGEgc3RlcCBmYXRoZXIgdGhhdCBiZWF0IHRoZSBldmVyIGxvdmluZyBmdWNrIG91dCBvZiBteSBtb3RoZXIgb24gYSBkYWlseSBiYXNpcyBhbmQgdGhlIGNvcHMgd2VyZSBjYWxsZWQgYnkgbmVpZ2hib3Vycy4gWW91IGtub3cgd2hhdCBoYXBwZW5lZCB0aGVuPyBJdCBkaWQgYWJzb2x1dGVseSBub3RoaW5nIGFuZCBhY3R1YWxseSBtYWRlIHRoaW5ncyB3b3JzZSBiZWNhdXNlIGEgbGVjdHVyZSBmcm9tIHRoZSBjb3BzIG9ubHkgbWFkZSBteSBzdGVwIGZhdGhlciBiZWF0IGV2ZXJ5b25lIGhhcmRlci4gU28gdGhlIGtpbmRlc3QgdGhpbmcgeW91IGNhbiBkbyBpcyBpZ25vcmUgaXQgb3IgbW92ZS4KWW91IHByb3ZlZCB0aGUgcG9pbnQgaW4geW91ciBvd24gY29tbWVudC4gCiJXaGVuZXZlciBFbmdsYW5kIHBsYXkgQXVzdHJhbGlhIGl0J3MgYWx3YXlzIGNvbXBldGl0aXZlLCIgaGUgYWRkZWQuIApTaGUgZHJvdmUgbWUgdG8gbXkgYmVzdCBmcmllbmQgaG91c2UgYW5kIEkgd2FpdGVkIHRoZXJlIHVudGlsIGV2ZXJ5b25lIGdvdCBob21lIChJIG5ldmVyIGtuZXcgaGVyIHBhcmVudHMgd2VsbCwgd2Ugb25seSBodW5nIG91dCBhdCBzY2hvb2wsIGFuZCBhIGZldyB0aW1lcyBhdCBoZXIgaG91c2UpLCBJIGV4cGxhaW4gdGhlIHNpdHVhdGlvbiB0byBoZXIgcGFyZW50cywgYW5kIHNheSB0aGF0IEkgcGxhbiB0byBnbyB0byB3ZWxmYXJlIGhvdXNpbmcgYXNhcC4gCkJlc3QgbWFzc2FnZSB0aGVyYXB5IHNjaG9vbCBpbiBFZG1vbnRvbgpUaGlzIGRlcGVuZHMgb24gd2hhdCBnYW1lcyB5b3UgcHJlZmVyLiBJdCBzb3VuZHMgbGlrZSB5b3UgbGlrZSBzbWFsbCBidXkgaW4gc2luZ2xlIHRhYmxlIHRvdXJuYW1lbnRzLCBhbmQgeW91IHByZWZlciBhIHZlcnkgY29uc2VydmF0aXZlIHN0eWxlIG9mIHBsYXkuCk9mIGNvdXJzZSwgYWR2YW5jZWQgYW5kIHRyYWRpdGlvbmFsIHBsYXllcnMgY2FuIHBsYXkgd2l0aG91dCBpdC4gCkl0IGFsc28gaW1wb3J0YW50IHRvIG1lbnRpb24gdGhhdCB3aGlsZSBpdCBzcGVkIHVwIHRoZSBjbGVhcmFuY2Ugb2YgVEIgb24gc3B1dHVtIHNtZWFyLCBpdCBkaWRuIGFjdHVhbGx5IGluY3JlYXNlIHRoZSBudW1iZXIgb2YgcGVvcGxlIHdobyB3ZXJlIHNtZWFyIG5lZ2F0aXZlIGF0IDggd2Vla3MuClR3byBlYXJsaWVyIGhpc3RvcmllcyBvZiBPdGFnbyBVbml2ZXJzaXR5IGhhdmUgYmVlbiBwcm9kdWNlZCwgbWFya2luZyBpdHMgNTB0aGFuZCAxMDB0aGFubml2ZXJzYXJpZXMuIEJ1dCB0aGUgbnVtYmVyIG9mIHN0dWRlbnRzIGhhcyBxdWFkcnVwbGVkIHNpbmNlIHRoZSBjZW50ZW5hcnkgaGlzdG9yeSwgYW5kIHRoZSB1bml2ZXJzaXR5IGlzIG5vdyBhIGRpZmZlcmVudCBhbmQgbXVjaCBidXNpZXIgcGxhY2UuIEluIGl0cyBlYXJseSBkYXlzIHRoZSB1bml2ZXJzaXR5IHdhcyBhIG1hbGUgZG9taW5hdGVkIGluc3RpdHV0aW9uLCBidXQgc2luY2UgMTk4NiB0aGVyZSBoYXZlIGJlZW4gbW9yZSB3b21lbiBzdHVkZW50cyB0aGFuIG1lbiAoYW5kIGJ5IDIwMTYgdGhlcmUgd2VyZSBzZXZlcmFsIHRob3VzYW5kIG1vcmUpLiAKQ29tcGFyZWQgdG8gdGhlIHdyaXRpbmdzIG9mIEpvaG4gQWRhbXMsIHdobyB3YXMganVzdCBhcyBlZHVjYXRlZCBhcyBIYW1pbHRvbiwgYnV0IHdobyB3cm90ZSBpbiBzdWNoIGEgY2xlYXIgYW5kIHJlbGF0YWJsZSB3YXkgdGhhdCBhIGNoaWxkIGNvdWxkIHJlYWQgdGhlbSB0b2RheSBhbmQga25vdyBleGFjdGx5IHdoYXQgaGUgbWVhbnQsIHdoZXJlYXMgYW55dGhpbmcgd3JpdHRlbiBieSBIYW1pbHRvbiByZXF1aXJlcyBnb2luZyB0aHJvdWdoIGxpbmUgYnkgbGluZSB3aXRoIGZvb3Rub3RlcyBhbmQgYSB0ZWFjaGVyIGV4cGxhaW5pbmcgd2hhdCBldmVyeSB0d2lzdCBvZiBwaHJhc2UgbWVhbnQsIGxpa2Ugd2hlbiB5b3UgcmVhZCBTaGFrZXNwZWFyZSBpbiA5dGggZ3JhZGUuLiAKQnV0IGl0IGlzbiBpbXBvc3NpYmxlIGlmIHRoZSBhcmd1bWVudCBpcyAiZnVsbCB0aW1lIHdvcmtlcnMgbmVlZCBhIHBsYWNlIHRvIGxpdmUiLiBUaG9zZSBwZW9wbGUgYXJlIGZ1bGx5IGNhcGFibGUgb2YgbW92aW5nLiAKSSBsaWtlIHRoZSBwb3N0LiBEbyB5b3UgcmVhY2ggb3V0IHZlcmJhbGx5IHdpdGggYSBmcmllbmRseSBtYW5uZXI/IFNvbWV0aW1lcyBwZW9wbGUgYXJlIGFmcmFpZCB0byBldmVuIHBsYXkgTkwgYXQgJDEgJDIgb3IgJDEuIAo0KSwgRXJpayBTZWlkZWwgKEdQSSBOby4gCklmIG5vdCwgZ3JlYXQhIFRoZW4geW91IGp1c3QgZ290dGEgbWFuYWdlIGhvdXIgZXhwZWN0YXRpb25zIGFuZCBzdGF5IGNvb2wuIExvdHMgb2YgZHVkZXMgbWFrZSB0aGUgbWlzdGFrZSBvZiB0aGlua2luZyB0aGVpciBnb2FsIHRoYXQgZmlyc3QgbmlnaHQgaXMgc2V4LiAKIlRoZSByZSBsYXVuY2hlZCBGdWxsIFRpbHQgc2l0ZSB3aWxsIGJyaW5nIGJhY2sgdGhlIGlubm92YXRpdmUgZmVhdHVyZXMsIHRoZSBhdXRoZW50aWMgcG9rZXIgYW5kIHRoZSBjdXR0aW5nIGVkZ2Ugc29mdHdhcmUgdGhhdCBtYWRlIGl0IHNvIHBvcHVsYXIgd2l0aCBtaWxsaW9ucyBvZiBwbGF5ZXJzIHdvcmxkd2lkZS4iClRoZSBub25zZW5zZSBvZiB0aGlzIHdheSBvZiBkZXRlcm1pbmluZyB3aGF0IGlzIG5vcm1hbCBhbmQgaGVhbHRoeSBjYW1lIGJhY2sgdG8gbWUgeWVzdGVyZGF5IHdoZW4gSSByZWFkIHRoZSBzdW1tYXJ5IG9mIGEgcGFwZXIgd2hpY2ggYXNzZXNzZWQgJ25vcm1hbCcgVFNIIHZhbHVlcyBpbiBKYXBhbmVzZSBtZW4gYW5kIHdvbWVuIFsxXS4KUGxheWVycyB3aWxsIGZpcnN0IHJvbGwgdGhlIGRpY2UgdG8gZGV0ZXJtaW5lIHdobyB3aWxsIHJvbGwgZm9yIHRoYXQgcGFydGljdWxhciBnYW1lLCBhbmQgdGhlbiBhbGwgdGhlIHBhcnRpY2lwYW50cyB3aWxsIHBsYWNlIGJldHMgb24gd2hldGhlciBvciBub3QgdGhlIHBlcnNvbiByb2xsaW5nIHdpbGwgInBhc3MiIG9uIHRoZSBmaXJzdCByb2xsIChieSByb2xsaW5nIGEgNyBvciAxMSksIG9yICJjcmFwIG91dCIgKGJ5IHJvbGxpbmcgYSAyLCAzLCBvciBhIDEyKS5bMl0gSWYgb25lIG9mIHRob3NlIHZhbHVlcyBpcyByZWFjaGVkIG9uIHRoZSBmaXJzdCByb2xsLCB0aGUgZ2FtZSBpcyBvdmVyIGFuZCB0aGUgYmV0cyBhcmUgZGlzdHJpYnV0ZWQgYWNjb3JkaW5nbHkuClRoZSBjbHViIGJvYXN0cyB0aHJlZSBtZXRpY3Vsb3VzbHkgbWFpbnRhaW5lZCB0b3AgcXVhbGl0eSBncmVlbnMgYW5kIGlzIGhvbWUgdG8gcmVndWxhciBnYW1lcyBieSBtZW4ncyBhbmQgd29tZW4ncyBsYXduIGJvd2xzIGFzc29jaWF0aW9ucy4gClRoZXJlIGFsc28gcHJvb2YgdGhhdCBlY29ub21pYyBhbnhpZXR5IHByb2R1Y2VzIGFzc2hvbGVzIHRocm91Z2ggYSBjb21wZXRpdGl2ZSBkb2cgZWF0IGRvZywgSSBnZXQgbWluZSBlbnZpcm9ubWVudC4gU28gYXQgdGhlIHZlcnkgbGVhc3QgVUJJIHJlZHVjZXMgdGhlIGFzc2hvbGUgY291bnQuCkZlZWwgZnJlZSB0byBnaXZlIG1lIHNvbWUgYWNjZXB0ZWQgZXhhbXBsZXMgb2YgbXVyZGVycyBjb21taXR0ZWQgY2VudHVyaWVzIGFmdGVyIHRoZSBtdXJkZXJlciBkaWVkLCBpZiB5b3UgY2FuIHRoaW5rIG9mIGFueS4gSSBjYW4uIApUaGUgbmV3IHByb2R1Y3Qgb2ZmZXJzIGZvdXIgbmV3IHVzYWdlcywgaW5jbHVkaW5nIHJhdyBzb25hciByZXN1bHRzIGZvciBwcm9mZXNzaW9uYWwgZmlzaGVybWVuIGFuZCBhIHNtYXJ0IHZpZXcgZm9yIGJlZ2lubmVycy4gQXMgeW91IGRyYWcgdGhlIHNvbmFyIGFjcm9zcyB0aGUgd2F0ZXIgaXQgd2lsbCBnaXZlIHlvdSBhIDNEIHZpZXcgb2Ygd2hhdCB0aGUgYm90dG9tIGxvb2tzIGxpa2Ugc28geW91IGNhbiBjcmVhdGUgYSBmaXNoaW5nIG1hcCB0aGF0IHlvdSBjYW4gc2F2ZSBvbiB5b3VyIHBob25lLiBObyBvbmUgZWxzZSBpcyBkb2luZyB0aGlzLiBUaGUgcHJvZHVjdCBpcyBhdmFpbGFibGUgdG8gY29uc3VtZXJzIE5vdi4gMSwgYnV0IGNhbiBiZSBwcmUgb3JkZXJlZCBvbmxpbmUgYXQgYSBjb3N0IG9mIFVTJDE5OSwgbm93LgpKb25hdGhhbiBIdWJlcmRlYXUgaGFkIGEgZ29hbCBhbmQgdGhyZWUgYXNzaXN0cywgTWlrZSBIb2ZmbWFuIGFsc28gc2NvcmVkIGFuZCBFdmdlbmlpIERhZG9ub3YgYWRkZWQgdGhyZWUgYXNzaXN0cy4gCkkganVzdCBhbHdheXMgZm91bmQgdGhlIGRpZmZlcmVudCBhcHByb2FjaGVzIGZhc2NpbmF0aW5nLi4gCk1hbGdyIHRvdXRlcyBjZXMgcnByb2JhdGlvbnMsIGxhIHByYXRpcXVlIGNvbnNpc3RhbnQgIGpldGVyIGRlcyBoZXJiZXMgcGFyIGRlc3N1cyBsZSBmZXUsIGVuIGN1ZWlsbGlyIGxlIG1pZGksIG91ICBqZXVuLCBlbiBwb3J0ZXIgc3VyIHNvaSAoNikgbmUgY2Vzc2EgcGFzLCBiaWVuIGF1IGNvbnRyYWlyZSwgZWxsZSByZWRvdWJsYSwgY2UgcXVpIGFtZW5hIGwgZCAgb3Jkb25uZXIgZW4gMTY1NiBxdWUgY2VzIGZldXggc29pZW50IGRzb3JtYWlzIGVtYnJhc3MgcGFyIGRlcyBkaWduaXRhaXJlcyBlY2Nsc2lhc3RpcXVlcy4gQ2VwZW5kYW50LCBtYWxnciBjZXQgZW5jYWRyZW1lbnQgZHUgcml0ZSBwYXIgbCdnbGlzZSwgY2VzIHByYXRpcXVlcyBsaWVzIGF1IGZldSBuZSBmdXJlbnQgcGFzIGFiYW5kb25uZXMgbmkgbW1lIGNlbGxlcyBjb25zaXN0YW50ICBzZSByZW5kcmUgYXV4IHNvdXJjZXMgbWlyYWN1bGV1c2VzIGR1cmFudCBsYSBudWl0IGRlIGxhIFNhaW50IEplYW4uLiAKUGVvcGxlIHdobyBsaXZlIGEgbGlmZSBvZiBsdWtld2FybW5lc3MgYXJlIG5laXRoZXIgcmVhZHkgZm9yIHdoYXQgdGhleSB3aWxsIGNvbmZyb250IHRvZGF5IG5vciBwcmVwYXJlZCBmb3Igd2hhdCBpcyBjb21pbmcgdG9tb3Jyb3cuIFRoZSB0ZW1wZXJhdHVyZSBvZiB0aGVpciBsaXZlcyBoYXMgY2hhbmdlZCBzbyBzbG93bHkgdGhhdCBhcmUgb2Z0ZW4gbm90IGV2ZW4gYXdhcmUgb2YgdGhlIHN0YXRlIG9yIGNvbmRpdGlvbiB0aGF0IHRoZXkgYXJlIHJlYWxseSBpbi4gSW4gbWFueSBjYXNlcywgdGhleSBkb24ndCBldmVuIHJlYWxpemUgdGhleSBoYXZlIGJlY29tZSBzcG9pbGVkLCBzbyB0aGV5IGNvbnRpbnVlIHRvIGxpdmUgY29tcGxhY2VudCwgY29tZm9ydGFibGUgbGl2ZXMsIG5ldmVyIGNvcnJlY3RpbmcgdGhlIHByb2JsZW0gbmV2ZXIgbWFraW5nIGFueSBpbXBhY3QgZm9yIHRoZSBraW5nZG9tIG9mIEdvZC4uIApBLiBGcmVpdGFnLCBEZWwgeyBiZXJ0IEdyb2RpdmFudCwgR2VvcmdlIFdyaWdodCwgSmFtZXMgS2VzdG9sLCBJdmFyIExlZSwgSmFtZXMgTWNHb3duLiAKVGhhdCdzIG5vdCBnb2luZyB0byBoYXBwZW4gaW4gbW9zdCBvdGhlciBzcG9ydHMuIHRoaW5rIG9mIHRoZSBuZmwgb3IgYW55IG90aGVyIHRoaW5nIGxpa2UgdGhhdCBhbmQgdGhhdCdzIG5vdCBob3cgdGhleSBvcGVyYXRlLCB0aGV5IGludmVzdGlnYXRlIGNsYWltcyBmaXJzdC4gVGhhdCdzIGhvdyBzaGl0IHdvcmtzLgpUaGUgSFJDIG1hcmdpbmFsaXplcyB1cyBpbnRvIGEgbGltaXRlZCBzdHJ1Z2dsZSBmb3IgYXNwaXJpbmcgaG9tb3NleHVhbCBlbGl0ZXMgdG8gcmVnYWluIHRoZSBwcml2aWxlZ2UgdGhhdCB0aGV5dmUgbG9zdCBhbmQgY2xpbWIgdGhlIHNvY2lhbCBsYWRkZXIgdG93YXJkcyBiZWNvbWluZyBib3VyZ2VvaXNpZS4uIApKYW1lcycgYmlnZ2VzdCBhY2NvbXBsaXNobWVudCBob3dldmVyIHdhcyB0aGUgbG92ZSBhbmQgcmVzcGVjdCBoZSBlbmdlbmRlcmVkIGluIHRob3NlIHdobyBrbmV3IGhpbS4gVGhleSBhcHByZWNpYXRlZCBoaW0gZm9yIGhpcyB0cnVseSBmaW5lIGludGVsbGVjdCwgaGlzIGh1bWFuaXR5LCBoaXMgdG91Z2huZXNzIGluIGFkdmVyc2l0eSwgYW5kIGhpcyBkcnkgaHVtb3VyLiAKUkVVVEVSUy9ab28gVmllbm5hL0RhbmllbCBadXBhbmMvSGFuZG91dCAoQVVTVFJJQSBBTklNQUxTIElNQUdFUyBPRiBUSEUgREFZKSBbUE5HIE1lcmxpbiBBcmNoaXZlXXdlcnF3ZS4gCiJJIHJlbWVtYmVyIHRoZSB3ZWF0aGVyIHRoYXQgZGF5IHdhcyBiZWF1dGlmdWwsIiB0ZXN0aWZpZXMgdGhlIGdyb29tLCBDcmFpZyBIYW5zZW4uIApBbHNvIHRoZXJlIGlzIGEgZGlmZmVyZW5jZSBiZXR3ZWVuIGZhc2hpb24gd2VlaywgcnVud2F5IHJlYWR5LCBydW53YXkgcmVhZHkgdG8gYnV5LCBhbmQgd2hhdCB5b3Ugc2VlIGluIHlvdXIgaGlnaCBlbmQsIG1pZCwgYW5kIG1hc3MgbWFya2V0IHNob3BzLiBFYWNoIGxldmVsIGRvd24gaXQgaXMgd2F0ZXJlZCBkb3duLCByZWRlc2lnbmVkLCBjb3BpZWQsIGFuZCBhZGp1c3RlZCB0byBzdWl0IHRoZSBpbnRlbmRlZCBtYXJrZXQuIApBZGhlcmVudHMgZG9uJ3QgYmVsaWV2ZSBpbiBoZWxsIG9yIFNhdGFuIGFuZCBwcmF5IHRvIGEgZmFsbGVuIGFuZ2VsLCB3aG9tIHRoZXkgY2FsbCBUYXd1c2kgTWVsZWssIHdobyBjYW1lIGRvd24gdG8gRWFydGggYW5kIGNoYWxsZW5nZWQgR29kLCBvbmx5IHRvIGJlIGZvcmdpdmVuIGFuZCByZXR1cm5lZCB0byBoZWF2ZW4uIFRoaXMgYmVsaWVmIGhhcyBnaXZlbiB0aGUgWWF6aWRpIHBlb3BsZSBhIHJlcHV0YXRpb24gYW1vbmcgcmFkaWNhbCBNdXNsaW1zIGFzIGRldmlsIHdvcnNoaXBlcnMuIEFzIGEgcmVzdWx0LCBmb2xsb3dlcnMsIHdobyBoYXZlIG5vIGZvcm1hbCBob2x5IGJvb2sgb2YgdGhlaXIgb3duLCBoYXZlIG9mdGVuIGJlZW4gdGhlIHRhcmdldCBvZiBnZW5vY2lkYWwgaW1wdWxzZXMuIApKVVNUIGFzIHlvdSBwYXNzLCBzdWRkZW5seSBoZSBzd2luZ3MgaGlzIGFybSB1cCBvdXQgb2Ygbm93aGVyZS4gWW91IGdvaW5nIHRvIGZsaW5jaCwgYmVjYXVzZSB5b3UgdGhpbmsgc3ViY29uc2Npb3VzbHksIGhlIGdvaW5nIHRvIGhpdCB5b3UuIApJdCBhIGxlc3NvbiBldmVyeSB5b3VuZyBtYW4gZXNwZWNpYWxseSBoYXMgdG8gbGVhcm4gYXQgc29tZSBwb2ludDsgdGhhdCBldmVuIHRob3VnaCBoZSBub3QgcHJlanVkaWNlIGFnYWluc3QgYW55IGdyb3VwIG9mIHBlb3BsZSBpbiBwYXJ0aWN1bGFyLCBvdGhlciBwZW9wbGUgYXJlLCBhbmQgdGhlcmVmb3JlIGlmIGhlIGRvZXNuIHdhbnQgdG8gYmUgZ3JvdXBlZCB3aXRoIHRoZW0sIGhlIG5lZWRzIHRvIGFsdGVyIHRoZSB3YXkgaGUgdGFsa3MgZGVwZW5kaW5nIG9uIHdobyBoZSB0YWxraW5nIHRvLi4gCkluIGEgc3RhdGVtZW50LCBWaWN0b3JpYSBQb2xpY2UgY29uZmlybWVkIGl0IGhhZCByZWNlaXZlZCBhIGxldHRlciBmcm9tIHRoZSBwb2xpdGljaWFuIGFuZCB3b3VsZCBhc3Nlc3MgInRvIGRldGVybWluZSB3aGV0aGVyIGEgY3JpbWUgaGFzIG9jY3VycmVkIGFuZCB3aGV0aGVyIGl0IHNob3VsZCBiZSByZWZlcnJlZCB0byAodGhlIHJlZ3VsYXRvcikiLgpUaGUgZm9vdGJhbGwgZGVwYXJ0bWVudCBpcyBhbHNvIGNvbmZpZGVudCBiZXR0ZXIgZmFjaWxpdGllcyBwcm92aWRlIGEgYmV0dGVyIGNoYW5jZSBvZiB3aW5uaW5nIGdhbWVzLiBTdCBLaWxkYSBzdGFyIE5pY2sgUmlld29sZHQgaGFzbid0IGZvcmdvdHRlbiB0b3VyaW5nIENvbGxpbmd3b29kJ3MgTGV4dXMgQ2VudHJlIHdoaWxlIHRyYWluaW5nIHdpdGggdGhlIEF1c3RyYWxpYW4gaW50ZXJuYXRpb25hbCBydWxlcyBzaWRlIGEgZmV3IHllYXJzIGFnby4gIkdvaW5nIHRocm91Z2ggdGhlcmUgYW5kIGxvb2tpbmcgYXQgdGhlIGZhY2lsaXRpZXMgdGhhdCB0aGV5IGhhZCwgaXQgcmVhbGx5IGhpdCBoYXJkIGhvdyBmYXIgYmVoaW5kIHRoZSBlaWdodCBiYWxsIHdlIHdlcmUgd2l0aCByZXNwZWN0cyB0byB0aGF0IHNvcnQgb2Ygc3R1ZmYsIiBSaWV3b2xkdCBzYWlkLiAKQXMgZGlzY3Vzc2VkIGVhcmxpZXIsIHRoZSBvZGRzIG9uIHBvY2tldCBLaW5ncyBvciBBY2VzIGJlaW5nIG91dCB0aGVyZSBhcmUgdmFyaWFibGUgZGVwZW5kaW5nIG9uIHRoZSBudW1iZXIgb2YgZGVhbHQgaGFuZHMuIFRoZSBvZGRzIHdpbGwgYmUgYXQgbGVhc3QgMTIgMSBvbiBhIGZ1bGwgdGFibGUgdGhvdWdoLgpUaGVpciBwYXJ0bmVycyByZXBvcnRlZCBhIHJlZHVjdGlvbiBpbiBzdHJlc3MuIEFub3RoZXIgc3R1ZHkgaW52ZXN0aWdhdGVkdGhlIGVmZmVjdHMgb2YgbWFzc2FnZSBhbW9uZyB3b21lbiB2ZXRlcmFucyB3aXRoIGNocm9uaWMgcGFpbiBhbmRmb3VuZG1hc3NhZ2UgZGVjcmVhc2VkIHBhaW4gYW5kIHByZXNjcmlwdGlvbiBhbmFsZ2VzaWMgdXNlIGFzIHdlbGwgYXMgaW5jcmVhc2VkIHJlbGF4YXRpb24sIGJvZHkgYW5kIG1pbmQgY29ubmVjdGlvbiwgYW5kIGZlZWxpbmdzIG9mIHRydXN0IGFuZCBzYWZldHkgKFByaWNlIGV0IGFsLCAyMDA3KS4uIApBcyB0aGUgYXNzYWlsYW50IHB1bW1lbGVkIGFuZCBraWNrZWQgUmF0aGVyLCBoZSBrZXB0IHJlcGVhdGluZyB0aGUgcXVlc3Rpb24uIApQaHVjaG1pbGVpZiAgMzEgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkkgdGhpbmsgdGhhdCB0aGUgdGhpbmtpbmcgaGVyZSBiZWhpbmQgd2h5IGhlIGlzbiBiZWluZyBpbmRpY3RlZCB5ZXQgYXQgbGVhc3QgdW50aWwgYWZ0ZXIgdGhlIGVsZWN0aW9uLiAKQnV0IHdoYXQgaXMgcmVhbGx5IGFuZCB0cnVseSB1cHNldHRpbmcsIHdoYXQgaXMgY2F1c2luZyBtZSB0byBzaGVkIGEgZmV3IHRlYXJzLCBpcyB0aGF0IG9uY2UgYWdhaW4gdGhlIG1haW5zdHJlYW0gbWVkaWEgaXMgaWdub3JpbmcgdGhlIHJlYWwgc3Rvcnk6IGhpcmluZyBvdXQgdG8gcHJpdmF0ZSwgZm9yIHByb2ZpdCBjb21wYW5pZXMgb3VyIG5hdGlvbmFsIGRlZmVuc2UuIE5vdCBvbmx5IGlzIHRoaXMgY29zdGluZyBhbGwgb2YgdXMgYSBsb3Qgb2YgbW9uZXkgc2luY2UgdGhlc2Ugc29sZGllcnMgZm9yIGhpcmUgZG9uIHdvcmsgZm9yIHBlYW51dHMgYW5kIHRoZSBwcm9taXNlIG9mIGEgY29sbGVnZSBkZWdyZWUgYW5kIHRoZSBoaWdoZXIgIHVwcyBpbiB0aGVzZSBjb21wYW5pZXMgZWFybiBzYWxhcmllcyBjb21wYXJhYmxlIHRvIEFJRyBleGVjcywgYnV0IG1vcmUgaW1wb3J0YW50bHksIHRoZSBVUyBnb3Zlcm5tZW50IGhhcyB2ZXJ5IGxpdHRsZSBvciBldmVuIG5vIGNvbnRyb2wgb3ZlciBob3cgdGhlc2UgbWVyY2VuYXJpZXMgYmVoYXZlLgpTbyBJLCBhcyBhIDI1IHllYXIgb2xkIG1hbiwgbGV0IG91dCB0aGUgbW9zdCBmZW1pbmluZSBzY3JlYW0gb2YgbXkgbGlmZSwgc21hc2hlZCB0aGUgd2luZHNoaWVsZCBjbGVhbmVyIGFnYWluc3QgdGhlIGdsYXNzLCBzZW5kaW5nIGl0IGluIHBpZWNlcywgcHVsbGVkIHRoZSBjYXIgcXVpY2tseSB0byB0aGUgc2lkZSBvZiB0aGUgcm9hZCBzbyB0aGF0IEkgY291bGQganVtcCBvdXQgYW5kIHByb2NlZWRlZCB0byBydW4gYXdheSBmcm9tIG15IHN0aWxsIHJ1bm5pbmcgY2FyIHRvIG15IGhvdXNlIGEgY291cGxlIGRvb3JzIGRvd24uClRoZSBkYXRhIGFsc28gc2hvdyB1cyB0aGF0IG9uZSBvZiB0aGUgbWFpbiBkcml2ZXJzIG9mIHRoaXMgcHJpY2luZyBlZmZlY3QgaXMgdGhlIHN1cGVyaW9yIGFiaWxpdHkgb2YgZW1vdGlvbmFsIGNhbXBhaWducyB0byBjcmVhdGUgYSBzZW5zZSBvZiBkaWZmZXJlbnRpYXRpb24gZm9yIHRoZSBicmFuZCwgb25lIHRoYXQgY2FuIGVuZHVyZSBhbmQgd2lsbCBub3QgZGlzYXBwZWFyIHdpdGggdGhlIG5leHQgcHJvZHVjdCBsYXVuY2ggZnJvbSBhIGNvbXBldGl0b3IuIFdlIGV4YW1pbmUgYSBudW1iZXIgb2YgZmFtb3VzIGJyYW5kcywgc3VjaCBhcyBBcHBsZSwgdGhhdCBoYXZlIGV4cGxvaXRlZCB0aGUgZW1vdGlvbmFsIHBvd2VyIG9mIHRoZWlyIGJyYW5kcyBpbiB0aGlzIHdheS4uIApCeSBteSBkZXNjZW5kYW50cyBmb3IgdGhlIGZpcnN0IGZldyBjZW50dXJpZXMsIGFuZCB0aGVuIGFzIGEgbWVtb3J5IG9mIGFuY2llbnQgdGltZXMsIGFuZCB0aGVuLiAKSWYgYSA0LCA1LCA2LCA4LCA5LCBvciAxMCBpcyByb2xsZWQsIHlvdSB0aGVuIHdpbiBpZiB0aGUgc2hvb3RlciByb2xscyB0aGF0IG51bWJlciBhZ2FpbiBiZWZvcmUgcm9sbGluZyBhIDcuIE9uY2UgdGhhdCBwb2ludCBudW1iZXIgaXMgbWFkZSwgeW91IGNhbiBwdXQgb3V0IGFuIGFkZGl0aW9uYWwgb2RkcyBiZXQgdGhhdCBpcyBwYWlkIGF0IHRoZSB0cnVlIG9kZHMgb2Ygcm9sbGluZyB0aGUgcG9pbnQgYWdhaW4gYmVmb3JlIGEgNyBpcyByb2xsZWQuIFRoZSBob3VzZSBlZGdlIGZvciBjcmFwcyBpcyBsZXNzIHRoYW4gMiBwZXJjZW50IHdpdGggdGhlIGJlc3QgYmV0cy4uIApNYXNzYWdlIGF0IGEgY2xpbmljLCBhbmQgaGF2ZSB5b3VyIGJhY2t5YXJkIHl1cnQgZm9yIG1lZGl0YXRpb24gbGVzc29ucyBhbmQgZHJ1bSBqb3VybmV5cyBvciB3aGF0ZXZlci4gSWYgeW91IGhhdmUgYSBjYXJlZXIgZm9yIG1vbmV5IHRoZW4geW91ciBoZWFsaW5nIGhvYmJ5IGNhbiBncm93IHdpdGhvdXQgcHJlc3N1cmUuLiAKV2VyZSBrb3JlYW5zIGlubm9jZW50IHZpY3RpbXMgZm9yIHRoZSBlbnRpcmUgcGVyaW9kPyBJZCBhcmd1ZSBuby4gCk1heSAxNzpDYXNlIGFnYWluc3QgdGVlbiBpbiBMZWZ0aGFuZCBDYW55b24gYXR0YWNrIHdpbGwgcmVtYWluIGluIGFkdWx0IGNvdXJ0QXByIDU6SnVkZ2UgaGVhcnMgdGVzdGltb255IGluIEJvdWxkZXIgQ291bnR5IExlZnRoYW5kIENhbnlvbiBhdHRlbXB0ZWQgbXVyZGVyIGNhc2VPY3QgMTQ6RGFpbHkgQ2FtZXJhIG9yZGVyZWQgdG8gcmVtb3ZlIGp1ZGdlJ3MgcnVsaW5nIGZyb20gd2ViLCBidXQgd29uJ3QgYmUgaGVsZCBpbiBjb250ZW1wdE9jdCAzOkFmZmlkYXZpdDogQm95LCAxNiwgYWRtaXRzIHRvIGF0dGFja2luZyBlbGRlcmx5IExlZnRoYW5kIENhbnlvbiB3b21hbk9jdCAyOkJvdWxkZXIgQ291bnR5IERBOiBGaWxpbmcgYWR1bHQgY2hhcmdlcyBnaXZlcyBwcm9zZWN1dG9ycyBvcHRpb25zU2VwIDI4OkJvdWxkZXIganVkZ2UgbGlmdHMgb3JkZXIgYmxvY2tpbmcgRGFpbHkgQ2FtZXJhIGZyb20gcHVibGlzaGluZyB3YXJyYW50LCBidXQgcHV0cyBydWxpbmcgb24gaG9sZFNlcCAyNzpEYWlseSBDYW1lcmEgY2hhbGxlbmdlcyBvcmRlciBibG9ja2luZyBwdWJsaWNhdGlvbiBvZiB3YXJyYW50IGFzIHVuY29uc3RpdHV0aW9uYWxTZXAgMjI6VGVlbiBhY2N1c2VkIG9mIGF0dGVtcHRlZCBtdXJkZXIgaW4gYnJ1dGFsIExlZnRoYW5kIENhbnlvbiBhdHRhY2sgYXJyZXN0ZWQgU2VwIDIwOlRlZW4gc291Z2h0IGluIGF0dGVtcHRlZCBtdXJkZXIgb2YgZWxkZXJseSB3b21hbiBpbiBMZWZ0aGFuZCBDYW55b25BIEJvdWxkZXIganVkZ2UgaGFzIHJ1bGVkIHRoYXQgZG9jdW1lbnRzIGluIHRoZSBjYXNlIGFnYWluc3QgYSAxNiB5ZWFyIG9sZCBhY2N1c2VkIG9mIHNldmVyZWx5IGJlYXRpbmcgYSBMZWZ0aGFuZCBDYW55b24gd29tYW4gd2lsbCBiZSBtYWRlIGF2YWlsYWJsZSB0byB0aGUgcHVibGljIGV4Y2VwdCBmb3IgZnV0dXJlIGZpbGluZ3MgcmVsYXRpbmcgdG8gdGhlIHRlZW4ncyBlZmZvcnRzIHRvIGdldCBoaXMgY2FzZSB0cmFuc2ZlcnJlZCBiYWNrIHRvIGp1dmVuaWxlIGNvdXJ0LkNoaWVmIEJvdWxkZXIgRGlzdHJpY3QgSnVkZ2UgTWFyaWEgQmVya2Vua290dGVyIGlzc3VlZCB0aGUgcnVsaW5nIFR1ZXNkYXksIHdyaXRpbmcgdGhhdCBKZWZmcmV5IENvbGxpbnMgYW5kIGhpcyBhdHRvcm5leSBkaWQgbm90IG1lZXQgdGhlIGJ1cmRlbiByZXF1aXJlZCB0byBncmFudCBoaXMgcmVxdWVzdCB0byBzZWFsIHRoZSBjYXNlLiJUaGUgY291cnQgaG9sZHMgdGhhdCBpbiBvcmRlciB0byBzZWFsIHRoZSBlbnRpcmUgZmlsZSBmcm9tIHRoZSBwdWJsaWMsIHRoZSBkZWZlbmRhbnQgd291bGQgaGF2ZSB0byBlc3RhYmxpc2ggYW4gb3ZlcnJpZGluZyBhbmQgY29tcGVsbGluZyByZWFzb24gdG8gZG8gc28sIiBCZXJrZW5vdHRlciB3cm90ZSBpbiBoZXIgMTIgcGFnZSBydWxpbmcuIApUaGUgc21hbGxlc3QgdGhpbmcgY291bGQgZ2l2ZSB5b3UgYXdheS4gCkknbSBpbiBteSAzMHMgbm93LiBUbyBoYXZlIHNleCkuIEhhZCBzZXgpLiAKT3VyIGhvdGVsIGFpbXMgdG8gcHJvdmlkZSBhIHRydWx5IHVuaXF1ZSBleHBlcmllbmNlLCBhbmQgd2UgYXJlIHRocmlsbGVkIHRoYXQgd2Ugd2VyZSBhYmxlIHRvIGV4Y2VlZCB5b3VyIGV4cGVjdGF0aW9ucy4gVGhlIGhvdGVsIGlzIGNlbnRyYWxseSBsb2NhdGVkIG5leHQgdG8gQWwgUmlnZ2EgTWV0cm8gU3RhdGlvbiB3aXRoIGNsb3NlIHByb3hpbWl0eSB0byB0aGUgRHViYWkgSW50ZXJuYXRpb25hbCBBaXJwb3J0IGFuZCB0byB0aGUgZmFtb3VzIERlaXJhIENpdHkgQ2VudHJlIEFsIEdodXJhaXIgQ2VudHJlLiAKV2Uga296ZW4gdWl0ZWluZGVsaWprIGhldCB0ZXJyYXMgdmFuIGhldCBJdGFsaWFhbnNlIHJlc3RhdXJhbnQgU2FuIE1hcmNvIHVpdCwgbWV0IGVlbiBsZXVrIHVpdHppY2h0IG9wIGhldCBjYWYgYWFuIGRlIG92ZXJrYW50IHdhYXIgaGVlbCB2ZWVsIHN0b2VyZSBtb3RhcmRzIHdhcmVuLiBHZWx1a2tpZyBtYWFyIGRhdCB3ZSBpZXRzIGhhZGRlbiBvbSBuYWFyIHRlIGtpamtlbiwgd2FudCBoZXQgZ2luZyB0cmFhZyB2b29ydWl0IGVuIGhldCB3YXMgb29rIGVlbiBlZXJzdGUga2VubmlzbWFraW5nIG1ldCBkZSB6ZWVyIGtsZWluZSBwb3J0aWVzIGRpZSBqZSBpbiBNb3Nrb3Uga3Jpamd0LiBHZWx1a2tpZyBtYWFyIHdhcyBlciB3YXQgdmVyZGVyIG5vZyBlZW4gTWNEb25hbGRzISBPbSBrd2FydCBuYSAxMCB3YXJlbiB3ZSB0ZXJ1ZyBvcCBvbnplIGhvdGVsa2FtZXIgaGV0IHdhcyBub2cgYWx0aWpkIGxpY2h0IGJ1aXRlbiEuIApOb3RpY2UgdGhlIGRhdGUgb2YgTWF5IDIwMTMgYW5kIHRoZXkgbWVudGlvbiBMZWlkYSBpcyBwcmVnbmFudC4gCkRlbnRpc3RzIHdpbGwgbmVlZCB0byBiZSBhYmxlIHRvIHN5bnRoZXNpc2UgbWF0ZXJpYWxzIGZvciByZXBsYWNlbWVudHMgKGNyb3ducywgZmlsbGluZ3MsIGV0Yy4pIGluIGFuIGVudmlyb25tZW50IHBvdGVudGlhbGx5IHNjYXJjZSBpbiB1c2FibGUgcmVzb3VyY2VzLiBUaGlzIG1pZ2h0IGludm9sdmUgZmFtaWxpYXJpdHkgd2l0aCAzRCBiaW9wcmludGluZyB0ZWNobm9sb2d5LCBhbmQgdGhlIGNhcGFjaXR5IHRvIGRldmVsb3AgbW91bGRzIG9yIG1vZGVscyBmb3IgcGF0aWVudHMgb24gdGhlIHN1cmZhY2Ugd2l0aG91dCB0aGUgaW1tZWRpYXRlIGx1eHVyeSBvZiBhIHN1cHBsZW1lbnRhcnkgbGFiLiAKWW8uIEkgcmFpc2VkIG15IHNvbiBhbG9uZSBidXQgZ2V0dGluZyB0aGF0IGFjY2VzcyB0b29rIHRpbWUuIEhpcyBtb20gc2VlcyBoaW0gb25jZSBhIHllYXIgaWYgdGhhdCBub3cuIFRoYXQgZG9lc24gZml4IHRoZSBwcm9ibGVtcyB0aG91Z2guIFRyeWluZyB0byBnZXQgaGltIGVucm9sbGVkIGluIGEgbmV3IHNjaG9vbCB3aXRob3V0ICJNb21zIHNpZ25hdHVyZSIgd2FzIGEgZnVja2luZyBuaWdodG1hcmUuICJXZSBuZWVkIG1vbSB0byBzaWduIHRoaXMuIiBUaGVyZSBpcyBubyBtb20uICJPayB3ZWxsIHRoZW4gd2UgbmVlZCBhIG5vdGFyeSBhbmQgbW9tcyBzaWduYXR1cmUuIiBJIGhhdmVuIHRhbGtlZCB0byBoZXIgaW4gYSB5ZWFyIGFuZCBoYWxmIC4gIk9LIHdlbGwgd2UgbmVlZCBtb20gdG8gY29tZSBpbi4iIEkgaGVhcmQgIndoZXJlcyBtb20iIHNvIG1hbnkgZGFtbiB0aW1lcyBJIGNvdWxkIHNlZSB0aGUgd29yZHMgZm9ybWluZyBvbiB0aGVzZSBhc3Nob2xlIGFkbWluaXN0cmF0b3JzIG1vdXRocy4gSXQgYSBuaWdodG1hcmUgYmVpbmcgYSBzaW5nbGUgZmF0aGVyIGFuZCB0cnlpbmcgdG8gZG8gdGhlIG1vc3QgbXVuZGFuZSBzaGl0IGxpa2UgZW5yb2xsaW5nIHlvdXIga2lkIGludG8gYSBzY2hvb2wuCllvdXIgb3B0b21ldHJpc3Qgc2hvdWxkIGFsc28gYmUgYWJsZSB0byBnaXZlIHlvdSBhIHNldCB0byBwcmFjdGljZSB3aXRoIG9yIHNvbWUgc2FtcGxlcyB0byBoZWxwIHlvdSBsZWFybiBob3cgdG8gdXNlIHRoZW0uLiAKSXRzIGp1c3QgYmVlbiBtb3JlIG9idmlvdXMvaGVpZ2h0ZW5lZCBsYXRlbHkgd2l0aCBhIGJhYnkgb24gdGhlIHdheS4gCkZpbmFsbHksIHBvdXIgdGhlIHJlc3VsdGluZyBsaXF1aWQgZnJvbSB0aGUgYmxlbmRlciBpbnRvIHRoZSBtaXhpbmcgYm93bCBhbmQgbWl4IHRob3JvdWdobHkgd2l0aCB0aGUgZHJ5IGluZ3JlZGllbnRzLiBQdXQgdGhlIHJlc3VsdGluZyBiYXR0ZXIgaW50byBhbiBvaWxlZCBiYWtpbmcgcGFuICg0IiB4IDgiIG9yIDEwY20geCAyMGNtKSwgcHV0IHRoZSBwYW4gaW4gdGhlIG92ZW4sIGFuZCBiYWtlIGZvciBhbiBob3VyIGF0IDM1MEYgKDE3NUMpLgpEaWQgc2hlIGZpbGUgYSBsYXdzdWl0PyBEaWQgc2hlIHRocmVhdGVuIGdvdmVybm1lbnQgYWN0aW9uPyBOby4gWW91IHRoaW5raW5nIG9mIHRoZSBOZXcgWW9yayBTdGF0ZSBTZW5hdGUuIEFtYXpvbiBvd24gbGV0dGVyIG9uIHRoZSByZXZlcnNhbCBzaW1wbHkgc3RhdGVkIHRoZXkgZGlkbiB3YW50IHRvIGRlYWwgd2l0aCB0aGVtLCBzbyBwbGVhc2Ugc3RvcCBlcXVhdGluZyBBT0MgdG8gRmlkZWwgZnVja2luZyBDYXN0cm8gc2hlIGhhcyBubyBwb3dlci4KSGUgb2ZmZXJlZCBmb3IgdXMgdG8gY29tZSB0byBoaXMgaG91c2UsIGFuZCBsb29rIGF0IHRoaXMgb2xkIG1pbml2YW4gdGhhdCBoZSBoYWQgYW5kIHdvdWxkIGJlIHdpbGxpbmcgdG8gZ2l2ZSB1cyBhIGdvb2QgZGVhbCBvbiBpdC4gVGhlIG5leHQgZGF5IHdlIGZvdW5kIGEgcmlkZSBhbmQgd2VudCBieSB3aXRob3V0IGV4cGVjdGluZyBtdWNoLCBzcGVjaWFsbHkgd2hlbiB3ZSBwdWxsZWQgaW4gYW5kIHNhdyB0aGF0IGl0IHdhcyBhY3R1YWxseSBxdWl0ZSBhIG5pY2UgbG9va2luZyB2YW4uIApJZiB0ZSBkZXZpY2UgaGFkIGFuIGVycm9yIHRoZSBMRUQgd2lsbCBiZSBvbi4gQW4gaW5kZWVkIHRoZSBDUFUgTEVEcyBpcyBvbi4gClVzZSB5b3VyIGZpbmdlciB0byBtYXNzYWdlIHRoZSB0b290aHBhc3RlIG9uIHRoZSBzY3JhdGNoZWQgYXJlYSB3aXRoIGEgY2lyY3VsYXIgbW90aW9uLiAKSXMgdGhpcyBub3JtYWw/IEFsc28gSSBuZXZlciBnb3QgdG8gZ2V0IG15IGNoZWNrZWQgYmFnZ2FnZS4gTXkgdW5kZXJzdGFuZGluZyB3YXMgdGhhdCBJIGhhZCB0byByZWNoZWNrIGl0IG9uY2UgaW4gS29yZWEsIGJ1dCBJIHdlbnQgdG8gdGhlIGNoZWNrZWQgYmFnZ2FnZSBvZmZpY2UgYW5kIHRoZXkgc2Nhbm5lZCBteSB0aWNrZXQgYW5kIHNhaWQgSSB3YXMgZmluZSwgYnV0IHRoZXkgc2VlbWVkIGEgbGl0dGxlIGNvbmZ1c2VkLi4gCkJ1dCBwb2xpY2UgYXJlbid0IGdpdmluZyB0aGVtIG11Y2ggZmVlZGJhY2sgYWJvdXQgd2hhdCdzIGFjY2VwdGFibGUsIEZyZWQgWmltbWVybWFuIHNhaWQuLiAKNC85LiAKSWwgZXN0IHBvc3NpYmxlIGQgbGVzIHBvcHVsYXRpb25zIGRlIGxhIFNpYnJpZSBmYWlyZSBkZSBtbWUgYXZlYyBsYSBiZXJjZSBzcGhvbmR5bGUuIEQgcG9pbnQgZGUgdnVlIG9jY2lkZW50YWwsIGQgcHJpb2RlIGVuZ2xvYmFudCBsZSBNb3llbiBnZSBldCBsYSBSZW5haXNzYW5jZSwgbCBwZXV0IHJlZ3JvdXBlciBxdWVscXVlcyBpbmZvcm1hdGlvbnMgcXVpIHZpZW5kcmFpZW50LCBhdmVjIGdyYW5kIHBlaW5lLCByZW1wbGlyIGwgaGFiaXR1ZWxsZW1lbnQgcnNlcnYgYXV4IGZldWlsbGVzIGRlIGNob3UgbG9jYWxlcy4gQXBwYXJlbW1lbnQsIGZldWlsbGVzIGV0IHNlbWVuY2VzIHRhaWVudCBjb252aWVzIHBvdXIgc2Ugc29pZ25lci4gCjMgcG9pbnRzICBzdWJtaXR0ZWQgNCBob3VycyBhZ28KSW4gdGhpcyB3YXksIHRyYWRpdGlvbmFsIENoaW5lc2UgbWVkaWNpbmUgaXMgc2ltaWxhciB0byBXZXN0ZXJuIG1lZGljaW5lLiAKSWYgdGhleSBkbyBoYXZlIG1peGVkIGdhbWVzIGdvaW5nIEkgZXhwZWN0IHRoYXQgOCBnYW1lIG9yIDEwIGdhbWUgd291bGQgYmUgbW9yZSBwb3B1bGFyLCBiZWNhdXNlIHRoYXQgd2FzIGRlZmluaXRlbHkgdHJ1ZSBmb3IgY2FzaC4gOCBnYW1lIHRvdGFsbHkga2lsbGVkIEhPUlNFLiAoOCBnYW1lIGlzIEhPUlNFIHBsdXMgTkxIRSwgUExPIGFuZCBzb21lIGtpbmQgb2YgZHJhdyBnYW1lLCBJIGRvbid0IHJlbWVtYmVyLCBwcm9iYWJseSBiYWR1Z2kpLiAKQW5kIHRoYXQgYSBnZW5lcmFsaXphdGlvbiBiZWNhdXNlIGl0IHRydWUgaW4gbW9zdCBjYXNlcyBzaG93biBieSBteSBleHBlcmllbmNlIGFuZCB0aGUgZXhwZXJpZW5jZSBvZiBldmVyeSBtYW4gSSB0YWxrZWQgdG8uIFRoYXQgZG9lcyBub3QgbWFrZSBpdCBhbiBhYnNvbHV0ZSBmYWN0IGZvciBldmVyeSB3b21hbi4gVGhlIGdlbmVyYWxpemF0aW9uIHJlZmxlY3RzIGhvdyBtb3N0IHdvbWVuIGFjdCwgaXQgZG9lcyBub3QgY2F1c2UgdGhlbSB0byBhY3QgYSBjZXJ0YWluIHdheS4KTWFsaWJ1IGlzIGEgc29tZXdoYXQgc2VjbHVkZWQgYXJlYSB3aXRoIGhpbGxzIHZlZ2V0YXRpb24sIGJ1dCB0aGVyZSBubyBmaXJlcyB0aGVyZS4gVGhlIHZhc3QgbWFqb3JpdHkgb2YgZmlyZXMgaW4gU291dGhlcm4gQ2FsaWZvcm5pYSBhcmUgaW4gaGlsbHkgYXJlYXMgd2l0aCB2ZWdldGF0aW9uIHRoYXQgYmVlbiBkcmllZCBvdXQgZnJvbSB5ZWFycyBvZiBkcm91Z2h0LiAKIlRoZXNlIGFyZSBvdXIga2lkcywiIHNoZSBzYWlkLiAiVGhlc2UgYXJlIGxpdmVzIHRoYXQgYXJlIG9mIHZhbHVlIGFuZCBuZWVkIHNhbHZhdGlvbi4iCkhpcyBkZWZlbnNlIGFsc28gY292ZXJzIGZvciBWdWNldmljLCB3aG8gaSBkb24gdGhpbmsgaXMgbmVjZXNzYXJpbHkgdGVycmlibGUgb24gdGhhdCBlbmQsIGJ1dCBqdXN0IG1lZGlvY3JlLiAKT25saW5lcG9rZXIgcm9vbXNyZXN0cmljdCB0b29wZW4gc2V2ZXJhbCBwb2tlciBhY2NvdW50cywgYnV0IGV2ZW4gaWYgdGhhdCBwcm9oaWJpdGVkLCB5b3UgbWF5IG9wZW4gc2V2ZXJhbCBwb2tlciByb29tcy4KV2FzIGRlZmluaXRlbHkgdGhlIHNhZmUgcm91dGUsIGhlIHNheXMuIE9uZSBkYXkgSSB3YXMganVzdCBsaWtlLCBJIGRvbiB0aGluayB0aGVyZSBlbm91Z2ggdGltZSBmb3IgdGhhdC4gCk91dGZpZWxkZXIgWW9uYXRoYW4gRGF6YSwgMjUsIGlzIGNvbWluZyBvZmYgYW4gaW5qdXJ5IG1hcnJlZCBzZWFzb24gaW4gRG91YmxlIEEgSGFydGZvcmQgYnV0IGhhcyBnaXZlbiB0aGUgY29hY2hpbmcgc3RhZmYgZ2xpbXBzZXMgaW50byB0aGUgZGVmZW5zaXZlbHkgc291bmQsIGhpZ2ggYXZlcmFnZSBoaXR0ZXIgaGUncyBtYXR1cmluZyBpbnRvLiAKQSBndW4gaXMgYmV0dGVyIHRvIGhhdmUgaW4gYSBob21lIGRlZmVuc2Ugc2l0dWF0aW9uIHRoYW4gYW55IG90aGVyIG9wdGlvbiwgT0s/IERvbid0IGxldCBzdHVwaWQgYmlhc2VkIGxpYmVyYWwgcGVvcGxlIHRlbGwgeW91IHRoYXQgeW91IGFyZSBtb3JlIGxpa2VseSB0byBkaWUgZnJvbSBoYXZpbmcgYSBndW4gaW4gdGhhdCBzaXR1YXRpb24uIApUYWJsZXMgdGhtYXRpcXVlcyBhdXRvdXIgZGVzIHN1amV0cyBldCBwcm9qZXRzIGlzc3VzIGRlIGwnb3JkcmUgZHUgam91ciBwYXJ0aWNpcGF0aWYgOiBzY3VyaXQvdHJhbnF1aWxsaXQgcHVibGlxdWUgOyBjYWRyZSBkZSB2aWUvcHJvcHJldCA7IHNvbGlkYXJpdC9lbnRyYWlkZSA7IGFuaW1hdGlvbiBldCB2aWUgZGUgcXVhcnRpZXIuIElsIHNlcmEgcG9zc2libGUgbGUgam91ciBtbWUgZGUgcmFqb3V0ZXIgdW5lIHRobWF0aXF1ZSBzaSB2b3VzIGxlIHNvdWhhaXRlei4gUGFyIGFpbGxldXJzLCBkZXMgaW50ZXJ2ZW5hbnRzIChsdXMsIHNlcnZpY2VzLCBhc3NvY2lhdGlvbnMsLikgcG91cnJvbnQgdHJlIHByc2VudHMgIGNlcnRhaW5lcyB0YWJsZXMgdGhtYXRpcXVlcyBlbiB0YW50IHF1ZSAicGVyc29ubmVzIHJlc3NvdXJjZXMiIHBvdXIgYWxpbWVudGVyIGxlcyBjaGFuZ2VzLi4gClRoYXQgc2VudGltZW50IGhhcyBzcHJlYWQgYmV5b25kIENvbmdyZXNzIHRvIHRvcCBBbWVyaWNhbiBhbmQgaW50ZXJuYXRpb25hbCBidXNpbmVzc2VzIGFuZCBmaW5hbmNpZXJzLiBNb3JnYW4gQ2hpZWYgRXhlY3V0aXZlIEphbWllIERpbW9uIGFuZCBGb3JkIE1vdG9ycyBDaGFpcm1hbiBCaWxsIEZvcmQgY2FuY2VsZWQgdGhlaXIgcGFydGljaXBhdGlvbiBpbiB0aGUgY29uZmVyZW5jZSwgc28gZGlkIFViZXIgQ0VPIERhcmEgS2hvc3Jvd3NoYWhpLCBHb29nbGUgZXhlY3V0aXZlIERpYW5lIEdyZWVuZSwgVmlhY29tIENFTyBCb2IgQmFraXNoIGFuZCBiaWxsaW9uYWlyZSBjbyBmb3VuZGVyIG9mIEFPTCwgU3RldmUgQ2FzZS4gVGhlIGV4ZWN1dGl2ZXMgb2YgQmxhY2tzdG9uZSBHcm91cCwgb25lIG9mIHRoZSB3b3JsZCBsYXJnZXN0IHByaXZhdGUgZXF1aXR5IGZpcm1zIGFuZCByZWFsIGVzdGF0ZSBpbnZlc3RvcnMgYW5kIEJsYWNrU3RvbmUsIHRoZSB3b3JsZCBsYXJnZXN0IGFzc2V0IG1hbmFnZXIgYWxzbyB3aXRoZHJldyBmcm9tIHRoZSBjb25mZXJlbmNlLi4gCkpvdWUgc3VyIGxlcyBkZXV4IHRhYmxlYXV4LiAKSSBoYXZlIGEgY2x1c3RlcmVkIHJvdW5kYWJvdXQgbWFwIHRoYXQgaXMgc2ltaWxhciBpbiBjb25jZXB0IHRvIHRoZSBUIGJhciBsYXlvdXQgeW91IHVzaW5nLiBUaGUgaWRlYSBpcyB5b3UgaGF2ZSBhIGdyaWQgb2YgaGlnaHdheXMgdGhhdCBhbGwgc2VydmUgYSByZWFzb25hYmxlIG51bWJlciBvZiAiYmFycmlvcyIgYW5kIHRoaW5ncyBhcmUgdmVyeSBzZWxmIGNvbnRhaW5lZC4gVGhlIGlkZWEgaXMgYnVpbGRpbmcgYSBjaXR5IG91dCBvZiBzbWFsbCB0b3ducy4gSSBsaWtlIGl0LCBhbmQgaXQgbG9va3MgbGlrZSB5b3UgZG9pbmcgaXQgd2VsbC4KV2hlbiB0aGV5IGFycml2ZSBhdCB0aGUgc3dhbXAsIEkgd2FudCBpdCB0byBzdGFuZCBvdXQgYXMgYSBkYW5nZXJvdXMgYXJlYSB0aGF0IHdpbGwgKGxpdGVyYWxseSkgZWF0IHRoZW0gYWxpdmUgaWYgdGhleSBhcmVuIGNhdXRpb3VzLiBTbywgYSBzaG9ydCB3YXkgaW4sIHRoZXkgZGlzY292ZXIgY2x1ZXMgb2YgYSBsYXJnZSBiZWFzdCB0aGF0IGhhcyBiZWVuIGtub2NraW5nIG92ZXIgdHJlZXMgYW5kIGxlYXZpbmcgZ2lhbnQgZm9vdHByaW50cy4gRG8gdGhleSB0dXJuIGJhY2s/IEhlbGwgbm8uIFRoZXkgbG9va2luZyBmb3Igb2dyZXMgaW4gdGhlIHN3YW1wISAoVGhlc2UgcGxheWVycyB3ZXJlIHRlZW5hZ2VycyBhbmQgdGhvdWdodCAiZmluZGluZyBTaHJlayIgaW4gdGhlIHN3YW1wIHNvdW5kZWQgbGlrZSBhIGdyYW5kIGFkdmVudHVyZSkuIEV2ZW50dWFsbHksIHRoZSBkcnVpZCBkZWNpZGVzIHRvIHN0YW5kIGluIHRoZSBtaWRkbGUgb2YgdGhlIHN3YW1wIGFuZCBzaG91dCBhdCB0aGUgdG9wIG9mIGhlciBsdW5ncywgaW50cm9kdWNpbmcgaGVyc2VsZiB0byB0aGUgdW5rbm93biBtb25zdGVyLgpQb2tlciBmYWNlIkhleSBaLCBkbyB5b3Ugd2FudCB0byBtb3ZlIHRvIHRoZSBmZW1hbGUgc2lkZT8iCldvcmsgeW91ciB3YXkgdXAgd2l0aCB3aGF0IHlvdSBoYXZlLiAKVGhlIG9kZHMgdGhlIHBvdCBpcyBvZmZlcmluZyB5b3UgYXJlIDUgdG8gMS4gVGhlcmUgaXMgJDUgaW4gdGhlIHBvdCwgYW5kIHlvdSBuZWVkIHRvIGNhbGwgd2l0aCAkMS4gCkdyb3dpbmcgYm9keSBvZiBsaXRlcmF0dXJlIHJlbGF0ZXMgaGVhZGFjaGVzIHRvIGluanVyeSBvciBwYXRob2xvZ3kgYWZmZWN0aW5nIG5lY2sgc3RydWN0dXJlcy4gTW9yZW92ZXIsIGEgbnVtYmVyIG9mIGNsaW5pY2FsIHRyaWFscyBoYXZlIHN1Z2dlc3RlZCB0aGF0IHRyZWF0bWVudHMgc3VjaCBhcyBtYXNzYWdlLCBzcGluYWwgbWFuaXB1bGF0aW9uLCBhbmQgYmlvZmVlZGJhY2sgZGlyZWN0ZWQgYXQgdGhlIG5lY2sgYXJlIHZhbHVhYmxlIGZvciBtYW5hZ2luZyBtdXNjbGUgY29udHJhY3Rpb24gaGVhZGFjaGVzLiBtb3JlIHRoYW4gOTAlIG9mIHN1Y2ggcHJvY2VkdXJlcyBhcmUgcGVyZm9ybWVkIGJ5IGNoaXJvcHJhY3RvcnMuIFRoZSBtdXNjbGUgZHVyYSBjb25uZWN0aW9uIG1heSByZXByZXNlbnQgYXQgbGVhc3QgaW4gcGFydCB0aGUgdW5kZXJseWluZyBhbmF0b21pYyBiYXNpcyBmb3IgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgdGhpcyB0cmVhdG1lbnQuIFN1Y2ggdHJlYXRtZW50LCBhcyBwZXJmb3JtZWQgYnkgYSBjaGlyb3ByYWN0b3IsIHdvdWxkIGRlY3JlYXNlIG11c2NsZSB0ZW5zaW9uIGFuZCB0aGVyZWJ5IHJlZHVjZSBvciBlbGltaW5hdGUgcGFpbiBieSByZWR1Y2luZyB0aGUgcG90ZW50aWFsIGZvcmNlcyBleGVydGVkIG9uIHRoZSBkdXJhIHZpYSB0aGUgbXVzY2xlIGR1cmEgY29ubmVjdGlvbi4gaXQgaXMsIGFzIHJlcG9ydGVkIGluIHRoZSAxOTk4IE1lZGljYWwgYW5kIEhlYWx0aCBBbm51YWwgcHVibGlzaGVkIGJ5IHRoZSBFbmN5Y2xvcGVkaWEgQnJpdGFubmljYS4gVGhlIGFuYXRvbWljYWwgYmFzaXMgZm9yIHRoZSBlZmZlY3RpdmVuZXNzIG9mIHRoZSBjaGlyb3ByYWN0aWMgYWRqdXN0bWVudCBmb3IgY2Vydmljb2dlbmljIGhlYWRhY2hlIGhhcyBiZWVuIGZvdW5kLgpJZiB5b3VyIGhlYXJ0IGF0dGFjayBodXJ0cywgY29uc2lkZXIgeW91cnNlbGYgbHVja3kuIApTYW1lIHdpdGggYXJtb3IuIEkgZW5kZWQgdXAgZGVhZCBtdWx0aXBsZSB0aW1lcyBiZWNhdXNlIEkgaGFkIGVpdGhlciBhIHdlYWsgYXJtb3IsIG9yIEkgZGlkbiBoYWQgZW5vdWdoIHN0cmVuZ3RoIHRvIHdlYXIgb25lLi4gCklmIHlvdSBjb21lIHdpdGggcHJvcG9zZWQgc29sdXRpb25zLCBpdCBjYW4gZ28gb3ZlciBhIGxvdCBiZXR0ZXIgdGhhbiBqdXN0IGNvbWluZyB3aXRoIG5lZ2F0aXZlcyBhbmQgbm8gc3VnZ2VzdGlvbnMgdG8gaW1wcm92ZS4uIApJbSBzdXJlIG1vc3QgbXVzaWNpYW5zIHdvdWxkbnQganVzdCBxdWl0IGNyZWF0aW5nIGFuZCBwZXJmb3JtaW5nIGlmIHRoZXkgY29tcGxldGVseSBzdG9wcGVkIGdldHRpbmcgcGFpZCBmb3IgaXQuIApUbyBwZXJtYW5lbnRseSBjbG9zZSB5b3VyIGFjY291bnQ6IC4uIApJIGFsc28gc3BlYWsgd2l0aCBhIGxvdCBvZiBteSBmcmllbmRzIGFuZCBhIGxvdCBvZiB0aGVtIGRvbid0IHdhbnQgdG8gb3duIGEgaG9tZSBhdCB0aGlzIHRpbWUuIApIZSBiZWdhbiBoaXMgY2FyZWVyIGFzIGEgY2xhc3Nyb29tIHRlYWNoZXIgYXQgSm9obiBNYWhvb2QgaW4gRWxtaXJhLCBhbmQgcmV0aXJlZCBhcyBwcmluY2lwYWwgb2YgQ291cnRsYW5kIEF2ZW51ZSBpbiBLaXRjaGVuZXIuIApUaGUganVyeSwgb3IganVkZ2UgaWYgdGhlIGRlZmVuZGFudCB3YWl2ZXMgaGlzIHJpZ2h0IHRvIGEganVyeSB0cmlhbCkuIFVuaXRlZCBTdGF0ZXMgdi4gRGF2aXMsIDg1NCBGLjNkIDEyNzYsIDEyOTMgKDExdGggQ2lyLiAKSGVsbCwgc29tZSBvZiB0aGVzZSAiTWVuc2EgbWVtYmVycyIgbWlnaHQgZXZlbiB3ZWFyIHNvbWUgImF1dGhlbnRpYyIgY3VsdHVyYWwgZ2FyYiAoV2FsbWFydCAgIG1hZGUgaW4gQ2hpbmEpIHRvIGFjY2VudHVhdGUgdGhlaXIgbHVuYWN5LiAKQSBmaXJlIGJyb29tIGlzIHVzZWQgdG8gaGVscCBjbGVhbiBhc2hlcyBmcm9tIHRoZSBncmF0ZSBhbmQgc2lkZXMgb2YgdGhlIGZpcmVwbGFjZSBhcyB3ZWxsIGFzIGhlbHBpbmcgdG8gc2Nvb3AgYXNoIGZyb20gdGhlIGJhc2Ugb2YgdGhlIGZpcmVwbGFjZSBpbnRvIHRoZSBhc2ggc2hvdmVsLiAKR29pbmcgb2xkIHNjaG9vbCBvbiB5b3VyIGZhdm9yaXRlIG51dCB2YXJpZXRpZXMsIGZvciBleGFtcGxlLCBjdXRzIHRob3NlIGxlY3RpbiBsZXZlbHMgZHJhbWF0aWNhbGx5Li4gClRoZXkgY2FsbCBoZWFkIG9mZmljZSwgbm8gcmVhc29uIHdoeSB0aGluZ3MgYXJlIHJlamVjdGVkLiBJIHByZXNzdXJlIHRoZW0gYSBiaXQgYW5kIHJlbWluZCB0aGVtIHRoYXQgSSBzcGVudCBhIHNtYWxsIGZvcnR1bmUgdy8gZW0sIG5vdGhpbmcuIEkgZXZlbiBvZmZlciB0byB1cGdyYWRlIG15IHBsYW4gdG8gdGhlIGxhdGVzdCBhbmQgZ3JlYXRlc3QgcGFja2V0IGhvZGFpIChjdXogSSB3YXMgc29ydGEgbGVhbmluZyB0b3dhcmRzIGl0IGFueXdheXMpLCBub3RoaW5nLkluIHRoZSBlbmQgdGhleSBtYWtlIG1lIHBheSBmb3IgbXkgcGhvbmUgb24gQ0MsIGRvIGV2ZXJ5dGhpbmcgSSBhc2tlZCwgYW5kIGZpbmlzaCB0aGUgdGFzay5Gb3IgdGhlIHJlY29yZCwgd2hlbiBJIHdlbnQgaW4gZm9yIG15IDYgPjcgdXBncmFkZSwgaXQgd2FzIGJhc2ljYWxseSBleGFjdGx5IHRoZSBzYW1lIHNjZW5hcmlvLCBhbmQgdGhlIHdob2xlIHByb2Nlc3MgdG9vayAyMCBtaW51dGVzIGFuZCBJIHdhcyBvdXQgdy8gbXkgbmV3IDcsIDYgdHJhZGVkIGluLCBhbmQgbGlmZSB3YXMgZ29vZC4gClRvIHBhcmFwaHJhc2UgdGhlIG9sZCBzYXcgYWJvdXQgc3Vja2VycyBhdCBhIHBva2VyIHRhYmxlOiBJZiB5b3UgY2FuIHNwb3QgdGhlIHNuZWFreSBnb3NzaXAgYXQgdGhlIG9mZmljZSwgaXQgcHJvYmFibHkgeW91LiBCdXQgeW91IHByb2JhYmx5IHNob3VsZG4gYmUgbG9va2luZyBmb3IgaGltIG9yIGhlciBhdCBhbGwuIFRoYXQgaXMsIHBlb3BsZSB3aG8gdHJ5IHRvIGZlcnJldCBvdXQgd29ya3BsYWNlIGVuZW1pZXMgYXJlIGxpa2VseSB0byBjcmVhdGUgc29tZSB0aGF0IGRpZG4gZXhpc3QgYmVmb3JlLCBhdCBsZWFzdCBpbiBwYXJ0IGJlY2F1c2UgdGhlaXIgb3duIGVhdmVzZHJvcHBpbmcsIHNub29waW5nIGFuZCBnb3NzaXBpbmcgc2V0cyBjb2xsZWFndWVzIHRvIHRhbGtpbmcgYWJvdXQgdGhlbS4gV29yc2UsIHRoZSBxdWFydGV0IGZpbmRpbmdzIHN1Z2dlc3QgdGhhdCB0aGlzIHZpY2lvdXMgY3ljbGUgbGVhZHMgdG8gc3VzcGljaW9uIGNvbmZpcm1pbmcgYmVoYXZpb3IgYmV5b25kIGdvc3NpcDsgaXQgbGlrZWx5IHRvIGxlYWQgY29sbGVhZ3VlcyB0byBhY3RpdmVseSByZWplY3QgdGhlaXIgcGFyYW5vaWQgcGVlcnMgd2hlbmV2ZXIgcG9zc2libGUgICBmb3IgZXhhbXBsZSwgYnkgYXZvaWRpbmcgb3Bwb3J0dW5pdGllcyB0byBjb2xsYWJvcmF0ZS4KSU1PIHlvdSBkb24ndCBuZWVkIHRvIGRvdWJ0IHlvdXJzZWxmIHNvIG11Y2ggaW4gdGhpcyByZWdhcmQuIApJbiB0aGF0IGJvb2ssIEVocmVucmVpY2ggdHJpZXMgdG8gZ2V0IGJ5IG9uIGEgV2FsIE1hcnQgc2FsYXJ5IChhbHRob3VnaCBzaGUga2luZGEgdHJpZXMgdG8gZGlzZ3Vpc2UgdGhlIGlkZW50aXR5IG9mIFdhbCBNYXJ0KSBhbmQgaXQgaXMsIG9mIGNvdXJzZSwgaW1wb3NzaWJsZSAgIGV2ZW4gd2l0aCBFaHJlbnJlaWNoICJjaGVhdGluZyIgYnkgaGF2aW5nIGEgY2FyIGFuZCBhIHdlZSBiaXQgb2Ygc2F2aW5ncy4uIApUbyBhbnlvbmUgZWxzZSB3aG8gaXMgZm9sbG93aW5nIHRoaXMgdGhyZWFkLCBhbmQgaGFzIGJlZW4gYSB2aWN0aW0gb2YgdGhpcyBndXkgb3IgYW55b25lIGVsc2UsIHJlZ2FyZGxlc3Mgb2Ygd2hhdCBzZXggdGhlIHBlcnBldHJhdG9yIGlzIG9yIHdoZXRoZXIgeW91IHJlcG9ydGVkIGl0LCBwbGVhc2Uga25vdyB0aGF0IHN1cHBvcnQgaXMgYXZhaWxhYmxlLiBGaXJzdCBvZmYsIGZyZWUgY291bnNlbGluZyBpcyBwcm92aWRlZCBieSBGcmFua2xpbiBDb3VudHkgdGhyb3VnaCBDVEFQICh0aGUgQ3JpbWUgYW5kIFRyYXVtYSBBc3Npc3RhbmNlIFByb2dyYW0pIHJ1biB0aHJvdWdoIE10LiBDYXJtZWwsIGFuZCBJIGNhbiB2b3VjaCB0aGF0IGl0IHdhcyBoZWxwZnVsIHRvIGRvIGl0LiBBbHRob3VnaCBJIHN1cmUgdGhpcyBmbHVjdHVhdGVzLCBJIHJlY29tbWVuZCBnZXR0aW5nIG9uIHRoZSB3YWl0aW5nIGxpc3Qgbm93LCBldmVuIGlmIHlvdSB1bmNlcnRhaW4gYXMgdG8gd2hldGhlciB5b3UgZm9sbG93IHRocm91Z2ggb3Igbm90LCBiZWNhdXNlIGl0IHRvb2sgc2l4IG9yIHNldmVuIG1vbnRocyB0byBnZXQgaW4uIEFsbCB0aGVpciB0aGVyYXBpc3RzIGFyZSB0cmFpbmVkIHNwZWNpZmljYWxseSBpbiBoZWxwaW5nIHBlb3BsZSByZWNvdmVyIGZyb20gY3JpbWUgYmFzZWQgdHJhdW1hLCBzbyB0aGV5IHNlZSBhIGxvdCBvZiBzZXh1YWwgYXNzYXVsdCB2aWN0aW1zLiBTZWNvbmRseSwgaWYgeW91IGRvIHJlcG9ydCwgeW91IGFsbG93ZWQgdG8gYWNjZXNzIGFuIGFkdm9jYXRlIHRocm91Z2ggdGhlIGNvdXJ0cyB0aGF0IGNhbiBoZWxwIHlvdSBuYXZpZ2F0ZSB0aGUgc3lzdGVtLCBhbmQgY2FuIGdpdmUgeW91IHNvbWUgaWRlYSBvZiB3aGF0IHRvIGV4cGVjdC4KR2xvYmFsIFBva2VyIGlzIGRldmVsb3BlZCwgb3duZWQgYW5kIG9wZXJhdGVkIGJ5IFZHVyBIb2xkaW5ncyBMaW1pdGVkLiBWR1cgaXMgYSBwdWJsaWMgY29tcGFueSBpbmNvcnBvcmF0ZWQgaW4gQXVzdHJhbGlhIGluIDIwMTAuCkZpcnN0IG9mZiwgbXkgZW50aXJlIHBvaW50IGFib3V0IGRlZ3JlZXMgc2VlbWVkIHRvIGdvIG92ZXIgeW91ciBoZWFkLiAKSXRzIGdvYWwgaXMgdG8gZ2V0IGEgYmlnZ2VyIHJvbGUgb24gdGhpcyBzb3J0IG9mIGZsaWdodHMgd2hpY2ggVHVya2lzaCBhaXJsaW5lcyBpcyBidWlsZGluZyBhbHNvIGl0cyByb3V0ZXMgb24gdGhpcyBwcmVtaXNlLiAKWW91IGFzc3VtZSBteSBicmFpbiBpcyBmYXVsdHkgYW5kIGNvbmRlc2NlbmQgbWUgYWxsIGluIHRoZSBwcm9jZXNzLiBJIGRpZCBub3QgdHJ5IHRvIGh1cnQgeW91ciBmZWVsaW5ncy4gSSBkaWQgbm90IHRyeSB0byBzb3VuZCBjbGV2ZXIuLiAKSWYgeW91J3JlIGxvb2tpbmcgZm9yIHNhdmVzOgpGcm9tIENhcHBhZG9jaWEgd2UgZHJvdmUgdG93YXJkcyB0aGUgTWVkaXRlcnJhbmVhbiBjb2FzdC4gCkE6IENsaWNrIHRoZSAiWCIgaW4gdGhlIHVwcGVyIHJpZ2h0IGNvcm5lciBvZiB0aGUgY29tbWVudCBib3guIApJdCBkb2VzIG5vdCBoYXZlIHRoZSBzYW5kYm94aW5nL2FjY2VzcyBjb250cm9sIHRoYXQgZmxhdHBhayBoYXMgYnV0IGlzIGl0IHJlYWxseSBhIGdvb2QgaWRlYSB0byBiaW5kIGFjY2Vzcy9wZXJtaXNzaW9uIGNvbmZpZ3VyYXRpb24gd2l0aCBhIHBhY2thZ2UgbWFuYWdlcj8gLiAKRHVlIHRvIGlycml0YXRpb24sIHRoZSBzb2Z0IHRpc3N1ZSBpbiB0aGUgcGFsZXR0ZSBzcGFzbXMgYW5kIGNhdXNlcyBkaXNjb21mb3J0IGluIGJyZWF0aGluZy4gClNtb2tpbkdlb1JvY2tzICAwIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KVGhlIEtlbGx5IENyaXRlcmlvbiwgYXMgYXBwbGllZCB0byBwb2tlciBvbiBhIHZlcnkgYmFzaWMgbGV2ZWwsIGlzIGFib3V0IGtlZXBpbmcgeW91ciB3YWdlcmluZyBwcm9wb3J0aW9uYWwgdG8gdGhlIHBvdGVudGlhbCByYW5nZSBvZiBoYW5kcyB5b3UgZmFjZS4gWW91IGNhbiBhcHBseSB0aGF0IGNvbmNlcHQgdG8gcmFrZSwgYXMgd2VsbC4uIApHYXRlcyBmcmllbmQsIHRyYWN0b3Igb3duZXIgYW5kIGNvdW50cnkgbXVzaWMgc2luZ2VyIFNhbGx5IEdvZXJuZXIsIHdobyBhbHNvIHByb3ZpZGVkIGVudGVydGFpbm1lbnQgZm9yIHRoZSBkYXksIGFsc28gbGVudCBhIGhhbmQgaW4gcmVzdG9yYXRpb25zLiBBIDE5NDkgSm9obiBEZWVyZSBEIDIgY3lsaW5kZXIgd2l0aCAzMC44IGRyYXdiYXIgaG9yc2Vwb3dlciwgMzguClNvLCBpZiB5b3UgZ29pbmcgdG8gYmUgaGlraW5nLCB0aGVyZSByZWFsbHkgbm8gd2F5IGFyb3VuZCB0YWtpbmcgdGhlIGhpa2luZyBib290cyAodW5sZXNzIHlvdSBoYXZlIGFuZCBhcmUgY29tZm9ydGFibGUgaW4gaGlraW5nIHNhbmRhbHMsIGJ1dCBpdCBub3QgbGlrZSB0aG9zZSByZWFsbHkgbG9vayBncmVhdCB3aXRoIGFueXRoaW5nIGVsc2UgYW55d2F5KS4gVGhvc2UgYXJlIHByb2JhYmx5IHRoZSBidWxraWVzdCAiZXh0cmEiIHlvdSBuZWVkLiBQYWdlIHRocm91Z2ggdGhlIGJvb2tzIGJlZm9yZSB5b3UgZ28gYW5kIGVpdGhlciByaXAgb3V0IHRoZSBwYWdlcyBmb3IgdGhlIGhpa2VzIHlvdSB3YW50IHRvIGRvIG9yIG1ha2UgcGhvdG9jb3BpZXMgc28geW91IGRvbiBoYXZlIHRvIGJyaW5nIHRoZSBlbnRpcmUgYm9vay4gQWN0aXZlIHdlYXIgdXN1YWxseSBoYXMgdGhlIGFkdmFudGFnZSBvZiBiZWluZyBxdWljayBkcnlpbmcsIHNvIHlvdSBtYXkgYmUgYWJsZSB0byBnZXQgYXdheSB3aXRoIGp1c3Qgb25lICJoaWtpbmciIG91dGZpdCB0aGF0IHlvdSBjYW4gaGFuZCB3YXNoIGFuZCBsaW5lIGRyeSwgd2hpY2ggd2lsbCBmcmVlIHVwIHNvbWUgc3BhY2UuCjIwLCAyMDA4IEFsdmluIExhbmdkb24gQ29idXJuOiBXYXBwaW5nLCAxOTA0LiBMb3Vpcy4gClRoZSBFYXJ0aCBpcyBvcmJpdGluZyB0aGUgc3VuLiBPdXIgd2hvbGUgU29sYXIgc3lzdGVtIGlzIG9yYml0aW5nIHRoZSBnYWxhY3RpYyBjb3JlLiAKVGhlIGVhcmx5IGNhcGl0YWxpc3RzIHB1cmNoYXNlZCBtYWNoaW5lcyBhbmQgaGFkIGZhY3RvcmllcyBidWlsdCB1c2luZyB3ZWFsdGggdGhleSBoYWQgYWNxdWlyZWQgZnJvbSBsYW5kIG93bmVyc2hpcC4gCk9oIHllYWggaXQgd2FzIGludGVyZXN0aW5nIHRvIHNlZSB3aGF0IHRoZXkgbGVmdCBvdXQuIE9uZSBvZiB0aGUgcmVhc29ucyBJIGhhdmVuIGdvbmUgaW4gZGVwdGggaW4gcmVzZWFyY2hpbmcgdGhpcyBncm91cCBpbiBteSBmYW1pbHkgdHJlZSBpcyB0aGF0IHRoZXJlIHNlZW1zIHRvIGJlIGEgZmFpciBhbW91bnQgb2YgaW5icmVlZGluZyAoMXN0IGNvdXNpbnMgbWFycmllZCBlYWNoIG90aGVyIGEgbG90IGFuZCB0aGVuIHRoZWlyIGtpZHMgbWFycmllZCAxc3QgY291c2lucyBhcyB3ZWxsLCB0aGVyZSB0aGUgcG9zc2liaWxpdHkgb2YgYW4gdW5jbGUvbmllY2UgcmVsYXRpb25zaGlwIHRvbykgYW5kIEkganVzdCB3YW50IHRvIHJlYWNoIGEgZ29vZCBzdG9wcGluZyBwb2ludCBvbiBteSBtYXRlcm5hbCBncmFuZGZhdGhlciBzaWRlIGJlZm9yZSBJIGdldCB0YW5nbGVkIHVwIGluIHRoYXQgbWVzc3kgYmFsbCBvZiBzdHJpbmcgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgdGhhdCBtZXNzLiBJIGdldCBpdCwgTmFudHVja2V0IGlzIGFuIGlzbGFuZCBhbmQgYXQgZmlyc3Qgb25seSA5IGZhbWlsaWVzIHNldHRsZWQgdGhlcmUgLiAKWW91IG1heSBoYXZlIHRvIGN1dCBoaW0gZnJvbSBmYW1pbHkgYWN0aXZpdGllcy4gSG9uZXN0bHksIEkgd291bGQuIEJlbmRpbmcgdG8gaGlzIHJlcXVlc3RzIGZlZWRzIGhpcyBzZW5zZSBvZiAicmlnaHRuZXNzLiIgQnV0LCBJIGhvcGUgeW91IGNhbiBmaW5kIGl0IGluIHlvdXIgaGVhcnQgbm90IHRvIHJlc2VudCBoaW0uIEhlIGFwcGVhcnMgdG8gaGF2ZSBhIG1lbnRhbCBpbGxuZXNzLgpGaXJzdCBvZmYsIHRoZSB0cmFkaXRpb25hbCBzaGlwIHdlIHRoaW5rIG9mIHdoZW4gd2UgdGhpbmsgb2YgIlZpa2luZ3MiIGlzIG1vc3QgbGlrZWx5IGEgbG9uZ3NoaXAsIHRoZSBtb3N0IGZhbW91cyBleGFtcGxlIG9mIHdoaWNoIGlzIHByZXNlcnZlZCBhdCB0aGUgVmlraW5nIFNoaXAgTXVzZXVtIGluIE5vcndheS4gCjYuIE1BTkRBVE9SWSBBTkQgQVVUT01BVElDIHdob2xlIGxpZmUgc2VudGVuY2VzIGZvciBvbmxpbmUgcmFjaXN0IHR3aXR0ZXJzIFRoZWlyIHdvcmRzLCBub3QgbWluZS4KSSd2ZSBrbm93biBGcmVkIGFzIGxvbmcgYXMgSSBoYXZlIGtub3duIGFsbCBvZiB5b3UuIEhlIHdhcyBhIGdvb2QgbWFuIGFuZCBJIGxpa2VkIGhpbS4gCk5vIGVtcGF0aHkgZnJvbSB0aGVtIGJlY2F1c2UgbG90cyBvZiBwZW9wbGUgYmVsaWV2ZSBibGluZGx5IGluIHRoZSBuYXJyYXRpdmUgb2YgcGFyZW50cyBhcmUgbm90IHBlcmZlY3QgYnV0IGluaGVyZW50bHkgYWx3YXlzIGxvdmUgdGhlaXIga2lkcy4gVGhhdCBub3QgYWx3YXlzIHRoZSBjYXNlLCBhbmQganVzdCBiZWNhdXNlIHRoZXkgaGF2ZW4gZXhwZXJpZW5jZWQgaXQgZG9lc24gZ2l2ZSB0aGVtIHRoZSByaWdodCB0byBiZXJhdGUgeW91IGZvciBzb21ldGhpbmcgdGhleSBkb24gdW5kZXJzdGFuZC4gWW91IGFyZSBkb2luZyB0aGUgcmlnaHQgdGhpbmcgZm9yIHlvdSBhbmQgZW5mb3JjaW5nIGJvdW5kYXJpZXMuLiAKT2YgY291cnNlLCBuZXZlciB1bmRlcmVzdGltYXRlIHRoZSBsb29rIG9mIHRoZSB0YWxsIGFjcnlsaWMgY2FycnlpbmcgY2FzZXMuIElmIHlvdSBhcmUgc29tZW9uZSB3aG8gaGFzIG5vdGhpbmcgdG8gaGlkZSwgbG9vayBpbnRvIGFuIGFjcnlsaWMgY2FycnlpbmcgY2FzZSB0aGF0IHdpbGwgaG9sZCAxMDAwIGNoaXBzIHNvdW5kbHkgYW5kIHNlY3VyZWx5LiBUaGUgZHVyYWJsZSBhY3J5bGljIHdhbGxzIHdpbGwga2VlcCB5b3VyIGhpZ2ggcXVhbGl0eSBjaGlwcyBzYWZlIGFuZCB0aGUgdGhpY2sgcm91bmQgaGFuZGxlIGlzIGdvaW5nIHRvIGJlIG11Y2ggZWFzaWVyIHRvIGNhcnJ5LiBDb25zaWRlciBob3cgd2VsbCB0aGlzIGNhc2Ugd2lsbCBsb29rIGluIHlvdXIgZ2FtZSByb29tIGFuZCBtYWtlIHN1cmUgdGhhdCB5b3UgY29uc2lkZXIgd2hhdCB5b3VyIG9wdGlvbnMgYXJlIGdvaW5nIHRvIGJlIHdoZW4gaXQgY29tZXMgdG8gbG9va2luZyBpbnRvIHdoYXQgYmVsb25ncyBpbiBwb2tlciBzZXQuCkJ5IHRoZSB0aW1lIHRoZSBiYWJ5IGJhZGdlciBpcyBiZXR3ZWVuIDEyICAgMTMgd2Vla3MsIG1pbGsgZmVlZGluZyBzaG91bGQgYmUgZG93biB0byB0d28gdGltZXMgYSBkYXkgdW50aWwgaXQgY2FuIGJlIHN0b3BwZWQgdG90YWxseS4gRGVwZW5kaW5nIG9uIHRoZSB3ZWFuaW5nIHByb2dyZXNzLCBzaGlmdGluZyBmcm9tIG1pbGsgYW5kIHNvZnQgZm9vZHMgdG8gbWluY2VkIG1lYXQsIGRlYWQgbWljZSBhbmQgY2hpY2tzIHdpbGwgaGFwcGVuIGJldHdlZW4gdGhlIDEwdGggdG8gMTR0aCB3ZWVrcy4uIApBbiB1bnBvcHVsYXIgb2JzZXJ2YXRpb24sIHBlcmhhcHMsIGJ1dCBpdCB3YXMgYW4gb2J2aW91cyB0dXJuaW5nIHBvaW50LiBXb3VsZCBBZGFtcyBoYXZlIHByb3RlY3RlZCBhIGxvbmcgdGVybSBvY2N1cGF0aW9uIGJ5IHNvY2lhbCBjb25zZXJ2YXRpdmUgZ3JvdXBzPyBBbiBhbnRpIGdheSByaWdodHMgZW5jYW1wbWVudCwgZm9yIGV4YW1wbGUsIHRoYXQgY2xhaW1lZCBhIGZyZWUgc3BlZWNoIGJhc2lzIGZvciBsaXZpbmcgYW5kIHBvb3BpbmcgaW4gcHVibGljIHBhcmtzPyBNZXRoaW5rcyBub3QuIFdvcnN0IG1heW9yIGV2ZXIuLiAKSW50ZXJuYXRpb25hbCBXb21lbidzIERheSBpcyBhbHNvIGFuIG9wcG9ydHVuaXR5IHRvIGNvbnNpZGVyIGhvdyB0byBhY2NlbGVyYXRlIHRoZSAyMDMwIEFnZW5kYSwgYnVpbGRpbmcgbW9tZW50dW0gZm9yIHRoZSBlZmZlY3RpdmUgaW1wbGVtZW50YXRpb24gb2YgdGhlIFN1c3RhaW5hYmxlIERldmVsb3BtZW50IEdvYWxzLCBlc3BlY2lhbGx5IGdvYWxzIG51bWJlciA1IGFuZCBudW1iZXIgNC5VTiBFbnZpcm9ubWVudCByZWxlYXNlcyAyMDE4IEFubnVhbCBSZXBvcnRVTiBFbnZpcm9ubWVudHJlbGVhc2VkIGl0cyAyMDE4IEFubnVhbCBSZXBvcnQ6IHB1dHRpbmcgdGhlIGVudmlyb25tZW50IGF0IHRoZSBoZWFydCBvZiBwZW9wbGUncyBsaXZlcywgaGlnaGxpZ2h0aW5nIHRoZSBvcmdhbml6YXRpb24ncyB3b3JrIG9uIGlzc3VlcyBmcm9tIGZpZ2h0aW5nIHBvbGx1dGlvbiBvZiB0aGUgYWlyIGFuZCBzZWEgdG8gaGVscGluZyBuYXRpb25zIG1lZXQgdGhlaXIgZ29hbHMgb2YgcmVkdWNpbmcgZ3JlZW5ob3VzZSBnYXMgZW1pc3Npb25zLiBUaGUgcmVwb3J0LCByZWxlYXNlZCBhaGVhZCBvZiBNYXJjaCAyMDE5J3MgVU4gRW52aXJvbm1lbnQgQXNzZW1ibHksIHNob3dzIHRoYXQgdGhlIHBhY2Ugb2YgYWN0aW9uIG9uIG1hbnkgaW50ZXJsaW5rZWQgZW52aXJvbm1lbnRhbCBpc3N1ZXMgaXMgYWNjZWxlcmF0aW5nLiAKSSBvbmx5IGxpa2UgbWluZSBydWJiZWQgaW4gYSBnZW50bGUgY2lyY2xlIG1vdGlvbiBvciBzaWRlIHRvIHNpZGUsIGdldHRpbmcgZ3JhZHVhbGx5IGZhc3Rlci4gCkhpIEpvblJlZGNvcm44NjIuIFRoYW5rIHlvdSBmb3IgcGFydGljaXBhdGluZyBpbiAvci9Qb2xpdGljcy4gSG93ZXZlciwgeW91ciBzdWJtaXNzaW9uIGhhcyBiZWVuIHJlbW92ZWQgZm9yIHRoZSBmb2xsb3dpbmcgcmVhc29uKHMpOgpJIGRpZCBub3QgbWFrZSBpdCB0byB0aGUgYnJlYWssIGJ1dCBJIGR1bHkgdG9vayBteSAxMiB0byBhIGJsYWNramFjayB0YWJsZS4gRGlkbid0IGV2ZW4gYm90aGVyIHRha2luZyBhIHNlYXQsIGp1c3QgZHVtcGVkIG15IDEyIG9uIGFuIGVtcHR5IGJveCBleHBlY3RpbmcgdG8gbG9zZSBpdC4gRGVhbGVyIHNheXMgdGhhdCBteSAxIGNoaXBzIGRvbid0IHBsYXksIHdoYXRldmVyLCBJIGxlZnQgdGhlIDEwIHRoZXJlLiAKTm93LCB0aGUgdGhpbmcgYWJvdXQgaGlzIGtpZCBiZWluZyBkYW5nbGVkLiBUaGF0IHVuZGVyc3RhbmRhYmxlIGlnbm9yYW5jZS4gVGhlIGtpZCB3YXMgbmV2ZXIgaW4gZGFuZ2VyLiBDcm9jcyBhcmVuIHRpZ2VycywgYW5kIHdoaWxzdCBkYW5nZXJvdXMsIHdpdGggcmVzcGVjdCBhbmQgZXhwZXJpZW5jZSB5b3UgY2FuIGJlIHZlcnkgY2xvc2UgdG8gdGhlbSB3aXRob3V0IHJpc2suIEkgdXNlZCB0byB3YWxrIGludG8gZW5jbG9zdXJlcyB3aXRoIGh1bmRyZWRzIG9mIGNyb2NzLCBudWRnZSB0aGVtIGF3YXkgd2l0aCBzdGlja3MuIFdhcyBpdCBhIHNpbGx5IHRoaW5nIHRvIGRvIGFyb3VuZCBjYW1lcmFzLiBNYXliZSwgYnV0IHRoZSBraWQgd2FudCBhdCByaXNrLgpJbXByb3ZlZCBib2R5IGF3YXJlbmVzcyAgIFNwb3J0cyBtYXNzYWdlIGhlbHBzIHRvIGltcHJvdmUgYW4gYXRobGV0ZSdzIG5lcnZvdXMgc3lzdGVtIGZ1bmN0aW9uLiBUaGlzIGFsbG93cyB0aGVtIHRvIGhhdmUgYmV0dGVyIGF3YXJlbmVzcyBvZiB0aGVpciBib2R5LiAKV2hlbiB5b3Ugd2FudCB0byBnZXQgdGhlIHJlYWwgcG9rZXIgZXhwZXJpZW5jZSwgdGFrZSBhIG1vbWVudCB0byB0aGluayBhYm91dCBob3cgeW91IGNhbiBnZXQgdGhlIHBva2VyIGZlbHQgdG9wIHRoYXQgaXMgcmlnaHQgZm9yIHlvdS4gVGhlcmUgYXJlIHNvIG1hbnkgZ3JlYXQgY2hvaWNlcyBpbiBmcm9udCBvZiB5b3UgdGhhdCBpdCBpcyBnb2luZyB0byBiZSBjb21wbGV0ZWx5IHBvc3NpYmxlIHRvIGdldCB0aGUgdGFibGUgeW91IHdhbnQsIHNvIGxvb2sgYXJvdW5kIGZvciB0aGUgb25lIHRoYXQgaXMgcmlnaHQgZm9yIHlvdSEKVGhlIGNhbmRpZGF0ZSBmcm9tIHRoZSB0aW55IFNvY2lhbCBhbmQgTGliZXJhbCBQYXJ0eSBtYWRlIHNhdnZ5IHVzZSBvZiBUd2l0dGVyIGFuZCBGYWNlYm9vayB0byBzcHJlYWQgaGlzIG1lc3NhZ2UgdGhhdCBvbmx5IGhlIGNvdWxkIGVuZCB0aGUgY29ycnVwdGlvbiwgY3JpbWUgYW5kIGVjb25vbWljIG1hbGFpc2UgdGhhdCBoYXMgc2VpemVkIEJyYXppbCBpbiByZWNlbnQgeWVhcnMgICBhbmQgYnJpbmcgYmFjayB0aGUgZ29vZCBvbGQgZGF5cyBhbmQgdHJhZGl0aW9uYWwgdmFsdWVzLi4gCk9yLCBzaG91bGQgeW91IGZvciBzb21lIHJlYXNvbiBiZSBoZXJlIGZvciBtb3JlIHRoYW4gb25lIHRoaW5nLCB0aGVyZSBpcyBhIHN1c2hpIHJlc3RhdXJhbnQgdG8gdGhlIHJpZ2h0IG9mIHRoZSBnaXJscy4uIApUaGUgaW5zZXJ0aW9uIGlzIHF1aWNrIGFuZCBwYWlubGVzcywgaXQncyB0aGUgbnVtYmluZyBzaG90IHRoYXQncyB0aGUgd29yc3QuIEl0J3MgbGlrZSBhIHJlYWwgYmlnIGVsb25nYXRlZCBwaW5jaCBhbmQgdGhlbiB0aGV5IHdhaXQgbGlrZSBhIG1pbnV0ZSBmb3IgdGhlIHBhcnQgb2YgeW91IGFybSB0byBudW1iIGFuZCB0aGVuIHRoZSBOZXhwbGFub24gZ29lcyBpbi4gVGhleSB1c2UgdGhpcyBpbnNlcnRpbmcgZGV2aWNlIHRoYXQgY29tZXMgd2l0aCB0aGUgaW1wbGFudCB0byBlbnN1cmUgaXQgbWFrZXMgaXQgZnVsbHkgaW50byB5b3VyIGFybS4gClRoZW4gd2UgZm91bmQgb3V0IHRoYXQgdGhlaXIgcGFyZW50cyBzb2xkIGFsbCBvZiBpdCBmb3IgZHJ1Z3MuIFNvIG15IGNvdXNpbiBtb20gKG15IGF1bnQpIHRvb2sgdGhlbSB0byBjb3VydCB0byBnZXQgY3VzdG9keSBvZiB0aGUga2lkcyBhbmQgbXkgcGFyZW50cyBwYWlkIGZvciBldmVyeXRoaW5nLiBDb3VydCBkYXRlIGNhbWUgYW5kIHRoZSBkcnVnIGFkZGljdCBwYXJlbnRzIGRpZG4gZXZlbiBzaG93IHVwLiAKSW0gWmltbWVyIGhhdCBlcyBnZWZobHRlIDcwIEdyYWQgdW5kIGljaCBrb21tZSBrYXVtIG5hY2ggbWlyIGRlbiBTY2h3ZWkgdm9uIGRlciBTdGlybiB6dSB3aXNjaGVuLiAKQmlub21pYWwgcHJvYmFiaWxpdHkgaXMgdXNpbmcgdGhlIHJlcGVhdGluZyAobXVsdGlwbHlpbmcpIGNoYW5jZXMgb2YgaW5kZXBlbmRlbnQgZXZlbnRzICAgdGhlIGdlbmRlciBvZiB0aGUgZmlyc3QgY2hpbGQgaGFzIG5vIGJlYXJpbmcgb24gdGhlIGdlbmRlciBvZiB0aGUgc2Vjb25kLiBUaGUgcHJvYmFiaWxpdHkgb2YgdGhlIHNlY29uZCBjaGlsZCBiZWluZyBhIGdpcmwgaXMgZXhhY3RseSB0aGUgc2FtZSBhcyB0aGUgcHJvYmFiaWxpdHkgdGhlIGZpcnN0IG9uZSB3YXMuIFRoZSBjaGFuY2VzIG9mIGJvdGggY2hpbGRyZW4gYmVpbmcgZ2lybHMgaXMgdGhlIHByb2R1Y3Qgb2YgdGhlIHR3byBpbmRpdmlkdWFsIHByb2JhYmlsaXRpZXMgICAwLjUgIDAuNSA9IDAuMjUuSXQgd2lsbCBoZWxwIHRvIGRyYXcgb3V0IGEgYmluYXJ5IHRyZWUgZGlhZ3JhbSBzaG93aW5nIHRoZSBwb3NzaWJsZSBvdXRjb21lcyBvZiBlYWNoIHN1Y2Nlc3NpdmUgYmlydGggdG8gc29sdmUgdGhpcyBwcm9ibGVtIGFuZCBzZWUgaG93IG1hbnkgcG9zc2libGUgb3V0Y29tZXMgcmVzdWx0IGluIGF0IG1vc3QgMiBib3lzLiBZb3Uga25vdyB0aGF0IGFueSBpbmRlcGVuZGVudCBiaXJ0aCBoYXMgYSA1MC81MCBjaGFuY2Ugb2YgYmVpbmcgZWl0aGVyICAgc28gZm9yIGV4YW1wbGUsIHRoZXJlIGEgMC41IGNoYW5jZSB0aGF0IHRoZSBmaXJzdCBjaGlsZCBpcyBhIGdpcmwsIGFuZCB3ZSBjYWxjdWxhdGVkIGluIHRoZSBwcmV2aW91cyBleGFtcGxlIHRoYXQgdGhlIGNoYW5jZSBvZiB0d28gc3VjY2Vzc2l2ZSBjaGlsZHJlbiBiZWluZyBnaXJscyBpcyAwLjI1LiBUaGUgY2hhbmNlIHRoYXQgYWxsIDMgYXJlIGdpcmxzIGlzIDAuNSAgMC4yNSA9IDAuMTI1IDQxNSBwb2ludHMgIHN1Ym1pdHRlZCAyNCBkYXlzIGFnb1NvcnJ5LCBidXQgSSBnb2luZyB0byB0cnVzdCB0aGUgQW1lcmljYW4gRmFybSBCdXJlYXUgRmVkZXJhdGlvbiBvdmVyIHlvdTsgd2hpY2ggY2l0ZXMgYSAyMDExIGFydGljbGUgKGxpbmsgYXQgdGhlIGVuZCkgc2F5aW5nIHRoZSB0b3RhbCB3YXRlciB1c2UgcGVyIHBvdW5kIG9mIGJlZWYgaXMgNDQxIGdhbGxvbnMgcGVyIHBvdW5kIGluIHRoZSBVUy4gVGhleSBpbmNsdWRlIGluIG9uIHRoaXMgdGhlIGFtb3VudCBvZiB3YXRlciB1c2VkIGZvciBjcm9wcywgZmVlZGluZywgZGFpcnkgZm9yIHlvdW5nIGNhdHRsZSwgYW5kIG1hY2hpbmVyeSB1c2VkIGluIHRoZSBwcm9jZXNzLnlvdXIgMiBnYWxsb25zL21pbnV0ZSwgdGhhdCBhbW91bnRzIHRvIGFib3V0IDIyMCBtaW51dGVzLCBvciBhYm91dCA0IGhvdXJzIG9mIHNob3dlcmluZy4gSWYgeW91IHRha2UgbmF2eSBzaG93ZXJzICg5MCBzZWNvbmRzIG9mIHdhdGVyIHVzZSksIHRoYXQgYWJvdXQgMTYwIGRheXMgb2Ygc2hvd2VyaW5nLCBvciBhYm91dCBhIGhhbGYgeWVhci5FZGl0OiBQZW9wbGUgYXJlIHJlbWluZGluZyBtZSB0aGF0IG1vc3QgYnVyZ2VycyBhcmVuIGEgcG91bmQsIHRoZXkgYSBxdWFydGVyIHBvdW5kLCB3aGljaCBicmluZ3MgaXQgZG93biB0byAxMTAgZ2FsbG9ucywgb3IgNTUgbWludXRlcy4gU3RpbGwgbW9yZSB0aGFuIE9QLCBidXQgbm90IG5lYXJseSBhcyBtdWNoLgpCdXQgd291bGQgbmV2ZXIgYnV5IGZvciBoaW1zZWxmCkRPV05MT0FEIE9QVElPTlMuIDIyIE1hciAyMDA3ICAgMiBtaW4gICBVcGxvYWRlZCBieSBEaWdpdGFsSW5zb21uaWFCZXR0ZXIgTHVjayBUb21vcnJvdy4gCkhhdmluZyBoYWQgYSBzbGVldmUgYXMgd2VsbCBkaWQgdGhleSBjaGVjayB5b3VyIHRoaWFtaW4/IEkgaGlnaGx5IHN1Z2dlc3QgeW91IGdldCBhIGZ1bGwgbGFiIHdvcmsgdXAgdG8gbG9vayBhdCB5b3VyIHZpdGFtaW4gYW5kIG1pbmVyYWwgbGV2ZWxzLiBJIHdhcyBkaWFnbm9zZWQgd2l0aCBiZXJpYmVyaSBhZnRlciBoYXZpbmcgdGhlIHNsZWV2ZSBhbmQgaGF2ZSB0byB0YWtlIEIxIG5vdy4gVGhlIGhpZ2ggcG90ZW50Y3kgbXVsdGl2aXRhbWlucyB3ZXJlbid0IGVub3VnaC4gCkRvbmF0ZSBZb3VyIENhciBvciBPdGhlciBWZWhpY2xlIHRvIE1QUldoZW4geW91IGRvbmF0ZSBhIHZlaGljbGUgdG8gYmVuZWZpdCBNaW5uZXNvdGEgUHVibGljIFJhZGlvLCB5b3UgYWN0dWFsbHkgdHVybiB5b3VyIGNhciBpbnRvIHRoZSBuZXdzIHlvdSBkZXBlbmQgb24gYW5kIHRoZSBtdXNpYyB5b3UgbG92ZS4gRXZlcnl0aGluZyB5b3UgaGVhciBvbiBNUFIgTmV3cywgQ2xhc3NpY2FsIE1QUiBhbmQgVGhlIEN1cnJlbnQgaXMgb25seSBwb3NzaWJsZSBiZWNhdXNlIG9mIHN1cHBvcnRlcnMgbGlrZSB5b3UgICB5b3VyIGdpZnQgbWFrZXMgYSBkaWZmZXJlbmNlIGF0IE1QUi5Eb25hdGUgYSB2ZWhpY2xlLCBiZWNvbWUgYSBNZW1iZXJJbiBhZGRpdGlvbiB0byBzdXBwb3J0aW5nIHRoZSBwcm9ncmFtcyB5b3UgbG92ZSwgeW91ciB2ZWhpY2xlIGRvbmF0aW9uIHdpbGwgbWFrZSB5b3UgYSBNZW1iZXIgb2YgTVBSLiBZb3VyIHZlaGljbGUgaXMgdG93ZWQgZnJlZSBvZiBjaGFyZ2UsIGFuZCB0aGUgZG9uYXRpb24gaXMgZWxpZ2libGUgZm9yIGEgdGF4IGRlZHVjdGlvbi5Eb25hdGluZyB5b3VyIGNhciB0byBNUFIgaXMgZWFzeSFEb25hdGluZyBhIGNhciBpcyBmYXN0LCBlYXN5IGFuZCBzZWN1cmUuIApGb3Igc3VyZSwgS2VubnkgZGVmaW5pdGVseSBkb2VzIGRvIHRoaW5ncyBsaWtlIHRoYXQgdG9vIGJ1dCBpdCBub3QgYXMgY29uc2lzdGVudCBhcyBJIGxpa2UgaXQgdG8gYmUgYW5kIGhlIGRlZmluaXRlbHkgb3ZlcnNlbGxzIGEgbG90IG9mIG1vdmVzIGJ1dCB0aGF0IHJlYWxseSBtb3JlIGhpcyBzdHlsZSByYXRoZXIgdGhhbiBhIHJlYWwgZmxhdy4gClBsYXllcnMgd2lsbCBmaXJzdCByb2xsIHRoZSBkaWNlIHRvIGRldGVybWluZSB3aG8gd2lsbCByb2xsIGZvciB0aGF0IHBhcnRpY3VsYXIgZ2FtZSwgYW5kIHRoZW4gYWxsIHRoZSBwYXJ0aWNpcGFudHMgd2lsbCBwbGFjZSBiZXRzIG9uIHdoZXRoZXIgb3Igbm90IHRoZSBwZXJzb24gcm9sbGluZyB3aWxsICJwYXNzIiBvbiB0aGUgZmlyc3Qgcm9sbCAoYnkgcm9sbGluZyBhIDcgb3IgMTEpLCBvciAiY3JhcCBvdXQiIChieSByb2xsaW5nIGEgMiwgMywgb3IgYSAxMikuWzJdIElmIG9uZSBvZiB0aG9zZSB2YWx1ZXMgaXMgcmVhY2hlZCBvbiB0aGUgZmlyc3Qgcm9sbCwgdGhlIGdhbWUgaXMgb3ZlciBhbmQgdGhlIGJldHMgYXJlIGRpc3RyaWJ1dGVkIGFjY29yZGluZ2x5LgpUaGUgaW1hZ2Ugb2YgTkJBIGxlZ2VuZCBTaGFxdWlsbGUgTyB0b2VzLCBhcyBoZSByZWNlaXZlZCBhIHBlZGljdXJlIGluIDIwMTcsIHNob3VsZCBoYXZlIGNvbWUgd2l0aCBhIE5TRlcgd2FybmluZy4gSW4gMjAxNCwgZm9ybWVyIHNsYW0gZHVuayBjaGFtcGlvbiBOYXRlIFJvYmluc29uIGJhcmVkIGhpcyBzb3VsLCBhbmQgaGlzIGxpdHRsZSBwaWdnaWVzLCBhcyBoZSBwb3N0ZWQgYSBwaWN0dXJlIG9mIGhpbXNlbGYgb24gSW5zdGFncmFtIGF0IGEgbmFpbCBzaG9wIHdpdGggdGhlIGhhc2h0YWcgdGVhbVVnbHlGZWV0LiAKU2VuLiBKb2huIE1jQ2FpbiAoUiBBWikgaG9sZHMgdXAgaGlzIHNtYXJ0IHBob25lIHRvIHNob3cgaGUgaXMgbm90IHBsYXlpbmcgcG9rZXIgYmVmb3JlIHRoZSBTZW5hdGUgRm9yZWlnbiBSZWxhdGlvbnMgQ29tbWl0dGVlIHZvdGUgb24gYSByZXNvbHV0aW9uIG9uIFN5cmlhIG9uIENhcGl0b2wgSGlsbCBTZXB0ZW1iZXIgNCwgMjAxMyBpbiBXYXNoaW5ndG9uLCBEQy4gU2VuLiBKb2huIE1jQ2FpbiAoUiBOVikuIFNlbi4gQ2FwaXRvbCBvbiBTZXB0ZW1iZXIgNCwgMjAxMyBpbiBXYXNoaW5ndG9uLCBEQy4gCldoZW4gSSB0cmllZCB0byBhc2sgaGVyIGFib3V0IGdpdmluZyBtZSBhIGJsb3dqb2Igd2l0aG91dCBhIGNvbmRvbSwgc2hlIHdhcyBub3QgaGF2aW5nIGl0LiBJIHRob3VnaHQgc2VlaW5nIGhlciBhIHNlY29uZCB0aW1lIHdvdWxkIGhlbHAuIApUaGUgY2x1YiBmb3IgdGhlIGZpcnN0IGZldyB5ZWFycyBvZiB0aGVpciBleGlzdGVuY2UgcGxheWVkIGluIHRoZSBDaGlsdGVybiBEaXN0cmljdCBGb290YmFsbCBMZWFndWUsIHRoZW4gbW92ZWQgdG8gdGhlIE8gaW4gMTk0Ny4gRm9yIGEgc2hvcnQgdGltZSBpbiB0aGUgZWFybHkgMTk1MHMgdGhleSBhbHNvIHBsYXllZCBhIHJlc2VydmVzIHRlYW0gaW4gdGhlIEh1bWUgRm9vdGJhbGwgTGVhZ3VlLiBCdW50b24gUGFyayB3YXMgZXN0YWJsaXNoZWQgZHVyaW5nIHRoZSBwb3N0IFdvcmxkIFdhciBJSSBwZXJpb2QgaW4gYW4gYXJlYSB0aGF0IHdhcyBxdWlja2x5IGJlY29taW5nIGVzdGFibGlzaGVkIHdpdGggaG91c2luZy4gCklmIHNoZSBzYXlzIHNoZSBhIGRvbWluYW50LCBzaGUgaGF2ZSBsYXp5IHN1YnMgZmxvb2RpbmcgaGVyIGluYm94LiBOb3csIHRoZXNlIGd1eXMgYXJlbiBsYXp5IGluIHRoZSBzZW5zZSB0aGF0IHRoZXkgcmVmdXNlIHRvIG1lc3NhZ2Ugb3IgY2hhdCwgYnV0IHRoZSB0aGlyc3RpZXN0IG9mIHRoZSBncm91cCB0ZW5kIHRvIHdhbnQgdGhpbmdzIGhhbmRlZCB0byB0aGVtLiAKSSBoYXZlIGEgZnJpZW5kIGF0IERIUyB3aG8gZ2F2ZSBtZSB0aGUgZGVldHMgb24gdGhpcywgYnV0IEkgd291bGRuJ3Qgd29ycnkuIEkndmUgZmxvd24gYSBsb3QgYmVmb3JlIGFuZCBhZnRlciB0aGF0IGFuZCBubyBvbmUgY2FyZXMgYWJvdXQgbWFraW5nIG1lIGZsaXAgZG93biBteSBzZXB0dW0gamV3ZWxyeSAgIGFuZCBtaW5lIGlzIDhnLgpUaGUgc2Vjb25kIG9uZSBpcyBvbmx5IHNsaWdodGx5IGhhcmRlciwgYW5kIHdpdGggdGhlIGFib3ZlIHRoZW9yZW0gaW4gbWluZCwgaXQgc2hvdWxkIGJlIGEgcGllY2Ugb2YgY2FrZSBhcyB3ZWxsLiAKSSB3aXNoIHRoZXJlIHdhcyBhIHdheSB0byB3ZWVkIHRob3NlIHBlb3BsZSBvdXQgb2YgdGhlIHN5c3RlbS4gClRoZW4gd2hlbiB0aGUgYnVsbCBvciBjb3cgb3Igd2hhdGV2ZXIgY2Fubm90IHN0YW5kIGFueSBtb3JlIGFuZCBpcyB0b28gdGlyZWQgdG8gZmlnaHQgYW55bW9yZSwgdGhlbiB0aGV5IGdvIGluIGZvciB0aGUga2lsbC4gClVzaW5nIGEgc2ltcGxpZmllZCBmb3JtdWxhLCB3ZSBjYW4gc2VlIHRoYXQgcHJvYmFiaWxpdHkgb2Ygd2lubmluZyBpcyA1MCUgKGluIHByYWN0aWNlLCBpdCBpcyBjZXJ0YWlubHkgZXZlbiBzbWFsbGVyKS4gCkkgZ2V0IHRvIHN0aWxsIGxlYXJuIHRlY2hub2xvZ3ksIEkgZ2V0IHRvIGhlbHAgZGVzaWduIGFuZCBkZXZlbG9wIHNvbHV0aW9ucywgSSBnZXQgdG8gZHJpdmUgcHJvamVjdHMuIEkgZ2V0IHRvIGJlIGFuIGlkZWEgbWFuLiBCdWlsZCB0aGUgdGVhbSBob3cgSSB3YW50IGFuZCBiZSBhcyBpbnZvbHZlZCBhcyBJIHdhbnQuCkl0IHdhcyBzbyBzdXJyZWFsIGFuZCBicmVhdGh0YWtpbmcgdG8gd2FsayBpbnRvIGJhdHRsZSBhbG9uZyBzaWRlIGFuIEFUIEFUIHdpdGggQVQgU1RzIG1hcmNoaW5nIGFib3V0IHdpdGggWCBXaW5ncywgVGllIGZpZ2h0ZXJzLCBZIGFuZCBVIHdpbmdzIGZseWluZyBhcm91bmQsIG9jY2FzaW9uYWxseSBydW5uaW5nIGludG8gTHVrZSBhbmQgc2hpdHRpbmcgeW91cnNlbGYsIGFuZCBmZWVsaW5nIHNvIHJlbGlldmVkIHdoZW4gVmFkZXIgc2hvd3MgdXAuIApUaGUgbW9uZXkgc2hvd24gaXMgZGVmaW5pdGVseSBuaWNlIHRvIHRoaW5rIGFib3V0LCBidXQgdGhlIGNvbnNpc3RlbmN5IGlzIHdoYXQgY291bnRzLiAKVGhlIHN0dWZmIHdlJ3JlIHRhbGtpbmcgYWJvdXQgaXMgY29tbW9uIG5hdHVyYWwgcHJvZHVjdHMgdGhhdCB5b3UgcHJvYmFibHkgYWxyZWFkeSBoYXZlIGluIHlvdXIgcmVmcmlnZXJhdG9yLi4gCkJhZXVtbGVyIGFja25vd2xlZGdlcyB0aGV5IGhhdmUgdGhlIHByaXZpbGVnZSBvZiBhIHNhZmV0eSBuZXQgaWYgYXQgYW55IHBvaW50IHRoZXkgZGVjaWRlIHRoZSBleHBlcmltZW50IGlzbiB3b3JraW5nLiBUaGV5IGNhbiBmbHkgYmFjayB0byBPbnRhcmlvIGluIGFib3V0IGZvdXIgaG91cnMsIGFuZCBoYXZlIGEgc29saWQgdGVhbSBtYW5hZ2luZyB0aGVpciBidXNpbmVzc2VzIHdoaWxlIHRoZXkgYXJlIGF3YXkuCk9uZSBjYXJkIGlzIGRlYWx0IHRvIGVhY2ggcGxheWVyIGluIGEgY2xvY2t3aXNlIG1vdGlvbiwgd2l0aCB0aGUgZGVhbGVyIGxhc3QgaWYgaGUncyBwbGF5aW5nLCB1bnRpbCBhbGwgcGxheWVycyBoYXZlIDUgY2FyZHMgaW4gdGhlaXIgaGFuZHMuIApJdCB3YXMgYSBwYWluIGluIHRoZSBhc3MgYnV0IEkgbmV2ZXIgYmVlbiBpbiBhbiB1bnNhZmUgb3IgY29tcHJvbWlzZWQgcG9zaXRpb24gYW5kIGNlcnRhaW5seSBub2JvZHkgd2FzIHNjb29wZWQgdXAgaW4gYSBmcm9udCBlbmQgbG9hZGVyIG9yIGNydXNoZWQgYnkgYSBnaWFudCBkcmlsbC4uIApXZWxsLCBlbnRlciBnb2xkLiAKSW4gdGhpcyBjYXNlLCBTTyBuZWVkcyB0byBiZSBwcmVwYXJlZCBmb3IgT1AgdG8gdGFrZSB0aGF0IHRocmVhdCAoVk0sIHRleHQsIGVtYWlsLCB2aWRlbywgZXRjLikgc3RyYWlnaHQgdG8gdGhlIHBvbGljZSBmb3IgaGFyYXNzbWVudCBhbmQgLyBvciBhIHByb3RlY3Rpb24gb3JkZXIgYW5kIGEgcGFwZXIgdHJhaWwuIApUaGlzIEJpZyBQb2tlciBUYWJsZXMgaGFzIGJlZW4gY3JhZnRlZCB3aXRoIGEgdmVyeSBzcGVjaWZpYyBkZXNpZ24gb2YgZnVuY3Rpb25hbGl0eSBhbmQgc3R5bGUuIFRoZSBtYW51ZmFjdHVyZXIgYWxzbyBzcGVudCBxdWl0ZSBhIGJpdCBvZiB0aW1lIGZvY3VzaW5nIG9uIGNyYWZ0aW5nIGVhY2ggdGFibGUgd2l0aCBkZXRhaWwgc3BlY2lmaWMgd29ya21hbnNoaXAgdGhhdCBzZXRzIHRoZSA5MCBpbmNoIFRleGFzIEhvbGQgJ2VtIHBva2VyIHRhYmxlIHdpdGggUmFjZXdheSBhcGFydCBmcm9tIG90aGVyIHBva2VyIHRhYmxlcy4gClRoaXMgaXMgbm90IGEgcGxhY2UgZm9yIG1lbWVzIG9yIHJhbnRzLiBTbyBsYXRlbHkgaSd2ZSBiZWVuIHBheWluZyBhdHRlbnRpb24gbW9yZSB0byBteSBkZWFkbGlmdCBmb3JtLCBhbmQgaSdtIGluIHRoZSBneW0ganVzdCBub3csIGFuZCBpIGR1ZGUgc2VlJ3MgbWUgbWlzcyBhIDI0NWxiIGRlYWRsaWZ0LiAKUm9ieW4gU2NoZXJlciwgRXJuaWUncyB3aWZlLCB0b2xkIGRldGVjdGl2ZXMgdGhhdCBzaG9ydGx5IGFmdGVyIHRoZXkgcmVsZWFzZWQgdGhlIGNyaW1lIHNjZW5lLCBFcm5pZSBsZXQgYSBrZXkgcGllY2Ugb2YgaW5mb3JtYXRpb24gc2xpcC4gClNvbWUgYXJlIGxlZ2l0IGFuZCBvZmZlciBubyBleHRyYXMuIApIZSBtYW5hZ2VkIHRvIGhvbGQgb24gdG8gdGhlIHBhaW50aW5nIHRocm91Z2ggdGhlIHNwbGl0LCBidXQgZm9yIHNvbWUgcmVhc29uIHdlbnQgb24gZGlzcGxheWluZyB0aGUgZmFrZS4gCkFuZCBpdCBub3QgYWN0dWFsbHkgdGhhdCBncmVhdC4gVGhlIE5IUyBoYXMgdGVycmlibGUgbWFya3MgZm9yIGFjY2Vzc2liaWxpdHksIGFuZCBhbiBhd2Z1bCBhdXRvY3JhdGljIG1hbmFnZW1lbnQgY3VsdHVyZS4gVHJ5IGdldHRpbmcgYSBiZWQsIG9yIHdvcnNlIHdvcmtpbmcgdGhlcmUuIApJIHVzZSB0aGF0IHdvcmQgbG9vc2VseSBzaW5jZSBvdXIgImNvbW11bmljYXRpb24iIGNvbnNpc3RlZCBvZiBXZW5kaSBhbmQgSSBsb29raW5nIHVwIGEgd29yZCBpbiB0aGUgZGljdGlvbmFyeSwgcmVwZWF0aW5nIGl0LCBhbmQgaGF2aW5nIHRoZW0gbm9kIHZpZ29yb3VzbHkuIFdlIHdlcmUgdmVyeSBjb21mb3J0YWJsZSB0aGVyZSBub25ldGhlbGVzcywgYW5kIG9uIG91ciB3YXkgb3V0IGluIHRoZSBtb3JuaW5nLCBBZGVtJ3MgbW9tICh3aG8gd2FzIHNpdHRpbmcgb24gdGhlIGRpcnQgZmxvb3IgaW4gdGhlIGtpdGNoZW4gYmFraW5nIGJyZWFkKSBzZW50IHVzIG9uIG91ciB3YXkgd2l0aCBzb21lIGZyZXNoIGJyZWFrZmFzdC4gV2UgZHJvcHBlZCBBZGVtIGJhY2sgYXQgd29yayBhbmQgd2VudCBvbiBvdXIgd2F5Li4gCkJlY2F1c2Ugb2YgdGhlIGhpZ2ggbGV2ZWxzIG9mIHBoeXNpY2FsIGFjdGl2aXR5LCB0aGUgbGlmZXN0eWxlcyBvZiB0YWN0aWNhbCBhdGhsZXRlcyBpbmNsdWRlIGhpZ2ggbGV2ZWxzIG9mIHBoeXNpY2FsIHN0cmVzcyBhbmQgcG9vciBkaWV0cywgZGVwZW5kaW5nIG9uIHRoZSBqb2IgYW5kIHRpbWUgYXZhaWxhYmxlIHRvIGVhdCBhbmQgc2xlZXAuIApFeGFjdGx5LCB3ZSBkaWQgYSBza2lsbHMgbGFiIGluIHNjaG9vbCB0aGUgb3RoZXIgZGF5IGZvciB0cmFjaGUgY2FyZS4gSSBrbm93IHRoZXkgdXN1YWxseSB1c2UgdmVsY3JvIHN0cmFwcyB0byBzZWN1cmUgaXQgbm93IGJ1dCB3ZSBoYXZlIHRvIGxlYXJuIHdpdGggb2xkIHNjaG9vbCBzdHJpbmcuIEkgaGF2ZSBhIHJlYWxseSB0b3VnaCB0aW1lIGdldHRpbmcgdGhlIHN0cmluZ3MgbG9vcGVkIHRocm91Z2ggdG8gdGllIGl0IG9mZiAgbXkgaGFuZHMgYXJlIG5vdCBuaW1ibGUgYXQgYWxsIGFuZCBnbG92ZXMgZG8gbm90IGhlbHAuIFRoYXQgbWlnaHQgYmUgc29tZXRoaW5nIEknZCBoYXZlIHRvIGFzayBoZWxwIGZvci4gSSBhZ3JlZSBpdHMganVzdCBzbyBtdWNoIGVhc2llciB0byB3b3JrIGFzIGEgdGVhbS4KU3VwcmVtZSBDb3VydCBpbnZhbGlkYXRlcyBjYXNpbm8gYW1lbmRtZW50ClRoZSBzdGFuZGFyZCBvZiB0aGUgZ2FtZSBwbGF5ZWQgaGVyZSBpcyBhbHNvIHZlcnkgaGlnaC4uIApJbiA1ZSBhIG5hdCAxIGlzIGluZGVlZCBhbiBhdXRvIGZhaWwgZm9yIGFuIGF0dGFjayByb2xsLiBJdCBhbHNvIGNvdW50cyBhcyB0d28gZmFpbHVyZXMgb24gYSBkZWF0aCBzYXZpbmcgdGhyb3cuIFRoZSBETUcgYWxzbyBzYXlzIHRoYXQgYXQgdGhlIEdNcyBkaXNjcmV0aW9uIHRoZXkgY2FuIHRha2UgYSBuYXQgMjAgb3IgMSBpbnRvIGFjY291bnQgd2hlbiBkZWNpZGluZyB0aGUgb3V0Y29tZSwgc3BlY2lmaWNhbGx5IHN1Z2dlc3RpbmcgdGhleSBpbmNyZWFzZSB0aGUgaW1wYWN0IG9mIHRoZSBzdWNjZXNzIG9yIGZhaWx1cmUuLiAKVGhhdCB0aGUgdGhlb3J5ICBvciBhdCBsZWFzdCBqb2tlICBiZWhpbmQgYW4gb25nb2luZyAic3BlZWQgaGF0aW5nIiBuaWdodCBpbiBMb25kb24uIGlkZWEgaXMgdG8gZ28gaW4gYW5kIHRlbGwgdGhlIG90aGVyIHBlcnNvbiB3aGF0IHlvdSBoYXRlLCBldmVuIGlmIHdoYXQgeW91IGhhdGUgaXMgdGhlbS4KV2hlbiB5b3UncmUgc2FpbGluZyB0aGUgc2Vhcywgc3Vycm91bmRlZCBieSBub3RoaW5nIG1vcmUgdGhhbiBzZXJlbmUgb2NlYW4gd2F2ZXMgaXQncyB0b3VnaCB0byBnZXQgaW50byBhIG1vcmUgcmVsYXhlZCBzdGF0ZSBvZiBtaW5kLiBCdXQgaWYgdWx0aW1hdGUgdHJhbnF1aWxpdHkgaXMgd2hhdCB5b3Ugc2VlaywgdGhlbiBoZWFkIHRvIHRoZSBzaGlwJ3Mgc3BhLiBNb3N0IHNoaXAgc3BhcyBvZmZlciBjbGFzc2ljIG1hc3NhZ2VzIGFuZCBmYWNpYWxzLCBidXQgc29tZSBzcGFzIHN0YW5kIG91dCBmcm9tIHRoZSByZXN0IGFuZCBmZWF0dXJlIHNvb3RoaW5nIHRyZWF0bWVudHMgYW5kIHN0cmlraW5nIHZlbnVlcyB0aGF0IGFyZSB0cnVseSB1bmlxdWUuIFRoZSBTb2xhcml1bSBpbmRvb3IgcG9vbCBpcyBhbW9uZyB0aGUgcHJldHRpZXN0IHBvb2xzIGF0IHNlYSB3aXRoIHdhdGVyZmFsbHMgYW5kIGRhbmNpbmcgd2F0ZXIgZm91bnRhaW5zLiBCZWZvcmUgYW5kIGFmdGVyIHRyZWF0bWVudHMgZ3Vlc3RzIGNhbiBsb3VuZ2Ugd2l0aCBzZWEgdmlld3MgaW4gdGhlIFJlbGF4YXRpb24gUm9vbSB0aGF0IG9mZmVycyBjb21meSBhbmQgcGx1c2ggd2lja2VyIG90dG9tYW5zIG9yIHRoZSBzcGEncyBQZXJzaWFuIEdhcmRlbiB0aGF0IG9mZmVycyB3YXJtIG1hcmJsZSBsb3VuZ2VzIHRvIGxhemUgb24uIFRoZSBzcGEgb2ZmZXJzIGEgd2lkZSBhcnJheSBvZiB0cmVhdG1lbnRzLCBidXQgYWN1cHVuY3R1cmUgdGhlcmFweSBpcyB0aGUgaGlnaGxpZ2h0IGFuZCBpcyB2ZXJ5IHBvcHVsYXIgYW1vbmcgcmV0dXJuaW5nIGd1ZXN0cy4KRGlzY3VzcyBob3cgbXVjaCBhIGJhYnkgY29zdHMgb24gdG9wIG9mIHRoYXQuIERpc2N1c3MgaWYgc2hlIGxpa2VzIGxpdmluZyBpbiB5b3VyIGhvdXNlIGFuZCBhbGwgaXQgYW1lbml0aWVzLi4gCkFsbCB3aXRoZHJhd2Fscywgd2hlcmV2ZXIgcG9zc2libGUsIGFyZSBwZXJmb3JtZWQgd2l0aCB0aGUgZGVwb3NpbmcgbWV0aG9kLCBhbmQgaWYgbm90LCBCZXRGcmVkIG1heSByZXF1aXJlIHRoYXQgeW91IHByb3ZpZGUgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhcyBwcm9vZiBmb3IgeW91ciBpZGVudGl0eSwgd2hpY2ggaXMgYSBwcmFjdGljZSB1c2VkIGFzIHBhcnQgb2YgdGhlIGFudGkgbW9uZXkgbGF1bmRlcmluZyBwb2xpY3kuQmV0RnJlZCBvZmZlcnMgMjQvNyBsaXZlIGNoYXQsIGVtYWlsIGFuZCB0ZWxlcGhvbmUgY3VzdG9tZXIgc3VwcG9ydC4gQW55IHF1ZXN0aW9ucyB5b3UgbWlnaHQgaGF2ZSB3aWxsIGJlIGFuc3dlcmVkIGFzIHNvb24gYXMgcG9zc2libGUsIGluIG1vc3QgY2FzZXMgYWxtb3N0IGltbWVkaWF0ZWx5LCBhbmQgaW4gdGhlIGJlc3QgcG9zc2libGUgbWFubmVyLiAKU3dlZXQsIEkgaGl0IG15IGZsdXNoLCBidXQgSSB3YXMgbG9va2luZyBhdCB0aGUgZmxvcCB0aGlua2luZyAiZnVjaywgaGUgZ290IGEgYm9hdCBvciBhbiBBIGhpZ2ggZmx1c2guIEkgZnVja2VkIi4gCkp1c3QgYXMgMTk2MHMgbW9kIGRyZXNzZXMgb3IgMTkyMHMgZmxhcHBlciBkcmVzc2VzIGFyZSB0aW1lbGVzcyBhbmQgaWNvbmljLCBzYXZ2eSBzaG9wcGVycyBvbiB0aGUgaHVudCBmb3IgdmludGFnZSBjbG90aGluZyB3aWxsIHNlZWsgb3V0IHN0eWxlcyB0aGF0IGFyZSByZWNvZ25pemFibGUuLiAKMGFuaWtldDAgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVGhlIGR1cmlhbCBzdG9yeSBpcyBmdW4gdG9vLiBJbiAyMDA2LCBhIGd1eSBjZWxlYnJhdGVkIDk5IGNvbiwgYnV0IHRoZXJlIHdhcyBhIGJ1Zy4gCkkgdGVsbCB5b3Ugc3RyYWlnaHQgdXAsIHRoZXJlIHZlcnkgbXVjaCBhcmUgYmFkIG1lcmNpZXMsIGFuZCB5b3UgaGF2ZSBhIGxvdCBtb3JlIGltcGFjdCBvbiB5b3VyIG93biBzdXJ2aXZhbCB0aGFuIHlvdSB0aGluay4uIApJZiB5b3UgYXJlIGludGVyZXN0ZWQgaW4gY29sbGVjdGluZyBwb2tlciBjaGlwcywgeW91IHNob3VsZCBjaGVjayBvdXQgdGhlICJSZXNvdXJjZXMiIHNlY3Rpb24gbGlzdGVkIGJlbG93LiAKMy4gVGhlcmUgaXMgbW9yZSB0aGFuIGhhbmQgaGFuZCBzZWxlY3Rpb24gaXMgdGhlIHNvbGUgdGhpbmcsIGl0IGp1c3QgYSBzdGVwIGluIHBpbGdyaW1zIGpvdXJuZXkuIApUaGUgY291cnQgd2lsbCBhc3N1bWUgdGhlIG1vbmV5IHlvdSB3ZXJlIGFibGUgdG8gc2F2ZSB3YXMgZHVlIHRvIHRoZSBtb25leSBoZSBzcGVuZCB3aGlsZSB5b3Ugd2VyZSBzYXZpbmcuIApFcyBtdXNzIGhhbHQgbnVyIGplZGVzIExhbmQgc2VpbmVuIFRlaWwgZGF6dSBiZWl0cmFnZW4gdW5kIGRhYmVpIGhpbGZ0IGVzIG51bm1hbCwgd2VubiBtYW5jaGUgc2FnZW4gIk9rYXksIHdpciBsZWdlbiBtYWwgdm9yIi4gQXVlcmRlbSBzb3JnZW4gR3JlIHVuZCB3ZWx0d2lydHNjaGFmdGxpY2hlciBFaW5mbHVzcyBFdXJvcGFzIGRhZnIsIGRhc3Mgd2VsdHdlaXRlIFRyZW5kcyBlbnRzdGVoZW4gdW5kIHRlY2hub2xvZ2lzY2hlIEVudHdpY2tsdW5nZW4gdm9yYW5nZXRyaWViZW4gd2VyZGVuLiBHZW5hdSBkYXMsIHdhcyBlcyBpbiBTYWNoZW4gS2xpbWF3YW5kZWwgYnJhdWNodC4uIAoiSSBhc2tlZCB3aGF0J3MgdGhlIGJyYW5kIGFib3V0PyBUaGV5IHNhaWQsICdJdCBkb2Vzbid0IG1hdHRlciB3aGF0IHRoZSBicmFuZCBpcyBhYm91dC4gV2UncmUgc2VsbGluZyBhbGwgdGhpcyBzdHVmZi4nIEl0IHdhcyBtb3ZpbmcgYXQgYSBzcGVlZCBJJ2QgbmV2ZXIgc2VlbiBiZWZvcmUuIApMYXN0IHdlZWsuIApIb3cgVG8gU3RyYWlnaHRlbiBZb3VyIEhhaXIKVGlwcyB0byBQcmV2ZW50IFNsaXBzLCBUcmlwcyBhbmQgRmFsbHMKRGllIEJlcmhydW5nIHZvbiBqZW1hbmRlbSwgZGVyIFNpZSBsaWVidCB1bmQgSWhuZW4gaGVsZmVuIG1jaHRlLCBnaWJ0IElobmVuIEtyYWZ0IGZyIGRpZSBXZWhlbiB1bmQgaGlsZnQsIHdlbm4gU2llIG1kZSBvZGVyIGJlc29yZ3Qgc2luZC4gClRoZW4gd2Ugb2ZmIHRvIGEgc3RhbmQgdG8gYnV5IGFjaGlvdGUgcGFzdGUsIHRoZSBoYWxsbWFyayBvZiBNYXlhIGZsYXZvdXIsIG1hZGUgd2l0aCBhbm5hdHRvIHNlZWRzIGFuZCBzcGljZXMgbGlrZSBjdW1pbiwgY2xvdmVzLCBjaW5uYW1vbiwgYWxsc3BpY2UsIG9yZWdhbm8uIAoiQWxsIEkgY2FuIHNheSBpcyB3ZSBhYnNvbHV0ZWx5IHRyaWVkIGV2ZXJ5dGhpbmcgYW5kIGl0IHdhcyBhIHJlYWxseSBoYXJkIGZvdWdodCBhbmQgZXhoYXVzdGluZyBqb3VybmV5LCBhbmQgaXQncyByZWFsbHkgc2FkIHRvIHNlZSB0aGlzIGFzIHRoZSBlbmQgcmVzdWx0LCIgTWNDdWlzdGlvbiBzYWlkLiAiV2Ugd29ya2VkIHdpdGggYSB2ZXJ5IGNvbW1pdHRlZCBza2VsZXRvbiBjcmV3IHRoYXQgd2FzIHVuZGVyZnVuZGVkIGFuZCB3b3JraW5nIGFnYWluc3QgYWxsIG9kZHMgZm9yIHR3byB5ZWFycywgYW5kIHdlIGZlbHQgbGlrZSB3ZSBnb3Qgc3Vja2VyIHB1bmNoZWQuIApFdmVyeXRoaW5nIE11c3QgR28gYXMgTGlxdWlkYXRpb24gU2FsZSBLaWNrcyBPZmYgYXQgQXRsYW50aWMKVGhlIEFDU00gRm91bmRhdGlvbiBhY3F1aXJlcywgbWFuYWdlcyBhbmQgZ3Jvd3MgdGhlIHJlc291cmNlcyBuZWNlc3NhcnkgZm9yIEFDU00gdG8gZnVsZmlsbCBpdHMgbWlzc2lvbiBhbmQgdmlzaW9uIHdpdGggc3BlY2lhbCBlbXBoYXNpcyBvbiBzdXBwb3J0aW5nIHJlc2VhcmNoIHRoYXQgcHJvdmlkZXMgc2NpZW50aWZpYyBpbmZvcm1hdGlvbiB2aXRhbCB0byBodW1hbiBoZWFsdGggYW5kIHBlcmZvcm1hbmNlLgpEYW5zIHVuIGZ1dHVyIHNvbWJyZSwgc3VyIGxlcyBydWluZXMgZGVzIHRhdHMgVW5pcywgdW4gamV1IHRsdmlzIGVzdCBjciBwb3VyIGNvbnRybGVyIGxlIHBldXBsZSBwYXIgbGEgdGVycmV1ci4gCkxvZ2ljYWxseSB5ZXMuIEJ1dCBpbiB0aGlzIGNhc2UgSSBkb24gdGhpbmsgc28uIApXaXRoIGVpZ2h0IFV0YWggbG9jYXRpb25zLCBpbmNsdWRpbmcgQ290dG9ud29vZCwgU2FsdCBMYWtlIENpdHksIEhlcnJpbWFuLCBPZ2RlbiwgUGFyayBDaXR5LCBUYXlvcnN2aWxsZSwgV2VzdCBKb3JkYW4gYW5kIFdlc3QgVmFsbGV5LCB0aGlzIGlzIHRoZSBmaXJzdCBUaW1lIFB1YiBHcnViIGZvciBTb3V0aGVybiBVdGFoLgpBdG1hZG9nICA1IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClRoZXJlIGEgbG90IG1vcmUgdG8gYmVhdGluZyAxLzIgdGhhbiBiZWF0aW5nIHRoZSByYWtlLCBidXQgcmVtZW1iZXIsIHlvdSBwYXkgdGhlIGhpZ2hlc3QgcGVyY2VudGFnZSBvZiB5b3VyIHdpbm5pbmdzIGluIHJha2UgaW4gbGl2ZSBwb2tlciBhdCAxLzIgdGhhbiB5b3Ugd2lsbCBpbiBhbnkgb3RoZXIgZ2FtZS4gCkhlIGNvbWVzIG9mZiBhcyBob25lc3QgYW5kIHNpbmNlcmUsIHZlcnkgaW4gdHVuZSB3aXRoIGhpcyBhcHByb3ZhbCByYXRpbmcsIGFuZCBzdGF1bmNobHkgY29tbWl0dGVkIHRvIGFuIGV2ZXIgZXhwYW5kaW5nIHNvY2lhbGlzdCBmb3JtIG9mIGdvdmVybm1lbnQgcmVnYXJkbGVzcyBvZiBtaXhlZC9kaXNhcHBvaW50aW5nIHJlc3VsdHMgdGh1cyBmYXIuIEkgdGhpbmsgdGhlcmUgYXJlIGEgbG90IG9mIGlzc3VlcyB0aGF0IHJlcXVpcmUgaGlzIGF0dGVudGlvbiB0aGF0IGhlIGRvZXNuIGhhdmUgdGltZSBmb3IgYmVjYXVzZSBoZSBpcyBmb2N1c2VkIG9uIHJldW5pZmljYXRpb24gYXQgYWxsIGNvc3RzLiBJIHdvdWxkIGxpa2UgdG8gc2VlIG1vcmUgYmFsYW5jZSB0aGVyZS4gSSB0ZW5kIHRvIGxpa2UgaGltIGFzIGEgcGVyc29uLCBidXQgZG9uIGFncmVlIGF0IGFsbCB3aXRoIGhpcyBwb3B1bGlzdCBhbnRpIGJ1c2luZXNzIHN0YW5jZS4KSSByaWRlIG15IGJpa2UgdG8gd29yaywgd2hpY2ggSSBsdWNraWx5IG9ubHkgYWJsZSB0byBkbyBiZWNhdXNlIHdvcmsgaXMgcmVsYXRpdmVseSBjbG9zZSB0byBob21lIGFuZCBpdCBiYXNpY2FsbHkgYSBzdHJhaWdodCBzaG90IHVwIHRoZSByb2FkLiAKVGhleSBuZWVkIHByb2dyYW1zIHRvIGhlbHAgZ2V0IHRvIHRoZSByb290IGNhdXNlIG9mIHRoZSBzaXR1YXRpb24gYW5kIGFwcGx5IHRoZSBwZW9wbGUgY29ycmVjdGl2ZSBhY3Rpb25zIGVpdGhlciBpdCBiZSBlZHVjYXRpb24sIHN1YnN0YW5jZSBhYnVzZSBjb3Vuc2VsbGluZywgY291bnNlbGluZyBpbiBnZW5lcmFsLiAKRHVhbCB3aWVsZGluZyBpcyBwcmV0dHkgZ29vZCBidXQgZ2l2ZXMgc3Vic3RhbnRpYWwgYXR0YWNrIHBlbmFsdGllcyB1bnRpbCB5b3UgaGF2ZSBhbGwgdGhyZWUgZmVhdHMsIHdoaWNoIHlvdSBjYW4gZG8gdW50aWwgbGV2ZWwgOSBJSVJDLiAKVHJhbnNsYXRlIGVhY2ggd29yZCBsaXRlcmFsbHkgKHdpdGhvdXQgcmVnYXJkcyB0byBzeW50YXgpIG9yIGdldCBhIHdvcmQgdGhhdCBzb3VuZHMgbGlrZSBpdCBhbmQgdHJhbnNsYXRlIGl0IGxpdGVyYWxseSAoYWdhaW4gbm8gcmVnYXJkIHRvIHN5bnRheCkuIFRoZSBsYXN0IHBhbmVsIGVpdGhlciByZXF1aXJlcyBhbiBhY3R1YWwgdHJhbnNsYXRpb24gb3IgZG9lcyB0aGUgc2FtZSB0aGluZywgYnV0IHRha2luZyBhbiBFbmdsaXNoIHNlbnRlbmNlIGFuZCB0cmFuc2xhdGluZyBpdCB3b3JkIGZvciB3b3JkIHRvIFBvcnR1Z3Vlc2UgdGhlbiB0cmFuc2xhdGluZyBpdCBwcm9wZXJseSBiYWNrIHRvIEVuZ2xpc2guLiAKQWNjb3JkaW5nIHRvIHRoZSBGdC4gV29ydGggU3RhciBUZWxlZ3JhbSwgbWFueSBnYXkgbWFycmlhZ2UvIGhvbW9zZXh1YWwgYWdlbmRhIGFkdm9jYXRlcyBhcmUgY2FsbGluZyBpdCBhICJkYXkgb2YgdmljdG9yeS4iCkRvZXNuIG1hdHRlciB3aGF0IGhlIHdhbnRzLCBoZSBpcyB1bmRlciBjb250cmFjdCBmb3IgMiBtb3JlIHllYXJzLiBIZSBjYW4gaG9sZCBvdXQuIEluIGFkZGl0aW9uIHRvIGxvc2luZyBvdmVyICQyIG1pbGxpb24ganVzdCBpbiBwZXIgZ2FtZSBjaGVja3MgYW5kIGVzY2FsYXRvcnMsIGhlIHdvdWxkIGVuZCB1cCBhcyBhIDM1IHllYXIgb2xkIGRlZmVuc2l2ZSBlbmQgdGhhdCBoYXNuIHBsYXllZCBmb290YmFsbCBpbiAyIHllYXJzIGFuZCBpcyBkZW1hbmRpbmcgYSBwcmVtaXVtIGNvbnRyYWN0LiAKQW50aSB0ZXJjZWlybyBkZSBOb3N0cmFkYW11cyBxdWUgQ2hyaXN0IGFpYXRvbCBNZXNiYWggWWF6ZGkgZGVjbGFyb3UgcXVlIG8gdXNvIGRlIGJvbWJhcyBudWNsZWFyZXMgIHBlcmZlaXRhbWVudGUgZGUgYWNvcmRvIGNvbSBhIGxlaSBtdXVsbWFuYSwgYSBmaW0gZGUgY29ucXVpc3RhciBvIG11bmRvIHBhcmEgRGV1cyBkbyBNb250ZSBTaW5haSB0YW1ibSBjb25oZWNpZG8gY29tbyBEZXVzLCBEZXVzIG8gcGFpLCBKZXN1cyBDcmlzdG8sIG8gRXNwcml0byBTYW50bywgWWVob3ZhaCwgRWxvaGltLCBBZG9uYWkuIEVsZSBhY3JlZGl0YSBxdWUsIHByb3ZvY2FuZG8gbyBBcG9jYWxpcHNlIHZhaSB0cmF6ZXIgc29icmUgbyBhZHZlbnRvIGRhcyBkb2lzIG11dWxtYW5vcyBNZXNzaWFzIEplc3VzIENyaXN0byBlIG8gTWFoZGksIHBhcmEgY29ucXVpc3RhciBvIG11bmRvIHBhcmEgbyBJc2wgZSB0cmF6ZXIgYSBwYXogZXRlcm5hIGRvIG11bmRvLgpQb2tlclN0YXJzIGhhcyBiZWVuIHRlc3RpbmcgUG93ZXIgVXAsIHdoaWNoIGRpc3J1cHRzIHRoZSB0cmFkaXRpb25hbCBnYW1lIG9mIHBva2VyIGJ5IGdpdmluZyBwbGF5ZXJzIGEgd2lkZSByYW5nZSBvZiBhYmlsaXRpZXMgdG8gc2VlIG9yIGNob29zZSBzcGVjaWZpYyBjYXJkcy4gCkkgc3R1bWJsZSBpbnRvIG15IGFwYXJ0bWVudCwgYW5kIGRlY2lkZSBJIHdhbnQgdG8gc2l0IGRvd24uIApJIHdhcyB0ZXJyaWZpZWQgdG8gZHllIG15IGhhaXIgZm9yIHllYXJzLCBJIGxvdmVkIG15IGNvbG9yIGFuZCBJIHdhaXRlZCB1bnRpbCBJIHdhcyBpbiBteSB0d2VudGllcyB0byBkbyBpdC4gSSd2ZSBoYWQgZ3JlYXQgZXhwZXJpZW5jZXMsIGFuZCBteSBmZWFycyB3ZXJlIGFzc3VhZ2VkLiBJIGFjdHVhbGx5IGxpa2UgdGhlbSB0ZXh0dXJlIG9mIG15IGhhaXIgYmV0dGVyIGFmdGVyIGl0J3MgYmVlbiBkeWVkLiAKVGhpcyBpcyBmb3IgZXZlcnlib2R5LiBCcmluZyB5b3VyIGtpZHMgaWYgeW91IHdhbnQuIApJbiB0aGUgcmVzdCB5b3UgZGVwZW5kIG9uIGZvc3NpbCBmdWVscy5hbHNvIHJlbmV3YWJsZSBzb3VyY2VzIGFyZSBub3QgYXMgbmF0dXJlIGZyaWVuZGx5IGFzIHBlb3BsZSBhc3N1bWUuIApRdWFudGl0IGRlIGNlIHN1YyBhcHBsaXF1IHBhciBtZ2FyZGUgc3VyIGxhIHBlYXUsCkFsbW9zdCBhbGwgb2YgdXMgdGhvdWdodCBoZSBoYWQgYSBwYXJ0IHRvIHBsYXksIGFmdGVyIGhpcyBvbWlub3VzIHdvcmRzIGFzIHRoZXkgZHJvdmUgYXdheSwgYW5kIHRoZSBzY2FycyB0aGF0IHdlcmUgZGViYXRlZCBlbmRsZXNzbHkuIEJ1dCBmZXcgc2FpZCAiVGhhdCB0aGUgeWVsbG93IGtpbmciLCBhbmQgdGhvc2Ugd2hvIGRpZCB3ZXJlIG1vc3RseSBtb2NrZWQsIG9yIGxpa2UgSSBzYWlkIG1ldCB3aXRoICJ5b3UgcmVhY2hpbmcsIGhlIG5vdCB0aGUgbGVhZGVyIG9mIGFsbCB0aGlzLCBidXQgcHJvYmFibHkgaXMgYSByZWxhdGl2ZS9jb25uZWN0aW9uIiByZXNwb25zZS4gSSBmZWx0IHRoYXQgd2F5IGFib3V0IGhpbSB0aGVuLCBjbGVhcmx5IHJlbGV2YW50LCBhbmQgSSBmZWVsIHRoYXQgd2F5IHRvIGEgbGVzc2VyIGV4dGVudCBhYm91dCB0aGUgY2FsbCwgYmVjYXVzZSBpdCB3YXNuIG5lY2Vzc2FyeS4gVGhleSBlc3RhYmxpc2hlZCBldmVyeXRoaW5nIHRoZSBwaG9uZSBjYWxsIGVzdGFibGlzaGVkIG9uIHRoZSBzdXJmYWNlLiBTbyBvbmNlIGFnYWluLCBhcyB3aXRoIHRoZSBlcGlzb2RlIGluIHNlYXNvbiAxLCBJIHRoaW5rIGl0IHByb2JhYmx5IGNvbm5lY3RlZCBpbiBzb21lIHdheSwgYnV0IG5vdCBUSEUgY2x1ZSBwZW9wbGUgYXJlIHNlYXJjaGluZyBmb3IuIEkgY291bGQgYmUgd3JvbmcsIGNlcnRhaW5seSB3b3VsZG4gYmUgdGhlIGZpcnN0IHRpbWUuCldoYXQgd291bGQgaGFwcGVuIGlmIHdlIGFkZGVkIGdsdXRlbiBzZW5zaXRpdml0eSB0byB0aGlzIGxpc3Q/IEkgcHJlc3VtZSB0aGF0IGl0cyBpbmNpZGVuY2UgaXMgaW5jcmVhc2luZyBhdCBhIHNpbWlsYXIgcmF0ZSB0byB0aGF0IG9mIGNlbGlhYyBkaXNlYXNlIGFuZCBzaW5jZSB3ZSBkb24ndCBoYXZlIGEgZGVmaW5pdGl2ZSB0ZXN0IHRoYXQgdHlwaWNhbCBnYXN0cm9lbnRlcm9sb2dpc3RzIGFyZSBmYW1pbGlhciB3aXRoLCB0aGUgbnVtYmVyIG9mIHVuZGlhZ25vc2VkIGdsdXRlbiBzZW5zaXRpdmUgcGF0aWVudHMgaXMgcmF0aGVyIG92ZXJ3aGVsbWluZyBpbiBzY29wZS4KQWxsIEkgYXNraW5nIGlzIHRoYXQgeW91IGRvbnQgYmUgc28gZnVja2luZyBtaXNlcmFibGUgdGhlIGVudGlyZSB0aW1lLiAKQnV0IHRoZXkgc2VlbWVkIHRvIHVuZGVyc3RhbmQgdGhhdCBhbmQgbmV2ZXIgZ2F2ZSBoZXIgYW55IGlzc3VlcyBvdmVyIGJlaW5nIG91dCBvZiB0aGUgZGF5cyBzaGUgaGFkIHNlaXp1cmVzLi4gCkVkd2FyZCB3YXMgbm90LCBkdXJpbmcgaGlzIHJlaWduLCBhIHBvcHVsYXIga2luZywgeWV0IGhpcyBkZWF0aCBpbiBDb3JmZSBhbHNvIHBlcnBldHVhdGVkIHRoZSBhdG1vc3BoZXJlIG9mIGluc3RhYmlsaXR5LiBBcyBFZHdhcmQncyBkZWF0aCB3YXMgbm90IGF2ZW5nZWQsIG5vciB3YXMgaGUgZ2l2ZW4gYSBwcm9wZXIgZnVuZXJhbCB1bnRpbCA5ODAsIGl0IHNlZW1lZCB0aGF0IEVuZ2xhbmQgd2FzIHVuZGVyZ29pbmcgYSBwZXJpb2Qgb2YgaW5zdGFiaWxpdHkgcXVpdGUgdW5saWtlIHRoZSBHb2xkZW4gQWdlIGV4cGVyaWVuY2VkIGR1cmluZyBFZGdhcidzIHJlaWduLiAKSSB0aGluayBvZiBoZXIgYW5kIHRoYXQgZXhwZXJpZW5jZSBldmVyeSB0aW1lIHRoZXJlIGEgc2hvb3RpbmcuIApBdWNoIGRhcyBBbmRyZWFzIFF1YXJ0aWVyIHNldHp0IGF1ZiBlaW4gZGVyYXJ0aWdlcyBLb256ZXB0LiAKSSBhbSB1bnN1cmUgaWYgaXQgd2lsbCBhbHNvIHdvcmsgd2l0aCBhIGZ1c2lvbiBidXQgZGVmaW5pdGVseSBjb25zaWRlciBzcGVha2luZyB3aXRoIHlvdXIgRG9jdG9yIGFib3V0IGl0LkRlcGVuZGluZyBvbiB0aGUgbW92ZW1lbnRzIG9mIFBpbGF0ZXMgeW91ciBEb2N0b3IgbWF5IHNheSBjZXJ0YWluIG1vdmVtZW50cyBzaG91bGQgYmUgYXZvaWRlZC4gCkl0IHJlbWluZHMgbWUgb2YgdGhlIGNoYWxsZW5nZSB0byBDYWxpZm9ybmlhIGRlYXRoIHBlbmFsdHkuIFRoZSBhcmd1bWVudCBoaW5nZWQgb24gZGVhdGggYmVpbmcgYSAiY3J1ZWwgYW5kIHVudXN1YWwgcHVuaXNobWVudCIgdmlvbGF0aW5nIHRoZSA4dGggYW1lbmRtZW50LiBUaGUganVkZ2UgcnVsZWQgc2F5aW5nIHRvIHNvbWV0aGluZyB0byB0aGUgZWZmZWN0IG9mICJEZWF0aCBpcyBtb3N0IGNlcnRhaW5seSBhIGNydWVsIHB1bmlzaG1lbnQsIGJ1dCBpbiB0aGlzIGNvdXJ0cyBvcGluaW9uIGl0IGlzIG5vdCB1bnVzdWFsLCBhbmQgdGh1cyBkb2VzIG5vdCByZWFjaCB0aGUgYmFyIG9mICJjcnVlbCBhbmQgdW51c3VhbCIgcHVuaXNobWVudC4iLiAKQ29tbWUgY2hhcXVlIGFubmUsIGxlcyBjbGJyZXMgIEdheXByaWRlICBzZSBkcm91bGVudCBkYW5zIHBsdXNpZXVycyBncmFuZGVzIHZpbGxlcyBkZSBGcmFuY2UuIApGYWNlIGRvd24gb24gdGhlIGZsb29yIGFuZCBwbGFjaW5nIGEgdGVubmlzIGJhbGwsIHJvbGxpbmcgcGluLCBvciBvdGhlciBzbW9vdGggb2JqZWN0IHVuZGVyIHRoZSBzb3Jlc3Qgc3BvdCB5b3UgY2FuIGZpbmQsIGhhbGZ3YXkgYmV0d2VlbiB5b3VyIGtuZWUgYW5kIGhpcC4gQ3VybCB5b3VyIGxlZyB1cCBhbmQgZG93biAoYmVuZGluZyB5b3VyIGtuZWUpIHVudGlsIHlvdSBmZWVsIGF0IGxlYXN0IHNvbWUgcmVsaWVmLiBJZiB0aGUgcHJlc3N1cmUgaXMgdG9vIGludGVuc2UsIHVzZSBhIHNtYWxsZXIgb2JqZWN0IG9yIGRvIHRoZSByZWxlYXNlIGxheWluZyBvbiBhIGJlZCB0byBsZXNzZW4gdGhlIGFtb3VudCBvZiBmb3JjZS4gCkEgbG90IG9mIGhpcyBiZWhhdmlvciBpcyB3b3J0aHkgb2YgbW9ja2VyeSBiZWNhdXNlIGl0IGFjdHVhbGx5IGh1cnQgb3RoZXJzLCBidXQgSSBub3Qgc3VyZSBob3cgSSBmZWVsIGFib3V0IHdoYXQgZmVlbHMgbGlrZSBoaXMgb2xkIHN1bW1lciBjYW1wIGJ1bGx5IHNoYXJpbmcgb2xkIHBpY3Mgb2YgaGltLi4gCkRlZ3JlZSBzaG91bGQgYmUgZW5vdWdoIHhwIGZvciB5b3UgdG8gYXQgdGhlIHZlcnkgbGVhc3QgbGFuZCBhIGxvdygxNSQrKSBwL3QgaW50ZXJuc2hpcCBvciBzb21ldGhpbmcuIApPdXIgd2VhayBtaW5kcyBhcmUgYSBlYXN5IGhhY2sgL2NvbjsgaW4gdGhlIHByb2Nlc3Mgd2UgYXJlIGxvc2luZyBlbXBhdGh5IGFuZCB0aGUgdmFsdWUgb2YgYW5vdGhlciBodW1hbiBiZWluZy4KSSBhbSBhIGxpdmluZyB0aGluZyB0aGF0IHJlYWNoZXMgYmFjayBpbnRvIHRpbWUgcGVyaGFwcyA0MDAgbWlsbGlvbiB5ZWFycyBhbmQgdGhlIHJlc3VsdCBvZiBiaWxsaW9ucyBvZiBqb2luaW5nIG9mIHBhaXJzIG9mIGNlbGxzLiAKTG9va2luZyBiYWNrIG92ZXIgbXkgZ2VvbG9naWNhbCBjYXJlZXIsIEkgcmVhbGlzZSBob3cgbHVja3kgSSB3YXMgdG8gYmUgYSB3b3JraW5nIHNjaWVudGlzdCBkdXJpbmcgdGhlIGxhdGVyIHBhcnQgb2YgdGhlIHR3ZW50aWV0aCBjZW50dXJ5IHdoZW4gaWRlYXMgb24gdGhlIG5hdHVyZSBvZiB0aGUgRWFydGggdW5kZXJ3ZW50IGEgcmV2b2x1dGlvbi4gV2hlbiBJIHdhcyBhIHN0dWRlbnQgaW4gdGhlIGVhcmx5IDE5NjBzLCB0aGUgaWRlYSBvZiBjb250aW5lbnRhbCBkcmlmdCB3YXMgcmVnYXJkZWQgYnkgbWFueSBwZW9wbGUgYXMgbGF1Z2hhYmxlLiBUd2VudHkgeWVhcnMgbGF0ZXIgdGhlIGNvbmNlcHQgb2YgcGxhdGUgdGVjdG9uaWNzIHdhcyB3aWRlbHkgYWNjZXB0ZWQsIGFuZCBpdCBzdGFydGVkIHRvIGJlIGFwcHJlY2lhdGVkIHRoYXQgdGhlIG9sZGVyIHJvY2tzIGluIE5ldyBaZWFsYW5kIHdlcmUgYSBmcmFnbWVudCBvZiB0aGUgYW5jaWVudCBHb25kd2FuYSBjb250aW5lbnQuIApEYXMgUGVlbGluZyBiZXN0ZWh0IGF1cyBncm9ia3JuaWdlbSBTYWx6IHZvbSB0b3RlbiBNZWVyIChnaWJ0IGVzIHpCIGJlaSBETSksIE1hbmRlbGwgKG1hbiBrYW5uIGF1Y2ggamVkZXMgYW5kZXJlIGJlbGllYmlnZSBsIHZlcndlbmRlbiwgYXVjaCBndXRlcyBPbGl2ZW5sLCB3ZW5uIGlociBrZWluIGFuZGVyZXMgenUgSGF1c2UgaGFidCksIEFicmllYiBlaW5lciBCaW8gT3JhbmdlLCBSb3NtYXJpbiB1bmQgdGhlcmlzY2hlbSBPcmFuZ2VubC4gCkJveSBHZXRzIFBuZXVtb25pYSBGcm9tIEluaGFsaW5nIFBvcGNvcm4sIE1vbSBTaGFyZXMgV2FybmluZ0EgdHdvIHllYXIgb2xkIGNoaWxkIG5lYXJseSBkaWVkIGxhc3QgbW9udGggd2hlbiBoZSBkZXZlbG9wZWQgYXNwaXJhdGlvbiBwbmV1bW9uaWEgYWZ0ZXIgZWF0aW5nIHBvcGNvcm4gYW5kIG5vdyBoaXMgbW9tIGlzIHNoYXJpbmcgdGhlIGV4cGVyaWVuY2UgdG8gd2FybiBvdGhlciBwYXJlbnRzLiBLaWxwYXRyaWNrIHdhcyBjb252aWN0ZWQgb2YgcnVubmluZyBhIGNyaW1pbmFsIGVudGVycHJpc2UsIiBKdWRnZSBOYW5jeSBFZG11bmRzIHNhaWQsIGFkZGluZyB0aGUgZW50ZXJwcmlzZSBzdGFydGVkIHdoaWxlIGhlIHdhcyBzdGlsbCBpbiB0aGUgc3RhdGUgSG91c2Ugb2YgUmVwcmVzZW50YXRpdmVzIGFuZCBjb250aW51ZWQgdGhyb3VnaCBhbGwgc2l4IHllYXJzIGhlIHdhcyBpbiB0aGUgbWF5b3Igb2ZmaWNlLi4gCldlbGNoIGRpcmVjdGVkICQ0OSBtaWxsaW9uIG91dCBvZiAkNjkuOCBtaWxsaW9uLCBvciA3MCBwZXJjZW50IG9mIGhpcyB0b3RhbCBlYXJtYXJrcywgdG93YXJkIGRlZmVuc2UgcmVsYXRlZCBzcGVuZGluZyBpbiAyMDA4IGFuZCAyMDA5LCBhY2NvcmRpbmcgdG8gcHVibGljIGluZm9ybWF0aW9uIGdhdGhlcmVkIGJ5IFRDUy4KR2F5IHBlb3BsZSBqdXN0IHdhbnQgdG8gbGl2ZSB0aGVpciBsaXZlcyB1bm1vbGVzdGVkLiBTdG9wIGRpc2NyaW1pbmF0aW5nIGFnYWluc3QgdGhlbS4gVGhleSByZWd1bGFyIHBlb3BsZSBqdXN0IGxpa2UgeW91IGFuZCBtZS4gTGl2ZSBhbmQgbGV0IGxpdmUuIFlvdSB3b24gZXZlbiBub3RpY2UuCjEzKSBUaGUgbWFnbml0dWRlIG9mIGNoYW5nZSB3YXMgZ2VuZXJhbGx5IGdyZWF0ZXIgaW4gdGhlIHN0cmVuZ3RoZW5pbmcgZ3JvdXAgdi4gdGhlIGFlcm9iaWMgZ3JvdXAuCiBDYXNpbm9zIHR1biBlaW4gR3V0ZXMsIHdlbm4gc2llIGRpZXNlbiBwb3RlbnppZWxsZW4gTWFya3QgbmljaHQgdmVybmFjaGxzc2lnZW4sIHNvbmRlcm4gaWhuIG1pdCBiZXNvbmRlcmVyIEludGVuc2l0dCBiZWFyYmVpdGVuIHVuZCBpaG0gZGllIGdlYmhyZW5kZSBBdWZtZXJrc2Fta2VpdCB3aWRtZW4uIEluIHMgd2llIGluIGRlbiB0cmFkaXRpb25lbGxlbiBDYXNpbm9zLi4gCkJlaW5nIGEgcG9rZXIgcGxheWVyIGdpdmVzIHlvdSB0aGUgY2hhbmNlIHRvIHRha2UgaG9tZSBhIHNpemFibGUgYW1vdW50IG9mIG1vbmV5LiAKRWxsZSBwb3Vyc3VpdDogIkplIHRyYXZhaWxsYWlzLCBtYWlzIGondGFpcyBjb3V2ZS4gQWxvcnMgcXVhbmQgaidhaSBkaXZvcmMgIDMyIG91IDMzIGFucywgYydlc3QgcHJlc3F1ZSBjb21tZSBzaSBqZSBkZXZhaXMgZ3JhbmRpciIuICJCaWVuIHNyLCBqJ2FpIHN1YmkgZGVzIG1vbWVudHMgTWVUb28sIGRlcHVpcyBxdWUgamUgc3VpcyB0b3V0ZSBwZXRpdGUsIGNvbmZpZSBOaWNvbGUgS2lkbWFuLiBNYWlzIGVzdCBjZSBxdWUgamUgdmV1eCBlbiBwYXJsZXIgZGFucyBjZXQgYXJ0aWNsZT8gTm9uLiBFc3QgY2UgcXUnaWxzIG9udCBldSB1biBpbXBhY3Qgc3VyIG1vbiB0cmF2YWlsPyBPdWkuIEplIHN1aXMgY29tbWUgdW5lIHBsYWllIG91dmVydGUuIgpJdCBmcmVlIGZvciB0d28gd2Vla3Mgc28geW91IGNhbiB0cnkgaXQgb3V0IHdpdGhvdXQgbmVlZGluZyB0byBjb21taXQgdG8gaXQuIApJdCB0aGUgc2FtZSBkaWZmZXJlbmNlLCBlc3NlbnRpYWxseSAgIGR1dHkgaXMgcHJlc3VtZWQgYXMgYSBtYXR0ZXIgb2YgbGF3LCB3aGljaCBpcyByZWFsbHkgYSBkaXN0aW5jdGlvbiB3aXRob3V0IGEgZGlmZmVyZW5jZSwgYW5kIHRoZSBzYW1lIGFzIG1hbnkgbmVnbGlnZW5jZSBjYXNlcy4gCkl0IGFsc28gbGVzcyBsaWtlbHkgaGUgaGFzIGEgZmx1c2ggYXMgdGhlIG1vc3QgbGlrZWx5IGZkIGNhbGxpbmcgdGhlIGZsb3AgaXMgdGhlIEEgaGlnaC4gClNpZGUgbm90ZTogMjAwNCBzdHVkeSBvbiBPbWVnYSAzIGFuZCBQcm9zdGF0ZSBDYW5jZXI6IEFtZXJpY2FuIEpvdXJuYWwgb2YgQ2xpbmljYWwgTnV0cml0aW9uIEp1bHksIDIwMDQKU3VkZGVubHkgYXQgdGhlIGZvcmVmcm9udCBvZiB0YWtpbmcgc2V4IGFpZHMgbWFpbnN0cmVhbSwgY29uc2VydmF0aXZlIG1hcmtldGVyIEpvaG5zb24gSm9obnNvbiBhbG1vc3Qgb3Zlcm5pZ2h0IGhhcyBkb3VibGVkIHNhbGVzIG9mIGl0cyBvbmNlIHNsZWVweSBLIFkgYnJhbmQgZm9yIHRoZSBzZWNvbmQgdGltZSBpbiBmb3VyIHllYXJzIHRoYW5rcyB0byB0aGUgYmxvY2tidXN0ZXIgc3VtbWVyIHJvbGxvdXQgb2YgYSBuZXcgbGluZSBvZiBtYXNzYWdlIG9pbHMuIApUaGUgcm9vbSBoYWQgYSBjb21tYW5kaW5nIHZpZXcgb2YgdGhlIFN0cmlwIGFuZCB0aGUgUm91dGUgOTEgSGFydmVzdCBGZXN0aXZhbCBjb25jZXJ0IGdyb3VuZHMgYWNyb3NzIHRoZSBzdHJlZXQuLiAKSSBzdGlsbCBkbyBlbmpveSBzdHVmZi4gCllvdSBkb24gd2FudCB5b3VyIGtpZHMgdG8gc2VlIHlvdSB0aGF0IHdheSB3aXRoIGVhY2ggb3RoZXIgZWl0aGVyLi4gCkEgU3VzdGFpbmluZyBNZW1iZXJzaGlwIGlzIGFuIHVucmVzdHJpY3RlZCBhbm51YWwgZ2lmdCB0aGF0IHlvdSBjYW4gcGF5IGluIGEgY29udmVuaWVudCwgb25nb2luZyB3YXkuIApJZiB5b3UgcmVhbGx5IHdhbnQgdG8gYmUgZGlwbG9tYXRpYywgeW91IGNvdWxkIGFsd2F5cyBvZmZlciB0byBjb21wcm9taXNlIG9uIGNlcnRhaW4gbW92aWVzLiBTYXkgaW5zdGVhZCBvZiBzdHJpY3RseSByZWx5aW5nIG9uIGEgZ2VuZXJpYyByYXRpbmcgc3lzdGVtLCB5b3UgZ3V5cyBjb3VsZCBlYWNoIHZpZXcgdGhlIHByb2dyYW1zL21vdmllcyBiZWZvcmUgaGFuZCBhbmQgdHJ5IHRvIGNvbXByb21pc2U/IFNheSBSaWNrIGFuZCBNb3J0eSBpcyBvZmYgdGhlIHRhYmxlLCBidXQgQW1lcmljYW4gZGFkIGNvdWxkIGJlIHNldHRsZWQgb24/IFNvbWV0aGluZyBsaWtlIHRoYXQ/LiAKSXQgaXMgYmVsaWV2ZWQgdG8gaGF2ZSBvcmlnaW5hdGVkIGluIENoaW5hIHdpdGggdGhlIGludHJvZHVjdGlvbiBvZiBwbGF5aW5nIGNhcmRzLCBhbmQgaGFzIGRldmVsb3BlZCBpbnRvIGEgd29ybGQgb2Ygb3B0aW9ucywgdGFpbG9yZWQgdG8gdGhlIHZhcnlpbmcgaW50ZXJlc3RzIG9mIHBsYXllcnMuIApJIGRvbiBtaW5kIGxpdmluZyBpbiB0aGUgc3RpY2tzIGVpdGhlci4gCkkgbmVlZCBnbGFzc2VzIHRvIHNlZSBhbmQgbXkgcGFyZW50cyBhcmUgb2YgZGlmZmVyZW50IHJhY2VzIGFuZCBJIGF0dHJhY3RlZCB0byBwZW9wbGUgcmVnYXJkbGVzcyBvZiBnZW5kZXIgaWRlbnRpdHkuIEJ1dCBJIHdhbnQgdG8gYmUgc2VlbiBhcyBub3JtYWwgaW4gdGhlIHNlY29uZCBzZW5zZSwgaW4gdGhlIHNlbnNlIHRoYXQgdGhlIHRoaW5ncyB3aGljaCBtYWtlIG1lIGRpZmZlcmVudCBkbyBub3QgbWFrZSBtZSBsZXNzZXIuIApQYXJ0IG9mIHRoYXQgaW52ZXN0bWVudCBmb3IgdGhlIG1ha2VyIG9mIHNwaXJpdCBiZXZlcmFnZXMsIGxpa2UgY29vbGVycywgd2FzIGJ1aWxkaW5nIGl0cyBvd24gd2F0ZXIgcGlwZWxpbmUgdG8gZW5zdXJlIGZsb3cgYW5kIHF1YWxpdHksIHNhaWQgQ2F0aHkgU2lza2luZCBLZWxseSwgY28gZm91bmRlciB3aXRoIGhlciBodXNiYW5kLCBSb2IgS2VsbHkuClNvbWUgYWR2aWNlIGhhcyBiZWVuIGdpdmVuIHRoYXQgd291bGQgbGVhZCBhIHBlcnNvbiB0byBiZWxpZXZlIGl0IGlzIG5vdCBhIGdvb2QgaWRlYSB0byByYWlzZSBiZWZvcmUgdGhlIGZsb3AgaW4gT21haGEvOC4gCkZvcmNlcyBmcm9tIFN5cmlhLkhvdXNlIEdPUCBNZWV0aW5nSG91c2UgU3BlYWtlciBQYXVsIFJ5YW4gb2YgV2lzY29uc2luIGFuZCBoaXMgbGVhZGVyc2hpcCB0ZWFtIGhhZCBiZWd1biB0aGUgZGF5IFRodXJzZGF5IHBsYW5uaW5nIHRvIGhvbGQgZmxvb3Igdm90ZXMgb24gdGhlIFNlbmF0ZSdzIHNwZW5kaW5nIHBhY2thZ2UuIApJIGhhdmUgYSBmZWFyIHRoYXQgZ29pbmcgZnJvbSByYWlkZWQgMCByYXB0b3IgZHJpdmVzIHRvIDcyMDBSUE0gd2lsbCBiZSBzb21laG93IG5vdGljZWFibGUgZm9yIG1lIGJ1dCB3aXRoIHRoZSBpbmNyZWFzZXMgaW4gdGVjaG5vbG9neSBJIHN1c3BlY3QgaXQgd2lsbCBiZSBtdWNoIGZhc3Rlcj8KSG93ZXZlciwgdGhpcyBiZW5jaCB0ZWNobmlxdWUgY2FuIGxlYWQgdG8gZGlmZmljdWx0IGxvY2tvdXRzIGJlY2F1c2UgaXQgZG9lc24gYWxsb3cgdGhlIHRyaWNlcHMgdG8gY3JlYXRlIGEgbG90IG9mIGZvcmNlLCBhbmQgc28gSSBkbyBhIGxvdCBvZiBleHRyYSB0cmljZXAgYW5kIGxvY2tvdXQgd29yayB0byBjb21wZW5zYXRlIGZvciB0aGF0Li4gCldhbGwgU3RyZWV0IG9yIEJhbmtpbmcgaXMgdGhlIGhlYXJ0IG9mIGEgY2FwaXRhbGlzdCBlY29ub215LiBJdCBjb2xsZWN0cyBtb25leSB0aHJvdWdoIGJhbmtpbmcgYW5kIGZpbmFuY2lhbCBzZXJ2aWNlcyBhbmQgcmVkaXN0cmlidXRlcyBpdCB0aHJvdWdoIGNyZWRpdC4gQmFua3MgbGV0IHNvY2lldHkgcHVsbCBtb25leSBmb3J3YXJkLiBUaGUgaWRlYSBpcyB0byBib3Jyb3cgbW9uZXkgdG8gaW5jcmVhc2UgcHJvZHVjdGl2aXR5IFRoZW4gb25jZSBwcm9kdWN0aXZpdHkgaXMgaW5jcmVhc2VkIHlvdSBleHBlY3RlZCB0byBwYXkgdGhlIG1vbmV5IGJhY2ssIGJ1dCB3aXRoIGluY3JlYXNlZCBwcm9kdWN0aXZpdHksIHlvdXIgcmVzb3VyY2UgdG8gcGF5IGJhY2sgeW91ciBkZWJ0cyBpcyBpbmNyZWFzZWQuIDIgZXhhbXBsZXMuIE92ZXJhbGwsIGJhbmtpbmcgbGV0cyB0aGUgZWNvbm9teSBncm93IGF0IGEgbXVjaCBmYXN0ZXIgcmF0ZSB0aGFuIGJ5IGluY3JlYXNpbmcgcHJvZHVjdGl2aXR5IHRocm91Z2ggZWxib3cgZ3JlYXNlIGFsb25lLgpJbiB0aGUgMTg0MCBJcmVsYW5kIHdhcyBvbmUgb2YgdGhlIHBvb3Jlc3QgY291bnRyaWVzIGluIHRoZSB3b3JsZCwgYW5kIGhhZCBtYXNzaXZlIGZhbWluZXMuIApUaGV5IG5lZWQgbXVjaCBtb3JlIHJvb20uIEZvciBiYXNrZXRiYWxsLCBmb3IgaG9ja2V5IGFuZCBhbGwgb2YgdGhlIHNwb3J0cywgdGhleSBuZWVkIGEgbG90IG9mIHJvb20uIFdlIGRvbid0IG5lZWQgaXQuIApUaGUgaWRlYSBvZiBjcml0aWNpemluZyBoZXIgaXMgZmluZSwgdGhlIGlkZWEgb2YgcHV0dGluZyBhIGNvbXBhbnkgb3V0IG9mIGJ1c2luZXNzIGJlY2F1c2UgdGhlIHdpZmUgb2YgdGhlIG93bmVyIHNoYXJlZCBoZXIgZHVtYiBwb2xpdGljYWwgdmlld3MgaXMganVzdCBpbmNyZWRpYmx5IHN0dXBpZCB0byBtZS4gClRoZSBwaW5rIGhhaXIgdGllIHdhcyBGZW5kaSdzIHRha2Ugb24gYSBub25sdXh1cnkgdmVyc2lvbiB0aGF0IE1vbW9hIGhhZCByZWNlaXZlZCBmcm9tIGEgaGFpcnN0eWxpc3QgYW5kIHdvcm4gZnJlcXVlbnRseS4gQmVmb3JlIHRoZSBPc2NhcnMsIE1vbW9hIGRvbm5lZCB0aGUgc2NydW5jaGllIGluIGEgcHJvbW90aW9uYWwgdmlkZW8gZm9yICJTYXR1cmRheSBOaWdodCBMaXZlLCIgb24gIlRoZSBMYXRlIExhdGUgU2hvdyBXaXRoIEphbWVzIENvcmRlbiIgYW5kIG9uIGFuIEF1c3RyYWxpYW4gdGFsayBzaG93LCB3aGVyZSBoZSB0b29rIGEgc2Vjb25kIG1hdGNoaW5nIHNjcnVuY2hpZSBmcm9tIGEgcmVkIGNhcnBldCByZXBvcnRlci4gSGUgaGFzIGNhbGxlZCB0aGUgb3JpZ2luYWwgc2NydW5jaGllICJiZWF1dGlmdWwuIgpBbGwgaW4gYWxsLCBteSBwbGF5ZXJzIGFuZCBJIGxvdmUgdGhlIGhvdXNlIHJ1bGUsIGFuZCBpdCBtYWtlcyB1cyBmZWVsIGhlcm9pYyBhbmQgbWFrZXMgdGhlIGJhZCBndXlzIGZlZWwgc2luaXN0ZXIuIE1vcmUgcG93ZXIgdG8geW91IGFuZCBvdGhlciBETXMgd2hvIGRvbid0IHdhbnQgdG8gdXNlIHRoZSBydWxlLCB0aGF0J3Mgd2h5IHdlIGhhdmUgZGlmZmVyZW50IHRhYmxlcyEgOikKSSBndWVzcyBJIHdhcyBiZWluZyBhIGJpdCBoeXBlcmJvbGljLCBpdCdzIG5vdCB0aGF0IG15IGZhbWlseSBhbmQgZG9jdG9yIHRoaW5rIGl0J3MgYWxsIGluIG15IGhlYWQuIEJ1dCB0aGV5IGZvciBzdXJlIHRoaW5rLCBhcyB5b3Ugc2FpZCwgYWZ0ZXIgdGhpcyBuZXh0IHRyZWF0bWVudC9tZWQvaW5qZWN0aW9uL3NwZWNpYWxpc3QgdGhhdCBJIHdpbGwgYmUgYmV0dGVyLiBBbmQgZm9yIG1lIHRoZXkgdGhpbmsgdGhhdCBtb3JlIG1lZGljYXRpb24gaXMgbm90IHRoZSBhbnN3ZXIgKGJ1dCBub3Qgb25lIHNwZWNpYWxpc3QgaGFzIGJlZW4gYWJsZSB0byBldmVuIG9mZmVyIHdoYXQgY291bGQgYmUgdGhlIGFuc3dlcikuLiAKVGhlaXIgbW9tIHJhaXNlZCB0aGVtIGFsb25lIGluIHRoaXMgdGlueSBob3VzZS4gVGhlaXIgbW9tIHdhcyBzbyBiZWF1dGlmdWwuIApJbiB0ZXJuaW9uIHRoZXJlIGlzIG5vIHVuZGVybHlpbmcgYmlnIHN0b3J5LCBubyBpZGVvbG9neSBvciBwaGlsb3NvcGh5LCBiYXIgdGhlIGltcGxpZWQgbmloaWxpc20sIGV4cGxpY2l0bHkgYWxsdWRlZCB0byBpbiBSYXkgQnJhc3NpZXIgcXVvdGVzIChuaWhpbCB1bmJvdW5kKTogIlBoaWxvc29waHkgaXMgZGVhZC4gRXZlcnl0aGluZyBpcyBkZWFkIHdvcmxkIGlzIG5vdCBkZXNpZ25lZCB0byBiZSBpbnRlbGxpZ2libGUgYW5kIGlzIG5vdCBvcmRpbmFyaWx5IGluZnVzZWQgd2l0aCBtZWFuaW5nLiIgVGhlIHdvcmxkIG9mIHRlcm5pb24gbWF5IG5vdCBiZSBpbmZ1c2VkIHdpdGggbWVhbmluZyBidXQgaXQgaXMgaW5mdXNlZCB3aXRoIGF0dGl0dWRlIGFuZCBtb29kLCBwcm9qZWN0ZWQgYnkgdGhlIG9ic2VydmVyLiBSYWluIGxlZXJzIGFuZCBza3Vsa3MsIGdyYXNzIHNuaWdnZXJzLCBzY3J1YiB3aGltcGVycywgYmlyZHMgY2FzdCBzYXJjYXN0aWMgZ2xhbmNlcy4uIApTQUdJTkFXLCBNSSAgIFBvbGljZSBhcmUgc2VhcmNoaW5nIGZvciBKZXNzZSBNLiBCb2JpYW4sIGEgbWFuIHByb3NlY3V0b3JzIGFsbGVnZSBpcyBvbmUgb2YgdGhlICJtYWluIHBlcnBldHJhdG9ycyIgaW4gdGhlIGFybWVkIHJvYmJlcnkgb2YgYSBwb2tlciBnYW1lIGluIGEgU2FnaW5hdyBUb3duc2hpcCBhcGFydG1lbnQgaW4gd2hpY2ggb25lIHBlcnNvbiB3YXMgc2hvdCBhbmQga2lsbGVkLgpJdCBoZWxwcyB0aGF0IEkgbGl2ZSBhIGZldyBob3VycyBhd2F5IGFuZCBJIHRhbGsgdG8gbXkgcGFyZW50cyBvbmNlIGEgd2VlaywgbWF4Li4gCkJlbG93IHlvdSB3aWxsIGZpbmQgYSBmZXcgb2YgdGhlIHRpcHMgdGhleSB0YWxrIGFib3V0IG9uIHRoZWlyIGxhbmRpbmcgcGFnZS4gCkp1c3QgRG8gSXQgTWFuLiBXaGF0IGhhdmUgeW91IGdvdCB0byBsb3NlLgpUaGVyZSBhcmUgcGxlbnR5IG9mIHZlZ2V0YXJpYW4gcmVzdGF1cmFudHMsIGl0IG5vdCB0aGF0IGRpZmZpY3VsdCB0byBiZSBhIHZlZ2V0YXJpYW4gaGVyZSBhbHRob3VnaCBpZiB5b3UgZWF0aW5nIG91dCBhdCByYW5kb20gcGxhY2VzIHRoZXkgbWlnaHQgc3RpbGwgZ2l2ZSB5b3UgbWVhdCBldmVuIGlmIHlvdSB3byBidSBjaGkgcm91LiBEZXBlbmRzIHdoZXJlIHlvdSBlYXQgb3V0LCBpZiB5b3UgZWF0IGFueXdoZXJlIGRlY2VudCB0aGV5IGxpa2VseSBiZSBtb3JlIHByb2Zlc3Npb25hbCBhbmQgY2F0ZXIgdG8geW91ciBuZWVkcy4KRGllIERlYWxlciB2ZXJzdWNoZW4gaW1tZXIsIGRhcyBTcGllbCBtaXQgZWluZXIgYW5nZW1lc3NlbmVuIEdlc2Nod2luZGlna2VpdCB6dSBmaHJlbi4gCklmIHRob3NlIHN1Z2dlc3Rpb25zIHN0aWxsIGFyZW4gZW5vdWdoIHRvIHNwZW5kIGEgYmVhY2hzaWRlIHZhY2F0aW9uIGluIEF0bGFudGEgQ2l0eSwgdGhlcmUgYXJlIHBsZW50eSBvZiBvdGhlciB0aGluZ3MgdGhpbmdzIHRvIGRvLCBzdWNoIGFzIHdhdGVyIHNwb3J0cyBsaWtlIGtheWFraW5nIGFuZCBqZXQgc2tpaW5nLCBzaG9wcGluZyBhdCBwbGFjZXMgbGlrZSBUaGUgUGxheWdyb3VuZCBhbmQgVGFuZ2VyIE91dGxldHMgVGhlV2FsayBhbmQgY3VsdHVyYWwgYXR0cmFjdGlvbnMgbGlrZSB0aGUgaGlzdG9yaWMgQWJzZWNvbiBMaWdodGhvdXNlLCBBdGxhbnRpYyBDaXR5IEV4cGVyaWVuY2UsIFdvcmxkIFdhciBJIE1lbW9yaWFsIGFuZCB0aGUgaWNvbmljIEx1Y3kgdGhlIEVsZXBoYW50LCBhIE5hdGlvbmFsIEhpc3RvcmljIExhbmRtYXJrIGluIHRoZSBuZWFyYnkgdG93biBvZiBNYXJnYXRlLi4gCkF0IGxlYXN0IHRoZSBjb2xkIGlzIGdldHRpbmcgaW50byB0aGUgZ3JvdW5kIGEgYml0IHNvIHdoZW4gd2UgY2FuIG9wZW4gYW5kIHN0YXJ0IGdyb29taW5nIGl0IHNob3VsZCBnZXQgbmljZSBxdWlja2x5Li4gClRoaXMgUmVzZWFyY2hlciBjb3VsZCBoYXZlIGRyb3BwZWQgdXMgYW4gZW1haWwgcmlnaHQgYXQgdGhlIGJlZ2lubmluZyB0byBzYXksICJIZXksIEkndmUgbm90aWNlZCBhIHJlYWwgcHJvYmxlbSwgYSB2dWxuZXJhYmlsaXR5IHdpdGggb2xkIGFjY291bnRzLiBIZXJlIGlzIHdoYXQgaXQgaXMuIFRob3VnaHQgeW91J2Qgd2FudCB0byBrbm93LiIgQnV0IHRoZXkgZGlkbid0LiAKRm9yIGV4YW1wbGU6UmVwbGFjZSAiaXBhZGRyZXNzaGVyZSIgb3IgImNvbXB1dGVybmFtZWhlcmUiIGFuZCAidXNlcm5hbWVoZXJlIiB3aXRoIHRoZSBhY3R1YWwgSVAgYWRkcmVzcyBvciBjb21wdXRlciBuYW1lL3VzZXIgbmFtZS4gCkN5bm4ncyBraW5nIG9mIGNsdWJzIGFuZCBqYWNrIG9mIGNsdWJzIHdlcmUgYmV0dGVyIHRoYW4gTWlsZXMnIGhhbmQuIE1pbGVzIHdlbnQgYWxsIGluIHdpdGggdGhlIHF1ZWVuIG9mIGNsdWJzIGFuZCB0aGUgZWlnaHQgb2YgaGVhcnRzLiBUaGUgY29tbXVuaXR5IGNhcmRzIHdlcmUga2luZyBvZiBoZWFydHMsIGtpbmcgb2YgZGlhbW9uZHMsIGZpdmUgb2YgaGVhcnRzLCBlaWdodCBvZiBkaWFtb25kcywgYW5kIGZvdXIgb2Ygc3BhZGVzLgoiVGhlIHByZXNlbnQgd29yayBpcyB3b3J0aCB3aGlsZSBmb3IgaXRzIG93biBzYWtlLCIgaGUgYW5ub3VuY2VkLiAiSXQgaXMgc28gZGFuZ2Vyb3VzIHRoYXQgeW91IG1pZ2h0IGVhc2lseSBsb3NlIHlvdXIgbGlmZSB3aXRoaW4gYSBmb3J0bmlnaHQuIFRoYXQgaXMgd2h5IEkgc2hhbGwgZ2l2ZSB5b3UgeW91ciB3b3JrIGNoYXB0ZXIgYnkgY2hhcHRlci4gCkkgaGF2ZSBhIDYgeXIgb2xkIGFuZCBkZXZlbG9wZWQgYWJvdXQgMi41IHlycyBhZ28uIEkgd2VudCBmcm9tIGJlaW5nIGFuIGFtYXppbmcgYW5kIGZ1biBtb20gd2hvIGRhbmNlIGFuZCBqdW1wZWQgYXJvdW5kIHRvIHNvbWVvbmUgd2hvIGxpdGVyYWxseSBjYW50IGp1bXAgYW55bW9yZS4gSSBUSEFUIHdlYWsuIApJIGhvcGUgUGFydHlwb2tlcihvciBhbm90aGVyIHNpdGUsIEkgaGF2ZSBubyBhZmZpbGlhdGlvbiB0byB0aGVtIGp1c3QgdXNpbmcgdGhlbSBhcyBhbiBleGFtcGxlKSBzdGVwIHVwIHRoZWlyIGdhbWUuIEdpdmUgdXMgdGhlIGxvd2VzdCByYWtlIGJhY2sgb2YgdGhlIGJpZyBuYW1lIHNpdGVzIGFuZCBnZXQgdGhlaXIgbWFya2V0aW5nIHRlYW0gdG8gcHVzaCB0aGlzIGFuZCB1c2UgaXQgYXMgYSBwbGF0Zm9ybSB0byBnZXQgdHJhZmZpYy4gSSB0aGluayBpdCB3aWxsIGJlIHRoZSBsYXN0IG5haWwgaW4gY29mZmluIGZvciBzdGFycyBiZWNhdXNlIGxldHMgZmFjZSBpdCwgdGhleSBkb24gZ2l2ZSBhICBhYm91dCB0aGVpciBwbGF5ZXJzIHRoZXkganVzdCB3YW50IG1vcmUgJCQkLi4gClRoaXMuIApMZWFybiB0byBzdG9wIHNldHRpbmcgeW91ciBwaWVjZXMgdXAgaW4gcGlucyBhbmQgZm9ya3MgeW91ciBlbmVteSBjYW4gdGFrZSBhZHZhbnRhZ2Ugb2YgKG9yIGF0IGxlYXN0IHNlZSB0aGVtIGNvbWluZykuIEZvY3VzIG9uIGltcHJvdmluZyB5b3VyIGJvYXJkIHZpc2lvbiB1bnRpbCB5b3Ugc3RvcCBnZXR0aW5nIGJsaW5kc2lkZWQgYnkgcGlucyBhbmQgZm9ya3MuIExlYXJuIHNvbWUgb2YgdGhlIGJhc2ljIGVuZGdhbWUgbWF0aW5nIHBhdHRlcm5zIHNvIHlvdSBrbm93IGhvdyB0byBjaGVja21hdGUgeW91ciBvcHBvbmVudCBpZiB5b3UgZ2V0IHRoZXJlIChLK1EgdnMuIApGcm9tIGFuY2llbnQgcHJvcGhldHMgdG8gbW9kZXJuIHBoeXNpY2lzdHMgYW5kIGV2ZXJ5dGhpbmcgaW4gYmV0d2VlbiwgaXQncyBhbGwganVzdCBvbmUgc3Rvcnkgd2l0aCBjb3VudGxlc3MgZXhwcmVzc2lvbnMuIFdoZW4gdGhlIFVuaXZlcnNlIGlzIHNlZW4gZnJvbSBhIGhvbG9ncmFwaGljIHN0YW5kcG9pbnQsIGl0IG1ha2VzIHNlbnNlIHdoeSBhbnkgb25lIGFzcGVjdCBjYW4gYmUgdXNlZCB0byB1bmRlcnN0YW5kIHRoZSB3aG9sZSBvZiBpdC4gCkJlY2F1c2UgcG9seWdyYXBoIG1hY2hpbmVzIGFyZSBidWxsc2hpdCBwc2V1ZG9zY2llbmNlLCByZWFsbHkgbm90aGluZyBtb3JlIHRoYW4gdm9vZG9vIHByb3BzLiBUaGV5IGFyZSBiYXNlZCBvbiB0aGUgbm90aW9uIHRoYXQgdGhlcmUgaXMgYSAibGllIHJlc3BvbnNlIiB0aGF0IGNhbiBiZSBtZWFzdXJlZC4gQnV0IG5vIHN1Y2ggdGhpbmcgZXhpc3RzLCBpdCBwdXJlbHkgYSBwc2V1ZG8gc2NpZW50aWZpYyBteXRoLiBQb2x5Z3JhcGhzIGFyZSByZWFsbHkgbm90aGluZyBtb3JlIHRoYW4gY3J1ZGUgIm5lcnZvdXNuZXNzIGRldGVjdG9ycy4iIEJ1dCB0aGVyZSBhcmUgb3RoZXIgcmVhc29ucyBiZXNpZGVzIGx5aW5nIHRoYXQgYSBwZXJzb24gbWlnaHQgYmUgbmVydm91cy4KVGhlIEZOQiBhbHNvIHJlcG9ydGVkIHRoYXQgdml0YW1pbiBEIHRveGljaXR5IG1pZ2h0IG9jY3VyIGF0IGFuIGludGFrZSBvZiAxMCwwMDAgSVUvZGF5ICgyNTAgbWljcm9ncmFtcy9kYXkpLCBhbHRob3VnaCB0aGV5IGNvdWxkIHByb2R1Y2Ugbm8gcmVwcm9kdWNpYmxlIGV2aWRlbmNlIHRoYXQgMTAsMDAwIElVL2RheSBoYXMgZXZlciBjYXVzZWQgdG94aWNpdHkgaW4gaHVtYW5zIGFuZCBvbmx5IG9uZSBwb29ybHkgY29uZHVjdGVkIHN0dWR5IGluZGljYXRpbmcgMjAsMDAwIElVL2RheSBtYXkgY2F1c2UgbWlsZCBlbGV2YXRpb25zIGluIHNlcnVtIGNhbGNpdW0sIGJ1dCBub3QgY2xpbmljYWwgdG94aWNpdHkuCllldCBldmVuIGlmIHRoZSBUd2lsaWdodGVycyBib3RoZXIgdG8gc3RvcCBieSB0aGUgUm9tYW4gYmF0aHMgb3IgdGhlIEV0cnVzY2FuIGdhdGUsIHRoZSBzdG9yeSBvZiBFZHdhcmQgYW5kIEJlbGxhIGlzIHNvIGNvbXBlbGxpbmcsIHNvIGNvbXBsZXRlbHkgdGhyaWxsaW5nIGFuZCBlbW90aW9uYWxseSBzYXRpc2Z5aW5nLCB0aGF0IGl0IGlzIHdoYXQgZHJhd3MgImV2ZXJ5b25lIiB0aGlzIHBsYWNlLiB3aGVuIHB1c2hlZCBhIGJpdCBmdXJ0aGVyIG9uIHRoaXMsIHRoZSB0b3VyaXNtIG9mZmljZSB0b2xkIG1lIHRoYXQgVHdpbGlnaHQgc3BlYWtzIHByaW1hcmlseSB0byBjb3VwbGVzIGFuZCBmYW1pbGllcyBhbmQgdGhleSBhcmUgYWx3YXlzIGhldGVyb3NleHVhbCAoYWx0aG91Z2ggc29tZSBnYXkgbWVuIG1pZ2h0IHZpc2l0IG9jY2FzaW9uYWxseSB0byBzZWUgdGhlIGNpdHksIHRoZXkgZG8gbm90IHNob3cgdXAgZm9yIHRoZSBzcGVjaWFsIFR3aWxpZ2h0IHRoZW1lZCB0b3VycykuCldlbGwgdGhlcmUgaXMgbm90IG11Y2ggc3RyYXRlZ3kgZm9yIGNvcnZldHRlIGNsYXNzIGFuZCB5b3Ugc2hvdWxkIGFkdmFuY2UgcGFzcyB0aGUgdXNlZnVsbmVzcyBvZiBpdCBxdWl0ZSBmYXN0LiBBcyBmb3IgZnJpZ2F0ZSBjbGFzcywgc2N5dGhlIGlzIGEgc29saWQgZWFybHkgY2hvaWNlIGJ1dCBteSBmYXZvcml0ZSBpcyBzdGlsbCBoYW1tZXJoZWFkLiBKdXN0IG1ha2Ugc3VyZSB5b3UgaGF2ZSBnb29kIGZyb250YWwgZGVmZW5zZSBhbmQgYSBnb29kIHR1cm5pbmcgc3BlZWQuIFNpbmNlIHlvdSBhcmUgYWxyZWFkeSBhdCBsZXZlbCAxMywgc2F2ZSB1cCBmb3IgY3J1aXNlciBjbGFzcy4gSXRzIGEgYmlnIGRpZmZlcmVuY2UgaW4gY2FwYWJpbGl0aWVzIGNvbXBhcmVkIHRvIGZyaWdhdGUgY2xhc3MuIEFsc28gYSBnb29kIGVhcmx5IHRpcCBmb3IgbmV3IHBsYXllcnMgaXMgbm90IHRvIGJ1eSBtb2RpZmljYXRpb25zIGZvciB5b3VyIHNoaXBzIGJ1dCB0byBnZXQgbW9yZSBzbG90cyB0byBoYXZlIG1vcmUgc2hpcHMgdG8gcGxheSB3aXRoIHdoZW4gd2FpdGluZyBmb3Igb3RoZXJzIHRvIGJlIHJlcGFpcmVkLgpUaGUgcGFyayBtYW5hZ2VyIGhhc24ndCBjYWxsZWQgbWUgYWJvdXQgYW55IGhvbWVzIGZvciBzYWxlLCBidXQgd2Ugc3BvdHRlZCBhIGZvciBzYWxlIHNpZ24sIGFuZCBhIGZldyB3aGF0IGxvb2tlZCB0byBiZSBhYmFuZG9uZWQgaG9tZXMsIHRoZXJlIHdhcyBhIG11c3RhcmQgY29sb3JlZCBtb2JpbGUgaG9tZSBvbiBhIGNvcm5lciBsb3QgdGhhdCBsb29rZWQgZ3JlYXQgYW5kIHdhcyBmb3Igc2FsZS4gSXQgd2FzIGxhdGUgYW5kIHRoZSBsaWdodHMgd2VyZSBvbiwgc28gd2UgZGlkbid0IHdhbnQgdG8gc2NhcmUgYW55b25lIGJ5IGdldHRpbmcgb3V0IHRvIHNlZSB0aGUgIG9uIHRoZSBzaWducy4gSSBjaGVjayBtb2JpbGUgaG9tZSBzYWxlcyBldmVyeWRheSBpbiBvdXIgYXJlYSwgdGhlc2UgYXJlIG5vdCBsaXN0ZWQgYW55d2hlcmUhLiAKUGVvcGxlIGNhbiBwbGF5IHRoZWlyIGZhdm9yaXRlIGdhbWVzIGF0IGFueSBnaXZlbiB0aW1lLiBUaW1lIGlzIG5vIGxvbmdlciBhIGJhcnJpZXIgdG8gcGxheWluZyB0aGUgZ2FtZS4gWW91IGNhbiBhbHdheXMgZmluZCBhIHBva2VyIHJvb20gd2l0aCBwbGF5ZXJzIGFsd2F5cyBhbmQgZ2V0IGdvaW5nLiBFdmVuIHRob3VnaCB0aW1lIHZhcmllcyBmcm9tIG9uZSBnZW9ncmFwaGljYWwgbG9jYXRpb24gdG8gYW5vdGhlciwgaXQgaXMgbm90IGEgYm90aGVyIGFzIHlvdSBjYW4gYWx3YXlzIGZpbmQgcGxheWVycyB3aG8gc2hhcmUgeW91ciB0aW1lIHpvbmUgYW5kIGVuam95IHRoZSBnYW1lLiBUaGlzIGlzIGEgbWFqb3IgYWR2YW50YWdlIGNvbXBhcmVkIHRvIHJlYWwgY2FzaW5vcyB0aGF0IGhhdmUgb3BlcmF0aW5nIGhvdXJzLgpJbiB0aGUgRWFzdCwgdGhlIG1hbnRyYSBpcyAicHVyaWZ5IHlvdXJzZWxmIiBvciAicHVyaWZ5IHlvdXIgcWkiLiBWZXJ5IGdvb2QgYWR2aWNlLiAKTm8gdHJ1ZS4gSWYgeW91IGFyZSBub3QgZ29pbmcgdG8gcmVtb3ZlIHRoZSBlbnRpcmUgcmVjb3JkLCB5b3UgbXVzdCBmdWxseSBkZSBpZGVudGlmeSB0aGUgZGF0YSB5b3UgaGF2ZSBzbyB0aGF0IGl0IGNhbm5vdCBiZSB0aWVkIGJhY2sgdG8gdGhlIGlkZW50aWZpZWQgaW5kaXZpZHVhbC4gCkkgZG9uIHRoaW5rIEkgc2VlbiBhbnlvbmUgY29uZmlkZW50IHRoYXQgdGhlIHBlYWNlZnVsIHJvdXRlIHdvdWxkIGJlIHN1Y2Nlc3NmdWwsIGVzcGVjaWFsbHkgd2hlbiBhbmRyb2lkcyBzdGFydCBnZXR0aW5nIHNob3QgYXQgZHVyaW5nIEZyZWVkb20gTWFyY2guIEkgYWxzbyBkbyBub3Qga25vdyBhIHNpbmdsZSBwZXJzb24gd2hvIHRob3VnaHQgaXQgd2FzIGJlc3QgdG8gc2hvb3QgU2ltb24uIFNvIG1heWJlIHdlIGFyZSBqdXN0IGNvbWluZyBmcm9tIHR3byBlbnRpcmVseSBkaWZmZXJlbnQgbWluZHNldHMsIGNvbnNpZGVyaW5nIGl0IHBhaW5lZCBteXNlbGYgdG8ga2lsbCBoaW0gZm9yIDEwMCUgYW5kIHRoZSBmYWN0IHRoYXQgeW91IG9yIHlvdXIgZnJpZW5kIGNob3NlIHRoYXQgb24geW91ciBmaXJzdCBwbGF5dGhyb3VnaCBiYWZmbGVzIG1lLi4gCkNlYXNlIHdvcmsgaW1tZWRpYXRlbHkgYW5kIGVuc3VyZSB0aGF0IG90aGVyIHBlb3BsZSB3b3JraW5nIGluIHRoZSBhcmVhIGFyZSBub3RpZmllZCBvZiBhIHBvc3NpYmxlIHJpc2sgKG9yIG5vdGlmeSB0aGUgU3VwZXJ2aXNvciB0byBwYXNzIHRoaXMgaW5mb3JtYXRpb24gb24gdG8gb3RoZXJzKS4gQ29udGFjdCB0aGUgQ2FtcHVzIFNlcnZpY2VzIE1haW50ZW5hbmNlIFNlcnZpY2UgQ2VudHJlLCB3aG8gd2lsbCBjaGVjayB0aGUgYXNiZXN0b3MgcmVnaXN0ZXIuIApKYW5ldCBNYWNFYWNoZXJuLiAKV2hpbGUgZXZlcnlvbmUgbG9va2luZyBmb3IgYW4gZWRnZSwgcG9rZXIgc29mdHdhcmUgYW5kIHRvb2xzIGFyZSBiZWNvbWluZyBhIGJpZyBtYXJrZXQuIERpZmZlcmVudCB0b29scyBjYW4gaGVscCB3aXRoIGRpZmZlcmVudCBnYW1lIHR5cGVzLiAKV2hhdCBhcmUgaGlnaCBtZW1vcnkgUkZJRCBjaGlwcz8KVWdoIEkgcGxheWVkIHdpdGggYSBndXkgYSBmZXcgd2Vla3MgYWdvIHRoYXQgTkVWRVIgT05DRSBmb2xsb3dlZCB0aGUgYWN0aW9uIGVub3VnaCB0byBrbm93IGl0IHdhcyBoaXMgdHVybi4gCkp1c3Qgbm90IHN1cmUgd2hhdCB0byBkbyBhcyBhIHJlaW4gbGVhZGluZyBteSB0ZWFtIGFuZCBJIGdldCBmcm96ZW4gdGhyb3VnaCB0aGUgc2hpZWxkIGluIG9uZSBzZWNvbmQuWmVyb0NpaXBoZVIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvTW9kIGFuZCBwb3N0ZXIgaGVyZSEgSSBnZXQgd2hlcmUgeW91IGNvbWluZyBmcm9tLiBUaGUgc2NvcGUgb2YgdGhlIHN1YnMgZGVmaW5pdGlvbiBvZiBzbGljZSBvZiBsaWZlIGlzIGEgYml0IHdpZGVyIHRoYW4gd2hhdCB5b3Ugd291bGQgYXNzb2NpYXRlIHdpdGggdHJhZGl0aW9uYWwgQW5pbWUgZGVwaWN0aW9ucy4gClRoZSBuYXR1cmFsIGhpc3Rvcnkgb2YgYSBsdW1iYXIgaGVybmlhIG9mIHRoZSBudWNsZXVzIHB1bHBvc3VzIChITlApIGlzIG5vdCBmdWxseSBrbm93biBhbmQgY2xlYXIgaW5kaWNhdGlvbnMgZm9yIG9wZXJhdGl2ZSBpbnRlcnZlbnRpb24gY2Fubm90IGJlIGVzdGFibGlzaGVkIGZyb20gdGhlIGxpdGVyYXR1cmUuIFNldmVyYWwgc3R1ZGllcyBoYXZlIHNob3duIHRoYXQgdGhlIGxhcmdlc3QgZGlzY3MgYXBwZWFyIHRvIGhhdmUgdGhlIGdyZWF0ZXN0IHRlbmRlbmN5IHRvIHJlc29sdmUuIFRoZSBhaW0gb2YgdGhpcyBzdHVkeSB3YXMgdG8gaW52ZXN0aWdhdGUgd2hldGhlciBtYXNzaXZlIHByb2xhcHNlZCBkaXNjcyBjYW4gYmUgc2FmZWx5IG1hbmFnZWQgY29uc2VydmF0aXZlbHkgb25jZSBjbGluaWNhbCBpbXByb3ZlbWVudCBoYXMgb2NjdXJyZWQuCkxvdmluZyBmYXRoZXIgb2YgTHluZGEgKFJpY2spIFNhdW5kZXJzLCBFZG1vbnRvbjsgTWljaGFlbCAoV2FuZGEpLCBIb3VzdG9uOyBMb3JpIChNYXVyaWNlKSBPJ0dvcm1hbiwgTG9zIEFuZ2VsZXM7IE1hcmsgKFBoaWxvbWVuYSksIEhhbGlmYXggYW5kIENocmlzIChKdWxpYSksIFBvcnQgQ3JlZGl0LiBEZWFyIGdyYW5kZmF0aGVyIG9mIEtlbmRhbGwsIE1pdGNoZWxsLCBEYXZpcywgVGVyeW4sIFRyaXN0YW4sIFRhbGlzLCBXYW5kYSwgTmljaG9sYXMsIFRyZXZvciwgSmVzc2ljYSwgQ2hhcmxvdHRlLCBKb3NlcGgsIE1hcmdhcmV0IGFuZCBDbGFpcmUsIGFuZCBncmVhdCBncmFuZGZhdGhlciBvZiBLYXlhbCwgT2xpdmVyLCBNYXJ5IEphbmUsIEFtZWxpYSBhbmQgV2VzbGV5LiBMZWUgd2FzIHByZWRlY2Vhc2VkIGJ5IGhpcyBzaXN0ZXIsIEJhcmJhcmEsIGFuZCBpcyBzdXJ2aXZlZCBieSBoaXMgYnJvdGhlciBUZXJyeSBhbmQgaGlzIGJyb3RoZXIgYW5kIHNpc3RlciBpbiBsYXcsIFdpbGxpYW0gYW5kIE11cmllbCBIYXJ3b29kLiAKSWYgSSBoYWQgYSBkb2xsYXIgZm9yIGV2ZXJ5IHRpbWUgSSBkaWQgbW9yZSB0aGFuIDQwJSBvZiB0aGUgZHBzIG9uIGEgYm9zcyBmaWdodCBqdXN0IHdpdGggc2hhcmRzLCB3YWxsIG9mIGVsZW1lbnRzLCBhbmQgaGVhdnkgYXR0YWNrcyB3aGlsZSB0aGUgZHBzIHN0b29kIG9uIHRoZSBmYXIgc2lkZSBvZiB0aGUgcm9vbSBhbmQgc3BhbW1lZCBzbmlwZSwgSSBjb3VsZCBidXkgYSAyMTAwMCBjcm93biBwYWNrLgpUaGV5J2xsIHJlY29yZCBzb21lb25lJ3Mgd2luIGFzIGEgamFja3BvdCwgYnV0IGl0J3Mgb25lIG1hY2hpbmUgb3V0IG9mIDMwLiBUaGV5IGRvbid0IGdpdmUgYSBzIC4gVGhlIHJvcnQgaXMgdGhleSB0YWtlIDkwIHBlciBjZW50LiIuIApJQU5BTCwgYnV0IGluIHRoZXNlIGNpcmN1bXN0YW5jZXMgaGUnZCBoYXZlIHplcm8gY2FzZSBmb3IgdGhhdC4gJ0dyYW5kcGFyZW50cyByaWdodHMnIChhcyBJIHVuZGVyc3RhbmQgdGhlbSkgd291bGQgYmUgZm9yIHZpc2l0YXRpb24gdW5kZXIgc3BlY2lhbCBjaXJjdW1zdGFuY2VzICBsaWtlIGlmIFBhcmVudCBBIGRpZXMgYW5kIFBhcmVudCBCIHdvbid0IGxldCBHcmFuZHBhcmVudHMgb24gQSdzIHNpZGUgc2VlIHRoZSBraWRzIGFueW1vcmUuIEdyYW5kcGFyZW50cyBpbiB0aGF0IGNhc2UgY291bGQgYXJndWUgZm9yIHZpc2l0YXRpb24gYnkgc2F5aW5nIHRoZXkgaGF2ZSBwcmVleGlzdGluZyByZWxhdGlvbnNoaXAgd2l0aCBncmFuZGtpZHMgYW5kIGl0J2QgYmUgaW4gZ3JhbmRraWRzIGJlc3QgaW50ZXJlc3QgdG8gY29udGludWUgdG8gc2VlIHRoZW0gc29tZXRpbWVzLiAKTm93LCBvbnRvIHRoZSBraWRzLiBEYXZpcyBsb29rcyBleGNpdGluZy4gSSB3b3VsZCBsb3ZlIHRvIHNlZSBzb21lIHNwZWVkIGZyb20gdGhlc2UgR2lhbnRzIHRlYW1zIGFuZCBoZSBjZXJ0YWlubHkgYnJpbmdzIGl0LiAKSXQgY29tYmluZXMgc29tZSBtYW51YWwgdGhlcmFweSB3aXRoIG90aGVyIHRoaW5ncy4gCk1yIEZsb3JlbmNlIHNhaWQgaGUgd2FzIHVuYXdhcmUgb2Ygd2hldGhlciBvdGhlciBOb3J0aCBFYXN0IGNvdW5jaWxzIHdvdWxkIGpvaW4gdGhlIGFsbGlhbmNlLgpNLiAoNSwzODIgc3EuIApJIGtub3csIEkga25vdy4gQW5kIGdpcmxzIGhhdmUgYmVlbiBtYWRlIHRvIGZlZWwgc2hhbWUgYW5kIGRpc2d1c3Qgd2l0aCB0aGVpciBib2RpZXMuIApGb3IgdGhlIG9uZXMgdGhhdCBzYWlkIHRoYXQgbXkgc2hpcnQgd2FzIHRvbyB0aWdodCwgaXQgZGlkbid0IGZlZWwgbGlrZSBpdCwgYnV0IEknbGwgdGFrZSB5b3UgY29uY2VybnMgYW5kIHB1dCB0aGVtIGluIHRoZSBzdWdnZXN0aW9uIGJveCEhIEZvciB0aG9zZSB0aGF0IGxvdmVkIG15IGJlYXJkLCBUSEFOSyBZT1UhISBJJ3ZlIGJlZW4gd29ya2luZyBvbiBpdCBmb3IgYSB3aGlsZSBhbmQgd2FudCB0byBjb250aW51ZSBncm93aW5nIGl0IHdoaWxlIHRyeWluZyB0byBrZWVwIGl0IHByb2Zlc2lvbmFsIGZvciBteSBqb2IuLiAKIkV2ZW4gdGhvdWdoIGl0IG9yZ2FuaXNlZCBieSB0aGUgVmlldG5hbSB2ZXRzLCB3ZSBhbGwgdmV0ZXJhbnMgYW5kIHdlIGFsbCBwcmV0dHkgbXVjaCBkb25lIHRoZSBzYW1lIHN0dWZmLCIgTXIgSGFobiBzYWlkLgpSZXRvdWNoIHNraW4gbGlrZSBhIHBybyB3aXRoIHRoZXNlIFBob3Rvc2hvcCByZXRvdWNoaW5nIGFjdGlvbnMgdGhhdCB3aWxsIGxldCB5b3UgaGVhbCwgbWF0dGlmeSwgYW5kIGFpcmJydXNoIHNraW4gd2l0aCBvbmUgY2xpY2suIEl0IGFsc28gaW5jbHVkZXMgcmV0b3VjaGluZyBhY3Rpb25zLiAKVGhlIFJpc2Ugb2YgdGhlIFdvcmxkJ3MgTW9zdCBQb3dlcmZ1bCBNZXJjZW5hcnkgQXJteQpZb3UgY2FuIHN0YXkgaW4gdGhlIHNob3dlciBhbmQgcHJheSwgbWVkaXRhdGUgb3IgdmlzdWFsaXplIGEgaGFwcHksIGhlYWx0aHkgYW5kIHJlbGF4ZWQgeW91Li4gCkRvd25sb2FkIE1pbmVjcmFmdDogUG9ja2V0IEVkaXRpb24gQVBLIGZvciBBbmRyb2lkLCAxMDAlIHNhZmUgYW5kIHZpcnVzIGZyZWUgLiBNaW5lY3JhZnQ6IFBvY2tldCBFZGl0aW9uIGlzIGEgZnJlZSBhbmQgZnVuIFBlcnNvbmFsaXphdGlvbiBBcHBzLiAKRm9yIGRheSB0byBkYXkgZGV0YWlscywgc3VjaCBhcyB3aGF0IGZvb2Qgc2hvdWxkIGJlIHNlcnZlZCBhbmQgd2hpY2ggbGFuZ3VhZ2Ugc2hvdWxkIGJlIHVzZWQsIG1hbnkgb2YgdGhlIGNhc3QgYW5kIGNyZXcgbWVtYmVycywgYnV0IGVzcGVjaWFsbHkgS3dhbiwgd2VyZSB0cmVhdGVkIGFzIG9uIHNldCBleHBlcnRzLiAKVGhpcyB3aWxsIGxldCB5b3UgbGVhcm4gdGhlIFNhbmRzdG9ybSBzcGVsbC4gCkl0IG5vdCB0aGF0IGV2ZXJ5IHNpbmdsZSBNTE0gaGFzIHByb2R1Y3RzIHRoYXQgYXJlIGluaGVyZW50bHkgdGVycmlibGUsIGl0IHRoZSB3YXkgdGhleSBzY2FtIHRoZWlyIGh1bnMgYW5kIHRoZW4gZW5jb3VyYWdlIGZ1cnRoZXIgc2NhbW1pbmcsIGFuZCBhbHNvIGxpZSBhYm91dCBjdXJpbmcgaWxsbmVzc2VzIG9yIHdlaWdodCBsb3NzIHdoaWNoIHRha2VzIGFkdmFudGFnZSBvZiB0aGUgdnVsbmVyYWJsZSBhdCBiZXN0LCBhbmQgZW5jb3VyYWdlcyBwb29yIG1lbnRhbCBhbmQgcGh5c2ljYWwgaGVhbHRoIGF0IHdvcnN0LiAKSXQgc3Vja3MgdGhhdCBwZW9wbGUgZG9uIGNhcmUgaG93IHlvdSBmZWVsaW5nLCB0aGF0IHdoZW4geW91IGZlZWxpbmcgZG93biwgeW91IGhhdmUgdG8gcHV0IG9uIGEgc3Ryb25nIGZhY2UgdG8gInRvdWdoZW4gdXAiLi4gCkluIGZhY3QsIHNoZSBtYWRlIHRoZSBmaW5hbCB0YWJsZSBhbmQgZW5kZWQgdXAgZmluaXNoaW5nIGluIHRoaXJkIHBsYWNlIGZvciBBVSQ2MjVLLiAKSSBjaG9rZSwgZGVzcGVyYXRlbHkgdHJ5aW5nIHRvIHB1bGwgYWlyIGludG8gbXkgbHVuZ3MuIApJbiBjb3VudHJpZXMgd2l0aCBhIHdlbGZhcmUgc3lzdGVtLCB5b3Ugd291bGQgZXhwZWN0IHBlb3BsZSB0byBiZSBtb3JlIG9wZW4gYW5kIGdlbmVyb3VzICAgeW91IHNlZSBhIGxvdCBtb3JlIFlPTE8gYW5kIHZvbHVudGVlcmluZywgZXNwZWNpYWxseSBvdmVyc2VhcyAoc29tZSBvZiBpdCBjb21lcyBmcm9tIHdoaXRlIGd1aWx0IGJ1dCB0aGF0IGFub3RoZXIgc3RvcnkpLiBJdCBwYXJ0bHkgYmVjYXVzZSB0aGV5IGtub3cgdGhleSBjYW4gZG8gd2hhdGV2ZXIgdGhleSBsaWtlLCBub3QgaGF2ZSBhbnkgcGxhbnMgZm9yIGEgcmFpbnkgZGF5LCBhbmQgaW4gdGhlIGVuZCB0aGUgZ292ZXJubWVudCB3aWxsIGJlIHRoZXJlIHRvIHRha2UgY2FyZSBvZiB0aGVtLiBUaGVyZSBpcyBhbiBlbnRpdGxlbWVudCBtZW50YWxpdHkuCkkgcmVtZW1iZXIgZmVlZGluZyBteSBkYXVnaHRlciBhbmQgcHV0dGluZyBoZXIgZG93biB0byBuYXAgYW5kIG15IGh1c2JhbmQgZm91bmQgbWUgY3J5aW5nIGJlY2F1c2UgSSBrbmV3IGluIGFib3V0IHRocmVlIGhvdXJzIEkgd2FzIGdvaW5nIHRvIGhhdmUgdG8gZ28gdGhyb3VnaCBpdCBhZ2Fpbi4gSGUgaW1tZWRpYXRlbHkgd2VudCBvdXQgYW5kIGJvdWdodCBhIHB1bXAgYW5kIG5pcHBsZSBzaGllbGRzLiBJdCB3YXMgc3RpbGwgYSBwYWluZnVsIHByb2Nlc3MgYnV0IEkgYXQgbGVhc3QgZ290IHNvbWUgcmVsaWVmLi4gCkkgZ29ubmEgaGF2ZSB0byBhZ3JlZSB3aXRoIHRoZSBpZGVhIG9mIHBsYW5uaW5nIHNwZWVkaW5nIHlvdSB1cCBtb3JlIHRoYW4gYW55dGhpbmcgZWxzZS4gR2V0IGluIHRoZSBoYWJpdCBvZiBhbHdheXMgdGhpbmtpbmcgc2V2ZXJhbCBzdGVwcyBhaGVhZCBhbmQgeW91IGdvIGZhci4gWWVzLCBoYXZpbmcgc2tpbGxzIGRpYWxlZCBpbiB3aWxsIG1ha2UgaXQgc28gdGhhdCB5b3UgZG9uIGhhdmUgdG8gdGhpbmsgc28gbXVjaCBhYm91dCB3aGF0IHlvdSBkb2luZywgYnV0IHdpdGggdGhhdCBleHRyYSBicmFpbiBzcGFjZSB5b3Ugc2hvdWxkIGJlIHBsYW5uaW5nLiBBbnl0aW1lIHlvdSBnb2luZyBhbnl3aGVyZSBvdXRzaWRlIG9mIHlvdXIgc3RhdGlvbiB0aGluayBhYm91dCBhbnl0aGluZyB5b3UgZ29pbmcgdG8gbmVlZCBmb3IgYW55IG9mIHlvdXIgbmV4dCBzZXZlcmFsIHRhc2tzIHdoZXJlIHlvdSBnb2luZyBvciBvbiB0aGUgd2F5LiBUaGluayBhYm91dCB0aGUgdGltaW5nIG9mIGV2ZXJ5dGhpbmcsIHdoYXQgc29ydHMgb2YgZXF1aXBtZW50IHlvdSBuZWVkLCB3aGF0IHNwYWNlcyBhcmUgYXZhaWxhYmxlIGZvciB5b3UgdG8gZG8gZXZlcnl0aGluZywgYW5kIHBsYW4gb3V0IGFzIG11Y2ggb2YgeW91ciBkYXkgYXMgcG9zc2libGUuIEJlIHN1cmUgdG8gcGxhbiBvbiB0aGluZ3Mgbm90IHdvcmtpbmcgb3V0IGFzIHdlbGwsIGl0IG5ldmVyIGRvZXMgcGVyZmVjdGx5LgpUYWtlIGNhcmUgb2YgdGhlIGdvbGYgYmFsbHMgZmlyc3QgdGhlIHRoaW5ncyB0aGF0IHJlYWxseSBtYXR0ZXIuIFNldCB5b3VyIHByaW9yaXRpZXMuIFRoZSByZXN0IGlzIGp1c3Qgc2FuZC4iLiAKTm90IHRoYXQgdGhlIGF1ZGllbmNlIGl0c2VsZiBsYWNrZWQgYW55IHN0YXIgcG93ZXIuIApJZiBJIGNvdWxkIGdpdmUgeW91IGFueSBhZHZpY2UgYWZ0ZXIgc2VlaW5nIGhlciBzdHJ1Z2dsZSwgaXQgd291bGQgYmUgdG8gY29udGludWUgdG8gc3RyZW5ndGhlbiB5b3VyIGNvcmUgbXVzY2xlcyBhbmQgdGhlIG11c2NsZXMgYXJvdW5kIHlvdXIgbHVuZ3Mgd2l0aCB5b2dhIGFuZC9vciBvdGhlciBraW5kIG9mIHN0cmVuZ3RoIGFuZCBzdHJldGNoIHRyYWluaW5nLiBTaGUgd2FpdGVkIHRvbyBsb25nIHRvIGRvIGFueSByZWFsIHN0cmVuZ3RoIGJ1aWxkaW5nLCBhbmQgbm93IGl0IHJlYWxseSBjYXVzaW5nIGhlciBwcmV0dHkgc2V2ZXJlIGJyZWF0aGluZyBwcm9ibGVtcy4gU2hlIGlzIGFsd2F5cyB0ZWxsaW5nIG1lIHRvIGtlZXAgdXAgd2l0aCBteSBmaXRuZXNzLCBzbyBJIGd1ZXNzIGkganVzdCBwYXNzaW5nIHRoYXQgb24gdG8geW91IWtyaXNzeXBhbnRzNDAwMCAgNyBwb2ludHMgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvLiAKSSBmZWxsIGluIGxvdmUgd2l0aCBFcmtpbiBLb3JheSBpbW1lZGlhdGVseSB3aGVuIEkgc2F3IHRoaXMgdmlkZW8gb2YgaGltIHBlcmZvcm1pbmcgdGhlIHNvbmcgQ2VtYWxpbSwgaGlzIGh5cG5vdGljIHZvY2FscywgdGhlIGR1c3R5IHBzeWNoZWRlbGljIHNvdW5kLCBoaXMgbGFpZCBiYWNrIHN3YWdnZXIuIFRoZSBnb29nbGUgc3RvcmUgaGFzIHRoaXMgYWxidW0gbGlzdGVkIGFzIE1lc2FmZWxlciBhbmQgaXQgYXBwYXJlbnRseSBzaG9ydCBhIHNvbmcgdGhhdCBvbiB0aGUgb3JpZ2luYWwgY3V0IChkaWdpdGFsIGFnZSB3b2VzKSBhbmQgaXQgc2VlbXMgdG8gYmUgdGhlIG9ubHkgYWxidW0gb24gdGhlcmUgdGhhdCBtb3N0bHkgY29tcGxldGUsIHRoZW4gaXQganVzdCBjb21waWxhdGlvbnMsIHdoaWNoIGlzIGZydXN0cmF0aW5nLCBidXQgYW55d2F5cy4gVGhlIG1hbiBpcyBhIHByZXR0eSBzaWduaWZpY2FudCBkaXNjb3ZlcnkgZm9yIG1lLCBtdXNpYyA3MHMgcHN5Y2hlZGVsaWMgbXVzaWMgZnJvbSBUdXJrZXkgaGFzIG5vIGNob2ljZSBidXQgdG8gYmUgaW50ZXJlc3RpbmcsIGFuZCBoZSBicmluZ3MgYSBzZWFtbGVzcyBibGVuZCBvZiBUdXJraXNoIGZvbGsgd2l0aCBwc3ljaGVkZWxpYyByb2NrLiBXb3cuIEkgd2FzIGJsb3duIGF3YXkuIE15IGJyb3RoZXIga2VwdCB0ZWxsaW5nIG1lIGhvdyBnb29kIHRoZXkgd2VyZSwgYW5kIEkgZGlkbiBiZWxpZXZlIGhpbS4KKExvdmVqb3kgNCBlbWVyZ2VkIHZpY3RvcmlvdXMuKS4gCkhlYXJ0d2FybWluZyB2aWRlbyBzaG93cyByZWZ1Z2VlIGtpZHMgZXhwZXJpZW5jaW5nIGZpcnN0IENhbmFkaWFuIHNub3dmYWxsCkkgZG9uIGtub3cgaG93IGxvbmcgaXQgdG9vay4gCiAgVGhlcmUgaXMgYSBsaW5rIHRvIGNhcmQgdHJpY2tzIGJlbG93IChpIHRoaW5rKSA3LiBJIGhvcGUgaSBoZWxwZWQgICB0aGUgZGVjayBpcyB0aGUgQmxhY2sgVGlnZXIgR2FmZiBEZWNrLCBpdCBpcyBhIGdpbW1pY2tlZCBkZWNrLCBhbmQgeW91IHBsYWNlIGdpbW1pY2tlZCBjYXJkcyBpbnNpZGUgYSByZWFsIGRlY2sgb2YgYmxhY2sgdGlnZXJzIChtYWRlIGJ5IGVsbHVzaW9uaXN0ICAgb24gZUJheSBmb3IgNyAgIDgpIGFuZCB0aGVuIHBlcmZyb20gc2xlaWdodCBvZiBoYW5kIHRvIG1ha2UgcGVvcGxlIHRoaW5rIHRoYXQgeW91IGNhbiBkbyBjYXJkIG1hZ2ljIDopIEEgQm9udXMgU3RlcCBJZiBZb3UgV2lsbCAgIHlvdSBjYW4gZ28gdXAgdG8gcGVvcGxlIHdoaWNoIGEgcmVhbCBkZWNrIHdpdGggZ2ltbWlja2VkIGNhcmRzIGluIGFuZCBzaG93IHRoZW0gdHJpY2tzLCBjb3VsZCBiZSBwZW9wbGUgeW91IGtub3cgYW5kIGNvdWxkIGJlIGNvbXBsZXRlIHN0cmFuZ2VycyAuLiAKQnV0IHdoaWxlIGdvb2Qgc3VycHJpc2VzIGRlbGlnaHQsIGJhZCBzdXJwcmlzZXMgY2F1c2UgYW54aWV0eS4gCkl0IGlzIGFzIGxpdmVhYmxlIGFzIHRoZSBncm91bmQgZmxvb3Igb2YgdGhlIGhvdXNlLiAKUmlnaHQgYWZ0ZXIgSGUgc21vdGUgYWxsIHRob3NlIHVuY29uc3RpdHV0aW9uYWwgYW5kIHVsdGltYXRlbHkgdW5DaHJpc3RpYW4gc29ydHMgd2hvIHdhc3RlZCB0aW1lIGFuZCBtb25leSBvbiBoYXRlIHJhdGhlciB0aGFuIGxvdmUuLiAKVG9wIFRlY2ggQXQgQ0VTIDIwMTZDRVMgMjAxNlRoZSBuZXcgQ2hldnJvbGV0IEJvbHQsIGEgbG9uZyByYW5nZSBhbmQgYWZmb3JkYWJsZSBlbGVjdHJpYyB2ZWhpY2xlIGdvaW5nIGludG8gcHJvZHVjdGlvbiB0aGlzIHllYXIsIGlzIHVudmVpbGVkIGF0IHRoZSBrZXlub3RlIHNwZWVjaCBvZiBHZW5lcmFsIE1vdG9yJ3MgKEdNKSBDaGFpcm1hbiBhbmQgQ0VPIE1hcnkgQmFycmEgKG5vdCBpbiBwaG90byksIEphbnVhcnkgNiwgMjAxNiBhdCB0aGUgQ0VTIDIwMTYgQ29uc3VtZXIgRWxlY3Ryb25pY3MgU2hvdyBpbiBMYXMgVmVnYXMsIE5ldmFkYS4gVGhlIEJvbHQgRVYgY2FuIHJ1biAyMDAgbWlsZXMgd2l0aCBvbmUgY2hhcmdlIGFuZCB3aWxsIGNvc3QgYXBwcm94aW1hdGVseSBVU0QgMzAsMDAwIGRvbGxhcnMgYWZ0ZXIgaW5jZW50aXZlcy4gKFNPUEhJRSBFU1RJRU5ORS9BRlAvR2V0dHkgSW1hZ2VzKS4gCkluIGFkZGl0aW9uIHRvIHNlZWtpbmcgcmVjb3JkcyBmcm9tIERvdWdoZXJ0eSwgZmVkZXJhbCBpbnZlc3RpZ2F0b3JzIHNvdWdodCBkb2N1bWVudHMgcmVsYXRlZCB0byB0aGUgdW5pb24ncyBwcmVzaWRlbnQsIHR3byBleGVjdXRpdmUgYm9hcmQgbWVtYmVycywgYW5kIHRocmVlIGJ1c2luZXNzIGFnZW50cy4KSSB0aGluayBpdCBtb3JlIGxpa2VseSB0byBkbyB3aXRoIGhvdyBub3RpZmljYXRpb24gc3lzdGVtcyBzaG9ydGVuIGxvbmcgbWVzc2FnZXMuIE5vdGlmaWNhdGlvbiBzeXN0ZW1zIG5lZWQgdG8ga25vdyBob3cgbWFueSBjaGFyYWN0ZXJzIHRoZXkgZGlzcGxheSBiZWZvcmUgdGhleSB0cnVuY2F0ZSB0aGUgbWVzc2FnZSBhbmQgYWRkIGEgIi4iIHNvIHRoYXQgbG9uZyBtZXNzYWdlcyBkb24gb3ZlcmZsb3cgZnJvbSB3aGVyZSB0aGV5IHN1cHBvc2VkIHRvIGJlLgpKdW5pIDIwMTAuIApNeSBwYXJlbnRzIGFjdHVhbGx5IHdhbnQgbWUgdG8gYXBwbHkgZm9yIGJpb2xvZ3kgaW50ZXJuc2hpcHMsIGJ1dCByaWdodCBub3cgSSBqdXN0IGJlZW4gbG9va2luZyBpbnRvIGEgZmV3IGpvdXJuYWxpc20gb25lcy4gSG9wZWZ1bGx5IEkgZG9uIHNjcmV3IG15c2VsZiBhbmQgZW5kIHVwIHdpdGggbm90aGluZyBiZWNhdXNlIEkgZG9uIGFwcGx5IHRvIGVub3VnaC4uIAoiVGhlcmUgaXMgYSBodWdlLCBlc3RhYmxpc2hlZCBjdXN0b21lciBiYXNlIHRoYXQgc3RpbGwgd2FudHMgdG8gZ2FtYmxlLiAKT3VyIHBvc3Rpbmcgb2YgdGhpcyBsaW5rOiA0MiBEb3VnbGFzIEFkYW1zIFF1b3RlcyB0byBMaXZlIEJ5IGdhcm5lcmVkIDIuMmsgdmlld3Mgb24gRkIuICdIZXksJyB3ZSB0aG91Z2h0LiAKSW4gdGhlIGNoYW9zLCBJIGxvc2UgdGhlIGdyZXkgbXVzdGFjaGUgZ3V5LiAKU29tZXRpbWVzIEkgZG91YmxlIHdyYXAgdGhlIHRodW1iIGZvciBhIGphbW1lZCB0ZW5kb24sIHNvbWV0aW1lcyBJIHdyYXAgdGhlIHdyaXN0IGEgZmV3IGV4dHJhIHRpbWVzIGlmIEkgd29ya2luZyBvbiBob29rcywgbWF5YmUgSSBkb24gbmVlZCB0byB3cmFwIHRoZSBrbnVja2xlcyBtdWNoIGF0IGFsbC4gCllvdSB3ZXJlIHN1Y2ggYW4gYW1hemluZyBidW5ueS4gCkl0IHdhcyBhIHBlcnNvbmFsICdmYW1pbHknIHZpc2l0IHRoYXQgbWVkaWEgaHlwZWQgYmV5b25kIHByb3BvcnRpb25zLiBUaGVyZSB3YXMgbm8gcm9vbSBvciBjYXVzZSBmb3IgYW55IGtpbmQgb2YgZXVwaG9yaWEuIApCaWxsIEdyb3NzIHNheXMgdGhpcyBzZWNyZXQgY29uZGl0aW9uIG1hZGUgaGltIGEgc3VjY2Vzc2Z1bCBpbnZlc3RvciAgIGFuZCBpbmZhbW91c2x5IHNob3J0IHRlbXBlcmVkT3ByYWgncyBmb3J0dW5lIHRha2VzIGEgaGl0IGFmdGVyIHNoZSBsb3NlcyAkMzkuMiBtaWxsaW9uIG9uIFdlaWdoIFdhdGNoZXJzIHJvdXRBc3NldCByaWNoIGJ1dCBjYXNoIHBvb3I6IEVsb24gTXVzayByZWNlbnRseSB0b29rIG91dCBmaXZlIG1vbnN0ZXIgbW9ydGdhZ2VzIHdvcnRoICQ2MSBtaWxsaW9uQmxvb21iZXJnIHZhbHVlcyBKZW5uZXIgZmlybSBieSBjb21wYXJpbmcgaXQgd2l0aCBmb3VyIHB1YmxpY2x5IHRyYWRlZCBwZWVyczogTCBTQSwgSW50ZXIgUGFyZnVtcyBJbmMuLCBFc3RlZSBMYXVkZXIgQ29zLiBhbmQgRWxmIEJlYXV0eSBJbmMuIEt5bGllIENvc21ldGljcyBvdXRzb3VyY2VzIGl0cyBtYW51ZmFjdHVyaW5nIGFuZCBwYWNrYWdpbmcgdG8gU2VlZCBCZWF1dHkgYW5kIHNhbGVzIGFuZCBmdWxmaWxsbWVudCB0byBTaG9waWZ5LiBUaGUgZGV0YWlscyBvZiB0aG9zZSBhcnJhbmdlbWVudHMgYXJlbiBwdWJsaWMgYW5kIGNvdWxkIGFsdGVyIHRoZSB2YWx1YXRpb24uCkR1a2UncyBiYWNrZ3JvdW5kIHByb3ZpZGVzIGZlcnRpbGUgZ3JvdW5kIGZvciBhbiBleHBsb3JhdGlvbiBvZiBkZWNpc2lvbiBtYWtpbmcuIFNoZSBwdXJzdWVkIGEgUGhEIGluIGNvZ25pdGl2ZSBsaW5ndWlzdGljcyBhdCBQZW5uLCBhbmQgdGhlbiBlbWJhcmtlZCBvbiBhIGNhcmVlciBpbiBwb2tlciwgYmVjb21pbmcgb25lIG9mIHRoZSBsZWFkaW5nIGZlbWFsZSBtb25leSB3aW5uZXJzIGluIGhpc3RvcnkuIFBva2VyIGlzIGFuIGlkZWFsIGNvbnRleHQgZm9yIGV4cGxvcmluZyBkZWNpc2lvbiBtYWtpbmcsIHNpbmNlIHBsYXllcnMgbWFrZSBiZXRzIHdpdGggbGltaXRlZCBpbmZvcm1hdGlvbiwgYW5kIGdldCBmZWVkYmFjayB0aHJvdWdoIG1vbmV5IHdvbiBvciBsb3N0LgpIZSBsZXQgaGlzIGhhaXIgZ3JvdyBsb25nIGFuZCByaWRlcyBoaXMgbW90b3JjeWNsZSBldmVyeSBjaGFuY2UgaGUgZ2V0cy4uIApFdGlxdWV0dGU6IFBsZWFzZSB2b3RlIG9uIHN1Ym1pc3Npb25zIGJhc2VkIG9uIHdoZXRoZXIgdGhlIGNvbnRlbnQgaW1wcm92ZXMgdGhlIHN1YnJlZGRpdC4gUGxlYXNlIHZvdGUgb24gY29tbWVudHMgYmFzZWQgb24gdGhlaXIgY29udHJpYnV0aW9uIHRvIHRoZSBkaXNjdXNzaW9uIGFuZCBub3Qgc29sZWx5IG9uIHdoZXRoZXIgeW91IGFncmVlLiBSZWRkaXF1ZXR0ZSBvZmZlcnMgZnVydGhlciBpZGVhcy4gCkVTSCAobWlsZGx5KS4gWW91IHNob3VsZCBoYXZlIChvciBpZiB5b3VyIGRlY2lzaW9uIGlzIGZpbmFsIHRoZW4gc2hvdWxkIGhhdmUgaGFkKSBhIGNvbnZlcnNhdGlvbiB3aXRoIGhlciBhYm91dCBpdC4gCkVpdGhlciB5b3Ugd2FybiBoZXIgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgY29udmVyc2F0aW9uLCBvciBpdCBub3QgTEVHQUxMWSBBRE1JU1NBQkxFLlRoZSB3YXJuaW5nIGNvdWxkIHNvdW5kIGxpa2UsICJIaSBEYW1teSEgV2UgYmVlbiBoYXZpbmcgc29tZSBpc3N1ZXMgd2l0aCBjYWxsZXJzIHNheWluZyB3ZWlyZCB0aGluZ3MgbGF0ZWx5IHNvIERIIGFuZCBJIHB1dCBhIHJlY29yZGluZyBhcHAgb24gb3VyIGRldmljZXMuIAooTXkgbGFzdCBjb21wYW55IGFjdHVhbGx5IG1hZGUgdGhpcyBhIHJ1bGUgYmVjYXVzZSB0aGUgYm9zcyBoYXRlZCAgYW5kIHRob3VnaHQgaXQgd2FzIHJ1ZGUgdG8gaGltIHBlcnNvbmFsbHkgdG8gdXNlIGl0LikgU2hlIGFsc28gc2FpZCB0aGF0ICBpcyBwcmV0dHkgbXVjaCBhbHdheXMgcnVkZSBhbmQgZXNwZWNpYWxseSBzaG91bGRuJ3QgYmUgdXNlZCB0b3dhcmRzIHZlbmRvcnMsIGRlbGl2ZXJ5IHBlb3BsZSwgYW5kIG90aGVycyB3aG8gaGF2ZSBhIHNlcnZpY2UgY29ubmVjdGlvbiB0byB0aGUgY29tcGFueSwgZXZlbiB0aG91Z2ggdGhleSBhcmUgdGVjaG5pY2FsbHkgbG93ZXIgaW4gdGhhdCBzaXR1YXRpb24uICBpcyB0aGUgcHJvcGVyIGdyZWV0aW5nIGluIHRoYXQgY2FzZSwgdG9vLi4gCkEgbG90IG9mIHBlb3BsZSBkb24gcmVhbGl6ZSBvciB0YWtlIGludG8gY29uc2lkZXJhdGlvbiB0aGF0IHRoZSBjYXIgaXMgcnVubmluZy4gSSB3b3JrIGFuaW1hbCBjb250cm9sIGRpc3BhdGNoIGFuZCBkb2dzIGluIGNhcnMgcHJvYmFibHkgbWFrZSB1cCA1MCUgb2YgZGFpbHkgY2FsbHMgaW4gdGhlIHN1bW1lci4gSSBwZXJzb25hbGx5IGp1c3QgbGVhdmUgbXkgZG9nIGhvbWUgaW4gdGhlIHN1bW1lciBtb250aHMgdW5sZXNzIEkgdGFraW5nIGhlciB3aXRoIG1lIHNvbWV3aGVyZS4gT25lIHRpbWUgSSBsZWZ0IGhlciBpbiB0aGUgY2FyIGFuZCB0aGVuIGF1dG9zdGFydGVkIGl0IHdpdGggdGhlIGFjIGJsYXN0aW5nLiBMaXR0bGUgZGlkIEkga25vdyBhdCB0aGF0IHRpbWUgdGhhdCB0aGVyZSBpcyBhIDEwIG1pbnV0ZSB0aW1lciBvbiBteSBhdXRvIHN0YXJ0LiBXaGVuIEkgY2FtZSBiYWNrIG91dCB0aGUgY2FyIHdhcyBvZmYgYW5kIHNoZSB3YXMgb24gdGhlIGZsb29yIHRyeWluZyB0byBzdGF5IGNvb2wuIEl0IHdhc24gZGVhZGx5IGhvdCBpbiB0aGUgY2FyIGJ1dCBkZWZpbml0ZWx5IGhhcmQgdG8gYnJlYXRoZSBhbmQgdW5jb21mb3J0YWJsZS4gSSB3aWxsIE5FVkVSIGxlYXZlIGhlciBpbiB0aGUgY2FyIGFnYWluIHVubGVzcyBJIGFtIGdvaW5nIGludG8gdGhlIGdhcyBzdGF0aW9uIHRvIGJ1eSBhIHNvZGEgb3Igc29tZXRoaW5nIHZlcnkgcXVpY2suIFNjYXJpZXN0IGRheSBldmVyLgpUaGVzZSBzb25ncyBhcmUgb24gYW4gYWxidW0gY2FsbGVkICJXYWxtYXJ0IHNvdW5kY2hlY2suIiBUaGUgbGF0dGVyIGZvdXIgc29uZ3MgaGF2ZSAiT3JpZ2luYWwgcGVyZm9ybWFuY2Ugc2VyaWVzIiBpbiB0aGVpciBuYW1lcy4gNTEpIFZhbml0eSAuIFlvdSBjYW4gbmFiIHRoaXMgc29uZyBmcm9tIHZhcmlvdXMgb3V0bGV0cy9Zb3V0dWJlLiAKSSB0aG91Z2h0IHRoYXQgaGUgd2FzIHRvbyBpbXB1bHNpdmUgYXQgdGhlIHRpbWUgYW5kIGRpZG4gdGhpbmsgYWJvdXQgdGhlIGNvbnNlcXVlbmNlcyBvZiBkb2luZyBzb21ldGhpbmcgc28gcmVja2xlc3MgaW4gYSBjb3VudHJ5IGhlIGhhZCBuZXZlciB2aXNpdGVkIGJlZm9yZS4uIApBdSBuaXZlYXUgaW5kaXZpZHVlbCwgaWwgZXhpc3RlIGRldXggZ3JhbmRzIHR5cGVzIGRlIG1tb2lyZXMgOiBsZXMgbW1vaXJlcyBmYW1pbGlhbGVzLCBkZSB0eXBlICB0cmFuc2ducmF0aW9ubmVsICwgZXQgIHByb3BvcyBkZXNxdWVsbGVzIGlsIGV4aXN0ZSB0b3V0ZSB1bmUgbGl0dHJhdHVyZSwgZXQgbGEgbW1vaXJlIGRlIGwnbWUsIGNlbGxlIGRlIG5vcyBkaXZlcnNlcyBpbmNhcm5hdGlvbnMsIG1tb2lyZSBkZXMgdmllcyBhbnRyaWV1cmVzLgpUaGVuLCB0aGUgc3BhY2UgdGhleSB2YWNhdGUgY2FuIGJlIGZsb29kZWQgd2l0aCBjb25zaWRlcmF0aW9uLCBzZW5zaXRpdml0eSwgY29tcGFzc2lvbiwgYW5kIGVtcGF0aHk7IHRoZXNlIGFyZSB0aGUgdHJ1ZSBkZXRlcnJlbnRzIHRvIGFuZCBhbnRpZG90ZXMgZm9yIGRpc3Jlc3BlY3QuIEJ1dCwgd2h5IGRvIG1lbiBkaXNyZXNwZWN0IHdvbWVuIGluIHJlbGF0aW9uc2hpcHM/IEkgZ2FpbmVkIGFuIGFtYXppbmcgaW5zaWdodCBhYm91dCBzdWNjZXNzZnVsIHRoZSBvdGhlciBkYXkgd2hlbiBteSBKYW5pZSB0b2xkIG1lIGEgd2lsZCBzdG9yeSBsYXN0IHdlZWsuIE9yIHRoYXQgd2hpY2ggYXBwZWFycyB0byBiZSB2YWx1YWJsZSBieSB2aXJ0dWUgb2Ygc2NhcmNpdHkuIApJIGhhdmUgdG8gY2xlYW4gdXAgbXkgb3duIG5lZ2F0aXZlIGhhYml0cy4gSSBmb3VuZCB0aGlzIHZpZGVvIGluc3BpcmluZyBhbmQgd291bGQgbGlrZSB0byBzaGFyZSBpdC4gUGVvcGxlIGxpa2UgaGltIHVuZGVyc3RhbmQgdGhlIG5hdHVyZSBvZiBpbGxuZXNzLi4gClBva2VyIG9ubGluZSBvciBpbiBjYXNpbm9zIG9mZmVycyBncmVhdCBtb25leSBhbmQgdGFrZXMgbGl0dGxlIGVmZm9ydCwgcGh5c2ljYWxseSBhdCBsZWFzdC4gVGhpcyBicmFpbiBnYW1lIGlzIGFsbW9zdCBsaWtlIGFuIGFydCB0aGF0IGhhcyB0byBiZSBwcmFjdGljZWQgb3ZlciBhbmQgb3ZlciBhZ2FpbiBpbiBvcmRlciB0byBhY2hpZXZlIHBlcmZlY3Rpb24uIApJSVJDLCBpdCBoYXMgdHdvIGVzc2F5cyBwZXIgY2hhcHRlciB3aGVyZWFzIFBBVkMgaGFzIG9uZS4gVGhlIG51bWJlciBvZiB2b2NhYnVsYXJ5IHdvcmRzIHBlciBjaGFwdGVyIGlzIHJvdWdobHkgdGhlIHNhbWUgYXMgUEFWQy4gClRvIGxlYXJuIG1vcmUgb24gYW55IGFzcGVjdCBvZiBUYW50cmljIFNleHVhbGl0eSAvIENoYWtyYXMgb2YgdGhlIFBlbmlzIC8gTWlsdGlwbGUgT3JnYXNtcyAvIFRoZSBQcm9zdGF0ZSBldGMuIApBIGJlbmVmYWN0b3IgZG9uYXRlZCAkMyBtaWxsaW9uIGZvciB0aGUgSm9obiBQaWVyY2UgTWVtb3JpYWwgTGFiIGF0IFVNYXNzLCBhbmQgQW5uYSBQaWVyY2UncyBnb2FsIG9mICQ1MDAsMDAwIGhhcyBkb3VibGVkIHRvICQxIG1pbGxpb24uCkZhc2hpb24gZ3VydSBKb2UgWmVlIHdpbGwgYmUgZGVmZW5kaW5nIFdvbmcgYm9vayBpbiB0aGUgQ0JDIGV2ZW50LndpbGwgYmUgbXkgZmlyc3QgR3Jvd2luZyBSb29tIEZlc3RpdmFsLCBhbmQgSSBzbyBleGNpdGVkIHRvIGJlIHBhcnQgb2Ygc3VjaCBhIGRpdmVyc2UgbGluZXVwIG9mIGZlbWluaXN0LCBtYXJnaW5hbGl6ZWQgdm9pY2VzLCBzYXlzIHRoZSBWYW5jb3V2ZXJpdGUuIFdlIGdvaW5nIHRvIGJlIGdldHRpbmcgdG8gaGVhciB1bmlxdWUgdm9pY2VzIHRoYXQgYXJlIGJvbGQsIGR5bmFtaWMgYW5kIGRhcmUgdG8gZGVmeSB0aGUgbWFpbnN0cmVhbS5UaGUgV29vIFdvbyBieSBMaW5kc2F5IFdvbmcgKFBob3RvOiBjb3VydGVzeSBvZiBBcnNlbmFsIFB1bHAgUHJlc3MpY291cnRlc3kgb2YgQXJzZW5hbCBQdWxwIFByZXNzIC9UaGlzIHllYXIgdGhlIGZlc3RpdmFsIGJvYXN0cyBtb3JlIHRoYW4gNTAgZXZlbnRzLiAKQ291cnNlIHRoZSBpZGVhIG9mIGNhbW91ZmxhZ2UgaW4gdGhlIGFuaW1hbCB3b3JsZCBpcyBwcm9iYWJseSAyNTAgbWlsbGlvbiB5ZWFycyBvbGQgYW5pbWFscyBhbmQgaW5zZWN0cyBoYXZlIGJlZW4gYmxlbmRpbmcgaW50byB0aGVpciBlbnZpcm9ubWVudCBmb3IgZW9ucywgYW5kIEkgc3VyZSB0b28gdGhhdCBlYXJseSBob21pbmlkcyBkaWQgdGhlaXIgZmFpciBzaGFyZSBvZiB3YWxraW5nIGJlaGluZCBicnVzaC4gQnV0IHRoZSBpZGVhIG9mIGhpZGluZyBncmVhdCBhbWFsZ2FtYXRpb25zIG9mIHZlcnkgaGVhdnkgbWV0YWwgd2l0aCBwYWludCBpcyByZWFsbHkgcXVpdGUgbW9kZXJuLi4gCkkgbm90IGluY2x1ZGluZyB0aGlzIGluY3JlYXNlIGluIHRoaXMgV2lucmF0ZSwgYXMgSXQgY291bGQgdmVyeSByZWFsaXN0aWNhbGx5IGJlIGEgc3BlbGwgb2YgcG9zaXRpdmUgdmFyaWFuY2UuLiAKRGV1eGltZSB0YXBlIDogcmV0b3VyICBsYSBUYWJsZSBkZSBCcmVpemgsIHF1J29uIGF2YWl0IGRjb3V2ZXJ0IGF2ZWMgZGxpY2UgZW4gMjAxMCBhbG9ycyBxdSdlbGxlIHZlbmFpdCBkJ291dnJpciBzb3VzIGxhIGhvdWxldHRlIGQndW4gY2hlZiBqYXBvbmFpcy4gQydlc3QgdW4gcmVzdGF1cmFudCBxdWkgc2UgcG9zaXRpb25uZSBtYWludGVuYW50IGFzc2V6IGx1eHVldXNlbWVudC4gClRoZXNlIGFyZSBzb21lIG9mIHRoZSB0aGluZ3MgdGhhdCB5b3UgY2FuIGRvIGR1cmluZyB5b3VyIHN0YXkgaW4gTmV3IFlvcmsgZm9yIHlvdXIgYW5uaXZlcnNhcnkuIFlvdSBkbyBub3QgaGF2ZSB0byBzcGVuZCBhIGxvdCBvZiBtb25leSBqdXN0IHRvIGhhdmUgYSBnb29kIHRpbWUgYW5kIG1ha2UgeW91ciBhbm5pdmVyc2FyeSBzcGVjaWFsLiBZb3UgY2FuIHN0cm9sbCBhcm91bmQgdGhlIGNpdHkgYW5kIHdhdGNoIGEgbW92aWUuIApXZSB2ZXJ2b2xnZGVuIG9uemUgd2VnIG5hYXIgT2xkIEFyYmF0LCBkZSB3YW5kZWxzdHJhYXQgdmFuIE1vc2tvdSwgbWV0IHN0cmFhdGFydGllc3Rlbiwga3JhYW1wamVzLCB0ZXJyYXNqZXMgZW4gc291dmVuaXIgd2lua2Vscy4gSWRlYWFsIGR1cyBvbSBvbnplIGF2b25kIGFmIHRlIHNsdWl0ZW4hIFdlIG1hYWt0ZW4gZWVuIG9tbWV0amUgbmFhciBoZXQgbW9vaWUgd2l0dGUgMTdkZSBlZXV3c2Uga2Vya2plIENodXJjaCBvZiB0aGUgU2F2aW91ciBpbiBQZXJzaSBlbiB6YWdlbiBvb2sgaGV0IFB1c2hraW4gTXVzZXVtIGluIGVlbiBtb29pIGJsYXV3IGh1aXMsIG1ldCBkYWFydGVnZW5vdmVyIHdlZXIgemlqbiBzdGFuZGJlZWxkIGRlemUga2VlciB3ZWwgaW50ZXJlc3NhbnQgd2FudCBtZXQgZ2VvY2FjaGUuIEVlcnN0IHdpbGRlbiB3ZSBraWV6ZW4gdm9vciBkZSBrZXRlbiBNdSBNdSAoaGVya2VuYmFhciBhYW4gZGUga29lKSBoZWxhYXMgd2FzIGRhdCBlZW4gKGRydWspIGJ1ZmZldCBlbiBkYWFyIGhhZGRlbiB3ZSBldmVuIGdlZW4gemluIGluLiBXZSBrb3plbiB1aXRlaW5kZWxpamsgaGV0IHRlcnJhcyB2YW4gaGV0IEl0YWxpYWFuc2UgcmVzdGF1cmFudCBTYW4gTWFyY28gdWl0LCBtZXQgZWVuIGxldWsgdWl0emljaHQgb3AgaGV0IGNhZiBhYW4gZGUgb3ZlcmthbnQgd2FhciBoZWVsIHZlZWwgc3RvZXJlIG1vdGFyZHMgd2FyZW4uIEdlbHVra2lnIG1hYXIgZGF0IHdlIGlldHMgaGFkZGVuIG9tIG5hYXIgdGUga2lqa2VuLCB3YW50IGhldCBnaW5nIHRyYWFnIHZvb3J1aXQgZW4gaGV0IHdhcyBvb2sgZWVuIGVlcnN0ZSBrZW5uaXNtYWtpbmcgbWV0IGRlIHplZXIga2xlaW5lIHBvcnRpZXMgZGllIGplIGluIE1vc2tvdSBrcmlqZ3QuIEdlbHVra2lnIG1hYXIgd2FzIGVyIHdhdCB2ZXJkZXIgbm9nIGVlbiBNY0RvbmFsZHMhIE9tIGt3YXJ0IG5hIDEwIHdhcmVuIHdlIHRlcnVnIG9wIG9uemUgaG90ZWxrYW1lciBoZXQgd2FzIG5vZyBhbHRpamQgbGljaHQgYnVpdGVuIQpUaGVpciBib2RpZXMgZnVuY3Rpb24gYXMgYmF0dGVyaWVzIHRvIHBvd2VyIHRoZSBGQkkgcHJvZ3JhbSBrbm93biBhcyBjb2ludGVscHJvLiAKU2hvdyBtYW5hZ2VtZW50IHJlY2VpdmVzIHJveWFsdGllcyBiYXNlZCBvbiBhIHBlcmNlbnRhZ2Ugb2YgdGhlIHJldmVudWVzLgpJIGRvbiBmaW5kIGl0IHRoYXQgaGFyZCB0byBiZWxpZXZlIGhlIG5lZWRlZCBzb21lIHRpbWUgdG8gY29tZSB0byB0ZXJtcyB3aXRoIHRoYXQsIGl0IHN0cmlrZXMgbWUgYXMgbW9yZSByZWFsaXN0aWMgdGhhbiBpZiBoZSBqdXN0IHNhaWQgSSBkb24gY2FyZSBJIDEwMCUgYWxsIGZvciBoZXIgYW5kIEkgd2lsbCBnaXZlIHVwIGV2ZXJ5dGhpbmcgYW5kIHN0YXkuIEV2ZW4gQ2xhaXJlIG5lZWRlZCB0aW1lIGF0IHRoZSBzdG9uZXMgdG8gbWFrZSB1cCBoZXIgbWluZCBhYm91dCBzdGF5aW5nIG9yIGdvaW5nIGJhY2sgdG8gRnJhbmsuIEkgZG8gdGhpbmsgdGhlIHNob3cgaGFzbiBkb25lIGhpbSBhbnkgZmF2b3JzIHRob3VnaCwgaGUgY2FtZSBhY3Jvc3Mgc3VwZXIgc2VsZmlzaCBtb3N0IG9mIHRoZSBzZWFzb24uCldlIGZvY3VzIG9uIG9mZmVyaW5nIGVzc2VudGlhbCBhZHZpY2UgYWJvdXQgbmVjayBhbmQgc2hvdWxkZXIgbWFzc2FnZXJzLGxldHRpbmcgeW91IG5ldmVyIHJlZ3JldCBhbmQgZWFzaWx5IGxvY2F0ZSB0aGUgb25lIGZvciB5b3VyIHNpdHVhdGlvbi4gQW4gZXhjZWxsZW50IG1hc3NhZ2VyIHdpbGwgcmVwcm9kdWNlIHRoZSBiZW5lZml0cyBvZiBhbiBhY3R1YWwgbWFzc2FnZSB0aHJvdWdoIHVzaW5nIHRlY2hub2xvZ3ksIHRodXMgZG9uJ3R3YXN0ZSB5b3VyIGNoYW5jZSB0byBnZXQgb25lIHJpZ2h0IGF3YXkuCkkgYWxzbyBoYWQgNiBtb250aHMgb2YgbGl2aW5nIGV4cGVuc2VzIHNldCBhc2lkZSBpbiBhZGRpdGlvbiB0byB0aGF0LiAKSW4gYWdpbmcgaHVtYW5zIHRoZSBjb3J0ZXggYW5kIGhpcHBvY2FtcHVzIGF0cm9waHkgWzE5XSBhbmQgbWVtb3J5IGZ1bmN0aW9uIGRlY2xpbmVzIFsyMF0uIFRoZXNlIGRlbGV0ZXJpb3VzIGNvbnNlcXVlbmNlcyBvZiBhZ2luZyBtaWdodCBiZSBhdHRlbnVhdGVkIGJ5IGV4ZXJjaXNlIFs2XS4gUGh5c2ljYWxseSBmaXQgYWdlZCBpbmRpdmlkdWFscywgaWRlbnRpZmllZCBieSBzZWxmIHJlcG9ydCBvZiBhY3Rpdml0eSBsZXZlbCwgcGVyZm9ybWVkIGJldHRlciBvbiBtZWFzdXJlcyBzdWNoIGFzIHJlYXNvbmluZywgd29ya2luZyBtZW1vcnksIHZvY2FidWxhcnkgYW5kIHJlYWN0aW9uIHRpbWUgdGhhbiB0aGVpciBzZWRlbnRhcnkgY291bnRlcnBhcnRzIFsyMV0uIEluIGludGVydmVudGlvbiBzdHVkaWVzIGhlYWx0aHkgc2VkZW50YXJ5IGFkdWx0cyBiZXR3ZWVuIHRoZSBhZ2VzIG9mIDYwIGFuZCA4NSB5ZWFycyBwYXJ0aWNpcGF0ZSBpbiBhbiBleGVyY2lzZSByZWdpbWUgc2V2ZXJhbCB0aW1lcyBwZXIgd2VlayBvdmVyIHRoZSBjb3Vyc2Ugb2Ygc2V2ZXJhbCBtb250aHMgdG8gc2V2ZXJhbCB5ZWFycy4gQ29nbml0aW9uIGFuZCBmaXRuZXNzIGlzIGFzc2Vzc2VkIGJlZm9yZSBhbmQgYWZ0ZXIgdGhlIGludGVydmVudGlvbi4gQWx0aG91Z2ggc3R1ZGllcyB2YXJ5IGluIGR1cmF0aW9uLCBpbnRlbnNpdHkgYW5kIHR5cGUgb2YgZXhlcmNpc2UsIG92ZXJhbGwgcGh5c2ljYWwgYWN0aXZpdHkgaW1wcm92ZXMgY29nbml0aXZlIGZ1bmN0aW9uIFs2LDIyXS4KQW5hbHlzdHMgYW5kIGV4ZWN1dGl2ZXMgc2F5IHRoZXJlIGFyZSBzZXZlcmFsIHNvbGlkIHJlYXNvbnMgdG8gbWFrZSBhbmQgcHJvbW90ZSBzdWNoIGNhcnMgbm93LiBUaGV5IGNhbiBoZWxwIGxvd2VyIGF2ZXJhZ2UgZmxlZXQgZW1pc3Npb25zIHRvIG1lZXQgZ292ZXJubWVudCByZXF1aXJlbWVudHMgaW4gRXVyb3BlLCBvZmZzZXR0aW5nIGluY3JlYXNpbmcgc2FsZXMgb2YgY29udmVudGlvbmFsbHkgcG93ZXJlZCBzcG9ydCB1dGlsaXR5IHZlaGljbGVzLiBBbmQgYXV0b21ha2VycyB3YW50IHRvIGJlIHJlYWR5IGluIGNhc2UgZ292ZXJubWVudHMgcGVyaGFwcyBpbiBoZWF2aWx5IHBvbGx1dGVkIENoaW5hIHB1c2ggcGVvcGxlIGludG8gZW1pc3Npb24gZnJlZSB2ZWhpY2xlcy4KQSBvbGQgZnJpZW5kIHRleHQgbWUgdGhlIG90aGVyIGRheSwgYXNrZWQgd2hhdCBJIHdhcyBkb2luZy4gSSBzZW5kIHRoZW0gYSBQaWMgb2YgbXkgcmFnZ2VkeSBhc3Mgc3RlcCBzdG9vbCwgYW5kIHRoZWlyIHJlc3BvbnNlIGlzLCAiIHd0ZiBkdWRlLCBJIGNvdWxkIG9mIGRvbmUgdGhhdCBpbiAxNSBtaW4gd2l0aCBhIHJvdXRlciIuIEkgc3BlbnQgdGhlIGxhc3QgMyBEQVlTLCBhdCB3b3JrLCBoYW5kIGNhcnZpbmcgdGhpcyB0aGluZyB3aXRoIGEgaGFtbWVyIGFuZCBjaGlzZWwuLiAKSWYgSSB3ZW50IGJ5IHRoZSAxLzMgcnVsZSwgSSBoYXZlIHRvIG1ha2UgJDRrIGFmdGVyIHRheGVzIHRvIGFmZm9yZCBhbiBhcGFydG1lbnQgY2xvc2UgdG8gbXkgam9iLiBZZWFoIG15IGpvYiBkb2VzbiBwYXkgdGhhdC4gQW5kIGl0IHBheXMgdmVyeSB3ZWxsIGZvciB3aGF0IEkgZG8uIApIb3cgVG8gTWFrZSBhIE1hc3NhZ2UgT2lsIFRyZWF0bWVudCBmb3IgVmFyaWNvc2UgVmVpbnMKSWYgeW91IGRpc2FncmVlLCBGb3ggY292ZXJzIGEgbG90IG9mIHRoZSBzYW1lIG1ham9yIHN0b3JpZXMgYXMgbnByIGFuZCBjbm4sIGFuZCB5b3UgY2FuIHByb2JhYmx5IGNvbnZpbmNlIHBlb3BsZSB3aG8gcmVhZCB0aGUgbmV3cyBvbiBGb3ggdGhhdCBhbiBucHIgb3IgY25uIGFydGljbGUgd2FzIHdyaXR0ZW4gYnkgYSBmb3ggam91cm5hbGlzdC4gSSdtIFZFUlkgbGliZXJhbCwgYW5kIEkgY291bGQgY2FyZSBsZXNzIGFib3V0IGEgYmlnIG1lZGlhIGNvbXBhbnksIGJ1dCBibGluZCBoYXRyZWQgaXMgYW4gb2J2aW91cyBzaWduIG9mIGlnbm9yYW5jZS4uIApDcmltaW5hbCBjYXNlcyBhcmUgY3VycmVudGx5IHBlbmRpbmcgYWdhaW5zdCA0MDAgcG9saWNlIG9mZmljZXJzLCBzYWlkIEFiYmFzLiAKVG95b3RhIGRvZXNuJ3QgaGF2ZSBhIHN0cmFuZ2xlaG9sZCBvbiBoeWJyaWQgdGVjaG5vbG9neS4gQnJlYWt0aHJvdWdocyBhcmUgcG9zc2libGUgd2l0aCBhbnkgZW1lcmdpbmcgcmVzZWFyY2ggZWZmb3J0LiBGb3JkIGFuZCBIb25kYSBhcmUgbGVhcm5pbmcgZnJvbSB0aGVpciBlYXJseSB3b3JrLCBhbmQgR00ncyBEZWNlbWJlciBkZWFsIHdpdGggRGFpbWxlckNocnlzbGVyIHdpbGwgYWNjZWxlcmF0ZSB0aG9zZSBjb21wYW5pZXMnIGh5YnJpZCBkZXZlbG9wbWVudC4gQW5kIEh5dW5kYWkgaXMgd29ya2luZyBhdCBpdHMgZ2xlYW1pbmcgbmV3IFNvdXRoIEtvcmVhbiByIHN0dWRpby4KVGhpcyBpcyBhbGwgYXNzdW1pbmcgdGhhdCB3ZSB0YWxraW5nIGFib3V0IGEgZ2xvY2sgb3IgTTkuIApDYXJyeWluZyBHbGFET1Mgd2l0aCBoaW0gSGUgdXNlcyBwb3J0YWxzIHRvIHRha2UgdGhlIGZpZ2h0IHRvIHRoZW0sIGluc3RhbGxpbmcgR2xhRE9TIGluIENvbWJpbmUgc3Vic3lzdGVtcyBhcyBoZSBnb2VzLiAKU21pdGh0MTIxOCAgMSBwb2ludCAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpZb3UgaGF2ZSBhIGR1dHkgdG8gbWFrZSBzdXJlIHRoYXQgeW91ciBwYXJ0bmVyIGNvbnNlbnQgaXMgZ2l2ZW4gZnJlZWx5LCBlbnRodXNpYXN0aWMgYW5kIGFmZmlybWF0aXZlLiBJZiBhdCBhbnkgdGltZSB5b3UgcXVlc3Rpb24gd2hldGhlciB5b3UgYXJlIG9idGFpbmluZyBlbnRodXNpYXN0aWMgYW5kIGFmZmlybWF0aXZlIGNvbnNlbnQgc3RvcCBhbmQgcmVldmFsdWF0ZSB0aGUgc2l0dWF0aW9uLiBJdCBpcyBZT1VSIEZBVUxUIGlmIHlvdSByYXBlIHNvbWVvbmUgYW5kIG5vdCB0aGVpciBmYXVsdCBmb3Igbm90IHN0b3BwaW5nIHlvdS4uIApHcmFudGVkIHdlIHdvdWxkbid0IHJlY29tbWVuZCB0YWtpbmcgdGhpcyByb3V0ZSwgYnV0IGVhY2ggb25lIG9mIHVzIGhhcyBhIHN5c3RlbSB0aGF0IHdvcmtzIHJlYWxseSB3ZWxsLiAKT3VyIHNpbmdsZXMgY2hhdCByb29tIG9mZmVycyB5b3UgdGhlIGFiaWxpdHkgdG8gbWVldCB0b25zIG9mIHNpbmdsZXMgd2hpbGUgYmVpbmcgYWJsZSB0byBjb252ZXJzZSB3aXRoIHRoZW0gaW4gcmVhbCB0aW1lLiAKQ29tZSBvbiB0aGF0IGx1ZGljcm91cy4uIApPbmUgY2F1dGlvbjogRXZlbiBhIHNraWxsZWQgcGxheWVyIG9uIDEwMCBwZXJjZW50IHBsdXMgbWFjaGluZXMgd2lsbCBoYXZlIG1vcmUgbG9zaW5nIHNlc3Npb25zIHRoYW4gd2lubmVycy4gVGhvc2UgcGVyY2VudGFnZXMgYXNzdW1lIHRoYXQgb3ZlciB0aGUgbG9uZyBoYXVsIHRoZSBwbGF5ZXIgd2lsbCBoaXQgYSBub3JtYWwgc2hhcmUgb2Ygcm95YWwgZmx1c2hlcyB3aXRoIGZ1bGwgY29pbnMgcGxheWVkLiBSb3lhbCBmbHVzaGVzIGFyZSBleHBlY3RlZCBhYm91dCBvbmNlIGV2ZXJ5IDQwLDAwMCBoYW5kcyAgIGFib3V0IG9uY2UgZXZlcnkgODAgaG91cnMgb2YgcGxheS4gVGhlcmUgYXJlIG5vIGd1YXJhbnRlZXMsIGhvd2V2ZXIuIFdpdGhvdXQgYSBub3JtYWwgbnVtYmVyIG9mIHJveWFsIGZsdXNoZXMsIG9yIGlmIGZld2VyIHRoYW4gdGhlIG1heGltdW0gbnVtYmVyIG9mIGNvaW5zIGFyZSBwbGF5ZWQsIHRoZSBwYXlvdXQgcGVyY2VudGFnZXMgd2lsbCBiZSBsb3dlci4KSG93ZXZlciwgSSBjYWxjdWxhdGVkIG15IEhNTCBhcyBmdWxsIDYgbW9udGggdGVybSBhbHRob3VnaCBJIGRvbid0IHBsYW4gdG8gaG9sZCB0aGUgbG9hbiBmb3IgYW55IG1vcmUgdGhhbiAzIDQgbW9udGhzLiBGb3Igc2ltcGxlIG1hdGgsIG15IGludGVyZXN0IHBheW1lbnRzIGFyZSBhYm91dCAkMTMwMCBwZXIgbW9udGggc28gaWYgSSBjYW4gc2hhdmUgMyBtb250aHMgb2ZmIG9mIHRoZSBiYWNrIGVuZCBvZiBteSBlc3RpbWF0aW9uIG9uIHRoZSBsb2FuIEkgd2lsbCBhY3R1YWxseSBiZSBhYmxlIHRvIHJlZHVjZSBteSBjb3N0cyBieSBhYm91dCAkNTAwIGFmdGVyIHRoZSBzYWxlIG9mIHRoZSBwcm9wZXJ0eS4uIApJZiBpdCBoZWxwcywgbWVudGFsbHkgcmVwbGFjZSB0aGVpciBmYWNlcyB3aXRoIGZ1bm55IGxvb2tpbmcgb25lcyB0byBsZXNzZW4geW91ciBmZWVsaW5ncyBvZiBpbmZlcmlvcml0eS4uIApJZiBhbnl0aGluZywgdGhleSBzaG91bGQgYmUgcHJhaXNlZCBmb3IgdHJ5aW5nIHRvIGRpc3N1YWRlIGhhdGVmdWwgc3BlZWNoLCBiZWNhdXNlIGxldCBmYWNlIGl0LCB3aGV0aGVyIG9yIG5vdCB5b3UgYWdyZWUgd2l0aCBzb21lIG9mIHRoZSBvcGluaW9ucyBvbiAvci9mYXRwZW9wbGVoYXRlLCB0aGUgY29tbXVuaXR5IHdhcyBleHRyZW1lbHkgdG94aWMsIGFuZCBiZWdpbm5pbmcgdG8gc3BpbGxvdmVyIGludG8gb3RoZXIgc3Vicy4uIApUaGUgYmVzdCB3YXkgdG8gZ2V0IGxvYWRzIG9mIHBva2VyIGNoaXBzIG9uIGZhY2Vib29rIGlzIHRvIGFzayBvdGhlciBwbGF5ZXJzIHRvIGRvbmF0ZSB0aGVpciBjaGlwcyB0byB5b3Ugb3IgYnV5IHRoZW0gZnJvbSB2YXJpb3VzIHNpdGVzIHdoaWNoIG1heSBiZSB1bnRydXN0d29ydGh5Lk9uZSB3YXkgdG8gZ2V0IGZyZWUgZmFjZWJvb2sgcG9rZXIgY2hpcHMgd291bGQgYmUgdG8uIFdJTiB0aGVtISBZZXMsIHRoZSBnYW1lIG5vdyBnaXZlcyBhIGxvdCBtb3JlIGNoYW5jZXMgdG8gd2luIHBva2VyIGNoaXBzLCBhbmQgYSBsb3QgbW9yZSB0aGFuIGJlZm9yZS5SZWdhcmRpbmcgd2hhdCBzb21lb25lIHNhaWQgdGhhdCB5b3UgY2FuIGFsc28gYnV5IHRoZW0gZnJvbSBzb21lIHdlYnNpdGVzLCB5ZXMgaXQncyB0cnVlIGJ1dCB0aGVyZSBhcmUgc29tZSBwcm9zIGFuZCBjb25zIHRvIHRoaXMuRm9yIGluc3RhbmNlIG9uIHRoZSBQcm8gc2lkZSwgeW91IGdldCBjaGlwcyBhIGxvdCBtb3JlIGNoZWFwZXIgdGhhbiB5b3Ugd291bGQgZ2V0IHRoZW0gZnJvbSBpbiB0aGUgZ2FtZS4gCkVsbGUgeSBsIGRlIGwgZGUgc29uIGMgbGUgc291cGVyLCBvbiBhdmFpdCBwciBkZXMgamV1eCBkIFVuIGEgc29ydGkgZGVzIGJyb3duaWVzIGF1IGNhbm5hYmlzLiBJbHMgZW4gY29udGVuYWllbnQgdW5lIGRvc2UgcGFydGljdWxpIEVsbGUgZW4gYSBwcmlzIHVuLCBzYW5zIHNhdm9pci4gCiJBbGwgdGhlIHBpZWNlcyBqdXN0IGtlcHQgbGluaW5nIHVwIHRoZSB6b25pbmcsIHdvcmtpbmcgdGhyb3VnaCB3aXRoIGNvdW5jaWwgd2hvIHNlZW1lZCBzbyBzdXBwb3J0aXZlLCB0aGUgbGFuZGxvcmQgYW5kIGFsbCB0aGUgbmVpZ2hib3Vycy4iIFRoZSBuZWlnaGJvdXJzIGluY2x1ZGUgdGhlIEZhbWlseSBIb3RlbCBuZXh0IGRvb3IgYW5kIHRoZSBDYXJyaW5ndG9uLiAKRG9uJ3QgcGljayByZWQsIHdoaXRlIGFuZCBibGFjayBiZWNhdXNlIHlvdSBsb3ZlIEtpc3MgaWYgeW91ciBibGFua2V0IGlzIGdvaW5nIHRvIEF1bnQgU2hpcmxleSwgd2hvIHByZWZlcnMgRWx2aXMuIFNoZSBtaWdodCBsaWtlIGEgbmljZSBIYXdhaWlhbiBwYXR0ZXJuLi4gCjIpIFdlIGFsbCBoYXZlIGEgd2F5IG91dCwgd2UganVzdCBoYXZlIHRvIGV4ZXJjaXNlIGRpc2NpcGxpbmUuIFdlIGRvbiB0YWxrIGFib3V0IGRpc2NpcGxpbmUgbXVjaCBpbiBvdXIgc29jaWV0eSBhbnltb3JlLiBXZSB3YWl0IGFyb3VuZCBhbmQgaG9wZSB0aGF0IERpc2NpcGxpbmUgc2V4aWVyIGNvdXNpbiwgTW90aXZhdGlvbiwgd2lsbCBzaG93IHVwLCBidXQgd2hlbiBpdCByZWFsbHkgY29tZXMgZG93biB0byBtYWtpbmcgbWVhbmluZyBvdXQgb2YgeW91ciBsaWZlLCBEaXNjaXBsaW5lIGlzIHRoZSBvbmUgd2hvIGdvaW5nIHRvIGdldCB5b3UgdG8gd2hlcmV2ZXIgeW91IHdhbnQgdG8gZ28uIApJIGRpZG4gZ2l2ZSBtdWNoIChhbnkpIHRob3VnaHQgdG8gImFjY2VwdGFibGUgZm9ybXMgb2YgbGVhcm5pbmcgZ29hbHMiLkkgZG9uIGhhdmUgYSBndXQgcmVhY3Rpb24gdG8gdGhpcyBzdWJtaXNzaW9uLiAKT3VyIFZQIG9mIEVuZ2luZWVyaW5nIEFuZHJldyBUaG9tcHNvbiBoYXMgYSBncmVhdCBibG9nIHBvc3QgZXhwbGFpbmluZyBob3cgb3VyIGJsb2NrY2hhaW4gcHV0cyB0aG9zZSBwaWVjZXMgdG9nZXRoZXIuIEFmdGVyIHNwZW5kaW5nIHdlZWtzIGJyYWluc3Rvcm1pbmcgaG93IHRvIGJhbGFuY2UgdGhlc2UgdHdvIGFzcGVjdHMsIHdlIHVuYW5pbW91c2x5IHJlYWNoZWQgdGhlIGNvbnNlbnN1cyB0aGF0IEhvbmV5IEJhZGdlciBCRlQgb2ZmZXJzIHRoZSBwZXJmZWN0IGJhbGFuY2UgYmV0d2VlbiBjb21wcm9taXNlIGFuZCByZXN1bHRzLiAKSXQgdGhlIHNhbWUgcHJpbmNpcGxlcyBvYnZpb3VzbHksIGJ1dCBqdXN0IGEgbGl0dGxlIGxlc3MgaW50dWl0aXZlIGJlY2F1c2UgeW91IHNoaWZ0IHdpdGggeW91ciBmb290IG5vdy4gClRleGFzIEhvbGRlbSBQb2tlciBSdWxlcwpUaGUgc2FtZSBjYW4gYmUgc2FpZCBvZiBhbnkgcm9sZSBidXQgTWVyY3kgaXMgbm90IGhhcmRlciB0aGFuIGRwcy4gCkkgdHJpZWQgdG8gdGhyb3cgb3V0IG9mIGV2ZXJ5IHN0cmF0ZWd5IHNvIHRoZXkgd291bGQga2VlcCBtZSBmcm9tIHRyeWluZyB0byBnZXQgb3V0IGEgYm95IHRvIGNvbnZpbmNpbmcgdGhlbSBNZXR0YSBXb3JsZCBQZWFjZSBzaG91bGQgZ28gYmVjYXVzZSBoZSBkaWRuIHdhbnQgdG8gYmUgdGhlcmUuIApBbHRob3VnaCB0d28gdGhpcmRzIG9mIFZhIEdhIHlvdW5nIGFyZSBtYWxlLCBmZXcgbWFsZXMgc3Vydml2ZSB0byBhZHVsdGhvb2QuIFRoZSBWYSBHYSBuZWVkIG1lYXQgYXMgd2VsbCBhcyB2ZWdldGF0aW9uIHRvIHN1cnZpdmUgYW5kIGhhdmUgcmVzb3J0ZWQgdG8gY2FubmliYWxpc207IGluanVyZWQgYW5kIGRpc29iZWRpZW50IG1hbGVzIGFyZSBlYXRlbi4gRmVtYWxlcyBhcmUgbmV2ZXIgZWF0ZW4gYXMgbWFsZXMgZ2FpbiBzb2NpYWwgc3RhdHVzIGJhc2VkIG9uIHRoZSBzaXplIG9mIHRoZWlyICdoZXJkJyBvZiBmZW1hbGVzLi4gCldpZSBzcGllbGUgaWNoIHdhcyB1bmQgd2FydW0gc29sbCBpY2ggc28gc3BpZWxlbi4gCk9uZSB3YXkgdG8gZ2V0IGZyZWUgZmFjZWJvb2sgcG9rZXIgY2hpcHMgd291bGQgYmUgdG8uIApFbnRyb3B5IGRlc2NyaWJlcyBob3cgZXZlcnkgb3JkZXJlZCBzeXN0ZW0gZGVzY2VuZHMgSW50byBkaXNvcmRlciBldmVudHVhbGx5LCBpdCBtYXkgc2VlbSByYW5kb20gYnV0IHlvdSBub3cgYXJlIGFuIG9yZGVyZWQgc3lzdGVtIG9mIHdoYXQgc291bmRzIGxpa2UgY3JpcHBsaW5nIGRlcHJlc3Npb24sIGV2ZW50dWFsbHksIGFjY29yZGluZyB0byBlbnRyb3B5LCB0aGF0IHdpbGwgYnJlYWsgZG93biBhbmQgd2lsbCBnbyBhd2F5LCB5b3UgY2FuIHdhaXQgZm9yIHRoYXQgZGF5IHRvIGNvbWUgd2hldGhlciBpdCBiZSB0b21vcnJvdyBvciBuZXh0IHllYXIgaXQgd2lsbCBjb21lLCBvciB5b3UgY291bGQgc3BlZWQgaXQgdXAsIHlvdSBkb24ndCBoYXZlIHRvIHJlYWNoIG91dCB0byB0aGUgcGVvcGxlIGFyb3VuZCB5b3UsIEknbSBzdXJlIHlvdXIgbG9jYWwgZG9jdG9yIG9yIGNodXJjaCBsZWFkZXIgd291bGQgYmUgaGFwcHkgdG8gYXQgbGVhc3QgaGVhciB5b3Ugb3V0IGFuZCBvZmZlciB0aGVpciBvd24gb3Bpbmlvbi4gSWYgeW91IGNhbiBhZmZvcmQgaXQgKGFsdGhvdWdoIHdpdGggcHJpY2VzIHRoZXNlIGRheXMgeW91IG1pZ2h0IGhhdmUgdG8gc2VsbCBhIGtpZG5leSkgSSB3b3VsZCByZWNvbW1lbmQgbG9va2luZyBpbnRvIHNlZWluZyBhIHBzeWNob2xvZ2lzdCBvciBvdGhlciBwcm9mZXNzaW9uYWwgcGVvcGxlIHRvIGhlbHAgd2l0aCB5b3VyIHNpdHVhdGlvbgpUaGUgZHVyYWcgZG9lcyB0d28gdGhpbmdzOiAoMSkgaXQgZmxhdHRlbnMgb3VyIG5hdHVyYWwgY3VybHkgaGFpciBpbnRvIHdhdmVzIGFuZCAoMikgcHJldmVudHMgb3VyIGhhaXIgZnJvbSBkcnlpbmcgb3V0LiBUaGUgc2hhcGUgb2YgdGhlIGN1dGljbGUgdGhhdCBtYWtlcyBvdXIgaGFpciBjdXJseSBhbHNvIG1ha2VzIGl0IG1vcmUgZGlmZmljdWx0IHRvIHJldGFpbiBtb2lzdHVyZSBhbmQgY290dG9uIGlzIG5vdG9yaW91c2x5IG1vaXN0dXJlIGFic29yYmVudC4gTW9zdCBzaGVldHMgYXJlIG1hZGUgb2YgY290dG9uLiAKU2NpZW5jZSBhbmQgcmVsaWdpb24gbW9zdCBjZXJ0YWlubHkgZG8gbm90IGhhdmUgdG8gYmUgcG9sYXIgb3Bwb3NpdGVzICJsaWtlIG1hbnkgQXRoZWlzdHMgbGlrZSB0byBkZWNsYXJlIi4gVGhpcyBiZWluZyBzYWlkLCBpdCBzYWZlIHRvIHNheSB0aGF0IHJlbGlnaW9uIGdlbmVyYWxseSBwbGF5cyAiY2F0Y2ggdXAiIHdpdGggc2NpZW5jZSAob2YgY291cnNlIGFmdGVyIGFsbCB0aGUgaGVhdnkgbGlmdGluZyBoYXMgYmVlbiBkb25lKSwgc29tZXRpbWVzIGFkb3B0aW5nIHBlcmZlY3RseSByYXRpb25hbCBhbmQgcHJvdmVuIHdvcmsgZGVjYWRlcywgb3IgY2VudHVyaWVzIGxhdGUsIGFsbW9zdCBwdXJlbHkgb3V0IG9mIGVtYmFycmFzc21lbnQuCkNvbG1hbiBzdHlsaXN0IE1hcnkgRmVsbG93ZXMgdG9sZCBWb2d1ZSB0aGUgYmFnIHNoZSBjYXJyaWVkIHdhcyBmdW4gbGl0dGxlIG5vZCB0byBDb2xtYW4gbmV4dCByb2xlIGFzIFF1ZWVuIEVsaXphYmV0aCBJSSBpbiBUaGUgQ3Jvd24gYmVjYXVzZSB0aGUgdmVydGljYWwgZHJhcGVkIGJvd3MgcmVtaW5kZWQgQ29sbWFuIG9mIHRoZSBnYXJ0ZXJzIEJyaXRpc2ggbW9uYXJjaHMgd2Vhci4KQW5kIGlmIHlvdSBhcmUganVzdCBzdGFydGluZyBvdXQgb3IgeW91IGFyZSBzdGlsbCBpbiB0aGlzIHBoYXNlLCB5b3UgZ290dGEga25vdyBpdCdzIG5vcm1hbCBhbmQgdGhlIG1vc3QgaW1wb3J0YW50IHRoaW5nIHlvdSBjYW4gZG8gaXMgZG8gYSBsb3Qgb2Ygd29yay4gCk5vYm9keSBnaXZlcyBhIHNoaXQuLiAKQWx3YXlzIGJlIGNhcmVmdWwgd2hvIHlvdSBnZXQgaW4gdG8gYmV0IHdpdGgKSSBzaW1wbHkgZG9uIHdhbnQgdG8gcGxheSBwb2tlciBhbnltb3JlLyBoYXZlIHNvbWV0aGluZyBiZXR0ZXIgdG8gZG8KWW91IGdldCB0aGUgcGljdHVyZS4gClR1cm4geW91ciB0b3JzbyB0byB0aGUgcmlnaHQgYW5kIHBsYWNlIHlvdXIgaGFuZHMgb24gdGhlIGZsb29yICAgb25lIGhhbmQgb24gZWl0aGVyIHNpZGUgb2YgeW91ciByaWdodCB0aGlnaC4gCk15IGJlc3QgZnJpZW5kIGJ1aWx0IGEgQnJ1ZGljbGFkIGRlY2ssIGFjdHVhbGx5IHBsYXllZCBpdCB0b25pZ2h0IGF0IG91ciBMR1MgdG8gaW50ZXJlc3RpbmcgcmVzdWx0cyBmcm9tIHRoZSB0YWJsZS4gVGhlIHdheSBoZSBidWlsdCBpdCB3YXMgQ2xvbmUgRWZmZWN0cyBhcyB3ZWxsIGFzIHRva2VuIGdlbmVyYXRvcnMsIGNyZWF0aW5nIGNsb25lcyBvZiBoaXMgb3Bwb25lbnRzIGNyZWF0dXJlcyB0aGVuIHR1cm5pbmcgYWxsIHRva2VucyBnZW5lcmF0ZWQgaW50byBzYWlkIGNyZWF0dXJlLiAKSWNoIG11c3Mgc2FnZW4sIGRhc3MgZXMgbWljaCB6dW5jaHN0IGF1Y2ggc2VociBiZXJyYXNjaHQgaGF0LCBhbHMgaWNoIGRhcyBlcnN0ZSBNYWwgZGF2b24gaHJ0ZSwgZGFzcyBpbiBtYW5jaGVuIEJldHJpZWJlbiB0cm90eiBkZXMgZ2xlaWNoZW4gQmVydWZzIGFsbGUgdW50ZXJzY2hpZWRsaWNoIGJlemFobHQgd2VyZGVuLiBLbGluZ3QgZXR3YXMgZmFpcmVyLCB3ZW5uIG1hbiBhdWYgZGllIHVudGVyc2NoaWVkbGljaGVuIExlaXN0dW5nZW4gc2NoYXV0LCBhYmVyIGVpZ2VudGxpY2ggaXN0IFZlcmhhbmRsdW5nc2dlc2NoaWNrIHVuZCBzb21pdCBTZWxic3RiZXd1c3N0c2VpbiB1bmQgUmhldG9yaWsgZWluIG5vY2ggd2ljaHRpZ2VyZXIgRmFrdG9yLiBXZW0gZGFzIGZlaGx0LCBkZW0gYnJpbmd0IGF1Y2ggZWluZSBncmVyZSBMZWlzdHVuZyBuaWNodCBpbW1lciB3YXMuCldoYXQgYXJlIHlvdSBkb2luZyBoZXJlPwpJIGFtIE5PVCBsb29raW5nIGZvciBmcmVlIGhhbmRvdXRzIG9yIGFueXRoaW5nIGxpa2UgdGhhdCwganVzdCBob25lc3Qgd29yay4uIApPbiB0aGUgb3RoZXIgaGFuZCwgcGVvcGxlIHRoYXQgZG9uJ3QgbGlrZSBNSEEgYmVjYXVzZSBhcHBhcmVudGx5IGl0J3MgdGhlIGNvb2wgdGhpbmcgdG8gZG8sIGFyZSByZWFsbHkgZnVja2luZyB0b3hpYy4gVGhleSBjYW4ndCBldmVuIGFyZ3VlIHdpdGggeW91LCBiZWNhdXNlIHRoZXkgZG9uJ3QgaGF2ZSByZWFsIGFyZ3VtZW50cyBhbmQgb25seSBoYXRlIG9uIGl0IGJlY2F1c2UgaXQncyBtb3JlIHBvcHVsYXIgdGhhbiB3aGF0ZXZlciBzaG93IHRoZXkgbGlrZSBhbmQgdGhpbmsgZGVzZXJ2ZXMgdGhlIGF0dGVudGlvbi4uIApCdXQgY29udmVyc2F0aW9ucyB3aWxsIGJlIGhhcHBlbmluZyB0aHJvdWdob3V0IHRoZSBkYXkgdG9kYXksIGFpZGVzIHNheS4gCkl0IHdyb25nLCBidXQgbm90IGltbW9yYWwuIApJdCBwdWxsZWQgYSAyLjIgcmF0aW5nIGluIHRoZSBjb3JlIDE4IHRvIDQ5IGRlbW8sIG9mZiAyNCUgZnJvbSB0aGUgeWVhciBwcmlvci4gQW5kIHJhdGluZ3MgaGl0IGEgc2VyaWVzIGxvdyBsYXN0IHNlYXNvbi4uIApBZHZlbnR1cmVzIGluIEpvcmRhbiBhbmQgTGViYW5vbgpMaWtlIG5lYXJseSBhbGwgb2YgcG9wdWxhciBjdWx0dXJlLCBiZWdhbiBpbiB0aGUgaHVybHkgYnVybHkgb2YgdGhlIFZpY3RvcmlhbiBhZ2UuIEluZHVzdHJpYWxpemF0aW9uLCB0aGUgY3JlYXRpb24gb2YgYSBsYXJnZSB3b3JraW5nIGNsYXNzIGluIG9wcG9zaXRpb24gdG8gYSBuZXdseSBwb3dlcmZ1bCBtaWRkbGUgY2xhc3MsIGEgbmV3IG1hc3MgY3VsdHVyZSBvZiBjb25zdW1wdGlvbiwgYW5kIGEgc3lzdGVtIG9mIHJhY2lhbCBhbmQgbmF0aW9uYWwgaGllcmFyY2hpZXMgd2l0aGluIGFuIGVtcGlyZSBjcmVhdGVkIHRoZSBwZXJmZWN0IGNsaW1hdGUgZm9yIGJ1cmxlc3F1ZSwgYSB3b3JraW5nIGNsYXNzIGVudGVydGFpbm1lbnQgaW4gd2hpY2ggYWxsIHJ1bGVzIGNvdWxkIGJlIGJyb2tlbiBmb3IgY29taWMgZWZmZWN0IGFuZCBwcm9maXQuIEluZGVlZCwgaXQgd2FzIGV4YWN0bHkgdGhpcyAic2xhcCBpbiB0aGUgZmFjZSIgYXNwZWN0IG9mIGJ1cmxlc3F1ZSB0aGF0IG1hZGUgaXQgc3VjaCBhbiBpbXBvcnRhbnQgcGFydCBvZiB0aGUgZ3Jvd2luZyBlbnRlcnRhaW5tZW50IGluZHVzdHJ5LiBCdXJsZXNxdWUgcm91dGluZXMgcmV3cm90ZSBzbyBjYWxsZWQgaGlnaGVyIGFydCBmb3Jtcywgc3VjaCBhcyBvcGVyYSwgYXMgY29tZWR5IGFuZCBmYXJjZS4KVGhlIHdlYWx0aCBvZiBjdWx0dXJhbCwgaGlzdG9yaWNhbCwgYXJ0aXN0aWMsIGFuZCBlY29ub21pYyBvcHBvcnR1bml0aWVzIHRoZXJlIGlzIHBoZW5vbWVuYWwuIFRoZXJlJ3Mgbm8gYmV0dGVyIG11c2ljIG9yIGFydHMgc2NlbmUgYW55d2hlcmUgaW4gQ2hpbmEuIApTZ3QgS2VldmVycyBzYWlkIHBvbGljZSBnYXZlIG5vdGljZSB0byBvd25lcnMgdGhhdCBpdCB3YXMgaWxsZWdhbCB0byBvd24gYSBtYWNoaW5lLCByYXRoZXIgdGhhbiBjaGFyZ2luZyB0aGVtLCBhcyB0aGUgb2ZmZW5jZSBhbmQgcGVuYWx0aWVzIHdlcmUgbm90IHdpZGVseSBrbm93bi4uIApNaW5uZWFwb2xpcyBwb2xpY2UgU2VyZ2VhbnQgR3JhbnQgU255ZGVyLCB3aG8gc3BlY2lhbGl6ZXMgaW4gaHVtYW4gYW5kIHNleCB0cmFmZmlja2luZywgd29ya2VkIHdpdGggQW1iZXIgbGFzdCBzdW1tZXIsIGhlbHBpbmcgaGVyIGdldCBzdGFiaWxpemVkLiBCdXQgaGUgbG9zdCB0b3VjaCBzZXZlcmFsIG1vbnRocyBhZ28uICJXaGVuIHRoZXkgZ2V0IHRvIGFuIGFnZSB3aGVyZSB0aGV5IGdldCB0byBtYWtlIHRoZWlyIG93biBjaG9pY2VzLCBJIHRyeSB0byBtaXRpZ2F0ZSBzb21lIG9mIHRoZSByZWFsaXRpZXMgb2YgdGhlaXIgbGlmZSwgaWYgSSBhbSBhYmxlIHRvLCIgaGUgc2F5cy4uIApKb2huIFBhcm1ldGVyIGRlc2NyaWJlZCB0aGUgcG93ZXJsZXNzbmVzcyBvZiBhIHlvdW5nIGNoaWxkIGxlZnQgYWxvbmUgd2l0aCBhIHByaWVzdCB3aG8gd2FzIGhpcyBmYXRoZXIncyBkcmlua2luZyBwYXJ0bmVyIGFuZCBoaXMgbW90aGVyJ3MgY2xvc2UgZnJpZW5kLCBidXQgd2hvIHdhcyBhbHNvIGludHJvZHVjaW5nIHNleHVhbCBiZWhhdmlvdXIgaW4gc2VjcmV0LiAnJ0kgY291bGQgbmV2ZXIgYXQgdGhpcyB0aW1lIHRlbGwgYW55b25lIHRoYXQgdGhpcyBoYWQgaGFwcGVuZWQsJycgTXIgUGFybWV0ZXIgdG9sZCBwb2xpY2UgYWJvdXQgc2VyaW91cyBhbmQgaHVtaWxpYXRpbmcgc2V4dWFsIGluY2lkZW50cyBhdCB0aGUgcHJlc2J5dGVyeS4gCkxhd2FuIEFuZGEga2VtdW5na2luYW4gYWthbiBsZWJpaCBtdWRhaCBtZW1pbGloIFJhaXNlLCBrYXJlbmEgdWFuZ255YSBidWthbmxhaCB1YW5nIHN1bmdndWhhbi5EYXBhdGthbiBjaXAgbGViaWggYmFueWFrLiAKSGlzdG9yeSBoYXMgc2hvd24sIEh1ZmJhdWVyIHNheXMsIHRoYXQgInN1Y2Nlc3NpdmUgTWV4aWNhbiBnb3Zlcm5tZW50cyAgIGluY2x1ZGluZyB0aG9zZSBvZiBbcHJlc2lkZW50c10gWmVkaWxsbywgRm94LCBhbmQgUGVuYSBOaWV0byAgIGRvIHJldGFsaWF0ZS4iIEZvciBleGFtcGxlLCBhbHRob3VnaCB0aGUgY2hhcnRlciBvZiB0aGUgTkFGVEEgZXN0YWJsaXNoZWQgYSBzY2hlZHVsZSB0aGF0IHdvdWxkIGhhdmUgb3BlbmVkIHRoZSBib3JkZXIgc3RhdGVzIG9mIHRoZSBVbml0ZWQgU3RhdGVzIHRvIGNvbXBldGl0aW9uIGZyb20gTWV4aWNhbiB0cnVja2luZyBjb21wYW5pZXMgaW4gMTk5NSwgYW5kIGFsbCBvZiB0aGUgVW5pdGVkIFN0YXRlcyB0byB0aGlzIGNvbXBldGl0aW9uIGluIDIwMDAsIHRoZSBmdWxsIGltcGxlbWVudGF0aW9uIG9mIHRoZXNlIHByb3Zpc2lvbnMgd2FzIGRlbGF5ZWQgZHVlIHRvIGNvbmNlcm5zIGFib3V0IHRoZSBzYWZldHkgb2YgTWV4aWNhbiB0cnVja3MgYW5kIGRyaXZlcnMuIFRoZSBkZWxheSByZXN1bHRlZCBpbiBtdWNoIGZydXN0cmF0aW9uIGZvciBNZXhpY28sIHdoaWNoIHVsdGltYXRlbHkgaW1wbGVtZW50ZWQgcmV0YWxpYXRvcnkgdGFyaWZmcyBvbiBwcm9kdWN0cyBpbXBvcnRlZCBmcm9tIHRoZSBVbml0ZWQgU3RhdGVzLiBkaWQuIgpVbmRlcnN0YW5kaW5nIGNvbmNlcHRzIGJlaGluZCBnZW5lcmFsIGxpbmVhciBtb2RlbHMgYXJlIGZhciBtb3JlIGltcG9ydGFudCB0aGFuIGJlaW5nIGFibGUgdG8gYWN0dWFsbHkgc29sdmUgdGhlIGVxdWF0aW9ucy4gCk92ZXJ2aWV3IGZvciBuaXgwbgoiV2UgY291bGRuJ3QgbWFrZSBhIHBsYXkgdG8gZ2l2ZSB0aGUgYmFsbCBiYWNrIHRvIHRoZSBvZmZlbmNlLCIgUGF0cmlvdHMgY29ybmVyYmFjayBTdGVwaG9uIEdpbG1vcmUgc2FpZC4KWW91IGJlIHN1cnByaXNlZCBob3cgb2Z0ZW4gaXQgYSBnZW51aW5lIG1pc3Rha2UvaWdtb3JhbmNlLiBUaGUgcG9zdCBvZmZpY2Ugc2VuZHMgdGhpbmdzIHRvIHRoZSB3cm9uZyBLb3JlYSBtb3JlIHRpbWVzIHRoYW4gaXQgc2hvdWxkLiAKQnV0IHRoaXMgYW1vdW50IGdldHMgaW52ZXN0ZWQgaW4gYnV5aW5nIHRoZSBpbnZpdGF0aW9ucyBvbmx5LiAKQ2Ugbidlc3QgcGFzIG1vaSBxdWkgdmFpcyBwcmVuZHJlIGxhIHJlc3BvbnNhYmlsaXQgIHZvdHJlIHBsYWNlLkplIHBldXggYWlkZXIgIGZhaXJlIGxlIHBvaW50IHN1ciBsZSBwbGFuIHBzeWNoaXF1ZSBwb3VyIGxlIHJlc3RlIGMnZXN0IHBsdXMgZGxpY2F0LkxlIHByb2R1aXQgaW5kaXF1IHBsdXMgaGF1dCBuJ2VzdCBwYXMgaW5jb250b3VybmFibGUsIGNlIHNlcmFpdCBwbHV0dCBwb3VyIGxlcyBjYXMgZHNlc3Bycy4gTGEgbW1lIHBsYW50ZSBpbmRvbnNpZW5uZSBzZSB0cm91dmUgZGFucyBkJ2F1dHJlcyBwcm9kdWl0cywgbGEgc2V1bGUgY2hvc2UgcXVlIGplIHBldXggYWZmaXJtZXIgYydlc3QgcXUnZWxsZSBzZXJhIHRvdWpvdXJzIG1vaW5zIGNoZXIgcXVlIGNoZXogU3VwZXJzbWFydC4gTid1dGlsaXNleiBsYSBmaWNoZSBkZSBjZSBmb3Vybmlzc2V1ciBxdWUgcG91ciBsZXMgZG9ubmVzIHRlY2huaXF1ZXMgbWFpcyBwb3VyIDQ0IGxlcyBkb3NhZ2VzIHNvbnQgaW5zaWduaWZpYW50cy5MZXMgcHJvZHVpdHMgIGJhc2UgZGUgVG9uZ2thdCBtb2lzIGNvbmNlbnRyUXVhbmQgYXV4IGFsdGVybmF0aXZlcyBlbiB0ZXJtZXMgZGUgcHJvZHVpdCBtb2lucyBjb25jZW50ciBjaGV6IGloZXJiIHZvdXMgYXZleiB1biBsYXJnZSBjaG9peCA6Q2xpcXVlciBpY2kgZXQgdGFwZXIgVG9uZ2NhdCBkYW5zIGxhIGNhc2UgZGUgcmVjaGVyY2hlICFDZSBxdWUgamUgcGV1eCB2b3VzIGFzc3VyZXIgYydlc3QgcXUndW4gY29ycmVzcG9uZGFudCBhIGVzc2F5IHVuZSB2ZXJzaW9uIG1pbmltYWxlIGV0ICBkdSBhcnJ0ZXIgY2FyIGEgbCdleGNpdGFpdCB0cm9wLiAKQ3VzdG9tZXIgc3VwcG9ydCBzZXJ2aWNlIHNob3VsZCBhbHNvIGJlIGF2YWlsYWJsZSBpbiB0aGVzZSBwb2tlciB0b3VybmFtZW50cy4uIApUaGUgc3VwZXIgcmljaCB3aG8gd2VyZSByb2JiaW5nIHVzIGJsaW5kLiAKTm90IGZvciBKaW0gdGhvdWdoLiAKSm9yZGllIENoYW5kbGVyIGRyZXcgYSBwaWN0dXJlIG9mIHRoZSBtYXJraW5ncyBvbiB0aGUgdW5kZXJzaWRlIG9mIEphY2tzb24ncyBwZW5pcy4gSGlzIGRyYXdpbmdzIHdlcmUgc2VhbGVkIGluIGFuIGVudmVsb3BlLiAKWnVtIEJlaXNwaWVsOiBiZWkgZGVyIFBhdGhvbG9naWUgZGVyIE5pZXJlbiBzY2htZXJ6dCBkaWUgTGVuZGUgb2RlciBkZXIgSGFscyB1bmQgb2Z0bWFscyB2ZXJzdWNodCBlaW4gQXJ6dCwgZGVyIHNvbGNoZSBFcnNjaGVpbnVuZ2VuIG5pY2h0IGtlbm50LCBkZW4gSGFscyBvZGVyIGRpZSBMZW5kZSB6dSBoZWlsZW4uIApTbyBpdCBnb2VzIGluIHRoZXNlIGRhcmsgKHApYWdlcywgZm9yIHRoZSB2ZXJ5IG5leHQgc2NoaXNtIG1ha2luZyBwb2VtIEJ1aWxkaW5nIENvZGUsIGZ1cnRoZXIgcmVmZXJlbmNlcyBjYXZpdHkgcmlkZGxlZCBodW1hbiBtb2xhcnMsIHNrZWxldG9uLCB0aWJpYSwgaGFpciwgY2FydGlsYWdlLCBkaXNsb2NhdGVkIGh1bWFuIHNwaW5lLCBjbGFtbXkgaGFuZHMgIHdoZXJlYnkgaHVtYW5pdHkgaXMgZGVjb25zdHJ1Y3RlZCBtZXRhcGhvcmljYWxseSBhbmQgZGV2b2x2ZWQgcGh5c2ljYWxseSAgIGJ5IGh1bWFucy4gU21hbGwgaW4gc2l6ZSBpdCBpcyBiaWcgYW5kIGRlbnNlIHdpdGhpbiAgd2l0aCBvdmVyIDUwIHBvZW1zIHRoYXQgdGFrZSB1cyBvbiBzb21lIHdpZGUgcmFuZ2luZyBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwgam91cm5leXMuIFRoZXkgYXJlIHNob3J0IHBpdGh5LCBwb2VtcywgdXN1YWxseSBvbmUgb3IgdHdvIHBhZ2VzLCB3aXRoIHN0YWNjYXRvIHJoeXRobXMsIG9mdGVuIG9uZSB3b3JkIGxpbmVzLCBhbmQgdmFyaWVkLCBvZnRlbiB1bnVzdWFsLCB1c2Ugb2YgcmVwZXRpdGlvbiwgYWxsaXRlcmF0aW9uLCBtZXRhcGhvciwgc2ltaWxlcyBhbmQgb3RoZXIgdGVjaG5pY2FsIHRvb2xzLi4gCkl0cyBqdXN0IHdpdGggbGlnaHRlbmluZyBteSBsb2FkIGFuZCBpbiB0aGUgcHJvY2VzcyBvZiBnb2luZyBVTCBpdmUgY29tZSB0byBoYXZlIGEgbG92ZSBoYXRlIHJlbGF0aW9uc2hpcCB3aXRoIG15IFJhdGlvIDE1LiBUaGUgMzAgaXMgY29tZm9ydCByYXRlZCB0byAzOS4gClRoZSBJbmR5IEVsZXZlbiB3YW50cyB0aGUgY2l0eSB0byBmbG9hdCBib25kcyBmaW5hbmNlZCBieSB0YXhlcyBjb2xsZWN0ZWQgYXQgYSAyMCwwMDAgc2VhdCBzdGFkaXVtLiBUZWFtIG93bmVyIEVyc2FsIE96ZGVtaXIgd291bGQgZmluYW5jZSBhbmQgYnVpbGQgYSBob3RlbCwgb2ZmaWNlIGFuZCByZXRhaWwgZGV2ZWxvcG1lbnQgYXJvdW5kIGl0LiAKU2NhbiB0aGUgY29sbGFnZSBhbmQgcHJpbnQgb3V0IGhpZ2ggcXVhbGl0eSBjb3BpZXMuIApTaGUgYmVlbiB3cml0aW5nIHByb2Zlc3Npb25hbGx5IHRocm91Z2ggYnJva2VycyBldmVyIHNpbmNlLiBXaXRoIGFuIEVuZ2xpc2ggbWFqb3IgYmFja2dyb3VuZCBzaGUgY3JlYXRlcyBhcnRpY2xlcyBhbmQgZWJvb2tzIG9uIGEgd2lkZSB2YXJpZXR5IG9mIHN1YmplY3RzLi4gClNhbGFkdG9zc3BlcnNvbiB1CkhvdyBkb2VzIHRoaXMga2luZCBvZiBtZXNzYWdpbmcgaGVscCBhbnlib2R5PyBBbGwgaXQgZG9lcyBpcyBtYWtlIHRoZSBmZXcgd2hvIGFyZW4gc3VmZmVyaW5nIGZlZWwgYmV0dGVyIGFib3V0IHRoZW1zZWx2ZXMuCkRhcyAiYnJhdWNoZW4gd2lyIGRhcyBmci4/IiBVbmQgZGFyYXVmIGZvbGdlbmRlICJ3YXJ1bSBlcnpobGVuIHNpZSB1bnMgZGFubiBzb3dhcz8iIEthbSBpbiB1bmdlZmhyIGplZGVyIFVudGVycmljaHRzc3R1bmRlIHZvci4gCkkgaGF2ZSBteSBwaG9uZSBvbiBsb3VkIHdoZW4gSSBnbyB0byBzbGVlcCBpbiBjYXNlIG9mIGZhbWlseSBlbWVyZ2VuY2llcyBhbmQgd2hlbiB0aGUgcGhvbmUgZ29lcyBvZmYgYXQgdGhvc2UgaG91cnMgSSBnZXQgdXAgd2l0aCBoYXN0ZSBzdHJlc3NlZCB0aGlua2luZyBzb21ldGhpbmcgaXMgd3JvbmcuIEhvd2V2ZXIgb24geW91ciBwYXJ0IGl0IHdhcyBhIGdlbnVpbmUgb29wc2llIHNvIHlvdSBub3QgYW4gYXNzaG9sZSBmb3IgdGhpcy4KT3VyIG9iamVjdHMuIEFyb3VuZCBhIHRoaXJkIG9mIG91ciBSTE9zIGhhdmUgYmVlbiBjb21waWxlZCBpbnRvIElNUyBDb250ZW50IFBhY2thZ2VzIChpZSB6aXBmaWxlcyB3aXRoIG1ldGFkYXRhKSB3aGljaCB5b3UgY2FuIGRvd25sb2FkIGZvciBsb2NhbCB1c2UsIGFmdGVyIGZpbGxpbmcgaW4gYSBzaG9ydCBmb3JtIGZvciBvdXIgcmVzZWFyY2guIFRvIHNlZSBpZiB0aGUgUkxPIHlvdSdyZSBpbnRlcmVzdGVkIGluIGhhcyBiZWVuIHBhY2thZ2VkLCBjbGljayBvbiB0aGUgaW5mb3JtYXRpb24gaWNvbiBieSB0aGUgUkxPIHRpdGxlIGluIHRoZSBSTE8gbGlzdCB3aGljaCBkaXNwbGF5cyBtZXRhZGF0YSBvbiB0aGUgb2JqZWN0IGFuZCBhIGxpbmsgdG8gaXRzIHBhY2thZ2UsIGlmIG9uZSBleGlzdHMuIApJIGhhdmUgdGhlIHNhbWUgcGFpbiBhbmQgaGF2ZSBoYWQgaXQgZm9yIHByb2JhYmx5IHRoZSBlbnRpcmUgM3JkIHRyaW1lc3RlciwgbWF5YmUgbG9uZ2VyLiBCdXQgeWVzLCBkZWZpbml0ZWx5IGdldHMgd29yc2UgYXMgdGltZSBnb2VzLiAKSSdtIHdvbmRlcmluZyBzaG91bGQgSSB3YWl0IG9uIHRoYXQgY29tcGFueSB0byByZWxlYXNlIHRoZWlyIGJvYXJkIG9yIGdvIHdpdGggYSBkaWZmZXJlbnQgNjAlIGJ1aWxkIGFuZCB3aGljaCB3b3VsZCB5b3UgcmVjb21tZW5kPyBJIGp1c3QgZmVlbCBsaWtlIHRoZSBwZW9wbGUgb3ZlciBhdCBnbG9yaW91cyBhcmUgc2ltaWxhciB0byBmaW5hbCBtb3VzZS4gVGhleSBoeXBlIHRoZWlyIHByb2R1Y3RzIHVwLiBXb3J0aCBub3RpbmcgSSBkb24ndCByZWFsbHkgaGF2ZSBhIHN0cmljdCBidWRnZXQuLiAKU28gdGhpcyBtb250aCB3ZSB3YW50IHRvIGNlbGVicmF0ZSB0aGF0LiAKV2hlbiB0aGUgZmVzdGl2YWwgYmVnaW5zIG9uIEZlYnJ1YXJ5IDIzLCA1MyBvZiB0aGUgMTYwIHBhcnRpY2lwYXRpbmcgd2luZXJpZXMgd2lsbCBiZSBmcm9tIENhbGlmb3JuaWEuLiAKQW55d2F5IGxvbmcgc3Rvcnkgc2hvcnQgaGUgd2lucyBidXN0cyBvdXQgb2YgdGhhdCBkaW1lbnNpb24gd2l0aCB0aGUgcG93ZXIgb2YgYXBwbGUgcGllIGFuZCBmcmVlZG9tcyBhbmQgZW5kcyB1cCB3aXRoIGEgYmlnIGZpZ2h0IHdpdGggaHlkcmEgY2FwIGFuZCB3aW5zLiAKSG93IHdlIHJldGFpbiBwZW9wbGUgd2hvIHdvcmsgd2l0aCB1cywgbWFpbnRhaW4gdGhlIHBhY2UgYXQgd2hpY2ggd2Ugb3BlcmF0ZSBhbmQgY29udGludWUgdG8gdGhyaXZlIGluIGNoYWxsZW5naW5nIGNpcmN1bXN0YW5jZXMgbGlrZSBzaG9vdGluZyB3aXRoIHBob25lcywgd2hpY2ggd2UgZG8gYWxsIHRoZSB0aW1lLCBpcyBzb21ldGhpbmcgd2UgZm9jdXMgb24gYXMgbW9kZXJhdG9ycywiIGNvbmNsdWRlcyBQYW5kaXRhLi4gClRoZSBoZWF2eXdlaWdodCBkaXZpc2lvbiBoZXJlIGluIHRoZSBVSyBoYXMgYXQgbGVhc3Qgc29tZSBmaWdodGVycyB0aGF0IGRpdmlkZSBvcGluaW9ucyBhcyB3aWRlIGFzIFdpbGRlciB3aGVuIHRoZSByaWNoZXN0IHByaXplIGluIHNwb3J0IGlzIGRpc2N1c3NlZC4gVHlzb24gRnVyeSBhbmQgRGVyZWNrIENoaXNvcmEgbWF5IGNsYXNoIGluIHRoZSBzdW1tZXIgYWdhaW4uIEJvdGggYXJlIGdvb2QgdGFsa2VycyBhbmQgYm90aCB3aXRoIGRlZXAgYmVsaWVmIGluIHRoZWlyIGZpZ2h0aW5nIGFiaWxpdHkuIFRoZXkgbWF5IHRhbGsgd2VsbCB0aGV5IGtub3cgdGhlIGh5cGUgZ2FtZSBqdXN0IGFzIHdlbGwgYm90aCBjb21lIHRvIGZpZ2h0LgpJIHByYXkgYXMgSSBoYXZlIHNlcnZlZCB5b3UgdGhhdCBJIGhhdmUgYmxlc3NlZCB5b3UgYW5kIGVuYWJsZWQgeW91IHRvIGVmZmVjdGl2ZWx5IGxlYWQgdGhlIEFtZXJpY2FuIHBlb3BsZS4gVGhhbmsgeW91IGFnYWluIE1yLiBQcmVzaWRlbnQgZm9yIHRoZSBob25vciBvZiBzZXJ2aW5nIHlvdSBhbmQgSSB3aXNoIHlvdSBHb2RzcGVlZCBpbiBhbGwgdGhhdCB5b3UgcHV0IHlvdXIgaGFuZCB0by4uIApHTSBHaWxsaXMgaGFzICJmdWxsIGNvbmZpZGVuY2UiIFJvYmVydG8gTHVvbmdvIHdpbGwgcmV0dXJuIHRvIENhbnVja3M7IFRyYW5zbGF0aW9uOiBVaCBPaCBKdWx5IDI0LCAyMDEzV29yZCBjYW1lIGxhdGUgV2VkbmVzZGF5IGFmdGVybm9vbiwgdGhhdCBMdW9uZ28gaGFkIGFjcXVpcmVkIGEgbmV3IGFnZW50LiBEb2VzIHRoaXMgbWVhbiBoZSBpcyB0aGlua2luZyBvZiBtYW5ldXZlcmluZyBoaXMgd2F5IHRvIGEgbmV3IHRlYW0/IE9ubHkgdGltZSB3aWxsIHRlbGwuIEJhcnJ5IGNvbmZpcm1zIGhlIGFuZCBwYXJ0bmVyIFBhdCBCcmlzc29uIG9mIENBQSBTcG9ydHMgYXJlIG5vdyByZXByZXNlbnRpbmcgTHVvbmdvLiAKRnVydGhlciwgYWx0aG91Z2ggb3RoZXIgc3R1ZGllcyBoYXZlIHN1Z2dlc3RlZCB0aGF0IENDRCByZWxhdGVkIG1vcnRhbGl0eSBpbiBob25leSBiZWUgY29sb25pZXMgbWF5IGNvbWUgZnJvbSBiZWVzJyByZWR1Y2VkIHJlc2lzdGFuY2UgdG8gbWl0ZXMgb3IgcGFyYXNpdGVzIGFzIGEgcmVzdWx0IG9mIGV4cG9zdXJlIHRvIHBlc3RpY2lkZXMsIHRoZSBuZXcgc3R1ZHkgZm91bmQgdGhhdCBiZWVzIGluIHRoZSBoaXZlcyBleGhpYml0aW5nIENDRCBoYWQgYWxtb3N0IGlkZW50aWNhbCBsZXZlbHMgb2YgcGF0aG9nZW4gaW5mZXN0YXRpb24gYXMgYSBncm91cCBvZiBjb250cm9sIGhpdmVzLCBtb3N0IG9mIHdoaWNoIHN1cnZpdmVkIHRoZSB3aW50ZXIuIApXaGlsZSB0aGVzZSBjYXJkcyBtYXkgbm90IGJlIGZvciBldmVyeW9uZSB0aGV5IGNhbiBhZGQgYW4gZW50aXJlbHkgbmV3IGRpbWVuc2lvbiB0byB5b3VyIG9jY2FzaW9uYWwgY2FyZCBnYW1lIGFuZCBicmluZyBhIGxpZ2h0ZXIgc2lkZSB0byBhbnkgY2FyZCBnYW1lLgpCYXNpY2FsbHkgaGUgd2VudCBwcmV0dHkgc21hbGwgb24gZWFjaCBzdHJlZXQuIEkgZmVlbCBsaWtlIG92ZXJwYWlycyB3b3VsZCBzaXplIHVwIG9uIGEgZmxvcCBsaWtlIHRoaXMgd2l0aCBwb3NzaWJsZSBzdHJhaWdodCBjYXJkcy4gSSdkIGFsc28gc2F5IHRoaXMgYm9hcmQgZmF2b3JzIHlvdSBhIGxvdCBtb3JlIHRoYW4gaXQgZG9lcyBoaW0uIApJIGFncmVlIGNvbXBsZXRlbHkuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbkkgV09VTEQgbGlrZSB0aGUgY29tbXVuaXR5IHRvIGJlIGF3YXJlIG9mIHRoZSBmb2xsb3dpbmc6ICAgV2hlbiB0aGUgQ29yb3dhIEJvd2xpbmcgQ2x1YiB3ZW50IGludG8gcmVjZWl2ZXJzaGlwLCBhIGdyb3VwIG9mIGNvbmNlcm5lZCBjaXRpemVucyBwdXJjaGFzZWQgdGhlIGxhbmQgbGVhc2UgYW5kIGJ1aWxkaW5nIHdpdGggdGhlIGludGVudGlvbiBvZiBnZXR0aW5nIGl0IGJhY2sgdXAgYW5kIHJ1bm5pbmcgYXMgYSBjb21tdW5pdHkgY2x1YjsgICBOaW5lIHNwb3J0aW5nIGNsdWJzIHJlcHJlc2VudGluZyB0aGUgY29tbXVuaXR5IG9mIENvcm93YSB0b29rIG9uIHRoZSBjaGFsbGVuZ2UgYWxvbmcgd2l0aCBJdmFuIFJvc3MgYW5kIGdvdCB0aGUgY2x1YiBvcGVyYXRpbmcgb25jZSBhZ2FpbjsgICBBZnRlciBmaXZlIHllYXJzIG9mIG9wZXJhdGlvbiB0aGUgc3BvcnRpbmcgY2x1YnMgc29sZCB0aGUgbGVhc2UgYW5kIGJ1aWxkaW5nIHRvIHRoZSBSU0wgQ2x1YiBmb3IgJDUwMCwwMDAgd2hpY2ggd2FzIHBhaWQgYmFjayB0byB0aGUgb3JpZ2luYWwgZ3JvdXAgb2YgY29uY2VybmVkIGNpdGl6ZW5zOyAgIFRoZSBSU0wgQ2x1YiB3YXMgYWxzbyBoYW5kZWQgbW9yZSB0aGFuICQxLDAwMCwwMDAgd29ydGggb2YgcG9rZXIgbWFjaGluZSBsaWNlbmNlcyBmcm9tIHRoaXMgY29tbXVuaXR5IGdyb3VwOyAgIFRoZSBSU0wgc3RhdGVkIHRoYXQgdGhleSB3b3VsZCBydW4gdGhlIGNsdWIgZm9yIGEgbWluaW11bSBvZiBmaXZlIHllYXJzIHRvIHNob3cgdGhhdCB0aGUgcHVyY2hhc2Ugd2FzIGdlbnVpbmU7IGFuZCwgICBKdXN0IG9uIGZpdmUgeWVhcnMgbGFwc2VkLCBhbmQgdGhlIFJTTCBjbG9zZWQgdGhlIGNsdWIuIEkgZmVlbCB0aGF0IHRoZSBSU0wgQ2x1YiBvd2VzIGEgZGVidCB0byB0aGUgY29tbXVuaXR5IG9mIENvcm93YSBiZWNhdXNlIHdlIGhhdmUgZ2l2ZW4gdGhlbSB0aGUgcG9rZXIgbWFjaGluZSBsaWNlbmNlcyB0byBjb250aW51ZSB0byBvcGVyYXRlIHRoZSBjbHViLCB3aGljaCB0aGV5IGhhdmUgbm90IGRvbmUuIElmIHRoZSBSU0wgd2VyZSBmYWlyIGRpbmt1bSwgdGhleSB3b3VsZCBnaXZlIHRoZSBib3dsaW5nIGNsdWIgYnVpbGRpbmcgdG8gdGhlIENvcm93YSBTaGlyZSAodGhlIGNvbW11bml0eSkgZm9yIGJvd2xpbmcgYWN0aXZpdGllcyBhbmQgY29tbXVuaXR5IHB1cnBvc2VzLiAKQW50aSBpbmZsYW1tYXRvcnkgYmVuZWZpdHMgb2YgdmlyZ2luIG9saXZlIG9pbCBhbmQgdGhlIHBoZW5vbGljIGNvbXBvdW5kIG9sZW9jYW50aGFsLjMuIApDb3N0OiAkMTAgZm9yIHF1YWxpZmllZCBwbGF5ZXJzLiAkNTAgZm9yIGFsbCBvdGhlcnMuClNlbnRpbWVudHMgZGV2ZWxvcGVkIG92ZXIgeWVhcnMgZGV0ZXJtaW5lIGNoYXJhY3Rlci4gUmFyZWx5IGlzIGFueSBtYW4gYmV0dGVyIHRoYW4gaGlzIHdvcmRzLiBUaGVyZSBpcyBubyB3YXkgdG8gY2hlY2sgaW50ZW50aW9uYWxpdHkuIE5vbmUgY2FuIHNtZWxsIGNoYXJhY3RlciB1bmxlc3MgaXQgc3RpbmtzLiBHcmVhdCwgaGFuZHNvbWUgcGh5c2ljYWwgbG9va3MsIHdpdGhvdXQgdGhlIHByZXNlbmNlIG9mIGEgbGV0aGFsbHkgbGlrZWFibGUgYXR0cmlidXRlcywgaXMgYSBzdXJlIHNvcmUgdGhpbmcgdG8gdGhlIGV5ZS4KSG9tZSBpbnNwZWN0aW9uIHdhcyBwcmV0dHkgc29saWQgYnV0IGEgaGVhdCBwdW1wIHdhc24ndCB3b3JraW5nLiBHb3QgdGhlIHJlcG9ydCBiYWNrIGFuZCB0aGF0IHdhcyByZWFsbHkgdGhlIG9ubHkgdGhpbmcgdGhhdCBuZWVkZWQgdG8gYmUgZml4ZWQuIEkgbGV0IHRoZSBzZWxsZXIga25vdyB0aGF0IGl0IHdvdWxkIGhhdmUgdG8gYmUgZml4ZWQgZXhwZWN0aW5nIG1heWJlIHdlIHdvdWxkIGhhdmUgdG8gc3BsaXQgdGhlIGNvc3QuIEhlIGxldCBtZSBrbm93IGl0IHdhcyBhbHJlYWR5IG9uIG9yZGVyIGFuZCB3YXMgZ29pbmcgdG8gYmUgaW5zdGFsbGVkIHRoZSBmb2xsb3dpbmcgd2Vlay4gSSB3YXMgbGlrZSBUT1RBTCBTQ09SRSEgRm9yIG1lIHRoaXMgd2FzIGEgaHVnZSBodXJkbGUgdGhhdCBtYWRlIG1lIHRoaW5rIHdlIGFyZSBhY3R1YWxseSBnb2luZyB0byBjbG9zZSBvbiB0aGlzIGRlYWwuCkRpY2sgaGFkIGEgaGlnaGx5IHN1Y2Nlc3NmdWwgcHJhY3RpY2UsIGRpc3Rpbmd1aXNoZWQgY2FyZWVyIGFuZCBoYWQgbWFueSBvdXRzdGFuZGluZyBwZXJzb25hbCBhY2NvbXBsaXNobWVudHMuIApRdWVsbGUgZXN0IGxhIHZyYWllIG5hdHVyZSBkdSBsaWVuIHF1aSBsaWUgSGFycnkgZXQgQmlsbCA/IFF1ZSBjaGVyY2hlIHZyYWltZW50IEphbWVzID8gUXVlIGRzaXJlIFN0ZWxsYSA/IFF1ZWxzIHJnbGFnZXMgcGFzc2lvbm5lbHMgZ3VpZGVudCBjaGFjdW4gZGUgY2VzIHBlcnNvbm5hZ2VzIGVudHJlIGZhbnRhc21lIGV0IGphbG91c2llID8gUGludGVyIG5vdXMgY29uZHVpdCBzdXIgZGUgbXVsdGlwbGVzIHBpc3RlcyBjb21tZSBhdXRhbnQgZGUgZHBhcnRzIGRlIGZpY3Rpb25zLiAKVGhleSBtaWdodCBoYXZlIGFsc28gcmVtZW1iZXJlZCB0aGF0IHRoaXMgc2FtZSB3b21hbiB3YXMgc2VlbiBvbiBuYXRpb25hbCB0ZWxldmlzaW9uIGNvb2tpbmcgZm9yIEdyZXRhIHZhbiBTdXN0ZXJlbiBhbmQgTWF0dCBMYXVlci5Pa2F5LCBQYWxpbiBjb29rZWQgb24gVFYgd2l0aCBNYXR0IExhdWVyLiAKSSBuZXZlciBzZWVuIHNvbWVvbmUgc28gZXhjaXRlZC4gClN0eWxlcyBpbiB0aGUgSGVsbGVuaXN0aWMgcGVyaW9kIHdlcmUgbm8gbG9uZ2VyIGVuY29tcGFzc2luZyBhbGwgb2YgR3JlZWNlLCBidXQgdGhlcmUgd2VyZSBtYW55IGRpZmZlcmVudCBzdHlsZXMgZm9yIGRpZmZlcmVudCBnZW5yZXMuIEluIHRoaXMgcGVyaW9kIHRoZSBmaXJzdCB0ZXh0cyBhYm91dCB0aGUgb2xkZXIgZm9ybXMgb2YgYXJ0cyAob2YgdGhlIENsYXNzaWMgUGVyaW9kKSB3ZXJlIHdyaXR0ZW4gYW5kIHRoZWlyIGRldGFpbGVkIHN0dWR5IGJlZ2FuLCBpdCB3YXMgdGhlcmVmb3JlIHRoZSBiZWdpbm5pbmcgb2YgYXJ0cyBoaXN0b3J5LiBIaXN0b3JpYW5zIHRyaWVkIHRvIHNob3cgdGhlIGRldmVsb3BtZW50IHRvIGEgbW9yZSByZWFsaXN0aWMgc3R5bGUgKG9yIGV2ZW4gYmV0dGVyIHRoYW4gcmVhbGlzdGljKSBhcyB3ZWxsIGFzIHdyaXRlIGRvd24gYmlvZ3JhcGhpZXMgb2YgaW1wb3J0YW50IGFydGlzdHMuLiAKTm90aGluZyBzZWVtcyB0byBiZSBvbiBkZWNrIHNvIEkgdGFsa2VkIHRvIHRoZSBvd25lciBvZiBteSBneW0gaW4gVHVsc2Egd2hvIGlzIHdpbGxpbmcgdG8gaG9zdC4gClRoZSBmaXJzdCBpbnN0YWxtZW50IHdhc24ndCBldmVyeW9uZSdzIGN1cCBvZiB0ZWEsIGJ1dCBJIHRob3VnaHQgaXQgd2FzIGEgY2xhc3NpYyBwaWVjZSBvZiBjaW5lbWEgd2l0aCBpdHMgY2xldmVyIGNvbG91ciBzY2hlbWUgYW5kIG9sZCBIb2xseXdvb2QgY2hhcmFjdGVycy5JdCBtb3ZlZCBhdCBhIHBhY2Ugd2l0aCBzdG9yaWVzIGludGVyd2VhdmluZyBhbmQgYXVkaWVuY2VzIHNjcmFtYmxpbmcgdG8gZmluZCBvdXQgbW9yZSBhYm91dCB0aGUgY2hhcmFjdGVycyBvZiB0aGUgY3JpbWUgcmlkZGxlZCBCYXNpbiBDaXR5LlRoZSBmaXJzdCBmaWxtIHdhcyBhIGd1ZXNzaW5nIGdhbWUsIGNoYXJhY3RlcnMgcmV2ZWFsZWQgbGl0dGxlIGFuZCB0aGVpciBwYXN0IGxpdmVzIHdlcmUgYSBteXN0ZXJ5LiAKU2Vjb25kLCBtYW55IGl0ZW1zLCBwYXJ0aWN1bGFybHkgZnJlZSByZXNwb25zZSBzdHlsZSBpdGVtcywgaW5jbHVkZWQgcXVlc3Rpb25zIGFib3V0IFVuaXRlZCBTdGF0ZXMgaGlzdG9yeSBhbmQgcG9wdWxhciBjdWx0dXJlLiAKQW5kZXJzb24gYWxsZWdlZGx5IGhvdmVyZWQgb3ZlciBoZXIgYXMgc2hlIHdhbGtlZCBvdXQgb2YgRWxlbWVudHMsIGFzIHRob3VnaCB3b3JyaWVkIHNoZSB3b3VsZCBzYXkgc29tZXRoaW5nLiBVbndpbGxpbmcgdG8gYnJ1c2ggb2ZmIHRoZSBlbnRpcmUgZXhwZXJpZW5jZSwgdGhlIHdvbWFuIHdhaXRlZCBhIHNob3J0IHRpbWUgYmVmb3JlIHJldHVybmluZyB0byB0ZWxsIHRoZSBtYW5hZ2VyIHdoYXQgaGFkIGhhcHBlbmVkLiBBbmRlcnNvbiB3YXMgcHJvbXB0bHkgZmlyZWQuCkEgbG90IG9mIHRoZSB0cmFjayBpcyBwcm90ZWN0ZWQgYnkgZWxldmF0aW9uLCBidXQgbm90IGFsbCBidXQgdGhlIGJpZ2dlc3QgY2hhbGxlbmdlcyBhcmUgb3BlbiBwbGF0Zm9ybXMgYW5kIGEgbW9yZSBjb21wbGV4IHBvaW50cyBzeXN0ZW0uIFRoZWlyIHNvbHV0aW9uIGlzIHRvIGhhdmUgYSBjb25kdWN0b3IvZ3VhcmQga25vd24gYXMgYSBQU0Egb3IgUGFzc2VuZ2VyIFNlcnZpY2UgQWdlbnQgd2hvIGNhbiBoaXQgdGhlIGJ1dHRvbiB0byBzdG9wIHRoZSB0cmFpbiBhbmQgSSBiZWxpZXZlLCBkcml2ZSBpdCBpbiBlbWVyZ2VuY3kuIApEaWFiZXRlcyBUeXBlIDIgUmV2ZXJzYWwgd2l0aCBkaWV0Ck9uZSB0byB0YWtlIHJpc2tzOiBSaXRhIG9vemVkIGJvZHkgY29uZmlkZW5jZSBhcyBzaGUgZXhlY3V0ZWQgaGVyIHNhcnRvcmlhbCBjaG9pY2UgdG8gcGVyZmVjdGlvbgpTdGFuZCBVcCBXb3JrIFN0YXRpb25zCk15IGNsaWVudCBmZWVscyB0aGF0IGFsbCB5b3VyIGJvdW5jZXJzIGFyZSBsYWNraW5nIG1hbmhvb2QgdG8gYWNjZXB0IG9wZW4gcHVibGljIGNoYWxsZW5nZXMuIEhvcGVmdWxseSB0aGV5IHdvbiBuZWVkIHRvIHdvcnJ5IGFib3V0IHVyaW5hdGluZyB0aGVpciB0cm91c2VycyBuZXh0IHRpbWUuIApCYXNlZCBvbiBleHBlcmllbmNlcyBvZiBzb21lIHBlb3BsZSBJIGtub3csIHRoZXkgZGlkbiBoYXZlIGdvb2QgZXhwZXJpZW5jZXMgYW5kIGV2ZW4gZmVsdCBkaXN0cmVzc2VkLiAKVGhlIEZCSSBwcm9iZSBpbnRvIGFnZW5jeSBtZWRpYSBidXlpbmcgcHJhY3RpY2VzIHdhcyBub3Qgb24gdGhlIGZvcm1hbCBhZ2VuZGEsIGJ1dCBpdCBjYW1lIHVwIGluIHNvbWUgc3VidGxlIGFuZCBub3Qgc28gc3VidGxlIHdheXMuIFdvb2QsIHRoZSBBTkEgZ2VuZXJhbCBjb3Vuc2VsLCBmaWVsZGVkIGEgcXVlc3Rpb24gYWJvdXQgaXQgYXQgdGhlIGVuZCBvZiBoaXMgc3BlZWNoIG9uIEdEUFIuIEhlIHRoZW4gZGV0YWlsZWQgdGhlIHNvcnRzIG9mIGNyaW1pbmFsIGNoYXJnZXMgYWdlbmN5IGV4ZWN1dGl2ZXMgY291bGQgZmFjZSwgaW5jbHVkaW5nIGZyYXVkIGFuZCBjb25zcGlyYWN5LiAKUGVvcGxlIGhhdmUgY2FsbGVkIGZvciBpdCBmb3IgeWVhcnMuIEkgaGF2ZSBtaXhlZCBmZWVsaW5ncyBhYm91dCBpdC4gCiJJIGdvaW5nIHRvIHByb2JhYmx5IGp1c3QgaGVhZCBvdXQgYW5kIGZpbmQgYSBiZXR0ZXIgcGxhY2UgdGhhdCB0b28gcXVpZXQuIEkgZG9uIGV2ZW4gYm90aGVyIGxldHRpbmcgdGhlIGlubiBrZWVwZXIga25vdyB0aGV5IGxvc3QgbXkgYnVzaW5lc3MuIEhvdyBhbSBJIHN1cHBvc2VkIHRvIHRha2UgZGVwcmVzc2lvbiBuYXBzIHdpdGggYWxsIHRoYXQgbm9pc2U/IEkgY2FuIGV2ZW4gZ2V0IGEgZ29vZCBiYXJkIHRvIGVudGVydGFpbiBtZT8gVGhpcyBwbGFjZSBpcyB0cmFzaC4iCkluIG15IGRpdm9yY2UsIGl0IGp1c3Qgd2FzbiBoYXBwZW5pbmcuIE15IGV4IHdvdWxkIGZpZ2h0IG1lIG9uIGFueXRoaW5nIGFuZCBldmVyeXRoaW5nIHBvc3NpYmxlLCBhbmQgZ29pbmcgdGhyb3VnaCB0aGUgYXR0b3JuZXlzIGFjdHVhbGx5IGdvdCB0aGluZ3MgcmVzb2x2ZWQgbW9yZSBxdWlja2x5LiBNeSBleCB3b3VsZCByZWFsbHkgb25seSBsaXN0ZW4gdG8gd2hhdCBoaXMgYXR0b3JuZXkgc2FpZCwgc28gdGhlIHNvb25lciBJIGdvdCB0aGUgaXNzdWUgdG8gdGhhdCBndXksIHRoZSBzb29uZXIgc2FpZCBpc3N1ZSB3YXMgcmVzb2x2ZWQuIEl0IGRpZG4gbWF0dGVyIGlmIEkgc2FpZCBib28gYW5kIHRoZW4gbXkgYXR0b3JuZXkgc2FpZCBib28sIGhpcyBhdHRvcm5leSB3YXMgdGhlIG9uZSB0aGF0IGhhZCB0byBzYXkgaXQgZm9yIGhpbSB0byBhY3R1YWxseSBhY2NlcHQgImJvbyIsIGt3aW0/CkNvbG9yIGFuZCBpdHMgdXNlIGFuZCBhYnVzZSBpcyBhIHZlcnkgcGVyc29uYWwgdGhpbmcgZXNwZWNpYWxseSB0aGUgImFidXNlIiBwYXJ0LiAKQXMgYSByZXN1bHQsIHRoZXkgd2lsbCBnbyBmb3JmcmVlIHBva2VyIHRvdXJuYW1lbnRzYXMgdGhleSBjYW4gcGxheSBhbmQgd2luIHdpdGhvdXQgZ2l2aW5nIG91dCBtb25leSBmaXJzdC4gU29tZSBkbyBub3QgbWluZCBwYXlpbmcgZm9yIHRoZSBtb25leSBpZiBpdCBpcyBmb3IgYSBnb29kIGNhdXNlLi4gCkFuIGF1dGhlbnRpYyBjaHVjayB3YWdvbiBhbmQgaW4gdGhlIGJhY2tncm91bmQgc2NlbmVzIGZyb20gdGhlIDE5MjcgYW5kIDE5MjkgY293dGhpZXZlcyBwYXJ0eSBhdCBXb29sYXJvYy4gClNTRCB3b24ndCBnaXZlIGFueSBhZHZhbnRhZ2Ugb3ZlciA3MjAwIFJQTXMsIHdoaWxlIHRoZXJlIGlzIGEgbG90IGluZm9ybWF0aW9uIGdvaW5nIG9uIGl0cyBhbGwgc3VwZXIgc21hbGwgYW1vdW50IG9mIGRhdGEuIEkgbWVhbiBhIGJ1ZGR5IG9mIG1pbmUgd2hvIHJlY2VudGx5IHN0b3BwZWQgcGxheWluZyBvbmxpbmUgcG9rZXIgZm9yIGEgbGl2aW5nIGhhZCBtaWxsaW9ucyBvZiBoYW5kcyBpbiBoaXMgZGF0YWJhc2Ugd2hpY2ggdG9vayB1cCBubyBtb3JlIHRoYW4gMjBHQiBJIHRoaW5rIGhlIHNhaWQuIApJbiB0aGUgb2Zmc2Vhc29uLCBFbGxpbmd0b24gYW5kIGhpcyB3aWZlIHdpbGwgcGxhbiBkYXkgZGF0ZXMgdG8gdGhlIG5haWwgc2hvcC4gClRoZXkgY3JlYXRlZCBUcnVtcCB0aHJvdWdoIHllYXJzIG9mIHByb3BhZ2FuZGEsIG1lZGlhIGRpc2luZm9ybWF0aW9uIGFuZCBjb250cm9sbGVkIG9wcG9zaXRpb24uIApJIG5hcnJvd2x5IG1pc3NlZCBtYWtpbmcgaXQgdG8gdGhlIFBhcnR5UG9rZXIgbWlsbGlvbnMgdG91cm5hbWVudCB3aXRoIGEgJDEwLDAwMCBidXkgaW4gYW5kIGEgcHJpemUgcG9vbCBvZiAkNy41IE1pbGxpb24uIEZvciAkNiBJIHdvcmtlZCBteSB3YXkgdXAgdG8gdGhlIGZpbmFscyB3aGVyZSBJIG5lZWRlZCB0byBjb21lIGluIG9uZSBvZiB0aGUgdG9wIDQgcG9zaXRpb25zLiAKUGxheSBhIGdhbWUsIHdhdGNoIGEgY29tZWR5LCBnbyBmb3IgYSB3YWxrIGlmIHRoZSB3ZWF0aGVyIHJlYWxseSBuaWNlLCBldGMuSSBub3QgZ29pbmcgdG8gc2F5IHRoZXNlIDIgdGhpbmdzIGFyZSBnb2luZyB0byBjaGFuZ2UgeW91ciBsaXZlcyBvdmVyIG5pZ2h0LiBJdCBkb2VzIHRha2UgdGltZSBhbmQgZGVkaWNhdGlvbiBhbmQgaXQgd29uIGFsd2F5cyBiZSBlYXN5LiBCdXQgaWYgeW91IGJvdGggd2lsbGluZyB0byBtYWtlIHRoZXNlIG1pbm9yIGNoYW5nZXMgYW5kIGJlIGNvbnNpc3RlbnQgd2l0aCB0aGVtLCBJIHRoaW5rIHlvdSBjYW4gb3BlbiB0aGUgZG9vciBmb3IgbXVjaCBncmVhdGVyIHByb2dyZXNzIHRocm91Z2ggdGhlIGN1bHRpdmF0aW9uIG9mIG90aGVyIHBvc2l0aXZlIGhhYml0cy5JIHdpc2ggeW91IHR3byB0aGUgYmVzdCBvZiBsdWNrIDopSXQgaXMgc2VlbiBhcyBjcmVlcHkvZGVzcGVyYXRlLiAKSWYgSSBtYWtlIGEgc3R1cGlkIG1pc3Rha2UgdGhhdCBnZXRzIGNhc3QgYWNyb3NzICJhbGwgZmVtYWxlIGRldmVsb3BlcnMiIGFuZCB0aGF0IG1ha2VzIG1lIHdhcnkgKGxldCBub3QgbWVudGlvbiB0aGluZ3MgbGlrZSBtZW4gZ2V0dGluZyBkaXNjaXBsaW5lZCBsZXNzIGhhcnNobHkgYW5kIGJlaW5nIHNlZW4gYXMgY29uZmlkZW50IGdvIGdldHRpbmcgbGVhZGVycyBpbiBjb21wYXJpc29uIHRvIGFsbCB0aGUgbmVnYXRpdmUgdHJhaXRzIHRoYXQgZ2V0IGFwcGxpZWQgdG8gd29tZW4uIApXaGVuIGNyZWF0aW5nIGEgd2Vic2l0ZSB0byBwcm9tb3RlIEFsbCBDbGF5IFBva2VyIENoaXBzLCBpdCBpcyBpbXBvcnRhbnQgdG8gZW5zdXJlIHRoYXQgaXQgaXMgb3JnYW5pemVkLiAKQW5kIG90aGVyIGRlYnJpcyB0aGF0IG1heSBiZSBmaWxsaW5nIHVwIHRoZSBnYXJhZ2Ugb3IgYmFzZW1lbnQgY2FuIGFsc28gYmUgZ290dGVuIHJpZCBvZiBhdCBsaXR0bGUgY29zdCBkdXJpbmcgdGhlIHdlZWtlbmQgZnJlZSBkdW1wIGRheXMuIE9jdC4gNiBhbmQgT2N0LiAxMy4gUmVzaWRlbnRzIG11c3QgcHJvdmlkZSBwcm9vZiBvZiByZXNpZGVuY3kgdG8gdXNlIHRoZSBmcmVlIHNlcnZpY2UuIFRyYXNoIHNob3VsZCBiZSBiYWdnZWQgYW5kIGxvYWRzIGNvdmVyZWQgdG8gYXZvaWQgbGl0dGVyaW5nLiBJbiBhZGRpdGlvbiwgcGVvcGxlIGNhbiByaWQgdGhlbXNlbHZlcyBvZiB5YXJkIGFuZCBicnVzaCB3YXN0ZSBhbmQgbW90b3Igb2lsIGFuZCBmaWx0ZXJzIGluIGxlYWsgcHJvb2YgY29udGFpbnMgYXQgbm8gY2hhcmdlLgpXZSBhcmUgZm9ydHVuYXRlIHRvIGhhdmUgc28gbWFueSB3b25kZXJmdWwgdm9sdW50ZWVycyB3aG8gdW5zZWxmaXNobHkgZG9uYXRlIHRoZWlyIHRpbWUgdG8gaGVscGluZyB0aGVpciBVbml0ZWQgV2F5LiAKQW5kIGFzIHdlIHNlZ3VlIGludG8gc3ByaW5nIGFuZCB0aGUgd2FybWVyIG1vbnRocywgdGhpcyBpcyBwYXJ0aWN1bGFybHkgcGVydGluZW50LiBIZWF2eSBkdXR5IGJyb2d1ZXMgYW5kIE94Zm9yZHMgb2Ygd2ludGVyIHN0YXJ0IGZlZWxpbmcgY3VtYmVyc29tZSwgYnV0IHRoZSBsaWtlcyBvZiBlc3BhZHJpbGxlcyBhbmQgZGVjayBzaG9lcyBzdGlsbCBmYWxsIHRvbyBmYXIgaW50byB0aGUgc3BlY3RydW0gb2YgImhvbGlkYXkgd2FyZHJvYmUiLiBTdGFuIFNtaXRoIHRyYWluZXJzLCA3NC45NSwgQWRpZGFzIFRoZSBzbWFydCB0cmFpbmVyJ3MgeW91ciBzYXZpb3VyIGhlcmU7IGRlc2lnbmVkIHdpdGggdGhlIGNsZWFuIHNvcGhpc3RpY2F0aW9uIG9mIGEgc2hvZSBidXQgd2l0aCB0aGUgbGlnaHRuZXNzIGFuZCBkeW5hbWlzbSBvZiBhIHRyYWluZXI7IHNvIG11Y2ggc28gdGhhdCBJdGFsaWFuIGFydGlzYW5hbCBmb290d2VhciBicmFuZCBUb2QncyB0cmFkZW1hcmtlZCB0aGVpciB2ZXJzaW9uICciU2hvZWtlciIgZWFybGllciB0aGlzIHllYXI7IGEgaHlicmlkIGNyZWF0aW9uIHRoYXQgdHJhdmVyc2VzIHRoZSB0d28uIApUaGVyZSdzIG5vIHJlYWwgbnV0cml0aW9uYWwgYmVuZWZpdCBhbmQgZXZlbiB3YXRlciBpcyB1bm5lY2Vzc2FyeSB1bnRpbCBraWRzIHN0YXJ0IGhhdmluZyByZWd1bGFyIG1lYWxzLiAKSG93ZXZlciwgdXNlIGNhdXRpb24gICBzb21lIHBlb3BsZSBmaW5kIGl0IGhhcmRlciB0byBmb2N1cyBvbiBhIGNhZmZlaW5lIGhpZ2guIApEdSBiaXN0IHZlcnNjaGlzemVuIHRvdGgsIEJ1cnNjaGUuIApBUEIgYm94ZXIgYWxzbyB0YWxrcyBhYm91dCBoaXMgZW1vdGlvbnMgcmVsYXRpbmcgdG8gdGhlIExvbmRvbiBPbHltcGljIEdhbWVzIHdoZXJlIGhlIHdvbiBhIHNpbHZlciBtZWRhbC4gCkkgc2VsZWN0ZWQgRmVybiwgd2hpY2ggSSB3b3VsZG4gaGF2ZSBkb25lIGJhc2VkIG9uIGhlciBwaWN0dXJlcy4gClNUQU5MRVkgRk9SIERSV0MgVGhlIEJsdWUgQ3Jvc3MgUml2ZXJSaW5rIFdpbnRlcmZlc3QgaXMgc2V0IHRvIGhvc3QgdHdvICJzd2VldGhlYXJ0IHNrYXRlIiBzZXNzaW9ucyB0aGlzIFZhbGVudGluZSdzIERheS4uIApPbmx5ICQ1MCwwMDAgd2FzIGRpc3RyaWJ1dGVkIHRvIGl0cyBiZW5lZmljaWFyaWVzICAgY2hhcml0aWVzIHN1Y2ggYXN0aGUgU3RhcmxpZ2h0IEZvdW5kYXRpb24gYW5kIENsb3duIERvY3RvcnMuIApJbiBmYWN0LCBzb21ldGltZXMgeW91IGhhdmUgdG8gbG9zZSBhIGZldyBoYW5kcyB0byB3aW4gdGhlIGdhbWUuIFVuZm9ydHVuYXRlbHksIHlvdSBjYW5ub3QgYWx3YXlzIGtub3cgd2hlbiB0byBzdGF5IGluIGFuZCB3aGVuIHRvIGNsb3NlIG91dC4gCkFzIHRoZSBpbmR1c3RyeSBoYXMgZXZvbHZlZCwgcGxheWVycyBoYXZlIGJlY29tZSBtb3JlIGFuZCBtb3JlIGludGVyZXN0ZWQgaW4gY29udmVuaWVuY2UuIFdoaWxlIGxhbmQgYmFzZWQgY2FzaW5vcyBoYXZlIGJlZW4gdGhlIG5vcm0gZm9yIGF2aWQgZ2FtZXJzIGZvciB5ZWFycywgdGhlIGVhcmx5IDIwMDAncyBwYXZlZCB0aGUgd2F5IGZvciB0aGUgb25zZXQgb2Ygb25saW5lIGdhbWluZy4gV2l0aCB0aGUgdGVjaG5vbG9naWNhbCB3b3JsZCBib29taW5nLCBhbmQgbW9yZSBhbmQgbW9yZSBob3VzZWhvbGRzIHRha2luZyBpbiBjb21wdXRlcnMgYXMgYSBuZWNlc3NpdHksIHRoZSBwcm9zcGVjdCBvZiBvbmxpbmUgY2FzaW5vcyBiZWNhbWUgdmVyeSBwcm9taXNpbmcuIApDaGluZXNlIE1hbmRhcmluIGNhbiBiZSBlYXN5IHRvIGxlYXJuLCBvciBpdCBjYW4gYmUgZXh0cmVtZWx5IGRpZmZpY3VsdC4gSXQgbWFpbmx5IGRlcGVuZHMgb24geW91ciBzZW5zaXRpdml0eSB0byB0aGUgdG9uZXMuIElmIHlvdSBoYXZlIGEgZ29vZCBlYXIgZm9yIHRvbmVzLCB5b3Ugd2lsbCBiZSBhYmxlIHRvIGRpc3Rpbmd1aXNoIHRoZW0gZWFzaWx5IHdoZW4geW91IGhlYXIgdGhlbSwgYW5kIG1pbWljIHRoZW0gaW4geW91ciBzcGVlY2ggd2l0aCBsaXR0bGUgZWZmb3J0LiBUaGUgZmxleGlibGUgZ3JhbW1hdGljYWwgcnVsZXMgYWxzbyBtYWtlIGxlYXJuaW5nIE1hbmRhcmluIHByZXR0eSBlYXN5LiBCdXQgaWYgeW91IHN0cnVnZ2xlIHdpdGggdG9uZXMsIGJvdGggYXVyYWxseSBhbmQgdmVyYmFsbHksIHRoZW4geW91IGFyZSBnb2luZyB0byBzdHJ1Z2dsZSBtaWdodGlseSB0byBsZWFybiBNYW5kYXJpbiwgb3IgYW55IG90aGVyIHRvbmFsIGxhbmd1YWdlLiBSZWFkaW5nIENoaW5lc2UgaXMsIG9mIGNvdXJzZSwgdGhlIGJpZ2dlc3QgY2hhbGxlbmdlIHRvIGxlYXJuaW5nIHRoZSBsYW5ndWFnZSwgbm8gbWF0dGVyIGhvdyBnb29kIHlvdSBhcmUgd2l0aCB0b25lcy4gQ2hpbmVzZSByZWFkaW5nIGNvbXByZWhlbnNpb24gY2FuIGJlIG1hc3RlcmVkIGJ5IGFueW9uZSwgcmVnYXJkbGVzcyBvZiB5b3VyIGFwdGl0dWRlIGZvciBsYW5ndWFnZSwgYnV0IHlvdSBoYXZlIHRvIGJlIHdpbGxpbmcgdG8gcHV0IGluIGEgbG90IG9mIHRpbWUsIGFuZCBhIGxvdCBvZiByZXBldGl0aW9uLCB0byBtZW1vcml6ZSB0aGUgY291cGxlIHRob3VzYW5kIGNoYXJhY3RlcnMgbmVlZGVkIGZvciBiYXNpYyByZWFkaW5nIGNvbXByZWhlbnNpb24uIEl0IHdpbGwgZGVmaW5pdGVseSBoZWxwIHRvIGhhdmUgYSBnb29kIHZpc3VhbCBtZW1vcnkuIEl0IGEgd29uZGVyZnVsIGxhbmd1YWdlLCBhbmQgSSBoaWdobHkgcmVjb21tZW5kIHRoYXQgZXZlcnlvbmUgd2l0aCBhbiBpbnRlcmVzdCBnaXZlIGl0IGEgc2hvdC4gVGhlIHRvbmVzIGFuZCBwaWN0b2dyYXBocyBtYXkgc2VlbSBpbnRpbWlkYXRpbmcgYXQgZmlyc3QsIGJ1dCB0cnkgYSBjbGFzcyBmb3IgYSBzZW1lc3RlciBvciB0d28sIGFuZCBzZWUgaG93IGl0IGdvZXMuCk5vdywgU3F1YXJlIEVuaXggaGFzIHRlYW1lZCB1cCB3aXRoIERhcmsgSG9yc2UgQ29taWNzIHRvIHJlbGVhc2UgYW4gYXJ0IGJvb2sgc2V0IHRvIGNvbWUgb3V0IGxhdGVyIHRoaXMgeWVhci4gCklzIHZlcnkgY2xlYXIgYWJvdXQgYWxsIG9mIGhpcyBudW1iZXJzLiAKSW50ZXJ0b3BzIFBva2VyIGlzIG9uZSBvZiB0aGUgbW9zdCBlc3RhYmxpc2hlZCBvbmxpbmUgcG9rZXIgb3BlcmF0b3JzLCBhbmQgaGFzIGJlZW4gbGl2ZSBmb3IgbW9yZSB0aGFuIHR3byBkZWNhZGVzLiBJdHMgcG9rZXIgZ2FtZXMgYW5kIHRhYmxlcyBjYW4gYmUgYWNjZXNzZWQgdmlhIEluc3RhbnQgUGxheSwgb3IgYnkgZG93bmxvYWRpbmcgaXRzIGRlc2t0b3AgY2xpZW50LiBUaGUgc2l0ZSBoYXMganVzdCB1bmRlcmdvbmUgYSBtYWpvciByZWRlc2lnbiwgYW5kIGlzIGZ1bGx5IG9wdGltaXNlZCBmb3IgbW9iaWxlIGFuZCB0YWJsZXQgZGV2aWNlcy4KVGhlcmUgd2lsbCBiZSBpbnRlcmVzdCBncm91cHMgZm9yIHlvdXIgc3BlY2lhbHR5IGFuZCB0aGVyZSB3aWxsIGRlZmluaXRlbHkgYmUgZmFjdWx0eSBpbiB5b3VyIHNwZWNpYWx0eSBvZiBjaG9pY2UgdGhhdCBhcmUgbG9va2luZyBmb3Igc3R1ZGVudHMgdG8gZ2V0IGludm9sdmVkIGluIHRoZWlyIHJlc2VhcmNoLiBSZXNlYXJjaCBjYW4gcmVhbGx5IGJlIGFueXRoaW5nOyBjYXNlIHJlcG9ydHMgYW5kIHByZXNlbnRhdGlvbnMgYXJlIHN1cGVyIGNvbW1vbiBhbmQgZWFzeSB0byBjb21lIGJ5LiBZb3VyIHNjaG9vbCBtYXkgZXZlbiBoYXZlIGEgZGVkaWNhdGVkIGdyb3VwIGZvciBzdHVkZW50cyBkb2luZyByZXNlYXJjaC4gCkNvbHVzYSBDYXNpbm8gUmVzb3J0RXhpdCB0aGUgaW50ZXJzdGF0ZSBhdCB0aGUgY2l0eSBvZiBNYXh3ZWxsIDY4IG1pbGVzIG5vcnRoIG9mIFNhY3JhbWVudG8gYW5kIGhlYWQgMTAgbWlsZXMgZWFzdCB0byBDb2x1c2EgQ2FzaW5vIFJlc29ydC4gQmV0dGVyIHlldCwgaG9wIG9uZSBvZiB0aGUgY2FzaW5vJ3MgZnJlZSBidXNlcywgd2hpY2ggbGVhdmUgZnJvbSB0d28gZG96ZW4gY2l0aWVzIGluIG5vcnRoZXJuIENhbGlmb3JuaWEsIGFuZCBlYXJuIGZyZWUgcGxheS4gVGhlcmUgYXJlIDEsMjAwIHNsb3RzLCBiaW5nbyBhbmQgdGFibGUgZ2FtZXMgbGlrZSBibGFja2phY2ssIFBhaSBHb3cgcG9rZXIgYW5kIHRocmVlIGNhcmQgcG9rZXIuIEJvb2sgYSByb21hbnRpYyBnZXRhd2F5IGluIGEgc3VpdGUgd2l0aCBhIGZpcmVwbGFjZSBhbmQgcmVmcmVzaCB5b3VyIGJvZHkgd2l0aCBhIGZ1bGwgbWVudSBvZiB0cmVhdG1lbnRzIGF0IHRoZSBPb2ggTGEgTGEgU2Fsb24gYW5kIFNwYS4gRmlsbCB1cCBhdCBmaXZlIG9uIHNpdGUgcmVzdGF1cmFudHMgYW5kIGJ1cm4gb2ZmIHRoZSBjYWxvcmllcyB3aXRoIGEgc3dpbSBvciB3b3Jrb3V0IGF0IHRoZSBjYXNpbm8ncyB3ZWxsbmVzcyBjZW50ZXIuCklmIHlvdSBkb24gdW5kZXJzdGFuZCBLb3JlYW4gdGhlbiB5b3VsbCBuZWVkIHRvIHB1c2ggb3B0aW9uIDIgdGhhdCB3aWxsIGRpcmVjdCB5b3UgdG8gYW4gRW5nbGlzaCBzcGVha2luZyBhc3Npc3RhbnQuIFRoZXJlIGlzIGEgcHVibGljIGJ1cyBzeXN0ZW0sIGJ1biB5b3UgY2FuIHdhaXQgYSBsb29vb29vbmcgdGltZS4uIApTZWxvbiB1bmUgc291cmNlIHByb2NoZSBkZSBsJ2VucXV0ZSwgbGVzIGRpcmVjdGV1cnMgZGVzIGNhc2lub3MgUGFydG91Y2hlIGRlIENhbm5lcywgQmFuZG9sIChWYXIpIGV0IExhIEdyYW5kZSBNb3R0ZSAoSHJhdWx0KSBmb250IHBhcnRpZSBkZXMgcGVyc29ubmVzIGludGVycm9nZXMuIFVuZSBzZXB0aW1lIHBlcnNvbm5lLCBpbnRlcnBlbGxlIGdhbGVtZW50LCBuJ2EgZmluYWxlbWVudCBwYXMgdCBwbGFjZSBlbiBnYXJkZSAgdnVlLiAKWW91IHdvdWxkbiB0ZWxsIGEgd2FpdGVyIHRoZXkgc3VjayBhdCBtYXRoIHNvIHRoYXQgd2h5IHRoZXkgYSB3YWl0ZXIuIFBlb3BsZSBkbyB3aGF0IHRoZXkgZG8gYSBsb3Qgb2YgdGhlIHRpbWUgZm9yIG1vbmV5LiBBIGxvdCBvZiBwZW9wbGUgYXJlIG5vdCBkb2luZyB0aGVpciBkcmVhbSBqb2IgYW5kIGl0IGp1c3Qgc28gaGFwcGVucyB0aGUgd29ybGQgbmVlZHMgcHJvZ3JhbW1lcnMgcmlnaHQgbm93IG1vcmUgdGhhbiBwcm9iYWJseSBhbnl0aGluZyBlbHNlIGFuZCBzbyBhIGxvdCBvZiB1cyBnZXQgc3Vja2VkIGludG8gaXQuIApZb3UnbGwgZmluZCBldmVyeXRoaW5nIGZyb20gamV3ZWxyeSB0byBhY2Nlc3NvcmllcyB0byBob21lIGdvb2RzLCBhbmQgc3BlY2lhbCBGZU1OaXN0IGdlYXIgd2lsbCBiZW5lZml0IFN0aWxsIEtpY2tpbiwgd2hpY2ggcmFpc2VzIGZ1bmRzIGZvciBpbmRpdmlkdWFscyBhbmQgZmFtaWxpZXMgZGVhbGluZyB3aXRoIG1vdW50aW5nIG1lZGljYWwgYmlsbHMuIEFtb25nIHRoZSB2ZW5kb3JzIHBvcHBpbmcgdXAgYXQgdGhlIGV2ZW50IGFyZSBMYXJpc3NhIExvZGVuIEpld2VscnksIENha2UgUGx1cyBTaXplIFJlc2FsZSwgU3RyZXkgbGVhdGhlcndvcmtzLCBDaGVycnkgTW9vbiBQcmVzcywgYW5kIFNhbWFudGhhIFJlaSwgYnV0IHRoYXQncyBqdXN0IHRoZSB0aXAgb2YgdGhlIGljZWJlcmcuIFRoZSBtYXJrZXQgaXMgZnJlZS4gClRoZXJlIGFyZSBub3cgc2V2ZXJhbCBmb3JtcyBvZiBzdGltdWxhdGlvbiwgdGhlIGFiaWxpdHkgdG8gY29tYmluZSB0aGVzZSB3aXRoIG90aGVyIG1ldGhvZHMsIGFuZCBldGhpY2FsIHF1ZXN0aW9ucyB0aGF0IGFyZSBzcGVjaWFsIHRvIGJyYWluIHN0aW11bGF0aW9uLiBJbiB0aGlzIFByaW1lciwgd2UgYWltIHRvIGdpdmUgdGhlIHVzZXJzIG9mIHRoZXNlIG1ldGhvZHMgYSBzdGFydGluZyBwb2ludCBhbmQgcGVyc3BlY3RpdmUgZnJvbSB3aGljaCB0byB2aWV3IHRoZSBrZXkgcXVlc3Rpb25zIGFuZCB1c2VmdWxuZXNzIG9mIHRoZSBkaWZmZXJlbnQgZm9ybXMgb2Ygbm9uIGludmFzaXZlIGJyYWluIHN0aW11bGF0aW9uLiAKSW4gZmFjdCwgdGhlcmUncyBhY3R1YWxseSBhIHN0dWR5IG9uIHRoaXMgY29uZGl0aW9uIHRoYXQgcmVwb3J0cyB0aGUgZGlyZSBuZWVkIGZvciBtb3JlIHN0dWRpZXMuIApBcyBhIEVyaWNrIExpbmRncmVuIFBva2VyIENhcmQgUHJvdGVjdG9yIGlzIGFzc29jaWF0ZWQgd2l0aCB5b3VyIHBlcnNvbmFsIHBva2VyIGJyYW5kaW5nLCB5b3UgY2FuIHVuZGVyc3RhbmQgdGhhdCB5b3UgY2FuJ3QgY2hhbmdlIHlvdXIgYnJhbmQgZWFzaWx5IG90aGVyd2lzZSB5b3UgYXJlIGdvaW5nIHRvIGRlc3Ryb3kgeW91ciBhdXRoZW50aWNpdHkgYWxsIGJ5IHlvdXJzZWxmLiBTbyB5b3UgaGF2ZSB0byBmaW5kIG91dCB5b3VyIG93biB3YXkgYW1vbmcgdGhlIGF2YWlsYWJsZSBwb2tlciBjb2xsZWN0aWJsZXMgb3V0IHRoZXJlLiBZb3Ugc2hvdWxkIGRlZmluaXRlbHkgbW92ZSB0b3dhcmRzIHRoZSBiZXN0IHBva2VyIGNvbGxlY3RpYmxlcyBsaWtlIExpbmRncmVuIFBva2VyIENhcmQgUHJvdGVjdG9yIGFzIHRoaXMgY2FuIGhlbHAgeW91IGF0dHJhY3QgYWxsIHRoZSBwb2tlciBmYW5zIGFyb3VuZC4gCkkgd2lsbCB3YWl0IHRvIHBvcCB0aGUgaHlicmlkIHVudGlsIEkgdGFrZW4gc29tZSBkYW1hZ2UgYmVjYXVzZSBpZiB5b3UgdGFrZSBpdCBhdCAxMDAgaGVhbHRoIHlvdSBsb3NlIG91dCBvbiB0aGUgMjUgaGVhbHRoLCB1bmxlc3MgSSBoYXZlIDYgdGhlbiBJIHBvcCAyIGZvciB0aGUgc2hpZWxkLi4gCkhlIHdvdWxkIGxpa2UgdG8gbWVldCBoaXMgZmF0aGVyIGluIHRoZSBmdXR1cmUgdG8gYXNrIGhpbSB3aHkgaGUgYWJ1c2VkIGhpbS4uIApCdXQgZnJhZ3JhbmNlcyBhcmUgbm90IG9uZSBub3RlIGNvbXBvc2l0aW9ucy4gQSBwZXJmdW1lIGNvbXBvc2VkIG9mIGZsb3JhbCBub3RlcyBhbG9uZSB3b3VsZCBzbWVsbCBjbG95aW5nbHkgc3dlZXQsIHNvIHBlcmZ1bWVycyBhZGQgb3JpZW50YWwgYW5kIHdvb2R5IG5vdGVzIHRvIGNyZWF0ZSBkZXB0aC4gTGlrZXdpc2UsIGEgcGVyZnVtZSBiYXNlZCBvbiB3b29kIG5vdGVzIG5lZWRzIGZyZXNoIG5vdGVzIHRvIGxpZ2h0ZW4gaXQgdXAuIFRvIGlsbHVzdHJhdGUsIHRoZSBwb3B1bGFyIHdvbWVuJ3MgcGVyZnVtZSBEIEcgTGlnaHQgQmx1ZSBjb21iaW5lcyBhcHBsZSAoZnJ1aXR5IGZyZXNoKSwgcm9zZSAoZmxvcmFsKSwgamFzbWluZSAoZmxvcmFsIG9yaWVudGFsKSBhbmQgbXVzayAod29vZHMpLiBUaGUgbWVuJ3MgdmVyc2lvbiBpbmNsdWRlcyBncmFwZWZydWl0IChjaXRydXN5IGZyZXNoKSwgaW5jZW5zZSAob3JpZW50YWwpLCBtdXNrICh3b29kKSwgYW5kIG9hayBtb3NzIChtb3NzeSB3b29kKS4KQ2FyY2lub2dlbmVzaXMgMjAxMwpJIGNhbiByZWFsbHkgbWFrZSBvdXQgdGhlIHR3byBtaXNzaW5nIGRpZ2l0cy4gWW91ciBndWVzcyBpcyBhcyBnb29kIGFzIG1pbmUuIApHYWRnZXRzIEdpem1vcyBHYWxvcmUgQXQgQ0VTIDIwMTMyMDEzIENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgSGlnaGxpZ2h0cyBOZXdlc3QgVGVjaG5vbG9neVRoZSBTYW1zdW5nIEdhbGF4eSBOb3RlIGxsIGlzIGRpc3BsYXllZCBhdCB0aGUgU2Ftc3VuZyBib290aCBkdXJpbmcgdGhlIDIwMTMgSW50ZXJuYXRpb25hbCBDRVMgYXQgdGhlIExhcyBWZWdhcyBDb252ZW50aW9uIENlbnRlciBvbiBKYW51YXJ5IDgsIDIwMTMgaW4gTGFzIFZlZ2FzLCBOZXZhZGEuIENFUywgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBhbm51YWwgY29uc3VtZXIgdGVjaG5vbG9neSB0cmFkZSBzaG93LCBydW5zIGZyb20gSmFudWFyeSA4IDExIGFuZCBpcyBleHBlY3RlZCB0byBmZWF0dXJlIDMsMTAwIGV4aGliaXRvcnMgc2hvd2luZyBvZmYgdGhlaXIgbGF0ZXN0IHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyB0byBhYm91dCAxNTAsMDAwIGF0dGVuZGVlcy4gKFBob3RvIGJ5IEp1c3RpbiBTdWxsaXZhbi9HZXR0eSBJbWFnZXMpCkNyeXB0b2N1cnJlbmN5IHRyYWRpbmcgaGFzIGJlZW4gaW4gZnVsbCBibG9vbSBzaW5jZSB0aGUgYmVnaW5uaW5nIG9mIDIwMTcgd2hlbiBCaXRjb2luJ3MgcmFwaWQgYXNjZW5kIHRvIHNreSBoaWdoIHByaWNlcyBiZWdhbi4gV2l0aCBhIHByaWNlIGp1c3Qgb3ZlciAkMSwwMDAgYW5kIGEgbWFya2V0IGNhcCBvZiAkMTYuOCBiaWxsaW9uIGluIEZlYnJ1YXJ5LCBhY2NvcmRpbmcgdG8gQ29pbk1hcmtldENhcCwgYW55b25lIHdobyBib3VnaHQgQml0Y29pbiBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB5ZWFyIHdvdWxkIGhhdmUgbWFkZSB0aG91c2FuZHMgb2YgZG9sbGFycyBpbiBwcm9maXRzIGp1c3QgZnJvbSBhIHNpbmdsZSBjb2luLCB5ZXQgYWxvbmUgd2l0aCBkb3plbnMgb2YgdGhlIHdvcmxkJ3MgYmlnZ2VzdCBjcnlwdG9jdXJyZW5jeS4uIApJIGRvbiBsaWtlIGhhdmluZyB0byBwb3N0IGFib3V0IGl0IGVpdGhlciBidXQgaXQgaXMgc29tZXRoaW5nIHRoYXQgaGFzIHRvIGJlIGRvbmUgaWYgd2UgZXZlbiB3YW50IGEgZ2xpbW1lciBvZiBob3BlIHRoYXQgdGhlIHBlb3BsZSB2b2ljZSB3aWxsIGJlIGhlYXJkLiBJZiBwZW9wbGUgZGlkbiBwb3N0IGFib3V0IGl0IHdoZW4gYWxsIG9mIHRoaXMgZGlzY3Vzc2lvbiBzdGFydGVkLCBub25lIG9mIHVzIHdvdWxkIGV2ZW4ga25vdyBpdCB3YXMgaGFwcGVuaW5nIGFuZCB0aGUgZ292ZXJubWVudCB3b3VsZCBoYXZlIGp1c3Qgc2VjcmV0bHkgbGV0IHRoZSBJU1BzIGRvIHdoYXRldmVyLiBJIG5vdCBkdW1iIGVub3VnaCB0byB0aGluayB0aGF0IG15IHZvaWNlIG9yIHBvc3RzIGFsb25lIHdpbGwgY2hhbmdlIGFueXRoaW5nIGJ1dCBJIGRvIGtub3cgdGhhdCBBbWVyaWNhbnMgbmVlZCB0byBrbm93IGFib3V0IHNvbWV0aGluZyB0aGF0IHdpbGwgYWZmZWN0IHRoZWlyIGRhaWx5IGxpZmUgYW5kIHRoZWlyIHdhbGxldC4gSWYgZW5vdWdoIHBlb3BsZSBzcGVhayB1cCBhbmQgc3ByZWFkIGF3YXJlbmVzcywgdGhlcmUgYSBzbGltIGNoYW5jZSB0aGF0IHNvbWV0aGluZyBtYXkgY2hhbmdlLiBJZiBub3RoaW5nIGNoYW5nZXMsIHRoZW4gYXQgbGVhc3QgdGhlIHdvcmxkIHdpbGwga25vdyB0aGF0IEFtZXJpY2FucyBwcm90ZXN0ZWQgaXQgYW5kIHRoZSBnb3Zlcm5tZW50IGdhdmUgdXMgYSBiaWcgbWlkZGxlIGZpbmdlci4gRWl0aGVyIHdheSwgZG9pbmcgc29tZXRoaW5nIGlzIGJldHRlciB0aGFuIGRvaW5nIG5vdGhpbmcuCkVpdGhlciB3YXkgd291bGQgYWNjb21wbGlzaCB0aGUgc2FtZSBnb2FsIHNvIEkgZm9yIGl0LiBBbm90aGVyIHRoaW5nIEkgd2FudCwgYW5kIGl0IHN1Y2tzIGJlY2F1c2UgSSBhIEJlcm5pZSBndXksIGlzIGFuIGFnZSBsaW1pdCB0byB0aGVzZSBwb3NpdGlvbnMuIEl0IHRoZSBwb2xpdGljYWwgcmV0aXJlbWVudCBhZ2Ugc2hvdWxkIGJlIDY1IGFzIGl0IHdvdWxkIGJlIGluIGEgbm9ybWFsIHdvcmtmb3JjZS4gCkkgd291bGQgY2FyZWZ1bGx5IGFzc2VzcyBteSBmaW5hbmNlcywgYnVkZ2V0aW5nIGEgZ2VuZXJvdXMgYW1vdW50IGZvciBlbWVyZ2VuY2llcyBhbmQgaW5zdXJhbmNlLCBhbmQgZW5vdWdoIHRvIGxhc3QgbWUgdGhyb3VnaCBKdW5lLgpXUFQ1MDAgTGFzIFZlZ2FzLCB3aGljaCBzdGFydHMgZnJvbSBKdW5lIDI2IGF0IHRoZSBsdXh1cmlvdXMgQXJpYSBSZXNvcnQgYW5kIENhc2lubyBoYXMgYSBVU0QgNTY1IGJ1eWluZyBhbmQgVVNEIG9uZSBtaWxsaW9uIGFzIGd1YXJhbnRlZWQgcHJpemUgcG9vbC4gNDUwIFN0ZXAgU2F0ZWxsaXRlLCB3aGljaCBpcyBydW5uaW5nIGV2ZXJ5IGRheSBmcm9tIEFwcmlsIDE3IHRvIEp1bmUgNCwgd2hlcmVpbiBwbGF5ZXJzIHN0YW5kIGEgY2hhbmNlIHRvIHdpbiB0aWNrZXRzIHRvIFBLRyBTYXRlbGxpdGUuCk90aGVyIHBvcHVsYXIgcG9rZXIgY2hpcCBjYXNlcyBhcmUgYWxzbyBtYWRlIHVwIG9mIGNhcmJvbiBmaWJlciwgd29vZCwgdmlueWwgYW5kIGxlYXRoZXIuLiAKS25vY2tpdCB1ClNldmVyYWwgYnVzaW5lc3NlcyBwdWxsZWQgYWR2ZXJ0aXNpbmcgZnJvbSBBbGxtYW4gc2hvd3MgYWZ0ZXIgaGUgc2VudCB0aGUgTWFyY2ggMjYgdHdlZXQgdGFyZ2V0aW5nIERhdmlkIEhvZ2csIHdobyBoYXMgc3Ryb25nbHkgYWR2b2NhdGVkIGZvciBzdHJpY3RlciBndW4gY29udHJvbCBzaW5jZSAxNyBwZW9wbGUgd2VyZSBraWxsZWQgaW4gdGhlIEZlYi4gMTQgbWFzcyBzaG9vdGluZyBhdCBoaXMgc2Nob29sIGluIFBhcmtsYW5kLCBGbG9yaWRhLgpGcmFuayAgS2luZywgRWFzdCBLaW5nIFdlc3QgVmlyZ2luaWEsIGlzICBzcGVuZGluZyBhIGZldyBzdHJlZXQsIGR1ZSB0byB0aGUgJ2lsbG5lc3Mgb2YgTXIuIEtpbmcncyBqIGRheXMgd2l0aCBoZXIgc2lzdGVyLCBNcnMuIApNeSBraWRzIGFyZSB5b3VuZyBhZHVsdHMgbm93LCBidXQgSSBoYWQgdG8gYmUgb24gYmFieSBhc3BpcmluIGFuZCB0YWtlIGhlcGFyaW4gc2hvdHMgdHdpY2UgYSBkYXkgYW5kIGEgcHJvZ2VzdGVyb25lIHN1cHBsZW1lbnQgd2hlbiBJIGdvdCBwcmVnbmFudC4gCiJbRmVsZGVyXSBhZG1pdHRlZCBoaXMgY2xpZW50IGlzIGEgbGlhci4gSXQncyBub3QgYWJvdXQgYmVpbmcgcG9vci4gSXQncyBqdXN0IHRoYXQgYSBsaWFyIGRvZXNuJ3QgZ2V0IHRvIGJlIHJld2FyZGVkIGZvciB0aGUgbGllcyBzaGUgdG9sZCBhbmQgZGVtYW5kIG1pbGxpb25zIG9mIGRvbGxhcnMgb2YgY2hpbGQgc3VwcG9ydCwiIEdvcnRvbidzIGxhd3llciwgRXJpYyBXcnViZWwsIHRvbGQgSnVkZ2UgTWljaGFlbCBLYXR6LgpBbnRob255IEZhc2FubyBpcyB0aGUgZXhwZXJ0IHByZXNlbmNlLCBldmVuIHNvIGhlIHBvb3IgdGhlIGludGVuc2Ugb2ZmZW5zaXZlIHN0cmF0ZWd5IHNldCB3aGVyZSB0aGlzIHR5cGUgb2YgYSBDaGllZnMgcXVpdGUgbGlrZWx5IG5lZWRzIHdpdGhpbiB0aWdodCBlbmQgdXAuIApHb3QgYSBzdGVlbCBwbGF0ZSBmb3IgYSBmb3JlaGVhZApDYXNoIGdhbWVzIGFyZSB2ZXJ5IGRpZmZlcmVudCBmcm9tIHRvdXJuYW1lbnRzLiBZb3UgaGF2ZSB0byBzdHVkeSBhbmQgYXBwbHkgY2FzaCBnYW1lIHN0cmF0ZWd5LiBJdCdzIHRvbyBtdWNoIHRvIHB1dCBpbnRvIGEgUmVkZGl0IGNvbW1lbnQsIGJ1dCBjb25zaWRlciB0aGF0IGFzIHN0YWNrIHNpemVzIGdldCBkZWVwZXIgaW4gYSBjYXNoIGdhbWUsIGhhbmQgdmFsdWVzIGNoYW5nZSBkcmFtYXRpY2FsbHkuIApQcm9mIEdyaWZmaXRocyBpZGVudGlmaWVkIGdhbWVzIHN1Y2ggYXMgQ2FuZHkgQ3J1c2ggU2FnYSB3aGljaCBoYXMgYmVlbiBkb3dubG9hZGVkIG1vcmUgdGhhbiA1MDBtIHRpbWVzIGFuZCBnaXZlcyBwbGF5ZXJzIHRoZSBvcHRpb24gb2YgcGF5aW5nIG1vbmV5IHRvIGFjY2VzcyBoaWdoZXIgbGV2ZWxzLgpJbiBvbmUgb2YgdGhlIEJsYWNrIExlZ2lvbiBib29rcyB0aGUgbmFycmF0b3IgKGEgY2hhb3Mgc29yY2VyZXIpIG1ha2VzIGEgY29tbWVudCBhbG9uZyB0aGUgbGluZXMgb2YgIk1ldGFsIGhhcyBtZW1vcmllcyIuIE9idmlvdXNseSBpbmFuaW1hdGUgb2JqZWN0cyBkb24gcmVtZW1iZXIgdGhpbmdzLCBidXQgdGhlIGVtb3Rpb25zIG9mIGV2ZW50cyBwYXN0IGxlYXZlIHRoZWlyIG1hcmsgb24gZXZlcnl0aGluZywgZXNwZWNpYWxseSB3aGVuIHRob3NlIGVtb3Rpb25zIGFyZSBpbnRlbnNlLCBzdWNoIGFzIGR1cmluZyBjb21iYXQuIApTY290dCBTdGFwcCBkb2Vzbid0IHNoeSBmcm9tIHRoZSBmYWN0IHRoYXQgaGlzIHRpbWUgd2l0aCBoaXMgcG9zdCBncnVuZ2UgZ3JvdXAgQ3JlZWQgbGVkIGhpbSBpbnRvIGEgZGFyayB3b3JsZCBvZiBzdWJzdGFuY2UgYWJ1c2UsIGJhZCBiZWhhdmlvciBhbmQsIGV2ZW50dWFsbHksIGEgYmFuZCBicmVhayB1cC4KSXQgYWxzbyBzcGVudCAkMjEwLDAwMCBlbXBsb3lpbmcgU2hhbmUgV2FybmUgYnJvdGhlciBpbiBhbiBleGVjdXRpdmUgcG9zaXRpb24gYXQgdGhlIGZvdW5kYXRpb24uIApPSywgdGhpcyBvbmUgbWF5IHNlZW0ga2luZCBvZiBib3JpbmcsIGJ1dCBpdCBkb2Vzbid0IGhhdmUgdG8gYmUuIFBsZW50eSBvZiBndXlzIGhhdmUgb2ZmaWNlcyBpbiB0aGVpciBob21lcyAgIHlvdSBtaWdodCBub3QgdGhpbmsgb2YgaXQgYXMgYSBtYW4gY2F2ZSwgYnV0IGlzbid0IHRoYXQgZXhhY3RseSB3aGF0IGl0IGlzPyBJdCBtaWdodCBub3QgaW52b2x2ZSBhIFRWIG9yIGEgYmFyLCBidXQgYW55cGxhY2UgeW91IGdvIHRvIGJlIGFsb25lIGNhbiB0ZWNobmljYWxseSBiZSBkZWZpbmVkIGFzIGEgbWFuIGNhdmUuIEFuZCB0aGVyZSdzIG5vIHJlYXNvbiB0aGF0IGEgaG9tZSBvZmZpY2UgaGFzIHRvIGJlIGEgZHVsbCwgc3RlcmlsZSBwbGFjZS4gCklzbGFtYWJhZDogIllvdSBzaG91bGQgdGhhbmsgeW91ciBzdGFycyB0aGF0IHlvdSBhcmUgbm90IHRoZSBwcmltZSBtaW5pc3RlciBpbiB0b2RheSdzIFBha2lzdGFuOyB5b3UgY2FuJ3QgaGF2ZSBhIG1vbWVudCdzIHBlYWNlIGR1cmluZyB0aGUgZGF5IGFuZCBhIHJlc3RmdWwgc2xlZXAgYXQgbmlnaHQ7IGl0IGlzIG1vcmUgb2YgYSBjdXJzZSB0aGFuIGEgbHV4dXJ5LiIKSEUnUyB0aGUgbWFuIHdob3NlIHN0YXRlbWVudCB0byBIdW50ZXIgcG9saWNlIGFib3V0IGJlaW5nIHNleHVhbGx5IGFidXNlZCBieSBhIENhdGhvbGljIHByaWVzdCBsYXVuY2hlZCBTdHJpa2UgRm9yY2UgR2VvcmdpYW5hIGluIDIwMDcsIGFuZCB1bHRpbWF0ZWx5IGxlZCB0byBhIHJveWFsIGNvbW1pc3Npb24uCkJPVFcgaXMgYWJvdXQgdGhlIGpvdXJuZXksIG5vdCB0aGUgZGVzdGluYXRpb24uIFRoZSBkdW5nZW9ucywgd2hldGhlciB5b3UgY29uc2lkZXIgdGhlbSB0aGUgc2hyaW5lcyBvciB0aGUgZGl2aW5lIGJlYXN0cywgYXJlIGEgbGl0dGxlIGxhY2tsdXN0ZXIsIGFuZCB0aGUgYm9zc2VzIGFyZSBub3QgdGhhdCBjaGFsbGVuZ2luZyAoYXNpZGUgZnJvbSB0aHVuZGVyYmxpZ2h0LiBGdWNrIHRoYXQgZ3V5LikgSXQgZ2V0cyBiZXR0ZXIgd2l0aCB0aGUgRExDLiBJIGhhdmVuIGRlbHZlZCBtdWNoIGludG8gcGFjayAxIGJ1dCBJIHJlYWxseSBlbmpveWVkIHBhY2sgMi5GaW5hbGx5LCB0aGUgbXVzaWMuIApUaGlzIHJlbWluZHMgbWUgb2YgdGhlIHRpbWUgbXkgY29sbGVnZSByb29tbWF0ZSBhbmQgSSB3ZXJlIGhpdGNoaGlraW5nLiBXZSBnb3QgcGlja2VkIHVwIGJ5IGEgdmFuIG9mIHBlb3BsZSBhYm91dCBvdXIgc2FtZSBhZ2UuIApJbiBiZWQgY3J5aW5nIGFsb3QuIApJbiByZWFsaXR5LCBhbGwgYmFuayBlbXBsb3llZXMgYXJlIHB1c2hlZCB0byByZWFjaCB0aGVpciB0YXJnZXRzLiAKRGEgZ2lidCBlcyBlaW5mYWNoIGtlaW5lIFNjaG5pdHRtZW5nZS4gCk15IGluIGxhd3MgY2FtZSB0byB2aXNpdCBsYXN0IHdlZWsgYW5kIHRoZXkgYWxsIGtub3cgb3VyIDNZTyBpcyBzZXZlcmVseSBhbGxlcmdpYyB0byBlZ2dzIGFuZCBudXRzLiBNSUwgYnJvdWdodCBpbiBCSUwncyB0cmFpbCBtaXggZnJvbSB0aGUgY2FyIGFuZCBsZWZ0IGl0IG9uIHRoZSBjb3VudGVyIHdoZXJlIG15IHNvbiBjb3VsZCByZWFjaCBpdC4gSSBuaWNlbHkgYXNrZWQgQklMIGlmIGhlJ2QgbW92ZSBpdCB0byB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgYmFieSBnYXRlIGJ5IHRoZSBnYXJhZ2UgZG9vci4gCldlIHRvb2sgb25lIG9mIG91ciBmaXJlcGxhY2VzIGFuZCBhZGRlZCBhIGhlYXQgY2lyY3VsYXRpb24gYmxvd2VyIHRvIGl0IHRvIGdldCBtb3JlIGhvdCBhaXIgaW50byB0aGUgcm9vbS4gCk9uZSBvZiB0aGUgZ3JlYXQgdGhpbmdzIGFib3V0IGNhc3QgaXJvbiBza2lsbGV0cyBpcyB0aGF0IHlvdSBjYW4gY3JhbmsgdXAgdGhlIGhlYXQgdW5kZXIgdGhlbS4gT24gdGhlIG90aGVyIGhhbmQsIG5vbnN0aWNrIHNraWxsZXRzIGFyZSBiZXN0IHVzZWQgYXQgbWVkaXVtIGhlYXQsIG9yIG1lZGl1bSBoaWdoIGF0IHRoZSBtYXguIEl0IG5vdCBqdXN0IGEgcGVyZm9ybWFuY2UgaXNzdWUuIEF0IHZlcnkgaGlnaCB0ZW1wZXJhdHVyZXMgKDUwMCB0byA2MDAgZGVncmVlcyksIHRoZSBjaGVtaWNhbHMgdXNlZCBpbiBub25zdGljayBjb2F0aW5ncyBjYW4gYmVnaW4gdG8gZGVncmFkZSBhbmQgYmUgcmVsZWFzZWQuIFRoZSBnb29kIG5ld3MgaXMgdGhhdCBjb29raW5nIGF0IHRoZSByZWNvbW1lbmRlZCBoZWF0IHdpdGggZm9vZCBpbiB0aGUgc2tpbGxldCB3b24gbGV0IHlvdSBnZXQgZXZlbiBjbG9zZSB0byB0aGF0IGxldmVsLiBDaGVjayBvdXQgYm90aCBDb25zdW1lciBSZXBvcnRzIGFuZCBHb29kIEhvdXNla2VlcGluZyBmb3IgYXJ0aWNsZXMgb24gdGhlIHNjaWVuY2UgYmVoaW5kIHdoeSBtb2Rlcm4gbm9uc3RpY2sgc2tpbGxldHMgYXJlIGdlbmVyYWxseSBkZWVtZWQgc2FmZS4gKEFsdGhvdWdoIHRoZXJlIGFyZSBwbGVudHkgb2YgaG9tZSBjb29rcyB3aG8gcHJlZmVyIG5vdCB0byB0YWtlIGFueSByaXNrIHdpdGggdGhvc2UgY2hlbWljYWxzLikKVG90YWwgUENCcywgZGlveGlucywgdG94YXBoZW5lLCBhbmQgZGllbGRyaW4gd2VyZSBjb25zaXN0ZW50bHkgYW5kIHNpZ25pZmljYW50bHkgbW9yZSBjb25jZW50cmF0ZWQgaW4gdGhlIGZhcm1lZCBzYWxtb24gYXMgYSBncm91cCB0aGFuIGluIHRoZSB3aWxkIHNhbG1vbi4KQXQgdGhpcyBwb2ludCwgdGhlIGRpc2Nvbm5lY3QgYmV0d2VlbiByZWFsaXR5IGFuZCBwb2xpY3kgaXMgc28gZ3JlYXQsIHRoZSBjb250aW51YXRpb24gb2YgRHViYnlhIHJlbGlnaW91cyB3YXIgc28gY2xlYXIsIHRoYXQgaXQgaXMgaW1wb3NzaWJsZSB0byBhc3N1bWUgUHJlc2lkZW50IE9iYW1hIGlzIGFueXRoaW5nIGJ1dCB0aGUgbW9zdCBjeW5pY2FsIG9mIG1lbi4gCk9yIG9uZSBzdG91dGlzaCBsaXR0bGUgZ2lybCAgIE1hcmdhcmV0ICAgcGFudGluZzogJ1dhaXQgZm9yIG1lLCBMaWxpYmV0LiAKSGUgaGFuZGVkIGhpbXNlbGYgaW4gdG8gcG9saWNlIG9uIE1hcmNoIDExIGFuZCBoYXMgYmVlbiBpbiBjdXN0b2R5IGV2ZXIgc2luY2UuIEluIGNvdXJ0LCBCbGVpbXV0aCdzIG1vdGhlcnNhaWQgaGVyIHNvbiBoYWQgYmVlbiBpbiB0aGUgZ3JpcHMgb2YgYW4gaWNlIGFkZGljdGlvbiBhdCB0aGUgdGltZSBvZiB0aGUgYXNzYXVsdC4gIlRoZSBpY2Ugd2FzIGFmZmVjdGluZyBoaXMgbWluZCwgaGlzIGJvZHksIGhpcyB3aG9sZSBsaWZlLCIgc2hlIHNhaWQuIApCdXQgd2hlbiBzaGUgcmV0dXJuZWQgZnJvbSB0aGUgdHJpcCBhbmQgZGlzY292ZXJlZCB0aGF0IGhlciBwYXJlbnRzIGhhZCBvbmNlIHJ1biB0d28gc3VjaCBlc3RhYmxpc2htZW50cyB0aGVtc2VsdmVzLCB0aGUgc2NvcGUgb2YgdGhlIHByb2plY3Qgd2lkZW5lZC4gdG8gRm9nbyBJc2xhbmQsIE5mbGQuClNpbmNlIExhZHkgZ2FnYSB0cmF2ZWxzIGFyb3VuZCB0aGUgd29ybGQgc2hlIGNoYW5nZXMgaGVyIHBob25lIG51bWJlciwgYnV0IGkga25vdyBoZXIgQW1lcmljYW4gcGhvbmUgbnVtYmVyIGFuZCBoZXIgQ2FuYWRpYW4gcGhvbmUgbnVtYmVyLiBNeSBmcmllbmQgd2VudCB0byBhIHNhbG9uIGFuZCB0aGUgc2Fsb24ncyBmcmllbmQga25vd3MgTGFkeSBnYWdhLiAKSSBqdXN0IHRha2UgbXkga2luZGxlLCBwaG9uZSwgb3IgZXZlbiBub3RoaW5nIGFuZCB1c2UgdGhlIHRpbWUgdG8gdGFrZSBhIGJyZWFrIGFuZCByZWxheCBhIGJpdC4uIApZb3UnbGwgZmluZCBldmVyeXRoaW5nIGZyb20gamV3ZWxyeSB0byBhY2Nlc3NvcmllcyB0byBob21lIGdvb2RzLCBhbmQgc3BlY2lhbCBGZU1OaXN0IGdlYXIgd2lsbCBiZW5lZml0IFN0aWxsIEtpY2tpbiwgd2hpY2ggcmFpc2VzIGZ1bmRzIGZvciBpbmRpdmlkdWFscyBhbmQgZmFtaWxpZXMgZGVhbGluZyB3aXRoIG1vdW50aW5nIG1lZGljYWwgYmlsbHMuIApJZiB0aGV5IGVkdWNhdGVkIGVub3VnaCBvbiB0aGUgdG9waWMgaXQgc2hvdWxkIHBvc2Ugbm8gcHJvYmxlbSB0byBhdCBsZWFzdCBoYXZlIGEgZ2VuZXJhbCBpZGVhIG9mIHdoYXQgdGhleSB3YW50IHRvIGRvLiBBIGRlY2VudGx5IHByZXBhcmVkIGNhbmRpZGF0ZSBzaG91bGQgaGF2ZSBhbHJlYWR5IGhhdmUgdGFsa2VkIG92ZXIgbWFqb3IgaXNzdWVzLCBrbm93IHdoYXQgZ2VuZXJhbCBkaXJlY3Rpb24gdGhleSB3b3VsZCBnbyBpbiBhbmQgd291bGQgYXQgbGVhc3QgaGFkIGEgY29udmVyc2F0aW9uIHdpdGggdGhlaXIgc3RhZmYgYWJvdXQgaXQuLiAKWW91IHRyeWluZyB0byBxdWFudGlmeSBicnV0YWxpdHkgaW4gc3VjaCBhIHdlaXJkIHBhcmFkb3hpY2FsIHdheSBiZWNhdXNlIHlvdSBhbiBpbnRlbGxpZ2VudCBsaWZlIGZvcm0gYW5kIGZlZWwgZW1wYXRoeSBmb3IgaHVydGluZyB0aGlzIGFuaW1hbC4gCk1lbnRpb24gcGxhc3RpYyBzdXJnZXJ5IHBhdGllbnRzIGFuZCBvbmUgaW1tZWRpYXRlbHkgdGhpbmtzIG9mIHdvbWVuLiAKUGl4ZWw5MTcgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KU0VBVFRMRSAgIEEgTG9uZG9uIG1hbiBhcHBlYXJzIHRvIGJlIGZyZWUgb2YgdGhlIEFJRFMgdmlydXMgYWZ0ZXIgYSBzdGVtIGNlbGwgdHJhbnNwbGFudCwgdGhlIHNlY29uZCBzdWNjZXNzIGluY2x1ZGluZyB0aGUgIkJlcmxpbiBwYXRpZW50LCIgZG9jdG9ycyByZXBvcnRlZC4gCkFzIGEgcmVzdWx0LCB0aGUgY292ZXJhZ2Ugb2YgcG9rZXIgb24gdGVsZXZpc2lvbiBhbmQgdGhlIG51bWJlciBvZiBib29rcyBhbmQgYW1vdW50IG9mIGluZm9ybWF0aW9uIG1hZGUgYXZhaWxhYmxlIGluY3JlYXNlcywgd2hpY2ggaW4gdHVybiBicmluZyBtb3JlIHBsYXllcnMgaW50byB0aGUgZ2FtZS4gCihJIGxpdmUgaW4gYW4gYXJlYSBjdXJyZW50bHkgYWJzb2x1dGVseSBJTkZFU1RFRCB3aXRoIHRpY2tzIGFuZCB3ZSBjb250cm9sIGJ1cm4gb3VyIGZpZWxkcyB3aXRoIHBlcm1pc3Npb24rcGVybWl0dGluZyBmcm9tIG91ciBsb2NhbCBtdW5pY2lwYWxpdHkuIApEYXZ5IGhhZCBzdWZmZXJlZCwgb3IgdGhvdWdodCBoZSBoYWQgc3VmZmVyZWQsIG1hbnkgdGhpbmdzIGF0IHRoZSBoYW5kcyBhbmQgdG9uZ3VlIG9mIE1ycy4gCldoZW4geW91IGZpZ3VyZSBvdXQgdGhhdCB5b3UgaGF2ZSBhIDIwIGNoYW5jZSBvZiBoaXR0aW5nLCB5b3UgdGhlbiBmaWd1cmUgb3V0IHlvdXIgY2hhbmNlcyBvZiB3aW5uaW5nIG9yIGxvc2luZy4gCkxHIGhhcyB1bnZlaWxlZCBhICJyb2xsYWJsZSIgVFYgICBhIDY1IGluY2ggc2NyZWVuIHRoYXQgY2FuIHJvbGwgZG93biBhbmQgZGlzYXBwZWFyIGludG8gaXRzIGJhc2Ugd2l0aCB0aGUgcHJlc3Mgb2YgYSBidXR0b24uIApPIFRyYXAgdGhlbSB3aXRoIGEgY2hlY2sgcmFpc2UgcGxheS4gWW91IGNhbiBvZnRlbiBqdXN0IGxldCBhZ2dyZXNzaXZlIGJldHRvcnMgdGFrZSB0aGUgaW5pdGlhbCBsZWFkLCBiZXR0aW5nIGludG8geW91IGFuZCB0aGVyZWJ5IGJlY29tZSBwb3QgY29tbWl0dGVkLCBsZWFkaW5nIHRoZW0gdG8gcHV0dGluZyBtYW55IG9yIGFsbCBvZiB0aGVpciBjaGlwcyBhdCByaXNrLiBUaGF0J3MgYW5vdGhlciByZWFzb24geW91J2QgYmV0dGVyIGhhdmUgYSByZWFsIGhhbmQgd2hlbmV2ZXIgeW91IGNoYWxsZW5nZSB0aGUgYWdncmVzc2l2ZSBwbGF5ZXJzICAgdGhleSB0eXBpY2FsbHkganVzdCB3aWxsIG5vdCBmb2xkIG9yIGJhY2sgZG93biwgYW5kCldoaWxlIHlvdSdyZSBhdCBpdCwgeW91IGNhbiBtYWtlIHlvdXIgaG9tZSBzbWVsbCBiZXR0ZXIuIEZlZWxpbmcgbGlrZSBtb3JlIGxhdmVuZGVyIGFuZCBsZXNzIGphc21pbmU/IE9yIHdhbnQgeW91ciBob2xpZGF5IHBhcnR5IHRvIHNtZWxsIGxpa2UgYSBibGVuZCBvZiBDaHJpc3RtYXMgdHJlZSwgZmlyZXBsYWNlIGFuZCBjb29raWVzPyBUaGUgTW9vZG8gInNtYXJ0IGhvbWUgZnJhZ3JhbmNlIGRpZmZ1c2VycyIgbWFkZSBieSBJc3JhZWxpIGZyYWdyYW5jZSBjb21wYW55IEFnYW4gQXJvbWEgZW5hYmxlIHVzZXJzIHRvIGFkanVzdCBibGVuZHMgZnJvbSB0aGVpciBzbWFydHBob25lcy4gCkVsbWphbTI4ICAgMSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KIkNvbnRyb2wgYW5kIHJ1bm5pbmcgdGhlIHBvbGljaWVzIGFuZCBnb3Zlcm5hbmNlIGhhcyB0byByZXNpZGUgd2l0aCBvbmUgbGV2ZWwgb2YgZ292ZXJubWVudCBhbmQgdG8gbWUsIHRoZSBtb3N0IGxpa2VseSBsZXZlbCBhbmQgdGhlIG9uZSB0aGF0IG1ha2VzIHRoZSBtb3N0IHNlbnNlIGlzIHRoZSBtdW5pY2lwYWwgbGV2ZWwsIiBzaGUgc2FpZC4KVW5pYmV0IGlzIHZpcnR1YWxseSBvbiBwYXIgd2l0aCBhbGwgb3RoZXIgdG9wIG9ubGluZSBib29rbWFrZXJzIGFuZCB3aXRoIHdoYXQgeW91IGNhbiBnZXQgYXQgdGhlbS4gCldlIGRvIG5vdCB0cmFjayB0aGUgdXNhZ2UgcGF0dGVybnMgb2YgaW5kaXZpZHVhbCB1c2Vycy5QbGVhc2UgdmlzaXQgdGhlIEdvb2dsZSBBbmFseXRpY3Mgd2Vic2l0ZSBmb3IgbW9yZSBpbmZvcm1hdGlvbi5JZiB5b3UgY2hvb3NlIG5vdCB0byBhY2NlcHQgY29va2llcyBmcm9tIG91ciBzaXRlIHVzaW5nIHRoZSBjb25zZW50IGJhbm5lciwgb3VyIHdlYnNpdGUgd2lsbCBjcmVhdGUgYW4gb3B0IG91dCBjb29raWUgd2hpY2ggd2lsbCBiZSBzdG9yZWQgaW4geW91ciBicm93c2VyIGZvbGRlciB3aGljaCB3aWxsIGJsb2NrIGZ1dHVyZSBHb29nbGUgQW5hbHl0aWMgY29va2llcyBmcm9tIGJlaW5nIGluc3RhbGxlZCBvbiB5b3VyIGJyb3dzZXIgZnJvbSBvdXIgd2Vic2l0ZS4gCkkgc2ltcGx5IGp1c3QgZG9uJ3QgbmVlZCB0byBnaXZlIGhpbSBvciBhbnlvbmUgZWxzZSBjcmVkaXQuIApFZGl0IDI6IEFzIHJlcXVlc3RlZCwgaGVyZSBpcyBkb2cgdGF4ISBNeSBvdGhlciBmYXZvcml0ZSBwaWMgb2YgaGltIGlzIG9uZSB0aGF0IG15IGZpYW5jZSB0b29rIHJlY2VudGx5IHdoZXJlIEkgd2FzIG5hcHBpbmcgb24gdGhlIGZsb29yIHdpdGggQmx1ZS4gV2Ugd2VyZSBzaGFyaW5nIGEgYmxhbmtldC4gSSB3YXMgaHVuZyBvdmVyIGZyb20gTmV3IFllYXIgYW5kIGRlY2lkZWQgdG8gdGFrZSBhIG5hcCBvbiB0aGUgZmxvb3IuIApIZSB3YXMgbmV2ZXIgbGlrZSB0aGF0IGFib3V0IHNjaGVkdWxlcywgYnV0IGhlJ3Mgd29ya2VkIGluIHRoZSBwdWJsaWMgc2VydmljZSBmb3IgYWJvdXQgNDAgeWVhcnMgbm93LCBhbmQgaGUgd2FzIGhvcnJpYmxlIHdoZW4gSSB3b3JrZWQgcmV0YWlsLiAKTWV0aG9kczogUHRzIGFzc2Vzc2VkIGJ5IGEgc3BpbmUgcGh5c2ljaWFuIHJhbmRvbWl6ZWQgdG8gR3JvdXAgMS4gCk5vYm9keSBrbmV3IGFib3V0IGFsbCB0aGUgcmFyZSBkcm9wcyBpbiB0aGUgZ2FtZSwgbm9ib2R5IGhhZCBzcHJlYWRzaGVldCBiaXMgbGlzdHMuIFlvdSBnb3QgYSBwdXJwbGUgYW5kIHlvdSBhc3N1bWVkIGl0IHdhcyBiZXR0ZXIgdGhhbiB5b3VyIGJsdWUuIApJIGRvbid0IGtub3cgbXVjaCBhYm91dCBGcmFuY2UgYW5kIEdlcm1hbnkgc28gSSB3b24ndCBzcGVhayBmb3IgdGhlbSwgYnV0IEknbSBwcm91ZCB0byBzYXkgdGhhdCBpbiBBdXN0cmFsaWEgd2UgZG9uJ3QgaGF2ZSBodW5kcmVkcyBkeWluZyBhdCBhIHRpbWUgYmVjYXVzZSBvZiBvbmUgbWFuIHdpdGggYSBndW4gYXQgY29uY2VydHMgKHRob3VnaCB3ZSBoYXZlIGhhZCBhIGZldyBkcnVnIHJlbGF0ZWQgZGVhdGhzIGluIHJlY2VudCBtb250aHMgdW5mb3J0dW5hdGVseS4gVGhlIGNsb3Nlc3QgdGhpbmcgd2FzIGEgYSBncmFuZGZhdGhlciB3aG8gc2hvdCBoaXMgZmFtaWx5IGF0IGhvbWUgaW4gYSBtdXJkZXIgc3VpY2lkZSAoNCBkZWFkIGlmIEkgcmVtZW1iZXIpIHdoaWNoIHdhcyB2ZXJ5IHVuZm9ydHVuYXRlLiBOb25ldGhlbGVzcywgYSBzaG9vdGluZyBpcyBkZWZpbml0ZWx5IG5vdCBzb21ldGhpbmcgeW91IGhlYXIgYWJvdXQgZXZlcnlkYXkuIEluIEFtZXJpY2EsIHNob290aW5ncyBoYXBwZW4gZXZlcnkgZGF5IGFuZCB5b3UgcHJvYmFibHkgZG9uJ3QgaGVhciBhYm91dCBpdCBldmVyeWRheSBiZWNhdXNlIHRoZXkgaGFwcGVuIHNvIG9mdGVuIHRoYXQgaXQgaXNuJ3QgbmV3c3dvcnRoeSBpZiBpdCdzIG9ubHkgb25lIG9yIHR3byBkZWFkLgpJdCB3YXMgYW5ub3VuY2VkIGJ5IGljb25pYyByaW5nIGFubm91bmNlciBNaWNoYWVsIEJ1ZmZlciwgdGhlIG1hbiB3aG8gaGFzIG1hZGUgbWlsbGlvbnMgb2YgZG9sbGFycyBvdXQgb2YgaGlzIHNpZ25hdHVyZSBsaW5lLCAiTGV0IGdldCByZWFkeSB0byBydW1ibGUiLiBCdWZmZXIgaGFzIGJlZW4gcG91bmRpbmcgdGhlIHB1YmxpY2l0eSB0cmFpbCB0aGlzIHdlZWssIGhlbHBpbmcgdG8gYnJpbmcgYSBsaXR0bGUgVmVnYXMgdG8gQnJpc3ZlZ2FzLiBBbmQgaXQgaXMgd29ya2luZy4gSW5kZWVkLCB0aGlzIGVudGlyZSB3ZWVrIGhhcyBiZWVuIGEgYmx1ciBvZiBpbGwgZml0dGluZyBzdWl0cywgaGFpciBkeWUsIGdvbGQgY2hhaW5zLCBwbGFzdGljIHN1cmdlcnksIGJ1bSBiYWdzIGFuZCBtYW55LCBtYW55IHdvcmRzLCBhbGwgb2YgaXQgYnVpbGRpbmcgaHlwZSBhcm91bmQgdGhlIHVubGlrZWx5IGZpZ2h0IGJldHdlZW4gYW4gYWdlaW5nIGxlZ2VuZCBhbmQgYSBxdWlldGx5IHNwb2tlbiB0ZWFjaGVyIHdobyB0b29rIHVwIGJveGluZyBhcyBhIHRlZW5hZ2VyIGJlY2F1c2UgaGUgd2FzIGdldHRpbmcgYnVsbGllZC4gClRoZSBjb21tZW50IHdhcyBub3QgYW5vdGhlciBzdHJhdy4gVGhhdCB0aGUgcG9pbnQuIApUaGUgZXhwZXJpZW5jZSBzaGUgZ2FpbnMgZnJvbSB0aGUgaW50ZXJhY3Rpb24gd2l0aCB0aGUgZW52aXJvbm1lbnQgZmVlZHMgaW4gdG8gaGVyIHN0aXRjaGluZy4gU25pcHBldHMgb2YgY29udmVyc2F0aW9uIGFuZCBzY3JhcHMgb2YgbWF0ZXJpYWwgYXJlIHdvdmVuIGludG8gdGhlIHBpZWNlLi4gCkJ1dCBpdCdzIG5vdCB3aGF0IGNhdXNlZCBwb2xpY3kgbWFrZXJzIHRvIGNvbnRpbnVlIHRoZWlyIHJldHJlYXQgdG8gdGhlIHNpZGVsaW5lcyB0aGlzIHdlZWsuIApVbmZvcnR1bmF0ZWx5IHRoZXJlIHdlcmUgbm8gc3VjaCBldmVudHMgb24gd2hlbiBJIHdhcyB0aGVyZSBidXQgdGhlIHB1YiB3YXMgYnVzdGxpbmcgZW5vdWdoIGV2ZW4gd2l0aG91dCB0aGUgcHJvbWlzZSBvZiBlbnRlcnRhaW5tZW50LgpUYWxraW5ndG9uIHNhaWQgdGhlIHBsYXllciB3aG8gc2hvdCBWYXNxdWV6IHR1cm5lZCB0byBoaW0sIEJvYmlhbiwgYW5kIE1jR293YW4gYW5kIHN0YXJ0ZWQgc2hvb3RpbmcuIEF0IHRoYXQgcG9pbnQsIFRhbGtpbmd0b24gd2FzIHRoZSBmaXJzdCB0byBmbGVlIHRoZSBhcGFydG1lbnQgaGUgc2FpZC4KQWdlOiA0OUhvbWV0b3duOiBCZWxpemUgQ2l0eSwgQmVsaXplT2NjdXBhdGlvbjogUG9rZXIgcGxheWVyUGFzdCBXU09QIGFjY29tcGxpc2htZW50czogT25lIGNhc2ggaW4gMjAwOCBmb3IgJDcsNTgyMy4gRW9naGFuIE8nRGVhICgzMyw5MjUsMDAwKQpQb2Ugc2Fpc2kgZGUgZGVsaXJpdW0gdHJlbWVucyBkZXZhbnQgc2EgZmV1aWxsZSBibGFuY2hlLiAKUmVsYXRlZCBhcnRpY2xlcyBieSBaZW1hbnRhCkFsc28sIHRoZSBiYW1ib28gc2hvd2VyIGlzIG9wZW4gdG8gdGhlIHNreS4gCkkgc3VwcG9ydCBQRU9QTEUgd2hvIEkgYWdyZWUgd2l0aC4gV2hvIGRvZXNuIEkgbmV2ZXIgc2FpZCBJIHN1cHBvcnRlZCB0aGF0IGNyYXAsIGFuZCBpdCB3YXMgcnVkZSBvZiB5b3UgdG8gYXNzdW1lIHNvLiBJdCBub3QgYSBibGFjayBvciB3aGl0ZSBpc3N1ZSBhbmQgSSBhbGxvd2VkIHRvIHNheSBJIGRvbiBzdXBwb3J0IElzcmFlbCB0YWN0aWNzIGFnYWluc3QgUGFsZXN0aW5pYW5zIHdpdGhvdXQgdGhlIGFzc3VtcHRpb24gdGhhdCBJIGEgaG9tb3Bob2JlIGxpa2UgaG93IHRoZSBoZWxsIGRvZXMgdGhhdCBldmVuIGNvbm5lY3QgaW4geW91ciBtaW5kClVwb24gbW92aW5nIHRvIFRvcm9udG8sIEkgaGFkIHRvIHNldCB1cCBhIFBva2Vyc3RhcnMgYWNjb3VudCBiZWNhdXNlIEkgaGFkIHByZXZpb3VzbHkgb25seSBwbGF5ZWQgb24gRnVsbCBUaWx0LiBBYm91dCAxLzMgb2YgbXkgYmFua3JvbGwgYXQgdGhlIHRpbWUgd2FzIGxvY2tlZCB1cCBvbiBGdWxsIFRpbHQgKGFib3V0IDIwaykuIApDbGFwdHJhcHA4OCB1CkFsbCB0aGUgcGxheWVycyB3YW50IHNvbWV0aGluZyByZWFsbHkgZXhjZXB0aW9uYWwgZm9yIHRoZWlyIGNhcmRzLiAKSSB0aGluayBhIHNob3ZlIGhlcmUgbG9va3MgdG9vIHN0cm9uZyBldmVuIHRobyBoZSBpcyBzaG9ydCBzdGFja2VkLiAKT3JkZXIgZG9lc24gcmVhbGx5IG1hdHRlciBmb3IgY290dG9uL21pY3JvZmlicmUsIGJ1dCBtaWNyb2ZpYnJlIG9uIHRvcCBpcyBmYXN0ZXIgYXQgYWJzb3JiaW5nIGFuZCBjb3R0b24gb24gYm90dG9tIHdvdWxkIGNhdGNoIGFueSBjb21wcmVzc2lvbiBsZWFrcy4gCkFsd2F5cyBzYXlzIGl0LCBidXQgaXQgaGFwcGVucyBhIGxvdC4gCkFuZCwgc28sIFdoaXRlIEhvdXNlIHByaW9yaXRpZXMgc2hpZnRlZCBzdWJ0bHkgdG8gcGxlYXNlIHRoZSBwbHV0b2NyYXRzIGFuZCB0cnkgdG8gbmV1dHJhbGlzZSB0aGUgVGVhIFBhcnR5IGZhbmF0aWNzIGJ5IGNvIG9wdGluZyB0aGVpciBwcm9ncmFtIHRoZSB3YXkgQmlsbCBDbGludG9uIGRpZCBpbiAxOTk2LiBJdCB3YXMgY2FsbGVkICJ0cmlhbmd1bGF0aW9uIiB0aGVuLiBPYmFtYSdzIG93biBzdXBwb3J0ZXJzIGNhbGwgaXQiYmV0cmF5YWwiIG5vdzsgT2JhbWEncyBwcm8gV2FsbCBTdHJlZXQgZWNvbm9taWMgdGVhbSBhc3N1cmVkIHRoZXkgd291bGRuJ3QgZ2l2ZSB0aGUgbWVuIG9uIFRoZSBTdHJlZXQgdG9vIG11Y2ggdG8gd29ycnkgYWJvdXQuCldlIGdvdCBsdWNreSBhbmQgZ290IGEgd2luZG93IGFib3V0IGEgd2VlayBhZnRlciB3ZSBhcnJpdmVkLiAKIkl0J3MgYSBzY2FyeSB0aG91Z2h0LCB0aGlua2luZyBzb21lb25lIGxpa2UgTWlrZSBQZW5jZSBpcyBkZWFkIHNldCBvbiB0YWtpbmcgYXdheSB0aGUgcmlnaHRzIG9mIHdvbWVuLCIgRmFybmFuIHNhaWQuICJXZSBzdGFuZCBhZ2FpbnN0IGRpc2NyaW1pbmF0aW9uIG9mIGFueSBraW5kLCBhbmQgd29tZW4gc2hvdWxkbid0IGJlIHJlbGVnYXRlZCB0byB0aGUgc2Vjb25kIGNsYXNzLiIKIlRoZXJlIHdlcmUgbm8gaGlzdG9yaWNhbCBvciBsZWdhbCBwcmVjZWRlbnRzIHRvIGd1aWRlIEZvcmQgaW4gdGhlIG1hdHRlciBvZiBOaXhvbidzIHBlbmRpbmcgaW5kaWN0bWVudC4gCkl0IHdhc24gZW5vdWdoIHRvIGRpZSwganVzdCBwYXNzIG91dC4gClNsb3cgcGxheWluZyBvciB0cmFwcGluZyBpcyBmYW5jeSBwbGF5IHN5bmRyb21lIHdoZW4gcGxheWluZyBhZ2FpbnN0IHRoZXNlIG9wcG9uZW50cy4gCkh1Z2UgcGFpbiwgYnV0IGl0IGdvdCB1cyB0aGlua2luZyBhYm91dCB0b3BpY3Mgd2UgdXN1YWxseSBkaWRuJ3QgdGhpbmsgdG9vIGluIGRlcHRoIGFib3V0LCBhbmQgaXQgd2FzIGJldHRlciB0aGFuIGhhdmluZyBteSBwYXJlbnRzIHllbGwgYW5kIHNjcmVhbS4gVXN1YWxseSBieSB0aGUgZW5kIG9mIHRoZSBlc3NheSB3cml0aW5nIHByb2Nlc3MgYm90aCBwYXJ0aWVzIHdvdWxkIGhhdmUgY2hpbGxlZCBvdXQgYW5kIGEgY2FsbSBkaXNjdXNzaW9uIHdvdWxkIGZvbGxvdy4KQ29tcGFueSBjb3VsZCBwYXJ0bmVyIHdpdGggc2Nob29sIGJvYXJkcyBpbiBhIGxpY2Vuc2luZyBhcnJhbmdlbWVudCB0aGF0IHdvdWxkIGFsbG93IHRoZW0gdG8gZXh0ZW5kIHRoZWlyIHJlYWNoIGJ5IGluY29ycG9yYXRpbmcgdGhlaXIgcHJvZ3JhbSBpbnRvIHRoZSBjdXJyaWN1bHVtLCBoZSBzYXlzLiAKVHdvc29tZSBQbGFjZSBpcyB0aGUgb25seSBuYW1lIHRoYXQgSSBjYW4gdGhpbmsgb2YgcmlnaHQgb2ZmIHRoZSBiYXQuIFNldmVyYWwgc21hbGxlciBwbGFjZXMgYXMgd2VsbC4gCkRvbnQgc2hvb3QgdGhlIG1vb3NlIGZyb20gdGhlIGNsaWZmLCBiZWNhdXNlIGlmIHlvdSBkbyBpdCB3aWxsIGJlIHJvdHRlbiBieSB0aGUgdGltZSB5b3UgZ2V0IHRvIHRoZSBjYXJjYXNzLiAKVGhpcyBpcyBjb25zaWRlcmVkIGV2ZW4gbGVzcyBhY2NlcHRhYmxlIGZvciB0aGUgZmFjdCB0aGF0IE5LIG9mZmVyZWQgdG8gZGlzbWFudGxlIG9ubHkgdGhlIFlvbmdieW9uIGZhY2lsaXR5LiAKVFYgNSB4IDUgb24gdGhlIHdhbGwsIGEgY2hhaXIgdG8gc2l0IGluIHRvIGV4cGVyaWVuY2UgdGhlIGdyZWF0IGhvbWUgdGhlYXRlciBwYWNrYWdlIHRoZXkgb2ZmZXJpbmcuIApTb3JyeSBJIGRlcmFpbGVkIHRoaXMgQ2hyaXN0bWFzIGxldHRlciBzbyBiYWRseSwgYnV0IGl0IGFuIG9kZCBleHBlcmllbmNlIHRvIGhhdmUsIGFuZCBJIGhvcGUgb25lIHdvcnRoIG1lbnRpb25pbmcgdGhpcyB5ZWFyLiBJZiBJIG1pc2p1ZGdlZCwgaG9wZWZ1bGx5IHlvdSBza2lwcGVkIHRvIGhlcmUgZm9yIHRoZSBtZWF0IG9mIHRoZSBsZXR0ZXIsIG9yIHVzZWQgaXQgdG8gbGlnaHQgeW91ciBmaXJlcGxhY2UsIG9yIHRyYWluIHRoZSBuZXcgQ2hyaXN0bWFzIHB1cHB5LgpIZSB3b3VsZCBzZWUgaGVscGluZyBoZXIgYXMgc2F2aW5nIGEgYm95J3MgbGlmZSwgbm90IGJldHJheWluZyB0aGUgZGFyayBsb3JkIHdpc2hlcy4gQW5kLCBpbiB0aGUgZXZlbnQgdGhpbmdzIHdlbnQgc291ciwgaGUgY291bGQgc3BpbiB0aGUgYXJndW1lbnQgdGhhdCBwbGFudGVkIGhpbSBpbiBhIHBvc2l0aW9uIHRoYXQgd2FzIGFjdHVhbGx5IGhlbHBpbmcgVm9sZGVtb3J0IGluIHRoZSBsb25nIHJ1biAobGlrZSBub3Qgc2hvd2luZyB1cCB3aGVuIHRoZSBEYXJrIE1hcmsgYnVybmVkIHVudGlsIGhlIGNvbmZpZGVkIGluIER1bWJsZWRvcmUpLkFsc28sIEkgYXNzdW1lZCB3aGVuIEkgcmVhZCB0aGlzIGNoYXB0ZXIgaW4gdGhlIGJvb2sgdGhhdCBwZXJoYXBzIERlYXRoIEVhdGVycyBqdXN0IGtub3cgd2hlcmUgdGhlIG90aGVycyByZXNpZGUsIHBhcnRpY3VsYXJseSBhZnRlciBWb2xkZW1vcnQgZmVsbCBzbyB0aGV5IGNvdWxkIGdldCBuZXdzIHdpdGhvdXQgaXQgYmVpbmcgaW4gd3JpdGluZyBhbmQgZWFzaWx5IGludGVyY2VwdGVkLiBBbmQsIGJlaW5nIGhlciBzb24ncyBwb3Rpb24gdGVhY2hlciwgSSdtIHN1cmUgdGhhdCBzaGUgY2FuIGdldCB0aGF0IGluZm9ybWF0aW9uIHZlcnkgZWFzaWx5IHVuZGVyIHRoZSBndWlzZSBvZiBnZXR0aW5nIGludG8gY29udGFjdCBvdmVyIHRoZSBzdW1tZXIgaG9saWRheXMgaW4gcmVnYXJkcyB0byBjbGFzcyBpbmZvcm1hdGlvbiwgc3VtbWVyIGFzc2lnbm1lbnRzLCBldGMuIApBZGQgc29tZSBleHRyYXMgbGlrZSBwZW5uaWVzLCB1c2VkIHBva2VyIGNoaXBzLCBvciBjb3VudGVyZmVpdCBjb2lucyB0byBwdXQgYWNyb3NzIHlvdXIgbWVzc2FnZSB0aGF0IHlvdXIgcG9rZXIgcGFydHkgaXMgZ29pbmcgdG8gYmUgZnVuIGFuZCBleGNpdGluZy4uIApUaGUgYmVzdC4gClBsdXMsIGhlJ3MgYmVlbiBtYWtpbmcgcnVkZSBjb21tZW50cyBhYm91dCBteSB3ZWlnaHQgYW5kIGdyYWJiaW5nIG15IGxvdmUgaGFuZGxlcy4gSSB3ZW50IHRvIHRoZSBneW0gdGhpcyBldmVuaW5nIGFuZCBjb21lIGhvbWUgdG8gbW9yZSB3b3JrLCBhbmQgbWFraW5nIGhpbSBhIHNhbmR3aWNoLiBFZmYgdGhhdCEhIEkgc25hcHBlZCEgeWVsbGVkIGF0IGhpbSBpbiBmcm9udCBvZiBsby4gClByYWdtYXRpY2FsbHksIHlvdSBzdGlsbCBuZWVkIGJvdGguIFRoZSByYXRpbyBvZiBkdXJhdGlvbiB0byBlZmZvcnQsIGV2ZW4gYXNzdW1pbmcgYSB2ZXJ5IHN0YWJsZSB0ZWFtLCBpc24gc2ltcGxlIG9yIGxpbmVhci4gCkkgZmluZCBpdCBzbyBoYXJkIHRvIHRyeSBhbmQgZm9sbG93IHRoaXMgdGhpbmtpbmcuIEl0IHNvIG1hbGUgY2VudGVyZWQuIE1lbiBoZXJlLCBtZW4gdGhlcmUsIG1lbiBhcmUgYWxsIHRoZXJlIGlzIGluIHRoaXMgZ3V5IGFyZ3VtZW50LiAKUHVpcywgaWwgcydhZ2l0IGRlIGJpZW4gcmVwcmVuZHJlIGxhIGRpc3RpbmN0aW9uIGVudHJlIGxlcyBkZXV4IGFsaW5hcyBkZSBjZXQgYXJ0aWNsZS4gSWwgZXhpc3RlIHVuZSBpbXBvcnRhbmNlIGZvbmRhbWVudGFsZSBlbnRyZSBsZXMgdGVybWVzICBhYm9saSAgZXQgIGFsdHIgLiBQb3VyIGVmZmVjdHVlciB1bmUgYnJ2ZSBwcnNlbnRhdGlvbiBsb3JzcXVlIGxlIGRpc2Nlcm5lbWVudCBlc3QgYWJvbGkgKHBydmlzaW9uIGR1IDFlciBhbGluYSksIGlsIGEgdG90YWxlbWVudCBkaXNwYXJ1LiAKT25lIG1vcm5pbmcsIExhbmUgaXMgYXBwcm9hY2hlZCBpbiBjb3VydCBieSBhIG1lc3NlbmdlciB3aG8gaGFuZHMgb3ZlciBhIG5vdGUgYW5kIG1ha2VzIGEgaGFzdHkgZXhpdC4gCigxKSAgIEZvbGxvdyBwcm9wZXIgUmVkZGlxdWV0dGUgYW5kIHRoZSBzdWJyZWRkaXQgUG9zdGluZyBQcm9jZWR1cmVzLCB0aGlzIGluY2x1ZGVzIGZsYWlyaW5nIHlvdXIgcG9zdCBhbmQga2VlcGluZyBjb250ZW50IGluIHRoZSBhcHByb3ByaWF0ZSBEYWlseSBhbmQgV2Vla2x5IFRocmVhZHMuIEtlZXAgaXQgY2l2aWwgYW5kIGRvIG5vdCBtYWtlIHRocmVhdHMgb3IgdXNlIGV4Y2Vzc2l2ZSBmb3VsIGxhbmd1YWdlLiAKTGVhcm5pbmcgdGhlIG5ldyBtZWNoYW5pY3Mgb24gdGhlIGZseSB3aGlsZSB0cnlpbmcgdG8gZmlndXJlIG91dCB0aGUgbnVhbmNlcyBvZiB0aGUgbWFwIHdhcyBuZWF0LiAKUmU6IHRoaXJkIGRheSBvbndhcmRzIHdpdGggZnJlc2ggZnJ1aXQvdmVnLCBJIHVzdWFsbHkgdHJ5IHRvIGVhdCB0aGUgbW9zdCBwZXJpc2hhYmxlIHN0dWZmIGZpcnN0IChhdm9jYWRvLCBtb3p6YXJlbGxhLCB0b21hdG9lcywgY3VjdW1iZXJzKSB0aG9zZSB3aWxsIGVhc2lseSBsYXN0IHR3byBvciBldmVuIG1vcmUgZGF5cy4gVGhlbiBJIG1vdmUgb250byB0aGUgaGFyZGllciBzdHVmZiAoY2Fycm90cywgb3JhbmdlcywgYXBwbGVzLCBiYW5hbmFzKSB0aGVzZSBsYXN0IGZvciBxdWl0ZSBhIGZldyBkYXlzIGluIHRoZSBmaWVsZC4gCkxpa2UgU2VuYXRvciBMZXlvbmhqZWxtLCB3ZSBzdHJvbmdseSBmZWVsIHRoYXQgdGhlIG9ubGluZSBnYW1ibGluZyBpbmR1c3RyeSBzaG91bGQgYmUgcmVndWxhdGVkLCByYXRoZXIgdGhhbiBzdHJpY3RseSBiYW5uZWQgYWNyb3NzIHRoZSBib2FyZC4gV2h5IHNob3VsZCBvbmxpbmUgZ2FtYmxpbmcgb3BlcmF0b3JzIGFuZCB0aGVpciBjdXN0b21lcnMgYmUgdGhlIG9ubHkgb25lIHRvIGJlYXIgdGhlIGJydW50IG9mIHRoZSBuZXcgbGF3cz8gU3VyZWx5IHRoZSBnYW1ibGluZyBpbmR1c3RyeSBpcyBqdXN0IGFzIGRlc2VydmluZyBvZiB0aGUgY29uY2Vzc2lvbnMgZ3JhbnRlZCB0byBzcG9ydHMgYmV0dGluZyBlc3RhYmxpc2htZW50cz8uIApNYXliZSBhZnRlciBhIHdlZWsgb3Igc28gdGhleSBjYW4gYW5ub3VuY2UgYSBwcml6ZSB0byBhbnlib2R5IHRoYXQgY2FuIHJlY3JlYXRlIHRoZSAiYnVnIi4uIApJIGp1c3QgdHJ5aW5nIHRvIGJlIHJlYWxpc3RpYyBoZXJlLi4gCkV4Y2Vsc2lvciBTcHJpbmdzU2VhcmNoIGZvciAiezB9IlRoZSBtb3N0IHJvbWFudGljIGdldGF3YXkgaW4gdGhlIEthbnNhcyBDaXR5IGFyZWEsIHRoaXMgc3RhdGVseSBhbmQgaGlzdG9yaWMgYmVkIGFuZCBicmVha2Zhc3QgaXMgbG9jYXRlZCBpbiBFeGNlbHNpb3IgU3ByaW5ncywgTU8sIGEgbWVyZSAzMCBtaW51dGVzIGZyb20gZG93bnRvd24gS2Fuc2FzIENpdHkuIE91ciBpbm4gb2ZmZXJzIHRoZSBwZXJmZWN0IHNldHRpbmcgZm9yIHdlZGRpbmdzLCBjb3Jwb3JhdGUgcmV0cmVhdHMsIGZhbWlseSByZXVuaW9ucywgaG9uZXltb29ucywgc3RheWNhdGlvbnMsIGFuZCBvdGhlciBldmVudHMuIFRoZSBJbm4gb24gQ3Jlc2NlbnQgTGFrZSBvZmZlcnMgbWFueSBvcHRpb25zIHRvIGVhY2ggZ3Vlc3QsIGJ1dCB3ZSBhcmUgY2VydGFpbiB0aGF0IGV2ZXJ5b25lIHdobyBjb21lcyB3aWxsIGVuam95IHRoZSBvcHBvcnR1bml0eSB0byByZXN0LCByZWxheCwgYW5kIHJlanV2ZW5hdGUuIEVuam95IHRoZSBncmVhdCBvdXRkb29ycyBhdCB0aGUgSW5uIHdoaWxlIHN1bmJhdGhpbmcgYmVzaWRlIG91ciBmdWxsIHNpemUgaW4gZ3JvdW5kIHBvb2wgb3Igc29ha2luZyBpbiBvdXIgc2V2ZW4gcGVyc29uIGhvdCB0dWIuIEdldCBjbG9zZSB0byBuYXR1cmUgYnkgZmlzaGluZyBvdXIgZm91ciBhY3JlIGxha2Ugb3IgY3J1aXNpbmcgdGhlIHdhdGVyIGluIG91ciBwYWRkbGUgYm9hdHMsIGJhc3MgZmlzaGluZyBib2F0LCBvciByb3dib2F0LiBXZSBhbHNvIG9mZmVyIGEgd2Fsa2luZyB0cmFpbCwgd2hlcmUgeW91IG1heSBlbmNvdW50ZXIgc29tZSBvZiB0aGUgYXJlYSB3aWxkbGlmZSwgaW5jbHVkaW5nIGRlZXIsIHJhY2Nvb25zLCBhbmQgYSB2YXJpZXR5IG9mIGJpcmRzLgpDYXJlIHRoYXQgY2F1c2VzIGVhcmx5IGVuZ2FnZW1lbnQgb2YgYm90aCB0aGUgcGF0aWVudCBhbmQgY2xpbmljaWFuIGNvdXBsZWQgd2l0aCBzaGFyZWQgYWNjb3VudGFiaWxpdHkgZm9yIHRoZSBvdXRjb21lIGlzIHRoZSBtb3N0IGRlc2lyYWJsZSBvZiByZWxhdGlvbnNoaXBzLiBDaGlyb3ByYWN0aWMgbWF5IGJlIGFibGUgdG8gc3VwcG9ydCBhbmQgZW5oYW5jZSB0aGlzIHJlbGF0aW9uc2hpcC4gSGVhbHRoIGNhcmUgcmVmb3JtIHRvIGJlIGVmZmVjdGl2ZSBhbmQgd29ydGggdGhlIGVmZm9ydCwgaXQgd2lsbCByZXF1aXJlIGEgZnJlc2ggbG9vayBhdCBhbGwgb3B0aW9ucywgbm90IGp1c3QgdGhlIG9uZXMgdGhhdCBhcmUgbW9zdCBmYW1pbGlhci4gCkFuZCB3ZSBoYXZlIDEwMCBwbGFjZXMgc3RpbGwgdG8gY2hlY2sgd2l0aGluIG91ciBvd24gc29sYXIgc3lzdGVtOiBwbGFuZXRzLCBtb29ucywgbGFyZ2UgYXN0ZXJvaWRzLCBjb21ldHMsIGV0Yy4gQW5kIHRoYXQganVzdCBvbmUgb2YgdGhlIDIwMCBzZXh0aWxsaW9uIG91dCB0aGVyZS4gCkNoYW5jZXMgYXJlLCBpZiB5b3UgZ2V0IGEgcm91bmQgZm9sZGluZyBjYXJkIHRhYmxlIHRoYXQncyBwb3J0YWJsZSwgaXQncyBwcm9iYWJseSBnb2luZyB0byBiZSBwbGFzdGljIHJlc2luICAgYnV0IHRoYXQgc2hvdWxkbid0IGRpc3N1YWRlIHlvdS4gCkluIHRoaXMgY2FzZSB0aG91Z2gsIHRoZXJlIGlzIGEgYml0IG9mIHBvd2VyY3JlZXAgYmVjYXVzZSBzb21lIG9mIHRoZSBvbGRlciB1bml0cyBkb24gaGF2ZSBnb29kIHNraWxscyB0byBnaXZlLCBzbyBpbiB0aGUgZW5kIGl0IG1pZ2h0IGJlIGEgdXNlbGVzcyBwdWxsLkFyZW5hIGhhcyBjaGFuZ2VkIHF1aXRlIGEgbG90LiBJdCBzdGlsbCBoYXMgdGhlIGhpZ2hlciBCU1QgZ2l2ZXMgYSBiZXR0ZXIgc2NvcmUsIHNvIGFybW9ycyBzdGlsbCBkb21pbmF0ZSB0aGUgdG9wIHRpZXJzIChpbiBwYXJ0aWN1bGFyIHRoZSB0aHJlZSB0cmFpbmVlIGFybW9yZWQgZHJhZ29ucywgTCFUaWtpLCBIIU15cmhoIGFuZCBXIUZhZSB3aGljaCBoYXZlIDE4MyBCU1QsIHRoZSBoaWdoZXN0IGFtb3VudCksICsxMCB1bml0cyBrZWVwIGdpdmluZyBhIGhpZ2hlciBzY29yZSwgYW5kIHRoZXJlIHRoZSB3aG9sZSBMZWdlbmRhcnkgKyBibGVzc2luZ3MgdGhpbmcgdGhhdCB1cHMgdGhlIHNjb3JlIGFzIHdlbGwsIGJ1dCBzaW5jZSBub3cgdGhlIGtpbGxzIGRvbmUgd2l0aCBib251cyB1bml0cyBnaXZlIGJvbnVzIHBvaW50cywgdGhlIG1ldGEgY2hhbmdlZCB0byAzIHN1cHBvcnQgdW5pdHMgKyB0aGUgYm9udXMgdW5pdHMuIApEZXZvbHZlICAyIHBvaW50cyAgc3VibWl0dGVkIDIgeWVhcnMgYWdvCiJUaGUgY29uZGl0aW9ucyBhcmUgY29tcGxldGUgZGFya25lc3MsIHNvIG5vIGVsZWN0cm9uaWNzLCBubyBsaWdodCBlbWl0dGluZyBkZXZpY2VzLCBubyBkcnVncyBvZiBhbnkga2luZCwiIHNhaWQgWW91bmcuICJIZSBpcyBhbGxvd2VkIGFueSB0eXBlIG9mIGZvb2QgdGhhdCBoZSB3YW50cy4gCk1hc3NhZ2UgVGhlcmFweSBhbmQgU3VwaW5lIEh5cG90ZW5zaXZlIFN5bmRyb21lICAgVXNlIGEgbW9kaWZpZWQgc3VwaW5lIHBvc2l0aW9uIGZyb20gYWJvdXQgd2VlayAyMiB0byBwcmV2ZW50IHN1cGluZSBoeXBvdGVuc2l2ZSBzeW5kcm9tZS4gCkFuZCB5b3UgZ2V0IG1vcmUgcmVhZHkgdG8gYnVybiBtb3JlIGZhdCBpbnN0ZWFkIG9mIGp1c3QgZ2x5Y29nZW4gdGhlIGxvbmdlciB5b3Ugc3RpY2sgdG8gYSBsb3cgdG8gbm8gY2FyYiBkaWV0Li4gCldoYXQgeW91IGNhbiBzYXkgYWJvdXQgaXQ/IChGdWxsIEFuc3dlcikuIApJIHdpbGwgYmUgc2V0dGluZyB1cCByZWd1bGFybHkgYXQgdGhlIFN1bnJpc2UgdHJhaWxoZWFkLCBqdXN0IG91dHNpZGUgb2YgdGhlIExhZ3VuYSBBdCBtaWxlIDYwIHdlIGZvdW5kIHF1aXRlIGEgZmV3IGZvbGtzIHdobyBhcmVuIGRvaW5nIHF1aXRlIGFzIHdlbGwgYXMgdGhleSBoYWQgaG9wZWQgYW5kIG5lZWQgaGVscC4gV2Ugc3RhcnRlZCBkb2luZyB0aGlzIGhlcmUgbGFzdCB5ZWFyIGR1ZSB0byB0aGUgcHJvYmxlbXMgd2l0aCB0aGUgd2F0ZXIgc291cmNlIGF0IHRoaXMgbG9jYXRpb24uIFdlIG1haW50YWluZWQgYSBjYWNoZSBhdCB0aGlzIGxvY2F0aW9uIGludG8gbGF0ZSBNYXksIGJ1dCB0aGlzIHllYXIgSSBtYWtlIHN1cmUgaXQgbGFzdHMgbG9uZ2VyLiAKSSB3b3VsZCBsb3ZlIHRvIHNlZSB0aGUgdmlkZW8gZm9vdGFnZSBoYSBoYS4uIApJZiB5b3UgdGhpbmsgeW91J3ZlIGFjdHVhbGx5IHdvbiB0aGUgaGFuZCBvbiB0aGUgdHVybiBjYXJkLCB5b3UgbWF5IGV2ZW4gd2FudCB0byBqdXN0IGNoZWNrLCBhbmQgdGhlbiBiZXQgbGlrZSBjcmF6eSBvbiB0aGUgcml2ZXIuIFBlb3BsZSBhcmUgbW9yZSBsaWtlbHkgdG8gbWFrZS9jYWxsIGEgYmlnIGJldCwgaWYgeW91IGNoZWNrZWQgYmVmb3JlLCB0aGlua2luZyB5b3UgbWlnaHQgYmUgd2Vhay9ibHVmZmluZy4gCkkgc2F5IGRvdWJsZSBkb3duLCByZW1vdGl2YXRlLCBhbmQgcmVpbnZlbnQgeW91cnNlbGYuIApUaGUgcm9sZSBvZiBBSSBsZWQgaW5zaWdodHMsIGxpbmtzIGFuZCBwYXJhbGxlbHMgbWVhbiBkZWVwZXIgaW5zaWdodHMgYW5kIHBvc3NpYmlsaXRpZXMgdGhhdCBjYW4gdHJ1bHkgY29ubmVjdCB3aXRoIGEgY29uc3VtZXIgZm9yIHdob20gYSBjb25uZWN0ZWQsIHNtYXJ0IGxpZmUgaXMgYSByZWFsaXR5IG5vdy4gCkdldCBzb21lIGZvb2QgcmVhZHkuIApJIG9ubHkgbGlrZSB0byBnbyB0byBHcmVla3Rvd24gaWYgSSB3YW50IHRvIGdyYWIgZGlubmVyIGF0IG9uZSBvZiB0aGUgbmVhcmJ5IHJlc3RhdXJhbnRzIGFuZCB0aGVuIHBsYXkgYSBsaXR0bGUgYml0IGFmdGVyLiAKVGhlIHJlYmVsIGdyb3VwcyBNTkxGIGFuZCBNSUxGIHdlcmUgYmVpbmcgbWF0ZXJpYWxseSBhbmQgbW9yYWxseSBzdXBwb3J0ZWQgYnksIGFtb25nIG90aGVycywgU0EuIE51ciBNaXN1YXJpLCBmb3IgYSB3aGlsZSwgd2FzIGNvZGRsZWQgYnkgU0EuIApXaGlsZSBjaGVja2luZyB0aGUgcmVnaXN0cmF0aW9uIG51bWJlcnMgb2YgdGhlIGNhcnMsIG9mZmljaWFscyB3ZXJlIHN1cnByaXNlZCB0byBzZWUgYSBjb21tb24gbnVtYmVyLiAKU28geW91IHNheWluZyB0aGF0IENvcmJ5biBvcHBvc2luZyBBTEwgQnJpdGlzaCBtaWxpdGFyeSBpbnRlcnZlbnRpb25zIHNpbmNlIGhlIGJlY2FtZSBhbiBNUCBhbmQgaGltIGNvIGZvdW5kaW5nIFN0b3AgdGhlIFdhciBDb2FsaXRpb24gYW5kIGhpbSBiZWluZyBhIG1lbWJlciBvZiBDTkQgYW5kIGhpbSBzYXlpbmcgdGhhdCBoZSB3b3VsZG4gcHJlc3MgdGhlIG51Y2xlYXIgYnV0dG9uIGxlYXZlcyBzaWduaWZpY2FudCBkb3VidCBhYm91dCBoaXMgdmlld3Mgb24gdXNlIG9mIHRoZSBtaWxpdGFyeT8KQyBhdXggZW52aXJvbnMgZGUgTmlvcnQsIGR1cmFudCBjZSBtbWUgWFZJSUkgbWUgc2ljbGUsIHF1IGV1dCBwb3VyIGxhIHByZW1pcmUgZm9pcyBsIGRlIGNvbmZpcmUgbCBBdSBzaWNsZSBzdWl2YW50LCBvbiBjb25mZWN0aW9ubmFpdCBtbWUgZGVzIGZvcm1lcyBhbmltYWxlcyBldCB2Z3RhbGVzIGVuIG1vdWxhbnQgZGVzIHRpZ2VzIGQgY29uZml0ZSwgYyBkaXJlIGwgISBDZWNpIHRhbnQgZGl0LCBjZXR0ZSBwcmF0aXF1ZSBmcmFuY29waG9uZSBuZSBzYXVyYWl0IGZhaXJlIG91YmxpZXIgbGVzIHVzYWdlcyBjdWxpbmFpcmVzIGRlIGwgcHJvcHJlcyAgZCBjb250cmVzLiBUcnMgcHJzZW50ZSBkYW5zIGxlcyBjdWlzaW5lcyBlbiBDaGluZSBldCBlbiBTY2FuZGluYXZpZSwgbGEgcGxhbnRlIHkgZXN0IHV0aWxpc2UgZGVzIGdyYWluZXMgIGxhIHJhY2luZS4gClJvYyBOYXRpb24gaW50ZW5kcyB0byBiZSBhbiBhZ2VuY3kgbm90IGEgYnJhbmRpbmcgYWdlbmN5LiAKVGhlc2Ugc3R1ZGllcyBzdWdnZXN0IHRoYXQgZXhlcmNpc2UgY291bGQgaGFzdGVuIHRoZSByZWFwcGVhcmFuY2UgaW4gdGhlIGNlbnRyYWwgY2lyY3VsYXRpb24gb2YgbGV1a29jeXRlcyBjb25kaXRpb25lZCBieSB0aGUgbG9jYWwgZW52aXJvbm1lbnQgb2YgdGhlIGx1bmcsc3BsZWVuLCBhbmQgbXVzY2xlIHByb3ZpZGluZyBhIHBvdGVudGlhbCBtZWNoYW5pc20gdGhyb3VnaCB3aGljaCB0aXNzdWVzIGxpa2UgbXVzY2xlIGNvdWxkIGluZmx1ZW5jZSBpbW11bmUgZnVuY3Rpb24gc3lzdGVtaWNhbGx5LlRoaXMgc3BlY3VsYXRpb24gaXMgY29uc2lzdGVudCB3aXRoIGEgZ3Jvd2luZyBib2R5IG9mIGRhdGEgZnJvbSBhaXIgcG9sbHV0aW9uIHRvIHN1cmdlcnksIHRoYXQgbG9jYWwgdHJpZ2dlcnMgY2FuIGluZmx1ZW5jZXN5c3RlbWljIGltbXVuZSBjZWxsIGZ1bmN0aW9uIChkZW4gSGFydGlnaCBldCBhbC4sIDIwMTA7IExhbmRpcywyMDA5OyBNZW56aWVzIGV0IGFsLiwgMjAwNjsgVGhvbWFzIGV0IGFsLiwgMjAwMikuQ2lyY3VsYXRpbmcgbGV1a29jeXRlcyBpbmNyZWFzZSByYXBpZGx5IHdpdGggZXhlcmNpc2UgdGhlbiBxdWlja2x5IGRlY3JlYXNlIHdoZW4gdGhlIGV4ZXJjaXNlIGVuZHMuV2UgdGVzdGVkIHdoZXRoZXIgZXhlcmNpc2UgYWN1dGVseSBsZWQgdG8gYmlkaXJlY3Rpb25hbCBpbnRlcmNoYW5nZSBvZiBsZXVrb2N5dGVzIGJldHdlZW4gdGhlIGNpcmN1bGF0aW9uIGFuZCB0aGUgbHVuZywgc3BsZWVuLCBhbmQgYWN0aXZlIHNrZWxldGFsIG11c2NsZS5UbyBhY2NvbXBsaXNoIHRoaXMgaXQgd2FzIG5lY2Vzc2FyeSB0byBsYWJlbCBhIGxhcmdlIG51bWJlciBvZiBpbW11bmUgY2VsbHMgKGdyYW51bG9jeXRlcywgbW9ub2N5dGVzLCBhbmQgbHltcGhvY3l0ZXMpIGluIGEgd2F5IHRoYXQgcmVzdWx0ZWQgaW4gbWluaW1hbCBwZXJ0dXJiYXRpb24gb2YgY2VsbCBmdW5jdGlvbi5SYXRzIHdlcmUgaW5qZWN0ZWQgaW50cmF2ZW5vdXNseSB3aXRoIGEgc2luZ2xlIGJvbHVzIG9mIGNhcmJveHlmbHVvcmVzY2VpbiBkaWFjZXRhdGUgc3VjY2luYW1pZHlsIGVzdGVyIChDRlNFKSBkeWUgd2hpY2ggaXMgcmFwaWRseSBhbmQgaXJyZXZlcnNpYmx5IHRha2VuIHVwIGJ5IGNpcmN1bGF0aW5nIGNlbGxzLlRoZSB0aW1lIGNvdXJzZSBvZiB0aGUgZGlzYXBwZWFyYW5jZSBvZiBsYWJlbGVkIGNlbGxzIGFuZCB0aGVpciByZWFwcGVhcmFuY2UgaW4gdGhlIGNpcmN1bGF0aW9uIGZvbGxvd2luZyBleGVyY2lzZSB3YXMgZGV0ZXJtaW5lZCB2aWEgZmxvdyBjeXRvbWV0cnkuVGhlIG1ham9yaXR5IG9mIGNpcmN1bGF0aW5nIGxldWtvY3l0ZXMgd2VyZSBsYWJlbGVkIGF0IDRoLiAKSSB3b3VsZCBkZWZpbml0ZWx5IGdldCBhIGxhd3llciwgb3IgdGFsayB0byB0aGUgbGF3eWVyIHRoYXQgaGFuZGxlZCB0aGUgYWRvcHRpb24uIFRoZXkgd291bGQgYmUgYWJsZSB0byB0ZWxsIHlvdSBtb3JlLi4gCihJIHdlbnQgdG8gY291cnQgZm9yIHRoaXMgYWxtb3N0IGV4YWNsdHkgMSB5ZWFyIGFnbykgRk1MLiAKT3ZlcnZpZXcgZm9yIGNodW5rczIwMgpUaGUgMTIwa2cgYmVuY2ggaGFzIGEgc2xpZ2h0IG1pc3MgZ3JvdmUgYXQgdGhlIGJvdHRvbSBhbmQgaXQgdG9vayBzbyBtdWNoIGVuZXJneSBidXQgdGhlIGxvY2sgb3V0IHNwZWVkIGZlbHQgZmFzdCBzbyBJIGtuZXcgSSBoYWQgbW9yZSBpbiBtZS4gCkFib3V0MzAgcGVyIGNlbnQgb2YgcGVvcGxlIHdobyByZWd1bGFybHkgdXNlIHBva2llcyBhcmUgc3VmZmVyaW5nIGhhcm0gICBhbmQgZWFjaCBwcm9ibGVtIGdhbWJsZXIgaW1wYWN0cyBvbiBhbiBlc3RpbWF0ZWQgNSAxMCBvdGhlciBwZW9wbGUuIFRoaXMgbWFrZXMgZ2FtYmxpbmcgaGFybSBldmVyeW9uZSdzIHByb2JsZW0uIApUaGVuIGNsaWNrIGV4aXQgZ2FtZWFnYWluLC4gYmFjayB0byB0aGUgbWFpbiBtZW51LC4gb25seSBub3cgYWxsIHRoZWlyIGNhcmRzYXJlIHNob3duLiBHb29kIGx1Y2sgaXQgd29ya3MgZm9yIG1lLiAoRnVsbCBBbnN3ZXIpLiAKRWFybGllciB0aGlzIHllYXIsIGF0IHRoZSBQb2tlclN0YXJzIENhcmliYmVhbiBBZHZlbnR1cmUgZXZlbnQgaW4gQmFoYW1hcywgaGUgZmluaXNoZWQgMjZ0aC4gRnJvbSBhIHN0YXJ0aW5nIGZpZWxkIG9mIDgxNiwgUm9uYWxkbyBtYWRlIGl0IGFsbCB0aGUgd2F5IHRvIHRoZSBmaW5hbCAyNiBwbGF5ZXJzIGJlZm9yZSBoZSB3YXMgc2VudCB0byB0aGUgcmFpbCwgdGFraW5nIGhvbWUgVVNEIDQyLDE4MCBmb3IgaGlzIGZpcnN0IGNhc2ggcHJpemUgaW4gYSBtYWpvciBwb2tlciB0b3VybmFtZW50LiAiWWVzLCBJIGRpZCB3ZWxsIGFuZCBJIGFtIHRoZSBmaXJzdCBwcm9mZXNzaW9uYWwgcGxheWVyIGZyb20gQnJhemlsIHRvIGRvIHNvLCIgUm9uYWxkbyBzYWlkLgpPcHRpb24gTnVtYmVyIE9uZSAgIEJlIHlvdXIgb3duIFZhbGVudGluZS4gSSBrbm93IGl0IHNvdW5kcyBsaWtlIHNvbWUgY2hlZXN5IGFzcyB0aGluZyB5b3VyIEF1bnQgQmVydGhhIHdvdWxkIHNheSwgYnV0IGhlYXIgbWUgb3V0LiAKTm8uIApUaGlzIGlzIHRvIHByb3RlY3QgdGhlaXIgYnJhaW5zIGZyb20gaW5qdXJ5LiAKVGhlIDQgWW9ua28sIHRoZSBmbGVldCBhZG1pcmFsLCBhbmQgMyBhZG1pcmFscy4gCiJUaGVyZSByZWFsbHkgd2Fzbid0IG11Y2ggb3B0aW9uLiBJIHdhcyBjdXR0aW5nIHRocm91Z2ggdGhlIG1pZGRsZS4gClNvIHllcy4gSW0gYW4gYW50aSBzZW1pdGUuIEJlY2F1c2UgSSBoYXRlIGN1bnR5IHBlb3BsZS4gQW5kIGZvciBzb21lIHJlYXNvbiBldmVyeSBzZWxmIGlkZW50aWZpZWQgSmV3aXNoIHBlcnNvbiB0aGF0IHN1cHBvcnRzIElzcmFlbCBhY3RzIGxpa2UgYSBjdW50LiBNYXliZSBzdG9wIGFjdGluZyBsaWtlIGN1bnRzIGFuZCBwZW9wbGUgd2lsbCBzdG9wIGhhdGluZyB5b3UuIGR1bWIgY3VudC4KSSBwbGF5ZWQgZW5vdWdoIFRDR3MgaW4gbXkgeW91dGggKGFuZCBTbGF5IHRoZSBTcGlyZS4pIHRvIGJlIGF3YXJlIG9mIGFsbCB0aG9zZSBwcmluY2lwbGVzLi4gCkl0IGlzIGEgY29tYmluYXRpb24gb2Ygc3RyYWlnaHQgYW5kIGZsdXNoIGhlbmNlIHRoZSBuYW1lLiBTb3VuZHMgY29uZnVzaW5nPyBJdCBpcyBhY3R1YWxseSBlYXN5OyBoZXJlIHRoZSBjYXJkcyBvZiB0aGUgcG9rZXIgaGFuZHMgaGF2ZSB0aGUgc2FtZSBzdWl0IHdpdGggY29uc2VjdXRpdmUgdmFsdWVzLiAKU3VjaCBhcyBnZXR0aW5nIGRyZXNzZWQgaW4gZnJvbnQgb2YgaGltLCBzaG93ZXJpbmcsIG1heWJlIGEgcXVpY2sgc2xhcCBvbiB0aGUgYm9vdHksIGp1c3QgYW55dGhpbmcgdGhhdCBjb3VsZCBoYXZlIGEgc2V4dWFsIGNvbm5vdGF0aW9uLiAKT24gVGh1cnNkYXksIFRleGFzIGVudGVyZWQgdGhlIGxlZ2lvbiBvZiBzdHJhaWdodCBsb3ZpbiBzdGF0ZXMgbm93IHN1Y2N1bWJpbmcgdG8gdGhlIGhvbW9zZXh1YWwgc3RyYXRlZ3kgb2YgZ2F5IGRpdm9yY2UuClJlYWwgdXNlcyByZWFsIGxpZmUgbW9tZW50cyB0byBjcmVhdGUgYnV6egpMb29rIHVwIHlvdXIgdG93biBhdHRyYWN0aW9ucyBvbmxpbmUsIG9yIGFzayBmb3IgdHJhdmVsIGJyb2NodXJlcyBmcm9tIHlvdXIgbG9jYWwgdG91cmlzdCBpbmZvcm1hdGlvbiBjZW50ZXIuIApPdmVydmlldyBmb3IgcGFudHNmYWN0b3J5ClNvbWUgcGVvcGxlIGNhbGxlZCBvdXQgcmVxdWVzdHMgYW5kIERlbWF1cm8gbWFuYWdlZCB0byBmdWxmaWxsIHRoZW0uIApKLiBKLicgU3BlbmNlIGFuZCB0aHJlZSBCZWF0cmljZSBSaWxleSBhbmQgR2VvcmdlIFJpbGV5LCBuZWFyIEdSRUVOU1RPTkUgYW5kIE1ycy4gCktlcHV0dXNhbiBpdHUuLiAKVGhlIGNvbXBhbnkgY3VycmVudGx5IGVtcGxveXMgYWJvdXQgMTAsMDAwIHBlb3BsZSBpbiB0aGUgVW5pdGVkIEtpbmdkb20sIG1vcmUgdGhhbiB0aGUgOCw1MDAgb3Igc28gc3RhdGlvbmVkIGluIENhbmFkYS4gSG93ZXZlciwgdGhlIGFkdmFudGFnZXMgb2YgbW92aW5nIGFicm9hZCBhcmUgdW5jbGVhci4KSXQgaGFyZCBub3QgdG8gZmVlbCBsb25lbHkgd2hlbiB5b3Ugc3R1ZHlpbmcgZm9yIGEgbWVkaWNhbCBzY2hvb2wgY291cnNlIGFuZCB5b3Ugc2VlIHlvdXIgb2xkIGJlc3QgZnJpZW5kcyBvdXQgb24gYSB5YWNodCBpbiB0aGUgQ2FyaWJiZWFuIG9yIHNvbWUgc2hpdC4gClRoZSBSYWJiaXQgSG9sZSAgIGEgc2FsYWQgcGxhY2UuIFRoZXkgaGF2ZSBhIGNvdXBsZSBvZiBiYXNlIHNhbGFkcywgYW5kIHlvdSBjYW4gYWRkIGluIGV4dHJhIHBvcnRpb25zIG9mIHRoaW5ncy4gVGhleSBhbHNvIGhhdmUgRW5nbGlzaCB3cml0dGVuIGluIHRoZSBsaXN0aW5nLiAKKEZ1bGwgQW5zd2VyKS4gCkluIEdlcm1hbnkgeW91IGhhdmUgdG8gb2JleSB0aGUgdHJhZmZpYyBsaWdodHMsIGl0IGRvZXNuIG1hdHRlciBpZiB0aGVyZSBpcyBubyBvdGhlciB2ZWhpY2xlIGluIHNpZ2h0LCB5b3Ugd2FpdCB1bnRpbCB0aGUgbGlnaHQgdHVybnMgZ3JlZW4uIFRoZXJlIGFyZSBzb21lIGludGVyc2VjdGlvbnMgd2hlcmUgeW91IGFyZSBhbGxvd2VkIHRvIG1ha2UgYSByaWdodCB0dXJuIGV2ZW4gaWYgdGhlIGxpZ2h0IGlzIHJlZCAoYWZ0ZXIgY29taW5nIHRvIGEgY29tcGxldGUgc3RvcCBmaXJzdCBhbmQgbWFraW5nIHN1cmUgdGhlcmUgaXMgbm8gdHJhZmZpYywgZXRjLiksIHRob3NlIGhhdmUgZGlzdGluY3QgYSBzaWduIG5leHQgdG8gdGhlIHJlZCBsaWdodC4gCkJyZWFrIEhlYXIgSW4gVGVsZXBob25lIFdhZ2UgVGFsa3MgV0FTSElOR1RPTiwgQXByLiAxNCAoTW9uZGF5KSBXYWdlIGNvbiAgdHJhY3QgdGFsa3MgYmV0d2VlbiB0aGUgQ0lPIENvbW11bmljYXRpb24gV29ya2VycyBVbmlvbiBhbmQgdGhlIE9oaW8gQmVsbCBUZWxlcGhvbmUgU3lzdGVtIGNvbnRpbnVlZCBpbnRvIHRoZSBzbWFsbCBob3VycyBvZiB0aGUgbW9ybmluZyB0byAgZGF5IGFuZCBhIHVuaW9uIG9mZmljaWFsIGhlcmUgc2FpZCBhbiBhZ3JlZW1lbnQgYXBwZWFyZWQgbmVhci4gClRoZSBmdW5kYW1lbnRhbCB2YWx1ZSBvZiBhbiBvcmFuZ2UgaXMgJDEgKEFzc3VtcHRpb24gZm9yIHRoZSBleGFtcGxlKS4KSSBhZ3JlZSB3aXRoIC91L0x1bWlub3VzdHJhdmVsZXIuIFRoZSBvbmx5IHRoaW5nIEkgd291bGQgYWRkIHBlcmhhcHMgd291bGQgYmUgdG8gYWxzbyB0aGFuayBhbmQgaG9ub3IgdGhlIHdvbWVuL3BhcnRpY2lwYW50cyB3aXRoIHdob20geW91IGhhZCByZWxhdGlvbnMuIFNleCBpcyBhIHNpZ25pZmljYW50IGVuZXJneSBleGNoYW5nZSwgYW5kIHlvdXIgcmVsYXRpb25zIHdpdGggdGhlbSAoYW5kIHRoZWlyIHJlbGF0aW9ucyB3aXRoIHlvdSkgYWxsIHNlcnZlZCB0byBleHBhbmQgeW91ciBleHBlcmllbmNlcyBhcyB3ZWxsIGFzIHRoZWlycy4KSWYgc29tZW9uZSByYW4gb3V0IG9mIG1vbmV5IGFuZCBuZWVkcyBnYXMgbW9uZXkgdG8gZ2V0IHRvIHdvcmsgYW5kIHRoZSBvbmx5IHRoaW5nIHRoZXkgY2FuIHRoaW5rIG9mIGlzIHRvIG1ha2UgYSBzdGF0dXMgdXBkYXRlIG9uIEZhY2Vib29rIGFza2luZyBpZiBhbnlvbmUgY2FuIHNwYXJlIHRoZW0gc29tZSBtb25leSwgdGhleSBhcmVuIHJlYWxseSBiZWluZyBjaG9vc3kuIFRoZXkgZ290IHRoZSBiZWdnYXIgcGFydCBkb3duLCBidXQgdGhpcyBzdWIgaXMgbm90IC9yL2JlZ2dhcnMgc28gdGhhdCBwb3N0IHdvdWxkbiBmaXQuIElmIHRoYXQgc2FtZSBwZXJzb24gdHVybnMgZG93biBzb21lb25lIG9mZmVyaW5nIHRvIGdpdmUgdGhlbSBhIHJpZGUgdG8gd29yayBiZWNhdXNlIHRoZXkgZG9uIHdhbnQgdG8gYmUgc2VlbiBpbiBhIFBUIENydWlzZXIsIHRoZW4gdGhhdCBwb3N0IHdvdWxkIGZpdC4uIApKdXN0IHB1dCBTZWFyY2ggaW4gZm9yIHN1cHBvcnQgZG9jdW1lbnRzIG9uIHRoZSBzaXRlLiBBbnl0aGluZyBncmVhdGVyIHRoYW4gOCwgaXMgYW4gaW5kaWNhdG9yIHRoYXQgaXQgY2FuIGJlIGJyb2tlbiBkb3duIGludG8gbW9yZSBlYXNpbHkgZXN0aW1hdGFibGUgc3Rvcmllcy4gCkkgc2VlayBubyBzdGVlbmtlbiBiYXRjaGVzIGhlcmUsIG5vIHJlY29yZCBudW1iZXIgb2YgZW50cmllcywgbm8gcHJhaXNlIG9yIGRhbW5hdGlvbi4gTWVyZWx5IGVudGVydGFpbm1lbnQsIGluZm9ybWF0aW9uLCBmcmllbmRzLCBzb21lIChtb3N0bHkpIGludGVsbGlnZW50IGNvbnZlcnNhdGlvbnMsIGxvdHMgb2YgaHVtb3VyIGFuZCB0byBzaGFyZSB3aGF0IGxpdHRsZSBJIGhhdmUgdG8gb2ZmZXIuIFNpbmNlIHRoZW4gSSd2ZSBiZWVuIGEgc3RhZ2UgaGFuZCwgYW4gYXBwcmVudGljZSBjYW1lcmEgb3BlcmF0b3IsIGEgY2FtZXJhIG9wZXJhdG9yIChrbm93biBhcyBhICJDYW1lcmFtYW4iIGluIHRob3NlIHVuZW5saWdodGVuZWQgZGF5cyksIGEgdmlkZW9ncmFwaGVyIGFuZCBmaW5hbGx5IGEgRGlyZWN0b3Igb2YgUGhvdG9ncmFwaHkuIApPUCwgeW91IG1pZ2h0IGNvbnNpZGVyIGhhdmluZyB5b3VyIGF0dG9ybmV5IHNlbmQgaGVyIGEgY2Vhc2UgYW5kIGRlc2lzdCBsZXR0ZXIgZmlyc3QgYnV0IG1ha2UgaXQgcGxhaW4gdGhhdCBhZGRpdGlvbmFsIGxlZ2FsIHJlbWVkaWVzIHdpbGwgYmUgcHVyc3VlZCBpZiBuZWNlc3NhcnkuIApJIHN0YXJ0ZWQgZ2V0dGluZyBqYXcgcGFpbiB3aGVuIEkgdGFsa2luZyBhbmQgaXQgZ290IHdvcnNlIGFuZCB3b3JzZS4gCkZyaXNjaCBsYXN0IHdlZWsgICBhbmQgdXAgdW50aWwgTW9uZGF5J3Mgdm90ZSAgIGhhZCB0YWtlbiB0aGUgcG9zaXRpb24gdGhhdCBkZXZlbG9wZXJzIHN0YW5kIHRvIG1ha2UgYSBzaXphYmxlIHByb2ZpdCBhbmQgcXVlc3Rpb25lZCB3aGV0aGVyIGEgcHVibGljIHN1YnNpZHkgd2FzIG5lY2Vzc2FyeS4KRGFucyBsZSBtbWUgYnV0LiBFbiBncm9zIHF1b2kuIApTdHJlc3MgY2FuIGNhdXNlIHlvdXIgaGFpciB0byBmYWxsIGF0IGEgcmFwaWQgcGFjZS4gTGVhcm4gdG8gcmVsYXggYW5kIHJlbW92ZSBvciBhdm9pZCB0aGUgY2F1c2VzIG9mIHN0cmVzcyBpbiB5b3VyIGxpZmUuIE9uY2UgeW91IHN0YXJ0IHRvIGJlIGNhbG1lciB5b3Ugd2lsbCBzb29uIGZpbmQgdGhhdCB5b3VyIGhhaXIgZmFsbCB3aWxsIGdvIGJhY2sgdG8gbm9ybWFsLiBHZXQgZW5vdWdoIHJlc3QgYXMgdGhpcyBjYW4gaGVscCByZW1vdmUgeW91ciBzdHJlc3MuIEVub3VnaCBzbGVlcCBpcyBhbHNvIGltcG9ydGFudCB0byBwcmV2ZW50IGhhaXIgbG9zcy4gTGFjayBvZiBzbGVlcCwgY29tYmluZWQgd2l0aCBzdHJlc3MgY2FuIG1ha2UgeW91IGxvc2UgbW9yZSBoYWlyIHRoYW4gdXN1YWwuCldoZW4gSSB3YXMgb25seSAxNywgcGxheWluZyBwb2tlciBpbiBzY2hvb2wgbHVuY2h0aW1lcyB1c2luZyBTa2l0dGxlcyBhcyBjdXJyZW5jeSwgQ2FzaW5vIFJveWFsZSBoaXQgdGhlIGNpbmVtYXMuIE15IHNtYWxsLCBwb2tlciBvYnNlc3NlZCBncm91cCBvZiBmcmllbmRzIGdpZ2dsZWQgd2l0aCBnbGVlIHRoYXQgb3VyIG5pY2hlIGhvYmJ5IHdhcyBiZWluZyByZXByZXNlbnRlZCBpbiB0aGUgbWVkaWEsIGluIGEgQm9uZCBtb3ZpZSBubyBsZXNzLiBGYXN0IGZvcndhcmQgdG8gMTIgeWVhcnMgbGF0ZXI7IEknbSBub3cgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyLCBidXQgSSBmZWx0IHRoZSBzYW1lIGV4Y2l0ZW1lbnQgYWJvdXQgY2F0Y2hpbmdNb2xseSdzIEdhbWUsIGJhc2VkIG9uIHRoZSBtZW1vaXJzIG9mIGFuIE9seW1waWMgc2tpZXIgd2hvIGVuZGVkIHVwIHJ1bm5pbmcgYSBoaWdoIHN0YWtlcyBjZWxlYnJpdHkgcG9rZXIgcmluZy4uIApBZnRlciBJIHR1cm5lZCBmaWZ0ZWVuLCBJIGZpbmFsbHkgZ2F2ZSBpbiBhbmQgYWNrbm93bGVkZ2VkIEkgaGFkIGZlZWxpbmdzIGZvciBhIGZlbWFsZSBmcmllbmQsIGJ1dCBJIGRpZG4ga25vdyB3aHkgdGhhdCBtYWRlIG1lIHVuY29tZm9ydGFibGUuIE9uY2UgSSBoYWQgdGhhdCBzcGVjaWZpYyB0aG91Z2h0LCBpdCBmaW5hbGx5IGFsbCBjbGlja2VkIChJIGRpZG4gd2FudCB0byBiZSBhIGhldGVyb3NleHVhbCBtYWxlIG1haW5seSBiZWNhdXNlIG9mIHRoZSBwYXJ0LCBjYWxsaW5nIG15c2VsZiBhIGdheSBtYW4gYWxsb3dlZCBtZSB0byBmZWVsIG1vcmUgZmVtaW5pbmUpLCBhbmQgaXQgd2FzICJvaCBzaGl0IEkgdHJhbnMgYW5kIGFsc28gZ2F5Ii4gCkxvb2tpbmcgYXQgbG93IHBvc3NpYmlsaXRpZXMsIG1vc3QgcGxheWVycyB3aWxsIHBsYXkgYW55IGhhbmQgY29udGFpbmluZyBhbiBBIGFuZCBhIDIuIApFcyBQb2tlciBUb3VybmFtZW50IGJlaSBCb3lsZXBva2VyCkFBUk9OIEJST1dOIGlzIGFuIGV4ZWN1dGl2ZSBkaXJlY3RvciBhdCB0aGUgaW52ZXN0bWVudCBiYW5rIE1vcmdhbiBTdGFubGV5LiAKQ2hvb3NpbmcgdGhlIHJpZ2h0IGtpbmQgb2YgYXV0b21hdGljIGNhcmQgc2h1ZmZsZXIgZm9yIHlvdSBkZXBlbmRzIG9uIGhvdyBvZnRlbiB5b3UgcGxhbiBvbiB1c2luZyBpdCBhbmQgZm9yIHdoYXQgcHVycG9zZS4gV2hpbGUgYmF0dGVyeSBvcGVyYXRlZCBjYXJkIHNodWZmbGVycyBhcmUgZ3JlYXQgZm9yIHRoZSBvY2Nhc2lvbmFsIGdhbWUgb3IgZXZlbiBvbmNlIGEgd2VlaywgaWYgeW91IHBsYXkgZnJlcXVlbnRseSB0aGVuIG9uZSB0aGF0IGhhcyBhbiBBL0MgY29ubmVjdGlvbiBtaWdodCBiZSBhIGZhciBiZXR0ZXIgY2hvaWNlLi4gCkl0IG5vdCB0aGF0IGJhZCBvZiBhbiBpZGVhLiBJbiBmYWN0LCB0aGVyZSBpcyBhbHJlYWR5IGFuIGltcGxlbWVudGF0aW9uIG9mIHRoaXMgaWRlYSAgIEZyZWVuZXQuIEl0IGEgZGF0YSBzdG9yYWdlIHByb2dyYW0gdGhhdCBlbmNyeXB0cyBhbGwgZGF0YSBhbmQgc3RvcmVzIHNuaXBwZXRzIG9mIGl0IG9uIGEgcmFuZG9tIHNlbGVjdGlvbiBvZiBjb21wdXRlcnMgdGhhdCBhcmUgYWxzbyBydW5uaW5nIHRoZSBwcm9ncmFtLiBTaW5jZSB0aGUgZGF0YSBpcyBlbmNyeXB0ZWQgYW5kIGRpc3RyaWJ1dGVkIG92ZXIgbWFueSBkaWZmZXJlbnQgY29tcHV0ZXJzLCBhbnl0aGluZyBzdG9yZWQgb24gRnJlZW5ldCBpcyBuZWFybHkgaW1wb3NzaWJsZSBmb3IgdGhlIGdvdmVybm1lbnQgb3IgYW55b25lIGVsc2UgdG8gdGFrZSBkb3duLiBGaWxlcyBzdG9yZWQgb24gRnJlZW5ldCBhcmUgc3RvcmVkIHBlcm1hbmVudGx5IGFzIHRoZXJlIGlzIG5vIHdheSB0byBkZWxldGUgZGF0YS4KWW91IGdvdCB0cmFpbmluZyBhcmNzLCBhIHRvdXJuYW1lbnQsIHRoZXJlIGV2ZW4gZGV2ZWxvcG1lbnQgZm9yIHVwd2FyZHMgb2YgdGhyZWUgY2hhcmFjdGVycy4uIApJZiBoZSBjYW4gZmluZCB0aW1lIHRvIHBsYXkgY3JpY2tldCBtYXRjaGVzIGhlIGJldHRlciBoYXZlIHRpbWUgZm9yIGhpcyBwcmltYXJ5IGR1dHkgb2YgYnJpZWZpbmcgcGFybGlhbWVudC4gQW5kIHRoZSBzdGF0ZW1lbnQgdGhhdCBoZSBnYXZlIGF0IHRoZSBjcmlja2V0IGdyb3VuZCBoYWQgdXMgZXZlbiBtb3JlIGNvbmZ1c2VkLiBPbiB0aGUgb25lIGhhbmQsIG91ciBqZXQgZmlnaHRlcnMgYXJlIHBvdW5kaW5nIHRoZSBUYWxpYmFuIHRhcmdldHMsIG9uIHRoZSBvdGhlciBvdXIgaW50ZXJpb3IgbWluaXN0ZXIgaXMgaW52aXRpbmcgdGhlIFRhbGliYW4gZm9yIGEgY3JpY2tldCBtYXRjaC4gCk1lZGljYXRpb24uIFRoZXJlIGFyZSBhIG51bWJlciBvZiBvdmVyIHRoZSBjb3VudGVyIGRydWdzIHRoYXQgeW91IGNhbiB1c2UgdG8gYWxsZXZpYXRlIHN3ZWxsaW5nLCBpbmNsdWRpbmcgaWJ1cHJvZmVuLiAKQmFja2luZyBieSB0aGUgZW50aXJlIEdEUCBhbmQgZGVidCBvZiBhIGNvdW50cnkuIEkgY2FuIGdvIHRvIHRoYXQgY291bnRyeSBhbmQgcGh5c2ljYWxseSBleGNoYW5nZSBpdCBmb3IgYW5vdGhlciBjdXJyZW5jeSBmcm9tIGFub3RoZXIgbmF0aW9uIGJlY2F1c2UgdGhleSBhcmUgcmVjb2duaXplZC4gT2sgeW91ciByaWdodCwgdGhlIGRhcmsgbmV0IGV4aXN0cyBhbmQgb3RoZXIgZnJpbmdlIHRoaW5ncywgYnV0IHdpdGggbXkgZG9sbGFyIHRoYXQgbXkgYm9zcyBwYXlzIG1lIGluIHRoYXQgaXMgcmVjb2duaXplZCBieSA5OCUgb2YgdGhlIHdvcmxkcyBwb3B1bGF0aW9uLCBJIGJvdWdodCBhIGhvdXNlLCBhIGNhciwgYW5kIGEgd2F0ZXIgYm90dGxlIHdpdGggZWFzZSBhbmQgYmUgYWJsZSB0byBzZWxsIGl0IGJhY2sgYWdhaW4gYXQgYSBwcm9maXQgYW5kIHRyYW5zZmVyIGl0IHRvIHRoZSBldXJvLiBUaGluZ3MgeW91IGNhbm5vdCBkbyB3aXRoIGNyeXB0by4KSHVkZGVyc2ZpZWxkIFRvd24ncyBFbGlhcyBLYWNodW5nYSBzbGlkZXMgaW4gdG8gdHJ5IGFuZCBkaXNwb3NzZXNzIEV2ZXJ0b24ncyBTZWFtdXMgQ29sZW1hbiBjbG9zZSB0byB0aGUgc2lkZWxpbmUKU28geWVzLCBpZiB5b3Ugd2FudCB0byBzbGljZSBhbmQgZGljZSBhIHBhcnRpY3VsYXIgdHlwZSBvZiBhbWVuZG1lbnQgb3ZlciBhIGxpbWl0ZWQgdGltZSBmcmFtZSwgeW91IGNhbiBnaXZlIEJlcm5pZSBhbnkgYXdhcmQgeW91IHdhbnQuIEkgbm90IGdvaW5nIHRvIHNheSBoZSB3YXMgaW5lZmZlY3RpdmUsIGJ1dCBwZW9wbGUgc2hvdWxkIHByb2JhYmx5IHN0b3AgdXNpbmcgdGhpcyBzcGVjaWZpYyBleGFtcGxlLiBCZWNhdXNlIHRoZSBjb3VudGVyIGV4YW1wbGUgaXMgaG93IG1hbnkgQmlsbHMgZGlkIGhlIGFjdHVhbGx5IHBhc3M/LiAKSSByZWFkIGEgYml0IGFuZCBzZWVuIG9uZSBtb3ZpZSBub3cgYnV0IGl0cyBqdXN0IG5vdCB0aGF0IGdyZWF0IHRvIG1lLCBwcm9iYWJseSB3b3VsZCBsaWtlZCBpdCBhcyBhIGtpZCBidXQgaSBub3QgY29ubmVjdGluZyB3aXRoIGl0IHdlbGwgYXMgYW4gYWR1bHQuIFNvbWUgdGhpbmdzIGFyZSBiZXR0ZXIgcmlnaHQgYXdheSBub3QgbGF0ZXIuIApNdWNoIG9mIHRoZSBzcGVjdWxhdGlvbiBoYXMgY2VudHJlZCBvbiBGbG9yaWRhIGFuZCBUb3JvbnRvLCBidXQgTHVvbmdvIHdhcyBhc2tlZCBhYm91dCBhIHBvc3NpYmxlIG1vdmUgdG8gdGhlIENoaWNhZ28gQmxhY2toYXdrcy4uIApOb3cgd2hhdCBkb2VzIHRoZSB2YWx1ZSAxMCBtZWFuPyBEb2VzIGl0IG1lYW4gYW1vdW50IG9mIHRpbWUgKGhycyBvciBkYXlzKSBhIHRlYW0gc2hvdWxkIHNwZW5kPyBBbmQgd2hhdCBhcmUgc3RvcnkgcG9pbnRzPyBTdXBwb3NlIHRoaXMgaXMgdGhlIGZpcnN0IHNwcmludDsgaG93IHdpbGwgeW91IGVzdGltYXRlIHRoZSBudW1iZXIgb2Ygc3ByaW50cyB3aGVuIHlvdSBkb24ndCBoYXZlIHRoZSBsYXN0IHNwcmludCdzIHZlbG9jaXR5PwpEaWRuIGFjdHVhbGx5IGZpbmQgdGhlIGJvZHksIGJ1dCB3aWxsIG5ldmVyIGZvcmdldCB0aGUgc2hvY2sgYW5kIGhvcnJvci4gSSB3YXMgc3RheWluZyBhIGNvdXBsZSBvZiB3ZWVrcyB3aXRoIGEgZnJpZW5kIG9uIEdyYW4gQ2FuYXJpYSwgb25lIG9mIHRoZSBDYW5hcnkgSXNsYW5kcy4gV2VudCB0byBiZWQgb25lIGV2ZW5pbmcgYXJvdW5kIDExcG0gaG9waW5nIHRvIGdldCBhbiBlYXJseSBzdGFydCB0byBhIGRheSBvZiB0b3VyaW5nIGFyb3VuZCBpbiBhIHJlbnRhbCBjYXIuIApUaGUgZmlzaGJvd2wgZ2lybHMgd2VyZSBhbGwgMiwwMDAgYmFodCBhcGllY2UsIHdoaWxlIHRoZXJlIHdlcmUgYSBjb3VwbGUgb2Ygc2lkZWxpbmVycyBhdmFpbGFibGUgZm9yIDIsMzAwLiBUaGUgbWFtYXNhbiBzYWlkIHRoZXJlIHdlcmUgdXBzdGFpcnMgZm9yIDMsMDAwIDMsMzAwIGJ1dCB0aGUgc2VsZWN0aW9uIGRvd25zdGFpcnMgd2FzIGdvb2QgZW5vdWdoLCBhbmQgYSBkZWNlbnQgcHJpY2UuIApUaGVyZSBhcmUgY2VydmljYWwsIHRob3JhY2ljLCBhbmQgbHVtYmFyIGN1cnZlcyBkZXNpZ25lZCB3aXRoIHByZWNpc2UgYW5nbGVzIGZvciBvcHRpbXVtIGZ1bmN0aW9uLgpUaGV5IHJlbW92ZWQgd2F2ZSBkYXNoLCBsIGNhbmNlbHMsIGFuZCBzbG93ZWQgdGhlIHBhY2Ugb2YgdGhlIGdhbWUsIGJ1dCB0aGUgbW9zdCBpbmZhbW91cyBjaGFuZ2UgaXMgdGhhdCBldmVyeSB0aW1lIHlvdSBjaGFuZ2UgZGlyZWN0aW9ucyBpbiB0aGUgZ2FtZSB0aGVyZSdzIGEgcmFuZG9tIGNoYW5jZSB5b3Ugd2lsbCB0cmlwIGFuZCBmYWxsLiBCeSBmYXIgdGhlIHdvcnN0IG1lY2hhbmljIG9mIGFueSBzbWFzaCBnYW1lLi4gCkNoYXNpbmcgbG9zc2VzIG9yIGdhbWJsaW5nIHRvIGdldCBvdXQgb2YgZmluYW5jaWFsIHRyb3VibGUKQW55d2F5IHRoZSBzdHJlZXRzIGNvbWUgdG8gYSBzbWFsbCBwYXJrIHdoZXJlIHRoZSBFdXJvIHNpZ24gc3RpbGwgaXMgYW5kIHRoZSBFQ0IgdXNlZCB0byBiZS4gWW91IGNhbiB3YWxrIHVwIGZyb20gaGVyZSB0byB0aGUgQWx0ZSBPcGVyIChPbGQgT3BlcmEgSG91c2UpIHdoZXJlIHRoZXJlIGlzIGEgZm91bnRhaW4gYW5kIHBlZGVzdHJpYW4gYXJlYSBpbiBmcm9udCBvZiBpdC4gClRob3VnaCBpbmNvbWUgaXMgbm90IGVxdWFsbHkgZGlzdHJpYnV0ZWQgaW4gIGl0IGNhbiBiZSBzYWlkIHRvIGJlIGFuIGVjb25vbWljYWxseSBwcm9zcGVyb3VzIGFuZCByZWxhdGl2ZWx5IHNhZmUgY291bnRyeS4uIApHcm91bmQgY2FuIGJlIGRlZmluZWQgYXMgYSBwb2ludCB3aGVyZWluIHRoZSBOb3JtYWwgRm9yY2UgTiBpcyBlcXVpdmFsZW50IHRvIHRoZSBHcmF2aXRhdGlvbmFsIGZvcmNlIG1nIGFjdGluZyB1cG9uIE9iaSBXYW47IHRoaXMgaXMgd2h5IHRoZSBIaWdoIEdyb3VuZCBUaGVvcmVtIGRvZXMgbm90IGFwcGx5IHRvIHZhY3V1bSBvciBhcXVhdGljIHNjZW5hcmlvcy4gV2h5IGRvIHlvdSB0aGluayBHZW5lcmFsIEtlbm9iaSB3YXMgYWJzZW50IGZyb20gdGhlIHN0cmF0ZWdpY2FsbHkgaW1wb3J0YW50IEJhdHRsZSBvZiBNb24gQ2FsYW1hcmksIHdoaWxlIGJlaW5nIGF3YXJlIG9mIGl0IGFuZCBpbiBhIHBvc2l0aW9uIHRvIHJlaW5mb3JjZSB0aGUgNTAxc3Q/CkFwcGxpY2F0aW9ucyBvZiBObyBMaW1pdCBIb2xkIGJ5IE1hdHRoZXcgSmFuZGEgaXMgdGhlIGJpYmxlIGFzIGZhciBhcyBHVE8gcGxheSBpcyBjb25jZXJuZWQuCkR1bW1idWxsZW5KdXN0IGFub3RoZXIgcG9rZXIgcGxheWVyCkFmdGVyIGVpZ2h0IGhvdXJzIG9yIHNvIGl0J2xsIG5lZWQgdG8gYmUgZW1wdGllZC4gCktZLiBJJ20gY3VycmVudGx5IHNwZW5kaW5nICQxMjAgMTQwL3dlZWsgZm9yIDIgcGVvcGxlIChpbmNsdWRpbmcgdmFyaW91cyBob3VzZWhvbGQgbmVlZHMgbGlrZSB0b290aHBhc3RlIG9yIGNhdCBmb29kKS4gV2UgZWF0IG1vc3RseSBwYWxlbyAobWVhdCwgZnJ1aXQsIGFuZCB2ZWdldGFibGVzLCBuby9saXR0bGUgZ3JhaW4gYW5kIG5vIGRhaXJ5KSBhbmQgZWF0IG91dCBwcm9iYWJseSAyeC93ZWVrLiAKVGhlIFVTIGludGVydmVudGlvbiB3YXMgZnVuZGFtZW50YWxseSB3cm9uZyBhbmQgaW1tb3JhbCwgYXMgcGVyIDcyIG9mIEFtZXJpY2FucyBzdXJ2ZXllZCBpbiAxOTc1LiBUaGV5IGhhZCBubyByaWdodCB0byBkZWNpZGUgd2hhdCBhbm90aGVyIGNvdW50cnkgd2FudHMsIHdoaWNoIHdhcyBuYXRpb25hbCB1bmlmaWNhdGlvbi4gSXQgd2FzIGVudGlyZWx5IHdyb25nLCBubyB3YXkgdG8gc2tpcnQgYXJvdW5kIHRoaXMuIEFtZXJpY2FuIGludGVydmVudGlvbiBkZXN0cm95ZWQgU291dGggVmlldG5hbSB0aGUgY291bnRyeSB0aGV5IHdlcmUgc3VwcG9zZWRseSBzdXBwb3NlIHRvIHByb3RlY3QuCkkgZGF0aSBwZXJzb25hbGkgcG90cmFubm8gZXNzZXJlIHV0aWxpenphdGkgYW5jaGUgaW4gYWx0cmUgb3BlcmF6aW9uaSBkaSB0cmF0dGFtZW50bywgY29tdW5xdWUsIGluIHRlcm1pbmkgY29tcGF0aWJpbGkgY29uIHRhbGkgZmluYWxpdC4KSXQgbm90IG1vbmV5LCBmYW1lLCBldGMuIApSc3VsdGF0IDogZGVzIGFybWVzIGZvcnQgZGlmZnJlbnRzLiAKTG92ZSBpcyBsb3ZlLiAKWW91IHNob3VsZCByZWZlciB0byB0aGVzZSBzZWN0aW9ucyBvZnRlbiBhbmQgZXZlbnR1YWxseSBtZW1vcml6ZSB0aGVtIGFzIHlvdSBnYWluIGV4cGVyaWVuY2UuIApZb3UnbGwgYWxzbyBsZWFybiB3aGljaCBpbmVmZmVjdGl2ZSBzdHJhdGVnaWVzIHRvIGF2b2lkLCBzbyB5b3UgY2FuIHN0YXJ0IHRoaW5raW5nIGxpa2UgYSByZWFsIHBva2VyIHBsYXllciB3aG8gZG9lc24ndCBnZXQgc2lkZXdheXMgZ2xhbmNlcyBmcm9tIHNlY3VyaXR5IGd1YXJkcyBhdCBjYXNpbm9zLi4gClRvZ2V0aGVyIHdlIGZvdWdodCwgd29ya2luZyBvdXQgd2F5IHRocm91Z2ggbWFueSBhZHZlbnR1cmVzLCB1bnRpbCB3ZSBoYWQgdG9wcGxlZCB0aGUgVHlyYW50IEtpbmcgaGltc2VsZiwgYW5kIHNldCB0aGUgd2hvbGUgRW1waXJlIGZyZWUuIE9yIGF0IGxlYXN0IHNvIHdlIGhhZCB0aG91Z2h0LiAKIkdsYXNzZXMiIHdvdWxkIHJlZmVyIHRvIGJvdGggb2YgdGhlIGxlbnNlcywgYW5kIGEgInBhaXIgb2YgZ2xhc3NlcyIgZG9lc24ndCBtZW50aW9uIGFueXRoaW5nIGFib3V0IHRoZSBmcmFtZSwgYnV0IGl0IG1lbnRpb25zIHRoZSB0d28gbGVuc2VzLiBXaGVuIHlvdSBzYXkgImEgcGFpciBvZiBnbGFzc2VzIiwgeW91IGFyZSByZWZlcnJpbmcgdG8gdGhlICJwYWlyIG9mIGxlbnNlcyIsIG5vdCB0aGUgZnJhbWUuIApBbnkgdXNlciB3aG8gd2FudHMgdG8gc2VsZiBwcm9tb3RlIG11c3QgaGF2ZSBhIHJlYXNvbmFibGUgcG9zdCBhbmQgY29tbWVudCBoaXN0b3J5IGluIHRoaXMgc3VicmVkZGl0IHRoYXQgaXMgbm90IHJlbGF0ZWQgdG8gd2hhdGV2ZXIgdGhlIHVzZXIgaXMgdHJ5aW5nIHRvIHByb21vdGUuIApOZWVkbGVzcyB0byBzYXksIGNyb3NzaW5nIHRoZSBDYW5hZGlhbiBib3JkZXIgaGFzIGFsd2F5cyBiZWVuIG11Y2ggZWFzaWVyIHRoYW4gY3Jvc3NpbmcgaW50byBNZXhpY28uIFRoZXJlIGlzIGZhciBsZXNzIHNlY3VyaXR5LCBmYXIgZmV3ZXIgYXJtZWQgYm9yZGVyIGd1YXJkcy4gVGhlIHJlYXNvbnMsIG5vIGRvdWJ0LCBhcmUgY29tcGxpY2F0ZWQsIGJ1dCBzdXJlbHkgdGhlIGZhY3QgdGhhdCB0aGUgQ2FuYWRpYW4gYm9yZGVyIGlzIGFib3V0IHRocmVlIHRpbWVzIGxvbmdlciB0aGFuIHRoZSBNZXhpY2FuIG9uZSwgYXMgd2VsbCBhcyB0aGUgZWNvbm9taWMgc3RhYmlsaXR5IG9mIENhbmFkYSwgYW5kIHRoZSB3aGl0ZW5lc3Mgb2YgaXRzIHBvcHVsYXRpb24gaGF2ZSBhbGwgcGxheWVkIHNvbWUgcm9sZSBpbiBjcmVhdGluZyBhIHJlbGF0aXZlbHkgcG9yb3VzIGJvcmRlci4gCkhlIGhhZCBoaWdoIGFzcGlyYXRpb25zLiBBbGkgZW1ib2RpZWQgYSBwcmluY2lwbGUuIApBIHBva2VyIGNyYXplIGlzIHN3ZWVwaW5nIHRoZSBuYXRpb24sIGFuZCBBcmthbnNhcyBpcyBubyBleGNlcHRpb24sIGJ1dCBzb21lIGF0dGVtcHRzIHRvIG9yZ2FuaXplIGZvcm1hbCBsZWFndWVzIHRvIHBsYXkgdGhlIGdhbWUgaGVyZSBhcmUgcnVubmluZyBhZm91bCBvZiB0aGUgbGF3LgpJIGZlbHQgbGV0IGRvd24uIApUaGUgbG9vayB0aGF0IE1pbGVzIHJldHVybnMgdG8gdGhlIG1hbiBpcyBwbGVhc2FudCBidXQgc2VyaW91cy4gCkRlIGZ5c2lvdGhlcmFwZXV0IG5lZW10IGJlc2x1aXRlbiBtZXQgYmV0cmVra2luZyB0b3QgaGV0IGdlYnJ1aWsgb2YgZGUgaW56ZXQgdmFuIG1pZGRlbGVuIGVuIG1lZGV3ZXJrZXJzLCBoZXQgc3RlbGxlbiB2YW4gZG9lbGVuIGVuIHByaW9yaXRlaXRlbiBlbiBoZXQgbWFrZW4gdmFuIGJlbGVpZC4gSGlqIG9yZ2FuaXNlZXJ0IHppam4gZWlnZW4gd2Vyaywgd2FhcmJpaiBoaWogYmFsYW5zIGhvdWR0IHR1c3NlbiBoZXQgYmVyb2Vwc21hdGlnIGhhbmRlbGVuIGVuIGRlIGJlaG9lZnRlIGFhbiB2ZXJkZXJlIG9udHdpa2tlbGluZyB2YW4gemljaHplbGYgZW4gaW5kaWVuIHJlbGV2YW50LCBkZSB6b3Jnb3JnYW5pc2F0aWUgd2FhcmluIGhpaiB3ZXJrdC4uIApKZXNzIGlzIG1hcnJpZWQgdG8gTWF0dCBCdWhsZXIsIGFuZCB0aGV5IGhhdmVmb3VyIGNoaWxkcmVuOiBFdmlhLCBBbGx5LCBIZW5yeSBhbmQgUmVubGVlLiAKSXQgaXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCB0byBmb2xsb3cgYWxsIHRoZSBuZXcgc2l0ZXMgdGhhdCBzZWxsIGJ1dCBJIGFzc3VyZSB5b3UgdGhlIG9sZGVyIGFuZCBtb3JlIGV4cGVyaWVuY2VkIHNpdGVzIHdpbGwgbW9zdCBsaWtlbHkgZG8geW91IHdlbGwgZm9yIGEgY29tcGV0aXRpdmUgcHJpY2UuIFNjcm9sbCB0aHJvdWdoIHRoZSBzdHJpcCBhbmQgeW91IHdpbGwgc2VlIHdoZXJlIHlvdSBhcmUuIENsaWNrIG9uIFNlZSBBbGwgYW5kIGl0IHdpbGwgbGlzdCB0aGVtIGluZGl2aWR1YWxseSBhbmQgZ2l2ZSB5b3UgdGhlIG9wdGlvbiB0byByZW1vdmUhIE1ha2Ugc3VyZSB5b3UgaGl0IHNhdmUgY2hhbmdlcyBhbmQgdGhleSB3aWxsIGJlIGdvbmUuIApJIHVzZSBEZWx1Z2UgdG8gZ2V0IHRvcnJlbnQgY29udGVudC4gQmVmb3JlIHRoYXQgSSB1c2VkIFRyYW5zbWlzc2lvbi4gQW55d2F5cywgdGhlIHBvaW50IGlzIGJvdGggVFYgc2hvd3MgYW5kIE1vdmllcyBnbyBpbnRvIGEgc2luZ2xlIGZvbGRlci4gQ3VycmVudGx5IEkgdXNlIFBsZXggdG8gaGFuZGxlIGl0IGJlYXV0aWZ1bGx5LCBidXQgSSB3b3VsZCByYXRoZXIgc3dpdGNoIHRvIEVtYnkgdGhlIGRheSBpdCBzdGFydHMgdG8gZG8gdGhlIHNhbWUuCkkgZ3Vlc3MgaXQganVzdCBtYWtlcyBtZSBjcmluZ2UgYmVjYXVzZSBpdCdzIGFzIHRob3VnaCBpdCB0dXJucyBpbnRvIGhpcyByYWNlL2NpdGl6ZW5zaGlwIHN0YXR1cyByYXRoZXIgdGhhbiBzb2xlbHkgb24gdGhlIGNyaW1lLiBGb3IgZXhhbXBsZSwgdGhlcmUgYXJlIGEgbG90IG1vcmUgY2FzZXMgc3VjaCBhcyBHU0sgb3IgQ2hyaXMgV2F0dHMgdGhhdCB3b24ndCBnZXQgcG9saXRpY2l6ZWQgYXMgYW50aSBpbW1pZ3JhbnQgcmhldG9yaWMuCkkgcmVhbGx5IGRvbiB0aGluayB0aGV5IHdhbnQgdG8gaHVydCB0aGUga2lkcywgSSBqdXN0IHRoaW5rIHRoZXkgaWdub3JhbnQgb24gdGhlIHBvdGVudGlhbCBkYW5nZXJzIG9mIHdoYXQgY291bGQgaGFwcGVuLiAKTG8geW9nYSBzY2lhbWFuaWNvIHRpIGluc2VnbmEgY2hlIG5vbiBlc2lzdG9ubyBkaXN0YW56ZSwgc29sbyBwcm9mb25kaXQsIGUgYSBxdWVzdGUgcHJvZm9uZGl0IHRpIGZhIGFjY2VkZXJlIGxhc2NpYW5kbyBjaGUgbGEgdHVhIGNvc2NpZW56YSBwaSBjaGUgaWxsdW1pbmFyc2kgKGluIHF1YW50byBnaSBsbyAsIGRldmUgc29sbyByaWNvcmRhcnNlbG8pLCBzYm9jY2kgY29tZSB1biBmaW9yZS4gClNoZSBkb25lIGEgZmV3IHRoaW5ncyAoQXF1YW1hcmluZSksIGlzIHRoZSBuaWVjZSBvZiBKdWxpYSBSb2JlcnRzLCBhbmQgdGhpcyBzdW1tZXIgc2hlIHN0YXJzIGFzIE5hbmN5IERyZXcuIApXZW5kaSBhbmQgSSB3ZXJlIG5pY2UgYW5kIGhlbGQgdW1icmVsbGFzIG92ZXIgdGhlbSB3aGlsZSB0aGV5IGNoYW5nZWQgdGhlIHRpcmUgKHdlbGwsIG9rLCB3ZSBoYWQganVzdCBhY2NlcHRlZCBhIGZlYXN0IGZyb20gdGhlbSBzbyBJIHN1cHBvc2UgaXQgd2FzIG1vcmUgbGlrZSBvdXIgZHV0eSEpLiAKV2l0aGRyYXdpbmcgaXMgcGVyZm9ybWVkIHdpdGggdGhlIHNhbWUgbWV0aG9kcyAoaWYgdGhleSBzdXBwb3J0IHdpdGhkcmF3YWwpIGFuZCB0aGUgdHJhbnNhY3Rpb24gcHJvY2Vzc2luZyBwZXJpb2QgY2FuIHRha2UgZnJvbSAyIDMgZGF5cyBmb3IgZSB3YWxsZXRzIHVwIHRvIDYgYnVzaW5lc3MgZGF5cyBmb3IgY3JlZGl0IGFuZCBkZWJpdCBjYXJkcy4uIApCZWNhdXNlIHNvbWUgb2YgdGhlc2UgcXVlc3Rpb25zIG1heSBjb25jZWl2YWJseSBpbXBsaWNhdGUgZXhlY3V0aXZlIHByaXZpbGVnZSwgSSBhbSBwcm92aWRpbmcgdGhlbSB0byB5b3UgaW4gYWR2YW5jZS4gCkkgYWdyZWUgaXQgd2FzIGEgdGVycmlibGUgY2FsbCwgYnV0IHBsYXllcnMgbmVlZCB0byBsZWFybiBub3QgdG8gbGVhdmUgdGhlIGdhbWUgaW4gdGhlIGhhbmRzIG9mIHRoZSBvZmZpY2lhbHMgbGlrZSB0aGF0LCB0aGV5IGFyZW4ndCBnb2luZyB0byBnZXQgdGhlIGNhbGwuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28uIApDYXJkIHRhdHRvb3MgYXJlIHZlcnkgcG9wdWxhciBhbW9uZyBwcm9mZXNzaW9uYWwgY2FyZCBwbGF5ZXJzIGFuZCBhbnlvbmUgd2hvIGVuam95cyBnYW1lcyBhbmQgZ2FtYmxpbmcuIFdpdGggYWxsIHRoZSBkaWZmZXJlbnQgdGhpbmdzIHlvdSBjYW4gZG8gd2l0aCB0aGVtLCBpdCBpcyBlYXN5IHRvIHNlZSB3aHkgdGhleSBhcmUgYSBwb3B1bGFyIHRhdHRvbyBjaG9pY2UuLiAKTWFzc2FnZSBUaGVyYXBpc3QgUHJhZ3VlCldhc2hpbmd0b24gdXAgbmV4dDogQWZ0ZXIgZ2V0dGluZyBzd2VwdCBpbiBTYW4gRGllZ28sIHRoZSBHaWFudHMgcmV0dXJuIHRvIFNhbiBGcmFuY2lzY28gZm9yIGEgZm91ciBnYW1lIHNlcmllcyB2ZXJzdXMgdGhlIE5hdGlvbmFscywgd2hvIGF0IDUxIDYwIGhhdmUgYSBiZXR0ZXIgcmVjb3JkIHRoYW4gdGhlIEdpYW50cyAoNDcgNjIpLiBTYWQhCkZvciBpbnN0YW5jZSwgdGhlIG1vcmUgcG9seWVzdGVyIGlzIGluIHRoZSBjbG90aCwgdGhlIG1vcmUgc2xlZWsgaXQgd2lsbCBmZWVsLCBhbmQgdGhlIG1vcmUgc3RhaW4gcmVzaXN0YW50IGl0IHdpbGwgYmUsIGJ1dCB5b3UgYWxzbyBuZWVkIHRvIHJlbWVtYmVyIHRoYXQgeW91IGFyZSBsb29raW5nIGF0IHNvbWV0aGluZyB0aGF0IG1pZ2h0IGZlZWwgYSBsaXR0bGUgbW9yZSBsaWtlIHBsYXN0aWMgdGhhbiB5b3UgbWlnaHQgcHJlZmVyLiBJZiB5b3UgbG92ZSB0aGUgb2xkIGZhc2hpb25lZCBmZWVsIG9mIHNvbWUgb2YgdGhlIHRyYWRpdGlvbmFsIGZlbHRzLCBtYWtlIHN1cmUgdGhhdCB5b3UgZ2V0IG9uZSB0aGF0IGhhcyBhIGhpZ2hlciB3b29sIGNvbnRlbnQuIFRha2Ugc29tZSB0aW1lIGFuZCBtYWtlIHN1cmUgdGhhdCB5b3UgdGhpbmsgYWJvdXQgd2hhdCB5b3VyIG9wdGlvbnMgYXJlIGdvaW5nIHRvIGJlIHdoZW4geW91IHdhbnQgdG8gcmVkbyBhIGZlbHQgdGFibGUuLiAKRmlyc3QgaG91c2Ugd2UgZ28gaW50byBSRUVLUyBvZiBtb2xkLiBJdCB3YXMgbmF1c2VhdGluZy4gV2Ugd2FsayBpbiBhbmQgc3RhbmQgZm9yIGxlc3MgdGhlbiAyMCBzZWNvbmRzIGJlZm9yZSB3YWxraW5nIGJhY2sgb3V0LgpJIGNhbiB3YWl0IGZvciB0aGUgZGF5IHdoZW4gd2UgY2FuIGdldCBhbGwgdGhlIGdpcmxzIGFuZCBvdXIga2lkcyB0b2dldGhlciBpbiB0aGUgc2FtZSByb29tIS4gCiJBcmthbnNhbnMgZGVzZXJ2ZSB0byBoYXZlIFRIRUlSIHZvdGUgY291bnQgb24gdGhpcyBpc3N1ZSBhbmQgdGhhdCdzIHdoeSB3ZSBhcmUgZGVkaWNhdGVkIHRvIGEgdm90ZXIgcmVnaXN0cmF0aW9uIGRyaXZlLiBCdXQgcmlnaHQgbm93LCBpdCBhcHBlYXJzIHRvIGJlIGEgYmxhdGFudGx5IHVuZmFpciBwcm9jZXNzIHRoYXQgaXMgaGFtcGVyZWQgYnkgdW5uZWNlc3NhcnkgcG9saXRpY2FsIGJ1cmVhdWNyYWN5LiBXZSBhcmUgcmVxdWlyZWQgdG8gcmVnaXN0ZXIgcGVvcGxlIGFuZCBkZWxpdmVyIHRoZWlyIHNpZ25hdHVyZSB0byB0aGUgQ291bnR5IENsZXJrIHRoYXQgc2FtZSBkYXkgZm9yIFRIRSBzaWduYXR1cmUgdG8gYmUgY291bnRlZCBhcyB2YWxpZC4gTm90IG9ubHkgaXMgdGhpcyB1bmZhaXIgdG8gdGhlIHBldGl0aW9uZXJzLCBpdCB3b3VsZCBzZWVtIHRvIHByZWp1ZGljZSBnZXR0aW5nIHBlb3BsZSBpbnZvbHZlZCBpbiB0aGUgcG9saXRpY2FsIHN5c3RlbS4gVGhvc2Ugc3RhbmRhcmRzIHNob3VsZCBhbGxvdyBwZW9wbGUgdGhlIGZhc3Rlc3Qgc2ltcGxlc3Qgd2F5IHRvIGJlY29tZSB2b3RlcnMuIEluIHNwaXRlIG9mIHRoZXNlIG9ic3RhY2xlcywgd2Ugd2lsbCBjb250aW51ZSB0byBkbyB3aGF0IHdlIG11c3QgaW4gb3JkZXIgdG8gbWVldCB0aGUgY3VycmVudCBzdGFuZGFyZHMgc2V0IGJ5IHRoZSBTZWNyZXRhcnkgb2YgU3RhdGUsIiBUb2RkIGNsb3NlZC4KQWx3YXlzIGhhdmUgdHdvIG9yIHRocmVlIGJvb2tzIG9uIHRoZSBnby4gSSByZWFkaW5nIGFsbCB0aGUgT3J3ZWxsaWFuIHN0dWZmIDE5ODQgYW5kIEJyYXZlIE5ldyBXb3JsZCBhbmQgSGFuZG1haWQgVGFsZSBhbmQgZnJlYWtpbmcgbXlzZWxmIG91dC4gSSBkb24gd2FudCB0byBnZXQgaW50byBwb2xpdGljcywgYnV0IGl0IHNlZW1zIGxpa2UgdGhlIGdvdmVybm1lbnQgaXMgYmVjb21pbmcgbW9yZSBhbmQgbW9yZSBpbnZhc2l2ZSwgYW5kIHdlIGhhdmUgbGVzcyBhbmQgbGVzcyBwcml2YWN5LiAKR29hbCBvZiB0aGVzZSBleGhpYml0aW9ucyBhbmQgcHJvZ3JhbXMgaXMgdG8gZW5nYWdlIGFydGlzdHMsIHN0dWRlbnRzLCBtdXNldW0gbGVhZGVycyBhbmQgY29tbXVuaXRpZXMgaW4gY29udmVyc2F0aW9ucyBhYm91dCB0aGUgY3JlYXRpb24gYW5kIGRpc3NlbWluYXRpb24gb2YgTGF0aW5vIGFydCwgc2FpZCBQYW1lbGEgUXVpcm96LCBDTUFTIGRpcmVjdG9yIGFuZCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgSVVQTFIuIExhdGlub3MgaGF2ZSBwbGF5ZWQgcHJvbWluZW50IHJvbGVzIGluIHNoYXBpbmcgYXJ0aXN0aWMgY3VsdHVyZS4gSG91c3RvbiBzcG9uc29ycyBpbmNsdWRlOiBTb3V0aHdlc3QgQWlybGluZXMsIFRoZSBDaXR5IG9mIEhvdXN0b24gTWF5b3IncyBPZmZpY2Ugb2YgQ3VsdHVyYWwgQWZmYWlycywgSG91c3RvbiBFbmRvd21lbnQsIFNtaXRoc29uaWFuIExhdGlubyBDZW50ZXIsIFVuaXZlcnNpdHkgb2YgSG91c3RvbiBEb3dudG93biwgSG91c3RvbiBBcnRzIEFsbGlhbmNlLCBIb3VzdG9uIEZpcnN0L1Zpc2l0IEhvdXN0b24sIENsZWFyIENoYW5uZWwgT3V0ZG9vciBhbmQgQWxsZWdpYW5jZSBCYW5rLgpTaHV0dGVyYnVnMzkwICAyIHBvaW50cyAgc3VibWl0dGVkIDIzIGhvdXJzIGFnbwpXaGV0aGVyIGl0cyBvbmxpbmUgZ2FtYmxpbmcgb3IgaW4gc29tZSBjYXNpbm8gaW4gVmVnYXMsIGl0IGlzIHN0aWxsIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3UgZG9udCBiZXQgd2hhdCB5b3UgZG8gbm90IGhhdmUuIEl0cyBlYXN5IHRvIGxvc2UgY29udHJvbCB3aGVuIGdhbWJsaW5nLCBlc3BlY2lhbGx5IHdoZW4geW91cmUgbG9zaW5nLiAKQWx0aG91Z2ggc2hlIHRhdWdodCBhdCBCT0NFUywgTHltZSwgYW5kIENhcGUgVmluY2VudCBzY2hvb2xzIGhlciBjYXJlZXIgY2FtZSBmdWxsIGNpcmNsZSB3aGVuIHNoZSBqb2luZWQgdGhlIHN0YWZmIGF0IFRob3VzYW5kIElzbGFuZHMgSGlnaCBTY2hvb2wgd2hlcmUgc2hlIGV2ZW50dWFsbHkgcmV0aXJlZCBmcm9tIGluIDE5OTYuIFNoZSBjb2FjaGVkIGZvciBtYW55IHllYXJzIHRoZSBnaXJscycgdmFyc2l0eSBzb2NjZXIsIHZvbGxleWJhbGwsIGJhc2tldGJhbGwsIGFuZCBzb2Z0YmFsbCB0ZWFtcyBhbmQgaGFzIGZhciB0b28gbWFueSBjaGFtcGlvbnNoaXBzIGFuZCBhY2NvbGFkZXMgdG8gbGlzdCBidXQgZXZlbiBoYWQgYW4gZW50aXJlIGRheSBuYW1lZCBmb3IgaGVyIGF0IHRoZSBzY2hvb2wgYWZmZWN0aW9uYXRlbHkgZHViYmVkLCBCIERheSEuIApNeSBkYWQgdGhlbiByZWdhaW5lZCBjb25zY2lvdXNuZXNzIGFuZCBmb3VuZCBoaXMgcGlzdG9sIHRoYXQgaGUgZmx1bmcgdW5kZXIgc29tZSBidXNoZXMgd2hlbiBoZSBzYXcgdGhhdCB0aGVyZSB3ZXJlIHByb2JsZW1zLiAKQnJhbmRlZCBwb2tpZXMgYXJlIGJhc2VkIG9uIGJsb2NrYnVzdGVyIG1vdmllcyBvciB0ZWxldmlzaW9uIHNob3dzIGFuZCBhcmUgdGhlIGxhdGVzdCByYWdlLi4gCkhvdyBUbyBBcHBseSBTa2luIFdoaXRlbmluZyBDcmVhbSBvbiBZb3VyIEZhY2UKVm90ZXJzIGdvdCBzbyBmZWQgdXAgd2l0aCBhIHByaW1lIG1pbmlzdGVyIHRoYXQgdG8gdGhpcyBkYXkgaGlzIHBhcnR5IGNvbnRpbnVlcyB0byBiZSBzaHV0IG91dC4gCkkgYWxzbyB0aGluayBpdCB0aGUgZHJpdmluZyBmb3JjZSBvZiB0aGUgVHJ1bXAgcGhlbm9tZW5vbiwgYXMgd2VsbCBhcyB0aGUgUWFub24gYnVsbHNoaXQuIFBlb3BsZSBkZWNpZGUgdGhleSB3YW50IHRvIGJlbGlldmUgc29tZXRoaW5nIGJlY2F1c2UgaXQgc2VkdWN0aXZlIHRvIHRoZW0gKHBlcmhhcHMgdGhleSBmZWVsIHBvd2VybGVzcyksIG9yIHN1cHBvcnQgYSBwZXJzb24gYmVjYXVzZSB0aGV5IGxpa2UgaGltLCBhbmQgd2hlbiBjb25mcm9udGVkIHdpdGggY2xlYXIgZXZpZGVuY2UgdGhhdCB0aG9zZSBiZWxpZWZzIGFyZSBhYnNvbHV0ZWx5IG5vdCB0cnVlLCBvciB0aGF0IHRoYXQgcGVyc29uIGlzIGEgcGllY2Ugb2Ygc2hpdCwgdGhleSBjaG9vc2UgdG8gc3RheSB0aGUgY291cnNlIGJlY2F1c2UgdGhhdCB3aGF0IHRoZXkgd2FudC4gCklmIHlvdSBjYW4gY2hhbmdlIHlvdXJzZWxmIHlvdSBjYW4gY2hhbmdlIHRoZSB3b3JsZC5BbmQgbGFzdGx5LCBhbmQgdGhpcyBpcyB0aGUgc3VtbWFyeSBvZiBpdCBhbGwgZm9yIGV2ZXJ5b25lLiBZb3VyIGxpZmUgd2lsbCBOT1QgY2hhbmdlLCB1bnRpbCBZT1UgY2hhbmdlIFlPVVIgbGlmZS4gCklmIHRoZXkgZG9uJ3QgZmVlbCB0aGUgY29tcGFueSBpcyBwcm9mZXNzaW9uYWwgZW5vdWdoIHRvIGhhbmRsZSB0aGVpciBpbXBvcnRhbnQgbWF0dGVycywgdGhleSB3aWxsIGdvIGVsc2V3aGVyZS4gCk5BU0EgYXdhcmRlZCB0aGUgZmlyc3QgY29udHJhY3RzIGluIDIwMTQgdG8gU3BhY2VYIGFuZCBCb2VpbmcsIG5vdyB0b3RhbGxpbmcgYWJvdXQgJDggYmlsbGlvbi4gVGhpcyBmaXJzdCBTcGFjZVggdGVzdCBmbGlnaHQgb3BlbnMgYSBuZXcgZXJhLCBCcmlkZW5zdGluZSBzYWlkLCB3aXRoIG5ldyB0ZWNobm9sb2d5IGFuZCBuZXcgYnVzaW5lc3MgYXBwcm9hY2hlcy4KRmxpcHBlZCB0aGUgbGlnaHRzIG9uIHRvIHNlZWluZyBhIGJhdCBmbHlpbmcgYW5kIGdvaW5nIGFwZSBzaGl0IGNyYXp5LiAKIlRoZXkgcmVjYWxsZWQgaGltLiAKVGhlc2UgZGVtb25zdHJhdGVkIGhpZ2ggdmFyaWF0aW9uIGFtb25nIHRoZSBpbnRlcnZlbnRpb25zIGFuZCBvdXRjb21lIG1lYXN1cmVzIGFuZCBzdWdnZXN0ZWQgdGhhdCB0aGUgbWV0aG9kIG9mIHN5bnRoZXNpcyB3YXMgYXBwcm9wcmlhdGUuLiAKR3JleWhvdW5kcyBhcmUgb25seSAzIHBlcmNlbnQgYm9keSBmYXQsIGFuZCBpZiBhZG9wdGVkLCBvd25lcnMgc2hvdWxkIGtub3cgdGhhdCB0aGV5IGFyZSBoZWFsdGhpZXIgc2tpbm55IGFuZCBzaG91bGRuJ3QgYmUgZmF0dGVuZWQgdXAuIFRoZWlyIGRpZXQgYXQgU291dGhsYW5kIGlzIG1lYXQgYW5kIHZlZ2V0YWJsZXMuIGluIEp1bHkgYW5kIEF1Z3VzdC4KVGhlIGdyYXZlbCBvdmVyIG15IHNlcHRpYyB0YW5rIGlzbnQgYSBwcm9ibGVtIGZvciB0aGUgbG9jYWwgbGF3LiBBcyBsb25nIGFzIGkgZG9udCBwZXJtYW5lbnRseSBjb3ZlciBpdCB3aXRoIHNvbWV0aGluZyBsaWtlLCBjb25jcmV0ZSwgb3IgYSBidWlsZGluZy4gVGhlIHRvd25zaGlwIHJlYWxseSBkb250IGNhcmUgd2hhdCBpIGRvIG9uIG15IHByb3BlcnR5LiAKTWVkaWNhbCBtYW5ldXZlcnMgYXJlIHVzdWFsbHkgcmVzZXJ2ZWQgZm9yIHRob3NlIHdpdGggcGVyc2lzdGVudCBvciBpbnRyYWN0YWJsZSBoaWNjdXBzLiAKSSBpbmNsaW5lZCB0byBzYXkgbm8uIApBcyBhIG1hc3NhZ2UgdGhlcmFwaXN0LCBJIHNheSAyMCUgaXMgcHJldHR5IG5vcm1hbC4gCklnbm9yZSB0aGUgY2FsbHMsIGhhbmcgdXAgaWYgdGhleSBicmluZyBpdCB1cCwgd2FsayBvdXQgb2YgdGhlIHJvb20sIGRvbiByZXBseSB0byB0ZXh0cywgIkkgdG9sZCB5b3Ugd2hlcmUgSSBzdGFuZCBvbiB0aGlzLiAKSSBicm91Z2h0IHVwIHRvIG15IGJvc3MgdGhhdCB0aGlzIHdvdWxkIGJlIGFib3V0IGEgJDEwMGsgcGF5b3V0IGZvciB0aGF0IHByb2dyYW0gYW5kIGFib3V0IDMgd2Vla3MgbGF0ZXIgdGhlIGNvbXBhbnkgYWRqdXN0ZWQgbXkgdGFyZ2V0cyBmb3IgdGhlIHllYXIucmVkZGl0b3Jmb3IxMXllYXJzICAxIHBvaW50ICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ29EZXBlbmRzIG9uIHRoZSBwcm9kdWN0L3ZlcnRpY2FsLiBGb3IgQyBMZXZlbCBnYXRla2VlcGVycyAoRUFzKSwgYWZ0ZXIgYWJvdXQgNCA1IGNhbGxzIHRoZXkgc3RhcnQgdG8gcmVtZW1iZXIgbWUuVGhleSB1bmhhcHB5LCBJIHVuaGFwcHkuIApBdCBDaXZpbCBXYXIgZXZlbnRzLCBMb2V3IHdhc2ZyZXF1ZW50bHkgYXNrZWQgIndobyBhcmUgeW91PyIgSGUgZGlkbid0aGF2ZSBhbiBhbnN3ZXIgdW50aWwgaGUgbGVhcm5lZCBhYm91dCBXYXluZUNvdW50eSBoaXN0b3J5IGR1cmluZyB0aGUgQ2l2aWwgV2FyLiBMb2V3d2FzIHZlcnkgZXhjaXRlZCB0byByZWFkIGFib3V0IGEgcGF0cmlvdGljc3BlZWNoIGdpdmVuIGJ5IGF0dG9ybmV5IFdpbGxpYW0gT3JyIHRvY3Jvd2RzIGdhdGhlcmVkIGluIGRvd250b3duIFdvb3N0ZXIgdG9yZXNwb25kIHRvIFByZXNpZGVudCBMaW5jb2xuJ3MgY2FsbCBmb3J2b2x1bnRlZXJzIGluIDE4NjEuIApUaGV5IHRocmVhdGVuIHRvIHRlbGwgd2hhdCBJJ3ZlIGRvbmUgYW5kIEkgY2FsbCB0aGUgYmx1ZmYgYW5kIHNheSBnbyBhaGVhZCBJJ20gZmluZSB3aXRoIGl0LiAKU2FtIHNsaWQgaGlzIENpZWwgaW50byBoaXMgZHJpdmV3YXkgYW5kIGhpdCB0aGUgYnV0dG9uIHRvIG9wZW4gaGlzIGdhcmFnZS4gCjIuIApSYXRoZXIgdGhhbiBwYXlpbmcgYW4gaG91cmx5IHdhZ2Ugb3Igd2Vla2x5IGFtb3VudCwgcGFpZCBoaW0gY2FzaCBhcyBzaGUgd2VudCwgcGF5aW5nIGhpbSBtb3JlIHdoZW4gc2hlIGhhZCBtb3JlIGFuZCBsZXNzIHdoZW4gc2hlIGhhZCBsZXNzLiAKVGhleSBvcGVyYXRlIHNpbWlsYXIgdG8gYSBUZXJtaW53b2h1bmcgZnJvbSBhIGN1c3RvbWVycyBwb2ludCBvZiB2aWV3LCBidXQgaW5zdGVhZCBvZiBzZXgsIHRoZSBnaXJscyB3aWxsIG9ubHkgZ2l2ZSB5b3UgYSBuYWtlZCBtYXNzYWdlICh3aXRoIHNvbWUgYm9keSBvbiBib2R5IHNsaWRpbmcpIGFuZCBhIGhhbmRqb2IgYXMgZmluaXNoLiAKVGhlIGNsYXNzcm9vbSBoYWQgdG8gZXZhY3VhdGUgYW5kIGhlIGdvdCBleHBlbGxlZCwgYW5kIG1heWJlIGFycmVzdGVkIChub3Qgc3VyZSkuIApGb3IgZXhhbXBsZSwgaW4gYSAkMS8yIGxpbWl0IGdhbWUsIHRoZSByYWlzZXMgd2lsbCBiZSBhcyBmb2xsb3dzLCBsaW1pdGVkIHRvIGZvdXIgdGltZXMgdGhlIGZpcnN0IGJldCB0aGF0IHdhcyBtYWRlOlByZSBmbG9wOiAkMSwgJDIsICQzIHVwIHRvICQ0T24gdGhlIGZsb3A6ICQxLCAkMiwgJDMgdXAgdG8gJDRPbiB0aGUgdHVybjogJDIsICQ0LCAkNiB1cCB0byAkOE9uIHRoZSByaXZlcjogJDIsICQ0LCAkNiB1cCB0byAkOApIZWF0IHRoZSBvaWwgaW4gYSBsYXJnZSBzYXV0ZSBwYW4gb3ZlciBtZWRpdW0gaGlnaCBoZWF0LCBhZGQgdGhlIG9uaW9ucyBhbmQgY29vayB1bnRpbCBzb2Z0LCAzIHRvIDQgbWludXRlcy4gQWRkIHRoZSBnYXJsaWMgYW5kIHJlZCBjaGlsaSBmbGFrZXMgYW5kIGNvb2sgZm9yIDEgbWludXRlLiBBZGQgdGhlIHRvbWF0b2VzLCBicmluZyB0byBib2lsLCBzZWFzb24gd2l0aCBzYWx0IGFuZCBwZXBwZXIgYW5kIGNvb2sgdW50aWwgdGhlIHNhdWNlIGlzIHJlZHVjZWQgYW5kIHRoaWNrZW5lZCwgYWJvdXQgMjUgdG8gMzAgbWludXRlcy4gU3RpciBpbiB0aGUgcGFyc2xleSBhbmQgYmFzaWwuCkkgcmFuIGludG8gdGhpcyBpbiB0aGUgY291cnNlIG9mIG15IHNleCBsaWZlIHdpdGggYSB3b21hbiB0aGF0IHdhcyBpbnRvIEJEU00uIFRoZSBmaXJzdCB0aW1lIHdlIG1hZGUgb3V0LCBzaGUganVzdCB3ZW50IGRvd24gb24gbWUuIApDYW5hZGlhbiBoZXJlIGFuZCBtb3N0IG9mIG15IGtub3dsZWRnZSBpbiBhbWVyaWNhbiBwb2xpdGljcyBjb21lcyBmcm9tIGhvdXNlIG9mIGNhcmRzIChzbyBub3QgYSBsb3QpLiAKSG93ZXZlciwgSSB0aGluayBldmVyeSBtZW1iZXIgb2YgYSBhbnkgZ3JvdXAgdGhhdCBoYXMgYmVlbiBwZXJzZWN1dGVkIGV2ZXIgKHRvIHdoaWNoIFBvbGVzIGluIFdXMiBiZWxvbmcgdG9vLCBidHcpIHdvdWxkIGxpa2UgdG8gZGlmZmVyLi4gClRvdXQgbGUgbW9uZGUgYSBldSBjaGF1ZCwgIGRpdmVycyBkZWdycy4gSWxzIG4nYXZhaWVudCBwYXMgbWlzIGxhIGNsaW0sIHRhbnQgZG9ubiBsYSBtb3llbm5lIGQnZ2UgKGhpIGhpKSBldCBpbCB5IGF2YWl0IDQwIGRhbnMgbGEgdm9pdHVyZSBxdWFuZCBqZSBsJ2FpIHJlcHJpc2UgISEhISBIZXVyZXVzZW1lbnQsIHVuIG5ldmV1IGNvbXBhdGlzc2FudCBhIGZhaXQgdG91cm5lciBsYSBjbGltLCBzaW5vbiwgamUgc2VyYWlzIGVuY29yZSBsIGJhcy4gCk5vdCB0byBtZW50aW9uIHRoYXQgdGhlIGV4aXN0ZW5jZSBvZiBzdWNoICJydWxlIGJyZWFraW5nIiBzZXJpZXMgZG9lc24gcHJlY2x1ZGUgdGhlIHBvc3NpYmlsaXR5IG9mIGEgY2xlYXIgY3V0IGRlZmluaXRpb24uIApUaGVuIHNoZSBhc2tzIG1lIGhvdyBJIG1ha2UgdGhlbS4gClRoZXJlIGlzIHNob2NrIGFuZCBkaXNtYXkgaW4gdG9kYXkgcGFwZXJzIGFib3V0IHRoZSBzbmVha2luZXNzIHRoYXQgaXMgUnVzc2lhLiBJZiBvZmYgdGhlIHBhZ2VzIG9mIGEgYmFkIENvbGQgV2FyIGVyYSBzcHkgbm92ZWwsIHRoZXNlIHBlb3BsZSBoYWQgYmVlbiBzZW50IHRvIGxpdmUgaW4gdGhlIFVTIGFuZCBiZWNvbWUgYXMgQW1lcmljYW4gYXMgYXBwbGUgcGllIGFsbCBpbiBhbiBlZmZvcnQgdG8gZXh0cmFjdCBpbmZvcm1hdGlvbi4gCkRlemUga2FwamVzIGJsYWNrYmVycnkgdG9yY2ggYWR2ZXJ0ZW50aWUgaXMgaGVsYWFzIHZlcndpamRlcmQuIEtpamsgaGllcm9uZGVyIHZvb3IgdmVyZ2VsaWprYmFyZSBhZHZlcnRlbnRpZXMuClRoZWlyIHN1Y2Nlc3MgaGF2ZSBtb3RpdmF0ZWQgbWFueSBvdGhlciBwZW9wbGUgYWJvdXQgY2FzaW5vIGdhbWVzIGFuZCBwb2tlciBnYW1lcy4gCg==|<---