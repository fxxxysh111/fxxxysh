<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html dir="ltr" lang="fr-fr" xml:lang="fr-fr" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <base href="https://www.boss-interim.net/"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="Super User" name="author"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
 </head>
 <body>
  <div class="unselectable" id="header-background">
  </div>
  <div class="corps">
   <table id="header-top">
    <tr>
     <td class="unselectable" id="header-top-left">
     </td>
     <td class="unselectable" id="header-top-right">
     </td>
    </tr>
   </table>
   <div class="unselectable" id="header">
    <div class="header">
     [ahref]
     
    </div>
   </div>
   <div id="all">
    <div id="back">
     <div class="unselectable" id="main_content">
      <ul class="menu">
       <li class="item-101 current active">
        [ahref]
        
       </li>
       <li class="item-102">
        [link]
        
       </li>
       <li class="item-216 parent">
        [link]
        
       </li>
       <li class="item-131 parent">
        [ahref]
        
       </li>
       <li class="item-132">
        [link]
        
       </li>
       <li class="item-133">
        <h3>
         [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        [ahref]
        
       </li>
       <li class="item-134">
        [ahref]
        
       </li>
      </ul>
      <div class="slideshowck camera_wrap camera_black_skin" id="camera_wrap_87" style="width:912px;">
       <div data-src="/images/banners/2-gestion-des-talents.png" data-thumb="/images/banners/th/2-gestion-des-talents_th.png">
        <div class="camera_caption fadeFromRight">
         <div class="camera_caption_title">
         </div>
         <div class="camera_caption_desc">
          <h1>
           [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
          </h1>
          <br>
           [ahref]<li>[ahref]</li><li>[search]</li>[search][link][ahref]<li>[ahref]</li>
          </br>
          <h2>
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
          <p style="text-align:justify">
           [ahref]
           
          </p>
         </div>
        </div>
       </div>
       <div data-src="/images/banners/2-gestion-des-talents.png" data-thumb="/images/banners/th/2-gestion-des-talents_th.png">
        <div class="camera_caption fadeFromRight">
         <div class="camera_caption_title">
         </div>
         <div class="camera_caption_desc">
          <h1>
           [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
          </h1>
          <br/>
          <h2>
           <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
          </h2>
          <p style="text-align:justify">
           Nous nous spécialisons dans le recrutement, placement et suivi de cadres et cadres supérieurs, ingénieurs et techniciens, assistants et secrétaires, commerciaux et cadres commerciaux, ETAM et toutes qualifications.<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
         </div>
        </div>
       </div>
       <div data-src="/images/banners/1-suivi-collaborateurs.png" data-thumb="/images/banners/th/1-suivi-collaborateurs_th.png">
        <div class="camera_caption fadeFromRight">
         <div class="camera_caption_title">
         </div>
         <div class="camera_caption_desc">
          <h1>
           <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
          </h1>
          <br/>
          <h2>
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
          <p>
           En certifiant l’application de procédures performantes de présélection, nous garantissons nos partenaires de la présentation de prospects compétents et qualifies capables de répondre à leurs demandes.<li>[search]</li>[ahref]<li>[link]</li>[link][link]
          </p>
         </div>
        </div>
       </div>
       <div data-src="/images/banners/3-demarche-qualite.png" data-thumb="/images/banners/th/3-demarche-qualite_th.png">
        <div class="camera_caption fadeFromRight">
         <div class="camera_caption_title">
         </div>
         <div class="camera_caption_desc">
          <h1>
           <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
          </h1>
          <br>
           <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref]<li>[ahref]</li><li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
          </br>
          <h2>
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
          <p>
           Nous suivons l'adaptation des embauchés ou promus pendant les premiers mois, pour contribuer à leur intégration, et s'il le faut, redéfinir les tâches en liaison avec les dirigeants.
          </p>
         </div>
        </div>
       </div>
      </div>
      <div style="clear:both;">
      </div>
      <div id="line">
      </div>
      <div id="contentarea2">
       <div id="subcontentarea">
        <div id="breadcrumbs">
        </div>
        <div id="wrapper">
         <div id="main">
          <div id="system-message-container">
          </div>
          <div class="row blocrechercheemploi">
           <form action="/offres-d-emploi" method="POST">
            <div class="" id="s_module_recherche">
             <h2>
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <table>
              <tr>
               <td>
                Secteur
               </td>
               <td>
                <div class="s_module_recherche_un_champ" id="s_module_recherche_secteurs">
                 <select class="form-control" id="secteur" name="secteur">
                  <option value="">
                   Secteurs
                  </option>
                  <option value="259">
                  </option>
                  <option value="176">
                   ADMINISTRATIF
                  </option>
                  <option value="1">
                   ARCHITECTURE
                  </option>
                  <option value="287">
                   ASSURANCE
                  </option>
                  <option value="189">
                   BANQUE
                  </option>
                  <option value="6">
                   BATIMENT
                  </option>
                  <option value="58">
                   CALL CENTER
                  </option>
                  <option value="62">
                   COMMERCIAL
                  </option>
                  <option value="206">
                   COMPTABILITE
                  </option>
                  <option value="92">
                   EVENEMENTIEL
                  </option>
                  <option value="144">
                   GRANDE DISTRIBUTION
                  </option>
                  <option value="102">
                   HOTELLERIE
                  </option>
                  <option value="151">
                   INDUSTRIE
                  </option>
                  <option value="76">
                   INFORMATIQUE
                  </option>
                  <option value="275">
                   JURIDIQUE
                  </option>
                  <option value="164">
                   LOGISTIQUE
                  </option>
                  <option value="53">
                   MECANIQUE
                  </option>
                  <option value="173">
                   MEDICAL
                  </option>
                  <option value="115">
                   RESTAURATION
                  </option>
                  <option value="134">
                   SERVICES
                  </option>
                  <option value="143">
                   TOURISME
                  </option>
                  <option value="87">
                   VENTE
                  </option>
                 </select>
                </div>
               </td>
               <td>
                Poste
               </td>
               <td>
               </td>
              </tr>
              <tr>
               <td>
                Type de contrat
               </td>
               <td>
                <div class="s_module_recherche_un_champ" id="s_module_recherche_contrat">
                 <select class="inputbox fabrik_filter input-medium " id="offres___type_contratvalue" name="contrat[]">
                  <option selected="selected" value="">
                   Tous
                  </option>
                  <option value="1">
                   CDD
                  </option>
                  <option value="2">
                   CDI
                  </option>
                  <option value="3">
                   Intérim
                  </option>
                  <option value="4">
                   Stage
                  </option>
                 </select>
                </div>
               </td>
               <td>
               </td>
               <td>
               </td>
              </tr>
             </table>
            </div>
            <div class="s_module_recherche_un_champ" id="s_module_recherche_bouton_rechercher">
            </div>
           </form>
          </div>
          <div class="item-page" itemscope="" itemtype="https://schema.org/Article">
           <meta content="fr-FR" itemprop="inLanguage"/>
           <div class="page-header">
            <h2 itemprop="headline">
             [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
            </h2>
           </div>
           <div itemprop="articleBody">
            <div style="text-align: justify;">
             <span style="font-size: medium;">
              Tertiaire, industrie, batiment, hôtellerie, tourisme et demain médical,
              <strong>
               <span style="font-size: medium; text-align: justify;">
                boss interim[ahref]<li>[link]</li>[ahref]<li>[search]</li><li>[ahref]</li>[link]
               </span>
              </strong>
              s’adresse à tous les secteurs d’activités et recherche tous les profils de candidats.
             </span>
            </div>
            <div style="text-align: justify;">
             <span style="font-size: medium;">
              [search]<li>[link]</li>[link][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>
             </span>
            </div>
            <div style="text-align: justify;">
             <span style="font-size: medium;">
              Depuis 1984,
              <strong>
               boss interim
              </strong>
              est basé à Monaco - la société dispose également d’une implantation dans les Alpes-Maritimes - cette longévité est gage de compétence, de sérieux et de bonne connaissance du tissu économique local.
             </span>
            </div>
            <div style="text-align: justify;">
             <span style="font-size: medium;">
             </span>
            </div>
            <div style="text-align: justify;">
             <span style="font-size: medium;">
              <strong>
               <span style="font-size: medium; text-align: justify;">
                boss interim[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
               </span>
              </strong>
              se distingue également par sa parfaite maîtrise et son respect des étapes du recrutement. Une expertise synonyme pour l’entreprise et le candidat de mission réussie.
             </span>
            </div>
            <div style="text-align: justify;">
             <span style="font-size: medium;">
             </span>
            </div>
            <div style="text-align: justify;">
             <span style="font-size: medium;">
              <strong>
               <span style="font-size: medium; text-align: justify;">
                boss interim<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li>[ahref][ahref]<li>[search]</li>
               </span>
              </strong>
              est membre du syndicat de travail temporaire et membre de la Chambre de Développement économique de Monaco.
             </span>
            </div>
           </div>
          </div>
         </div>
        </div>
        <h2 class="unseen">
         [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
        </h2>
        <div id="close">
         [ahref]
         
        </div>
        <div id="right">
         [ahref]
         
         <div class="moduletable">
          <ul class="menumenu_droite" id="menu_droite">
           <li class="item-220">
            [ahref]
            
            <p>
             En cliquant sur ce lien, déposez votre CV immédiatement[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
            </p>
           </li>
           <li class="item-111">
            [link]
            
            <p>
             En cliquant sur ce lien, découvrez toute l’actualité Boss Interim
            </p>
           </li>
          </ul>
         </div>
         <div class="moduletable">
          <ul class="menureseaux_sociaux_droite" id="reseaux_sociaux_droite">
           <li class="item-135">
            [ahref]
            
           </li>
           <li class="item-136">
            [ahref]
            
           </li>
           <li class="item-137">
            [ahref]
            
           </li>
           <li class="item-183">
            [ahref]
            
           </li>
           <li class="item-176">
            [link]
            
           </li>
          </ul>
         </div>
         <div class="moduletableconnexion">
          <h2>
           <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
          </h2>
          <form action="/" id="login-form" method="post">
           <fieldset class="userdata">
            <p id="form-login-username">
             <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[ahref]</li><li>[ahref]</li>[search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[link]</li>
            </p>
            <p id="form-login-password">
             <label for="modlgn-passwd">
              Mot de passe :
             </label>
            </p>
            <p id="form-login-remember">
             <li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[link][search][ahref][search]<li>[link]</li>[search][search]
            </p>
           </fieldset>
           <ul id="login_action_links">
            <li>
             [ahref]
             
             [link]
             
            </li>
            <li class="register_link">
             [link]
             
            </li>
           </ul>
          </form>
         </div>
        </div>
        <div class="wrap">
        </div>
       </div>
       <div id="footer-outer">
        <div id="footer-sub">
         <div id="footer">
          <ul class="menumentions_legales" id="mentions_legales">
           <li class="item-122">
            [ahref]
            
           </li>
           <li class="item-127">
            <span class="separator">
             /<li>[link]</li>[search][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
            </span>
           </li>
           <li class="item-123">
            [link]
            
           </li>
           <li class="item-128">
            <span class="separator">
             /
            </span>
           </li>
           <li class="item-124">
            [ahref]
            
           </li>
           <li class="item-129">
            <span class="separator">
             /<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][search][link]
            </span>
           </li>
           <li class="item-125">
            [ahref]
            
           </li>
           <li class="item-126">
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0278
  </b>
 </body>
</html>
