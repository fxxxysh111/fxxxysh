--->|QnJhZHkgYW5kIHRoZSBQYXRyaW90cyBsb29rZWQgcmVhZHkgZm9yIGFub3RoZXIgY29tZWJhY2sgYnkgb3BlbmluZyB0aGUgc2Vjb25kIGhhbGYgd2l0aCBhIDc1IHlhcmQgdG91Y2hkb3duIGRyaXZlLiBHcm9ua293c2tpIHdhcyB1bnN0b3BwYWJsZSwgZ3JhYmJpbmcgZm91ciBwYXNzZXMgZm9yIDY5IHlhcmRzLCBpbmNsdWRpbmcgdGhlIDUgeWFyZCBzY29yZS4KVGhleSBhcmUgYm90aCBleGNlbGxlbnQgbmFwcGVycywgbXkgMiB5ciBvbGQgZXZlbiB0YWtlcyAyIG5hcHMgYSBkYXkgeWV0LCBhbmQgbXkgc3dlZXQgcGVhIHNsZWVwcyBqdXN0IGFib3V0IGFueXdoZXJlIGFuZCBhbnkgdGltZS4gCkl0IGZlbHQgdG9vIGhlYXZ5IHdpdGggaXQgYWxsIGRhcmtlciByZWQsIGJ1dCBpdCBmZWVscyByZWFsbHkgZW1wdHkgYW5kIGZsYXQgaWYgaW5zaWRlIHRoZSBiYXJuIGlzIHdoaXRlIG9yIGdvbGQuIApXaGlsZSBjZW50cmFsIGJhbmtzIHNob3VsZCBzdGF5IGluIGV4cGFuc2lvbmFyeSBtb2RlLCB0aGUgZ3JvdXAgY2FsbGVkIGZvciBzdHJ1Y3R1cmFsIHJlZm9ybXMgYW5kIGZpc2NhbCBzdGltdWx1cyBpbiB0aGUgRXVyb3BlYW4gY291bnRyaWVzIHRoYXQgY291bGQgYWZmb3JkIGl0LCBzYXlpbmcgdGhhdCBwb2xpY3kgYWxvbmUgY2Fubm90IHJlc29sdmUgdGhlIGRvd250dXJuIGluIEV1cm9wZSBvciBpbXByb3ZlIHRoZSBtb2Rlc3QgbWVkaXVtIHRlcm0gZ3Jvd3RoIHByb3NwZWN0cy4gT0VDRCBjdXQgaXRzIGdyb3d0aCBvdXRsb29rIGZvciB0aGlzIHllYXIgdG8gMSBwZXIgY2VudCBmcm9tIDEuOCBwZXIgY2VudC4gRUNCIHBvbGljeSBtYWtlcnMgYXJlIG1lZXRpbmcgaW4gRnJhbmtmdXJ0IHRoaXMgd2VlaywgYW5kIHRoZSBPRUNEIHNhaWQgdGhleSBzaG91bGQgc2lnbmFsIGEgZGVsYXkgdG8gYW55IHJhdGUgaGlrZXMgYW5kIHBvc3NpYmx5IGltcGxlbWVudCBuZXcgbWVhc3VyZXMgdG8gaW1wcm92ZSBmdW5kaW5nIGZvciBiYW5rcy4gClByb3BzIHRvIEdvb2dsZSwgdGhlaXIgcmVjcnVpdGVyIHdhcyB2ZXJ5IGdlbnRsZS4gRmlyc3QgYXNraW5nIGlmIEkgd2FzIGludGVyZXN0ZWQgaW4gbmV3IG9wcG9ydHVuaXRpZXMsIGdpdmluZyBtZSBhIGZ1bGwgbG93ZG93biBvbiBwb3NpdGlvbnMsIGFuZCBzYXlpbmcgZXZlbiB0aG91Z2ggSSBub3QgaW50ZXJlc3RlZCBmZWVsIGZyZWUgdG8gY29udGFjdCB0aGVtIHdpdGggcXVlc3Rpb25zIG9yIGFueXRpbWUgbXkgc2l0dWF0aW9uIGNoYW5nZXMuIApJZiB5b3UgbG9vayBpbiB0aGVpciBjb21tZW50IGhpc3RvcnkgaGUgaGFzIGJlZW4gZ3JpbmRpbmcgYXhlcyBhbmQgcHVzaGluZyBoaXMgb3BpbmlvbnMgZG93biBwZW9wbGUncyB0aHJvYXRzIG5vbiBzdG9wIGZvciBob3VycyBhbmQgaG91cnMgYW5kIG5vIG1hdHRlciBob3cgbWFueSBkb3dudm90ZXMgb3IgcmVtb3ZlZCBjb21tZW50cyBoZSBoYXMsIGhlIGlzIG9iamVjdGl2ZWx5IHJpZ2h0IGFib3V0IGhpcyBvcGluaW9ucy4gCklmIHlvdSBzZWUgdGhlIEJpbGwgQWNjZXB0b3Igbm90IGxpdCwgb3IgZmxhc2hpbmcgYmx1ZSwgaXQgaXMgaW4gbmVlZCBvZiBzZXJ2aWNlIG9yIHdoYXQgaXMgY2FsbGVkIGEgQmlsbCBEcm9wIFtlbXB0eWluZyBvdXQgdGhlIGFjY2VwdGVkIGNhc2ggYW5kIG1ha2luZyBpdCByZWFkeSB0byBhY2NlcHQgbmV3IG1vbmV5XS4gClNvIG11Y2ggZm9yIFRhbGliYW4ncyBwcm9wb3NlZCBub21pbmVlIEltcmFuIEtoYW4gYW5kIGhpcyBjcmlja2V0LiBXaWxsIHRoZSB0d28gcGxlYXNlIHNvcnQgb3V0IHRoaXMgbG92ZSBoYXRlIGJhbnRlcj8uIApDYW4gYW55b25lIHNoYXJlIGV4cGVyaWVuY2VzIGFzIGEgc29sbyB0cmF2ZWxlcj8gTXkgZnJpZW5kIGNhbiBubyBsb25nZXIgbWFrZSBpdCBhbmQgSSBhbSB1c2luZyBhIGNyZWRpdCB0aGF0IHdpbGwgZXhwaXJlIHNvIGl0J3Mgbm93IG9yIG5ldmVyLkkgbWFkZSB0aGUgdHJpcCBieSBteSBzZWxmIG9uIHB1cnBvc2UgYXMgSSB3YW50ZWQgdGltZSB0byByZWZsZWN0LCBoYXZpbmcganVzdCByZXRpcmVkLiBUaGUgc3RhZmYgYXQgTWlyYXZhbCBtYWRlIG1lIGZlZWwgdmVyeSBjb21mb3J0YWJsZS4gCihsaWtlIHVzZSBvZiBzdW5zY3JlZW5zKSBmb3Igc3VuIHByb3RlY3Rpb24uIEhvd2V2ZXIsIGFmdGVyIGZldyBtb250aHMgb2YgdGhlcmFweSwgdGhlIHNraW4ncyByZXNwb25zZSB0byBVViByYWRpYXRpb24gcmV0dXJucyB0byBub3JtYWwuCllvdSBrbm93IHRoZXNlIGlkaW90cyBhcmUgdGFraW5nIHdoYXQgdGhleSBjYW4gYW5kIHJlbGF5aW5nIGl0IHRvIFJ1c3NpYS4gClRoZXkgd2VyZSBkaXNlbmdhZ2luZyBmcm9tIHRoZSBhdmFudCBnYXJkZSB0byBmb3JtIGEgZ3JvdXAgdGhhdCB3ZW50IHNvbWV3aGF0IGJleW9uZChFdmVuIHRoZSBuYW1pbmcgb2YgdGhlIGdyb3VwIGlzIGEgc3Rvcnkgb2YgdW51c3VhbCByaXBlbmVzcyBhbmQgc3BvaWxhZ2UsIG5vIG9uZSBiZWluZyBhYmxlIHRvIHRlbGwgdGhlIHRydXRoIG9mIGhvdyBpdCBjYW1lIGludG8gYmVpbmcuIAooZWRpdCkgWW91IGNhbiBhZGQgODg4LEFDUiBhbmQgQkNQIGluIHRoZSBsaXN0LiAKVGhlIG5leHQgZGF5LCBJIGdvdCBhIHRleHQgZnJvbSBzb21lb25lIEkgbWFpbGVkIGEgbGV0dGVyIHRvIGFuZCBzcG9rZSB0byBuZWFybHkgYSB5ZWFyIGJlZm9yZS4gSGUgd2FudGVkIHRvIHNlbGwgaGlzIHF1YWRwbGV4LiAKSnVzdCB0byBnZXQgdG8gdGhlIGJhdGhyb29tIGlzIGFsbCB5b3UgY2FuIGRvLiAKTG92ZSBsaXZpbmcgaW4gRGVlcCBDb3ZlLCBleHBsYWlucyBKaWxsLiAKVGhlIEdvbGRlbiBOdWdnZXQgQXRsYW50aWMgQ2l0eSwgd2lubmVyIG9mIHRoZSBBQUEgRm91ciBEaWFtb25kIGF3YXJkLCBpcyB5b3VyIGNvbXBsZXRlIHNob3JlIGRlc3RpbmF0aW9uIGxvY2F0ZWQgb24gdGhlIG9ubHkgbWFyaW5hIGluIEF0bGFudGljIENpdHksIEZyYW5rIFMuIApPbiByZXN0cmljdGlvbnMgb24gcG9saXRpY2FsIGdpdmluZyBieSBjYXNpbm8gaW5kdXN0cnkgZXhlY3V0aXZlczogIkkgY2FuIG1ha2UgYSBwb2xpdGljYWwgY29udHJpYnV0aW9uIGluIHRoZSBzdGF0ZSBvZiBOZXZhZGEuIEkgY2FuJ3QgZG8gdGhhdCBpbiBOZXcgSmVyc2V5IGJlY2F1c2UgSSBoYXBwZW4gdG8gYmUgaW4gdGhlIGdhbWluZyBpbmR1c3RyeS4gVGVsbCB0aGF0IHRvIEdsYXhvU21pdGhLbGluZSBvciBQZml6ZXIuIElmIHlvdSBtYWtlIFZpYWdyYSwgeW91IGNhbiBjb250cmlidXRlIHRoZSBnb3Zlcm5vcidzIHJhY2UuIEJ1dCBpZiB5b3UgZ2l2ZSB0aGVtIGEgcGxhY2UgdG8gdXNlIGl0LCB5b3UgY2FuJ3QuIgpPbmUgVUwgMiBwZXJzb24gYW5kIG9uZSBVTCAxIHBlcnNvbiB0ZW50LiBZb3UgZmlndXJlIG91dCB0aGUgZGF5IHRvIGRheSBoaWtpbmcgYXNwZWN0IG9mIGxpZmUgb24gdGhlIHRyYWlsLiAKT2J2aW91c2x5IEkgZGlzYWdyZWUgd2l0aCB5b3UuIEl0IHdhc24gIm9waW5pb24iIGluIHRoZSBzZW5zZSB0aGF0IHRoZXJlIHdhcyBubyBhcmd1bWVudCB0byBpdC4gSXQgd2FzIGp1c3QgcHVyZSBhbmQgc2ltcGxlIHByb3BhZ2FuZGEuIApOb3csIHlvdSBjYW4gYnV5IHRoZW0gZnJvbSB0aGUgb25saW5lIHBva2VyIHNob3BzIGZvciBjaGVhcCBhcyB3ZWxsLi4gCiJUbyB0cnkgYW5kIHNlZSBpZiB0aGVyZSBhcmUgYW55IG9wdGlvbnMgdGhhdCB0aGUgY3VycmVudCBib2FyZCBoYXZlbid0IGNhbnZhc3NlZCwgd2UncmUgYXNraW5nIG1lbWJlcnMgdG8gY29tZSB1cCB3aXRoIGlkZWFzLCIgaGUgc2FpZC4gIldlJ3JlIGhvcGluZyB0aGF0IHRoZXJlJ3Mgc29tZSAnbWFnaWMgYnVsbGV0JyB0aGF0IHdpbGwgZW5hYmxlIHVzIHRvIHR1cm4gdGhlIG9wZXJhdGlvbiBvZiB0aGUgY2x1YiBhcm91bmQuIApUaGUgQ2FyZHMgQXJlIEF2YWlsYWJsZSBBdCBUaGUgQmVzdCBQcmljZSBBbG9uZyBXaXRoIE9uZSBZZWFyIFdhcnJhbnR5LiBJZiBUaGV5IEZhaWwgVG8gRG8gU28gV2hhdCBUaGV5IEhhZCBQcm9taXNlZCBUaGFuIFlvdSBDYW4gQXNrIFRoZSBTaG9wa2VlcGVyIFRvIFJlcGxhY2UgSXQgV2l0aCBJbiBPbmUgWWVhci4KIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvUHV0IHRoZW0gb3V0c2lkZSBmb3IgYSBuaWdodCBpZiB5b3UgbGl2ZSBpbiBhIHZpbGxhICAgdGhleSBwcm9iYWJseSBiZSB0YWtlbiBieSB0aGUgbmV4dCBtb3JuaW5nLiBJZiBub2JvZHkgImNsYWltcyIgdGhlbSB0aGVuIGJ1eSB0aGUgdGlja2V0IG90aGVyIHBvc3RlcnMgaGF2ZSBtZW50aW9uZWQuIApEaWUgQW5rdW5mdHN6ZWl0ZW4gc2luZCBuaWNodCBhbmdlZ2ViZW4gdW5kIG1hbiBrYW5uIHNpZSBzaWNoIG51ciBMZWlkZXIgZmVobHQgYXVjaCBlaW5lIExhIFBhbG1hIEthcnRlIG1pdCBiZXJzaWNodCBiZXIgYWxsZSBCdXNsaW5pZW4gYXVmIGRlciBIb21lcGFnZS4gRXJzYXR6d2Vpc2Uga2FubiBtYW4gZGFzIEludGVybmV0YW5nZWJvdCBLYXJ0ZSAoc2llaGUgdW50ZW4pIG51dHplbi5Ob2NoIGduc3RpZ2VyIHdpcmQgZXMsIGthdWZ0IG1hbiBzaWNoIHVtIDEsICBiZWltIEJ1c2ZhaHJlciBlaW5lIEJ1cyBCb251c2thcnRlIGltIFNjaGVja2thcnRlbmZvcm1hdCB1bmQgbGR0IGVpbiBHdXRoYWJlbiB2b24gMTAsICAsIDIwLC4gIG9kZXIgMzAsICBhdWYuIApNdWNoIHNjYXJpZXIgaW1hZ2VyeSBhbmQgbW9yZSBjcmVhdGl2ZSBkZWF0aHMuIFRoZSAiZXZlbnQiIGV2ZW4gdGhvdWdoIGl0IHdhc24ndCBzY2llbnRpZmljYWxseSBhY2N1cmF0ZSBvciBwb3NzaWJsZSByZWFsbHksIGF0IGxlYXN0IHNlcnZlZCBhIHB1cnBvc2UgYW5kIGhhZCBhIHJlYXNvbi4gVGhlIG9ubHkgZHJhd2JhY2tzIGFyZSBob3cgYW5ub3lpbmcgV2FobGJlcmcgYW5kIERlc2NoYW5lbCB0ZW5kIHRvIGJlLi4gCiJJdCdzIG5vdCBsaWtlIHRoaXMgaXMgYW4gYWNjaWRlbnQuIEknbSBzdXJlLCBubyBtYXR0ZXIgd2hhdCB5b3VyIGdlbmV0aWNzLCBldmVyeW9uZSBjYW4gYmUgb3V0IG9mIHNoYXBlLiAKSXQgd2FzIGEgY29tcGxldGUgdHVybmFyb3VuZCBmcm9tIElzbmVyJ3MgZXBpYyB0aHJlZSBkYXkgdmljdG9yeSBvdmVyIE5pY29sYXMgTWFodXQsIHdoaWNoIGxhc3RlZCAxMSBob3VycyBmaXZlIG1pbnV0ZXMgYW5kIHdlbnQgdG8gNzAgNjggaW4gdGhlIGZpZnRoIHNldC4KQW5kIHRoZSB5b2dhIHNob290ZXIuIEFuZCB0aGUgZ3V5IHdobyBzaG90IGJsYWNrIHBlb3BsZSBhdCBhIHN0b3JlLiAKSWYgd2UgYXJlIGdvaW5nIGJ5IHRoZSBib29rLCB0aGlzIGlzIHRydWUuIEluIHRoZSBib29rIEFtbWEgaXMgMTMgYW5kIEFubiBhbmQgTmF0YWxpZSB3ZXJlIGFyb3VuZCA5IGFuZCAxMCBpZiBJIGFtIHJlbWVtYmVyaW5nIGNvcnJlY3RseS4gSSB0aGluayBpbiB0aGUgc2hvdyB0aGUgeW91bmdlciBnaXJscyB3ZXJlIGFnZWQgdXAgdG8gYmUgaW4gdGhlIHNhbWUgZ3JhZGUgYXMgQW1tYS4gSSB0aGluayB0aGUgc3Rvcnkgb3ZlcmFsbCBtYWtlcyBzbyBtdWNoIG1vcmUgc2Vuc2UgaGF2aW5nIHRoZW0geW91bmdlciAgIG5vdCBvbmx5IGZvciB0ZWV0aCBwdWxsaW5nL211cmRlcmluZyByZWFzb25zLCBidXQgd2h5IHRoZSBvbGRlciBnaXJscyB3ZXJlIGFibGUgdG8gY29lcmNlL2x1cmUgdGhlbSBhd2F5LiBUaGUgV29tYW4gaW4gV2hpdGUgc2NlbmUgd29ya3MgaW4gdGhlIGJvb2sgYmVjYXVzZSBBbW1hIHBvd2RlcnMgaGVyIGZhY2Ugc3VwZXIgd2hpdGUgYW5kIGRyZXNzZXMgdXAgaW4gYSBiZWRzaGVldCBhbmQgZmxvd2VyIGNyb3duIGFuZCB0ZWxscyBOYXRhbGllIGl0IGEgZ2FtZS4KIEhpZ2guIApIQVRUSUVTQlVSRywgTVMgKFdEQU0pICAgVW5pdmVyc2l0eSBvZiBTb3V0aGVybiBNaXNzIGZvb3RiYWxsIGNvYWNoIEpheSBIb3Bzb24gYWx3YXlzIGhhcyBiZWVuIGEgInRoaXMgZ2FtZSBpcyBvdXIgbW9zdCBpbXBvcnRhbnQgZ2FtZSBiZWNhdXNlIGl0J3Mgb3VyIG5leHQgZ2FtZSIga2luZCBvZiBndXkuCkRvIHRoZXkgaGF2ZSBiYWJ5IG9yIHNtYWxsIGtpZHMgYm9va3MgZm9yIHNhbGU/CkNvbXBlbnNhdGlvbiBTb21lIHJlbGlnaW91cyBvcmdhbml6YXRpb25zIHJlY29tbWVuZCB0aGF0IHRoZWlyIG1lbWJlciBjaHVyY2hlcyBiYXNlIHRoZSB3YWdlcyB0aGV5IHBheSBjdXN0b2RpYW5zIG9uIGxvY2FsIHByZXZhaWxpbmcgd2FnZXMgZm9yIGphbml0b3JzIGluIGJ1c2luZXNzZXMgYW5kIHNjaG9vbHMuIEJ1cmVhdSBvZiBMYWJvciBTdGF0aXN0aWNzLCB0aGUgbWVkaWFuIGhvdXJseSB3YWdlIGluIDIwMTAgZm9yIGphbml0b3JzIG5hdGlvbndpZGUgd2FzICQxMC42ODsgdGhlIG1lZGlhbiBhbm51YWwgc2FsYXJ5IHdhcyAkMjIsMjEwLiBCZW5lZml0IHBhY2thZ2VzIGZvciBmdWxsIHRpbWUgY3VzdG9kaWFucyBpbmNsdWRlIHZhY2F0aW9uLCBzaWNrIGRheXMsIGhlYWx0aCBpbnN1cmFuY2UgYW5kLCBzb21ldGltZXMgYSBwZW5zaW9uLiAKRHVyaW5nIHRoZSBzdW1tZXIgb2YgMTkzOCBKZXdpc2ggcHJvZmVzc2lvbmFscyB3ZXJlIGJhbm5lZCBmcm9tIHRoZWlyIGpvYnMuIApOb3csIGlmIGl0IHdhcyBqdXN0IHBsYWluIHlvdSBjb3VsZCBzYXkgdGhhdCBpdCBzaW1wbHkgcmVmZXJyaW5nIHRvIGhvdyBoYW5kYmFsbCBwbGF5ZXJzIGhhdmUgZ29vZCBza2lsbCwgYW5kIHNheSB0aGVyZSdzIG5vIHNleHVhbCBwdW4gaW50ZW5kZWQsIGJ1dCB0aGV5IGVuZGVkIHRoZSBzZW50ZW5jZSB3aXRoICAgIHdoaWNoIGlzIGFub3RoZXIgcGhyYXNlIHVzZWQgb2Z0ZW4gdG8gY2FsbCBpbiBjdXN0b21lcnMgaW4gcHJvc3RpdHV0aW9uLiBZb3UgaGVhciB0aGUgd29yZHMgV2UgaGF2ZSBwbGVudHkgb2YgaG90IGNoaWNrcyBoZXJlISkgZnJvbSBreWFiYWt1cmEgLyBmdXV6b2t1IHRvdXRzIHdoZW4geW91IHdhbGsgYnkgcmVkIGxpZ2h0IGRpc3RyaWN0cy4uIApBdCBvbmUgcG9pbnQsIExpdHRsZSBjaGFzdGlzZWQgYSB0YWJsZSBvZiBtZW4gaW4gZnJvbnQgb2YgaGVyIGZvciB0YWxraW5nIHdoaWxlIHNoZSB3YXMgc2luZ2luZy4gClllYWggd2hhdCBJIGFtIHNheWluZyBpcyB0aGF0IGV2ZW4gbW9zdCBlbmdpbmVlcnMgd291bGQgZHJvcCBldGhpY3MgYXQgYSBwcmljZSBwb2ludC4gU3VyZSBTT01FIGVuZ2luZWVycyB2YWx1ZSBldGhpY3MgYnV0IG5vdCBlbm91Z2ggd2hlcmUgaWYgeW91IGFyZSBub3QgZXRoaWNhbCwgaXQgd2lsbCBpbXBhY3QgeW91IG5lZ2F0aXZlbHkuCkJ1c2ggYW5kIG90aGVyIFJlcHVibGljYW4gYWRtaW5pc3RyYXRpb25zLiAKUHJlc2lkZW50IEJhcmFjayBPYmFtYSBzaWducyB0aGUgSm9obiBNLiBSb2xsIFVuaXRlZCBTdGF0ZXMgQ291cnRob3VzZSBCaWxsIGludG8gbGF3IGluIHRoZSBPdmFsIE9mZmljZSBvZiB0aGUgV2hpdGUgSG91c2UgYXMgKEwgUikgSG9tZWxhbmQgU2VjdXJpdHkgU2VjcmV0YXJ5IGFuZCBmb3JtZXIgQXJpem9uYSBHb3Zlcm5vciBKYW5ldCBOYXBvbGl0YW5vLCBTZW4uIApEaXNjdXNzIEhlYWx0aCBhaW1zIHRvIGdpdmUgeW91IHNpbXBsZSB0byB1bmRlcnN0YW5kIGluZm9ybWF0aW9uIG9uIGhlYWx0aC4gSWYgeW91IGZpbmQgb3VyIGFydGljbGVzIHVzZWZ1bCwga2luZGx5IGNsaWNrICIrMSIgYnV0dG9uIGFuZCByZWNvbW1lbmQgdXMgdG8geW91ciBmcmllbmRzLiBUaGFuayB5b3UuIApUaGV5J3ZlIGFkb3B0ZWQgdGhlIHZhcmlvdXMgc3RhdGUgZ292ZXJubWVudCBhbmQgZ2FtaW5nIGluZHVzdHJ5IGNvZGVzIG9mIHByYWN0aWNlIGFpbWVkIGF0IHJlZHVjaW5nIHByb2JsZW0gZ2FtYmxpbmcgKHJlcXVpcmluZyBzaWducyB0aGF0IHdhcm4gb2YgdGhlIGRhbmdlcnMgb2YgZ2FtYmxpbmcgYW5kIHRoYXQgYWR2ZXJ0aXNlIGhlbHAgaG90bGluZXMpLiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnb1dhdGNoZWQgYSBmZXcgZ29vZCBvbmVzIGluIG15IHRpbWUuIEZhdm9yaXRlIGJ5IGZhciB3YXMgdGhlIDIwMTAgUm9tYW5jZSBvZiB0aGUgVGhyZWUgS2luZ2RvbXMgc2VyaWVzLiBMb2FkcyBvZiBhY3Rpb24sIHBvbGl0aWNzIGFuZCBmb3IgdGhlIG1vc3QgcGFydCBwZW9wbGUgbW9yYWxzIGFyZSBncmV5IGFuZCBub3QgYmxhY2sgdmVyc3VzIHdoaXRlLk9uIHRoYXQgdmFpbiBJIGxpa2VkICJ0aGUgc3RyYXRlZ2lzdHMgYWxsaWFuY2UuIiBJIGEgbGlsIGJpYXNlZCBiZWNhdXNlIFNpbWEgWWkgaXMgbXkgZmF2b3JpdGUgY2hhcmFjdGVyIGZyb20gUk9USyBidXQgb3ZlcmFsbCBpdCBiZWVuIGEgZ29vZCBzaG93IHNvIGZhci5JIG9jY2FzaW9uYWxseSBnZXQgYSBjaHVja2xlIG91dCBvZiAiSWYgeW91IGFyZSB0aGUgb25lLiJXYXRjaGVkIGEgdHYgc2VyaWVzIHllYXJzIGFnbyBjZW50ZXJlZCBvbiBHZW5naGlzIEtoYW4sIHRob3VnaHQgdGhhdCBvbmUgd2FzIHByZXR0eSBnb29kLk1pbmcgZHluYXN0eSAxNTY2IGhhcyBiZWVuIGFub3RoZXIgc2hvdyBJIGJlZW4gd2F0Y2hpbmcgb24gYW5kIG9mZi4gCkhlIHdvdWxkIHByb2JhYmx5IGRyb3AgS2luZ3MgYW5kIG1hbnkgb3RoZXIgaGFuZHMgaW4gdGhpcyBzaXR1YXRpb24sIGJ1dCBvZiBjb3Vyc2UgUm9iZXJ0IGhhZCBBY2VzLiAKV2UgYXJlIGFic29sdXRlbHkgc3Vycm91bmRlZCBieSBnYWxheGllcy4KT2RlciBXZWxsbmVzcy4gCkkgZm9sZC4gVGhlcmUgd2FzIGJldHRpbmcgZXZlcnkgc3RyZWV0LiBIZSBzaG93cyBBY2UgUXVlZW4uIApTbyBzaGUgc3RhcnRlZCBkb2luZyBzb21lIHJlc2VhcmNoLiAiSSByZWFkIHBzeWNoaWF0cmljIGJvb2tzIGFuZCB3ZW50IG9uIGludGVybmV0IGNoYXQgc2l0ZXMgd2hlcmUgc2V4IGFkZGljdHMgdGVsbCBlYWNoIG90aGVyIGFib3V0IHRoZWlyIHN1ZmZlcmluZywgbGlrZSBkcnVnIGFkZGljdHMgb3IgYWxjb2hvbGljcywiIHNoZSBleHBsYWluZWQuIApUaGUgaWRlYSBpcyB0aGF0IGEgcGxheWVyIHdobyBkaWQgbm90IHdhbnQgdG8gYmUgdGhlIGRlYWxlciBjb3VsZCBwYXNzIHRoZSBidWNraG9ybiBrbmlmZSwgdGhhdCBpcyJwYXNzIHRoZSBidWNrLCIgYW5kIG1ha2UgdGhlIG5leHQgcGxheWVyIHRha2UgdXAgdGhlIHJlc3BvbnNpYmlsaXR5IG9mIGRlYWxpbmcuIApXb3VsZCBJIHdvcmsgYXQgYSByZXN0YXVyYW50IHRoYXQgcGFpZCBtZSB3ZWxsIGFuZCBpbmZvcm1lZCBjdXN0b21lcnMgdGhhdCB0aGV5IGRpZG4gbmVlZCB0byB0aXAuIGl0IGRlcGVuZHMgaXMgdGhpcyByZXN0YXVyYW50IHBheWluZyBtZSAkMTIsIDE0LCAxNywgMTgrPwpUaGlzIGlzIG9uZSBvZiB0aG9zZSB0aW1lcyB3aGVyZSBzY2llbmNlIHByZWNlZGVzIGFydCB0aGF0IHRoZSBsZWFzdCBzaWduaWZpY2FudCBhc3BlY3Qgb2YgdGhpcyBpbWFnZSwgYXMgdGhlIGZvbGtzIHNlZWluZyBpdCBpbiAxODg0IGNvdWxkbiBzZWUgaW50byB0aGUgZnV0dXJlIGRpZG4ga25vdyB0aGF0IHRoZXkgd2VyZSBsb29raW5nIGF0IHdoYXQgbWF5IHBhc3MgZm9yIHByZWhpc3RvcmljIGZvc3NpbCByZWNvcmQgb2YgRHVjaGFtcCAxOTEyIE51ZGUgRGVzY2VuZGluZy4gCkR1cmluZyB0aGUgd2ludGVyZmVsbCBiYXR0bGUgdGhlIG5pZ2h0IGtpbmcgYW5kIGhpcyBnZW5lcmFscyBzbmVhayBpbnNpZGUgb2Ygd2ludGVyZmVsbCB3aGVyZSB0aGF0IGJpZyB0cmVlIGlzLCBhbHNvIHRoYXQgd2hlcmUgYnJhbiBpcyBnb25uYSBiZSBkdXJpbmcgdGhlIHdhci4gCkFub3RoZXIgb25lIEkgcmVjYWxsLCBkb250IGFzayBtZSBmcm9tIHdoZXJlIGFuZCB3aGF0IHRpbWUsIHdvdWxkIGJlIGhhdmluZyB5b3VyIGxlZ3MgYW5kIGFybXMgYW1wdXRhdGVkIGF0IHRoZSBoaXBzIGFuZCBzaG91bGRlcnMuIFRoZSB3b3VuZHMgY2F1dGVyaXplZCBzbyB5b3UgZGlkbnQgYmxlZWQgdG8gZGVhdGgsIGFuZCB0aGVuIGhhdmluZyB5b3VyIGV5ZXMgcmVtb3ZlZC4gWW91IHdvdWxkIHRoZW4gYmUgZHVtcGVkIGluIHRoZSBjaXR5IHN0cmVldHMsIGhvcGluZyB0aGF0IHNvbWVvbmUgZWl0aGVyIGVuZGVkIHlvdXIgYWdvbnksIG9yIGtlcHQgeW91IGFsaXZlIGJ5IGZlZWRpbmcgeW91IGFuZCB0YWtpbmcgY2FyZSBvZiB5b3VyIHdvdW5kcy4uIApPbmUgd2VlayBpbnRvIG15IG1vc3QgcmVjZW50IFczMCwgd2Ugd2VudCB0byBhIG1lbW9yaWFsIHNlcnZpY2UgZm9yIGEgbG9uZyB0aW1lIGZhbWlseSBmcmllbmQuIE15IGh1c2JhbmQgaXMgRmlsaXBpbm8sIGFuZCB0aGlzIHdhcyBhIGh1Z2UgRmlsaXBpbm8gY29tbXVuaXR5IGV2ZW50LiAKRmlyc3QgaGUgaW5zaXN0ZWQgaGUgd2FudGVkIGV4dHJhcyBvbiBpdCBidXQgb25seSB3YW50ZWQgdG8gcGF5IHRoZSBiYXNlIHByaWNlLCBidXQgYWZ0ZXIgYSBmZXcgbWludXRlcyBvZiBhcmd1aW5nIGhlIHJlbGVudGVkIGFuZCBqdXN0IGJvdWdodCBpdCB3aXRob3V0IGV4dHJhcy4gVGhlbiB3aGVuIEkgYnJvdWdodCBpdCBvdXQgaGUgY2xhaW1lZCBoZSBwYWlkIGZvciB0aGUgZXh0cmFzLCBJIHRvbGQgaGltIHdlIGxpdGVyYWxseSBqdXN0IGFyZ3VlZCBvdmVyIHRoYXQgYW5kIGhlIGp1c3QgYm91Z2h0IGl0IHdpdGhvdXQsIGFuZCBoZSBzdGFydGVkIHNob3V0aW5nIGFuZCBnb3QgcmVhbGx5IGZ1Y2tpbmcgYW5ncnkuIApQdWJsaXNoZXJzIHdlcmUgc3RlYWxpbmcgZnJvbSBoaW0gYnkgcGlyYXRpbmcgaGlzIHdvcmsgYW5kIGJlZm9yZSBoZSBiZWNhbWUgYXdhcmUgb2YgKG9yIG1ldCkgdGhlIGNyZWF0b3Igb2YgdGhlIGRldGVjdGl2ZSBpbiBmaWN0aW9uLCBFZGdhciBBbGxlbiBQb2UuIEFsc28gV2lsa2llIENvbGxpbnMgKDE4MjQgMTg4OSkgYW5vdGhlciBnb29kIGZyaWVuZCBvZiBEaWNrZW5zIGNvbnNpZGVyLCB0aG91Z2ggaGlzIGRldGVjdGl2ZSB3b3JrIGluIGxpdGVyYXR1cmUgY29tZXMgYWZ0ZXIgRGlja2VucyBjcmVhdGlvbnMuIFdvcmsgb24gZmluZ2VycHJpbnRzIHVzZWQgaW4gdGhlIGlkZW50aWZpY2F0aW9uIG9mIGNyaW1pbmFscyB3YXMgdW5kZXJ0YWtlbiBlYXJsaWVyIGluIHRoZSAxODYwIGJ5IFdpbGxpYW0gSmFtZXMgSGVyc2NoZWwsIHRob3VnaCBHYWx0b24gd29yayB3YXMgb2YgYSBmYXIgbW9yZSBzY2llbnRpZmljIG5hdHVyZS4uIApVUyBoZWFsdGggY2FyZSBpcyB0aGUgYmVzdCBpbiB0aGUgd29ybGQgZm9yIHRoZSByaWNoIGFtb25nIHVzLiAKQW5kIDggaG91cnMgaXMgZW5vdWdoIHRpbWU/IDE2MyBwZW9wbGUsIG1vc3Qgb2Ygd2hvbSBwcm9iYWJseSBkb24gc3BlYWsgRW5nbGlzaC4gCkxlZnJlbmNoNzVKZXJlbXkgTGluIGZ1dHVyZSB3aWZlIGJjIGhlIG1vdmluZyB0byBteSBjaXR5IHkgIDEyOCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpFbiBlZmZldCwgcmllbiBkZSBiaWVuIGludHJlc3NhbnQgZGFucyBsYSB2aWxsZSBkZSBMeW9uLCBwb3VydGFudCBycHV0ZSBlbiBsYSBtYXRpcmUsIHBvdXIgY2F1c2UgZGUgdGVtcHMsIGRlIGxpZXUsIGRlIHByaW9yaXRzLiAKTXkgZmlyc3Qgc2F1bmEgZXhwZXJpZW5jZSBpbiBHZXJtYW55IHdhcyBhdCBGcmllZHJpY2hzYmFkIGluIEJhZGVuIEJhZGVuIGFuZCBJIHdlbnQgYmFjayBhZ2FpbiB0aGlzIHllYXIgZm9yIG15IGJpcnRoZGF5LiBIZXJlIHdoYXQgSSBjYW4gdGVsbCB5b3UgYWJvdXQgdGhlcmUgc3BlY2lmaWNhbGx5OlRoZXkgaGF2ZSBhIHN0YXRpb24gc3lzdGVtIHdpdGggc3VnZ2VzdGlvbnMgZm9yIGhvdyBsb25nIHlvdSBzaG91bGQgc3BlbmQgYXQgZWFjaCBzdGF0aW9uLiBUaGUgbGFzdCBpcyBhICJyZWFkaW5nIHJvb20iIHdoaWNoIGlzIGtpbmRhIEJTLCBzbyB5b3UgY2FuIHRha2UgbG9uZ2VyIGluIG90aGVyIHNlY3Rpb25zIGFuZCBza2lwIHRoZSByZWFkaW5nIHJvb20gaWYgeW91IHdhbnQuVGhleSBoYXZlIGRheXMgZXZlcnkgd2VlayB3aGVyZSB0aGUgYnVsayBvZiB0aGUgc2F1bmEgc3RhdGlvbnMgYXJlIHNlcGFyYXRlIHNleGVzIGlmIHlvdSBtb3JlIGNvbWZvcnRhYmxlIHdpdGggdGhhdCwgdGhvdWdoIHRoZXJlIGFyZSB0d28gc2hhcmVkIHBvb2xzIGluIHRoZSBtaWRkbGUuWWVhaCwgZG9uIHN0YXJlIHRvbyBtdWNoLiAKSXQgaGFwcGVucyBzbyBmYXN0LCBoZSBzYWlkLCB0aGF0IG5vIG9uZSByZWFsaXplcyBpdCB1bnRpbCBpdCdzIHBhcnQgb2YgdGhlIGZhYnJpYy4gVGFrZSByZWFsIHRpbWUgc3BvcnRzIGJldHRpbmcuIEEgZmV3IHllYXJzIGFnbywgcGVvcGxlIHdvdWxkIGJlIGJldHRpbmcgb24gd2hvIHdvbiBvciBsb3N0IGEgbWF0Y2guIApTb21lIHBlb3BsZSBhcmUgZXh0cmVtZWx5IHVubHVja3kgbGlrZSBteXNlbGYgYW5kIHRoZSBiYWN0ZXJpYSBjcm9zc2VzIHRoZSBibG9vZCBicmFpbiBiYXJyaWVyIGFuZCBlbnRlcnMgdGhlIENOUyB3aGljaCBjYXVzZXMgaW50ZW5zZSBjb25zdGFudCBwYWluLCBzb21ldGltZXMgcGFyYWx5c2lzLCBhbmQgZGVjcmVhc2VzIGJyYWluIGZ1bmN0aW9uLiAKV2l0aCB0aGF0IGluIG1pbmQsIGhlcmUgYSBoYW5kIGZyb20gRGF5IDFDIG9mIHRoZSBNYWluIEV2ZW50OiBOZWdyZWFudSBpcyBob2xkaW5nIDggNiBvZiBzcGFkZXMsIGFuZCBoaXMgb3Bwb25lbnQsIFZpY3RvciBTYXVtb250LCBoYXMgYSBwYWlyIG9mIGtpbmdzLiBXaXRoIEFjZSBRdWVlbiA2IG9uIHRoZSB0YWJsZSwgU2F1bW9udCAob3ZlciA2NUsgaW4gY2hpcHMpIHRocm93cyBpbiAyLDcwMCwgcHJvYmFibHkgZmVhcmluZyBOZWdyZWFudSBob2xkaW5nIGFuIGFjZS4KRmFsayB0aHJvd3MgMyBURHMsIE5vLiAxOSBXYXNoaW5ndG9uIFN0YXRlIGJlYXRzIFV0YWggMzMgMjVXYXNoaW5ndG9uIFN0YXRlIHYgVXRhaFNBTFQgTEFLRSBDSVRZLCBVVCAgIE5PVkVNQkVSIDExOiBRdWFydGVyYmFjayBMdWtlIEZhbGsgNCBvZiB0aGUgV2FzaGluZ3RvbiBTdGF0ZSBDb3VnYXJzIGxvb2tzIHRvIHBhc3MgdGhlIGJhbGwgZHVyaW5nIHRoZWlyIGdhbWUgYWdhaW5zdCB0aGUgVXRhaCBVdGVzIGF0IFJpY2UgRWNjbGVzIFN0YWRpdW0gb24gTm92ZW1iZXIgMTEsIDIwMTcgaW4gU2FsdCBMYWtlIENpdHksIFV0YWguIApUaGlzIHNob3VsZCByZW1vdmUgdGhlIGVudGlyZSB0aWNrICAgaW5jbHVkaW5nIHRoZSBoZWFkLiAKUmVnYXJkbGVzcywgSSBmb3VuZCBpbXByb3YgdGhlYXRlciBjbGFzc2VzIGludmFsdWFibGUgdG8gYmVjb21pbmcgYSBiZXR0ZXIgRE0uIEl0IGZvcmNlcyB5b3UgdG8gZGV2ZWxvcCBtZW50YWwgZmxleGliaWxpdHkgYW5kIGhhbmRsZSBvZGQgc2l0dWF0aW9ucywgd2hpY2ggaXMgd2hhdCBwbGF5ZXJzIGRvIHRvIHVzIGFsbCB0aGUgdGltZS4KSW4gdGhpcyBtYXJrZXQsIHlvdSBtaWdodCBnZXQgYSBmZXcgbW9yZSBubydzIHRoZW4geW91IHdvdWxkIGhhdmUgaW4gMjAxMSwgMjAxMiwgYnV0IHlvdSBoYXZlIHRvIHN0YXkgcGVyc2lzdGVudCBhbmQgY29uc2lzdGVudC4gClRob3VnaCBpdCBjb3VsZCB0YWtlIGEgbnVtYmVyIG9mIG1vbnRocyBiZWZvcmUgd2UgZ2V0IGEgZmluYWwgY29uY2x1c2lvbiBpbiBDYWxpZm9ybmlhLCB0aGlzIGlzIHRoZSBmaXJzdCB0aW1lIGEgYmlsbCB3aXRob3V0IGEgc28gY2FsbGVkICdiYWQgYWN0b3InIGNsYXVzZSBoYXMgYmVlbiBpbnRyb2R1Y2VkLCBoZSBzYWlkLiAKSnVzdCBiZWNhdXNlIHlvdSBoYXZlIGEgZGVmaW5lZCBidWRnZXQgZWFjaCB5ZWFyIGRvZXNuIG1lYW4geW91IGNhbiBzcGVuZCBpdCB3aXRob3V0IGFwcHJvdmFsIG9yIG92ZXJzaWdodC4gSW4gYW55IGNvbXBhbnksIHB1YmxpYyBvciBwcml2YXRlLCB0aGUgQ0ZPIHdpbGwgcHJvdmlkZSBndWlkZWxpbmVzIGZvciByZXZlbnVlIGdlbmVyYXRpb24gYW5kIHN1cHBvcnQgb3JnYW5pemF0aW9ucyB0byBzdXBwb3J0IHRoZSBvdmVyYWxsIGZpbmFuY2lhbCBoZWFsdGggb2YgdGhlIG9yZ2FuaXphdGlvbi4gCkRpZXRhcnkgdml0YW1pbiBEIGludGFrZSB3YXMgZXhhbWluZWQgZGlyZWN0bHkgaW4gcmVsYXRpb24gdG8gcmlzayBvZiBNUyBpbiB0d28gbGFyZ2UgY29ob3J0cyBvZiB3b21lbjogdGhlIE51cnNlcycgSGVhbHRoIFN0dWR5IChOSFM7IDkyLDI1MyB3b21lbiBmb2xsb3dlZCBmcm9tIDE5ODAgdG8gMjAwMCkgYW5kIE51cnNlcycgSGVhbHRoIFN0dWR5IElJIChOSFMgSUk7IDk1LDMxMCB3b21lbiBmb2xsb3dlZCBmcm9tIDE5OTEgdG8gMjAwMSkuIApBYm91dCB0aGUgQW1lcmljYW4gQ29sbGVnZSBvZiBTcG9ydHMgTWVkaWNpbmUgKEFDU00pCkFJUiBEQUQ6IE1hcmN1cyBDYXBlcnMgdXNlZCBoaXMgdHdvIHdlZWsgYnJlYWsgYmV0d2VlbiBMaWdodG5pbmcgY29udGVzdHMgdG8gd29yayBvbiBoaXMgY2xlYW5pbmcgZ2FtZS4KQW5kIHNvIHRoZSByZWFsIHRyaWNrIHRvIGNyZWF0aW5nIHJlY2Vzc2lvbiBwcm9vZiBidXNpbmVzc2VzIGlzIHRvIHBsYXkgb24gdGhlIHByb21pc2Ugb2Ygcm9tYW5jZTogYSBoYXBwaWx5IGV2ZXIgYWZ0ZXIgbGlmZSB3aXRoIG5vIHdvcnJpZXMgYWJvdXQgZmluYW5jaWFsIG9yIGVtb3Rpb25hbCBvciBldmVuIHNleHVhbCBuZWVkcy4gTGlwc3RpY2ssIGJvb2Igam9icywgYW5kIEZvcmtzLCBXYXNoaW5ndG9uLiBBIGZvb2xwcm9vZiBmb3JtdWxhIGZvciBtYWtpbmcgbW9uZXkgaW4gdG91Z2ggdGltZXMuClRoZXJlIGlzIGFsc28gdGhlIHF1ZXNyaW9uIG9mIGhvdyBzaGUgaXMgdHJhbnNwb3J0aW5nIHRoZSBtZWRpY2F0aW9uLiBNYW55IHBsYWNlcyBoYXZlIGxhd3Mgc3RhdGluZyB0aGF0IHlvdSBjYW4gb25seSB0cmFuc3BvcnQgeW91ciBtZWRpY2F0aW9uIGluIHRoZWlyIG9yaWdpbmFsIHBpbGwgYm90dGxlcyAoeW91IHJhcmVseSBhY3R1YWxseSBnZXQgaW4gdHJvdWJsZSBmb3IgaXQsIGJ1dCB0ZWNobmlxdWVseSBjYXJyeWluZyBwaWxscyBpbiBhIHBpbGxib3ggb24geW91ciBwZXJzb24gaXMgaWxsZWdhbCkKVGhpcyBpcyBhIGdsb2JhbCBwcm9ibGVtLiBNb3JlPj5EaXJ0eSBQb2xpdGljcyBDbGVhbnVwOiBOaWNreSBIYWdlciBTZXR0bGVzIFdlc3RwYWMgRGlzcHV0ZVVuZGVyIHRoZSBzZXR0bGVtZW50IGFncmVlbWVudCBhbm5vdW5jZWQgdG9kYXksIFdlc3RwYWMgd2lsbCBiZSBzaWduaWZpY2FudGx5IHRpZ2h0ZW5pbmcgaXRzIGNvbnRyYWN0dWFsIHRlcm1zIGluIHJlbGF0aW9uIHRvIHRoZSByZWxlYXNlIG9mIGN1c3RvbWVyIGluZm9ybWF0aW9uIHRvIGdvdmVybm1lbnQgYWdlbmNpZXMsIGluY2x1ZGluZyB0aGUgUG9saWNlIFdlc3RwYWMgaGFzIGFwb2xvZ2lzZWQgdG8gTXIgSGFnZXIgZm9yIHJlbGVhc2luZyBoaXMgaW5mb3JtYXRpb24gYW5kIGhhcyBhZ3JlZWQgdG8gcGF5IGhpcyBjb3N0cyBhbmQgY29tcGVuc2F0aW9uLiBNb3JlPj4uIApUaGUgZmxpcCBzaWRlIGlzIHRoYXQgbWFueSBvZiB0aGUgZGVidG9ycyBmb3IgdGhpcyBhcmUgZXNzZW50aWFsbHkgaW5kZW50dXJlZCBzZXJ2YW50cywgdGhlaXIgaW50ZXJlc3QgcmF0ZSBpcyB0b28gaGlnaCBhbmQgdGhleSBoYXZlIG5vIHdheSBvdXQuIFRoZSBwcmVkYXRvcnkgbG9hbnMgc29tZSBwZW9wbGUgdGFrZSBvdXQgYmVjYXVzZSB0aGV5IGFyZSB0aGUgbmV4dCBNYXJrIFp1Y2tlcmJlcmcgaW4gdGhlaXIgbWluZHMgaXMgdW50aGlua2FibGUuIEkganVzdCBkb24gd2FudCB0byBiZSBzYWRkbGVkIHdpdGggdGhlIGNvc3RzIChhcyBhIHRheHBheWVyKSBmb3IgcGVvcGxlIHdobyBtYWRlIG9idmlvdXNseSBiYWQgZGVjaXNpb25zLiAKU28gSSBib3VnaHQgYW4gUkVPIGZyb20gYSBiYW5rIGZvciAkODUsNTAwLiAKVGhpcyBpcyB3aGVyZSBSdWxlcyBhcyBJbnRlbmRlZCBjb21lcyBpbiB0byBnaXZlIHVzIGEgaGVscGluZyBoYW5kLgpIUSBUcml2aWEgcmFpc2VkICQxNSBtaWxsaW9uIHRoaXMgeWVhciBhbmQgd2FzIHZhbHVlZCBhdCBhYm91dCAkMTAwIG1pbGxpb24uIEluIFNlcHRlbWJlciwgS3JvbGwgcmVwbGFjZWQgWXVzcG92IGF0IHRoZSB0b3Agb2YgdGhlIGNvbXBhbnkgcmVwb3J0ZWRseSBiZWNhdXNlIG9mIGNvbmNlcm5zIGFib3V0IHN0cmF0ZWd5LiAKRWxsaW90IG51bWJlciBvbmUgZ29hbGllIGhlIG5vdCB0b28gb2xkIG9yIHRvbyBza2lsbGVkLiBIZSBzb21ldGltZXMgZmVlbCB0aGF0IGhlIGxvdiBpdCBhbmQgaGF0ZSBpdCwgaSBzdXJlIGhlIGhhdmUgY2hlcyBwcm90ZWN0b3IgYnJlYWsgbGlrZSBtZSBndXlzIGhpdCBtZSBpbiBzYW1lIHNwb3Qgd2h5IHNvIHBhaW5mdWwgSSBkb24gd2FudCB0byBiZSBnb2FsaWUgbm93IGlzIGhvdyBlbGxpb3QgZmVlbCBidXQgdGhhdCB3aWxsIHNvb24gcGFzcy4gCkkgc2VlIHRoZXJhcHkgYXMgYSBwZXJzb25hbCB0cmFpbmVyIGZvciB0aGUgbWluZC4uIApEZWZlbnNlIFJlc3RzIEFmdGVyIEp1c3QgVGhyZWUgV2l0bmVzc2VzCkhpcyBwYXJlbnRzIGRpdm9yY2VkIHdoZW4gaGUgd2FzIDE2IGFuZCBoZSBtb3ZlZCB0byBBbWFyaWxsbywgVGV4YXMsIHRvIGxpdmUgd2l0aCBoaXMgZmF0aGVyLiAKSW46IFdpbHNvbiwgTS4sIFdhbHNoLCBWLiAKV293LCB0aGUgVGV4YXMgUmVwdWJsaWNhbnMgbXVzdCBiZSB3YXRjaGluZyBzb21lIHByZXR0eSBzdHJvbmcgYW50aSBnYXkgcHJvcGFnYW5kYSwgbWF5YmUgZXZlbiBVZ2FuZGFuIGFudGkgZ2F5IHByb3BhZ2FuZGEsIGlmIHRoZXkgd2FudCB0byBzdGFydCBwdXR0aW5nIHBlb3BsZSBpbiBqYWlsIGZvciBoYXZpbmcgc2V4IHRoYXQgaXMgbm90ICJyZXByb2R1Y3RpdmUuIiB0aGF0IHdoYXQgc29kb215IGlzOiBub24gcmVwcm9kdWN0aXZlIHNleC4gUmVhbGx5LCBzdHJhaWdodCBjb3VwbGVzIGFyZSBvZnRlbiBndWlsdHkgb2YgaXQgdG9vIGlmIHRoZXkgZW5nYWdlIGluIG9yYWwgb3IgYW5hbCwgYnV0IHNvbWVob3cgdGhleSBub3QgdGhlIG9uZXMgdGFyZ2V0ZWQgYnkgdGhlIHBvbGljZS4gCk9uY2UgeW91IGZpbmQgYSBqb2IgcmVsYXRpbmcgdG8gdGhhdCB0YXNrLCB5b3UgZmVlbCBsaWtlIHlvdSBlaXRoZXIgMSA6IG5lZWQgdG8gY2F0Y2ggdXAgdG8gZ2V0IHByb21vdGVkLiBPciAyIDogYW5vdGhlciBjb29sIHRlY2hub2xvZ3kgY29tZXMgaW50byBwbGF5LiBBbmQgdGh1cywgb25jZSBhZ2FpbiAgIHlvdSBuZWVkIHRvIGxlYXJuIG1vcmUgcHJvZ3JhbW1pbmcgZnJhbWV3b3JrICAgd2hpbGUgY29tcGV0aW5nIHdpdGggdGhlIG5ldyBmcmVzaCBncmFkIGZvciB0aGVzZSBqb2JzLi4gCllvdSBkZXRhaWxpbmcgRGVtb2NyYXRzIHBlcmZlY3RseS4gRGVtb2NyYXRzIHB1dCBUcnVtcCBpbiBvZmZpY2UgYWZ0ZXIgY2hlYXRpbmcgQmVybmllIGFuZCBpbGxlZ2FsbHkgZGVmcmF1ZGluZyBtaWxsaW9ucyBvZiBkb25vcnMgb3V0IG9mIG1pbGxpb25zIG9mIGRvbGxhcnMuIEJlcm5pZSBoYXMgYmVlbiBxdWlldCBkb2NpbGUgYWJvdXQgaXQgYWxsIGFuZCBpZiB5b3UgdHJ5IHRvIHRlbGwgdGhlIHRydXRoIGFib3V0IGFsbCBvZiB0aGlzIG9uIFJlZGRpdCB0aGVuICJwcm9ncmVzc2l2ZXMiIHdpbGwgYXR0YWNrIHlvdSBmb3IgaXQuIApTbWFydCBUVnMgKGFuZCBpbnRlcm5ldCBub3Qgb24gYW4gYWN0dWFsIGNvbXB1dGVyKSBhcmUgcHJldHR5IGNvbW1vbiBub3csIGJ1dCBhdCB0aGUgdGltZSwgSW50ZXJuZXQgb24geW91ciBUViB3YXMgYmFzaWNhbGx5IGp1c3Qgd2VicGFnZXMsIHRoYXQgeW91IGRpZG4gcmVhbGx5IHJlbmRlciBwcm9wZXJseSB1bmxlc3MgdGhlIHBhZ2Ugd2FzIG9wdGltaXplZCBmb3IgaXQuLiAKQXMgbWF5IGJlIGV4cGVjdGVkLCBpZiB5b3UgaGF2ZSBhbiBlbnRpcmUgZ2FtZSByb29tIGRlZGljYXRlZCB0byBwb2tlciwgdGhhbiB5b3UgYXJlIGxpa2VseSB0byB3YW50IHNldmVyYWwgZGVja3Mgb2YgY2FyZHMgdG8gcHV0IGluIHRoZSByb29tLiAKT3RoZXIgY2lkZXIgcHJvZHVjaW5nIGFyZWFzIHN1Y2ggYXMgTm9ybWFuZHkgYW5kIEJyaXR0YW55IGhhdmUgYSBzdHJvbmcgdHJhZGl0aW9uIG9mIGNpZGVyIHJlY2lwZXMsIGZyb20gbXVzc2VscyBzdGVhbWVkIGluIGNpZGVyIChtb3VsZXMgIGxhIE5vcm1hbmRlKSB0byBwb3VsZXQgYXUgY2lkcmUgKGNoaWNrZW4gYnJhaXNlZCB3aXRoIGNpZGVyIGFuZCB0aGUgbG9jYWwgdGhpY2sgY3JlYW0pLgpCdXQgd2l0aCBubyBvdGhlciByZWFkcyBteSB0aG91Z2h0IGlzIHRoYXQgaXMgc29tZXRoaW5nIGluIHRoZSBsb3dlciByYW5nZSBvZiB0aGUgb3JpZ2luYWwgcmFpc2VyLiAKJDE1IG1pbmltdW0gd2FnZSB3YXMgYSBuYXRpb25hbCBtb3ZlbWVudCBpbiAyMDEyIGFuZCBCZXJuaWUgdG9vayB1cCB0aGUgcG9zaXRpb24gaW4gMjAxMy4gCjEwKSBFZGd5IG1lbWVzIGFyZSBub3QgYWxsb3dlZCBhbmQgd2lsbCBiZSByZW1vdmVkLiBUaGVyZSBhcmUgdmVyeSBvYnZpb3VzIGxpbmVzIHRoYXQgc2hvdWxkbiBiZSBjcm9zc2VkLiBUaGlzIGluY2x1ZGVzIChidXQgaXMgbm90IGxpbWl0ZWQgdG8pIGpva2VzIGFib3V0IHBlZG9waGlsaWEvY2hpbGQgZXhwbG9pdGF0aW9uLCByYXBlLCBpbmNlc3QsIHRlcnJvcmlzdCBhdHRhY2tzLCBzY2hvb2wgc2hvb3RpbmdzLCBzZXh1YWwgYXNzYXVsdCwgYm9tYmluZ3MsIGFuZCBvdmVybHkgcmFjaXN0L3NleGlzdC9ob21vcGhvYmljIGpva2VzLiAKSG9yc2UgaXMgdGhlIHN0cm9uZ2VzdCBGaXJlIGFuaW1hbCBpbiAxMiB6b2RpYWNzLiAyMDE0IGlzIHllYXIgb2YgV29vZGVuIEhvcnNlLiAKIlRoZSBoeXBlcnZpc2liaWxpdHkgb2YgTXVzbGltcyBoYXMgYmVjb21lIGEgdG9waWMgb2YgbmF0aW9uYWwgZGViYXRlIGFuZCB3ZSBuZWVkIHRvIHVuZGVyc3RhbmQgdGhlIG1lZGlhJ3Mgcm9sZSBpbiBzZWN1cmluZyB0aGlzIGNsaW1hdGUgb2YgZmVhci4gQW55IHZpc3VhbCBpbmRpY2F0b3Igb2YgJ011c2xpbW5lc3MnIGlzIG5vdyBhcmd1ZWQgdG8gaGF2ZSBubyBwbGFjZSBpbiBjb250ZW1wb3Jhcnkgc29jaWV0eS4iVGhpcyBpcyBub3QgdG8gc2F5IHRoYXQgTXVzbGltIHdvbWVuIGFyZSBub3QgY2VsZWJyYXRlZC4gVGhleSBhcmUgY3JlYXRpbmcgdmlzaWJpbGl0eSBhbmQgc3BhY2UgZm9yIHRoZW1zZWx2ZXMgICBub3QganVzdCBmaWdodGluZyBmb3IgYWNrbm93bGVkZ2VtZW50LCBidXQgYnVpbGRpbmcgdGhlaXIgb3duIHN0YWdlcyBhbmQgaGlyaW5nIHRoZWlyIG93biBtaWNzIHRvIGFmZmlybSB0aGVtc2VsdmVzIGFuZCB0aGVpciBwZWVycy4gCldlIGFsc28gZmluZCBvdXQgdGhhdCB0aGUgTWNDYWluIGNhbXAga2VwdCBoZXIgIm11enpsZWQiIGFib3V0IGEgdmFyaWV0eSBvZiBpc3N1ZXMgYW5kIHdvdWxkbiBsZXQgaGVyIHNwZWFrIGhvbmVzdGx5IHRvIHRoZSBwcmVzcy5QZXJoYXBzIHRoZSBvbmx5IGludGVyZXN0aW5nIHRoaW5nIGNvbWVzIGZyb20gdGhlIGJvb2sgcHVibGljaXR5IGNhbXBhaWduLiAKQnV0IHNoZSBoYWRuIHN3dW0gaW4gbW9udGhzLiAKT25lcyB0aGF0IEkgYW0gbm93IG9uIHRoZSBmZW5jZSBhYm91dDoKSXQncyBub3QganVzdCBhIHNvbHV0aW9uLCBpdCdzIG9uZSBvZiB0aGUgYmVuZWZpdHMgb2YgWVRSZWQuIEkgaW5pdGlhbGx5IGdvdCBpdCBmb3IgdGhlIGFiaWxpdHkgdG8gZG93bmxvYWQgdmlkZW9zIHRvIEkgY291bGQgdGFrZSBtdXNpYyBvbiBteSBiaWtlIHJpZGVzIHdpdGhvdXQga2lsbGluZyBteSBkYXRhLiAKU2V1bGUgY2V0dGUgdm9sdXRpb24gcG91cnJhaXQgaW5mbGNoaXIgbGVzIHRlbmRhbmNlcyBldCBmYWlyZSBhbG9ycyBwcmVuZHJlIGNvbnNjaWVuY2UgYXV4IGFjdGV1cnMgZGUgbGEgZmlsaXJlIHF1J2lsIGZhdXQgZmFpcmUgbWFyY2hlIGFycmlyZSBzdXIgbGVzIGRyaXZlcyBwcm9kdWN0aXZpc3RlcyBwb3VyIHByc2VydmVyIHVuIHJlbCBhdmVuaXIgYXUgUGFpbiwgYmFzZSBkZSBub3RyZSBweXJhbWlkZSBhbGltZW50YWlyZSwgYmFzZSBkZSBub3RyZSBjdWx0dXJlLCBiYXNlIGRlIG5vdHJlIHNwaXJpdHVhbGl0Li4gCkFmdGVyIGFsbCwgQ3lwcnVzIGlzIGEgRXVyb2dyb3VwIGNsaWVudCBzdGF0ZSByaWdodCBub3csIGFuZCBoYXMgd291bmQgdXAgaW4gdGhpcyBzb3JyeSBwbGFjZSBhcyBhIHJlc3VsdC4gCk9uZSB0aGVvcnkgdGhlIGFuYWx5c3RzIGhhdmUgZm9yIHRoZSBsYWNrIG9mIGludGVyZXN0IGluIHRoZSBpUGhvbmUgNlMgaXMgdGhlIGRpc2FwcG9pbnRpbmcgbnVtYmVyIG9mIGFwcHMgdGhhdCBhY3R1YWxseSB1c2UgQXBwbGUgbmV3IDNEIFRvdWNoIGZ1bmN0aW9uLCBvbmUgb2YgQXBwbGUgbWFpbiBicmFnZ2luZyBwb2ludHMgZm9yIHRoZSBuZXcgcGhvbmUuCllvdSB3b250IGhhdmUgdG8gdHVybiBhd2F5IHRob3NlIHRoYXQgYXJlIGRlY2xpbmVkIGNvbnZlbnRpb25hbGx5LiAKQWRkIHRoZSB3aW5lIGFuZCBzY3JhcGUgdXAgYW55IGJyb3duZWQgYml0cyBvbiB0aGUgYm90dG9tIG9mIHRoZSBwYW4uIApJZiBJIGhhZCB0aGUgZG91Z2ggSSB3b3VsZCBkZWZpbml0ZWx5IGdldCBhIDUgY3VwIG9yIHNtYWxsZXIgSUggY29va2VyIGRlcGVuZGluZyBvbiB0aGUgc2l6ZSBvZiB5b3VyIGZhbWlseSBhbmQgeW91ciBuZWVkcy4gClNlYXJjaCByZXN1bHRzIGZvcjogZG93bmxvYWQgbm8gY2QgY3JhY2sgbWV0YWwgZ2VhciBzb2xpZCBwYyBmb3IgZnJlZS4gMjUgSnVsIDIwMTcgICAxMSBtaW4gICBVcGxvYWRlZCBieSBLYXlzZXIgU2FsdmF0b3JlVHV0b3JpYWwgICBJbnN0YWxhbyBQQVRDSCAyMDE3IERvd25sb2FkOiBNZXRhbCBHZWFyIFNvbGlkIDIgU3Vic3RhbmNlIG1lZ2E6RiFGY1FGU2JiUiAuIE1ldGFsIEdlYXIgU29saWQgMjogU3Vic3RhbmNlLiAKS2FpZGV5Q2FrZXMgIDU3IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KRGFuaXNoZWZza3kgd2FzIGZvdW5kIGp1c3QgYW4gaG91ciBlYXJsaWVyIGZhY2UgZG93biBpbiB0aGUgYmF0aHR1YiBieSBoZXIgOSB5ZWFyIG9sZCBkYXVnaHRlci4gSGVyIDMgeWVhciBvbGQgc29uIHdhcyBhc2xlZXAuClBhdGhmaW5kZXIgaXMgbXkgbWFpbiwgZm9yIGEgbG90IG9mIHJlYXNvbnMuIEZpcnN0LCBJIGhhZCBqdXN0IGJlYXRlbiBKdXN0IENhdXNlIDQgd2hlbiBBcGV4IGNhbWUgb3V0IGFuZCBJIGxvdmVkIHRoZSBncmFwcGxlIG1lY2hhbmljIGluIHRoYXQgZ2FtZS4gCk5ldyBwbGF5ZXJzIHdobyB3YW50IHRvIGxlYXJuIHRoZSBnYW1lIGNhbiBjaG9vc2UgZnJlZSBwb2tlciBzaXRlcyBvbmxpbmUsIGFsbG93aW5nIHBsYXllcnMgdG8gbGVhcm4gdGhlIGdhbWUgYW5kIHBsYXkgd2l0aCBjb21wbGV0ZWx5IHJpc2sgZnJlZSBhdHRpdHVkZS4gCkkgZnJlYWtlZCBvdXQgYW5kIGhhZCBhIGxvbmcgdGFsayB3aXRoIGhlci4gSSBrbm93IG9uZSBvdGhlciBFdXJhc2lhbiBjb3VwbGUgYW5kIHRoZWlyIGtpZHMgc2VlbSBmaW5lLCBidXQgSSB3YW50ZWQgdG8gY29uZmlybSB3aXRoIG90aGVyIHBlb3BsZSB0aGF0IGl0IG5vdCBhcyBiYWQgYXMgd2hhdCBJIHJlYWQuCkFpbnNpLCBheWFudCBwYXJ0aWNpcCAgdW4gdXRpbGUgY2hhbGxlbmdlIHZpZGUgcGxhY2FyZHMgcHJvcG9zIHBhciBDbG90aWxkZSBEdXNvdWxpZXIsIGonYWkgZmFpdCByY2VtbWVudCBsZSBwb2ludCBkZSBjZSBxdWkgZmlndXJhaXQgZGFucyBsZXMgbWllbnMgOiByaWVuIGRlIHRycyBleGNlc3NpZiwgaW51dGlsZSBvdSBwcmltIG1haXMgcXVhbmQgbW1lIGRlcyBmYXJpbmVzICBuZSBwYXMgdHJvcCBmYWlyZSB0YXJkZXIuIENlbGEgbSdhIGRvbm4gbGUgY291cCBkZSBwb3VjZSBwb3VyIGFjY2xyZXIgbGV1ciB1dGlsaXNhdGlvbi4gCk9uY2UgYWdhaW4gdGhlIGZlc3Rpdml0aWVzIHdpbGwgaW5jbHVkZSB0aGUgc2Vjb25kIGFubnVhbCBlZGl0aW9uIG9mIHRoZSBldmVyIHBvcHVsYXIgSW5rJ2QgT3V0IE1NQSBvdXRkb29yIGNhZ2UgZmlnaHRzLiBUaGUgSW5rJ2QgT3V0IHZzLiB0aGUgV29ybGQgc2hvd2Nhc2Ugd2lsbCBiZSBoZWxkIGluIHRoZSBNb3JnYW4gQ291bnR5IEZhaXJncm91bmRzIGFyZW5hIGluIEJydXNoIGFuZCB3aWxsIGZlYXR1cmUgbG9jYWwgZmlnaHRlcnMgaW5jbHVkaW5nIEpvdmFubnkgVmFsZXMsIEhlbnJ5IFNvbGlzLCBTaGFubm9uIEN1bHBlcHBlciBhbmQgQnJpdHRuZXkgRWxraW4uCkZpZ3VyZSBvdXQgd2hhdCdzIGRpZmZlcmVudCBpbiB0aGlzIHNjZW5hcmlvLCBhbmQgdXBkYXRlIHRoZSBudW1iZXJzIGFjY29yZGluZ2x5LiAKU2Fuc1RhbGVudCB1CkltaG8sIG1lZGljIGNsYXNzZXMgbmVlZGVkIGEgc2xpZ2h0IGJ1ZmYgYnkgYWxsb3dpbmcgdGhlbSB0byB1c2Ugc2VtaSBhdXRvIHJpZmxlcyBhbmQgdGhlIG5ldGNvZGUgbmVlZHMgdG8gYmUgZml4ZWQuCkkgc2VlIHNvIG1hbnkgInN0cm9uZyIgZmVtYWxlIGNoYXJhY3RlcnMgbGlrZSBHd2VuIFN0YWNleSBraWxsZWQgb2ZmIGluIHRoYXQgd29ybiB0cm9wZSBvZiAiZnVydGhlcmluZyBhIG1hbiBzdG9yeWxpbmUuIi4gClVsdGltYXRlbHksIGluIHByYWN0aWNlLCBlbXBsb3llcnMgY2FuIGNvbmR1Y3QgZmFpciBkcnVnIHRlc3RzIGluIHN0YXRlcyB3aGVyZSBtYXJpanVhbmEgaXMgbGVnYWwgYW5kIGZpcmUgZW1wbG95ZWVzIG9uIHRoaXMgZ3JvdW5kLCBidXQgbm90IGFsbCBlbXBsb3llcnMgYXJlIG5lY2Vzc2FyaWx5IHJlcXVpcmVkIHRvLi4gClRoZSBWU0Igc3RhdGVtZW50IGRpZG4gZGVzY3JpYmUgdGhlIGluY2lkZW50IG90aGVyIHRoYW4gdG8gc2F5IHRoYXQgbGlzdCBvZiBtZW1iZXJzIG9mIHRoZSBzY2hvb2wgY29tbXVuaXR5LCBjb250YWluaW5nIGluYXBwcm9wcmlhdGUgY29udGVudCwgd2FzIGNpcmN1bGF0ZWQuClRoZSBvbmx5IGV4Y3VzZSBmb3IgaHVtYW5zIGJlaW5nIGh5cG5vdGlzZWQgYnkgZmxhc2hpbmcgbGlnaHRzIGFuZCBiZWVwaW5nIG5vaXNlcyBpcyBDbG9zZSBFbmNvdW50ZXJzIG9mIHRoZSBUaGlyZCBLaW5kLiAKVGhlIGNvbXBhbnkgYmVsaWV2ZXMgaXQgd2lsbCBiZSBhYmxlIHRvIGRlbGl2ZXIgdGhlIHByb2plY3QgYnkgdGhlIDIwMjEgZGVhZGxpbmUsIGp1c3QgYmVmb3JlIHRoYXQgeWVhcidzIGVkaXRpb24gb2YgdGhlIENFUyB0ZWNoIGdhZGdldCBnYXRoZXJpbmcuIEl0IGlzIGFsc28gZXllaW5nIHRoZSBleHBhbnNpb24gcG9zc2liaWxpdHkuCldpdGggb25saW5lIHBva2VyIGFuZCBkb3plbnMgb2YgcG9rZXIgZ3VpZGVzIGF2YWlsYWJsZSAoaW5jbHVkaW5nIERveWxlIEJydW5zb24ncyBsZWdlbmRhcnkgKSwgc2tpbGxlZCwgdGFsZW50ZWQgcGxheWVycyBhcmUgZW50ZXJpbmcgdG91cm5hbWVudHMgd2l0aCBmYXIgbW9yZSBrbm93bGVkZ2UgdGhhbiB0aGVpciBleHBlcmllbmNlIHdvdWxkIGluZGljYXRlLiBUaGUgMjAwMyBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgd2lubmVyIGlzIHRoZSBwZXJmZWN0IGV4YW1wbGUgb2YgaG93IHBva2VyIGhhcyBjaGFuZ2VkLiBXaXRoIGEgc3Rvcnkgc3RyYWlnaHQgb3V0IG9mIGEgSG9sbHl3b29kIHNjcmlwdCwgQ2hyaXMgTW9uZXltYWtlciAoaGlzIHJlYWwgbmFtZSkgZWFybmVkIGEgcGxhY2UgaW4gdGhlIHRvdXJuYW1lbnQgYnkgZW50ZXJpbmcgYSAkNDAgb25saW5lIHBva2VyIHRvdXJuYW1lbnQuIFRvIGNsYWltIHRoYXQgcHJpemUsIE1vbmV5bWFrZXIgc2NyYXBlZCB0b2dldGhlciB0aGUgbW9uZXkgZm9yIGEgcGxhbmUgdGlja2V0IGFuZCBob3RlbCByb29tIHdpdGggdGhlIGhlbHAgb2YgaGlzIGZhdGhlciBhbmQgYSBmcmllbmQuIE9uY2UgdGhlcmUsIE1vbmV5bWFrZXIsIHdobyBoYWQgbmV2ZXIgcGxheWVkIGluIGEgdG91cm5hbWVudCB0aGF0IHdhc24ndCBvbiB0aGUgSW50ZXJuZXQgYmVmb3JlLCBmb3VuZCBoaW1zZWxmIGF0IHRhYmxlcyB3aXRoIHRoZSBiaWcgbmFtZXMgb2YgcG9rZXIuIERlc3BpdGUgdGhlIGludGltaWRhdGluZyBwcmVzZW5jZSBvZiB0aGVzZSBoZWF2eSBoaXR0ZXJzLCBNb25leW1ha2VyIGtlcHQgaGlzIGNvb2wgYW5kIGNhdWdodCBzb21lIGx1Y2t5IGJyZWFrcyBvbiBoaXMgd2F5IHRvIGEgJDIuNSBtaWxsaW9uIHBheW9mZi4gQnkgYWxsIGFjY291bnRzLCBNb25leW1ha2VyLCBhbiBhY2NvdW50YW50IGFuZCBhIGZhdGhlciwgZGlzcGxheWVkIGdyZWF0IHNwb3J0c21hbnNoaXAgYXQgdGhlIHRvdXJuYW1lbnQsIGFuZCBkb25hdGVkICQyNSwwMDAgb2YgaGlzIHdpbm5pbmdzIHRvIGNhbmNlciByZXNlYXJjaC4KV2hlbiBJIGZvdW5kIGFsbCB0aGF0IG91dCB2aWEgaGlzIG9iaXR1YXJ5LCBpdCB3YXMgbGlrZSBhIGxheWVyIG9mIGhpc3RvcnkgdGhhdCBpcyBzbyBvZnRlbiBpbnZpc2libGU6IGhvdyBoaXN0b3J5IHRvc3NlcyB1cyBhcm91bmQgbGlrZSBwaWVjZXMgb2YgZHJpZnR3b29kLiBIb3cgaGlzdG9yeSBpcyBhbHdheXMgdGFraW5nIHRoZXNlIHR3aXN0cyBhbmQgdHVybnMgYW5kIGl0IHRoZSByYXJlIHBlcnNvbiB3aG8gcmlkZXMgaGlzdG9yeSB3aXRoIHBlcmZlY3Qgc3VjY2Vzcy4uIApUaGlzIHNvdW5kcyBsaWtlIHRoZSBzaXR1YXRpb24gbXkgcGFyZW50cyBhcmUgaW4uIApJbiB0aW1lLCBteSBlY3plbWEgd2lsbCBiZSBmdWxseSBoZWFsZWQuIApQZXJzb25hbGx5LCBteSBodXNiYW5kIGFuZCBJIHRoaW5rIHRoYXQncyBhIGZhaXJseSBzbWFsbCBmaWd1cmUuIApXZSBnYXZlIG91cnNlbHZlcyA0IGhvdXJzICAgYW5kIHNpbmNlIHdlIGZseWluZyBmaXJzdCBJIHRoaW5rIHdlIHNob3VsZCBiZSBxdWlja2VyIHRvIGNvbm5lY3QgaWYgdGhlcmUgYXJlIGFueSBpc3N1ZXMuIApQaG9lbml4Z2hvc3RuYXRlICAxIHBvaW50ICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCkFyZSB5b3Ugc2VyaW91cz8gUmVwdWJsaWNhbnMgc2hpdCB0aGUgYmVkIHdoZW4gYSBEZW1vY3JhdCBzYXlzIGEgYmFkIHdvcmQgaW4gcHJpdmF0ZSwgYnV0IHRoZXkgY2FuIHllbGwgImdvIGJhY2sgdG8gUHVlcnRvIFJpY28iIHRvIHRoZWlyIGNvbGxlYWd1ZXMgd2hpbGUgaW4gc2Vzc2lvbi4gRGlkIHlvdSBmb3JnZXQgdGhhdCB0aGUgUmVwdWJsaWNhbiBwcmVzaWRlbnQgdHJpZWQgdG8gZGVueSBkaXNhc3RlciByZWxpZWYgZnVuZGluZyBhbmQgcHVycG9zZWZ1bGx5IGFjdGVkIHNsb3dseSByZXN1bHRpbmcgaW4gdGhlIGN1cnJlbnQgc2hpdCBzaG93LiBUaGUgZGVtb2NyYXRzIHZpc2l0IGFuZCBzdWRkZW5seSB0aGF0IGlzIGEgYmFkIHRoaW5nLiBUaGV5IGFyZSBvdXIgY291bnRyeW1lbiBhbmQgZGVzZXJ2ZSB0byBiZSBhY2tub3dsZWRnZWQuIFlvdXIgaW5hYmlsaXR5IHRvIHNlZSBob3cgdGhpcyBpcyBvZmZlbnNpdmUgZGVtb25zdHJhdGVzIHlvdXIgbGFjayBvZiBtYXR1cml0eSwgYW5kIEkgdGhpbmsgeW91IHNob3VsZCBxdWVzdGlvbiB5b3VyIG93biBncmFzcCBvZiBsb2dpYy4KQW55IHR3byBvYmplY3RzIG9yYml0IGVhY2ggb3RoZXIgYXJvdW5kIHRoZSBjZW50ZXIgb2YgbWFzcyBvZiB0aGUgc3lzdGVtLCB0aGUgYmFyeWNlbnRlci4gCldoYXQgbWFubmVycyBkbyB0aGV5IHRlYWNoIGF0IEFpdGNoZXNvbiwgT3hmb3JkIGFuZCB0aGUgcG9zaCBaYW1hbiBQYXJrLCBCYWxvY2hpc3RhbiBEb3N0YWluIERvbWtpIHdhcyBoZWFyZCBhc2tpbmcgaW4gdGhlIGxvYmJpZXMhIFdoaWxlIGhpcyBvd24gY2hpbGRyZW4gbGl2ZSB3aXRoIHRoZWlyIHdlbGwgbWFubmVyZWQgbW9tLCBJbXJhbiBpcyBhY2N1c2VkIG9mIHNwb2lsaW5nIGEgd2hvbGUgZ2VuZXJhdGlvbiBvZiBoaXMgeW91dGhmdWwgc3VwcG9ydGVycyBoZXJlLiBFdmVuIEltcmFuIGNsb3NlIGFpZGVzIGFkbWl0IHRoZXkgbWlnaHQgbG9zZSBzb21lIGNvbnNlcnZhdGl2ZSBzdXBwb3J0IGJlY2F1c2Ugb2YgdGhpcyBraW5kIG9mIHVuY291dGggbWFubmVyaXNtLiBUaGUgU2tpcHBlciB3aWxsIGhhdmUgdG8gZG8gbG90cyBvZiBleHBsYWluaW5nIGlmIGhlIGV2ZXIgY29tZXMgdG8gdGhlIFBhcmxpYW1lbnQgYWdhaW4uIApSZWdhcmRpbmcgdGhpcyBzdG9yeSwgSSBjb25zaWRlciB0aGlzIGEgbm90IHVucmVtYXJrYWJsZSB3aW4uIEl0J3MgYW4gZXhhbXBsZSBvZiBhbiBhbnRpIGd1biBwb2xpdGljaWFuIGV4cGxpY2l0bHkgc3Vib3JkaW5hdGluZyB0aGVpciB2aWV3cyBvbiBndW5zIHRvIHRoZWlyIG90aGVyIGxpYmVyYWwgdmFsdWVzLiBOb3cgSSdtIG5vIGh1Z2UgZmFuIG9mIEFPQyAgIGhlciB3aG9sZSBhbnRpIG1hcmtldCBmcmFtZXdvcmsgaXMgYW5hdGhlbWEgdG8gbXkgb3Jkb2xpYmVyYWwgYXNzLCBidXQgdGhpcyBpcyBleGFjdGx5IHRoZSBzb3J0IG9mIHRoaW5nIHRoYXQgSSB3YW50IHRvIHNlZSBoYXBwZW4gbW9yZSAgIGFzIGl0IHN0YXJ0cyB0byBlcm9kZSB0aGUgaWxsdXNpb24gb2YgYSBoYXJkIHBhcnR5IGxpbmUgb24gZ3VucyB0aGF0IGNvbXByb21pc2VzIGZvciBub3RoaW5nLgpIYXZpbmcgYmVlbiBpbiBjdXN0b2R5IHNpbmNlIEp1bmUgNiwgTmljaG9scycgdGVybSB3aWxsIGV4cGlyZSBvbiBTZXB0ZW1iZXIgNS4gCkJlbGlldmVzIHBva2VyIGlzIGEgc2tpbGwgZ2FtZSBhbmQgdGhhdCBoZSBpcyB0aGUgYmVzdCBwbGF5ZXIgaW4gdGhlIHRvdXJuYW1lbnQuLiAKSW4gMjAxNywgTWFycyBhaXJlZCBvbmUgY29tbWVyY2lhbCBmb3IgU2tpdHRsZXMsIGl0cyB0aGlyZCBjb25zZWN1dGl2ZSBiaWcgZ2FtZSBhZCBmb3IgdGhlIGNhbmR5LiBJdCBhbHNvIHJhbiBhIGxpdmUgY29tbWVyY2lhbCBmb3IgU25pY2tlcnMgc3RhcmluZyBBZGFtIERyaXZlciBpbiBhIHdlc3Rlcm4gc2NlbmUuLiAKQW1hbmRhOiBMaWZlIGhhcyBjaGFuZ2VkIGEgbG90LiBJbiBteSBmYXRoZXIncyB0aW1lLCB0aGV5IGRpZG4ndCBoYXZlIGEgbG90IG9mIHRoaW5ncyBsaWtlIEkgZG8uIApTbyB0aGF0IHByb3RlaW4gaW5zdGVhZCB0dXJucyBvbiBvdGhlciBwYXJ0cyBvZiB5b3VyIEROQSwgbGlrZSB0aGUgImJ1aWxkIGEgcmV0aW5hIEROQSIuIApXaHkgd291bGQgeW91IGJvdGhlciB1c2luZyBpbmNvZ25pdG8gb24geW91ciBvd24gY29tcHV0ZXI/IEkgdGhlIG9ubHkgb25lIHdpdGggdGhlIHBhc3N3b3JkIGFuZCBpdHMgbXkgY29tcHV0ZXIsIHNvIHdoeSB3b3VsZCBJIGJlIHdvcnJpZWQgYWJvdXQgb3RoZXIgcGVvcGxlIHNlZWluZyBteSBoaXN0b3J5PyBGdXJ0aGVybW9yZSwgd2h5IHNob3VsZCBJIGNhcmUgaWYgdGhleSBkbz8gSWYgeW91IHdhbm5hIG9wZW4gdXAgdGhhdCBib3ggb2Ygd29ybXMgYW5kIGNoZWNrIHdoYXQga2luZGEgcG9ybiBzb21lb25lIGxvb2tzIGF0LCB5b3UgZGVzZXJ2ZSB0byBzZWUgaXQgZm9yIHlvdXJzZWxmLiBBbmQgaXRzIG5vdCBsaWtlIGl0IGFmZmVjdHMgbWUuIFdoeSBkbyBJIGNhcmUgaWYgeW91IGtub3cgd2hhdCBJIHNwYW5rIGl0IHRvPyBXaGF0IHBvd2VyIGRvZXMgdGhhdCBnaXZlIHlvdSBvdmVyIG1lPyBPYnZpb3VzbHkgaWYgaXRzIHNvbWV0aGluZyBpbGxlZ2FsIHRoZW4geWVhaCwgYmxhY2ttYWlsLCBidXQgaWYgeW91IGtub3cgdGhhdCBJIGxpa2UgYmlnIHRpdHR5IGJsYWNrIG1pZGdldCBnYW5nYmFuZ3MsIHdoYXQgbGV2ZXJhZ2UgY2FuIHlvdSBwb3NzaWJseSBoYXZlIG92ZXIgbWU/CkhlcmUgaXMgYSBwaWN0dXJlIG9mIHRoZWlyIGxvYmJ5IGZvciB0aGUgY2FzaCBnYW1lIGJ1eSBpbnMuLiAKRG9uIHNlZSBpdCBhcyBjb2VyY2luZyBvciBjaGFuZ2luZyB0aGUgbWFya2V0IGl0c2VsZiwgaGUgc2FpZC4gbm90IGdvaW5nIHRvIG1ha2UgaG91c2luZyBtb3JlIGFmZm9yZGFibGUuIGZyYW5rbHkgdGhlc2UgaXNzdWVzLCB0aGUgc3BlY3VsYXRpb24gdGF4LCB2YWNhbmN5IHRheCwgZm9yZWlnbiBidXllciB0YXggYW5kIHNjaG9vbCB0YXggbm9uZSBvZiB0aGVzZSBtZWFzdXJlcyBhcmUgZ29pbmcgdG8gbWFrZSBob3VzaW5nIG1vcmUgYWZmb3JkYWJsZS4gVGhleSBhcmUgY2VydGFpbmx5IGdvaW5nIHRvIG1ha2UgcmV2ZW51ZSBmb3IgZ292ZXJubWVudCBhbmQgaWYgZ292ZXJubWVudCB1c2VzIHRoYXQgbW9uZXkgdG8gaGVscCB0aG9zZSBhdCB0aGUgbWFyZ2lucyBvZiBob3VzaW5nIGFmZm9yZGFiaWxpdHkgdGhhdCBtYXkgYmUgYSBnb29kIHRoaW5nIGZyb20gYSBwb2xpY3kgcGVyc3BlY3RpdmUuIHRvIGZlZGVyYWwgbW9ydGdhZ2Ugc3RyZXNzIHRlc3QgcnVsZXMgaW4gMjAxOCBhcmUgcmVhbGx5IHdoYXQgaGF2ZSBkcml2ZW4gdGhlIGNvb2xpbmcgaW4gdGhlIG1hcmtldCwgc2FpZCBNdWlyLgpDJ2VzdCB0b3V0IGNoaW1pcXVlIGV0IG1jYW5pcXVlIDogcGFyZm9pcyB1bmUgcGV0aXRlIG1vbGN1bGUgdmllbnQgcydhdHRhY2hlciAgdW5lIHNlY3Rpb24gZCdBRE4gZXQgbCdlbXBjaGUgZCdlbnRyZXIgZW4gZm9uY3Rpb24uIApXaGF0IGhhdmUgdGhlIGRlY2VudCBhbmQgaGFyZHdvcmtpbmcgcGVvcGxlIG9mIHRoZXNlIGNvdW50cmllcyBkb25lIHRvIGRlc2VydmUgdGhlc2UgdW5kdWxhdGluZyB3YXZlcyBvZiBwb2tlciBmYWNlZCBzcGluIGZyb20gdGhlaXIgbGVhZGVycz8gVGhleSBoYXZlIHRvbGVyYXRlZCBhIHB1YmxpYyBkaXNjb3Vyc2UgdGhhdCB0cmVhdHMgdGhlbSBsaWtlIGNoaWxkcmVuLiBUaGlzIGlzIGhvd2V2ZXIsIG5vdCB0aGUgMTk1MHMuIApCdXJkaWNrIGhvdCBjaG9jb2xhdGUuIENob29zZSBmcm9tIGRhcmsgb3IgbWlsayBkcmlua2luZyBjaG9jb2xhdGUsIHBsdXMgbmFiIGZyZWUgbXVmZmlucyBmcm9tIE9BSyBMb25nIEJhciArIEtpdGNoZW4ncyBwYXN0cnkgY2hlZiBvbiB5b3VyIHdheSB0byB3b3JrLiAKSW4gdGhpcyBjYXNlLCBpdCBpcyBhIFZpY3RvcmlhbiB3b21hbiBhbmQgdGhlIGRlcGljdGlvbiBvZiBoZXIgbW92ZW1lbnRzIGluIGV4ZXJjaXNlIGJ1dCB3aGF0IEkgcmVtZW1iZXIgYW5kIGFzc29jaWF0ZSB3aXRoIHRoaXMgaXMgdGhlIFNpZW5lc2UgR2lvdmFubmkgZGkgUGFvbG8sIGFuZCBoaXMgZGVwaWN0aW9uIG9mIHRoZSBtb251bWVudGFsaXN0IGdpdmV0aCBhbmQgdGFrZXRoIGN5Y2xlIHRoZSBjcmVhdGlvbiBvZiBFZGVuIGFuZCB0aGUgZXBpYyBmYWxsIG9mIGh1bWFuaXR5IGFuZCBpdHMgZXhwdWxzaW9uIGZyb20gaXQuIApGYXV4IGp1ZGljaWFsIHJlc3RyYWludCBpcyBqdWRpY2lhbCBvYmZ1c2NhdGlvbiwgU2NhbGlhIHNhaWQuLiAKRGVwZW5kaW5nIG9uIHdoZXJlIHRoZXNlIGJsb2NrYWdlcyBvY2N1ciwgdGhleSBjYW4gY2F1c2UgYSBudW1iZXIgb2YgZGlmZmVyZW50IG91dGNvbWVzOklmIHRoZSBibG9ja2FnZSBvY2N1cnMgaW4gYSBjb3JvbmFyeSBhcnRlcnksIGl0IGNhdXNlcyBjaGVzdCBwYWluIChhbmdpbmEpLklmIHRoZSBibG9ja2FnZSBpcyBjb21wbGV0ZSwgaXQgY2FuIGNhdXNlIGEgaGVhcnQgYXR0YWNrIChNeW9jYXJkaWFsIEluZmFyY3Rpb24gb3IgTUkpLklmIHRoZSBibG9ja2FnZSBvY2N1cnMgaW4gb25lIG9mIHRoZSBhcnRlcmllcyBuZWFyIHRoZSBicmFpbiwgYSBzdHJva2UgY2FuIG9jY3VyLklmIGEgYmxvY2thZ2Ugb2NjdXJzIGluIGEgbGVnIGFydGVyeSwgaXQgY2F1c2VzIFBlcmlwaGVyYWwgVmFzY3VsYXIgRGlzZWFzZSAoUFZEKSBhbmQgY2FuIGNhdXNlIHBhaW4gd2hpbGUgd2Fsa2luZyBjYWxsZWQgaW50ZXJtaXR0ZW50IGNsYXVkaWNhdGlvbi5Ib3cgdGhlIEhlYXJ0IFdvcmtzMTAgV2F5cyB0byBBdm9pZCBhIEhlYXJ0IEF0dGFja0JvZHkgV29ya3M6IEhlYXJ0IEhlYWx0aCBRdWl6QXRoZXJvc2NsZXJvc2lzIHRha2VzIG1hbnkgeWVhcnMsIGV2ZW4gZGVjYWRlcyB0byBkZXZlbG9wIGFuZCB0aGUgY29uZGl0aW9uIGNhbiBlYXNpbHkgZ28gdW5ub3RpY2VkLiAKVGhlc2UgZGF5cywgc28gbWFueSBwZW9wbGUgYXJlIGludGVyZXN0ZWQgaW4gUG9rZXIgdGhhdCBpdCBoYXMgbm93IHdlbnQgZGlnaXRhbC4gSXQgc2VlbXMgdGhlc2UgdGltZXMgbm8gbWF0dGVyIHdoZXJlIHlvdSBjbGljayB5b3UnbGwgc2VlIHNvbWUgdHlwZSBvZiBiYW5uZXIgb3IgcG9wdXAgd2l0aCBmYW5jeSBQb2tlciBDaGlwcyBwcm9kZGluZyB5b3UgdG8gY2xpY2sgdGhlaXIgYWQgc28geW91IGNhbiBzdGFydCB0byBnYW1ibGUgb25saW5lLiBJZiBJIGhhZCB0byBwaWNrIGEgZ2FtZSBJIHZpZXdlZCBhcyB0aGUgbW9zdCBwb3B1bGFyLCBpdCB3b3VsZCBiZSBDYXNpbm8gUG9rZXIuIAogT24gY3JhaWduYWl0IGF1dHJlZm9pcyBsZXMgY29yZGllcnMsIHBvcHVsYXRpb25zIGlzb2xlcyBhdSBNb3llbiBnZSBhdSBtbWUgdGl0cmUgcXVlIGxlcyBscHJldXgsIGNhciBsZXMgZmFicmljYW50cyBkZSBjb3JkZXMgZXQgZGUgbGllbnMgcGFzc2FpZW50IHBvdXIgZGVzIHRyZXMgbWFnaXF1ZXMsIGRhbmdlcmV1eCBldCByZWxpZ2lldXggIGxhIGZvaXMuIApZb3UgYXJlIHJpZ2h0LiAKSW4gbXkgb3RoZXIgcmVwbHkgSSBmb2N1c2VkIG9uIHRoZSBwb3NzaWJsZSB3YXlzIGluIHdoaWNoIGhlIGNvdWxkIGJlIGFzc3VtaW5nIGNvbnRyb2wgb2YgeW91ciBsaWZlLCBhbmQgaG93IHRob3NlIGNvdWxkIGJlIGNvbmNlcm5pbmcuIEJ1dCB0aGlzIG1ha2VzIG1lIHdvbmRlciBpZiBoZSBpc24ganVzdCBhIGxpdHRsZSBsb3N0LCBzcGlyYWxpbmcgaW50byBhIGNyaXNpcyB0aGF0IGhlIGZlZWxzIGhlIG1hZGUgYnkgbW92aW5nIHlvdSB0byBFdXJvcGUuIEl0IHBvc3NpYmxlIHRoYXQgdGhlIHJpZ2h0IGNvdXJzZSBvZiBhY3Rpb24gaXMgdG8gZ28gSSBjYW4gc2VlIHlvdSBoYXZpbmcgc29tZSBzb3J0IG9mIGZyZWFrb3V0IGhlcmUuIE1hcnJpYWdlIGlzIGEgdGVhbSBzcG9ydCBpbiB3aGljaCB5b3UgYW5kIEkgd29yayB0b2dldGhlciB0byBzdGF5IGFmbG9hdC4gV2hhdCBhcmUgeW91IGhpZGluZyBmcm9tIG1lIGFuZCBob3cgY2FuIEkgaGVscCBmaXggaXQ/IFNheSB0aGlzIHdpdGhvdXQganVkZ2VtZW50IG9mIGFueSBraW5kIGFuZCBiZSBwcmVwYXJlZCB0byBzb3J0IG91dCBzb21lIHNlcmlvdXMgbWVzc2VzLiBNYXliZSBzdGFydCBsb29raW5nIGZvciB0aGluZ3MgaGUgc2VlbXMgdG8gbmVnbGVjdCBhbmQgdGhlbiBwYW5pYyBhYm91dCB0byBzZWUgaWYgeW91IGNhbiB1c2UgeW91ciBvd24gc2tpbGxzZXQgdG8gaGVscCB3aXRoIHRoZW0uCkkgZ3Vlc3MgeW91IGhhdmUgYSBwb2ludCwgYnV0IGV2ZW50dWFsbHkgc29tZWJvZHkgbWlnaHQgdG8gZmluZCBhIG5ldyB0ZWNobmlxdWUgZXhjbHVzaXZlIHRvIFVsdGltYXRlIHRoYXQgdHVybnMgb3V0IHRvIGJlIGJldHRlciB0aGFuIHdhdmVkYXNoaW5nLiBJJ20gZ2xhZCBtZWxlZSBwbGF5ZXJzIGFyZSBnaXZpbmcgVWx0aW1hdGUgYSBjaGFuY2UsIGJ1dCBldmVuIHdpdGggdGhlIHdlYWtlciBkYXNoZGFuY2luZyBpdCBjYW4gc3RpbGwgYmUgdXRpbGl6ZWQuIApJbiB0ZXJtcyBvZiBhcnR3b3JrIGFuZCBtYXRlcmlhbCBjdWx0dXJlLCBwZXJoYXBzLiBNb2Rlcm4gc3RlcmVvdHlwaWNhbCAiQ2VsdGljIiBhcnQgbW90aWZzIGFyZSB1bHRpbWF0ZWx5IGRlc2NlbmRlZCBmcm9tIExhIFRlbmUgc3R5bGUgbWF0ZXJpYWwgY3VsdHVyZSB3aGljaCBmZWF0dXJlZCBmYW1pbGlhciBtb3RpZnMgYXMgY29uY2VudHJpYyBjaXJjbGUgYW5kIGRvdHMsIHJlcHVjZSBpbiBtZXRhbCBvYmplY3RzIGFuZCBtb3JlIGdlbmVyYWxseSBhIHRlbmRlbmN5IGZvciBhYnN0cmFjdCBhbmQgYW1iaWd1b3VzIGFuaW1hbCwgaHVtYW4gYW5kIHZlZ2V0YWwgZm9ybXMgd2hpY2ggYXJlIG9mdGVuIGNvbWJpbmVkLiBIb3dldmVyIExhIFRlbmUgc3R5bGUgbWF0ZXJpYWwgY3VsdHVyZSB3YXMgbm90IGNvbmZpbmVkIHRvIHNwZWFrZXJzIG9mIENlbHRpYyBsYW5ndWFnZXM7IExhIFRlbmUgc3R5bGUgb2JqZWN0cyBoYXZlIGJlZW4gZm91bmQgdGhyb3VnaG91dCB0ZW1wZXJhdGUgRXVyb3BlIGluIHJlZ2lvbnMgdGhhdCBDZWx0aWMgc3BlYWtlcnMgb2J2aW91c2x5IGRpZCBub3QgaW5oYWJpdCAoTGEgVGVuZSBzdHlsZSBzaGllbGRzIGV0Yy4gClRha2UgdGhlIHRpbWUgdG8gdW5kZXJzdGFuZCB5b3VyIG9wcG9uZW50cyBhbmQgaG93IHRoZXkgcGxheS4gS2VlcCBub3RlcyBvbiBhbGwgb2YgdGhlIG9wcG9uZW50cyB5b3UgZmFjZSBhbmQgZGV2ZWxvcCB0aGVpciBwbGF5ZXIgcHJvZmlsZXMgc28geW91IGNhbiB1c2UgdGhlc2Ugbm90ZXMgaW4gdGhlIGZ1dHVyZSB3aGVuIGZhY2luZyB0aGVtIGFnYWluIGFuZCBhZ2Fpbi4gCkp1c3QgaW4gc2Nob29sIGV2ZW4gQ29tcCBTY2kgd2hlcmUgc2Nob29sIGZvY3VzIHNvbGVseSBvbiB0aGVvcnkgdGhhdCB5b3UgZG9udCBoYXZlIHRpbWUgdG8gbGVhcm4gY2VydGFpbiBwcm9ncmFtbWluZyBmcmFtZXdvcmsgbGlrZSBOb2RlLCBSZWFjdCBldGMuIFRoZW4geW91IHdhbnQgdG8gbGVhcm4gdGhlc2UgZnJhbWV3b3JrLiBJdCB3aWxsIHRha2VzIGFsb3Qgb2YgeW91ciBwZXJzb25hbCB0aW1lLiAKQmVjYXVzZSBvZiB0aGUgbWVuIGFuZCB3b21lbiBpbiB1bmlmb3JtIHdobyB2b2x1bnRlZXIgdG8gZGVmZW5kIG91ciBsaWJlcnR5LCB3ZSBhcmUgYWJsZSB0byBlbmpveSB0aGUgc3BsZW5kb3Igb2YgdGhlIEFtZXJpY2FuIGxpZmUuIFdlIHByYXkgZm9yIHRoZWlyIHNhZmV0eSwgYW5kIGZvciB0aGUgZmFtaWxpZXMgd2hvIGF3YWl0IHRoZWlyIHJldHVybi4uIApUb3VjaCB1cCBwYWludCByZWFsbHkgc3RhbmRzIG91dCB3aGVuIHlvdSB1c2UgaXQgZm9yIHRob3NlLCBpdCBiZXR0ZXIgZm9yIHNtYWxsIHBhaW50IGNoaXBzIGFuZCBsaXR0bGUgZGluZ3Mgb24gdGhlIGVkZ2Ugb2YgdGhlIGRvb3IuIApXaGF0IGRvZXMgcmFpc2luZyB0aGUgdHVybiByZWFsbHkgYWNoaWV2ZSB0aG91Z2g/IFRoZSBvbmx5IGhhbmRzIHlvdSBmb2xkIG91dCBhcmUgdGhlIG9uZXMgd2l0aCBubyBlcXVpdHkgYW55d2F5IGFyZSB0aGV5IG5vdD8gT2J2aW91c2x5IHlvdSB3YW50IHRvIGJlIHRyeWluZyB0byBrZWVwIGFsbCB0aGUgYmx1ZmZzIGluIHRoZXJlLiBNb3N0IHN0cm9uZyBkcmF3aW5nIGhhbmRzIGxpa2UgZmx1c2ggZHJhd3Mgd2lsbCBzdGlsbCBjYWxsIHRoZSByYWlzZSB0aGVuIGxlYWQgb3V0IHJpdmVyIGlmIHRoZXkgbWlzcywgdGhlcmUgYXJlIHNvbWUgaGFuZHMgdGhhdCBwaWNrZWQgdXAgZXF1aXR5IGxpa2UgSzEwIG9yIDk3ICh3aGljaCBpIGd1ZXNzIHlvdSBoYXZlIHNvbWUgZm9sZCBlcXVpdHkgYWdhaW5zdCB3aGVuIHlvdSByYWlzZSksIHRoZW4gOSAxMCBtYWRlIHRoZSBudXRzLiBJIHN1cHBvc2UgeW91IGdldCBleHRyYSB2YWx1ZSBmcm9tIGEgaGFuZCBsaWtlIFFKLiAKSm9oblFLICAyLDMxMSBwb2ludHMgIHN1Ym1pdHRlZCAxNyBkYXlzIGFnbwpLaWQgUG9rZXIgZmlndXJlcyB0aGUgYnJpZ2h0IGxpZ2h0cyBhbmQgbGlnaHQgdGF4ZXMgb2YgTGFzIFZlZ2FzIHdpbGwgZHJhdyBmcmVlIGFnZW50cyB3aG8gd2luY2UgYXQgdGhlIHZlcnkgdGhvdWdodCBvZiBXaW5uaXBlZyBvciBFZG1vbnRvbi4uIApJZiB5b3Ugc3RvcCB1c2luZyB0aGUgZHJ1ZywgdGhlIGhhaXIgd2lsbCBmYWxsIG91dC4gU28geW91IGtlZXAgdXNpbmcgaXQgZm9yIDIsIDMsIDQgeWVhcnMsIHRoZW4gb25lIGRheSB5b3Ugc3RhcnQgd29uZGVyaW5nIGlmIHlvdXIgc2V4IGxpZmUgaGFzIGJlZW4gbmVnYXRpdmVseSBpbXBhY3RlZC4gWW91IG5vdCBzdXJlLCB5b3UgdHJ5IGFuZCByZW1lbWJlciB3aGF0IGl0IHdhcyBsaWtlIGJlZm9yZSB5b3Ugc3RhcnRlZCBhbmQgd29uZGVyIGlmIG1heWJlIGl0IGp1c3QgdGhhdCB5b3UgYWdpbmcuIEl0IGZlZWxzIHNvIHN1YnRsZSBidXQgeWVzIHlvdSBhcmUgb2xkZXIgc28gbWF5YmUgdGhhdCB3aGF0IGlzIGRpZmZlcmVudD8gVGhlcmUgcmVhbGx5IG5vIHdheSBvZiB0ZWxsaW5nLCBidXQgaXQga2luZCBvZiBmcmVha3MgeW91IG91dCwgc28geW91IHF1aXQgdGFraW5nIGl0LCBhbGwgeW91ciBoYWlyIGZhbGxzIG91dCwgYW5kIHlvdSB3YXN0ZWQgNCB5ZWFycyBvZiBwYXlpbmcgZm9yIGEgZHJ1ZyB0aGF0IGZ1Y2tzIHdpdGggeW91ciBoZWFkLCBsaXRlcmFsbHkuClRoZXkgbWF5IGF0dGVtcHQgdG8gb3JnYW5pemUgYSBuZXcgYWxsaWFuY2UgYSBsb29zZSBvbmUsIG5vIGRvdWJ0IHRvIHRod2FydCBBbWVyaWNhbiBwb3dlci4gCkkgc2Vjb25kIEV4Y2FsaWJ1ci4gU3RheWVkIHRoZXJlIGluIE1hcmNoLiBXaXRoICQxLyQyIHRhYmxlcyBFeGNhbCB3YXMgdGhlIGNoZWFwZXN0IEkgY291bGQgZmluZCBvbiB0aGUgc3RyaXAuIEFsc28gaXQgaXMgY29ubmVjdGVkIHRvIHRoZSBMdXhvciB0aHJvdWdoIGluZG9vciB3YWxrd2F5IHNvIGlmIHRoZSBzbG90cyBhdCBleGNhbGlidXIgYXJlbid0IGVub3VnaCBmb3IgaGVyLCBzaGUgY2FuIHdhbGsgYXJvdW5kIHdpdGhvdXQgbGVhdmluZyB0aGUgYWlyIGNvbmRpdGlvbmluZy4KMTAgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28uIApUaG9zZSBzbGF2ZXMgc2hvdWxkIHdvcmsgYWxsIHRoZSBoYXJkZXIgYmVjYXVzZSB0aGVpciBlZmZvcnRzIGFyZSBoZWxwaW5nIG90aGVyIGJlbGlldmVycyB3aG8gYXJlIHdlbGwgbG92ZWQuIApJIHN0b29kIHRoZXJlIGZvciBhIHdoaWxlLCB0aGVuIGNvbnRpbnVlZCBwbGF5aW5nLiAKSG93IGRvIHlvdSBwbGF5IFBvbGlzaCBwb2tlcgpUaGUgNjQgb3RoZXIgY2F0cyBsZWFybiBmcm9tIHRoYXQgYmVoYXZpb3IsIGFuZCB0aGVuIGdvIG91dCBhbmQgcmVwZWF0IHRoZSBiZWhhdmlvciB0aGF0IGdvdCB0aGF0IG9uZSBjYXQgZXh0cmEgbG92ZSBhbmQgZm9vZC4gSXQgd291bGQgYmUgaGFyZGVyIHRvIHRyYWluIG9uZSBjYXQgdG8gZG8gdGhpcyB0aGFuIGFuIGFybXkgb2YgdGhlbS4gCkNlbnRyYWwgUGFyayBUb3dlclRoZSAxLDU1MCBmb290IHRhbGwgQ2VudHJhbCBQYXJrIFRvd2VyICAgcmlzaW5nIG9uIEJpbGxpb25haXJlcycgUm93IGF0IDIxNyBXLiA1N3RoIFN0LiAgIHdpbGwgYmUgdGhlIHRhbGxlc3QgcmVzaWRlbnRpYWwgYnVpbGRpbmcgaW4gdGhlIHdvcmxkIHdoZW4gaXQncyBjb21wbGV0ZS4gU2FsZXMgb2YgaXRzIDE3OSB1bHRyYSBsdXh1cnkgdW5pdHMgb3ZlciAxMzEgZmxvb3JzIGxhdW5jaGVkIGluIE9jdG9iZXIuIEVpZ2h0ZWVuIG9mIHRoZW0gYXJlIHByaWNlZCBvdmVyICQ2MCBtaWxsaW9uLCBFeHRlbGwgRGV2ZWxvcG1lbnQgZm91bmRlciBHYXJ5IEJhcm5ldHQgdG9sZCB0aGUgV2FsbCBTdHJlZXQgSm91cm5hbCBsYXN0IHdlZWssIHdpdGggYSBwcm9qZWN0ZWQgdG90YWwgc2VsbG91dCBvZiAkNCBiaWxsaW9uLiBJZiBpdCBhY2hpZXZlcyB0aGF0IGdvYWwsIEV4dGVsbCdzIHZhdW50ZWQgcHJvamVjdCB3b3VsZCBiZSBjcm93bmVkIHRoZSBtb3N0IGV4cGVuc2l2ZSBjb25kb21pbml1bSBpbiB0aGUgY291bnRyeS4KRHJ1bWxpbmVjaG9wcyAgMjQgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KU2VlbXMgbGlrZSBwYXJ0IG9mIGhlciBqdXN0IHRoaW5rcyBvZiBtZSBhcyBhIGZyaWVuZCwgdGhhdCBzaGUgbm90IGF0dHJhY3RlZCB0byBtZSAoaSBjYW4gbGVhbiBraW5kYSBmZW1tZSwgYXQgdGltZXMpLiBJIGFsd2F5cyBrbm93biB0aGlzLCBhcyB3ZWxsLiBXZSBhbHNvIGhhZCBhIGxvdCBvZiBwaHlzaWNhbCBpc3N1ZXMsIHdoaWNoIHdlcmUgZXhwb25lbnRpYWxseSBpbmNyZWFzZWQgYnkgdGhlIE9wZW4gUmVsYXRpb25zaGlwLCBlc3NlbnRpYWxseSBraWxsaW5nIG91ciBzZXggbGlmZS4uIApWb3RyZSBjb25zZW50ZW1lbnQgbidlc3QgcGFzIHJlcXVpcyBwb3VyIGNlcyBjb29raWVzLiAKQ3JlbWF0aW9uIGhhcyB0YWtlbiBwbGFjZS4gCkRlYXRoQnlTdXBsZXggdQoiV2hhdCBkbyB5b3UgbWVhbiBpdCAiV2hhdCBkbyB5b3UgbWVhbiB0aGVyZSBhbiB1bnBvc3RhYmxlIj8gZXRjLiAKVy4sIFdhdGVybG9vLCBPbnRhcmlvIE4yTCAxSjMpIHdvdWxkIGJlIHdlbGNvbWVkIGFuZCBhcHByZWNpYXRlZCBieSBCb2IncyBmYW1pbHkuIE1lbW9yaWFsIGRvbmF0aW9ucyBhbmQgY29uZG9sZW5jZXMgZm9yIHRoZSBmYW1pbHkgbWF5IGJlIGFycmFuZ2VkIGJ5IGNvbnRhY3RpbmcgdGhlIEVyYiBHb29kIEZhbWlseSBGdW5lcmFsIEhvbWUgLCAxNzEgS2luZyBTdC4gCklmIHlvdXIgb3h5Z2VuIGlzIHBlcmZlY3RseSBub3JtYWwgZHVyaW5nIHNsZWVwLCBJIHNheSB5b3UncmUgZmluZS4gClByZXNzaW5nICJkZWFsIiB3aWxsIGRpc2NhcmQgYWxsIG9mIHRoZSB1bnNlbGVjdGVkIGNhcmRzIGFuZCBnaXZlIHlvdSBuZXcgb25lcy4gSWYgeW91J3JlIGx1Y2t5LCB0aGVzZSBuZXcgY2FyZHMgd2lsbCBmb3JtIHdpbm5pbmcgY29tYmluYXRpb25zIHdpdGggeW91ciBvbGQgY2FyZHMuCkkgZG9uIHJlbWVtYmVyIHdoaWNoIHlvdXR1YmVyIHNhaWQgaXQsIGJ1dCB0aGlzIHN1YnJlZGRpdCBzZWVtcyB0byBhdHRyYWN0IGEgbG90IG9mIHBlb3BsZSB3aG8ganVzdCBzZWVtIHRvIGNvbXBsYWluIGFib3V0IGhhdmluZyB0byBwbGF5IHRoZSBnYW1lLgpUaGUgcGxhbmUgc2hlIHdhcyBpbiBoYWQgY3Jhc2hlZCBpbnRvIG5lYXJieSBQb3Rvc2kgTW91bnRhaW4gYW5kIHdvcmQgY2FtZSB0aHJvdWdoIHRoYXQgdGhlcmUgd2VyZSBubyBzdXJ2aXZvcnMuIEl0IGlzIHNhaWQgdGhhdCBDbGFyayBHYWJsZSB3YWl0ZWQgaW4gdGhlIFBpb25lZXIgU2Fsb29uIGZvciB0aHJlZSBkYXlzLCB3YWl0aW5nIGZpcnN0IGZvciB3b3JkIGFib3V0IGhlciBmYXRlIGFuZCB0aGVuIGZvciBuZXdzIG9mIHRoZSByZWNvdmVyeSBvZiBoZXIgYm9keS4uIApBIHBhcnQgb2YgdXMgaXMgbWlzc2luZyBmb3JldmVyLiAKRm9yIGV4YW1wbGUgSSB1c2VkIHRvIGhhdmUgdG8gZHJpdmUgMjUgbWludXRlcyBlYWNoIHdheSB0byB3b3JrIGFuZCBJIGdvdCBhIGxvdCBvZiBzeW1wYXRoeSBmb3IgbXkgdW5yZWFzb25hYmxlIGNvbW11dGUuIApJdCBmaW5hbGx5IHN0YXJ0cyBtb3ZpbmcsIE1vbGx5IGlzIHJlbGlldmVkLiBTaGUgcmVhbGx5IGRpZG4gd2FudCB0byBqdW1wIHdpdGggdGhlIGN1cGNha2UgY2FrZSB0aGUgaGVucyBtYWRlIGZvciBoZXIuIFNoZSBjb3VsZCBoYXZlIGRyb3BwZWQgaXQuIApKdXN0IHJlbnRpbmcgYSBjYXIgZnJvbSBhIHJlbnRhbCBhZ2VuY3kgYXQgdGhlIG1vbWVudCwgYnV0IHdvdWxkIGxpa2UgdG8gZ2V0IG91ciBvd24gY2FyLiAKV2UgZGlkIG91ciBmaXJzdCBXMzAgYWJvdXQgMTggbW9udGhzIGFnbywgYW5kIGhhdmUgZG9uZSBhIGhhbmRmdWwgb2Ygcm91bmRzIHNpbmNlLiAKS2VlcCBJdCBDbGVhbiBSYXRoZXIgdGhhbiBmaWxsaW5nIHlvdXIgYnVzaW5lc3MgY2FyZHMgd2l0aCBsb3RzIG9mIGhpZ2ggY29sb3IgZ3JhcGhpY3MgYW5kIGxpbmVzIG9mIHRleHQsIGNvbnNpZGVyIGEgc2xlZWsgYW5kIHNpbXBsZSBkZXNpZ24uIE5vdCBvbmx5IHdpbGwgaXQgaGVscCB5b3UgYXBwZWFyIHByb2Zlc3Npb25hbCwgYnV0IGl0IG1heSBhbHNvIGNhdXNlIHBvdGVudGlhbCBjbGllbnRzIHRvIHN1YmNvbnNjaW91c2x5IGNvbm5lY3QgeW91ciBidXNpbmVzcyB3aXRoIGEgY2xlYW5lciwgbW9yZSBvcmdhbml6ZWQgaG9tZSBvciBvZmZpY2UuIApUaGF0IGFubm95aW5nbHkgc2VsZmlzaCBhdCBiZXN0IGFuZCBJIHdvdWxkIGdvIGFzIGZhciB0byBzYXkgaHlwb2NyaXRpY2FsLiBJZiB5b3Ugd2FudCB1cyB0byBzaGFyZSB0aGUgcm9hZCwgdGhlbiB5b3UgYWxzbyBoYXZlIHRvIHNoYXJlIHRoZSB0cmFmZmljIHJ1bGVzLiAKQ2hpbmcgbGluZydzIHBhcmVudHMgbmV2ZXIgYXBwcm92ZWQgb2YgaGlzIGRyZWFtLCAiSXQncyByaWRpY3Vsb3VzLCBubyBvbmUgd291bGQgZXZlciBmaW5kIGF3ZSBpbiB0aGlzIHBlcmZvcm1hbmNlIiB0aGV5IHNhaWQuIERldGVybWluZWQgdG8gcHJvdmUgdGhlbSB3cm9uZyBoZSBtYXN0ZXJlZCBoaXMgcGVyZm9ybWFuY2Ugd2l0aCBoaXMgb3duIGN1c3RvbSBtYWRlIHJpbmcgYW5kIHNoYXZlZCBoZWFkIHRvIHBlcmZlY3Rpb24uIApOZWxzb24sIHdobyBub3JtYWxseSB0cmFpbnMgaW4gU3RvbmV5IENyZWVrIHRocmVlIGRheXMgZWFjaCB3ZWVrLCB3YXRjaGVkIHNvbWUgdmlkZW8gb2YgaGlzIG9wcG9uZW50IGJ1dCBoaXMgZml0bmVzcyBsZXZlbCAgIHdoaWxlIHNvbGlkICAgd2FzIG5vdCBpbiBwZWFrIGZvcm0uCkNvbW1lbnQgcmVwcmVyIHVuIHNhbG9uIGRlIG1hc3NhZ2UgbyBsJ29uIG1hc3NlIGQndW4gc2Fsb24gZGUgbWFzc2FnZSBvIGxlcyBtYXNzZXVzZXMgdm9udCBwbHVzIGxvaW4gc2Vsb24gdW5lIGdyaWxsZSB0YXJpZmUgZXQgc3VyIGRlbWFuZGUgZHUgY2xpZW50ID8gQydlc3QgYmllbiBsIHF1ZSBsZXMgYXV0b3JpdHMgcG9saWNpcmVzIHBlaW5lbnQuIERhbnMgdW5lIHNvY2l0IGRlIGRyb2l0LCBpbCBmYXV0IGFwcG9ydGVyIGxhIHByZXV2ZSBkZXMgYWNjdXNhdGlvbnMgcHJvZnJlcy4gCk9uZSBvZiB0aGVzZSB5ZWFycyBJIGFtIGdvaW5nIHRvIGxheSBteSBISyB0YXggZm9ybXMgYWxvbmcgc2lkZSBteSBVUyB0YXggZm9ybXMuIApIaXMgY2FtcGFpZ24gaXMgbW9yZSB0aGFuIGFuIGVsZWN0aW9uLCBpdCdzIGEgcmV2b2x1dGlvbi4gQW1lbmRtZW50cyBhZ3JlZWQgdG8gYnkgdm9pY2Ugdm90ZXMgKHllYXMvbmF5cyksIG9yIHVuYW5pbW91cyBjb25zZW50LCBkb24gY291bnQpLi4gCkFueXdheXMsIHBvaW50IGlzLCBiZXNpZGVzIHRoZSBodW1ibGVicmFnIG9mIGl0IGJlaW5nIHRoZSBmaXJzdCB0b3VybmV5IGkgd29uIChmaXJzdCB3YXMgJDkwMCksIG9uZSB0aGluZyBpIGFsd2F5cyByZW1lbWJlcmVkIHdhcyB0aGlzIG9uZSBkdWRlIHdobyBnb3Qgc2FsdHkgYXMgZnVjayBhcyB0aGlzIG9uZSB5b3VuZyBjcmF6eSBwbGF5ZXIgd2hvIGJhc2ljYWxseSBwbGF5ZWQgYW55IHR3byBjYXJkcyBhbmQgc2NyZWFtZWQgZm9yIHdoYXRldmVyIGJ1bGxzaGl0IHJhZyBoZSBuZWVkZWQgdG8gc3VjayBvdXQgb24gd2hvZXZlciBHSUkgd2l0aCBoaW0gcG9zdCBmbG9wIGFuZCB0aGUgd2F5IGhlIGFsd2F5cyB5ZWxsZWQsIGl0IGFsd2F5cyBzZWVtZWQgbGlrZSBoZSB3YXMgZ290IGx1Y2t5IHByZXR0eSBvZnRlbiBhbmQgd291bGQgY2F0Y2ggaGlzIDMgb3V0ZXJzIG9yIHdoYXRldmVyLiBJbWFnaW5lIHRoaXMgeW91bmdpc2ggcmVkbmVjayB5IGxvb2tpbiBkdWRlIHdpdGggYSBiYWRseSBzaGF2ZW4gbXVzdGFjaGUgc2NyZWFtaW5nIERFVUNFISEgREVVQ0UhISBERVVDRSEhIERFVUNFISEgWUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBUlJSUlJHR0dISEhISEhIISEhISEhIHdoZW4gaXQgaW5ldml0YWJseSBoaXRzLiBMaWtlIHRoYXQuLiAKTGUgTUlTUCBlc3QgYmFzIHN1ciBsZSBwcmluY2lwZSBxdWUgbGUgdG91Y2hlciByZXNwZWN0dWV1eCBwZXV0IGZhdm9yaXNlciBsJ2VzdGltZSBkZSBzb2ksIGxhIGNvbmZpYW5jZSBldCBsZSByZXNwZWN0IG11dHVlbC4gTGVzIGVuZmFudHMgc29udCBwbGFjcyBkZXV4IHBhciBkZXV4IGV0IHNlIGRvbm5lbnQgbCd1biBsJ2F1dHJlIHVuIG1hc3NhZ2UgZGUgMTAgbWludXRlcyBjb21wb3MgZGUgbWFudXZyZXMgc2ltcGxlcyBwcmF0aXF1ZXMgc3VyIGxhIHR0ZSwgbGUgY291LCBsZXMgcGF1bGVzIGV0IGxlIGRvcy4gSWxzIGRlbWFuZGVudCBsYSBwZXJtaXNzaW9uIGF2YW50IGRlIGRvbm5lciBsZSBtYXNzYWdlIGV0IHZyaWZpZW50IHNpIGxhIHByZXNzaW9uIGVzdCBhZHF1YXRlLiAKVGhpcyBpcyBhIGhhcmQgZmFjdCBwZW9wbGUgZG9uIHdhbnQgdG8gYWNrbm93bGVkZ2UuIFlvdSByYXJlbHkgc2VlIDEwMCUgcmV0dXJuIG9uIGludmVzdG1lbnQgZm9yIGFueXRoaW5nLCBlc3BlY2lhbGx5IGlmIGl0IHdhc24ganVzdCBkb25lLiBIZWxsLCB5b3UgbHVja3kgaWYgeW91IHNlZSA1MCUsIG1vcmUgbGlrZWx5IGl0IDIwJSB3aXRoIGEgbG90IG9mIHRoaW5ncyBiZWNhdXNlIHRoZXkgd2VyZSB1c3VhbGx5IGRvbmUgYSB3aGlsZSBhZ28uICJJdCBnb3QgYSAkMzAwMCBzdGVyZW8gc3lzdGVtIGluIGl0ISIgdGhhdCB5b3UgcHV0IGluIDMgeWVhcnMgYWdvLiBIb3cgbXVjaCB3b3VsZCB5b3UgcGF5IGZvciBhIHVzZWQgY2FyIHN0ZXJlbyBzeXN0ZW0/IE1heWJlIGEgZmV3IGh1bmRyZWQ/IE5vdCB0byBtZW50aW9uIHRhc3RlIHBsYXlzIGEgZmFjdG9yLiAiSSBoYWQgdGhlIGludGVyaW9yIHJldXBob2xzdGVyZWQhIiB5ZWFoIHRvIG5lb24gZnVja2luZyBwaW5rIHdpdGggeW91ciBuYW1lIG1vbm9ncmFtbWVkIG9uIHRoZW0uClRvIHRoaW5rIHRoYXQgd2F5LiAKIkFuY2Vsb3R0aSBzaG93ZWQgbm8gcGFuaWMgYXQgYW55IG1vbWVudCB3aGljaCBpcyBhIGdyZWF0IHNraWxsIGZvciBhbnkgbWFuYWdlciwiIHNhaWQgQm9qYW4gSG9kYWssIENyb2F0aWFuIGJvcm4gaGVhZCBjb2FjaCBvZiBDYW1ib2RpYW4gY2x1YiwgUGhub20gUGVuaCBDcm93bi4KWW91IGFyZSBkb25lLiAKQW5kIGluIG15IG9waW5pb24gaXQgZmluZSB0byBoYXZlIHRvIHBheSAyIDEwIGZvciB5b3VyIGNob2ljZSBvZiBzZWF0IGlmIHlvdSBmbHlpbmcgZm9yIDQ2IGF2ZXJhZ2UuIApUaGUgcG90IG9uIHRoZSB0dXJuIGNhbWUgYWZ0ZXIgbm8gcmVwb3QgYW5kIHRoZSB3YXkgaXQgcGxheWVkIG91dC4uIApZb3UgY2FuIGhpdCBvbmUgcGVyc29uIHdpdGggZnJlbnp5IGFuZCBldmVyeW9uZSBlbHNlIGlzIHJldmVhbGVkLCBqdXN0IHJ1biB0byBhbm90aGVyLCBnZXQgYSBoaXQgYW5kIHJlY2hhcmdlIHlvdXIgZnJlbnp5IGFnYWluLiBSaW5zZSBhbmQgcmVwZWF0IHVudGlsIGV2ZXJ5b25lIG5lYXIgeW91IGlzIHdvdW5kZWQsIHRoZW4gZ28gZm9yIGEgaG9vay4gSGlzIGNoYXNlIGlzIHNvIHN0cm9uZyB0aGF0IGdldHRpbmcgYSA0IGhpdCBpcyBleHRyZW1lbHkgZWFzeSwgZXZlbiB3aXRoIG5vIGFkZG9ucy4KTm90IGp1c3Qgc2h5aW5nIGF3YXksIGZlZWxpbmcgYmFkIGFib3V0IHlvdXJzZWxmIGFzIHlvdSB0aGluayBvZiBlYWNoIGluY2lkZW50LiBIb3cgeW91IHNjcmV3ZWQgdXAgYmlnIHRpbWUgKHlvdSBwcm9iYWJseSBkaWRuIGFuZCBvaCBnb2QgSSB3aXNoIEkgbmV2ZXIgc2VlIHRoYXQgcGVyc29uIGFnYWluICAgSSB3YXMgc3VjaCBhIGZvb2wuLiAKUG9pbnQgb2YgZmFjdC4KSGUgYWxzbyBmYWlsZWQgdG8gbWVudGlvbiB0aGF0IHRoZSBtYWNoaW5lIHN0YXJ0ZWQgbGVha2luZyBvaWwgb24gdGhlIHBhcnRzIGZvciBhYm91dCBhbmQgaG91ci4gU28gdGhlcmUgd2UgYXJlIGp1c3Qgd2lwZSBkb3duIHRoZSBwYXJ0cyBhbHJlYWR5IG1hZGUgd2l0aCBydWJiaW5nIGFsY29ob2wgYW5kIGN1dHRpbmcgdGhlbS4gCldoZW4gSSB3YXMgaW4gY29sbGVnZSwgSSBvbmNlIGhlbGQgZm91ciBvZiBhIGtpbmQsIGEgZ3JlYXQgaGFuZCB3aXRoIGFib3V0IGEgb25lIGluIDQsMDAwIGNoYW5jZSBvZiB0dXJuaW5nIHVwLiAKRGVwZW5kYWJsZSBudW1iZXJzIGFyZSBoYXJkIHRvIGNvbWUgYnksIGJ1dCBhdCBtaW5pbXVtIEluZGlhbiBzdXJyb2dhY3kgc2VydmljZXMgbm93IGF0dHJhY3QgaHVuZHJlZHMgb2YgV2VzdGVybiBjbGllbnRzIGVhY2ggeWVhci4gVGhlcmUgYXJlIGF0IGxlYXN0IDM1MCBvdGhlciBmZXJ0aWxpdHkgY2xpbmljcyBhcm91bmQgSW5kaWEsIGFsdGhvdWdoIGl0IGRpZmZpY3VsdCB0byBzYXkgaG93IG1hbnkgb2ZmZXIgc3Vycm9nYWN5IHNlcnZpY2VzIHNpbmNlIHRoZSBnb3Zlcm5tZW50IGRvZXNuIHRyYWNrIHRoZSBpbmR1c3RyeS4gCkFnYWluLiAKUGFzY2FsIFNpYWthbSBjaGlwcGVkIGluIHdpdGggMTYgcG9pbnRzLCB3aGlsZSBEYW5ueSBHcmVlbiBhZGRlZCAxMSBmb3IgdGhlIFJhcHRvcnMgKDQ2IDE3KSwgd2hvJ3ZlIHdvbiBzZXZlbiBvZiB0aGVpciBsYXN0IGVpZ2h0IG1lZXRpbmdzIGFnYWluc3QgUG9ydGxhbmQsIGluY2x1ZGluZyBmb3VyIGluIGEgcm93IGF0IGhvbWUuLiAKMyksIGFuZCB3YXMgcmVsZWFzZWQgb24uIE9jdG9iZXIuIApCdXQgdGhlIFI4IGRvZXNuJ3QgcmVhY2ggZXZlcnl3aGVyZS4gSSBtYXkgYmUgc2xpbSwgYnV0IEknbSBub3Qgc2tpbm55IGVub3VnaCB0byBmaXQgbXkgd2hvbGUgcmVhciBlbmQgYmV0d2VlbiB0d28gdGlnaHQgY2xhbXBzLiBBbmQgdGhhdCdzIHRvbyBiYWQsIGJlY2F1c2UgZm9yIG1hbnksIHRob3NlIGdsdXRlYWwgYW5kIGlsaW90aWJpYWwgbXVzY2xlcyBhcmUgdGhlIG9uZXMgbW9zdCBpbiBuZWVkIG9mIG1hc3NhZ2UuIElmIEkgd2VyZSBoZWF2aWVyLCBvdGhlciBhcmVhcyBtaWdodCBoYXZlIGJlZW4gb2ZmIGxpbWl0cyBhcyB3ZWxsLgo2LiBGZWFzdCBhdCB0aGUgRmFybSBpbiBBbHN0b252aWxsZTogVGhlIGZpcnN0IGZlYXN0IGFuZCB0aGUgRmFybSB3aWxsIGJlIGEgc3RyZWV0IGZvb2QgYW5kIG11c2ljIGZlc3RpdmFsIG9uIHRoZSBsdXNoIGdyZWVuIGdyYXNzIGF0IFN1bW1lcmxhbmQgSG91c2UgRmFybSwgMjUzIFdhcmRlbGwgUm9hZCwgQWxzdG9udmlsbGUuIFRoZSBkYXkgd2lsbCBmZWF0dXJlIGxpdmUgbXVzaWMsIGtpZHMgZnVuLCBjb29raW5nIGRlbW9zIGFuZCBleG90aWMgZm9vZC4gCk9uZSBvZiB0aGUgb25seSBwbGFjZXMgaW4gdGhlIHdvcmxkIHdoZXJlIHRoZXkgW293bmVyc10gc2lnbiB0aGVtIFtjb250cmFjdHNdIGFuZCByZW5lZ2Ugb24gdGhlbSB3aXRob3V0IHVzIGJlaW5nIGNyZWRpdG9ycywgc2FpZCBMb3MgQW5nZWxlcyBLaW5ncyBkZWZlbmNlbWFuIFdpbGxpZSBNaXRjaGVsbC4gdGhleSBhbGwgc2lnbmVkIGJlZm9yZSBhbmQga25vd2luZyB5b3UgaGFkIGEgcGxhbiBmb3IgYSByb2xsYmFjayBvciBlc2Nyb3cgdG8gY2xhdyBhbGwgdGhpcyBtb25leSBvZmYgcGxheWVycywgdGhhdCBub3QgbmVnb3RpYXRpbmcgaW4gZ29vZCBmYWl0aC4KVGhlbiBhIGJ1bmNoIG9mIHVzIHdlbnQgYmFjayB0byBvdXIgc3VpdGUgYXQgdGhlIFBhbGF6em8uIApJbiB0aGUgY2FzZSBvZiBEYXZpZCBQcmljZSwgaGlzIGhhbmQgd2FzIHNob3duIGZhciB0b28gcXVpY2tseSBhZ2FpbnN0IFRvbnkgVGhvbXBzb24sIGEgZmlnaHQgd2hlcmUgdGhlIGNhcmRzIHNob3VsZCBvZiBiZWVuIGtlcHQgY2xvc2UgdG8gdGhlIGNoZXN0LiBUb28gcXVpY2ssIHRvbyBlYXJseSBmb3IgdGhlIGZpcnN0IHRpbWUuIFByaWNlLCBvZiBjb3Vyc2UsIGlzIG5vdyB1bmRlciB0aGUgZ3VpZGFuY2Ugb2YgU2F1ZXJsYW5kIHByb21vdGlvbnMsIHdobyB3aWxsIGdpdmUgaGltIGEgY2hhbmNlIHRvIHJlYnVpbGQgYXdheSBmcm9tIExpdmVycG9vbC4gClNpbmdsZSBhcm91bmQgbWUgZGF0aW5nIHNpdGUKSGUgc2VudCBoaXMgZ2lybGZyaWVuZCBNYXJpbG91IERhbmxleSB0byB2aXNpdCBoZXIgZmFtaWx5IGluIHRoZSBQaGlsaXBwaW5lcyB0d28gd2Vla3MgYmVmb3JlIHRoZSBhdHRhY2sgYW5kIHdpcmVkIGhlciAkMTUwLDAwMCB3aGlsZSBzaGUgd2FzIHRoZXJlLgpFbHNlIGl0IHdpbGwgYmUgdXAgdG8geW91ciBsYW5kbG9yZHMgZGlzY3JldGlvbi5JIHRob3VnaCBLUE4gaGFzIHNvbWV0aGluZyBjYWxsZWQgYSBub29kcGFra2V0IChlbWVyZ2VuY3kgaW50ZXJuZXQpLCB3aGljaCBwcm92aWRlcyB0aGUgaW50ZXJuZXQgb3ZlciA0RyB1bnRpbCB0aGUgaW5mcmFzdHJ1Y3R1cmUgaXMgaW5zdGFsbGVkLiAKTWFrZSBzdXJlIHlvdXIgc2ltdWxpbmsgbW9kZWwgaW5jbHVkZXMgdGhhdCBkZWxheS4gVXNlIGEgcGFpciBvZiBaIDEgKHVuaXQgZGVsYXkpIGJsb2NrcyBpbiB0aGUgZmVlZGJhY2sgcGF0aCB0byBiZSBjb25zZXJ2YXRpdmUsIG9yIHJlYWQgdGhlIGRvY3VtZW50YXRpb24gdmVyeSBjYXJlZnVsbHkgdG8gZmlndXJlIG91dCBqdXN0IGhvdyBtdWNoIGRlbGF5IGlzIGFjdHVhbGx5IHByZXNlbnQgaW4geW91ciBoYXJkd2FyZS4KVGFsayB0byB5b3VyIHJoZXVtYXRvbG9naXN0IG9yIG90aGVyIGRvY3RvciBmb3IgeW91ciBmaWJybyBhYm91dCBoYXZpbmcgdHdpbnMgbm93LCBhbmQgdGFsayB0byB5b3VyIE9CIGFib3V0IGZpYnJvLiBDaGFuY2VzIGFyZSwgeW91ciBPQiBkb2VzbiBrbm93IG11Y2ggYWJvdXQgZmlicm8sIGJ1dCB0aGV5IG5lZWQgdG8ga25vdyB5b3UgaGF2ZSBpdC4gQ2hhbmNlcyBhcmUgeW91ciBvdGhlciBkb2MgZG9lc24ga25vdyB0b25zIGFib3V0IHByZWduYW5jeSwgYnV0IHRoZXkgZG8ga25vdyBhIGxvdCBhYm91dCBwcmVnbmFuY3kgd2l0aCBmaWJyby4uIApIZSB3YXMgYSBsaWZldGltZSBtZW1iZXIgb2YgdGhlIExhdyBTb2NpZXR5IG9mIFVwcGVyIENhbmFkYSBhbmQgaGUgd2FzIGF3YXJkZWQgdGhlIEhpZ2hlc3QgQWNjb2xhZGUgaW4gTWFydGluZGFsZSBIdWJiZWxsLiAKSGUgdG9sZCBtZSB0aGVyZSB3ZXJlIDE2MCBwZW9wbGUgd2hvIHdlcmUgc2VudCB0byBGcmFuY2UgZm9yIHRyYWluaW5nLCB3aGVuIG5vcm1hbGx5IGZpdmUgb3Igc2l4IHBlb3BsZSB3b3VsZCBoYXZlIGJlZW4gZW5vdWdoLiAKSGUgaGFkIG5vIHByZWNlZGVudCBmb3Igc3BlbmRpbmcgc3VjaCBhIGh1Z2Ugc3VtIG9mIG1vbmV5LiBIZSBhbHNvIGhhZCBsaW1pdGVkIGFjY2VzcyB0byBjYXBpdGFsIHRvIHJhbXAgdXAgcHJvZHVjdGlvbiBpZiBpdCBwYWlkIG9mZi4gU28sIHdoZW4gdGhlIHByb2R1Y3Qgc29sZCBvdXQsIGhlIG5lZWRlZCB0byBjb21lIHVwIHdpdGggYSBzb2x1dGlvbiBmYXN0LiAKRWlnaHQgcGxheWVycyBhcmUgY2hhc2luZyBKb2UgTWNLZWVoZW4sIGEgMjQgeWVhciBvbGQgUGVubnN5bHZhbmlhbiB3aG8gd2lsbCBnbyBpbnRvIHRoZSBmaW5hbCB0YWJsZSB3aXRoIGEgZG9taW5hbnQgY2hpcCBsZWFkIGFmdGVyIGJvdW5jaW5nIHNldmVyYWwgcGxheWVycyBvbiBUdWVzZGF5IGFuZCBlYXJseSBXZWRuZXNkYXkuCkFuZCB0aGVyZSBhcmUgc28gbWFueSBjaGFyYWN0ZXJzIG5vdywgd2hpY2ggaSBkb250IHRoaW5rIGlzIGEgYmFkIHRoaW5nIG5lc3Npc2FyaWx5LCBidXQgYW55IHRpbWUgYSBuZXcgY2hhcmFjdGVyIGdldHMgaW50cm9kdWNlZCwgQUxMIGNoYXJhY3RlciBkZXZlbG9wbWVudCBmcm9tIGV2ZXJ5b25lIGVsc2UgZ2V0cyBoYWx0ZWQgZXhjZXB0IGZvciB0aGUgdHdvIG9yIHRocmVlIGNoYXJhY3RlcnMgdGhhdCB0aGUgbmV3IHBlcnNvbiBpbnRlcmFjdHMgd2l0aC4gCldpdGggdGhlIHJpZ2h0IHJlc291cmNlcywgcGVyaGFwcyBpdCBjYW4gd29yaywgYnV0IEkgdGhpbmsgbmV3YmllcyBhcmUgbXVjaCBtb3JlIGxpa2VseSB0byBiZSBzdWNjZXNzZnVsIGluIGdldHRpbmcgc3RhcnRlZCB3aXRoIGEgbGFuZ3VhZ2UgbGlrZSBQeXRob24sIFJ1YnksIFBlcmwsIGV0Yy4uIApSZWFsdGFsay4gCk1ha2UganVtcCBiaWRzOiBPbiBhIHNpbWlsYXIgbm90ZSwgZG9uJ3QgYmUgYWZyYWlkIHRvIHVwIHRoZSBiaWRkaW5nIGFudGUgcXVpY2tseSwgcmF0aGVyIHRoYW4gYnkgJDEgZXZlcnkgdGltZS4gRWFybHkgaW4gdGhlIGRyYWZ0IGlmIHlvdSBhcmUgYmlkZGluZyBvbiBhIGd1eSB0aGF0IGlzIGxpa2VseSB0byBnbyBhdCAkMzAgYW5kIHRoZSBiaWRkaW5nIGlzICQxNSBvciAkMTYsIGJhbmcgaXQgdG8gJDI1LiBZb3UgbWlnaHQgZ2V0IGNyaWNrZXRzIG9yIHlvdSBtaWdodCBjaGFzZSBhbGwgYnV0IG9uZSByaXZhbCBvdXQgYXMgdGhlIHVuc3VzcGVjdGluZyBvd25lcnMgYXJlIGNhdWdodCBvZmYgZ3VhcmQsIGFuZCB5b3UgZW5kIHVwIGJ1eWluZyBhdCAkMjcgYW5kIHNhdmluZyBtb25leS4gYSAiMCIgb3IgYSAiNSIpLiBJZiB5b3UgdGhpbmsgYSBwbGF5ZXIgaXMgYSAkMzUgYnV0IGNvdWxkIGdvIGhpZ2hlciwgd2hlbiB0aGUgYmlkZGluZyByZWFjaGVzICQzMiBvciAkMzMsIGp1bXAgc3RyYWlnaHQgdG8gJDM1IGluIG9yZGVyIHRvIHRyeSB0byBmcmVlemUgeW91ciBvcHBvbmVudHMgYW5kIGdldCB5b3VyIGd1eS4gSXQgd29ya3MgZmFyIG1vcmUgb2Z0ZW4gdGhhdCB5b3Ugd291bGQgdGhpbmsuCkF0IHRoYXQgcG9pbnQgaXQgYmVjb21lcyByZWFsIHNpbXBsZSwgYWRkaW5nIHZvbHVtZSBvciBmcmVxdWVuY3kgb3IgaW50ZW5zaXR5IHdvbiBoZWxwIHlvdSBiZW5jaCBtb3JlLCBpdCBqdXN0IGVuZm9yY2UgYmFkIGZvcm0uIEl0IHN0aWxsIG9ubHkgMzU1bGJzIG9yIHNvIGF0IDIyNWxicyBidywgYnV0IEkgaGF2ZW4gcGxhdGVhdSBldmVuIG9uY2Ugc2luY2UgSSBnb3Qgc3R1Y2sgbGFzdCB0aW1lLi4gCkkgd291bGQgYmUgdmVyeSBoYXBweSBpZiB0aGlzIHdhcyBzbGlnaHRseSBtb3JlIGNvbW1vbiBrbm93bGVkZ2Ugc28gbW9yZSBwZW9wbGUgd291bGQga2VlcCBkeXNsZXhpYSBpbiBtaW5kIGJlZm9yZSBjb21tZW50aW5nIG9uIGZvbnQgY2hvaWNlcy4uIApXaGV0aGVyIHlvdSBzaXQgZG93biBmb3IgYSBnb29kIG9sZCBmYXNoaW9uZWQgZ2FtZSBvZiBwb2tlciBldmVyeSB3ZWVrLCBvciB5b3UgZG8gaXQgb25jZSBpbiBhIGJsdWUgbW9vbiwgdGhlcmUgaXMgYSBnb29kIGNoYW5jZSB0aGF0IHlvdSBrbm93IGFib3V0IGEgY2VydGFpbiBraW5kIG9mIGV4Y2l0ZW1lbnQgdGhhdCBvbmx5IGNvbWVzIHdoZW4geW91IGFyZSBhYm91dCB0byBwbGF5IHNvbWUgY2FyZHMhIElmIHlvdSBhcmUgc29tZW9uZSB3aG8gbG92ZXMgdGhlIHBva2VyLCBubyBvbmUgbmVlZHMgdG8gdGVsbCB5b3UgYWJvdXQgdGhlIHRocmlsbCB0aGF0IGdvZXMgYWxvbmcgd2l0aCBnZXR0aW5nIHlvdXIgY2FyZHMgZGVhbHQgb3V0IHdpdGggb25lIG9mIHRoZSBCZXN0IEF1dG9tYXRpYyBDYXJkIFNodWZmbGVycywgY2hlY2tpbmcgb3V0IHlvdXIgaGFuZCBhbmQgcmVhbGl6aW5nIHRoYXQgeW91IGhhdmUgYSBmdWxsIGhvdXNlLgpNcnMuIEJhcnlsYSB3YXMgbm90IG9uIHRpdGxlLi4gClRoZSBTd2VkaXNoY2VudHJhbCBiYW5rIGhlbGQgaXRzIGJlbmNobWFyayBpbnRlcmVzdCByYXRlIGF0IDAuMzUlIHRvZGF5LCB0aGUgbGV2ZWwgaXQgaGFzIGJlZW4gYXQgc2luY2UgSnVseS4KU29tZW9uZSBvbiBBQ1IgZ2V0cyBwaXNzZWQsIGdvb2dsZXMgIlJhbmRvbVVzZXIxIiBhbmQgaGlzIHJlZGRpdCBwcm9maWxlIGNvbWVzIHVwLiAKVGhhdCBiZWluZyBzYWlkLCBhIHNpbmdsZSBhY2NpZGVudCBjYW4sIGFuZCBpbiBtYW55IGNhc2VzIFdJTEwgcmFpc2UgcHJlbWl1bXMuIEFzIHlvdSBhbGx1ZGVkIHRvLCB0aGUgc2luZ2xlIGJpZ2dlc3QgcHJlZGljdG9yIG9mIGZ1dHVyZSBjbGFpbSBhY3Rpdml0eSBpcyBwYXN0IGNsYWltIGFjdGl2aXR5LCBzbyBpdCBzdGFuZHMgdG8gcmVhc29uIHRoYXQgeW91J3JlIGdvaW5nIHRvIGhhdmUgdG8gcGF5IG1vcmUgZm9yIGluc3VyYW5jZSBhcyB5b3UgaGF2ZSBjbGFpbXMsIGV2ZW4gaW5jbHVkaW5nIHRoZSBmaXJzdCBvbmUuIEdlbmVyYWxseSB5b3UgbWlnaHQgb25seSBzZWUgdGhhdCBraW5kIG9mIGltbWVkaWF0ZSBpbXBhY3QgYXMgYSByZXN1bHQgb2YgYW4gYXQgZmF1bHQgY2xhaW0uIEEgbG90IG9mIHRpbWUgbm90IGF0IGZhdWx0IGNsYWltcyAoYWNjaWRlbnQgY2F1c2VkIGJ5IGFub3RoZXIgZHJpdmVyLCBkZWVyIGhpdCwgaGFpbCBjbGFpbSwgZXRjLikgd29uJ3QgYmUgcHVuaXNoZWQsIGVzcGVjaWFsbHkgdGhlIGZpcnN0IG9uZS4KRmlyc3QgeW91IHdpbGwgbmVlZCB0byBhY2Nlc3MgQXBwbGUncyBhcHAgc3RvcmUgYW5kIGVudGVyIGJldDM2NSBpbiB0aGUgc2VhcmNoIGZpZWxkLiBBZnRlciB5b3UndmUgZm91bmQgdGhlIGFwcGxpY2F0aW9uIGp1c3QgY2xpY2sgb24gaXQgYW5kIHdhaXQgdW50aWwgaXQgZG93bmxvYWRzLCBhZnRlciB3aGljaCBpdCB3aWxsIGF1dG9tYXRpY2FsbHkgaW5zdGFsbCBhbmQgYXBwZWFyIGluIHlvdXIgaG9tZSBzY3JlZW4uVGhlICBiZXR0aW5nIGFwcCBvbiB0aGUgb3RoZXIgaGFuZCByZXF1aXJlcyBhIGRpZmZlcmVudCBhbmQgc2ltcGxlciBwcm9jZWR1cmUuIApGb3IgaW5kaXZpZHVhbHMgd2l0aCBlbGlnaWJsZSBwZW5zaW9uIGluY29tZSwgYSBub24gcmVmdW5kYWJsZSBmZWRlcmFsIHBlbnNpb24gaW5jb21lIGNyZWRpdCBvZiAxNSBwZXIgY2VudCBpcyBhdmFpbGFibGUgb24gdGhlIGZpcnN0ICQyLDAwMCBvZiBhbm51YWwgZWxpZ2libGUgcGVuc2lvbiBpbmNvbWUuIFByb3ZpbmNpYWwgY3JlZGl0cyBmb3IgcGVuc2lvbiBpbmNvbWUgYXJlIGFsc28gYXZhaWxhYmxlLgpJIHRoaW5rIHdlIGRvbmUgYmV0dGVyIHRoYW4gYmVmb3JlIGJ5IHN0YXRpbmcgdGhlIHJ1bGVzIGFuZCBlbmZvcmNpbmcgdGhlbSBhcyBvYmplY3RpdmVseSBhcyB3ZSBjYW4uIEFnYWluIG5vdCBwZXJmZWN0bHksIGFzIGxvbmcgYXMgaHVtYW5zIGFyZSBpbnZvbHZlZCBpbiBtb2RlcmF0aW9uIGl0IGNhbiBuZXZlciBiZSB0cnVseSBvYmplY3RpdmUsIGJ1dCB3ZSBoYXZlIGhhdmUgYSBkb3VidCBvciBxdWVzdGlvbiB3ZSBkaXNjdXNzIGFtb25nc3Qgb3Vyc2VsdmVzIGFuZCB0cnkgdG8gY29tZSBhbiBhZ3JlZW1lbnQsIHdoaWNoIGlzIHdoYXQgaGFwcGVuZWQgaGVyZS4gCkkgZ290IGEgY2FsbCB0aGUgbmV4dCBkYXkgZnJvbSBGZWRFeCBzYXlpbmcgdGhleSBoYWRuJ3QgbG9jYXRlZCBteSBwYWNrYWdlLiBUaGVpciBwcm9jZWR1cmUgaXMgdG8gbm90aWZ5IHRoZSBzZW5kZXIgYW5kIHRoZSBzZW5kZXIgaXMgdGhlIG9uZSB0aGF0IHJlcXVlc3RzIGEgcmVmdW5kLiBJIGNvbnRhY3QgQ29zdGNvIGFuZCB0aGV5IHRlbGwgbWUgdGhleSBoYXZlIHRvIHdhaXQgdG8gaGVhciBmcm9tIEZlZEV4IGJ1dCB0aGV5IGRvIHRoZWlyIHJlcG9ydC4gCjguIApJdCBsaWtlIHllbGxpbmcgImZpcmUiIGluIHRoZSBjcm93ZGVkIHRoZWF0ZXIuIFBlb3BsZSB3aWxsIGJlIG1vdmVkIHRvIGFjdCAgdG8gaW1pdGF0ZSB0aGUgYWN0cyBhbmQgZXZlbiB0byBleHBhbmQgdGhlIG9iamVjdHMgb2YgdGhlaXIgdG9ydHVyZTogZmlyc3QgbGl0dGxlIGtpdHRlbnMsIHRoZW4gcGlncywgdGhlbiBwZW9wbGUuLiAKQWZ0ZXIgdGhlIGFsbGVnYXRpb25zIGxhc3QgeWVhciwgTWFzc2FnZSBFbnZ5IGZvdW5kZWQgYSBzYWZldHkgYWR2aXNvcnkgY291bmNpbCB0aGF0IGluY2x1ZGVzIGluZHVzdHJ5IGV4ZWN1dGl2ZXMsIGEgZm9yZW5zaWMgcHN5Y2hvbG9naXN0IGFuZCBhIHJlcHJlc2VudGF0aXZlIGZyb20gUkFJTk4sIHRoZSBhbnRpIGFzc2F1bHQgYWR2b2NhY3kgb3JnYW5pemF0aW9uLiBTaGUgam9pbmVkIEFkIEFnZSBhZnRlciBhIGRvemVuIHllYXJzIG9mIHdyaXRpbmcgZm9yIENyYWluJ3MgTmV3IFlvcmsgQnVzaW5lc3MsIHdoZXJlIHNoZSBhbHNvIGZvY3VzZWQgb24gdGhlIHJldGFpbCBpbmR1c3RyeS4gCkknbSBzaW5jZXJlbHkgbG9va2luZyBpbnRvIGFwcGx5aW5nIGZvciBkaXNhYmlsaXR5LCBidXQgSSdtIG5vdCBzdXJlIGlmIEkgd291bGQgYmUgYWJsZSB0byBxdWFsaWZ5IHNpbmNlIEkgYW0gbWFycmllZCBhbmQgbXkgc3BvdXNlIG1ha2VzIHF1aXRlIGEgYml0IG1vcmUgdGhhbiBJIGRvLiBJc24ndCBpdCBhdCBsZWFzdCBwYXJ0aWFsbHkgaW5jb21lIGJhc2VkPwpBbHRob3VnaCBub3cgdGhhdCBJJ20gdHlwaW5nIHRoaXMgb3V0IGl0IGRvZXNuJ3QsIHdoeSBkcml2ZSB0aGUgZ2lybHMgNDAgbWludXRlcyB0byB0aGUgc2l0ZSBiZWZvcmUga2lsbGluZyB0aGVtPyBUaGUgb25seSByZWFzb24gdGhhdCBtYWtlcyBtb3JlIHNlbnNlIHRvIG1lIGlzIGJlY2F1c2Ugb2YgdGhlICJzaGFkb3dzIiB3aGljaCBJIHJlYWxpemUgaGFzbid0IGJlZW4gY29uZmlybWVkIGJ5IGFueW9uZSBpbiBMRSBzbyBJIGd1ZXNzIEkgc2hvdWxkbid0IGtlZXAgdGhpbmtpbmcgdGhhdCdzIGV2aWRlbmNlIHRoZXkgd2VyZSBzdGlsbCBhbGl2ZS4gCkpvaW4gdXMuIERyaW5rIHRoZSBibHVlIGtvb2xhaWQuIFlvdSBrbm93IHlvdSB3YW50IHRvLiA7KQpIb25lc3RseSwgSSBsb3ZlIHRoZSBmYWN0IHRoYXQgdGhlcmUgc28gbXVjaCBzdHVmZiBvbiBiYW5kY2FtcC4gRm9yIG1lLCBmaW5kaW5nIG5ldyBtdXNpYyBvbiB0aGVyZSBpcyBsaWtlIGEgdHJlYXN1cmUgaHVudCwgYW5kIGEgbG90IG9mIHRoZSBmdW4gb2YgaXQgaXMgY29tYmluZyB0aHJvdWdoIGFsbCBvZiBpdCBhbmQgaXQgbWFrZXMgZmluZGluZyB0aGUgaGlkZGVuIGdlbXMgZXZlbiBtb3JlIHJld2FyZGluZy4gUGx1cyBpdCBleHBvc2VzIG1lIHRvIGEgbG90IG9mIHN0dWZmIEkgd291bGRuIG5vcm1hbGx5IGxpc3RlbiB0byB3aGVuIGFsbCBJIGhhdmUgdG8gZ28gb2ZmIG9mIGlzIHRoZSBjb3ZlciBhcnQgYW5kIGEgY291cGxlIG9mIHRhZ3MuIElmIHNvbWVvbmUgZWxzZSB3ZXJlIG91dCB0aGVyZSAiZmluZGluZyB0aGUgaGlkZGVuIG1hc3RlcnBpZWNlcyIgZm9yIG1lLCBpdCB3b3VsZG4gYmUgYXMgbXVjaCBmdW4uIFBsdXMsIEkgZG9uIHRoaW5rIGl0IHBvc3NpYmxlIGFueXdheXMsIGl0IHRvbyBzdWJqZWN0aXZlLiBMaWtlIHRoZXkgc2F5OiBvbmUgbWFuIHRyYXNoIGlzIGFub3RoZXIgbWFuIHRyZWFzdXJlLgpJdCB0b29rIG1lIDUgbW9udGhzIHRvIGxlYXJuIGhvdyB0byBmYWxsIGFzbGVlcCBhbmQgc3RheSBvbiBteSBiYWNrLCBzbyBwZXJzaXN0ZW5jZSBpcyB0aGUga2V5LiAKSXQgaXMgZ29pbmcgdG8gYmUgdHJhdW1hdGljIHRvIHlvdSwgYnV0IHdoZW4gYWxsIGlzIHNhaWQgYW5kIGRvbmUgaXQgd2lsbCBiZSBiZXR0ZXIgdG8gYmUgZnJlZSBvZiBoZXIgdGhhbiB0byBrZWVwIGhlciBhcm91bmQgd2hlcmUgc2hlIGNhbiBodXJ0IHlvdS4gCkNvbnNpc3RlbnRseU5hcndoYWwgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCllvdSBhcmUgbm90aGluZyB0byBtZSBidXQganVzdCBhbm90aGVyIHRhcmdldC4gSSB3aWxsIHdpcGUgeW91IHRoZSBmdWNrIG91dCB3aXRoIHByZWNpc2lvbiB0aGUgbGlrZXMgb2Ygd2hpY2ggaGFzIG5ldmVyIGJlZW4gc2VlbiBiZWZvcmUgb24gdGhpcyBFYXJ0aCwgbWFyayBteSBmdWNraW5nIHdvcmRzLiAKV2UgaGF2ZSBhIHNvY2lldGFsIG1hbGFpc2UgZnJvbSBkZWNhZGVzIG9mIGluYWRlcXVhdGUgZ292ZXJubWVudCBpbmVydGlhIGFuZCB0aGUgZmVlbGluZ3Mgb2YgZnV0aWxpdHkgdGhhdCBmb2xsb3cuIFdlIGJlY29tZSBhY2N1c3RvbWVkIHRvIHN0ZXBwaW5nIHBhc3Qgb3VyIGZlbGxvdyBjaXRpemVucywgaHVkZGxlZCB1bmRlciBhd25pbmdzIGFuZCBpbiBkb29yd2F5cy4gClNvIHdoeSB3YXMgVmFkZXIgc28gaW52ZXN0ZWQgaW4gdGhlIGNvbnN0cnVjdGlvbiBhbmQgbWFpbnRlbmFuY2Ugb2YgdGhlIERlYXRoIFN0YXI/IEJlY2F1c2UgaGUga25vd3MgT2JpIHdhbiBjYW4gaG9sZCB0aGUgaGlnaCBncm91bmQgaWYgdGhlcmUgbm8gZ3JvdW5kIGxlZnQuIApUaGF0IGlzIHdoeSBpbmRlcGVuZGVudHMgZG9uIHZvdGUuIApTb21lb25lIHdobyBpcyByZWxheGVkIG1pZ2h0IHNob3cgbW9yZSBsb29zZW5lc3MgaW4gaG93IHRoZXkgZ2F0aGVyIHRoZWlyIGNoaXBzIHdoZW4gdGhleSBwdXQgaW4gYSBiaXQsIG9yIGhvdyB0aGV5IHBsYWNlIHRoZSBiZXQsIG9yIGFmdGVyIHRoZSBiZXQuIFRoZWlyIGV5ZXMgbWlnaHQgbW92ZSBhcm91bmQgbW9yZS4gV2hlcmVhcyB0aGlzIGlzIHJldmVyc2VkIGluIHBsYXllcnMgd2hvIGFyZSBibHVmZmluZy4gClN5c3RlbSBjYW4gaW5jcmVhc2UgdXNlIG9mIGFueSBzdWJzdGFuY2UgaWYgaXQgc3VpdHMgdGhlIHVzZXIgYW5kIHRoZSB1c2VyIGhhZCBhIHJlYXNvbiB0byB3YW50IG1vcmUgb2YgdGhlIHN1YnN0YW5jZS4gVGhhdCBhbiBhY3Jvc3MgdGhlIGJvYXJkIHRoaW5nIGFzIGFwcGxpY2FibGUgdG8gY2FmZmVpbmUgYXMgaXQgaXMgdG8gY3JhY2suIE5vdCBldmVyeW9uZSB3YW50cyBtb3JlIG9mIHRoZSBzdWJzdGFuY2UgdGhleSB1c2luZyB0aG91Z2gsIGFuZCBuaWNvdGluZSBpc24gZXNwZWNpYWxseSBrbm93biBmb3IgcmFtcGluZyB1cC9kaW1pbmlzaGluZyByZXR1cm5zIGxpa2UgY3JhY2sgaXMuIE15IG9ic2VydmF0aW9uIGlzIHRoYXQgbW9zdCBwZW9wbGUgZG9uIGluY3JlYXNlIHVzZSBvZiBuaWNvdGluZSBqdXN0IGJlY2F1c2UgaXQgZWFzeSBhbmQgcmVsYXRpdmVseSBjb25zZXF1ZW5jZSBmcmVlIHRvIGRvIHNvLiBFdmVyIGhlYXIgb2Ygc29tZW9uZSByYW1waW5nIHVwIHRoZWlyIHVzZSBvZiBuaWNvdGluZSBsb3plbmdlcy9ndW0/IE5vdCBzbyBtdWNoLiBJIGRvbiBrbm93IGFib3V0IHBvZHMsIGJ1dCBldmVyeW9uZSBJIGtub3cgd2hvIHZhcGVzIGhhcyB0byBtaXggdGhlaXIgb3duIG5pY290aW5lIGludG8gdGhlIGNhcnJpZXIsIHNvIHdlIGNhbiBlYXNpbHkgdHdlYWsgaXQgdXAgb3IgZG93biBpbiBzdHJlbmd0aCwgYnkgbWludXRlIGFtb3VudHMgaWYgd2UgbGlrZS4gT3ZlciB0aGUgbGFzdCBmZXcgeWVhcnMgYWxsIG9mIG15IGZyaWVuZHMgaGF2ZSBlaXRoZXIgbG93ZXJlZCB0aGVpciBzdHJlbmd0aHMgb3Igc3RheWVkIHRoZSBzYW1lLiBIb3cgb2Z0ZW4gdGhleS93ZSB2YXBlIGlzIGhhcmRlciB0byBvYnNlcnZlIGJ1dCBubyBvbmUgb2JzZXJ2YWJseSBtb3JlIHRodW1iIHN1Y2t5IHRoYW4gdGhleSB3ZXJlIGJlZm9yZS4KSGUgd2lsbCBtYWtlIHlvdSBmZWVsIGluc2FuZS4gCk5vdCB0aGlzICJoYXZlIHRvIGRlZmVuZCBhIGNlcnRhaW4gcGVyY2VudGFnZSBvZiB5b3VyIHJhbmdlIiBjcmFwIHRoZSB5b3VuZyBndW5zIGFyZSBhbHdheXMgZ29pbmcgb24gYWJvdXQsIHRoYXQganVzdCBsb3NlcyBtb25leSB3aGVuIGhlIGdvdCBpdC4gSGUgZWl0aGVyIGdvdCBpdCBvciBoZSBkb24gYW5kIGlmIHlvdSBjYW4gdGVsbCB0aGUgZGlmZmVyZW5jZSB0aGVuIEkgc3VnZ2VzdCB5b3UgZmluZCB5b3Vyc2VsZiBhIGRpZmZlcmVudCBnYW1lLCBzb24uLiAKSW4gdGhhdCBjYXNlIGp1c3QganVzdCBsZXQgaGltIGtlZXAgdGhlIG1vbmV5IGFuZCBsZXQgaGltIGJlIGEgcGhpbGFudGhyb3Bpc3QsIGRpdmlkaW5nIHVwIHRoZSBtb25leSB3b3VsZG4gbWFrZSBhbnl3aGVyZSBuZWFyIGFzIG11Y2ggaW50ZXJlc3QsIGVzcGVjaWFsbHkgZ2l2aW5nIGl0IHRvIHBlb3BsZSB3aG8gZG9uIGhhdmUgbmVhcmx5IGFzIG11Y2gga25vd2xlZGdlIGFib3V0IGludmVzdGluZyBhcyBoZSBkb2VzLgpUaGV5IGNhbiBwb3N0IHdoYXQgdGhleSB3YW50LCBidXQgYXQgdGhlIHNhbWUgdGltZSBhcyBhIGNvbnRlbnQgY3JlYXRvciwgSSBjYW4gYmUgdGhhdCBuYWdnaW5nIHBhcGVyIGN1dCB0byByZW1pbmQgdGhlbSB0aGF0IGl0J3Mgc3RpbGwgbm90IHJpZ2h0LiBJdCBzZWVtcyBsaWtlIGl0J3MgbW9yZSB0byBjb252aW5jZSB0aGVtc2VsdmVzIGFuZCB0aGVpciBlZ29zIHRoYXQgdGhleSdyZSByaWdodCByYXRoZXIgdGhhbiBhY3R1YWxseSB0byByZXNwb25kIHRvIG1lLiAKSSBoYWQgbWFueSBvYnN0YWNsZXMgaW4gbXkgbGlmZSBidXQgd291bGQgbmV2ZXIsIHVuZGVyIGFueSBjaXJjdW1zdGFuY2VzIGhhcm0gYSBoZWxwbGVzcyBjaGlsZC4gCkhhdmUgbG9uZyBiZWxpZXZlZCB0aGF0IHNpbXBseSByZW1vdmluZyBwcm92b2NhdGl2ZSB0aGlua2luZyBzdWNoIGFzIHRoaXMgZG9lcyBsaXR0bGUgdG8gYnVpbGQgYXdhcmVuZXNzIGFyb3VuZCBmYWN0cyBhbmQgZGlmZmVyZW50IGFwcHJvYWNoZXMgdG8gaGVhbHRoLCBpdCBzYWlkIGluIGEgc3RhdGVtZW50LiBJbiB0aGUgZm9ybSBvZiBhY2N1cmF0ZSBpbmZvcm1hdGlvbiBmcm9tIGV4cGVydHMgaW4gdGhlIGZpZWxkIGNhbiBoZWxwIGNyZWF0ZSBhIHNhZmVyIGFuZCBtb3JlIHJlc3BlY3RmdWwgZW52aXJvbm1lbnQuIENvbXBhbnkgc2FpZCBpdCBpcyBleHBsb3Jpbmcgd2F5cyB0byBwcm92aWRlIG1vcmUgYWNjdXJhdGUgaW5mb3JtYXRpb24gZnJvbSBleHBlcnQgZ3JvdXBzIHN1Y2ggYXMgdGhlIFdvcmxkIEhlYWx0aCBPcmdhbml6YXRpb24gYWJvdXQgdmFjY2luZXMgYXQgdGhlIHRvcCBvZiByZXN1bHRzIGZvciByZWxhdGVkIHNlYXJjaGVzLCBvbiBwYWdlcyBkaXNjdXNzaW5nIHRoZSB0b3BpYyBhbmQgb24gaW52aXRhdGlvbnMgdG8gam9pbiBncm91cHMuLiAKT3RoZXIgdGhhbiB0aGF0LCBpIGhhdmUgbm8gcGVyc29uYWwgaXNzdWUgd2l0aCB0aGlzIHdvbWFuIGJ1dCBpIHJlZnVzZSB0byBzYXkgdGhhdCBuYW1lLiAKSSBuZWVkIHRvIHByYWN0aWNlIHVzaW5nIG15IHJvbGxlZCBoZW0gZm9vdCBub3cgdGhhdCdzIGJlZW4gYSBkaXNhc3RlciB0aHVzIGZhci4gSSBxdWlsdGVkIHRoZSBBcGV4IHRvIHRoZSBsaW5pbmcgYW5kIGhhZCBiZXR0ZXIgbHVjayB3aXRoIHRoZSBBcGV4IHNpZGUgZG93bi4gClN0YXRlcyB0aGF0IHRoZSBjaGFtcCBpcyBmdW4gYnV0IHJlYWxseSBiYWQgYW5kIG5lZWRzIGJ1ZmZzLlRocmVzaDogUmV2ZXJ0IHRvIDguMTYvOC4xNy84LjE4IFRocmVzaCwgbmVyZnMgd2lsbCBiZSBhIGhpdCBidXQgaGUgc3RpbGwgVGhyZXNoIGhlIHRocml2aW5nIGR1ZSB0byBob3cgdGhlIG1ldGEgaXMgcmlnaHQgbm93ICsgQWZ0ZXJzaG9jay5VcmdvdDogTWFuYSBzdXN0YWluIHRha2VzIGEgaHVnZSBoaXQgKGNhbiBzYWZlbHkgcnVzaCBCbGFjayBDbGVhdmVyIGFueW1vcmUpLCBsb3NlcyBhIHRvbiBvZiBIUCBsYXRlIGdhbWUuIFByZXR0eSBiaWcgbmVyZiwgbGlrZWx5IGRlYWQgYmVjYXVzZSBoZSBhbHJlYWR5IGhhZCBjb3VudGVycy5ZYXN1bzogUklQIE1vZSAobm90IHJlYWxseSwgY2hhbmdlcyBhcmUgZmluZSBhbmQgaGUgYmFsYW5jZWQgYXQgdGhlIG1vbWVudCkuWmVkOiArMiB0byAzayB2aWV3ZXJzIHRvIExMIFN0eWxpc2ggUG9nLCBvdmVyYWxsIGl0IGEgbG90IG9mIGxvdmUgdG8gWmVkIHRoYXQgaGUgY2FuIHBvdGVudGlhbGx5IGNvbWUgYmFjayBpbnRvIHRoZSBtZXRhIChvcGVucyB1cCBjcmVhdGl2ZSBvcHRpb25zIHRvIHBpY2sgaGltKS4gCldoZW4gdHJ5aW5nIHRvIGhpdCB0aG9zZSBsb3dlc3Qgbm90ZXMsIHJlbGF4IHRoZSBqYXcgYXMgbXVjaCBhcyBwb3NzaWJsZSAgIHRoZSByZWVkIGhhcyB0byB2aWJyYXRlIGF0IGEgc2xvd2VyIGZyZXF1ZW5jeSwgYW5kIGlmIHRoZSBqYXcncyB0b28gdGlnaHQsIGl0J2xsIGNob2tlIHRoZSBzb3VuZCBhbmQgc3RvcCB0aGUgdmlicmF0aW9uLi4gCihGdWxsIEFuc3dlcikuIApJbiAxOTgwLCBmZXdlciB0aGFuIDYwJSBvZiBBbWVyaWNhbnMgdGhvdWdodCB0aGF0IGEgcGVyc29uIGNhbiAic3RhcnQgb3V0IHBvb3IsIHdvcmsgaGFyZCwgYW5kIGdldCBhaGVhZC4iIEJ5IDIwMDUsIG92ZXIgODAlIG9mIHRoZSBwb3B1bGF0aW9uIHRob3VnaHQgdGhlIEFtZXJpY2FuIERyZWFtIHdhcyBwb3NzaWJsZS4gSW4gb3RoZXIgd29yZHMsIHRoZSBBbWVyaWNhbiBEcmVhbSBoYWQgdHVybmVkIGludG8gQW1lcmljYW4gRGVtZW50aWEuCk1hbmRhcmEgU3BhIGFuZCBvdmVyIDIwIHJlc3RhdXJhbnRzIGFuZCBsb3VuZ2VzLCA5MCBzaG9wcyBhbmQgc2VydmljZXMsIGRhaWx5IGN1bHR1cmFsIGFjdGl2aXRpZXMsIG5pZ2h0bHkgZW50ZXJ0YWlubWVudCBhbmQgbHVzaCB0cm9waWNhbCBnYXJkZW5zLCBhbmQgd2F0ZXJmYWxscy4gClRhbGsgdG8geW91ciBkb2N0b3IgcGxlYXNlLCBmb3IgdGhlIGxvdmUgb2YgeW91ciBvd24gc2FuaXR5LiBFdmVuIGlmIHlvdSBkb24ndCBzdGF5IHdpdGggdGhpcyBndXkgZHVlIHRvIGNpcmN1bXN0YW5jZXMsIGlmIHlvdSBhcmUgYXMgYXZlcnNlIHRvIGhhdmluZyBjaGlsZHJlbiBhcyB5b3UgYXJlLCB5b3UgQ0FOTk9UIGxlYXZlIHByZXZlbnRpb24gc29sZWx5IHVwIHRvIHlvdXIgcGFydG5lci4KVGhlIG1vdGhlciBhbmQgZGF1Z2h0ZXIgZ290IGludG8gYW4gYXJndW1lbnQgb3ZlciB0aGUgbG9zdCBtb25leSwgYWxsZWdlZGx5IHByb21wdGluZyB0aGUgbW90aGVyIHRvIGJlY29tZSAiZW5yYWdlZCIsIHBvbGljZSBzYWlkLiBJdCBpcyBhbGxlZ2VkIHRoZSB3b21hbiBzbGFwcGVkIGhlciBkYXVnaHRlciBoYXJkIG9uIHRoZSBmYWNlLCBsZWF2aW5nIGEgcmVkIG1hcmsgdGhhdCBjb3VsZCBzdGlsbCBiZSBzZWVuIGJ5IHBvbGljZSB0aHJlZSBob3VycyBsYXRlci4gClByb2JhYmx5IHRoZSBlYXNpZXN0IHZlcnNpb24gZm9yIGEgY2FzdWFsIGdhbWUgb2Ygc3RyaXAgcG9rZXIuIApUaGUgZnVuIGtpY2tzIG9mZiBTYXR1cmRheSBhbmQgY29udGludWVzIG9uIHVudGlsIFN1bmRheS4gCkJ1dCBsdWNrLCBhbmQgbm90IHNraWxsLCBpcyBnb2luZyB0byBkZXRlcm1pbmUgd2hldGhlciB3ZSBvciB0aGUgZGVhbGVyIHdpbGwgZ2V0IHRoZSBhbnRpY2lwYXRlZCBibGFja2phY2sgb3IgdHdlbnR5LiBTbywgaWYgd2UgZ2V0IG1vcmUgdGhhbiBvdXIgc2hhcmUgb2YgYmxhY2tqYWNrcyBhbmQgdHdlbnRpZXMgaW4gdGhlc2Ugc2l0dWF0aW9ucywgd2Ugd2lsbCBtYWtlIGEgcHJvZml0LiAKVW5lIGFsaW1lbnRhdGlvbiByaWNoZSBlbiBmaWJyZXMgcGVybWV0IGRlIHByb3RnZXIgbCdvcmdhbmlzbWUgY29udHJlIGwnYXRocm9zY2xyb3NlLiBMZXMgZmlicmVzIGFsaW1lbnRhaXJlcywgZW4gcGFydGljdWxpZXIgbGVzIGZpYnJlcyBzb2x1YmxlcyBwcnNlbnRlcyBkYW5zIGxlcyBsZ3VtaW5ldXNlcywgbGVzIGZydWl0cyBldCBsZXMgbGd1bWVzIHBlcm1ldHRlbnQgZGUgcmR1aXJlIGVmZmljYWNlbWVudCBsZSB0YXV4IGRlIGNob2xlc3Ryb2wuTGltaXRleiB2b3RyZSBjb25zb21tYXRpb24gZGUgZ2x1Y2lkZXMgcmFmZmlucyAoc3VjcmUgZXQgZ3JhaW5zIHJhZmZpbnMpIGNhciBjZXMgZGVybmllcnMgc29udCB1biBmYWN0ZXVyIHBhcnRpY3VsaXJlbWVudCBhZ2dyYXZhbnQgZGFucyBsZSBkdmVsb3BwZW1lbnQgZGUgbCdhdGhyb3NjbHJvc2UsIGRlIGwnaW5mbGFtbWF0aW9uIGV0IGRlIGxhIHJzaXN0YW5jZSAgbCdpbnN1bGluZS5GYWN0ZXVycyBkZSByaXNxdWVzIHBvdXIgbGEgc2FudCBjYXJkaWFxdWUgKGF0aHJvc2Nscm9zZSBlbiBwYXJ0aWN1bGllcilMZSB0YWJhZ2lzbWVVbiB0YXV4IGRlIGNob2xlc3Ryb2wgZGFucyBsZSBzYW5nIHRyb3AgbGV2IChlbiBwYXJ0aWN1bGllciBkZSBjaG9sZXN0cm9sIExETCkgPz9VbmUgdGVuc2lvbiBhcnRyaWVsbGUgbGV2ZUxhIHJzaXN0YW5jZSAgbCdpbnN1bGluZVVuZSBpbnN1ZmZpc2FuY2UgZGUgbGEgZm9uY3Rpb24gdGh5cm9kaWVubmVVbiBzdGF0dXQgYW50aW94eWRhbnQgZmFpYmxlVW4gZmFpYmxlIHRhdXggZCdhY2lkZSBncmFzIG9tZWdhIDNMJ2F1Z21lbnRhdGlvbiBkZSBsYSBmb3JtYXRpb24gZGUgZmlicmlub2duZVVuIGZhaWJsZSB0YXV4IGRlIG1hZ25zaXVtIG91IHBvdGFzc2l1bVVuIHRhdXggbGV2IGQnaG9tb2N5c3RpbmVMZXMgYW5hbHlzZXMgYmlvbG9naXF1ZXNQcm90aW5lIEMgcmFjdGl2ZSwgSGJBMWMsIFRTSCwgaW9ub2dyYW1tZSBldGMuTCdFQUwgKGV4cGxvcmF0aW9uIGQndW5lIGFub21hbGllIGxpcGlkaXF1ZSkgY29tcHJlbmQgbGUgY2hvbGVzdHJvbCB0b3RhbCwgbGUgZG9zYWdlIGR1IEhETCwgbGUgY2FsY3VsIGR1IExETCAobWF1dmFpcykgZXQgbGVzIHRyaWdseWNyaWRlcy4gCk9oLCBpdCBhYnNvbHV0ZWx5IGlzLiBKdXN0IGJlY2F1c2Ugc29tZW9uZSBkb2Vzbid0IHNjcmVhbSBhbmQgc3RhcnQgZmxhaWxpbmcgaW1tZWRpYXRlbHkgZG9lc24ndCBtZWFuIHRoZXkgYXJlIGEgY29uc2VudGluZyBwYXJ0bmVyLiBGdWNrIG1hbiwgdGVycnkgY3Jld3Mgd2FzIHNleHVhbGx5IGFzc2F1bHRlZC4gU29tZXRpbWVzIHNob2NrIG9yIGZlYXIgY2FuIGdvIGEgbG9uZyB3YXkuCkNsaWNrIG9uICJDbG9zZSBZb3VyIEFjY291bnQuIiAuCk5vIGluc3VsdHMgb3IgYXR0YWNrcyBvZiBhbnkga2luZC4gQWJ1c2l2ZSBwb3N0ZXJzIHdpbGwgYmUgYmFubmVkLiBXZSBkb24gY2FyZSBpZiB0aGV5IGNhbGxlZCB5b3UgbmFtZXMgZmlyc3Q7IHJlcG9ydCB0aGUgYWJ1c2UgdG8gdXMgYW5kIHdlIHdpbGwgZGVhbCB3aXRoIHRoZSBvZmZlbmRpbmcgcGFydHkgKGdldHRpbmcgaW50byBhIG5hbWUgY2FsbGluZyBzcGF0IHdpbGwgbGlrZWx5IGp1c3QgZ2V0IGFsbCBwYXJ0aWVzIGludm9sdmVkIGJhbm5lZC4pVGhlIHNraWxsc2V0IGNyb3Nzb3ZlciBiZXR3ZWVuIGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciBhbmQgYSBtYXJrZXQgdHJhZGVyIGlzIGFjdHVhbGx5IGh1Z2UuIE5vdCBvbmx5IHRoZSBzdGF0aXN0aWNhbC9wcm9iYWJpbGlzdGljIG1pbmRzZXQgcmVxdWlyZWQsIGJ1dCB0aGUgcHN5Y2hvbG9naWNhbCBhc3BlY3RzIG9mIGRlYWxpbmcgd2l0aCByaXNrLCByaWRpbmcgb3V0IGRvd25zd2luZ3MvdmFyaWFuY2UgYW5kIGNvbmNlbnRyYXRpbmcgb24gdGhlIGxhcmdlciBwaWN0dXJlLgpWb2ljaSBtYWludGVuYW50IHVuZSBub21lbmNsYXR1cmUgbm9uIGV4aGF1c3RpdmUgZGVzIHByaW5jaXBhbGVzIHBpY2VzLiB0YW50IGRvbm4gcXUnb24gbid1dGlsaXNlIHBhcyB0b3Vqb3VycyBsYSBwbGFudGUgZW50aXJlIHBvdXIgc2VzIHZlcnR1cyBhcm9tYXRpcXVlcyBldCBjb25kaW1lbnRhaXJlcywgY2VzIHBsYW50ZXMgb250IHQgY2xhc3NlcyBlbiBmb25jdGlvbiBkZSBsYSBwYXJ0aWUgdXRpbGlzZSA6IHJhY2luZXMgZXQgcmhpem9tZXMsIGZldWlsbGVzIGV0IHRpZ2VzLCBmcnVpdHMgZXQgYmFpZXMsIGVuZmluLCBzZW1lbmNlcy4KUHJvZmVzc29yIERva3RvciBNZXJnbnVzIFdlcnN0IHd1cmRlIGltIEFsdGVyIHZvbiAzIEphaHJlbiBhbHMgU29obiBkZXMgUGVyem9sb2dpZXByb2Zlc3NvcnMgVG9ydmFsZCBCcnN0ZWluIHVuZCBkZXIgQ3Jlc3RvcGFsYW56ZGl2ZXJtZW56b2xvZ2lzdGlrZXJpbiBNYXJpYSBCZWF0ZSBEcnVzZSBTY2hucHBjaGVuIGluIGJlcmxhbmdlbiBpbSBIaW50ZXJhbGxndSBnZWJvcmVuIHVuZCBzcHJhY2ggc2Nob24gYmVpIHNlaW5lciBHZWJ1cnQgNCBTcHJhY2hlbiBmbGllZW5kLiBTZWluZSBFbHRlcm4gYmVtZXJrdGVuIGZyaHplaXRpZyBzZWluZSBhdWVyZ2V3aG5saWNoZSBCZWdhYnVuZyBmciBhbGxlcyBUZWNobmlzY2ggYmVyc2lubmxpY2hlIHVuZCBzY2h1bHRlbiBpaG4gaW0gQWx0ZXIgdm9uIDQgSmFocmVuIGltIEJlcm5oYXJkIERyb2xzdGUgSGVzc2luZyBHeW1uYXNpdW0genUgQXVnc2J1cmcgICBlaW5lciBBdXNiaWxkdW5nc3N0dHRlIGZyIGhvY2hiZWdhYnRlIEZvcnNjaGVyIGltIEJlcmVpY2ggZGVyIEFzdHJhbHBoeXNpayAgIGVpbi4gCldlIHRoZSBwZW9wbGUgY2FuIHByZXBhcmUgbm93IHRvIHB1dCBwcmVzc3VyZSBvbiB0aGUgU3RhdGUgbm90IHRvIHJlc3BvbmQgdG8gdGVycm9yaXNtIHdpdGggd2FyIGxpa2UgdGFjdGljcy4gClRoYW5rIHlvdSBmb3IgeW91ciBpbnRlcmVzdCBpbiBpbmcgYXQgVUNMQSBCcnVpbiBEYXkgZm9yIGFkbWl0dGVkIHRyYW5zZmVycyEgV2UgYW50aWNpcGF0ZSBhcHByb3hpbWF0ZWx5IDEwLDAwMCBhZG1pdHRlZCB0cmFuc2ZlciBzdHVkZW50cyBhbmQgdGhlaXIgZ3Vlc3RzIHdpbGwgdmlzaXQgdGhlIGNhbXB1cywgYW5kIHlvdXIgaGVscCBpcyB2aXRhbCB0byBtYWtpbmcgdGhpcyBkYXkgYSBzdWNjZXNzLiBVQ0xBIEJydWluIERheSBnaXZlcyBhZG1pdHRlZCB0cmFuc2ZlciBzdHVkZW50cyB0aGUgY2hhbmNlIHRvIHRvdXIgdGhlIGNhbXB1cywgaGVhciBmcm9tIHByb2Zlc3NvcnMsIG1lZXQgY3VycmVudCBzdHVkZW50cyBhbmQgZXhwZXJpZW5jZSB3aGF0IGxpZmUgaXMgbGlrZSBhcyBhIEJydWluLiBPdXIgZ29hbCBpcyB0byBwYWNrIGFsbCBVQ0xBIGhhcyB0byBvZmZlciBpbnRvIG9uZSBzcGlyaXRlZCBhbmQgdW5mb3JnZXR0YWJsZSBkYXkuIAoiVG8gc2hvdyBoZXIgaGlzIHBpY3R1cmUgYXMgY2F1c2luZyBoZXIgdG8gYmVsaWV2ZSB0aGF0IHdhcyBoaW0gYXQgdGhhdCBzcGEgaXMganVzdCB1bmNvbnNjaW9uYWJsZSwiIEdvbGRlbiBzYWlkLgpUaGF0IG5vdCBjb21wbGV0ZWx5IHRydWUuIExpa2UgSSBhbHJlYWR5IHNhaWQsIG1hbnkgcGFydHMgb2YgQmVya3NoaXJlIENvdW50eSBzdGlsbCBoYXZlIGRpYWwgdXAgdW5sZXNzIHRoZXkgZ28gdG8gYSBsaWJyYXJ5IG9yIGdvdmVybm1lbnQgYnVpbGRpbmcgd2l0aCBEU0wuIApJbiB0aGUgZ2VvcG9saXRpY2FsIHBva2VyIGdhbWUgY3VycmVudGx5IHVuZGVyd2F5IGluIFVrcmFpbmUsIFJ1c3NpYSBhcHBlYXJzIHRvIGJlIGhvbGRpbmcgc29tZSBzdHJvbmcgY2FyZHMsIHVzaW5nIGl0cyBjb250cm9sIG92ZXIgbXVjaCBvZiBXZXN0ZXJuIEV1cm9wZSdzIGVuZXJneSBzdXBwbGllcyBhcyBhIGRldGVycmVudCB0byBhbnkgRXVyb3BlYW4gVW5pb24gYWN0aW9ucyBhZ2FpbnN0IE1vc2NvdydzIGRlIGZhY3RvIG9jY3VwYXRpb24gb2YgQ3JpbWVhLiBBY2NvcmRpbmcgdG8gdGhlIEV1cm9wZWFuIENvbW1pc3Npb24sIG92ZXIgNTQgcGVyY2VudCBvZiB0aGUgRVUncyB0b3RhbCByZWdpb25hbCBlbmVyZ3kgY29uc3VtcHRpb24gaW4gMjAxMCB3YXMgaW1wb3J0ZWQgZnJvbSBvdXRzaWRlIHRoZSBFVS4gQW5kIGEgbGFyZ2UgcGVyY2VudGFnZSBvZiB0aGF0IGltcG9ydGVkIGVuZXJneSwgaW5jbHVkaW5nIGFib3V0IG9uZSBmb3VydGggb2YgdGhlIG9pbCBhbmQgZ2FzIHVzZWQgaW4gRXVyb3BlLCBvcmlnaW5hdGVzIGluIFJ1c3NpYS4gClNlaXQgSmFocmVuIHd1cmRlIHNpZSBkaXNrdXRpZXJ0LCBkaWUgZ2VwbGFudGUgQXV0b2JhaG4gbWl0dGVuIGR1cmNoIGRhcyBBcmlkYW5ldGFsIGF1ZiBMYSBQYWxtYS4gRGFzcyBkaWVzZSB2bGxpZyBiZXJkaW1lbnNpb25pZXJ0ZSBTdHJhZSBrb2xvZ2lzY2ggdW5kIGF1Y2gga29ub21pc2NoIGVpbiBVbnNpbm4gaXN0LCBzYWdlbiBwcmFrdGlzY2ggYWxsZSBoaWVyIGF1ZiBMYSBQYWxtYSB1bmQgc2VsYnN0IGRpZSBCcmdlcm1laXN0ZXJpbiB2b24gRWwgUGFzbywgYXVmIGRlcmVuIEdlbWVpbmRlZ2ViaWV0IHNpZSBnZXBsYW50IGlzdCwgaGF0IHNpY2ggdmVoZW1lbnQgZGFnZWdlbiBhdXNnZXNwcm9jaGVuLiBTb2dhciBkaWUgbWVpc3RlbiBBdXRvZmFocmVyIGhhbHRlbiBzaWUgZnIgYWJzb2x1dCBiZXJmbHNzaWcuSW56d2lzY2hlbiB3dXJkZSBhbGxnZW1laW4gYW5nZW5vbW1lbiBkaWUgQXV0b2JhaG5wbG5lIHNlaWVuIG9obmVoaW4gZnIgaW1tZXIgc2NodWJsYWRpc2llcnQgdW5kIGluIFplaXRlbiB3aWUgZGllc2VuIGtvbm9taXNjaCBhdWNoIG5pY2h0IG1laHIgdW1zZXR6YmFyLiAKTGEgbm91dmVsbGUgZXhwcmVzc2lvbiBzZW1ibGUgcGx1cyBhZHF1YXRlIGVuIHJlbnZveWFudCAgbCdpZGUgZGUgIGZhY3VsdHMgbWVudGFsZXMgLiAKVGhhdCBsaWtlIGFza2luZyB3aHkgd2UgY2FuIGhhdmUgYSBjb252ZXJzYXRpb24gYWJvdXQgTWFybGJvcm8gTGlnaHRzIGNhdXNpbmcgY2FuY2VyIHdpdGhvdXQgcGVvcGxlIG1lbnRpb25pbmcgb3RoZXIgdG9iYWNjbyBwcm9kdWN0cy4gSXQgYWxsIHRoZSBzYW1lIGlzc3VlLiBQZW9wbGUganVzdCBuZWVkIHRvIHN0b3AgY3V0dGluZyBzaGl0IG9mZiBvZiBiYWJpZXMuIFRoZSByZWFzb24gcGVvcGxlIGJyaW5nIHVwIGNpcmN1bWNpc2lvbiBzbyBtdWNoIGlzIHRoYXQgdW5saWtlIEZHTSBjaXJjdW1jaXNpb24gaXMgc3RpbGwgd2lkZWx5IHByYWN0aWNlZCBpbiB0aGUgVVMuIElmIGNpcmN1bWNpc2lvbiB3YXNuIGEgaHVnZSBwcm9ibGVtIGluIHRoZSBVUywgcGVvcGxlIHdvdWxkbiBicmluZyBpdCB1cCB3aGVuIHlvdSBzdGFydCB0YWxraW5nIGFib3V0IGhvdyBob3JyaWJsZSBpdCBpcyB0byBjaG9wIG9mZiBwYXJ0cyBvZiBjaGlsZHJlbiBnZW5pdGFscywgYnV0IGFzIGxvbmcgaXQgY29udGludWVzIHRvIGhhcHBlbiBvbiBhIGRhaWx5IGJhc2lzIGluIEFtZXJpY2EgeW91IGNhbiBleHBlY3QgQW1lcmljYW5zIGFyZSBnb2luZyB0byBicmluZyBpdCB1cCB3aGVuZXZlciB0aGUgdG9waWMgb2YgY3V0dGluZyBoZWFsdGh5IGJhYnkgcGFydHMgY29tZXMgdXAuIEl0IHdvdWxkIGJlIHdlaXJkIGlmIGl0IHdhc24gYnJvdWdodCB1cC4KQ3JpbWluYWwgYWN0cyBhcmUgZ2VuZXJhbGx5IHJlbGF0ZWQgdG8gbGlmZSBjaXJjdW1zdGFuY2VzIHRoYXQgcHV0IHBlb3BsZSBpbiB0cmVtZW5kb3VzbHkgc3RyZXNzZnVsIHNpdHVhdGlvbnMuIApBbHNvLCB3YXRjaCB0aGUgdmlkZW8gb2YgdGhlIGdpcmwgcmVwb3J0ZXIgZ2V0IGF0dGFja2VkIGF0IHRoZSBiZWdpbm5pbmcgb2YgaGlzIHZpZGVvIHdoaWNoIGlzIHdoYXQgc2VudCBoaW0gdGhlcmUgaW4gdGhlIGZpcnN0IHBsYWNlLi4gCk11bHRpcGxlIHN0dWRpZXMgYXJlIHJlcXVpcmVkIHRvIHJlYWxseSBlc3RhYmxpc2ggc29tZXRoaW5nLilUZXhhczEwMyAgMSBwb2ludCAgc3VibWl0dGVkIDE5IGhvdXJzIGFnb0kgdGhpbmsgSSBhbSBub3QgYSBjbGltYXRlIHNjaWVudGlzdCwgYnV0IEkgZG8gaGF2ZSB0aGUgY2FwYWNpdHkgdG8gZXZhbHVhdGUgY2xpbWF0ZSByZXNlYXJjaC4gTWV0aG9kb2xvZ3ksIHN0YXRzLCBldGMgZXRjLCBhbmQgdG8gZXZhbHVhdGUgdGhlIG9waW5pb25zIG9mIG90aGVycy4gSSdtIHN1cmUgeW91IGRvIHRvbywgSSdtIG5vdCB0cnlpbmcgdG8gZGlzY3JlZGl0IG9yIHRocm93IG91dCBhcyBob21pbmVtIGF0dGFja3MuQnV0IHRoZSB0aXRsZSBvZiB0aGlzIHRocmVhZCB3YXMgYWJvdXQgYW4gYXJ0aWNsZSB0aGF0IGlzIGRlc2NyaWJlZCBhcyB0aGUgZ29sZCBzdGFuZGFyZCB0aGF0IGlzIGludGVycHJldGVkIGJ5IG1lZGlhIGFzIHByb29mIG9mIGdsb2JhbCB3YXJtaW5nLiAKIlRoaXMgaXMgYWxsIGZvciBzaG93LiAKV2UgaGF2ZSBhIGxvdCBvZiBkZWJ0LiAKVGhlc2UgbXVzY2xlcyB1c3VhbGx5IGNvbnRyYWN0IHZvbHVudGFyaWx5LCBtZWFuaW5nIHRoYXQgeW91IHRoaW5rIGFib3V0IGNvbnRyYWN0aW5nIHRoZW0gYW5kIHlvdXIgbmVydm91cyBzeXN0ZW0gdGVsbHMgdGhlbSB0byBkbyBzby4gCk5vdGhpbmcgSSBoYXZlIHRyaWVkIGhhcyBldmVyIGNvbXBhcmVkIGluIGVmZmljYWN5IHdoZW4gaXQgY29tZXMgdG8gUGF1bGEgQ2hvaWNlIGFuZCBzYWxpY3lsaWMgYWNpZCBwcm9kdWN0cyAgIG9uZSBvZiB0aGUgZmV3IFBDIHByb2R1Y3RzIEkgd2lsbCBzdGlsbCBzaGVsbCBvdXQgJCQgZm9yIHdoZW4gbXkgc3VwcGx5IHJ1bnMgb3V0Li4gCk5vIHRoYW5rcy4gClZpb2xhIHdhcyBmaW5lZCAyNiBkb2xsYXJzICh0b2RheSwgdGhyZWUgaHVuZHJlZCBkb2xsYXJzKS4gClRoaXMgaXMgYW4gaW1wb3J0YW50IGFzc3VtcHRpb24gdG8gaGF2ZSBhcyB3ZWxsLiAKU28gVGV4YXMgYWxyZWFkeSBoYXMgYW4gaW4gaG91c2UgY29uc3VsdGFudCB3aG8ga25vd3MgdGhlIGNhc2lubyBidXNpbmVzcyBhbmQgd291bGQgYmUgbW9yZSB0aGFuIHdpbGxpbmcgdG8ganVtcCBzdGFydCB0aGUgcHJvY2VzcyEuIApEci4gV2lsbGlhbSBaYW5lLCB0aGUgbWVkaWNhbCBleGFtaW5lciB3aG8gcGVyZm9ybWVkIExsb3lkJ3MgYXV0b3BzeSwgc2FpZCBMbG95ZCB3YXMgc2hvdCBmaXZlIHRpbWVzLiBBY2NvcmRpbmcgdG8gWmFuZSwgdGhlIHNlY29uZCBidWxsZXQgcHVuY3R1cmVkIExsb3lkJ3MgaGVhcnQsIHdoaWNoIGhlIHNhaWQgd291bGQgaGF2ZSBiZWVuIGZhdGFsIGluICJzZWNvbmRzIHRvIG1pbnV0ZXMuJycKU28gdGhlIG9ubHkgd2F5IGEgaGlnaGVzdCBwYXlpbmcgbWVtYmVyIGdldHMgYSByZWR1Y3Rpb24gaXMgd2l0aCBhIHJlZmVycmFsLCB3aGlsZSBhbnlvbmUgZWxzZSB3aG8ganVzdCBhc2tzIHRvIHVwZ3JhZGUgdGhlaXIgbWVtYmVyc2hpcCBnZXRzIGl0IGF0IGEgcmVkdWNlZCByYXRlIGxvd2VyIHRoYW4gdGhlIGhpZ2hlc3QgcGF5aW5nIG1lbWJlci4gVHdvIHllYXJzIHdpdGggdGhlbS4gCkV4aXN0dWogdHJpIHJ6bmUgdHlweSBkZXRla3Rvcm92IGtvdm92OyBkZXRla3RvcnkgcG9oeWJ1LCBwdWx6IGRldGVrdG9yeSBhIGRldGVrdG9yeSBtdWx0aSBmcmVxdWVuY3kuIERldGVrdG9yeSBwb2h5YnUgZnVuZ292YSBuYWpsZXBpZSBwcmUgcGR1IGEgdiBwb3VpdGllIGVyc3R2ZWogdm9keSwgcHVseiBqZWRub3RreSBmdW5ndWogbmFqbGVwaWUgdiBzbGFuZWogdm9kZS4gClRoZSBzZXZlbiBpbiBvbmUgdG91Y2ggc2NyZWVuIHZpZGVvIHBva2VyIG1hY2hpbmUgZ2FtZSBpcyBhIHZlcnkgZXhjaXRpbmcgdW5pdCB0aGF0IGFueSBhdmlkIHBva2VyIHBsYXkgd2lsbCB0aG9yb3VnaGx5IGVuam95IGhhdmluZyBpbiB0aGVpciBob21lIG9yIGV2ZW4gaW4gdGhlaXIgb2ZmaWNlISBUaGlzIHBhcnRpY3VsYXIgZ2FtZSBicmluZ3MgdGhlIHdob2xlIGNhc2lubyBleHBlcmllbmNlIHJpZ2h0IHRvIHlvdSBzbyB0aGF0IHlvdSBhcmUgYWJsZSB0byBleHBlcmllbmNlIGl0IGZpcnN0aGFuZC4gQW1hemluZ2x5LCB0aGUgdW5pdCBpcyBzbyBhZHZhbmNlZCB0aGF0IGl0IG1ha2VzIHJlYWxpc3RpYyBzb3VuZHMgdGhhdCByZWZsZWN0IHRoYXQgb2YgY29pbnMgZHJvcHBpbmcgd2hlbiB5b3Ugd2luIHRoZSByZWFsIGphY2twb3QgaW4gYSBjYXNpbm8uIApTaXggU2VsZiBEZWZlbnNlIFByaW5jaXBsZXMgRXZlcnkgV29tYW4gU2hvdWxkIEtub3cKVG9kYXksIGZhY2lhbCBoYWlyIGlzIGdhaW5pbmcgcG9wdWxhcml0eSBpbiB0aGUgd29ybGQgb2YgbWVuJ3MgZ3Jvb21pbmcgYW5kIGhhaXJzdHlsZS4gTWVuIGFyZSBiZWdpbm5pbmcgdG8gY2hvb3NlIHNpZGVidXJucyBhcyBhIHdheSB0byBmcmFtZSB0aGUgZmFjZSB3aXRob3V0IGhhdmluZyB0byByZXNvcnQgdG8gYSBmdWxsIGJsb3duIGJlYXJkLiBHZXR0aW5nIHNpZGVidXJucywgaG93ZXZlciwgcmVxdWlyZXMgbWFpbnRlbmFuY2UgcHJvY2VkdXJlcyB0byBrZWVwIHRoZSBoYWlyIG9uIHlvdXIgc2lkZWJ1cm5zIHNvZnQgYW5kIGNsZWFuLiBIZXJlJ3MgaG93LgpBbHNvIGhlIHdvdWxkIHRleHQgaGlzIGZyaWVuZHMgYWJvdXQgZ29pbmcgb3V0IHRvIGJhcnMgdG8gbWVldCBsb3RzIG9mIGdpcmxzLiBJIHdhcyBsaXZpZC4gVGhpcyB3YXMgYmFjayBpbiBPY3RvYmVyIGFuZCBJIGRpZG4ndCBzYXkgYSB3b3JkIHRvIGhpbSB0aGF0IG1vcm5pbmcgYW5kIHdoZW4gaGUgbGVmdCBmb3Igd29yaywgSSBjYWxsZWQgdXAgbXkgYnJvdGhlciBhbmQgaGlzIG1hcmluZSBmcmllbmRzIGFuZCBwYWNrZWQgdXAgYW5kIG1vdmVkIG15IHNvbiBhbmQgSSB0byBteSBtb20ncyBob3VzZS4gCkJpZ19mYXRfaGFwcHlfYmFieSAgOCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpPdmVyIGhpcyBoZWFkIExldmluIG1hZGUgb3V0IHRoZSBzdGFycyBvZiB0aGUgR3JlYXQgQmVhciBhbmQgbG9zdCB0aGVtIGFnYWluLiAKU3F1YXRzIG9uIHRoZSBvdGhlciBoYW5kLCBoYXMgYmVlbiB0aGUgc2FtZSBhdCBhcm91bmQgMTQ1a2cgZm9yIHRoZSBwYXN0IDIgeWVhcnMuIE1lZGlvY3JlIGluIGV2ZXJ5IHNlbnNlIEkgZ3Vlc3MuIEhhaGEuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ28KTXIgQnJvY2sgc2FpZCBNciBNY05hbWVlIG1hZGUgc3RhZmYgZmVlbCB1bmNvbWZvcnRhYmxlLiBUaGUgYmFyIGhhcyBiZWVuIGNsb3NlZCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoaXMgd2VlaywgcmVwb3J0ZWRseSBkdWUgdG8gZmV3IHN0YWZmIHJlbWFpbmluZyBvbiB0aGUgYm9va3MuClRoYXQgbWlnaHQgYmUgd2h5IHRoZXkgaW5qZWN0IHRoZWlyIGp1bmsgd2l0aCBmaWxsZXIgaW5qZWN0aW9ucyBvciBnbyB1bmRlciB0aGUga25pZmUgaW4gb3JkZXIgdG8gZ2V0IGFuIGltcGxhbnQuIFRoaXMgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IHN1Y2ggc3VyZ2VyaWVzIGNhbiB0dXJuIGRlYWRseS4KSXQgbm90IHN1cnByaXNpbmcsIGJ1dCBpdCBpcyBkaXNhcHBvaW50aW5nIHRvIGFsd2F5cyBrbm93IHlvdSBnb2luZyB0byBiZSB0aGUgYnV0dCBvZiB0aGUgam9rZS4gCkFkZGl0aW9uYWxseSwgeW91IGNhbiBhZHZvY2F0ZSBmb3IgaGFyc2hlciBhbmltYWwgY3J1ZWx0eSBsYXdzLCBhbmQgc3RpbGwgYWR2b2NhdGUgYW5pbWFsIHJpZ2h0cy4gVGhleSBub3QgbXV0dWFsbHkgZXhjbHVzaXZlLiBUaGF0IHdoeSB0aGVyZSBhcmUgbWFueSBzdGF0ZXMgdGhhdCBoYXZlIGxhd3MgcmVnYXJkaW5nIHRoZSB0cmVhdG1lbnQgb2YgYW5pbWFscyBmb3IgY29uc3VtcHRpb24sIGluY2x1ZGluZyB0aGF0IHRoZXkgYXJlIG5vdCB0byBzdXN0YWluIHBhaW4vY3J1ZWx0eS90b3J0dXJlLCB3aGlsZSBiZWluZyBwcm9jZXNzZWQuIE5vdywgd2hldGhlciBvciBub3QgdGhhdCBlbmZvcmNlZCwgaXMgYW4gaXNzdWUsIHdoaWNoIGdvZXMgaGFuZCBpbiBoYW5kIHdpdGggYW5pbWFsIGNydWVsdHkgbGF3cy4KVGhlIGNhc2hsZXNzIHNvY2lldHkgd2lsbCBiZSBhIG5ldyB3b3JsZCBmcmVlIG9mICQxIGFuZCAkMiBjb2lucywgb3IgJDUgb3IgJDEwIGJhbmsgbm90ZXMuIEEgbmV3IHdvcmxkIGluIHdoaWNoIGFsbCBjb21tZXJjaWFsIHRyYW5zYWN0aW9ucywgZnJvbSBidXlpbmcgYW4gaVBhZCBvciBhIGhhbWJ1cmdlciB0byBwbGF5aW5nIHRoZSBwb2tlciBtYWNoaW5lcywgcHVyY2hhc2luZyBhIG5ld3NwYXBlciwgcGF5aW5nIGhvdXNlaG9sZCBiaWxscyBvciBwaWNraW5nIHVwIHRoZSBkcnkgY2xlYW5pbmcsIHdpbGwgYmUgcGFpZCBmb3IgZWxlY3Ryb25pY2FsbHkuClJlZ3VsYXIgcHJlc3N1cmUgY2FuIHdyZWFrIGhhdm9jIG9uIHRoZSBib2R5J3MgaW1tdW5lIHByb2dyYW0uIApJdCdzIGEgYml0IHNpbXBsaXN0aWMgYW5kIHRoZXJlIHdpbGwgYWx3YXlzIGJlIGNyaXRpY3Mgc2hvdXRpbmcgJ1RvbyBzaG9ydCEgVG9vIGxvbmchIFRvbyB0aWdodCEgVG9vIHNoYXBlbGVzcyEgUGVyc29uYWxseSwgSSB3b3VsZCBuZXZlciB3ZWFyIHRoYXQgZXRjLicgYW5kIG90aGVycyB3b3VsZCBnbyAndGhpcyBpcyBwZXJmZWN0ISBTaGUgd2VhcnMgaXQgc28gd2VsbCwgSSBmZWVsIGluc3BpcmVkLCBJIG1pZ2h0IHRyeSBpdCcuIApJZiB5b3UgbGlrZSB3b3JraW5nIHdpdGggeW91ciBoYW5kcyBvciBzcGVuZGluZyB0aW1lIG91dGRvb3JzLCB0cmFkZSBzY2hvb2wgbWlnaHQgYmUgYSBnb29kIG9wdGlvbiBmb3IgeW91LiAKIlNoZSB3YXMgbm90IGEgcHVwcGV0IldoaWxlIEtvdXJuaWtvdmEncyBzdWNjZXNzIG9mZiB0aGUgY291cnQgZXZlbnR1YWxseSBvdXR3ZWlnaGVkIGhlciBhY2hpZXZlbWVudHMgb24gaXQsIE5ndXllbiBzYWlkIGl0IHdhcyB1bmZhaXIgdG8gZGlzbWlzcyBoZXIgcGxheWluZyBjYXJlZXIuCk5vIG9uZSBnaXZlcyBhIHNoaXQgdGhhdCBJIG1hZGUgdGhhdCBjaG9pY2UuIApJIGFsc28ga2VwdCBoaXMgc3dlYXRlciwgYW5kIGl0J3MgdGhlIG9ubHkgdGhpbmcgSSBpbnRlbmRlZCB0byBrZWVwIGV4cGxpY2l0bHkgZm9yIG15c2VsZiBiZWNhdXNlIGl0J3MgYSBzdHVwaWQgbG9uZyBzdG9yeSBhbmQgbWF5YmUgb25lIG9mIHRoZSBvbmx5IGdvb2QgbWVtb3J5IEkgaGF2ZSBvZiBoaW0sIEkgZ3Vlc3MuIApXcm9uZyBpcyB3cm9uZyBhbmQgd2Ugc2hvdWxkIG1ha2UgYSBmdWNraW5nIGV4YW1wbGUgb3V0IG9mIGhpcyBhc3Mgc28gdGhleSBhbGwgdGhpbmsgdHdpY2UgYmVmb3JlIHRha2luZyBtb25leSBmcm9tIGFuIGVuZW15IHN0YXRlLCBhbmQgcGFydGljaXBhdGluZyBpbiBhIGRpcmVjdCBhdHRhY2sgb24gdGhlIGZ1bmRhbWVudGFscyBvZiBvdXIgc292ZXJlaWdudHkuIApUaGVyZSBpcyBzdGlsbCBjaGFuY2UgaW4gZ29pbmcgYmFjayB0byB0aGUgcGFzc2lvbiBvZiB5b3VyIGZpcnN0IG5pZ2h0Li4gCkJ1dCBkb2VzIHRoYXQgcmVhbGx5IGp1c3RpZnkgdGhlIGJpcnRoIG9mIG5vdCBvbmUgYnV0IHZpcnR1YWxseSBodW5kcmVkcyBvZiBkaXN0cm9zPy4gCkZvciBhbGwgd2Uga25vdywgc2hlIGNvdWxkIHNpbGVudGx5IHdhaXQgaXQgb3V0LCBhbmQgdGhlbiBjaGFsbGVuZ2UgT1AgYW5kIGhlciBESCBmb3IgcGFyZW50YWwgY29udHJvbCB3aGVuIHRoZXkgdHJ5IHRvIGdpdmUgdGhlIGJhYnkgdXAgZm9yIGFkb3B0aW9uIChpZiB0aGF0IGlzIHRoZSBjYXNlKS4gCkRvbiBmb3JnZXQgaXQuIApDb29sIEdyZWVuIENvdW50cnkgaW4gTGlzbW9yZTogQ29vbCBHcmVlbiBDb3VudHJ5IGlzIHRoZSBvZmZpY2lhbCBmdW5kcmFpc2VyIGZvciBUaGUgR3JlZW5zIDIwMTkgTlNXIGVsZWN0aW9uIGNhbXBhaWduLiAKNClBY2NlbGVyYXRpb24vZGVjZWxlcmF0aW9uIChBL0QpIGZvcmNlcyBwcmltYXJpbHkgYWZmZWN0IHRoZSB3aGl0ZSBtYXR0ZXIgb2YgdGhlIHN1cGVyZmljaWFsIGxheWVycyBvZiB0aGUgYnJhaW4sIGFuZCBleHRlbmRpbmcgaW53YXJkIGFzIEEvRCBmb3JjZXMgaW5jcmVhc2UuNSlUaGUgbWVzZW5jZXBoYWxvbiAocm9zdHJhbCBicmFpbnN0ZW0pIGlzIHRoZSBsYXN0IGFyZWEgdG8gc3VmZmVyIEEvRCB0cmF1bWEuIApJbnN0cnVjdG9yIG9mIENsaW5pY2FsIFBlZGlhdHJpY3MgaW4gdGhlIERpdmlzaW9uIG9mIEFsbGVyZ3kgYW5kIFB1bG1vbmFyeSBNZWRpY2luZSBhdCBTYWludCBMb3VpcyBDaGlsZHJlbidzIEhvc3BpdGFsLCBXYXNoaW5ndG9uIFVuaXZlcnNpdHkgU2Nob29sIG9mIE1lZGljaW5lCkluIGEgYnJpZWYgYXBwZWFyYW5jZSBiZWZvcmUgcmVwb3J0ZXJzLCBDb29rIENvdW50eSBTdGF0ZSdzIEF0dG9ybmV5IEtpbSBGb3h4IGFubm91bmNlZCB0aGUgMTAgY291bnRzIGFnYWluc3QgdGhlIDUyIHllYXIgb2xkIEdyYW1teSB3aW5uZXIsIHdob3NlIHJlYWwgbmFtZSBpcyBSb2JlcnQgS2VsbHkuIApOb3cgdGhpcyBnaXJsIHdhcyBhIGJpdGNoIGluIGZhY3Qgc2hlIHdpbGwgYmUga25vdyBhcyBCLiBTaGUgdGhvdWdodCBzaGUgd2FzIGJldHRlciB0aGVuIGV2ZXJ5b25lIGFuZCBjb3VsZCBnZXQgYXdheSB3aXRoIGFueXRoaW5nIGluY2x1ZGluZyBjb3B5IGFuZCBwYXN0aW5nIGFuIGFzc2lnbm1lbnQgdG8gaGFuZCBpbiB3aGlsZSB3ZSB3ZXJlIGFsbCB3YXRjaGluZyB3aXRoIHRoZSB0ZWFjaGVyIG9uIGhpcyBzY3JlZW4gY2FzdGluZyBhcHAgb24gaGlzIGNvbXAuQW55d2F5cyB3aGVuIHRoaXMgZ2lybCBtZXQgbWUgc2hlIGxpa2VkIG1lIGFuZCB3YW50ZWQgdG8gZGF0ZSBtZS4gClsuXSBncmFuZCBwdXJwb3NlIG9mIHN0YXJ2aW5nIHRvIGRlYXRoLCBraWxsaW5nIGlubm9jZW50cyBhbmQgc28gZm9ydGggaXMgYmVjYXVzZSBpdCBoZWxwcyB0aGVtIHRvIGhhdmUgYSByZWFzb24gdG8ga2VlcCBzdGVhbGluZyBtb25leSBmcm9tIHRoZSBjb3VudHJ5LCBpZiB5b3Ugc3RhcnZlIHBlb3BsZSBhbmQgdGhlbiBnaXZlIHRoZW0gYSBib3ggd2l0aCByb3R0ZW4gZm9vZCB0aGV5IHdpbGwgc2VlIGl0IGFzIGEgZ29kIHNlbnQgYW5kIHdpbGwgdGhpbmsgeW91IGFyZSB0aGUgYmVzdCwgYmVjYXVzZSB0aGF0cyBob3cgaXQgcmVhbGx5IHdvcmtzLCBieSBwdWxsaW5nIHRoaXMgZGlydHkgdHJpY2sgdGhlIGdvdmVybm1lbnQgc3RheXMgaW4gcG93ZXIgdGhhbmtzIHRvIHRoZSBuZWNlc3NpdHkgb2YgdGhlIHBlb3BsZS4gV2hlbiB0aGUgRVUgYW5kIFVTIGdpdmUgc2FuY3Rpb25zIHRvIFZlbmV6dWVsYW4gb2ZmaWNpYWxzIG1hbnkgRWFzdGVybiBvdXRsZXRzIHdpbGwgdHJ5IHRvIHNheSB0aGF0IHRoaXMganVzdCBtYWtlcyB0aGUgcGVvcGxlIG9mIG91ciBjb3VudHJ5IHdvcnN0IGJlY2F1c2UgdGhlbiB3ZSBkb24gaGF2ZSAkJCB0byBzcGVuZCBpbiBpbXBvcnRzLCB3aGljaCBpcyBhIGJsYXRhbnQgbGllLCB0aGUgJCQgdGhhdCBhcmUgc2FuY3Rpb25lZCB3aGVyZSBtb3N0IGxpa2VseSBnb2luZyB0byB0aGUgcG9ja2V0cyBvZiB0aG9zZSB3aG8gc2VydmUgdGhlIGdvdmVybm1lbnQgYW5kIG5vdCB0aGUgcGVvcGxlIHdobyBhcmUgaW4gbmVlZCBvZiB0aG9zZSBpbXBvcnRzLgpUaGUgZXZlbnRpbnZvbHZlcyB0aGUgbW90b3JjeWNsZSBjbHViIHJhaXNpbmcgY2FzaGZvciBBbGJ1cnkgTGVnYWN5IHdoaWNoIGhlbHBzIHRoZSBmYW1pbGllc29mIGRlY2Vhc2VkIGRlZmVuY2UgZm9yY2UgcGVyc29ubmVsLiAKSW4gdGhlIFVLIHBva2VyIGlzIGxlZ2FsIG9ubGluZSBwcm92aWRpbmcgeW91IGhhdmUgdGhlIHJpZ2h0IGxpY2Vuc2UuIEluIHRoZSBVUyBpdCBpcyBhIGJpdCBvZiBhIGdyZXkgYXJlYS4gCkNvaW5jaWRlbnRhbGx5IHRoZSBiaWcgbW9uZXkgaXMgbm8gbG9uZ2VyIGluIEFtZXJpY2EsIGp1c3QgYXMgcmVjZW50bHkgYXMgbGFzdCB5ZWFyIHRoZXJlIHdlcmUgMTQgd29ybGQgY2hhbXBzIGZyb20gdGhlIFVLIHNpZ25hbGluZyBhIHNlcmlvdXMgcG93ZXIgc2hpZnQuIEl0IGFwcGVhcnMgdGhlIHN0YXJzIGFyZSBhbGlnbmluZyBqdXN0IHBlcmZlY3RseS4gCk15IFRleCBNZXggZmF0aGVyLCB3aG8gaXMgYSBUcnVtcG8sIGRvZXNuIGJlbGlldmUgaW4gY2xpbWF0ZSBjaGFuZ2UsIHdhbnRzIHRoYXQgd2FsbCwgYW5kICJ1bmRlcnN0YW5kcyIgdGhlIGFudGkgdmF4eCBtb3ZlbWVudC4gCk1vYmlsZSBQb2tlciBUcmFpbmVyVGhpcyBwb2tlciBzb2Z0d2FyZSBpcyBhIGdvb2QgZG93bmxvYWQgZm9yIHRoZSBjZWxscGhvbmUuIFRoaXMgaXMgdGhlIG1vYmlsZSB2ZXJzaW9uIG9mIHRoZSBUZXhhcyBIb2xkJ2VtIHBva2VyIHNvZnR3YXJlLiAKSXQgc2VlbXMgb2RkIGJlY2F1c2UgaW5zdGVhZCBvZiBuZWF0bHkgcmVzdGF0aW5nIHRoZSBzdGFuZGFyZCBmb3IgdG9ydCBpdCB3b3VsZCBuZWNlc3NhcmlseSByb3V0ZSB0aGlzIHByb2Nlc3MgdGhyb3VnaCBhIHJlZ3VsYXRvcnkgYm9keSBpbnN0ZWFkIG9mIHRoZSBjb3VydHMvbGVnYWwgY29kZS4gOTAxLgoiV2UgaGF2ZSBhc2tlZCB0aGVtIHRvIHRlbGwgdXMgYnkgU2F0dXJkYXkgbmlnaHQgd2hldGhlciBvciBub3QganVkZ2VzIGNhbiBiZSByZXN0b3JlZCBvbiBNb25kYXkuIkFuYWx5c3RzIHNheSB0aGUgUFBQIGlzIHJlbHVjdGFudCB0byByZXN0b3JlIHRoZSBqdWRnZXMgYmVjYXVzZSBvZiBjb25jZXJucyB0aGUgZGVwb3NlZCBjaGllZiBqdXN0aWNlIG1pZ2h0IHRha2UgdXAgY2hhbGxlbmdlcyB0byBhbiBhbW5lc3R5IGZyb21jb3JydXB0aW9uIGNoYXJnZXMgbGFzdCB5ZWFyIGdyYW50ZWQgdG8gWmFyZGFyaSBhbmQgb3RoZXIgcGFydHkgbGVhZGVycy4KVGhlIGFkdmVydGlzZW1lbnRzIG9uIHRoZSBTZXJ2aWNlcyBtYXkgYmUgcHJvdmlkZWQgYnkgdXMsIG9yIHRoZXkgbWF5IGJlIHByb3ZpZGVkIGJ5IGEgdGhpcmQgcGFydHkgdmVuZG9yLiBUaGVzZSBhZHZlcnRpc2VtZW50cyBtYXkgYmUgdGFyZ2V0ZWQsIHdoaWNoIG1lYW5zIHRoYXQgYWR2ZXJ0aXNlcnMgd2FudCB0byByZWFjaCBhIGNlcnRhaW4gdHlwZSBvZiBhdWRpZW5jZSwgYW5kIHlvdXIgaW5mb3JtYXRpb24gbWF5IGJlIHVzZWQgaW4gb3JkZXIgdG8gc2VydmUgYWR2ZXJ0aXNlbWVudHMgYWJvdXQgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIHRoYXQgbWF5IGJlIG9mIGludGVyZXN0IHRvIHlvdS4KTGl0ZXJhbGx5LCBJIGhhZCBvbmUgQXNpYW4ga2lkIGluIG15IGNsYXNzLCB3ZSBjYWxsIGhpbSBSaWNoYXJkLiAKV2UgY2hlY2sgaXQsIGFuZCBpdCdzIHV0dGVyIHNoaXQuIAoiSSB0aGluayBEaXdhbGkgYWRkcyB0byB0aGUgZXhjaXRlbWVudCBvZiB0aGUgZ2FtZSBvciB2aWNlIHZlcnNhLiBUaGUgcG9rZXIgZ2FtZSBhdCBNYW5vcmkgbGFzdGVkIHRocm91Z2hvdXQgdGhlIG5pZ2h0IGFuZCB3aXRoIGEgbG90IG9mIG1vbmV5IHRvIGJlIHdvbiwgdGhlIGZ1biBlbGVtZW50IGluY3JlYXNlZCwiIHN0YXRlcyBBdHJleS4KSGUgdGF1Z2h0IHRoZSBib3lzIGhvdyB0byBwbGF5IHBva2VyIGFuZCB0aGV5IGxvdmVkIHdhdGNoaW5nIGJha2luZyBzaG93cyB3aXRoIGhpbS4uIApTaGUgaGFkIG5vIGZhdWx0IG9mIGhlciBvd24sIHdoaWNoIGhlIHJlYWxpemVzLCBidXQgaGUgcmVhbGl6ZXMgdG9vIGxhdGUgdGhhdCBoaXMgdmVuZ2VhbmNlIG9uIGhlciBodXNiYW5kIGFmZmVjdGVkIGhlci4gTWVyY2VkZXMgYWxzbyBoYXBwZW5zIHRvIGJlIG9uZSBvZiB0aGUgcGVvcGxlIHRoYXQgZW5kcyB1cCBzYXZpbmcgRGFudGVzIGZyb20gZmFsbGluZyBmdXJ0aGVyLiBTaGUgcGxlYWRzIHdpdGggaGltIG5vdCB0byBhY2NlcHQgQWxiZXJ0J3MgZHVlbCwgYW5kIGhlIHJlYWxpemVzIGhvdyBoZSBoYWQgbm8gcXVhbG1zIGFib3V0IGtpbGxpbmcgQWxiZXJ0IGluIGl0LiBGdXJ0aGVybW9yZSwgc2hlIHRlbGxzIEFsYmVydCBhYm91dCBEYW50ZXMnIHRydWUgcGFzdCwgd2hpY2ggaGUgdGhlbiBjYWxscyBvZmYgdGhlIGR1ZWwuIFRoaXMgaXMgb25lIG9mIHRoZSBmaXJzdCByZWFsaXphdGlvbnMgb2YgRGFudGVzIHRoYXQgdmVuZ2VhbmNlIG1hZGUgaGltIHRvIG5vdCBjYXJlIGZvciBoaXMgbG92ZWQgb25lcy4KQSAxNCB5L28gYm95IGZlbGwgb2ZmIHRoZSBmcm9udCBvZiBhIHBvd2VyYm9hdCB3aXRoIGEgZ3JvdXAgb2YgZnJpZW5kcyAobm8gYWR1bHQgc3VwZXJ2aXNpb24pIGFuZCB3ZW50IG1pc3NpbmcuIFdhcyBwcmVzdW1lZCB0byBoYXZlIGJlZW4gaGl0IGJ5IHRoZSBwcm9wZWxsZXIgYW5kIGtpbGxlZC4gSSBiZWxpZXZlIHRoZSBzZWFyY2ggY29udGludWVkIGZvciBhIGZldyBkYXlzLCBhbmQgZHVyaW5nIHRoYXQgdGltZSwgYWxsIHRoZSB3ZWFsdGh5IHBhcmVudHMga2VwdCB0aGUgb3RoZXIga2lkcyB0cmFwcGVkIGluIGEgbWFuc2lvbiB3aXRoIG5vIGFjY2VzcyB0byBwaG9uZXMgdG8gcHJldmVudCB0aGUgc3RvcnkgZnJvbSBnZXR0aW5nIG91dC4uIApJbiBhbiBpbnRlcnZpZXcgbGFzdCB5ZWFyIHdpdGggVGhlIEFzc29jaWF0ZWQgUHJlc3MgZHVyaW5nIHRoZSBwcmVzaWRlbnRpYWwgY2FtcGFpZ24sIFRydW1wIGRlY2xpbmVkIHRvIHRha2UgYSBwb3NpdGlvbiwgc2F5aW5nIGhhdmUgYSBsb3Qgb2YgZnJpZW5kcyBvbiBib3RoIHNpZGVzIG9mIHRoaXMgaXNzdWUuIApJdCBub3QsIGl0IGp1c3QgYSBiaWcgZW5kbGVzcyBob2xlLCBJIG1hZGUgdGhhdCB2ZXJ5IGNsZWFyIHRoZSAyMCB0aW1lcyBJIGRlc2NyaWJlZCBpdCBhcyBhIGJpZyBkYXJrIGhvbGUuIE5vdyB0aGVuLCBsZXQgZG8gYSBkaWZmZXJlbnQgMSBvZmYsIHNvbWV0aGluZyBhIGxpdHRsZS4gc2FmZXIuCkV2YWx1YXRpb24gb2YgdXJvbG9naWMgbWVkaWNhbCByZWNvcmRzIGJ5IGZpZWxkIGV4cGVydHMKRm91ciBvZiBhIGtpbmQgaXMgb25lIG9mIHRoZSBlYXNpZXN0IG9uZXMgdG8gc3BvdC4gCk9uY2UgdGhlIHJlZHVjdGlvbiB0YXJnZXQgd2FzIG1ldCwgb25lIGluIG9uZSBvdXQgYmVjYW1lIHRoZSBuZXcgc3RhbmRhcmQuIEdhcmJhZ2UgYmFncyBvZiBkdW1iIHJ1bGVzLCBzdWNoIGFzIHRoZSBvbmUgZGljdGF0aW5nIHRoZSBzaXplIG9mIHRlbGV2aXNpb25zIGFsbG93ZWQgaW4gcmVzdGF1cmFudHMsIHdlcmUgc2VudCB0byB0aGUgY3VyYiBhbmQgdGhlIHByb3ZpbmNlIGNpdGl6ZW5zIGFyZSBiZXR0ZXIgZm9yIGl0LiBvbmUgaW4gb25lIG91dCBwb2xpY3kgd2FzIHNvIHN1Y2Nlc3NmdWwgYXQgZWxpbWluYXRpbmcgcmVkIHRhcGUgd2hpbGUgbWFpbnRhaW5pbmcgaGlnaCBsZXZlbHMgb2YgaGVhbHRoLCBzYWZldHkgYW5kIGVudmlyb25tZW50YWwgb3V0Y29tZXMsIGl0IG5vdyBhbiBpbnRlcm5hdGlvbmFsIG1vZGVsIGZvciByZWZvcm0uCldoYXQgb3RoZXIgY29tcGFuaWVzIHVzZSBzd2VlcHN0YWtlcz8KSG9tZW9wYXRoeS4gSG9tZW9wYXRoaWMgbWVkaWNpbmUgaGFzIGJlZW4gcHJhY3RpY2VkIGZvciBhYm91dCAyMDAgeWVhcnMgYW5kIHdhcyBvcmlnaW5hdGVkIGJ5IHRoZSBHZXJtYW4gcGh5c2ljaWFuIFNhbXVlbCBIYWhuZW1hbm4uIApUaGUgc3BlY3VsYXRpb24gYW5kIHZhY2FuY3kgdGF4IGlzIGRlc2lnbmVkIHRvIHRhcmdldCBlbXB0eSBob21lcy4gCllvdSBiYXNpY2FsbHkgZ29ubmEgaGF2ZSB0byBlYXQgdGhlIGNvc3Qgb2YgYSB0aG9yb3VnaCBhbm51YWwgaW5zcGVjdGlvbiwgYSBoZWFsdGh5IGFtb3VudCBvZiBjaGVhcC9mcmVlIHRyb3VibGVzaG9vdGluZywgYW5kIHByb2JhYmx5IGN1dCBhIGdvb2QgcmF0ZSBvbiB0IGZvciByZXBhaXJzIHRvIHdpbiB0aGlzIGd1eSBiYWNrIGFuZCBzaG93IGhpbSB0aGVyZSBhcmUgZ29vZCB0ZWNocyBvdXQgdGhlcmUgYW5kIHRoYXQgb25seSBpZiB5b3UgY29tcGFueSBpcyBvbiBib2FyZCB3aXRoIGl0IHRvIGtlZXAgdGhlIGFjY291bnQuIApGb3IgZXhhbXBsZSwgaW4gdGhlIEphaGkgTWNNYXRoIGNhc2UsIHdhcyB0aGVyZSBhbm90aGVyIGhvc3BpdGFsIHdpbGxpbmcgdG8gdGFrZSBoZXIgYW5kIGNvbnRpbnVlIHByb3ZpZGluZyBtZWNoYW5pY2FsIHZlbnRpbGF0aW9uL2xpZmUgc3VwcG9ydD8gSWYgc28sIHdhcyB0aGUgZmFtaWx5IHByZXZlbnRlZCBmcm9tIGhhdmluZyBoZXIgdHJhbnNmZXJyZWQgdG8gdGhhdCBob3NwaXRhbD8gSWYgYm90aCB0aG9zZSBjb25kaXRpb25zIGFyZSBtZXQsIHRoZW4gaXQgYSBiZXR0ZXIgYW5hbG9neSB0byB0aGUgQWxmaWUgRXZhbnMgY2FzZSwgYnV0IGlmIG5vdCwgdGhlbiB0aGVyZSBubyByZWFsIGNvbXBhcmlzb24uLiAKTWVhbndoaWxlLCBhbiBpbmNyZWFzaW5nIG51bWJlciBvZiBwb2tlciBwbGF5ZXJzIHBsYXkgVGV4YXMgSG9sZCdlbSBhdCBob21lLiAKVGhlIHJvb20gaXMgbW9yZSBjbGF1c3Ryb3Bob2JpYyB0aGFuIEJlbGxhZ2lvIG9yIHRoZSBtYWluIGFyZWEgb2YgQ29tbWVyY2UuIFRoZXkgc2V2ZXJlZCB0aWVzIHdpdGggV1BUIGFuZCB3b24gYmUgaG9zdGluZyB0aGUgU2hvb3RpbmcgU3RhciBpbiB0aGUgc3ByaW5nLiAKSGUgd2FzIHdvcmtpbmcgYXQgYSBmYXN0IGZvb2Qgam9pbnQgYW5kIGxpdmluZyBhd2F5IGZyb20gTWFyZ2UgdHJ5aW5nIHRvIGVhcm4gc29tZSBzb3J0IG9mIGluY29tZSB0byBzZW5kIGhlciB0byBzdXBwb3J0IHRoZWlyIGNvbWluZyBjaGlsZC4gTWFyZ2UgZm91bmQgaGltIGFuZCB0b2xkIGhpbSBzaGUgZGlkbiBjYXJlIHdoYXQgdHlwZSBvZiByaW5nIG9yIGZ1dHVyZSB0aGV5IGhhZCBpZiBoZSBkaWRuIGVhcm4gZW5vdWdoLiAKWW91IHdvdWxkIGhhdmUgdG8gYmUgcmVhbGx5IGN1dCBvZmYgZnJvbSB0aGUgd29ybGQuIEJvdGggbXkga2lkcyB3ZW50IHRocm91Z2ggZGF5Y2FyZSBiZWZvcmUgc2Nob29sIGFuZCB0aGV5IHRvbGQgdXMgYnkgYSBjZXJ0YWluIGFnZSB0aGV5IGhhZCB0byBiZSBwb3R0eSB0cmFpbmVkLiAKQ291bmNpbHdvbWFuIEdlcnJpIFNjaHJvZGVyIHNhaWQgdGhlcmUgYXJlIG1hbnkgbWFzc2FnZSBwYXJsb3JzIGluIEhlbmRlcnNvbiB0aGF0IGNvbmR1Y3QgYnVzaW5lc3MgbGVnYWxseS4gU2Nocm9lZGVyIHNhaWQgc2hlIGhvcGVzIHRoZSBvcmRpbmFuY2UgYm9sc3RlcnMgdGhlaXIgaW1hZ2UgYXMgbGVnaXRpbWF0ZSBidXNpbmVzc2VzLgpDb29rIHRvZ2V0aGVyLiBGaW5kIHNvbWV0aGluZyB0aGF0IHlvdSBib3RoIGxpa2UgdGhhdCBpc24gdG9vIGludm9sdmVkIGFuZCBtYWtlIGEgbmlnaHQgb2YgY29va2luZyAob3IgcHJlcGFyaW5nIGlmIHlvdSB3b3JrIGFuZCBuZWVkIG1vcmUgb2YgYSBjcm9jayBvciBpbnN0YXBvdCBvcHRpb24pIGFuZCBlYXRpbmcgd2l0aCBvbmUgYW5vdGhlci4gSWYgcG9zc2libGUsIG5vdCBvbiB0aGUgY291Y2ggb3IgaW4gYmVkLCBidXQgYXQgdGhlIHRhYmxlLiAKTXkgaW5zdHJ1Y3RvciB0b2xkIG1lIG9mIGEgc2NlbmFyaW8gd2hlcmUgb25lIGNvcCB3YXMgYXBwcm9hY2hpbmcgYSBjYXIgYWhlYWQgb2YgYW5vdGhlciBvZmZpY2VyIHdoZW4gdGhlIGRyaXZlciBkZWNsYXJlZCBoZSBoYWQgYSBmaXJlYXJtIHRoZSBvZmZpY2VyIGFza2VkIGZvciB0aGUgZmlyZWFybS4gCk92ZXJ2aWV3IGZvciBVZG9udGxpa2VjYWtlCllvdSBzYXkgaGUgbWFkZSBwcm9ncmVzcywgYnV0IHVubGVzcyBoZSByZWFsbHkgbGVhcm5lZCBob3cgdG8gcHJvY2VzcyBoaXMgZW1vdGlvbnMgaGUgcHJvYmFibHkganVzdCBpbnRlcm5hbGl6aW5nIHRoYXQgYW5nZXIgYW5kIGxldHRpbmcgaXQgYnVpbGQgdXAuIApXZSB3ZXJlIG5vdCByZXRhaWwgcGVvcGxlLiBXZSBoYWQgbm8gY29uY2VwdCBvZiBob3cgdG8gdGFrZSBpdCB0byBtYXJrZXQsIGhlIHNheXMuIAoiVGhlIHNpeCBtb250aCB0aW1lIGZyYW1lIGlzIGEgZ29vZCB0aW1lIGZyYW1lIC4gaXQgZ2l2ZXMgdGhlbSBhIGxpdHRsZSBsb25nZXIgdG8gZ2V0IGhlbHAsIiBoZSBzYWlkLgpWb3VzIHBvdXZleiBlbmNvcmUgY29udHJpYnVlciAgY2VzIHJmbGV4aW9ucyBlbiBkcG9zYW50IHZvdHJlIGF2aXMgc3VyIGxlIHNpdGUgZGRpIHN1ciBOb3RvbnMgcXVlIGxhIGNvbmNlcnRhdGlvbiBhdXRvdXIgZHUgcHJvamV0IGRlIFNOQ0YgR2FyZSBDb25uZWN0IGEgdCByb3V2ZXJ0ZSBkZXB1aXMgbGUgMWVyIG1hcnMuIEVuIGVmZmV0LCBkZSBub21icmV1c2VzIHZvaXggcyd0YWllbnQgbGV2ZXMgcG91ciBkbm9uY2VyIGxlIGNhcmFjdHJlIGV4cGRpdGlmIGRlIGxhIGNvbmNlcnRhdGlvbiBwcmFsYWJsZSwgb2JsaWdlYW50IGRvbmMgbGEgU0VNT1AgIHJlbGFuY2VyIGNldHRlIGRlcm5pcmUsIGV0IHBldXQgdHJlIGNldHRlIGZvaXMgIG1pZXV4IHByZW5kcmUgZW4gY29tcHRlIGxlcyBhdmlzIGRlcyByaXZlcmFpbnMuIApTb29mYXMsIGRldmVsb3BlZCBieSBzdGFydHVwIENoYW5naW5nIEVudmlyb25tZW50cywgYXJlIGJlbmNoZXMgd2l0aCBhIGxhcmdlIHNvbGFyIHBhbmVsIG9uIHRvcCB0aGF0IHdpbGwgY2hhcmdlIHVzZXJzJyBwaG9uZXMuIApSeWRnZXMgUG9ydCBNYWNxdWFyaWUgc2FsZXMgYW5kIG1hcmtldGluZyBtYW5hZ2VyIEthdGUgV29vZCBGb3llIHRob3VnaHQgQmF0bWFuJ3Mgc3RydWdnbGUgYWdhaW5zdCB0aGUgZXZpbCBkb2N0b3IsIHdobyB0dXJucyBncmVlbiB0byBtYXRjaCBoZXIgbmF0dXJlLCB3b3VsZCBtYWtlIGZvciBhIGNvb2wgdGhlbWUgZm9yIHRoZSBob3RlbCdzIE5ldyBZZWFyJ3MgRXZlIGJhc2guIApQYXJ0aWNpcGF0ZSBpbiBjb29wZXJhdGl2ZSBlZHVjYXRpb24gaWYgdGhlIHRyYWluaW5nIHByb2dyYW0geW91IGNob29zZSBvZmZlcnMgaXQuIApVbSBlaHJsaWNoIHp1IHNlaW4gYnJhdWNodCBtYW4gZWluZW4gc2VociBob2hlbiBJUSB1bSBSaWNoYXJkIHVuZCBNb3J0aW1lciB6dSB2ZXJzdGVoZW4uIERlciBIdW1vciBpc3QgZXh0cmVtIHN1YnRpbCwgdW5kIG9obmUgZWluIHNvbGlkZXMgVmVyc3RuZG5pcyB2b24gdGhlb3JldGlzY2hlciBQaHlzaWsgZ2VoZW4gZGllIFNjaGVyemUgYW4gZWluZW0gdHlwaXNjaGVuIFp1c2NoYXVlciB2b3JiZWkuIERhenUga29tbXQgUmljaGFyZHMgbmloaWxpc3Rpc2NoZSBMZWJlbnNlaW5zdGVsbHVuZywgZGllIHRpZWYgbWl0IHNlaW5lbSBDaGFyYWt0ZXIgdmVyd29iZW4gaXN0ICAgc2VpbmUgcGVyc25saWNoZSBQaGlsb3NvcGhpZSBpc3QgenVtIEJlaXNwaWVsIHZvbiBOYXJvZG5heWEgVm9seWFzIExpdGVyYXR1ciBiZWVpbmZsdXNzdC4gRGllIEZhbnMgdmVyc3RlaGVuIGRhczsgc2llIGhhYmVuIGRpZSBpbnRlbGxla3R1ZWxsZSBLYXBheml0dCwgZGllIE1laHJkZXV0aWdrZWl0IGRlciBXaXR6ZSB6dSBzY2h0emVuLCB6dSByZWFsaXNpZXJlbiwgZGFzcyBkaWVzZSBuaWNodCBudXIgbHVzdGlnIHNpbmQgICBzaWUgZ2ViZW4gdW5zIGVpbmUgRWluc2ljaHQgaW5zIExFQkVOLiBMZXV0ZSBkaWUgUmljaGFyZCB1bmQgTW9ydGltZXIgbmljaHQgbWdlbiBTSU5EIGtvbnNlcXVlbnQgZWluZmFjaCBJZGlvdGVuICAgbmF0cmxpY2ggd2lzc2VuIHNpZSBkZW4gSHVtb3IgaW4gUmljaGFyZHMgZXhpc3RlbnppZWxsZW0gU2xvZ2FuICJXdWJiYSBMdWJiYSBEdWIgRHViIiBuaWNodCB6dSBzY2h0emVuLCB3ZWxjaGVyIGVpbmUga3J5cHRpc2NoZSBSZWZlcmVueiB6dSBUdXJnZW5ld3MgIlZhdGVyIHVuZCBTaG5lIiBpc3QuIEljaCBncmluc2UgZ2VyYWRlIGltIEdlZGFua2VuIGFuIGRpZXNlIGhvaGxrcGZpZ2VuIEVpbmZhbHRzcGluc2VsLCBtaXIgdm9yc3RlbGxlbmQgd2llIHNpZSBzaWNoIGFtIEtvcGYga3JhdHplbiB3aHJlbmQgc2ljaCBEYW4gSGFybW9ucyBnZW5pYWxlciBJbnRlbGxla3QgYXVmIGlocmVuIEJpbGRzY2hpcm1lbiBlbnRmYWx0ZXQuIFNvbGNoZSBOYXJyZW4uIGFjaCwgd2llIGljaCBzaWUgYmVtaXRsZWlkZS4gIFVuZCBqYSwgd2VubiB3aXIgc2Nob24gZGFiZWkgc2luZCwgaWNoIEhBQkUgZWluIFJpY2hhcmQgdW5kIE1vcnRpbWVyIHRhdHRvby4gTmVpbiwgZHUgZGFyZnN0IGtlaW5lbiBCbGljayBkYXJhdWYgd2VyZmVuLiBFcyBpc3QgbnVyIGZyIGRpZSBBdWdlbiBlaW5lciBEYW1lIGJlc3RpbW10ICAgdW5kIHNvZ2FyIGRhbm4gbXNzZW4gc2llIG1pciB6dWVyc3QgZGVtb25zdHJpZXJlbiwgZGFzcyBzaWUgbmljaHQgbWVociBhbHMgNSBJUSBQdW5rdGUgYWJzdGFuZCB6dSBtZWluZW0gZWlnZW5lbiBJUSBoYWJlbiAoYW0gYmVzdGVuIG5pZWRyaWdlcikuIE5pY2h0cyBwZXJzbmxpY2hlcyBtZWluIEtpbmQuICAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpZb3UgZ290IHRvIGRvIGl0IGluIGdhbWVzIGxpa2UgdGhpcy4gV2UgZGlkbiBoYXZlIG9uZSBuaWNlLCBwcmV0dHkgZ29hbCBpbiB0aGlzIGVudGlyZSBzZXJpZXMuIApJIHdhcyB3aGlwcGVkIHdpdGggYmVsdHMsIGhvdCB3aGVlbCB0cmFja3MsIGFuZCBvbmNlIGJ5IGEgbmV3IGJmIG15IG1vbSBoYWQuIApDYXJkYm9hcmQga2Fuc2lvICAxMCBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCk9kZXIgV2VsbG5lc3MuIApTdXNwZWN0cyBBcnJlc3RlZCBJbiBKZXdlbHJ5IFN0b3JlIFJvYmJlcnkgVGhhdCBMZWQgVG8gUG9saWNlIENoYXNlQSBqZXdlbHJ5IHN0b3JlIGluIGEgRm9ydCBMYXVkZXJkYWxlIG1hbGwgd2FzIHJvYmJlZCBhbmQgdGhlIGNyb29rcyBsZWQgcG9saWNlIG9uIGEgd2lsZCBjaGFzZSBpbnRvIE1pYW1pIERhZGUgQ291bnR5IG9uIFN1bmRheS4KU3RpbGwgbm90IGNvbnZpbmNlZCB0aGF0IHRoZSBicm9zIGFyZSBhIGJ1bmNoIG9mIHNleHVhbGx5IHJlcHJlc3NlZCBwYWNrIGFuaW1hbHM/IGFib3V0IHdlIGNhbGwgRHIuIE1lYWQgYW5kIGdldCBhbiBhbnRocm9wb2xvZ2ljYWwgcGVyc3BlY3RpdmUuIAoxMykgIk1hbmlwdWxhdGlvbiBtYXkgYWxzbyBiZSB1c2VkIGFzIG9uZSBjb21wb25lbnQgb2YgdGhlIGNvbWJpbmVkIHRyZWF0bWVudCBmb3IgJ2ZhY2V0IHN5bmRyb21lJyBhbmQgZm9yIGFzc29jaWF0ZWQgbGVzaW9ucyBvZiBleHRyYWR1cmFsIG9yaWdpbiwgc3VjaCBhcyBsaWdhbWVudG91cyBvciBtdXNjdWxhciBsZXNpb25zLiIKVW50aWwgTW9sbHkgQmxvb20sIHRoZSB3b21hbiB3aG8gcmFuIG1vc3Qgb2YgdGhlc2UgaGlnaCBwcmljZWQgcG9rZXIgdG91cm5hbWVudHMgZm9yIGEgZGVjYWRlIGJlZm9yZSBiZWluZyBhcnJlc3RlZCBieSB0aGUgRkJJLCBkZWNpZGVkIHRvIHdyaXRlIGEgYm9vay4gCkF0IHRoaXMgcG9pbnQgUm9ja3N0YXIgbmVlZHMgdG8gcHJlc2VudCBhIHdob2xlIGJ1bmNoIG9mIGNvbnRlbnQgdG8gd2luIGJhY2sgbXkgaW50ZXJlc3QgaW4gT25saW5lIGFuZCBub3QganVzdCBuZXcgY2xvdGhlcyBhbmQgd2VhcG9ucyBsaWtlIHRvZGF5IHVwZGF0ZSB3aGljaCBrZWVwIGluIG1pbmQsIGFyZSBzdXBlciBwcmljZXkgKGluIHRoZSBjYXNlIG9mIG5ldyBjbG90aGluZykgZm9yIHNvbWUgb3RoZXIgcGxheWVycyB0byBpbmNlbnRpdml6ZSB0aGVtIGludG8gdGFraW5nIGEgc2hvcnRjdXQgaW50byB0aGVtLCBha2EgR29sZCBCYXJzLi4gClNtYWxsIHN0YWtlcyBwbGF5ZXJzIGFsc28gdGVuZCB0byBkbyBiZXR0ZXIgd2l0aCBzbWFsbCBkZW5vbWluYXRpb24gY2FyZHMuIEEgcGFpciBvZiBqYWNrcyBtYXkgZWFzaWx5IGJlYXQgYSBwYWlyIG9mIGZvdXJzLCBidXQgcGVvcGxlIHdobyBkb24ndCBnYW1ibGUgbXVjaCB0ZW5kIHRvIHdpbiBtb3JlIHdpdGggdGhlIGZvdXJzIG9yIHdpdGggYW55IGNhcmRzIGZyb20gdHdvcyB0byBzZXZlbnMuIFRoYXQncyBiZWNhdXNlIHRoZSBjYXJkcycgbW9kZXN0IG51bWVyaWNhbCB3b3J0aCBpcyBlYXN5IHRvIHVuZGVyc3RhbmQ6IHRoZXkncmUgdmFsdWFibGUgYnV0IG5vdCB0aGF0IHZhbHVhYmxlLiBXaGVuIHlvdSBnZXQgaW50byB0aGUgbW9yZSByYXJlZmllZCBhaXIgb2YgZWlnaHRzIHRvIGFjZXMsIHlvdSBtYXkgc3RhcnQgbG9zaW5nIHBlcnNwZWN0aXZlIGFuZCBwdXR0aW5nIHVwIG1vcmUgbW9uZXkuICJTbWFsbCBwYWlycyBoYXZlIGEgbGVzcyBhbWJpZ3VvdXMgdmFsdWUsIiBTaWxlciBzYXlzLiAoU2VlIG1vcmUgYWJvdXQgY2FzaW5vcy4pClNvIGlmIHlvdSBkbyB0cmF2ZWwgdG8gdGhlIG1vb24sIGl0J2xsIGRlcGVuZCBvbiB3aGF0IHdlIGRvIHdpdGggdGhlIG1vb24uIElmIHBlcmhhcHMgd2Ugc3RhcnQgbWluaW5nIG9uIHRoZSBtb29uLCB0aGVuIHlvdSBtaWdodCBoYXZlIHNvbWUgam9icyB0aGF0IG5lZWQgdG8gZ28gdGhlcmUgb3V0c2lkZSBvZiB2ZXJ5IHNtYWxsIGFtb3VudCBvZiBzY2llbnRpc3RzLiAoRW5naW5lZXJzIHByb2JhYmx5LCBzaW5jZSB3ZSBsaWtlbHkgbm90IGJlIHVzaW5nIGh1bWFuIGxhYm9yKS4gClR1cm5zIG91dCBDb2R5IHdhcyBvbmx5IDMgbWludXRlcyBpbiBmcm9udCBvZiBtZSwgYnV0IGhlIHB1dCB0aGF0IGRpc3RhbmNlIG9uIG1lIGluIHRoZSBsYXN0IGNvdXBsZSBvZiBraWxvbWV0ZXJzLiBDcmF6eSEuIApBdHRvcm5leSBEYW5pZWwgUmljaGVudGhhbC4gCjEuIFlvdXIgcmVhbCBsaWZlIGhlcm8gaXMuIFNhaXlhbWk6IFNhY2hpbiBUZW5kdWxrYXIhIEkgbG92ZSBoaW0uIApPaCwgSSBnZXQgd2hhdCB5b3UgYXJlIHNheWluZywgYnV0IEkgdGhpbmsgUmVkZGl0IGhhcyBncm93biBlbm91Z2ggdG8gZW5jb21wYXNzIGEgTEFSR0UgZGVtb2dyYXBoaWMgb2YgcGVvcGxlLiBKdXN0IGJ5IGNydWlzaW5nIG90aGVyIGZvcnVtcyBvZiB0aGUgc2l0ZSwgeW91IGNhbiBzZWUgcGVvcGxlIGNvbW1lbnRpbmcgZnJvbSBhZ2VzIDEyIDcwLCBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZCwgbWFsZS9mZW1hbGUvdHJhbnMgd2hhdGhhdmV5b3UsIGRpZmZlcmVudCByZWxpZ2lvbnMsIHBvbGl0aWNhbCBiZWxpZWZzLCBldGMuIFBlcmhhcHMgUmVkZGl0IHdhcyBvbmNlIGEgaGl2ZSBvZiBzb2NpYWxseSBtYWxhZGp1c3RlZCBmb2xrcyB3aG8gZ2F0aGVyZWQgdG8gc3dhcCBzaWNrIHN0b3JpZXMsIGJ1dCBJIGZlZWwgdGhhdCBSZWRkaXQgaW5jbHVkZXMgbm90IGp1c3QgdGhlIHdlaXJkb3Mgd2hvIG5lZWQgdG8gdmVudCBidXQgdGhlIG1hcnJpZWQgbWVuLCBwZW9wbGUgd2l0aCBjaGlsZHJlbiwgZXRjLiBJIGRvbiBrbm93IGlmIG15IG93biBwZXJzb25hbCBmcmllbmRzIHdvdWxkIGpva2UgYWJvdXQgaHVtaWxpYXRpbmcgYW5kIHJhcGluZyB3b21lbiBqdXN0IGJlY2F1c2UgdGhleSBjb3VsZCB3aXRob3V0IGNvbnNlcXVlbmNlLCBhbmQgSSBkb24gdGhpbmsgdGhlIG1ham9yaXR5IG9mIHBlb3BsZSBvbiBoZXJlIHdvdWxkIGNvbmRvbmUgdGhhdCAoYXMgc2VlbiBvbiBBc2tSZWRkaXQgc2VjdGlvbnMgb24gbWFsZS9mZW1hbGUgcmFwZSk7IG5vIG9uZSB3b3VsZCBnbyBvbiB0aGVyZSwgYnJhZ2dpbmcgYWJvdXQgdGhlIGNlbGVicml0eSB0aGV5IHdvdWxkIGdyb3BlIGlmIHRpbWUgd2VyZSBmcm96ZW4uIEkgd2FzIGp1c3QgZGlzYXBwb2ludGVkIHdpdGggdGhlIGFtb3VudCBvZiBwZW9wbGUgd2hvIGNhbWUgb24gdGhpcyBwYXJ0aWN1bGFyIGZvcnVtIGFuZCBnb3QgdXB2b3RlZCBmb3IgdGhlaXIgZHJlYW0gYXNzYXVsdHMuIEkgd2FudGVkIHRvIHJlZnJhaW4gZnJvbSBhIHJhbnQgb24gaGVyZSBzaW5jZSBwZW9wbGUgd2lsbCBndWZmYXcgYW5kIHNheSB0aGVyZSBpcyBubyBjcmltZSBpbiBzcGVha2luZyB0aGVpciBtaW5kLCBhbmQgdGltZSBmcmVlemluZyB3b3VsZCBub3QgaGFwcGVuIGFueXdheXMuCkJ1dCBpdCdzIHNhZCBhbnkgd2F5IHlvdSBsb29rIGF0IGl0Li4gCkdhbGF4eSBCYWJlIHdhcyBjcmVhdGVkIG9uIDE5IE1heSAyMDAwLCBob3dldmVyLCB0aGUgcGVyc29uIHdobyBjcmVhdGVkIEdhbGF4eSBCYWJlIGlzIHJlYWwsIHRoZXNlIHBlb3BsZSBjYW4gdGVzdGlmeSB0byB0aGF0LCAnY29zIHRoZXkndmUgbWV0IG1lLiBBcyBvZiBOb3ZlbWJlciAyMDEyLCBJIGFtIGEgR3VpZGUgRWRpdG9yIG9mIGgyZzIuICBIb21lciBTaW1wc29uRG91Z2xhcyBBZGFtcyBpbnNwaXJlZCBtZSB0byB3cml0ZTogMjc5c29sbyB0byAxMiBOb3ZlbWJlciAyMDE4LiAKRm9ybWVyIHBhcmFtZWRpYyBoZXJlLiAKUXVpbnR1c19ob3JhdGl1cyAgMjMgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCiJUaGUgYmx1ZSBibG9vZCBjbyBvcHMgb24gQ2VudHJhbCBQYXJrIGFyZSB0aGUgd2Vha2VzdCBzdWJzZXQgb2YgdGhlIG1hcmtldCBmb3IgdGhlIGZpcnN0IHRpbWUsIiBNaWxsZXIgc2FpZC4gIkFuZCB0aGUgY28gb3AgYm9hcmRzIGFyZSBzbG93IHRvIHJlc3BvbmQuIApCZWNhdXNlIGl0IGJhZCB0byBiZSBob21vcGhvYmljLCB0cmFuc3Bob2JpYywgb3IgYSB0ZXJmLiAKSXQgaW1wb3J0YW50IG5vdCB0byBuZWdsZWN0IHN1cGVyICAgSSBvZiB0aGUgb3BpbmlvbiB0aGF0IGV2ZW4gc29sZSB0cmFkZXJzIHNob3VsZCBiZSBwYXlpbmcgdGhlbXNlbHZlcyBzdXBlciBhdCBhdCBsZWFzdCB0aGUgZ3VhcmFudGVlZCBsZXZlbCB0aGF0IGFuIGVtcGxveWVyIHdvdWxkLiBJZGVhbGx5IG1vcmUuIApNeSB3aWZlIHdlbnQgdG8gdGhlIGxhc3QgUFRBIG1lZXRpbmcgYW5kIGhhZCB0aGUgbGVhZGVycyBhc2sgaWYgd2Ugd291bGQgZG9uYXRlIHRoZSB1c2Ugb2YgdGhlIHRhYmxlcyBmb3IgYSBsb2NhbCBjaHVyY2ggZnVuZHJhaXNlci4gClBlb3BsZSBzaG91bGQga25vdyB0aGV5IGFyZSBzaXR0aW5nIG5leHQgdG8geW91IGp1c3QgYnkgdGhlIHNtZWxsLiAKSWYgeW91IGNhbid0IHNlZSBUcnVtcCBmb3Igd2hhdCBoZSBpcywgeW91IGhhdmUgbm8gY3JlZGliaWxpdHksIElsbCBrZWVwIHdoYXQgbGl0dGxlIEkgaGF2ZS4gVHJ1bXAgYWNvbHl0ZXMgbGlrZSB5b3Vyc2VsZiB3aWxsIGFsd2F5cyBkZWZsZWN0IGN1cnJlbnQgcmVhbGl0aWVzIHdpdGggcmVkIGhlcnJpbmcgYW5kIHN0cmF3IG1hbiBhcmd1bWVudHMsIG5vIG1hdHRlciBob3cgbXVjaCBldmlkZW5jZSB5b3VyIGNvbmZyb250ZWQgd2l0aC4gSSdtIG5vdCBhIENsaW50b24gc3VwcG9ydGVyLCBCaWxsIGFuZCBlc3BlY2lhbGx5IG5vdCBIaWxsYXJ5LCBidXQgSSBkbyB0aGluayBpdCdzIHNhZCBwYXRoZXRpYyBob3cgZmFyIHlvdSdyZSB3aWxsaW5nIHRvIG1ha2UgZXhjdXNlcyBmb3IgdGhhdCBzaGl0IGJhZyBNY0RvbmFsZCBUcnVtcC4KVG8gYWNoZWl2ZSB0aGlzIHlvdSB3b3VsZCBuZWVkIHRvIHJlZHVuZGFudGx5IGNvbm5lY3QgaXQgdG8gYSBSZXRybyBFbmNhYnVsYXRvci4uIApBbnl0aGluZyBtb3JlIHBvd2VyZnVsIHRoYW4gYSAybmQgbGV2ZWwgc3BlbGwsIGFuZCB0aGV5IHR5cGljYWxseSBoYXZlIHRvIHVzZSBhIHBlYXJsLiAKSSByYWlzZWQgaGlzIEJCIChmb3IgdGhlIHRoaXJkIHRpbWUpIHdpdGggcG9ja2V0IG5pbmVzLiAKSW4gMjAwNSwgOTMgcGVyIGNlbnQgb2YgU2luZ2Fwb3JlYW5zIG93bmVkIGhvbWVzLCBvZiB3aGljaCA4OCBwZXIgY2VudCB3ZXJlIGFmZm9yZGFibGUgcHVibGljIGhvdXNpbmcgZmxhdHMuIFRoaXMgaGlnaCByYXRlIG9mIGhvbWUgb3duZXJzaGlwLCBjb3VwbGVkIHdpdGggYWNjdW11bGF0ZWQgQ1BGIHNhdmluZ3MsIGhhcyBtYWRlIFNpbmdhcG9yZWFucyBzdWJzdGFudGlhbCBzdGFrZWhvbGRlcnMsIHdoaWNoIGVuYWJsZWQgdGhlIFBlb3BsZSBBY3Rpb24gUGFydHkgdG8gY29uc29saWRhdGUgaXRzIHBvd2VyIGJhc2UuIEJ5IGFkb3B0aW5nIGEgYXBwcm9hY2ggdGhpcyBydWxpbmcgcGFydHkgdHJ1bHkgaGFzIHNvbWUgdHJpY2tzIG9mIGl0cyBvd24uClRoZXkgb2Z0ZW4gcmVncmV0IGZvciB0aGVpciBkZWVkcyBsYXRlciBvbi4gSG93ZXZlciwgdGhlaXIgcmVncmV0cyBkb24ndCBicmluZyB0aGVpciBjYXJkcyBiYWNrLiAKRXZlbiBieSBtYWtpbmcgYSBsb3Qgb2YgbWlzdGFrZXMsIHRoZSBhdmVyYWdlIHBsYXllciBjYW4gbGlrZWx5IGFjaGlldmUgYSBsb25nIHRlcm0gcmV0dXJuIG9mIG92ZXIgOTclIHdoZW4gcGxheWluZyBhIGdvb2QgdmlkZW8gcG9rZXIgZ2FtZS4gClRoZSBkaXNvcmRlciBjYW4gYmUgY2F1c2VkIGJ5IGdlbmV0aWNzLCBhbiBpbmp1cnkgb3Igb3RoZXIgZmFjdG9ycy4gCkkgaGF2ZSBiZWVuIGNoZWNraW5nIGhpcyBwaG9uZSBwZXJpb2RpY2FsbHkgYW5kIGhlIGlzIGRlZmluZXRlbHkgc3RpbGwgZ29pbmcgdG8gdGhlIGNhc2lubyBhbmQgcGxheWluZyBwb2tlci4gSGUgZG9lcyB0aGlzIHdoaWxlIGhlIGlzIGFwcGFyZW50bHkgImF0IHdvcmsiLiAKRm9yIG1vc3QgY2hlY2tzIHlvdSB0cnlpbmcgZm9yIGEgdGFyZ2V0IG51bWJlciB0byBzdXJwYXNzLCBvdGhlcndpc2UgZm9yIG9wcG9zZWQgY2hlY2tzIHlvdSBqdXN0IG5lZWQgdG8gYmVhdCB0aGUgb3Bwb3NpdGlvbiBzdWNjZXNzZXMuIApUcmFja2xlc3MgdHJhbSByb3V0ZXMgYXJlIG11Y2ggY2hlYXBlciB0byBwcm92aWRlIHRoYW4gbGlnaHQgcmFpbCByb3V0ZXMgYnV0IGhhdmUgbmVhcmx5IGFsbCBvZiB0aGUgYmVuZml0cyBvZiBhIHRyYW0uIApXaGlsZSBqdW1ibyBwbGF5aW5nIGNhcmRzIG1heSBub3QgYmUgZm9yIGV2ZXJ5IG9uZSB0aGVzZSB1bmlxdWUgY2FyZHMgY2FuIGJlIGZ1biBhbmQgdXNlZnVsIGFzIHdlbGwuIFRoZSBsYXJnZSBqdW1ibyBzaXplIGNhcmRzIG1ha2VzIGNhcmQgcGxheWluZyBhIHNuYXAgZm9yIHlvdW5nIGNoaWxkcmVuIGFuZCB0aGVyZSBhcmUgZXZlbiBzcGVjaWFsIGRlY2tzIHRoYXQgYXJlIGdlYXJlZCB0byB0aGVpciBpbnRlcmVzdHMuIFRoZXJlIGFyZSBqdW1ibyBzaXplZCBjYXJkcyBkZXNpZ25lZCBmb3IgYmFjaGVsb3IgcGFydGllcyBhbmQgYmlydGhkYXlzIGFuZCBldmVuIGZvciBtYWdpY2lhbnMuLiAKVGhlIFBva2VyIEhvdXNlSXQgd2FzIGluIDIwMTAsIHRocmVlIHllYXJzIGFmdGVyIEkgbWV0IENhcmF3YXksIHRoYXQgSSB3cm90ZSBhYm91dCB0aGUgZmlyc3Qgc2VyaW91cyBzY2FuZGFsIGludm9sdmluZyBoaW0uIE15IGNvbGxlYWd1ZSBhdCB0aGUgdGltZSwgVGFueWEgRWlzZXJlciwgZ290IGEgdGlwIENhcmF3YXkgd2FzIGNoaWxsaW5nIGEgcG9saWNlIGNyYWNrZG93biBpbnRvIGEgZ2FtYmxpbmcgaG91c2UgaW4gU291dGggRGFsbGFzLiBUaGUgYWxsZWdhdGlvbiB3YXMgc2VyaW91cy4gCihQcml2YWN5IFBvbGljeSlIdWJQYWdlcyBHb29nbGUgQW5hbHl0aWNzVGhpcyBpcyB1c2VkIHRvIHByb3ZpZGUgZGF0YSBvbiB0cmFmZmljIHRvIG91ciB3ZWJzaXRlLCBhbGwgcGVyc29uYWxseSBpZGVudGlmeWFibGUgZGF0YSBpcyBhbm9ueW1pemVkLiAKV29vZHdhcmQgaXMgZ29ubmEgcHJvYmFibHkgd2FubmEgbWlsayB0aGUgY3VycmVudCBoaWdoIGFuZCBhbm5vdW5jZSBpdCBhZnRlciB0aGUgc2Vhc29uIGVuZHMgdG8gZ2VuZXJhdGUgbW9yZSBoeXBlIHdoZW4gdGhlcmUgd2lsbCBiZSBubyBmb290YmFsbCB0byB3YXRjaCB0byBtYWludGFpbiB0aGUgY3VycmVudCB0cmFqZWN0b3J5IG9mIHRoZSBzaGFyZSB2YWx1ZS4uIApLb25tYXJpIGNoYW5nZWQgbXkgbGlmZSwgYnV0IDk1JSBvZiB0aGF0IGNoYW5nZSBpcyBteSB3YXkgb2YgdGhpbmtpbmcgYW5kIHJlbGF0aW5nIHRvIG9iamVjdHMsIG15IHNwYWNlLCBhbmQgbXkgbGlmZS4gVGhlIG1ldGhvZCB3YXMganVzdCBhIG1vZGlmaWFibGUgaW5mcmFzdHJ1Y3R1cmUgdG8gZ2V0IG1lIHRoZXJlLi4gCktuYXZlbiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClJlYWxseSBJIGJlaW5nIGRlbHVzaW9uYWwgd2hlbiBJIHNheSBJIGdvaW5nIHRvIHdhbGsgYXdheSBvbmNlIEkgaGl0IGEgZGVjZW50IHdpbi4gSXQgb25seSB3aGVuIHlvdSBsb3NlLCB5b3UgY2FuIHJlZmxlY3Qgb24geW91ciBkZWNpc2lvbnMgYW5kIHRoaW5rIG1vcmUgcmF0aW9uYWwuIEEgbG90IGVhc2llciBzYWlkIHRoYW4gZG9uZSwgYnV0IEkgaG9wZSB5b3UgY2FuIGN1dCB5b3VyIGxvc3NlcyBhbmQgc3RheSBmcmVlIGZyb20gdGhpcyBjYW5jZXIuLiAKVG8gd2luIGluIGEgTm8gTGltaXQgSG9sZCBib3RoIHNvdW5kIHRlY2huaWNhbCBhYmlsaXRpZXMgYW5kIGZhaXJseSBhY2N1cmF0ZSBwZW9wbGUgc2tpbGxzIGFyZSBuZWVkZWQuIFlvdXIgdGVjaG5pY2FsIGFiaWxpdGllcyBzaG91bGQgaW5jbHVkZSBrbm93aW5nIHdoZW4gdG8gY2FsbCwgdG8gcmFpc2UsIHRvIGNoZWNrLCBvciB0byBmb2xkLiBZb3VyIHBlb3BsZSBza2lsbHMgaW52b2x2ZSB0aGUgcmVhZGluZyBvZiBzdHlsZXMgb2YgeW91ciBvcHBvbmVudHMuIElmIG9wcG9uZW50cyBhcmUgdGltaWQsIHlvdSBjYW4gd2luIGFuZCBzdGVhbCBhIGxvdCBvZiBwb3RzIGJ5IGJsdWZmaW5nLiBCdXQgeW91IG11c3QgYWxzbyBrbm93IHdoZW4gdG8gZm9sZCBpZiB5b3VyIG9wcG9uZW50IHNob3dzIG9ic3RpbmFjeS4gSWYgeW91ciBvcHBvbmVudHMgYXJlIHJlY2tsZXNzIGFuZCBsb29zZSwgeW91IGNhbiB3aW4gYnkgcGF0aWVudGx5IHdhaXRpbmcgZm9yIHRoYXQgb3Bwb3J0dW5pdHkgdG8gdHJhcCB0aGVtLiBUaGVuLCB3aXBlIHRoZW0gb3V0IGluIG9uZSBoYW5kLgpDdHNteDUwMCB1ClRoZXJlJ3MgdGhlIEludGltYWN5IEluc3RpdHV0ZSwgd2hpY2ggcHJvdmlkZXMgY291bnNlbGluZyBhbmQgZWR1Y2F0aW9uIHRvIGhlbHAgcGVvcGxlIGRlYWwgd2l0aCBzZXh1YWwgY29uY2VybnMuIFRoZSBCb3VsZGVyIENlbnRlciBmb3IgU2V4dWFsIEhlYWx0aCwgZGVzaWduZWQgdG8gInN1cHBvcnQgeW91ciBqb3VybmV5IHRvd2FyZCBzZXh1YWwgZnVsZmlsbG1lbnQuIi4gCk15IGltcHJvdmVtZW50IGlzIGdvb2QsIGJ1dCBub3QgYXR5cGljYWwgZm9yIHBlb3BsZSBvZiBteSBzaXplIHdobyBkaXZlIGludG8gdGhlIHJ1bGVzLiAKTXkgYXVudHMgdXNlZCB0byBhc2sgZm9yIHRoaW5ncyBmb3IgZnJlZSBhbGwgdGhlIHRpbWUgYW5kIEkgY2F2ZSBzb21ldGltZXMgYW5kIGdpdmUgdGhlbSBvbmUgZnJlZSBpdGVtIGV2ZW4gdGhvdWdoIEkgZGlkbiB3YW50IHRvICh0aGUgb25lIGZyZWUgaXRlbSBzdXBwb3NlZCB0byBiZSByZXNlcnZlZCBmb3IgbXkgbW9tIGFuZCBncmFuZG1hcyBvbmx5KS4gQWZ0ZXIgeWVhcnMgdGhleSBmaW5hbGx5IGdvdCBpdCBhbmQganVzdCBwYXkgdGhlaXIgZGlzY291bnRlZCBwcmljZSB3aXRob3V0IGNvbXBsYWluaW5nIG5vdy4gSSByZWFsbHkgaGF0ZSBob3cgcGVvcGxlIHdpbGwganVzdCBhc3N1bWUgdGhhdCBiZWNhdXNlIHRoZXkgZmFtaWx5IHRoZXkgZ2V0IHRoaW5ncyBmb3IgZnJlZS4gCkNldHRlIGZpbiBkJ2FubmUsIG5vdXMgc29tbWVzIHBhcnRpcyAoZW5jb3JlICEpIGF1IEphcG9uLiBKZSBjcm9pcyBxdWUgZGFucyBjZSBwYXlzIGZvcnQgYXR0ZW50aWYgYXUgcnl0aG1lIGRlcyBzYWlzb25zLCBjZWxsZXMgY2kgc29udCB0b3V0ZXMgc291cmNlcyBkZSBwbGFpc2lycyB2YXJpcy4gCldoYXQgeW91IHNob3VsZCBrbm93IGlzIHRoYXQgQWRkZXJhbGwgaXMgc3BlZWQsIGFuZCBpdCBpcyBBZGRlcmFsbCBzY2FyeSBzaWRlIGVmZmVjdHMgYWRkaWN0aXZlLiBJZiBpdCByZXZ2ZWQgeW91IHVwIChpcyB0aGF0IHdoYXQgeW91IG1lYW50IGJ5ICJjcmF6eSI/KSB5b3Ugc2hvdWxkIG5vdCBiZSB0YWtpbmcgLgpTY3VscHRvcnMgdHVybmVkIGF3YXkgZnJvbSBpZGVhbGlzdGljIHNoYXBlcyBhbmQgdW5uYXR1cmFsIHBvc2VzIGFuZCBsZXQgdGhlaXIgd29yayBzaG93IG1vcmUgaW5kaXZpZHVhbCBmZWF0dXJlcyBvZiBwZW9wbGUgYXMgd2VsbCBhcyBtb3JlIG5hdHVyYWwgYm9keSBmZWF0dXJlcy4gVGhleSBkaXNjb3ZlcmVkIGhvdyB0byBkZXBpY3QgbW92ZW1lbnQgYW5kIG5hdHVyYWwgcG9zdHVyZXMgb2YgdGhlIGh1bWFuIGJvZHkuIFRoZXkgZGV2ZWxvcGVkIHRoZSAnY291bnRlcnBvaXNlJywgZmlndXJlcyBzdGFuZGluZyB3aXRoIG1vc3Qgb2YgdGhlaXIgd2VpZ2h0IG9uIG9uZSBsZWcsIHdoaWNoIGhhcyBiZWVuIHVzZWQgaW4gbWFueSBzY3VscHR1cmVzIGV2ZXIgc2luY2U0LiBUaGUgZmlyc3QgcHJvZmFuZSBzdGF0dWVzIGFwcGVhcmVkIGR1cmluZyB0aGlzIGVyYTogaG9sbG93IGJyb256ZSBzY3VscHR1cmVzIGdpdmVuIHRvIE9seW1waWMgYXRobGV0ZXMgYXMgYSBwcml6ZS4gU29vbiB0aGVyZSB3ZXJlIGFsc28gc3RhdHVlcyBhbmQgcG9ydHJhaXQgaGVhZHMgb2YgaW1wb3J0YW50IHBlcnNvbnMgdG8gYmUgZm91bmQgaW4gbWFueSBjaXRpZXMgdGhhdCB3b3VsZCBzZXJ2ZSBhcyBleGFtcGxlcyBmb3IgYWxsIHRvIHNlZS4KVGhlIGZvbGxvd2luZyBzaWducyBvZiBpbGxuZXNzIGNhbiBpbmRpY2F0ZSB2ZXJ5IHNlcmlvdXMgcHJvYmxlbXMuIElmIHlvdSBub3RpY2UgYW55IG9mIHRoZXNlIHN5bXB0b21zLCB0YWtlIHlvdXIgZG9nIHRvIHRoZSB2ZXQgaW1tZWRpYXRlbHk6Ckl0IGxvb2tzIGV4dHJlbWVseSBzbWFydCBhbmQgd291bGQgbG9vayBldmVuIGJldHRlciBpbiB0aGUgc3VuIGdsYXJlLiAKTm90aGluZyBpbiBwYXJ0aWN1bGFyIHdhcyBncmVhdCBhYm91dCB0aGF0IG1vdmllIGFwYXJ0IGZyb20gU3RyZWVwLiAKVGhpcyBpcyBjaGlsZGlzaCBvZiBoaW0uIFlvdSdyZSBoZXJlIGZyZXR0aW5nIG92ZXIgaGltIGxpa2UgaGUncyBhIHRvZGRsZXIgdGhhdCdzIG9uIGEgZm9vZCBzdHJpa2UsIGFuZCBtZW50YWxseSwgaGUgcHJldHR5IG11Y2ggaXMuIApIb3cgZG8geW91IGdldCBhIHN3ZWV0IGNhdD8gSSBoYXZlIG9uZSB3aG8gaXMgYWxtb3N0IGEgeWVhciBhbmQgd2hpbGUgaGUgaGFzIHN3ZWV0IG1vbWVudHMsIHRoZXkgYXJlIG9uIGhpcyB0ZXJtcyBhbmQgY29uZGl0aW9ucy4gCldoZXJlIGFyZSB0aGUgdHV4ZWRvcz8uIApUaGlzIHdpbGwgb2YgY291cnNlIGluY2x1ZGUgc3RyZWFtbGluaW5nIHRoZSBhcHByb3ZhbHMgcHJvY2Vzc2VzIGZvciBwbGFubmluZywgZW52aXJvbm1lbnRhbCBhbmQgc2VydmljaW5nLiAKT3ZlcmFsbCBPYmFtYSdzIHRlYW0gb2JleWVkIHRoZSBsYXcuIApXZSBwdW5jaGVkIGhlciwgc2hvdmVkIG91ciBkaWNrcyB3aGVyZSBldmVyIHdlIHdhbnRlZC4gSXQgd2FzIHRoZSBiZXN0IHRpbWUgZXZlci4gCkkgcmlkZSBteSBiaWtlIG9uIHRoZSBzaWRld2Fsa3MgaW4gc29tZSBhcmVhcyB0b28sIHNob3VsZCB3ZSBvdXRsYXcgYmlrZXMgbm93P0RlbW9raXJieSAgMzggcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0NodXJjaGlsbCBhcmd1bWVudCB0aGF0IHRoZSBkaXNhc3RlciBhdCBHYWxsaXBvbGkgd2FzIGR1ZSB0byBoaXMgcGxhbiBub3QgYmVpbmcgZm9sbG93ZWQsIHNpbmNlIHRoZSB3aG9sZSBwb2ludCB3YXMgdG8gdGFrZSB0aGVpciBtYXNzaXZlIGZsZWV0IG9mIG5vdyBkYXRlZCBzaGlwcyB0aGF0IGNvdWxkIG5vdCBjb21wZXRlIGFnYWluc3QgdGhlIHRoZW4gbW9kZXJuIERyZWFkbm91Z2h0IGNsYXNzIHNoaXBzIGFuZCB1c2UgdGhlbSB0byBpbiBhIGV4cGVuZGFibGUgbWFubmVyIGFnYWluc3QgdGhlIFR1cmtzIHdobyBkaWQgbm90IGhhdmUgRHJlYWRub3VnaHRzIG9mIHRoZWlyIG93bi4gSGUgd2FudGVkIHRoZW0gdG8gbGV2ZXJhZ2UgdGhpcyB0byBiYXJyZWwgdGhyb3VnaCB0byBhdm9pZCBiZWluZyBib2dnZWQgZG93biBpbiBhbm90aGVyIGxhbmQgd2FyIGZyb250LCBidXQgb3RoZXIgY29tbWFuZCBnb3Qgc2tpdHRpc2ggYWJvdXQgd2FzdGluZyB0aGVpciBvbGQgbWFuYSBwb3Rpb25zIHNoaXBzLk5vdCBzYXlpbmcgdGhhdCBwbGFuIHdvdWxkIG9yIHdvdWxkIG5vdCB3b3JrLCBidXQgZG8gd2FudCB0byBwb2ludCBvdXQgdGhlIGxhbmQgd2FyIGluIEdhbGxpcG9saSB3YXMgbm90IENodXJjaGlsbCBtb3ZlLCBidXQgb3RoZXIgY29tbWFuZCBhbmQgcG9saXRpY2lhbnMgaW50ZXJmZXJpbmcub3JhbmdlanVsaXVzICAyMSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvSSB0aGluayB0aGlzIGNvbnRleHQgaXMgaW1wb3J0YW50LiAKSW4gaGV0IHBhcmtqZSBlciBhY2h0ZXIgdm9uZGVuIHdlIGVlbiBnZW9jYWNoZSwgdmVlbCBSdXNzaXNjaGUgZ2V6aW5uZW4gZW4gd2VlciBsZXVrZSBiZWVsZGVuIGdyb2VwZW4uIApUaGUgb2xkIGJydXNoIHlvdSBoYXZlIGxpa2VseSBoYXMgYm9hciBoYWlyLiBUaGVyZSBhcmUgbG90cyBvZiByZXNvdXJjZXMgZm9yIGtub3RzIGJ1dCBJIGdlbmVyYWxseSBzdGljayB3aXRoIE1hZ2dhcmQgUmF6b3JzIGZvciB0aGVpciBxdWljayBzaGlwcGluZyBhbmQgdmFsdWUuIEkgdXNlIGZpbmUgZ3JpdCBzYW5kcGFwZXIgODAwIGdyaXQgdXAgdG8gMmssIHBvbGlzaCB3aXRoIG1pY3JvbWVzaCBhbmQgYnVmZiB3aXRoIHRyaXBvbGkgdGhlbiB3aGl0ZSBkaWFtb25kIHVzaW5nIGFuIDE4diBjb3JkbGVzcyBkcmlsbCBhbmQgNCIgY2xvdGggd2hlZWxzLiAKUmVkdWN0aXZlPyBNYXliZSwgYnV0IHRoZSBkZXNpcmUgdG8gaW1pdGF0ZSB0aG9zZSBwZW9wbGUgd2l0aCB0aGUgbW9zdCBzdGF0dXMgaXMgYSBuZWFybHkgdW5pdmVyc2FsIGltcHVsc2UuIApUaGlzIHJ1bGUgdGFrZXMgcHJlY2VkZW5jZS4gCkdldCBwYWlkIHRvIHRhbGsgd2l0aCBwZW9wbGUgaW4gdGhlIG5laWdoYm9yaG9vZCBhbGwgZGF5IHdobyBhcmUgYWxsIHdvbmRlcmZ1bCBwZW9wbGUgYW5kIG1ha2UgY29mZmVlLiAKVG9kYXkgdGhlcmUgYXJlIG1hbnkgdmFyaWF0aW9ucyBvZiBwb2tlciBpbmNsdWRpbmcgdGhlIG1vc3QgcmVjZW50IHNwYXJrIHdoaWNoIGlzIGNhbGxlZCBUZXhhcyBIb2xkJ2VtLiBUaGlzIHN0eWxlIG9mIHBva2VyIGhhcyBicm9rZW4gcmVjb3JkcyBhcyBmYXIgYXMgY29tbWVyY2lhbCBhbmQgcHVibGljIGF0dGVudGlvbiB0byB3b3JsZCB0b3VybmFtZW50cyBhbmQgaGFzIGFsc28gZnVlbGVkIHRoZSBncm93dGggb2YgdGhlIGJpZ2dlc3QgY2FyZCBnYW1lIG9uIGVhcnRoLgpPciwgeW91IGNhbiBjb250YWN0IHRoZW0gdGhyb3VnaCB0aGUgcmV2aWV3cyB3cml0dGVuIGJ5IHRoZW0uIFlvdSBjYW4gYWxzbyBwYXkgdmlzaXQgdG8gdGhlIG9ubGluZSBtYXJrZXRwbGFjZXMgd2hlcmUgdGhlIHBsYXllciBjYXJkIHByb2R1Y2VycyBjb21lIHVwIHdpdGggZGlmZmVyZW50IGNhcmQgcHJvdGVjdGlvbiBzb2x1dGlvbnMuIApFYXRvbidzIHN0b2NrIGlzIGhvdCB0b2RheSBhZnRlciBjb21wYW55IHJlcG9ydHMgY3V0YmFja3MgYm9vc3RlZCBlYXJuaW5ncyBFYXRvbidzIHN0b2NrIGlzIGhvdCB0b2RheSBhZnRlciBjb21wYW55IHJlcG9ydHMgY3V0YmFja3MgYm9vc3RlZCBlYXJuaW5ncyBFYXRvbidzIHN0b2NrIHByaWNlIGp1bXBlZCBieSBtb3JlIHRoYW4gNSBwZXJjZW50IGJ5IHRoZSBub29uIGhvdXIgV2VkbmVzZGF5IGFmdGVyIHRoZSBjb21wYW55IHJlcG9ydGVkIGl0cyAyMDE1IHllYXIgZW5kIHNhbGVzIGFuZCBwcm9maXRzIHdlcmUgbm90IGFzIGJhdHRlcmVkIGFzIHByZWRpY3RlZCBiZWNhdXNlIG9mIHRoZSBjb21wYW55J3MgZ2xvYmFsIGJlbHQgdGlnaHRlbmluZy4gTWFya2V0cyBhZnRlciB0aGlzIHllYXIuIApCYXNpY2FsbHkgaXQgc3RhcnRlZCBiZWNhdXNlIEkgaGFkIGFuIGFwYXJ0bWVudCBhbmQgcGFpZCB0aGUgZmVlLCBzaGUgaGFkIGFuIGFwYXJ0bWVudCBhbmQgcGFpZCB0aGUgZmVlLCB3ZSBtb3ZlZCBpbiB0b2dldGhlciBhbmQgdGhlIHBlb3BsZSBtb3ZlZCBvdXQgNSBkYXlzIGVhcmx5IHNvIHdlIGNvdWxkIG1vdmUgaW4gYSBsaXR0bGUgc29vbmVyLiBUaG9zZSBwZW9wbGUgYWxzbyBwYWlkIHRoZSBmZWUgZm9yIG91ciBuZXcgYXBhcnRtZW50IGZvciB0aGF0IG1vbnRoLiAKSSB0aGluayB0ZW5kIHRvIGJlIG1vcmUgY2FyaW5nIHRoYW4gdXMgbWVuIGJ5IGFuZCBsYXJnZSwgYW5kIHNvIGlmIHRocm91Z2ggcHJvdmlkaW5nIG1lYW5zIGZvciB3b21lbiB0byBiZWNvbWUgYmV0dGVyIGVkdWNhdGVkIGlmIHRoYXQgYWxsb3dzIHdvbWVuIHRvIGFzc3VtZSBwb3NpdGlvbnMgb2Ygc2lnbmlmaWNhbmNlIGluIHRoaXMgd29ybGQsIEkgdGhpbmsgd2UgYWxsIHdvdWxkIGJlIGJldHRlciBvZmYsIGhlIHNhaWQuCklmIGFueSBvZiB0aGF0IHRpY2tsZXMgeW91ciBmYW5jeSwgSSdsbCBiZSB0aGVyZSwgYXMgYWx3YXlzLCBhbmQgZHVyaW5nIHRoZSBjb21pbmcgd2Vla3MsIG1heWJlIEknbGwgc2VuZCBiYWNrIGEgc3Rvcnkgb3IgdHdvIGZyb20gd2hhdCBpcywgaW4gdGhlIHdvcmxkIG9mIHBva2VyLCB0aGUgZ3JlYXRlc3QgZXZlbnQgb24gRWFydGgsIGJhciBub25lLiBTbyBib29rbWFyayB0aGlzIHBhZ2UsIGFuZCB0aGUgV1NPUCB0YWxlcyBvZiBkZXJyaW5nIGRvLCBvciwgaW4gbXkgY2FzZSwgbm90IHNvIGRlcnJpbmcgZG8sIHdpbGwgZm9sbG93LiBWaWNhcmlvdXMgVmVnYXMgaXMgdGhlIG5leHQgYmVzdCB0aGluZyB0byBiZWluZyB0aGVyZSwgYnV0IHJlYWxseSwgaWYgeW91IGNhbiBnZXQgdGhlcmUsIHlvdSBzaG91bGQuCkdlbmVsZGUgbWVzbGVpbmRlIGJlbGlybGkgYmlyIHllcmUgZ2VsaW5jZSBvIG1hYSBhbHlvcnN1bi4gT251biBkbmRhIGJheiBib2wga2VzZWRlbiBrYXphbmFuIG1lc2xla2xlciB2YXIgb25sYXJuZGEga2VuZGkgaWxlcmluaSBiaXIgbm9rdGF5YSBvdHVydG1hbGFyIGdlbmVsZGUgemFtYW4gYWx5b3IgYnVubGFyIHBzaWtvbG9nbGFyLCBhdnVrYXRsYXIsIG1pbWFybGFyLCBkaWlsZXIsIGRva3Rvcmxhcixha2FkZW1pc3llbmxlcixwaWxvdGxhciwgZXNuYWYgLGtlbmRpIGlpbmkgeWFwYW4ga2VzaW1sZXIgYnUga2FkYXJsYXJkYW4gb2sgYmlsZSBrYXphbnlvcmxhci5CdSBrZXNpbSBrayBiaXIgZ3J1cCBkZWlsIG5lcmVkZXlzZSBsa2VkZSBtZW11ciB6ZWwgKyBzZWt0ciBhbGFuIGthZGFyIGJ1bmxhcmRhbiB2YXJkci4gCk1pcnp5YSwgdGhhdCByZWxlYXNlcyB0b2RheSwgd2lsbCBpbnRyb2R1Y2UgdHdvIG5ldyBmYWNlcyBpbiB0aGUgaW5kdXN0cnkgSGFyc2h2YXJkaGFuIEthcG9vciBhbmQgU2FpeWFtaSBLaGVyLiBCb3RoIG9mIHRoZW0gYXJlIHZlcnkgZGlmZmVyZW50IGZyb20gZWFjaCBvdGhlciBTYWl5YW1pIGhhcyB0aGlzIG9sZCB3b3JsZCBjaGFybSB3aGVyZWFzIEhhcnNoIGlzIHZlcnkgbmV3IGFnZSwgdXAgdG8gZGF0ZSBhYm91dCBldmVyeXRoaW5nIGluIGxpZmUuIApJdmUgaGFkIHhyYXlzIGFuZCBNUkkgYW5kIHNlZW4gYSBzcG9ydHMgZG9jdG9yIGFuZCBwb3dlcmxpZnRpbmcgY29hY2ggYW5kIGV2ZXJ5dGhpbmcgc2VlbXMgbm9ybWFsIG90aGVyIHRoYW4gdGlnaHQgaGFtc3RyaW5ncyBhbmQgaGlwIGZsZXhvcnMgYW5kIGEgbW9kZXJhdGUgY3VydmUgaW4gbXkgc3BpbmUgKGt5cGhvc2lzKS4gSXZlIHRyaWVkIGxpZnRpbmcgbGlnaHQgYW5kIHdvcmtpbmcgb24gbXkgZm9ybS4gaSBzdHJldGNoLiBpdmUgc3RhcnRlZCB3b3JraW5nIG9uIG15IGNvcmUgd2l0aCBwbGFua3MsIGxlZyByYWlzZXMgYW5kIGNydW5jaGVzLgpXaGlsZSByZWxhdGlvbnMgd2l0aCBXYXNoaW5ndG9uIGxvb21lZCBsYXJnZSwgV2FuZyB0aGlzIHllYXIgdXJnZWQgZm9yIGNhbG0gZnJvbSBib3RoIGhpcyBjb3VudHJ5J3MgbG9uZ3RpbWUgYWxseSBQYWtpc3RhbiBhbmQgSW5kaWEsIGEgdHJhZGl0aW9uYWwgcml2YWwgdG8gd2hvbSBDaGluYSBpcyBzbG93bHkgd2FybWluZyB1cC4gSGUgdGFsa2VkIHVwIEJlaWppbmcncyBhZmZpbml0eSBmb3IgTW9zY293LCBvZmZlcmVkIGVuY291cmFnaW5nIHJlbWFya3MgYWJvdXQgSmFwYW4sIGFub3RoZXIgdHJhZGl0aW9uYWwgcml2YWwsIGFuZCBwcmFpc2VkIHRoZSBzdW1taXQgbWVldGluZyBiZXR3ZWVuIFByZXNpZGVudCBUcnVtcCBhbmQgTm9ydGggS29yZWFuIGxlYWRlciBLaW0gSm9uZyBVbiBhcyAibW92aW5nIGluIHRoZSByaWdodCBkaXJlY3Rpb24iIGRlc3BpdGUgaXRzIGFicnVwdCBjb25jbHVzaW9uIGxhc3Qgd2VlayB3aXRob3V0IGEgZGVhbC4KV2VsY2ggZXluZW4gdmVyc2NoaXNzZW5lbiBVbmZ1ZyBzY2hpY2t0ZXN0IGR1IGRpY2ggenVyIEhsbGUgbm9jaG1hbCBhbiwgYmVyIGRhcyBoZWlsaWdlIHJtaXNjaGUgUmV5Y2ggaW4gZGllIFdlbHQgaGVyYXVzenV0aHJhZ2VuLCBkdSBMdXN0a25hYmU/IFNleWQgZHJ1bWIgaW4gS2VubnRobmlzeiBnZXNldHpldCwgZGFzcyBtaW4gdGhyZXVlIFNuZGVyc2VlbGUgbWV5bmVzIEdld2FsdGhhdXZucyBiZXN0aGVyIExhbmRza25lY2h0IGdld2VzZW4gdW5kIGFuIFNjaHdlcnRoemdlbiBnZWdlbiBob2xsbmRpc2NoZSBSZWJlbGxlbiBtZXluZW4gVGhlaWwgdHJ1ZywgZGVyZXIgbmljaHQgbnVyIHphaGxyZXljaCwgc29uZGVybiBhdWNoIG9jY3VsdGVyIE5hdHVyYSB3YXJlbi4gCkFjY29yZGluZyB0byBCb2x0b24sIENoaW5hIHdhcyBhbiBlc3BlY2lhbGx5IGdvb2QgcGxhY2UgdG8gc3R1ZHkgd2hhdCBpbmZsdWVuY2VzIHBlb3BsZSBoZWFsdGggZGVjaXNpb25zLCBiZWNhdXNlIFdlc3Rlcm4gYW5kIHRyYWRpdGlvbmFsIENoaW5lc2UgbWVkaWNpbmUgb3BlcmF0ZSBhbG9uZ3NpZGUgZWFjaCBvdGhlciB0aGVyZSwgYW5kIGJvdGggZm9ybXMgb2YgbWVkaWNpbmUgYXJlIHJlc3BlY3RlZC4gCkhlcmUgYSB0YWxrIHNoZSBnYXZlIHRoYXQgZ2l2ZXMgYSBmYWlybHkgZGV0YWlsZWQgb3ZlcnZpZXcgYWJvdXQgdGhlIHR5cGVzIG9mIHRoaW5ncyBzaGUgY2xhaW1pbmcuIFZlcnkgZXllIG9wZW5pbmcgc3R1ZmYuIFNoZSB3YXMgb25lIG9mIHRoZSBtYWpvciBjYXRhbHlzdHMgZm9yIHRoZSBhdHRlbnRpb24gZ2l2ZW4gdG8gdGhlIHRyaWxsaW9ucyBtaXNzaW5nIGZyb20gdGhlIFBlbnRhZ29uIHJpZ2h0IGJlZm9yZSA5LzExLiBTcGVha3MgYWJvdXQgdGhlIE9rbGFob21hIGJvbWJpbmcgaGFwcGVuaW5nIHJpZ2h0IGJlZm9yZSB0aGV5IHdlcmUgZ29pbmcgdG8gZ2V0IHJlY29yZHMgZnJvbSB0aGF0IGJ1aWxkaW5nIGluIG9yZGVyIHRvIGF1ZGl0LiBUYWxrcyBhYm91dCBibGFjayBidWRnZXQsIHNlY3JldCBzcGFjZSBwcm9ncmFtcywgVUZPIHByb2dyYW1zIGFuZCBob3cgdGhleSBhcmUgZnVuZGluZyBhIGJyZWFrYXdheSBjaXZpbGl6YXRpb24sIGhvdyBkZXBhcnRtZW50cyBsaWtlIEhVRCAodGhlIGRlcGFydG1lbnQgc2hlIHJhbikgYXJlIGxpdGVyYWxseSBqdXN0IHNsdXNoIGZ1bmRzIGZvciB0aGlzIGFuZCBob3cgdGhlIGZpbmFuY2lhbCByZWNvcmRzIChvciBsYWNrIHRoZXJlb2YpIGhpZ2hseSBzdXBwb3J0IHRoZSBpZGVhLiBTaGUgd2FzIHZlcnkgaGlnaCB1cCBvbiB3YWxsIHN0LiBhcyB3ZWxsIGFzIGJlaW5nIGluIGNoYXJnZSBvZiBnb3Zlcm5tZW50IHByb2dyYW1zLCBjb2luZWQgYW5kIGNhbWUgdXAgd2l0aCB0aGUgcG9wdWxhciAiUG9wc2ljbGUgaW5kZXgiIHVzZWQgdG8gZ2F1Z2UgcXVhbGl0eSBvZiBsaWZlLCBldGMuIERvZXNuIGdldCBtdWNoIG1vcmUgY3JlZGlibGUgdGhhbiB0aGlzLgpXZSdyZSBwYXJ0IG9mIGEgYmlvbG9naWNhbGx5IGNsYXNzaWZpZWQgZ3JvdXAga25vd24gYXMgY29udGludW91cyBicmVlZGVycywgd2hpY2ggbWVhbnMgdGhhdCB3ZSBtYXRlIG9yIGJyZWVkIHllYXIgcm91bmQuIFNlYXNvbmFsIGJyZWVkZXJzLCBsaWtlIGJlYXJzIG9yIGNoaXBtdW5rcywgaGF2ZSBjaGFuZ2VzIGluIGZlcnRpbGl0eSBhbmQgc2V4dWFsIGFjdGl2aXR5IGRlcGVuZGluZyBvbiB0aGUgdGltZSBvZiB5ZWFyLiAKQ2lyY2xlZW4gIDcgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpXaGlsZSB0aGV5IHdlcmUgZ3JhdGVmdWwgYWJvdXQgdGhlIHByaWNpbmcsIGl0IHdhcyB0aGUgZmFjdCB0aGF0IHRoZSBNZXRhbCAxMiBSb3cgQ2FzaW5vIFRhYmxlIENoaXAgVHJheSB3aXRoIENvdmVyIGFuZCBMb2NrIGNhbWUgd2l0aCBhIGxvY2sgYW5kIGtleS4gSSBhY3R1YWxseSBib3VnaHQgaXQgYmVjYXVzZSBvZiB0aGUgc2l6ZSwgYnV0IGl0IGRpZCBtYWtlIHNlbnNlIHRoYXQgdGhleSB3YW50ZWQgdG8ga2VlcCBldmVyeXRoaW5nIHNhZmUganVzdCBpbiBjYXNlIHNvbWV0aGluZyB3ZXJlIHRvIGhhcHBlbi4gCkhpcyBmcmllbmRzIHdlcmUgYWxzbyBzbyBpbXBvcnRhbnQgdG8gRGFuLiAKU3VicG9lbmFzNERvbmFsZCAgMSBwb2ludCAgc3VibWl0dGVkIDEgeWVhciBhZ28KSnVzdG8gYWhvcml0YSBoYXkgdW5hIGVtcHJlc2EgcXVlIHNlIGVzdCBkZWNsYXJhbmRvIGVuIGJhbmNhcnJvdGEgcG9yIHRlbmVyIG1zIGRlIDEwMDAgZGVtYW5kYXMgZGUgcHJvbW9jaW9uYXIgdW4gbWVkaWNhbWVudG8gZGljaWVuZG8gcXVlIG5vIGVyYSBhZGljdGl2by4gCllvdSBkb24gd2FudCB0byBwbGF5IHRoZSBwaWNrIGFuZCBjaG9vc2UgZ2FtZSAodGhhdCBkYW1uIG5lYXIgZ2FtYmxpbmcpLCB5b3Ugd2FudCBsb3cgY29zdCBpbmRleCBmdW5kcyB0aGF0IHRyYWNrIGEgbGFyZ2Ugc2VnbWVudCBvZiB0aGUgbWFya2V0LiBWVEkgaXMgYSBnb29kIG9wdGlvbiBpZiB5b3Ugd2FudCB0byBnbyBFVEYsIFZUU0FYIGlzIGFsc28gZ29vZCBpZiB5b3UgZ28gdGhlIG11dHVhbCBmdW5kIHJvdXRlLgpWb2RrYSB3YXMgY2hvc2VuIG92ZXIgcnVtIGFuZCB3aGlza3kgYmVjYXVzZSBpdCBzZWxscyBiZXN0Li4gCllvdSBzYWlkIHlvdSBkYXRlZCBmb3IgYSB5ZWFyIGFuZCBhIGhhbGYuIApUZWxsIGhlciB5b3UgZG9uIGhhdmUgdGhlIGJ1ZGdldCB0byBoZWxwIGhlciBhdCB0aGlzIHRpbWUgYnV0IHBlcmhhcHMgc2hlIGNhbiB0YWxrIHRvIGhlciBiYW5rIGFib3V0IHJlZmluYW5jaW5nIG9wdGlvbnMuIAoiV2UgYXJlIGEgY29tbXV0ZXIgc2Nob29sIGFuZCBhIGxvdCBvZiBvdXIgc3R1ZGVudHMsIHRoZXkgZG9uJ3QgZ2V0IHRvIGdvIGhvbWUgdW50aWwgbWF5YmUgZWlnaHQgb3IgbmluZSBob3VycyBhZnRlciB0aGV5J3ZlIGhhZCBhIHdob2xlIGRheSBvbiBjYW1wdXMsIiBzYXlzIHVuaW9uIHByZXNpZGVudCBNb25pY2EgS2hvc2xhLCB3aG8gcmVwcmVzZW50cyBzdHVkZW50cyBhdCBib3RoIHNjaG9vbHMsIHdoaWNoIGluY2x1ZGVzIGEgc2F0ZWxsaXRlIGNhbXB1cyBmb3IgdGhlIFVuaXZlcnNpdHkgb2YgR3VlbHBoLiBDb21wYW55IE1ldHJvTmFwcyBsYXN0IEF1Z3VzdCwgYWRkcyBzcG9rZXNtYW4gQnJhZCBCZWFtaXNoLiAKUGx1cyBwYXJ0aWN1bGFybHkgYSB5b3VuZyBjaGlsZCBpcyBnZXR0aW5nIG1vc3Qgb2YgaGlzIG1vbmV5IGFuZCBzdHVmZiBmcm9tIHRoZSBwYXJlbnRzLCBhbmQgaXQgYSBjYXNlIG9mIG5vdCBiZWluZyBzbyB3ZWFrIHdpbGxlZCAoYXMgZmFyIHRvbyBtYW55IHBhcmVudHMgYXJlKSBhbmQgZ2l2aW5nIGludG8gZGVtYW5kcyBidXQgYWdhaW4gc2V0dGluZyBib3VuZGFyaWVzLiAKVGhpcyBhY3R1YWxseSBsb29rcyBhIGxvdCBsaWtlIHNvbWUgb2YgdGhlIGFyYyBsaWdodGluZyB1c2VkIHByZXNlbnRseSBpbiBwcm9qZWN0b3JzIGFuZCBzZWFyY2hsaWdodHMgYW5kIHN1Y2gsIHRob3VnaCB3aXRoIGZhciBtb3JlIGVmZmljaWVuY3kgYW5kIGx1bWVucyBhbHNvIHRoZSBhcmMgaXMgcGFzc2luZyB0aHJvdWdoIGEgZ2FzLCBsaWtlIHhlbm9uLCB1bmRlciBoaWdoIHByZXNzdXJlIHRvIHByb2R1Y2UgInN1biBsaWtlIiBsaWdodC4gSGlzIG5hbWUgaXMgc2VsZG9tIG1lbnRpb25lZCwgaXQgc2VlbXMsIGluIGFueSBvZiB0aGUgcG9wdWxhciB0aW1lbGluZXMvY2hyb25vbG9naWVzL2hpc3RvcmllcyB0aGF0IEkgcGVja2VkIGFyb3VuZCB3aXRoIG9ubGluZS4gClRoZXkgYXJlbiByZWxlYXNpbmcgdGhlIG1vZHVsZSB5ZXQgYmVjYXVzZSB0aGV5IHdhbnQgdG8gY2hlY2sgZXZlcnkgbm9vayBhbmQgY3Jhbm55IGZvciBpc3N1ZXMgc28gdGhleSBkb24gbG9vayBsaWtlIGZvb2xzIGlmIHNvbWV0aGluZyBzY3Jld3MgdXAgYW5kIHBlb3BsZSBzdGFydCBzY3JlYW1pbmcgYXQgc3VwcG9ydCwgb24gdGhlIHRoZSBmb3J1bXMvcmVkZGl0L2V0YyBhbmQgdGhlIG5lZ2F0aXZlIGZlZWRiYWNrIGFmZmVjdHMgc2FsZXMuClRoZSBkYXRhIGFsc28gc2hvdyB1cyB0aGF0IG9uZSBvZiB0aGUgbWFpbiBkcml2ZXJzIG9mIHRoaXMgcHJpY2luZyBlZmZlY3QgaXMgdGhlIHN1cGVyaW9yIGFiaWxpdHkgb2YgZW1vdGlvbmFsIGNhbXBhaWducyB0byBjcmVhdGUgYSBzZW5zZSBvZiBkaWZmZXJlbnRpYXRpb24gZm9yIHRoZSBicmFuZCwgb25lIHRoYXQgY2FuIGVuZHVyZSBhbmQgd2lsbCBub3QgZGlzYXBwZWFyIHdpdGggdGhlIG5leHQgcHJvZHVjdCBsYXVuY2ggZnJvbSBhIGNvbXBldGl0b3IuIAoiTXkgZmlyc3QgdGhvdWdodHMgZ28gdG8gaGlzIGZhbWlseSwgaGlzIHRlYW1tYXRlcywgbWFuYWdlcnMgYW5kIHRlY2huaWNpYW5zIGFuZCB0aGUgQmVsZ2lhbiBjeWNsaW5nIGZlZGVyYXRpb24sIHRvIHdoaWNoIHRoZSBlbnRpcmUgY3ljbGluZyBjb21tdW5pdHkgb2ZmZXJzIGl0cyBzdXBwb3J0LCIgRGkgUm9jY28gc2FpZC4gIldlIGFyZSBhbGwgYWZmZWN0ZWQgYnkgdGhpcyBncmllZiwgY2F1c2VkIGJ5IHRoZSBpbXBvbmRlcmFibGUsIHdoaWNoIGlzIGFsd2F5cyBhIHJpc2sgZGVzcGl0ZSB0aGUgbWVhc3VyZXMgbWFkZSB0byBpbnN1cmUgbWF4aW11bSBzYWZldHkuLiAKSWYgaGUncyBhIDM0IHllYXIgb2xkIG1hbiwgdGhhdCBkb2Vzbid0IHdvcmsuIEFuZCBJIG1hZGUgaGltIGEgY2hpbGQuIApXaGF0J3JlIHRoZSBmdW5kYW1lbnRhbCBEb21pbm9RUSI+RG9taW5vUVEgVGV4YXMgcG9rZXIgcnVsZXMgZW1wbG95ZWQgYnkgdGhlIHByb2Zlc3Npb25hbHMgdG8gcHJvZHVjZSBhIHN0YWJsZSBpbmNvbWUgb25saW5lPyBXZWxsLCB0aGUgZnVuZGFtZW50YWxzIGtleSB0byB5b3VyIHN1Y2Nlc3MgaXMgbGlrZWx5IHRvIGJlIGJhbmtyb2xsIG1hbmFnZW1lbnQuIEp1c3Qgd2hhdCdzIGJhbmtyb2xsIG1hbmFnZW1lbnQ/IEl0IGlzIHRoZSBtZXRob2Qgb2YgbWFuYWdpbmcgeW91ciBiYW5rcm9sbCBhbmQgdHJlYXRpbmcgaXQgcmVhbGx5IGxpa2UgeW91ciBpbmRpdmlkdWFsIGNoaWxkLiAKVG9wIFRlY2ggQXQgQ0VTIDIwMTZDRVMgMjAxNkxBUyBWRUdBUywgTlYgICBKQU5VQVJZIDA3OiBUaGUgR2hvc3QgRmlzaGluZyBNYXN0ZXIgcXVhZGNvcHRlciBkcm9uZSBpcyBkaXNwbGF5ZWQgYXQgdGhlIFRodW5kZXIgVGlnZXIgR3JvdXAgYm9vdGggYXQgQ0VTIDIwMTYgYXQgdGhlIExhcyBWZWdhcyBDb252ZW50aW9uIENlbnRlciBvbiBKYW51YXJ5IDcsIDIwMTYgaW4gTGFzIFZlZ2FzLCBOZXZhZGEuIFRoZSBncmVlbiBjYW1vdWZsYWdlIGJvZHkgZHJvbmUgY29tZXMgZXF1aXBwZWQgd2l0aCBhIHJlbW90ZSBjb250cm9sIGJhaXQgZGVwbG95IHN5c3RlbSBmb3IgZmlzaGluZyBhbmQgdXNlcnMgY2FuIGFsc28gaGFuZyBpdGVtcyBsaWtlIGEgbGlmZSBqYWNrZXQgb3IgY2FudGVlbi4gCk5vdCBteSBkYXkuCkkgZG8gdGhhdCBoZXJlIGluIE1haW5lIGFsbCB0aGUgdGltZSBzbyBubyBwcm9ibGVtISBZb3UgcmlnaHQgYWJvdXQgbXkgc2NoZWR1bGUsIHRob3VnaC4gSSB3aWxsIGdlbmVyYWxseSBiZSB0cnlpbmcgdG8gZ2V0IHRvIHNsZWVwIGJ5IDhQTS4gSXMgdGhlIEZvbHNvbSBsZWFndWUgeW91IHBsYXkgaW4gY29tcGV0aXRpdmUvZG8gdGhleSBoYXZlIGNvbXBldGl0aXZlIGxlYWd1ZXM/VGhhbmtzIGFnYWluLCB5b3VyIHBvc3QgaXMgaW5jcmVkaWJseSBoZWxwZnVsLiAyIHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnb015IHBoaWxvc29waHkgaXMgdGhhdCBieSBzaW1wbHkgam9pbmluZyBhbmQgcGxheWluZyBpbiB0aGUgbGVhZ3VlIGlzIGNvbnNpZGVyZWQgdG8gYmUgY29tcGV0aXRpdmUgKEkgcHJlZmVyIHRvIHBsYXkgY2FzdWFsbHksIHdoaWNoIGlzIHdoeSBJIHRha2luZyBhIGJyZWFrIGFmdGVyIHRoZSBzZWFzb24gaXMgb3ZlcikuIApCb2huZXIsIEcuLCBQaW5hLCBBLiwgVGVuZGF5aSBWaWtpLCBHLiwgU2llYmxlciwgRi4gKDIwMTApLiBVc2luZyBzb2NpYWwgbm9ybXMgdG8gcmVkdWNlIG1lbiByYXBlIHByb2NsaXZpdHk6IFBlcmNlaXZlZCByYXBlIG15dGggYWNjZXB0YW5jZSBvZiBvdXQgZ3JvdXBzIG1heSBiZSBtb3JlIGluZmx1ZW50aWFsIHRoYW4gdGhhdCBvZiBpbiBncm91cHMuIFBzeWNob2xvZ3ksIENyaW1lIExhdywgMTYoOCksIDY3MSA2OTMuCkZvciBpbnN0YW5jZSwgQ3VwaWQgaXMgbWFsZS4gSGUgaXMgYmxpbmQuIApUaGUgZmlyc3QgaXMgdGhlIGRlYWwsIGluIHdoaWNoIGVhY2ggcGxheWVyIGlzIGRlYWx0IHNpeCBjYXJkcyBhbmQgdGhlbiBkaXNjYXJkcyB0d28gaW50byB0aGUgImNyaWIiIChvciAiYm94IiBvciAia2l0dHkiKSB3aGljaCB3aWxsIGNvbWUgYmFjayBpbnRvIHBsYXkgbGF0ZXIuIFRoZW4gcGxheWVycyB0YWtlIHR1cm5zIHBsYXlpbmcgY2FyZHMsIGF0dGVtcHRpbmcgdG8gc2NvcmUgcG9pbnRzIGJ5IHBsYXlpbmcgcGFydGljdWxhciBjb21iaW5hdGlvbnMgYW5kIGFkZGluZyB1cCB0aGUgZmFjZSB2YWx1ZXMgb2YgdGhlIGNhcmRzIChmYWNlIGNhcmRzIGNvdW50IGZvciB0ZW4pLiAKQydlc3QgYXUgcHJlbWllciB0YWdlIHF1ZSBzZSB0cm91dmVudCBsZXMgZmFtZXV4IHNhbG9ucyBwcml2cyBkZSBwb2tlciwgZGFucyB1biBkY29yIGF1eCBsdW1pcmVzIHRhbWlzZXMsIG1vcXVldHRlcyBldCB0b25hbGl0cyBkZSBiZWlnZSBldCBtYXJyb24uIEEgY2Ugc3RhZGUgZGUgbCdlbnF1dGUsIGxlIGNhc2lubyBxdWkgYXR0aXJlIGVuIHNhaXNvbiB1bmUgZm9ydGUgY2xpZW50bGUgZHUgTW95ZW4gT3JpZW50LCByZXN0ZSBvdXZlcnQsIGEgcHJjaXMgbCd0YWJsaXNzZW1lbnQuCkkga2VlcCBzdGF0aW5nIHRoYXQgdGhlIHdheSB0aGUgZ2FtZSBkb2VzIGl0IGlzIHdyb25nLiBJIGhhdmUgbmV2ZXIgc2FpZCB0aGUgd2F5IHRoZXkgcGVyZm9ybSB0aGUgY2FsY3VsYXRpb24gaXMgY29ycmVjdC4gSSBoYXZlIHNhaWQgcmVwZWF0ZWRseSB0aGVpciBtYXRocyBhcmUgd3JvbmcuIEkgYWxzbyByZXBlYXRlZCBleHBsYWluZWQgaG93IHNoaXQgd29ya3MgaW4gcmVhbCBsaWZlIGFuZCBob3cgdGhhdCBpcyBpbiBzdGFyayBvcHBvc2l0aW9uIHRvIGJvdGggaG93IHRoZSBnYW1lIGhhbmRsZXMgbGF5ZXJzIGFuZCBob3cgdGhlIE9QIHRoaW5rIGxheWVycyB3b3JrLgpUaGUgcHJvZHVjdGlvbiBpc3N1ZXMgd2lsbCBiZSBoYW5kbGVkIGJ5IHRoZSBXQiBhZmZpbGlhdGUsIGFuZCBpdCdzIGEgbmF0dXJhbCBwcm9tb3Rpb24gZm9yIHRoZSBzcG9ydHMgYmFyLiAKSGUgdXNlZCBoaXMgaGVhZCB0byBmaXN0IGJ1bXAgYW5kIHdvdWxkIHNpdCBvbiBjb21tYW5kLiAKQW1vbmcgdGhlIG1hbnkgZmlyc3Qgc3RlcHMsIHdlIHdpbGwgcXVpY2tseSBkZXZlbG9wIGEgYmlwYXJ0aXNhbiBjb21taXNzaW9uIHRvIGRlc2lnbiB0aGUgMjUgeWVhciB2aXNpb24sIHRoYXQgYW1vbmcgb3RoZXIgdGhpbmdzLCB3aWxsIGhlbHAgdXMgZm9jdXMgcmVzb3VyY2VzIG9uIHRoZSBtb3N0IGltcG9ydGFudCBwcm9qZWN0cy4KR292ZXJubWVudCBoYXMgZG9uZSB0aGF0LiAKQWxjaGVtaXN0IGlzIGEgc3RvcnksIHdoaWxlIG9mIHRoZSBsaWdodCBpcy4gCkFuZCBub3cgc2hlIGhhcyBoZXIsIGV2ZW4gbW9yZSBzbyBvZiBhIHJlYXNvbiB0byBkaXNtaXNzIGthaXNlciBhbmQgbGV0IERhdmlkIGFidXNlIGhpbS4uIApSZW5mb3JjZW1lbnQgZHUgY2FkcmUgbm9ybWF0aWYgZXQgZHZlbG9wcGVtZW50IGRlcyBtb3llbnMgZGUgY29tbXVuaWNhdGlvbiBldCBkZSBzdG9ja2FnZUlJLiBMZXMgbGltaXRlcyBkZSBsYSBjb29wcmF0aW9uIG1lbmUgZGFucyBsYSBsb2dpcXVlIHRyYWRpdGlvbm5lbGxlIDogb2ZmcmUgaHlwZXJ0cm9waGllIGV0IGluYWRhcHRlLCBqdW5nbGUganVyaWRpcXVlIGV0IG1haW50aWVuIGRlcyBzdHJ1Y3R1cmVzIGF1dG9ub21lcy4xMzYKVGhhdCBhbmQgU2NoaWZmIGp1c3QgaGlyZWQgdGhlIHRvcCBSdXNzaWFuIG1vYiBpbnZlc3RpZ2F0b3IgaW4gdGhlIGNvdW50cnkuIFRoZSB0b3AgcGVvcGxlIGluIHRoZSB3b3JsZCBhcmUgbG9va2luZyBpbnRvIHRoZSBsb3dlc3QgcGVvcGxlIG9mIHRoZSB3b3JsZC4gSGFuZyBvbnRvIHlvdXIgaGF0cwpMaWtlIFggTWVuIDEgSHVnaCBKYWNrbWFuLCBCcmllIExhcnNvbiBpcyBpbiBnb29kIHNoYXBlIGJ1dCBkb2VzbiBsb29rIHBhcnRpY3VsYXJseSBzdHJvbmcgb3IgYXRobGV0aWMuIEZvciB0aGUgcm9sZSBvZiBhIHN1cGVyaGVybywgaXQgbG9va3MgbW9yZSBpbXByZXNzaXZlIHdoZW4gdGhlIHJvbGUgaXMgY2FzdCBieSBzb21lb25lIHdob3NlIHBoeXNpcXVlIGlzIGF0IGxlYXN0IGEgbGl0dGxlIGJpdCBpbXByZXNzaXZlLCBsaWtlIHNvbWVvbmUgd2hvIHJlc2VtYmxlcyBhIFdXRSB3cmVzdGxlciBvciBPbHltcGljIGF0aGxldGUgb3IgTmluamEgV2FycmlvciBjb250ZXN0YW50Li4gCklzIHByb2JhYmx5IHBhcnQgcmVmZXJyaW5nIHRvIGhvdyBoYW5kYmFsbCBpcyBhIHNwb3J0IGZpbGxlZCB3aXRoIGludGVuc2UgYm9keSBjb250YWN0LCBidXQgdGhleSBjaG9zZSB0byB3cml0ZSBwbGF5IGluIGthdGFrYW5hIGFzICwgd2hlcmUgeW91IHVzdWFsbHkgd3JpdGUgIGlmIHlvdSByZWZlcnJpbmcgdG8gaW4gc3BvcnRzICAgIGlzLCBhZ2FpbiwgdXNlZCBvZnRlbiBpbiBmdXV6b2t1IG9yIHNleHVhbCB0YWxrcywgdG8gZGVzY3JpYmUgY2VydGFpbiBzZXh1YWwgcHJhY3RpY2VzLiBJdCBub3QgYSBkaXJlY3QgcmVmZXJlbmNlIHRvIGEgc2V4dWFsIHRlcm0sIGFuZCBJIHNvbWV0aW1lcyBzZWUgcGVvcGxlIHdyaXRpbmcgcGxheSAoYXMgaW4gdGhhdCB3YXMgYSBnb29kIHBsYXkpIGFzICwgYnV0IGl0IGp1c3Qgbm90IGFuIHVzdWFsIG9wdGlvbi4gQW5kIHRoaXMgbWlnaHQgYmUgYSBmYXIgZmV0Y2gsIGJ1dCAga2luZGEgZ2l2ZXMgYSBzZW5zZSBvZiBoYXJkY29yZSBzZXh1YWwgcHJhY3RpY2VzIGxpa2UgQkRTTS4uIAoxNSBNYXIgMjAxOCAuIEJldGEgcGxheWVycyBhbHNvIGRvIG5vdCBoYXZlIGFjY2VzcyB0byBNaW5lY3JhZnQgUmVhbG1zIGFuZCBjYW5ub3QgLiAKIkFyb3VuZCAxOTk0LCBJIHdhbnRlZCB0byB1bmRlcnN0YW5kIHBva2VyIHdpdGggdGhlIGV4YWN0bmVzcyB0aGF0IGEgY2hlc3MgcGxheWVyIHdvdWxkIHdhbnQgdG8gdW5kZXJzdGFuZCBjaGVzcywiIGhlIHNhaWQsIGFkZGluZywgIkluc3RlYWQgb2Ygc3BlbmRpbmcgaG91cnMgYW5kIGhvdXJzIHBsYXlpbmcgYW5kIG5vdGljaW5nIHBhdHRlcm5zLCBJIGNhbiBzdHVkeSBzb21lIG9mIHRoZXNlIHRoaW5ncyBmcm9tIGEgZ2FtZSB0aGVvcnkgc3RhbmRwb2ludC4gSSBkb24ndCBoYXZlIHRvIHRlc3QgdGhlbSBhdCB0aGUgdGFibGUgLiAKSm9fbmF0aGFuICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkhvcGVmdWxseSBJIGNhbiBzYXZlIHlvdSBzb21lIHRpbWUgYnkgZ2l2aW5nIHlvdSBhIGdsaW1wc2Ugb2YgbXkgb3duIHBlcnNvbmFsIGV4cGVyaWVuY2VzIHdpdGggdGhpcyBwb2tlciBjaGlwIHNldC4gRXZlcnkgeWVhciB3ZSBnZXQgaW52aXRlZCB0byBhIGxvY2FsIHRvdXJuYW1lbnQgdGhhdCBpcyBjbG9zZSB0byB0aGUgV1NPUCBhcyB3ZSB3aWxsIGV2ZXIgc2VlLiAKR2VvZHVjayBpcyB0aGUgbGFyZ2VzdCBidXJyb3dpbmcgY2xhbSBpbiB0aGUgd29ybGQgYW5kIGlzIG5hdGl2ZSB0byB0aGUgY29hc3Qgb2YgQnJpdGlzaCBDb2x1bWJpYS4gSXQgaXMgaGlnaCBpbiBwcm90ZWluIGFuZCBpcyBjb25zaWRlcmVkIGEgZGVsaWNhY3kgaW4gSG9uZyBLb25nIGFuZCBDaGluYS4gClRoZSByZWJpcnRoIG9mIElzcmFlbCBvbiBNYXkgMTQgMTk0OCwgYW5kIHRoZSByZSBnYXRoZXJpbmcgb2YgSmV3cyBmcm9tIGFsbCB0aGUgbmF0aW9ucyBvZiB0aGUgZWFydGggaGF2ZSBiZWVuIGZ1bGZpbGxlZCBpbiBvdXIgZ2VuZXJhdGlvbi4gCkFuZCBDdXJ0aXMgc2VlbXMgZmFzY2luYXRlZCBieSB0aGUgdmFyaW91cyBjb2luY2lkZW5jZXMgdGhhdCBrZWVwIGJyaW5naW5nIHRoZW0gdG9nZXRoZXIgKGFsdGhvdWdoIGhpbnRzIGFyZSBkcm9wcGVkIHRoYXQgaGUgbWF5IGhhdmUgbW9yZSBjb25uaXZpbmcgbW90aXZlcykuLiAKMSkgS2VsbHksIGV4IEhlbGx5IG9yIGV4IEhlbGxvIGFjY29yZGluZyB0byBORjogMTI1MCAxNDQ1IChleGNsdWRpbmcgNSBtaW4gYXMgdGlwKSwgMjAwRSwgUm9tLCAxNjVjbSwgbG9uZyBkYXJrIGJsb25kZSwgcHJldHR5LCBzbGltIGV4Y2VwdCBoZXIgU2kgcmFjaywgMyB5ZWFycyBhdCBTaGFya3Mgd2l0aCBpbnRlcnZhbCwganVzdCBhcnJpdmVkIGFmdGVyIGhlciB0d28gbW9udGggcmVzdCBhdCBob21lLiBJbiBhIHJvb20gREZLLCBoYWxsbyBCSiwgMzAgbWluIERBVFkgd2l0aCBoZXIgaW50ZW5zZSBPLCBtaXNzaW9uYXJ5LCBjb3cgZ2lybCwgZG9nZ2llLCBtaXNzaW9uYXJ5LCBEQVRZLCBjb2NhIGNvbGEgcmVzdCwgQkosIDY5LCAxNW1pbiBEQVRZIHdpdGggaGVyIHNlY29uZCBpbnRlbnNlIE8gYW5kIG15IDIwIG1pbiBtYXNzYWdlIG9uIGhlciB3ZXJlIHdoYXQgd2UgZW5qb3llZC4gTXVzdCByZXBlYXQuLiAKV2l0aCAyNiBnYW1lcywgMTIzIHRhYmxlcywgODUwIGdhbWluZyBwb3NpdGlvbnMsIDI0eDcgb3BlcmF0aW9ucywgbHV4dXJpb3VzIHNlcnZpY2VzIGFuZCBzdWl0ZXMsIGV4b3RpYyBsaXZlIGFjdHMsIGRyaW5rcyBhbmQgd29ybGQgY3Vpc2luZSBjdXJyZW50bHkgR29hIG1vc3QgaGFwcGVuaW5nIGNhc2luby4gClRoZSBzY2hub29kbGUgY2FuIGdldCBhZ2dyZXNzaXZlIHRvd2FyZHMgc3RyYW5nZXJzIGFuZCBvdGhlciBkb2dzIHNvIG1ha2Ugc3VyZSB0aGF0IHlvdSB0cmFpbiBpdCB0byBzb2NpYWxpemUgcHJvcGVybHkuClRhZ2FsYWxhbmcgcmljZSB0ZXJyYWNlOiBHbyB0aGVyZSBmb3Igc3VucmlzZSBhcm91bmQgNmFtLiBXYXJ1bmcgSGFuYSAgIGFub3RoZXIgZ3JlYXQgbG9jYWwgcGxhY2Ugd2l0aCBncmVhdCBmb29kIGFuZCBjaGVhcCBwcmljZXMgKCBJIHJlY29tbWVuZCBCaWh1biBHb3JlbmcgYW5kIEF5YW0gS2VsYXBhICkuIEZvciBtZWRpdW0gcHJpY2UgcGxhY2UgSSByZWNvbW1lbmQgQ2xlYXIgQ2FmZS4gQmVhdXRpZnVsIHBsYWNlLCB2ZXJ5IGdvb2QgZm9vZCBhbmQgcHJpY2VzIGFyZSBzdGlsbCBncmVhdCBmb3Igd2hhdCB5b3UgZ2V0LgpNb3N0IG90aGVycyBJIHNlZSBhcmUgdXNpbmcgZmFjZXMgMSBvciAzLCB3aXRoIHRoZSByYW0gb3IgY3JhYiBjbGF3IGxvb2tpbmcgaG9ybnMuIEkgYWN0dWFsbHkgc2VlbiAxIHBlcnNvbiB1c2luZyBmYWNlIDQsIHRoZSBlbGRlcmx5IGxvb2tpbmcgZmFjZS4uIApUaGUgTWl0Y2hlbGwgVHJ1Ymlza3kgdHJhaW4gaXMgbm90IGFuIGV4cHJlc3MuIE5ldyBjb2FjaCBNYXR0IE5hZ3kgd2lsbCBicmluZyBtdWNoIG5lZWRlZCBjcmVhdGl2aXR5IGFuZCBleHBsb3NpdmVuZXNzIHRvIHRoZSBvZmZlbnNlIHdpdGggaW1wcm92ZWQgc2tpbGwgcGxheWVycywgYnV0IHRoZSBzZWNvbmQgeWVhciBRQiBpcyBib3VuZCB0byBoYXZlIGEgbGltaXRlZCBjZWlsaW5nIGluIGhpcyBmaXJzdCB5ZWFyIHVuZGVyIHRoZSBjb2FjaC4gVGhlIGRlZmVuc2UgaXMgZ29vZCBlbm91Z2ggZm9yIGEgYnVtcCBpbiB0aGUgdG91Z2ggTkZDIE5vcnRoLi4gCkluIHRoZSBVUywgaXQgcmF0aGVyIGNvbW1vbiBmb3IgYSBkaW5uZXIgZm9yIHR3byB0byBiZSAkNDUgNTAgaW4gYSBzaXQgZG93biByZXN0YXVyYW50LCB5b3UgYXJlIHRoZW4gZXhwZWN0ZWQgdG8gdGlwIGF0IGxlYXN0IDE1JSBmb3IgbWVkaW9jcmUgc2VydmljZSwgMjAlIGlmIHlvdSBkb24gd2FuIHRvIGFwcGVhciBjaGVhcC4gCldoZW4gd2Ugc3RhcnRlZCBhIG5ldyBmb2xkZXIsIHdlIGZpcnN0IGNvcGllZCBhIGJsYW5rIHNoZWV0IHRoYXQgaGFkIGEgYmlnIFggbWFya2VkIGFjcm9zcyBpdC4uIApabGF0YW4sIGZyb20gdGhlIGlzbGFuZCBvZiBIdmFyLCBpcyBhIGdvb2QgUGxhdmFjIHByb2R1Y2VyIHRoYXQgeW91IHNob3VsZCBiZSBhYmxlIHRvIGZpbmQgbW9zdCBwbGFjZXMsIGFzIGFyZSBTa2FyYW11Y2EgYW5kIEJ1cmEgZnJvbSB0aGUgRGFsbWF0aWFuIGNvYXN0LiBUaGUgYmVzdCBQbGF2YWMgTWFsaSBhcHBlbGxhdGlvbnMgYXJlIERpbmdhYyBvciBQb3N0dXAsIHNvIHdoZW4gaW4gZG91YnQgbG9vayBmb3IgZWl0aGVyIG9uZSBhbmQgeW91ciBjaGFuY2VzIGFyZSBiZXR0ZXIuIEFsc28sIGlmIHlvdSBoYXZlIGEgY2hhbmNlIHRvIGdvIHRvIERpbmdhYyB5b3UgYWJzb2x1dGVseSBoYXZlIHRvLiAKQ2FuYWRpYW4gYnVzaW5lc3MgaXMgb24gZmlyZSwgdGhlIGNvbXBhbnkgY2hpZWYgZXhlY3V0aXZlIERhbmllbCBCaXJuYmF1bSB0b2xkIHRoZSBGaW5hbmNpYWwgUG9zdCB0aGlzIHdlZWssIGFoZWFkIG9mIGEgVHVlc2RheSByaWJib24gY3V0dGluZyBjZXJlbW9ueSBhdCB0aGUgY29tcGFueSBuZXcgcHJvZHVjdGlvbiBmYWNpbGl0eSBpbiBNaXNzaXNzYXVnYSwgaXRzIGZpcnN0IGluIENhbmFkYS4KT2theSwgZ2xhZCBpdCB3b3JrcyBvdXQgZm9yIHlvdS4gCldoYXQga2luZCBvZiBzYXVjZSBpcyB0aGlzPyB7c3BpdHMgb3V0IHBpZWNlcyBvbnRvIHRoZSBwbGF0ZSBhbmQgbWFrZXMgcmV0Y2hpbmcgbm9pc2VzfSBUYWtlIHRoaXMgYmFjayB0byBoaW0gYW5kIHRlbGwgaGltIHRvIGVhdCBhIHBpZWNlIGFuZCBsb29rIHlvdSBpbiB0aGUgZXllIGFuZCBzYXkgaXQgdGhlIGJlc3QgcGl6emEgaGUgZXZlciBoYWQuIi4gCkRpcmVjdGVkIFF1ZXN0aW9uLiAKRmlyc3QgYW5kIGZvcmVtb3N0LCB5b3Ugd2lsbCBnYWluIGNvbmZpZGVuY2UuIFlvdSBhcmUgYSB3b21hbiwgYW5kIHRoaXMgaXMgYSBtYWxlIGRvbWluYXRlZCBnYW1lLiAKSGlqIGtlbnQgZGUgZ3JlbnplbiB2YW4gemlqbiBjb21wZXRlbnRpZXMgZW4gaGFuZGVsdCBkYWFyYmlubmVuIG9mIHNjaGFrZWx0IGFuZGVyZSBkZXNrdW5kaWdlbiBpbi4gSGlqIHN0ZWx0IHppY2ggdG9ldHNiYWFyIG9wLiAKVGhlIENXIGFzcGVjdCBnZW5lcmFsbHkgY29tZXMgaW4gZnJvbSBub3RpY2luZyAiZXBpc29kaWMiIHR5cGVzIGFuZCBhc3N1bWluZyB0aGlzIGlzIGEgZnVuY3Rpb24gb2Yge291dGdyb3VwfSwgcmF0aGVyIHRoYW4gYSBub3JtYWwgaHVtYW4gY29uZGl0aW9uLiAKT2YgZXF1aXBtZW50IGhhcyBiZWVuIHJlbW92ZWQgZnJvbSB0aGUgcG9vbCBhbHJlYWR5LiAKU29tZXRoaW5nIGZpbGxlZCBteSBoZWFydCwgc29tZXRoaW5nIHRoYXQgaGFkIGJlZW4gdGhlcmUsIHJpZ2h0IG5leHQgdG8gdGhlIHJhZ2UsIGV2ZXIgc2luY2UgdGhlIGRheSB0aGF0IEkgd2Fsa2VkIGluc2lkZSBvZiB0aGUgR3VpbGQgSGFsbC4gCldvcnJpZWQgYWJvdXQgdGhlIEF1c3RyYWxpYW4gQUFCaWxsLCBmb3IgZXhhbXBsZT8gVGhlIFVTIGFscmVhZHkgYmVhdCB1cyB0byB0aGUgZmluaXNoIGxpbmUgd2l0aCBOYXRpb25hbCBTZWN1cml0eSBMZXR0ZXJzLCB3aGljaCBhbHNvIGhhdmUgdGhlICJpdCBpbGxlZ2FsIHRvIHRlbGwgYW55b25lIHlvdSBnb3QgdGhpcyIgcHJvdmlzaW9uIGluIHRoZW0uLiAKUmVzcGVjdGZ1bGx5LCBJIGFsc28gZGlkIG5vdCBtaXNzIHRoZSBmYWN0IHRoYXQgYSBzdGF0ZW1lbnQgaXRzZWxmIGlzIGV2aWRlbmNlLiAKKGNhbiBvbmx5IHBpY2sgb25lIHBpZWNlIG9mIGFybW9yIHRvIGd1YXJkIGl0IHdoaWxlIG90aGVycyBkb24gaGVscCkgV2hlcmVhcyB0aGUgc3RvbWFjaCBhbmQgY2hlc3QgY2FuIGJlIGd1YXJkZWQgYnkgbXVsdGlwbGUgcGllY2VzIG9mIGFybW9yIGFuZCBtdWx0aXBsZSBsaW5lcyBvZiBkZWZlbnNlLCB0aGUgaGVhZCB0eXBpY2FsbHkgb25seSBnZXRzIG9uZS4gT25lIGNvbmNsdXNpb24gZnJvbSB0aGlzIGFyZSB0aGF0IHBpZWNlcyBvZiBhcm1vciBzdWNoIGFzIHRoZSBEdXN0Y29hdCBvciBOaW5qYSBSYWdzIGNvdWxkIGdhaW4gdmFsdWUgaWYgdGhleSBtYWtlIGl0IG1vcmUgbGlrZWx5IGZvciB0aGUgcGxheWVyIHRvIGNvbGxhcHNlIGR1ZSB0byBzdG9tYWNoIGRhbWFnZSBpbiBleGNoYW5nZSBmb3IgZGltaW5pc2hpbmcgZGFtYWdlIHRvIHRoZSBoZWFkLCBhcyBjaGFuZ2luZyB0aGUgdmFsdWVzIHNvIHRoYXQgeW91IGNhbiB0YWtlIDEwIGhpdHMgdG8gdGhlIGhlYWQgYW5kIDEwIHRvIHRoZSBjaGVzdCBtaWdodCBiZSBzdXBlcmlvciB0byBiZWluZyBhYmxlIHRvIHRha2UgMjAgaGl0cyB0byB0aGUgY2hlc3QgYW5kIDYgdG8gdGhlIGhlYWQuIApZb3UgaGF2ZSBhIGxvdCB0byBvZmZlciwganVzdCBieSBiZWluZyB3aG8geW91IGFyZS4gTGl2ZSBpbiB5b3VyIHRydXRoLiBQZWFjZS4uIApOaWNrZWw6IEZpdmUgeWVhcnMgaW4gcHJpc29uLCBhIGJhZGdlIG9mIGhvbm9yIGFuZCBjb21tb25seSB1c2VkIGFtb25nIGdhbmdzLiAiQXZlcmFnZSBkcnVnIGRlYWxlcnMgZG8gc2l4IG1vbnRocyB0byB0d28geWVhcnMsIHNvIGlmIHlvdSdyZSBpbiBmb3IgZml2ZSwgdGhlcmUncyBhIGNoYW5jZSB5b3UgZGlkIGEgbXVyZGVyIG9yIGEgbWFqb3IgZHJ1ZyBjYXNlLCIgc2F5cyBTYXZlbGxpLgpJbiBhIGJhY2sgc3RpdGNoIGluY3JlYXNlIGJ5IHBpY2tpbmcgdXAgdGhlIHRoZSBsb29wIGJldHdlZW4gdGhlIHNlY29uZCBhbmQgdGhpcmQgc3RpdGNoIGFuZCBwdXJsIGluIGJhY2sgb2YgdGhpcyBsb29wLi4gCkl0IG5vdCBzcGVjaWZpY2FsbHkgaGltLCBJIGFtIHRhbGtpbmcgaW4gZ2VuZXJhbC4gSnVzdCBsb29rIGF0IHhRYyBmcm9tIE9XLiBIZSBpcyBhIHRveGljIHBlcnNvbiwgYW5kIGhlIGFjdHVhbGx5IHdlbnQgcHJvLiBJZiB5b3UgYXJlIG5vdCBhIHRyYXNoIHBlcnNvbiB5b3UgcmVhbGl6ZSB0aGUgaW5mbHVlbmNlIHlvdSBoYXZlIG92ZXIgeW91ciB2aWV3ZXJzIGFuZCB5b3UgYWN0IGFjY29yZGluZ2x5LgpJIGFsd2F5cyByZXNwZWN0ZWQgaGlzIG9waW5pb25zIGJlY2F1c2UgaGUgYmVlbiBpbiB0aGUgYnVzaW5lc3MgYSB3aGlsZSBidXQgdGhhdCB3aGF0IG1ha2VzIHRoaXMgZXZlbiBtb3JlIHN0cmFuZ2UgdG8gbWUuIApBcyBwYXJ0IG9mIHRoZSBJbm5vdmF0aW9uIE5hdGlvbiBzZXJpZXMsIHRoZSBGaW5hbmNpYWwgUG9zdCBpcyB0YWtpbmcgYW4gaW4gZGVwdGggbG9vayBhdCBlYWNoIG9mIHRoZSBmaXZlIHJlZ2lvbmFsIHByb2plY3RzLCBhbmQgcHJvdmlkZSBjb250aW51aW5nIGNvdmVyYWdlIG9mIHRoZWlyIHByb2dyZXNzLiBZb3UgY2FuIGZpbmQgYWxsIG9mIG91ciBjb3ZlcmFnZSBoZXJlLi4gClRoZSBzdGFrZXMgYXJlIGJpZywgYnV0IG5vdCBhcyBiaWcgYXMgdGhlIFNlbmF0b3JzIGdyaWxsaW5nIFNvdG9tYXlvciBvciB0aGUgYWNhZGVtaWNzIHNsdWdnaW5nIGl0IG91dCBpbiBhcnRpY2xlcyBhbmQgbGVjdHVyZXMgYmVsaWV2ZS4gVGhlIHByb2JsZW0gd2l0aCB0aGVzZSBsaWZlIG9yIGRlYXRoIGZpZ2h0cyBvdmVyIHdoZXRoZXIgb2JqZWN0aXZpdHkgaXMgcG9zc2libGUgaXMgdGhleSBub3QgcmVhbGx5IGxpZmUgYW5kIGRlYXRoIGF0IGFsbC4gSW4gdGhlIGVuZCwgYW4gZXBpc3RlbW9sb2d5IG9mIG9iamVjdGl2aXR5IHR1cm5zIG91dCB0byBiZSBhIHN0YW5kcG9pbnQgZXBpc3RlbW9sb2d5LiAKTGVhcm4gaG93IHRvIHN3aXRjaCBnZWFycyBpbiB0b3VybmFtZW50cy4gSXQncyBiZXR0ZXIgdG93aW4gYSBidW5jaCBvZiBzbWFsbCBwdW5jaCBvZiBzbWFsbCBwb3RzIHRoYW4gdG8gbG9zZSBhIGZldyBiaWdvbmVzLiAKTm8gZGVwaWN0aW9ucyBvZiByZWFsIGxpZmUgaGFyYXNzbWVudCBvciBhc3NhdWx0LiBUaGVyZSBhcmUgb3RoZXIgc3VicmVkZGl0cyBkZWRpY2F0ZWQgdG8gdGhpcyBraW5kIG9mIGNvbnRlbnQuCldlIGJlbGlldmUgdGhhdCB0aGUgRWFydGggaGFzIGJsZXNzZWQgdXMgd2l0aCBhbGwgb2YgdGhlIGdpZnRzIGFuZCByZXNvdXJjZXMgd2UgbmVlZCBmb3IgdGhlIGhlYWxpbmcgYW5kIHRocml2aW5nIG9mIGFsbCBsaWZlLCBhbmQgaXQgaXMgb3VyIGRpdmluZSByZXNwb25zaWJpbGl0eSB0byBjYXJlIGZvciB0aGUgZWFydGggYW5kIHJlc3RvcmUgaGVyIHNhY3JlZCBwdXJwb3NlIG9mIG51cnR1cmluZyBsaWZlLCBmb3Igbm93IGFuZCBmdXR1cmUgZ2VuZXJhdGlvbnMuCkJ1aWxkaW5nIHJvdXRpbmVzIGFyb3VuZCBoZXIgdGhyZWUgdG9wIHRvb2xzIGJhbmRzLCBhIHN0ZXAgYW5kIGEgYm9zdSBiYWxsIGRvIGEgbG90IG9mIHNxdWF0IGFuZCBsdW5nZSB2YXJpYXRpb25zLCIgTGVlIHRlbGxzIEUhIE5ld3MuICJXZSBkbyBhIGxvdCBvZiBzaWRlIHdhbGtpbmcgc3F1YXRzIHdpdGggdGhlIHJlc2lzdGFuY2UgYmFuZCwgd2UgZG8gYSBsb3Qgb2Ygc3RlcCB1cCBjb21iaW5hdGlvbnMgd2l0aCB0aGUgc3RlcHMsIHdlIGRvIGEgbG90IG9mIGp1bXBpbmcgc3F1YXQgY29tYmluYXRpb25zIHdpdGggdGhlIEJvc3UgYmFsbC4gV2UgZG8gYSBsb3Qgb2YgbGVnIGxpZnQgZG9ua2V5IGtpY2tzIGEgbGl0dGxlIGJpdCBvZiBldmVyeXRoaW5nLiIKRnVsbCBUaWx0IGpldHp0IGVyc3QgZWlubWFsIGdlZmFsbGVuLiAKRXZlbiBwbGFjZXMgd2hlcmUgeW91IGNhbiBnbyB0byByZWFkIG1vcmUgbGVnaXQgbWFuZ2EgbGlrZSBkeW5hc3R5IHNjYW5zIG9yIG1hbmdhIGRleCBoYXZlIHRoaXMgcG9ybm9ncmFwaHkgb2YgcHJlcHViZXNjZW50IGNoaWxkcmVuIG9uIGl0LiBZb3UgY2FuIGZpbHRlciBpdCBvdXQgYW5kIGRvIHlvdXIgYmVzdCB0byBpZ25vcmUgaXQsIGJ1dCBpdCBzdGlsbCB0aGVyZS4gCjE5ODMpKSkgSG93ZXZlciwgdGhpcyBpbmZvcm1hdGlvbiBpcyBmcm9tIDE5ODMhIGFuZCB3aGlsZSBpdCBpcyBoaWdobHkgY2l0ZWQvcmVmZXJlbmNlZCB0aGlzIGluZm9ybWF0aW9uIGlzIGRhdGVkIGFuZCBtYXkgbm90IGJlIHRoZSBzYW1lIGluIHlvdXIgY2FzZS4gClN0aWxsLCBJIGFza2VkIFNwcmludCB0byBsb29rIGludG8gdGhpcyBhbmQgY29uc2lkZXIgaXNzdWluZyBhIHJlZnVuZC4gQXMgeW91IGtub3csIGEgdHdvIG1vbnRoIGdvb2R3aWxsIHJlZnVuZCBvZiAkMTYgaXMgZmFyIGFzIHRoZXkgd291bGQgZ28uIFNwcmludCBzcG9rZXNtYW4gTWFyayBFbGxpb3R0IHNhaWQgd2hpbGUgaGUgY2Fubm90IGRpc2N1c3MgYSBzcGVjaWZpYyBjdXN0b21lcidzIGFjY291bnQsIGhlIGRpZCBzYXkgdGhlIGNvbXBhbnkgdHJpZXMgdG8gYmUgdHJhbnNwYXJlbnQgZHVyaW5nIHRoZSBzaWduIHVwIHByb2Nlc3MuCkxpa2UgZXZlcnkgaW5kdXN0cnksIHN0YXJ0IGF0IHRoZSBib3R0b20gbGVhcm4gdGhlIHRyYWRlLCB3b3JrIGhhcmQsIG1vdmUgdXAuIEl0IHNvdW5kcyBsaWtlIHlvdSBob3BlZnVsbHkgaGF2ZSB5b3VyIHNvYnJpZXR5IHVuZGVyIGNvbnRyb2wgYW5kIGNhbiBoYW5kbGUgdGhlIGVudmlyb25tZW50LiBCdXQgZG8gdHJ5IHRvIHNlZSB0aGluZ3MgZnJvbSBoZXIgcGVyc3BlY3RpdmUuIAoiWW91IGhhdmUgdG8gcGxheSB5b3VyIGJlc3QgbGV2ZWwgYmVjYXVzZSBldmVyeWJvZHkgaXMgdmVyeSBzdHJvbmcgcGxheWluZyBoZXJlLiIKRm9yIHRoZSBmb3VydGggeWVhciBpbiBhIHJvdywgQWQgQWdlIGhhcyBtYW5hZ2VkIHRvIHByb2N1cmUgdGhlIGZpcnN0IGJhdGNoIG9mIGNvbW1lcmNpYWwgZGVsaXZlcmllcyBmb3IgdGhlIG5ldyBicm9hZGNhc3Qgc2Vhc29uLCBhbmQgd2hpbGUgdGhlIG5ldHdvcmtzIHdvdWxkIHByZWZlciB0byBrZWVwIHRoYXQgZGF0YSB1bmRlciB3cmFwcywgdGhlIHRyYW5zYWN0aW9uYWwgQzMvQzcgcmF0aW5ncyBhcmUgdGhlIG9ubHkgcmVsZXZhbnQgYmVuY2htYXJrIGZvciBhZHZlcnRpc2Vycy4gClNvdWwgbWFuIEkgc3RhcnRlZCBwbGF5aW5nIHRoZSBndWl0YXIgYXQgc2Nob29sIGFuZCB0aGF0IHdoZW4gdGhlIGdpcmxzIGZpcnN0IHN0YXJ0ZWQgcnVubmluZyBhZnRlciBtZS4gCklmIHlvdSBkb24gd2FudCB0byBicmFuY2ggb3V0IGludG8gYW4gSUcgbG95YWwgMzIgKEkgZG9uIGFuZCBuZXZlciB3aWxsKSwgdGhlbiAxMCAxNSBzY291dHMgaXMgYSBnb29kIGlkZWEuIFNuaXBlciBzY291dHMgYXJlIGEgbG90IGNoZWFwZXIgYWZ0ZXIgQ0EuIEludGVyY2Vzc29ycyBhcmUgYWxzbyBnb29kIGZvciBkdXJhYmxlIG9iamVjdGl2ZSBodW1wZXJzLiAKTm8gc3VycHJpc2UsIHNpbmNlIERvdWcgZXhjZWxsZWQgYXQgYW55dGhpbmcgaGUgc2V0IGhpcyBtaW5kIHRvIGRvLCBoZSB3YXMgYSB2ZXJ5IGdvb2QgZGFuY2VyISBEb3VnIGxvdmVkIHNwZW5kaW5nIHN1bW1lcnMgYXQgaGlzIGNvdHRhZ2Ugb24gTGFrZSBTY3Vnb2cgZW5qb3lpbmcgZmFtaWx5LCBmcmllbmRzLCBhbmQgdGhlIG91dGRvb3JzLiBIZSBoYWQgc28gbWFueSBmb25kIG1lbW9yaWVzIGZyb20gdGhhdCB0aW1lIGluIGhpcyBsaWZlLiAKQnV0IGl0IHN1cmUgYXMgc2hpdCBpcyBnb25uYSBtYWtlIHlvdSBmZWVsIHdheSBiZXR0ZXIgYWJvdXQgeW91cnNlbGYuIE15IHBhcnRuZXIgY2hpcHMgYXdheSBhdCBteSBjb25maWRlbmNlLCBwdXR0aW5nIG1lIGRvd24gYW5kIGNvcnJlY3RpbmcgbXkgc2xpZ2h0ZXN0IG1pc3Rha2VzLiBPdGhlciB0aGFuIGEgZmV3IG1pbm9yIGlzc3VlcywgeW91IHNlZW0gdG8gaGF2ZSBhIHZlcnkgbmljZSBsb3Zlci4uIApUaGVyZSBhcmUgdG9vIG1hbnkgdW5rbm93bnMsIGJ1dCBJIGNhbiB0ZWxsIHJpZ2h0IG9mZiBmcm9tIHlvdXIgY29tcGxhaW50cyB0aGF0IHlvdSBmZWVsIHZlcnkgZW50aXRsZWQgdG8gY29udHJvbCB5b3VyIGRhdWdodGVyIHBlcnNvbmFsIGxpZmUgY2hvaWNlcy4gClNvIG15IG9sZGVyIGJyb3RoZXIgaGFzIGEgZnJpZW5kIHRoYXQgd2UgZ3JldyB1cC4gSGUgbWFkZSBhIHNoaXQgbG9hZCBvZiBtb25leSBwcmUgYmxhY2sgRnJpZGF5IGFuZCBlbmRlZCB1cCBzdGFydGluZyBhIGxvY2FsIGJ1c2luZXNzIHRoYXQgdG9vayBvZmYuIApPdmVyYWxsIEkgbGlrZSBpdCBidXQgaXQgbm90IG15IGZhdm9yaXRlIHBsYWNlIGluIHRvd24uIApQQ1BhcnRQaWNrZXIgcGFydCBsaXN0IC8gUHJpY2UgYnJlYWtkb3duIGJ5IG1lcmNoYW50CkZvciB3aGF0ZXZlciByZWFzb24sIEkgdGhvdWdodCBJIHRha2UgYSBzY29vcCBvZiBKYWNrM2QgYmVmb3JlIG15IHJ1bi4gClN0dWRlbnRId2FsZSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpJbiBkZW4gZXJzdGVuIGFjaHQgTW9uYXRlbiBkZXMgSmFocmVzIHN0aWVnIGRpZSBaYWhsIGRlciBiZXJuYWNodHVuZ2VuIHVtIGRyZWkgUHJvemVudC4gCkFydGljbGVzIG11c3QgYmUgd3JpdHRlbiBpbiBFbmdsaXNoCkkgaGF2ZSBhIDYgeXIgb2xkIGFuZCBkZXZlbG9wZWQgYWJvdXQgMi41IHlycyBhZ28uIApZb3UgY2FuIG1lYWwgcHJlcCBhIHBvdCBvZiBzb3VwIG9yIGNoaWxpIGZvciBtaW5pbWFsIGVmZm9ydCB0byBtYWtlIHN1cmUgeW91IGhhdmUgYSBob3QgYW5kIGhlYWx0aHkgZm9vZCBvcHRpb24gYWxsIHRoZSB0aW1lLiAKSSBhdm9pZCBpdCBhcyBoYXJkIGFzIGkgY2FuLCBiZWNhdXNlIGkgYW0gMTAwJSBzdXJlIHRoYXQgaSB3b3VsZCBmdWNraW5nIGxvdmUgdGhhdCBzaGl0Lkkgbm90IG9waWF0ZSBuYWl2ZSBhdCBhbGwsIGJ1dCBpIG1hbmFnZWQgbm90IHRvIGVuZCB1cCB3aXRoIGFuIGFkZGljdGlvbiBvciBkZXBlbmRlbmN5ICh5ZXQsIGkgZ3Vlc3MpLiAKR2liYnkyNTYgIDE1IHBvaW50cyAgc3VibWl0dGVkIDMgeWVhcnMgYWdvCklmIHlvdSB3YW50IHRvIG1ha2UgeW91ciBuZXcgaG9iYnkgb3V0IG9mIGdhbWJsaW5nLCB0aGVuIHRoaXMgaXMgdGhlIHJpZ2h0IGFydGljbGUgZm9yIHlvdS4uIApTaSBhdWN1bmUgaW5mb3JtYXRpb24gbidlc3QgZG9ubmUgcXVhbnQgIGxhIGRjaXNpb24gZGVzIHByZW1pZXJzIGp1Z2VzLCBsZXMgcG91eCBzb250IGRib3V0cyBwYXIgbGEgQ291ciBkJ2FwcGVsIGRlIEJvcmRlYXV4LiAKSWVzZSBsYXd5ZXIgdG9sZCB0aGUgY291cnQgaGUgYmVsaWV2ZWQgaGUgd2FzIGFib3V0IHRvIGJlIGF0dGFja2VkLgpPbiBhbiBpbmRpdmlkdWFsIGxldmVsIGl0IGh1cnRzIG5vYm9keSBleGNlcHQgdGhlIG9iZXNlIHBlb3BsZS4gVGhlcmUgYXJlIHBlb3BsZSB0aGF0IG1ha2UgaXQgZGlmZmljdWx0IHRvIGFjY2VwdCBmYXQgcGVvcGxlIGJ1dCB0aGVpciBiZWhhdmlvcnMgYXJlIHRoZWlyIG93biBhbmQgbm90IGR1ZSB0byBib2R5IHdlaWdodC4KTm90IGltbWVkaWF0ZWx5LiBOb3QgbGlrZSBtYWdpYy4gCllPR0EgTUVESVRBWklPTkUKSXQgbWlnaHQgYmUgd29ydGh3aGlsZSBmb3IgYWxsIHRob3NlIHdobyBzeW1wYXRoaXplIHdpdGggdGhlIG9jY3VwaWVycyBvZiBadWNjb3R0aSBQYXJrIGFuZCBvdGhlciBwbGF6YXMgYW5kIHNxdWFyZXMgYXJvdW5kIHRoZSBjb3VudHJ5IHRvIGxlYXJuIGZyb20gdGhlIGV4YW1wbGUgb2YgdGhlIENocmlzdG1hcyBTZWFscyBjYW1wYWlnbi4gV2UgaGF2ZSBubyBzaG9ydGFnZSBvZiB1cmdlbnQgY2F1c2VzIHRoYXQgd2lsbCBiZW5lZml0IGZyb20gdGhlIGVuZXJneSBvZiB0aGUgZ3Jhc3Mgcm9vdHMuIApCdXQgdGhlIHF1ZWVycyBhcmUgc3RpbGwgb3V0IHRoZXJlICBtYWtpbmcgY29ubmVjdGlvbnMgYmV0d2VlbiBob21vcGhvYmlhIGFuZCBwYXRyaWFyY2h5IGFuZCByYWNpc20gYW5kIGNhcGl0YWxpc20uIFRoZXkgc3RpbGwgdGhpbmsgdGhhdCBsaWJlcmF0aW9uIGlzIG5vdCBzZXJ2aW5nIGluIGFuIGltcGVyaWFsaXN0IGFybXkgbm9yIHRoZSBtaW1pY3J5IG9mIHRoZSBoZXRlcm9zZXh1YWwgYm91cmdlb2lzaWUgaW4gbWFycmlhZ2UuCkkgbWFuYWdlZCB0byBnZXQgYXJvdW5kIExlaC9MYWRha2ggcXVpdGUgYSBiaXQgdG8gdmlzaXQgdmFyaW91cyBtb25hc3Rlcmllcy4gClllYWgsIEkgbXlzZWxmIGhhdmUgaGFkIHRoaXMgZXhwZXJpZW5jZS4gCkhlcmUgaXQgaXMuIFRob3NlIGNvdW50cmllcyBwYXkgdGhlaXIgd29ya2VycyBhIGRvbGxhciBhIHdlZWsgYW5kIGZvcmNlIHRoZW0gdG8gbGl2ZSBhdCB0aGUgam9iIHRvIG1ha2UgbW9uZXkuIAowMDozNiAuIFtEb3dubG9hZF0gUG9seWV1Y3RlOiAxODg3IFZlcnNpb24gQ2hhcmxlcyBHb3Vub2QgRnVsbCBCb29rLiAKTm93IGltYWdpbmUgYWxsIG5ldyB0b29ucyB3ZXJlIGxpa2UgdGhlbS4gWW91IHdvdWxkIGhhdmUgbm8gaW50ZXJlc3QgaW4gdGhlbSBhbmQgeW91IHdvdWxkIGhhdmUgbm90aGluZyB0byBkby4gCkplIHZvaXMgZGVzIGpldW5lcyBxdWkgcG91cnJhaWVudCBwb3NlciBwb3VyIGRlcyBncmF2dXJlcyBkZSBtb2RlIG1haXMgcXVpIGVuIGZhaXQgZGUgcGFydGVuYWlyZXMgcmVzdGVudCBzdXIgbGUgY2FycmVhdSBjYXIgbGVzIGZlbW1lcyBuZSBtaXNlbnQgZW4gZ25yYWwgcXVlIHN1ciBkZXMgbWVjcyBheWFudCBkdSBycG9uZGFudCBtYXRyaWVsbGVtZW50LiAKV2hhdGV2ZXIgeW91IGRlc2NyaWJpbmcgaXNuIHVuaXZlcnNhbGx5IGFjY2VwdGVkIGJ5IG1lbi5NaWxsZW5uaXVtR3JlZWQgIDgyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvV2VsbCBzYWlkLiAKVmlyZ28gU3RhbmRvdXQgVHJhaXRzOiBUaGVpciBBdHRlbnRpb24gdG8gRGV0YWlsIFBva2VyIEZhY2UKT3IgcmF0aGVyLCB0aGV5IHRlbGwgbWUgdG8gZ2l2ZSB0aGVtIGEgYmFkIHJldmlldyBhbmQgYSBiYWQgdGlwIGJlY2F1c2UgdGhleSBkb24gdW5kZXJzdGFuZCBob3cgVWJlciB3b3Jrcy4gCkFuc2xpbmdlcnMgY3J1c2FkZSBhZ2FpbnN0IHRoZSBkcnVnIHRoYXQgdGhlIHdvcmQgY2FtZSBpbnRvIHBvcHVsYXIgdXNhZ2UuIAozOHlvIGFuZCBteSBiYWNrIGlzIGdldHRpbmcgYWNoZXkgYWZ0ZXIgc3F1YXRzIGFuZCBkZWFkbGlmdHMuIHRvIHRoZSBwb2ludCB3aGVyZSBhIHdlZWsgcG9zdCBzcXVhdHMgYW5kIGltIHN0cnVnZ2xpbmcgdG8gYmFyYmVsbCByb3cgd2l0aCBqdXN0IHRoZSBiYXIuIEl0cyBwYWluZnVsLgpUaGF0IHJpZ2h0LCBzb21lIHNlcmlvdXNseSBob3QgYm95IHNvbGRpZXJzIHRvb2sgc29tZSB0aW1lIHRvIGhhdmUgc29tZSBmdW4gYmVpbmcgc3VwZXIgZ2F5IHdpdGggS2UkaGEgIkJsYWggQmxhaCBCbGFoLiIgdmlkZW8gaXMgZnVubnksIGJ1dCBpdCBhbHNvIGtpbmRhIHNlcmlvdXMgYmVjYXVzZSB0aGUgc29sZGllcnMgY2hvc2UgdGhpcyBwYXJ0aWN1bGFyIHNvbmcsIHBlcmZvcm1lZCBnYXluZXNzIHRvIGl0LCBhbmQgdGhlbiBvdmVybGFpZCBpdCB3aXRoIHRoZWlyIG93biBkaXNhdm93YWwgb2YgZ2F5bmVzcyAgYSBjdWx0dXJhbCBlbmFjdG1lbnQgb2YgdGhlIG1pbGl0YXJ5IG93biBjb25mbGljdGVkIHJlbGF0aW9uc2hpcCB0byBtYXNjdWxpbml0eSBhbmQgaG9tb2Vyb3RpY2lzbS4KSXQgaXMgaW1wb3J0YW50IHRvIGFja25vd2xlZGdlIHRoYXQgb3VyIExvcmQgd2lsbCBjb21lIHRvIHRha2UgSGlzIGJyaWRlLiBUaGUgaW1wb3J0YW50IGZhY3RvciBpcyB0byBoYXZlIGFuIGludGltYXRlIGxvdmUgcmVsYXRpb25zaGlwIHdpdGggdGhlIExvcmQgSmVzdXMgQ2hyaXN0IGZvciBub3QgYmUgbGVmdCBiZWhpbmQuIFdlIGFyZSBhbGwgd2l0bmVzc2luZyB0aGF0IHRoZSBzaW5ncyBvZiB0aGUgdGltZXMgYXJlIGZ1bGZpbGxpbmcgcGVyIEJpYmxlIHByb3BoZWNpZXMuIApUaGUgY29mZmVlc2hvcCBJIGxpa2UgdG8gZ28gdG8gaGFzIGdyZWF0IHJlbGF0aW9ucyB3aXRoIHRoZSBwb2xpY2UsIHRoZSBidWQgdGVuZGVycyB3ZWFyIGxhYiBjb2F0cyBhbmQgYWN0IHByb2Zlc2lvbmFsbHksIGFuZCB0aGUgcGVvcGxlIGluIGxpbmUgYXJlIGFueXRoaW5nIGZyb20gZWxkZXJseSBsYWRpZXMgdG8gYmlrZXJzIHdpdGggdGF0dG9vcy4gClBvc2l0aW9uIFBsYXkgICBJbiBob2xkZW0gcG9rZXIsIGEgcGVyc29uJ3MgcGxhY2UgYW5kIHBvc2l0aW9uIGNvdWxkIGhlbHAgYSBwZXJzb24gd2luIHRodXMgYmVpbmcgc2VhdGVkIGluIGEgImxhdGUgcG9zaXRpb24iIGlzIGEgdmVyeSBodWdlIGFkdmFudGFnZSBiZWNhdXNlIG9uZSBjb3VsZCBzZWUgYWxsIHRoZSBtb3ZlcyBvZiB5b3VyIG9wcG9uZW50cyBiZWZvcmUgeW91IGRvLiAKTGVnYWwgQWN0aW9uV29ya2luZyBpbiBzdWNoIGEgaGFuZHMgb24gam9iIHRoYXQgaW52b2x2ZXMgcmVndWxhciwgaW50aW1hdGUgY29udGFjdCB3aXRoIGNsaWVudHMgY291bGQgbGVhdmUgbWFzc2FnZSB0aGVyYXBpc3RzIG9wZW4gdG8gZmFsc2UgYWNjdXNhdGlvbnMgb2YgaW5kZWNlbnQgYXNzYXVsdC4gClRyeSAxMDAgeWVhcnMgb2Ygc29saXR1ZGUgYWZ0ZXIgdGhvc2UuCkluIHRoZSBlbmQsIEkganVzdCB0cmllZCB0byBtYWtlIGl0IGN1dGVzeSBsaWtlIEkgd291bGQgaGF2ZSBpZiBJIGJlZW4gb2xkZXIuIEkgc3VycHJpc2VkIHRoZW0gd2l0aCBhbiB1bHRyYXNvdW5kIHBob3RvIGF0IENocmlzdG1hcywgYW5kIHRoZXkgd2VyZSBib3RoIGV4Y2l0ZWQuIEluIHRoZSBlbmQsIGl0IHdvdW5kIHVwIGJlaW5nIGEgYmlnIGJsZXNzaW5nIGJlY2F1c2UgbXkgZmF0aGVyIGRpZWQgdW5leHBlY3RlZGx5IGp1c3QgYSBmZXcgeWVhcnMgbGF0ZXIuIElmIEkgaGFkbiBnb3R0ZW4gcHJlZ25hbnQsIGhlIHdvdWxkIG5ldmVyIGhhdmUga25vd24gYW55IG9mIGhpcyBncmFuZGNoaWxkcmVuLgpIZSB3YXMgYSBsaWZldGltZSBtZW1iZXIgb2YgdGhlIExhdyBTb2NpZXR5IG9mIFVwcGVyIENhbmFkYSBhbmQgaGUgd2FzIGF3YXJkZWQgdGhlIEhpZ2hlc3QgQWNjb2xhZGUgaW4gTWFydGluZGFsZSBIdWJiZWxsLiBIZSBzaWduaWZpZWQgdGhlIGhpZ2hlc3Qgc3RhbmRhcmQgb2YgaGlzIHByb2Zlc3Npb247IGhpcyBldGhpY3MgdW5xdWVzdGlvbmVkLiAKQWxsYWJvdXR0aGVjb3cgIDUgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpSYW5kIFBhdWwgYW5kIE1pa2UgTGVlIG9mdGVuIHZvdGUgYWdhaW5zdCBzaG9ydCB0ZXJtIHNwZW5kaW5nIGJpbGxzLiBPdGhlciBSZXB1YmxpY2FucyBhcmUgZnJ1c3RyYXRlZCBpbiBnZW5lcmFsLi4gCkRpc3RyaWN0IE1hZ2lzdHJhdGUgV2lsbGlhbSBCLiAKU2hlIGlzIHNleGlzdCBhbmQgY2FyZXMgbW9yZSBhYm91dCBvdXIgU09zIHRoYW4gaGVyIGRhdWdodGVycy4gCjEyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvLiAKTXkgZGF1Z2h0ZXIgb2Z0ZW4gZ2V0cyBvdXQgb2YgYmVkIGFuZCB3YW50cyB0byBoYW5nIG91dCB3aXRoIG1lIHdoZW4gSSBzaXR0aW5nLCBidXQgd2UgdGFsa2VkIGFib3V0IGl0IGFuZCBJIHRlbGwgaGVyIGl0cyBvayBpZiBzaGUgd2FudHMgdG8gam9pbiBtZSwgc2l0dGluZyBxdWlldGx5IG5leHQgdG8gbWUuIFNoZSBkb2VzIHRoaXMgc29tZXRpbWVzIGFuZCBpdHMgYSBuaWNlIGZlZWxpbmcuIApEYXMgYWxsZXMgaXN0IHNvIGdlaWZlcm5kLCB1bmQgc28gc3RydW56ZHVtbSwgZGFzcyBzb2dhcldlbm4gbWFuIGRhIHdpcmtsaWNoIG51ciBVcmxhdWIgbWFjaHQgdW0gdmxsaWcgb2huZSBIaW50ZXJnZWRhbmtlbiBkYXMgTGFuZCB1bmQgc2VpbmUgS3VsdHVyIGtlbm5lbnp1bGVybmVuLCB3aXJkIG1hbiB0ZWlsd2Vpc2Ugc2Nob24gc2VociBnZXNjaG9jayB3YXMgZG9ydCB1bnZlcmhvbGVuIGFuIGplZGVyIGRyaXR0ZW4gRWNrZSBhbmdlYm90ZW4gd2lyZC5JY2gga2FubiBkZW4gVGhhaXMgbnVyIGVtcGZlaGxlbiwgZGFzcyBzaWUgbWFsIHJpZ29yb3MgU2NobHVzcyBkYW1pdCBtYWNoZW4uIApBbm90aGVyIHN0b3J5IEkgY2FuIHRoaW5rIG9mIGlzIGEgZ3V5IHRoYXQgZ290IHRvbyBkcnVuayBhbmQgdGlwcGVkIGhpcyBjaGFpciBiYWNrd2FyZHMgb2ZmIHRoZSBkZWNrIG9mIHRoZSBmbG9hdCBjYWJpbi4gCkRlcG9zaXRzIHN0aWxsIHJlbWFpbiB0aGUgc2FtZSBhbmQgY2FuIHN3aXRjaCBmdW5kcyBiZXR3ZWVuIGFjY291bnRzLiAKVGhleSBjb3VsZCBiZSBpbiBmb3IgYSB0d28gZGVjYWRlIHN0cmV0Y2ggb2YgYWN0dWFsbHkgcGF5aW5nIHRlbmFudHMgdG8gbGl2ZSBpbiB0aGUgaG91c2UgYW5kIGNvbmRvLiAKVGhvc2Ugd2hvc2UgZWZmb3J0cyBoYXZlIGhlbHBlZCBkZWZpbmUgd2hvIHdlIGFyZSBhcyBhIHBlb3BsZSBhbmQgaG93ClRoZSBtb3N0IHByZXNzaW5nIGlzc3VlIHdhcyBob3cgdGhlIGhlbGwgdG8gZml0IGEgcmlvdCBzaGllbGQgaW4gYSBGdW5PbmUuKChCcnV0ZSBGb3JjZSBBdHRhY2sgRGVja2VyIHdpdGggYSBiaWcgb2xkIHNoaWVsZCkpLiAKRW5vdWdoIG1pc3Rha2VzIGFyZSBtYWRlIHRoYXQgdGhlIGNhc2lub3MgYWN0dWFsbHkgcGF5IG91dCAyIHRvIDQgcGVyY2VudCBsZXNzIHRoYW4gdGhlIGV4cGVjdGF0aW9uIGZvciBza2lsbGVkIHBsYXllcnMuIApBbmQgeW91IGNhbiB0ZWxsIGhpbSB0aGF0IGl0IGNhdXNpbmcgeW91IHRvIGRvdWJ0IHdoZXRoZXIgeW91IGNhbiBoYW5kbGUgdGhpcyBpbiB0aGUgbG9uZyBydW4uClRoZSBidWxsIGNoYXJnZXMgc3RyYWlnaHQgdG93YXJkcyB0aGUgZm91ciBwcmlzb25lcnMgYW5kIHRoZSBsYXN0IG1hbiBzaXR0aW5nIHdpbnMgJDI1MC4gSXQgaXMgYSBnYW1lIG9mIHJhdyBuZXJ2ZXMuIApDJ2VzdCBkb25jIHBhcyBtb2lucyBkZSBkaXggc2VwdCBzY3J1dGlucyAoYyd0YWl0IHZpbmd0IGF2YW50IGxhIGZ1c2lvbiBkZXMgcXVhdHJlIHByZW1pZXJzIGFycm9uZGlzc2VtZW50cykgcXUnaWwgZmF1dCBvYnNlcnZlciBwb3VyIGNvbm5haXRyZSBsJ2lzc3VlIGRlIGxhIGJhdGFpbGxlIHBvdXIgbGEgbWFpcmllIGRlIFBhcmlzLiAKVGhlIG1vb2QgaW4gd2hpY2ggdGhlIG1vdmllIG9wZW5zIGFsc28gbWF0dGVycy4gUmVjZW50bHksIEFzaWFuIGN1bHR1cmUgaGFzIGV4cGxvZGVkIGluIHBvcHVsYXJpdHkgYW1vbmcgV2VzdGVybiBhdWRpZW5jZXM6IEsgcG9wIHN1cGVyZ3JvdXAgQlRTIHJlYWNoZWQgTm8uIDEgb24gdGhlIEJpbGxib2FyZCBjaGFydHMgaW4gSnVuZSwgc2FsZXMgb2YgS29yZWFuIGJlYXV0eSBwcm9kdWN0cyBoYXZlIHRyaXBsZWQgc2luY2UgMjAxNSwgYW5kIEphcGFuZXNlIGNsb3RoaW5nIGNvbXBhbnkgVW5pcWxvIHNpZ25lZCB0ZW5uaXMgc3RhciBSb2dlciBGZWRlcmVyIGFzIGl0cyBicmFuZCByZXByZXNlbnRhdGl2ZS4gCllvdSB3aWxsIGJlY29tZSBhIGZhdGhlciBzb21lZGF5LCB3aGV0aGVyIGl0IGlzIHRocm91Z2ggeW91ciBmcm96ZW4gc3Blcm0gb3Igb3RoZXIgbWVhbnMuIFBlcmhhcHMgeW91IGFuZCBNZWxpc3NhIHdpbGwgYWRvcHQgYW5kIGl0IHdpbGwgZW5kIHVwIGJlaW5nIHRoZSBncmVhdGVzdCBnaWZ0IHlvdSBjb3VsZCBldmVyIGhhdmUgd2lzaGVkIGZvci4gRG9udCBnaXZlIHVwIG9uIHRoYXQgZHJlYW0uLiAKUGFzc2FnZSBvZiBQbGFuIEIgYnkgdGhlIFJlcHVibGljYW4gY29udHJvbGxlZCBIb3VzZSBvZiBSZXByZXNlbnRhdGl2ZXMgd291bGQgaGF2ZSBiZWVuIHB1cmVseSBzeW1ib2xpYyBzaW5jZSBpdCB3b3VsZCBzdXJlbHkgaGF2ZSBiZWVuIGRlZmVhdGVkIGJ5IHRoZSBEZW1vY3JhdGljIGNvbnRyb2xsZWQgU2VuYXRlLiBCb2VobmVyIGludHJvZHVjZWQgUGxhbiBCIHRvIHNpZ25hbCBSZXB1YmxpY2Fucycgd2lsbGluZ25lc3MgdG8gbmVnb3RpYXRlLiAKTW9zdCBmYW1pbGllcyBhbHdheXMgaGF2ZSBhdCBsZWFzdCBvbmUgZGVjayBvZiBjYXJkcy4gSGVhcnRzLCBjbHVicywgc3BhZGVzIGFuZCBkaWFtb25kcyBhcmUgZmFtaWxpYXIgc2lnaHRzIGZvciBhbGwgb2YgdXMuIApXaGF0IEkgdHJ5aW5nIHNheSBpcyB0aGF0IC9yL2FhIHJlbW92YWwgcG9saWNpZXMgYXJlbiBjbGVhciBhbmQgdHJhbnNwYXJlbnQsIGdpdmVuIHRoYXQgbm8gbm90aWZpY2F0aW9uIGlzIGdpdmVuIHdoZW4gcG9zdHMgYXJlIHJlbW92ZWQsIHNvIEkgYXNraW5nIGZvciBjbGFyaWZpY2F0aW9ucyBhbmQgZm9yIG1vcmUgdHJhbnNwYXJlbmN5LiAKV2UgYXJlIGp1c3QgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIHRoaXMgc2hpZnQsIGFuZCBpdCB0YWtlcyB0aW1lIHRvIHJlYWNoIHBlb3BsZSwgYW5kIGZvciB0aGUgbWVzc2FnaW5nIHRvIHRha2UgaG9sZC4gRGlnaXRhbCBsYXVuY2hlZCBhdCB0aGUgZW5kIG9mIFNlcHQuIApQdXJlIGNoYW9zIGRvd24gdGhlcmUuIApBbmQgaWYgcHJpdmFjeSBpcyBhIGNvbmNlcm4sIHlvdSBjYW4gc3RpbGwgb2JzY3VyZSB5b3VyIGNhbWVyYSBhbmQgaW4gYm90aCBBUiBhbmQgQVIrIHRoZSBwb2tlbW9uIHRoYXQgeW91IGFyZSB0YWtpbmcgYSBwaWN0dXJlIG9mIGlzIHN0aWxsIHZpc2libGUuIFllcywgSU4gQVIrIEkgQ0FOIFBVVCBNWSBIQU5EIE9WRVIgVEhFIENBTUVSQSBBTkQgU1RJTEwgU0VFIFRIRSBQT0tFTU9OIE9OIFRIRSBTQ1JFRU4uIFNvIHlvdSB3b3VsZCBzdGlsbCBiZSBhYmxlIHRvIHRha2UgYSBwaWMsIHdpdGggdGhlIHBva2Vtb24gaW4gdmlldywgdGhlIGNhbWVyYSBwaHlzaWNhbGx5IGNvdmVyZWQsIGFuZCBoYXZlIHNtZWFyZ2xlIGFwcGVhci4uIApIZWFydCBkaXNlYXNlIGFuZCBoZWFydCBhdHRhY2sgY2FuIGNvbnRyaWJ1dGUgdG8gY2hlc3QgcGFpbiBhbmQgdGlnaHRuZXNzLiBPdGhlciBzeW1wdG9tcyB0aGF0IHlvdSBzaG91bGQgbG9vayBmb3IgYSBleHRyZW1lIHBhaW4gaW4gdGhlIGxlZnQgcGFydCBvZiB0aGUgaGVhcnQsIG51bWJuZXNzIG9mIHRoZSBjaGVzdCBhbmQgc2hvdWxkZXIgcGFpbi4gCkkgc2lnbmVkIHVwIHdpdGggdGhlbSBhbmQgd2VudCB0aHJvdWdoIGFuIGludGVydmlldyBmb3IgdGhlbSB0byBnZXQgYSBzZW5zZSBvZiB3aGF0IEkgd2FzIGxvb2tpbmcgZm9yLiBXZSBtZXQgdXAgYSBmZXcgdGltZXMgdG8gZ2V0IGl0IHJpZ2h0IGFuZCBJIG1hZGUgYW4gb25saW5lIHByb2ZpbGUuIFRoZXkgdmV0IHRoZWlyIGNsaWVudHMgcmVhbGx5IHdlbGwgYW5kIG1hdGNoIHBlb3BsZSBiYXNlZCBvbiBhIGxvdCBvZiBmYWN0b3JzLi4gCkNlcGVuZGFudCwgbCd2b2x1dGlvbiBkZSBsYSBtZGVjaW5lIGF2ZWMgbGEgcmFuaW1hdGlvbiBkJ3VuIHBhdGllbnQgbW9ydCAobWFzc2FnZSBjYXJkaWFxdWUpIG91IGxlIG1haW50aWVudCBlbiB2aWUgZGUgZmFvbiBhcnRpZmljaWVsbGUgcGFyIGxlIGZvbmN0aW9ubmVtZW50IGR1IGN1ciBldCBkZXMgcG91bW9ucyAobWFsZ3IgbGEgbW9ydCBkJ2F1dHJlcyBvcmdhbmVzKSwgYSByZW1pcyBlbiBxdWVzdGlvbiBjZXR0ZSBkZmluaXRpb24uIApMYWR5IEdhR2EpLCBHcmVhdGVzdCwgSG9sbHl3b29kIFtMaXZlIEF0IHRoZSBCaXR0ZXIgRW5kIDEvMjAvMDZdICwgU29tZXRpbWVzIC4gCldoZW4geW91IGJlaW5nIHNjcnV0aW5pemVkIHRoZXJlIGEgcmVhc29uIGZvciBpdCwgc2FpZCB0aGUgZmlyc3QgeWVhciBHTS4gQXJlbiBnb2luZyB0aGUgd2F5IHlvdSB3YW50IHRoZW0gdG8sIHNvIHlvdSBzY3J1dGluaXplZCBtb3JlLiBXZSBzb3J0IG9mIG1hZGUgdGhhdCBiZWQgb3V0c2VsdmVzIGFuZCBpdCB1cCB0byB1cyB0byBtYWtlIGl0IGJldHRlci4gClNoaXR0eW1vcnBoIGNyYWZ0cyBhIHN0b3J5IHRoYXQgYmVsaWV2YWJsZSBlbm91Z2ggdG8gcHVsbCB5b3UgaW4gYW5kIGl0IGRvZXNuIGhpdCB5b3UgdW50aWwgdGhlIGJvbWIgZHJvcHMgYXQgdGhlIGVuZC4gSGUgZXZlbiBoYXMgYSBrbmFjayBmb3IgZmlndXJpbmcgb3V0IGV4YWN0bHkgaG93IGxvbmcgdG8gd2FpdCBzbyB0aGF0IHlvdXIgZ3VhcmQgaXMgZG93biBiZWZvcmUgaGUgZHJvcCBhIG5ldyBvbmUuIApBbGwgc3BvdCBvbiBhZHZpY2UuIE9ubHkgSSB3b3VsZCBwcm9iYWJseSBhZGQ6IG1vdmUuIE1vdmUgYWNyb3NzIHRoZSBjb3VudHJ5LiBDbGFpbSBhIG5ldyBqb2Igb3Igc29tZXRoaW5nLiBCcmVhayB0aGF0IGltbWVkaWF0ZSBzb2NpYWwgY2lyY2xlLiBGcmllbmRzIGFyZSBnb2luZyB0byBub3RpY2Ugc29tZXRoaW5nIHdoZW4gc29tZW9uZSBnb2VzIGZyb20gbGl2aW5nIHBheWNoZWNrIHRvIHBheWNoZWNrIHRvIHN1ZGRlbmx5IGJ1eWluZyBldmVuIGEgbW9kZXN0IG5ldyBjYXIuIENsYWltIHlvdSBvciB5b3VyIHNwb3VzZSB3ZXJlIG9mZmVyZWQgYSBiZXR0ZXIgcGF5aW5nIGpvYiBzb21lcGxhY2UgZWxzZSBhbmQgbW92ZS4gRWFzeSB0byBleHBsYWluIGEgbmljZXIgaG91c2UgYW5kIGEgbmljZXIgY2FyIHRvIGZyaWVuZHMgd2hvIGRyb3AgYnkgYSB5ZWFyIGxhdGVyLiAiT2gsIHllYWgsIHRoZSBuZXcgZ2lnIHRyZWF0cyB1cyB3ZWxsLiBJdCB3YXMgd29ydGggbW92aW5nIGFjcm9zcyB0aGUgY291bnRyeS4iCkkgdGhpbmsgaXQgc3RhcnRlZCB3aXRoIGluc3BpcmF0aW9uIGZvciBnZXR0aW5nIGJhY2sgaW50byBnYW1pbmcgYW5kIHNlYXJjaGluZyBhcm91bmQgdGhlIHdlYiBmb3Iga25vd2xlZGdlIGFuZCBjYW1lIGFjcm9zcyBQQ01SIG9uIHJlZGRpdC4gS3Vkb3MgdG8gYWxsIHRoZSBnb29kIHBlb3BsZSBvbiBQQ01SIHdobyBnaXZlIG91dCBhZHZpY2UgYW5kIGV4cGVyaWVuY2UsIGFuZCBoZWxwIHBlb3BsZSBmb3Igbm8gZ2FpbiBhdCBhbGwuIApGcm9tIDYwIG1pbGVzIHRvIGFib3V0IDkwIG1pbGVzIGl0IHdhcyByZWxhdGl2ZWx5IHVuZXZlbnRmdWwgYW5kIGFsbW9zdCBhbGwgZG93bmhpbGwuIApUaGUgbmFpbCBiaXRpbmcgc2Vhc29uIHdhcyByaXZldGluZyB1bnRpbCB0aGUgdmVyeSBlbmQgd2hlbiByZXR1cm5pbmcgcG9rZXIgcGxheWluZyB1bmRlcmRvZyBLZXZpbiBNYXJ0aW4gd29uIGl0IGFsbCBhcyBoZSB3YXMgdW5hbmltb3VzbHkgY3Jvd25lZCB2aWN0b3Jpb3VzIGZvbGxvd2luZyBhIGp1cnkgdm90ZSBvZiA5IDAuCkkgYmxldyBvdXQgbXkgdGlyZXMgd2hpbGUgSSB3YXMgZHJpdmluZyBhYm91dCA4NW1waCBvbiA3NU4gaW4gRGFsbGFzLiBXaGVuIHRoZSBmaXJzdCB0aXJlIGJsZXcsIEkgb3ZlcmNvcnJlY3RlZCBhbmQgbXkgY2FyIHZlZXJlZCBzdHJhaWdodCBmb3IgdGhlIGNvbmNyZXRlIGJhcnJpY2FkZSAoSSB3YXMgaW4gdGhlIHNlY29uZCBsYW5lIGZyb20gdGhlIGxlZnQgb3V0IG9mIGZvdXIpLiAKVG8gdGhyb3VnaCBhIHNwYW5uZXIgaW4gdGhlIHdvcmtzLCBwcm9mZXNzaW9uYWxzIHNvbWV0aW1lcyBiZXQgYSBoYW5kIHF1aWNrbHkgdG8gdGhyb3cgcGVvcGxlIG9mZi4gSXQgaXMgZ29sZCEgTWFzdGVyIGl0IGFuZCB5b3UgY2FuIHJlYWxseSBtYWtlIHlvdXIgcG9rZXIgcGVyc29uYWxpdHkga25vd24uIApBcyBwYXJ0IG9mIGEgcHVzaCB0byBtYXhpbWlzZSB0aGlzIHJldmVudWUgc3RyZWFtLCB3b3JrIG9uIGEgbmV3IG5vbiBzbW9raW5nIGRpbmluZyB0ZXJyYWNlIGFyZWEgaXMgZm9yZ2luZyBhaGVhZC4gVGhlIHdvcmsgaXMgcGFydCBvZiBhIHJlZnVyYmlzaG1lbnQgcHJvZ3JhbSB3aGljaCwgYnkgeWVhcidzIGVuZCwgd2lsbCBoYXZlIHJlc3VsdGVkIGluIGFib3V0ICQyLjMgbWlsbGlvbiBoYXZpbmcgYmVlbnJlIGludmVzdGVkIGludG8gdGhlIGNsdWIgaW4gYnVpbGRpbmcgYW5kIHJlbWVkaWFsIHdvcmtzIGluIHJlY2VudCB0aW1lcy4gCklmIHlvdSBjYW4gc2l0IGRvd24sIGFuZCBwbGF5L2NvbXBvc2UvcHJvZHVjZS9qYW0vZG93aGF0ZXZlcnlvdWRvIGJ1dCBmaW5kIGl0IHVuaW5zcGlyaW5nIGFuZCBpcnJpdGF0aW5nLCBzdG9wISBPbmNlIHlvdSBwcm92ZW4gdG8geW91cnNlbGYgdGhhdCB5b3UgaGF2ZSB0aGUgZGlzY2lwbGluZSB0byBhY3R1YWxseSB3b3JrLCBmaW5kaW5nIGl0IGxpa2UgdGhpcyBtZWFucyB5b3UgYXJlIGNyZWF0aXZlbHkgemVybyBXb3JraW5nIGxpa2UgdGhpcyByZXN1bHRzIGluIGZydXN0cmF0aW9uLCBhbmQgc3Vja3MuIApZb3UgYXJlIHJpZ2h0IHRoYXQgdGhleSBkb24ndCBzdGF5IGFzICdiYWdzJyB0aGUgd2hvbGUgdGltZSwgYnV0IHRoZXkgc3RheSBhcyB0aGUgcGxhc3RpYyBtb2xlY3VsZS4gCkNhbW91Zmxhc2ggdQpJIGRvbiBuZWVkIDM1IGNob2ljZXMgZm9yIHNvdW5kcyAgIG15IGVhcnMgcmluZyBhbGwgdGhlIHRpbWUgYW55aG93IHNvIGl0IG5vdCBsaWtlIGl0IG1ha2VzIGEgYml0IG9mIGRpZmZlcmVuY2UuIApObywgeW91IGhhdmUgYSBzaW5nbGUgSERNSSBpbnB1dCwgd2hpbGUgb24gdGhlIG90aGVyIHNpZGUgdGhlcmUgaXMgYW4gSERNSSBvdXRwdXQgKHdoaWNoIHlvdSBjYW4gYWxzbyB1c2Ugd2l0aCBhIEhETUkgdG8gRFZJIGNhYmxlKSBhbmQgdHdvIGF1ZGlvIG91dHB1dHM6IG9uZSBpcyBUb3NsaW5rL1NQRElGIChvcHRpY2FsKSBhbmQgaGFzIERvbGJ5IERpZ2l0YWwgNS4xIHBhc3N0aHJvdWdoLCB0aGUgb3RoZXIgaXMgYSByZWd1bGFyIDMuNSBhbmFsb2cgc3RlcmVvLiAsIEkgZG9uIGtub3cgaWYgaXQgYXZhaWxhYmxlIGluIHlvdXIgY291bnRyeSBidXQgeW91IGdldCB0aGUgaWRlYS4KUFlFT05HQ0hBTkcsIFNvdXRoIEtvcmVhIChBUCkgICBBbm5hIEdhc3NlciBncmV3IHVwIHdhbnRpbmcgdG8gYmUgYSBneW1uYXN0LCBtYWtpbmcgaXQgYWxsIHRoZSB3YXkgdG8gdGhlIEF1c3RyaWFuIG5hdGlvbmFsIHRlYW0gYmVmb3JlIGxpZmUgdG9vayBoZXIgaW4gYW5vdGhlciBkaXJlY3Rpb24uIFNoZSBkaWRuJ3QgZXZlbiBzdGFydCBzbm93Ym9hcmRpbmcgdW50aWwgc2hlIHdhcyAxOCwgZHJhd24gbm90IGJ5IHRoZSBsdXJlIG9mIHRoZSBPbHltcGljcyBidXQgb2Ygc2ltcGx5IGNoYWxsZW5naW5nIGhlcnNlbGYgdG8gcHVzaCBoaWdoZXIsIGdvIGZhcnRoZXIgYW5kIGJlY29tZSBtb3JlIHRoYW4ganVzdCBzb21lIGd5bW5hc3Qgd2hvIGdhdmUgc25vd2JvYXJkaW5nIGEgc2hvdC4uIApUaGUgb25seSB3YXkgdG8gZ2V0IGl0IGlzIHRvIGNvbnRhY3QgaGlzIGFnZW50cyAod2hpY2ggaSBiZWxpZXZlIGNvc3RzIG1vbmV5IHRvIGdldCB0aGVpciBpbmZvKSBhbmQgdGhlbiB5b3UgY291bGQgZ2V0IEVtJ3MgbnVtYmVyLiAKS2F0aHkgR2lscm95IGhhcyBjcnVzYWRlZCBhZ2FpbnN0IGdhbWJsaW5nIGZvciBkZWNhZGVzLCBzcGVha2luZyBvdXQgYWdhaW5zdCBjYXNpbm9zLCBpbGxlZ2FsIHJhZmZsZXMgYW5kIHRoZSByZWNlbnQgd2F2ZSBvZiB2aWRlbyBwb2tlciBjYWZlcy4KVmFuZGFhZyB3YXMgZGUgcmlqZGFnLCBtZXQgMTIwMCBrbSB2b29yIGRlIGJvZWcuIE5hYXIgZ29lZGUgZ2V3b29udGUgdmVydHJva2tlbiB3ZSB2cm9lZyAob20gMjAgdm9vciA1KSB6b2RhdCB3ZSB0ZWdlbiBoZXQgb250YmlqdCBhbCBpbiBkZSBvbWdldmluZyB2YW4gRnJhbmtmdXJ0IHdhcmVuLiBIZXQgem9ubmV0amUgc2NoZWVuIGFsIHZyb2xpamsgZHVzIHdlIGtvbmRlbiB6ZWxmcyBhbCBidWl0ZW4geml0dGVuLiBPbnRiaWp0ZW4gZGVkZW4gd2UgdHJvdXdlbnMgaW4gaGV0emVsZmRlIHdlZ3Jlc3RhdXJhbnQgYWxzIGJpaiBvbnplIFNsb3ZlbmkgcmVpcywgZW4gdG9ldmFsbGlnIHdhcyB2YW4gb256ZSB2b2xnZW5kZSBzdG9wcyBiaWogZGllIG1vb2llIHdlZ3Bhcmtpbmcgdm9sIHJvemUgYmxvZW1lbiBkaWUgd2Ugb29rIGFsIGtlbmRlbiB2YW4gZWVuIHZvcmlnZSByZWlzLiBXZSB2b25kZW4gaGllciB0cm91d2VucyBlZW4gbGV1a2UgZ2VvY2FjaGUgdmVyc3RvcHQgaW4gZWVuIG5hZ2VtYWFrdCBib3JkamUgdmFuIGVlbiB0dWluYWFubmVtZXIsIGhpaGkuIFRpamRlbnMgb256ZSBoZWVucmVpcyB6aWpuIHdlIHNvd2llc28gaGVlbCB2YWFrIGdlc3RvcHQsIHZvb3IgZ2VvY2FjaGVzIGVuIGtvZmZpZSBwYXV6ZXMgZHVzIHdlIGhlYmJlbiBlY2h0IHdlbCBnZW5vdGVuIHZhbiBkZXplIGF1dG8gZGFnLiBIZXQgbWlkZGFnZXRlbiBkZWRlbiB3ZSBvcCBlZW4gdnJpaiBkcnVra2UgcGxlaywgbmlldCB6byB2ZXIgdm9vciBkZSBPb3N0ZW5yaWprc2UgZ3JlbnMgZW4gd2F0IHZlcmRlciBtb2VzdGVuIHdlIG9vayBub2cgZWVuIHZpZ25ldCBrb3Blbi4gSW4gZGV6ZSBzdHJlZWsgcGFzc2VlcmRlbiB3ZSBoZWVsIGRlIHRpamQgZGUgRG9uYXU6IG9md2VsIGtyb25rZWxkZW4gd2lqIGhlZWwgdmVlbCBvZndlbCB3YXMgaGV0IGRlIHJpdmllci4gT3ZlcmlnZW5zIHZpbmRlbiB3aWogaGV0IGVjaHQgcGxlemllciBvbSBPb3N0ZW5yaWprIGVuIER1aXRzbGFuZCB0ZSBkb29ya3J1aXNlbjogd2F0IGVlbiBtb29pZSBsYW5kZW4hCkluIHRoZSBiYXRodHViLCBidXQgbm90IG9uIGEgcGhvbmUuIFlvdSBjYW4gc2V0IHlvdXIgdHYgdXAgaW4gdGhlIHNpbmsuIApNciBDb3dhbiwgd2hvIHdhcyBsaXZpbmcgYXQgVWtpIG5lYXIgTXVyd2lsbHVtYmFoIGF0IHRoZSB0aW1lLCB3YXMgYXNrZWQgaWYgaGUgaGFkIHNlZW4gbWVkaWEgY292ZXJhZ2Ugb2YgdGhlIGFydGlzdHMgaW1wcmVzc2lvbnMgb2Ygc3VzcGVjdHMgaW4gdGhlIE1vcm9jb21iZSBjYXNlLgpKdWRnZSBSaWNoYXJkIEQuIEdyaWZvLCB3aG8gcHJlc2lkZWQgYXQgdGhlIHdvbWFuJ3Mgb25lIGRheSB0cmlhbCwgZ2F2ZSBoZXIgbGF3eWVyLCBTdGFubGV5IFZhc2lsaWFkaXMsIDEwIGRheXMgdG8gZmlsZSBhbiBhcHBlYWwuIFZhc2lsaWFkaXMgc2FpZCBoZSBwcm9iYWJseSB3aWxsIHNlZWsgdG8gb3ZlcnR1cm4gdGhlIGp1cnkncyBkZWNpc2lvbi4gClRoZSBwbGF5ZXIgY2FuIGFsc28gb3B0IHRvIHBsYXkgZGlmZmVyZW50IGJpbmdvIGdhbWVzLCBpZiB0aGV5IGFyZSBvZmZlcmVkIGF0IGhlciBwbGF5aW5nIHNpdGUuIE1hbnkgc2l0ZXMgb2ZmZXIgc2V2ZW50eSBmaXZlLCBlaWdodHkgYW5kIG5pbmV0eSBudW1iZXIgYmluZ28uIFRoZXJlIGlzIGFsc28gU3BlZWQgQmFsbCBhbmQgTHVja3kgTnVtYmVyIEJpbmdvIHRvIGFkZCB2YXJpZXR5IHRvIHRoZSBwbGF5aW5nIGV4cGVyaWVuY2UuLiAKTXkgZ3JvdXAgb2YgZnJpZW5kcyBkaWRuJ3QgZWl0aGVyLiAKWW91IHNob3VsZCBiZSB3YXJ5IHdoZW4gbG9va2luZyBmb3IgcHN5Y2hpYXRyaWMgZGF0YSBvbiB0aGVpbnRlcm5ldC4gCkFmdGVyIGNvbGxlZ2UgSSB3YXMgYSAobGl2ZSkgcHJvIGZvciBhYm91dCA1IHllYXJzLiBPdmVyYWxsIEkgd29uIGh1Z2UgaW4gdGhhdCB0aW1lLCBidXQgbXkgZmlmdGggeWVhciB3YXMgYSBsb3NpbmcgeWVhci4gUmVhc29ucz8gVGhlIGdhbWVzIGdvdCB0b3VnaGVyLCB0aGUgYWN0aXZpdHkgaXMgYSBncmluZCwgYW5kIGl0IGlzIGhhcmQgbm90IHRvIGdldCBjb21wbGFjZW50LiBBcyBlZGdlcyBnZXQgc21hbGxlciBpdCBiZWNvbWVzIG1vcmUgYW5kIG1vcmUgaW1wb3J0YW50IHRvIGFsd2F5cyBwbGF5IHlvdXIgQSBnYW1lIHRvIG1ha2UgaXQgYXMgYSBwcm8uIEZvciBtZSB0aGF0IHdhcyBkaWZmaWN1bHQgY29uc2lkZXJpbmcgbXkgd2luIHJhdGUgd2FzIGZhbGxpbmcsIG15IGhlYXJ0IHdhc24gaW4gaXQsIGFuZCBjYXNpbm9zIGFyZSBnZW5lcmFsbHkgcHJldHR5IHNvdWwgY3J1c2hpbmcgZW52aXJvbm1lbnRzLgpGdWxsIEhvdXNlLiBGb3VydGggb24gdGhlIGxpc3QgaXMgYSBoYW5kIGNvbXBvc2VkIG9mIHR3byBzZXRzIG9mIGNhcmRzLCBvbmUgdGhyZWUgYW5kIHRoZSBvdGhlciB0d28sIHdoaWNoIGFyZSBvZiB0aGUgc2FtZSByYW5rLiBUaGV5IGRvbid0IG5lY2Vzc2FyaWx5IGhhdmUgdG8gYmUgaW4gb3JkZXIgbGlrZSAzIG9mIHNldmVucyBhbmQgMiBvZiBlaWdodHMuIApVIGNhbiBvYnYgdW5kZXJzdGFuZCBteSBza2VwdGljaXNtLiAKSXQgYSByZWFsIHN0cmFuZ2Ugc2l0dWF0aW9uIHdoZXJlIHRoZSBwZW9wbGUgd2hvIGJvdGhlciB0byBidXkgdGlja2V0cyBhbmQgc2hvdyB1cCB0byB0aGUgbGl2ZSBldmVudCBhcmUgc29tZWhvdyAibm90IHJlYWN0aW5nIGNvcnJlY3RseSB0byB0aGUgdGhpbmcgdGhleSBwYWlkIGZvciIuIENyb3dkcyBjYW4gYmUgbGFtZSwgSSBndWVzcywgYnV0IHRoZSBjcm93ZCBpcyB0aGVyZSB0byBiZSBzcG9ydHMgZW50ZXJ0YWluZWQsIG5vdCBuZWNlc3NhcmlseSBiZSBwYXJ0IG9mIHRoZSBzcG9ydHMgZW50ZXJ0YWlubWVudC4gCkZpdmUgZnJhdGVybmFsIGlzdHMgYXJlIG5vbWluYXRlZCBlYWNoIHdlZWsuIFRoZSBvbmUgd2hvIGlzIG5hbWVkIE1WUCB3aWxsIGJlIGVudGVyZWQgaW4gYSByYW5kb20gZHJhd2luZyBmb3IgYW4gYWxsIGV4cGVuc2UgcGFpZCB0cmlwIGZvciB0d28gdG8gV2FzaGluZ3Rvbi5Eb29yIHByaXplcyB3ZXJlIHdvbiBieSBlaWdodCBndWVzdHMuIApJbiBBZGEsIHRoZSBwb2xpY2UsIHRoZSBzaGVyaWZmJ3MgZGVwYXJ0bWVudCwgdGhlIGhpZ2h3YXkgcGF0cm9sLCBhbmQgdGhlIE9rbGFob21hIFN0YXRlIEJ1cmVhdSBvZiBJbnZlc3RpZ2F0aW9uIGFsbCB1c2UgdGhlIHNhbWUgZnJlcXVlbmN5LCB3aGljaCBpcyBjaGFuZ2VkIHBlcmlvZGljYWxseS4gCiJFdmVyeXRoaW5nIHlvdSBjYW4gcG9zc2libHkgaW1hZ2luZTsgJ2l0J3MgYW4gaW1wb3J0YW50IHBob25lIGNhbGwsIEkgd2FzIGp1c3QgbW92aW5nICh0aGUgcGhvbmUpLCIgc2FpZCBQcm9uZ2VyLgpTdXJlLCBpZiB5b3UgbG9vayBvbiB0aGUgQUcncyBzaXRlIHlvdSB3aWxsIHNlZSBpbiBteSBmaXJzdCB0d28gdmVyc2lvbnMgSSBpbmNsdWRlZCBhIHJlZ3VsYXRvcnkgYm9keS4gRmlyc3Qgb25lIHdhcyB0aGUgQXJrYW5zYXMgTG90dGVyeSBDb21taXNzaW9uLiAKTW9zdCBoYXZlIGJlZW4gaW52b2x2ZWQgd2l0aCBjbGluaWNhbCByZXNlYXJjaCBmb3IgeWVhcnMgYW5kIGFyZSBmb3J0dW5hdGUgaW4gaGF2aW5nIHJlc2VhcmNoIHRlYW1zIGFyb3VuZCB0aGVtIHRoYXQgaGVscCB3aXRoIHRoaXMgZXZlciBpbmNyZWFzaW5nIHdvcmtsb2FkLCBidXQgZm9yIG5ldyBpbnZlc3RpZ2F0b3JzIHdpdGhvdXQgYW55IGluZnJhc3RydWN0dXJlIHRvIHN1cHBvcnQgdGhlbSBjbGluaWNhbCByZXNlYXJjaCBoYXMgYmVjb21lIHRvbyB0aW1lIGNvbnN1bWluZyBhbmQgY2hhbGxlbmdpbmcgdG8gZW5nYWdlIHdpdGguLiAKR2FsbGV5IGRvZXMgdGhpbmdzIGEgbGl0dGxlIGRpZmZlcmVudGx5IHRoYW4gbW9zdCBvZiB0aGUgVHdpbiBDaXRpZXMnIGV4aXN0aW5nIG9yIG9uIHRoZSB3YXkgZm9vZCBoYWxscywgaW4gdGhhdCB0aGV5J3JlIGFsc28gYSByZXN0YXVyYW50IGFjY2VsZXJhdG9yLiBUaGV5IHByb3ZpZGUgaGFuZCBwaWNrZWQgY2hlZnMgd2l0aCBzcGFjZSBhbmQgZnVuZGluZywgYWxvbmcgd2l0aCBmcm9udCBvZiBob3VzZSBzdGFmZiwgbWFya2V0aW5nIGFuZCBQUiBzdXBwb3J0LCBvdmVyaGVhZCBlcXVpcG1lbnQsIGFuZCBidXNpbmVzcyBzdHJhdGVneSBkZXZlbG9wbWVudC4gCkxhIFBhbG1hIGlzdCBkaWUgZHJpdHRzY2huc3RlIEluc2VsIGRlciBXZWx0ICAgenVtaW5kZXN0LCB3ZW5uIGVzIG5hY2ggZGVyIFVORVNDTyBnZWh0LiBJaHJlciBlaW5tYWxpZ2VuIE5hdHVyIHdlZ2VuIHd1cmRlIGRpZSBub3Jkd2VzdGxpY2hzdGUgZGVyIEthbmFyaXNjaGVuIEluc2VsbiAyMDAyIHp1bSBCaW9zcGhyZW5yZXNlcnZhdCBlcmtscnQuIApJdCBkb2VzbiBmZWVsIGdvb2QgYmVjYXVzZSB3ZSB0YWxraW5nIGFib3V0IGZvcmNpYmx5IG1lZGljYXRpbmcgcGVvcGxlLiBCdXQgdGhlcmUgYXJlIHNvbWUgYmFzaWMgc2VydmljZXMgdGhhdCBzaG91bGQgb25seSBiZSBhdmFpbGFibGUgdG8gcGVvcGxlIHdobyBhcmUgdmFjY2luYXRlZCB1bmxlc3MgdGhleSBoYXZlIGxlZ2l0aW1hdGUgbWVkaWNhbCBuZWNlc3NpdHkgdG8gbm90IGJlIHZhY2NpbmF0ZWQuIFNjaG9vbHMsIGZvciBleGFtcGxlLiAKRmlyc3QsIGlkIGxpa2UgYWxsIFRyZXZvcnMgRmFtaWx5IHRvIGtub3cgdGhleSBoYXZlIG15IGRlZXBlc3Qgc3ltcGF0aHksIEkgY2FudCBpbWFnaW5lIHlvdXIgaGVhcnRhY2hlLiBJIHdpbGwgYWx3YXlzIHJlbWVtYmVyIFRyZXZzIGxvdmUgZm9yIGFuaW1hbHMsIGFzIGhlIGhlbHBlZCBteSBkb2cgd2l0aCBoZXIgbGFib3IgYW5kIGRlbGl2ZXJ5IHRoZW4sIGFsb25nIHdpdGggaGlzIE1vbSwgcGlja2VkIFR5c29uIG91dCBvZiB0aGUgYnVuY2guIEkganVzdCByZWNlbnRseSBnb3QgYSBjYWxsIGZyb20gVHJldiBhc2tpbmcgaWYgaSBrbmV3IG9mIGEgZG9nIHdobyBuZWVkZWQgYSBnb29kIGhvbWUgYmVjYXVzZSBUeXNvbiBuZWVkZWQgYSBsaXR0bGUgRnJpZW5kLiAKU2l0dGluZyBhdCBvbmUgcGxhY2Ugb24gc2NyZWVuLiBJdCBvbmx5IGEgbWF0dGVyIG9mIHRpbWUgdW50aWwgdGhlIGltYWdlIHF1YWxpdHkgd2lsbCBkZXRlcmlvcmF0ZS5JcyBpdCBqdXN0IG1lIG9yIHdhcyBSYWNlIENvbnRyb2wgYSBsaXR0bGUgQW50aSBQb3JzY2hlIGJpYXNlZCBpbiB0aGlzIG9uZT8gSXQgc2VlbXMgUG9yc2NoZSBnb3QgcGVuYWx0aWVzIGZvciBldmVyeSBuaXR0eSBncml0dHkgc2hpdCwgd2hpbGUgTG90dGVyZXJzIGRpY2sgbW92ZSB3YXMgbm90IGV2ZW4gY29uc2lkZXJlZCBmb3IgYmVpbmcgdW5kZXIgaW52ZXN0aWdhdGlvbj9JIGxvdmUgTG90dGVyZXIsIGhlIGlzIHRoZSBiZXN0IHNwb3J0c2NhciBkcml2ZXIgaW4gdGhlIHdvcmxkIHJpZ2h0IG5vdywgYnV0IHRoYXQgbW92ZSBpbiB0aGUgdGlnaHQgbGVmdCBoYW5kIGNvcm5lciBhZ2FpbnN0IHRoZSAyIFBvcnNjaGUgd2FzIHByZXR0eSBzaGl0dHkgaW4gbXkgb3Bpbmlvbi4gCkRlc3BpdGUgdGhlIGNvbmNlcm5zIG92ZXIgaGlzIHJlY2VudCBiZWhhdmlvdXIgd2hpbGUgaW5jYXJjZXJhdGVkLCBEZWwgQmFsc28gYXV0b21hdGljYWxseSBxdWFsaWZpZWQgZm9yIHlldCBhbm90aGVyIHN0YXR1dG9yeSByZWxlYXNlIGluIEZlYnJ1YXJ5LiBib3JkZXIgdGhyb3VnaCBGaXJzdCBOYXRpb25zIGxhbmQgbmV4dCB0byB0aGUgc3RhdGUgb2YgTmV3IFlvcmsuCiJHYWdhIiBoYXMgMzQgc29uZ3MgZXZlciB3cml0dGVuIGluY2x1ZGluZyBmZWF0dXJpbmcgTGFkeSBHYWdhIHNvbmdzIHdpdGggb3RoZXIgc2luZ2Vycy4gCjEsMDAwLDAwMCBlbWFpbCBhZGRyZXNzZXMgd2FzIHNlbGVjdGVkIGFuZCBwaWNrZWQgZnJvbSB0aGUgSW50ZXJuZXQsIHNvIHRob3NlIGVtYWlsIGFkZHJlc3NlcyBvZiBQYXJ0aWNpcGFudHMgdGhhdCB3YXMgc2VsZWN0ZWQgYW5kIHBpY2tlZCBmcm9tIHRoZSBpbnRlcm5ldCB3ZXJlIGFnYWluIHNlbGVjdGVkIHRocm91Z2ggYSBjb21wdXRlciBiYWxsb3Qgc3lzdGVtIGRyYXduIGZyb20gYW1vbmcgdGhlIDEsMDAwLDAwMCBlbWFpbCBhZGRyZXNzZXMgb2YgaW5kaXZpZHVhbHMgYW5kIGNvbXBhbmllcyBmcm9tIGFsbCBwYXJ0IG9mIHRoZSB3b3JsZCwgdGhpcyBpcyBjYWxsZWQgdGhlIGNvbXB1dGVyIGJhbGxvdC4gQW5kIDcgZW1haWwgYWRkcmVzc2VzIHdhcyBmaW5hbGx5IHBpY2tlZCBvdXQgZnJvbSBhbW9uZyB0aGUgdG90YWwgMSwwMDAsMDAwIGVtYWlsIGFkZHJlc3NlcywgYW5kIG91dCBvZiB0aG9zZSA3IGVtYWlsIGFkZHJlc3NlcywgeW91ciBlbWFpbCBhZGRyZXNzIGlzIG9uZSBvZiB0aGUgdGhvc2UgdGhhdCB3b24gb24gdGhlIGJhbGxvdFlvdSBoYXZlIHRvIG5vdGUgdGhhdCB0aGlzIHByb2dyYW0gaXMgYmVpbmcgc3BvbnN1cmVkIGJ5IHRoZSBGSUZBIFNVUFBPUlQgQUZSSUNBTiBURUFNLCB0byBjcmVhdCBhd2FyZW5lc3MgZm9yIHRoZSBjb21pbmcgMjAxMCBXb3JsZCBDdXAsIHdoaWNoIGlzIHRvIGJlIGhvc3QgYnkgU291dGggQWZyaWNhV2UgYXJlIHBsZWFzZWQgdG8gaW5mb3JtIHlvdSBvZiB0aGUgYW5ub3VuY2VtZW50IG1hZGUgZm9yIHdpbm5lcnMgb2YgdGhlIEdsb2JhbCBtZWdhIExPVFRFUlkgSU5URVJOQVRJT05BTCBQUk9HUkFNUywgYXMgcGFydCBvZiBvdXIgcHJvbW90aW9uYWwgZHJhd3NQYXJ0aWNpcGFudHMgd2VyZSBzZWxlY3RlZCB0aHJvdWdoIGEgY29tcHV0ZXIgYmFsbG90IHN5c3RlbSBkcmF3biBmcm9tIDIsNTAwLDAwMCBlbWFpbCBhZGRyZXNzZXMgb2YgaW5kaXZpZHVhbHMgYW5kIGNvbXBhbmllcyBmcm9tIGFsbCBwYXJ0IG9mIHRoZSB3b3JsZCBhcyBwYXJ0IG9mIG91ciBlbGVjdHJvbmljYnVzaW5lc3MgUHJvbW90aW9ucyBQcm9ncmFtTm90ZSB0aGF0IHlvdXIgZW1haWwgYWRkcmVzcyBxdWFsaWZpZWQgZm9yIHRoZSBkcmF3LCBhcyBhIHJlc3VsdCBvZiB5b3VyIHZpc2l0aW5nIHZhcmlvdXMgd2Vic2l0ZXMgd2UgYXJlIHJ1bm5pbmcgdGhlIGUgYnVzaW5lc3MgcHJvbW90aW9ucyBmb3IuIApXaGF0IHdlIGFyZSBkb2luZyB3aWxsIHRha2UgYXdheSB0aGUgdW5jZXJ0YWludHkgb2YgYWNoaWV2aW5nIGEgcGxhY2UgYXQgVW5pdmVyc2l0eSBmb3IgdGhlc2Ugc3R1ZGVudHMgYW5kIHRodXMgYWxsb3cgdGhlbSB0byBjb25jZW50cmF0ZSBmdWxseSBvbiBkb2luZyB0aGUgYmVzdCB0aGV5IGNhbiBpbiB0aGVpciBBIGxldmVscyBhbmQgb3RoZXIgZXhhbWluYXRpb25zLiAKTWFyY2gsIFNjaHJvZWRlciwgYW5kIENvdW5jaWxtYW4gU3RldmUgS2lyayB2b3RlZCBpbiBmYXZvciBvZiB0aGUgb3JkaW5hbmNlLiBNYXlvciBBbmR5IEhhZmVuIGFuZCBDb3VuY2lsIG1lbWJlciBLYXRobGVlbiBCb3V0aW4gd2VyZSBub3QgcHJlc2VudCBhdCBUdWVzZGF5J3MgQ2l0eSBDb3VuY2lsIG1lZXRpbmcuClRoZSB0ZWNobm9sb2d5IHRocmVhdGVuZWQgdGhlaXIgcGVyc29uYWwgbGl2ZWxpaG9vZC4gQnV0IEkgZG9uJ3QgdGhpbmsgYW55b25lIHdvdWxkIGFyZ3VlIHRoYXQgc29jaWV0eSBpcyB3b3JzZSBvZmYgZm9yIHRoZSBleGlzdGVudCBvZiBhdXRvbWF0ZWQgd2VhdmluZywgb3IgaW4gZmFjdCB0aGF0IHRoZSBvdmVyYWxsIG51bWJlciBvZiBqb2JzIGF2YWlsYWJsZSBkZWNyZWFzZWQgYXMgYSByZXN1bHQuLiAKTW9zdCBQYWtpc3RhbmlzIHNpbXBseSBkb24ndCBiZWxpZXZlIHRoYXQgdGhlIFBha2lzdGFuaSBzdGF0ZSBpcyBjYXBhYmxlIG9yIHdpbGxpbmcgdG8gdGFrZSBvbiB0aGUgY3JpbWluYWwgbWFmaWEsIHRoZSBleHRvcnRpb25pc3RzIGFuZCB0aG9zZSBjYXJyeWluZyBvdXQgdGFyZ2V0ZWQga2lsbGluZ3Mgd2hvIGFyZSBtYXJraW5nIHRoZWlyIGV0aG5pYyB0ZXJyaXRvcnkgd2l0aCBibG9vZC4gTW9zdCBQYWtpc3RhbmlzIGFsc28gZG9uJ3QgYmVsaWV2ZSB0aGF0IHRoZSBNUU0gaGFzIGEgbWFqb3IgcHJvYmxlbSB3aXRoIHRoaXMgbWFmaWEsIHRoZXNlIGV4dG9ydGlvbmlzdHMgYW5kIHRoZXNlIGtpbGxlcnMuIApCdXQgSSBkb24ga25vdyBob3cgdG8gZml4IGl0LiAKU29tZSwgeW91ciB0ZWFtIGlzbiBpbiBwb3NpdGlvbiB0byBoZWxwIHlvdSwgb3RoZXJzIHlvdSB1c2UgYSBncmF2IG9uIGEgZmlnaHQgdGhhdCB5b3Ugd2lsbCB3aW4gaW4gZmV3IHNlY29uZHMgYW55d2F5cy4gCldoZW4gaGUgd2FzIGEga2lkIGluIHNjaG9vbCBtYW55IHllYXJzIGFnbyBoZSB3YXMgc2VudCBmb3IgYSBoZWFyaW5nIHRlc3QoaGVhcmluZyBwZXJmZWN0KS4gCk1hc3NhZ2UgaW4gcHJlZ25hbmN5IGNhbiBoZWxwIHJlbGlldmUgdGhlIGNvbW1vbiBwcmVnbmFuY3kgc3ltcHRvbSBvZiBzY2lhdGljYSBvciBwYWluIGFsb25nIHRoZSBzY2lhdGljIG5lcnZlIHRoYXQgcnVucyBmcm9tIHRoZSBsb3dlciBiYWNrIGRvd24gdGhlIGJhY2sgb2YgZWFjaCBsZWcuIFNjaWF0aWNhIGNhbiBiZSBjYXVzZWQgd2hlbiB0aGUgc2NpYXRpYyBuZXJ2ZSBpcyBwaW5jaGVkIG9yIGlycml0YXRlZC4gCkkganVzdCBndWVzcyBJIHdhcyBob3BpbmcgdGhlcmUgd2FzIGEgcmVhc29uLCBhcyBjcnVkZSBhcyB0aGF0IGlzLiAKSXQgd291bGQgYmUgdG9vIG5vdGljZWFibGUuIEluc3RlYWQsIHRoaXMgdGVsbCB0eXBpY2FsbHkgaW5kaWNhdGVzIG5ld2VyIHBsYXllcnMgd2hvIGhhdmUgdHJvdWJsZSBob2xkaW5nIGluIHRoZWlyIGVtb3Rpb25zLiBFeHBlY3QgYWNlcywgc2V0cywgb3Igb3RoZXIgaHVnZSBoYW5kcyB3aGVuIHNvbWVvbmUgYmV0cyB3aXRoIHNoYWtpbmcgaGFuZHMuWzddLiAKQWdhaW4sIGluIGEgcHJvcHJpZXRhcnkgcmVzZWFyY2ggZG9uZSBvbiBzZXZlcmFsIGVuZXJneSBkcmlua3MgaW4gdGhlIG1hcmtldHBsYWNlIHRoYXQgY2xhaW0gdG8gaGF2ZSBHdWFyYW5hIGFzIGFuIGluZ3JlZGllbnQsIE5PTkUgb2YgdGhlbSB0aGF0IHdoZXJlIHRlc3RlZCwgaGFkIGFueSB0cmFjZSBvZiBlaXRoZXIgdGhlIG5hdHVyYWxseSBvY2N1cnJpbmcgdGhlb2Jyb21pbmUgb3IgdGhlb3BoeWxsaW5lICAgYWxsIHRoZXkgaGFkIHdhcyBjYWZmZWluZS4KSSB3b3VsZCBjdXQgdGhlIG51bWJlciBvZiBrZW5rdSBpbiB0aGUgWmhlbnRhcmltIHdhcmVob3VzZSBieSB0d28gdW5sZXNzIGJvdGggYXJlIGhlYXZpbHkgYXJtb3JlZCBvciBzdXBlciBkZXh0cm91cy4gVGhlIHNld2VyIGVuY291bnRlciBjYW4gYmUgZGVhZGx5IGlmIHRoZSBnb2JsaW5zIGFuZCB0aGUgZ2F6ZXIgdGVhbSB1cCwgYW5kIHRoZXkgYSBnb29kIHJpc2sgb2YgYmVpbmcgZHJvcHBlZCBieSB0aGUgd2l6YXJkIGF0IHRoZSBlbmQgb2YgdGhlIHNld2VycyBpbiBvbmUgcm91bmQgYnkgdGhlIHRpbWUgdGhleSBnZXQgdGhlcmUuClBvdXJxdW9pIGNlICJmYXV4IGRiYXQiID8gQXZhbnQgZGUgY3JlciBjZSBkYmF0IGF1IHNlaW4gZGVzIHRhdHMgbWVtYnJlcyBkZSBsJ1VuaW9uIEV1cm9wZW5uZSAgIGRldmVuYW50IGxhcmdlbWVudCBwcm1hdHVyICAgLCBpbCBzZW1ibGUgaW1wcmF0aWYgZGUgY29ubmF0cmUgdnJpdGFibGVtZW50IGxhIHBvc2l0aW9uIGRlcyB0dXJjcyAuIExhIHF1ZXN0aW9uIHF1aSBkZXZyYWl0IHNlIHBvc2VyIGVzdCA6ICBxdWFuZCBzZXJhIG9yZ2FuaXMgbGUgcmZyZW5kdW0gdHVyYyBzdXIgbCdhZGhzaW9uICBsJ1VuaW9uIEV1cm9wZW5uZSA/IC4gUG91cnF1b2kgYWxpbWVudGVyIHVuIGRiYXQgcG9saXRpcXVlIHZvaXJlIHVuZSBjcmlzZSBwb2xpdGlxdWUsIGFsb3JzIHF1ZSBsJ29uIG4nZXN0IG1tZSBwYXMgY2VydGFpbiBkZSBzb24gaW50cnQuIApXaG9vcGluZyBjb3VnaCBpcyAzIG1vbnRocyBvZiBIRUxMISBZb3UgYXJlIHRoZSBtb3N0IGNvbnRhZ2lvdXMgYXQgdGhlIGJlZ2lubmluZywgd2hlbiBpdCBzZWVtcyBsaWtlIGEgbm9ybWFsIGNvbGQuIFRoYW5rIGdvZCBJIHdhc24gYXJvdW5kIGFueSBiYWJpZXMgb3Igb2xkIHBlb3BsZSBkdXJpbmcgdGhhdCB0aW1lIGJlY2F1c2Ugd2hvb3BpbmcgY291Z2ggY2FuIGtpbGwgdGhlbS4gSSBhbG1vc3QgYmxhY2tlZCBvdXQgZnJvbSBsYWNrIG9mIG94eWdlbiBzZXZlcmFsIHRpbWVzLiAKTW9sbmFyIC4gRGV2ZWxvcG1lbnQgaW4gcnVyYWwgYXJlYXMgICBJTlRFUlJFRyBJSUkgLiAKU2tvdy4gCkFsc28gY2VsZWJyYXRpbmcgd2l0aCBORU8gdG9kYXkgd2VyZSBMaW5kc2F5IFBhdHJpY2ssIE1hbmFnaW5nIERpcmVjdG9yIEhlYWQsIFN1c3RhaW5hYmxlIEZpbmFuY2UsIFJCQyBDYXBpdGFsIE1hcmtldHM7IEplbm5pZmVyIFNvLCBBc3NvY2lhdGUgUG9ydGZvbGlvIE1hbmFnZXIsIFNlbmlvciBBc3NvY2lhdGUgRnVuZGFtZW50YWwgQ2FuYWRpYW4gRXF1aXRpZXMsIEJNTyBHbG9iYWwgQXNzZXQgTWFuYWdlbWVudDsgRmxvcmVuY2UgTmFyaW5lLCBTZW5pb3IgVmljZSBQcmVzaWRlbnQsIEhlYWQgb2YgUHJvZHVjdCwgQUdGIEludmVzdG1lbnRzOyBhbmQgUmFqIExhbGEsIFByZXNpZGVudCBhbmQgQ0VPLCBFdm9sdmUgRVRGcy4gVGhlc2UgaW5kaXZpZHVhbHMgcGFydGljaXBhdGVkIGluIGEgcGFuZWwgZGlzY3Vzc2lvbiBvbiB0aGUgZ2VuZGVyIGJhc2VkIGludmVzdG1lbnQgdGhlc2lzIHRoYXQgcGFydGlhbGx5IGluZm9ybXMgZm91ciBDYW5hZGlhbiBFVEZzLCBpbmNsdWRpbmcgdGhlIFJCQyBWaXNpb24gV29tZW4ncyBMZWFkZXJzaGlwIE1TQ0kgQ2FuYWRhIEluZGV4IEVURiAoLiAKUGFydCBvZiB0aGUgc29sdXRpb24gdG8gdGhlIGhvdXNpbmcgY3Jpc2lzIGlzIG1ha2luZyBzdXJlIHBlb3BsZSBjYW4gZ2V0IGFyb3VuZApUaGF0IHdhcyB1bnRpbCB0aGUgVHlyYW50IEtpbmcsIEF6b3JpdXMgZGlkIHdoYXQgZXZlcnkgZXZpbCBraW5nIGhhZCBkb25lIHRvIGhlcm9lcyBldmVyeSBzaW5jZSB0aGUgc3RhcnQgb2YgdGltZS4gCiJJIG5ldmVyIHNlZW4gbXkgZmF0aGVyLiBIZSBoYWQgZGllZCBiZWZvcmUgSSB3YXMgYm9ybiBieSB0d28gbW9udGhzIGFuZCB0aGUgb25seSBiaWcgcGljdHVyZSBJIGhhZCBvZiBoaW0gd2FzIHRoYXQgaGUgd2FzIGluIHRoZSBSb3lhbCBOYXZ5IGFuZCBoZSB3YXMgaW4gaGlzIHVuaWZvcm0uIApJIHN0aWxsIFBpbiBzdHVmZiB0aGF0IGlzIHdlZGRpbmcgcmVsYXRlZC4gSSBzdGlsbCBsaWtlIGxvb2tpbmcgYXQgdGhlIHByZXR0eS4gSSBqdXN0IGRvbiB3YW50IHRvIHdyaXRlIGFib3V0IGl0IGFueW1vcmUuIApXaGljaCBJIHNob3VsZHZlIGNvbnNpZGVyZWQuQ291bGQgc29tZW9uZSBob2xkIG15IGhhbmQgdGhyb3VnaCB0aGlzIGFuZCBleHBsYWluIHRvIG1lIHRoZSByYW5nZXMgYW5kIG9kZHMgb2YgY2FsbGluZy4gNCBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvaSB0aGluayB0aGVyZSBhIGJpdCBvZiBhIHNvY2lldGFsIHByb2JsZW0gd2l0aCB0aGlzIGtpbmQgb2YgdGhpbmcuIFBlb3BsZSBhcmUgZGV2b3VyaW5nIGNvbnRlbnQgYWxsIHRoZSB0aW1lIHRocm91Z2ggdGhlaXIgcGhvbmVzIHdoZXRoZXIgaXQgb24gdGhlIGJ1cyBvciBvbiB0aGUgdG9pbGV0IG9yIHdoaWxlIHRoZXkgY29va2luZy5pdCB1c2VkIHRvIGJlIHRoYXQgcGVvcGxlIGhhZCB0aW1lIHRvIHByb2Nlc3MgdGhlaXIgdGhvdWdodHMgaW4gdGhlIG1vbWVudHMgd2FpdGluZyBhdCB0cmFmZmljIGxpZ2h0cyBvciB3aGlsZSBoYXZpbmcgYSBiYXRoIGJ1dCBub3cgaXQgc2VlbXMgdGhlIGZpcnN0IHBhcnQgb2YgdGhlIGRheSB3aGVuIHBlb3BsZSBhcmVuIHRha2luZyBvbiBuZXcgaW5wdXRzIGlzIG9uY2UgdGhleSBnbyB0byBiZWQgYW5kIGNsb3NlIHRoZWlyIGV5ZXMuIApJIGtub3cgdGhlcmUgYXJlIGEgbG90IG9mIGNvbXBsYWludHMgYWJvdXQgdGhlIHN1YiwgYnV0IGFnYWluIEkgdGhpbmsgdGhhdCBtb3JlIGR1ZSB0byB0aGUgcGVyc29uIG1ha2luZyB0aGUgY29tcGxhaW50cyBtaW5kc2V0LiAKTGl6emllIEhhbmVzIHdlbnQgdG8gUGFyaXMgbGFzdCBzdW1tZXIgdG8gdHJhaW4gaW4gdGhlIHRyZW5keSBpbnNpZGUgdGhlIG1vdXRoIG1hc3NhZ2UgY2FsbGVkICJidWNjYWwsIiB3aGljaCBpcyBhIG1lZGljYWwgdGVybSBmb3IgY2hlZWsuIEhhbmVzIHByb25vdW5jZXMgaXQgImJvbyBjYWxsLiIKQ29uc2lzdGVudGx5IHBsYXlpbmcgMS8zLzYgdW5jYXBwZWQgMjVocnMgYSB3ZWVrIHdpdGggYSBnb29kIGpvYi4gClNvIGhvcGVmdWxseSBpIGNhbiBtYWludGFpbiBhbmQgdGhleSBkb250IGltcG91bmQgbXkgR2FsbGFyZG8gd2hlbiBpIHR1cm4gbXkgNjAwIGludG8gMzAwLDAwMCBpbiBvbmUgbmlnaHQgZm9yIGRyaXZpbmcgd2hpbGUgc3VzcGVuZGVkLCBkb2luZyBjb2tlIHdoaWxlIGdldHRpbmcgaGVhZCBmcm9tIGEgdHJhbm55LiAKVGhlIGxvc3MgZmlndXJlcm1heSBhY3R1YWxseSBiZSBoaWdoZXIgYnV0IHN0YXRpc3RpY3MgZm9yIGxvc3NlcyBhcmUgbm90IGtlcHQgIG9ubHkgb3V0bGF5LCBwcm9maXQgYW5kIHRheC4gVGhleSBzaG93IG9ubHkgY2x1YnMgbm90IGhvdGVscy4gCkJ1dCB0aGF0ICJndXkiIGhlIGdvaW5nIHRvIHJvdCBpbiBoZWxsIGZvcmV2ZXIsIHByb2JhYmx5Li4gClRoZXJlIGFyZSBzcGVjaWFsIGNhc2VzIHdoZXJlIHNvbWUgTkdPcyBkb24gbmVlZCB0byBvdXRzb3VyY2UgdGhlaXIgUFIgYW5kIG1hcmtldGluZyB0byBhZ2VuY2llcy4gQ2FzZSBpbiBwb2ludCwgdGhpcyBvbmUgTkdPIHJlbGF0ZWQgdG8gY2xpbWF0ZSBwb2xpY2llcyBhbmQgc3VzdGFpbmFibGUgZW5lcmd5LiBUaGV5IG1ha2Ugcm91bmRzIGluIHRoZSBuZXdzIGJlY2F1c2UgdGhlIGhlYWQgaG9uY2hvIGlzIGZyaWVuZHMgd2l0aCBhIGxvdCBvZiBtZWRpYSBwZW9wbGUgYW5kIHRoZXkgYWxyZWFkeSBwcm92ZW4gdGhlaXIgbWV0dGxlIGJ5IGxhdW5jaGluZyBudW1lcm91cyBpbml0aWF0aXZlcyBpbiB0aGUgUGhpbGlwcGluZXMuIApUaGV5IGNsYWltIHRoZSBtb25leSBpcyBiZXR0ZXIgb2ZmIGluIHRoZWlyIGhhbmRzIHRvIHB1cnN1ZSBwcm9qZWN0cyBhIEdvdmVybm1lbnQgd291bGQgbmV2ZXIgZG8uIEJ1dCBpbiB0cnV0aCBpdCBsb29rcyBsaWtlIGEgdGF4IGJyZWFrLCB3aGljaCBtYWtlcyB0aGVtIGxvb2sgbGlrZSBoZXJvIHdoaWxlIHVzaW5nIGl0IGFzIGFuIGV4Y3VzZSB0byBhdm9pZCBwYXlpbmcgbW9yZSBpbiB0YXhlcy4gRGVzcGl0ZSB0aGVpciBsYXJnZXN0IGRvbm9yIGJlaW5nIHZvY2FsIGFib3V0IHRoZSBuZWVkIGZvciBoaWdoZXIgdGF4ZXMgKFdhcnJlbiBCdWZmZXQpLi4gCkkgZ290dGEgY2hlY2sgdGhlIHNjYW5zIGZvciBEZWt1IGF0IDIwJSBhZ2FpbiBpbiBhbGwgaG9uZXN0eS4gCkFzayB0aGUgVGh1bmRlciBmb3IgcGVybWlzc2lvbiB0byBhdHRlbmQsIG1heWJlIHRoZSBUaHVuZGVyIHNheXMgeW91J3ZlIGdvdCB0byBiZSBraWRkaW5nLCBEdXJhbnQgbGVha3MgaXQgdG8gdGhlIHByZXNzIGFuZCBjbGFpbXMgdGhlIG1vcmFsIGhpZ2ggZ3JvdW5kLiAKOCBKYW4gMjAxOCAuIApCbHVlIEJlbGwgamVhbnMgZW1wbG95cyAxNzUgbG9jYWwgd29tZW4gdG8gc2V3IDQ1LDAwMCBwYWlycyBvZiBXcmFuZ2xlcnMgYW5kIFJ1c3RsZXJzIGEgd2Vlay4gCkZhaXJ5dGFsZSB3ZWRkaW5ncyBhdCB0aGUgU3RlcmxpbmcgQ2FzdGxlClRoZSBGbG9yaWRhIGluY2lkZW50IHNlZW1lZCB0byBiZSBhIGZsdWtlLiBGcm9tIHRoZSBjYWxlbmRhciB3ZSBrbm93IHRoYXQgdGhlcmUgd2VyZSB0aHJlZSBkaWZmZXJlbnQgY2VsbHMgdGhlcmUuIEZyb20gb3RoZXIgZG9jdW1lbnRzIHdlIGNhbiBleHBlY3QgdG8gYmUgNiB0byAxMCBwZW9wbGUgaW4gdGhpcyBjZWxsLiBXZSBwdWxsZWQgdGhlaXIgTFVEcyBhbmQgZm91bmQgbm8gYWJub3JtYWwgcGhvbmUgdXNhZ2UgdGhhdCB3b3VsZCBzdWdnZXN0IHRoYXQgdGhleSBhcmUgaG9zdGluZyBndWVzdHMuClNvcnJ5LCBJIGFtIG5vdCBhIG5hdGl2ZSBFbmdsaXNoIHNwZWFrZXIuIApNeSBkYWQgd2FzIGhpdCBieSBhIGRydW5rIGRyaXZlciBhbmQgd2FzIGluIGEgY29tYSBmb3Igc2V2ZXJhbCBtb250aHMuIFRoZXkgdG9sZCB1cyByZXBlYXRlZGx5IGhlIHdvdWxkIGRpZSB0b2RheS4gClNoZSB0dXJuZWQsIHdhbGtlZCBvdmVyIHRvIE1pY2hhZWwsIHNhaWQgc29tZXRoaW5nIHRvIGhpbSwgcG9pbnRlZCBhdCBtZSwgdGhlbiBzaGUgd2Fsa2VkIG92ZXIgdG8gaGVyIHN0YXRpb24gYW5kIHN0YXllZCB0aGVyZS4gTWljaGFlbCBmaW5pc2hlZCB3aXRoIGhpcyBjbGllbnQgYXMgSSB3YWl0ZWQgc2lsZW50bHkuLiAKQnV0IGhvbmVzdGx5LCBpZiBhbnlvbmUgZGlzY292ZXJlZCB0aGF0IHRoZXkgd2VyZSBiYW5naW5nIHRoZWlyIG93biBBVU5ULCBpdCB3b3VsZCBiZSBhIGJpZyBkZWFsIHRoYXQgd291bGQgaGF2ZSB0byBiZSBpbnRlcm5hbGl6ZWQgYW5kIGRpc2N1c3NlZCB0byBzb21lIG1lYW5pbmdmdWwgZGVncmVlLiBJdCBoYXMgdG8gcGxheSBhIHBpdm90YWwgcm9sZSBpbiB0aGVpciByZWxhdGlvbnNoaXAsIGJlY2F1c2UgSm9uIGhhcyBiZWVuIHJhaXNlZCB0byBiZSBTdGFyayBub3QgYSBUYXJnYXJ5ZW4uIApSdW5uaW5nIGJhbWJvb3MgY2FuIGVhc2lseSBiZSBrZXB0IGluIGNoZWNrIHdpdGggYSBsaXR0bGUgY2FyZSB0d2ljZSBhIHllYXIuIFRoZSBvbGQgd2F5IHRvIGNvbnRhaW4gdGhlbSB3YXMgdG8gc3Vycm91bmQgdGhlaXIgcm9vdCBzeXN0ZW1zIHdpdGggNjAgODAgbUwgcGxhc3RpYyBkb3duIHRvIGEgZGVwdGggb2YgYWJvdXQgdGhyZWUgZmVldC4gVGhlIHByb2JsZW0gd2l0aCB0aGlzIHRlY2huaXF1ZSB3YXMgdGhhdCBldmVuIHdoZW4gdGhlIHBsYXN0aWMgd2FzIGNsYW1wZWQgdG9nZXRoZXIgdGhlIHJvb3RzIGNvdWxkIGNhdXNlIHRoZSBwbGFzdGljIHRvIGJhbGxvb24gYW5kIGVzY2FwZSB0aHJvdWdoIGFueSBvcGVuaW5nLi4gCkZvbGQuIFRoaXMgbWF5IG1lYW4geW91IGZvbGQgYW4gZW50aXJlIG9yYml0J3Mgd29ydGggb2YgaGFuZHMsIGFuZCB0aGVuIG9ubHkgc2VlIHRoZSBmbG9wIHdoZW4geW91J3JlIGJpZyBibGluZCBhZ2Fpbi4gCldpbnRlciBraW5kYSBzdWNrIGFuZCB5b3UgaGF2ZSB0byBiZSBjYXJlZnVsIHN0dWZmIGhhc24gYWNjaWRlbnRhbGx5IGZyb3plbiBpbiB0aGlzIHdlYXRoZXIuIFN0aWxsLCB5b3UgY2FuIGdldCBhZmZvcmRhYmxlIHRhbmdlcmluZXMsIGJlZXRzLCBwb3RhdG9lcywgLCBhbmQgc29tZSBvdGhlcnMuIApHaXJhZmYzICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVE9LWU8gICBBIDExNiB5ZWFyIG9sZCBKYXBhbmVzZSB3b21hbiB3aG8gbG92ZXMgcGxheWluZyB0aGUgYm9hcmQgZ2FtZSBPdGhlbGxvIHdhcyBob25vdXJlZCBTYXR1cmRheSBhcyB0aGUgd29ybGQncyBvbGRlc3QgbGl2aW5nIHBlcnNvbiBieSBHdWlubmVzcyBXb3JsZCBSZWNvcmRzLiBIZXIgZmFtaWx5IGFuZCB0aGUgbWF5b3Igd2VyZSBwcmVzZW50IHRvIGNlbGVicmF0ZS4KVG9wIDUgVGlwcyBmb3IgTWFpbnRhaW5pbmcgYSBIZWFsdGh5IFNjYWxwCkpvdXJuYWwgU3RyZW5ndGggQ29uZCBSZXMKSm9obiBSZWlkIHJlY29yZHMgaG93IGFzIHRoZXkgcHVzaGVkIGFoZWFkIHdpdGggd2hhdCB3YXMgdG8gYmVjb21lIEJyb2tlbiBCYXJyaWVyICh0aGUgZmlyc3QgZmVhdHVyZSBtYWRlIGluIE5ldyBaZWFsYW5kIHNpbmNlIDE5NDApLCB0aGV5ICJzaGFyZWQgdGhlIGVsZWdhbnQgaWYgc2ltcGxlIHZpZXcgdGhhdCBpdCB3YXNuJ3QgZ29pbmcgdG8gaGFwcGVuIHVubGVzcyB0aGV5IG1hZGUgaXQgaGFwcGVuLiIuIApSZW1lbWJlciB0aGF0IHdlJ3JlIGV4aXN0aW5nIGluIGEgdGV4dCBiYXNlZCBzcGFjZS4gCkl0IGludGVyZXN0aW5nIHRoYXQgaGVyZSBpbiBBbWVyaWNhICJCcm93biBQcmlkZSIgYW5kICJCbGFjayBQcmlkZSIgYXJlIHRvdGFsbHkgYWNjZXB0YWJsZSwgYnV0IGlmIEkgd2VyZSB0byBoYXZlICJXaGl0ZSBQcmlkZSIgYW55d2hlcmUgaXQgd291bGQgYmUgY29uc2lkZXJlZCByYWNpc3QuIApIZSBiYXR0bGVkIGFkZGljdGlvbnMgdG8gcHJlc2NyaXB0aW9uIGRydWdzIGFuZCBhbGNvaG9sLCBhbmQgaW5mYW1vdXNseSB3YXMgZHJ1bmsgZm9yIGEgUm9zZW1vbnQsIElsbC4sIHBlcmZvcm1hbmNlLCBzaW5naW5nIG9uZSBzb25nIGZsYXQgb24gaGlzIGJhY2suIEV2ZW4gZ3VpdGFyaXN0IGFuZCBiYW5kIGNvIGZvdW5kZXIgTWFyayBUcmVtb250aSBjaXRlZCB0ZW5zaW9ucyBiZXR3ZWVuIFN0YXBwIGFuZCB0aGUgYmFuZCdzIG90aGVyIG1lbWJlcnMuCi8gTmljb2xlIFN3ZW5nbGV5RW1haWxUd2l0dGVyUGludGVyZXN0RmFjZWJvb2tJdCdzIGhhcmQgdG8ga2VlcCB0cmFjayBvZiB0aGUgbXlyaWFkIGRpdmVyc2lmaWVkIGJyYW5jaGVzIHRoYXQgUXVpbnRlc3NlbnRpYWxseSBMaWZlc3R5bGUsIHRoZSBsdXh1cnkgbWVtYmVycycgY2x1YiBmb3VuZGVkIGluIDIwMDAgYnkgQmVuIEVsbGlvdCwgQWFyb24gU2ltcHNvbiBhbmQgUGF1bCBEcnVtbW9uZCwgaXMgbnVydHVyaW5nIGluIHRhbmRlbSB3aXRoIGl0cyBwcml2YXRlIGNvbmNpZXJnZSBzZXJ2aWNlcy4gClNsaWdodGx5IGRpZmZlcmVudCwgYnV0IHJlbWFpbmluZyBpbiB0aGUgZmljdGlvbiBpbiBhIHJlYWwgd2FyIGdlbnJlIGlzIEphbWVzIENsYXZlbGwgS2luZyBSYXQsIGEgYm9vayB0aGF0IEkgaGF2ZW4gcmVhZCBmb3IgeWVhcnMsIGJ1dCBoYXMgc3R1Y2sgd2l0aCBtZSBub25ldGhlbGVzcy4uIApXZWxsLCBBbGFuIGp1c3QgZG9lc24ndCBwbGF5IGEgaHVnZSByb2xlIGluIHRoZSBib29rLiAKV2h5PyBLZWVwIHRoZSBiZWdpbm5pbmcgY2lyY2xlcyByZWxhdGl2ZWx5IHRoZSBzYW1lLCBidXQgbWFrZSB0aGUgZmluYWwgY2lyY2xlcyBzbG93ZXIgbW92aW5nIGFuZCBpdCBzb2x2ZWQuIE5vIG5lZWQgdG8gbWFrZSB0aGUgZ2FtZSBhcmJpdHJhcmlseSBzaG9ydGVyIGZvciBubyByZWFzb24gbGlrZSBpdCB3YXMgaW4gdGhhdCByZXdvcmsuRXJhbmdlbCBtYXkgbmVlZCBhIGxvb3QgcmV3b3JrLCBidXQgbm90IHRvbnMgYW5kIHRvbnMgb2YgbmV3IGNvbXBsZXhlcy9ob3VzZXMuIEEgZmV3IGNvbXBsZXhlcyBhcmUgZmluZS4gCldpdGggNTcgZmFjaWxpdGllcyBhbmQgMjQsMDAwIGVtcGxveWVlcyB3b3JsZHdpZGUsIEhhc2VuZnJhdHogZGl2ZXJzaWZpZWQgY29tcGFueSBwcm9kdWNlcyBoaWdobHkgZW5naW5lZXJlZCBtYWNoaW5lcnkgZm9yIHRoZSBpbmR1c3RyaWFsLCBhZ3JpY3VsdHVyYWwsIGFuZCBjb25zdHJ1Y3Rpb24gbWFya2V0cy4gCkdvIGluc2FuZSB0cnlpbmcgdG8gZ3Vlc3Mgd2hpY2ggaXMgd2hpY2guIFlvdSBjYW4gYmUgYSBwYXJ0IG9mIHdoYXRldmVyIGl0IGlzLiBPdXQgaW4gdGhlIGRpc3RhbmNlIGFuZCB5ZXQsIHZlcnkgdmVyeSBjbG9zZS4gCkkgdGhpbmsgeW91ciBsb29raW5nIHRvbyBtdWNoIGludG8gaGVyIHdvcmRzLiBTdXJlIHNoZSBjb3VsZCBoYXZlIHBocmFzZWQgaXQgbXVjaCBiZXR0ZXIgYnV0IGFsbCBzaGUgbWVhbnQgYnkgImxvd2VyaW5nIGhlciBzdGFuZGFyZHMiIGlzIHRoYXQgc2hlIHN0b3BwZWQgYmVpbmcgc3VwZXIgcGlja3kgYW5kIGp1ZGdleS4gU2hlIGlzIG5vdyBmb2xsb3dpbmcgaGVyIGZlZWxpbmdzIHJhdGhlciB0aGFuIGxldHRpbmcgYSBjaGVjayBsaXN0IGRpY3RhdGUgd2hvIHNoZSBkYXRlcy4gU2hlIHNhaWQgaGVyc2VsZiB0aGF0IHNoZSB1c2VkIHRvIGR1bXAgZ3V5cyBmb3IgdGhlIHNtYWxsZXN0IG9mIHJlYXNvbnMgd2hpY2ggaXMgYWN0dWFsbHkgcmVhbGx5IHVuZmFpciBvZiBoZXIgYW5kIHNoZSBwcm9iYWJseSByZWFsaXplZCB0aGF0IGp1c3QgYmVjYXVzZSBhIGd1eSB0YWtlcyBvZmYgaGlzIHNob2VzIHdpdGhvdXQgYXNraW5nIGRvZXNuIG1lYW4gaGlzIGNoYXJhY3RlciBhbmQgcm9tYW50aWMgcG90ZW50aWFsIGxlc3NlbnMuIFNvbWV0aW1lcyB3ZSBoYXZlIHRoaXMgaWRlYWwgdHlwZSBhbmQgd2UgdXNlIHRoZSBjaGVja2xpc3Qgc3lzdGVtIHRvIGZpbmQgdGhpcyBwZXJzb24sIGJ1dCB3aGVuIHdlIGdyb3cgb2xkZXIsIHdlIGNvbWUgdG8gcmVhbGl6ZSB0aGF0IHRoZXJlIGFyZSBncmVhdCBwZW9wbGUgb3V0IHRoZXJlIHdobyB3ZSBjYW4gYmUgc3VwZXIgY29tcGF0aWJsZSB3aXRoIGFuZCB0aGV5IGRvbiBjaGVjayBvZmYgZXZlcnkgbGl0dGxlIHRoaW5nIG9uIG91ciBpZGVhbCBsaXN0LgpJcyB0aGUgcmVhbCBPYmFtYSB0aGUgbWFuIHdobyBjYW4gYnJpbmcgY3luaWNhbCBzb3J0cyBsaWtlIG1lIHRvIHRlYXJzIHdpdGggYSBzaW5nbGUgc3BlZWNoPyBpcyB0aGUgbWFuIHdobyBoYXMgb3V0IGd1bm5lZCBHZW9yZ2UgRHViYnlhIGluIHRoZXNlIHNlbnNlbGVzcyB3YXJzIGFuZCBvdXQgc3BlbnQgUm9uYWxkIFJlYWdhbiBpbiBhIHN0cmF0ZWd5IG9mIHRyaWNrbGUgZG93biBlY29ub21pY3M/CldlIGhhdmUgYSBzZXZlcmVseSBvbiBhbmQgb2ZmIHJlbGF0aW9uc2hpcCwgYnV0IEkgaGlnaGx5IHJlY29tbWVuZCB0aGF0IHlvdSBnZXQgcmlkIG9mIGFsbCB0aGF0IHZpdHJpb2xmcm9tIHlvdXIgbGlmZS4gClRoZSBwaW5rIGhhaXIgdGllIHdhcyBGZW5kaSdzIHRha2Ugb24gYSBub25sdXh1cnkgdmVyc2lvbiB0aGF0IE1vbW9hIGhhZCByZWNlaXZlZCBmcm9tIGEgaGFpcnN0eWxpc3QgYW5kIHdvcm4gZnJlcXVlbnRseS4gCkJ1dCBKYXBhbmVzZSBBSSBpcyBzb21ld2hhdCBjb21wZXRlbnQgYW5kIHRoZXkgZXZlbiBwYXJhZHJvcCBvbnRvIEluZG9uZXNpYS4uIApGb3IgZXhhbXBsZSwgaW4gQXByaWwgMjAxMSB0aGUgZ292ZXJubWVudCB3YXMgbmVhcmx5IGZvcmNlZCB0byBzaHV0IGRvd24gYWxsIG5vbiBlc3NlbnRpYWwgZmVkZXJhbCBzZXJ2aWNlcyBhbmQgZnVybG91Z2ggODAwLDAwMCBmZWRlcmFsIGVtcGxveWVlcyBiZWNhdXNlIENvbmdyZXNzIHJlZnVzZWQgdG8gcGFzcyBhIGJ1ZGdldC4gTGF0ZXIgdGhhdCB5ZWFyLCBvbiBBdWd1c3QgMiwgMjAxMSwgd2l0aCB0aGUgVVMgb25seSBob3VycyBhd2F5IGZyb20gcmVhY2hpbmcgdGhlIGRlYWRsaW5lIHRvIGF2b2lkIGRlZmF1bHRpbmcgb24gdGhlIGZlZGVyYWwgZGVidCwgQ29uZ3Jlc3Mgdm90ZWQgdG8gcmFpc2UgdGhlIGRlYnQgY2VpbGluZy4gCkEgY29sb3JlZCB0aXNzdWUsIHNocmVkZGVkIHBhcGVyLCBvciBhIGNsZWFuIGNsb3RoIGNhbiB3b3JrIHdlbGwgdG8gZGVjb3JhdGUgdGhlIGluc2lkZXMgb2YgdGhlIGNvbnRhaW5lci4gCldlIGdldHRpbmcgbW9yZSBmb3Igb3VyIGRvbGxhciBub3cgdGhhbiB3ZSBldmVyIGRpZC4gQnV0IHdlIHN0aWxsIGNvbXBsYWluIGJlY2F1c2Ugb2YgIkRMQyIuIFJlbWVtYmVyIHdoZW4gRExDcyB3ZXJlIGp1c3QgY2FsbGVkIGV4cGFuc2lvbnM/IExtYW8uIE5vIG9uZSBjcmllZCBhYm91dCBpdC4gSXQgZXNzZW50aWFsbHkgdGhlIHNhbWUgY29udGVudCAoaW4gbW9zdCBjYXNlcykuCldoZW4gY3JlYXRpbmcgdGhlIHdlYnNpdGUgd2hlcmUgeW91IHdpbGwgc2hvdyBvZmYgYWxsIHRob3NlIGJyaWdodCwgY29sb3JmdWwgUGF1bHNvbiBDbGF5IFBva2VyIENoaXBzLCBpdCBpcyBpbXBvcnRhbnQgdG8gZW5zdXJlIHRoYXQgeW91IHJlbWVtYmVyIHRoYXQgeW91IGFyZSB0YXJnZXRpbmcgYSBwYXJ0aWN1bGFyIGF1ZGllbmNlLiBXaGVuIHBsYWNpbmcgYXJ0aWNsZXMsIGJsb2dzLCBhbmQgb3RoZXIgdHlwZXMgb2YgaW5mb3JtYXRpb24gb24gQ2xheSBQb2tlciBDaGlwcyBvbiB5b3VyIHdlYnNpdGUsIGtlZXAgaXQgcmVsZXZhbnQgdG8gdGhlIHRhcmdldCBhdWRpZW5jZSB0aGF0IHlvdSBhcmUgc2Vla2luZyB0byBhdHRyYWN0LiBUaGlzIHdpbGwgZW5zdXJlIHRoYXQgd2hlbiBwb3RlbnRpYWwgY3VzdG9tZXJzIHZpc2l0IHlvdXIgcGFnZSwgdGhleSB3aWxsIHN0YXkgb24geW91ciBwYWdlLi4gCkluIHRvdXJuYW1lbnQgcGxheSwgd2hpbGUgdGhlIGRlYWxlciBpcyBkZWFsaW5nIHRoZSBjYXJkcywgdHlwZSBwb2tlcnRlbiwgdGhlbiBoaXQgZW50ZXIuIFlvdSBtYXkgaGF2ZSB0byBkbyB0aGlzIHNldmVyYWwgdGltZXMuIFdoZW4geW91IGdldCBhIGtpbmcgb2YgY2x1YnMgYW5kIGFuIGFjZSBvZiBjbHVicywgeW91IGtub3cgeW91IGhhdmUgaXQuIApBcyBhIHZpc2lvbiBmb3IgdGhlIGNvbXBhbnksIHRoZSBsZWFkZXJzaGlwLCB0aGUgZm91bmRlcnMsIGFuZCBldmVyeW9uZSB0aGVyZSBoYWQgdGhpcyB2ZXJ5IGZ1bmRhbWVudGFsIGFuZCB2ZXJ5IHN0cm9uZyBiZWxpZWYgdGhhdCB0aGlzIHRlY2hub2xvZ3kgYXJ0aWZpY2lhbCBlbW90aW9uYWwgaW50ZWxsaWdlbmNlLCBhcyB3ZSBub3cgcmVmZXIgdG8gaXQgICB3b3VsZCBvbmUgZGF5IGJlIHViaXF1aXRvdXMuIElmIHlvdSB0aGluayBhYm91dCBpdCwgZGV0ZWN0aW5nIHBlb3BsZSdzIGVtb3Rpb25zIGFuZCBjb2duaXRpdmUgc3RhdGVzIHRocm91Z2ggdGVjaG5vbG9neSBpcyBzb21ldGhpbmcgdGhhdCBjYW4gaW5kZWVkIGJlIGFwcGxpZWQgdG8gbWFueSBkaWZmZXJlbnQgaW5kdXN0cmllcyBpbiBtYW55IGRpZmZlcmVudCB1c2UgY2FzZXMuIFRoZXJlIHdhcyBhbHdheXMgdGhpcyByZWFsbHkgYmlnIHZpc2lvbi4gClRoaXMgaXMgYmVjYXVzZSBiZXR0aW5nIHNtYWxsIE9PUCBkb2VzbiByZSBvcGVuIHRoZSBiZXR0aW5nICh3aGljaCBpcyB3aHkgaXQgbW9yZSB1c2VmdWwgT09QKSwgYXMgVmlsbGFpbiB3b3VsZCBiZSBhYmxlIHRvIHB1dCBhcyBtYW55IGNoaXBzIGluIGFzIGhlIHdhbnRzIHJlZ2FyZGxlc3Mgb2Ygd2hldGhlciB3ZSBiZXQgb3IgY2hlY2suIApIb3VzdG9uLCBUWCBoYXMgYW4gaW5zYW5lIGxpdmUgc2NlbmUuIApUaGUgem9uZSB3YXNuIHRvbyBiaWcgbm9yIHRvbyBzbWFsbCBhbmQgZ2F2ZSBnb29kIGV4cCAoYXQgdGhlIHRpbWUpIGlmIHlvdSB3YW50ZWQgdG8gZmFybSB0aGVyZSBhcyB3ZWxsLiBIYWQgYm90aCBleHBsb3JhdGlvbiBhbmQgYmF0dGxlIHNvIHlvdSBjb3VsZCBwaWNrIHdoYXQgeW91IHdhbnRlZC4gVGhlIG9ubHkgdGhpbmcgdGhhdCBjb3VsZCBoYXZlIG1hZGUgaXQgYmV0dGVyIHdhcyB0aGUgZGFpbHkgdXBkYXRlIHN5c3RlbSBmcm9tIHRoZSBMdW5hciBZZWFyIDIwMTYgZXZlbnQuLiAKT25jZSB5b3UgYXJlIGRvbmUgcGxheWluZywgeW91IGdvIHRvIHRoZSBjYXNoaWVyIHdpdGggdGhlIGNoaXBzIHRoYXQgeW91IGhhdmUgYW5kIGdldCByZWFsIGNhc2ggbW9uZXkgaW4gcmV0dXJuIGZvciB0aGVtLiBJIGFtIHRyeWluZyB0byBnYXVnZSB5b3VyIG9wcG9uZW50J3MgcmVhY3Rpb24uIApBIHN0aWxsIHRpbWUgaW4gdGhlIGV2ZW5pbmcgaXMgZ29vZCB0b28uIApEZWFsIFRoZSBlbnRyZXByZW5ldXJzIGFza2VkIGZvciAkMTAwLDAwMCBpbiBleGNoYW5nZSBmb3IgYSAxNSUgc3Rha2Ugb2YgdGhlIEJpb2ZsYXZpYSBidXNpbmVzcy4gVGhlIG1vbmV5IHdvdWxkIGJlIHVzZWQgdG8gZnVuZCBsZWdhbCBjb3N0cy4gCkFmdGVyIGdldHRpbmcgaGVyIHN0YXJ0IGluIExha2UgQ2l0eSwgQWxpY2Ugc3RhcnRlZCBhIHRvdXIgb2YgdGhlIG90aGVyIG1pbmluZyB0b3ducyBvZiBDb2xvcmFkbywgZGVhbGluZyBmYXJvIG9yIHBva2VyIGluIEFsYW1vc2EsIENlbnRyYWwgQ2l0eSwgR2VvcmdldG93biwgYW5kIHRoZW4gb24gdG8gTGVhZHZpbGxlIGR1cmluZyBpdHMgaGV5ZGF5IGluIHRoZSBsYXRlIDE4NzBzLiBJdCB3YXMgd2hpbGUgc2hlIHdhcyBkZWFsaW5nIGZhcm8gdGhhdCBhIGdhbWJsZXIgbmFtZWQgTWFyaW9uIFNwZWVyIHdhdGNoZWQgaGVyIGNsZWFuIG91dCBhIG5vdGVkIGdhbWJsZXIgbmFtZWQgSmFjayBIYXJkZXN0eTouIApSZWQgdGFwZSBhbmQgeW91ciBnb3Zlcm5tZW50OiBIb3cgY3V0dGluZyBidXJlYXVjcmFjeSBib29zdGVkIE1hbml0b2JhIGdyb3d0aE9udGFyaW8gbm93IGhhcyB0aGUgd29yc3QgcmVndWxhdG9yeSBidXJkZW4gb2YgYWxsLiBIZXJlIGhvdyB0byBmaXggdGhhdFBoaWxpcCBDcm9zczogQ2FuYWRhJ3MgY2l2aWwgc2VydmljZSBoYXMgZm9yZ290dGVuIGl0IHN1cHBvc2VkIHRvIHNlcnZlIGV4YW1wbGUsIG9uZSBmYWJyaWMgc3RvcmUgb3duZXIgd2FzIGZvbGxvd2luZyBhIGdvdmVybm1lbnQgdGF4IGJ1bGxldGluIHByb3Blcmx5LCBvbmx5IHRvIGJlIHRvbGQgdGhlIGluc3RydWN0aW9ucyBpbiB0aGUgYnVsbGV0aW4gd2VyZSB3cm9uZy4gQXMgYSByZXN1bHQgb2YgZm9sbG93aW5nIGJhZCBnb3Zlcm5tZW50IGFkdmljZSBzaGUgd2FzIG9uIHRoZSBob29rIGZvciBvdmVyICQ5MCwwMDAsIGEgYmlsbCB0aGF0IHdvdWxkIGhhdmUgY29zdCBoZXIgaG91c2Ugb3IgaGVyIGJ1c2luZXNzICh0aGFua2Z1bGx5IHdlIHdlcmUgYWJsZSB0byBnZXQgdGhpcyBhdWRpdCByZXZlcnNlZCkuLiAKKFByaXZhY3kgUG9saWN5KU1hcmtldGluZ0dvb2dsZSBBZFNlbnNlVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAKSGlkZGVuIHNlY3JldCBudW1iZXIgb25lOiBQcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVycyBrbm93IGhvdyB0byByZWFkIHBsYXllcnMuIFRoZSBiZXR0ZXIgeW91IGFyZSBhdCByZWFkaW5nIHRoZSBtb3JlIHlvdSB3aWxsIHVuZGVyc3RhbmQgaG93IHRvIHBsYXkgYWdhaW5zdCB0aGVtLiBJJ20gbm90IHRhbGtpbmcgYWJvdXQgYmVoYXZpb3JhbCB0d2l0Y2hlcywgd2hpY2ggaXMgbm90IGF2YWlsYWJsZSBmb3IgeW91IG9ubGluZS4gQnV0IHlvdSBuZWVkIHRvIGNvbnNpZGVyIHRoZWlyIHJhaXNpbmcsIGZvbGRpbmcsIHJlIHJhaXNpbmcsIGFuZCBvdGhlciBoYWJpdHMgb24gdGhlIHRhYmxlLiBEbyB0aGV5IGZvbGQgZWFybHkgb24/IERvIHRoZXkgZm9sZCB3aGVuIHlvdSBiZXQgYmlnIGFsbCBvZiB0aGUgdGltZS4gV2VyZSB0aGV5IGJsdWZmaW5nIGZyb20gdGhlIGZsb3AsIGJ1dCBnb3QgbHVja3kgb24gdGhlIHJpdmVyIG9yIHR1cm4/IFlvdSBuZWVkIHRvIGJlIGF3YXJlIG9mIHRoZWlyIGJldHRpbmcgaGFiaXRzLCBhbmQgcHJvZmVzc2lvbmFscyBrbm93IGhvdyB0byBkbyB0aGlzLiBQcmFjdGljZSBvbmxpbmUgb3Igd2l0aCBmcmllbmRzIG9uIHlvdXIgcG9rZXIgbmlnaHQuIEJld2FyZSB0aG91Z2g6IHByYWN0aWNpbmcgb25saW5lIHRvIGxlYXJuIHRoaXMgc2tpbGwgd2lsbCByZXF1aXJlIHJlYWwgbW9uZXksIGJlY2F1c2UgcGVvcGxlIGRvIG5vdCByZWFjdCB0aGUgc2FtZSB3YXkgd2l0aCAicGxheSBtb25leSIuIE1vc3QgcGVvcGxlIGRvIHJlYWN0IHRoZSBzYW1lIHdheSB3aXRoIHJlYWwgbW9uZXksIHByYWN0aWNlIGFuZCBwaWNrIHRoaXMgc2tpbGwgdXAuIFRoaXMgd2lsbCBzYXZlIHlvdSBhIGxvdCBvZiBtb25leSBpbiBsb3NzZXMsIGFuZCB0YWtlIHlvdXIgcG9rZXIgcmV2ZW51ZXMgc2t5IGhpZ2guCkVkaXQ6IFNvbWVvbmUgcG9pbnRlZCBvdXQgdGhhdCB5b3UgQ0FOIHJ1biBmb3Igb2ZmaWNlIGFmdGVyIHByZXNpZGVudC4gVElMIGxvbC4gTXkgb3BpbmlvbiBzdGlsbCBzdGFuZHMgdGhvdWdoLCBpIHdhbnQgaGVyIHRvIGNvbnRpbnVlIHJldm9sdXRpb25pemluZyBjb25ncmVzcyBiZWZvcmUgc2hlIGxlYXZlcyBpdC4KVGhpcyBpbmZvcm1hdGlvbiBpcyBzb2xlbHkgZm9yIGluZm9ybWF0aW9uYWwgcHVycG9zZXMuIElUIElTIE5PVCBJTlRFTkRFRCBUTyBQUk9WSURFIE1FRElDQUwgQURWSUNFLiAKTXRob2RlIFRyYWRpdGlvbmVsbGUgMjAxMCwgT2thbmFnYW4gVmFsbGV5JDM5LjkwICA5MS8xMDBUaGlzIGhhcyBiZWNvbWUgbXkgQmx1ZSBNb3VudGFpbiBmYXZvdXJpdGUsIGFuZCBpdCBiZWdpbnMgd2l0aCBmaW5lc3NlIGFuZCBzdHlsaW5nIG9mIHRoaXMgZW1pbmVudGx5IGRyaW5rYWJsZSAxMi41IHBlciBjZW50IGZpenouIEl0IHdhcyBkaXNnb3JnZWQgKFJEKSBpbiBBdWd1c3QgMjAxNiBhbmQgdGhlbiBzcGVudCBhbm90aGVyIHllYXIgaW4gYm90dGxlIGJlZm9yZSByZWxlYXNlLiBUaGlzIHNwYXJrbGVyIGhhcyBhbG1vc3QgMzAgbW9udGhzIHVuZGVyIGl0cyBiZWx0IGluIHRoZSBib3R0bGUgcG9zdCBkaXNnb3JnZW1lbnQuIApJdCBzaG91bGRudCBjaGFuZ2UgYW55dGhpbmcsIGJ1dCBqdXN0IG5vdGUgdGhhdCB5b3Ugd29uIGJlIGEgZHVhbCBjaXRpemVuIGltbWVkaWF0ZWx5LiBMb29rcyBsaWtlIHlvdSBuZWVkIHRvIGxpdmUgdGhlcmUgZm9yIDMgeWVhcnMgYmVmb3JlIHlvdSBjYW4gZ2V0IGNpdGl6ZW5zaGlwLgpCZWZvcmUgSSBkaWQgdGhlIHJlc2VhcmNoIEkgbWlnaHQgaGF2ZSB0aG91Z2h0IGVhdGluZyBvdXQgdmVnYW4gd2FzIHJlYWxseSBkaWZmaWN1bHQsIGJ1dCBJIGZvdW5kIGl0IHRvIGJlIG11Y2ggZWFzaWVyIHRoYW4gSSBleHBlY3RlZC4gCldoaWxlIGluIGhpcyB0d2VudGllcywgTm9ydG9uIHdvcmtlZCBhcyBhbiBpcm9ud29ya2VyIGhlbHBpbmcgdG8gYnVpbGQgdGhlIFdvcmxkIFRyYWRlIENlbnRlciBpbiBOZXcgWW9yayBDaXR5LiBBdCB0aGUgYWdlIG9mIDI4IGhlIHdhcyBlbGVjdGVkIHRvIHRoZSBNb2hhd2sgQ291bmNpbCBvZiBLYWhuYXdha2UsIHRoZSBnb3Zlcm5pbmcgYm9keSBmb3IgdGhlIDgsMDAwIG1lbWJlciB0cmliZSBsb2NhdGVkIG1pbnV0ZXMgZnJvbSBNb250cmVhbC4gVHdvIHllYXJzIGxhdGVyLCBOb3J0b24gdG9vayBvdmVyIGFzIGdyYW5kIGNoaWVmLCBhIHBvc2l0aW9uIGhlIGhlbGQgZm9yIG1vcmUgdGhhbiB0d28gZGVjYWRlcy4KSXQncyBmaW5lIGlmIHlvdSBkb24ndCB3YW50IHRvIG1lZXQgdXAgYW55bW9yZS4gCkl0IGRpZC4gUmVwb3J0ZXI6IEZvciBNb2xseSwgcGVyZmVjdGluZyB0aGUgZ2FtZSBmb3IgdGhlIGEgbGlzdCBwbGF5ZXJzIG1lYW50IHN0dWR5aW5nIHRoZWlyIHBva2VyIHBlcnNvbmFsdGllcy4gQWxsIHJpZ2h0LiAKSSB3b3JrZWQgYXQgYSBzcGEgdGhhdCB1c2VkIHRvIHJlcXVpcmUgaXRzIHRoZXJhcGlzdHMgdG8gc3RhY2sgc2hlZXRzIChsb2FkaW5nIHVwIGEgdGFibGUgd2l0aCA0IHNoZWV0cywgcmlwcGluZyBvZmYgMiBhZnRlciB0aGUgZmlyc3QgY2xpZW50LCBzbyB0aGUgMm5kIGNsaWVudCdzIHNoZWV0cyBhcmUgYWxyZWFkeSBvbiB0aGVyZSBhbmQgcmVhZHkgdG8gZ28pIGZvciBhIHF1aWNrZXIgcm9vbSBmbGlwIGJldHdlZW4gY2xpZW50cy4gSSB0aG91Z2h0IGl0IHdhcyBuYXN0eSBhbmQgaGF0ZWQgaXQuIEkgYnJvdWdodCBpdCB0byBtYW5hZ2VtZW50IGFuZCB0aGV5IGxpdGVyYWxseSBzYWlkIGl0IHdhc24ndCB0aGF0IGJpZyBvZiBhIGRlYWwsIHNvIHRoZXkgd2VyZW4ndCBjaGFuZ2luZyB0aGUgcnVsZS4gClRoZWlyIHBlcmZvcm1hbmNlIG9mIHRoZSBQb3VsZW5jIGNvbmNlcnRvIHdhcyBhIGhpZ2ggd2lyZSBhY3Qgb2YgcGVyZmVjdGx5IHN5bmNocm9uaXplZCBqdW1wcyBhbmQgbGVhcHMgdGhyb3VnaCB0aGlzIGdpZGR5IHJvbXAgYnJpbW1pbmcgd2l0aCBpbnNvdWNpYW5jZS4gCkkgaG9wZSB0aGlzIGlzIGEgdHJvbGwgb3RoZXJ3aXNlLCBwbGVhc2UgZG9uIHBhc3Mgb24geW91ciBnZW5lcywgdGhlIHdvcmxkIGRvZXNuIG5lZWQgbW9yZSBvZiB0aGlzIGluIGl0LgoiVGhpcyBpcyBhIGRpc2dyYWNlIGFuZCBhYnN1cmQsIiBoZSBwb3N0ZWQgb24gRmFjZWJvb2suIApJdCB0cnVlIHRoYXQgdGhpcyBzZWVtcyBicnV0YWwsIGJ1dCBmcm9tIHdoZXJlIEkgc3RhbmRpbmcgdGhpcyBsb29rcyBsaWtlIGEgbmVyZiBpbiB0aGUgY2F0ZWdvcnkuIFdoaWxlIG5vdCBuZWNlc3NhcmlseSBoaXR0aW5nIGFueXRoaW5nIG92ZXJwb3dlcmVkIHJpZ2h0IG5vdywgbWFraW5nIGNoYW5nZXMgbGlrZSB0aGVzZSAoZ2l2aW5nIHJlc3RvcmF0aW9uIGZyb20gYSBzaW5nbGUgbGVlY2ggaGl0IGEgaGFyZCBjYXApIG9wZW5zIHVwIGEgbG90IG9mIGRlc2lnbiBzcGFjZSB0aGF0IHdvdWxkIG90aGVyd2lzZSBoYXZlIGJlZW4gYmxvY2tlZCBvZmYgbGVlY2ggd291bGQgbWFkZSBpdCBwb3RlbnRpYWxseSBvdmVycG93ZXJlZC4KU2hlIHNwaWVkIGEgaG91c2UgdGhhdCBsb29rZWQgdmFndWVseSBsaWtlIGhlciBvd24gYmFjayBpbiBLb2NobyBhbmQga25vY2tlZCBvbiB0aGUgZG9vci4uIAoiV2UgcmVhbGx5IG5lZWRlZCB0byBrZWVwIHRoYXQgZGlzdGFuY2UgZm9yIGFueSBwZXJjZWl2ZWQgb3IgcmVhbCBjb25mbGljdCBvZiBpbnRlcmVzdCwiIEh1dGNoaW5zb24gc2FpZC4gIldlIGZlbHQgdmVyeSBzdHJvbmdseSBhYm91dCB0aGF0IGJlY2F1c2UgaW4gdGhlIDIwMDcgRm9vZCBHdWlkZSB0aGVyZSB3YXMgYSBmYWlyIGFtb3VudCBvZiBjcml0aWNpc20gYWJvdXQgdGhlIGluZmx1ZW5jZSBvZiBpbmR1c3RyeSBhbmQgd2UgdGhpbmssIHRvIG1ha2Ugc3VyZSB3ZSBrZWVwIHRoZSBjb25maWRlbmNlIG9mIENhbmFkaWFucyBhbmQgaGVhbHRoIHByb2Zlc3Npb25hbHMgYW5kIG90aGVyIHN0YWtlaG9sZGVycywgaXQgd2FzIG5lY2Vzc2FyeSB0byBzdGF5IHF1aXRlIHN0cmljdCBvbiB0aGF0LiIuIApJdCBpcyBncmVhdCB0byBrbm93IHRoYXQgaWYgdGhlcmUgYXJlIGFueSBwcm9ibGVtcywgaXNzdWVzIGFuZCBxdWVzdGlvbnMgYXJpc2UsIHRoZXJlIHdpbGwgYmUgcGVvcGxlIHRvIGFuc3dlciB5b3UgY2FsbC4uIApBR0xDIHdhbnRzIGEgcGllY2Ugb2Ygb25saW5lIGdhbWJsaW5nClRoZXNlIGNhbiBvZnRlbiBiZSBtYWRlIHdpdGggYnVsayBpbmdyZWRpZW50cyBhbmQgZ2l2ZW4gaW4gcmVwdXJwb3NlZCBhbmQgcmV1c2FibGUgY29udGFpbmVycy4gSWYgeW91IGRvbiB3YW50IHRvIG1ha2UgdGhlbSwgeW91IGNvdWxkIGFsc28gcHVyY2hhc2UgZnJvbSBhIFpXIGZyaWVuZGx5IHN0b3JlICh0aGF0IGdvZXMgZm9yIG1hbnkgb2YgdGhlc2UpLi4gClNvIGJhc2ljYWxseSBJIGRlZmluaXRlbHkgaGFkIGNydXNoZXMgb24gb3RoZXIgZ2lybHMgYmVmb3JlLCBidXQgSSBoYWRuIHByb3Blcmx5IGFja25vd2xlZGdlZCB0aGVtIGFzIGNydXNoZXMuIEkganVzdCByZWFsbHkgd2FudGVkIHRvIGJlIGZyaWVuZHMgd2l0aCB0aGVtIEkgd2FzIHRoaXJ0ZWVuLCBJIHdhcyBjYXN0IGluIHRoZSBzY2hvb2wgcGxheSwgYW5kIHBhcnQgb2YgbXkgY29zdHVtZSBpbnZvbHZlZCBvbmUgb2YgdGhvc2UgQ05EIG5lY2tsYWNlcy4gCkR1ZGUgaWYgeW91IHN0YXkgdGhpcyBzaW5jZXJlIGFuZCBkbyB0aGUgd29yaywgSSB0aGluayB5b3UgYmUgb25lIG9mIHRoZSBsdWNreSBvbmVzIGFuZCBlbmQgdXAgd2l0aCBhIGdvb2QgcmVsYXRpb25zaGlwIHdpdGggeW91ciBraWRzLiAKQnV0IG9uY2UgdGhvc2Uga25vd2xlZGdlIGVudGVycyBwZW9wbGUgbWluZHMsIHRoZXkgbG9jayB0aGUgZG9vciBiZWhpbmQuIApTb21lIHN0YXRlcyBnbyBmdXJ0aGVyIGFuZCBqdXN0IG91dHJpZ2h0IGJhbiB0aGUgcHJlIDE5ODYgb25lcy4gCkkgcGF5IGZvciBhIHNlcnZpY2UgdGhhdCBzY2FucyBhbGwgbXkgbWFpbCBhbmQgc2VuZHMgbWUgMSBwZGYgYSBkYXkgKG9yIHdlZWssIG9yIG1vbnRoIHdoYXRldmVyIEkgc3BlY2lmeSkgd2hlcmUgYWxsIG15IG1haWwgZ29lcy4gCkFuZCBjcmltaW5hbCBjaGFyZ2VzICAgbW9zdGx5IGFnYWluc3QgRGVtb2NyYXRzICAgbWF5IGFsc28gYmUgY29taW5nIGZyb20gU2VuYXRlIGNvbW1pdHRlZXMsIGZyb20gdGhlIGluc3BlY3RvciBnZW5lcmFsIG9mIHRoZSBKdXN0aWNlIERlcGFydG1lbnQgYW5kIG90aGVyIHByb2JlcyB0aGF0IGFyZSBnb2luZyBvbi4KVGhlIHllYXJzIEkgc3BlbnQgaW4gcmVtb3RlIGFyZWFzIGVzcGVjaWFsbHkgYXMgYSBjaGlsZCB3ZXJlIG5vdCBmdW4gYXQgYWxsLCBidXQgaXQgbWFkZSBtZSB0aGF0IG11Y2ggbW9yZSBncmF0ZWZ1bCB0byBsaXZlIGluIGFuIGVuY2xhdmUgbm93LiAKVGhhdCBoYXMgZmFsbGVuIGJ5IHRoZSB3YXlzaWRlIGFuZCB3aGF0IEkgcmVhbGx5IHdhbnQgbm93IGlzIGNyYXAgdGhhdCB3b3JrcyB0aGUgZmlyc3QgdGltZSBhbmQgZXZlcnkgdGltZS4gSSBkb24gaGF2ZSB0aW1lIHRvIHNxdWludCBhdCB0aGUgdGlueSBwcmludCBvbiBhIGJ1bmNoIG9mIGJ1dHRvbnMgYW5kIEkgemVybyBpbmNsaW5hdGlvbiB0byBzb3J0IHRocm91Z2ggYSBkb3plbiBtZW51cyB0byBtYWtlIG15IFRWIHN3aXRjaCBmcm9tIHRoZSBjYWJsZSBib3ggdG8gdGhlIERWRC4gVGhhdCBzaGl0IGFubm95cyBtZSBub3cuLiAKT25lIG9mIE1pbGxlciBhc3Npc3RhbnQgY29hY2hlcyB3YXMgbGl0ZXJhbGx5IHNheWluZyB0byBoaW0uICJJIHRob3VnaHQgaXQgd2FzIGNsZXZlciBlZGl0aW5nLCBidXQgeW91IHJlYWxseSBhcmUgdGhlIG1vc3QgaGF0ZWQgZmlnaHRlciBpbiB0aGUgVUZDLiAKZ3JhZnQgY3J1c2FkZXIgbm90IHRvIHRydXN0IFBNIE1vZGkKVGhleSB3b24ganVzdCBncmFiIHlvdXIgYmFsbHMuIFRoZXkgd2FpdCBmb3IgeW91IHRvIG9mZmVyIHRoZSBzZXggZm9yIHBheSBkZWFsIHNvIHRoZXkgZG9uIHNheSBpdC4uIApVbmxlc3MgeW91ciBwYXJlbnQgd2hvIGlzIGEgY2l0aXplbiBvZiB0aGUgUmVwdWJsaWMgb2YgTWFjZWRvbmlhIHJlZ2lzdGVyZWQgeW91IGJlZm9yZSB5b3UgdHVybmVkIDE4IHlvdSBtYXkgYmUgc2hpdCBvdXQgb2YgbHVjay4gWW91ciBtb3RoZXIgaXMgdGVjaG5pY2FsbHkgYSBjaXRpemVuIGlmIHNoZSB3YXMgYm9ybiBpbiB0aGUgU0ZSIE1hY2Vkb25pYSB3aGlsZSBpdCB3YXMgYSBwYXJ0IG9mIFl1Z29zbGF2aWEgYnV0IG5lZWRzIHRvICJyZSBlc3RhYmxpc2giIHRoYXQgY2l0aXplbnNoaXAuIFRoaXMgaXMgbm90IGFzIGVhc3kgYXMgaXQgc291bmRzLiBJIHdhcyBib3JuIGluIE1hY2Vkb25pYSBhbmQgbGl2ZWQgdGhlcmUgZm9yIGEgd2hpbGUgYW5kIEkgc3RpbGwgd2VudCB0aHJvdWdoIEhlbGwgZ2V0dGluZyBteSBjaXRpemVuc2hpcCByZWNvZ25pemVkLiBJdCBjb3N0IG1lIHRob3VzYW5kcyBvZiBkb2xsYXJzIGluIGxlZ2FsIGZlZXMgYW5kIGl0IHN0aWxsIGlzbiAxMDAlIHJlc29sdmVkLgpNb3N0IHNoYWR5IGJ1c2luZXNzIGlzIGp1c3QgdGhhdCBzaGFkeS4gSXQgaXNuIHNvIGNsZWFyIGN1dC4gCk5vIFN0YXRlIHNoYWxsIG1ha2Ugb3IgZW5mb3JjZSBhbnkgbGF3IHdoaWNoIHNoYWxsIGFicmlkZ2UgdGhlIHByaXZpbGVnZXMgb3IgaW1tdW5pdGllcyBvZiBjaXRpemVucyBvZiB0aGUgVW5pdGVkIFN0YXRlczsgbm9yIHNoYWxsIGFueSBTdGF0ZSBkZXByaXZlIGFueSBwZXJzb24gb2YgbGlmZSwgbGliZXJ0eSwgb3IgcHJvcGVydHksIHdpdGhvdXQgZHVlIHByb2Nlc3Mgb2YgbGF3OyBub3IgZGVueSB0byBhbnkgcGVyc29uIHdpdGhpbiBpdHMganVyaXNkaWN0aW9uIHRoZSBlcXVhbCBwcm90ZWN0aW9uIG9mIHRoZSBsYXdzLgpIb3dldmVyLCB5b3Ugc2hvdWxkIGJlIHZlcnkgY29uc2Npb3VzIHdoaWxlIGRlY2lkaW5nIHRoZSBvbmxpbmUgcG9rZXIgc2l0ZSBpbiB3aGljaCB5b3UgYXJlIHBsYW5uaW5nIHRvIHBsYXkuIApCYXJzIHlvdSBjYW4gZ2V0IGF3YXkgd2l0aCBlYXJsaWVyIHRpbWVzIGJ1dCB0aGUgZGVhZCB6b25lIGFmdGVyIGhhcHB5IGhvdXIgYW5kIGJlZm9yZSBwcmltZSB0aW1lIG9mIDEwIDExIHlvdSdyZSBqdXN0IGdvbm5hIGJlIGluIHRoZXJlIGxvb2tpbmcgcmVhbCBzdHJhbmdlIHVubGVzcyB0aGVyZSdzIHNvbWUgdHlwZSBvZiBzcG9ydGluZyBldmVudCBvbiwgYnV0IHJlZ2FyZGxlc3MgdGhhdCdzIG5vdCBoZWxwaW5nIHlvdXIgZ29hbCBvZiBwaWNraW5nIHVwIGNoaWNrcy4gVGhlIHJlc3Qgb2YgdGhpcyBJIHJlYWxseSBkb24ndCBjYXJlIHRvIGFuYWx5emUgYW5kIHBpY2sgYXBhcnQgYnV0IHRoYXQgcGllY2Ugb2YgYWR2aWNlIGlzIHByaWNlbGVzcy4gCk1pbmR5OiBTY290dCwgSSdtIGhhdmluZyBhIHJlYWxseSBncmVhdCBkYXkuIEknbSBzbyBleGNpdGVkIGZvciB0aGlzIGludGVydmlldyBiZWNhdXNlIEkndmUga25vd24gSmltIFdhbmcgZm9yZXZlci4gTGlrZSB5b3Ugc2FpZCwgaGUncyB0aGUgZ3JlYXQgdW5jbGUgb2YgcGVyc29uYWwgZmluYW5jZSBibG9nZ2luZyBhbmQgaGUncyBhbiBhbGwgYXJvdW5kIHJlYWxseSBpbnRlcmVzdGluZyBwZXJzb24gYW5kIGEgc3VwZXIgbmljZSBndXksIHZlcnkga25vd2xlZGdlYWJsZS4gSSBmZWVsIGxpa2Ugd2Ugc2F5IHRoaXMgZXZlcnkgc2luZ2xlIHdlZWssIHRoaXMgZXBpc29kZSBydW5zIHJlYWxseSBsb25nIGJlY2F1c2UgaGUgaGFkIHNvIG11Y2ggZ3JlYXQgdGhpbmdzIHRvIHNheS4gU28gbWFueSBncmVhdCB0aGluZ3MgdG8gc2F5PwpUaGVuIHNoZSBqdXN0IGZsYXQgY2FsbHMuIFdoZW4gc29tZW9uZSAzIGJldHMgYW5vdGhlciwgdGhleSBjYW4gcHV0IHRoZSAzIGJldHRlciBoYW5kIHJhbmdlIGludG8gc29tZXRoaW5nIGFsb25nIEFBLCBBSywgQVEsIEtLLCBRUS4gVGhpcyBpcyB3aGF0IGhlbHBlZCB0aGUgZ2lybCBtYWtlIGhlciBkZWNpc2lvbi4gClRoZSBjb3N0IGNhbWUgd2l0aCBhIGRpc2NvdW50LCBpdCB3YXMgaW5leHBlbnNpdmUgZm9yIGV2ZXJ5dGhpbmcgeW91IGdldCwgYW5kIHRoZXkgdHJ1bHkgbWFrZSB5b3UgZmVlbCBsaWtlIHlvdSdyZSBwbGF5aW5nIGluIGEgY2FzaW5vLiAKQ2FuYWRhIHRlcm1zIG9mIHRyYWRlIGEgY29tcGFyaXNvbiBvZiB0aGUgcHJpY2VzIG9mIGV4cG9ydHMgdmVyc3VzIHRoZSBwcmljZXMgb2YgaW1wb3J0cyBzYXcgaXRzIGJpZ2dlc3QgZHJvcCBzaW5jZSBlYXJseSAyMDA5LCB0aGUgcmVwb3J0IHNhaWQuIEl0IGZlbGwgMy42IHBlciBjZW50IGluIHRoZSBmb3VydGggcXVhcnRlciwgd2hpY2ggd2FzIG1vc3RseSBkdWUgdG8gYSAzNC4zIHBlciBjZW50IGRlY2xpbmUgaW4gY3J1ZGUgZXhwb3J0cy4KRGFzIHdyZGUgaWNoIGFscyBCZXRyb2ZmZW5lciBlaW5mYWNoIG51ciBhbHMgSG9obiBlbXBmaW5kZW4sIHdlbm4gbWlyIE1lbnNjaGVuLCBkaWUgZWluZGV1dGlnIHByaXZpbGVnaWVydGVyIHNpbmQgYWxzIGljaCwgc2ljaCBmciBtaWNoIGRhbm4gQmVncmlmZmUgYXVzZGVua2VuLCBkaWUgbWljaCBuaWNodCBhbHMgbWluZGVycHJpdmlsZWdpZXJ0LCBzb25kZXJuIGFscyBhbmRlcnNwcml2aWxlZ2llcnQgZGFyc3RlbGxlbi4iRHUga2FubnN0IGRlaW5lIEJlaW5lciBuaWNodCBiZW51dHplbiB1bmQgYmlzdCBhbiBlaW5lbiBSb2xsc3R1aGwgZ2VmZXNzZWx0LCBhYmVyIGltbWVyaGluIGtyaWVnZW4gZGVpbmUgQXJtZSBlaW4gb3JkZW50bGljaGVzIFdvcmtvdXQhIiJEdSBiaXN0IG5pY2h0IGFybSwgZHUgYmlzdCBhbmRlcnN2ZXJtZ2VuZCwgZGVubiB3YXMgZGlyIGF1ZiBkZW0gQmFua2tvbnRvIGZlaGx0LCBnbGVpY2hzdCBkdSBtaXQgZGVpbmVtIEhlcnplbiBhdXMuIiBHZWlsLCBkYSBmaGx0IG1hbiBzaWNoIGdsZWljaCB2aWVsIGJlc3Nlci5VbmQgd2VubiBkZXIgR2VkYW5rZSBpc3QsIE1lbnNjaGVuIG5pY2h0IGdhbnogYmVpbHVmaWcgbWl0IG5lZ2F0aXZlbiBXcnRlcm4genUgYmVzY2hyZWliZW4sIGRhbm4gbWFjaHQgZXMgYWJzb2x1dCBrZWluZW4gU2lubiwgc2ljaCBoaWVyIGFuIGRlbSBXb3J0IGJlaGluZGVydCBhdWZ6dWhuZ2VuLCB3YXMgd29obCB6dSBkZW4gYmVsaWVidGVzdGVuIEF1ZmhuZ2VybiBnZWhydC5NYW4gbXNzdGUgc2ljaCBhbiBzbyB6aWVtbGljaCBqZWRlciBCZWxlaWRpZ3VuZyB1bmQgYWJmbGxpZ2VuIEJlbWVya3VuZyBhdWZobmdlbiB1bmQgbmllbWFuZCBkcmZ0ZSBtZWhyIGlyZ2VuZGV0d2FzIE5lZ2F0aXZlcyBiZXIgaXJnZW5kd2VuIHNhZ2VuLCB3ZW5uIGVzIG5pY2h0IGF1ZiBlaW5lIGh1bmRlcnRwcm96ZW50aWcga29uc3RydWt0aXZlIEFydCB1bmQgV2Vpc2UgZ2VzY2hpZWh0Lktlc3RyZWxxdWVlbiAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29JY2ggaGFiIHZlcnN1Y2h0IGRlbiBHZWRhbmtlbmdhbmcgenUgZXJrbHJlbiB1bmQgZGFjaHRlIGVpZ2VudGxpY2gsIGRhc3MgZXMgcmVjaHQga2xhciBpc3QsIGRhc3MgZXMgZ2VyYWRlIG5pY2h0IGRhcnVtIGdlaHQgTGV1dGVuIGRhbm4gYWx0ZXJuYXRpdmUgRmhpZ2tlaXRlbiB6dXp1c3ByZWNoZW4uIApNeSBodXNiYW5kIGNhbid0IHdvcmsgeWV0IGJ1dCB3aWxsIGJlIGFibGUgdG8gc29vbiAobG9uZyBzdG9yeSkuIApZb3UgaGF2ZSB0byB0YWtlIGludG8gYWNjb3VudCBhbGwgb2YgdGhlc2UgZmFjdG9ycy4gCihXZSBkbyB0aGF0IHRvbyBidXQgSSBkaWdyZXNzKS5JdCdzIHJlYWxseSB1cCB0byB3aGF0IHlvdSdyZSBjb21mb3J0YWJsZSB3aXRoIGFuZCB3aGF0IHlvdSBlbmpveSBhcyB3ZWxsIGFzIGEgcGFydG5lci4gClRoZSBwcm9iYWJpbGl0aWVzIG9mIHN1Y2ggYmVpbmcgdGhlIGNhc2UgYXJlIG9mIGNvdXJzZSBxdWl0ZSBpbXBvc3NpYmxlIHRvIGRldGVybWluZSwgYnV0IHRoZXkgYXJlIHZlcnkgc2xpZ2h0IGFuZCBhcmUgbW9yZSB0aGFuJyBjb21wZW5zYXRlZCBieSB0aGUgY2hhbmNlcyBvZiBpbmNyZWFzaW5nIHRoZSBjb21wYXJhdGl2ZSB2YWx1ZSBvZiB0aGUgaGFuZCBieSBtYWtpbmcgYWNlcyBvciBraW5ncyAidXAiIGluc3RlYWQgb2YgdHdvIHNtYWxsIHBhaXJzJy4gCkFueSBjYXNlLCB0aGVyZSB3YXMgc3RpbGwgbmV2ZXIgYW4gaW50ZW50IHRvIHBvaXNvbiBhbnlvbmUgICBpbiB0aGlzIGNvbnRleHQsIG9yIGluIHRoZSBjb250ZXh0IG9mIHRoZSByaGlubyBob3Jucy4gV2lsbGZ1bGx5IHBvaXNvbmluZyBzb21lb25lLCB3aGV0aGVyIGl0IGZvciBwbGF5aW5nIHZpZ2lsYW50ZSByaGlubyBoZXJvIG9yIG5vdCwgaXMgbXVyZGVyLgpOZWJlbiBkZXIgRnJhZ2UsIG9iIGFsbCBkaWUgS2FwYXppdHRlbiBuYWNoIGRlbiBvbHltcGlzY2hlbiBTcGllbGVuIGF1c2dlbGFzdGV0IHdlcmRlbiwgYmVyZWl0ZW4gbWFzc2l2ZSBQZXJzb25hbGVuZ3Bzc2UgZGVuIEJldHJlaWJlcm4gS29wZnplcmJyZWNoZW4uIApGb3VuZCB0aGF0IGtpbmQgb2Ygb2RkIG15c2VsZiBjb25zaWRlcmluZyBJIGRpZCBub3QgaGF2ZSBzd2ltIHRydW5rcywgdGhlIHdpdG5lc3Mgc2FpZC4gV2FzIGFuIGF3a3dhcmQgc2l0dWF0aW9uIGZyb20gd2hpY2ggSSBtYW5hZ2VkIHRvIHJlbW92ZSBteXNlbGYgYXMgcXVpY2tseSBhcyBJIHBvc3NpYmx5IGNvdWxkLiBNYXJsZXkgc3VnZ2VzdGVkIHRoZSBiYXRoIHdhcyBvZmZlcmVkIHRvIGhpbSBhcyBhbiBvcHBvcnR1bml0eSB0byBlYXNlIHdoYXRldmVyIHN0cmFpbiBoaXMgYmFjayBoYWQgaW5jdXJyZWQgbW92aW5nIHdoYXQgdGhlIHdpdG5lc3MgYWRtaXR0ZWQgd2FzIGEgdmVyeSBoZWF2eSBvYmplY3QsIHRoZSB3aXRuZXNzIGRpc2FncmVlZC4uIApJdCB3YXMgdW5zb2xpY2l0ZWQgYW5kIGNvbmRlc2NlbmRpbmcuIEhvd2V2ZXIsIGl0IHdvdWxkIG5vdCBiZSBtYW5zcGxhaW5pbmcuIApXaGF0IE1lbiBXYW50IGZhaWxzIHRoZSBOYW5jeSBNZXllcnMgdGVzdApJIGRvbiBoYXZlIGEgY2FyLiAKQWxzbyBiZSBzdXJlIHRvIGluY2x1ZGUgY29udGFjdCBpbmZvcm1hdGlvbiBzbyBub24gbWVtYmVycyBjYW4gcmVhY2ggeW91IGVhc2lseS4gCk1heWJlIEkgd3JvbmcsIGFuZCB0aGVyZSBhbm90aGVyIG1hc3NpdmUgY2l0eSBvdXQgdGhlcmUgd2l0aCBldmVuIG1vcmUgcmljaG5lc3Mgb2YgZGVwdGggYW5kIGRpdmVyc2l0eSwgYnV0IEkgaGF2ZW4gZm91bmQgaXQuCkJ1dCBhZnRlciBhYm91dCA3IHllYXJzIG9mICJmb3JjZSBjdWRkbGluZyIgc2hlIGlzIG5vdyBzdGFydGluZyB0byBkbyB0aGUgc2FtZSB0aGluZ3MuIFNoZSBzdGlsbCBoaXRzIGhlciBsaW1pdCBvZiBPSyB0aGF0IGl0IHRvbyBtdWNoIGFuZCBzaGUganVzdCBqb2x0cyB1cCBhbmQgbGVhdmVzIGJ1dCBzaGUgaXMgcHJldHR5IGNsb3NlIHNvIHRoZSB0ZWNobmlxdWUgZG9lcyB3b3JrISBXZSBoYXZlIGEgZmV3IHNjcmF0Y2hlcyBidXQgaXQgbm90aGluZyBtYWpvciBhbmQgaXQgdG90YWxseSB3b3J0aCBpdCEuIApCZSBzdXJlIHRvIGhhdmUgeW91ciBnYW1lcGxheSAicmF0ZWQiIGJ5IHRoZSBwaXQgYm9zcyBmb3IgY29tcCBwb2ludHMKTWFyIDE4LCAyMDE2ICAgMjYgc2VjICAgVXBsb2FkZWQgYnkgUm9iIENoYXJsZXNXaGlzdGxpbmcgS2V0dGxlIFNvdW5kIEVmZmVjdCBBcyBoZWFyZCBpbiBtYW55IGt0Y2hlbidzIGJhY2sgaW4gdGhlIGRheS4gCiJXZSBraW5kIG9mIGhpdCBlYWNoIG11c2NsZSBncm91cCBvbmUgdGltZSBhIHdlZWsgZXhjZXB0IGZvciBsZWdzIHdlIGRvIHR3aWNlLCIgQWxjYW50YXJhIHRvbGQgRSEgTmV3cy4gClJhamFpIERhdmlzIGlzIGEgc3BhcmsgcGx1ZzogRGF2aXMgaGFkIGEgZ3JlYXQgZ2FtZSBUaHVyc2RheSwgZ29pbmcgMyBmb3IgNCB3aXRoIHR3byBzdG9sZW4gYmFzZXMgYW5kIGEgcnVuIHNjb3JlZC4gSGUgaGFkIGEgZ2lmdCBkb3VibGUgb24gYSBwb3BmbHkgdGhhdCB0aGUgc2hvcnRzdG9wIGFuZCBsZWZ0ZmllbGRlciBsZXQgZHJvcCwgYnV0IGhpcyBvdGhlciB0d28gaGl0cyB3ZXJlIGxlZ2l0aW1hdGU6IGEgYnVudCBzaW5nbGUgYW5kIGEgbGluZXIgdG8gY2VudGVyIGZpZWxkLiBMZXQgaG9wZSB3ZSBzZWUgbW9yZSBvZiBoaW0gaW4gdGhlIGxhc3Qgc2V2ZW4gd2Vla3Mgb2YgdGhlIHNlYXNvbi4KVGhlcmUgYXJlIHNldmVyYWwgYXJndW1lbnRzIGZvciBub3QgYWxsb3dpbmcgdGhlIHBlb3BsZSdzIHJlcHJlc2VudGF0aXZlcyB0byBpbnRlcnZlbmUgaW4gdGhlIGNvbXBsaWNhdGVkIGZvcmVpZ24gcG9saWN5IGRhbmNlIGJldHdlZW4gZm9yY2UgYW5kIGRpcGxvbWFjeS4gRm9yIHN0YXJ0ZXJzLCB0aGVyZSBpcyB0aGUgdHJhZGl0aW9uYWwgaWRlYSB0aGF0IHBvbGl0aWNzIGVuZCBhdCB0aGUgd2F0ZXIncyBlZGdlLCB3aGVyZSBtZXNzeSBkb21lc3RpYyBkaXNhZ3JlZW1lbnRzIGFyZSBzdXBwb3NlZCB0byBnaXZlIHdheSB0byB0aGUgYWJzdHJhY3Rpb24gb2Ygb25lIHN0YXRlIHdpdGggYSB1bmlmaWVkIG5hdGlvbmFsIGludGVyZXN0Li4gClRoZXJlIGFyZSBhIGZldyBndW0gYnJ1c2hlcyBvbiB0aGUgbWFya2V0IHRoYXQgeW91IGNhbiB1c2UuIApGdW5uaWx5IGVub3VnaCBpdHMgdGhlIGxhdHRlciB0aGF0IHdlIGhhdmUgYSBjaGFtYmVyIGZvciBhdG0gKGlmIHdpdGhvdXQgbXVjaCBwb3dlcikgaW4gdGhlIGZvcm0gb2YgdGhlIFVuaXRlZCBOYXRpb25zLgpJbiBpdCwgU25pZGVyIGFncmVlZCB0byBhIHZvbHVudGFyeSBkZW1vdGlvbiBmcm9tIHRoZSByYW5rIG9mIExpZXV0ZW5hbnQgdG8gSW52ZXN0aWdhdG9yIGFuZCBhIGZpdmUgZGF5IHVucGFpZCBzdXNwZW5zaW9uLi4gCkFudGlkZXByZXNzYW50cyBsaWtlIG1pcnRhemFwaW5lLCBhbmQgdmFsZG94YW4gYmxvY2sgdGhlc2UgcmVjZXB0b3JzIGluc3RlYWQgb2YgY2F1c2luZyB0aGVtIHRvIGFjdGl2YXRlIG1vcmUsIGxpa2UgYW4gU1NSSSB3b3VsZC4gCldlIHRhbGsgbGVzcyBvZnRlbiB0aGFuIHdlIHVzZWQgdG8sIHdoaWNoIGlzIG5hdHVyYWwuIApCZWNvbWluZyBhIG1lbWJlciBhdCBNZXNzYWdlIEFkZGljdCByZXF1aXJlcyBjbGllbnRzIHRvIGNvbW1pdCB0byBvbmUgdHJlYXRtZW50IGEgbW9udGggYXQgYSBjb3N0IG9mICQ1OSBhIHRyZWF0bWVudCwgc2lnbmlmaWNhbnRseSBsZXNzIHRoYW4gJDcwIHRvICQ5MCBmZWVzIGJlaW5nIGNoYXJnZWQgYnkgTWFzc2FnZSBBZGRpY3QgY29tcGV0aXRvcnMsIE1zLiBNYWNLZW56aWUgc2F5cy4gCkl0IHdhcyBleHRyZW1lbHkgc3BhY2lvdXMgYW5kIGV2ZXJ5IGNvbXBldGl0b3IgaGFkIHRoZWlyIG93biB0YWJsZSB3aXRoIGNvbWZvcnRhYmxlIGNoYWlycy4gVGhlIGdyb3VuZHMgd2VyZSBiZWF1dGlmdWwgYW5kIHRoZXJlIHdhcyBhIHNwYSwgYSBwb29sIG9yIHdvb2RsYW5kIHRvIGV4cGxvcmUgYmV0d2VlbiByb3VuZHMuIApTZXQgdXAgYSBob21lIG1hc3NhZ2Ugcm9vbS4gClBva2VyIGNhbGN1bGF0b3JzIGFyZSBoYW5keSB0b29scyBmb3Igb25saW5lIHBsYXkgdGhhdCBnaXZlIHlvdSAoYXQgdGhlIHZlcnkgbGVhc3QpIGFjY3VyYXRlIHBvdCBvZGRzIHRvIGtub3cgaWYgeW91IHNob3VsZCBiZSBpbiBhIGhhbmQgaW4gdGhlIGZpcnN0IHBsYWNlLCBidXQgYWxzbyB0byBvZmZlciB0aGUgcmlnaHQgYWR2aWNlIGZvciBjaGVja2luZywgZm9sZGluZywgb3IgYmV0dGluZyBpbiBhbnkgZ2l2ZW4gc2l0dWF0aW9uLiAKSkYgUHRhayBTY2llbmNlIEJvb2tzIFF1aWNrIFBvc3QgcmVhY2hpbmcgaW1hZ2UgYXBwZWFyZWQgYXMgYW4gYWQgZm9yIGEgbGlmZSBpbnN1cmFuY2UgY29tcGFueSAoPykgaW4gdGhlIHBhZ2VzIG9mIExpZmUgbWFnYXppbmUgZm9yIDE5NDIuIFdoYXQgdGhlIGNvbXBhbnkgbGF0Y2hlZCBvbiB3YXMgdGhlIHVyYW5pdW0gaXNvdG9wZSAyMzVVICh1cmFuaXVtIGRpc2NvdmVyZWQgaW4gMTc4OSBieSBLbGFwcm90aCBhbmQgaXRzIHJhZGlvYWN0aXZlIHN0YXRlIGZvdW5kIGJ5IEhlbnJpIEJlY3F1ZXJlbCBpbiAxODk2LCAyMzVVIGRpc2NvdmVyZWQgYnkgdGhlIG1hc3Mgc3BlY3Ryb21ldGVyIGd1eSBEZW1wc3RlciBpbiAxOTM1LCBhbmQgc29vbiBmb2xsb3dlZCBieSB0aGUgbnVjbGVhciBmaXNzaW9uIHBhcGVyIG9mIDE5MzggYnkgSGFobi9TdHJhc3NtYW5uL0xlaXRuZXIpIGFuZCBob3cgaXQgd291bGQgZWZmZWN0aXZlbHkgYmUgdGhlIHBvd2VyIHNvdXJjZSAoImNoZWFwIGFuZCBwbGVudGlmdWwpIGZvciwgd2VsbCwgYSBsb3QsIGluY2x1ZGluZyBjYXJzIGFuZCBzcGFjZWZsaWdodC4gQW55d2F5LCB0aGUgZHJhd2luZyBpcyBuZWF0IGV2ZW4gaWYgdGhlIEVhcnRoIGlzIHdheSBvdXQgb2YgcHJvcG9ydGlvbiwgYW5kIHNvIG9uOi4gCkVzc2VudGlhbCBvaWxzIGNvbWUgZnJvbSBuYXR1cmFsIGJvdGFuaWNhbHMuIFRoZXNlIG9pbHMgYXJlIHRoZSBlc3NlbmNlIG9mIHRoZSBwbGFudCwgbm90IGZyYWdyYW5jZXMgY2hlbWljYWxseSBtYWRlIHRvIG1pbWljIGEgc3BlY2lmaWMgc2NlbnQuIApUaGV5IGhhZCBhIG5ldyBnaXJsIHdpdGggbm8gcmV2aWV3cywgYW5kIHNoZSB3YXMgYWxzbyB0YW4sIGxpZ2h0IGJyb3duIGhhaXIsIGFuZCBiaWcgdGl0cy4gCkluIGNyeXB0byBsYW5kLCBjb25zZW5zdXMgaGFzIGEgYml0IG1vcmUgb2YgYSBudWFuY2VkIG1lYW5pbmcuIEZvciBhIGRpc3RyaWJ1dGVkIHN5c3RlbSBvZiBtaXN0cnVzdGluZyBhY3RvcnMsIGEgY29uc2Vuc3VzIGFsZ29yaXRobSBtdXN0IGFjaGlldmUgdGhpcyBCeXphbnRpbmUgRmF1bHQgVG9sZXJhbmNlLgpXZSBleHBlY3RlZCBhIG1pbmkgTGFzIFZlZ2FzLCBpdCB3YXMgbm90aGluZyBsaWtlIGl0LiBTbW9raW5nIGlzIGFsbG93ZWQgaW4gdGhlIGNhc2lubyBhbmQgbWFueSwgbWFueSBnYW1ibGVycyBzbW9rZSwgc28gdGhlIGZpcnN0IHRoaW5nIHlvdSBub3RpY2UgaXMgdGhlIHNtZWxsLiAKRm9yIG1vc3QgcGVvcGxlLCB0aGVyZSBhIGJhc2VsaW5lIGFtb3VudCBvZiBtb25leSB0aGF0IHlvdSBuZWVkIHRvIHNwZW5kIHRvIGJlIGFibGUgdG8gZW5qb3kgeW91ciBsaWZlLiAKR29sZCBhbmQgUmVkIGFyZSBoZWF2aWx5IHVzZWQgYnkgZm9sa3Mgd2hvIHdvcmsgaW4gdGhlIDMgNCBtYWpvciBmaW5hbmNpYWwgZGlzdHJpY3RzKS4gCkFoLCB5ZXQgYW5vdGhlciBpc3N1ZSBvZiB0aGUgc2VwYXJhdGlvbiBvZiBDaHVyY2ggYW5kIFN0YXRlIGNhbWUgdXAgaW4gdGhlIGNvdXJ0cyB0aGlzIHdlZWsuIEFuZCB0aGlzIG9uZSBpcyBpbXBvcnRhbnQuIEkgbm90IHRhbGtpbmcgYWJvdXQgdGhlIGxlZ2FsIGRlZmluaXRpb24gb2YgbWFycmlhZ2Ugb3IgZXZlbiB0aGUgY29udmVyc2lvbiBvZiBNdXNsaW0gc29sZGllcnMgdG8gQ2hyaXN0aWFuaXR5LiBJbnN0ZWFkLCBJIGFtIHRhbGtpbmcgYWJvdXQgdGhlIGluY3JlZGlibHkgaW1wb3J0YW50IGlzc3VlIG9mIGxpY2Vuc2UgcGxhdGVzLgpUbyBnZXQgdGhlIHByb2JhYmlsaXR5IHRoYXQgb3VyIGNhcmRzIGRvIG5vdCByZXN1bHQgaW4gZWl0aGVyIG9mIHRob3NlIHR3byBpbnN0YW5jZXMgaXMgMSAzLzEwODEsIG9yIDEwNzgvMTA4MS4gU28sIG91ciBmaW5hbCBwcm9iYWJpbGl0eSBpcyAxOC80OSAgMTA3OC8xMDgxLCBvciAzOTYvMTA4MSwgZ2l2aW5nIHlvdSBhbiBhcHByb3hpbWF0ZSAzNi42IHBlcmNlbnQgY2hhbmNlIG9mIGdldHRpbmcgYSBmdWxsIGhvdXNlLiAuLiAKU3VzcGVjdCBXaG8gU2hvdCBBdCBNaWFtaSBCZWFjaCBPZmZpY2VyIEluIEN1c3RvZHlQb2xpY2Ugc2F5IHRoZXkgaGF2ZSBhcHByZWhlbmRlZCBhIHN1c3BlY3QgdGhleSBzYXkgb3BlbmVkIGZpcmUgYXQgcG9saWNlIGluIE1pYW1pIEJlYWNoIGFuZCBsZWQgdGhlbSBvbiBhIGNoYXNlLgpQaGFudG9tIG1vdmllIGRvd25sb2FkIDIwMTUgMTA5OWluc3RtYW5rc3BzdCBicmlkZ2UgbWFjIGNyYWNrIHRvcnJlbnRpbnN0bWFua3NkaXNjb2dyYWZpYSBtYXlzYSBtYXRhcmF6em8gdG9ycmVudGRvd25sb2FkIGthc3BlcnNreSB0cmlhbCByZXNldCB0b29sZGNpbnN0ZnJlZSBkb3dubG9hZCBmaWxtIGhhc2R1ayBiZXJwb2xhIGZ1bGwKV2l0aG91dCBoYXZpbmcgdG8gd2FzdGUgdGltZSBwbGFubmluZy4gClN1cnZpdmVkIGJ5IGJyb3RoZXJzIE5pY2sgQnVjaHluc2tpLCBKb2huIEJ1Y2hpbnNreSwgc2lzdGVyIE1hcnkgR29saW5za3kgYW5kIGhpcyBuaWVjZXMgQW5uZSAoQnJpYW4pIFBlcnJvLCBKbyBBbm5lIEhpbmQgYW5kIG5lcGhld3MgQ3JhaWcgKERpZGkpIEhpbmQgYW5kIFJpY2hhcmQgSGluZCBKci4gQW5kIG90aGVyIGV4dGVuZGVkIGZhbWlseS4gCkVESVQ6IFdhcyBpbmZvcm1lZCBieSBhbm90aGVyIHBvc3RlciB0aGF0IHRoZSBTdXByZW1lIENvdXJ0IHJlY2VudGx5IHJ1bGVkIGluIGZhdm9yIG9mIGEgcGxhaW50aWZmIGRpc3B1dGluZyBhIGNpdmlsIGFzc2V0IGZvcmZlaXR1cmUgY2FzZS4gClRoZSBzcGEncyBvd25lcnMgZGlkIG5vdCByZXR1cm4gYSBjYWxsIHNlZWtpbmcgY29tbWVudC4gQXJuYXUgbGF3eWVyLCBDYXJyaWUgR29sZGJlcmcsIHNhaWQsIEZyZXNoIFNwYSBpZ25vcmVkIE1yLiBBcm5hdSB3aGVuIGhlIHJlcG9ydGVkIHRoZSBhc3NhdWx0LiBUaGUgc3BhICB0aHJvdWdoIHRoZWlyIHNpbGVuY2UgYW5kIGluYWN0aW9uIGNvbmRvbmVzIHRoZSBpZGVhIHRoYXQgZ2F5IG1lbiBhdCBnYXkgc3BhcyBhcmUgY29uc2VudGluZyB0byB1bndhbnRlZCB0b3VjaGluZyBmcm9tIHN0YWZmLCBzaGUgc2FpZC4KQXJ0aWNsZSB0byBSZWFkIChBYm91dCBDZXNhcmVhbnMpIFdoZW4gQmVpbmcgYSBNb3RoZXIgSXMgSGFyZCBXcml0aW5nIFRoZSBNb29uIEdsb3BwaWVzIEkgV2FzIEJsb2cgU2lkZWQgUm94YW5uZSBVbmNpcmN1bWNpc2VkIEJhdCBFeWVzIE91dCBvZiBUb3duIEJvb2dpZSBOaWdodHMgRGFyayBEYXVnaHRhIFJlc3BvbmRzIHRvIEZhdCBUYWxrIFBhY2thZ2luZyBNeSBOYW5hJ3MgQm93bCAiSG93IFdvbWVuIEJlY29tZSBNb3RoZXJzIiBGYXQgQW5ncnkgV29tYW4gTWUgV2hlbiBPbGQgUG9zdHMgRmluZCBOZXcgTGlmZSBUYWtpbmcgVGhpbmdzIFBlcnNvbmFsbHkgV2h5IEkgQmxvZyAoVGFnZ2VkKSBBIFBpZWNlIG9mIE15IE9mZmljZSBGcm9udCBhbmQgQ2VudGVyaW5nIExMTCBMb3ZlIFN0b3J5IDIxIFllYXJzIEFnbyAgIEFpbWVlJ3MgQmlydGggU3RvcnkgUmlja2kgTGFrZSEhIERyaXZpbmcgRm9yY2UgV2hlcmUgaXMgdGhlIExvZ2ljPyBPbmUgVGVuYWNpb3VzIEJhYnkgTWFtYSBUViBUaW1lIE15IFNlY3JldCBCaXJ0aGRheSBJbiBteSBlbWFpbGJveC4gRmlyZXdvcmtzIEZpcmV3b3JrcyBGaXJld29ya3MgRmlyZXdvcmtzIEZpcmV3b3JrcyBDaW5kZXJlbGxhIENhc3RsZSBUaW1lIE15IFNpc3RlciAoYWdhaW4pIFNlbGYgUG9ydHJhaXQgTHVjYXMgU2xlZXBpbmcgTHVjYXMgU3lkbmV5IDMgRnJpZW5kcyAoQmVsYXRlZCkgSGFwcHkgVmFsZW50aW5lJ3MgRGF5IE1SSSBDb21wbGV0ZSBJJ20gTmFrZWQgTXkgU2lzdGVyIEknbSBXcml0aW5nLiBUYWtlIGEgRGVlcCBCcmVhdGggSXQncyBUaW1lIHRvIFRlbGwgdGhlIFN0b3J5IEJpcnRoIFdhdGNoaW5nIENsaWNrICBuICBUaW1lIFBhcmtpbmcgU3BhY2UgR29kZGVzcyBOZXcgWWVhcidzIFRpY2sgVG9ja2luZyBUaG91Z2h0cyBJIGFtIEN1cmVkIFBvbmRlcmluZyBhbmQgTW92aW5nIEZvcndhcmQgSSdNIE5PVCBDUkFaWSEhISBTaGFtZWxlc3MgUGx1Z2dpbmcgRGVjZW1iZXIgQmlydGggMiAgIEJpcnRoIEJyb3VnaHQgQWlsaWUgRGFuY2luZyBpbiB0aGUgU2FuZCBQcmVnbmFudCBOdXJzaW5nIENvbXBhc3Npb25hdGUgRGV0YWNobWVudCBMZXR0ZXIgdG8gYSBGcmllbmQgV2lja2VkIFdoYXQncyBTbyBIYXJkIEFib3V0IEJsb2dnaW5nIE9rYXksIEknbGwgU2hvdyBZb3UgT25lIGxhdWdoIERlZnlpbmcgR3Jhdml0eSBSYXcgSUlJIFJhdyBJSSBSYXcgTWlkd2lmZSBhcyBNb3RoZXI7IE1vdGhlciBhcyBNaWR3aWZlIEEgU3RvcnkgQWJvdXQgYSBNb3RoZXIgUGVucyBIYXJ2ZXN0IE1vb24gQ29yc2V0cyBTbGVlcGluZyBPZmYgQ2FsbCBXaGF0J3MgSW4gYSBTY3JhdGNoIFNwZWFraW5nIGZvciB0aGUgU2lsZW50IFNudWdnbGluZyBQcmVnbmFudCBNYW1hIE51cnNpbmcgVG9kZGxlciBPbGRlciBUYW5kZW0gTnVyc2xpbmdzIFRhbmRlbSBDaGF0dGluZyBTdW5zZXQgb24gYSBQcmVnbmFuY3kgRmFpcnlEYXVnaHRlciBTaXN0ZXJzIFdoYXQgUG9zc2Vzc2VzIFNvbWUgUGVvcGxlPyBSb3NoIEhvc2hhbmEgU2hlIFRvb2sgTWUgT3V0IHRvIGEgQmFsbCBHYW1lIEFuZCBub3cgaGVhZGluZyBob21lLiAKSSB0aGluayBhYm91dCB0aGlzIGEgbG90LiBJIGRvbiBoYXZlIGEgbG90IG9mIGZyaWVuZHMuIE15IG5kYWQsIGhlIGhhcyBwbGVudHkuIApOaWNlIHRob3VnaHQsIGJ1dCBJIHRoaW5rIHRoYXQgd3JvdWdodCB3aXRoIGNvbnNlcXVlbmNlcyB3ZSBkb24gd2FudC4gVGhlIHJlYWxpdHkgaXMgcG9saXRpY2lhbnMgc3RpbGwgbmVlZCB0byBsaXZlLiBJZiB5b3UgZG9uIHBheSB0aGVtIGFueXRoaW5nIGF0IGFsbCwgdGhlbiB5b3UgYXJlIHJlc3RyaWN0aW5nIHlvdXIgcG9vbCBvZiBjYW5kaWRhdGVzIHRvIGVpdGhlciB0aG9zZSB3aG8gYXJlIHdlYWx0aHkgZW5vdWdoIHRvIHN1c3RhaW4gdGhlbXNlbHZlcyB3aXRob3V0IGEgcGF5IGNoZXF1ZSwgb3IgdGhvc2Ugd2hvIGNhbiBtYW5hZ2UgdG8gZ2V0IHNvbWUgb3RoZXIgb3JnYW5pemF0aW9uIHRvIHNwb25zb3IgdGhlbS4uIApBbHNvIFZpZXdlZCBDYXNld29ya2VyIEludGVydmlld2luZyBUZWNobmlxdWVzIFNvY2lhbCBDb3Vuc2Vsb3IgUGF5IFNjYWxlIEVkdWNhdGlvbiBSZXF1aXJlZCBUaGUgUHJvcyBDb25zIG9mIGEgQ2FyZWVyIGluIFNvY2lhbCBXb3JrIERpc3Rpbmd1aXNoaW5nIENoYXJhY3RlcmlzdGljcyBvZiBTb2NpYWwgV29yayBMaXN0IG9mIFByaW5jaXBsZXMgaW4gQ2xpbmljYWwgU29jaWFsIFdvcmsgUHJhY3RpY2UgUXVhbGl0aWVzIG9mIGEgQ2hpbGQgUHN5Y2hvbG9naXN0IFdoYXQgSXMgQ3JpdGljYWwgVGhpbmtpbmcgaW4gU29jaWFsIFdvcms/CkFzIGZhciBhcyBJIGNhbiB0ZWxsIHRoZSBoZWFkbGluZSBvZiB0aGlzIENOTiBhcnRpY2xlIGxpdGVyYWxseSBtYWtlcyBjbGFpbXMgdGhhdCB0aGUgc3R1ZHkgY29uY2x1c2lvbiBkb2VzIG5vdCBzdXBwb3J0LiBXaHk/IFRoZSBzdHVkeSBjb25jbHVzaW9uIHVzZXMgbGFuZ3VhZ2UgdGhhdCBpcyB0cmlja3kgYXMgd2VsbC4gCkhvd2V2ZXIgdGhpcyBib29rIGNvc3RzIHR3aWNlIHdoYXQgSmFuZGEgZG9lcyBhbmQgaXMgbm90IG5lYXJseSBhcyBpbiBkZXB0aC4uIApDYXVzZSBtb3N0IG9mIHRoZXNlIGd1eXMgYXJlbiBhY3R1YWxseSB3b3J0aHkgb2YgcGxheWluZywgb3IgYWxyZWFkeSBwbGF5IHRvbyBsYXJnZSBvZiBhIHJvbGUuIApJIGFtIG9uIHRoZSBiaWcgYmxpbmQuIAozNDUxMjI0NkhhY2tuZXkgYXBwZWFsZWQgYWdhaW4gZm9yIEVicm9uIG9yIHRob3NlIHdobyBoYXZlIGluZm9ybWF0aW9uIGFib3V0IHdoYXQgaGFwcGVuZWQgdG8gTG9uemllIHRvIGNvbWUgZm9yd2FyZCB3aXRoIGFueSBwb3NzaWJsZSBleHBsYW5hdGlvbiBvdGhlciB0aGFuIHRoYXQgdGhlIGNhciB0aGVmdCBzdG9yeSB3YXMgbWFkZSB1cCB0byBjb3ZlciB1cCB0aGUgY2hpbGQncyBkZWF0aC4gClRoZXJlIGFsc28gdGhlIGlkZWEgb2YgZ3JpZWYuIApOb3Qgb25seSB3YXMgdGhlIHNpeCB5ZWFyIGV4dGVuc2lvbiBvZiBDSElQIG1lYW50IHRvIHdpbiBEZW1vY3JhdGljIHZvdGVzLCB0aGUgcHJvZ3JhbSBpcyBpbiBuZWVkIG9mIG1vcmUgY2VydGFpbnR5LgpGbGVlY2UgZG9lcyBub3QgYW5kIGlzIG5vdCBkZXNpZ25lZCB0byBibG9jayB3aW5kLiAKTm90IGFzIGZhciBhcyBoaW0gYnV0IHN0aWxsIHRoZXJlIHdlcmUgc29tZSBmdW4gdGltZXMuIApXcmlzdHkgRXNzZXggcGFpciBUb20gV2VzdGxleSBhbmQgRGFuIExhd3JlbmNlIHVzZSBjb3VudHkgbWF0Y2hlcyBhcyBhIGJhdHRsZWdyb3VuZCBmb3IgZGVjaWRpbmcgd2hvJ3MgbW9zdCBhZGVwdCBhdCBoaXR0aW5nIHRoZSBiYWxsIHRocm91Z2ggdGhlIGxlZyBzaWRlLiBXaGVuZXZlciBpbXBldHVvdXMgMTkgeWVhciBvbGQgTGF3cmVuY2UgYXJyaXZlcyBhdCB0aGUgY3JlYXNlIHRvIGpvaW4gaGlzIE5vLjMsIHRoZSBmb3JtZXIgaW52YXJpYWJseSBzdWdnZXN0cyBhICJmbGljayBvZmYiIGJlZm9yZSBib3RoIHByb2NlZWQgdG8gcGVwcGVyIHRoZSBtaWQgd2lja2V0IGJvdW5kYXJ5LiBKdWRnaW5nIGJ5IHRoZWlyIDIwMTYgcnVuIHJlY29yZHMsIHRoZSBnYW1lIGhhc24ndCBlaXRoZXIgYW55IGhhcm0uCkl0cyBiZWVuIGFub3RoZXIgc3ViIHNlY3Rpb24gb2YgdGhlIGdhbWUgdGhhdCBwZW9wbGUgY291bGQgcGFzcyB0aGUgdGltZSB3aXRoLCBhIHdob2xlIG90aGVyIGN1bHR1cmUuIFRoZXJlIGFyZSBhbHNvIHBlb3BsZSB0aGF0IHdvcmsgb24gZmlsbGluZyBjb2xsZWN0aW9ucywgb3Igc3BlbmQgYWxsIGRheSBjcmFmdGluZyB0aGF0IHNvbWUgcGVvcGxlIGZpbmQgYXR0cmFjdGl2ZSBhcyB3ZWxsLiBHZXR0aW5nIHJpZCBvZiB0aGUgZm91bmRyeSBpcyBqdXN0IHRha2luZyBhd2F5IG9uZSBvdGhlciBmZWF0dXJlIHRoYXQgbWFkZSBOVyB1bmlxdWUsIGFuZCBvbmUgdGhhdCBzaG91bGQgaGF2ZSBiZWVuIGNoZWFwIGlmIHRoZWlyIG1hbmFnZW1lbnQgYW5kIGNvZGUgd2FzIHByb3Blcmx5IG9yZ2FuaXplZC4uIApJZiAyIHBlb3BsZSBwbGF5aW5nIGEgaGlnaCBvciBsb3cgcG9rZXIgaGFuZCBnbyBib3RoIHdheXMgYW5kIGVhY2ggd2lucyBvbmx5IG9uZSB3aGF0IGhhcHBlbnMKVW5pdHMgcmF0aGVyIHRoYW4gYSAzLDIwMCBzcS4gCkV4aXVzWGF2YXJ1cyB1ClBhcmZvaXMsIGMnZXN0IGluZGlzcGVuc2FibGUuIApQcC4gCkluc3RlYWQsIG5pbmUgb3RoZXIgY29tcGV0aXRvcnMgd2lsbCBmaW5pc2ggcG9rZXIgcmljaGVzdCB0b3VybmFtZW50IGluIE5vdmVtYmVyLCBpbmNsdWRpbmcgYSA3MiB5ZWFyIG9sZCBmb3JtZXIgSGFzYnJvIGV4ZWN1dGl2ZSBhbmQgYSAyNyB5ZWFyIG9sZCBwb2tlciBwcm8gd2hvIHdvbiBoaXMgJDEwLDAwMCBidXkgaW4gZm9yIHRoZSBubyBsaW1pdCBUZXhhcyBIb2xkIG1haW4gZXZlbnQgYnkgcGxheWluZyBkYWlseSBmYW50YXN5IHNwb3J0cy4KSGFwcGVuZWQgbGFzdCBzdW1tZXIsIHRvb2sgYSAidmFjYXRpb24iIHRvIHNlZSBJTHMuIFdlIGxpdmUgaW4gdGhlIHNvdXRoLCB0aGV5IGxpdmUgamVyc2V5IHNob3JlLiBJIGhhdmUgb3RoZXIgc3RvcmllcyBidXQgaGF2ZW4ndCBqdW1wZWQgaW4gaGVyZSBub3Qgd2FudGluZyB0byBiZSByZWNvZ25pemVkIGluIG15IG93biB0aHJlYWRzLiBIZXJlIHNob3VsZCBiZSBmaW5lIHRob3VnaC4KNTQgOTIpIEFsbCB0aGUgc29uZ3MgbGlzdGVkIGhlcmUgYXJlIlVucmVsZWFzZWQuIiBZb3UgY2FuIGZpbmQgdGhlbSBvbiBZb3V0dWJlOiBBbmltYWwsIEthYm9vbSAoZmVhdC4gTGFkeSBHYUdhKSwgV3VuZGVybGFuZChmZWF0LiBMYWR5IEdhR2EpLCBMZXQgTG92ZSBEb3duLCBCbHVlYmVycnkgS2lzc2VzLCBSZWQgQW5kIEJsdWUsUmV0cm8gUGh5c2ljYWwsIFJvY2sgU2hvdywgU2Vjb25kIFRpbWUgQXJvdW5kLCBTZXh5IFVnbHksIEdsaXR0ZXJBbmQgR3JlYXNlIChBcm91bmQpLCBObyBGbG9vZHMsUmliYm9ucywgT2ggV2VsbCwgRnV0dXJlIExvdmUgKExpdmUpLCBPdXQgT2YgQ29udHJvbCAoc2hvcnQgZGVtbyksV29yZHMsIFdvbmRlcmZ1bCwgV2lzaCBZb3UgV2VyZSBIZXJlLCBTaGFrZSBZb3VyIEtpdHR5LCBTb21ldGhpbmdDcmF6eSwgRmlsdGh5IFBvcCwgRmFuY3kgUGFudHMsIEZldmVyLCBEaXJ0eSBJY2UgQ3JlYW0sIEthbmR5IExpZmUsRm9vbGVkIE1lIEFnYWluIChIb25lc3QgRXllcyksIFJlbG9hZGVkLCBDYXB0aXZhdGVkIEVsZWN0cmljIEtpc3MsTGl2aW5nIE9uIFRoZSBSYWRpbywgU3BpbiBVQXJvdW5kIChmZWF0LiAKVGhlIG9sZGVyIG1lbWJlcnMgdHJlYXRlZCB0aGUgc3RhZmYgd2l0aCB0aGUgdXRtb3N0IHJlc3BlY3QsIGJ1dCB0aGUgZmV3IHlvdW5nZXIgbWVtYmVycyB3aG9tIGVpdGhlciBqdXN0IHNlZW1lZCB0byBtZWV0IHRoaXMgdGhyZXNob2xkIG9yIGNhbWUgZnJvbSBkYWRkeSBtb25leSBhbHdheXMgc2VlbWVkIGFzIGlmIHRoZXkgaGFkIHNvbWV0aGluZyB0byBwcm92ZSwgYm90aCBibGF0YW50bHkgYW5kIHN1YnRseSBkZWdyYWRpbmcgc3RhZmYuIEhlbGwgSSBrbm93IGRhbW4gd2VsbCBob3cgZ29vZCBpdCB3YXMgdG8gYmUgbWFraW5nICQyMy9ociBpbiBoaWdoIHNjaG9vbCBhcyB5b3VyIGZpcnN0IGpvYiwgYnV0IEkgZW5kZWQgdXAgY3J5aW5nIHRvIG15IHBhcmVudHMgd2FudGluZyB0byBxdWl0IGFmdGVyIGEgZmV3IHdlZWtzIGN1eiBJIHJlYWxpemVkIEkgaGF0ZSB3b3JraW5nIGZvciB0aGUgZXh0cmVtZWx5IHdlYWx0aGx5LgpYb3hvbWlzc2plbm4gIDIxOCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KRG9uIGJlIGVtYmFycmFzc2VkIG9mIHlvdXIgY3VyaW9zaXR5LCBldmVyeW9uZSBoYXMgcXVlc3Rpb25zIHRoYXQgdGhleSBtYXkgZmVlbCB1bmNvbWZvcnRhYmxlIGFza2luZyBjZXJ0YWluIHBlb3BsZSwgc28gdGhpcyBwbGFjZSBnaXZlcyB5b3UgYSBuaWNlIGFyZWEgbm90IHRvIGJlIGp1ZGdlZCBhYm91dCBhc2tpbmcgaXQuIEV2ZXJ5b25lIGhlcmUgaXMgd2lsbGluZyB0byBoZWxwLiAKVGhlIEJvcm4gVGhpcyBXYXkgQmFsbCBUb3VyIGlzIHNjaGVkdWxlZCB0byBraWNrIG9mZiBvbiBBcHJpbCAyN3RoLCAyMDEyIGluIFNvdXRoIEtvcmVhLiBGb3IgbW9yZSBkZXRhaWxzLCBzZWUgdGhlIHJlbGF0ZWQgbGlua3MgYmVsb3c6IElmIHlvdSBkb24ndCBrbm93IHdobyBMYWR5IEdhZ2EgaXMsIHBlcmhhcHMgeW91IGRvbid0IGxpa2UgcG9wIG11c2ljIG9yIHBlcmhhcHMgeW91IGFyZSBub3QgZnJvbSB0aGUgVW5pdGVkIFN0YXRlcywgd2hlcmUgc2hlIGlzIGEgcG9wIHNlbnNhdGlvbi4gCkJ1dCBhcyBMYSBQcmVzc2UncyBMeXNpYW5lIEdhZ25vbiBwdXQgaXQ6IGhhcmRseSBzY2FuZGFsaXppbmcgdG8gbGVhcm4gdGhhdCBpbiBjbG9zZWQgZG9vciBtZWV0aW5ncyBwb2xpdGljaWFucyBkaXNjdXNzIHBvbGl0aWNzLiAKTXJpc3VtcCAgNzcgcG9pbnRzICBzdWJtaXR0ZWQgMiB5ZWFycyBhZ28KVGhlcmUgYmVlbiBzb21lIHNwZWN1bGF0aW9uIFZhbmNvdXZlciB3YXMgdHJ5aW5nIHRvIG1vdmUgb3V0IG9uZSBvZiBpdHMgZGVmZW5jZW1hbiB0byBnaXZlIEh1Z2hlcyBtb3JlIG9mIGEgY2hhbmNlIHRvIG1ha2UgdGhlIHRlYW0sIGJ1dCB0aGUgcmVhbGl0eSBpcyBub25lIG9mIHRoZW0gaGVsZCB2YWx1ZS4gRm9yIGV4YW1wbGUsIHRlYW1zIGFyZSBub3QgbGluaW5nIHVwIHRvIHRha2UgSHV0dG9uIG9mZiB0aGUgQ2FudWNrcyBoYW5kcy4gCk1hZ2lzdHJhdGUgTWNHb3dhbiB5ZXN0ZXJkYXkgb3JkZXJlZCBNeWVycyB0byBlbnRlciBpbnRvIGEgMTIgbW9udGggZ29vZCBiZWhhdmlvdXIgYm9uZCB1bmRlciB0aGUgc3VwZXJ2aXNpb24gb2YgcHJvYmF0aW9uIGFuZCBwYXJvbGUgb2ZmaWNlcnMgYW5kIHBhcnRpY2lwYXRlIGluIGdhbWJsaW5nIGNvdW5zZWxsaW5nLgpJIHRoaW5rIGhlIGNhbWUgb3V0IGluIDE5OTIuIApXZSBsaXZlIGluIGFuIGVyYSB3aGVuIGlmIHlvdSBub3QgY29sbGVjdGluZyBkYXRhLCB5b3UgY2FuIGtub3cgd2hhdCBnb2luZyBvbiwgYW5kIHlvdSBjYW4gcmVhY3QgdG8gY29uc3VtZXIgYmVoYXZpb3IuIi4gClJhdGhlciwgSSB0aGluayB3ZSBhcmUgIm9uZSBzdGVwIGNsb3NlciIgdG8gYSBvbmUgcGFydHkgZGljdGF0b3JzaGlwIGluIHRoZSBVU0EuIApUaGUgb3duZXJzIG9mIExvdWlzJyBMdW5jaCBpbiBOZXcgSGF2ZW4sIENvbm4uIEFyZW4ndCBoYXZpbmcgYW55IG9mIHRoZXNlIHN0b3JpZXMsIHRob3VnaC4gClRoYXQgd2FzIHN1Y2ggYSBjYXRoYXJ0aWMgZXhwZXJpZW5jZSBmb3IgbWUuIApQZXJyeSdzIHJpdmFscyBxdWVzdGlvbmVkIGhpcyBjbGFpbXMgYWJvdXQgVGV4YXMgam9iIGNyZWF0aW9uLCBoaXMgc3RhbmNlIG9uIGlsbGVnYWwgaW1taWdyYW50cyBhbmQgYW4gZXhlY3V0aXZlIG9yZGVyIGhlIGdhdmUgYXMgZ292ZXJub3IgdGhhdCB5b3VuZyBnaXJscyBiZSB2YWNjaW5hdGVkIGZvciBhIHNleHVhbGx5IHRyYW5zbWl0dGVkIHZpcnVzIHRoYXQgY2F1c2VzIGNlcnZpY2FsIGNhbmNlciwgdGhlIGxhdHRlciB3aGljaCBoZSBhZG1pdHRlZCB3YXMgYSBtaXN0YWtlLApBbmQgd2VudCBsYXRlIGFuZCB0cmllZCB0byBtYWtlIGEgcGFydHkgb3V0IG9mIGl0LiAKd2hhdCBhcmUgeW91IHdlYXJpbmcgd2VkbmVzZGF5CkR1cmluZyBWb2x1bnRlZXIgQXBwcmVjaWF0aW9uIFdlZWssIEJydWlucyBhcmUgaW52aXRlZCB0byBwYXJ0aWNpcGF0ZSBieSBzaWduaW5nIHVwIGZvciBzZXJ2aWNlIHByb2plY3RzLCBzaGFyaW5nIHZvbHVudGVlciBleHBlcmllbmNlcyBvbiB0aGUgVm9sdW50ZWVyIENlbnRlcidzIHNvY2lhbCBtZWRpYSBwYWdlcyAoRmFjZWJvb2ssIFR3aXR0ZXIsIEluc3RhZ3JhbSksIGFuZCB0aHJvdWdoIGEgdmFyaWV0eSBvZiBzZXJ2aWNlIGFjdGl2aXRpZXMgZGVzaWduZWQgYm90aCB0byBhcHByZWNpYXRlIHRob3NlIHdobyBoYXZlIGJlZW4gaW52b2x2ZWQgYW5kIHRvIGluc3BpcmUgb3RoZXJzIHRvIHNlcnZlLiBDaGVjayBvdXQgdGhlIFZvbHVudGVlciBBcHByZWNpYXRpb24gV2VlayB3ZWJwYWdlIGZvciBtb3JlIGluZm9ybWF0aW9uLCBhbmQgbWFrZSBzdXJlIHlvdXIgb3JnYW5pemF0aW9uIGlzIGFwcHJlY2lhdGVkIHRoaXMgU3ByaW5nIS4gCllvdSBtYXkgaGF2ZSB0byBkZWNpZGUgd2l0aCB5b3VyIGJ1ZGdldC4gQnV0IHJlbWVtYmVyLCBiYXJnYWlucyBhbmQgZGlzY291bnRzIGFyZSBhdmFpbGFibGUsIHNvIGRvIGFzIG11Y2ggcmVzZWFyY2ggYXMgeW91IGNhbi4gClJ1Y2EgaGFzIHN1Y2ggYSBuaWNlIHRhc3RpbmcvbWVhbCEgTXkgd2lmZSBhbmQgSSB2aXNpdGVkIEFyZ2VudGluYSBhbmQgQ2hpbGUgd2l0aCBzb21lIE1lbmRvemEgbmF0aXZlcyB3b3JraW5nIHVwIGluIGNhbGlmb3JuaWEgYXMgd2luZW1ha2Vycy4gV2UgaGFkIHF1aXRlIGEgZmV3IEFzYWRvIHdpdGggdGhlIG9uZSBvZiB0aGUgd2luZW1ha2VycyBmcm9tIFJ1Y2EgdGhhdCB3ZXJlIGFsc28gZ3JlYXQsIGJ1dCB0aGUgdGFzdGluZyBhdCB0aGUgd2luZXJ5IHdhcyB0aGUgaGlnaGVzdCBxdWFsaXR5IGZvb2QgSSBtYXkgaGF2ZSBldmVyIGVhdGVuIGFueXdoZXJlLiBSaWNjaXRlbGxpIHdhcyBhbm90aGVyIHN0YW5kIG91dCwgYWJzb2xvdXRlbHkgYmVhdXRpZnVsIGZhY2lsaXR5IGFuZCBleGNlbGxlbnQgd2luZXMsIHBhcnRpY3VsYXJseSB0aGUgb2xkIHZpbmUgYm90dGxpbmdzIGZyb20gUmlvIE5lZ3JvLi4gCk9uZSB0aGluZyBpcyBmb3Igc3VyZTsgdGhlIGdhbWJsaW5nIHdvcmxkIGhhcyB1bmRlcmdvbmUgYSBjb21wbGV0ZSBldm9sdXRpb24gc2luY2UgaXQgZmlyc3QgY2FtZSBpbnRvIGV4aXN0ZW5jZS4uIApFbiBHcmNlLCBkYW5zIGxldXIgZGVzY3JpcHRpb24gZGUgMTQgbml2ZWF1eCBkZSBsJ2Ftb3VyLCBsZSAxaWVyIHMnYXBwZWxsZSBsJ2Ftb3VyICJQb3Jub2UiLCBjJ2VzdCAgZGlyZSAibCdhbW91ciBkZSBwZWF1ICBwZWF1IiBldCBpbCBzZSBkdmVsb3BwZSBkdXJhbnQgbGEgcGV0aXRlIGVuZmFuY2UgZGUgMCAgMyBhbnMuIER1cmFudCBjZXR0ZSBwcmlvZGUsIGlsIGVzdCBjb25zZWlsbCBkZSBsaWJyZXIgdG91dGUgc2EgdGVuZHJlc3NlIHN1ciBsJ2VuZmFudCBwYXIgZGVzIGNhcmVzc2VzLCBkZXMgYmlzb3VzLCBkdSBwZWF1ICBwZWF1LCBkZXMgZG9kbyBvdSBkZXMgc2llc3RlcyBhdmVjIGwnZW5mYW50IGV0IHVuZSBncmFuZGUgcHJveGltaXQuIFB1aXMgZGUgMyAgNSBhbnMsIHRlbmRyZSBwcm9ncmVzc2l2ZW1lbnQgdmVycyB1biByZXNwZWN0IGRlIHNvbiBhdXRvbm9taWUgZXQgZGUgc29uIGludGltaXQgcG91ciBsZSByZW5kcmUgYXV0b25vbWUsIHNjdXJlIGV0IGNvbmZpYW50IGVudHJlIDUgZXQgNyBhbnMuCkltIGFsbCBmb3IgbGV0dGluZyB0aGUgc2xlZXBpbmcgZ29kcyBsaWUsIHdlIHJlYWxseSBuZWVkIG5ldyBibG9vZCAoTE9MKSBvbiB0aGUgSVAuLiAKRnVydGhlcm1vcmUgdGhpcyBpcyB0aGUgdHVybiB3aGVyZSB5b3Ugc2hvdWxkIGFjdGl2YXRlIEhOQSBhZ2Fpbi4uIApGZWJydWFyeSBjYW1lLCBhbmQgd2l0aCBpdCwgbGF5b2Zmcy4gSSB3YXMgb25lIG9mIHRoZSBmaXJzdCB0byBnbywgYW5kIHdoaWxlIEkgd2FzIHRvbGQgaXQgd2FzbiBiZWNhdXNlIG9mIHRoZXNlIHRoaW5ncywgbWFueSBvdGhlcnMgd2hvIHdlcmUgcHVzaGluZyBiYWNrIHdlcmUgbGV0IGdvIHdpdGggbWUuIApZb3UgbWlzcmVwcmVzZW50ZWQgYW4gb3BwcmVzc2VkIG1pbm9yaXR5IGFzIGJlaW5nIHJhY2lzdCB3aGVuIGluIGZhY3QgdGhlIHdoaXRlIGRyaXZlciBpcyB0aGUgcmFjaXN0IG9uZS5FZGl0OiBXaGF0J3MgdXAgd2l0aCBhbGwgdGhlIGZhc2Npc3RzIG9uIHRoaXMgdGhyZWFkIGRvd252b3RpbmcgbWU/IEkgZGlkbid0IHJlYWxpemUgaG93IG1hbnkgbmF6aXMgaGFkIGluZmlsdHJhdGVkIHRoaXMgc3ViLkVkaXQgMjogV293LCB0aGlzIHJlYWxseSBibGV3IHVwISBUaGFua3Mgc3RyYW5nZXJzIDMwIHBvaW50cyAgc3VibWl0dGVkIDExIGhvdXJzIGFnb0hlciBzaHV0dGluZyBkb3duIGFuZCBub3QgdGFsa2luZyBhYm91dCBpcyBidWxsc2hpdC4gCklmIHlvdSB1c2UgdGhlIGxvY2FsIHRheGkgYXBwIGl0IGNvc3RzICQxIHRvIGdldCB0byBjZW50ZXIpLiBJIHN0YXllZCBpbiB0aGUgY2VudGVyIG9mIHRoZSBjaXR5IGFuZCBiZWxpZXZlIG1lIGl0IHdhcyB0byBjcm93ZGVkIGFuZCBtb3JlIGV4cGVuc2l2ZS4gVGhpcyBob3RlbCBpcyBhcm91bmQgY29mZmVlIHNob3BzLCByZXRhaWwgc2hvcHBpbmcsIHJlc3RhdXJhbnRzIGV0YyBldGMuIApEYWxjYW50NzU3ICAyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpDYW4gc2hlIGNyb2NoZXQva25pdCBnaWZ0cyBpbnN0ZWFkIHdoaWNoIG1heSBjdXQgZG93biBvbiBhIGZldyBjb3N0cyBhbmQgZ2lmdCBhIGJlYXV0aWZ1bCBnaWZ0LiBNYWtlIHNvbWUgc3VnYXIgc2NydWJzIGV0Yy5JcyBpdCBwb3NzaWJsZSB0byBicmVhayBkb3duIHRoZSBqb2ludCBhY2NvdW50IGZ1cnRoZXIuIEV4cGVuc2VzICh3aGljaCBpbmNsdWRlcyBiaWxscyBzdWNoIGFzIHJlbnQsIGludGVybmV0LCB3YXRlciwgZ2FzIGV0YyksIGZ1biBtb25leSwgc2F2aW5ncy4gV2hlbiBzaGUgc2VlcyBob3cgbXVjaCBzaGUgc3BlbmRzIG9uIGdpZnRzIGRvZXMgdGhhdCBtZWFuIGl0IGNvdWxkIG1lYW4gdGhhdCB5b3UgY291bGQgaGF2ZSBoYWQgYSB0cmlwIG91dCBvZiBzdGF0ZSBpbnN0ZWFkIGV0Yy4gCklmIHlvdSdyZSBpbiB0aGUgZWFybHkgcG9zaXRpb24gKGZpcnN0IG9yIHNlY29uZCB0byBiZXQpLCB5b3UnbGwgcGxhY2UgYSBzaW5nbGUgYmV0LiBBbnlvbmUgd2l0aCBhIGRlY2VudCBoYW5kIHdpbGwgY2FsbCwgaG9wZWZ1bGx5IHNvbWVvbmUgbWlnaHQgcmFpc2UuIApUaGVyZSBzaG91bGQgYmUgc29tZSB3ZWlnaHQgdG8geW91ciB3YWxrLiAKVG91am91cnMgZW4gQW5nbGV0ZXJyZSwgbGVzIGVmZmV0cyBkdSBwcm9ncmFtbWUgc29udCB0ZWxsZW1lbnQgcHJvYmFudHMgcXVlIGxlcyByZXNwb25zYWJsZXMgZHUgTUlTUCBzb250IGludml0cyBwYXIgbGUgTWluaXN0cmUgZGUgbCdkdWNhdGlvbiAgcGFydGljaXBlciBhdXggYXRlbGllcnMgcG91ciBjb250cmVyIGwnaW50aW1pZGF0aW9uLiBDZXJ0YWlucyBlbmZhbnRzIG9udCBkZXMgY29tcHRlbmNlcyBzb2NpYWxlcyBsaW1pdGVzIGV0IGlscyBuZSBzYXZlbnQgcGFzIGNvbW11bmlxdWVyIGF1dHJlbWVudCBxdWUgZGUgZmFvbiBicnVzcXVlLiAKT2YgY291cnNlLCBpdCB3b3VsZCBub3QgYmUgYSBMYWR5IEdhZ2EgaGFsZnRpbWUgc2hvdyB3aXRob3V0IGFuIG91dGZpdCBjaGFuZ2UuIEFzIHNoZSBraWNrZWQgdGhlIHJvdXRpbmUgYmFjayBpbnRvIGhpZ2ggZ2VhciB3aXRoICJCYWQgUm9tYW5jZSwiIHNoZSBhbHNvIGNoYW5nZWQgaW50byBoZXIgdmVyc2lvbiBvZiBmb290YmFsbCBnZWFyIHdpdGggYSByaGluZXN0b25lIGVuY3J1c3RlZCBjcm9wIHRvcCBhY2Nlc3Nvcml6ZWQgd2l0aCBzaG91bGRlciBwYWRzIGFuZCBhIGJlZGF6emxlZCBwYWlyIG9mIGJpa2luaSBib3R0b21zLgpCdXQgSmFja3NvbiBoYWQgYSBjb21wbGV0ZWx5IG5ldyB2aXNpb24gZm9yIHRoaXMgc3RlcDogd2FzIGdvaW5nIHRvIHdhbGsgYmFja3dhcmQgYW5kIGZvcndhcmQgYXQgdGhlIHNhbWUgdGltZSwgbGlrZSB3YWxraW5nIG9uIHRoZSBtb29uLCBoZSB3cm90ZS4gVGhlIG5pZ2h0IGJlZm9yZSB0aGUgMjUgcGVyZm9ybWFuY2UsIEphY2tzb24gd29ya2VkIHRoZSBtb3ZlIGVuZGxlc3NseSBpbiB0aGUga2l0Y2hlbiBvZiBoaXMgcGFyZW50cyBob3VzZS4ga2luZCBvZiBsZXQgdGhlIGRhbmNlIGNyZWF0ZSBpdHNlbGYsIGhlIHdyb3RlLiBIZSBjb21iaW5lZCBhIG51bWJlciBvZiBkaWZmZXJlbnQgZWxlbWVudHMgdG8gZm9ybSBzb21ldGhpbmcgbm9ib2R5IGhhZCBldmVyIHNlZW4gYmVmb3JlIGEgY29oZXNpdmUgZGFuY2UgdGhhdCB3YXMgYWxsIGhpcyBvd24sIGFuZCB3aXRoIHdoaWNoIGhlIHdpbGwgZm9yZXZlciBiZSBpZGVudGlmaWVkLgpGb3IgZXhhbXBsZSwgVW5pYmV0IGlzIGEgZm91bmRpbmcgbWVtYmVyIG9mIEVHQkEgYW5kIEVTU0EsIGFuZCBoYXMgYmVlbiBiZWhpbmQgdGhlIEVVIFJlc3BvbnNpYmxlIEdhbWluZyBEYXkgaW4gdGhlIEVVIFBhcmxpYW1lbnQuIEl0IGlzIGFsc28gYW4gYW5udWFsIGRvbmF0b3IgdG8gdGhlIEdhbWJsaW5nIFRoZXJhcHkuIAoiSXQgbG9va3MgbGlrZSBFcHNvbSBTYWx0IG9yIHNvbWV0aGluZyB5b3UgcHV0IGluIGEgYmF0aHR1Yi4gVGhlc2UgZ3V5cyBhcmUgc2VjcmV0aXZlIGluIGhvdyB0aGV5IG1hbnVmYWN0dXJlIGl0LCIgTGFuZSBzYWlkLgpUaHVzLCBJIGZpZ3VyZSB0aGF0IEkgY2FuIGNhcnJ5IG92ZXIgdGhhdCBpbnRvIHJlYWwgZXN0YXRlLiAKVGhlIGJvb2sgb3BlbnMgd2l0aCBhIGdlbmVyYWwgaW50cm9kdWN0aW9uIHRvIG91ciBuYXR1cmFsIGhhYml0YXRzIGFuZCB0aGUgZGlmZmVyZW50IHdheXMgYW5pbWFscyB0dXJuZWQgdXAgaW4gTmV3IFplYWxhbmQgKEkgd291bGQgaGF2ZSBsb3ZlZCBhbiBpbGx1c3RyYXRpb24gc2hvd2luZyBHb25kd2FuYWxhbmQgYW5kIE5ldyBaZWFsYW5kIGJyZWFraW5nIGF3YXkgZnJvbSBlYWNoIG90aGVyIDgwIG1pbGxpb24geWVhcnMgYWdvKSwgYW5kIGFsc28gcmFpc2VzIHNvbWUgY29uc2VydmF0aW9uIGlzc3Vlcy4gV2hlcmUgYXBwcm9wcmlhdGUsIGVhY2ggY3JlYXR1cmUgaXMgbGFiZWxsZWQgd2l0aCBpdHMgTW9yaSBuYW1lIGFuZC9vciBFbmdsaXNoIG5hbWUgKGV4Y2VwdCBmb3IgdGhlIFB1a2VrbyB3aGljaCBtaXNzZXMgb3V0IG9uIGFsc28gYmVpbmcgbmFtZWQgc3dhbXAgaGVuKS4gVGhlcmUgaXMgdGhlIG9jY2FzaW9uYWwgY2x1bmt5IHNlbnRlbmNlIGJ1dCBvbiB0aGUgd2hvbGUgdGhlIHRleHQgaXMgd2VsbCB3cml0dGVuLiAKQmVjYXVzZSB0aGVzZSB0aGluZ3MgYXJlIGNhdXNpbmcgeW91IGV4dHJlbWUgc3RyZXNzIGJ5IG9ic2Vzc2luZyBvdmVyIHRoZW0geW91IGFyZSBmb3JjaW5nIHlvdXIgYm9keSB0byBnbyBpbnRvIGZpZ2h0IG9yIGZsaWdodCBtb2RlIGFuZCBpdCBpcyBjYXVzaW5nIHlvdSB0byBoYXZlIGFueGlldHkgYXR0YWNrcy4KQWZ0ZXIgbG9va2luZyBmb3IgYW4gaW50ZXJuZXQgY2FmZSBhbmQgZXZlbiBjaGVja2luZyBpZiB0aGUgcG9saWNlIHN0YXRpb24gd291bGQgbGV0IHVzIHVzZSB0aGVpciBjb21wdXRlcnMgKHRoZXkgZGlkbiBoYXZlIGNvbXB1dGVycyBidXQgdGhleSB3ZXJlIHZlcnkgZnJpZW5kbHkgYW5kIGludml0ZWQgdXMgaW4gdG8gc2l0IGRvd24gYW5kIGhhdmUgYSBjaGF0ISkgd2UgZW5kZWQgdXAgYmFjayBhdCB0aGUgTW92ZW5waWNrLiBIb3JyaWJsZSBuZXdzIGF3YWl0ZWQgdXMgICBKZXNzIHdhcyBub3QgY29taW5nLiBXZWF0aGVyIGhhZCBjYW5jZWxlZCBoZXIgZmxpZ2h0IGFnYWluIGFuZCB3aGVuIHNoZSB3YXMgcmVyb3V0ZWQgdGhyb3VnaCBhbm90aGVyIGNpdHksIHRoZSBwaWxvdCBkaWRuIHNob3cgdXAuIApNZW1iZXJzIG9mIENocmlzdGlhbiwgSmV3aXNoIGFuZCBNdXNsaW1zIG9yZ2FuaXphdGlvbnMsIGFsb25nIHdpdGggb3RoZXIgY2hhcml0YWJsZSBhbmQgbm9uIHByb2ZpdCBncm91cHMsIGFkZHJlc3NlZCBpc3N1ZXMgc3VjaCBhcyBjaGlsZHJlbiBzYWZldHksIGZvcmVjbG9zdXJlcywgaW1taWdyYXRpb24sIGFuZCBlZHVjYXRpb24uLiAKV2hlbiB5b3UgbWVudGlvbmVkIHRoZSB3ZXQgc3F1aXJ0LCBJIHRob3VnaHQgaXQgbWF5IGhhdmUgYmVlbiBsb3Rpb24sIGJ1dCB0aGF0IHByZXR0eSBvYnZpb3VzIHdoYXQgdGhhdCBmZWVscyBsaWtlOyBpdCBkb2VzbiB0ZW5kIHRvIGZlZWwgbGlrZSBzZW1lbi4gCkFub3RoZXIgcmlzayBvZiBjaGlja2VucG94IGR1cmluZyBwcmVnbmFuY3kgaXMgdGhhdCB0aGUgaW5mYW50IG1heSBjb250cmFjdCBpdC4gSWYgdGhlIG1vdGhlciBkZXZlbG9wcyBoZXIgY2hpY2tlbnBveCByYXNoIGJldHdlZW4gNiBhbmQgMjEgZGF5cyBiZWZvcmUgZGVsaXZlcnksIGhlciBiYWJ5J3MgY2FzZSBpcyBsaWtlbHkgdG8gYmUgbWlsZCBhbmQgcmVxdWlyZSBubyB0cmVhdG1lbnQuIApIZSBhbHNvIHNjYW1tZWQgJDE4IG1pbGxpb24gb3V0IG9mIFdlc3RwYWMsIEJhbmsgb2YgUXVlZW5zbGFuZCwgTGEgVHJvYmUgRmluYW5jaWFsIFNlcnZpY2VzLCBSaGlubyBNb25leSBhbmQgTWVyY2VkZXMgQmVueiBGaW5hbmNpYWwgU2VydmljZXMgdXNpbmcgdGhlIHNhbWUgIm1vZHVzIG9wZXJhbmRpIi4KRGFzIEd1dGFjaHRlbiB3dXJkZSBuYWNoIHNvcmdmbHRpZ2VyIGJlcmxlZ3VuZyB1bmQgemllbGdlcmljaHRldCBpbiBBdWZ0cmFnIGdlZ2ViZW4sIHVtIGVpbiBGZWVkYmFjayB2b24gcnVuZCAxLjMwMCBDYXNpbm8gR2FtZXMgbiBiZXIgaWhyZSBFcmZhaHJ1bmdlbiBtaXQgcyB1bmQgaWhyZSBFcndhcnR1bmdlbiBhbiBlYmVuZGllc2UgenUgZXJoYWx0ZW4uIDYzIFByb3plbnQgZGVyIGJlZnJhZ3RlbiBDYXNpbm8gR2FtZXMgIGJlc3R0aWd0ZW4sIGRhc3Mgc2llIG1pdCBpaHJlbiBkZXJ6ZWl0aWdlbiBzIG5pY2h0IHp1ZnJpZWRlbiB3YXJlbiB1bmQgNDYgUHJvemVudCBmaHJ0ZW4gYXVzLCBkYXNzIHNpZSBub2NoIG5hY2ggZWluZW0gIG1pdCBndXRlciBSZXB1dGF0aW9uIHVuZCBnYXJhbnRpZXJ0ZW4gR2FtZXMgc3VjaGVuLiAzNiBQcm96ZW50IHdhcmVuIG1pdCBpaHJlbSBha3R1ZWxsZW4gIHNjaG9uIGhldXRlIHp1ZnJpZWRlbi4uIApJZiBZZWdnZSBoYWRuJ3QgYmVlbiBzbyBlYXNpbHkgc29sZCBvbiBDcmFpZ3NsaXN0LCBpZiBzaGUgaGFkIGhhZCBhIGhhcmRlciB0aW1lIGJlY29taW5nIGFuIHVuZGVyYWdlIGVzY29ydCwgcGVyaGFwcyBzaGUgbWlnaHQgbm90IGhhdmUgYmVlbiB3b3VuZCB1cCBtdXRpbGF0ZWQgaW4gdGhlIE5ldmFkYSBkZXNlcnQuCkRlYWxlciB3YXMgQXNpYW4gd2l0aCBhIG1vZGVyYXRlIGFjY2VudC4gSW1tZWRpYXRlbHkgYWZ0ZXIgc2hlIG11Y2tzIG15IGhhbmQsIHRoZSB0YWJsZSBzdGFydHMgYmFja2luZyBtZSB1cCB0aGF0IHRoZXkgaGVhcmQgY2FsbCwgYW5kIHRoZSBvdGhlciBwbGF5ZXIgaXNuIGV2ZW4gYXJndWluZy4gSWYgdGhlIHRhYmxlIGRpZG4gYmFjayBtZSB1cCwgYW5kIHRoZSBvdGhlciBwbGF5ZXIgd2FzIGFyZ3VpbmcsIGRvIHlvdSB0aGluayB0aGUgZmxvb3IgY291bGQgaGF2ZSBwb3NzaWJseSBtYWRlIG1lIGZvbGQgYW5kIG11Y2sgdGhlIG51dHM/PyBOZXh0IHRpbWUgSSBjZXJ0YWlubHkgcHV0dGluZyBhIGNoaXAgaW4gd2hlbiBpIGNhbGwsIGFuZCBJIGFkdmlzZSB5b3UgZ3V5cyB0byBkbyB0aGUgc2FtZSEuIApJIGRvbiBwbGF5LCBzbyB3aGVyZSBpdCBzYWlkICJlbXBsb3llZSBjb21tZW50cyIgb24gdGhlIHdyaXRlIHVwIEkgc2FpZCAic2VlIGF0dGFjaGVkIiBhbmQgdHlwZWQgb3V0IGEgMyBwYWdlIGRlZmVuc2UgdGFsa2luZyBhYm91dCBob3cgSSB0aG91Z2h0IGl0IHdhcyB1bmZhaXIgYW5kIGhvdyBJIHRob3VnaHQgcGVvcGxlIGhhZCBiZWVuIGdldHRpbmcgdHJlYXRlZCB1bmZhaXJseSBmb3IgYSB5ZWFyIG5vdy4gCkkgY2FudCBldmVuIHRoaW5rIG9mIGFueSBibHVmZnMgZm9yIGhpbSB0byBoYXZlLiBJZiBoZSB3YXMgYmx1ZmZpbmcgd2l0aCBRVC9LVCBvbiB0aGUgZmxvcCBoZSBnb3QgdGhlcmUgb24gdGhlIHR1cm4gYW5kIFR4K3N0cmFpZ2h0YmxvY2tlciB3b3VsZCBiZSBoaXMgb25seSByZWFsIGJsdWZmLiBIZSB3aWxsIGhhdmUgQUEvS0svVFQvQVQvQUsgYWx3YXlzIHByZXR0eSBtdWNoLiBzdWl0ZWQgY29ubmVjdGVycyBwcm9iYWJseSBhcmVuIHJhaXNpbmcgdXRnIGFuZCBiZXR0aW5nIDQgd2F5cy4KSWYgZXZlcnl0aGluZyBpcyB2ZXJ5IGNsb3NlLCBvZGRzIGFyZSwgeW91IGRvbmUgYSBnb29kIGpvYiBhbmQgeW91IGNhbiBub3cgbW92ZSBvbnRvIHNpbW1pbmcgZGlmZmVyZW50IGdlbXMvZW5jaGFudHMuIApJZiB5b3UgcGljayBTQU0geW91IGdvdHRhIHJlcHJlc2VudC4gTG90dGEgcHBsIHNheSBTQU0gaXMgZWFzeSBvciBzaW1wbGUgYW5kIGl0IHJlYWxseSBubyBkaWZmZXJlbnQgdGhhbiBhbnkgb3RoZXIgY2xhc3MgYnV0IEkgbm90aWNlZCBxdWl0ZSBhIGxvdCBvZiBsZXNzIHRoYW4gYWNjZXB0YWJsZSBTQU1zIHNpbmNlIGl0cyBpbnRyb2R1Y3Rpb24uIFNhbWUgYXMgbW9zdCBjbGFzc2VzLCBidXQgU0FNIGluIHBhcnRpY3VsYXIuCldlIGhhZCBmcnVpdHMgZGUgbWVyIGFuZCBzdGVhayBmcml0ZXMgICBzaW1wbGUgZm9vZCwgYnV0IHZlcnkgbm9zdGFsZ2ljIGFuZCBkZWxpY2lvdXMuLiAKVGhlaXIgcHJvYmxlbXMgYXJlIHJlYWwgYW5kIHdpbGwgbm90IGRpc2FwcGVhciBvciB3b3JrIG91dCBvbiB0aGVpciBvd24gYXMgc29tZSBwZW9wbGUgb24gYm90aCBzaWRlcyBoYXZlIGxhdGVseSBzdGFydGVkIGJlbGlldmluZy4gSW5kaWEgUGFraXN0YW4gcGVhY2Ugd2lsbCBub3QgY29tZSB0aHJvdWdoIGNvcnBvcmF0ZSBsaW5rcyBvciBleGNoYW5nZSBvZiBwZXJzb25hbCBjYW1lb3MgaW5jbHVkaW5nIGdpZnRzIG9mIGpld2VsbGVyeSwgc2FyaXMsIHNoYXdscywgc2FmYXMgKHR1cmJhbnMpIG9yIGV2ZW4gZ2VzdHVyZXMgb2YgaHVtaWxpdHkgaW4gY2xhc3BlZCBoYW5kcy4uIAoiV2hhdD8gWW91IG1lYW4geW91d2VyZSBjYWxjdWxhdGluZyBwcm9iYWJpbGl0aWVzIGFuZCwgdW0sIHBvdCBvZGRzLCBhbmQsIGVyLCByZXZlcnNlIGltcGxpZWQgb2RkcyBpbiB5b3VyIGhlYWQ/IEFsbCB0aGUgdGltZT8gR29zaCwgdGhhdCdzIGltcHJlc3NpdmUuIgpUdXJuIHRoZSBkb3VnaCBvdXQgb250byBhIHdlbGwgZmxvdXJlZCBib2FyZCwgcm9sbCBpdCBpbnRvIGEgYmFsbCwgY3V0IGluIGhhbGYsIGFuZCBmb3JtIGludG8gMiBmbGF0IGRpc2tzLi4gCk9uZSBuZXcgbW92ZTogVGhlIEJyZWF0aCBvZiBKb3ksIGRvbmUgdHdvIHdheXMuIApUaGF0IHdheSB3aGVuIHlvdSBiZXQgdHVybiBhbmQgaGUgcmFpc2VzIHlvdSBjYW4gY2FsbCBjb21mb3J0YWJseS4gVGhlbiBvbiB0aGUgcml2ZXIgYy9jIGFuZCBub3QgZ28gYnJva2UuIE9yIGZvbGQgaWYgeW91IHJlYWxseSB0aGluayBoZSBoYXMgcXVhZHMuIApNYW5pYWNzIGhhdmVuJ3QgYW55IHJlZ2FyZCBmb3IgdGhlIHF1YW50aXR5IG9mIG1vbmV5IGFuZCB3aWxsIGZyZXF1ZW50bHkgaGF2ZSBhIGxvdCBvZiBpdC4gVGhpcyBpcyBleGFjdGx5IHdoeSB3aGVuIHlvdSBmaW5kIGEgbWFuaWFjIGF0IHRoZSBwb2tlciB0YWJsZSwgeW91IHdpbGwgaGF2ZSB0byBwdXQgdXAgYmFjayBmb3IgYSBncmVhdCBoYW5kIGFuZCBtYWtlIHlvdXIgbW92ZS4gClN0aWxsLCBoaXMgZWxldmF0aW9uIHVwIHRoZSByYW5rcyBoYWQgY29tZSBpbiB0aW1lIGZvciB0aGUgSVBMIGF1Y3Rpb24sIHdoZXJlIGhlIHdhcyBib3VnaHQgZm9yIElOUiA4LjUgY3JvcmVzIGJ5IERlbGhpIERhcmVkZXZpbHMsIHdobyBoYWQgbWFkZSBhIGNvbnNjaW91cyBkZWNpc2lvbiB0byByZWNydWl0IHlvdW5nZXIgcGxheWVycyB0aGlzIHllYXIuIE5lZ2kgaGFkIGZpdCB0aGUgcHJvZmlsZSwgYnV0IGFmdGVyIGEgZGlzbWFsIHNlYXNvbiBoZSBwbGF5ZWQgb25seSBlaWdodCBvZiB0aGUgdGVhbSAxNCBtYXRjaGVzIGFuZCBib3dsZWQgYSBtZXJlIG5pbmUgb3ZlcnMgaW4gdGhlIGVudGlyZSB0b3VybmFtZW50IGhlIGZlbHQgaGUgd2FzIHVuZGVydXNlZC4uIAoiV2VsbCBJIG5vdCBoZXJlIHRvIHRhbGsgc28gbGV0cyBnZXQgc3RyYWlnaHQgdG8gdGhlIHBvaW50LCBpdHMgY29tZSB0byBteSBhdHRlbnRpb24gdGhhdCB5b3Ugbm8gbG9uZ2VyIGZlZWwgcGFpbiwgc28gd2UgYmUgcmVkZXNpZ25pbmcgeW91LiIgSSByYWlzZWQgbXkgaGFuZCB0byBzaWduaWZ5IHRoYXQgSSBoYWQgc29tZXRoaW5nIHRvIHNheS4gIk5vIHRoaXMgaXMgbm90IG5lZ290aWFibGUiIHNhaWQgTHVjaWZlci4gCkJlY2F1c2UgYSBsYXJnZSBwb3J0aW9uIG9mIHRoZSB2ZWdhbiBhdWRpZW5jZSBhcmUgYW50aSBzY2llbmNlIGZhZCBkaWV0ZXJzIGxvb2tpbmcgZm9yIGEgbWlyYWNsZSBjdXJlIHRvIGV2ZXJ5IGxpZmUgcHJvYmxlbS4gCk5vdyB0aGVyZSBhcmUgb3ZlciBodW5kcmVkcyBvZiBwb2tlciBzaXRlcyBhdmFpbGFibGUgYmVjYXVzZSBvZiB0aGUgZ3Jvd2luZyBudW1iZXIgb2Ygb25saW5lIHBva2VyIGVudGh1c2lhc3QuCkkgbW92ZWQgdG8gR2VybWFueSAzIHllYXJzIGFnbyB3aXRoIG15IGh1c2JhbmQgYW5kIEkgZGlkIHRoZSB3aG9sZSBpbW1lcnNpb24gY2xhc3Nlcy4gClN0dXBvZHdlYnNvdGUgdQpJbiBmYWN0LCB0aGUgdmFzdCBtYWpvcml0eSBjYW4gYmUgaW1wcm92ZWQgdXBvbi4gCkluIG9yZGVyIHRvIGdldCBhIGdhbWJsaW5nIGxpY2Vuc2UgYnkgYWdlbmNpZXMgdGhhdCBoYXZlIGdvb2QgcmVwdXRhdGlvbiwgb3BlcmF0b3JzIGhhdmUgdG8gbWVldCBjZXJ0YWluIHJlcXVpcmVtZW50cy4gCkFuZCB0aGUgcmVhbCBwYWluIGlzIHdoZW4geW91IG5lZWQgYSBjYXAgb24geW91ciB0b290aCBhbmQgdGhlIGFuZXN0aGVzaWEgd2VhcnMgb2ZmIHdoaWxlIGhlIGlzIGRyaWxsaW5nLCBub3cgdGhhdCBwYWluLiBCdXQgYSBjYXIgYWNjaWRlbnQgaGFwcGVuZWQgZHVyaW5nIHRoZSBwcm9jZWR1cmUgYW5kIHRoZSBkb2MgZGlkbiBub3RpY2UgdGhhdCB0aGUgYW5lc3RoZXNpYSBoYXMgcGFzc2VkLiBZb3UgZmluZS4gClNvIG9wZW5pbmcgdXAgYSBzZWNvbmQgZnJvbnQgYWdhaW5zdCBhIG5hdGlvbiB0aGF0IGlzbiBmdWxseSBwcmVwYXJlZCBpcyBhIHN0cmF0ZWdpYyBtb3ZlLiAKIkxpdiBpcyBhbiBleGNlbGxlbnRseSBjb25zdHJ1Y3RlZCBkb2xsIHdpdGggbXVjaCBiZXR0ZXIgZnVuY3Rpb25hbGl0eSB0aGFuIG1vc3Qgb2YgaGVyIGNvbXBldGl0b3JzLiIuIApUaGlzIGdhbWUgaXMgZWFzeSB0byB3aW4sIGJ1dCBteSBmcmllbmRzIGhhdmUgc3RhcnRlZCB0byBjYWxsIG1lIGJ5IGFjY3J1YXRlIG5hbWVzLCB0aGF0IGlzLCB0aGV5IGNhbGwgbWUgYW4gb2xkIG1hbiBjb2ZmZWUgKHRoZXkgbGVhcm5lZCB0aGlzIHRlcm0gb25saW5lKS5NeSBmYXRoZXIgaGFzIGEgY29uc3RydWN0aW9uIGNvbXBhbnkuIEhlIGdyb3dzIG9sZC4gCkkgd2FudGVkIHRvIGJyaW5nc29tZXRoaW5nIGRpZmZlcmVudCB0byB0aGUgdGFibGUuIFdlIHNpdHRpbmcgYWNyb3NzZnJvbSBlYWNoIG90aGVyIGFuZCB0aGVuIGV2ZXJ5IGZld3NlY29uZHMgdGhlcmUgY2hpcHN0aGF0IGFyZSBtb3ZpbmcgYXJvdW5kLiAKVGhlIHNlY29uZCB0aW1lIGEgY2xpZW50IGFza3MgbWUgdGhpcywgSSB0ZWxsIHRoZW0gIldlIHdpbGwgc2V0IGFzaWRlIG91ciB3aG9sZSBuZXh0IHNlc3Npb24gdG8gcGljayB0aHJvdWdoIHRoZSBEU00gViBhbmQgZmluZCB5b3VyIGRpYWdub3Npcy4iIEkgdGhlbiBleHBsb3JlIHdpdGggdGhlbSB3aGF0IHdlIGFyZSBtYXliZSBsb29raW5nIGF0LCBiYXNlZCBvbiB0aGVpciBzeW1wdG9tcy4KSW4gYSByYWlzZS9qYW0gc3BvdCB3aXRoIHNheSBLSm8gZm9yIDE1YmJzIGluIHRoZSBDTywgaXQgYmV0dGVyIHRvIGphbSBiZWNhdXNlIGl0IGRvZXMgdGhlIGJlc3QgYXQgcHJvdGVjdGluZyBpdHMgZXF1aXR5LiBJZiB5b3UgY2FuIHJhaXNlL2ZvbGQsIGFuZCBpdCBhIHByb2ZpdGFibGUgamFtLCBqYW0gaW5zdGVhZC4gCkFueW9uZSB3aG8gcGFydGljaXBhdGVzIGluIHJlZ3VsYXIgYWN0aXZpdHkgbWF5IGJlbmVmaXQgZnJvbSBhIHNwb3J0cyBtYXNzYWdlLgpMaWZlIHdpbGwgYWJzb2x1dGVseSBpbXByb3ZlLiBJIHdhcyBzaWNrIGFuZCBtaXNlcmFibGUgaW4gbXkgYWRkaWN0aW9uLiBJIG5ldmVyIGdvdCB0byB0cmVhdCBteXNlbGYgdG8gYW55dGhpbmcgYmVjYXVzZSBkcnVncyBhbHdheXMgY2FtZSBmaXJzdC4gCkhhdmluZyB0aGlzIHNhbWUgaXNzdWUgd2l0aCBteSBiZW5jaCByaWdodCBub3cuIER1ZSB0byBoYXZpbmcgdHdvIGJhZCBzaG91bGRlcnMgYW5kIGZvcm0gdGhhdCBpcyB1dHRlciBzaGl0LCBJIHRoaW5rIG15IGNvYWNoIGFuZCBJIGhhdmUgZGVjaWRlZCB0byBwbGF5IGl0IHNhZmUgYW5kIGNvbnNlcnZlIGVuZXJneSBmb3IgZGVhZGxpZnRzIGR1cmluZyBteSB1cGNvbWluZyBtZWV0IHRoaXMgd2Vla2VuZC4gQmVzaWRlcywgd2hvIGxpa2VzIGJlbmNoIGFueXdheXMuIDUgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkhhdmUgdG8gc2F5IHRoaXMgc2VlbXMgbGlrZSBhIGJhZCBpZGVhLCBmb3IgYWxsIHNvcnRzIG9mIHJlYXNvbnMsIG5vdCB0aGUgbGVhc3Qgb2Ygd2hpY2ggaXMgaXQgc3RpbGwgZm9yY2VzIGEgYmluYXJ5IG5vdGlvbiBvZiBnZW5kZXIgb250byBhbiBpbmNyZWFzaW5nbHkgZ2VuZGVyIGRpdmVyc2Ugc29jaWV0eS4uIApUaGUgZW50aXJlIG5hdGlvbiBvZiBIdW5nYXJ5IGlzIHNpdHRpbmcgb24gd2hhdCBzaG91bGQgYmUgYSBwcm9zcGVjdGl2ZSBzaGFsZSBkZXZlbG9wbWVudCBnaXZlbiB0aGVpciBsb25nIGhpc3Rvcnkgb2Ygb2lsIGFuZCBnYXMuIEJ1dCB0aGV5IGhhdmUgYmVlbiBkZWxheWluZyBzaGFsZSBzbyBsb25nIHRoYXQgbW9zdCBjb21wYW5pZXMgaGF2ZSBnaXZlbiB1cC4gCkplYW4uIApBbmQgeW91IGRpZG4ga25vdyBhYm91dCBpdCwgYnV0IHlvdSB3b2tlIHVwIHRvIHRoZSBtdXNpYyBjb21pbmcgZnJvbSB0aGUgZmVzdGl2YWwuIApFeGNlbCBncmFwaHMgYW5kIGRpYWdyYW1zIGFyZSBlYXNpbHkgaW50ZWdyYXRlZCBpbnRvIFdvcmQgdGV4dDsgT3V0bG9vayBncm91cCBlIG1haWwuIEl0IGhhcyBhIGhpZ2hseSBwb2xpc2hlZCwgcG93ZXJmdWwgYW5kIGZhc3Qgc3VpdGUgb2Ygc29mdHdhcmUgcHJvZ3JhbSB0b29scy4gCllvdSBjb3VsZCBnZXQgaXQgYW5kIGl0IG1pZ2h0IGJlIGRlYWQgaW4gNiBtb250aHMuIApCb3VsZGVyIG5hdHVyYWwgZm9vZCBjb21wYW55IFB1cmVseSBFbGl6YWJldGggaGFzIHJlY2VpdmVkIGEgJDMgbWlsbGlvbiBtaW5vcml0eSBpbnZlc3RtZW50IGZyb20gR2VuZXJhbCBNaWxscyB0aGF0IGNvdWxkIHBhdmUgdGhlIHdheSBmb3IgYSBmdXR1cmUgYWNxdWlzaXRpb24uIEZ1bGwgU3RvcnkKSSBkb3VidCBJIHdpbGwgZ2V0IGEgc2Vjb25kIEFubmUgcHJvIHNpbmNlIEknbSBjb25zaWRlcmluZyBteSBmaXJzdCBidWlsZCBidXQgd2l0aG91dCBiZWluZyBhYmxlIHRvIHRlc3QgYSBidW5jaCBvZiBzd2l0Y2hlcyBhbmQga25vd2luZyB0aGF0IEkgd2FudCBzb21ldGhpbmcgbGlrZSB0aGUgZ2F0cy4gClRyaWJ1dGVzIGFyZSBldmVuIHBhaWQgdG8gdGhlIHNhY3JpZmljZXMgb2YgQmVuZ2FsaSBzcGVha2luZyBQYWtpc3RhbmlzICAgbm90d2l0aHN0YW5kaW5nIHRoZSBwYXJ0aXRpb24gb2YgUGFraXN0YW4gaW4gMTk3MS4gCkFkbWl0dGVkbHkgaXQgYSBzbWFsbCBwZXJjZW50YWdlIG9mIHdoYXQgYWxyZWFkeSBhIHNtYWxsIGdyb3VwLCBidXQgd2hhdCBtb3JlIGltcG9ydGFudCBpcyBob3cgbm9ybWFsaXplZCB1c2luZyB0aGVzZSBhbHRlcm5hdGl2ZSBzd2VldGVuZXJzIGlzIGJlY29taW5nIGFuZCBob3cgYmlnIG9mIGFuIGltcGFjdCB0aGF0IGhhdmluZyBvbiBzb21lIG9mIHVzLiBJIGhhdmUgdG8gcmVhZCB0aGUgaW5ncmVkaWVudHMgb24gZXZlbiBjb21tb25seSBwdXJjaGFzZWQgaXRlbXMgYmVjYXVzZSBhIGZldyBoYXZlIHVuZXhwZWN0ZWRseSBtYWRlIHJlY2lwZSBjaGFuZ2VzIHRvIHN0YXJ0IHVzaW5nIHN1Y3JhbG9zZSBvciBzdGV2aWEuIApUaGUgbXVsdGkgY29udG91ciBOYXBwYSBsZWF0aGVyIHNlYXRzIGZlZWwgZmFudGFzdGljIGFuZCBvZmZlciBtYW55IGZlYXR1cmVzLCBpbmNsdWRpbmcgYWN0aXZlIHNpZGUgYm9sc3RlcnMgYW5kIHNldmVyYWwgc29vdGhpbmcgbWFzc2FnZSBzZXR0aW5ncy4gCkVsbGUgdGFpdCByZW1ib3Vyc2UgZXQgbmUgZG9pdCBwbHVzIGwndHJlLkJyZWYsIGplIHZldXggYmllbiBkdmVsb3BwZXIgY2Ugc3VqZXQgKHRycyBwYXNzaW9ubmFudCBwb3VyIGJlYXVjb3VwKSwgaidhaSB0dWRpIGxhIHNleG9sb2dpZSBlbiBsaXNhbnQgYmVhdWNvdXAgZGVwdWlzIG1vbiBhZG9sZXNjZW5jZSwgYyd0YWl0IGxhIGdyYW5kZSBwb3F1ZSBkZSBsJ2luZmx1ZW5jZSBmcmFuYWlzZSBkZXMgTWFzdGVycyBldCBKb2huc29uIGV0IGF1dHJlcyBBbGZyZWQgS2luc2V5LiBNYWlzIGlsIGZhdXQgcG9zZXIgZGVzIHF1ZXN0aW9uIHByY2lzZXMuIApCZWZvcmUgSSBvcGVuZWQgdXAgSSB0YWxrZWQgdG8gYSBsb3Qgb2YgcGVvcGxlIGluIHRvd24gYW5kIGFza2VkIHRoZW0gd2hhdCB0aGV5IHdhbnRlZC4gRmlyc3QgdGhpbmcgdGhleSBzYWlkIHdhcyB0aGUga2lkcyBjb21lIGJhY2sgaW4gYW5kIHdlIGRpZC4gCkZpbmFuY2lhbCBXb3JyaWVzIEJ1c2luZXNzIHdhcyBsb29raW5nIGdvb2Qgd2hlbiBhbiBJbnRlcm5ldCBib29tIGhpdCBkdXJpbmcgdGhlIGVhcmx5IHBhcnRzIG9mIHRoZSB5ZWFyIDIwMDAuIFZhbHVlcyBvZiBzaGFyZXMgYWNyb3NzIHRoZSBib2FyZCBvZiBJbnRlcm5ldCBjb3Jwb3JhdGlvbnMgcm9zZSBhbmQgcm9zZSwgdW50aWwgdGhlIHBlYWsgaW4gTWFyY2ggMjAwMC4gQnV0IHRoZW4gaGkgdGVjaCBzaGFyZXMgcGx1bW1ldGVkLCB0YWtpbmcgWWFob28hIHdpdGggdGhlbS4gWWFob28hLCBvbmNlIHdvcnRoIG92ZXIgJDEwMCBiaWxsaW9uLCAoYXJvdW5kIDYwIGJpbGxpb24pLCB3YXMgbG9zaW5nIG1vbmV5IGV2ZXJ5IGRheS4gSXQgd2FzIHRocmVhdGVuZWQgd2l0aCBjb2xsYXBzZSwgbGlrZSBldmVyeSBvdGhlciBJbnRlcm5ldCBjb21wYW55IGR1cmluZyB0aGF0IHRpbWUuCkFub3RoZXIgdGhpbmcgeW91IGNhbiBkbyBpcywgYWdhaW4sIHRvIGhhdmUgdGhlIHJlcG9ydHMgdHJhbnNsYXRlZCwgYW5kIGdvIHRvIGEgUG9saW5rbGlua2Egb3IgYSBob3NwaXRhbCB3aXRoIHRoZW0gYW5kIGFzayB0aGUgZG9jdG9yLiBBdCB3b3JzdCwgdGhleSBtYXkgcnVuIGFub3RoZXIgc2V0IG9mIHRlc3RzLgpJIHdvdWxkIHN1Z2dlc3QgYmVpbmcgbGVzcyBjb25jZXJuZWQgd2l0aCBhdm9pZGluZyB0aGlzLCBhbmQgbW9yZSBjb25jZXJuZWQgd2l0aCBsZWFybmluZyB0byBhY2NlcHQgc3VjaCBkb3VidHMgYW5kIGZlYXJzIGFzIGEgbm9ybWFsIHBhcnQgb2YgbGlmZS4gQ2VydGFpbmx5IHlvdSB3YW50IHRvIG1pbmltaXplIGF3a3dhcmQgb3IgdW5jb21mb3J0YWJsZSBzY2VuYXJpb3MsIG9yIHVuY2VydGFpbnR5IG9mIGhvdyB5b3UgY29tZSBhY3Jvc3MgdG8gcGVvcGxlLCBidXQgc2ltcGx5IHJlY29nbml6aW5nIHRoYXQgdGhlc2UgYXJlIG5vcm1hbCwgZXZlcnlkYXkgb2JzdGFjbGVzIHRoYXQgZXZlcnkgc2luZ2xlIG9uZSBvZiB1cyBmYWNlIHdpbGwgZ28gYSBsb25nIHdheSB0b3dhcmRzIHlvdXIgaW5jcmVhc2luZyB5b3VyIGFiaWxpdHkgdG8gc2hydWcgb2ZmIGxlc3MgdGhhbiBwbGVhc2FudCBlbmNvdW50ZXJzLCBvciBkb3VidHMgYWJvdXQgeW91ciBkZW1lYW5vci4gVGhleSBub3QgZ29ubmEganVzdCB2YW5pc2gsIGJ1dCB0aGF0IHRoZSBwb2ludC4gdGhlIG1vcmUgeW91IGFjY2VwdCB5b3VyIHNvY2lhbCBmb2libGVzIGFuZCBmZWFycywgdGhlIGxlc3MgdGhleSB3aWxsIGJlIGFibGUgdG8gaG9sZCB5b3UgaG9zdGFnZSwgYW5kIHRoZSBiZXR0ZXIgeW91IGdldCBhdCBhbGwgdGhhdCBzdHVmZi4KR2VuZXJhbGx5IHllbGwgbm9uc2Vuc2ljYWwsIGFidXNpdmUgdGhpbmdzIGF0IG1lLCB0aGVuIGxlYXZlIGFnYWluLiBJIGd1ZXNzIGl0J3MgYmVlbiBzbyBsb25nLCBhbmQgSSd2ZSB0cmllZCB0byBmb3JnZXQuIEkga25vdyBvbmUgdGltZSBzaGUgdG9vayBzZXZlcmFsIHRob3VzYW5kIGRvbGxhcnMgb3V0IG9mIG15IGRhZCdzIHNhdmluZ3MgYWNjb3VudCBhbmQgdXNlZCBpdCB0byBidXkgYSBNdXN0YW5nIGNvbnZlcnRpYmxlLiAKSSB3YXMgbm90IGFibGUgdG8gYnJpbmcgYSBTdGFuZWx5IEN1cCB0aGVyZSB3aGljaCBpcyBwcm9iYWJseSBteSBiaWdnZXN0IHJlZ3JldCwgYnV0IGl0IHdpbGwgYmUgcmVtZW1iZXJlZCBmb3Igc2l4IGdvb2QgeWVhcnMuIFdhcyBpbnRlcnZpZXdlZCBieSBDRk9YIEplZmYgTyBtb3JuaW5nIHNob3cgZnJvbSBMYXMgVmVnYXMsIHdoZXJlIGhlIGlzIGNvbXBldGluZywgc3RhcnRpbmcgU2F0dXJkYXksIGluIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgbWFpbiBldmVudCB0b3VybmV5LiBMb3R0ZXJ5IENvcnAuLiAKSGFzIGdyZWF0IG1lbnRhbCB0b3VnaG5lc3MuIFNoZSAxNyBidXQgc2hlIHBvaXNlZCBhbmQgY29uZmlkZW50LiAKSSBoYWQgdG8gaGF2ZSB0ZWV0aCBwdWxsZWQsIGJlY2F1c2UgdGhhdCB3YXMgdGhlIGNoZWFwZXN0IG9wdGlvbiB0byBzdG9wIHRoZSBwYWluLiAKS2l0Y2hlbiBpcyBhbHdheXMgdGhlIGZpcnN0IHBsYWNlIHRvIGNsZWFuIGZvciBJIGFtIGFscmVhZHkgaW4gaXQuIFRoZSBzbWVsbCBvZiBibGVhY2ggaXMgYWx3YXlzIGluIHRoaXMgaG91c2UgYnV0IEkgc3dlYXIgaXQgaXMgdGhlIG9ubHkgd2F5IHRvIGNvbWJhdCB0aGVzZSBjYXRzLiBXaG8ga25ldyAzIGZlbWFsZSBjYXRzIGNvdWxkIHNtZWxsIHNvIG11Y2g/IFRoZXkgcmVhbGx5IG5lZWQgdG8gc3RvcCBnb2luZyB0byB0aGUgYmF0aHJvb20gYmVjYXVzZSBpdCBzbWVsbHMgbGlrZSBzb21ldGhpbmcgZGllZC4gClRoZSBhbW91bnQgb2YgY2hpcHMgdGhhdCBhIHBsYXllciByZWNlaXZlcyBpcyByZWxhdGl2ZWx5IGFyYml0cmFyeSwgYnV0IGlzIGdlbmVyYWxseSBzZXQgdXAgc28gdGhhdCBwbGF5ZXJzIGRvIG5vdCBmZWVsIHByZXNzdXJlZCB0byBwbGF5IG1hcmdpbmFsIGhhbmRzIGVhcmx5IGluIHRoZSB0b3VybmFtZW50LiAKRm9yIHRoZSBuZXh0IGdhbWUgdGhlIEFob2xlIGRlYWxzIGFuZCBzdGFydHMuIApGZWVsIHJlYWR5IGZvciB5b3VyIG93biBnYW1lIG9mIGNhc2lubyBwb2tlciB5ZXQ/IFlvdSB0aXJlZCBvZiBiZWluZyBhIG1lcmUgc3BlY3RhdG9yIGZyb20gdGhlIHNpZGVsaW5lcz8gVGhlbiBnZXQgb24gdXAsIG9mZiB5b3VyIHNlYXQsIHRvIHRoZSBuZWFyZXN0IGNhc2lubyEgQnV0IGlmIHRoZXJlJ3Mgbm8gY2FzaW5vIGluIHRoZSB2aWNpbml0eSByaWdodCBub3csIG5vdCB0byB3b3JyeS4gCkFzIHNvbWVvbmUgd2hvIGxpdmVzIGluIGEgaGlnaCBkZW5zaXR5IGJsb2NrIGluIHRoZSBjaXR5LCB5b3VyIGNvbnN0YW50IGNyaWVzIHRoYXQgaW5jcmVhc2VkIGRldmVsb3BtZW50IHdvdWxkIGJlIGEgbmVnYXRpdmUgYXJlIGdldHRpbmcgcHJldHR5IHRpcmluZy4gSSBsb3ZlIGxpdmluZyBpbiBhbiBhcGFydG1lbnQsIGl0cyBsaXRlcmFsbHkgdGhlIG9ubHkgYWZmb3JkYWJsZSB3YXkgKHllcywgaW5jcmVhc2luZyBkZW5zaXR5L3N1cHBseSBkb2VzIGhlbHAgYWZmb3JkYWJpbGl0eSkgZm9yIGEgeW91bmcgY2l0eSB3b3JrZXIgdG8gbGl2ZSBjbG9zZSB0byB0aGUgY2l0eSBhbmQgbWFqb3IgY3VsdHVyYWwgYXR0cmFjdGlvbnMuCllvdSB3b3VsZCBiZSBmYWNpbmcgbXVjaCBiZXR0ZXIgcGxheWVycyBhbmQgcHV0dGluZyBhIGxvdCBtb3JlIG1vbmV5IGF0IHJpc2suaW5jaXRlZnVsMTcgIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdvQ29ycmVjdC4gSXQgb25seSBsYXN0ZWQgYSBmZXcgeWVhcnMgYmVmb3JlIHRoZSBiYWQgcGxheWVycyBzdGFydGVkIGRpc2FwcGVhcmluZyBhbmQgcGVvcGxlIHN0YXJ0ZWQgY29sbHVkaW5nLiBVUyBiYW5rcyBzdGFydGVkIGRpc3RhbmNpbmcgdGhlbXNlbHZlcyBmcm9tIHRoZSBpbmR1c3RyeSBhbmQgaXQgZ290IHRvIGJlIGRpZmZpY3VsdCB0byBjYXNoIG91dCB5b3VyIG1vbmV5IG9yIG1vdmUgbW9uZXkgaW50byB5b3VyIG9ubGluZSBhY2NvdW50cy4gCkhlIGdldHMgcGxlbnR5IG9mIGV4ZXJjaXNlIChMYXNlciBwb2ludGVyIGFuZCBzdGljayB3aXRoIGEgZmVhdGhlciBwbGF5KSBhbWQgaGFzIGJlZW4gZml4ZWQuIEkganVzdCBkb24ga25vdyB3aGF0IGVsc2UgdG8gZG8uIApTaGUgYWxzbyBmb3VuZCB0aGF0IHRoZSBpbW1vYmlsZSBhcmUgdHdpY2UgYXMgbGlrZWx5IHRvIGRpZSBmcm9tIGEgaGVhcnQgYXR0YWNrIGFuZCB0d28gYW5kIGEgaGFsZiB0aW1lcyBhcyBsaWtlbHkgdG8gc3VmZmVyIGNhcmRpb3Zhc2N1bGFyIGRpc2Vhc2UgYXMgdGhlIG1vc3QgYW1idWxhdG9yeS4gQ3J1Y2lhbGx5LCBhbGwgdGhpcyBzZWVtZWQgaW5kZXBlbmRlbnQgb2YgdGhlIGFtb3VudCBvZiB2aWdvcm91cywgZ3ltIHN0eWxlIGV4ZXJjaXNlIHRoYXQgdm9sdW50ZWVycyBkaWQuCkl0IGFsc28gbWFrZXMgZm9yIGEgc2FmZXIgcGxheWluZyBlbnZpcm9ubWVudCB0aGFuIGEgYnJvd3Nlci4gSXQgaXMgdGhlaXIgd2F5IG9mIHNheWluZyB0aGFuayB5b3Ugd2hlbiB5b3UgY2hvb3NlIHRvIGpvaW4gdGhlbSBvdmVyIHRoZWlyIGNvbXBldGl0aW9uLiAKQ3JveWFuY2VzIHBsdXMgb3UgbW9pbnMgdG94aXF1ZXMKMjAxOC4gCldlIGxpdmVkIGluIEFpcmRyaWUgd2Ugd291bGQgaGF2ZSBwb2tlciBuaWdodCBldmVyeSBGcmlkYXkgbmlnaHQgYW5kIHdlIGhhZCBhIGNvcmUgZ3JvdXAgb2YgZnJpZW5kcyB0aGF0IEkgaGF2ZSBrbm93biBzaW5jZSBraW5kZXJnYXJ0ZW4gY29tZSwgc2hlIHNhaWQuIEZyaWVuZCBvZiBtaW5lLCBUaW0gWW91bmcsIGhhZCBhIGpvYiB3b3JraW5nIGF0IHRoZSBhaXJwb3J0IGRlbGl2ZXJpbmcgYmFncywgYW5kIG9uZSBuaWdodCBoZSBnb3QgYSBjYWxsIHRvIGRlbGl2ZXIgYSBiYWcuIApGaW5kaW5nIGEgZ29hbCBpbiBsaWZlIGlzIHRoZSBiZXN0IHRoaW5nIHlvdSBjYW4gZG8gZm9yIHlvdXJzZWxmIHJpZ2h0IG5vdy4gRmluZCBhbiBhY3Rpdml0eSB5b3UgbWlnaHQgZW5qb3kuIFRha2luZyBhIGRhbmNlIGNsYXNzIGlzIGEgZ3JlYXQgd2F5IHRvIG1lZXQgaW1wcmVzcyB0aGUgbGFkaWVzICB0cnVzdCBtZS4gSnVzdCBhIHN1Z2dlc3Rpb24gdGhvdWdoLCBJIHN1cmUgdGhlcmUgYXJlIGxvdCBvZiBhY3Rpdml0aWVzIHlvdSBjb3VsZCB0YWtlIHBhcnQgaW4uCkkgbW90aXZhdGVkIHRvIGdldCBnb2luZyBxdWlja2VyLCBiZWNhdXNlIEkgd2FudCB0byB1c2UgdGhlIHF1aWx0IHRoaXMgc3VtbWVyLiAKSW1tZWRpYXRlbHkgc2VsZWN0IEVYSVRHQU1FLC4gClRoZSBnYW1lIHdhcyBzdGFydGluZyBhbmQgcHBsIHdlcmUgZ2V0dGluZyBhIGxvdCBvZiB1c2VmdWwgc3R1ZmYgbGlrZSBtZWdhY3J5c3RzIGFuZCBtZWdhY3l0ZXMgdG8gbWF4IG91dCBlc3BlcnMgd2hpY2ggd2FzIGEgYmlnIGRlYWwgYmFjayB0aGVuLiAKWW91IGhhdmUgaGl0IHRvcCBwYWlyIGFuZCB3YW50IHRvIHNob3cgaGltIHRoZSBmbG9wIGhpdCB5b3UuIApJbiB0aGUgZXZlbnQgdGhhdCB0aGUgZGVhbCBpcyBhY2NlcHRlZCBidXQgaXMgbm90IGFibGUgdG8gY2xvc2UgZHVlIHRvIGZhaWx1cmUgb2YgdGhlIHNlbGxlciB0byBwZXJmb3JtIHRoZWlyIGR1dGllcyB1bmRlciB0aGUgY29udHJhY3QsIHRoZSBsaXN0aW5nIGFnZW50IGlzIHN0aWxsIGVudGl0bGVkIHRvIHRoZSBhZ3JlZWQgdXBvbiBjb21taXNzaW9uIGFuZCB0aGUgYnV5ZXIgZ2V0cyB0aGVpciBkZXBvc2l0IGJhY2suLiAKT3RoZXIgcG9rZXIgc2l0ZXMgYXJlIG5vdCBzbyBnZW5lcm91cy4uIApIb3cgdG8gTWFrZSBhIENyaW1pbmFsIENvbnZpY3Rpb24gTG9vayBCZXR0ZXIgb24gYSBKb2IgQXBwbGljYXRpb24KQnV0IHRoZXNlIHByb2ZpdHMgY29tZSBhdCBhIHByaWNlLiBNb3N0IHJlc2VhcmNoIHNob3dzIHRoYXQgbW9yZSB0aGFuIGEgdGhpcmQgb2YgdGhlIG1vbmV5IHN3YWxsb3dlZCBieSB0aGUgcG9raWVzIGNvbWVzIGZyb20gcGVvcGxlIHdobyBjYW4ndCBjb250cm9sIGhvdyBtdWNoIHRoZXkgc3BlbmQuIEpvbmF0aGFuIEhvbG1lcyB0YWxrcyB0byBnYW1ibGluZyBhZGRpY3RzIGFuZCB0aGVpciBmYW1pbGllcyBhYm91dCB0aGVpciBleHBlcmllbmNlcyB3aXRoIHRoZSBnYW1pbmcgbWFjaGluZXMgdGhhdCBvbmUgY291bnNlbGxvciBkZXNjcmliZXMgYXMgdGhlIGNyYWNrIGNvY2FpbmUgb2YgZ2FtYmxpbmcuCk9ubHkgYSBoYW5kZnVsIG9mIHRoZW0gd291bGQgYmUgaGFwcHkgdG8gZ2V0IGFuIGFjdHVhbCBvbmUgdGltZSBqb2IsIGFuZCB0aGUgcmVzdCBvZiB0aGVtIHdvdWxkIG5vdCBjaGFuZ2UgdGhlaXIgd2F5IG9mIGxpZmUuIFRoZXkgYXJlIG5vdCBpbiBuZWVkLCB0aGV5IGNvbWUgdG8gU3dlZGVuIHRvIHdvcmsgYW5kIHRob3NlIHNlYXRzIGJ5IGdyb2NlcmllcyBhcmUgdGhlaXIgd29ya2luZyBwbGFjZXMuLiAKRGVwZW5kaW5nIG9uIHdoZXJlIHlvdSBzdGF5aW5nIGFuZCBpZiB5b3Ugd2lsbGluZyB0byB0YWtlIGEgbGl0dGxlIGRyaXZlIG91dCBpbiB0aGUgY291bnRyeSwgSSBoaWdobHkgcmVjb21tZW5kIENpdHlzY2FwZSBXaW5lcnkgZm9yIHdpbmUgdGFzdGluZy4gVGhleSBhd2Vzb21lLiBUaGV5IGhhdmUgYSB3ZWJzaXRlIHNvIHlvdSBjYW4gbWFrZSBhIHJlc2VydmF0aW9uIG9ubGluZSBmb3IgYSB0YXN0aW5nIGlmIHlvdSBnb2luZyB0byBoYXZlIG11bHRpcGxlIHBlb3BsZS4gVGhvbWFzIENyZWVrIEJyZXdlcnkgaXMgYSBjb3VwbGUgbWludXRlcyBmcm9tIGRvd250b3duIGFuZCB0aGV5IGhhdmUgbGl2ZSBtdXNpYyBhbmQgZm9vZCB0cnVja3Mgb24gdGhlIHdlZWtlbmRzIHNvbWV0aW1lcy4gSSBzZWNvbmQgSmFjayBuIERpYW5lIEkgdGhpbmsgaXRzIHJlYWxseSBmdW4uIEl0cyAyMSsgb25seSBzbyBrZWVwIHRoYXQgaW4gbWluZCBpZiB0aGVyZSBpcyBhbnlvbmUgeW91bmdlciB3aXRoIHlvdS4gSWYgeW91IGxpa2UgYmVlciBhbmQgd2FudCB0byB0cnkgc29tZXRoaW5nIGRpZmZlcmVudCBmb3IgZGlubmVyIEkgcmVjb21tZW5kIHRoZSBUcmFwcGUgRG9vci4gSXQgYSBCZWxnaWFuIHJlc3RhdXJhbnQgZG93bnRvd24gYW5kIHRoZXkgaGF2ZSBhIGh1Z2UgYmVlciBsaXN0LiBJIGJlbGlldmUgdGhleSBvbmx5IGhhdmUgRXVyb3BlYW4gYmVlcnMgYnV0IEkgZG9uIGRyaW5rIGJlZXIgc28gSSBkb24ga25vdyBmb3Igc3VyZSBidXQgSSBhYnNvbHV0ZWx5IHJlY29tbWVuZCBhbnkgb2YgdGhlaXIgc3BlY2lhbHR5IGNvY2t0YWlscy4gVGhlaXIgc3RlYWsgaXMgYWxzbyBwaGVub21lbmFsLiBJIG5ldmVyIGhhZCBhbnl0aGluZyB0aGVyZSB0aGF0IEkgZGlkbiBsb3ZlLiBDb2ZmZWUgdW5kZXJncm91bmQgaXMgZ3JlYXQgYnkgdGhlIHdheS4gSSBsb3ZlIHRoYXQgcGxhY2UuIFRoZXkgYWxzbyBoYXZlIGJlZXIgYW5kIGxpcXVvciBvbiB0aGVpciBtZW51IGFuZCBzb21ldGltZXMgdGhleSBoYXZlIHNob3dzIGluIHRoZSBiYWNrIHJvb20uIFRoZXkgdXNlZCB0byBkbyBhbiBpbXByb3YgY29tZWR5IHNob3cgb24gdGhlIGZpcnN0IG9yIHNlY29uZCBTYXR1cmRheSBvZiBldmVyeSBtb250aCB0aGF0IHdhcyBoaWxhcmlvdXMuIFNvIGNoZWNrIHRoZWlyIHdlYnNpdGUgYW5kIHNlZSBpZiBhbnl0aGluZyBzcGVjaWFsIGlzIGhhcHBlbmluZyB3aGVuIHlvdSBpbiB0b3duLgpEbyBoZXIgYW5kIHlvdXJzZWxmIGEgZmF2b3IgYW5kIG1vdmUgb24uIEFsc28sIGNhbGwgYSB0aGVyYXBpc3QgdG9tb3Jyb3cgYW5kIGdldCBoZWxwLiBEb24gZXZlbiB0aGluayBvZiB0cnlpbmcgdG8ga2lsbCB5b3Vyc2VsZi4gCldoaWNoIGRvZXMgaW1wbHkgdGhhdCBwZW9wbGUgd2hvIGZpdCB0aGUgYmluYXJ5IGFyZSBpZGVudGlmeWluZyB3aXRoIHNvbWV0aGluZyAiZmFrZSIgb3IgIm1hZGUgdXAiLiAKQnkgdXNpbmcgYSBwb2tlciBvZGRzIGNhbGN1bGF0b3IsIHlvdSBhcmUgbm90IGNoZWF0aW5nLCBidXQgaW5jcmVhc2luZyB5b3VyIGtub3dsZWRnZSwgYW5kIHRoZW4gdXNpbmcgdGhhdCB0byBiZWNvbWUgYSBiZXR0ZXIgcG9rZXIgcGxheWVyLiBIZXJlIGFyZSBhIGZldyBkaXN0aW5jdCBhZHZhbnRhZ2VzIG9mIHBsYXlpbmcgd2l0aCBhIHBva2VyIG9kZHMgY2FsY3VsYXRvciAoYnV0IGtlZXAgaW4gbWluZCB0aGVyZSBhcmUgc29tZSBwb3NzaWJsZSBkcmF3YmFja3MsIHRvbyk6IE9kZHMgb2YgdGhlIFBvdDogRXZlbiB0aGUgYmVzdCBwbGF5ZXIgd2hvIGhhcyBmdWxsIGtub3dsZWRnZSBvZiBwb2tlciBzdHJhdGVneSBjYW4gZmluZCBoaW1zZWxmIGF0IGEgbG9zcyB3aGVuIGl0IGNvbWVzIHRvIGNhbGN1bGF0aW5nIG9kZHMgZm9yIGVhY2ggbmV3IGhhbmQsIGFuZCBjb21wdXRpbmcgdGhhdCB3aXRoIGhvdyBpdCBhZmZlY3RzIHRoZSBvZGRzIG9mIHRoZSBwb3QuIApBZnRlciBicmVhc3RmZWVkaW5nLCB3YXNoIHlvdXIgbmlwcGxlcyBhbmQgd2lwZSBkcnkuIApUaGUgc2VlbWluZ2x5IHVuY29udmluY2VkIGRlbW9uIHBpY2tlZCB1cCBhIGtuaWZlIGFuZCBjaG9wcGVkIG9mZiBteSBhcm0uIEFnYWluLCBJIHdhaWxlZCBpbiBwYWluLCBJIGRvbiBrbm93IHdoeSBJIGRpZCwgYnV0IEkgZGlkLiAiWWVhLCBpdCB3b3JrZWQiIHNhaWQgdGhlIGRlbW9uLiAKV2hpbGUgdGhlIENBTyBmb3VuZCBhIG51bWJlciBvZiBjb3VudHMgb2Ygbm9uIGNvbXBsaWFuY2UsIHRoZSBJRkMgbGFyZ2VseSBkaXNtaXNzZWQgdGhlaXIgZmluZGluZ3MuLiAKUGFpdXRlcyBkb24gaGF2ZSB0aGUgZnVuZGluZyBmb3IgaHVnZSBjb25zdHJ1Y3Rpb24gcGxhbnMuUGFpdXRlIEluZGlhbiBUcmliZSBvZiBVdGFoIEVjb25vbWljIERldmVsb3BtZW50IERpcmVjdG9yIEdheWxvcmQgUm9iYiBleHBsYWlucyB0aGUgaGlzdG9yaWNhbCBzaWduaWZpY2FuY2Ugb2YgdGhlIFBhaXV0ZXMgaW4gWmlvbiBOYXRpb25hbCBQYXJrLCBIYW1wdG9uIElubiBTdWl0ZXMsIDExMjcgWmlvbiBQYXJrIEJvdWxldmFyZCwgU3ByaW5nZGFsZSwgVXRhaCwgSnVseSAyMiwgMjAxNCAgUGhvdG8gYnkgQXNwZW4gU3RvZGRhcmQsIFN0LiAKQWN0dWFsbHkgdGhpcyBpcyBhIHJlcG9ydCBvbiBhIEdhbHRvbiBwYXBlciB0aGF0IGFwcGVhcmVkIHR3byB3ZWVrcyBlYXJsaWVyIGluIHRoZSBGb3J0bmlnaHRseSBSZXZpZXcgKCJJbnRlbGxpZ2libGUgc2lnbmFscyBiZXR3ZWVuIG5laWdoYm91cmluZyBzdGFycyIsIHZvbHVtZSA2MCwgcHAgNjU3IDY0LCBOb3ZlbWJlciAxLCAxODk2KSwgYW5kIHNoYXJlZCB0byBhIG1vcmUgc2NpZW50aWZpY2FsbHkgY2VudGVyZWQgcmVhZGluZyBwb3B1bGF0aW9uIHRoYW4gdGhlIG90aGVyIGpvdXJuYWwuIEdpdmVuIHRoZSBjb250ZW1wb3JhcnkgbWlsZXUgb2YgcG9zc2libGUvZXhwZWN0YW50IGxpZmUgb24gTWFycywgR2FsdG9uIHRob3VnaHQgYWJvdXQgd2F5cyBpbiB3aGljaCB3ZSBjb3VsZCBzZW5kIHNvbWUgc29ydCBvZiBjb21tdW5pY2F0aW9uLCBhbmQgd2hhdCB0aGUgbG9naWMgb2YgdGhhdCAibGFuZ3VhZ2UiIG1pZ2h0IGJlLiAKR3JhaGFtIGNyYWNrZXJzLCBjcnVtYnMxIGMuIApIYXZlbiBOaWdodGNsdWIgICBIYXZlbiBvZmZlcnMgYSB1bmlxdWUgYmxlbmQgb2YgRURNIGFuZCBoaXAgaG9wIGJlYXRzLiBTdGFydCB5b3VyIHdlZWtlbmQgYSBkYXkgZWFybHkgd2l0aCBNaXNCZUhhdmVuIFRodXJzZGF5cy4gCkEgY29wIHdhcyBwYXJrZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgdGhlIDYwa20vaCBzaWduIGFuZCBwdWxsZWQgaGltIG92ZXIgYmVjYXVzZSBoZSBkaWRuIHNsb3cgZG93biBhbGwgdGhlIHdheSB0byB0aGUgbmV3IHNwZWVkIGJ5IHRoZSB0aW1lIGhlIGhpdCB0aGUgc2lnbi4gCiJUaGUgZ3V5J3MgZGVhZCwgYW5kIHRoYXQncyB1bmZvcnR1bmF0ZSwiIHNhaWQgQ3Jvc3Nub2UsIHdobyB3YXMgaW4gdGhlIGhhbGwgYXQgdGhlIHRpbWUgb2YgdGhlIHNob290aW5nLiAiSGUgbWF5IGp1c3QgaGF2ZSBzYXZlZCBzb21lb25lJ3MgbGlmZS4iIFRoZSBwb2xpY2UgcmVwb3J0IG9uIHRoZSBzaG9vdGluZyB3aWxsIGdvIHRvIHRoZSBHZW5lc2VlIENvdW50eSBwcm9zZWN1dG9yJ3Mgb2ZmaWNlIHRvIGRldGVybWluZSBpZiBpdCB3YXMganVzdGlmaWVkLi4gClNvIGlmIHlvdSBhc2sgc29tZW9uZSBmcm9tIE5ldyBaZWFsYW5kLCJXZXJlIHlvdSB0cmVhdGVkIHdpdGggcmVzcGVjdCB5ZXN0ZXJkYXksIiB0aGV5IGFyZSBtdWNoIG1vcmUgbGlrZWx5IHRvIHNheSB5ZXMuIEJ1dCBLaXdpcyBhcmUgaGFwcGllciB0aGFuIEFtZXJpY2FucyBldmVuIHRob3VnaCB0aGVpciBHRFAgcGVyIGNhcGl0YSBpcyBsb3dlciB0aGFuIHRoZSBVUy4gCkphcGFuZXNlIFJvYm90IENyYXplUm9sbGVib3RKYXBhbmVzZSBlbGVjdHJvbmljcyBnaWFudCBIaXRhY2hpIGRpc3BsYXlzIGl0cyBodW1hbm9pZCByb2JvdCAiRW1pZXcyIHdoaWNoIGNhbiBtb3ZlIG92ZXIgdW5ldmVuIGdyb3VuZCBhbmQgc21hbGwgZ2FwcyBvbiBpdHMgd2hlZWxlZCBsZWdzIGF0IHRoZSBjb21wYW55J3MgaGlnaCB0ZWNoIGV4aGliaXRpb24gaW4gVG9reW8gb24gSnVseSAyMiwgMjAxMC4gSGl0YWNoaSB3aWxsIHN0YXJ0IGEgcGlsb3QgdGVzdCBhdCBhIGhvc3BpdGFsIHRvIGNvbGxlY3QgZGF0YSBmb3IgdGhlIHByb3ZpZGluZyBndWlkZSBvciBzdXJ2ZWlsbGFuY2Ugc2VydmljZXMgaW4gYSBzYWZlIHN5bWJpb3NpcyB3aXRoIGh1bWFuLiAKSm9pbiBLYXRlIEdlbmV2aWV2ZSBpbiBjb252ZXJzYXRpb24gb24gdGhlIHZhbHVlIG9mIHRoZSBjcmVhdGl2ZSBlbGVtZW50IGluaGVyZW50IGluIG91ciBsaXZpbmcgZXhwZXJpZW5jZSBhbmQgaXRzIHVzZSB3aXRoaW4gVlIgdGVjaG5vbG9naWVzLgpCdXQgYXMgbXVjaCBhcyBoZSBsb3ZlcyBiYXNlYmFsbCBhbmQgY2FuJ3Qgd2FpdCB0byBnZXQgaGlzIGNsZWF0cyBkaXJ0eSBvbiB0aGUgZGlhbW9uZCB3aGVyZSBoZSB0cnVseSBleGNlbHMsIFJlbmNrIHdpbGwgZ2xhZGx5IHRyYWRlIGEgc2NyaW1tYWdlIG9yIHR3byBmb3Igb25lIGxhc3Qgc2hvdCBhdCBhIGJhc2tldGJhbGwgc3RhdGUgdGl0bGUuClRoZSBjYXRjaCB3YXMsIHdoaWNoZXZlciB0cmliZSBsb3N0IHRoZSBpbW11bml0eSBjaGFsbGVuZ2UgYW5kIHdhcyBzZW50IHRvIHRyaWJhbCBjb3VuY2lsLCBKdWxpYSB3b3VsZCB0aGVuIHRha2UgdGhlaXIgcGxhY2UsIGFkZGluZyBhIHdob2xlIG5ldyBlbGVtZW50IHRvIHRoZSBnYW1lLi4gClRoaXMgdGltZSB0aGV5IGJsYW1lZCBpdCBvbiBub3QgaGF2aW5nIGEgYmlnIGVub3VnaCBkaXN0cmlidXRpb24gY2VudGVyIGluIHRoZSBhcmVhICh0cnVlLCBub3cgZml4IGl0ISkgc28gdGhleSBkb24gY2FyZSBhYm91dCBkcmFnZ2luZyBhc3Mgb24gcmVzaWRlbnRpYWwgZGVsaXZlcmllcyBiZWNhdXNlIHRoZXkgaGF2ZSB0byBmb2N1cyBvbiB0aGUgYnVzaW5lc3MgZGVsaXZlcmllcyBiZWNhdXNlIHRoZXkgc28gc21hbGwuIApOZXZlcnRoZWxlc3MsIG9uIG91ciBOZXRFbnRlcnRhaW5tZW50IENhc2lubyBUb3AgTGlzdCB3ZSBwbGFjZSBvbmx5IHRob3NlIGFjY3JlZGl0ZWQgc2l0ZXMgdGhhdCBhcmUgMTAwJSBzYWZlIGFuZCBzZWN1cmUuIApBcyBnZW9ncmFwaGVyIEdsZW4gRWxkZXIgZXhwbGFpbmVkIGl0LCBib3JkZXJzIG11c3QgYmUgcGVyZm9ybWVkLiAKSG93ZXZlciwgYWxsIHRoZSBvaWxzIGdpdmVuIGNhbiBiZSB1c2VkIGluIGEgdmFwb3IgYmFsbS4gCkkgZmVsdCBpbmZvcm1lZCwgYW5kIHRoZSBuZXdzIHNlZW1lZCBvYmplY3RpdmUuIApJZiB5b3UgaGF2ZSBhIGJpdGNoIHRyaWVzIHRvIGZpbmQgYSBhcHByb3ByaWF0ZSBzdHVkIGZvciBoZXIsIGFuZCB2aWNlIHZlcnNhIGlmIHlvdSBoYXZlIGEgc3R1ZC4gClRoaW5ncyBnZXQgZXZlbiBtb3JlIGRhbmdlcm91cyB3aXRoIE5ldGFueWFodSBsaXRlcmFsbHkgYXBwcm9hY2hpbmcgSG9sb2NhdXN0IGRlbmlhbC4gSW4gMjAxNSBoZSBjbGFpbWVkIHRoYXQgSGl0bGVyIG9ubHkgd2FudGVkIHRvIGV4cGVsIHRoZSBKZXdzIGZyb20gR2VybWFueSwgYnV0IHRoYXQgaXQgd2FzIHRoZSBQYWxlc3RpbmlhbiBncmFuZCBtdWZ0aSAoSXNsYW1pYyBsZWFkZXIpIG9mIEplcnVzYWxlbSB3aG8sIGR1cmluZyBhIHRyaXAgdG8gQmVybGluLCBjb252aW5jZWQgSGl0bGVyIHRvIGtpbGwgdGhlbS4gQmliaSBsYXRlciBjbGFyaWZpZWQgaGlzIHN0YXRlbWVudHMgYWZ0ZXIgY29uZGVtbmF0aW9uIGFuZCBwcmVzc3VyZS4gSSBjYW5ub3QgaW1hZ2luZSBhbnl0aGluZyBzaW1pbGFyIGluIEFybWVuaWFuIHBvbGl0aWNzLCBhbmQgdGhhdCBpcyBhIGdvb2QgdGhpbmcuCiJSZXNlYXJjaCB0aGUgSXNyYWVsaSBQYWxlc3RpbmlhbiBjb25mbGljdCBmb3IgYSB3ZWVrIGFuZCB5b3UnbGwgYmVsaWV2ZSBJc3JhZWwgaXMgY29ycmVjdC4gCjMuIApJZiB0aGV5IGtpY2sgaW4gbW9yZSB0aGFuIGp1c3QgYSB0cnVjayBhbmQgYnJvYWRseSB0aGVuIGl0IGlzIG9mZmVyaW5nIGhlbHAgdG8gbmVlZHkgcGVvcGxlLCB0aGVuIEkgd2lsIGNoYW5nZSBteSBtaW5kLiBZb3UgY2FuIGJlbGVpdmUgdGhlIG15dGggaWYgeW91IHdhbnQgdG8sIGlmIGl0IG1ha2VzIHlvdSBoYXBweS4uIApXZSB1c2VkIDM1LDI2NCBjbGluaWNhbCBtZWFzdXJlbWVudHMgb2YgZ2x1Y29zZSBsZXZlbHMgYW5kIDEwLDIwOCBtZWFzdXJlbWVudHMgb2YgZ2x5Y2F0ZWQgaGVtb2dsb2JpbiBsZXZlbHMgZnJvbSAyMDY3IHBhcnRpY2lwYW50cyB3aXRob3V0IGRlbWVudGlhIHRvIGV4YW1pbmUgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGdsdWNvc2UgbGV2ZWxzIGFuZCB0aGUgcmlzayBvZiBkZW1lbnRpYS4gUGFydGljaXBhbnRzIHdlcmUgZnJvbSB0aGUgQWR1bHQgQ2hhbmdlcyBpbiBUaG91Z2h0IHN0dWR5IGFuZCBpbmNsdWRlZCA4MzkgbWVuIGFuZCAxMjI4IHdvbWVuIHdob3NlIG1lYW4gYWdlIGF0IGJhc2VsaW5lIHdhcyA3NiB5ZWFyczsgMjMyIHBhcnRpY2lwYW50cyBoYWQgZGlhYmV0ZXMsIGFuZCAxODM1IGRpZCBub3QuIFdlIGZpdCBDb3ggcmVncmVzc2lvbiBtb2RlbHMsIHN0cmF0aWZpZWQgYWNjb3JkaW5nIHRvIGRpYWJldGVzIHN0YXR1cyBhbmQgYWRqdXN0ZWQgZm9yIGFnZSwgc2V4LCBzdHVkeSBjb2hvcnQsIGVkdWNhdGlvbmFsIGxldmVsLCBsZXZlbCBvZiBleGVyY2lzZSwgYmxvb2QgcHJlc3N1cmUsIGFuZCBzdGF0dXMgd2l0aCByZXNwZWN0IHRvIGNvcm9uYXJ5IGFuZCBjZXJlYnJvdmFzY3VsYXIgZGlzZWFzZXMsIGF0cmlhbCBmaWJyaWxsYXRpb24sIHNtb2tpbmcsIGFuZCB0cmVhdG1lbnQgZm9yIGh5cGVydGVuc2lvbi4KU2xlZXAgaW4gYSBwbGFjZSB3aGVyZSB0aGVyZSBhcmUgbm8gbG91ZCBub2lzZXMgdG8gYm90aGVyIHlvdSBIYXZlIGEgZ2xhc3Mgb2Ygd2FybSBtaWxrIHRvIG1ha2UgeW91IHNsZWVwIGJldHRlci4gClN1cmUsIHRoZSBib3lmcmllbmQgaXNuIHdyb25nIGZvciBoYXZpbmcgZGlmZmVyZW50IHZpc2lvbnMgYWJvdXQgdGhlIGZ1dHVyZSwgYnV0IGhlIHB1cnBvc2VseSBzdHJ1bmcgaGVyIGFsb25nIHdpdGggdGhlIHByb21pc2Ugb2YgYSBwcm9wb3NhbC4gVGhhdCBpcyBhbiBhc3Nob2xlIG1vdmUuIElmIGhlIHJlYWxseSB3YXNuIGZlZWxpbmcgYSBmdXR1cmUsIHRoZW4gaGUgc2hvdWxkIGJlIGFkdWx0IGVub3VnaCB0byBoYXZlIGFuIGhvbmVzdCBjb252ZXJzYXRpb24gd2l0aCBoZXIuIApTaGUgbG9va3Mgc2V2ZXJlIGJ1dCB0dXJucyBvdXQgdG8gYmUgYSBzb2Z0IHRvdWNoLiAKVG9kYXkgd2UgaGF2ZSBuZXdzIHRoYXQgd2UgZG9uIG5lZWQgdG8gZGlnIG91ciBvd24gZ3JhdmUsIGJlY2F1c2UgT2JhbWEgaGFzIGRvbmUgaXQgYWdhaW4uIAooSSBsaXZlIGluIGFuIGFyZWEgY3VycmVudGx5IGFic29sdXRlbHkgSU5GRVNURUQgd2l0aCB0aWNrcyBhbmQgd2UgY29udHJvbCBidXJuIG91ciBmaWVsZHMgd2l0aCBwZXJtaXNzaW9uK3Blcm1pdHRpbmcgZnJvbSBvdXIgbG9jYWwgbXVuaWNpcGFsaXR5LiBXZSBoYXZlIGEgbm90YWJsZSBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHRpY2tzIGJ1dCBzdGlsbCB0aGUgbnVtYmVyIGlzIHF1aXRlIGFsYXJtaW5nLiBZb3UgbGl0ZXJhbGx5IHdvdWxkIG5lZWQgdG8gbGlnaHQgdXAgdGhlIGZvcmVzdCB0byBkbyBhbnkgZ29vZCBhdCBhbGwuIApGYW1vdXMgYW5kIEluZmFtb3VzIEdhbWJsZXJzIGFjcm9zcyB0aGUgR2xvYmUKVGhlIGNsdWIgZm9yIHRoZSBmaXJzdCBmZXcgeWVhcnMgb2YgdGhlaXIgZXhpc3RlbmNlIHBsYXllZCBpbiB0aGUgQ2hpbHRlcm4gRGlzdHJpY3QgRm9vdGJhbGwgTGVhZ3VlLCB0aGVuIG1vdmVkIHRvIHRoZSBPIGluIDE5NDcuIEZvciBhIHNob3J0IHRpbWUgaW4gdGhlIGVhcmx5IDE5NTBzIHRoZXkgYWxzbyBwbGF5ZWQgYSByZXNlcnZlcyB0ZWFtIGluIHRoZSBIdW1lIEZvb3RiYWxsIExlYWd1ZS4gQnVudG9uIFBhcmsgd2FzIGVzdGFibGlzaGVkIGR1cmluZyB0aGUgcG9zdCBXb3JsZCBXYXIgSUkgcGVyaW9kIGluIGFuIGFyZWEgdGhhdCB3YXMgcXVpY2tseSBiZWNvbWluZyBlc3RhYmxpc2hlZCB3aXRoIGhvdXNpbmcuIEJ1bnRvbiBQYXJrIGlzIG5hbWVkIGFmdGVyIENsZWF2ZXIgQnVudG9uLCBsb25nIHRpbWUgbWF5b3Igb2YgQWxidXJ5LCByYXRoZXIgdGhhbiBoaXMgZmFtb3VzIGZvb3RiYWxsaW5nIGJyb3RoZXIgSGF5ZG4gQnVudG9uLCBhbHRob3VnaCBuZWl0aGVyIHBsYXllZCBmb3IgTm9ydGggQWxidXJ5LgpOQUwsIGJ1dCBJIGhhdmUgYmVlbiB0aHJvdWdoIHRoZSBhZG9wdGlvbiBwcm9jZXNzIHR3aWNlLiBUaGVyZSBpcyBhIHZlcnkgYmlnIHBvc3NpYmlsaXR5IHRoYXQgaGUgY2FuIGNvbnRlc3QgdGhlIGFkb3B0aW9uLiBXb3VsZCBpdCBlbmQgaW4gaGlzIGZhdm9yPyBXaG8ga25vd3MuIApMaWZlIGF3YWl0cyB5b3UhIHRoYXQgdGhlIHZvaWNlIGxlZnQgbXkgcm9vbS4gCkFuZHJvaWQgT1MgYXVzcHJvYmllcmVuOiBHYW56IGVpbmZhY2ggcGVyIFVTQiBTdGljay4gCkFsbWlnaHR5V2FmZmxlcyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpNYWlzIGVzdCBjZSBxdWUgY2VsYSBzdWZmaXQgcG91ciB0cmUgY3JkaWJsZSA/VW4gYXV0cmUgbGVjdGV1ciBtZSBkZW1hbmRlIHVuIGF2aXMgc3VyIHVuZSB2aWRvIGludGl0dWxlICJncmF0aXR1ZGUiIHF1J2lsIHRhaXQgZW4gdHJhaW4gZGUgcmVnYXJkZXIgYWxvcnMgcXUnaWwgYSByZXUgbW9uIHBvc3QuIApDYW4geW91IGdldCBDaGFubmVsIDU/Qmxva2UgT25lOldlbGwgd2UgZ2V0IGl0IHRocm91Z2ggU2t5IERpZ2l0YWwuIFdoZW4gd2UgYm91Z2h0IHRoZSBob3VzZSwgdGhlIGRpc2ggd2FzIHRoZXJlLiAKR29vZCBsdWNrIG9uIHRoZSB0YWJsZXMgIVRoZXJlIGFyZSB0b25zIG9mIHJlZ3VsYXJzIHRoYXQga25vdyBob3cgdG8gcGxheSBidXQgdGhlcmUgd2lsbCBhbHdheXMgYmUgZmlzaC4gClRoZXkgZGlkbiBldmVuIG5vdGljZSBhdCBmaXJzdC4gCkVhY2ggc2lkZSBoYXMgdGhlaXIgb3duIHVuaXF1ZSBzZXQgb2Ygd2VhcG9ucyBhbmQgc2tpbGxzIHRoYXQgZ2l2ZSB0aGVtIGFuIGFkdmFudGFnZSBhbmQgcGxheWVycyB3aWxsIGFkYXB0IHRvIHRoZSBzdHJlbmd0aHMgYW5kIHdlYWtuZXNzZXMgb2YgZWFjaCBmYWN0aW9uIGluIG9yZGVyIHRvIHN1Y2NlZWQuLiAKSSBkaWRuIG1lYW4gQW1lcmljYSBvciBSZXB1YmxpY2FucyBzcGVjaWZpY2FsbHksIEkgbWVhbnQgaHVtYW5zIGluIGdlbmVyYWwuIEkgdGVsbGluZyB0aGVtIHRoYXQgdGhleSBjYW4gYWR2YW5jZSBhcyBhIG5hdGlvbiwgeWVzLiBCZWNhdXNlIGlmIEluZGlhIG9yIGNoaW5hIG9yIE5pZ2VyaWEgb3Igd2hhdGV2ZXIgY2FuIGFkdmFuY2Ugd2l0aCBuZXdlciwgY2xlYW5lciBhbmQgcHJvYmFibHkgbW9yZSBleHBlbnNpdmUgdGVjaG5vbG9naWVzLCB0aGFuIHBsZWFzZSwgZm9yIHRoZSBzYWtlIG9mIHRoZSBlbnRpcmUgcGxhbmV0LCBzdGFydCBmaW5kaW5nIGFuIGludGVybmF0aW9uYWwgc29sdXRpb24gdG8gdGhpcyBwcm9ibGVtLgpXaWZlIGlzIGR1ZSB3aXRoIG91ciBmaXJzdCBjaGlsZCBNYXJjaCAzMHRoLCBhbmQgSSB2b3cgbmV2ZXIgdG8gc3RyaWtlIG15IGNoaWxkLiBJIHJhaXNlZCBtYW55IG9mIGRvZ3MsIGhvcnNlcywgYW5kIGNhdHMgd2l0aG91dCBoYXZpbmcgdG8gaGl0IHRoZW0gc28gSSBkb24gc2VlIHdoeSBpdCBzbyBkaWZmaWN1bHQgZm9yIGZvbGtzIHRvIHJhaXNlIGNoaWxkcmVuIHdpdGhvdXQgaGl0dGluZyB0aGVtLiAKVGhlIG1vb2QgaW4gd2hpY2ggdGhlIG1vdmllIG9wZW5zIGFsc28gbWF0dGVycy4gUmVjZW50bHksIEFzaWFuIGN1bHR1cmUgaGFzIGV4cGxvZGVkIGluIHBvcHVsYXJpdHkgYW1vbmcgV2VzdGVybiBhdWRpZW5jZXM6IEsgcG9wIHN1cGVyZ3JvdXAgQlRTIHJlYWNoZWQgTm8uIDEgb24gdGhlIEJpbGxib2FyZCBjaGFydHMgaW4gSnVuZSwgc2FsZXMgb2YgS29yZWFuIGJlYXV0eSBwcm9kdWN0cyBoYXZlIHRyaXBsZWQgc2luY2UgMjAxNSwgYW5kIEphcGFuZXNlIGNsb3RoaW5nIGNvbXBhbnkgVW5pcWxvIHNpZ25lZCB0ZW5uaXMgc3RhciBSb2dlciBGZWRlcmVyIGFzIGl0cyBicmFuZCByZXByZXNlbnRhdGl2ZS4gRnJlc2ggT2ZmIHRoZSBCb2F0IGhhcyByZWFjaGVkIHN5bmRpY2F0aW9uIHN0YXR1cywgbWVhbmluZyBtYW55IG1vcmUgdmlld2VycyB3aWxsIGhhdmUgdGhlIGNoYW5jZSB0byBzZWUgaXQuClRoZSB0cmVuZCBpcyBjYXRjaGluZyBvbiBpbiBJbmRpYSwgdGhvdWdoLiAKZGFtcGVuIGVudGh1c2lhc20gYXQgQ2hpbmF0b3duIEx1bmFyIE5ldyBZZWFyIHBhcmFkZQpUaGUgcmVhbGx5IGJhZCB0aGluZyBhYm91dCB0cmFucyBmYXR0eSBhY2lkcyBpbiB5b3VyIGRpZXQgYXJlIHRoYXQgdGhleSBjYXVzZSBjaHJvbmljLCBsYXN0aW5nIGluZmxhbW1hdGlvbiwgcGFydGx5IGJlY2F1c2UgdGhleSBpbnRlcmZlcmUgd2l0aCB5b3VyIGJvZHkncyBhYmlsaXR5IHRvIHByb2Nlc3MgdGhlIGdvb2Qgb21lZ2EgMyBmYXR0eSBhY2lkcyB0aGF0IGhlbHAgbG93ZXIgaW5mbGFtbWF0aW9uLgpJIHJlbWVtYmVyIHNlZWluZyBteSBncmFuZHBhcmVudHMgYW5kIG15IHBhcmVudHMgdG9nZXRoZXIgZ3Jvd2luZyB1cCwgYW5kIHRoZXkgc2VlbWVkIHNvIG9sZCB0byBtZSBhdCB0aGUgdGltZS4gQnV0IGxvb2tpbmcgYmFjaywgdGhleSB3ZXJlIGFyb3VuZCB0aGUgc2FtZSBhZ2UgY29tcGFyZWQgdG8gdGhlaXIgcGFyZW50cyBhcyBJIGFtIG5vdyBjb21wYXJlZCB0byBtaW5lIGFuZCBJIHJlbWVtYmVyIHRoaW5raW5nIHRoZXkgYWxsIGhhZCB0aGVpciBzaGl0IHRvZ2V0aGVyLiBIZWxsIG5vIHRoZXkgZGlkbiB0aGV5IHdlcmUgZnJvbnRpbiB0aGUgZW50aXJlIHRpbWUsIGxvbCwgYm90aCBvZiBnZW5lcmF0aW9ucyEKSXQgaGFzIG5vIGJlYXJpbmcuLiAKTm93IDMxLCBXaWxkIGlzIEphbmUgRG9lIE5vLiAxIGluICJKYW5lIERvZSAxIGFuZCBKYW5lIERvZSAyIHZzLiBUaGUgVW5pdGVkIFN0YXRlcywiIHdoaWNoIHNlZWtzIHRvIG92ZXJ0dXJuIEVwc3RlaW4ncyBwbGVhIGFncmVlbWVudCBvbiB0aGUgZ3JvdW5kcyB0aGF0IGl0IHdhcyBleGVjdXRlZCBpbiB2aW9sYXRpb24gb2YgdGhlIGZlZGVyYWwgQ3JpbWUgVmljdGltcycgUmlnaHRzIEFjdC4gCkJ1dCBtYXliZSBub3cgSSBzaG91bGQgc3RvcCBjb3VudGluZyB3aXRoIGJpZyBudW1iZXJzLiBXaHkgYW0gSSB0aGlua2luZyBhYm91dCAzMCB5ZWFycyBsZWZ0PyBJIGhhdmUgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgb25lIHllYXIgYW5kIHRoYXQgYSBsb3Qgb2YgdGltZSB0byBkbyBhIGxvdCBvZiBzdHVmZi4gT3IsIGFuZCBJIGtub3cgdGhpcywgdGhhdCBhbiBpbXBvc3NpYmxlIGV0ZXJuaXR5IHdoZW4geW91IGNhbiBldmVuIHNlZSB3aGF0IHRtciBsb29rcyBsaWtlLi4gCkh1bWFucyBpbiBzZXBzaXMgZG9uIHJlYWxseSBoYXZlIHRoaXMgY2hvaWNlIGFuZCBpbnN1cmFuY2UgcG9saWNpZXMgbWFrZSBpdCBzbyB0aGF0IHRoZXJlIGlzIG1vcmUgaW5mb3JtYXRpb24gb24gdGhpcyB0b3BpYy4gVGhlIGN1cnJlbnQgY29udHJvdmVyc2lhbCB0b3BpYyBpbiB0aGUgaHVtYW4gd29ybGQgcmVnYXJkaW5nIHNlcHNpcyBpcyB0aGUgZGlzY3Vzc2lvbiB3aGV0aGVyIFRoaWFtaW5lICsgQXNjb3JiaWMgQWNpZCAoVml0YW1pbiBDKSArIFN0ZXJvaWRzIGhhcyBhIGJldHRlciBzdWNjZXNzIHJhdGUgdGhhbiBjdXJyZW50IHRob3VnaHRzLiBUaGlzIGhhcyBkcmF3biBhIGxvdCBvZiBjcml0aWNpc20gYW5kIHNrZXB0aWNpc20gZnJvbSBtYW55IHBlb3BsZSwgYnV0IGFsc28gYnJpbmdzIHVwIHRoZSBkaXNjdXNzaW9uIG9mIHdoZXRoZXIgaXRzIHBvc3NpYmxlIHRoaXMgd29ya3MuIApEZXNpZ25lciBvZiB0aGUgbW9tZW50LCBGYXJheiBNYW5hbiBtYXkgaGF2ZSBtYWludGFpbmVkIGhpcyB0cmFkZW1hcmsgcG9rZXIgZmFjZSB0aHJvdWdoIHRoZSBnbG9yeSwgYnV0IGhpcyBzaG93IGFuZCB0aGUgYXBwbGF1c2UgaXQgcmVjZWl2ZWQgd2FzIGFtcGxlIHByb29mIG9mIGhpcyBzdWNjZXNzLiBUbyBhdm9pZCB1c2Ugb2YgdGhlIHdvcmQgJ2JsaW5nJywgTWFuYW4ncyBjb2xsZWN0aW9uIHdhcyBhbGwgc2hpbW1lciBhbmQgaXQgZmxvd2VkIGxpa2UgY3J5c3RhbGxpbmUgd2F0ZXIgb3ZlciBjbGVhciBnbGFzcy4gSGUgbW9zdGx5IHVzZXMgU3dhcm92c2tpIGNyeXN0YWxzIGluIGhpcyBjb3V0dXJlIGFuZCB0aGUgcXVhbGl0eSBzaG93cy4gSXQgaGFzIHRvIGJlIHNhaWQgdGhhdCB0aGVzZSBjbG90aGVzLCBvciB0aGUga2luZCBGYXJheiBNYW5hbiBkZXNpZ25zIGluIGdlbmVyYWwsIGxvb2tlZCBzbyBtdWNoIGJldHRlciBvbiB0aGUgdGFsbCwgbGl0aGUgbW9kZWxzIGluIER1YmFpIGJ1dCB0aGF0J3MgYW4gaW1wZWRpbWVudCBubyBvbmUgY2FuIHNvbHZlLgpTaG9vc2hDaGF0dHlNb25rZXkgIDE0IHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvCkphbmUga2luZCBvZiBqdXN0IGxvb2tzIGF0IGhlciwgYnV0IEpvaG4gaXMgcHJldHR5IHBpc3NlZCBhbmQgdGVsbHMgaGVyIHRvIHN0b3AgYmVpbmcgcnVkZS4gQ0IgbG9va3MgYXQgaGVyIGJveWZyaWVuZCwgYnV0IGhlIGRvZXNuJ3Qgc2F5IGFueXRoaW5nLCBzbyBDQiBqdXN0IHN0YXJ0cyB0byBzb2IsIHByZXR0eSBsb3VkbHkgdG9vLiAKVmFyaWV0eSBvZiBQb2tlciBTaXRlcyB0byBQbGF5IEZyb20K|<---