--->|V2hpY2ggbGVhZHMgbWUgdG8gaGlzIGJpZ2dlc3QgaXNzdWUuIApDYW4gYmUgZm91bmRvbiBZb3V0dWJlLiAKWWVhaCB5b3UgY2FuIG1ha2Ugc2VydmVycyBwYXkgZm9yIGRpbmUgYW5kIGRhc2hlcnMsIGJlY2F1c2Ugd3RmIGFyZSB0aGV5IHN1cHBvc2VkIHRvIGRvPyBBIHNlcnZlciBpc24gdGhlIGZ1Y2tpbmcgZm9vZCBwb2xpY2UgcHJvZmlsaW5nIHBlb3BsZSBhbmQgd2F0Y2hpbmcgdGhlbSBjb25zdGFudGx5LCB0aGV5IGFyZSBydW5uaW5nIGFyb3VuZCBkb2luZyB0aGVpciBqb2IuIElmIHNvbWVvbmUgbGVhdmVzIHdpdGhvdXQgcGF5aW5nIHRoZXkgY2FuIGRvIG11Y2ggbm9yIHNob3VsZCB0aGV5LiBJIHdvdWxkbiBldmVuIGNoYXNlIHNvbWVvbmUgd2hvIEkgc2F3IGRvaW5nIGl0LCBub3Qgd29ydGggZ2V0dGluZyBzdGFiYmVkLiBJIHdhcyBhIHNlcnZlciBvbmNlIHVwb24gYSB0aW1lIGFuZCB0aGUgaG9zdGVzcyBzZWF0ZWQgYSBzaW5nbGUgcHJvYmFibHkgaG9tZWxlc3MgbGFkeSBpbiBteSBzZWN0aW9uLiBTaGUgb3JkZXJlZCBsYW1iIGNob3BzIGFuZCBsZWZ0IGFmdGVyIGVhdGluZyBoYWxmIG9mIGl0LiBJIG5ldmVyIHNhdyBoZXIgbGVhdmUsIGp1c3QgYXNzdW1lZCBzaGUgd2FzIGluIHRoZSBsYWRpZXMgcm9vbSB3aGVuIEkgZGlkbiBzZWUgaGVyIHRoZXJlIGFueW1vcmUgdW50aWwgaXQgYmVjYW1lIGFwcGFyZW50LiBJZiB5b3Ugd2FudCB0byBwcm9maWxlIGFuZCBzY3JlZW4gcGVvcGxlIHdobyBtaWdodCBub3QgcGF5LCBkbyBpdCB5b3Vyc2VsZiBhdCB0aGUgaG9zdCBhcmVhICAgZG9uIHB1dCB0aGF0IG9uIGEgc2VydmVyLiBJdCBub3QgYSBnb29kIGxvb2sgZm9yIGEgcmVzdGF1cmFudCB0aG91Z2gsIHNpbmNlIHlvdSB3aWxsIGluZXZpdGFibHkgaGF2ZSBmYWxzZSBwb3NpdGl2ZXMuCkFpcnBvcnRzLiBVc2VkIHRvIGJlIG9ubHkgS2ltcG8sIGFuZCBpdCB3YXMgYSBobGxob2xlLiBJbmNoZW9uIEludGVybmF0aW9uYWwgaXMgd29uZGVyZnVsLgpJdCBtYWlubHkgY29uc2lzdHMgb2Ygd2hvbGUgZm9vZHMgaW5jbHVkaW5nIG1lYXQsIHZlZ2V0YWJsZXMsIGZydWl0LCB3YXRlciBhbmQgcmljZS4gKFdoaWNoIGZyZXF1ZW50bHkgbWVhbnMgbm8gYnJlYWRzIG9yIGdsdXRlbiBlbXBoYXNpcyBtaW5lKVBhcmVudHMgbWF5IGtub3cgaWYgdGhlIGRpZXQgaXMgd29ya2luZyB3aXRoaW4gdGhlIGZpcnN0IHR3byB3ZWVrcy5SZXNlYXJjaGVycyBjYXV0aW9uIGl0IGltcG9ydGFudCB0byBoYXZlIGEgZG9jdG9yIG9yIGRpZXRpdGlhbiBvdmVyc2VlIHRoZSBkaWV0YXJ5IGNoYW5nZXMuV2hlbiBraWRzIHN0YXJ0ZWQgZWF0aW5nIGZvb2RzIGZyb20gdGhlaXIgb2xkIGRpZXRzLCB0aGUgc3ltcHRvbXMgcmV0dXJuZWQuVGhlIGVmZmVjdHMgb2YgYSByZXN0cmljdGVkIGVsaW1pbmF0aW9uIGRpZXQgaW4gY2hpbGRyZW4gd2l0aCBhdHRlbnRpb24gZGVmaWNpdCBoeXBlcmFjdGl2aXR5IGRpc29yZGVyIChBREhEKSBoYXZlIG1haW5seSBiZWVuIGludmVzdGlnYXRlZCBpbiBzZWxlY3RlZCBzdWJncm91cHMgb2YgcGF0aWVudHMuIApJIGp1c3QgZG9uIGdldCBob3cgeW91IHRoaW5rIGluY3JlYXNpbmcgaG91c2luZyBzdXBwbHksIGV2ZW4gaW5kaXJlY3RseSwgaXMgYSBiYWQgdGhpbmcuIFRoZXkgbm90IHByZXZlbnRpbmcgYSBOWmVyIGZyb20gb3duaW5nIHRoYXQgYml0IG9mIHNwYWNlLCB0aGV5IHByZXZlbnRpbmcgYSBwaWdlb24gZnJvbSBmbHlpbmcgdGhyb3VnaCB3aGF0IHdvdWxkIG90aGVyd2lzZSBiZSBlbXB0eSBzcGFjZS4gKExvb2tpbmcgYXQgdGhlIGJpZyBwaWN0dXJlIG9mIHRlbnMgb2YgdGhvdXNhbmRzIG9mIGFwYXJ0bWVudHMgYWNyb3NzIGh1bmRyZWRzIG9mIGRldmVsb3BtZW50cykuIApUaGUgc2NyaXB0IHdhcyB2ZXJ5IG5pY2UgYW5kIGludGVsbGlnZW50bHkgd3JpdHRlbi4gQSBzZXJpb3VzIGlzc3VlIGhhcyBiZWVuIHBvcnRyYXllZCBpbiBhIGZ1bm55IG1hbm5lciBpbiB0aGUgZmlsbSwiIGhlIHNhaWQuLiAKSXQgd2FzIGluIHRoZSBwcmUgc21hcnQgcGhvbmUgZGF5cy4gCldoeSBkbyB3ZSBtYWtlIGJhZCBjaG9pY2VzCklmIGJyYWluIGFjdGl2aXR5IHdlcmUgaGFja2VkLCB3aGF0IHRoZSBoYWNrZXIgd291bGQgc2VlIGlzIGEgbGFyZ2Ugc3RyZWFtIG9mIG51bWJlcnMsIHJhbmdpbmcgZnJvbSAgMTAwMCB0byAxMDAwIG1pY3Jvdm9sdHMgKHRob3VnaCBudW1iZXJzIGNhbiBiZSBsYXJnZXIgd2l0aCBlbnZpcm9ubWVudGFsIG5vaXNlKS4gVGhlIHJlYWwgY29uY2VybiB3b3VsZCBiZSBpZiB0aGUgY29ubmVjdGlvbiB0byBJYW4ncyBhcm0gd2VyZSBuZXR3b3JrZWQsIGFuZCB0aHVzLCBoYWNrYWJsZSAgIHdlIGRvbid0IHdhbnQgYSBoYWNrZXIgdGFraW5nIGNvbnRyb2wgb2YgSWFuJ3MgaGFuZHMhIFRoaXMgaXMgd2h5IHdlIGFyZSBjdXJyZW50bHkgdXNpbmcgYSB3aXJlZCBzeXN0ZW0uLiAKKE9taXR0aW5nIHRoZSBiYWNvbiwgdXNpbmcgZHJpZWQgYmVhbnMsIHdoaWNoIGFyZSBhbHNvIGxvd2VyIGluIHNvZGl1bSwgb3Igc3Vic3RpdHV0aW5nIGNhcnJvdHMgZm9yIHRoZSBwZXBwZXJzIHJlZHVjZXMgdGhlIHByaWNlIGZ1cnRoZXIsIG9mIGNvdXJzZS4pQW5vdGhlciBhcmd1bWVudCBydW5zIHRoYXQganVuayBmb29kIGlzIGNoZWFwZXIgd2hlbiBtZWFzdXJlZCBieSB0aGUgY2Fsb3JpZSwgYW5kIHRoYXQgdGhpcyBtYWtlcyBmYXN0IGZvb2QgZXNzZW50aWFsIGZvciB0aGUgcG9vciBiZWNhdXNlIHRoZXkgbmVlZCBjaGVhcCBjYWxvcmllcy5CdXQgZ2l2ZW4gdGhhdCBoYWxmIG9mIHRoZSBwZW9wbGUgaW4gdGhpcyBjb3VudHJ5IChhbmQgYSBoaWdoZXIgcGVyY2VudGFnZSBvZiBwb29yIHBlb3BsZSkgY29uc3VtZSB0b28gbWFueSBjYWxvcmllcyByYXRoZXIgdGhhbiB0b28gZmV3LCBtZWFzdXJpbmcgZm9vZCdzIHZhbHVlIGJ5IHRoZSBjYWxvcmllIG1ha2VzIGFzIG11Y2ggc2Vuc2UgYXMgbWVhc3VyaW5nIGEgZHJpbmsncyB2YWx1ZSBieSBpdHMgYWxjb2hvbCBjb250ZW50LiAKRnVzayBtYWthciBsbW5hciBtbmdhIHRlY2tlbiBvY2ggbWVkIGxpdGUgZGV0ZWt0aXYgYXJiZXRlLCBlbiBodXN0cnUga2FuIGZuZ2Egc2luIG1ha2UgbWVkIHNsZGEgYmV2aXMuIE1uZ2EgZnJ1YXIgZ3JhIG1pc3N0YWdldCBhdHQgaHlyYSBlbiBkeXIgZGV0ZWt0aXYgZWxsZXIga3BhIGR5ciBzcGlvbiB1dHJ1c3RuaW5nLiBNZW4gb20gZHUga25uZXIgdGlsbCBuZ3JhIGF2IHRlY2tuZW4gcCBlbiBvdHJvZ2VuIG1ha2Ugb2NoIHZsIHZldCBkaW4gbWFrZXMgYmV0ZWVuZGUgb2NoIHZhbm9yLCBtc3RlIGR1IGJhcmEgZmxqYSBkaW4gZ3V0IGluc3RpbmN0IG9jaCBhbnN0bGxhIG5ncmEgdG9wcCAxMCBzdHQgYXR0IGZuZ2EgZW4gb3Ryb2dlbiBtYWtlLiAKWW91IHByb2JhYmx5IHdhbnQgdG8gY29tcGFyZSB0aGUgdGltZSBzcGVudCBvbiBicm93c2luZyBpdCBsb2NhbGx5IHZlcnN1cyBicm93c2luZyBpdCByZW1vdGVseSwgaWYgeW91IG5vdCBoYXZpbmcgcHJvYmxlbXMgbG9jYWxseS4gSSBub3QgaGFkIGFueSBvY2Nhc2lvbiB0byB1c2UgYSBtYWNPUyBib3ggYXMgYSBmaWxlIHNlcnZlciBzaW5jZSB0aGV5IHJlcGxhY2VkIFNhbWJhIHdpdGggdGhlaXIgb3duIENJRlMgaW1wbGVtZW50YXRpb24sIHNvIEkgY2FuIGJlZ2luIHRvIGd1ZXNzIHdoZXRoZXIgaXQgY2xldmVyIGVub3VnaCB0byBkbyB0aGluZ3MgbGlrZSBwcmUgZW1wdGl2ZWx5IGluZGV4aW5nIHRoZSBkcml2ZSBjb250ZW50cyBvciBwcmVmZXRjaGluZyB0aGluZ3MgdGhhdCB0aGV5IGtub3cgYSBjbGllbnQgaXMgbGlrZWx5IHRvIGFzayBmb3IgYWZ0ZXIgdGhlIGZpcnN0IHJvdW5kIHRyaXAuLiAKUmVhbGx5IGZvciBubyByZWFzb24uIFNvIGRvZXMgdGhhdCBtZWFuIHRoaXMgd2FzIGEgcGxveSB0byBtYWtlIGEgcGVyc29uIGNvbW1pdCBhIGNyaW1lIHRoYXQgd2FzbiBnb2luZyB0byBoYXBwZW4gaW4gdGhlIGZpcnN0IHBsYWNlLiAKSGUgdG9vayBhIGRpZmZlcmVudCBhcHByb2FjaCB0aGFuIGZlbGxvdyBmcmVlIGFnZW50IEJyZXNoYWQgUGVycmltYW4uMSB3ZWVrIGFnbyArIEJ5IFRlcnJ5IFBsdXRvLCBUaGUgUGxhaW4gRGVhbGVyQSBmdXR1cmUgdGVhY2hlciwgZnV0dXJlIGJhbmtlciBsZWFkIEJhbGR3aW4gV2FsbGFjZSB0byB0aGUgRCAzIE5DQUEgdG91cm5hbWVudCAgIFRlcnJ5IFBsdXRvIEEgZnV0dXJlIHRlYWNoZXIsIGZ1dHVyZSBiYW5rZXIgbGVhZCBCYWxkd2luIFdhbGxhY2UgdG8gdGhlIEQgMyBOQ0FBIHRvdXJuYW1lbnQgICBUZXJyeSBQbHV0byBObyBvbmUgZXhwZWN0ZWQgQmFsZHdpbiBXYWxsYWNlIHRvIHdpbiB0aGUgT2hpbyBDb25mZXJlbmNlIEF0aGxldGljIENvbmZlcmVuY2UgdG91cm5hbWVudC4gClRoZXkgYm90aCB0aHJvdyBkb3duIHRoZWlyIGNhcmRzLiBUaGUgZmlyc3QgcGxheWVyIGhhcyBhIHBhaXIgb2Yga2luZ3MgaW4gaGlzIGhhbmQgYW5kIHRocmVlIDcncyBvbiB0aGUgdGFibGUuIApGb2xsb3dpbmcgdGhlIGF0dGFjaywgTXIgVHVybmVyIGZvbGxvd2VkIHRoZSBtZW4gb3V0IG9mIHRoZSBob3VzZSBiZWZvcmUgc3RhbmRpbmcgYXQgdGhlIHNpZGUgb2YgdGhlIHJvYWQgdG8gY2F0Y2ggdGhlIGF0dGVudGlvbiBvZiBhIHBhc3NlciBieS4uIApJdCdzIG9uZSBvZiB0aGUgbW9zdCB2aXNpdGVkIHN0YXRlbHkgaG9tZXMgaW4gdGhlIFVLLjIuIEl0J3Mgb2xkIGFuZCBzdGVlcGVkIGluIGhpc3RvcnkuIFRoZSBjYXN0bGUgaXMgYSBTY2hlZHVsZWQgQW5jaWVudCBNb251bWVudCBhbmQgR3JhZGUgSSBsaXN0ZWQgYnVpbGRpbmcsIHdpdGggYSBjb2xsZWN0aW9uIG9mIGFybW91cnkgc2Vjb25kIG9ubHkgdG8gdGhhdCBvZiB0aGUgVG93ZXIgb2YgTG9uZG9uLk92ZXIgaXRzIGxvbmcgaGlzdG9yeSwgaXQgaGFzIGJlZW4gb3duZWQgYnkgMzYgZGlmZmVyZW50IGluZGl2aWR1YWxzLCBwbHVzIGZvdXIgcGVyaW9kcyBhcyBDcm93biBwcm9wZXJ0eSB1bmRlciBzZXZlbiBkaWZmZXJlbnQgbW9uYXJjaHMuSXQgd2FzIHRoZSBmYW1pbHkgc2VhdCBvZiB0aGUgRWFybHMgb2YgV2Fyd2ljaywgd2hpY2ggaW5jbHVkZWQgaW5oZXJpdGFuY2UgdGhyb3VnaCB0aGUgZmVtYWxlIGxpbmUgc28gdGhlIGNhc3RsZSBoYXMgaGFkIHRocmVlIHdvbWFuIG9yIGdpcmwgb3duZXJzLkVsZXZlbiBvZiB0aGUgbW9udW1lbnQncyBvd25lcnMgd2VyZSB1bmRlciB0aGUgYWdlIG9mIDIwIHdoZW4gdGhleSBpbmhlcml0ZWQsIGluY2x1ZGluZyBhIGdpcmwgYWdlZCB0d28gYW5kIGEgYm95IGFnZWQgdGhyZWUuIApKaW0gd2FzIGEgZ3JlYXQgZmFtaWx5IG1hbiwgd2hvIHNoYXJlZCB3aXRoIGludGVyZXN0IHRoZSBsaXZlcyBvZiBoaXMgY2hpbGRyZW4sIGdyYW5kY2hpbGRyZW4gYW5kIGdyZWF0IGdyYW5kY2hpbGQuIApVbnZlaWxpbmcgaGFzbid0IGJlZW4gbWFkZSBwdWJsaWMuLiAKV2UgaGF2ZSBhIHZlc3RlZCBpbnRlcmVzdCBpbiBlbnN1cmluZyBvdXIgY29tbXVuaXR5IGlzIHNhZmUuIApQb2x5ZXVjdGU6IDE4ODcgVmVyc2lvbiAoRnJlbmNoIHBkZiBkb3dubG9hZC4gUG9seWV1Y3RlOiAxODg3LiBDREE2NjgwMS8yICAgR291bm9kOiBTb25ncy4gQ0RBNjY4MDEvMi4gRGlnaXRhbCBib29rbGV0IChQREYpLiBUaGUgSHlwZXJpb24gRnJlbmNoIFNvbmcgRWRpdGlvbiAuIERvd25sb2FkIGFsbCBNUDMgMTAuMDAuIERvd25sb2FkIGFsbCBGTEFDIDEwLjAwLi4gClRoZXkgYWxsIGluIG9uIGl0LCBkb24geW91IGdldCBpdD8gRXBzdGVpbiB3YXMgc2VsbGluZyBnaXJscyB0byBUcnVtcCwgQ2xpbnRvbiwgb3IgYW55Ym9keSB3aXRoIG1vbmV5IGFuZCBwb3dlci4gCkhlIGxlYXJuZWQgdG8gY291bnQgdXNpbmcgYSBkZWNrLkhlIGFuZCBCcmFuZG9uIGhhdmUgbm93IHJlcGxhY2VkIHRoZWlyIHBhcmVudHMgYXMgdGhlIGZhbWlseSBwYWNrIGxlYWRlcnMuIk9sZCBzY2hvb2wgcG9rZXIgaXMgdmVyeSB0b3VjaHkgZmVlbHksIiBhZGRlZCBSaWNoYXJkLCAiYnV0IG5vd2FkYXlzIGl0J3MgYWxsIGFib3V0IHRoZSBtYXRocyBhbmQgdGhlb3J5LiAKR2FnYSByZWNlbnRseSBlbmRlZCBoZXIgZW5nYWdlbWVudCB0byBoZXIgZmlhbmMgQ2hyaXN0aWFuIENhcmluby4gQSBzb3VyY2UgdG9sZCBFISBOZXdzIGl0ICJqdXN0IGRpZG4ndCB3b3JrIG91dC4gClRoZSBwcm9ncmFtIHdpbGwgc29vbiBiZSBhdmFpbGFibGUgZm9yIGNsYXNzZXMgaW4gb3RoZXIgc3RhdGVzIGFzIHdlbGwgYXMgc2VsZiBzdHVkeS4gV2UgYXJlIGFsc28gc2VuZGluZyBpdCBpbnRvIHRoZSBwcmlzb25zIGFzIGEgbGlmZSBza2lsbHMgY2xhc3MuIApUaGUgaG9yc2UgSSBhbSBsZWFzaW5nIGlzIHRvZWQgaW4gYmlnIHRpbWUsIGFuZCBhIHRlZW5zeSBiaXQgcXVpcmt5LiB0aGF0cyB3aHkgdGhlcmVzIG5vIGZlZS4gSXQgY2FuIGJlIHJlYWxseSBiZW5lZmljaWFsIGZvciBib3RoIHNpZGVzLkNhbGxlZCB0d28gbGF3eWVycyBhbmQgZ290IGEgY29uc3VsdC4gQm90aCBzYWlkIGl0IHdvdWxkbnQgYmUgd29ydGggaGlyaW5nIGFuIGF0dG9ybmV5LiBJbiBGbG9yaWRhIHlvdSBoYXZlIHRvIGhhdmUgUElQIChQZXJzb25hbCBJbmp1cnkgUHJvdGVjdGlvbikgd2l0aCB5b3VyIGNhciBpbnN1cmFuY2UsIGFuZCB0aGF0IGNvdmVycyBtZWRpY2FsIGNvc3RzLiAKTXkgdGVhY2hlciBoYXMgYWN0dWFsbHkgb2ZmZXJlZCB0aGF0IEkgYnJhbmNoIGluIG1hcm1hIHBvaW50IHRoZXJhcHkgYXMgYSB3YXkgb2YgYmVpbmcgYWJsZSB0byBwcmFjdGljZSBtYXNzYWdlIHdpdGhvdXQgaGF2aW5nIHRvIHNwZW5kIG1vbmV5IHRvIGdldCBteSBsaWNlbnNlLCBhbmQgc2hlIGFsc28gZW1waGFzaXplcyBhIGxvdCBvZiBzdHVkeSBpbiBhbmF0b215LCBhcyB5b3UgbWVudGlvbmVkLiBTaGUgaXMgYWxzbyBhIG1hc3RlciBpbiBBeXVydmVkYSwgYW5kIGl0IGdvb2QgdG8gaGVhciBvdGhlciBwZW9wbGUgYXJlIGhlbHBpbmcgb3RoZXJzIHdpdGggdGhhdCBrbm93bGVkZ2UgYXMgd2VsbEkgbm90IGNsZWFyIGZyb20geW91ciBwb3N0IGFzIHRvIHdoaWNoIGNvdW50cnkgeW91IGxpdmUgYW5kIGludGVuZCB0byBwcmFjdGljZSBpbi4gVGhhdCBtYWtlcyBhIGRpZmZlcmVuY2UgYXMgdG8gd2hhdCB5b3UgY2FuIGxlZ2FsbHkgcHJhY3RpY2UuLiAKVGhlIDIwMTEgb3BpbmlvbiBvcGVuZWQgdGhlIGRvb3IgZm9yIGNhc2ggc3RyYXBwZWQgc3RhdGVzIGFuZCB0aGVpciBsb3R0ZXJpZXMgdG8gYnJpbmcgb25saW5lIGdhbWJsaW5nIHRvIHRoZWlyIHJlc2lkZW50cywgYXMgbG9uZyBhcyBpdCBkaWQgbm90IGludm9sdmUgaW50ZXJzdGF0ZSBzcG9ydHMgYmV0dGluZy4KTXkgZmlyc3Qgc2F1bmEgZXhwZXJpZW5jZSBpbiBHZXJtYW55IHdhcyBhdCBGcmllZHJpY2hzYmFkIGluIEJhZGVuIEJhZGVuIGFuZCBJIHdlbnQgYmFjayBhZ2FpbiB0aGlzIHllYXIgZm9yIG15IGJpcnRoZGF5LiBIZXJlIHdoYXQgSSBjYW4gdGVsbCB5b3UgYWJvdXQgdGhlcmUgc3BlY2lmaWNhbGx5OlRoZXkgaGF2ZSBhIHN0YXRpb24gc3lzdGVtIHdpdGggc3VnZ2VzdGlvbnMgZm9yIGhvdyBsb25nIHlvdSBzaG91bGQgc3BlbmQgYXQgZWFjaCBzdGF0aW9uLiAKTGlrZSB0aGV5IHdlcmUgcmVmbGVjdGluZyBteSBmcmllbmRsaW5lc3MgYmFjayB3aXRoIGNoYXQgYnV0IHdobyBkb2VzIHRoaXM/ISBJdCB3YXNudCBldmVuIGEgYnVzIHRoYXQgd2VudCBjbG9zZSB0byBteSBob3VzZSBidXQgdG8gdGhlIHJpZ2h0IHNpZGUgb2YgdG93bi4gClNvIHJlYWxseSBoZXIgb3B0aW9ucyBhcmUgY2FsbCBmb3IgYSBjaG9wLCBvciBsb3NlLiAKQWxsIG9mIHRoZW0gdWx0aW1hdGVseSBmYWlsZWQuIApKdHJpYW5nbGUgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBob3VyIGFnbwpTbyBJIHdvbmRlcmVkLCBpZiB0aGUgc2NpZW5jZSBiYWNrcyBpdCB1cCB3aHkgZG8gSSBmZWVsIHNvIGRpZmZlcmVudGx5PyBBbSBJIGJyYWlud2FzaGVkIGJ5IGZlbWluaXNtIG9yIGRvIEkgd2FudCB0byBiZSBzdWJtaXNzaXZlIHN1YmNvbnNjaW91c2x5P0kgZ3Vlc3MgdGhlIHRydXRoIGlzIHRoYXQgaHVtYW5zIGFyZSBjb21wbGljYXRlZCBhbmQgd2UgY2FuJ3QgYWxsIGJlIHB1dCBpbnRvIHBlcmZlY3RseSBjYXRlZ29yaXplZCBtb2xkcy4gTGlrZSB5b3UgYXNzdW1lZCBmcm9tIG15IHBlcnNvbmFsaXR5IHR5cGUsIEkgZG9uJ3QgdmFsdWUgdHJhZGl0aW9uIGhpZ2hseSBhbmQgSSBkbyBlbmpveSB0YWtpbmcgdGhlIHBvc2l0aW9uIG9mIGEgbGVhZGVyLiAKU28gb24gYW5kIHNvIG9uLiBJZiB5b3UgZmVlbCBsaWtlIHlvdSBiZWluZyBjYW1wZWQsIHBsYXkgdGhlIGxhbmUgd2hlcmUgeW91IGNhbiBmcmVlemUgdW5kZXIgeW91ciB0b3dlci4gClRoZXkgYXJlIGVpdGhlciB0b28gbG9uZywgdG9vIHNtYWxsIG9yIGhhdmUgc29tZWhvdyBiZWVuIGRhbWFnZWQgZHVyaW5nIGNvbnN0cnVjdGlvbi4gVGhlIHJlc3VsdCBpcyB0aGUgZHVjdGluZyBwbHVnczsgdGhlIGV4aGF1c3Qgc2F0dXJhdGVzIHRoZSBsaW50IHRyYXBwZWQgaW4gdGhlIGR1Y3QsIHRoZSBkdWN0cyBsZWFrIGFuZCB0aGUgY2VpbGluZ3MgaW4gb3VyIHVuaXRzIGFyZSBhbGwgYmVpbmcgZGFtYWdlZC4uIAoiV2VsbCwgZG9uJ3QgTGlzYS4gRG9uJ3QgZiBpbmcgZmVlbCBzb3JyeSBmb3IgbWUsIGJpdGNoLCIgS2ltIHNhaWQuICJZb3UgZG9uJ3Qga25vdyB3aGF0IEkgZ28gdGhyb3VnaCBhdCBuaWdodC4iCiJUaGVzZSBhcmUgdGhlIG1vc3QgdnVsbmVyYWJsZSBwZW9wbGUgd2l0aCB0aGUgbGVhc3QgZGlzcG9zYWJsZSBpbmNvbWUgd2hvIGFyZSBhY2NvdW50aW5nIGZvciBhIGxhcmdlIHByb3BvcnRpb24gb2YgZ2FtYmxpbmdsb3NzZXMsIiBzaGUgc2FpZC4gTXMgV2FsbGFjZSBzYWlkIFN0IEx1a2UgcHJvdmlkZWQgYXNzaXN0YW5jZSB0byBhYm91dCA1MDAgcGVvcGxlIGFjcm9zcyBjZW50cmFsIFZpY3RvcmlhIGVhY2ggeWVhciB0aHJvdWdoIGl0cyBHYW1ibGVycyBIZWxwIHByb2dyYW0uIApBdCBTdGV3bGV5IE9yY2hhcmQgbmVhciBJbG1pbnN0ZXIgaW4gU29tZXJzZXQsIEdheW1lcnMgQ2lkZXIgaGFzIGJlZW4gaG9zdGluZyBhIHdhc3NhaWwgZm9yIHRoZSBwYXN0IGZpdmUgeWVhcnMsIGNvbXBsZXRlIHdpdGggYSBXYXNzYWlsIFF1ZWVuLCBNb3JyaXMgZGFuY2VycyBhbmQgYSBob2cgcm9hc3QuIEl0IGFsbCBzb3VuZHMgYSBiaXQgZm9sa3N5LCBzb21ldGhpbmcgdGhlIGxhdGUgbGFtZW50ZWQgTmlnZWwgUGFyZ2V0dGVyIHdvdWxkIGhhdmUgZW5qb3llZC4gCk5vdyBJIGRvbiBrbm93IHRoZSBydWxlcyBvZiBwb2tlciBhbmQgdGhhdCBtZWFucyBJIGNhbiBsZWFybiB0aGUgZm91bmRhdGlvbnMgZnJvbSB0aGUgYmVzdCBhbmQgbW92ZSBmb3J3YXJkIHF1aWNrbHkuIAoiVGhpcyBpcyBteSBmaXJzdCBGaXRiaXQgYW5kIGZvciBzaXggd2hvbGUgZGF5cyBhbmQgbmlnaHRzIEkndmUgYmVlbiB2ZXJ5IGltcHJlc3NlZC4gCk9ubHkgY2VydGFpbiBtYXNzYWdlIHRlY2huaXF1ZXMgaGF2ZSByZWxheGluZyBlZmZlY3RzIG9uIHlvdXIgbmVydm91cyBzeXN0ZW0uIApBbnlvbmUgd2hvIGhhcyBhIG1hdGNoaW5nIHVwIGNhcmQgbXVzdCBmb2xkLiBQbGF5IGlzIHRoZW4gcmVzb2x2ZWQgbm9ybWFsbHkuLiAKWW91ciBpbnNpZGUgYWRkcmVzcyBzaG91bGQgbGlzdCB5b3VyIGNvbnRhY3QgaW5mb3JtYXRpb247IGhvd2V2ZXIsIHJlcGVhdGluZyBpdCBpbiB5b3VyIGZpbmFsIHBhcmFncmFwaCBtaWdodCBsZWFkIHRoZSByZWFkZXIgdG8gZSBtYWlsIG9yIGNhbGwgeW91IG9uY2Ugc2hlIGZpbmlzaGVzIHJlYWRpbmcgeW91ciBsZXR0ZXIuIEJ1cmVhdSBvZiBMYWJvciBTdGF0aXN0aWNzLiAKRW0gdGVybW9zIGRlIGVsZWN0cm5pY2EgbyBwcm9ibGVtYSBhY3R1YWwgIGNvbSBvIGNvbnRyb2xhZG9yLCBvIEVTQywgcGFyYSBwZXJjZWJlcm1vcyBvIHF1ZSBwb2RlcmVtb3MgY29tcHJhciBxdWUgY29uc2lnYSBjb25qdWdhciBvIG1vdG9yIGUgYmF0ZXJpYSBxdWUgdGVtb3MsIGRlIG1vZG8gYSBxdWUgYWd1ZW50ZSBlIG5vIHRvcnJlIDpQCkFsdGhvdWdoIGNhdHMgZGlkIGFzc2ltaWxhdGUgZWFzaWx5IGludG8gZmFtaWx5IGxpdmluZywgdGhleSBuZXZlciBiZWNhbWUgY29tcGxldGVseSBkb21lc3RpY2F0ZWQsIHdoaWNoIGlzIHdoeSwgZXZlbiB0b2RheSwgY2F0cyBhcmUgcHJldHR5IHNlbGYgcmVsaWFudCBhbmQgc3RpbGwgbWFrZSBleGNlbGxlbnQgaHVudGVycyB3aGVuIGFsbG93ZWQgdG8gcm9hbSBmcmVlLi4gCkNvbG9yYWRvIEJvbmRTaGFyZXMsIGluIDIwMDYsIGxvYW5lZCB0aGUgc2Nob29sICQ0LjY1IG1pbGxpb24gdG8gcHVyY2hhc2UgaXRzIGJ1aWxkaW5nIGxvY2F0ZWQgYXQgNjI1NSBMb25nYm93IERyaXZlIGFuZCBwYXkgZm9yIG90aGVyIGV4cGVuc2VzLCBNY0N1aXN0aW9uIHNhaWQuIFdoZW4gaGUgdG9vayBvdmVyIGFzIHByZXNpZGVudCBpbiBKYW51YXJ5IDIwMTIsIHRoZSBzY2hvb2wgc3RpbGwgb3dlZCAkNC4zNSBtaWxsaW9uIG9uIHRoYXQgbG9hbi4KVGhleSBib3VnaHQgYSB0b3duaG91c2UgaW4gYSBuaWNlIG5laWdoYm9yaG9vZC4gClRoZXkndmUgYWRvcHRlZCB0aGUgdmFyaW91cyBzdGF0ZSBnb3Zlcm5tZW50IGFuZCBnYW1pbmcgaW5kdXN0cnkgY29kZXMgb2YgcHJhY3RpY2UgYWltZWQgYXQgcmVkdWNpbmcgcHJvYmxlbSBnYW1ibGluZyAocmVxdWlyaW5nIHNpZ25zIHRoYXQgd2FybiBvZiB0aGUgZGFuZ2VycyBvZiBnYW1ibGluZyBhbmQgdGhhdCBhZHZlcnRpc2UgaGVscCBob3RsaW5lcykuIAonQXMgYW4gaW5ub3ZhdGl2ZSBjb21wYW55LCB0aGV5IHdpbGwgY3JlYXRlIHByb2R1Y3RzIGFuZCB0aGV5IHdpbGwgbWVldCBtYXJrZXQgbmVlZHMgICB3aGF0ZXZlciB0aGV5IG1heSBiZS4gSXQgaXMgbm90IGRpc21pc3NpbmcgYW55IG90aGVyIGhhcmQgd29yayBkb25lIGluIHRoZSBwYXN0IHRvIGRldmVsb3Agc3BvcnRzIGhpamFicywgaXQncyBqdXN0IHRoZXJlIGlzIG1vcmUgY29tcGV0aXRpb24gaW4gdGhlIG1hcmtldCBmb3IgbW9kZXN0IGNsb3RoaW5nIG5vdy4KSSBkbyB3YW50IHRvIHJ1ZyBzd2VlcCwgbm90IG91dCBvZiB3YW50aW5nIHRvLCBidXQgb3V0IG9mIG5vdCB3YW50aW5nIHRvIGZpZ2h0IHdpdGggbXkgcGFydG5lcnMgbXVtIGFuZCB0aGVtIHBvdGVudGlhbGx5IGZhbGwgb3V0IHdoZW4gaGUgaGFzIG5vIG9uZSBoZXJlLiAKRW4gZWZmZXQsIGxlIHByb2pldCBwcnNlbnQsIG1tZSBzJ2lsIG1vbnRyZSBkZSAgIGJpZW4gcGV0aXRzICAgbGFyZ2lzc2VtZW50cyBkZSB0cm90dG9pcnMgZXQgZGVzIHBhc3NhZ2VzIHBpdG9ucyBtaWV1eCBzY3VyaXNzLCBlc3QgcGVucyBkJ2Fib3JkIHBvdXIgbGVzIGF1dG9tb2JpbGlzdGVzIGV0IG5vbiBwb3VyIGxlcyBwaXRvbnMuIApHbHV0ZXM6IFNpdCBvbiB0aGUgcm9sbGVyIGFuZCBjcm9zcyB5b3VyIHJpZ2h0IGFua2xlIG92ZXIgeW91ciBsZWZ0IGtuZWUuIFNoaWZ0IHlvdXIgd2VpZ2h0IHRvIHRoZSByaWdodCBhbmQgZ2VudGx5IHJvbGwgZm9yd2FyZCBhbmQgYmFja3dhcmQgb24geW91ciByaWdodCBnbHV0ZS4gQWRqdXN0IHRoZSBhbmdsZSBvZiB5b3VyIGJvZHkgZm9yIGRpZmZlcmVudCBpbnRlbnNpdGllcy4KV2VsbCwgdGhhdCBwbGFuIGhhcyBoaXQgYSBzbWFsbCBzbmFnLldoYXQgZXhhY3RseSB3YXMgdGhlIHBsYW4/IEkgZm9yZ2V0LkEgZmV3IG5laWdoYm9yaG9vZHMgd291bGQgdm9sdW50ZWVyIHRvIHRlc3QgdGhyZWUgbmV3IHJlY3ljbGluZyBwaWNrIHVwIHNjaGVkdWxlcy4gVGhleSB3b3VsZCBiZSBnaXZlbiBhIHNpbmdsZSBsYXJnZSBjYW4gZm9yIGFsbCByZWN5Y2xhYmxlcywgcmF0aGVyIHRoYW4gdGhlIGN1cnJlbnQgc3lzdGVtIHVuZGVyIHdoaWNoIHJlY3ljbGFibGVzIG11c3QgYmUgc29ydGVkIGludG8gdGhyZWUgZGlmZmVyZW50IGJpbnMuQXMgZm9yIHRoZSBwaWNrIHVwIHNjaGVkdWxlcywgb25lIGdyb3VwIG9mIG5laWdoYm9yaG9vZHMgd291bGQgY29udGludWUgdG8gaGF2ZSBpdHMgcmVjeWNsYWJsZXMgcGlja2VkIHVwIGV2ZXJ5IG90aGVyIHdlZWssIGFzIGlzIHRoZSBjYXNlIG5vdy4gCk1heWJlIGl0IG5vdCBqdXN0IFZpbmNlLCBtYXliZSBpdCBldmVyeSBib29rZXIgdGhhdCBraWxscyBhIGFjdCB0aGF0IGdldHMgb3ZlciBhbG1vc3QgZXhjbHVzaXZlbHkgb24gdGhlaXIgb3duLiBHZWRvIGhhcyByZWFsbHkgZG9uZSBKdWljZSB3cm9uZyB0aGUgbGFzdCAyIHllYXJzLCBraWxsZWQgYWxsIGhpcyBtb21lbnR1bSwgZm9yIGEgcHVkZ3kgam9iYmVyIGxpa2UgQ2hhc2UgT3dlbnMuIApXZSBoYWQgYSBndXkgdGhhdCB3b3VsZCBqdXN0IHB1dCB0aGUgc2xpcCBpbiBvdXIgZG93bnN0YWlycyBtYWlsYm94IHdpdGhvdXQgZXZlbiB0cnlpbmcgdG8gc2VlIGlmIHdlIHdlcmUgaG9tZS4gClNjaGxlY2h0YSBIYW5zCkFzc3VtaW5nIHlvdSBoYXZlIGEgcmVhc29uYWJsZSB0YWcgaW1hZ2UgYW5kIHlvdXIgb3Bwb25lbnQgaXMgYSB0aGlua2luZyBwbGF5ZXIgd2hvIHdvdWxkIGdpdmUgYSAzLzQgYmV0IGNyZWRpYmlsaXR5IHRoZW4gdGhleSBiZSBpbmNsaW5lZCB0byBsZXQgaXQgZ28uIEphY2tzIGlzIHRoZSB2ZXJ5IHRvcCBvZiB0aGF0IHJhbmdlIHRoYXQgY291bGQgbGV0IHRoZWlyIGhhbmQgZ28gYW5kIHllcyBJIHN1cmUgdGhlcmUgYXJlIHBsZW50eSBvZiBwbGF5ZXIgd2hvIHdvdWxkIG5vdCBsZXQgamFja3MgZ28gaXQgcmVhbGx5IGRlcGVuZGVudC4gQWxzbyBhIHBvY2tldCBwYWlyIGlzbiBjb25zaWRlcmVkIG5hcGtpbnMgYnkgYW55IHN0cmV0Y2guLiAKVGhlIG1lZGljYWwgY29tbXVuaXR5IHJlZ2FyZHMgZmFzY2lhIHByaW1hcmlseSBhcyBhIHN0cnVjdHVyZSB0aGF0IGxpbmtzIHRvZ2V0aGVyIGFsbCB0aGUgYm9uZXMsIG11c2NsZXMsIG5lcnZlcywgYmxvb2QgdmVzc2VscyBhbmQgb3JnYW5zIG9mIHRoZSBib2R5LgpCeSB0aGF0IHBvaW50IG15IGJvZHkgd2FzIHNraW5ueSBhbmQgSSB3YXMgaGF2aW5nIHRyb3VibGUga2VlcGluZyBteXNlbGYgd2FybS4gSSB3aXNoIEkgd2FzIGEgYmFjayBzbGVlcGVyIHNvIEkgY291bGQgdXNlIGEgQ0NGIHBhZC5JIGhpa2UgdGhlIGZpcnN0IDIzMCBtaWxlcyBvZiB0aGUgUENUIGluIGVhcmx5IEphbnVhcnkgYmVmb3JlIHdvcmtpbmcgZm9yIDIgbW9yZSB3ZWVrcy4gVGhlbiBkbyB0aGUgQ29uZG9yIFRyYWlsIGFuZCBnZXQgYm94ZXMgc2V0IHVwIGZvciB0aGUgQVpUL2Nvbm5lY3Rpb24gdG8gdGhlIFBDVC9QQ1QgdG8gaGlrZXIgaGVhdmVuLiAKSG91c2UgYWdlbmN5IHRhbGsgZG9taW5hdGVzIHN0YWdlIGF0IEFOQQoiV2hhdCBJcyB0aGUgRGlmZmVyZW5jZSBCZXR3ZWVuIE5ldCBSZXZlbnVlLCBOZXQgU2FsZXMsIENvc3Qgb2YgU2FsZXMgR3Jvc3MgTWFyZ2luPyJEaWZmZXJlbmNlIGluIEdyb3NzIEFubnVhbCBSZXZlbnVlIE5ldCBCdXNpbmVzcyBJbmNvbWUKVGhlIG1vc3QgcmVjZW50IHJlY29yZHMgb2YgdGhlIG9ubGluZSBnYW1ibGluZyByZXZlbnVlIGFyZSB0aGVyZSB3aXRoIGEgcHJvamVjdGVkIGZpZ3VyZSBvZiAkMTAgYmlsbGlvbiBpbmNvbWUgaW4gdGhlIGN1cnJlbnQKSSBkb24gdXNlIHRoZSBmdWxsIEphdmVsaW4gYnJvd3NlciBhcyBteSBkZWZhdWx0IGZ1bGwgYnJvd3Nlci4gCk15IG11bSByZWFsbHkgd2FudGVkIGEgc2Vjb25kIGNoaWxkIHNvIGV2ZW4ga25vd2luZyB0aGF0IHRoZSBtYXJyaWFnZSB3b3VsZG4gbGFzdCBrZXB0IHRyeWluZyBhbmQgaGFkIG1lLi4gCjE5IFNlcCAyMDE4IC4gVCBTcGxpbmVzIDMgNCBLZXlnZW4gQ3JhY2sgIC4gMS8zLiAKQ2FzaW5vIGFuZCBob3RlbCBtYWduYXRlLjE1Ni4gRGFuaWVsIE9jaCwkMy41IGJpbGxpb24sIFdoYXJ0b24uIENoYWlybWFuL0NFTyBvZiBPY2ggWmlmZiBDYXBpdGFsIE1hbmFnZW1lbnQsICJvbmUgb2YgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBoZWRnZSBmdW5kIGZpcm1zLiIyNDEuIApUaG9zZSBjb21wYW5pZXMgYmFzaWNhbGx5IHRyeSB0byBjaGFyZ2UgeW91IGFic29sdXRlbHkgYXMgbXVjaCBhcyBwb3NzaWJsZSB0byB5b3VyIGFubnVpdHkvc3RydWN0dXJlZCBzZXR0bGVtZW50IGludG8gYSBsdW1wIHN1bS4gWU9VIGhhdmUgdG8gbmVnb3RpYXRlIHdpdGggVEhFTSwgb3IgeW91IGdldCBldmVuIG1vcmUgYmFkbHkgc2NyZXdlZCB0aGFuIG5lY2Vzc2FyeS4gWW91IGNvdWxkIGxvc2UgMzAgNTAlIGF0IGxlYXN0LCBwb3NzaWJseSBtdWNoIG1vcmUsIGluIHRoZSAoSSBkb24gcmVhbGx5IGhhdmUgYSBiZXR0ZXIgd29yZCBmb3IgaXQpLgpJIHJlbWVtYmVyIHdha2luZyB1cCBhbmQgZmVlbGluZyBndWlsdHkuIExpa2UgY291bGQgSSBmYWxsIGFzbGVlcCBpbiBhIG1vbWVudCBsaWtlIHRoaXM/IHNoZSBjb250aW51ZXMuIEkgcmVhbGl6ZWQgdGhhdCBub25lIG9mIHRoaXMgd2FzIGEgZHJlYW0uIHdhcywgaW4gZmFjdCwgaGVyIHdvcnN0IG5pZ2h0bWFyZS4gMjcsIDIwMDQgcmVhZGVycyBvZiBUaGUgUHJvdmluY2UgYXdva2UgdG8gYSBjaGlsbGluZyBoZWFkbGluZTogQXQgbGVhc3QgMTIsMDAwIGRlYWQgZnJvbSB3YXZlcy4gT25lIG1pbGxpb24gaG9tZWxlc3MgYWZ0ZXIgOS4wIG1hZ25pdHVkZSBxdWFrZSBpbiBzZWEgc3Bhd25zIHdhdmVzLgpJIGRlbGliZXJhdGVseSB0cmllZCB0byBtYWtlIHRoZSB3aG9sZSB0aGluZyBmdW4gYW5kIGp1c3Qgc29ydCBvZiBhIGJ1ZGR5IGhhbmcsIGFuZCBnZXQgYSByZWNvcmQgb3V0IG9mIGl0IGFzIGEgYnlwcm9kdWN0LiBBbmQgaXQgd29ya2VkLiBMaWtlcyBpdCByb3VnaC4gCkFtZXJpY2FucyBkbyBub3Qgd2FudCB0byBiZSBhdHRhY2tlZCBieSBhIG51Y2xlYXIgd2VhcG9uLiAKSW4gb3JkZXIgZm9yIHRoZSBjb21wYW55IHRvIHN1Y2NlZWQgZXZlcnlvbmUgaGFzIHRvIGJlIHB1bGxpbmcgNjAgODAgaG91cnMuIFRoZSBjb21wYW55IGp1c3QgZG9lc24gaGF2ZSBlbm91Z2ggbW9uZXkgdG8gcGF5IGV2ZXJ5b25lLiAKQ2FsbCB1cCB0byB0aGUgdHVybiB0aGVuIGNoZWNrIHJhaXNlCkEgc3RhYmxlIGJhc2UgYW5kIGEgc21vb3RoIHN3aW5nIGhhcyBoZWxwZWQgaGltIHJlZGlzY292ZXIgdGhlIHBvd2VyLi4gCkluIHRoZSBzdW1tZXIgbXkgZ29hbCBpcyB0byBOT1QgdGFuIGF0IGFsbC4gV2VsbCwgSSBmYWlyIHNvIEkgbmV2ZXIgdGFuIGFueXdheSAgSSBqdXN0IGJ1cm4gYW5kIGdldCByZWQuIFNvIG15IGdvYWwgaXMgdG8gbm90IGJ1cm4gYW5kIGNvbnRyaWJ1dGUgdG8gYW55IGZ1cnRoZXIgc2tpbiBkYW1hZ2UhCk5FVyBERUxISTogUGF3YW4gTmVnaSBoYWQgYSBwaGVub21lbmFsIHN0YXJ0IHRvIDIwMTYsIG9ubHkgbW9zdCBvZiBoaXMgc3VjY2VzcyBjYW1lIG9mZiB0aGUgZmllbGQuIFRoZSAyMyB5ZWFyIG9sZCBsZWZ0IGFybSBzcGlubmVyIHdhcyBhIHdpbGRjYXJkIHBpY2sgaW4gdGhlIEluZGlhbiBzcXVhZCBmb3IgdGhlIFdvcmxkIFQyMCBidXQgaGUgY291bGRuIGJyZWFrIGludG8gdGhlIFhJLgpJIGhvcGUgdGhleSBrZWVwIGl0IHVwIGFuZCB0aGlzIHNob3cgZ29lcyBvbiBmb3IgYSB3aGlsZSBhdCB0aGlzIHBhY2UhCkhlbmNlLCB0aGUgdGVjdG9yaWFsIG1lbWJyYW5lIGNvbnRyaWJ1dGVzIHRvIGNvbnRyb2wgb2YgaGVhcmluZyBzZW5zaXRpdml0eSBieSBpbmZsdWVuY2luZyB0aGUgaW9uaWMgZW52aXJvbm1lbnQgYXJvdW5kIHRoZSBzdGVyZW9jaWxpYS5EcktvcnZ1cyAgMSBwb2ludCAgc3VibWl0dGVkIDE0IGhvdXJzIGFnb0kgZ2VudWluZWx5IGN1cmlvdXMgbXlzZWxmLCB1bmxlc3MgaGUgaXMgYSBwcm9mZXNzaW9uYWwgcmVkZGl0b3IgKGlzIHRoYXQgZXZlbiBhIHRoaW5nPykgSSBpbWFnaW5lIGl0IGhhcyB0byBiZSBhdCBsZWFzdCBzZW1pIGF1dG9tYXRlZC4gClRoZXJlIGFsc28gUm95YWwgRmx1c2ggaW4gQ2hhbXJhanBldCwgQW5keXogRmlzaCBDaGlwcyBpbiBJbmRpcmFuYWdhciwgQ2FyZCBSYWNrIGF0IEpheWFuYWdhciBhbmQgbWFueSBtb3JlLiBPbmUgb2YgdGhlIG5ld2VzdCBwb2tlciByb29tcywgUm9ja2V0cyBpbiBTZWhhZHJpcHVyYW0sIGhhcyBvbmUgZmxvb3IgZnVsbHkgZnVuY3Rpb25hbCB3aXRoIHNpeCB0YWJsZXMuIApJdCBjb21lcyBkb3duIHRvIHBheWluZyBhdHRlbnRpb24gdG8gdGhlIHBsYW50IHRvIHNlZSB3aGVuIGl0IG5lZWRzIHdhdGVyaW5nLCBub3QganVzdCBhIHNjaGVkdWxlLiAKVGhlIG5leHQgYmVuZWZpdCB0byBhY3F1aXJpbmcgYSBzZXQgb2YgMTAwMCBDbGF5IFBva2VyIENoaXBzIG9mZmVyZWQgYnkgSmFja3BvdCBDYXNpbm8gaXMgdGhhdCB0aGV5IGFyZSB2ZXJ5IGFwcGVhbGluZyB0byB0aGUgZXllIGJhc2VkIG9uIHRoZSBncmFwaGljcyB0aGF0IGFyZSBpbnRlZ3JhdGVkIG9udG8gdGhlIGNoaXBzLiBUaGlzIHNldCBoYXMgcXVhbGl0eSBhcnR3b3JrIG9uIGJvdGggc2lkZXMgb2YgdGhlIGNoaXAgICBub3QganVzdCBvbmUgc2lkZS4gWW91IHdpbGwgc2VlIHRoYXQgaXQgaGFzIHRoZSB3b3JkcyAiRmFidWxvdXMgTGFzIFZlZ2FzIiBwcmludGVkIG9uIHRoZW0uIEluIGFkZGl0aW9uIHRvIHRoaXMsIGlmIHlvdSBsb29rIGNhcmVmdWxseSwgeW91IHdpbGwgc2VlIHZhcmlvdXMgc2lnaHRzIHRoYXQgYXJlIGluIExhcyBWZWdhcywgYWxvbmcgd2l0aCBhIHNpZ24gb2YgdGhlIHZlcnkgcG9wdWxhciBKYWNrcG90IENhc2luby4gQnkgY2hvb3NpbmcgdGhpcyBzZXQsIHlvdSB3aWxsIGFsd2F5cyBoYXZlIGEgdGlueSBwaWVjZSBvZiBMYXMgVmVnYXMgTmV2YWRhIHRvIHlvdXJzZWxmIQpBbGwgeW91IGhhdmUgdG8gZG8gaXMgYmUgaW5jbHVzaXZlIGFuZCB1bmRlcnN0YW5kaW5nIHRvIGEgY2hpbGQuIFlvdSBjYW4gY2xhaW0gdG8gYmUgdGhlIHZpY3RpbSB3aGVuIHlvdSBvYnZpb3VzbHkgcGFydCBvZiB0aGUgcHJvYmxlbS4gWW91IEFSRU4gaGVyIG1vbSwgc28gd2h5IHJlc2VudCBhbmQgcHVuaXNoIGhlciBmb3IgcG9pbnRpbmcgb3V0IHRoZSBvYnZpb3VzPyBTdXJlLCBzaGUgbmVlZHMgdG8gZm9sbG93IGNlcnRhaW4gcnVsZXMgYW5kIGFkaGVyZSB0byBhIG1vZGljdW0gb2YgcmVzcGVjdCB3aGlsZSB1bmRlciB5b3VyIHJvb2YsIGJ1dCB5b3UgY2FuIGdldCB1cHNldCB0aGF0IHNoZSBkb2VzbiBzZWUvcmVzcGVjdCB5b3UgYXMgYSBtb3RoZXIgd2hlbiB5b3UgYWxyZWFkeSBhZG1pdHRlZCB0aGF0IHlvdSBzaG93IGJsYXRhbnQgZmF2b3JpdGlzbSB0byB5b3VyIGJpbyBraWRzLiAKIldlIGhhdmUgYWJvdXQgc2l4IHBsYXF1ZXMgdGhhdCB3ZSB3aWxsIGFsc28gZ2l2ZSBhd2F5IGZvciB0aGluZ3MgbGlrZSB0aGUgYmVzdCBiaWtlIG9yIHRoZSBvbGRlc3QgYmlrZS4iIEZhaXJmYXggaGFzIGNvbXBpbGVkIG1vcmUgdGhhbjEwMDAgRmFjZXMgb2YgQW56YWNzZnJvbSB5b3UsIG91ciByZWFkZXJzLCBhcyBhIHRyaWJ1dGUgdG8gdGhlIG1lbiBhbmQgd29tZW4gd2hvIHNlcnZlZCBvdXIgY291bnRyeSBpbiB0aGUgbmFtZSBvZiBmcmVlZG9tLiBZb3UgY2FuIHJlYWQgdGhlaXIgc3RvcmllcyBhdCB0aGUgbGluayBhYm92ZS4gTXIgRWxsaXMgc2FpZCB0aGUgZXZlbnQgaGFkIGJlZW4gc3VjaCBhIGdyZWF0IHN1Y2Nlc3MgYmVjYXVzZSBtYW55IHBlb3BsZSByZWNvZ25pc2VkIHRoZSBtb25leSByYWlzZWQgd2VudCB0byBhIGxvY2FsIGNhdXNlLiAKQWxzbywga2VlcCBpbiBtaW5kIChhbmQgc2VlIHRoZSBzaWRlYmFyKSB0aGF0IHdlIG5vdCBqdXN0IGZvciBjcmVlcHkgUE1zLiBBbmQgdGhhdCBtYW55IG1lbiBvbiByZWRkaXQgZGVmaW5lICJjcmVlcHkiIGluIGEgdmVyeSBuYXJyb3cgd2F5ICBhbHNvIHNlZSB0aGUgZGVmaW5pdGlvbiBpbiB0aGUgc2lkZWJhci4gVXNlcnMgZGVjaWRlIHdoYXQgYmVsb25ncyBvciBkb2VzbiBiYXNlZCBvbiB1cHZvdGVzIGFuZCBkb3dudm90ZXMuIApUbyBwbGF5IHBva2VyIGZvciBmcmVlIG9ubGluZSBpcyBvbmUgb2YgdGhlIGVhc2llc3QgYW5kIGluY3JlYXNpbmdseSBwb3B1bGFyIHdheXMgdG8gbGVhcm4gdGhlIGdhbWUsIGVzcGVjaWFsbHkgVGV4YXMgTm8gTGltaXQgSG9sZCdFbS4gVmlydHVhbGx5IGFsbCBvbmxpbmUgcG9rZXIgcm9vbXMgd2lsbCBsZXQgcGxheWVycyBjb21lIGluIGF0IG5vIGNvc3QgYmVjYXVzZSB0aGV5IHdvdWxkIGxvdmUgdG8gaGF2ZSB5b3UgYXMgYSByZWFsIG1vbmV5IHBsYXllciBpbiB0aGUgZnV0dXJlLiAKSSBhZnJhaWQgdGhhdCBJIGxvc2luZyBteSBhYmlsaXR5IHRvIHRoaW5rIGNyaXRpY2FsbHkuIEkgc2lnbiB1cCBmb3IgYWxsIHRoZXNlIHJpZ2h0IHdpbmcgZW1haWwgbGlzdHMgKHBhcnQgb2YgbXkgam9iIGFzIHNvY2lhbCBjcml0aWMpLCBidXQgdG9kYXkgbWlzc2l2ZSBmcm9tIEFubiBDb3VsdGVyIGFjdHVhbGx5IG1hZGUgc2Vuc2UuIGhhbGYgb2YgaXQgZGlkLiB0aGF0IG1lYW4gSSBub3cgaGFsZiBzdHVwaWQ/IGJ1dCBsaXN0ZW4gdG8gd2hhdCB0aGUgQ291bHRlcm5hdG9yIGlzIHNheWluZzoiU29tZWhvdyB3ZSBqdXN0IG1pc3NlZCB0aGF0IGhvbWUgcHJpY2VzIGRvbiBnbyB1cCBmb3JldmVyLiIKU28gaXQgb25seSBjb3N0IG1lICQyMzAuIEkgb25seSBsYXN0ZWQgMjggbWludXRlcyAhIFNvbWUgcGxheWVycyB3ZXJlIHN0aWxsIHNpZ25lZCB1cCBhbmQgaGFkbid0IGV2ZW4gc2F0IGRvd24uIApJIGZvdW5kIHRoaXMgZmFudGFzdGljIHBob3RvZ3JhcGggb2YgdGhlIGF0dGVuZGVlcyBvZiB0aGUgbWVldGluZyBvZiB0aGUgQXN0cm9ub21pc2NoZSBHZXNlbGxzY2hhZnQgYXQgSGFtYnVyZywgQXVndXN0IDE5MTMgaW4gdGhlIERlY2VtYmVyIGlzc3VlIDE5MTMgaXNzdWUgb2YgUG9wdWxhciBBc3Ryb25vbXkuIFRoaXMgaXMgYW4gYXVndXN0IGdyb3VwLCBhbmQgb2YgY291cnNlIHRoZXkgbm90ICJibGFuayIgb3IgIm1pc3NpbmciIGl0cyBqdXN0IGEgZnVuY3Rpb24gb2Ygc29tZSBvdXQgb2YgY29udGV4dCBvYnNlcnZhdGlvbnMgb24gdGhlIG9wYXF1ZSBvdmVybGF5IHRoYXQgc2VydmVzIHRvIGlkZW50aWZ5IGFsbCBvZiB0aGUgZm9sa3MgaW4gdGhlIG1hc3NpdmUgZ3JvdXAgcGhvdG8uIChJIGVuY291bnRlcmVkIHRoZXNlIG51bWVyb3VzIHRpbWVzIG92ZXIgdGhlIHllYXJzIGFuZCBhbHdheXMgaGF2ZSBmb3VuZCB0aGUgRm91bmQgQXJ0IGFzcGVjdCBvZiB0aGVtIGludGVyZXN0aW5nIGFuZCBhbXVzaW5nLikgVGhlIGZhY3Qgb2YgdGhlIG1hdHRlciwgdGhvdWdoLCBpcyB0aGF0IHRoZXJlIHdlcmUgc29tZSB2ZXJ5IGhpZ2ggcG93ZXJlZCBwZW9wbGUgYXQgdGhpcyBtZWV0aW5nLiAKRURJVDogU2luY2UgZm9sa3MgYXJlIGN1cmlvdXMgICB5ZXMgaGUgaXMgc3RpbGwgYWxpdmUgYnV0IHRoZXkgZGlkbiBnaXZlIGhpbSBtdWNoIHRpbWUgbGVmdCwgdGhleSBtYW5hZ2VkIHRvIHRyZWF0IHRoZSB3b3VuZCBidXQgdGhlIGNhbmNlcnMgc3ByZWFkIGludG8gaGlzIG9yZ2FucyBhbmQgYm9uZXMuIApOYWIgdGhpcyBuZXdlc3QgYWxidW0gZnJvbSBpVHVuZXMhIDE1KSBSZXRybyBEYW5jZSBGcmVhayAuIENhbiBiZSBmb3VuZCBvbiAiVGhlIEZhbWUuIiBBc2lhbiBjb3VudHJ5IGJvbnVzIHNvbmdzLiAxNiAxOCkgUG9rZXIgRmFjZS9KdXN0IERhbmNlLyBFaCwgRWggKE5vdGhpbmcgRWxzZSBJIENhbiBTYXkpIGZyb20gIlRoZSBDaGVycnkgVHJlZSBTZXNzaW9ucyIgZnJvbSBpVHVuZXMuIApIZSBhcnJpdmVkIHdpdGggYSBjYW5lIGFuZCBzZWF0ZWQgaW4gYSB3aGVlbGNoYWlyIHRvIG91ciBpbnRlcnZpZXcgZHVyaW5nIERyYWdvbiBDb24gMjAxOC4gCk1pc2V6IGF2ZWMgcHJjYXV0aW9uLiBMb3JzcXVlIHZvdXMgYXBwcmVuZXogIGpvdWVyLCBwcnZveWV6IHVuZSBzb21tZSB0b3RhbGUgcXVlIHZvdXMgYWNjZXB0ZXogZGUgcGVyZHJlIGV0IG5lIG1pc2V6IHBhcyBhdSBkZWwuIE4nZXNzYXlleiBwYXMgZCdlbmNocmlyIHBvdXIgdm91cyByYXR0cmFwZXIgdW5lIGZvaXMgcXVlIHZvdXMgYXZleiBwZXJkdSB0b3V0IGNlIHF1ZSB2b3VzIGF2aWV6IHBydnUgZGUgbWlzZXIuIEF0dGVuZGV6IGRlIHBvdXZvaXIgcGVyZHJlIGNldHRlIHNvbW1lICBub3V2ZWF1IHNhbnMgcXVlIGNlbGEgc29pdCBwcm9ibG1hdGlxdWUgcG91ciBwb3V2b2lyIGpvdWVyIGVuIHZvdXMgYW11c2FudC4KIlNvY2NlciB3YXNuJ3QgYmlnLiBEYXZpZCBCZWNraGFtIGNhbWUgb3ZlciBoZXJlIGFuZCBzdWRkZW5seSB0aGUgc3BvcnQgaXMgc3RhcnRpbmcgdG8gZ3JvdywiIFdhcm5lIHRvbGQgcmVwb3J0ZXJzIGF0IGEgaG90ZWwgaW4gVGltZXMgU3F1YXJlIGFoZWFkIG9mIHRoZSBmaXJzdCBBbGwgU3RhcnMgZ2FtZSBvbiBTYXR1cmRheS4KQSBsb3Qgb2YgQnJvd25zIGZhbnMgcm9vdGVkIGZvciB0aGUgU3RlZWxlcnMsIGJlbGlldmUgaXQgb3Igbm90LiBUaGVyZSB3YXMgYSBsb3Qgb2YgYnJvdGhlcmhvb2QgdGFraW5nIHBsYWNlIGJhY2sgdGhlbiwgdGhleSAoU3RlZWxlcnMgZmFucykgd2VyZSBhbHNvIHByb3Rlc3Rpbmcgd2l0aCB1cyBhZ2FpbnN0IHRoZSBtb3ZlLiBJdCBoZWxwcyB0aGF0IFJvb25leSAoc3RlZWxlcnMgb3duZXIpIHdhcyBvbmUgb2YgMiBvd25lcnMgd2hvIHZvdGVkIGFnYWluc3QgdGhlIG1vdmUgKEJpbGxzIGJlaW5nIHRoZSBvdGhlciB0ZWFtKS4gClRocm93IGhpbSBvdXQgb2YgdGhlIG5lc3QuIEJlIHNpbmdsZSBmb3IgYSB3aGlsZS4gVGVsbCBoaW0gaXQncyBmb3IgaGlzIG93biBnb29kIGFuZCB5b3VycyAgYmVjYXVzZSB0aGF0J3MgdGhlIHRydXRoLiAKQnJ1bnNvbiwgYSAzNSB5ZWFyIG9sZCBBbWVyaWNhbiwgaXMgOSA1IDAgaW4gdGhlIFVGQy4KTGl2ZSBpbiBwbGF5IGJldHRpbmcgaXMgdmVyeSBpbXBvcnRhbnQgc2luY2UgaXQgaXMgY29uc2lkZXJlZCBhcyB0aGUgZnV0dXJlIG9mIG9ubGluZSBzcG9ydHMgYmV0dGluZy4gCllvdXIgYm9keSB0aGVuIGRvZXNuIG5lZWQgc28gbXVjaCBjaG9sZXN0ZXJvbCBjb3Vyc2luZyB0aHJvdWdoIHlvdXIgdmVpbnMgdG8gcmVwYWlyIHRoZSBkYW1hZ2UgZnJvbSB0aGUgaW5mbGFtbWF0aW9uLiBTbyBhbHRob3VnaCB5b3UgYXJlIGVhdGluZyBtb3JlIGNob2xlc3Rlcm9sLCB5b3VyIGJvZHkgaXMganVzdCBwcm9jZXNzaW5nIGl0IGZvciBlbmVyZ3kgYW5kIG9ubHkgbWFraW5nIHRoZSBuZWNlc3NhcnkgbGV2ZWxzIGZvciB0eXBpY2FsIGJvZHkgcmVwYWlyL3Byb2Nlc3NlcyByYXRoZXIgdGhhbiBkYW1hZ2UgY29udHJvbCBmcm9tIGluZmxhbW1hdGlvbi4gCkhlIHJlY2VudGx5IHRyYXZlbGxlZCB0byBMdW9uZ28gRmxvcmlkYSBob21lIGFuZCBhcHBhcmVudGx5IGhhc2hlZCBpdCBvdXQgd2l0aCB0aGUgZm9ybWVyIGNhcHRhaW4uLiAKQm9iYSBzbWlsZXMgZXhwZWN0YW50bHkuIApPdGhlcnMgc2F5IGl0J3MgaGFyZCB0byB0ZWxsLjMgd2Vla3MgYWdvICsgQnkgUm94YW5uZSBXYXNoaW5ndG9uLCBUaGUgUGxhaW4gRGVhbGVyQmFrZXIgTWF5ZmllbGQgdGVhbXMgdXAgd2l0aCBXaGVyZSBJJ20gRnJvbSBvbiBleGNsdXNpdmUgbGluZSBvZiBvZmZpY2lhbGx5IGxpY2Vuc2VkIGFwcGFyZWwgQmFrZXIgTWF5ZmllbGQgdGVhbXMgdXAgd2l0aCBXaGVyZSBJJ20gRnJvbSBvbiBleGNsdXNpdmUgbGluZSBvZiBvZmZpY2lhbGx5IGxpY2Vuc2VkIGFwcGFyZWwgV2hlcmUgSSdtIEZyb20sIHdoaWNoIGhhcyBzdG9yZXMgYXQgU291dGhwYXJrIE1hbGwsIEJlYWNod29vZCBQbGFjZSwgR3JlYXQgTGFrZXMgTWFsbCBhbmQgQmVsZGVuIFZpbGxhZ2UsIGlzIHRoZSBvbmx5IGxvY2FsIHJldGFpbGVyIHNlbGxpbmcgbWVyY2hhbmRpc2UgZW5kb3JzZWQgYnkgdGhlIEJyb3ducyBxdWFydGVyYmFjay4gCk5vLiAzIFNlbmF0ZSBHT1AgbGVhZGVyIEpvaG4gVGh1bmUgb2YgU291dGggRGFrb3RhIHNhaWQsICJUaGUgaWRlYSB0aGF0IHRoZXkgc2hvdWxkIHRydW5jYXRlIGl0IGRvZXNuJ3QgbWFrZSBzZW5zZSB0byBtZS4iIERlbW9jcmF0aWMgU2VuLiAKVGhleSB3ZXJlIHdyb25nIHRvIGlzc3VlIHRoZSBvcmRlcnMsIHRvIGZvbGxvdyB0aGUgb3JkZXJzLCBhbmQgYXJlIHdyb25nIHRvIG5vdCB0YWtlIHJlc3BvbnNpYmlsaXR5IGZvciB0aGUgdG9ydHVyZSBub3cuLiAKQW0gSSB0aGUgb25seSBvbmUgd2hvIHRoaW5rcyB0aGUgZmxvb3IgZ290IHRoZSBzdHJpbmcgYmV0IHJ1bGluZyBjb21wbGV0ZWx5IHdyb25nPyBJZiB0aGVyZSBydWxpbmcgaXMgY29ycmVjdCwgdGhlbiB0aGlzIGRlZmluYXRlbHkgYWxsb3dzIGZvciBleHBsb2l0cy4gRm9yIGluc3RhbmNlLCBpZiBJIGhhdmUgYSBzdGFjayBvZiBsYXJnZSBkZW5vbWluYXRpb24gY2hpcHMsIEkgZ3JhYiB0aGUgd2hvbGUgc3RhY2ssIHBsYWNlIGl0IHBhc3QgdGhlIChpbnZpc2libGUpIGJldHRpbmcgbGluZSwgYW5kIHdpdGhvdXQgbGV0dGluZyBnbyBvZiB0aGUgc3RhY2sgSSBjYW4gdGhlbiBkZWNpZGUgaG93IG1hbnkgY2hpcHMgSSB3YW50IHRvIGxldCBnbyBvZiwgYW5kIGhvdyBtYW55IGNoaXBzIEkgd2FudCB0byB0YWtlIGJhY2suIExldCBzYXkgdGhlcmUgaXMgYSBwb3Qgd2l0aCAkMjAwIGluIGl0LCBJIGNvdWxkIGdyYWIgYSBzdGFjayBvZiAyMCAkMTAwIGNoaXBzLCBtb3ZlIHRoZW0gZm9yd2FyZCwgYW5kIG9ubHkgZHJvcCB0d28gb2YgdGhlbSwgYW5kIHB1bGwgdGhlIHJlc3QgYmFjay4gCjMpIERhbmllbGE6IDE4MDUgMjAzNSwgMjUwRS8yLjVoIDIwRSBmb3IgdW5zdWNjZXNzZnVsIENJTSwgdGhlIGZpcnN0IHRpbWUgaW4gdGhlIHBhc3Qgc2l4IG1vbnRocy4gSW4gYSByb29tIHdlIGVuam95ZWQgREZLIHdoaWNoIEkgZGlkbid0IHJlY2VpdmVkIGZvciBmcmVlIGJlZm9yZSwgY2FyZXNzaW5nLCA0MCBtaW4gREFUWSB3aXRoIGhlciBPLCAyMCBtaW4gZmluZ2VyaW5nIERBVFkgd2hpY2ggSSB3YXNuJ3QgYWxsb3dlZCB0byBiZWZvcmUsIG15IDIwIG1pbiBtYXNzYWdlIG9uIGhlciwgQkJCSiwgY293IGdpcmwsIDIwIG1pbiBtaXNzaW9uYXJ5IHdpdGggaGVyIHNlY29uZCBPLCAxMCBtaW4gREFUWSwgcGlsbG93IHRhbGsgYW5kIGhlciAyMCBtaW4gdW5zdWNjZXNzZnVsIENJTS4gTXVzdCByZXBlYXQuCkkgd2luIGEgaGFuZCB3aXRoIHRoZSBudXRzIHdpdGhvdXQgc2hvd2Rvd24sIHRoZW4gd2luIG9uIGEgYmx1ZmYgd2l0aG91dCBzaG93ZG93bi4gSSAoaG9sZGluZyB0aGUga2luZyBvZiBjbHVicyBidXQgbm8gb3RoZXIgY2x1YnMpIGZsb2F0ZWQgdGhlIGZsb3AgSVAsIHJhaXNlZCB0aGUgdHVybiB3aGljaCBjb21wbGV0ZWQgYSBjbHViIGZsdXNoLCBhbmQgYmxhc3RlZCB0aGUgcml2ZXIgYW5kIGhlIGZvbGRlZCB0aGUgdGVuIGhpZ2ggZmx1c2ggZmFjZSB1cC4gSSdtIG5vdyBwbGF5aW5nIDYwMCBhbmQgZG91YmxlIHVwIHdoZW4gdGhlcmUncyBhIHByZWZsb3AgcmFpc2UgYW5kIEkgM2JldCB0aGUgcG90IHdpdGggQUFLSnh4IGFuZCBnZXQgb25lIGNhbGxlci4gSGUgaXMgZmlyc3QgdG8gYWN0IHBvc3RmbG9wIGFuZCBqYW1zIHRoZSBmbG9wIGludG8gbWUgYW5kIEkgc25hcCBjYWxsIHdpdGggdG9wIHNldCBvZiBhY2VzIGFuZCB0aGUgbnV0IGZsdXNoIGRyYXcgYWxvbmcgd2l0aCBhIGd1dHRlciB0byB0aGUgbnV0cy4gTWFkZSBteSBmbHVzaCBvbiB0aGUgZmlyc3QgYm9hcmQgYW5kIHF1YWRzIG9uIHRoZSBzZWNvbmQgZm9yIHRoZSBudXRzIG9uIGJvdGggYm9hcmRzIGFuZCBzaG9ydGx5IGFmdGVyd2FyZHMgSSBjYXNoIG91dCBteSBwb2tlciBzdGFjayBhbG9uZyB3aXRoIHRoZSBjaGlwcyBJIHBvY2tldGVkIGZyb20gYmxhY2tqYWNrLiBUaGUgbGFkeSBiZWhpbmQgdGhlIGNvdW50ZXIgYW5ub3VuY2VzIDE1NTQuNTAuCkR1ZSB0byB0aGUgc3BlZWQgb2YgbW92ZW1lbnQsIGdlbmVyYWwgbWFwIGRlc2lnbiAobG90cyBvZiBjb3JuZXJzL2NvdmVyKSBQbGF5aW5nIGF0IGFueSByYW5nZSBiZXlvbmQgMTAwbSBpcyBhbG1vc3QgdXNlbGVzcy9mdXRpbGUuClBhZGRvY2sgcmVtYWlucyBhIGNpcGhlci4gQnV0IGRldGFpbHMgdGhhdCBoYXZlIHN1cmZhY2VkIHNvIGZhciBhYm91dCB0aGlzIG11cmRlcmVyIGEgb25lIHRpbWUgSVJTIGFnZW50LCBhIGJveWZyaWVuZCByZWNhbGxlZCBhcyBib3RoIGNhcmluZyBhbmQgY2F1c3RpYywgc29uIG9mIGEgbm90b3Jpb3VzIGJhbmsgcm9iYmVyIGFyZSBjbHVlcywgYXQgbGVhc3QsIHRvIGhpcyBtaW5kc2V0LiBVbmxpa2UgbW9zdCBtYXNzIHNob290ZXJzLCB3aG8gYXJlIHVzdWFsbHkgeW91bmdlciwgaGUgd2FzIHRoZSBwcm9kdWN0IG9mIGRlY2FkZXMgb2YgZXhwZXJpZW5jZSBhbmQgcnVtaW5hdGlvbi4uIApUaGUgYWlyaG9zdGVzcyBvZmZlcmVkIG1hbnkgYW5ub3RhdGlvbnMgdG8gdGhlIGJvb2sgSSB3YXMgcmVhZGluZyBhbmQgdXJnZWQgbWUgdG8gJ2xlYXZlIGV2ZXJ5dGhpbmcgYW5kIGZpbmQgZnVuIGluIGZvcnR1bmUnLiAKViBIZSB3YXMgcnVzaGVkIHRvIENvbm5lYXV0LCBPaGlvLCBIb3NwaXRhbDsganVzdCBvdmVyIHRoZSBib3JkZXIuIFdoZW4gaGUgZGllZCB0aHJlZSBfIGRheXMgbGF0ZXIsIG9uIGhpcyAxMnRoIGJpcnRoICBhIGdlbmVyYWwgcHJhY3RpdGlvbmVyIHRlbGVwaG9uZWQgQ2xldmVsYW5kIENsaW5pYyB0byBub3RpZnkgZG9jdG9ycywgdGhlIGtpZG5leXMgd2VyZSBhdmFpbGFibGUuLCBfLiBEci4gQnJ1Y2UnU3Rld2FydCBhbmQndHdvIGkgaW50ZXJucyBzcGVkIHRoZSA2MCBtaWxlcyB0byBDb25uZWF1dCB0byByZW1vdmUgdGhlJyBraWQgIGFuZCwgd2l0aCcgYSBwb2xpY2UgZXNjb3J0IGogcmV0dXJuZWQgdG92dGhlLiAKT24gYSBtb3JlIHBlcnNvbmFsIGxldmVsLCBiaW9zIHdpdGggYmlibGUgcXVvdGVzLCBzb25nIGx5cmljcyBvciAiREovRU5UUkVQUkVORVVSIi4gUGhvdG9zIGhvbGRpbmcgYSBmaXNoIG9yIGluIGh1bnRpbmcgZ2Vhci4gClBvdXIgcmF3IGVnZyB5b2xrLiBFZ2cgeW9sayBjb250YWlucyBwcm90ZWlucyBhbmQgbnV0cmllbnRzIHRoYXQgaGVscCBoZWFsIHdvdW5kcy4gCkFmdGVyIGFsbCBiZXR0aW5nIGlzIGNvbXBsZXRlZCwgYSBmb3VydGggY2FyZCBpcyBkZWFsdCBmYWNlIHVwIHRvIGVhY2ggcGxheWVyIHdobyBoYXMgbm90IGZvbGRlZC4gRnJvbSB0aGlzIHBvaW50IG9uLCB0aGUgcGxheWVyIHdpdGggdGhlIGhpZ2hlc3QgaGFuZCBzaG93aW5nIHN0YXJ0cyB0aGUgYWN0aW9uLiBGb3IgZXhhbXBsZSwgaWYgdGhlIGhpZ2ggaGFuZCAoZXhjbHVkaW5nIHRoZSBob2xlIGNhcmRzKSBpcyBhIHBhaXIgYWZ0ZXIgdGhlIGZvdXJ0aCBjYXJkIGlzIGRlYWx0LCB0aGUgcGxheWVyIHdpdGggdGhpcyBwYWlyIG11c3QgY2hlY2sgKHRvIGRlY2xpbmUgdG8gYmV0IG9yIHRvIHBhc3Mgd2hlbiBpdCBpcyB5b3VyIHR1cm4gdG8gYWN0KSwgYmV0LCBvciBmb2xkLiAKQXJlIHRpcmVzb21lIHRvIHRoZSBleHRyZW1lLiAKQW5kIGlmIHRoZSB3aG9sZSBpZGVhIHRoYXQgeW91IGFjY2VwdGVkIEplc3VzIGFzIGxvcmQgYW5kIHNhdmlvciBpcyB0aGUgdGhpbmcgdG8gZ2V0IGludG8gaGVhdmVuLCB0aGVuIGEgQ2hyaXN0aWFuIHRoYXQgY29tbWl0cyBzdWljaWRlLCBqdXN0IGNvbW1pdHRlZCBvbmUgYWN0IG9mIHNpbi4gQnV0IHRoZW4gdGhhdCdzIGFuIGF1dG9tYXRpYyB0aWNrZXQgdG8gaGVsbD8gRm9yIG9uZSAibWlzdGFrZSIuIFNvIHRoZW4gZG9lc24ndCB0aGF0IG1lYW4gdGVjaG5pY2FsbHkgYWxsIHBlb3BsZSBvbiBlYXJ0aCB3aWxsIGdvIHRvIGhlbGwuPy4gCkkgbG92ZSB3cml0aW5nIHNvbmdzLiAKVG9kYXkgaXMgdGhlIGFubml2ZXJzYXJ5IG9mIG15IG1vbSdzIGRlYXRoLiBJdCdzIGJlZW4gMTkgeWVhcnMgc28gSSdtIGdlbmVyYWxseSBvayB3aGVuIHRoaXMgZGF5IGNvbWVzIGV2ZXJ5IHllYXIsIGJ1dCB0aGlzIHllYXIgaXQncyBoaXR0aW5nIG1lIGhhcmRlci4gClBhdGVsIGNsaW5pYyBjaGFyZ2VzIGFib3V0ICQxNSwwMDAgdG8gJDIwLDAwMCBmb3IgdGhlIGVudGlyZSBwcm9jZXNzLCBmcm9tIGluIHZpdHJvIGZlcnRpbGl6YXRpb24gdG8gZGVsaXZlcnksIHdoZXJlYXMgaW4gdGhlIGhhbmRmdWwgb2YgQW1lcmljYW4gc3RhdGVzIHRoYXQgYWxsb3cgcGFpZCBzdXJyb2dhY3ksIGJyaW5naW5nIGEgY2hpbGQgdG8gdGVybSBjb3N0cyBiZXR3ZWVuICQ1MCwwMDAgYW5kICQxMDAsMDAwLiAKSWYgSSBjYW4gc3RvcCB0YWtpbmcgdGhlIGF0dGFja3MgcGVyc29uYWxseSBhY2NlcHQgdGhhdCBpdCBkb2Vzbid0IG1hdHRlciB3aG8gaXQgaXMsIGlmIGhlJ3MgY2hhbGxlbmdlZCBoZSB3aWxsIGdvIG9uIHRoZSBhdHRhY2suIApUaGUgQmVzdCBHdWlkZSB0byBPcmdhbnppbmcgWW91ciBPd24gUG9rZXIgSG9tZSBHYW1lc1RoaXMgYXJ0aWNsZSBpcyBpbnRlbmRlZCBhcyBhICdob3cgdG8nIGd1aWRlIGZvciBhbnlvbmUgaW50ZXJlc3RlZCBpbiBvcmdhbml6aW5nIHBva2VyIGhvbWUgZ2FtZXMuIEl0IHByb21vdGVzIHBva2VyIGFzIGEgc29jaWFibHkgZW5qb3lhYmxlIGdhbWUgb2Ygc2tpbGwuIEluIGFjY29yZGFuY2Ugd2l0aCBIdWJwYWdlcyBwb2xpY3ksIGl0IGRvZXMgbm90IHByb21vdGUgdGhlIGFjdCBvZiBnYW1ibGluZy4KMSBwb2ludCAgc3VibWl0dGVkIDI1IGRheXMgYWdvLiAKMykgTGluOiAxNzI1IDE4MjUsIDEwMEUsIEtlbnlhbiBiYXNlZCBpbiBCZXJsaW4gYXMgdHJhbnNsYXRvciwgMzF5bywgMTYxY20sIHR3byB3ZWVrcyBhdCBTaGFya3MuIEluIGEgcm9vbSA1IG1pbiBjYXJlc3NpbmcsIDEwIG1pbiBEQVRZIHdpdGggaGVyIGJpZyBPLCAxNSBtaW4gdW5zdWNjZXNzZnVsIERBVFksIGhlciB0b2lsZXR0ZSBicmVhaywgMyBtaW4gZXhjZWxsZW50IGFuZCB3YXRlcnkgQkosIDMgbWluIGNvd2dpcmwsIDEyIG1pbiBtaXNzaW9uYXJ5IGFuZCAyIG1pbiBkb2dnaWUuIApQcm9jZWVkcyBmcm9tIHRoZSBldmVudCB3ZXJlIGdpdmVuIHRvIHRoZSBBbGFiYW1hIEx5bWUgRGlzZWFzZSBBc3NvY2lhdGlvbi4KV2UgYXJlIGNhcnJ5aW5nIGFsbCBvZiBvdXIgc3RyZXNzIGJldHdlZW4gb3IgYXJvdW5kIG91ciBleWVzLiBPYnNlcnZlIHlvdXJzZWxmIGluIHRoZSBtaXJyb3IuIFRyeSBsaWZ0aW5nIHlvdXIgZXllYnJvd3MgZXZlciBzbyBzbGlnaHRseSBhbmQgcmVsYXhpbmcgeW91ciBleWVsaWRzIHNsaWdodGx5LiAKQ291bnRsZXNzIGluZGl2aWR1YWxzIGhhdmUgc3Bva2VuIG91dCBhZ2FpbnN0IHRoYXQgd2F5IG9mIGxpZmUgdGhyb3VnaG91dCByZWNvcmRlZCBoaXN0b3J5LiBJdCdzIGp1c3QgaGFyZCB0byBrZWVwIHVwIHRoZSBpZGVhIGlmIGV2ZXJ5b25lIGlzIGtpbGxlZCwgZGllcyBmcm9tIGRpc2Vhc2UgYW5kIG90aGVycyB0b29rIHRoZWlyIHBsYWNlcyB0aGUgd29ybGQgb3ZlciwgYmVpbmcgdGF1Z2h0IHRoYXQgYmVjYXVzZSBzb21lIGludGVsbGlnZW50IHBlb3BsZSBpbiB0aGUgcGFzdCB3ZXJlIGFibGUgdG8gbGV2ZXJhZ2UgdGhlaXIga25vd2xlZGdlIG9mIHJlc291cmNlcyBhbmQgdGVjaG5vbG9neSB0byBjb25xdWVyIGFueSB2b2ljZXMgb2YgcmVhc29uLCB0aGUgY3VsdHVyZXMgYW5kICd3YXkgb2YgbGlmZScgb2YgdGhlIGNvbnF1ZXJlcnMgbXVzdCBiZSBzdXBlcmlvciBpbiBhbGwgYXNwZWN0cy4uIApCZWNhdXNlIG9mIHRoYXQsIGEgMjEgeWVhciBvbGQgY291bGQgZ2FpbiBtb3JlIGV4cGVyaWVuY2UgaW4gb25lIHllYXIgdGhhbiBzb21lb25lIHdobyBoYXMgYmVlbiBwbGF5aW5nIGxpdmUgZm9yIDI1IHllYXJzLiAKVG9kYXksIGl0IGlzIHBvc3NpYmxlIGZvciBwcmFjdGljYWxseSBldmVyeSBjaXRpemVuIHdpbGxpbmcgdG8gc3BlbmQgYSBsaXR0bGUgbW9uZXkgdG8gcmVzcG9uZCBkaXJlY3RseSBhbmQgYWxtb3N0IGluc3RhbnRseSB0byB3b3JsZCBlbWVyZ2VuY2llcyBzaW1wbHkgYnkgc2l0dGluZyBkb3duIGF0IGEgY29tcHV0ZXIgb3IgcGlja2luZyB1cCBhIGNlbGxwaG9uZS4uIApUaGUgZ3JlYXRlc3QgY2F1c2Ugb2YgZmFpbHVyZSBvZiBub24gbWVkaWNhbCBhcHByb2FjaGVzIGlzIG5vbiBhZGhlcmVuY2UgdG8gcHJvcG9zZWQgdHJldG1lbnQuCkFsbCBJIGRvIGlzIHB1dCBteSBibGlua2VyIG9uIGFuZCBtb3ZlIHRvIHRoZSBsZWZ0IHNpZGUgb2YgbXkgbGFuZSwgdGhlIGNvbXB1dGVyIGRvZXMgdGhlIHJlc3QuIApNT05UUkVBTCBBcyBhIHNjYW5kYWwgc3Vycm91bmRpbmcgU05DIExhdmFsaW4gR3JvdXAgSW5jLiBsb2JieWluZyBlZmZvcnRzIHRvIGF2b2lkIGNyaW1pbmFsIGNoYXJnZXMgY29udGludWVzIHRvIHBsYWd1ZSB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50LCBpdCByZW1haW5zIHVuY2xlYXIgZXhhY3RseSB3aGF0IGEgY29udmljdGlvbiB3b3VsZCBtZWFuIGZvciB0aGUgY29tcGFueS4KVXN1YWxseSBpdCBkb2VzbiBnbyBwYXN0IHN0ZXAgb25lLCBkZXBlbmRpbmcgb24gdGhlIGJ1c2luZXNzLCBidXQgbG9zcyBvZiBhYmlsaXR5IHRvIHV0aWxpemUgYSBjb21wYW55IGxpa2UgVWJlciBjb3VsZCBiZSB1bmRlc2lyYWJsZS4uIApQb2tlciBwbGF5ZXJzIHBhcnRpY2lwYXRlIGluIG51bWVyb3VzIGNoYXJpdHkgdG91cm5hbWVudHMgdGhyb3VnaG91dCB0aGUgeWVhciwgYnV0IHRoZXJlIGFyZSBmZXcgdGhleSBsb29rIGZvcndhcmQgdG8gYXMgbXVjaCBhcyB0aGUgVGlnZXIgSmFtLgpBY2NvcmRpbmcgdG8gUmljaGFyZHMsIENvc21vcG9saXRhbnMgYW5kIHR3aXN0cyBvbiB0aGUgY2xhc3NpYyBDb3NtbyBhcmUgYmlnIHNlbGxlcnMgYXQgaGVyIExhcyBWZWdhcyBiYXJzLgpGaW5kIG91dCBtb3JlIGFib3V0IHRoZSBQbGF5aW5nIENhcmQgU2h1ZmZsZXIgYW5kIHNlZSBpZiB0aGV5IGFyZSByaWdodCBmb3IgeW91IGF0IHRoaXMgdGltZS4gTGVhcm4gbW9yZSBhYm91dCB0aGUgUGxheWluZyBDYXJkIFNodWZmbGVyIGFuZCBlbmpveSB0aGUgYXJ0aWNsZS4KIldoZXJlIGFyZSB5b3UgY29taW5nIGZyb20gdG9uaWdodCwgbWEnYW0/IiB0aGUgb2ZmaWNlciBhc2tlZC4gV2hlcmUgYW0gSSBjb21pbmcgZnJvbT8gR29vZCBHb2QsIEknbSBjb21pbmcgZnJvbSBhIHN3aW5nZXJzIGNsdWIuIERvIEkgaGF2ZSB0byB0ZWxsIGhpbSB0aGlzPyBTaG91bGQgSSBsaWUgYW5kIHNheSBzb21ldGhpbmcgZWxzZT8KQWxsIGF2YWlsYWJsZSBvbnlvdXR1YmUuIApTdGVyb2lkcyBoYXZlIGJlZW4gaGVscGZ1bCBpbiB0cmVhdGluZyBpdGNoeSBvciBpcnJpdGF0ZWQgc2tpbi4gClRoZSBwcm9ibGVtIGlzIHRoZXNlIHBsYXllcnMgbG9vc2UgYWZ0ZXIganVzdCBvbiBmbG9wLiAKQWxvcnMgb24gaW5jYXJuZSBjZSBxdWUgaidhcHBlbGxlICJsJ3RyZSBmZW1tZSIsIGMnZXN0ICBkaXJlIGxhIGNhcGFjaXQgZGUgam91ZXIgc2EgZm1pbml0IHN1ciBsZXMgcmVnaXN0cmVzIHF1aSBjb21wdGVudCBwb3VyIHNvaSwgb24gdml0IHRvdXRlcyBsZXMgZGltZW5zaW9ucyBldCBsZXMgY29udHJhZGljdGlvbnMgZGUgc29uIHRyZS4gQ2UgcXVpIG4nZXhjbHV0IHZpZGVtbWVudCBwYXMgcXVlIGwnb24gcHVpc3NlIGRzaXJlciBwcm91dmVyIHNhIGZtaW5pdCBkYW5zIGxlIHJlZ2FyZCBkc2lyYW50IG91IGFtb3VyZXV4IGQndW4gaG9tbWUuLiAKUHV0IHVwIGFuIGVtYnJhc3VyZSAob3IgMiBpZiB5b3UgcmVhbGx5IGRvbnQgd2FudCBidWxsZXRzIGdldHRpbmcgdGhyb3VnaCksIGZvbGxvd2VkIGJ5IGEgZ3Jhbml0ZSBkb29yLCBmb2xsb3dlZCBieSB5b3VyIHR1cnJldChzKSwgYW5kIHRoZW4gYW5vdGhlciBkb29yIGJlaGluZCB0aGF0IHRvIHByZXZlbnQgYW55IGRhbWFnZSBmcm9tIGFuIGV4cGxvZGluZyB0dXJyZXQgZnJvbSBzcHJlYWRpbmcuIEJvbnVzIGlmIHlvdSBoYXZlIHRoZSBtb2QgdGhhdCBhbGxvd3MgY3JlYXRpb24gb2YgcmVpbmZvcmNlZCBjb25jcmV0ZSBhbmQgbWFrZSB5b3VyIGVtYnJhc3VyZXMgYW5kIGRvb3JzIG91dCBvZiBjb25jcmV0ZSBmb3IgdGhlIHN3ZWV0IDE0MDAgaGl0IHBvaW50cyBvZiB3YWxsLgozOCA0NSkgQmFkUm9tYW5jZS9BbGVqYW5kcm8vTW9uc3Rlci9TcGVlY2hsZXNzL0RhbmNlIEluIFRoZSBEYXJrL1RlbGVwaG9uZShGZWF0LiBCZXlvbmMpL1NvIEhhcHB5IEkgQ291bGQgRGllL1RlZXRoIC4gVGhpcyBpcyB0aGVpbmZhbW91cyAiVGhlIEZhbWUgTW9ucyBlciIgYWxidW0sIGFuZCBjYW4gYmUgZm91bmQgb24gaVR1bmVzLiBJdCdzaGlnaGx5IHN1Z2dlc3RlZCB5b3UgYWNxdWlyZSB0aGUgJ2V4cGxpY2l0JyB2ZXJzaW9uIG9mIHRoZWFsYnVtLjQ2IDUwICkgUG9rZXIgRmFjZSAgQWNvdXN0aWMvSnVzdCBEYW5jZS9Mb3ZlZ2FtZS9CZWF1dGlmdWwsIERpcnR5LCBSaWNoL1Bva2VyIEZhY2UgLiBUaGVzZXNvbmdzIGFyZSBvbiBhbiBhbGJ1bSBjYWxsZWQgIldhbG1hcnQgc291bmRjaGVjay4iIFRoZSBsYXR0ZXIgZm91cnNvbmdzIGhhdmUgIk9yaWdpbmFsIHBlcmZvcm1hbmNlIHNlcmllcyIgaW4gdGhlaXIgbmFtZXMuIApJIGRvbiB1bmRlcnN0YW5kIHdoeSBwZW9wbGUgZ2V0IGFsbCBiZW50IG91dCBvZiBzaGFwZSBhYm91dCB0aGF0LiAKSGlzIGNhcmVlciBhcyBhIHByb2Zlc3Npb25hbCBnYW1ibGVyIHN0YXJ0ZWQgaW4gdGhlIHNsZWF6eSBoYWxscyBhbmQgY2FzaW5vcyBvZiBIdWxsIHdoZXJlLCBoZSBjbGFpbWVkOiB3b3VsZCBoYXZlIHRvIGdvIGluIGFuZCBvdXQgdGhyb3VnaCB0aGUgYmFjayBmaXJlIGVzY2FwZXMuIEkgYWx3YXlzIGNhcnJpZWQgYSBndW4gaW4gbXkgcG9ja2V0IGJlY2F1c2UgdGhlIHByb2JsZW0gZm9yIG1lIHdhc24gd2lubmluZyB0aGUgbW9uZXksIGl0IHdhcyBnZXR0aW5nIG91dCB3aXRoIGl0LiBIZSBsb3N0IGEgbG90IGluIHRoZSBlYXJseSBkYXlzLCBpbmNsdWRpbmcgYSBmcmllbmQgY2FyIHRoYXQgaGUgdXNlZCBhcyBhIGJldC4gbWVzc2VkIHJvdW5kIHdpdGggc29tZSByb3VnaCBnZWV6ZXJzLCBoZSByZWNhbGxlZC4gb3ZlcmxhcCB3aXRoIHZpbGxhaW5zLCBzbyB5b3UgbW9yZSBwcm9uZSB0byB0cm91YmxlIHRoYW4gaWYgeW91IHdvcmsgaW4gYSBzaG9wIGFuZCBnbyBob21lIGV2ZXJ5IG5pZ2h0IHRvIHdhdGNoIHRlbGx5LgpGaWx0ZXJpbmcgaW50ZXJzZWN0aW9uOiBJIGRvbnQgdGhpbmsgeW91IGxvb2tlZCBlbm91Z2ggcGVyc29uYWxseS4gCkhlZWwgY3JhY2sgdHJlYXRtZW50IEJUIHByb21pc2VzIGZpYnJlIHRvIG1vc3Qgb2YgTG9uZG9uIGJ5IDIwMTEgICBQaWN0dXJlcy4gUmVhZCBNb3JlLiBjcmFjayBuZW9kb3dubG9hZGVyIDIuOS4zIGFjIHJldiBjcmFjayB3aGF0c2FwcHNjcmVhbWluZyBiZWUgY3JhY2suIE9wZXJhdGluZyBTeXN0ZW06IFdpbmRvd3MgWFAsVmlzdGEsNyw4LDguMSwxMC4gRmlsZSBTaXplOiAyLjMzTUIgU3lzdGVtIFJlcXVpcmVtZW50czogSW50ZWwgUGVudGl1bSA0IG9yIGhpZ2hlci4gQXRsZWFzdCA1MTJNQiBSQU0gTnVtYmVyIG9mIERvd25sb2FkczouIDkwMDg1IHJlY29yZHMgLiBaT0hPIENvcnAgTWFuYWdlRW5naW5lIEFETWFuYWdlciBQbHVzIDYuMCBzZXJpYWwgbnVtYmVycywgY3JhY2tzIGFuZCBrZXlnZW5zIGFyZSBwcmVzZW50ZWQgaGVyZS4gClNhbGxlcyBkZSBQb2tlciBlbiBsaWduZS4gRXZlcmVzdCBQb2tlcjsgUGFydHlQb2tlcjsgQndpbjsgVW5pYmV0IFBva2VyOyBCYXJyaSBQb2tlciAuIFNhbHV0LGlkZW0gcG91ciBtb2kgY29ubmVjdGlvbiBpbXBvc3NpYmxlIGRlcHVpcyAxOGggMTUgZW52aXJvbixpIGZvbnQgdnJhaW1lbnQgY2hpZXIgZnVsbApBbmQgbm8sIHlvdSBjYW4ganVzdCBtYWtlIGh1Z2Ugb3ZlcmJldHMgZXZlcnkgc2luZ2xlIHBvdCBhbmQgZXhwZWN0IEhlcm8gdG8ganVzdCBmb2xkIGV2ZXJ5dGhpbmcsIGhlIGdvaW5nIHRvIGJlIGF0IHRoZSB0b3Agb2YgaGlzIHJhbmdlIGFuZCBzbmFwIHlvdSBvZmYgZXZlbnR1YWxseS4gCk0gbWlzIGVuIGZ1cmllLiBKIHZyYWltZW50IHZleCBwYXJjZSBxdSBzIGQgcCBxdWkgYXVyYWl0IHB1IGZhY2lsZW1lbnQgRGUgcGx1cywgbGEgdm9pdHVyZSBkZSBzIG4gcGFzIGVzc2F5IGRlIG0gQyBsZSBjaGFvcyBldCBwZXJzb25uZSBuZSBzYXZhaXQgcXVpIGVuIHQgY2UgbW9tZW50IGwgQyBpbmNyb3lhYmxlIGRlIGJvdXNpbGxlciBkZSB0ZWxsZSBmYSBsIDUwMCA7IGxhIHBsdXMgZ3Jvc3NlIGNvdXJzZSBhdXRvbW9iaWxlIGF1IG1vbmRlLi4gCkZvciBhbiBpbnRyb2R1Y3RvcnkgZmlsbSwgQ2FwdGFpbiBNYXJ2ZWwgaXMgcHJldHR5IGRlY2VudC4gCkl0J3MgV2VkbmVzZGF5IG5pZ2h0LCBhbmQgSSBjYW4ndCBoZWxwIGJ1dCBmaWRkbGUgd2l0aCBteSBncm93aW5nIGhvYXJkIG9mIGNoaXBzLiBJdCdzIG9uZSBvZiB0aGUgbW9zdCBiYXNpYyBwb2tlciByaXR1YWxzICAgdGFrZSB0d28gZXZlbiBzdGFja3Mgb2YgYWJvdXQgZml2ZSBjaGlwcywgdXNlIHR3byBmaW5nZXJzIHRvIGxpZnQgdXAgb25lIHN0YWNrIGFuZCBuZWF0bHkgc2xpZGUgdGhlIG90aGVyIGludG8gaXQuIFRoZSBlZmZlY3QgaXMgYSBraW5kIG9mIHZlcnRpY2FsIHNodWZmbGUgdGhhdCBtYWtlcyBpdCBhcHBlYXIgYXMgdGhvdWdoIHlvdSBrbm93IHdoYXQgeW91J3JlIGRvaW5nIGF0IHRoZSB0YWJsZS4gCkVESVQgMzogSSBnb3R0ZW4gc29tZSBtZXNzYWdlcyBhYm91dCBjb2VmZmljaWVudHMgb2YgYWJzb3JwdGlvbi4gQmFzaWNhbGx5IGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgb2NlYW4gYWJzb3JiIHdhdGVyIGRpZmZlcmVudGx5LiBUaGUgY29lZmZpY2llbnQgb2YgYWJzb3JwdGlvbiBvZiBzZWF3YXRlciByYW5nZXMgZnJvbSBhYm91dCAwLjAxMyB0by4gd2hhdGV2ZXIgeW91IHdhbnQgaXQgdG8gYmUsIHJlYWxseS4gVGhlIHdhdmVsZW5ndGggbWF0dGVycyBhIHdob2xlIGxvdC4gVGhlIDclL21ldGVyIGFuc3dlciBJIGdvdCB3YXMgYW4gYXZlcmFnZSBiYXNlZCBvbiB3aGl0ZSBsaWdodCBpbiByZWFsIHdvcmxkIHBlbGFnaWMgc2Vhd2F0ZXIuIFdpdGggcmVhbCB3b3JsZCBzZWF3YXRlciB5b3VyIGFuc3dlciByYW5nZXMgZnJvbSByb3VnaGx5IDEwNjAgd2F0dHMgdG8gMTAzNTAgd2F0dHMgZm9yIGxhc2VycyBvZiBvcHRpbXVtIHNlYSB3YXRlciBwZW5ldHJhdGlvbi4gR2V0IG91dCBvZiB0aGF0IHdhdmVsZW5ndGggYW5kIHRoZSBwb3dlciBza3lyb2NrZXRzLiBFVkVOIFNPLiBXaGV0aGVyIHlvdSB0YWxraW5nIGFib3V0IDEwNjAgb3IgMTAxNDcgb3IgZXZlbiBhIGZyYWN0aW9uIG9mIHRoYXQuIHlvdSB0YWxraW5nIGFib3V0IHVuaW1hZ2luYWJsZSBhbW91bnRzIG9mIHBvd2VyLiBQb3dlciBzdWNoIHRoYXQgdGhlIHVuaXZlcnNlIGNhbm5vdCBzdXBwbHkuCkFsc28sIGl0IHByZXR0eSBuZWdsaWdpYmxlIGRpZmZlcmVuY2UuIEV2ZW4gaWYgMjUlIG9mIHlvdXIgZGVjayBpcyArMSByb2xsaW5nIG1vZHMsIHlvdSB3b24gZXZlbiBnZXQgYSBxdWFydGVyIG9mIGEgcG9pbnQgb2YgZXh0cmEgZGFtYWdlIG91dCBvZiBzdHJlbmd0aGVuIG9uIGF2ZXJhZ2UuIFRoZSBvbmx5IHNpZ25pZmljYW50IGRpZmZlcmVuY2UgaXMgdGhhdCB5b3UgbWFrZSBzdHJlbmd0aGVuIGd1YXJhbnRlZSBkYW1hZ2UuIApXYXMgaW50ZXJ2aWV3ZWQgYnkgQ0ZPWCBKZWZmIE8gbW9ybmluZyBzaG93IGZyb20gTGFzIFZlZ2FzLCB3aGVyZSBoZSBpcyBjb21wZXRpbmcsIHN0YXJ0aW5nIFNhdHVyZGF5LCBpbiB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIG1haW4gZXZlbnQgdG91cm5leS4gCkFsdGhvdWdoIHlvdSBjYW4gaW1hZ2luZSB0aGUgc2NlbmUuIEFzIHRoZSBwbGFuZSBob3ZlcnMgb3ZlciBIZWF0aHJvdywgdGhlIHBpbG90IHNheXMgIkdvb2QgYWZ0ZXJub29uLiBUaGlzIGlzIHlvdXIgcGlsb3QuIApMZWZ0b3ZlcnMgYXJlIHR5cGljYWxseSBjb29rZWQgaW50byB0aGUgY29uZ2VlIGluIGxhcmdlIHBvdHMuIEluIHRoZQpXaGVuIGRpZCBMYWR5IEdhZ2EgZ2V0IGZhbW91cz8KSSByZWNrb24gTW9mZmF0IHdvdWxkIGhhdmUgZWl0aGVyIHBpY2tlZCB1cCBvbiB0aGF0IGFuZCBlaXRoZXIgc2F2ZWQgdGhlIGpva2UgdW50aWwgYSBsYXRlciBlcGlzb2RlIHBvc3QgVEFSRElTIHJldHVybiwgb3IgZXhwbGFpbmVkIHdoZXJlIHNoZSBmb3VuZCB0aGVtIGZyb20sIHBlcmhhcHMgYSBzYWZldHkgZGVwb3NpdCBib3ggVGhlIERvY3RvciBrZWVwcyBvbiBlYXJ0aC4uIApTZXJpb3VzbHksIGYgbW9uby4gSXQgdGhlIHNpY2tlc3QgSSBldmVyIGJlZW4gaW4gbXkgbGlmZS4gSSB3YXMgYXQgdGhlIEVSIHR3aWNlLiBXaGVuIHlvdSBnZXQgbW9ubyBhbmQgYXJlIG9sZGVyIHlvdSBhcmUgbW9yZSBsaWtlbHkgdG8gaGF2ZSBjb21wbGljYXRpb25zLiBJIGdvdCBoZXBhdGl0aXMgYWxvbmcgd2l0aCBpdCBhbmQgZXZlcnkgZ2xhbmQgYW5kIGx5bXBoIG5vZGUgaW4gbXkgZmFjZSBhbmQgbmVjayBzd2VsbGVkIHVwLiAKSGUgcHJvYmFibHkgaGF2ZSBtb3JlIGhlcm8gZ2FtZXMgdGhhbiBhbnkgb3RoZXIgaW5kaXZpZHVhbCBIZWF0IHBsYXllciwgYnV0IGhlIGFsc28gcHJvYmFibHkgaGF2ZSB0aGUgbW9zdCBwb29yIHNob290aW5nL2hpZ2ggdHVybm92ZXIgZ2FtZXMgdG9vLCB1bmxlc3MgRGlvbiBwbGF5cyBhIGxvdC4gCk9ubHkgb25lIHRpbWUgdGhhdCBJIGNhbiByZWNhbGwgd2FzIHRoZSBjb2RlIGV2ZW4gdXNlZCBmb3IgYSBjb3Vyc2UgYmVjYXVzZSB0aGF0IHBhcnRpY3VsYXIgYnVuZGxlIGNvbnRhaW5lZCBvdXIgbGFicywgcXVpenplcywgYW5kIHRlc3RzLiBTb21ldGhpbmcgdG8gY29uc2lkZXIgaWYgeW91J3JlIHN0dWNrIGJ1eWluZyB0aG9zZSBidW5kbGVzLCBkb24ndCBhY3RpdmF0ZSB0aGUgY29kZSB1bnRpbCBpdCdzIHJlcXVpcmVkIG9mIHlvdS4gCkluIGVhc3QgV2luZHNvciBoYXMgYmVjb21lIGEgZnJlc2ggcHJvZHVjZSBzdXBwbHkgaHViIGZvciAxNSBsb2NhbCBmb29kIGJhbmtzIGFuZCBvdGhlciBvcmdhbml6YXRpb25zLiAKQWNjZXNzIHRvIHRoZSBpbnRlcm5ldC4gV2hvbGx5IGFuZCB3aXRob3V0IHJlc3RyaWN0aW9uLiBOb3QgdGhlaXIgb3duIHNwZWNpYWwgYnJhbmQgb2YgIlRoZSBJbnRlcm5ldCBieSBUIE1vYmlsZS4iLiAKSSByZWJlbGxlZCBpbiBsb3VkIGFuZCBvcGVuIHdheXMsIGNoYW5uZWxpbmcgbXkgYW5nZXIgdG93YXJkcyBzb2NpZXR5IHRvd2FyZHMgbWFuYWdlbWVudC4gQWxsIHRoZSB3aGlsZSBJIGZlbHQgc2FmZSBpbiBkb2luZyBzbywgYXMgSSBoZWxkIGFuIGltcG9ydGFudCByb2xlIGFuZCB3YXMgYmVpbmcgdHJhaW5lZCBmb3IgYW5vdGhlciBwb3NpdGlvbiBpbiB0aGUgY29tcGFueS4uIApCZWluZyBnb29kIHRvIHRoZSBwZW9wbGUgd2UgaGF2ZSBhcm91bmQgdXMgYW5kIGFyZSBleHBlcnRzIGluIHdoYXQgdGhleSBkby4gSW4gZmFjdCBhIG51bWJlciBvZiBKUkcga2V5IHBlcnNvbm5lbCB0aGV5IG1ldCBieSBjaGFuY2Ugb3IgdGhyb3VnaCBmYW1pbHkgYW5kIGZyaWVuZHMgY29ubmVjdGlvbnMuLiAKUHJvZmVzc29yIFJpY2hhcmQgRmxvcmlkYSBhbmQgY29sbGVhZ3VlcyBhdCB0aGUgVW5pdmVyc2l0eSBvZiBUb3JvbnRvJ3MgU2Nob29sIG9mIENpdGllcyBjcnVuY2hlZCBzb21lIG51bWJlcnMgYW5kIGRldGVybWluZWQgdGhhdCAiaXQncyBub3QgbmF0aW9uIHN0YXRlcyBvciBldmVuIGNpdGllcywgYnV0IG1lZ2EgcmVnaW9ucyBvZiBtdWx0aXBsZSBtZXRybyBhcmVhcyBhcmUgdGhlIHJlYWwgZm9yY2VzIiBwb3dlcmluZyB0aGUgZWNvbm9teSB3b3JsZHdpZGUuIFRoZSB0ZXJtIGNhbWUgdG8gYmUgYXBwbGllZCB0byBhIG51bWJlciBvZiByZWdpb25zIGluIHRoZSB3b3JsZCwgaW5jbHVkaW5nIHRoZSB2YXN0IE1pZHdlc3Rlcm4gbWVnYWxvcG9saXMiIHRoYXQgZXh0ZW5kcyBmcm9tIENoaWNhZ28sIHRocm91Z2ggRGV0cm9pdCBhbmQgQ2xldmVsYW5kLCBhbmQgc291dGggdG8gUGl0dHNidXJnaC4gR290dG1hbm4gZHViYmVkIGl0ICJDaGkgUGl0dHMuIi4gCkthaHVuYSB1Ck5vdyBzaGUgaXMgc3VjaCBhIHN3ZWV0IGdpcmwgd2hvIGxldCB1cyBjYXJyeSBoZXIgZXZlcnl3aGVyZSBhbmQgc2xlZXBzIHVwIG9uIG91ciBjaGVzdHMgZXZlcnkgbmlnaHQuIApPbmUgcGxhbnQgdGhhdCBtaWdodCBzaHV0IGRvd24gaXMgR00ncyBEZWx0YSBUb3duc2hpcCBhc3NlbWJseSBwbGFudCBuZWFyIExhbnNpbmcsIE1pY2guLCB3aGljaCBidWlsZHMgdGhlIEJ1aWNrIEVuY2xhdmUsIEdNQyBBY2FkaWEgYW5kIFNhdHVybiBPdXRsb29rIGNyb3Nzb3ZlcnMuCkpvc2UgaXMgYSBwaGVub21lbmFsIGZpZ2h0ZXIsIGl0IHN0aWxsIHNob3duIGluIGhpcyBtYXRjaGVzLiBCdXQgbGV0IG5vdCByZWFkIGludG8gaXQgdG9vIG11Y2ggYWJvdXQgaGlzIHR3byBsb3NzZXMgdG8gTWF4LlNheSB0aGF0IHRoZXJlIGlzIGEgNjAlIHByb2JhYmlsaXR5IHRoYXQgYW55IHJhbmRvbSBqdWRnZSB3b3VsZCBncmFudCBIb2xsb3dheSB0aGUgZGVjaXNpb24uIApIZXksIE1HU0hhbGlmYXguIFRoYW5rcyBmb3IgY29udHJpYnV0aW5nISBVbmZvcnR1bmF0ZWx5IHlvdXIgc3VibWlzc2lvbiBoYXMgYmVlbiByZW1vdmVkLiBQZXIgdGhlIHNpZGViYXI6ClNvIHRoZXkncmUgb3V0IGluIHRoZSBtaWRkbGUgb2YgYSBodXJyaWNhbmUsIHRvc3NlZCBhcm91bmQgbGlrZSB0aGUgZ3V5cyBvbiBEZWFkbGllc3QgQ2F0Y2ggYW5kIEplc3VzLCBiZWNhdXNlIGhlIHdhcyBqdXN0IGhhcmRjb3JlIGxpa2UgdGhhdCwgZGlkbid0IG1pbmQgdGhlIGRyZW5jaGluZyByYWluIGFuZCB0aGUgbG91ZCB0aHVuZGVyIGFuZCBjb250aW51ZWQgc2xlZXBpbmcuIApOb3Qgd29ydGggaXQuIERlbnRhbCBpbnN1cmFuY2UgY292ZXJzIGEgbWF4IG9mICQxMDAwIDE1MDAsIGlmIHlvdSdyZSBsdWNreSB5b3UgY2FuIGZpbmQgYSBwbGFuIHdpdGggJDI1MDAvbWF4LiBXaXRoIHRoZSBsaW1pdGF0aW9ucyBpbnN1cmFuY2UgY29tcGFuaWVzIHBsYWNlIG9uIHNlY29uZGFyeSBpbnN1cmFuY2UsIHlvdSdkIGJlIGJldHRlciBvZmYgZmx1c2hpbmcgbW9uZXkgZG93biB0aGUgdG9pbGV0LiBNb3N0IHNlY29uZGFyeSBwbGFucyBoYXZlIHdoYXQncyBjYWxsZWQgYSBub24gZHVwbGljYXRpb24gb3Igbm9uIGNvb3JkaW5hdGlvbiBvZiBiZW5lZml0cywgbWVhbmluZyBpZiB5b3VyIHByaW1hcnkgcGF5cyBtb3JlIHRoYW4gdGhlIGFsbG93ZWQgYWJvdXQgb2YgdGhlIHNlY29uZGFyeSwgc2Vjb25kYXJ5IHdpbGwgcGF5IG5vdGhpbmcuIFlvdSdyZSBiZXR0ZXIgb2ZmIG9wZW5pbmcgYSBoZWFsdGggc2F2aW5ncyBhY2NvdW50ICh0YXggZnJlZSkgd2l0aCBhIGJhbmsuClRoaXMgaXMgYSBzdGF0ZSBvZiB0aGUgYXJ0IG1hY2hpbmUgYW5kIGFuIGV4Y2VsbGVudCBpbnZlc3RtZW50IGZvciBhbnlvbmUgd2hvIHBsYXlzIGNhcmRzIG9uIGEgZnJlcXVlbnQgYmFzaXMuLiAKQSBzdHJhaWdodCBjYW5ub3Qgd3JhcCwgbWVhbmluZyBpdCBpcyBub3QgYSBzdHJhaWdodCBpZiB5b3UgaGF2ZSBhIFF1ZWVuLCBLaW5nLCBBY2UsIFR3bywgVGhyZWUuIApPbmxpbmUgY2FzaW5vcyBicmluZyB1cyBhIG15cmlhZCBvZiBnYW1pbmcgZXhwZXJpZW5jZXMgYXQgb3VyIGZpbmdlcnRpcHMsIGJ1dCB0aGVyZSdzIG9uZSBjYXRlZ29yeSB0aGF0IGJlYXRzIGFsbCB0aGUgb3RoZXJzIGhhbmRzIGRvd24uIAo+IEhlIGlzLCB3aXRob3V0IGEgZG91YnQsIGdvaW5nIHRvIHdhbnQgbW9yZSBtb25leS4gV2hldGhlciBvciBub3QgaGUgd2lsbCBnZXQgdGhhdCBtb25leSBpcyBhbm90aGVyIHF1ZXN0aW9uIGJ1dCBldmVyeXRoaW5nIEkgc2FpZCB3YXMgMTAwJSB0cnVlLiAKT2Z0ZW4gYWZ0ZXJ3YXJkcyBoZSB3b25kZXJlZCB3aHkgaGUgaGFkIG5vdCBmZWx0IGl0LCBldmVuIHdoZW4gaGUgaGFkIHNlZW4gaGltIHdpdGggaGlzIGZhY2UgaGFsZiBjb3ZlcmVkIHdpdGggbGF0aGVyIGFuZCBoaXMgZmluZ2VycyBwbHVuZ2VkIGludG8gdGhlIHNpbHZlciBib3dsLi4gCkkgZG9uIHdhbnQgdGhhdCBzdGF0ZW1lbnQgdG8gYmUgdGFrZW4gYXMgdG9vIHN3ZWVwaW5nIGFuZCB0aGUgbWFqb3JpdHkgb2YgcGVvcGxlIGFyZSBkZWZpbml0ZWx5IHBhc3Npb25hdGUgYW5kIGhhcmR3b3JraW5nIGFuZCBkbyB3YW50IHRvIGJ1aWxkIGNvb2wgYW5kIHVzZWZ1bCB0aGluZ3Mgd2l0aG91dCBiZWluZyBjb21wbGV0ZSBqZXJrcyBhYm91dCBpdC4gClRoZSBmcmVlIGNhc2lubyBnYW1lcyBzb21ldGltZXMgcHJvdmUgdG8gYmUgb2YgaW1tZW5zZSBoZWxwIGFzIGEgcGVyc29uIGNhbiBzaW1wbHkgZW5qb3kgdGhlIGdhbWUgYW5kIGxlYXJuIGFsb25nIHRoZSBwYXRoLiBJdCBwcm92aWRlcyB0aGUgbmV3IHBsYXllcnMgd2l0aCBhbiBhd2Vzb21lIG9wcG9ydHVuaXR5IHRvIGdldCB0aGVpciBoYW5kcyBvbiB0aGUgZ2FtZXMgYW5kIGxlYXJuIGJ5IHBsYXlpbmcgdGhlIGdhbWVzIGluIHJlYWwuIE5vdCBqdXN0IHRoYXQsIHRoZXNlIGFyZSBzdXJlbHkgdGhlIGV4cGVyaW1lbnRhbCBsYWJzIHdoZXJlIG9uZSBjYW4gdHJ5IG5ldyBza2lsbHMgYW5kIHN0cmF0ZWdpZXMgdG8gaW1wcm92aXNlIHRoZSBvZGRzIG9mIHdpbm5pbmcgYW5kIGxhdGVyIGdldCBiZXR0ZXIgcmV0dXJucyBpbiB0aGUgcmVhbCBnYW1lIGJ5IG91dGluZyBpbiBncmVhdGVyIGJldHMuLiAKR2l2ZSBzdHVkZW50cyBsb3cgc3Rha2VzIG9wcG9ydHVuaXRpZXMgdG8gdGhpbmsgYW5kIGRpc2N1c3MgY29udGVudCAgIHRoaXMgaXMgYSAidG9sZXJhbmNlIGZvciBlcnJvciIgYXBwcm9hY2guIFN0dWRlbnRzIHNvbWV0aW1lcyBuZWVkIHRvIGdldCBpdCB3cm9uZywgdGFrZSByaXNrcywgb3IgdHJ5IG91dCBkaWZmZXJlbnQgaWRlYXMgdG8gbGVhcm4uIFRoaXMgYWxzbyBnZXRzIG1hbnkgbW9yZSBzdHVkZW50cyB0YWxraW5nLgpJbiBBbWVyaWNhLCB5b3UgY2FuIGJlIGEgd2FpdHJlc3Mgd29ya2luZyBhdCBhIGJhciBpbiBCcm9va2x5biBhbmQgZGVjaWRlIHlvdSBoYWQgZW5vdWdoIG9mIHRoaXMgc2hpdCBhbmQgZ28gYW5kIHJ1biBmb3IgQ29uZ3Jlc3MgdG8gc3RvcCBiaXRjaGluZyBhYm91dCB0aGUgc3lzdGVtIGFuZCBhY3R1YWxseSBkbyBzb21ldGhpbmcgYWJvdXQgaXQuIApPciBFYXN0IGFuZCB3ZXN0IGRlcGVuZGluZyBvciB5b3VyIHJhaWxyb2FkIGFuZCBsb2NhdGlvbi4gClRoZXkgbGl0ZXJhbGx5IGRvIG5vdCB1bmRlcnN0YW5kIHdoYXQgdGhlIHdvcmQgInJhY2lzbSIgbWVhbnMgb3IgaW5jbHVkZXMuLiAKIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMTYgaG91cnMgYWdvSGFoYWhhaGEsIFllYWggSSBrbm93LCBJIG1lYW4sIEkgcmVhbGx5IGRpZCB0aGluayBpdCB3YXMgZ29pbmcgdG8gYmUgcmV2ZWFsZWQgb24gdGhlIHdlZWtlbmQsIGJ1dCBCcmlhbiBIZXJiZXJ0IGlzIHRha2luZyBoaXMgdGltZSB3aXRoIGl0LiBJIGRvbiBsaWtlIGtlZXBpbmcgc2VjcmV0cywgYnV0IGluIHRoZXNlIGNhc2VzLCBJIGhhdmUgdG8uIFNlY3JldHMgb2YgRHVuZSBpcyBhY3R1YWxseSBhYm91dCBteSBib29rIEkgd3JpdGluZyB3aGljaCByZXZlYWwgdGhpbmdzIGFib3V0IER1bmUgcHJldmlvdXNseSB1bmtub3duLiAKVGhlIFRoaW5nIGZsZXcgZGlyZWN0bHkgYXQgbWUgYW5kIG15IG1vbSBhbmQgc2lzdGVyLiBJIHdhcyBvbiB0aGUgZmxvb3IgbGF1Z2hpbmcgdG9vIGhhcmQgdG8gbW92ZSwgd2hpbGUgbXkgZmFtaWx5IHNjcmVhbWVkIGFuZCByYW4gaW50byB0aGUgaGFsbHdheSBhbmQgY2xvc2VkIHRoZSBiZWRyb29tIGRvb3IgYW5kIGxvY2tlZCBtZSBpbnNpZGUgd2l0aCBhIHZlcnkgc2NhcmVkIGJhdC4uIApUaGlzIGlzIG9mdGVuIHRoZSBjYXNlIGZvciBwcm9zdGF0ZSBjYW5jZXIuIApPbmUgb2YgdGhlIGZhdm9yaXRlcyBpcyB0aGUgc3VpdGVkIHdhdGVycHJvb2Ygc3RhbHdhcnQgdGFibGUgZmVsdCBjbG90aC4gVGhpcyBleWUgY2F0Y2hpbmcgZGVzaWduLCB3aGljaCBmZWF0dXJlcyBhIHBhdHRlcm4gbWFkZSB1cCBvZiB0aGUgZm91ciBkaWZmZXJlbnQgY2FyZCBzdWl0ZXMsIGNvbWVzIGluIGNvbG9ycyBsaWtlIGJsYWNrYmVycnk7IHJveWFsIGJsdWU7IG1pZG5pZ2h0IGJsdWU7IHBvbG87IHBsYXRpbnVtOyBlbWVyYWxkOyBmb3Jlc3Q7IGJ1cmdhbmR5OyByZWQ7IGdvbGQ7IGJyb256ZTsgcHVycGxlOyBzaWx2ZXI7IGNob2NvbGF0ZTsgeWVsbG93OyBhbmQgbGF2ZW5kZXIuIApZb3VyIGJveWZyaWVuZCBzb3VuZHMgbGlrZSBoZSBkb2VzbiBoYXZlIGFueSBjbG9zZSBmcmllbmRzaGlwcyB0aGVuLCBhbmQgdGhhdCBzYWQuIE5vdCB0byBzb3VuZCBsaWtlIGFuIGFzcywgYnV0IGl0IGFjdHVhbGx5IHByZXR0eSBwYXRoZXRpYyB0aGF0IGhlIGNhbiB1bmRlcnN0YW5kIHdoeSBzb21lIGdyb3duIGFkdWx0cyBlbmpveSB0aGVpciBmcmllbmRzIHNvIG11Y2ggdGhhdCB0aGV5IGxpa2UgdG8gc3BlbmQgZXh0cmEgdGltZSB0b2dldGhlci4KV2hvIHdhbnQgdGhlIGdyZWF0IG9jZWFuIHZpZXdzIGF0IFNvbGVpbCB3aWxsIGhhcHBpbHkgcGF5IGZvciB0aGVtLCBBbmRlcnNvbiBzYWlkLiB5b3UgZ2V0IG90aGVycyB0aGF0IGFyZSBqdXN0IGxvb2tpbmcgZm9yIHRoYXQgbG9jayBhbmQgbGVhdmUgbGlmZXN0eWxlIHdoZXJlIHRoZXkgY2FuIGdvIGFuZCBzcGVuZCBzaXggbW9udGhzIG9mIHRoZSB5ZWFyIGRvd24gaW4gdGhlIGRlc2VydC4gVGhleSBtaWdodCBiZSBidXlpbmcgc29tZXRoaW5nIGEgYml0IGxvd2VyIGRvd24gaW4gdGhlIGJ1aWxkaW5nIGFuZCBwdXR0aW5nIHNvbWUgbW9yZSBtb25leSBpbiB0aGVpciBwb2NrZXQgc28gdGhleSBjYW4gZW5qb3kgdGhlbXNlbHZlcyBtb3JlIGluIGEgd2FybWVyIGNsaW1hdGUuIGF0IFNvbGVpbCBmZWF0dXJlIGVuZ2luZWVyZWQgd29vZCBmbG9vcmluZyBpbiBlbnRyaWVzLCBraXRjaGVucywgbGl2aW5nIHJvb21zLCBkaW5pbmcgcm9vbXMgYW5kIGRlbnMuIEtpdGNoZW5zIGhhdmUgcG9saXNoZWQgc3RvbmUgY291bnRlcnRvcHMsIHVuZGVyIGNvdW50ZXIgZ2FyYmFnZSBhbmQgcmVjeWNsaW5nIHN5c3RlbXMgYW5kIGZ1bGwgc2l6ZWQgQm9zY2ggc3RhaW5sZXNzIHN0ZWVsIGFwcGxpYW5jZSBwYWNrYWdlcywgaW5jbHVkaW5nIHN0YWlubGVzcyBzdGVlbCBkcmF3ZXIgbWljcm93YXZlcy4gQmF0aHJvb21zIGZlYXR1cmUgc29ha2VyIHR1YnMsIGZyYW1lbGVzcyBnbGFzcyBzaG93ZXJzIGFuZCBsYXJnZSBmb3JtYXQgd2FsbCBhbmQgZmxvb3IgdGlsZXMuCkhvdyB0byBGaW5kIGEgU2FmZSBPbmxpbmUgUG9rZXIgU2l0ZQpBc3RyYWVubnVpICAyIHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvCkkgdGhpbmsgSSB3YXMgc2V4dWFsbHkgYXNzYXVsdGVkIGR1cmluZyBhIG1hc3NhZ2UKTm93IExhbmUgbGlmZSBpcyB0byBiZSBsYWlkIGJhcmUuIApKdXN0aW4gUmFpbW9uZG8gZGl2aWRlZCB0aGUgInN5bmRyb21lIiBpbnRvIHRocmVlIHN0YWdlczsgaW4gdGhlIGZpcnN0LCB0aG9zZSB3aG8gImxvc2UgYWxsIHNlbnNlIG9mIHByb3BvcnRpb24sIiBuZXh0LCB0aGV5IGV4cGVyaWVuY2UgImEgcHJvZm91bmQgZWZmZWN0IG9uIC4gdm9jYWJ1bGFyeSIgYW5kIGJlZ2luIHRvICJzcGVhayBhIGRpc3RpbmN0aXZlIGxhbmd1YWdlIGNvbnNpc3Rpbmcgc29sZWx5IG9mIGh5cGVyYm9sZSwiIGFuZCwgaW4gdGhlIGZpbmFsIHN0YWdlLCB0aGUgYWZmbGljdGVkICJsb3NlIHRoZSBhYmlsaXR5IHRvIGRpc3Rpbmd1aXNoIGZhbnRhc3kgZnJvbSByZWFsaXR5CjQgcGFydHMgZHJpZWQgbGF2ZW5kZXIgbGVhdmVzMiBwYXJ0cyBkcmllZCBob3BzMiBwYXJ0cyBkcmllZCByb3NlIHBldGFsczEgcGFydCBkcmllZCBjaGFtb21pbGUxIHBhcnQgZHJpZWQgbGVtb24gYmFsbQpQZW9wbGUgZG9uJ3QgZ2V0ICJmaW5hbmNpYWwgYW5kIGJ1c2luZXNzIG1hbmFnZW1lbnQgdHJhaW5pbmciIHRoZXkgZ2V0IGRlZ3JlZXMgaW4gaXQuIEFsc28sIHdvcmtlcnMgYWxyZWFkeSBjYW4gb3duIHRoZSBtZWFucyBvZiBwcm9kdWN0LiAKSWYgeW91IHdlcmUgYm9ybiBvbiBYYWxhdGFjaGkgMTcgaW4gdGhlIHllYXIgNDgyMiB0byBzdHJpY3RseSByZWxpZ2lvbnMgcGFyZW50cyBvbiB0aGUgY29udGluZW50IG9mIEhsdWNocmFjaHQgaW4gdGhlIDgyM3JkIGluc3RhbmNlIG9mIG91ciB1bml2ZXJzZSBhbmQgZ3JldyB1cCBwbGF5aW5nIGJhc2ViYWxsIGluc3RlYWQgb2YgcGxheWluZyB2aWRlbyBnYW1lcyB3aGljaCBtZWFudCB5b3UgZGlkbiBidW1wIGludG8gTWFyayB3aGlsZSBwbGF5aW5nIEhhbG8gMzQgb25saW5lIHdobyBtZW50aW9uZWQgeW91IHNob3VsZCBwbGF5IFlhaG9vISAoaXQgc2hpdCBpbiBhbnkgdW5pdmVyc2UsIEJUVykgcG9rZXIgd2hpY2ggZ290IHlvdSB0byByZWFkIEhpbGxtYXRoIG9uIEhvbGQgd2hpY2ggdGF1Z2h0IHlvdSB0aGUgY29ycmVjdCByYWlzaW5nIHJhbmdlcywgeW91IHdvdWxkIGhhdmUgMzIlIGxlc3MgY2hhbmNlIHRvIHdpbiB0aGUgbmV4dCBoYW5kLiAKTGV0IHRoZW0ga25vdyB3aGF0IGhhcHBlbmVkIGFuZCB3aHkgeW91IGZlZWwgeW91IHdlcmUgbm90IGdpdmVuIGdvb2QgY3VzdG9tZXIgc2VydmljZS4gTWFrZSBpdCBhIHBvaW50IHRvIG1lbnRpb24gaG93IHlvdSB3YW50IHRvIHN1cHBvcnQgdGhlIGxvY2FsIHNob3Agb3ZlciBvbmxpbmUgcmV0YWlsZXJzIGJ1dCBpbiBvcmRlciB0byBkbyBzbywgY2VydGFpbiBwcm9ibGVtcyBtdXN0IGJlIGFkZHJlc3NlZC4uIApUaGUgQk1KIEFjYWRlbWljIGVkaXRpb24gaXMgYSBtb250aGx5IHByaW50IG9ubHkgam91cm5hbC4gVGhpcyBwcmludCBlZGl0aW9uIGlzIHN1aXRhYmxlIGZvciBhY2FkZW1pYyByZXNlYXJjaGVycy4gVGhlIGFjYWRlbWljIGlzc3VlIGRvZXMgbm90IGluY2x1ZGUgQ2FyZWVycyBhZHZlcnRpc2luZy4gSGVyZSBpcyBhIHNhbXBsZSBpc3N1ZSBpbiBlIHJlYWRlciBmb3JtYXQuCldoYXQgaXMgY2VydGFpbiBpcyB0aGF0IG1hbnkgcGVvcGxlIGJldHJheWVkIHRoZWxyZWQncyBkZWNpc2lvbnMgYXQgb25lIHN0YWdlIG9yIGFub3RoZXIsIGluY2x1ZGluZyBoaXMgc29uIEVkbXVuZCB3aG8gZGVmaWVkIHRoZWxyZWQgYnkgbWFycnlpbmcgU2lnZWZvcnRoJ3Mgd2lkb3cgYW5kIHRha2luZyBwb3NzZXNzaW9uIG9mIHRoZSBEYW5lbGF3LiAKSSBzdXBwb3NlIGl0IGJlY2F1c2UgSSBlbmpveSB0aGUgZmVlbGluZyBvZiBsZWFybmluZywgYW5kIHRoYXQgaXQgc2VlbXMgbGlrZSB0aGUgb25seSBraW5kIG9mIG1lYW5pbmdmdWwgZm9ybSBzb2NpYWwgaW50ZXJhY3Rpb24gdG8gbWUuIEV2ZXJ5dGhpbmcgZWxzZSBpcyBqdXN0IGEgZm9ybSBvZiBlbnRlcnRhaW5tZW50LCBhbmQgSSB1c3VhbGx5IG11Y2ggYmV0dGVyIGVudGVydGFpbmVkIGJ5IG90aGVyIHRoaW5ncy4gClRoZSBBdWJ1cm4gVW5pdmVyc2l0eSBBc3NvY2lhdGlvbiBvZiBTb2NpYWwgV29ya2VycywgKEFBU1NXKSwgY29tbW9ubHkgcmVmZXJyZWQgdG8gYXMgIlRoZSBTb2NpYWwgV29yayBDbHViLCIgd2FzIGZpcnN0IGNoYXJ0ZXJlZCBpbiAxOTc4IGFuZCBoYXMgYmVlbiBhY3RpdmUgc2luY2UgdGhhdCB0aW1lLiBXaGlsZSBhIFNvY2lhbCBXb3JrIGZhY3VsdHkgbWVtYmVyIHNlcnZlcyBhcyBhZHZpc29yIHRvIHRoZSBncm91cCwgdGhlIGNsdWIgZnVuY3Rpb25zIHVuZGVyIHN0dWRlbnQgb3JnYW5pemF0aW9uIGFuZCBsZWFkZXJzaGlwLiBBbGwgc3R1ZGVudHMsIHJlZ2FyZGxlc3Mgb2YgdGhlaXIgbWFqb3IgYXJlIGludml0ZWQgdG8gYXR0ZW5kIGNsdWIgbWVldGluZ3MgYW5kIGludm9sdmUgdGhlbXNlbHZlcyBpbiB0aGUgY2x1YidzIHNlcnZpY2UgcHJvamVjdHMuIEhvd2V2ZXIsIG9ubHkgU29jaWFsIFdvcmsgbWFqb3JzIG1heSBzZXJ2ZSBhcyBvZmZpY2Vycy4KSWYgSSBjaG9vc2UgdG8gc2hhcmUgc29tZXRoaW5nIGZvciBmcmVlIG9uIHRoZSBpbnRlcm5ldCB3aXRoIHN0cmFuZ2VycyB0aGVyZSdzIHplcm8gd3Jvbmcgd2l0aCB0aGF0IGVzcGVjaWFsbHkgaWYgaXQncyBhIGRpZ2l0YWwgZmlsZSBpIGNhbiByZXBsaWNhdGUuIFRoZSBpZGVhIHRoYXQgSSB3YW50IHRvIG1ha2UgbW9uZXkgc28gSSdtIGdvaW5nIHRvIGFsaWduIG15c2VsZiB3aXRoIGxhd3MgdG8gY3JlYXRlIGFuIGFydGlmaWNpYWwgbWFya2V0IHRoYXQgZG9lc24ndCBleGlzdCBhbnltb3JlIGlzIGxpdGVyYWxseSBqdXN0IGdyZWVkeSBhbmQgY29ycnVwdC4uIApTbyBpIEFTU1VNRSBpdHMgbm90IGluIHRoZSBzYW1lIHN0YXRlIG5vdyBhcyBpdCB3YXMgdGhlbiwgdGhvdWdoIGkgZ3Vlc3MgdGhleSBob2xkIHRoZSAxIHN0YXIgcmF0aW5nIHVudGlsIHRoZXkgYXJlIHRlc3RlZCBhZ2Fpbi4uIApJIHdvdWxkIGZvbGQgcml2ZXIuIFdoYXQga2luZCBvZiBoYW5kcyBkbyB5b3UgdGhpbmsgeW91IGFyZSBiZWF0aW5nIHRoYXQgaGUgY291bGQgaGF2ZT8gVGhlIG9ubHkgY29uY2VpdmFibGUgd29yc2UgUXVlZW5zIGFyZSBROSwgUTggYW5kIEkgZG9uIHRoaW5rIGhlIGJldHMgbGlrZSB0aGF0IHdpdGggdGhvc2UgaGFuZHMuIEFueSBvdGhlciBRIG1ha2VzIHR3byBwYWlyLCBhIHN0cmFpZ2h0LCBvciBhIGJvYXQuIApTdHVwYWsgd2FzIGEgd2hlZWxlciwgZGVhbGVyIGFuZCBnYW1ibGVyIG9mIHRoZSBmaXJzdCBvcmRlci4gSGUgd29uIGEgJDEgbWlsbGlvbiB3YWdlciBvbiBTdXBlciBCb3dsIFhYSUlJIGFuZCBhIFdvcmxkIFNlcmllcyBvZiBQb2tlciBjaGFtcGlvbnNoaXAgYnJhY2VsZXQsIGJvdGggaW4gMTk4OSwgbmVhcmx5IGRpZWQgaW4gYSBtb3RvcmN5Y2xlIGNyYXNoIGluIDE5OTUsIGFuZCBsb3N0IGEgYmlkIGluIDIwMDYgdG8gYmVjb21lIGxpZXV0ZW5hbnQgZ292ZXJub3Igb2YgTmV2YWRhLi4gClllbGxlbiBmZWx0IGRlaHlkcmF0ZWQgYXQgdGhlIGVuZCBvZiBhIGxvbmcgc3BlZWNoIHVuZGVyIGJyaWdodCBsaWdodHMsIGEgRmVkIHJlcHJlc2VudGF0aXZlIHNhaWQgaW4gYSBzdGF0ZW1lbnQuIGEgcHJlY2F1dGlvbiwgc2hlIHdhcyBzZWVuIGJ5IEVNVCBzdGFmZiBvbiBzaXRlIGF0IFVNYXNzIEFtaGVyc3QuIFNoZSBmZWx0IGZpbmUgYWZ0ZXJ3YXJkIGFuZCBoYXMgY29udGludWVkIHdpdGggaGVyIHNjaGVkdWxlIFRodXJzZGF5IGV2ZW5pbmcuIFJpY2UsIGRpcmVjdG9yIG9mIGFkbWluaXN0cmF0aW9uIGF0IFVNYXNzIGVtZXJnZW5jeSBtZWRpY2FsIHNlcnZpY2VzLCBzZXBhcmF0ZWx5IGNvbmZpcm1lZCB0aGF0IFllbGxlbiBpcyBhbGwgcmlnaHQgYW5kIGRpZCBub3QgZ290IHRvIHRoZSBob3NwaXRhbCwgQmxvb21iZXJnIHJlcG9ydGVkLgpBbmQgb24gdGhlIGdyb3VuZCwgYW1vbmcgcGVvcGxlIHdobyBkbyBub3QgcmVjZWl2ZSBsb2JieWluZyBtb25leSwgdGhlcmUgc2VlbXMgdG8gYmUgYSBncm91bmRzd2VsbCBvZiBwb3B1bGlzdCBhbmdlciBhZ2FpbnN0IHRoZSBiYW5rZXJzLiBTZW4uIERpY2sgRHVyYmluIGFuZCBuZWFybHkgYSBkb3plbiBwcm90ZXN0ZXJzIGNhbGxlZCBTdW5kYXkgZm9yIGJhbmtzIHRoYXQgcmVjZWl2ZWQgYmlsbGlvbnMgaW4gYmFpbG91dCBtb25leSB0byBoZWxwIGNvbnN1bWVycyB3aG8gaGF2ZSBmYWxsZW4gdmljdGltIHRvIGJhZCBsb2FuIHByYWN0aWNlcyBhbmQgYXJlIGxvc2luZyB0aGVpciBob21lcyB0byBmb3JlY2xvc3VyZS4uIApJZiBFcHN0ZWluIHdlcmUgYSBzdHVkZW50LCBhbmQgV2lsZCBPYXRzIG5vdCBhIG5vdmVsIGJ1dCBhbiBlc3NheSwgaGUgd291bGQgaGF2ZSBiZWVuIGZvdW5kIG91dCB0aGUgbW9tZW50IGhlIHN1Ym1pdHRlZCB0aGUgbWFudXNjcmlwdC4gV2hhdCBoZSdkIGFwcHJvcHJpYXRlZCBmcm9tIFRoZSBSYWNoZWwgUGFwZXJzLCBldmVuIHRoZSBtYXRlcmlhbCBoZSdkIG5vbWluYWxseSByZXdvcmtlZCBvciByZXdvcmRlZCwgd291bGQgYmUgZmxhZ2dlZCwgaW1tZWRpYXRlbHksIGJ5IGNvbXB1dGVyIHNvZnR3YXJlIGRlc2lnbmVkIHRvIGlkZW50aWZ5IHBsYWdpYXJpc20gaW4gYWNhZGVtaWMgd29yay4KTm9ybWFsbHkgbXkgYmVzdCBmcmllbmQgYW5kIEkgd2lsbCB0cmFkZSBraWRzIG9mZiB0byBlYWNoIG90aGVyLCBidXQgaGVyIGNyZXcgaGFzIGhhbmQsIGZvb3QsIGFuZCBtb3V0aCByaWdodCBub3cuIFNoZSdzIHRoZSBvbmUgd2hvJ3Mgc3VwcG9zZWQgdG8gd2F0Y2ggbXkgYm95cyBpZiBJIGdvIGludG8gbGFib3IgdW50aWwgbXkgaW4gbGF3cyBjYW4gY29tZSB0byBnZXQgdGhlbSwgc28gc2hlJ3MgZmVlbGluZyBwcmV0dHkgYmFkbHkgdGhhdCBzaGUncyBxdWFyYW50aW5lZCByaWdodCBub3cuLiAKSVBBIHNlY3JldGFyeSBLTiBTdXJlc2ggZmlsZWQgdGhlIHBldGl0aW9uIGFmdGVyIHRoZSBjaXR5IHBvbGljZSByZXN0cmFpbmVkIHRoZSBhc3NvY2lhdGlvbiBmcm9tIGhvbGRpbmcgcG9rZXIgZ2FtZXMgYXQgdGhlIFlNQ0EgSW50ZXJuYXRpb25hbCBDbHViIGluIEFobWVkYWJhZC4KRHVrZSBoaWdobGlnaHRzIGNvbmNlcHRzIGZyb20gdGhlIEhldGVyb2RveCBBY2FkZW15LCBhbiBvcmdhbml6YXRpb24gZm9ybWVkIHRvIGltcHJvdmUgdmlld3BvaW50IGRpdmVyc2l0eSBpbiBhY2FkZW1pYTogQ29tbWl0IHRvIHRyYW5zcGFyZW5jeSBhbmQgc2hhcmluZyBpbmZvcm1hdGlvbjsgYXBwbHkgY29uc2lzdGVudCBzdGFuZGFyZHMgdG8gY2xhaW1zIG1hZGUgYnkgc2VwYXJhdGluZyBpbmZvcm1hdGlvbiBmcm9tIHdobyBpcyBwcm92aWRpbmcgaXQ7IGN1bHRpdmF0ZSBkaXNpbnRlcmVzdGVkbmVzczsgc2VlayAib3V0Y29tZSBibGluZG5lc3MiIHRvIHRoZSBoeXBvdGhlc2lzIGJlaW5nIHRlc3RlZDsgYW5kIGVuY291cmFnZSBza2VwdGljaXNtIGFuZCBkaXNzZW50LgpXaGljaCBpcyB3aHkgaW52ZXN0aWdhdG9ycyB0b29rIG5vdGUgd2hlbiBhIHJldGlyZWQgY291cGxlIGZyb20gTWljaGlnYW4sIEplcnJ5IGFuZCBNYXJnZSBTZWxiZWUsIG1hZGUgJDI2IG1pbGxpb24gd2lubmluZyB2YXJpb3VzIHN0YXRlIGxvdHRlcnkgZ2FtZXMgZG96ZW5zIG9mIHRpbWVzLiBUaGlzIGlzIG5vdCBhIHN0b3J5LCB0aG91Z2gsIG9mIGEgY29uLCBvciBhIHNjYW0sIG9yIGFuIGluc2lkZSBqb2IuIE5vLCB0aGlzIGlzIGEgYmFsbGFkIG9mIGEgY291cGxlIGZyb20gc21hbGwgdG93biBBbWVyaWNhIHdobyBkaWQgc29tZXRoaW5nIHRoYXQgbW9zdCBwZW9wbGUgb25seSBkcmVhbSBvZi4gCkh1bWFucyBhcmVuJ3Qgc3R1cGlkLCB3ZSdyZSB0aGUgbW9kZXJuIGRheSBkZXNjZW5kZW50IHZpY3RpbXMgb2YgcGVvcGxlIHdobyBydXRobGVzc2x5IGV4cGxvaXRlZCB0aGVpciBlbnZpcm9ubWVudHMgYmVjYXVzZSBvZiAicHJvZ3Jlc3MiLiBBbnkgd2hvIHN0b29kIGluIHRoZSB3YXkgb2YgdGhhdCBnb3Qgc2hvdmVkIG91dCB0aGUgd29ybGQgb3ZlciwgZnJvbSB0aGUgS2hvaXNhbiBpbiBTb3V0aGVybiBBZnJpY2EgKGxvbCwgeW91IGRvbid0IHRoaW5rIHRoZXkncmUgZ2l2aW5nIHRoZSBsYW5kIHN0b2xlbiBmcm9tIHdoaXRlIGZhcm1lcnMgdG8gdGhlIEtob2lzYW4gYmxhY2tzLCBkbyBwZW9wbGUgdGhpbmsgdGhhdD8gSXQncyBhbGwgdGhlIEJhbnR1IGJsYWNrcyB3aG8gZ2V0IGl0LiBUaGV5J3JlIHRoZSBncm91cCBvZiBBZnJpY2FucyB3aG8gaGFzIGJlZW4gc3lzdGVtYXRpY2FsbHkgcHVzaGluZyBvdXQgb3RoZXJzIGZvciB0aG91c2FuZHMgb2YgeWVhcnMgbm93LCBhbmQgdGhleSBzdGFydGVkIGluIGZhciB3ZXN0IEFmcmljYSkuLiAKQmlzb24sIG9yIGJ1ZmZhbG8sIHRoYXQgaXMgcGFzdHVyZSByYWlzZWQgYW5kIG9yZ2FuaWMgaXMgYSBzdXBlcmlvciBtdXNjbGUgYnVpbGRpbmcgZm9vZC4gQmlzb24gaXMgaGlnaCBpbiBvbWVnYSAzIGZhdHMgKGVuaGFuY2UgYW5hYm9saWMgc2lnbmFsaW5nIGFmdGVyIHRyYWluaW5nKSwgcHJvdmlkZXMgY3JlYXRpbmUgKHRoZSBhbmFlcm9iaWMgZW5lcmd5IHNvdXJjZSksIGNhcm5pdGluZSAodGhlIG51dHJpZW50IHRoYXQgYWlkcyBpbiBmYXQgZm9yIHVzZSBhcyBmdWVsKSwgZ2x1dGFtaW5lIChrbm93biBhcyBhIG11c2NsZSBidWlsZGVyIGFuZCBpbW11bmUgYm9vc3RlciBieSBib2R5IGJ1aWxkZXJzKSwgZ2x5Y2luZSBhbmQgZ2x1dGF0aGlvbmUgKGltbXVuZSBib29zdGVycyksIGFuZCBDTEEgKGFudGkgaW5mbGFtbWF0b3J5IGFuZCBpbW11bmUgZW5oYW5jaW5nKS4KWW91IHNob3VsZG4gZ28gdG8gZmFpbHVyZSByZWd1bGFybHkuIApJZiB5b3UgdGhlIGVtcGxveWVlLCBpdHMgYWx3YXlzIHRoZSBndXkvZ2lybCBvdmVyIHRoZXJlLCB0aGUgZ3V5L2dpcmwgZXZlcnlvbmUgZG9lc24gbGlrZSBvciBhZ3JlZWQgdG8gYmxhbWUuIApQaWN0dXJlcyBhcmUgd29ydGggYSB0aG91c2FuZCB3b3Jkcy4gQXQgaG9tZSBhbmQgYXQgc2Nob29sLCBub3cgdGhhdCBoZSBpcyBvZiBzY2hvb2wgYWdlIGF0IDcgeWVhcnMgb2xkLCBEYXNhbiBicmluZ3MgdXMgdGhlIHBpY3R1cmUgdGhhdCByZXByZXNlbnRzIGhpcyBuZWVkcyBvciBkZXNpcmVzLiAKVGhlIGdyZWF0IG1hbiBoYWQgbm9ib2R5IHRvIGJsYW1lLCB0aG91Z2g6IGhlIHJhbiBvdXQgbGFzdCBtYW4gUHVkIFRodXJsb3cgd2hpbGUgbG9va2luZyBmb3IgcnVuIE5vLiBIaWdoIG9uIGNvbmZpZGVuY2UgYWZ0ZXIgd2lubmluZyB0aGUgZmlyc3QgZ2FtZSwgaW4gQWRlbGFpZGUsIGJ5IGZpdmUgd2lja2V0cywgSW5kaWEgY2xlYW5lZCB1cCB0aGUgaG9zdHMgYnkgdGVuIHdpY2tldHMsIGNoYXNpbmcgNjYgaW5zaWRlIHRlbiBvdmVycyBhZnRlciByYWluIGludGVydmVuZWQuIFRpZ2h0IGJvd2xpbmcgYW5kIGV4Y2VsbGVudCBmaWVsZGluZyBtYWRlIHRoZSB2aWN0b3J5IGFsbCB0aGUgbW9yZSBjb21wcmVoZW5zaXZlLiAKSSBtYWtpbmcgbXkgcmFpc2UgcHJldHR5IGJpZyB0b28uIApHZXQgYSBnb29kIHNwb3Qgb24gdGhlIGdsYXNzLCBJIGxpa2UgdG8gZ2V0IHRoZSBmYXIgc2lkZSBiZWxvdyB0aGUgZ29hbCBsaW5lLiAKSSd2ZSBoYWQgdGhlIHNhbWUgdGVycmlibGUgZXhwZXJpZW5jZSwgYnV0IGl0IHNlZW1lZCBldmVyeSB0aW1lIHRoZSBzcG90cyBzdGFydGVkIHRvIGdvIGF3YXksIG1vcmUgcG9wcGVkIHVwIGp1c3QgYXMgYW5ncnkgYXMgdGhlIGxhc3QuIApBbnl3YXksIGJhY2sgdG8gdGhlIHRvdXJuYW1lbnQuIApKb3MgT2xpdmVpcmEgd2FzIHRoZSBtdWx0aSBsaW5ndWFsIHZvaWNlIGFydGlzdCB3aG8gdm9pY2VkIEpvcyBDYXJpb2NhIGFuZCBhbHNvIGR1YmJlZCBtYW55IERpc25leSBmaWxtcyBpbnRvIFNwYW5pc2gsIFBvcnR1Z3Vlc2UgYW5kIEl0YWxpYW4uLiAKQm90aCBvZiB0aGUgbXVzaWMgdmlkZW9zIGFyZSBwcmFjdGljYWxseSB0aGUgZXhhY3Qgc2FtZS4gCklmIHlvdSB3YW50IENoYW1waW9uIG9mIHRoZSBHb2RzICg1MC81MCBIYWxsIG9mIE1vbnVtZW50cykgaXRzIGV2ZW4gbG9uZ2VyIGJ1dCBzb21lIHN0dWZmIGZyb20gR1dBTU0gY2FycmllcyBvdmVyLiAKQWRkIHRvIHRoaXMgdGhlIGFycmVzdGluZyBvZiBhbiBvY2Nhc2lvbmFsIHJvaXN0ZXJlciBvciBwaWNrcG9ja2V0LCB0aGUgcmFja2V0IG9mIHRoZSBtYW4gd2hvIGFsd2F5cyBsaWtlcyB0byBoZWFyIGhpcyBvd24gdm9pY2UgaW4gdGhlIGJhdGhyb29tLCBvciB0aGUgZW50aHVzaWFzdCB3aG8gcGx1bmdlcyBpbnRvIHRoZSBzd2ltbWluZyB0YW5rIHdpdGggdW5jb25zY2lvbmFibGUgbm9pc2UgYW5kIHNwbGFzaGluZy4gQmVzaWRlcyBhbGwgdGhvc2Ugd2hvc2Ugdm9pY2VzLCBpZiBub3RoaW5nIGVsc2UsIGFyZSBnb29kLCBpbWFnaW5lIHRoZSBhcm1waXQgcGx1Y2tlciB3aXRoIGhpcyBwZW5ldHJhdGluZywgc2hyaWxsIHZvaWNlLCAgIGZvciBwdXJwb3NlcyBvZiBhZHZlcnRpc2VtZW50LCAgIGNvbnRpbnVhbGx5IGdpdmluZyBpdCB2ZW50IGFuZCBuZXZlciBob2xkaW5nIGhpcyB0b25ndWUgZXhjZXB0IHdoZW4gaGUgaXMgcGx1Y2tpbmcgdGhlIGFybXBpdHMgYW5kIG1ha2luZyBoaXMgdmljdGltIHllbGwgaW5zdGVhZC4gVGhlbiB0aGUgY2FrZXNlbGxlciB3aXRoIGhpcyB2YXJpZWQgY3JpZXMsIHRoZSBzYXVzYWdlbWFuLCB0aGUgY29uZmVjdGlvbmVyLCBhbmQgYWxsIHRoZSB2ZW5kb3JzIG9mIGZvb2QgaGF3a2luZyB0aGVpciB3YXJlcywgZWFjaCB3aXRoIGhpcyBvd24gZGlzdGluY3RpdmUgaW50b25hdGlvbi4uIApJZiB5b3UgbGlrZSBQYWkgR293LCB5b3UgbWlnaHQgZW5qb3kgYmVpbmcgdGhlIHBhc3NpdmUgaW52ZXN0b3IuIApBbG9uZyB3aXRoIHRoYXQsIHNvbWUgZm9sa3MgaGF2ZSBiZWVuIGFza2luZyBmb3IgcHJvb2YgdGhhdCBpdCBkb2VzIGxvd2VyIHN1aWNpZGUgcmF0ZXMuIApDYXBpdGFsaXNtIGlzIGEgcHJveHkgZm9yIGdvZC9mYXRlL2Rlc3RpbnkgYW5kICJ0aGUgd2F5IGxpZmUgaXMiIGJ1dCBjb21tdW5pc20gYWN0dWFsbHkgdHJpZXMgdG8gYWx0ZXIgdGhlIHN0YXR1cyBxdW8gd2hlcmUgcGVvcGxlIHN1ZmZlciBhbmQgZGllIG5lZWRsZXNzbHkuIApZb3UgY2FuIHNlZSB0aGUgcmVzdWx0aW5nIGFkdmVydGlzZW1lbnRzIGluIHRoZSBzaWRlYmFyLCBhbmQgYXMgc3BvbnNvcmVkIHBvc3RzLiAKSXQgdHVybnMgb3V0LCB3YWxraW5nIGRvd24gdGhlIHN0cmVldCBhbmQgY2F0Y2hpbmcgUG9rZW1vbiBpcyBqdXN0IGFzIGZ1ZmlsbGluZyBhcyBoYXZpbmcgYSBkZWVwIGNvbnZlcnNhdGlvbi4gClRoZSBWaWtpbmdzIGFyZSBub3RoaW5nIGJ1dCBsb3NlcnMgYW5kIGFsd2F5cyB3aWxsIGJlLiBJdCdzIGEgZ29vZCB0aGluZyB0aGVyZSBpcyBXRFNNIFJhZGlvIDcxMCBzbyB3ZSBjYW4gYXQgbGVhc3QgbGlzdGVuIHRvIHRoZSBnYW1lLiAKQmVzaWRlcyBiZWluZyBjb21wbGV0ZWx5IGNsdWVsZXNzIGF0IG15IGpvYiwgSSB3YXMgbm93IHdvcmtpbmcgZm9yIHRoZSB0b3AgMSUgb2YgdGhlIDAuMDAxJSBpbiBteSBsb2NhbCBhcmVhLCBhbmQgaXQgd2FzIGhpZ2hrZXkgZGVncmFkaW5nLiBFdmVyeWRheSBJIGNvbWUgaW50byB3b3JrIGFuZCB3YWxrIHBhc3QgdGhlIGxvdCB0aGF0IHdhcyBmaWxsZWQgd2l0IHRoZSBtb3N0IGV4b3RpYyBGZXJyYXJpcywgbGFtYm9zLCBhbmQgdGhlIGhpZ2ggZW5kIE1lcmNlZGVzIGV0Yy4gU28gSSBjYW4gc2VydmUgdGhlIG1lbWJlcnMgZml2ZSBzdGFyIGRpbmluZyBFVkVSWSBEQVkuLiAKMy4gClRoZSBjb21tZW50IHdhcyBub3QgYW5vdGhlciBzdHJhdy4gVGhhdCB0aGUgcG9pbnQuIEp1c3QgYmVjYXVzZSBzb21lb25lIHdobyB3YXMgYWxyZWFkeSBvbiBlZGdlIGZlZWxzIG9uZSB3YXkgYWJvdXQgc29tZXRoaW5nIGRvZXMgbm90IGNoYW5nZSB3aGF0IG9iamVjdGl2ZWx5IGhhcHBlbmVkIGFuZCB3aGF0IG9iamVjdGl2ZWx5IGhhcHBlbmVkIHdhcyBub3Qgc2V4aXN0IG9yIGNvbmRlc2NlbmRpbmcuIFNoZSBhY3RlZCBhcyB0aG91Z2ggc2hlIGRpZG4ga25vdyB0aGUgdGVybS4gRGlkIHNoZSBrbm93IHRoZSB0ZXJtPyBEb2VzbiBtYXR0ZXIuIElmIHNoZSBhY3RlZCBsaWtlIHNoZSBrbmV3IHRoZSB0ZXJtIGFuZCB0aGVuIHRoZSBjcmVlcCBhc2tlZCBoZXIgdGhlbiB5b3UgbWlnaHQgaGF2ZSBhbiBhcmd1bWVudCwgYnV0IHRoYXQgbm90IHdoYXQgaGFwcGVuZWQgYW5kIHlvdXIgc3BlY3VsYXRpb24gaXNuIHRydXRoIHdoZW4gdGhlIGV2aWRlbmNlIHN1Z2dlc3RzIGFueXRoaW5nIGJ1dC4KV29yc2UgeWV0LCBpZiB0aGUgc2VsbGVyIHB1dHMgdGhlIHByb3BlcnR5IGJhY2sgb24gdGhlIG1hcmtldCBhbmQgcmVjZWl2ZXMgbGVzcywgc2hlIGNvdWxkIGJlIG9uIHRoZSBob29rIGZvciB0aGUgZGlmZmVyZW5jZS4uIApXaGVuIEkgd2FzIGEgbGl0dGxlIHRoZSBuZWlnaGJvcmhvb2Qga2lkcyBpbmNsdWRpbmcgbXlzZWxmIHdvdWxkIHBsYXkgYSBnYW1lIGNhbGxlZCBzbWFja2VycywgaXQgd2FzIG9uZ29pbmcgZm9yIGF0IGxlYXN0IHllYXJzIGFuZCBpdCB3YXMgYXdmdWwsIHdlIHN0YXJ0ZWQgd2l0aCA2IG9yIDcga2lkcyBhbmQgdGhlIGdyb3VwIGNoYW5nZWQgb3ZlciB0aW1lIGJ1dCB0aGUgZ2FtZSBuZXZlciBkaWQsIHRoZSBvYmplY3RpdmUgd2FzIHRvIG5vdCB0ZWxsIHlvdXIgcGFyZW50cywgaWYgeW91IHRvbGQgdGhlbSB5b3Ugd2VyZSBvdXQuIEFuZCBzbyB0aGVyZSB3YXMgYSAic21hY2tlciIgYW5kIHRoZSBzbWFja2VycyBqb2Igd2FzIHRvIHNtYWNrIHNvbWVvbmUgYXMgaGFyZCBhcyB5b3UgY291bGQgYW5kIGlmIHlvdSBnb3QgdGhlbSB0byBmYWxsIG92ZXIgdGhlbiB5b3Ugd2VyZW4ndCBhbGxvd2VkIHRvIGdldCBzbWFja2VkIHRoZSBuZXh0IHJvdW5kIGFuZCB0aGUgcGVyc29uIHdobyBnZXRzIHNtYWNrZWQgYmVjb21lcyB0aGUgbmV3IHNtYWNrZXIsIHlvdSB3YW50ZWQgdG8gY2F0Y2ggdGhlbSBvZmYgZ3VhcmQgZm9yIG1vc3QgZWZmaWNpZW5jeSBzbyBzaW5nbGUgdHVybnMgY291bGQgZ28gZm9yIGEgY291cGxlIGhvdXJzIG9yIGEgY291cGxlIGRheXMsIHdlIHdvdWxkIGtlZXAgcGxheWluZyBpdCB3aGlsZSB3ZSBkaWQgb3RoZXIgc3R1ZmYgc28gaXQgd2FzIGVhc3kgdG8gZm9yZ2V0IGFuZCBnZXQgY2F1Z2h0IG9mZiBndWFyZCBhbmQgYW55b25lIHdobyB0b2xkIHRoZWlyIHBhcmVudHMgd2FzIG91dCBmb3JldmVyIHdlIGdvdCBwcmV0dHkgaW50ZW5zZSBzaW1wbHkgYmVjYXVzZSB0aGVyZSB3YXMgbm8gb3RoZXIgcnVsZXMgc28gd2UgaGFkIGNyb3RjaCBzaG90cywgc3RpY2tzLCBwdW5jaGVzLCBraWNrcyB5b3UgbmFtZSBpdCBhbmQgd2UgZ290IGh1cnQgYWxsIHRoZSB0aW1lLCBJIHJlbWVtYmVyIGdldHRpbmcgc21hY2tlZCBzbyBoYXJkIHRoYXQgbXkgdG9vdGggZmVsbCBvdXQgYW5kIHRvIHRoaXMgZGF5IEkgc3RpbGwgaGF2ZW4ndCB0b2xkIG15IHBhcmVudHMgc28gc3VjayBpdCBldmVyeW9uZSBlbHNlIHdobydzIGFsbCBpbiBjb2xsZWdlIGFuZCBoYXMga2lkcyBhbmQgd2hhdGV2ZXIgbm93IEkgd2luLiAKRWRpdDogbWlmZmVkIHVwIHNvbWUgb2YgbXkgdGVuc2VzLiAKKDMpIFN1cmUsIGJ1dCB0aGlzIGlzIGEgdHdvIHdheSBzdHJlZXQuIFBlb3BsZSB3YW50IG1vZCBwYXJ0aWNpcGF0aW9uIHdpdGggaGVscGZ1bCByZXBsaWVzIGFuZCB5ZXQgd2hlbiB3ZSBkbyB0aGF0LCB3ZSBnZXQgc2hpdCBvbiBhbnl3YXlzLiBXb3VsZCB5b3UgZmVlbCBtb3RpdmF0ZWQgdG8gcG9zdCBoZXJlIGdpdmVuIHRoYXQgdHJlYXRtZW50PwpWaWV0bmFtIDE5NjQgKEd1bGYgb2YgVG9ua2luIEluY2lkZW50LCB0aGUgVVMgbHlpbmcgYWJvdXQgYmVpbmcgYXR0YWNrZWQpR3VsZiBXYXIgSSAxOTkwIChOYXlpcmFoLCB0aGUgVVMgbHlpbmcgYWJvdXQgYmFiaWVzIGluIGluY3ViYXRvcnMpR3VsZiBXYXIgSUkgMjAwMyAoV01EcyBpbiBJcmFxLCB0aGUgVVMgbHlpbmcgYWJvdXQgU2FkZGFtcyBXTURzKU9mIGNvdXJzZSwgR2VybWFucyBhcmUgbm90IHRydXN0aW5nIHRoZSBVUyBnb3Zlcm5tZW50IG5vciBkbyB0aGV5IGhhdmUgYW55IHJlYXNvbiB0byB0aGluayBpdCByZWxpYWJsZS4KIldlIGFyZSBub3cgb2ZmZXJpbmcgb3VyIGNsaWVudHMgYW4gb3Bwb3J0dW5pdHkgdG8gZ2V0IGEgYm9udXMgb24gZXZlcnkgZGVwb3NpdCB0aGV5IG1ha2UsIHN0YXJ0aW5nIGZyb20gYXMgbG93IGFzIDIxIHBvdW5kcy4gT3VyIHdlbGNvbWUgYm9udXMgd2lsbCBnaXZlIHBsYXllcnMgMTAwJSBtYXRjaGluZyBib251cyBvbiB0aGVpciBmaXJzdCBkZXBvc2l0IGFuZCAxNTAlIG1hdGNoaW5nIGJvbnVzIG9uIHRoZWlyIHNlY29uZCBkZXBvc2l0LCB3aGVuIGRlcG9zaXRpbmcgYXMgbGl0dGxlIGFzIDIwIHBvdW5kcy4gV2UgZmVlbCB0aGF0IHRvbyBtYW55IGNhc2lub3MnIHRvZGF5IHNwZW5kIGEgbG90IG9mIGVuZXJneSB0b3dhcmRzIHRoZSBoaWdoIHJvbGxlci4gClNsZWVweXRpbWUgR29yaWxsYSBNdXNldW0gICBPZiBOYXR1cmFsIEhpc3Rvcnk6IEkgdXNlZCB0byBoYXZlIHRoaXMgYWxidW0geWVhcnMgYWdvLCBzb2xkIGl0IHRvIGEgZnJpZW5kLCB3aG8gdGhlbiBzb2xkIGl0IHRvIG15IGNvdXNpbmcgd2hvIHNvbGQgaXQgYmFjayB0byBtZSBsYXN0IHdlZWsuIEkgaGFkIG9ubHkgaGVhcmQgdGhlIGFsYnVtIHR3aWNlIGFsbW9zdCAxMiB5ZWFycyBhZ28gKEkgZ290IGl0IGEgbW9udGggYWZ0ZXIgcmVsZWFzZSwgSSB3YXMgYSBodWdlIGZhbiBvZiBJZGlvdCBGbGVzaCBiYWNrIHRoZW4pIGFuZCBkaWQgbm90IGxpa2UgaXQuLiAKRGVuIGVyc3RlbiBUZWlsIGRlciBSZWlzZSBuYWNoIEF0aGVuIGVybGVkaWd0IGRlciB2ZXJzaWVydGUgVXJsYXViZXIgbm9jaCBtaXQgbGlua3MuIApIZSBhYnNvbHV0ZWx5IGhhdGVkIHRoZSBmYWN0IHRoYXQgYW55b25lIGV2ZW4gYm90aGVyZWQgYnJpbmdpbmcgdGhlc2UgY3JpbWVzIHRvIHRyaWFsLiAKUHJvbW90ZSBhbmQgcGFydGljaXBhdGUgaW4gc3R1ZGVudCBsZWFkZXJzaGlwIGRldmVsb3BtZW50IG9wcG9ydHVuaXRpZXMgZm9yIFJlY3JlYXRpb24gc3R1ZGVudCBzdGFmZjsKTGF2YWwgbG9jYXRpb24uIApHbGFzc3BvbnkgIDM1IHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwpUaGV5IGFsc28gZGlkbiB0YWtlIHJha2UgaW50byBhY2NvdW50LiBUaGVyZSB3YXMgYSB0aW1lIHdoZW4gYWxsIG9mIHVzIHdlcmUgcGxheWluZyAxMDAlIG1pbiBvcGVuIG90YiBhbmQgZGVmZW5kaW5nIGxpa2UgODglIGluIHRoZSBiYi4gSXQgd2FzIHNpbGx5LiAKSXQncyBhbHNvIHByb2dyZXNzIGJlY2F1c2UgdGhlc2Ugd29tZW4gYW5kIG1lbiBhcmUgc3RhcnRpbmcgdG8gYmUgdHJlYXRlZCBhcyB2aWN0aW1zIGluc3RlYWQgb2YgY3JpbWluYWxzLCBpbmNyZWFzaW5nIHRoZSBsaWtlbGlob29kIHRoZXkgd2lsbCByZWNlaXZlIHRoZSBoZWxwIHRoZXkgbmVlZC4gVGhpcyB3ZWVrIGF0IHRoZSBVbml2ZXJzaXR5IG9mIENlbnRyYWwgRmxvcmlkYSBzb21lIGxvY2FsIHdvbWVuIHdobyBzdWZmZXJlZCB0aHJvdWdoIHllYXJzIG9mIGZvcmNlZCBwcm9zdGl0dXRpb24gb3Igb3RoZXIgc2V4IGFidXNlIHdpbGwgYmUgc2VlbiBhcyBzb21ldGhpbmcgZWxzZSBlbnRpcmVseTogYXJ0aXN0cy4gClRoZXJlIGFyZSBhIGxvdCBvZiB3aW5uaW5nIGNoYW5jZXMuIFlvdXIgd2lubmluZyBkZXBlbmRzIG9uIHZhcmlvdXMgZmFjdG9ycy4gSXQgaXMgZmFjdCB0aGF0IHNsb3RzIGFyZSBwdXJlbHkgZ2FtZSBvZiBsdWNrIGFuZCBjYW4gbm90IGJlIG1hbmlwdWxhdGUuIApQcmFjaHRpZywgZG9vciBpZXRzIHdhdCBpayB2dWxrYW5pc2NoZSB2bGFrdGVzIG5vZW0sIG1ldCB6aWNodCBvcCB1aXRnZWRvb2ZkZQpIb3dldmVyLCBoZXIgYWRvcHRpdmUgdW5jbGUgYmVnYW4gbW9sZXN0aW5nIGhlciBhbmQgb25lIG5pZ2h0IHNoZSBtdXJkZXJlZCBoaW0gaW4gaGlzIHNsZWVwLiBBZnRlciB0aGF0IHNoZSByYW4gYXdheSBhbmQgdG9vayB0byB0aGUgc3RyZWV0cy4gCk91ciByZXN0YXVyYW50IG9mZmVycyBmcmVzaCBtYWRlIHNvdXBzLCBob21lIGNvb2tlZCBtZWFscyB3aXRoIGRhaWx5IGNhZiBzcGVjaWFscywgYSB2YXJpZXR5IG9mIGRlbGljaW91cyBtaWxrc2hha2VzIGFuZCBmcmVzaCBtYWRlIHBpZXMuIFdlIGhhdmUgOTkgc2xvdCBtYWNoaW5lcywgMiBCbGFja2phY2sgdGFibGVzLCAxIHBva2VyIHRhYmxlIGFuZCAxIDEgYXJtZWQgYmFuZGl0IHNsb3QgbWFjaGluZSBhdmFpbGFibGUgZm9yIHlvdXIgZnVuLkVzdGFibGlzaGVkIGluIDE5NzkgdGhlIFNlYXJjaGxpZ2h0IE51Z2dldCBDYXNpbm8gd2FzIGEgZHJlYW0gY29tZSB0cnVlIGZvciBXYXJyZW4gYW5kIFZlcmxpZSBEb2luZy4gClRoaXMgc2VxdWVuY2Ugd2VsY29tZXMgZGlmZmVyZW5jZXMgaW4gYm9keSB0eXBlcywgYWdlcyBhbmQgcmFuZ2VzIG9mIGZsZXhpYmlsaXR5IHRvIGV4cGVyaWVuY2UgdGhlIHRlY2hucWl1ZXMuIEkgbWFrZSBhIHNlbGVjdGlvbiBvZiBwb3NpdGlvbnMgYW5kIG1hbm91dmVycyBmcm9tIGEgbG9uZyBsaXN0IGJhc2VkIG9uIHlvdXIgbmVlZHMgYW5kIGRlc2lyZXMuIApZb3Ugd291bGQgdG9vLCBpZiB5b3Ugd2FudGVkIGl0IHRvIHN1cHBvcnQgaHVtYW5pdHkgZm9yIGEgbG9uZ2VyIHBlcmlvZCBvZiB0aW1lLlsgXWN1YmVyYWlsIDAgcG9pbnRzIDExIGhvdXJzIGFnby4gCkhhbmQgNTogSSBob25lc3RseSB0aG91Z2h0IGFib3V0IGNoZWNraW5nIHRoaXMgYmFjayBvbiB0aGUgcml2ZXI7IG9uIHRoZSB0dXJuIEkgd2FzIGhvcGluZyBoZSBoYWQgQTUgb3IgQTQgc28gSSBkaWRuJ3QgdGhpbmsgdGhlIHJpdmVyIHdhcyB0b28gZ3JlYXQgZm9yIHVzLiAKRG8geW91IGxlYWQgYW4gYWN0aXZlIGxpZmVzdHlsZSBvciBhIHNlZGVudGFyeSBvbmU/CkJ1dCwgaWYgeW91IHdhbnQgYSBjbGFzc2ljIGxvb2sgZm9yIHlvdXIgcG9rZXIgcm9vbSwgdGhlIHBva2VyIHRhYmxlIGNsb3RoIHlvdSBtYXkgd2FudCB0byBnbyB3aXRoIGlzIHRoZSBjYXNpbm8gZ3JhZGUgc2luZ2xlIGNvbG9yLiBXaGV0aGVyIHlvdSBnbyB3aXRoIHJlZCwgZ3JlZW4sIG9yIGJsdWUgKHRoZSBjbGFzc2ljIGNhc2lubyBjb2xvcnMpLCB5b3UnbGwgYmUgc3VyZSB0byBnaXZlIHlvdXIgcG9rZXIgcm9vbSB0aGF0IHByb2Zlc3Npb25hbCBsb29rLiAKVGhlIHRpdGxlIG9mIHRoZSBwb3N0IGlzIGludGVudGlvbmFsbHkgaW5mbGFtbWF0b3J5LiBJIG5vIFRydW1wIGZhbiBidXQgcGVvcGxlIHJlYWxseSBuZWVkIHRvIHN0YXJ0IG1ha2luZyBpdCBhIGhhYml0IHRvIHJlYWQgdGhlIGFjdHVhbCBhcnRpY2xlLCBhIGxvdCBvZiBmYWxzZSBhc3N1bXB0aW9ucyBhcmUgbWFkZSBmcm9tIHRoZSB0aXRsZS4gT1Agc2hvdWxkIGhhdmUgdXNlZCB0aGUgYWN0dWFsIHRpdGxlIG9mIHRoZSBhcnRpY2xlIGluc3RlYWQgb2YgaW50cm9kdWNpbmcgaGlzIG93biBzcGluLiBUaGUgdGl0bGUgb2YgdGhlIGFydGljbGUgaXMgIlRydW1wIGJ1ZGdldCB0byBpbmNsdWRlICQxMDBNIGZvciBJdmFua2EncyB3b21lbidzIGZ1bmQiCkxhdGVyLCBpbiAxOTkzLCBoZSB3YXMgcmVsb2NhdGVkIHRvIENvbG9yYWRvIHRvIHN0YXkgd2l0aCBoaXMgZGF1Z2h0ZXIgQXVkIE1vcnN0b2VsIGFuZCBoaXMgZ3JhbmRzb24gVHJ5Z3ZlIEJhdWdlIGEgcGFpciB3aG8gaGFkIHBsYW5zIG9mIG9uZSBkYXkgb3BlbmluZyB1cCBhIGNyeW9uaWNzIGNlbnRlciBvZiB0aGVpciBvd24uIApUaGUgYmxhY2tzIGFyZSBhIHRhZCBzb2Z0IGhvd2V2ZXIsIHNvIHlvdSBsb3NpbmcgYSBiaXQgb2YgZGV0YWlsIGluIGhlciBzaGlydCBhbmQgaGF0LiAKSGUgdHJhdmVsbGVkLCB0aG91c2FuZHMgb2YgbWlsZXMgb24gaGlzIG1hbnkgYmlrZXMgdGhyb3VnaCBDYW5hZGEsIHRoZSBVUyBhbmQgRXVyb3BlLCBhbmQgZW5qb3llZCB0aGUgZnJpZW5kc2hpcCBvZiB0aGUgYnJvdGhlcmhvb2QuIEhlIGFsc28gd2FzIGluc3RpbGxlZCBpbiB0aGUgRHVudHJvb24gY29tbXVuaXR5IGFzIGNoaWVmICJNci4gClRoZSB1ayBoYXMgdGhpcyBtb2RlbCAobm8gY2d0IG9uIGZhbWlseSBob21lKSBhbmQgaXQgd29ya3MgcHJldHR5IHdlbGwuIFJlZHVjZXMgdGhlIHJhbXBhbnQgc3BlY3VsYXRpb24gYnkgaW52ZXN0b3JzIGJ1dCBhdm9pZGluZyBoYXJtIHRvIGZhbWlseSBob21lIG93bmVycwpBIGZldyB3ZWVrcyBsYXRlciB3aWxsIGNvbWUgVGhlIFNoZWQsIGFuIGV5ZSBwb3BwaW5nIGN1bHR1cmFsIGNlbnRlciBpbnNpZGUgYSBzcGlkZXJ3b3JrIHJpbW1lZCBnbGFzcyBzaGVsbCB0aGF0IGNhbiBzdHJldGNoIGxpa2UgYW4gYWNjb3JkaW9uIHRvIHN1aXQgZGlmZmVyZW50IHBlcmZvcm1hbmNlcy4gVGhlIGZpbmFsIGxlZyBvZiB0aGUgSGlnaCBMaW5lIGtub3duIGFzIFRoZSBTcHVyICAgbm90IHBhcnQgb2YgSHVkc29uIFlhcmRzIGJ1dCBncmFmdGVkIHRvIGl0IGF0IHRoZSBoaXAgICB3aWxsIGJlIGNvbXBsZXRlZCBhbmQgam9pbiB0aGUgcmVzdCBvZiB0aGUgcGFyayBhcm91bmQgdGhlIHNhbWUgdGltZS4uIApBbmFuYTAwMTYgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvCk91ciB0cm9vcHMgc3RpY2tlcnMgb3VyIG5pY2UgYW5kIGFsbCwgYnV0IGlmIHRoYXQgaXMgdGhlIGV4dGVudCBvZiBwZW9wbGVzIHN1cHBvcnQsIHRoaW5ncyBsaWtlIHRoaXMgd2lsbCBub3QgaW1wcm92ZSwgdGhleSB3aWxsIG9ubHkgZ2V0IHdvcnNlLiAKQ2hvb3NlIGEgY291cGxlIG9mIHBsYWNlcywgc3VjaCBhcyB5b3VyIGNoZXN0IGFuZCBuZWNrIGFuZCB3aGVuIGFwcGx5aW5nLCBob2xkIHRoZSBib3R0bGUgYSBnb29kIDEwIGluY2hlcyAoMjUuNCBjZW50aW1ldGVycykgYXdheSBmcm9tIHlvdXIgYm9keSB3aGVuIHlvdSBzcHJheS4gSWYgeW91J3JlIHdlYXJpbmcgYSBoZWF2aWVyIHNjZW50LCB0cnkgYXBwbHlpbmcgaXQganVzdCB0byB0aGUgbG93ZXIgcGFydCBvZiB5b3VyIGJvZHksIGxpa2UgYSBxdWljayBzcHJpdHogYmVoaW5kIHRoZSBrbmVlcy4gCkFuZCBsaWtlIGhlYWx0aCBjYXJlLCB0aGVyZSBhcmUgcmVhbCBjb3N0cyBpbiByZWFsIGh1bWFuIGxpdmVzLiBJbiBWZXJtb250LCBiZWNhdXNlIEdlbmVyYWwgRHluYW1pY3MgKGFuZCBHRSBiZWZvcmUgdGhlbSkgZGV2ZWxvcGVkIGFuZCBwcm9kdWNlZCBEZXBsZXRlZCBVcmFuaXVtIHdlYXBvbnMsIHRoZXJlIGFyZSBsYXJnZSBhbW91bnRzIG9mIHJhZGlvYWN0aXZlIHBvbGx1dGlvbiBseWluZyBhYm91dC4gRGVwbGV0ZWQgVXJhbml1bSB3ZWFwb25zIGFyZSBlZmZlY3RpdmUgYXQga2lsbGluZyB3aGVyZSB0aGV5IGFyZSBwcm9kdWNlZCAgbW9zdGx5IHRocm91Z2ggY2FuY2VyICAgdGhlbiBhZ2FpbiB3aGVyZSB0aGV5IGFyZSB1c2VkICBiZWNhdXNlIHRoZXkgZGlwcGVkIGluIG5vbiBmaXNzaW9uYWJsZSByYWRpb2FjdGl2ZSBtYXRlcmlhbCB0aGV5IGNhbiBnbyB0aHJvdWdoIGFueXRoaW5nICBhbmQgdGhlbiBvZiBjb3Vyc2UgdGhlIHBvcHVsYXRpb25zIGV4cG9zZWQgdG8gdGhlbSAgc29sZGllcnMgYW5kIGNpdmlsaWFucyAgY2FuIGRpZSBsYXRlciBmcm9tIGFsbCBzb3J0cyBvZiB1cmFuaXVtIHJlbGF0ZWQgaWxsbmVzc2VzLgpJbnN1cmVycyBhcmUgc2NyYW1ibGluZyBmb3IgTkVXIHdheXMgdG8gZ2FtZSB0aGUgc3lzdGVtLiBIZXJlIGluIE5ZQyBBTEwgdGhlIGV4Y2hhbmdlIHBsYW5zIGFyZSBITU9zICAgYnV0IEJDQlMgKGZvciBpbnN0YW5jZSkgd2hpY2ggaGFzIGhhZCBhIGh1Z2UgbmV0d29yayBvZiBkb2N0b3JzLCBhcHBhcmVudGx5IG9ubHkgc2lnbmVkIHVwIGEgZnJhY3Rpb24gb2YgdGhlIFBDUHMgbmVlZGVkIHRvIGhhbmRsZSBhbGwgdGhlc2UgbmV3bHkgaW5zdXJlZCBwZW9wbGUuClJlYWQgdGhyb3VnaCB0aGUgd2hvbGUgYm9vayBiZWZvcmUgeW91IGdldCBpbiB0b28gZGVlcC4gClJlbmV3IExpZmUsIGEgc3VwcGxlbWVudCBicmFuZCBvd25lZCBieSBDbG9yb3gsIGZhaWxlZCB3aXRoIGEgZmxpbXN5IHZpZGVvIHRoYXQgd2FzICJjb21wbGV0ZWx5IGFuZCB1dHRlcmx5IHNwZWN0YWN1bGFybHkgaW5lZmZlY3RpdmUsIiBSZXlub2xkcyBzYWlkLiAiQXMgbXkgR2VybWFuIENFTyB7QmVubm8gRG9yZXJdLCB3aG8gaGFzIGEgd29uZGVyZnVsIGVjb25vbXkgb2YgbGFuZ3VhZ2UsIHNhaWQ6ICdGYWlsdXJlLicgSSdtIHRvbGQgYXMgYSBDTU8gdG8gZmFpbCBmYXN0IGFuZCBjaGVhcC4gClRvbyBhZHZlbnR1cm91cy4gSGVyIGRhZCBkZWR1Y2VkIGNvcnJlY3RseSB0aGF0IEkgd2FzIGhpZGluZyBiZWhpbmQgc29tZXRoaW5nIGluIHRoZSBiYWNrIHlhcmQgYW5kIGhlIGZpbmFsbHkgZ290IG1lIHRvIGNvbWUgb3V0ISBUaGF0IHdhcyB0aGF0Li4gCiJJIGhhdmUgbm93IG9jY3VwaWVkIGJlYWNoZnJvbnQgcmVhbCBlc3RhdGUgaW4gbXkgY29tcGV0aXRvcidzIGhlYWQsIGFuZCB0aGF0IG1ha2VzIG1lIHNtaWxlLCIgRG9ub3ZhbiBzYWlkIG9uIHN0YWdlLiAiRXZlcnkgY29tcGFueSBpcyBndWlsdHkgaW4gYnVpbGRpbmcgYSBuYXJyYXRpdmUgaW4gaG93IHRoZXkgd2FudCB0aGUgd29ybGQgdG8gd29yayBhbmQgSSBsb3ZlIHRoZSBmYWN0IHdlIGJyb2tlIG91ciBpbmR1c3RyaWVzIG5hcnJhdGl2ZSB0d28gZGF5cyBhZ28uIFRoZXkncmUgZnJ1c3RyYXRlZC4iClNjaWVudGlmaWMgQW1lcmljYW4gSmFuIDIwMTEKSXQgd2FzIG5ldmVyIGZvcmNlZCBkaXZlcnNpdHkuIApUaGliZWF1bHQgc2xhbW1lZCBGb3JkJ3MgcGxhbiB0byBmaXJlIHRoZSBib2FyZCwgY2FsbGluZyBpdCBhICJyZWNrbGVzcywgY2hhb3RpYyBhcHByb2FjaC4iClBvd2VyZnVuayAgMSBwb2ludCAgc3VibWl0dGVkIDE0IGhvdXJzIGFnbwpPbmUgZmFjZXQgb2YgQXJzZW5hbCBwbGF5IG9wcG9uZW50cyBhcmUgZGVmaW5pdGVseSBzdGFydGluZyB0byBhY2NvdW50IGZvciBpcyBob3cgdGhleSBjb21iaW5lIHdpdGggdGhlaXIgZnVsbCBiYWNrcyAgIG5vIEFyc2VuYWwgcGxheWVyIGhhcyBtb3JlIFByZW1pZXIgTGVhZ3VlIGFzc2lzdHMgdGhhbiBIZWN0b3IgQmVsbGVyaW4uIFRoZWlyIGJlc3Qgb2ZmZW5zaXZlIHBlcmZvcm1hbmNlcyBoYXZlIGJlZW4gYmFzZWQgb24gZ2V0dGluZyBCZWxsZXJpbiBhbmQgTmFjaG8gTW9ucmVhbCBvciBTZWFkIEtvbGFzaW5hYyB0byB0aGUgYmFyIGxpbmUgdGhyb3VnaCBjb21iaW5hdGlvbiBwbGF5IHdpdGggQXJzZW5hbCBuYXJyb3cgbWlkZmllbGRlcnMuClVwZGF0ZWQgMjAxOSBQcmljZXMgUmV2aWV3cyBadXJpY2gKR2lybHMgZ2V0IG5lcnZvdXMgYmVsaWV2ZSBpdCBvciBub3QgXl9fXi4gCldoYXQgYXJlIHRoZSB0aGluZ3MgYSBSdXNzaWFuIHNwZWFrZXIgd291bGQgZG8/IERvIHRob3NlIHRoaW5ncy4gSW4ganVzdCBhIGZldyBtb250aHMgeW91ciBpZGVudGl0eSB3aWxsIGJlY29tZSBib3VuZCB1cCBpbiB5b3VyIHN5c3RlbXMvaGFiaXRzLiBBbmQgaXQgd2lsbCBiZSBoYXJkZXIgZm9yIHlvdSB0byBza2lwIHlvdXIgbGVhcm5pbmcgc2Vzc2lvbnMgYW5kIGVhc2llciB0byBkbyB0aGUgdGhpbmdzIHRoYXQgd2lsbCBhcmUgZ29pbmcgdG8gaGVscCB5b3UgcHJvZ3Jlc3MuIApJbiBkZW4gVHVybmllcmVuIGluIGRlbmVuIFNlYmFzdGlhbiBSdXRoZW5iZXJnIGJpcyBqZXR6dCBnZXNwaWVsdCBoYXQsIHdhciBpbW1lciBhbSBlcnN0ZW4gVGFnIEVuZHN0YXRpb24uLiAKSXZleSBpcyBvbmUgb2YgdGhlIGZldyBwb2tlciBwbGF5ZXJzIHRvIHN1Y2NlZWQgaW4gdGhlIGxhcmdlc3QgY2FzaCBnYW1lcyBpbiBib3RoIGxpdmUgYW5kIG9ubGluZSBwbGF5LCB3aGlsc3Qgbm90Y2hpbmcgdmljdG9yaWVzIGluIHRoZSB3b3JsZCdzIGJpZ2dlc3QgdG91cm5hbWVudHMgc2VlbWluZ2x5IGF0IHdpbGwuIEhpcyBleHBlcnRpc2UgcGVydmFkZXMgdGhyb3VnaCBhbGwgZm9ybWF0cyBvZiBwb2tlciAgIGEgcmFyZSB0YWxlbnQhIEJldHdlZW4gMjAwNCBhbmQgMjAwNiwgaGUgd2FzIGEgbWVtYmVyIG9mIHRoZSBpbmZhbW91cyAnQ29ycG9yYXRpb24nIHdoaWNoIHJlbGlldmVkIGJpbGxpb25haXJlIGJhbmtlciwgQW5keSBCZWFsLCBvZiBtaWxsaW9ucyBvZiBkb2xsYXJzIGluIHRoZSBiaWdnZXN0IGdhbWUgaW4gaGlzdG9yeS4gQmVhbCwgYSBnaWZ0ZWQgbWF0aGVtYXRpY2lhbiBhbmQgY2FyZCBwbGF5ZXIsIGhhZCBjb21lIHRvIFZlZ2FzIGFuZCBjaGFsbGVuZ2VkIHRoZSBsb2NhbCBiaWcgbmFtZSBwcm9mZXNzaW9uYWxzIHRvIGEgaGVhZHMgdXAgVGV4YXMgSG9sZGVtIGNvbnRlc3Qgd2l0aCBiZXR0aW5nIHVuaXRzIHJhbmdpbmcgYmV0d2VlbiAkMjVrLCAkNTBrLCAkMTAwayBhbmQgJDIwMGsuIEEgc3luZGljYXRlIG9mIHBsYXllcnMgY29tYmluZWQgdGhlaXIgYmFua3JvbGxzIGFuZCB0b29rIGl0IGluIHR1cm5zIHRvIHBsYXkgQmVhbC4gSXZleSdzIHJvbGUgaW4gdGhlIGdhbWUgd2FzIGNydWNpYWw7IGhlIHB1bGxlZCB0aGUgIlRoZSBDb3Jwb3JhdGlvbiIgb3V0IG9mIHRoZSByZWQgYnkgYmVhdGluZyBoaXMgb3Bwb25lbnQgb3V0IG9mICQxNm0uIEEgZGVtb3JhbGlzZWQgQmVhbCBlbmRlZCB0aGUgY2hhbGxlbmdlIHNob3J0bHkgYWZ0ZXIuClBlb3BsZSBoYXZlIGZpZ3VyZWQgdGhpbmdzIG91dCB0aGF0IEkgZG9uIHVuZGVyc3RhbmQsIGJlY2F1c2UgSSBjYW1lIHVwIHdoZW4gc3R1ZHkgdG9vbHMgd2VyZSBhIGxvdCB3ZWFrZXIuLiAKSSBqdXN0IGdvdCByZWFsbHkgZ29vZCBhdCBwYWxtaW5nIGNhbmR5LiBNeSBjaGlsZGhvb2QgaXMgYSBzZXJpZXMgb2YgbWV0YXBoeXNpY2FsIG9yIGhlYWx0aCBmYWRzIG9mIGhlcnMgSSB3YXMgZm9yY2VkIHRvIGdvIGFsb25nIHdpdGggb3Igc2hlIHdvdWxkIGxvc2UgaGVyIHNoaXQgYXQgbWUuLiAKR2V0dGluZyBtb3JlIHBlb3BsZSBvbiBiaWtlcyBpcyBvbmUgb2YgdGhlIHdheXMgdG8gZG8gdGhhdCwiIFByYW50IHNhaWQuIApBbmQgc3VyZSwgdGhlIE90dG9tYW4gRW1waXJlIGxvc3QgbGFuZCBhbmQgbWlsaXRhcnkgc3RyZW5ndGggb3ZlciBpdHMgbG9uZyBsaWZlLCBidXQgaGlzdG9yaWFucyB3aG8gZm9jdXMgb24gdGhvc2UgaXNzdWVzIGlnbm9yZSB0aGUgb3RoZXIgY3VsdHVyYWwsIHNjaWVudGlmaWMsIGFuZCBwb2xpdGljYWwgY2hhbmdlcyB0aGF0IGhhcHBlbmVkIGluIHRoZSBPdHRvbWFuIEVtcGlyZS4uIApWaWVsZSBkZXIgRmlzY2hlIHVuZCBkYXMgZ2VzYW10ZSBXaWxkIGtvbW1lbiB2b20gR3V0c2dlYmlldC4gRGEgZ2lidCBlcyB6dW0gQmVpc3BpZWwgZWluZW4gaGVydm9ycmFnZW5kZW4gUiB2b20gTWFpYm9jayBtaXQgUmhhYmFyYmVyICAgayBPZGVyIGVpbiBjb25maWVydGVzIFNlZXNhaWJsaW5nc2ZpbGV0IG1pdCBnciBTcGFyZ2VsLi4gCldoZW5ldmVyIHlvdSByZWdpc3RlciB0byBwbGF5IGEgdG91cm5hbWVudCwgdGhlIGhvdXNlIHRha2VzIGEgb25lIG9mZiByZWdpc3RyYXRpb24gZmVlICh3aGljaCBjb3VudHMgYXMgcmFrZSkuIE9idmlvdXNseSB3aGF0IHRoaXMgbWVhbnMgaXMgdGhlIG1vcmUgeW91IHBsYXksIHRoZSBtb3JlIHJha2UgeW91IHBheS4uIApUaGVzZSB0b3hpbnMgYmluZCBvciAiY2hlbGF0ZSIgdGhlIG1pbmVyYWwsIG1lYW5pbmcgdGhhdCB0aGV5IHdpbGwgcHVsbCB0aGUgYm9keSdzIGxldmVscyBvZiB1c2FibGUgbWFnbmVzaXVtIGFuZCB6aW5jIGRvd24uIFRoZSBSREEgaXMgYWJ5c21hbGx5IGxvdyBmb3IgYm90aCBvZiB0aGVzZSBudXRyaWVudHMgc28gcGVvcGxlIGFyZSBub3QgYXdhcmUgb2YgdGhlaXIgaW1wb3J0YW5jZS5DdXJjdW1pbiwgYSBudXRyaWVudCBmb3VuZCBpbiB0aGUgc3BpY2UgdHVybWVyaWMsIG1heSBiZSB0aGUgbW9zdCBwb3dlcmZ1bCBhbnRpIGluZmxhbW1hdG9yeSBoZXJiIGF2YWlsYWJsZS5JdCBjb3VudGVycyBpbmZsYW1tYXRpb24sIGhlbHBzIGRldG94aWZ5IGV4Y2VzcyBlc3Ryb2dlbiwgYW5kIHN1cHBvcnRzIHRoZSBib2R5J3MgbmF0dXJhbCBhbnRpb3hpZGFudCBzeXN0ZW0uIApTdWNjZXNzZnVsIGJyYW5kcyB3aWxsIGJlbmVmaXQgZnJvbSBhIGhlYXZ5IGRvc2Ugb2YgY3JlYXRpdml0eSBpbiB0aGVpciBtZWRpYSBhbmQgdGVjaG5vbG9neSBleGVjdXRpb25zLCB3aGlsZSBhbHNvIGRlc2lnbmluZyBuZXcgd2F5cyB0byBmdXR1cmUgcHJvb2YgdGhlaXIgYnVzaW5lc3Nlcy4gClNhaWQgaGUgd2FzIGV4Y2l0ZWQgYWJvdXQgcGxheWluZyBpbiB0aGUgV1NPUCBtYWluIGV2ZW50IHRvdXJuYW1lbnQsIHdoaWNoIGJlZ2lucyBhdCBub29uIFNhdHVyZGF5LiBBc2tlZCB3aGF0IHdvdWxkIGhhcHBlbiBpZiBoZSBhZHZhbmNlZCB0byB0aGUgZmluYWwgdGFibGUgb2YgdGhlIHRvdXJuYW1lbnQsIHdoaWNoIHRoaXMgeWVhciBpcyBwbGF5ZWQgaW4gbGF0ZSBPY3RvYmVyIGluIHRoZSBtaWRzdCBvZiB0aGUgTkhMIHJlZ3VsYXIgc2Vhc29uLCBMdW9uZ28gc2FpZDogYmUgcGxheWluZyBwb2tlciBpbiBWZWdhcy4gClRoYXQgbm90IHRvIHNheSBpdCBhIGJhZCB1bHQsIE1pcmFnZSBzdGlsbCBnZXRzIGEgbG90IG9mIG1pbGVhZ2Ugb3V0IG9mIGl0IGFzIGJvdGggYW4gZXNjYXBlIGJ1dHRvbiBhbmQgYSBmbGFua2luZyB0b29sLCBidXQgZG9uIGdvIHN0cmFpZ2h0IGludG8gdGhlIGVuZW15IHRlYW0gd2hlbiB5b3UgaW52aXNpYmxlIGJlY2F1c2UgYSkgeW91IGFyZW4gZW50aXJlbHkgaW52aXNpYmxlLCBhbmQgYikgeW91IGhhdmUgdG8gd2FpdCBmb3IgdGhlIHVsdCB0byB3ZWFyIG9mZiwgYW5kIGV2ZW4gdGhlbiB5b3UgaGF2ZSB0byBhY3R1YWxseSByZWFkeSB5b3VyIHdlYXBvbi4uIApTaHJpbXBDcmFja2VycyAgNyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCldoZW4gSSBoYWQgaXQsIEkgc3RvcHBlZCBhbnkgc2tpbmNhcmUgZXhjZXB0IGZvciBhIGJhc2ljIGJsYW5kIGZyYWdyYW5jZSBmcmVlIGVzc2VudGlhbCBvaWxzIGZyZWUgbW9pc3R1cml6ZXIgKEJpb2Rlcm1hIFNlbnNpYmlvIGxpZ2h0KS4gCkhlciBiZWhhdmlvdXIga2luZCBvZiBzZWFscyB0aGUgZGVhbCBmb3IgbWUuIFNoZSBoYXMgVHJ1bXAgd3JhcHBlZCBhcm91bmQgaGVyIGZpbmdlciBhbmQgc2hlIGNhbiBkbyBubyB3cm9uZyBpbiBoaXMgZXllcy4gCkl0IGRpZG4gY292ZXIgcm9vbSBvciBib2FyZCwgdGhvdWdoLCBzbyBJIHN0aWxsIGhhZCB0byB3b3JrIDMwIDQwIGhvdXJzIGEgd2VlayB0byBjb3ZlciBsaXZpbmcgZXhwZW5zZXMuIApUaGVyZSBpcyBubyBzb2xpZCByZWFzb25zIHRvIHNheSB0aGF0IGdhbWJsaW5nIGlzIGxlZ2FsLCBpbGxlZ2FsIG9yIG5vbmUgb2YgdGhlIGFib3ZlLCB0aGUgYW5zd2VyIGNhbiBiZSB5ZXMsIG5vIG9yIG1heWJlLiAKU28gaGVyZSB0aGUgc291cmNlIGlzIG5vdGhpbmcgYnV0IHRoZSBzZW5kZXIgb3IgdGhlIHBlcnNvbiB3aG8gd2FudHMgdG8gY29tbXVuaWNhdGUgd2l0aCBvdGhlcnMuIEluIG9yZGVyIHRvIGRlbGl2ZXIgaGlzIHRob3VnaHRzIG9yIGlkZWFzIGhlIG1ha2VzIGl0IGFzIGEgbWVzc2FnZSB3aGljaCBoZSB0cmFuc2ZlcnMgdG8gdGhlIHJlY2VpdmVyLiAKU2VlbiBBbGV4IHdvcmsgYXMgYSBtYXNzYWdlIHRoZXJhcGlzdCBhbmQgaGUgaW1wcmVzc2l2ZSwgc2FpZCBNaWNoYWVsIEhvd2VsbCwgd2hvIG1ldCBHdWVycmVybyB0aHJvdWdoIHRoZSBNb3Jtb24gY2h1cmNoIGJvdGggYXJlIG1lbWJlcnMgYW5kIHBhcnRuZXJlZCB3aXRoIGhpbSBpbiBhIG1hcmtldGluZyBlbnRlcnByaXNlIHRoYXQgcmVzdWx0ZWQgaW4gZmVkZXJhbCBzYW5jdGlvbnMgYWdhaW5zdCBib3RoIG9mIHRoZW0uIAoxOCsuIFQgQXBwbHkuIEJ5IG1ha2luZyB5b3VyIGZpcnN0IGJldCwgQmV0RnJlZCB3aWxsIG1hdGNoIGl0IHVwIHRvIDI1IGFzIGEgZnJlZSBiZXQuIEFsbCB5b3UgbmVlZCB0byBkbyBpcyBtYWtlIHRoZSBtaW5pbXVtIGJldCBvZiBhdCBsZWFzdCAxLiBUaGUgYmFzaWMgY29uZGl0aW9ucyByZXF1aXJlIHRoYXQgdGhlIGN1bXVsYXRpdmUgb2RkcyBvZiB5b3VyIGZpcnN0IHNlbGVjdGlvbihzKSBoYXZlIHRvIGJlIGV2ZW5zICgyLjApIG9yIGdyZWF0ZXIsIGFuZCBpbiB0aGUgZW5kIHlvdXIgTWF0Y2hlZCBCZXQgd2lsbCBiZSBlcXVhbCB0byB0aGUgdmFsdWUgb2YgeW91ciBmaXJzdCBiZXQgeW91J3ZlIG1hZGUuQmVpbmcgYW4gVUsgb25saW5lIGJvb2ttYWtlciByZXF1aXJlcyB0aGF0IHlvdSBvZmZlciBub3Qgb25seSBncmVhdCBjb3ZlcmFnZSBvZiBmb290YmFsbCBldmVudHMsIGJ1dCBlcXVhbGx5IGdyZWF0IGNvdmVyYWdlIHdpdGggZm9vdGJhbGwgYm9udXNlcyB0b28uIApJZiB5b3UgYXJlIGEgcG9rZXIgbG92ZXIgYW5kIHlvdSB0aGluayBhYm91dCBwbGFubmluZyBhIHBva2VyIHBhcnR5IHJpZ2h0IGF0IGhvbWUsIHlvdSBoYXZlIHRvIHB1cmNoYXNlIHRoZSBwcm9kdWN0cyByaWdodCBmcm9tIHRoZSBwb2tlciBzdG9yZXMuIE5vdyBzb21lIHN0b3JlcyBoYXZlIGNvbWUgZnJvbnQuIFRoZXNlIHN0b3JlcyBoYXZlIHN0YXJ0ZWQgc2VsbGluZyBhZmZvcmRhYmxlIHByb2R1Y3RzIG9ubGluZSBhbmQgeW91IGNhbiBhY2Nlc3MgdGhlc2UgcHJvZHVjdHMgc3RheWluZyBhbnl3aGVyZSBpbiB0aGUgd29ybGQgYW5kIGdldCB0aG9zZSBwcm9kdWN0cyBkZWxpdmVyZWQgdGhlcmUuIFNheSwgeW91IGxpa2UgYSBwcm9kdWN0IGxpa2UgVGhlIENvYWNoIEZhY2VzIFBva2VyIENhcmQgUHJvdGVjdG9yIGFuZCB5b3UgbmVlZCB0aGF0LiBZb3Ugb25seSBuZWVkIGlzIGEgd29ya2luZyBpbnRlcm5ldCBjb25uZWN0aW9uIGFuZCBhIGZpbmFuY2lhbCBjYXJkIHRvIHBsYWNlIGFuIG9yZGVyIG9ubGluZS4KSGVyIGFjdGlvbnMgaW4gdGhlIFdhciBSb29tIGVmZmVjdGVkIGEgY2hhbmdlIGluIHRoZSBzaXR1YXRpb24gb24gdGhlIGJhdHRsZWZpZWxkLgooVGhhdCBhbiB1bmRlcnN0YXRlbWVudDogInRoaXJkIHdhdmUgdmFyaWF0aW9uaXN0IHByYWdhbWF0aWNzIiBpc24gYXQgYWxsIGEgd2VsbCBlc3RhYmxpc2hlZCBzY2hvb2wsIHRoZSBmYWN0IHRoYXQgdGhlIHBhcGVyIGNhbiBiZSBkZXNjcmliZWQgaW4gdGhvc2UgdGVybXMgaXMgdGhlIG1vc3QgaW50ZXJlc3RpbmcgYXNwZWN0IG9mIGl0LCBJTUhPLikuIApBbmQgSSBzYWlkLCAnaWYgeW91IGNhbiwgRGF2aWQgW09sc2VuXSwgZmluZCBvdXQgd2hvIHJhdHRlZCBtZSBbb3V0XS4nIEkgc2FpZCwgJ2ZpbmQgb3V0IHdobyByYXR0ZWQgbWUgW291dF0gdGhhdCBkYXkgYmVjYXVzZSBpdCB3YXMgb25lIG9mIHRoZSBib3lzIGJlY2F1c2UgdGhlcmUgd2VyZSBubyBhZ2VudHMgdGhlcmUuIEFuZCBzbywgd2hlbiB3ZSBnb3QgaW4gdGhlcmUgVmluY2UsIGFuZCBteSBhdHRvcm5leSB3YXMgZ3JlYXQuIApUaGUgZGVncmVlIG9mIGR5c2Z1bmN0aW9uYWwgc3RhYmlsaXR5IChtb3RvciBjb250cm9sKSBkaWN0YXRlcyBob3cgY2hhbGxlbmdpbmcgdGhlIGV4ZXJjaXNlIHNob3VsZCBiZSBpbiByZWdhcmRzIHRvIHBvc2l0aW9uaW5nIGFuZCByZXNpc3RhbmNlLkNob3AgYW5kIGxpZnQgcGF0dGVybnMgZm9yIGZ1bmRhbWVudGFsIHN0YWJpbGl0eSBkeXNmdW5jdGlvbnMgdHlwaWNhbGx5IGJlZ2luIGluIGFuIHVubG9hZGVkIHN1cGluZSBwb3NpdGlvbiB0byBsZXNzZW4gZGVtYW5kIG9uIHRoZSBuZXJ2b3VzIHN5c3RlbSwgdGh1cyBpbmNyZWFzaW5nIHF1YWxpdHkgb2YgbW92ZW1lbnQuU3RhdGljIGFuZCBkeW5hbWljIHN0YWJpbGl0eSBkeXNmdW5jdGlvbnMgd2FycmFudCB0YWxsIG9yIGhhbGYga25lZWxpbmcgcGF0dGVybnMgdG8gZW5nYWdlIGNvcmUgbXVzY3VsYXR1cmUgb2YgdGhlIGhpcC4gU3RhYmlsaXR5IGR5c2Z1bmN0aW9uIGlzIGFuIHVuZGVybHlpbmcgY2F1c2F0aXZlIGZhY3RvciBpbiBsb3dlciBiYWNrIHBhaW4uVGhlIGx1bWJhciBzcGluZSBpcyBkZXNpZ25lZCB0byBiZSBtb3JlIHN0YWJsZSB0aGFuIG1vYmlsZS4gSWYgdGhlIGxvd2VyIGJhY2sgYmVjb21lcyB0b28gbW9iaWxlLCB0aGUgY2hhbmNlcyBvZiBpbmp1cnkgZnJvbSBtaWNyb3RyYXVtYSBhcmUgc2lnbmlmaWNhbnRseSBpbmNyZWFzZWQuSWYgeW91IGZpbmQgc3F1YXR0aW5nIG9yIGZvcndhcmQgYmVuZGluZyBwYXR0ZXJucyB0byBiZSBmYXVsdHksIHRoZSBwb3NpdGlvbiBvZiB0YWxsIGtuZWVsaW5nIGlzIHVzZWQgYXMgYSBjb3JyZWN0aXZlIGV4ZXJjaXNlIGZvciB0cnVuayBzdGFiaWxpdHkuRXhlcmNpc2UgaW4gdGhpcyBwb3N0dXJlIHdpbGwgcHJvbW90ZSBjb3JlIHN0YXRpYyBzdGFiaWxpdHkgd2hlbiB0aGUgaGlwcyBhcmUgaW4gdGhlIHNhbWUgcG9zaXRpb24uVGhpcyBjcmVhdGVzIGEgYmFzZSBmb3IgZHluYW1pYyBzdGFiaWxpdHkgd2hlbiB0aGUgaGlwcyBhcmUgYWxsb3dlZCB0byBtb3ZlLCBidXQgdGhlIGNvcmUgbXVzdCByZW1haW4gc3RhYmxlLlN0YWJpbGl0eSB3b3JrIHdpdGggYm90aCBoaXBzIGluIGEgc3ltbWV0cmljYWwgc3RhbmNlIHdpbGwgY29vcmRpbmF0ZSB0aGUgYmFzaWMgc3BpbmUgc3RhYmlsaXR5IGZvciBzcXVhdHRpbmcsIGxpZnRpbmcsIGx1bmdpbmcgYW5kIHN3aW5naW5nIG9yIGFueSBhY3Rpdml0eSBvbiB0aGUgc2ltaWxhciBzdGFuY2UgYmFzZS5UYWxsIGtuZWVsaW5nIGlzIHRoZSBtb3N0IGZhdm9yYWJsZSBwb3NpdGlvbiBiZWNhdXNlIGl0IHRha2VzIGF3YXkgYWxsIGNvbXBlbnNhdGlvbnMgdGhhdCB1c3VhbGx5IG9jY3VyIGF0IHRoZSBmb290LCBrbmVlIGFuZCBhbmtsZSBqb2ludHMgd2hlbiBoaXAgbW9iaWxpdHkgYW5kIHN0YWJpbGl0eSBhcmUgbm90IG9wdGltdW0uVGhpbmsgb2YgYWxsIG9mIHRoZSBjb21wZW5zYXRpb25zIHRoYXQgb2NjdXIgaW4gc3BvcnRzLCBleGVyY2lzZSBhbmQgYWN0aXZpdGllcyBvZiBkYWlseSBsaXZpbmcgd2hlbiBpbmRpdmlkdWFscyBkbyBub3QgaGF2ZSBjb3JyZWN0IGJvZHkgbWVjaGFuaWNzLkR1cmluZyBzcXVhdHRpbmcgb3IgYmVuZGluZyBtb3Rpb25zLCB5b3UgbWF5IHNlZSBhIGxvc3Mgb2YgYSBzdGFibGUgZm9vdCBwb3NpdGlvbiwgZXhjZXNzaXZlIG91dCB0dXJuaW5nIG9mIHRoZSBmZWV0LCByb2xsaW5nIG9mIHRoZSBhbmtsZXMsIGlud2FyZCBjYXZpbmcgb2YgdGhlIGtuZWVzLCBsb3NzIG9mIGhpcCBleHRlbnNpb24gYW5kIHVuc2FmZSBzcGluZSBmbGV4aW9uIChoeXBvbW9iaWxlIGhpcHMgb3IgaHlwZXJtb2JpbGUgbHVtYmFyIHNwaW5lKSAgIGFsbCB0byBjb21wZW5zYXRlIGZvciBhIGxhY2sgb2YgcmFuZ2Ugb2YgbW90aW9uIG9yIHN0YWJpbGl0eSB3aXRoaW4gdGhlIGhpcHMgYW5kIGNvcmUuQnkgdXRpbGl6aW5nIHRoZSB0YWxsIGtuZWVsaW5nIHBvc2l0aW9uLCB5b3UgdGFrZSBhd2F5IHRoZXNlIHBvdGVudGlhbCBjb21wZW5zYXRpb25zLCBmb3JjaW5nIHRoZSBib2R5IHRvIGRlYWwgd2l0aCB0aGUgbG9hZCBhbmQgd29yayBvdXQgdGhlIHByb2JsZW0uWW91IGFsc28gdGFrZSB0aGUgcXVhZCBkb21pbmFudCwgaGlwIGZsZXhvciBkb21pbmFudCBpbmRpdmlkdWFsIGludG8gYSBwb3NpdGlvbiBpbiB3aGljaCB0aGV5IGNhbm5vdCB1c2UgYW55dGhpbmcgYnV0IGFwcHJvcHJpYXRlIGNvcmUgc3RhYmlsaXR5IGZvciBib3RoIHRoZSBjaG9wIGFuZCBsaWZ0IG1vdmVtZW50cy5UaGUgY29tcGVuc2F0aW9uIGFuZCBjaGVhdGluZyBtZWNoYW5pc20gaXMgcmVtb3ZlZC4gClRoZXNlIGFyZ3VtZW50cyBkbyBub3QgbWVhbiB0aGF0IGxlYWRlcnMgd2lsbCBub3QgdXNlIGZvcmNlIGZyb20gdGltZSB0byB0aW1lIHdpdGhvdXQgdHVybmluZyB0byB0aGVpciBwZW9wbGUgZmlyc3QuIEFsbCBsZWFkZXJzIGNhbiBvcmRlciB0aGVpciBmb3JjZXMgaW50byBiYXR0bGUgaW4gY2FzZXMgb2YgbmF0aW9uYWwgZW1lcmdlbmN5IG9yIHNlbGYgZGVmZW5jZS4gVGhleSBtdXN0IHByZXNlcnZlIHRoZWlyIGxlZ2FsIGFuZCBvcGVyYXRpb25hbCBhYmlsaXR5IHRvIGFjdCBzd2lmdGx5IGFuZCBkZWNpc2l2ZWx5IHdoZW4gbmVjZXNzYXJ5Li4gCk4gQWN0aW9uIGNpdmlsZSA6IGVuIGp1c3RpY2Ugb3V2ZXJ0ZSAgbGEgdmljdGltZSBkJ3VuZSBpbmZyYWN0aW9uIHBuYWxlIChjb250cmF2ZW50aW9uLCBkbGl0LCBjcmltZSkgcG91ciBkZW1hbmRlciBycGFyYXRpb24gZHUgcHJqdWRpY2UgcXUnZWxsZSBhIHN1YmkgZXQgcmNsYW1lciBkZXMgZG9tbWFnZXMgaW50cnRzLiAKQmFua2VyIHR3bzogV2VsbCwgdGhlbiBJIGdvdCBhbiBpZGVhLiBXaHkgZG9uIHdlIG1ha2UgaXQgc28gY29tcGxpY2F0ZWQgYW5kIGRpZmZpY3VsdCB0byB1bmRlcnN0YW5kIGZvciB0aG9zZSBwZXNreSBwb2xpdGljaWFucyB0aGF0IHRoZXkgbmV2ZXIga25vdyB3aGF0IGhpdCB0aGVtLiAKQnV0IGhlIGlnbm9yZXMgdGhpcyBhbmQgY29udGludWVzIHRvIGJldC4gQXQgdGhlIHJpdmVyIHRoZSBvcHBvbmVudCB0dXJucyBvdmVyIGEgMiwzIHN1aXRlZCB0byB0aGUgMyB0YWJsZSBjYXJkcyBhbmQgd2lucyB3aXRoIGEgbG93IGZsdXNoLiAKVGhlIEJvYXJkIG9mIFJlZ2VudHMgY29uc2lzdHMgb2YgZWlnaHQgdm90aW5nIG1lbWJlcnMgZWxlY3RlZCBieSBkaXN0cmljdCBmb3Igc2l4IHllYXIgdGVybXMsIGFuZCBmb3VyIG5vbiB2b3Rpbmcgc3R1ZGVudCBSZWdlbnRzLCBvbmUgZnJvbSBlYWNoIGNhbXB1cywgd2hvIHNlcnZlIGR1cmluZyB0aGVpciB0ZW51cmUgYXMgc3R1ZGVudCBib2R5IHByZXNpZGVudC4gVGhlIGJvYXJkIHN1cGVydmlzZXMgdGhlIGdlbmVyYWwgb3BlcmF0aW9ucyBvZiB0aGUgdW5pdmVyc2l0eSwgYW5kIHRoZSBjb250cm9sIGFuZCBkaXJlY3Rpb24gb2YgYWxsIGV4cGVuZGl0dXJlcy4KTG9zIEFuZ2VsZXMgTGFrZXJzIG93bmVyIEplcnJ5IEJ1c3MgZGllcyBhdCA4MApTb21laG93IGVkdWNhdGlvbiBoYXMgZ290dGVuIE1PUkUgZXhwZW5zaXZlIHNpbmNlIGNvbXB1dGVycyBhbmQgdGhlIGludGVybmV0IG1hZGUgYWNjZXNzaW5nLCBwcm9jZXNzaW5nLCBhbmQgc3RvcmluZyBpbmZvcm1hdGlvbiB0cmlsbGlvbnMgb2YgdGltZXMgbW9yZSBlZmZpY2llbnQuClNvb24sIEVwc3RlaW4gYXBwbGllZCBoaXMgZmFjaWxpdHkgd2l0aCBudW1iZXJzIG9uIFdhbGwgU3RyZWV0IGJ1dCBsZWZ0IEJlYXIgU3RlYXJucyB1bmRlciBhIGNsb3VkIGluIDE5ODEuIEhlIGZvcm1lZCBoaXMgb3duIGJ1c2luZXNzLCBKLiAKSSB3YWl0IGZvciBhIGJpdCBiZWZvcmUgcmV2ZWFsaW5nIHRoZSByZXN1bHRzLgoiQnkgcHJvdmlkaW5nIGFuIGVudmlyb25tZW50IHdoZXJlIHBlb3BsZSB3aG8gdXNlIGRydWdzIGNhbiBpbmhhbGUgY3JhY2ssIGl0J3MgZ29vZCBmb3IgZHJ1ZyB1c2VycywgaXQgcHJvdGVjdHMgdGhlaXIgaGVhbHRoIGFuZCBpdCdzIGdvb2QgZm9yIHRoZSBicm9hZGVyIGNvbW11bml0eSBieSBicmluZ2luZyBwZW9wbGUgb3V0IGZyb20gcHVibGljIHNwYWNlcyBpbnRvIGEgaGVhbHRoIGVudmlyb25tZW50IHdoZXJlIHdlIGNhbiBhZGRyZXNzIHRoZWlyIGhlYWx0aCBuZWVkcyBhbmQgc2ltdWx0YW5lb3VzbHkgYWRkcmVzcyBjb21tdW5pdHkgc2FmZXR5IGlzc3Vlcy4iCkFsc28gZ29pbmcgdG8gc3RhcnQgd2Fsa2luZyBtb3JlIGFuZCB1c2luZyBteSByb3dlciBvbiBvZmYgZGF5cy4gCkEgcHViIGF0IHRoZSBUb3JvbnRvIG9mZmljZSBhbGxvd3MgZm9yIGxhcmdlciBnYXRoZXJpbmdzLCBpbmNsdWRpbmcgYSBxdWFydGVybHkgIkxpdmUgYXQgdGhlIFB1YiIgc2Vzc2lvbiwgbGVkIGJ5IExhYmF0dCdzIHByZXNpZGVudC4gQnV0IGl0IGlzIGFsc28gYSBwbGFjZSB3aGVyZSBlbXBsb3llZXMgY2FuIG1lZXQgZm9yIGNlbGVicmF0aW9ucywgdHJhaW5pbmcgc2Vzc2lvbnMgYW5kIGluZm9ybWFsIGdldCB0b2dldGhlcnMuICJCdWlsZGluZyBhIHJlYWwgZmVlbGluZyBvZiBjYW1hcmFkZXJpZSBhbW9uZyBlbXBsb3llZXMgaXMgaW1wb3J0YW50LCIgc2F5cyBMeW5uLiAiT3VyIHB1YiBpcyBhIGdyZWF0IHZlbnVlIGZvciB0aGVtIHRvIHNvY2lhbGl6ZSBhbmQgc3RyZW5ndGhlbiB0aG9zZSByZWxhdGlvbnNoaXBzLiIKV2hlbiBwZW9wbGUgY29hdCB0aGVtc2VsdmVzIGluIHN1bnNjcmVlbiBvbiB0aGUgYmVhY2ggb3IgYnkgdGhlIHBvb2wsIG9uZSB1c3VhbCBpbnRlbnRpb24gdG8gYWxsb3cgdGhlbXNlbHZlcyB0byBzdGF5IGxvbmdlciBpbiB0aGUgc3VuIHdpdGhvdXQgYnVybmluZy4KSW4gbW9zdCBjYXNlcyBoZSBvciBzaGUgd291bGQgdGhlbiBoYXZlIHRvIGZvbGQgYWZ0ZXIgdGhlIGZsb3AsIGJ1dCBpbiBzb21lIGNhc2VzIGhlIG9yIHNoZSBtaWdodCBtYWtlIGhpcyBvciBoZXIgaGFuZCBhbmQgd2luIGEgdmVyeSBiaWcgcG90LiBMYXRlciBpbiB0aGUgdG91cm5hbWVudCwgdGhvdWdoLCBhbiBhZ2dyZXNzaXZlIHBsYXllciB3aG8gYWNjdW11bGF0ZWQgY2hpcHMgZWFybHkgbWlnaHQgYmUgYWJsZSB0byBmb2xkIHRoaXMgaGFuZCwgd2hlcmVhcyBhIG1vcmUgY29uc2VydmF0aXZlIHBsYXllciB3aG8gd2FzIGdldHRpbmcgc2hvcnQgc3RhY2tlZCBtaWdodCBoYXZlIHRvIGdvIGFsbCBpbiB3aXRoIHRoZSBoYW5kLiAKTm90IGEgaHVnZSBzZWxlY3Rpb24gb2YgdG9wcGluZ3MuIApRdWFudCAgbGEgZGF0dGUsIHNpIGwgcHJlbmQgY29ubmFpc3NhbmNlIGRlIGNlcnRhaW5zIHBhc3NhZ2VzIGR1IENhbnRpcXVlIGRlcyBjYW50aXF1ZXMsIGVsbGUgZXN0IGluZHViaXRhYmxlbWVudCBmbWluaW5lLCBuZSBzZXJhaXQgY2UgcXVlIHBhciBsYSBmb3JtZSBkZSBzb24gbm95YXUgcmFwcGVsYW50IHVuZSB2dWx2ZS4gCkNsaWVudHMgb2YgcG9vcmx5IHNraWxsZWQgcGllcmNlcnMgY29udGludWUgdG8gc3ByZWFkIG1pc2luZm9ybWF0aW9uLi4gCkl0IHdhcyBleGFjdGx5IHdoYXQgSSByZW1lbWJlcmVkLCBhbmQgSSB3YXMgaGFwcHkuIApNYXNzYWdlIGlzIG1vc3RseSBhc3N1bWVkIHRvIGJlIGEgbGF2aXNoIGNvbnNvbGF0aW9uIHRoYXQgb25seSB0aGUgcmljaCBjYW4gYWZmb3JkLi4gCjkgRmViIDIwMTIgLiBHZXQgdGhlIHNlcmlhbCBudW1iZXIgZnJvbSB0aGUgc2VsbGVyLiAxNkdCIFJBTSAxVEIgU1NEIE9TIFggTGF0ZXN0ICAgUFRIRCAxMiBMYXRlc3QgNEsgTEcgVGh1bmRlcmJvbHQgRGlzcGxheSBMb2dpYyBQcm8gMTAuIDE3IEF1ZyAyMDE4IC4gTG9naWMgUHJvIDkgU2VyaWFsIE51bWJlciwgQ3JhY2sgRnVsbCBEb3dubG9hZC4gCkJ1c2luZXNzIHNjaG9vbHMgaGF2ZSBmYWNlZCBhIGZhaXIgYW1vdW50IG9mIGNyaXRpY2lzbSBpbiB0aGUgcGFzdCwgZm9yIGV2ZXJ5dGhpbmcgZnJvbSBiZWluZyByZXNwb25zaWJsZSBmb3IgY2F1c2luZyB0aGUgMjAwOCBmaW5hbmNpYWwgY3Jpc2lzIHRocm91Z2ggdG8gdGVhY2hpbmcgdGhlIHdyb25nIHRoaW5ncy4gVGhlIHJlYWxpc2F0aW9uIHRoYXQgYnVzaW5lc3Mgc2Nob29scyBuZWVkIHRvIGNoYW5nZSBpc24ndCBuZXcgYW5kLCBpbiBmYWN0LCB0aGUgaW5kaWNhdGlvbnMgYXJlIHdlbGwgY2FwdHVyZWQgaW4gbWFueSBkaWZmZXJlbnQgYXJ0aWNsZXMsIGJvb2tzIGFuZCByZXBvcnRzLiAKQnV0IEJNIGFuZCBJIGhhdmUgYm90aCBicm91Z2h0IHRoZXNlIHVwIGFuZCBwb2ludGVkbHkgaWYgaGUgaGFzIGV2ZXIgZG9uZSBvciBzYWlkIGFueXRoaW5nIHRvIGh1cnQgaGVyIG9yIG1ha2UgaGVyIHVuY29tZm9ydGFibGUuIApOb3QgZ29pbmcgdG8gdGFrZSB0aGUgb3V0bGFuZGlzaCByaXNrcyB0aGF0IHNvbWVib2R5IG1pZ2h0IHRha2UgaWYgdGhleSBkYXkgdHJhZGluZyBvbiB0aGVpciBvd24gUEMsIGhlIHNhaWQuClN1cGVyLiIgTG9idGUgTGVuYS4gSWNoIGZhbmdlIGpldHp0IGFuIGRpY2ggZ2FueiBzYWNodGUgYW0gT2JlcmtycGVyIHp1IGtpdHplbG4uIFdlbm4gZHUgbGFjaGVuIG9kZXIgenVja2VuIG11c3N0LCBpc3QgZGFzIGd1dC4gCkluIEdlcm1hbnksIHdlIGhhdmUgdGhpcyB0ZXJtICJvbGQgd2hpdGUgbWFuIiBhcyBhIGJpdCBvZiBhIHRpdCBmb3IgdGF0LiBBbmQgZXhhY3RseSB0aG9zZSBvbGQgd2hpdGUgbWVuIHdobyB3b3VsZCBjb25zdGFudGx5IGJlIG9uIGFib3V0IGhvdyBldmVyeW9uZSB0b28gc2Vuc2l0aXZlIGFuZCB0b28gUEMgYW5kIHNob3VsZCBsZWFybiB0byB0YWtlIGEgam9rZSBhcmUgdXAgaW4gZmxhbWVzIGFib3V0IGhvdyB0aGV5IGJlaW5nIGRpc2NyaW1pbmF0ZWQgYWdhaW5zdCBldGMuCldoYXQgd2UncmUgbG9va2luZyBmb3IgYXJlIHRoZSBudW1iZXIgb2YgcGVybXV0YXRpb25zIHdoaWNoIGNyZWF0ZSBhIGZsdXNoLiBUaGUgZmlyc3QgY2FyZCBjYW4gYmUgYW55dGhpbmcsIHRodXMgNTIgb3B0aW9ucywgdGhlbiB0aGUgbmV4dCBmb3VyIGNhcmRzIG11c3QgYmUgb2YgdGhlIHNhbWUgc3VpdCwgc28gMTIsIDExLCAxMCwgYW5kIDkgb3B0aW9ucy4gVGhlIGxhc3QgdHdvIGNhcmRzIGNhbiBhZ2FpbiBiZSBhbnl0aGluZywgc28gNDcgYW5kIDQ2IG9wdGlvbnMuIApJIHdvcmsgYXMgYSBsYW5kc2NhcGVyLiBJdCBkZXBlbmRzIG9uIHdoYXQgdGhlIHJvb3RzIGFyZS4gCkl0IHRoZSBzZWxsZXIgY2hvaWNlIHRvIGRvIHdoYXRldmVyIHRoZXkgd2FudCB3aXRoIHRoZSBpdGVtLiBJIGRvbiB1bmRlcnN0YW5kIHdoeSBwZW9wbGUgZ2V0IGFsbCBiZW50IG91dCBvZiBzaGFwZSBhYm91dCB0aGF0LiBJdCBsaWtlIHlvdSBjYXJpbmcgYWJvdXQgc29tZW9uZSBlYXRpbmcgYSB3aG9sZSBwaXp6YSBpbiBvbmUgc2l0dGluZy4gSXMgaXQgZ3Jvc3MgdG8geW91PyBNYXliZS4gRG9lcyBpcyBlZmZlY3QgeW91IGluIGFueSB3YXk/IE5vcGUuCkxlZnQgaGFuZGVyIFNpbW9uIEthdGljaCBhbHNvIGRpc2FwcG9pbnRlZCBmb3IgdGhlIHZpc2l0b3JzIGluIDIwMDUuIEluIDIwMTQsIEthdGljaCBhbm5vdW5jZWQgaGlzIHJldGlyZW1lbnQgZnJvbSBUd2VudHkyMCBjcmlja2V0LCBkcmF3aW5nIHRoZSBmaW5hbCBjdXJ0YWluIG9uIGEgZGlzdGluZ3Vpc2hlZCBwbGF5aW5nIGNhcmVlci4gSGlzIG1vc3Qgbm90YWJsZSBhY2hpZXZlbWVudCBoYXMgYmVlbiByZWFjaGluZyB0aGUgc2VtaSBmaW5hbCBvZiBDZWxlYnJpdHkgTWFzdGVyQ2hlZiBBdXN0cmFsaWEuCldoaWNoIGlzIGp1c3Qgc28gc2FkLiAKU2hlIHNhaWQgd2VsbCB0aGF0IHRoZSB3YXkgaXQgaXMsIHNvIHRvdWdoLiBJIHdhbGtlZCB1cCBhIGNvdXBsZSBmbGlnaHRzIG9mIHN0YWlycywgdG8gdGFsa2VkIHRvIGEgbWFuYWdlciBpbiB0aGUgc2FtZSBob3NwaXRhbCBpbiBhbm90aGVyIGRlcGFydG1lbnQgYW5kIHNhaWQgSSB3aWxsIGNvbWUgd29yayBmb3IgeW91IHdoZW4gSSBnZXQgYmFjayBmcm9tIG15IDYgd2VlayB2YWNhdGlvbiBpZiB5b3Ugd2FudCBtZSB0by4gU2hlIHNhaWQgc3VyZSwgbm90IGEgcHJvYmxlbSBhbmQgYnR3LCB0aGVyZSBpcyBhICQ1LDAwMCBzaWduIG9uIGJvbnVzIGFuZCBmaWd1cmVkIG15IHdhZ2VzIHdvdWxkIGJlIGFib3V0ICQ0IGFuIGhvdXIgbW9yZS4gCldoZXRoZXIgeW91J3JlIHRoZSB0eXBlIHRvIGNlbGVicmF0ZSBTdC4gCkhpc3RvcmljYWwgcmV2aXNpb25pc20gYW5kIGRldGVybWluaXNtIG1ha2VzIHVzIHRoaW5rIHRoYXQgdGhlIDEzdGggY29sb25pZXMgd2VyZSBhbGwgdW5pdGVkLCBhbmQgdGhhdCB0aGV5IHdlcmUgYWx3YXlzIEFtZXJpY2FucyB3aG8gc3Rvb2QgdG9nZXRoZXIuIApJdCBrZWVwcyB0aGUgcmF0cyBvdXQgb2YgaGlzIGNyb3BzIGFuZCBncmFpbnMuIEV2ZW4gdGhlbiwgdGhleSBkb24gYWRvcHQgb3V0IGJhcm4gY2F0cyBpbiB0aGUgd2ludGVyLCBhbmQgdGhhdCBpbiB0aGUgZGVlcCBzb3V0aCB3aGVyZSBpdCBkb2VzbiBmcmVlemUgb2Z0ZW4uLiAKSXQgZ2V0cyBpbnRyb3NwZWN0aXZlIGFuZCB0cmlwcHkgYWYgYW5kIGZvY3VzZXMgb24gTWFyYyBpbnNhbml0eS4gCkRvcHBlbHN0ZWdwbGF0dGVuIHZlcmxlZ2VuIGFubGVpdHVuZyBzY2h3YXJ6ZSByb3NlbiB0YXR0b28geW91bmcgbmFrZXQgZ2lybHMgYXNpYSBtYXNzYWdlIHNleCBxdWlzIHVuaSBraWVsIHdlYmNhbSBzb250aG9mZW4gbW5uZXIgdmVyZ2V3YWx0aWd1bmdzb3BmZXIgZGV1dHNjaGUgYmFuayBlYmVyc3dhbGRlIG1hY2Jvb2sgcHJvIGFubGVpdHVuZyB0YXR0b29zIGZyYXUgYXJtIGxlZGVyIHVudGVyd3NjaGUgaGVycmVuIGdyb3NzZXIgc29ubmVuc2NoaXJtIGFubGVpdHVuZyBwdWxsb3ZlciBzdHJpY2tlbiBlaW5mYWNoIGRldXRzY2hlIHNleCB0dWIgbWF0dXJlIGZlbWFsZSBicmlsbGVuIHNjaHdhcnogZXJvdGlzY2hlIG1hc3NhZ2UgaW4gbW5jaGVuIHUgdHViZSBwb3JuIHVuaSBmcmVpYnVyZyBrdW5zdGdlc2NoaWNodGUgbHVzdGlnZSBlaW5sYWR1bmdlbiB6dW0gNTAuIApTb21ldGltZXMgbGlzdGVuaW5nIGFuZCBzYXlpbmcgIkkgbG92ZSB5b3UuIApGb3VuZGVkIGluIDE5NzAsIHRoZSBBc3NvY2lhdGlvbiBvZiBDb21tdW5pdHkgT3JnYW5pemF0aW9ucyBmb3IgUmVmb3JtIE5vdywgb3IgQUNPUk4sIGlzIGZpbmFsbHkgc2h1dHRpbmcgaXRzIGRvb3JzIGFuZCB0aGUgZmFyIHJpZ2h0IHdpbmdudXRzIGFyZSBjZWxlYnJhdGluZy4gQWxsLCB0aGUgZmFyIHJpZ2h0LCB3aGljaCByZXByZXNlbnRzIHRoZSBpbnRlcmVzdHMgb2YgYSBjZXJ0YWluIHN1Ymdyb3VwIG9mIG5vbiB1cmJhbiwgc3RyYWlnaHQgd2hpdGUgQW1lcmljYW5zIGJlc3QgaWxsdXN0cmF0ZWQgYnkgdGhlIFRlYSBQYXJ0eSwgZG9lcyBub3QgbGlrZSBBQ09STiBhbmQgdGhlIHdvcmsgdGhleSBoYXZlIGRvbmUuIApJdCB3YXMgYSBzaWduIG9mIEJvbHRvbiBvdXRzaXplZCByb2xlIGluIGZvcmVpZ24gcG9saWN5IHRoYXQgd2hlbiBoZSB0cmF2ZWxsZWQgdG8gSXNyYWVsIGFuZCBUdXJrZXkgZWFybGllciB0aGlzIG1vbnRoIHRvIGNsYXJpZnkgdGhlIHBvbGljeSwgaGUgYnJvdWdodCBhbG9uZyBhIGNvbnRpbmdlbnQgb2YgcHJlc3MgYWJvYXJkIGEgbW9kaWZpZWQgQm9laW5nIDc1NyBvZiB0aGUgdHlwZSB0eXBpY2FsbHkgdXNlZCBieSB0aGUgdmljZSBwcmVzaWRlbnQgYW5kIHNlY3JldGFyeSBvZiBzdGF0ZS4gSXQgd2FzIHRoZSBmaXJzdCB0cmlwIGJ5IGEgbmF0aW9uYWwgc2VjdXJpdHkgYWR2aXNlciB0byBpbmNsdWRlIHJlcG9ydGVycyBpbiByZWNlbnQgbWVtb3J5LgpBbiBlY29ub21pYyBhc3Nlc3NtZW50IHJlbGVhc2VkIGxhdGUgbGFzdCB5ZWFyIHByZWRpY3RzIGEgbG9zcyBvZiAkMzNtaWxsaW9uIGFuZCAyMDAgcGx1cyBqb2IgbG9zc2VzIGluIHRoZSBDb3Jvd2EgU2hpcmUuCkkgd2FzIGZsb29yZWQuIApJIHRoaW5rIHdlIGFyZSBoYXZpbmcgYSBiYWQgcnVuIG9mIGx1Y2suIApUaGV5IHVzZWQgYSBtZXRob2Qgb2YgY2hlbWljYWwgYW5hbHlzaXMgY2FsbGVkIGxpcXVpZCBjaHJvbWF0b2dyYXBoeSBtYXNzIHNwZWN0cm9tZXRyeSBmb3IgdGhlIGJyZWF0aCBhbmQgYmxvb2QgcGxhc21hIHRlc3RzLiAKSSBnb3Qgb3V0IG9mIHRoYXQgbm9uc2Vuc2UgaW4gMjAxNS4gSXQgd2FzIGdldHRpbmcgcHJldHR5IGFic3VyZC4gCkhhbW1pbGwgd2FzIGEgZmluZSBmaWdodGVyLCBidXQgbm90IGluIEpvbmVzIGxlYWd1ZS4gTm90IGV2ZW4gaW4gdGhlIGxlYWd1ZSBiZWxvdyBKb25lcyBsZWFndWUuIEl0IHdhcyBnb2luZyB0byBiZSBhIGJsb3cgb3V0LiAKU2hlIHdha2UgdXAgYW5kIHRoZXkgdGFsay4gTGFzdCBpIGhlYXJkLCBzaGUgYnJvdWdodCBoZXIgZ3JhZGVzIHVwIGZyb20gYSBEIHRvIEJzICAgdGhleXJlIGluIGEgbW9yZSBwZXJtYW5lbnQgc2l0dWF0aW9uLiAKVGhlbiBhIHNpbmdsZSBodW1hbiBpY29uIGFwcGVhcnMgb24gdGhlIHNjcmVlbi4gCkh1bW1pbmcgaW4gbG93ZXIgdG9uZXMgb24geW91ciB3YXkgdG8gd29yayBpcyBhIGdyZWF0IHdheSB0byBsb3dlciB5b3VyIHBpdGNoLiAKKEZ1bGwgQW5zd2VyKS4gCkJ1dCBJIHN0aWxsIGFtIGFmcmFpZC4uIApTaW5jZSB0aGUgYm9va3MgYW5kIHRoZSBtb3ZpZSwgRm9ya3MgYW5kIFR3aWxpZ2h0bWFuaWEgaGF2ZSBiZWNvbWUgYmlnIGJ1c2luZXNzLgpJIGFsd2F5cyBpbWFnaW5lZCBwb3dlciBmcm9tIFBhdHJvbnMgaXMgYWN0dWFsbHkgbW9yZSBsaWtlIGEgb25lIHRpbWUgYmFuayB0cmFuc2ZlciB0aGF0IG1hdHVyZXMgb3ZlciB0aW1lICAgbGlrZSBpbiBzb3JjZXJlcnMsIHRoZXkgZG9uJ3QgYWN0dWFsbHkgZ2V0IG1vcmUgcG93ZXJmdWwgb3ZlciB0aW1lLCB0aGV5IGp1c3QgbGVhcm4gaG93IHRvIGhhcm5lc3MgcG93ZXIgcG90ZW50aWFsIHRoZXkgYWxyZWFkeSBoYXZlIGFzIHRoZXkgJ2xldmVsIHVwJyAgIGZvciB3YXJsb2NrcyBpdCdzIHRoZSBzYW1lICAgdGhlIHBhY3QgZ2l2ZXMgdGhlbSB0aGUgcG93ZXIsIGJ1dCBvbmNlIGdpdmVuIHRoZXkgY2FuJ3QgcmV0cmFjdCB0aGUgcG93ZXJzIGdpdmVuLCBldmVuIGlmIHRoZSBwYWN0IGlzIHVuZnVsZmlsbGVkICAgdGhhdCdzIHRoZSByaXNrIHRoZSBwYXRyb24gdW5kZXJnb2VzIGFzIGEgY2hhcmFjdGVyOiBpZiB0aGUgcGFjdCBoYXMgbm90IGJlZW4gY29tcGxldGVkIChlZyByZWxlYXNlIHVrdG9hIGZvciBsaWZlIGFuZCBwb3dlcikgd2hlbiB0aGUgcG93ZXJzIGFyZSBnaXZlbiBvdmVyLCB0aGV5IHJpc2sgdGhlIHdhcmxvY2sgcnVubmluZyBvZmYgd2l0aCB0aGVpciBhbHJlYWR5IGluZnVzZWQgZWxkcml0Y2ggcG93ZXIuIApUaGVyZSB3ZXJlIGFsc28gc29tZSBjb21tZW50cyBhYm91dCBMTiBiZWluZyBub3QgYWJsZSB0byBzbWFydCBjb250cmFjdHMgYW5kIHN1Y2guIEZpcnN0LCBMTiBpcyBhIHNtYXJ0IGNvbnRyYWN0cyBwb3dlcmVkIHByb3RvY29sLiAKSSB0cnkgdG8gb3BlbiBvcHBvcnR1bml0aWVzIHRvIHBlb3BsZSB3aG8gbWlnaHQgb3RoZXJ3aXNlIGJlIG92ZXJsb29rZWQuIEkgYmVlbiBIUiwgSSBiZWVuIGEgdGhpcmQgcGFydHkgcmVjcnVpdGVyLCBhbmQgSSBiZWVuIGFuICJvcmRpbmFyeSIgZW1wbG95ZWUuIApPbmNlIHRoaXMgaXMgbGVhcm5lZCBpdCBpcyB2ZXJ5IGltcG9ydGFudCB0aGF0IHlvdSBrbm93IGV4YWN0bHkgd2hhdCBpcyBvbiB0aGUgdGFibGUgYW5kIHdoYXQgaXQgbWVhbnMgZm9yIHlvdSBhbmQgY291bGQgcG90ZW50aWFsbHkgbWVhbiBmb3Igb3RoZXJzLiBMZWFuIHRoZSBnYW1lIHlvdSBhcmUgcGxheWluZyBhbmQgc3R1ZHkgaXQuIApUaGF0IHByZXR0eSBtdWNoIGl0IGZvciB2aWxsYWluIHNvbmdzIChtYXliZSBjaGVjayBvdXQgVGhlIE1hcmluZXIgUmV2ZW5nZSBTb25nIGJ5IFRoZSBEZWNlbWJlcmlzdHMpIGJ1dCBJIHN1Z2dlc3QgbGlzdGVuaW5nIHRocm91Z2ggRGVhciBIdW50ZXIgQWN0IElWIG9yIFYgYWxidW1zICh0aGVuIHRoZSByZXN0IG9mIHRoZSBkaXNjb2dyYXBoeSBpZiB5b3UgaG9va2VkKS4gCkVuIGducmFsLCBpbCBmYXV0IHBvdXZvaXIgcGVyZHJlIDIwMCBtaXNlcyBjb3JyZXNwb25kYW50ICBsYSBsaW1pdGUgbGEgcGx1cyBsZXZlIGZpeGUuIEF1dHJlbWVudCBkaXQsIHNpIGxhIGxpbWl0ZSBzdXByaWV1cmUgZXN0IGRlIDUgcGFyIGVuY2hyZSwgcHJ2b3lleiAxIDAwMCBhdSB0b3RhbCBldCBuZSBwYXMgbGVzIGRwYXNzZXIuCkFsc28sIHlvdSBhc2tpbmcgbWUgdG8gcG9pbnQgb3V0IHNvbWV0aGluZyB0aGF0IHdpbGwgcHJvYmFibHkgbmV2ZXIgYmUgZnVsbHkgcHJvdmVuLiBMZXQgc2F5IGFuIGFjdG9yIGdvZXMgb3ZlciB0aGUgaGVhZCBvZiB0aGUgZGlyZWN0b3IgYW5kL29yIHByb2R1Y2VyIGFuZCB0aGUgbW92aWUgY29tZXMgb3V0IGJldHRlciB0aGFuIGl0IHdvdWxkIGhhdmUgb3RoZXJ3aXNlLiBEbyB5b3UgZXhwZWN0IHRoZSBkaXJlY3RvciBhbmQvb3IgcHJvZHVjZXIgdG8gcHVibGljbHkgc3RhdGUgIkkgaGFkIHRoaXMgaWRlYSBidXQgW0FjdG9yL0FjdHJlc3NdIHdlbnQgb3ZlciBteSBoZWFkIGFuZCB0aGUgbW92aWUgaXMgYmV0dGVyIGJlY2F1c2Ugb2YgaXQuIiBJIGhpZ2hseSBkb3VidCBhbnlvbmUgaW4gSG9sbHl3b29kIGhhcyB0aGF0IG11Y2ggaHVtaWxpdHkgaWYgdGhlIG1vdmllIHdhcyBhIGJveCBvZmZpY2Ugc21hc2guClRoZXJlIHNob3VsZCBuZXZlciBiZSBPdGhlcnMsIGJ1dCB0aGVyZSBhcmUuIApIb3cgaXMgaXQgcG9zc2libGUgdGhhdCB3ZSBhbGwga25vdyBmYXQgaXMgYmFkLCBidXQgc2NpZW5jZSBpcyBzaG93aW5nIHRoYXQgZmF0IG1pZ2h0IGJlIGdvb2Q/IEJlY2F1c2Ugb2YgaWRlb2xvZ3kuIEFuIGlkZW9sb2d5IHRoYXQgc2F5cyB0aGluIGFuZCB0YWxsIGFyZSBnb29kLiAKSXRlbXMgbWVhbnMgMTYgMjAgb3Bwb3J0dW5pdGllcyB0byBzdGFydCBvciBqb2luIHNuYXJreSBjb252ZXJzYXRpb25zLiAKQSBSZXBvcnQKSXQgZnVubnkgaG93IHRoaW5ncyBoYXZlIGZsaXBwZWQuIEEgeWVhciBhZ28sIEkgcGxheWVkIG15c3RlcnkgaGVyb2VzIGFsbW9zdCBleGNsdXNpdmVseSwgYmVjYXVzZSBldmVuIHRob3VnaCBJIHJlYWxseSBoYXRlIHRoZSBnYW1lIG1vZGUgKGR1cGxpY2F0ZXMsIHVsdGltYXRlIHN0ZWFtcm9sbCwgZXRjKSwgdGhlIHBlb3BsZSBwbGF5aW5nIGFsbW9zdCBuZXZlciBzYWlkIHNoaXR0eSB0aGluZ3MgaW4gdGhlIGNoYXQuIFRoZSByYXJlIHRveGljIEJTIHdhcyBhbHdheXMgYSBkYXkgb3IgdHdvIGFmdGVyIHRoZSBsb290Ym94ZXMgcmVzZXQsIHdoZW4gYWxsIG9mIHRoZSBjb21wIHBsYXllcnMgd291bGQgY29tZSBpbiB0byBnZXQgdGhlaXIgbG9vdC4gCkRlIHBsdXMsIGxlcyBwYW5nYXMgc29udCBpbmplY3RzIGF2ZWMgKFBFRSkuIApZb3UgbWFkZSBudW1lcm91cyBmYWxzZSBjbGFpbXMgcmVnYXJkaW5nIFplbmthaXMgYW5kIHBvd2VybGV2ZWxzIHRoYXQgSSBwcmV0dHkgZWFzaWx5IGRpc3Byb3ZlZC4gVGhlbiB5b3Ugc2F5IEkgbHlpbmcgYWdhaW4gYWZ0ZXIgY29uY2VkaW5nIEkgd2FzIHJpZ2h0IGp1c3QgYmVmb3JlIHJlZ2FyZGluZyB0aGUgc2FtZSB0b3BpYy4gVGVsbCBtZSB3aHkgYW5pbWUgQmxhY2sga2VwdCBwb3dlcmluZyB1cCBhZnRlciBiZWluZyBoZWFsZWQgYnV0IEdva3UgYW5kIFZlZ2V0YSBkaWRuIEdvIGFoZWFkLiAKQnVpbGRpbmcgQ2FyZCBIb3VzZXMKSXQgaGFzIGNlbWVudGVkIGEgcmVwdXRhdGlvbiBhcyBhbiBpbXBvcnRhbnQgaW52ZXN0bWVudCBmb3IgQW1lcmljYW4gcG93ZXIgYnkgcGVycGV0dWF0aW5nIGl0cyByb2xlIGFzIGEgdmljdGltIG9mIHRoZSBQYWtpc3RhbmkgbWlsaXRhcnkuIEJ1dCBzdHJhbmdlbHksIGZldWRhbCBQYWtpc3RhbiBoYXMgYWx3YXlzIGJlZW4gYSB3aWxsaW5nIGFuZCBhYmxlIHBhcnRuZXIgb2YgdGhlIG1pbGl0YXJ5IGluIGFsbCBpdHMgY2FtcGFpZ25zIGFnYWluc3QgZGVtb2NyYWN5LCBhbmQgdGhlIHByZWRpY3RhYmxlIGFuZCBzdGFibGUgY2l2aWxpYW4gaW5zdGl0dXRpb25zIHRoYXQgc2hvdWxkIHVuZGVycGluIGl0LiAKSSBwcmVmZXIgdG8gcGF5ICQyMCB1cGZyb250IHRoYW4gJDUveWVhciAoZXNwZWNpYWxseSBiZWNhdXNlIGkgZG9uIG5lZWQgb3Igd2FudCB0aGUgc2VydmVyIHBhcnQpUmFzYWxhczg5MTAgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGhvdXJzIGFnb0l0IGJlZW4gYSB3aGlsZS4gSSBhbnN3ZXJlZCBoaW0gaW1tZWRpYXRlbHkuIEl0IGEgZ29vZCBhcHAsIGhlIGRlc2VydmVkIHRoZSBtb25leS53dWJfd3ViICAxMSBwb2ludHMgIHN1Ym1pdHRlZCAzIGhvdXJzIGFnb1RoZXkgd2VyZSBtYWtpbmcgYmVnaW5uZXIgc2VjdXJpdHkgbWlzdGFrZXMgdGhhdCBldmVyeSBDUyBzdHVkZW50IGtub3dzIHRvIGF2b2lkIGEgY291cGxlIG9mIHllYXJzIGFnbywgYWZ0ZXIgdGhleSBnb3QgdGhlaXIgYmFua2luZyBsaWNlbnNlICAgc28gaXQgbm90IGxpa2UgdGhleSB3ZXJlIGluIHRoZWlyIGJlZ2lubmVyIGRheXMuIApCdXQgdGhlIDMvNiBMaW1pdCB0YWJsZXMgYXJlIGZ1bGwgb2YgZnVja2luZyBhc3Nob2xlcy4gSSBjb3VsZG4gYmVsaWV2ZSB0aGUgd2F5IHRoYXQgdGhlc2UgZ3V5cyB0YWxrZWQgdG8gbWUuIApXaHk/IEJlY2F1c2UgdGhlIGlkZWEgb2YgYmVpbmcgYSBsYXd5ZXIgaXMgZ3JlYXQsIGJ1dCB0aGUgcmVhbGl0eSBvZiBiZWluZyBhIGxhd3llciBmdWNraW5nIHN1Y2tzIGFuZCB5b3UgbmVlZCB0byBmaW5kIHRoYXQgb3V0IGJlZm9yZSB5b3Ugc3BlbmQgJDE1MGsgb24gYW4gZWR1Y2F0aW9uLi4gCkkgdGhpbmsgdGhhdCB0aG9zZSB0aGluZ3MgYXJlIGltcG9ydGFudDsgaG93ZXZlciwgc28gbWFueSBwZW9wbGUgZ3JvdyB1cCBub3Qga25vd2luZyBiYXNpYyBhbmQgc2ltcGxlIHRoaW5ncyB0aGF0IHdvdWxkIHNhdmUgdGhlbSB0aW1lIGFuZCBtb25leS4gSSBtZWFuLCBJIG9ubHkgMzAgeWVhcnMgb2xkLCBidXQgSSBjb21lIGZyb20gYSBsb25nIGxpbmUgb2YgY3JlYXRpdmUgd29tZW4gYW5kIG1lbiB3aG8gY29tYmluZWQgYm90aCBpbm5vdmF0aW9uIGxlYXJuZWQgc2tpbGxzIHRvIHNhdmUgdGltZSBhbmQgbW9uZXkuIEkgbGVhcm5lZCBzb21lIHNpbXBsZSBzdGl0Y2hlcyBhbmQgY29va2luZyBza2lsbHMgZnJvbSBteSBtYXRyaWFyY2hzLCB0aGVuIEkgc3RhcmVkIGRvaW5nIG15IG93biByZXNlYXJjaC4gCktyYWZ0IHZpc2l0ZWQgcGFybG91ciBmb3Igc2V4IG9uIGRheSBvZiBBRkMgZ2FtZQpCZXR3ZWVuIE9tYWhhIGFuZCBMaW5jb2xuIHRoZXJlIGFyZSBzbyBtYW55IHBlb3BsZSBjb21wbGFpbiBhYm91dCBldmVyeXRoaW5nLiBDbGVhbiB0aGUgbWFpbiBzdHJlZXRzLCBmaXggdGhlIHBvdGhvbGVzLCBjbGVhbiB0aGUgcmVzaWRlbnRpYWwgc3RyZWV0cy4gRG8gaXQgYWxsIHJpZ2h0IG5vdyEgSSB0aGluayB0aGUgbWFqb3JpdHkgb2YgdGhlc2UgcGVvcGxlIGRvIG5vdCByZWFsaXplIHRoZSBhbW91bnQgb2Ygc25vdyB3ZSBoYXZlIGFjdHVhbGx5IGdvdHRlbiBpbiB0aGUgbGFzdCAyIG1vbnRocyBhbmQgdGhlIGVmZm9ydHMgdGhlIGNpdGllcyBhcmUgZG9pbmcuIApTd2Vuc29uIEZhbWlseSBGb3VuZGF0aW9uOiAkMTAgbWlsbGlvbiB0byB0aGUgVW5pdmVyc2l0eSBvZiBNaW5uZXNvdGEgRHVsdXRoIGZvciBhIG5ldyBzY2llbmNlIGJ1aWxkaW5nLCBzY2hvbGFyc2hpcHMgYW5kIHVuZGVyZ3JhZHVhdGUgcmVzZWFyY2ggcHJvZ3JhbXMuClRoZXkgYmVlbiBzdGVhZGlseSBkeWluZyBmb3IgdHdvIHllYXJzLCBhbmQgd2lsbCBjb250aW51ZSB0byBmb3IgYW5vdGhlciB0d28uIFdoZW4geW91IGhpdCA3MSwgeW91ciBsaWZlIGV4cGVjdGFuY3kgZHJvcHMgb2ZmIGEgZnVja2luZyBjbGlmZi4gVGhlIHNsaWdodGVzdCB0aGluZyBjb3VsZCBraWxsIHlvdS4gQW5kIGFsbW9zdCBhbGwgb2YgdGhvc2UgNjUrIHZvdGVycyB3aWxsIGJlIDcxKyB2b3RlcnMgaW4gMjAyMC4gVGhvc2UgdGhhdCBhcmUgc3RpbGwgYXJvdW5kLCBvZiBjb3Vyc2UuTm93IEkgc3VyZSB5b3Ugc2F5aW5nICJ5ZWFoLCBidXQgeW91bmcgY29uc2VydmF0aXZlcyBhcmUgdGFraW5nIHRoZWlyIHBsYWNlLiIgU29tZSwgYnV0IGluIEZsb3JpZGEgcGVvcGxlIHVuZGVyIDQ1IG9ubHkgdm90ZWQgZm9yIFRydW1wIGFib3V0IDM4JS4gTm90IG5lYXJseSBlbm91Z2ggdG8gb2Zmc2V0IHRoZSBsb3NzZXMuVHJ1bXAgd29uIEZsb3JpZGEgYnkgMTEyLDkxMSB2b3Rlcy4gTW9yZSBUcnVtcCB2b3RlcnMgaGF2ZSBkaWVkIHRoYW4gdGhhdCBzaW5jZSB0aGVuLCBhbmQgaGUgbG9zdCBhIGxvdCBtb3JlIGJlY2F1c2UgaGUgYSBzaGl0IFByZXNpZGVudC5FZ29yc2UgIDI2OSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvSW4gc29tZSBjYXNlcywgdGhlIHNpdGVzIGFyZSBjYXJib24gY29waWVzIG9mIHRoZSBUZW5uZXNzZWUgU3RhciBkZXNwaXRlIGJlaW5nIGluIGRpZmZlcmVudCBzdGF0ZXMuIFNub3BlcyBub3RlZCB0aGF0IHRoZSBPaGlvIFN0YXIgcmVjZW50bHkgcmVwdWJsaXNoZWQgYSBnbG93aW5nICJsZXR0ZXIgdG8gdGhlIGVkaXRvciIgdGl0bGVkICJJZiBZb3UgV2FudCB0byBDaGFuZ2UgU3RhdGUgUG9saXRpY3MgVGhlbiBTdXBwb3J0IEJpbGwgTGVlIGZvciBHb3Zlcm5vci4iIExlZSBpcyB0aGUgZ292ZXJub3Igb2YgVGVubmVzc2VlLkkganVzdCB2aXNpdGVkIHRoZSBNaW5uZXNvdGEgU3VuIHZlcnNpb24gb2YgdGhlbSBhbmQgQ2FuIGNvbmZpcm0gdGhlIGxldHRlcnMgdG8gdGhlIGVkaXRvciBzZWN0aW9uIGlzIHRhbGtpbmcgYWJvdXQgVGVubmVzc2VlLCBUaGVyZSBub3QgZXZlbiBnb29kIGF0IGhpZGluZyB3aG8gdGhleSBhcmUuCkl0cyBzaGVlciBzY2FsZSBoYXMgbm8gcHJlY2VkZW50LiBUd2VudHkgeWVhcnMgYWdvLCBSb3NzIGJvYXN0ZWQgdG8gVGhlIFBvc3QgdGhhdCBUaW1lIFdhcm5lciBDZW50ZXIncyBtYWxsIHdvdWxkIG1ha2UgVHJ1bXAgVG93ZXIncyBhdHJpdW0gImEgcG9zdGFnZSBzdGFtcCBieSBjb21wYXJpc29uLiIgVG9kYXksIFRXQyBpcyB0aGUgcG9zdGFnZSBzdGFtcCBjb21wYXJlZCB3aXRoIEh1ZHNvbiBZYXJkcycgNzMwLDAwMCBzcXVhcmUgZmVldCBvZiBzaG9wcyBhbmQgcmVzdGF1cmFudHMgICBhIGJyZWF0aHRha2luZ2x5IHZvbHVtaW5vdXMgdmVudWUgdGhhdCdzIG11Y2ggbGFyZ2VyIHRoYW4gZG93bnRvd24ncyBCcm9va2ZpZWxkIFBsYWNlIGFuZCB0aGUgV29ybGQgVHJhZGUgQ2VudGVyIG1hbGwgY29tYmluZWQuLiAKU2V3IEZyaWVuZHNoaXAgQmxhbmtldCBhbmQgQXN0b3VuZCBZb3VyIEJ1ZGRpZXMKQW5nZWYgd2lyZCBzaWUgdm9uIE1hcnRpbiBIYW56YWwgdW5kIGF1Y2ggSm9lIFRob3JudG9uLiBNIGVyc2NoZWludCBhdWNoIGRlciBFaW5zYXR6IHZvbiBNYXR0IEN1bGxlbiBpbiBkZXIga29tbWVuZGVuIFNwaWVsemVpdCwgd2VubiBkaWVzZXIgc2VpbmUgTkhMIEthcnJpZXJlIGZvcnRzZXR6ZW4gd2lsbCB1bmQgbmljaHQgaW4gZGVuIFJ1aGVzdGFuZCBnZWhlbiBtIHNvbGx0ZSBtZWluZW4sIGRhc3MgZXMgaGlsZnQsIHdlbm4gbWFuIGRlbiBTdGFubGV5IEN1cCBnZXJhZGUgZ2V3b25uZW4gaGF0LiAKQW5uYSBpcyB3b3JsZGx5IGFuZCBjaGljLCBidXQgbGlrZSBoZXIgYm91cmdlb2lzIGxpdGVyYXJ5IGNvdXNpbiBFbW1hIEJvdmFyeSwgc2hlJ3MgbmFpdmUgZW5vdWdoIHRvIHN0aWxsIGJlbGlldmUgaW4gcm9tYW50aWMgbG92ZS4gU2hlIHJlc2lzdHMgdGhlIHNlZHVjdGl2ZSBjb21lIG9ucyBvZiB0aGUgeW91bmcgYXJteSBvZmZpY2VyIENvdW50IFZyb25za3kgKEFhcm9uIFRheWxvciBKb2huc29uKSB1bnRpbCBzaGUgZG9lc24ndDsgdGhlbiBzaGUgZm9sbG93cyBoZXIgaGVhcnQgdG8gc29jaWFsIG9zdHJhY2lzbSwgcGFyYW5vaWEsIGFuZCBydWluLiBXcmlnaHQsIHRob3VnaCwgdW5kZXJzdGFuZHMgdGhhdCBUb2xzdG95IHdhcyB3cml0aW5nIGFib3V0IG1vcmUgdGhhbiBvbmUgd29tYW4ncyBwYXNzaW9uICAgdGhhdCB0aGUgbm92ZWxpc3Qgd2FzIHBhaW50aW5nIGhpcyBjb3VudHJ5IGFuZCB0aW1lcyBvbiBhbiBpbW1lbnNlIGNhbnZhcyAgIGFuZCB0aGF0IEFubmEncyBkcmFtYSBpcyBqdXN0IHRoZSBjZW50cmFsIHBhbmVsIG9mIGEgdmFzdCwgdGVlbWluZyB0cmlwdHljaC4uIApPbmxpbmUgd2Vic2l0ZSBmb3IgcGxheWluZyBhIHByaXZhdGUgcG9rZXIgZ2FtZSB3aXRoIGZyaWVuZHMKSWYgeW91J3JlIGxvb2tpbmcgZm9yIGEgZmV3IGZpbmFsIGNvbW1lbnRzIG9uIGFuIEVudHJ5IHRoYXQgeW91IGhhdmVuJ3QgcXVpdGUgZmluaXNoZWQsIG9yIHlvdSB3b3VsZCBsaWtlIG90aGVycyB0byBjb250cmlidXRlIHRvIHlvdXIgdW5maW5pc2hlZCBFbnRyeSwgeW91IG1pZ2h0IHdhbnQgdG8gc3VibWl0IGl0IHRvIHRoZSBXcml0aW5nIFdvcmtzaG9wLiAKV2VnZW5lciByZWFsaXplZCB0aGF0IHRoZSBjb250aW5lbnRzIGRyaWZ0ZWQgYXJvdW5kIGFzIGVhcmx5IGFzIDE5MTIuIEJ1dCBpdCB3YXNuJ3QgdW50aWwgdGhlIDE5NjBzIHRoYXQgc2NpZW50aXN0cyBwdXQgdGhlIHBpZWNlcyB0b2dldGhlciBpbiBhIGNvbXByZWhlbnNpdmUgdGhlb3J5IG9mIHBsYXRlIHRlY3Rvbmljcy4gClBvdXIgY29uY2x1cmUsIGxlIG5vdXZlYXUgcmVjb3VycyBpbnRyb2R1aXQgZW4gRnJhbmNlIHBhciBsYSByZm9ybWUgY29uc3RpdHV0aW9ubmVsbGUgY3JhbnQgbGEgcXVlc3Rpb24gcHJpb3JpdGFpcmUgZGUgY29uc3RpdHV0aW9ubmFsaXQgKFFQQyAgIGNvbnRybGUgY29uc3RpdHV0aW9ubmVsIGEgcG9zdGVyaW9yaSkgcG91cnJhaXQgZG9ubmVyIHVuIG5vdXZlYXUgc291ZmZsZSBqdXJpZGlxdWUgIGxhIERESEMsIGNlcyBwcmluY2lwZXMgcG91dmFudCB0cmUgaW52b3F1cyBkaXJlY3RlbWVudCBwYXIgbGUgY2l0b3llbiAgdHJhdmVycyBsYSBwcm9jZHVyZSBkJ3VuZSBleGNlcHRpb24gZCdpbmNvbnN0aXR1dGlvbm5hbGl0LgpJdCBpcyBhbHNvIG11Y2ggbW9yZSBkaWZmaWN1bHQgdG8gZ2V0IG1vbmV5IG9ubGluZSwgdGhlcmVmb3JlIHdlIHNlZWluZyBhIG11Y2ggZGlmZmVyZW50IHBvcHVsYXRpb24gb2YgcGxheWVycyB3aG8gcGxheSBvbmxpbmUuIEJhY2sgaW4gdGhlIGRheXMgYmVmb3JlIEJsYWNrIEZyaWRheSAoQXByaWwgMTUsIDIwMTEpIGFueW9uZSBjb3VsZCBnZXQgbW9uZXkgb25saW5lIGFuZCBpdCB3YXMgZXh0cmVtZWx5IGVhc3kuIElmIHlvdSB3YW50ZWQgdG8gcGxheSBvbmxpbmUsIHlvdSBjb3VsZCBob3Agb24geW91ciBjb21wdXRlciwgbG9hZCB1cCAkJCQgYW5kIGp1c3QgcGxheSBpbiAxNSBtaW51dGVzLi4gCiJIZSdzIHRoZSBmYXN0ZXN0IGJvd2xlciBpbiB0aGUgd29ybGQsIGJ1dCBJIHRoaW5rIGhlIHVuZGVyc3RhbmRzIGhpcyBib2R5IG5vdy4gCihmb3IpIHRoZSBvdXRjb21lIGluIEFmZ2hhbmlzdGFuIG1heSBiZSBkZXRlcm1pbmVkIGFscmVhZHksIHNpbXBseSBiZWNhdXNlIHdlJ3ZlIGJlZW4gdGhlcmUgZm9yIGVpZ2h0IHllYXJzLiAKVGhlIGxhc3QgdGltZSBJIHNwb2tlIHdpdGggaGVyIGFib3V0IDUgeWVhcnMgYWZ0ZXIgdGhlIHN0YXJ0IG9mIGhlciBlbmRlYXZvci4gTW9zdCBvZiB0aGUgcHVwcyBiZWluZyBib3JuIGhhdmUgbG9uZ2VyIG5vc2VzIGFuZCBoYXZlIHdheSBsZXNzIGJyZWF0aGluZyBwcm9ibGVtcy4gU2hlIGFsc28gaXMgbm93IHdvcmtpbmcgd2l0aCBhbiBFbmdsaXNoIGJ1bGwgZG9nIGJyZWVkZXIuIFRoZWlyIGN1cnJlbnQgZ29hbCBpcyB0byBoYXZlIHRoZSBkb2dzIGJlIGFibGUgdG8gcmVwcm9kdWNlIG9uIHRoZWlyIG93biwgdGhlbiB3b3JrIHVwIHRvIGhhdmluZyBhIG5hdHVyYWwgYmlydGggaW5zdGVhZCBvZiBhIGMgc2VjdGlvbi5Hd2VuTHVyeSAgNyBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnb1B1dCBpdCB0byB0aGVtIHRoaXMgd2F5LCAiU2luY2UgeW91IG92ZXJydWxlZCBteSB3aXNoZXMsIHRoaXMgaXMgd2hhdCBnb2luZyB0byBoYXBwZW4uIApUaGUgc2ltcGxlc3Qgd2F5IHRvIGV4cGxhaW4gaXMgdG8gdGhpbmsgb2YgdGhlIGNvbXBsZXRlIGdlbm9tZSBhcyBoYXZpbmcgdGhlIGluc3RydWN0aW9ucyB0byBtYWtlIGV2ZXJ5IHR5cGUgb2YgY2VsbC4gSW4gb3JkZXIgZm9yIHRob3NlIGluc3RydWN0aW9ucyB0byBiZSBhY3RpdmUgdGhlIGdlbmVzIG5lZWQgdG8gYmUgY29waWVkIGludG8gYW4gUk5BIG1lc3NhZ2UsIHRoZW4gdHJhbnNsYXRlZCBpbnRvIHByb3RlaW4uIFRoZSBzdGFydCBvZiBlYWNoIGdlbmUgaGFzIGEgc2hvcnQgY29kZSB3ZSBjYWxsIGEgcHJvbW90b3Igc2VxdWVuY2UuIApOb3cgbG9vayBhbmQgc2VlIHdobyBnZXRzIG1ham9yaXR5IGN1c3RvZHkgb2YgdGhlIGNoaWxkcmVuLiAKWW91IGhhdmUgZmFudGFzdGljIGV5ZXMgYW5kIHlvdSBsb29rIHJlYWxseSBuaWNlIGV2ZW4gd2l0aG91dCBtYWtldXAuIApJZiBJIG5ldmVyIHRhbGtlZCB0byBoZXIgaW4gdGhlIGZpcnN0IHBsYWNlLCBzaGUgd291bGQgaGF2ZSBqdXN0IHN0YXllZCBhIGhhcHB5IG1lbW9yeSBmcm9tIG15IGNoaWxkaG9vZC4gCk91ciBWUCBvZiBFbmdpbmVlcmluZyBBbmRyZXcgVGhvbXBzb24gaGFzIGEgZ3JlYXQgYmxvZyBwb3N0IGV4cGxhaW5pbmcgaG93IG91ciBibG9ja2NoYWluIHB1dHMgdGhvc2UgcGllY2VzIHRvZ2V0aGVyLiAKTGlrZSBQcmVzaWRlbnQgR2VvcmdlIFcgQnVzaCwgTXJzIENsaW50b24gcHV0IGEgcHJlbWl1bSBvbiBsb3lhbHR5LCB3aGljaCBtZWFudCBoYXJkIHRydXRocyB3ZXJlIHNlbGRvbSBhaXJlZC4uIApHbyBzaG9wcGluZyBmb3IgYmFieSB0aGluZ3MuIApBZ2FpbiBldmVyeWJvZHkgaXMgZ29pbmcgdG8gZ2V0IGEgY3V0IGJlZm9yZSB0aGUgcGVyc29uIGRvZXMuIApMYXN0IEZlYnJ1YXJ5L01hcmNoIEkgc3RhcnRlZCBzbG93bHkgZGV2ZWxvcGluZyBhIHNldmVyZSBob3Jtb25hbCBicmVha291dC4gCkl0IGlzIGFzIHNpbXBsZSBhcyBhIHNjcmF0Y2guIEJ1dCB0cnkgdG8gY29udmluY2UgeW91ciBnaXJsZnJpZW5kIC8gc2lnbmlmaWNhbnQgb3RoZXIgdG8gc2NyYXRjaCB5b3VyIGJvZHkgYWxsIG92ZXIgICAxMDAlICAgYW5kIHlvdSdsbCBmaW5kIGl0IGFuIHVubGlrZWx5IHNjZW5hcmlvLiBCdXQgdGhhdCBpcyBleGFjdGx5IHdoYXQgSSBkby4gCk9uIEphbiAxNywgMjAxNApGaW5hbGx5IEkgY3V0IDJveiBvZmYgb2YgbXkgcGFjayBkdWUgdG8gc3RyYXBzLiBJIHdhbnQgdG8gbWFrZSB0aG9zZSBjaGFuZ2VzIGFuZCBub3QgaGF2ZSBUcmlwIEEgYmUgaW1wYWN0ZWQuIApUaGUgbGVnYWwgaXNzdWUgaXMgd2hldGhlciBDb25ncmVzcyBpbmZyaW5nZWQgb24gRmlyc3QgQW1lbmRtZW50IHJpZ2h0cyB3aGVuIGl0IHBhc3NlZCBhIGxhdyBvdXRsYXdpbmcgdGhlIGRpc3RyaWJ1dGlvbiBvZiBpbWFnZXMgb2YgYW5pbWFsIGNydWVsdHkgZm9yIHByb2ZpdC4gCkkgd2FzIHBsYXlpbmcgcHJldHR5IHRpZ2h0IGFuZCB3YXMgbG9va2luZyB0byBtaXggaW4gc29tZSB3aWRlIG9wZW5zIHRvIGdldCBjYWxscyB3aGVuIEkgaGFkIGJldHRlciBoYW5kcywgSSBrbm93IEkgYnV0Y2hlcmVkIGl0IG9uIHRoZSB0dXJuLi4gCk9mZmljZXJzIGFyZSBzZWVuIGxvb2tpbmcgYmVoaW5kIGN1cnRhaW5zLCBhbmQgb25lIGdyYWJiZWQgYW4gYXNzYXVsdCBzdHlsZSByaWZsZSBmcm9tIHRoZSBsZWRnZSBvZiBhIGJyb2tlbiB3aW5kb3cuIEFuIG9mZmljZXIgdG9sZCBvdGhlcnMgdG8gd2F0Y2ggd2hlcmUgdGhleSB3ZXJlIHN0ZXBwaW5nLgpJIGFtIGNvbnN0YW50bHkgcmVhc3N1cmVkIHRoYXQgdGhlIGRlY2lzaW9uIG1hZGUgdG8gbm90IGhhdmUga2lkcyBpcyB0aGUgcmlnaHQgb25lIHdoZW5ldmVyIEkgZ28gdG8gdGhlIHNob3BzIEkgc2VlIHRoZSBkZWFkIGV5ZXMgb2YgdGhlIHBhcmVudHMgd2hvIHJlYWxpc2UgdGhlaXIgbGlmZSBpcyBubyBsb25nZXIgdGhlaXIgb3duLCBlaXRoZXIgc2NyZWFtaW5nIGtpZHMsIGEgcGFydG5lciB0aGV5IGRlc3Bpc2Ugb3IgYm90aC4gClN3ZWRpc2ggbWFzc2FnZSByZW1lZHkgaXMgdGhlIG1vc3QgcmVndWxhcmx5IHByZXNlbnRlZCB0eXBlIGFjY2Vzc2libGUuIApTbyBBMiwgQTUsIEE0LCBBUSwgQUosIEFUIGFkZHMgdXAgdG8gNDggY29tYm9zLCBzbyB0aGV5IHNob3VsZCBmb2xkIEE5IEE2IChhbmQgc29tZXRpbWVzIEFUIGlmIHlvdSB3YW50IHRvIGJlIHByZWNpc2UpLi4gCkluIHlvdXIgY2FzZSwgeSBtYWRlIGRpbm5lciByZXNlcnZhdGlvbnMgYXQgYSBuaWNlIHJlc3RhdXJhbnQuIFlvdSBleGNoYW5nZWQgbmljZSBnaWZ0cyBhbmQgaG90IHRleHRzLiBTaGUgc3BlbnQgdGhyZWUgZnVja2luZyBob3VycyBkb2luZyBoZXIgbWFrZXVwIGFuZCBkcmVzc2luZyB1cC4gCkhlIG5ldmVyIGhhZCBhIGNhcmVlciBhbmQgYXMgaGUgYWdlZCBoZSBzdGFydGVkIGhhdmluZyBtb3JlIGFuZCBtb3JlIHRyb3VibGUgZmluZGluZyBzZXJ2aW5nIGpvYnMgdGhhdCB3b3VsZCBwYXkgdGhlIGJpbGxzLiAKV2Fsa2luZyBhcm91bmQsIEkgdGhpbmsgYWJvdXQgdGhlIDIwMTcgR2xvYmUgU3BvdGxpZ2h0IHNlcmllcyBvbiByYWNlLCB3aGljaCBmb3VuZCB0aGF0IGNyb3dkcyBhdCBvdGhlciBiaWcgdmVudWVzLCBzdWNoIGFzIEZlbndheSBQYXJrIGFuZCBHaWxsZXR0ZSBTdGFkaXVtLCB3ZXJlIG92ZXJ3aGVsbWluZ2x5IHdoaXRlLiAKSSBnb3QgdGhvc2UgZnJvbSBBbWF6b24uIEknbSBub3QgaW4gYSBwb3NpdGlvbiB0byBzcGx1cmdlIG9uIHRoZSByZWFsIG9uZXMgYW5kIHdvbid0IGJlIGZvciBhIHdoaWxlLCBzbyB0aGVzZSB3aWxsIGRvLgpPYmFtYSB3YXNuJ3QgYSBrbGVwdG9jcmFjeSwgbGlrZSB0cnVtcC4gT2JhbWEgZGlkIG1vcmUgZm9yIHRoZSBwZW9wbGUgaW4gYSBiYWQgc2l0dWF0aW9uIHRoYW4gdHJ1bXAgaGFzIGluIGEgZ29vZCBzaXR1YXRpb24uIAoxLiBBIHJlY2VudCBsYXJnZSBzdHVkeSBpbiB0aGUgSm91cm5hbCBvZiB0aGUgQW1lcmljYW4gTWVkaWNhbCBBc3NvY2lhdGlvbiAyMDA5IGZvdW5kIHRoYXQgcGVvcGxlIHdpdGggZGlhZ25vc2VkLCB1bmRpYWdub3NlZCwgYW5kICJsYXRlbnQiIGNlbGlhYyBkaXNlYXNlIG9yIGdsdXRlbiBzZW5zaXRpdml0eSBoYWQgYSBoaWdoZXIgcmlzayBvZiBkZWF0aCwgbW9zdGx5IGZyb20gaGVhcnQgZGlzZWFzZSBhbmQgY2FuY2VyLiBZZXQgYW4gZXN0aW1hdGVkIDk5IHBlcmNlbnQgb2YgcGVvcGxlIHdobyBoYXZlIGEgcHJvYmxlbSB3aXRoIGVhdGluZyBnbHV0ZW4gZG9uJ3QgZXZlbiBrbm93IGl0LiBTbWFsbCBpbnRlc3RpbmFsIGhpc3RvcGF0aG9sb2d5IGFuZCBtb3J0YWxpdHkgcmlzayBpbiBjZWxpYWMgZGlzZWFzZS4gSkFNQS4gMjAwOSBTZXAgMTY7MzAyKDExKToxMTcxIDguCkkgd2FzIHJlYWxseSBjcmVlcGVkIG91dC4gCkJyYWhtYSBubyBlcyB1biBpbmRpdmlkdW8sIHNpbm8gbGEgZm9ybWEgbm8gbWFuaWZpZXN0YSBkZWwgU2VvciBEaXZpbm8sIGRlIHF1aWVuIHByb2NlZGUgdG9kbyBlbCBtdW5kbyBldmlkZW50ZS4gRWwgZGVzZW8gZGUgbWFudGVuZXJzZSBzYW5vIHkgZW4gZm9ybWEgeSBkZSB2aXZpciBtdWNob3MgYW9zIHN1cmdlIGRlIGxvcyBpbnN0aW50b3MgYnNpY29zIGRlIGNhZGEgb3JnYW5pc21vLi4gCkluIGNhc2ggZ2FtZXMsIGNhcmRzIGFyZSB0eXBpY2FsbHkgb25seSBmbGlwcGVkIHdoZW4gdGhlIGhhbmQgZW5kcy4gVGhlIHBlcnNvbiB3aG8gbWFkZSB0aGUgbGFzdCBiZXQgKHRoZSBvbmUgd2hvIHdlbnQgYWxsIGluKSBoYXMgdG8gc2hvdyBoaXMgY2FyZHMgZmlyc3QuIFRoZSBjYWxsZXIgY2FuIHRoZW4gY2hvb3NlIHRvIGVpdGhlciBzaG93IGhpcywgb3IgbXVjay4gCkNvbGQgYW5kIGZsdSBzZWFzb25zIG92ZXJsYXAsIHNvIGl0IHdvcmtzIG91dCBmb3IgdXMgdGhhdCB0aGV5J3ZlIGZpZ3VyZWQgb3V0IGhvdyB0byB0cmVhdCBhIHN0dWZmeSBub3NlIGFuZCBhbiB1cHNldCBzdG9tYWNoIHdpdGggdGhlIHNhbWUgb3ZlciB0aGUgY291bnRlciBtaW5kIGVyYXNlci4uIApUYWtlIGEgc2lwIGV2ZXJ5IHRpbWUgc29tZW9uZSBzYXlzICJicmFuZCBwdXJwb3NlLiIgQ2VydGFpbmx5IG5vdCBhIG5ldyBwaHJhc2UgZm9yIHRoaXMgY3Jvd2QsIGl0IHdhcyBoYW1tZXJlZCBob21lIHJlcGVhdGVkbHkgYXQgbW9ybmluZyBzZXNzaW9ucyBmcm9tIEZlZEV4LCBBbmNlc3RyeSBhbmQgZUJheS4gSW4gZmFjdCwgU3V6eSBEZWVyaW5nLCB0aGUgY2hpZWYgbWFya2V0aW5nIG9mZmljZXIgZm9yIE5vcnRoIEFtZXJpY2EgYXQgZUJheSwgZXZlbiBqb2tlZCBhYm91dCB0aGUgcmVwZXRpdGlvbiBvZiAidHJ1c3QiIGFuZCAicHVycG9zZSIgYmVpbmcgcGVyZmVjdCBmb3IgZHJpbmtpbmcgZ2FtZXMuICJZb3UganVzdCBoZWFyZCBmcm9tIHR3byBncmVhdCBjb21wYW5pZXMgdGFsa2luZyBhYm91dCBob3cgaW5jcmVkaWJseSBpbXBvcnRhbnQgcHVycG9zZSBpcywiIERlZXJpbmcgc2F5cy4gCkknbSBob3BpbmcgcGVvcGxlIEkgaGF2ZSBpbiB0aGUgbGluZSBvZiBmaXJlIGdldCBvdXQgb2suCihGdWxsIEFuc3dlcikuIApJZiB5b3UgYSBsaWJlcmFsIGFuZCB5b3UgYWdhaW5zdCB0aGlzIHNvbWVob3csIHlvdSBtb3JlIGFib3V0IHRyaWJhbGlzbSB0aGFuIHRoZSBhY3R1YWwgaXNzdWVzLiBXZSBoYXZlIG5vIHJlYXNvbiB0byBiZSB0aGVyZSwganVzdCBsaWtlIElyYXEuIApKdWRnaW5nIGZyb20geW91ciBjb21tZW50cyBpbiB0aGlzIHRocmVhZCwgeW91IGhhdmUgYSBiYWQgYXR0aXR1ZGUgYWJvdXQgZGF0aW5nLCB5b3Ugc2VlbSB0byBoYXZlIGFuIGluZmxhdGVkIHNlbGYgd29ydGggKCJJIGhhdmUgc28gbXVjaCBtb3JlIGdvaW5nIGZvciBtZSBpbiBteSBsaWZlIHRoYW4gbW9zdCBndXlzIiwpIGFuZCB5b3UgY29tcGxhaW4gdGhhdCB0aGUgb25seSB3b21lbiB5b3UgY2FuIGdldCB0byBob29rIHVwIHdpdGggeW91IGFyZSAic28gc28uIiBZb3UgcHJvYmFibHkganVzdCBhIG5vcm1hbCBwZXJzb24gd2hvIHRoaW5rcyBoZSBtb3JlIGF0dHJhY3RpdmUgYW5kIGNoYXJpc21hdGljIHRoYW4gaGUgaXM7IHlvdSBhcmUgb25seSBwdXJzdWluZyB3b21lbiBvdXQgb2YgeW91ciBsZWFndWUgYW5kIHRoZW4gdGhpbmtpbmcgIklUIFRIRUlSIEZBVUxUIFRIRVkgTk9UIElOVE8gTUUhIiBJbiBteSBvcGluaW9uLCB5b3UgZG9uIG5lZWQgYSBkYXRpbmcgY29hY2gsIHlvdSBuZWVkIHRvIHR1cm4gdGhlIG1pcnJvciBvbiB5b3Vyc2VsZi4gClN0aWxsLCB0aGVyZSBoYXZlIGJlZW4gbm8gcmlnb3JvdXMgc3R1ZGllcyB0ZXN0aW5nIHdoZXRoZXIgdXNpbmcgYSBzdXJyb2dhdGUgaXMgYW55IGJldHRlciB0aGFuIG90aGVyIGZvcm1zIG9mIHRoZXJhcHkuIFRoYXQsIGFuZCB0aGUgZHViaW91cyBsZWdhbGl0eSBvZiB0aGUgcHJhY3RpY2UsIGtlZXBzIHN1cnJvZ2FjeSBvbiB0aGUgZnJpbmdlLgpJIGVuZGVkIHVwIGNhbGxpbmcgaGltIGluIHRoZSBtb3JuaW5nIGFuZCBvZiBjb3Vyc2UgaGUgZGVuaWVkIGV2ZXJ5dGhpbmcuIEkgc2hvd2VkIGhpbSB2aWRlbyBwcm9vZiBhbmQgaGUgc3RpbGwgZGVuaWVkIGV2ZXJ5dGhpbmcgYW5kIHNhaWQgaGUnbGwgb25seSBzZW5kIHVzIGJhY2sgJDgwMCBqdXN0IGJlY2F1c2UgImhlJ3MgdGlyZWQgb2YgdXMgYWNjdXNpbmcgaGltIi4gCkFsc28sIGkgbG92ZSB0byBidWRnZXQuIEJ1dCBpZiBJIGhhZCB0byBvcGVuIG9uZSBkcml2ZSBhbmQgbG9hZCBhIHNwcmVhZHNoZWV0IGp1c3QgdG8gbG9vayBhdCB0aGUgcnVubmluZyB0b3RhbHMsIHlvdSBjYW4gYmV0IEkgd291bGQgbm90IGJlIGJvdGhlcmluZyBidWRnZXRpbmcgYXQgYWxsLiAKTWEgaW4gY2hlIG1pc3VyYSBpIHBpYW5ldGkgY2kgaW5mbHVlbnphbm8/Ck91ciBzaXRlIG9mZmVycyB0byB5b3UgbWFueSBzZXJ2aWNlcyB0byBtYWtlIG5ldyBmcmllbmRzIGFuZCBtZWV0IG5ldyBwZW9wbGUgdGhhdCB5b3UgaGF2ZSBjb21tb24gaW50ZXJlc3RzIHdpdGggdGhlbS4uIApUaGUgcmVtYWluaW5nIDUwIHBlcmNlbnQgaXMgY29udHJpYnV0ZWQgdG8gYSBsb2NhbCBjaGFyaXR5LiBPbmNlIGFnYWluIHRoaXMgeWVhciwgRHIuIApJY2ggaG9mZmUgaWNoIGtvbm50ZSBoZWxmZW4gPSkKTm90ICJmdW5ueSBoYSBoYSwiIGJ1dCBmdW5ueSBpbiB0aGF0IGl0IHdhcyBidWJibGluZyB1cCBhbmQgaGl0dGluZyB0aGUgc2hvcmUgYSBsaXR0bGUgY2xvc2VyIHdpdGggZWFjaCB3YXZlLiAKVGhlIFNlbmF0ZSBiaWxsIChTQiA4KSB3b3VsZCBjaGFuZ2UgYWxsIHRoYXQuIEl0IHdvdWxkIGFsbG93IHNsb3QgbWFjaGluZXMgYXQgZG9nIGFuZCBob3JzZSB0cmFja3MgYW5kIHBva2VyIHJvb21zIGluIER1dmFsIGFuZCBzZXZlbiBvdGhlciBjb3VudGllcyBvdXRzaWRlIG9mIFNvdXRoIEZsb3JpZGEgd2hlcmUgbG9jYWwgdm90ZXJzIGhhdmUgYXBwcm92ZWQgcmVmZXJlbmR1bXMuIApCaWcgVGVuIEFubm91bmNlcyBKaW0gRGVsYW55IFdpbGwgU3RlcCBEb3duIEluIEp1bmUgMjAyMEppbSBEZWxhbnksIG9uZSBvZiB0aGUgbW9zdCBpbmZsdWVudGlhbCBmaWd1cmVzIGluIGNvbGxlZ2UgYXRobGV0aWNzIGZvciB0aHJlZSBkZWNhZGVzLCB3aWxsIHN0ZXAgZG93biBhcyBCaWcgVGVuIGNvbW1pc3Npb25lciB3aGVuIGhpcyBjb250cmFjdCBleHBpcmVzIGluIEp1bmUgMjAyMC4KSSAoRiwgMjIgYXQgdGhlIHRpbWUpIHdhcyB0cmF2ZWxpbmcgdGhyb3VnaCBJdGFseSBhbG9uZS4gQXQgdGhlIGVuZCBvZiBteSB0cmlwIEkgd2FzIHN0YXlpbmcgYXQgYSBob3N0ZWwgaW4gUm9tZSBhbmQgZGVjaWRlZCB0byBtYWtlIGEgZGF5IHRyaXAgdG8gTmFwbGVzIGFuZCBQb21wZWkuIFdoZW4gSSB0b2xkIHRoZSBob3N0ZWwgZW1wbG95ZWVzIG15IHBsYW4gdGhleSBhbGwgZnJlYWtlZCBvdXQgYW5kIHNhaWQgSSBzaG91bGRuJ3QgZ28gYWxvbmUuIEZlZWxpbmcgY29uZmlkZW50LCBJIHNocnVnZ2VkIG9mZiB0aGVpciB3b3JyaWVzIGFuZCBkZWNpZGVkIHRvIG1ha2UgdGhlIHRyaXAgYW55d2F5LiBUb29rIHRoZSB3cm9uZyB0cmFpbiBmcm9tIE5hcGxlcywgcmVhbGl6ZWQgbXkgbWlzdGFrZSBhbmQgZ290IG9mZiBhdCBzb21lIHJhbmRvbSBzdG9wIGluIHRoZSBvdXRza2lydHMgb2YgTmFwbGVzLCBmaWd1cmluZyB0aGVyZSB3b3VsZCBiZSBhbm90aGVyIHRyYWluIGdvaW5nIGJhY2sgc29vbi4gU2hvcnRseSBhZnRlciwgbG9jYWwgZHVkZXMgc3RhcnRlZCBzaG93aW5nIHVwIG9uIHRoZSBvcHBvc2l0ZSBzaWRlIG9mIHRoZSB0cmFja3MgZ2VzdHVyaW5nIGF0IG1lLCBtdXR0ZXJpbmcgdG8gZWFjaCBvdGhlci4gT25lIGR1ZGUgZXZlbiBob3BwZWQgZG93biBhY3Jvc3MgdGhlIHRyYWNrcyBhbmQgc3RhcnRlZCBwYWNpbmcgb24gbXkgcGxhdGZvcm0uIEkgaGFkIGEgcG9ja2V0IGtuaWZlIGluIG15IGNvYXQgdGhhdCBJIHdhcyB3aGl0ZSBrbnVja2xpbmcgdGhlIHdob2xlIHRpbWUuIEl0IGZlbHQgbGlrZSBmb3JldmVyIGJlZm9yZSB0aGUgbmV4dCB0cmFpbiBzaG93ZWQgdXAuIFRoYW5rZnVsbHkgbm90aGluZyBoYXBwZW5lZCBidXQgSSB3YXMgYmFzaWNhbGx5IGluIHBhbmljIG1vZGUgYW5kIGNvdWxkbid0IHdhaXQgdG8gZ2V0IHRoZSBGIG91dCBvZiBOYXBsZXMuClRoaXMgaXMgZmluZQpUaGUgZW50cnkgdG8gVG93ZXIgMSBhdCBUaGUgU3RhciBpc2xhbmQgZnJvbSBHb2xkIENvYXN0IEh3eSBhbmQgZnJvbnRpbmcgVGFsbGVidWRnZXJhIENyZWVrLiBUb3dlciAxIGhhcyBiZWVuIGNvbW1pdHRlZCB0byBieSBTdGFyIGFuZCBzdGFydHMgY29uc3RydWN0aW9uIGluIEF1Z3VzdC4KRmFjZSBjYXJkcyBhcmUgYWxsIHdvcnRoIDEwIHBvaW50cyBhbmQgYW4gYWNlIGNhbiBiZSB3b3J0aCAxIG9yIDExIHBvaW50cywgd2hpY2ggaXMgdXAgdG8geW91LiBVbmxpa2UgaW4gcG9rZXIgaW4gdGhpcyBnYW1lIHlvdSBhcmUgbm90IHBsYXlpbmcgYWdhaW5zdCB0aGUgb3RoZXIgcGxheWVycyBhbmQgdGhlIGRlYWxlciwgaXQgSSBqdXN0IHRoZSBkZWFsZXIuIApTdHJhdGVnaWMgaW50ZWxsaWdlbmNlIGlzIHdoYXQncyBuZWVkZWQgdG8gb3V0c21hcnQgYSBjdW5uaW5nIHJpdmFsLiAKSGV5IGV2ZXJ5b25lLCBwbGVhc2UgZGVsZXRlIGlmIG5vdCBhbGxvd2VkIDopIEkgaGF2ZSBhIGZyaWVuZCB3aG8gam9pbmVkIHRoZSBneW0gYWJvdXQgYSB5ZWFyIGFnbyBhbmQgaGUgdXNlZCB0byBiZSBxdWl0ZSBza2lubnksIGJ1dCBub3cgaGUgaGFzIGdhaW5lZCBhIGZhaXIgYW1vdW50IG9mIG11c2NsZS4gV2Ugd2VudCBvdXQgZm9yIGJyZWFrZmFzdCBhbmQgaGUgb3JkZXJlZCB0d28gc2V0cyBvZiBpbmRpdmlkdWFsIHBhbmNha2UgbWVhbHMuIApDb25zdW1lcnMgd2FudCAiY2xlYW4odmlyZ2luKSxzb2Z0ZXIsIHN0cm9uZ2VyIiB0aXNzdWVzIGFuZCBjb25zdW1lciBkZW1hbmQgaXMgd2hhdCB0aGUgY29tcGFueSBmb2N1c2VzIG9uLgpMYSBkaXR0aXF1ZSBlc3QgdW5lIHBhcnRpZSBpbXBvcnRhbnRlIHNpbm9uIGxhIHBsdXMgaW1wb3J0YW50ZSBkZSBsZSBtZGVjaW5lIG5hdHVyZWxsZS4gSWwgdGFpdCBkZXZlbnUgbmNlc3NhaXJlIGRlIHJhc3NlbWJsZXIgbGVzIGFydGljbGVzIHN1ciBsZSBzdWpldC5MYSBmb3JtdWxlIGR1IGJsb2cgbidlc3QgdnJhaW1lbnQgcGFzIGlkYWxlIHBvdXIgdW5lIG1pc2UgIGpvdXIgZXQgY2VsdWkgY2kgdHJhaXRlIGRlcHVpcyA2IGFucyBlbnZpcm9uIChqdWlsbGV0IDIwMTApIGRlIHF1ZXN0aW9ucyBjb21wbGV4ZXMgbyBsZXMgdnVlcyBwZXV2ZW50IHZvbHVlciBkJ2FubmVzIGVuIGFubmVzLlJ2aXNpb25zIDogVW5lIGRlcyBkaWZmaWN1bHRzIHByb3ZpZW50IGRlIGNlIHF1ZSBiZWF1Y291cCBkJ2FydGljbGVzIHRyYWl0ZW50IGRlIHBsdXNpZXVycyBzdWpldHMsIGxlIGNhcyBjaGFudCwgaWwgc2Vyb250IGNsYXRzIGxvcnMgZCd1bmUgcnZpc2lvbi4gClNwZWNpYWxseSB0aGUgY2FzaW5vIGZyZWFrcyBjYW4gbmV2ZXIgdGhpbmsgd2l0aG91dCBibGFja2phY2sgb3IgVGV4dXMgSG9sZCdlbSBwb2tlciBub3dhZGF5cy4gCkJ1dCBoZSB3YXMgbW9yZSB0aGFuIGp1c3QgYSBneW0gb3duZXIgYW5kIGJvZHlidWlsZGVyLiBFaWZlcm1hbiB0cmF2ZWxlZCB0aGUgVW5pdGVkIFN0YXRlcyBmb3IgYSBxdWFydGVyIGNlbnR1cnksIHNwZWFraW5nIHRvIHNjaG9vbCBhc3NlbWJsaWVzLCB1cmdpbmcga2lkcyB0byBleGVyY2lzZSBhbmQgZWF0IGhlYWx0aHkgZm9vZHMuIEhlIG1hZGUgbW92aWVzIGFuZCBkYW5jZWQgb24gdGhlIExhcyBWZWdhcyBzdGFnZSB3aXRoIHRoZSBsZWdlbmRhcnkgTWFlIFdlc3QsIGhpcyBvbmUgdGltZSBnaXJsZnJpZW5kLgpDbHVicyBOU1cgTmV3Y2FzdGxlIGFuZCBIdW50ZXIgcmVwcmVzZW50YXRpdmUgSm9uIENoaW4gc2FpZCByZXZlbnVlIGF0IG1hbnkgSHVudGVyIGNsdWJzIGhhZCBiZWVuIGZhbGxpbmcgc2luY2UgdGhlIDIwMDcgc21va2luZyBiYW4uIE1yIENoaW4sIEhleGhhbSBCb3dsaW5nIENsdWIgc2VjcmV0YXJ5IG1hbmFnZXIsIHNhaWQgaGUgd2FzIGF0IGEgbG9zcyB0byBleHBsYWluIHRoZSBpbmNyZWFzZSBpbiBuZXQgcHJvZml0IGJlY2F1c2UgbWFueSBjbHVicyB3ZXJlIGRvaW5nIGl0IHRvdWdoLiAKSGF2ZSB0aGUgaG9seSBtYWlkZW4vMXN0IHByaW5jZXNzIGJlIGEgZmlndXJlIG9ic2Vzc2VkIHdpdGggdGhlIGhlcm8gd2hvIGF0IGZpcnN0IHNlZW1zIHN5bXBhdGhldGljIHVudGlsIHlvdSByZWFsaXplIHNoZSBsb3N0IGhlciBwZXJzb25hbGl0eSBkdWUgdG8gYnJhaW53YXNoaW5nLCB0aGUgMm5kIHByaW5jZXNzIGF0IGZpcnN0IHNlZW1zIGV2aWwgdW50aWwgeW91IHJlYWxpemUgc2hlIHdhcyBhdHRlbXB0aW5nIHRvIHByb3RlY3QgaGVyIHNpc3RlciBhcyB3ZWxsIGFzIGtlZXAgdGhlIGhlcm8gYXdheSBiZWNhdXNlIGhlcm9lcyBpbiB0aGlzIHdvcmxkIGFyZSBha2luIHRoaW5nIGtpbmdkb21zIHVzZSBhcyB3ZWFwb25zLCB3aXRoIHRoZSBob2x5IG1haWRlbnMgYmVpbmcgYSB3YXkgdG8gY29udHJvbCB0aGVtLmJ1dCBJIGRvbnQgdGhpbmsgaXQgd2lsbCBnbyB0aGF0IGRpcmVjdGlvbiwgSSBkb250IHRoaW5rIHRoZXJlIGFyZSBhbnkgdWx0ZXJpb3IgcmVhc29ucyBmb3Igd2h5IHRoZSAxc3QgcHJpbmNlc3MgaXMgb2JzZXNzZWQgd2l0aCB0aGUgaGVybyBvdGhlciB0aGFuICJiZWNhdXNlIGlzZWthaSIuLiAKKDYpIFRoZXJlIGFyZSBubyBjaGFuZ2VzIGluIHNwaW5kbGUgZGlzdHJpYnV0aW9uLCBtb3JwaG9sb2d5LCBvciBkZW5zaXR5IGZvciB0aGUgbG9uZ3VzIGNvbGxpIG9yIG11bHRpZmlkdXMgd2l0aCBpbmNyZWFzaW5nIGFnZS4gQ29uc2VxdWVudGx5LCB0aGUgYWdlZCBtdXNjbGUgcmV0YWlucyBpdHMgZnVuY3Rpb25hbCBhZmZlcmVudCBzcGluZGxlIGNhcGFjaXR5IGRlc3BpdGUgc3BpbmFsIGRlZ2VuZXJhdGl2ZSBjaGFuZ2VzLgpIZSBzYWlkOiBNdWxsZW4gY2FuZGlkIGFuZCBzdHVubmluZyB0ZXN0aW1vbnkgdGhhdCBkaXJlY3RseSBsaW5rcyBQYWtpc3RhbiBpbnRlbGxpZ2VuY2Ugc2VydmljZSwgSVNJLCB0byByZWNlbnQgYXR0YWNrcyBvbiBOYXRvIGZvcmNlcyBhbmQgdGhlIFVTIEVtYmFzc3kgaW4gQWZnaGFuaXN0YW4gcHV0cyBBbWVyaWNhIGFuZCBQYWtpc3RhbiBvbiBhIGNvbGxpc2lvbiBjb3Vyc2UuCldhcyB0aGUgc2VhdCBvZiBvdmVyd2hlbG1pbmcgYW5kIGNhcGFjaXRpZXMuIApUaGUgZ3Jvd3RoIG9mIHRoZSBuYXRpb24sIHRoZXJlZm9yZSwgYW5kIGFsbCBvdXIgYWN0aXZpdGllcyBhcmUgaW4gdGhlIGhhbmRzIG9mIGEgZmV3IG1lbi4gV2UgaGF2ZSBjb21lIHRvIGJlIG9uZSBvZiB0aGUgd29yc3QgcnVsZWQsIG9uZSBvZiB0aGUgbW9zdCBjb21wbGV0ZWx5IGNvbnRyb2xsZWQgYW5kIGRvbWluYXRlZCBHb3Zlcm5tZW50cyBpbiB0aGUgY2l2aWxpemVkIHdvcmxkIG5vIGxvbmdlciBhIEdvdmVybm1lbnQgYnkgZnJlZSBvcGluaW9uLCBubyBsb25nZXIgYSBHb3Zlcm5tZW50IGJ5IGNvbnZpY3Rpb24gYW5kIHRoZSB2b3RlIG9mIHRoZSBtYWpvcml0eSwgYnV0IGEgR292ZXJubWVudCBieSB0aGUgb3BpbmlvbiBhbmQgZHVyZXNzIG9mIGEgc21hbGwgZ3JvdXAgb2YgZG9taW5hbnQgbWVuLi4gCk5vdywgb25saW5lIHBva2VyIHNpdGVzIGFsbG93IHBsYXllcnMgdG8gc2V0IHVwIHRoZWlyIHByaXZhdGUgcG9rZXIgdGFibGVzIGFuZCBhbGwgdGhleSBoYXZlIHRvIGRvIGlzIGxvZyBpbiwgc2V0dXAgdGhlIHRhYmxlIGFuZCBpbnZpdGUgZnJpZW5kcyB0byBwbGF5LiAKQSBnb29kIHN0dWRlbnQsIHRoZSBpbnRlcmVzdCBmb2xsb3dlZCBoaW0gdGhyb3VnaCBzY2hvb2wgYW5kIHRocm91Z2ggaGlzIGNvbnZlcnNpb24gdG8gQnVkZGhpc20gYW5kIGhpcyB3b3JrIHRyYW5zbGF0aW5nIEJ1ZGRoaXN0IHRlYWNoaW5ncyBmcm9tIFNhbnNrcml0IGFuZCBUaWJldGFuLiBJdCB3b3JrIGhlIGJlZW4gZG9pbmcgc2luY2UgbW92aW5nIHRvIEhhbGlmYXggaW4gMTk4Ni4KKFBsdXMsIEkgZGlzY292ZXJlZCB0aGF0IGlmIHlvdSBkb24gdXNlIHRoZSBtYWduZXQsIGl0IGp1c3QgYSBnb3JnZW91cyBnbGl0dGVyICAgc28gaXQga2luZGEgbGlrZSBnZXR0aW5nIHR3byBmb3Igb25lLikgOiApLiAKU2VjcmV0YXJ5IG9mIERlZmVuY2UgSmltIE1hdHRpcyBxdWl0IGluIHByb3Rlc3QuIApJbnRlbnNlLCB0aGVuIGZhZGUuIFNvIGl0IHNsb3dseSBzdGFydHMgbW92aW5nIGFyb3VuZCB0byB0aGUgZnJvbnQgb2YgeW91ciBib2R5LiBUaGF0IHRoZSBhYnNvbHV0ZSB3b3JzdC4gCklmIHlvdSB3ZXJlIG1hcnJpZWQgd2hlbiB5b3UgcHVyY2hhc2VkIHRoZSBob3VzZSBpdCBkb2VzbiBtYXR0ZXIgdGhhdCBoZSBkaWRuIHB1dCBhbnl0aGluZyBkb3duLiBUaGUgY291cnQgd2lsbCBhc3N1bWUgdGhlIG1vbmV5IHlvdSB3ZXJlIGFibGUgdG8gc2F2ZSB3YXMgZHVlIHRvIHRoZSBtb25leSBoZSBzcGVuZCB3aGlsZSB5b3Ugd2VyZSBzYXZpbmcuIApKdXN0IGJlY2F1c2UgeW91IHN0YW4gYSBncm91cCBkb2VzbiBtZWFuIHlvdSBoYXZlIHRvIGhvcCB0aHJvdWdoIGhvb3BzIHRvIGNhbGwgb3V0IGV2ZXJ5IGxpdHRsZSB0aGluZyBhbmQgc2lkZXdheXMgY29tbWVudCwgYXMgaWYgdGhleSBoYXZlIGFueSBiZWFyaW5nIG9uIHdoYXQgd2lsbCBoYXBwZW4gaW4gcmVhbGl0eS4uIApUcmlwcyB0byB0aGUgZG9jdG9yJ3Mgb2ZmaWNlIGluIDIwMDMuClBsZWluZSBkZSBncmNlLCBldCBzcmUgZGUgc29uIGNoYXJtZSwgZWxsZSBleGhpYmUgYXZlYyBsYW5ndWV1ciBzZXMgdHJzb3JzIGltcHJpc3NhYmxlcy4gClNpbWlsYXJseSB0aGV5IGFyZSBhbHNvIHZ1bG5lcmFibGUgdG8gZXh0cmVtZSBjb2xkIGlmIGxlZnQgZm9yIGEgd2hpbGUuIApaeGN6eGN6YmZnICAgMSBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvClByaW9yaXRpemUgc29sYXIgaW5zdGFsbHMgb24gYWxsIG5ldyBzdHJ1Y3R1cmVzIChlZyBjYXJwYXJrcywgc2hvcHBpbmcgbWFsbHMpIHdoZXJlIHJvb2Ygc3BhY2UgaXMgdW5kZXJ1dGlsaXplZCBhbmQgc3RhcnQgaW5zdGFsbGluZyBidWxrIGJhdHRlcnkgcGxhbnRzIGF0IG1ham9yIHJlZ2lvbmFsIHN1YnN0YXRpb25zIHRvIGhlbHAgc3ByZWFkIHRoZSBsb2FkIGFyb3VuZCB0aGUgbmV0d29yay4gVGhpcyBoZWxwcyByZW1vdmUgdGhlIHJpc2sgZnJvbSBoYXZpbmcgdGhlIHBvdGVudGlhbGx5IGRhbmdlcm91cyBsaXRoaXVtIGJhdHRlcmllcyBpbiB5b3VyIGhvdXNlLCBhbmQgbGV2ZWxzIHRoZSBwbGF5aW5nIGZpZWxkIGZvciBub24gb3duZXJzLi4gCldlYmJpZTA0ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KRW4gZCdhdXRyZXMgdGVybWVzLCByZWNvdXJpciAgY2UgdHlwZSBkZSBwcm9kdWl0IG4nZXN0IHBhcyBkdSB0b3V0IGF2YW50YWdldXguIApUaGUgcG9pbnQgaXMgdGhhdCBsZWFybmluZyBhbm90aGVyIGxhbmd1YWdlIHZvd2VsIHN5c3RlbSBtZWFucyBsZWFybmluZyB0byBzbGljZSB1cCB0aGUgdm93ZWwgc3BhY2Ugd2l0aCBkaWZmZXJlbnQgYm91bmRhcmllcywgYW5kIGhhdmluZyB0byBsZWFybiAxMyBuZXcgYm91bmRhcmllcyBpc24gbmVjZXNzYXJpbHkgYW55IGVhc2llciBiZWNhdXNlIHlvdXIgTDEgaGFzIDEzIGRpdmlzaW9ucyBvZiBpdHMgb3duLi4gClRoYXQgcHJhY3RpY2UgaGFwcGVucyBhdCBudW1lcm91cyBsZXZlbHMuIFNvbWUgbWFzdGVyIHRoZSBib2R5LCBzb21lIHRoZSBtaW5kLCBvbiBvY2Nhc2lvbnMsIGJvdGguIFNvbWUgcGFydGlhbGx5IGJyZWFrIGRvd24gdGhlIGJhcnJpZXJzIG9mIGZlYXIuIApTb21lIGdyZWF0IHBva2VyIHN0b3JpZXMgd2VyZSBjcmVhdGVkIHdoZW5ldmVyIERvdWcgaGl0IHRoZSB0YWJsZXMuIApCaWcgZW50cmVwcmVuZXVyaWFsIGFzcGlyYXRpb25zCkkgaGFkIG15IGZpcnN0IGZyZWlnaHRlciBiZWZvcmUgSSBmb3VuZCBhIGJsYWNrIGhvbGUuIEkgdHJhdmVyc2VkIHRoZSBibGFjayBob2xlIGFuZCBlbmRlZCB1cCBpbiBhIHNwYWNlIGJhdHRsZSBmb3IgYSBkaWZmZXJlbnQgZnJlaWdodGVyLiAKWW91IGRlZmluaXRlbHkgY2FuIGNoYWxsZW5nZSBhIGZlZWxpbmcuIFlvdSBjYW4gYWNrbm93bGVkZ2UgdGhlIGZlYXIsIGFuZCByZW1pbmQgeW91cnNlbGYgdGhhdCBpdCdzIGZhbHNlLiBZb3UgY2FuIHVzZSBrbm93bGVkZ2UgdG8gcmVkdWNlIGZlYXIsIG9yIHZhcmlvdXMgdGhlcmFwaWVzIHRvIGNoYW5nZSBob3cgeW91IGZlZWwuIEluIGRpZmZpY3VsdCBjYXNlcyB5b3UgY2FuIGFsd2F5cyBnbyB0byB0aGVyYXB5LiBGb3IgZXhhbXBsZSBJIHdhcyB0ZXJyaWZpZWQgb2Ygc3BpZGVycywgbGlrZSBJIHdvdWxkIHJ1biBzY3JlYW1pbmcgYXQgdGhlIHNpZ2h0IG9mIG9uZSwgYW5kIGl0J3Mgbm90IGFtIGV4YWdnZXJhdGlvbi4gSSBlbmRlZCB1cCBpbm5hIHNpdHVhdGlvbiB3aGVyZSBzcGlkZXJzIHdlcmUgdW5hdm9pZGFibGUsIGFuZCBJIGtub3cgdGhhdCBrbm93bGVkZ2UgdHlwaWNhbGx5IHJlZHVjZXMgZmVhci4gU28gSSBzcGVuZCBhIGxvdCBvZiB0aW1lIHN0YXJpbmcgYXQgcGhvdG9zIG9mIHNwaWRlcnMgYW5kIHJlYWRpbmcgYWJvdXQgdGhlbS4gSSBub3cgbGV0IHNvbWUgbGl2ZSBpbiBteSBwaG9uZSBkZXBlbmRpbmcgb24gdGhlIGtpbmQsIGFuZCBvdGhlcnMgSSBnZW50bHkgcmVtb3ZlLiBXaXRoIGJpZ2dlciBmZWFyIGJhc2VkIGlzc3VlcyBpbiBteSBsaWZlLCBJJ3ZlIGdvbmUgdG8gdGhlcmFweSBhbmQgZG9uZSB3b3JrIHVzaW5nIEVNRFIgd2hpY2ggaXMgdmVyeSBoZWxwZnVsLiBBcyBhIGtpZCwgSSB3YXMgYWZyYWlkIG9mIGJsYWNrIHBlb3BsZSwgYnV0IEkga2VwdCB0ZWxsaW5nIG15c2VsZiAiaXQncyBqdXN0IGEgcGVyc29uLiIgQXMgYW4gYWR1bHQsIHRoZSBtb3JlIGV4cG9zZWQgSSB3YXMgdG8gZGlmZmVyZW50IGV0aG5pY2l0aWVzIGFuZCBjdWx0dXJlcyB0aGUgbGVzcyBhZnJhaWQgSSB3YXMgb2YgcGVvcGxlIGRpZmZlcmVudCB0aGFuIG15c2VsZi4gSSBzdGlsbCBmaW5kIG15c2VsZiBtYWtpbmcgdW5jb25zY2lvdXMgYmlhc2VzIHRpbWUgdG8gdGltZSwgYnV0IG15IGZlYXIgb2Ygb3RoZXJzIGRpZmZlcmVudCB0aGFuIG15c2VsZiBoYXMgZ3JlYXRseSByZWR1Y2VkLgpJIGhhdmUgYmVlbiBhIENocmlzdGlhbiBhbGwgbXkgbGlmZSBhbmQgSSBoYXZlIG5ldmVyIHNlZW4gYSBwcmllc3Qgb3IgcGFzdG9yIGV4cGxhaW4gZmFpdGggdGhlIHdheSB0aGlzIHBhc3RvciBkaWQuIEVpdGhlciBpdCdzIGEgZGVsaWJlcmF0ZSwgZGlzcmVzcGVjdGZ1bCBhdHRlbXB0IHRvIG1ha2UgdGhlIHBhc3RvciBhcHBlYXIgZGltIHdpdHRlZCBhbmQgd2VhayBvbiBmYWl0aCwgb3IgaXQncyBhIHNpZ24gdGhhdCBIb2xseXdvb2QgaGFzIG5vIGlkZWEgd2hhdCBpdCdzIHRhbGtpbmcgYWJvdXQgd2hlbiBpdCBjb21lcyB0byBtYXR0ZXJzIG9mIHRoZSBDaHJpc3RpYW4gZmFpdGguIE1heWJlIGEgbGl0dGxlIGJpdCBvZiBib3RoLi4gCldvdywgeW91IG1pc3NlZCB0aGlzIHBvaW50IGJ5IGEgY291bnRyeSBtaWxlLiBBbHNvIHdoeSB3b3VsZCBJIGJlIHJ1bm5pbmcgdGhlbSB3aXRoIGFkbWluIHByaXZpbGVnZXM/IEFuZCBieSAidW5zaWduZWQiIHlvdSBtZWFuICJmcm9tIGRldmVsb3BlcnMgd2Vic2l0ZXMiIHdoaWNoIGluIGl0c2VsZiBnYXJuZXJzIGEgZGVjZW50IGxldmVsIG9mIHRydXN0LiAKS2VlcCB5b3VyIG9iamVjdGl2ZXMgc3BlY2lmaWMsIHN1Y2ggYXMgY29tcGxldGluZyBhbiBvbmxpbmUgTWljcm9zb2Z0IEV4Y2VsIHR1dG9yaWFsIGJ5IG5leHQgbW9udGguIFNldCB0aGUgdHJhaW5pbmcgYW5kIGV4cGVyaWVuY2UgeW91IG5lZWQgYW5kIG1lYXN1cmUgaG93IG11Y2ggbW9yZSB5b3UgbmVlZCB0byBhY2hpZXZlIHRvIHJlYWNoIHlvdXIgb2JqZWN0aXZlcy4gClRpbmRlciBpcyBwcm9saWZpYyBlbm91Z2ggdG8gY292ZXIgYWxtb3N0IGFsbCBkYXRpbmcgY2FzZXMgc28geW91IGhhdmUgYSB3aWRlIGVub3VnaCByYW5nZSBvZiBwZW9wbGUgdG8gYWNjb3VudCBmb3IgbW9yZSB0aGFuIGp1c3QgY3VsdHVyZSBUaGUgbWFnbmlmeWluZyBnbGFzcyBpdCBwdXRzIG9uIHBlb3BsZSBzZXh1YWwvcmVsYXRpb25zaGlwIHdvcnRoIGlzIHByZXR0eSBtZWFuaW5nZnVsIGFuZCBjYW4gdHJhbnNsYXRlIHF1aXRlIHdlbGwgdG8gcmVhbCBsaWZlLgpWZXJ5IGxpdGVyYWxseSAgb25lIHBlcnNvbiBtaW5kIGJsb3dpbmcgZGVlcCB0aXNzdWUgaXMgYW5vdGhlciAiZmx1ZmZ5IHBhbnN5IGFzcyBtYXNzYWdlIkkgdGhpbmsgdG91Y2ggaXMgdmVyeSBwb3dlcmZ1bC4gV2hlbiBzb21lb25lIGhhcyBiZWVuIGFidXNlZCBvciBob2xkaW5nIGV2ZXJ5dGhpbmcgImluIiB0b3VjaCBjYW4gYmUgdmVyeSByZWxheGluZyB3aGljaCBpbiB0dXJuIGNvdWxkIGFsbG93IHBlb3BsZSB0byByZWxlYXNlIHRoZWlyIGVtb3Rpb25zIHRoYXQgdGhleSB3ZXJlbiBhYmxlIHRvIGJlZm9yZS4gSSBkb24ga25vdyBpZiBJIHdvdWxkIHNheSBlbW90aW9uYWwgdHJhdW1hIGlzIHN0b3JlZCBpbiBtdXNjbGVzIGJ1dCB0aGluayBhYm91dCBob3cgcGVvcGxlIGNhcnJ5IHRoZW1zZWx2ZXMuIElmIHlvdSBhcmUgYWx3YXlzIHRlbnNlIG9yIG5lcnZvdXMgYW5kIHlvdSBmaW5hbGx5IGdldCBhIHJlbGVhc2UsIGl0IGNhbiBiZSBvdmVyd2hlbG1pbmcuIEVzcGVjaWFsbHkgaW4gcGVvcGxlIHdpdGggaGlzdG9yeSBvZiBwaHlzaWNhbCBhYnVzZS4KSGF2ZSB5b3Ugbm90aWNlZCB0aGF0IGFsbCBhcm91bmQgdGhlIHdvcmxkIHBlb3BsZSBhcmUgYmVpbmcgYXNzYXNzaW5hdGVkIHdpdGggZGVhZGx5IG5lcnZlIGFnZW50IFZYPyBZb3UgY2FuIGJlIHN1cmUgdGhlcmUgYXJlIHN0b2NrcGlsZXMgb2YgdGhpcyBzdHVmZiBvdXQgdGhlcmUuIE1ha2luZyBhIGxhdyBhYm91dCBpdCBkb2VzbiBwcmV2ZW50IHBlb3BsZSBmcm9tIGRvaW5nIGl0LiBUaGUgY2l2aWxpemVkIHdvcmxkIGhhdmUgYWxsIGJhbmRlZCB0b2dldGhlciBhbmQgZGVjaWRlZCB0byB1c2Ugb3ZlcndoZWxtaW5nIGZvcmNlIHRvIHByZXZlbnQgcHJvZHVjdGlvbiBvZiBiaW93ZWFwb25zLiBUaGlzIGlzIGFuIGVmZmVjdGl2ZSBzb2x1dGlvbiB0byB0aGUgcHJvYmxlbSBhbmQgaXQgYXBwbGllcyB0aGUgc2FtZSBwcmFnbWF0aXNtIEkgdXNlIHdoZW4gSSBzYXkgYXV0b25vbXkgbXVzdCBiZSBmb3VnaHQgd2l0aCBhdXRvbm9teS4KRm9yIHRoZSBpbiBsb3ZlIHlvZ2lzOiBWYWxlbnRpbmUncyBQYXJ0bmVyIFlvZ2EgYW5kIFRoYWkgTWFzc2FnZQpDdXN0b21lcnMgd291bGQgdHJ5IHRvIHNlbGwgdXMgc3RvbGVuIHN0dWZmLCB0b28uIEl0IHdhcyBsaWtlIGEgdHJhZGluZyBjYXJhdmFuIGluIFNoZXJ3b29kIEZvcmVzdC4gSSBnb3QgY29ybmVyZWQgaW4gdGhlIHBhcmtpbmcgbG90IGJ5IHR3byBnaXJscyB3aXRoIGlvZGluZSBzdGFpbmVkIGZpbmdlcnMgd2hvIHdlcmUgZGV0ZXJtaW5lZCB0byBzZWxsIG1lIGEgYmFnIG9mIHdvbWVuJ3MgY29zbWV0aWNzIHRoYXQgSSdtIHByZXR0eSBzdXJlIHN0aWxsIGhhZCBzaGFyZHMgb2YgYnJva2VuIGdsYXNzIGluIGl0LgpBIGZldyBjYXJkIHJvb21zIG9mZmVyIHNwcmVhZCBsaW1pdCBIb2xkJ2VtLiBTcHJlYWQgbGltaXQgSG9sZCdlbSBpcyBzdGF0ZWQgYXMgMi8xMCBvciBzb21ldGhpbmcgc2ltaWxhci4gVGhlIGJsaW5kcyBhcmUgdGhlIHNhbWUgYXMgZml4ZWQgbGltaXQ6IEZvciBleGFtcGxlLCBpbiB0aGUgMi8xMCBnYW1lcywgdGhlIHNtYWxsIGJsaW5kIGlzICQxLCBhbmQgdGhlIGJpZyBibGluZCBpcyAkMi4gCkF0IHNvbWUgcG9pbnQsIHlvdSBsb3NlIGEgY291cGxlIG9mIGhhbmRzIGFuZCB0aGVuIHlvdSBsb29rIGluIHRoZSBzdGFuZHMgYW5kIHlvdSBzZWUgMjAwIHBlb3BsZSB3ZWFyaW5nIEhhYnMgamVyc2V5cy4gSXQgd2FzIGFtYXppbmcuIFlvdSBnZXQgYSBtb21lbnR1bSBib29zdCByaWdodCBhd2F5LiAKTm93LCB5b3UgYXJlIHByb2JhYmx5IGF3YXJlIG9mIGFsbCB0aG9zZSB3aGl0ZSBhbmQgYmx1ZSBSZWFsIENsYXkgUG9rZXIgQ2hpcHMgZmxvYXRpbmcgYXJvdW5kIG91dCB0aGVyZS4gCkkgaGFkIG5vIHJlYXNvbiB0byBxdWVzdGlvbiB0aGUgYW1vdW50IG9mIHNvY2tzIHNoZSBldmVyIGhhcyBiZWNhdXNlIHdobyBwYXlzIGF0dGVudGlvbiB0byB0aGF0IGtpbmQgb2YgdGhpbmc/IFNoZSB0aG91Z2h0IEkgd291bGQgbm90aWNlIGFuZCB0aGluayBpdCB3YXMgd2VpcmQgc2luY2Ugc2hlIGRvZXNuIG93biBtYW55IHNvY2tzLiAKU28sIEkgdG9vayB0aGF0IHRvIG1lYW4gdGhleSB3ZXJlIGEgYml0IHRvbyBmb2N1c2VkIG9uIHNhbGVzLiAKRGljayB3YXMgaW5zdHJ1bWVudGFsIGluIGNyZWF0aW5nIFNpbXMgQ2xlbWVudCBFYXN0bWFuIGFuZCBhc3Npc3RlZCBpbiBydW5uaW5nIHRoYXQgZmlybSBmb3IgMTIgeWVhcnMuIEhlIHJldGlyZWQgaW4gMjAxMSBmcm9tIE1pbGxlciBUaG9tcHNvbiBMTFAgTGF3IEZpcm0gYWZ0ZXIgcHJhY3RpY2luZyBsYXcgZm9yIDU2IHllYXJzLiBIZSBoYWQgYSBzdGVsbGFyIGNhcmVlciBhbmQgcmVsdWN0YW50bHkgcmV0aXJlZCBmcm9tIGhpcyBwYXNzaW9uIGF0IDgyIHllYXJzIG9sZC4gClRoZSBQYXJpcyBDbGltYXRlIEFncmVlbWVudCBpcyBhbiBhYnNvbHV0ZSBqb2tlLiAKVGhlIHRpdGxlIG9mIHRoZSBwb3N0IGlzIGludGVudGlvbmFsbHkgaW5mbGFtbWF0b3J5LiAKVGhlIHJhbmdlIG9mIGJldHMgYW5kIG9kZHMgaXMgZ3JlYXQsIGVzcGVjaWFsbHkgZm9yIEV1cm9wZWFuIGZvb3RiYWxsIGxvbmcgc2hvdHMuIFRoZXJlIGFsbCBraW5kcyBvZiBiZXRzLCBmcm9tIHN0YW5kYXJkIGluIHBsYXksIGZ1bGwgdGltZSByZXN1bHQsIG92ZXIvdW5kZXIsIGFuZCBvZGQvZXZlbiBiZXRzIHRvIGRyYXcgbm8gYmV0LCBBc2lhbiBjYXJkcywgQXNpYW4gY29ybmVycywgbmV4dCBwZXJtYW5lbnQgbWFuYWdlciwgdG8gcmVhY2ggcXVhcnRlciBmaW5hbCwgdG8gcmVhY2ggc2VtaSBmaW5hbCwgdG8gYmUgcHJvbW90ZWQsIHRvIGJlIHJlbGVnYXRlZCBhbmQgb3RoZXIgYmV0cy5Ib3JzZSBSYWNpbmdiZXQzNjUgY29uc3RhbnRseSB1cGRhdGVzIGl0cyBwcmljZXMgZm9yIGFsbCByYWNlcyB0aGF0IGFyZSBzaG93biBsaXZlIG9uIENoYW5uZWwgNCBpbiBhbiBhdHRlbXB0IHRvIGVuc3VyZSB0aGF0IHRoZSBiZXN0IHByaWNlcyBmb3IgZXZlcnkgaG9yc2UgcnVubmluZyBhcmUgb2ZmZXJlZCBhdCBhbGwgdGltZXMuIApDaGFybGVzIFJvYmVydCBoYXphcmRzIGEgZ3Vlc3MsIHdpdGggYSBzbWlsZSBpbiBoaXMgdm9pY2UsIHRoYXQgbW9zdCBDYW5hZGlhbnMgYXJlIHVuYXdhcmUgb2YgdGhlIG9yZ2FuaXphdGlvbiBoZSBsZWFkcywgZXZlbiB0aG91Z2ggaXQgcGxheXMgYSBjZW50cmFsIHJvbGUgaW4gdGhlIGZ1bmN0aW9uaW5nIG9mIHRoZWlyIGRlbW9jcmFjeS4KSXRzIG5vdCByZWFsbHkgcm9ja2V0IHNjaWVuY2UgYnV0IHRoZSBmaXJzdCBzdGVwIGluIGFsbCBvZiB0aGlzIGlzIHRvIHJlYWxpemUgdGhhdCB5b3UgYXJlIG5vdCB5b3VyIHRob3VnaHRzIGFuZCB0aGF0IGV2ZXJ5dGhpbmcgaW4gbGlmZSBpcyBhIGNob2ljZS4gU3VmZmVyaW5nIGlzIGEgY2hvaWNlIGFuZCBzbyBpcyBoYXBwaW5lc3MuLiAKTW9zdCBjdXBzIGFyZSBib2lsZWQgZm9yIHNhbml0YXJ5IHJlYXNvbnMgYnV0IHJldXNhYmxlLiBUaGUgc29mdGN1cCBpcyBub3QgcmV1c2FibGUgYnV0IEkgaGF2ZSBoZWFyZCBvZiBwZW9wbGUgdXNpbmcgaXQgZm9yIHRoZSBlbnRpcmUgZHVyYXRpb24gb2Ygb25lIHBlcmlvZC4gCkxlbmRlbWFpbiwgZWxsZSBzIHIgYXZlYyB1biBtYWwgZGUgdmVudHJlIGV0IHVuZSBkb3VsZXVyIGF1eCBvcmdhbmVzIGcgSmUgc3VpcyBhbGwgbGEgc2FsbGUgZGUgYmFpbnMgZXQgaiBjb21wcmlzIHF1IG4gcGFzIGFyciBtYWxnciBsZSBmYWl0IHF1ZSBqZSBtIFNhcmFoLiAKSW50ZXJlc3RpbmcgdGFrZSB0aG91Z2guIHJlamVjdCB3aGF0IGFsbCB0aGUgcHJvZmVzc2lvbmFscyBzYXksIHdoYXQgbXkgZXllcyBzaG93IG1lLCBwaG90b3Mgb2YgdGhlIGVhcnRoLCB3ZWF0aGVyIHBhdHRlcm5zLCB0aGUgc29sYXIgc3lzdGVtLCBiYXNpYyBzY2llbnRpZmljIGNvbnN0YW50cyBhbmQgbXkgb3duIGluZGVwZW5kZW50IHRlc3QgcmVzdWx0cyBiZWNhdXNlIHBlb3BsZSBpbiB0aGUgYWNhZGVtaWMgY29tbXVuaXR5IGFyZSBtZWFuLiBsaWtlIGV2ZW4gbW9yZSByZWFzb24gdG8gcmlkaWN1bGUgdGhlbS4KT25lIGRheSwgaGUgc3RhcnRlZCBwYWNraW5nLiBOb3QgaW4gYW55IHNlbnNpYmxlIG9yZGVyLCBidXQgc3R1ZmYgbGlrZSBwbGF0ZXMsIHNvY2tzLCBzb21lIGJvb2tzLCBhIGJpdCBvZiB0cmFzaC4gWW91IGtub3csIHRoZSBlc3NlbnRpYWxzLiBXZSB0cmllZCB0byBleHBsYWluIHRvIGhpbSB0aGF0IHdlIHVuZGVyc3RhbmQsIGJ1dCB0aGF0IGEgbW92ZSBpc24gdmlhYmxlIGluIHNvIG1hbnkgd2F5cy4gSGUgd291bGRuIGhhdmUgYW55IG9mIGl0LiBUaGVuIG9uZSBkYXksIGp1c3QgYXMgc3VkZGVubHksIGhlIHN0YXJ0ZWQgdW5wYWNraW5nLiBIZSBoYWQgbW92ZWQsIGluIGhpcyBtaW5kLiBIZSB3b3VsZCBzaXQgb24gdGhlaXIgYmFsY29ueSBhbmQgbG9vayBvdXQgb3ZlciBvdXIgdGlueSBjaXR5L3Rvd24sIGJ1dCB3aGF0IGhlIHdhcyBsb29raW5nIGF0IHdhcyB0aGUgcml2ZXIgYW5kIHZpbGxhZ2Ugd2hlcmUgaGUgZ3JldyB1cC4KSW4gc3BvdHMgSSBmZWx0IEkgd2FzIGdpdmluZyB1cCBsZXNzIGdyb3VuZCBhbmQgSSBoYWQgaGltIG1pc3NpbmcuIEhlIGdvdCBiYWNrIG9uIGhpcyBncm9vdmUgdGhvdWdoIGFuZCBoZSBoYWQgYSBzdHJvbmcgYWR2YW50YWdlLi4gCk15IGZhdGhlciBoYXMgYWx3YXlzIGJlZW4gYSBjb25zZXJ2YXRpdmUgd2hvIGxlYW5zIGEgYml0IG1vcmUgbGliZXJ0YXJpYW4gYW5kIGlzIGV2ZW4gc2xpZ2h0bHkgc29jaWFsbHkgbGliZXJhbCwgeWV0IGhhcyBhbHdheXMgYmVlbiBhY3RpdmUgaW4gbG9jYWwgcG9saXRpY3MgaW5jbHVkaW5nIGJlaW5nIHRoZSBjb3VudHkgUmVwdWJsaWNhbiBQYXJ0eSBjaGFpcm1hbiBmb3IgYSB3aGlsZS4gSGUgd2FzIGEgZmlybSBiZWxpZXZlciBpbiB0aGUgd2hvbGUgImxlc3NlciB0aGFuIG9mIHR3byBldmlscyIgYW5kIHRoYXQgYSB2b3RlIHRvd2FyZHMgYSB0aGlyZCBwYXJ0eSBjYW5kaWRhdGUgaXMgYSB3YXN0ZWQgdm90ZSBldmVuIGlmIGhlIGxpa2VzIHRoZW0gYW5kIGFncmVlcyB3aXRoIHRoZW0gbW9yZSBhbmQgaGFzIGJlZW4gc29tZXRoaW5nIHdlIGNsYXNoIG9uIGEgbG90LiBMYXN0IHllYXIgaGUgYmVjYW1lIGEgcmVnaXN0ZXJlZCBpbmRlcGVuZGVudCBiZWNhdXNlICJ0aGlzIFJlcHVibGljYW4gUGFydHksIGlzIG5vdCB0aGUgcGFydHkgSSBzdXBwb3J0IG9yIHNpZ25lZCB1cCB0byBiZSBhIHBhcnQgb2YiIGhlJ3MgdmVyeSBtdWNoIGEgUmVhZ2FuIFJlcHVibGljYW4gKHdoaWNoIGlzIHN0aWxsIGEgY2FuIG9mIHdvcm1zKSBhbmQgSSB0cnVseSBoYXZlIG5ldmVyIHJlc3BlY3RlZCBteSBmYXRoZXIgbW9yZSBmb3IgdGFraW5nIGEgc3RhbmQgaW4gd2hhdCBsaXR0bGUgd2F5IGhlIGNhbiBiZWNhdXNlIG9mIGludGVncml0eS4gSSB3aXNoIHRoZSBwYXJ0eSBoYWQgYSBzcGluZS4gSXQncyBub3cgY2xlYXJseSBUcnVtcHMgcGFydHkuClNpdGVzIGxpa2UgRnVsbCBUaWx0IFBva2VyIHdlcmUgc3VwcG9zZWQgdG8gYmUgbWFraW5nIG1vbmV5IGJ5IGNoYXJnaW5nIG9ubGluZSB0b3VybmFtZW50IGZlZXMgYW5kIGNvbGxlY3RpbmcgYSBzbWFsbCBwZXJjZW50YWdlICggaW4gcG9rZXIgbGluZ28pIG9mIGVhY2ggcG90LiBCdXQgaXQgYXBwZWFycyBhcyBpZiB0aGUgb3duZXJzIHdlcmUgdGFraW5nIGhvbWUgZmFyIG1vcmUgdGhhbiB0aGUgY29tcGFueSByZWFsaXplZCBpbiBsZWdpdGltYXRlIHByb2ZpdHMuClJ1c3NpYSBkZXRhaW5zIG1vZGVsIGNsYWltaW5nIFRydW1wIHNlY3JldHMKVGhpcyB3YXMgc2VlbiBhcyBwZXJmZWN0bHkgZmluZSBhbmQgYWN0dWFsbHkgaXQgd2FzIGV4cGVjdGVkLiAKU28gdG8gcGxheSBnb29kIHBva2VyIHlvdSB0cnkgdG8gbWFrZSB5b3VyIG9wcG9uZW50IG1ha2UgbWlzdGFrZXMgd2hlbiBwb3NzaWJsZSBhbmQgY2F1c2UgdGhlIG1hdGggdG8gYmUgaW4geW91ciBmYXZvciBieSB0aGlua2luZyBvZiBvZGRzLgpOb3RleiBxdWUgamUgbmUgY29ubmFpcyBxdWUgbGVzIHVzYWdlcyBmcmFuYWlzLiBWb2lyICBjZSBzdWpldCBsYSBkZXJuaXJlIE1BSiBkZSAxMi8yMDE4LiBNZXJjaSAhTid1dGlsaXNleiBESEwgRVhQUkVTUyBxdSdlbiBjYXMgZCd1cmdlbmNlICgrIDEwIEUgKyBUVkEgIDIwJSAgbCdhcnJpdmUpLiAKRm9yIE1lZ2FuIEhhcnJvZCwgaXQgd2FzIGEgZml0dGluZywgYWxiZWl0IHVucmVjb2duaXNlZCwgc2VsZiByZWZsZWN0aW9uIG9mIGEgbGlmZSBwdW5jdHVhdGVkIGJ5IG1vbWVudHMgb2YgaW5jcmVkaWJsZSBqb3kgYW5kIGltbWVuc2Ugc2FkbmVzcy4gCkknbSB1cCB0byAxMDAgbWlsZXMgYSB3ZWVrICgzIGRheXMgcmlkaW5nLCAyIGRheXMgc3RyZW5ndGggdHJhaW5pbmcpIGFnYWluIHdpdGggYWJvdXQgM2sgNGsgZWxldmF0aW9uIGdhaW4uIFdhcm0gdXAgd2l0aCBlYXN5IHNwaW5uaW5nIG9uIGZsYXQgcm9hZHMgZm9yIDE1IG1pbnV0ZXMuIApIZSByZXBsaWVkLiAKRm9yIGEgMjAwNiBzdHVkeSwgcmVzZWFyY2hlcnMgYXNrZWQgYSBncm91cCBvZiBtZW4gd2hpY2ggcGhvdG8gdGhleSBwcmVmZXJyZWQ6IGEgcGljdHVyZSBvZiBhbiBhZHVsdCBvciBhIHBpY3R1cmUgb2YgYW4gaW5mYW50LiBUaGV5IHRoZW4gcGhvdG9ncmFwaGVkIHRoZSBtZW4ncyBmYWNlcyBhbmQgc2hvd2VkIHRoZW0gdG8gYSBncm91cCBvZiB3b21lbi4KSWYgaXQgY291bGRuIGJlIHNlcnZpY2VkIGhlcmUgaXQgd2FzIGEgIlNvcnJ5LCBidXQgeW91IG5lZWQgdG8gZmFjaWxpdGF0ZSBnZXR0aW5nIHRoZSBwaG9uZSBiYWNrIHRvIHRoZSBjb3VudHJ5IG9mIG9yaWdpbiB0byBoYXZlIGl0IHNlcnZpY2VkIi4gCkhlIHBlcnNpc3RlZCBhbmQgc29tZXRpbWVzIHdlIGZvdWdodC4gQnV0IHlvdSBrbm93IHdoYXQsIGhlIHdhcyBpbnN0cnVtZW50YWwgaW4gdGhlIGFkdWx0IEkgZ3JldyB0byBiZS4gClRoZSBwZW9wbGUgd2UgYWdhaW5zdCBoYXJkZW4gdGhlbXNlbHZlcyBpbiB0aGVpciBwb3NpdGlvbiBhbmQgaGF2ZSB0aGVpciBpZGVhcyB0aGF0IHRoZSBsZWZ0IGlzIG9ubHkgaW50ZXJlc3RlZCBpbiB0cml2aWFsIGlzc3VlcyBhbmQgaGF0aW5nIG9uIHRoZW0gcmVpbmZvcmNlZCwgd2hpY2ggbWFrZXMgaXQgaGFyZGVyIGZvciB1cyB3aGVuIHdlIHdhbnQgdG8gcHVzaCBmb3Igb3RoZXIsIG1vcmUgc2VyaW91cyBpc3N1ZXMuIApUaGUgYmVzdCB1c2Ugb2YgdHJhY2tpbmcgc29mdHdhcmUgbGlrZSBIb2xkZW0gTWFuYWdlciBpcyB0byBhbmFseXNlIHlvdXIgb3duIHN0YXRzLiBJZiB5b3VyIG5vdCBzYXZpbmcgaGFuZCBoaXN0b3JpZXMgdGhlbiBkbyBpdCBub3cuIApNaXNzIE5vc2UgbG92ZXMgdGhpcyBzaG93IHNvIG11Y2gsIGl0IGZpbGxzIGhlciB3aXRoIHByaWRlIHdoZW5ldmVyIHNoZSBkaXNjdXNzZXMgaXQuIApQZW9wbGUgaHVycmllZGx5IG1vdmUgb3V0IG9mIHRoZSB3YXkgYmVmb3JlIER3YXluZSBKb2huc29uIGJ1cnN0cyBpbnRvIHRoZSB0cmFpbi4gClRoZSBpZGVhIG9mIGNyaXRpY2l6aW5nIGhlciBpcyBmaW5lLCB0aGUgaWRlYSBvZiBwdXR0aW5nIGEgY29tcGFueSBvdXQgb2YgYnVzaW5lc3MgYmVjYXVzZSB0aGUgd2lmZSBvZiB0aGUgb3duZXIgc2hhcmVkIGhlciBkdW1iIHBvbGl0aWNhbCB2aWV3cyBpcyBqdXN0IGluY3JlZGlibHkgc3R1cGlkIHRvIG1lLiAKSSBpbmNsaW5lZCB0byBzYXkgbm8uIFRoZSBnZW5lcmFsIHN0eWxlIGFuZCBjYXRlZ29yaWVzIG9mIHF1ZXN0aW9ucyBhcmUgY2FwdHVyZWQgcHJldHR5IHdlbGwgYnkgYW55IHByZXAgYm9vayB5b3UgY2hvb3NlIHRvIHVzZSAoSSB1c2VkIFBSLCBidXQgTWFuaGF0dGFuIGlzIGdvb2QgdG9vKSwgc28geW91IHByb2JhYmx5IGRvbiBuZWVkIHRvIHVzZSBvbmUgb2YgeW91ciB0d28gZnJlZSBDQVRzIGZvciBkaWFnbm9zdGljcy4gSSB3b3VsZCBzYXkgc3R1ZHkgd2l0aCBNYW5oYXR0YW4sIGZpZ3VyZSBvdXQgd2Vha25lc3NlcyBhbmQgc2hvcmUgdGhlbSB1cCwgdGhlbiB0YWtlIG9uZSBvZiB0aGUgR01BQyBDQVRzIHdoZW4geW91IGJhc2ljYWxseSBmZWVsIGxpa2UgeW91IHJlYWR5IGZvciB0aGUgcmVhbCB0aGluZy4uIApIb3cgZGlkIHRoaXMgdG90YWwgd2FzdGUgb2YgbW9uZXkgc25lYWsgaW50byB0aGUgYmlsbCwgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IENvbmdyZXNzIGl0c2VsZiBoYXMgaW52ZXN0aWdhdGVkIHRoZSBBYnN0aW5lbmNlIE9ubHkgZWR1Y2F0aW9uIHByb2dyYW1zIGFuZCBmb3VuZCB0aGVtIGEgd2FzdGUgb2YgdGF4IHBheWVyIGRvbGxhcnM/IHllYXJzIGFnbywgdGhlIFdheG1hbiBSZXBvcnQgZm91bmQgdGhhdCB0aGVzZSBwcm9ncmFtcyBtaXNsZWFkIHRlZW5hZ2VycyAoZm9yIGluc3RhbmNlLCB0ZWVucyB3ZXJlIHRvbGQgdGhhdCBoYWxmIG9mIGFsbCBnYXkgbWFsZSB0ZWVucyBhcmUgSElWIHBvc2l0aXZlIGFuZCB0aGF0IHRvdWNoaW5nIHNvbWVvbmUgZWxzZSBnZW5pdGFsaWEgY2FuIGxlYWQgdG8gcHJlZ25hbmN5IGFuZCB0aGF0IGNvbmRvbXMgb2Z0ZW4gZmFpbCB0byBwcmV2ZW50IHRoZSBzcHJlYWQgb2YgSElWKS4gYW50aSBzZXgsIGFudGkgc2FuaXR5IEdPUCwgdGhhdCBob3cuCldpdGggdGhhdCBpbiBtaW5kLCBzaGUgZW5jb3VyYWdlZCBoZXIgZmVsbG93IGdyYWR1YXRlcyBub3Qgb25seSB0byBmb2xsb3cgdGhlaXIgaGVhcnRzLCBidXQgYWxzbyB0byBicmluZyBwb3NpdGl2ZSBjaGFuZ2UgdG8gcGxhY2VzIGFyb3VuZCB0aGUgd29ybGQgd2hlcmUgdGhlcmUgaXMgdmlvbGVuY2UgYW5kIGhhdHJlZC4gCkFoZXJuZSB3YXMgYXJyZXN0ZWQgYnkgV2VzdCBNaWRsYW5kcyBQb2xpY2UgaW4gdGhlIHN1bW1lciBhbmQgZmlyc3QgYXBwZWFyZWQgYXQgV2FybGV5IE1hZ2lzdHJhdGVzIENvdXJ0IGluIEp1bHkuCiJUaGUgY2xhaW1lZCBiZW5lZml0cyBvZiBnYW1ibGluZyByZXZlbnVlIG9uIHNwb3J0aW5nIGFjdGl2aXRpZXMgYW5kIHZvbHVudGVlcmluZyBkbyBub3QgYXBwZWFyIHN0cm9uZywiIHRoZSBjb21taXNzaW9uIHNhaWQgaW4gaXRzIGZpbmFsIHJlcG9ydC4KVGhleSBoYXZlIGJlZW4gaW4gdGhlIHRyZW5jaGVzIGZvciBtb3N0IHRoZWlyIGxpZmUgdHJ5aW5nIHRvIGNsaW1iIHRoZSBwb2xpdGljYWwgbGFkZGVyLiAKVGhlIHN0b3J5IGlzIGZhbnRhc3RpYywgYW5kIGZpbGxzIGluIGEgbG90IG9mIHRoZSBnYXBzIGJldHdlZW4gU1Q1IDYsIGJlZm9yZSB0aGUgS2hpdG9tZXIgYWNjb3Jkcy4gQW5kIHRoZSBzaGlwIGNvbWJhdCBpcyByZWFsbHkgd2VsbCBkb25lLCB3aXRoIGZ1bGx5IGRlc3RydWN0aWJsZSBzaGlwIG1vZGVscy4gSSBsb3ZlIHRvIHNlZSBhIHJlbWFzdGVyZWQgdmVyc2lvbiBvZiB0aGUgZ2FtZSBwb3AgdXAgb24gU3RlYW0gc29tZXRpbWUuLiAKQkRSaXAgW0guMjY0LzEwODBwXSA1MC40IEdCIEJydWNlIExlZSBUaGUgVWx0aW1hdGUgQ29sbGVjdGlvbiAxOTcxIDE5ODEgQmx1IHJheSAxMDgwcCB4MjY0IC4gCkkgd2FzIGFib3V0IDQyMCB3aGVuIEkgZmlyc3QgbWV0IHRoZSBzdXJnZW9uLCBoZSBvbmx5IHJlcXVpcmVkIG1lIHRvIGxvc2UgMTAgbW9yZSBsYnMgYnkgdGhlIGVuZCBvZiB0aGUgNiBtb250aCBwcm9ncmFtLiBJIHdhcyA0MTAgd2hlbiB0aGV5IHNjaGVkdWxlZCBteSBzdXJnZXJ5LCBidXQgdGhlbiBsb3N0IDMwIG1vcmUgZHVyaW5nIHRoZSBwcmUgb3AgZGlldC5JIGxvc3QgYW5vdGhlciAyMDBsYnMgYWZ0ZXIgc3VyZ2VyeSwgaW4gbGVzcyB0aGFuIGEgeWVhci4gCltXaGF0IHdlIHJlcXVpcmUgaXNdIGEgbWlsaXRhcnkgdGhhdCBpcyBzdHJvbmcgYW5kIHJlYWR5IHRvIG1lZXQgYm90aCBwcmVzZW50IGFuZCBmdXR1cmUgY2hhbGxlbmdlczsgYSBmb3JlaWduIHBvbGljeSB0aGF0IGJvbGRseSBhbmQgcHVycG9zZWZ1bGx5IHByb21vdGVzIEFtZXJpY2FuIHByaW5jaXBsZXMgYWJyb2FkOyBhbmQgbmF0aW9uYWwgbGVhZGVyc2hpcCB0aGF0IGFjY2VwdHMgdGhlIFVuaXRlZCBTdGF0ZXMnIGdsb2JhbCByZXNwb25zaWJpbGl0aWVzLiwsIEFtZXJpY2EgaGFzIGEgdml0YWwgcm9sZSBpbiBtYWludGFpbmluZyBwZWFjZSBhbmQgc2VjdXJpdHkgaW4gRXVyb3BlLCBBc2lhLCBhbmQgdGhlIE1pZGRsZSBFYXN0LiBJZiB3ZSBzaGlyayBvdXIgcmVzcG9uc2liaWxpdGllcywgd2UgaW52aXRlIGNoYWxsZW5nZXMgdG8gb3VyIGZ1bmRhbWVudGFsIGludGVyZXN0cy4gVGhlIGhpc3Rvcnkgb2YgdGhlIDIwdGggY2VudHVyeSBzaG91bGQgaGF2ZSB0YXVnaHQgdXMgdGhhdCBpdCBpcyBpbXBvcnRhbnQgdG8gc2hhcGUgY2lyY3Vtc3RhbmNlcyBiZWZvcmUgY3Jpc2VzIGVtZXJnZSwgYW5kIHRvIG1lZXQgdGhyZWF0cyBiZWZvcmUgdGhleSBiZWNvbWUgZGlyZS4gCllvdSBoYXZlIFFkLCBLZCBhbmQgYXJlIHRoZSBkZWFsZXIuIApUaGlzIGlzIHdoeSBhIHdvayBpcyBrZXkgZm9yIHRoaXMgcmVjaXBlLiAKQW5kIHRoaXMgd2VlaywgcHJvdmluY2lhbCBwb2xpY2UgY2hpZWYgTWFydGluIFBydWQgd2FzIHN1c3BlbmRlZCBwZW5kaW5nIHRoZSByZXN1bHRzIG9mIGFuIGludmVzdGlnYXRpb24gaW50byBhbiBhbGxlZ2F0aW9uIGhlIGNvbW1pdHRlZCBjcmltaW5hbCBvZmZlbmNlcy4KTm8gbm90IGF0IGFsbC4gVGhvc2Ugb2RkcyBsZWF2ZSByb29tIGZvciByZWFzb25hYmxlIGRvdWJ0LiAKSWYgbm90IHlvdSBzaG91bGQgdHJ5IHRvIGNhbGwgaW4gYmVmb3JlIDcgcG0sIEkgd2FpdGVkIGFyb3VuZCBmb3IgMiBob3VycyBvbiBhIHRodXJzZGF5KGNvdWxkIGhhdmUgZGlyZWN0bHkgc2l0IGluIGZvciA1MC8xMDAhISkuIApIZXJlLCB0aGUgMTAxc3QsIDEwM3JkIDEwNHRoc29uZ3MgY2FuIGJlIGZvdW5kIG9uIGlUdW5lcywgd2hpbGUgdGhlIDEwMm5kIGNhbiBiZSBmb3VuZCBvbnlvdXR1YmUuIApXaGF0IG1pZ2h0IGhlbHAgaXMgYW4gZXhhbXBsZS4gWW91IHJhaXNlIDZoN2gsIGdldCBjYWxsZWQgaW4gcG9zaXRpb24sIGFuZCBmbG9wIEtzN2Q2cy4gWW91IGNiZXQsIGFuZCBnZXQgcmFpc2VkLiBZb3UgcHV0IGhpcyB2YWx1ZSByYW5nZSBvbiB0d28gcGFpciBvciBzZXRzLiBZb3UgZG9udCBleHBlY3QgaGltIHRvIGNhbGwgcHJlIHdpdGggSzcgb3IgSzYsIGFuZCB5b3UgZXhwZWN0IGhpbSB0byByZXJhaXNlIEtLIHByZWZsb3AuIFlvdSBleHBlY3QgaGltIHRvIGhhdmUgb25lIGNvbWJvIG9mIDY2IGFuZCBvbmUgY29tYm8gb2YgNzcgdGhhdCBiZWF0cyB5b3UuIE5vdyBzYXkgeW91IGhhZCBBQSBpbiB0aGlzIHNwb3QuIEhlIG5vdyBoYXMgdGhyZWUgY29tYm9zIG9mIDY2IGFuZCB0aHJlZSBjb21ib3Mgb2YgNzcsIGFzIHdlbGwgYXMgdHdvIGNvbWJvcyBvZiA2N3MgdGhhdCBiZWF0IHlvdS4gSGUgcmFpc2luZyB0aGUgZXhhY3Qgc2FtZSB2YWx1ZSBoYW5kcywgYnV0IGhlIGhhcyB0aGVtIGEgbG90IG1vcmUgb2Z0ZW4gYmVjYXVzZSB5b3UgZG9uIGJsb2NrIHRoZW0uCkdyZWVjZSBUYWtpbmcgQnVyZGVuIE9mZiBXb3JraW5nIERvbmtleXNBIGJ1cmRlbiBoYXMgYmVlbiBsaWZ0ZWQgZnJvbSB0aGUgc2hvdWxkZXJzIG9mIEdyZWVjZSB3b3JraW5nIGRvbmtleSBwb3B1bGF0aW9uLgpUaGVpciB0d28gbGVhZGluZyBzY29yZXJzIGFtb25nIGRlZmVuY2VtZW4gYXJlIEdpb3JkYW5vLCB3aG8gb3ZlciBhIHBvaW50IGEgZ2FtZSBhbmQgc2hvdWxkIGJlIGdldHRpbmcgc29tZSBOb3JyaXMgVHJvcGh5IHZvdGVzLCBhbmQgQnJvZGllLi4gClRvcnkgc2FpZCB0aGUgZ3ltJ3Mgc3Vydml2YWwgaXMgdml0YWwgZm9yIHRoZSBjaXR5LgpIZS9zaGUgd2lsbCBhbHNvIHdyaXRlIG91dCBoaXMvaGVyIG5hbWUsIGFkZHJlc3MsIHBob25lIG51bWJlciwgZW1haWwgYWRkcmVzcy4gVGhlbiB0aGUgZm9ybSBtdXN0IGJlIHBsYWNlZCBpbiBhbiBlbnZlbG9wZSBhbmQgaGUvc2hlIG11c3Qgc2lnbiB0aGUgYmFjayBvZiB0aGUgZW52ZWxvcGUgb3ZlciB0aGUgc2VhbC4uIApEdWdhbiBub3RlZCB0aGF0IHRoZSBhZ2VuY3kgZG9lc24gYW55IGxldmVsIG9mIG92ZXJ2YWx1YXRpb24gaW4gaXRzIHJlcG9ydC4KVWdseSBpbm5hcmRzIG1ha2UgdWdseSBwZW9wbGUsIGFuZCB0aGUgcmV2ZXJzZSBpcyBhbHNvIHRydWUuIApZb3UncmUgYWJsZSB0byBlbmdpbmVlciBzcGVjaWZpYywgcHJlZGljdGFibGUgZ3Jvd3RoLCB5ZWFyIGFmdGVyIHllYXIsIGJlY2F1c2UgeW91J3JlIHppZ2dpbmcgd2hpbGUgeW91ciBjb21wZXRpdG9yIHphZ3MuIEhlJ3Mgc3RpbGwgdXNpbmcgZGlyZWN0IG1haWwsIHdoaWxlIHlvdSBhcmUgY29uZHVjdGluZyBXZWJpbmFycy4gSGUncyBydW5uaW5nIGFkcyB0aGF0IGRvbid0IHB1bGwsIHdoaWxlIHlvdSdyZSB0eWluZyBpbiB3aXRoIGFmZmluaXR5IGdyb3Vwcy4uIApIZSBmaWdodHMgcmVhbGx5IHdlbGwgYW5kIGhpcyBndWFyZCBpcyBmYW50YXN0aWMsIGJ1dCB0YWtpbmcgaXQgb24gdGhlIGd1YXJkIGRvZXNuIGNoYW5nZSB0aGUgZmFjdCB0aGF0IGhlIHN0aWxsIGJlaW5nIGhpdC4gSGUgZ290IGEgZmV3IGphYnMgdGhhdCBhcmUgcHJlZGljdGFibGUgY2F1c2UgaGUgYWx3YXlzIHNsaXBzIHRvIHRoZSBsZWZ0IHdoZW4gaGUgdGhyb3dzIHRoZW0sIGFuZCBmcm9tIGV4cGVyaWVuY2UgaXQgYSByZWFsbHkgZ29vZCB3YXkgdG8gZ2V0IHlvdXIgZmFjZSBzbWFzaGVkIGluIGJ5IGEgbG93IHVwcGVyY3V0Li4gClR3byBvZiB0aGVtLCB0aG91Z2gsIGRpZCBjaGFuZ2UgbXkgbGlmZS4gCkxlIHByb2JsbWUgZXN0IHF1ZSBsYSBsYWNpdCBtb2Rlcm5lIG4nYSBwbHVzIGF1Y3VuZSBjb25zY2llbmNlIGR1IHZyaXRhYmxlIGNhcmFjdHJlIGRlIGNldHRlIGRtZXN1cmUuIExlIGZvbGRpbmd1ZSBkYW5nZXJldXNlIHMndGFpdCBkaiBzaWduYWxlIHBhciB1biBhbnRjZGVudCBkZSBweXJvbWFuaWUsIHNvaXQgdW4gaW5jZW5kaWUgZGUgdnRlbWVudHMgZGFucyB1biBtYWdhc2luLiBMYSBweXJvbWFuaWUgbG9yc3F1J2VsbGUgZXN0IGxpZSAgZGVzIGZhaXRzIGRlIHZpb2xlbmNlIG0naW5zcGlyZSB0b3Vqb3VycyBwbHVzIG91IG1vaW5zIGRlIHN1c3BpY2lvbiBkJ2luZmVzdGF0aW9uIGRtb25pYXF1ZS4gCkZpcnN0IHRpbWUgdGhhdCB3YXMgbWVudGlvbmVkIChub3Qgb2ZmZXJlZCkgdG8gbWUgYXMgc29tZXRoaW5nIEkgd291bGQgZW5qb3kgYnkgYW4gU08gSSB3YXMgcHJldHR5IGluc3VsdGVkIGhvbmVzdGx5LiBPbmx5IGJlY2F1c2UgaXQgd2FzIGNvbXBsZXRlbHkgYXNzdW1lZCB0aGF0IGl0IHdhcyBzb21ldGhpbmcgSSB3b3VsZCBlbmpveSBhbmQgdGhlbiBkaXNtaXNzZWQgd2hlbiBJIHNhaWQgSSB3b3VsZG4gdGhvdWdoLiBJIHNlZSBub3RoaW5nIHdyb25nIHdpdGggZ2l2aW5nIGl0IGEgc2hvdCBsaWtlIHlvdSBkaWQgaWYgdGhhdCBzb21ldGhpbmcgdGhhdCB5b3UgaW50ZXJlc3RlZCBpbiwgYnV0IGl0IHJlYWxseSBhbm5veWluZyB3aGVuIHlvdSB0cmVhdGVkIGxpa2UgeW91IGFic29sdXRlbHkgTVVTVCBsaWtlIHRoZSBzb3VuZCBvZiBpdCwgZXZlbiB3aGVuIHlvdSBnaXZlIGFuIGhvbmVzdCBhbnN3ZXIgdGhhdCB5b3Ugd291bGQgbmV2ZXIgYmUgaW50ZXJlc3RlZCBpbiBzb21ldGhpbmcgbGlrZSB0aGF0Li4gCkRyZWFtbWZveHggIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpUaGV5IHNheSB3ZSBuZWVkIHRvIGJhbiB0aGUgc3Vid2F5IGV4dGVuc2lvbiBiZWNhdXNlIGhvdXNpbmcgcHJpY2VzIHdpbGwgZ28gdXAsIHdlIG5lZWQgdG8gc3RvcCBhbGwgYW1lbml0aWVzLCBpbXByb3ZlbWVudHMsIG5ldyBjb25zdHJ1Y3Rpb24gZXRjLiAKVGhlIElGQyBoYXMgbG9uZyBjbGFpbWVkIGFic29sdXRlIGltbXVuaXR5IGFzIGFuIGludGVybmF0aW9uYWwgb3JnYW5pemF0aW9uLCBhbmQgbG93ZXIgY291cnRzIGhhdmUgdXBoZWxkIHRoZSBpbnRlcnByZXRhdGlvbiB0aGF0IHRoZSBzdGF0dXRlcyBncmFudCB0aGUgSUZDIGdyZWF0ZXIgaW1tdW5pdHkgdGhhbiBmb3JlaWduIGdvdmVybm1lbnRzLiAKTGF0ZWx5IEkgYmVlbiB0cnlpbmcgdG8gY2hhbm5lbCBteSBsb3ZlIGZvciBiYWtpbmcgaW50byBoZWFsdGhpZXIgb3B0aW9ucywgSSBiZWVuIGV4cGVyaW1lbnRpbmcgd2l0aCBhIGhlYWx0aHkgbXVmZmluIHJlY2lwZS4gClRoZSB0ZW4gZXNzZW50aWFscyB3ZXJlIGZvcm11bGF0ZWQgdG8gbWFrZSBzdXJlIGJlZ2lubmVycyBhbmQgcGVvcGxlIHdobyBkaWRuIGtub3cgd2hhdCB0aGV5IHdlcmUgZG9pbmcgd291bGRuIG1lc3MgdXAgdG9vIGJhZGx5LkkgaW4gY29udHJhc3QgYmVsaWV2ZSB0aGF0LCBpZiB5b3Uga25vdyB3aGF0IHBvc3NpYmxlIGNvbmRpdGlvbnMgeW91IHdpbGwgYmUgZmFjaW5nLCBldmVyeXRoaW5nIG9uIHRoYXQgbGlzdCBleGVjcHQgcGVyaGFwcyBmb3IgbmF2aWdhdGlvbiwgbGlnaHQsIGV4dHJhIHdhdGVyLCBzb21lIGJhc2ljIGZpcnN0IGFpZCBhbmQgcGVyaGFwcyBzaGVsdGVyIGlzIG9wdGlvbmFsLkZvciBpbnN0YW5jZXdoeSB0YWtlIHN1biBwcm90ZWN0aW9uIGlmIHlvdSBrbm93IHRoYXQgc3VuIGV4cG9zdXJlIHdvbiBiZSBhbiBvcHRpb24gKHdvb2RlZCB0cmFpbCBpbiBjbG91ZGVkIGNvbmRpdGlvbnMgd2l0aCBsb3cgc3VuIGludGVzaXR5KVdoeSB0YWtlIG1vcmUgZm9vZCB0aGF0IHlvdSB0aGluayB5b3UgbmVlZCBpZiB5b3UgY2FuIHJlbGlhYmx5IGp1ZGdlIHlvdXIgc3BlZWQgZXRjLiAKU2hvdGFnb25pc3QgIDEwMSBwb2ludHMgIHN1Ym1pdHRlZCAxMSBob3VycyBhZ28KU2hvdWxkIGRvY3RvcnMgb2JleQpKIEluc3VyIE1lZC4gClRoZSBwcml2YXRlIHByaXNvbiBwb3B1bGF0aW9uIHJlYWNoZWQgaXRzIHBlYWsgaW4gMjAxMiB3aXRoIDEzNywyMjAgcGVvcGxlLiBUaGUgcG9wdWxhdGlvbiB0aGVuIGRlY2xpbmVkIGZvciB0aHJlZSB5ZWFycyBiZWZvcmUgaW5jcmVhc2luZyBhZ2FpbiBpbiAyMDE2LgpCb2IgZ3JldyB1cCBpbiBMb25kb24sIE9udGFyaW8gYW5kIHdhcyBhIHByb3VkIGJ1c2luZXNzIGdyYWR1YXRlIGZyb20gV2VzdGVybiBVbml2ZXJzaXR5LiAoQ2xhc3Mgb2YgMTk0NikuIApUaGUgb2RkcyBvZiBiZWluZyBkZWFsdCBzdWl0ZWQgY29ubmVjdG9ycyBpbiBwb2tlciBpcyAyIGluIDUxLiBIZXJlJ3Mgd2h5OiBObyBtYXR0ZXIgd2hhdCBjYXJkIGlzIGRlYWx0IGZpcnN0LCB0aGVyZSBhcmUgdHdvIGNhcmRzIHRoYXQgd2lsbCBtYWtlIHN1aXRlZCBjb25uZWN0b3JzIHdpdGggaXQuIEZvciBleGFtcGxlLCBpZiB0aGUgZmlyc3QgY2FyZCBpcyA1ZCwgdGhlbiB0aGUgc2Vjb25kIGNhcmQgbXVzdCBiZSA0ZCBvciA2ZC4gClBvcnRhZ2UgZG9lc24gb2ZmZXIgYW55IGRheSB0byBkYXkgYmVuZWZpdHMsIGJ1dCB0aGUgZGF5IHRvIGRheSBpcyBnb2luZyB0byBiZSBtb3N0bHkgc3RhYmxlIGZvciBhbnkgc2V0IG9mIHdvcmtmbG93cyB0aGF0IHlvdSBoYXZlIG9uIGFueSBzeXN0ZW0uIFRoZSBxdWVzdGlvbiBpcyBtb3JlIHdoZXRoZXIgdGhlcmUgYXJlIHRvIGRheXMgdGhhdCB5b3UgY2FuIG5ldmVyIGhhdmUgYmVjYXVzZSB5b3UgYXJlIG9uIGNlcnRhaW4gc3lzdGVtcywgb3IgdGhhdCB5b3UgYXZvaWQgYmVjYXVzZSBpdCBpcyB0b28gbXVjaCBvZiBhIHBhaW4gdG8gZ2V0IHRoZW0gd29ya2luZyBvbiBhIGdpdmVuIGRpc3Ryby4gUG9ydGFnZSBnaXZlcyB5b3Ugc2lnbmlmaWNhbnRseSBtb3JlIHBvd2VyIGluIGNvbnRyb2xsaW5nIGV4YWN0bHkgd2hhdCBzb2Z0d2FyZSBpcyBhbmQgY2FuIGJlIGluc3RhbGxlZCBvbiB5b3VyIHN5c3RlbS4gCldoYXQgYWJvdXQgaW50cm92ZXJ0cyBvciBvdGhlciBsZXNzIHNvY2lhbGx5IGFkZXB0IHBlb3BsZSB0aGF0IGp1c3QgZG9uJ3QgdW5kZXJzdGFuZCBpdD8gT3IgY2FuJ3QgY29tbXVuaWNhdGUgZWZmZWN0aXZlbHkgd2l0aCBpdD8gSSBzdXJlIGFzIGhlbGwgZG9uJ3QgdW5kZXJzdGFuZCBhbnl0aGluZyBiZXlvbmQgdGhlIG1vc3Qgb2J2aW91cyBib2R5IGxhbmd1YWdlIGFuZCBJIHRlbmQgbm90IHRvIHVzZSBpdCwgc29tZXRpbWVzIGNvbW11bmljYXRpbmcgdGhlIG9wcG9zaXRlIG9mIHdoYXQgSSBtZWFuIHdpdGggbXkgYm9keSBsYW5ndWFnZSBhY2NpZGVudGFsbHkuIApGdWxsIGRpc2Nsb3N1cmUsIEkgYSBzaW5nbGUgZ3V5IHdob3NlIG5ldmVyIGV2ZW4gZ290dGVuIGNsb3NlIHRvIG1hcnJ5aW5nIHNvbWVvbmUsIGJ1dCBJIGRvIG5vdCB1bmRlcnN0YW5kIHRoZSBpZGVhIG9mIHRoZSBzdGF0ZW1lbnQgInRoYXQgbm90IGEgcmluZyB5b3UgYXNrIHNvbWVvbmUgdG8gbWFycnkgeW91IHdpdGguIiBJIGhvbmVzdGx5IHRoaW5rIGl0IHByZXR0eSBncm9zcyB0byBzcGVuZCB0aG91c2FuZHMgb2YgZG9sbGFycyBKVVNUIGJlY2F1c2UgdGhhdCB3aGF0IHBlb3BsZSBleHBlY3QgeW91IHRvIGRvLiBJZiB5b3Ugc3VwcG9zZWQgdG8gaGF2ZSB5b3VyIGxvdmUgcmVwcmVzZW50ZWQgaW4gYSBwaHlzaWNhbCBvYmplY3QgKHdoaWNoIGlzIGEgYmFkIGlkZWEgYW55d2F5KSB0aGUgc2VudGltZW50YWwgdmFsdWUgc2hvdWxkIGJlIGluZmluaXRlbHkgbW9yZSBpbXBvcnRhbnQgdGhhbiB0aGUgc3RpY2tlciBwcmljZS4gSSBkb24gdGhpbmsgaXQgbG9va3MgbmVhcmx5IGFzIGJhZCBhcyBvdGhlcnMgaGVyZSBhcmUgc2F5aW5nLCBhbmQgb2J2aW91c2x5IGl0IGltcG9ydGFudCB0byB0aGUgZ3V5IHdobyBwcm9wb3NlZC4gCldhcyBnaWJ0IGVzIGFuIGthbHRlbiwgdmVycmVnbmV0ZW4gU29ubnRhZ2VuIHdpZSBkaWVzZW4sIHNjaG5lcmVzIGFscyBlaW4gYmlzc2NoZW4gV2VsbG5lc3MgZnIgS3JwZXIsIEdlaXN0IHVuZCBTZWVsZSBpbiBkZW4gZWlnZW5lbiB2aWVyIFduZGVuPyBWaWVsbGVpY2h0IGhhYnQgaWhyIGphIHNjaG9uIG1hbCBtZWluQm9keSBQZWVsaW5nIGF1c3Byb2JpZXJ0LCBkYXMgaWNoIGV1Y2ggdm9yIGVpbmlnZW4gV29jaGVuIGdlemVpZ3QgaGFiZSBvZGVyIGVpbiBhbmRlcmVzIHRvbGxlcyBSZXplcHQ/IE5hY2ggc28gZWluZW0gUGVlbGluZyBzb2xsdGUgZGllIEhhdXQgYWxsZXJkaW5ncyBtaXQgbGVuIHZlcnNvcmd0IHdlcmRlbiB1bmQgZGF6dSBlaWduZW4gc2ljaCBiZXNvbmRlcnMgZ3V0IHNvZ2VuYW5udGUgTWVsdHMgRWluIEJvZHkgTWVsdCBpc3QgcXVhc2kgS3JwZXJidXR0ZXIgYW0gU3Rjay4gCklsIHBldXQgdG9tYmVyIGJlYXVjb3VwIHBsdXMgZGUgbmVpZ2Ugc3VyIGxhIHZpbGxlLCBtYWlzIGNlbGxlIGNpIHNlIGNvbXBhY3RlIHVuZSBmb2lzIGF1IHNvbCBhdSBmaWwgZHUgdGVtcHMuLiAKQW5kIGhpcyBmYW1pbHkuLiAKNSBEUFMgaXMgbW9yZSBmdW4gdGhhbiA0IERQUyBiZWNhdXNlIHdpdGggNCBJIGp1c3QgZmVlbCBsaWtlICJ1Z2ggaWYgMSBvdGhlciBwZXJzb24gc3dpdGNoZWQgd2UgYmUgZmluZSIgYnV0IHdpdGggNSBpdCBqdXN0ICJ3ZWxsIHlvbG8gSSBndWVzcyIKVGhlcmUgYXJlIGEgYnVuY2ggb2YgcGVvcGxlIG9uIHRoaXMgcG9zdCBsaXRlcmFsbHkgc2F5aW5nIGhlIHNob3VsZG4gZ28gdG8gcHJpc29uIG9yIGFjdHVhbGx5IGdldCBhbnkgcHVuaXNobWVudCBiZWNhdXNlICJpdCBqdXN0IG1ha2UgaGltIHdvcnNlIiBvciAiaXQgYmUgdG9vIGhhcmQgb24gaGltIDooIiB3aGljaCBpcyB3aGF0IEkgdXBzZXQgYWJvdXQsIGJlY2F1c2UgSSByZWFsbHkgY2FuIGxpa2UuIG9iamVjdCBlbm91Z2ggdG8gdGhlIGlkZWEgdGhhdCBzZXh1YWwgcHJlZGF0b3JzIHNob3VsZCBiZSAic3BhcmVkIiBwdW5pc2htZW50IGFuZCBwcmlzb24gYmVjYXVzZSBpdCBiZSAiaGFyZCIgZm9yIHRoZW0uIFRoZXkgZGVzZXJ2ZSB0byBiZSBwdW5pc2hlZCBhbmQgdGhlaXIgdmljdGltcyBkZXNlcnZlIGp1c3RpY2UuClRoZSBCbGluZHMgT25jZSB5b3UgcG9zdCB5b3VyIGJsaW5kIHRoZSBtb25leSBubyBsb25nZXIgYmVsb25ncyB0byB5b3UuIE1hbnkgcGxheWVycyBmZWVsIHRoZXkgbXVzdCBkZWZlbmQgdGhlaXIgYmxpbmRzIGJ5IGNhbGxpbmcgYWxsIHJhaXNlcyBldmVuIHdpdGggbWFyZ2luYWwgaGFuZHMuIERvbid0IHdhc3RlIGFkZGl0aW9uYWwgbW9uZXkgb24gbWFyZ2luYWwgaGFuZHMuIEFsc28sIGRvbid0IGF1dG9tYXRpY2FsbHkgY2FsbCB3aXRoIHRoZSBzbWFsbCBibGluZCBpZiB5b3UgaGF2ZSBub3RoaW5nLiBTYXZpbmcgYSBoYWxmIGJldCB3aWxsIHBheSBmb3IgeW91ciBuZXh0IHNtYWxsIGJsaW5kLiAuCkZpZWxkcyBhbmQgRmFtb3VzIEFtb3MuIApBcyBzb21lb25lIHdobyBhbHNvIHdldCB0aGVtc2VsdmVzIGJlY2F1c2UgYSB0ZWFjaGVyIGRlbmllZCB0aGVtIHRoZSBiYXRocm9vbSAoYW5kIEkgd2FzIHRoZSBtb3N0IG1lZWssIHRpbWlkLCBzaHkga2lkIGV2ZXIgc28gSSB3YXNuJ3QgYSBwcm9ibGVtIGtpZCksIEkgZmVlbCB0ZXJyaWJsZSBmb3IgdGhhdCBnaXJsLiBXaHkgbm90IGp1c3QgcHVuaXNoIHRoZSBnaXJsIHdobyB3YXMgZGlja2luZyBhcm91bmQ/IEdyb3VwIHB1bmlzaG1lbnRzIGhhdmUgYmVlbiBwcm92ZW4gdG8gYmUgY291bnRlcnByb2R1Y3RpdmUuIApUaGV5IGRpZG4ndCBoYXZlIGFjY2VzcyB0byB0aGUgc2FtZSBiYW5raW5nIGNyZWRpdCBzeXN0ZW1zIHRvIGdldCBidXNpbmVzcyBsb2FucywgdGhleSBkaWRuJ3QgaGF2ZSBhY2Nlc3MgdG8gd29yayB0aGUgc2FtZSBqb2JzIGFzIHdoaXRlIHBlb3BsZS4gClNvbWV0aW1lcyBpIHdpc2ggdGhlcmUgd291bGQgYmUgbm8gb3RoZXIgcGVvcGxlIG9uIHRoaXMgZWFydGgsIHRoYW4ganVzdCBtZSwgYmVjYXVzZSBpIGZlZWwgbGlrZSB0aGlzIHdvdWxkIG1ha2UgbWUgdmVyeSBoYXBweSwgYmVjYXVzZSBpIHdvdWxkbnQgaGF2ZSB0byBkZWFsIHdpdGggYW55Ym9keXMgYnMgYW55bW9yZSBhbmQgdGhlbiBpIGNvdWxkIGZpbmFsbHkgZG8gd2hhdGV2ZXIgaSB3YW50LiAKRmVhci4gCkkgYnJvdWdodCB1cCB0byBteSBib3NzIHRoYXQgdGhpcyB3b3VsZCBiZSBhYm91dCBhICQxMDBrIHBheW91dCBmb3IgdGhhdCBwcm9ncmFtIGFuZCBhYm91dCAzIHdlZWtzIGxhdGVyIHRoZSBjb21wYW55IGFkanVzdGVkIG15IHRhcmdldHMgZm9yIHRoZSB5ZWFyLnJlZGRpdG9yZm9yMTF5ZWFycyAgMSBwb2ludCAgc3VibWl0dGVkIDE3IGRheXMgYWdvRGVwZW5kcyBvbiB0aGUgcHJvZHVjdC92ZXJ0aWNhbC4gRm9yIEMgTGV2ZWwgZ2F0ZWtlZXBlcnMgKEVBcyksIGFmdGVyIGFib3V0IDQgNSBjYWxscyB0aGV5IHN0YXJ0IHRvIHJlbWVtYmVyIG1lLlRoZXkgdW5oYXBweSwgSSB1bmhhcHB5LiAKVGhleSBkZWNsYXJlIHRoYXQgdGhlIGJsYWNrb3V0IGlzIHRoZSBwcm9kdWN0IG9mIHNhYm90YWdlLiBTYWJvdGFnZSBpcyBjb3JydXB0aW9uLCBzYWJvdGFnZSBpcyB0aGF0IHRoZXkgZGlkIG5vdCBhbGxvdyBlbGVjdGlvbnMsIHNhYm90YWdlIGlzIHRoYXQgdGhleSBibG9ja2VkIHRoZSBlbnRyeSBvZiBmb29kIGFuZCBtZWRpY2luZXMuIFRoZSBvbmx5IHNhYm90YWdlIGlzIHRoYXQgb2YgdGhlIHVzdXJwZXIgdG8gYWxsIHRoZSBwZW9wbGUgb2YgVmVuZXp1ZWxhLiBvbiBWVFYsIEVsZWN0cmljaXR5IE1pbmlzdGVyIEx1aXMgTW90dGEgRG9taW5ndWV6IGNhbGxlZCB0aGUgYmxhY2tvdXQgYW4gd2FyIGFuZCBhY3Qgb2Ygc2Fib3RhZ2UuCkJhZGRhem9uZXIgIDIwMiBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvClZhbiBOYW1lICgyMDA4KTsgVW5kZXIgYSBHcmF2ZXlhcmQgU2t5IGJ5IEpvaG4gUmluZ28gKDIwMTMpLiBFZGl0b3JpYWwgUmV2aWV3cy4gV2l0aCBvdmVyIGVpZ2h0IG1pbGxpb24gY29waWVzIG9mIGhpcyBib29rcyBpbiBwcmludCBhbmQgLiBBIENhbGwgdG8gVmVuZ2VhbmNlIChNYW50aWNvcmUgQXNjZW5kYW50IEJvb2sgMykgICBLaW5kbGUgZWRpdGlvbiBieSBEYXZpZCBXZWJlciwgVGltb3RoeSBaYWhuLCBUaG9tYXMgUG9wZS4gRG93bmxvYWQgaXQgb25jZSBhbmQgcmVhZCBpdCBvbi4gCkxFIEJMT0cgQSAxMCBBTlMgZXQKTGV0IHRoZSBraWQgc3RhcnQhLiAKSSBsb3ZlIGJlaW5nIGJhY2sgZnVsbCB0aW1lIG9uIHRoZSB0b29scywga25lZSBkZWVwIGluIHRoZSBwdWRkbGVzIG9mIGVtb3Rpb24gZG90dGVkIGFjcm9zcyBNZWxib3VybmUgb24gYSBTYXR1cmRheSAgIHRoZSBzbWVsbCBvZiBmZWFyLCB0aGUgbG9va3Mgb2YgYW50aWNpcGF0aW9uLCB0aGUgY3JpbmdlcyBvZiBleGNpdGVtZW50IGFuZCB0aGUgaHVzaCBvZiB1bmNlcnRhaW50eSBhbGwgcm9sbGVkIGludG8gYW4gaW5jcmVkaWJsZSAxNSBtaW51dGUgc2Vuc29yeSBvdmVybG9hZC4uIApDaGVhcCB3aGl0ZXMgKGFsc28ga25vd24gYXMgaWxsaWNpdCB3aGl0ZXMpTm9uIHRyYW5zbmF0aW9uYWwgdG9iYWNjbyBjb21wYW55IChUVEMpIGJyYW5kZWQgY2lnYXJldHRlcyB0aGF0IGFyZSBsZWdhbGx5IHByb2R1Y2VkIGJ1dCBoYXZlIG5vIGxlZ2l0aW1hdGUgbWFya2V0LiBUaGlzIGNvbmZ1c2luZyB0ZXJtIGluaXRpYWxseSB1c2VkIGJ5IFRUQ3MgaXMgZGVmaW5lZCBieSB0aGUgRXVyb3BlYW4gQ29tbWlzc2lvbiBhczogJ2JyYW5kcyBtYW51ZmFjdHVyZWQgbGVnaXRpbWF0ZWx5IGluIG9uZSBtYXJrZXQsIGVpdGhlciB0YXhlZCBmb3IgbG9jYWwgY29uc3VtcHRpb24gb3IgdW50YXhlZCBmb3IgZXhwb3J0LCBhbmQgc29sZCBrbm93aW5nbHkgdG8gdHJhZGVycyB3aG8gdHJhbnNwb3J0IHRoZW0gdG8gYW5vdGhlciBjb3VudHJ5IHdoZXJlIHRoZSBwcm9kdWN0cyBhcmUgc29sZCBpbGxlZ2FsbHkgd2l0aG91dCBkb21lc3RpYyBkdXR5IHBhaWQuJzIxMApDbGtvdSAgMSBwb2ludCAgc3VibWl0dGVkIDEgeWVhciBhZ28KQW5kIHRoZSBtb3JlIHVuZXhwZWN0ZWQgdGhlIHJlc3VsdCwgdGhlIG1vcmUgc2tlcHRpY2FsIHJlcGxpY2F0aW9uIHRvIGRpc3Byb3ZlIGl0IChhbmQgZXZlbiBjYWxscyBvZiAiQnVsbHNoaXQhIikgaXQgZ2FybmVycy4gSnVzdCBsb29rIGF0IHdoZW4gRmxlaXNjaG1hbiBhbmQgUG9ucyBwdWJsaXNoZWQgb24gImNvbGQgZnVzaW9uIi4gVGhlIHJhY2UgdG8gcmVwbGljYXRlIGFuZCBpbnZhbGlkYXRlIHRoZWlyIGV4cGVyaW1lbnRhbCByZXN1bHRzIHdhcyBzd2lmdCBhbmQgcmVsZW50bGVzcy4gVGhlIHNhbWUgaXMgdHJ1ZSBmb3IgdGhlIHRlYW0gaW4gSXRhbHkgYSBmZXcgeWVhcnMgYmFjayB0aGF0IHNrZXB0aWNhbGx5IHB1Ymxpc2hlZCBhbmQgcXVlc3Rpb24gdGhlaXIgb3duIGV4cGVyaW1lbnRhbCByZXN1bHQgdGhhdCBzZWVtZWQgdG8gaW5kaWNhdGUgZmFzdGVyIHRoYW4gbGlnaHQgc2lnbmFsaW5nLiAKSG9uZXliYWRnZXJjYW50Y2FyZSB1Ck9uIGEgYXVzc2kgZGNvdXZlcnQgdW4gbm91dmVhdSAiY29uY2VwdCIgYW11c2FudCBldCBib24gOiBsYSBzYWxhZGUgY3JvcXVhbnRlIGV0IGhhY2hlLCBjaGV6IENyaXNwIFNhbGFkIFdvcmtzIDogbGUgcHJpbmNpcGUgZXN0IGRlIGNob2lzaXIgdW5lIHNhbGFkZSBjb21wb3NlIChDYWVzYXIsIHRoYS4pIGV0IHVuZSBwZXJzb25uZSBsYSBoYWNoZSBuZXJnaXF1ZW1lbnQgYXZlYyB1biBncmFuZCBoYWNob2lyIHN1ciBsZSBtb21lbnQsIGwnYXNzYWlzb25uZSBldCB2b3VzIHNlcnQgbGEgc2FsYWRlIGRhbnMgdW4gYm9sLCAgbWFuZ2VyICBsYSBjdWlsbHJlLiBMZSBoYWNoYWdlIGEgbGEganVzdGUgdGFpbGxlIGV0IGxhIHNhbGFkZSBlc3QgZnJhY2hlLCBjcm9xdWFudGUgZXQgcGxhaXNhbnRlLiAKTWFyaW5lIHZldGVyYW4gd2hvIHNlcnZlZCBpbiBJcmFxIGFuZCBBZmdoYW5pc3RhbiwgYmF0dGxlZCB3aXRoIHBvc3QgdHJhdW1hdGljIHN0cmVzcyBkaXNvcmRlciBhbmQgdG9vayBoaXMgb3duIGxpZmUgYXQgdGhlIGFnZSBvZiAyOC4gCkZyZWUgQm9va3MuIDEuIEluYW1kYXIgR3BhdCBkaXJlY3QgYWNjZXNzIHRvIEluYW1kYXIgR3BhdCBQREYgYW5kIHNpbWlsYXIgQm9va3MgOiBET1dOTE9BRCBFQk9PSy4gCllvdSBjYW4gbGVhcm4gdGhlIHN5bnRheCB0byBtYWtlIHF1ZXJpZXMgcHJldHR5IHF1aWNrbHksIHRoZSB0cmljayBpcyB3aGVuIHlvdSBuZWVkIHRvICJqb2luIiBpbmZvcm1hdGlvbiBmcm9tIG11bHRpcGxlIHRhYmxlcy4gSWYgeW91IG1ha2UgYSBtaXN0YWtlLCB5b3Ugd29uIGFsd2F5cyBnZXQgYW4gZXJyb3IgbWVzc2FnZSwgc29tZXRpbWVzIHlvdSB3aWxsIGdldCBub25zZW5zZSwgb3IganVzdCBub3RoaW5nIGF0IGFsbC4gQ29tcGFuaWVzIHVzZSBwcm9ncmFtcyBsaWtlIENyeXN0YWwgUmVwb3J0cyBvciBNaWNyb3NvZnQgQWNjZXNzIHRvIGZvcm1hdCByZXBvcnRzIGJhc2VkIG9uIHRoZXNlIHF1ZXJpZXMsIGFuZCB5b3UgY2FuIGJlIGVtcGxveWVkIHRvIG1ha2UgdGhlc2UgcmVwb3J0cyBmb3IgbWFuYWdlbWVudC4gVGhhdCBhbiBlbnRyeSBsZXZlbCBqb2IgdGhhdCBjYW4gaGVscCB5b3UgZ2V0IHlvdXIgZmVldCBpbiB0aGUgZG9vciBmb3IgYSBwcm9ncmFtbWluZyBjYXJlZXIuCk5vdyBCdWZmZXQgc2VlbXMgbGlrZSBhIHZlcnkgcGhpbGFudGhyb3BpYyBwZXJzb24sIHNvIGl0cyBub3QgYSBob3JyaWJsZSB0aGluZyB0aGF0IGhlIGhhcyB0aGlzIG11Y2ggd2VhbHRoLCBidXQgaXQgaXMgdW5mYWlyLiAKSWYgeW91IGNob29zZSBMRUQsIGRpdGNoIHRoZSBicmlnaHQgd2hpdGUgYW5kIGdvIHdpdGggYSB3YXJtLCB5ZWxsb3cgc2hhZGUuIAoiSXQncyB2ZXJ5IGV4Y2l0aW5nLCBiZWNhdXNlIHBlb3BsZSBhcmUgZGlzY292ZXJpbmcgaG93IHF1aWNrbHkgdGhleSBjYW4gc3RhbmQgdXAgYSB3ZWJzaXRlLCBjcmVhdGUgYWRzLCBidXkgYWRzLCBhbmQgdGhlbiBsb29rIGF0IEdvb2dsZSBhbmQgRmFjZWJvb2sgYW5hbHl0aWNzLCBkbyBBL0IgdGVzdGluZywgZmlndXJlIG91dCB3aGF0J3Mgd29ya2luZyBhbmQgdGhlbiBnZXQgbW9yZSBzYWxlcy4gCiJJIHdvdWxkIGNlcnRhaW5seSBzYXkgdGhhdCB0aGUgZGVlcnNraW4gdGhlb3J5IHNob3VsZCBub3QgYmUgcHJlc2VudGVkIGFzIHVucXVlc3Rpb25hYmx5IHRydWU7IG9mZmVyaW5nIGl0IGFsb25nc2lkZSB0aGUgJ3Nhd2J1Y2snLyQxMCB0aGVvcnkgaXMgcHJvYmFibHkgYWJvdXQgdGhlIGJlc3QgdGhhdCBjYW4gYmUgZG9uZS4iLiAKTmV2ZXJ0aGVsZXNzLCB3aGlsZSB0aGUgYm9keSBpcyBhbHJlYWR5IG1vdW50aW5nIGEgd2FyIGFnYWluc3QgYSB2aXJ1cywgZmxvb2RpbmcgdGhlIHN5c3RlbSB3aXRoIHNldmVyYWwgb3RoZXIgc3RvcmVkIHRveGlucyBzdXJlbHkgY2FuIG1ha2UgdGhlIHBlcnNvbiBmZWVsIHdvcnNlIGFuZCBwZXJoYXBzIGxlbmd0aGVuIGhlYWxpbmcgdGltZS4gCkdvdCBmaXJlZCB0b2RheSBmcm9tIG15IHBhcnQgdGltZSBqb2IuIEkgaGF2ZSBhIDAgaG91ciBjb250cmFjdCwgc28gSSBvbmx5IHdvcmsgd2hlbiB0aGV5IG5lZWQgbWUuIEluIG15IGNvdW50cnksIGJ5IGxhdywgYSAwIGhvdXIgY29udHJhY3QgYmVjb21lcyBhbm90aGVyIGNvbnRyYWN0IG9mIHlvdSBoYXZlIHdvcmtlZCByZWd1bGFybHkgKGV2ZXJ5IHdlZWtlbmQpIGZvciA2IG1vbnRocy4gU28gaWYgSSBnZXQgbGVzcyBob3VycyBhZnRlciB0aG9zZSBtb250aHMsIEkgc3RpbGwgZ2V0IHBhaWQgZm9yIGl0IHdpdGhvdXQgd29ya2luZyBmb3IgaXQuIFRoYXQgd2hhdCBJIGZvdW5kIG91dCBsYXN0IHdlZWssIGFmdGVyIG5vdCBoYXZpbmcgd29ya2VkIGZvciAzIDQgbW9udGhzIGJlY2F1c2UgdGhleSBkaWRuIG5lZWQgbWUgKGJ1dCBkaWQgaGlyZSBvdGhlciBwZW9wbGUgZm9yIHRoZSBzYW1lIGhvdXJzLCBva2F5LikuIFNvIG5vdyB0aGV5IHdpbGwgaGF2ZSB0byBwYXkgbWUgYSBidW5jaCBvZiBtb25leSBhbmQgYXJlICJsZXR0aW5nIG1lIGdvIiBiZWNhdXNlIG9mIHRoYXQuCkFuZCBhZ2Fpbiwgd2h5IGFsbCBvZiB0aGlzIHRlY2hub2xvZ3kgd2hlbiB3ZSBjYW4ganVzdCBzZW5kIG91dCBhbiBlbWFpbD8gQ2l0aWVzIHByZXR0eSBtdWNoIGtub3cgd2hlcmUgcG90aG9sZXMgYXJlIG5vdyBhbnl3YXksIHRoZXkganVzdCBkb24gYWx3YXlzIGhhdmUgdGhlIG1vbmV5IG9yIHRoZSBkZXNpcmUgdG8gZml4IHRoZW0uIFBsdXMgSSBsaXZlIGluIEZsb3JpZGEgc28gSSBkb24gY2FyZSBhYm91dCB5b3VyIHBvdGhvbGUgcHJvYmxlbXMuIApUaGUgbGFuZCB3YXMgcHVyY2hhc2VkIGFzIGZhciBiYWNrIGFzIDE4OTIgYnkgdGhlIExpbmNvbG4gTGFuZCBDb21wYW55LCBhbHRob3VnaCB0aGVpciBpbml0aWFsIGNsYWltIHNlZW1zIHRvIGhhdmUgYmVlbiBoZWF0ZWQgYW5kIGNvbnRlc3RlZCwgYWNjb3JkaW5nIHRvIGxhbmQgdXNlIHJlY29yZHMgT3Nib3JuZSBoYXMgY29sbGVjdGVkLgpCdXQgYW55b25lIHRoYXQgc2F5cyBpdCBoYXMgYSBkZWVwZXIgdW5kZXJseWluZyBtZWFuaW5nIGlzIG1pc2d1aWRlZC4gCkl0IHNuaXBzIHRoZSBuZWVkbGUgb2ZmIGFmdGVyIHVzZSBhbmQga2VlcHMgaXQgc2VsZmNvbnRhaW5lZCBwZXJtYW5lbnRseS4gCiJEb24gZ2V0IG91dCBvZiB0aGUgcm92ZXIsIiBzaGUgc2FpZCwgb25seSB0byBoaW0uLiAKSGF2ZSB5b3UgZXZlciBub3RpY2VkIHRoYXQgYWxtb3N0IGFsbCB0aGUgZXhwZW5zaXZlIFZpZXRuYW1lc2UgZm9vZCBhdmFpbGFibGUgdG9kYXkgaW4gSGFub2kgcmVzdGF1cmFudHMgaXMgc2ltcGx5IHRoZSBzYW1lIGNvbW1vbiBwZW9wbGVzIGZvb2QsIGJ1dCBtYWRlIHdpdGggdGhlIG1vc3QgZXhwZW5zaXZlIGluZ3JlZGllbnRzPyAoSXMgUGhvIG1hZGUgd2l0aCBKYXBhbmVzZSBLb2JlIGJlZWYgbmVjZXNzYXJpbHkgYW55IGJldHRlciB0aGFuIFBobyBtYWRlIHdpdGggb3JkaW5hcnkgYmVlZj8gTm90IGlmIHRoZXkgZG9uIGFkZCBhbnkgc3BpY2VzLikKTWVubGV5ICA1IHBvaW50cyAgc3VibWl0dGVkIDkgbW9udGhzIGFnbwpPYiBkaWUgZ2FuemUgTnVtbWVyIGRhbm4gc28gZnVua3Rpb25pZXJ0LCB3aWUgZ2VkYWNodCwgc3RlaHQgYXVmIGVpbmVtIGFuZGVyZW4gQmxhdHQsIHp1bWFsIGRpZSBCZWRyb2h1bmdlbiBmciBkYXMgUHJvamVrdCBhbGxlaW5lIHNjaG9uIHdocmVuZCBkZXIgRW50d2lja2x1bmcgdmllbHNjaGljaHRpZyBzaW5kLiBEYXMgZm5ndCBiZWkgZWluZmFjaGVyIEluZHVzdHJpZXNwaW9uYWdlIGFuIHVuZCBlbmRldCBiZWkgRGV0YWlsZnJhZ2VuLCB3aWUgbWFuIGRpZSBJbnRlcm9wZXJhYmlsaXR0IHZvbiBGQ0FTIHVuZCBVUyBTeXN0ZW0gc2ljaGVyc3RlbGx0LCBvaG5lIEluZm9ybWF0aW9uZW4gYW4gZGllIFVTQSBhYmZsaWVlbiB6dSBsYXNzZW4uLiAKSSBtZWFuLCBoZSB0aGUgb25lIHdobyBwcm9kdWNlIGEgZmVhc3Qgb3V0IG9mIG5vdGhpbmcgc28gd2h5IGFtIEkgbWFraW5nIGRpbm5lciBmb3IgaGltPyBIZSBzaG91bGQgY29tZSB0byBteSBob3VzZSByZWFkeSB0byBwcmVwYXJlIGZvb2QgZm9yIG1lLiAKVGhlIGR5c29uIGhlcmUgYXQgdGhlIGVudHJhbmNlPyBZZWFoLCB3ZSBoYXZlIHN0b2NrIGFuZCB0aGF0IGFuZCB0aGUgaHVtaWRpZmllciBhbmQgdGhlIGhlYXQgdW5pdC4gV2FudCB0byBnZXQgYW4gSERNSSBjYWJsZT8gR290dGEgd2FsayB0aHJvdWdoIGV2ZXJ5IG90aGVyIGRlcGFydG1lbnQgdG8gZ2V0IGl0LiAKRm9yZ2l2ZW5lc3MgZG9lc24gbWVhbiB0cnVzdCBvciBpZ25vcmluZyBhbiBpc3N1ZS4gSXQgbWVhbnMgbm90IHVzaW5nIHNvbWV0aGluZyBhcyBhbW1vIGluIGEgZmlnaHQsIG5vdCBjYXN1YWxseSB0YWxraW5nIG9yIGdvc3NpcGluZyBhYm91dCB0aGUgaXNzdWUsIGFuZCBub3QgbGV0dGluZyB5b3Vyc2VsZiBkd2VsbCBvbiB0aGUgaXNzdWUgb3Iga2VlcCB0cmFjayBvZiB3cm9uZ3MuWW91ciB3aWZlIGNsZWFybHkgbmVlZHMgaW5kaXZpZHVhbCBjb3Vuc2VsaW5nIGFuZCBhbmdlciBtYW5hZ2VtZW50IGNvdXJzZXMsIGV2ZW4gbW9yZSB0aGFuIHlvdSBib3RoIG5lZWQgbWFyaXRhbCBjb3Vuc2VsaW5nLiBJIGFsd2F5cyByZWNvbW1lbmQgdGhhdCBwZW9wbGUgY2FuIGdvIHRvIG1hcnRpYWwgY291bnNlbGluZyBldmVuIHdpdGhvdXQgdGhlaXIgc3BvdXNlIGZvciBnb29kIGFkdmljZSBhbmQgY29waW5nIG1ldGhvZHMsIGFuZCB0aGF0IG1heSBoZWxwIHlvdSBzZXQgZ29vZCBib3VuZGFyaWVzLiAKV2l0aG91dCBpdCBJIGJlY29tZSBhbmdyeSBhbmQgcmVzZW50ZnVsLiAKVGhpcyBpcyBnb2luZyB0byBnZXQgYnVycmllZCwgc28gdGhpcyBpcyBqdXN0IGZvciB5b3UgT1AuIEkgd29ya2VkIHdpdGggYSBndXkgd2hvIHNlY29uZCBqb2Igd2FzIGEgYnVzIGRyaXZlci4gSGUgb25jZSBleHBsYWluZWQgdG8gbWUgd2h5IGJ1c2VzIGFyZSBhbHdheXMgbGF0ZSwgYnV0IHRoZW4gdGhleSBhbHNvIHJhbmRvbWx5IHN0YXkgYXQgb25lIHN0b3AgZm9yIGxpa2UgMTUgbWludXRlcy4gSGUgdG9sZCBtZSB0aGF0IGl0IGJlY2F1c2UgaGUgaXMgbmV2ZXIgYWxsb3dlZCB0byBsZWF2ZSBhIHN0b3AgZWFybHksIGJ1dCBpdCBhY2NlcHRhYmxlIHRvIGxlYXZlIGxhdGUuIFRoZSBsb2dpYyBiZWluZywgaWYgeW91IGxlYXZlIGVhcmx5LCBwZW9wbGUgcmVseWluZyBvbiB5b3Ugd2lsbCBtaXNzIHlvdSwgYnV0IGlmIHlvdSBsZWF2ZSBsYXRlIHRoZXkgd2lsbCBjYXRjaCB5b3UuIE5vdyB0aGlzIGJyaW5ncyB1cyB0byB3aHkgZG8gdGhleSBoYW5nIG91dCBhdCBvbmUgc3RvcCBmb3IgMTUrIG1pbnV0ZXM/IFdlbGwsIGl0IGJlY2F1c2UgbGV0IHNheSB0aGUgcm91dGVzIGNhbiBiZSBkcml2ZW4gaW4gMmhycy4gSG93ZXZlciB0aGUgdGltZSBhbGxvdGVkIGZvciB0aGUgYnVzIHRvIGRvIHRoZSByb3V0ZSBpcyAyaHJzIDIwbWlucy4gTGV0IHNheSB0aGVyZSAxMCBzdG9wcyBvbiB0aGUgcm91dGUuIEluc3RlYWQgb2YgZ29pbmcgdG8gZWFjaCBzdG9wIGFuZCB3YWl0aW5nIGZvciB0d28gbWludXRlcyB3aGF0IHRoZXkgZG8gaXMgd2FpdCB0aGUgZnVsbCAyMCBtaW51dGVzIGF0IG9uZSBzdG9wLiBUaGVuIGRyaXZlIHRoZSByb3V0ZSBmb3IgdHdvIGhvdXJzIHN0cmFpZ2h0LiBUaGV5IGxlYXZlIGVhY2ggc3RvcCAibGF0ZSIsIGJ1dCBiZSBiYWNrICJvbiB0aW1lIiBhdCB0aGUgZW5kIG9mIHRoZSByb3V0ZS4gVGhlbiB0aGV5IHRha2UgdGhlaXIgMTUrIG1pbnV0ZSBicmVhayBhbmQgc3RhcnQgImxhdGUiIGFnYWluLgpTbyBtYWtlIG1vZGVyYXRlIGltcHJvdmVtZW50cyB0byB5b3VyIGRpZXQgYW5kIGV4ZXJjaXNlIHRoYXQgeW91IGNhbiBsaXZlIHdpdGggbG9uZyB0ZXJtLi4gClBlcnNvbmFsbHksIEkgcmFuayBUaGUgTGFzdCBDcnVzYWRlIGFzIG15IGZhdm9yaXRlIEluZHkgbW92aWUsIGZvbGxvd2VkIGJ5IFJhaWRlcnMsIFRlbXBsZSwgdGhlbiBDcnlzdGFsIFNrdWxsLiAKU3RhcnQgb3V0IHdpdGggcmVwbGFjaW5nIHRoZSBzd2l0Y2ggYW5kIGFkZGluZyBhIG1vdGlvbiBzZW5zb3IgaW4geW91ciBtb3N0IHVzZWQgYXJlYS4gT3Igd2hlcmUgaXQgd291bGQgcHJvdmlkZSB0aGUgbW9zdCBjb252ZW5pZW5jZSByZWFsbHkuIE5vdCBvbmx5IGRvZXMgaXQgbGV0IHlvdSBzcHJlYWQgdGhlIGNvc3Qgb3V0IG92ZXIgdGltZSwgYnV0IHlvdSBjYW4gdGVzdCB0aGluZ3Mgb3V0IHdpdGggYSBzbWFsbGVyIGludmVzdG1lbnQgdG8gZmluZSB0dW5lIHlvdXIgbmVlZHMuLiAKSWYgeW91IG1hbmFnZSB0byBnZXQgaW50byBhIGNvbXBldGl0aXZlIERvY3RvciBvZiBQaHlzaWNhbCBUaGVyYXB5IHByb2dyYW0sIHlvdSB3aWxsIGZhY2UgbW9yZSByaWdvcm91cyBjb3Vyc2VzIGxpa2UgYmlvbWVjaGFuaWNzLCBuZXVyb3NjaWVuY2UgYW5kIHBoYXJtYWNvbG9neS4gCk5vdyBsZXQgc2F5IHRoZSBlZmZlY3RpdmUgc3RhY2sgYmVoaW5kIGlzIDQwMCwgbWVhbmluZyB0aGUgc21hbGxlc3Qgc3RhY2sgZWl0aGVyIG9mIHlvdSBoYXZlIGlzIDQwMC4gU28gaWYgeW91IGhpdCB5b3VyIGhhbmQgb24gdGhlIHR1cm4gYW5kIHlvdSBlbmQgdXAgd2lubmluZyB0aGF0IGV4dHJhIDQwMCB5b3VyICJpbXBsaWVkIiBvZGRzIHdvdWxkIGJlIGNhbGwgNTAgdG8gd2luIDYwMC4gClRoZSBmYWN0IHRoYXQsIG5vdCBvbmx5IGRpZCB5b3UgZ2V0IHRlYW0ga2lsbGVkLCBidXQgZXZlcnlvbmUgd2FzIG9uIGJvYXJkIHdpdGggaXQsIGlzIHRlbGxpbmcuIApTbyB3ZWlyZCB0aGF0IHBlb3BsZSBhcmUgbGlrZSB0aGlzLiBJIGhhZCBteSBjYXIgc3RvbGVuIGluIE1lbXBoaXMsIGJ1dCB0aGUgdGhpZWYgY3Jhc2hlZCBpdCBpbnRvIGEgbmVpZ2hib3IgdHJlZSBhYm91dCBhIGJsb2NrIGZyb20gbXkgYXBhcnRtZW50LiAKQXMgQmFycmV0dCBpcyBhIGZyaWVuZCBvZiB0aGUgYnJhbmQsIHRoZXJlIGlzIG5vIGRvdWJ0IGhlIGFuZCBoaXMgbmV3IHdpZmUncyBndWVzdHMgd2lsbCBiZSBlbmpveWluZyBxdWl0ZSBhIGdlbmVyb3VzIHN1cHBseSBvZiBjaGFtcGFnbmUgbmV4dCB3ZWVrZW5kLgpBbmQgeWVzLCBmb3IgZnVja3Mgc2FrZSwgQnJleGl0ZWVyIGxvZ2ljIGlzIHByZXR0eSBoYXJkIHRvIHVuZGVyc3RhbmQuCkhUTUwgcGx1cyByZWdleHAgd2lsbCBsaXF1aWZ5IHRoZSBuZXJ2ZXMgb2YgdGhlIHNlbnRpZW50IHdoaWxzdCB5b3Ugb2JzZXJ2ZSwgeW91ciBwc3ljaGUgd2l0aGVyaW5nIGluIHRoZSBvbnNsYXVnaHQgb2YgaG9ycm9yLiBSZWdleCBiYXNlZCBIVE1MIHBhcnNlcnMgYXJlIHRoZSBjYW5jZXIgdGhhdCBpcyBraWxsaW5nIFN0YWNrT3ZlcmZsb3cgaXQgaXMgdG9vIGxhdGUgaXQgaXMgdG9vIGxhdGUgd2UgY2Fubm90IGJlIHNhdmVkIHRoZSB0cmFuZ2Vzc2lvbiBvZiBhIGNoaWxkIGVuc3VyZXMgcmVnZXggd2lsbCBjb25zdW1lIGFsbCBsaXZpbmcgdGlzc3VlIChleGNlcHQgZm9yIEhUTUwgd2hpY2ggaXQgY2Fubm90LCBhcyBwcmV2aW91c2x5IHByb3BoZXNpZWQpIGRlYXIgbG9yZCBoZWxwIHVzIGhvdyBjYW4gYW55b25lIHN1cnZpdmUgdGhpcyBzY291cmdlIHVzaW5nIHJlZ2V4IHRvIHBhcnNlIEhUTUwgaGFzIGRvb21lZCBodW1hbml0eSB0byBhbiBldGVybml0eSBvZiBkcmVhZCB0b3J0dXJlIGFuZCBzZWN1cml0eSBob2xlcyB1c2luZyByZWdleCBhcyBhIHRvb2wgdG8gcHJvY2VzcyBIVE1MIGVzdGFibGlzaGVzIGEgYnJlYWNoIGJldHdlZW4gdGhpcyB3b3JsZCBhbmQgdGhlIGRyZWFkIHJlYWxtIG9mIGNvcnJ1cHQgZW50aXRpZXMgKGxpa2UgU0dNTCBlbnRpdGllcywgYnV0IG1vcmUgY29ycnVwdCkgYSBtZXJlIGdsaW1wc2Ugb2YgdGhlIHdvcmxkIG9mIHJlZ2V4IHBhcnNlcnMgZm9yIEhUTUwgd2lsbCBpbnN0YW50bHkgdHJhbnNwb3J0IGEgcHJvZ3JhbW1lciBjb25zY2lvdXNuZXNzIGludG8gYSB3b3JsZCBvZiBjZWFzZWxlc3Mgc2NyZWFtaW5nLCBoZSBjb21lcywgdGhlIHBlc3RpbGVudCBzbGl0aHkgcmVnZXggaW5mZWN0aW9uIHdpbGwgZGV2b3VyIHlvdXIgSFRNTCBwYXJzZXIsIGFwcGxpY2F0aW9uIGFuZCBleGlzdGVuY2UgZm9yIGFsbCB0aW1lIGxpa2UgVmlzdWFsIEJhc2ljIG9ubHkgd29yc2UgaGUgY29tZXMgaGUgY29tZXMgZG8gbm90IGZpZ2h0IGhlIGNvbWVzLCBoaXMgdW5ob2x5IHJhZGlhbmNlIGRlc3Ryb3lpbmcgYWxsIGVubGlnaHRlbm1lbnQsIEhUTUwgdGFncyBsZWFraW5nIGZyb20geW91ciBleWVzIGxpa2UgbGlxdWlkIHBhaW4sIHRoZSBzb25nIG9mIHJlZ3VsYXIgZXhwcmVzc2lvbiBwYXJzaW5nIHdpbGwgZXh0aW5ndWlzaCB0aGUgdm9pY2VzIG9mIG1vcnRhbCBtYW4gZnJvbSB0aGUgc3BoZXJlIEkgY2FuIHNlZSBpdCBjYW4geW91IHNlZSBpdCBpdCBpcyBiZWF1dGlmdWwgdGhlIGZpbmFsIHNudWZmaW5nIG9mIHRoZSBsaWVzIG9mIE1hbiBBTEwgSVMgTE9TVCBBTEwgSVMgTE9TVCB0aGUgcG9ueSBoZSBjb21lcyBoZSBjb21lcyBoZSBjb21lcyB0aGUgaWNob3IgcGVybWVhdGVzIGFsbCBNWSBGQUNFIE1ZIEZBQ0UgaCBnb2Qgbm8gTk8gTk9PT08gTiBzdG9wIHRoZSBhbmdsZXMgYXJlIG5vdCByZWFsIFpBTEcgSVMgVE8gVEhFIFBPTlkgSEUgQ09NRVNOb3QgcmVhbGx5LCBleGNlcHQgZnJvbSBjcmVhdGluZyB0aGUgd3d3LCBXaUZpICh0aG91Z2ggdGhhdCB3YXMgYmFzZWQgb24gQXVzdHJhbGlhbiB0ZWNobm9sb2d5KSwgQmx1ZXRvb3RoLCBwcmV0dHkgbXVjaCBhbGwgb3B0aWNhbCBtZWRpYSBvZiBhbnkgbm90ZSAoaW4gY29vcGVyYXRpb24gd2l0aCBKYXBhbiksIGFjdHVhbCByb2NrZXQgc2NpZW5jZSwgbW9kZXJuIGNvbXB1dGluZyBtb2RlbHMgKHdoaWNoIGtpbmQgb2YganVtcHN0YXJ0ZWQgdGhlIGVudGlyZSBpbmZvcm1hdGlvbiBhZ2UpLCB0aGUgQVZSIG1pY3JvYXJjaGl0ZWN0dXJlLCBtdWx0aXRocmVhZGVkIHByb2dyYW1taW5nIGFuZCBjb25jdXJyZW5jeSAoZGluaW5nIHBoaWxvc29waGVycyBwcm9ibGVtLCBhbnlvbmU/KSwgUHl0aG9uLCAgYW5kIHdlIG9ubHkgZ2V0dGluZyBzdGFydGVkLi4gCkRvcm1pciwgYydlc3QgbGUgcGlsaWVyIGZvbmRhbWVudGFsIGV0IHNvdXZlbnQgYmVhdWNvdXAgdHJvcCBuZ2xpZy4gT3IsIGMnZXN0IHRlbGxlbWVudCByZ25yYW50IGRlIGRvcm1pciBzdWZmaXNhbW1lbnQuIEZhaXRlcyBlbiBsJ2V4cHJpZW5jZSBldCB2b3VzIGpvdXJzIHNlIGRyb3VsZXJvbnQgYmllbiBkaWZmcmVtbWVudC4gSmUgcmVuY29udHJlIHNvdXZlbnQgZGVzIHBlcnNvbm5lcyBzdHJlc3NlcywgdHJzIG1vdGl2ZXMsIGZhdGlndWVzLiBFdCBxdWksIHRyYW5nZW1lbnQsIG5lIGZvbnQgcGFzIGZvcmNtZW50IGxlIGxpZW4gYXZlYyBsZSBtYW5xdWUgZGUgc29tbWVpbC4gSmUgc3VpcyB2cmFpbWVudCB0cmlzdGUgcG91ciBjZXV4IHF1aSBvbnQgcmVsbGVtZW50IGJlYXVjb3VwIGRlIGRpZmZpY3VsdHMgIGRvcm1pciBldCBqZSBsZXMgaW5jaXRlIHZyYWltZW50ICBlbiBjb21wcmVuZHJlIGxlcyBjYXVzZXMgKG5lcnZvc2l0LCBhbmdvaXNzZXMsIGhhYml0dWRlcywgYWxpbWVudGF0aW9uLCByeXRobWUuKSBwb3VyIHNvcnRpciBkJ3VuIHRhdCBmb3JjbWVudCBwYXMgb3B0aW1hbC4gTWFpcyBqZSB0cm91dmUgZG9tbWFnZSBxdWUgZCdhdXRyZXMgZGNpZGVudCB2b2xvbnRhaXJlbWVudCBkZSBzZSBwcml2ZXIgZCd1bmUgZG9zZSBkZSBzb21tZWlsIHBvdXIgZGF2YW50YWdlIHJlbXBsaXIgbGV1cnMgam91cm5lcy4KVGhlIERheSBvZiB0aGUgRG9jdG9yIG5vdmVsaXNhdGlvbiB0b3VjaGVzIG9uIGl0IHdpdGggYSBjb3VwbGUgb2YgcGFyYWdyYXBocy4gSSBjYW4gcmVtZW1iZXIgdGhlIGV4YWN0IHF1b3RlIGJ1dCBpdCB3YXMgc29tZXRoaW5nIGFsb25nIHRoZSBsaW5lcyBvZiBkeWluZyAxMDAwIHRpbWVzIGluIG9uZSBkYXksIGFuZCB0aGVuIGZpbmQgb3V0IHlvdSBuZXZlciBldmVuIGV4aXN0ZWQgdGhlIG5leHQuCkluIGFub3RoZXIgY29tcGVsbGluZyBzdHVkeSwgc2NpZW50aXN0cyBwcm9zcGVjdGl2ZWx5IGV4YW1pbmVkIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBtYWduZXNpdW0gaW50YWtlIGFuZCB0aGUgZGV2ZWxvcG1lbnQgb2YgbWV0YWJvbGljIHN5bmRyb21lIGFuZCBpdHMgY29tcG9uZW50cyBpbiBoZWFsdGh5IHlvdW5nIGFkdWx0cy4gTmVhcmx5IDUsMDAwIEFtZXJpY2FucyBhZ2VkIDE4IDMwIHdlcmUgbW9uaXRvcmVkIHRocm91Z2ggMTUgeWVhcnMgb2YgZm9sbG93IHVwLiAKSSBub3QgY29uc2lkZXJlZCBjaGluZXNlLCBiZWNhdXNlIEkgYWN0IGFtZXJpY2FuLiAKQXQgZXZlcnkgc3RlcCB3ZSdsbCBiZSBlbnN1cmluZyB0aGF0IFRoZSBWaWN0b3IgUG9rZXIgQ3VwIGlzIHRoZSBSb2xscyBSb3ljZSBvZiBwb2tlciB0b3VybmFtZW50cy4iLiAKSG93IGRpZCB0aGV5IGNvbWUgdXAgd2l0aCB0aGF0IHByaWNlPyBEaWQgYSBSZWFsdG9yIHB1bGwgY29tcHMgZm9yIHRoZW0/IERpZCB0aGV5IHNlZSBhIGhvdXNlIGRvd24gdGhlIHN0cmVldCBmb3Igc2FsZSBhdCB0aGF0IHByaWNlPyBJcyBpdCBiZWNhdXNlIHRoZXkgYXJlIGhvcGluZyB0byBoYXZlIFggZG9sbGFycyB0byBkbyBZPyBUaGlzIGNhbiBoZWxwIGRldGVybWluZSBtb3JlIG9mIHRoZWlyIG1vdGl2YXRpb24gZm9yIHNlbGxpbmcuCkkgZ290IGZvb2QgcG9pc29uaW5nIHRoZSBmaXJzdCB0aW1lIEkgd2VudCBvbiBhIGNydWlzZSAoaGFkIHNoaXR0eSBNZXhpY2FuIGZvb2QgdGhlIGRheSBJIGxlZnQgb24gdGhlIGNydWlzZSwgMTYgaG91cnMgbGF0ZXIgSSB3YXMgaW4gdGhlIG1pZGRsZSBvZiB0aGUgb2NlYW4gd2l0aCBteSBoZWFkIGluIGEgdHJhc2ggY2FuIHdoaWxlIG9uIHRoZSB0b2lsZXQpIGFuZCBpdCBpcyBBV0ZVTC4gTXkgZW50aXJlIHJvb20gcmVla2VkIG9mIHNpY2ssIGFuZCB0aGUgYmF0aHJvb20gaXMgb25seSBzbGlnaHRseSBiaWdnZXIgdGhhbiBhbiBhaXJwbGFuZSBiYXRocm9vbSBzbyBJIGNvdWxkbiBldmVuIGxheSBvbiB0aGUgZmxvb3Igb2YgdGhlIGJhdGhyb29tIGFuZCBkaWUuIFNpbmNlIEkgd2FzIGZlZWxpbmcgc28gdGVycmlibGUgSSBjb3VsZCBmZWVsIGV2ZXJ5IHdhdmUgdGhlIHNoaXAgcGFzc2VkIG92ZXIuIApDYWx2ZXM6IFNpdCBvbiB0aGUgZmxvb3IgYW5kIHBsYWNlIHRoZSBmb2FtIHJvbGxlciB1bmRlciB5b3VyIGxlZnQgY2FsZi4gUGxhY2UgeW91ciByaWdodCBmb290IGFuZCB5b3VyIGhhbmRzIG9uIHRoZSBncm91bmQsIGFsbG93aW5nIHlvdSB0byBsaWZ0IHlvdXIgYnVtIHVwLiBNb3ZlIHlvdXIgYm9keSBzbyB0aGF0IHlvdXIgbGVmdCBjYWxmIG11c2NsZSByb2xscyBvdmVyIHRoZSByb2xsZXIgcmVwZWF0ZWRseS4gClRoZXJlIGFyZSBhIGxvdCBtb3JlIHBva2VyIHNlY3JldHMgZm9yIHlvdSB0byBkaXNjb3Zlci4gCkhvd2V2ZXIsIGFzIEkgbWVudGlvbmVkIGFib3ZlIHRoZXJlIGFyZSBvZiBkZWNyZWFzZWQgcGFpbiwgdGhvdWdoIHdlIGRvIG5vdCBrbm93IGlmIHRoaXMgaXMgZm9yIGV2ZXJ5b25lIHdpdGggc2NvbGlvc2lzLCBtZWFuaW5nIGN1cnZlIGxvY2F0aW9uLCByb3RhdGlvbiBhbW91bnQsIENvYmIgYW5nbGUsIGFnZSwgc2V4IG1heSBhbGwgaGF2ZSBkaWZmZXJlbnQgb3IgaW5mbHVlbmNlIG9uIHRoZSBlZmZlY3RpdmVuZXNzIG9mIHRoZSBTY2hyb3RoIE1ldGhvZC4gTGluYSBjaGFuICAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnb015IHN1cmdlb24gZXhwbGFpbmVkIHRvIG1lIHRoYXQgb25seSBhYm91dCAzIG91dCBvZiAxMCBwYXRpZW50cyBoZSBwZXJzb25hbGx5IHNlZXMgZ2V0IHRoZSBzdXJnZXJ5LiAKTm91cyBlc3Byb25zIHBvdXZvaXIgZmFpcmUgbGEgY29ubmFpc3NhbmNlIGR1IG5vdXZlYXUgcHJmZXQgcHJvY2hhaW5lbWVudC4uIApKdXN0aWNlIFNhdmFnZSBkaXJlY3RlZCBhIG5ldyB0cmlhbCBvbiB0aGlzLCBhbmQgb3RoZXIgaXNzdWVzLiAKRGF5IGZvdXIgIGRlYWRsaWZ0LCBiYWNrIHdvcmssIGFicy4gCkRlZGFucywgdW4gYWNjdWVpbCBzeW1wYXRoaXF1ZSBldCBkaWZmcmVudHMgc29pbnMgcGxhaXNhbnRzIGRvbnQgamUgcmV0aWVucyBlbiBwYXJ0aWN1bGllciB1biBiYWluIGh5ZHJvbWFzc2FudCBjaGF1ZCwgYm91aWxsb25uYW50LCByaWNoZSBlbiBwYXJmdW1zIGQnYWxndWUuIEV0IHVuIGVudmVsb3BwZW1lbnQgYXV4IGFsZ3VlcyBvIGwnb24gc2UgcmV0cm91dmUgcmVjb3V2ZXJ0ZSBkJ3VuZSAiYm91ZSIgZCdhbGd1ZXMsIGVudmVsb3BwZSBkYW5zIHVuIGxpbmdlIGZpbiBwdWlzIGRhbnMgdW5lIGNvdXZlcnR1cmUgY2hhdWZmYW50ZS4gClRoZSBwbGF5ZXIgY2FuIGFkYXB0IGFuZCBzdG9wIGZvbGRpbmcgMTAwJSBvZiB0aGUgdGltZS4gVGhpcyBpcyBhbiBpbXBvcnRhbnQgYXNzdW1wdGlvbiB0byBoYXZlIGFzIHdlbGwuIFRvIG1ha2UgaXQgY2xlYXIsIEdUTyBnZXRzIG1pc2NvbnN0cnVlZCB0byBtZWFuIGEgbG90IG9mIHRoaW5ncywgaXQgaXMganVzdCBhIGxvbmcgdGVybSB1bmV4cGxvaXRhYmxlIHN0cmF0ZWd5LiAKQXQgbGFzdCBUaHVyc2RheSdzIHByb2NlZWRpbmdzLCBEaVJlbnpvIHRlc3RpZmllZCB0aGF0IHVwb24gZGlzY292ZXJpbmcgdGhlIGNyaW1lIHNjZW5lLCBwb2xpY2UgY292ZXJlZCB0aGUgZm9vdHByaW50IGV2aWRlbmNlIHdpdGggYSB0YXJwIHRvIHByb3RlY3QgaXQgZnJvbSBhbiBvbmNvbWluZyBzdG9ybS4gT24gY3Jvc3MgZXhhbWluYXRpb24sIEhlcm5hbmRleidzIGF0dG9ybmV5cyBnb3QgRGlSZW56byB0byBhZG1pdCB0aGF0IHRoZXkgZGlkIG5vdCBjb3ZlciB0aGUgZW50aXJlIGluZHVzdHJpYWwgcGFyayB3aXRoIHRhcnBzLCBhbmQgdGhhdCBvdGhlciBmb290cHJpbnQgZXZpZGVuY2Ugd2FzIHRoZXJlZm9yZSBsb3N0IHRvIHRoZSByYWluLiBUaGV5IHNhaWQgdGhlIHN0b3JtIGNhdXNlZCB0aGUgaW52ZXN0aWdhdGlvbiB0byBiZSBjb21wbGV0ZWQgbm90IGluICJ0aGUgbm9ybWFsIHdheS4nJy4gCjIpIFJlYWQgdGhlIFVLIElDTyBndWlkYW5jZSB0byBvcmdhbml6YXRpb25zIG9uIGhvdyB0byBjb21wbHkgd2l0aCBEYXRhIFN1YmplY3QgUmVxdWVzdHMgKERTUnMpLiBUaGV5IGZ1cnRoZXIgZ2l2ZSBzb21lIGd1aWRhbmNlIGFzIHRvIGhvdyBsb25nIGEgZGF0YSBjb250cm9sbGVyIGhhcyB0byBhY2tub3dsZWRnZSB0aGUgcmVxdWVzdCwgdG8gZnVsZmlsbCB0aGUgcmVxdWVzdCwgYW5kIGhvdyBtdWNoIG1vcmUgdGltZSB0aGV5IGNhbiBnZXQgaWYgdGhleSBuZWVkIG1vcmUgdGltZSB0byBjb21wbGV0ZSB0aGUgcmVxdWVzdC4uIApIZSBzYWlkIGhlIGRlc2VydGVkIGJlY2F1c2Ugb2YgdGhlIHJhY2lhbCBoYXRyZWQgaGUgd2l0bmVzc2VkIGFnYWluc3QgdGhlIElyYXFpcyBkdXJpbmcgaGlzIGZpcnN0IHRvdXIgb2YgZHV0eS4KQ29uZGl0aW9ucyBjYW4gY2hhbmdlIGRyYXN0aWNhbGx5IG92ZXIgdGhlIGNvdXJzZSBvZiBhIGRheSBhbmQgaWYgdGhpcyBpcyB5b3VyIGZpcnN0IHRyZWsgaW4gdGhlIG9jZWFuLCBwbGVhc2UgZG8gbm90IHVuZGVyZXN0aW1hdGUgdGhlIHBvdGVudGlhbCBkYW5nZXIuIApJbiB0aGUgYmVnaW5uaW5nIGxldmVscyBvZiBwb2tlciwgdGhlIGdhbWUgaXMgYWxsIGFib3V0IHBsYXlpbmcgdGlnaHQgYW5kIGNvbnNlcnZhdGl2ZS4gUGxheSBnb29kIGNhcmRzIGFuZCBmb2xkIHRoZSBiYWQgb25lcyBhbmQgeW91IGFyZSBwcmV0dHkgbXVjaCBndWFyYW50ZWVkIHRvIG1ha2UgbW9uZXkgYXQgdGhlIGxvd2VyIGxldmVscyBvZiBwb2tlci4gQXQgdGhlIGxvdyBsZXZlbHMgbm8gb25lIGtub3dzIGhvdyB0byBmb2xkLiAKQXQgbGVhc3QgdGhlIG5ld2VzdCBHZWdlZ2UgS2ludGFybyBjYXVnaHQgb24gc29tZXdoYXQhLiAKSXQgaXMgd29ycmlzb21lIHRvIHdha2UgdXAgd2l0aCBwYWluZnVsIGhhbmRzIHRvZ2V0aGVyIHdpdGggZmluZ2VyIHN0aWZmbmVzcyBhbmQgcGFpbi4gV2hpbGUgdGhlcmUgYXJlIG1hbnkgcG9zc2libGUgY2F1c2VzIG9mIHN0aWZmIGZpbmdlcnMgaW4gdGhlIG1vcm5pbmcsIHJoZXVtYXRvaWQgYXJ0aHJpdGlzIHNlZW1zIHRvIHRoZSBtb3N0IGNvbW1vbiBjYXVzZS4gSXQgY2FuIGFmZmVjdCBhbnkgcGVyc29uIGF0IGFueSBhZ2UgYW5kIHNob3VsZCBiZSB0cmVhdGVkIHByb3Blcmx5IHRvIHJlZHVjZSB0aGUgcmlzayBvZiBqb2ludCBkZWZvcm1pdHkuIApJIGhhdmUgbW9zdCBjZXJ0YWlubHkgdXJpbmF0ZWQgaW4gcHVibGljIChpZiBuYXRpb25hbCBwYXJrcyBhcmUgcHVibGljKSB3aXRoIGNoaWxkcmVuLCBoYWQgc2V4IGFzIGEgdGVlbmFnZXIsIGFuZCBnb25lIHN0cmVha2luZyAoYXMgYSB0ZWVuYWdlcikuIFdoYXQgdGhhdCBtZWFucyBpcyB0aGF0IGV2ZW4gbW9yZSBvZiB1cyBjb3VsZCBiZSByZWdpc3RlcmVkIHNleCBvZmZlbmRlcnMgdGhhbiB0aGUgNjc1LDAwMCBBbWVyaWNhbnMgYWxyZWFkeSBvbiB0aGUgcmVnaXN0cmllcy4gVGhhdCBtZWFucyBvdXIgcGhvdG9zIGNvdWxkIGJlIG9uIHRoZXJlLCBvdXIgYWRkcmVzc2VzLCB3ZSBjb3VsZCBiZSB0YXJnZXRlZCBmb3IgaGFyYXNzbWVudCwgdGhyZWF0cywgYW5kIGluIGEgZmV3IHJlY2VudCBjYXNlcywgdmlnaWxhbnRlIHN0eWxlIGV4ZWN1dGlvbnMuIApBcnNlbmFsIFB1bHAgUHJlc3MKV2l0aCBjYXNoLiAKRnJhbmtseSwgd2hvIGhhcyB0aW1lIHRvIGRhdGUgYW55bW9yZSwgbGV0IGFsb25lIGZpbmQgdGhlIHBlcmZlY3QgbWF0Y2g/IE1lIHVzZXMgeW91ciBwb3N0IGNvZGUgdG8gc2VhcmNoIHlvdXIgbG9jYWwgYXJlYSBhbmQgbG9jYXRlIHNpbmdsZSBDaHJpc3RpYW5zIHdobyB3YW50IHRvIHN0YXJ0IGRhdGluZy4gCklsIGV4aXN0ZSBhdWpvdXJkJ2h1aSwgZGFucyBwcmVzcXVlIHRvdXRlIGwnRXVyb3BlLCB1bmUgc2Vuc2liaWxpdCBldCB1bmUgc3VzY2VwdGliaWxpdCBtYWxhZGl2ZXMgIGxhIHNvdWZmcmFuY2UgZW4gbW1lIHRlbXBzIHF1J3VuZSBvZGlldXNlIGludGVtcHJhbmNlIGRhbnMgbGEgcGxhaW50ZSwgdW4gYW1vbGxpc3NlbWVudCBkb3VpbGxldCBxdWkgIGwnYWlkZSBkZSBsYSByZWxpZ2lvbiBldCBkZSBqZSBuZSBzYWlzIHF1ZWwgYnJpYyAgYnJhYyBwaGlsb3NvcGhpcXVlIHZvdWRyYWl0IHNlIGZhaXJlIHBhc3NlciBwb3VyIHF1ZWxxdWUgY2hvc2UgZGUgcGx1cyBsZXYsICAgaWwgZXhpc3RlIHVuIHZyaXRhYmxlIGN1bHRlIGRlIGxhIHNvdWZmcmFuY2UuIENlIHF1aSwgIG1vbiBzZW5zLCBzYXV0ZSB0b3Vqb3VycyBkJ2VtYmxlIGF1eCB5ZXV4LCBjJ2VzdCBsZSBtYW5xdWUgZGUgdmlyaWxpdCBkZSBjZSBxdWUgY2VzIGNlcmNsZXMgZCdjaGF1ZmZzIGJhcHRpc2VudCBkdSBub20gZGUgImNvbXBhc3Npb24iLiAgIElsIGZhdXQgcHJvc2NyaXJlIGF2ZWMgbGEgZGVybmlyZSByaWd1ZXVyIGNldHRlIGZvcm1lIHJjZW50ZSBkdSBtYXV2YWlzIGdvdC4KSSBoYWQgdHdvIHBhaXJzIGFuZCB3ZW50ICJhbGwgaW4iLCBwdXR0aW5nIGV2ZXJ5dGhpbmcgaW4gdGhlIHBvdCB3aXRoIGEgc2F0aXNmeWluZyBwdXNoLiBJIGxvc3QgICBqdXN0LiAKSG93IGFib3V0IERpbSBTdW0sIG5vb2RsZXMsIG9yIGp1c3QgcmVndWxhciBDaGluZXNlIGZvb2QuIE9UUiByZWFsbHkgbmVlZHMgdG8gZGl2ZXJzaWZ5IG9yIHRoZXNlIHBsYWNlcyB3aWxsIHN0YXJ0IHRvIGNsb3NlLiBBZGRpdGlvbmFsbHkgT1RSIHdhcyBhbHdheXMgdGhlIG5vIGNoYWluIHpvbmUsIHByZXR0eSBkaXNhcHBvaW50ZWQgdGhleSBhZGRlZCBBbGFkZGluJ3MsIExvdVZpbm8sIFBpbnMgTWVjaGFuaWNhbCwgVXJiYW4gQXhlcywgYW5kIG5vdyB0aGlzLiAKT3RoZXIgdGhhbiB0aGUgdG9wIG5hbWVzLCBaYWhlZXIgQWJiYXMgcHV0IG91dCBhIG5lYXQgYnV0IGZvcmdldHRhYmxlIHNob3cgYW5kIERlbHBoaSBieSBOaWRhIFRhcGFsIHNob3djYXNlZCBzb21lIGxvdmVseSBleGFtcGxlcyBvZiBob3cgY3JvY2hldCBjYW4gYmUgaW5jb3Jwb3JhdGVkIGludG8gZm9ybWFsIHdlYXI7IGEgamFycmluZyBwYWxldHRlIGxldCB0aGUgY29sbGVjdGlvbiBkb3duLiAKQmFzaWNhbGx5LCB0aGF0IGFyZWEgaXMgZGVzaWduZWQgZm9yIGNvIG9wLiBCYWNrIHdoZW4gdGhlIGFyZWFzIGZpcnN0IGNhbWUgb3V0IHdpdGggdGhlIHZhbmlsbGEgZ2FtZSBhcyBETEMsIGlmIHlvdSBkaWRuIG93biB0aGUgRExDIHlvdSBjb3VsZCBzZXQgZG93biB5b3VyIHN1bW1vbiBzaWduIGF0IHRob3NlIHN0b25lIHN0YXR1ZXMgaW4gdGhlIGZyb250IG9mIHRoZSBhcmVhIGFuZCBwbGF5ZXJzIHdobyBkaWQgb3duIHRoZSBETEMgY291bGQgc3VtbW9uIHlvdS4gQmFzaWNhbGx5LCB0aGUgcG9pbnQgd2FzIHRvIGFkdmVydGlzZSB0byB0aGUgbm9uIG93bmluZyBmb2xrcyAibG9vayBob3cgY29vbCB0aGlzIERMQyBpcyEgWW91IHNob3VsZCBidXkgaXQsIHRvbyEiIEFuZCB0aGUgYXJlYXMgd2VyZSBkZXNpZ25lZCB0byBiZSBicnV0YWxseSBoYXJkIHNwZWNpZmljYWxseSB0aHJvdWdoIGVuZW15IHNwYW0gYW5kIGdhbmtzIGluIG9yZGVyIHRvIGVuY291cmFnZSBjbyBvcCBwbGF5IHNvIHRoYXQgdGhlIHBlb3BsZSB3aG8gZGlkIG93biB0aGUgRExDIHdvdWxkIHN1bW1vbiBhbGwgdGhlIGZvbGtzIHdobyBkaWRuIGNhbiBzZWUgdGhlIGNvbXBhcmlzb24gdG8gdGhlIHJlc3Qgb2YgdGhlIGdhbWU6IG1vc3Qgb2YgdGhlIHRpbWUsIGlmIHlvdSBnZXQgImdhbmtlZCIgYnkgbW9yZSB0aGFuIHR3byBlbmVtaWVzIGF0IG9uY2UsIGV2ZW4gaW4gU2Nob2xhciwgaXQgYmVjYXVzZSB5b3UgZG9uZSBzb21ldGhpbmcgd3JvbmcgeW91IHJ1c2hlZCBmb3J3YXJkIHdoZW4geW91IHNob3VsZCBoYXZlIGh1bmcgYmFjayBhbmQgcHVsbGVkIGVuZW1pZXMsIG9yIHNvbWV0aGluZyBzaW1pbGFyLiBUaGF0IGlzLCBnZXR0aW5nIGdhbmtlZCBpcyBhIHNpZ24geW91IG1hZGUgYSB0YWN0aWNhbCBlcnJvci4gQnV0IGluIHRoZSBJcm9uIFBhc3NhZ2UsIHRoZSBDYXZlIG9mIHRoZSBEZWFkLCB0aGUgRnJpZ2lkIE91dHNraXJ0cywgYW5kIHRoZSBNZW1vcnkgb2YgdGhlIE9sZCBJcm9uIEtpbmcsIHRoZXkgZGVsaWJlcmF0ZWx5IHRocm93IG1hbnkgaGF6YXJkcyBhdCB5b3UgYXQgb25jZSBpbiBvcmRlciB0byBhcyBjbG9zZSBhcyBuZWNlc3NhcnkgcmVxdWlyZSBjbyBvcCBwbGF5LikKV2UgYWxzbyBsZWFybmVkIHRoYXQgU2NhbmRpbmF2aWFuIGFuZCBOb3J3ZWdpYW4gaG9zcGl0YWxzIGhhZCBsb3cgaW5mZWN0aW9uIHJhdGVzLiAKSWYgdGhleSB1c2VkIHRvIHNwZW5kaW5nIDExMCUgb2YgdGhlaXIgaW5jb21lIGN1dHRpbmcgYmFjayB0byAxMDAlIHdvdWxkIHJlcXVpcmUgYSBsaWZlc3R5bGUgY2hhbmdlLiAKSGUgd2FzIGEgbWFuIG9mIGZ1biwgYWR2ZW50dXJlLCBhbmQgc3Rvcmllcy4gCkluIG9yZGVyIHRvIGhhdmUgdGhlIGJlc3QgcG9zc2libGUgb25saW5lIHBva2VyIGV4cGVyaWVuY2UgYW5kIG5ldmVyIHdvcnJ5IGFib3V0IHBvc3NpYmxlIGZyYXVkcywgeW91IHNob3VsZCBrbm93IGhvdyB0byBmaW5kIGEgZ29vbiBvbmxpbmUgcG9rZXIgc2l0ZS4gQWRkaXRpb25hbGx5LCBwb3B1bGFyIHBva2VyIHNpdGVzIGhhdmUgY3Jvd2RlZCBwb2tlciByb29tcyB3aXRoIHNlcmlvdXMgcGxheWVycztHb29kIHBva2VyIHNpdGVzIGFsd2F5cyBoYXZlIGdlbmVyb3VzIGJvbnVzZXMgYW5kIHVuaXF1ZSBwcm9tb3Rpb25zLiBGaW5kIGEgc2l0ZSB0aGF0IHdlbGNvbWVzIG5ldyBtZW1iZXJzIHdpdGggZ29vZCB3ZWxjb21lIHBhY2thZ2UgYW5kIG9mZmVycyByZWxvYWQgYm9udXNlcztUaGUgc29mdHdhcmUgaXMgb25lIG9mIHRoZSBrZXkgdGhpbmdzIHRoYXQgbWFrZSBhIGdvb2QgcG9rZXIgc2l0ZS4gCk1ha2luZyBhIGh1Z2UgcHJvZml0IG9ubGluZSBpcyBhcHByb3hpbWF0ZWx5IG1hbmFnaW5nIHlvdXIgYmFua3JvbGwgYW5kIGhhdmluZyBwYXRpZW5jZSwgZXNwZWNpYWxseSBwbGF5aW5nIG9ubGluZS4gVGhlcmUncyBubyBiZXR0ZXIgZmVlbGluZyB0aGFuIHdpbm5pbmcgY2FzaCBnYW1lcyBvdmVyIGFuZCBvdmVyIGFnYWluLiAKSW5qdXJpZXMgaW4gc3BvcnRzIGFyZSByYXJlbHkgYSBsYXVnaGluZyBtYXR0ZXIgYW5kLCBsb29rOiB3ZSBoYXZlIHRvIGJlbGlldmUgdGhhdCB0aGUgcGFzdCBmZXcgeWVhcnMgaGF2ZW4ndCBiZWVuIGEgam95IHJpZGUgZm9yIEphY29ieSBFbGxzYnVyeSwgd2hvIGRpZG4ndCBwbGF5IGF0IGFsbCBpbiAyMDE4LCB3aG8gaGFzIHlldCB0byByZXBvcnQgdG8gU3RlaW5icmVubmVyIEZpZWxkIGFmdGVyIHJlaGFiYmluZyBoaXMgbGF0ZXN0IGlzc3VlIChwbGFudGFyIGZhc2NpaXRpcykgaW4gQXJpem9uYS4gCkdpdmVuIHRoZSBsZXZlcmFnZSB0aGF0IGNvbnRlbnQgb3duZXJzaGlwIGFmZm9yZHMgd2hpbGUgaGFzaGluZyBvdXQgZGlzdHJpYnV0aW9uIGRlYWxzIGluIG92ZXJzZWFzIG1hcmtldHMgYW5kIHdpdGggdGhlIHN0cmVhbWluZyBzZXJ2aWNlcywgb3V0cmlnaHQgY2FuY2VsbGF0aW9ucyBhcmUgZ29pbmcgdGhlIHdheSBvZiB0aGUgZGF5dGltZSBzb2FwIG9wZXJhLiBGb3IgYWxsIHRoYXQsIGV2ZW4gQ0JTIGlzIG5vdCBlbnRpcmVseSBpbW11bmUgZnJvbSB0aGUgY3JlZXBpbmcgcGFyYWx5c2lzIG9mIHRoZSBsZWdhY3kgYW5kIG5vdyBhIHdvcmQgZnJvbSBvdXIgc3BvbnNvcnMgbW9kZWwuIEFkdmVydGlzaW5nIGlzIGxhcmdlbHkgYSBmdW5jdGlvbiBvZiBjb25kaXRpb25pbmcsIGFuZCBtYW55IG9mIHRoZSBpbXBlcmF0aXZlcyB0aGF0IG1hZGUgdGhlIFRWIG1vZGVsIGVmZmVjdGl2ZSBoYXZlIGJlZW4gZWxpbWluYXRlZC4gCldoZW4geW91IHJlY2VpdmUgbWFzc2FnZSBvciBib2R5d29yaywgY2VsbCB3YXN0ZSAod2hpY2ggaXMgYWxyZWFkeSBpbiB5b3VyIHN5c3RlbSkgZ2V0cyByZWxlYXNlZCBhdCBhIG1vcmUgcmFwaWQgcmF0ZSB0aGFuIG5vcm1hbC4gWW91ciBib2R5IGhhcyB0byBkZWFsIHdpdGggdGhlIGxhcmdlciBhbW91bnQgb2YgbWF0ZXJpYWwgd2l0aGluIHRoZSBzYW1lIGFtb3VudCBvZiB0aW1lLCBhbmQgdGhhdCBpcyB3aGF0IGNhbiBjYXVzZSB5b3UgdG8gZmVlbCB0aXJlZCwgc2ljaywgb3Igc29yZSBhZnRlcndhcmQuIFByb3BlciBoeWRyYXRpb24gYWxsb3dzIHRoZSBib2R5IHRvIHByb2Nlc3MgdGhlIHdhc3RlIGVhc2llciBhbmQgZXhjcmV0ZSB0aGUgb3V0IHRocm91Z2ggdXJpbmUgb3Igc3dlYXQuLiAKUmVndWxhciBzYWx0ICh0YWJsZSBzYWx0KSBpcyBpb2RpemVkLCB3aGljaCBnaXZlcyBpdCBhIGRpZmZlcmVudCB0YXN0ZS4gCkRvZXMgaXQgY3VyZSBteSB0cmlnZW1pbmFsIG5ldXJhbGdpYT8gTm9wZSwgYnV0IGl0IGtlZXBzIHRoZSBwYWluIGRvd24gZW5vdWdoIGZvciBtZSB0byBoYXZlIGJldHRlciBxdWFsaXR5IG9mIGxpZmUuIApPbmNlIHlvdSBmaW5kIG91dCB0aGlzIHlvdSB3YW50IHRvIGtub3cgd2hpY2ggb2YgdGhlIHBva2VyIHJvb21zIGhhdmUgdGhlIG1vc3QgYWN0aW9uIGF0IHRoZSBzdGFrZXMgeW91IHBsYXkuIApUaGUgZm91cnRoIG9ubGluZSBwb2tlciBnYW1lIGluIFBhY2lmaWMgUG9rZXIgaXMgVGV4YXMgSG9sZCBFbS4gSXQgaXMgcGxheWVkIHdpdGggdGhlIHN0YW5kYXJkIDUyIGRlY2sgY2FyZCBhbmQgMiB1cCB0byBhIG1heGltdW0gb2YgMTEgcGxheWVycyBjYW4gcGxheSBpdC4gSXQgaXMgb25lIG9mIHRoZSBtb3N0IHBvcHVsYXIgcG9rZXIgZ2FtZXMgaW4gdGhlIHdvcmxkIGFuZCBpcyB1c3VhbGx5IHBvcnRyYXllZCBpbiB0ZWxldmlzaW9uIHNob3dzIGFuZCBtb3ZpZXMuIFdvcmxkIFBva2VyIFRvdXIgYW5kIFdvcmxkIFNlcmllcyBQb2tlciBhcmUgc29tZSBvZiB0aGUgdG91cm5hbWVudHMgZGV2b3RlZCBmb3IgaXQuClRoZXkgYXJlIG1vcmUgYWNjdXJhdGUgdGhhdCBvbmUgd291bGQgdGhpbmssIGVhc3kgdG8gZml4IGluIHRoZSBmaWVsZCwgZWFzaWVyIHRvIHN1cHByZXNzIHdpdGggaXRlbXMgc2ltcGx5IGZvdW5kIGFyb3VuZCB1cywgdGhleSBhcmUgb2Z0ZW4gbm90IGFzIGxvdWQgYXMgYSByaWZsZSwgYW5kIGNlcnRhaW5seSBxdWlldGVyIHRoYW4gYSBzaG90Z3VuLCB0aGV5IGRvIG5vdCBoYXZlIGEgc2hvcnQgcmFuZ2UsIHRoZXkgYXJlIGhvbmVzdGx5IGhhcmRlciB0byBmdW1ibGUgb3IgZHJvcCwgbGVzcyByZWNvaWwgbWVhbnMgZmFzdGVyIHJlZmlyZSB3aGlsZSByZXRhaW5pbmcgYSBnZW5lcmFsIGFtbW91bnQgb2YgYWNjdXJhY3ksIGFuZCA5bW0gKHRoZSBtb3N0IGNvbW1vbiBwaXN0b2wgcm91bmQpIGNhbiBwZW5ldHJhdGUgbW9zdCBzdXJmYWNlcyBhdCBjbG9zZSByYW5nZS4gCk5pc2hhbnQgUmFvIHdpdGggTXIuIApQb3N0ZWQgYnkgT3JhbmdlRGlzawpUaGUgZW50ZXJwcmlzZSB3b3JsZCBpcyB3aWRlIG9wZW4sIHJpY2ggd2l0aCBhcHBsaWNhdGlvbnMgYW5kIHNvIGZvcnRoLi4gCkNvbmFpciBncm9vbWluZyBraXQgaXMgZGVzaWduZWQgdG8gcHJvdmlkZSB0aGUgdWx0aW1hdGUgaW4gd29tZW4ncwpIZW54dWkxMlRFQU0gOUNBVCBIMkgKQmVjYXVzZSBvZiBpdHMgbGltaXRlZCBoaXN0b3J5LCB3ZSBjYW50IGVyYSBhZGp1c3QgcGFzdCBpdC4gQnV0IGluIG15IGFuYWx5c2lzIHBvc3QgSSBkaWQgcG9pbnQgb3V0IHRoYXQgSmFja2llIFNtaXRoIDE5ODcgc2Vhc29uIGlzIGluIHRoZSBhcmd1bWVudCBmb3IgR09BVCBmb3IgZXhhY3RseSB0aGF0IHJlYXNvbi4gClRoZXkgc3VwcG9zZWQgdG8gZ28gYWZ0ZXIgY3JpbWluYWwgb3IgdGVycm9yaXN0IGVsZW1lbnRzLCB5ZXQgdGhleSByb3V0aW5lbHkgZ28gYWZ0ZXIgbm9udmlvbGVudCwgbm9uY3JpbWluYWwgbWlncmFudHMuIApPbiB0aGUgQ29uIHNpZGUsIG1vc3Qgd2Vic2l0ZXMgZG8gbm90IGRlbGl2ZXIgaW4gcHJvcGVyIHRpbWUuIE9yIGF0IGFsbCBpbiBzb21lIGNhc2VzLiBPZiBjb3Vyc2UgaWYgeW91IGhhdmUgYSB2ZXJ5ICJyaWNoIiBmcmllbmQgdGhhdCBoYXMgYSBsb3Qgb2YgcG9rZXIgY2hpcHMsIGFuZCBwbGF5cyBvbiBoaWdoIHN0YWtlIHRhYmxlcyB5b3UgY2FuIGFsc28gZ2V0IHBva2VyIGNoaXBzIGZyb20gaGltIC4gCklmIHlvdSBsZXQgZXh0ZXJuYWwgZmFjdG9ycyBnZXQgdGhlIGJldHRlciBvZiB5b3UsIHlvdSBkZWFkIG1lYXQuIEJ1dCBpZiB5b3Ugc3VjY2VlZCBpbiByZWxheGluZyBhbmQgZm9jdXNpbmcgY29tcGxldGVseSBvbiB5b3VyIGdhbWUsIHlvdSBtYXkganVzdCBoYXZlIGdvdHRlbiByaWQgb2YgeW91ciBuZXJ2ZXMgZm9yIHRoZSBmaW5hbCB0aW1lLi4gCkZyb20gdGhlcmUsIEkgbW92ZSBvbiB0byB5b3VyIHRlbXBsZXMsIHN0YXJ0aW5nIHdpdGggdGhlIGhlZWxzIG9mIG15IGhhbmRzIGFuZCB0aGVuIHN3aXRjaGluZyB0byBteSB0aHVtYnMuLiAKQW5kIHRoZW4gdGhlIG1vbmV5IGp1c3Qga2VwdCBnZXR0aW5nIGJldHRlci4gSXQgZGlkLiBSZXBvcnRlcjogRm9yIE1vbGx5IGJsb29tIHBlcmZlY3RpbmcgdGhlIGdhbWUgbWVhbnQgc3R1ZHlpbmcgdGhlaXIgcG9rZXIgcGVyc29uYWxpdGllcy4gSSdsbCBjYWxsIHRoZSB0d28gZ3JhbmQgYW5kIGdhbWJsZS4gUmVwb3J0ZXI6IE1hdHQgRGFtb24gc2hlIHNheXMgd2FzIG5vdGhpbmcgbGlrZSB0aGUgcG9rZXIgYWRkaWN0IHRoYXQgZ2FtYmxlZCBldmVyeXRoaW5nIGluIHRoZSBmaWxtICJSb3VuZGVycy4iIEhlIHdhcyBsb3ZlbHkuIApZb3UgZG9uJ3Qga25vdyB0aGUgbGFuZ3VhZ2UgYW5kIHlvdSBhcmUgYXNraW5nIGFyb3VuZCBmb3IgdGhlIG5lYXJlc3Qgd2FzaHJvb20uIApHaXZlIG1lIGEgc2Vjb25kLiIgYW5kIG15IGRhdWdodGVyIHdpbGwgc2F5LCAiTW9tbXksIGlzIERhZCB0aGlua2luZyBhYm91dCB0aGF0IHN0dXBpZCBKb2tlciBndXkgYWdhaW4/IiBhbmQgc2hlIHdpbGwgc2F5LCAiWWVzLCBkZWFyLiAKRHIuLiAKR3V5IGNlbGVicmF0ZXMgYSBwb2tlciB0b3VybmFtZW50IHdpbiB3b3J0aCBhIG1pbGxpb24gZG9sbGFycyBiZWZvcmUgdGhlIGhhbmQgaXMgb3ZlcgpBZnJpY2FuIFNoZWEgQnV0dGVyLCBhIHVuY29tbW9uIHRoZXJhcGV1dGljIGFuZCBhbnRpIGdldHRpbmcgb2xkZXIgcHJvZHVjdCBpbmZ1c2VkIGluIG51dHJpdGlvbmFsIHZpdGFtaW5zLiAKSXQgd2FzIGNlcnRhaW5seSBteSBzaG91dCBhZnRlciB0aGF0LiAKU2Vjb25kaW5nIEJvZHkgUG9ldHMuIEkgaGFkIGEgZmV3IG9mIHRoZWlyIHRoZXJhcGlzdHMgd29yayBtYWdpYyBvbiBtZSBhZnRlciB2YXJpb3VzIGluanVyaWVzIG9yIGp1c3QgYmVpbmcgc29yZSBmcm9tIGEgZGVzayBqb2IgKEVsbGVuLCBBbXksIERlcmVrLCBDcnlzdGFsKS4gVGhlIG93bmVyLCBFbGxlbiwgcmVhbGx5IGZvY3VzZXMgb24gYnJpbmdpbmcgaW4gUk1UcyB0aGF0IHByb3ZpZGUgYSBjb25zaXN0ZW50IGxldmVsIG9mIHNlcnZpY2UsIGFuZCBmcm9tIG15IGV4cGVyaWVuY2UsIHNoZSBkb25lIGFuIGV4Y2VwdGlvbmFsIGpvYiEgVGhleSBoYXBweSB0byBkbyBhIG1vcmUgInR5cGljYWwiIG1hc3NhZ2UsIGJ1dCB3aWxsIGFsc28gaW5jb3Jwb3JhdGUgZWxlbWVudHMgb2YgcGh5c2lvdGhlcmFweSAoc3VjaCBhcyBteW9mYXNjaWFsIHJlbGVhc2UsIHJlY29tbWVuZGluZyBzdHJldGNoZXMgb3Igc3RyZW5ndGggZXhlcmNpc2VzLCBldGMuKSBpZiBuZWNlc3NhcnkvcmVxdWVzdGVkLiAxMDAlIHdvcnRoIGl0IQoiV2Ugd2VyZSBsb29raW5nIHRvIGNyZWF0ZSBhIGxhcmdlLCBvdXQgb2YgdGhlIGJveCBwcm9tb3Rpb24gdGhhdCB3YXMgdW5pcXVlIG5vdCBvbmx5IHRvIFR1bmljYSwgYnV0IGFsc28gdG8gdGhlIGdhbWluZyBpbmR1c3RyeSBhcyBhIHdob2xlLCIgc2FpZCBKZXNzZSBLZWF2ZW55LCBDYWVzYXJzIHJlZ2lvbmFsIHZpY2UgcHJlc2lkZW50IG9mIG1hcmtldGluZyBmb3IgdGhlIE1pZCBTb3V0aCByZWdpb24uICJXZSd2ZSBiZWVuIHJlYWxseSBwbGVhc2VkIHdpdGggdGhlIHJlc3BvbnNlIGl0IGhhcyBnb3R0ZW4uIFRoZXJlIGhhdmVuJ3QgYmVlbiBtYW55IG5ldyBhbmQgZXhjaXRpbmcgdGhpbmdzIGluIFR1bmljYSByZWNlbnRseSwgc28gd2Ugd2FudGVkIHRvIGJlIHRoZSBtYXJrZXQgbGVhZGVyIGluIHRoYXQgcmVzcGVjdC4iCkhlIHdlbnQgYmlnIHdpdGggaGlzIHNjYW1zLCBhbmQgKGZvciBhIHdoaWxlKSBsaXZlZCBiaWcuIApZb3Ugc2F2ZSBvbiBmb29kIGJpbGxzIGFuZCBGaWRvIHdpbGwgYmUgaW4gaGVhdmVuLiAKVGhlIEFwcGxlIFBlbmNpbCBpcyBtb3N0bHkgYmVpbmcgcHVzaGVkIGFzIGEgdG9vbCBmb3IgYXJ0aXN0cywgc2tldGNoZXJzLCBhbmQgcGhvdG9ncmFwaGVycy4gVGhlIHN0eWx1cyBpcyBwcmVzc3VyZSBzZW5zaXRpdmUsIHNvIHlvdSBjYW4gcHJlc3MgZG93biBoYXJkZXIgb24gdGhlIHNjcmVlbiB0byBtYWtlIGNlcnRhaW4gd29yZHMgYXBwZWFyIG1vcmUgYm9sZCBvciB0byBzaW1wbHkgbWFrZSB0aGUgY29sb3IgYXBwZWFyIGRhcmtlci4gClNoZSB3YXMgc3VwZXIgZ2x1ZWQgdG8gbWUgYW5kIHdoZW4gSSB3YXMgbGF5aW5nIGRvd24sIHNoZSB3YXMgY3VybGVkIGFyb3VuZCBteSBzdG9tYWNoLiAKTm8gdHdvIGNyZWF0aW9ucyBhcmUgYWxpa2U6IHRoZXkgbWlnaHQgaW5jb3Jwb3JhdGUgYSBmYW1pbHkgY3Jlc3QsIHRva2VucyBvZiBtZW1vcmFiaWxpYSBvciBoYXZldmVuZWVycyBhbmQgbGluaW5ncyB0byBtYXRjaCBhIHlhY2h0LCBjYXIgb3IgaW50ZXJpb3IgZGVzaWduIHNjaGVtZS4gVXNpbmcgd29vZHMgcmFuZ2luZyBmcm9tIGVib255IHRvIGJ1cnIgd2FsbnV0LCBlYWNoIGlzIG1hZGUgYnkgYSB0ZWFtIG9mIGFydGlzYW5zIGRyYXduIHRvZ2V0aGVyIGZyb21hY3Jvc3MgdGhlIEJyaXRpc2ggSXNsZXMuIApXaGljaCBjZXJ0YWlubHkgY291bGQgZXhwbGFpbiB3aHkgSGl6em9uZXIncyBiZWVuIHNvIHRlc3R5IGxhdGVseTsgVVMgQXR0b3JuZXkgUHJlZXQgQmhhcmFyYSBqdXN0IGRyb3BwZWQgdGhlIGhhbW1lciBvbiB0aGUgQ3VvbW8gYWRtaW5pc3RyYXRpb24sIGFuZCBtYXliZSB0aGUgbWF5b3IgZmlndXJlcyBoZSdzIG5leHQuIEFuZCBmb3Igc3VyZSBpdCBjb3VsZCBhY2NvdW50IGZvciBoaXMgZXhhc3BlcmF0aW9uIHdpdGggVGhlIFBvc3QgICB3aGljaCByZWd1bGFybHkgaGF1bHMgb3V0IHRoZSBiaWcgdHlwZSB0byByZXBvcnQgb24gaGlzIGVuZGxlc3MgYWR2ZW50dXJlcyB3aXRoIEJoYXJhcmEsIHN0YXRlIGludmVzdGlnYXRvcnMgYW5kIHRoZSBNYW5oYXR0YW4gZGlzdHJpY3QgYXR0b3JuZXkuIFBsdXMgYnVtcyBpbiB0aGUgc3RyZWV0cywgY2hhb3MgaW4gdGhlIHNjaG9vbHMgYW5kIHJpcCBvZmZzIG9mIE5ldyBZb3JrJ3Mgc29yZWx5IHByZXNzZWQgdGF4cGF5ZXJzLgpXZSBhcmUgZ3JhdGVmdWwgZm9yIHRoZSBzdXBwb3J0IHdlIGhhdmUgcmVjZWl2ZWQuIApTbyB0aGlzIG1vcm5pbmcgSSBsYXppbmcgb24gdGhlIGNvdWNoIHdoZW4gYSBmYXJ0IGlzIGNvbWluZyBvbi4gSSBkb24ga25vdyBpZiB5b3UgcmVhZCBhbnl0aGluZyBhYm91dCBBbGxpIGJ1dCBpZiB5b3UgZWF0IHRvbyBtdWNoIGZhdCB5b3VyIGJvd2VscyBjYW4gYmUuIE9pbHkuIApXcml0aW5nIG9uIFR3aXR0ZXIsIE1yIENhcnN3ZWxsIHNhaWQ6ICJTbWFsbCBjcm93ZCBzaG91dGluZyBvYWZpc2ggY2hhbnRzIGF0IFRWIGNyZXcgb3V0c2lkZSBQYXJsaWFtZW50LgpPbiBUdWVzZGF5IG5laWdoYm91cnMgc2FpZCB0aGV5IHdlcmUgYm90aCBzaG9ja2VkIGFuZCByZWxpZXZlZCBieSB0aGUgYXJyZXN0LgpTdGF0ZSBhZ2VudHMgaGF2ZSByYWlkZWQgdGhlIERhbGxhcyBoZWFkcXVhcnRlcnMgb2YgYWR1bHQgY2xhc3NpZmllZCBhZCBwb3J0YWwgQmFja3BhZ2UgYW5kIGFycmVzdGVkIENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIEZlcnJlci4gClRoZSBFTlMgaXMgYSBwYXJ0IG9mIHRoZSBhdXRvbm9taWMgbmVydm91cyBzeXN0ZW0gdGhhdCBpcyBob3VzZWQgaW4gdGhlIGd1dCBhbmQgaXMgcmVzcG9uc2libGUgZm9yIGd1dCBtb3RpbGl0eSBhbmQgb3RoZXIgbm9ybWFsIGd1dCBmdW5jdGlvbnMuMjggSXQgaXMgYSB2YXN0IG5ldHdvcmsgb2YgbmV1cm9ucyB0aGF0IGFyZSB0aGUgZmlyc3QgcG9pbnRzIG9mIGNvbnRhY3QgZm9yIG1pY3JvYmlvdGEgaW4gdGhlIGludGVzdGluYWwgbHVtZW4gYW5kIGFyZSBhbiBpbXBvcnRhbnQgY29tcG9uZW50IG9mIHRoZSBicmFpbiBndXQgYXhpcy5PbmUgb2YgdGhlIG1vc3QgY29tbW9uIGNsaW5pY2FsIGZlYXR1cmVzIG9mIGRlcHJlc3Npb24gaXMgZHlzcmVndWxhdGlvbiBvZiB0aGUgc3RyZXNzIHJlc3BvbnNlIHN5c3RlbSwgdGhlIGh5cG90aGFsYW1pYyBwaXR1aXRhcnkgYWRyZW5hbCAoSFBBKSBheGlzLjI5IEFzIHdhcyBwcmV2aW91c2x5IG5vdGVkLCBpbiByZXNwb25zZSB0byBwc3ljaG9sb2dpY2FsLCBwaHlzaW9sb2dpY2FsLCBhbmQgcGF0aG9sb2dpY2FsIGNoYWxsZW5nZXMsIG5ldXJvbnMgaW4gdGhlIGh5cG90aGFsYW11cyBhcmUgYWN0aXZhdGVkIGFuZCBzaWduYWwgdGhlIHBpdHVpdGFyeSB0byByZWxlYXNlIGFkcmVub2NvcnRpY290cm9waGljIGhvcm1vbmUgaW50byB0aGUgYmxvb2RzdHJlYW0sIHdoaWNoIGluIHR1cm4gYWN0aXZhdGVzIHRoZSBhZHJlbmFsIGdsYW5kIHRvIHJlbGVhc2UgdGhlIHN0cmVzcyBob3Jtb25lIGNvcnRpc29sLiAKVGhlIERQIGNhbiBwdXQgb24gYSBncmVhdCBldmVudCBmb3IgeW91ciBiaXJ0aGRheSwgZ3JhZHVhdGlvbiwgY29tcGFueSBwYXJ0eSwgb3IgYW55IGV2ZW50IHlvdSB3YW50IHlvdXIgZ3Vlc3RzIHRvIGhhdmUgYSBtZW1vcmFibGUgdGltZSEgV2Ugc3BlY2lhbGl6ZSBpbiBydW5uaW5nIExhcyBWZWdhcyB0aGVtZWQgcGFydGllcyBhbmQgb2ZmZXIgYmxhY2tqYWNrLCBjcmFwcywgcm91bGV0dGUsIHBva2VyLCBrZW5vLCBhbmQgc2xvdHMgdG8gcHJvdmlkZSBhcyBjbG9zZSB0byBwb3NzaWJsZSBhIFZlZ2FzIGxpa2UgZ2FtaW5nIGV4cGVyaWVuY2UuIApUb2RkMnBvaW50MCAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMjYgZGF5cyBhZ28KV2UsIGFzIGNpdGl6ZW5zLCB3ZXJlIHNvbGQgYSBiYWQgYmlsbCBvZiBnb29kcy4gVHJ1bXAgY2FtcGFpZ25lZCBvbiBkcmFpbmluZyB0aGUgc3dhbXAsIHlldCBoZSBmaWxsZWQgaXQgd2l0aCBwZW9wbGUgb2YgcXVlc3Rpb25hYmxlIGp1ZGdlbWVudC4gClRoZXkgbG9vayBsaWtlIGlycml0YXRpb24gYW5kIHRoZXkga2luZGEgaGF2ZSBwdXMgaW4gdGhlbSBidXQgdGhleSBuZXZlciBmbGFyZSB1cCBtb3JlIHRoYW4gdGhlc2Ugc21hbGwgcHVtcHMuIFNvbWUgb2YgdGhlbSBjb21lIHRvIGEgc21hbGwgd2hpdGVoZWFkLCBidXQgc29tZSBqdXN0IHN0YXkgc21hbGwgYW5kIHJlZC4gCldoYXQgYSBzaGFtZSB0aGF0IGlzLiBPY3RvcGF0aCBpcyBlYXNpbHkgb25lIG9mIG15IGZhdm91cml0ZSBnYW1lcyB0byBjb21lIG91dCBmb3IgdGhlIFN3aXRjaC4gQSBzZXF1ZWwvcHJlcXVlbCB3b3VsZCBvZiBiZWVuIGEgZGF5IG9uZSBwdXJjaGFzZSBmb3IgbWUuIApXZSBhcmUgaW5kb2N0cmluYXRlZCB3aXRoIHRoZSBpZGVhIG9mIGdvZCBhbmQgcmVsaWdpb24uIEluZG9jdHJpbmF0aW9uLCBhcyB3ZSBhcmUgdXNpbmcgaXQgaGVyZSBpcyBha2luIHRvIGJyYWlud2FzaGluZy4KSXQgaXNuIGJ1bGxzaGl0IGl0cyB0b3RhbGx5IGZhaXIsIHlvdSBkaXNhZ3JlZSB3aXRoIHlvdXR1YmUgd2hlbiB5b3UgY291bGQgYmUgbWFraW5nIGZyZWUgcmV2ZW51ZSBhbnl3YXkgd2l0aCBZb3V0dWJlIFJlZD8gVGhlbiBnbyB0byBmdWNraW5nIFZpbWVvIG9yIHNvbWUgc2hpdC4gCldhcyBzZXQgdG8gaW5jcmVhc2UgdGFyaWZmcyBmcm9tIDEwJSB0byAyNSUgb24gJDIwMCBiaWxsaW9uIHdvcnRoIG9mIGltcG9ydHMgZnJvbSBDaGluYSBlZmZlY3RpdmUgRnJpZGF5LCBNYXJjaCAxLCB3aXRoIHRoZSBleHBpcmF0aW9uIG9mIGEgOTAgZGF5IHN1c3BlbnNpb24gb2YgdGFyaWZmIGluY3JlYXNlcyB0byBhbGxvdyBmb3IgdGFsa3MgYmV0d2VlbiB0aGUgdHdvIGNvdW50cmllcy4gCkJvdGggdGltZXMgd2VyZSBwcmUgZW1wbG95bWVudCBVQSB0ZXN0cyBmb3IgdHdvIGRpZmZlcmVudCBjb21wYW5pZXMgdXNpbmcgdHdvIGRpZmZlcmVudCAoYnV0IHNpbWlsYXIgdGVjaG5pcXVlKSBsYWJzLiAKQXMgZm9yIHNldHRpbmcgdXAgeW91ciBtYWNoaW5lLCBJIHByZWZlcnJlZCBsb29raW5nIGF0IHRoZSBtYW51YWwsIEkganVzdCB0aGluayBpdCBlYXNpZXIgYW5kIG1vcmUgZGV0YWlsZWQgdGhhbiBmb2xsb3dpbmcgdmlkZW9zLgpBbHNvIHdhbnQgdG8gc2F5IHRoaXMgICB0aGFuayB5b3UgZm9yIHdyaXRpbmcgdGhpcyByZXBvcnQuIFBsZWFzZSBrbm93IHRoYXQgYmVpbmcgb3BlbiBhYm91dCBhbnhpZXR5IGlzIGdvaW5nIHRvIGhlbHAgc29tZW9uZSBlbHNlIHJlYWRpbmcgdGhpcyB3aG8gaXMgc3RydWdnbGluZyB3aXRoIHRoZSBzYW1lIHRoaW5nLiBJIHJlYWxseSBnbGFkIHRvIGtub3cgeW91IGFuZCBJIGNhbiB3YWl0IHRvIHNlZSB3aGF0IHlvdSBkbyBuZXh0IHRpbWUgYXJvdW5kLgpBbHNvIHRoZXJlIGFyZSBsYXdzIGFzc29jaWF0ZWQgd2l0aCByZWNvcmRpbmcgcHJpdmF0ZSBjb252ZXJzYXRpb25zLgpZZXMsIDIwIGNoaWxkcmVuLiAKT05FIE1BTiwgT05FIE1PVE9SQklLRSwgT05FIE1JU1NJT046IFRPIEdFVCBBIFRBTiBBVCBUSEUgQVJDVElDIENJUkNMRQpCdXQgd2hlbiBKYW1lcyBCeXJkLCBKci4gCkFLLCBBUSBib3RoIGhhbmRzIHNob3VsZCBiZSBhIGZvbGQgdG8gYSAzYmV0IGFnYWluc3QgeW91LiBXaHk/ICAgV2VsbCwgaWYgeW91IDJiZXQgYW5kIGdldCAzYmV0IHlvdSBoYXZlIHR3byBjaG9pY2VzOiAoMSkgY2FsbCBhbmQgeW91IGJlIGluIGEgcG9zaXRpb24gb2Ygd2Vha25lc3Mgb3IgKDIpIG1ha2UgaXQgNGJldCBhbmQgaW4gdGhhdCBjYXNlIHlvdSBjYW5ub3QgZ2V0IGF3YXkgaWYgb3Bwb25lbnQgNWJldHMgeW91LiBTbywgYXMgeW91IHNlZSwgeW91IGdvdCB0byBnaXZlIHVwIHlvdXIgMmJldCBhbmQgbW92ZSBvbi4gVGhlIG1vc3QgeW91IGxvc2Ugd2l0aCBhIGZvbGQgdG8gYSAzYmV0IGlzIGxldCBzYXkgNCBvciA1YmIuIElmIHlvdSBnbyBiZXlvbmQgM2JldCB5b3UgYXJlIGdldHRpbmcgeW91cnNlbGYgYWdhaW5zdCBBQSBvciBLSyBtb3N0IG9mIHRoZSB0aW1lLiBJZiB5b3UgZm9sZCB5b3VyIEFLIHRvIGEgM2JldCBqdXN0IGEgdmVyeSBmZXcgdGltZXMgeW91IGJlIGFnYWluc3QgUVEgb3IgYW5vdGhlciBBSyBhbmQgZXZlbiBpbiB0aGF0IGNhc2UgeW91IG9ubHkgbG9zZSA0IDViYiBhcyBzdGF0ZWQgYWJvdmUuIEV2ZW4gaWYgb3Bwb25lbnQgaGFzIGdvdCBRUSssIEFLIGFsbCB0aGUgdGltZSB5b3UgYXJlIHdheSBiZWhpbmQgbGlrZSA2MiUgdnMuIDM4JSBhbmQgZXZlbiBpZiBoZSBnb3QgSkorLCBBSyB5b3UgYXJlIDYwJSB2cy4gNDAlIGRvZwooRm9yIGluc3RhbmNlIGEgNTAsMDAwIHBvaW50cyBjaGlwIGlzIE5PVCB3b3J0aCAkNTAsMDAwKSAoRnVsbCBBbnN3ZXIpLiAKVG91dCBkJ2Fib3JkLCBqZSBtZSBwbGFjZSBlbiBtYXRpcmUgcG5hbGUgcG91ciBwb3V2b2lyIGR0ZXJtaW5lciBsYSBtYWpvcml0IHNleHVlbGxlIChlbiBsYSBkdGVybWluYW50IHZpcyAgdmlzIGRlIGxhIGRmaW5pdGlvbiBkZXMgaW5jcmltaW5hdGlvbnMgZCdhZ3Jlc3Npb25zIHNleHVlbGxlcykuIERlIHZvdHJlIGN0LCB2b3VzIHZvdXMgcGxhY2V6IHN1ciBsZSB0ZXJyYWluIGR1IGRyb2l0IGNpdmlsLgpXZWxsLCBpdCBpcyBhbmQgaXQgaXMgbm90LiAKMiBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpCdXQsIHRoZXJlIGFyZSBjZXJ0YWlubHkgb3B0aW9ucyBmb3IgaW1wcm92ZW1lbnRzIGluIHRoZSBnYW1lIG9mIHBva2VyLiAKIlRoaXMgdHlwZSBvZiBhY3Rpdml0eSB3aXRoIHlvdW5nIG1hbGVzIGhhcyB0aGUgcG90ZW50aWFsIHRvIGNvcnJ1cHQgdGhlbSwiIHRoZSByZXBvcnQgYWRkZWQuCkl0IGFuIGVhc3kgdGVybS5Ob1NvdWwgZ3JvdXAgc2VlbSBwZXJmZWN0bHkgZmluZSB0byBtZSB0aG91Z2gsIHRiaC4gCk51bWVyb3VzIG5pZWNlcywgbmVwaGV3cywgZ3JlYXQgbmllY2VzIGFuZCBncmVhdCBuZXBoZXdzIGFsc28gc3Vydml2ZS4gSGUgd2FzIHByZWRlY2Vhc2VkIGJ5IGhpcyBzaXN0ZXIgRWxpemFiZXRoIEtlcmJ5IGFuZCBieSBoaXMgYnJvdGhlciBpbiBsYXcgUm9zcyBLZXJieS4gCkkgaG9sZSBoYXJkZWRseSBhZ3JlZSwgYnV0IGFsbG93IG1lIHRvIHBsYXkgZG91YmxlcyBhZHZvY2F0ZSBoZXJlIGZvciBhIG1vbWVudC4gRm9yIGFsbCBpbnRlbnNpdmUgcHVycG9zZXMgSSB0aGluayB5b3UgYXJlIHdyb25nLiBJbiBhbiBhZ2Ugd2hlcmUgZmFsc2UgbW9yYWxzIGFyZSBhIGRpYW1vbmQgZG96ZW4sIHRydWUgdmlydHVlcyBhcmUgYSBibGVzc2luZyBpbiB0aGUgc2tpZXMuIFdlIG9mdGVuIHB1dCBvdXIgZmFsc2UgbW9yYWxpdHkgb24gYSBwZXRhbCBzdG9vbCBsaWtlIGEgYnVuY2ggb2YgcHJlIE1hZG9ubmFzLCBidXQgeW91IGFsbCBzZWVtIHRvIGJlIHRha2luZyBzb21ldGhpbmcgdmVyeSB2YWx1YWJsZSBmb3IgZ3Jhbml0ZS4gCk9yIGp1c3QgcGxheSBQVCBhZ2FpbiBhbmQgc2VlIGFsbCB0aGUgY29ubmVjdGlvbnMgdG8gRFMsIHJpZ2h0IGRvd24gdG8gdGhlIGhhbmRzIGFuZCBmZXR1cy4gSXQgcG9zc2libGUsIGp1c3Qgbm90IGEgcHJvdmVuIGZhY3Qgb3IgZmFsc2Vob29kIHlldC4KQSBidWRkeSBvZiBtaW5lIGFza2VkIG1lIHRoaXMgbW9ybmluZyBob3cgdG8gZG8gZGViYXRjaGluZyB3aXRoIHRoZSBTUUwgQWRhcHRlci4gV2hpbGUgSSBmdWxseSB1bmRlcnN0YW5kIFhNTCBhbmQgZmxhdCBmaWxlIGRlYmF0Y2hpbmcsIHRoZSBTUUwgQWRhcHRlciB1c2VzIGEgZ2VuZXJhdGVkIFhTRCBzY2hlbWEsIGFuZCBJIHdhc24gMTEwJSBzdXJlIG9mIHRoZSBiZXN0IHdheSB0byBoYW5kbGUgdGhhdC4gU28sIGFzIHVzdWFsLCBJIGZpZ3VyZWQgSSBidWlsZCBpdCBhbmQgc2VlIHdoYXQgaGFwcGVuZWQuClNvbWV0aW1lcyBJIGhhZCB0byByZXdpbmQganVzdCB0byB3YXRjaCBhIC41IHNlY29uZCBjbGlwIG9mIGhlciBiZWNhdXNlIEkganVzdCBzYXQgdGhlcmUgbGlrZSAiaG9seSBjcmFwIGhvdyBjYW4gc29tZW9uZSBiZSB0aGF0IGF0dHJhY3RpdmU/IiBTaGUgYWxzbyBmdW5ueSBhbmQgaGFzIGhhZCBtb3JlIG9mIGhlciBwZXJzb25hbGl0eSBzaG93biBjb21wYXJlZCB0byBDYWVseW5uIGFuZCBIYW5uYWggRy4gSSBpbWFnaW5lIHNvbWUgb2YgdGhlIGd1eXMgd2hvIGFwcGxpZWQgZm9yIGZhbWUgbWlnaHQgaGF2ZSBwcmVmZXJyZWQgdGhlIGxhdHRlciB0d28sIGJ1dCBJIGZlZWwgbGlrZSBIYW5uYWggQiBpcyBnb2luZyB0byBtYWtlIGEgbG90IG9mIHRoZSBtZW4gZ2VudWluZWx5IGZhbGwgZm9yIGhlciBiZWNhdXNlIHNoZSBzbyBwZXJzb25hYmxlLmthcmlzc2F0YXJ5biAgOTUgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSSBoaWdobHkgZG91YnQgdGhhdCBDYXNzaWUncyBwYXJlbnRzIGV2ZW4gaGFkIHRoZSBleHBlcmllbmNlIHRoYXQgaGVyIGRhZCBkZXNjcmliZWQuIApUaGlzIGlzbiBzdXJwcmlzaW5nIGJlY2F1c2UgdGhpcyBpcyBub3QgdGhlIGZpcnN0IHRpbWUgdGhleSBhcmUgZG9pbmcgaXQgKFVidW50dSBvbmUgc2VydmVyIHNpZGUgY29kZSBpcyBzdGlsbCBjbG9zZWQgc291cmNlKSwgYW5kIHRoZXkgYXBwZWFyIHRvIHdhbnQgdG8gaGF2ZSBhICJhcHAgc3RvcmUiIGJ1c2luZXNzIG1vZGVsLCBhcyB5b3UgY2FuIHNlZSBpbiB0aGVpciBkZXZlbG9wZXIgYWdyZWVtZW50czouIApTZXJ2aWNlIGFuZCBidXJpYWwgdG8gdGFrZSBwbGFjZSBpbiBNaWNoaWdhbiBvbiBTYXR1cmRheSBEZWNlbWJlciAyOXRoLCAyMDE4LjAuIApNb3N0IGltcG9ydGFudGx5LCBMdW5hIHdhcyBzdXBlciBtYWdpY2FsLiBVbmxpa2UgbW9zdCBvZiB0aGUgZm9sa3MgaW4gdGhlIHdpemFyZGluZyB3b3JsZCB3aG8gdG8gYW4gZXh0ZW50IHRvb2sgbWFnaWMgZm9yIGdyYW50ZWQgYW5kIGhhZCBpZGVhcyBhYm91dCB3aGF0IHdhcyBwb3NzaWJsZSBhbmQgd2hhdCB3YXNudCBiYXNlZCBvbiB3aGF0IHdhcyBjb21tb24gcGxhY2UuIEx1bmEgaGFzIHRoZSBzYW1lIGFwcHJlY2lhdGlvbiBvZiB0aGUgd29uZGVybWVudCBvZiBtYWdpYyBhcyBIYXJyeS4gU2hlIHdhcyB0b3RhbGx5IG9wZW4gbWluZGVkIHRvIHdoYXQgY291bGQgYmUgcG9zc2libGUuCkkndmUgZ290dGVuIGEgZGV2YSBjdXQgYW5kIHRoZXkgcHV0IG1vdXNzZSBpbi4gSXQgbG9va2VkIGdvb2QgYXQgdGhlIHNhbG9uLiAKMi4gR28gdG8gU3VwZXJQZXRzLiAzLiAKQXN0b25pc2hpbmcgdGhhdCB5b3UgY2xhaW0gT2JhbWEsIEJ1c2gsIGFuZCBDbGludG9uIHdlcmUgdHJhbnNwYXJlbnQgUHJlc2lkZW50czsgSSB3YXMgcG9saXRpY2FsbHkgYWN0aXZlIGR1cmluZyB0aGUgT2JhbWEgYWRtaW4gYW5kIHdhdGNoZWQgYXMgaGUgaW5mcmluZ2VkIGV2ZXJ5IEFtZXJpY2FucyByaWdodCB0byBwcml2YWN5IHRocm91Z2ggdGhlIHN1cnZlaWxsYW5jZSBvdmVycmVhY2ggb2YgdGhlIE5TQSwgYW5kIHdhdGNoZWQgYXMgaGUgbGllZCBhYm91dCB0aGUgZXh0ZW50IG9mIGl0LiBUaGUgbW9yZSBJIHJlYWQgYWJvdXQgQnVzaCBhbmQgQ2xpbnRvbiB0aGUgbW9yZSB0aGFua2Z1bCBJIGFtIGZvciBvdXIgY3VycmVudCBQT1RVUy4uIApTaW5jZSB5b3UgYXJlIGFscmVhZHkgaW52ZXN0aW5nIHlvdXIgdGltZSBhbmQgZnVuZHMgaW4gVmlkZW8gUG9rZXIsIHlvdSBtYXkgYXMgd2VsbCBtYWtlIGl0IHdvcnRoIHdoaWxlLiBNb3N0IGV4cGVydHMgd2lsbCBzdHJvbmdseSByZWNvbW1lbmQgbWF4aW1pc2luZyB5b3VyIHN0YWtlcywgYXMgdGhpcyBpcyB0aGUgYmVzdCB3YXkgdG8gZ2V0IHRoZSBtb3N0IG91dCBvZiB0aGUgVmlkZW8gUG9rZXIgc2Vzc2lvbnMuIE9idmlvdXNseSwgdGhlIG1vcmUgeW91IGludmVzdCwgdGhlIG1vcmUgeW91IHdpbGwgZ2V0IG91dCBvZiB5b3VyIGdhbWJsaW5nIHRpbWUsIHRoZXJlZm9yZSB5b3Ugc2hvdWxkIG5vdCBiZSBhZnJhaWQgdG8gdHVybiBvbiB0aGUgaGVhdC4gClRoZSBwYWNlIG9mIGNoYW5nZSBhbmQgZGV2ZWxvcG1lbnQgaGFzIGJlZW4gYSBrZXkgc291cmNlIG9mIHBvbGl0aWNhbCB0ZW5zaW9uLiBUaGUgcG9wdWxhdGlvbiBvZiB0aGUgVG93bnNoaXAgb2YgTGFuZ2xleSBncmV3IGJ5IDEzIHBlciBjZW50IGJldHdlZW4gMjAwNiBhbmQgMjAxMSwgd2l0aCBleHBhbmRpbmcgaG91c2luZyBwcm9qZWN0cyBhYnV0dGluZyBleHBhbnNlcyBvZiBmYXJtbGFuZC4gSG93ZXZlciwgRnJvZXNlIGhhcyBzYWlkIGhlIHByb3VkIG9mIHRoZSB3YXkgaGlzIGNvdW5jaWwgaGFzIHJlc3BvbmRlZCB0byBncm93dGggY29uY2VybnMuCkRldCByIGh1ciBza2FkbGlnIGZ1c2sgZW4gcmVsYXRpb24ga2FuIHNrZXJ0IHZhcmEuIApCdXQgb3BlcmF0b3JzIGNoYW5nZWQgdGhlaXIgc29mdHdhcmUgdG8gZ2V0IGFyb3VuZCB0aGUgcmVndWxhdGlvbnMgYW5kIHRoZXkgYWxzbyBjaGFsbGVuZ2VkIHRoZSBsYXcsIHNheWluZyB0aGVpciB2aWRlbyBzd2VlcHN0YWtlcyB3ZXJlIGp1c3QgbGlrZSBvdGhlciBhY2NlcHRlZCBzd2VlcHN0YWtlcywgbGlrZSB0aG9zZSBvZmZlcmVkIGJ5IGZhc3QgZm9vZCBjaGFpbnMgYW5kIHNvZGEgY29tcGFuaWVzLgpTb29vb28gLiAKRG9lc24gbWF0dGVyIGlmIGl0IHdhcyBhIGNvbXBsaW1lbnQgb24geW91ciBza2lsbHMgb3IgdGhlaXIgcGVyc29uYWwgbGlmZS4gSXQgYm90aCBtYWtlcyB0aGVtIGZlZWwgc3BlY2lhbCB0byBiZSByZW1lbWJlcmVkIGFuZCBhbGxvd3MgeW91IHRvIHN0YXJ0IHRoZSBjb252ZXJzYXRpb24gaW4gYSBwb3NpdGl2ZSBwbGFjZSAoSG93IHRoZSBzaG91bGRlciBiZWVuIHNpbmNlIHdlIGxvb3NlbmVkIGl0IHVwIGxhc3QgbW9udGg/IFN0aWxsIGtuaXR0aW5nIHRoYXQgYmxhbmtldCBvciBoYXZlIHlvdSBzdGFydGVkIGEgbmV3IHByb2plY3Q/IGV0YykuLiAKQW5nbGUgaXMgZXZlcnl0aGluZy4gSWYgeW91ciBhbmdsZSBjaGFuZ2VzIHlvdSBnZXQgYmFkIHJlc3VsdHMuIFRoZSBtb3N0IHNpbXBsZSBhbmQgYWNjZXNzaWJsZSB0aGluZyB0byB1c2UgaXMgMiBwZW5uaWVzLiAKRW1wbG95ZXJzIFRoZSBCTFMgcmVwb3J0cyB0aGF0IHRoZSBiaWdnZXN0IGVtcGxveWVyIG9mIEVIUyBzcGVjaWFsaXN0cyBhcyBvZiBNYXkgMjAxMSB3YXMgdGhlIGZlZGVyYWwgZ292ZXJubWVudCwgaW5jbHVkaW5nIHJlZ3VsYXRvcnkgYWdlbmNpZXMgc3VjaCBhcyB0aGUgT2NjdXBhdGlvbmFsIFNhZmV0eSBhbmQgSGVhbHRoIEFkbWluaXN0cmF0aW9uLiBBYm91dCAxMiBwZXJjZW50IG9mIHRoZSB0b3RhbCB3b3JrZm9yY2Ugb2YgNTcsOTUwIEVIUyBzcGVjaWFsaXN0cyB3b3JrZWQgZm9yIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQsIGVhcm5pbmcgYSBtZWFuICQzNi43NSBwZXIgaG91ciBvciAkNzYsNDUwIHBlciB5ZWFyLiBTdGF0ZSBnb3Zlcm5tZW50cyByYW5rZWQgc2Vjb25kIGluIHRvdGFsIGVtcGxveW1lbnQgYW5kIHBhaWQgYW4gYXZlcmFnZSBvZiBoYWQgJDI4LjkwIHBlciBob3VyIG9yICQ2MCwxMTAgcGVyIHllYXIuIExvY2FsIGdvdmVybm1lbnRzIHJhbmtlZCB0aGlyZCwgcGF5aW5nIGEgbWVhbiAkMjggcGVyIGhvdXIgb3IgJDU4LDI0MCBwZXIgeWVhci4gVGhlIGhpZ2hlc3QgcGF5IHdhcyBpbiBjb21wdXRlciBzeXN0ZW1zIGRlc2lnbiBhdCBhIG1lYW4gJDQyLjQ5IHBlciBob3VyIG9yICQ4OCwzOTAgcGVyIHllYXIuClRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBzaG91bGQgY2hhbmdlIGl0cyBtaW5kIGFib3V0IHdhciB0cmlhbHMgYWdhaW5zdCB0aGUgQnVzaGllcy4gSXQgdGltZSB0byBwdXQgV29sZm93aXR6IGFuZCBvdGhlciBsZWFkZXJzIG9mIHRoZSBwcmVlbXB0aXZlLCB0aGF0IGlzLCBpbGxlZ2FsIGludmFzaW9uIG9mIElyYXEgb24gdHJpYWwuIE90aGVyd2lzZSwgdGhleSB3aWxsIHJlbWFpbiBhIGRhbmdlciB0byBkZW1vY3JhY3kgYXQgaG9tZSBhbmQgYWJyb2FkLgpUaGlzIGd1eSBoYWQgYW4gSVEgdGhhdCBtYWRlIEZvcnJlc3QgR3VtcCBsb29rIGxpa2UgYSBnZW5pdXMuIApIb25lc3RseSwgaXQncyB0b28gc3RyZXNzZnVsIHRvIHdvcnJ5IGFib3V0IGFsd2F5cyBoYXZpbmcgYW4gb3JnYXNtLiBZZXMsIEkgbGlrZSB3aGVuIEkgZG8sIGJ1dCBJJ2QgcmF0aGVyIGZvY3VzIG9uIGZlZWxpbmcgZ29vZCB0aGFuIGJlIHdvcnJpZWQgYWJvdXQgaGl0dGluZyB0aGF0LiAKSSB3b3VsZCBsaWtlIHRvIHNlZSBtb3JlIHdvcmsgZG9uZSBvbiBubyBsaW1pdCBob2xkIGFzIEkgdGhpbmsgc29sdmluZyB0aGF0IHByb2JsZW0gd2lsbCBvZmZlciBwcmFjdGljYWwgaW5zaWdodHMgaW50byBob3cgb25lIGNhbiBlZmZlY3RpdmVseSBtYW5hZ2UgcmlzayB1bmRlciBpbmNvbXBsZXRlIGluZm9ybWF0aW9uLiAKT25jZSB5b3UgZ2V0IHRoZW0sIHJlYWQgdGhlbSwgbGVhcm4gdGhlbSwgYW5kIGJlIHJlYWR5IHRvIHF1b3RlIHRoZW0uIApFbnRlcmluZyBhIGdpdmVhd2F5IHVzaW5nIG11bHRpcGxlIGFjY291bnRzLCBmYWtlIGFjY291bnRzLCBvciBib3RzIGlzIGJhcnJlZApOb25lIG9mIHlvdXIgc3Rvcnkgb3IgeW91ciBhbnN3ZXIgc2VlbXMgdG8gZml0LiBUaGFuayB5b3UgdmVyeSBtdWNoIGZvciB5b3UgZmVlZGJhY2sgdGhvdWdoLCBhbmQgSSB3aWxsIGF3YWl0IGFkZGl0aW9uYWwgZmVlZGJhY2suLiAKQWxzbyBWaWV3ZWQgRGlmZmVyZW50IE1ldGhvZHMgb2YgVHJhaW5pbmcgRW1wbG95ZWVzIEFlcm9iaWMgRGFuY2UgSW5zdHJ1Y3RvciBUcmFpbmluZyBTYWxhcnkgb2YgYSBTd2ltbWluZyBJbnN0cnVjdG9yIFBhc3MgdGhlIFNraWxscyBUZXN0IG9uIHRoZSBDTkEgRXhhbSBUaGUgVHJhaW5pbmcgZm9yIGEgQ2VydGlmaWVkIEJyYWluIEluanVyeSBTcGVjaWFsaXN0IExpZmVndWFyZCBUcmFpbmluZyBhdCB0aGUgWU1DQSBadW1iYSBGaXRuZXNzIEluc3RydWN0b3IgQ2VydGlmaWNhdGlvbgpHcm93dGggd2FzIGluIHRoZSBjYXJkcyBmb3IgQm9iIFJvaHJtYW4KQUJDIFBob3RvIEFyY2hpdmUgIERhdmUgS290aW5za3kvR2V0dHkgSW1hZ2VzCldoZW4gaXQncyB5b3VyIHR1cm4sIGRyYXcgYSBjYXJkIGZyb20gdGhlIGRlY2sgYW5kIGNoZWNrIHlvdXIgaGFuZCB0byBzZWUgaWYgeW91IGNhbiBkaXNjYXJkIGFueSBjYXJkcy4gCllvdXIgc3RvcnkgcmVtaW5kcyBvZiBtZSBvZiBmaWxtbWFrZXIgU2FtIEJvenpvIHRha2Ugb24gZmlsbSBsZWFrcy4gQW4gZWFybHkgY3V0IG9mIGhpcyAiSGFja2VycyBXYW50ZWQiIGZpbG0gd2FzIGxlYWtlZC4gV2hhdCBpbml0aWFsbHkgbG9va2VkIGxpa2UgYSBkaXNhc3Rlci9jYXVzZSBmb3IgcGFuaWMgd2FzIGEgYmxlc3NpbmcgaW4gZGlzZ3Vpc2VBcyBpdCB3YXMgZ29vZCBmaWxtIG1ha2luZywgZG9uYXRpb25zIHBvdXJlZCBpbi4gCllvdSBtaWdodCByZWNvZ25pemUgRXJpbi4gU2hlIHdhcyBvbiBhbiBlcGlzb2RlIG9mIFNheSBZZXMgdG8gdGhlIERyZXNzIChTZWFzb24gNSwgRXBpc29kZSAxMSkuClRoZXNlIHNvbmdzIGFyZSBhdmFpbGFibGUgb24gIlRoZSBGYW1lLCJHYUdhJ3MgZmlyc3QgYWxidW0uIFZlcnNpb24uIApUaGVyZSBpcyBzb21lIHNvcnQgb2Ygc2VyaWFsIG51bWJlciBvbiBpdCB0aGF0IGlzIGluIHRoZSBwaWN0dXJlcy4gCkluIHRoaXMgZ2FtZSB0aGUgaGlnaGVyIHRoZSBudW1iZXJzLCB0aGUgbW9yZSByZXNwZWN0IHlvdSBnZXQuIApPbmNlIHlvdSBoYXZlIGJyb3dzZWQgdGhlIHNpdGUsIGZlZWwgZnJlZSB0byBjcmVhdGUgeW91ciB1bmlxdWUgcHJvZmlsZS4gR3JhdGUgb3Bwb3J0dW5pdHkgdG8gbWVldCBzd2luZ2VycyB0b2RheSBCdXkgTWVldCBNZSBpbiBBdGxhbnRpczogTWVldCBNaWxleSB3YW5uIGthbm4gbWFuIGRpZSBzY2hlaWR1bmcgZWlucmVpY2hlbiBDeXJ1cyBpcyBhIGRvdWJsZSBhbGJ1bSBzZXJ2aW5nIGFzIHRoZSBzb3VuZHRyYWNrIGZvciB0aGUgc2Vjb25kIHNlYXNvbiBvZiB0aGUgd2hhdCBpcyB0aW5kZXIgYXBwIHVzZWQgZm9yIHRlbGV2aXNpb24gc2VyaWVzIEhhbm5haCBNb250YW5hIGFuZCBtZWV0IHNpbmdsZXMgYXJvdW5kIG1lIHRoZSBkZWJ1dCBzdHVkaW8uIEhlcmUgeW91IGNhbiBmaW5kIHNpbmdsZXMgZ2lybCBmb3IgdW5saW1pdGVkIGVudGVydGFpbm1lbnQgYW5kIGxvY2FsIGhvb2t1cHMgbmVhciBtZS4gCkxlYXJuIHRoZSBiYXNpY3MuIFJlZ3VsYXIgc3RyZWV0IGNyYXBzIGlzIHBsYXllZCB3aXRoIHR3byBkaWNlLCB3aGljaCBhcmUgdXNlZCBieSBhIHNpbmdsZSBwbGF5ZXIgaW4gZWFjaCBnYW1lLCB0aG91Z2ggdGhlIGdhbWUgY2FuIGJlIHBsYXllZCBieSBhbnkgbnVtYmVyIG9mIG9ubG9va2Vycy5bMV0KTWV0aG9kb2xvZ2ljYWwgcXVhbGl0eSB3YXMgYXNzZXNzZWQgdXNpbmcgYSBtb2RpZmllZCB2ZXJzaW9uIG9mIHRoZSBKYWRhZCBzY2FsZS4gCkdvaW5nIGJhY2sgdG8gQm9zdG9uLCBoZSBnb3Qga2lja2VkIG91dCB3aXRoaW4gdGhlIGZpcnN0IGNvdXBsZSBvZiBzaGlmdHMsIE1hcmxlYXUgc2FpZCB3aXRoIGEgc21pbGUuIHRyeSBub3QgdG8gZG8gdGhhdC4gd2FzIGNvcnJlY3QuIER1cmluZyBhIGdhbWUgb24gSmFuLiAxMCwgMjAwNiwgVGhvcm50b24gaGFkIHBsYXllZCBsZXNzIHRoYW4gdGhyZWUgbWludXRlcyB3aGVuIGhlIGNydW5jaGVkIEJydWlucyBkZWZlbmNlbWFuIEhhbCBHaWxsIGludG8gdGhlIGVuZCBib2FyZHMsIHJlY2VpdmluZyBhIG1ham9yIGFuZCBhIGdhbWUgbWlzY29uZHVjdC4gRVQgc3RhcnQpIGFzIHRoZSBMZWFmcyBiZWdpbiBhIGZvdXIgZ2FtZSB0cmlwLgpJbiBhbGwgb3VyIHBhdHRlcm5zLCB5b3UgY2FuIGZlZWwgdGhlIGh1bWFuIGhhbmQgaW4gdGhlIG9yZ2FuaWMgc2hhcGVzLlEuIApJbiB0aGUgcnVpbnMgb2YgQ2hpY2FnbyB3aGVyZSBKdWxpYW4gOXRoIGxpdmVzIHRoZSBjb21tYW5kZXIgb2YgdGhlIEthc2ggR3VhcmQgaXMgT3IgdGlzLCBhIGNydWVsIGFuZCBhbWJpdGlvdXMgZGVzY2VuZGFudCBvZiBPcnRoaXMsIHdobyBkcmVhbXMgb2YgYmVpbmcgSmVtYWRhciBvZiB0aGUgVW5pdGVkIFRlaXZvcyBvZiBBbWVyaWNhLi4gCkhlIGJldHMgYXJvdW5kICQyMCwgb25jZSBhIG1vbnRoLCBoZSBzYXlzLiAiV2UndmUgZ290IHRvIHN0b3Agd29ycnlpbmcgYWJvdXQgaG9sZGluZyBldmVyeW9uZSdzIGhhbmQuIgpFZW4gZnlzaW90aGVyYXBldXQgaGFuZGVsdCB2YW51aXQgYmV0cm91d2JhcmUgaW5mb3JtYXRpZSBlbiB2ZXJzY2hhZiBhbmRlcmUgZHVzIG9vayBiZXRyb3V3YmFyZSBpbmZvcm1hdGllLiBUb3Qgc2xvdCBwcm9iZWVydCBkZSB0aGVyYXBldXQgYmlqIHRlIGRyYWdlbiBhYW4gZGUgb250d2lra2VsaW5nZW4gb3AgaGV0IGdlYmllZCB2YW4gZnlzaW90aGVyYXBldXRpc2NoZSBrZW5uaXMuLiAKV2l0aCBvbmUgZGF5IHJlbWFpbmluZywgdGhlIHJhY2UgZm9yIHRoZSBsZWFkaW5nIHJpZGVyIGF3YXJkIGlzIGFsbCBidXQgb3Zlci4gUnVieSBXYWxzaCdzIHZpY3Rvcnkgb24gQmlnIEJ1Y2sncyBpbiB0aGUgTGFkYnJva2VzIFdvcmxkIEh1cmRsZSBtb3ZlZCBoaW0gb24gdG8gZml2ZSB3aW5uZXJzIGZvciB0aGUgd2VlayBhbmQgaGlzIG5lYXJlc3Qgcml2YWwgaXMgQmFycnkgR2VyYWdodHksIHdobyByZWNvcmRlZCBhIGRvdWJsZSBvbiB0aGUgb3BlbmluZyBkYXkgb2YgdGhlIEZlc3RpdmFsLgpUd28gUGFpciAgIGEgaGFuZCB0aGF0IGhhcyB0d28gY2FyZHMgb2YgdGhlIHNhbWUgcmFuayBhbmQgYW5vdGhlciBzZXQgb2YgdHdvIGNhcmRzIG9uIGFub3RoZXIgcmFuayB3aXRoIG9uZSB1bm1hdGNoZWQgY2FyZC4gLgpDb25ncmF0cyEuIApJdCB3b24gaW1wYWN0IHRoZSBhY3R1YWwgd2VpZ2h0IHlvdSBsb3NlIChhbmQgd2F0ZXIgcmV0ZW50aW9uIHdpbGwgYmUgbW9yZSBjb21tb24pLCBidXQgeW91IGxpa2VseSBiZSBtdWNoIGhhcHBpZXIgd2l0aCB5b3VyIGJvZHkgYXQgdGhlIGVuZCBvZiB5b3VyIHdlaWdodCBsb3NzIGpvdXJuZXkuIApDYW4gcGxheSBvbiBpdCByaWdodCBub3cgYnV0IHRoYXQgY29taW5nIGluIHRoZSBjb21pbmcgd2Vla3MsIEJpdG9uaSBzYWlkLgpJIHJlYWxseSBzYXQgZG93biBhbmQgdGhvdWdodCBhYm91dCBpdC4gSW5kZWVkLCB0aGlzIHBvc3QgdHJ1bHkgZG9lcyBnbyByaWdodCB0byB0aGUgaGVhcnQgb2YgdGhlIG1hdHRlci4gSSBhbSBmb3JjZWQgdG8gcmVjb25zaWRlciBteSBwb3NpdGlvbi4gClNoZSBqb2luZWQgQ0lCQyBlaWdodCB5ZWFycyBhZ28gYWZ0ZXIgdGFraW5nIHRpbWUgdG8gc3RhcnQgYSBmYW1pbHkuLiAKQXZvaWQgcG9zdGluZyBjb250ZW50IHRoYXQgaXMgYSBkdXBsaWNhdGUgb2YgY29udGVudCBwb3N0ZWQgd2l0aGluIHRoZSBsYXN0IDcgZGF5cy4KSWYgeW91IGZvbGRlZCBvbiBhIHJvdW5kLCB0aGVyZSBtaWdodCBiZSBhIGdvb2QgY2hhbmNlIHlvdSB3b3VsZCB3YW50IHRvIHRhbGsgYWJvdXQgdGhlIHBvc3NpYmlsaXRpZXMgdGhhdCBjb3VsZCBoYXBwZW4gaWYgeW91IHN0YXllZCBpbiB0aGUgZ2FtZSwgYW5kIHlvdSB3b3VsZCB3YW50IHRvIGRvIHRoaXMgd2hpbGUgdGhlIGdhbWUgaXMgc3RpbGwgb24uIERvIG5vdCBkbyB0aGlzIGFzIHRoZSBvdGhlciBwbGF5ZXJzIGNhbiB1c2UgdGhpcyBpbmZvcm1hdGlvbiB0byB3aW4gdGhlaXIgY3VycmVudCBoYW5kLiBBbHNvLCBpdCB3aWxsIHJ1aW4gb3RoZXIgcGxheWVycycgYmx1ZmYgc3RyYXRlZ2llcy4gCkZpcnN0LCBsZXQncyBkaXNjdXNzIGxpbWl0cyB0byBhcmJpdHJhZ2UsIG1vcmUgY29tbW9ubHkgcmVmZXJyZWQgdG8gYXMgbWFya2V0IGZyaWN0aW9ucy4gVGhlIGVmZmljaWVudCBtYXJrZXQgaHlwb3RoZXNpcyBwcmVkaWN0cyB0aGF0IHByaWNlcyByZWZsZWN0IGZ1bmRhbWVudGFsIHZhbHVlLiBXaHk/IFBlb3BsZSBhcmUgZ3JlZWR5IGFuZCBhbnkgbWlzcHJpY2luZ3MgYXJlIGltbWVkaWF0ZWx5IGNvcnJlY3RlZCBieSB0aG9zZSBzbWFydCwgc2F2dnkgaW52ZXN0b3JzIHRoYXQgY2FuIG1ha2UgYSBxdWljayBwcm9maXQuIApGaWxsIHRoZSBzcGFjZSBsZWZ0IGJ5IHRoZSBraW5nIHdpdGggYSBuZXcgY2FyZCBmcm9tIHRoZSBkZWNrLCBmYWNlIHVwIGxpa2UgdGhlIG90aGVycy4uIApUaGUgZmlyc3QgdGhpbmcgdGhhdCB5b3Ugd2lsbCBmaW5kIHdoZW4geW91IGFyZSBsb29raW5nIGF0IHRoZSA1MDAgUGhhcm9haCdzIENsdWIgYW5kIENhc2lubyBQYXVsc29uIFBva2VyIENoaXBzIHdpdGggQWx1bWludW0gQ2FzZSBpcyB0aGF0IHlvdSBhcmUgZ29pbmcgdG8gZmluZCB0aGF0IHlvdSdsbCBsb3ZlIHRoZXNlIEN1c3RvbSBQb2tlciBDaGlwcyEgVGhlc2UgV2hvbGVzYWxlIFBva2VyIENoaXBzIGFyZSBwZXJmZWN0IGZvciBhIGxhaWQgYmFjaywgc2VyaW91cyBnYW1lLCBhbmQgeW91IGRvbid0IGhhdmUgdG8gd29ycnkgYWJvdXQgcGxheWluZyB3aXRoIGJpbmdvIGNoaXBzIG9yIHdoYXRldmVyIGVsc2UgeW91IGNhbiBkaWcgdXAgYXJvdW5kIHRoZSBob21lIQpKdXN0IGJlY2F1c2UgeW91IGhhdmUgYSBkZWZpbmVkIGJ1ZGdldCBlYWNoIHllYXIgZG9lc24gbWVhbiB5b3UgY2FuIHNwZW5kIGl0IHdpdGhvdXQgYXBwcm92YWwgb3Igb3ZlcnNpZ2h0LiAKT24gYSB5ZWFyIHRvIHllYXIgYmFzaXMsIFN0YXRpc3RpY3MgQ2FuYWRhIHNheXMgdGhlIHByb3ZpbmNlIGhhcyBjcmVhdGVkIGFib3V0IDE5MiwwMDAgbmV3IGpvYnMuClRoZSBoYXJkIHRydXRoIGlzLCBpdCByZWFsbHkgaGFzbiBiZWVuIHVudGlsIHRoZSBsYXN0IHNldmVyYWwgeWVhcnMgdGhhdCBtYW55IHN0YXRlcyBoYWQgZXZlbiBiZWd1biBsaWNlbnNpbmcgbWFzc2FnZSB0aGVyYXBpc3RzLiBBY3R1YWxseSwgdGhlcmUgYXJlIHN0aWxsIGEgaGFuZGZ1bCBvZiBzdGF0ZXMgdGhhdCBhcmUgdW5yZWd1bGF0ZWQuIEJlY2F1c2Ugb2YgdGhpcywgZm9yIGRlY2FkZXMgaW4gbWFueSBwbGFjZXMgdGhlcmUgaGFkbiBiZWVuIGFueSBzdGFuZGFyZHMgaW4gcGxhY2UgdG8gc2hvdyBhbnkgbGV2ZWwgb2YgZWR1Y2F0aW9uIG9yIGNvbXBldGVuY3kgZm9yIHNvbWVvbmUgdG8gY2FsbCB0aGVtc2VsdmVzIGEgbWFzc2FnZSB0aGVyYXBpc3QuIFNvbWUgb2YgdGhvc2UgcHJhY3RpdGlvbmVycyBoYXZlIGJlZW4gZ3JhbmRmYXRoZXJlZCBpbiBhcyBsaWNlbnNpbmcgaGFzIGJlZW4gZW5hY3RlZCAoYW5kIHNhZGx5LCBzb21lIGFyZSB0ZWFjaGluZyB0aGlzIG1pc2luZm9ybWF0aW9uIGFzIHdlbGwuKSBJdCBnb2luZyB0byB0YWtlIHRpbWUsIGJ1dCB0aGVyZSBhcmUgTUFOWSBvZiB1cyB0aGF0IHRha2Ugb3VyIGVkdWNhdGlvbiBhbmQgcHJhY3RpY2VzIHF1aXRlIHNlcmlvdXNseSwgYW5kIHdhbnQgdG8gcmFpc2UgdGhlIHN0YW5kYXJkcyBzbyB0aGF0IGRyaWJibGUgbGlrZSB0aGlzIHdpbGwgb25lIGRheSBnbyBhd2F5LgpBcyBhIGRyaXZlciBpdCBpcnJpdGF0ZXMgbWUgd2hlbiBhIFBBWCBpc24gcmVhZHkgdG8gZ28gd2hlbiB0aGV5IHJlcXVlc3QgdGhlIHJpZGUsIGl0IGFsc28gaXMgbW9yZSBpcnJpdGF0aW5nIHdoZW4gYSBkcml2ZXIgaXNuIHJlYWR5LgpJIGxlZnQgbXkgaG90ZWwgYWxvbmcgdGhlIFBvdG9tYWMgYW5kIHN0YXJ0ZWQgcnVubmluZyBhcm91bmQgdGhlIG1hbGwuIApUaGV5IGJyaW5nIHlvdSBhIGJvdHRsZSwgYSBtaXhlciwgYSBib3ggb2YgaWNlLCBhbmQgdHdvIGdsYXNzZXMuIApCdXQgZXZlbiBpZiB0aGF0IHByb3ZlcyB0byBiZSB0aGUgY2FzZSwgSGFtaWx0b24gaGFzIGEgbW91bnRhaW4gdG8gY2xpbWI7IGF0IHRoaXMgbWlkcG9pbnQsIFZldHRlbCBoYXMgMTg2IHBvaW50cyB0byBoaXMgOTcsIHdpdGggMjc1IGxlZnQgdG8gd2luLi4gClRoZSBhYmlsaXR5IHRvIGNvbnNjaW91c2x5IGdpdmluZyB1cCBwaWVjZSBBIGZvciBwaWVjZSBCLCB3aGljaCBtaWdodCBhbGxvdyBlbmVteSB0byBidWlsZCB1cCB0aGVpciBvd24gc3RyYXRlZ3ksIGluIG9yZGVyIHRvIGJ1aWxkIHVwIHlvdXIgb3duIHN0cmF0ZWd5IHdoaWNoIHlvdSB0aGluayB3b3VsZCBiZWF0IHlvdXIgZW5lbXkKSXQgaXMgbm90IHVudXN1YWwgdG8gZmluZCBwaWN0dXJlcyBzdWNoIGFzIGRpY2Ugb3IgZXZlbiBwbGF5aW5nIGNhcmRzIGVtYmVkZGVkIGludG8gYSBwb2tlciBjaGlwLiBJZiB5b3Ugd2FudCBDdXN0b20gQ2xheSBQb2tlciBDaGlwcywgeW91IGNhbiBlbWJlZCB5b3VyIG93biBpbWFnZSBpbnRvIHRoaXMgYXJlYS4uIApUaGVyZSBzaG91bGQgYmUgYSBtYW5kYXRlIHRoYXQgZm9yY2VzIGFueSBwb2xpdGljaWFuIHRoYXQgYXJndWVzIGZvciBvciBhZ2FpbnN0IHNvbWV0aGluZyB0byBhbnN3ZXIgdGhlIGZvbGxvd2luZyBiZWZvcmUgYXJndWluZyB0aGVpciBjYXNlOiB3aGF0IGRvZXMgdGhpcyBoYXZlIHRvIGRvIHdpdGggeW91ciB3ZWxsIGJlaW5nIGFuZCBob3cgZG9lcyBpdCBwZXJzb25hbGx5IGFmZmVjdCB5b3U/IEZvciB3ZWVrcyBJIG9ubHkgYmVlbiBnaXZlbiB0aGUgcnVuIGFyb3VuZCB3aGVuIGl0IGNvbWVzIHRvIHNlZWtpbmcgYSBzb3VuZCBhbmQgcmVhc29uYWJsZSBhcmd1bWVudCBhZ2FpbnN0IE5ldCBOZXV0cmFsaXR5LiBpbiBpdHMgZW50aXJldHksIGluIHJlc3BvbnNlIHRoZW4gSSBhdCBsZWFzdCByZXNwZWN0IHRoZWlyIGhvbmVzdHkuClNvIG1heWJlIHRoYXQgdGhlIHBvaW50IG9mIHRoYXQgc2NlbmUsIHRvIHJlbWluZCBLaXJ5dSBhbmQgdGhlIHBsYXllcnMgdGhhdCBldmVyeW9uZSBpbnZvbHZlZCBpbiB0aGUgZW1wdHkgbG90IHdhciBhcmUgYmFkIHBlb3BsZS4uIApJdCdzIGJlZW4gY2FsbGVkICJ0aGUgV29ybGQncyBSaWNoZXN0IEFwYXJ0bWVudCBCdWlsZGluZywiIHdpdGggcmVzaWRlbnRzIGluY2x1ZGluZyBiaWxsaW9uYWlyZSBEYXZpZCBLb2NoLCBCbGFja3N0b25lIEdyb3VwIENFTyBTdGVwaGVuIFNjaHdhcnptYW4sIGhlZGdlIGZ1bmQgYmlsbGlvbmFpcmUgSXNyYWVsIEVuZ2xhbmRlciBhbmQgaGlnaCBmYXNoaW9uIGRlc2lnbmVyIFZlcmEgV2FuZy4gCkp1c3QuICJyZWFsaXN0aWMiLiAKSnVzdCBkb3dudm90ZSBhbmQgbW92ZSBvbiwgb3IgdXBzdGFnZSB0aGVtIGJ5IHN1Ym1pdHRpbmcgc29tZXRoaW5nIGV2ZW4gY3JlZXBpZXIuIFlvdSBub3RpY2UgdGhlIGxvdWRlc3QgY29tcGxhaW5lcnMgbmV2ZXIgYWN0dWFsbHkgc3VibWl0IGFueXRoaW5nIGdvb2QgdGhlbXNlbHZlcy4gClBsZWFzZSBkb250IGJlIGFuIGFzc2hhdCB0byBvYnZpb3VzIG5ldyBwbGF5ZXJzCklmIGl0cyByYWluaW5nIGhhcmQsIGkgZ2V0IG91dCBhbmQgd2FsayB0aGVtIHRvIHRoZSBjYXIgd2l0aCBhbiB1bWJyZWxsYS4gCllvdSBiZWNvbWUgbW9yZSBjb21mb3J0YWJsZSB3aXRoIHlvdXJzZWxmIGFuZCB3aGF0IHlvdSB3YW50IG91dCBvZiBsaWZlLCBhbmQgeW91IGJlY29tZSBsZXNzIHdpbGxpbmcgdG8gY29tcHJvbWlzZSBvbiBhbnkgb2YgaXQuLiAKVGhlIFZpZXRuYW0gV2FyIG92ZXJzaGFkb3dlZCBpdCBhbGwgYnV0IHRoZXJlIGlzIG5vIHdheSBoZSBzaG91bGQgYmUgbGlzdGVkIGFueXdoZXJlIG5lYXIgVHJ1bXAuIApJIGRpZG4ndCByZWFsaXplIHlvdSB3ZXJlIDE2LiAKV2h5IHlvdSBwcmV0ZW5kIGxpa2Ugd2UgaGF2ZSBhIHBlcmZlY3QgZWNvbm9taWNhbCBtZWRpdW0gYXMgYSBjcnlwdG9jdXJyZW5jeSBhbHJlYWR5PyBOQU5PIHNjcmV3ZWQgbW9yZSBzaW5jZSBpdCBoYXMgb25seSBvbmUgYWJpbGl0eSBhbmQgdGhhdCdzIGRpc21pc3NlZCBieSBiZWluZyBub3QgZnVuZ2libGUuIApSZWxhdGVkUmVhZCBTYWx1dCwgb3VyIHF1YXJ0ZXJseSB3aW5lIGFuZCBmb29kIHB1YmxpY2F0aW9uUmVhZCB0aGUgbGF0ZXN0IGxvY2FsLCBuYXRpb25hbCBhbmQgaW50ZXJuYXRpb25hbCBmb29kIG5ld3NSZWFkIHRoZSBsYXRlc3QgcmVzdGF1cmFudCByZXZpZXdzSSBnb3QgYW4gdXAgY2xvc2UgbG9vayBhdCBsb2NhbCBjb29raW5nIHdpdGggSXJtYSBTYW50b3lvIE1hY2VkbywgdGhlIGNoZWYgYXQgWm9yYmEgQmVhY2ggSG9tZXMsIHdoZXJlIEkgc3RheWVkLiAKT25jZSB5b3UgcmVhY2ggYSBjZXJ0YWluIGxldmVsIG9mIG1hdHVyaXR5LCBpdCBiZWNvbWVzIGhpZ2hseSBpbXByb2JhYmxlIHlvdSBldmVyIGdvIGJyb2tlLiAKWW91IGNhbiBkZWZpbml0ZWx5IGZvbGxvdyB5b3VyIG1lbnRvcnMgYW5kIHBpY2sgdGhlaXIgc2ltaWxhciBwcm9kdWN0cyBhcyB3ZWxsLiBZb3UgY2FuIGZpbmQgRHVja3MgTWVkYWxsaW9uIFBva2VyIENhcmQgUHJvdGVjdG9yIGF0IGEgY2hlYXAgcmF0ZSBvbmxpbmUuIApIZSBhd29rZSB0byBhIG1ldGFsbGljIHRhc3RlIGluIGhpcyBtb3V0aC4gCldhcyBhIFN0b25lcyBmYW4gZmlyc3QsIHNheXMgQnJvd24uIFN0b25lcyB3ZXJlIG15IGdhdGV3YXkgdG8gdGhlIGJsdWVzLiBCdXQgSSB3YXMgdGhlIGtpbmQgb2Yga2lkIHRoYXQgd2hlbiBJIGNvbWUgYWNyb3NzIGEgY292ZXIgSSBsaWtlZCBhbmQgc2F3IHdobyB3cm90ZSBpdCwgSSBnb3QgdG8gZ28gdG8gdGhlIHNvdXJjZS4gClR1cm1lcmljIG1pZ2h0IGp1c3QgYmUgb25lIG9mIHRoZSBtb3N0IHZlcnNhdGlsZSBzcGljZXMgb24gdGhlIHBsYW5ldC4gV2hldGhlciB5b3UncmUgZmFtaWxpYXIgd2l0aCBpdCBvciBub3QsIHlvdSd2ZSBwcm9iYWJseSBlYXRlbiBpdCBhdCBzb21lIHBvaW50IG9yIGFub3RoZXIgYmVjYXVzZSB0dXJtZXJpYyBpcyBvbmUgb2YgdGhlIG1haW4gaW5ncmVkaWVudHMgaW4gYm90aCBjdXJyeSBhbmQgbXVzdGFyZC4gSXQgbm90IG9ubHkgaGVscHMgdG8gZ2l2ZSB0aGVtIHRoZWlyIHVuaXF1ZSBmbGF2b3JzLCBidXQgaXQncyBhbHNvIHJlc3BvbnNpYmxlIGZvciBnaXZpbmcgdGhlbSBib3RoIHRoZWlyIHllbGxvdyBjb2xvci4gCkVkZW4gb25seSBzcXVlZXplcyBpbnRvIHRoZSB0b3AgaGFsZiBvZiAxMDAgYmVjYXVzZSBvZiBpdHMgZXhjZWxsZW50IGxvY2F0aW9uIGFuZCBkZWNlbnQgcm9vbXMuIApJbiBteSBjaXJjbGUsIGJvb2tzIGFyZSBwb3B1bGFyIGdpZnRzLiBTbyBJIHNvbWV0aW1lcyBicm93c2UgdXNlZCBib29rIHN0b3JlcyBhbmQgcGljayB1cCBib29rcyB0aGVyZS4gSSBoYXZlIGFsc28gZ2l2ZW4gYW4gZSBib29rIHRvIHNvbWVvbmUgSSBrbm93IHVzZXMgYW4gZSByZWFkZXIgb2Z0ZW4uClJlYWxpemUgdGhhdCB3aGlsZSB0aGV5IG1hZGUgYSBzaGl0dHkgY2hvaWNlIHdhaXRpbmcgc28gbG9uZyB0byB0ZWxsIHlvdSB0aGUgY2hvaWNlIHdhcyBtYWRlIG91dCBvZiBjb25jZXJuIGFuZCBsb3ZlIG5vdCBtYWxpY2UuIApEdXJpbmcgdGhhdCB0aW1lLCBoZSBidWlsdCB0aGUgTG9kZ2UgYXQgQXNwZW4gd2l0aCBoaXMgZnJpZW5kIExlZnR5IEJyaW5rbWFuLiAKQXNrIGFueSB0ZWFjaGVyIGhvdyBoYXJkIGl0IGlzIHRvIGdldCBjaGlsZHJlbiB0byBkbyB0aGVpciBob21ld29yayBvciBzaG93IHVwIHRvIGNsYXNzIG9uIHRpbWUuIApPcmlnaW5hbGx5IHdlIGhhZCA0MGsgYmFuZHMgICAwIHRvIDQwLCA0MCB0byA4MCwgYW5kIHNvIG9uIHVudGlsIGFyb3VuZCAyNDAuIFRoZSBwcm9ibGVtIHdhcyB0aGF0IGl0IHdhc24ndCBzcGVjaWZpYyBlbm91Z2ggICB0aGVyZSdzIGEgaHVnZSBkaWZmZXJlbmNlIGluIGluY29tZSBmb3IgdGhlIGZpcnN0IHRocmVlIGxldmVscy4gU29tZW9uZSBtYWtpbmcgNDBrIGlzIG5vdCBhdCBhbGwgaW4gdGhlIHNhbWUgcG9zaXRpb24gYXMgc29tZW9uZSB3aG8gbWFrZXMgODBrLCBhbmQgdGhlIHNhbWUgaXMgdHJ1ZSBmb3IgdGhlIHByZXZpb3VzIGFuZCBuZXh0IGJhbmRzLgo3IEF1ZyAyMDE3IC4gTWFyaW5lcyBDb3JwcyBpcyBidWlsZGluZyBhIG5ldyBNZXRhbCBHZWFyIGFuZCBoZSBzZXRzIG9mZiB0byBzdG9wIE1ldGFsLiAKQXMgaGUgbGF0ZXIgcmVjYWxsZWQsIGF0IHRoZSBvdGhlciBlbmQgb2YgdGhlIGxpbmUgd2FzIGhpcyBEZWZlbnNlIE1pbmlzdGVyLCBNYXJzaGFsIFJvZGlvbiBNYWxpbm92c2t5LiBBbiB1bmlkZW50aWZpZWQgcGxhbmUgaGFkIGNyb3NzZWQgdGhlIEFmZ2hhbiBmcm9udGllciBpbnRvIFNvdmlldCBhaXJzcGFjZS4gQm90aCBtZW4ga25ldyB3aG8gaGFkIHNlbnQgdGhlIHBsYW5lLi4gCjgwIHBob3Rvc2hvcDcgc29mdHdhcmUgd2l0aCBzZXJpYWwga2V5IGl3YWsgLCBwZXllayAsIHRyaW8gbWFjYW4gLiAKQXJlIFlvdSBJbiBvciBPdXQ/CjEpIEkgbmV2ZXIgcGxheWVkIFdBU0QgYmVmb3JlLCBzbyBJIGFjdHVhbGx5IGNoYW5nZWQgbXkga2V5cyB0byBFU0RGIGJlY2F1c2UgbXkgZmluZ2VyIGxpa2VzIGJlaW5nIG9uIHRoZSB0eXBpbmcgaG9tZSByb3cuIEkgYWxzbyBtYWtlIGludGVyYWN0IG15IFJpZ2h0IE1vdXNlIEJ1dHRvbiwgSSBqdXN0IGZpbmQgaXQgYSBsb3QgZWFzaWVyIHRvIGtlZXAgbW92aW5nLCBiZWNhdXNlIEkgaGF2ZSBubyBkZXh0ZXJpdHkgaW4gbXkgbGVmdCBoYW5kIGZvciB0aGF0LiBJZiB5b3UgcGxheSBhIGxvdCBvZiBjb21wdXRlciBnYW1lcyBJIGFzc3VtZSB0aGlzIGlzbiB1c2VmdWwsIGJ1dCBpZiB5b3UgbGlrZSBtZSBtYXliZSBpdCB3aWxsIGhlbHAuIEkgYWxzbyBoYXZlIEcgcmVsb2FkIGFuZCBBIGhvbGQgbWFwIHNvIG15IGxlZnQgaGFuZCBiYXJlbHkgbW92ZXMgYXMgSSBwbGF5LgpCaWdnZXN0IGRldmVsb3BlcnMsIHRvbGQgdGhlIHJlY2VudCBVcmJhbiBEZXZlbG9wbWVudCBJbnN0aXR1dGUgYW5udWFsIGZvcmVjYXN0IGx1bmNoZW9uIHRoYXQgdGhleSBleHBlY3QgdGhlIG1hcmtldHMgdG8gdGFrZSBhIGJyZWF0aGVyIGFuZCB0byByZXNldCBkdXJpbmcgdGhlIHllYXIuIApUaGUgbGltYm8gaXMgaW5kaWZmZXJlbnQuIFdlIGRpZSBhbG9uZSBhbmQgaW4gcGFpbi4gT3VyIGxhc3QgYnJlYXRoIGlzIHN5bWJvbGljIG9mIG91ciBpbnNpZ25pZmljYW5jZS4gSXQgaXMgbGlrZSB0aGUgc21va2UgZnJvbSBhbiBleHRpbmd1aXNoZWQgd2ljayB0aGF0IGlzIHNvb24gbG9zdCB0byBhbGwgb2JzZXJ2ZXJzLiBUaG9zZSB0aGF0IGhhdmUgZmFpdGggYXJlIGdhbWJsZXJzLCB3aGljaCB3ZSBhbHNvIGRlZW1lZCBhcyBhIElzIGZhaXRoIG1vcmUgdGhhbiBhIGRlZmVuc2UgbWVjaGFuaXNtPyBJcyBpdCBtb3JlIHRoYW4gYSBkZWx1c2lvbj8gVGhhdCB3b3VsZCBiZSBncmVhdCwgYnV0IGl0IGlzIHRoZSB0aGluZ3MgdGhhdCBkb24gcmVxdWlyZSBmYWl0aCB0aGF0IGxldCBtZSBrbm93IHdlIGFyZSByZWFsbHkgaW4gbGltYm8uCllvdSd2ZSBqdXN0IGNpdGVkIGFub3RoZXIgdGhpbmcgdGhhdCBoYXMgYmVjb21lIG1vcmUgbXl0aCB0aGFuIGZhY3Q6IFdoZW4gdGhvc2UgZWRpdHMgdGhhdCB5b3UgbWVudGlvbmVkIHdlcmUgbWFkZSwgdGhleSB3ZXJlIGRvbmUgd2l0aCB0aGUgaW50ZW50aW9uIG9mIGJlaW5nIHZlcnkgb2J2aW91cy4gQW5kIG9ubHkgb24gY29tbWVudHMgc3B1cmlvdXNseSBhY2N1c2luZyBTdGV2ZSBvZiBiZWluZyBhIGNoaWxkIG1vbGVzdGVyLiBUaGUgc3RhdGVkIGludGVudGlvbiB3YXMgdG8gaGlnaGxpZ2h0IHRoZSBpbmhlcmVudCBhYnN1cmRpdHkgb2YgdGhlIGF0dGFja3MsIGFuZCBhbHNvIHRvIG9wZW4gYSBkaWFsb2d1ZS4gCk9waW5pb246IFRyYWlsYmxhemluZyB0b2RheSB0byB0cmFuc2Zvcm0gdG9tb3Jyb3dDYWxnYXJ5IGhhcyBhIGdyZWF0IGxlZ2FjeSB3b3J0aCBjZWxlYnJhdGluZyBhbmQgcHJlc2VydmluZy4gVGhpcyBsZWdhY3kgaXMgdGhlIC4KSWYgeW91IHRpbWUgdHJhdmVsIGluIHBsYWNlIGFueSBtb3JlIHRoYW4gYSBmZXcgc2Vjb25kcywgeW91IGFyZSBmdWNrZWQuIApUcnVlLCBidXQgaXQgc2VlbXMgaGFyZCB0byBnZXQgdGhvdXNhbmRzIG91dCBvZiB0aGlzIHN5c3RlbS4gWW91IGNhbiBnYWluIG1vcmUgdGhhbiBvdGhlciBwZW9wbGUgcHV0IGluLiAKVGhlIFN0dWRlbnQgRW50cmVwcmVuZXVyIE5hdGlvbmFsIENoYW1waW9uIGlzIG5hbWVkIHRoZSAiU3R1ZGVudCBFbnRyZXByZW5ldXIgb2YgdGhlIFllYXIiLCB0YWtpbmcgaG9tZSB0aGUgQ0lCQyBDdXAgYW5kIGEgJDEwLDAwMCBjYXNoIHByaXplLiBUaGlzIGluZGl2aWR1YWwgdGhlbiBtb3ZlcyBvbiB0byByZXByZXNlbnQgQ2FuYWRhIGF0IHRoZSBHbG9iYWwgU3R1ZGVudCBFbnRyZXByZW5ldXIgYXdhcmRzLiAKSW4gU3dhdCwgRGlyIGFuZCBwYXJ0cyBvZiBCdW5lciBvdXIgYXJteSBoYXMgc3VmZmVyZWQgaGVhdnkgY2FzdWFsdGllcy4gSWYgdGhlIFVTIG1pbGl0YXJ5IGhhZCBzdWZmZXJlZCBhIHF1YXJ0ZXIgb2YgdGhlc2UgY2FzdWFsdGllcyBpbiB0aGUgdHdvIG1vbnRocyBvciBzbyBzaW5jZSB0aGUgU3dhdCBvcGVyYXRpb24gc3RhcnRlZCwgdGhlcmUgd291bGQgaGF2ZSBiZWVuIGEgc3Rvcm0gaW4gV2FzaGluZ3Rvbi4gQnV0IHNpbmNlIGl0IGlzIFBha2lzdGFuJ3MgJ3BlYXNhbnQnIGFybXkgc3VmZmVyaW5nIHRoZXNlIGxvc3NlcyBpdCBpcyBhIGRpZmZlcmVudCBtYXR0ZXIgYWx0b2dldGhlci4gV2FzaGluZ3RvbiwgaG93ZXZlciwgaXMgbm90IHRvIGJsYW1lLiBJZiB3ZSByZW1haW4gY2h1bXBzIHdoZW4gaXQgY29tZXMgdG8gYmFyZ2FpbmluZyB3aXRoIHRoZSBVUywgdGhlIGZhdWx0IGlzIG5vdCBpbiBvdXIgc3RhcnMgYnV0IHVzLiBPdGhlciBjb3VudHJpZXMgd2lsbCBub3QgcHV0IGEgcHJvcGVyIHZhbHVlIG9uIHVzIG9yIHdoYXQgd2UgZG8gdW5sZXNzIHdlIGZpcnN0IHB1dCBhIHByb3BlciB2YWx1ZSBvbiBvdXJzZWx2ZXMuIApPbmUgcmVhc29uIGZvciB0aGlzIGlzIHRoYXQgdGhleSBhcmUgbWFkZSBvZiB0aGUgaGlnaGVzdCBxdWFsaXR5IG9mIHByb2Zlc3Npb25hbCBjbGF5LiBUaGlzIG1vc3QgZGVmaW5pdGVseSBzZXRzIHRoZW0gbWlsZXMgYXBhcnQgZnJvbSB0aGUgd2VhayBsb29raW5nIHBsYXN0aWMgY2hpcHMgb25lIGNvdWxkIHByb2N1cmUgaW4gY29udmVuaWVuY2Ugc3RvcmUuIFJlYWxseSwgaWYgeW91IHdhbnQgcHJvZmVzc2lvbmFsIGxvb2tpbmcgY2hpcHMgdGhhdCBhcmUgc2ltaWxhciB0byB3aGF0IHdvdWxkIGJlIGZvdW5kIGluIGEgcmVhbCBsaWZlIGNhc2lubywgeW91IHdpbGwgd2FudCBjaGlwcyBtYWRlIGZyb20gcHJvZmVzc2lvbmFsIGNsYXkuCkNydWlzZSBzdGFmZmVycyByZWd1bGFybHkgZW5nYWdlIGluIHN1YmxpbWluYWwgbWVzc2FnaW5nOiBUaGUgZmlyc3QgdGhpbmcgZ3Vlc3RzIGxpa2VseSBzZWUgaW4gdGhlaXIgY2FiaW5zIGlzIGEgZ2xlZWZ1bCBqaW5nbGUgYWJvdXQgaGFuZHdhc2hpbmcgbG9vcGluZyBvbiB0aGVpciB0ZWxldmlzaW9uIHNjcmVlbi4gSXQncyBhcyBjYXRjaHkgYXMgYSBLYXR5IFBlcnJ5IHNvbmcgYW5kIG1lYW50IHRvIHN0ZWVyIHlvdSB0b3dhcmQgUHVyZWwgcHVtcHMgYXJvdW5kIHRoZSBzaGlwLCBlYWNoIGNhcmVmdWxseSBwb3NpdGlvbmVkIGF0IGhpZ2ggdHJhZmZpYyBqdW5jdGlvbnMgKHRoaW5rIGVudHJhbmNlcyB0byB0aGUgbWFpbiBkaW5pbmcgaGFsbHMgYW5kIHRoZWF0cmVzKSBieSBzZW5pb3Igc3RhZmYuIEFsb25nIHdpdGggdGhlIGVtY2VlcycgYmFudGVyIGF0IGxhcmdlIGdyb3VwIGV2ZW50cyAgICJIYXZlIHlvdSB3YXNoZWQgeW91ciBoYW5kcyA1MCB0aW1lcyB0b2RheT8gSSBoYXZlISIgICB0aGUgamluZ2xlIGlzIHBhcnQgb2YgdGhlIGNyZXcncyB1bndhdmVyaW5nIGVmZm9ydCB0byBzdGF2ZSBvZmYgYSBwb3RlbnRpYWwgTm9yb3ZpcnVzIG91dGJyZWFrLi4gCkl0IGxpa2UgYmVpbmcgb24gYSBsaXN0IGZvciB3aG8gd2lucyB0aGUgbG90dGVyeSBpbiB0aGUgeWVhciAzMDAwLiBUaGV5IGFyZSBicmFnZ2luZyB0aGF0IHRoZXkgY2FuIGZpbmFsbHkgYnV5IGEgdGlja2V0LiAKVGhhdCBpcyB0byBzYXkgaWYgd2UgcmVtb3ZlIEJsaXp6YXJkIHRvdXJuYW1lbnRzIGZyb20gMjAxOCB0aGVyZSB3b3VsZCBiZSBqdXN0IG92ZXIgJDEgbWlsbGlvbiBpbiBwcml6ZSBtb25leSBzdGlsbCBpbiB0aGUgU0MyLiBUaGF0IGlzIHN0aWxsIGEgaHVnZSBmYWxsIGFuZCB0aGVyZSBiZSBtYW55IHJldGlyZW1lbnRzIChlc3BlY2lhbGx5IGluIEtvcmVhKSBidXQgdGhhdCBpcyBzdGlsbCBhIGxvdCBvZiBwcml6ZSBtb25leS5JdCB3b3VsZCBiZSByZWFsbHkgdG91Z2ggYW5kIG1hbnkgd291bGQgcmV0aXJlIGJ1dCBTQzIgb25saW5lIGFuZCBjb21tdW5pdHkgZHJpdmVuIExBTiBzY2VuZSB3b3VsZCBsaWtlbHkgc3RpbGwgYmUgYXJvdW5kIGRpc2hpbmcgb3V0IGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBkb2xsYXJzIGluIHByaXplIG1vbmV5IHNob3VsZCBCbGl6emFyZCBwdWxsIG91dCBvZiBTQzIgY29tcGV0aXRpdmUgZ2FtaW5nLkhhbWJ1cmdlclRvbSAgMjY4IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvV2VsbCB3ZSBuZXZlciBoYWQgdGhhdCBkZWdyZWUgb2YgInNvY2lhbGlzbSIsIGJ1dCBpbnRlcmVzdGluZ2x5IHRoaXMgY291bnRyeSBkaWQgdHJ5IHRvIHBhc3MgVW5pdmVyc2FsIEhlYWx0aGNhcmUgYWZ0ZXIgV1dJSSBsaWtlIGFsbW9zdCBldmVyeSBvdGhlciBuYXRpb24gZGlkLiAKV2UgbG9vayBmb3J3YXJkIHRvIHdlbGNvbWluZyB5b3UgYmFjayBzb29uIHRvIHRoZSBTaG9yZXMgb2YgU2VyZW5pdHkuIFdpdGggS2luZCBSZWdhcmRzLCBDdXN0b21lciBSZWxhdGlvbnMgTWFuYWdlclJlYWQgbW9yZVJlc3BvbnNlIGZyb20gS2F0YXRoYW5pMSwgR3Vlc3QgUmVsYXRpb25zIE1hbmFnZXIgYXQgS2F0YXRoYW5pIFBodWtldCBCZWFjaCBSZXNvcnRSZXNwb25kZWQgeWVzdGVyZGF5RGVhciBMaXpfQ29yc2UsIFRoYW5rIHlvdSBzbyBtdWNoIGZvciB5b3VyIGdsb3dpbmcgcmV2aWV3IG9mIG91ciBob3RlbCEgV2UgYXJlIHZlcnkgaGFwcHkgdG8gaGVhciB0aGF0IHlvdSBhbmQgeW91ciBGYW1pbHkgZW5qb3llZCB5b3VyIHN0YXkgd2l0aCB1cy4gCkZpbmQgb3V0IG1vcmUgYWJvdXQgUG9rZXIgVGFibGUgQ2xvdGggYW5kIHNlZSBpZiBpdCBpcyByaWdodCBmb3IgeW91IGF0IHRoaXMgdGltZS4gTGVhcm4gbW9yZSBhYm91dCBQb2tlciBUYWJsZSBDbG90aCBhbmQgZW5qb3kgdGhlIGFydGljbGUuCkEgbG90IG9mIHBlb3BsZSB3aG8gbG92ZSB3b3JkcyBoYXZlIHRvIGdldCB0aHJvdWdoIGFuIEVuZ2xpc2ggcHJvZmVzc29yIHBoYXNlIHVudGlsIHRoZXkgZ2V0IGEgZ3JpcCwgYW5kIHRoYXQgbG9va3MgbGlrZSB0aGUgY2FzZSB3aXRoIHRoZSBndXkgd2hvIHdyb3RlIE9QIG1lc3NhZ2UuIFlvdSBjYW4gc2VlIHdoYXQgaGUgdHJ5aW5nIHRvIGFjY29tcGxpc2ggYW5kIGhvdyBpdCBnb2VzIGhpbGFyaW91c2x5IGF3cnkuIEhlIGNsZWFybHkgdW5kZXJzdGFuZHMgdGhlIGdlbmVyYWwgc2hhcGUgb2YgZ29vZCB3cml0aW5nIGFuZCB0cmllcyB0byBpbWl0YXRlIGl0LCBidXQgYWxsIGhlIGNhbiBkcmF3IGlzIGEgcG90YXRvLiBUaGUgb25seSB3YXkgdG8gcGFpbnQgYSBwcmV0dHkgcGljdHVyZSBpcyBwcmFjdGljZSwgYW5kIHRoZSBmaXJzdCBhbmQgdG91Z2hlc3Qgc3RlcCBpcyBsZWFybmluZyBub3QgdG8gaGl0IHNlbmQgdW50aWwgeW91IHByYWN0aWNlZCBlbm91Z2guIEZvciBoaXMgc2FrZSBhbmQgdGhlIE9QIEkgaG9wZSBoZSBmaWd1cmVzIHRoYXQgb25lIG91dCBzb29uIQpMb29rIGF3YXksIGFuZCBub3RoaW5nIGNoYW5nZXM7IHlvdSBtYWtlIHRoZSBzYW1lIG1pc3Rha2UgYWdhaW4gYW5kIGFnYWluLi4gCkVsZGVycyB3aWxsIGRvIGFueSBhbmQgYWxsIHBvc3NpYmxlIHRvIGtlZXAgdGhlIGNoaWxkIHdpdGggdGhlIHRyaWJlLiAKT24gZW4gY29tcG9zYWl0IGRlcyBodWlsZXMgZXQgZGVzIGJhdW1lcyBwYXJmdW1zIHF1J29uIGFwcGxpcXVhaXQgZHZvdGVtZW50IHN1ciBsZXMgc3RhdHVlcyBkZXMgZGl2aW5pdHMsIGRvbnQgb24gZW1iYXVtYWl0IGxlcyBjYWRhdnJlcyBldCBkcG9zYWl0IG1tZSBkZXMgZmxhY29ucyAgbCdpbnRyaWV1ciBkZXMgdG9tYmVzLCBldGMuIEwndXNhZ2Ugcml0dWVsIGR1IHBhcmZ1bSBlc3QgZG9uYyBkZXB1aXMgbG9uZ3RlbXBzIGRqIGZvcnRlbWVudCBtYXJxdS4gCkluc3RlYWQsIHRyeSByZXNwb25kaW5nIHRvICJJIGZlZWwgc28gc3R1cGlkIiBieSBzYXlpbmcgc29tZXRoaW5nIGxpa2UsICJJJ20gc29ycnkgeW91IGZlZWwgdGhhdCB3YXkuIFdoYXQgbWFrZXMgeW91IHRoaW5rIHRoYXQ/IERpZCBzb21ldGhpbmcgaGFwcGVuPyIgVGhpcyBjYW4gb2ZmZXIgYW4gYXZlbnVlIGZvciBhIG1vcmUgcHJvZHVjdGl2ZSBjb252ZXJzYXRpb24uWzRdCkEgcGh5c2ljYWwgZXhhbWluYXRpb24gYnkgYSBwaHlzaWNhbCB0aGVyYXBpc3Qgb3IgZG9jdG9yIHdpdGggYW4gaW50ZXJlc3QgaW4gc3BvcnRzIChwcmVmZXJhYmx5IGN5Y2xpbmcpIHdvdWxkIGJlIG9mIGdyZWF0IHZhbHVlIGJlY2F1c2UgYWNjdXJhY3kgb2Ygc3ltcHRvbSBsb2NhdGlvbiBhbmQgZXhhY2VyYmF0aW9uIGlzIHZlcnkgZGlmZmljdWx0IChub3QgaW1wb3NzaWJsZSkgb3ZlciB0aGUgbmV0LiBGcm9tIHRoZSBsb2NhdGlvbiBvZiBwYWluIHlvdSBkZXNjcmliZSwgb25lIHBvc3NpYmlsaXR5IGlzIHRoYXQgdGhlIGluaXRpYWwgaW5qdXJ5IHdhcyBhbiBhZGR1Y3RvciBzdHJhaW4gd2l0aCByYWRpYXRpb24gYmV5b25kIHRoZSBrbmVlIGpvaW50LiAKMTEgdG8gMTYgZmVhdHVyaW5nIGEgZm91ciBjb3Vyc2UgdGFzdGluZyBtZW51IGZvciAkOTUuIApCeSBjb21wYXJpbmcgdGhpbmdzIGxpa2UgcmFjaXNtLCBob21vcGhvYmlhLCBwZXJzZWN0dXRpb24sIHdhciwgZXRjLiAKRml2ZSBhY2VzICh1c2luZyB0aGUgam9rZXIgYXMgdGhlIGZpZnRoIGFjZSkuCklmIHlvdSBmYWxsIGludG8gdGhpcyBjYXRlZ29yeSwgZG8gbm90IGRlc3BhaXIsIGZvciBpbiB0aGUgdmVyeSBhcHBhbGxpbmcgbmF0dXJlIG9mIHlvdXIgZWZmb3J0cyB5b3UgbWF5IHNob3cgdGFsZW50IHVuaGVhcmQgb2YgaW4gdGhlIGNlbGVicmF0ZWQgYmFyZHMuIApTcGEgVGVjaCBJbnN0aXR1dGUuIApCYXJhIGVuIGhhbHZ0aW1tZSBpIERhbm1hcmsgZ3IgcCBlbiAxNTAwU0VLLiBOb3JkaXNrIHN0YW5kYXJkIGZyIGV0dCBsdWduIHNuYWJiaXMgaSBtZWRlbGt2YWxpdC4gVmVuIG9tIGhhbiBpbnRlIHZpbGwgbGlnZ2EgbWVkIGhlbm5lIG9jaCBuaSBoaXR0YXIgZW4gc3ZlbnNrIGlub20ga29ydCByZXNlYXZzdG5kIHMgcHJhdGFyIHZpIGZvcnRmYXJhbmRlIG9tIGZsZXJhIHR1c2VuLi4gCllvdSBhcmUgZWZmZWN0aXZlbHkgY3V0dGluZyBhIGNvbmUgc2hhcGVkIGNodW5rIG91dCBvZiB0aGUgdG9wIG9mIHRoZSBwdW1wa2luLiBUaGlzIGtlZXBzIHRoZSBsaWQgZnJvbSBmYWxsaW5nIGluLiAKSGUgcGFpZCBleHRyYSBmb3IgRmVkRXggc2hpcHBpbmcgdG8gZ2V0IGl0IGhlcmUgZmFzdGVyLCBpdCBkaWRuIGFuZCBub3cgQkJUUyBpcyB0cnlpbmcgdG8gYWN0IGxpa2UgRWJheS4uIApDb21tZXJjZSBDYXNpbm8gICBTbyBmYXIgdGhpcyBoYXMgYmVlbiBteSBnbyB0byBzcG90LiBEZXNwaXRlIGl0IGJlaW5nIGEgc2hpdCBob2xlIG9mIGEgY2FyZCByb29tICh0aGluayBjb3N0Y28gcG9rZXIpLCB0aGUgNS81IGdhbWUgaGVyZSBpcyB2ZXJ5IHNvZnQgYW5kIHR5cGljYWxseSBwcm92aWRlcyB2ZXJ5IGdvb2QgYWN0aW9uLiAKRGV0dGEga29tbWVyIGZyIG4gZW4gbCBuZyB0aWQgRCBEIHIgZCBvY2ggYmwgYiBja2VyIHAgNzAgdGFsZXQgc29tIGZhbm5zIGlubmUgaSBtaXR0IGh1cywgZWZ0ZXJzb20gbiByIGphZyBrbGV2IHV0YW5mIHIgZnIgbiB0aWQgdGlsbCBhbm5hbi4gRGFnbGlnIHYgcmQgdGlsbGRlbGFzIGNlcnRpZmllcmFkZSB2IHJkZ2l2YXJlIGRldHRhIGludGUgc2t1bGxlIHZhcmEgZW4gYnJhIGFmZiByc21vZGVsbCBmIHIgbiBnb24gb25saW5lIHNwZWwgb3JvLiAKVGhleSB3b3VsZCBzaG93IHlvdS4gCkkgcGxheWVkIHRoZSBkYWlseSBkb25rYW1lbnQgYXQgdGhlIEVtcGlyZSBpbiBMb25kb24uIE5vIGRlbHVzaW9ucyBvZiBncmFuZGV1ciwganVzdCBraWxsaW5nIGEgV2VkbmVzZGF5IGFmdGVybm9vbiBwbGF5aW5nIGEgMzArOCBzaGFsbG93IHN0YWNrZWQgbGl2ZWFtZW50LiBCb3VnaHQgaW4gd2l0aCBhIDUwIG5vdGUgYW5kIGFza2VkIGZvciBteSBjaGFuZ2UgaW4gY2hpcHMsIGludGVuZGluZyB0byBibG93IHRoZSAxMiBpbiB0aGUgcGl0IGR1cmluZyB0aGUgYnJlYWsuIEkgZGlkIG5vdCBtYWtlIGl0IHRvIHRoZSBicmVhaywgYnV0IEkgZHVseSB0b29rIG15IDEyIHRvIGEgYmxhY2tqYWNrIHRhYmxlLiBEaWRuJ3QgZXZlbiBib3RoZXIgdGFraW5nIGEgc2VhdCwganVzdCBkdW1wZWQgbXkgMTIgb24gYW4gZW1wdHkgYm94IGV4cGVjdGluZyB0byBsb3NlIGl0LiBEZWFsZXIgc2F5cyB0aGF0IG15IDEgY2hpcHMgZG9uJ3QgcGxheSwgd2hhdGV2ZXIsIEkgbGVmdCB0aGUgMTAgdGhlcmUuIFdlbGwgd2hhZGR5YSBrbm93LCB0aGUgZGVhbGVyIGdhdmUgbWUgMTAgYWdhaW5zdCBhIDQuIFRoYXQncyBhIG1hbmRhdG9yeSBkb3VibGUgc28gSSByZWFjaCBpbnRvIG15IHBvY2tldCBsb29raW5nIGZvciBhIDIwIG1vcmUgYnV0IGFsbCBJIGhhdmUgaXMgZmlmdGllcy4gSSdtIHBvdCBjb21taXR0ZWQgbm93IGFuZCBidXkgbXkgNTAgd29ydGggb2YgY2hpcHMgc28gbm93IEknbSBpbiBmb3IgNjIgdG90YWwsIHdpbiBteSBkb3VibGUgZG93biBhbmQgYW5vdGhlciBkb3VibGUgZG93biB0aGUgbmV4dCBoYW5kLiBJIHRha2UgYSBzZWF0IGFuZCBwbGF5IGEgbGl0dGxlLCBydW4gaXQgdXAgdG8gMjAwLiBMb3NlIHR3byBoYW5kcyBpbiBhIHJvdyBmb3IgMjAgZWFjaCBhbmQgZmlndXJlIHRoYXQncyBteSBjdWUgdG8gZ28gbmV4dCBkb29yIGFuZCB0aXAgdGhlIGRlYWxlciB0aGUgMiBzaGUgd291bGRuJ3QgbGV0IG1lIGJldC4gQ2FzaCBvdXQgb2YgdGhlIEVtcGlyZSBmb3IgMTYwLgpTb2F0dGFpbmFibGUgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMjQgZGF5cyBhZ28KVGhpcyBwYXJ0aWN1bGFyIGZvb2QgdHJ1Y2sgdGVuZHMgdG8gbWFrZSBpdHMgcm91bmRzIGF0IGEgbWFueSBsb2NhbCBicmV3ZXJpZXMsIGluY2x1ZGluZyBVcHNsb3BlIGluIEJvdWxkZXIgYW5kIEJvb3RzdHJhcCBpbiBMb25nbW9udC4gCllvdSBjb3VsZCBwbGF5IHBva2VyIG9ubGluZSBhdCBzY2hvb2wgaWYgeW91ciBzY2hvb2wgaXMgbm90IGJsb2NraW5nIHdlYnNpdGVzIHRoYXQgYXJlIGZsYWdnZWQgdW5kZXIgdGFnICJHYW1ibGluZyIgb3Igc2ltaWxhci4gClBlb3BsZSBtYWRlIGhvbWVsZXNzIHRocm91Z2ggaGlzIGFjdGlvbnMgaGF2ZW4gbmFtZWQgdGhlaXIgaG9ibyBjYW1wcyBhZnRlciBoaW0geWV0LiAKSW4gdGhlIGNhc2Ugb2YgY2F0YXN0cm9waGljIGZhaWx1cmUgbGlrZSBhIHBlYyB0ZWFyIG9yIGEgaGFuZCBzbGlwIHNpZGVzcG90dGVycyBzdGlsbCB3b3VsZG50IGJlIGFibGUgdG8gcmVhY3QgaW4gdGltZSBiZWZvcmUgdGhlIGJhciBkcm9wcyBvbiBzb21lb25lcyBjaGVzdC4gSSB0aGluayB0aGV5IHNob3VsZCBqdXN0IHVzZSBzYWZldHkgYmFycyBidXQgYXBwYXJlbnRseSB0aGF0IGdldHMgaW4gdGhlIHNpZGUganVkZ2VzIHdheSAobGlrZSBzcG90dGVycyBkb250PyBsbWFvKS4gQnV0IHllYWgsIGlmIGNhdGFzdHJvcGhpYyBmYWlsdXJlIG9jY3VycyBpIGNhbnQgc2VlIGFueSBhbW91bnQgb2Ygc3BvdHRlcnMgbWFraW5nIGEgZGlmZmVyZW5jZSBiZWZvcmUgdGhlIGJhciBoaXRzIHRoZSBwZXJzb25zIGNoZXN0LCBhbmQgaWYgaXRzIG5vdCBjYXRhc3Ryb3BoaWMgdGhlbiAxIHNwb3R0ZXIgc2hvdWxkIHJlYWxseSBiZSBlbm91Z2guLiAKVGhleSB1c2UgbG90cyBvZiBuYXN0eSB0cmlja3MgdGhhdCBkZWJ1ZmYvZGlzcnVwdCB0aGVpciBvcHBvbmVudHMsIHZzIHRoZSByZWJlbHMgYW5kIGltcHMgdGhhdCB1c2UgYWJpbGl0aWVzIHRoYXQgbW9zdGx5IGJvb3N0IHRoZWlyIG93biBzaWRlLiAKU2Vjb25kbHksIGNsYXNzZXMgYXJlIGhhcmQsIGFuZCB0aGV5IGhvbmVzdGx5IGRvbid0IGhlbHAgbWUuIEkgdXNlZCBUViwgYW5kIGp1c3QgdHJpZWQgdG8gZXh1ZGUgbXkgZmF2b3JpdGUgdHYgY2hhcmFjdGVycyAoc2hvdyBoYXMgdG8gYmUgbGl2ZSBhY3Rpb24gYW5kIGFnZSBhcHByb3ByaWF0ZSBmb3IgaXQgdG8gd29yaywgdGhvdWdoLikgSSBoYXZlIHRoaXMgd2hvbGUgbG9uZyBzeXN0ZW0sIEkgY291bGQgUE0geW91IGlmIHlvdSdkIGxpa2UsIGJ1dCBJIHdvbid0IHRha2UgdXAgdG9vIG11Y2ggb2YgeW91ciB0aW1lIGhlcmUgaWYgeW91J2QgcmF0aGVyIG5vdC4KV2UgbmVlZCBiZXR0ZXIgZWR1Y2F0aW9uIGZvciBvdXIgcG9saWNlIGFzIHdlbGwuIFRoZXkgbmVlZCB0byBrbm93IGhvdyB0byBoYW5kbGUgcGVvcGxlIHdpdGhvdXQgdmlvbGVuY2UgZmlyc3QuIAoiSSB0aGluayBpdCBzdGFydHMgd2l0aCBsaXN0ZW5pbmcgYW5kIEkgdGhpbmsgdGhlIG5vbiBibGFjayBhbmQgbm9uIGluZGlnZW5vdXMgY29tbXVuaXRpZXMgaW4gQ2FuYWRhIG5lZWQgdG8gcmVhbGx5IHRha2UgYSBzdGVwIGJhY2sgYW5kIGxpc3RlbiB0byBzdG9yaWVzLCIgaGUgc2FpZC4gCkdldCB0aGlzIHJpZ2h0IGFuZCBnZXQgaXQgbm93IHRoZXJlIGlzIEFCU09MVVRFTFkgbm90aGluZyB3cm9uZyB3aXRoIGJlaW5nIGdheS4gClRoZXkgc3RpbGwgbW92ZSB0aGUgdGF4IGVsc2V3aGVyZSBhbnl3YXlzLiBBbmQgaXQgSVMgYSBjb21wZXRpdGlvbi4gTGl0ZXJhbGx5IHdoYXQgZnJlZSBtYXJrZXQgY2FwaXRhbGlzbSBpcyBhYm91dDogVGhlIGRvbnV0IHNob3AgbmV4dCBkb29yIHNlbGxzIGJldHRlciBkb251dHMgYXQgYSBiZXR0ZXIgcHJpY2UgdGhhbiB5b3VycywgeW91IGV2ZW50dWFsbHkgZ28gb3V0IG9mIGJ1c2luZXNzLiBCdXQsIGluIGFjdHVhbGl0eSwgcmVndWxhdG9yeSBjYXB0dXJlIGxpdGVyYWxseSBtYWtlcyBtb25vcG9saWVzIG91dCBvZiBjZXJ0YWluIGJ1c2luZXNzZXMuIE5vdyBCdWZmZXQgc2VlbXMgbGlrZSBhIHZlcnkgcGhpbGFudGhyb3BpYyBwZXJzb24sIHNvIGl0cyBub3QgYSBob3JyaWJsZSB0aGluZyB0aGF0IGhlIGhhcyB0aGlzIG11Y2ggd2VhbHRoLCBidXQgaXQgaXMgdW5mYWlyLiBUaGUgc2hlZXIgYW1vdW50IG9mIG1vbmV5IGhlIGNvdWxkIHRocm93IGF0IHlvdSwgZGVtb25zdHJhYmx5IG1ha2VzIGl0IHVuZmFpci4KSXQgaXMgaW50ZXJlc3RpbmcgY29uc2lkZXJpbmcgTWV0cm8gaXMgYW4gb3BlbiB3b3JsZCBnYW1lIHdpdGggZGF5L25pZ2h0IGFuZCB3ZWF0aGVyIGN5Y2xlcywgd2hlcmVhcyBCRlYgaGF2ZSB3ZWxsIGRlZmluZWQgbWFwcy4gU28gdmlzdWFscyBpbiBNZXRybyBhcmUgZmFyIG1vcmUgInZhcmlhYmxlIiBjb21wYXJlZCB0byBCRlYuIApTb21lIG9mIHRoZW0gYXJlIHByZXR0eSBleHBvc2VkIGFuZCB2ZXJ5IGF0bW9zcGhlcmljLiAKTWFueSB3aWxsIGV2ZW4gc3BlY2lhbGl6ZSBpbiBjaGlwcyB0aGF0IGFyZSB1cCB0byAxMCBncmFtcy4gSW4gdGhpcyBob3cgdG8gZ3VpZGUsIHlvdSB3aWxsIGxlYXJuIGhvdyB0byB1bmRlcnN0YW5kIGRpZmZlcmVudCBjYXNpbm8gcG9rZXIgY2hpcHMgd2VpZ2h0IGFuZCBhIGxpdHRsZSBiaXQgb2YgdmFsdWFibGUgaW5mb3JtYXRpb24gYWJvdXQgZWFjaC4uIApKdXN0IGJlY2F1c2UgeW91IGxpa2UgYSBzY2VudCwgZG9lc24gbWVhbiB0aGUgcmVjaXBpZW50IHdpbGwuIApMYXN0IEkgY2hlY2tlZCwgbW9zdCBjb21tdW5pdGllcyBpbiBWZXJtb250IGRpZCBub3QgbmVlZCBYTTMxMiBtYWNoaW5lIGd1bnMuIEJ1dCB0aGF0IGhvdyBzdXBwb3NlZGx5IHByb2dyZXNzaXZlIHBvbGl0aWNzIGhhcHBlbiBpbiBWVCBhbmQgdGhlIHJlc3Qgb2YgdGhlIGNvdW50cnkuIEJlcm5pZSBTYW5kZXJzLCB0aGUgc29jaWFsaXN0IFNlbmF0b3IsIHJlZ3VsYXJseSBzdXBwb3J0cyBHZW5lcmFsIER5bmFtaWNzLCB0aGUgZGVmZW5zZSBjb250cmFjdG9yLCBiZWNhdXNlIHRoZXkgImNyZWF0ZSBnb29kIGpvYnMgZm9yIFZlcm1vbnRlcnMuIiBBZG1pdHRlZGx5LCBidWlsZGluZyBndW5zIGdlbmVyYWxseSBwYXlzIG1vcmUgdGhhbiB3b3JraW5nIGF0IFdhbG1hcnQsIGJ1dCBpdCBpcyBoYXJkbHkgInByb2dyZXNzaXZlLiIKTGluY2VjdW0sIGEgQ3kgWW91bmcgaW4gaGlzIGZ1dHVyZT8gVGltIExpbmNlY3VtICgxMSAzLCAyLjcxIEVSQSkgaXMgYSBDeSBZb3VuZyBjYW5kaWRhdGUgdGhpcyB5ZWFyLCBidXQgdGhlIGJ1bGxwZW4gaXMgbm90IGhlbHBpbmcgaGlzIGNhdXNlLCBibG93aW5nIGxlYWRzIGluIGhpcyBsYXN0IHR3byBzdGFydHMuIEluIHRob3NlIHN0YXJ0cywgaGUgdGhyb3duIDE0IGlubmluZ3MsIGdpdmVuIHVwIGp1c3QgdGhyZWUgcnVucyBhbmQgc3RydWNrIG91dCAyNCBiYXR0ZXJzIGFuZCBoYXZlIG5vdGhpbmcgdG8gc2hvdyBmb3IgaXQuIApFbiBTaWJyaWUsIG9uIG1hbmdlIGxlcyB0aWdlcyBlbiBjb21wYWduaWUgZGUgcGFpbiBldCBkZSBiZXVycmUuIFBhciBhaWxsZXVycywgbGVzIHVzYWdlcyBzb250IG11bHRpcGxlcy4gT24gdXRpbGlzZSBsYSBwbGFudGUgZW50aXJlIDogZmV1aWxsZXMgKGVuIGNvbXBvdGUgYXZlYyBkZXMgZnJ1aXRzIGFjaWRlcyksIGpldW5lcyBwb3Vzc2VzIChlbiBzYWxhZGUpLCByYWNpbmVzIChlbiBsZ3VtZSwgY3VpdGVzICBsYSB2YXBldXIpLCBncmFpbmVzIChlbiBsaXF1b3Jpc3RlcmllIDogQ2hhcnRyZXVzZSwgQm5kaWN0aW5lLCBldGMuLCBlbiBwdGlzc2VyaWUsIGVuIHBhcmZ1bWVyaWUpLCBmbGV1cnMgKHBvdXIgYXJvbWF0aXNlciBsZXMgcHRpc3NlcmllcywgbGVzIHNhbGFkZXMgZGUgZnJ1aXRzLCBsZXMgY3JtZXMsIGV0Yy4pLiAKVGhlcmUgYXJlIHNvbWUgc3Ryb25nIHNpbWlsYXJpdGllcyBiZXR3ZWVuIHRoZSB0d28gZGlzZWFzZXMsIGJ1dCB0aGUgaW1wb3J0YW50IGRpc3RpbmN0aW9uIHRvIG1ha2UgaXMgdGhhdCBodW1hbnMgY2Fubm90LCB1bmRlciBhbnkgY2lyY3Vtc3RhbmNlcywgY2F0Y2ggdGhlIEFJRFMgdmlydXMgZnJvbSBhIGNhdC4gCkkgY2FuJ3Qgd2FpdCB0byByZWFkIHRoZSBzZXF1ZWwuQ3JlYW0gb2YgdGhlIENyb3AgKEh1ZHNvbiBWYWxsZXksIDIpIGJ5IEFsaWNlIENsYXl0b25SZWFkIGZvciAzIGggMjYgbWluIG92ZXIgMiBkYXlzTmF0YWxpZSBpcyBzdXBlciBjb25maWRlbnQgd2hlbiBpdCBjb21lcyB0byBtZW4sIGJ1dCBjbGFtcyB1cCB3aGVuZXZlciBzaGUgc2VlcyB0aGUgY2hlZXNlbW9uZ2VyIGF0IHRoZSBsb2NhbCBmYXJtZXJzIG1hcmtldC4gClVTSU5HIENPTlRBSU5FUlMuRm9yIGZ1cnRoZXIgc3BlY2lmaWNzIGFib3V0IGtpbmQgb2Ygc29sdXRpb25zIG9mZmVyZWQgb24gQmx1cmJwb2ludCBhbmQgYWxzbyB0byBlbnF1aXJlIGFib3V0IGRpZmZlcmVudCByYXRlcyBvZiBwYWNrYWdlcyBhY2Nlc3NpYmxlLCB0aGVuIGNvdWxkIHNpZ24gb24gaXRzIG9mZmljaWFsIHdlYnNpdGUuIApUaGUgaGFyZCBsaW5lIFNvdmlldHMgY291bGRuIGV2ZW4gY29udHJvbCB0aGUgU292aWV0IFVuaW9uLCB0aGF0IHdoeSBpdCBmZWxsIGFwYXJ0LiBIb3cgdGhlIGhlbGwgd2VyZSB0aGV5IHNlY3JldGx5IGNvbnRyb2xsaW5nIHBhcGFsIGVsZWN0aW9ucz8gQWxzbyB0aGF0IGlzIGlkaW90aWMsIHNpbmNlIEpQSUkgb25seSBzaGVkIGhpcyBtb3J0YWwgY29pbCBpbiAyMDA1LgpJIGRvbid0IG5lZWQgdG8gZ29vZ2xlIGl0LiAKSSB3b3JrIGFzIGFuIGVtcGxveWVlIGZvciB0aGUgS2FtZSBZdSBkZXBhcnRtZW50IHN0b3JlcywgYW5kIEkgZ2V0IGhvbWUgZXZlcnkgZGF5IGJ5IDggUE0gYXQgdGhlIGxhdGVzdC4gCldoeSBleGFjdGx5IGRvIHdlIG5lZWQgdG8gInVwZGF0ZSIgdGhlc2Ugb2xkIGFkdmVudHVyZXM/IFRoZSBydWxlcyBmb3IgdGhlIGFjdHVhbCBlbmNvdW50ZXJzIC8gZHVuZ2VvbnMgYXJlbiB0aGF0IGRpZmZlcmVudCwgbWF5YmUgZW5jb3VudGVycyBnZXQgYSB0b3VjaCBvZiByZWJhbGFuY2luZywgYnV0IHJlYWxseSB3aGF0IGFsbCBpcyAibmV3IiBpbiB0aGVzZSByZSByZWxlYXNlcz8gSSBsaWtlIHRvIHNlZSBtb3JlIHJ1bGVzIG1vcmUgc2V0dGluZ3MgbW9yZSBtb25zdGVycyBidXQgaWYgSSB3YW50IHRvIHJ1biB0aGVzZSBvbGQgQUQgbW9kdWxlcywgSSBjYW4ganVzdCBvcGVuIHRob3NlIGJvb2tzIGFuZCBydW4gdGhlbS4uIApZb3UgZmFpbGVkIHRvIG1lbnRpb24gYW55IHJlYXNvbnMgdGhhdCBtYWtlIFVNTiBnbyBhYm92ZSBhbmQgYmV5b25kIG92ZXIgdXMuIFNvIHRoZSBhcnR3b3JrIG1ha2VzIHRoZW0gYmV0dGVyPyBUaGF0J3Mgd2hhdCB3ZSBuZWVkIGlzIG5ldyBhcnR3b3JrIHRoZXJlPz8gWW91IG1lbnRpb24gdGhlIHN0dWRlbnQgcnVuIGNvbW1pdHRlZSBldmFsdWF0ZXMgdGhlbSB3ZWxsIGJ1dCBJIGhhZCBhbHJlYWR5IG1lbnRpb25lZCB0aGlzLiBJIHdhbnQgdG8ga25vdyB3aHkuIFdlIHdhbnQgdG8ga25vdyBob3cuIFNvIHdlIGNhbiBnZXQgYmV0dGVyIGF0IGl0IHRvby4KRGVjaW5lIFRyYWRpdGlvbm5lbGxlIGNoaW5vaXNlClRoZSB0cnV0aCBvZiB0aGUgbWF0dGVyIGlzIHRoYXQgZnVybml0dXJlIHRoYXQgd2FzIGRlc2lnbmVkIGZvciBnYW1ibGluZyBoYXMgYSBsb3QgbW9yZSB0byBkbyB3aXRoIHRoZSBmdW4gb2YgdGhlIGdhbWUgdGhhbiB5b3UgbWlnaHQgdGhpbmssIGFuZCBpZiB5b3UgYXJlIGludmVzdGVkIGluIHlvdXIgcG9rZXIgbmlnaHRzIGFuZCB5b3Ugd2FudCBldmVyeW9uZSB0byBiZSBjb21mb3J0YWJsZSwgeW91IHdpbGwgZmluZCB0aGF0IHRoZXJlIGFyZSBtYW55IGRpZmZlcmVudCBvcHRpb25zIHRoYXQgYXJlIGF2YWlsYWJsZSBmb3IgeW91LiBUYWtlIHNvbWUgdGltZSBhbmQgcmVhbGx5IGZpZ3VyZSBvdXQgd2hhdCBvcHRpb25zIGFyZSBnb2luZyB0byBzdWl0IHlvdSB3ZWxsLCBhbmQgcmVhbGx5IGNvbnNpZGVyIHdoYXQgaXMgZ29pbmcgb24gd2hlbiB5b3UgbG9vay4gV2hlbiB5b3Ugd2FudCB0byBtYWtlIHN1cmUgdGhhdCB5b3UgYW5kIHlvdXIgZ3Vlc3RzIGFyZSByZWFsbHkgZW5qb3lpbmcgdGhlIGdhbWUgaW4gZ2VuZXJhbCwgZmlndXJlIG91dCB3aGF0IGEgZ3JlYXQgOTYgSW5jaCBUZXhhcyBIb2xkZW0gVGFibGUgV2l0aCBSZWQgRmVsdCBjYW4gZG8gZm9yIHlvdXIgZ2FtaW5nIGVudmlyb25tZW50Li4gCkJpbmQgeW91cnNlbGYgdG8gYSB0aW1lbGluZSwgcGVyaGFwcyBmb3IgdGhyZWUgbW9udGhzLCBpbiB3aGljaCB0byBtZWV0IHlvdXIgY2FyZWVyIG9iamVjdGl2ZXMuLiAKIldlIHNoYXJlIGEgY29tbW9uIGdvYWwsIHRvIHN1cHBvcnQgbWVtYmVycyBvZiBQYXJsaWFtZW50IHdpdGggdmFsdWVzIHN1Y2ggYXMgaW1wYXJ0aWFsaXR5IGFuZCBleGNlbGxlbmNlLCIgc2F5cyBTdXNhbiBLdWxiYSwgc2VuaW9yIGRpcmVjdG9yLCBSZWFsIFByb3BlcnR5IGFuZCBFeGVjdXRpdmUgQXJjaGl0ZWN0LiAiV2UncmUgdmVyeSBwcm91ZCB0byB3b3JrIGhlcmUgICBpdCdzIGEgY3VsdHVyZSB3aGVyZSBwZW9wbGUgZmVlbCB0aGV5J3JlIHNlcnZpbmcgYSBncmVhdGVyIHB1cnBvc2UuIFRoYXQgdW5pdGVzIHVzIGFuZCBmb3N0ZXJzIHVuaXF1ZSByZWxhdGlvbnNoaXBzLiIuIApCYXJ5bGEgbW90aGVyKSBnaWZ0ZWQgdGhlIHJpZ2h0IG9mIHN1cnZpdm9yc2hpcCBidXQgdG8gd2hvbT8gSWYgKE1yLiBCYXJ5bGEgbW90aGVyKSBtYWRlIHRoZSBnaWZ0IHRvIE1yLiBCYXJ5bGEsIHRoZW4gb24gaXRzIGZhY2UgaXQgd291bGQgcXVhbGlmeSBhcyBleGNsdWRlZCBwcm9wZXJ0eSB1bmRlciBzLiAKSWYgeW91IGVuam95IHRoZSBsb29rIGFuZCBmZWVsIG9mIG9sZCBjYXNpbm8gcG9rZXIgY2hpcHMsIHlvdSBzaG91bGQgY29uc2lkZXIgaW52ZXN0aW5nIGluIHRob3NlIHRoYXQgYXJlIG1hZGUgb2YgY2xheS4gSW4gdGhpcyBob3cgdG8gZ3VpZGUsIEkgd2lsbCBwcm92aWRlIGEgZmV3IHBvaW50ZXJzIG9uIHdoYXQgeW91IHNob3VsZCBsb29rIGZvciBhbmQgY29uc2lkZXIgd2hlbiBtYWtpbmcgdGhpcyB0eXBlIG9mIHB1cmNoYXNlLiBJbiB0b2RheSdzIG1hcmtldCBvZiBwb2tlciBhY2Nlc3NvcmllcywgYm90aCBuZXcgYW5kIHVzZWQsIGl0IGlzIGVhc3kgdG8gZ2V0IGEgYml0IGxvc3QgaW4gdGhlICJtaXgiIG9mIHRoaW5ncy4gWW91IGNhbiBmaW5kIG1hbnkgZGlmZmVyZW50IGluZGl2aWR1YWwgY2hpcHMsIHBva2VyIHNldHMsIGFuZCBvdGhlciB2YXJpZXRpZXMgb2YgY2xheSBjYXNpbm8gcG9rZXIgY2hpcHMuIEhvd2V2ZXIsIGRlcGVuZGluZyBvbiB5b3VyIG5lZWRzIGFuZCB3YW50cywgbm90IGFsbCB0aGF0IGlzIGF2YWlsYWJsZSBtYXkgYmUgcmlnaHQgZm9yIHlvdSEKTWFraW5nIGFuIGFwcHJvcHJpYXRlIHJlZmxlY3Rpb24gaW52b2x2ZXMgbm90IG9ubHkgaWRlbnRpZnlpbmcgYWNjdXJhdGVseSB0aGUgY2xpZW50J3MgZmVlbGluZ3MgYnV0IGFsc28gc2VsZWN0aW5nIHdpdGggc2Vuc2l0aXZpdHkgdGhlIGFwcHJvcHJpYXRlIHRpbWUsIHRvbmUgb2Ygdm9pY2UgYW5kIHdvcmRzIHRvIGNvbnZleSB0aGlzIHRvIHRoZSBvdGhlci4gVGhlIGFpbSBvZiBhIHJlZmxlY3Rpb24gaXMgdG8gaGVscCB0aGUgb3RoZXIgZmVlbCB1bmRlcnN0b29kLCBhY2NlcHRlZCBhbmQgZW5jb3VyYWdlZCB0byBzaGFyZSBtb3JlIG9mIHRoZWlyIGZlZWxpbmdzLiBJdCBpcyBhbHNvIGltcG9ydGFudCB0byBiZSB0ZW50YXRpdmUgaW4gdGhlIHdheSBpbiB3aGljaCBzL2hlIG1ha2VzIHRoZSByZWZsZWN0aW9uLlBlcnNvbjogSSdtIGp1c3Qgd2FzdGluZyB5b3VyIHRpbWUuIApOb3QgcHJldGVuZGluZy4gVGhhdCdzIGEgcGFydCBvZiBpdCBidXQgSSBzdGlsbCBhc3NlcnQgaXQgd2FzIHRoZSBtaW5vcml0eSBhbmQgd2FzIHNwZWNpZmljYWxseSB3aGF0IFRydW1wIG1lYW5zIHdoZW4gaGUgc2F5cyBkZWVwIHN0YXRlIGJ1dCB0aGUgZGVlcGVyIG1vcmUgZW50cmVuY2hlZCBkZWVwIHN0YXRlIHdhcyB0aGUgb25lIG9yY2hlc3RyYXRpbmcgdGhlIG92ZXJ0aHJvdyBvZiB0aGUgc21hbGxlciBuZW9saWIgZ3JvdXAuCkJhY2tzdG9yeTogUmV1cGxvYWRlZCBiZWNhdXNlIEkgcG9zdGVkIHRoZSB3cm9uZyBsaW5rLiAKRi4gCkNvbXBhbnkgQ0VPIE1hdHRoZXcgQ29ycmluIHNheXMgdGhlIGNvbXBhbnkgaGFzIGEgbG90IG9mIHdvcmsgdG8gZG8gaW4gdGhlIHllYXIgYWhlYWQgYW5kIHdpbGwgZm9jdXMgb24gc2ltcGxpZnlpbmcgaW4gc3RvcmUgb3BlcmF0aW9ucywgaW1wcm92aW5nIGl0cyBtZW51LCBhbmQgaW52ZXN0aW5nIG1vcmUgaW4gbWFya2V0aW5nIGFuZCB0ZWNobm9sb2d5Lgo1MikgUG9rZXIgRmFjZS8gU3BlZWNobGVzcy8gWW91ciBTb25nIHcvRWx0b24gSm9obiAoTWVkbGV5KS4gR2V0IGl0IG9uIGlUdW5lcy4gNTMpIEhlbGxvIEhlbGxvIGJ5IEVsdG9uIEpvaG4gKGZlYXQuIApBbGwgdGhlIHNjaG9vbHMgSSBoYXZlIHZpc2l0ZWQgd2VyZSBleHRyZW1lbHkgaW1wcmVzc2l2ZS4gVGhleSBhbGwgaGF2ZSBncmVhdCBjbGFzc2VzLCBleHRyYSBjdXJyaWN1bGFyIGFjdGl2aXRpZXMgYW5kIGNhbXB1cyBsaWZlLiAKTXIgQ2hhbWJlcmxhaW4gc2FpZCBoZSB3YXMgc3RpbGwgZXN0YWJsaXNoaW5nIHRoZSBmaW5hbmNpYWwgc3RhdGUgb2YgdGhlIGNvdW50cnkgY2x1YiBhbmQgZGVjbGluZWQgdG8gbm9taW5hdGUgYW55IGZpZ3VyZXMuICJUaGVyZSBpcyBub3QgYSBsb3Qgb2YgZGVidCwgbW9zdCBvZiBpdCBpcyBzZWN1cmVkIHRvIGEgYmFuayBvciB0aGUgVmljdG9yaWFuIExpcXVvciBhbmQgR2FtaW5nIFJlZ3VsYXRvciBpbiByZXNwZWN0IG9mIGVsZWN0cm9uaWMgZ2FtaW5nIGVudGl0bGVtZW50cywiIE1yIENoYW1iZXJsYWluIHNhaWQuIApCdXkgc29tZSB0aW4gc25pcHMsIGEgaGFtbWVyLCBhIHNoZWV0IG9mIG1ldGFsLCBhbmQgc29tZSB0aGluIHJvZC4gVGhleSByZWFsbHkgZWFzeSB0byBtYWtlIGFuZCB5b3UgY2FuIGZpbmQgdGhlIHBhdHRlcm5zIHRvIGN1dCBmb3IgYWxsIHRoZSBwZXRhbHMgdGhlbiB5b3UganVzdCBoYW1tZXIgZW0gb3ZlciBhbmQgc3RpY2sgZW0gdG9nZXRoZXIgc29tZWhvdy4gCk9mIGNvdXJzZSB5b3UgZG8sIGJ1dCBpdCBpcyBTSUdOSUZJQ0FOVExZIHNtYWxsZXIgdGhhbiBlbiBJQ0UgZW5naW5lLgpJIGRvbid0IGtub3csIHdlJ3ZlIGJlY29tZSBnb29kIGZyaWVuZHMgd2l0aCBvdXIgbmVpZ2hib3JzICAgZW5naW5lZXIgYW5kIFBBLiAKVGhlIGNoaWVmIGZpY3Rpb25hbCBjaGFyYWN0ZXIgLiAKMikgQmVnaW5uZXIvY29tbW9uIHF1ZXN0aW9ucyBoYXZlIGFsbCBiZWVuIGFza2VkIGFuZCBhbnN3ZXJlZCBtYW55IHRpbWVzIG92ZXIuIElmIHlvdSBoYXZlIGEgYmVnaW5uZXIvY29tbW9uIHF1ZXN0aW9uLCBwbGVhc2Ugc2VhcmNoIHVzaW5nIGdvb2dsZSBhbmQgUmVkZGl0IHNlYXJjaCwgYW5kIGNoZWNrIHRoZSBzdWIgRkFRIGFuZCBCZWdpbm5lciBHdWlkZSBmb3IgeW91ciBhbnN3ZXJzLiBJZiB5b3UgY2FuIGZpbmQgZXhhY3RseSB3aGF0IHlvdSBhcmUgbG9va2luZyBmb3IsIHBvc3QgaW4gdGhlIGRhaWx5IHRocmVhZC4KSG90TmF0dXJlZCAgMTUgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpXaGlsZSBJIHRoaW5rIHRoYXQgQ1JJU1BSL0NhczkgbWVkaWF0ZWQgZ2Vub21lIGVkaXRpbmcgaXMgb25lIG9mIHRoZSBiaWdnZXN0IGJyZWFrdGhyb3VnaHMgaW4gcmVjZW50IGhpc3RvcnksIHlvdSBoYXZlIHRvIGFkbWl0IHRoYXQgd2hpbGUgIkdNTyBiYWQiIGlzIG5vdCBhIHJlYXNvbmFibGUgc3RhdGVtZW50LCB0aGUgbmV3bmVzcyBvZiB0aGlzIHRlY2hub2xvZ3kgd2FycmFudHMgc29tZSBjYXV0aW9uLiBJIHdvdWxkIHBvaW50IHRvIHRoZSBkZXZlbG9wbWVudCBvZiByZXNpc3RhbmNlIHRvIEJ0IHRveGlucyBmb3VuZCBpbiBzZXZlcmFsIHNwZWNpZXMgb2YgY29ybiBhbmQgY290dG9uIHBlc3RzIGFzIGV2aWRlbmNlIG9mIHRoZSBwb3RlbnRpYWwgcmFtaWZpY2F0aW9ucyBvZiB0aGUgcHVzaGluZyB0cmFuc2dlbmljIEROQSB0byBhY2NvdW50IGZvciBzdWNoIGEgbGFyZ2UgcGVyY2VudGFnZSBvZiBBbWVyaWNhJ3MgY3JvcCB5aWVsZC4uIApBIGJpdCBlYXJseSwgYnV0IGJhZCB3ZWF0aGVyIGlzIGluIHRoZSBmb3JlY2FzdCwgc28gaGUgbWlnaHQgYmUgcGxhbm5pbmcgdG8gaGFuZyBiYWNrIGFuZCBsZXQgTmljIGJyZWFrIHRyYWlsIGZvciBoaW0gYW5kIEplc3NpZSBSb3llciAoY3VycmVudGx5IHRoaXJkOyBKb2FyIGp1c3QgcGFzc2VkIGhlciBhcyBJIHdhcyB3cml0aW5nIHRoaXMhISkuIApCbGFja291dHMgbmV2ZXIgaGFybSBhbnkgYXBwbGlhbmNlcyAgIGVsZWN0cm9uaWMgb3IgbW90b3JpemVkLiAKVGhlIHdlYWsgYW5kIGZyYWdpbGUgZXF1aWxpYnJpdW0gYmV0d2VlbiB0aGUgbWlsaXRhcnkgYW5kIGNpdmlsaWFuIGdvdmVybm1lbnQgaXMgb2Z0ZW4gcHJvamVjdGVkIGFzIGEgY29uZmxpY3QgYmV0d2VlbiBoZXJvaWMgcG9saXRpY2lhbnMgZmlnaHRpbmcgZm9yIGRlbW9jcmFjeSBhbmQgdGhlIGFzcGlyaW5nIGF1dG9jcmF0cyB0aGF0IHJ1biB0aGUgbWlsaXRhcnkuIEJ1dCB0aGlzIGJpbmFyeSBwcmVzZW50YXRpb24gb2YgdGhlIGR5bmFtaWMgYmV0d2VlbiB0aGUgbWlsaXRhcnkgYW5kIHRoZSBjaXZpbGlhbiBsZWFkZXJzaGlwIGlzIGRlZXBseSBmbGF3ZWQuIEluIHRydXRoLCBQYWtpc3RhbmkgZGVtb2NyYWN5IGlzIHBsYWd1ZWQgYnkgYSBtb3JlIGNvbXBsZXggcHJvYmxlbS4gCkl0IGlzIG5vdCB1bmhlYXJkIG9mLiAKQXBwYXJlbnRseSwgaGlzIGdyYW5kc29uJ3MgZW5kIGdvYWwgd2FzIHRvIGtlZXAgaGlzIGdyYW5kZGFkIGNyeW9nZW5pY2FsbHkgZnJvemVuIGZvciBhbiBldmVudHVhbCByZWVtZXJnZW5jZSBpbnRvIHRoZSB3b3JsZCBvZiB0aGUgbGl2aW5nLi4gCkRvbid0IGtub3cgaWYgdGhpcyB3YXMgYSBzY3VtIG1vdmUgb3Igbm90IGJ1dCAkMTUwMCBpcyBhIGxvdCBvZiBtb25leSB0byB1cyBzbyB3ZSB3YW50IGl0IGJhY2sgZXNwZWNpYWxseSBpZiBzb21lb25lIHdhcyBjaGVhdGluZyBmb3IgbW9zdCBvZiB0aGUgZ2FtZS4gCkl0cyBub3RoaW5nIGFtYXppbmcsIGJ1dCB0aGUgc2VudGltZW50IGFuZCBzeW1ib2wgb2YgdGhlIGFsbW9zdCB0ZW4geWVhciBmcmllbmRzaGlwIG1hZGUgaXQgdmVyeSBpbXBvcnRhbnQgdG8gbWUuLiAKU29tZSBvZiBteSBmYXZvcml0ZSByZWFkcyBhcmUga2luZGEgbWlkZGxlIHNjaG9vbCBsZXZlbCwgYnV0IHRoZXkgc3RpbGwgaGF2ZSBhIGh1Z2UgaW1wYWN0IG9uIG1lIHRvZGF5LiAKQmlsbGlvbmFpcmVzLCBlbnRlcnRhaW5lcnMgYW5kIGF0aGxldGVzIGFsaWtlIGFubm91bmNlZCB0aGVpciBpbnRlbnRpb25zIHRvIHB1cnN1ZSB0aGUgTG9zIEFuZ2VsZXMgQ2xpcHBlcnMgd2l0aCB2YXJ5aW5nIGRlZ3JlZXMgb2Ygc2VyaW91c25lc3MgV2VkbmVzZGF5LCBwcm92aW5nIHRoZSBsb25ndGltZSBsb3NlcnMgd2lsbCBiZSBxdWl0ZSBhIHByaXplIGlmIHRoZSBOQkEgaXMgYWJsZSB0byB3cmVzdCBjb250cm9sIG9mIHRoZSB0ZWFtIGF3YXkgZnJvbSBEb25hbGQgU3RlcmxpbmcgYWZ0ZXIgaGlzIGxpZmV0aW1lIGJhbiBmb3IgcmFjaXN0IHJlbWFya3MuIApHYW1lIHVwZGF0ZSAocGF0Y2gpIHRvIE1ldGFsIEdlYXIgU29saWQgMjogU3Vic3RhbmNlICwgYShuKSBhY3Rpb24gZ2FtZSwgdi4yLjAsIGFkZGVkIG9uIC4gCkZvciBjb250ZXh0LCB0aGUgQ2hpY2FnbyBmaW5hbmNlIGRlcGFydG1lbnQgbWFpbnRhaW5zIGEgcmljaCBsZWdhY3kgYXNzb2NpYXRlZCB3aXRoIGhhdmluZyBlc3RhYmxpc2hlZCwgYW5kIHN1Y2Nlc3NmdWxseSBkZWZlbmRlZCwgdGhlIEVmZmljaWVudCBNYXJrZXQgSHlwb3RoZXNpcyAoRU1IKS4gCkkgd291bGQgdGhpbmsgbW9zdCBwZW9wbGUgd291bGQgZmluZCB0aGlzICJvZmZlbnNpdmUiIGJ1dCBpdCB3b3VsZCBiZSBoYXJkIHRvIGxlZ2FsbHkgcHJvdmUgdGhhdCB0aGUgaW50ZW50IGlzIHNleHVhbCBvciB3aGF0ZXZlci4gCk1hY2hpbmVzIGF0IHRoZSBBbGwgU2Vhc29ucyBIb3RlbCBjb2xsZWN0ZWQgJDkuNyBtaWxsaW9uIHdoaWxlIEJlbmRpZ28gU3RhZGl1bSdzIG1hY2hpbmVzIHRvb2sgJDYuOSBtaWxsaW9uLiBDYW1wYXNwZSBTaGlyZSBnYW1ibGVycyBzcGVudCAkOC4yIG1pbGxpb24gd2l0aCB0aGUgaGlnaGVzdCB0YWtpbmdzIGF0IHRoZSBFY2h1Y2EgV29ya2VycyBhbmQgU2VydmljZXMgQ2x1Yi4gClRoZSBiaWdnZXN0IGlzIG9mIGNvdXJzZSBjb250YWdpb24gcmVhc29ucywgaWYgc2hlIGlsbCB5b3UgY291bGQgbG9zZSB0aGUgd2hvbGUgZmxvY2suIApMeWxlIExlaXB6aWdlciwgY2hpZWYgb2YgcGxhc3RpYyBzdXJnZXJ5IGF0IExvbmcgSXNsYW5kIEpld2lzaCBNZWRpY2FsIENlbnRlciBhbmQgTm9ydGggU2hvcmUgVW5pdmVyc2l0eSBIb3NwaXRhbCwgc2F5cyBpdCdzIGltcG9ydGFudCB0byBhdm9pZCBhc3BpcmluLCBncmVlbiB0ZWEgYW5kIG90aGVyIHRoaW5ncyB0aGF0IGNhbiBpbnRlcmZlcmUgd2l0aCBibG9vZCBjbG90dGluZy4gClB1cGlsIGRpbGF0aW9uOiBUaGUgaHVtYW4gZmlnaHQgb3IgZmxpZ2h0IHJlYWN0aW9uIGlzIHNvbWV0aGluZyBmZXcgcGVvcGxlIGNhbiBjb250cm9sOyB0aGUgYnJhaW4gc2lnbmFscyB0aGUgYm9keSB0byBkdW1wIGFkcmVuYWxpbmUgaW50byB0aGUgYmxvb2RzdHJlYW0gcmFpc2luZyB0aGUgaGVhcnQgcmF0ZSBhbmQgZGlsYXRpbmcgdGhlIHB1cGlscyAobWFraW5nIHRoZW0gbGFyZ2VyKS4gCklmIHlvdSBhcmUgdW5oYXBweSB3aXRoIHRoZSBpbml0aWFsIFNjcmVlbmluZyBPZmZpY2VyIGRlY2lzaW9uIHlvdSBjYW4gcmVxdWVzdCBhIHNlY29uZCBhbmQgZmluYWwgcmV2aWV3IHdpdGggYW4gQWRtaW5pc3RyYXRpdmUgUGVuYWx0eSBUcmlidW5hbCBIZWFyaW5nIE9mZmljZXIuIFRoaXMgaXMgeW91ciBjaGFuY2UgdG8gaGF2ZSBhIGZ1bGwgaW4gcGVyc29uIGhlYXJpbmcgaWYgdGhhdCBpcyB3aGF0IHlvdSB3YW50LiAKSXQgcmVhbGx5IG5vdCBva2F5LCBidXQgYW5kIGEgY2hpbGQgYWdlIHlvdSBjYW4gdGVhY2ggbG9naWMgaW4gc2NpZW5jZSBvciByZWxpZ2lvdXMgVGhlb3J5IGZvciB0aGF0IG1hdHRlciB3ZWxsIGVub3VnaCBmb3IgeW91IGFuZCB0aGVtIHRvIHJlbWFpbiBpbXBhcnRpYWwuIApJdCBzZWVtcyBsaWtlIFdhcnJlbiBpcyBqdXN0IHRyeWluZyB0byBjYXJ2ZSBvdXQgc29tZXRoaW5nIGRpZmZlcmVudCBoZXJlIHRvIHJ1biBvbi4gCkRydWdzIHdoaWNoIGFjdGl2YXRlIGRvcGFtaW5lIHJlY2VwdG9ycyBkaXJlY3RseSB1c3VhbGx5IGNhdXNlIHZvbWl0aW5nLiBSZW1lbWJlciwgdGhlIGJyYWluIGlzbiBqdXN0IGEgYmlvY2hlbWljYWwgc291cC4gVGhlIHRpbWluZyBhbmQgbG9jYXRpb24gb2YgbmV1cm90cmFuc21pdHRlciByZWxlYXNlIG1hdHRlcnMuTGVvTWFyaXVzICAxMzkgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29BKSBUaGVyZSBhcmUgMTIgYXBwcm9wcmlhdGlvbnMgYmlsbHMuIEluIFNlcHRlbWJlciwgNSB3ZXJlIHBhc3NlZCBpbnRvIGxhdzogRGVmZW5zZSwgVmV0ZXJhbnMsIEhIUywgTGVnaXNsYXRpdmUsIGFuZCBFbmVyZ3kvTmF0dXJhbCBSZXNvdXJjZXMuIApQZW1vdCwgQXJ0aHVyIEhhcnJpcywgTG91aXMgTGVobmhlcnIsIFJveSBBcm5vbGQgYW5kIFN0dWFydCBQYXVsLiBMdW5jaGVvbiB3YXMgc2VydmVkIGJ5IHRoZSBndWlsZCBvZiB0aGUgY2h1cmNoLiBQcmVzZW50IE11c2ljIE11c2ljYWwgc2VsZWN0aW9ucyB3ZXJlIHByZXNlbnRlZCBkdXJpbmcgdGhlIG9wZW5pbmcgb2YgdGhlIGFmdGVybm9vbiBzZXNzaW4gYnkgTW1lcy4gCk1pbGxlckNvb3JzIGlzIGFsc28gcGxhbm5pbmcgdG8gcmFpc2UgdGhlIHByb2ZpbGUgb2YgdGhlIGluZ3JlZGllbnRzIGluIGl0cyBiZWVycyBidXQgaXQgaXMgc3RvcHBpbmcgc2hvcnQgb2YgYWRkaW5nIHRoZSBzYW1lIGtpbmQgb2Ygc2VydmluZyBmYWN0cyBwYW5lbCBCdWQgTGlnaHQgaXMgdXNpbmcuIFRoZSBzaXRlIGluY2x1ZGVzIGEgbGluayB0byBhIGNoYXJ0IHdpdGggZGV0YWlsZWQgaW5mb3JtYXRpb24gb24gaW5ncmVkaWVudHMgYW5kIG51dHJpdGlvbmFsIGNvbnRlbnQgZm9yIGFsbCBvZiBpdHMgYmVlcnMuClVuYmVrbm93biB0byBtZSwgaG93ZXZlciwgSSBoYWQgYWN0dWFsbHkgc3RhcnRlZCB0byBlbmdhZ2UgaW4gcXVhbGl0eSBpbXByb3ZlbWVudCBhY3Rpdml0aWVzIGF0IHRoZSBlbmQgb2YgbXkgRjEgeWVhci4gSSBzdGFydGVkIGEgam9iIGluIGVtZXJnZW5jeSBtZWRpY2luZSBhZnRlciBteSBGMSBqb2IgaW4gb25jb2xvZ3ksIGFuZCBJIG5vdGljZWQgdGhhdCB0aGUgZ3VpZGVsaW5lcyBvbiBuZXV0cm9wZW5pYyBzZXBzaXMgYW50aWJpb3RpY3Mgd2VyZSByZWxhdGl2ZWx5IHVua25vd24gYW5kIGV2ZW4gbGVzcyBmcmVxdWVudGx5IGltcGxlbWVudGVkLgpUZW4gcHV0IGluIHRoZSBzYW1lIG1vbmV5IGl0IGdhdmUgeW91IGJhY2sgYW5kIGNob29zZSB5b3VyIGRyaW5rIGFnYWluIHRoaXMgdGltZSBsZXQgdGhlbSBjb21lIG91dCBhbmQgcmVjZWl2ZSB0d28gZm9yIG9uZSBwcmljZS4gCkFoIG1hbiBJIHRob3VnaHQgaXQgd2FzIGp1c3QgbWUsIEkgc2ltdWxhdGUgRkEgQ3VwIGRyYXdzIGZyb20gdGhlIHJvdW5kIG9mIDMyLCBJIGRyYXcgdGhlIGdhbWVzIG91dCBvZiB0aGUgYmFnLCB0aGVuIGhhdmUgMCAxIDIgMyA0IDUgaW4gdGhlIGJhZyB0byBzaW11bGF0ZSB0aGUgc2NvcmVzIG9mIHRoZSBnYW1lcy4gSSBhbHdheXMgYmUgZ3V0dGVkIHdoZW4gSSBkcmV3IG15IHRlYW0gYXMgYSBsb3NzLi4gCkkgc29ycnksIGJ1dCB3ZSBkb24gYWxsb3cgcXVlc3Rpb25zIG9uIC9yL0Fza0hpc3RvcmlhbnMsIGFuZCBzbyB3ZSBoYXZlIHJlbW92ZWQgdGhpcyBzdWJtaXNzaW9uLiBJdCBub3QgdGhhdCB0aGUgcXVlc3Rpb24gaXMgYmFkOyBpdCBpcyBzaW1wbHkgdGhhdCwgZ2l2ZW4gdGhlIHJ1bGVzIG9mIHRoaXMgc3VicmVkZGl0LCB0aGVzZSB0eXBlcyBvZiBxdWVzdGlvbnMgYXJlIGlsbCBzdWl0ZWQgdG8gaXRzIGZvcm1hdC4gV2UgZm91bmQgdGhhdCB0aGV5IHRlbmQgdG8gZ2V0IHJlc3BvbnNlcyBhbG9uZyB0aGUgbGluZXMgb2YgInRoZSBmaXJzdC9sYXN0IGV4YW1wbGUgSSBrbm93IG9mLCIgb3IgZWxzZSBtYW55IHNob3J0LCBzcGVjdWxhdGl2ZSByZXNwb25zZXMgaW4gdGhlIGNhc2UgdGhhdCB0aGUgYW5zd2VyIHdlbnQgdW5yZWNvcmRlZC4gCkplcnJ5IEJ1c3MsIG93bmVyIG9mIHRoZSBMb3MgQW5nZWxlcyBMYWtlcnMsIGhhcyBydW4gdGhyb3VnaCAkMTAsMDAwIGluIHBvY2tldCBjaGFuZ2UuIAoxOSBXYXNoaW5ndG9uIFN0YXRlIGJlYXRzIFV0YWggMzMgMjVXYXNoaW5ndG9uIFN0YXRlIHYgVXRhaFNBTFQgTEFLRSBDSVRZLCBVVCAgIE5PVkVNQkVSIDExOiBRdWFydGVyYmFjayBMdWtlIEZhbGsgNCBvZiB0aGUgV2FzaGluZ3RvbiBTdGF0ZSBDb3VnYXJzIGxvb2tzIHRvIHBhc3MgdGhlIGJhbGwgZHVyaW5nIHRoZWlyIGdhbWUgYWdhaW5zdCB0aGUgVXRhaCBVdGVzIGF0IFJpY2UgRWNjbGVzIFN0YWRpdW0gb24gTm92ZW1iZXIgMTEsIDIwMTcgaW4gU2FsdCBMYWtlIENpdHksIFV0YWguIApXaGljaCBjb250ZXN0YW50cyBkbyB5b3UgdGhpbmsgd2lsbCBtYWtlIGl0IHRvIHRoZSB0b3AgMz8gV2hvIGRvIHlvdSB0aGluayB3aWxsIGJlIHRoZSBzZWFzb24ncyBkYXJrIGhvcnNlPyBIZWFkIHRvIHRoZSBjb21tZW50cyB0byBkaXNjdXNzIHRocm91Z2hvdXQgdGhlIGVwaXNvZGUhCllvdSBjb3VsZCBhbHNvIHRyeSB1c2luZyB5b3VyIGxlZnRvdmVyIGNvZmZlZSBncm91bmRzIHRvIGNvbWJhdCBjZWxsdWxpdGUuIApQZW9wbGUgYXJlIGdvbm5hIGRpZSBhbmQgc2FkbHksIHNvbWUgc3RvcmllcyBhcmUgZ29ubmEgYmUgZm9yZ290dGVuLiAKSWwgbidlc3QgcGFzIHRyb3AgdGFyZCBwb3VyIHByZW5kcmUgcXVlbHF1ZXMgbWludXRlcyBwb3VyIHJmbGNoaXIgIGNlIHF1aSB2b3VzIGF2YWl0IHZyYWltZW50IGZhaXQgZHUgYmllbiBlbiB2YWNhbmNlcywgY2UgcXVlIHZvdXMgYXZleiBmYWl0IGF2ZWMgcGxhaXNpciwgc2FucyBjb250cmFpbnRlLiBQYXIgZXhlbXBsZSwgYWxsZXIgYXUgbWFyY2gsIHByZW5kcmUgbGUgdGVtcHMgZGUgY3Vpc2luZXIgZGVzIHBsYXRzIHNpbXBsZXMgZXQgYm9ucyBzYW5zIHNlIHByZXNzZXIsIGJvdWdlciwgbmFnZXIsIHZvdXMgcHJvbWVuZXIgZGFucyBsYSBuYXR1cmUsIHBhc3NlciBkdSB0ZW1wcyBhdmVjIHZvcyBwcm9jaGVzLCBwcmVuZHJlIHZvdHJlIHRlbXBzLCBsaXJlLCBuZSByaWVuIGZhaXJlLCBkb3JtaXIuLiAKQ29weSB0aGUgVVJMIGFuZCBvcGVuIG11bHRpcGxlIHRhYnMuIAoiSW4gdGhlc2Uga2luZHMgb2YgY2FzZXMgYSBsb3QgZGVwZW5kcyBvbiB0aGUgam9obidzIGRpc3Bvc2l0aW9uLCBhbmQgdGhhdCBjb3VsZCBiZSBzaG93biBvbiB2aWRlby4iClNlbGFuanV0bnlhLCBBbmRhIGhhcnVzIG1lbWVyaWtzYSBzaXR1cyBwb2tlciBwZXJpbmdrYXQuIEthbWFyIHBva2VyIGJpYXNhbnlhIHBlcmluZ2thdCBkZW5nYW4gbWVtZW5hbmdrYW4gcGVtYWluIHBva2VyLiBQZXJpbmdrYXQgbWVyZWthIGRpdHVsaXMgZGFyaSBwZW5nYWxhbWFuIHByaWJhZGkgZGFuIHBlbmdhbWF0YW4gZGFuIGRpYW5nZ2FwIGRhcGF0IGRpcGVyY2F5YS4gCkJlc3QgYmV0IGlzIHByb2JhYmx5IGdvaW5nIHRvIGJlIGZpZ3VyaW5nIG91dCBhIG5ldyBkZXNpZ24gdG8gY292ZXIgdXAgdGhlIHN0YWluIGlmIHlvdSBjYW4gY2xlYW4gaXQuIE5leHQgd291bGQgcHJvYmFibHkgYmUgc2VwYXJhdGluZyB0aGluZ3MgdmVyeSB2ZXJ5IGNhcmVmdWxseSB3aXRoIGFuIGV4YWN0byBrbmlmZS4KSSBmZWVsIGxpa2UgdGhleSBkbyBkaWZmZXJlbnQgdGhpbmdzLiAKNSBSZWFzb25zIFNvbWUgTWVuICBXb21lbgpUaGlzIGlzIE5PVCB0byBzYXkgdGhhdCB0aG9zZSBsZWZ0IGJlaGluZCBzaG91bGQgYmUgYWJhbmRvbmVkLiBUaGlzIGlzIHRoZSByZWFzb24gd2h5IHJvYnVzdCBhbmQgYWdncmVzc2l2ZSBzb2NpYWwgc2FmZXR5IG5ldHMgYXJlIGltcG9ydGFudC4gCkZyZWRkaWUgZGlkbid0IGZpbmQgb3V0IGhlIHdhcyBISVYgcG9zaXRpdmUgdW50aWwgMTk4Ny4gSGUgZGlzY292ZXJlZCBhIEtTIHNwb3Qgb24gaGlzIHNob3VsZGVyIGFuZCBoYWQgaXQgYmlvcHNpZWQsIGZvbGxvd2VkIGJ5IGEgYmxvb2QgdGVzdCBmb3IgSElWLgoiWW91IGJlbGlldmVkIGhlciBiZWNhdXNlIHNoZSB3YXMgeW91ciBkYXVnaHRlciwiIGhlIHN1Z2dlc3RzLCBwZWVyaW5nIG92ZXIgaGlzIGdsYXNzZXMuIApUaGVyZSBhbHNvIGEgZ3lwc3kgd29tYW4gaW4gaXQgd2hvIGFkZHMgdGhpcyBzdXBlcm5hdHVyYWwgZWxlbWVudCB0byBpdC5wbGF5cyBhIGJpZyBwYXJ0IGluIGl0IHRvbywgdGhlIG9sZGVyIG1hbiB3aG8gSSBwbGF5IGhhcyBiZWVuIGRyaW5raW5nIGFsbCBoaXMgbGlmZSB0byB0cnkgYW5kIGRlYWRlbiB0aGlzIGlubmVyIHBhaW4uIApCeSBTYW5kcmEgU3Blcm91bmVzCllvdSBnb3R0ZW4gdGhlIGZlZWwgZm9yIHRoZSBtZXRhIGF0IHRoZSBsb3dlciBsZXZlbHMsIHlvdSBjYW4gdGhlbiBleHBsb3JlIHRoZSBuZXV0cmFsIGdhbWUgYW5kICJnYWluaW5nIGFkdmFudGFnZS4iIFRoaXMgaW52b2x2ZXMgYSBsb3Qgb2YgYmxvY2tzdHJpbmcgID4gYXNzaXN0ICA+bWl4IHVwIHNlcXVlbmNlcyBhcyB3ZWxsIGFzIGFlcmlhbCBmYWtlIG91dHMgYW5kIGFpciB0byBhaXIgY29udmVyc2lvbnMuIFlvdSBnZXQgYSBmZWVsIGZvciBpdCwgdHJ1c3QgbWUuLiAKTm93bGluIGFuZCBkaXJlY3RvciBXZXMgQmFsbCBuZXZlciBib3RoZXIgdG8gcHJvcGVybHkgZGV2ZWxvcCB0aGUgY2hhcmFjdGVycyBvciBmaW5kIGFuIG9yaWdpbmFsIGFwcHJvYWNoIHRvIHRoZSBhY3Rpb24uLiAKSm9obiBtZW4gaGVhZCBjb2FjaCBNYWwgR2FsbGV0dGEgSUlJLCBhIFBHQSBnb2xmZXIuIApUaGUgb3RoZXIgY2F0ZWdvcnkgb2YgZGVwb3NpdGluZyBwb2tlciBtb25leSBpcyB0aHJvdWdoIGEgM3JkIHBhcnR5IHNlcnZpY2VzIGxpa2UgTkVUZWxsZXIgb3IgcHJlcGFpZCBBVE0gd2hpY2ggYWN0cyBsaWtlIEludGVybmV0IGJhbmtzLiAKU3dlZW5leSBUb2RkOiB0aGUgUmVhbCBTdG9yeSBvZiB0aGUgRGVtb24gQmFyYmVyIG9mIEZsZWV0IFN0cmVldCBieSBQZXRlciBIYWluaW5nICh0cnVlIGNyaW1lKQpBIGxvbmcgZGF5IG9uIHRoZSBqb2IgbWF5IGJlIGV4dHJlbWVseSB0aXJpbmcsIHNvIGNvbWluZyBob21lIGV4aGF1c3RlZCBpc3NvbWV0aGluZyBvcmRpbmFyeS4gU28gd2hhdCBkbyB5b3UgbmVlZCB0byBkbyBpZiB5b3UgbmVlZHJlbGF4YXRpb24gYW5kIGp1c3QgZG9uJ3QgaGF2ZSBzdWZmaWNpZW50IHRpbWUgdG8gZ28gdG8gYSBtYXNzYWdlIG9mZmljZT8gV2VsbCwgdGhlIGFuc3dlciBpcyBleHRyZW1lbHkgZWFzeSwgZ2V0IHlvdXIgb3duIG1hc3NhZ2VyIG9ubGluZS4gWW91IHNob3VsZCBmaXJzdCBvZiBhbGwgc2l0IGJhY2sgaW4gZnJvbnQgb2YgeW91ciBwZXJzb25hbCBjb21wdXRlciBhbmQgY2hlY2sgb3V0IE1hc3NhZ2UgYW5kIFNwYSBDbHViLCB0aGVwZXJmZWN0IHNwb3QgdG8gZmluZCB0b3AgcXVhbGl0eSBiZXN0IG5lY2sgYW5kIHNob3VsZGVyIG1hc3NhZ2VycyBmb3IgYWZmb3JkYWJsZSBwcmljZXRhZ3MuIFRoZXJlJ3Mgbm90aGluZyBzaW1wbGVyIHRoYW4gdmlzaXRpbmcgdGhpcyBsaW5rIGFuZCBwaWNraW5nIG91dCB0aGUgYmVzdCBvbmUsd2FpdCBmb3IgaXQgdG8gZ2V0IGRlbGl2ZXJlZCBzdHJhaWdodCB0byB5b3VyIGRvb3JzdGVwIGFuZCBlbmpveSBhc3RvbmlzaGluZ21hc3NhZ2Ugd2hlbiB5b3Ugd2lzaCB0by4KSSB0aGluayB5b3UgYXJlIHRha2luZyB5b3VyIHRpbWUgdG8gZmluZCB0aGUgcmlnaHQgcGVyc29uLiAKU28gSSBkZWNpZGVkIEkgbmVlZGVkZm9yIG15IHNhbml0eXRvIGdldCBzb21lIGJ1c2ggZmFtaWx5IEROQS4gTG9naWNhbGx5IEkga25ldyBJIG5lZWRlZCB0byBzZWR1Y2Ugb25lIG9mIHRoZSBidXNoIGFuZCBnZXQgYSBjdW0gc2FtcGxlLiAKSWNlIGNyZWFtIGFuZCBmcnVpdCBzaGFrZXMgYXJlIHNvb3RoaW5nIHRvIGVhdCBpZiB5b3UgcmVjZW50bHkgZ290IGJyYWNlcy4gSXQgbWF5IGJlIGhhcmQgdG8gY2hldyBpbW1lZGlhdGVseSBhZnRlciwgc28gaGF2ZSBzb21lIHNvZnQgZm9vZCBsaWtlIGJhbmFuYXMsIG1hc2hlZCBwb3RhdG8gYW5kIHBhc3RhIG9uIGhhbmQuLiAKSG93IG9uIGVhcnRoIGRpZCBJIHdpbiA3IENhcmQgU3R1ZCBjb21wcyBpbiB0aGUgZWFybHkgOTBzID8gSSdtIGJ1Z2dlcmVkIGlmIEkgY2FuIHJlbWVtYmVyIGhvdyA/IE9mZiB0byB0aGUgM3BtIHN1cGVyIHNhdCBJIGdvLiAKR29sZGVuIEdvb3NlIFRyYWluZXJzIFVrIFNhbGUgVmljaW91cyByb3VuZCBPZiB3ZWIgQmFzZWQgTWFya2V0aW5nV2F0Y2ggb3V0IGFuZCBhYm91dCBmb3IgcGVyaW9kIEdvbGRlbiBHb29zZSBEZWx1eGUgQnJhbmQgVWsgaG9wcGVycy4gSGlnaGx5IHNraWxsZWQgZXhwZXJ0cyBtaWdodCBqdXN0IGJlIGFuZCBzZWFyY2hpbmcgZm9yIGEgc2luZ2xlIGpvYiBvZmZlciBzbyB0aGV5IGNhbiBidW1wIHRoZWlyIGluY29tZSBhdCB0aGlzIGN1cnJlbnQgbGVuZGVycy4gRHVyaW5nIGkgd291bGQgc2F5IHRoZSBpbnRlcnZpZXcgc3RyYXRlZ3kgZG8geW91ciB1bHRpbWF0ZSBkdWUgYWNjYXBhcmVtZW50IHRvIGVsaW1pbmF0ZSB0aGVzZSB0aW1lIGZyYW1lIHdhc3RlcnMuCigyMDE0KS4uIApUaGUgbWFpbiBmZWVkYmFjayBJIHJlY2VpdmVkIHRoYXQgdGhlIGNvbWJpbmF0aW9uIG9mIG15IG1vdGhlcmJvYXJkLCBDUFUgYW5kIG1lbW9yeSB3b3VsZCBiZSBpbnN1ZmZpY2VudCBmb3Igd2FudGluZyB0byBydW4gYSBjb3VwbGUgb2YgVk1zIGFsc28gZm9yIHRlc3RpbmcvZWR1Y2F0aW9uYWwgcHVycG9zZXMuClRoZSB0aGluZyBpcywgSSB0cnVzdCB0aG9zZSBndXlzIHdpdGggZGVhZGx5IGZvcmNlIHdheSBtb3JlIHRoYW4gYW55IG90aGVyIFRvbSwgRGljaywgb3IgSGFycnksIGJlY2F1c2UgSSBrbm93IHRoYXQgd2Ugc2NyZWVuIHRoZSBoZWxsIG91dCBvZiBwZW9wbGUgdG8gbWFrZSBzdXJlIG9ubHkgdGhlIGJlc3QsIGJyaWdodGVzdCwgYW5kIGZyaWVuZGxpZXN0IHdlcmUgaW4gb3VyIGdyb3VwLiBPdXIgZ3V5cyBuZXZlciBoYXJhc3NlZCBwZW9wbGUsIG5ldmVyIGFycmVzdGVkIHBlb3BsZSB3aGVuIHdhcm5pbmdzIHdlcmUgYW4gb3B0aW9uLCBhbmQgY291bGQgb2Z0ZW4gYmUgc2VlbiBoZWxwaW5nIGtpZHMgaW4gc2hpdHR5IGJyb2tlbiBkb3duIGNvbGxlZ2Uga2lkIGNhcnMuIEkgbWVudGlvbmVkIHRoZSB3YXJuaW5ncyBiZWNhdXNlIGl0IHdhcyBhIG5lYXQgdGhpbmcgZm9yIHVzLCBidXQgaXQgaXNuIGxpa2Ugd2Ugd2VyZSBwbGFudGluZyBzcGllcyBvciBzb21lIHNoaXQgc28gd2UgY291bGQgZ2V0IGF3YXkgd2l0aCBzbXVnZ2xpbmcgY29rZSBvciBzb21ldGhpbmcuIERvIHlvdSBzZXJpb3VzbHkgdGhpbmsgcGVvcGxlIHdvdWxkIGdvIG9udG8gdGhlIGZvcmNlIGp1c3QgdG8gZ2l2ZSB0aGVpciB1bmRlcmdyYWQgZnJhdGVybml0eSBhIGhlYWRzIHVwPyBUaGF0IHRoZXkgcmlzayBsaWZlIGFuZCBsaW1iIGZvciBzb21ldGhpbmcgc28gdHJpdmlhbD8KSSB3YXMgaW4gYSBsb3cgc3Rha2VzIE1UVCBhbmQgSSBoYWQgdGFua2VkIG9uIGEgdG91Z2ggY2FsbCBwcmUgZmxvcCBhbmQgYWZ0ZXIgdGhlIGhhbmQgd2FzIG92ZXIgbWFkZSB0aGUgdHlwaWNhbCwgIlVHSCBkYW1uIGl0IHJpdmVyZWQgbXkgZ3V0c2hvdCBhbmQgSSBoYWQgdG9wIHBhaXIgYmxhaCBibGFoIiB0eXBlIGNvbW1lbnQuIApUaGlzIGlzIGVhc3kuIFR3byBzaGVsdGVycy4gb25lIFVMIDIgcGVyc29uIGFuZCBvbmUgVUwgMSBwZXJzb24gdGVudC4gWW91IGZpZ3VyZSBvdXQgdGhlIGRheSB0byBkYXkgaGlraW5nIGFzcGVjdCBvZiBsaWZlIG9uIHRoZSB0cmFpbC4gSSB0aGluayB0aGUgc2xlZXBpbmcgYXNwZWN0IG9mIHRoZSB0cmlwIHdpbGwgYmUgdGhlIG1vc3QgZGlmZmljdWx0LiBTbyBtYW55IGRpZmZlcmVudCB2YXJpYWJsZXMgaGVyZS4gQ3Jhbmt5PyAyIHRlbnQgc2V0IHVwLiBGZWVsaW4gZnJpc2t5PyBEdXBsZXguIE5lZWQgc3BhY2U/IDIgdGVudHMuIFNwbGl0IHVwIGZvciBhIGZldyBkYXlzPyAyIHRlbnRzLiBCcmVhayB1cD8gMiB0ZW50cy4gRW5qb3lpbmcgZWFjaCBvdGhlcnMgY29tcGFueT8gRHVwbGV4LiBJZiB0aGUgMiBvZiB5b3UgYXJlIHJlYWxseSBlbmpveWluZyBlYWNoIG90aGVycyBjb21wYW55IGV2ZXJ5IG5pZ2h0LCBzZW5kIGEgdGVudCBob21lLiBJIHN0YXJ0IHdpdGggMiB0ZW50cyBhbmQgZWxpbWluYXRlIDEgaWYgbmVlZGVkLCBpbnN0ZWFkIG9mIHN0YXJ0aW5nIHdpdGggb25lIGFuZCBwb3NzaWJseSBuZWVkaW5nIGFub3RoZXIgZHVyaW5nIHRoZSBoaWtlLgooRWRpdDogd2l0aCB0aGUgZXhjZXB0aW9uIG9mIGJsYWNrIGNhcnMsIGZvciB0aGUgbW9zdCBwYXJ0LikuIApNeSB3aWZlIGFuZCBJIGFyZSBib3RoIENGIGFuZCBoYXZlIGhhZCBjb252ZXJzYXRpb25zIGFsb25nIHRoZSBsaW5lcyBsaWtlIHdoYXQgeW91ciBTTyBoYWQuIEFsb25nIHRoZSBsaW5lcyBvZiAid2hvIHdpbGwgd2UgcGFzcyBvdXIga25vd2xlZGdlIGRvd24gdG8iIG9yIHRob3NlIGtpbmRzIG9mIHRoaW5ncyB0aGF0IGNvbWUgd2l0aCBub3QgaGF2aW5nIGtpZHMuIApPbnplIGthbWVyIHdhcyBoZWVsIHNmZWVydm9sIGVuIGdyb290IG1ldCBnZXdlbGZkIHBsYWZvbmQgZW4gYW50aWVrZSBtZXViZWxzLiAKSXQgYSBzaGl0dHkgcmVhc29uLCBidXQgSSB0aGluayBpdCBsaWtlbHkgdGhhdCBpdCB3aWxsIHNlcmlvdXNseSBwaXNzIGhpbSBvZmYuIApMZXQncyBmYWNlIGl0OiBidXlpbmcgYSBob3VzZSBpcyBhbiBleGNpdGluZyB2ZW50dXJlLCBhbmQgcmVoYWJiaW5nIGFuZCBmbGlwcGluZyBhIGhvdXNlIGZvciBtYXNzaXZlIHByb2ZpdCBjYW4gYmUgZXZlbiBiZXR0ZXIhIEhvd2V2ZXIsIGlmIHlvdSBsZXQgeW91ciBlbW90aW9ucyByZXN0IG9uIHlvdXIgc2xlZXZlLCB0aGV5IGNvdWxkIGRlc3Ryb3kgeW91IHdoZW4gdGhlIHRpbWUgY29tZXMgdG8gbmVnb3RpYXRlLiBUbyBhY2hpZXZlIHRoZSBoaWdoZXN0IHByb2ZpdHMsIHlvdSBuZWVkIHRvIGJlY29tZSBhIG1hc3RlciBoYWdnbGVyLCBlbnN1cmluZyB5b3UncmUgcGF5aW5nIHRoZSBsb3dlc3QgYW1vdW50IHBvc3NpYmxlIGZvciB0aGUgcHJvcGVydHkuClRoZXkgaGF2ZSBncmVhdCB0b3VybmFtZW50cyB0aGF0IHJ1biBlYWNoIHdlZWsgYW5kIGVhY2ggbW9udGguIApMYSBwbHVwYXJ0IGR1IHRlbXBzLCBkYW5zIHVuIHJnaW1lLCBvbiBzZSBsYW5jZSBkdSBqb3VyIGF1IGxlbmRlbWFpbiBkYW5zIHVuZSBmYW9uIGRlIG1hbmdlciBkaWZmcmVudGUsIHJlc3RyaWN0aXZlLCBwbHVzIG91IG1vaW5zIHN2cmUgY2FyIG9uIHZldXQgYWxsZXIgdml0ZS4gT24gcGVyZCBkdSBwb2lkcywgb24gYXR0ZWludCBvdSBvbiBhcHByb2NoZSBzb24gb2JqZWN0aWYgZXQgcHVpcyBvbiByZW1hbmdlIGNvbW1lIGF2YW50LiBWb2lyZSBvbiBjcmFxdWUgYXZhbnQgISBFdCBvbiByZXByZW5kIGxlIHBvaWRzIHBlcmR1LCBzb3V2ZW50IHBsdXMuIFNhbnMgZm9yY21lbnQgY29tcHJlbmRyZSBjZSBxdWkgc2UgcGFzc2UuIEV0IGJpZW4gc291dmVudCBvbiBlbnRyZSBkYW5zIHVuIGNlcmNsZSB2aWNpZXV4IGFsdGVybmFudCByZXN0cmljdGlvbiBldCBsY2hhZ2UuCkZvciBleGFtcGxlIHN1cHBvcnQgZm9yIE1lZGljYXJlIGZvciBhbGwgaXMgY29uc3RhbnRseSBmYWxsaW5nIGFuZCBjcmFzaGVzIHRvIDM1JSB3aGVuIHBlb3BsZSBhcmUgdG9sZCB0aGV5IHdvbid0IGhhdmUgdGhlaXIgcHJpdmF0ZSBpbnN1cmFuY2UgYW55bW9yZVlvdSBrZWVwIGJlbGlldmluZyB0aGlzIGNvdW50cnkgaXMgY2VudHJpc3QgYW5kIGxvc2UgYW5vdGhlciBlbGVjdGlvbiB0byBUcnVtcC5UaGUgY291bnRyeSBJUyBtb2RlcmF0ZSB0aGF0IGlzIHdoeSBpbiAyMDE4IG9uZSBvZiB0aGUgbGFyZ2VzdCBmbGlwcyBpbiBob3VzZSBoaXN0b3J5IGhhcHBlbmVkLCBsZWQgYnkgbW9kZXJhdGVzLiAKTm90aWNlIGhvdyBJIGRpZCBub3QgaW5jbHVkZSB0aGUgaG9yc2VzdGFuY2UuIApEZWFkbGlmdCBpcy4gCkl0IHdhcyB2ZXJ5IG9kZCB0byBzZWUuIFNwZWNpYWxseSB3aGVuIHRoZXkgd291bGQgc2hvdyB1cCBqdXN0IHRvIHRha2UgdGhlIHBpY3R1cmVzIGFuZCB0aGVuIGxlYXZlIG9uY2UgdGhleSBoYWQgZW5vdWdoLiAKVGhhdCB0aGUgc2l6ZSBvZiBpdC4gCldpbCAgbGlhbSBTaGluZGxlZGNrZXIgdmlzaXRlZCBUdWVzZGF5IGV2ZW5pbmcgYXQgdGhlIGhvbWUgb2YgdGhlIGZvcm1lcidzIHBhcmVudHMsIE1yLiBBbmQgTXJzLiAKU2Vjb25kIHNob3Qgc2hlIHdhcyBjb3JuZXJlZCBpbiB0aGUgaGFsbCBhbmQgZHVja2VkIGp1c3QgaW4gdGltZSB0byBhdm9pZCBnZXR0aW5nIGhlciBoZWFkIGJsb3duIG9mZi4gCldoZW4gaGUgd2FzIG91dHNpZGUgaGUgd2FzIHRoZW4gc3Vja2VyIHB1bmNoZWQgZnJvbSB0aGUgYmFjayBieSBhbm90aGVyIGJvdW5jZXIsIGR1cmluZyB3aGljaCBteSBjbGllbnQgc2xhcHBlZCB0aGUgQWZyaWNhbiBBbWVyaWNhbiBib3VuY2VycyBmYWNlIHdpdGggYW4gb3BlbiBoYW5kZWQgc2xhcCBmb3IgdGhlIHZpb2xhdGlvbnMuIEl0IGp1c3Qgc2hvd3MgaG93IGJyYXZlIGFuZCBjb3VyYWdlb3VzIHlvdXIgYm91bmNlcnMgd2hlcmUgdGhhdCB0aGV5IG5lZWRlZCA0IHBlb3BsZSB0byBzdWNrZXIgcHVuY2ggbXkgY2xpZW50IGZyb20gdGhlIGJhY2sgd2hlbiBoZSB3YXMgdGFsa2luZyB0byB0aGUgQWZyaWNhbiBBbWVyaWNhbiBib3VuY2VyLiBOb25ldGhlbGVzcyBteSBjbGllbnQgd2FzIGV4dHJlbWVseSBkaXNyZXNwZWN0ZWQgcmVzdWx0aW5nIGluIHRoZSBzbGFwIHRvIHRoZSBmYWNlIG9mIHRoZSBBZnJpY2FuIEFtZXJpY2FuIGJvdW5jZXIsIHdobyBzdGFydGVkIHRoZSBjb25mcm9udGF0aW9uIGluIHRoZSBmaXJzdCBwbGFjZS4uIApJIHdhbnRlZCBhIFRoYWkgbWFzc2FnZSBpbnN0ZWFkLCB3aGljaCBpcyAyMDAgYmFodCBjaGVhcGVyLCBidXQgdGhhdCBub3Qgd2h5IEkgd2FudGVkIGl0LiAKMTk2LzIwMDMuLiAKV2hhdCBJIHdhbnQgdG8ga25vdy4gCkVkaXQ6IE15IGFyZ3VtZW50IGlzIGJhc2VkIG9uIHRoZSBhc3N1bXB0aW9uIHRoYXQgdGhlICJjaHJpc3RpYW4iIHBhcnQgaGFzIGEgbWVhbmluZywgY291bnNlbGluZyBpbiBnZW5lcmFsIGlzIG9mIGNvdXJzZSBhIHJlYXNvbmFibGUgcmVxdWVzdC4KV2hhdCB3YXMgdGhlIGVuZW15IGRlc2lnbiBsaWtlIGFnYWluPyBJIGZvcmdldC4gSSByZW1lbWJlciB0aGUgZ3V5cyBvbiB0aGUgcm9vZiBhbmQgdGhlIEJpZyBEYWRkeXMuCkppbTogWWVhaCB0aGVyZSB3YXMuIFRoaXMgbWlnaHQgc291bmQgYSBsaXR0bGUgd2VpcmQsIGJ1dCBiZWZvcmUgdGhleSBvdXRsYXdlZCBwbGF5aW5nIHBva2VyIG9ubGluZSwgYmVmb3JlIHRoZXkgb3V0bGF3ZWQgdGhlIGZpbmFuY2lhbCB0cmFuc2FjdGlvbnMgc3VwcG9ydGluZyBwbGF5aW5nIHBva2VyIG9ubGluZSwgSSBhY3R1YWxseSBnYW1ibGVkIGEgbG90IG9ubGluZS4gQW5kIGJ5IHRoYXQgSSBtZWFuLCBJIHBsYXllZCBwb2tlciBhbmQgSSByZWFsaXplZCBJIHdhc24ndCBwYXJ0aWN1bGFybHkgZ29vZCBhdCB0aGF0IGJlY2F1c2UgSSBqdXN0IGRpZG4ndCBoYXZlIHRoZSBwYXRpZW5jZSB0byB3YWl0IGZvciBnb29kIGhhbmRzLiBMaWtlIEkga25ldyB3aGF0IEkgd2FzIHN1cHBvc2VkIHRvIGRvIGFuZCBJIHdvdWxkIGp1c3QgZ2V0IGJvcmVkLgpCZWNhdXNlIHRoZXJlIGlzIGEgYSBjZWlsaW5nIGZvciBob3cgbXVjaCB5b3UgY2FuIHRoZW9yZXRpY2FsbHkgbWFrZSBmcm9tIHBva2VyIGFuZCB0aGF0IGNlaWxpbmcgaXMgZmFyIGxvd2VyIHRoYW4gc29tZXRoaW5nIGEgbW9kZXJhdGVseSBzdWNjZXNzZnVsIGJ1c2luZXNzL2ludmVzdG1lbnQgY2FuIHlpZWxkLgpUaGUgZmFjdCBoaXMgZGFkIGhhcyBib3VnaHQgYSBkeWluZyB0ZWFtIGlzIGFsc28gYSBnb29kIHRoaW5nIGZvciBGMS4gRm9yY2UgSW5kaWEgd2VyZSBzdHJvbmcgYXMgZnVjayBmb3IgYSBubyBidWRnZXQgdGVhbS4gVGhleSBsb3N0IHRoZWlyIGZpbmFuY2llcnMuIElmIHN0cm9sbHMgZGFkIGlzIHdpbGxpbmcgdG8ga2VlcCBhbm90aGVyIHRlYW0gYXJvdW5kIGluIHRoZSBuYW1lIG9mIHN1cHBvcnRpbmcgaGlzIHNvbiB0aGVuIEkgY2FuIGdldCBiZWhpbmQgdGhhdC4KSXQgaXNuJ3QganVzdCBwcm90ZWluIHlvdSBuZWVkLiBDYXJicyBwbGF5IGFuIGltcG9ydGFudCByb2xlLiBZb3UgbmVlZCBnb29kIGNhcmJzIHRob3VnaCwgbm90IHNoaXQuIEkgcmVjb21tZW5kLCByaWNlLCBzd2VldCBwb3RhdG9lcywgYnJvY2NvbGksIGV0Yy4gSSB1c3VhbGx5IG1lYWwgcHJlcC4gTWVhbCBwcmVwcGluZyBpcyB0aGUgYmVzdCB3YXkgdG8gc3RheSBvcmdhbml6ZWQgYW5kIGdldCB0aGUgZ2FpbnMuIEkgbWFrZSB0b25zIG9mIG1lYWxzIFN1bmRheSB0byBlYXQgdGhyb3VnaG91dCB0aGUgd2Vlay4gTGlrZSBjaGlja2VuIGFuZCByaWNlLiBZb3Ugd2FudCB0byBiZSBlYXRpbmcgYXJvdW5kIDMwMDAgY2Fsb3JpZXMgYWxzby4gUHJvdGVpbiBzY29vcHMgYXJlIGdvb2QgYnV0IGdvb2QgSSBkZWZpbml0ZWx5IHJlY29tbWVuZCBmb29kIG92ZXIgc2Nvb3BzLiBGb29kIGhhcyBhIGxvdCBiZXR0ZXIgcXVhbGl0eSBwcm90ZWluIGluIGl0LiBTY29vcHMgZG8gaGVscCB0aG91Z2gsIEkgdXN1YWxseSB0YWtlIGEgc2Nvb3AgYWZ0ZXIgSSB3b3Jrb3V0LiBJZiB5b3Ugd2VpZ2ggMTUwbGIgSSdkIHJlY29tbWVuZCBhYm91dCAxNDBnIG9mIHByb3RlaW4sIGFuZCBhYm91dCAzNTAgNDUwZyBvZiBjYXJicyhkZXBlbmRzIG9uIGhvdyBhY3RpdmUgeW91IGFyZSkgLiBUcnkga2VlcGluZyB0aGVzZSBjYXJicyBhcyBjbGVhbiBhcyBwb3NzaWJsZS4gSWYgeW91IGFyZW4ndCB3b3JyaWVkIGFib3V0IHdlaWdodCwgeW91IGNhbiBkZWZpbml0ZWx5IHNwbHVyZ2UgdGhlc2UgY2FyYnMsIGxpa2UgYnJlYWQuIEJ1dCBkb24ndCBlYXQgZnJpZXMsIGNoaXBzLCBvciBhbnl0aGluZyB3aXRoIG5vIG51dHJpdGlvbmFsIHZhbHVlLgpTYW5zVGFsZW50IHUKSXQgc2VlbXMgdG8gaGF2ZSBvcmlnaW5hdGVkIGZyb20gYSAxNnRoIGNlbnR1cnkgUGVyc2lhbiBjYXJkIGdhbWUga25vd24gYXMgQXMgTmFzLiAKSG93ZXZlciwgd2UgbXVzdCBtYWtlIHN1cmUgdGhhdCB0aGUgcG9rZXIgdGFibGUgY2FuIHdpdGhzdGFuZCB0aGUgYWJ1c2UgaXQgd291bGQgYmUgZWFzaWx5IGdldHRpbmcuIApUaGlzIGlzIGEgd2F5IHRvIHNob3cgYXBwcmVjaWF0aW9uIGZvciBhbiBleGNlcHRpb25hbCBjb250cmlidXRpb24gdG8gUmVkZGl0LCBhbmQgY2FuIGFsc28gZ3JhbnQgdGhlIHJlY2lwaWVudCBzcGVjaWFsIGJvbnVzIGJlbmVmaXRzLiAKVGhlIDIwMTggYnVpbHQgaG90ZWwgaXMgZW50aXJlbHkgbm9uIHNtb2tpbmcgYW5kIGhhcyBBREEgc3VpdGVzIGFuZCBsdXh1cnkgYW1lbml0aWVzIGxpa2UgYmVhdXR5IHJlc3QgbWF0dHJlc3NlcywgNDMgaW5jaCBUVnMsIHJhZGlhbmNlIHNob3dlcnMsIHNwYSB0dWJzIGFuZCBleHBhbnNpdmUgdmlld3MuTm9uIFNtb2tpbmcgUG9rZXIgUm9vbXNIYXJyYWgncyBBayBDaGluLCBNYXJpY29wYTogRW5qb3kgYSBzbW9rZSBmcmVlIGdhbWluZyB6b25lIGFuZCBub24gc21va2luZyBwb2tlciByb29tcy4gVGhlIHJlc3RhdXJhbnRzIGFyZSBhbHNvIHNtb2tlIGZyZWUsIGFuZCB0aGVyZSBhcmUgbm9uIHNtb2tpbmcgcm9vbXMgZm9yIG92ZXJuaWdodCBzdGF5cy5UYWxraW5nIFN0aWNrIFJlc29ydCBDYXNpbm8sIFNjb3R0c2RhbGU6IFRoZSBBcmVuYSBQb2tlciBSb29tIGF0IFRhbGtpbmcgU3RpY2sgQ2FzaW5vIGlzIHRoZSBzdGF0ZSdzIGxhcmdlc3QsIGFuZCBpdCdzIGFsc28gbm9uIHNtb2tpbmcuIApPb2hzaGluZWVvYmplY3RzICAxMCBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpDb25zaWRlcmUgdXNhciBjYXJ0YXMgZXh0cmFzLiBPIHBva2VyIGZlY2hhZG8gIHVtIGpvZ28gZGl2ZXJ0aWRvLCBtYXMgdW0gZWxlbWVudG8gZXh0cmEgZGUgc3VycHJlc2EgZSBlc3RyYXRnaWEgZW50cmEgZW0gam9nbyBxdWFuZG8gdm9jIGludHJvZHV6IGNhcnRhcyBleHRyYXMuIEFwZW5hcyBnYXJhbnRhIHF1ZSB0b2RvIG11bmRvIGNvbmNvcmRlIG5pc3NvIChlIHNhaWJhIG8gcXVlICBpc3NvKSBhbnRlcy4gClRoZSBjaXR5IGhhcyA3MiBkZXNpZ25hdGVkIGhpc3RvcmljIGRpc3RyaWN0cywgZGlzdGluY3QgY3VsdHVyYWwgZW5jbGF2ZXMgcmVwcmVzZW50aW5nIEJhbHRpbW9yZSBkaXZlcnNlIHVyYmFuIGxhbmRzY2FwZSwgd2hpY2ggaGFzIGVhcm5lZCBCYWx0aW1vcmUgdGhlIG5pY2tuYW1lIG9mIG5laWdoYm9yaG9vZHMuIApOb3Qgb25seSBpcyBpdCBwb29yIGZvcm0gYnV0IGl0IGFsc28gYSBoZWFsdGggY29kZSB2aW9sYXRpb24uIApJY2gga2FubiBhbHNvIGRhcyBUaGVtYSBuaWNodCBhdXNrbGFtbWVybi4gCkFyc2VuYWwgd291bGQgaGF2ZSBob3BlZCB0byBpc29sYXRlIHRoZSB3aWRlIGNlbnRyZSBiYWNrcyBpbiBXb2x2ZXMgYmFjayB0aHJlZSwgYnV0IHdpdGggYSBsZWFkdGhlaXIgcmVhcmd1YXJkIGJlY2FtZSBhbiBvYmR1cmF0ZSBmaXZlLiBBcnNlbmFsIHNob3VsZCBoYXZlIGhhZCBhIG51bWVyaWNhbCBhZHZhbnRhZ2Ugb24gdGhlIGZsYW5rcywgYnV0IHdpdGggSXdvYmkgYW5kIEF1YmFtZXlhbmcgcGxheWluZyBuYXJyb3csIGl0IGxlZnRhIHNpbXBsZSBvbmUgdnMgb25lIG9mIGZ1bGwgYmFjayBhZ2FpbnN0IHdpbmcgYmFjayBmb3IgV29sdmVzIHRvIGRlYWwgd2l0aC4uIApPbmUgb2YgbXkgZG9ncyB1c2VkIHRvIHJ1biBhd2F5IGFsbCB0aGUgdGltZSB3aGVuIHdlIGZpcnN0IGdvdCBoZXIuIFNoZSB3YXMgdHJ5aW5nIHRvIGdvIGJhY2sgaG9tZSB0byB0aGUgcGVvcGxlIHdobyBnYXZlIGhlciB1cC4gCkhvb3Nha2l3aSB1CkZCSSBlbmRzIGludmVzdGlnYXRpb24gaW4gTGFzIFZlZ2FzIG1hc3Mgc2hvb3Rpbmcgd2l0aG91dCBmaW5kaW5nIG1vdGl2ZQoybSBiZXQgaGVscCB0aGlzIGJsb2tlIGxvc2Ugd2VpZ2h0CiJSZWFsbHkgY2xlYXIgYW5kIHN1bm55LCB3aXRoIGEgbW9kZXJhdGUgdGVtcGVyYXR1cmUuIiBMYW5lIGhhcyB0b2xkIHBvbGljZSBzaGUgd2VudCBmcm9tIHRoZSBob3NwaXRhbCB0byBHaWxsaWVzIEdsYWRlc3ZpbGxlIGhvdXNlLiBUaGVuIHNoZSB3ZW50IHRvIGhlciBwYXJlbnRzIGhvdXNlLCB3aGVyZSBzaGUgc2hvd2VyZWQgYW5kIGNoYW5nZWQgaW50byBoZXIgY3JlYW0gc3VpdC4gClRoZSBhdWRpZW5jZSBsYXVnaGVkIGEgbG90IGFuZCBJIGhhZCBhIGhhcmQgdGltZSBub3QgY3JhY2tpbmcgdXAgbXlzZWxmIHdoZW4gQnJvb2tlIGFza2VkIG1lICJBcmUgeW91IGxvb2tpbmcgZm9yIGxvdmU/IiBJIHJlYWxseSB3YXNuJ3QgdGhhdCBuZXJ2b3VzIHdoZW4gSSBnb3Qgb24gc3RhZ2UgdGhpcyB0aW1lLiAKSXQgaGFzIGJlZW4gcGFja2FnZWQgaW4gYSBiZWF1dGlmdWwgd2F5IHdoaWNoIHdpbGwgYXR0cmFjdHMgeW91IHRvIGJ1eSBpdCBvciBmb3IgZ2lmdGluZyBpdCB0byB5b3VyIHNwZWNpYWwgb25lLiBJdHMgYmxhY2sgb3V0c2lkZSBhbmQgc2xlZWsgYm9keSBmZWF0dXJlIGFyZSBtYWRlIGluIGEgbW9kZXJuIHN0eWxpc2ggd2F5IHRoYXQgd2lsbCBkZWZpbml0ZWx5IGdyYWIgeW91ciBhdHRlbnRpb24gYW5kIG1ha2UgeW91IGZhbGwgaW4gbG92ZSB3aXRoIGl0IHdoZW4geW91IHdpbGwgbG9vayBhdCBpdCBmb3IgdGhlIGZpcnN0IHRpbWUuIE5vdyBsb29rIGF0IHRoZSBmZWF0dXJlcywgd2hpY2ggaGF2ZSBtYWRlIGl0IHNvIHNwZWNpYWwgZm9yIHlvdXIgaGFpciBhbmQgdGhlIHJlYXNvbiBmb3IgcmVjb21tZW5kaW5nIGl0LgpUIFNwbGluZXMgMyBmb3IgUmhpbm8gaW50cm9kdWN0aW9uICAgWW91VHViZS4gCkFuZCBpbiB3aGF0IHdvcmxkIGFyZSBiaWcgbWVuIG5vdCB2YWx1YWJsZT8gQmVpbmcgNyBmb290IGlzIGJhc2ljYWxseSBhIGd1YXJhbnRlZWQgYmlnIGNvbnRyYWN0Li4gClRoZXkgd2VyZSBwcmV0dHkgZGVjZW50LCBidXQgYm90aCByZXRpcmVkIGF0IHRoZSBlbmQgb2YgdGhlIHllYXIsIHNvIHRoZXkgd2VyZSByZXBsYWNlZCBieSBNciBCLCB3aG8gd2FzIHByaW1hcmlseSBhIFBFIHRlYWNoZXIuIApBbHNvIGFzIG90aGVycyBoYXZlIHBvaW50ZWQsIG5vIG1hbiBza3kgbWlnaHQgaGVscCB5b3Ugc2NyYXRjaCB0aGF0IGl0Y2h5IG9mIHBsYW5ldGFyeSBsYW5kaW5nLiBUaGUgc2NlbmVyeSBpcyB0aGUgYmVzdCBmcm9tIHRoZSBnYW1lIGFuZCBpdCBmZWVscyByZWFsbHkgbmljZSB0byBsYW5kIGluIGEgY29sb3JmdWwgcGxhbmV0LgpTbyB5b3Ugc2hvdWxkIGhhdmUgeW91ciBvd24gd2F5cyBvdXQgdGhhdCBtYWtlIHlvdXIgYnVzaW5lc3MgZ28gYmV0dGVyIGVhY2ggYW5kIGV2ZXJ5IHNpbmdsZSB0aW1lLiAKTWVtYmVycyBzdWZmZXIgcGFpbiBmcm9tIHdlYXJpbmcgdW5jb21mb3J0YWJsZSBzaG9lcyB0aGF0IGFyZSBzaW1wbHkgZGUgcmlndWV1ciBpbiB0aGVpciBjdWx0dXJhbCB3b3JsZC4uIApQb3N0ZWQgYnkgTGFtZV91c2VybmFtZSBhdCAyOjEyIFBNIG9uIEF1Z3VzdCAxNiwgMjAwNgpSZXBvcnRzIGNvbWluZyBpbiBmcm9tIG91ciBoaWdod2F5IGZvcmVjYXN0ZXJzIHRyYXZlbGluZyBvbiByb2Fkd2F5cyBlYXJseSB0aGlzIG1vcm5pbmcgb3IgZG9pbmcgbWl0aWdhdGlvbiB3b3JrIGhhdmUgc3RhdGVkOiAidGhlcmUgaXNuIGEgcGllY2Ugb2YgYXZhbGFuY2hlIHRlcnJhaW4gdGhhdCBoYXNuIHNsaWQuIiBUaGlzIGlzIGluY3JlZGlibGUsIGJ1dCBzaG9ja2luZyBuZXdzIGdpdmVuIHRoZSBpbXByZXNzaXZlIGF2YWxhbmNoZSBjeWNsZSBvdmVyIHRoZSBwYXN0IGZldyBkYXlzLiAKV2hpbGUgc3RpbGwgQ2FuYWRhIG1vc3QgZXhwZW5zaXZlIGNpdHkgZm9yIGhvdXNpbmcsIGEgcmVjZW50IGNvbGxhcHNlIGluIHNhbGVzIGhhcyBsZWQgdGhlIHZhbHVlIG9mIHJlYWwgZXN0YXRlIHRyYW5zYWN0aW9ucyBzdWJzdGFudGlhbGx5IGxvd2VyLiAKQSBwb2tlciBtZXRhcGhvciBlc2NhcGVkIGZyb20gaGlzIElubmVyIENvd2JveS4gClNvLCB5ZXMsIHRoZSB3b21lbiB3b3JrZWQsIGJ1dCBub3QgZXhhY3RseSBhcyBhICJ3b3JraW5nIHdvbWFuIiBkb2VzIG5vdy4gVGhleSB3ZXJlIGFibGUgdG8gYmUgdGhlIHByaW1hcnkgY2FyZXRha2VycyBvZiB0aGVpciBiYWJpZXMsIG9yIG9sZGVyIGRhdWdodGVycyBvciBjb3VzaW5zIG9yIHRoZSBnaXJsIHdobyBuZWVkZWQgYSBsaXR0bGUgaW5jb21lIHRvIGhlbHAgaGVyIG93biBmYW1pbHkgbmV4dCBkb29yIGhlbHBlZC4gCkhvd2V2ZXIsIHNob3VsZCBhbGwgeW91ciBpbnZlc3RtZW50cyBiZSBjYXVzaW5nIHlvdSB3b3JyeT8gU2hvdWxkbiB5b3VyIGZpbmFuY2VzIGJlIHNvIHdlbGwgZGl2ZXJzaWZpZWQgdGhhdCB0aGV5IHByb3ZpZGUgeW91IHdpdGggc29sYWNlIGtub3dpbmcgeW91ciBmaW5hbmNpYWwgbmVzdCBlZ2cgaXMgaW4gYSBwb3NpdGlvbiBmb3Igc3VjY2Vzcz8gV2UgaGF2ZSBlbm91Z2ggdG8gd29ycnkgYWJvdXQgcmVnYXJkaW5nIG91ciBjYXJlZXJzIGFuZCBmYW1pbGllcy4gU2hvdWxkIHdlIGFsc28gYmUgY29uY2VybmVkIGFib3V0IG91ciBpbnZlc3RtZW50cz8gVGhhdCBxdWVzdGlvbiBpcyB1cCB0byB5b3UuLiAKQW5kIHNoZSBhbGxlZ2VkbHkgZGVuaWVkICJwcm9jZWR1cmFsIGZhaXJuZXNzIiBpbiB0aGUgY2FzZSBvZiBhIG1hbiBhY2N1c2VkIG9mIHN0ZWFsaW5nIGEgJDE2NyBwb2tlciBtYWNoaW5lIHBheW91dCB0aWNrZXQgYnkgcHJvbXB0aW5nIHRoZSByZXZvY2F0aW9uIG9mIGhpcyBiYWlsIHdpdGhvdXQgaGVhcmluZyBzdWJtaXNzaW9ucyBvciBnaXZpbmcgcmVhc29ucy4gSGVyIGJhcnJpc3RlciBBcnRodXIgTW9zZXMgU0Mgc2FpZCBoaXMgY2xpZW50IGFjY2VwdGVkIHNoZSBtYWRlIG1pc3Rha2VzIHRoYXQgInNob3VsZCBub3QgaGF2ZSBiZWVuIG1hZGUiIGJ1dCBjb250ZW5kZWQgdGhhdCBoZXIgY3J1c2hpbmcgd29ya2xvYWQgb2YgYSAidHN1bmFtaSIgb2YgY2FzZXMgY29udHJpYnV0ZWQgdG8gbWVudGFsIGhlYWx0aCBpc3N1ZXMuIApEcmFuayBhIGxvdCBvZiBzdWdhcnkgZHJpbmtzLiBBbGwgdGhpbmdzIEkgbmV2ZXIgZGlkLi4gClE5cyAgIFF1ZWVuIGFuZCBuaW5lLCBzdWl0ZWQKSW4gY29udHJhc3QsIHJlY2FsbCB0aGUgbXVjaCB0YWxrZWQgYWJvdXQgVHJvcGljYW5hIHJlZGVzaWduIHRoYXQgd2FzIGhhc3RpbHkgd2l0aGRyYXduIGZyb20gbWFya2V0IGVhcmxpZXIgbGFzdCB5ZWFyLiBUaGUgZGVzaWduIHdhcyBzbyBkaXNydXB0aXZlIHRoYXQgaXQgd2FzIG5vdCBlYXNpbHkgcmVjb2duaXphYmxlIHRvIGN1cnJlbnQgdXNlcnMsIHdobyB3ZXJlIGxpa2VseSB0byBqdXN0ICJncmFiIGFuZCBnbyIgaW4gdGhlIGp1aWNlIHJlZnJpZ2VyYXRvcnMuIEFzIGEgcmVzdWx0LCBhbGllbmF0ZWQgc2hvcHBlcnMgZGlkIGp1c3QgImdvLCIgYW5kIHRoZSBicmFuZCBsb3N0IHNpZ25pZmljYW50IHZvbHVtZSBvdmVybmlnaHQuIFVsdGltYXRlbHksIGJyYW5kcyBtdXN0IHN0cmlrZSBhIGNhcmVmdWwgYmFsYW5jZSBpbiBrZWVwaW5nIHRoZSBicmFuZCByZWNvZ25pemFibGUgdG8gY3VycmVudCB1c2VycyB3aGlsZSBhbHNvIG1ha2luZyBpdCBkaXNydXB0aXZlIHRvIG5ldyB1c2Vycy4gQXMgaXQgYXBwZWFycywgVHJvcGljYW5hIHdlaWdoZWQgY29tbXVuaWNhdGluZyB0byBuZXcgdXNlcnMgb3ZlciBkcml2aW5nIHJlY29nbml0aW9uLCBhbmQgbWlzc2VkIGFjaGlldmluZyB0aGF0IGNyaXRpY2FsIGJhbGFuY2UuCkFsbCwgdGhlc2UgYmVlZnkgeW91bmcgbWVuIG1pZ2h0IGJlIGdvaW5nIHRvIElyYXEgb3IgQWZnaGFuaXN0YW4uIApObyAuIFRoZSBvZGRzIG9mIGdvaW5nIHBybyBpbiBhbnkgc3BvcnQgYXJlIHZlcnkgc21hbGwsIHNvIGl0cyBuZXZlciAicmVhbGlzdGljIi4gQnV0IGRhbW4gcmVhbGl0eSAgIGZvbGxvdyB5b3VyIGRyZWFtcy4geWEgKEZ1bGwgQW5zd2VyKQo=|<---