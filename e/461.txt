<!DOCTYPE HTML>
<html class="container-max-width" style="background-color: #fcfcfc;">
 <head>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0" name="viewport"/>
  <meta content="text/html; charset=utf-8" http-equiv="content-type"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta name="taggingpage"/>
  <meta content="//www.indonesia.travel/content/dam/indtravelrevamp/en/news-events/news/5-popular-fried-rice-varieties-at-jakarta-s-food-stalls/aff9a7960b49b3f0dc4a2c8311dfc9e5514740fa-c7633.jpg/_jcr_content/renditions/cq5dam.web.1280.1280.jpeg" property="og:image">
   <meta content="600" property="og:image:width"/>
   <meta content="600" property="og:image:height"/>
   <meta content="article" property="og:type"/>
  </meta>
 </head>
 <body>
  <div id="headcontainer">
   <div class="navbar navbar-light rounded navbar-toggleable-md">
    <div class="indt-container mobile-navigation container d-flex" style="padding-top: 10px;padding-bottom: 10px;">
     <button class="navbar-toggler collapsed hidden-md-up" onclick="navEl.show()" style="display:block" type="button">
      <span class="lnr lnr-menu" style="font-size: xx-large;">
      </span>
     </button>
     [link]
     
     <div class="float-right full-width hidden-mobile">
      <ul class="li-none float-right mb-0 indt-right-menu">
       <li>
        <a class="btn" id="search-fn-trigger" onclick="searchs.show()">
         <span class="lnr lnr-magnifier">
          [search][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
         </span>
        </a>
       </li>
       <li>
        <div class="dropdown indt-language" onclick="openshowmenu()">
         <ul>
          <li>
           [link]
           
           -
           [ahref]
           
          </li>
         </ul>
        </div>
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
      <ul class="indt-menu hidden-sm-down li-none float-right mb-0 text-right" id="desktop-menu-clone">
       <li class="hidden-sm-up be-the-first" style="border-bottom:0px;">
        <form accept-charset="UTF-8" action="/kr/ko/search" method="GET">
         <div class="row search-hd-cp justify-content-md-center">
          <div class="col-12" style="padding-left:0;">
           <div class="input-group">
            <span class="input-group-btn">
             <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]
            </span>
           </div>
          </div>
         </div>
        </form>
       </li>
       <li class="dropdown">
        <a class="dropbtn">
         볼 것
         <span class="indt-menu-active">
          [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[link]<li>[link]</li><li>[ahref]</li>[search][ahref][search]<li>[ahref]</li><li>[link]</li>[ahref][search]<li>[link]</li><li>[link]</li>[ahref][search]<li>[link]</li>
         </span>
        </a>
        <div class="dropdown-content">
         [link]
         
         <a href="/kr/ko/attractions">
          명소
         </a>
         [ahref]
         
        </div>
       </li>
       <li class="dropdown">
        <a class="dropbtn">
         할 것
         <span class="indt-menu-active">
          [ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </span>
        </a>
        <div class="dropdown-content">
         <a href="/kr/ko/experience">
          5대 불가사의(5가지 경이로운것) 놀라운것
         </a>
         [link]
         
         <a href="/kr/ko/travel-blog">
          우리의 여정
         </a>
        </div>
       </li>
       <li class="dropdown">
        <a class="dropbtn">
         여행 계획하기
         <span class="indt-menu-active">
         </span>
        </a>
        <div class="dropdown-content">
         <a href="/kr/ko/general-information">
          일반정보
         </a>
         <a href="/kr/ko/news">
          뉴스 및 이벤트
         </a>
         <a href="/kr/ko/packages">
          패키지
         </a>
        </div>
       </li>
       <li>
        [link]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div class="full-width search-hd-cp-pr" style="display:none;background-color: white;">
    <div class="indt-container">
     <form accept-charset="UTF-8" action="/content/indtravelrevamp/kr/ko/search" method="GET">
      <div class="row search-hd-cp justify-content-md-center" style="padding-bottom: 1em;">
       <div class="col-lg-6">
        <div class="input-group">
         <span class="input-group-btn">
          <button class="search-input-cp btn btn-secondary" type="submit">
           검색
          </button>
         </span>
        </div>
       </div>
      </div>
     </form>
    </div>
   </div>
   <div class="language-shown-hide">
    <div class="dismissable-country-language" onclick="closeshowmenu()" style="display:none">
    </div>
    <div class="full-width" style="z-index: 12;position: relative;">
     <div class="indt-container">
      <form class="form-country-lang" method="GET">
       <div class="row justify-content-md-center" style="padding-bottom: 2em; padding-top: 2em;">
        <div class="col-lg-8">
         <div class="row">
          <div class="col-12 col-md-2">
          </div>
          <div class="col-12 col-md-4" style="margin-top:15px;">
           <div class="input-group">
            <div class="dropdown w-100 dropdown-country-rig">
             <button aria-expanded="false" aria-haspopup="true" class="btn btn-secondary dropdown-toggle" data-toggle="dropdown" id="dropdownMenu2" style="width: 100%;border-radius: 7px;text-align: left;border: 1px solid #ffffff; background-color: transparent;color: white;" type="button">
              Korea
             </button>
             <div aria-labelledby="dropdownMenu2" class="dropdown-menu dropdown-menu-right" id="country-Json-paste" style="width: 100%;top:35px;max-height: 50vh;overflow-y:auto;font-size:medium !important">
             </div>
            </div>
           </div>
          </div>
          <div class="col-12 col-md-4" style="margin-top:15px;">
           <div class="dropdown w-100 dropdown-country-rig">
            <button aria-expanded="false" aria-haspopup="true" class="btn btn-secondary dropdown-toggle btn-block" data-toggle="dropdown" id="dropdownMenuButtonL" style="width: 100%;border-radius: 7px;text-align: left;border: 1px solid #ffffff;background-color: transparent;color: white;" type="button">
             Dropdown button
            </button>
            <div aria-labelledby="dropdownMenuButtonL" class="dropdown-menu w-100 dropdownMenuButtonP" style="font-size:medium !important">
             <a class="dropdown-item" href="#">
              Language Not Available
             </a>
            </div>
           </div>
          </div>
          <div class="col-12 col-md-2" style="margin-top:15px;">
           <div class="input-group">
            <button class="btn btn-primary" onclick="closeshowmenu()" style="
											margin-left: auto;
											margin-right: auto;
											overflow: hidden;
											/* margin-top: 70px; */
											border: 1px solid white;
											background-color: transparent;
											border-radius: 50%;
											padding: 5px 13px;
											cursor: pointer;
											margin-left: 10px;
                                            width: 38px;
                                            height: 38px;
                                            line-height: 38px;
										" type="button">
             <span class="lnr lnr-cross" style="
											margin-top: -1px;
											display: block;
											margin-left: -3px;
										">
              <li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[ahref]</li>[search][ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
            </button>
           </div>
          </div>
         </div>
        </div>
       </div>
      </form>
     </div>
    </div>
   </div>
   <div class="mobile-menu-xs-pr full-width">
    <div class="indt-container float-left" id="mobile-menu-xs">
     <ul style="height: 60vh;overflow-y: auto;">
      <li>
       <div aria-hidden="true" data-parent="#accordion" data-toggle="collapse" href="#collapseOne" onclick="">
        <a class="" style="position: relative;">
         볼 것
         <span class="fa fa-angle-right" style="width:10px; float: right;top: 5px">
          <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link][link]<li>[ahref]</li>[ahref][ahref][ahref]<li>[search]</li>
         </span>
        </a>
       </div>
       <div class="collapse-submenu accordion-body collapse in" id="collapseOne">
        <div class="accordion-inner">
         <ul>
          <li>
           <a href="/kr/ko/destinations">
            목적지
           </a>
          </li>
          <li>
           <a href="/kr/ko/attractions">
            명소
           </a>
          </li>
          <li>
           <a href="/kr/ko/event-festivals">
            축제&amp;행사
           </a>
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li>
       <div aria-hidden="true" data-parent="#accordion" data-toggle="collapse" href="#collapseTwo" onclick="">
        [ahref]
        
       </div>
       <div class="collapse-submenu accordion-body collapse" id="collapseTwo">
        <div class="accordion-inner">
         <ul>
          <li>
           <a href="/kr/ko/experience">
            5대 불가사의(5가지 경이로운것) 놀라운것
           </a>
          </li>
          <li>
           <a href="/kr/ko/trip-ideas">
            여행 아이디어
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
      </li>
      <li>
       <div aria-hidden="true" data-parent="#accordion" data-toggle="collapse" href="#collapseThree" onclick="">
        [ahref]
        
        여행 계획하기
        <span class="fa fa-angle-right" style="width:10px; float: right;top: 5px">
         [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][ahref]<li>[search]</li>
        </span>
       </div>
      </li>
     </ul>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0464
  </b>
 </body>
</html>
<div class="collapse-submenu accordion-body collapse" id="collapseThree">
 <div class="accordion-inner">
  <ul>
   <li>
    [ahref]
    
   </li>
   <li>
    <a href="/kr/ko/news">
     뉴스 및 이벤트
    </a>
   </li>
   <li>
    [link]
    
   </li>
  </ul>
 </div>
</div>
<li>
 <a href="/content/indtravelrevamp/kr/ko/partnership-opportunity">
  Partners Kit
 </a>
</li>
<div class="float-right" onclick="navEl.hide()" style="background-color: rgba(0, 0, 0, 0.46); height:100%;width: 20%;">
</div>
<div class="full-width exph_parent_container">
 <div class="select-city-input">
  <div class="col-12" style="margin-top:15px;">
   <label class="input-destination-label" for="input-destination-shadowing">
    <small>
     From
    </small>
   </label>
   <div class="input-group">
    <span class="input-group-btn">
     <button class="btn btn-secondary font-size-small" onclick="citylistinput.hide()" style="border: 1px solid #dadada;" type="button">
      <span class="lnr lnr-arrow-left">
      </span>
     </button>
    </span>
   </div>
  </div>
 </div>
 <div class="container indt-container exph-menu-inline p-lr-15">
  <button class="btn btn-default exph_button active" data-type="FLIGHTS" type="button">
   항공
  </button>
  <button class="btn btn-default exph_button" data-type="HOTELS" type="button">
   호텔
  </button>
  <button class="btn btn-default exph_button" data-type="BUNDLES" type="button">
   항공+호텔
  </button>
 </div>
 <div class="exph_package_container" style="display:none;">
  <div class="container indt-container exph_package" style="padding-left: 0px !important;padding-right: 0px !important;">
   <div class="exph_flight">
    <div class="row">
     <div class="col-8 ">
      <div class="btn-group btn-group-sm exph_type_trip" role="group">
       <button class="btn exph_group_btn active" data-trip="RoundTrip" nm-activities="해야 할 일" nm-flight="왕복" type="button">
        왕복
       </button>
       <button class="btn exph_group_btn" data-trip="OneWay" nm-activities="이벤트 티켓" nm-flight="편도" type="button">
        편도
       </button>
      </div>
     </div>
     <div class="col-4 text-right" style="height: 20px;">
      <button class="btn btn-warning exph_btn_close btn-sm" type="button">
       <span class="lnr lnr-cross center-icon">
       </span>
      </button>
     </div>
     <div class="col-lg-10 ">
      <div class="row">
       <div class="col-lg-6">
        <div class="form-group exph_from_group exph_from_group_from">
         <span class="lnr lnr-map-marker">
         </span>
         <label for="from">
          <small id="from-title" nm-activities="도시 또는 공항" nm-flight="출발지" nm-hotel="목적지 이름">
           출발지
          </small>
         </label>
        </div>
       </div>
       <div class="col-lg-6">
        <div class="form-group exph_from_group exph_from_group_to">
         <span class="lnr lnr-map-marker">
         </span>
         <label for="to">
          <small id="to-title" nm-flight="목적지" nm-hotel="호텔 이름">
           목적지
          </small>
         </label>
        </div>
       </div>
       <div class="col-12">
       </div>
       <div class="col-6 col-lg-3">
        <div class="form-group exph_from_group popp">
         <span class="lnr lnr-calendar-full">
         </span>
         <label class="label-date-1" for="depart">
          <small nm-activities="출발지" nm-flight="가는날" nm-hotel="체크인">
           가는날
          </small>
         </label>
        </div>
       </div>
       <div class="col-6 col-lg-3">
        <div class="form-group exph_from_group return-date">
         <span class="lnr lnr-calendar-full">
         </span>
         <label class="label-date-2" for="return">
          <small nm-activities="목적지" nm-flight="오는날" nm-hotel="체크 아웃">
           오는날
          </small>
         </label>
        </div>
       </div>
       <div class="col-lg-3 col-travelers">
        <div class="form-group exph_from_group exph_from_group_traveler">
         <span class="lnr lnr-users">
          <li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li>[search]<li>[ahref]</li>[ahref]<li>[search]</li>[search][link]
         </span>
         <label for="from">
          <small>
           여행객
          </small>
         </label>
         <div class="w-100">
          <button class="btn btn-sm btn-secondary exph_traveler_btn" type="button">
           <div class="value-noroom">
            성인
            , 
                                            어린이
            , 
                                            유아
           </div>
           <div class="value-room">
            성인
            , 
                                            어린이
            , 
                                            유아
           </div>
          </button>
          <div class="dropdown-menu w-100 exph_dropdown_select">
           <div class="exph_no_room">
            <div class="row exph_l_9">
             <div class="col-6">
              성인
             </div>
             <div class="col-2">
              <span class="lnr lnr-circle-minus" id="adult-minus">
               <li>[search]</li><li>[search]</li><li>[link]</li>[ahref]<li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li><li>[search]</li>
              </span>
             </div>
             <div class="col-1">
             </div>
             <div class="col-2">
              <span class="lnr lnr-plus-circle" id="adult-plus">
              </span>
             </div>
            </div>
            <div class="row exph_l_9">
             <div class="col-6">
              어린이
             </div>
             <div class="col-2">
              <span class="lnr lnr-circle-minus" id="child-minus">
               <li>[link]</li>[ahref]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li>[link]
              </span>
             </div>
             <div class="col-1">
             </div>
             <div class="col-2">
              <span class="lnr lnr-plus-circle" id="child-plus">
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]
              </span>
             </div>
             <div class="col-12 age-child">
             </div>
            </div>
            <div class="row exph_l_9">
             <div class="col-6">
              유아
             </div>
             <div class="col-2">
              <span class="lnr lnr-circle-minus" id="infant-minus">
               <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][link][ahref]
              </span>
             </div>
             <div class="col-1">
             </div>
             <div class="col-2">
              <span class="lnr lnr-plus-circle" id="infant-plus">
              </span>
             </div>
             <div class="col-12 age-infant">
             </div>
            </div>
            <div class="row col-12">
             <div class="traveler-close text-right">
              닫기
             </div>
            </div>
           </div>
           <div class="exph_room_slick" data-now-traveler="1">
            <div class="row col-12 exph_room_title">
             방
             <label>
              1
             </label>
             <button class="exph_remove_room" style="display:none" type="button">
              풀다
             </button>
            </div>
            <div class="row exph_l_9">
             <div class="col-6" data-traveler-type="Adult">
              성인
             </div>
             <div class="col-2">
              <span class="lnr lnr-circle-minus adult-minus" id="">
               <li>[link]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>[ahref]
              </span>
             </div>
             <div class="col-1">
             </div>
             <div class="col-2">
              <span class="lnr lnr-plus-circle adult-plus" id="">
              </span>
             </div>
            </div>
            <div class="row exph_l_9">
             <div class="col-6" data-traveler-type="Child">
              어린이
             </div>
             <div class="col-2">
              <span class="lnr lnr-circle-minus child-minus" id="">
              </span>
             </div>
             <div class="col-1">
             </div>
             <div class="col-2">
              <span class="lnr lnr-plus-circle child-plus" id="child-plus">
               <li>[ahref]</li>[search][search]<li>[search]</li>[link]<li>[link]</li>
              </span>
             </div>
             <div class="col-12 age-child-room">
             </div>
            </div>
            <div class="row exph_l_9">
             <div class="col-6" data-traveler-type="Infant">
              유아
             </div>
             <div class="col-2">
              <span class="lnr lnr-circle-minus infant-minus" id="">
              </span>
             </div>
             <div class="col-1">
             </div>
             <div class="col-2">
              <span class="lnr lnr-plus-circle infant-plus" id="">
              </span>
             </div>
             <div class="col-12 age-infant-room">
             </div>
            </div>
           </div>
           <div class="row col-12 exph_room_btn_in">
            <div class="traveler-add text-left">
             방을 추가
            </div>
            <div class="traveler-close text-right">
             닫기
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="col-lg-3">
        <button class="exph_search_flight" onclick="expedia.search()" style="margin-top:15px;height:52px;" type="button">
         검색
        </button>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
</div>
<div class="tumbal" style="display:none">
</div>
<div id="explorecontainer">
 <iframe frameborder="0" height="1" src="https://kemenpar.demdex.net/event?d_sid=9325902" style="display:none" width="1">
 </iframe>
 <div class="container indt-container explore-container">
  <div class="row header_search">
   <div class="header_search_kiri">
    <div class="img-explore" onclick="myFunction()">
     <label style="color:#d2347d;font-size:13px;text-align:left;margin:0px 10px 3px 0px;line-height:14px;width:40px;vertical-align: middle;">
      Go Explore
     </label>
    </div>
   </div>
   <div class="header_search_kanan hidden-mobile">
    <form action="/content/indtravelrevamp/kr/ko/exploreresult" name="myForm">
     <div class="row row-mob">
      <div class="col-sm-4 explore">
       <select class="classic" id="type" name="type">
        <option class="holder" selected="selected" value="">
        </option>
        <option value="Family">
         가족
        </option>
        <option value="Couple">
         두
        </option>
        <option value="Group-traveler">
         그룹
        </option>
        <option value="Adventurer">
         모험가
        </option>
        <option value="Business">
         사업
        </option>
        <option value="Senior">
         연장자
        </option>
       </select>
      </div>
      <div class="col-sm-4 explore">
       <div class="button-group">
        <button class="btn btn-default btn-sm dropdown-toggle activity" data-toggle="dropdown" style="font-size:13px; overflow:hidden; position:relative; color: #6D519C; margin-top: 22px;" type="button">
         <span id="cathtmldesk">
          카테고리 선택 ...
         </span>
        </button>
        <ul class="dropdown-menu activity-drop desktop">
         <li class="cat">
         </li>
         <li class="cat">
         </li>
         <li class="cat">
         </li>
         <li class="cat">
         </li>
         <li class="cat">
         </li>
         <li>
         </li>
        </ul>
       </div>
      </div>
      <div class="col-sm-4 explore">
       <button class="bttn_explore">
        인도네시아를 탐험하다
       </button>
      </div>
     </div>
     <p id="demo">
     </p>
    </form>
   </div>
   <div class="col-sm-12 header_search_kanan show-mobile" id="myDIV" style="display:none; padding-top: 20px; padding-bottom: 10px;">
    <form action="/content/indtravelrevamp/kr/ko/exploreresult" name="myForm">
     <div class="row row-mob">
      <div class="col-sm-3 explore">
       <select id="typemob" name="typemob">
        <option class="holder" selected="selected" value="">
        </option>
        <option value="Family">
         가족
        </option>
        <option value="Couple">
         두
        </option>
        <option value="Group-traveler">
         그룹
        </option>
        <option value="Adventurer">
         모험가
        </option>
        <option value="Business">
         사업
        </option>
        <option value="Senior">
         연장자
        </option>
       </select>
      </div>
      <div class="col-sm-3 explore">
       <div class="button-group">
        <button class="btn btn-default btn-sm dropdown-toggle activity" data-toggle="dropdown" style="font-size:12px; position:relative; color: #6D519C;" type="button">
         <span id="cathtml">
          카테고리 선택 ...[ahref][link]<li>[ahref]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
        </button>
        <ul class="dropdown-menu activity-drop mobile">
         <li class="cat">
         </li>
         <li class="cat">
         </li>
         <li class="cat">
         </li>
         <li class="cat">
         </li>
         <li class="cat">
         </li>
         <li>
         </li>
        </ul>
       </div>
      </div>
      <div class="col-sm-3 explore">
       <button class="bttn_explore">
        인도네시아를 탐험하다
       </button>
      </div>
     </div>
     <p id="demo">
      <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
     </p>
    </form>
   </div>
   <div class="clear">
   </div>
  </div>
 </div>
</div>
<div id="contentcontainer">
 <div class="aem-Grid aem-Grid--12 aem-Grid--default--12 ">
  <div class="slideshow aem-GridColumn aem-GridColumn--default--12">
   <div class="slideshow-image full-width">
    <div style="position:relative">
    </div>
   </div>
  </div>
  <div class="breadcrumb-partner aem-GridColumn aem-GridColumn--default--12">
   <div class="full-width grey-bg">
    <div class="container indt-container">
     <div>
      <div class="breadcrumb-part">
       <div class="bread-bg">
        <span class="bread">
         <a href="/content/indtravelrevamp/kr/ko/home">
          홈페이지
         </a>
         <span class="lnr lnr-chevron-right">
         </span>
        </span>
        <span class="bread">
         [search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[ahref]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
        </span>
        <span class="bread last">
         <a href="/content/indtravelrevamp/kr/ko/trip-ideas/5-popular-fried-rice-varieties-at-jakarta-s-food-stalls">
          자카르타의 5대 볶음밥
         </a>
        </span>
       </div>
      </div>
     </div>
    </div>
    <div class="breadcrumb-part" style="background: linear-gradient(to right, , ); padding-bottom:5px;">
    </div>
   </div>
  </div>
  <div class="article-detail-by-area-tags parbase aem-GridColumn aem-GridColumn--default--12">
   <div class="article-container-s">
    <div class="modal fade" id="mapModal">
     <div class="modal-dialog">
      <div class="modal-content">
       <div class="modal-header">
        [link]
        
        <h3 class="modal-title" id="map-title">
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
       </div>
       <div class="modal-body">
        <div id="mapWrapper" style="margin: 0;padding: 0;width: 100%;height: 30rem;border: 0.1rem solid rgba(0, 0, 0, 0.8);background-color: rgba(172, 121, 62, 0.1);">
        </div>
       </div>
       <div class="modal-footer">
        [ahref]
        
       </div>
      </div>
     </div>
    </div>
    <div class="full-width">
     <div class="container indt-container">
      <div class="row article">
       <div class="col-12 text_kiri" style="padding-bottom: 1.5em;margin-top: -15px;">
        <ul class="view-love-page-this">
         <li class="">
          451
          <span class="show-desktop">
           Views
          </span>
         </li>
         <li id="countloved">
          <h2>
           <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
          </h2>
          <a href=")" id="lovethis">
           0
          </a>
          <span class="show-desktop">
           Loved This
          </span>
         </li>
         <li>
          <div class="dropdown">
           <button class="dropbtn">
            Share
           </button>
           <div class="dropdown-content">
            <a href="/share?url=.pis.mooo.com%3A8093%2Fcontent%2Fmaybankpoc%2Fen.html" target="_blank">
            </a>
           </div>
          </div>
         </li>
        </ul>
       </div>
       <div class="article-text-body text_kanan">
        <h1 class="h1-article-title" style="font-size: x-large;padding-bottom: 1em;width: 100%;overflow: hidden;">
         [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
        </h1>
        Fri, 09 February 2018
        <div class="article-detail-isi">
        </div>
        <div class="text_bawah">
         <ul>
         </ul>
         <div class="clear">
         </div>
        </div>
        <div class="text_menu_bawah things-y-s-know" style="border-top: 1px solid #dedede;padding-top: 2em !important;padding-bottom:1em">
         <strong class="things-y-s-know-title" style="padding-bottom: 1.5em;display: block;">
          당신이 알아야 할 것들
         </strong>
         <div class="row things-y-s-know-row justify-content-md-center" style="width:100%">
          <div class="col-4">
           <div class="things">
            [ahref]
            
           </div>
          </div>
          <div class="col-4 things_2">
           <div class="things">
            <a href="/content/indtravelrevamp/kr/ko/general-information/visa-immigration">
             비자 및 이민
            </a>
           </div>
          </div>
          <div class="col-4">
           <div class="things">
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="clear">
   </div>
  </div>
 </div>
 <div class="suggested-articles-by-area-tags aem-GridColumn aem-GridColumn--default--12">
 </div>
 <div class="article-flight-partner aem-GridColumn aem-GridColumn--default--12">
 </div>
 <div class="new newpar section aem-Grid-newComponent">
 </div>
</div>
<div>
 <div class="full-width search-hd-cp-pr" style="background-image: linear-gradient(to left, rgb(213, 51, 124), rgb(239, 126, 49)); background-size: cover;">
  <div class="indt-container">
   <form accept-charset="UTF-8" action="" id="form_subscribe" method="post" novalidate="novalidate">
    <div class="row search-hd-cp justify-content-md-center" style="padding-bottom: 35px; height: auto !important; padding-top: 25px;">
     <div class="col-lg-6" style="text-align: left; margin-bottom: 0px;">
      <div class="col-sm-6" style="vertical-align:middle;display:inline-block">
       <span style="color:white;font-size:18px;">
        우리와 함께 놀라운 이야기에 당신의 방법을 포장하십시오.
       </span>
      </div>
      <div class="col-sm-6" style="vertical-align:middle;display:inline-block">
      </div>
     </div>
     <div class="col-lg-6">
      <div class="input-group" id="desk-v" style="background: rgb(255, 255, 255); border-radius: 5px; margin-top: 15px;">
       <span class="input-group-btn" style="border: 2px solid rgb(255, 255, 255); border-radius: 0px 5px 5px 0px;">
        <button class="search-input-cp btn btn-secondary" id="subscribe_mail" type="button">
         구독하다
        </button>
       </span>
      </div>
     </div>
    </div>
   </form>
  </div>
 </div>
</div>
<div>
 <div class="full-width new-footer">
  <div class="new-footer-pattern">
  </div>
  <div class="container indt-container">
   <div class="row">
    <div class="col-12 footer-ministry">
     관광부장관, ,
     <span class="indt-republik-indonesia">
      인도네시아 공화국<li>[link]</li>[ahref][ahref]<li>[ahref]</li><li>[ahref]</li>[link]
     </span>
    </div>
    <div class="col-12 footer-ministry-partner">
     [link]
     
     <a class="" href="d">
     </a>
    </div>
    <div class="col-12">
     <ul class="footer-menu" style="font-size: 10pt;">
      <li>
       [ahref]
       
       <a class="new-cookie-privacy-term" href="/content/indtravelrevamp/kr/ko/cookie-policy">
        쿠키 정책
       </a>
      </li>
      <li>
       [link]
       
       [ahref]
       
       <div class="dropdown-content">
        [ahref]
        
        <a href="/content/dam/indtravelrevamp/en/brand-guidelines/brand-guideline.pdf">
         Brand &amp; Design
        </a>
       </div>
      </li>
      <li>
       [ahref]
       
       <a class="new-cookie-privacy-term" href="/content/indtravelrevamp/kr/ko/term-condition">
        이용 약관
       </a>
      </li>
      <li>
       [link]
       
      </li>
     </ul>
    </div>
    <div class="col-12">
     <div class="row new-footer-order">
      <div class="col-12 col-md-7 footer-disclaimer" style="margin-top:0px !important;">
       이 인도네시아 관광청 공식 웹 사이트는 상업 목적이 아닌 정보 제공 목적으로 사용됩니다. 표시된 모든 판매는 파트너십의 토큰으로 의도되며 항상 파트너 사이트로 리디렉션됩니다.
      </div>
      <div class="col-12 col-md-5 text-right footer-sosial-a">
       [link]
       
       [ahref]
       
       [link]
       
       <a href="/c/indonesiatravel" target="_blank" title="Youtube">
        <i aria-hidden="true" class="fa fa-youtube-play">
        </i>
       </a>
       <a href="/Tourism-g294225-Indonesia-Vacations.html" title="Trip Advisor">
       </a>
      </div>
     </div>
    </div>
   </div>
  </div>
 </div>
 <div class="full-width cookies-banner-container">
  <div class="cookies-banner-parent">
   <div class="text-cookies-banner">
    We utilize cookies and third-party cookies to provide you with more relevant contents and advertising. 
                By using this site, we are assuming that you agree with our use of cookies. 
                You can
    [link]
    
    .
    [ahref]
    
   </div>
  </div>
 </div>
</div>
<div>
 <div class="sidemenu col box-shadow" id="sidemenu-action">
  <div class="hidePanelSticky" onclick="hideSticky()">
   <i class="fa fa-forward">
   </i>
  </div>
  <div class="row">
   [ahref]
   
   <a class="" href="/content/indtravelrevamp/kr/ko/news" style="background-color:#aa337c;">
    <div class="sidemenu-icon" style="background-image:url(/content/dam/indtravelrevamp/page-assets/sticky-menu/whats%20on.png)">
    </div>
    <div class="sticky-menu-desc">
     뭐야?
    </div>
   </a>
   [ahref]
   
  </div>
 </div>
</div>
<noscript>
 <div style="display:inline;">
 </div>
</noscript>
<sly data-sly-test="false">
</sly>
