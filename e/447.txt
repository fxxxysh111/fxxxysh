--->|TWFueSBvZiB0aGUgbWFpbiBjaGFyYWN0ZXJzIGFyZSBmZW1hbGUsIGFuZCBhcmUgYSB2YXJpZXR5IG9mIGNoYXJhY3RlcnMgaW4gZGlmZmVyZW50IGR5bmFtaWNzIG9mIHJlbGF0aW9uc2hpcHMsIGhlY2sgb25lIG9mIHRoZSB3YXlzIHRoZSBjaGFyYWN0ZXJzIGZpZ2h0IGlzIGJ5IGNvbWJpbmluZyB0aGVtc2VsdmVzIGFuZCBiZWNvbWluZyB0aGUgcGh5c2ljYWwgZW1ib2RpbWVudCBvZiB0aGVpciByZWxhdGlvbnNoaXAuIApPdGhlciB2aWRzOgpUaGUgY2FzZSBpc24ndCBhYm91dCBhZmZpcm1hdGl2ZSBhY3Rpb24sIGJlY2F1c2UgQXNpYW5zIGFyZSBwbGFjZWQgaW50byB0aGUgc2FtZSAidW5wcm90ZWN0ZWQiIGNhdGVnb3J5IGFzIHdoaXRlcywgbWVhbmluZyB0aGF0IHRoZXkgYXJlIG5vdCBhbiAidW5kZXJyZXByZXNlbnRlZCIgY2xhc3MgY29uZmVycmVkIHNwZWNpYWwgYmVuZWZpdHMgZHVyaW5nIHRoZSBhcHBsaWNhdGlvbiBwcm9jZXNzLiBUaGVzZSBhcmUgYmVuZWZpdHMgZW5qb3llZCBieSBvbmx5IGEgZmV3IGNlcnRhaW4gY2xhc3NlcywgKGJsYWNrLCBMYXRpbm8sIE5hdGl2ZSBBbWVyaWNhbiwgUGFjaWZpYyBJc2xhbmRlciBhbmQgd29tZW4gaW4gY2VydGFpbiBjYXNlcykuIFRoaXMgaXMgdGhlIGRlZmluaXRpb24gb2YgYWZmaXJtYXRpdmUgYWN0aW9uLCBhbmQgYnkgYW5kIGxhcmdlLCBhZmZpcm1hdGl2ZSBhY3Rpb24gd2lsbCBjb250aW51ZSB0byBiZSBhcHBsaWVkLgpBcyBBbWVyaWNhbnMgbG9vayBmb3Igd2F5cyB0byBjdXQgY29ybmVycyBhbmQgc2F2ZSBtb25leSwgdGhleSBhcmUgZmFyIGxlc3MgbGlrZWx5IHRvIGdvIHRvIHRoZSBtb3JlIGV4cGVuc2l2ZSBib2FyZCBjZXJ0aWZpZWQgc3VyZ2VvbnMuIApXZSBvZnRlbiBzcGVuZCBhdCBsZWFzdCBhIHBvcnRpb24gb2YgaXQgd29uZGVyaW5nIHdoZXRoZXIgd2UncmUgaGFwcHksIGFuZCBpZiBub3QsIHdoYXQgd2UgbmVlZCB0byBtYWtlIHVzIGhhcHB5Li4gCldoeSB3b3VsZCBjb21wZXRpbmcgYW5kIHRyeWluZyB5b3VyIGhhcmRlc3QgYmUgaW1tb3JhbD8gT2YgY291cnNlIG15IGdvYWwgaXMgdG8gdGFrZSBhcyBtdWNoIG1vbmV5IGFzIHBvc3NpYmxlLCB1c2luZyBhbnl0aGluZyB3aXRoaW4gdGhlIHJ1bGVzIHRvIGRvIHNvLiBCdXQgaG93IGNhbiB5b3Ugc2F5IHRoZXJlIGlzIG5vIG1vcmFsIGNvZGUgdG8gcG9rZXIgbGlrZSBhbnkgZ2FtZSBvciBjb21wZXRpdGlvbj8gQXJlIHRoZXJlIG5vdCBjaGVhdGVycz8gQXJlIHRoZXJlIG5vdCBhbmdsZXNob290ZXJzPyBXaGF0IGFib3V0IHBlb3BsZSB3aG8gYXJlIGp1c3QgZGlzcmVzcGVjdGZ1bCB3aXRoIHRoZWlyIGFudGljcywgd29yZHMsIGV0Yy4/IEltIGp1c3Qgc2F5aW5nIEhpdCBOIFJ1bnMgdG8gbWUgYXJlIG9uIHRoZSBzYW1lIHNpZGUgb2YgdGhlIG1vcmFsIHNjYWxlIGFzIGFuZ2xlc2hvdHMuIEltIG5vdCBzYXlpbmcgSGl0IE4gcnVubmluZyBpcyBldmVuIGFzIGRpcnR5IGFzIGFuZ2xlc2hvb3RpbmcsIGltIHNheWluZyBpdHMgc3RpbGwgYSBsaXR0bGUgZnVja2VkIHdoZW4gaXQgY29tZXMgdG8gc3BvcnRtYW5zaGlwIG5vPwpZbyBJIGp1c3QgZHJvcHBlZCB3ZWxsIHJlYXNvbmVkIGFuZCB3cml0dGVuIChmb3IgbWUpLCBub24gc2hpdHBvc3QgY29tbWVudHMgb24gd2hhdCBtaWdodCBoYXZlIGJlZW4gdGhlIHNhbWUgb2lua2RvZyBwb3N0LCBhbmQgYWxsIHRocmVlIGRpc2FwcGVhcmVkLiAKVHdvIHllYXJzIGFnbywgdGhlIHN0dWRlbnQgdW5pb24gdGhhdCBqb2ludGx5IHNlcnZlcyBIdW1iZXIgQ29sbGVnZSBhbmQgdGhlIFVuaXZlcnNpdHkgb2YgR3VlbHBoIEh1bWJlciBjcmVhdGVkIHR3byBzbGVlcCBsb3VuZ2VzIGZvciBpdHMgdHdvIFRvcm9udG8gY2FtcHVzZXMsIGFuZCB0aGVuIGRvdWJsZWQgdGhlIG51bWJlciBvZiBiZWRzIGF0IG9uZSBvZiB0aGVtIGxhc3QgU2VwdGVtYmVyLgpMYXN0IHllYXIgd2UgZGlkIGEgY2hpcCBjaG9wIHRoYXQgbWVhbnMgdGhlIGxhc3QgNCBtZW4gc3RhbmRpbmcgYXQgdGhlIDdwbSB0b3VybmFtZW50IGFuZCBJIGdvdCAkMiw0NjUgYXMgSSB3YXMgc2Vjb25kIGluIGNoaXBzIGFuZCB0aGlzIGhhcHBlbmVkIGF0IDFhbSBpbiB0aGUgbW9ybmluZyBhbmQgYmVsaWV2ZSBpdCBvciBub3QgYSBidW5jaCBvZiBwcm9zIHdlcmUganVzdCBjb21pbmcgaW4gdG8gcGxheSBjYXNoIGdhbWVzICwgc28gSSBzYXQgYXQgYSAkMiAkNSBubyBsaW1pdCBjYXNoIGdhbWVzIGFuZCBiZWxpZXZlIGl0IG9yIG5vdCB0aGVyZSB3ZXJlIDIgcHJvcyBhdCB0aGUgdGFibGUgdHJ5aW5nIHRvIGVhcm4gYSBsaXZpbmcgYmVjYXVzZSBzaW5jZSBCbGFjayBGcmlkYXkgKCB0aGUgZGF5IHRoZXkgc2h1dCBkb3duIG9ubGluZSBwb2tlcikgdGhlIHByb3MgYWxsIG1ha2UgdGhlcmUgbGl2aW5nIGJ5IHBsYXlpbmcgY2FzaCBnYW1lcyBob3BpbmcgdG8gdGFrZSBpbmV4cGVyaWVuY2VkIHRvdXJpc3QgbW9uZXkgLCBsdWNraWx5IEkgb25seSBwbGF5ZWQgcHJlbWl1bSBoYW5kcyAsIG1hZGUgYSBjb3VwbGUgaHVuZHJlZCBhbmQgcmFuIG91dCBvZiB0aGVyZSBhcyBJIGNvdW50ZWQgNCBwcm9zIGF0IHRoZSB0YWJsZSBhbmQgdGhleSB3ZXJlIGp1c3Qgc2FsaXZhdGluZyB0byB0YWtlIHBlb3BsZSBtb25leQpHZXR0eXNidXJnIFN0YXIgQW5kIFNlbnRpbmVsIEFyY2hpdmVzCkRlc21vbmQgZ3Jhc3BlZCBzaGUgd2FzIGJlaW5nIHRhcmdldGVkIGJlY2F1c2Ugb2YgaGVyIHNraW4gdG9uZS4gRGVmaWFudGx5LCBzaGUgcmV0b29rIGhlciBtYWluIGZsb29yIHNlYXQuIApQZXJzb25hbCBhbmQgcHJpdmF0ZSB1c2VycyBtYXkgcmVhZCwgdmlldywgZG93bmxvYWQsIGNpcmN1bGF0ZSwgcmVwcm9kdWNlIGFuZCBkaXN0cmlidXRlIFNjb29wIGNvbnRlbnQgcHJvdmlkZWQgdGhhdCBTY29vcCBNZWRpYSBpcyBhdHRyaWJ1dGVkICh3aGVyZSBhcHBsaWNhYmxlKSBhcyB0aGUgc291cmNlIG9mIHRoZSBjb250ZW50LCBhbmQgcHJvdmlkZWQgdGhlIHB1cnBvc2Ugb2Ygc3VjaCB1c2UgaGFzIG5vIGNvbW1lcmNpYWwgcHVycG9zZXMgb3IgZW5kcy4zLjEuMi4gU2Nvb3AgQ29udGVudCBtYXkgbm90IGJlIHVzZWQgZm9yIGFueSBvdGhlciBwdXJwb3NlIHdpdGhvdXQgdGhlIHByaW9yIHdyaXR0ZW4gY29uc2VudCBvZiBTY29vcCBNZWRpYSwgdW5sZXNzIHRoZSBjb250ZW50IGlzIGV4cHJlc3NseSBsYWJlbGxlZCBhcyAiY3JlYXRpdmUgY29tbW9ucyIuMy4yIENvbW1lcmNpYWwgdXNlIG9mIFNjb29wIENvbnRlbnQgZXhwcmVzc2x5IHJlc3RyaWN0ZWQ6IFNjb29wIHN1cHBvcnRzIGxpY2Vuc2VkIGNvbW1lcmNpYWwgdXNlIG9mIGl0cyBjb250ZW50IGFuZCBpbnRyb2R1Y2VkIHRoZSBlbmQgdXNlciBsaWNlbmNlIGluIDIwMTIuMy4zLiAKVGhpcyBtYXkgcHV0IHRydXN0IGlzc3VlcyBpbnRvIHRoZSBoZWFkIG9mIHRoZSBodXNiYW5kIHRoYXQgd2VyZSBub3QgdGhlcmUgYmVmb3JlLiBPciwgdGhlIGh1c2JhbmQgY291bGQganVzdCBzbyBoYXBwZW4gdG8gdHVybiBkb3duIHRoZSBQSSB0aGF0IG5pZ2h0OyBwZXJoYXBzIHNoZSBub3QgaGlzIHR5cGUuIFNvLCB0aGlzIG1ldGhvZCBpcyBub3QgZm9vbCBwcm9vZi4gCkluIGRpZXNlbSBBcnRpa2VsOkRpZSBLYXJ0ZW4gYXVzdGVpbGVuRGllIEVpZ2Vuc2NoYWZ0ZW4gZWluZXMgR2ViZXJzIGVudHdpY2tlbG5UZXhhcyBIb2xkJ2VtIGdlYmVuRml2ZSBDYXJkIERyYXcgZ2ViZW4KVGhlIHdheSBJIHNlZSBpdCwgd2UgYWxyZWFkeSBoYXZlIHRoZSBsYXJnZSBtYWpvcml0eSBvZiB0aGUgd2FzdGUsIGl0IHN0b3JlZCB0ZW1wb3JhcmlseSBidXQgd2UgZG9uIGhhdmUgYSBsb25nIHRlcm0gc29sb3V0aW9uLiBOZWFybHkgZXZlcnlvbmUgaW4gbXkgYXJlYSBzZWVzIHRoZSBiZW5lZml0cyB0aGF0IGEgZmFjaWxpdHkgbGlrZSB0aGlzIHdvdWxkIGJyaW5nIGFuZCBpdCBzdHVwaWQgdGhhdCBpdCB3YXMgc2hvdCBkb3duIGp1c3QgYmVjYXVzZSBzb21lIHBlb3BsZSBsaXZpbmcgb24gdGhlIG90aGVyIHNpZGUgb2YgdGhlIGNvdW50eSBhcmUgYSBidW5jaCBvZiBuYWl2ZSBpZGlvdHMuClRvYmFjY28gQ29udHJvbApOb3Qgc28gZm9yIFRvYmV5IE1hZ3VpcmUsIHdobydzIGJlZW4gc3VlZCBhZnRlciBnZXR0aW5nIG91dGVkIGFzIG9uZSBvZiB0aGUgQSBsaXN0ZXJzIHdobyBhbGxlZ2VkbHkgdG9vayBwYXJ0IGluIGEgeWVhcnMgbG9uZyBpbGxlZ2FsIGdhbWJsaW5nIHJpbmcgdGhhdCBzYXcgbWlsbGlvbnMgb2YgZG9sbGFycyBjaGFuZ2UgaGFuZHMgaW4gYSBzZXJpZXMgb2Ygbm8gbGltaXQgaGlnaCBzdGFrZXMgcG9rZXIgZ2FtZXMuIFNvIGdvb2QsIGluIGZhY3QsIHRoYXQgYmV0d2VlbiAyMDA3IGFuZCAyMDA4LCBoZSBtYW5hZ2VkIHRvIHRha2UgJDMxMSwyMDAgb2ZmIG9mIEJldmVybHkgSGlsbHMgaGVkZ2UgZnVuZCBtYW5hZ2VyIEJyYWQgUnVkZXJtYW4gJDExMCwwMDAgb2YgdGhhdCBjb21pbmcgaW4ganVzdCBvbmUgbmlnaHQuLiAKVGhlIFJhcHRvcnMsIHdobyBoYXZlIHdvbiBlaWdodCBzdHJhaWdodCBob21lIGdhbWVzIGFnYWluc3QgQm9zdG9uLCBldmVuZWQgdGhlIHNlYXNvbiBzZXJpZXMgYXQgdHdvIGdhbWVzIGFwaWVjZS4gVG9yb250byBoYXNuJ3QgZHJvcHBlZCBhIHNlYXNvbiBzZXJpZXMgdG8gdGhlIENlbHRpY3Mgc2luY2UgMjAxMiAxMy4KRXZlcnkgYWRvcHRpb24gSSBoYWQgaGFzIGhhZCBhbiBpbmRvb3Igb25seSBjbGF1c2UuIEhlY2ssIG9uZSBvZiBteSBjYXRzIGNhbWUgZnJvbSBhIHNoZWx0ZXIgdGhhdCByZXF1aXJlZCByZWZlcmVuY2VzLCBhIHN0YWJsZSBqb2IgaGlzdG9yeSwgYW5kIGNvbnNlbnQgZnJvbSB5b3VyIGxhbmRsb3JkKGFuZCBoZSB3YXMgYSBraXR0ZW4gb2YgYmFybiBjYXRzLCBub3QgcHVyZWJyZWQpLgpJIHRoaW5rIHlvdSBzaG91bGQgY2hhcmdlIG1vcmUgaW4gdGVybXMgb2YgaG93IGxvbmcgaXQgd2lsbCB0YWtlIHlvdS4gQmVjYXVzZSBpdCBjYW4gYmUgYSBzbWFsbGlzaCBqb2IgdGhhdCB3b3VsZCBvbmx5IHRha2UgYSBmZXcgaG91cnMgYnV0IGlmIGl0IGlzIGNvdmVyZWQgaW4gZGlydCBhbmQgbGVhdmVzIHRoZW4gaXQgd2lsbCB0YWtlIGFsbCBkYXkgcHJvYmFibHkuIApBbmQgaWYgd2UgYXJlIG9uIHRoZSBzYW1lIHBhZ2UsIHdlIHByb2NlZWQuLiAKTGlrZSBhbnhpZXR5IGJyYWluIGlzIGdldHRpbmcgdGhlIGJldHRlciBvZiB5b3UsIHNvIHNvcnJ5IHRvIGhlYXIgdGhhdCEgV2hlbiBpdCBjb21lcyB0byBzb21ldGhpbmcgbGlrZSBzZXdpbmcsIHdoaWNoIGNhbiBiZSBhIGhvYmJ5IHdpdGggbmV2ZXIgZW5kaW5nIHRoaW5ncyB0byBsZWFybiwgaXQgYXQgdGltZXMgY2FuIHNlZW0gYXQgZmlyc3QgICB0byBiZSBvdmVyd2hlbG1pbmchIEkgbWVhbiB3aGVyZSBkbyB5b3UgZXZlbiBzdGFydD8gV2hhdCBkbyB5b3UgbmVlZCBhbmQgd2hhdCBjYW4geW91IGdldCBieSB3aXRoPyBJIGNhbiB0b3RhbGx5IHNlZSBob3cgb25lIGNvdWxkIGdldCBwYW5pYyBvdmVyIHN1Y2ggdGhpbmdzIChoZWNrIEkgZG8gZm9yIGp1c3QgYWJvdXQgZXZlcnl0aGluZyAgIHBhbmljIGRpc2NvcmQvYWdvcmFwaG9iaWEgRlRXISBoZWgpCkp1c3QgYmVjYXVzZSB5b3UgYXJlIGluIHRoZSB0b3AgMTAlIG9mIHBsYXllcnMgZG9lcyBub3QgbWVhbiB5b3UgYXJlIHRoZSBiZXN0IHBsYXllciBhdCB0aGUgdGFibGUgKGV2ZW4gaW4gYSA5IHBlcnNvbiB0YWJsZSkuIFlvdSBjYW4gYmUgdGhlIDV0aCBiZXN0IHBsYXllciBhdCB0aGUgdGFibGUgYXQgYWxsIHRpbWVzLCBidXQgdGhlIDUgZ29vZCBwbGF5ZXJzIHBsYXkgbWFueSBtb3JlIGhvdXJzIGFuZCBzdGF5IGF0IHRoZSB0YWJsZSBmb3IgOCBob3VyIHN0cmFpZ2h0IHdoaWxlIHRoZSBvdGhlciA0IHNlYXRzIHJvdGF0ZSB3aXRoIGFuIGVuZGxlc3Mgc3RyZWFtIG9mIGZpc2ggd2hvIGRvbmF0ZSBtb25leS4gWW91IGNhbiBlbmQgYSBzZXNzaW9uIHdpdGggdGhlIHNhbWUgNSBhdCB0aGUgdGFibGUgZm9yIDggaG91cnMsIGJ1dCBoYXZlIDQ1IHBlb3BsZSByb3RhdGUgdGhyb3VnaCB0aGUgb3RoZXIgNCBzZWF0cyBpbiB0aG9zZSA4IGhvdXJzLCBtYWtpbmcgeW91IHRvcCA1IG91dCBvZiA0NSBwZW9wbGUuIApOb3QgdG8gbWVudGlvbiwgeW91ciBtZXRhYm9saXNtIHdpbGwgc3BlZWQgdXAgc2ltcGx5IGJlY2F1c2UgeW91ciBib2R5IGhhcyB0byBidXJuIG1vcmUgZW5lcmd5IGp1c3QgdG8gZGlnZXN0IHlvdXIgZGlldC4gCk9zX2thaXNlcndpbGhlbG0gIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSWwgc291aGFpdGUgcXVlIEZyYW5jZSB0ZXJyZSBkJ2FzaWxlIG9yZ2FuaXNlIG1pZXV4IGwnYWNjdWVpbCBkZXMgZGVtYW5kZXVycyBkJ2FzaWxlIGF1IDEyNywgYmQgZGUgbGEgVmlsbGV0dGUgcG91ciB2aXRlciBsZXMgZmlsZXMgZCdhdHRlbnRlIHF1aSBzZSBjb25zdGl0dWVudCBxdW90aWRpZW5uZW1lbnQgbGEgbnVpdCwgcGV1dCB0cmUgYXZlYyBkZXMgcHJpc2VzIGRlIHJkdi4gCkkgZGlkIG5vdCBrbm93IHRoYXQgdGhlIHRhYmxlIGNhbiBkZWNpZGUgdG8gY2hhbmdlIHRoYXQgaWYgdGhleSBhbGwgYWdyZWUuIApFZGl0OiBtaWZmZWQgdXAgc29tZSBvZiBteSB0ZW5zZXMuIFNob3VsZCBiZSBmaXhlZCA6KUkgYSBTQUhNIGFuZCBteSBodXNiYW5kIGZyZWVseSBhZG1pdHMgaGUgY291bGQgbmV2ZXIgZG8gd2hhdCBJIGRvIGFuZCB0aGF0IG15IGpvYiBpcyBXQVkgaGFyZGVyIChhbmQgaGUgaGFzIGEgcHJldHR5IGRlbWFuZGluZyBjYXJlZXIuKSBJIHdhdGNoZWQgbXkgbW90aGVyICJoYXZlIGl0IGFsbCIgYW5kIG5vcGVkIHJpZ2h0IHRoZSBmdWNrIG91dCBvZiB0aGF0LiBNb3N0IHdvbWVuIHdvdWxkIGJlIHBlcmZlY3RseSBjb250ZW50IHRvIHN0YXkgaG9tZS4gV2UgYmVlbiBsaWVkIHRvIGFuZCBzb2xkIGEgZmFsc2UgYmFnIG9mIGdvb2RzIGZvciBkZWNhZGVzLiBUaGUgYmVzdCB0aGluZyB3ZSBjYW4gZG8gaXMgYmUgaG9uZXN0IHdpdGggb3VyIGNoaWxkcmVuIG1vdmluZyBmb3J3YXJkLgpEdWRlLCB5b3UgbmVlZCBtZXRhbCBjbGFzcHMgb3Igc29tZXRoaW5nISA6KCBBIHNsaWdodGx5IGxhcmdlciBzaGlydCwgd291bGQgdGhhdCB3b3JrLCBvciB3b3VsZCB5b3UganVzdCBkcm93bj8gKExvdHMgb2YgYm9vYmFnZSBkb2VzbiBuZWNlc3NhcmlseSBtZWFuIGEgbGFyZ2VyIGZyYW1lLCBhZnRlciBhbGwuKQpIb3BlZnVsbHkgc29tZXRpbWUgc29vbiEuIApNZW4gKG9sZCBhbmQgeW91bmcpIHdobyBhcmUgbG9uZWx5IGNhbiBoYXZlIGEgcGVyZmVjdGx5IG5vcm1hbCBjb252ZXJzYXRpb24gd2l0aG91dCB0b3VjaGluZyB5b3UuIElmIHRoZXkgY2FuJ3QsIHRoZXkncmUgYmVpbmcgY3JlZXB5LiBBcyBmb3Igc3RyYW5nZXJzIGp1ZGdpbmcgeW91ICAgd2hvIGNhcmVzLCB0aGV5IGRvbid0IGtub3cgeW91IG9yIGhvdyB0aGVzZSBtZW4gbWFrZSB5b3UgZmVlbC4KVGhlcmUgYXJlIHRoZSBvYnZpb3VzICAgdGhlIG9uZXMgd2hvc2UgcXVvdGFiaWxpdHkgZW5zdXJlZCBhIGZpbG0ncyBsZWdlbmRhcnkgc3RhdHVzICAgYnV0IGRpZyBkZWVwLCBhbmQgdGhlcmUgYXJlIGFuIGVudGlyZSBoZWFwIG9mIGdlbXMgdG8gZGlzY292ZXIuIEZlYXR1cmVkIGluIHRoaXMgbGlzdCBhcmUgZmlsbXMgYXMgZWFybHkgYXMgMTkzMywgcmFuZ2luZyByaWdodCB0aHJvdWdoIHRvIDIwMTkgKGZ1bGwgZGlzY2xvc3VyZSwgdGhlIGluc3VsdHMgZnJvbSBzb21lIG9mIHRoZXNlIGZpbG1zIGFyZSBiZXR0ZXIgdGhhbiB0aGUgYWN0dWFsIGZpbG1zIHRoZW1zZWx2ZXMpLCBzbyBmcm9tIEFuY2hvcm1hbiBhbmQgU2NhcmZhY2UgdG8gRXJpbiBCcm9ja292aWNoIGFuZCBPc2NhciB3aW5uaW5nIFlvcmdvcyBMYW50aGltb3MgZmlsbSBUaGUgRmF2b3VyaXRlLCB0aGVzZSBhcmUgdGhlIDY1IGJlc3QgbW92aWUgaW5zdWx0cyBvZiBhbGwgdGltZS4uIApXYXNoaW5ndG9uIGhhcyBhZG9wdGVkIHRoZSBTZWNvbmQgUmVzdGF0ZW1lbnQgb2YgVG9ydHMgd2hpY2ggcHJvdmlkZXMgdGhhdCB3aGVuIHRoZSBwZXJzb24gaXMgcXVhbGlmaWVkIGFzIGFuIGludml0ZWUgKHdoaWNoIHVuZGVyIHRoZXNlIGZhY3RzIE9QIGxpa2VseSBpcykgbmVnbGlnZW5jZSBuZWVkIG5vdCBiZSBwcm92ZW4gaW4gb3JkZXIgdG8gY29uZmVyIGxpYWJpbGl0eS4gClRoYXQgaG93IGl0IGFwcGVhbHMgdG8gc28gbWFueSBhbmQgaG93IHN1cHBsZW1lbnRzIGFyZSBzb2xkLiAKTG9uZyBzam91ciBhdXggdGF0cyBVbmlzOiB2aXRleiBsZXMgZW5udWlzIGZpc2NhdXgKVVRtcGEgIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkJ5cmQuIApUaGUgdGhyZWF0IGZyb20gdGhpcyB3ZWFwb24gd2FzIGFnb25pemluZyBhbmQgcGFscGFibGUgdGhlIHJlc3VsdHMgb2YgZ2FzIGF0dGFja3MgdXBvbiBhcm1lZCBjb21iYXRhbnRzIGluIFdXSSBhbmQgdGhlIGdhc3Npbmcgb2YgY2l2aWxpYW5zIGluIHRoZSAxOTIwIGFuZCBlYXJseSAxOTMwIG1hZGUgYSBoYXJkIHN0cmlrZSBpbnRvIHRoZSBzb2NpYWwgZmFicmljLCBhbiBlbm9ybW91cyBnYXBpbmcgbmV3IGhvbGUgdG8gYmUgZmlsbGVkIGluIHRoZSBoZWFydCBvZiBmZWFyLiAKQXMgSSBzYWlkLCBsZWFkIGlzIHNvZnQuIEl0J3Mgc3RpY2t5IHdoZW4geW91IGRyaWxsIGludG8gaXQsIGFuZCB0aGF0IGNhdXNlZCBtZSB0byBzbmFwIG9mZiBteSBmaXJzdCBkcmlsbCBiaXQuIEZvcnR1bmF0ZWx5LCBpdCBkaWRuJ3Qgc25hcCBvZmYgZmx1c2gsIHNvIHdlIHdlcmUgYWJsZSB0byBncmFiIGl0IHdpdGggcGxpZXJzIGFuZCBjb2F4IGl0IG91dC4gCkRpc2FibGUgb3JpZ2luIG92ZXJsYXksIGFuZCByZWFkZCBBcGV4IExlZ2VuZHMgbGF1bmNoIG9wdGlvbnMgIGZ1bGwgIG5vcm1hbCAgZHhsZXZlbCA5NSAgcmVmcmVzaCBbTWF4TW9uaXRvckh6SGVyZV0gIG5vdmlkICBub2pveSArZXhlYyBbQ0ZHZmlsZUlmWW91SGF2ZU9uZV0gK2Zwc19tYXggMTQ0IGFyZSBtb3N0IG9mIHRoZSBsYXVuY2ggb3B0aW9ucyBJIGhhdmUuIApDZXJ0ZXMsIGxhIHF1ZXN0aW9uIGRlIGwnY29sb2dpZSBuJ2VzdCBwYXMgdW5lIHByb2JsbWF0aXF1ZSBxdWkgcGV1dCBzZSByZHVpcmUgIHVuIHRlcnJpdG9pcmUgYXVzc2kgY2libCBxdSd1bmUgdmlsbGUsIGZ1dCBlbGxlIHVuZSBjYXBpdGFsZSwgbWFpcyBpbCBuZSBmYXV0IHJpZW4gbmdsaWdlciA7IGNlIHNvbnQgbGVzIHBldGl0cyBydWlzc2VhdXggcXVpIGZvbnQgbGVzIGdyYW5kZXMgcml2aXJlcyBkZSBsYSBwbGFudGUgVGVycmUuIENlcyBwcm9qZXRzIHBpbG90ZXMsIGR1IG1vaW5zIGNldXggcXVpIHNlcm9udCBzbGVjdGlvbm5zLCBzZXJvbnQgdGVzdHMgc3VyIHVuZSBwcmlvZGUgZGUgdHJvaXMgYW5zLiBJbHMgc2UgdmV1bGVudCBwYXJ0aWNpcGF0aWZzIGV0IGNvIGNpdG95ZW5zLiBPbiBwYXJsZSBkZSBTQ09QLCBkZSBjcmF0aW9ucyBkJ2VtcGxvaXMgZXQgZGUgbGllbiBzb2NpYWwsIGRlIGdlc3Rpb24gY29sbGVjdGl2ZS4gT24gc2Ugc291Y2llIGRlcyBtb2RlcyBkZSBwcm9kdWN0aW9uLCBvbiBwcm9wb3NlIGRlcyBwbGFudGF0aW9ucyByYWxpc2VzICBwYXJ0aXIgZGUgZGNoZXRzIHByb2R1aXRzIGxvY2FsZW1lbnQsIGRlcyBjdWx0dXJlcyBhbGltZW50ZXMgcGFyIGRlcyBlbmdyYWlzIGJpb2xvZ2lxdWVzLiBMJ2V4cGxvaXRhdGlvbiBldCBsYSBjb21tZXJjaWFsaXNhdGlvbiBlbiBjaXJjdWl0cyBjb3VydHMgZGUgcHJveGltaXQsIHJkdWlzYW50IGxlIG5vbWJyZSBkJ2ludGVybWRpYWlyZXMgZW50cmUgbGUgcHJvZHVjdGV1ciBldCBsZSBjb25zb21tYXRldXIsIHNvbnQgIGwnb3JkcmUgZHUgam91ci4gQXUgZGVsIGRlcyBlbmpldXggY29sb2dpcXVlcywgY2UgcXVpIHJlamFpbGxpdCBkZSBjZXMgcHJvamV0cywgYydlc3QgdW5lIHZvbG9udCBkZSBkdmVsb3BwZXIgdW4gbW9kbGUgY29ub21pcXVlIGRpZmZyZW50LCBsb2NhbCwgcmF0aW9ubmVsIGV0IGh1bWFpbiA7IGwnaHVtYWluIGF1IHNlcnZpY2UgZGUgbCdodW1haW4uIFVuZSBlbnRyZXByaXNlIHF1aSwgZGFucyBsYSBkdXJlLCB2aXNlcmFpdCBnYWxlbWVudCB1bmUgcGx1cyBncmFuZGUgYXV0b25vbWllIGFsaW1lbnRhaXJlIGRlcyBjaXRhZGlucy4KSSBmaW5kIHRoZSBzdG9yeSBvZiB0aGlzIEZvcmVzdCBHbGFkZSByYWlzZWQgZGF1Z2h0ZXIgb2YgYSBGb3JkIEVzc2V4IEVuZ2luZSBwbGFudCBza2lsbGVkIHRyYWRlc21hbiwgd2hvIHBhc3NlZCBkb3duIGhpcyBpbnRlbnNlIHdvcmsgZXRoaWMsIGRlZXBseSBpbnNwaXJpbmcuCkVlbiB0aGVyYXBldXQgemFsIHppY2ggem8gZ29lZCBtb2dlbGlqayBpbiBtb2V0ZW4gc3Bhbm5lbiB2b29yIHppam4gcGF0aW50ZW4uIFByb2Zlc3Npb25lZWwgaGFuZGVsZW4gdmluZCBpayBvb2sgaGV0IGhhbmRlbGVuIG1ldCBlZW4gcHJvZmVzc2lvbmVsZSBhdHRpdHVkZS4gCk1haXMgamUgdHJvdXZlIGRvbW1hZ2UgcXVlIGQnYXV0cmVzIGRjaWRlbnQgdm9sb250YWlyZW1lbnQgZGUgc2UgcHJpdmVyIGQndW5lIGRvc2UgZGUgc29tbWVpbCBwb3VyIGRhdmFudGFnZSByZW1wbGlyIGxldXJzIGpvdXJuZXMuLiAKVGhleSBkbyBTT01FVElNRVMgZ2V0IGVhdGVuIHRob3VnaC4gQlVUIEhBUkRMWS4gCkFubiBCLiAKVGhlcmUgaXMgbm90aGluZyBhbWJpZ3VvdXMgYWJvdXQgdGhhdC4gCklNTywgSSB0aGluayB0aGUgc2l0ZXMgdGhhdCB5b3UgbWVudGlvbmVkIG1pZ2h0IHRha2UgeW91ciBtb25leS4gVGhleSBwcm9iYWJseSB3b24gaWYgdGhlIGVjb25vbXkgaXMgZmluZS4gV2hhdCBpZiB0aGUgZWNvbm9teSBqdXN0IGNyYXNoLCBsaWtlIDIwMDg/IE5vIG9uZSBoYXMgbW9uZXkgdG8gcGxheSBwb2tlci9nYW1ibGUgb25saW5lLCBhbmQgdGhlIHNpdGVzIHN0cnVnZ2xlIHBheSB0aGVpciBlbXBsb3llZXMuIApJIGZpZ3VyZWQgb3V0IGhvdyB0byBzdGFydCB0aGUgY2FyIHdpdGggbXkgc21hcnQgcGhvbmUuIFdpc2ggSSBrbmV3IGhvdyB0byB0dXJuIGl0IG9mZi4KTXkgc29uIGhhcyBoZWF2eSB3b29kIHBpZWNlcyB0aGF0IGFyZSBwYWludGVkIG5pY2VseSBhbmQgc2hvdyBsaXR0bGUgdG8gbm8gd2VhciBldmVuIHRob3VnaCBoZSBmcmVxdWVudGx5IGNoZXdlZCBvbiB0aGVtLiAKU28gd2Ugd2VudCBiYWNrIGFuZCBnb3QgYSBwcm9mZXNzaW9uYWwgdG8gY29tZSBvdmVyIGFuZCBkbyBpdCByaWdodC4gCkJ1dCBmcm9tIGEgbW9yZSBleHBsb2l0YXRpdmUgcGVyc3BlY3RpdmUsIHJpdmVyIGNoZWNrL2phbSBsaW5lcyBhcmUgbm90b3Jpb3VzbHkgdW5kZXJibHVmZmVkLCBhbmQgSSBkb24gdGhpbmsgaGUgZG9pbmcgdGhpcyB3aXRoIDk5LCBvciBBSywgYSBzdHJhaWdodCBvciBhIGZsdXNoIGZvciB2YWx1ZSwgc28gdGhhdCBsZWF2ZXMgQUEsIEtLLCBBUSwgYW5kIG1heWJlIEtRLiAKV2hvIGRvZXM/IEtuaWdodGxleSdzIEFubmEgaXMgYSBiZWF1dGlmdWwsIHNoYWxsb3cgc29uZ2JpcmQsIG1hcnJpZWQgdG8gYSBzdG9kZ3kgYnVyZWF1Y3JhdCAoSnVkZSBMYXcgYmVoaW5kIHByaWdnaXNoIHNwZWN0YWNsZXMgYXMgS2FyZW5pbikgYW5kIGZsaXR0aW5nIHRocm91Z2ggdGhlIHVwcGVyIGNsYXNzIHdoaXJsIG9mIGxhdGUgSW1wZXJpYWwgUnVzc2lhIGFzIHRob3VnaCBzaGUgb3duZWQgaXQsIHdoaWNoIHNoZSBkb2VzLi4gClRoZSBPYWsgRmxhdHMgY2x1YiBpcyBtb3ZpbmcgZm9yd2FyZCBieSBnb2luZyBiYWNrIHRvIHRoZSBzaW1wbGUgdGhpbmdzLCB3aXRoIGl0cyBzdXN0YWluYWJpbGl0eSBpbml0aWF0aXZlcyBsZWFkaW5nIHRvIHNpZ25pZmljYW50IGZpbmFuY2lhbCBzYXZpbmdzLgpVbmRlciB5b3VyIHNraW4sIGVuY2FzaW5nIHlvdXIgYm9keSBhbmQgd2ViYmluZyBpdHMgd2F5IHRocm91Z2ggeW91ciBpbnNpZGVzIGxpa2Ugc3BpZGVyIHdlYnMsIGlzIGZhc2NpYS5GYXNjaWEgaXMgbWFkZSB1cCBwcmltYXJpbHkgb2YgZGVuc2VseSBwYWNrZWQgY29sbGFnZW4gZmliZXJzIHRoYXQgY3JlYXRlIGEgZnVsbCBib2R5IHN5c3RlbSBvZiBzaGVldHMsIGNob3JkcyBhbmQgYmFncyB0aGF0IHdyYXAsIGRpdmlkZSBhbmQgcGVybWVhdGUgZXZlcnkgb25lIG9mIHlvdXIgbXVzY2xlcywgYm9uZXMsIG5lcnZlcywgYmxvb2QgdmVzc2VscyBhbmQgb3JnYW5zLkV2ZXJ5IGJpdCBvZiB5b3UgaXMgZW5jYXNlZCBpbiBpdC4gClBsdXMgcXVlIGwnYXJzZW5hbCBudWNsYWlyZSBkZSBQeW9uZ3lhbmcsICJsZXVyIG9ic2Vzc2lvbiBjJ2VzdCBsYSBzdGFiaWxpdCBldCBsZSBtYWludGllbiBkZSBkZXV4IENvcmVzIiwgb2JzZXJ2ZSBsZSBzaW5vbG9ndWUuICJMYSBDaGluZSB2ZXV0IG1haW50ZW5pciB1biBFdGF0IHRhbXBvbiBxdWkgc29pdCBwbHVzIHByb2NoZSBkJ2VsbGUgcXVlIGRlcyBFdGF0cyBVbmlzIi4KVXBkYXRlZCAyMDE5IFByaWNlcyBIb3RlbCBSZXZpZXdzCllvdSBhcmUgdHJ5aW5nIHRvIG1lcmdlIHR3byBkaWZmZXJlbnQgY29uY2VwdHM6IHN0cmF0ZWd5IGFuZCB0YWN0aWNzIGludG8gb25lIGNvbmNyZXRlIHBsYW4uIApMb29rcyBsaWtlIGEgc2VyaW91cyBwbGF5ZXIuIFlvdSBhcmUgaW5pdGlhbGx5IGludGltaWRhdGVkIGJ5IGhpbS4gClRoaXMgaGFuZCBoYXMgYWxtb3N0IG5vIGxvdyBwb3NzaWJpbGl0aWVzIHNpbmNlIHRoZSBzaXggaXMgdG9vIGhpZ2guIElmIHlvdSBoaXQgYSBmbHVzaCBvciBhIHN0cmFpZ2h0LCBlaXRoZXIgb25lIGlzIHRvbyBsb3cgdG8gd2luIGluIG1vc3QgY2FzZXMuVGhpcyBsYXN0IGV4YW1wbGUgaWxsdXN0cmF0ZXMgYW4gaW1wb3J0YW50IHBvaW50LiBNYW55IHBsYXllcnMgbWlnaHQgdGhpbmsgdGhpcyBoYW5kIGhhcyBncmVhdCBzdHJhaWdodCBwb3RlbnRpYWwuIFdoaWxlIHRoaXMgaXMgdHJ1ZSwgZXZlbiBpZiB5b3UgZG8gaGl0IGEgc3RyYWlnaHQsIGl0IHdpbGwgcmFyZWx5IGJlIHRoZSBiZXN0IHBvc3NpYmxlIHN0cmFpZ2h0LCBhbmQgbW9zdCBvZiB0aGUgdGltZSBpdCB3aWxsIGJlIGJlY2F1c2UgdGhlcmUgYXJlIHRocmVlIGNhcmRzIDggYW5kIGJlbG93IG9uIHRoZSBib2FyZCwgd2hpY2ggbWFrZXMgYSBsb3cgaGFuZCBmb3Igc29tZW9uZSBlbHNlLiAKSSdkIHRha2UgaGltIHVwIG9uIHRoYXQgYmV0IGV2ZXJ5dGltZSwgc2F5aW5nIHRoYXQgaGUgY291bGRuJ3QuIApEYW5vNjcwICA2NCBwb2ludHMgIHN1Ym1pdHRlZCA1IHllYXJzIGFnbwpJIGJlbGlldmUgdGhlIG1hcmtldCBhdCB0aGlzIHBvaW50IGlzIGxlYW5pbmcgdG93YXJkcyBiZWluZyBtb3JlIHJhdGlvbmFsIHdoZW4gaXQgY29tZXMgdG8gTGl0ZWNvaW4uSSBhbiBpbmRpY2F0b3IgdGhhdCB0aGUgYm90dG9tIGlzIGluLCB0aGVuIGdvIGFoZWFkIGFuZCBidXkgbW9yZS4gClJvY2szN21hbiAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ28KVGhlbiBicmVha3MgaW50byBteSBiZWRyb29tIHdoaWxlIEkgaW4gaXQuIApEaXZvcmNlIG9yIG5vIGRpdm9yY2UsIHlvdSBuZWVkIHRvIHB1dCB5b3VyIGZvb3QgZG93bi4gCkhlcmUgYW4gaW50ZXJlc3RpbmcgdHdpc3Qgb24gZWxlY3RyaWNpdHkgYW5kIHRoZSB0ZWxlZ3JhcGgsIGJ1dCBub3QgcXVpdGUgd2hhdCB5b3UgZXhwZWN0LiAKRmVybiBhdCBzb21lIHBvaW50IHRhbGtlZCB0byBhbiB1bm5hbWVkIHVwc3dpbmcgbWVtYmVyIG92ZXIgc2t5cGVkIHdobyBpbiBhIG1hbmljIHN0YXRlIHNhaWQgKHNvbWV0aGluZyBsaWtlLCBub3QgdmVyYmF0aW0pICJIQVZFIFlPVSBNQURFIE1PUkUgVklERU9TPyBJIEhBVkUgU08gTVVDSCBNT05FWSBCVVQgSSBORUVEIE1PUkUuIgpJZiB5b3UgaGF2ZSBhbiBlbWFpbCBtYXJrZXRpbmcgY2FtcGFpZ24gdG8gcHJvbW90ZSB5b3VyIFRyaSBDb2xvciBDbGF5IFBva2VyIENoaXBzLCBpdCBpcyBpbXBvcnRhbnQgdG8gZW5zdXJlIHRoYXQgeW91IGtub3cgd2hhdCBpdCB0YWtlcyB0byBjcmVhdGUgYSBjbGVhciwgY29uY2lzZSBjYWxsIHRvIGFjdGlvbi4gV2hpbGUgaXQgaXMgaW1wb3J0YW50IHRvIGNyZWF0ZSBlbWFpbHMgdGhhdCBhcmUgYXR0cmFjdGl2ZSwgZW50ZXJ0YWluaW5nLCBhbmQgZW5qb3lhYmxlIGZvciByZWFkZXJzLCBpdCBpcyBlc3NlbnRpYWwgdG8gY3JlYXRlIGVtYWlscyB0aGF0IGNsZWFybHkgZGVmaW5lIHdoYXQgaXQgaXMgdGhhdCB5b3Ugd2FudCB5b3VyIHJlYWRlcnMgdG8gZG8uIEluIHRoaXMgZ3VpZGUsIHlvdSB3aWxsIGJlIGludHJvZHVjZWQgdG8gc29tZSBzaW1wbGUgc3RlcHMgb24gaG93IHRvIGNyZWF0ZSBhIGNhbGwgdG8gYWN0aW9uIGluIHlvdXIgVHJpIENvbG9yIENsYXkgUG9rZXIgQ2hpcHMgZW1haWwgbWFya2V0aW5nIGNhbXBhaWduLiBJZiB5b3Ugd2FudCB0byBzZWUgdGhlIHNhbGVzIHJvbGxpbmcgaW4gb24geW91ciBDbGF5IFBva2VyIENoaXBzLCB0aGVzZSBzaW1wbGUgc3RyYXRlZ2llcyBjYW4gYXNzaXN0IHlvdSBpbiB0aGF0IGVuZGVhdm9yIQpXaG8gd2FzIG5vbWluYXRlZCBieSBwZXRpdGlvbiB0byBoYXZlIGhlciBuYW1lIG9uIHRoZSBiYWxsb3QuIApJdCdzIGFtYXppbmcgc2VlaW5nIGEgc3BhY2UgY29tZSB0byBsaWZlIGFuZCB0byB0aGluayBhYm91dCB0aGUgZXhwZXJpZW5jZXMgcGVvcGxlIHdpbGwgaGF2ZSBpbiB0aGF0IGVudmlyb25tZW50LiBJIGxvdmUgc29tZSBwYXJ0cyBvZiBteSByb2xlIGJ1dCBzdHJ1Z2dsZSB3aXRoIG90aGVyIHBhcnRzIGJ1dCBpdCdzIHRoZSBiZXN0IHdheSB0byB0dXJuIG15IHRpbWUgaW50byBjYXNoIHRvIGFsbG93IG1lIHRvIGJlIGFibGUgdG8gZG8gdGhpbmdzIEkgcmVhbGx5IGxvdmUgbGlrZSByaWRlIG9sZCBtb3RvcmN5Y2xlcyBhcm91bmQgdGhlIHdvcmxkLiBXaGF0IGRvIHlvdSBkbyBjaGVycnkgcGllPy4gCkl0IGlzIGEgZGF5IHdoZW4gd29tZW4gYXJlIHJlY29nbml6ZWQgZm9yIHRoZWlyIGFjaGlldmVtZW50cyB3aXRob3V0IHJlZ2FyZCB0byBkaXZpc2lvbnMsIHdoZXRoZXIgbmF0aW9uYWwsIGV0aG5pYywgbGluZ3Vpc3RpYywgY3VsdHVyYWwsIGVjb25vbWljIG9yIHBvbGl0aWNhbC4gCkEgZnJlZSBwb2tlciBsZWFndWUgbGlrZSBOdXR6IGlzbid0IHByb3RlY3RlZCBieSB0aGUgc3RhdGUncyBleGVtcHRpb24gZm9yIHBlbm55IGFudGUgZ2FtZXMsIGVpdGhlci4gVGhhdCBhcHBsaWVzIHRvIGxvdyBzdGFrZXMgZ2FtZXMgaW4gYSBkd2VsbGluZywgbGVnYWxpemVkIHllYXJzIGFmdGVyIHRoZSBpbmZhbW91cyAxOTgxICJMYXJnbyBFaWdodCIgcmFpZC4gSW4gdGhhdCBjYXNlLCBlaWdodCBlbGRlcmx5IG1lbiB3ZXJlIGFycmVzdGVkIGZvciBnYW1ibGluZyBpbiBuaWNrbGUgYW5kIGRpbWUgcG9rZXIgZ2FtZXMgYXQgdGhlaXIgbW9iaWxlIGhvbWUgcGFyayBjbHViaG91c2UuLiAKSW4gTW9udHJlYWwsIGlmIHRlZW5hZ2UgZ2lybHMgZG9uIHdlYXIgYmlraW5pcyBhbmQgZGlzcGxheSB0aGVtc2VsdmVzLCB0aGVuIHRoZXkgd2lsbCBoYXZlIHRvIHBheSBzb2NpYWwgYW5kIGVjb25vbWljIGNvc3RzLiBJbiBNb250cmVhbCwgaWYgdGVlbmFnZSBnaXJscyBkb24gY292ZXIgdGhlbXNlbHZlcyBmcm9tIGhlYWQgdG8gdG9lIGFuZCBkaXNwbGF5IGEgd2lsbGluZ25lc3MgdG8gb2JleSB0aGUgb3JkZXJzIG9mIHRoZSBtZW4gaW4gdGhlaXIgZmFtaWxpZXMsIHRoZW4gdGhleSBtaWdodCBoYXZlIHRvIHBheSB3aXRoIHRoZWlyIGxpdmVzLiBCZWluZyBhIHdvbWFuIGlzIG5ldmVyIHdpdGhvdXQgY29zdHMsIGJ1dCBkZWF0aCBpcyBzdXJlbHkgdG9vIGhpZ2ggYSBjb3N0IGZvciBhbnkgb2YgdXMgdG8gdG9sZXJhdGUuCkl0J3MgZ2V0dGluZyBsYXRlciBhbmQgbGF0ZXIgaW4gdGhlIGFwYXJ0bWVudCBodW50IGFuZCB0byBiZSBob25lc3QsIEkndmUgYnkgbm93IGhlYXJkIGJhZCB0aGluZ3MgYWJvdXQgYWxtb3N0IGV2ZXJ5IGNvbXBhbnkgaW4gUGl0dHNidXJnaCBieSBub3cuIFBsdXMsIEknbSBzZWFyY2hpbmcgZnJvbSBvdXQgb2Ygc3RhdGUgYW5kIHRoZXkgd2VyZSBvbmUgb2YgdGhlIGZldyBjb21wYW5pZXMgd2hvIGdyYW50ZWQgbWUgYSByZW1vdGUgdG91ci4gCkkgYW0gbm90IGFza2luZyB5b3UgdG8gc2luZ2xlIHVzIGR1ZGVzIG91dC4gCkFtb25nIHRob3NlIGFmZmVjdGVkIGJ5IHRoZSBzaHV0ZG93biAgIHRoZSB0aGlyZCBvZiAyMDE4ICAgYXJlIHRoZSBkZXBhcnRtZW50cyBvZiBIb21lbGFuZCBTZWN1cml0eSwgVHJhbnNwb3J0YXRpb24sIEludGVyaW9yLCBBZ3JpY3VsdHVyZSwgU3RhdGUgYW5kIEp1c3RpY2UuIFRob3NlIGJlaW5nIGZ1cmxvdWdoZWQgaW5jbHVkZSA1MiwwMDAgd29ya2VycyBhdCB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBTZXJ2aWNlIGFuZCBuZWFybHkgZXZlcnlvbmUgYXQgTkFTQS4gCkRleW9veWEgIDMgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpUaGUgZmlyc3QgZmV3IGRheXMgbXkgZG9nIHdhcyB3aXRoIG1lLCBoZSB3b3VsZCBzaXQgdW5kZXIgdGhlIGF0dGljIGRvb3IgYW5kIGdyb3dsIHVwIGF0IGl0LCB3aGljaCB0b3RhbGx5IGZyZWFrZWQgbWUgb3V0LiAKQW5kIHRoYXQgaXMgdGhlIHBvaW50LiAKQXR0b3JuZXkgUGF1bCBMb2NobmVyIHdyb3RlIGluIHRoZSBpbmRpY3RtZW50LiAKQ3JpbWluYWxzIGluZmxhdGVkIHRoZWlyIG11cmRlciBzdGF0cyBmb3IgdGhlIHNhbWUgcmVhc29uIGd1eXMgdG9kYXkgaW5mbGF0ZSB0aGVpciBzZXh1YWwgZXhwZXJpZW5jZTogSXQgbWFkZSB0aGVtIGxvb2sgY29vbC4gClRoYW5rcyBmb3IgeW91ciB0aW1lbHkgcG9zdCEgU3BvdXNlIGFuZCBJIGFyZSBjb25zaWRlcmluZyBhIG1vdmUgdG8gV2VuYXRjaGVlLCB3b3JraW5nIGFsc28gaW4gaGVhbHRoY2FyZS4gV2UgcmVjZW50bHkgc3BlbnQgYSBmZXcgZGF5cyBpbiB0b3duLCBhbmQgbG92ZWQgaXQuIEl0J3MgYSBzbWFsbCB0b3duLCBidXQgZG9lcyBub3QgZmVlbCBsaWtlIGl0LiAKVG8gYW5zd2VyIHlvdXIgcXVlc3Rpb25zIG91dCBvZiBvcmRlciwgdGhpcyBkb2Vzbid0IHBvaW50IHRvIGEgc3BlY2lmaWMgR29kIGF0IGFsbC4gSXQgbWVyZWx5IHN1Z2dlc3RzIGludGVsbGlnZW5jZS4gSSBiZWxpZXZlIEkgbWVudGlvbmVkIHRoYXQgaW4gdGhlIHRleHQuIAoiUmFmYSBOYWRhbCByZXByZXNlbnRzIGFsbCB0aGF0IGlzIGdyZWF0IGFib3V0IGNvbXBldGl0aW9uICAgdGhlIG1peCBvZiB0YWxlbnQsIGludGVsbGVjdCwgZGVkaWNhdGlvbiBhbmQgbWVudGFsIHN0cmVuZ3RoIHRoYXQgeW91IGZpbmQgaW4gY2hhbXBpb25zIGluIGV2ZXJ5IHNwb3J0LCIgc2FpZCBNYXJrIFNjaGVpbmJlcmcsIFBva2VyU3RhcnMgQ2hhaXJtYW4gb2YgdGhlIEJvYXJkLiBhcmUgcHJvdWQgdG8gaGF2ZSBSYWZhIGFzIGFuIGFtYmFzc2Fkb3IgZm9yIHRoZSBicmFuZCBhbmQgZXhjaXRlZCBhdCB0aGUgb3Bwb3J0dW5pdHkgdG8gaGVscCBoaW0gZW5qb3kgYW5kIGltcHJvdmUgaGlzIGdhbWUuIgpCdXQgaWYgSSBoYWQgdG8gb3BlbiBvbmUgZHJpdmUgYW5kIGxvYWQgYSBzcHJlYWRzaGVldCBqdXN0IHRvIGxvb2sgYXQgdGhlIHJ1bm5pbmcgdG90YWxzLCB5b3UgY2FuIGJldCBJIHdvdWxkIG5vdCBiZSBib3RoZXJpbmcgYnVkZ2V0aW5nIGF0IGFsbC4gClNsb3d1cnh2dCAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KSSBoYXZlIGZlZCBDb250ZW5kZXIgZm9yIHNldmVyYWwgeWVhcnMsIGFuZCBkZWNpZGVkIHRvIHN3aXRjaCB0byB0aGlzIG5ldyBwcm9kdWN0IGJlY2F1c2UgaXQgc291bmRlZCBtb3JlIGFwcHJvcHJpYXRlIGZvciBteSBoZXJkcy4uIApEb2VzIHRoaXMgc291bmQgdG9vIGFjYWRlbWljPyBUaGUgUGVyZmVjdCBOYW5ueSBpcyBkaXNzYXRpc2Z5aW5nLCBkZWxpYmVyYXRlbHksIGJ1dCBpdCBpcyBub3Qgd2l0aG91dCBzaW1wbGUgcGxlYXN1cmVzLiBTbGltYW5pIGlzIHZlcnkgZ29vZCBhdCBtYWtpbmcgeW91IGZlZWwgdmVyeSBiYWQuIEluIGEgZmV3IHN0YXJrIGxpbmVzLCBzaGUgY2FuIGludm9rZSBzb21lIGluZGVsaWJsZSBkcmVhZCBvciBtZW5hY2UsIGFuZCBmaW5kIGluIHRoZSBiYW5hbCBzb21lIGVsdXNpdmUgdGhyZWF0IGx1cmtpbmcuIApUaGUgS2luZyBvZiAuIApBIEtvYmxlbnogMTUwMCBpcyBzb21lIGtpbmQgb2YgZmxvb3IgYnVmZmVyLiAKSXZ5MTc2ICAzIHBvaW50cyAgc3VibWl0dGVkIDcgaG91cnMgYWdvClJ5YW4gd2FzIGdvb2QgZnJpZW5kcyB3aXRoIEphY2sgSGFycmlzb24sIGEgdG9wIHNwcmludGVyIGFuZCBmZWxsb3cgcG9saWNlbWFuIHdobyB3YXMgbmlja25hbWVkIGZseWluZyBjb3AuIEhhcnJpc29uIHJlY3J1aXRlZCBwb2xpY2VtZW4gdG8gdm9sdW50ZWVyIGF0IHRoZSBnYW1lcywgYnV0IGhhZCBhIGhhcmQgdGltZSBjb252aW5jaW5nIFJ5YW4uClRoZXJlIHBsZW50eSB3cm9uZyB3aXRoIERSRXMgYW5kIHRoZSBwcmV2YWxlbmNlIG9mIHBzZXVkb3NjaWVuY2UgaW4gdGhlIGNvdXJ0cywgdGhvdWdoIHRoZSBsYXR0ZXIgaXMgYXQgbGVhc3QgYXMgbGlrZWx5IHRvIGdldCBhbiBhY3F1aXR0YWwgb3IgZmFsc2UgZmluZGluZyBvZiBpbmNvbXBldGVuY2UgYXMgaXQgaXMgdG8gZ2V0IGEgY29udmljdGlvbi4gCkl0IHVubHVja3kgYW5kIGl0IHN1Y2tzLCBob3dldmVyIHRoYXQgaXMgYSBiaWcgYW5lY2RvdGUgeW91IGFyZSBsYWJlbGluZyBhcyBhIGZhY3QuIAoiUGFydGljaXBhdGlvbiBpbiBhIGxvbmcgdGVybSwgaGlnaCBpbnRlbnNpdHkgd2VpZ2h0IGJlYXJpbmcgZXhlcmNpc2UgcHJvZ3JhbSBjb21wcmlzaW5nIGltcHJvdmVtZW50IGluIGFlcm9iaWMgZml0bmVzcyBhbmQgaW1wYWN0IGdlbmVyYXRpbmcgYWN0aXZpdGllcyBkb2VzIG5vdCBpbmNyZWFzZSB0aGUgcmF0ZSBvZiByYWRpb2xvZ2ljIGpvaW50IGRhbWFnZSBvZiB0aGUgaGFuZHMgYW5kIGZlZXQgaW4gcGF0aWVudHMgd2l0aCBSQSwiIHRoZSByZXNlYXJjaGVycyBub3RlZC4gCkdlbmVzZWUgQ291bnR5IGNoYXJpdHkgcG9rZXIgcm9vbXMgcXVlc3Rpb24gdGhlaXIgZnV0dXJlIHVuZGVyIHByb3Bvc2VkIHN0YXRlIHJ1bGVzCkdlIGRpbiBvdHJvZ2VuIG1ha2UgbWFzc29yIGF2IHV0cnltbWUgYXR0IGdyYSBldHQgbWlzc3RhZy4gClRoZSB3aWZlLCBhY2NvcmRpbmcgdG8gdGhlIGp1ZGdlLCBkaWQgbm90IGV4cHJlc3MgaGVyIHBvc2l0aW9uIHdpdGggYW55IHNvcnQgb2YgY2xhcml0eSwgbGVhdmluZyB0aGUganVkZ2Ugd2l0aG91dCBhbiBhcHByZWNpYXRpb24gb2YgaG93IHNoZSB3YW50ZWQgY29zdHMgdG8gYmUgcmVzb2x2ZWQuIApUZXhhcyBIb2xkJ2VtIHVzZXMgYSBzdGFuZGFyZCA1MiBjYXJkIGRlY2ssIHdpdGggYW4gb2JsaWdhdG9yeSBzaHVmZmxlIGJlZm9yZSBldmVyeSBoYW5kLiAKSSBkb24gdGhpbmsgeW91IGNhbiBnbyB3cm9uZyB3aXRoIERyLiBXaWVucyBmcm9tIEltYWdlIFBsdXMgb3IgRHIuIApZZWEsIEdJQU5UIEpFTkdBLiAKV2UgYWxzbyBnb3QgYSBiaXJ0aCAoU3VzYW4ncyBncmFuZGNoaWxkKSwgYSBkZWF0aCAoUklQIE1ycy4gClN0aWxsLCB0aGVyZSBub3QgZW5vdWdoIHBpdHkgdG8gYWdyZWUgd2l0aCBoaXMgcmVhc29uaW5nIGV2ZW4gYSBsaXR0bGUgYml0LiBKdXN0IGVub3VnaCB0byBmZWVsIGVtYmFycmFzc2VkIGZvciBoaW0gYW5kIGhvcGUgdGhhdCBzb21lb25lIGlzIHRoZXJlIGxvb2tpbmcgYWZ0ZXIgaGltIHdoaWxlIGhpcyB3aWZlIGlzbiB0aGVyZSB0by4gClNvLCBsZXQgcmVtb3ZlIHRheGVzLCB0aGUgZ292ZXJubWVudCBpcyBub3cgZGVmdW5kZWQuIFdoYXQgaGFwcGVucyB0byBzbWFsbGVyIG11bmljaXBhbGl0aWVzIHRoYXQgcmVseSBvbiBzdGF0ZSBmdW5kaW5nIGZvciBlbWVyZ2VuY3kgc2VydmljZXMgKHBvbGljZSwgZmlyZSwgZXRjLik/IEFsc28sIHdoYXQgaGFwcGVucyB0byBsYXJnZSBjaXRpZXMgdGhhdCBoYXZlIGVub3Jtb3VzIGVtZXJnZW5jeSBzZXJ2aWNlcyBhbGwgZnVuZGVkIGJ5IHRheGVzIChJIHRhbGtpbmcgTllDLCBMQSwgTWlhbWksIGV0Yy4pPyBEb2VzIHByaXZhdGUgaW5kdXN0cnkgdGFrZSBvdmVyIGVtZXJnZW5jeSBzZXJ2aWNlcz8gSWYgc28sIG9uY2UgcHJvZml0IGJlY29tZXMgdGhlIG1vdGl2YXRvciAod2hpY2ggaXQgaGFzIHRvIGluIG9yZGVyIGZvciB0aGVtIHRvIHN0YXkgaW4gYnVzaW5lc3MpIHdoYXQgaXMgdGhlIG1vdGl2YXRpb24gZm9yIHRoZSBjb21wYW5pZXMgdG8gYWN0IGV0aGljYWxseSBpbnN0ZWFkIG9mIGp1c3QgbXVzY2xpbmcgb3V0IGFueSBjb21wZXRpdGlvbiBhbmQgYWN0aW5nIHdpdGggaW1wdW5pdHk/IE9uY2UgdGF4ZXMgYXJlIGdvbmUsIHRoZXJlIGFyZSBvYnZpb3VzbHkgbm8gcmVndWxhdG9yeSBhZ2VuY2llcyBpbiBwbGFjZSBhbnltb3JlIHNvIGdvdmVybm1lbnQgY2FuIHBvbGljZSB0aGVtLi4gCk5vdGhpbmcgd2lsbCBldmVyIGdldCB0aGUgc21lbGwgb3V0Li4gCkV0IGlsIG5lIGZhdXQgcGFzIG91YmxpZXIgcXVlIGNldHRlIGZvdWxlIGF0dGlyZSBnYWxlbWVudCB1biBub21icmUgY3JvaXNzYW50IGRlIGRsaW5xdWFudHMgYXZlYyBwbHVzIGRlIHRyYWZpY3MgZXQgcGx1cyBkZSB2b2xzICBsYSBjbC4gCkphcGFuZXNlIFJvYm90IENyYXplOSBNb250aCBPbGQgQmFieWJvdEphcGFuJ3MgVG9reW8gVW5pdmVyc2l0eSBwcm9mZXNzb3IgWWFzdW8gS3VuaXlvc2hpIHVudmVpbHMgYSBuaW5lIG1vbnRoIG9sZCBiYWJ5IHJvYm90ICJOb2J5IiBhdCBoaXMgbGFib3JhdG9yeSBhdCB0aGUgVG9reW8gVW5pdmVyc2l0eSBvbiBKdW5lIDExLCAyMDEwLiBUaGUgYmFieSByb2JvdCBoYXMgdHdvIGNhbWVyYXMgYW5kIHR3byBtaWNyb3Bob25lcyBvbiBpdHMgaGVhZCBhbmQgYWxzbyBlcXVpcHBlZCB3aXRoIHNvbWUgNjAwIHRvdWNoIHNlbnNvcnMgdW5kZXIgaXRzIHNraW4uIApJY2gga2FubiBhbHNvIGRhcyBUaGVtYSBuaWNodCBhdXNrbGFtbWVybi4gClRoZXkgZ2V0IHRoYXQgbWVkaWEgbm93IGlzIG5vdCBhIG9uZSB0cmljayBwb255IGJ1dCByYXRoZXIgYSBjaXJjdXMgZnVsbCBvZiBwb25pZXMgdGhhdCBjYW4gcGVyZm9ybSwgbWFueSBkaWZmZXJlbnQgdHJpY2tzLiJOb3dhZGF5cyBpdCdzIGNyaXRpY2FsIHRvIGhhdmUgYSBzaXRlLCBhIHBsYWNlIHdoZXJlIHZpZXdlcnMgYW5kIHJlYWRlcnMgY2FuIGdldCBhZGRpdGlvbmFsIGluZm9ybWF0aW9uIGFuZCBwYXJ0aWNpcGF0ZSBpbiB0aGUgY29udmVyc2F0aW9uLCIgc2FpZCBNYXRpc2ljLiAiV2UndmUgaGFkIG9uZSBmb3IgbWFueSB5ZWFycywgYnV0IGZvciBhIHdoaWxlIG5vdyB3ZSd2ZSB3YW50ZWQgdG8gdGFrZSBpdCB1cCBhIG5vdGNoLiBJdCdzIGZyZXNoLCBjbGVhbiBhbmQgbW9kZXJuLiAKU3RvcmllcyBsaWtlIE1vbmV5bWFrZXIncyBoYXZlIHN0b2tlZCBpbnRlcmVzdCBpbiBob2xkICdlbSB0b3VybmFtZW50cy4gCkRldHJvaXQgVGlnZXJzIE5ld3MgQW5kIFVwZGF0ZXMKTW9zdCBwZW9wbGUgYmVsaWV2ZSB0aGF0IHBva2VyIC4gYXJlIGZvciB0aGUgbW9zdCAuIGFuZCBtb3N0IC4gcG9rZXIgcGxheWVycy4gQnV0IHRoaXMgaXMgc2ltcGx5IGp1c3Qgbm90IHRydWUuIFRoZXJlIGFyZSBhY3R1YWxseSBtYW55IG1vcmUgLiAuICh0aGF0IGF0ClZvbC4gMTQ1IE5vLiAKQW5kIGV2aWRlbnRseSB5b3UgZG8gY2FyZSBiZWNhdXNlIHlvdSBzcGVudCBhbiBhd2Z1bCBsb3Qgb2YgdGltZSBvbiB0aGUgc3ViamVjdC4gVGhhdCBub3QgdGhlIGJlaGF2aW91ciBvZiBzb21lb25lIHdobyBpbmRpZmZlcmVudC4KQnV0IHRoZXkgY291bGRuJ3QgYmUgYm90aGVyZWQgdG8gZG8gZXZlbiB0aGF0IHNtYWxsIGdlc3R1cmUuLiAKRGlkbiBzYWNyaWZpY2Ugd29yayBvciBzY2hvb2wsIG15IHNvY2lhbCBsaWZlIG9yIG15IG1hcnJpYWdlIHdob2xlIGxvc2luZyB3ZWlnaHQgZWl0aGVyLiBJdCBub3QgYW4gYWxsIG9yIG5vdGhpbmcga2luZCBvZiB0aGluZy4gV2h5IGlzIGl0IGFsd2F5cyBhbGwgb3Igbm90aGluZyB3aXRoIHRoZXNlIHBlb3BsZT8hIExvc2luZyB3ZWlnaHQgbWVhbnMgc3BlbmRpbmcgYSBmZXcgbWludXRlcyBhIGRheSB0aGlua2luZyBhYm91dCBtYWtpbmcgYmV0dGVyIGZvb2QgY2hvaWNlcy4gCkluIGFueSBjYXNlLCBubyBtYXR0ZXIgd2hldGhlciB5b3UgbGlrZSBiZXR0aW5nLCBzbG90cywgcm91bGV0dGUgb3IgcG9rZXIgICBjZXJ0YWluIHRoaW5ncyBzdWNoIGFzIHNlY3VyaXR5IGFuZCBmYWlybmVzcyBhcmUgc29tZXRoaW5nIHRoYXQgZ29vZCBvbmxpbmUgZ2FtYmxpbmcgc2l0ZXMgaGF2ZSBpbiBjb21tb24uIEV2ZXJ5IGdhbWJsZXIgaGFzIHRvIGZpbmQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIHNpdGUncyByZXB1dGF0aW9uIGFuZCBwYXlvdXQgcmF0ZXMuIEFsc28sIGdvb2QgY3VzdG9tZXIgc3VwcG9ydCBhbmQgbnVtZXJvdXMgYmFua2luZyBvcHRpb25zIGFyZSBhIG11c3QuLiAKIlRoZSBlbnRpcmUgcHJvcGVydHkgd2lsbCBiZSB1cGRhdGVkIHdpdGggYSBtb2Rlcm4gbG9vayB0byBpbmNsdWRlIG5ldyBiYXJzIGFuZCBsb3VuZ2VzIHdpdGggbGl2ZSBlbnRlcnRhaW5tZW50LCBzdHlsaXNoIHJldGFpbCBvZmZlcmluZ3MgYW5kIHVwZGF0ZWQgcm9vbXMsIiBGZXJ0aXR0YSBzYWlkLiAiVGhlcmUgd2lsbCBiZSBhIGhpZ2ggZW5lcmd5IFJ1c2ggTG91bmdlIGFuZCBhIHVuaXF1ZSBMaXZlIEJhciB0byBjb21wbGVtZW50IGEgbmV3IHNwYSwgcG9rZXIgcm9vbSwgYW5kIGEgc3RhdGUgb2YgdGhlIGFydCBzaG93cm9vbS4gClRoaXMgaG91c2UgcHV0cyB0aGUgaG9tZSBpbiBob21lIHJ1bi4KQW5uZXJldmVuYW50ICA4IHBvaW50cyAgc3VibWl0dGVkIDU5IG1pbnV0ZXMgYWdvCkJvcnRlbiwgd2hvIGhhcyBhIGJhY2tncm91bmQgaW4gbWFzc2FnZSB0aGVyYXB5IGFuZCBBeXVydmVkYSwgb3BlbmVkIHRoZSBmaXJzdCBEcmFnb250cmVlIFNwYSBpbiBQb3J0bGFuZCBpbiAyMDAzIGFuZCBhIHNlY29uZCBhdCBQb3J0bGFuZCdzIGFpcnBvcnQgaW4gMjAxMC4gU2hlIGFuZCBoZXIgaHVzYmFuZCwgYW4gYWN1cHVuY3R1cmlzdCwgcmVjZW50bHkgbW92ZWQgdG8gQm91bGRlciBhbmQgb3BlbmVkIGEgdGhpcmQgYnJhbmNoIGluIEp1bHksIHdpdGggdGhlIG1hbmFnZW1lbnQgaGVscCBvZiBoZXIgY291c2luLCBDaGFyaXR5IEdvZXR6LCBvZiBCb3VsZGVyLgo1IHViYXQgMjAxOSB0YXJpaGxpIG1lY2xpcyB0dXRhbmFrbGFybm4gb2t1bnVwIG95bGFubWFzIGlsZSBiYWxheWFuIHRvcGxhbnRkYSBpbGsgb2xhcmFrIGJha2FubGt0YW4gZ2VsZW4gbmVyZ2VsZXIgbWVjbGlzIHllbGVyaW5pbiBncm5lIHN1bnVsZHUuIApCaWcgc2xhdGUgb2YgY29uZmVyZW5jZSBnYW1lcyBhcHBlYXJzIGFtdXNpbmcKVGFrZSBzb21lIHRpbWUgYW5kIG1ha2Ugc3VyZSB0aGF0IHlvdSBjb25zaWRlciB0aGUgb3B0aW9ucyB0aGF0IGFyZSBhdmFpbGFibGUgZm9yIHlvdSB3aGVuIHlvdSBkZWNpZGUgdGhhdCB5b3Ugd2FudCB0byBtb3ZlIGZvcndhcmQgYW5kIGdldHRpbmcgY2hpcHMgZm9yIHlvdXIgcG9rZXIgdGFibGUuIFdoZW4geW91IGludmVzdCBpbiBhIFRleGFzIEhvbGQgRW0gUG9rZXIgQ2hpcCBTZXQsIHlvdSdsbCBmaW5kIHRoYXQgeW91IGhhdmUgYSBzZXQgdGhhdCBpcyBnb2luZyB0byBwbGVhc2UgZXZlcnlvbmUgd2hvIHNpdHMgZG93biBhdCB5b3VyIHRhYmxlLiAKQXJ0aWNsZXMgbXVzdCBiZSB3cml0dGVuIGluIEVuZ2xpc2gKWW91IGNvdWxkIHVzZSBhIHZpYnJhdG9yIGJ1dCB0aGF0IGNhbiBiZSB0cmlja3kuIApJdCBraW5kYSBmdWNrZWQgbWUgdXAgZm9yIGEgd2hpbGUgYnV0IGkga25vdyB0aGV5IHdlcmUgaHVydGluZyBhbmQgZGlkbiBtZWFuIGl0LiAKVGhlIGdvdmVybm1lbnQncyBlZmZvcnRzIHRvIHNlbGwgdGhlIGluZnJhc3RydWN0dXJlIGJhbmsgZWFybGllciB0aGlzIHllYXIgYWxzbyBiZWNhbWUgYSB2aWN0aW0gb2YgbWlzcGVyY2VwdGlvbnMsIGFjY29yZGluZyB0byB0aGUgbWVtbyB0byBNb3JuZWF1LgpNb3N0IHByb2Zlc3Npb25hbHMgZGl2aWRlIHRoZSBuZWNrL2hlYWQvZmFjZSBkaXZpc2lvbiBpbnRvIGRpc3RpbmN0IHN1YnBhcnRzOiBsb3dlciBuZWNrIG11c2NsZXMsIHVwcGVyIG5lY2sgbXVzY2xlcywgc2NhbHAsIHRlbXBsZXMsIGZvcmVoZWFkLCBicmlkZ2UgY29ubmVjdGlvbiwgamF3IG11c2NsZXMsIGNoaW4gbXVzY2xlcywgbGlwIG11c2NsZXMuIEkgc3RhcnQgYSBzZXNzaW9uIHdpdGggeW91IGx5aW5nIG9uIHRoZSB0YWJsZSB3aXRoIHlvdXIgZmFjZSB0b3dhcmQgdGhlIGNlaWxpbmcuIEkgc3RhbmQgYXQgdGhlIG9mIHRoZSB0YWJsZSBhbmQgc3RhcnQgYnkgcmVsYXhpbmcgeW91ciBzaG91bGRlcnMgYW5kIHVwcGVyIGJhY2sgbXVzY2xlcy4gKGFib3V0IDIgbWludXRlcykgVGhlbiBJIGRvIGEgbWFzc2FnZSB1c2luZyB0d28gZGlmZmVyZW50IHRlY2huaXF1ZXMuIEZpcnN0LCBJIHVzZSBvcGVuIHBhbG1zIHRvIHJvY2sgeW91ciBzY2FscCBiYWNrIGFuZCBmb3J0aCBzbG93bHkuIFNlY29uZCwgSSB1c2UgZmlybSBmaW5nZXJ0aXBzIHRvIGxvdmluZ2x5IGNhcmVzcyB5b3VyIHNjYWxwLiBJIGFzayB3aGljaCBvZiB0aGUgdHdvIG1ldGhvZHMgeW91IHByZWZlciwgdGhlbiB1c2UgdGhhdCBtZXRob2QuIChhYm91dCAyIG1pbnV0ZXMpIFRoZW4gSSBtb3ZlIG9uIHRvIHRoZSBmb3JlaGVhZCwgdXNpbmcgdGhlIHNhbWUgdHlwZSBvZiBvcGVuIHBhbG0gbWFzc2FnZSB0byByb2NrIHlvdXIgZm9yZWhlYWQgYmFjayBhbmQgZm9ydGggc2xvd2x5LiBGcm9tIHRoZXJlLCBJIG1vdmUgb24gdG8geW91ciB0ZW1wbGVzLCBzdGFydGluZyB3aXRoIHRoZSBoZWVscyBvZiBteSBoYW5kcyBhbmQgdGhlbiBzd2l0Y2hpbmcgdG8gbXkgdGh1bWJzLgpFdmVyIGhlYXJkIG9mIHRoZSBleHByZXNzaW9uLCAiYWxsIHdvcmsgYW5kIG5vIHBsYXkiPyBTaG9ydCBicmVha3MgZnJvbSB3b3JrIGFyZSBkZWZpbml0ZWx5IG5lY2Vzc2FyeSwgZXNwZWNpYWxseSBmb3IgaGlnaCBzdHJlc3Mgam9iczsgdmFjYXRpb25zIGhlbHAgeW91IHVud2luZCBhbmQgcmVsYXgsIGFuZCB0aGV5IHByb3ZlIGVzc2VudGlhbCBmb3IgeW91IHRvIGFjaGlldmUgcGVhayBwZXJmb3JtYW5jZSBhdCB3b3JrLiAKU3BlYWtpbmcgYXMgc29tZW9uZSB3aG8sIGFsb25nIHdpdGggbXkga2lkcywgd2VudCBjb21wbGV0ZWx5IGdsdXRlbiBhbmQgZGFpcnkgZnJlZSBmb3IgeWVhcnM6IFllcywgdGhleSBhYnNvbHV0ZWx5IHdpbGwgZWF0IGRpZmZlcmVudGx5IGF0IG90aGVycyBob3VzZXMuIEFuZCBpbiBvdXIgY2FzZSBpdCB3YXMgYW4gYWxsZXJneSwgYnV0IHBlb3BsZSBzdGlsbCBmZWVkIGl0IHRvIHRoZW0gYWxsIHRoZSB0aW1lIGFuZCBsaWVkIHdoZW4gbXkga2lkcyB3ZXJlIHRyeWluZyB0byBiZSBnb29kIGFib3V0IHdoYXQgdGhleSBhdGUuIApHaWxiZXJ0IHNlbiwgRy4gClRoaXMgaXMgdGhlIG9uZSB0aGF0IHNldCBtZSBvZmYgbGFzdCBuaWdodCwgaXQgd2FzIGFjdHVhbGx5IGF0IHRoZSB0b3Agb2YgdGhlIHBvc3RzIHllc3RlcmRheSwgYmVjYXVzZSBpdCBnb3Qgc28gbWFueSB1cHZvdGVzLiAKUGhhc2UgSUkgd291bGQgY29tZSBsYXRlci4gCkNhcm9sIGhhcyBiZWVuIGZvc3RlcmluZyBoaW0gc2V2ZXJhbCB3ZWVrcywgYnV0IHdhcyBzY2hlZHVsZWQgdG8gZ28gb24gdmFjYXRpb24gYW5kIGNvdWxkbid0IGdldCBhaG9sZCBvZiBhbnlvbmUgaW4gdGhlIG9mZmljZSBhcyB0byB3aGF0IHNoZSB3YXMgc3VwcG9zZWQgdG8gZG8gd2l0aCB0aGlzIGRvZyBkdXJpbmcgaGVyIHZhY2F0aW9uLiAKV2VsbG5lc3MgTGllYmhhYmVyIGtvbW1lbiBiZWkgZWluZXIgdHJhZGl0aW9uZWxsZW4gVGhhaSBNYXNzYWdlIGltIGhvdGVsa2V0dGVuZWlnZW5lbiBTcGEgQ2VudmFyZWUgYXVmIElocmUgS29zdGVuLiAKSWYgeW91IGRvbid0IGFncmVlIHdpdGggYW55IG9mIHRoZXNlIFRlcm1zLCBvciBpZiB5b3UgaGF2ZSBhbnkgb2JqZWN0aW9ucyB0byBvdXIgUHJpdmFjeSBQb2xpY3kgeW91IG11c3Qgbm90IHVzZSB0aGUgU2VydmljZXMgb3IgdGhlIFdlYnNpdGVzLi4gCjE4IEJ1dCBhbGwgdGhlIHdvbWVuIGNoaWxkcmVuLCB0aGF0IGhhdmUgbm90IGtub3duIGEgbWFuIGJ5IGx5aW5nIHdpdGggaGltLCBrZWVwIGFsaXZlIGZvciB5b3Vyc2VsdmVzLkluIG90aGVyIHdvcmRzLCBpdCBzYXlzIHRvIGtlZXAgYm90aCB0aGUgdmlyZ2luIGFkdWx0IHdvbWVuIGFuZCB0aGUgbGl0dGxlIGdpcmxzIGZvciB5b3Vyc2VsZi4gCkluIGNvbnRyYXN0IHdoZXJlIHRoZXJlIHdhcyB2aW9sZW5jZSBkdXJpbmcgT2NjdXB5IFdhbGwgU3RyZWV0LCBzb21lIG9mIGl0IHVuanVzdCBieSBwb2xpY2UsIHByb3Rlc3RvcnMgd2VyZSBhYmxlIHRvIGFjdHVhbGx5IHN1ZSBhbmQgd2luIGFnYWluc3QgdGhvc2Ugd2hvIG1pc3RyZWF0ZWQgdGhlbSBhZnRlcndhcmRzLiAKTm93LCBJIGhhZCBhbiBBdXRpc20gU3BlY3RydW0gRGlzb3JkZXIgZGlhZ25vc2lzIGFuZCBhIEdlbmVyYWxpemVkIEFueGlldHkgRGlzb3JkZXIgZGlhZ25vc2lzIGZvciBzb21lIHRpbWUsIGFuZCBlc3BlY2lhbGx5IHdoZW4gSSB3YXMgeW91bmdlciwgSSBkaWQgcmVhbGx5IHN0cnVnZ2xlIHdpdGggbG91ZCBub2lzZXMuIEkgYWxzbyB0aGluayBtYWtpbmcgcGxhY2VzIG1vcmUgYWNjZXNzaWJsZSBmb3IgZGlzYWJsZWQgcGVvcGxlIGlzIGEgZ3JlYXQgdGhpbmcgdG8gZG8uIFlvdSB3b24gY2F0Y2ggbWUgY29tcGxhaW5pbmcgYWJvdXQgd2FybmluZ3Mgb3Igc3BhY2VzIGJlY2F1c2UgSSB1bmRlcnN0YW5kIHRoYXQgdGhvc2UgYXJlIHJlYWxseSBoZWxwZnVsIGZvciBwZW9wbGUgdG8gZW5nYWdlIHdpdGggcG90ZW50aWFsbHkgdXBzZXR0aW5nIHRoaW5ncyBvbiB0aGVpciBvd24gdGVybXMgICB0aGV5IHRoZSBtZW50YWwgZXF1aXZhbGVudCBvZiBhbGxlcmd5IHdhcm5pbmdzIQpMYXRpbm8gYW5kIExhdGluIEFtZXJpY2FuIGNvbW11bml0aWVzIGFyZSB0aGUgZmFzdGVzdCBncm93aW5nIGRlbW9ncmFwaGljLCBzYWlkIEFudG9uaW8gRC4gQW5kZXJzb24gUHJvZmVzc29yIG9mIEhpc3BhbmljIFN0dWRpZXMuIGFtIGVzcGVjaWFsbHkgZXhjaXRlZCB0byB3aXRuZXNzIHRoZSB3YXlzIGluIHdoaWNoIExhdGlubyBBcnQgTm93ISB3aWxsIGVuZ2FnZSBhbmQgaW5zcGlyZSBIb3VzdG9uaWFucyBvZiBhbGwgYWdlcyBhbmQgZXRobmljaXRpZXMuIEhvdXN0b24gZmVhdHVyZXMgbW9yZSB0aGFuIDcwIGFydCBleGhpYml0aW9ucyBhbmQgb3RoZXIgZm9ybXMgb2YgY3VsdHVyYWwgZW5nYWdlbWVudCBhdCBVSCwgYXJlYSBtdXNldW1zLCBnYWxsZXJpZXMgYW5kIGN1bHR1cmFsIGNlbnRlcnMgYmVnaW5uaW5nIEZyaWRheSwgRmViLiAxIHRocm91Z2ggRnJpZGF5LCBNYXkgMzEuIEEgc3BlY2lhbCBmZWF0dXJlIG9mIExBTiEgaXMgdGhlIFNwcmluZyBvZiBMYXRpbm8gQXJ0IChTT0xBKSwgYW4gb3V0Z3Jvd3RoIG9mIHBhcnRuZXJzaGlwcyB3aXRoIGFyZWEgYXJ0cyBvcmdhbml6YXRpb25zIGFuZCBhcnRpc3RzLgpXaGF0IHNlcnZpY2VzIGRvIHlvdSBwcm92aWRlIHRoYXQgc2hlIHVzZXMgZnJlZWx5PyBZb3UgbmVlZCBsaXN0IGV4YWN0bHkgaG93IG11Y2ggeW91IHBheSB0byBzdXBwb3J0IGhlci4gR2l2ZSBoZXIgYSBiaWxsLCBhbmQgdGhlbiBkaXNjdXNzIGlmIHNoZSBsaWtlIHlvdSB0byBjb3ZlciBpdC4gRGlzY3VzcyBob3cgbXVjaCBhIGJhYnkgY29zdHMgb24gdG9wIG9mIHRoYXQuIERpc2N1c3MgaWYgc2hlIGxpa2VzIGxpdmluZyBpbiB5b3VyIGhvdXNlIGFuZCBhbGwgaXQgYW1lbml0aWVzLgpMaW1pdCBteSBzZWFyY2ggdG8gci9qb3JkYW51c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KSSBXSUxMIGtpbGwgdGhhdCBtb2RkZWQgUkZTIG9uZSBkYXkgd2hlbiBJIGdldCB0aGVyZSB3aXRoIGEgY2xvYWsgYW5kIGEgRGVmRHJvbmUuIDEgcG9pbnQgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCkJlaW5nIGRlcGVuZGFudCBvbiB2b2xjYW5pYyB0ZXJyYWluIGlzIGEgb25seSBhIHNsaWdodCBkaXNhZHZhbnRhZ2UsIGlmIHlvdSBjYW4gZWFzaWx5IGNyZWF0ZSBpdCBhbmQgdGhlcmUgaXMgbm8gd2F5IHRvIHVuZG8gaXQuIAozLiBNYXJrZXQgeW91ciBtYXNzYWdlIGhvbWUgYnVzaW5lc3MuIApIIGNoZWNrcywgTVAgYmV0cyBoYWxmIHBvdCwgZ3J1bXB5IGNhbGxzLCBhbmQgSSBwdXQgdGhlbSBib3RoIGFsbCBpbiB3aXRoIGFuIG92ZXIgcG90IHNpemUgYmV0LiBNUCBmb2xkcywgYW5kIHRvdWdoIGd1eSBzdGFyZXMgbWUgZG93bi4gClNvcnJ5LCBJIGJhYmJsaW5nIG5vdywgYnV0IGl0IHRydWUgdGhhdCB0aGUgdGhlIGNvbW1vbnBlcnNvbiBpbiB0aGUgVVMgKEkgb25seSBiZWVuIHRvIENhbmFkYSBvbiBob2xpZGF5KSBpcyBncm9zc2x5IHVuc29waGlzdGljYXRlZCB3aGVuIGl0IGNvbWVzIHRvIGZvb2QuIFdlIGtub3cgaG93IGl0IHRhc3RlcywgYnV0IHdlIHVuYWJsZSB0byBpZGVudGlmeSBob3cgaXQgbWFrZXMgdXMgZmVlbC4uIApIaWRkZW4gc2VjcmV0IG51bWJlciBvbmU6IFByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXJzIGtub3cgaG93IHRvIHJlYWQgcGxheWVycy4gVGhlIGJldHRlciB5b3UgYXJlIGF0IHJlYWRpbmcgdGhlIG1vcmUgeW91IHdpbGwgdW5kZXJzdGFuZCBob3cgdG8gcGxheSBhZ2FpbnN0IHRoZW0uIEknbSBub3QgdGFsa2luZyBhYm91dCBiZWhhdmlvcmFsIHR3aXRjaGVzLCB3aGljaCBpcyBub3QgYXZhaWxhYmxlIGZvciB5b3Ugb25saW5lLiBCdXQgeW91IG5lZWQgdG8gY29uc2lkZXIgdGhlaXIgcmFpc2luZywgZm9sZGluZywgcmUgcmFpc2luZywgYW5kIG90aGVyIGhhYml0cyBvbiB0aGUgdGFibGUuIERvIHRoZXkgZm9sZCBlYXJseSBvbj8gRG8gdGhleSBmb2xkIHdoZW4geW91IGJldCBiaWcgYWxsIG9mIHRoZSB0aW1lLiBXZXJlIHRoZXkgYmx1ZmZpbmcgZnJvbSB0aGUgZmxvcCwgYnV0IGdvdCBsdWNreSBvbiB0aGUgcml2ZXIgb3IgdHVybj8gWW91IG5lZWQgdG8gYmUgYXdhcmUgb2YgdGhlaXIgYmV0dGluZyBoYWJpdHMsIGFuZCBwcm9mZXNzaW9uYWxzIGtub3cgaG93IHRvIGRvIHRoaXMuIFByYWN0aWNlIG9ubGluZSBvciB3aXRoIGZyaWVuZHMgb24geW91ciBwb2tlciBuaWdodC4gQmV3YXJlIHRob3VnaDogcHJhY3RpY2luZyBvbmxpbmUgdG8gbGVhcm4gdGhpcyBza2lsbCB3aWxsIHJlcXVpcmUgcmVhbCBtb25leSwgYmVjYXVzZSBwZW9wbGUgZG8gbm90IHJlYWN0IHRoZSBzYW1lIHdheSB3aXRoICJwbGF5IG1vbmV5Ii4gTW9zdCBwZW9wbGUgZG8gcmVhY3QgdGhlIHNhbWUgd2F5IHdpdGggcmVhbCBtb25leSwgcHJhY3RpY2UgYW5kIHBpY2sgdGhpcyBza2lsbCB1cC4gVGhpcyB3aWxsIHNhdmUgeW91IGEgbG90IG9mIG1vbmV5IGluIGxvc3NlcywgYW5kIHRha2UgeW91ciBwb2tlciByZXZlbnVlcyBza3kgaGlnaC4KSGUgZGlkbiB3YW50IHByb2Zlc3Npb25hbCBoZWxwIGJlY2F1c2UgaGUgc2F3IGl0IGFzIGEgc2lnbiBvZiB3ZWFrbmVzcy4gCkVpdGhlciBMYWJvciB2b3RlcyBmb3IgdGhlIGZ1bGwgZGVhbCBhbmQgZXZlcnlvbmUgZ2V0cyB0aGVpciB0YXggY3V0LCBvciBMYWJvciByZWplY3RzIGl0IGFuZCBTaG9ydGVuIGlzIHRoZSBHcmluY2ggV2hvIFN0b2xlIENocmlzdG1hcyBJbiBKdWx5LiAKVGhlIGZpcnN0IGJpZyB0ZXN0IG9mIHRoZSBuZXcgbG9vayBjbHViIHdpbGwgY29tZSBvbiBXZWRuZXNkYXkgbmlnaHQgd2hlbiBpdCBob3N0cyBhYm91dCAxMDAgcGVvcGxlIGZvciBhIFdvZG9uZ2EgQ2hhbWJlciBvZiBDb21tZXJjZSBtZWV0aW5nLCBvbmUgb2YgZm91ciBpdCBob2xkcyBlYWNoIHllYXIuIApUaGUgQSB3aXRoIHRoZSBjaXJjbGUgYXJvdW5kIGl0IGlzIHRoZSBpbnNpZ25pYSBmb3IgVGhpcmQgVW5pdGVkIFN0YXRlcyBBcm15IChub3cga25vd24gYXMgVVMgQXJteSBDZW50cmFsIG9yIEFSQ0VOVCkuIElmIEkgYW0gbm90IG1pc3Rha2VuLCAxc3QgSW5mYW50cnkgd2FzIHBhcnQgb2YgVGhpcmQgQXJteSBhdCBzb21lIHBvaW50IGR1cmluZyBXV0kuIApGb3IgdGhpcyB0cmVhdG1lbnQsIHdhdGVyIG9mIHZhcnlpbmcgdGVtcGVyYXR1cmVzIGlzIGFwcGxpZWQgdmlhIGEgcmFpbiBzaG93ZXJoZWFkIHRvIHZhcmlvdXMgcG9pbnRzIG9uIHRoZSBib2R5IGFzIHlvdSBsaWUgYmFjayBvbiBhIHRhYmxlLiBUaGUgbWl4dHVyZSBvZiBob3QgYW5kIGNvbGQgaXMgbWVhbnQgdG8gaW5jcmVhc2UgdGhlIGZ1bmN0aW9uIG9mIHlvdXIgaW50ZXJuYWwgb3JnYW5zIGJ5IHZhcnlpbmcgdGhlIHJhdGUgb2YgYmxvb2QgZmxvdyB0byB0aG9zZSBvcmdhbnMuIAoiTm90IGp1c3QgaGltLiBNaWxpdGFyeSwgSVNJIC4iIGhlIHNhaWQsIHNoYWtpbmcgaGlzIGhlYWQgaW4gbGFtZW50LgpJcyBNci4gQSBub3cgYXQgICQxMCBvciArJDEwPyBIaXMgdG90YWwgYnV5IGluIHdhcyAkMTAwLCBoZSB3YWxrZWQgYXdheSBmcm9tIHRoZSB0d28gd2lucyB3aXRoICQxMTAsIGJ1dCBvbmx5ICQ5MCBpbiBwcm9maXQuIFdoaWNoIG51bWJlciB3b3VsZCBtb3JlIGFjY3VyYXRlbHkgeWllbGQgaGlzICJ3aW5uaW5ncz8iIEknbSBub3QgZXZlbiBzdXJlIGlmIHRoZSBwcm9maXRzIHNob3VsZCBwbGF5IGludG8gdGhpcyBhdCBhbGwgc2luY2Ugd2UncmUgYWxyZWFkeSBjYWxjdWxhdGluZyAgJDEwIGZvciBldmVyeSBnYW1lIGhlIHBsYXlzLgpJdCdzIGFuIGVhc3kgZmVlbCBnb29kIHdheSB0byB1cCB0aGUgYW1vdW50IG9mIGFmZmVjdGlvbiBhbmQgaW50aW1hY3kgeW91IGVuam95IHRvZ2V0aGVyLCBhbmQgeW91IG1heSB3ZWxsIGZpbmQgdGhhdCB0aGUga2V0dGxlIGlzbid0IHRoZSBvbmx5IHRoaW5nIHRvIGdldCBob3QuCldoaWxlIEkgd2FzIHNpdHRpbmcgb24gdGhlIGdyb3VuZCBqdXN0IGFmdGVyIGl0IGhhcHBlbmVkIEkgcmVtZW1iZXIgdGhlIHNwZWNpZmljIGZlZWxpbmcgb2YgbXkgZm9vdCBmZWVsaW5nIGV4dHJlbWVseSB3YXJtIGxpa2UgaXQgd2FzIHVuZGVyIGEgaGVhdGVyIG5vdCBsaWtlIGEgYnVybmluZyBwYWluIGp1c3QgYSByZXNvbmF0aW5nIGhlYXZ5IHdhcm10aC4gSSB3YXRjaCBteSB1bmNsZSBydW4gaW50byB0aGUgaG91c2UgYXMgSSB3YXMgaG9sZGluZyBteSBmb290IHN0aWxsIG5vdCBjcnlpbmcuIApSZXAuIEpvaG4gS25pZ2h0IChEKSBNb250Z29tZXJ5IHNheXMgaGUncyBub3Qgc3VycHJpc2VkLiAiV2UgaGFkIHN1c3BpY2lvbiB0aGF0IHRoaXMgd2FzIHRha2luZyBwbGFjZSBhbmQgb2YgY291cnNlIGl0IHdhcyBkZW5pZWQgYnkgSm9obiBHaWxlcyBhbmQgdGhlIENocmlzdGlhbiBDb2FsaXRpb24uIiBTdGF0ZSBSZXByZXNlbnRhdGl2ZSBKb2huIEtuaWdodCBzcG9uc29yZWQgdmlkZW8gcG9rZXIgYmlsbHMgaW4gbGVnaXNsYXR1cmUgdGhhdCB3ZXJlIGRlZmVhdGVkIGp1c3QgbGlrZSB0aGUgZ2FtYmxpbmcgbWVhc3VyZSBCaW5nbyBmb3IgQm9va3MgYW5kIEJlZHMgc3BvbnNvcmVkIGJ5IFNlbmF0b3IgR2VyYWxkIERpYWwgZGlkbid0IG1ha2UgaXQgZWl0aGVyLiBTZW4uIERpYWwgKEQpIExpbmV2aWxsZSBpcyBub3QgaGFwcHkgYWJvdXQgdGhpcyBuZXdzLiAiSSBmZWVsIGxpa2UgdGhlIGd1eSB3aG8gZ29lcyBvdXQgYW5kIHBsYXlzIGEgZm9vdGJhbGwgZ2FtZSB0b25pZ2h0IGFuZCB5b3UgZ2V0IGJlYXQgYW5kIHlvdSBnbyBob21lIGFuZCB5b3UgZmVlbCBiYWQgYWJvdXQgaXQsIGJ1dCB0b21vcnJvdyB5b3UgZmluZCBvdXQgdGhleSBwYWlkIG9mZiB0aGUgcmVmZXJlZS4iCkkgZG9udCB0aGluayB3aGF0IHBlb3BsZSBuZWVkIG11c3QgYmUgYSByZWFzb25hYmxlIHdhbnRpbmcuIEkgdGhpbmsgd2hhdCBwZW9wbGUgd2FuZiBpcyBpbmRlcGVuZGVudCB3YW50aW5nLiBTb21ldGltZXMgcGVvcGxlIGRvIHVucmVhc29uYWJsZSwgdW5wcm9maXRhYmxlIHRoaW5ncyBzaW1wbHkgdG8gc2hvdyB0aGVpciB1bnJlYXNvbmFibGVuZXNzLiBFdmVuIGlmIG91ciBsaXZlcyB0dXJuIG91dCBiYWQsIGl0cyBiZXR0ZXIgdGhhbiB0aGUgZXh0cmFjdGlvbiBvZiBhIHNxdWFyZSByb290LiBJbiBob3cgbWFueSB3ZXN0ZXJuIGNvdW50cmllcyBpcyBtYXJpanVhbmEsIHNvbWV0aGluZyBsZXNzIGRhbmdlcm91cyB0aGFuIGFsY29ob2wgYW5kIGNpZ2FyZXR0ZXMsIGxlZ2FsPyBXaHkgaXMgaXQgaWxsZWdhbCBmb3Igd29tZW4gdG8gaGF2ZSBleHBvc2VkIGJyZWFzdHMgd2hlcmUgbWVuIG1heSBoYXZlIGV4cG9zZWQgY2hlc3RzIGluIG1vc3QgcGFydHMgb2YgdGhlIHdlc3Rlcm4gd29ybGQ/IENhbGlmb3JuaWEgYWxtb3N0IGJhbm5lZCBwb3JuIHdpdGhvdXQgY29uZG9tcy4gQXVzdHJhbGlhIGJhbm5lZCBzbWFsbCBicmVhc3RlZCBwb3JuIGFuZCBhbnkgaW52b2x2aW5nIHBlb3BsZSB3aG9tIHRoZXkgZmVsdCBsb29rZWQgdG9vIHlvdW5nLCByZWdhcmRsZXNzIG9mIGFjdHVhbCBhZ2UuIFRoZSBFVSBtYWRlIGNlcnRhaW4gZm9ybXMgb2YgaGF0ZSBzcGVlY2ggaWxsZWdhbC4gcG9ybiBkZWZpbml0ZWx5IGlzIGEgc2N1bW15LCBzZXhpc3QgaW5kdXN0cnkgdGhhdCBleHBsb2l0cyB3b21lbiBybiwgYnV0IHRoZXJlIGlzIG5vdGhpbmcgaW5oZXJlbnRseSB3cm9uZyB3aXRoIHNleCB3b3JrIGlmIGl0IHNhZmUsIGNvbnNlbnN1YWwgYW5kIHJlZ3VsYXRlZC4gaW4gZmFjdCBpdCBzZXhpc3QgdG8gdGVsbCB3b21lbiB0aGV5IGNhbiBtYWtlIHBvcm4gb3IgcGFydGljaXBhdGUgaW4gc2V4IHdvcmsgICBpdCB0aGVpciBib2R5LiB0aGUgaW1wbGljYXRpb24gdGhhdCBwb3JuIGNhbiBvbmx5IGJlIGZvciBtZW4gaXMganVzdCBhcyBiYWQKVW4gcmFiYmluIHRycyBtZGlhdGlxdWUsIGxlIHJhdiBEeW5vdmlzeiwgbCdhIGRqIHZvcXVlLiBMJ2luY29udm5pZW50IGRlcyB2aWRvcyBjJ2VzdCBxdWUgbGEgZG1vbnN0cmF0aW9uIGthYmJhbGlzdGlxdWUgcXUnaWwgcHJ0ZW5kIGF2b2lyIGZhaXRlIHZhIHRyb3Agdml0ZSBwb3VyIHF1ZSBsJ29uIHB1aXNzZSBsYSBjb250cmxlciBlbiBzZSByZnJhbnQgYXV4IHRleHRlcyBkb250IGxlcyBzb3V2ZW5pcnMgbmUgc29udCBwYXMgZm9yY21lbnQgdHJzIHByY2lzIHF1J2lsIHMnYWdpc3NlIGRlIGxldXIgcGFydGllIGJpYmxpcXVlIG91IGRlIHRleHRlcyBwbHVzIHNwY2lmaXF1ZXMgIHZvY2F0aW9uIGludGVybmUuTGUgY29tbWVudGF0ZXVyIGRlIFJhZGlvIFNjaGFsb20gYSBkdSByZXN0ZSBjb250ZXN0IGwnaWRlbnRpZmljYXRpb24gZGUgT2JhbWEgIEdvZyBiaWVuIHF1J29uIGxlIHN1c3BlY3RlIGQndHJlIGQnb3JpZ2luZSBtdXN1bG1hbmUuIApJIGhhbmRsZSA0IDUgdGhpbmdzIGF0IG9uY2UsIGFuZCBzdGlsbCBnZXQgdGhlbSBkb25lIG9uIHRpbWUgb3Igc2hvcnRseSBhZnRlciB0aGUgZGVhZGxpbmUsIGFuZCBvZnRlbiBoZWxwIHRoZW0gd2l0aCB0aGVpcnMgYXQgdGhlIHNhbWUgdGltZS4uIApBY2tub3dsZWRnZW1lbnQgVGhlIGZpcnN0IHN0ZXAgdG8gcmVwYWlyaW5nIGEgcHJvZmVzc2lvbmFsIHJlbGF0aW9uc2hpcCBkYW1hZ2VkIGJ5IGRpc3RydXN0IGlzIGFja25vd2xlZGdpbmcgd2hhdCB0b29rIHBsYWNlIHRvIGNhdXNlIHRoZSBvZmZlbnNlLiAKV2VubiBkdSB3aXJrbGljaCBMdXN0IGhhc3QsIFNjaHdiaXNjaCB6dSBsZXJuZW4sIGxhc3MgZGlyIGRhcyBuaWNodCBhdXNyZWRlbiAgIGR1IHdpcnN0IHNvd2llc28gZWluaWdlcyBkYXZvbiBhdWZzY2huYXBwZW4sIHdlbm4gZHUgdmllbCBaZWl0IG1pdCBTY2h3YWJlbiB2ZXJicmluZ3N0ICAgYWJlciBlcndhcnRlIGRpciBrZWluZW4gZ3JvZW4gcHJha3Rpc2NoZW4gVm9ydGVpbCBkYXZvbi4uIAoxNCwxOTY5LiBUaGUgZmxhZyB0aGF0IGRyYXBlZCBoaXMgY29mZmluIG5vdyBmbGllcyBpbiBmcm9udCBvZiBGYWlydmlldyBQYXJrIENpdHkgSGFsbC4uIApJZiB5b3UgZG9uJ3QgYWxyZWFkeSBvd24gYSB0YWJsZSwgdGhlcmUgYXJlIHNldmVyYWwgdHlwZXMgdGhhdCB5b3UgY2FuIGludmVzdCBpbiwgc3RhcnRpbmcgZnJvbSBhcyBsaXR0bGUgYXMgJDMwLiAKSGF2ZSBzZWVuIHRoZSBlbnRlcnRhaW5tZW50IG1hcmtldCBnbyB1cHNjYWxlLiBUaGUgbWlsbGVubmlhbHMgd2FudCBhbiBleHBlcmllbmNlIHNhaWQgU3phYm8uCkxhIHN0YXRpb24gZGUgbGEgcnVlIFNhaW50IFZpbmNlbnQgZGUgUGF1bCBhIHQgbmV1dHJhbGlzZSBpbCB5IGEgcGV1LiAKU2hvdWxkIGNvbnRpbnVlIHVzaW5nIGl0IGhhcHBpbHkgYW5kIHRoZXkgc2hvdWxkbiByZWFsbHkgY2FyZSB3aG8gdGhlIHNoYXJlaG9sZGVycyBhcmUuIERpZCB0aGV5IGtub3cgd2hvIHRoZSBzaGFyZWhvbGRlcnMgd2VyZSBiZWZvcmUgUGVwc2kgYWNxdWlyZWQgU29kYVN0cmVhbT8gaGUgYXNrZWQuLiAKRWRpdDogVGhlIHByaXZhdGUgc2VjdG9yIHBpY2tlZCB1cCBtb3N0IG9mIHRoZSBzbGFjayBvZiB0aGUgZGVjbGluaW5nIGdvdmVybm1lbnQgZnVuZGluZyBhbnl3YXlzLiBJdCBoYXJkbHkgaW5oaWJpdGVkIGFueXRoaW5nLiBJZiBhbnl0aGluZywgdGhpcyBpcyBhbGxvd2luZyB0aGUgZ292ZXJubWVudCB0byBzcGVuZCBtb25leSBpbiBvdGhlciBhcmVhcyB3aGVyZSB0aGUgY291bnRyeSBuZWVkcyBpdC4gWW91IGhhdmUgdG8gbG9vayBhdCB0aGUgZW50aXJlIHBpY3R1cmUuClRoZSBjYW5ub24gZXhpc3RzLiBJdCBtb3ZlcyB0aGUgc2FtZSBhcyBhIHJvb2sgYnV0IGNhcHR1cmVzIGJ5IGp1bXBpbmcgb3ZlciBhIHBpZWNlICh0aGUgc2V0dXAsIGNhbiBiZSBmcmllbmRseSBvciBlbmVteSkgYW5kIHRha2luZyB0aGUgZmlyc3QgcGllY2Ugb24gdGhlIHBhdGggYmV0d2VlbiB0aGUgY2Fubm9uIGFuZCB0aGUgc2V0dXAuIFRoZXkgaW5jcmVkaWJseSBwb3dlcmZ1bCBhbmQgaGF2ZSBhIGxvdCBvZiBkaWZmZXJlbnQgc2V0dXBzLiBSaWdodCBhdCB0aGUgc3RhcnQgeW91IGNhbiBraWxsIHRoZSBlbmVteSBob3JzZSB3aXRoIHlvdXIgY2Fubm9uLCBidXQgdGhpcyBpcyBhIHRlcnJpYmxlIG1vdmUgc2luY2UgdGhlIGNhbm5vbiBtb3JlIHZhbHVhYmxlIGVhcmx5IG9uIChtb3JlIHBpZWNlcyB0byBzZXR1cCB3aXRoKSwgYW5kIHRoZSBob3JzZSBpcyByaWdodCBuZXh0IHRvIHRoZSByb29rLCB3aGljaCBlc3NlbnRpYWxseSBnaXZlcyB5b3VyIG9wcG9uZW50IGEgZnJlZSBzZXR1cCBmb3IgdGhlaXIgcm9vay4KWW91IGNvdWxkIGFyZ3VlIHRoYXQgZ2l2aW5nIHRoaXMgaW5mb3JtYXRpb24gYWhlYWQgb2YgdGltZSBjbGFzc2lmaWVzIGl0IGFzIGEgdmlzYSwgYnV0IHRoYXQgaXMgY29tcGxldGUgYm9sbG9ja3MuIFRyeSBhcHBseWluZyBmb3IgYSB2aXNhIGFuZCBzZWUgdGhlIGRpZmZlcmVuY2UgaW4gYmFja2dyb3VuZCBjaGVja3MgYW5kIGVmZm9ydCBmcm9tIHlvdXIgc2lkZS4KSSB3b3VsZCBqdXN0IG1hZGUgaGltIHRoaW5rIHdlIHdlcmUgZ29ubmEgaGF2ZSBzb21lIGF3ZXNvbWUgc2V4LCBoYW5kY3VmZiBoaW0gdG8gdGhlIGJlZCB3aXRoIGEgYmxpbmRmb2xkLCB0ZWxsIGhpbSBJIGdvdCBhIHN1cnByaXNlIGZvciBoaW0gYW5kIGFzayBpZiB0aGF0IG9rIChhbmQgYXNzdW1pbmcgaGUgY29uc2VudHMpICAgcGVnIGhpbS4gT25jZSBoZSB3aXRoZHJhd3MgY29uc2VudCwgSSBvYnZpb3VzbHkgc3RvcCAgIGJ1dCB5b3UgcHJvYmFibHkgYmUgYWJsZSB0byBnZXQgYSBmZXcgc3Ryb2tlcyBpbiAoYW5kIHRoYXQgd291bGQgYmUgc3VmZmljaWVudCB0byBwcm92ZSBhIHBvaW50IGFuZCBkYW1hZ2UgdGhlIGVnbykuIApTaXQgZG93biB3aXRoIHRoZW0gYW5kIGFzayB3aHkgdGhleSB3YW50IHRoZW0uIElmIHRoZXkncmUgbm90IGEgcGhvdG9ncmFwaGVyLCBlZHVjYXRlIHRoZW0gdGhhdCB0aGV5IGFyZSA1MG1iIGVhY2gsIHRha2Ugc3BlY2lhbCBzb2Z0d2FyZSB0byBvcGVuLCBsb29rIGJhZCB3aGVuIHlvdSBsb29rIGF0IHRoZW0gY29tcGFyZWQgdG8gSlBHcywgaGF2ZSBubyBlZGl0aW5nIHNvIHRoZXkgYXJlbid0IGdldHRpbmcgYW55IG9mIHlvdXIgYXJ0aXN0aWMgaW50ZXJwcmV0YXRpb24gKHdoaWNoIHlvdSBhc3N1bWUgdGhleSBwYWlkIHlvdSBmb3IpLCBldGMgZXRjLi4gClVudXN1YWwgcmVzaXN0YW5jZSBpbiBGbG9yaWRhLCBBcml6b25hIGFuZCBUZXhhcyBhbmQgdGhlbiBzb21lIFJlcHVibGljYW4gcmVzaXN0YW5jZSBpbiBVdGFoIGFuZCBUZXhhcy4uIApDaXR5IE1hbmFnZXIgSmFuZSBCcmF1dGlnYW0gc2FpZCB0aGUgY2l0eSBpcyB0YWtpbmcgYSBkZWVwIGRpdmUgcmlnaHQgbm93IGluIHVuZGVyc3RhbmRpbmcgc3RydWN0dXJhbCByYWNpc20uSW4gYW5vdGhlciBvcGVuIGNvbW1lbnQsIFNhbW1pZSBMYXdyZW5jZSB0b2xkIGNvdW5jaWwgdGhhdCBhcyBhIHlvdW5nIGJsYWNrIG1hbiBmcm9tIFNhY3JhbWVudG8gd2hvIGhhcyBjbG9zZWx5IGZvbGxvd2VkIHRoZSBjYXNlIG9mIFN0ZXBob24gQ2xhcmsgYSB5b3VuZyBibGFjayBtYW4gd2hvIGxhc3QgeWVhciB3YXMgZmF0YWxseSBzaG90IGJ5IFNhY3JhbWVudG8gcG9saWNlIG9mZmljZXJzIHRoaXMgaW5jaWRlbnQgd2FzIHRlcnJpZnlpbmcuIApKb2huJ3Mgd29ydCBvaWwgYW5kIG9uZSBjdXAgb2YgY29sZCB3YXRlci4gU3RpciB0aG9yb3VnaGx5LiBHZXQgYSBzb2Z0IGNsZWFuIHNwb25nZSBvciBjbG90aCwgc29hayBpdCBpbiB0aGUgbWl4dHVyZSB0aGVuIHdyaW5nIGl0IG91dC4gCk1haXMgcXVlIHNpZ25pZmllbnQgImV4YWN0IiBldCAidnJhaSIgPyBMJ2hvbW1lIGR1IHZpZXV4IGNvdXBsZSBmaW5pdCBwYXIgbW9udHJlciBlbiBzb3VyaWFudCBsZXVyICJwcmVtaXJlIGxldHRyZSBkJ2Ftb3VyIiA6IGlsIHMnYWdpdCBkJ3VuIGRldm9pciBkZSBtYXRobWF0aXF1ZXMgcXUnaWwgbHVpIGF2YWl0IHRyYW5zbWlzIHVuZSBqb3VyIHF1ZSwgYXUgbHljZSwgZWxsZSB0YWl0IG1hbGFkZS4gUG91cnF1b2kgImQnYW1vdXIiID8gUGFyY2UgcXVlIGNlbGEgZnV0IGxlIGRidXQuIEV0IHF1ZSBjZWxhIG5lIHMnZXN0IGNvbXByaXMgcXVlIGJlYXVjb3VwIHBsdXMgdGFyZCAgQ29tbWUgbGEgQmlibGUuIEVzdCBpbCBleGFjdCBxdWUgYyd0YWl0IHVuZSBsZXR0cmUgZCdhbW91ciA/IE5vbiA6IGMndGFpdCBkZSBsJ2FsZ2JyZS4gRXN0IGlsIHZyYWkgcXVlIGMndGFpdCB1bmUgbGV0dHJlIGQnYW1vdXIgPyBPdWkuIFVuIGRidXQuIERqIGNyaXRlICJwYXJjZSBxdWUiCldlbGwgYXQgbGVhc3QgSSBkb24gc2VlIHRoZSAxOjUwIHBhY2UgYnVubnksIHRoaXMgaXMgZ29vZCEgVGhhbmsgeW91IHRvIHRoZSBsYWR5IHdhbGtpbmcgaGVyIGRvZyB5ZWxsaW5nIG91dCBzb21lIG11Y2ggbmVlZGVkIGVuY291cmFnZW1lbnQhIFVzaW5nIGFsbCBteSBlZmZvcnRzIHRvIHN0cmljdGx5IGNvbmNlbnRyYXRlIG9uIHJ1bm5pbmcgYW5kIG5vdGhpbmcgZWxzZS4gQWxtb3N0IGRvbmUsIHNvIHdoeSB3b24gbXkgbGVncyBnbyBmYXN0ZXI/ISBUaGVyZSB0aGUgZmluaXNoIGxpbmUhIDE6NDc6NDIuIApRdWFsaXR5OiBtb3N0IG9mIHRoZSBpbmNsdWRlZCB0cmlhbHMgc3VmZmVyZWQgZnJvbSBzbWFsbCBzYW1wbGUgc2l6ZSBhbmQgb3RoZXIgbWV0aG9kb2xvZ2ljYWwgZmxhd3MsIGFzIGluZGljYXRlZCBieSB0aGVpciBKYWRhZCBzY29yZXMuIEluIGFkZGl0aW9uLCBhIGRlZmluaXRlIGRpYWdub3NpcyBvZiBNUyB3YXMgbm90IGFsd2F5cyBzdGF0ZWQgYW5kIHRoZSBtZXRob2Qgb2YgcmFuZG9taXNhdGlvbiB3YXMgZ2VuZXJhbGx5IHVuY2xlYXIuClRocm91Z2ggdGhlIGNpdHkgb2YgQm91bGRlcidzIEVjb25vbWljIFZpdGFsaXR5IGFybSwgdGhlIE5hdHVyYWxseSBQcm9kdWN0cyBUYXNrIEZvcmNlIHdhcyBjcmVhdGVkLiBJdHMgbWlzc2lvbjogdG8gc3B1ciBpbm5vdmF0aW9uIGluIHRoZSBuYXR1cmFsIHByb2R1Y3RzIGluZHVzdHJ5LCB0byBoZWxwIGxvY2FsIGNvbXBhbmllcyBncm93LCB0byBrZWVwIHRob3NlIGNvbXBhbmllcyBoZXJlIGFuZCB0byBidWlsZCB0aGUgIkJvdWxkZXIgYnJhbmQuIgpGcmllbmRzIG9mIFJvdGFyeSBjb21wcmlzZWQgQW5kcmV3cyBBc3NvY2lhdGVzLCBNZXJyaWxsIEJyYWRsZXksIHRoZSBHcmVlbndhbGQgRm91bmRhdGlvbiBhbmQgV29vZHJ1biBWLiBJbiBraW5kIHNwb25zb3JzIHdlcmUgQXNwZW4gQnJld2luZyBDby4sIEFzcGVuIFB1YmxpYyBSYWRpbywgS1NOTywgU2lsdmVydHJlZSBIb3RlbCwgU25vd21hc3MgQ2x1YiwgU25vd21hc3MgSG9zcGl0YWxpdHkgYW5kIFN1bmRhbmNlIExpcXVvcnMuCkhhZCBjcmFzaGVkIG9uIGEgc3RhdGUgZmFybS4gVGhlIGNhciBwdWxsZWQgdXAgYXQgaXRzIGhlYWQgcXVhcnRlcnMsIHdoZXJlIGhlIHdhcyBzdHJpcCBzZWFyY2hlZC4gTm8gb25lIHNwb2tlIEVuZ2xpc2guIApCdXJsZXNxdWUsIGFzIEkgc2FpZCBpbiB0aGUgZW5jeWNsb3BlZGlhLC4gClRvIHJlY29yZDsgdG8gY29tbWVtb3JhdGU7IHRvIHRoaW5rIGJhY2sgdG8gdGhlIHBhc3RuLiAKSXQgb25seSB0b29rIGEgbW9udGggYmVmb3JlIHRob3NlIGZpcnN0IHByb2ZpdHMgd2VudCBhbmQgYW5vdGhlciB0aHJlZSBtb250aHMgYmVmb3JlIHRoZSByZW1haW5kZXIgb2YgdGhlIGFjY291bnQgZGlzYXBwZWFyZWQgdG9vLiBJIHdhcyBwbGF5aW5nIGxpa2UgYSB0eXBpY2FsIGdhbWJsZXIuIApJbiB3aGljaCBjYXNlIHlvdSBiZSBqdXN0IGZpbmUuLiAKRm9yIGV2ZXJ5IDEzOCBwZW9wbGUgdHJlYXRlZCBmb3IgNSB5ZWFycyBvbmUgZmV3ZXIgZGllcyBhbmQgZm9yIGV2ZXJ5IDQ5IHRyZWF0ZWQgb25lIGZld2VyIGhhcyBhbiBlcGlzb2RlIG9mIGhlYXJ0IGRpc2Vhc2UuIEEgMjAxMSByZXZpZXcgcmVhY2hlZCBzaW1pbGFyIGNvbmNsdXNpb25zLiAKVGhlIEVhcmx5IFN0YWdlcyBpcyB0aGUgc3RhcnRpbmcgc3RhZ2VzIG9mIGFueSB0b3VybmFtZW50IGFuZCBpdCBicmluZ3MgaW4gdmFyaWVkIGNoYWxsZW5nZXMgZm9yIGJvdGggZXhwZXJpZW5jZWQgYW5kIG5vdmljZSBwbGF5ZXJzLiAKR1UsIHdoaWNoIGtlcHQgaXQgY2xvc2UgYmVmb3JlIGEgcm91Z2ggZmluYWwgZmV3IG1pbnV0ZXMsIGZpbmlzaGVkIDMyIDUuClNhdWx0IFN0ZS4gTWFyaWUgTW9yZ2FuIEZyb3N0IChGbHllcnMpIHdhcyB0aGUgZmlyc3QgT0hMZXIgdG8gcmVhY2ggMTAwIHBvaW50cyBhbmQgaGUgaW4gdGhlIGRyaXZlciBzZWF0LCBidXQgTmlhZ2FyYSBKYXNvbiBSb2JlcnRzb24gKFN0YXJzKSBpcyBwdXNoaW5nIGhpbS4gQm90aCBjbHVicyBoYXZlIHRoZSBhYmlsaXR5IHRvIHB1dCB1cCAxMCBnb2FscyBhdCBhbnkgdGltZSBhZ2FpbnN0IHdlYWsgZGVmZW5zaXZlIHBsYXkuIApUaGUgZmlyc3QgdGhyZWUgY2FyZHMgYXJlIGNhbGxlZCAidGhlIGZsb3AiLCB0aGUgZm91cnRoIGNhcmQgaXMga25vd24gYXMgInRoZSB0dXJuIiBhbmQgdGhlIGZpZnRoIGNhcmQgaXMgY2FsbGVkICJ0aGUgcml2ZXIiLiAKSG93ZXZlciwgdGhlIFRleGFzIEhvbGRlbSBQaXJhdGUgUG9rZXIgU29mdHdhcmUgd2lsbCBwdXQgZXZlcnl0aGluZyBiYWNrIHRvIGV2ZW4gcGxheS4gV2hlbiB5b3UgdmlzaXQgdGhlIHNpdGUgZm9yIHlvdXJzZWxmLCB5b3Ugd29uJ3QgZmluZCB2ZXJ5IG11Y2ggaW5mb3JtYXRpb24uIApCYWxseSdzIHBhcnRpYWxseSBzdGFuZHMgb24gdGhlIHNpdGUgb2YgdGhlIGZvcm1lciBNYXJsYm9yb3VnaCBhbmQgQmxlbmhlaW0gSG90ZWxzLiBUaGUgRGVubmlzIEhvdGVsLCBhbiBoaXN0b3JpYyBzdHJ1Y3R1cmUgdGhhdCBkYXRlcyBiYWNrIHRvIDE4NjAsIGhhcyBiZWVuIGNvbXBsZXRlbHkgcmVzdG9yZWQgYW5kIGV4aXN0cyB0b2RheSBhcyBvbmUgb2YgdGhlIGhvdGVsIHNlY3Rpb25zIG9mIEJhbGx5J3MgQXRsYW50aWMgQ2l0eS4gR3Vlc3RzIGNhbiBjaG9vc2UgZnJvbSBuaWNlLCBjbGVhbiByb29tczsgYW5kIHN1aXRlcyBpbiBmb3VyIHNlY3Rpb25zOiBEZW5uaXMgVG93ZXIsIEdhcmRlbiBUb3dlciBhbmQgQmFsbHkncyBIb3RlbCBUb3dlci4gT2NlYW4gdmlld3MsIGx1eHVyaW91cyBiZWRzIGFuZCBleGNlbGxlbnQgYW1lbml0aWVzIGFyZSB0aGUgbm9ybSBmb3IgYW55b25lIGx1Y2t5IGVub3VnaCB0byBiZSBzdGF5aW5nIGF0IEJhbGx5IEF0bGFudGljIENpdHkuIENoZWNrIGluIHRvIGEgcm9vbSB3aXRoIGEgdmlldyBhdCBCYWxseSBhbmQgZW5qb3kgdGhlIGJlc3Qgb2YgdGhlIEJvYXJkd2FsayEKTGV0IGxvb2sgYXQgdGhlIHNjZW5hcmlvIGluIHF1ZXN0aW9uLCBpZiB5b3UgYSB3b21hbiBhdHRyYWN0ZWQgdG8gd29tZW4gYW5kIHNheSAiSSBoYXZlIHNvbWV0aGluZyB0byBnaXZlIHlvdS4gTXkgdmlyZ2luaXR5LiIgRG8geW91IHRoaW5rIHBlb3BsZSB3b3VsZCBpbnRlcnByZXQgdGhpcyB0byBtZWFuICJJIHdhbnQgeW91IHRvIGJlIHRoZSBmaXJzdCBwZXJzb24gSSBoYXZlIHNleCB3aXRoLCIgb3IgIkkgd2FudCB0byBnaXZlIHlvdSB0aGUgcmlnaHQgdG8gY2hvb3NlIHdoaWNoIHBlcnNvbiB3aXRoIGEgcGVuaXMgSSBoYXZlIHNleCB3aXRoPyIuIApCdXQgdGhpcyBpcyBub3QgYSBHVE8gc3RyYXRlZ3ksIGFzIGl0IGNhbiBiZSBleHBsb2l0ZWQuIFRoZSBwbGF5ZXIgY2FuIGFkYXB0IGFuZCBzdG9wIGZvbGRpbmcgMTAwJSBvZiB0aGUgdGltZS4gCkNvbmZlc3Npb246IEkgZ2V0IHN1cGVyIGp1ZGdtZW50YWwgb24gcGVvcGxlIChub24gcnVubmVycykgSSBzZWUgZHVyaW5nIG15IHJ1bnMuIEkgdXN1YWxseSBhIHZlcnkgYWdyZWVhYmxlIGFuZCB1bmRlcnN0YW5kaW5nIHBlcnNvbiwgYnV0IHRoZSBpbnRlcm5hbCByYWdlIGNvbWVzIG91dCB3aGlsZSBydW5uaW5nLiAKVGVsbCBtZSBhYm91dCBhIGdvb2Qgc3VzaGkgZGVhbCAob3IgZGlhcGVyIHNhbGUpIGEgZmV3IGRheXMgYmVmb3JlIEkgbWF5IHdhbnQgdG8gYWN0LiAKU2hlIGh1Z2dlZCBoaW0gYW5kIGJyb3VnaHQgaGltIGluc2lkZSB0byB0aGUgdGFibGUuIApNb3JuZWF1IGRlZmljaXRzIGFyZSBjb250cm92ZXJzaWFsLCBidXQgdGhleSBoZWxwZWQgb2Zmc2V0IHNsdW1wcyBpbiBleHBvcnQgcmV2ZW51ZSBhbmQgYnVzaW5lc3MgaW52ZXN0bWVudCBsYXN0IHllYXIuIEdvdmVybm1lbnQgc3BlbmRpbmcgbWlnaHQgYmUgdGhlIG9ubHkgdGhpbmcga2VlcGluZyBDYW5hZGEgZnJvbSBhIHJlY2Vzc2lvbiwgYWNjb3JkaW5nIHRvIFN0YXRDYW4uIApBbmQgeWV0IHRoZXJlIGlzIG5vIGhhcmQgZXZpZGVuY2UgdGhhdCBUcnVtcCBoaW1zZWxmIGtuZXcgYWJvdXQgdGhlIG1lZXRpbmdzIG9yIHRoYXQgQU5ZVEhJTkcgb24gc3Vic3RhbmNlIHdhcyBleGNoYW5nZWQgYXQgc2FpZCBtZWV0aW5ncy4gRXZlbiBpZiBoaXMgc29uIG9idGFpbmVkIHRvIG9idGFpbiBpbmZvcm1hdGlvbiwgaWYgaGUgZGlkbiBnZXQgaXQgb3IgZGlkbiBnaXZlIGFueXRoaW5nIGZvciBpdCwgaXQgbm90IGNvbGx1c2lvbi4gQW5kIGFnYWluLCBldmVuIGlmIGhlIERJRCBkbyB0aGVzZSB0aGluZ3MsIGl0IG5vdCB0ZWNobmljYWxseSBpbGxlZ2FsIGRlcGVuZGluZyBvbiB3aGF0IHRoZXkgY291bGQgc2FpZCBvciBkb25lLiBJdCBqdXN0IGxvb2tzIGJhZC4KT2ggYW5kIEkgaGF2ZSBsaWtlIGRvemVucyBvZiBmb29kIGFsbGVyZ2llcy4gClNoZSBpcyBhbiBhZHVsdCB3b21hbiBhbmQgeW91IGFyZSBhbiBhZHVsdCBtYW4sIGFuZCBpZiB5b3Ugd2FudCB0byBoYXZlIGFueSBob3BlIG9mIGhhdmluZyBhIGhlYWx0aHksIGhhcHB5IHJlbGF0aW9uc2hpcCB5b3UgZ29pbmcgdG8gbmVlZCB0byBiZSBhYmxlIHRvIGRlZmluZSB5b3Vyc2VsZiBvdXRzaWRlIG9mIHdoYXQgeW91ciBwYXJlbnRzIGFsbG93IGFuZCB3b24gYWxsb3cuIApJIHN0YXJ0ZWQgcGxheWluZyBhbmQgZ3JhZHVhbGx5IGdvdCBiZXR0ZXIuIApCdXQgcGVyaGFwcyB0aGVpciBtb3N0IG5vdGFibGUgYXNzaXN0cyBkdXJpbmcgdGhlaXIgaGlnaCBzY2hvb2wgY2FyZWVycyB0b29rIHBsYWNlIGZhciBmcm9tIHRoZSBoYXJkd29vZC4uIApJIHRoaW5rIHRoaXMgYXJ0aWNsZSBkb2VzIGEgZ29vZCBqb2Igb2YgcG9pbnRpbmcgb3V0IGlzc3VlcyB3aXRoIHRoZSBtZXRyaWMgdGhhdCBpcyBiZWluZyB1c2VkIHRvIG1ha2UgdGhlIGNsYWltIHRoYXQgcG92ZXJ0eSBpcyBkZWNyZWFzaW5nLiBBIGJldHRlciBtZXRyaWMgd291bGQgYmUgdGhlIHBlcmNlbnRhZ2Ugb2YgdGhlIHdvcmxkIHBvcHVsYXRpb24gdGhhdCBpcyBzdWZmZXJpbmcgZnJvbSBtYWxudXRyaXRpb24sIG9yIHRoZSBwZXJjZW50YWdlIG9mIHRoZSB3b3JsZCBwb3B1bGF0aW9uIHRoYXQgaXMgYmVpbmcgZGlzcGxhY2VkIGJ5IHdhciBvciBjb25mbGljdHMsIG9yIHRoZSBwZXJjZW50YWdlIG9mIGNoaWxkcmVuIHRoYXQgZGllLiAKVGFrZSB0aGF0IHNhbWUgYXJ0aXN0IGFuZCBzZWUgaWYgdGhleSBvbiBhIHJlY29yZCBsYWJlbCBvZiBzb21lIHNvcnQuIENoZWNrIHRoYXQgbGFiZWwgcGFnZSwgYSBsb3Qgb2YgdGltZXMgeW91IGhhdmUgYSBsb3Qgb2Ygc2ltaWxhciBjYWxpYmVyIG9yIHN0eWxlZCBncm91cHMgaW4gb25lIHBsYWNlIHRvIGNoZWNrIG91dC4KVGhpcyBwYXJ0aWN1bGFyIHZhcmlhbnQgZGV2ZWxvcGVkIGJ5IFBsYXl0ZWNoIGNvbWVzIHdpdGggdGhlIHNhbWUgbGF5b3V0IGFuZCBnYW1lcGxheSBhcyBpdHMgcHJlZGVjZXNzb3IsIHdoaWxlIGZlYXR1cmluZyBkaWZmZXJlbnQgdmlzdWFscyBhbmQgYmVpbmcgYSBiaXQgbW9yZSBleGNpdGluZyBkdWUgdG8gdGhlIHByZXNlbmNlIG9mIHNhaWQgSm9rZXIgV2lsZHMuLiAKSSBndWVzcyBGaWVycm8gaGFkIGEgbGl0dGxlIHRvbyBtdWNoIGZ1biBhdCB0aGUgY291bnRyeSBjbHViLiBBcyBmYXIgYXMgdGhlIERVSS9EV0lzLCBjb21lIG9uLiAKVGhhdCB3YXMgcGFzc2VkIGRvd24gdGhlIHJhbmtzIHVudGlsIHNvbWVvbmUgaW4gbWlkZGxlIG1hbmFnZW1lbnQgc3VnZ2VzdGVkIHdlIGNvbnRyYWN0IHRoYXQgd29yayBvdXQgaW5zdGVhZCBvZiBoaXJpbmcgbmV3IGVtcGxveWVlcyB0byBkbyB0aGUgd29yayBhcyBpdCB3YXNuIGxvbmcgdGVybSB3b3JrLiBJdCB3YXMgYWdyZWVkIHVwb24gYnkgdXBwZXIgbWFuYWdlbWVudCB3aXRoaW4gdGhlIG9yZyAobm90IHRoZSBib2FyZCBhcyBhZ2FpbiwgZGlkbiBjYXJlIGFzIGxvbmcgYXMgaXQgd2FzIHdpdGhpbiBidWRnZXQpIHRoYXQgaXQgd291bGQgYmUgY29udHJhY3RlZCBvdXQgYW5kIHRoYXQgdGhlIGRlY2lzaW9uIG9mIHdobyBpdCB3b3VsZCBiZSBjb250cmFjdGVkIG91dCB0byB3b3VsZCBiZSBtYWRlIGJ5IHNvbWVvbmUgaW4gbWlkZGxlIG1hbmFnZW1lbnQuIApOb3csIFNoYW5ub24gRWxpemFiZXRoLCBiZXN0IGtub3duIGFzIHRoZSBob3QgZm9yZWlnbiBleGNoYW5nZSBzdHVkZW50IE5hZGlhIGluIHRoZSBQaWUgZnJhbmNoaXNlLCBoYXMgZmlsZWQgZm9yIGRpdm9yY2UgZnJvbSBhY3RvciBKb3NlcGggUmVpdG1hbiBhZnRlciB0aHJlZSB5ZWFycyBvZiBtYXJyaWFnZSBhbmQgYSBkZWNhZGUgb2YgZGF0aW5nLgpZZXQgTUgzNzAgZGlkLiAyMiBCYWlrb251ciBpcyBsZWFzZWQgZnJvbSBLYXpha2hzdGFuIGJ5IFJ1c3NpYS4gCkFsc28sIG1vc3Qgb25saW5lIHBva2VyIHJvb21zIGRpc2NvdXJhZ2Ugc3dlYXJpbmcgaW4gdGhlIGNoYXQgYm94LCB3aGlsZSBhdCBhIGNhc2lubywgaWYgeW91IHJlYWxseSBoYWQgbm8gbWFubmVycywgeW91IGNvdWxkIHN3ZWFyIGFsbCB5b3UgbGlrZSBldmVyeSB0aW1lIHlvdSBsb3NlIGEgaGFuZC4gVGhhdCBpcyBwcmV0dHkgbXVjaCB0aGUgb25seSBkaWZmZXJlbmNlcyBiZXR3ZWVuIHJ1bGVzIGluIG9ubGluZSBhbmQgdHJhZGl0aW9uYWwgcG9rZXIuCk1hc3NhZ2UsIGJvZHl3b3JrIGFuZCBwc3ljaG9sb2dpY2FsIGNvdW5zZWxsaW5nIHNlZW0gdG8gaW1wcm92ZSBkZXByZXNzaW9uLCBhbnhpZXR5IGFuZCBzZWxmIGVzdGVlbSBmZWx0IGJ5IHRoZSBwYXRpZW50LiBUaGUgbGl0ZXJhdHVyZSBzZWFyY2ggYXBwZWFyZWQgdG8gYmUgdGhvcm91Z2ggYW5kIG5vIGxhbmd1YWdlIHJlc3RyaWN0aW9ucyB3ZXJlIGFwcGxpZWQuIApNeSBuZXh0IHJlY29sbGVjdGlvbiBpcyBvZiBlbWVyZ2VuY3kgdmVoaWNsZXMuIFRoZSBsaWdodHMsIGFuZCBzb3VuZHMsIHRoZSBjb21tb3Rpb24gYW5kIGFueGlldHkuIEkgcmVtZW1iZXIgdW5kZXJzdGFuZGluZyB0aGF0IGl0IGhhZCBzb21ldGhpbmcgdG8gZG8gd2l0aCBNaWNrZXkuIEFuZCB0aGVuIG15IG5leHQgbWVtb3J5IGlzIG9mIHRoZSBzY3JlYW0uIEl0IGNhbWUgZnJvbSBkb3duIHRoZSBzdHJlZXQsIGJ1dCBpdCByYW5nIHRocm91Z2ggbWUgZnJvbSBhbGwgZGlyZWN0aW9ucy4gSXQgc2NhcmVzIG1lIG5vdyBldmVuIGFuZCBnaXZlcyBtZSBjaGlsbHMuIEkgZGlzdGluY3RseSByZWNhbGwga25vd2luZyBoZWxsIHdhcyBuZWFyIGJlY2F1c2UgbXkgbW90aGVyIHdhcyBub3Qgb25seSBhcyBob3JyaWZpZWQgYXMgSSB3YXMgYnV0IGFsc28gdGhhdCBzaGUgd2FzIGVtYnJhY2luZyBtZSBmb3IgY29tZm9ydC4KUm9iYmlucyBvbmNlIGhhZCBhIG5lb24gc3dvcmQsIHdoaWNoIGxpZ2h0cyB1cCB0aGUgY2hlc3QsIGJyZWFrIGluc2lkZSBvZiBoaW0uIApQdXNoIG9mZiB0aGUgc2VhdCB3aXRoIHRoZWlyIGhhbmRzIG9yIGZpc3RzCkFzIG1hbnkgYXMgMyBkb3plbiBwaG90b2xpdGhvZ3JhcGhpYyBzdGVwcyBtYXkgYmUgbmVlZGVkIHRvIHByb2R1Y2UgYSBjaXJjdWl0LiAKQXMgc2hlIGNhcmVmdWxseSBrbmVhZGVkIG15IG5lY2ssIHNjYWxwIGFuZCBmYWNlLCBJIGluc3RhbnRseSByZWxheGVkLiAKSnVzdCBsb29rIGF0IHRoZSBvcmlnaW5hbCBCYXRtYW4gc2VyaWVzIGNvbXBhcmVkIHRvIE5vbGFuIERhcmsgS25pZ2h0IGZpbG1zLiBUaGUgY2hhbmdlcyB0aGF0IHRvb2sgcGxhY2UgaW4gdGhhdCB1bml2ZXJzZSBiZXR3ZWVuIHRob3NlIHR3byBpdGVyYXRpb25zIHdlcmUgd2F5IG1vcmUgc3Vic3RhbnRpdmUgdGhhbiBqdXN0IGdlbmRlci4gR2VuZGVyIGlzbiBzcGVjaWFsIGFuZCBpc24gb2ZmIGxpbWl0cyBmb3Igc3VjaCBjaGFuZ2VzLkJ1dCB3aGF0IGRvZXMgYm90aGVyIG1lIGlzIHRoZSBlbmRsZXNzIHJlY3ljbGluZyBvZiBlc3RhYmxpc2hlZCB1bml2ZXJzZXMgdG8gbWlsayB0aGUgYm94IG9mZmljZSByYXRoZXIgdGhhbiBhY3R1YWxseSBtYWtpbmcgc29tZXRoaW5nIG5ldy5lZGl0OiBBbHNvLCBhcyBwb2ludGVkIG91dCwgdGhlcmUgaGFzIGJlZW4gbm8gZ2VuZGVyIHJlcGxhY2VtZW50IGluIE1hcnZlbCBvciBTdGFyIFdhcnMgbW92aWVzIHRoYXQgSSBhd2FyZSBvZi4gCkhvd2V2ZXIsIGFzIHRoZSBhZ2UgZ29lcyB1cCBpdCBleGFjZXJiYXRlcyBhbm90aGVyIHByb2JsZW0uIFJpZ2h0IG9yIHdyb25nIHRoZSBtZWRpYSBoYXMgcHJvZ3JhbW1lZCB1cyB0byB3YW50IHRoaW4gKHdlbGwsIGF0IGxlYXN0IG5vdCBmYXQpIGdpcmxzIHdpdGggbmljZSBoYWlyIGFuZCBuYWlscyB3aG8gd2VhciBhdHRyYWN0aXZlIG1ha2V1cC4gCkFzIHNvbWVvbmUgaW4gU1RFTSwgdGhpcyBoYXMgYmVlbiBteSBzdXNwaWNpb24gYWxsIGFsb25nLiBUaGVyZSBhcmUgY2FtcGFpZ25zLCB3b21lbiBvcmdhbml6YXRpb25zLCBhbmQgZ3JhbnRzL3NjaG9sYXJzaGlwcyBhbGwgdGFpbG9yZWQgc3BlY2lmaWNhbGx5IHRvIHdvbWVuIGFuZCBnaXJscy4gCkZvbGxvdyB1cDogSW4gMjAwMCwgZm9sbG93aW5nIG5vdmVsIGRldmVsb3BtZW50cyBpbiBETkEgc2NpZW5jZSwgTGVvbiBjYXNlIG1hdGVyaWFscyB3ZXJlIHJldGVzdGVkICAgZXhjbHVkaW5nIFlvdW5nYmxvb2QgYXMgaGlzIGF0dGFja2VyLiBIZSB3YXMgcmVsZWFzZWQgZnJvbSBwcmlzb24gdGhhdCB5ZWFyLiBJbiAyMDAxLCBhIGJsYWNrIG1hbiB3aXRoIGEgYmFkIGV5ZSBuYW1lZCBXYWx0ZXIgQ3J1aXNlIHdhcyBmb3VuZCB0byBiZSBhIEROQSBtYXRjaCBmb3IgdGhlIHNlbWVuIGxlZnQgb24gdGhlIHZpY3RpbSBtYXRlcmlhbHMuIEluIDIwMDIsIENydWlzZSB3YXMgc2VudGVuY2VkIHRvIDI0IHllYXJzLiBIZSBzdGF0ZWQgaGUgd2FzICJzb3JyeSBmb3IgZXZlcnl0aGluZyBJJ3ZlIGRvbmUgdG8gaHVydCBhbnlib2R5IGluIG15IGxpZmUsIiBhdHRyaWJ1dGluZyBoaXMgcGFzdCBhY3Rpb25zIHRvIGFsY29ob2xpYyBibGFja291dHMuIExlb24sIGZvbGxvd2luZyBhIGxvbmcgaGlzdG9yeSBvZiBhbGNvaG9sIGFuZCBjb2NhaW5lIGFkZGljdGlvbiwgbm90IHRvIG1lbnRpb24gYSBkb21lc3RpYyB2aW9sZW5jZSByZWNvcmQsIGdvdCBkcnVuayBhbmQgc3RlcHBlZCBpbiBmcm9udCBvZiBhIHRyYWluIGluIDIwMDQuIExhcnJ5IFlvdW5nYmxvb2QgZGllZCBpbiAyMDA3IGhhdmluZyBuZXZlciBiZWVuIGNvbXBlbnNhdGVkIGZvciBoaXMgZXhwZXJpZW5jZXMuIFdhbHRlciBDcnVpc2UgcmVtYWlucyBpbmNhcmNlcmF0ZWQgaW4gQXJpem9uYS4KT3VyIGhvdXNlaG9sZCBzYXZpbmcgcmF0ZSBzaW5jZSAxOTgxIGhhcyBhdmVyYWdlZCA3LjMgcGVyIGNlbnQsIGFuZCB0aGUgYW5udWFsIHNhdmluZyByYXRlIGhhcyBub3QgZ29uZSBuZWdhdGl2ZSBzaW5jZSAxOTMzLiBBcyBpbnRlcmVzdCByYXRlcyBjb250aW51ZSB0byBub3JtYWxpemUgYW5kIHdlIGVudGVyIG91ciB0ZW50aCB5ZWFyIHNpbmNlIHRoZSBsYXN0IHJlY2Vzc2lvbiwgaXQgbWF5IGJlIHRoYXQgMjAxOSBpcyBhbiB1bnByZWNlZGVudGVkIHllYXIgaW4gdGhlIGhpc3Rvcnkgb2YgQ2FuYWRpYW4gc2F2aW5nIChvciBsYWNrIHRoZXJlb2YpLi4gCkFuZCBzdXJlLCB0aGUgT3R0b21hbiBFbXBpcmUgbG9zdCBsYW5kIGFuZCBtaWxpdGFyeSBzdHJlbmd0aCBvdmVyIGl0cyBsb25nIGxpZmUsIGJ1dCBoaXN0b3JpYW5zIHdobyBmb2N1cyBvbiB0aG9zZSBpc3N1ZXMgaWdub3JlIHRoZSBvdGhlciBjdWx0dXJhbCwgc2NpZW50aWZpYywgYW5kIHBvbGl0aWNhbCBjaGFuZ2VzIHRoYXQgaGFwcGVuZWQgaW4gdGhlIE90dG9tYW4gRW1waXJlLi4gClRoZSBob29kIGlzIHF1aXRlIGJhc2ljIGFuZCB3aWRlLCBidXQgbm90IGFzIHVzZWxlc3MgYXMgdGhlIGltYWdlcyBvbiB0aGVpciBzaXRlIG1ha2UgaXQgbG9vay4uIApUaGVyZSBhIG11c2V1bSBpbiB0aGVyZSAoJDE1KS4gSGVhZCBiYWNrIHRvIHRoZSBjaXR5IGFuZCB2aXNpdCBTcGljZSBBbGxleSBpbiBDaGlwcGVuZGFsZSBmb3IgYSBjaGVhcGlzaCBkaW5uZXIgICBpdCBCWU8gYW5kIHRoZXJlIGEgYm90dGxlIHNob3AgaW4gdGhlIHNob3BwaW5nIGNlbnRyZSBuZXh0IGRvb3IuLiAKQmlnIGdpcmxzLCBza2lubnkgZ2lybHMgaXQgZG9uJ3QgbWF0dGVyIHdoYXQgeW91IGdvdCBDYW50IGxldCB5b3UgZ28gdG9vIGZhciwgY2F1c2UgeW91ciBhIHN1cGVyc3RhciBOb3cgaGVyZSdzIHRoZSBjb3VudGRvd24gbGV0IGVtIGtub3cuLiAKU29tZXRoaW5nIHRoYXQgeW91IHNob3VsZCBhc2sgeW91ciBEb2N0b3IgYWJvdXQgd291bGQgYWxzbyBiZSBQaWxhdGVzLiBUaGlzIGhhcyBiZWVuIHJlcG9ydGVkIGluIHJlc2VhcmNoIHRvIHJlZHVjZSBiYWNrIHBhaW4gaW4gdGhvc2Ugd2l0aCBzY29saW9zaXMuIEkgYW0gdW5zdXJlIGlmIGl0IHdpbGwgYWxzbyB3b3JrIHdpdGggYSBmdXNpb24gYnV0IGRlZmluaXRlbHkgY29uc2lkZXIgc3BlYWtpbmcgd2l0aCB5b3VyIERvY3RvciBhYm91dCBpdC5EZXBlbmRpbmcgb24gdGhlIG1vdmVtZW50cyBvZiBQaWxhdGVzIHlvdXIgRG9jdG9yIG1heSBzYXkgY2VydGFpbiBtb3ZlbWVudHMgc2hvdWxkIGJlIGF2b2lkZWQuIApQb3VydGFudCwgY2VzIGF2YW5jZXMgbmUgZG9pdmVudCBwYXMgdHJlIGwnYXJicmUgcXVpIGNhY2hlIGxhIGZvcnQgY2FyIGxlcyB0YXRzIG1lbWJyZXMgbmUgZm9udCBwYXMgdG91am91cnMgdXNhZ2UgZGUgdG91dGVzIGxlcyBwb3RlbnRpYWxpdHMgcXVlIGxlIGRyb2l0IGV1cm9wZW4gb2ZmcmUuIERlIHN1cmNyb3QsIGxlIHBheXNhZ2UgZGUgbGEgc2N1cml0IGludHJpZXVyZSBlc3QgY29uZnVzIGF2ZWMgbGEgbXVsdGlwbGljYXRpb24gZGVzIGluc3RydW1lbnRzIGV1cm9wZW5zIGVuIG1hdGlyZSBkZSBzY3VyaXQgaW50cmlldXJlLCBjZSBxdWkgZ25yZSBkZXMgcGhub21uZXMgZGUgY29uY3VycmVuY2Ugc3VyIGxlIHBsYW4gZGUgbGV1ciB1dGlsaXNhdGlvbi4gCkkgbGlzdGVuZWQsIGtlcHQgbXkgbW91dGggc2h1dCB3aXRoIHJlc3BlY3QgdG8gZ2l2aW5nIGhpbSBhZHZpY2Ugb3Igb2ZmZXJpbmcgbXkgb3Bpbmlvbi4gCldlIGFyZSBub3cgY291bnRpbmcgZG93biB0byB0aGUgZW5kIG9mIHRlcm0gYW5kIGFubnVhbCBFUFMgU29jaWV0aWVzIEF3YXJkcy4gV2l0aCB0aGUgZXhjaXRpbmcgeWVhciB3ZSBoYWQgd2UgaG9waW5nIHRvIGdldCBvbiBvdXIgaGFuZHMgb24gb25lIG9mIHRoZSBwcmVzdGlnaW91cyBBd2FyZHMgb24gb2ZmZXIuIElmIHlvdSBhcmUgb3IgaGF2ZSBiZWVuIHBhcnQgb2YgSlVHUywgb3IgaGF2ZSBlbmpveWVkIHJlYWRpbmcgYWJvdXQgb3VyIGFjdGl2aXRpZXMgdGhpcyB5ZWFyIHBsZWFzZSBub21pbmF0ZSB1cyEKWWVzdGVyZGF5IEkgd2FzIGluIHRoZSBncm9jZXJ5IHN0b3JlIGFuZCBnb3Qgc3Vja2VkIGludG8gbXkgZmF2b3JpdGUgam91cm5hbCBvZiBBbWVyaWNhbiBwb3B1bGFyIGN1bHR1cmUuIG5vdCBQZW9wbGUuIE5hdGlvbmFsIEVucXVpcmVyLiBjYXNlIHlvdSBoYXZlbiBub3RpY2VkLCB0aGUgTmF0aW9uYWwgRW5xdWlyZXIgYWx3YXlzIGhhcyB0aGUgYWJzb2x1dGUganVpY2llc3QgY2VsZWJyaXR5IGdvc3NpcCBpbiBwcmludC4gdGhlcmUgZXZlbiBiZXR0ZXIgc3R1ZmYgb24gdGhlIHdlYiwgbGlrZSBQZXJleiwgYnV0IHdoZW4gZm9yY2VkIHRvIHdhaXQgaW4gbG9uZyBjaGVjayBvdXQgbGluZXMsIEkgbGlrZSB0byB0aGluayB0aGF0IG15IGdyb2Nlcnkgc3RvcmUgaXMgcmVhbGx5IGludml0aW5nIG1lIHRvIHRha2UgYSBmZXcgbWludXRlcyB0byBjYXRjaCB1cCBvbiBpbXBvcnRhbnQgaW5mb3JtYXRpb24sIGxpa2UgIkhvdyB0byBoYXZlIHRoZSBiZXN0IHNleCBldmVyIiAoQ29zbW8pIG9yIHdoaWNoIEhvbGx5d29vZCBzdGFyIGlzIHByZWduYW50IChQZW9wbGUpIG9yIGhvdyB0byBiZXR0ZXIgb3JnYW5pemUgbXkgY2xvc2V0cyAoUmVhbCBTaW1wbGUpLiBJIHJlYWQgdGhlIE5hdGlvbmFsIEVucXVpcmVyIGJlY2F1c2UgZm9yIHRoZSBwYXN0IGZpZnRlZW4geWVhcnMgb3Igc28sIHRoZXkgYmVlbiByaWdodCBhIGxvdCBvZiB0aGUgdGltZSBhbmQgd2F5IGFoZWFkIG9mIHRoZSBuZXdzIGN5Y2xlIHdoZW4gaXQgY29tZXMgdG8gc2V4IGFuZCBmYW1vdXMgcGVvcGxlLgpJJ3ZlIGFkZGVkIGEgZmV3IG5ldyBwaWVjZXMgc2luY2UgdGhlIGZpcnN0IGRheSwgYnV0IGl0J3MgdGhlIHNhbWUuIApBZnRlciBhbm90aGVyIGtpbG9tZXRyZSwgdGhlcmUncyBhIHdpZ2dsZSBpbiB0aGUgcGF0aCBhbmQgaXQgZ29lcyBpbnRvIGEgd29vZGVkIGFyZWEuIFlvdSBzaG91bGQgbm93IGJlIGFibGUgdG8gc2VlIHRoZSBzZWEgdGhyb3VnaCB0aGUgdHJlZXMgb24gdGhlIHJpZ2h0LiAKVGhlIHN0b3JteSBmaW5hbGUgb2YgTWFobGVyJ3MgU3ltcGhvbnkgTm8uIDEgY2xvc2VkIHRoZSBBbGxlbnRvd24gU3ltcGhvbnkgT3JjaGVzdHJhJ3MgNjB0aCBzZWFzb24gU2F0dXJkYXkgbmlnaHQgYXQgU3ltcGhvbnkgSGFsbCwgZW5kaW5nIG9uZSBvZiB0aGUgbW9zdCBlbmdhZ2luZyBwcm9ncmFtcyBvZiBpdHMgMjAxMCAyMDExIGNsYXNzaWNhbCBzZXJpZXMuIEl0IHdhcyBhIGNvbmNlcnQgb2YgZHJhbWF0aWMgY29udHJhc3RzLCBmcm9tIHRoZSBkZWxpZ2h0ZnVsIHF1aXJraW5lc3Mgb2YgUG91bGVuYydzIENvbmNlcnRvIGZvciBUd28gUGlhbm9zIHRvIHRoZSBjb252b2x1dGVkIGNvbXBsZXhpdHkgb2YgdGhlIE1haGxlciwgYWxsIHBlcmZvcm1lZCB3aXRoIGFuIGV4dWJlcmFuY2UgYm9yZGVyaW5nIG9uIHRoZSBldXBob3JpYy4uIApJcyBpdCBhIGJhZCBpZGVhIHRvIHVzZSB0aGVtIGFzIGVtZXJnZW5jeSBiYWNrIHVwIHNob2VzPyBJZiBJIHN0YXJ0IHVzaW5nIHRoZSB0cmVhZG1pbGwgcmVndWxhcmx5IEknbGwgY29uc2lkZXIgZ2V0dGluZyBhIG5ldyBwYWlyIGp1c3QgdG8gdXNlIHRoZXJlLCBidXQgZm9yIG5vdyBJIHdhbnQgdG8ganVzdCB1c2Ugd2hhdCBJIGhhdmUuIApFdnlsRmFpcnkgIDI2IHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvCk1heWJlIHNvbWUgb2YgdXMgZ2V0IGJ5IHdpdGhvdXQgaXQuIE1heWJlIHNvbWUgb2YgdXMgbmVlZCBpdCBvbmx5IGZvciBjZXJ0YWluIHNpdHVhdGlvbnMuIE1heWJlIHNvbWUgb2YgdXMgYWJzb2x1dGVseSBjYW4gZ2V0IGJ5IHdpdGhvdXQgaXQuKERpc2NsYWltZXI6IEkgZG9uIG1lYW4gdG8gZHJhdyB0b28gc3Ryb25nIGEgY29tcGFyaXNvbiBiZXR3ZWVuIEFESEQgYW5kIHBoeXNpY2FsIGRpc2FiaWxpdHk7IEkga25vdyB0aGV5IG5vdCB0aGUgc2FtZS4gCkhvbGx5d29vZCBhY3RvciBKYXNvbiBTdGF0aGFtIGZpYW5jLCAzMSwgd2VudCBicmFsZXNzIHRvIGJlc3Qgc2hvdyBvZmYgc29tZSBzZXJpb3VzIHNraW4gaW4gaGVyIGRlZXBseSBwbHVuZ2luZyBob3QgcGluayBzdWl0IGF0IHRoZSBzdGFyIHN0dWRkZWQgb2NjYXNpb24uCkFzdGVyaXggYW5kIG9iZWxpeCBjb21wbGV0ZSBjb2xsZWN0aW9uIHBkZiBkb3dubG9hZGdvbGtlcyB0ZXJyeSBnb29ka2luZCAuIApQcmVmdXNlIDczICAgVGhlIHZzIENvbGxlY3Rpb24KQWdhaW4uLiAKRGlyZWN0aW9ucyB0byB0aGUgY3VzdG9tZXIgaW4gTWFuY2hlc3RlciBpcyBpbmNsdWRlZCBtYXNzYWdlLCBzbyB5b3UgZG8gbm90IGhhdmUgdG8gaW5jdXIgYWRkaXRpb25hbCBjb3N0cy4gUGVyc29uYWxseSBpdCBzb21lIHByZXR0eSBncmVhdCBpbXBvcnRhbmNlIHRvIHlvdXIgcGh5c2ljYWwgZml0bmVzcyBhbmQgYSBoZWFsdGh5IGxpZmVzdHlsZS4gCkkgaGF2ZSBiZWVuIHRha2luZyBwaWN0dXJlcyBhcyBJIHdhbGsgYXJvdW5kIE11bmlzaW5nIHdoaWxlIHdhaXRpbmcgZm9yIHBlb3BsZSB0byBjYWxsIGluLiBJIHJ1biBvZmYgZm9yIHNvbWUgbHVuY2ggc29tZXdoZXJlIHVzdWFsbHkgSm9obm55IERvZ3MuIAogNDUgcG9pbnRzICBzdWJtaXR0ZWQgMTkgaG91cnMgYWdvSGUgbm90IGdvbm5hIG1ha2UgaXQsIGJ1dCBoZSBzdGlsbCBjYW4gY29tcGxldGUgdGhlIEFUIGFuZCB0aGF0IGFkbWlyYWJsZS4gRXZlbiBpZiBoZSBkaWRuIGNvbXBsZXRlIHRoZSBBVCwgaGUgc3RpbGwgb3V0IHRoZXJlIGRvaW5nIGl0LCBhbmQgdGhhdCBiZXR0ZXIgdGhhbiBzaXR0aW5nIG9uIGhpcyBhc3MuQnV0IG1heWJlIGEgbGl0dGxlIGh1YnJpcyB0byBwcmUgYW5ub3VuY2UgYSBDWVRDIHdoZW4geW91IGFyZW4gZXZlbiBhIHNpbmdsZSBjcm93bmVyLiBJIGJlIGNvbWZvcnRhYmxlIGFubm91bmNpbmcgYSBDWVRDIGlmIEkgaGFkIHByb2JhYmx5IGRvbmUgYXQgbGVhc3QgMiBsb25nIHRyYWlscyBiZWZvcmUsIHdhcyB0cmFpbmVkIGludG8gcGVhayBwaHlzaWNhbCBjb25kaXRpb24gYmVmb3JlIHN0YXJ0aW5nLCBhbmQgaGFkIGFsbCBteSBsb2dpc3RpY3MgYW5kIG1vbmV5IHNvcnRlZCBvdXQuIApUaGlzIGlzIHdoeSBtb3N0IG1lZGljYXRpb25zIG1hcmtldGVkIHRvd2FyZHMgY2hpbGRyZW4gYXJlIGluIGxpcXVpZCBmb3JtLiAKQW55IGFydGljbGUgd3JpdHRlbiBhYm91dCBzZWxmIGhlbHAgbXVzdCBoYXZlIGEgZGlzY2xhaW1lciwgc28gaGVyZSBpdCBpcy4gWW91IGNhbm5vdCB0cmVhdCwgZGlhZ25vc2Ugb3IgcHJlc2NyaWJlIGZvciB5b3Vyc2VsZiBvciBmYW1pbHkuIFlvdSBtdXN0IHNlZSB5b3VyIHBoeXNpY2lhbiB3aG8gaXMgbGljZW5zZWQgdG8gZG8gdGhvc2UgdGhyZWUgdGhpbmdzLiBZb3UgaGF2ZSB0aGUgcmlnaHQgdG8gZWR1Y2F0ZSB5b3Vyc2VsZiBhbmQgZmFtaWx5IGFuZCB0byBtYWludGFpbiB5b3VyIGdlbmVyYWwgaGVhbHRoLiBCZSB3aXNlLCBwYXkgYXR0ZW50aW9uLCBvbmx5IGRvIHdoYXQgZmVlbHMgcmlnaHQgdG8geW91IGFuZCBkbyBub3QgdHJlYXQgYW55IG5hdHVyYWwgcmVtZWR5IGFzIHRob3VnaCBpdCBpcyB0aGUgc2FtZSBhcywgb3IgcmVwbGFjZW1lbnQgZm9yLCBuZWNlc3NhcnkgbWVkaWNpbmVzLiBOZXZlciBmZWVsIHRoYXQgeW91IGhhdmUgdG8gY2hvb3NlIHRvIGVpdGhlciB1c2UgbmF0dXJhbCByZW1lZGllcyBvciBtZWRpY2luZXMuIHlvdSBzaG91bGQgdXNlIGV2ZXJ5dGhpbmcgYW5kIGFueXRoaW5nIHRoYXQgaGVscHMgeW91IGFuZCB5b3VyIGZhbWlseSBtYWludGFpbiBpdHMgaGVhbHRoIGFuZCB3ZWxsbmVzcy4gWW91IHNob3VsZCBhbHNvIGV4cHJlc3MgdGhhbmtmdWxuZXNzIHRoYXQgbXVsdGlwbGUgc3lzdGVtcyBvZiB3ZWxsbmVzcyBleGlzdC4gQmUgcmVzcG9uc2libGUuCkFzIGEgZ2lybCwgSSBjb3VsZCBjb25jZWl2ZSBhIGZ1dHVyZSBjYXJlZXIgYXMgYW4gYXJ0aXN0IG9yIGFzdHJvbmF1dCwgYnV0IHdhc24gb24gdGhlIHJhZGFyLiBQZW9wbGUgZGlkIHdvcmsgaW4gbm9uIHN0ZXJlb3R5cGljYWwgam9icywgYnV0IHRoZXkgd2VyZSBvZnRlbiBidXJkZW5lZCB3aXRoIHBhdHJvbml6aW5nIHF1YWxpZmllcnMsIHN1Y2ggYXMgbnVyc2Ugb3IgbGF3eWVyLiBUaGUgQWNhZGVtaWUgZGVjaXNpb24sIGpvdXJuYWxpc3QgRmF1c3RpbmUgV29obGZhcnQgdHdlZXRlZDogZmVtaW5pc3RzIG91dHNpZGUgb2YgRnJhbmNlLCBmaWdodGluZyB0byBiZSBhbGxvd2VkIGdlbmRlciBuZXV0cmFsIG9yIGV2ZW4gbWFsZSB3b3JrIHRpdGxlczsgdGhpcyBtYXkgc2VlbSBsaWtlIGEgc3RlcCBpbiB0aGUgd3JvbmcgZGlyZWN0aW9uLiAKSGUga25ldyBlYXJseSBvbiBub3RoaW5nIHdhcyBnb2luZyB0byBiZSBoYW5kZWQgdG8gaGltLi4gClRoaW5ncyBsaWtlIGN1c3RhcmQsIGNyZWFtLCBjaGFtcGFpZ24gY3VjdW1iZXIgYW5kIHN1Y2hsaWtlIGFsbCB3b3JrIHdlbGwgZW5vdWdoIHdpdGhvdXQgYW55IG9mIHRoZSBsb25nIGxhc3RpbmcgcGFpbiBpbmR1Y2luZyBlZmZlY3RzIG9mIHNvbWV0aGluZyBsaWtlIGNoaWxsaWVzLiAKRmlyc3QgcmVzcG9uZGVycyB1dGlsaXplIHVuaXZlcnNhbCBwcmVjYXV0aW9ucyBhbmQgZGlkIGR1cmluZyB0aGUgdHJlYXRtZW50IG9mIE1hdHRoZXcgU2hlcGFyZCAodGhvdWdoIGl0IHNvdW5kcyBsaWtlIHNoZSByYW4gb3V0IG9mIGdsb3ZlcykuIFRoZSBtZWRpYyB0b29rIEFaVCBhcyBhIHByZWNhdXRpb24gZHVlIHRvIE1hdHRoZXcgc3RhdHVzLgpNYWtpbmcgaW5mdXNlZCBvaWxzIGlzIGZhaXJseSBzaW1wbGUuIFRvIGRvIHNvLCB5b3UnbGwgbmVlZCBzb21lIGNhcnJpZXIgb2lsICAgZWl0aGVyIHN3ZWV0IGFsbW9uZCBvciBncmFwZXNlZWQxICAgYXMgd2VsbCBhcyBhIGphciB3aXRoIGEgdGlnaHQgZml0dGluZyBsaWQsIHNvbWUgc21hbGwgZHJvcHBlciBib3R0bGVzLCBsYWJlbHMsIGEgc21hbGwgZnVubmVsLCBleHRyYSBzdG9yYWdlIGJvdHRsZXMgKGp1c3QgaW4gY2FzZSksIGhlcmJzIG9mIGNob2ljZSwgbXVzbGluIGFuZCBwYXRpZW5jZS4KRW5kZWQgdXAgZmluaXNoaW5nIHRoZSBkYXkgc3RvcHBpbmcgYnkgbXkgc2NpZW5jZSB0ZWFjaGVyIHJvb20gc2luY2Ugc2luY2UgSSBrbmV3IGhlIGhhdmUgdHdlZXplcnMgdG8gcmVtb3ZlIHRoZSBncmFwaGl0ZSBhbmQgaXQgd2FzIG9uIHRoZSB3YXkgdG8gdGhlIG51cnNlIG9mZmljZSBhbnl3YXlzLiAKV2hlbiB5b3VyIHN0cmVudW91cyBnZW50bGVtYW4sIGZvciBleGFtcGxlLCBpcyBleGVyY2lzaW5nIGhpbXNlbGYgYnkgZmxvdXJpc2hpbmcgbGVhZGVuIHdlaWdodHM7IHdoZW4gaGUgaXMgd29ya2luZyBoYXJkLCBvciBlbHNlIHByZXRlbmRzIHRvIGJlIHdvcmtpbmcgaGFyZCwgSSBjYW4gaGVhciBoaW0gZ3J1bnQ7IGFuZCB3aGVuZXZlciBoZSByZWxlYXNlcyBoaXMgaW1wcmlzb25lZCBicmVhdGgsIEkgY2FuIGhlYXIgaGltIHBhbnRpbmcgaW4gd2hlZXp5IGFuZCBoaWdoIHBpdGNoZWQgdG9uZXMuIE9yIHBlcmhhcHMgSSBub3RpY2Ugc29tZSBsYXp5IGZlbGxvdywgY29udGVudCB3aXRoIGEgY2hlYXAgcnViZG93biwgYW5kIGhlYXIgdGhlIGNyYWNrIG9mIHRoZSBwdW1tZWxsaW5nIGhhbmQgb24gaGlzIHNob3VsZGVyLCB2YXJ5aW5nIGluIHNvdW5kIGFjY29yZGluZyBhcyB0aGUgaGFuZCBpcyBsYWlkIG9uIGZsYXQgb3IgaG9sbG93LiBUaGVuLCBwZXJoYXBzLCBhIHByb2Zlc3Npb25hbCBjb21lcyBhbG9uZywgc2hvdXRpbmcgb3V0IHRoZSBzY29yZTsgdGhhdCBpcyB0aGUgZmluaXNoaW5nIHRvdWNoLgpUaGUgZmFtaWx5IHdpc2hlcyB0byBleHRlbmQgYSBzcGVjaWFsIGFwcHJlY2lhdGlvbiB0byBEci4gVG9tIEpvbmVzLCBEci4gSmFzb24gU3dpZ2VydCwgQXBwbGVnYXRlIEhvc3BpY2UgQ2FyZSBhbmQgdGhlIHN0YWZmIG9mIHRoZSBSaXZlciBSb2FkIEJlZWhpdmUgSG9tZSBmb3IgdGhlaXIgZXhjZWxsZW50IGNhcmUgb2Ygb3VyIG1vbS4KSWYgeW91IGtub3cgd2hhdCBwYXR0ZXJucyBhbmQgcHJvcGVydGllcyB0byBsb29rIGZvciBpbiB0aGUgcHJpbWFyeSBzZXF1ZW5jZSB5b3UgY2FuIG1ha2UgZmFpcmx5IGFjY3VyYXRlIHByZWRpY3Rpb25zIGFib3V0IHNvbWUgZmVhdHVyZXMgb2Ygc2Vjb25kYXJ5IHN0cnVjdHVyZS4gUHJpbmNpcGFsbHkgYWxwaGEgaGVsaWNlcy4gWW91IGNhbiBwcmVkaWN0IGJldGEgc2hlZXRzIGFzIHdlbGwsIGJ1dCBzaW5jZSBiZXRhIHNoZWV0cywgcGFydGljdWxhcmx5IHBhcmFsbGVsIGJldGEgc2hlZXRzLCBjYW4gZm9ybSBiZXR3ZWVuIGFtaW5vIGFjaWRzIHRoYXQgYXJlIG9uIGRpc3RhbnQgcGFydHMgb2YgdGhlIHByaW1hcnkgc2VxdWVuY2UsIGl0cyBtdWNoIGhhcmRlciB0byBhY2N1cmF0ZWx5IHByZWRpY3QgdGhlbS4gQWRkaXRpb25hbGx5IG1hbnkgcHJvdGVpbnMgaGF2ZSBsb29wLCBhbmQgdW5zdHJ1Y3R1cmVkIHJlZ2lvbnMsIHRoYXQgYXJlIGhhcmQgdG8gcHJlZGljdC4gTWFueSBhbWlubyBhY2lkcyBhbHNvIHVuZGVyZ28gcG9zdCB0cmFuc2xhdGlvbmFsIG1vZGlmaWNhdGlvbiB3aGljaCBjYW4gYWZmZWN0IHRoZWlyIGNoZW1pY2FsIHByb3BlcnRpZXMuIFRoZSBhYmlsaXR5IHRvIHByZWRpY3QgdGVydGlhcnkgc3RydWN0dXJlIGlzIG11Y2ggaGFyZGVyIHVubGVzcyB5b3UgaGF2ZSBzdHJ1Y3R1cmFsIG1vZGVscyBvZiBzaW1pbGFyIHByb3RlaW4gc2VxdWVuY2VzIHRvIGNvbXBhcmUgdG8uIFRoZXJlIGFyZSBjb21tb24gZG9tYWluIHN0cnVjdHVyZXMgbGlrZSBsZXVjaW5lIHppcHBlcnMsIHppbmMgZmluZ2VycywgZ3JlZWsga2V5cyBlY3QsIHRoYXQgeW91IGNvdWxkIHByZWRpY3Qgd2l0aCBhIGRlY2VudCBhY2N1cmFjeSBpZiB5b3Uga25vdyB3aGF0IHByaW1hcnkgc2VxdWVuY2VzIHRvIGxvb2sgZm9yLgpJdCBsb29rcyBsaWtlIHlvdSBhcmUgc2VhcmNoaW5nIGZvciB0aGUgaW5mb3JtYXRpb24gYWJvdXQgQ2x1YldQVCBSYWtlYmFjay4gVGhpcyBhcnRpY2xlIHdpbGwgaGVscCB5b3UuIApIZXQgaXMgd2VlciB6byB2ZXIgYmVuIHZlcmtvdWRlbiBlbiBoZWIgZGVyIG9vayBuZXQga3JpZWJlbGhvZXN0IGJpamdla3JlZ2VuLiBUaWpkIG9tIG51IG5vZyBuYWFyIGRlIHdpbmtlbCB0ZSBnYWFuIGhlYiBpayBoZWxhYXMgbmlldCAoZG9lIGlrIG1vcmdlbiB3YW50IGlrIHdlZXQgd2VsIC4KU2kgbCdvcmRyZSBuJ2VzdCBwYXMgcmV0cm91diwgbGUgY29ycHMgc2UgcmFwcHJvY2hlIGRlIGwndGF0IGRlIGxhIGNlbmRyZSwgaFBIZXIsIG1hdGlyZSBtb3J0ZS4gTWFpcyBzJ2lsIHJldHJvdXZlIHNvbiBvcmRyZSwgbGUgY29ycHMgcmV0cm91dmUgc2EgYmVhdXQgbmF0dXJlbGxlIGV0IHBhcmZhaXRlLCBsZSBQZWhSIC4uIApBIHllYXIgbGF0ZXIsIHRoZSBjb21wYW55IGFubm91bmNlZCBpdCBoYWQgc29sZCBOZWN0YXIsIGEgQnJpdGlzaCBsb3lhbHR5IHByb2dyYW0sIHRvIEJyaXRpc2ggcmV0YWlsZXIgU2FpbnNidXJ5IGZvciAkMTA1IG1pbGxpb24sIDExIHllYXJzIGFmdGVyIEFpbWlhIGJvdWdodCB0aGUgc2NoZW1lIGZvciAkNzU1IG1pbGxpb24uCldyZGUgbWljaCBkZW0gYW5kZXJlbiBOdXR6ZXIgZGFiZWkgYW5zY2hsaWVlbiBkYXNzIEludGVsbGlnZW56IG1pdCBWZXJhbnR3b3J0dW5nIGJ6dy4gCkRhbmllbCBkb25lIHNvbWUgZ29vZCBmb3IgcG9rZXIuIApPbiBUaHVyc2RheSwgcmVwcmVzZW50YXRpdmVzIG9mIHRoZSBORFAsIExpYmVyYWxzLCBHcmVlbnMgYW5kIEJsb2MgYWdyZWVkIHRvIGRvIG9uZSBFbmdsaXNoIGFuZCBvbmUgRnJlbmNoIGRlYmF0ZSB0byBiZSBicm9hZGNhc3QgYnkgQ1RWLCBDQkMsIEdsb2JhbCBhbmQgUmFkaW8gQ2FuYWRhLCB3aGljaCB3b3VsZCByZWFjaCBtaWxsaW9ucyBvZiBDYW5hZGlhbiBUVnMuClRoZSBQYXJpcyBDbGltYXRlIEFncmVlbWVudCBpcyBhbiBhYnNvbHV0ZSBqb2tlLiBZb3Ugc2hvdWxkIHRyeSByZWFkaW5nIGl0IHNvbWV0aW1lLiBFdmVuIGlmIGV2ZXJ5IGNvdW50cnkgZm9sbG93ZWQgaXRzIHByb21pc2VzIChsb2whKSwgaXQgd291bGQgbm90IGJlIHN1ZmZpY2llbnQgdG8gcmVkdWNlIGdyZWVuaG91c2UgZ2FzZXMgdG8gdGhlIGxldmVsIHNjaWVudGlzdHMgY2xhaW0gYXJlIG5lY2Vzc2FyeSB0byBicmluZyB3YXJtaW5nIHVuZGVyIGNvbnRyb2wuIFNvbWUgb2YgdGhlIHByb21pc2VzIHRoZW1zZWx2ZXMgYXJlIHNvIHN0dXBpZCB0aGF0IHlvdSBoYXZlIHRvIHdvbmRlciBob3cgdGhleSB3ZXJlIGV2ZW4gYWNjZXB0ZWQuIE9uZSBjb3VudHJ5IHByb21pc2Ugd2FzIHRoYXQgb25jZSB0aGV5IHJlYWNoZWQgcGVhayBlbWlzc2lvbnMsIHRoZXkgd291bGQgdGhlbiBzdGFydCByZWR1Y2luZyB0aGVtLiBXZWxsLiBubyBzaGl0LCB0aGF0IHdoYXQgcGVhayBlbWlzc2lvbnMgbWVhbnMuCkVsbGUgaW50ZXJ2ZW5haXQsICB1biBtb21lbnQgbyBsYSBydm9sdXRpb24gaW5kdXN0cmllbGxlIG9wcmFpdCB1bmUgZ3JhbmRlIG11dGF0aW9uLiAKQmVmb3JlIGhlIHJldGlyZWQgZnJvbSBoaXMgcG9zaXRpb24gYXMgUHJlc2lkZW50IG9mIEdhcmxhbmQgQ2FuYWRhIEluYy4sIGhlIGhhZCB0aGUgcGxlYXN1cmUgb2Ygd2F0Y2hpbmcgdGhlIGJ1c2luZXNzIGdyb3cgYW5kIGZsb3VyaXNoIGFzIGEgZGlyZWN0IHJlc3VsdCBvZiBoaXMgaGFyZCB3b3JrIGFuZCBjb25zdW1tYXRlIGxlYWRlcnNoaXAuIEEgbWFuIG9mIGdyZWF0IGludGVncml0eSwgQmlsbCB0cmVhdGVkIGhpcyBjdXN0b21lcnMgYW5kIGhpcyBzdGFmZiB3aXRoIGdyZWF0IHJlc3BlY3QgYW5kIGFwcHJlY2lhdGlvbiwgaW5zcGlyaW5nIHByb2ZvdW5kIGxveWFsdHkgZnJvbSBhbGwuIApNYXJyaWFnZSBpcyBhbiBpbnN0aXR1dGlvbiB1c2VkIHByaW1hcmlseSB0byBjb25zb2xpZGF0ZSBwcml2aWxlZ2UsIGFuZCB3ZSB0aGluayByZWFsIGNoYW5nZSB3aWxsIG9ubHkgY29tZSBmcm9tIGdldHRpbmcgcmlkIG9mIGEgc3lzdGVtIHRoYXQgY29udGludWFsbHkgZG9sZXMgb3V0IHByaXZpbGVnZSB0byBhIGZldyBtb3JlLCByYXRoZXIgdGhhbiB0cnlpbmcgdG8gcmVmb3JtIGl0LiBXZSBrbm93IHRoYXQgbW9zdCBmYW1pbGllcywgc3RyYWlnaHQgb3IgZ2F5LCBkb24ndCBmaXQgaW4gd2l0aCB0aGUgc3RhbmRhcmRzIGZvciBtYXJyaWFnZSwgYW5kIHNlZSBtYW55IHN0cmFpZ2h0IGZhbWlsaWVzIGJlaW5nIHBlbmFsaXplZCBmb3Igbm90IGNvbmZvcm1pbmcgdG8gdGhlIHN0YW5kYXJkIHRoZSBnb3Zlcm5tZW50IGhhcyBzZXQ6IHNpbmdsZSBtb21zIHRyeWluZyB0byBnZXQgb24gd2VsZmFyZSwgZXh0ZW5kZWQgZmFtaWx5IG1lbWJlcnMgdHJ5aW5nIHRvIGdhaW4gY3VzdG9keSwgZnJpZW5kcyBrZXB0IGZyb20gYmVpbmcgZWFjaCBvdGhlcidzIGxlZ2FsIHJlcHJlc2VudGF0aXZlcy4gV2UgYXJlIHNlZWluZyBhIGdheSBwb2xpdGljYWwgYWdlbmRhIGJlY29tZSBzaW5nbGUgaXNzdWUgdG8gZm9jdXMgb24gbWFycmlhZ2UgYW5kIGxlYXZlIGJlaGluZCBtYW55IHZlcnkgc2VyaW91cyBpc3N1ZXMgc3VjaCBhcyBzb2NpYWwsIGVjb25vbWljLCBhbmQgcmFjaWFsIGp1c3RpY2UuCkZvciBUdXJrZXksIENoaW5hIG9mZmVycyB1bmZldHRlcmVkIGVjb25vbWljIGRldmVsb3BtZW50IHRvIHRoZSBUdXJraWMgcmVwdWJsaWNzIGluIGNlbnRyYWwgYXNpYSwgdGhpcyBtYWtlcyBUdXJrZXkgc2FsaXZhdGUgYmVjYXVzZSBUdXJraXNoIHN0YXRlIGlkZW9sb2d5IGlzIGV0aG5vIGNlbnRyaWMgVHVya2lzbSB3aXRoIG5ldyBJc2xhbWljIHVuZGVydG9uZXMuIApJIG5vdCBlbnRpcmVseSBzdXJlIEkgdW5kZXJzdGFuZCB0aGUgZnVsbCBzY29wZS4gCkkgdGhpbmsgaXQgZ2l2ZXMgbWUgYSB3YXkgdG8gYnJlYWsgaXQgdXAsIGdldCB0aGVzZSBndXlzIHJlYWR5Li4gCkFsbCBJJ20gc2F5aW5nIGlzIHRoYXQgIllvdXIgcmVzdWx0cyBtYXkgdmFyeS4iClRoZXJlIHdpbGwgYmUgbW9tZW50cyB3aGVuIHlvdSBtaXNyZWFkIGEgc2l0dWF0aW9uIG9yIHdoZW4gdGhlcmUgYW4gb2J2aW91cyBsYWNrIG9mIGNvbW11bmljYXRpb24gaGFwcGVuaW5nLiAKRGl2aXNpb24gQ29tbWFuZGVyIEJvYiBPJ0hhbGxvcmFuIHRvbGQgQ1AyNCBvbiBGcmlkYXkgbW9ybmluZyB0aGF0IGNyZXdzIGluaXRpYWxseSB0cmllZCB0byBiYXR0bGUgdGhlIGZpcmUgZnJvbSBpbnNpZGUgdGhlIDUsMDAwIHNxdWFyZSBmb290IHN0cnVjdHVyZSBidXQgaGFkIHRvIHJldHJlYXQgdG8gYSBkZWZlbnNpdmUgcG9zaXRpb24gd2hlbiB0aGUgZmxvb3JzIHdlcmUgY29tcHJvbWlzZWQgYW5kICJzdHVmZiBzdGFydGVkIGZhbGxpbmcgZG93biBhcm91bmQgdGhlbS4iCkl0IHdvcmtlZCAuIApNb3VudGFpbnM6ICBPbmUgb2YgdGhlIG1vc3Qga25vd24gYXR0cmFjdGlvbnMgb2YgdGhlIE5lcGFsIGlzIHRoZSBtYWplc3RpYyByYW5nZSBvZiBIaW1hbGF5YW4gTW91bnRhaW5zLiBUb3VyaXN0cyBmcm9tIHdvcmxkIG92ZXIgY29tZSB0byBleHBsb3JlIG1vdW50YWluZWVyaW5nLCB0cmVra2luZywgbW91bnRhaW4gYmlraW5nIGFuZCBoaWtpbmcuIFRoZSB3b3JsZCdzIGhpZ2hlc3QgcGVhayBNb3VudCBFdmVyZXN0IGFsc28gYmVsb25ncyB0byB0aGlzIGJsaXNzZnVsIGxhbmQuCkxpa2UgTXMuIEJ1cmFuYSwgSSB0b28gaGF2ZSBmb3VuZCBpbnNwaXJhdGlvbiBhdCBWaWN0b3JpYSBTZWNyZXQgYXMgd2VsbCBhcyBhdCBidXJsZXNxdWUgc2hvd3MgdGhlIHdvcmxkIG92ZXIuIApTdGlsbCwgdGhlIHRyZWF0bWVudHMgYW5kIHN0YXRlbWVudHMgYXJlbid0IGJhY2tlZCBieSB0aGUgRm9vZCBhbmQgRHJ1ZyBBZG1pbmlzdHJhdGlvbi4KQWxtb3N0IGV2ZXJ5IHBva2VyIHJvb21zIGlzIG9mZmVyaW5nIHBva2VyIGZyZWVyb2xscy4gQSBGcmVlcm9sbCBpcyBhIEZyZWUgUG9rZXIgVG91cm5hbW5ldCB3aXRoIGEgc3BvbnNvcmVkIHByaXplIHBvb2wuIApUcnVtcCdzIGF0dG9ybmV5LCBSdWR5IEdpdWxpYW5pLCB0b2xkIHJlcG9ydGVycyBXZWRuZXNkYXkgdGhhdCB0aGUgUHJlc2lkZW50J3MgbGVnYWwgdGVhbSBoYXMgcmVjZWl2ZWQgYSByZXNwb25zZSBmcm9tIE11ZWxsZXIncyB0ZWFtIHJlZ2FyZGluZyB0aGVpciBjb3VudGVyIHByb3Bvc2FsIGZvciBhIHBvdGVudGlhbCBpbnRlcnZpZXcgd2l0aCB0aGUgUHJlc2lkZW50LgpUaGUgcHJpbmNpcGxlIGNyZWF0ZXMgcGFyYWRveGVzIHRob3VnaC4gV2hhdCBpZiBJIHNlbmQgYSBib21iIGJhY2sgaW4gdGltZSB0aGF0IGRlc3Ryb3lzIGFsbCBvZiBtYW5raW5kLiBBY2NvcmRpbmcgdG8gaXQgbWFua2luZCB3YXMgYWxyZWFkeSBraWxsZWQgYW5kIGJlY2F1c2Ugb2YgdGhhdCBJIGNvdWxkbiBoYXZlIGRvbmUgaXQuIFRoYXQgaXMgd2h5IGRpZmZlcmVudCB0aW1lbGluZXMgbWFrZSBtb3JlIHNlbnNlLiBVbHRpbWF0ZWx5IGNoYW5naW5nIHRoZSBwYXN0IGNyZWF0ZXMgYSBkaWZmZXJlbnQgdGltZWxpbmUgZnJvbSBvdXJzIHdoaWNoIGlzIHdoeSBjaGFuZ2luZyB0aGUgcGFzdCBtYWtlcyBubyBzZW5zZSAoYXQgbGVhc3QgdW50aWwgeW91IHBoeXNpY2FsbHkgZ28gYmFjayBpbiB0aW1lIHlvdXJzZWxmLCBjaGFuZ2Ugd2hhdGV2ZXIgeW91IHdhbnRlZCB0byBhbmQgdGhlbiBnbyBiYWNrIHRvIHRoZSBmdXR1cmUgd2hpY2ggd291bGQgYmUgdGhlIG5ldyB0aW1lbGluZSBhbmQgd2F5IGRpZmZlcmVudCB0byB0aGUgb25lIHlvdSBoYXZlIGJlZW4gaW4gYmVmb3JlLiAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpCaWcgR292ZXJubWVudApOYUdhQmEgIDM3IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KV2Fsa2luZyB0aHJvdWdoIHRoZSBjb25jb3Vyc2UgYXQgUGljY2FkaWxseSBTdGF0aW9uLCB0aGUgYXdmdWwgcmVhbGl0eSBvZiB0aGUgc2l0dWF0aW9uIGhpdCBtZS4KVGhlbiBmaXZlIGNvbW11bml0eSBjYXJkcyBmb2xsb3cgd2l0aCBiZXR0aW5nIGFmdGVyIHRoZSBmbG9wLCB0aGUgdHVybiwgYW5kIHRoZSByaXZlci4gCkRvIHlvdSBzaXQgdGhlcmUgYXMgYSBqb3VybmFsaXN0IGFuZCBzYXksIEknZCB3cml0ZSBhYm91dCBtZT8KUG91bmRsYW5kIHNhaWQgdGhlIGRvdWJsZSBlbnRlbmRyZXMgdXNlZCB0aHJvdWdob3V0IHRoZSBjYW1wYWlnbiB3b3VsZCBub3QgaGF2ZSBiZWVuIHVuZGVyc3Rvb2QgYnkgY2hpbGRyZW4sIGFkZGluZyB0aGF0IFR3aXR0ZXIgYW5kIEZhY2Vib29rIGhhZCBwb2xpY2llcyBwcmV2ZW50aW5nIHVuZGVyIDEzcyBmcm9tIGNyZWF0aW5nIGFjY291bnRzIHdpdGggdGhlbS4KS25vd2luZyB3aGljaCByZWNlaXB0cyB0byBoYW5kbGUsIGFuZCBob3cgdG8gaGFuZGxlIHRoZW0gaW4gYSB0aW1lIGVmZmVjdGl2ZSBtYW5uZXIgaXMgZXh0cmVtZWx5IGltcG9ydGFudCB0byB0aGUgb3ZlcmFsbCBwcm9kdWN0aXZpdHkgYW5kIHN1Y2Nlc3Mgb2YgeW91ciBDbGF5IFBva2VyIENoaXBzIGJ1c2luZXNzLiAKTWF0ZXJpYWwgZnJvbSB0aGUgR2xvYmUncyBKdWxpYW4gQmVuYm93IGFuZCBNaWNoYWVsIFdoaXRtZXIgd2FzIHVzZWQgaW4gdGhpcyByZXBvcnQuCkxhc3RseSBpbiB0aGlzIHNob3J0IHBvc3QgSSBpbmNsdWRlIGFuIGludGVyZXN0aW5nIHZpZXcgb2YgdGhlIGZ1dHVyZSwgZm91bmQgYXQgdGhlIGVuZCBvZiBhbiBhcHByZWNpYXRpb24gb2YgSm9obiBSb2VibGluZyBpbiBhIHZvbHVtZSBvZiB0aGUgSm91cm5hbCBvZiB0aGUgRnJhbmtsaW4gSW5zdGl0dXRlIGZvciAxODY3LiBJdCBpcyBhIHN0YXRlbWVudCBvbiB0aGUgcGxhbnMgZm9yIGJ1aWxkaW5nIHRoZSBCcm9va2x5biBCcmlkZ2UgYXQgdGVoIHRpbWUgaXQgd2FzIHN0aWxsIHRoZSAiTmV3IFlvcmsgYW5kIEJyb29rbHluIEJyaWRnZSIsIGFuZCB0aGVuIHRoZSAiRWFzdCBSaXZlciBCcmlkZ2UiLCB0aG91Z2ggIkJyb29rbHluIEJyaWRnZSIgd2FzIGFsc28gdXNlZCwgdGhlIG9mZmljaWFsIGRlc2lnbmF0aW9uIG9mIHRoYXQgZmluYWwgbmFtZSBjb21pbmcgaW4gMTkxNS4gCkFuZCBvZiBjb3Vyc2UgaXQgaXMgdGhlIG1vZGUgb2YgdHJhbnNwb3J0YXRpb24gYW5kIHRoZSBjcmVhdGlvbiBvZiBwYXJjZWwgcG9zdCB0aGF0IHdvdWxkIGFkZCBvcmRlcnMgb2YgbWFnbml0dWRlcyBvZiBtaWxlcyB0byBjYXRlZ29yeSBmb3IgZXhhbXBsZSB5b3UgY291bGQgcmVjZWl2ZSBhIGJvb2sgZnJvbSBMb25kb24gYW5kIHNlbmQgaXQgb3V0IHRvIFRva3lvIHdoZXJlIGl0IG1pZ2h0IGJlIHNlbnQgdG8gV2VsbGluZ3RvbiBhbGwgaW4gdHdvIHdlZWtzLiAKRW1wbG95ZWVzIG9mIHRoZSBUcmFuc3BvcnRhdGlvbiBTZWN1cml0eSBBZG1pbmlzdHJhdGlvbiBhcmUgZXhwZWN0ZWQgdG8gd29yayB3aXRob3V0IHBheSBkdXJpbmcgdGhlIHNodXRkb3duIGJlY2F1c2UgdGhlaXIgam9icyBhcmUgY29uc2lkZXJlZCBlc3NlbnRpYWwuCkkgYWx3YXlzIHRob3VnaCBvZiBpdCBhcyB0aGV5IGhhdmUgb3Bwb3NpdGUgaXNzdWVzLiAKSSBkaWRuIHNheSBpdCB3YXMgYSByaWdodCB0aGluZyB0byBkbyBidXQgaXQgbmVlZHMgdG8gYmUgbG9va2VkIGF0IG9iamVjdGl2ZWx5LiBJIG5vdCBzYXlpbmcgaGUgbmVlZHMgdG8gYmUgYWJzb2x2ZWQgb2YgYWxsIGJsYW1lLiAKSXRzIGhhcmQgdG8gZ2V0IGF3YXkgZnJvbSBpdCB3aGVyZSBpIGxpdmUuIE15IG5laWdoYm9yaG9vZCBpcyBmdWxsIG9mIGFkZGljdHMsIHdoaXRlIHRyYXNoLCBhbmQgYmxhY2sgZHVkZXMgd2VhcmluZyB3aWZlIGJlYXRlcnMuIApJIGFtIGFsc28gYSBjZXJ0aWZpZWQgbWVkaWNhbCBtYXNzYWdlIHByYWN0aXRpb25lciBhbmQgdGhhdCBpcyBtYWlubHkganVzdCByaXBwaW5nIG11c2NsZS9jb25uZWN0aXZlIHRpc3N1ZS4gTW9zdCBtYXNzYWdlIHRoZXJhcGlzdCBpbnNpc3Qgb24gd2FybWluZyB0aGUgY2xpZW50cyBtdXNjbGVzIGJlZm9yZSB3b3JraW5nIGRlZXBlciBhbmQgSSBhZ3JlZSBpbiBzb21lIGNhc2VzLiBCdXQgaXQgaXMgYWxzbyBuZWNlc3NhcnkgdG8gcmlwIHRpc3N1ZSBvbmNlIGFuZCBhIHdoaWxlIHRvIHJlYWxseSByZXNvbHZlIGEgc29mdCB0aXNzdWUgcHJvYmxlbS5Ib3Qgc3RvbmUgaXMgZ29vZCBmb3Igd2FybWluZyB1cCBtdXNjbGVzIGFuZCByZWxheGF0aW9uLiAKTm90IGtub3dpbmcgdGhlIG9kZHMgb2YgdGhlIGJlc3QgcGxheSBpbiB0aGlzIHNpdHVhdGlvbiwgaGUgZGVjaWRlcyB0byBnbyAiYWxsIGluIiBhbmQgcmlzayBldmVyeXRoaW5nLiBIZSBwdXNoZXMgaGlzIGNoaXBzIHRvIHRoZSBjZW50ZXIgb2YgdGhlIHRhYmxlIGFuZCB0YWtlcyBhIGRlZXAgYnJlYXRoLiAKSSBhbHdheXMgdGhvdWdodCB0aGF0IHRoZSBsaW5lICJJIGZvcmdvdCBJIHB1dCBzdHVmZiBpbiB0aGVzZSBwb2NrZXRzISIgUGxheWluZyBvdmVyIHRoYXQgd2lkZSBkaXN0YW50IHNob3Qgc2VlbWVkIHNob2Vob3JuZWQgaW4sIGFuZCBJIGFzc3VtZWQgc29tZW9uZSBoYWQgcGlja2VkIHVwIG9uIHRoZSBjb250aW51aXR5IGVycm9yIGFuZCB0aGV5IGdvdCBKb2RpZSB0byByZWNvcmQgdGhhdCBsaW5lIGFmdGVyd2FyZHMgdG8gZml4IGl0LiAKRWFjaCBvZiB0aGUgbmluZSBwbGF5ZXJzIHdobyBtYWRlIGl0IHRvIHRoZSBmaW5hbCB0YWJsZSB3YXMgZ3VhcmFudGVlZCBhdCBsZWFzdCAkMSBtaWxsaW9uLgpBbmQgd2hlbnRoZXkgYXJlLC4gSXQgc2hvd3MgYWxsIHRoZSBwbGF5ZXJzIGhhbmRzLiAKTGFkeSBHYUdhKSwgQmlnIEdpcmxOb3cgKGZlYXQuIApCZWNhdXNlIHRoZSBtaWdyYW50cywgbXVjaCBsaWtlIG1hbnkgd2hvIGxpdmUgaW4gdGhlIEFtZXJpY2FuIHNvdXRod2VzdCwgYXJlIGRlc2NlbmRhbnRzIG9mIFNwYW5pc2ggY29sb25pYWwgc3ViamVjdHMgYW5kIGFzIHN1Y2ggYXMgaGF2ZSB0aGUgcmlnaHQgb2YgbW92ZW1lbnQgb24gdGhlc2UgZm9ybWVyIFNwYW5pc2ggY29sb25pYWwgbGFuZHMuIExldCBkcm9wIHRoZSBwcmV0ZW5zZSBvZiAiaHVtYW4gcmlnaHRzIiBhbmQgIm1vcmFsaXR5Ii4gVGhvc2Ugb3RoZXIgYXJndW1lbnRzIGFyZSBidWxsc2hpdC4gCldoaWNoIGlzIGluc2FuZSwgYmVjYXVzZSBsaXRlcmFsbHkgYW55b25lIHdobyB3b3JrZWQgYW55IHNvcnQgb2Ygc2VydmljZSBpbmR1c3RyeSBrbm93cyB0aGF0IGN1c3RvbWVycyBhcmUgZmlja2xlIG1pbmRlZCBwZXR0eSBiZWFzdHMgd2hvIGNhbm5vdCBiZSByZWxpZWQgdXBvbiB0byBldmVuIHByb2Nlc3MgdGhlIHdvcmRzIGNvbWluZyBvdXQgb2YgdGhlaXIgb3duIG1vdXRoLCBsZXQgYWxvbmUgdGhpbmsga2luZGx5IG9uIGEgc3RyYW5nZXIuCkl0IGlzIGFsc28gdGhlIGJlZ2lubmluZyBvZiB0aGUgaGlzdG9yaWMgcGVyaW9kIG9mIGNsYXNzaWNhbCBhbnRpcXVpdHkuIApJIHdvbiBjYWxsIGFueW9uZSBvdXQgc3BlY2lmaWNhbGx5LCBidXQgSSBrbm93IG9uZSBvZiB5b3Ugd2FzIGV2ZW4gZ2l2ZW4gdGhlIG9wdGlvbiB0byBiZSB1bmJhbm5lZCBmcm9tIGEgc3ViIGlmIHlvdSBhZ3JlZWQgdG8gc3RvcCBoYXJhc3NpbmcgcGVvcGxlIGJ1dCBvdXRyaWdodCByZWZ1c2VkIHRvIGRvIHNvLi4gCkplIGNyb2lzIHF1J2lsIHkgYSB0b3V0IHNpbXBsZW1lbnQgdW4gdnJhaSBwcm9ibG1lIGF2ZWMgY2V0dGUgZW5zZWlnbmUgcXVpIHRhaXQgcG91cnRhbnQgdW5lIHRycyBib25uZSByZnJlbmNlIGR1IGxvdyBjb3N0IGlsIHkgYSBlbmNvcmUgcXVlbHF1ZXMgYW5uZXMuIExlIGxlYWRlciBwcmljZSBkZSBsYSBydWUgY2xpZ25hbmNvdXJ0IHByZW5kIGxlIG1tZSBjaGVtaW4uIElsIHRhaXQgdHJzIGJpZW4gdGVudSwgbWFpcyBsYSBzaXR1YXRpb24gcydlc3QgZGdyYWRlIGRlcHVpcyAxYW4gZXQgZGVtaSBlbnZpcm9uLCBmcnVpdHMgZXQgbGd1bWVzIGVuIG1hdXZhaXMgdGF0LCBwcm9kdWl0cyBwcmltcyBlbiByYXlvbiBkZSB0ZW1wcyBlbiB0ZW1wcywgbWF1dmFpcyBlbnRyZXRpZW4uIEplIHBlbnNlIHF1ZSBjJ2VzdCB1biBwcm9ibG1lIHVuaXF1ZW1lbnQgZGUgZGlyZWN0aW9uIHJnaW9uYWxlLCBqZSBuJ2FpIGphbWFpcyB2dSByaWVuIGRlIHRlbCBlbiBwcm92aW5jZS4KUG9saWNlOiBXZXN0cG9ydCBtYW4gcmVjZWl2ZWQgZHJ1Z3MgYnkgbWFpbFBvbGljZTogV2VzdHBvcnQgbWFuIHJlY2VpdmVkIGRydWdzIGJ5IG1haWxVcGRhdGVkOiBGcmlkYXksIE1hcmNoIDggMjAxOSA1OjEwIFBNIEVTVDIwMTkgMDMgMDggMjI6MTA6MTYgR01UCkxvbGl0YSBwb3JuIGhvd2V2ZXIsIGRvZXNuIGhhdmUgdGhhdC5GcmFua2x5IGl0IGRpc3R1cmJpbmdseSBjb21tb25wbGFjZS4gRnJvbSBldmVyeW9uZSBmYXZvcml0ZSBudW1iZXJzIHNpdGUsIHRoZXJlIDI0NDAvMTAzNDMgcGFnZXMgdGhhdCBhcmUgbG9saXRhIGNvbnRlbnQsIHRoYXQgbmVhcmx5IDI0JS4gRm9yIFNob3RhY29uIGl0IGFib3V0IDEzJS4gClRoaXMgd2FzIGEgbmV3IGZyb250aWVyIGluIEFJIHRoYXQgaGFkbid0IGJlZW4gYnVpbHQgeWV0LCBhbmQgd2Ugd2VyZSBidWlsZGluZyBpdC4uIApJIHdvcmsgaW4gYSBob3NwaXRhbCwgbWFrZSBpdCB2ZXJ5IGNsZWFyIHRvIGhvc3BpdGFsIHN0YWZmIHRoYXQgRkRIIGlzIHRoZSBPTkxZIG9uZSB0byBjb21lIGluIHRoZSBsYWJvciByb29tIGFuZCB0aGF0IHlvdXIgbW9tIG1heSB0cnkuIFRoZXkgY2FuIGJlIHJlYWR5ICh3aXRoIGEgd2FybmluZyB0byBzZWN1cml0eSBqdXN0IGluIGNhc2UgaXQgZ2V0cyB1Z2x5KS4gCk1vc3Qgc3Ryb25nIGRyYXdpbmcgaGFuZHMgbGlrZSBmbHVzaCBkcmF3cyB3aWxsIHN0aWxsIGNhbGwgdGhlIHJhaXNlIHRoZW4gbGVhZCBvdXQgcml2ZXIgaWYgdGhleSBtaXNzLCB0aGVyZSBhcmUgc29tZSBoYW5kcyB0aGF0IHBpY2tlZCB1cCBlcXVpdHkgbGlrZSBLMTAgb3IgOTcgKHdoaWNoIGkgZ3Vlc3MgeW91IGhhdmUgc29tZSBmb2xkIGVxdWl0eSBhZ2FpbnN0IHdoZW4geW91IHJhaXNlKSwgdGhlbiA5IDEwIG1hZGUgdGhlIG51dHMuIApTaGUgZGlkIG5vdCBjb21tZW50IG9uIHRoZSBjaGFyZ2VzIG9yIHRha2UgcXVlc3Rpb25zLiAKVGhpcyBtb3ZlbWVudCBzd2FwLCBob3dldmVyIGhhcyByZWtpbmRsZWQgbXkgbG92ZSBmb3IgdGhlIFNLWDAwNyEuIApTdGF5aW5nIGNsb3NlOiBUYXlsb3Igd2F0Y2hlZCBhcyBoaXMgZ2lybGZyaWVuZCBjaGF0dGVkIHdpdGggc29tZSBwYWxzIGJ5IHRoZSBwb29sCkkgd291bGQgZGVmaW5pdGVseSBwbGF5IGFuIHVucmFrZWQsIHRha2luZyB0dXJucyB0byBiZSB0aGUgZGVhbGVyIEJKIGdhbWUgd2l0aCBmcmllbmRzIHdobyBwcm9iYWJseSBoYXZlbiBzdHVkaWVkIHRoZSBzdHJhdGVneS4gClRoaXMgd291bGQgbWFrZSBoZWFsdGhjYXJlIGluc2FuZWx5IGV4cGVuc2l2ZSBpZiBhbWVyaWNhIHN3aXRjaGVzIHRvIGEgc2luZ2xlIHBheWVyIHN5c3RlbSBhbmQgdGhlIFVTIGNvdWxkIHZlcnkgd2VsbCByZWd1bGF0ZSB0aGUgY29zdCBvZiBoZWFsdGhjYXJlIGJ1dCBoZWFsdGhjYXJlIGludGVyZXN0IGdyb3VwcyB3b3VsZCBsb2JieSB0byBrZWVwIHRoZSBwcm9maXQgbWFyZ2lucyBzbyBhIHVuaXZlcnNhbCBoZWFsdGhjYXJlIHN5c3RlbSB3b3VsZCBzdGF5IGV4dHJlbWVseSBleHBlbnNpdmUuIEhlYWx0aGNhcmUgY29zdHMgYXJlIGFsc28gZHJpdmVuIGhpZ2hlciBiZWNhdXNlIHRoZSBBbWVyaWNhbiBwb3B1bGFjZSBpcyB2ZXJ5IHVuaGVhbHRoeSBhbmQgdGhlIGNvc3QgdG8gdGFrZSBjYXJlIG9mIGV2ZXJ5b25lIHdvdWxkIGJlIGFzdHJvbm9taWNhbC4gVGhlIGhlYWx0aCBpbnN1cmFuY2UgaW5kdXN0cnkgaXMgYWxzbyBub3cgdG9vIGJpZyB0byB0YWtlIGRvd24uIApXaGF0IEkgbG92ZWQ6IEkgbG92ZSBhbGwgb2YgdGhvc2UgbW9kYWxpdGllcyBhbG9uZSwgYW5kIHB1dHRpbmcgdGhlbSB0b2dldGhlciB3b3JrZWQgc3VycHJpc2luZ2x5IHdlbGwuIFNvcnQgb2YgbGlrZSBhIGdyYWhhbSBjcmFja2VyLCBjaG9jb2xhdGUgYW5kIG1hcnNobWFsbG93IGFsbCBhcmUgZGVsaWNpb3VzIGluZGl2aWR1YWxseSwgYnV0IHdoZW4geW91IGNvbWJpbmUgdGhlbSwgeW91IGdldCB0aGUgYmVzdCBjYW1wZmlyZSB0cmVhdCBldmVyLgpLZWl0aCBoYXMgYWxzbyBoZWxwZWQgYWR2YW5jZSBsYXJnZXIgZW50ZXJwcmlzZSBzYWxlcyBvcmdhbml6YXRpb25zIHN1Y2ggYXMgWWFob28gYW5kIE9yYWNsZS4gS2VpdGggaG9sZHMgYSBCQSBmcm9tIE5ldyBZb3JrIFVuaXZlcnNpdHkuLiAKIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTYgaG91cnMgYWdvQ2hyaXN0aWFuIGJpZ290cnkgZG9lc24gY29tZSBmcm9tIHRoZSBiaWJsZSwgaXQgY29tZXMgZnJvbSBDaHJpc3RpYW5zLiBGb3IgZXhhbXBsZSwgQ2hyaXN0aWFuIGJpZ290cnkgYWdhaW5zdCB0cmFuc2dlbmRlcnMgZG9lc24gY29tZSBmcm9tIHRoZSBiaWJsZS4gVGhlIGJpYmxlIGRvZXNuIGV2ZW4gc2F5IGFueXRoaW5nIGFnYWluc3QgcGVkb3BoaWxpYS4gSW4gZmFjdCwgaXQgc2F5cyBpbiBOdW1iZXJzIDMxOjE3IDE4ICAgTm93IHRoZXJlZm9yZSBraWxsIGV2ZXJ5IG1hbGUgYW1vbmcgdGhlIGxpdHRsZSBvbmVzLCBhbmQga2lsbCBldmVyeSB3b21hbiB0aGF0IGhhdGgga25vd24gbWFuIGJ5IGx5aW5nIHdpdGggaGltLiAKWW91ciBzZW5pb3IgcGVvcGxlIGlzIG5vdCB0aGUgc29sdXRpb24gdG8gbm90IGdldHRpbmcgdGVudXJlLiAKUGV0ZXJib3JvdWdoIHRlZW4gc2NvcmVzIGludml0ZSB0byByb3lhbCB3ZWRkaW5nIGZvciBjaGFyaXR5IHdvcmsKTWFudWVsLCBBbGV4YW5kZXIgUm9kbnlhbnNreS4gCiJDZW50cmlzdCBpcyBqdXN0IGFub3RoZXIgd29yZCBmb3IgdW5pbmZvcm1lZCBub24gdm90ZXIuIiAgIG9rYXkgZ28gZnVjayB5b3Vyc2VsZi4gSSBnZXQgaXQsIHlvdSB3YW50IHVzIHRvIHBpY2sgYSBzaWRlIHNvIHRoYXQgd2UgZG9uIGhhdmUgVHJ1bXAgZ2V0dGluZyBlbGVjdGVkIGFzIGEgYmkgcHJvZHVjdCBvZiBwcm9ncmVzc2l2ZXMgaGVkZ2luZyBhZ2FpbnN0IGJvdGggcGFydGllcy4gSSBnZXQgaXQsIHdlIEFMTCBmdWNraW5nIGdldCBpdCAgIHlvdSBhcmVuIG1vcmUgZW5saWdodGVuZWQgdGhhbiBjZW50cmlzdHMgYmVjYXVzZSBvZiB0aGUgaWRlbnRpZmljYXRpb24gb2YgdGhpcyBwcm9ibGVtLgpTaGVpa2ggUmFzaGlkIHdhcyBoZWFyZCBzYXlpbmcgYmVmb3JlIFRWIGNhbWVyYXMgdGhhdCB0aGV5IHdvdWxkIG5vdCB0YWxrIHRvIHRoZSBnb3Zlcm5tZW50IHVudGlsICJ0aGUgZG9nIHdhcyB0YWtlbiBvdXQgb2YgdGhlIHdlbGwuIiBJbXJhbiBLaGFuIGNhbGxlZCBLaHVyc2hlZWQgU2hhaCwgd2hvIGlzIGtub3duIHRvIGJlIHRoZSBtb3N0IHBvbGl0ZSBsZWFkZXIgb2YgdGhlIG9wcG9zaXRpb24gZXZlciwgcGVyc29uYWwgc2VjcmV0YXJ5IG9mIE5hd2F6IFNoYXJpZi4gSW1yYW4gaGFzIGludHJvZHVjZWQgYSB3aG9sZSBuZXcgbGV4aWNvbiBvZiBwb2xpdGljYWwgdm9jYWJ1bGFyeSBjYWxsaW5nIHBlb3BsZSAnT2F5IHRoaXMgT2FheSB0aGF0Jy4gCklUIFByb2N1cmVtZW50IGluIHRvZGF5J3MgbWFya2V0cGxhY2UKTHVyY2hlciB3aG8gd2VyZSB2ZXJ5IGtpbmQgYW5kIGhlbHBmdWwgdG8gbWUgbGFzdCB3ZWVrLiAKTm90IGV2ZW4gc3RpZmYuIApWb3VzIGRtb250cmV6IGRhbnMgdm90cmUgbGl2cmUsIG5vbiBzZXVsZW1lbnQgbCdpbmVmZmljYWNpdCBkZXMgb2xpZW5uZXMsIG1haXMgdm91cyBhbGxleiBwbHVzIGxvaW4gZW4gZXN0aW1hbnQgcXUnZWxsZXMgc29udCBtbWUgbnVpc2libGVzIGV0IHF1J2VsbGVzIG5lIHZpc2VudCBxdScgc2VydmlyIHF1ZWxxdWVzIGludHJ0cyBmaW5hbmNpZXJzCkkgcHVsbGVkIGZyb20gdGhlIGN1cnJlbnQgVVMgbGF3IGNvZGUuIHlvdXIgc291cmNlICh3aGljaCB5b3UgZGlkbnQgcmVhbGx5IGdpdmUpIGlzIGZyb20gdGhlIDE3OTAgYW5kIHRoZSBsYXcgSSBjaXRlZCB3YXMgbW9kaWZpZWQgaW4gMTk1Ni4gTm93IEkgZG9udCBjbGFpbSB0byBiZSBhIGxlZ2FsIGV4cGVydCwgYnV0IEkgZG9udCB0aGluayBpdHMgdW5yZWFzb25hYmxlIHRvIHNheSB0aGF0IHRoZSBsYXcgaGFzIGJlZW4gbW9kaWZpZWQgc2luY2UgdGhlIDE3OTAgVGVsbCBtZSwgd2hpY2ggc291cmNlIGlzIG1vcmUgY29ycmVjdD8gSG93IGFtIEkgd3JvbmcgZm9yIGNpdGluZyBmcm9tIGN1cnJlbnQgVVMgbGF3PyBCZWNhdXNlIHBvaW50aW5nIHRvIGEgYmlsbCB3cml0dGVuIHdoZW4gdGhlIFVTIGdvdmVybm1lbnQgd2FzIGxpdGVyYWxseSB5b3VuZ2VyIHRoYXQgSSBhbSBpc250IHZlcnkgY29udmluY2luZy4KV2UgcHV0IHRoZXNlIHBlb3BsZSB0aGVyZSwgaW4gcG9zaXRpb25zIG9mIHB1YmxpYyB0cnVzdCwgaW4gY29udHJvbCBvZiBwdWJsaWMgc2FmZXR5LCBpbiBjaGFyZ2Ugb2YgdGhlIHB1YmxpYyBwdXJzZS4gClRoZSBoYXJkIHBhcnQgaGFzIGJlZW4gZWR1Y2F0aW5nIHBlb3BsZSwgc2hlIHNheXMuIApUaGUgcGlwZXIgbGVhZGluZyB1cyB0byByZWFzb24gY291bGQgYmUgYSByZWxpZ2lvdXMgcmVmZXJlbmNlLiBJbiB0aGUgQmlibGUgaXQgc2F5cyBhdCB0aGUgZW5kIG9mIHRoZSB3b3JsZCB0aGUgbXVsdGl0dWRlcyB3aWxsIHNpbmcgYW5kIGdvZCB3aWxsIGdhdGhlciBoaXMgY2hpbGRyZW4gdG8gZ28gdG8gaGVhdmVuLiAKSW4gdGhlIHN0YXRlIG9mIENvbG9yYWRvLCA1MDAgaG91cnMgYXJlIHJlcXVpcmVkIGZvciBjZXJ0aWZpY2F0aW9uIGFuZCByZWdpc3RyYXRpb24gYXMgYSBtYXNzYWdlIHRoZXJhcGlzdC4gVGhlc2UgcmVndWxhdGlvbnMgYXJlIG5ldyB0byB0aGUgbWFzc2FnZSB0aGVyYXB5IGZpZWxkIGluIENvbG9yYWRvIGFzIG9mIGxhc3QgeWVhci4gCk51bWVyb3VzIGNvbXBhbmllcyB0aGF0IHdhbnQgdG8gb3JnYW5pemUgYSBtZW1vcmFibGUgcGFydHkgZm9yIHRoZWlyIGVtcGxveWVlcywgYnVzaW5lc3NlcyB0aGF0IHdhbnQgdG8gcHJlcGFyZSBhIHNwZWN0YWN1bGFyIHByb2R1Y3QgbGF1bmNoIGFuZCBpbmRpdmlkdWFscyB3aG8gcGxhbiBvbiB0aHJvd2luZyBhIGhvbWUgcGFydHkgdGhhdCBhbGwgdGhlaXIgZnJpZW5kcyB3aWxsIHJlbWVtYmVyIGNob29zZSB0aGUgY2FzaW5vIHRoZW1lLCBiZWluZyBhYnNvbHV0ZWx5IHN1cmUgdGhhdCB0aGlzIGlzIHNvbWV0aGluZyBhbGwgdGhlaXIgZ3Vlc3RzIHdpbGwgbG92ZS4gSWYgdGhlIGlkZWEgb2YgaG9zdGluZyBhIGNhc2lubyB0aGVtZWQgcGFydHkgc291bmRzIGFwcGVhbGluZyBhbmQgeW91IHdhbnQgdG8gbWFrZSBhbGwgdGhlIG5lY2Vzc2FyeSBhcnJhbmdlbWVudHMgYXMgc29vbiBhcyBwb3NzaWJsZSwgeW91IHNob3VsZCBzdGFydCBieSByZW50aW5nIHRoZSBuZWNlc3NhcnkgY2FzaW5vIGVxdWlwbWVudC4gRm9yIHRoZXNlIHB1cnBvc2VzLCB5b3Ugc2hvdWxkIHJlc29ydCB0byB0aGUgcHJvZmVzc2lvbmFsIHNlcnZpY2VzIG9mIGEgcmVwdXRlZCBwcm92aWRlciBvZiBjYXNpbm8gcGFydHkgcmVudGFscy4KQW5vdGhlciBpbXBvcnRhbnQgY29uY2VwdCBpcyB0aGF0IHRoaXMgaXMgYSBwcml2YXRlIFNFIEFzaWEgZ2FtZSBhbmQgaWYgeW91IGdpdmUgYWN0aW9uLCB0aGVuIHlvdSBnZXQgYWN0aW9uLiBJIHdvdWxkIGJlIHN1cnByaXNlZCBpZiBhbnkgdHJvbGxzIGluIHRoaXMgcG9zdCBoYXMgaGFkIGEgMTAwMGJiIHN0YWNrIGF0IGFueSBwb2ludCwgbGV0IGFsb25lIHdpbGxpbmcgdG8gcGxheSBhIGJpZyBwb3Qgd2l0aCBpdC4gCkkndmUgZXhwbGFpbmVkIGl0IHRvIHlvdSB0aW1lIGFuZCB0aW1lIGFnYWluIGJ1dCB5b3VyIHNpbGx5IHBhcmFsZWdhbCBicmFpbiBjYW4ndCB1bmRlcnN0YW5kLiBUaGUgUnVzc2lhbiBGZWRlcmF0aW9uIGhhc24ndCBicm9rZW4gYW55IEFtZXJpY2FuIGxhd3MgdGhhdCB3ZSBrbm93IG9mLiAKVGhlc2UgbGFyZ2UgYmlyZHMgaGF2ZSBwbHVtYWdlIGluIHZhcmlvdXMgc2hhZGVzIG9mIGJyb3duIHRoYXQgZW5hYmxlIHRoZW0gdG8gYmUgY2Ftb3VmbGFnZWQgaW4gdHJlZXMgb3IgZXZlbiBvbiB3b29kZW4gcG9zdHMgc28gdGhhdCB0aGV5IGNhbiBzd29vcCBkb3duIG9uIHByZXkgYW5kIHRha2UgdGhlbSBieSBzdXJwcmlzZS4gVGhlcmUgaXMgY29uc2lkZXJhYmxlIHZhcmlhdGlvbiBpbiB0aGUgcGx1bWFnZSBvZiBDb21tb24gQnV6emFyZHMgICBzb21lIG1heSBiZSBwcmVkb21pbmFudGx5IHBhbGUgY3JlYW15IGJyb3duIHdoaWxlIG90aGVycyBtYXkgYmUgdmVyeSBkYXJrIGJyb3duLiAKRXZlbiBpZiB0aGV5IHdlcmUgdG8gcnVuIGl0IGluIHRoZSBWRlcgaGFsbHMsIHRoZXJlJ3Mgc3RpbGwgb3ZlcmhlYWQuIApJdCB3YXMgcmVjZW50bHkgYW5ub3VuY2VkIHRoYXQgUGFwYXJhenppIHdvdWxkIGJlIHJlbGVhc2VkIGFzIExhZHkgR2FHYSdzIG5leHQgc2luZ2xlIGluIElyZWxhbmQuIExvdmVHYW1lIHdhcyBpbml0aWFsbHkgcGxhbm5lZCB0byBiZSB0aGUgM3JkIHNpbmdsZSBmcm9tIHRoZSBhbGJ1bSBidXQgZHVlIHRvIEF1c3RyYWxpYSBiYW5uaW5nIHRoZSBjb250cm92ZXJzaWFsIHZpZGVvIGFuZCBseXJpY3MsIEdhR2EgZGVjaWRlZCB0byBjaGFuZ2UgdGhlIElyaXNoIHNpbmdsZSByZWxlYXNlIHRvIFBhcGFyYXp6aS4uIApJIHdyb3RlIGFib3V0IGhvdyB0aGUgbGF3IHdpbGwgZmluYWxseSBwdXQgYW4gZW5kIHRvIGJhbmtzIG1ha2luZyBodWdlIHByb2ZpdHMgb2ZmIG9mIHN0dWRlbnQgbG9hbnMuIApJIHdvdWxkIHJlY29tbWVuZCB5b3Ugd2FsayBhZ2FpbnN0IHRyYWZmaWMgYW5kIG9uIGEgc2lkZXdhbGsuIEkgd291bGQgbmV2ZXIgd2FudCB0byB3YWxrIHdpdGggdHJhZmZpYywgSSB3YW50IHRvIGF0IGxlYXN0IGhhdmUgYSBjbHVlIHNvbWV0aGluZyBpcyBjb21pbmcuIEJ1dCBpZiB5b3Ugd2VyZSB0byBnZXQgaGl0IGJ5IGEgY2FyIGFuZCB3ZXJlIG9uIHRoZSBpbnNpZGUgb2YgdGhlIGxpbmUgb24gdGhlIHJvYWQsIHlvdSBiZSBhdCBmYXVsdCBmb3IgdGhlIGNvbGxpc2lvbi5JIHdhcyBhbHJlYWR5IG9uIGEgc2NlbmUgb2YgYW4gaW52ZXN0aWdhdGlvbiB3aGVyZSB0aGV5IHdlcmUgZmlndXJpbmcgb3V0IHdoZXJlIHRoZSBpbXBhY3Qgd2FzLCBpdCBkZWNpZGVkIHdobyB3YXMgYXQgZmF1bHQuQWxzbyBubyBoaWdod2F5IHdhbGtpbmcsIG9idmlvdXNseSwgYnV0IHRoYXQgc3RpbGwgZG9lc24gc3RvcCBwZW9wbGUgZnJvbSBkb2luZyBpdCBzb21ldGltZXMuIApBc2lkZSBmcm9tIHlvdXIgcG9zc2libGUgbG9jYXRpb24sIHRoZXJlIGFyZSBvdGhlciBmYWN0b3JzIChub3QgY291bnRpbmcgInJlYWxpc3RpYyIgb25lcywgc2luY2UgVEVTIGlzbiBhbGwgYWJvdXQgcmVhbGlzbSk7IENoYW5jZXMgYXJlIHlvdXIgY2hhcmFjdGVyIHdpbGwgaGF2ZSBzdWZmZXJlZCBpbmp1cmllcyBmcm9tIGJvYXQgc2hyYXBuZWwsIGNhdWdodCBhIERpc2Vhc2UgZnJvbSBpbnRlcmFjdGlvbiB3aXRoIHVuZmFtaWxpYXIgY3JlYXR1cmVzLCBhbmQgYnJva2VuL3J1c3RlZC91c2VsZXNzIGVxdWlwbWVudC4gCkhlIG1hZGUgYSBsb3Qgb2YgZGVhbHMgb24gdGhlIGZvb2Qgc2lkZSBhbmQgaGUgaGFzIGEgcGFzc2lvbiB0byBoZWxwIHRoaXMgYnVzaW5lc3MgZ3Jvdy4gCiJJZiB5b3UgZ2V0IHRoZSBtdXBwZXRzIG91dCB0aGVyZSB0aGF0IHRyeSB0byBoYXZlIGEgZ28gYXQgeW91LCB5b3UgdGhpbmssIGRvIEkgZG8gdGhpcz8gV2FybmUgc2FpZC4gCkEgdGVuIHNlY29uZCBibGluZGZvbGQgZmVsbCwgd2VsbGluZyBmZWFyIGluIGhpcyBjaGVzdCBhcyBoZSwgZmFyIHRvbyBsYXRlLCByZWFsaXplZCB3aGF0IGhlIHNlZW4uc3VwcG9zZWRseWl0c21lICAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ29yL3BldGlvbGVzIGFuZCByL2xlYXZlcyB0aGV5IGFyZSBxdWlldCBuaWNlIGNvbW11bml0aWVzIHdoZXJlIHBlb3BsZSBoZWxwIGVhY2ggb3RoZXIgcXVpdCBvciBjb250YWluIHRoZWlyIGNvbnN1bXB0aW9uIG9mIGNhbm5hYmlzLkkgc3VyZSB0aGVyZSBhcmUgc2ltaWxhciBjb21tdW5pdGllcyBmb3IgcGVvcGxlIHN0cnVnZ2xpbmcgd2l0aCBhbGNvaG9sIGFzIHdlbGwuIApJbiB0aGUgbW92aWUsIFBpZXJyZSBEZWxhY3JvaXgsIChEYW1vbiBXYXlhbnMpaXMgYSBzZWxmIGlkZW50aWZpZWQgTmVncm8gd2hvIGNyZWF0ZXMgYSBtb2Rlcm4gZGF5IG1pbnN0cmVsIHNob3csIGZ1bGwgb2YgQ29vbiBhbmQgSmV6ZWJlbCBjaGFyYWN0ZXJzLCBpbiB0aGUgaG9wZXMgdGhhdCBpdCB3aWxsIGJlIHNvIGJhZCB0aGF0IGhlIGdldCBmaXJlZCBhbmQgYmUgYWJsZSB0byBsZWF2ZSBoaXMgY29udHJhY3Qgd29ya2luZyBmb3Igd2hpdGUgY29ycG9yYXRlIFRWLgpUaGUgY292ZXIgb2YgVGltZSdzIE5vdi4gNSBpc3N1ZSwgb24gbmV3c3N0YW5kcyBGcmlkYXksIGludm9sdmVkIGEgY2FzdCBvZiBodW5kcmVkcyBhbmQgbW9udGhzIG9mIHdvcmssIGFsbCBtYXN0ZXJtaW5kZWQgYnkgdGhlIEZyZW5jaCBhcnRpc3Qgd2hvIGdvZXMgYnkgdGhlIG5hbWUgSlIuIApRdSdlc3QgY2UgcXVlIGwnYWN0aW9uIGRlIGdyY2UgP0wnYWN0aW9uIGRlIGdyY2Ugbidlc3QgcGFzIHRvdXQgIGZhaXQgc3lub255bWUgZGUgbG91YW5nZS4gClN1ZGRlbmx5IGFzIEkgbHlpbmcgdGhlcmUgSSBmZWVsIHdhcm0sIHdldCwgbGlxdWlkIHNxdWlydCBvbnRvIG15IGJhY2sgb3ZlciB0aGUgdG93ZWwgYW5kIG92ZXIgbXkgc2luZ2xldC4gSXQgd2FzIGEgbm8gb2lsIG1hc3NhZ2UsIGFuZCBJIGhhdmUgaGFkIGEgYm95ZnJpZW5kIGZvciB0d28geWVhcnMgaW4gdGhlIHBhc3QsIEkga25vdyB3aGF0IHRoYXQgc3R1ZmYgZmVlbHMgbGlrZSBsYW5kaW5nIGFueXdoZXJlIG9uIG15IGJvZHkuIEkgdGhlbiBoZWFyZCBoaW0gemlwIHVwIGhpcyBwYW50cyBhbmQgYXQgdGhpcyBwb2ludCBpbSBjb21wbGV0ZWx5IGZyb3plbiBhbmQgZGlzZ3VzdGVkIGFuZCBzY2FyZWQgdGhpbmtpbmcgaG93IHZ1bG5lcmFibGUgSSBhbS4gCkEgbG90IG9mIGNhc2lub3MgZ2l2ZSBmcmVlIGJldmVyYWdlcyB0byBwbGF5ZXJzLiBJbiBtYW55IHN0YXRlcyBpdCdzIGlsbGVnYWwgdG8gZ2l2ZSBmcmVlIGFsY29ob2xpYyBiZXZlcmFnZXMgdG8gY2FzaW5vIGN1c3RvbWVycywgc28gY2FzaW5vcyBpbiB0aGVzZSBqdXJpc2RpY3Rpb25zIGNoYXJnZSBmb3IgYWxjb2hvbCBidXQgdXN1YWxseSBnaXZlIGZyZWUgc29mdCBkcmlua3MgYW5kIGNvZmZlZSB0byBwbGF5aW5nIGN1c3RvbWVycy4gClRoZSBnYW1lIGlzIGp1c3QgYXMgZ29vZCBhcyBpIGtuZXcgaXQgd291bGQgYmUuIEJlc3QgcG9pbnQgd2FzIHdoZW4gb25lIG9mIHRoZW0gZ2V0cyBpdCBpbiBvbiBBODQ4MyBhZ2FpbnN0IGEgc2NhbmRpbmF2aWFuIHJlZyB3aG8gaGFzIDQ0LCBDaGluZXNlIGd1eSBoYXMgQTguIExlZ2VuZC4KVGhlIGZpcnN0IGNvbnNpZGVyYXRpb24gbGFyZ2VseSBvdmVybG9va2VkIGlzIHdoZXRoZXIgdGhlcmUgaXMgYSBzdHJ1Y3R1cmFsIHByb2JsZW0uCiJSaXNrIHByb2JhYmlsaXR5IiBkb2VzIG5vdCBxdWl0ZSBtYWtlIHNlbnNlLCBwZXJoYXBzIHlvdSBtZWFuIGp1c3Rob3cgdG8gY2FsY3VsYXRlIHJpc2suIFRoZXJlIGFyZSBtYW55IGZvcm11bGFzIGFuZCBtZXRob2RzLCBhIGxvdG9mIHRoZW0gaGlnaGx5IGNvbXBsZXggbWF0aGVtYXRpY2FsIG1vZGVscy4gUmlzayBjYWxjdWxhdGlvbiBpcyBhbmltcG9ydGFudCBzdWJzZXQgb2YgcG9ydGZvbGlvIHRoZW9yeS4gCkl0IG5lZWRzIHRvIGJlIG1vcmUgdm9jYWwgYW5kIHNoYXJlIGluZm9ybWF0aW9uLiBXZSBqdXN0IGhvcGUgQ2hhdWRocnkgTmlzYXIgc2hhcmVzIGEgY29uY3JldGUgbmF0aW9uYWwgc2VjdXJpdHkgc3RyYXRlZ3kgd2l0aCB1cyB0b2RheS4gSGUgc2hvdWxkIGhhdmUgYXQgbGVhc3QgZXhwbGFpbmVkIHRoZSBzZWNvbmQgYWlyIHN0cmlrZXMgaW4gYSB3ZWVrLiBJZiBoZSBjYW4gZmluZCB0aW1lIHRvIHBsYXkgY3JpY2tldCBtYXRjaGVzIGhlIGJldHRlciBoYXZlIHRpbWUgZm9yIGhpcyBwcmltYXJ5IGR1dHkgb2YgYnJpZWZpbmcgcGFybGlhbWVudC4gCkhhbmQgd2FybWVycyBhcmUgbmljZSBmb3IgdGVtcG9yYXJ5IHJlbGllZiBidXQgYXJlbiByZWFsbHkgcHJhY3RpY2FsIGluIGEgcmVhbCBob21lbGVzcyBzaXR1YXRpb24uClBob3RvIGNpIGRlc3N1cykgZGUgbGEgcGV0aXRlIHN5bmVyZ2llIHN1aXZhbnRlIDouIApDQVJSQURVUywgRnJlZGVyaWNrICAgQXVndXN0IDE1LCAxOTQwICAgU2VwdGVtYmVyIDE5LCAyMDE4IEl0IGlzIHdpdGggZ3JlYXQgc2FkbmVzcyB0aGUgQ2FycmFkdXMgZmFtaWx5IGFubm91bmNlcyB0aGUgcGFzc2luZyBvZiBGcmVkIENhcnJhZHVzIG9uIFNlcHRlbWJlciAxOSwgMjAxOCBpbiBoaXMgNzl0aCB5ZWFyLiBCZWxvdmVkIGh1c2JhbmQgYW5kIGJlc3QgZnJpZW5kIG9mIEp1ZHkgQ2FycmFkdXMuIExvdmluZyBmYXRoZXIgb2YgU3VzYW4gQmFpbGV5IChSb24pLCBKZW5uaWZlciBDdW5uaW5naGFtIChBbmRyZXcpIGFuZCBKaWxsaWFuIFNtaXRoIChKb2R5KS4gCkFtYmVyIE1paG0KUmVndWxhdG9ycyBmaW5lIFd5bm4gUmVzb3J0cyAkMjBNIG92ZXIgc2V4IGFsbGVnYXRpb25zIE5ldmFkYSBnYW1ibGluZyByZWd1bGF0b3JzIGZpbmVkIGNhc2lubyBtb2d1bCBTdGV2ZSBXeW5uIGZvcm1lciBjb21wYW55IGEgcmVjb3JkICQyMCBtaWxsaW9uIHRvZGF5IGZvciBmYWlsaW5nIHRvIGludmVzdGlnYXRlIGNsYWltcyBvZiBzZXh1YWwgbWlzY29uZHVjdCBtYWRlIGFnYWluc3QgaGltIGJlZm9yZSBoZSAuCk9iYW1hIGZvcmVpZ24gcG9saWN5IHdpbGwgYWx3YXlzIGJlIHJhZGljYWxseSBzaW1pbGFyIHRvIER1YmJ5YSBiZWNhdXNlIER1YmJ5YSB3YXMgbm90IHRoYXQgZGlmZmVyZW50IHRoYW4gQ2xpbnRvbiBVbHRpbWF0ZWx5LCB0aGUgUHJlc2lkZW50IGZvcmVpZ24gcG9saWN5IHdpbGwgYWx3YXlzIGJlIHRoZSBtaWxpdGFyeSBpbmR1c3RyaWFsIGNvbXBsZXggZm9yZWlnbiBwb2xpY3kuIApBc3N1bWluZyB0aGUgdHJlbmRzIHNlZW4gYXJvdW5kIHRoZSB3b3JsZCBhcyBwb29yIGFyZWFzIG1vZGVybml6ZSBjYW4gYmUgYXBwbGllZCB0byB0aGUgYXJlYXMgc3RpbGwgbW9kZXJuaXppbmcuIFRoZSB0cmVuZCBpcyB2ZXJ5IHN0cm9uZywgYXMgY29uZGl0aW9ucyBpbXByb3ZlIHlvdSBoYXZlIGEgZ2VuZXJhdGlvbiB0aGF0IGhhcyBtYW55IG1hbnkgY2hpbGRyZW4gYW5kIGJhc2ljYWxseSBhbGwgb2YgdGhlbSBzdXJ2aXZlLiAKRGVyIFdlc3RlbiBkZXIgSW5zZWwgaGF0IGRlbiBWb3J6dWcsIGRhc3MgZXMgZG9ydCB1bSBlaW5pZ2VzIHJ1aGlnZXIgdW5kIGJlc2NoYXVsaWNoZXIgenVnZWh0LiBFaW4gWmllbCBrIHp1bSBCZWlzcGllbCBQb250YSBkZWwgU29sIHNlaW4sIHZvbSBGbHVnaGFmZW4gYXVzIGJlcXVlbSBpbiA0NSBNaW51dGVuIHp1IGVycmVpY2hlbi4gClBlb3BsZSB3aWxsIHJhaXNlL2xpbXAgd2l0aCBnYXJiYWdlIGxpa2UgSjlvLCBzbyB5b3Ugd2FudCB0byBwdXQgYXMgbXVjaCBtb25leSBpbnRvIHRoZSBwb3Qgd2hpbGUgYWhlYWQgYXMgeW91IGNhbi4gCkkgaGF2ZSB0cmllZCBib3RoIHR5cGVzIGFuZCBhZ3JlZSB0aGF0IHRoZSBaYWF6IGlzIHNtb290aGVyLgpBbm90aGVyIHByb2JsZW0gdGhhdCBtYW55IGluZXhwZXJpZW5jZWQgT21haGEvOCBwbGF5ZXJzIGhhdmUgaXMgY29udGludWluZyB0byBwbGF5IGFmdGVyIHRoZSBmbG9wIHdoZW4gdGhleSBoYXZlIGEgY2hhbmNlIHRvIHdpbiBvbmx5IGhhbGYgdGhlIHBvdCBhbmQgaXQgaXMgbGlrZWx5IHRoZXkgd2lsbCBoYXZlIHRvIHNwbGl0IHRoZWlyIGhhbGYgKHRodXMsIGJlaW5nIHF1YXJ0ZXJlZCkuIEFuIGV4YW1wbGUgb2YgdGhpcyBpcyB3aGVuIHlvdSBob2xkIEEgMiA5IFQsIHRoZSBmbG9wIGlzIDMgNiBLLCBhbmQgdGhlcmUgYXJlIHRocmVlIG9yIG1vcmUgcGxheWVycyBpbiB0aGUgcG90IGJldHRpbmcgYW5kIHJhaXNpbmcuIFlvdSBoYXZlIGFsbW9zdCBubyBjaGFuY2UgYXQgYSBoaWdoIGhhbmQsIGFuZCBpZiB5b3UgZG8gaGl0IGEgbG93LCBpdCBpcyBsaWtlbHkgdGhhdCBhbm90aGVyIHBsYXllciBob2xkcyBhbiBBIGFuZCBhIDIuIEV2ZW4gd29yc2UsIGlmIGFuIEEgb3IgMiBoaXRzIG9uIHRoZSB0dXJuIG9yIHJpdmVyLCB5b3VyIGxvdyB3aWxsIGJlIGNvdW50ZXJmZWl0ZWQuIENvbnRpbnVpbmcgdG8gcGxheSBpbiBzaXR1YXRpb25zIGxpa2UgdGhlc2Ugd2lsbCBjb3N0IHlvdSBtb3JlIG1vbmV5IGluIHRoZSBsb25nIHJ1biB0aGFuIHRoZXkgd2lsbCBtYWtlIGZvciB5b3UuCkkgZG9uIHRoaW5rIEkgZ2F2ZSB1cCBwcm9mZXNzaW9uYWwgZnVsZmlsbG1lbnQsIHJlYWxseS4gSSBzdGlsbCB3b3JrZWQgaW4gaGlnaGVyIGVkdWNhdGlvbiwganVzdCBub3QgaW4gdGhlIHN1YiBmaWVsZCB3aXRoaW4gaGlnaGVyIGVkdWNhdGlvbiB0aGF0IEkgd2FudGVkIHRvIGR1ZSB0byBub3RoaW5nIGluIHRoYXQgYXJlYSBiZWluZyBhdmFpbGFibGUgYXQgdGhhdCB0aW1lLiBJIHN0aWxsIHdhcyBhYmxlIHRvIGdhaW4gZXhwZXJpZW5jZSB0aGF0IGFjdHVhbGx5IG1hZGUgbWUgbW9yZSBjb21wZXRpdGl2ZSBmb3IgdGhlIHBvc2l0aW9uIHRoYXQgSSBoYXZlIG5vdy4gCkJlYXRvbiBkZXZlbG9wZWQgaGlzIGVkZ2UgaW4gU3QgSGVsaWVycywgaW4gd2hhdCBhcHBlYXJzIHRvIGhhdmUgYmVlbiBhIG5lYXIgcGVyZmVjdCBhZHZlcnRpc2VtZW50IGZvciBwcml2YXRlIGVkdWNhdGlvbiBob3QgaG91c2luZy4gUHJvZ3Jlc3NpbmcgZnJvbSBTdCBLZW50aWdlcm4gdG8gS2luZyBDb2xsZWdlIHRvIEhhcnZhcmQsIHdpdGggbnVtZXJvdXMgdHV0b3JzIGFsb25nIHRoZSB3YXksIG1heSBzY3JlYW0gcHJpdmF0ZSBwcml2aWxlZ2UsIGJ1dCB0aGUgQmVhdG9uIGZhbWlseSBob21lIGRvZXNuIHN0YW5kIG91dCBmcm9tIGl0cyBuZWlnaGJvdXJzLi4gClRoZSBlYXNpZXN0IHdheSB0byBiZSBpbmNsdXNpdmUgd2FzIHRvIGhhdmUgaXQgYmUgYSBmcmVlIGZvcm0gZW50cnkuIEkgYWN0dWFsbHkgdmlzaXRlZCBhIENoYXNlIGJyYW5jaCBsYXN0IG5pZ2h0IGFuZCBzYXcgdGhhdCBJIHdhcyBwcmUgYXBwcm92ZWQgZm9yIHRoZSBDU1IuIApJdHMgbm90IHNvIG11Y2ggd2hlcmUgcGVvcGxlIGZhbGwgaW4gdGhpcyByYXRpbyB0aGF0IGlzIHRoZSBwcm9ibGVtLCBhcyBpdCBpcyB0aGUgY2xhc3Mgb2YgcGVvcGxlLiBJdCBpcyB0aGUgY2xhc3Mgb2YgcGVvcGxlIHdobyBvd24gdGhlIGh1Z2UgYnVzaW5lc3NlcyBhbmQgYmFua3MsIHdobyBydW4gdGhlIGVjb25vbXkgYW5kIGRpY3RhdGUgcG9saXRpY3MuIApUaGUgaW50ZW50aW9uIHdhcyBuZXZlciB0byBjaG9vc2UgdXAgc2lkZXMgbGlrZSBhIHNjcmF0Y2ggZm9vdGJhbGwgZ2FtZS4gSSBwZXJzb25hbGx5IGZvdW5kIGl0IHRvIGJlIG9uZSBvZiBoZXIgYmV0dGVyIHZpZGVvcywgYW5kIHNoZSBrbmV3IGl0IHdvdWxkIGJlIGNoYWxsZW5naW5nIGZyb20gdGhlIGdldCBnby4gU2hlIHNhaWQgYXMgbXVjaC4uIApFdmVyeSBvbmNlIGluIGEgd2hpbGUgaGUgZGlwcyBoaXMgaGFuZCBpbnRvIHRoZSBwb2NrZXQgb2YgaGlzIHN0YWluZWQsIHNtZWxseSB0IHNoaXJ0IGFuZCBicmFuZGlzaGVzIGEgYmlyZCBmZWF0aGVyLiBIZSB3YXZlcyBpdCBhYm91dCBoYWxmIGhlYXJ0ZWRseSBhbmQgZ2xhbmNlcyBvdXQgdGhlIGhhbGYgb3BlbiBkb29yIHRvIHRoZSB3b3JsZCBvdXRzaWRlLi4gCklmIHlvdSB3ZXJlIGhlciwgd291bGQgeW91IHJpc2sgeW91ciBjYXJlZXIgZm9yIFRvbSBGYWxsb24/IEFsc28gY29uc2lkZXIgdGhhdCB0aGUgR292ZXJub3IganVzdCBjYW1lIG9uIGJvYXJkLiAKQkVUQSBWMS40LjAgTVVMVGk5IE9ORSBGVFAgTElOSyBUT1JSRU5ULiAKSWYgeW91IGxpa2UgcGxheWluZyBhbmQgeW91IGNoZXJpc2ggYSBob3BlIHRvIHdpbiwgcGxheSBidXQgcmVtZW1iZXIgdGhhdCB0aGUgd2lubmluZyBpcyBhIG1hdHRlciBvZiBsdWNrLi4gClRoZSB0ZXJtICJuZXcgZmFuZ2xlZCB0cmVhc29ucyIgY29tZXMgZGlyZWN0bHkgZnJvbSBCbGFja3N0b25lIChDb21tZW50YXJpZXMsIEJvb2sgSVYsIENoLiAKV0UgQVJFIFRIRSBQUk9CTEVNIFdJVEggVEhJUyBQTEFORVQgTk9UIFRIRSBPVEhFUiBTRU5USUVOVCBCRUlOR1MsIEJVVCBVUy4gTm93IEkgd2lsbCBnZXQgb2ZmIG15IHNvYXAgYm94IGFib3V0IHRoaXMgYnV0IEkgd2FudCBhIFByZXNpZGVudCBhbmQgQ29uZ3Jlc3Mgd2l0aCB0aGUgU3VwcmVtZSBDb3VydCB0byByZWFsbHkga25vdywgdGhpcyBpcyBpbXBvcnRhbnQsIGFuZCBpdCBuZWVkcyB0byBiZSBhZGRyZXNzZWQgcHJvcGVybHkuIEkgd2FudCB0byBzZWUgb3VyIENvbmdyZXNzIGFuZCBQcmVzaWRlbnQgYmVoaW5kIHVzIGluIHRoZSBOTyBLSUxMIFNIRUxURVIgbW92ZW1lbnQuIAoiSSB0aGluayBzb21lYm9keSBvcmRlcmVkIChvdXIgYXJyZXN0KS4gZm9yIG1vbmV5LCIgaGUgc2FpZC4KVGhpcyBpcyBhIG11Y2ggYmlnZ2VyIGZpZ2h0IHRoYW4gYSBjb250cmFjdCBuZWdvdGlhdGlvbi4gClRoZSBTdGFydHVwIHN0b3J5IG9mIFBvY2tldCBBY2VzClRoZSB3b25kZXJmdWwgdGhpbmcgYWJvdXQgb25saW5lIHBva2VyIGlzIGEgcGxheWVyIGNhbiBwbGF5IG1vcmUgaGFuZHMsIGFuZCB5b3Uga25vdyB3aGF0IHRoYXQgbWVhbnMgZm9yIHBva2VyIHdpbm5lcnMgbW9yZSB3aW5uaW5ncyEgQWxzbywgdGhlIGFiaWxpdHkgb2YgYmVpbmcgYWJsZSB0byBwbGF5IG11bHRpcGxlIHRhYmxlcyBpcyBhIHBsdXMuIE5vIHRpbWUgaXMgd2FzdGVkIGluIG9ubGluZSBwb2tlciBhbmQgdGhpcyBpcyBub3QgcG9zc2libGUgaW4gcmVhbCBsaWZlIHBva2VyLiBJdCBpcyBubyBsb25nZXIgbmVjZXNzYXJ5IHRvIHdhaXQgaW4gbGluZSBmb3IgYSB0YWJsZSB0byBjbGVhciB1cCBzaW5jZSBhIHBva2VyIHNpdGUgd2lsbCBhbHdheXMgaGF2ZSBhIHRhYmxlIGF2YWlsYWJsZSBmb3IgaXRzIG1lbWJlcnMuCkVkaXQ6IHRoYW5rIHlvdSBmb3IgdGhlIGdvbGRzIGFuZCB0aGUgc2lsdmVyLCBndXlzISBObyBwcm9taXNlcyBiZWNhdXNlIEkgb25seSBoYXZlIHNvIG1hbnkgc3Bvb25zLCBidXQgSSdtIHdpbGxpbmcgdG8gaGVscCB3aGVyZSBJIGNhbiB3aXRoIHRoZXNlIGtpbmRzIG9mIHNjcmlwdHMuIEkgYWxzbyBoaWdobHkgcmVjb21tZW5kIHJlYWRpbmcgQ2FwdGFpbiBBd2t3YXJkJ3Mgc2l0ZSwgZm9yIGhlbHAgd2l0aCBzY3JpcHMgYW5kIHdpdGggbm9ybWFsaXppbmcgYXNzZXJ0aXZlbmVzcyBhbmQgYm91bmRhcmllcy4gVGhhbmsgeW91IGFnYWluIS4gClMgdCBvIHIgbSBiIG8gciBuIHUKT2YgY291cnNlLCB0aGUgbWFqb3JpdHkgb2YgQW1lcmljYW5zIGFyZSBub3Qgd2hpdGUgc3VwcmVtYWNpc3RzLiBtYWpvcml0eSBvZiBBbWVyaWNhbnMgd2FudCBldmVyeW9uZSB0byB2b3RlLCB3YW50IHRheCBkb2xsYXJzIHRvIGJlIHNwZW50IG9uIGNyZWF0aW5nIGEgbW9yZSBmYWlyIGFuZCBqdXN0IHNvY2lldHksIGFuZCBzdXBwb3J0IHRoZSB3b3JrIG9mIG9yZ2FuaXphdGlvbnMgbGlrZSBBQ09STi4gaG93ZXZlciwgYSByaWdodCB3aW5nIHNtZWFyIGNhbXBhaWduIGNvbnZpbmNlZCBvcmRpbmFyeSBBbWVyaWNhbnMgdGhhdCBBQ09STiB3YXMgYmFkLCB3b3JzZSB0aGFuIEhhbGlidXJ0b24gYmFkLCBhbmQgaGFkIHRvIGJlIHNodXQgZG93bi4KQnVyZ295bmUncyBjaGFsbGVuZ2VzIEJlZm9yZSBhcHBlYXJpbmcgb24gdGhlIHNob3csIEJ1cmdveW5lIGhhZCBiZWVuIHdvcmtpbmcgb24gb3BlcmF0aW9ucyBhbmQgc3lzdGVtcyBmb3IgYSBtdWx0aSB1bml0IGJ1c2luZXNzIGZvciB0d28geWVhcnMuIApJIHN0YXJ0ZWQgbG9va2luZyBpbnRvIGl0IHJhdGhlciB0aGFuIHdhc3RpbmcgdGltZSBvbiByZWRkaXQgZm9yIHNvbWUgZGF5cy4gClRlbmNlbnQgaXMgbm90IGEgcG9zaXRpdmUgZ3JvdXAgZm9yIGdhbWluZywgYW5kIHRoZXkgY2FyZSBsaXR0bGUgYmV5b25kIHByb2ZpdCBhbmQgaW5mbHVlbmNlLgpTbyBjb21lIGludG8gbXkgcm9vbSwgZm9yZ2V0IHRoZSBvdXRzaWRlIHdvcmxkIGZvciBhd2hpbGUgYW5kIHJlbGF4IGZvciB5b3VyIGhlYWx0aCEuIApMdWNraWx5LCBUcnVtcCBzZWVtcyBrZWVuIHRvIHNxdWFuZGVyIGhpcyBhZG1pbmlzdHJhdGlvbiBvbiBjb3JydXB0aW9uLCBwZXR0eSBpbmZpZ2h0aW5nLCBhbmQgc2hhbGxvdyBvcHRpY3MuLiAKQW4gZGllc2VyIFN0ZWxsZSB3b2hsd29sbGVuZCBlcncgd2VyZGVuIG11c3MgZGllIEtvY2hrdW5zdCBkZXIgQ2hpbmVzZW4uIApCdXQgbmVpdGhlciBHb2Qgbm9yIHRoZSBGYXRlcyBub3IgSSBoYWQgYW4gYW5zd2VyIHRoZW4uIEFuZCBJIHN0aWxsIGRvbiBoYXZlIGFuIGFuc3dlciBub3cuIApUaGUgdGF4cGF5ZXIgYWxzbyBzdWJtaXR0ZWQgdmFyaW91cyB0cmFuc3BvcnRhdGlvbiByZWNlaXB0cyBmb3IgVG9yb250byBUcmFuc2l0IENvbW1pc3Npb24gdGlja2V0cyBhbmQgdG9rZW5zLCBhcyB3ZWxsIGFzIHRheGkgZmFyZXMgdG8gb3IgZnJvbSBoaXMgaG9tZSBhbmQgc29tZSBUb3JvbnRvIHBhcmtpbmcgZXhwZW5zZXMuIFNpbmNlIHRoZXNlIGFyZSBhbGwgY29uc2lkZXJlZCBleHBlbnNlcyBvZiBnZXR0aW5nIHRvIGFuZCBmcm9tIHdvcmssIHRoZSBqdWRnZSBydWxlZCB0aGF0IHRoZXNlIHdlcmUgYWxzbyBub3QgZGVkdWN0aWJsZS4KQXMgYSBmZWxpbmUgb25seSB0ZWNoIEkgaGF2ZSBub3Qgc2VlbiBob3Jtb25hbCBpbWJhbGFuY2VzIGZyb20gbmV1dGVyZWQgY2F0cyBhbmQgaSBub3Qgc3VyZSBpZiBJIGV2ZW4ga25vdyB3aGF0IHRoYXQgbWVhbnMvZW50YWlscy4gNCBtb250aHMgb2xkIGlzIGEgcGVyZmVjdCB0aW1lIHRvIG5ldXRlci4KVGhlcmUgc29tZXRoaW5nIGZ1bmRhbWVudGFsbHkgZGlmZmVyZW50IGFib3V0IFVTIHNvY2lldHkgdGhhdCBpcyBsZWFkaW5nIHRvIHZpb2xlbmNlIHRoYXQgaXNuIGR1ZSB0byBhY2Nlc3MgdG8gZ3Vucy4gCkZvciBIR1NTLCBlYXNpZXN0IGluZGljYXRvciBpcyB0aGF0IGl0IGJsYWNrLCB2ZXJzdXMgdGhlIGdyZXkgY2FydHJpZGdlcyBvZiBmYWtlIG9uZXMuClBpeGVsIDMgaXMgY29uc3RhbnRseSBvbiBzYWxlIHNvIEkgZ290IGl0IGZvciA2MDAuIApPdGhlciB3b3JkcywgaG93IHRvIHBhc3MgYXMgd2hpdGUgKG9yIGV2ZW4gQmxhY2sgb3IgQXNpYW4gQW1lcmljYW4pIGFuZCB0aGVyZWJ5IGF2b2lkIHRoZSBwb3RlbnRpYWwgY3JpbWluYWxpdHkgb2YgYmVpbmcgZnJvbSBTb3V0aCBvZiB0aGUgQm9yZGVyLi4gClRoZXNlIG1lYXN1cmVtZW50cyBhcmUgcGVyZmVjdCBmb3IgYm90aCBiZWVyIGJvdHRsZXMgYW5kIGNhbnMuIEFueSBkZWVwZXIgYW5kIHRoZSBwbGF5ZXJzIHdpbGwgaGF2ZSBhIGhhcmQgdGltZSBnZXR0aW5nIHRoZSBjYW5zIG91dC4oRXNwZWNpYWxseSBhZnRlciBoYXZpbmcgY29uc3VtZWQgYSBmZXcgYmVlcnMpLgpBbmQgaXQncyBub3QgdGhhdCBoZSBkb2Vzbid0IHVuZGVyc3RhbmQhIEhlJ3Mgc21hcnQsIGhlJ3MgYmVlbiBldmFsdWF0ZWQgYW5kIHRoZXkndmUgVE9MRCBtZSBoZSdzIHNtYXJ0ICh0aGV5IHVzZWQgdGhlIHdvcmQgZ2VuaXVzLCB0aGF0IG1hZGUgbWUgbGF1Z2gpLCBhbmQgSSBjYW4ndCBmaWd1cmUgb3V0IHdoYXQgdG8gZG8gd2l0aCBoaW0hLiAKRmxvcCBjb21lcyBBSzQuIEkgY2hlY2sgaW50byB0aGUgaW5pdGlhbCByYWlzZXIgYmVjYXVzZSBoZSB3YXMgbm90b3Jpb3VzbHkgYmV0dGluZyBldmVyeSBmbG9wLiBIZSBiZXRzLCBiaWcuIApUaGUgYW5udWFsIG1lZXRpbmcgc2F3IERvbGxhcmFtYSBmb3VuZGVyIExhcnJ5IFJvc3N5IHN0ZXAgZG93biBhcyBleGVjdXRpdmUgY2hhaXJtYW4sIGFsdGhvdWdoIGhlIGlzIGV4cGVjdGVkIHRvIHJlbWFpbiBhIG1lbnRvciBhbmQgY29udGludWUgc2hvd2luZyB1cCBhdCB0aGUgY29tcGFueSdzIGhlYWRxdWFydGVycywgc2FpZCBoaXMgc29uIE5laWwgd2hvIGlzIGNoaWVmIGV4ZWN1dGl2ZS4KSSB3YW50IHRvIGV4cGxvcmUuIFBsZWFzZSBmZWVsIGZyZWUgdG8gY2hhdCB3aXRoIG1lLCBidXQgaWYgeW91IGUgbWFpbCBtZSBzYXkgeW91IGNvbWUgZnJvbSB0aGlzIHNpdGUgb3IgSSB3aWxsIGp1c3QgZGVsZXRlIHlvdS4gCkFsc28gY2VsZWJyYXRpbmcgd2l0aCBORU8gdG9kYXkgd2VyZSBMaW5kc2F5IFBhdHJpY2ssIE1hbmFnaW5nIERpcmVjdG9yIEhlYWQsIFN1c3RhaW5hYmxlIEZpbmFuY2UsIFJCQyBDYXBpdGFsIE1hcmtldHM7IEplbm5pZmVyIFNvLCBBc3NvY2lhdGUgUG9ydGZvbGlvIE1hbmFnZXIsIFNlbmlvciBBc3NvY2lhdGUgRnVuZGFtZW50YWwgQ2FuYWRpYW4gRXF1aXRpZXMsIEJNTyBHbG9iYWwgQXNzZXQgTWFuYWdlbWVudDsgRmxvcmVuY2UgTmFyaW5lLCBTZW5pb3IgVmljZSBQcmVzaWRlbnQsIEhlYWQgb2YgUHJvZHVjdCwgQUdGIEludmVzdG1lbnRzOyBhbmQgUmFqIExhbGEsIFByZXNpZGVudCBhbmQgQ0VPLCBFdm9sdmUgRVRGcy4gCkRlZXAgc2VhIGZpc2hpbmcgaXMgYSBiZWFzdCBvZiBhIHNwb3J0LCBhbmQgY2FuIGRyYWluIGFsbCB0aGUgZW5lcmd5IGZyb20gYSBtYW4sIGJ1dCB3aGFyZiBmaXNoaW5nIHNlZW1zIHRvIGJlIG1vcmUgYSBnYW1lIG9mIGNoYW5jZSB0aGFuIHNraWxsLiBMZXZ5IGJlbGlldmVzIHRvdXJuYW1lbnQgcG9rZXIgICBpbiB3aGljaCBjb21wZXRpdG9ycyBwYXkgb25seSBhIG9uZSBvZmYgYnV5IGluIGZlZSAgIGlzIG1vcmUgc2tpbGwgdGhhbiBjaGFuY2UsIGFzIG9wcG9zZWQgdG8gdGhlIGNhc2ggZ2FtZSB2ZXJzaW9uIHdoZXJlIHBsYXllcnMgY2FuIGNvbnRpbnVlIHRvIHBpbGUgaW4gbW9yZSBvZiB0aGVpciBoYXJkIGVhcm5lZCB0byBzdGF5IGFsaXZlLiAKT2lsIGFsbG93cyB5b3VyIGhhbmRzIHRvIG1vdmUgZnJlZWx5IG92ZXIgdGhlIGJvZHkgZHVyaW5nIG1hc3NhZ2UuIFdoaWxlIGEgdmFyaWV0eSBvZiBtYXNzYWdlIG9pbHMgYXJlIG9uIHRoZSBtYXJrZXQsIHlvdSBjYW4gYWxzbyBtYWtlIHlvdXIgb3duLiAKSSB0aGluayB0aGVyZSByZWFsbHkgdHdvIHdheXMgdG8gZ2V0IGludG8gYm9va2JpbmRpbmcuIFRoZSBmaXJzdCBpcyB3aGF0IHlvdSBtZW50aW9uZWQgYW5kIHRoZSBTZWEgTGVtb24gdHlwZSBzdHVmZi4gCklmIHlvdSdyZSBkZXNwZXJhdGUgZm9yIGEgbWFudWFsIGNhbGN1bGF0aW9uIHRvIHNob3cgeW91IGhvdyBpdCdzIGRvbmUsIGRyb3AgYSBjb21tZW50IGFuZCBJJ2xsIGhhdmUgYSBiYXNoIHdoZW4gSSBoYXZlIGEgZmV3IG1pbnV0ZXMuLiAKVGhlIHJlYWwgaW5kaWNhdG9ycyBvZiBpbXByb3ZlbWVudCBpbiB0aGUgcG9zaXRpb24gYXJlIHRyYWRlLCBzZXJ2aWNlLCBpbmNvbWUgYW5kIGN1cnJlbnQgYWNjb3VudHMgdGhhdCBzaG93IGRldGVyaW9yYXRpb24uIFRvIHRoZSBzdXJwcmlzZSBvZiBwcm9mZXNzaW9uYWwgZWNvbm9taXN0cywgdGhlIElNRiBhbHNvIHNob3dlZCBubyBjb25jZXJuIGluIGl0cyBwcmVzcyByZWxlYXNlIGFib3V0IHRoZSBhcHByZWNpYXRpb24gb2YgdGhlIHJlYWwgZWZmZWN0aXZlIGV4Y2hhbmdlIHJhdGUgaW4gYSBwZXJpb2Qgb2YgZmFsbGluZyBleHBvcnRzIGFuZCB3aWRlbmluZyB0cmFkZSBkZWZpY2l0LiBUaGF0IGhhcHBlbnMgd2hlbiBleHBlZGllbmN5IG92ZXJ3aGVsbXMgcHJvZmVzc2lvbmFsaXNtLgpJIHBlcnNvbmFsbHkgY2FuIHRhbGsgd2l0aCBteSBwYXJlbnRzIGFib3V0IGFueXRoaW5nIGFuZCBiZSB0cnV0aGZ1bC4gClJvd2UgbGVmdCB0aGUgZ2FtZSBpbiB0aGUgODl0aCBtaW51dGUgcmVwb3J0ZWRseSBjbHV0Y2hpbmcgaGlzIGhhbXN0cmluZy4gSGUgd2FzIHNpZGVsaW5lZCBsYXN0IHdlZWsgd2l0aCBhIGhhbXN0cmluZyBpbmp1cnksIHRob3VnaCBoaXMgY3VycmVudCBzdGF0dXMgaXMgc3RpbGwgdW5rbm93bi4KT24gdGhlIHNhbGUgc2lkZSwgdGhlIG1vb2QgYW1vbmcgZGV2ZWxvcGVycyBpcyBlcXVhbGx5IGRvd25iZWF0LiBBY2NvcmRpbmcgdG8gV2lsbGlhbSBMLiAKU29jY2VyIEZlZGVyYXRpb24gb3ZlciBlcXVhbCB0cmVhdG1lbnQgYW5kIHBheS4iSSB0aGluayBhIGxvdCBvZiBwZW9wbGUgbG9vayB0byB1cyBhbmQgb3VyIHRlYW0gYW5kIHRoZSBjb2xsZWN0aXZlIHZvaWNlIHRoYXQgd2UgaGF2ZSBhbmQgd2hhdCB3ZSd2ZSBzdG9vZCBmb3IsIGZvciBpbnNwaXJhdGlvbiBhbmQgZm9yIHBvd2VyLCBhbmQgYXMgYW4gYWxseSBpbiB0aGlzIGJyb2FkZXIgZmlnaHQgZm9yIGVxdWFsaXR5IGFuZCBodW1hbiByaWdodHMsIHJlYWxseSwiIHNhaWQgd2luZ2VyIE1lZ2FuIFJhcGlub2UsIGEgY28gY2FwdGFpbiBhbmQgdmV0ZXJhbiBvZiAxNDkgaW50ZXJuYXRpb25hbCBhcHBlYXJhbmNlcy4gRGlzdHJpY3QgQ291cnQgaW4gTG9zIEFuZ2VsZXMgdW5kZXIgdGhlIEVxdWFsIFBheSBBY3QgYW5kIFRpdGxlIFZJSSBvZiB0aGUgQ2l2aWwgUmlnaHRzIEFjdC4gVGhlIGxhd3N1aXQsIHdoaWNoIHNlZWtzIGNsYXNzIGFjdGlvbiBzdGF0dXMsIHdhcyBmaWxlZCBvbiBJbnRlcm5hdGlvbmFsIFdvbWVuJ3MgRGF5Li4gCk1lYW53aGlsZSBteSB3aWZlIGZsaWVzIHdpdGggb3VyIHR3byB5b3VuZyBraWRzLCBieSBoZXJzZWxmLCBxdWl0ZSBvZnRlbiwgYW5kIGhhcyBuZXZlciBoYWQgYSBtZWx0ZG93biBhbmQgc2hlIGdldHMgbm90aGluZyBidXQgZXZpbCBleWVzIGlmIG9uZSBvZiB0aGVtIHNuZWV6ZXMuIEkgaGF2ZSB0byBkZWFsIHdpdGggbXkgdW5ydWx5IG5lcGhldyBhdCBldmVyeSBmYW1pbHkgZ2F0aGVyaW5nIGJlY2F1c2UgbXkgc2lzdGVyIGFuZCBCSUwgYXJlIGxheCBhbmQgaW5jb25zaXN0ZW50IHdpdGggc3VwZXJ2aXNpb24vZGlzY2lwbGluZS4gCkkgd291bGRuIGV2ZW4gZ2l2ZSBzbSBhIGNoYW5jZS4gUHJvdGVjdCB5b3VyIGZhbWlseSBmcm9tIGhlci4KSW0gd29uZGVyaW5nIGlmIHRoaXMgc21hbGwgZGVzaWduIGNoYW5nZSBoYXMgYW55dGhpbmcgdG8gZG8gd2l0aCB0aGUgbmVlZCBmb3IgTXVsdGlwbGF5ZXIgcm9kZW9pbmcuIEkgcmVtZW1iZXIsIGVhcmxpZXIgd2hlbiBJIHdhcyBoeXBpbmcgYW5kIGhvcGluZyB0byBzZWUgdGhlIFZhbmd1YXJkLCBJIHdlbnQgaW50byBTUCB0byBjaGVjayBpZiBpdCBoYWQgYSB0eXBpY2FsIGNlbnRyYWwgYmF0dGVyeSBwbHVnLCB3aGljaCBpdCBkb2VzbnQuIEJ1dCwgdGhlIE1vbmFyY2ggZG9lcy4gCkNvdWxkIHlvdSBpbWFnaW5lIGEgd29ybGQgd2hlcmUgeW91IGNvdWxkbid0IHVzZSBjYXNoIGZvciBhbnl0aGluZz8KSSBmZWVkIGJpcmRzIGF0IGhvbWUgYW5kIGJvdWdodCBhbiBJRCBib29rIHRvIGhlbHAgbWUgImNvbGxlY3QiIHRoZW0uIApJIGFwcHJvYWNoIGV2ZXJ5IGpvYiBpbnRlcnZpZXcgd2l0aCB0aGUgaWRlYSBpbiBtaW5kIHRoYXQgSSBhbSBldmFsdWF0aW5nIHRoZSBjb21wYW55IGFzIGEgcGxhY2Ugb2Ygd29yayBhcyBtdWNoIGFzIHRoZXkgYXJlIGV2YWx1YXRpbmcgbWUgYXMgYSBwb3RlbnRpYWwgZW1wbG95ZWUgICBpZiB0aGUgZml0IGlzbid0IHJpZ2h0IHRoZW4geW91IHNob3VsZCBtb3ZlIG9uIGVsc2V3aGVyZS4gCkZvciBiYXNrZXRiYWxsLCBmb3IgaG9ja2V5IGFuZCBhbGwgb2YgdGhlIHNwb3J0cywgdGhleSBuZWVkIGEgbG90IG9mIHJvb20uIApFdmVyeSBwZXJzb24sIG1vc3QgZXNwZWNpYWxseSB3b21lbiBhbGwgd2FudCBzbW9vdGgsIGdsb3dpbmcgc2tpbiBmcm9tIHRoZSBmYWNlIGRvd24gdG8gdGhlaXIgdG9lcy4gVGhlIGV4cGVydHMgc2F5IHRoYXQgdGhlIGtleSB0byBoYXZpbmcgYmVhdXRpZnVsIHNraW4gaXMgcmVhbGx5IGp1c3QgdG8gY2xlYW5zZSwgZXhmb2xpYXRlIGFuZCBtb2lzdHVyaXplLiAKSSd2ZSBoYWQgc29tZSBuYXVzZWEsIEkgaGFkIHRoZSByZWFsIHVyZ2UgdG8gdGhyb3cgdXAgYnV0IHRoZW4gaXQgcGFzc2VkLCBhbiBob3VyIGxhdGVyIEkgaGFkIHRoZSBzYW1lIGFuZCBzdGFydGVkIHRvIGRyeSBoZWF2ZSBzbyBJIHdhcyBnaXZlbiBtZWRpY2luZSB0byBzdG9wIHRoZSBuYXVzZWEuIEl0IHdhcyB2ZXJ5IGVmZmVjdGl2ZSBhbmQgbWFkZSBtZSB2ZXJ5IGRyb3dzeS4gCk9rYXksIGxldCBzZWUgIHNleHkgdW5kZXJ3ZWFyLCBzZXh5IGJyYXMsIGFuZCBzZXh5IGJpa2luaXMgZm9yIHRvdHMgaXMgcHJldHR5IG9mZmVuc2l2ZSwgYnV0IHRoZSB0cnV0aCBpcyBpdCBhbHNvIGNvbXBsZXRlbHkgdWJpcXVpdG91cyBpbiBraWRzIGNsb3RoZXMuIFdhbG1hcnQsIEsgTWFydCwgT2xkIE5hdnkpIGFuZCB5b3UgZmluZCAic2V4eSBzd2ltd2VhciIgZm9yIGdpcmxzLiAKSSBoYXZlIGEgMzAwIHNxdWFyZSBmb290IHBpZWNlIG9mIGdyYXNzIGZvciB0aGUgZG9ncyB0byBwb29wIG9uLiBCdXQgdGhleSBpbnNpc3Qgb24gZ29pbmcgb24gdGhlIHBhdGlvLi4gCkxhZHkgR2FnYSBoYXMgc2xhbW1lZCBNYWRvbm5hIGZvciBmZXVkaW5nIHdpdGggaGVyIHRocm91Z2ggdGhlIG1lZGlhIHJhdGhlciB0aGFuIHNvcnRpbmcgb3V0IHRoZWlyIGRpZmZlcmVuY2VzIGZhY2UgdG8gZmFjZS4gbmV0d29yayBBQkMsIGJhY2tpbmcgY2xhaW1zIGl0IHdhcyBhIHJpcCBvZmYgb2YgaGVyIDE5ODkgc29uZyBFeHByZXNzIFlvdXJzZWxmLgpTaGUgaXMgY29vcGVyYXRpbmcgd2l0aCB0aGUgaW52ZXN0aWdhdGlvbiwgcG9saWNlIGFkZGVkLiBQb2xpY2Ugc2FpZCB0aGUgcmFpZCB3YXMgdGhlIGxhdGVzdCBzdGFnZSBvZiBhbiBpbnZlc3RpZ2F0aW9uIHRoYXQgc3RhcnRlZCB0d28gbW9udGhzIGFnbywgYWZ0ZXIgcG9saWNlIHJlY2VpdmVkIHJlcG9ydHMgb2YgcHJvc3RpdHV0aW9uIGF0IHRoZSBtYXNzYWdlIHBhcmxvci4gCkEgZmV3IGh1bmRyZWQgd29ya2VycywgcHJldHR5IG11Y2ggZHJlc3NlZCB0aGUgc2FtZS4gVGhlIHBsYW50IGhhZCBhbiB1bnVzdWFsIGxheW91dCwgdGhlcmUgd2FzIGEgc21hbGwgcHVibGljIHJvYWQgdGhhdCByYW4gcmlnaHQgdGhyb3VnaCB0aGUgbWlkZGxlIG9mIGl0LCBvcGVuIHRvIHB1YmxpYyB0cmFmZmljLiAKQXJtb3IgbmVyZiB3YXMgcG90ZW50aWFsbHkgdGhlIGZpbmFsIG5haWwgaW4gdGhlIGNvZmZpbiBmb3IgbWFueSB0YW5rIHBsYXllcnMgaW4gdGhpcyByYW5nZS4uIApJIG5vdCBzdXJlIHRoZSBzdGF0aXN0aWNzLCBidXQgSSBoZWFyIGFib3V0IHRoZSBHT1AgY2hlYXRpbmcgdGhlIHBvbGxzIG11Y2ggbW9yZSBvZnRlbiB0aGFuIGFueSBEZW1vY3JhdHMuIApJIHRoaW5rIHRoZSBiaWcgdGhpbmcgd2FzIHRoYXQgSSBzdGlsbCBkaWQgYWxsIHRoZSB0aGluZ3MgICBiYWNoZWxvcmV0dGUgcGFydHksIGdldHRpbmcgcmVhZHkgZGF5IG9mLCBidXQgaXQgd2FzIGFsbCBvbmx5IGRvbmUgaWYgeW91IHdhbnRlZCB0by4gTXkgYmZmIGlzIG5vdCBnb29kIGF0IHBsYW5uaW5nIHRoaW5ncywgc28gaGF2aW5nIGhlciBkbyBhIGJhY2hlbG9yZXR0ZSBwYXJ0eSB3b3VsZCBoYXZlIGJlZW4gdGVycmlibGUuIDIzNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnby4gCllvdXIgd2lubmluZyBwb3RlbnRpYWwgdWx0aW1hdGVseSBkZXBlbmRzIG9uIHlvdXIgZm9ydHVuZS4gWWV0LCBmb3IgeW91ciBpbmZvcm1hdGlvbiB0aGVzZSBzbG90cyBhcmUgaW5zdGFsbGVkIHdpdGggcmFuZG9tIG51bWJlciBnZW5lcmF0b3Igd2hpY2ggY2hvb3NlcyB0aGUgcmVzdWx0IG9mIGVhY2ggc3BpbiBhbmQgc3RvcCB0aGUgcmVlbHMgY29uc2VxdWVudGx5LiAKIkhlIHdhcyBhIG1hcnJpZWQgbWFuLCBhbmQgSSBhYnNvbHV0ZWx5IHNob3dlZCBubyBpbnRlcmVzdCBpbiBoaW0uIEJ1dCBJIHdhc24ndCB0aHJlYXRlbmVkLCBhbmQgSSBkaWRuJ3QganVkZ2UgaGltLiIuIApTbyBjb25maWRlbnQgd2FzIHRoZW4gRW5nbGFuZCBjb2FjaCBEYXZpZCBMbG95ZCB0aGF0IHZpbnRhZ2UgdGFpbGVuZGVyIEFsYW4gTXVsbGFsbHkgd2FzIGluY2FwYWJsZSBvZiBzZXJpb3VzIHJ1bm1ha2luZyB0aGF0LCBkdXJpbmcgdGhlIE92YWwgVGVzdCBhZ2FpbnN0IFBha2lzdGFuIGluIDE5OTYsIGhlIHByb21pc2VkIHRoZSBsZWZ0IGFybWVyIDMwIHBpbnRzIG9mIEd1aW5uZXNzIGlmIGhlIG1hZGUgaXQgdG8gMzAgYWdhaW5zdCB0aGUgbWlnaHR5IHdpbGVzIG9mIFdhc2ltIGFuZCBXYXFhci4gCkl0cyBhIHByZXR0eSB0eXBpY2FsIG5vcnRoZXJuIENhbGlmb3JuaWEgcG9rZXIgcm9vbS4gUGxlbnR5IG9mIGxvc2Ugc2xvd2x5IHJlZ3VsYXJzKFdoZXJlIEkgd291bGQgcGxhY2UgbXlzZWxmIGF0bSksIGEgaGFuZCBmdWxsIG9mIHdpbm5pbmcgcGxheWVycywgYW5kIGEgc21hbGwgYnV0IGFjdGl2ZSBjb3JwcyBvZiBhY3Rpb25zIHBsYXllcnMgdGhhdCBoYXZlIGJlZW4gdHJhbnNwbGFudGVkIGZyb20gdGhlIDEwMSBjYXNpbm8gc2luY2UgR3JhdG9uIG9wZW5lZC4gCkFsbCBkb21haW5zIG9mIGxpZmUsIGluY2x1ZGluZyBiYWN0ZXJpYSwgaGF2ZSB3aGF0IGFyZSBjYWxsZWQgImVycm9yIHByb25lIiBETkEgcG9seW1lcmFzZXMuIAonUGVvcGxlIHdvdWxkIHN0YW5kIGFuZCBzdGFyZSBhbmQgdGFsayBhYm91dCB5b3UgbGlrZSB5b3Ugd2VyZSBhIG1lbnRhbCBwYXRpZW50LicKIkhlIGNvbWV0aCBpbiBzcHJpbmdpbmcgdGltZSBhbmQgd2FybmV0aCBvZiBub3ZlbHR5IG9mIHRpbWUgd2l0aCBncm9hbmluZyB2b2ljZS4gClRoZSBTcGFGaW5kZXIgV2VsbG5lc3MgZ2lmdCBjYXJkIGNhbiBiZSB1c2VkIGF0IG1vcmUgdGhhbiAyMCwwMDAgcGFydGljaXBhdGluZyBmYWNpbGl0aWVzIHNwYXMsIG1lZGljYWwgc3BhcywgeW9nYSwgcGlsYXRlcyBvciBmaXRuZXNzIHN0dWRpb3MsIGhvdGVscyBhbmQgcmVzb3J0cyB3b3JsZHdpZGUsIGluY2x1ZGluZyAyLDAwMCBpbiBDYW5hZGEgYWxvbmUuIEVzdGFibGlzaG1lbnRzIHdpdGggbWFubHkgdHJlYXRtZW50cyBpbmNsdWRlOgpBbmQgd2hlbiBHb2QgY29tbWFuZGVkIE1vc2VzIHRvIHN0cmlrZSB0aGUgcm9jaywgR29kIGV4cGxpY2l0bHkgdG9sZCBoaW0gdG8gZ2F0aGVyIHRoZSBlbGRlcnMgb2YgSXNyYWVsIHNvIGFzIHRvIHByb3ZlIHRoYXQgdGhlIHdhdGVyIGNhbWUgZnJvbSBHb2QuCk1vcmUgZ2FtaWZpY2F0aW9uLiBXaXRoIG1pbmRmdWwgcHJhY3RpY2UsIFJ2UiB3aWxsIHRlYWNoIHlvdSB0aGluZ3MgeW91IGNhbiBsZWFybiBhbnl3aGVyZSBlbHNlLiAKQW5vdGhlciBjb29sIHRoaW5nIGFib3V0IHRoaXMgaXMgdGhhdCBpdCBoYXMgYnVpbHQgaW4gZHJpbmsgaG9sZGVycyBmb3IgeW91ciBjdXBzLCBiZWVyLCBvciBhbnkgb3RoZXIgYmV2ZXJhZ2UuIEF0IGhvbWUgcGVvcGxlIGNhbm5vdCBoYXZlIGRyaW5rcyBiZWNhdXNlIHRoZSB0YWJsZSBpcyB0b28gc21hbGwgYW5kIGl0IGFsd2F5cyBzZWVtcyB0aGF0IHNvbWVvbmUgc3BpbGxzIG9uIHRoZSB0YWJsZSB0byBydWluIHRoZSBnYW1lIGluIHBsYXkuIFRoaXMgZm9yY2VzIHRoZSBnYW1lIHRvIGhhdmUgdG8gYnJlYWsgYW5kIGJlIGludGVycnVwdGVkIHNvIHBlb3BsZSBjYW4gaGF2ZSBhIGRyaW5rLiBOb3cgdGhleSBjYW4gZHJpbmsgYXQgdGhlIHRhYmxlIHdpdGhvdXQgd29ycnlpbmcgYWJvdXQgcnVpbmluZyB0aGUgZ2FtZS4KTEFTIFZFR0FTICAgUHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciBXYWx0ZXIgRmlzaGVyIGRpZG4ndCByZWNvZ25pemUgdGhlIG1hbiBoZSB3YXMgbG9va2luZyBhdCBpbiB0aGUgbWlycm9yLiBTdHVjayBpbiBkZWJ0IGFuZCBiYWxsb29uaW5nIHVwIHRvIDI0NSBwb3VuZHMsIEZpc2hlcidzIGZyaWVuZHMgZm91bmQgYSB3YXkgdG8gaGVscCBoaW0gdHVybiBoaXMgbGlmZSBhcm91bmQgYm90aCBmaW5hbmNpYWxseSBhbmQgcGh5c2ljYWxseS4KTm8uIApIZSBkaWRuIHdhbnQgdG8gZW5jb3VyYWdlIHRoZSBpZGVhIG9mIGRlaXR5IHdvcnNoaXAgb3IgS2FybWljIGxpdmluZy4gQW55IGRpc2NpcGxlIG9mIEJ1ZGRoYSB3aWxsIG5vdCBzZWUgaGltIGFzIGEgZGVpdHkgb3IgR29kLCBidXQgYXMgYSBHdXJ1LkV2ZXJ5IHByYWN0aXNpbmcgQnVkZGhpc3QgaXMgYSBmb2xsb3dlciBvZiB0ZWFjaGluZ3Mgb2YgQnVkZGhhLCBub3QgYSBmb2xsb3dlciBvZiBCdWRkaGEuV2hlbiBCdWRkaGlzbSBzdGFydGVkIGV4cGFuZGluZyByYXBpZGx5LCBzb21lIG9mIHRoZSBwZW9wbGUgc3RhcnRlZCBpZG9saXNpbmcgLiAKV29uZGVyIFdvbWFuIGhhZCBoZWFydCBhbmQgZWFzaWx5IGZvcmdlZCBhbiBlbW90aW9uYWwgY29ubmVjdGlvbiB3aXRoIGF1ZGllbmNlczsgbmVpdGhlciBpcyB0aGUgY2FzZSBoZXJlLCB3aGVyZSB0aGUgZm9jdXMgaXMgb24gdGVjaG5pY2FsIGJyYXZ1cmEsIHJhdCBhIHRhdCB0YXQgcGFjaW5nLCBodW1vcm91cyBxdWlwcywgYW5kIGJpZyAibW9tZW50cy4iIFRoZXJlJ3MgcGxlbnR5IG9mIHZpc3VhbCBwaXp6YXp6IGFuZCBhY3Rpb24gYnV0IHRoZSBtb3ZpZSBpcyBnZWFyZWQgbW9yZSBmb3IgdGhvc2UgaW50ZXJlc3RlZCBpbiBnZXR0aW5nIHRoZWlyIE1DVSBmaXggdGhhbiBiZWluZyBmdWxseSBpbW1lcnNlZCBpbiBhIHVuaXF1ZSBzdXBlcmhlcm8gZXhwZXJpZW5jZS4uIApBIG5pY2UsIHNtYXJ0IGd1eS4gCkxhc3QgeWVhciwgYXMgb25lIGV4YW1wbGUsIHNoZSBhc2tlZCB0aGUgTGluY29sbndvb2QgVmlsbGFnZSBCb2FyZCB0byByZWplY3QgYSByZXF1ZXN0IHRvIGxpZnQgaXRzIGJhbiBvbiB2aWRlbyBnYW1ibGluZy4gQXQgaXNzdWUgd2FzIGEgcHJvcG9zYWwgYnkgTGFyZWRvIEhvc3BpdGFsaXR5IHRvIG9wZW4gYSBTdGVsbGEgcyBDYWZlICAgdGhlIHNhbWUgRGVzIFBsYWluZXMgY29tcGFueSBhbmQgZ2FtYmxpbmcgcGFybG9yIGNoYWluIHRocm91Z2ggd2hpY2ggR2lscm95IGVuZGVkIHVwIHdpbm5pbmcgaGVyIGRyYXdpbmcuClNvLCBvdXQgb2Ygbm93aGVyZSwgYSBjYXJ0b29uaXNoIGdyZWVuIHdpdGNoZXMgaGVhZCBhcHBlYXJlZCB0byBiZSBmbG9hdGluZyBpbiBmcm9udCBvZiBtZS4gSSBoYWQgYSBtb21lbnRhcnkgYW5kIHRoZW4gdGhlIGhhbGx1Y2luYXRpb24gd2VudCBhd2F5Li4gCkVuam95IG5pZ2h0bHkgZW50ZXJ0YWlubWVudCBhdCBSdXNoIExvdW5nZSBvciBlbmpveSB5b3VyIGZhdm9yaXRlIGNvY2t0YWlsIGF0IEJhciA0NiBpbiB0aGUgY2VudGVyIG9mIHRoZSBjYXNpbm8gZmxvb3IuIApJIHdvdWxkIGFsc28gbG92ZSB0byBoYW5nIG91dCBiZWNhdXNlIEkgd291bGQgc3BlbmQgdGhlIGRheSB3aXRoIGhpcyBkYWQgKG1pbmUgd2FzbiBwYXJ0IG9mIG15IGNoaWxkaG9vZCkgYW5kIGhlIHdvdWxkIGV4cGxhaW4gdG8gbWUgaG93IGV2ZXJ5dGhpbmcgd29ya2VkLiBJdCB3YXMgZ3JlYXQhCkFub3RoZXIgY2FzaW5vIG1lYXN1cmUgbHVya2luZyBpbiAyMDE2ClNsZWVwIGlzIGEgbmF0dXJhbCBwcm9jZXNzIGRlZmluZWQgYXMgYSByZWN1cnJlbnQgc3RhdGUgb2YgcmVkdWNlZCBhdHRlbnRpb24gdG8gdGhlIHN1cnJvdW5kaW5nIGVudmlyb25tZW50LiAKSSBsaWtlZCBhY3QgMiBibGVzc2VkIGFpbSBtZXJjIHdpdGggdGhlIGNsZWFuc2UgcnVuZXdvcmQgKHlvdSBhbHNvIGxvc2Ugb3V0IG9uIGNsZWFuc2UgaWYgeW91IGdvIGZvciBJbmZpbml0eSwgd2hpY2ggaXMgYSBncmVhdCBxdWFsaXR5IG9mIGxpZmUgY2hhbmdlciBpZiB5b3UgZXZlciBydW4gdDEgc3BpZGVyIG1hcHMgZm9yIHRoZSBwb2lzb24pLiBQcmF5ZXIgaXMgb2theSB0b28gZm9yIHRoZSBsaWZlIHJlZ2VuIGJ1dCB0aGUgYXR0YWNrIHJhdGluZyBpcyBncmVhdCBmb3IgYm9zc2VzLiBHaXZlIHlvdXIgbWVyYyBzb21lIG1heCBmaXJlIHJlcyBnZWFyIGFzIHRoZSBvbmx5IHRoaW5nIHRoYXQgd2lsbCBraWxsIHRoZW0gYXJlIGh5ZHJhcy4gCkRhbnMgbGUgOWUKTmFtZSB3YXMgZ2l2ZW4gdG8gbWUsIFdvb2Qgc2FpZC4gCkkgdXNlZCB0byBiZWF0IHRoYXQgZ2FtZSBhbmQgNTBubCB3aXRoIHNvbWUgMTAwbmwgcHJlIGJsYWNrIGZyaWRheS4gCihhLCBiLCBjKSAgPiByZXBsaWNhdGUgYSArKyByZXBsaWNhdGUgYiArKyByZXBsaWNhdGUgYyBhcmUgYWxzbyBhbWVuYWJsZSB0byBwYXR0ZXJuIG1hdGNoaW5nLiBMaXN0cywgaG93ZXZlciwgaGF2ZSB0d28gcG9zc2libGUgcGF0dGVybnMsIGFzIG9wcG9zZWQgdG8gdHVwbGUgb25lLiAKQXNleHVhbGl0eSBpc24ndCBhIG1vbm9saXRoLiBJdCdzIGEgZ3JhZGllbnQuIFNvbWUgcGVvcGxlIHdpbGwgZmFsbCBsb3dlciBvbiB0aGUgc3BlY3RydW0gKHZlcnkgbGl0dGxlIHRvIG5vIGludGVyZXN0KSBhbmQgc29tZSB3aWxsIGZhbGwgaGlnaGVyLiAoT2NjYXNpb25hbCBpbnRlcmVzdCkuCkl0IHRoZSBuYXR1cmFsIGNvbnNlcXVlbmNlIG9mIGEgcG9saXRpY2FsIGN1bHR1cmUgdGhhdCB2aWxpZmllcyBnb3Zlcm5tZW50YWwgYWlkIHByb2dyYW1zIGZvciBwb29yIGFuZCBqb2JsZXNzIGluZGl2aWR1YWxzLiBKb2JzIHRha2Ugb24gdGhlIHJvbGUgdGhvc2UgcHJvZ3JhbXMgd291bGQgb3RoZXJ3aXNlIGhhdmUsIHdoZXJlIGlmIHBlb3BsZSBkb24gaGF2ZSB0aGVtIHRoZXkgbGl0ZXJhbGx5IHN0YXJ2ZSBhbmQgbG9zZSB0aGVpciBob21lcy4gU28gaW4gdGhlIGVuZCB0aGUgZ292ZXJubWVudCBoYXMgdG8gcG91ciBiaWxsaW9ucyBpbnRvIGtlZXBpbmcgcG9pbnRsZXNzIGpvYnMgYWxpdmUsIGFuZCBpbiB0dXJuIGZpbGwgdGhlIHBvY2tldHMgb2YgdGhlIGFzc2hvbGVzIHRoYXQgcnVuIHRob3NlIGJ1c2luZXNzZXMsIGluc3RlYWQgb2YganVzdCBzcGVuZGluZyB0aGF0IG1vbmV5IG9uIGhlbHBpbmcgcGVvcGxlIHdpdGhvdXQgam9icyBoYXZlIGEgZGVjZW50IHN0YW5kYXJkIG9mIGxpdmluZy4uIApCbG93ZHJ5IGhhaXIsIGhvbGRpbmcgdGhlIGhhaXJkcnllciBhdCBsZWFzdCAxMiBpbmNoZXMgYXdheSBzbyB0aGF0IHlvdSBkbyBub3QgZGFtYWdlIHlvdXIgaGFpci4KIkluIGEgc2Vuc2UsIHRoZXkgd29ydGhsZXNzIGJlY2F1c2UgeW91IGNhbiBzZWxsIHRoZW0sIiBHdXRoZWlueiBzYWlkIGJ5IHRlbGVwaG9uZSB0aGlzIHdlZWsgZnJvbSBoaXMgbGF3IG9mZmljZSBpbiBGcmllbmRzd29vZCwgVGV4YXMuIEFzdHJvbmF1dHMgaW4gc2l4IG1pc3Npb25zIGJldHdlZW4gQXBvbGxvIDExIGluIDE5NjkgYW5kIEFwb2xsbyAxNyBpbiAxOTcyLiBUaGUgU292aWV0IFVuaW9uIGNvbGxlY3RlZCBhYm91dCAzMDAgZ3JhbXMgb2Ygcm9jaywgb3IgYWJvdXQgdHdvIHRoaXJkcyBvZiBhIHBvdW5kLCBkdXJpbmcgdW5tYW5uZWQgcHJvYmVzIHRvIHRoZSBtb29uLiAKVGhleSBhcmUgbm90IHN1cmUgaWYgdGhleSB3YW50IHRvIGJ1eSB0aG9zZSBvciBub3QuIApSQU06IEJ5IGp1c3QgaGF2aW5nIDEgcmFtIHN0aWNrIHlvdSB3aWxsIGJlIHJ1bm5pbmcgc2luZ2xlIGNoYW5uZWwgUkFNLCB3aGljaCB3aWxsIG1ha2UgeW91ciBDUFUgcnVuIHNsb3dlci4gMTYgR0IgUkFNIGlzIGFsc28gc2xpZ2h0bHkgY2hlYXBlciBwZXIgR0IsIGFuZCBwcmljZXMgYXJlIGxvdyByaWdodCBub3cuCldoaWxlIHRoZSBIYXdhaWkgSXJvbm1hbiBpcyBjb25zaWRlcmVkIHRoZSBncmFuZGRhZGR5IG9mIHRoZW0gYWxsLCB0aGUgSXJvbm1hbiBxdWFsaWZ5aW5nIHNlcmllcyBpbmNsdWRlcyAyOCBldmVudHMgKDIzIElyb25tYW4gYW5kIGZpdmUgSXJvbm1hbiA3MC4zIHJhY2VzKSBldmVudHMgdGhyb3VnaG91dCB0aGUgd29ybGQuIApDb3JtYW5uIGdhbWUgZ290IGEgYml0IHRyaWNraWVyLiAKRGlzdHVyYmluZ2x5LCB0aGlzIEZOQiBjb21taXR0ZWUgZm9jdXNlZCBvbiBib25lIGhlYWx0aCwganVzdCBsaWtlIHRoZXkgZGlkIDE0IHllYXJzIGFnby4gCkluc3RlYWQgb2YgYSBjYXJkIGJveCB3ZSBib3VnaHQgYSBnaWFudCBwbGFzdGljIGNhdWxkcm9uIGFuZCB3aWxsIGJlIHVzaW5nIHRoYXQgdG8gaG9sZCBjYXJkcyBhbmQgZ2lmdHMuIEkgYWxzbyB3ZWFyaW5nIGEgc3Bvb2t5IHRoZW1lZCBtaW5pIHRvcCBoYXQgSSBnb3QgY3VzdG9tIG1hZGUgb24gRXRzeSBpbnN0ZWFkIG9mIGEgdmVpbC4gCkRyIFJhbmRsZSBzYWlkIGdhbWJsaW5nIHdhcyBiZWNvbWluZyAiZmFyIG1vcmUgcGVydmFzaXZlIGluIG91ciBjdWx0dXJlIiwgd2l0aCBpbmNyZWFzaW5nbHkgc29waGlzdGljYXRlZHBva2VyIG1hY2hpbmVzIHRhcmdldGluZyBzcGVjaWZpYyBwZW9wbGUgYW5kIGJlY29taW5nIGFuIGFjY2VwdGVkIGZvcm0gb2YgZW50ZXJ0YWlubWVudC4gU2hlIGFsc28gc2FpZCB5b3VuZyBjaGlsZHJlbiB3ZXJlIGJlaW5nIGV4cG9zZWQgdG8gcG9rZXIgbWFjaGluZXMgYmVjYXVzZSBvZiB0aGVpciBwcmV2YWxlbmNlIGluIGZhbWlseSBmcmllbmRseSBjbHVicy4gClBsZWFzZSB2aWV3IG91ciB3aWtpIGZvciBzdWdnZXN0aW9ucyBvZiB3aGVyZSB0aGVzZSBzdWJtaXNzaW9ucyBjYW4gYmUgb2ZmZXJlZC4gCk9uY2UgSSBnb3QgYmFjayB0byBzZXJpb3VzbHkgdHJhaW5pbmcgbW9zdCBvZiBteSBzdHJlbmd0aCBjYW1lIGJhY2sgd2l0aGluIGEgY291cGxlIG1vbnRocyBhbmQgSSB3YXMgbWF0Y2hpbmcgb3IgYmVhdGluZyBteSBvbGQgbnVtYmVycyB3aXRoaW4gNiBtb250aHMuIApOQUggICBUaGUgbmVpZ2hib3Job29kIG1pZ2h0IGhhdmUgYSBzdWNjZXNzZnVsIGNhc2Ugb2YgY2xhaW1pbmcgdGhlIHdhbGt3YXkgYXMgYSBwdWJsaWMgc3BhY2Ugc2luY2UgaXQgd2FzIHVzZWQgZm9yIHNvIGxvbmcgYXMgc3VjaC4gVGhlIHByZXZpb3VzIG93bmVyIG1heSBub3QgaGF2ZSBoYWQgdGhlIHJpZ2h0IHRvIHNlbGwgaXQgYXMgcGF0aHMgYW5kIHJvYWRzIGJlY29tZSBwdWJsaWMgZG9tYWluIGFmdGVyIG5vdCBtdWNoIHRpbWUgYXQgYWxsLiAKRG8geW91cnNlbGYgYSBmYXZvciBhbmQgZG9udCBnbyB0byB0aGUgY29tbWVudCBzZWN0aW9uLiBEb250IG9wZW4gYSBjb252ZXJzYXRpb24gaW4gcHVibGljIGluIHJlZ2FyZCB0byB0aGlzIHRvcGljLiAKSXQgYSBkZXNjcmlwdG9yIGZvciB0cmVuZHMgYW5kIGJpZ2dlciBwaWN0dXJlIHRoaW5ncywganVzdCBhZGRyZXNzaW5nIHRoZSBlcmFzdXJlIGFuZCBvdGhlcmluZyBvZiBwZW9wbGUgd2hvIGFyZW4gc3RyYWlnaHQuIEl0IGFza2luZyBmb3IgdGhlIHdvcmxkIHRvIGFja25vd2xlZGdlIHRoYXQgZ2F5IHBlb3BsZSBleGlzdC4gClRoZSBhcmd1bWVudHMgY29udGludWUgZm9yIHRoZSBuZXh0IHRocmVlIGhvdXJzIHdoZXJlIHRoZXkgc2VlIG15IHBhc3Nwb3J0LCB3YWxsZXQsIHRha2UgbXkgcGhvbmUgZXRjLiBJIGtlZXAgcmVmdXNpbmcgdG8gcGF5IGFuZCB0ZWxsIHRoZW0gdG8gY2FsbCB0aGUgcG9saWNlLiAKSSByZWFkIGEgZG9jdW1lbnQsIEkgZG9uIGp1c3Qgc2F5IGlzIHdoYXQgSSB3aWxsIG9yIHdvbiBkbyBiZWNhdXNlIEROUnMgYXJlIG5vdCBibGFjayBhbmQgd2hpdGUsIGhlIHNheXMuIFdpbGwgd3JpdGUgdGhpbmdzIGxpa2UgYmUgb24gZGlhbHlzaXMgYnV0IG9ubHkgZm9yIGEgd2VlayBzbyB0aGV5IHRoaW5rIHRoZXkgdGhvdWdodCB0aGluZ3MgdGhyb3VnaCwgYnV0IGl0IHJlYWxseSBtb3JlIGNvbmZ1c2luZyBmb3IgdGhlIHBoeXNpY2lhbi4gQWxzbyBzYWlkIHRoYXQgd2hlbiBhIG1lZGljYWwgc2l0dWF0aW9uIGFjdHVhbGx5IHByZXNlbnRzIGl0c2VsZiwgbWFueSBwZW9wbGUgY2hhbmdlIHRoZWlyIG1pbmRzIGFib3V0IGhvdyB0byBwcm9jZWVkLiAKTG9sIG5vIHRoZSBuYXJyYXRpdmUgaXMgbm90IGNvcnJlY3QuIFlvdSBrZWVwIHBpY2tpbmcgYXJiaXRyYXJ5IHN0YXJ0aW5nIHBvaW50cyBhbmQgdGhlbiB1c2UgdGhhdCBhcyB5b3VyIGJhc2lzIHRvIGRlY2lkZSB3aG8gdGhlIHJpZ2h0ZnVsIG93bmVycyBhcmUuIFdoeSBkbyB5b3UgdGhpbmsgQnJpdGFpbiBkZWNpZGVkIHRvIHBhcnRpdGlvbiB0aGUgcmVnaW9uIGluIHRoZSBmaXJzdCBwbGFjZT8gKEhpbnQsIGl0IG5vdCBqdXN0IGJlY2F1c2Ugb2YgdGhlIGRpc3BsYWNlbWVudCBvZiBqZXdzIGFmdGVyIHd3MikuIFNlcmlvdXNseSwgZ28gcmVhZCBzb21lIGhpc3Rvcnkgb2YgdGhlIHJlZ2lvbiwgYW5kIGkgZG9uIG1lYW4ganVzdCB0aGUgbGFzdCA3MCBvZGQgeWVhcnMgYmVmb3JlIHBhcnJvdGluZyB0aGlzIHJpZGljdWxvdXMgIklzcmFlbCBzdG9sZSB0aGVpciBsYW5kIiByb3V0aW5lLgpCZWluZyBhbGl2ZSBpcyB0aGUgbW9zdCBzZWxmaXNoIHRoaW5nIHBvc3NpYmxlLCBidXQsIGF0IHRoZSBzYW1lIHRpbWUsIG5vIG9uZSBhc2tlZCB0byBiZSBhbGl2ZS4gCldoYXQgZG9lcyBHRSBoYXZlPyBOb3RoaW5nIHJlYWxseS5JdCBhbHNvIG5vdCByZWFsbHkgdGhlaXIgY2hvaWNlLCB0aGV5IGdvaW5nIHRvIHN1Ym1pdCBhIGJpZCAoc2F5aW5nIHdlIGNhbiBtYWtlIHdoYXQgeW91IHdhbnQsIGl0IGNvc3QgdGhpcyBtdWNoKSA5MCUgb2YgdGhlIG9yZ2FuaXphdGlvbnMgYnV5aW5nIGxvY29tb3RpdmVzIGhhdmUgdG8gZ28gZm9yIHRoZSBjaGVhcGVzdC5ydWNrdXM2NjYgIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IGRheXMgYWdvSSB0aGluayBpdCB3b3VsZCBiZSB0b28gaGVhdnkgbG9va2luZyBpbiBtb25vY2hyb21lLiBDbGllbnQgcmVhbGx5IGxvdmVzIHRoZSBnb2xkLCBidXQgSSBkaWRuIHRoaW5rIGEgZ29sZCBsb2dvIHdvdWxkIHRyYW5zbGF0ZSB3ZWxsIGFzIGEgbG9nbyAoeW91IHJpZ2h0IEkgYW0gZ29pbmcgdG8gbG9zZSBzb21lIG9mIHRob3NlIHllbGxvdyBhbmQgc2hhZGluZyBkZXRhaWxzIGFzIGl0IGlzIG5vdyB3aGVuIGlzIHNjYWxlZCBkb3duKS5JIGZpZ3VyZWQgdGhpcyB3b3VsZCBiZSBhIGdvb2Qgd2F5IHRvIHJlcHJlc2VudCBhIHN1biBzb2FrZWQgYmFybiBhbmQgdXNlIGNvbG9ycyB0aGF0IHJlc29uYXRlIHdpdGggdGhlIGJ1c2luZXNzIChzdW4gaXMgY3JpdGljYWwgdG8gZmFybWluZywgZXNwZWNpYWxseSBpbiB0aGUgUE5XOyBiYXJuIHJlZCBhbmQgZ29sZCBsb29rIG5pY2UgYW5kIGZpdCB0aGUgZmFybWVyIGxvb2sgd2VsbDsgdGhlcmUgYSAxMjAgeWVhciBvbGQgYmFybiBvbiB0aGUgY2xpZW50IHByb3BlcnR5IG92ZXJsb29raW5nIHRoZSB2ZWdldGFibGUgZmllbGQ7KVllYWgsIEkgYmVlbiB0cnlpbmcgdG8gc29ydCBvdXQgdGhvc2Ugc2hhcGVzLiAKV2VsbCBJJ20gbW9yZSBjb25mdXNlZCBub3cgdGhhbiBhbnl0aGluZy4gSW4gc29tZSB3YXlzIHdoYXQgaGUgaXMgc2F5aW5nIGFsbW9zdCBtYWtlcyBNT1JFIHNlbnNlLCB0aGUgd2F5IGhlIHNjcmFtYmxlZCBhYm91dCB0cnlpbmcgdG8gbWFrZSBleGN1c2VzIGFzIHRvIHdoeSB0aGUga2lkcyB3ZXJlbid0IHRoZXJlLiBIb3cgb2RkIGhlIGFjdGVkIGR1cmluZyB0aGUgaW50ZXJ2aWV3cy4gV2Uga25vdyBoZSdzIGEgbW9uc3RlciBidXQgbWF5YmUgaW1wdWxzaXZlIG1vbnN0ZXIgaXMgbW9yZSBhY2N1cmF0ZT8gSXMgaXQgcG9zc2libGUgdG8gYm90aCBwcmUgbWVkaXRhdGUgc29tZXRoaW5nIGFuZCBpbXB1bHNpdmVseSBkbyBpdD8KVG9wIFByb2ZpdGFibGUgR2FtZXMgZm9yIEludmVzdG9ycwpQbGVhc2UgcmVmZXIgdG8gdGhlIHdpa2kgbm90ZXMgZm9yIGN1cnJlbnQgdGhpbmtpbmcgYW5kIGZ1cnRoZXIgZ3VpZGFuY2UuLiAKKFdhcm5pbmcsIEkgZG9uIHdhbnQgdG8gZ2V0IGludG8gdGhlb3JldGljYWwgZGlzY3Vzc2lvbnMgYWJvdXQgZ2VuZGVyIG5vcm1zKSBCdXQsIHNvbWV0aW1lcyBpdCBuaWNlIHRvIGhhdmUgYSBkdWRlIGJlIGEgZHVkZS4gQSBiZWVyIGRyaW5raW5nLCBzcG9ydCB3YXRjaGluZywgcm91Z2ggYXJvdW5kIHRoZSBlZGdlcywgZ29vZCB3aXRoIHRoZWlyIGhhbmRzLCBub3Qgc3VwZXIgc2Vuc2l0aXZlLCBkdWRlLiAKRmVicnVhciAyMDEwLkF1Y2ggaW0gVmlkZW8gIHdlcmRlbiB2b24gZGVyIEVuZ2xpc2ggSGFyYm91ciBHcm91cCB3Y2hlbnRsaWNoIGpld2VpbHMgMiAgZSBhdXNnZXRyYWdlbi4gCiJJbiByZXRyb3NwZWN0LCBpdCBzZWVtcyBpbmV2aXRhYmxlIHRoYXQgZ2FtZXMgb2ZjaGFuY2Ugc2hvdWxkIGhhdmUgcGxheWVkIHNvIGxhcmdlIGEgcm9sZSBpbiB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlQW1lcmljYW4gY2hhcmFjdGVyLiBCeSB0aGUgdGltZSBvZiB0aGUgQW1lcmljYW4gV2FyIG9mIEluZGVwZW5kZW5jZSxmaW5hbmNlZCBpbiBsYXJnZSBwYXJ0IGJ5IGxvdHRlcmllcywgcHVibGljIGF1Y3Rpb25zIGhhZCBiZWVuIGFyb3V0aW5lIGFsdGVybmF0aXZlIHRvIHRheGF0aW9uIHNpbmNlIFF1ZWVuIEVsaXphYmV0aCBJIHNhbmN0aW9uZWRFbmdsYW5kJ3MgZmlyc3QgcmFmZmxlIGluIDE1NjYsIHRvIGZpbmFuY2UgaGFyYm9yIGltcHJvdmVtZW50cy4gSW50aGUgZWFybHkgc2V2ZW50ZWVudGggY2VudHVyeSBpdCB3YXMgYSBsb3R0ZXJ5IHRoYXQgZnVuZGVkIHRoZSBmaXJzdHBlcm1hbmVudCBFbmdsaXNoIHNldHRsZW1lbnQgaW4gTm9ydGggQW1lcmljYSBhdCBKYW1lc3Rvd24sIE5vcnRoVmlyZ2luaWEuIApBdm9pZCByb2xsaW5nIGRpcmVjdGx5IG92ZXIgam9pbnRzLCBib25lcyBhbmQgeW91ciBuZWNrLgpIb3dldmVyLCBvbiB0aGUgc2FtZSBkYXksIGFuanVuYWJlYXRzIGFsc28gaGFzIGEgc2hvdyBpbiBOZXcgWW9yay4gCktpZHMgYW5kIGFkdWx0cyBtYWtlIG1pc3Rha2VzLiBJdCBpcyBrbm93bi4KTWUsIGl0IHNlZW1zIGtpbmQgb2YgY3JhenkgYW5kIGx1ZGljcm91cywgc2FpZCBNeXNsaWNodWssIHdobyBob3N0ZWQgYWJvdXQgaGFsZiBhIGRvemVuIGNoYXJpdHkgZnVuY3Rpb25zIGluIGhpcyBob21lIGxhc3QgeWVhciwgYXMgd2VsbCBhcyBwZXJzb25hbCBwYXJ0aWVzIGZvciBIYWxsb3dlZW4sIENocmlzdG1hcyBhbmQgZm9yIGJ1c2luZXNzIGFzc29jaWF0ZXMuIApZb3UgcGxheSBwb2tlci4gCkNyYWNrZG93biBvbiBBbGJ1cnkncyBwb2tpZXMKVHJlYXRtZW50IGZvciBhIHNhcnRvcml1cyBzdHJhaW4gLyB0ZW5kb24gaW5mbGFtbWF0aW9uIC8gYnVyc2EgaW5mbGFtbWF0aW9uIGFyZSBhbGwgZmFpcmx5IHNpbWlsYXIuIEdyYWR1YXRlZCByZXR1cm4gdG8gYWxsIGFzcGVjdHMgb2YgdHJhaW5pbmcgbG9hZCBpbmNsdWRpbmcgZGlzdGFuY2UsIGludGVuc2l0eSwgaGlsbHMsIGZyZXF1ZW5jeSBldGMuIEljZSBhZnRlciBldmVyeSByaWRlLiAKTWFueSBDYXNpbm9zIGFyb3VuZCB0aGUgd29ybGQgcHJvZHVjZSBwb2tlciBjaGlwcyB0aGF0IGFyZSBjb25zaWRlcmVkIHRvIGJlIHBhcnQgb2YgbGltaXRlZCBlZGl0aW9ucywgb3IgZXZlbiBjb2xsZWN0b3Igc2V0cy4uIApEbyBub3QgcG9zdCBnaWZzIHRoYXQgc2hvdWxkIGJlIHZpZGVvcy4gRHVyYXRpb24gbXVzdCBiZSBsZXNzIHRoYW4gb3IgZXF1YWwgdG8gdHdlbnR5ICgyMCkgc2Vjb25kcy4KVGhlIHRlY2hub2xvZ3kgdGhyZWF0ZW5lZCB0aGVpciBwZXJzb25hbCBsaXZlbGlob29kLiAKSXQncyBhIGN1bHR1cmFsIGFjdGl2aXR5IHRoYXQgaXNuJ3QgYmFzZWQgb24gZWF0aW5nIG9yIGJ1eWluZywgc2F5cyBEb3Jpcy4gU2hlIGZlZWxzIGl0J3MgcGFydCBvZiBrZWVwaW5nIGFsaXZlICJ0aGUgaGlzdG9yeSBvZiBDaGluYXRvd24gYW5kIHRoZSBjb250cmlidXRpb25zIG1hZGUgYnkgbWFueSBDaGluZXNlIENhbmFkaWFucyB0byB0aGlzIGNpdHkgYW5kIGNvdW50cnkuIkluIHNvbWUgd2F5cywgdGhleSBhcmUgYWxzbyBtb3RpdmF0ZWQgYnkgImZpZ2h0cyBmb3IgQ2hpbmF0b3duIiBvZiB0aGUgcGFzdCwgZ29pbmcgYWxsIHRoZSB3YXkgYmFjayB0byB0aGUgc3RyaWtlcyBhZ2FpbnN0IHJhY2lzbSBpbiAxOTA3IHRvIHRoZSBwcm90ZXN0cyBvZiB0aGUgMTk3MHMgYWdhaW5zdCBhIGZyZWV3YXksIHNheXMgS2F0aHJ5biBMZW5ub24sIGFub3RoZXIgb3JnYW5pemVyLiAKRGVjaWRlZCB0byB0YWtlIG15IHNwYXJlIGNhc2ggYW5kIHBsYXkgc29tZSBsaXZlIDEvMiB0aGlzIHdlZWtlbmQuIFdlbnQgVGh1cnNkYXksIEZyaWRheSwgYW5kIFNhdHVyZGF5LCBib29rZWQgdGhyZWUgd2lubmluZyBzZXNzaW9ucy4gCk9uIHRoZSBleHBsaWNpdGx5IENocmlzdGlhbiAiVGhlIEdyZWF0IERpdmlkZSwiIHRoZSB0aXRsZSB0cmFjayBmcm9tIGhpcyBzb2xvIGRpc2MsIGV5ZXMgY2xvc2VkLCBoZSBsZWFuZWQgYmFjayBoaXMgaGVhZCBhbmQgc2hvb2sgaXQgZnJvbSBzaWRlIHRvIHNpZGUgb24gdGhlIGx5cmljcyAiWW91IHNldCBtZSBmcmVlIHRvIGxpdmUgbXkgbGlmZS4iIEFuZCBoZSByYWlzZWQgaGlzIGhhbmRzIGluIHdvcnNoaXAgd2hlbiBoZSBzYW5nICJIaWdoZXIuIgpIZSBlbW90aW9uYWxseSBhbmQgdmVyYmFsbHkgYWJ1c2l2ZSB0b3dhcmRzIG1vbS4gClRoaXMgd2Fzbid0IGEgcmFjaWFsbHkgbW90aXZhdGVkIHBsYW5uZWQgYXR0YWNrLiBCdXQgc29tZSBtb3RoZXJmdWNrZXIgbWFkZSBhIG1lbWUgc2F5aW5nIGl0IHdhcyBzbyBub3cgaXQgaXMgaXMuIEkganVzdCByZWFkIGEgY29tbWVudCBvZiBzb21lYm9keSBkZWZlbmRpbmcgU21vbGxldHQgc2F5aW5nIGl0IHdhcyBzaW1wbHkgYSBQUiBzdHVudC4gWW91IGFscmVhZHkgZXhwbGFpbmVkIGhpcyBldmVudCBwcmV0dHkgZGFtbiBnb29kIGFuZCB0aGF0J3Mgbm90IGEgUFIgc3R1bnQuIERyZXNzaW5nIGFzIFNwaWRlciBNYW4gYW5kIGNsaW1iaW5nIGEgeSdhbGwgYnVpbGRpbmcgaW4gVGltZXMgU3F1YXJlIGlzIGEgUFIgc3R1bnQuIFdoYXQgaWYgdGhlIGNvcHMgaGFkIGZvdW5kIHR3byB3aGl0ZSBtZW4gaW4gdGhlIHNhbWUgYXJlYSBhbmQgYXJyZXN0ZWQgdGhlbSBhbmQgY2hhcmdlZCB0aGVtIHdpdGggYSBoYXRlIGNyaW1lPyBUaGF0J3MgYmlnIGJveSBwcmlzb24gdGltZS4gVGhlIG9ubHkgcGVvcGxlIHRoYXQgc2hvdWxkIGJlIGRlZmVuZGluZyBTbW9sbGV0dCBhcmUgaGlzIHBhcmVudHMgYW5kIGhpcyBmdWNraW5nIGRlZmVuc2UgbGF3eWVycy4KTm90IGEgbGllLCBpdCB0aGUgcmVhbGl0eSBtYW55IG9mIHVzIGhhdmUgdG8gZmFjZS4gQWdhaW4sIEkgbm90IGJsYW1pbmcgdGhlIHN5c3RlbSAgIHRoZXJlIGFyZSByZWFzb25zIHdoeSBpdCBpcyBzby4gSSBqdXN0IHN0YXRpbmcgdGhhdCB0aGUgcGF0aCB0byBjaXRpemVuc2hpcCBpcyBhbnl0aGluZyBidXQgaXMgbm8gbW90aXZlIG9yIGluY2VudGl2ZSBmb3IgbWUgdG8gbGllLgpQYXJjZSBxdSB2ZXV0IG9idGVuaXIgdW4gbWFzc2FnZSBxdWF0cmUgbWFpbnMuIEogY2hhdWQsIGRpdCBpbCwgamUgdmFpcyBwcmVuZHJlIHVuZSBkb3VjaGUuIApUaGUgd29ybGQgc2hvdWxkIGJlIGZvcmdpdmVuIGZvciB0aGlua2luZyB0aGF0IHRoZSBhcnJpdmFsIG9mIERvbmFsZCBUcnVtcCBvbiB0aGUgVVMgcHJlc2lkZW50aWFsIHNjZW5lIGlzIGRpdmluZSByZXRyaWJ1dGlvbiBmb3IgQW1lcmljYSBpbnN0aXR1dGlvbmFsaXNlZCBsb3cgdmlldyBvZiBvdGhlciBuYXRpb25zLiBPciBHb2QgcmVidWtlIHRvIHRoZWlyIHBlcnNpc3RlbnQgYm9hc3RzLCBiYWNrZWQgYnkgbWlsaXRhcnkgbWlnaHQsIHRoYXQgdGhleSwgY29sbGVjdGl2ZWx5LCBhcmUgdGhlaXIgb3duIGdyZWF0ZXN0IGdpZnQgdG8gaHVtYW5pdHkuIEJ1dCwgd2hpbGUganVzdGlmaWVkLCB0aGlzIHZpZXcgbWlzc2VzIHByb2ZvdW5kIGlzc3VlcyB0aGF0IHRoZSBUcnVtcCBwcmVzaWRlbmN5IGNhbiBwb3RlbnRpYWxseSByYWlzZSBmb3IgZGlmZmVyZW50IHBhcnRzIG9mIHRoZSB3b3JsZCwgcGFydGljdWxhcmx5IHRoZSBwYXJ0IHdlIGxpdmUgaW4uClJlc2VhcmNoIGhhcyBzaG93biB0aGF0ICJwYWluIGJlaGF2aW9yIGlzIHJlbGF0ZWQgdG8gZGVjcmVhc2luZyBvZiBib3RoIHRlbXBlcmF0dXJlIGFuZCBiYXJvbWV0cmljIHByZXNzdXJlLiJPbmUgc3R1ZHkgbm90ZWQgdGhhdCA3NiUgdG8gODMlIG9mIHBhdGllbnRzIHdlcmUgYWJsZSB0byBwcmVkaWN0IHJhaW4gYnkgdGhlaXIgcmhldW1hdG9pZCBzeW1wdG9tcy4gVGhlIHN0dWR5IGFsc28gc2hvd2VkIHBvc2l0aXZlIHBhaW4gY29ycmVsYXRpb25zIHdpdGggYmFyb21ldHJpYyBwcmVzc3VyZSBpbiByaGV1bWF0b2lkIGFydGhyaXRpcyBwYXRpZW50cywgb3N0ZW9hcnRocml0aWMgcGF0aWVudHMsIGFuZCBmaWJyb215YWxnaWEgcGF0aWVudHMuW0d1ZWRqIEQsIFdlaW5iZXJnZXIgQS4gClRoZXkgZGlkbiBoYXZlIHRpbWUgdG8gdHJ5IHRvIGZpZ3VyZSBvdXQgaG93IHRvIHB1dCB0aGVpciBtb25leSBvbmxpbmUuIE15IGJhbmtyb2xsIGR3aW5kbGVkIGFuZCBkd2luZGxlZCB3aXRob3V0IHRoZSBhbWF6aW5nIHJha2ViYWNrIHRoYXQgSSBoYWQgZnJvbSBGVFAuIApTa2lwIEN1ZGR5LCB0aGUgY2FyZXRha2VyIChhbmQgY2FyZWdpdmVyKSBpcyB0b28gYnVzeSBjaGFuZ2luZyBkaWFwZXJzIHRvIGxpbmdlciBpbiB0aGUgcGFzdCwgYnV0IHdlIGRvIGRpc2NvdmVyIHRoYXQsIGRlc3BpdGUgaGlzIGRpZmZpY3VsdCBjaGlsZGhvb2QsIGhlIGhhcyBhcnJpdmVkIGluIGFkdWx0aG9vZCB3aXRoIGEgZ29vZCBoZWFydC4gVGhvdWdoIGhlIGhhcyBubyBleHBlcmllbmNlIG9yIHByb2NsaXZpdHkgd2l0aCBiYWJpZXMgaGUgc3RhcnRzIHRoZSBuZXdib3JuIG9uIHNraW0gbWlsayBiZWNhdXNlICJpdCBzZWVtZWQgaGVhbHRoaWVzdCIgaGUgbWFrZXMgYSBjb21wYXNzaW9uYXRlIGFuZCB3b3J0aHkgZmF0aGVyLiBFdmVuIGhpcyByb2JiZXJ5IGNvbnZpY3Rpb24gdHVybnMgb3V0IHRvIGhhdmUgYmVlbiBhbiB1bmZvcnR1bmF0ZSBpbXB1bHNlIHRvIHRha2UgdGhlIHJhcCBmb3IgaGlzIGJlc3QgZnJpZW5kLiBTbyBldmVuIGFzIFF1aW5kbGVuIHBhaW50cyBhbiBhY2N1cmF0ZSBwb3J0cmFpdCBvZiBoZXIgY2hhcmFjdGVycywgc2hlIGFsbG93cyB1cyB0byBsb3ZlIHRoZW0sIGEgYml0IGF0IGEgdGltZS4KVGhlIG1ham9yIGlzc3VlIGlzIHRoYXQgSSBhbSBsb29raW5nIGZvciBhIHByb2dyYW0gd2l0aCBsb3cgc3RyZW5ndGggY29tcG9uZW50ICAgSSBhbSB0cnlpbmcgdG8gYXZvaWQgaGlnaCBzdHJlbmd0aCBzZXRzIGluIHRoZSBuZWFyIGZ1dHVyZSAgIHdoaWNoIG1lYW5zIHRoYXQgSSBkb24gdGhpbmsgUEhVTCBvciA1LzMvMSAod2l0aCBzaXplIGVsZW1lbnRzKSBiYXNlZCBwcm9ncmFtcyB3aWxsIHNlcnZlIG1lIHdlbGwsIEkgdGhvdWdodCBhYm91dCBydW5uaW5nIEdWVC4gQW55IHJlY29tbWVuZGF0aW9uPyBJIGNvdWxkbiBmaW5kIHNvbWV0aGluZyB0aGF0IHdpbGwgZml0IG15IGxpbWl0YXRpb25zIGluIHRoZSB3aWtpLi4gClNob2NraW5nbHksIEF1c3RyYWxpYSdzIDIwMCwwMDAgcG9rZXIgbWFjaGluZXMgbWVhbnMgd2UgaGF2ZSBtb3JlIG9uZSBhcm1lZCBiYW5kaXRzIHBlciBjYXBpdGEgdGhhbiBhbnkgY291bnRyeSBpbiB0aGUgd29ybGQuIFRoYXQncyBvbmUgZm9yIGV2ZXJ5IDExNCBwZW9wbGUuCkJvZGllcyB3ZSB3YW50IGRvbiBleGlzdCBpbiByZWFsIHNwYWNlLCBidXQgdGhlIGltYWdpbmFyeSBzcGFjZSBvZiBjb21wdXRlciBnZW5lcmF0ZWQgb3IgYXQgbGVhc3QgaW1hZ2VzLi4gCkNoZWVycy4gCkkgaG9wZWZ1bCBpbiBvbmUgd2F5LCBhbmQgb25lIHdheSBhbG9uZS4gQ29tcHVsc29yeSB2b3RpbmcgcnVsZXMgb3V0IGV4dHJlbWlzbS4gV2UgbWlnaHQgYmUgYXMgc3VjY2VwdGlibGUgdG8gaXQgYXMgZXZlcnlvbmUgZWxzZS4gClRoZSBwcmVzZW50IGZhdm91cml0ZSBmb3JtIG9mIGl0IGlzIFRleGFzIEhvbGQnZW0uIApIYXZlIHlvdSBub3RpY2VkIHRoYXQgd2hlbiB5b3UgcGxheSBpbiBhIGxpdmUgY2FzaW5vIHlvdSBzZWVtIHVuY29udHJvbGxhYmxlPyBZb3Uga2VlcCBjb21pbmcgYmFjayB0byB0aGF0IGNhc2ggbWFjaGluZSB0byB3aXRoZHJhdyBjYXNoIHNvIHlvdSBjYW4gYmV0IG1vcmUuIFdlbGwsIGF0IGhvbWUsIHdoaWxlIGl0IGlzIGVhc3kgdG8gZ2V0IGxvc3QgaW4gdGltZSB3aGVuIHBsYXlpbmcgaW4gYSBjYXNpbm8sIHlvdSBhbHdheXMgaGF2ZSB3YXlzIHRvIHN0b3AgeW91cnNlbGYuIApQZW9wbGUgd2VyZSBzcGFtbWluZyBhYm91dCBsb290IGRyb3AgcmF0ZXMgYW5kIHNvbWUgcGVvcGxlIG9uIHRoaXMgc3ViIHJlZGRpdCB0b29rIHRoZWlyIHRpbWUgdG8gZ2l2ZSBCaW93YXJlIHNvbHV0aW9ucyBmb3IgaXQuIFlldCBCZW4gc2FpZCAid2UgYXJlIG1vbml0b3JpbmcgaXQiLiAKRXZlcnliYW5hbmEgIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IG1vbnRocyBhZ28KQWJoZWJlbiBiZXppZWh0IHNpY2ggZGFyYXVmLCBkYXMgS2FydGVuc3BpZWwgYXVmIGRlbiBUaXNjaCB6dSBsZWdlbiB1bmQgZWluZW4gU3BpZWxlciBkaWUgSGxmdGUgYWJoZWJlbiB6dSBsYXNzZW4uIERlciB1bnRlcmUgVGVpbCBkZXMgS2FydGVuc3BpZWxzIHdhbmRlcnQgbmFjaCBvYmVuLiBbNF0KSXQncyBwZXJzb25hbCBkYXNoYm9hcmQgbWFrZXMgbmF2aWdhdGlvbiBzZWFtbGVzcywgYmVjYXVzZSB5b3UgY2FuIHNlZSBhbiBpbnRlZ3JhdGVkIHZpZXcgb2YgeW91ciBoZWFsdGggZGF0YS4gWW91J2xsIGdldCB1cCB0byBkYXRlIGluZm9ybWF0aW9uIG9uIHlvdXIgaGVhcnQgcmF0ZSwgY2Fsb3JpZXMgYnVybmVkLCBzdGVwcyB0YWtlbiwgUkVNIHNsZWVwIHJhdGUsIGFuZCByZW1pbmRlcnMgdG8gbW92ZSB0aHJvdWdob3V0IHRoZSBkYXkuCkZ1bmRzIGhhdmUgYmVlbiB0YWtlbiwgYnV0IG5vIGRvY3VtZW50cyBmcm9tIGhvdGVsIGhhdmUgYmVlbiBzZW50LCBhbnlvbmUgZWxzZSBoYWQgdGhpcyBwcm9ibGVtLkFuc3dlciBmcm9tIGtsYXVkaWEga0ZlYiAyMDE5IEkgZGlkbiBleHBlcmllbmNlIHRoaXMgdHlwZSBvZiBpc3N1ZSBuZWl0aGVyLCBidXQgSSB3b3VsZCBkZWZpbml0ZWx5IHN1Z2dlc3QgdGhlIHNhbWUuIApBdWNoIG5pY2h0IHdpcmtsaWNoIGJlZ2VocnQgc2luZCBCbHVtZW4gYmVpIGRlbiBtZWlzdGVuIEhlcnJlbi4gU2llIGZyZXVlbiBzaWNoIHdlc2VudGxpY2ggZnRlciBiZXIgZXR3YXMgbWl0IGVpbmVtIFN0ZWNrZXIsIGFscyBiZXIgZXR3YXMsIGRhcyBuaWNodCBlaW5tYWwgZWluZW4gUG93ZXJrbm9wZiBoYXQgR2VzY2hlbmtlRGVyIFZhbGVudGluc3RhZyBpc3QgbmljaHQgZGF6dSBkYSwgZXVyZW0gU2NoYXR6IHp1IHNhZ2VuLCBkYXNzIGVyIGV1ZXIga2xlaW5lciBIYXVzaGFsdHMgIG9kZXIgR2FydGVuc2tsYXZlIGlzdC4gQWxzbyBzaW5kIFNjaG5lbGxrb2NodG9wZiBvZGVyIEhlY2tlbnNjaGVyZSBudW4gd2lya2xpY2ggbmljaHQgZ2VlaWduZXQsIHVtIGV1cmUgd2FocmVuIEdlZmhsZSBhdXN6dWRyY2tlbiFEZXIgU2lubiB2b20gVmFsZW50aW5zdGFnIGxpZWd0IGRvY2ggZGFyaW4sIHNlaW4gTGllYmUgenVtIEF1c2RydWNrIHp1IGJyaW5nZW4uIApEb2NrIGVuZGFzdCB0aWxsZ3JpcGEgZGV0dGEgZWZ0ZXIgZHUgaGFyIHByb3ZhdCBhbGxhIGFuZHJhIG1lZGVsIGVmdGVyc29tIG9tIGR1IGFua2xhZ2FyIGhvbm9tLCBkaW4gbWFrZSBrbm5lciBtYW4gdGlsbCBob25vbSwgZnJuZWthIG5nb3QgZmVsIGdyIG9jaCB0Y2thIGhhbnMgZnVzayBzcHJhciBidHRyZSBuc3RhIGduZy4uIApIZSBsaWtlIGEgbG90IG9mIElyaXNoIHBlb3BsZSB3aG8gaGF2ZSBnb25lIGFicm9hZCBhbmQgZG9uZSB3ZWxsIGJ1dCBoaXMgbGlmZSBpcyBqdXN0IG5vdCBmdWxmaWxsZWQgYW5kIGhlIGlzIGRyaW5raW5nIGhpbXNlbGYgdG8gZGVhdGggYmVjYXVzZSBvZiB0aGlzIGd1aWx0IGVhdGluZyBhd2F5IGF0IGhpcyBzb3VsLiBDYXN0IGluY2x1ZGVzIFN0ZXBoZW4gR29ybWFuIGFuZCBEZWlyZHJlIEpvbmVzLiBMYXN0IFRyYWluIEZyb20gSG9seWhlYWQgcGxheXMgdGhlIFRvd24gSGFsbCBzdHVkaW8gZnJvbSBNb25kYXkgRmVicnVhcnkgMjUgdG8gU2F0dXJkYXkgTWFyY2ggMiBhdCA4cG0uIApUaG91Z2ggaXQgbWF5IHNvdW5kIGRpZmZpY3VsdCBhdCBmaXJzdCwgYWZ0ZXIgcmVhZGluZyB0aGlzIGFydGljbGUsIHlvdSB3aWxsIGtub3cgeW91ciBvZGRzIGluIGFueSBnaXZlbiBzaXR1YXRpb24gaW4gbm8gdGltZS4gClNvIGFueSBjb21tYW5kZXIgd291bGQgc2F5IHllcy4gVGhlIGFuc3dlciBpcyB5ZXMuIApBcm1lbmlhbiBNaWtlIGFjdGlvbnMgZG9uIHJlZmxlY3QgdGhlIHZhbHVlcyBvZiBMQVRCIGFuZCBoZSB3b24gYmUgaW52aXRlZCBiYWNrIGZvciB0aGUgZm9yZXNlZWFibGUgZnV0dXJlClNoZSBjYW1lIHRocm91Z2ggYW5kIG1ldCBtZSB3aXRoIGZsb3dlcnMgYW5kIGFuIGFybWxvYWQgb2YgY29jb251dCB3YXRlciwgYSBDb21wbGV0ZSBDb29raWUsIGEgYmFuYW5hLCBhbmQgZXZlbiBhIG1pY2VsbGFyIHdhdGVyIGZhY2lhbCB3aXBlIHRvIGdldCB0aGUgc3dlYXQgb2ZmIG15IGdyaW15IGZhY2UuIApOaWNlIHRyeSBPZmZpY2VyLgoiQW5kIGhhZCBzb21lIG9mIHRoZSBncmVhdGVzdCBjcmVhdGl2aXR5IGV4cGVyaWVuY2VkIGZyaWVuZHNoaXAsIGZhbWlseSwgaGVhcnRicmVhaywgYmFiaWVzLCBldmVyeXRoaW5nIHRvZ2V0aGVyLiAKUmVjZW50bHkgQWRkZWQgUGhvdG9zCllvdSBnb3QgdGhlIHJpZ2h0IHdheSBvZiB0aGlua2luZyB0aGVyZS4gSWYgeW91IGNhbiB0aGluayBsaWtlIHRoYXQgZHVyaW5nIHRoZSBoYW5kIHdoaWxzdCBjb25zaWRlcmluZyB0aGUgcmFuZ2Ugb2YgaGFuZHMgdGhhdCB0YWtlcyB0aGlzIGxpbmUgaXQgbm90IG1hbnkgY29tYm9zIG9mIGhhbmRzIHRoYXQgeW91IGJlYXQuIApJIHdvdWxkIGRvIHRlcnJpYmxlIGFuZCBJIHdvdWxkIGd1ZXNzIHRoZSB2YXN0IG1ham9yaXR5IG9mIHRob3NlIGhlcmUgd291bGQgdG8uIFNvIG11Y2ggb2YgdGhlIHRhc3RpbmcgZXhwZXJpZW5jZSBpbiBteSBleWVzIGlzIGF0bW9zcGhlcmUsIHdoYXQgeW91J3ZlIGhhZCB0byBlYXQgYW5kIGhvdyB5b3UncmUgZmVlbGluZyB0aGF0IGRheS4gCldvdWxkbiBpdCBiZSBhbWF6aW5nIGlmIGEgaHVuZHJlZCB5ZWFycyBmcm9tIG5vdyBoaXN0b3JpYW5zIHdyb3RlIGFib3V0IHRoZSBBQ09STiBzZXggc2NhbmRhbHMgYW5kIGhvdyB0aGUgcmVzdWx0aW5nIHBhbmljIGhhZCB0aGUgdW5pbnRlbmRlZCBjb25zZXF1ZW5jZXMgb2YgZGlzbWFudGxpbmcgdGhlIG1pbGl0YXJ5IGluZHVzdHJpYWwgY29tcGxleD8uIApLYXJlbiBNeW5lcyBhIGxvbmd0aW1lIENpdmlsV2FyIHJlZW5hY3RvciBoYXMgYWx3YXlzIGhhZCB0aGUgY3JlYXRpdmVrbmFjayAgS2FyZW4gaGFzIG1hc3RlcmVkIG1hbnkgb2YgdGhlIHN0eWxlc3Nob3duIGluIEdvZGV5IGFuZCBQZXRlcnNvbnMgbWFnYXppbmVzIGZvcmNyZWF0aW5nIGJlYXV0aWZ1bCB0cmltcyBub3QgYXZhaWxhYmxlIGludG9kYXkgcmV0YWlsIHNldHRpbmdzLiAKV2hlbiB5b3UgY2xpY2sgdGhlIG9yYW5nZSAnZGVwb3NpdCcgYnV0dG9uIGxvY2F0ZWQgaW4gdGhlIHRvcCByaWdodCBjb3JuZXIgb2YgeW91ciB1c2VyIHRvb2wgYmFyIHlvdSB3aWxsIGJlIHByZXNlbnRlZCB3aXRoIHRoZSBDYXNoaWVyIHdpbmRvdy4gCkl0IGhhcyBhbHNvIGJlZW4gdXNlZCBvbiBzbG90IG1hY2hpbmVzLiBEaXN0cmljdCBDb3VydC4gClRoZWxyZWQgSUkgYWxzbyB3YXMgZ2l2ZW4gYSB0aXRsZSAgIHRoZSBVbnJkLiBUaGUgbmFtZSB0aGVscmVkIGlzIGNvbnN0cnVjdGVkIGZyb20gdGhlbCBtZWFuaW5nICdub2JsZScgYW5kIFJkIG1lYW5pbmcgJ2NvdW5zZWwnLiBUaGUgdGl0bGUgJ3RoZSBVbnJkJyB3YXMgYSBwbGF5IG9uIGhpcyBuYW1lJ3MgbWVhbmluZywgY2FsbGluZyB0aGVscmVkICd3aXRob3V0IGdvb2QgYWR2aWNlJy4gVGhpcyB0aXRsZSBoYXMsIG92ZXIgdGhlIHllYXJzLCBiZWVuIGNvcnJ1cHRlZCBpbnRvICd0aGUgVW5yZWFkeScuCkkgYmVlbiB0byB0aGlzIGJhci4gCkkgcGFzc2VkIGhpbSB3YWl0IGEgc2Vjb25kIHdhcyB0aGF0IENvZHkgUmVlZD8/IEkga2VwdCBnb2luZyBidXQgaXQgcmVhbGx5IGxvb2tlZCBsaWtlIGhpbS4gSSBkaWRuJ3Qgc2VlIGhpbSBvbiB0aGUgZW50cmFudCdzIGxpc3QgdGhvdWdoIGxhc3QgSSBjaGVja2VkLCB3aGF0J3MgZ29pbmcgb24/IEkga2VwdCBwdXNoaW5nIGFuZCBmZWx0IHByZXR0eSBnb29kIGZvciBtb3N0IG9mIGxhcCAyLiAKVGhlIG1lbiBwb3NlZCBhcyBhIG1vdGhlciBvbiBGYWNlYm9vayBhZHZlcnRpc2luZyBhIGJhYnlzaXR0aW5nIGpvYi4gV2hlbiB0aGUgZ2lybCBhcnJpdmVkIGF0IE1jTmVpbCdzIEJyb29rbHluIGFwYXJ0bWVudCBmb3IgdGhlIHBvc2l0aW9uLCB0aGUgZGVmZW5kYW50cyB0aHJlYXRlbmVkIGhlciBhdCBndW5wb2ludCwgc2V4dWFsbHkgYXNzYXVsdGVkIGhlciwgdGhlbiBwaW1wZWQgaGVyIG91dC4KUGVvcGxlIHRob3VnaHQgaGUgd2FzIGNyYXp5LiAKUG9saWNlIGFycmVzdGVkIHRoZSA0NyBtZW4gZHVyaW5nIHRoZSBzdGluZyBvdmVyIG5pbmUgZGF5cyBmcm9tIEp1bmUgdG8gTm92ZW1iZXIgbGFzdCB5ZWFyLiBUaGUgc2V2ZW4gY2hhcmdlZCBlYWNoIGZhY2Ugb25lIGNvdW50IG9mIG9idGFpbmluZyB0aGUgc2V4dWFsIHNlcnZpY2VzIG9mIGEgcGVyc29uIHVuZGVyIDE4IGFmdGVyIFZhbmNvdXZlciBwb2xpY2Ugc2V0IHVwIGFuIG9ubGluZSBzdGluZyBpbiB3aGljaCBhbiBvZmZpY2VyIHBvc2VkIGFzIGEgZ2lybCBiZXR3ZWVuIDE1IGFuZCAxNyB5ZWFycyBvbGQgdG8gYXJyYW5nZSBhIHNleCBhY3QgZm9yIG1vbmV5IHdpdGggZG96ZW5zIG9mIG1lbi4KRGUgbCwgaWwgaXJyYWRpYSB0YW50IHZlcnMgbGEgQ2hpbmUgb3JpZW50YWxlIHF1IGRpcmVjdGlvbiBkZSBsIEVuIENoaW5lLCBzb24gdXNhZ2UgbWRpY2luYWwgcmVtb250ZSBhdSBtb2lucyBhdSBYViBtZSBzaWNsZSBhdmFudCBKLiAKRXZlcnlvbmUgc3RvcHBlZCB0aGVpciBnYW1lcyB3aGVuIHRoZSBNdXNsaW0gY2FsbCB0byBwcmF5ZXIgY2FtZSBvdmVyIGEgbG91ZHNwZWFrZXIgZnJvbSBhIG5lYXJieSBtb3NxdWUgICBhbmQgdGhleSBwcm9tcHRseSByZXN1bWVkIHRoZSBkaWNlIGFuZCBjYXJkcyBvbmNlIHRoZSBwcmF5ZXIgZW5kZWQuQWhtZWQgZWFybmVkIHRlbnMgb2YgdGhvdXNhbmRzIG9mIGRvbGxhcnMgZWFjaCBkYXkgZnJvbSBodW5kcmVkcyBvZiBzdWNoIGdhbWJsaW5nIGRlbnMsIHNhaWQgdGhlIHBvbGljZW1lbiBhbmQgam91cm5hbGlzdCB3aG8ga25ldyBoaW0uIApBX3dpbGRfZHJ1bmtfYXBwZWFycyAgMSBwb2ludCAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpBdCBhIHBhcnR5IGF0IG91ciBob3VzZSB0aGV5IGR1bXBlZCBibG93aW5nIGJ1YmJsZXMgaW50byBvdXIga2lkZGllIHBvb2wgYW5kIGdvdCBpbnRvIGl0LCBzb2FraW5nIHRoZW1zZWx2ZXMgYW5kIHNwbGFzaGluZyB0aGUgb3RoZXIga2lkcywgdGhlbiByYW4gYXJvdW5kIGluc2lkZSB0aGUgaG91c2UgZ2V0dGluZyBzb2FweSB3YXRlciBldmVyeXdoZXJlLiAKV2hlbiB0aGUgbmV3cyBjYW1lIG9mIHRoZSBodWdlIGJ1c3QsIHRoaXMgd2FzIHRoZSBmaXJzdCB0aW1lIEkgaGFkIGhlYXJkIG9mIG1hc3NhZ2UgcGFybG9ycy4gSSBkaWQgbW9yZSByZXNlYXJjaCBhbmQgZm91bmQgdGhhdCB1bmxpa2UgdGhlIGVzY29ydCBhZ2VuY2llcyB3aGljaCBvcGVyYXRlZCBvdXQgb2YgYXBhcnRtZW50cyBvciBob3RlbHMgd2l0aCBhIHZlcnkgbGltaXRlZCBudW1iZXIgb2YgZ2lybHMsIHNvbWUgbWFzc2FnZSBwYXJsb3JzIHdvdWxkIHByZXNlbnQgbGluZXVwcyBvZiB1cCB0byAxMCBLb3JlYW4gZ2lybHMuIApHaXZlIGJhY2sgc2FmZSBzbW9raW5nIHJvb20gdG8gVmFuY291dmVyIGNyYWNrIHVzZXJzCkhUTUwgYW5kIHJlZ2V4IGdvIHRvZ2V0aGVyIGxpa2UgbG92ZSwgbWFycmlhZ2UsIGFuZCByaXR1YWwgaW5mYW50aWNpZGUuIFRoZSBjYW5ub3QgaG9sZCBpdCBpcyB0b28gbGF0ZS4gCkxlIGNvdXAgZGUgcG9rZXIgZGUgTm9haAozIHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnby4gCjAgbGF0aXR1ZGUgbWVhbnMgdGhlIE1pbGt5IFdheSBkaXNjIHBsYW5lLCBhbmQgOTAgbGF0aXR1ZGUgbWVhbnMgInN0cmFpZ2h0IHVwIiBvdXQgb2YgdGhlIE1pbGt5IFdheSBkaXNjLiAKSWYgbmVjZXNzYXJ5LCBhIHJlcG9ydCB3aWxsIGJlIG1hZGUgdG8gdGhlIHNpdGUgYWRtaW5pc3RyYXRpb24uIEluIGFjY29yZGFuY2Ugd2l0aCBSZWRkaXQgcG9saWNpZXMsIHRoZXJlIGlzIHplcm8gdG9sZXJhbmNlIGZvciB0aGlzLi4gCjEuIFBpY2sgZ3JlYXQgdGFibGUgZ2FtZXMuIFlvdSB3YW50IHRvIGNob29zZSBnYW1lcyBmb3IgeW91ciBDYXNpbm8gbmlnaHQgdGhhdCBhcmUgZnVuLCBhbmQgZWFzeSB0byBwaWNrIHVwIGFuZCBwbGF5LiAKVGhleSBjZXJ0YWlubHkgZGlkbid0IGhhdmUgYWNjZXNzIHRvIGluZ3JlZGllbnRzIHRvIGNvb2sgYXV0aGVudGljIENoaW5lc2UgZm9vZC4gVGhleSBhbHNvIHdvdWxkbid0IGhhdmUgaGFkIENoaW5lc2UgY3VzdG9tZXJzLiAKWW91IGNhbiBhZGRyZXNzIGN1c3RvbWVyIHN1cHBvcnQgdXNpbmcgYW55IG9mIHRoZXNlIGxhbmd1YWdlcy5HZXR0aW5nIHlvdXIgZnJlZSBiZXQgaW5jbHVkZXMgcmVnaXN0ZXJpbmcsIG1ha2luZyBhIGRlcG9zaXQgYW5kIHBsYWNpbmcgdGhlIG1pbmltdW0gYmV0LiBTaW1wbHkgcmVnaXN0ZXIgeW91ciA4ODhTcG9ydCBhY2NvdW50LCBhbmQgdGhlbiBkZWNpZGUgaG93IG11Y2ggeW91IGFyZSBnb2luZyB0byBkZXBvc2l0LiBPbmNlIHlvdSBoYXZlIG1hZGUgeW91ciBkZXBvc2l0IHlvdSBjYW4gc3RhcnQgcGxheWluZyBmb3IgdGhlIGZyZWUgYmV0IGJ5IHBsYWNpbmcgYSBtaW5pbXVtIG9mICQxMC4gCllvdSBhcmUgbm90IGFuIGFsbHkgdG8gdGhlbSwgc2ltcGx5IGFub3RoZXIgUE9DIHdobyBpcyBhIHRocmVhdCB0byB0aGUgIndoaXRlIHJhY2UiLiBFc3BlY2lhbGx5IGJlY2F1c2UgeW91IGFyZSBtaXhlZCwgeW91IGFyZSB0aGUgd2Fsa2luZyBlbWJvZGltZW50IG9mIHdoYXQgdGhleSBmZWFyIHRoZWlyIGNvdW50cnkgd2lsbCBiZWNvbWUuIApGb3IgZXhhbXBsZSwgdGhlcmUgaXMgYSBwbGF5ZXIgd2hvIGhhc24gcGxheWVkIGEgaGFuZCBpbiB0aGUgZmlyc3QgaG91ciB3aGlsZSB5b3UgYmVlbiBzaXR0aW5nLiAKU2VydmUgYXMgYSBzb3VuZGluZyBib2FyZCBmb3IgYWxsIFJlY3JlYXRpb24gcHJvZ3JhbXMgYW5kIHNlcnZpY2VzOwpGcmVlcm9sbHMgb2ZmZXIgbmV3IHBsYXllcnMgYSBmYW50YXN0aWMgb3Bwb3J0dW5pdHkgdG8gbWFrZSB0aGVpciBmaXJzdCBzdGVwIGluIHRoZSB0b3VybmFtZW50cyB3b3JsZCwgYW5kIGFsc28gYSBjaGFuY2UgdG8gbWFrZSBtb25leSEgRXhwZXJpZW5jZWQgcGxheWVycyBhbHNvIGxvdmUgZnJlZXJvbGxzICAgYWZ0ZXIgYWxsLCB0aGVyZSBpcyBubyByaXNrIG9yIGVudHJ5IGZlZSwgYnV0IHRoZXJlJ3Mgc3RpbGwgYSBwcml6ZSBwb29sIHRvIGdyYWIhQW5vdGhlciBsdWNyYXRpdmUgcmVhc29uIHRvIHN0YXJ0IHBsYXlpbmcgYXQgdG91cm5hbWVudHMgaXMgdGhlIGFkZGVkIHRvdXJuYW1lbnRzLCB3aGljaCBhcmUgYWxzbyBjYWxsZWQgZ3VhcmFudGVlZCB0b3VybmFtZW50cy4gSW4gYSByZWd1bGFyIHRvdXJuYW1lbnQgdGhlIHBvdCBpbmNsdWRlcyB0aGUgbW9uZXkgdGhhdCBwbGF5ZXJzIGJyaW5nIGluIHdpdGggdGhlaXIgYnV5IGluLCBzbyB0aGUgcG9vbCBpcyBpbiBwcm9wb3J0aW9uIG9mIHRoZSBlbnRyeSBmZWUgICBUaGUgbGFyZ2VyIHRoZSBidXkgaW4sIHRoZSBsYXJnZXIgdGhlIHByaXplIHBvb2wuIApPbmUgb2YgdGhlbSBzZW50IHVzIGFuIGludGVyaW9yIGRlY29yYXRvci4gCkFnYWluLCBhIGNlcnRpZmllZCBwcmVuYXRhbCBtYXNzYWdlIHRoZXJhcGlzdCBpcyBhIG11c3QsIGFuZCB0YWJsZXMgd2l0aCBob2xlcyBpbiB0aGUgbWlkZGxlIGZvciB0aGUgYmVsbHkgYXJlIGR1YmlvdXMgYW5kIGxpa2VseSBiZXN0IGF2b2lkZWQgZm9yIHNhZmV0eSByZWFzb25zIHNpbmNlIHRoZXkgZG9uJ3QgYWRlcXVhdGVseSBzdXBwb3J0IHRoZSB3ZWlnaHQgb2YgdGhlIGJhYnkuIEluc3RlYWQsIGEgbWFzc2V1c2UgY2FuIHBlcmZvcm0gYSBtYXNzYWdlIHdoaWxlIHRoZSBtb21teSBpbiB0aGUgbWFraW5nIGlzIGx5aW5nIG9uIGhlciBzaWRlIHByb3BwZWQgdXAgd2l0aCBwaWxsb3dzLCBvciBkZWxpdmVyIGEgbmVjayBhbmQgYmFjayBtYXNzYWdlIHdoaWxlIHNoZSdzIHNlYXRlZCB1cHJpZ2h0LiAKVGhlIG1vbmV5IHNhdmVkIHdpbGwgZ28gdG8gbWVkaWNhbCBiaWxscyBhbmQgcHVzaCB1cCBicmFzLiBJdCdzIGEgd2luIHdpbiBzaXR1YXRpb24uIApXaGVuIEkgd2VudCB0byBnbyByaWRlIHRoZSB0cmFtIGl0IHdhcyBjbG9zZWQgYXQgMTozMC4gSSBoYW5kaWNhcHBlZCBhbmQgYmV0d2VlbiBzaXR0aW5nIGluIGEgcmlkZSBmb3IgYW4gaG91ciBhbmQgdGhlIGV4dHJhIHdhbGsgSSBub3QgZmVlbGluZyB0b28gZ3JlYXQgYWJvdXQgdG9uaWdodC4gClBvc3RmbG9wOiBQbGF5ZXIgQSBiZXRzICQzMC4gClRoZXkgbXVjaCBzdGVhbHRoaWVyIHRoYW4gdGhlIGRldGFpbHMgc3Vycm91bmRpbmcgU1MgY2FzZS4gVGhlIGZhY3QgdGhhdCBzaGUgbWV0IHRoZSBtZW4gaW4gYSBwdWJsaWMgcGxhY2UsIGZvbGxvd2VkIHRoZW0gdG8gYSB2ZWhpY2xlIHBhcmtlZCBpbiBhIHB1YmxpYyBnYXJhZ2UsIHdhcyBjYXVnaHQgb24gdmlkZW8sIGNhbGxlZCBmcm9tIG9uZSBvZiB0aGUgZ3V5IGNhcnMsIGV0Yy4gClRoZXJlIGFyZSBhIGJ1bmNoIG9mIHBlb3BsZSBvbiB0aGlzIHBvc3QgbGl0ZXJhbGx5IHNheWluZyBoZSBzaG91bGRuIGdvIHRvIHByaXNvbiBvciBhY3R1YWxseSBnZXQgYW55IHB1bmlzaG1lbnQgYmVjYXVzZSAiaXQganVzdCBtYWtlIGhpbSB3b3JzZSIgb3IgIml0IGJlIHRvbyBoYXJkIG9uIGhpbSA6KCIgd2hpY2ggaXMgd2hhdCBJIHVwc2V0IGFib3V0LCBiZWNhdXNlIEkgcmVhbGx5IGNhbiBsaWtlLiAKV2hpbGUgaW4gdGhlaXIgY2FyZSBzaGUsIGEgdGhpcnRlZW4geWVhciBvbGQsIHdhcyByZWd1bGFybHkgcmFwZWQgYW5kIHBvc3NpYmx5IGJlYXRlbiBieSBtb3N0IGFjY291bnRzLiBXaGVuIFBvY2Fob250YXMgYmVjYW1lIHByZWduYW50LCBKb2huIFJvbGZlIG1hcnJpZWQgaGVyLiAKSW4gYW5vdGhlciBzcG90LCBhZ2FpbnN0IGEgeW91bmcgQXNpYW4ga2lkLCB3ZSBnZXQgYSBMT1Qgb2YgbW9uZXkgKG5vdCBhbGwsIHRob3VnaCkgaW4gd2l0aCBteSBLSyB0byBoaXMgUVEuIApUaGVpciBzZXQgdXAgaXMgdGhlIiBzYW1lIGFzIHRoZSBGaXNoZXIgIG1lbidzIENvb3BlcmF0aXZlIEFzc24uIApJIHJlYWxseSB3b25kZXIgaWYgaXQgaXMuIApXaHkgaXMgR29vZG1hbiBidXNpbmVzcyB0aGUgbGF3IHByb2JsZW0/IFdoeSBzaG91bGQgdGhlIHJlc3Qgb2YgdXMgYmUgcHV0IGluIGRhbmdlciBiZWNhdXNlIHRoaXMgbWFuIGRpZG4gaGF2ZSB0aGUgc2Vuc2UgdG8gY2FsbCBhIEx5ZnQgb3IgYW4gVWJlciwgb3IsIHNpbXBseSBjYWxsIGl0IGEgbmlnaHQgaG91cnMgYmVmb3JlPwpCdXp6YXJkcywgSGF3a3MgYW5kIFZ1bHR1cmVzQ29tbW9uIEJ1enphcmRzIGFyZSBub3QgdG8gYmUgY29uZnVzZWQgd2l0aCB0dXJrZXkgdnVsdHVyZXMgKENhdGhhcnRlcyBhdXJhKSB0aGF0IGFyZSBrbm93biBhcyBidXp6YXJkcyBpbiB0aGUgVVNBLiBDb21tb24gQnV6emFyZHMgYXJlIHJlbGF0ZWQgdG8gYmlyZHMgY2FsbGVkIGhhd2tzIGluIE5vcnRoIEFtZXJpY2EsIHN1Y2ggYXMgUmlkZ3dheSdzIEhhd2sgKEJ1dGVvIHJpZGd3YXlpKSBhbmQgdGhlIFJlZCBUYWlsZWQgSGF3ayAoQnV0ZW8gamFtYWljZW5zaXMpLiBUaGV5IGFyZSBhbHNvIHJlbGF0ZWQgdG8gdGhlIChzbGlnaHRseSBsYXJnZXIgYW5kIHBhbGVyKSBSb3VnaCBMZWdnZWQgQnV6emFyZCAoQnV0ZW8gbGFnb3B1cykgYnV0IGFyZSBub3QgaW4gdGhlIHNhbWUgZ2VudXMgYXMgdGhlIChwYWxlciwgc2xpbW1lciBoZWFkZWQpIEhvbmV5IEJ1enphcmQgKFBlcm5pcyBhcGl2b3J1cykuCk1vbW9hJ3MgY2hvaWNlIG9mIGFjY2Vzc29yeSBtYWRlIGFuIG9idmlvdXMgc3BsYXNoIG9uIHRoZSByZWQgY2FycGV0LCBidXQgaXQgYWxzbyBtYXkgaGF2ZSBwcmFjdGljYWwgdmFsdWUuIElmIHlvdSBoYXZlIGxvbmcgaGFpciwgd2VhcmluZyBhIHNjcnVuY2hpZSByYXRoZXIgdGhhbiBhIHJlZ3VsYXIgaGFpciB0aWUgY2FuIHByb3RlY3QgeW91ciBsb2NrcyBmcm9tIGRhbWFnZS4gIklmIHlvdXIgaGFpciBpcyBiZWluZyBwdWxsZWQgYmFjayBpbiBhIHRpZ2h0IGtub3QsIHRyYWN0aW9uIGFsb3BlY2lhIHdvdWxkIGJlIGEgcmlzaywgZXNwZWNpYWxseSBpZiB0aGUgaGFpciBpcyBsb25nIGFuZCBwYXJ0aWN1bGFybHkgd2F2eSwiIHNhaWQgRXZhbiBSaWVkZXIsIGFuIGFzc2lzdGFudCBwcm9mZXNzb3Igb2YgZGVybWF0b2xvZ3kgYXQgTmV3IFlvcmsgVW5pdmVyc2l0eS4KIklmIHRoZXkgY2FuJ3QgcGF5IHRoZWlyIHJlbnQsIG9yIGlmIHRoZWlyIGNhcmVnaXZlciBpcyBubyBsb25nZXIgYWJsZSwgdGhleSdsbCB3aW5kIHVwIGluIGEgc2hlbHRlciwiIHNhaWQgQmlzc29ubmV0dGUuICJUaGVyZSBzaG91bGQgYmUgYSBwbGFuIHNldCBpbiBwbGFjZSIgZm9yIHRob3NlIGluIG5lZWQgdG8gYmUgcmVsb2NhdGVkLCBzaGUgc2FpZC4KVGhlcmUgd2FzbiBhIGxhY2sgb2YgZXZpZGVuY2UuIFR3byBzdHVkZW50cyBsaXRlcmFsbHkgd2l0bmVzc2VkIGhpbSByYXBpbmcgaGVyIGFuZCBoZSB3YXMgZm91bmQgZ3VpbHR5IG9mIDMgY2hhcmdlcyBvZiBmZWxvbnkgc2V4dWFsIGFzc2F1bHQuIApLcmlzdGluZSBwcm9taXNlcyB5b3UgdHdvIHRoaW5nczogMS4gCkRlZmluaXRlbHkgY3VyaW91cyBhYm91dCByZXN1bHRzIGhlcmUuIEkgdGhpbmsgdGhpcyBpcyBhIHJlYWxseSBpbnRlcmVzdGluZyBoYW5kIGZyb20gYSByYW5nZSBkeW5hbWljLgpTbywgdGhpcyBtZXRob2QgaXMgbm90IGZvb2wgcHJvb2YuIApJZiB5b3UgdGhpbmsgaGUgaXMgcmFpc2luZyB3aWRlIGFuZCBhIHBhaXIgb2YgSnMgb3IgMTBzIHdvdWxkIG1ha2UgdGhlIGJlc3QgaGFuZCwgeW91IHNob3VsZCA0QiBwcmUgdG8gNTAwLiAKTGVzIGRvbnMgYXV4IHBhcnRpcyBwb2xpdGlxdWVzLCBwcm92ZW5hbnQgZGUgcmVzc29ydGlzc2FudHMgdHJhbmdlcnMgdml2YW50IGRhbnMgZGVzIHBheXMgZXh0cmlldXJzICBsJ1VFIGNvbW1lIGxhIFN1aXNzZSwgc29udCBpbGxnYXV4IGVuIEFsbGVtYWduZS4gTGVzIGRvbnMgZGUgcGx1cyBkZSA1MC4wMDAgZXVyb3MgZG9pdmVudCB0cmUgaW5zY3JpdHMgZGFucyB1biByZWdpc3RyZSB0ZW51IHBhciBsZSBwYXJsZW1lbnQsIGNlIHF1aSBuJ2EgcGFzIHQgZmFpdCBkYW5zIGxlIGNhcyBkZXMgZGV1eCBkb25zIHBlcnVzIHBhciBsJ0FmRC4KSXQgZ2V0dGluZyBncmVhdCByZXZpZXdzLi4gClNvIGJlZm9yZSB5b3UgZ28gYW5kIGJldCB0aGUgZmFybSBiZWNhdXNlIFdhbGwgU3QuIApZb3VyIGF0dGl0dWRlIGlzIHBhcnQgb2YgdGhlIHByb2JsZW0uIFBlb3BsZSBpbiBDb3JwdXMgYXJlIHNoaXR0eT8gV2hhdCBwZW9wbGU/IEFsbCBwZW9wbGU/IFdoYXQgYXJlIHRoZXkgInJ1ZGUiICJpbmNvbnNpZGVyYXRlIiBhYm91dD8gSSBrbm93IHNvIG1hbnkgaGFyZCB3b3JraW5nLCBjb25zaWRlcmF0ZSBraW5kIHBlb3BsZSBpbiB0aGlzIHRvd24uIApMJ2FsaW1lbnRhdGlvbiBkZXMgcGFuZ2FzIGVzdCBjb21wbHRlbWVudCBlbiBkZWhvcnMgZGUgdG91dGUgcmdsZW1lbnRhdGlvbiBqdWRpY2lhaXJlLiBMZSBwYW5nYSBncmFuZGl0IDQgZm9pcyBwbHVzIHZpdGUgcXVlIGRhbnMgbGEgbmF0dXJlLCAgbCd0YXQgbm9ybWFsLiBEZSBwbHVzLCBsZXMgcGFuZ2FzIHNvbnQgaW5qZWN0cyBhdmVjIChQRUUpLiBRdWVscXVlcyBzY2llbnRpZmlxdWVzIG9udCBkY291dmVydCBxdWUgc2kgbCdvbiBpbmplY3RhaXQgbGVzIGZlbWVsbGVzIHBhbmdhIGF2ZWMgZGVzIGhvcm1vbmVzIGZtaW5pbmVzIGRyaXZlcyBkJ3VyaW5lIGRzaHlkcmF0ZSBkZSBmZW1tZXMgZW5jZWludGVzLCBsYSBmZW1lbGxlIHBhbmdhIHByb2R1aXJhaXQgc2VzIHVmcyBwbHVzIHJhcGlkZW1lbnQgZXQgZW4gZ3JhbmRlIHF1YW50aXQsIGNlIHF1aSBuJ2Fycml2ZXJhaXQgcGFzIGRhbnMgdW4gZW52aXJvbm5lbWVudCBuYXR1cmVsICh1bmUgZmVtZWxsZSBwYW5nYSBhcnJpdmUgYWluc2kgIHByb2R1aXJlIDUwMC4wMDAgdWZzIGVuIHVuZSBzZXVsZSBmb2lzKS4gRGUgZmFpdCwgY2Ugc29udCBkZXMgcG9pc3NvbnMgcXVpIG9udCBkZXMgaG9ybW9uZXMgaW5qZWN0YWJsZXMgKHByb2R1aXRlcyBwYXIgdW5lIGVudHJlcHJpc2UgcGhhcm1hY2V1dGlxdWUgY2hpbm9pc2UgcG91ciBhY2NscmVyIGxlIHByb2Nlc3N1cyBkZSBjcm9pc3NhbmNlIGV0IGRlIHJlcHJvZHVjdGlvbi4KSmUgcmFwcGVsbGUgcXVlIGxlIHNldWwgbW95ZW4gZGUgbGltaXRlciBsYSBwcm9zdGl0dXRpb24gYydlc3QgZGUgcmVzdGF1cmVyIGwnY29ub21pZSBhZmluIGQnb2ZmcmlyIGFzc2V6IGRlIGpvYnMgbW90aXZhbnRzIGV0IGNvcnJlY3RlbWVudCBybXVucnMgIVJvbGFuZCBEdW1hcyBlc3QgZGV2ZW51ICJndGV1eCIgOiBpbCBhY2N1c2Ugbm90cmUgSXpub2dvdWQgcHJvdmlzb2lyZSBkJ3RyZSBzb3VzICJpbmZsdWVuY2UganVpdmUiR3Jvc3NlIG1vdGlvbiBkYW5zIGwnaGV4YWdvbmUgY2FyIGxhIGdhZmZlIGVzdCBkb3VibGUsIGNhciBpbCBhIHZpb2wgZGV1eCAidGFib3VzIjogb3NlciBwYXJsZXIgZGUgbCdpbmZsdWVuY2Ugbm9uIHBhcyBqdWl2ZSBtYWlzIHNpb25pc3RlIHB1aXNxdSdvbiBlc3QgZGFucyBsZSBkb21haW5lIG5vbiBkZSBsYSByZWxpZ2lvbiBtYWlzIGQndW5lIGlkb2xvZ2llIHBvbGl0aXF1ZSBwcm9mYW5lIGphZGlzIHRlbnUgcG91ciBocnRpcXVlIGV0IHF1ZSBkJ2F1dHJlIHBhcnQgaWwgbWV0IGEgc3VyIGxlIGNvbXB0ZSBkJ3VuZSBmZW1tZSBBbm5lIEdyYXZvaW4uQydlc3QgZW4gZWZmZXQgZnJhbmNoZW1lbnQgImNvZXVyYW50IiBjb21tZSBkaXQgTWFtb24sIGplIHZldXggZGlyZSBIYW1vbiwgY2FyIGNldHRlIGZlbW1lIGVzdCB1bmUgZ3JhbmRlIG11c2ljaWVubmUsIHVuZSBleGNlbGxlbnRlIHZpb2xvbmlzdGUgcXVpIGEgZHBhc3Mgc2EgY3VsdHVyZS4gCkJ1dCBwZW9wbGUgb3V0c2lkZSBXaW5kc29yIHNlZSBpdCBkaWZmZXJlbnRseSwgaGUgc2FpZC4gCjMuIFRMSiBoYXMgb3ZlciBkb3VibGUgdGhlIGFtb3VudCBvZiBhdWRpZW5jZSByZXZpZXdzIHRoYW4gYm90aCBURkEgYW5kIEluZmluaXR5IFdhciB3aGVuIGJvdGggdGhvc2UgbW92aWVzIHNvbGQgd2F5IG1vcmUgdGlja2V0cy4gSXQncyBvYnZpb3VzIHRoYXQgYSB2b2NhbCBtaW5vcml0eSB3YXMgdmVyeSB1cHNldCBhbmQgcmV2aWV3IGJvbWJlZCBpdCBhcyBhIGZvcm0gb2YgInByb3Rlc3QiIHRvIGZyYW1lIHRoZSBmaWxtIGFzIGEgZmFpbHVyZQpUaGUgcGxheWVycyB3aG8gaGF2ZSB0byBjb250cmlidXRlIHRoZXNlIGJsaW5kcyByb3RhdGVzIG9uIHBvc2l0aW9uIHRvIHRoZSBsZWZ0IGFmdGVyIGVhY2ggaGFuZC4gSW4gdG91cm5hbWVudCBwbGF5LCBhbiBhZGRpdGlvbmFsIGZvcmNlZCBiZXQsIGNhbGxlZCBhbiBhbnRlLCBpcyBhbHNvIHNvbWV0aW1lcyB1c2VkIGluIGFkZGl0aW9uIHRvIHRoZSByb3RhdGluZyBibGluZC4uIApJdCBpcyBhbHNvIGtlZXBpbmcgYW4gZXllIG9uIGl0cyBjdXJyZW50IGhlYWRxdWFydGVycyBhdCAxMzQ1IFNpeHRoIEF2ZS4sIHdoZXJlLCBhY2NvcmRpbmcgdG8gQ29TdGFyLCBpdCBsZWFzZXMgODU0LDcwNSBzcXVhcmUgZmVldCB0aGF0IGV4cGlyZXMgaW4gMjAyNCBidXQgZG9lcyBub3Qgb2NjdXB5IGFsbCB0aGF0IHNwYWNlLiBPd25lciBGaXNoZXIgQnJvcy4gaXMgYWxzbyBpbiB0aGUgbWlkZGxlIG9mIHJldmFtcGluZyB0aGlzIG9sZGVyIGJ1aWxkaW5nLgpCZSB0aGVyZSBmb3IgaGltIGJ5IGJlaW5nIHRoZXJlIHdpdGggaGltLiAKSSB1bmRlcnN0YW5kIHdoeSB0aGUgbWlsaXRhcnkgd2lmZSBpZGVudGl0eSBiZWNvbWVzIHNvIGltcG9ydGFudCBmb3Igc28gbWFueSBTT3MgYW5kIEkgbm90IGhlcmUgdG8gdGVsbCB0aGVtIHRoZXkgd3JvbmcsIGJ1dCBJIGRvIHRoaW5rIGl0IGEgc2VsZiBmdWxmaWxsaW5nIHByb3BoZWN5Li4gCjUnOSBmZW1hbGUgaGVyZSwgSSBsaWtlIHRhbGwgbWVuLCBob3dldmVyIEkndmUgb25seSBldmVyIGhhZCBsb25nIHJlbGF0aW9uc2hpcHMgd2l0aCBzaG9ydCBtZW4uIFRoZSBvbmVzIEkgd29uJ3QgZGF0ZSBhcmUgdGhlIG9uZXMgdGhhdCBjb25zdGFudGx5IHBvaW50IG91dCBob3cgdGFsbCBJIGFtLiBJJ3ZlIG5ldmVyIG9uY2UgdGFsa2VkIHRvIGEgZ3V5IGFuZCBzYWlkICJ3b3cgeW91J3JlIHNvIHNob3J0Ii4gClNoZSBhbmQgTm8gTGltaXQgYXJlIHJhaXNpbmcgbW9uZXkgdG8gaGVscCBoZXIgZ2V0IGFuIGFybSB3aXRoIGZpdmUgd29ya2luZyBmaW5nZXJzLiAKVGhlIHBvbGwgc2hvd3MgeW91bmcgQ2FuYWRpYW5zIGFyZSB0aGUgbW9zdCBsaWtlbHkgdG8gYmUgaHVydCBieSBoaWdoZXIgaW50ZXJlc3QgcmF0ZXMuIFNvbWUgNTEgcGVyIGNlbnQgb2YgMTggIHRvIDM0IHllYXIgb2xkIHJlc3BvbmRlbnRzIHNhaWQgaGlnaGVyIGJvcnJvd2luZyBjb3N0cyB3ZXJlIGN1cnRhaWxpbmcgc3BlbmRpbmcuIAo5NCA5NikgQWxsIG9mIHRoZXNlIHNvbmdzIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXM6IE11cmRlciBNeSBIZWFydCAoZmVhdC4gTGFkeSBHYUdhKSwgQmlnIEdpcmwgTm93IChmZWF0LiBMYWR5IEdhR2EpLCBDaGlsbGluIChmZWF0LiBMYWR5IEdhR2EpIC4gOTcgOTkpICIgQm9ybiBUaGlzIFdheSAoRGVsdXhlIEFsYnVtIEJvbnVzIFNvbmdzKSIgQmxhY2sgSmVzdXMgKyBBbWVuIEZhc2hpb24sIEZhc2hpb24gb2YgSGlzIExvdmUsIFRoZSBRdWVlbi4gQ2FuIG5hYiB0aGVzZSBuZXdlc3QgZGVsdXhlIGFsYnVtIHNvbmdzIGZyb20gaVR1bmVzISAxMDApIDMgV2F5IChUaGUgR29sZGVuIFJ1bGUpIFtmZWF0LiAKTGVhcm5pbmcgdG8gdXNlIHNoaW1tZXIgcHJvcGVybHkgaXMgb25lIG9mIHRoZSBiaWdnZXN0IGRwcyBnYWlucyBpbW8uLiAKVGhpcyBpcyBhbGwgd2VsbCBhbmQgZ29vZCwgYW5kIG1hbnkgaW5kdXN0cnkgcHJhY3RpdGlvbmVycyBhbmQgbWVtYmVycyBvZiB0aGUgZ2VuZXJhbCBwdWJsaWMgYXJlIGluIGFncmVlbWVudCB0aGF0IHN1Y2ggdW5zYXZvcnkgYXNwZWN0cyBvZiB0aGUgaW5kdXN0cnkgaGF2ZSB0byBiZSBkZWFsdCB3aXRoLi4gCkUyOiBUaGUgY29udmVyc2F0aW9ucyBiZWluZyBnZW5lcmF0ZWQgYnkgdGhpcyBjb21tZW50IGFyZSBpbmNyZWRpYmx5IGludGVyZXN0aW5nLCBhbmQgdGhpcyBpcyBjdXJyZW50bHkgbXkgbW9zdCB1cHZvdGVkIGNvbW1lbnQgb2YgYWxsIHRpbWUuIEkgZ2VudWluZWx5IHN1cnByaXNlZCBwZW9wbGUgZGlkbiBrbm93IGFib3V0IHRoaXMsIG9yIGRpZG4ga25vdyB0aGUgc3BlY2lmaWNzIGJlaGluZCBpdC4gVGhlIFRMRFIgaXMgdGhhdCBHaWRlb24gY2hlY2tlZCBvdXQsIGFuZCBoZSBsZWZ0IGl0LCBubyBkb3VidCwgdG8gaGVscCB3aXRoIGdvb2QgUm9ja3kgcmV2aXZhbC4KQXMgSSBnb3R0ZW4gb2xkZXIgSSBtZXQgbW9yZSBpbnRlcmVzdGluZyBwZW9wbGUgZnJvbSBtb3JlIGRpdmVyZ2VudCBiYWNrZ3JvdW5kcyB0aGF0IEkgaG9wZSB3aWxsIGJlIGluIG15IGxpZmUgZm9yIGEgbG9uZyBsb25nIHRpbWUuIApMZWFybiBzb21lIGJhc2ljIHBva2VyIHRhYmxlIGV0aXF1ZXR0ZS4gTm8gb25lIHdhbnRzIHRvIGZlZWwgbGlrZSB0aGUgcm9va2llIGF0IHRoZSB0YWJsZSwgc28gbGVhcm5pbmcgc29tZSBiYXNpYyBldGlxdWV0dGUgY2FuIGhlbHAgeW91IHRvIGFwcGVhciBtb3JlIGtub3dsZWRnZWFibGUgYW5kIGZlZWwgbW9yZSBjb21mb3J0YWJsZSBkdXJpbmcgdGhlIGdhbWUuIApCdXQgd2UgdGhpbmsgdGhlIER1ZSBQcm9jZXNzIENsYXVzZSByZXF1aXJlcyBhIGRpZmZlcmVudCByZXN1bHQgd2hlbiB3ZSBkZWFsIHdpdGggdGhlIGZhaWx1cmUgb2YgdGhlIFN0YXRlIHRvIHByZXNlcnZlIGV2aWRlbnRpYXJ5IG1hdGVyaWFsIG9mIHdoaWNoIG5vIG1vcmUgY2FuIGJlIHNhaWQgdGhhbiB0aGF0IGl0IGNvdWxkIGhhdmUgYmVlbiBzdWJqZWN0ZWQgdG8gdGVzdHMsIHRoZSByZXN1bHRzIG9mIHdoaWNoIG1pZ2h0IGhhdmUgZXhvbmVyYXRlZCB0aGUgZGVmZW5kYW50Li4gCkRvIHRoZSBtYXRoIGFuZCB2aXNpdCBhIENQQS4uIApTaWRlIG5vdGU6IEJ1eSBmcm9tIHJlcHV0YWJsZSBjb21wYW5pZXMhIEl0IGRvZXNuJ3QgcGF5IHRvIGZpbmQgdGhlIGNoZWFwZXN0IGZpc2ggb2lsIHByb2R1Y3RzLiBZb3Ugd291bGRuJ3Qgc2hvcCBmb3IgY2hlYXBlc3QgaGVhcnQgc3VyZ2VvbiBmb3IgYSBsb3ZlZCBvbmUgd291bGQgeW91PyBSZWFkIHRoaXMgbGluayBvbiBmaXNoIG9pbCBsYXdzdWl0IGluIDIwMTAuCldlIHNvbGQgMSwzMDAgaW4gb3VyIGZpcnN0IHdlZWsuIApBbHNvLCB0cmFpbiB5b3VyIGJyYWluIHRvIHJlbWVtYmVyIHRoZSB0eXBlIG9mIG9wcG9uZW50IHlvdSBpbiB0aGUgcG90IHdpdGguIEFuIE9NQyBzdGlsbCB3b24gc3RhY2sgb2ZmIHdpdGggYW4gb3ZlcnBhaWQgdG8gdGhlIGJvYXJkIHVubGVzcyBoZSBtYWtlcyBoaXMgc2V0IGFuZCBzb21ldGltZXMgaGUgc3RpbGwgd29uIEEgbWF3ZyBvbiBhIFNhdHVyZGF5IG5pZ2h0IHdpdGggYSBiZWVyIGluIGZyb250IG9mIGhpbSBwcm9iYWJseSB3aWxsIHN0YWNrIG9mZiB3aXRoIGEgcGFpciBvZiA3IGlmIHRoZSBmbG9wIGNvbWVzIDYgaGlnaC4gVGhlc2UgYXJlIHRoZSBzcG90cyB0aGF0IHNlcGFyYXRlIHRoZSBhbWF0ZXVycyBmcm9tIHRoZSB3aW5uaW5nIHBsYXllcnMgcmVnYXJkbGVzcyBvZiB0aGUgc3Rha2VzLi4gCkhlIHdhcyB0aGUgYmVzdCBib3kgSSBjb3VsZCBoYXZlIGV2ZXIgYXNrZWQgZm9yLCBidXQgaGlzIGhlYWx0aCB3YXMgZmFpbGluZy4gCkEgY2hhcXVlIGZvaXMgcXVlIGplIGwnYWkgcmFsaXMsIGplIG1lIHNlbnRhaXMgbWlldXggZW5zdWl0ZS4gRXQgcHVpcyBpbCBuJ2VzdCBwYXMgbmNlc3NhaXJlIGQnZW4gZmFpcmUgdG91dCBsZSB0ZW1wcy4gCkkgbm90IHNlZWluZyB0aGUgdmlkZW9zIHlvdSByZWZlciB0bywgYnV0IEkgY2hvc2UgdGhlIGZpcnN0IG9uZSBmcm9tIHRoZSBsaW5rIHlvdSBwcm92aWRlZCBhbmQgQmVuamFtaW4gbWFkZSByZWZlcmVuY2UgdG8gQm9iIERpbGxvbiBhbmQgYm9ybiBhZ2FpbiBjaHJpc3RpYW5zIGFzIGNyYXp5IGluIHRoZSBmaXJzdCBmZXcgbWludXRlcy4gV2hpbGUgSSBhbSBub3QgcmVsaWdpb3VzIGluIHRoYXQgd2F5LCBoZSBzdHJpa2VzIG1lIGFzIHZlcnkgZGl2aXNpdmUuLiAKIkkgc2VlIGl0IGFzIHBlb3BsZSB0YWtpbmcgb3duZXJzaGlwIG9mIHJlc3BvbnNpYmlsaXR5IGZvciB0aGVpciBjb21tdW5pdHksIiBIYXNlbGV5IHNhaWQuIApQZW9wbGUgYXJlIHNheWluZyB0aGlzIGFzIGlmIGhlZWxzIGRvbiBpbnN1bHQgdGhlIGF1ZGllbmNlIGFsbCB0aGUgdGltZS4gSGVlbHMgYWx3YXlzIGluc3VsdCB0aGUgZmFucywgYW5kIHRoZSBpbnN1bHRzIHVzZWQgdG8gYmUgbXVjaCBtdWNoIHdvcnNlLiBSb25kYSBnZXRzIGhlYXQgZnJvbSB0aGUgZmFucyBmcm9tIHRoaXMsIGVuZHMgdXAgbG9va2luZyBsaWtlIGFuIGFzc2hvbGUsIGlzIHRoYXQgbm90IGEgam9iIHdlbGwgZG9uZT8gU2hlIGJlY29tZSBhIHRydWUgaGVlbCwgb25lIHRoZSBwZW9wbGUgYWN0dWFsbHkgZGVzcGlzZSByYXRoZXIgdGhhbiB0aGVzZSBoYWxmIGFzc2VkIGhlZWxzIHRoYXQgcGVvcGxlIGxvdmUgYW5kIGNoZWVyIGZvci4KSSBjYW4ndCBldmVuIGJlZ2luIHRvIGV4cGxhaW4gdGhlIGhvc3BpdGFsaXR5IG9mIHRoZSBUdXJrcy4gRXZlbiB0aGUgY2FycGV0IHNlbGxlcnMgd291bGQgaGFzc2xlIHVzIHRvIGJ1eSBjYXJwZXRzIGFuZCB3ZSB3b3VsZCB0ZWxsIHRoZW0sICJXZSBkb24ndCBoYXZlIGpvYnMgb3IgaG91c2VzLCB3aHkgd291bGQgd2UgbmVlZCBhIGNhcnBldD8iIGFuZCB0aGV5IHdvdWxkIGludml0ZSB1cyBpbiBmb3IgYSB0ZWEgYW5kIGEgY2hhdC4gCkkgbGlrZSB0byB3YXRjaCBteSBvcHBvbmVudHMgYXQgdGhlIHN0YXJ0LCBzZWUgd2hvIGFyZSB0aGUgYWdncmVzc2l2ZSBwbGF5ZXJzLCByZWFkIHRoZWlyIGJvZHkgbGFuZ3VhZ2UsIHdvcmsgdGhlbSBvdXQgYW5kIHRoZW4gSSBjYW4gdXNlIGFsbCBvZiB0aGlzIGluZm9ybWF0aW9uIGZvciBteSBhZHZhbnRhZ2UuIidBIG1vdG9yIGZvciBldmVyeSBkYXkgb2YgdGhlIHdlZWsnICAgdGhlIGV4dHJhb3JkaW5hcnkgY2FyIGNvbGxlY3Rpb24gb2YgYSBsb3R0byBtaWxsaW9uYWlyZVBhdHJpY2ssIGFuIGFyZWEgbWFuYWdlciBmb3IgYSBjbGVhbmluZyBjb21wYW55LCB0b29rIHVwIHBva2VyIGFmdGVyIGJ1eWluZyBhIGhvdyB0byBwbGF5IHBva2VyIGRpc2MuUmVpZ25pbmcgVUsgUHViIFBva2VyIENoYW1waW9uIFBhdHJpY2sgQnVjaGFuYW4gZnJvbSBDaGVsbXNsZXkgV29vZCB3aG8gaXMgb2ZmIHRvIExhcyBWZWdhcyB0byBkZWZlbmQgaGlzIGNyb3duLkZvdXIgb3RoZXIgcGxheWVycyBmcm9tIEJpcm1pbmdoYW0gaGF2ZSBhbHNvIHF1YWxpZmllZCBmb3IgdGhlIGV2ZW50IGFuZCB3aWxsIGZseSBvdXQgd2l0aCBQYXRyaWNrIGZvciB0aGUgVkVHQVMxMDAgdG91cm5hbWVudC5UaGVzZSBpbmNsdWRlIE1pY2hhZWwgUGhlbGFuIG9mIEJlZ2dhcnMgQnVzaCBwdWIsIExlZSBDb2xsaW5zIG9mIEpvdXJuZXlzIEVuZCBwdWIsIFJpY2hhcmQgSHVnaGVzIG9mIE1hcnN0b24gR3JlZW4gVGF2ZXJuIHB1YiBhbmQgU2hhdW4gUm9iZXJ0cyBvZiBPYWt0cmVlIENsb3NlIHB1Yi5Ob3cgaW4gaXRzIHR3ZWxmdGggeWVhciwgVkVHQVMxMDAsIG9yZ2FuaXNlZCBieSBSZWR0b290aCBQb2tlciwgaXMgdGhlIFVLJ3MgbGFyZ2VzdCBsaXZlIHB1YiBwb2tlciBsZWFndWUgd2l0aCBtb3JlIHRoYW4gMSwwMDAgdmVudWVzIGFuZCBvdmVyIDIwMCwwMDAgcGxheWVycyByZWdpc3RlcmVkIHdpdGggdGhlIGxlYWd1ZSBzaW5jZSBpdCB3YXMgbGF1bmNoZWQuVGhlcmUgaXMgYSBwcml6ZSBwb29sIHdpdGggZm9yIHRoZSB3aW5uZXIuSW5jbHVkZWQgaW4gdGhlIHdpbm5lcidzIHByaXplIGlzIGEgc3BvbnNvcnNoaXAgZGVhbCBmb3IgdGhlIHllYXIgYWhlYWQuT25lIHBsYXllciB3aWxsIGFsc28gcmVjZWl2ZSB0aGUgdGl0bGUgb2YgUGxheWVyIG9mIFllYXIgZHVyaW5nIHRoZSB2aXNpdCB0byBMYXMgVmVnYXMuRXZlcnkgR3JlZ2dzIGJha2VyeSBpbiBCaXJtaW5naGFtIHJhbmtlZCBhbmQgcmF0ZWQgb24gVHJpcEFkdmlzb3IgYW5kIEdvb2dsZVRoaXMgeWVhciB0aGUgVkVHQVMxMDAgcGxheWVycyBhbmQgZ3Vlc3RzIHdpbGwgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gdGFrZSBwYXJ0IGluIGFuIGFkZGl0aW9uYWwgdG91cm5hbWVudCB3aXRoIG92ZXIgJDYwMDAgd29ydGggb2YgcHJpemVzIHdoaWNoIGluY2x1ZGVzIGEgcmV0dXJuIHRyaXAgdG8gTGFzIFZlZ2FzIGFuZCBhIHNlYXQgaW50byBhIFdvcmxkIFNlcmllcyBvZiBQb2tlciBldmVudCBpbiAyMDE5Lk1hcnRpbiBHcmVlbiwgbWFuYWdpbmcgZGlyZWN0b3Igb2YgUmVkdG9vdGggUG9rZXIsIHNhaWQ6ICJXZSBhcmUgZGVsaWdodGVkIHRvIGZpbmFsbHkgc2VjdXJlIG91ciAxMDAgcGxheWVycyBmb3IgdGhlIHRyaXAgdG8gTGFzIFZlZ2FzLiBBbGwgaGF2ZSBkb25lIHJlbWFya2FibHkgd2VsbCB0byByZWFjaCB0aGlzIHN0YWdlLCBwcm9ncmVzc2luZyB0aHJvdWdoIGZyb20gdGhlaXIgbG9jYWwgcHVicyB0byBudW1lcm91cyByZWdpb25hbCBhbmQgbmF0aW9uYWwgdG91cm5hbWVudHMuIlRoZXNlIGFyZSB0aGUgYmVzdCBwdWIgcG9rZXIgcGxheWVycyBpbiB0aGUgVUsgc28gdGhleSBmdWxseSBkZXNlcnZlIHRoaXMgb25jZSBpbiBhIGxpZmV0aW1lIHRyaXAgdG8gQW1lcmljYS4iQmlybWluZ2hhbSB3ZWF0aGVyR2FsZXMgYmF0dGVyIEJpcm1pbmdoYW0gc3BhcmtpbmcgdHJhdmVsIGNoYW9zIGFzIE1ldCBPZmZpY2UgaXNzdWVzIFNOT1cgd2VhdGhlciB3YXJuaW5nVHJlZXMgd2VyZSBrbm9ja2VkIGRvd24gaW4gSGFnbGV5IFJvYWQsIEJpcm1pbmdoYW0sIGFzIGEgd2F2ZSBvZiBzbGVldCBiYXR0ZXJlZCB0aGUgY2l0eSBhZnRlciBtaWRkYXkgb24gU3VuZGF5U3RvdXJicmlkZ2VSeWFuIFBhc3NleSdzIGZhbWlseSBzcGVhayBvdXQgICAndGhlcmUgbmVlZHMgdG8gYmUgbW9yZSBwcm90ZWN0aW9uIGFuZCByaWdodHMgZm9yIHRoZSB2aWN0aW1zIGFuZCB0aGVpciBmYW1pbGllcydSeWFuIFBhc3NleSB3YXMgc3RhYmJlZCBhdCBDaGljYWdvJ3MgaW4gU3RvdXJicmlkZ2UuIApUaGVyZSBhIHNheWluZyBpbiB0aGUgcm90YXJ5IGNvbW11bml0eSAgICJib29zdCBnb2VzIGluLCBhcGV4IHNlYWxzIGNvbWUgb3V0Ii4gVGhleSByZXNwb25kIHRvIGEgdHVyYm8sIGJ1dCBpdCBhdCBhIGhlYXZ5IHJlbGlhYmlsaXR5IGNvc3QuIApUaGF0IGlzLCBpZiBDYW5hZGlhbiBzdHVkZW50cyB3YW50IHRvLCB0aGV5IGhhdmUgYSBsb3QgbW9yZSBtb2JpbGl0eSB0byBtb3ZlIGFyb3VuZCBhcyB0aGV5IHdhbnQgd2l0aG91dCBnb2luZyBjb21wbGV0ZWx5IGJyb2tlIGxpa2UgaG93IGl0IGlzIGluIFN0YXRlcy4uIApTbyB0YWtlIGEgZmV3IG1pbnV0ZXMgYW5kIHJlYWQgaXQgYWxsIG92ZXIuIFllcywgaXQgb25seSB0YWtlcyBhIGZldyBtaW51dGVzIGFuZCBpZiB0aGF0IGlzIGFsbCB5b3UgaGF2ZSB0byBkbyB0byBiZSBzdWNjZXNzZnVsIGF0IG9ubGluZSBwb2tlciwgeW91IHdvbid0IGJlIGFibGUgdG8gcGFzcyB0aGlzIHVwLiAKVGhlc2UgYXJlIGJlbmVmaXRzIGVuam95ZWQgYnkgb25seSBhIGZldyBjZXJ0YWluIGNsYXNzZXMsIChibGFjaywgTGF0aW5vLCBOYXRpdmUgQW1lcmljYW4sIFBhY2lmaWMgSXNsYW5kZXIgYW5kIHdvbWVuIGluIGNlcnRhaW4gY2FzZXMpLiAKQ29uc2lkZXJlIHVzYXIgY2FydGFzIGV4dHJhcy4gTyBwb2tlciBmZWNoYWRvICB1bSBqb2dvIGRpdmVydGlkbywgbWFzIHVtIGVsZW1lbnRvIGV4dHJhIGRlIHN1cnByZXNhIGUgZXN0cmF0Z2lhIGVudHJhIGVtIGpvZ28gcXVhbmRvIHZvYyBpbnRyb2R1eiBjYXJ0YXMgZXh0cmFzLiBBcGVuYXMgZ2FyYW50YSBxdWUgdG9kbyBtdW5kbyBjb25jb3JkZSBuaXNzbyAoZSBzYWliYSBvIHF1ZSAgaXNzbykgYW50ZXMuIEVzdGUgZWxlbWVudG8gZmF6IGRhICJxdWludGEiIHVtYSBtbyBwb3RlbmNpYWwgICBlIGEgbWVsaG9yIG1vIG5vIGpvZ28uCldhc3NlcnN0b2ZmcGVyb3hpZCBpc3QgaW4gZnJpc2NoZW0gT2JzdCB1bmQgR2Vtc2UgZW50aGFsdGVuLCBkaWUgbm9jaCBrZWluZXIga3VsaW5hcmlzY2hlbiBWZXJhcmJlaXR1bmcgdW50ZXJ6b2dlbiB3dXJkZW4uIEVyd3JtZW4sIEtvY2hlbiwgQnJhdGVuIHZlcm5pY2h0ZXQgZWluZSBzdGF0dGxpY2hlIE1lbmdlIGRlcyBlbnRoYWx0ZW5lbiBTYXVlcnN0b2ZmcywgZGFydW0gc2luZCB6dWJlcmVpdGV0ZSBHZW1zZSBpbSBHcnVuZGUgZ2Vub21tZW4sIG1nZW4gc2llIGF1Y2ggZWluaWdlIFZpdGFtaW5lIGVudGhhbHRlbiwgYmVyZWl0cyB0b3QuIERhc3NlbGJlIGdpbHQgYXVjaCBmciBGcnVjaHRzZnRlICAgd2VubiBzaWUgZnJpc2NoIGdlcHJlc3N0IHNpbmQsIHNpbmQgc2llIHJlaWNoIGFuIFNhdWVyc3RvZmYsIGRhaGVyIGhhYmVuIHNpZSBkaWUgRmhpZ2tlaXQgZGVuIEtycGVyIHp1IHJlaW5pZ2VuIHVuZCBpbiBtaXQgTGViZW5zZW5lcmdpZSB6dSB2ZXJzb3JnZW4uCkluU3BhY2VTdWl0IHUKVGhlIGhvbGVzIGluIHRoZSBoYW5kbGUgYXJlbiBqdXN0IG1lYW4gZm9yIHRoZSBzdG9yZSB0byBoYW5nIHRoZW0sIHRoYXQgaG93IHlvdSBkcnkgdGhlbSwgd2hpY2ggYWxzbyBoZWxwcyBrZWVwIHRoZWlyIHNoYXBlLi4gCkRvYnJldiBoYWQgbmV2ZXIgZG9uZSBhIHNpdGNvbSBiZWZvcmUgZGVjaWRpbmcgdG8gam9pbiB0aGUgY2FzdCBvZiBvbiBDQlMuIApJbiBvdGhlciB3b3JkcyB5b3UgY2FuIHNheSB0aGF0IGFsbCB0aG9zZSB3aG8gc2VlayB0aGUgZmFjZSBvZiBMb3JkIEdvZCBBbG1pZ2h0eSBmb3IgdGhlaXIgcHJvdGVjdGlvbiB3aXRoIGFuIGludGltYXRlIGxvdmUgcmVsYXRpb25zaGlwIHdpdGggd2lsbCBmaW5kIHNoZWx0ZXIgZHVyaW5nIHRoZSB0b3J0dXJvdXMgdGltZXMgb2YgdGhpcyBHcmVhdCBXYXIuIApUaGV5IG1ha2UgaXQgcmlnaHQuIApJbiAxODQzIGEgR2VybWFuIGNhc2lubyByZW1vdmVkIHRoZSBkb3VibGUgemVybyB0byBjb21wZXRlIHdpdGggb3RoZXIgY2FzaW5vcyBieSBub3Qgc2NyZXdpbmcgdGhlaXIgY3VzdG9tZXJzIHF1aXRlIHNvIGJhZGx5LiAKRGVudHN1J3MgU2VpbGVyIHdhcyBpbiBEdWJhaSBhIGZldyB5ZWFycyBhZ28gZm9yIGEgcmVnaW9uYWwgbWVldGluZywgd2hlcmUgaGlzIHRlYW0gd2FzIGVudGVydGFpbmVkIHdpdGggYSBkZXNlcnQgcmlkZSB0byBhIGNhbXAgd2l0aCBjYW1lbCByaWRlcywgYmVsbHkgZGFuY2VycyBhbmQgY2hpY2tlbiBza2V3ZXJzLiBUaGUgbmV4dCBtb3JuaW5nLCB0aGUgbWVldGluZyB3YXMgc2NhcmNlbHkgYXR0ZW5kZWQuCklmIHNoZSBoZWxwcyBvdXIgZmFtaWx5LCBzaGUgbWF5IGhlbHAgaGVyc2VsZiB0byBhIGNvbXBsaW1lbnRhcnkgZG91Z2hudXQgYW5kIGNhcnRvbiBvZiBtaWxrLiAKIllvdSB3YW50IHRvIGRlYmF0ZSBmb3VuZGF0aW9ucyBhbmQgY2hhcml0aWVzPyIgT2JhbWEgc2FpZCwgY29tcGFyaW5nIHRoZSBUcnVtcCBGb3VuZGF0aW9uIHRvIHRoZSBDbGludG9uIEZvdW5kYXRpb24sIGFzc29jaWF0ZWQgd2l0aCBEZW1vY3JhdCBIaWxsYXJ5IENsaW50b24gYW5kIGhlciBmYW1pbHkuIApJbSBzdXJlIHRoZXJlIGFyZSBxdWl0ZSBmZXcgcGVvcGxlIHdobyB3b3VsZG50IHB1dCBpdCBwYXN0IGhpbSB0byB1c2UgYSBwb3RlbnRpYWxseSB0ZXJtaW5hbCBpbGxuZXNzIGluIGEgbGFzdCBkaXRjaCBlZmZvcnQgdG8gZ2V0IHNvbWVvbmUgb3Zlci4uIApJIGRvbid0IGhhdmUgdGhlIHNhbWUgam9iIG9yIGZyaWVuZHMgb3IgaG9iYmllcyAobW9zdCBvZiBtaW5lIHdlcmUgbm90IGtpZCBmcmllbmRseSBhbmQgcmVxdWlyZWQgcmVndWxhciB0aW1lIGNvbW1pdG1lbnRzIHRoYXQgd2VyZSBpbXBvc3NpYmxlIHdpdGggaGlzIGVycmF0aWMgd29yayBob3VycykuIApGb3IgbWUgdGhlIGxvdyBsaWdodCBjYXBhYmlsaXR5IGFuZCB0aGUgc2hhcnBuZXNzIHRydW1wIHRoZSB3ZWlnaHQgaXNzdWUuIEV2ZW4gd2l0aCB0aGUgaWJpcyBpdCBjb21wYXJlcyBuaWNlbHkgdG8gMTIgMzUuIApUaGVyZSBhcmUgc29tZSBQaXJhdGUgU3dhcm92c2tpIGlQaG9uZSBjYXNlIGNvdmVycywgUGlyYXRlIEJsaW5nIFJoaW5lc3RvbmUgaVBob25lIGNhc2UgY292ZXJzLCBQaXJhdGUgQ2FydG9vbiBpUGhvbmUgaU1hZ251bSBjYXNlIGFzIGFuIG9wdGlvbmFsIHJlcGxhY2VtZW50IGZvciB0aGUgcmVtb3ZlZCBiZWx0IGNsaXAuIApBcyB0aGUgY2hhbmNlbGxvciBsaW5lcyB1cCB0aGUgc3ByaW5nIHN0YXRlbWVudCwgdGhlIGRlYmF0ZSBzaG91bGQgbm90IGJlIGFib3V0IGluY29tZSB0YXggb3IgcGVyc29uYWwgYWxsb3dhbmNlcywgYnV0IGhvdyB3ZSByZW9yaWVudGF0ZSB0aGUgdGF4IHN5c3RlbSB0byB3aGVyZSB0aGUgbW9uZXkgcmVhbGx5IGxpZXMuLiAKSG93IGlzIHlvdXIgZmlhbmNlIGdvaW5nIHRvIHJlYWN0IHdoZW4gRHVrZSBtYWtlcyB5b3VyIGNoaWxkIHNpY2sgZnJvbSBmZWNhbCBtYXR0ZXI/IE9yIHdoZW4gaGUgdG9vIHJvdWdoIGFuZCBpbmp1cmVzIHRoZW0/IEl0IHJlYWxseSBkb2VzbiBzZWVtIGxpa2UgeW91ciBmaWFuY2Ugd291bGQgaGF2ZSBhbnkgaW50ZW50aW9uIG9mIGRpc2NpcGxpbmluZyBEdWtlIG9yIGV2ZW4gdGFraW5nIGl0IHNlcmlvdXNseS4gWW91IHBsYXlpbmcgc2Vjb25kIGZpZGRsZSB0byBEdWtlLCBhbmQgYnkgZXh0ZW5zaW9uLCB5b3VyIGtpZHMgd2lsbCB0b28uIFBsZWFzZSB0aGluayBhYm91dCB0aGVzZSB0aGluZ3MgYmVmb3JlIHlvdSBtb3ZlIGZvcndhcmQgd2l0aCB0aGlzIG1hcnJpYWdlLgooRGllIGdydGVuIEtvc3RlbiwgZGllIGRlbSBTdHVkZW50ZW4gZGFiZWkgZW50c3RlaGVuLCBpc3Qgb2huZWhpbiBzZWluZSB2ZXJsb3JlbmUgWmVpdCwgZGVtIHNpbmQgc2ljaCBhYmVyIHZpZWxlIG5pY2h0IGJld3Vzc3QuKS4gCkZyb20gaXRzIDE1IGNlbnR1cnkgYmVnaW5uaW5ncyBhcyBhIGZvcnRpZmllZCB2aWxsYWdlIHRocm91Z2ggaXRzIDE5NjBzIGhleWRheSBhcyBhIGRlc3RpbmF0aW9uIGZvciBIb2xseXdvb2QgZWxpdGUgamV0IHNldCwgdGhlIGlzbGFuZCBvZiBTdmV0aSBTdGVmYW4gaGFzIGxvbmcgYmVlbiBhbiBpY29uIG9mIE1vbnRlbmVncm8gY29hc3RsaW5lLiAKQWx0aG91Z2ggdHJlYXRpbmcgbWVudGFsbHkgaWxsIGFuZCBhZGRpY3RlZCBwYXRpZW50cyBpcyBkaWZmaWN1bHQgYW5kIGRhbmdlcm91cywgdGhlIFN0LiBQYXVsJ3MgZG9jdG9ycyBhbmQgbnVyc2VzIGRvIHRoZSBqb2IgYmVjYXVzZSB0aGV5IHdhbnQgdG8sIE5hemlmIHNheXMuICJBdCB0aGlzIGhvc3BpdGFsIHlvdSBoYXZlIHdvbmRlcmZ1bCBwZW9wbGUgd2hvIGhhdmUgY2hvc2VuIHRvIHdvcmsgd2l0aCB0aGlzIHBvcHVsYXRpb24sIGFuZCB3aG8gbGlrZSB0aGUgcGVvcGxlLCIgc2hlIHNheXMuIApJbiBhZGRpdGlvbiwgdGhlIHN0dWR5IGVtcGhhc2l6ZXMgdGhhdCBleGVyY2lzZSB0cmFpbmluZyBzaG91bGQgbm90IGJlIGxpbWl0ZWQgdG8gZm9jdXNpbmcgb25seSBvbiB0aGUgZGVlcCBzdGFiaWxpemluZyBtdXNjbGVzIHN1Y2ggYXMgdGhlIHRyYW5zdmVyc2UgYWJkb21pbmlzIGFuZCBtdWx0aWZpZHVzLgpTYWlkIGhpcyBjbGllbnQgaGFkIGEgdHJvdWJsZWQgdXBicmluZ2luZyBhbmQgc3VmZmVycyBmcm9tIHNvY2lhbCBhbnhpZXR5IGFuZCBhIG9mIG90aGVyIG1lbnRhbCBoZWFsdGggaXNzdWVzLiAKWWVzLCBhcyBpbmRpdmlkdWFscywgYW5kIG9uIGFuIGluZGl2aWR1YWxpc3RpYyBiYXNpcywgd2UgY2FuIGJlIGJlYXV0aWZ1bCBjcmVhdHVyZXMsIGJ1dCAibmF0dXJlIiBpcyBkZXNpZ25lZCBpbiBhIHdheSB0byBub3QgZmF2b3Igb3VyIHZpcnR1ZXMsIGl0IGlzIG1hZGUgdG8gcmV3YXJkIG91ciBpbW1vcmFsIGJlaGF2aW9ycy4gCkRlc2lnbjogV2VhcmFibGVzIGFyZSBtZWFudCB0byBtYWtlIG91ciBsaXZlcyBlYXNpZXIsIHlldCBzb21lIGNhbiBiZSBzdXBlciBjbHVua3kgYW5kIHVuY29tZm9ydGFibGUuIEludmVzdCBpbiBhIGZpdG5lc3MgdHJhY2tlciB0aGF0J3Mgbm90IGFuIGV5ZXNvcmUgYW5kIGZpdHMgbmljZWx5IG9uIHlvdXIgd3Jpc3QuIFlvdSBkb24ndCB3YW50IHRvIGN1dCBvZmYgeW91ciBjaXJjdWxhdGlvbiBvciBoYXZlIGl0IHNsaXAgb2ZmIHdoaWxlIHlvdSdyZSBvbiB0aGUgbW92ZS4gTG9vayBmb3IgbW9kZWxzIHRoYXQgY29tZSBpbiBkaWZmZXJlbnQgY29sb3JzIHRvbywgc28geW91IGNhbiBoYXZlIG9uZSB0aGF0IGdvZXMgd2l0aCB5b3VyIGFjdGl2ZXdlYXIsIGNhc3VhbCwgYW5kIHdvcmsgb3V0Zml0cy4KQW5vdGhlciB0aGluZyB5b3Ugc2hvdWxkIHVuZGVyc3RhbmQgYmVmb3JlIHlvdSBtYWtlIHRoZSBwdXJjaGFzZSBpcyB0aGF0IGl0IGhhcyBhbiBBQyBwb3dlciBhZGFwdGVyOyBidXQgZm9yIHVzZSBvbiB0aGUgcm9hZCwgeW91J2xsIG5lZWQgM0FBIGJhdHRlcmllcy4gU28gaWYgeW91IGJ1eSB0aGlzIGZvciB5b3Vyc2VsZiBvciBzb21lb25lIHlvdSBrbm93IHdobyBsb3ZlcyB0aGVzZSB0eXBlcyBvZiBQb2tlciBNYWNoaW5lIEdhbWVzLCBrZWVwIGluIG1pbmQgdGhlIGNvbm5lY3Rpb24gcGllY2VzLiBJdCBtYXkgbWFrZSBhIGRpZmZlcmVuY2UgZGVwZW5kaW5nIG9uIHdobyB5b3UgcGxhbiBvbiBnaXZlIHRoZW0gdG8gYXMgYSBnaWZ0LgpUcmllZCB0byBkcmlmdCB0b3dhcmQgdHJlZXMgZm9yIGNhbW91ZmxhZ2UsIGJ1dCB0aGUgd2luZHMgYnJvdWdodCBoaW0gYmFjayB0b3dhcmQgdGhlIGxha2UuIElmIGhpcyBjaHV0ZSB0YW5nbGVkIGFuZCBoZSBsYW5kZWQgdGhlcmUsIHdlaWdoZWQgZG93biBieSBoaXMgaGVhdnkgc2VhdCBwYWNrLCBoZSBtaWdodCBkcm93bi4gTm93IGhlIHN3dW5nIGFib3ZlIGEgbmV3IHBsb3dlZCBmaWVsZCB3aGVyZSBvbmUgZmFybWVyIHdhcyByaWRpbmcgYSB0cmFjdG9yLCBhbm90aGVyIHBpbGluZyBicnVzaC4gQSBuZXcgc2NhcmUgZWxlY3RyaWMgcG93ZXIgbGluZXMhIFBsdW5naW5nIGZhc3Qgbm93LCBoZSBkcm9wcGVkIGZhdGFsbHkgY2xvc2UgdG8gdGhlIHdpcmVzIGFzIHRoZSBlYXJ0aCBydXNoZWQgdXAgdG8gZ3JlZXQgaGltIGFuZCBoaXMgaGVhZCBzbGFtbWVkIGhhcmQgYWdhaW5zdCB0aGUgZGVuaWVkIHRlcnJpdG9yeSBvZiB0aGUgU292aWV0IFVuaW9uLgpUaGV5IGRpZG4gZm9yY2UgdGhlbSB0byBkbyBhbnl0aGluZywgdGhlIGdhbWUgcGxhbiB3YXMgYWx3YXlzIHRvIHJlbGVhc2UgdGhlIHZhbmlsbGEgZ2FtZSBhbmQgdGhlbiBhZGQgdG8gaXQgd2l0aCBjb250ZW50LiBZb3UgY291bGQgYXJndWUgQWN0aXZpc2lvbiBmb3JjZWQgdGhlbSBpbnRvIHRoaXMgYXQgdGhlIHN0YXJ0IG9mIHRoZSBhZ3JlZW1lbnQgYnV0IGl0IHdhc24gbGlrZSB0aGV5IHdlcmUgY29udGludWFsbHkgd2hpcHBpbmcgdGhlbSBhbmQgc2F5aW5nIHRoZXkgbmVlZGVkIHRvIGRvIGl0ICAgQnVuZ2llIGFncmVlZCB0byB0aGF0LiAKVGhlIGludHJvZHVjdGlvbiBvZiBzbW9raW5nIGJhbnMgaW4gTlNXIHZlbnVlcyBpbiAxOTk3LCBnYW1pbmcgdGF4LCBhbiBpbmNyZWFzaW5nIGNob2ljZSBvZiBlbnRlcnRhaW5tZW50IGFuZCByZWNyZWF0aW9uIG9wdGlvbnMsIHRoZSBnbG9iYWwgZmluYW5jaWFsIGNyaXNlcywgZ2VuZXJhbCBlY29ub21pYyBzdHJhaW5zIGFuZCBkZW1vZ3JhcGhpYyBjaGFuZ2VzIGluIHRoZSByZWdpb24gaGF2ZSB0YWtlbiB0aGVpciB0b2xsLiAKVGhlbiBtb3ZlIGRvd24gYW5kIHN0dWR5IG1vcmUsIG9yIGlmIHlvdSBrZWVwIHdpbm5pbmcgdGhlbiB5b3UgZ2V0IHRvIGEgcG9pbnQgd2hlcmUgeW91IG1ha2luZyBtb3JlIG1vbmV5IGluIHBva2VyIHRoYW4geW91IGFyZSB3b3JraW5nLi4gCkl0IHdhcyBsaWtlIHRoZSBEIERheSBpbnZhc2lvbiwgc2F5cyBMZVZhbmdpZS4gCllvdSB3aWxsIGFsc28gYmUgbW9yZSBza2lsbGVkIGFuZCB1bmRlcnN0YW5kIGhvdyB0byBwbGF5IGFsbCB0aGUgZGlmZmVyZW50IGdhbWVzIHRoYXQgb3IgcGxheWVkIGluIGhvbWUgcG9rZXIgZ2FtZXMgd2hlbiB5b3UgYXJlIHBsYXlpbmcgRGVhbGVycyBDaG9pY2UsIHdoaWNoIG1lYW5zIHdob2V2ZXIgaXMgZGVhbGluZyBkZWNpZGVzIHdoYXQgcG9rZXIgZ2FtZSBpcyBwbGF5ZWQgdGhhdCBoYW5kLiAKVGhlIG1hY2hpbmUgaGFzIHRvIG1haW50YWluIHRoZSBwYXkgb3V0IHBlcmNlbnRhZ2UgdGhhdCBpcyBjaG9zZW4gYnkgdGhlIG9wZXJhdG9yLiBJbiBsZWdhbCBjYXNpbm9zIGluIG90aGVyIHN0YXRlcywgcmVndWxhdG9ycyBtYWtlIHN1cmUgdGhhdCB0aGVpciBtYWNoaW5lcyBhcmUgcHJvZ3JhbW1lZCBhYm92ZSB0aGUgbWluaW11bSBwYXkgb3V0IHBlcmNlbnRhZ2Ugc2V0IGJ5IHN0YXRlIGxhdy4KSXQgY29udGFpbnMgY29udHJpYnV0aW9ucyBmcm9tIGNvdW50bGVzcyBudW1iZXJzIG9mIHRyYXZlbGxlcnMgYW5kIHJlc2VhcmNoZXJzLiIuIApMb2V3IGVuam95cyB0YWtpbmdwYXJ0IGluIGxpdmluZyBoaXN0b3J5IGV2ZW50cywgYW5kIHByYWN0aWNlcyB0aGVhcnQgb2YgSmFwYW5lc2UgU3dvcmRzbWFuc2hpcC4gSGUgaXMgYWNvbGxlY3RvciBvZiB2aW50YWdlIG1lbidzIGNsb3RoaW5nIGFuZGFjY2Vzc29yaWVzLiBBdCBDaXZpbCBXYXIgZXZlbnRzLCBMb2V3IHdhc2ZyZXF1ZW50bHkgYXNrZWQgIndobyBhcmUgeW91PyIgSGUgZGlkbid0aGF2ZSBhbiBhbnN3ZXIgdW50aWwgaGUgbGVhcm5lZCBhYm91dCBXYXluZUNvdW50eSBoaXN0b3J5IGR1cmluZyB0aGUgQ2l2aWwgV2FyLiAKTm8gdHJvbGxpbmcgaXMgbm93IHBhcnQgb2YgcnVsZSAxIHJhdGhlciB0aGFuIGl0cyBvd24gcnVsZS4gSSB0aGluayBpdCBjb21lcyBkb3duIHRvIHRoZSBzYW1lIHRoaW5nIHRoZW1hdGljYWxseSBhbnl3YXkuCk15IEZpcnN0IEdyYXBoClllc3RlcmRheSBJIHdhcyBiYWtpbmcgYSBjYWtlIGZvciBhIGJicSB0aGlzIGV2ZW5pbmcuIFRoZSBvbmx5IGNha2UgcGFuIEkgaGF2ZSBpcyBvbmUgdGhhdCBsb29rcyBsaWtlIHRpdHMuIEkgc29tZWhvdyBydWluZWQgdGhlIGNha2UgYmVjYXVzZSB0aGUgYnJlYXN0IHBhcnRzIHdlcmUgcmF3IGFuZCB0aGUgc2hhbGxvd2VyIGNoZXN0IGFyZWFzIHdlcmUgYnVybnQuIApJdCBhbGwgZGVwZW5kcyBvbiB0aGUgY2lyY3Vtc3RhbmNlcy4uIApMQVMgVkVHQVMgICBNYW5ueSBQYWNxdWlhbyBjYXVnaHQgU2hhbmUgTW9zbGV5IGVhcmx5LCB0aGVuIGNoYXNlZCBoaW0gdGhlIHJlc3Qgb2YgdGhlIG5pZ2h0LiBOb3QgbXVjaCBtb3JlIGhlIGNvdWxkIGRvIGFnYWluc3QgYW4gYWdpbmcgZmlnaHRlciB3aG8gc2VlbWVkIG9ubHkgdG8gd2FudCB0byBzdXJ2aXZlLgpPbmUgb2YgdGhlIG1vcmUgaW50ZXJlc3RpbmcgZGV2ZWxvcG1lbnRzIGluIGFsbCB0aGlzIHdhcyB0aGUgcHJvcG9zYWwgb2YgYSByZXBvcnQgb24gdGhlIG9ubGluZSBwb2tlciBpbmR1c3RyeSB0aGF0IHdhcyB0byBiZSBwdWJsaXNoZWQgaW4gU2VwdGVtYmVyIDIwMTcuIFRoZSByZXBvcnQgd2FzIGFpbWVkIGF0IGV4YW1pbmluZyBwbGF5ZXIgcGVyY2VwdGlvbiBvZiB0aGUgaW5kdXN0cnkuIENyaXRpY3Mgb2YgdGhlIEFjdCBTZW5hdG9yIExleW9uaGplbG0gYW1vbmcgdGhlbSBleHByZXNzZWQgdGhlaXIgaG9wZSB0aGF0IHRoZSBwYXNzaW5nIG9mIHRoZSBiaWxsIHdvdWxkIGJlIHBvc3Rwb25lZCB1bnRpbCBhZnRlciB0aGUgcmVwb3J0IHdhcyByZWxlYXNlZC4KV2hlbiBydW5uaW5nIGJsdWZmcyB5b3Ugd2FudCBlcXVpdHkgYWdhaW5zdCBiZXR0ZXIgaGFuZHMgaWYgdGhleSBjYWxsIChsaWtlIGJsdWZmaW5nIGEgZmx1c2ggZHJhdykgb3IgcmVsZXZhbnQgYmxvY2tlcnMgKGFzIGluIGhhdmluZyB0aGUgUWggdG8gbWFrZSBpdCBsZXNzIGxpa2VseSBWaWxsYWluIGhhcyB0aGUgZmx1c2guIApUaGUgTWF1Y2ggQ2h1bmsgUmFpbHdheSB3YXMgZGV2aXNlZCBub3QgYXMgYSBwbGVhc3VyZSByaWRlLCBidXQgYXMgYSB0cmFuc3BvcnRhdGlvbiBzeXN0ZW0gZm9yIHRoZSBjb2FsIG1pbmluZyBpbmR1c3RyeS4gCkFzIHNvb24gYXMgaGlzIGZhY2UgcGVla3MgYXJvdW5kIHRoZSBjb3JuZXIsIHlvdXIgcmlnaHQgaGFuZCB0aHJ1c3RzIHRoZSBqbyBmb3J3YXJkIHRocm91Z2ggeW91ciBsZWZ0IGhhbmQgYWltaW5nIHJpZ2h0IGZvciB0aGUgcGVycGV0cmF0b3IgZmFjZS4gCkhlIGhhcyBoZWxkIHNvbWUgaW5mdXJpYXRpbmcgdmlld3Mgb24gT2lsIGFuZCBHYXMsIGFuZCB3YXMgYWdhaW5zdCBsZWdhbCBtYXJpanVhbmEuIApNdXNzbyBhbmREaXNuZXkgaGFkIGEgY29udHJhY3QgZGVhbCB0aGF0IGFsbG93ZWQgaGltIHRvIHN0YXkgb24gdGhlIHNob3cgZm9yb25lIG1vcmUgeWVhciBhbmQgbGV0IGhpbSBkbyBtb3JlIGFkdWx0IHR5cGUgcHJvamVjdHMuIApCdXQgdW50aWwgd2UgZG8sIHRoZXNlIHBlb3BsZSBhcmUgc3RpbGwgYSBwYXJ0IG9mIHRoYXQgc3lzdGVtIGFuZCB0aGF0IG1ha2VzIHRoZW0gb3VyIGVuZW15LiAKSXQgbm90IG9wdGltaXplZCBhdCBhbGwuLiAKSSBub3Qgc3VyZSBob3cgbXVjaCBuaWNlciBpdCBjb3VsZCBnZXQuIEhlciBoYW1zdGVyIGlzIHNwaW5uaW5nLCBsb29raW5nIGZvciBzb21lIG90aGVyIHdheSB0byByYXRpb25hbGl6ZSBiZWluZyBtYWQgYXQgeW91IGRlc3BpdGUgdGhlIGZhY3QgdGhhdCB5b3UgYWxyZWFkeSBkaWQgYWRkcmVzcyBpdCBpbiBhIG5pY2Ugd2F5Li4gCkkgYWdyZWUgd2l0aCB0aG9zZSB3aG8gc2VlIHBhc3QgdGhlaXIgc3F1ZWFtaXNobmVzcywgZXNwZWNpYWxseSAzOSBhbmQgb3RoZXIgcGljcyAuIGFuZCBxdWVzdGlvbiB0aGUgd2hvbGUgbm90aW9uIG9mIGNydWVsdHksIGl0cyBtZWFuaW5nLCBhbmQgdGhlIHBvcnRhYmlsaXR5IG9mIHRoZSBjb25jZXB0IGFjcm9zcyBhbmltYWxzIG9mIGFsbCB0eXBlcy4gQnVsbHMgPSBiYWQsIGRvZ3MgPSB2ZXJ5IGJhZCwgZG9scGhpbnMgYW5kIHdoYWxlcyA9IHZlcnksIHZlcnkgYmFkLiBCdXQgZmlzaCA9IE9LPyBCdWdzID0ganVzdCBmaW5lLCB0aGFuayB5b3UgdmVyeSBtdWNoLCBnZXQgUklEIG9mIHRoYXQgc3BpZGVyISA/Pz8KSSBkb24gcHJldGVuZCBsaWtlIEkgc29tZSBjcnVzaGVyIHdpdGggYWxsIHRoZSBhbnN3ZXJzIGJ1dCBoYWxmIHRoZSBzdHVmZiBvbiBoZXJlIGlzIGp1c3QgaG9ycmVuZG91c2x5IHdyb25nLiAKU3RvcCB0cnlpbmcgdG8gbWFrZSB1cyBjYXJlIGFib3V0IGEgeWVhcmx5IFdvcmxkIENoYW1waW9uLiBNb3N0IG9mIHVzIGxpa2UgdGhlIDQgeWVhciBzcGVjdGFjbGUgb2YgYSBSV0MuIApUaGUgcG9saWNlIHdhcyBhbHNvIHN0aWxsIGtlZXBpbmcgInBpbmsgbGlzdHMiIHdpdGggdGhlIG5hbWVzIG9mIGhvbW9zZXh1YWwgcGVvcGxlLi4gCiJBZnRlciBvdXIgcG9rZXIgbmlnaHQgd2UgYmUgY2xvc2UgdG8gJDggbWlsbGlvbiB3ZSByYWlzZWQgZm9yIHNlcmlvdXNseSBpbGwgYW5kIHVuZGVycHJpdmlsZWdlZCBjaGlsZHJlbiwgd2hpY2ggaXMgYW1hemluZyBhbmQgSSByZWFsbHkgcHJvdWQgb2YgdGhhdCwiIGhlIHNhaWQuIApGb2xsb3cgcmVkZGl0IHJ1bGVzLiBEbyBub3Qgc3BhbSwgbWFuaXB1bGF0ZSB2b3RlcywgZG94eCwgb3IgcG9zdCBpbGxlZ2FsIGNvbnRlbnQuCkhlYWQgaGFkIGFib3V0ICQ2LDAwMCBzdGFzaGVkIHVuZGVyIGhpcyBiZWQgICB3YXMgYSBwcmV0dHkgZ29vZCBwb2tlciBwbGF5ZXIgICBhbmQgcmVudGVkIGEgdGlueSBzcGFjZSBpbiBhbiBpbmR1c3RyaWFsIGFyZWEuIApQZXRlcmJvcm91Z2ggdGVlbiBzY29yZXMgaW52aXRlIHRvIHJveWFsIHdlZGRpbmcgZm9yIGNoYXJpdHkgd29yawpBTEFBJ0RBIE9DVUtMQVJBIFpFTCBFTEVOQ0UgREVWQU0gRURZT1JBbGlhYSBCZWxlZGl5ZXNpJ25pbiBrbHRyIHNhbmF0IGV0a2lubGlrbGVyaSBrYXBzYW1uZGEgb2N1a2xhcmEgemVsIG9sYXJhayBoYXpybGFkICdvY3VrbGFyIGluIFRpeWF0cm8gUGF6YXInbmRhICJPcm1hbm4gR2MiIGlzaW1saSB0aXlhdHJvIG95dW51IGdzdGVyaW1lIHN1bnVsZHUuIE1hdml5bGUgeWVpbGluIGJ1bHV0dXUgQXZjIFJhbWFkYW4gb2N1ayBPeXVuIHZlIFJla3JlYXN5b24gQWxhbiduYSBrdXJ1bGFuIHN0bWFsIGdlaWNpIGdzdGVyaSBtZXJrZXppbmRlIHNhaG5lbGVuZW4gb3l1bnUgaXpsZW1layBpc3RleWVuIG1pbmlrIHRpeWF0cm9zZXZlcmxlciBhaWxlbGVyaXlsZSBiaXJsaWt0ZSBnc3RlcmkgbWVya2V6aW5lIGFrbiBldHRpLiAKSW4gZ2FtZXMgd2hlcmUgb3V0Y29tZXMgYXJlIG5vdCB0aWVkIGRpcmVjdGx5IHRvIGRlY2lzaW9ucyAodHJhZGluZywgcG9rZXIsIHZpZGVvIGdhbWVzLCBidXNpbmVzcyksIGRlY291cGxpbmcgeW91ciBlZ28gYW5kIHNlbGYgd29ydGggZnJvbSB0aGUgcmVzdWx0cyB5b3UgYWNoaWV2ZSBhbmQgaW5zdGVhZCBpbnZlc3RpbmcgdGhlbSBpbiB0aGUgZGVjaXNpb25zIHlvdSBtYWtlIGlzIGEgZ29vZCB3YXkgdG8gdGlsdCBwcm9vZiB5b3Vyc2VsZi4uIApJZiB0aGVyZSBhcmUgbm8gYWR2ZXJzZSBlZmZlY3RzIGFmdGVyIGEgZmV3IGRheXMsIHRoZSB1c2FnZSBvZiB0aGUgZ2VsIG1heSBiZSBjb250aW51ZWQuIApPaCwgamVsbHkgYmVhbiwgZXNlIGR1bGNlIGNvbmZlY2NpbiBvdmFsIHF1ZSBlcyBlbCBwaWxhciBkZSBsYSBjYW5hc3RhIGRlIFBhc2N1YSBjYXJhbWVsb3MuIExvcyBwYWRyZXMgY29uZmFuIGVuIGVsIGVjb25taWNhIGplbGx5IGJlYW4gYSBncmFuZWwgaGFzdGEgbGEgY2VzdGEgeSB1dGlsaXphciBtYWx0ZWFkYSBodWV2b3MgeSBjb25lam9zIGRlIGNob2NvbGF0ZSBtcyBjYXJvcyBjb21vIGd1YXJuaWNpbi4gCk15IGZhdm9yaXRlIGNvbW1lbnQgZnJvbSB0aGlzIGFydGljbGUgcmV2aWV3OiAgQ29RMTAgZGVmaWNpZW5jeSBpcyBjb21wbGV0ZWx5IHByZXZlbnRhYmxlIHdpdGggc3VwcGxlbWVudGFsIENvUTEwIHdpdGggbm8gYWR2ZXJzZSBpbXBhY3Qgb24gdGhlIGNob2xlc3Rlcm9sIGxvd2VyaW5nIG9yIGFudGkgaW5mbGFtbWF0b3J5IHByb3BlcnRpZXMgb2YgdGhlIHN0YXRpbiBkcnVncy4gV2UgYXJlIGN1cnJlbnRseSBpbiB0aGUgbWlkc3Qgb2YgYSBjb25nZXN0aXZlIGhlYXJ0IGZhaWx1cmUgZXBpZGVtaWMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIHRoZSBjYXVzZSBvciBjYXVzZXMgb2Ygd2hpY2ggYXJlIHVuY2xlYXIuIEFzIHBoeXNpY2lhbnMsIGl0IGlzIG91ciBkdXR5IHRvIGJlIGFic29sdXRlbHkgY2VydGFpbiB0aGF0IHdlIGFyZSBub3QgaW5hZHZlcnRlbnRseSBkb2luZyBoYXJtIHRvIG91ciBwYXRpZW50cyBieSBjcmVhdGluZyBhIHdpZGUgc3ByZWFkIGRlZmljaWVuY3kgb2YgYSBudXRyaWVudCBjcml0aWNhbGx5IGltcG9ydGFudCBmb3Igbm9ybWFsIGhlYXJ0IGZ1bmN0aW9uLiBhcmUgZHJ1Z3MgdGhhdCByZWR1Y2UgY2hvbGVzdGVyb2wgYnkgaW5oaWJpdGluZyBhbiBlbnp5bWUgaW4gdGhlIGxpdmVyIGtub3duIGFzICdITUcgQ29BIHJlZHVjdGFzZScgd2hpY2ggJ2RyaXZlcycgY2hvbGVzdGVyb2wgcHJvZHVjdGlvbiAobW9zdCBvZiB0aGUgY2hvbGVzdGVyb2wgaW4gdGhlIGJsb29kc3RyZWFtIGlzIG1hZGUgaW4gdGhlIGxpdmVyIGFuZCBkb2VzIG5vdCBjb21lIGRpcmVjdGx5IGZyb20gdGhlIGRpZXQpLgpUaGV5IGZvY3VzIG9uIG1hbnkgZGlmZmVyZW50IG5hdGlvbmFsIG1hcmtldHMgYW5kIGFyZSBzdWNjZWVkaW5nIHZlcnkgd2VsbCBmb3IgZG9pbmcgdGhhdC4gCkFzIGZvciB0aGUgVW5pdGVkIFN0YXRlcyAgIGRvbid0IGV2ZW4gZHJlYW0gYWJvdXQgaXQuIFN0YXRlcywgYnV0IHRoYXQgc2ltcGx5IGRvZXNuJ3QgbWF0dGVyLiBCb3JkZXIgaXMgZmVkZXJhbGx5IGNvbnRyb2xsZWQgYW5kLCB1bmRlciB0aGUgZmVkZXJhbCBDb250cm9sbGVkIFN1YnN0YW5jZXMgQWN0LCBjdWx0aXZhdGlvbiwgcG9zc2Vzc2lvbiBhbmQgZGlzdHJpYnV0aW9uIG9mIGNhbm5hYmlzIHJlbWFpbiBpbGxlZ2FsLi4gCkFsbW9zdCBhbHdheXMgQmV0RnJlZCBvZmZlcnMgZXh0cmEgcGxhY2VzIG9uIGJpZyBob3JzZSByYWNlcyBhbmQgY29tbWVudGFyeSBvbiBzZWxlY3RlZCBob3JzZSByYWNlcy4gCkJ1dCBhdCB0aGUgc2FtZSB0aW1lLCBnb2luZyBob21lIGZvciBhIGhvbWUgY29va2VkIG1lYWwgaXMgc29tZXRoaW5nIEkgbG92ZSB0aGF0IG5vdCBhIGxvdCBvZiBndXlzIGdldC4gSGF2aW5nIHlvdXIgZmFtaWx5IHRoZXJlIHN1cHBvcnRpbmcgeW91LCBjb21pbmcgdG8gZXZlcnkgZ2FtZSwgdGFsa2luZyB0byB0aGVtIGFmdGVyd2FyZCwgdGhlbSB0ZWxsaW5nIHlvdSBob3cgcHJvdWQgdGhleSBhcmUsIHRoZXJlIGRlZmluaXRlbHkgc29tZSBwcm9zIGFuZCBjb25zIHRvIGl0IGFsbC4uIApUbyBtZSBydW5uaW5nIGl0IHR3aWNlIGp1c3QgbWFrZXMgY2hlYXRpbmcgYW5kIGNvbGx1c2lvbiB0aGF0IG11Y2ggZWFzaWVyLiBUaGUgb25seSByZWFzb24gY2hlYXRpbmcgaGFzbid0IGJlY29tZSBhbiBpc3N1ZSBpcyBiZWNhdXNlIGV2ZXJ5b25lIHdobyBwbGF5cyBrbm93cyB3aGljaCBwZW9wbGUgYXJlIHBsYXlpbmcgdG9nZXRoZXIsIHNwbGl0dGluZyBhZnRlciB0aGUgZ2FtZSwgcnVubmluZyBwZW9wbGUgb3V0IG9mIHBvdHMgdG8gcnVuIGl0IHR3aWNlIHdpdGggdGhlaXIgYnVkZHkgZXRjLiBCdXQgdGhlc2UgcGxheWVycyBhcmUgc28gYmFkIHRoZXkgYXJlIHN0aWxsIGxvc2luZyB3aGlsZSBhY3RpdmVseSBjb2xsdWRpbmcgaW4gaGFuZHMuIApUaGUgdHJ1dGggaXMgdGhhdCBmcmVlbGFuY2UgaXMgaGFyZCBhbmQgaW52b2x2aW5nIHlvdXIgZnJpZW5kcyBpbiB5b3VyIGZyZWVsYW5jZSBpcyBub3QgYW4gZXhjdXNlIHRvIG5vdCBydW4geW91ciBidXNpbmVzcy4gVGhleSBub3QgdGFraW5nIHlvdXIgdmFsdWFibGUgdGltZS4gClRoaXMgcGFzdCB3ZWVrIE5pZ2h0bGluZSByYW4gYSBzY2F0aGluZyByZXBvcnQgb24gdGhlIGNvbXBhbnkncyBvdmVyIG1hcmtldGVkLCB1bmRlciB0ZXN0ZWQgKHdoaWNoIGlzIHRvIHNheSwgbm90IG11Y2ggYXQgYWxsKSBiaXJ0aCBjb250cm9sIHByb2R1Y3QsIHdoaWNoIGluY3JlYXNlcyBhIHdvbWFuJ3MgY2hhbmNlIG9mIGdldHRpbmcgYW4gZW1ib2xpc20gYnkgYSBoZWFsdGh5IDYzMCBwZXIgY2VudC4gSW4gdGhlIHBhc3QsIG9ubHkgbGlzdGVuaW5nIHRvIFJ1c2ggTGltYmF1Z2ggY291bGQgYWNjb21wbGlzaCB0aGF0Li4gCllvdSB3aWxsIGJlIG1lZXRpbmcgd2l0aCBhbnkgYWQgcG9zdGVycyBhdCB5b3VyIG93biByaXNrLi4gCkF2b2lkaW5nIHJvbWFuY2UgaW4gdGhlIFVTIGF0IHRoaXMgcG9pbnQgaW4gdGltZSBpcyBhIGJpdCBsaWtlIGF2b2lkaW5nIHRheGVzLiAKRmluZGluZyBhIFByYWN0aXRpb25lciB0aHJvdWdoIFJlZmVycmFsOiBOb3cgdGhhdCBhY3VwdW5jdHVyZSBhbmQgdHJhZGl0aW9uYWwgQ2hpbmVzZSBtZWRpY2luZSBhcmUgcmFwaWRseSBlbnRlcmluZyB0aGUgbWFpbnN0cmVhbSBvZiB0aGUgcHJhY3RpY2Ugb2YgbWVkaWNpbmUgaW4gTm9ydGggQW1lcmljYSwgYW4gaW5jcmVhc2luZyBudW1iZXIgb2YgcGVvcGxlIGFyZSBpbnRlcmVzdGVkIGluIGZpbmRpbmcgYSBxdWFsaWZpZWQgcHJhY3RpdGlvbmVyLiBBcyB3aXRoIGFsbCBwcm9mZXNzaW9uYWwgc2VydmljZXMsIHRoZSBiZXN0IHdheSB0byBmaW5kIGEgcHJhY3RpdGlvbmVyIGlzIHRocm91Z2ggYSByZWZlcnJhbC4uIApMaWdodCBzdWN0aW9uIHByb3ZpZGVzIGRyYWluYWdlIG9mIHRveGlucyBhbmQgZXhjZXNzIGZsdWlkcywgd2hpbHN0IGhlYXZpZXIgc3VjdGlvbiBjYW4gc3RpbXVsYXRlIGNpcmN1bGF0aW9uIHRvIHN0YWduYW50IG11c2NsZXMgYW5kIGxvb3NlbiBmaWJyb3VzIGFkaGVzaW9ucwpJIGFjdHVhbGx5IGxpa2UgdGhlbSB0ZXh0dXJlIG9mIG15IGhhaXIgYmV0dGVyIGFmdGVyIGl0J3MgYmVlbiBkeWVkLiAKSGF2ZSBwbGF5ZWQgdGhyb3VnaCBTdWJuYXV0aWNhIHR3aWNlLiBCb3RoIHRpbWVzLCBmZWx0IGV4dHJlbWVseSBjbG9zZSB0byB0aHJvd2luZyB1cCBhZnRlciBnb2luZyBpbiB0byBmaXggdGhlIG51Y2xlYXIgcmVhY3RvcnMuIFRoZSBkcnkgbGFuZCBtb3ZlbWVudCByZW1pbmRlZCBtZSBvZiBBcm1hIC8gRGF5IFogKG5laXRoZXIgb2Ygd2hpY2ggSSBjb3VsZCBwbGF5IGZvciBsb25nKSB3aXRoIG1vdmVtZW50IHRoYXQgZG9lc24gcXVpdGUgc3RhcnQgYW5kIHN0b3Agd2hlbiB5b3UgdGVsbCBpdCB0bywgbGlrZSB5b3UgY29uc3RhbnRseSBsdXJjaGluZyBhcm91bmQgYXQgdGhlIGVkZ2Ugb2YgeW91ciBiYWxhbmNlLiBJdCBsaWtlIHBsYXlpbmcgYSBjaGFyYWN0ZXIgd2hvIGlzIGRydW5rIGFuZCBub3QgcXVpdGUgaW4gY29udHJvbCBvZiB0aGVpciBtb3ZlbWVudC4KSW4gU3R1ZCBjYXJkIHBva2VyIHRoZSBjYXJkcyBhcmUgZGVhbHQgaW4gYSBwcmVhcnJhbmdlZCBjb21iaW5hdGlvbiBvZiBmYWNlIGRvd24gYW5kIGZhY2UgdXAgcm91bmRzIGZvbGxvd2VkIGJ5IGEgcm91bmQgb2YgYmV0dGluZy4gVGhlIG1vc3QgcG9wdWxhciBzdHVkIGNhcmQgcG9rZXIgaXMgdGhlIHNldmVuIGNhcmQgc3R1ZC4gSW4gdGhpcyBnYW1lIHR3byBleHRyYSBjYXJkcyBhcmUgZGVhbHQgdG8gZWFjaCBwbGF5ZXIuIFRoZXJlIGFyZSB0aHJlZSBjYXJkcyBmYWNpbmcgZG93biBhbmQgZm91ciBmYWNpbmcgdXAgZnJvbSB3aGljaCB0aGUgcGxheWVyIG11c3QgcGxheSB0aGVpciBiZXN0IGhhbmQuIFRoZXJlIGFyZSBzZXZlcmFsIHZhcmlhdGlvbnMgb2Ygc3R1ZCBjYXJkIHBva2VyIGluY2x1ZGluZyByYXp6LCBlaWdodCBvciBiZXR0ZXIgaGlnaCBsb3cgc3R1ZCwgZXRjLiBCZWZvcmUgVGV4YXMgSG9sZGVtIFBva2VyLCBzZXZlbiBjYXJkIHN0dWQgd2FzIHRoZSBtb3N0IHBvcHVsYXIgcG9rZXIgZ2FtZS4gVGFsa2luZyBvZiB0aGUgbW9zdCBwb3B1bGFyIHBva2VyIGdhbWVzIGFuZCB5b3UgY2FuIGFsd2F5cyBsZWFybiBwb2tlciBvbiBhbiBvbmxpbmUgcG9rZXIgc2Nob29sIGFuZCBhdCB5b3VyIGNvbnZlbmllbmNlLgpTaGUncyBsYXJnZWx5IG92ZXIgdGhlIGJyZWF0aGluZyBwcm9ibGVtcyB0aGF0IGJlZ2FuIG9uIHRoZSBsb3dlciBkb3NlLCBidXQgc2hlIHN0aWxsIGhhcyB0byB1c2UgYW4gaW5oYWxlciBvbmUgb3IgdHdvIHRpbWVzIGVhY2ggZGF5Li4gCkNvb3JzIExpZ2h0IGhhcyBsb3N0IDAuNCBtYXJrZXQgc2hhcmUgcG9pbnRzIGluIHRoZSB5ZWFyIHRvIGRhdGUgcGVyaW9kLCB3aGlsZSBCdWQgTGlnaHQgaGFzIGxvc3QgYSBmdWxsIHBvaW50Li4gClF1ZXN0cyBjYW4gYmUgYSBiaXQgdGV4dCBoZWF2eSwgYnV0IGl0IGJyb2tlbiB1cCBpbnRvIHR3byBvciB0aHJlZSBzZW50ZW5jZXMgcGVyIHRleHQgYm94IHNvIHlvdSBjYW4gc2xvd2x5IHdvcmsgdGhyb3VnaCBpdCB3aXRob3V0IGZlZWxpbmcgdG9vIG92ZXJ3aGVsbWVkIGJ5IGEgZ2lhbnQgYmxvY2sgb2YgdGV4dC4KSSBrbm93IEkgd291bGQgaGF2ZSBiZWVuIHNvIGFmcmFpZCB0byBwdXNoIGlmIEkgaGFkbiBnb3R0ZW4gaXQuIE15IGZpcnN0IEkgc2xlcHQgdW50aWwgaXQgd2FzIHRpbWUgdG8gcHVzaC4gTnVyc2VzIHdva2UgbWUgdXAgYW5kIHdlcmUgbGlrZSAieW91ciBjb250cmFjdGlvbnMgYXJlIG1pbnV0ZXMgYXBhcnQuIApIZXJlIGhvdyBJIHVuZGVyc3RhbmQgaXQgdG8gYmUuIE9mdGVuIGNob2xlc3Rlcm9sIGlzIGhpZ2ggdG8gdHJ5IHRvIHJlcGFpciB0aGUgZGFtYWdlIGZyb20gaW5mbGFtbWF0aW9uIGluIHRoZSBib2R5LiBUaGUgc21hbGwgZGVuc2UgdHlwZSBvZiBMREwgY2hvbGVzdGVyb2wgZ2V0cyBjYXVnaHQgaW4gdGhlIHRpbnkgdGVhcnMgaW4gdGhlIGFydGVyaWVzICAgdHJ5aW5nIHRvIGZpeCBpdCwgYnV0IGluIGEgY29uc3RhbnQgc3RhdGUgb2YgaW5mbGFtbWF0aW9uIHRoZSBjaG9sZXN0ZXJvbCBwaWxlcyB1cCBhbmQgYmxvY2thZ2VzIG9jY3VyIGFuZCBpbmNyZWFzZXMgdGhlIGluZmxhbW1hdGlvbi4gCkl0IHRha2VzIG1lIGEgMzAgbWludXRlIGJ1cyByaWRlIHRvIGdldCB0byBCQVJULiBUaGUgdHJhaW4gSSBuZWVkIHRvIGNhdGNoIGNvbWVzIGJ5IGV2ZXJ5IDEwIG1pbnV0ZXMgb3Igc28uIFRoYXQgcmlkZSBpcyBhbm90aGVyIDMwIG1pbnV0ZXMuIE9uY2UgSSBnZXQgb2ZmIEJBUlQsIEkgbmVlZCB0byBjYXRjaCBhbm90aGVyIGJ1cyB0aGF0IGNvbWVzIGV2ZXJ5IDMwIG1pbnV0ZXMgb3Igc28uIElmIEkgbGF0ZSBldmVuIGJ5IGEgbWludXRlLCB3ZWxsIHRoYXQgYW5vdGhlciBsb25nIGFzcyB3YWl0LiBPbmNlIEkgZ2V0IG9uIHRoYXQgbGFzdCBidXMsIGl0IHRha2VzIG1lIGFib3V0IDEwIG1pbnV0ZXMgdG8gZ2V0IHRvIHdvcmsuClNvb24gYWZ0ZXIsIE5pY2hvbGFzIGF0dGVuZGVkIHRoZSBob21lIG9mIGEgV29kb25nYSBwb2xpY2Ugb2ZmaWNlciwgYSBjbG9zZSBmcmllbmQsIGFuZCBhZG1pdHRlZCBoZSBoYWQgdGFrZW4gYWJvdXQgJDJtaWxsaW9uIGZyb20gQ29yY29yYW4gUGFya2VyIHRvIGdhbWJsZS4gVGhlIHNlbmlvciBjb25zdGFibGUgYXJyYW5nZWQgZm9yIE5pY2hvbGFzIHRvIGJlIGludGVydmlld2VkIGJ5IGEgZGV0ZWN0aXZlIGF0IFdvZG9uZ2EgcG9saWNlIHN0YXRpb24sIHdoZXJlIGhlIG1hZGUgZnVsbCBhZG1pc3Npb25zIHRvIHRoZSB0aGVmdHMgYW5kIHN1cHBsaWVkIHNwcmVhZHNoZWV0cyBkZXRhaWxpbmcgdGhlIHRyYW5zYWN0aW9ucywgd2hpY2ggdG90YWxsZWQgJDIsOTM3LDY2My4zMC4gClRoZXkgYXJlIG5vdCBzdXJlIGlmIHRoZXkgd2FudCB0byBidXkgdGhvc2Ugb3Igbm90LiAKVW50ZXIgZGVuIE1lbnNjaGVuIGhlcnJzY2h0IGRlciBmYWxzY2hlIEdsYXViZSwgZGVyIGF1Y2ggdm9uIHJ6dGVuIGdlc3R0enQgd2lyZCwgZGFzcyBkaWUgaHVmaWdlIEVpbm5haG1lIHZvbiBTb2RhIGJlciBlaW5lbiBsbmdlcmVuIFplaXRyYXVtIGVpbmVuIG5lZ2F0aXZlbiBFaW5mbHVzcyBhdWYgZGllIEZ1bmt0aW9uIGRlciBNYWdlbnNjaGxlaW1oYXV0IGhhdC4gCkNvbnN0cnVjdGlvbiBpcyBpbiB0aGUgaG9tZSBzdHJldGNoIG9uIElzbGFuZCBWaWV3cyAkNzUgbWlsbGlvbiBCZWFjaCBWaWV3IENhc2lubyBhdHRhY2hlZCB0byB0aGUgcmVzb3J0J3MgaG90ZWwgdG93ZXIgc291dGggb2YgSGlnaHdheSA5MCBuZWFyIHRoZSBQb3J0IG9mIEd1bGZwb3J0LiBJc2xhbmQgdmlldyBpcyBhZGRpbmcgNDMsMDAwIGFkZGl0aW9uYWwgc3F1YXJlIGZvb3RhZ2Ugb2YgZ2FtaW5nIHNwYWNlLiAKUmVnYXJkbGVzcywgdGhlIHBvaW50IG9mIG15IGNvbW1lbnQgaXMgdGhhdCBub25lIG9mIHVzIHNob3VsZCBiZSB0cnlpbmcgdG8gcG9saWNlIHdoYXQgYW55b25lIGVsc2UgaXMgc2F5aW5nIG91dHNpZGUgb2YgYnJlYWtpbmcgc3ViIHJ1bGVzLgpZb3Ugc2VlbSB2ZXJ5IHVwc2V0LiBJIGRvbiB0aGluayB0aGlzIGhlbHBzIHlvdXIgY2FzZSB3aXRoIHJlZ2FyZHMgdG8gYmVpbmcgc2VlbiBpbiBhIHJlYXNvbmFibGUgYW5kIHJhdGlvbmFsIGxpZ2h0LiAKKFRoaXMgcm91Z2hseSBkdXBsaWNhdGVzIHRoZSBlZmZlY3Qgb2YgdGhlIE1hc3RlcnMgYW5kIEpvaG5zb24gdGVjaG5pcXVlLCBvbmx5IGludGVybmFsbHkuIEJ5IHRoZSB3YXksIGEgbWlub3JpdHkgc2Nob29sIG9mIHRob3VnaHQgc3VnZ2VzdHMgdGhhdCBzb21lIG1lbiBwcmVmZXIgdG8gcmVsYXggdGhlIFBDIG11c2NsZSBhdCBoaXMgcG9pbnQuKS4gClRoZSBkcml2ZSBmcm9tIHRoZSBhaXJwb3J0IGZlbHQgcXVpdGUgZmFtaWxpYXIuIApXaWxsaWFtcyB0b29rIGEgdHVtYmxlIGluIHRoZSBsYXN0IGdhbWUgYXMgc2hlIHNsaXBwZWQgb24gdGhlIGdyYXNzLCBidXQgYXBwZWFyZWQgdW5zY2F0aGVkLiBUaGUgTm8uIDIgc2VlZGVkIFdpbGxpYW1zIG5leHQgZmFjZXMgQXVzdHJhbGlhbiBKYXJtaWxhIEdyb3RoLCBhbmQgY291bGQgZXZlbnR1YWxseSBtZWV0IHRvcCByYW5rZWQgc2lzdGVyIFNlcmVuYSBpbiB0aGUgZmluYWwuCkZyb20gYW50ZWxvcGUgdG8gemVicmEgYW5kIGFsbCB0aGUgd2lsZGxpZmUgaW4gYmV0d2VlbiwgQWZyaWNhJ3Mgc3R1bm5pbmcgZmF1bmEgaW5zcGlyZXMgaHVuZHJlZHMgb2YgYWR2ZW50dXJlIHRvdXJzIGEgeWVhciwgaW5jbHVkaW5nIHRob3NlIG9mIFVsdGltYXRlIEFmcmljYSBTYWZhcmlzLCB3aG9zZSBzY2hlZHVsZWQgZ3JvdXAgdHJpcHMgKHdpdGggZWlnaHQgdHJhdmVsZXJzIG1heCkgYW5kIGN1c3RvbWl6ZWQgdG91cnMgY29tZSB3aXRoIGxpdHRsZSB0byBubyBzaW5nbGUgZmVlcyBhdHRhY2hlZC4gCk9seW1waWFuIE1pY2hhZWwgUGhlbHBzIGNyZWF0ZWQgYSBzdGlyIGJ5IGZyZXF1ZW50aW5nLCBhbmQgYWNoaWV2aW5nIHNvbWUgc3VjY2VzcyBpbiwgdGhlIHBva2VyIHJvb20gYXQgQ2Flc2FycyBQYWxhY2Ugc2hvcnRseSBhZnRlciBoZSB3b24gYSByZWNvcmQgZWlnaHQgZ29sZCBtZWRhbHMgaW4gQmVpamluZy4gCkl0J3MgYmVlbiBhIHJvbGxlciBjb2FzdGVyIGFuZCB3ZSB3YW50IHRvIGJlIG9uIGFuIHVwIHdoZW4gd2UgZ2V0IHRvIHRoZSBwbGF5b2Zmcy4iLiAKQXJ0LiA0LgpNb3N0IGNydWNpYWxseSwgaGUgYWRkcywgdGhlIFVuaXRlZCBTdGF0ZXMgd291bGQgZmFjZSB0aGUgdmVyeSByZWFsIHJpc2sgb2YgbG9zaW5nIE1GTiB0cmFkaW5nIHN0YXR1cyB3aXRoIGV2ZXJ5IGZvcmVpZ24gY291bnRyeSB3b3JsZHdpZGUuIEZpcm1zIGVuam95IHByZWZlcmVudGlhbCBhY2Nlc3MgdG8gdGhlc2UgY291bnRyaWVzJyBtYXJrZXRzIGF0IG1vc3RseSB6ZXJvIG9yIGxvdyBpbXBvcnQgdGFyaWZmIHJhdGVzLCB3aXRoIHZlcnkgZmV3IGV4Y2VwdGlvbnMuIFRyYWRlIGlzIHdpdGggbm9uIEZUQSBwYXJ0bmVycy4gClRoZSByb2FkIHdhcyBub3QgZ2xvc3N5IGFuZCBzaW51b3VzLiBJIHdhcyBpbiB0aGUgbG9ja2VyIG9ubHkgc2hha2luZy4gClJlYWNoIG91dHMgYnkgcG9saXRpY2FsIHN0YWZmIHRvIHRoZSBEUFAgYW5kIHRvIG90aGVyIHByb3NlY3V0b3JzIGFyZSBqdXN0IHdpbGRseSBvdXQgb2YgYm91bmRzLi4gCkFzIHNvb24gYXMgc2hlIGFncmVlZCwgSSB3ZW50IG92ZXIgdG8gbXkgYnVkZGllcyBhbmQgdG9sZCB0aGVtIHdlIG5lZWQgdG8gb3JnYW5pemUgYSBoYXBweSBob3VyIGF0IHRoZSBob3RlbCBsb2JieSBiYXIgdG8gbWVldCBhbmQgZ3JlZXQgYWxsIHRoZSBuZXcgc3R1ZGVudHMuIFRoZXkgcmVhZGlseSBhZ3JlZWQuIExvbmcgc3Rvcnkgc2hvcnQ6IEkgd2Fsa2VkIHdpdGggaGVyIG92ZXIgdGhlcmUsIGFib3V0IDE2IG9mIHVzIGdhdmUgdGhhdCBiYXIgYWxsIHRoZSBidXNpbmVzcyBpdCBjb3VsZCBoYW5kbGUsIGFuZCBJIGNoYXR0ZWQgdXAgdGhhdCBsb3ZlbHkgeW91bmcgbGFkeSBhbmQgZ290IGhlciBkcnVuayBvbiBwaXRjaGVycyBvZiBjb2xkIGJlZXIuIEFmdGVyd2FyZCwgSSB3YWxrZWQgaGVyIG92ZXIgdG8gdGhlIG5lYXJlc3QgZWwgdHJhaW4gc3RvcCBhbmQgd2FpdGVkIHdpdGggaGVyIGZvciBhIHNvdXRoYm91bmQgUHVycGxlIGxpbmUgdHJhaW4uIEFuZCB0aGVyZSwgaW4gdGhlIGRpbSBsaWdodCBvZiB0aGUgRm9zdGVyIFN0cmVldCBlbCBzdG9wLCBJIGtpc3NlZCBoZXIgZm9yIHRoZSB2ZXJ5IGZpcnN0IHRpbWUuCldlIGhlYmJlbiBub2cgZWVuIGxhbmdlIHdlZyB0ZSBnYWFuIGluIGVjaHRlIGdlbGlqa3dhYXJkaWdoZWlkIHZhbiBtYW4gZW4gdnJvdXcsIHdhYXJiaWogdmVyc2NoaWxsZW4gdmVlbCBtaW5kZXIgY3VsdHVyZWVsIGVuIHZlZWwgbWVlciBiaW9sb2dpc2NoIHZhbiBhYXJkIHppam4sIGVuIGRlICJlbWFuY2lwYXRpZSB2YW4gZGUgbGFnZXIgb3BnZWxlaWRlIG1hbiIgaXMgbiB2YW4gZGUgaG9yZGVzIGRpZSBub2cgdGUgZ2FhbiB6aWpuLk9oLCBlbiBtZXQgZGUgc3R1ZGllc2NodWxkZW4gYW5ubyBudSBrdW4gamUgdm9sZ2VucyBtaWogYWxzIHZyb3V3IHZsIGJldGVyIGVlbiBnZXRhbGVudGVlcmRlIGVsZWt0cmljaWVuIG9mIGVlbiBvbmRlcm5lbWVuZGUgbG9vZGdpZXRlciB0cm91d2VuIGFscyBqZSB6byBub2RpZyByaWprIG1vZXQgd29yZGVuIHZhbiBqZSBrZXJlbC5EeWxhbktpbmcxOTk5ICA1IHBvaW50cyAgc3VibWl0dGVkIDIwIGhvdXJzIGFnb3prZXIgaW4gb256ZSBqZXVnZCwga2FuIGlrIG1lIHZvb3JzdGVsbGVuIGRhdCBoZXQgbm9nYWwgaW5nZWRyYW1kIGlzIGJpaiB2cm91d2VuIGRhdCBqZSAibW9ldCIgdHJvdXdlbiwgZW4gZGFuIGJpaiB2b29ya2V1ciBtZXQgZWVuIGtuYXBwZSwgcmlqa2UgbWFuLiAKVGhlIGJyYWlucyBvZiBpbnNvbW5pYWNzLCBpdCB0dXJucyBvdXQsIGFyZSBtb3JlIGV4Y2l0YWJsZSB0aGFuIGJyYWlucyBvZiB0aG9zZSB3aXRoIG5vcm1hbCBzbGVlcCBwYXR0ZXJucy4gClNlaWVuZGVyICAxIHBvaW50ICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvCllvdSBsaWtlbHkgc2VlIG90aGVyIHBlb3BsZSB3YWl0aW5nIHRoZXJlIHRvby4gSSBuZXZlciBzZWVuIEthbmUgc3RvcCBhbmQgVG9ld3Mgb25seSBzaWduZWQgZm9yIGxpdHRsZSBraWRzIGJlZm9yZSBoZSBsZWZ0IGJ1dCBJIGNhbiBzYXkgZm9yIGNlcnRhaW4gaWYgdGhhdCBub3JtYWwgZm9yIHRoZW0uIApJIGhhdmUgYmVlbiBsb29raW5nIGF0IHNvbWUgZnJlZWxhbmNlIGpvYnMgdG8gaGVscCBnZXQgc29tZSBleHRyYSBjYXNoLiAKQWx0aG91Z2ggbm90IGEgYnVzIGl0cyByZXN0b3JhdGlvbiB3YXMgZnVuZGVkIGJ5IG1vbmV5IHJhaXNlZCBhdCB0aGUgMjAxNyBCZWVyIGFuZCBCdXMgV2Vla2VuZCBldmVudC4gClRhbnF1ZSBWZXJkZSBSYW5jaCBpbiBUdWNzb24sIEFyaXouLCBoYXMgYSBIZXkgRGFkLCBIZXkgRHVkZSEgd2VzdGVybiBhZHZlbnR1cmUgcGFja2FnZS4gVGhlIGRlYWwgaW5jbHVkZXMgdHdvIG5pZ2h0cyBpbiBzb3V0aHdlc3Rlcm4gc3R5bGVkIGFjY29tbW9kYXRpb25zLCBoZWFydHkgYnJlYWtmYXN0IGVhY2ggbW9ybmluZywgZ3VpZGVkIG1vdW50YWluIGJpa2luZyBlYWNoIGRheSwgaG9yc2ViYWNrIHJpZGVzIChncm91cCBvZiBmYW1pbHkpIGVhY2ggZGF5LCB0d28gdGlja2V0cyB0byB0aGUgUGltYSBBaXIgTXVzZXVtIG9yIHRoZSBTb25vcmFuIERlc2VydCBNdXNldW0uIApQcm9mLiBOZXVtaXdha2luIGVtcGZpZWhsdCBmciBkaWUgaW5uZXJlIEFud2VuZHVuZyBoYW5kZWxzYmxpY2hlIDMlaWdlIEgyTzIgICBMc3VuZywgYmVnaW5uZW5kIG1pdCAyIDMgVHJvcGZlbiBhdWYgZWluZW4gRXNzbGZmZWwgV2Fzc2VyLCAzIG1hbCB0Z2xpY2guIApTZWFzb24gMSBpcyB0cnVseSBtYWdpY2FsLiBJJ2xsIG5ldmVyIGZvcmdldCBob3cgaGF1bnRpbmcgdGhlIHdpdGNoIHRyaWFsIHdhcyBmb3IgZXhhbXBsZS4gQW5kIHRoZWlyIHdlZGRpbmchIEJsaXNzLiBCdXQgSSB3YXNuJ3QgYSBib29rIHJlYWRlciBmb3IgdGhpcyBvbmUuIFNvIGl0IHdhcyBhIGdsb3Jpb3VzIG5ldyB0cmVhdC4KVGhlIG1vb2QgaW4gd2hpY2ggdGhlIG1vdmllIG9wZW5zIGFsc28gbWF0dGVycy4gClBldXQgdHJlIGVuIHNlcmEgdCBpbCBkZSBtbWUgYXZlYyBsYSBiZXJjZSBkdSBDYXVjYXNlLCB1bmUgcGhhc2UgZGUgZHNxdWlsaWJyZSBmYWlzYW50IHN1aXRlICB1biByZXRvdXIgZGUgbCBNYWlzIG5lIHNveW9ucyBwYXMgdHJvcCBwcmltZXNhdXRpZXJzICBjZSBzdWpldCwgZXQgbiBwYXMgcXVlIGxhIG5hdHVyZSBuIHBhcyBmaWdlIGV0IHF1ZSBzaSB1bmUgZ3JhaW5lIGJuZmljaWUgZGUgbGEgem9vY2hvcmllLCBkZSBsIGV0Yy4sIGlsIGV4aXN0ZSB1biBhdXRyZSBtb2RlIGRlIHRyYW5zcG9ydCBkZXMgc2VtZW5jZXM6IGwgYyBjZWx1aSBkb250IGwgZXN0LCB2b2xvbnRhaXJlbWVudCBvdSBub24sIHJlc3BvbnNhYmxlLiAKUmVtb3ZlZCBjaGlsZHJlbiBmcm9tIHRoZSBzZXh1YWwgZWNvbm9teSB3aXRoIGFnZSBvZiBjb25zZW50IGxhd3MuIFRoZSBWaWN0b3JpYW5zIGFsc28gaW1hZ2luZWQgY2hpbGRyZW4gYXMgImlubm9jZW50IGFuZ2VscyIgZnJlZSBvZiBhbGwgc2luICh3ZWxsLCBzb21lIGNoaWxkcmVuIHdlcmUgYW5nZWxzICAgd2hpdGUsIGJsb25kLCBiaWcgYmx1ZSBleWVkKS4uIApXZSBzdXBwbHkgYW4gb24gc2l0ZSBjb29yZGluYXRvciB0byBwcm9tb3RlIHN0cmVzcyBtYW5hZ2VtZW50IGFuZCBPbiBTaXRlIE1hc3NhZ2Ugc2Vzc2lvbnMgdG8gZm9vdCB0cmFmZmljLi4gCkkgYWxzbyBsb3ZlZCB0aGUgbXVzaHJvb21zLCB0aGV5IHdlcmVuJ3Qgc2xpbXksIG5vciBkcnksIHdoaWNoIHRoZXkgc29tZXRpbWVzIGNhbiBiZSwgYW5kIGFzIGEgd2hvbGUgbXkgbWVhbCB3YXMganVzdCB3aGF0IEkgd2FudGVkIG9uIHRoaXMgU2F0dXJkYXkgbW9ybmluZy4uIApHb3QgYSBwYXltZW50IG9mIHNvcnRzIG9uIFR1ZXNkYXkgbmlnaHQgd2hpY2ggd2FzIGdvb2QgYW5kIHdlIGFyZSB0aGFua2Z1bCB0byB0aGUgbWFuYWdlbWVudCBjb21taXR0ZWUgZm9yIHRoYXQuIEV2ZXJ5Ym9keSBoYXMgYSBsb3Qgb2Ygd29yayB0byBkbyBvbiBhbmQgb2ZmIHRoZSBwYXJrIHRvIGVuc3VyZSB3ZSB3aWxsIHN0YXkgaW4gdGhlIGRpdmlzaW9uLiIKSGUgd2Fzbid0IGV2ZW4gZHJlc3NlZCB1cCBtdWNoLCB0aGluayBpdCB3YXMgYSBUIHNoaXJ0IGFuZCBzb21lIGFjY2Vzc29yaWVzIHRvIGdvIHdpdGggaXQuIApCaWxsYm9hcmRzIG9mIFZlbGFzY28gaHVnZ2luZyBwb29yIGluZGlnZW5vdXMgY29uc3RpdHVlbnRzIGluIENoaWFwYXMgYXJlIHBsYXN0ZXJlZCBhcm91bmQgdGhlIHN0YXRlIGFuZCB0aGUgY291bnRyeS4gCldoaWNoIGV2ZXIgb25lIHlvdSBnZXQsIGlmIGl0IGhhcyBhIGRpYWwgZ2F1Z2UgYW5kIGEgbXVzaHJvb20gbG9va2luZyB3ZWlnaHQgcmVndWxhdG9yLCBnZXQgYSB0aHJlZSBwaWVjZSB3ZWlnaHQgcmVndWxhdG9yIHRvIHJlcGxhY2UgdGhlIG11c2hyb29tIGxvb2tpbmcgb25lLiAKUmV2aWV3OyBNaWNyb3NvdCBXb3JkIDIwMTAsIFBvd2VyUG9pbnQgMjAxMCBhbmQgRXhjZWwgMjAxMDsgTWljcm9zb2Z0IE9mZmljZS4gCktva2VtdWxsZXIgaGFzIGFkZGl0aW9uYWwgcHJvZmVzc2lvbmFsIGV4cGVyaWVuY2UgaW4gbWFya2V0aW5nLCByZXRhaWwgYW5kIHNtYWxsIGJ1c2luZXNzLiBIZSBob2xkcyBhIE1hc3RlciBvZiBCdXNpbmVzcyBBZG1pbmlzdHJhdGlvbiBmcm9tIElvd2EgU3RhdGUgVW5pdmVyc2l0eS4uIApDaHVyY2ggcGFyaXNoLiBBdCB0aGUgZnVuZXJhbCBob21lLiAKU29tZSBiZWdpbm5pbmcgcGxheWVycyBjb25mdXNlIHRoZSB0ZXJtcyAiYmFua3JvbGwiIGFuZCAiYnV5IGluLiIgQSBidXkgaW4gaXMgdGhlIGFtb3VudCBvZiBtb25leSB5b3Ugc3RhcnQgd2l0aCBpbiBhIGdhbWUgb3IgdGhlIGVudHJ5IGZlZSBpbnRvIGEgdG91cm5hbWVudC4gWW91ciBiYW5rcm9sbCBpcyB0aGUgZW50aXJlIGFtb3VudCBvZiBtb25leSB5b3UgaGF2ZSBhdmFpbGFibGUgd2l0aCB3aGljaCB0byBwbGF5IHBva2VyIG92ZXIgYSBwZXJpb2Qgb2YgdGltZS4gSXQgd291bGQgYmUgdW53aXNlIHRvIGJyaW5nIHlvdXIgZW50aXJlIGJhbmtyb2xsIGF0IGFueSBvbmUgdGltZSBvciB0byB1c2UgYWxsIHRoZSBtb25leSB5b3UgaGF2ZSB3aXRoIHlvdSB0byBidXkgY2hpcHMgcmlnaHQgb2ZmLiAKV2h5IGRvIHlvdSBrZWVwIGp1c3QgbWFraW5nIHN0dWZmIHVwIGFuZCBzcGVha2luZyBvbiB0aGUgYmVoYWxmIG9mIG90aGVycz8gSHlwb3RoZXRpY2FsbHkgaWYgVHJ1bXAgc2hvdCBhbnlvbmUsIEkgZGVub3VuY2UgdGhhdCBhbmQgaGUgc2hvdWxkIGJlIHByb3NlY3V0ZWQgbGlrZSBhbnlvbmUgZm9yIG11cmRlci4KQ09MRCBDVVQgQ09NQk86IFR1cmtleSBCb2xvZ25hOiBNZWNoYW5pY2FsbHkgc2VwYXJhdGVkIHR1cmtleSwgd2F0ZXIsIGNvbnRhaW5zIGxlc3MgdGhhbiAyJSBvZjogc2FsdCwgY29ybiBzeXJ1cCBzb2xpZHMsIHBvdGFzc2l1bSBsYWN0YXRlLCBkZXh0cm9zZSwgc29kaXVtIGRpYWNldGF0ZSwgc29kaXVtIGVyeXRob3JiYXRlLCBzb2RpdW0gbml0cml0ZSwgZmxhdm9yaW5ncy4gCk1hJ3N5aXJhbCBtdXNsaW1uIHJhaG1ha3VtdWxsaC4gU3VuZ2d1aCwga2FsYXUgZGlyZW51bmdrYW4gYmV0dWwgYmV0dWwsIGtleWFraW5hbiBha2FuIGRhdGFuZ255YSBrZW1hdGlhbiBoYW55YSBkYXJpIEFsbGFoLCBha2FuIG1hbXB1IG1lbmdlcmVtLiAKQ29uZnVzaW5nIGFzIGhlbGwsIGJ1dCB0aGUgZ2FncyB3ZXJlIGZ1bm55LiAKMSBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCklmIHlvdSBjYW4gZ28gdG8gYmVkIGFuZCB3YWtlIHVwIGF0IHRoZSBzYW1lIHRpbWUgZXZlcnkgZGF5IHRoYXQgd291bGQgYmUgaWRlYWwuLiAKSSB3YW50ZWQgdG8gZG8gYSBzaG93IHRoYXQgbG9va2VkIHJlYWxseSwgcmVhbGx5IGdsYW1vcm91cyBhbmQgdGhlbiB1bmRlcm5lYXRoIHlvdSdkIHNlZSBhbGwgdGhlIHJvdCBvZiBldmVyeXRoaW5nIGFuZCBqdXN0IGhvdyBkYXJrIGFuZCBkYXN0YXJkbHkgYW5kIGRlcHJlc3NpbmcgdGhhdCB3b3JsZCBpcy4gVGhlcmUncyBhIGRhcmtuZXNzIHRvIGl0LiBUbyBnbyBpbnRvIGEgcm9vbSBhbmQgc2F5IEkgd2FubmEgY2hhbmdlIG15IGZhY2UgdGhhdCdzIGEgbG90IG9mIHNlbGYgaGF0cmVkLiAKQSBkb2cgb3duZXIgY2FuIHVzdWFsbHkgdGVsbCB3aGVuIHRoZWlyIHBldCBpcyBub3QgZmVlbGluZyB3ZWxsLCBidXQgaG93IGRvIHRoZXkga25vdyB3aGVuIHRoZSBwcm9ibGVtIGlzIHNlcmlvdXM/IEluIHRoaXMgc2VjdGlvbiB3ZSBkaXNjdXNzIG1hbnkgZ2VuZXJhbCBzaWducyB0aGF0IHlvdXIgZG9nIGNvdWxkIGJlIGlsbC4gRWFycyBhbmQgY29hdCwgZW5lcmd5IGxldmVsLCBlYXRpbmcgaGFiaXRzIGFuZCBzdG9vbCBoYWJpdHMgICBhbGwgb2YgdGhlc2UgY2FuIGdpdmUgc2lnbnMgdGhhdCB5b3VyIGRvZyBpcyB1bmRlciB0aGUgd2VhdGhlciBvciBzZXJpb3VzbHkgaWxsLiBUaGlzIHNlY3Rpb24gaXMgYSBtdXN0IHJlYWQgZm9yIGFueSBkb2cgb3duZXIsIGFzIGl0IGFsc28gaW5jbHVkZXMgYW4gZXh0ZW5zaXZlIGNoZWNrbGlzdCBvZiB2aXNpYmxlIHNpZ25zIG9mIGlsbG5lc3MgaW4gYSBkb2cuIFdlIHN1Z2dlc3QgeW91IHByaW50IHRoaXMgb3V0IGFuZCBrZWVwIGl0IGhhbmR5LgpEYXJhbiBsIEN1bGxlbiBzZWxic3Qga2VpbmUgWndlaWZlbC4gClNvIEkgbGFib3VyZWQgaGFyZCBmb3IgMTAgaG91cnMgdW5tZWRpY2F0ZWQuIEV2ZW50dWFsbHkgYSBzZWNvbmQgYW5hZXN0aGVzaW9sb2dpc3QgYXJyaXZlZCBpbiB0aGUgbW9ybmluZyBhbmQgYWdyZWVkIHRvIGNvbWUgZ2l2ZSBtZSBhbiBlcGlkdXJhbC4gSXQgb25seSB0b29rIG9uIG9uZSBzaWRlIGFuZCB3b3JlIG9mZiBhIGNvdXBsZSBob3VycyBsYXRlciB3aXRob3V0IHRoZSBiYWJ5IG1vdmluZyBhdCBhbGwgaW4gdGhhdCB0aW1lLiAKVGlueW51Z2dldCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpTb21lIHdpbGwgbGV0IHlvdSB3aW4gZW50cnkgdG8gbWFqb3IgcmVhbCBsaWZlIHRvdXJuYW1lbnRzIGFuZCB3ZSd2ZSBhbHJlYWR5IHNlZW4gcmFuayBhbWF0ZXVycyBwbGF5IGFsb25nc2lkZSB0aGUgYmVzdCBhdCB0aGUgZmFibGVkIFdvcmxkIFNlcmllcyBvZiBQb2tlciB1c2luZyB0aGlzIG1ldGhvZC4gSW4gaG93IG1hbnkgc3BvcnRzIGNhbiB5b3Ugc2VlIGhvbWUgYmFzZWQgYW1hdGV1cnMgY2hhbGxlbmdlIHJlYWwgV29ybGQgQ2hhbXBpb25zIGxpa2UgdGhpcz8gVGhhdCBwcm9ncmVzc2lvbiBpcyBhdmFpbGFibGUgdG8gYW55b25lIHdobyBwbGF5cyBpZiB0aGV5IGhhdmUgYSBsaXR0bGUgYml0IG9mIGx1Y2sgYW5kIGRvbid0IHNjcmV3IHRoaW5ncyB1cC4uIApXZSBoYXZlIDEwMCBoZWFsdGguIAoiQWJzb2x1dGVseS4gVGhvdXNhbmRzIG9mIHBsYXllcnMgYXJvdW5kIGhlcmUgd2VyZSBsb29raW5nIGZvcndhcmQgdG8gdGhpcywiIEFsYnJpbmNrIHNhaWQsICJUaGUgc3RhZmYgd2hvIHdvcmsgdGhlcmUgYW5kIHRoZSBwZW9wbGUgc3BlbmRpbmcgbW9uZXkgaW4gdGhlIGNhc2lubywgb3V0c2lkZSB0aGUgY2FzaW5vLCBob3RlbHMgYW5kIHJlc3RhdXJhbnRzLiIKSSBoYXZlIGJlZW4gYSB3aG9sZXNhbGUgcmVwIGZvciAyMisgeWVhcnMgYW5kIG15IGNsaWVudCBoYXMgYWx3YXlzIGJlZW4gdGhlIGJyb2tlcnMuIApBc2sgbWUgdG8gcmVtb3ZlIG15IGNjdy4gVGhlbiBzYXlzIGhlIGp1c3QgZ2V0IGl0IGZyb20gbXkgaG9vZHkgcG9ja2V0LiAKVHdvIHllYXJzIGFnbyBCb2IgU2xlemFrLCB0aGUgZm9ybWVyIGNoaWVmIGZpbmFuY2lhbCBvZmZpY2VyIG9mIGJyb2tlcmFnZSBURCBBbWVyaXRyYWRlLCBmaW5pc2hlZCAxNXRoIGluIHRoZSBNYWluIEV2ZW50IGFuZCBhIHllYXIgZWFybGllciBoZWRnZSBmdW5kIG9wZXJhdG9yIERhdmlkIEVpbmhvcm4gcGxhY2VkIDE4dGguIEJpbGwgQ2hlbiwgYW4gYXJiaXRyYWdlIGV4cGVydCBhdCBvcHRpb25zIHRyYWRpbmcgZmlybSBTdXNxdWVoYW5uYSBJbnRlcm5hdGlvbmFsIEdyb3VwLCBoYXMgd29uIGEgY291cGxlIG9mIGJpZyBtb25leSB0b3VybmFtZW50cyBhbmQgaGFzIGJlZW4gY2l0ZWQgaW4gYXQgbGVhc3Qgb25lIGJvb2sgZm9yIGhpcyAiQ2hlbiBmb3JtdWxhIiBmb3Igd2lubmluZyBhdCBUZXhhcyBIb2xkICdFbS4gRG9uJ3QgYXNrOyBHb29nbGUgaXQuIChSZWFkICJXaGF0J3MgU3RpbGwgV3Jvbmcgd2l0aCBXYWxsIFN0cmVldC4iKQpJZiB5b3UgdGhpbmsgeW91IGFyZSByZWFkeSB0byBwbGF5IGluIHRoZSBiZXN0IHBva2VyIHNpdGVzLCB3ZWxsIGdvb2QgZm9yIHlvdSEgQXJlIHlvdSBzdXJlIGFib3V0IHlvdXIgc2tpbGxzIHRob3VnaD8gVG8gcmVhbGx5IGVuam95IHlvdXIgdGltZSBpbiB0aGVzZSBiZXN0IHBva2VyIHNpdGVzIHlvdSBtdXN0IGF0IGxlYXN0IGJlIGluIHRoZSBydW5uaW5nIHRvIHdpbiwgYW5kIHRvIGRvIHRoYXQsIHlvdSBoYXZlIHRvIHJlYWQgb3VyIHRpcHMgd2hpY2ggaXMgZXNwZWNpYWxseSBmb2N1c2VkIGluIHRlYWNoaW5nIHlvdSBob3cgdG8gYmx1ZmYsIGFuZCBibHVmZiByZWFsbHkgd2VsbC4gVGhpcyB3YXksIHdoZW4geW91IGVudGVyIHRoZXNlIGJlc3QgcG9rZXIgc2l0ZXMgeW91IG5vdCBvbmx5IGVuam95IHlvdXJzZWxmLCB5b3UgY29tZSBvdXQgYSB3aW5uZXIuClRoZSBpZGVhIHdhcyB0byBqdXN0IGhhdmUgZnVuIGFuZCBzZWUgd2hlcmUgaXQgd2VudC4gQSB3ZWVrIGFnbywgaGUgYWR2YW5jZWQgdG8gdGhlIGZpbmFsIHRhYmxlLCB3aXRoIGVpZ2h0IG90aGVyIHBsYXllcnMgdnlpbmcgZm9yIHRoZSBtaWxsaW9uIGdyYW5kIHByaXplLiBKdXN0IGdldHRpbmcgdGhlcmUgZ3VhcmFudGVlZCBoaW0gYXQgbGVhc3QgYSBtaWxsaW9uIHBheWRheSBmb3IgbmludGggcGxhY2Ugd2l0aCB0aGUgcG9zc2liaWxpdHkgb2Ygd2lubmluZyBtb3JlIGlmIG90aGVycyB3ZXJlIGVsaW1pbmF0ZWQgYmVmb3JlIGhpbS4uIApPciByYXRoZXIsIHRoZXkgdGVsbCBtZSB0byBnaXZlIHRoZW0gYSBiYWQgcmV2aWV3IGFuZCBhIGJhZCB0aXAgYmVjYXVzZSB0aGV5IGRvbiB1bmRlcnN0YW5kIGhvdyBVYmVyIHdvcmtzLiBBcyBsb25nIGFzIHRoZXkgZG9uIHRlbGwgbWUgdGhlIGd1eSB3YXMgcnVkZSBvciBzb21ldGhpbmcgSSBnaXZlIG15IHVzdWFsIGdvb2QgcmF0aW5nIGFuZCBnb29kIHRpcCBqdXN0IGZvciBkZWFsaW5nIHdpdGggdGhlbS4uIApUaHJvYXdhMzIgdQoiSGksIHN3ZWV0aWUuIERvbid0IGNyeSwgbXkgYmFieSwiIGhlciBtb3RoZXIgd2hpc3BlcnMsIGdhemluZyBhdCBoZXIgZGF1Z2h0ZXIuIFBhdWwncyBIb3NwaXRhbCBsYXN0IHllYXIuIE1hbnkgb2YgdGhlbSwgbGlrZSBJc2FiZWxsYSwgdG9vayB0aGVpciBmaXJzdCBicmVhdGhzIGluIHRoZSBvcGVyYXRpbmcgcm9vbS4KTm93LCB3ZSBuZWVkIHRvIHN0YXkgYWxpdmUgd2hpbGUgd2UgZ2V0dGluZyB0byBjYXNlIG91ciBiaWcgZ3V5cyAgIGF0IGxlYXN0IHRpbGwgdHVybiA0IG9yIDUsIHNvIHdoYXQgY2FuIHdlIHBpY2sgdG8ga2VlcCB1cyBhbGl2ZT8gSG93IGFib3V0IHN0dWZmIHRoYXQgZ29ubmEgZ2FpbiB1cyBzb21lIGxpZmUsIFtbQ2hpbGQgb2YgTmlnaHRdXSBpcyBjaGVhcCBhbmQgaGFzIGxpZmVsaW5rLCBhbmQgbWF5YmUgd2UgY2FuIGFsc28gdXNlIFtbRGlyZWZsZWV0IFBvaXNvbmVyXV0gdG8gZmxhc2ggb3V0IGEgYmxvY2tlciBhZ2FpbnN0IGEgYmlnIGNyZWF0dXJlIHdoZW4gb3VyIG9wcG9uZW50IGRvZXNuIGV4cGVjdCBpdCwgc29ydCBsaWtlIGEgMiBtYW5hIFtbTXVyZGVyXV0uIApTaG91bGQgcG9saXRpY2lhbnMgd2hvIHB1cnBvc2VmdWxseSBsaWUgdG8gc3RhcnQgd2FycyBvZiBhZ2dyZXNzaW9uIGJlIGV4ZWN1dGVkIHdpdGhvdXQgdHJpYWw/IEFmdGVyIGEgdHJpYWw/IFllcyBvciBuby4KMjAxOCBTYW5kaGlsbHMgUG9rZXIgUnVuIGRyYXdzIDE0MCByaWRlcnMKVG8gbXVjaCBvZiBXV0kncyBkZWNpc2lvbnMgd2VyZSBub3QgYSBxdWVzdGlvbiBvZiBlZmZpY2llbmN5IG5vciByZWFsaXR5LgpBIGxvdCBvZiB0aGUgImJsdWZmIiBoYW5kcyBkb24ndCBmdW5jdGlvbiB0aGF0IHdlbGwgYXQgdGhlIFNQUiB0aGF0IHJlc3VsdHMgaW4gdGhlc2UgZ2FtZXMgYW5kIHlvdXIgbXVjaCBiZXR0ZXIgb2ZmIGp1c3QgcHVzaGluZyBhIHRvbiBvZiBlcXVpdHkgd2l0aCBhIGxpbmVhciByYW5nZS4gCkFsb25nIHdpdGggb25saW5lIHBva2VyIGFuZCBvbmxpbmUgYmluZ28gcGVvcGxlIGFsc28gZGVzaXJlIHRvIHRyeSB0aGVpciBsdWNrIHdpdGggb25saW5lIHNsb3QgZ2FtZXMuIFNsb3QgbWFjaGluZXMgYXJlIGFsc28gc29tZXRpbWVzIHJlZmVycmVkIHRvIGFzIGZydWl0IG1hY2hpbmUgb3IgcG9rZXIgbWFjaGluZSBhbmQgYXJlIHNpbXBseSBjYWxsZWQgYXMgc2xvdHMuIApXaGVuIHlvdSBjYWxsIHRoZSBlbGVjdHJpY2lhbiBpbiB0byBmaXggeW91ciBzaGl0IGF0IDEyIGluIHRoZSBhZnRlcm5vb24gYW5kIHlvdSBqdXN0IG1hZGUgYSBncmFuZCBpbiA1IG1pbnV0ZXMsIGl0IHJlYWxseSBmdWNraW5nIHNjYXJ5IHRoYXQgcG9rZXIgbWF5IHNvbWVkYXkgZ28gYXdheS4gCklmIEkgbG9vayBoaW0gb3IgaGVyIGRlYWQgb24sIG15IG9wcG9uZW50IG1heSBiZSBhYmxlIHRvIGFkanVzdCBoaW0gb3IgaGVyc2VsZiBhbmQga2VlcCBmcm9tIGdpdmluZyBhd2F5IGhpcyBvciBoZXIgdGVsbC4gCk9uZSBvdGhlciBza2F0ZXIgaGFzIGRvbmUgaXQgLiAKWW91IGhhdmUgYSBnaWFudCBjb2xsZWN0aW9uIG9mIG5pY2VseSByb2xsZWQgY3JpdCBtZWxlZSB3ZWFwb25zPyBUaGVuIEkgaG9wZSB0byBnb2QgeW91IHBpY2tlZCB1cCBXaGl0ZW91dCBGaW9uYSBiYWNrIHdoZW4gc2hlIHdhcyBIYXJ2ZXN0ZXIgRmlvbmEgKHRob3VnaCBsb3RzIG9mIHBlb3BsZSBkaWRuIGF0IHRoZSB0aW1lIHNpbmNlIHNoZSB3YXMgYSByZXNraW4pIHNpbmNlIG90aGVyd2lzZSB5b3UgYXJlIHNpbXBseSB1bmFibGUgdG8gZmllbGQgYSBkZWNlbnQgY3JpdCBtZWxlZSB0ZWFtLiAKSSB0aGluayB0aGF0IGJhcnJpbmcgc29tZW9uZSB3aG8gaXNuIHZhY2NpbmF0ZWQgYW5kL29yIGlzIGEgcG90ZW50aWFsIGNhcnJpZXIgb2YgYW4gaWxsbmVzcyBpcyBtb3JlIGltcG9ydGFudCB0aGFuIHRoZWlyIHZhY2F0aW9uLiBJZiBhIGNvdW50cnkgd2FudHMgdG8gcHJvdGVjdCB0aGVpciBjaXRpemVucyBmcm9tIGFuIGlsbG5lc3MsIHRoYXQgd29ydGggdGhlIGhlYWRhY2hlIG9mIHByb3ZpbmcgeW91ciB2YWNjaW5hdGlvbnMgd2hlbiB5b3UgYXBwbHkgZm9yIGEgdmlzYS4KVml0IEQgTG93IGxldmVscyBvZiBEIGNhdXNlIHByb2JsZW1zIGluIHBhdGllbnRzIHdpdGggYXV0b2ltbXVuZSBkaXNvcmRlcnMKQW4gb2xkZXIgcmVsYXRpdmUgd2l0aCBhIGRhaWx5IHRyYWluIGNvbW11dGUgaGFzIHJlcXVlc3RlZCBhIG11c2ljIHBsYXllciBmb3IgdGhlIGhvbGlkYXlzICAgYnV0IHRoZXkgZG9uJ3Qgd2FudCBhbnl0aGluZyB3aXRoIGV4dHJhIGZlYXR1cmVzLCBub3ZlbCBtZW51cywgb3IgICBpZiBpdCBjYW4gYmUgaGVscGVkICAgYSBzaHVmZmxlIGZlYXR1cmUuIEFsbCB0aGV5IHdhbnQgaXMgdGhlIGFiaWxpdHkgdG8gbGlzdGVuIHRvIGFuIGVudGlyZSBhbGJ1bSAoZnJvbSBhIHNlbGVjdGlvbiBvZiBhYm91dCAyMCkgd2l0aCB2ZXJ5IGNsZWFyIGFuZCBlYXN5IHRvIHVuZGVyc3RhbmQgbWVudXMgYW5kIGJ1dHRvbnMuIApQcmFjdGljaW5nIGFsbCB0aGVzZSBwb2ludHMgd2lsbCBsZXQgeW91IG5vdGljZSBob3cgaW1wb3J0YW50IHlvdSBhcmUgYmVjYXVzZSB5b3Ugd2lsbCBsZWFybiB0byBzaG93Y2FzZSB0aGUgYmVzdCBvZiB5b3UuIFlvdSBoYXZlIHdvbmRlcmZ1bCB0aGluZ3MgaW5zaWRlIGFuZCBvdXRzaWRlIHRoYXQgbm9ib2R5IGtuZXcgYmVmb3JlIGJlY2F1c2UgeW91IGhhZCBub3QgZGlzY292ZXJlZCB0aGVtIHlvdXJzZWxmIHlldC4gSW4gdGhlIGVuZCwgaXQgaXMgWU9VIHdobyBkZWNpZGVzIHdoYXQgbWFrZXMgeW91IGZlZWwgc2V4eSwgYXR0cmFjdGl2ZSBhbmQgY2hhcm1pbmcuIFlvdSBjYW4gZ2V0IHNvbWUgaGVscCBhc2tpbmcgeW91ciBjbG9zZXN0IGZyaWVuZHMgZm9yIGFuIG9waW5pb24sIGJ1dCBpZiB5b3UgZG9uJ3QgYnJpbmcgeW91ciBpbm5lciBib21ic2hlbGwgb3V0LCBubyBvbmUgd2lsbCBkbyBpdCBmb3IgeW91LiBCZSBjb25maWRlbnQhIFlvdSBjYW4gaGF2ZSB0aGUgd29ybGQgaW4gdGhlIHBhbG0gb2YgeW91ciBoYW5kcyBhcyBsb25nIGFzIHlvdSBiZWxpZXZlIGluIHlvdXJzZWxmLgpEb25hdGlvbnMgdG8gdGhlIExvbmRvbiBIZWFsdGggU2NpZW5jZXMgQ2VudHJlIG9yIHRoZSBIZWFydCBhbmQgU3Ryb2tlIEZvdW5kYXRpb24gd291bGQgYmUgYXBwcmVjaWF0ZWQgYXMgZXhwcmVzc2lvbnMgb2Ygc3ltcGF0aHkuIApJIGRpZCBjaGVjayBoaXMgZW1haWwsIHNpbmNlIGl0IHdhcyBhbHNvIHVwIG9uIGhpcyBjb21wdXRlciBhbmQgSSBkaWRuJ3QgZmluZCBhbnl0aGluZy4gQnV0IEkgYXNzdW1lIGhlJ2QgdXNlIGFub3RoZXIgZW1haWwgb3Igc29tZXRoaW5nIGlmIGhlIHdhcyB0cnlpbmcgdG8gaGlkZSBpdC4gCkl0IGhhcmQgdG8gaW1hZ2luZSBhIHdvcmxkIHdpdGhvdXQgZW1haWwuIApJIGFncmVlIHRoYXQgYnVzaW5lc3NlcyBzaG91bGQgcGF5IHRoZSBsZWFzdCBhbW91bnQgdGF4ZXMgcG9zc2libGUsIGJ1dCB0aGUgdGF4IGNvZGUgbmVlZHMgdG8gYmUgbW9kaWZpZWQgdG8gYWZmZWN0IGFsbCBidXNpbmVzc2VzIGVxdWFsbHkuIEFkdmVydGlzZXJzIGJhc2VkIGluIEZyYW5jZSBhcmUgdW5hYmxlIHRvIGNvbXBldGUgd2l0aCBtdWx0aW5hdGlvbmFscywgYXMgaXQgaXNuIHZpYWJsZSBmb3IgdGhlbSB0byBvZmZzaG9yZSB0aGVpciBwcm9maXRzLiAKSSBhbSBhIHNjaG9vbCBwc3ljaG9sb2dpc3Q7IEkgZnJlcXVlbnRseSB0ZXN0IHN0dWRlbnRzIGZvciBzcGVjaWFsIGVkdWNhdGlvbiBzZXJ2aWNlcywgYWx0aG91Z2ggc29tZSByZWZlcnJhbHMgYXJlIG1vcmUgYmVoYXZpb3IgdGhhbiBhY2FkZW1pYyBiYXNlZC4gClJpY2hhcmRzIGNsYWltZWQgaW4gaGlzIDIwMTAgbWVtb2lyIExpZmUgdGhhdCBhIGJsaW5kIHdvbWFuIG1hZGUgYW4gYXBwZWFsIHRvIHRoZSBqdWRnZSBmb3IgbGVuaWVuY3kgYWZ0ZXIgUmljaGFyZHMgaGFkIG1hZGUgYXJyYW5nZW1lbnRzIHRvIGNhcmUgZm9yIGhlciBzYWZldHkgYXQgY29uY2VydHMuLiAKSXQgZ29lcyBiYWNrIHRvIHRoZSBjb25jZXB0IG9mIGNyZWF0aW5nIHZhbHVlLiBUaG9zZSB3aG8gY3JlYXRlIGF0dHJhY3Qgb3RoZXIgcGVvcGxlIGludG8gdGhlaXIgc3BoZXJlIG9mIGluZmx1ZW5jZS4gSG93ZXZlciwgc29tZSBvZiB0aG9zZSB0aGV5IGF0dHJhY3QgYXJlIHBhcmFzaXRlcywgZXZlbiBpZiB0aGV5IGRvbiByZWFsaXplIGl0LiBUaGV5IGZpbmQgdmFsdWUgYW5kIHRoZXkgc3VjayBpdCBvdXQgZHVlIHRvIHRoZSBmYWN0IHRoYXQgdGhleSBhcmUgaW5jYXBhYmxlIG9mIGNyZWF0aW5nIGl0IG9uIHRoZWlyIG93bi4gWW91IGFyZSBhIGxhbmRsb3JkLCB0aGV5IGFyZSBzcXVhdHRlcnMuCklmIHlvdSB0aGUgZ3V5L2dpcmwgdGhhdCB0b29rIHRoZSBibGFtZSwgaXRzIG5vdCB5b3VyIGZhdWx0IGVpdGhlciBiZWNhdXNlIG9mIC4gCkFncmVlIHdpdGggYmFkUkxwbGF5ZXIuIApOZXdlc3Qgc3VibWlzc2lvbnMKIkkgdGhpbmsgZ29pbmcgYWhlYWQsIGFsbCBvZiB0aGVzZSBlaWdodCBjYW5kaWRhdGVzLCBhbmQgYW55IG9mIHRoZSBvbmVzIHRoYXQgZW50ZXIgdGhlIHJhY2UsIGNlcnRhaW5seSBrbm93IHRoYXQgdGhleSB3aWxsIG5lZWQgdGhpcyBncmFzcyByb290cyBwb2xpdGljYWwgbW92ZW1lbnQgc3VwcG9ydCAuIHRvIGJlY29tZSB0aGF0IG9uZSBwZXJzb24gd2hvIHdpbGwgZ28gb24gYW5kIGNoYWxsZW5nZSBVUyBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hLiIKSlAgdGVyZXMgYWxzbyBoYXMgdHdvIHByaXZhdGUgZGluaW5nIGFyZWFzIGFuZCBpcyBhbiBpZGVhbCB2ZW51ZSBmb3IgYWZ0ZXIgd29yayBnZXQgdG9nZXRoZXJzLCBmYW1pbHkgb2NjYXNpb25zIG9yIGNhdGNoaW5nIHVwIHdpdGggZnJpZW5kcy4gVGhlIHJlc3RhdXJhbnQgb2ZmZXJzIGEgZnJlc2hseSBwcmVwYXJlZCBhIGxhIGNhcnRlIG1lbnUgYWxsIGRheSBwcmVzZW50aW5nIHRoZSBiZXN0IG9mIE1hbGF5c2lhbiBjdWlzaW5lIHN1Y2ggYXMgc2F0YXkgZ3JpbGxzLCB0YW5kb29yIG92ZW5zLCByb3RpIGhvdCBwbGF0ZXMgYW5kIHdvayBzdGF0aW9ucyBzZXJ2ZSBmcm9tIHRoZSByZXN0YXVyYW50J3Mgc2hvdyBraXRjaGVucy4uIApNYXliZSB0cnkgdG8gZmluZCBhIGJsb2cgb3IgdHdpdHRlciBhY2NvdW50IG9mIGEgcmVhbCBwaHlzaWNzIHN0dWRlbnQvcG9zdCBncmFkLi4gCkRvZ3MgY2FuIGdldCBkaXN0cmVzc2VkIGlmIHRoZXkgbG9vayBhbmQgY2FuIGZpbmQgd2hhdCB0aGV5IGFyZSBsb29raW5nIGZvci4gVGhlcmUgYXJlIGZhbW91cyBzdG9yaWVzIGR1cmluZyA5LzExIG9mIHNlYXJjaCBhbmQgcmVzY3VlIGRvZ3MsIHRyYWluZWQgdG8gZmluZCBsaXZpbmcgcGVvcGxlLCBnZXR0aW5nIHZlcnkgZGVwcmVzc2VkIHRoYXQgdGhleSB3ZXJlbiBmaW5kaW5nIGFueW9uZSBhbGl2ZS4gU28gcGVvcGxlIHN0YXJ0ZWQgaGlkaW5nIGFyb3VuZCBncm91bmQgemVybyBzbyB0aGUgZG9ncyBoYWQgc29tZW9uZSB0byAiZmluZCIuClRleGFzIEhvbGQgRW0gT25saW5lIFBva2VyIFRpcCBGb3IgQmVnaW5uZXJzICA0IE1hc3RlcmluZyB0aGUgYXJ0IG9mIHBva2VyIG1lYW5zIHVzaW5nIGEgYml0IG9mIHBzeWNob2xvZ3kgdG8gd2luIHRoZSBnYW1lLiBOb3Qgb25seSBkbyB5b3UgaGF2ZSB0byBhbmFseXplIHdoYXQgeW91ciBvcHBvbmVudCdzIGNhcmQgbWF5IGJlIHlvdSBhbHNvIGhhdmUgdG8gdGhpbmsgd2hhdCBraW5kIG9mIGNhcmRzIGhlIGhvbGRzLgpKdXN0IGdldCB5b3VyIE1BIGRvbmUuIFNlcmlvdXNseS4gVGhlcmUgYXJlIHBsZW50eSBvZiBwbGFjZXMgdGhhdCB3aWxsIGhpcmUgeW91IHdpdGhvdXQgZXhwZXJpZW5jZSBiZWNhdXNlIHlvdSBoYXZlIGFuIE1BIFRFU09MIGFuZCB0aGUgam9icyB3aWxsIGJlIGFsbW9zdCBpbmRlc2NyaWJhYmx5IGJldHRlciB0aGFuIHRob3NlIHlvdSBjYW4gZ2V0IHdpdGgganVzdCBhIEJBIGFuZCBhIFRFRkwgY2VydC4gCkphaW1zdGVla3VyayAgMSBwb2ludCAgc3VibWl0dGVkIDYgZGF5cyBhZ28KQWRyZW5hbGluZSBpcyBhIGhlbGwgb2YgYSBkcnVnLiAKSXQgd2FzbiB1bnRpbCBJIGRpc2NvdmVyZWQgdGhpcyBzdWIgdGhhdCBJIGZpbmFsbHkgZ290IGJhY2sgdGhlIGVudGh1c2lhc20gdG8gY29udGludWUgc3R1ZHlpbmcuLiAKU28gd2hpbGUgc29tZSBtaWdodCBhcmd1ZSB0aGF0IHRoZXJlIGxpdHRsZSBvciBubyBwb2ludCBsaXZpbmcgb24gaW4gdGhlIGZvcm0gb2YgYSBjbG9uZSwgYmVjYXVzZSBpdCBtZXJlbHkgYmUgYSBjb3B5IG9mIHlvdSwgYW5kIHlvdXIgb3duIHBlcnNvbmFsIGV4cGVyaWVuY2Ugd2lsbCBub3QgY29udGludWU7IEkgbXVzdCBpbnN0ZWFkIGFyZ3VlIHRoYXQgdGhpcyBpbmZvcm1hdGlvbiBwdXRzIHVzIHNxdWFyZWx5IG9uIHRoZSB2ZXJnZSBvZiBvbmUgb2YgdGhlIG1vc3QgbGliZXJhdGluZyByZWFsaXphdGlvbnMgaW1hZ2luYWJsZSAgIGl0IGFsbCBhbiBpbGx1c2lvbi4KU2lkZWJ1cm5zIGNvbWUgaW4gYSB3aWRlIHZhcmlldHkgb2Ygc2hhcGVzIGFuZCBzaXplcy4gCkF1c3J5YSwganVzdCBwdXR0aW5nIHRoaXMgaGVyZSB0byBkZXRlciB0aGUgZXh0cmVtZWx5IHVubGlrZWx5IHBvc3NpYmlsaXR5IHRoYXQgc29tZW9uZSBvdXQgdGhlcmUgZ2V0cyBjdXJpb3VzLCBsb29rcyBhdCB0aGVpciBvdXRsZXQsIGFuZCBkZWNpZGVzIHRvIHRha2UgdXAgYSBuZXcgaG9iYnkuIEl0IHdhcyBteSBwZXJzb25hbCBOZXcgWWVhciBFdmUgdHJhZGl0aW9uLiBJIGhhdmUgYSBkZWVwIHZvaWNlLiBJIHdvdWxkIGNhbGwgc3RyaXAgY2x1YnMgZG9pbmcgbXkgInRydWNrZXIgdm9pY2UiIChpdCB3YXMgY29udmluY2luZykgYW5kIGFzayBob3cgdG8gYXBwbHkgdG8gYmUgYSBkYW5jZXIuIEkgc2FpZCBtZSBhbmQgbXkgZnJpZW5kIG1pZ2h0IGNvbWUgdXAgdGhlcmUgYW5kIGlzIGl0IG9rYXkgaWYgd2UgZ2V0IGxpcXVvcmVkIHVwIGFuZCB0YWtlIG91ciBzaGlydHMgb2ZmIGFuZCBydWIgZXhvdGljIG9pbHMgYWxsIG92ZXIgZWFjaCBvdGhlci4gSSB3YXMgdmVyeSBzdXJwcmlzZWQgaG93IGxvbmcgb25lIG1hbmFnZXIgc3RheWVkIG9uIHRoZSBwaG9uZSB3aXRoIG1lIGFwcGFyZW50bHkgd29ycmllZCB0aGUgY2xvY2sgd2FzIHRpY2tpbmcgZG93biB0byBhIHJlYWwgY3VzdG9tZXIgc2VydmljZSBkaXNhc3Rlci4KSSdtIGFic29sdXRlbHkgbm90IGFkdm9jYXRpbmcgZm9yIGFueSBzb3J0IG9mIHB1cnBvc2VmdWwgZ2VuZXRpYyBzZWxlY3Rpb24gaW4gaHVtYW5zLCBidXQgZ29kIHdlIGNvdWxkIHVzZSBtb3JlIGdpbmdlcnMuIApNaW5hcmltYSB1Ck9oIGxvcmQsIG1lIHRvby4gVGhlcmUgb25lIGxlc3NvbiBJIGxlYXJuZWQgdGhlIGhhcmQgd2F5LCBldmVyeSBtYW4gcmVnYXJkbGVzcyBvZiBhZ2UsIGFiaWxpdHkgb3IgbG9va3MgaXMgYSB3b2xmIGluIHNoZWVwIGNsb3RoaW5nLiAKSWRlYWxseSBvbmUgdGhhdCB5b3Uga25vdyB0aGV5IHdpbGwgZ2V0IHdvcmtlZCB1cCBvdmVyLiAKSSBoaXQgMSA4IHBhaXIgb24gdGhlIGZsb3AgYW5kIDEgMTAgcGFpciBvbiB0aGUgdHVybi4gCk9rYXksIGZvciBwZW9wbGUgd2hvIGFyZSB1bmF3YXJlIG9mIHRoZSBoaXN0b3J5IGJlaGluZCB0aGlzIHBpY3R1cmUsIG9yIHdobyBjYW4gYmUgYm90aGVyZWQgdG8gcmVhZCB0aGUgYXJ0aWNsZSAobGlrZSB0aHJlZSBvZiB0aGUgZm91ciBjdXJyZW50IGNvbW1lbnRzIG9uIHRoZSBhcnRpY2xlKToKIkVhcmx5IGluZGljYXRpb25zIGFyZSBpdCdzIGdvaW5nIHRvIGJlIGhpZ2ggY291bnRzIHRoaXMgc2Vhc29uLCIgaGUgc2FpZC4gIldlJ3JlIHBhcnQgb2YgYSBiaWcgYWdyaWN1bHR1cmFsIHJlZ2lvbiwgYnV0IGFzIG11Y2ggYXMgaXQgaXMgY3JvcHMsaXQncyBhbHNvIHRoZSByeWVncmFzcywgd2hpY2ggZ3Jvd3MgYmVzaWRlIHJvYWRzLiAiVGhhdCdzIHdoYXR0aGV5IHRoaW5rIGlzIHRoZSBwcmltYXJ5IGN1bHByaXQgaW4gdGhpcyBhcmVhLiBUbyBiZXR0ZXIgcHJlcGFyZSBmb3IgYW5vdGhlcmV2ZW50LCByZXNlYXJjaGVycyBoYXZlIGpvaW5lZCB3aXRoIHRoZSBCdXJlYXUgb2YgTWV0ZW9yb2xvZ3kgdG8gZGV2ZWxvcCBhIGZvcmVjYXN0aW5nIHN5c3RlbSwgd2hpY2ggaXNzdWVkIGl0cyBmaXJzdCBhZHZpY2UgbGFzdCB3ZWVrZW5kLCBkZWNsYXJpbmcgYSdtb2RlcmF0ZSByaXNrJyBmb3IgdGhlIE5vcnRoIEVhc3QuIApMZWFybmluZyBob3cgdG8gY2FsY3VsYXRlIHBvdCBvZGRzIHB1dHMgdGhlIGNvbmNlcHQgb2YgcmlzayBhbmQgcmV3YXJkIGludG8gYSBudW1lcmljYWwgY29tcHV0YXRpb24uIApJIHNlZW4gaG93IGRyYXN0aWNhbGx5IHRoZSBnYW1lIGhhcyBjaGFuZ2VkIGF0IGRpZmZlcmVudCBzdGFrZXMgb3ZlciB0aGUgeWVhcnMuIEl0IGFtYXppbmcgdG8gc2VlIGhvdyByZWdzIHRoYXQgZG9uIGltcHJvdmUgYXJlIGZvcmNlZCB0byBtb3ZlIGRvd24gaW4gc3Rha2VzIGFzIGNvbXBldGl0aW9uIGdldHMgdG91Z2hlciBhbmQgdG91Z2hlci4gClRoZXkgbWF5IGJlIHJlbW92ZWQgaWYgbGlua2VkIGNvbnRlbnQgaXMgbm90IHNwZWNpZmljYWxseSBhYm91dCBLb3JlYS4gVGhpcyBjYW4gaW5jbHVkZSB0cmFuc2xhdGlvbiByZXF1ZXN0cywgY2VsZWJyaXR5IG5ld3MsIG11c2ljIHZpZGVvcywgdGVjaCBuZXdzLCBldGMsIGVzcC4gCktlbG1lX1BhcmVudWVseiAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28KS2FpYSBHZXJiZXIgc3RlYWxzIHRoZSBWZXJzYWNlIHNob3cgaW4gZmxhbWJveWFudCBzdWl0CkJyaWRnaW5nIHRoZSBGcmFzZXIsIGNvbm5lY3RpbmcgU3VycmV5IHdpdGggTmV3IFdlc3RtaW5zdGVyIGFuZCB0aGUgc3Vycm91bmRpbmcgbXVuaWNpcGFsaXRpZXMgd2l0aCB0aGUgVW5pdGVkIFN0YXRlcy4gCkZvciBTZXZlbnRlZW4gSSB0aGluayBJIGtuZXcgSmVvbmdoYW4gZmlyc3QgICBoaXMgbG9uZyBoYWlyIHdhcyB2ZXJ5IGhlbHBmdWwgICBidXQgdGhlbiBoZSBjdXQgaXQgYmVmb3JlIEkgcmVhbGx5IHN0YXJ0ZWQgcGF5aW5nIGF0dGVudGlvbiB0byB0aGVtIHNvIGl0IHdhcyBwcm9iYWJseSBNaW5HeXUgb3IgVmVybm9uLiBJIG5vdCBzdXJlIG9mIHRoZSBvcmRlciBidXQgc29tZWhvdyB0aGUgb3RoZXJzIGZvbGxvd2VkLiBUaGUgbGFzdCB3YXMgV29ud29vLiAKU29tZSBjb250ZXh0OiBJIGNhdWdodCBoZXIgdGV4dGluZyBhIG1hbGUgY293b3JrZXIgc29tZSBub3Qgb2theSB0aGluZ3MgYW5kIHRyaWVkIHRvIHB1dCBteSBwcmlkZSBvbiB0aGUgYmFja2J1cm5lciB0byBtYWtlIHRoaW5ncyB3b3JrIHdpdGggdGhpcyBnaXJsLiBSYXRoZXIgdGhhbiB3b3JrIHdpdGggbWUgKHdlIHJlYWxseSBkaWQgaGF2ZSBhIHN0cm9uZyBib25kIGZvciB0aG9zZSBmaXJzdCA1IHllYXJzLCBzaGUganVzdCBncmV3IHVwIHRvIGJlIGEgaG9lKSBzaGUgd2FudGVkIHRvIHNlZSBob3cgbXVjaCBzaGUgY291bGQgZ2V0IGF3YXkgd2l0aC4gCldoZW4geW91IGFjY291bnQgZm9yIHRvdGFsIHByaWNlIGEgImdvb2QiIGxvcmV3ZWF2ZSBpcyBnb2luZyB0byBiZSBhYm91dCBhcyBkaWZmaWN1bHQgdG8gZ2V0IGFzIG90aGVyIGhpZ2ggZW5kIGFybW9ycywgYmVmb3JlIGZhY3RvcmluZyBpbiBkZW1hbmQuIEkgdGhpbmsgaXQgd2FzIGZhaXIgZm9yIGl0IHRvIGJlIGFuIGVuZGdhbWUgcXVhbGl0eSBwaWVjZSBvZiBlcXVpcG1lbnQuCkEgcXVpY2sgY2FsY3VsYXRpb24gc2F5cyBJIGhhdmUgYSAxNiUgY2hhbmNlIHRvIGhpdCBteSBzdHJhaWdodCBpZiBJIGdvIHRvIHRoZSB0dXJuLCBhbmQgYSAzMiUgY2hhbmNlIHRvIHdpbiBpZiBJIGdvIHRvIHRoZSByaXZlci4gRGVwZW5kaW5nIG9uIHdoYXQgeW91J3JlIG9wcG9uZW50IGlzIGhvbGRpbmcsIGFuZCB3aGF0IHRoZXkgaGF2ZSBoYXMgYWxyZWFkeSBoaXQsIHlvdXIgb2RkcyB3aWxsIGNoYW5nZS4gSW4gdGhlIGFib3ZlIGV4YW1wbGUgaWYgeW91J3JlIG9wcG9uZW50IGlzIGhvbGRpbmcgcG9ja2V0IEFBLCBhbmQgaGFzIGEgbWFkZSBzZXQsIHlvdSBzdGlsbCBoYXZlIGEgMjclIGNoYW5jZSB0byB3aW4gaWYgeW91IGdvIHRvIHRoZSByaXZlci4gClNvbnN0IHNpbmQgd2lyIHdpcmtsaXNjaCwgd2lya2xpc2NoIHRvdC4gQml0dGUsIGJpdHRlLCB3aXIgbGllYmVuIGRpZSBTcG9ydCB1bmQgd2lyIGJyYXVjaGVuIEFuZXJrZW5udW5nIHdlZ2VuIGRpZSBnZWlsZSBJbGZzZ3VldGVyIHVuZCB3ZWlsIHdpciBlaW5lIHZlcnNjaG9udGUgU3RhZGlvbiBhYmVuLCBkYSBrYW5uIG1hbiBQbGFzY2ggbWFjaGVuIHVuZCBhdWNoIEtpY2sgbWFjaGVuIHVuZCBhdWNoIEJ0c2NoIHVuZCBzby4gCkJyaWRnZXBvcnRzaG9vdGluZyBzcHVycyBsb2NrZG93biBhdG5lYXJieSBzY2hvb2xzQnJpZGdlcG9ydHNob290aW5nIHNwdXJzIGxvY2tkb3duIGF0bmVhcmJ5IHNjaG9vbHNVcGRhdGVkOiBGcmlkYXksIE1hcmNoIDggMjAxOSA1OjA4IFBNIEVTVDIwMTkgMDMgMDggMjI6MDg6MjAgR01UClNvdW5kcyBsaWtlIGEgZ29vZCBzZXR1cCB3aXRoIHJlbnQgYW5kIGFuIGFwcHJlbnRpY2VzaGlwIGxpbmVkIHVwLiBEcmVhbSB0aGUgdmFuIGxpZmUgYW5kIG1ha2UgdGhlIG5leHQgdGhyZWUgeWVhcnMgYWJvdXQgZ2V0dGluZyB0aGVyZSBhcyBmYXN0IGFzIHBvc3NpYmxlLiBMZWFybmluZyBhIHRyYWRlIGFuZCBhcHBseWluZyBpdCBhdCBhIHlvdW5nIGFnZSB3aWxsIHBheSBvZmYgZm9yIHlvdXIgZW50aXJlIGxpZmUuIApUaGUgUG9rZXIgUHJvIEJ1bmRsZSBpcyBwb3RlbnRpYWxseSB0aGUgY2hlYXBlc3Qgd2F5IHRvIGdvIGFib3V0IGl0LCBhbmQgd2hpbGUgaXQncyB1c3VhbGx5ICQxMzUsIHlvdSBjYW4gZW5yb2xsIGluIHRoZSBiZWdpbm5lciBjb3Vyc2UgZm9yIHdoYXRldmVyIHByaWNlIHlvdSB3YW50LiAKTm8gb25lLCBpbmNsdWRpbmcgSG9sZGVyLCBzdWdnZXN0cyB0aGF0IGl0IGlzIGlsbGVnYWwgZm9yIGFuIGluZGl2aWR1YWwgdG8gcGxheSBwb2tlciBvbiB0aGUgSW50ZXJuZXQuIEFuZCB0aGF0IGlzIGFzIGl0IHNob3VsZCBiZS4gSXQgaXMgdW5mYXRob21hYmxlIHRoYXQgcG9saWN5bWFrZXJzIHdvdWxkIHRlbGwgYWR1bHRzIHRoYXQgdGhleSBjYW5ub3QgZW5qb3kgYSBnYW1lIG9mIFRleGFzIGhvbGQgJ2VtICAgaW4gd2hpY2ggdGhlIHBsYXllcidzIGFiaWxpdHkgaGFzIGRpcmVjdCBpbXBhY3Qgb24gdGhlIG91dGNvbWUgICBpbiB0aGUgcHJpdmFjeSBvZiB0aGVpciBob21lcyBvbiBjb21wdXRlcnMgYW5kIEludGVybmV0IGNvbm5lY3Rpb25zIHRoZXkgcGF5IGZvci4gClRoZXkgZmluZCBhIGdpYW50LCBzbGVlcGluZyBvZ3JlLiAKTm8gbW9uZXksIG5vIGZ1cnRoZXIgZWR1Y2F0aW9uLCBubyB3b3JrIHNraWxscy4gQW5kIHRoZXkgYmUgbHVja3kgdG8gZmluZCBhIGpvYiB3aWxsaW5nIHRvIGhpcmUgdGhlbSBkdWUgdG8gdGhlaXIgaGlzdG9yeSBvZiBpbmNhcmNlcmF0aW9uLiAKTmV3IEJlZ2lubmluZ3MsIHdoaWNoIHByb3ZpZGVzIGZyZWUgZGF5IHByb2dyYW1zIGZvciBTYXJuaWEgTGFtYnRvbidzIHN1cnZpdm9ycyBvZiBicmFpbiBpbmp1cnkvc3Ryb2tlLCBpcyBleHRyZW1lbHkgZ3JhdGVmdWwgZm9yIERhdmUncyBnZW5lcm91c2l0eS4gV2hlbiBzdGFmZiBhc2tlZCBoaW0gd2hhdCBwcm9tcHRlZCBoaW0gdG8gd2FudCB0byBtYWtlIHN1Y2ggYSBsYXJnZSBkb25hdGlvbiwgaGUgdG9sZCB0aGVtIGl0J3MgYmVjYXVzZSBoZSBzZWVzIGZpcnN0IGhhbmQgYWxsIHRoZSB3b3JrIHRoYXQgdGhlIG9yZ2FuaXphdGlvbiBkb2VzIHRvIGhlbHAgdGhvc2UgdGhhdCBoYXZlIHN1ZmZlcmVkIGEgc3Ryb2tlIG9yIGJyYWluIGluanVyeSwgYW5kIHNpbXBseSBzYXlzIGl0J3MsICJCZWNhdXNlIEkgY2FuLiIgUGV0ZXJzb24gYWRkcywgIkkgbGlrZSB0aGUgd2F5IHRoZSBDbHViIGlzIG9yZ2FuaXplZCBhbmQgcnVuLiAKSG9uZXN0bHksIGFsdGhvdWdoIEkgYW0gcHJvcGVybHkgcm9sbGVkIGZvciAxLzIsIEkgd2FzIG9uIG15IDJuZCAkMzAwIGJ1eSBpbiBmb3IgdGhlIGRheSBhbmQgYW0gcmVsYXRpdmVseSBuZXcgdG8gY2FzaW5vIHBva2VyIChwcm9iYWJseSBwbGF5ZWQgbGVzcyB0aGFuIDIwIHRpbWVzIGluIG15IGxpZmUpIGFuZCBJIHRoaW5rIGhlIGNvdWxkIHNlbnNlIG15IGRpc2NvbWZvcnQgaW4gdGhpcyBzcG90LCBzaW5jZSBJIGRvbiBoYXZlIG11Y2ggZXhwZXJpZW5jZSBwbGF5aW5nIHRoaXMgZGVlcCBhZ2FpbnN0IGEgbWFuaWFjLi4gClJlYWQgdGhlIEVudGlyZSBBcnRpY2xlSG93IFRvIFVzZSBBIENyZWRpdCBDYXJkIFNhZmVseQpIYWQgdGhlcmUgYmVlbiBhIGd1YXJkcmFpbCBvciBkaXRjaCB0aGVyZSAsIHdvdWxkIGJlZW4gYSBkaWZmZXJlbnQgc3RvcnkuIApBcnRzIERpc3RyaWN0IGlzIG1vc3RseSBidXNpbmVzc2VzLiBUaGVyZSBhcmUgc29tZSBob3RlbHMgYWxvbmcgTFYgQmx2ZCB0aGF0IGFyZSBjbG9zZSB0byB0aGUgQXJ0cyBEaXN0cmljdCB0aGF0IG1pZ2h0IHdvcmsgZm9yIHlvdSwgYnV0IEkgZG9uIHRoaW5rIHRoZXkgaGF2ZSBraXRjaGVucy9raXRjaGVuZXR0ZXMuIApLZXB0IGNvcHkgcGFzdGluZyB0ZXh0IG92ZXIgYW5kIG92ZXIgYWdhaW4uIEVuZGVkIHVwIHJlYWNoaW5nIDMxMDAgcGFnZXMgYW5kIG92ZXIgMS4yIG1pbGxpb24gd29yZHMuIApXaXRoIFdvb2R3YXJkIGJlaW5nIHRoZSBwcmltYXJ5IGRlY2lzaW9uIG1ha2VyIHdoZW4gaXQgY29tZXMgdG8gcmVjcnVpdG1lbnQgYW5kIGZvciBhcyBsb25nIGFzIHdlIGNvbnRpbnVlIHRvIGJlIG93bmVkIGJ5IHRoZSBHbGF6ZXJzIEkgaGF2ZSBubyByZWFzb24gdG8gdGhpbmsgd2UgbGwgZml4IG91ciBicm9rZW4gd2FnZSBzdHJ1Y3R1cmUgb3Igc3RhcnQgYmVpbmcgZWZmaWNpZW50IGFuZCBzdWNjZXNzZnVsIHdpdGggcmVjcnVpdG1lbnQuIApXZSd2ZSB3b3JrZWQgd2l0aCBCbGl6emFyZCB0byBoZWxwIGVuc3VyZSB0aGVzZSBpc3N1ZXMgYXJlIHByb3Blcmx5IGFkZHJlc3NlZC4gVGhlIGJlc3Qgd2F5IHRvIGhhbmRsZSBoYXJhc3NtZW50IG9yIGNvZGUgb2YgY29uZHVjdCB2aW9sYXRpb25zIGlzIHRvIHVzZSB0aGUgaW4gZ2FtZSByZXBvcnRpbmcgbWV0aG9kcy4gWW91IGNhbiByZWFkIGhvdyB0byBzdWJtaXQgdGhlc2UgcmVwb3J0cyBoZXJlOiBSZXBvcnRpbmcgSGFyYXNzbWVudCBpbiBPdmVyd2F0Y2guCjE4IHByaXNvbiBpbnRlcnZpZXcgaW4gV2lzY29uc2luIHdpdGggV2F0dHMsIGFib3V0IGZvdXIgbW9udGhzIGFmdGVyIHBsZWFkaW5nIGd1aWx0eSB0byB0aGVpciBtdXJkZXJzLiAKSSB3YXNuJ3QgYWJsZSB0byBtYWtlIGFueSBoZWFkd2F5IGV2ZW4gd2l0aCBXYXJieSBQYXJrZXIsIHRoZSBOZXcgWW9yayBiYXNlZCBleWV3ZWFyIGNvbXBhbnkgd2hvc2Ugd2hvbGUgcmFpc29uIGQnZXRyZSBpcyB0byBvZmZlciBmYXNoaW9uYWJsZSBzcGVjcyBhdCBhIGZyYWN0aW9uIG9mIHRoZSBwcmljZSBvZiBvdGhlciByZXRhaWxlcnMuCkhlIGlzIGEgd2VhayBjb3dhcmRseSBidWxseS4gCk5vdyB0aGF0IHlvdSBrbm93IHRoZSBiZW5lZml0cyBvZiB0aGUgY29mZmVlIGJvZHkgc2NydWIsIGFuZCBob3cgZWFzeSBpdCBpcyB0byBtYWtlIChhbmQgcGVyc29uYWxpemUpLCB3aGF0IGFyZSB5b3Ugd2FpdGluZyBmb3I/IEdldCBvdXQgdGhlcmUgYW5kIHN0YXJ0IG1peGluZyEgWW91ciBza2luIHdpbGwgbG9vayBncmVhdCBpbiBubyB0aW1lIGF0IGFsbCEKV2hlbiBJIHdhcyAxOCBtZSBhbmQgYSBidW5jaCBvZiBteSBmcmllbmRzIHdlbnQgdG8gU3BhaW4gZm9yIGEgZmV3IHdlZWtzLiAKQWRqZWN0aXZlcyBhbmQgYWR2ZXJicyBhcmUgdHJlYXRlZCB0aGUgc2FtZSBpbiBYcmRhd2tpLCBubyBtb3JwaG9sb2dpY2FsIGRpZmZlcmVuY2UuIFNvICJxYXQiIGNhbiBtZWFuIGZhc3Qgb3IgcXVpY2tseSBkZXBlbmRpbmcgb24gY29udGV4dC4gQWRqZWN0aXZlcyBhbHdheXMgZm9sbG93IHRoZWlyIG5vdW5zLCB3aGlsZSBhZHZlcmJzIHdpbGwgYWx3YXlzIGNvbWUgYXQgdGhlIGVuZCBvZiB0aGUgc2VudGVuY2UsIGFmdGVyIGFueSBvYmplY3RzLiBUaGlzIGNhbiBsZWFkIHRvIHNvbWUgZnVuIGFtYmlndWl0eSB0aG91Z2ggc3VjaCBhczoKV2UgZ28gYmFjayB0byBiYXNlIGhvdXNpbmcgYW5kIEkgdHJ5IHRvIHRhbGsgd2l0aCBNcnMuIFJvZHJpZ3VleiAod29tYW4gaW4gY2hhcmdlKS4gU2hlIGFuIGFic29sdXRlIGJpdGNoLiAKSSB3b3JrIGluIGEgc2FmZXR5IHNlbnNpdGl2ZSBmZWlsZCwgc28gSSBoYXZlIHRvIHVuZGVyc3RhbmQgSSBjYW50IGluZHVsZ2UgbGlrZSBpIGRpZCB3aGVuIGkgd2FzIHlvdW5nZXIuIFBvdCBpcyB0aGUgcmlza2llc3QgYmVjYXVzZSBpdCBzdGF5cyBpbiB5b3VyIHN5c3RlbSBzbyBsb25nLiBDb2NhaW5lIGlzIG5leHQgYmVjYXVzZSBpdCBsaW5nZXJzIGEgbG9uZyB0aW1lIGFuZCB5b3UgY2FudCBkaWx1dGUgeW91cnNlbGYgb3V0IG9mIGEgcG9zaXRpdmUgd2l0aCBjb2NhaW5lLiAKOGJuIFNreSBkZWFsIGNyZWF0ZXMgcml2YWwgZm9yIFBhZGR5IFBvd2VyCkEgcmVjZW50IFllbHAgcmV2aWV3IGJ5IGEgIk1yLiBNLiIgc2F5cyBoZSB3ZW50IGluIGZvciBhbiB1cHBlciBiYWNrIHJ1YiBhbmQgaW5zdGVhZCwgdGhlIHRoZXJhcGlzdCAiaW1tZWRpYXRlbHkgc3RhcnRlZCBtYXNzYWdpbmcgbXkgYXNzLiIKU3dlZXQgYWxtb25kIG9pbCAgIEtub3duIGZvciBpdHMgYWJpbGl0eSB0byBzb2Z0ZW4sIHNvb3RoZSBhbmQgcmVjb25kaXRpb24gdGhlIHNraW4sIHRoaXMgb2lsIGlzIGEgZ3JlYXQgYWRkaXRpb24gdG8gbWFueSBib2R5IGNhcmUgcHJvZHVjdHMgYW5kIGlzIHF1aWNrbHkgYW5kIGVhc2lseSBhYnNvcmJlZCBpbnRvIHRoZSBza2luLiBDb250YWlucyBhIGhpZ2ggcGVyY2VudGFnZSBvZiBpcm9uLCBjYWxjaXVtIGFuZCBwb3Rhc3NpdW0gYXMgd2VsbCBhcyB2aXRhbWlucyBCMSwgQjIsIEI2IGFuZCBiZXRhIGNhcm90ZW5lLi4gClRoZSBzYW1lIHdlZWsgQmVybmllIHJhaXNlZCBhbiBhc3RvdW5kaW5nIGFtb3VudCBvZiBtb25leSBpbiBhIHZlcnkgc2hvcnQgdGltZSwgYWNyb3NzIGV2ZXJ5IHN0YXRlIGluIHRoZSBjb3VudHJ5LCAoZnJvbSBpbmRpdmlkdWFsIGRvbmF0aW9ucyksIEthbWFsYSB3YXMgYmVpbmcgaG9zdGVkIGJ5IG1pbGxpb25haXJlIE1pY2hhZWwgS2VtcHRlciBhdCBoaXMgc3VtbWVyIGhvbWUgaW4gdGhlIEhhbXB0b25zLiBZb3UgbWF5IHJlc2VhcmNoIEtlbXB0ZXIgaWYgeW91IHdhbnQsIGJ1dCBoZSBhIG1ham9yIERlbW9jcmF0aWMgZG9ub3I7IGEgQ29ycG9yYXRlIERlbW9jcmF0IGRvbm9yLiAKU28gSSB1bmRlcnN0YW5kIHdoZXJlIHlvdSBjb21pbmcgZnJvbSwgYnV0IGp1c3Qgb24gYSBwZXJzb25hbCBub3RlLCBJIGFtIG5vdCBkaWFnbm9zZWQgY2VsaWFjIGJ1dCBJIGFtIGV4dHJlbWVseSBzZW5zaXRpdmUgdG8gYW55IGNyb3NzIGNvbnRhbWluYXRpb24uIApCdXQgaW52ZW50b3J5IHR1cm5vdmVyIGNhbiBhbHNvIGJlIGV2YWx1YXRlZCBpbiBvdGhlciB0ZXJtcywgc3VjaCBhcyB0aGUgYW1vdW50IG9mIHRpbWUgaXQgdGFrZXMgeW91IHRvIHNlbGwgdGhlIHN0b2NrIHlvdSB0eXBpY2FsbHkgaGF2ZSBvbiBoYW5kLiAKUHZFIHF1ZXN0cy9ib3VudGllcy9ldGMuIApNb3JlIHRoYW4gMTIsMDAwIHBlb3BsZSB3ZXJlIGluIHRoZSBjb21wbGV4IGF0IHRoZSB0aW1lOyBtb3N0IHdlcmUgc3VjY2Vzc2Z1bGx5IGV2YWN1YXRlZC4KSG93ZXZlciBpZiBteSB3aWZlIGhhcyBhbHJlYWR5IGRvbmUgYWxsIG9mIHRoZSB0aGluZ3MgdGhhdCB0dXJuIG1lIG9uIGFuZCBJIHZlcnkgdmVyeSByZWFkeSBmb3IgaXQgcmVjZWl2aW5nIG9yYWwgc2VuZHMgbWUgdG8gdGhlIG1vb24uLiAKTUNNIEN1c3RvbSBWZWhpY2xlcyBpbiBUcnVzc3ZpbGxlIGlzIHJlYnVpbGRpbmcgaXRzIGJ1c2luZXNzCkFub3RoZXIgcHJpb3JpdHkgZm9yIEthdHogaXMgdG8gaW1wcm92ZSByZXNwb25zZXMgdG8gY29kZSByZWQgYW5kIHllbGxvdyBlbWVyZ2VuY2llcy4KVGhleSBhcmUgaGV0ZXJvZ2VuZW91cyBpbiB0ZXJtcyBvZiB0cmlhbCBkZXNpZ24sIHBhdGllbnQgc2FtcGxlcyBhbmQgdHlwZXMgb2YgbWFzc2FnZSB1c2VkLiBOb25ldGhlbGVzcywgdGhlIHJlc3VsdHMgb2YgdGhlc2UgdHJpYWxzIGNvbGxlY3RpdmVseSBpbXBseSB0aGF0IG1hc3NhZ2UgdGhlcmFweSBjb3VsZCBiZSBhIHByb21pc2luZyB0cmVhdG1lbnQgZm9yIGNocm9uaWMgY29uc3RpcGF0aW9uLiBUaGUgYWltcyBhbmQgaW5jbHVzaW9uIGNyaXRlcmlhIHdlcmUgc3RhdGVkLiBUaGUgc2VhcmNoIHdhcyBub3QgcmVzdHJpY3RlZCBieSBsYW5ndWFnZSBhbmQgaW5jbHVkZWQgYSBzZWFyY2ggZm9yIHVucHVibGlzaGVkIG1hdGVyaWFsLiAKRm9yZCBpcyBhbHNvIHNob3dpbmcgYSBuYXZpZ2F0aW9uIHNjcmVlbiB3aXRoIGEgdW5pcXVlIGdsYXNzIGZyb250IHRoYXQgYWxsb3dzIHRoZSBmcm9udCBzZWF0IHBhc3NlbmdlciB0byB3YXRjaCBhIG1vdmllLCB3aXRob3V0IGRpc3RyYWN0aW5nIHRoZSBkcml2ZXIuIApCZWZvcmUgdGhlIGRlY2sgaXMgc2h1ZmZsZWQgb3IgYW55IGNhcmRzIGFyZSBkZWFsdCBwbGF5ZXJzIG5lZWQgdG8gZ2V0IGNvbWZvcnRhYmxlIGFyb3VuZCB0aGUgdGFibGUuIFlvdSBkZWNpZGUgb24gd2hvIHRoZSBkZWFsZXIgaXMsIGFuZCBvbiB3aGF0IHRoZSB0YWJsZSBsaW1pdCBpcy4gVGhlIHRhYmxlIGxpbWl0IGlzIHRoZSBsYXJnZXN0IGFtb3VudCB0aGF0IGFueW9uZSBjYW4gYmV0IGF0IGFueSB0aW1lLiAKVGhhbmtzLi4gClJlbGF4IHlvdXIgZW50aXJlIGJvZHkgYnkgbGV0dGluZyBpdCBzaW5rIGludG8gdGhlIGZsb29yIG9yIGJlZC4gCkksIHBlcnNvbmFsbHksIHN1ZmZlciBmcm9tIHNvY2lhbCBhbnhpZXR5LCBhbmQgb3JkZXJpbmcgZm9vZCBpcyBzdGlsbCBhIGh1Z2Ugc291cmNlIG9mIGFueGlldHkgZm9yIG1lLi4gCldoYXQgaXMgaGlnaGx5IGFjY2VwdGFibGUgYmVoYXZpb3IgYXQgb25lIHBvaW50IGJlY29tZXMgdXR0ZXJseSByZXZvbHRpbmcgYXQgYW5vdGhlciAoZG8geW91IGtub3cgTWVkYWV2YWwgUHJpbmNlcyB3ZXJlIGVuY291cmFnZWQgdG8gcGFzcyB3aW5kLCBhY2NvcmRpbmcgdG8gRWxpYXMsIGluY2x1ZGluZyBhdCBDb3VydD8pLi4gCiJUaGV5IHNhaWQsICdXZSBoYXZlIHlvdXIgZG9nIGFuZCBub3QgdG8gd29ycnkuIFRoZSBnb29kIG5ld3MgaXMgaGUncyBzYWZlIGFuZCB3ZSdyZSBnaXZpbmcgaGltIHRyZWF0cyBidXQgaGUncyBhY3R1YWxseSBoZWFkZWQgdG8gVW5pb24gKFN0YXRpb24pLiBIZSdzIG1pc3NlZCB0aGUgYm9hdCBmb3IgZ2V0dGluZyBvZmYgYXQgUm91Z2UsJyIgUGV0ZXJzZW4gdG9sZCBDVFYgTmV3cyBUb3JvbnRvLgpJZiBoZSBpcywgYW5kIGlmIGhlIGlzIGdvaW5nIHRvIEVBUk4gYW55IHJvbGUgaW4geW91ciBsaWZlIGFuZCB5b3VyIGNoaWxkcmVuIGxpdmVzIGhlIG5lZWRzIHRvIHN0ZXAgdXAsIGV2ZW4gaWYgaXQgaXMgMjAgeWVhcnMgbGF0ZS4gCkZvciBleGFtcGxlLCBib3RoIG1lbiBhbmQgd29tZW4gb2Ygb2xkZXIgZ2VuZXJhdGlvbnMgYXJlIGxpa2VseSB0byBzaGFtZSBhIHdvbWFuIHdobyBlbmpveXMgYSBoZWFsdGh5IHNleCBsaWZlIHdoaWxlIGV4cGVjdGluZyBvciBlbmNvdXJhZ2luZyB5b3VuZyBtZW4gdG8gaGF2ZSBvbmUgd2l0aG91dCBjb25zZXF1ZW5jZS4gCkxldCBtZSBrbm93IGlmIHlvdSBoYXZlIGFueSBvdGhlciBxdWVzdGlvbnMhClRoaXMgaXMgd2hlcmUgdGhlIHBvc3QgUG9rZXIgUnVuIHBhcnR5IHdpbGwgYmUgaGVsZC4gSW4gb3JkZXIgdG8gZG8gdGhpcyB5b3UgbWF5IG5lZWQgdG8gZ2V0IGFwcHJvdmFsIGZyb20gdGhlIGNpdGllcyB5b3UgcGxhbiB0byB0cmF2ZWwgYW5kIG9mIGNvdXJzZSB0aGVyZSBtYXkgYmUgc29tZSBwYXBlcndvcmsgYW5kIGZlZXMgZm9yIHRoaXMuIEFsd2F5cyBjaGVjayB3aXRoIHRoZSBjaXR5IG11bmljaXBhbGl0aWVzIHRvIGVuc3VyZSBjb21wbGlhbmNlIHdpdGggbG9jYWwgbGF3cy4uIApUaGUgc3RyYXRlZ3kgaXRzZWxmIGNhbiBiZSBhZGp1c3RlZCB0byB0aGUgcGxheWVyIGxldmVsIGFuZCBhcyBvbmUgcHJvZ3Jlc3NlcyBmcm9tIHRoZSBiZWdpbm5lciB0byB0aGUgYWR2YW5jZWQgbGV2ZWwsIHRoZSBzdHJhdGVneSB3aWxsIGV2b2x2ZSB0byBjb21wbGV0ZWx5IGVsaW1pbmF0ZSB0aGUgaG91c2UgZWRnZS4gCkFmdGVyIGFsbCwgdGhpcyB3YXMgYSBwZXJzb24gInByaXZhdGUiIGxpZmUuIAoxYykgTG93IFF1YWxpdHkgUG9zdHM6IFN1Ym1pc3Npb25zIHRoYXQgY29udGFpbiBvbmx5IGEgbGluayBvciBhIHRpdGxlLCBldmVuIGlmIHN1ZmZpY2llbnQgdG8gcHJvbXB0IGRpc2N1c3Npb24sIGFyZSBtb3JlIGxpa2VseSB0byBiZSByZW1vdmVkIGF0IG1vZGVyYXRvciBkaXNjcmV0aW9uLiAKVGhlS2FwblRYICAyIHBvaW50cyAgc3VibWl0dGVkIDMgaG91cnMgYWdvCkJ1dCB3aGlsZSBMaXR0bGUncyBwZXJzb25hbGl0eSBpcyBxdWlya3ksIHRoZSBsb25nIGludGVybHVkZXMga2VwdCB0aGUgc2hvdyBmcm9tIGJ1aWxkaW5nLiAKUGFsbSBEb3duIFJlaWtpIGFuZCBNYXNzYWdlIFRoZXJhcHkgdQpIZSBzdWZmZXJzIGJlYXV0aWZ1bGx5LCBidXQgaGUgc3VmZmVycyB0byBhIHB1cnBvc2UuIAoiQXQgdGhhdCB0aW1lIENoZXZyb2xldCB3YXMgbWFraW5nIGEgbGl0dGxlIHNpeCwgYSBncmFuZG1vdGhlciB0eXBlIG9mIGNhciwiIENvbGUgcmVjYWxsZWQuICJOb2JvZHkgaGFkIGV2ZXIgYnVpbHQgYW4gZW50aHVzaWFzdCB0eXBlIG9mIGNhciBhcm91bmQgQ2hldnJvbGV0LiIKUHVzaGVzIHNob3VsZCBiZSBtYWRlIGZvciBmYWlsIHNhZmUgbnVjbGVhciByZWFjdG9ycyB3aXRoIGF0dGFjaGVkIGJyZWVkZXIgcmVhY3RvcnMuIApBY2NvcmRpbmcgdG8gdGhlIEdyZWVuIEJ1cmlhbCBDb3VuY2lsLCB3aGljaCBzZXRzIHN0YW5kYXJkcyBhbmQgY2VydGlmaWNhdGlvbiBmb3IgY29uc2VydmF0aW9uIGJ1cmlhbHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIGFsbW9zdCA0IG1pbGxpb24gYWNyZXMgb2Ygd29vZCAgIGVub3VnaCB0byBidWlsZCByb3VnaGx5IG9uZSB0aGlyZCBvZiBhbGwgaG91c2VzIGluIENhbmFkYSAgIGFyZSBidXJpZWQgdW5kZXJncm91bmQgaW4gY2Fza2V0cy4gQSBzdHVkeSBhbW9uZyBmdW5lcmFsIGluZHVzdHJ5IHdvcmtlcnMgZm91bmQgYSBsaW5rIGJldHdlZW4gZm9ybWFsZGVoeWRlIGV4cG9zdXJlIGFuZCByYXRlcyBvZiBteWVsb2lkIGxldWtlbWlhLgpZb3UgY2FuIGNvdW50IHRoZSByZW1vdGUgbGluZSBhcyBhbiBleHBhbnNpb24gY2hhbWJlciwgSSBzdXBwb3NlLiBJZiBraWNrIGlzIG1ha2luZyBsaXR0bGUgZGlmZmVyZW5jZSwgdGhlbiB2ZWxvY2l0eSBmbHVjdHVhdGlvbnMgaXMgbWFraW5nIGV2ZW4gbGVzcy4gCkludGVybmF0aW9uYWwgRml0bmVzcyBpcyBhIG5pZ2h0bWFyZSB0byB3b3JrIGZvci4gSSB3YXMgaW4gdGhlIGRheWNhcmUgY2VudGVyIGZvciB0aGUgb25lIG9uIEdhdGV3YXkgYW5kIGZvciBvbmUsIHRoZXkgZG9uJ3QgZ2l2ZSB5b3UgYSB3YXkgdG8gY29udGFjdCB0aGUgZnJvbnQgZGVzayBpZiB5b3UgbmVlZCB0byBjYWxsIHVwIGEgcGFyZW50LCB5b3UgaGF2ZSB0byB1c2UgeW91ciBvd24gcGhvbmUgYW5kIGV2ZW4gdGhlbiBzb21ldGltZXMgbm9ib2R5IHBpY2tzIHVwLiBUaGUgcmF0aW8gaXMgMTAga2lkcyB0byBvbmUgcGVyc29uICh1bmxlc3MgaXQncyBhIGNyYXdsaW5nIGJhYnksIHRoZW4gdGhhdCBjb3VudHMgYXMgMy4gV2Fsa2luZyBiYWJpZXMgb25seSBjb3VudCBhcyAxKS4gQWxzbyBkb24ndCBjb3VudCBvbiBnZXR0aW5nIGEgY2hhbmNlIHRvIGdvIHRvIHRoZSBiYXRocm9vbS4gWW91IGNhbid0IGp1c3QgbGVhdmUgdGhlIGtpZHMgdG8gZmVuZCBmb3IgdGhlbXNlbHZlcywgc28geW91IGhhdmUgdG8gY2FsbCB0aGUgZnJvbnQgZGVzayBhbmQgcHJheSBzb21lb25lIHBpY2tzIHVwIGFuZCB0aGF0IHRoZXkgY2FuIGNvbWUgd2F0Y2ggeW91ciBraWRzIHdoaWxlIHlvdSBkbyB5b3VyIGJ1c2luZXNzLiBPbmUgZGF5IEkgd2VudCBpbiBmb3IgYSBzaGlmdCBhbmQgdGhleSBhbWJ1c2hlZCBtZSB3aXRoIGEgbWVldGluZyAobm90IGV2ZW4gYXQgbXkgcmVndWxhciBsb2NhdGlvbiwgZWl0aGVyISkgYW5kIGdhdmUgbWUgYSBidW5jaCBvZiBzdXBwb3NlZCBjb21wbGFpbnRzIGZyb20gcGFyZW50cyB0aGF0IGhhZCB0byBoYXZlIGJlZW4gbWFkZSB1cCwgaXQgd2FzIHJpZGljdWxvdXMuIEF0IHRoZSB0aW1lLCB0aGV5J2QgbmV2ZXIgZXZlbiB0b2xkIG1lIGFib3V0IHRoZSBhZHVsdCB0byBraWQgcmF0aW8gYW5kIGdvdCBhZnRlciBtZSBmb3IgaGF2aW5nIDE3IGtpZHMgYXQgb25jZSAodGhleSBuZXZlciB0b2xkIG1lIHdoYXQgbXkgbGltaXQgd2FzKS4gVGhleSBzdXNwZW5kZWQgbWUsIGFuZCB0aGVuIGNhbGxlZCBtZSBiYWNrIGluIHRvICJkaXNjdXNzIG15IGVtcGxveW1lbnQuIiBUaGF0J3Mgd2hlbiB0aGV5IGxldCBtZSBnby4gT2RkbHkgZW5vdWdoLCBJIGdvdCBteSBiaWdnZXN0IHBheWNoZWNrIHdoZW4gSSBsZWZ0IHRoYW4gd2hlbiBJIHdhcyBhY3R1YWxseSB3b3JraW5nLgpKdXN0IHRvIGNsYXJpZnksIHRoaXMgd2lsbCBsaWtlbHkgbmV2ZXIgYmVjb21lIGEgc3RhbmRhcmQgdHJlYXRtZW50LiBUaGVzZSBwZW9wbGUgYmVpbmcgY3VyZWQgaGF2ZSBjYW5jZXIgKGxldWtlbWlhIG9yIGJvbmUgY2FuY2VyKSwgZ2V0IHJhZGlhdGlvbiB0byBraWxsIHRoZWlyIGJvbmUgbWFycm93LCBhbmQgdGhlbiBnZXQgYSBtYXJyb3cgdHJhbnNwbGFudCBmcm9tIGEgZG9ub3Igd2hvIGhhcyBhIGdlbmV0aWMgdmFyaWF0aW9uIHdpdGggYSBuYXR1cmFsIHJlc2lzdGFuY2UgdG8gSElWLiAKWW91ICAgSSBsaWtlIHlvdS4gClRoYW5rIHlvdSBmb3IgeW91ciBhZHZpY2UuIFllc3RlcmRheSBJIGhhZCBhIHRhbGsgd2l0aCBoaW0gYW5kIHRoZSBtYWluIHJlYXNvbiB3aHkgaGUgaGFzbiBtb3ZlZCBvdXQgaXMgYmVjYXVzZSBvZiBtb25leS4gSGUgaGFkIGJlZW4gd29ya2luZyBhdCBhIGRlYWQgZW5kIGpvYiBzaW5jZSBjb2xsZWdlIGdyYWR1YXRpb24gYW5kIGRvZXNuIGhhdmUgZW5vdWdoIHRvIG1vdmUgb3V0LiAKSW4gZmFjdCwgd2UgYXJlIHVzdWFsbHkgdmVyeSBpbXBhdGllbnQgd2l0aCB0aGlzIHNvcnQgb2YgInB1cmUgZW50ZXJ0YWlubWVudCIgc2hlbmFuaWdhbiBnb2luZyB0byBoYXZlIHRvIHNheSB0aGF0IHRoZSBqdWRnZXMgd2VyZSBhIGxpdHRsZSBoYXJkIG9uIGhpbS4gCkZpbmFsIHJlY29yZHMgcmVsZWFzZWQgYnkgcG9saWNlIGluIExhcyBWZWdhcyBtYXNzIHNob290aW5nCkl0IGFsc28gZXhwbGFpbnMgYSBsb3QgYWJvdXQgaG93IHRvIGVzdGFibGlzaCBoZWFsdGh5IGJvdW5kYXJpZXMgYW5kIHNwZWFrIGhvbmVzdGx5Li4gCkFsbCBZb3VyIEJhc2UsIE51bWEgTnVtYSwgWmVyZ3MsIFNhbGFkIEZpbmdlcnMsIEdlb3JnZSBXYXNoaW5ndG9uIEdlb3JnZSBXYXNoaW5ndG9uIDYgd2VpZ2hzIGEgZnVja2luZyB0b24sIGhlbGwgZXZlbiBTdGFyIFdhcnMgS2lkLiBPaCBhbmQgSSByZWFsbHkgbGlrZWQgdGhpcyB2aWRlbyBjYWxsZWQgIkEgQ3JhenkgVHJpcCIgb24gQWxiaW5vIEJsYWNrc2hlZXAsIEkgZG9uIHRoaW5rIGl0IHdhcyBhICJtZW1lIiBpdCB3YXMganVzdCBhIGZ1biB2aWRlbyBmcm9tIHRoYXQgZXJhIHRoYXQgSSB1c2VkIHRvIHdhdGNoIGR1cmluZyBteSBmaXJzdCBhZHZlbnR1cmVzIHdpdGggcmVlZmVyLi4gCkkgaGF2ZSBmaW5hbGx5IGp1bXBlZCBiYWNrIG9uIHRoZSBBQiByb3V0aW5lIGJhbmR3YWdvbiwgYXMgc21hbGwgYXMgdGhpcyBpcywgYWZ0ZXIgYSB3ZWVrIG9mIHRyYXZlbGxpbmcgYW5kIGRvaW5nIHNvbWUgY2xlYW5zZXIgdGVzdHMuIApXZSd2ZSBoYWQgb3VyIGZ1bm55IG1vbWVudHMsIGJ1dCB3ZSd2ZSBhbHNvIGhhZCBzb21lIHNlcmlvdXMgcHJvYmxlbXMuIEkndmUgZW5kZWQgdXAgaW4gaG9zcGl0YWwgdHdpY2UuIERlaHlkcmF0aW5nIGluIDExMCBkZWdyZWUgaGVhdCBpcyBubyBqb2tlLiBQb2lzb25vdXMgc3BpZGVyIGJpdGVzIHN1Y2sgYmFkLiBXZSd2ZSBhbHNvIGVuY291bnRlcmVkIG1hbGFyaWEsIG51dCBqb2JzIHdpdGggZ3Vucywgc25ha2VzLCBjcmF6ZWQgZWxlcGhhbnRzLCB0aWNrIGJpdGUgZmV2ZXIgYW5kIG1hc3MgZm9vZCBwb2lzb25pbmcuCkkgd2FzIHRha2luZyBPUHMgdmlld3BvaW50IGFib3V0IGNhc3VhbCwgYW5kIGFwcGx5aW5nIGl0IHRvIG15c2VsZi4gSSB3YXMgc2F5aW5nIGhvdyBpZiBJIHBsYXkgY2FzdWFsIHdpdGggYSB0aWVyIDEgZGVjaywgaXQgaXMgdW5mYWlyIHRoYXQgSSBwbGF5IHZzIGFub3RoZXIgdDEgZGVjay4gClRoZSBHZW9yZ2lhIFJpZ2h0IHRvIExJZmUgY2FtcGFpZ24gcHV0IHRoZSBiaWxsYm9hcmRzIHVwIGxhc3Qgd2VlayBpbiBBdGxhbnRhIGFuZCwgYWNjb3JkaW5nIHRvIHByZXNzIHJlcG9ydHMsIHRoZSBncm91cCBpcyBhbHNvIHB1c2hpbmcgbGVnaXNsYXRpb24gdGhhdCBhaW1zIHRvIGJhbiBhYm9ydGlvbnMgYmFzZWQgb24gdGhlIGZhY3QgdGhhdCBkaXNwcm9wb3J0aW9uYXRlIG51bWJlciBvZiBCbGFjayB3b21lbiBnZXQgYWJvcnRpb25zLiAoQWNjb3JkaW5nIHRvIENEQyBzdGF0aXN0aWNzIEJsYWNrIHdvbWVuIGFyZSB0aHJlZSB0aW1lcyBhcyBsaWtlbHkgYXMgd2hpdGUgd29tZW4gdG8gZ2V0IGFuIGFib3J0aW9uKS4uIApCcmVhc3QgV2lzaGVzIGluIExpc21vcmU6IEJyZWFzdCBXaXNoZXMgaXMgYW4gdXBsaWZ0aW5nIEF1c3RyYWxpYW4gbXVzaWNhbCBjb21lZHkgYWJvdXQgbGlmZSwgbG92ZSwgZmFtaWx5IGFuZCBzaWxpY29uLiAKVG8gYWNjZXNzIHRoaXMgZW1lcmFsZCB5b3Ugd2lsbCBuZWVkIHRvIHVubG9jayBhbGwgcmVkIHNhZmVzICh3aGljaCBjYW4gYmUgZGVhY3RpdmF0ZWQgaW4gdGhlIHNlY3Rpb24geW91IGZvdW5kIHRoZSBwcmV2aW91cyBlbWVyYWxkKS4gClRoYXQgd2h5IGEgbG90IG9mIHBlb3BsZSBhcmUgZGVmZW5zaXZlIG9uIHRoaXMgdG9waWMgYW5kIHVzaW5nIHRoZSBkZWFkIGxpa2VuZXNzIGlzIGNvbnNpZGVyZWQgc3VjaCBhIHNvY2lhbCBmYXV4IHBhcywgd2Ugd2FudCB0byBuaXAgaXQgaW4gdGhlIGJ1ZC5JZiBpdCB3YXMgb25lIG9mIGhpcyBmYW1pbHkgbWVtYmVycyBtaW5kaW5nIHRoZSB0d2l0dGVyIHRoZW4gSSB3b3VsZCBiZSBtdWNoIG1vcmUgb2theSB3aXRoIHRoZSBzaXR1YXRpb24uc2lsdmVyaHlkcmFMZWdpb24gQXRobGV0aWNzOiBEaXJlY3RvciBvZiBSIHdpdGggYW4gRXhhbWluZSBmZXRpc2ggMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29JdCBwcm9iYWJseSBub3QgYSBtYWpvciBkZWFsLCBzaW5jZSBwb3Rhc3NpdW0gc3VwcGxlbWVudHMgY2FuIG9ubHkgYmUgdGFrZW4gaW4gbGltaXRlZCBhbW91bnRzICh0b28gbXVjaCBwb3Rhc3NpdW0gYXQgb25jZSBjYW4gYmUgZGFuZ2Vyb3VzKTsgd2hlbiBpdCBjb21lcyB0byBhY2NlcHRhYmxlLCBsb3dlciwgbGV2ZWxzIG9mIHBvdGFzc2l1bSBzdXBwbGVtZW50IGludGFrZSBuZWl0aGVyIHRoZSBjaXRyYXRlIG5vciB0aGUgYmljYXJib25hdGUgd291bGQgYmUgaGlnaCBlbm91Z2ggaW4gYW1vdW50IG9mIGRvIG11Y2guQnV0LCBpZiB3ZSB3YW50IHRvIGdldCBpbnRvIHBlZGFudHJ5LCBwb3Rhc3NpdW0gYmljYXJiIG1pZ2h0IGJlIGEgdGFkIGJldHRlciBidXQgbm90aGluZyB0byB3cml0ZSBob21lIGFib3V0LklzIHRoZXJlIGJlY2F1c2UgcGFyYWNldGFtb2wgZG9lc24gaGF2ZSBtYWpvciBhbnRpYmFjdGVyaWFsLCBhbnRpZnVuZ2FsLCBub3IgYW50aXZpcmFsIHByb3BlcnRpZXMgZnJvbSB3aGF0IEkgcmVjYWxsLiAKSWYgeW91IGV2ZXIgc2VlIHBva2VyIG9uIHRlbGV2aXNpb24sIGl0J3MgbW9zdCBsaWtlbHkgdGhhdCB5b3UncmUgd2F0Y2hpbmcgYSBUZXhhcyBIb2xkZW0gZ2FtZS4gClRoZSAyMDAzIFBldyBHbG9iYWwgQXR0aXR1ZGVzIFByb2plY3QgdGhhdCBzdXJ2ZXllZCAzOCwwMDAgbWVuIGFuZCB3b21lbiBhY3Jvc3MgNDQgY291bnRyaWVzIGxlbmRzIGluc2lnaHQgaW50byB0aGUgZGlzcGFyaXRpZXMgYmV0d2VlbiBtYWxlIGFuZCBmZW1hbGUgaGFwcGluZXNzLiBPdmVyYWxsLCB3b21lbiBzY29yZWQgdGhlbXNlbHZlcyBhcyBtb3JlIHNhdGlzZmllZCB3aXRoIHRoZWlyIGxpdmVzIHRoYW4gbWVuIFtzb3VyY2U6IFBldyBSZXNlYXJjaCBDZW50ZXJdLiBNb3Jlb3Zlciwgd29tZW4gZnJvbSBjZXJ0YWluIGNvdW50cmllcywgaW5jbHVkaW5nIFBha2lzdGFuLCBKYXBhbiBhbmQgQXJnZW50aW5hLCBhcHBlYXJlZCBzaWduaWZpY2FudGx5IGhhcHBpZXIuIApQYXJ0aWNpcGF0aW5nIHN0dWRlbnRzIHJlY2VpdmUgYSBzY2hvbGFyc2hpcCBvZiAkMSwwMDAgZHVyaW5nIHRoZSBhY2FkZW1pYyB5ZWFyIGZvciB0aGVpciBzZXJ2aWNlLiBUaGUgRmVsbG93cyBzZXJ2ZSBhcyBhbiBhZHZpc29yeSBib2FyZCB0aGF0IHdvcmtzIHdpdGggdGhlIENlbnRlciB0byBpbmNyZWFzZSB0aGUgYWNjZXNzaWJpbGl0eSBvZiBjb21tdW5pdHkgc2VydmljZSBhbmQgY2l2aWMgZW5nYWdlbWVudCBvcHBvcnR1bml0aWVzIGJ5IGNyZWF0aW5nIGFuZCBwcm9tb3RpbmcgcmVzb3VyY2VzLCBzdXBwb3J0IHN5c3RlbXMsIGFuZCBwcm9qZWN0cyBmb3IgYm90aCBjYW1wdXMgc2VydmljZSBvcmdhbml6YXRpb25zIGFuZCBzdHVkZW50cy4uIApJdCdzIHVuZm9ydHVuYXRlIGJlY2F1c2UgSSBrbm93IHNvIG1hbnkgZ3JlYXQgdmVnYW5zIHdobyBkb24ndCBnaXZlIGEgc2hpdCB3aGF0IEkgZG8uIEkgZWF0IGEgbG90IG9mIHZlZ2FuIGFuZCB2ZWdldGFyaWFuIGZvb2Qgd2l0aCBteSBmcmllbmRzIGFuZCBvdXQgYWxvbmUgYmVjYXVzZSBJIGdlbnVpbmVseSBsb3ZlIGl0LiBJIHdlbnQgd2l0aCBhIHZlZ2FuIGNvd29ya2VyIHRvIGEgcmVzdGF1cmFudCBhIGZldyB5ZWFycyBhZ28sIEkgb3JkZXJlZCB2ZWdhbiBmb29kIGJlY2F1c2UgZnJhbmtseSwgSSBsb3ZlIHZlZ2FuIGZvb2QsIGl0J3MgZGVsaWNpb3VzIGFuZCB1bmlxdWUgZnJvbSBhIGxvdCBvZiB0aGUgY291bnRlcnBhcnQgZm9vZHMuIApBcHBlYXNlIHRoZSBmb3Jlc3Qgc3Bpcml0IGFuZCB0aGV5IG1pZ2h0IGxlYXZlIHRoZSB2aWxsYWdlIHlvdSByZXNjdWluZyBhbG9uZS4gVGhlcmUgaXMgYSBidW5jaCBtb3JlLCBidXQgSSBmZWVsIGxpa2UgSSBhbSByYW1ibGluZy4gCkRvdWJsZSBEb3duIE9uIFlvdXIgQ2FyZCBTa2lsbHMgV2l0aCBUaGUgUG9rZXIgUHJvIEJ1bmRsZQpJbiBjb25jbHVzaW9uIHRoZXkgb2ZmZXIgdGhlaXIgZmxhc2ggZ2FtZXMgaW4gb3ZlciAyMCBkaWZmZXJlbnQgbGFuZ3VhZ2VzIG1ha2luZyBzdXJlIHRoYXQgZXZlcnlvbmUgY2FuIGVuam95IGFsbCBvZiB0aGVtIG5vIG1hdHRlciB3aGVyZSB0aGV5IGFyZSBwZXJmZWN0bHkgbG9jYXRlZCBhdCB0aGUgd29ybGQuLiAKSGlnaCBGcnVjdG9zZSBDb3JuIFN5cnVwIGFuZCBNZXJjdXJ5CkluIGdlbmVyYWwgdGhvdWdoLCBJIHdhdGNoZWQgdG9ucyBhbmQgdG9ucyBvZiB0dXRvcmlhbCBhbmQgdGltZWxhcHNlIHZpZGVvcyBvbiBZb3VUdWJlIGp1c3QgdG8gbGVhcm4gaG93IHBvZXBsZSBtYWtlIHRoZWlyIG1vZGVscyBhbmQgcG9zc2libHkgcGljayB1cCBzbWFsbCB0aXBzL3RyaWNrcyB0aHJvdWdoIHRoZSBkaWZmZXJlbmNlcyBpbiB0aGVzZSBwcm9jZXNzZXMuIApPZiBsYXRlIG9uZSBoYXMgYmVlbiBhYmxlIHRvIG5vdGljZSBtb3JlIGFuZCBtb3JlIGNhc2lubyBhZHZlcnRpc2VtZW50cyBwcm9taXNpbmcgdXAgdG8gJDUwMCBhYnNvbHV0ZWx5IGZyZWUgb2YgY2hhcmdlLCB3aXRob3V0IGFueSBkZXBvc2l0LiAKU28gd2h5IHdvdWxkIGhlIGV2ZXIgc3RvcCBkb2luZyB3aGF0IG1ha2VzIGhpbSBoYXBweT8gZ2V0dGluZyBoaXMgcm9ja3Mgb2ZmIHdpdGggbmV3IGFuZCBkaWZmZXJlbnQgd29tZW4gZXZlcnkgdGltZSBoZSBnZXRzIHRoYXQgbGl0dGxlIGl0Y2guIENoZWF0ZXJzIG9mIGhpcyBpbGsgZG9uJ3QgbWFnaWNhbGx5IGNoYW5nZSB0aGVpciBzcG90cy4gSGUncyBnZXR0aW5nIGluY3JlYXNpbmdseSBib2xkIGFib3V0IGRlbWFuZGluZyBoaXMgInJpZ2h0IiB0byBhcyBtYW55IG5ldyBzZXggcGFydG5lcnMgYXMgaGUgZGVzaXJlcyBoZSBjaGFuZ2VkIGhpcyBwYXNzd29yZCBhbmQga2VwdCBoaXMgZGF0aW5nIGFwcHMuIApXaGVuIGhlciBkYXVnaHRlciwgYSBudXJzZSwgcGhvbmVkIHRoZSBlbmRvY3Jpbm9sb2dpc3QsIGhlIGRlbmllZCB0aGF0IHRoZSBwYXRpZW50J3MgYnJlYXRoaW5nIHByb2JsZW0gd2FzIHJlbGF0ZWQgdG8gaGVyIGxvd2VyIGRvc2Ugb2YgQXJtb3VyLiBIZSBhZHZpc2VkIGhlciB0byBjb25zdWx0IGFuIGVhciwgbm9zZSwgYW5kIHRocm9hdCBzcGVjaWFsaXN0LiBTaGUgc2F3IGEgbHVuZyBzcGVjaWFsaXN0IGluc3RlYWQsIGFuZCBoZSBwcmVzY3JpYmVkIDQwIG1nIG9mIGNvcnRpc29uZSBhbmQgYW4gaW5oYWxlci4gVGhlIGluaGFsZXIgZW5hYmxlZCBoZXIgdG8gZ2V0IHRocm91Z2ggaGVyIGRheXMuIEJ1dCBldmVuIHdpdGggdGhlIGhlbHAgb2YgdGhlIGluaGFsZXIsIHNoZSBjb3VsZG4ndCB3YWxrIHVwIGEgc2hvcnQgZmxpZ2h0IG9mIHN0YWlycyB3aXRob3V0IGdhc3BpbmcgZm9yIGFpci4gSGVyIHZvaWNlIHdhcyBzbyBiYWRseSBhZmZlY3RlZCB0aGF0IHNoZSBjb3VsZCBubyBsb25nZXIgc2luZywgd2hpY2ggc2hlIGhhZCBhbHdheXMgZW5qb3llZC4gY291bGQgb25seSBjcm9haywgc2hlIHNhaWQuCldlIHNob3VsZCBkbyBhbmQgZXhlcmNpc2UgcmVndWxhcmx5LiAKSSBhbHNvIGhhdmUgbm90aWNlZCB0aGF0IGV2ZW4gdGhvdWdoIHBsYXllcnMgcGxheSB3YXkgdG9vIG1hbnkgaGFuZHMgYW5kIHN1YnNlcXVlbnRseSBwbGF5IGxvb3NlciB0aGFuIHRoZXkgc2hvdWxkLCB0aGV5IGdlbmVyYWxseSBhcmVuIGJsdWZmaW5nIHdpdGggY29tcGxldGUgYWlyIG9uIGxhdGVyIHN0cmVldHMuIE1heWJlIHlvdSBoYWQgYSBkaWZmZXJlbnQgZXhwZXJpZW5jZSBidXQgaW4gT21haGEgd2hlbiBzb21lb25lIGJldHMgb3V0IG9uIHRoZSByaXZlciBJIGdpdmUgdGhlbSBtdWNoIG1vcmUgY3JlZGl0IGZvciBzb21lIGtpbmQgb2YgZGVjZW50IGhhbmQ7IGxlc3Mgcml2ZXIgYmx1ZmZzIEkgc3VwcG9zZSBiZWNhdXNlIGV2ZXJ5b25lIGlzIGFmcmFpZCBvZiBwdXR0aW5nIGl0IGluIGFnYWluc3QgdGhlIG5lYXIgbnV0cz8KMjAxODogQ29tcGFueSBtYWtlcyAkODAwIG1pbGxpb24uIDIwMTcgKyAyMDE4IHdhcyAgOTAwICsgODAwID0gIDEwMC4gSXQgc3RpbGwgaGFzIG5vdCBtYWRlIGEgcHJvZml0LCB0aHVzIGRvZXMgbm90IHBheSB0YXhlcy4KTGVzIGJsb2dzIHNlIHNvbnQgbXVsdGlwbGlzLiBPbiB0cm91dmUgZGUgdG91dC4gClNoZSBnb2luZyB0byBsb3NlLiAKSSBvdmVyIGJldC9jaGVjayByYWlzZWQgYW5kIHNob3dlZCBhIGJsdWZmIG9yIGRyYXcgdHdpY2UuIApSaWNrIHJldHVybmVkIGhvbWUgZm9yIGdyYWRlIDEyIGFuZCBhIHNlY29uZCBtb3JlIG1lbW9yYWJsZSBtZWV0aW5nIG9mIGhpcyBmdXR1cmUgd2lmZSBEaWFuYS4gCkhpdGNoaGlraW5nLCB3aGljaCBpcyBhIGZvcm0gb2YgdHJhdmVsLCBpdCBmaXRzIHRoYXQgVHJhdmVsIE91dGRvb3JzClBTUCBEb3dubG9hZHMgQmVzdCBQcmFjdGljZXMKV2UgYXJlIGJhc2VkIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB3ZSBwcm9jZXNzIGFuZCBzdG9yZSBpbmZvcm1hdGlvbiBvbiBzZXJ2ZXJzIGxvY2F0ZWQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIFdlIG1heSBzdG9yZSBpbmZvcm1hdGlvbiBvbiBzZXJ2ZXJzIGFuZCBlcXVpcG1lbnQgaW4gb3RoZXIgY291bnRyaWVzIGRlcGVuZGluZyBvbiBhIHZhcmlldHkgb2YgZmFjdG9ycywgaW5jbHVkaW5nIHRoZSBsb2NhdGlvbnMgb2Ygb3VyIHVzZXJzIGFuZCBzZXJ2aWNlIHByb3ZpZGVycy4gYW5kIG90aGVyIGNvdW50cmllcywgd2hlcmUgeW91IG1heSBub3QgaGF2ZSB0aGUgc2FtZSByaWdodHMgYXMgeW91IGRvIHVuZGVyIGxvY2FsIGxhdy4gUHJpdmFjeSBTaGllbGQgUHJvZ3JhbSAoIlByaXZhY3kgU2hpZWxkIikgYW5kIGNvbXBseSB3aXRoIGl0cyBmcmFtZXdvcmsgYW5kIHByaW5jaXBsZXMuCkhvd2V2ZXIsIEkgZG9uIHdhbnQgYWxsIG9mIHRoZSBwbGFuZXRzIHRvIGJlIFNreXJpbSBzaXplZCBvbiB0aGVpciBvd24uIApJdCBkZXBlbmRzIG9uIHRoZSBkZXRhaWwgaW4gdGhlIHBpY3R1cmUgISBUaGUgbW9yZSBkZXRhaWwgYSBwaG90b2dyYXBoIGhhcywgdGhlIG1vcmUgbWVtb3J5IGlzIHVzZWQgdG8gc3RvcmUgaXQuIFRoaW5rIGxpa2UgdGhpcyAgIEEgcGljdHVyZSBvZiBhIGJsdWUgY2FyIGFnYWluc3QgdGhlIGJyb3duIGJyaWNrd29yayBvZiBhIGhvdXNlIHdvdWxkbid0IHVzZSBtdWNoIG1lbW9yeSwgYXMgdGhlIGNhciBob3VzZSBhcmUgbGFyZ2UgJ2Jsb2Nrcycgb2YgdW5pZm9ybSBjb2xvdXJzLiBBIGdvb2QgYXZlcmFnZSBhdCAxNCBtZWdhIHBpeGVsIHJlc29sdXRpb24gd291bGQgYmUgYXJvdW5kIDE2MCBpbWFnZXMuIApUaGV5IG5lZWQgdG8gZGVjaWRlOyBkbyB0aGV5IHdhbnQgcGVvcGxlIG9yIGRvIHRoZXkgd2FudCBwb3dlcj8gV2l0aG91dCBwZW9wbGUgdGhleSB3b24gbmVlZCBtdWNoIHBvd2VyLgpDYXIgYm9uZXMgd2hhdGV2ZXIgdGhleSBoYXZlLiAKSSBoYXZlIGhlYXJkIGZyb20gbWFueSBvZiB0aGUgd29tZW4gaW4gbXkgbGlmZSB0aGF0IFZTIHF1YWxpdHkgYW5kIHNlbGVjdGlvbiBoYXMgZHJhc3RpY2FsbHkgZmFsbGVuIG92ZXIgdGhlIHBhc3QgNSB5ZWFycyAgIHNvIGl0IGNvdWxkIGJlIGFzIHNpbXBsZSBhcyBjdXN0b21lcnMgc2ltcGx5IHNodW5uaW5nIHRoZSBicmFuZC4KV2hlbiBhc2tlZCB3aHkgdGhleSBjaG9zZSBJbmRpYSwgUGFuZGl0YSBzYWlkLCAiVGhlcmUgd2VyZSBtYW55IHVudG9sZCBzdG9yaWVzIGFsbCBhY3Jvc3MgSW5kaWEgYW5kIFBvY2tldCBBY2VzIHdhbnRlZCB0byBnaXZlIHBlb3BsZSBhIHBsYXRmb3JtIHRvIHRlbGwgdGhlbS4iIFNocml2YXN0YXZhIGNoaW1lZCBpbiBzdGF0aW5nIHRoYXQgdGhlIHBlcnNvbmFsIGFzcGVjdCBhbHNvIHBsYXllZCBhIHZpdGFsIHJvbGUuICJBIGxvdCBvZiB1cyBncmV3IHVwIGNvbnN1bWluZyBpbnRlcm5hdGlvbmFsIGNvbnRlbnQsIGVpdGhlciBieSBkb3dubG9hZGluZyBmcm9tIHRvcnJlbnRzIG9yIG90aGVyIG1lYW5zLiAKV2l0aCB0aGUgYW1vdW50IG9mIHByZXNzdXJlIHNoZSB3YXMgdXNpbmcgdG8gc3RhYiBpbnRvIHRoZWlyIHNraW4gd2l0aCBoZXIgc2hhcnAgYXNzIG5haWxzLCBwbHVzIHBva2luZyBoZXIgbmVlZGxlIGRlZXAgaW50byB0aGUgcG9yZSwgSSdkIHNheSB0aGlzIHBlcnNvbiBpcyBnb2luZyB0byB3YWxrIGF3YXkgd2l0aCBhIGZldyBzY2FycyBhdCBsZWFzdC4gQW5kIG1heWJlIHNvbWUgYnJva2VuIGNhcGlsbGFyaWVzLiAKQWIgSmFudWFyIDIwMTkgZmluZGV0IGRhcyBtb25hdGxpY2hlIE5hYWQgWW9nYSBTcGVjaWFsIGFuIGplZGVtIDIuIFVuZCA0LiBGcmVpdGFnIGRlcyBNb25hdHMgdm9uIDE4IFVociBiaXMgMTk6MzAgVWhyIHN0YXR0LiAKRGllIEVVIGhhdCB2aWVsIEdlbGQgaW4gZGVuIEF1c2JhdSBkZXIgSW5mcmFzdHJ1a3R1ciBnZXN0ZWNrdC4gCkV2ZW4gb25jZSBhIGJyZWF0aGFseXplciBpcyBhdmFpbGFibGUsIHRoZSBtYWNoaW5lIHdvdWxkIGhhdmUgdG8gcGFzcyBmZWRlcmFsIHJlZ3VsYXRpb25zIGZvciB0aGUgZGVwYXJ0bWVudCBvZiB0cmFuc3BvcnRhdGlvbiwgYXMgd2VsbCBhcyByZWd1bGF0aW9ucyBmb3IgZWFjaCBwYXJ0aWN1bGFyIHN0YXRlLCBDbGFmbGluIG5vdGVzLiAiW1N0YXRlc10gaGF2ZSBhIHN0YW5kYXJkIHRoYXQgdGhpcyBoYW5kaGVsZCBtYWNoaW5lIGhhcyB0byBmYWxsIHdpdGhpbi4gCldlIG9mdGVuIGFjY2VwdCBwYXRpZW50cyBmb3IgY29udGludW91cyBFRUcgbW9uaXRvcmluZyBmb3IgdGhlIHNhbWUgcmVhc29uLCBldmVuIHRob3VnaCB0aGV5IGFyZSBzdGFibGUgYW5kIG5vdCBzZWl6aW5nLi4gCkkgcmVhbGl6ZSBJIHVzZWQgYW4gYW5lY2RvdGUgdG8gbWFrZSBhIHBvaW50LiBOb3QgdGhlIGJlc3Qgd2F5IHRvIGRvIHRoYXQuIEJ1dCwgSSBtZWFuLCBldmVyeW9uZSBsb3ZlcyB1bnRpbCB0aGV5IGZpbmQgYSByZWFzb24gdG8gc3RvcC4gQW5pbWFscyBkb24gZ28gIk9oIHlvdSBrbm93IHdoYXQsIEkgaGF0ZSB0aGUgd2F5IGhlIGNsZWFucyBwYW5zIGFuZCBkb2VzbiBjb250cmlidXRlIHRvIGNob3JlcywgdWdoLiIgSSB0aGluayBpdCBmYXIgbW9yZSBhYm91dCB2aW9sYXRpbmcgdGhlaXIgdHJ1c3QgdGhhdCBtYWtlcyB0aGVtIHN0b3AgbG92aW5nIHlvdS4gQW5kIEkgdGhpbmsgdGhhdCB0YWtlcyBhIGxvdCBtb3JlIGVmZm9ydCB0byBtYWtlIGhhcHBlbiB0aGFuIGEgaHVtYW4gZmFsbGluZyBvdXQgb2YgbG92ZSB3aXRoIHlvdS4gQ2F0cywgSSB0aGluaywgYXJlIGEgbG90IGhhcmRlciB0byBlYXJuIHRoZWlyIGxvdmUuIEl0IGVhc3kgdG8gbG92ZSB0aGVtIGJ1dCB2aW9sYXRlIHRoZWlyIGJvdW5kYXJpZXMsIHVubGlrZSBkb2dzLiBEb2dzIGp1c3QgZG9uIGhhdmUgYSBsb3Qgb2YgYm91bmRhcmllcy4gQnV0IGlmIHlvdSBsb3ZlZCBzb21lb25lIHRvIHBpZWNlcyBhbmQgdGhleSBqdXN0IGRpc2FwcGVhcmVkIG9uZSBkYXksIHlvdSBzdGlsbCBsb3ZlIHRoZW0gZXZlbiBhIGxvbmcgdGltZSBsYXRlci4gSWYgeW91IHNhdyB0aGVtIGFnYWluIGFmdGVyIHNldmVyYWwgeWVhcnMsIHlvdSBzdGlsbCBiZSBzbyBoYXBweSB0byBzZWUgdGhlbSBiZWNhdXNlIG5vdGhpbmcgaGFwcGVuZWQgdG8gY2hhbmdlIGhvdyB5b3UgZmVlbCBhYm91dCB0aGVtLiAoVGhvdWdoIHdlIGNhbiByZWFsaXplIHRoYXQgdGhlbSBkaXNhcHBlYXJpbmcgbWF5IG1lYW4gdGhhdCB0aGV5IGRvbiBsb3ZlIHVzIG9yIGRpc3Jlc3BlY3Qgb3VyIGZyaWVuZHNoaXAsIHNvIHRoZW4gd2UgZ2V0IG1hZCBhbmQgbW92ZSBvbikKSWYgaGlzdG9yeSBpcyBhbnkgaW5kaWNhdG9yLCB0aGF0IG51bWJlciB3aWxsIGJlIHBhcmVkIGRvd24sIE1heW9yIERyZXcgRGlsa2VucyBzYWlkIGF0IGEgV2VkbmVzZGF5IG1vcm5pbmcgbmV3cyBjb25mZXJlbmNlIHdpdGggc2VuaW9yIGFkbWluaXN0cmF0b3JzLiAKVGhpcyB3aWxsIG9mIGNvdXJzZSBpbmNsdWRlIHN0cmVhbWxpbmluZyB0aGUgYXBwcm92YWxzIHByb2Nlc3NlcyBmb3IgcGxhbm5pbmcsIGVudmlyb25tZW50YWwgYW5kIHNlcnZpY2luZy4gClN0dWFydCBNY0dpbGwgaXMgb25lIG9mIHRoZSB3b3JsZCBiZXN0IHdoZW4gaXQgY29tZXMgdG8gdW5kZXJzdGFuZGluZyB0aGUgYmFjayBhbmQgc3BpbmUuClRoZSBzYW1lIGdvZXMgZm9yIGFueSBwYWNrYWdlIG9yIGZyYW1ld29yay4uIApBIGxvdCBvZiBwbGFjZXMgd2lsbCBnZXQgdGhlIGJ1aWxkaW5nIG1haW50ZW5hbmNlIGd1eSB0byBwcnkgb3BlbiB0aGUgZG9vcnMgYW5kIHB1bGwgcGVvcGxlIG91dCBiZWNhdXNlIHRoZSBmaXJlIGRlcGFydG1lbnQgd2lsbCByZXBvcnQgdGhlIGVsZXZhdG9yIGZhaWx1cmUgdG8gdGhlIHNhZmV0eSBjb21taXNzaW9uLiAKU28gSSB3YXMgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgaG93IGxvbmcgSSBoYWQgZnJvbSB0aGUgdGltZSBJIHNldCB0aGUgbmV0LCBiZWNhdXNlIEkga25vdyB3aGVuIHRoZSBzZWEgbGlvbnMgc2hvdyB1cCB0aGUgY2hhbmNlIG9mIG1lIGdldHRpbmcgZmlzaCBpcyB6ZXJvLCBpdCBhYnNvbHV0ZWx5IHplcm8sIGhlIHNhaWQuU2luY2UgdGhlIHZpZGVvIGhhcyBiZWVuIHNoYXJlZCwgTWFyc2RlbiBzYWlkIGhlIGhhcyByZWNlaXZlZCB0aHJlYXRzLlRob21hcyBTZXdpZCwgdmljZSBwcmVzaWRlbnQgb2YgdGhlIFBhY2lmaWMgQmFsYW5jZSBQaW5uaXBlZCBTb2NpZXR5LCBwb3N0ZWQgdGhlIHZpZGVvIGFuZCBhbiBleHBsYW5hdGlvbiB0aGF0IHNheXMgbnVtYmVycyBvZiBzZWEgbGlvbnMgdGhhdCBkaXZlIG9uIHNjaG9vbHMgb2YgaGVycmluZyBrZWVwIHRoZSBmaXNoIGRlZXAgaW4gdGhlIHdhdGVyLCBwcmV2ZW50aW5nIGZpc2hlcm1lbiBmcm9tIG1ha2luZyBhIGxpdmluZy5IZSBzYWlkIHNlYWxzIGFuZCBzZWEgbGlvbnMgYWxzbyBoYXZlIHRoZSBwb3RlbnRpYWwgdG8gc3Bvb2sgbGFyZ2Ugc2Nob29scyBvZiBhbHJlYWR5IG5ldHRlZCBoZXJyaW5nLCBjYXVzaW5nIHRoZSBmaXNoIHRvIGRpdmUuIFdoZW4gbGFyZ2UgbnVtYmVycyBvZiBmaXNoIGFyZSBhbGwgbW92aW5nIGluIHRoZSBzYW1lIGRpcmVjdGlvbiwgaGUgc2FpZCB0aGV5IGhhdmUgdGhlIGNvbWJpbmVkIHN0cmVuZ3RoIHRvIGZsaXAgYW5kIHNpbmsgYSBsYXJnZSBib2F0LndlIGhhdmUgbG9zdCBtYW55IGZlbGxvdyBmaXNoZXJzIHdoZW4gc2VpbmVycyBjYXBzaXplLiBNeSBncmVhdCB1bmNsZSBkcm93bmVkIG5vdCAxMCB5ZWFycyBhZ28gaW4gdGhlIEd1bGYgb2YgR2VvcmdpYSB3aGVuIHRoaXMgaGFwcGVuZWQgZHVyaW5nIGEgc25vd3kgbmlnaHQgb2YgaGVycmluZyBmaXNoaW5nLCBTZXdpZCBzYWlkIGluIGhpcyBwb3N0LkZpc2hlcmllcyBhbmQgT2NlYW5zIENhbmFkYSBzYWlkIGl0IHdvdWxkIGludmVzdGlnYXRlIGFuZCBpdCByZW1pbmRlZCB0aGUgcHVibGljIGl0IGlzIGlsbGVnYWwgdG8gZGlzdHVyYiBzZWFscywgc2VhIGxpb25zIG9yIG90aGVyIG1hcmluZSBtYW1tYWxzLmluY2x1ZGVzIHRoZSB1c2Ugb2YgYWNvdXN0aWMgZGV0ZXJyZW50cyBzdWNoIGFzIHNlYWwgYm9tYnMgb3Igb3RoZXIgZXhwbG9zaXZlcywgaXQgc2FpZCBvbiBhIHNvY2lhbCBtZWRpYSBwb3N0LlNld2lkIHNhaWQgaGUgaXMgbWVyZWx5IGZvZGRlciBpbiB0aGUgYmF0dGxlIGZvciBhIGxlZ2FsIGh1bnQgb24gQ2FsaWZvcm5pYSBzZWEgbGlvbnMsIGFkZGluZyB0aGUgc29jaWV0eSBpcyB0byBlZHVjYXRlIEZpc2hlcmllcyBvZmZpY2lhbHMgYWJvdXQgdGhlIHRocmVhdCBwb3NlZCBieSBwaW5uaXBlZHMuU2V3aWQgcXVlc3Rpb25lZCB0aGUgcmVzdHJpY3Rpb24gb24gdGhlIHVzZSBvZiB0aGUgZXhwbG9zaXZlIGRldmljZXMud3Jvbmcgd2l0aCB0aGUgd29ybGQ/IEhvdyBjb21lIGEgZmlzaGVybWVuIHVzZXMgYSBsaXR0bGUgZmlyZWNyYWNrZXIgdHJ5aW5nIHRvIGtlZXAgdGhlIGNyZXcgc2FmZSBhbmQgZXZlcnlvbmUgaXMgdXAgaW4gYXJtcywgeWV0IChoaWtlcnMgb3IgY2FtcGVycykgY2FuIHdoYWNrIGEgYmVhciwgYSBjb3lvdGUsIGEgYmFkZ2VyLCBhIGNvdWdhciwgYSB3b2xmIHdpdGggYmVhciBiYW5nZXJzIGFsbCBkYXkgbG9uZyBhbmQgbm8gb25lIHNheXMgYSBkYW1uIHRoaW5nLCBoZSBzYWlkIGluIGEgdGVsZXBob25lIGludGVydmlldyBvbiBGcmlkYXkuLiAKSSBhbHNvIHNlZSBhIGJ1bmNoIG9mIGp1bmdsZXJzIGNhbGwgZm9yIG9iamVjdGl2ZXMgYW5kIG1pc3MgdGhlIHNtaXRlIHNvLi4gCkRvZXMgVmlyZ2luIEF0bGFudGljIG5vdCBkbyBtdWx0aWNpdHkgYXdhcmQgcmVkZW1wdGlvbj8gV2FzIHRoaW5raW5nIG9mIGNhbGxpbmcgdGhlbSB0b21vcnJvdyBhbmQgYXNraW5nIGhvdyBtdWNoIGl0J2xsIGJlIGlmIEkganVzdCB0b3AgdXAgaW4gY2FzaCBmb3IgdGhlIHBvaW50cyB0aGF0IEknbSBsYWNraW5nLgpTZXZlcmFsIHN0dWRpZXMgaGF2ZSBub3RlZCBhbiBpbmNyZWFzZWQgdXNlIG9mIGNvbXBsZW1lbnRhcnkgYW5kIGludGVncmF0aXZlIGhlYWx0aCAoQ0lIKSBzZXJ2aWNlcyBhbW9uZyBtaWxpdGFyeSBwZXJzb25uZWwgYW5kIHZldGVyYW5zLiBUaGUgVkEgYW5kIERlcGFydG1lbnQgb2YgRGVmZW5zZSBpcyBhY3RpdmVseSBjb25kdWN0aW5nIHN0dWRpZXMgbG9va2luZyBhdCBtYXNzYWdlIGFuZCBDSUggc2VydmljZXMgdG8gcmVkdWNlIG9waW9pZCB1c2UsIHdoaWNoIGltcGFpcnMgcGVyZm9ybWFuY2UgYW5kIGhhcyBhIGhpZ2ggYWJ1c2UgcG90ZW50aWFsIHdoaWxlIG9mdGVuIGZhaWxpbmcgdG8gcHJvdmlkZSBmdWxsIHJlbGllZiAoTWFkc2VuLCBWYXVnaGFuLCBLb2VobG1vb3MsIDIwMTcpLiBJbiBwYXJ0aWN1bGFyLCBNYWRzZW4gZXQgYWwgKDIwMTcpIHN0YXRlZENJSCBpcyBiZWluZyBpbnZlc3RpZ2F0ZWQgYXMgYSBub25kcnVnLCBub25zdXJnaWNhbCBtZXRob2QgdG8gbWFuYWdlIHRoZSAicG9seXRyYXVtYSB0cmlhZCIgb2YgY2hyb25pYyBwYWluLCB0cmF1bWF0aWMgYnJhaW4gaW5qdXJ5LCBhbmQgUFRTIGFtb25nIGluZGl2aWR1YWxzIGluIHRoZSBNaWxpdGFyeSBIZWFsdGggU3lzdGVtLgpJIHZvbHVudGFyaWx5IGVubGlzdGVkIGluIHRoZSBtaWxpdGFyeSwgYW5kIGRlc3BpdGUgYmVpbmcgb25lIGNsdW1zeSBzb25vdmFiaXRjaCwgSSd2ZSBoYWQgYSBncmVhdCBsaWZlIGhlcmUuIApJIHNwZW50IGEgaGFwcHkgZmlyc3Qgd2VlayBsZWFybmluZyB0aGUgcm9wZXMsIGFuZCBzaGFyaW5nIHNvbWUgb2YgbXkgdGhvdWdodHMgd2l0aCB5b3UgICBhbmQgZ2V0dGluZyBzdXBlciBzdXBlciByZXBsaWVkLiAKRG9vYmVybWNmbG9vYmVyICAzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpEYW5uIHJlZHV6aWVydCBzaWNoIGRpZSBhdWYgMSwxMCB1bmQgZGllIGF1ZiAxLDcwIC4gRGllIEJlaXNwaWVsZmFocnQgdm9tIEZsdWdoYWZlbiBuYWNoIFB1ZXJ0byBUYXphY29ydGUga29zdGV0IGRhbm4gbm9jaCBnYW56ZSA0LDUwIC4gQWJiaWxkdW5nIGxpbmtzOiBkYXMgYmlzaGVyaWdlIEF1c3NlaGVuIGRlciBLYXJ0ZSwgcmVjaHRzOiBkaWUgaW4gbmV1ZW4gVElMUCBEZXNpZ24uLiAKV2UgcmV2ZXJzZSBlbmdpbmVlcmVkIGl0IGZyb20gdGhlcmUgdG8gY29tZSB1cCB3aXRoIHRoZSBmbG9vciBwbGFucyBhdCBTb2xlaWwuLiAKRGVmaW5pdGVseSBsaWtlZCB0aGUgYWxidW0gb3ZlcmFsbC4gSSB0aG91Z2h0IGl0IHN0YXJ0ZWQgb2ZmIHByZXR0eSBzdHJvbmcgd2l0aCB0aGUgZmlyc3QgdHJhY2ssIGJ1dCB0aGVuIHRob3VnaCBpdCB3YXMgc291bmRpbmcgYSBiaXQgc2FtZXksIHdpdGhvdXQgdmVyeSBtdWNoIHZhcmlldHkuIFRoZW4gV2FzIGluIHRoZSBCbHVlcyBzdGFydGVkIGFuZCBJIGdvdCByaWdodCBiYWNrIGludG8gaXQuIEkgdGhvdWdodCB0aGF0IHRoZSBiYWNrIGhhbGYgb2YgdGhlIGFsYnVtIHdhcyByZWFsbHkgd2VsbCBkb25lIGFuZCBsaWtlZCB0aG9zZSBzb25ncyBhIGxvdCBtb3JlLiBJIG1pZ2h0IG5lZWQgYSBmZXcgbW9yZSBsaXN0ZW5zIHdpdGggaXQgZm9yIGl0IHRvIHJlYWxseSBzdGFydCB0byBncm93IG9uIG1lLgpGb3IgTWFrZW1vZGVsLCBpdCB3YXMgYSBzZXJpZXMgb2YgZ2FsbGVyaWVzIG9mIG1vZGVscy4gClRoYXQgYmUgbGlrZSBhc2tpbmcgdGhlIFBhbGVzdGluaWFucyB0byBzaW1wbHkgd2l0aGRyYXcgdGhlaXIgZGVtYW5kcyBmb3Igc3RhdGVob29kIGFuZCBhIFBhbGVzdGluaWFuIGhvbWVsYW5kLCBhbmQgc2ltcGx5IGJlIGFic29yYmVkIGludG8gSXNyYWVsaSBzb2NpZXR5LiAKQ2YuIAoiV2UncmUgY2hhcmFjdGVyaXplZCBhcyBhIHJ1cmFsIGdheSBjb21tdW5pdHkuIiBUaGUgcHJlc2lkZW50IGFza2VkIHRoYXQgaGlzIG5hbWUgbm90IGJlIHVzZWQuICJKdXN0IGJ5IG1lIGFza2luZyB5b3Ugbm90IHRvIHVzZSBteSBuYW1lLCBzaG93cyB5b3UgdGhlcmUncyBkaXNjcmltaW5hICBoZSB0b2xkIGEgcmVwb3J0ZXIuICJJdCdzIGhhcmQgdG8gc2hvdyBkaXNjcmltaW5hdGlvbiB3aGVuIHRoZSBvbmVzIGJlaW5nIGRpc2NyaW1pbmF0ZWQgYWdhaW5zdCBhcmUgU2hhY2tlbGZvcmQgY29uICB0aW51ZWQuIApZb3UgYXJlIGEgbGl0dGxlIHNoeSwgYnV0IGNvdWxkIGJlIHRoZSBjZW50ZXIgb2YgYXR0ZW50aW9uIGlmIHlvdSB3YW50ZWQgdG8uIApZb3UgZ290IHRvIGRvIGl0IGluIGdhbWVzIGxpa2UgdGhpcy4gCk1lYW53aGlsZSBhdCBteSBwcmV2aW91cyBiYW5rIHdlIGhhZCBudW1lcm91cyBNQkFzIHdvcmtpbmcgYmVsb3cgbWUgaW4gbWVuaWFsIHBvc2l0aW9ucyBtYWtpbmcgJDM1ayBhIHllYXIuIElmIHNoZSBnb2VzIGludG8gdGhlIGVxdWl0eSBzaWRlIG9mIHRoaW5ncyBzaGUgY291bGQgbWFrZSBhIG11bHRpcGxlIG9mIHRoYXQsIGJ1dCB3b3JrL2xpZmUgYmFsYW5jZSBpc24ndCBuZWFybHkgYXMgZ29vZCBhcyB3aGF0IEkgaGF2ZS4gCkJhcidzIGNsb3NlZCBhdCBpY29uaWMgcHViClNUT1AuIEVBU1kuIApJdCBpcyBub3QgbmV3IGFuZCBtYW55IHBsYXllcnMgcGxheXMgYXBwcm94aW1hdGVseSBzby4gCkl0IGNhbiBiZSBjYXVzZSBieSBhbiBpbGxuZXNzLCBpbXByb3BlciBoYWlyIGNhcmUgYW5kIHNvbWUgaGFpcnN0eWxlcyB0aGF0IHB1dCB0b28gbXVjaCBzdHJhaW4gb24gdGhlIGhhaXIgZm9sbGljbGVzIGxlYWRpbmcgdG8gbG9zcyBvZiBtb3JlIGhhaXIgdGhhbiB1c3VhbC4gSXQgaXMgbmF0dXJhbCBmb3IgZWFjaCBwZXJzb24gdG8gbG9zZSBhIGZldyBoYWlyIHN0cmFuZHMgYSBkYXksIGFzIHRoZSBoYWlyIGNvbnRpbnVlcyB0byBmb2xsb3cgYSBjeWNsZSBvZiBncm93dGggYW5kIGZhbGxpbmcgb2ZmLiAKU2FkbHkgdGhpcyBpc24gZXZlbiBhIGV4cGVyaWVuY2UgZnJvbSBhIEFtZXJpY2FuIHNjaG9vbCBidXQgYWN0dWFsbHkgYSB0aGlyZCB3b3JsZCBjb3VudHJ5IGlmIHlvdSBjaGVjayBvcHMgY29tbWVudHMuIEkgbm90IGRpc2FncmVlaW5nIG15IHNjaG9vbCBhcmVuIGhhcnNoIG9uIGRvcm1zIGJ1dCBJIG5ldmVyIGhhZCB0aGlzIHByb2JsZW0gd2hlbiBJIHdhcyBjYXVnaHQgYXQgbXkgY29sbGVnZSBkb3JtIHdpdGggcG90LCBJIGFjdHVhbGx5IGVuZGVkIHVwIG9uIGxpa2UgYmFzaWNhbGx5IGEgcHJvYmF0aW9uIGJ1dCBmb3IgbXkgY29sbGVnZSwgbm90IHdpdGggbGF3IGVuZm9yY2VtZW50LiBUaGUgY2lncyBhbmQgdG9hc3Rlci9taWNyb3dhdmUgaGF0ZSBpcyBmcm9tIGFsbCB0aGUgcGFyZW50cy9zdHVkZW50cyB3aGluaW5nIHdoaWNoIHRoZSBjb2xsZWdlIGNhbiBvbmx5IGRvIHNvIG11Y2ggdG8ga2VlcCBwZW9wbGUgcGF5aW5nIHNvIHRoZSBzb2x1dGlvbiBpcyB0byBub3QgYWxsb3cgdGhvc2UgdGhpbmdzIGV2ZW4gaWYgaXQgaXMgZnVja2VkIHVwIGxvbApCdXQgdGhpcyB3b3VsZG4gYmUgdGhlIGNhc2UgaWYgdGhleSBhdGUgZXZlbiBoYWxmIGEgbXVjaCBtZWF0IGFzIFdlc3Rlcm5lcnMuIApQZW9wbGUgd2FudCBDbGF5dG9uIHRvIGJlIG9uZSBvZiB0aGUgZ3JlYXRlc3Qgb2YgYWxsIHRpbWUgYmVjYXVzZSBoZSBkb21pbmF0ZXMgb3JkaW5hcnksIHJlZ3VsYXIgc2Vhc29uIGJhc2ViYWxsLiBIZSBvbmUgb2YgdGhlIGdyZWF0ZXN0IGluIHRoYXQgY29udGV4dC4gCldlIGZvdW5kIGEgc3BvdXQgY29taW5nIG9mZiB0aGUgc2lkZSBvZiB0aGUgaG91c2UgZnJvbSBhbGwgdGhlIHJhaW4gcnVzaGluZyBvZmYgdGhlIHJvb2YuIApZb3Ugc2F5aW5nIHRoYXQgQ3JvbXdlbGwgYnkgdGFraW5nIGF3YXkgdGhlIGxhbmQgcmlnaHRzIG9mIHRoZSBsb2NhbCBpbmRpZ2Vub3VzIHBvcHVsYXRpb24gQU5EIHdoaWNoIGhhZCBjb25zZXF1ZW50aWFsIGxhd3MgcHJldmVudGluZyBsYW5kIG93bmVyc2hpcCBmb2xsb3dpbmcgdGhhdCwgd2hpY2ggZm9yY2VkIHRoZW0gdG8gc3Vic2lzdCBvbiBhIHNpbmdsZSBjcm9wIGlzbiByZXNwb25zaWJsZSBmb3IgdGhlIGRlYXRocyBjYXVzZWQgd2hlbiB0aGF0IGNyb3Agc3Vic2VxdWVudGx5IGZhaWxlZD8gSSBub3Qgc2F5aW5nIGhlIGNhdXNlZCB0aGUgZmFtaW5lLCBJIHNheWluZyBoZSBjcmVhdGVkIHRoZSBzaXR1YXRpb24gZm9yIGl0IHRvIGJlIGFzIGRpc2FzdHJvdXMgYXMgaXQgd2FzLiBUaGUgMjAwIHllYXIgZGlmZmVyZW5jZSBkb2VzbiBtYXR0ZXIgaWYgbm90aGluZyBjaGFuZ2VkIGluIHRoYXQgdGltZSBmb2xsb3dpbmcgdGhlIGFjdGlvbnMgaGUgd2FzIHJlc3BvbnNpYmxlIGZvci4gCkZpcnN0IG9mZiB5b3Uga25vdyBub3RoaW5nIGFib3V0IG1lIGFuZCB5b3Uga25vdyBub3RoaW5nIGFib3V0IG15IGNsb3NlIG9yIGV4dGVuZGVkIGZhbWlseSBhbmQgZnJpZW5kcy4gWW91IGRvbiB1bmRlcnN0YW5kIHdoZXJlIEkgYW0gY29taW5nIGZyb20uIApJZiB0aGUgdGFibGUgZGlkbiBiYWNrIG1lIHVwLCBhbmQgdGhlIG90aGVyIHBsYXllciB3YXMgYXJndWluZywgZG8geW91IHRoaW5rIHRoZSBmbG9vciBjb3VsZCBoYXZlIHBvc3NpYmx5IG1hZGUgbWUgZm9sZCBhbmQgbXVjayB0aGUgbnV0cz8/IE5leHQgdGltZSBJIGNlcnRhaW5seSBwdXR0aW5nIGEgY2hpcCBpbiB3aGVuIGkgY2FsbCwgYW5kIEkgYWR2aXNlIHlvdSBndXlzIHRvIGRvIHRoZSBzYW1lIS4gCkNvbW1vbmx5LCB3aXRoIG1hc3NhZ2UsIHN0cmVzcyBjYW4gYmUgY29udHJvbGxlZCBlZmZlY3RpdmVseS4gSXQgaXMgbm90IGdvaW5nIHRvIGRpc3NvbHZlIGF3YXkgYWxsIHRob3NlIHRoaW5ncyB0aGF0IGFyZSBjYXVzaW5nIHlvdSB0ZW5zaW9uIGFuZCBzdHJlc3MgaW4gdGhlIGZpcnN0IHBsYWNlLCBidXQgaXQgc3VyZWx5IGlzIGdvaW5nIHRvIGhlbHAgaW4gbWFraW5nIHlvdSBtZW50YWxseSBhbmQgcGh5c2ljYWxseSBtb3JlIGNhcGFibGUgb2YgdGFraW5nIGxpZmUgaGVhZCBvbiEKSSBoYXZlIGFuIHVua25vd24gdHlwZSBvZiBhdXRvc29tYWwgZG9taW5hbnQgY2VudHJvbnVjbGVhciBteW9wYXRoeS4gCk15IHR3byBtb3N0IHJlY2VudCBjYWxscyB3ZXJlIHRvIGEgc3RvcmUgSSB3YXMgb3JkZXJpbmcgYSB0dXhlZG8gZnJvbSwgYW5kIG15IGRhZCB0ZWxsaW5nIG1lIHRvIGNhbGwgaGltIHRvIG1ha2Ugc3VyZSBzb21ldGhpbmcgb24gaGlzIHBob25lIHdhcyB3b3JraW5nLiAKU28gdGhlIHByb2Nlc3Mgb2YgYXJndW1lbnRzIG1heSBsZWFkIHRvIHByb3BlciBvciBlZmZlY3RpdmUgY29tbXVuaWNhdGlvbiBvciBpdCBtYXkgbGVhZCB0byBpbmVmZmVjdGl2ZSBjb21tdW5pY2F0aW9uLiAKT3IsIGVtcGxveWVycyBtaWdodCBhc2sgb25seSBhYm91dCBmZWxvbnkgY29udmljdGlvbnMgYW5kIG5vdCBtaXNkZW1lYW5vcnMuIEFsc28sIGRvbid0IGluY2x1ZGUgbW9yZSBpbmZvcm1hdGlvbiB0aGFuIGlzIG5lY2Vzc2FyeSwgaW5zdGVhZCB3cml0aW5nICJXaWxsIGRpc2N1c3MgYXQgaW50ZXJ2aWV3IiBvbiB0aGUgYXBwbGljYXRpb24uIE5ld3MgV29ybGQgUmVwb3J0OiBIb3cgdG8gRmluZCBhIEpvYiBXaGVuIFlvdSBIYXZlIGEgQ3JpbWluYWwgUmVjb3JkVGhlIEdsYWRpYXRvcjogSG93IHRvIEhhbmRsZSBhIENyaW1pbmFsIEhpc3RvcnlEZW52ZXIgUHVibGljIExpYnJhcnk6IEhvdyB0byBSZXNwb25kIHRvIHRoZSBGZWxvbnkgUXVlc3Rpb24uIApBZnRlciB0aGF0LCBteSBkYWQgd2FzIGtub2NrZWQgb3V0IHdpdGggYSBzaG92ZWwgdG8gdGhlIGhlYWQuIFRoZSBndXkgd2l0aCB0aGUgZ3VuIGxvY2tlZCBtZSBpbiBhbiBlbXB0eSBzdG9yYWdlIHJvb20uIEF0IHRoYXQgc3RhZ2UgSSBmZWFyZWQgdGhhdCBJIG1pZ2h0IGdldCByYXBlZCBhcyBJIHdhcyBhIDEzIHllYXIgb2xkIGdpcmwuIApFdSBmaXogdW1hIHBlc3F1aXNhIG5vIEdvb2dsZSBlIG1lIGRlcGFyZWkgY29tIHNldSBzaXRlLiBFcmEgZXhhdGFtZW50ZSBvIHF1ZSBldSBlc3RhdmEgcHJvY3VyYW5kbyBlIGZpcXVlaSBpbXByZXNzaW9uYWRvIGFvIGVuY29udHJhciB1bWEgYW1wbGEgZ2FtYSBkZSBhcnRpZ29zLiBDb21vIGV1IGVzdG91IGxhbmFuZG8gdW1hIHJldmlzdGEgZ3JhdHVpdGEgZW0gdW1hIHBlcXVlbmEgY2lkYWRlIG5hIEZscmlkYSwgZXUgcXVlcmlhIHNlciB0byBoYWJpbGlkb3NvIHF1YW50byBwb3NzdmVsIGUgYWluZGEgc2VyIGNhcGF6IGRlIGZvcm5lY2VyIGFsZ3VtIGNvbnRlZG8gcXVlICBpbnRlcmVzc2FudGUgZSBiZW0gZXNjcml0by4gCk5vdyBjb25zaWRlciBob3cgbXVjaCB3ZSBzaXQgdG9kYXkgY29tcGFyZWQgd2l0aCwgc2F5LCAxNjAgeWVhcnMgYWdvLgpBbGwgb2YgdGhlIGJpZyBuYW1lIHBva2VyIHBsYXllcnMgd2hvIGVuZG9yc2Ugb24gbGluZSBwb2tlciBzaXRlcyBtYWtlIG1vcmUgbW9uZXkgZnJvbSBsZW5kaW5nIHRoZWlyIG5hbWVzIHRvIHRoZXNlIHNpdGVzIHRoYW4gdGhleSBldmVyIGRpZCBmcm9tIGFjdHVhbGx5IHBsYXlpbmcgcG9rZXIuIApUaGUgYmFzaWMgYWlycG9ydCBwYXNzZW5nZXIgbG9vcCBpcyBncmVhdC4gUGxhdGZvcm1zIGhhdmUgZG9vcnMgdG8gYm9hcmQgdGhlIHRyYWlucy4gCklmIHlvdSBoYXZlIHRvIHRha2UgYSBjYWIgb25seSByaWRlIEJsdWUgQmlyZC9QdXNha2EgQmlydSBvbmVzLCB0aGV5IGFyZSBibHVlIGNvbG9yZWQgKG9idmlvdXNseSkgYW5kIGFyZSB0aGUgbW9zdCB0cnVzdGVkIG9wZXJhdG9yLiBTaG91bGQgY29zdCBhcm91bmQgMTUgVVNEIHRvIGdldCB0byB0aGUgY2l0eSBjZW50ZXIgKGluY2x1ZGluZyB0b2xsIHJvYWQgZmVlcywgdGF4aSB0aXAgaXMgY29tbW9ubHkgYXJvdW5kIDEwIDE1JSkuLiAKU28sIHRoZSBudW1iZXIgb2Ygd2F5cyB0byBnZXQgdGhlIHF1ZWVuIGlzIDIgQyAxIDEgb3IgMiwgYW5kIHRoZSBudW1iZXIgb2Ygd2F5cyB0byBkcmF3IHRoZSBzYW1lIHR3byBjYXJkcyBpcyAyIEMgMiAsIG9yIDEuIApTaGUgc2V0IHVwIGEgdGFibGUgaW4gdGhlIHBvc2ggcGxhemEgaG90ZWwgYW5kIHRvb2sgYWltIGF0IHRoZSBiaWcgYXBwbGUncyByZWFkeSBzdXBwbHkgb2YgcG9rZXIgZHJ1bmsgUnVzc2lhbiBiaWxsaW9uYWlyZXMgYW5kIGhlZGdlIGZ1bmQgbWFuYWdlcnMuIApUaGVpciBzdGF0dXMgaXMgaW50ZXJuYXRpb25hbGx5IHJlY29nbml6ZWQuLiAKVGhhbmsgeW91IGZvciB0aGUgdGhvdWdodGZ1bCByZXNwb25zZS4gSSBzdXBwb3NlIEkgd2FzIG1vcmUgY29uZnVzZWQgYnkgdGhlIHBhcnRpY3VsYXJzIG9mIHRoaXMgc2l0dWF0aW9uLCBhbmQgc29tZSBvZiB0aGUgY29tbWVudGVycyBleHViZXJhbnQgcmVzcG9uc2VzLgpUaGUgd2FhdGEgd291bGQgaGF2ZSB0byBlc3RpbWF0ZSB0aGUgYWdlIG9mIFZveWFnZXIgSSwgdGhlbiBmb2xsb3cgaXRzIHRyYWplY3RvcnkgYW5kIHRoZSB0cmFqZWN0b3J5IG9mIGxpa2VseSBzdGFycy4gT25jZSB0aGV5IGZpZ3VyZSBvdXQgaXQgb3V0LCB0aGV5IGJlIHNpbXVsdGFuZW91c2x5IGRpc2FwcG9pbnRlZCBhbmQgcmVsaWV2ZWQgdG8gZmluZCB0aGF0IGh1bWFuaXR5IGlzIGV4dGluY3QuIApJZiBoZSBhZ3JlZXMgb3IgcmVtYWlucyBzaWxlbnQsIGl0J3MgbmV2ZXIgd29ycmllZCBhYm91dC4gSWYgaGUgZGlzYWdyZWVzLCBzaGUgY2FuIGhhdmUgb3RoZXIgcGVvcGxlIHRlc3RpZnkgYXMgdG8gd2hlbiB0aGV5IGtuZXcgdGhlIGNvdXBsZSB3ZXJlIHNwbGl0LiAKSXQgd2FzIHRydWUgZm9yIG1lICBidXQgdGhlcmUgd2FzIGEgNTAlIGNoYW5jZSBvYnZpb3VzbHkgbG9sLiAKRWluZmFjaCBudXIgZWluIFJpZmYsIHNvbmRlcm4gYmlsZGV0IGVpbiBrb21wbGV4IGFycmFuZ2llcnRlcyB1bmQgaGVycmxpY2ggYXRtb3NwaHJpc2NoZXMgQWtrb3JkZ2VmbGVjaHQsIGRhcyBpbW1lciB3aWVkZXIgbW9kdWxpZXJ0IHdpcmQgdW5kIGRlbiBCcmVha3MgZXJzdCBkaWUgcmljaHRpZ2UgRHVyY2hzY2hsYWdza3JhZnQKSSBqdXN0IGdvaW5nIHRvIHBvc3QgbXkgcGVyc3BlY3RpdmUgaGVyZSBmcm9tIHdoZW4gdGhpcyBwYXJ0aWN1bGFyIHJ1bGUgd2FzIG1hZGUgYW5kIHNvbWUgaW5zaWdodCBpbnRvIG91ciBwcmFjdGljZS4gV2hlbiB3ZSB3ZXJlIHdvcmtpbmcgb24gdGhlc2Ugb3JpZ2luYWxseSwgdGhpcyB3YXMgYWN0dWFsbHkgYW4gYWRkIGJ5IHNvbWVvbmUgd2hvIGlzbiBvbiB0aGUgbW9kZXJhdGlvbiB0ZWFtIGFueSBsb25nZXIuIFRoZSBpZGVhIGJlaGluZCBpdCB3YXMgdGhhdCBpdCB3YXMgc29tZXRoaW5nIHdlIGZpZ3VyZWQgY291bGQgcmFpc2UgdGhlIGRpc2NvdXJzZSBhIGJpdC4gVGhpcyBydWxlIGlzbiBzYXlpbmcgeW91IGNhbiB1c2UgYSBwZXJzb24gcG9zdCBoaXN0b3J5IHRvIGluZm9ybSBpZiB5b3UgdGhpbmsgdGhleSBzaW5jZXJlIG9yIGEgZ29vZCBwZXJzb24sIG9yIGV2ZW4gaWYgeW91IHNob3VsZCB0YWtlIHRoZW0gc2VyaW91c2x5IG9yIGRvd252b3RlIG9uIHNpZ2h0LgpFZGl0OiBIb3cgaXJvbmljIHRoYXQgdmVnYW5zIHJlZmVyIHRvIGNhcm5pdm9yZXMgYXMgIk5hemlzIiB3aGVuIHRoZXkgc2hhcmUgdGhlIHNhbWUgZnVuZGFtZW50YWwgYmVsaWVmcyB0aGF0IGRyb3ZlIEhpdGxlciB0byBtYXNzYWNyZSBKZXdzIGFuZCBldmVuIGhpcyBvd24gcGVvcGxlLgoyOCBtZWV0aW5nLCBpbmNsdWRlcyAkOTg3LDg5MSB0byBjb3ZlciB0aGUgY29udmVudGlvbiBjZW50cmUncyAyMDE4IHJlcGF5bWVudCBmb3IgdGhlICQxNyBtaWxsaW9uIGxvYW47IGFuZCwgYW4gYWRkaXRpb25hbCAkMTkwLDgwMiB0b3dhcmRzIGludGVyZXN0IHBheW1lbnRzIGZvciAyMDE4IG9uIHRoZSAkMTYgbWlsbGlvbiBsb2FuLlBhcnQgb2YgdGhlIGNvbnZlbnRpb24gY2VudHJlIGV4cGFuc2lvbiB3YXMgZmluYW5jZWQgd2l0aCB0d28gbG9hbnMgdG90YWxsaW5nICQzMyBtaWxsaW9uICAgcGF5YmFjayBvbiB0aGUgJDE3IG1pbGxpb24gbG9hbiB3YXMgdG8gYmUgZ2VuZXJhdGVkIGZyb20gbmV3IHJldmVudWVzIGZvbGxvd2luZyB0aGUgZXhwYW5zaW9uOyBhbmQgdGhlICQxNiBtaWxsaW9uIGxvYW4gd2FzIHRvIGJlIHJlcGFpZCBlcXVhbGx5IGJ5IHRoZSBwcm92aW5jZSBhbmQgY2l0eSBoYWxsIGZyb20gbmV3IHRheGVzIGZyb20gYSBob3RlbCB0aGF0IHdhcyBwbGFubmVkIGZvciAyMjAgQ2FybHRvbiBTdHJlZXQuSG93ZXZlciwgYSBkZWxheSBpbiBzZWN1cmluZyBhIGhvdGVsICAgb3JpZ2luYWxseSBzZXQgZm9yIDIwMTYgYnV0IG5vdyBwbGFubmVkIHRvIG9wZW4gaW4gZWFybHkgMjAyMiAgIG1lYW50IHRoZSBjb252ZW50aW9uIGNlbnRyZSBoYWQgbm8gYWRkaXRpb25hbCByZXZlbnVlIHRvIGNvdmVyIHRoZSAkMTcgbWlsbGlvbiBsb2FuLiBUaGUgZGVsYXkgaW4gdGhlIGhvdGVsIGNvbnN0cnVjdGlvbiwgbWVhbnQgdGhlcmUgaXMgbm8gdGF4IHJldmVudWUgZm9yIGVpdGhlciBnb3Zlcm5tZW50IHRvIGNvdmVyIHRoZSAkMTYgbWlsbGlvbiBsb2FuLiAKTWlsbGVyIG9mIENCIFJpY2hhcmQgRWxsaXMgc2F5cyBKdW5lIHdhcyB0aGUgZmlyc3QgbW9udGggaW4gbW9yZSB0aGFuIGEgeWVhciB0aGF0IHNhdyBtb3JlIHRoYW4gb25lIG1pbGxpb24gc3F1YXJlIGZlZXQgb2YgbGVhc2luZyBhY3Rpdml0eSBpbiBNaWR0b3duLiBJdCBjb3VsZCBiZSBhIGRlYWQgY2F0IGJvdW5jZSBhIGZpZ3VyZSBpbmZsYXRlZCBieSBmaXJtcyB3aG9zZSBsZWFzZXMgd2VyZSB1cCBpbiB0aGUgZmFsbCBidXQgcHV0IG9mZiBtb3ZpbmcgaW4gdGhlIHRoaWNrIG9mIHRoZSBmaW5hbmNpYWwgY3Jpc2lzIGJ1dCBpdCdzIGFsc28gcG9zc2libGUgdGhlIG1hcmtldCBoYXMgZm91bmQgYSBib3R0b20sIGFuZCBpcyBzdGFiaWxpemluZywgYXMgY29tcGFuaWVzIHRha2UgdGVudGF0aXZlIHN0ZXBzIGZvcndhcmQuIApJIGhhdmUgc28gbXVjaCBtb3JlIHRvIHNheSwgYnV0IGZvciBub3csIHJhbnQgZW5kZWQuIDIgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvCklmIHdlIGFyZSBub3QgbHVja3kgYW5kIHdlIGhhdmUgbG9zdCwgd2UgY2FuIHBsYXkgd2l0aCB0aGUgaGVscCBvZiB0aGUgcmV0dXJuZWQgbW9uZXksIGFscmVhZHkgbWluaW1pemluZyB0aGUgcmlzay4gUGFydGlhbCByZXR1cm4gb2YgdGhlIGxvc2luZyBmb3IgYW4gYWN0aXZlIGdhbWJsZXIgY2FuIGJlIHJlZ2FyZGVkIGFzIGFuIGluc2lnbmlmaWNhbnQgYWR2YW50YWdlIG9mIGNhc2lub3MgaW4gZ2FtZXMuIAoiSGUgd2FzIGFuIG9wcG9ydHVuaXN0LCIgc2FpZCBMdC4gS2FyZW4gSHVnaGVzLCB3aG8gb3ZlcnNlZXMgTWV0cm8ncyB2aWNlIHNlY3Rpb24uICJUaGF0J3MgaG93IGEgbG90IG9mIHRoZW0gc3RhcnQgb2ZmICAgbG9va2luZyBmb3IgYW4gb3Bwb3J0dW5pdHkgdG8gbWFrZSBtb25leS4iClRoZSBuZWVkcyB3ZXJlIGNsZWFyLiBUaGUgbmV4dCBzdGVwIHdhcyB0byBmaWd1cmUgb3V0IHRoZSBiZXN0IHdheSB0byBzZXJ2ZSB0aG9zZSBuZWVkcy4gCiJXaGVuIHNoZSB3ZW50IGF3YXksIHNoZSB3YXMgZmlnaHRpbmcgZml0LCIgY29hY2ggQnJ1Y2UgRmFsc29uIHRlbGxzIG1lIG9uIHRoZSBwaG9uZS4gIkNlcnRhaW5seSBubyBpbmRpY2F0aW9uIHRoYXQgc2hlIGhhZCBhIGNoaWxkLiIgRmFsc29uIGhhcyBrbm93biBMYW5lIHNpbmNlIHNoZSB3YXMgMTUgYW5kIGlzIGhhdmluZyB0cm91YmxlIGFjY2VwdGluZyByZXZlbGF0aW9ucyBvZiBoZXIgZHVwbGljaXR5LiAKVGhyb3cgaW4gdGVucyBvZiBtaWxsaW9ucyBvZiBkb2xsYXJzIGluIHNwZW5kaW5nIGEgeWVhciAgICQyNi4yIG1pbGxpb24gaW4gMjAxNSBhbG9uZS4gVGhhdCBwYWlkIGZvciBoZWFsdGggYmVuZWZpdHMsICQxMTIsMDAwIHdvcnRoIG9mIEVhZ2xlcyB0aWNrZXRzLCAkMTEsODAzIGluIGhvbGlkYXkgZ2lmdHMgYm91Z2h0IGZyb20gdGhlIHVwc2NhbGUgQ29hY2ggc3RvcmUgaW4gUGhpbGFkZWxwaGlhLCBldmVuICQ4LDkyNSBpbiBzcGEgc2VydmljZXMuT24gRnJpZGF5LCBmZWRlcmFsIGxhdyBlbmZvcmNlbWVudCBvZmZpY2lhbHMgc2VhcmNoZWQgTG9jYWwgOTggaGVhZHF1YXJ0ZXJzIGFzIHdlbGwgYXMgdGhlIGhvbWUgb2YgdGhlIHVuaW9uJ3MgZHluYW1pYyBsZWFkZXIsIEpvaG4gSi4gIkpvaG5ueSBEb2MiIERvdWdoZXJ0eS5Tb3VyY2VzIHNhaWQgdGhlIGludmVzdGlnYXRpb24gaXMgYSBqb2ludCBGQkkvSVJTIHByb2JlIGludG8gYWxsZWdlZCBtaXN1c2Ugb2YgdW5pb24gZnVuZHMgYW5kIGhhcyBiZWVuIHVuZGVyd2F5IGZvciBtb3JlIHRoYW4gdHdvIHllYXJzLiAKQXMgZmFyIGFzIHRoZSBnZW5lcmFscyBhcmUgY29uY2VybmVkLCB0aGV5IGFyZSB0cnVseSBwYXRyaW90aWMgb25seSBhcyBsb25nIGFzIHRoZXkgYXJlIGF0IHRoZSBib3JkZXJzLCBpbiB0aGVpciB1bml0cyBhbmQgaW4gdGhlaXIgZ2Fycmlzb25zLiBPbmNlIHRoZXkgZ2V0IGEgdGFzdGUgb2YgbHV4dXJpb3VzIElzbGFtYWJhZCBsaXZpbmcsIHRoZXkgY2hhbmdlIGxpa2UgY2hhbWVsZW9ucy4gCkRvbiBsZXQgeW91ciBtb20gdGFrZSBpdCBmcm9tIHlhIS4gClRoZSBGbG9wQmVmb3JlIHJvdW5kIG9uZSB0aGUgdHdvIHBsYXllcnMgdG8gdGhlIGxlZnQgb2YgdGhlIGJ1dHRvbiBwbGFjZSBmb3JjZWQgd2FnZXJzICdibGluZHMnIGluIG9yZGVyIHRvIHN0YXJ0IHRoZSBwb3QsIHdpdGggdGhlIHBsYXllcnMgaW1tZWRpYXRlbHkgbGVmdCBvZiB0aGUgYnV0dG9uIHBvc3RpbmcgYSBzbWFsbCBibGluZDsgYSBiZXQgZXF1YWwgdG8gaGFsZiB0aGUgdmFsdWUgb2YgdGhlIHRhYmxlcyBsb3dlciBzdGFrZSBsaW1pdDsgd2hpbGUgdGhlIHBsYXllciB0byB0aGUgbGVmdCBvZiB0aGUgc21hbGwgYmxpbmQgcGxhY2VzIGEgYmlnIGJsaW5kIHdhZ2VyOyBlcXVhbCB0byB0aGUgZnVsbCB2YWx1ZSBvZiB0aGUgdGFibGVzIGxvd2VyIHN0YWtlLiAKNSBtZyBwZXJjb2NldCB2YWx1ZSBIZWF2eSB3YXRlcnkgYmxvb2RzaG90IGV5ZXMgaGVhZGFjaGUgLiBOb3cgSSBsaXZlIGluIFBBIGFuZEFkbWluIDI1IHZpZXdzIExlYXZlIGEgY29tbWVudDI5IE1hciAyMDEyLiAwNDo0NDoyOSBwbS4KSXQgZG9lc24gZmVlbCBncmVhdCB0byBiZSBpbiB0aGlzIGNsdWIgYnkgbXlzZWxmLiAKRGVzcGl0ZSB0aGUgZmFjdCB0aGF0IHdlIGRpZCBldmVyeXRoaW5nIHdlIHdlcmUgdG9sZC4gCkl0IG5vdCBhIG5ldyBkaXNjb3ZlcnkgYnV0IGl0IHN0aWxsIHZlcnkgZnJlc2ggdG8gdGhlIG1haW5zdHJlYW0uIApEZW50YWwgcGF0aG9sb2d5IGlzIGNoZWFwLiBUaGUgZGVudGlzdCBpcyBkb2luZyBpdCB0byBsb29rIG91dCBmb3IgeW91ciBiZXN0IGludGVyZXN0LiAKR2VyYWRlIHdlbm4gbWFuIGtlaW5lbiBQYXJ0bmVyIGhhdCwgZGVyIGF1ZnBhc3N0IHVuZCBTdGVja2VyIHppZWh0IGlzdCBkYXMgZWluZSBob2Nocmlza2FudGUgU2FjaGUuLiAKSnVzdCB5b3UgY2FuIGJ1eSBjaGlwcyBhbmQgYWZ0ZXJ3aW4gY2Fubm90IHNlbGwgb3V0IGl0LiAKV2Ugd2VudCB0aHJvdWdoIGEgbG90IG9mIHRoZSBzYW1lIHN0cnVnZ2xlcyBpbiBvdXIgZWR1Y2F0aW9uLi4gCkkgdHJpZWQgdG8gZ2l2ZSBhIGdvb2QgUUNJIHJ1bmRvd24gaW4gdGVybXMgb2YgbmV0d29yaywgYnV0IEkgcmVhbGl6ZWQgdGhhdCBkb2luZyBhIHJlYWxseSBnb29kIGpvYiBtaWdodCBydW4gYWZvdWwgb2YgTkRBcy4gQmFzaWNhbGx5LCBRQ0kgMSBpcyAidm9pY2UiIGluIGV4YW1wbGUgdGVybXMuIApXaGF0IHdlIGp1c3QgZXhwZXJpZW5jZWQgd2FzIGEgb25jZSBpbiBhIGxpZmV0aW1lIG1lbHRkb3duLiAKVmFuY291dmVyJ3MgY29uY2VudHJhdGlvbiBvZiBsb3cgaW5jb21lIGhvdXNpbmcgaW4gdGhlIERvd250b3duIEVhc3RzaWRlIHR1cm5zIG1hbnkgbWVudGFsbHkgaWxsIHBlb3BsZSBpbnRvIGRydWcgYWRkaWN0cywgTmF6aWYgc2F5cy4gIlRoZSBsb3cgY29zdCBob3VzaW5nIHRoYXQgbWVudGFsbHkgaWxsIHBhdGllbnRzIHdobyBhcmUgb24gZGlzYWJpbGl0eSBjYW4gYWZmb3JkIGhhcHBlbnMgdG8gYmUgbmVhciBhbGwgdGhlIGRydWdzLCIgQXppZiBzYXlzLgpDZXJ0ZXMsIGxhIGJlcmNlIGR1IENhdWNhc2UgZXN0IGxvaW4gZCBhdXNzaSBwZXUgcmljaGUgZW4gZnVyb2NvdW1hcmluZXMsIHBhcmFpdCBpbCwgcXVlIGxhIGJlcmNlIGNvbW11bmU6IGVsbGUgcGFydmllbnQgIGluZmxpZ2VyIGRlIHZpbGFpbmVzIGJybHVyZXMgbG9yc3F1IHNhIHN2ZSBzIGxlcyByYXlvbnMgZHUgc29sZWlsLi4gCkkgYWxzbyBub3QgYSBoYWlyIGV4cGVydCBzbyBJIGJhc2ljYWxseSB0b2xkIG15IGJhcmJlciB3aGF0IEkgZ2VuZXJhbGx5IHdhbnRlZCAoc2hvcnRlciBzaWRlcywgbG9uZ2VyIHRvcCkgYW5kIGxldCBoaW0gZG8gd2hhdCBoZSB0aG91Z2h0IHdhcyBiZXN0LiBUaGF0IGFib3V0IG15IGV4dGVudCBvZiBmYWNlIGltcHJvdmVtZW50IGtub3dsZWRnZS4uIApJbiBJbmRpYSBhbHNvIGl0IHdhcyBib29taW5nLiAKVGhlbiBjb21wb3VuZCB0aGF0IHdpdGggc3RhdW5jaCBjb25zZXJ2YXRpdmUgdmFsdWVzLCBjb21wb3VuZCBmdXJ0aGVyIGJ5IHJlbGlnaW91cyBmYWl0aCBhbmQgdGhlbiBmdXJ0aGVyIGNvbXBvdW5kIGFnYWluIHdpdGggd2FudGluZyB0byBmaWdodCBiYWNrIGFnYWluc3QgInRoZSBsZWZ0IiBhbmQgeW91IGhhdmUgdGhhdCByZWNpcGUgZm9yIHN1cHBvcnQuIAogVGhlIFNvdXRoIFZpZXRuYW1lc2UgaW5mYW4gIGFsbGllZCAgJ2FydGlsbGVyeSIgYW5kIGFpciAnc3RyaWtlcyBraWxsZWQgaGFsZiBvZiEgdGhlIDQwMCBtYW4gZW5lbXkgYmF0dGFsaW9uLiAKU28gSSBzdGFydGVkIHRlbGxpbmcgaGUgY2FuIHRhbGsgdG8gbWUgYWZ0ZXIgY2xhc3MsIGR1cmluZyByZWNlc3MsIGV0Yy4gCkRyLiBMYXBwaW4gd2UgbWVudGlvbmVkIGVhcmxpZXIsIGhlIGlzIG5vdCBhIG5vYm9keS4gSGUgd2FzIGEgYm9hcmQgbWVtYmVyIG9mIHRoZSBHb2xkZW4gUmV0cmlldmVyIEZvdW5kYXRpb24sIGEgbm9uIHByb2ZpdCB0aGF0IHdhcyBjcmVhdGVkIGZyb20gdGhlIEdvbGRlbiBSZXRyaWV2ZXIgQ2x1YiBvZiBBbWVyaWNhLgpBbW9uZyB0aGUgY291bnRyaWVzIG9mIHRoZSByZWdpb24sIHRoZSBVbml0ZWQgS2luZ2RvbSBlbmRlZCB0aGUgbW9udGggd2l0aCB0aGUgbGFyZ2VzdCBudW1iZXIgb2Ygcm9vbXMgaW4gdGhlIHRvdGFsIGFjdGl2ZSBwaXBlbGluZSB3aXRoIDI2LDE1NSByb29tcywgZm9sbG93ZWQgYnkgR2VybWFueSAoMTcsMDkyIHJvb21zKSBhbmQgUnVzc2lhICgxNSw4MTYgcm9vbXMpLiBBbHNvIHJlcG9ydGVkIHRoZSBtb3N0IHJvb21zIGluIHRoZSBJbiBDb25zdHJ1Y3Rpb24gcGhhc2Ugd2l0aCAxMSw2Mjcgcm9vbXMuIApJIGhhdmUgY29saXRpcywgY2VsaWFjLCBhbmQgbGlrZWx5IGVuZG9tZXRyaW9zaXMgKGhhdmUgeWV0IHRvIGhhdmUgY29uZmlybWF0aW9uIHRocm91Z2ggbGFwYXJvc2NvcHkpIGFuZCBwcmVzc3VyZSBvbiBteSBhYmRvbWluYWxzIGZyb20gdGhlIGZhYnJpYyBkb2VzIG5vdCBmZWVsIG5pY2UuIEkgc3RhcnRlZCB3b3JraW5nIG91dCBhdCBob21lIHdlYXJpbmcgYWxtb3N0IG5vIGNsb3RoaW5nLCBzbyBJIGZpbmQgdGhhdCB0b28gdGlnaHQgdG9vIG11Y2ggZmFicmljIHJlYWxseSBkb2VzIGRpc3J1cHQgbXkgZm9ybSBhbmQgY29tZm9ydC4gVGhlIGxlYXN0IGltcG9ydGFudCB0aGluZyBpcyB0aGF0IEkgYWxzbyBmZWVsIGxlc3MgYXR0cmFjdGl2ZSB3ZWFyaW5nIHRoZXNlIGxlZ2dpbmdzLCBJIGRvbiBmaW5kIHRoZXkgYXJlIGZsYXR0ZXJpbmcgb24gbWUuIApQcm9maXRhbnQgZGUgcXVlbHF1ZXMgam91cnMgZGUgImNsaWJhdCIsIGF1IGxpZXUgZGUgdmFxdWVyICBxdWVscXVlcyBhY3Rpdml0cyBwYXJpc2llbm5lcywgaidhaSBldSBsJ2lkZSBkZSBwYXJ0aXIgZGV1eCB0cm9pcyBqb3VycyBlbiB0aGFsYXNzby4gCg==|<---