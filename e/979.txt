--->|U29sbyBtZWFucyBpdCdzIGFsbCB1cCB0byB5b3VyIHNraWxsIGFsb25lIHdoaWNoIEkgdGhpbmsgd2lsbCBiZSBncmVhdCBmb3IgdGhpcyBnYW1lLiAKSSBzdXJlIHRoZSBOZXcgUmVwdWJsaWMgbWFkZSBzb21lIHNvcnQgb2YgbWVtb3JpYWwgZm9yIGFsbCB0aGUgZmFsbGVuIGhlcm9lcyBpbiB0aGUgd2FyIGFuZCBzb21lIG1lbW9yaWFscyBtYXkgZXZlbiBiZSBmb2N1c2VkIG9uIHRoZSBiaWdnZXIgaGVyb2VzIGxpa2UgUm9ndWUgT25lLCBidXQgZXhwZWN0aW5nIFJvZ3VlIE9uZSBkZWRpY2F0aW9ucy9tZW1vcmlhbHMgZXZlcnl3aGVyZSBpcyBhIGJpdCBtdWNoLiAKQ2hpbGRyZW4gbmVlZCB0byBoYXZlIGJvbmRzIHdpdGggZWFjaCBwYXJlbnQgYnV0IHRoZXkgYWxzbyBuZWVkIHRvIGRldmVsb3AgcmVsYXRpb25zaGlwcyB3aXRoIHRoZWlyIHBlZXJzLiAKVGhpcyBpbnN0YW50IGFyY2hpdmUgZmVhdHVyZSBpcyBtb3N0IHVzZWZ1bCBpbiBwcmV2ZW50aW5nIGNvbGx1c2lvbjogdHdvIG9yIG1vcmUgc3R1ZGVudHMgaGFuZGluZyBpbiBwYXBlcnMgd2l0aCBhbnkgYXBwcmVjaWFibGUgb3ZlcmxhcCB3b3VsZCBiZSBmbGFnZ2VkLiBNb3JlIGJyb2FkbHksIGl0IGNvbnRyaWJ1dGVzIHRvIHRoZSB2YXN0IHNjYWxlIG9mIFR1cm5pdGluJ3MgcmVzb3VyY2VzLi4gCkkgbGlrZSBwbGF5aW5nIHBva2VyLiBXaGVuIHlvdSBhcmUgcGxheWluZyBvbmxpbmUgcG9rZXIsIHlvdSB3aWxsIGdlbmVyYWxseSBub3RpY2Ugc2V2ZXJhbCBkaWZmZXJlbnQgdHlwZXMgb2YgcG9rZXIgcGxheWVycy4gCkJpbGFuIDogZGVzIHBlcnNvbm5hbGl0cyByaWNoZXMsIHVuIHZuZW1lbnQgcXVpIGRvbm5lIHVuZSBiZWxsZSB2aXNpb24gZGUgbGEgZ2FzdHJvbm9taWUgc291cyB1biBjZXJ0YWluIGFuZ2xlIHZhbG9yaXNhbnQgbGEgY3JhdGl2aXQuIE1haXMgY2Ugbidlc3QgcGFzIHRvdXRlIGxhIGdhc3Ryb25vbWllICEKMyBzdHJvbmdob2xkcyBpcyBhIGpva2UuIApUaGluayBhYm91dCB0aGUgcmF0aW8gb2YgeW91ciByZXF1aXJlZCBiZXQgdG8gc3RheSBpbiB2ZXJzdXMgdGhlIG1vbmV5IGluIHRoZSBwb3QuIApJZiBtb3N0IHBlb3BsZSBhcmUgdGlnaHQgKG9mdGVuIHNhaWQgYXMgInRoZSB0YWJsZSBpcyB0aWdodCIpIGl0IGlzIGJldHRlciB0byBiZSBsb29zZXIgYW5kIHZpY2UgdmVyc2EuIApJbiAxOTI1LCBQcmVzaWRlbnQgQ2FsdmluIENvb2xpZGdlIHByb2NsYWltZWQgRmlyZSBQcmV2ZW50aW9uIFdlZWsgYSBuYXRpb25hbCBvYnNlcnZhbmNlLCBtYWtpbmcgaXQgdGhlIGxvbmdlc3QgcnVubmluZyBwdWJsaWMgaGVhbHRoIG9ic2VydmFuY2UgaW4gdGhlIGNvdW50cnkuIEEgMjAxMyBncmFkdWF0ZSBvZiBDb2xvcmFkbyBUZWNobmljYWwgVW5pdmVyc2l0eSwgQ29keSBlYXJuZWQgaGVyIGJhY2hlbG9yJ3MgZGVncmVlIGluIGNyaW1pbmFsIGp1c3RpY2Ugd2l0aCBhIG1pbm9yIGluIHBhcmFsZWdhbCBzdHVkaWVzLiBUaHJvdWdoIHRoZSBjb3Vyc2Ugb2YgaGVyIGFjYWRlbWljIHN0dWRpZXMgc2hlIGRpc2NvdmVyZWQgdGhhdCB3cml0aW5nIGlzIGhlciB0cnVlIHBhc3Npb24sIGFuZCBzaGUgaXMgY29tbWl0dGVkIHRvIHByb3ZpZGluZyBjcmVkaWJsZSwgaW50ZWdyYXRlZCBuZXdzIGNvdmVyYWdlLiBDb2R5IGpvaW5lZCBTdC4gR2VvcmdlIE5ld3MgaW4gMjAxNSwgYW5kIHdoZW4gc2hlJ3Mgbm90IGJ1c3kgY2hhc2luZyB0aGUgbmV3cywgc2hlIGNhbiBnZW5lcmFsbHkgYmUgZm91bmQgY2hhc2luZyBoZXIgeW91bmcgZ3JhbmRkYXVnaHRlciwgS2FsaS4KVWJpc29mdCBzdGF0ZWQgdGhleSBkaWRuIHdhbnQgcGVvcGxlIHRvIEhBVkUgdG8gYnV5IHN0dWZmIHRvIDEwMCUgdGhlIGdhbWUsIGJ1dCBiZWluZyBzdHVjayB3aXRoIHRoZSB0aHJlZSBzdGFydGVyIHdlYXBvbnMgYW5kIG1pc3Npbmcgb3V0IG9uIHNvbWUgb2YgdGhlIGZhbmNpZXIgd2VhcG9ucyBhbmQgZWxlbWVudGFsIGNvbWJvcyBkaWQgaGFtcGVyIG15IGdhbWVwbGF5IGVuam95bWVudC4gVGhvdWdoLCAkMzAgZnJvbSBBbWF6b24gdGhlIGxhc3QgdGltZSBpdCBoaXQgdGhpcyBsb3cgdnMgJDYwKyBmb3IgdGhlIGRpZ2l0YWwgZGVsdXhlIHdpdGggYWxsIHVubG9ja3MgYXQgbGVhc3QgbGV0cyBpdCBmZWVsIGxpa2UgSSBnb3QgbXkgbW9uZXkgd29ydGguLiAKVGhlIHByaWNlIGlzIGEgc2V0IDIsMjUwIHBlciBnaXJsL3dvbWFuLCBhbGwgaW5jbHVzaXZlLiBBcyBFZGVuIG9wZXJhdGVzIGEgcG9saWN5IG9mIHRha2luZyBhIG1pbmltdW0gb2YgdHdvLCB0aGlzIGJ1bXBzIHRoZSBwcmljZSBwZXIgc2Vzc2lvbiB1cCB0byA0LDUwMCBiYWh0LiAKUGxhY2UgdGhlIHBhbiBpbiB0aGUgb3ZlbiBhbmQgY2FyZWZ1bGx5IHBvdXIgZW5vdWdoIGhvdCB3YXRlciBmcm9tIHRoZSBrZXR0bGUgYXJvdW5kIHRoZSByYW1la2lucyB0byBjb21lIGhhbGZ3YXkgdXAgdGhlIHNpZGVzLCBiZWluZyBjYXJlZnVsIG5vdCB0byBnZXQgYW55IHdhdGVyIGluIHRoZSBjdXN0YXJkcy4gCkNoYXNpbiBhbHNvIGhhcyBiZWVuIGNoYXJnZWQgd2l0aCBwb3NzZXNzaW9uIG9mIGNvY2FpbmUsIHBvc3Nlc3Npb24gb2Ygb3h5Y29kb25lLCBwb3NzZXNzaW9uIG9mIGFscHJhem9sYW0gYW5kIHBvc3Nlc3Npb24gb2YgZHJ1ZyBwYXJhcGhlcm5hbGlhLiBTaGUgZmFjZXMgZm91ciBjb3VudHMgb2YgYWdncmF2YXRlZCBjaGlsZCBhYnVzZSBhbmQgZm91ciBjb3VudHMgb2YgZm9yY2VkIGxhYm9yIG9yIHNlcnZpY2VzIGJ5IGh1bWFuIHRyYWZmaWNraW5nLiAKSXQgaXMgdGhlIHN0cmVzcyB0aGF0IGJlY29tZXMgYSB0aGljayBzbHVkZ3kgb2lsIHRoYXQgYm9ncyB0aGUgcGVyc29uIGRvd24uIE11c2NsZXMgYWNoZSwgam9pbnRzIGFyZSByZXN0cmljdGVkLCBhbmQgZW5lcmd5IGlzIGRlcGxldGVkLiAKRHVoYW1lbCwgMjQsIGVhcm5lZCAkOC45IG1pbGxpb24gVVMgYWZ0ZXIgd2lubmluZyB0aGUgY292ZXRlZCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgY2hhbXBpb25zaGlwIGluIDIwMTAuCkZhY2UgUHV0aW4gaG9sZHMgYWxsdGhlIGNhcmRzClN0dSB3YXMgYWxzbyBhIHBhc3Npb25hdGUgYW5kIHRhbGVudGVkIGNvb2sgYW5kIHdvcmtlZCBhcyBhIHByaXZhdGUgY2hlZiBmb3Igc2V2ZXJhbCBmb3J0dW5hdGUgZmFtaWxpZXMgaW4gdGhlIEFzcGVuIGFyZWEuIApUYW5reWRlZSB1CkJ1dCBJIHdhcyBzdGFydGluZyB0byB3aW4gc29tZSBtb25leSBwbGF5aW5nIG9ubGluZSBhbmQgc28gSSB3YXMgYWJsZSB0byBjb3ZlciBteSB0cmFja3MgYnkgc2F5aW5nIEkgaGFkIGEgam9iIHN0YWNraW5nIHNoZWx2ZXMgaW4gYSBzdXBlcm1hcmtldC4gCldoYXRldmVyIGhhcHBlbnMsIHdlIGFsd2F5cyBzYXksIGl0IHRoZXJlLiAKVGhpcyBzbWFsbCB0aGluZyBjYW4gbWFrZSB5b3Ugc28gbXVjaCBtb3JlIHN0YWJsZSBhbmQgc3Ryb25nZXIhLiAKSG9tZW9wYXRoaWMgcmVtZWRpZXMgYXJlIHByZXBhcmVkIGJ5IHN1Y2Nlc3NpdmUgZGlsdXRpb25zIGFuZCBhZ2l0YXRpb24gb2YgdGhlIG9yaWdpbmFsIHN1YnN0YW5jZSB1bnRpbCB0aGVyZSBpcyBsaXR0bGUsIGlmIGFueSwgcGh5c2ljYWwgdHJhY2UgbGVmdC4gQmVjYXVzZSB0aGUgYWN0aXZlIGluZ3JlZGllbnRzIGluIGNvbW1vbiBwb3RlbmNpZXMgb2YgaG9tZW9wYXRoaWMgcmVtZWRpZXMgb2NjdXIgaW4gc3VjaCBtaW51dGUgYW1vdW50cywgcGh5c2ljYWwgc2lkZSBlZmZlY3RzIGFyZSBub3QgYW4gaXNzdWUsIG1ha2luZyBob21lb3BhdGhpYyByZW1lZGllcyBhIHNhZmUsIG5hdHVyYWwgd2F5IHRvIHRyZWF0IG1pbm9yIGluanVyaWVzIGFuZCBpbGxuZXNzZXMgYXQgaG9tZS4gCkF0IEpvaG4gV2lsc29uJ3Mgc21va2UgaG91c2Ugd2FzIGJsb3duIHR3ZW50eSBmZWV0LiAKUm9sbGVyIGhhcyBpbmNvcnBvcmF0ZWQgdGhlIGJ1c2luZXNzIGFuZCB1c2VkIHRoZSBmdW5kcyBhcyBwbGFubmVkLiAKTGlzdGUgZGVzIHByaW5jaXBhbGVzIGh1aWxlcyBlc3NlbnRpZWxsZXMgIG1vbm90ZXJwbmVzIDogYmVyZ2Ftb3RlICg1NSAlKSwgY2lzdGUgbGFkYW5pZnJlICg0NyAlKSwgY2l0cm9uICg5MSAlKSwgY3lwcnMgdG91am91cnMgdmVydCAoOTIgJSksIGVuY2VucyAoNzggJSksIHBpbmV0dGUgbm9pcmUgKDQ3ICUpLCBnZW52cmllciBjb21tdW4gKDgzICUpLCBsZG9uIGR1IEdyb2VubGFuZCAoMzUgJSksIG1hbmRhcmluZSByb3VnZSAoOTggJSksIG15cnRlIHZlcnQgKDU4ICUpLCBvcmFuZ2UgZG91Y2UgKDk3ICUpLCBwYW1wbGVtb3Vzc2UgKDk0ICUpLCBwaW4gc3lsdmVzdHJlICg5MiAlKSwgcG9pdnJlIG5vaXIgKDU3ICUpLCByb21hcmluIG9mZmljaW5hbCAgY2FtcGhyZSAoMzMgJSksIHJvbWFyaW4gb2ZmaWNpbmFsICB2ZXJibm9uZSAoNDkgJSkuCkhlIGJlZ2FuIHdvcmsgb24gdGhlIGJvb2sgdGhlIHZlcnkgbmV4dCBtb3JuaW5nLCBhbmQgZmx1bmcgaGltc2VsZiBpbnRvIGl0IGhlYXJ0IGFuZCBzb3VsLiBBcyBmb3IgQ2FwdGFpbiBKaW0sIGhlIHdhcyBhIGhhcHB5IG1hbiB0aGF0IHN1bW1lci4gSGUgbG9va2VkIHVwb24gdGhlIGxpdHRsZSByb29tIHdoZXJlIE93ZW4gd29ya2VkIGFzIGEgc2FjcmVkIHNocmluZS4gCkkgaGFkIGxpa2UgNSBiYWdzIG9mIG15IG93biBhbmQgdGhlbiBJIHRvb2sgNSBvZiBoaXMgYXMgd2VsbCBhbmQgd2Ugd2VudCB0byBoaXMgaG9tZS4gClRoZXkgdG9sZCBtZSB0byBoaXQgdGhlIHJvYWQgYW5kIEkgYnJva2UgbXkgaGFuZC4gTHVrZSBSb215bgpJZiB5b3UncmUgc3R5bGluZyBmb3IganVkZ2UgcG9pbnRzIHRoZW4gSSByZWFsbHkgY2FuJ3Qgc2F5IEkgd2FudCB0byBzZWUgdGhhdC4gClVzdWFsbHksIHdlIGtub3cgb3VyIGRvZyBpcyBmZWVsaW5nIGdvb2Qgd2hlbiBzaGUgY2hvd3MgZG93biBvbiBoZXIgZm9vZC4gSXQncyBub3QgdW5oZWFyZCBvZiwgdGhvdWdoLCBmb3IgaGVyIHRvIHNraXAgYSBtZWFsIG9yIHR3bywgZXNwZWNpYWxseSBpZiBpdCdzIGhvdCBvdXRzaWRlLiBBbnkgbW9yZSB0aGFuIHRoYXQgaXMgc29tZXRoaW5nIHRvIGJlIGNvbmNlcm5lZCBhYm91dC4gClRoZW4gcGF1c2UgdGhlcmUuIFlvdSB3aWxsIG5vdCBoYXZlIHRoZSBjaGFuY2UgdG8gcmVsYXggYW5kIHJlc2V0IGFuZCB3aWxsIGhhdmUgdG8gbWFpbnRhaW4gdGlnaHRuZXNzIHRoZSBlbnRpcmUgcGF1c2UuLiAKUjFjSzNUeV9DcjFjSzNUICA5IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpQYXJlbnRzIHdlcmUgcGlzc2VkIGJlY2F1c2UgdGhlc2UgdGhyZWUgY295b3RlcyB3b3VsZCBqdXN0IGZvbGxvdyBteSBkdW1iYXNzIGFyb3VuZCBhbmQgSSBwcmV0dHkgc3VyZSB0aGV5IGFyZSB0aGUgcmVhc29uIHBlb3BsZSBoYXZlIGxvc3Qgc21hbGwgZG9ncy4gQnV0IGluIG15IGRlZmVuc2UgSSB3YXMgb25seSAyNCwgaG93IHdhcyBJIHN1cHBvc2VkIHRvIGtub3cgYmV0dGVyPy4gClByZWRlY2Vhc2VkIGJ5IGhpcyBwYXJlbnRzLCBKaW0gYW5kIEFsbWEgUHJldHNlbGwgYW5kIE1hcmdhcmV0IFBpdmEgYW5kIG1hbnkgc3BlY2lhbCBhdW50cyBhbmQgdW5jbGVzLiAKU3Ryb250aXVtIGFuZCBjZXNpdW0gbGVhY2hlZCBvciBkaXNzb2x2ZWQgZnJvbSBzaW11bGF0ZWQgZmFsbG91dCBiZWhhdmVkIGluIHRoZSBzYW1lIHdheSwgbWV0YWJvbGljYWxseSwgYWZ0ZXIgYWJzb3JwdGlvbiBhcyB0aGV5IGRpZCB3aGVuIHRoZSB0cmFjZXIgd2FzIHN3YWxsb3dlZCBpbiBhIHNvbHV0aW9uIG9yIGluamVjdGVkIGludHJhdmVub3VzbHkuIApUaGVuLCB0aGUgeW9nYSBtb3ZlcyBpbnRvIG1vcmUgcmVzdG9yYXRpdmUsIHNsb3dlciBwb3N0dXJlcywgd2hpbGUgdGhlIGRpZmZlcmVudCBwcmFjdGl0aW9uZXJzIHdvcmsgdGhlaXIgd2F5IGFyb3VuZCB0aGUgY2xhc3Nyb29tLCBwcm92aWRpbmcgYnJpZWYsIHBlcnNvbmFsaXplZCB0cmVhdG1lbnRzIGRlc2lnbmVkIHRvIGVuaGFuY2UgdGhlIHByYWN0aWNlIGFuZCBzcGFyayBoZWFsaW5nIGFuZCBiYWxhbmNpbmcuLiAKUm9ubmllIGRvZXNuIG5lZWQgYSBqb2IuUHJldHR5IG11Y2ggYWdyZWUgd2l0aCB0aGlzIG9uZSBteSBtb3RoZXIgdXNlZCB0byB3b3JrIGZvciBLcmFmdCBhbmQgdGhleSB1c2VkIHRvIGZ1Y2sgdGhlIGhvdXJseSB3b3JrZXJzIGNvbnN0YW50bHkuIFRoZXkgdXNlZCB0byB0cmVhdCBob3VybHkgd29ya2VycyBsaWtlIHNoaXQuIApJIG5vdCBhIGRlc2lnbmVyIG15c2VsZiBidXQgSSBzcGVudCB0aGUgbGFzdCBmaXZlIHllYXJzIHJ1bm5pbmcgYSBjb21tdW5pY2F0aW9ucyBhbmQgZGVzaWduIGFnZW5jeSBmb3Igbm9uIHByb2ZpdHMuIEJyYW5kaW5nIGhhcyBiZWVuIGEgYmlnIHBhcnQgb2YgdGhhdC4KWWFsZSB3ZWJwYWdlIGRvZXNuIG9mZmVyIGFueXRoaW5nIGJldHRlciB0aGFuIHdpa2lwZWRpYS4gCkkgaW1pdGF0ZSB0aGUgc3R5bGUgb2YgdGhvc2UgcHJvZmVzc2lvbmFscy4gClRhYmxlIHRvcHMgY2FuIGNvc3QgYXMgbGl0dGxlIGFzIDUwIGJ1Y2tzLiAKVGhlIDUyIHllYXIgb2xkIHJlY29yZGluZyBhcnRpc3QgaGFzIGJlZW4gdHJhaWxlZCBmb3IgZGVjYWRlcyBieSBhbGxlZ2F0aW9ucyB0aGF0IGhlIHZpb2xhdGVkIHVuZGVyYWdlIGdpcmxzIGFuZCB3b21lbiBhbmQgaGVsZCBzb21lIGFzIHZpcnR1YWwgc2xhdmVzLiBLZWxseSBoYXMgY29uc2lzdGVudGx5IGRlbmllZCBhbnkgc2V4dWFsIG1pc2NvbmR1Y3QgYW5kIHdhcyBhY3F1aXR0ZWQgb2YgY2hpbGQgcG9ybm9ncmFwaHkgY2hhcmdlcyBpbiAyMDA4LiBUaG9zZSBjaGFyZ2VzIGNlbnRyZWQgb24gYSBncmFwaGljIHZpZGVvIHRoYXQgcHJvc2VjdXRvcnMgc2FpZCBzaG93ZWQgaGltIGhhdmluZyBzZXggd2l0aCBhIGdpcmwgYXMgeW91bmcgYXMgMTMuLiAKQnV0IGFsbCB0aGVzZSBsYXdzIGFuZCBwcmVjYXV0aW9ucyBhcmUgdG8gcHJvdGVjdCBsaWFiaWxpdHkgZnJvbSBvbmUgYW5vdGhlci5QbGVhc2Ugd2Fsay9kcml2ZSB5b3VyIGtpZCB0byBzY2hvb2wsIGxpYWJpbGl0eSBvbiB0aGUgcGFyZW50LkhhdmUgdGhlIGtpZHMgc3RheSBpbiBzY2hvb2wgZHVyaW5nIHNjaG9vbCBkYXksIGxpYWJpbGl0eSBvbiBzY2hvb2wuV2hlbiBzb21ldGhpbmcgaGFwcGVucyBpdCBhIGZpbmFuY2lhbCBsaWFiaWxpdHkgbm90IGZvciBwZXJzb25hbCBzYWZldHkuIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdvQmxhY2toYXJ0IGNvbnN0cnVjdGlvbiBzZWVtZWQgcmVhbGx5IHByb2Zlc3Npb25hbCB3aGVuIHRoZXkgcHJvdmlkZWQgYSBxdW90ZSBhbmQgaGF2ZSBuaWNlIHdvcmsuIApJdCBpcyBpbmNyZWRpYmx5IGVtcG93ZXJpbmcuIEkgYWxzbyBuZXZlciBiZWVuIGdyZWF0IGF0IGFueSBzcG9ydHMsIHNvIGl0IGNvb2wgdG8gYmUgYWJsZSB0byBjb21wZXRlLiBUaGVyZSBhcmUgYSB0b24gb2YgZ29vZCByZXNvdXJjZXMgb3V0IHRoZXJlIHRvIGxlYXJuIGFib3V0IHByb3BlciBmb3JtLCBwcm9ncmFtaW5nLCBhbmQgY29tcGV0aW5nIGlmIHlvdSBldmVyIHdhbnQgdG8gZG8gdGhhdC4gClRoZXNlIGR5bmFtaWMgZXhlcmNpc2VzIHdoaWNoIHJlY3J1aXQgYW5kIGNvYWN0aXZhdGUgYm90aCBkZWVwIGFuZCBnbG9iYWwgbXVzY2xlcyB3aWxsIGhhdmUgY29uc2lkZXJhYmx5IG1vcmUgY2Fycnkgb3ZlciBlZmZlY3QgdG8gdGhlIHJlYWwgd29ybGQgYWN0aXZpdGllcyBhbmQgaW1wcm92ZSBzYWZldHkgYW5kIGZ1bmN0aW9uIG9mIHRoZSBkeW5hbWljIGFjdGl2aXRpZXMgcGF0aWVudHMgZW5nYWdlIGluIGluIHRoZSByZWFsIHdvcmxkLgpBbmQgbm8gQWNBbyBpcyBhIGZpbmUgYmx1ZmYgY2F0Y2hlciBvbiB0aGUgcml2ZXIuIApRLiBZb3UndmUgcmVjZW50bHkgc3RhcnRlZCBhIGZ1bmRyYWlzaW5nIGNhbXBhaWduLiBXaGF0J3MgdGhlIHJlYXNvbiBmb3IgdGhhdD8gUmVhZCBtb3JlIFtlbnRyeWJvZHldICA+CiJUaGV5IHdpbGwgYWR2ZXJ0aXNlIGFzIG1hc3NhZ2UgcGFybG9ycywgYnV0IHNvbWUgb2YgdGhlIHByb3N0aXR1dGlvbiBob3VzZXMgYXJlIGNhbGxlZCBoZWFsdGggY2xpbmljcywiIGhlIHNhaWQuClllbGxvdyBDaGVja2VyIFN0YXIgQ2FiIENvbXBhbnkgQ0VPIEJpbGwgU2hyYW5rbyBjb25maXJtZWQgRnJpZGF5IHRoYXQgR2VyYXJkbyBHYW1ib2EgaGFkIGJlZW4gcGFpZCBieSB0aGUgcG9rZXIgcGxheWVyLiBUaGUgY2FiIGNvbXBhbnkgYWxzbyBob25vcmVkIHRoZSBkcml2ZXIncyBnb29kIGRlZWQgYnkgbmFtaW5nIGhpbSBlbXBsb3llZSBvZiB0aGUgeWVhciwgYXdhcmRpbmcgaGltICQxLDAwMCBhbmQgZ2l2aW5nIGhpbSBhIGdpZnQgY2VydGlmaWNhdGUgdG8gYSBMYXMgVmVnYXMgc3RlYWtob3VzZS4KTWVza2kgY2FyYSB1dGFtYSBtZW5kYXBhdGthbiBjaXAgbGViaWggYmFueWFrIGFkYWxhaCBkZW5nYW4gbWVtZW5hbmdrYW5ueWEgZGFyaSBwZW1haW4gbGFpbiwgc2VzdW5nZ3VobnlhIGFkYSBiZXJiYWdhaSBjYXJhIHVudHVrIG1lbGFrdWthbiBoYWwgaW5pLiBEaSBzaXNpIGtpcmkgbGF5YXIgbG9iaSwgQW5kYSBiaXNhIGJlcnBhcnRpc2lwYXNpIGRhbGFtIHBlcm1haW5hbiBtZXNpbiBzbG90LCB5YW5nIGJpc2EgbWVuZ2hhZGlhaGthbiBjaXAgamlrYSBBbmRhIG1lbmFuZy4gQW5kYSBtZW5kYXBhdGthbiBrZXNlbXBhdGFuIG1lbmFyaWsgZ3JhdGlzIHNldGVsYWggYmViZXJhcGEgd2FrdHUgc2VrYWxpLCB0ZXRhcGkgQW5kYSBiaXNhIG1lbWFpbmthbm55YSBrYXBhbiBwdW4gQW5kYSBtYXUgZGVuZ2FuIG1lbWJheWFyIG1lbmdndW5ha2FuIENhc2lubyBHb2xkLiAKQXMgc29tZW9uZSB3aG8gdHJhdmVscyBhIGxvdCwgdGhlcmUgYXJlIGEgZmV3IGRvdWNoZWJhZ3Mgd2hvIGRvIHRoYXQsIGJ1dCB0aGUgbWFqb3JpdHkgYWN0dWFsbHkgZ2V0IGFsb25nIHJlYWxseSB3ZWxsIHdpdGggbG9jYWxzLiAKSW4gdGhlIFVuaXRlZCBTdGF0ZXMsIHRoZXJlIGFyZSBtYW55IGZ1biBjYXNpbm8gcmVudGFsIHNlcnZpY2UgdG8gcHJvdmlkZSByZW50YWwgYW5kIGFmZm9yZGFibGUgcGFja2FnZSBvZiBwYXJ0eSBnYW1lcyBhbmQgVmVnYXMgc3R5bGUgc2V0dXAuIEZyb20gdGhlIGVsYWJvcmF0ZSwgdGhlcmUgYXJlIHZhcmlvdXMgZ2FtZXMgZm9yIGZhbnRhc3kgY2xhc3NpYywgc2lsZW50LCB0aGVtZSBhbmQgZGVzaWduLiBJbiBhZGRpdGlvbiwgdGhlIHJlbnQgQ2FzaW5vIGlzIHRoZSBsb2NhdGlvbiBvZiB0aGUgY2FzaW5vIGN1bHR1cmUgZW5qb3llZCBwcm9zcGVyaXR5IGFzIG1hbnkgb3RoZXIgcGFydHMgb2YgdGhlIFVLIGFuZCBFdXJvcGUsIEF1c3RyYWxpYSwgYW5kIGlzIGF2YWlsYWJsZSBpbiB0aGUgd29ybGQuClJvYmVydCBXaWxsaWFtc29uIElJSSBpcyBvbmUgb2YgdGhvc2UgcmFyZSBraW5kcyBvZiBQb2tlciBQbGF5ZXJzIHdobyBhcmUgaGlnaGx5IGludm9sdmVkIGluIHRoZSByZXNlYXJjaCB0byBtYWtlIHRoZSBuYXR1cmUgb2YgcG9rZXIgZ2FtZXMgZmFyIG1vcmUgaW50ZXJlc3RpbmcgYW5kIGVhc3kgdG8gd2luIGFsbCB0aGUgdGltZS4gVGhpcyBhcnRpLgpHcmV5c25lYWt0aGllZiAgMiBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCkVzIGdpYnQgaW4gZGVtIENhc2lubyBlaW4gICBtaXQgOC4wMDAgZ2FyYW50aWVydGVtIFByZWlzcG9vbCwgMjUgQnV5IEluIHVuZCAyMCBSZWJ1eXMuIFp3YXIga25uZW4gICBnYW56IGltIFNpbm5lIGVpbmVyIHVtZ2VrZWhydGVuIEdsZWljaGJlcmVjaHRpZ3VuZyIgc293b2hsIE1ubmVyIHdpZSBGcmF1ZW4gYW4gZGVtICB0ZWlsbmVobWVuLiBEaWVzZSBSZWdlbHVuZyBoYXQgenUgZWluZW0gZ3JvZW0gWnVsYXVmIHZvbiBEYW1lbiBpbSAgQ2FzaW5vIGdlZmhydC4gTGF1dCBNZWxkdW5nZW4gc29sbGVuIHJ1bmQgZGllIEhsZnRlIGRlciBUZWlsbmVobWVyKGlubmVuKSBEYW1lbiBpbSBBbHRlciB2b24gMjAgYmlzIDMwIEphaHJlbiBzZWluLiBPYndvaGwgZGllIG1laXN0ZW4gdXJzcHJuZ2xpY2ggc296dXNhZ2VuIGFscyBBbmZuZ2VyaW5uZW4iIGltICBzdGFydGV0ZW4sIG5laG1lbiBzaWUgbWl0dGxlcndlaWxlIHp1c2VoZW5kcyBtZWhyIGF1Y2ggYW4gYW5kZXJlbiBlbiB0ZWlsLgpJZiB5b3UgZG9uIGdldCBhbiBpbXBvcnQgcGVybWl0LCB5b3UgcmVseWluZyBvbiB0aGUgQ0JQIGd1eSwgd2hvIGhhcyBubyBzcGVjaWFsaXN0IHRyYWluaW5nIHdoYXRzb2V2ZXIgYmVjYXVzZSBoZSBuZWVkcyB0byByZWd1bGF0ZSBhYm91dCBhIG1pbGxpb24gdGhpbmdzLCB0byBtYWtlIHRoZSByaWdodCBkZWNpc2lvbi4gClJlbmV3IExpZmUsIGEgc3VwcGxlbWVudCBicmFuZCBvd25lZCBieSBDbG9yb3gsIGZhaWxlZCB3aXRoIGEgZmxpbXN5IHZpZGVvIHRoYXQgd2FzICJjb21wbGV0ZWx5IGFuZCB1dHRlcmx5IHNwZWN0YWN1bGFybHkgaW5lZmZlY3RpdmUsIiBSZXlub2xkcyBzYWlkLiAiQXMgbXkgR2VybWFuIENFTyB7QmVubm8gRG9yZXJdLCB3aG8gaGFzIGEgd29uZGVyZnVsIGVjb25vbXkgb2YgbGFuZ3VhZ2UsIHNhaWQ6ICdGYWlsdXJlLicgSSdtIHRvbGQgYXMgYSBDTU8gdG8gZmFpbCBmYXN0IGFuZCBjaGVhcC4gCk1pbmR5OiBTY290dCwgSSdtIGhhdmluZyBhIHJlYWxseSBncmVhdCBkYXkuIEknbSBzbyBleGNpdGVkIGZvciB0aGlzIGludGVydmlldyBiZWNhdXNlIEkndmUga25vd24gSmltIFdhbmcgZm9yZXZlci4gTGlrZSB5b3Ugc2FpZCwgaGUncyB0aGUgZ3JlYXQgdW5jbGUgb2YgcGVyc29uYWwgZmluYW5jZSBibG9nZ2luZyBhbmQgaGUncyBhbiBhbGwgYXJvdW5kIHJlYWxseSBpbnRlcmVzdGluZyBwZXJzb24gYW5kIGEgc3VwZXIgbmljZSBndXksIHZlcnkga25vd2xlZGdlYWJsZS4gSSBmZWVsIGxpa2Ugd2Ugc2F5IHRoaXMgZXZlcnkgc2luZ2xlIHdlZWssIHRoaXMgZXBpc29kZSBydW5zIHJlYWxseSBsb25nIGJlY2F1c2UgaGUgaGFkIHNvIG11Y2ggZ3JlYXQgdGhpbmdzIHRvIHNheS4gU28gbWFueSBncmVhdCB0aGluZ3MgdG8gc2F5PwpCdXQgc3VyZWx5IHBhdHJpYXJjaHkgaXMgYSB3b3JkIHdlIG11c3QgcmV2aXZlICBldmVuIGlmIHdlIHNheSBpdCBpcyBub3QgYWJvdXQgbWVuIHBlciBzZSAgIHdoZW4gY29uZnJvbnRlZCB3aXRoIHRoZSBtaXNvZ3lueSBtaXhlZCB3aXRoIG1hbGUgcHJpdmlsZWdlIHRoYXQgc2VlbXMgdG8gYmUgcnVubmluZyByYW1wYW50IG9mZiBvZiBjb2xsZWdlIGNhbXB1c2VzLiBJbnN0YW5jZSwgaW4gSXJhbiAiYmFkIiB3b21lbiBhcmUgYmVpbmcgYmxhbWVkIGZvciBjYXVzaW5nIGVhcnRocXVha2VzLiBBY2NvcmRpbmcgdG8gYSBDTk4gcmVwb3J0LC4gClBlcnNvbiBvbiB0b3AgYmUgY2FyZWZ1bCBub3QgdG8gcG9rZSB0aGUgZXllLiBQZXJzb24gb24gYm90dG9tIGhhdmUgdGhlaXIgaGFuZHMgdXAuLiAKTGVzIGdlc3RlcyBjb25udWVzLCBzdGF0dXQgZGVzIHNvY2l0cyB2aWtpbmdzLCBGcmV5ciBldCBGcmV5amEsIGxhIGZvcnQgc2FpbnRlLCBMb2tpLCBsZXMgRWRkYSwgbGUgZ2FudCBZbWlyLCBZZ2RyYXNpbCwgU2xlaXBuaXIgbGUgY2hldmFsIG1hZ2lxdWUgZCdPZGRpbiwgbGVzIEFzZXMsIGxhIG1vcnQgZGUgQmFsZHIsIGxhIEdyYW5kZSBEZXNzZSwgbGVzIFdhbGt5cmllcywgbGEgVmFsaGFsbGEsIFNrYWRpLCBsZSBsb3VwIEZlbnJpciwgbGUgc2VycGVudCBkZSBNaWRnYXJkCk5pZ2VsJ3MgZm9yZ2UgY29tcGxleCBhbHJlYWR5IGZlYXR1cmVzIGEgc2hvd3Jvb20gb2YgaGlzIHdhcmVzLCBmcm9tIFN1ZmZvbGsgbGF0Y2hlcyB0byBhIGtpbmcgc2l6ZWQgbWV0YWwgb3JuYW1lbnRhbCBjbG90aGVzIHBlZywgYW5kIGEgbXVzZXVtLiAKSXQgb25lIG9mIHRoZSBmZXcgcG9zaXRpdmVzIChhdCBsZWFzdCBnb2luZyBvZmYgaGlzdG9yaWNhbCBkYXRhKSB0aGF0IGhlIGNvdWxkIHRhbGsgYWJvdXQgYW5kIHlldCBoZSBjYW4gYmVjYXVzZSBoZSBoYXMgc3BlbnQgc28gbXVjaCB0aW1lIGNsYWltaW5nIGhvdyBiYWQgYSBsYXJnZSB0cmFkZSBkZWZpY2l0IGlzLiBIZSBsaWVkIHRvIHRoZSBjb3VydCB0b2RheS4gCkZvciBkZWNhZGVzLCBXYXJuZXIgQnJvdGhlcnMvREMgaGFzIGhhZCB0cm91YmxlIGZpZ3VyaW5nIG91dCBob3cgdG8gY3JlYXRlIGFic29yYmluZyBzdG9yaWVzIHdpdGggdGhlIGNvbXBhbnkncyBtb3N0IGljb25pYyBmaWd1cmUsIFN1cGVybWFuLiBUaGUgcHJvYmxlbSBpcyBvYnZpb3VzOiBub3RoaW5nIGlzIG1vcmUgYm9yaW5nIHRoYW4gYSBjaGFyYWN0ZXIgc28gb3ZlcnBvd2VyZWQgdGhhdCBwbG90IGNvbnRyaXZhbmNlcyBsaWtlIEtyeXB0b25pdGUgYXJlIG5lZWRlZCB0byBjcmVhdGUgdnVsbmVyYWJpbGl0eSBhbmQgYWxsb3cgY29uZmxpY3QuIApJdCBpcyBhIGdyZWF0IHJlc291cmNlLC4gCkV2ZXIgdGhpbmsgdGhhdCB0aGUgbWFqb3JpdHkgb2YgcGVvcGxlIGp1c3QgYmFuIGhpbSBiZWNhdXNlIHBlb3BsZSBvbiB0aGUgaW50ZXJuZXQgdGVsbCB0aGVtIHRvP0hlIGNvdWxkIGxpdGVyYWxseSBoYXZlIDEgYWJpbGl0eSBhbmQgcGVvcGxlIHdvdWxkIHN0aWxsIGJhbiBoaW0uIGhhcyBub3RoaW5nIHRvIGRvIHdpdGggaG93IGJhbGFuY2VkIG9yIGhlYWx0aHkgdGhlIGNoYW1waW9uIGlzIHRoZXkganVzdCB1c2UgeWFzdW8gYXMgdGhlIGJhbiBmb3Igd2hlbiB0aGV5IGRvbiBrbm93IHdobyB0byBiYW4uIFpvZSBpcyBhIHBlcmZlY3QgZXhhbXBsZSBtYXNzaXZlbHkgaGF0ZWQsYnV0IG5vdCBiYW5uZWQgYmVjYXVzZSB0aGVyZSBpcyBubyBjaXJjbGUgamVyayBhcm91bmQgYmFubmluZyBoZXIgaW4gY2hhbXAgc2VsZWN0LiAyIHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvCkF2b2lkIHJlZmluZWQgcHJvY2Vzc2VkIGZvb2RzLCBlc3BlY2lhbGx5IHdoaXRlIHN1Z2FyIGFuZCB3aGl0ZSBmbG91ciBwcm9kdWN0cywgYXMgbW9zdCBtYWduZXNpdW0gaXMgcmVtb3ZlZCBmcm9tIHRoZW0uLiAKS25vd2luZyBoZXIgZmFtaWx5IGhhcyBhIGhpc3Rvcnkgb2YgbmV1cm9sb2dpY2FsIGRpc29yZGVycywgUm9iZXJ0cyBpbW1lZGlhdGVseSBrbmV3IHRoaXMgd2FzIG1vcmUgdGhhbiBqdXN0IGEgbWlncmFpbmUgYW5kIHdlbnQgdG8gdGhlIGRvY3RvcidzIG9mZmljZSB0byBnZXQgYW4gTVJJLiBUaG91Z2ggaGVyIGRvY3RvcnMgaW5pdGlhbGx5IHRvbGQgaGVyIHNoZSB3YXMgZmluZSwgYWZ0ZXIgc2V2ZXJhbCBtb3JlIE1SSXMsIHNoZSB3YXMgZGlhZ25vc2VkIHdpdGggbXVsdGlwbGUgc2NsZXJvc2lzIGEgeWVhciBsYXRlci4KUHJvYmFibHkgaGF2ZSAxIHNoYWtlIGF0IHNtb2tvIHRpbWUgKDlhbSkgYW5kIG9uZSBhZnRlciBteSB3b3Jrb3V0IHNlc2ggYWxvbmcgd2l0aCA1ZyBvZiBjcmVhdGluZS4KSXQgYWxsIGFib3V0IG51dHJpdGlvbiBhbmQgaGlzdG9yaWNhbGx5IHNwZWFraW5nIHdlIEtvcmVhbnMgaGF2ZSBiZWVuIGtub3duIGFzIHRhbGwgcGVvcGxlIGFtb25nIEFzaWFucy4KSSBjYW4gc2VlIGEgbG90IG1vcmUgb2YgdGhlIHRoaW5ncyBJIGxvdmVkIGFib3V0IERTOSBhbmQgZXZlbiBFbnQgaW4gdGhlc2UgbmV3IGVwaXNvZGVzIG9mIHNlYXNvbiAyLiBMb3ZlIHRoZSBtb2Rlcm4gc3BlY2lhbCBlZmZlY3RzIGFuZCBhdWRpbyBldGMgYW5kIGhvdyBpdCBlbmhhbmNlcyB0aGUgcGVyY2VpdmVkIHJlYWxpc20gb2YgdGhpbmdzLgpTb21lIHBlb3BsZSBoYXZlIHRoZSBpZGVhIHRoYXQgYW5pbWFscyBjYXJyeSBhbGwga2luZHMgb2YgZGFuZ2Vyb3VzIGRpc2Vhc2VzLiBTb21lIG9mIHRob3NlIGZlYXJzIGFyZSB3ZWxsIGZvdW5kZWQsIGVzcGVjaWFsbHkgYW1vbmcgd2lsZCBvciBleG90aWMgYW5pbWFscy4gQnV0IHRoZSB0cnV0aCBpcywgdGhlcmUgYXJlbid0IHZlcnkgbWFueSBzZXJpb3VzIGRpc2Vhc2VzIHlvdSBjYW4gY2F0Y2ggZnJvbSBhIGRvbWVzdGljIGFuaW1hbCAgIGFuZCBlc3BlY2lhbGx5IG5vdCBmcm9tIGEgcGV0LiAKVGhvc2UgY2hhbmdlcyBiZWNhbWUgZWZmZWN0aXZlIGZvciAyMDE2LCB3aGVuIHRoZSBnb3Zlcm5tZW50IGN1dCB0aGUgdGF4IHJhdGUgb24gdGhlIG1pZGRsZSBpbmNvbWUgYnJhY2tldCB0byAyMC41IHBlciBjZW50IGZyb20gMjIgcGVyIGNlbnQgKGZvciAyMDE5IGluY29tZSBiZXR3ZWVuICQ0Nyw2MjkgdG8gJDk1LDI1OSkgYW5kIGludHJvZHVjZWQgdGhlIDMzIHBlciBjZW50IGhpZ2ggaW5jb21lIGJyYWNrZXQgKGZvciBpbmNvbWUgYWJvdmUgJDIxMCwzNzEgaW4gMjAxOSkuIApMdW5jaCAob25lIGhvdXIpLjcuIApSZWNlbnRseSBJIHdvbiBhIDUwMCBidWNrIHByb21vdGlvbiBhbmQgd2FzIHNpbXBseSBoYW5kZWQgYSA1MDAgZG9sbGFyIGNoaXAgYW5kIHB1dCBpdCBpbiBteSBzaGlydCBwb2NrZXQuIApJY2kgb3UgbCwgaGllciBvdSBhdWpvdXJkIGwgbm91cyBtb250cmUgcXVlIGMgdW5lIHByYXRpcXVlIGJpZW4gcGx1cyBjb3VyYW50ZSBxdSBsIDogY29uc2lkcm9ucywgcGFyIGV4ZW1wbGUsIGwgbWFzc2lmIHBhciBsIG5hemllIGRlIGNldHRlIG10aGFtcGh0YW1pbmUgc3Vybm9tbWUgcGVydml0aW5lIHF1aSBwcm9jdXJhIGF1eCBzb2xkYXRzIGFsbGVtYW5kcyBsZXVyIGludmluY2liaWxpdCwgYXZhbnQgZGUgdG9tYmVyIGRhbnMgbGVzIGFmZnJlcyBkZXMgZWZmZXRzIHNlY29uZGFpcmVzIGRlIGNldHRlIGRyb2d1ZSB0cnMgYWRkaWN0aXZlIChkcHJlc3Npb24sIHBzeWNob3NlLCBldGMuKS4gCk9uZSByZWFzb24gZm9yIHRoaXMgaXMgdGhhdCB0aGV5IGFyZSBtYWRlIG9mIHRoZSBoaWdoZXN0IHF1YWxpdHkgb2YgcHJvZmVzc2lvbmFsIGNsYXkuIApUbW9pZ25hZ2UgZGUgZGVybmlyZSBtaW51dGUgOkplIHZpZW5zIGRlIGxpcmUgdm90cmUgYXJ0aWNsZSBhdSBzdWpldCBkZSBUaGllcnJ5IEMuLCBqZSBsaXJhaSBwZXV0IHRyZSBsYSBydWJyaXF1ZSBwbHVzIHRhcmQuIEplIGwnYWkgY29ubnUgZW4gZm9ybWF0aW9uIGRlIG5hdHVybywganVzdGVtZW50LiBJbCBlc3QgcmVzdCB1biBhbiwgY29tbWUgbW9pIGRhbnMgY2V0dGUgY29sZSBldCBzJ2luc3BpcmUgZWZmZWN0aXZlbWVudCBkZXMgZW5zZWlnbmVtZW50cyBkZSAibmF0dXJvcGF0aGllIG9ydGhvZG94ZSIgZGUgTWFyY2hlc3NlYXUgZXQgZGUgY2V1eCBkJ0FsYmVydCBNb3NzcmkgZW4gImh5Z2luaXNtZSIuIApJYW46IFdlbGwsIGl0IHdhc24ndCByZWFsbHkgYWxsIHRoYXQgZGlmZmljdWx0LiBJJ3ZlIGhhZCBhIGxvdCBvZiBncmVhdCBzdXBwb3J0IGZyb20gZmFtaWx5IGFuZCBmcmllbmRzIG92ZXIgaGVyZSBhbmQgd2UgdHJ5IHRvIGdldCBiYWNrIGhvbWUgb25jZSBldmVyeSBjb3VwbGUgb2YgeWVhcnMuIFRoZSBqb2Igc2l0dWF0aW9uIGhhcyB3b3JrZWQgb3V0IHByZXR0eSB3ZWxsLiAKSWYgdGhleSBldmVuIHNtZWxsIHNvbWV0aGluZyBzaW1pbGFyIHRvIHByb3NlbHl0aW5nLCB5b3UgZ28gdG8gamFpbC4gCkJldHRlciB0aGFuIGJlZm9yZSBidXQgaXQgaXMgbm90IGEgMTAwJSBjaGFuY2Ugb2Ygd2lubmluZyB0aGUgbG90dGVyeS5rbm93IHRoaXMganVzdCBzZWVtcyBsaWtlIGEgdGl0IGZvciB0YXQgc291bmRiaXRlIHRvIGdldCBwdWJsaWMgb3BpbmlvbiB0byBwcmVzc3VyZSB0aGUgUHJvdmluY2UgdG8gbmVnb3RpYXRlWW91IHNheWluZyB0aGF0IHRoaXMgaXMgYSBwb2xpdGljYWwgbWFuZXV2ZXIgYW5kIHRoZW4geW91IGdvdCBvdXRyYWdlZCBhYm91dCBpdCBzbyBpdCBoYWQgdGhlIGludGVuZGVkIGVmZmVjdCBhbmQgeW91IGZlbGwgZm9yIGl0LnRoaXMgaXMgc2VyaW91c2x5IGJlaW5nIGNvbnNpZGVyZWQsIHRoZW4gSSBzZXJpb3VzbHkgY29uc2lkZXIgYmVpbmcgb25lIG9mIHRob3NlIGZ1Y2tzIHRoYXQgbW92ZXMgb3V0c2lkZSB0aGUgY2l0eSBjYXRjaG1lbnQgdG8gYSBwZXJpcGhlcmFsIGFyZWFXaWxsIHlvdXIgcHJvcGVydHkgdGF4IGluY3JlYXNlPyBZZXMuIApEM3ZhOTIgdQpIb3dldmVyLCBJIHdpbGwgZGlyZWN0IHlvdSBhbGwgdG8gcnVsZSA2OgpBbmQgbm93IHRoYXQgc2hlIChhbG1vc3Q/KSBhbiBhZHVsdCBvbiB0aGUgc2hvdywgc2hlIGNlcnRhaW5seSBoYXNuIGNoYW5nZWQgaGVyIG1pbmQuIFNoZSBzdGlsbCBoYXMgbm8gaW50ZXJlc3QgaW4gYmVpbmcgYSAicHJvcGVyIGxhZHkiIG9mIGhlciBob3VzZS4gCldhdGNoaW5nIElXRCB1c2VkIHRvIGEgYmUgYSByZWxpZ2lvbiBmb3IgbWUuIEFuZCB0aGVuIGhlIGhhcyBub3cgZ290dGVuIHRvIGEgcG9pbnQgd2hlcmUgZXZlcnkgZ2FtZSBpcyBzb21lb25lIHRha2VzIGEgYmFkIHRyYWRlIGJlY2F1c2UgSURLIG1heWJlIHRoZWlyIGNhdCBqdW1wcyBpbiB0aGVpciBsYXAgb3Igc29tZSBzaGl0OyB0aGF0IHBlcnNvbiBpcyBub3cgaW5zdGFudGx5IGludGluZy4gCldlIGZpcnN0IHRob3VnaHQgaXQgd2FzIHBlZSAoY2F1c2Ugc2hlIHNtZWxsZWQgbGlrZSBjYXQgcGlzcykgYnV0IGFmdGVyIGEgbG9uZyBiYXRoIGl0IGRpZG4ndCBjb21lIG9mZiBmdWxseS4uIApSZXZlYWxpbmcgc2FsYXJpZXMgaXMgZmluZSBhbHNvOyBidXQgY291bGQgY2F1c2UgaW50ZXJuYWwgZGlzcHV0ZXMgYmV0d2VlbiBwbGF5ZXJzIGFzIHNraWxsIGxldmVscyBjYW4gcmlzZSBhbmQgZmFsbCBzbyByYXBpZGx5LCBhbmQgdGhlIGluYWJpbGl0eSB0byBwYXkgYWxsIHBsYXllcnMgdGhlIHNhbWUgZHVlIHRvIGRlbWFuZC4gCkhpcyAiRXVnZW5lIiBjaGFyYWN0ZXIsIG1lYW53aGlsZSwgdHJhbnNjZW5kZWQgbGFuZ3VhZ2UgdGhyb3VnaCBoaXMgc2lsZW5jZSBhbmQgc2lnaHQgZ2Fncy4gCk11Y2hhIGdlbnRlIG9waW5hIHF1ZSBlbCBlbCBhbGNvaG9sIHRyYW5zZm9ybWEgYSB1biBjb2JhcmRlIGVuIHVuIHZhbGllbnRlLiBQZXJvIGN1aWRhZG8sIGVsIGNvbnRhciBjb24gbXMgYWdhbGxhcyBkZSBsYXMgbm9ybWFsZXMsIHB1ZWRlIGhhY2VyIHF1ZSBhcG9zdGVtb3MgY29tcHVsc2l2YW1lbnRlIHkgZGUgZXN0YSBmb3JtYSBhdW1lbnRlbW9zIG51ZXN0cmFzIHByZGlkYXMuCkluIGNhc2UgeW91IGhhdmVuIGNvbWUgYWNyb3NzIGl0IGJlZm9yZSwgeW91IG5lZWQgdG8gcmVhZCBEb3VnbGFzIEFkYW1zIHN0b3J5IGFib3V0IGEgcGFja2V0IG9mIGNvb2tpZXM6YWN0dWFsbHkgZGlkIGhhcHBlbiB0byBhIHJlYWwgcGVyc29uLCBhbmQgdGhlIHJlYWwgcGVyc29uIGlzIG1lLiBJIGhhZCBnb25lIHRvIGNhdGNoIGEgdHJhaW4uIEkgd2FzIGEgYml0IGVhcmx5IGZvciB0aGUgdHJhaW4uIEknZCBnb3R0ZW4gdGhlIHRpbWUgb2YgdGhlIHRyYWluIHdyb25nLiAKWzldIFdoZW4gdGhpcyB0ZXN0IHdhcyBnaXZlbiB0byBmaW5hbCBxdWFydGVyIGNoaXJvcHJhY3RpYyBzdHVkZW50cyA3MCUgb2YgdGhlbSBwYXNzZWQgdGhlIHNhbWUgZXhhbSEgWzEwXTEuIApUaGUgU2NoZXJlcidzIGxpbmVuIGNsb3NldCBXaGVuIGV4YW1pbmluZyB0aGUgZGlyZWN0aW9uIG9mIHRoZSBzaG9lIHByaW50cyBhdCB0aGUgY3JpbWUgc2NlbmUsIHNvbWV0aGluZyBhbHdheXMgdHJvdWJsZWQgcG9saWNlLiBPbmUgc2V0IG9mIHByaW50cyBsZWQgdG8gYSBsaW5lbiBjbG9zZXQsIGJ1dCB0aGV5IHdlcmVuJ3Qgc3VyZSB3aHkuIEluc2lkZSB0aGUgY2xvc2V0IHdlcmUgYSBzZXQgb2YgZGVjb3JhdGl2ZSBzd29yZHMsIGJ1dCBhZnRlciB0ZXN0aW5nIHRoZW0sIGNvcHMgZm91bmQgbm8gZXZpZGVuY2UgdGhleSB3ZXJlIHVzZWQgaW4gdGhlIGNyaW1lLgpDaGVjayBmb3IgYmVkIGJ1Z3MgcHJpb3IgdG8gc2lnbmluZy4gQmVkIEJ1Z3MgYXJlIGEgaHVnZSBwcm9ibGVtIGluIFN1bW1pdCBDb3VudHkuIFdlIGhhZCB0byBhYmFuZG9uIG91ciBwbGFjZSBpbiB0aGUgV2lsZGVybmVzdCBkdWUgdG8gYmVkIGJ1Z3MgYW5kIGl0IHN0aWxsIGdpdmVzIG1lIHRoZSBoZWViaWUgamVlYmllcyB0byB0aGluayBhYm91dCEgQmVzdCBvZiBsdWNrIGhlcmUhIEhhZCBhIGJsYXN0IGRvaW5nIGRvaW5nIHRoaXMgaW4gdGhlIHBhc3QhLiAKVGhlIG5leHQgc3RlcCB0byBzdGFydGluZyBhIGJ1c2luZXNzIGZyb20geW91ciBob21lIHRoYXQgZGVhbHMgaW4gUHJvZmVzc2lvbmFsIENsYXkgUG9rZXIgQ2hpcHMgYW5kIG90aGVyIHR5cGVzIG9mIGFjY2Vzc29yaWVzIGlzIHRvIGRldGVybWluZSB3aGF0IHR5cGUgb2YgcHJvZHVjdCB0aGF0IHlvdSB3YW50IHRvIHNwZWNpYWxpemUgaW4uIFlvdSBtYXkgd2FudCB0byBmb2N1cyBvbiBhIHBhcnRpY3VsYXIgd2VpZ2h0IGluIGNoaXBzLCBhIGNlcnRhaW4gdHlwZSBzdWNoIGFzIFBhdWxzb24sIG9yIGV2ZW4gdW5pcXVlIHZhcmlhdGlvbnMgc3VjaCBhcyBQZXJzb25hbGl6ZWQgQ2xheSBQb2tlciBDaGlwcy4gSW4gYWxsIGFjdHVhbGl0eSwgeW91IG1heSB3YW50IHRvIGZvY3VzIG9uIHNldmVyYWwgZGlmZmVyZW50IHByb2R1Y3RzLiBJZiB5b3UgYXJlIG5ldyB0byB0aGUgYnVzaW5lc3MgaXQgaXMgcHJvYmFibHkgYmVzdCB0byBzaW5nbGUgb3V0IG9uZSB0byB0d28gaXRlbXMgYW5kIHBsYWNlIHlvdXIgZm9jdXMgb24gdGhvc2UgaXRlbXMgb25seSB1bnRpbCB5b3UgYWRqdXN0IHRvIGhhdmluZyB5b3VyIG93biBidXNpbmVzcy4KQmVpIE5hbWUgZGVyIFJvc2UgbGVybnN0IGF1Y2ggbm9jaCB3YXMgYmVyIG1pdHRlbGF0ZXJsaWNoZSBSZWxpZ2lvbnNwaGlsb3NvcGhpZSwgZGllIEdlc2NoaWNodGUgZGVyIGthdGhvbGlzY2hlbiBLaXJjaGUgdW5kIGRhcyBNbmNoc2xlYmVuIGltIEFsbGdlbWVpbmVuLgpJdCBwb2xpdGljYWwgcG93ZXIgdGhhdCBtYXR0ZXJzIGFuZCB0YmgsIEkgZG9uIHRoaW5rIGhlIGhhcyB0aGF0IGFueSBtb3JlIHRoYW4gd2FycmVuLi4gCkZvciB0aGUgcG9rZXIgbG92ZXJzLCBibGFja2phY2sgY29sbGVjdGlvbiBpcyB0aGUgbW9zdCBuZWNlc3NhcnkgdGhpbmcgdG8gYnVpbGQgeW91ciBvd24gbGl0dGxlIGNhc2lubyBhdCBob21lLiBFdmVuIHRoZSByZWd1bGFyIHBsYXllcnMgb2Z0ZW4gdHJ5IHRvIGFycmFuZ2UgYSBnYW1lIHBhcnR5IGF0IGhvbWUgd2l0aCB5b3VyIGZyaWVuZHMuIFBsYXllcnMgYXJlIGFsbW9zdCBjcmF6eSBhYm91dCB0aGVzZSBibGFja2phY2sgY29sbGVjdGlvbnMuIEhvd2V2ZXIsIHlvdSBjYW4gYWxzbyBjb2xsZWN0IHNvbWUgYXV0aGVudGljIHBva2VyIGJsYWNramFjayBzdXBwbGllcyBhdCBob21lLiBUbyBnZXQgdGhlIGJlc3QgZGVhbHMsIGRvbid0IGZvcmdldCB0byBjb21wYXJlIHRoZSBwcmljZXMgb25saW5lLiBJbnRlcm5ldCBpcyB0aGUgYmVzdCBtYXJrZXQgZm9yIGJhcmdhaW5pbmcgdGhlIHByaWNlcyBvZiBibGFja2phY2sgc3VwcGxpZXMuClVuaXF1ZSBCb3VsZGVyIHNwYSBhaW1zIHRvIGhlbHAgY2FsbSBob2xpZGF5IHN0cmVzcwpMYXN0IEZlYnJ1YXJ5LCB3aXRoIEFudGhvbnkgb3V0IGZvciBtb3N0IG9mIHRoZSBtb250aCBkdWUgdG8gaW5qdXJ5LCBGaWVsZHMgYnVtcGVkIGhpcyBhdmVyYWdlcyB1cCB0byAxMC41IHBvaW50cyBhbmQgNS4yIHJlYm91bmRzIG9uIDQ3LjglIHNob290aW5nIGZyb20gdGhlIGZpZWxkIGluIDE1IGdhbWVzLgpZZWFoIEkgZnJlcXVlbnRseSBwbGF5IHRoaXMgZ2FtZSBkcnVuayB3aXRoIHRoZSBsaWdodHMgb2ZmIHRvIGJlIHNjYXJlZCBzaGl0bGVzcy4gSnVzdCByZWNlbnRseSBJIGRpYWxlZCBpdCBiYWNrIGFuZCBzdGFydGVkIHRoaW5raW5nIHN0cmF0ZWdpY2FsbHkgaW5zdGVhZCBvZiBlbWJyYWNpbmcgdGhlIGltbWVyc2lvbi4gSSBwcmVmZXIgaW1tZXJzaW9uIG1vZGUgb2YgbWF4aW11bSBwYW5pYywgdGVycm9yIGFuZCBjb25mdXNpb24sIGJ1dCBoYXZpbmcgZ29uZSB0b28gZmFyIGRvd24gaW50byB0aGUgcGFydCBoYXMgc3RhcnRlZCBjb3N0aW5nIG1lIGdhbWVzLCBwb2ludHMgYW5kIHByb2dyZXNzLgpJJ20gbGliZXJhbCBhbmQgb3BpbmlvbmF0ZWQuIApXZSB3ZXJlIHRvbGQgRnJhbmRzZW4gY2FuIHBsYXkgZGVmZW5zZSB0b28uIApBc2hjaGlsZF8gICAxIHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvCkkgbG92ZSBlc3NlbnRpYWwgb2lscyAoYWx0aG91Z2ggSSB1c2UgdGhlbSBpbiBhIGRpZmZ1c2VyIHRvIGhlbHAgbWUgc2xlZXAvYnJlYXRoZSBtb3JlIGNsZWFybHkvbXkgaG91c2Ugc21lbGwgbmljZSAgIE5PVCBhcyBhIGN1cmUgYWxsIHNuYWtlIG9pbCkuIApUaGUgc2FkIHRoYXQgY29tZXMgZnJvbSBzb21lb25lIGxvdmVkIG9uZXMga25vd2luZyB0aGlzIGlzIHRoZSBraW5kIG9mIHRoaW5nIHRoZXkgbmVlZCB0byBkbyBpbiBvcmRlciB0byBtYWtlIHRoZWlyIGZyaWVuZCBoYXBweSBmb3Igb25jZS4uIApTb21lIHJlc29ydHMgaW5jbHVkZSBldmVyeXRoaW5nIGFjdGl2aXRpZXMsIGFsY29ob2wgYW5kIGZvb2QgYW5kIHRyYW5zcG9ydGF0aW9uIHRvIHRoZSBob3RlbDsgY3J1aXNlcyBvbmx5IGluY2x1ZGUgb24gYm9hcmQgZW50ZXJ0YWlubWVudCBkbyBmcm9tIHlvdXIgb3duIGhvbWUsIHRoaXMgaXMgYSBnb29kIGNhcmVlciBjaG9pY2UuIDIgTGVhdmUgYSBrZXkgdG8geW91ciBmcm9udCBkb29yIGFuZCBlbWVyZ2VuY3kgbnVtYmVycyBmb3IgeW91ciB2YWNhdGlvbiBkZXN0aW5hdGlvbiB3aXRoIDMyLDY5MCBtZXRlcnMgYW5kIGVmZmVjdGl2ZWx5IHJldHVybiBmaXJlIG9uIGFueSBlbmVteSBndW4gdGhhdCBjb3VsZCBoaXQgaXQuIFlvdXIgYm9zcyBpcyB1bmxpa2VseSB0byBncmFudCBhbiBleHRlbmRlZCB2YWNhdGlvbiBpZiB0aGUgY29tcGFueSBkaXZpZGluZyB5b3VyIGFubnVhbCBzYWxhcnkgYnkgdGhlIG51bWJlciBvZiB3b3JrIGhvdXJzIGluIHlvdXIgd29yayB5ZWFyLiBUeXBpY2FsbHksIHlvdSBjYW4gYnV5IGludG8gYSB2YWNhdGlvbiBjbHViIHRpbWVzaGFyZSB0aCBBUlZOIFJlZ2ltZW50P3MgZWFzeSBzdXJyZW5kZXIsIEJyYXZvIEJhdHRlcnkgbG93ZXJlZCBpdHMgZ3VucyBhbmQgZmlyZWQgcG9pbnQgYmxhbmsuIFdoaWxlIHlvdSBkb24ndCBoYXZlIHRvIGhhdmUgdGhlIG1vc3QgdXBzY2FsZSBmdXJuaXNoaW5nLCByYXRoZXIgdGhhbiBkcml2aW5nLCBmb3IgZXhhbXBsZSBhbmQgdGhlbiBiZSB3aWxsaW5nIHRvIGJ1ZGdlIG9uIG90aGVyIGFyZWFzLiBUaGVyZSBhcmUgbWFueSBsb2NhdGlvbnMgPz8/PyA/Pz8gdG8gY2hvb3NlIGZyb20gYW5kIHlvdSBjYW4geW91ciBsZWFkZXJzaGlwIGFiaWxpdHkgdG8gbGVhZCB0aGUgVkJTIHByb2dyYW0uIFJlbWVtYmVyLCBhbiBhbGwgaW5jbHVzaXZlIGluY2x1ZGVzIGV2ZXJ5dGhpbmcgYnV0IHlvdSB0aGVpciBidW5rZXIgdG93YXJkIHRoZSBzb3V0aGVhc3Rlcm4gPz8/ID8/Pz8/Pz8gZWRnZSBvZiB0aGUgcGVyaW1ldGVyLgpBdWNoIHNhaGVuIHdpciBkb3J0IGludGVyZXNzYW50ZSBlbmRlbWlzY2hlIFBmbGFuemVuLiAKVFYgaXMgdmVyeSBxdWljayB0byBhZHZlcnRpc2UgYWxhcm1zIHdpdGggYSBtb250aGx5IGJpbGwuIApRdWVlbnNsYW5kIEdvdmVybm1lbnQgZmlndXJlcyBzaG93LCBhY3Jvc3MgdGhlIFNvdXRoZXJuIERvd25zIHJlZ2lvbiwgdGhlIDM0NiBwb2tlciBtYWNoaW5lcyBtYWRlIGEgdG90YWwgb2YgJDEgbWlsbGlvbiBpbiBEZWNlbWJlciAgIGFuIGF2ZXJhZ2Ugb2YgJDMwMDQgcGVyIG1hY2hpbmUuCkZvciBpbnN0YW5jZSwgSSBoYXZlIGFsd2F5cyBoYXRlZCBkcml2aW5nLCBzbyBteSBodXNiYW5kIGFsd2F5cyBkcm92ZSBldmVyeXdoZXJlLiBJIHN0YXJ0ZWQgZHJpdmluZyBpbnN0ZWFkLiBUdXJucyBvdXQsIEkgZGlkbid0IGhhdGUgZHJpdmluZyBzbyBtdWNoIGFzIEkgaGFkIGFueGlldHkgb3ZlciBpdCBiZWNhdXNlIEkgZGlkbid0IHByYWN0aWNlIGl0IGFuZCBzbyBkaWRuJ3QgZmVlbCBjb25maWRlbnQgYWJvdXQgZG9pbmcgaXQuIApJdCBpcyB0ZXJyaWJseSByZWxheGluZy5JIGZpcnN0IHJlYWQgV2FyIGFuZCBQZWFjZSBvbiBteSB0cmFpbiBqb3VybmV5cyB0byBhbmQgZnJvbSB3b3JrLCBhbmQgdG8gYW5kIGZyb20gdGhlIE1pZGxhbmRzIHRvIG1lZXQgdXAgd2l0aCBSaWNoYXJkIGJlZm9yZSB3ZSB3ZXJlIG1hcnJpZWQuIApNeSBoZWFydCBpcyB2ZXJ5IGhhcHB5IGFuZCBJIGZlZWwgc28gdGhhbmtmdWwgYW5kIGx1Y2t5IHRvIGJlIGFibGUgdG8gZXhwZXJpZW5jZSBzb21ldGhpbmcgbGlrZSB0aGlzLiAKT24gU2F0dXJkYXkgQXByaWwgMjEsIG5vdmVsaXN0IEpvbmF0aGFuIExldGhlbSB3aWxsIGRlbGl2ZXIgYSBzdGF0ZSBvZiBjaW5lbWEgYWRkcmVzcyBvbiB0aGUgImVjc3Rhc2llcyBvZiBpbmZsdWVuY2UiIGNvbnN0aXR1dGluZyBjb250ZW1wb3JhcnkgZmlsbS4gVGhlIG9sZCBhZGFnZSAidGhlcmUncyBzb21ldGhpbmcgZm9yIGV2ZXJ5b25lIiBoYXMgbmV2ZXIgYmVlbiBzbyB0cnVlLiBUaGUgZmVzdGl2YWwgcnVucyBmcm9tIEFwci4gMTkgdG8gTWF5IDMuIEFzIGEgZmFtaWx5IG1hbiwgaGUgYWRvcmVzIGhpcyBjaGlsZHJlbiBhbmQsIG1vcmUgdHJhZ2ljYWxseSwgaGUgaGFzIG5ldmVyIHNlZW4gdGhlIGFjY3VzZXJzIHdobyBkZW1vbml6ZSBoaW0uIFRvIGFkZCBhbiBpcm9uaWMgdHdpc3QgdG8gdGhlIHdhcnBlZCBzaXR1YXRpb24sIE1hcmVjYXV4IGlzIGEgYmFpbGlmZiwgd2hvIGlzIG5vdyBtYW5pcHVsYXRlZCBieSB0aGUgc3lzdGVtIHRoYXQgaGUgZ2VudWluZWx5IHRydXN0ZWQuCkFzIGEgcmVzdWx0LCB0aGUgb25saW5lIGdhbWJsaW5nIGluZHVzdHJ5IGlzIGNvbnN0YW50bHkgZ3Jvd2luZyBhbmQgdGhlIG51bWJlciBvZiBvbmxpbmUgY2FzaW5vcyBpcyBiaWdnZXIgdGhhbiBldmVyISBIb3dldmVyLCBub3QgYWxsIG9mIHRob3NlIGNhc2lub3MgYXJlIHdvcnRoIHBlb3BsZSdzIHRpbWUgYW5kIGF0dGVudGlvbiBiZWNhdXNlIHNvbWUgb2YgdGhlbSBvZmZlciBkaXNhc3Ryb3VzIHNlcnZpY2UgYW5kIHVuc2FmZSBnYW1pbmcgZW52aXJvbm1lbnQuLiAKQWxsIHRoZSB3aGlsZSBJIGZvdW5kIGEgYmFuayB0aGF0IHdvdWxkIHF1YWxpZnkgbWUgZm9yIHRoZSBsb2FuLiAKRGVhciBicm90aGVyIG9mIEpvYW5uZSBTb3V0aGVyIChNb250eSkuIFByZWRlY2Vhc2VkIGJ5IGhpcyBtb3RoZXIgSGVsZW4gU21pdGguIApQYXRyaWNrJ3MgRGF5IGFsbCB3ZWVrIG9yIGp1c3QgZ2FtZSBmb3IgYSBibG9jayBwYXJ0eSBpbiB0aGUgc25vdywgTHVja3lQYWxvb3phIGhhcyBhbiBvcHRpb24gZm9yIHlvdS4gCllUQS4gCkV2ZXJ5ZGF5IC4gQSBLaW5kbGU/IEdldCB5b3VyIEtpbmRsZSBoZXJlLCBvciBkb3dubG9hZCBhIEZSRUUgS2luZGxlIFJlYWRpbmcgQXBwLiBPcGVuIFNlY3JldHMuIApJJ20gZmFzY2luYXRlZCBieSB0aGUgY29tbWVudHMgZnJvbSBSZWRkaXRvcnMgaW4gb3RoZXIgY291bnRpZXMgYWJvdXQgdGhlaXIgbWVkaWNhbCBleHBlcmllbmNlcyBhbmQgaG93IGxpdHRsZSB0aGV5IGhhdmUgdG8gcGF5IGZvciB0aGUgc2VydmljZXMuIEhlYWx0aCBjYXJlIGluIEFtZXJpY2EgaXMgZnVja2VkIHVwLiAKT3ZlciB0aGUgcGFzdCB5ZWFyLCBSQkMgYWZmb3JkYWJpbGl0eSBtZWFzdXJlIGZvciBjb25kb3MgaW4gQ2FuYWRhIGluY3JlYXNlZCBieSAzLjYgcGVyY2VudGFnZSBwb2ludHMgY29tcGFyZWQgdG8gb25seSAxLjIgcGVyY2VudGFnZSBwb2ludHMgZm9yIHRoZSBzaW5nbGUgZmFtaWx5IGRldGFjaGVkIG1lYXN1cmUgKGFuIGluY3JlYXNlIGluIHRoZSBtZWFzdXJlIHJlcHJlc2VudHMgYSBsb3NzIG9mIGFmZm9yZGFiaWxpdHkpLiBXaXRoIGEgbWVhc3VyZSBvZiA0My4yIHBlciBjZW50IGF0IHRoZSBuYXRpb25hbCBsZXZlbCwgY29uZG9zIGFyZSBzdGlsbCB0aGUgbW9yZSBhZmZvcmRhYmxlIGhvdXNpbmcgdHlwZSBpbiBDYW5hZGEsIGNvbXBhcmVkIHRvIDU5LjIgcGVyIGNlbnQgZm9yIHNpbmdsZSBkZXRhY2hlZCwgdGhvdWdoIHRoZSBhZHZhbnRhZ2UgaGFzIG5hcnJvd2VkLi4gCk9uZSB0aGluZyB5b3UgbWF5IG5vdGljZSwgdGhvdWdoLCBpcyB0aGF0IHlvdXIgZmx1b3JpZGUgdG9vdGhwYXN0ZSBoYXMgYSBsYWJlbCBvbiBpdCB0aGF0IHdhcm5zIGFnYWluc3QgaXRzIHVzZSBmb3Iga2lkcyBhZ2VzIDYgYW5kIHVuZGVyLiBGb29kIGFuZCBEcnVnIEFkbWluaXN0cmF0aW9uIG1hbmRhdGVkIGluIDE5OTcgdGhhdCBhbGwgZmx1b3JpZGUgZW5yaWNoZWQgdG9vdGhwYXN0ZXMgY29udGFpbiB0aGlzIGxhYmVsIGJlY2F1c2UgdGhleSBmb3VuZCB0aGF0IGNoaWxkcmVuIHRlbmRlZCB0byBzd2FsbG93IHRvb3RocGFzdGUgbW9yZSB0aGFuIGFkdWx0cywgbGVhZGluZyB0byBhbiBvdmVyYWJ1bmRhbmNlIG9mIGZsdW9yaWRlIGluIHRoZWlyIHN5c3RlbS4gVG9vIG11Y2ggZmx1b3JpZGUgZm9yIGtpZHMgY2FuIGxlYWQgdG8gYSBjb25kaXRpb24gY2FsbGVkIGVuYW1lbCBmbHVvcm9zaXMsIHdoZW4gdGhlIHRvb3RoIGVuYW1lbCBiZWNvbWVzIGRpc2NvbG9yZWQuIApQYWludGVkIFJvY2sgYW5kIFRvcCBUYWJsZSBFbGlzYSBSZXN0YXVyYW50IGluIFlhbGV0b3duIHdlcmUgYSBwZXJmZWN0IGRpbm5lciBtYXRjaCwgZXNwZWNpYWxseSB3aGVuIHRoZSBzdGVhayBtZXQgdGhlIFBhaW50ZWQgUm9jayAyMDE0IENhYmVybmV0IEZyYW5jKCQ0NC45OSkuIFRoZSBvbmx5IHRoaW5nIG1vcmUgYmVhdXRpZnVsIHRoYW4gdGhlIGJhciBhdCBFbGlzYSB3YXMgdGhlIHNlcnZpY2UuCkl0IG5vdCBkZWFkLCBhbmQgdGhvc2UgbnVtYmVycyB3b3VsZCBiZSBmaW5lIGZvciBhIHNtYWxsIGluZGllIGdhbWUgb3Igb3RoZXJ3aXNlIG5pY2hlIGdlbnJlLCBidXQgZnJvbSBhIG1ham9yLCByZXB1dGFibGUgZGV2ZWxvcGVyIGxpa2UgVmFsdmUsIGl0IHByZXR0eSBlbWJhcnJhc3NpbmcuIEF1dG8gQ2hlc3MsIG9uIHRoZSBvdGhlciBoYW5kLCBpcyBzdWNoIGEgbWFzc2l2ZSBvdXQgb2Ygbm93aGVyZSBzdWNjZXNzIHRoYXQgaWYgd2Ugc2VwYXJhdGVkIGl0IGZyb20gRG90YSAyLCBpdCB3b3VsZCBiZSB0aGUgNHRoIG1vc3QgcGxheWVkIGdhbWUgb24gU3RlYW0uLiAKODglIG9mIHRoZSBwb3B1bGF0aW9uIGdldHMgdGhlaXIgbmV3cyBmcm9tIFRWCkEgYmVlciBkcmlua2luZywgc3BvcnQgd2F0Y2hpbmcsIHJvdWdoIGFyb3VuZCB0aGUgZWRnZXMsIGdvb2Qgd2l0aCB0aGVpciBoYW5kcywgbm90IHN1cGVyIHNlbnNpdGl2ZSwgZHVkZS4gClRoaXMgY2FuIGJlIHVzZWQgdG8gcnVuIGZ1cnRoZXIsIGxpZnQgd2VpZ2h0cyBsb25nZXIsIGFuZCBwdXNoIHBhc3QgcGFpbiB0aGF0IHlvdSBvdGhlcndpc2UgbWF5IG5vdCBiZSBhYmxlIHRvLlByb3RlaW4gY2FuIGJlIHVzZWQgYXMgYSBwZXJmb3JtYW5jZSBlbmhhbmNpbmcgZHJ1ZyB0aG91Z2guIEZvciBleGFtcGxlLCBwcm90ZWluIGRvZXNuIHdvcmsgaW4gdGhlIHNhbWUgd2F5IHBhaW4gcGlsbHMgZG8uIApPbmxpbmUgcG9rZXIgdG91cm5hbWVudHMgZ2V0IGJpZyBpbiBJbmRpYSBhcyBpbnRlcmVzdCBpbiBkaWdpdGFsIGdhbWluZyBncm93c1RoZSBvbmxpbmUgcG9rZXIgaW5kdXN0cnkgaXMgZ3Jvd2luZyBpbiBJbmRpYSB3aGljaCBhY2NvcmRpbmcgdG8gcmVwb3J0cyBzdGFuZHMgYXQgYW4gZXN0aW1hdGVkIFJzIDcwMCBjcm9yZSBhdCBwcmVzZW50LgpJIGhhZCBhIGZyaWVuZCBhdCBzdW1tZXIgY2FtcCBhbmQgd2UgZm91bmQgYSBzbmFwcGluZyB0dXJ0bGUgYnkgdGhlIHBvbmQuIFdlIHRyaWVkIGtlZXBpbmcgaXQgYXMgYSBwZXQgaW4gdGhlIGFydCBzdXBwbHkgY2xvc2V0IGJ1dCBwZW9wbGUgZm91bmQgaXQsIHNvIGkgdG9vayBpdCBob21lIGFuZCBkaWRudCB0ZWxsIG15IG1vbS4KSGl0dGluZyB0d2ljZSBjYW4gYmUgdHJpY2t5IHRob3VnaCBhcyB0aGUgdGltaW5nIGNhbiBiZSBwcmV0dHkgcHJlY2lzZS4gSSBsaWtlIHRvIGhpdCBoaW0gdHdpY2UsIGF2b2lkIGEgcG9vbCwgaGl0IG9uY2UsIGF2b2lkIGEgcG9vbCwgaGl0IHR3aWNlLCByZXBlYXQuIAoiUnVzc2lhIGFuZCBDSVMgb2ZmZXIgdHJlbWVuZG91cyBncm93dGggb3Bwb3J0dW5pdGllcywgZXNwZWNpYWxseSB3aXRoaW4gbWFya2V0cyB0aGF0IGRvIG5vdCBoYXZlIG1ham9yIGludGVybmF0aW9uYWxseSBicmFuZGVkIGhvdGVscy4gCkFjY29yZGluZyB0byB0aGUgS2Fzb2FnIFRyYWlsYmxhemVyczoKVGhlIGlzc3VlIGlzIHdoZW4gc2hlIGdvZXMgc29tZXdoZXJlIGVsc2UuIE9yIGlmIHNoZSBmZWVscyBsaWtlIGEgY29tcGFueSBoYXMgIndyb25nZWQiIGhlci4gCkJ1dCB0aGUgZ29vZCBuZXdzIGlzIEkgYWN0dWFsbHkgbGVhcm5lZCB0byBsaWtlIHNxdWF0dGluZyBhbmQgY2FuIGRvIGl0IGRlY2VudGx5IG5vdyEgSXQgc3RpbGwgbXkgd29yc3QgbGlmdCwgYnV0IHdlIGdldHRpbmcgdGhlcmUuIFdoZW4gSSBzdGFydGVkIG92ZXIgYSB5ZWFyIGFnbyBJIGNvdWxkbiBzcXVhdCBjb21mb3J0YWJseSB3aXRoIHRoZSBiYXIuIApUaGUgaWRlYSBvZiB1c2luZyBhIHVuaXQgdGllZCB0byBhIHNpbmdsZSBtZWFzdXJlbWVudCB0ZWNobmlxdWUgcmVtaW5kcyBtZSBhIGJpdCBvZiBtZWFzdXJpbmcgcHJlc3N1cmUgaW4gIm1pbGxpbWV0ZXJzIG9mIG1lcmN1cnkiLiBTdXJlIGl0IGdyZWF0IGlmIHlvdSBoYXZlIGEgbWVyY3VyeSBiYXJvbWV0ZXIsIGJ1dCB3aGVuIHZhY3V1bSBwaHlzaWNpc3RzIHN0YXJ0IG1lYXN1cmluZyBwcmVzc3VyZSBpbiBtaWNyb25zLCB1c2luZyBhbiBpbnN0cnVtZW50IHRoYXQgZG9lc24gdXNlIG1lcmN1cnkgYXQgYWxsLCBpdCBzZWVtcyBhIGJpdCBzaWxseS4uIApXaGlsZSBzdGlsbCBDYW5hZGEgbW9zdCBleHBlbnNpdmUgY2l0eSBmb3IgaG91c2luZywgYSByZWNlbnQgY29sbGFwc2UgaW4gc2FsZXMgaGFzIGxlZCB0aGUgdmFsdWUgb2YgcmVhbCBlc3RhdGUgdHJhbnNhY3Rpb25zIHN1YnN0YW50aWFsbHkgbG93ZXIuIFRoYXQgbGVhdmVzIE1vbnRyZWFsIHNvYXJpbmcgbWFya2V0IHBvaXNlZCB0byBvdmVydGFrZSB0aGUgUGFjaWZpYyBjb2FzdCBjaXR5IEphbnVhcnksIHRoZSB0b3RhbCBkb2xsYXIgdmFsdWUgb2YgcmVhbCBlc3RhdGUgdHJhbnNhY3Rpb25zIGluIFZhbmNvdXZlciBmZWxsIHRvICQxLjcgYmlsbGlvbiBvbiBhIHNlYXNvbmFsbHkgYWRqdXN0ZWQgYmFzaXMsIHRoZSB3ZWFrZXN0IGxldmVsIHNpbmNlIDIwMTMgYW5kIGRvd24gNDIgcGVyIGNlbnQgZnJvbSBhIHllYXIgZWFybGllciwgYWNjb3JkaW5nIHRvIGRhdGEgcmVsZWFzZWQgRnJpZGF5IGJ5IHRoZSBDYW5hZGlhbiBSZWFsIEVzdGF0ZSBBc3NvY2lhdGlvbi4gCkEgZmllbGQgb2YgNTAgcmFjZXJzIGhhcyBhbHJlYWR5IGJlZW4gY29uZmlybWVkLCB3aXRoIHJvb20gZm9yIG1vcmUuIFJhY2UgZGF5IHdpbGwgYmVnaW4gYXQgbm9vbiB3aXRoIGEgY2hhbmNlIHRvIG1lZXQgdGhlIHJpZGVycy4gV2l0aCBzaXggYWR1bHQgY2xhc3NlcywgdHdvIGNoaWxkcmVuJ3MgY2xhc3NlcyBhbmQgdHdvIHByb3Zpc2lvbmFsIHJhY2VzIGZvciBsb2NhbCBhbWF0ZXVycyB3aG8gd2FudCB0byBzZWUganVzdCBob3cgZmFzdCB0aGVpciBtYWNoaW5lcyB3aWxsIGdvLiAKQnV0IHRoZSBvcHBvc2l0aW9uIHJlZnVzZWQgdG8gYnVkZ2UuIApIZWNoaW5nZXIgbGlzdGVkIGEgaGFsZiBkb3plbiBtb3JlIGV4YW1wbGVzLiBBbW9uZyB0aGVtIHdlcmUgYSBCcm9va2x5biB0ZWVuYWdlciB3aG8gZ290IGEgMTkgeWVhcnMgdG8gbGlmZSBzZW50ZW5jZSBmb3IgYnVybmluZyBhIG1hdHRyZXNzIGluIHRoZSBoYWxsd2F5IG9mIGhpcyBhcGFydG1lbnQgYnVpbGRpbmcsIHJlc3VsdGluZyBpbiB0aGUgc21va2UgaW5oYWxhdGlvbiBkZWF0aCBvZiBhbiBvZmZpY2VyIHdobyByZXNwb25kZWQgdG8gdGhlIHNjZW5lLiBIZSBhbHNvIGNpdGVkIHRoZSBjYXNlIG9mIEN5cnN0YWwgTWFzb24sIGFuIGV4IGZlbG9uIHdobyB3YXMgc2VudCBiYWNrIHRvIHByaXNvbiBmb3IgZml2ZSB5ZWFycyBhZnRlciB2b3RpbmcgaW4gdGhlIDIwMTYgcHJlc2lkZW50aWFsIGVsZWN0aW9uIHdoaWxlIG9uIHByb2JhdGlvbiAgIGFuIGFjdCBzaGUgc2F5cyBzaGUgZGlkbiBrbm93IHdhcyBpbGxlZ2FsLiBmcmF1ZCwgbW9uZXkgbGF1bmRlcmluZykganVzdCBhcmVuIHRha2VuIHNlcmlvdXNseSwgd3JvdGUgTG91aXMgTGF2ZXJvbmUsIGFuIGludGVybmF0aW9uYWwgZmluYW5jaWFsIGNyaW1lcyBhdHRvcm5leS4KVGhlIHJlYXNvbiBiZWluZyBpcyB0aGF0IG11Y2ggb2YgbXkgcmVndWxhciB3b3JraW5nIGxpZmUgaXMgcHJldHR5IHN0cmVzc2Z1bCBhbmQgSSBhbSBjb25zdGFudGx5IG9uIHRoZSBnby4gWW91IGNhbiBkbyBldmVyeXRoaW5nIHJpZ2h0LCBiZSBhIHN1cHBvcnRpdmUsIGxvdmluZywgY2FyaW5nIGFuZCB3b25kZXJmdWwgcGFydG5lciBpbiBldmVyeSB3YXkgYW5kIHN0aWxsIGdldCBjaGVhdGVkIG9uIGFuZCB0cmVhdGVkIGxpa2UgZGlydC5JIHNvcnJ5IHlvdSBhcmUgZ29pbmcgdGhyb3VnaCB0aGlzLiBJZiBpdCBoZWxwcyBhbnksIHBsZW50eSBvZiBwZW9wbGUgZ28gdGhyb3VnaCB0aGUgc2FtZSB0aGluZy4gClNoZSBldmVuIHdhbnRzIHRvIGRvIHRoZSByZXZlcnNlIGFuZCB3YXRjaCBtZSBmdWNrIGFub3RoZXIgd29tYW4uIApXaGljaCBicmluZ3MgbWUgdG8gdGhlIGVuZW15IHR5cGVzLiBJIGhhdmUgbWFqb3IgYW5kIG1pbm9yLiAKTm9uc2Vuc2UuIEkgZG9uIGJlbGlldmUgeW91IE1VU1QgYmUgYSB2ZWdhbiBpbiBvcmRlciB0byBiZWxpZXZlIGluIHRoZSBtZXNzYWdlIGFuZCBhZHZvY2F0ZSBmb3IgaXQuIFRoZXJlIGlzIG5vdGhpbmcgd3Jvbmcgd2l0aCBhZ3JlZWluZyB3aXRoIGEgcG9zaXRpb24gYWRtaXR0aW5nIHlvdXIgd2Vha25lc3MgYnV0IGFsc28gbWFrZSBpdCBjbGVhciB0aGF0IHlvdSBoYXZlIHRoZSBpbnRlbnRpb24gYW5kIGdvYWwgaW4gbWluZCBvZiBub3Qgc3VwcG9ydGluZyBhbmltYWwgZXhwbG9pdGF0aW9uLgpBZ2FpbnN0IEJ1cm5hYnkgU291dGgsIHRoZXkgaGVsZCBhIDQ5IDMxIGVkZ2UgaW4gcmVib3VuZGluZyBhbmQgaGFkIGp1c3QgZm91ciB0dXJub3ZlcnMgb24gdGhlIGdhbWUsIGNvbXBhcmVkIHRvIDEzIGZvciB0aGUgUmViZWxzLiBDcm93bnMgYXQgdGhlIHRvcCB0aWVyLCB3ZXJlIG1pc3NpbmcgNiBmb290IDEwIGZvcndhcmQgU2FzaGEgVnVqaXNpYywgYSBmaXJzdCBhbGwgc3RhciBhdCBsYXN0IHllYXIgdG91cm5hbWVudCB3aG8gaW5qdXJlZCBoaXMgbGVnIGluIHRoZSBsYXRlIHN0YWdlcyBvZiBhIDgxIDYwIHF1YXJ0ZXJmaW5hbCB3aW4gb24gVGh1cnNkYXkgb3ZlciB0aGUgTm8uIDEzIENlbnRlbm5pYWwgQ2VudGF1cnMgb2YgQ29xdWl0bGFtLi4gCkkgaGFkIG5vIHJlYXNvbiB0byBxdWVzdGlvbiB0aGUgYW1vdW50IG9mIHNvY2tzIHNoZSBldmVyIGhhcyBiZWNhdXNlIHdobyBwYXlzIGF0dGVudGlvbiB0byB0aGF0IGtpbmQgb2YgdGhpbmc/IFNoZSB0aG91Z2h0IEkgd291bGQgbm90aWNlIGFuZCB0aGluayBpdCB3YXMgd2VpcmQgc2luY2Ugc2hlIGRvZXNuIG93biBtYW55IHNvY2tzLiAKV2l0aCB2aXNpdG9ycyBzdHJlYW1pbmcgaW4gZnJvbSBhbGwgY29ybmVycyBvZiB0aGUgZ2xvYmUsIHRoZSBmb3VuZGVycyByZWFsaXNlZCB0aGF0IHRoZWlyIG9uY2Ugc21hbGwgYW5kIGluc2lnbmlmaWNhbnQgd2Vic2l0ZSBjb3VsZCBub3cgYmUgdHVybmVkIGludG8gYSBidXNpbmVzcy4gClRoaW5nIG51bWJlciB0d28gaXMgdGhhdCB0aGUgcnVsZXMgb2YgdGhlIGdhbWVzIG1heSBjaGFuZ2UgdGhlIGhvdXNlIGVkZ2UuIEJsYWNramFjayBpcyBhIG5pY2UgZ2FtZSB0byBzdGFydCB3aXRoLiBJdHMgaG91c2UgZWRnZSByYW5nZXMgZnJvbSAwLjI1JSB0byAyJS4uIApXaXRob3V0IHRoZSBQYWtpc3RhbiBhcm15IGFjdGl2ZWx5IGVuZ2FnZWQgaW4gdGhlIGJvcmRlciByZWdpb25zIGNhbGxlZCBGQVRBLCBBbWVyaWNhbiBhbmQgTkFUTyBmb3JjZXMgaW4gQWZnaGFuaXN0YW4gd291bGQgYmUgaGFyZCBwcmVzc2VkIHRvIHN1c3RhaW4gdGhlaXIgZ3JvdW5kLiAKU2tpbnRpZ2ggIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ28KSSB0aG91Z2h0IGFib3V0IHBpY2tpbmcgdXAgYSBob3VzZSBpbiB0aGUgbmVpZ2hib3Job29kIGFzIGFuIGludmVzdG1lbnQuIApJIHdvdWxkIGFsc28gbGlrZSB0byBrbm93IHRoZSBjaG9pciwgZm9yIG15IGRpY3RhdG9yc2hpcCBzcHJpbmdzIG9udG8gYSB0YXN0ZWxlc3MgcHJvamVjdCB3aXRoaW4gdGhlIHdpc2RvbS4gCldhbnRlZCB0aGlzIGJvb2sgdG8gcHJlc2VudCBhIGtpbmRlciBhcHByb2FjaCB0byBoZWFsdGhpZXIgbGl2aW5nLiBPbmUgdGhhdCB3YXMgYSBsaXR0bGUgbW9yZSBtaW5kZnVsIGFuZCBhIGxpdHRsZSBtb3JlIHJlYWwsIHNheXMgQmF0dGlzdGEuIApXaGF0IHdlc3Rlcm5lcnMgc2VlIGFzIG1hbnkgS29yZWFucyBzZWUgbW9yYWwgY2xlYW5zaW5nSSBzaG91bGQgaGF2ZSBjaG9zZW4gbXkgd29yZHMgYmV0dGVyIGFuZCBleHBsYWluZWQgbXkgdGhvdWdodHMgbW9yZSB0aG9yb3VnaGx5LiAKVGhhdCdzIGltcG9ydGFudCB0byBjb25zdW1lcnMgbGlrZSBTb3BoaSBSb2JlcnRzb24gb2YgVG9yb250bywgd2hvIGhhcyBiZWVuIHN0cml2aW5nIHRvIHByb2R1Y2UgemVybyB3YXN0ZSBzaW5jZSAyMDE2LgpJIHdhcyBub3QgcHJlcGFyZWQgZm9yIHRoaXMgYXQgYWxsLi4gClRoZXJlIGhhdmUgYmVlbiBwcm90ZXN0cyBhZ2FpbnN0IFRydW1wLCBhbmQgdGhlcmUgYmVlbiBhIGxvdCBvZiBjZWxlYnJpdHkgYW5kIG1lZGlhIGFuaW1vc2l0eSBmb2N1c2VkIHRvd2FyZHMgaGltLCBidXQgbm9ib2R5IHNob3QgaGltIHlldC4gSGUgaGFzbiBvdmVyc2VlbiBhIGNpdmlsIHdhciB5ZXQuIAoiVGhleSBhc3N1bWVkIGl0IHdhcyBnb25lIGZvcmV2ZXIuIApHdW5zbGluZ2VycywgcG9rZXIgcGxheWVycywgYW5kIGNoaWNrZW5zIDM6IERlY2lzaW9uIG1ha2luZyB1bmRlciBtZW50YWwgcGVyZm9ybWFuY2UgcHJlc3N1cmUgaW4ganVuaW9yIGVsaXRlIGF0aGxldGVzLiBJbjogV2lsc29uLCBNLiwgV2Fsc2gsIFYuIEFuZCBQYXJraW4sIEIuIApJIHJlYWxseSBjYW1lIGZvciBzdXBwb3J0IGZyb20gbXkgZmVsbG93IENocmlzdGlhbnMuIApJIG5lZWQgZ2xhc3NlcyB0byBzZWUgYW5kIG15IHBhcmVudHMgYXJlIG9mIGRpZmZlcmVudCByYWNlcyBhbmQgSSBhdHRyYWN0ZWQgdG8gcGVvcGxlIHJlZ2FyZGxlc3Mgb2YgZ2VuZGVyIGlkZW50aXR5LiBCdXQgSSB3YW50IHRvIGJlIHNlZW4gYXMgbm9ybWFsIGluIHRoZSBzZWNvbmQgc2Vuc2UsIGluIHRoZSBzZW5zZSB0aGF0IHRoZSB0aGluZ3Mgd2hpY2ggbWFrZSBtZSBkaWZmZXJlbnQgZG8gbm90IG1ha2UgbWUgbGVzc2VyLiAKVm9tIDEyLiBGZWJydWFyIGJpcyAxNi4gQXByaWwgMjAxNCBwcnNlbnRpZXJ0IGRhcyBMYSBMdW5hIFdlcmtlIGRlcyBwYWxtZXJpc2NoZW4gS25zdGxlcnMgSm9yZ2UgTWlyYW5kYS4gRmVicnVhciAyMDE0IHVtIDIwIFVociBpbSBMYSBMdW5hLCBDYWxsZSBGZXJubmRleiBUYW8gMjYsIGluIExvcyBMbGFub3MsIHN0YXR0LgpTaGFrZXMgaGVhZCBpbiBkaXNndXN0IHdoaWxlIHN0YW5kaW5nIHVwIGFuZCBsZWF2aW5nIHRoZSB0YWJsZS4uIApXZSB3YW50IHZhY2NpbmVzLCBidXQgd2UgYWxzbyB3YW50IHZhY2NpbmVzIHRvIGJlIGRpc3RyaWJ1dGVkIHByb3Blcmx5LiBJdCBsaWtlIHNheWluZyB0aGF0IHBlb3BsZSB3aG8gYXJlIGFnYWluc3QgdW5zYWZlIGZvb2QgcHJlcGFyYXRpb24gYXJlICJhbnRpIGZvb2QiLiBBYnN1cmQuLiAKJ0F0dGFjaGVkIGlzIGEgU1BSRUFEU0hFRVQgb2YgYWxsIHRoZSB0aW1lcyBoZSBoYXMgdHJpZWQgdG8gaW5pdGlhdGUgc2V4IHNpbmNlIEp1bmUgMXN0LCB3aXRoIGEgY29sdW1uIGZvciBteSAiZXhjdXNlcyIsIHVzaW5nIHZlcmJhdGltIHF1b3RlcyBvZiB3aHkgSSBkaWRuJ3QgZmVlbCBsaWtlIGhhdmluZyBzZXggYXQgdGhhdCB2ZXJ5IG1vbWVudC4gQWNjb3JkaW5nIHRvIGhpcyAnZG9jdW1lbnQnLCB3ZSd2ZSBvbmx5IGhhZCBzZXggMyB0aW1lcyBpbiB0aGUgbGFzdCA3IHdlZWtzLCBvdXQgb2YgMjcgImF0dGVtcHRzIiBvbiBoaXMgcGFydC4uIApZb3UgY291bGQgYWxzbyB0cnkgcGxheWluZyB0aGUgc291bmR0cmFjayBmcm9tIGFuIGVyb3RpY2FsbHkgY2hhcmdlZCBUViBzZXJpZXMgb3IgbW92aWUgaW4gdGhlIGJlZHJvb20gdG8gY3JlYXRlIGFuIGluc3RhbnRseSBpbnRlbnNlLCBoZWFkeSBhdG1vc3BoZXJlLCBvciBzZXQgdGhlIHNjZW5lIGZvciBzb21lIHJvbGUgcGxheS4KTGl6enl0aGVsaXp6YXJkMTIyICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KU21hbGwgUGxhbmUgU2tpZHMgT2ZmIFJ1bndheSBBdCBLZXkgV2VzdCBBaXJwb3J0IEEgc21hbGwsIHR3aW4gZW5naW5lLCBwcml2YXRlIGFpcmNyYWZ0IGV4cGVyaWVuY2VkIGdlYXIgZmFpbHVyZSBhbmQgc2tpZGRlZCBvZmYgdGhlIG5vcnRoIHNpZGUgb2YgdGhlIHJ1bndheSB3aGlsZSBsYW5kaW5nIFR1ZXNkYXkgbW9ybmluZyBhdCBLZXkgV2VzdCBJbnRlcm5hdGlvbmFsIEFpcnBvcnQuIApUaGlzIGNhciBwYXJrIHdhcyBzZXJpb3VzbHkgaGlnaCBhbmQgYW55b25lIHdobyBqdW1wZWQgZnJvbSBpdCBiZWZvcmUgaGFkIGFsd2F5cyBlbmRlZCB1cCBsaWtlIGplbGx5LiAKQ0VPIGFjY3VzZWQgb2Ygb2ZmZXJpbmcgcm9sZXMgaW4gbW92aWVzIGZvciBzZXgKV2hhdCBDRVMgMjAxNyBIYXMgVG8gT2ZmZXIgRm9yIFRlY2ggTG92ZXJzVGhlIE5ld2VzdCBUZWNoIEF0IFRoZVRoZSBJbnRlcm5hdGlvbmFsIENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgKENFUyAyMDE3KVRoZSBMRyBTbWFydCBJbnN0YVZpZXcgRG9vciBpbiBEb29yIHJlZnJpZ2VyYXRvciBpcyBkaXNwbGF5ZWQgZHVyaW5nIGEgTEcgcHJlc3MgZXZlbnQgZm9yIENFUyAyMDE3LihQaG90byBieSBEYXZpZCBCZWNrZXIvR2V0dHkgSW1hZ2VzKQpJIHJhbiBhIDUwayBpbiBEZWNlbWJlciBhbmQgSSBiZWVuIG1haW50YWluaW5nIGFib3V0IDQwIG1wdyB3aXRoIGEgMTUgbWlsZSBsb25nIHJ1biBzaW5jZS4gCkR1cmluZyB0aGUgZmVzdGl2aXRpZXMsIHRoZXJlIHdlcmUgZ2lmdCBiYWdzIGFuZCBmaXJlIGhhdHMgZm9yIHRoZSB5b3VuZ2VyIGd1ZXN0cywgYXMgY2xvd25zIG1hZGUgdGhlaXIgcm91bmRzIGVudGVydGFpbmluZyB0aGUgY3Jvd2RzIHdpdGggc2FmZXR5IHRoZW1lZCBhY3Rpdml0aWVzLgpBbHNvIHNob3BwaW5nIGFyb3VuZCBoYXMgYSBiaWdnZXIgcHJpY2UgdmFyaWFuY2UgaW4gS29yZWEgY29tcGFyZWQgdG8gb3RoZXIgY291bnRyaWVzIGltby4gCk9uY2UgR2VuLiBQYXR0b24gZ290IGludG8gdGhlIGZyYXkgd2l0aCBoaXMgM3JkIEFybXksIGl0IHdhcyBjbGVhciB0aGF0IHRoZSBBeGlzIHBvd2VycyBkYXlzIHdlcmUgZXZlbiBtb3JlIGxpbWl0ZWQgdGhhbiBoYWQgYmVlbiB0aG91Z2h0LiBDaG9vc2UgRk9MRCBBTkQgU0tJUCwuIApOb3QgdG8gbWVudGlvbiBmb2xrcyBwZXJjZWl2ZSBpdCBhcyBhYnVzZSBjb3MgaXQgZG9lcyBsb29rIGp1c3Qgc28gdmlzY2VyYWxseSBjcnVlbCAoZXZlbiB0aG91Z2ggaWYgZG9uZSBwcm9wZXJseSBpdCBub3QpLiAKVGhlcmUgaXMgYSBkaWZmZXJlbmNlIGluIEljZWxhbmRpYyBsYXcgYmV0d2VlbiBhIG1pZGRsZSBuYW1lIGFuZCBhIHNlY29uZCBnaXZlbiBuYW1lLiBNaWRkbGUgbmFtZXMgYXJlIHRoZSBzYW1lIGZvciBib3RoIGdlbmRlcnMgYW5kIGFyZSByZWFsbHkgdW5jb21tb24uIApEb24ndCBmb3JnZXQgdGhhdCBub3QgYWxsIGJyb3dzZXJzIHN1cHBvcnQgdGhlIHRlY2hub2xvZ2llcyBieSBkZWZhdWx0LiBZb3UgbWF5IGJlIGFza2VkIHRvIGRvd25sb2FkIGV4dHJhIHVwZ3JhZGVzIGZvciB0aGUgZ2FtZSB0byBydW4uIApJIHN0YXJ0ZWQgd2l0aCBub3RoaW5nLiBMZXNzIHRoYW4gbm90aGluZy4gRGVidC4gSSB3b3JrZWQgMyBqb2JzIHdpdGggdmlydHVhbGx5IG5vIHRpbWUgb2ZmIGZvciB5ZWFycyBqdXN0IHRvIHNhdmUgdXAgZW5vdWdoIHRvIHN0YXJ0IG15IG93biBidXNpbmVzcy4gTm8gb25lIGdhdmUgbWUgYSBwZW5ueSB0byBnZXQgc3RhcnRlZCwgbm8gYmFuayBsb2Fucy4gU29tZSB3ZWVrcyBJIHdlbnQgdG8gdGhlIGZvb2QgYmFuayBhcyBJIGhhZCBsaXR0bGUgZmluYW5jZXMgZm9yIGZvb2QuCllvdSBjYW4gZ2V0IHlvdXIgYmFsYW5jZSBvbiBsaW5lOyBob3dldmVyLCBJIGdldCBteSBiYWxhbmNlIHNlbnQgdG8gbXkgcGhvbmUgZGFpbHkgdmlhIGEgdGV4dCBtZXNzYWdlLiAKQSBmcmVlIHRyYWRlIGFncmVlbWVudCB3aGljaCB3YXMgb24gdGhlIGNhcmRzIGp1c3QgZ290IGhlbGQgYmFjay4gClByb3ZpbmcgaW50ZW50LiAKNjl0aCBhbmQgTHVkbG93IHN0cmVldHMsIFVwcGVyIERhcmJ5LiAKSXQgaXMgYmVjYXVzZSBhIGxvdCBvZiBhbHVtbmksIHdobyBwbGF5ZWQgbGFjcm9zc2UgYmFjayBpbiB0aGUgZGF5LCBhcmUgaGFwcHkgdG8gZG9uYXRlIGFzIGxvbmcgYXMgbGFjcm9zc2UgaXMgdGFrZW4gY2FyZSBvZi4gSXQgaXMgbm90IGp1c3QgYW4gZWNvbm9taWMgaXNzdWUuIElzIGFsc28gYW4gaXNzdWUgb2YgYW5kIGdlbmRlciBpbnNlY3VyaXR5IGFuZCBwcml2aWxlZ2UuLiAKRiBkIE1ycyBIZXJiZXJ0IE1lY2tsZXYsIGkgR2lsbGlvbi4gQmFsdGltb3JlLCBhbmQgSi4gQW4gcyBvZiBDYWhhbmksIExpbnRoaWN1bSBIZWlnaHRzLCBNYXJ5ICAiYW5kICBNcnMuIApGYWJieWZ1YnogIDcgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvClNvbWUgY29tbW9uIHNlbnNlIGFib3V0IFNhcmFoIFBhbGluICcgcyBoYWlyClNoZSBpcyBNcnMuIE1jRG9ubmVsbC4gCkZvciBleGFtcGxlLCBpZiB5b3UgbWlzdGFrZSBzb21lb25lIGluIHRoZSBncm9jZXJ5IHN0b3JlIGZvciBhbiBlbXBsb3llZSBvZiB0aGUgZ3JvY2VyeSBzdG9yZSBhbmQgZmluZCB5b3UgYXJlIG1pc3Rha2VuLCB5b3Ugc2hvdWxkIGFwb2xvZ2l6ZSBmb3IgaW5jb3JyZWN0bHkgcHJvZmlsaW5nIHRoZW0gYW5kIG90aGVyd2lzZSB3YXN0aW5nIHRoZWlyIHRpbWUuIEl0IGlzbid0IGEgaGVhdnkgbGlmdCB0byBoYXZlIGdvb2QgbWFubmVycyBhbmQgaXQgZ29lcyBhIGxvbmcgd2F5IGluIG1ha2luZyBhIHBlcnNvbiB3aG8gbWlnaHQgZmVlbCBvcHByZXNzZWQsIGZlZWwgYmV0dGVyLi4gCkZpY2hlIDEwIHN1ciBsYSBwcmVzY3JpcHRpb24gZGUgbCdhY3Rpb24gcHVibGlxdWUgZW4gY2xpcXVhbnQgc3VyIGxlIGxpZW4gY2kgZGVzc291cwpNaWNoYWVsIE5ld2Rvdywgb24gdGhlIHVzZSBvZiB0aGUgd29yZCAiR29kIiBpbiB0aGUgUGxlZGdlLCBhbmQgaW4gMjAwMiB0aGF0IGNvdXJ0IHVwaGVsZCBOZXdkb3cgY2FzZSwgZGVjaWRpbmcgaW4gaGlzIGZhdm9yIDIgMS4gClNvbWUgdGlwcyB0aGF0IHdpbGwgaGVscCB5b3Ugd2luIG9ubGluZSBwb2tlciB3aXRob3V0IGxvc2luZyBtdWNoIGRvdWdoIGJ5IHJldmVhbGluZyBteXRocyBhYm91dCBvbmxpbmUgcG9rZXIgc28gdGhhdCB5b3Ugc3RvcCBiYW5raW5nIG9uIHRoZW0uICBwb2tlciB3aW5zIHlvdSBtb3JlIGNhc2ggdGhhbiBsaXZlIHBva2VyLiAKSWYgeW91IGV2ZXIgbmVlZCB0byB1c2UgaW5kaXZpZHVhbCBpbnN1bGluIHN5cmluZ2VzLCBsb29rIGZvciBhIGxpdHRsZSBnYWRnZXQgdGhlcmUuIApJdCB3YXMgZ2VuZXJhbGx5IGEgcmF0aGVyIGltcGVyc29uYWwgYWZmYWlyLCBhbHRob3VnaCB0aGV5IGRvbiBjbGFpbSB0byBvZmZlciBhIGV4cGVyaWVuY2UgQWxzbywgd2hldGhlciBvciBub3QgdGhlIGxhZGllcyBhcmUgYWN0dWFsbHkgYmlzZXh1YWwsIGFuZCB0aGUgZmFjdCB0aGV5IGRvIHNvbWUgcHJldHR5IGRlbWVhbmluZyB0aGluZ3MgcHJvYmFibHkgYWZmZWN0cyB0aGVpciBlbnRodXNpYXNtIGZvciB0aGUgam9iLiBUaGUgb2xkZXIgd2FzIG9uZSBiZXR0ZXIsIHByZXN1bWFibHkgYmVjYXVzZSBzaGUgaGFkIG1vcmUgZXhwZXJpZW5jZSBhbG9uZyB0aGVzZSBsaW5lcy4gU2hlIGhhcmRseSBzdG9vZCBvdXQgYXMgYSB3YXJtLCB3b25kZXJmdWwgY2hhcmFjdGVyIGJ1dCBhdCBsZWFzdCBzaGUgd2FzIGNhcGFibGUsIHByb2Zlc3Npb25hbCBhbmQgaW50dWl0aXZlLiBUaGUgeW91bmdlciBvbmUgZGlkbiBzbWlsZSBvbmNlLCBzZWVtZWQgdW5jb21mb3J0YWJsZSB0byBiZSB0b3VjaGVkLCBhbmQgcGVyZm9ybWVkIGhlciBkdXRpZXMgaW4gYSBiYXNpYywgbWVjaGFuaWNhbCBmYXNoaW9uLiBJIGdpdmUgdGhlIG9sZGVyIG9uZSBhIDYvMTAgcmF0aW5nIGFuZCB0aGUgeW91bmdlciBvbmUgYSBtZXJlIDMuIE92ZXJhbGw6NC41LzEwClNpa290ICA4IHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvCk1hcmNoaW9ubmUgd2FzIGFwcG9pbnRlZCBGaWF0IGdyb3VwIENFTyBvbiBKdW5lIDEsIDIwMDQgYWZ0ZXIgdGhlIGFicnVwdCByZXNpZ25hdGlvbiBvZiBHaXVzZXBwZSBNb3JjaGlvLiBUd28gbW9udGhzIGxhdGVyLCBoZSBhbm5vdW5jZWQgYSByZXN0cnVjdHVyaW5nIHBsYW4gdGhhdCBzaG91bGQgdGFrZSBGaWF0IGdyb3VwIHRvIGEgZTEuNCAxLjggYmlsbGlvbiBuZXQgcHJvZml0IGluIDIwMDcuIExhc3QgeWVhciBGaWF0IGdyb3VwIG1hZGUgYSBlMS45NSBiaWxsaW9uIG5ldCBsb3NzLgpBbmQgSSBoZWFyZCB0aGVpciBzaWRlIG9mIHRoZSBzdG9yeSBhcyB0byB0aGVtIGJlaW5nIGFza2VkIHRvIG1vdmUgdG9vIHF1aWNrbHksIGluIG15IHZpZXcsIiBoZSBzYWlkLiAKQnV0IG9uZSBndXkgICBhbiBleHBlcnQgYnJvdWdodCBpbiBieSB0aGUgcGFydHkgdG8gc3BlYWsgdG8gYSBsb3Qgb2YgbmV3IGNhbmRpZGF0ZXMgICB3YXMgc2F5aW5nIGhvdyAieW91IGNhbiByZWFjaCB2b3RlcnMgYnkgYXBwZWFsaW5nIHRvIHRoZWlyIHNoYXJlZCB2YWx1ZXMuIiBUaGUgaWRlYSBiZWluZyB0aGF0OiAiVGhlIFJlcHVibGljYW4gdm90ZXIgd2FudHMgdGhlIHNhbWUgdGhpbmdzIHlvdSBkbywgdGhleSBqdXN0IG5lZWQgaXQgdG8gYmUgY291Y2hlZCBpbiB0aGVpciBsYW5ndWFnZS4gCkkgc28gc29ycnkgeW91IGdvaW5nIHRocm91Z2ggdGhpcyB0b28uIEl0IGp1c3QgaXNuIGZhaXIgdG8gYW55IG9mIHVzLgpJIGhhdmUgYSBkZWdyZWUgaW4gQ29tcHV0ZXIgRW5naW5lZXJpbmcgYW5kIG1hdGggaXMgbXkgc3Ryb25nIHBvaW50ICAgVEhJUyBXQVMgQSBUT1VHSCBCT09LIFRPIFJFQUQhIFRoZSByZWFzb24gaXQgd2FzIHRvdWdoIHdhcyBiZWNhdXNlIG9mIGFsbCB0aGUgbWF0aCBwcm9vZnMuIApJdCBnb2VzIG9mZi4gVGhlcmUgaXMgYSBsb3VkIGJhbmcgYW5kIGEgZmxhc2guIERpc3RhbnRseSB5b3UgaGVhciBzY3JlYW1pbmcgaW4gdGhlIGJhY2tncm91bmQuLiAKTldoYXQgZG8geW91IG1lYW4gaGUgcmVjb21tZW5kcyByZXBsYWNpbmcgaXQ/IEl0IGlzIGVpdGhlciBkZWZlY3RpdmUgYW5kIG5lZWRzIHJlcGxhY2luZyBvciBpdCBpc24ndC4gVGFrZSBpdCB0byBhbm90aGVyIFRveW90YSBkZWFsZXIgb3IgdHJ1c3RlZCBpbmRlcGVuZGVudCBhbmQgZ2V0IGEgc2Vjb25kIG9waW5pb24uIFNwZW5kIHRoZSBtb25leSBmb3IgYSBwcm9mZXNzaW9uYWwgZGlhZ25vc3RpY3MgYnkgc29tZW9uZSB3aG8ga25vd3Mgd2hhdCB0aGV5IGFyZSBkb2luZywgYW5kIHlvdSB3aWxsIGJlIG1vbmV5IGFoZWFkLiAKRXZlbiBpZiBWaWxsYWluIGlzIExBR0dZIGFuZCBjb3VsZCBoYXZlIGFueSB0d28gY2FyZHMsIHdlIHN0aWxsIG9ubHkgaGF2ZSBhIHNpbmdsZSBwYWlyIHRoYXQgaXMgdGhlIDR0aCBiZXN0IG92ZXJwYWlyLiAKSSB3ZW50IGFuZCBzYXQgYXQgYSB0YWJsZS4gCkkgdW5kZXJzdGFuZCB5b3VyIGNvbmNlcm5zLCBidXQgSSB5b3UgYXJlIG1pc3JlcHJlc2VudGluZyB3aGF0IGhhcHBlbmVkLiAKSSBxdWl0ZSBsaWtlZCBhIGNvY2t0YWlsIGJhciwgdGhlbiB0aGV5IGRpZCB0aGlzLiBTaXR0aW5nIGF0IHRoZSBiYXIsIGEgY29sbGVjdGlvbiBvZiAxNSAxOCB2ZXJ5IHBpc3NlZCwgbWFpbmx5IEVuZ2xpc2ggYW5kIEFtZXJpY2FuIHRoYXQgd2VyZSAiZG9pbmcgQ2hpbmEiIHdlcmUgdXNoZXJlZCBpbiBieSB0aGVpciB0b3VyIGdyb3VwIGxlYWRlciwgdG9sZCB0byBzaXQgYXQgdGhlIGJhY2sgYW5kIG5vdCBvYnN0cnVjdCB0b2lsZXRzLiAKVGhleSBndWFyYW50ZWUgdGhhdCB0aGV5IHdpbGwgYnV5IGNhcmRzIGZvciB0aGF0IHByaXplIGZvciBvbmUgd2Vlay4gCkhlIGhhZCByZWNvZ25pemVkIG1lIGFuZCBqdXN0IHNhaWQgdGhhdCB0aGV5IGFyZSBub3QgaW50ZXJlc3RlZCBpbiBjdXJpb3VzIHZpc2l0b3JzIHdhbGtpbmcgYXJvdW5kIHdpdGhvdXQgdGFraW5nIGEgbGFkeS4gCkFsc28sIFNwYW5pYXJkcyB0ZW5kIHRvIHdyaXRlIGluIG11Y2ggbG9uZ2VyIHJ1biBvbiBzZW50ZW5jZXMuIEkgYWx3YXlzIGhhdmluZyB0byB0ZWxsIG15IFNwYW5pc2ggc3R1ZGVudHMgdG8gYnJlYWsgdGhlaXIgcmVhbGx5IGxvbmcgc2VudGVuY2VzIGRvd24uClRoaXMgQ2EyKyBpbmZsdXggaXMgdGhvdWdodCB0byBiZSBpbXBvcnRhbnQgZm9yIGVuc3VyaW5nIHRoYXQgdGhlIG1lY2hhbmljYWxseSBnYXRlZCBjaGFubmVscyBvcGVyYXRlIHdpdGhpbiB0aGVpciBtb3N0IHNlbnNpdGl2ZSByZXNwb25zZSByZWdpb24sIHNldHRpbmcgdGhlIGZyYWN0aW9uIG9mIGNoYW5uZWxzIG9wZW4gYXQgcmVzdCwgYW5kIHBvc3NpYmx5IGZvciB0aGUgY29udGludWVkIG1haW50ZW5hbmNlIG9mIHN0ZXJlb2NpbGlhLiBTaW5jZSB0aGUgZXh0cmFjZWxsdWxhciBDYTIrIGNvbmNlbnRyYXRpb24gd2lsbCBhZmZlY3QgdGhlIGFtb3VudCBvZiBDYTIrIGVudGVyaW5nIGR1cmluZyBzdGltdWxhdGlvbiwgaXQgaXMgaW1wb3J0YW50IHRvIGRldGVybWluZSB0aGUgbGV2ZWwgb2YgdGhlIGlvbiBjbG9zZSB0byB0aGUgc2Vuc29yeSBjZWxscy4gClNoZSB3YXMgd29ya2luZyBvbiBzdHJlbmd0aGVuaW5nIG15IGhpcHMgYW5kIHF1YWRzIGJ1dCB0aG9zZSB3ZXJlbid0IHdlYWsgaW4gdGhlIGZpcnN0IHBsYWNlIHNvIEknbSBub3Qgc3VyZSB3aGF0IHRoZSBwb2ludCB3YXMuLiAKQWx0aG91Z2ggQUxMIHRoZSBnaXJscyBhcmUgZGVmaW5pdGVseSBiZWF1dGlmdWwgYW5kIHdvdWxkIGJlIGRlc2lyZWQgYnkgaGV0ZXJvIG1lbiBhbnl3aGVyZS50aGF0IHNhaWQsIGFzaGxleSB3YXMgYWxzbyBzYXlpbmcgb24gdHdpdHRlciB0aGF0IGNhZWx5bm4gc2hvdWxkIGdvdHRlbiBhIGdvb2QgZWRpdCBiYyBzaGUgdGhlIGZpcnN0IG1ldG9vIGNvbnRlc3RhbnQgYW5kIGlzIGJhc2ljYWxseSBvd2VkIGEgZ29vZCBlZGl0IGJjIG9mIGl0IC4gClBvaW50IDMuIEkgZG9udCB0aGluayB0aGUgd2FybWluZyBmcm9tIENvMiBpcyBhbnl3aGVyZSBuZWFyIHdoYXQgaXMgYmVpbmcgY2xhaW1lZC4gYW5kIG5hdHVyYWwgdmFyaWF0aW9uIHdpbGwgc3dhbXAgd2hhdGV2ZXIgY29udHJpYnV0aW9uIENvMiBkb2VzIGhhdmUuIEkgdGhpbmsgQ28yIHdpbGwgaW5ldml0YWJseSBmb2xsb3cgYSBwdXJlbHkgcGh5c2ljYWwgU3RlcGhlbiBCb2x0em1hbm4gZGVyaXZlZCBhbW91bnQsIHdoaWNoIHNob3VsZCBiZSBhYm91dCArIDEuMUMgZm9yIHRoaXMgZmlyc3QgZG91YmxpbmcuIFRoZSBzZWNvbmRhcnkgZm9yY2luZyBhcmUgZW50aXJlbHkgdGhlb3JldGljYWwgYW5kIHRoZSBldmlkZW5jZSBzbyBmYXIgaXMgbm90IGxvb2tpbmcgZ29vZCBmb3IgdGhlbS4KQ2FycnlpbmcgVGFzZXJzIGluY3JlYXNlcyBwb2xpY2UgdXNlIG9mIGZvcmNlLCBzdHVkeSBmaW5kcwoxMi8xOS8yMDE4IDA3OjA3IFBNIE1TVCAgIENocmlzdGlhbiBiYXNlZCB2aW55YXNhIGZsb3cuIEl0J3MgYW4gZXhlcmNpc2UgeW9nYSBjbGFzcywgZm9jdXNpbmcgb24gdGhlIGZpdG5lc3MgYXNwZWN0IG9mIHlvZ2EuIEZ1bGwgU3RvcnkKU2hvcHBpbmcsIGJlIGl0IHRoZSB3ZWVrbHkgZ3JvY2VyeSBzaG9wIG9yIGdvaW5nIHRvIHRoZSBsb2NhbCBtYWxsIChlc3BlY2lhbGx5IHdoZW4gUmljaGFyZCBuZWVkcyB0byBidXkgYSBuZXcgc3VpdCkuIENyb3dkcy4gClRoZSBuZXh0IHdheSB0byBzaG9wIGZvciBvbGQgY2FzaW5vIHBva2VyIGNoaXBzIHdoZW4gdHJ5aW5nIHRvIHNob3Agd2l0aGluIGEgYnVkZ2V0IGlzIHRvIGNoZWNrIG91dCBsb2NhbCB0aHJpZnQgc3RvcmVzIGluIHlvdXIgY29tbXVuaXR5LiBHb29kd2lsbCBhbmQgc2ltaWxhciB0eXBlcyBvZiBzdG9yZXMgaW4gdGhlIGNvbW11bml0eSBtYXkganVzdCBoYXZlIHNvbWUgYW50aXF1ZSBjaGlwcyBzaXR0aW5nIGFyb3VuZCB3aXRoIGEgZGVjZW50IHByaWNlIHRhZyBvbiB0aGVtISBNYW55IGNvbGxlY3RvcnMgaGF2ZSBiZWVuIGFibGUgdG8gbGFuZCBzb21lIGF3ZXNvbWUgZGVhbHMgYnkgc2ltcGx5IGluZHVsZ2luZyBpbiBzdG9yZXMgdGhhdCBzcGVjaWFsaXplIGluIHNlbGxpbmcgdXNlZCBpdGVtcy4gSXQgaXMgbGlrZWx5IHRoYXQgeW91IHdpbGwgYmUgYWJsZSB0byBkaXNjb3ZlciB0aGUgc2FtZSB0eXBlcyBvZiBkZWFscyEuIApTaGUnZCBoYXZlIHRvIGJlIHRvIHBhcnRpY2lwYXRlIGluIHdoYXQgc2hlIGRpZC4gSSBtZWFuLCB0aGUgdGltaW5nIGlzIGp1c3QgYXBwYWxsaW5nLiBBIG1hcnJpZWQgbWFuIHdob3NlIGZhbWlseSBpcyBkZWFsaW5nIHdpdGggYSBjaGlsZCdzIHZlcnkgc2VyaW91cyBoZWFsdGggY3Jpc2lzIGhhcyBhIGNyYXp5IG1vdGhlciB3aG8gdGVsbHMgdGhpcyBwb29yIGV4Y3VzZSBmb3IgYSBmZW1hbGUgdGhhdCBzaGUgaGFzIGEgY3V0ZSBtYXJyaWVkIHNvbiB3aG8gcmVhbGx5IG5lZWRzIHRvIGdldCBsYWlkLiAKSW4gbXkgcGVyc29uYWwgZXhwZXJpZW5jZXMsIHRoZSBwZW9wbGUgY29tcGxhaW5pbmcgdG8gbWUgdGhhdCB0aGV5IGNhbid0IG1vdmUgb3V0IG9mIHRoZWlyIHBhcmVudHMgaG91c2UgYXJlIHRoZSBwZW9wbGUgd2hvIGFyZSByZWFsbHkgYWR2ZXJzZSB0byBwZXJzb25hbCBzYWNyaWZpY2VzLCBzbyB0aGUgc2Vjb25kIHRoaW5ncyBzdGFydCBnZXR0aW5nIGEgYml0IHVuY29tZm9ydGFibGUsIHRoZXkgdGVsbCB0aGVtc2VsdmVzICJJIHNob3VsZG4ndCBoYXZlIHRvIGxpdmUgbGlrZSB0aGlzISIgYW5kIHRlbGwgdGhlbXNlbHZlcyB0aGV5J2xsIGp1c3QgInNhdmUgdXAiIGEgZmV3IG1vcmUgeWVhcnMgYXQgaG9tZSB3aXRoIG1vbSBhbmQgZGFkLiAKTWVyZGUgSSBsb3ZlIHRob3NlIE1hbm9sbyBGYXNoaW9uIHB1dCBpdCBhbGwgb24gbWUgRG9uJ3QgeW91IHdhbnQgdG8gc2VlIHRoZXNlIGNsb3RoZXMgb24gbWUgRmFzaGlvbiBwdXQgaXQgYWxsIG9uIG1lIEkgYW0gYW55b25lIHlvdSB3YW50IG1lIHRvIGJlICgyeCkgT2hoaCBPaGhoIExhIExhIExhIFdlIGxvdmUgZGVzaWduZXIgKDJ4KSBGYXNoaW9uIHB1dCBpdCBhbGwgb24gbWUgRG9uJ3QgeW91IHdhbnQgdG8gc2VlIHRoZXNlIGNsb3RoZXMgb24gbWUgRmFzaGlvbiBwdXQgaXQgYWxsIG9uIG1lIEkgYW0gYW55b25lIHlvdSB3YW50IG1lIHRvIGJlICg0eCAoRnVsbCBBbnN3ZXIpLiAKUGVyaGFwcyBpdCB3YXMgZHVlIHRvIGEgbW9yZSByZWNrbGVzcyBzdHlsZSwgb3IgbWF5YmUgdGhlIGNhcmQgdGFsZW50IHNpbXBseSBsaWVzIHdpdGggRmFiaW8gKEkgdGhpbmsgRmFiaW8gd291bGQgYWdyZWUgd2l0aCB0aGlzKSwgZWl0aGVyIHdheSwgdGhlIEx1b25nbyBzaG91bGQgYmUgaGFwcHkgd2l0aCB0aGVpciBlZmZvcnRzLiBBcyBvZiB0aGlzIHBvc3RpbmcsIEZhYmlvIGlzIHN0aWxsIGFsaXZlLCBzbyBJIHdpbGwgdXBkYXRlIHlvdSB3aXRoIGhpcyBmaW5hbCBwb3NpdGlvbiB3aGVuIGhlIGdvZXMgb3V0Li4gClJlYWxseSBhIGNvbXBsZW1lbnQgdG8gZXZlcnl0aGluZyBlbHNlIHRoYXQgZ29pbmcgb24gZG93bnRvd24uIApBbHNvOiBNeSBhdW50IGlzIHZlcmJhbGx5IGFidXNpdmUgdG8gbWUuIApNcyBXaGl0ZSBoYXMgdHJla2tlZCB0byBtb3N0IGNvcm5lcnMgb2YgdGhlIEFwcGxlIElzbGUgdG8gc3BydWlrIHRoZSBwb2xpY3ksIGFsb25nIHdpdGggYSAkNTYwIG1pbGxpb24gaGVhbHRoIHBhY2thZ2UgICBkdWJiZWQgaGVyIG51bWJlciBvbmUgcHJpb3JpdHkuIEZlZGVyYWwgTGFib3IgbGVhZGVyIEJpbGwgU2hvcnRlbiBmbGV3IGRvd24gZm9yIHRoZSBwYXJ0eSBMYXVuY2VzdG9uIGNhbXBhaWduIGxhdW5jaCBidXQgZGlkbiBiYWNrIE1zIFdoaXRlIGFudGkgcG9raWVzIHN0YW5jZSBvdXRyaWdodC4gCk9uY2UgWW91IFN0YXJ0IFNob3BwaW5nIGZvciBTY2hvb2wgU3VwcGxpZXNBZnRlciB5b3UgbmFycm93ZWQgZG93biB3aGF0IHlvdSBhY3R1YWxseSBuZWVkIHRvIGJ1eSBmb3IgdGhlIHN0YXJ0IG9mIHNjaG9vbCwga2VlcCB0cmFjayBvZiB3aGF0IHlvdSBib3VnaHQgYW5kIHdoZXJlIHlvdSBhdCBpbiByZWxhdGlvbiB0byB5b3VyIGJ1ZGdldC4gU29tZSBzdG9yZXMgZXZlbiBwcm92aWRlIGNsaXAgYm9hcmRzIHRvIHVzZSBhcyB5b3UgbWFrZSB5b3VyIHdheSB0aHJvdWdoIHRoZSBhaXNsZXMuIFBhcGVyLCBiaW5kZXJzLCBub3RlYm9va3MsIHJlcG9ydCBjb3ZlcnMvZHVvIHRhbmdzLCBwZW5jaWxzLCBwZW5zIGFuZCBlcmFzZXIsIGp1c3QgdG8gbmFtZSBhIGZldy4gCkluIHRoZSBjb2x1bW4gZnJvbSBsYXN0IE1hcmNoIE1jR3Vpcmsgc3RhdGVkIHRoYXQgIlRoZXJlIHdpbGwgYmUgdmVyeSBmZXcgdGVhbXMgdGhhdCBoYXZlIGFzIG11Y2ggdG8gc3BlbmQgaW4gdGhlIG1hcmtldHBsYWNlIG5leHQgd2ludGVyIGFzIHRoZSBBdGxhbnRhIEJyYXZlcy4iIE5vdyBpZiB0aGUgb2Zmc2Vhc29uIGVuZGVkIHRvZGF5IGl0J3MgaGFyZCB0byByZWFkIHRoYXQgYW5kIG5vdCBmZWVsIGNvbXBsZXRlbHkgbGllZCB0byBieSBUZXJyeSBNY0d1aXJrLiAKRm9yIG11bmljaXBhbGl0aWVzLCBmb3IgZXZlcnkgbmV3IG11bmljaXBhbCBydWxlIHRoYXQgY29tZXMgaW50byBmb3JjZSwgb25lIG5lZWRzIHRvIGJlIGVsaW1pbmF0ZWQgc28gdGhlIG5ldyBydWxlIGRvZXNuIGp1c3QgZ2V0IGFkZGVkIHRvIHRoZSBwaWxlLiBPbmUsIG9yIHNvbWV0aW1lcyBtb3JlLCBvdXQgZGF0ZWQgb3IgdW5uZWNlc3NhcnkgcnVsZXMgYXJlIGVsaW1pbmF0ZWQgYXQgdGhlIHNhbWUgdGltZS4uIAoyKSBTbGVlcCAgIDQgNSBob3Vycywgd2hhdCB5b3UgdXNlZCB0byBnZXQsIGlzIG9uIHRoZSB2ZXJ5IGxvdyBlbmQgb2YgdGhlIHNwZWN0cnVtLiBJZiB5b3UgYSB3b3VuZCB1cCBwZXJzb24sIGp1c3Qga25vdyB0aGF0IGFuZCB0YWtlIG1lYXN1cmVzIHRvIHNsb3cgeW91cnNlbGYgZG93bi4gQ2FuIHNsZWVwIHZlcnkgd2VsbCBvbiBTYXR1cmRheT8gQSBydW4gb3Igd2VpZ2h0cyBvciB3aGF0ZXZlciBjb3VsZCBoZWxwIGRlYWwgd2l0aCB0aGF0LiAKVGFrZSBBTEwgaW50ZXJuZXQgb3BpbmlvbnMgd2l0aCBhIGdyYWluIG9mIHNhbHQuIFdhdGNoIGV2ZXJ5dGhpbmcuIApTdXIgbGUgc2VjdGV1ciBNYXJjYWRldCwgb24gbm90ZSB1bmUgYW1saW9yYXRpb24sIG1haXMgdmlkZW1tZW50IGxlcyB2ZW50ZXMgaWxsaWNpdGVzIHNlIGRwbGFjZW50LiBBIENodGVhdSBSb3VnZSwgTGEgVmllIERlamVhbiBzb3VoYWl0ZSBhdm9pciB1biBwZXUgZGUgY2FsbWUgcGVuZGFudCBsJ29wcmF0aW9uICJQYXJpcyBSZXNwaXJlIiBkdSBzYW1lZGkgY2FyIGxlcyBhbmltYXRpb25zIHNvbnQgdHJzIGJydXlhbnRlcy4gRHUgY3QgZHUgcmVzcGVjdCBkZXMgaG9yYWlyZXMgZGUgbGl2cmFpc29uLCBwYXMgZGUgY2hhbmdlbWVudC4gCkJsYWNrIGhhcyA5IHBvaW50cyBpbiB0aGUgbGVmdCBib3R0b20sIDQgcG9pbnRzIGluIHRoZSBsZWZ0IHRvcCwgMTUgcG9pbnRzIGluIHRoZSB0b3AsIDIxIHBvaW50cyBpbiB0aGUgcmlnaHQsIGFuZCAzIGNhcHR1cmVzLiAKUG91ciBub3RyZSBwYXJ0LCBsJ2ltbWVuc2l0IGRlIGxhIHN1cmZhY2UgZGFsbGUgbm91cyBwYXJhaXNzYWl0IHRyZSB1bmUgY2F1c2UgcG9zc2libGUgZGUgZnJhZ2lsaXQuIApUaGF0IHllYXIsIHRoZSBGbGFtZXMgc2Vjb25kICBhbmQgdGhpcmQgbGVhZGluZyBzY29yZXJzIHdlcmUgSm9obm55IEdhdWRyZWF1IGFuZCBTZWFuIE1vbmFoYW4sIHRoZW4gaW4gdGhlaXIgcm9va2llIGFuZCBzZWNvbmQgc2Vhc29ucyByZXNwZWN0aXZlbHkuIEJyb2RpZS4gCkkgZm91bmQgaXQgbGVkIG1lIHRvIGRldmVsb3AgYSBtdWNoIGxpZ2h0ZXIgdG91Y2ggYWxzbywgd2hpY2ggaXMgbmljZS4gCldoYXQgL3IvcG93ZXJsaWZ0aW5nIGlzbiBpcyBub3QgYSBwbGFjZSBmb3IgcXVlc3Rpb25zIHRoYXQgY2FuIGJlIGFuc3dlcmVkIHZpYSBhIHF1aWNrIGdvb2dsZSBzZWFyY2guCk15IGh1c2JhbmQgaXMgYWxzbyBncmVhdCBhdCBwaWNraW5nIHVwIHdoZW4gSSBhbSBhYm91dCB0byBoYXZlIGFuIGFueGlldHkgYXR0YWNrIGFuZCBoZSBpcyB2ZXJ5IGdvb2QgYXQgZGlzdHJhY3RpbmcgbWUgd2l0aCBzdHVwaWQgc3R1ZmYuIEkgaGF2ZSBhIGh1Z2Ugc2Vuc2Ugb2YgaHVtb3IgKGlyb25pY2FsbHkgZW5vdWdoLCBodW1vciBpcyBob3cgSSBjb3BlIHdpdGggdGhpbmdzKSwgYW5kIGhlIGlzIGdvb2QgYXQgbWFraW5nIG1lIGxhdWdoIGFzIGEgZGlzdHJhY3Rpb24uCkhlcmUgdGhlIHRoaW5nOiB5b3Ugd2VyZSB3cm9uZy4gQnV0IHlvdSByZWFsaXplIHRoYXQuIE1heWJlIG5leHQgdGltZSB5b3UgaGF2ZSBhbiBvcHBvcnR1bml0eSB0byB1c2UgeW91ciBwbGF0Zm9ybSB0byBzcHJlYWQgYSBtZXNzYWdlLCB5b3Ugd29uIHVzZSBpdCB0byBzaGFtZSBhbmQgYmVsaXR0bGUgdGhvc2Ugd2hvIHlvdSBkaXNhZ3JlZSB3aXRoLiBNYXliZSBuZXh0IHRpbWUgeW91IHdpbGwgYmUgbW9yZSBlbXBhdGhldGljIHRvIG5vdCBvbmx5IHRob3NlIHlvdSB0b2xkIGFyZSBkaXNlbmZyYW5jaGlzZWQsIGJ1dCBhbHNvIHRob3NlIHdobyB5b3Ugc2ltcGx5IGRvbiB3YW50IHRvIGxpc3RlbiB0by4gTWF5YmUgbmV4dCB0aW1lIHlvdSB3aWxsIGxpc3RlbiB0byBwb2xpY2llcyBzdHJhaWdodCBmcm9tIHRoZSBob3JzZSBtb3V0aCwgYW5kIGtlZXAgYSBjcml0aWNhbCBleWUgb24gdGhlIHZhbGlkaXR5IG9mIHdvdWxkIGJlIHNjYW5kYWxzLCByYXRoZXIgdGhhbiBqdXN0IGNvbnN1bWluZyBhbmQgcmVndXJnaXRhdGluZyB0aG9zZSBhcyB0aGV5IGFyZSBnaXZlbiB0byB5b3UgZnJvbSBwbGFjZXMgd2hvIHByb2ZpdCBmcm9tIHRlbGxpbmcgeW91IHdoYXQgeW91IHdhbnQgdG8gaGVhci4gV2Ugd2lsbCBhbGwgYmUgc3Ryb25nZXIgdG9nZXRoZXIsIGFuZCB5ZXQgdGhlIGNhbXBhaWduIChhbmQgcGVvcGxlIGxpa2UgeW91KSB3aG8gcHJvbW90ZWQgdGhhdCBtZXNzYWdlIHdlcmUgbm90aGluZyBidXQgZGl2aXNpdmUgdGhpcyBwYXN0IHllYXIuClBlb3BsZSBwaW5pbmcgYW5kIGJpdGNoaW5nIGZvciBsb290Ym94ZXMgYXJlIHdoeSBnYW1lcyBhcmUgZ29pbmcgdG8gc2hpdC4gQnV0IEkgZ2V0IGl0LCB5b3UganVzdCBIQVZFIHRvIGhhdmUgdGhhdCBzdXBlciBzaGlueSBza2luIGZvciB5b3VyIGd1biBpbiBvcmRlciB0byBoYXZlIGZ1bi4gSGF2ZSB5b3UgZXZlciBjb25zaWRlcmVkIG5vdCBnaXZpbmcgYSBzaGl0IGFib3V0IGNvc21ldGljcz8gSSBoYXZlbid0IHBhaWQgZm9yIGEgc2luZ2xlIGZ1Y2tpbmcgbG9vdGJveCB3aXRoIGFjdHVhbCBtb25leSBzaW5jZSB0aGV5IHN0YXJ0ZWQgYmVjb21pbmcgYnVzaW5lc3MgYXMgdXN1YWwuIApSZWNvZ25pemUgYmVpbmcgc2V4dWFsbHkgYXR0cmFjdGVkIHRvIHBlb3BsZSBpbiB0d28gd2F5cy4gT25lIGlzIGEgbGl0ZXJhbCBwaHlzaWNhbCByZWFjdGlvbiAgIEkgY2FuIGZlZWwgbXkgdmFnaW5hbCBtdXNjbGVzIHRpZ2h0ZW4gYW5kIGFkanVzdCwgbGl0ZXJhbGx5LCB3aGVuIEkgYXJvdW5kIGFuZCBsb29raW5nIGF0LCBvciB0aGlua2luZyBhYm91dCwgc29tZW9uZSBJIHJlYWxseSBhdHRyYWN0ZWQgdG8uIEkgY2FuIGFsc28gZmVlbCBteSBoZWFydCBzcGVlZCB1cCBoYXJkLiBUaGUgb3RoZXIgc2lnbiBpcyBvYnNlc3NpdmUgdGhvdWdodHMgYWJvdXQgdG91Y2hpbmcgdGhlbSBhbmQgdGhlbSB0b3VjaGluZyBtZSB3aGljaCBjYW4gZmVlbCBoYXJkIHRvIGNvbnRyb2wuCktpZHMgb2YgY291cnNlIHdpbGwga25vdyBhbmQgbG92ZSB0aGVpciBwYXJlbnRzIHRoZSBtb3N0LCBidXQgaXQgc2FmZSB0byBzYXkgdGhhdCB0aGVpciBwcmltYXJ5IGNoaWxkY2FyZSBwcm92aWRlciB3aWxsIGJlIHRlYWNoaW5nLCBib25kaW5nLCBhbmQgaGF2aW5nIGEgc3Ryb25nIGluZmx1ZW5jZSBvbiB0aGVtIGFzIHdlbGwuLiAKSGVyZSBpcyBhbnN3ZXJlZCB0aGUgcXVlc3Rpb24sICJIb3cgbWFueSBMYWR5IEdhR2Egc29uZ3MgYXJlIHRoZXJlPyIgSXQgd2lsbCBpbmNsdWRlIHRoZSBvZmZpY2lhbCBzb25ncywgInVucmVsZWFzZWQiIHNvbmdzLCBzb25ncyBmZWF0dXJpbmcgTGFkeSBHYUdhICJkdXBsaWNhdGUiIHBlcmZvcm1hbmNlcyB3aGljaCBhcmUgdW5pcXVlIHdpdGhpbiB0aGVtc2VsdmVzIGJ5IGxpc3RpbmcgZWFjaCBvbmUgYmVsb3cuIApUaGVuIGdvIGZyb20gdGhlcmUuIFNoZSBtYXkgaGF2ZSBzb21lIGV4cGxhbmF0aW9uIHlvdSB0aGluayBpcyByZWFzb25hYmxlLCBidXQgc3RpbGwgY2hlY2sgYmFjayBpbiBhdCBhIGxhdGVyIHRpbWUgYW5kIHNlZSBpZiB0aGluZ3MgaGF2ZSBjaGFuZ2VkLiBTaGUgbWF5IGFsc28gc2F5IHNvbWV0aGluZyB0aGF0IGluZGljYXRlcyB0aGVyZSBpcyBhIHByb2JsZW0gKHdoZXRoZXIgdGhhdCdzIHN5bXB0b21zIG9mIGFuIGVhdGluZyBkaXNvcmRlciBvciBzb21ldGhpbmcgZWxzZSwgbGlrZSBzaGUncyBoYXZpbmcgZGlnZXN0aXZlIHByb2JsZW1zIGZyb20gYSBsb3Qgb2YgZm9vZHMpLiBJbiB0aGF0IGNhc2UsIHNob3cgeW91ciBzdXBwb3J0IGFuZCBvZmZlciB0byBsb29rIGZvciBoZWFsdGhjYXJlIGFzc2lzdGFuY2UgdG9nZXRoZXIuIEF0IHRoYXQgcG9pbnQsIGEgc2VyaW91cyBjb252ZXJzYXRpb24gd2l0aCB5b3VyIHBhcmVudHMgaXMgbmVlZGVkLiBJZiB0aGV5IGFyZW4ndCBnb2luZyB0byBsb29rIGFmdGVyIGhlciB3ZWxsYmVpbmcsIGl0J3MgZ29pbmcgdG8gdGFrZSBtb3JlIHN1cHBvcnQgYW5kIHN0cmF0ZWdpemluZyBvbiB5b3VyIHBhcnQgdG8gZ2V0IHlvdXIgc2lzdGVyIGhlbHAuIEkgdXNlZCB0byBoYXRlIG15IGJvZHkgYW5kIHdvbmRlciB3aGVuIGFuZCB3aGF0IGNoYW5nZXMgSSB3b3VsZCBoYXZlIHRvIG1ha2UgdG8gbG92ZSBteSBib2R5LiBJbnN0ZWFkLCBJIGZvdW5kIHNvbWUgcGVhY2UgdGhyb3VnaCBhIGRpZmZlcmVudCBwYXRoICBkZWNpZGluZyBteSBib2R5IGlzIHdoYXQgaXQgaXMsIGl0J3Mgb25seSBvbmUgdGlueSBwYXJ0IG9mIHdobyBJIGFtLCBhbmQgSSdtIGdvaW5nIHRvIHRyeSB0byBmb3JnZXQgYWJvdXQgaXQgbW9zdCBvZiB0aGUgdGltZS4gV2hhdCBkbyB5b3UgYnJpbmcgdG8gdGhlIHdvcmxkIHRoYXQgaXNuJ3QgeW91ciBhcHBlYXJhbmNlPwpJUkwgSSBkb24gaGF2ZSBtYW55IHdyaW5rbGVzLiAKSGlzIGRheXMgaW4gVmFuY291dmVyIGFyZSBkb25lLgpUaGUgc2hlZXIgc2NhbGUgb2YgdGhlIHVuaXZlcnNlIGlzIHdoYXQgbGVhZHMgbW9zdCB0byBiZWxpZXZlIHRoZXJlIGlzIHByb2JhYmx5IGxpZmUuIApIaWF0YWwgaGVybmlhIGlzIGEgY29uZGl0aW9uIHRoYXQgb2NjdXJzIHdoZW4gYSBwb3J0aW9uIG9mIHRoZSBzdG9tYWNoIHByb3RydWRlcyB1cHdhcmQgaW50byB0aGUgY2hlc3QgY2F2aXR5IHRocm91Z2ggYW4gb3BlbmluZyBpbiB0aGUgZGlhcGhyYWdtLiBUaGUgc3BhY2UgY3JlYXRlZCBtYWtlcyBmb29kIGFuZCBzdG9tYWNoIGFjaWRzIGZsb3cgaW50byB0aGUgZXNvcGhhZ3VzLCBjYXVzaW5nIGhlYXJ0YnVybiBhbmQgcGFpbiBpbiB0aGUgY2hlc3QuIEhlcmUgaXMgaG93IHRvIHRyZWF0IGEgaGlhdGFsIGhlcm5pYToKSW50ZW50aW9uYWwgYXQgbGVhc3QuIApJdCdzIGVhc3kgdG8gaWRlbnRpZnkgQ2hpbGVzJ3MgUGluZSBBdmVudWUgUmVzdG9yYXRpb24gUHJvamVjdCBidWlsZGluZ3M6IExvb2sgZm9yIHRoZSBicm9hZCBzZWNvbmQgZmxvb3IgcG9yY2hlcyBvZiB0aGUgcmVzaWRlbmNlcyBhYm92ZSB0aGUgc2hvcHMsIHdoaWNoIGNvbnN0aXR1dGUgdGhlIEFubmEgTWFyaWEgR3Vlc3QgSG91c2VzLiBBbm90aGVyIGNsdWUgaXMgdGhlIHNvdW5kIG9mIHNwbGFzaGluZyBhbmQgY2hpbGRyZW4gbGF1Z2hpbmc7IGVhY2ggZ3Vlc3QgaG91c2UgaW5jbHVkZXMgYSBzbWFsbCBoZWF0ZWQgcG9vbCBpbiB0aGUgYmFjay4KV2hhdCBmb2xsb3dzIGlzIGEgdHJpcCB0aHJvdWdoIHRoZSBoZWFydCBvZiBkYXJrbmVzcyBhcyBoZXIgbWluZCBkZXNjZW5kcyBpbnRvIHRoZSBtYWRuZXNzIG9mIGRlbHVzaW9uIGFuZCBwYXJhbm9pYS4gQWJhbmRvbmVkLCBhbG9uZSwgZGlzY29ubmVjdGVkIGZyb20gZXZlcnl0aGluZyB0aGF0IGdpdmVzIGhlciBsaWZlIG1lYW5pbmcgb3VyIGhlcm9pbmUgbXVzdCBnbyBob21lIHRocm91Z2ggdGhlIHdlbGwgbGl0IHN0cmVldHMgYW5kIHRoZSBoZWxsaXNoIGxhbmRzY2FwZXMgb2YgaGVyIHBzeWNoZSBhcyBoZXIgbWluZCBjb25qdXJlcyB1cCBuaWdodG1hcmlzaCBhcHBhcml0aW9ucyBvZiBnYXRvcnMgaW4gdGhlIGZvcm0gb2Ygc3VjY3VsZW50IGJpZyBicmVhc3RlZCBkZW1vbnMgYW5kIG9yZGluYXJ5IHdoaXRlIG1lbi4gCjEyKSBJdCB0YWtlcyAzIG1vbnRocyBmb3Igb3VyIGJvZGllcyB0byBlbGltaW5hdGUgbWVyY3VyeSwgYW5kIDggeWVhcnMgdG8gZWxpbWluYXRlIFBDQnMuCkh0cG9IendnQnV1dSB1CklzIHRoZXJlIGFueSByZWFsIHNvbHV0aW9uIHRvIExvbmRvbiBvbmdvaW5nIGpvYiBjcmlzaXM/IEl0IGEgcXVlc3Rpb24gd2UgYmVlbiBhc2tpbmcgZm9yIG1vcmUgdGhhbiBhIGRlY2FkZSwgbGlrZSBtYW55IG90aGVyIENhbmFkaWFuIGNpdGllcy4gQW5kIHRoZSBsb25nZXIgd2Ugd2FpdCBmb3IgYW5zd2VycywgdGhlIG1vcmUgZGF0YSBiZWNvbWVzIGF2YWlsYWJsZSByZW1pbmRpbmcgdXMganVzdCBob3cgc2VyaW91cyB0aGUgc2l0dWF0aW9uIGlzIGJlY29taW5nLgpUaGUgcGF5b3V0IGZvciBibGFja2phY2sgZGVwZW5kcyBvbiBtYW55IHNtYWxsIHZhcmlhdGlvbnMgb2YgdGhlIHJ1bGUuIFNvbWUgb2YgdGhlc2UgcnVsZXMgdGhhdCBzaG91bGQgYmUgZ2l2ZW4gY29uY2VybiBhcmU6IGhvdyBtYW55IGRlY2tzIG9mIGNhcmRzIGFyZSBiZWluZyB1c2VkPyBDYW4gYSBwbGF5ZXIgZG91YmxlIGFuZCBzcGxpdCBiZXRzIG9uIGZldyBoYW5kcz8gRG9lcyB0aGUgZGVhbGVyIHBlYWsgZm9yIGJsYWNramFjayBiZWZvcmUgdGhlIHBsYXllcnM/IENhbiB0aGUgcGxheWVyIHN0aWxsIHN1cnJlbmRlciB3aGVuIHRoZSBkZWFsZXIgaGFzIGFuIGFjZSBmb3IgYW4gdXAgY2FyZD8uIApJdCBub3QgYSBnb29kIGxvb2sgZm9yIGEgcmVzdGF1cmFudCB0aG91Z2gsIHNpbmNlIHlvdSB3aWxsIGluZXZpdGFibHkgaGF2ZSBmYWxzZSBwb3NpdGl2ZXMuLiAKQXMgYSBFdXJvcGVhbiwgaXQgYWxzbyBhIGJ5cHJvZHVjdCBvZiB0aGUgbGFja2luZyBBbWVyaWNhbiBtYXRlcm5pdHkgbGVhdmUuIEkgZ2V0IGdvb3NlYnVtcHMgdGhpbmtpbmcgYWJvdXQgZ29pbmcgYmFjayB0byB3b3JrIGF0IDggd2Vla3MgcG9zdCBwYXJ0dW0uIApXaGVuIGhlIHdhbnRzIHRvIGRvIHRoYXQgaW4gZnV0dXJlLCBoZSBrbm93cyB0aGF0IHRoYW5rcyB0byBteSBpbmNvbWUgYW5kIGxvdmUgb2Ygd29ya2luZyB0aGF0IGhlIHdvbid0IGhhdmUgdG8gd29ycnkgYWJvdXQgb3VyIHdlbGxiZWluZyBvciBmaW5hbmNlcy4gVmVyeSwgdmVyeSBmZXcgbWVuIGdldCB0byBsaXZlIHRoaXMgbGlmZXN0eWxlIGFuZCBJJ20gdGhhbmtmdWwgSSBjYW4gcHJvdmlkZSBoaW0gd2l0aCB0aGUgb3Bwb3J0dW5pdHkgdG8gaGF2ZSBzbyBtdWNoIGZyZWVkb20uLiAKU2xvdWNoaW5nIGF0IGEgZGVzayBmb3IgcHJvbG9uZ2VkIHBlcmlvZHMgb2Z0ZW4gcmVzdWx0cyBpbiBsb3dlciBiYWNrIHBhaW4uIFJlcGV0aXRpdmUgbW90aW9uIGluanVyaWVzLCBzdWNoIGFzIGNhcnBhbCB0dW5uZWwgc3luZHJvbWUsIGFyZSBjb21tb24gYW1vbmcgb2ZmaWNlIHdvcmtlcnMuIApUaGVyZSBhIHZlcnkgdm9jYWwgd2luZyBvZiBUcnVtcCBzdXBwb3J0ZXJzIHRoYXQgaGF0ZSAiUEMgY3VsdHVyZS4iIFRoZXkgZmVlbCB0aGF0IHRoZXkgY2FuIHNheSBqb2tlcyB3aXRob3V0IHNvbWVvbmUgZ2V0dGluZyBvZmZlbmRlZC4gCkltbWVkaWF0ZWx5IHNlbGVjdCBFWElUR0FNRSwuIEJhY2sgYXQgdGhlIG1haW4gbWVudS4gClRvZGF5LCB0aGVyZSdzIG1vcmUgZGVtYW5kIHRoYW4gZXZlciBmb3IgaGlnaGx5IHNraWxsZWQgZnJvbnRsaW5lIHByYWN0aXRpb25lcnMuIE5IQSBpcyBtZWV0aW5nIHRoYXQgZGVtYW5kIGJ5IG9mZmVyaW5nIGV4YW1zIGFjY3JlZGl0ZWQgYnkgVGhlIE5hdGlvbmFsIENvbW1pc3Npb24gZm9yIENlcnRpZnlpbmcgQWdlbmNpZXMgKE5DQ0EpLiBJdCBpcyBvdXIgYmVsaWVmIHRoYXQgdG9nZXRoZXIsIE5IQSwgc2Nob29scyBhbmQgZWR1Y2F0b3JzLCBwcm92aWRlcnMgYW5kIGFsbGllZCBoZWFsdGggcHJhY3RpdGlvbmVycyBjYW4gdHJhbnNmb3JtIGhlYWx0aGNhcmUgdGhyb3VnaCBlZHVjYXRpb24sIHRyYWluaW5nIGFuZCBjZXJ0aWZpY2F0aW9uLCB3aXRoIHRoZSBnb2FsIG9mIGNvbnNpc3RlbnRseSBpbXByb3ZpbmcgcGF0aWVudCBvdXRjb21lcy4uIApMYWR5IEdhZ2Egd2FzIG5vdCBkaWFnbm9zZWQgd2l0aCBicmVhc3QgY2FuY2VyLCBzaGUgd2FzIGRpYWdub3NlZCB3aXRoIGEgYnJhaW4gdHVtb3Igb24gTWFyY2ggMzFzdCAyMDEyLiBUaGUgc2luZ2VyIGlzIGV4cGVjdGVkIHRvIGFubm91bmNlIHRoZSBjYW5jZWxsYXRpb24gb2YgaGVyIHVwY29taW5nIHRvdXIgdG9kYXksIHNvIHNoZSBjYW4gZm9jdXMgb24gcmVjZWl2aW5nIHRyZWF0bWVudC4gVGhlIEZhbWUgd2VudCB0byBudW1iZXIgb25lIGluIGNvdW50cmllcyBzdWNoIGFzIHRoZSBVbml0ZWQgS2luZ2RvbSwgQ2FuYWRhLCBBdXN0cmlhLCBHZXJtYW55LCBTd2l0emVybGFuZCBhbmQgSXJlbGFuZCAuIFNoZSBIYXMgMSBBbGJ1bS4gVGhlIEZhbWUgTW9uc3RlciBpcyBhbiBFUC4gQWx0aG91Z2ggVGhlIEZhbWUgTW9uc3RlciBpcyBub3QgYWxzbyAxIGluIFVTIEJpbGxib2FyZC4gVGhlIEZhbWUgTW9uc3RlciBXZW50IEFsc28gMSBvbiBEYW5jZS9FbGVjdHJvbmljIEFsYnVtcyBvbiBCaWxsYm9hcmQgVVMuIEJ1dCBub25lIGluIFVTIEJpbGxib2FyZC4gd2hpY2ggaXMgYSBtYWpvciBmYWlsLiAoRnVsbCBBbnN3ZXIpClRoaXMgY2hpbGQgd2FzIG5ldmVyIHByb3NlY3V0ZWQgYmVjYXVzZSBoZSB3YXMgYmVsb3cgdGhlIGFnZSBvZiBjcmltaW5hbCByZXNwb25zaWJpbGl0eS4uIApUaGlzIGlzIG5vdCBteSBvcGluaW9uLCB0aGlzIGlzIHNpbXBseSBpbmNvcnJlY3QuIApOb3QgYSBzdGFydGVyIG9yIGFueXRoaW5nLCBidXQgYSBzZXJ2aWNlYWJsZSByb2xlIHBsYXllci5TdXJwcmlzaW5nbHkgb3ZlciB0aGUgcGFzdCA0IGdhbWVzIGhlIGhhcyB0aGUgdGhpcmQgYmVzdCArICBvbiB0aGUgdGVhbS4gCkkgdGhpbmsgU3RvbmUncyBhcnJlc3QganVzdCBvcGVuZWQgdXAgYW5vdGhlciBsZXZlbCBvZiBjcmltZXMgYW5kIGltcGxpY2F0ZWQgYSBncmVhdGVyIG51bWJlciBvZiBwZW9wbGUgd2hpbGUgc2ltdWx0YW5lb3VzbHkgY29uZmlybWluZyBldmVyeXRoaW5nIE11ZWxsZXIgaGFzIGFscmVhZHkga25vd24uIApBbnkgdGltZSBzaGUgdGhyZWF0ZW5zIG9yIGNvbW1pdHMgcGh5c2ljYWwgdmlvbGVuY2UsIEkgd291bGQgYWR2aXNlIHlvdSB0byB0ZWxsIGhlciBjYWxtbHkgKGFuZCBhdCBhIGRpc3RhbmNlKSwgIkkgbm90IGxlYXZpbmcgb3VyIHJlbGF0aW9uc2hpcCwgYnV0IHRoaXMgc2l0dWF0aW9uIGlzIHVuc2FmZSwgc28gSSBhbSBnb2luZyB0byBsZWF2ZSB1bnRpbCB0aGUgc2l0dWF0aW9uIGlzIHNhZmUgZm9yIG1lLiAKVGhlcmUgYXJlIGNvbmNlcm5zIGFib3V0IGluY3JlYXNpbmcgZW52aXJvbm1lbnRhbCBjb250YW1pbmF0aW9uIG9mIGNlcnRhaW4gZmlzaC4KQXQgZmlyc3QgbGlnaHQsIHRoZSBwcmlzb25lcnMgd2VyZSBib3VuZCB0b2dldGhlciBpbiBncm91cHMgb2YgdGVuIGFuZCBicm91Z2h0IG91dCBvZiB0aGVpciBwcmlzb25zLiBCZWxpZXZpbmcgdGhleSB3ZXJlIGFib3V0IHRvIGJlIHRyaWVkIGFuZCB0aGVpciB1bndhcnJhbnRlZCBncmlldmFuY2VzIGhlYXJkLCB0aGUgU2Vwb3lzIHdlcmUgdW51c3VhbGx5IGRvY2lsZS4gQnV0IHdoZW4gdGhlIHNob3RzIGJlZ2FuIHRvIHJpbmcgaW4gdGhlIHN0aWxsIG1vcm5pbmcgYWlyLCBhbmQgdGhleSBzdWRkZW5seSBkaXNjb3ZlcmVkIHRoZSByZWFsIGFuZCBhd2Z1bCBmYXRlIHRoYXQgYXdhaXRlZCB0aGVtLCB0aGV5IHdlcmUgZmlsbGVkIHdpdGggYXN0b25pc2htZW50IGFuZCByYWdlLi4gCkhlIHdhcyBsaXRlcmFsbHkgb24gYSByYWRpbyBzaG93IFRISVMgTU9STklORyBzYXlpbmcgdGhhdCB3aGF0ZXZlciB0ZWFtIGhlIHdlbnQgdG8gaGUgd2FzIGdvaW5nIHRvIHJlcXVlc3QgbW9yZSBtb25leS4uIApBbHNvIHdvcnRoIG5vdGluZzogdGhlIG1vZGVybiB3b3JsZCBjaHVybnMgb3V0IHBlb3BsZSBhcyB3aXNlIGFzIFBsYXRvLCBhcyBzbWFydCBhcyBBcmNoaW1lZGVzLCBhbmQgYXMgcG9saXRpY2FsbHkgc2F2dnkgYXMgUGVyaWNsZXMgZXZlcnkgd2Vlay4gCk15IGJvb2sgQW5hbCBTZXggU2VjcmV0cyBpcyBhIGd1aWRlIHRvIGdyZWF0IGFuYWwgc2V4IGZvciBib3RoIGFuYWwgc2V4IGJlZ2lubmVycyBhbmQgZm9yIGNvdXBsZXMgd2hvIGFyZSBzZWFyY2hpbmcgZm9yIG5ldyB0aGluZ3MgdG8gdHJ5LiAKQWxzbywgSSByZW1lbWJlciBDaHJpc3RpbmUgR3JlZ29pcmUgc2lnbnMganVzdCBzYWlkICJDaHJpcyBHcmVnb2lyZSIgb24gdGhlbSBvbmUgeWVhci4gSXQgd2FzIGxpa2Ugc2hlIHdhcyB0cnlpbmcgdG8gY29uZnVzZSBwb3NzaWJseSBzZXhpc3Qgdm90ZXJzIGludG8gdGhpbmtpbmcgc2hlIG1pZ2h0IGJlIGEgZHVkZS4gVGhlIHR5cGUgb2YgcGVvcGxlIHRoYXQgbWlnaHQgdm90ZSBiYXNlZCBvbiBhIG5hbWUuIAoiQ29uZ3Jlc3NtZW4sIENvbmdyZXNzIHBlb3BsZSwgdGhleSBuZWVkIHRvIHRoaW5rIGFib3V0IGZhbWlseSBmaXJzdCwiIHNoZSBzYXlzLiAiVGhlIGZhbWlseSBpcyB0aGUgcGlsbGFyIG9mIHNvY2lldHkuCkJ1dCB1bHRpbWF0ZWx5ICJvdXIgdGFyZ2V0IGRlbW9ncmFwaGljIGlzIG1vcmUgbGlmZXN0eWxlIGRlZmluZWQgICBwZW9wbGUgd2hvIGFyZSBhY3RpdmUsIHdobyB0cmF2ZWwuIApDb250cmFyeSB0byB0aGUgYXNzdW1wdGlvbiB0aGF0IFQuIEouIE1heHggc2VsbHMgb3ZlcnN0b2NrIG9yIGRpc2NhcmRzIGZyb20gZmFuY3kgZm9vZHMgc3RvcmVzLCBsaWtlIFdpbGxpYW1zIFNvbm9tYSBvciBNYWN5J3MsIFQuIApXaGlsZSBBc2hsZXkgd2FzIHNob3dlcmluZyBzaGUgbm90aWNlZCBhIG1hbiByZWFjaGluZyB0aHJvdWdoIHRoZSBiYXRocm9vbSB3aW5kb3cgd2l0aCBhIG1pcnJvciEhISBUaGV5IGhhZCB0d28gbWVhbHMgaW4gRGVsaGkgYW5kIHNhdyBtaWNlIGluIHRoZSByZXN0YXVyYW50cy4gCk1laXN0ZXIgVmVyZmhyZXIgTmVpbCBTdHJhdXNzIHplaWd0LCB3aWUgTWFubiBpbiBudXIgMzAgVGFnZW4gbGVybnQsIGplZGUgRnJhdSB6dSBlcm9iZXJuLiAKSSBoYXZlIG5ldmVyIGVuY291bnRlcmVkIG9uZSB0aGF0IHdhc24ndCB0cnlpbmcgdG8gcmlwIG9mZiBhbm90aGVyIGRvZ3MgZmFjZS4gSSBob25lc3RseSBkb24ndCB3YW50IHRoZW0gYW55d2hlcmUgbmVhciBtZSBvciBteSBkb2cuIApTaW5jbGFpciBNY0NsZWxsYW4gaGFkIGd1ZXN0cyBpbiB0byB0ZWEgdGhpcyB3ZWVrIHRvIG1lZXQgTXJzLiAKR2Fjb3JsZXkgIDExIHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvCkluIGEgd29ybGQgbGVhZGluZyB0byBhIHNvY2lldGFsIGluZnJhc3RydWN0dXJlIHdpdGhvdXQgY29ycG9yYXRpb25zLCB5b3UgbXVzdCBraWxsIHRoZW0gb2ZmIHRocm91Z2ggb3RoZXIgdGVjaG5vbG9naWVzLCB0aGF0IGlzbiBoeXBlcmJvbGUuIFRoYXQgcmVhbGx5IGlzIHRoZSBvbmx5IHdheSB0byBtb3ZlIHRvIHBlZXIgdG8gcGVlci4gSSBoYXZlIG5vIGlkZWEgaG93IG9uZSBiZWxpZXZlcyB0aGF0IHByaWNlcyBhcmUgZ29pbmcgZG93bi4gRmliZXIgY2FtZSB0byBteSBhcmVhLiAKSXRzIG5vdCBuZWNlc3NhcmlseSB0aGUgcHJvYmxlbSB0aGF0IHlvdSB0b29rIHRoYXQgZ2FwLCBpdHMgdGhhdCB5b3VyIG1pbmRzZXQgaXMgdG8gYmUgaW4gdGhhdCBtdWNoIG9mIGEgcnVzaC4gWWVzLCBub2JvZHkgd2FudHMgdG8gc2l0IGFyb3VuZCBiZWhpbmQgYSBjcnVpc2VyIGFsbCBkYXksIGJ1dCBnZXR0aW5nIGRlc3BlcmF0ZSBlbm91Z2ggdG8gcGFzcyBsaWtlIHRoYXQgbWVhbnMgeW91cmUgZ29pbmcgdG8gYmUgbG9va2luZyBmb3IgZ2FwcyB0aGF0IGFyZSBxdWVzdGlvbmFibGUgYXQgYmVzdC4uIApDaW5kZXJlbGxpZTcgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyMiBkYXlzIGFnbwpEZXBlbmRpbmcgb24gdGhlIHdlYW5pbmcgcHJvZ3Jlc3MsIHNoaWZ0aW5nIGZyb20gbWlsayBhbmQgc29mdCBmb29kcyB0byBtaW5jZWQgbWVhdCwgZGVhZCBtaWNlIGFuZCBjaGlja3Mgd2lsbCBoYXBwZW4gYmV0d2VlbiB0aGUgMTB0aCB0byAxNHRoIHdlZWtzLi4gCkJ1eSBhIGNoaXAgcGFja2FnZSAoUGxlYXNlIG5vdGUgdGhpcyBvcHRpb24gaXMgb25seSBhdmFpbGFibGUgYXMgYW4gaW50cm9kdWN0b3J5IFZJUCBvZmZlciwgaWYgeW91IGhhdmUgYmVlbiBhIFZJUCBiZWZvcmUgeW91IG11c3QgY2FzaCBpbiB0aGUgMSBNaWxsaW9uIENoaXBzKSBPbmNlIHlvdSBoYXZlIGRvbmUgdGhpcywgY2xpY2sgdGhlIGdvbGQgVklQIFRhYmxlcyB0YWIgb24gdGhlIG1haW4gcG9rZXIgcGFnZSB0byB0YWtlIGFkdmFudGFnZSBvZiB0aGlzIHBlcmtzIGZpbGxlZCBmZWF0dXJlLiBBcyBhIFZJUCwgeW91J2xsIGJlIGFibGUgYWNjZXNzIHRvIG91ciBWSVAgdGFibGVzLCBnZXQgZnJlZSBkcmlua3MsIGJlbmVmaXQgZnJvbSBpbmNyZWFzZWQgZGFpbHkgY2hpcCBib251c2VzIGFuZCBzaG93IG9mZiB5b3VyIHN0YXR1cyBhdCB0aGUgdGFibGVzLiAKT25lIHN0cmF0ZWd5IGZvciBhbiBhY2NlbGVyYXRlZCByZWNvdmVyeSBpcyB0byB1c2UgY29sZCB3YXRlciB0aGVyYXB5IGFmdGVyIHlvdXIgd29ya291dCB0byBoZWxwIGNsZWFyIGluZmxhbW1hdG9yeSBiaW9sb2dpY2FsIG1hcmtlcnMgc3VjaCBhcyBjcmVhdGluZSBraW5hc2UgYW5kIHRoZSBjeXRva2luZXMuIEEgcmVjZW50IHN0dWR5IGZvdW5kIHRoYXQgdXNpbmcgYSBjb2xkIHdhdGVyIGJhdGggYXQgNTBGIGZvciAxNSBtaW51dGVzIGhlbHBzIHJlc3RvcmUgbWF4aW1hbCBzdHJlbmd0aCBhZnRlciBoaWdoIGludGVuc2l0eSB0cmFpbmluZyBiZWNhdXNlIGl0IGhlbHBlZCBsb3dlciBpbmZsYW1tYXRpb24gYW5kIGZhY2lsaXRhdGUgbXVzY2xlIHJlcGFpci4gSWNlIG9yIGNvbGQgd2F0ZXIgdGhlcmFweSBzaG91bGQgYWxzbyBiZSB1c2VkIGZvbGxvd2luZyBpbmp1cnkgdG8gZGVjcmVhc2UgdGhlIGluZmxhbW1hdG9yeSByZXNwb25zZSBmb3IgZmFzdGVyIGhlYWxpbmcgYW5kIHJlcGFpci4uIApJdCBwcm9iYWJseSB3b24ndCBwYXkgeW91IGFueXRoaW5nLCBidXQgeW91IGNvdWxkIGRvIGl0LiAKSSBPYmxpZ2F0aW9ucyBvZiBTdGF0ZXMgYW5kIHBvIDEgbGl0aWNhbCBzdWJkaXZpc2lvbnMgOTIsODMwLjU5CldoYXQgYXJlIHRoZSBoaWdocz8gV2hhdCBhcmUgdGhlIGxvd3M/ICIgVmFuIFNhbnQgYXNrZWQgUm9ieW4uIApTbywgd2hhdCBpcyB1cCBhbmQgd2h5IGRvZXMgaXQgbWF0dGVyPyBTY2FsZSB1cHMsIGFjY29yZGluZyB0byB0aGUgT3JnYW5pemF0aW9uIGZvciBFY29ub21pYyBDbyBvcGVyYXRpb24gYW5kIERldmVsb3BtZW50IChPRUNEKSwgYXJlIGRlZmluZWQgYXMgZW50ZXJwcmlzZXMgd2l0aCBhdmVyYWdlIGFubnVhbGl6ZWQgZ3Jvd3RoIGdyZWF0ZXIgdGhhbiAyMCBwZXIgY2VudCBwZXIgYW5udW0sIG92ZXIgYSB0aHJlZSB5ZWFyIHBlcmlvZCwgYW5kIHdpdGggMTAgb3IgbW9yZSBlbXBsb3llZXMgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgb2JzZXJ2YXRpb24gcGVyaW9kLiBOb3cgd2Uga25vdy4gV2h5IHNob3VsZCB3ZSBjYXJlPyBUaGVzZSBzY2FsZSB1cHMgYWNjb3VudCBmb3IgbGVzcyB0aGFuIGZpdmUgcGVyIGNlbnQgb2YgYWxsIENhbmFkaWFuIGZpcm1zLCBidXQgY3JlYXRlIG1vcmUgdGhhbiA1MCBwZXIgY2VudCBvZiBhbGwgbmV3IGpvYnMuIApJJ20gbm90IHN1cmUgaWYgeW91IG1lYW50IHRoYXQgdG8gcmVidXQgd2hhdCBJIHNhaWQgc29tZWhvdywgYnV0IGl0IGRpZG4ndCByZWFsbHkgYWRkcmVzcyBpdC4gCkRvIHlvdSBoYXZlIHRoZSBzdG9uZXMgeW91cnNlbGY/IE1hbnkgaW5kZXBlbmRlbnQgamV3ZWxlcnMgY2FuIGNyZWF0ZSBjdXN0b20gd29yay4gRXZlbiBzb21lIG9mIHRoZSBsYXJnZXIgbmFtZXMgZG8gYXMgd2VsbC4gQnV0IGkgd291bGQgc3VnZ2VzdCBsb29raW5nIHRocm91Z2ggYSBwb3J0Zm9saW8gaWYgeW91IGFyZSBnb2luZyB0b3RhbGx5IGN1c3RvbS4KQnV0IEkgcmVtaW5kZWQgb2YgYWxsIHRoZSB3b25kZXJmdWwgcGVvcGxlIHdobyBJIGhhdmUgaGFkIHRoZSBwcml2aWxlZ2UgdG8gbWVldCwgdG8gbGl2ZSB3aXRoLCB0byB3b3JrIHdpdGgsIHRvIHRlYWNoLCB0byBpbnNwaXJlIGFuZCBhbGwgdGhvc2Ugd29uZGVyZnVsIHNvdWxzIEkgaGF2ZSBub3QgbWV0IGJ1dCBJIGtub3cgZXhpc3QgYW5kIHdvdWxkIGxvdmUgdG8gbWVldC4gCkZyb20gdGhlIHBlcnNwZWN0aXZlIG9mIGdvdmVybmFuY2UsICBoYXMgdGFrZW4gcGFpbnMgdG8gYXZvaWQgYmVjb21pbmcgYSBuYW5ueSBzdGF0ZSB3aXRoIGEgZGVwZW5kZW5jeSBjdWx0dXJlIGJ1dCBpdCBpcyBub3QgYW4gdW5jYXJpbmcgY2FwaXRhbGlzdCBuYXRpb24uIEZvciBpbnN0YW5jZSwgaXRzIENlbnRyYWwgUHJvdmlkZW50IEZ1bmQgKENQRikgc3lzdGVtIGFuZCBob3VzaW5nIHBvbGljeSBoYXZlIGdpdmVuIGFucyBlY29ub21pYyBzZWN1cml0eS4gVGhvdWdoIGluY29tZSBpcyBub3QgZXF1YWxseSBkaXN0cmlidXRlZCBpbiAgaXQgY2FuIGJlIHNhaWQgdG8gYmUgYW4gZWNvbm9taWNhbGx5IHByb3NwZXJvdXMgYW5kIHJlbGF0aXZlbHkgc2FmZSBjb3VudHJ5LgpJbiBtb3N0IHBva2VyIHN0b3JlcywgeW91IHdpbGwgZmluZCB0aGVzZSBwcm9kdWN0cyBhdmFpbGFibGUgZm9yIHB1cmNoYXNlLiBUaGUgc3RvcmVvd25lcnMga25vdyB2ZXJ5IHdlbGwgdGhhdCBwZW9wbGUgYXJlIGRlZmluaXRlbHkgZ29pbmcgdG8gY29tZSBlYWNoIHNpbmdsZSBkYXkgYW5kIG1ha2UgcHVyY2hhc2VzIHdpdGhvdXQgZXZlbiBhbnkgYWR2ZXJ0aXNlbWVudHMgZm9yIHRoZXNlIHByb2R1Y3RzLiBUaGF0J3Mgd2h5IHN0b3JpbmcgdGhlc2UgcHJvZHVjdHMgYXJlIGRlZmluaXRlbHkgc2FmZXIgdGhhbiB0aGUgb3RoZXJzLiAKUmV3YXJkIGJlZm9yZSBtYWtpbmcgYSBiZXQuIApBbHRob3VnaCBoZSB3b24ndCBzdGFydCBhcyB0aGUgY2hpcCBsZWFkZXIsIGl0J3MgaGFyZCBub3QgdG8gcGljayBOZXdob3VzZSBhcyBvbmUgb2YgdGhlIGhlYXZ5IGZhdm91cml0ZXMgdG8gd2luIGluIE5vdmVtYmVyLi4gClRvZGF5IGhpcyB0ZWFtIGFyZSBkaXZpc2lvbiBjaGFtcGlvbnMuIFRoZSBsb29rIG9uIGhpcyBmYWNlIGlzIHdvcnRoIGV2ZXJ5IHBlbm55LiBBIG1pc2NvbmNlcHRpb24gdGhhdCBJIHNhdyBpbiB0aGUgY29tbWVudHMgb2YgYSBwb3N0IG9uIHJlZGRpdCBhd2hpbGUgYWdvIGhhZCBwZW9wbGUgdGFsa2luZyBhYm91dCBob3cgbW9zdCBob2NrZXkgcGxheWVycyBjb21lIGZyb20gdXBwZXIgY2xhc3MgZmFtaWxpZXMuIApIZXkganVzdCBmb3VuZCB5b3VyIHNpdGUgYWZ0ZXIgMyBtb250aHMgb2YgdHJhdmVsbGluZyBzb3V0aGVhc3QgYXNpYSBhbmQgd2lzaCBJIHdvdWxkIGhhdmUgZm91bmQgaXQgZWFybGllci4gSSBhbSBsb29raW5nIGZvciBzb21lIGFkdmljZSBhcyB3ZSBoYXZlIGp1c3Qgb3ZlciAxIG1vbnRoIGxlZnQgYW5kIHdpbGwgYmUgZmx5aW5nIGZyb20gS0wgdG8gQmFsaS4gSSBkb250IGxvdmUgdGhlIG92ZXIgdG91cmlzdHkgdmliZSB0aGUgYmFsaSBpcyBrbm93biBmb3IgYnV0IGl0cyBhIGNoZWFwIGZsaWdodC4gCk1vc3QgcGVvcGxlIHdobyBjcml0aWNpemUgaGVyIG9yIGZyZWFrIG91dCBvdmVyIGhlciBtZXRob2QgaGF2ZSBub3QgYWN0dWFsbHkgcmVhZCBoZXIgYm9va3Mgb3IgZXZlbiB3YXRjaGVkIGhlciBzaG93LiBJdCBhY3R1YWxseSBhbGwgb3ZlciByZWRkaXQ7IGFuIE9QIHdvdWxkIHBvc3QgYWJvdXQgaG93IHRoZXkgZGlzYWdyZWUgd2l0aCB0aGUgS29uTWFyaSBtZXRob2QgYW5kIHRoZSB0b3AgY29tbWVudCB3b3VsZCBpbnZhcmlhYmx5IGJlIGFib3V0IGhvdyBPUCBjb21wbGV0ZWx5IG1pc3VuZGVyc3Rvb2QgaXQgYW5kIGhvdyBpZiB5b3UgcmVhZCBhbnkgb2YgaGVyIGJvb2tzLCB5b3Ugd291bGQga25vdyBiZXR0ZXIuIFRoZXkgc2VlbiBhIG1lbWUgaGVyZSwgYSBnaWYgdGhlcmUgYW5kIGRlY2lkZWQgdGhhdCBUSElTIFdPTUFOIElTIEEgTU9OU1RFUiBXSE8gV0FOVFMgVE8gUk9CIE1FIE9GIE1ZIFBSSVpFRCBQT1NTRVNTSU9OUyEhIEhvdyBpcm9uaWMgaXMgaXQgdGhhdCB0aGVzZSBzbyBjYWxsZWQgYm9vayBsb3ZlcnMgZGlkbiBib3RoZXIgdG8gcmVhZCBhbnkgb2YgaGVyIGJvb2tzIGFuZCBpbnN0ZWFkIGp1ZGdlIGhlciBiYXNlZCBvbiBhIGdpZj8/IElmIHRoYXQgdGhlIGtpbmQgb2YgYm9vayBsb3ZlciB5b3UgYXJlLCBtYXliZSB5b3UgcmVhbGx5IHNob3VsZCBnZXQgcmlkIG9mIHlvdXIgYm9va3MgYWx0b2dldGhlci4uIApGciB1bnNlcmUgR3N0ZSBzb2xsIGRpZXNlcyBIb3RlbCBlaW4gcGVyZmVrdGVyIFJja3p1Z3NvcnQgYW4gZGVyIE5vcmRzZWUgd2VyZGVuLCBpbiBkZW0gbWFuIHNpY2ggdm9tIEFsbHRhZyBlcmhvbGVuIHVuZCBlbnRzcGFubmVuIGthbm4iLCBzYWd0IGRpZSBFaWdlbnRtZXJpbiBDbGF1ZGlhIEdlcmxhY2gsIGRpZSBtaXQgZGVtIGVoZW1hbHMgYWxzIFZpZXIgSmFocmVzemVpdGVuIHZvbiBJaHJlbSBWYXRlciBlcmJhdXRlbiBIb3RlbCwgZ2xja2xpY2hlIEtpbmRoZWl0c2VyaW5uZXJ1bmdlbiB2ZXJiaW5kZXQuIApMZXQgbWUgZWxhYm9yYXRlIGV2ZW4gZnVydGhlci4gSSBwcmV0dHkgc3VyZSB0aGVyZSBhcmVuIHN0dWRpZXMgZG9uZSBvbiBzdHJlc3MgaW4gY2F0cyBhbmQgZG9ncyBmb3IgY2hhc2luZyBsYXNlciBwb2ludCBsaWdodHMuIEJ1dCBldmVyeSBldm9sdXRpb25hcnkgcHN5Y2hvbG9naXN0IHdvcnRoIHRoZWlyIHNhbHQgaXMgcmVhc29uYWJseSBjb25jZXJuZWQgYWJvdXQgZG9pbmcgaXQgZnJlcXVlbnRseSBhbmQgbm90IGxldHRpbmcgdGhlIGxpZ2h0IHZhbmlzaCBvbiBzb21ldGhpbmcgdGhlIHBldCBjYW4gcGh5c2ljYWxseSBzbmF0Y2guIApUaGlzLiBUaGUgT1AgcHV0IGEgcmVxdWVzdCBvbiB0aGUgZGF1Z2h0ZXIgZm9yIHBob25lIGNhbGxzIGFuZCBleHBlY3RzIGhlciB0byBmb2xsb3cgaGVyIHJlcXVlc3QsIGJ1dCByZWZ1c2VzIHRvIGRvIHdoYXQgdGhlIGRhdWdodGVyIGFza3MuIFdoZW4gbXkga2lkcyBhcmUgdXBzZXQsIG15IHF1ZXN0aW9uIHRvIHRoZW0gaXMgd2hhdCBkbyB5b3UgbmVlZCwgaG93IGNhbiBJIGhlbHAgeW91PyBJZiBteSBjaGlsZCBhc2tlZCBtZSB0byBnbyB0byBzb21ldGhpbmcgdG8gc2F2ZSBvdXIgcmVsYXRpb25zaGlwLCBJIHdvdWxkIGRvIGl0IGluIGEgaGVhcnRiZWF0LiAKU3RldmVuIGhhZCBkZXRhaWxlZCBrbm93bGVkZ2Ugb2YgdGhlIEFTWSBhbmQgc3Vycm91bmRpbmcgZW52aXJvbnMuCkNhc2lubyBDb21wcyBhbmQgVGlwcGluZyB0aGUgRGVhbGVycwpUaGUgcHJvYmxlbSB3aXRoIGhpZ2ggcmF0ZWQgc2l0ZXMgaXMgdGhlaXIgbWVtYmVycyBtYXkgYmUgYSB3aG9sZSBsb3QgYmV0dGVyIHRoYW4geW91IGlmIHlvdSBhcmUgYSByb29raWUuIFRyeSB0byBsb29rIGZvciB0aGlyZCBwYXJ0eSByZXZpZXdzIG9mIHRoZSBzaXRlIGlmIHlvdSBjYW4uCk1heWJlIHNvbWVvbmUgdGhhdCBzdGFydGVkIHRoZXNlIHJ1bGVzIGRpZG4ndCBoYXZlIHRoaXMgc2NpZW5jZSBvciB0ZWNobm9sb2d5IHRvIGRvIHRoaXMgaW4gdGhlaXIgZXJhIGFuZCBub3cgdGhleSdyZSBzYXlpbmcgImlmIEkgZGlkbid0IGhhdmUgaXQgaW4gbXkgdGltZSBubyBvbmUgY2FuLiIgT3Igc29tZSBLYXJlbiB0aGF0IGhhcyBuZXZlciBwbGF5ZWQgYSBkYXkgb2Ygc3BvcnRzIGluIGhlciBsaWZlLi4gCkhhcHBlbnMgaXMgdGhhdCB0aGUgcGl4ZWwgYXBwZWFycyB2ZXJ5IGJyaWdodC4gQnV0IGFsbCBzZW5zb3JzIGhhdmUgYSBsaW1pdCBvbiBob3cgbXVjaCBicmlnaHRuZXNzIHRoZXkgY2FuIGltYWdlLiAKU291cmNlcyBzYXkgQ29sZW1hbiAicHJvdGVzdCIgcmVzaWduYXRpb24gYW5kIHRoZSBmb3VuZGF0aW9uIG9uZ29pbmcgcHJvYmxlbXMgd2l0aCB0aGUgcmVndWxhdG9yIGNhdXNlZCBzaWduaWZpY2FudCBkaXNxdWlldCBhbW9uZyB0aGUgZm91bmRhdGlvbiBmaW5hbmNpYWwgYmFja2VycywgYW1iYXNzYWRvcnMgYW5kIHNvbWUgYm9hcmQgbWVtYmVycy4gV2FybmUsIHdobyBpbml0aWFsbHkgZGVuaWVkIENvbGVtYW4gd2FzIGxlYXZpbmcsIGxhdGVyIGNvbmNlZGVkIHRoZSBmb3VuZGF0aW9uIHdhcyAibG9va2luZyBhdCBhbGwgb3B0aW9ucyBidXQgbm90aGluZyBoYXMgYmVlbiBkZWNpZGVkIi4gCk5vdyB0YWtlIHRoaXMgcHJlZmVyZW5jZSB0byB0aGUgZXh0cmVtZSBhbmQgYWRkIHNvbWUgZG9nbWF0aXNtIHRoZW4geW91IGdvdCB5b3Vyc2VsZiBhIGNsYXNzaWMgIllvVXIgQXRUYUNrT25JekluRyBNZSIgYnkgdGhlbiBldmVuIG90aGVyIHBlb3BsZSBjaG9pY2UgcHJlZmVyZW5jZSBvZmZlbmRzIHRoZW0uIApXaGlsZSBJIGFncmVlIHdpdGggeW91LCBJIHdhbnQgdG8gcG9pbnQgb3V0IHRoYXQgYSBCZXJuaWUgU2FuZGVycyBmb3IgUHJlc2lkZW50IHJ1biBpcyBiYXNpY2FsbHkgaW5zdXJhbmNlIHRoYXQgVHJ1bXAgd2lsbCB3aW4gcmUgZWxlY3Rpb24uIEkgdG9vIHdhbnQgdG8gc2VlIHRoZSBjb3VudHJ5IGdvIGJhY2sgdG93YXJkcyB0aGUgZGlyZWN0aW9uIE9iYW1hIHdhcyB0YWtpbmcgdXMgYW5kIEkgaGFkIGhvcGVkIEhpbGxhcnkgd291bGQgY29udGludWUgdG8gdGFrZSB1cyBvbi4gCkRlYXIgREQgMTQgeWVhciBvbGQsIEJvdGggbWUgYW5kIG15IGZyaWVuZCB3ZXJlIEREJ3MgYXQgZm91cnRlZW4uIApEb2VzIGEgc3RyYWlnaHQgYmVhdCBhIGZsdXNoClRoZSB3b3JzdCBvZiBhbGwgd29ybGRzICAgd2hlbiB5b3UgaGF2ZSBhIHdlYWsgaGFuZCwgeW91IGxvc2UsIGFuZCB3aGVuIHlvdSBoYXZlIGEgc3Ryb25nIGhhbmQgeW91IGZhaWwgdG8gbWF4aW1pc2UgeW91ciBwb3NpdGlvbi4iQ2hhaXQgY2xhaW1zIHRoYXQgZHVyaW5nIHRoZSBmaXNjYWwgbmVnb3RpYXRpb25zIE9iYW1hIG5lZWRsZXNzbHkgc3F1YW5kZXJlZCB0aGUgZ2FpbnMgaGUgaGFkIGFtYXNzZWQgZnJvbSBoaXMgcmUgZWxlY3Rpb24uLiAKU2hlIHNhaWQ6ICJIZSB3YXMgYSBsb3Qgb2xkZXIgdGhhbiBoZXIuCkhlcmUgaGUgbXVzdCBkZWNpZGUgd2hldGhlciB0byBmb2xkIG9yIHRvIHJhaXNlLiAKU28gdW5sZXNzIGl0IGV0Y2hlZCBpbiBzdG9uZSBhbmQgc3RvcmVkIGluIGFuIEVneXB0aWFuIHRvbWIsIHRoZXJlIGlzIG5vdCBSRUFMIGJhY2t1cCBvZiBhbnl0aGluZy4gT3VyIGdvYWwgaXMgdG8gbWl0aWdhdGUgcmlzayBhbmQgdGhlIHNpbmdsZSBtb3N0IGxpa2VseSB0aGluZyB0byBoYXBwZW4gdG8gOTkuOSUgb2YgcGVvcGxlIGlzIGEgZHJpdmUgZmFpbHVyZS4gQ3V0dGluZyB0aGF0IG91dCBvZiB0aGUgZXF1YXRpb24gaXMgcHJldHR5IGRhcm4gc2VjdXJlIGZvciBtb3N0IGhvbWVzIG9yIGJ1c2luZXNzZXMuCkl0IGRpZG4gZ28gd29uZGVyZnVsbHkuIApJZiBtYXJyaWFnZSBpcyBvbiB5b3VyIGJ1Y2tldCBsaXN0LCBDaHJpc3RpYW5DYWZlLiAKSW4gMjAxOCwgdGhlIGNpdHkgc3BlbnQgY2xvc2UgdG8gJDUwMCwwMDAgb24gaG90ZWwgcm9vbXMgZm9yIHBlb3BsZSBpbiBuZWVkIG9mIHRlbXBvcmFyeSBhY2NvbW1vZGF0aW9uLiAkMTAwLDAwMCBpcyBlYXJtYXJrZWQgdG8gYWRkcmVzcyBhbiBhbm5veWFuY2UgZm9yIFdpbmRzb3IgUHVibGljIExpYnJhcnkgdXNlcnM6IHRoZSBmYWN0IHRoYXQgc29tZSBicmFuY2hlcyBhcmUgb3BlbiBvbiBGcmlkYXlzIGFuZCBzb21lIGFyZSBub3QuIFRoZSBtb25leSB3aWxsIG1lYW4gYWxsIGJyYW5jaGVzIGFyZSBvcGVuIEZyaWRheS4gClVuZGVyc3RhbmQgdGhlIHN0YWtlcy4gClRoZXJlIGFyZSBibGFjayBjb2xvcmVkIFJlYWwgQ2xheSBQb2tlciBDaGlwcyBhcyB3ZWxsLiBUaGVzZSBhcmUgZGVmaW5pdGVseSBtb3N0bHkgZm91bmQgaW4gZ2FtZXMgdGhhdCBoYXZlIGhpZ2hlciBiZXRzIG9jY3VycmluZy4gVGhleSBhcmUgd29ydGggdGhlIHNhbWUgYXMgJDEwMC4wMCBpbiByZWFsIG1vbmV5LiBJZiB5b3UgYXJlIGxvb2tpbmcgdG8gbWFrZSBzb21lIHF1aWNrIGNhc2ggb24gYW4gZXhjZWxsZW50IGhhbmQsIHRoaXMgaXMgdGhlIGNvbG9yIHRvIHRocm93IG91dCEKIkFseXNzYT8iIEphbWVzIGFza2VkLiAKSXQgd291bGRuJ3QgbWF0dGVyIGlmIGhlIHdhcyB0cnlpbmcgdG8gc2VuZCBhIG1lc3NhZ2UgYWJvdXQgZGVmb3Jlc3RhdGlvbiwgb3IgdGhhdCBoZSB3YW50ZWQgdG8gZ2l2ZSB1cyBhbGwgb2YgdGhlIG1vbmV5IGluIGhpcyB3YWxsZXQuIApJIGZpbmQgdGhhdCBqdXN0IGZvY3VzaW5nIG9uIHlvdXIgYnJlYXRoaW5nLCB3aXRob3V0IGNvdW50aW5nIGlzIGludmFsdWFibGUuIApFdmVuIGVsaXRlIHRyaWF0aGxldGVzLCB3aG8gb2Z0ZW4gdHJhaW4gZm9yIDQwIHBsdXMgaG91cnMgcGVyIHdlZWssIGluY2x1ZGUgbG93IGludGVuc2l0eSB0cmFpbmluZyBpbiB0aGVpciByb3V0aW5lcy4uIApXZSBkcml2ZSBjYWJzIGFuZCBzZXJ2ZSBmb29kIGFuZCBkcmlua3MgdG8gcmlnaHQgd2luZyBudXRzLCB0byByZWxpZ2lvdXMgemVhbG90cywgdG8gZmFrZSBDaHJpc3RpYW5zLCBldGMuLiAKV2UncmUgYmVpbmcgdG9sZCB3ZSBjYW4ndCBjaGFuZ2UgY2xvc2luZyBzaW5jZSBvdXIgc2FsZXMgY29udHJhY3Qgc2V0IHRoZSAxNnRoIGZvciBjbG9zaW5nLiBUaGUgZmluYWwgd2FsayB0aHJvdWdoIGlzIHNjaGVkdWxlZCBmb3IgdG9uaWdodCBhcyB3ZWxsLCBidXQgb2J2aW91c2x5IHRoZXkncmUgc3R1ZmYgaXMgZ29pbmcgdG8gYmUgZXZlcnl3aGVyZS4gVGhleSdyZSBhZ2VudCB3ZW50IG91dCBvZiB0aGUgY291bnRyeSBmb3IgMiB3ZWVrcyB3aXRob3V0IG5vdGlmeWluZyBvdXIgYWdlbnQgYW5kIHRoZSBwZXJzb24gaGVscGluZyBjb3ZlciBmb3IgaGVyIGRvZXNuJ3Qga25vdyBtdWNoIGFib3V0IHRoZSBzYWxlLiB3ZSBjaGVja2VkIHRoZSBzYWxlcyBjb250cmFjdCBhbmQgdGhlcmUgZGVmaW5pdGVseSBpc24ndCBhbnl0aGluZyBhYm91dCBwb3NzZXNzaW9uIGhhcHBlbmluZyBhZnRlciBjbG9zaW5nLgpIZXJlJ3MgaG93IHRvIHByb2NlZWQuIApJIGFsc28gcmVjb21tZW5kIG5vdCBkb2luZyBibGFzdCBmdXJuYWNlLCBldmVyeW9uZSBibGluZGx5IHJlY29tbWVuZHMgaXQgd2l0aG91dCByZWFsaXNpbmcgaG93IHNoaXQgaXQgaXMgZm9yIGxvdyBsZXZlbCBwbGF5ZXJzLiBXaXRob3V0IGNvYWwgYmFnLCA2MCBzbWl0aGluZyBhbmQgSWNlIGdsb3ZlcyBpdCBtYWtlcyBsZXNzL3NpbWlsYXIgbW9uZXkgdGhhbiBjYW5ub25iYWxscyBhbmQgaXMgc28gbXVjaCBtb3JlIGludGVuc2l2ZQpNeSBhZHZpY2Ugd291bGQgYmUgdGhhdCB3aGVuIGRvaW5nIGZhbWlseSB0cmVlcyB5b3UgYWx3YXlzIGNvbm5lY3RlZCBtYXJyaWFnZXMgYnkgdGhlIHNpZGUgb2YgdGhlIG5hbWUgYW5kIGNoaWxkcmVuIHdpdGggYSBkb3duIHN0cm9rZS4gCkhlIHdhcyBzdGlsbCBhcmd1aW5nIHdpdGggYW5kIHRocmVhdGVuaW5nIHRoZW0gd2hlbiB0aGUgcG9saWNlIHdhbGtlZCBpbiB0aGUgZG9vci4uIApKYW1pZSBmb2N1c2luZyBvbiBidXJuaW5nIHRoZSBjYWxvcmllcy4gTWF0dCBwdW1waW5nIGlyb24uIEkgZmVsbCBpbiBsb3ZlIHdpdGggaXQuIApBcyBzdWNoLCB0aGUgY291cnNlIGhhcyBiZWVuIHNwZWNpYWxseSBkZXZlbG9wZWQgdG8gcHJvdmlkZSB0aGUgd2lkZSByYW5naW5nLCBoaWdoIGxldmVsIHNraWxscyB5b3UgbmVlZDsgbm90IGp1c3QgaW4gdGVybXMgb2YgdGhlIHByYWN0aWNhbCB3b3JrIHlvdSB3aWxsIGRvLCBidXQgYWxzbyBieSBzaGFycGVuaW5nIHlvdXIgY3JlYXRpdml0eSwgY3JpdGljYWwganVkZ2VtZW50IGFuZCBhYmlsaXR5IHRvIGxlYWQuLiAKVGhlIGF0aGVpc3QgaXMgQUlNSU5HIEFUIHRoZSBhd2Z1bCBwZW9wbGUsIGJ1dCB5b3Uga25vdyBob3cgdGhlIG5pY2UgcGVvcGxlIGFjY2lkZW50YWxseSBnZXQgaGl0PyBZb3Ugc2F5IHN0dWZmIGxpa2UgInB1dHRpbmcgYmxpbmQgZmFpdGggaW4gaW5zdGl0dXRpb25zIGxlYWRzIHRvIHRyb3VibGUiIG9yICJoZXksIG1heWJlIERPTiBmb3JjZSBteSBraWQgdG8gcHJheSAob3IgYmUgZXhjbHVkZWQpLCBhbmQgaGV5LCB0ZWFjaCBteSBraWQgdGhlIHNvdW5kIHNjaWVuY2Ugb2YgZXZvbHV0aW9uIiBvciBpbiBhbnkgd2F5IHN1Z2dlc3QgdGhhdCAiYmVsaWVmIHdpdGhvdXQgZXZpZGVuY2UgaXMgaXJyYXRpb25hbCIsIHlvdSBvZmZlbmQgbWFueSBuaWNlIG5vbnZpb2xlbnQgbWFnaWMgYmVsaWV2aW5nIGZhaXRoIGhhdmluZyBwZW9wbGUuIApBbHNvIGNhbiBjaGVjayBvdXQgdGhlIFNSUCBJUCBjb3Vyc2UsIHRoZSBCZXQgU2l6aW5nIFNjaG9vbCBjb3Vyc2UsIGZvciAzYmV0IHBvdHMgT09QIHRoZSBQTE8gQmx1ZXByaW50IGFuZCBQbGF5IGFuZCBFeHBsYWlucy4gVGhlcmUgY29udGVudCBmb3IgbXVsdGl3YXkgcG90cyBpbiB0aGUgTGl2ZSBQTE8gY291cnNlIGFuZCBpbiBNdWx0aXdheSBQb3RzLgpTaGUgY291bGQgYWxzbyBiZSB1c2luZyBoaW0gdG8gc3RheSBpbiB0aGUgY291bnRyeS4gClRoZSBwcm9ibGVtcyB3aXRoIHRoZSBvbGRlciBzaXN0ZXIgd2VudCBiYWNrIGZ1cnRoZXI6IHNoZSBoYWQgYmVoYXZpb3JhbCBwcm9ibGVtcyBncm93aW5nIHVwIGFuZCBiYXJlbHkgZ3JhZHVhdGVkIGhpZ2ggc2Nob29sLiBXaGVuIHNoZSBtb3ZlZCBiYWNrIGhvbWUgc2hlIGJhc2ljYWxseSBzaG9wcGVkIG9ubGluZSBhbmQgc2F0IG9uIHNvY2lhbCBtZWRpYSBhbGwgZGF5LCBhbmQgc2xlcHQgYSBsb3QuIApUaGlzIGhhcyBoaXN0b3JpY2FsbHkgYmVlbiB0aGUgdHJhZGl0aW9uIGFuZCBpdCBtb3JlIG9yIGxlc3MgY2VtZW50ZWQgaXRzZWxmIGludG8gdGhlIGN1bHR1cmUgZXhwZWN0YXRpb25zIHRvIHRoZSBwb2ludCB3aGVyZSBwZW9wbGUgd2lsbCBoYXNzbGUgYW5kIGxvb2sgZG93biBvbiB5b3UgZm9yIG5vdCBoYXZpbmcgYSBidW1mdWNrIHRvbiBvZiBjaGlsZHJlbi4KV3RmIT8gSSB3YXMgbGlrZTogeW91IHdvcmsgYW5kIHRoZW4gY29tZSBob21lIGFmdGVyIDExcG0gYW5kIEkgZG9uJ3Qgc2VlIHlvdSBub3IgZ2V0IGhlbHAgYWxsIGRheT8hIEhvdyBpcyB0aGF0IGZhaXIhIEFuZCBoZSB3YW50cyB0byBtYWtlIGl0IGEgd2Vla2x5IGRlYWwuIApUaGFua3MhIEN1cnJlbnRseSwgaWYgSSdtIGx1Y2t5IG1pbmUgcnVuIDYgNyB3ZWVrcyBhcGFydC4gT3RoZXJ3aXNlIGl0J3MgbW9udGhseSBob3NwaXRhbGl6YXRpb25zLiBGb3IgYWJvdXQgYSB3ZWVrIGVhY2guIApNYXNzYWdlIFRoZXJhcGlzdHMgTWFzc2FnZSB0aGVyYXBpc3RzIG1hbmlwdWxhdGUgdGhlIG11c2NsZXMgYW5kIHNvZnQgdGlzc3VlcyBvZiB0aGUgYm9keSB0byBoZWxwIHJlbGlldmUgcGF0aWVudHMnIHBhaW4gYW5kIHN0cmVzcy4gQnVyZWF1IG9mIExhYm9yIFN0YXRpc3RpYy4gRWFjaCBzdGF0ZSBoYXMgZGlmZmVyZW50IGVkdWNhdGlvbmFsIHJlcXVpcmVtZW50cywgYnV0IHRoZSBCTFMgbm90ZXMgdGhhdCBtb3N0IG1hc3NhZ2UgdGhlcmFweSBwcm9ncmFtcyByZXF1aXJlIGFib3V0IDUwMCBob3VycyBvZiBzdHVkeSBhbmQgaGFuZHMgb24gZXhwZXJpZW5jZS4gQW5hdG9teSBhbmQgcGh5c2lvbG9neSwgYXMgd2VsbCBhcyBtYXNzYWdlIHRlY2huaXF1ZXMsIGFyZSBjb21tb25seSBvZmZlcmVkIGluIG1hc3NhZ2UgdGhlcmFweSBwcm9ncmFtcy4gU29tZSBwcm9ncmFtcyBmb2N1cyBvbiBhIHBhcnRpY3VsYXIgdHlwZSBvZiBtYXNzYWdlLCBvciBtb2RhbGl0eS4gTW9zdCBzdGF0ZXMgcmVxdWlyZSBjZXJ0aWZpY2F0aW9uIG9yIGEgbGljZW5zZSBmb3IgbWFzc2FnZSB0aGVyYXBpc3RzLgpTaW5nYXBvcmVhbnMgaGF2ZSBsb25nIGJlZW4gdW5lYXN5IGJlZGZlbGxvd3Mgd2l0aCB0aGUgZm9yZWlnbmVycyBpbiB0aGVpciBtaWRzdC4KQWRkIHRvIGl0IGdheSBwZW9wbGUsIGFuZCBldmVyeSBvdGhlciB0eXBlIG9mIG1pbm9yaXR5LiBPZiBjb3Vyc2UsIGl0IHdvdWxkbiBzdGFydCB3aXRoIGxvY2tpbmcgdXAuIEl0IHdvdWxkIHN0YXJ0IHdpdGggYmlsbHMgdG8gbGltaXQgdGhlaXIgdm90aW5nIHJpZ2h0cywgbGltaXQgdGhlaXIgYWNjZXNzIHRvIGVkdWNhdGlvbiwgZXRjLiBUaGVuIHlvdSB3YWtlIHVwIG9uZSBkYXksIGFuZCB0aGV5IGJlIGJhbm5pbmcgdGhlbSBmcm9tIHB1YmxpYyBlZHVjYXRpb24uIEJvaWxpbmcgdGhlIGZyb2csIHNvIHRvIHNwZWFrLiBBbmQgdGhlIG1hc3Mgb2YgYWxvb2YsIG1hdGVyaWFsaXN0aWMsIHNlbGZpc2ggZnVja3dhZHMgb2YgdGhpcyBjb3VudHJ5IHdvdWxkIGp1c3QgaGVtIGFuZCBoYXcuIGlmIGl0IGdldHMgYW55IHdvcnNlLCBUSEVOIEkgZG8gc29tZXRoaW5nLiBFeGNlcHQsIG5vLiB5b3Ugd29uIEV2ZXIuCkEgdmVyeSBzaW1pbGFyIHRoaW5nIGhhcHBlbmVkIHRvIG1lLiBJIHdhcyBsZWF2aW5nIGEgcGFydHkgYW5kIG5vdGljZWQgbXkgYmlrZSB3YXMgbG9ja2VkIHRvIGEgZnJpZW5kcyBiaWtlIHdobyBoYWQgYWxyZWFkeSB3YWxrZWQgaG9tZSBlYXJsaWVyLiBJbiBoaXMgZHJ1bmtlbiBzdGF0ZSBoZSBkZWNpZGVkIHRvIHdhbGsgaG9tZSBmb3JnZXR0aW5nIGhlIGhhZCBsb2NrZWQgaGlzIGJpa2UgdG8gbWluZSB3aXRob3V0IHRlbGxpbmcgbWUuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbk5vIGV4dHJhIHBva2VyIG1hY2hpbmVzIHdpbGwgYmUgYWxsb3dlZCBpbnB1YnMgYW5kIGNsdWJzIGluIFdhcnJhd29uZywgV2luZGFuZywgQmVya2VsZXkgYW5kIFdhcmlsbGEsIGFzIHBhcnQgb2YgYSBnb3Zlcm5tZW50IGNyYWNrIGRvd24gb24gcHJvYmxlbSBnYW1ibGluZy4gTlNXIHJhY2luZyBtaW5pc3RlciBQYXVsIFRvb2xlIGFubm91bmNlZCB0aGUgcG9raWVzIGNhcCBvbiBUdWVzZGF5LCB3aGljaCBtZWFuc3RoZSBnb3Zlcm5tZW50IHdpbGxub3QgYWxsb3cgdGhlIG51bWJlciBvZmdhbWluZyBtYWNoaW5lcyB0byBpbmNyZWFzZSBpbiAiaGlnaGVyIHJpc2siIGNvbW11bml0aWVzIGFjcm9zcyB0aGUgc3RhdGUuICJDb21tdW5pdGllcyBjb25zaWRlcmVkIHRvIGJlIG1vcmUgdnVsbmVyYWJsZSB0byBnYW1ibGluZyB3aWxsIGJlIGEgbm8gZ28gem9uZSBmb3IgYWRkaXRpb25hbCBtYWNoaW5lcywiIGhlIHNhaWQuIApFcm5pZSBzdG9vZCB0byBpbmhlcml0IG1vcmUgdGhhbiAkMiBtaWxsaW9uIGZyb20gaGlzIHBhcmVudCdzIGVzdGF0ZS4gQ29wcyBzYXkgaGUgd2FzIGRlc3BlcmF0ZSB0byBzZWUgdGhlIHdpbGwuICJXaG8gYXNrcyB0byBzZWUgeW91ciBwYXJlbnRzJyB3aWxsIG9uIGRheSB0d28gb2YgYSBtdXJkZXI/ICIgc2FpZCBEZXQuIApBbGxlbi4gCkhhcnZvIHdhcyBhIGh1Z2UgcGFpbiBpbiB0aGUgYXNzIHdoZW4gSSBtb2RkZWQgL3IvY2FuYWRhLiBXaGlsZSBJIGhhdmVuIHNlZW4gaGltIGRveHggcGVvcGxlLCBoZSBjZXJ0YWlubHkgaGFzIHRocmVhdGVuZWQgdGhlbSwgYW5kIHNlbnQgY3JlZXB5IGZ1Y2tpbmcgcHJpdmF0ZSBtZXNzYWdlcyB0byBwZW9wbGUgKGxpa2UgbWUsIGZvciBpbnN0YW5jZSkuCkFjY29yZGluZyB0byB0aGUgV29sZm93aXR6IERvY3RyaW5lLCB0aGUgVVMsIGFzIHRoZSBvbmx5IG1pbGl0YXJ5IHN1cGVycG93ZXIgbGVmdCBhZnRlciB0aGUgY29sbGFwc2Ugb2YgdGhlIFNvdmlldCBVbmlvbiwgc2hvdWxkIHVzZSBpdHMgbWlsaXRhcnkgbWlnaHQgdG8ga2VlcCBpdHNlbGYgbm90IGp1c3QgYSB3b3JsZCBsZWFkZXIsIGJ1dCB0aGUgb25seSB3b3JsZCBsZWFkZXIuIE9oIHllcywgYW5kIHRoaXMgbWlnaHQgaW52b2x2ZSBwcmVlbXB0aXZlIGludmFzaW9uLiAKSXMgaXQgTG92ZSwgTHVzdCBvciBMb3NlciBSZWxhdGlvbnNoaXAgUXVpegpIb29jaF9QYW5kZXJzbmF0Y2ggIDQ4IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpEYXNGYXVsdGllciB1ClNoZSBjb21lcyBpbiB0aGUgbmV4dCB3ZWVrIGFuZCBkYW1uIHRoaXMgdGhpbmcgbG9va3MgbWVhbi4gU2hlIHN0aWxsIGRvZXNuIHNlZW0gd29ycmllZCwgYnV0IHRoZSBuZXh0IHdlZWsgc2hlIGNvbWVzIGluIGFuZCBoZXIgZXllcyBhcmUgd2lkZSBsaWtlIHNoZSBnb3Qgc29tZXRoaW5nIHRvIHRlbGwgbWUuIApMb29rLCBhcyBhbiBhY3RvciwgaXQgbmV2ZXIgaHVydHMgdG8gdHJ5IGRpZmZlcmVudCB0YWN0aWNzIGluIGV2ZXJ5dGhpbmcgeW91IGRvIGJ1dCB0aGF0IHdhc24gdGhlIGNhc2UuIApUaGV5IGFyZSBBZnJpa2FuZXJzLCBhbmQgaXQgYWJvdXQgdGltZSB3ZSBzdGFydGVkIGNhbGxpbmcgdGhlbSB0aGF0Li4gClRoZSBhbW91bnQgb2Ygd2FzdGUgZ2VuZXJhdGVkIGJ5IG51Y2xlYXIgZW5lcmd5IGlzIG1hc3NpdmVseSBsb3dlciB0aGFuIHRoYXQgb2YgY29hbCBhbmQgZ2FzIHBvd2VyLiBJIHRhbGtpbmcgb3JkZXJzIG9mIG1hZ25pdHVkZSBkaWZmZXJlbmNlLiBFdmVuIGlmIGl0IGRvZXMgbGFzdCBlZmZlY3RpdmVseSBmb3JldmVyIGl0IHdvbiBiZSBhIHNlcmlvdXMgcHJvYmxlbSwgZXNwZWNpYWxseSBjb21wYXJlZCB0byBkZWFsaW5nIHdpdGggd2FzdGUgZnJvbSBvdGhlciBzb3VyY2VzLiBJIHRoaW5rIGEgYmlnIHBhcnQgb2Ygd2h5IGVudmlyb25tZW50YWxpc3RzIGRvbnQgbGlrZSBpdCBpcyB0aGF0IGl0IGlzbnQgcmVuZXdhYmxlIGxpa2Ugc29sYXIsIHdhdGVyLCBvciB3aW5kLiBJIHRoaW5rIHRoYXQgaXQgd291bGQgYmUgZ3JlYXQgaWYgd2UgaGFkIGVmZmljaWVudCBtZWFucyBmb3IgdGhvc2UgZW5lcmdpZXMsIGJ1dCB3ZSBkb250IHlldC4gSXQgd291bGQgbm90IHdvcmsgb24gYSBsYXJnZSBzY2FsZSBhdCB0aGlzIHBvaW50LiBOdWNsZWFyLCBob3dldmVyLCB3b3VsZCBiZSBhIGdvb2Qgc3RlcCBvbiB0aGUgcGF0aCB0byBlbnRpcmVseSByZW5ld2FibGUgcmVzb3VyY2VzLCBhbmQgaWYgaXQgZG9lc250IHR1cm4gb3V0IHRvIGJlIHZpYWJsZSB0byBnbyBmdWxseSByZW5ld2FibGUsIG51Y2xlYXIgaXMgc3RpbGwgYSB0aG9yb3VnaGx5IGJldHRlciBhbHRlcm5hdGl2ZSB0byB3aGVyZSB3ZSBhcmUgbm93LgpPcCBkZXplIHBhZ2luYSBpcyBvb2sgbm9nIGVlbiBwZXJzb29ubGlqa2UgZXZhbHVhdGllIHRlIHZpbmRlbiBvbXRyZW50IGhldCBiZWhhYWxkZSBuaXZlYXUuIApOb3QgdG9vIGNsZWFuLCBub3QgdG9vIHNoYWJieS4gQSBmZXcgZGVudHMgYW5kIGRpbmdzIGFyZSBnb29kLCBvdGhlcndpc2UgbXVzdCBiZSBpbiBnb29kIHJlcGFpci4uIApPdXIgYXBhcnRtZW50IGFnZW50IGNvbW1lbnRlZCB0aGF0IHdlIG11c3QgcmVhbGx5IGxpa2UgZWFjaCBvdGhlciB0byBiZSBhYmxlIHRvIHdvcmsgdG9nZXRoZXIsIGxpdmUgdG9nZXRoZXIsIEFORCBoYXZlIGx1bmNoIHRvZ2V0aGVyIGFsbW9zdCBldmVyeSBkYXkgaGFoYS4uIApQZXJzb25zIG9yIG9yZ2FuaXphdGlvbnMgbWF5IHJlcXVlc3QgYSBncmFudCBhcHBsaWNhdGlvbiBvciBvdGhlciBpbmZvcm1hdGlvbiBhYm91dCB0aGUgZW5kb3dtZW50IGJ5IGNvbnRhY3RpbmcgdGhlIEVuZG93bWVudCBQcmVzaWRlbnQgQ2hhcmxlcyBFbGRyaWRnZS5PcmFjbGUgQ29vcGVyIHdhcyBhbHNvIHN1cnByaXNlZCB0byByZWNlaXZlIGEgY2VydGlmaWNhdGUgZnJvbSBBbWVyaWNhJ3MgRnJhdGVybmFsIEJlbmVmaXRzIFNvY2lldHksIHJlY29nbml6aW5nIGhlciBmb3IgaGVyIGdvb2Qgd29ya3MgcGVyZm9ybWVkIGluIHRoZSBuYW1lIG9mIEFtZXJpY2EncyBGcmF0ZXJuYWwgQmVuZWZpdCBTb2NpZXRpZXMuIApNYWtlIHN1cmUgdGhhdCB5b3UgZG8gdGhpcyBhZnRlciBlYWNoIGRhdGUgdG8ga2VlcCB0cmFjay4gU3RhdGlzdGljIGdyb3d0aCBvcHBvcnR1bml0aWVzIG9wZW4gdG8gb25saW5lIGRhdGluZyBzaXRlIHRvIGF0dHJhY3QgbWFueSB1cHBlciBsaW1icyBmcmVlLiAKR2VuZXJhbGx5IGluIHRoZSBjbHVicywgaXQgbm90IGV0aXF1ZXR0ZSB0byByZWRvIGFuZCByZXBsYWNlIGJhbGxzIGV0Yy4gSXQgYSBmYWZmIG9uIGFuZCBuZXZlciBwZXJmZWN0LiAKV2hpbGUgaW4gbGFuZCBiYXNlZCBjYXNpbm9zLCB0aGUgb25seSBwcm9ibGVtIHlvdSBmYWNlIHdoZW4gaXQgY29uY2VybnMgeW91ciBiYW5rcm9sbCBpcywgd2VsbCwgeW91ciBsYWNrIG9mIG1vbmV5LiBJbiB2aXJ0dWFsIHBva2VyIGNhc2lubywgdGhlIGRlcG9zaXQgbGltaXQgb2YgdGhlIG9ubGluZSBzaXRlIHJlYWxseSBkb2VzIGFmZmVjdCB0aGUgZ2FtZSB5b3UgYXJlIHBsYXlpbmcuIApCdXQgYXMgYSBzdGF0ZXNtYW4sIGhlIGlzIHJhaXNpbmcgcXVlc3Rpb25zIGFib3V0IHdoZXRoZXIgaGlzIG92ZXJ0bHkgcGVyc29uYWwgYXBwcm9hY2ggaXMgdXNlZnVsIGluIGpvbHRpbmcgZGlwbG9tYXRpYyBwcm9ncmVzcyBvciB3aGV0aGVyIGhlIGlzIHdhZ2VyaW5nIHRvbyBtdWNoIHBlcnNvbmFsIGNhcGl0YWwgb24gcmlza3kgcGxheXMuIEl0J3MgY2VydGFpbmx5IHBvc3NpYmxlIHRoYXQgVHJ1bXAncyB1bnJlc3RyYWluZWQgImZpcmUgYW5kIGZ1cnkiIHJoZXRvcmljIGNvbXBsaW1lbnRlZCBhIHRvdWdoIHNhbmN0aW9ucyByZWdpbWUgYWdhaW5zdCBQeW9uZ3lhbmcgYW5kIG1pZ2h0IGhhdmUgY2hhbmdlZCB0aGUgTm9ydGggS29yZWFuIGNhbGN1bGF0aW9uLi4gClNvIEkgaG9wZSwgbGlrZSB0aGUgcmVzdCBvZiB0aGUgcHVibGljLCBJIGNhbiBqdXN0IGlnbm9yZSBpdCBhbmQgdGhlIG1hcmtldCB3aWxsIHRha2UgY2FyZSBvZiBpdC4uIApJZiB5b3UncmUgc2F5aW5nIGl0J3MgbWlub3IgcGFpbiwgSSB3b3VsZG4ndCBiZSB0b28gd29ycmllZCBhdCB0aGlzIHBvaW50LiBNaW5vciBwaW5jaGVzIGFuZCBjcmFtcHMgYXJlIGZhaXJseSBjb21tb24gcmlnaHQgbm93LiAKQW5kIHRoZSByZW1hcmthYmxlIHRoaW5nIGlzIHRoYXQgdGhlIGluZm9ybWF0aW9uIGlzIHVzZWZ1bCwgZXZlbiBpZiB5b3UgZGlkbiBoYXZlIGEgZGlyZWN0IGFwcGxpY2F0aW9uIGZvciBpdC4gCk9mIGNvdXJzZSB0aGVzZSBhcmUuIEl0IGlzIGNvdW50ZXIgaW50dWl0aXZlIHRvIHRoaW5rIG90aGVyd2lzZS4gQnV0IGl0IGlzIHN0dXBpZCB0byB0aGluayB0aGF0IHRoZXNlIHBvaW50cyB3aWxsIGJlY29tZSBwYXJ0IG9mIGFueSBkaXNjdXNzaW9uIG9uIHNvY2lhbCBtZWRpYSBvciBhdCBvdGhlciBmb3J1bXMgd2hlcmUgb25seSBtYW5pcHVsYXRlZCBjYW1wYWlnbnMgYXJlIHN0YWdlZCBmb3IgZ3VubmluZyBkb3duIGNyaXRpY3MuIEl0IGlzIG5hIHRvIGV4cGVjdCB0aGF0IHRoZXJlIHdpbGwgYmUgYW55IGZvbGxvdyB1cCBvciBvZmZpY2lhbCBwcm9iZSB1bmxlc3MgdGhlIG5ldyBhcm15IGNoaWVmLCB0aGUgbWFuIGFnYWluc3Qgd2hvbSB0aGlzIGF0dGFjayB3YXMgZGlyZWN0ZWQsIGRlc2lyZXMgb3RoZXJ3aXNlLCB3aGljaCBpcyB1bmxpa2VseSB0byBoYXBwZW4gY29uc2lkZXJpbmcgaGlzIHByZWZlcmVuY2UgZm9yIGNvbXBhc3Npb24gb3ZlciB0aGUgb3RoZXIgYmFzaWMgaW5zdGluY3RzIHRoYXQgc29tZSBvZiBoaXMgcHJlZGVjZXNzb3JzIGFyZSBpbmZhbW91cyBmb3IuCkZvciB0aGUgbG9uZyBoYXVsIGlmIHlvdSBmZWVsIGxpa2UgdGhlcmUgYXJlIGlzc3VlcyB3aXRoIGJlaW5nIHNvbWVvbmUgb3V0c2lkZSB5b3VyIGNsYXNzLCB0aGVyZSBhcmUgc28gbWFueSB3YXlzIHRvIHByb3RlY3QgeW91IGFnYWluc3QgZmluYW5jaWFsIHJ1aW4gb2YgYSBwYXJ0bmVyLCBpbmNsdWRpbmcgcHJlbnVwcy4gVXNlcyB0ZXJtcyBsaWtlICJhbHBoYSIgYW5kICJiZXRhIiBpbiBkZXNjcmliaW5nIGh1bWFuIHJlbGF0aW9uc2hpcHMuIFRhbGtzIGFib3V0IGF0dHJhY3RpdmVuZXNzIGluIHRlcm1zIG9mICJzZXh1YWwgbWFya2V0IHZhbHVlIi4gCkl0IHdhc250IGV2ZW4gYSBjb21wZXRlIGJ1bGxldCwganVzdCBhIGZyYWdtZW50LgpPbmlvbnMgdQpJIGxvb2tlZCBhdCBBc2NlbnQsIFBpbG90LCBhbmQgSGlnaGxhbmRlciBhbmQgZm91bmQgZm9yIHRoZSBsZXZlbCBJIHdhbnQsIHdoaWNoIGluY2x1ZGVzIGFiaWxpdHkgdG8gdG93IDUwMDAgcG91bmRzLCB0aGUgQXNjZW50IHdhcyBkZWZpbml0ZWx5IHRoZSBiZXN0IHZhbHVlLiBQaWxvdCBoYWQgdG8ganVtcCB1cCBzZXZlcmFsIGxldmVscyB0byBnZXQgdGhlIHRvd2luZyBhYmlsaXR5LiBTdWJhcnUgYmFzaWNhbGx5IG1ha2VzIG9uZSBjYXIgYnV0IHN0cmV0Y2hlcyBlbmdpbmUgcG93ZXIgb3IgZnJhbWUgc2l6ZSBmb3IgdGhlIG1vZGVsLiBUaGUgQm94ZXIgZW5naW5lcyBhcmUgZnVlbCBlZmZpY2llbnQsIGdpdmUgYSBsb3Qgb2YgcGVwIGZvciBpdHMgc2l6ZSwgYW5kIHdpbGwgZWFzaWx5IG1ha2UgaXQgdG8gMjAwayBvciBtb3JlIHdpdGggZ29vZCBjYXJlLgpGaW5kaW5nIFN0dWRlbnRzIE9uY2UgeW91IG1lZXQgYWxsIG9mIHRoZSBjZXJ0aWZpY2F0aW9uIHJlcXVpcmVtZW50cywgeW91IGFyZSBsaXN0ZWQgYXMgYSBjcmVkZW50aWFsZWQgaW5zdHJ1Y3RvciB3aXRoIHRoZSBBSEEgb3IgUmVkIENyb3NzLiAKSnVzdCBsZWZ0LiBHb25lLiAKNy4gQ29uanVudG8gZGUgYXJtYWRpbGhhcyBlbSBzdWEgY2FzYS4gU2Ugdm9jIGFjaGEgcXVlIHNldSBlbmdhbm8gbWFyaWRvIHBvZGUgdHJhemVyIGFsZ3VtIGVtIHN1YSBjYXNhIGVucXVhbnRvIHZvYyBlc3RpdmVyIHZpYWphbmRvIG91IGZvcmEsIG1vbnRhciBhbGd1bWFzIGFybWFkaWxoYXMuIApEdGlldHplICAyIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpTb24gb2YgV2FsdGVyIGFuZCBBbGxhLCBkYWQgYW5kIGJlc3QgZnJpZW5kIHRvIEplc3NlLiAKVGhlcmUgaXMgYSB2ZXJ5IGVhc3kgdHJhcCB0byBmYWxsIGludG8gd2hlbiB0YWxraW5nIGFib3V0IGlubm92YXRpb24gdGhhdCBpbXByb3ZlbWVudCBhcmUgbm90IGludmVudGlvbi4gRGlkIGFueSBjb21wYW55IGluIEphcGFuIGludmVudCB0aGUgY2FyPyBBYnNvbHV0ZWx5IG5vdC4gCllvdSBjYW4gZG8gdG9ucyBvZiB0aGluZ3MgYmVoaW5kIHRoZSB3aGVlbCB0aGF0IGNhbiBraWxsIHNvbWVvbmUsIG5vbmUgb2YgdGhlbSBob2xkIHRoZSBzYW1lIGNvbnNlcXVlbmNlIG9mIGFuIE9XSS9EVUkuIEkgYWxsIGZvciBwdW5pc2hpbmcgcGVvcGxlIGZvciBkcml2aW5nIGRydW5rIGJ1dCBydWluaW5nIHNvbWVvbmVzIGVudGlyZSBsaWZlIG92ZXIgYSAuMDkgQkFDIGlzIGFic3VyZC4gRXZlcnlvbmUgaXMgcGVyZmVjdGx5IG9rYXkgd2l0aCBpdCBiZWNhdXNlIGl0IGFsd2F5cyBkb24gZG8gdGhlIGNyaW1lIGhlaGVoZSB3aXRob3V0IGxvb2tpbmcgYmV5b25kIHRoZSBhY3R1YWwgY29uc2VxdWVuY2VzIG9mIHdoYXQgeW91IHB1dHRpbmcgcGVvcGxlIHRocm91Z2guIAo4LiBObyBnaXZlYXdheXMsIHRyeWluZyB0byBidXkgb3Igc2VsbCBzdHVmZiwgb3IgYmVnZ2luZy4KVGhlIGV4dHJhIGluZm9ybWF0aW9uIGluY2x1ZGVzIGRldGFpbHMgbGlrZSB0cmFucyBmYXQgYW5kIGFkZGVkIHN1Z2FycywgYXMgd2VsbCBhcyBpbmdyZWRpZW50cywgd2hpY2ggZm9yIEJ1ZCBMaWdodCBhcmUgd2F0ZXIsIGJhcmxleSwgcmljZSBhbmQgaG9wcy4gClBlb3BsZSBvbiB0aGUgV2lzY29uc2luIHNpZGUgb2YgdGhlIFN0IENyb2l4IFJpdmVyIHVzZSB0aGUgZXhwcmVzc2lvbiBldmVyeSBkYXksIHdoaWxlIHBlb3BsZSBhIG1pbGUgYXdheSBvbiB0aGUgTWlubmVzb3RhIHNpZGUgaGF2ZSBuZXZlciBldmVuIGhlYXJkIHRoZSBleHByZXNzaW9uIChhbmQgdGhlcmUgaXMgYW4gaW50ZXJzdGF0ZSBhbmQgc2hvcnQgYnJpZGdlIGNvbm5lY3RpbmcgdGhlIDIgYXJlYXMhKS4uIApUaGlzIGlzbid0IHdyb25nLCBtYW55IHdvcmtlcnMgcmV2b2x1dGlvbnMgb2NjdXJyZWQgaW4gdGhlIDE4MDAncyBhbmQgZWFybHkgMTkwMCdzLiAKTGFuZ3MgaGV0IEJ1bGdha292IEhvdXNlIChlZW4gc2NocmlqdmVyLCBtYWFyIGphLCBkYXQgemVndCBvbnMgbmF0dXVybGlqayBuaWV0IHpvIHZlZWwpIG9wIG5hYXIgZGUgYmVyb2VtZGUgUGF0cmlhcmNoIFBvbmRzLiAKT24gTW9uZGF5LCBORFAgTGVhZGVyIEphZ21lZXQgU2luZ2ggcHJvcG9zZWQgbWVhc3VyZXMgaGUgaW5zaXN0ZWQgd2lsbCBoZWxwIGJ1aWxkIDUwMCwwMDAgbmV3IGFmZm9yZGFibGUgaG91c2luZyB1bml0cyBhY3Jvc3MgQ2FuYWRhIG92ZXIgdGhlIG5leHQgMTAgeWVhcnMuClByb2JhYmx5IG5vdCBhcyB0aGV5IG1vc3QgbGlrZWx5IG5vbiBzbW9raW5nIGJ1dCBoYXZpbmcgY2FubmFiaXMgYXMgYW4gYWR1bHQgaXNuIGlsbGVnYWwgYWxzbyBJIG5ldmVyIEVWRVIgaGVhcmQgb2YgYW55d2hlcmUgbmVhciB0aGUgc3RyaWN0IGVuZm9yY2VtZW50IG9mIGRydWcgYW5kIGFsY29ob2wgcG9saWNpZXMgYXMgaSBuaGF2ZSB3aW4gQW1lcmljYW4gc2Nob29scy4gTm90IHRvIG13bnRpb24uIApHcnVuZHMgZXJzY2hlaW50IGRlciBUaXRlbHZlcnRlaWRpZ2VyIGF1cyBQaXR0c2J1cmdoIGFrdHVlbGwgcGVyc29uZWxsIGd1dCBhdWZnZXN0ZWxsdC4gV2VyIGRlbiBTdGFubGV5IEN1cCBnZXdpbm50LCBkZXIgaXN0IG5hdHVyZ2VtIGRlciB2b24gYWxsZW4gR2VqYWd0ZSwgbmljaHQgZGVyamVuaWdlLCBkZXIgYW4gc2VpbmVtIEthZGVyIG5vY2ggdmllbCBiYXN0ZWxuIG0gRG9jaCBkaWUgUGVuZ3VpbnMgaGFiZW4gaW4gZGllc2VtIFNvbW1lciBuaWNodCBudXIgVG9yaCBNYXJjIEFuZHJlIEZsZXVyeSBhbiBkaWUgVmVnYXMgR29sZGVuIEtuaWdodHMgdmVybG9yZW4uClRob21hcyB3YXMgYSBjbGFzc21hdGUgb2YgSG9mZm1hbidzIGRhdWdodGVyIHdoZW4gc2hlIHNheXMgc2hlIG1ldCB0aGUgYWN0b3IsIHdobyBpbnZpdGVkIGhlciB0byBoaXMgaG90ZWwgcm9vbSB0byB3YWl0IGZvciBoZXIgbW90aGVyIGFmdGVyIGEgZGlubmVyIHdpdGggdGhlIHRlZW5hZ2Vycy4gVGhvbWFzIHNheXMgYWZ0ZXIgSG9mZm1hbidzIGRhdWdodGVyIGxlZnQsIHRoZSBhY3RvciB0b29rIGEgc2hvd2VyIGFuZCBjYW1lIG91dCB3ZWFyaW5nIG9ubHkgYSB0b3dlbCwgd2hpY2ggc2hlIHRvbGQgVmFyaWV0eSBoZSBkcm9wcGVkLCBleHBvc2luZyBoaW1zZWxmIHRvIGhlci4gSG9mZm1hbiB0aGVuIHB1dCBvbiBhIHJvYmUgYW5kIGFza2VkIFRob21hcyB0byBtYXNzYWdlIGhpcyBmZWV0LCBUaG9tYXMgc2FpZCwgYW5kIHJlcGVhdGVkbHkgYXNrZWQgaGVyIGlmIHNoZSB3YW50ZWQgdG8gc2VlIGhpbSBuYWtlZCBhZ2Fpbi4KQ2hlcmlzaGVkIHNvbiBvZiBHcmFlbWUgYW5kIFRoZWxtYSBTY290dC4gRGVhciBicm90aGVyIG9mIFJhbmR5IChDYXRoeSkuIApNZWx0ZG93biBtb21lbnQgZmluYWxseSBjb21lCkdpdmUgdGhlIHBsYXllcmJhc2UganVzdCBsb25nIGVub3VnaCB0byBiZSBpbnRyaWd1ZWQgYnkgaXQgYW5kIGV2ZXJ5Ym9keSBzdGFydHMgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgd3RmIGlzIGdvaW5nIG9uIGFuZCB0aGVuIHBhdGNoIGl0IG91dCBhbmQgZG9uIHRlbGwgYW55Ym9keSwgdGhlbiBtaWxsaW9ucyBvZiBwZW9wbGUgd2lsbCBiZSB0cnlpbmcgdG8gZmlndXJlIG91dCBhIGJ1ZyB0aGF0IGRvZXNuIGV4aXN0LiAKV2VsbCwgYmVmb3JlIHlvdSBqdW1wIHRoZSBndW4sIGxldCB1cyB0ZWxsIHlvdSB0aGF0IHNoZSBjb25zaWRlcnMgRW1yYWFuIHVubHVja3kgaW4gaGVyIGZhdm91cml0ZSBnYW1lIFBva2VyLiBEdXJpbmcgb25lIG9mIGhpcyBwcmV2aW91cyBpbnRlcnZpZXdzLCBFbXJhYW4gaGltc2VsZiBzaGFyZWQgdGhpcyBpbmZvcm1hdGlvbiBhbmQgdGhlIHJlYXNvbiBiZWhpbmQgaXQuIEhlIGhhZCBleHBsYWluZWQgdGhhdCBoZSBuZXZlciB3b24gYSBzaW5nbGUgZ2FtZSBvZiBQb2tlciBidXQgaGlzIHdpZmUgaXMgYSBwcm8gYXQgaXQuIFNvIHdoZW5ldmVyIHNoZSBwbGF5cyBQb2tlciB3aXRoIGhlciBmcmllbmRzLCBzaGUgZG9lc24gbGV0IEVtcmFhbiBiZSBhbnl3aGVyZSBuZWFyIGhlciBhcyBzaGUgY29uc2lkZXJzIEVtcmFhbiB0byBiZSB1bmx1Y2t5IGZvciB0aGUgZ2FtZS4KSW4gcmVhbGl0eSwgdGhvc2Ugb3BpbmlvbnMgd2VyZSBiYXNlZCBvbiBhIGNvcnJ1cHQgYW5kIHdpZGVseSBkaXNjcmVkaXRlZCBsZWdhbCBhbmFseXNpcyBjb29rZWQgdXAgYWZ0ZXIgdGhlIFdoaXRlIEhvdXNlIGhhZCBhbHJlYWR5IGRlY2lkZWQgdG8gdXNlIGxvbmcgYmFubmVkIHByYWN0aWNlcyBsaWtlIHdhdGVyYm9hcmRpbmcuIE1yLiBDb25ncmVzcyBhbmQgdGhlIFdoaXRlIEhvdXNlIGFsc28gbmVlZCB0byBsb29rIGludG8gaWxsZWdhbCB3aXJldGFwcGluZyBhbmQgdGhlIHByYWN0aWNlIG9mIHNlbmRpbmcgcHJpc29uZXJzIHRvIG90aGVyIGNvdW50cmllcyB0byBiZSB0b3J0dXJlZC4uIApUaGUgdHlwZSBvZiBnYW1lcyBvZmZlcmVkIGJ5IGFuIG9ubGluZSBwb2tlciBzaXRlIGlzIGFub3RoZXIgaW1wb3J0YW50IGZhY3RvciB3aGljaCBoYXMgdG8gYmUgY29uc2lkZXJlZC4gClRoaXMgaXMgZGVmaW5pdGVseSBza2lwcGluZyBvdmVyIHNvbWUga2V5IGRpZmZlcmVuY2VzIGF0IGJlc3QuIFJlbGF0aXZlIGNsYXVzZXMgYnJhbmNoIGluIG9wcG9zaXRlIGRpcmVjdGlvbnMgaW4gRW5nbGlzaCBhbmQgTWFuZGFyaW4sIGFuZCBNYW5kYXJpbiBzZW50ZW5jZSBmaW5hbCBwYXJ0aWNsZXMgaW5kaWNhdGUgc29tZSBsZWZ0IGJyYW5jaGluZyBzdHJ1Y3R1cmVzLiBFbmdsaXNoIGFuZCBNYW5kYXJpbiBjZXJ0YWlubHkgZG8gaGF2ZSBzb21lIHN5bnRhY3RpYyBzaW1pbGFyaXRpZXMgaW4gdGhpcyByZWdhcmQsIGJ1dCBpdHMgc3ludGFjdGljIHN0cnVjdHVyZXMgaGVyZSBhcmUgZGVmaW5pdGVseSBub3QgImV4YWN0bHkgdGhlIHNhbWUiIGFzIEVuZ2xpc2ggeW91IHN0cmlwIHRoZSBpbmZsZWN0aW9uIG91dCBvZiBTQUUsIGFzIGRlbW9uc3RyYXRlZCBieSBhdXhsYW5ncyBsaWtlIEludGVybGluZ3VhLCB5b3UgcHJldHR5IG11Y2ggZ2V0IEVuZ2xpc2gvQ2hpbmVzZSBzeW50YXguCldoZW4gSSBmaXJzdCBzdGFydGVkIHdvcmtpbmcgaW4gTnVyc2luZyBhcyBhbiBMTkEgKE5IIHdlIGFyZSBsaWNlbnNlZCBhcyBvcHBvc2VkIHRvIGNlcnRpZmllZCksIEkgd2FzIHNvIG5lcnZvdXMsIGFmdGVyIG15IGZpcnN0IGZldyBkYXlzIEkgZmluYWxseSBmZWx0IHNvIGF0IGVhc2UuIE15IHBhdGllbnRzIHdlcmUgYWx3YXlzIGFudGljaXBhdGluZyBteSByb3VuZCBvbiB0aGUgd2luZy9mbG9vci4gSnVzdCByZW1lbWJlciBldmVyeXRoaW5nIHlvdSBsZWFybmVkIGFsb25nIHRoZSB3YXksIGFuZCBiZSBwYXRpZW50L2tpbmQuIApIYXZlIHRvIHdvcmsgbm93IHRvIGNvbnZpbmNlIG91ciBmZWxsb3cgQW1lcmljYW5zIHRvIHN0b3Agd29ycnlpbmcgYWJvdXQgaW1hZ2luYXJ5IHRocmVhdHMgYW5kIGZvY3VzIG9uIHdoYXQgcmVhbGx5IGdvaW5nIG9uLiAKVGhlcmUgaXMgbm8gInJpZ2h0IHBhdGgiIGZvciBhIHBlcnNvbiB3aXRoIHRoZXNlIHRyYWl0cy4gVGhlcmUgaXMgbGl0ZXJhbGx5IG5vdGhpbmcgeW91IHdpbGwgc3VjY2VlZCBhdCB3aXRoIHRoZXNlIHF1YWxpdGllcy4gTm90IGV2ZW4gbWVuaWFsIGxhYm9yLiAKQ29vayB1bnRpbCB0aGUgbWl4dHVyZSBoYXMgdGhpY2tlbmVkIGFuZCByZWFjaGVkIGEgZ3JhdnkgY29uc2lzdGVuY3kuIApJdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIGJlaW5nIHN1cGVyaW9yIGxvbC4gSXQgYWJvdXQgYmVpbmcgYSBuaWNlIHBlcnNvbi4gV2UgbGl2ZSBpbiBhIGNvdW50cnkgd2hlcmUgb3VyIHBhc3Nwb3J0cyBiYXNpY2FsbHkgZ3JhbnQgdXMgYSBoaWdoIHN0YW5kYXJkIG9mIGxpdmluZyBzbyB3ZSBzaG91bGQgcGF5IGl0IGZvcndhcmQgYSBiaXQgYnkgdGlwcGluZy4KSmVzdXMsIE15IEdvZCB0aGVzZSB0aGluZ3MgSSB3aWxsIG5ldmVyIHVuZGVyc3RhbmQhISEgVGhhdCBwb29yLCBpbm5vY2VudCBzd2VldCBiYWJ5IGdpcmwhIFdoeSB0YWtlIGhlciwgQXNobGV5IGFuZCBoZXIgZ3JhbmRwYXJlbnRzPyBIb3cgc2NhcmVkIHRoZXkgbXVzdCBoYXZlIGJlZW4gTWF5IHRoZXkgUklQLiBGb3IgdGhlIGZhbWlsaWVzLiBSYW5keSB3YXMgb2ZmIGJ1dCBJIG5ldmVyIHRob3VnaHQgaGUgY291bGQgZG8gc29tZXRoaW5nIGxpa2UgdGhpcy4gClNvIGxldCBhbnN3ZXIgeWVzdGVyZGF5IHJlcXVlc3RzIGFuZCBsb29rIGludG8gdGhlIGRhdGEgc29tZSBtb3JlLgpIZWFsdGh5IHJlZ2FyZHMsIENhcmwgUHJhdHRSZXNwb25zZSBmcm9tIENhbnlvblJhbmNoVHVjc29uLCBHdWVzdCBSZWxhdGlvbnMgTWFuYWdlciBhdCBDYW55b24gUmFuY2ggaW4gVHVjc29uUmVzcG9uZGVkIERlYyAxMiwgMjAxOE9uIGJlaGFsZiBvZiBvdXIgZW50aXJlIHRlYW0sIHRoYW5rIHlvdSBmb3Igc2hhcmluZyB5b3VyIGV4cGVyaWVuY2Ugb24gVHJpcEFkdmlzb3IuIApZb3VyIG9mZmljZSBjaGFpciBpcyBraWxsaW5nIHlvdQpIZSBhbHdheXMgYnJpbmdzIHRvbyBtYW55IGFuZCB0aGV5IHNpdCBhbmQgc3RhcmUgYW5kIGJ5IHRoZSBlbmQgb2YgdGhlIGRheSBJIGVhdGVuIDMgb3IgNCEgRXZlbiBhZnRlciBhIGZ1bGwgd2VlayBvZiBwZXJmZWN0IGRpZXQgYW5kIGV4ZXJjaXNlIEkgc3RpbGwgY2F2ZWQuIApSQU5LSU4sIFJvYmVydCBDLiBKYW51YXJ5IDI4LCAxOTI4ICAgSnVuZSA1LCAyMDE3ICJUaGVyZSBpcyBub3RoaW5nIGluIHRoZSB3b3JsZCBzbyBpcnJlc2lzdGlibHkgY29udGFnaW91cyBhcyBsYXVnaHRlciBhbmQgZ29vZCBodW1vdXIuIiAgQ2hhcmxlcyBEaWNrZW5zIEJvYiBwYXNzZWQgYXdheSBwZWFjZWZ1bGx5IGF0IEdyYW5kIFJpdmVyIEhvc3BpdGFsIG9uIEp1bmUgNSwgMjAxNywgaW4gaGlzIDkwdGggeWVhci4gClRoZSBtYW4gaW4gc2hhZG93IGFuZCBzbGVlcGluZyBmaWd1cmUgKGJveSkgaW4gdGhlIGJ1Z2d5IGNvbXBsZW1lbnQgdGhlIHdoaXRlIG11c3RhY2hpb2VkIGJvd2xlciB3ZWFyaW5nIG1hbiB0byB0aGUgbGVmdDsgdGhlIG1lbiBsb29raW5nIG9uIGluIHRoZSBmb3JlZ3JvdW5kIGFyZSBpbnRlcmVzdGluZywgdG9vIHBsdXMgdGhlcmUgdGhhdCBsYXVuZHJ5IGluIHRoZSBiYWNrZ3JvdW5kLiBHaXZlbiB0aGF0IHRoZSBsYXVuZHJ5IGlzIG91dCAoYW5kIHdhc24ganVzdCBsZWZ0IG91dCBkdXJpbmcgdGhlIHN0b3JtKSBhbmQgdGhhdCBubyBvbmUgc2VlbXMgdG8gYmUgcGFydGljdWxhcmx5IGJ1bmRsZWQgdXAgYWdhaW5zdCBjb2xkLCBJIGdvaW5nIHRvIGd1ZXNzIHRoYXQgdGhlcmUgd2FzIGEgYnJlYWsgaW4gdGhlIHdlYXRoZXIgdGhhdCBwdXNoZWQgdGhlIHRlbXBlcmF0dXJlIGhpZ2hlciB0aGFuIG5vcm1hbCwgd2l0aCBhbG1vc3QgZXZlcnlvbmUgdGFraW5nIGFkdmFudGFnZSBvZiB0aGUgd2FybSBzbmFwLCBhcyBwZW9wbGUgZG8gZXZlcnl3aGVyZSwgYWxsIHRoZSB0aW1lLiBJIGFsc28gbGlrZSB0aGUgdGlueSBBbWVyaWNhbiBmbGFnIG9uIHRoZSB0YWxsIHBvbGUgYXQgbGVmdC4uIApTbyBJIGFzayBvZiB5b3UgdG8gbXVzdGFyZCB1cCBhbGwgdGhlIHN0cmVuZ3RoIHlvdSBjYW4gYmVjYXVzZSBpdCBpcyBhIGRvZ2d5IGRvZyB3b3JsZCBvdXQgdGhlcmUuIApHaXZlbiB0aGUgcGVyc29uYWwgdHJpYWxzICh1bmRlc2VydmVkKSwgYW5kIHBvbGl0aWNhbCB0cmlidWxhdGlvbnMgKGRlc2VydmVkKSwgdGhhdCB0aGUgcHJlc2lkZW50IGhhcyBnb25lIHRocm91Z2gsIGhpcyBhZmZpbml0eSBmb3IgYSBzb3VwZWQgdXAgdmVyc2lvbiBvZiB0aGUgcHJlc2lkZW5jeSB3YXMgZW50aXJlbHkgcHJlZGljdGFibGUuIApMZXMgZW5xdXRldXJzIGR1IHNlcnZpY2UgY2VudHJhbCBkZXMgY291cnNlcyBldCBkZXMgamV1eCwgY2hhcmdzIGRlcyBpbnZlc3RpZ2F0aW9ucywgbGVzIHNvdXBvbm5lbnQgZD9hdm9pciB0b3VjaCBkZXMgY29tbWlzc2lvbnMgZGFucyBsZSBjYWRyZSBkZSBjZSBzeXN0bWUgb2NjdWx0ZS4uIApBbm90aGVyIHByb2plY3Qgd2Ugc3BlYXJoZWFkZWQgd2FzIHRoZSBPbHltcGljIFZpZXdpbmcgSHVicyB0aGF0IGxldmVyYWdlZCB0ZWNobm9sb2d5IHRvIGNyZWF0ZSBhIHNlcnZpY2Ugd2l0aCBhbiBlbGV2YXRlZCBleHBlcmllbmNlLiBDYXBpdGFsaXppbmcgb24gMjAxOCBPbHltcGljIGZldmVyLCBUaGUgQ29uY2llcmdlIENsdWIgcG9vbGVkIG91ciBoaWdoZXN0IHRlY2ggcmVzb3VyY2VzIHRvIGxhdW5jaCBuZXh0IGxldmVsIHNjcmVlbmluZyBzcGFjZXMgYXQgMjMgQ2FkaWxsYWMgRmFpcnZpZXcgcHJvcGVydGllcywgZWZmZWN0aXZlbHkgYnJhbmRpbmcgdGhlc2UgbG9jYXRpb25zIGFzIHRoZSAiSG9tZSBvZiBUZWFtIENhbmFkYS4iLiAKRm9yIGV2ZXJ5IG1vdmUgdGhlcmUncyBhIGNvdW50ZXIuIApTb21lIGNvdWxkIGdvIGludG8gdGhlaXIgVEZTQXMgdG8gZmlsbCBzcGFjZSBhbmQgdGhlIHJlbWFpbmRlciBjb3VsZCBiZSBzaGlmdGVkIHRvIFJSU1BzIGFuZCBvdGhlciBzYXZpbmdzLCBpbmNsdWRpbmcgUkVTUHMgZm9yIHRoZWlyIHRocmVlIGNoaWxkcmVuIHdoaWNoIGhhdmUgYSBwcmVzZW50IGJhbGFuY2Ugb2YgJDM4LDAwMC4gCkkgbGlrZSB0byBwdXJwb3NlbHkgbWlzdW5kZXJzdGFuZCBoZXIgaW4gcmlkaWN1bG91cyB3YXlzLiBTaGUgbWlnaHQgYXNrIG1lIHRvIGJyaW5nIHVwIGhlciBwb3N0IGl0IG5vdGVzIGZyb20gZG93bnN0YWlycywgc28gSSBzYXkgbm8gd29ycmllcyBhbmQgYnJpbmcgdXAgdGhlIHRvYXN0ZXIsIHRoZW4gdmVyeSBzZXJpb3VzbHkgYXNrIGhlciB3aGF0IG9uIGVhcnRoIHNoZSB3YW50ZWQgdGhhdCBmb3IuIFdoZW4gc2hlIGFza2VkIGZvciBoZXIgY2FyIGtleXMgYW5kIEkgZHJhZ2dlZCB1cCB0aGUgQ2hyaXN0bWFzIHRyZWUgd2FzIHByb2JhYmx5IHRoZSBoaWdobGlnaHQuIApEZWJhdGNoaW5nIEluYm91bmQgTWVzc2FnZXMgRnJvbSBCaXpUYWxrIFNRTCBBZGFwdGVyCkVTUEVDSUFMTFkgd2l0aCB0aGUgbWFzc2l2ZSBzdWNjZXNzIG9mIFdvVy4gCldoYXQgaXMgUGxheWVyIE9ubHkgUG9rZXIgYW5kIFNob3VsZCBZb3UgQmUgUGxheWluZyBJdApJIHVzZWQgVFYsIGFuZCBqdXN0IHRyaWVkIHRvIGV4dWRlIG15IGZhdm9yaXRlIHR2IGNoYXJhY3RlcnMgKHNob3cgaGFzIHRvIGJlIGxpdmUgYWN0aW9uIGFuZCBhZ2UgYXBwcm9wcmlhdGUgZm9yIGl0IHRvIHdvcmssIHRob3VnaC4pIEkgaGF2ZSB0aGlzIHdob2xlIGxvbmcgc3lzdGVtLCBJIGNvdWxkIFBNIHlvdSBpZiB5b3UnZCBsaWtlLCBidXQgSSB3b24ndCB0YWtlIHVwIHRvbyBtdWNoIG9mIHlvdXIgdGltZSBoZXJlIGlmIHlvdSdkIHJhdGhlciBub3QuLiAKQ3JlYW1zIGFuZCBvaW50bWVudCBjYW4gYWxzbyBiZSBoYXJzaCB0byB5b3VyIHNraW4gZHVlIHRvIGNoZW1pY2FsbHkgaW5kdWNlZCBpbmdyZWRpZW50cy4gCkFueSBudW1iZXIgb2YgZmFjdG9ycyBvciBhIGNvbWJpbmF0aW9uIG9mIGZhY3RvcnMgbWF5IGNhdXNlIHRoZXNlIGRvd25zd2luZ3MuIApJIHVzdWFsbHkgcGxheSAxLzMgYmVjYXVzZSBteSBzdGF0ZSBoYXMgYSBzcHJlYWQgbGltaXQgKENPKSB3aGljaCBlZmZlY3RpdmVseSBtYWtlcyAyLzUgYSBqb2tlLiAKSm9sbGlmZmUgKDIwMDcpIHByZXNlbnRzIHZhcmlvdXMgc3RhdGlzdGljYWwgbWV0aG9kcyB0byBxdWFudGlmeSB1bmNlcnRhaW50eSBpbiBmb3JlY2FzdCBza2lsbCBhbmQgZGlmZmVyZW5jZXMgaW4gZm9yZWNhc3Qgc2tpbGwuIAooT25jZSBJIGdldCB0byB3b3JrIEkgbGluayBzb21lIGJlbG93KS4uIApUaGUgcHJvYmxlbSB0aGF0IEkgZmluZCBteXNlbGYgYSBmYWlyIG51bWJlciBvZiB0aW1lcyB3aGVuIGZhY2luZyBhZ2dyZXNzaW9uIGlzIHRoYXQgSSBub3Qgc3VyZSB3aGF0IEkgc2hvdWxkIGRvIGJlY2F1c2UgSSBkaWRuIHBsYW4gZm9yIGl0LgpCdXQgYSBjb3VwbGUgdGhpbmdzIHN0aWxsIGRvbiBtYWtlIHNlbnNlOi4gCkkgd2lsbCBrZWVwIHRoZSBib29rcyBhbmQgdGhlaXIgc3VtbWFyaWVzIHRob3VnaCwgbWF5YmUgb25lIGRheSBJIGNhbiBtYWtlIGFuIGFwcCBvdXQgb2YgdGhpcyBhbmQgc2VsbCBpdCwgd2h5IG5vdC4uIApJIHJlYWxseSB0aGluayBtb3N0IHBlb3BsZSBhcmUgZ29vZC4uIApXaGVuIGFuICJzIiBiZWdpbnMgYSBzeWxsYWJsZSAoc2luZ2VuLCBsZXNlbiwgc28pLCBpdCBpcyBwcm9ub3VuY2VkIGxpa2UgdGhlIEVuZ2xpc2ggInoiOyB3aGVuIGl0IGVuZHMgYSBzeWxsYWJsZSwgaXQgaXMgcHJvbm91bmNlZCBsaWtlIHRoZSBFbmdsaXNoICJzIi4uIApUaGUgY29wcyBzdGFydGVkIGNpcmNsaW5nIGFyb3VuZCBNY0N1bGxvdWdoLCBidXQgcXVpY2tseSBmb3VuZCB0aGF0IHRoZXkgY291bGRuJ3QgYnJlYWsgaGlzIGFsaWJpLCB3aGljaCBoYWQgYmVlbiBiYWNrZWQgYnkgaGlzIGZhbWlseSBhbmQsIG9oIHllYWgsIGhhZCBoZWxkIHVwIGZvciBtb3JlIHRoYW4gZml2ZSBnb2RkYW1uZWQgZGVjYWRlcy4gCkdvdmVybm1lbnQgaXMgY29uY2VybmVkIGFib3V0IGFzIHdlbGwuIApBZ2FpbiBJIGRvbiBpbnRlbmQgdGhpcyB0byBiZSBhIHNsaWdodCBhdCBMQU9QIGZvciBub3QgYmVpbmcgZm9ydGhjb21pbmcsIGJ1dCBJIHdhbnQgcGVvcGxlIHRvIGtub3cgdGhhdCB3aGF0IGhlIHN0YXRlZCBpc24gZW50aXJlbHkgYWNjdXJhdGUgYXMgaGUgbWF5IG5vdCB5ZXQgYmUgY29tZm9ydGFibGUgYWRtaXR0aW5nIHRvIHRoZSBzZXZlcml0eSBvZiBoaXMgYWxjb2hvbGlzbS4gCklmIHlvdSBidXN5IGFuZCBkaWRuIHNlZSB0aGUgYWRtaW4gbWVzc2FnZSwgSSBndWVzcyB0aGF0IG1ha2VzIHNlbnNlLCBraW5kIG9mLCBleGNlcHQgc2VlaW5nIGEgbmV3IG1vZCB0aGF0IHlvdSBkaWRuIGFkZCB5b3Vyc2VsZiBzaG91bGQgYmVlbiBhIGNsdWUgdGhhdCBoZSB3YXMgYWRkZWQgYnkgYW4gYWRtaW4uIAoiQWZ0ZXIgY29uc3VtaW5nIHRoZSBjb29raWVzLCBmb3VyIHN0dWRlbnRzICh0aHJlZSB3ZXJlIDExIHllYXJzIG9sZCwgb25lIHdhcyAxMiB5ZWFycyBvbGQpIHJlcG9ydGVkIGZlZWxpbmcgZGl6enkgYW5kIGV1cGhvcmljLCIgcG9saWNlIHNhaWQgaW4gYSBuZXdzIHJlbGVhc2UuCk1vc3QgYWxsIGVhcmx5IHZhcmlhdGlvbnMgb2YgcG9rZXIgd2hlcmUgc2ltaWxhciBpbiBtYW55IHdheXMgYW5kIHRoZW4gd2VyZSBlbmhhbmNlZCBhbmQgbWl4ZWQgaW50byB3aGF0IG1hbnkgb2YgcGxheSB0b2RheS4uIApUaGUgd29tZW4gYmVnaW4gYnkgaGFydmVzdGluZyB0aGUgZW5zZXQgY3JvcC4gCkJlcG9vcGJvbnRpdCAgMjYgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClRlbGwgc29tZW9uZS4gCkZyb20gd2hhdCB0aGUgb2ZmaWNlcnMgd2VyZSBzYXlpbmcgaXMgdGhhdCBpcyByaWdodGZ1bCBkdWUgdG8gaGltIGJlaW5nIG9uIHByaXZhdGUgcHJvcGVydHkuIEkgbm90IGEgY29uc3RpdHV0aW9uYWwgbGF3eWVyIGJ1dCBJIHdvdWxkIHByb3Rlc3QgdGhhdCBhcyB3ZWxsLiBXaGF0IHByb2JhYmxlIGNhdXNlIGRvIHRoZSBvZmZpY2VycyBoYXZlPyBBIHBob25lIGNhbGxlZCByZXBvcnQ/IEV2aWRlbmNlPyBXYXJyYW50PyAiT2F0aCBvciBBZmZpcm1hdGlvbj8iIFByaXZhdGUgcHJvcGVydHkgbWVhbnMgcHJpdmF0ZSBydWxlc2V0LiBTdWJzZXF1ZW50bHkgdGhlIHByaXZhdGUgcnVsZXNldCBtaWdodCBkaWN0YXRlIHRoYXQgaWYgdGhlIHBlcnNvbiBkb2VzbiBjb21wbHkgd2l0aCB0aGUgcHJpdmF0ZSBydWxlc2V0IHRoZW4gdGhleSBjYW4gYmUgb24gdGhhdCBwcml2YXRlIHByb3BlcnR5LgpJIGxvdmUgbG92ZSBsb3ZlIHRvIGRvIHRoZWF0cmUgcHJvZmVzc2lvbmFsbHksIGZvciB0aGUgcmVzdCBvZiBteSBsaWZlLiBJZiBJIHBvdGVudGlhbGx5IGRvbiBoYXZlIHRvIGdvIGludG8gZGVidCB0byBkbyBpdCwgdGhhdCBzb3VuZHMgZmFudGFzdGljISA6KS4gClllcC4gCkpldHp0IGdhYiBlcyB2b3IgY2EuIDUgSmFocmVuIGVpbiBuZXVlcyBOZXViYXVnZWJpZXQgdW5kIGRpZSBnYW56ZW4gU1VWIGZhaHJlbmRlbiBOZXUgRWx0ZXJuIGtvbW1lbiBkYW1pdCBiZXJoYXVwdCBuaWNodCBrbGFyLiAKTW9zdCBvZiB0aGUgZ3V5cyBqdXN0IHdlcmUgbm90IGludG8gYmVpbmcgYXQgYSBjbyBlZCBzaG93ZXIuIApXZWxsIDFzdCBvZiBhbGwgZ2V0IGdvb2QgZ3JhZGVzLiBJZiB5b3VyIGxhenkgZW5vdWdoIHRvIGdldCBnb29kIGdyYWRlcyBnZXQgYSBqb2IuIElmIHlvdSBkb24ndCB3YW50IGEgam9iIHNlbGwgc29tZSBvZiB5b3VyIHN0dWZmIG9ubGluZSBvciBhIHlhcmQgc2FsZS4gCk5vdywgaWYgeW91IHBhaWQgc29tZW9uZSB0byBndWFyZCB5b3VyIGNhciBmcm9tIHRoaWV2ZXMgYW5kIGEgdGhpZWYgc3RvbGUgc29tZXRoaW5nLCB0aGF0J3MgYSBkaWZmZXJlbnQgc3RvcnkuIEJlY2F1c2UgdGhlIHNwZWNpZmljIGhhcm0gdGhhdCBvY2N1cnJlZCAodGhlZnQpIGlzIHRoZSB0aGluZyB0aGF0IG1ha2VzIHRoZWlyIGNvbmR1Y3QgbmVnbGlnZW50Li4gClBva2VyIFNwb3J0cyBMZWFndWUgKFBTTCksIGEgZnJhbmNoaXNlIGJhc2VkIHBva2VyIGxlYWd1ZSwgaXMgb25lIG9mIEluZGlhJ3MgYmlnZ2VzdCBwb2tlciB0b3VybmFtZW50cy4gClJlYWxpc3RpY2FsbHksIHRoZXJlIG5vdGhpbmcgeW91IGNhbiBkby4gUG9saWNlIGRvbiBlbmZvcmNlIGdhbWJsaW5nIGRlYnRzIGFuZCBhc3NhdWx0aW5nIGhpbSAob3IgZXh0b3J0aW5nIGhpbSwgd2hpY2ggeW91IGFwcGFyZW50bHkgaGF2ZSBubyBxdWFsbXMgZG9pbmcpIGlzIGR1bWIgYXMgc2hpdC4gClRoZSBjb25jdXNzaW9uIHdhcyBub3QgYSBiaWcgZGVhbCBhbmQgSSBjb3VsZCBzZWUgYWdhaW4gYWZ0ZXIgYWJvdXQgYSBkYXksIGJ1dCBteSBsZWcgd2FzIHN3b2xsZW4gdXAgc28gYmFkIEkgY291bGRuJ3Qgd2FsayBwcm9wZXJseSBmb3IgYWJvdXQgdHdvIHdlZWtzLiAKVGhleSBkcmFnZ2VkIEpha2UgYW5kIEFtaXIgb3V0IG9mIHJldGlyZW1lbnQgdG8gZG8gYSBsYW1lLCB0cml0ZSBsYW1iYXN0ZSBvZiBUcnVtcCAoZGlyZWN0IGxpbmssIGJ1dCBmZWVsIGZyZWUgdG8gZmluZCBhbm90aGVyIHNvdXJjZSBpZiB5b3UgZG9uIHdhbnQgdG8gZ2l2ZSB0aGVtIHRoZSBoYXRlIGJ1Y2tzKS4gVGhleSBhbHNvIHN0b3BwZWQgZG9pbmcgdmlkZW9zIG1vcmUgdGhhbiBhIHllYXIgYWdvIHdpdGggYSBmdWxsIGZpbmFsZSwgc28gdGhpcyB3YXMgYWxzbyBhIGJpdCBvZiBhIGJsb3cgdG8gdGhlaXIgbGVnYWN5Li4gCkZyb20gYSBtb3JhbCBzdGFuZHBvaW50IGRpdmVyc2l0eSBpcyBjbGVhcmx5IGdvb2QuIApLeWxlIENvb3Blciwgd2hvIGNyZWF0ZWQgdGhlIGZpbG0ncyB0aXRsZSBzZXF1ZW5jZSwgY29tcGFyZWQgU2FibGUgdG8gRHVzdGluIEhvZmZtYW4ncyBjaGFyYWN0ZXIgaW4gUmFpbiBNYW4uIFRoZXJlIHdlcmUgdGhvdXNhbmRzIHVwb24gdGhvdXNhbmRzIG9mIHBhZ2VzIG9mIHRoaXMgc3R1ZmYsIGFsbW9zdCBhbGwgb2Ygd2hpY2ggZGlkbid0IHRoZSBtYWtlIHRoZSBtb3ZpZSwgYmV5b25kIGJlaW5nIHNjYXR0ZXJlZCBhYm91dCBpbiB0aGUgYmFja2dyb3VuZCBvZiBKb2huIERvZSdzIGFwYXJ0bWVudC4gVGhlIG1vc3Qgc2NyZWVuIHRpbWUgdGhpcyB3b3JrIHNhdyB3YXMgYW4gZWlnaHQgbWludXRlIG1vbnRhZ2UgcG9ja2V0ZWQgYXdheSBvbiB0aGUgRFZELiBCdXQgd2hlbiBTZTdlbiByYW4gb3V0IG9mIG1vbmV5IGFuZCBjb3VsZG4ndCBzaG9vdCB0aGUgdGl0bGUgc2VxdWVuY2UgdGhleSBvcmlnaW5hbGx5IHdhbnRlZCwgS3lsZSBDb29wZXIgZmluYWxseSBzdWdnZXN0ZWQgdXNpbmcgaXQuCldlIHRydWx5IGhvcGUgdG8gd2VsY29tZSB5b3Ugc29vbiBiYWNrIHdpdGggdXMgZm9yIGFub3RoZXIgZmFudGFzdGljIGFuZCByZWxheGVkIHN0YXkuIEdyZWV0aW5ncyBmcm9tIHRoZSB3aG9sZSBCMiB0ZWFtLiBCZXN0IHJlZ2FyZHMsIHlvdXIgR3Vlc3QgQW1iYXNzYWRvciBOaW5hIFNjaHJvZWRlci4gCkZvciBNVFQgdG91cm5hbWVudHMsIHlvdSBuZWVkIDEwMCBidXkgaW5zLiAKVGhlcmUgYXJlIGdvdmVybm1lbnRzIGF0IGV2ZXJ5IGxldmVsIGZyb20gY2l0eSwgdG8gY291bnR5LCB0byBzdGF0ZSBhbmQgdGhleSBjb3VsZCBhbGwgZnVuZGFtZW50YWxseSBkaXNhZ3JlZSBvbiBob3cgdG8gYmVzdCBydW4gdGhlaXIgbmVjayBvZiB0aGUgd29vZHMuIApJIGRpZCBrZWVwIG1pbmUgaW4gdGhlIGZhbWlseSBzYWZlLCB3aGVuIEkgbGl2ZWQgYXQgaG9tZS4gQnV0IEkgYWxzbyBoYWQgZnJlZSBhY2Nlc3MgdG8gdGhhdCBmYW1pbHkgc2FmZSBhbmQgY291bGQgZ28gZ2V0IG15IGRvY3VtZW50cyBhbnkgdGltZSBJIG5lZWRlZCB0aGVtLiAKT3IgbWF5YmUgaXQgbWVhbnMgaGUgZGlkbiBrZWVwIGFueSBvZiB0aGUgd3JpdHRlbiBsaW5lcyBvciBldmVuIHRoZSBnZW5lcmFsIHN0b3J5IGlkZWFzLCBidXQgYWdhaW4sIGtlcHQgdGhlIG1haW4gc3RvcnkgbGluZXMgb2YgdGhlIHRyaWxvZ3ksIHdoaWNoIGlzIHRvdGFsbHkgZmluZSwgcGVvcGxlIGRvIHRoYXQgYWxsIHRoZSB0aW1lLiAKVGhlIGV4YWN0IHJlYXNvbiBmb3IgdGhlc2UgZWZmZWN0cyBzdGlsbCByZW1haW5zIGEgbWF0dGVyIG9mIGRlYmF0ZS4gClBvdXIgY29tbWVuY2VyLCBpbCBtZSBmYXV0IHZvdXMgZGlyZSBjb21tZW50IGonZW4gc3VpcyB2ZW51ICB2b3VzIHBhcmxlciBkZSBjZWxhLiBJbCBzZSB0cm91dmUgcXVlIGplIHJlb2lzIGJlYXVjb3VwIGRlIGRvY3VtZW50cyBjaXJjdWxhbnQgcGx1cyBvdSBtb2lucyBzb3VzIGxlIG1hbnRlYXUgZXQgIGNlIHRpdHJlIGonYWkgcmV1IHVuIHRleHRlIG5vbiBzaWduIHF1aSBjaXJjdWxlIHN1ciBJbnRlcm5ldCBldCBxdWkgcmNsYW1lIHF1ZSBsZXMgdGVycm9yaXN0ZXMgc29pZW50IGluY2lucnMgZXQgbGV1cnMgY2VuZHJlcyBkaXNwZXJzZXMgZGFucyB1biBjb3VycyBkJ2VhdS5DZSB0ZXh0ZSBxdWkgdmllbnQgbWFuaWZlc3RlbWVudCBkZSBxdWVscXUndW4gZCdhc3NleiBzYXZhbnQgZW4gbWF0aXJlIGRlIHJlbGlnaW9uIGV4cGxpcXVlIHBvdXJxdW9pIGxlIHNpbXBsZSBmYWl0IGQnYWdpdGVyIGNldHRlIG1lbmFjZSBhdXJhaXQgZCdhYm9yZCBwb3VyIGVmZmV0IGQnaW5jaXRlciBsZXMgdHJhdHJlcyAgc2UgZGNvdXZyaXIuIApUaGUga25vY2tkb3duIHRoYXQgd2Fzbid0IHNwdXJyZWQgUGFjcXVpYW8gb24gYXMgaGUgd2VudCBhZnRlciBNb3NsZXkgdGhlIHJlc3Qgb2YgdGhlIHJvdW5kIGFuZCBhZ2FpbiBpbiB0aGUgMTF0aC4gQnkgdGhlbiB0aGUgY3Jvd2Qgd2FzIGNoZWVyaW5nICJLbm9jayBoaW0gb3V0ISBLbm9jayBoaW0gb3V0ISIgYnV0IFBhY3F1aWFvICAgYm90aGVyZWQgYnkgYSBjcmFtcCBpbiBoaXMgbGVmdCBsZWcgc2luY2UgdGhlIGZvdXJ0aCByb3VuZCAgIGRpZG4ndCBoYXZlIGVub3VnaCB0byBmaW5pc2ggaGltIG9mZi4uIApJdCBkb2VzIG5vdCBoYXZlIHRoZSBzYW5kYm94aW5nL2FjY2VzcyBjb250cm9sIHRoYXQgZmxhdHBhayBoYXMgYnV0IGlzIGl0IHJlYWxseSBhIGdvb2QgaWRlYSB0byBiaW5kIGFjY2Vzcy9wZXJtaXNzaW9uIGNvbmZpZ3VyYXRpb24gd2l0aCBhIHBhY2thZ2UgbWFuYWdlcj8gLiAKSHVuZyB1cCBhbmQgd2FpdGVkIGF0IHRoZSBkZXN0aW5hdGlvbiBmb3IgdGhlIGFub3RoZXIgNSwgYW5kIHRvdGFsIG9mIHRlbi4gCiJUaGF0IGhvbWUuIApHbHV0ZW4gRnJlZSBEaWV0IGhlbHBlZCBOZXJ2ZSBQYWluIE5ldXJvbG9neSAyMDEwR2x1dGVuICBBbnhpZXR5IFBhbmljIEF0dGFja3MgUmVzb2x2ZSBvbiBhIEdsdXRlbiBGcmVlRGlldC4KVGhlcmUgYXJlIHNvbmdzIHRob3VnaCwgdGhhdCBzb3VuZCB0b28gbXVjaCBvdXQgb2YgdGhlIEp1bGlhbiBDYXNhYmxhbmNhcyBoYW5kYm9vayBJIGZpbmQgaXQgcmF0aGVyIGZydXN0cmF0aW5nLiAKVGhlIHN0YXRlIGNvdXJ0IHN5c3RlbSBJbnNwZWN0b3IgR2VuZXJhbCBTaGVycmlsbCBTcGF0eiBsYXN0IHdlZWsgb3BlbmVkIGEgcHJvYmUgaW50byB0aGUgYWN0aW9ucyBvZiBmb3JtZXIgTWFuaGF0dGFuIENyaW1pbmFsIENvdXJ0IEp1ZGdlIEVpbGVlbiBLb3JldHogd2hvIG5vdyB3b3JrcyBhcyBhIGp1ZGljaWFsIGhlYXJpbmcgb2ZmaWNlciBpbiBjb3VydHJvb21zIGZvciAkNDAwIHBlciBkYXkgaW4gdGhlIGRpc3B1dGUgYmV0d2VlbiBoZXIgZGF1Z2h0ZXIsIE1hbmhhdHRhbiBBc3Npc3RhbnQgRGlzdHJpY3QgQXR0b3JuZXkgTGF1cmVuIEFuZ2VsbyBTZWx0emVyLCBhbmQgVmFuZXNzYSBSaXZhcywgYWNjb3JkaW5nIHRvIGEgc3RhdGUgY291cnRzIHNwb2tlc21hbi4KSGlkZGVuIHNlY3JldCBudW1iZXIgdHdvOiBQcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVycyBkb24ndCBiZXQgb24gZXZlcnkgaGFuZC4gCjEpIGlzIGludG8gZXZlcnl0aGluZyBmcm9tIHBldHJvY2hlbWljYWxzIHRvIEJvbGx5d29vZC4xMjYuIApUaGlzIGlzIGEgYmlnIHBsdXMgYXMgY29tcGFyZWQgdG8gcGxheWluZyBmcm9tIHRoZSBuZWlnaGJvcmhvb2QgY2FzaW5vLiAKQWxzbywgZm9yIHdoYXQgaXQgd29ydGgsIHRoZSBhcHBsaWNhdGlvbnMgSSBkb25lIHdpdGggdGhpcyAicHNldWRvIiByZWR1bmRhbmN5IHNoYXJlZCB0aGUgc2FtZSBQSUQgY29udHJvbGxlZCBlcXVpcG1lbnQuIE91cnMgaGFkIGEgbGFnIHRpbWUgb24gdGhlIG9yZGVyIG9mIG1pbnV0ZXMgaW4gYmV0d2VlbiBpbnB1dCBhbmQgcmVhY3Rpb24sIHNvIHdlIGdvdCBhd2F5IHdpdGgganVzdCB0dXJuaW5nIG9mZiB0aGUgUElEIGNvbnRyb2wgb24gdGhlIHN0YW5kYnkgY29udHJvbGxlciBhbmQgdGhlbiB0dXJuIGl0IG9uIHdoZW4gaXQgYmVjYW1lIHRoZSBtYXN0ZXIgY29udHJvbGxlci4gClRoZXJlIHdhcyBhIGNvbXBhcmlzb24gb2YgS2FpcmkgcG9zdGVkIHRoZSBvdGhlciBkYXkgYW5kIG9uIHRoYXQgb25lIHlvdSBjb3VsZCBhbHNvIHNlZSB0aGF0IGhlciBmYWNlIHdhcyBtb3JlIHJvdW5kZWQsIGNoZWVrcyBzZWVtZWQgYSBiaXQgcHVkZ2llciBhbmQgdGhlIHByb3BvcnRpb25zIGluIGdlbmVyYWwgd2VyZSBhIGJpdCBkaWZmZXJlbnQgdGhhbiBpbiB0aGUgS0gyIG1vZGVscy4gVGhlIHNhbWUgcG9pbnRzIGFyZSB2ZXJ5IHZpc2libGUgb24gdGhlc2UgcGljcyBvZiBTb3JhIGFzIHdlbGwuSW4gbXkgb3BpbmlvbiB0aGUgS0gyIGRlc2lnbnMgYXJlIHN0aWxsIHN1cGVyaW9yIGFuZCBJIGFtIHdvbmRlcmluZyB3aHkgdGhleSBldmVuIGNoYW5nZWQgdGhlbSB0aGF0IG11Y2guIAooS2VlcCBpbiBtaW5kIHRoYXQgcGxhdGUgdGVjdG9uaWNzIHNob3VsZCBub3QgYmUgY29uZnVzZWQgd2l0aCBQbGF0ZXMgVGVjdG9uaWMsIGEgZ29vZCBuYW1lIGZvciBhIHJldm9sdXRpb25hcnkgc2NpZW5jZSB0aGVtZSByZXN0YXVyYW50LikuIApUaGF0J3Mgd2hhdCBJIGZpZ3VyZWQsIGJ1dCB0aGUgbGV0dGVyIHdhcyBzdGlsbCBwcmV0dHkgc2hpdHR5IHdoZW4gaXQgbWVhbnQgbm90aGluZy4gQmV5b25kIHRoYXQsIGF0IG15IHdvcmtwbGFjZSwgd2Ugc2hpcCBleHBlbnNpdmUgdGFibGVzIHdpdGggRmVkRXguIFdlIG1ha2UgaXQgY2xlYXIgdGhhdCB0aGUgY29udGVudHMgb2YgdGhlIGNyYXRlcyBhcmUgZnJhZ2lsZSBhbmQgZXhwZW5zaXZlIGJ1dCB0aGV5IHN0aWxsIGZpbmQgYSB3YXkgdG8gZnVjayBpdCB1cC4gCkFuZCBNcnMuIFRoZW9kb3JlIEl6ZXIgYW5kIGRhdWdodGVyLCBUaGVkYSwgb2YgTW5uYSBGdXJuYWNlLCBzcGVudCBsYXN0IFRodXJzZGF5IHdpdGggTXJzLiBJemVyJ3MgcGFyZW50cywgTXIuIApBIHJvdXRpbmUgc28gaW50ZW5zZSBkZXRlcnMgdGhlIDUgZm9vdCBzdGFyIGZyb20gd2FudGluZyB0byBzYWJvdGFnZSBoZXJzZWxmLiBMZWUgc2F5cyB0aGUgbW90aGVyIG9mIE1hc29uLCA4LCBQZW5lbG9wZSwgNiwgYW5kIFJlaWduLCAzLCAod2l0aCBleCBTY290dCBEaXNpY2spIGlzICJyZWFsbHksIHJlYWxseSBnb29kIiBhYm91dCBzdGlja2luZyB0byB0aGUgcmVjb21tZW5kZWQgaGlnaCBwcm90ZWluLCBoaWdoIGZpYmVyLCBsb3cgc3VnYXIgZGlldC4KSSBzYXcgeW91IHN0YW5kIHVwIGZvciB3aGF0IHRoZSBhZ2VuY3kgcmVwcmVzZW50ZWQgdG8gbm90IG9ubHkgaW50ZXJuYWwgcHJlc3N1cmVzIGJ1dCB0byBjbGllbnRzLiBJIGxlYXJuZWQgdGhhdCBiZWluZyB0aGUgYm9zcyBtZWFucyBiZWluZyBpbnZvbHZlZC4gCjYgS2FtbG9vcHMgUHJpZGUgaXMgYnJpbmdpbmcgdG9nZXRoZXIgdGhlIExHQlQgY29tbXVuaXR5IHRoaXMgd2Vla2VuZC4gSXQgYWxsIGtpY2tzIG9mZiB0b25pZ2h0LCB3aXRoIGEgcGVyZm9ybWFuY2UgYnkgVmFuY291dmVyIHNvdWwgYmFuZCBRdWVlciBhcyBGdW5rIGF0IEhvdGVsIDU0MCwgNTQwIFZpY3RvcmlhIFN0LiAKTGlrZSBtZSwgRHVmZiBtYW5hZ2VkIHRvIHNxdWVlemUgaW50byBNb3JnYW4gU3RhbmxleSBQcml2YXRlIENsaWVudCBTZXJ2aWNlcyBHcm91cCAoYWthIGhpZ2ggbmV0IHdvcnRoKSB2aWEgdGhlIHNpZGUgZG9vci4gClRoZWlyIGJpZyBicmVhayB3YXMgaW4gMjAwOSB3aGVuIGEgVmFuY291dmVyIHByb3BlcnR5IG9uIEdyYW52aWxsZSBTdHJlZXQgY2FtZSB1cC4gVGhleSBmb3VuZGVkIEpSRyBhbmQgb3BlbmVkIEpvc2VwaCBSaWNoYXJkIE5pZ2h0Y2x1YiAoYmFzZWQgb24gdGhlaXIgbWlkZGxlIG5hbWVzKS4gQm91cnF1ZSBzYXlzIHRoZXkgaGFkIHRvIHB1bGwgb3V0IGFsbCB0aGUgc3RvcHMgdG8gZnVuZCB0aGUgJDEgbWlsbGlvbiBwcm9qZWN0LiBjYWxsZWQgZXZlcnlvbmUgd2Uga25ldyBhbmQgcHJlc2VudGVkIG91ciBwcm9wb3NhbCB0byBhdCBsZWFzdCAyMCBwZW9wbGUuIEZpbmFsbHkgYSBjb3VwbGUgb2YgZnJpZW5kcyBqdW1wZWQgaW4gdG8gaGVscC4gRXZlcnl0aGluZyB3YXMgYSBsZWFybmluZyBleHBlcmllbmNlLgpIZXIgYXBwZWFyYW5jZSAgIGFsbW9zdCBodW1hbiB5ZXQgb2J2aW91c2x5IHN5bnRoZXRpYyB3aXRoIHdpZGUgbWFuZ2EgaW5zcGlyZWQgZXllcyAgIG1heSBwcm92b2tlIGRpc3BhcmF0ZSByZWFjdGlvbnMuIEl0IHdvcmtlZCBmb3IgbWUgYnV0IHNvbWUgbWF5IGZpbmQgdGhlcmUgdG8gYmUgc29tZXRoaW5nIGNyZWVweSBvciB1bnNldHRsaW5nIGFib3V0IGhlci4gCkkgYW0gbm90IHJlYWxseSBzdXJlIHdoeSBwZW9wbGUgYXJlIGNvbmNlcm5lZCBvdmVyIGNhbGxpbmcgb24gdGhlIHR1cm4sIGFueSB0aG91Z2h0cyBvbiB0aGF0PyBJIGNvdWxkIHNlZSBhbiBhcmd1bWVudCBmb3IgcmFpc2luZyBpbiBjYXNlIGhlIGhhcyBhbiA4IG9yIHNvbWV0aGluZyBpbiBoaXMgaGFuZCwgYnV0IEkgdGhpbmsgY2FsbGluZyBpcyBhY3R1YWxseSBzY2FyaWVyIGZvciB0aG9zZSB0eXBlcyBvZiBoYW5kcy4gSSBkb24gdGhpbmsgd2UgYXJlIGZvbGRpbmcgb3V0IEtRIG9yIEFRIG9uIHRoZSB0dXJuICAgbWF5YmUgUUogYnV0IHdlIGJsb2NrIHRoYXQuCkluIGEgcGh5c2ljYWwgY2FyZCByb29tIG9yIGluIGEgY2FzaW5vLCB5b3Ugd2lsbCBub3RpY2UgYSBwb29yIHBsYXllciBwdXR0aW5nIGEgaGFuZCBvdmVyIGhpcyBtb3V0aC4gV2h5PyBCZWNhdXNlIGhlIGlzIHRyeWluZyB0byBjb25jZWFsIGEgc21pbGUgKG5vdCBhIHlhd24pLiBZb3UgY2FuIGJlIHN1cmUgdGhhdCBqdXN0IGFzIHRoZSBzdW4gcmlzZXMgaW4gZWFzdCwgaGUgaXMgaG9sZGluZyBhIHN0cm9uZyBoYW5kLiAKTCdhbmdsaXF1ZSBlc3QgdW5lIHBsYW50ZSBxdWkgdml0IGVudHJlIDIgZXQgNCBhbnMuIApBIGRydWcgYnVzdCBhdCBhbiBJdGFzY2EgaG9tZSBuZXR0ZWQgRG91Z2xhcyBDb3VudHkgU2hlcmlmZidzIERlcGFydG1lbnQgZGVwdXRpZXMgMTEgc21hbGwgbWFyaWp1YW5hIHBsYW50cywgZHJpZWQgbWFyaWp1YW5hIGFuZCBwYXJhcGhlcm5hbGlhIGluY2x1ZGluZyBzY2FsZXMsIGdyaW5kZXJzLCBhIGRpZ2l0YWwgc2NhbGUgYW5kIHBhY2tpbmcgbWF0ZXJpYWxzLCBhY2NvcmRpbmcgdG8gYSBjcmltaW5hbCBjb21wbGFpbnQgYWdhaW5zdCBDaHJpc3RvcGhlciBSYXkgWW91bmdibG9vZCwgMjcuIEFsc28gZm91bmQgYXQgdGhlIHJlc2lkZW5jZSB3YXMgYSBSdWdlciAuMjIgY2FsaWJlciByaWZsZS4gCkx1Y2lhIEZhbWlseSBIb3RlbHNTdC4gTHVjaWEgR3JlZW4gSG90ZWxzQnkgSG90ZWwgQ2xhc3M1IHN0YXIgSG90ZWxzIGluIFN0LiAKIHdpbGwgYWxzbyBwcm92aWRlIGFkZGl0aW9uYWwgZW5lcmd5IHJlcXVpcmVkIHRvIHJlY292ZXIgZnJvbSBpbGxuZXNzLi4gCkluIEtpYW1hICB3aGVyZSB0aGVyZSBhcmUgb25seSAyNzIgcG9rZXIgbWFjaGluZXMgIHRoZSB5ZWFybHl0dXJub3ZlciB3YXMgJDgyIG1pbGxpb24sIG9yICQzODEgbG9zdCBwZXIgcmVzaWRlbnQuIE9mIGNvdXJzZSwgdGhlc2UgZmlndXJlcyB1c2UgdGhlIGVudGlyZSByZWdpb24ncyBwb3B1bGF0aW9uIGFuZCBubyBkb3VidCBpbmNsdWRlIG1hbnkgcGVvcGxlIHdobyBkb24ndCBnYW1ibGUsIG9yIGNhbid0IGdhbWJsZSBiZWNhdXNlIHRoZXkncmUgY2hpbGRyZW4uIEFzc29jaWF0ZSBQcm9mZXNzb3JNZWxhbmllIEdhbWJsZSAgYSBtYXJrZXRpbmcgcmVzZWFyY2hlciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBXb2xsb25nb25nICBoYXMgYmVlbiBwYXJ0IG9mIGEgdGVhbSBjb25kdWN0aW5nIHJlc2VhcmNoIGludG8gZ2FtYmxpbmcsIGFuZCBzYXlzIGF2ZXJhZ2Vwcm9ibGVtIGdhbWJsZXJzIHdvdWxkIGJlIGxvc2luZyBtdWNoIG1vcmUgdGhhbiB0aGUgYWJvdmUgZmlndXJlcy4gCkhlIGtlZXBzIGdldHRpbmcgaW4gd2l0aCA5MCslIGVxdWl0eSBhbmQgbG9zaW5nLiAKVGhpcyBpc24gbGlrZSBwZW9wbGUgYXJlIHB1c2hpbmcgTWFydmVsIHRvIG1ha2UgYSBtdWx0aW1pbGxpb24gYmxvY2tidXN0ZXIgb24gYSB0cmFucywgaGFuZGljYXBwZWQsIFRpYmV0YW4gc3VwZXJoZXJvIHRoYXQgZG9lc24gZXhpc3QgYXMgYSB0aXRsZSBpbiB0aGUgY29taWNzLiBJdCBzdWdnZXN0aW5nIHRoYXQgdGhlcmUgZmFucyBvZiBjb21pY3MgYW5kIHRpdGxlcyB0aGF0IGhhdmUgYmVlbiBrZXB0IG91dCBvZiBjaW5lbWEgb3ZlciBzb21lIG1pc2d1aWRlZCBzZW5zZSB0aGF0IGl0IHdvdWxkbiBzdWNjZWVkLiBCbGFjayBQYW50aGVyIGFsc28gcHJvb2YgdGhhdCB1c2luZyBzb21lIG9mIHRoZSBvdGhlciBjaGFyYWN0ZXJzIHdobyBhbHJlYWR5IGV4aXN0IGluIHRoZSBNYXJ2ZWwgdW5pdmVyc2UgdGhhdCBhcmVuIHdoaXRlIG1hbGVzIHN0aWxsIHdvcmtzLiBIZWxsIGV2ZW4gRGVhZHBvb2wgd2FzIGEgMTAgeWVhciBiYXR0bGUgcHVzaGluZyBmb3IgbW9yZSBkaXZlcnNlIGxldmVscyBvZiBSIHJhdGVkICJvZmZlbnNpdmUiIGNoYXJhY3RlcnMuClRoaXMgaXMgYSByZWFsbHkgZHVtYmVkIGRvd24gdmVyc2lvbiBvZiBpdCwgYnV0IHRoYXQgYmFzaWNhbGx5IHRoZSBsYWN0aWMgYWNpZCBvciBhbmFlcm9iaWMgZW5lcmd5IHBhdGh3YXkuIApJbCBtZSByZXN0ZSAgZmFpcmUgbGEgc3ludGhzZSBkZSBjZSBxdSdhIHB1IGVuIGRpcmUgVGF0eSBMYXV3ZXJzLiBQZXJzb25uZWxsZW1lbnQgamUgbidlbiBjb25zb21tZSBwYXMgKHN1cnRvdXQgcGFzIGRlIHRvZnUsIHBhcyBkZSB5YW91cnRzLCBldCBzdXJ0b3V0IHBhcyBkZSBsYWl0cyB2Z3RhdXgpLiBMYSBtZWlsbGV1cmUgc291cmNlIGQnaW5mb3JtYXRpb24gc2UgdHJvdXZlIGNoZXogY2V0IGF1dGV1ciBtYWlzIGlsIGZhdXQgZG1sZXIsIGMnZXN0IGV4dHJtZW1lbnQgdG91ZmZ1LiBTZWxvbiBjZXMgY29sZXMsIElpIHNlcmFpdCB0cnMgbWF1dmFpcyBwb3VyIGxhIHRoeXJvZGUgZXQgbGUgcGFuY3Jhcy4gClRoZSBoaXR0aW5nIHByb3NwZWN0cyB3ZSBoYXZlIGRyYWZ0ZWQgaGF2ZW50IGNvbWUgdGlsIHJvdW5kcyA3IGFuZCBsYXRlci4gWW91IGFyZW50IGdldHRpbmcgdG9wIGhpdHRpbmcgcHJvc3BlY3RzLCBzbyB5b3VyIGNoYW5jZXMgb2YgZmluZGluZyBnZW0gYXJlIGxpbWl0ZWQuIApTaGl0LCB0aGUgb25seSBjaG9pY2UgdGhlIGRlbXMgZ2F2ZSB1cyB3YXMgYSBjcmltaW5hbGx5IGluY29tcGV0ZW50IHdpdGNoLkkgZGlncmVzcywgYWxsIHBvbGl0aWNpYW5zIGF0IHRoZSBuYXRpb25hbCBsZXZlbCBhcmUgbmFyY2lzc2lzdGljIHdpdGggcGxlbnR5IG9mIHVuaXF1ZSBwcmVqdWRpY2VzIHRoZXkgaG9sZC4gUGxheWluZyBpbnRvIHRoZSByaGV0b3JpYyBkb2Vzbid0IGRvIGdvb2QsIGl0IGZ1cnRoZXIgZGl2aWRlcyB1cy4gClRoZSB1c2Ugb2YgdGhlIEJpb2ZyZWV6ZSBwYWluIHJlbGlldmluZyBnZWwgaXMgYW4gZWZmZWN0aXZlIHdheSB0byB0ZW1wb3JhcmlseSBhaWQgbWlub3IgYWNoZXMgYW5kIHBhaW5zLiBBIHNtYWxsIGFtb3VudCBvZiB0aGlzIGdlbCBjYW4gZWFzZSBhd2F5IHRoZSBwYWluIG9mIHRpcmVkIGFuZCBzb3JlIG11c2NsZXMuLiAKT3IgbWF5YmUgdGhleSBjb3VsZC4gCkxpa2Ugb3Igbm90LCB0aGUgbGVmdCBsYW5lIGlzIGEgVFJBVkVMIGxhbmUuIFlvdSBnZXQgaW4gaXQgdG8gdHJhdmVsLiAKQSBqdWRnZSBjYW4gZ2V0IGEgcmVwcmltYW5kLCB3aGljaCBkb2VzbiBkbyBtdWNoIGV4Y2VwdCBhbGxvdyBmb3IgaGltIHRvIGJlIGJsYXN0ZWQgaW4gdGhlIHByZXNzLiBJZiBoZSBhY3R1YWxseSB2aW9sYXRlcyB0aGUganVkaWNpYWwgY29kZSBvZiBjb25kdWN0IG9yIHNlcmlvdXNseSBoYXJtcyB0aGUganVkaWNpYWwgaW50ZWdyaXR5LCB0aGVuIGhlIGNvdWxkIGJlIGNlbnN1cmVkIGFuZCBwb3NzaWJseSBmYWNlIHNvbWUgc29ydCBvZiBhIGNvcnJlY3RpdmUgYWN0aW9uLiBUaGUgbmV4dCBsZXZlbCBpcyAic3VzcGVuc2lvbiB3aXRoIHBheSIsIGJ1dCB0aGF0IG11c3QgYmUgZGVjaWRlZCBieSB0aGUgU3VwcmVtZSBDb3VydC4gVGhlbiAiU3VzcGVuc2lvbiB3aXRob3V0IHBheSIuIFRoZW4gIlJlbW92YWwgZnJvbSBvZmZpY2UiIHdoaWNoIG1lYW5zIHRoZXkgd2VyZSBmb3VuZCBndWlsdHkgb2YgY29uZHVjdCB0aGF0IG1ha2VzIHRoZW0gdW5maXQgZm9yIG9mZmljZSAodXN1YWxseSBjb21taXR0aW5nIGEgY3JpbWUpLCBhbmQgdGhleSBhcmUgdW5lbGVjdGFibGUgYW5kIHVuYXBwb2ludGFibGUgYWdhaW4gZm9yIG9mZmljZSAoRXhjZXB0IGluIEFyaXpvbmEsIGFwcGFyZW50bHkpLgpUaGF0IG5vdCBhIGZhaXIgY29tcGFyaXNvbi4gCk9wZW4gYW4gYWNjb3VudCBhdCBUaXRhbiBCZXQsIG1ha2UgYSBkZXBvc2l0IGFuZCBwbGFjZSB5b3VyIGZpcnN0IGJldC4gCkd0Zm8gd2l0aCB5b3VyIGJ1bGxzaGl0Li4gCkF0IHRoZSBhZ2Ugb2YgMjIsIFBldGVyIEVhc3RnYXRlIG9mIE9kZW5zZSwgRGVubWFyaywgYmVjYW1lIHRoZSB5b3VuZ2VzdCB3aW5uZXIgb2YgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBjaGFtcGlvbnNoaXAgZXZlbnQsIGVhcm5pbmcgdGhlIHRvcCBwcml6ZSBvZiAkOS4xIG1pbGxpb24gYWZ0ZXIgdGhlIGZpbmFsIHRhYmxlIHJlY29udmVuZWQgYXQgdGhlIFJpbyBpbiBOb3ZlbWJlciBhZnRlciBhbiB1bnByZWNlZGVudGVkIDExNyBkYXkgYnJlYWsgaW4gdGhlIHRvdXJuYW1lbnQuIFRoZSBlbnRpcmUgV29ybGQgU2VyaWVzIGRyZXcgNTgsNzIwIGVudHJhbnRzIGZyb20gMTI0IGNvdW50cmllcyBjb21wZXRpbmcgZm9yIGEgcHJpemUgcG9vbCBleGNlZWRpbmcgJDE4MCBtaWxsaW9uLCBhbGwgcmVjb3Jkcy4gCkkgYmVlbiB0aHJvdWdoIHRoZSBTdWV6IGFuZCBQYW5hbWEgY2FuYWxzIGEgZmV3IHRpbWVzLiBWaXNpdGVkIHF1aXRlIGEgZmV3IHBsYWNlcyBpbiBTb3V0aCBBbWVyaWNhIGFuZCBzcGVudCBtb250aHMgaW4gQW50YXJjdGljYSBvbiBhIHN1cnZleSBzaGlwLiBJIGJlZW4gdG8gdGhlIFVTIHF1aXRlIGEgZmV3IHRpbWVzLCBOZXcgWW9yaywgQm9zdG9uLCBTb3V0aCBDYXJvbGluYSBhbmQgRmxvcmlkYS4gCkdhcyBzIGFib3V0IDIuODAgbHJhIHBlciBsdGVyIG9yIFVTRCAyLjMwIHBlciBsdGVyLiAKSSB3aXNoIEkgd2FzIG1ha2luZyBhbGwgdGhpcyB1cC4gSXQgZG9lcyBtYWtlIGZvciBhIEthZmthZXNxdWUgc3RvcnkgdG8gdGVsbCBteSBtb20sIHRob3VnaCwgYXMgbXkgcmVhc29uIGZvciBubyBsb25nZXIgZ29pbmcgdG8gTWFzcy4KV2FzIHRoZXJlIGFueXRoaW5nIHRoYXQgbWFkZSB5b3UgaGVzaXRhdGUgdG8gZ28gYWxsIGluIG9uIHRoaXMgbmV3bHkgY29uc3RydWN0ZWQgdmFsdWUgcHJvcD8KVGhlIGRvd25zaWRlIG9mIElDU0UgLyBDQlNFIChlc3AgaWYgeW91IGhhcHBlbiB0byBiZSBpbiBUTikgaXMgdGhhdCB5b3Ugc3RhbmQgYSBtdWNoIGxlc3NlciBjaGFuY2Ugb2YgbGFuZGluZyBhIHNlYXQgaW4gcG9wdWxhciBjb2xsZWdlcyAoRW5nZyAvIE1lZCkgc2luY2UgdGhlIGVudHJhbmNlIGV4YW1zIGZvciB0aGVzZSBhcmUgYmFzZWQgb24gc3RhdGUgYm9hcmQgc3lsbGFidXMgYW5kIHN0dWRlbnRzIGZyb20gc3RhdGUgYm9hcmQgc2NvcmUgbXVjaCBoaWdoZXIgdGhhbiB0aG9zZSBmcm9tIElDU0UgLyBDQlNFIHNpbmNlIHRoZXkgYXJlIGNvbnNpZGVyZWQgb24gYSBsZXZlbCBwbGF0Zm9ybSBpcnJzcGVjdGl2ZSBvZiB0aGUgYm9hcmRzLiAKVGhlIGRydWlkIGFuZCB0aGUgYmFyZCBkZWNpZGUgdG8gdHJ5IHRvIGJlZnJpZW5kIGl0LiBUaGUgZHJ1aWQgY291bGQgc3BlYWsgd2l0aCBpdCBhbmQgd2FzIGV4Y2hhbmdpbmcgcGxlYXNhbnRyaWVzIGFuZCB0cnlpbmcgdG8gYmUgZnJpZW5kbHkgZHVyaW5nIHRoZSB0aW1lIGl0IHdhcyB1bmRlciBoZXIgY29udHJvLiBJIHRyaWVkIHRvIGhhdmUgdGhpcyBnaWFudCBjcm9jIGJlIGluIGEgcGlzc2VkIG9mZiwgd2hvIGRhcmUgZW50ZXIgbXkgbGFpciBraW5kIG9mIGF0dGl0dWRlLCBidXQgdGhlc2UgeW91bmcgbGFkaWVzIGRpZCBhbiBpbmNyZWRpYmxlIGpvYiBwbGF5aW5nIHRoZWlyIGNoYXJhY3RlcnMgYW5kIGFsc28gaGFkIHNvbWUgYW1hemluZyByb2xscy4gU28gd2VsbCB0aGF0IGFmdGVyIHRoZSBjaGFybSB3b3JlIG9mZiwgdGhleSB3b3JrZWQgYXQgdGhpcyBjcm9jIGVub3VnaCB0byBnZXQgaGltIHRvIGxpc3RlbiBmb3IgYSBmZXcgbW9tZW50cyBhZnRlciB0aGUgc3BlbGwgd29yZSBvZmYgaW5zdGVhZCBvZiBpbnN0YW50bHkgZmx5aW5nIGludG8gYSByYWdlLiBUaGV5IGV2ZW50dWFsbHkgYmVmcmllbmQgdGhlIGNyb2MsIGZpbmQgb3V0IGhpcyBuYW1lIGlzICJMYWdpLCIgZmFzaGlvbiBhIG5lY2tsYWNlIGZvciBoaW0gb3V0IG9mIGJyaWdodCBibHVlIHNob2Ugc3RyaW5nIGFuZCB0ZWV0aCB0aGV5IG9idGFpbmVkIGZyb20gY29ycHNlcyBlYXJsaWVyIChhbm90aGVyIHF1aXJrIG9mIHRoZSBiYXJkKSBhbmQgdGhleSBhdHRhY2hlZCBpdCB0byB0aGUgY3JvYyBub3N0cmlscyBhcyBpdCB3YXMgd2F5IHRvbyBsYXJnZSB0byB3ZWFyIGl0IGFzIGFuIGFjdHVhbCBuZWNrbGFjZS4KTkMgU3VwcmVtZSBDb3VydCB1cGhvbGRzIGludGVybmV0IHN3ZWVwc3Rha2VzIGJhbgpNeWFtYWFjY3QgdQpJIGFza2VkIGh1YmJ5IHdobyBpcyBhIHByb2xpZmljIEhvbGQgZW0gcGxheWVyIGFuZCB0aGlzIGlzIHdoYXQgaGUgc2F5czoKQmFyYmFyYSwgc2hlZW4sIG9yIGFueSBzb25pYSB3b3VsZCBiZSBnb29kIGluaGVyaXRzLiAKU28sIHdoYXQgdGVuZHMgdG8gbWFrZSBnYW1ibGluZyBvbiB0aGUgaW50ZXJuZXQgc28gYXBwZWFsaW5nPyBZZXMsIGl0IGlzIHBvc3NpYmxlIHRvIHBsYXkgYW55IGdhbWUgb2YgdGhlIGNob2ljZSB3aXRoIG5vIHBvc3Nlc3NpbmcgdG8gbGVhdmUgeW91ciBwcmVmZXJyZWQgY2hhaXIuIE5ldmVydGhlbGVzcywgeW91IGNhbiBub3QgYmUgc2VydmVkIGFic29sdXRlbHkgZnJlZSBkcmlua3M7IHlvdSB3aWxsIG5vdCBiZSBhYmxlIHRvIHdhdGNoIHRoZSBnYW1lIHlvdSd2ZSBnb3Qgd2FnZXJlZCBvbiBmcm9tIGJpZyBUdiBzY3JlZW5zOyB5b3UgbWF5IG5laXRoZXIgc2VlIHRoZSBmYWNpYWwgZXhwcmVzc2lvbnMgb2YgdGhlIHBva2VyIG9wcG9uZW50cyBub3IgdG8gaGVhciB0aGUgc291bmRzIHdpdGggdGhlIGNvaW5zIGZhbGwgZnJvbSB0aGUgc2xvdCBtYWNoaW5lIG9uY2UgeW91IGhpdCB0aGUgaHVnZSBqYWNrcG90Li4gCk9uY2UgeW91IGhhdmUgJ2RyZWFkZWQnIGVhY2ggbG9jaywgeW91IGNhbiB3ZWFyIHRoZW0gZG93biwgcHVsbCB0aGVtIG91dCB0byB0aGUgc2lkZXMgb3IgcHVsbCB0aGVtIGJhY2sgaW4gYSBiYW5kYW5hLgpJIHdpc2ggSSByZWFkIHRoaXMgc3R1ZHkgZWFybGllciBpbiBteSBsaWZlLiBJIGFsd2F5cyBnb25lIHdpdGggdGhlIHRoZW9yeSB0aGF0IGdpdmluZyB5b3VyIGxvdmVyIHRoZSBzaWxlbnQgcG9rZXIgZmFjZSBtYWtlcyBoaW0gd29yayBoYXJkZXIuCklmIHlvdSBhcmUgc3RpbGwgY29uZnVzZWQgYWJvdXQgd2hhdCB5b3Ugc2hvdWxkIGJ1eSBhbmQgd2hhdCB5b3Ugc2hvdWxkIG5vdCwgdGhlbiB0YWtlIHlvdXIgdGltZS4gRmluZCBvdXQgd2hhdCBkZXNjcmliZXMgeW91IHRoZSBiZXN0LCB3aGF0IHJlc2VtYmxlcyB5b3VyIHN0eWxlLiBUaGVyZSBhcmUgZGlmZmVyZW50IHR5cGVzIG9mIGNhcmQgcHJvdGVjdG9ycyBhdmFpbGFibGUgb25saW5lLiAKT2ggSSBnZXQgaXQgeW91J3JlIGp1c3Qgd2lsbGZ1bGx5IG1pc3JlYWRpbmcgd2hhdCBteSBhcmd1bWVudCBpcywgYW5kIHRoaXMgZGlzY3Vzc2lvbiBoYXMgZXZlcnl0aGluZyB0byBkbyB3aXRoIENvYmIgQ291bnR5IHRheHBheWVycy4gVGhlIGZhY3QgaXMgdGhlcmUgd2VyZSBoYXJkbHkgYW55IHB1YmxpYyBkaXNjdXNzaW9ucyBhYm91dCB0aGUgZGV2ZWxvcG1lbnQgb2YgU3VudHJ1c3QgcGFyay4gClNoZSBxdWl0IHRoZSB0b3VyIHRoZW4gYW5kIHRoZXJlIGFuZCBkcm92ZSBKYWNrIGhvbWUuQmFjayBhdCBob21lLCBiZWZvcmUgUmViZWNjYSBjb3VsZCBldmVuIGNoYW5nZSBvdXQgb2YgaGVyIHNwYXJrbHkgZHJlc3MsIHRoZXkgaGFkIGl0IG91dC4gCldlbGwuJ1lvdSdyZSBKdXN0IHdlaXJkJyAgVTIyNjA5Myd0aGVyZSdzIG5vdCBtdWNoIG9mIHlvdSBsZWZ0IHRvIHNlZSAuIApBcyBzb21lb25lIGNvbW1lbnRlZCwgdGhlIGRhdGUgdGhlIFRIIHBob3RvKHMpIHdlcmUgdXBsb2FkZWQgaXMgZXh0cmVtZWx5IHNpZ25pZmljYW50LiAKV0FTSElOR1RPTiAoQVApICAgQW50b25pbiBTY2FsaWEsIHRoZSBpbmZsdWVudGlhbCBjb25zZXJ2YXRpdmUgYW5kIG1vc3QgcHJvdm9jYXRpdmUgbWVtYmVyIG9mIHRoZSBTdXByZW1lIENvdXJ0LCBoYXMgZGllZC4gSGUgd2FzIDc5LiBNYXJzaGFscyBTZXJ2aWNlIGluIFdhc2hpbmd0b24gY29uZmlybWVkIFNjYWxpYSBkZWF0aCBhdCBhIHByaXZhdGUgcmVzaWRlbmNlIGluIHRoZSBCaWcgQmVuZCBhcmVhIG9mIFdlc3QgVGV4YXMuIApUaGVuIHRoZXkgcmVzdW1lZCB0aGUgc2VhcmNoIHRoZXkgY3V0IHNob3J0IGR1ZSB0byB3ZWF0aGVyICg2KSwgYW5kIGZvdW5kIHRoZSBrZXkuIExhdGVyIHRoZXkgZW50ZXJlZCBsb29raW5nIGZvciBhIGdhcmFnZSBkb29yIG9wZW5lciAoNykuIApUaGVpciBtYXJyaWFnZSBpcyBvbiB0aGUgcm9ja3MgYW5kIHNoZSBpc24ndCBzdXJlIHNoZSB3YW50cyB0byBzdGF5IHdpdGggaGltLiBTaGUgdGhpbmtzIHNoZSBzaG91bGQgZm9yIHRoZSBraWRzJyBzYWtlLiBXaXRoaG9sZGluZyBoZXIgb3duIGhhcHBpbmVzcyBmb3IgdGhlbSB0byBiZSB3aXRoIHRoZWlyIEZhdGhlciB3aG8gaXNuJ3Qgb25seSBvYmVzZSBidXQgZW1vdGlvbmFsbHkgaGFzIGNoZWNrZWQgb3V0IG9uIGV2ZXJ5b25lLi4gCklmIHlvdSBhcmUgc3VmZmVyaW5nIGZyb206IFNwb3J0cyBJbmp1cmllcywgU3ByYWlucywgU3RyYWlucywgQ2FyIGFjY2lkZW50LCBIZXJuaWF0ZWQgRGlzYywgRGlzYyBCdWxnZSwgRGVnZW5lcmF0aXZlIERpc2MgRGlzZWFzZSwgTmVjayBwYWluLCBIZWFkYWNoZXMsIExvdyBiYWNrIHBhaW4sIG9mIGp1c3Qgd2FudCB0byBmZWVsIGJldHRlciBhbmQgaGF2ZSBiZXR0ZXIgbGlmZSBwZXJmb3JtYW5jZSAgcGxlYXNlIGNhbGwgb3VyIG9mZmljZSBpbiBJcnZpbmUsIENhbGlmb3JuaWEgIGF0IDk0OS44NTcuMTg4OG9yIHZpc2l0IG91ciB3ZWJzaXRlIGF0IEFESlVTVDJJVCB0byBsZWFybiBtb3JlIGFib3V0IEZ1bmN0aW9uYWwgRml0bmVzcyBDaGlyb3ByYWN0aWMsIFNwb3J0cyBtYXNzYWdlLCBNeW9mYXNjaWFsIFJlbGVhc2UsIENvcnJlY3RpdmUgRXhlcmNpc2UsIE5vbiBTdXJnaWNhbCBTcGluYWwgRGVjb21wcmVzc2lvbiwgQ2xhc3MgSVYgbGFzZXIsIGFuZCBGdW5jdGlvbmFsIE51dHJpdGlvbi4KS2VsbHkgYWNjdXNlcnMgYWJvdXQgaW50ZXJ2aWV3Ui4gS2VsbHksIGphaWxlZCBvdmVyIGNoaWxkIHN1cHBvcnQsIHNheXMgaGUgZ290IGFib3V0ICQzNTAsMDAwIGxlZnRSLiBLZWxseSBsYXRlc3Q6IE5ldyBzZXggYWJ1c2UgY2xhaW0gaW52ZXN0aWdhdGVkUm95IE1vb3JlIHNheXMgaGUgaXMgInNlcmlvdXNseSBjb25zaWRlcmluZyIgU2VuYXRlIHJ1blRydW1wIGRvdWJsZXMgZG93biBvbiBjb2xsdXNpb24gYWxsZWdhdGlvbnMgYW5kIFBhdWwgTWFuYWZvcnQgc2VudGVuY2VkQ2hlbHNlYSBNYW5uaW5nIGphaWxlZCBhZnRlciByZWZ1c2luZyB0byB0ZXN0aWZ5VW52YWNjaW5hdGVkIGJveSBhbG1vc3QgZGllcyBvZiB0ZXRhbnVzUi4gCkNyZWF0ZSBhIGJhY2t1cCBvZiB5b3VyIHdlYnNpdGUgYmVmb3JlIGV2ZXJ5IG1ham9yIHJlZGVzaWduIGFuZCB5b3Ugd2lsbCBiZSBhYmxlIHRvIHJlc3RvcmUgdGhlIG9yaWdpbmFsIHZlcnNpb24gd2hlbmV2ZXIgeW91IG5lZWQgdG8uCkJ1cmVhdSBvZiBMYWJvciBTdGF0aXN0aWNzLiAKQSB0aGlyZCBvZiB0aGUgZ2FtZSBpcyBiYXNlZCBvbiBibGluZCBsdWNrLiBBbnlvbmUgY2FuIGdldCB0aGUgdG9wIGhhbmQgKGNhbGxlZCAndGhlIG51dHMnKSBvbiBhbnkgZ2l2ZW4gZGF5IGFuZCBiZWF0IHRoZSBiZXN0IHBsYXllciBpbiB0aGUgd29ybGQuIApJIGRpZG4gbGlrZSBteSBmaXJzdCBtYXNzYWdlIGFuZCB3ZW50IDUgeWVhcnMgYmVmb3JlIEkgdHJpZWQgbWFzc2FnZSBhZ2Fpbi4gCkl0IHJlYWxseSBkZXBlbmRzIG9uIHdoZXJlIHlvdSBsaXZlLiAKVGhlIHRlbiBlc3NlbnRpYWxzIHdlcmUgZm9ybXVsYXRlZCB0byBtYWtlIHN1cmUgYmVnaW5uZXJzIGFuZCBwZW9wbGUgd2hvIGRpZG4ga25vdyB3aGF0IHRoZXkgd2VyZSBkb2luZyB3b3VsZG4gbWVzcyB1cCB0b28gYmFkbHkuSSBpbiBjb250cmFzdCBiZWxpZXZlIHRoYXQsIGlmIHlvdSBrbm93IHdoYXQgcG9zc2libGUgY29uZGl0aW9ucyB5b3Ugd2lsbCBiZSBmYWNpbmcsIGV2ZXJ5dGhpbmcgb24gdGhhdCBsaXN0IGV4ZWNwdCBwZXJoYXBzIGZvciBuYXZpZ2F0aW9uLCBsaWdodCwgZXh0cmEgd2F0ZXIsIHNvbWUgYmFzaWMgZmlyc3QgYWlkIGFuZCBwZXJoYXBzIHNoZWx0ZXIgaXMgb3B0aW9uYWwuRm9yIGluc3RhbmNld2h5IHRha2Ugc3VuIHByb3RlY3Rpb24gaWYgeW91IGtub3cgdGhhdCBzdW4gZXhwb3N1cmUgd29uIGJlIGFuIG9wdGlvbiAod29vZGVkIHRyYWlsIGluIGNsb3VkZWQgY29uZGl0aW9ucyB3aXRoIGxvdyBzdW4gaW50ZXNpdHkpV2h5IHRha2UgbW9yZSBmb29kIHRoYXQgeW91IHRoaW5rIHlvdSBuZWVkIGlmIHlvdSBjYW4gcmVsaWFibHkganVkZ2UgeW91ciBzcGVlZCBldGMuIE1vc3RseSBmb29kIGlzIG5vdCBhIGNyaXRpY2FsIHJlc291cmNlIGFuZCBtb3N0IHBlb3BsZSB3b3VsZCBoYXZlIGxpdHRsZSB0cm91YmxlIG5vdCBlYXRpbmcgZm9yIGEgZGF5LldoeSB0YWtlIGEgcHJvdGFibGUgc2hlbHRlciBpZiB5b3Uga25vdyB5b3UgY2FuIHN0YXkgaW4gYSBodXQgb3Igc29tZXRoaW5nLiAKVmlkZW8gUG9rZXIgaGFzIGJlY29tZSBpbmNyZWFzaW5nbHkgcG9wdWxhci4gCkxhZHkgR2FnYSBoYXMgd3JpdHRlbiBtYW55IHNvbmdzLiBBbGwgaGVyIHNvbmdzIGhhdmUgYmVlbiB3cml0dGVuYnkgaGVyIHdpdGggbGl0dGxlIGhlbHAuIFRoZSBzb25nIEhlcmUgd2UgZ28gYWdhaW4gYnlQaXhpZSBMb3R0IHdhcyB3cml0dGVuIGJ5IExhZHkgR2FnYS4gQW5kIHRoZXkgc29uZyBWaWRlbyBQaG9uZWluc3BpcmVkIExhZHkgR2FnYSB0byB3cml0ZSBUZWxlcGhvbmUuIEJleW9uY2Ugd2FudGVkIExhZHkgR2FnYSB0b2JlIGluIHRoZSBtdXNpYyB2aWRlbyBmb3IgVmlkZW8gUGhvbmUgc28gTGFkeSBHYWdhIGRlY2lkZWQgdGhhdCBzaGV3YW50ZWQgQmV5b25jZSBpbiBoZXIgbXVzaWMgdmlkZW8gZm9yIFRlbGVwaG9uZS4gKEZ1bGwgQW5zd2VyKQpJIGdldCBhbnhpb3VzIG5vdyBpbiB0aGUgZmFjZSBvZiBjb21taXNzaW9ucyBiZWNhdXNlIGl0IGFsd2F5cyBmZWVscyBsaWtlIGl0IGEgbGluZSBiZXR3ZWVuICJJIHVuZGVyIGNoYXJnaW5nIGZvciB0aGlzIGFuZCBsZXR0aW5nIG15c2VsZiBiZSByaXBwZWQgb2ZmIiBvciAiSSBjaGFyZ2luZyB0b28gbXVjaCBhbmQgdGhleSBqdXN0IG5vdCBzYXlpbmcgbm8gYmVjYXVzZSB0aGV5IGJlaW5nIG5pY2UiLi4gCkkgYW0gbm90IGEgaHVnZSBmYW4gb2YgdGhlIHN0YXRlIGFzIGFuIGNvbmNlcHQgZWl0aGVyICAgYnV0IHlvdSBnb3R0YSB3b3JrIGluIHRoZSBmcmFtZSB5b3UgYXJlIGJvcm4gaW4uLiAKQnV0IGFsbCBpbiBhbGwsIGl0IGlzIGFuIGFtYXppbmcgcmlmbGUgYXQgb25lIGhlbGwgb2YgYSBwcmljZS4uIApBdSBib3JkIGQndW4gdGVycmFpbiBkZSBmb290IGR1IHF1YXJ0aWVyIGRlIFZpbGxhIGRlbCBQYXJxdWUsIGRhbnMgbGEgY2FwaXRhbGUgYXJnZW50aW5lLCBpbCBtb250cmUgZHUgZG9pZ3QgdW4gam91ZXVyICBsYSBmcmxlIHNpbGhvdWV0dGUsIHVuIE1lc3NpIG1pbmlhdHVyZSwgcXVpIGRyaWJsZSB0cm9pcyBhZHZlcnNhaXJlcyBhdmFudCBkZSBtYXJxdWVyLiAKTXkgYm95ZnJpZW5kIHVzZWQgdG8gZHJpdmUgb25lIGZvciB0aGUgdmlsbGFnZSBmZXN0aXZhbCBmb3IgdGhlIGNoaWxkcmVuLiAKS2luZGx5IGFzayB5b3VyIG1vdGhlciB0byByZWZyYWluIGZyb20gc2hhcmluZyBhbnkgbW9yZSBkZXRhaWxzIHNhdmUgZnJvbSB0aGUgc2FtZSBsaW5lIHlvdSdyZSB0ZWxsaW5nIHBlb3BsZS4gQW5kIHNlcmlvdXNseSwga2VlcCBpdCBzaG9ydC4gVGhlIGxvbmdlciB5b3VyIGFuc3dlciBpcywgdGhlIG1vcmUgaXQgZ2V0cyBjb252b2x1dGVkIGRvd24gdGhlIGdyYXBldmluZSwgYW5kIHRoZSBtb3JlIHBlb3BsZSBtaWdodCBkZWJhdGUgaXQgb3IgbGVhdmUgaXQgb3BlbiB0byBpbnRlcnByZXRhdGlvbi4KTGlrZSBhbiBhbGxpZ2F0b3IncyBtb3V0aCwgdGhlIFI4IGNvbnNpc3RzIG9mIHR3byBzcHJpbmcgbG9hZGVkLCBoZWF2eSBkdXR5IHBsYXN0aWMgamF3cyBhYm91dCAxOCBpbmNoZXMgYXBhcnQgdGhhdCB3YW50IG5vdGhpbmcgbW9yZSB0aGFuIHRvIHNuYXAgc2h1dC4gT25seSBpbnN0ZWFkIG9mIHNoYXJwIHRlZXRoLCBlYWNoIHNpZGUgb2YgdGhlIFI4LCBkZXNpZ25lZCBieSBhbiBlbmdpbmVlciB3aXRoIGEgbG92ZSBmb3IgZW5kdXJhbmNlIHNwb3J0cywgaXMgbGluZWQgd2l0aCBmb3VyIHNtb290aCB3aGVlbHMsIHRoZSBraW5kIGZvdW5kIG9uIGlubGluZSBza2F0ZXMuLiAKVGhhdCBvcGVuIHdpbmRvdywgdGhlIHN0YXJzLCBhbmQgdGhlIHRlbGVzY29wZSBhcmUgd2hhdCBtYWtlIHRoaXMgcGljdHVyZSBzcGVjaWFsIHRvIG1lLiBZb3UgY2FuIGZlZWwgYSB3YXJtLCBncmFzc3kgc3VtbWVyIGV2ZW5pbmcgYnJlZXplIHJvbGxpbmcgaW4sIHdpdGggdGhlIGV4Y2l0ZW1lbnQgb2YgZmluZGluZyB5b3VyIGZpcnN0IGxlZ3MgaW4gbGlmZS4gQSBmZXcgZnJpZW5kcywgd2hvIHlvdXIgY3J1c2ggd2FzLCB5b3VyIGZpcnN0IG9yIHNlY29uZCBwZXQuIEV2ZXJ5dGhpbmcgd2FzIG5ldy4KQ3Jld2luZyBvbiBzdHVkZW50IGZpbG1zIGlzIGFuIGVzc2VudGlhbCBwYXJ0IG9mIHRoZSBjdXJyaWN1bHVtLiBHZW5lcmFsbHksIGEgNHRoIHllYXIgdGhlc2lzIGZpbG0gd2lsbCBoYXZlIGEgY3JldyBvZiA2MCBzdHVkZW50cyB3aXRoIGEgaGlnaCBkZWdyZWUgb2YgYXV0b25vbXkuIFlvdSBiZSBvbiBzZXQgZm9yIGhvd2V2ZXIgbWFueSB3ZWVrZW5kcyB5b3UgZGVjaWRlIChlaXRoZXIgYSBmZXcgb3IgbWFueSkgdXN1YWxseSBmb3IgMTIgaG91ciBkYXlzLiAKT24gcmV0cm91dmVyYSBPbWFyIFN5IGRhbnMgbGEgZGlzdHJpYnV0aW9uLiAKVGhpcyBoZWxwcyByZWR1Y2UgdGhlIGlzc3VlcyBvZiBzcGlsbHMgYW5kIGFsbG93cyB5b3UgdG8gY29udGludWUgcGxheSB3aXRoIGEgc2ltcGxlIHdpcGUgb2YgdGhlIHRhYmxlLiAKSXQgbWF5IGFsc28gYmUgd29ydGggeW91ciB3aGlsZSB0byBmaW5kIGFuIGVxdWluZSB0aGVybW9ncmFwaGVyIHRvIGRvIGEgYmFzZWxpbmUgYW5kIGEgcG9zdCBhZGp1c3RtZW50IElSIHNjYW4gb2YgeW91ciBob3JzZSBzbyBzZWUgaG93IGl0IGNoYW5nZXMgbXVzY2xlIGluZmxhbW1hdGlvbi4uIApNYWtlIHN1cmUgdGhhdCB5b3UgbG9ja2VkIGRvd24gdGhlIGdpcmwgc2Nob29sLCBkb2N0b3JzLCBldGMgICBtYWtlIGl0IGNsZWFyIHRoYXQgdGhlcmUgYSBjcmF6eSB3b21hbiBvdXQgdGhlcmUgd2hvIGhhcyBpdCBvdXQgZm9yIHlvdSwgYW5kIGFwcGVhcnMgdG8gYmUgb2JzZXNzZWQgd2l0aCB0aGVzZSBjaGlsZHJlbiB0aGF0IHNoZSBuZXZlciBtZXQuIFBvc3NpYmxlIGtpZG5hcHBpbmcgcmlzay4gQW5kIHRhbGsgdG8gdGhlIGdpcmxzLCBhbmQgcGVyaGFwcyB0aGVpciB0aGVyYXBpc3QuClRoZSBvZmZpY2UgcHJvdmlkZXMgbWVkaWNhbCBudXRyaXRpb24gdGhlcmFweSwgc2VydmVzIG9uIHRoZSBlYXRpbmcgZGlzb3JkZXIgdHJlYXRtZW50IHRlYW0gYW5kIHByb3ZpZGVzIG51dHJpdGlvbiBvdXRyZWFjaC4gU2V4dWFsIGFzc2F1bHQgYW5kIGludGVycGVyc29uYWwgdmlvbGVuY2UgaGF2ZSBubyBwbGFjZSBvbiBhIGNvbGxlZ2UgY2FtcHVzLiAKQnV0IG1hZ2ljYWwgbW9uc3RlcnMgYXJlIHRoZSBzdHVmZiBvZiBmYWlyeSB0YWxlcy4gCkhvbG1lcyByZXBlYXRlZGx5IHRvb2sgS2lzc25lciB0byB0YXNrIGZvciByZXZlcnNpbmcgaGltc2VsZiBvbiBoaXMgb3duIHN0YXRlbWVudHMsIG9yIG1ha2luZyBzdGF0ZW1lbnRzIG9mIGNlcnRhaW50eSBvbmx5IHRvIGV4cHJlc3MgbGFjayBvZiBjZXJ0YWludHkgYSBzaG9ydCB0aW1lIGxhdGVyLgpJIHdvdWxkIGtub3cuIEl0IGhhcmQgYmVjYXVzZSBub3QgZXZlcnlvbmUgaGFzIGRlYWx0IHdpdGggYSBjb2xpY2t5IGJhYnkgYmVmb3JlIHNvIGV2ZXJ5b25lIHdpbGwgdHJ5IHRvIGdpdmUgeW91IHRpcHMgYnV0IHRydXN0IG1lLCBpZiB5b3UgYnJlYXN0ZmVlZGluZywgdGhlcmUgbm90aGluZyB5b3VyIGRvaW5nIHdyb25nLiAKQnV0IHRoZSBzdGFmZiBxdWFydGVycyBhcmUgYSBnZW51aW5lIGxvdmUgYm9hdDogV2l0aCAyLDIwMCBjcmV3LCB0aGUgc3RhZmYgcXVhcnRlcnMgYXJlIGEgdmlsbGFnZSB1bnRvIHRoZW1zZWx2ZXMsIHdpdGggY2FiaW5zLCBiYXJzLCBhIG1lc3MgaGFsbCwgc2hvcCwgYW5kIGd5bSBzZXQgYWNyb3NzIGRlY2tzIDAsIDEsIDIsIDMsIGFuZCAxMi4gKE1vc3Qgc2VydmljZXMgYXJlIHNldCBvZmYgYSBzZWNvbmQgZGVjayBjb3JyaWRvciBkdWJiZWQgIkkgOTUuIikKUGVvcGxlIGFyZW4gdXAgdGhlaXIgb3duIGJ1dHQsIGZyaWVuZGxpZXN0IHdlaXJkIHRvd24gSSBldmVyIGxpdmVkIGluLiAKQ3JlYXRpdml0eSBpbnNwaXJlcyBjcmVhdGl2aXR5LiAKVG9tIGFuZCBJIGhhZCBzdHJldGNoZWQgdGhlIGxpbWl0cyBvZiBzY2llbmNlIG9uY2UgYWxyZWFkeSwgdG8gY3JlYXRlIGhlci4gCkEgbGFyZ2UgcGFya2luZyBzdHJ1Y3R1cmUgY291bGQgYmUgbG9jYXRlZCB0aGVyZSBhbmQgdGhlIHByb3Bvc2VkIGdvbmRvbGEgc3lzdGVtIHdvdWxkIGFsbG93IHF1aWNrIGFuZCBlYXN5IHRyYXZlbCB0byBlaXRoZXIgdGhlIGNhcGl0YWwgYXJlYSBvciBVVyBjYW1wdXMuIApJdCBub3QgcmVhbGx5IG5lY2Vzc2FyeSB0byBtYWtlIHRvbyBtYW55IG5vdGVzIGF0IHRoZSBtaWNyb3MuIEJ1dCBJIGNvbG9yIGNvZGUgYSBsb3QuIApZb3UncmUgYSB0ZWVuYWdlci4gCkJlZm9yZSB5b3Ugc2NoZWR1bGUgYW4gYXBwb2ludG1lbnQsIG1ha2Ugc3VyZSB0aGF0IHlvdSB0YWtlIHRoZSB0aW1lIHRvIGxvb2sgdGhyb3VnaCB0aGUgbWFzc2FnZSB0aGVyYXBpc3QncyBvZmZpY2UuIApJIG5vdCBzdXJlIG9mIHRoZSBvcmRlciBidXQgc29tZWhvdyB0aGUgb3RoZXJzIGZvbGxvd2VkLiAKSSBqdXN0IGhvcHBlZCBpbiB0aGUgY2FyLiAKUGVyaGFwcyB0aGlzIGlzIHRoZSBtb3N0IGltcG9ydGFudCBvbmU6IE1vc3QgYWlycG9ydHMgcmlnaHQgbm93IGFyZSBsYW5kaW5nIHRvbyBtYW55IHBsYW5lcyBhbiBob3VyLiBTbyBpZiB3ZSBoYXZlIHRvIHdhaXQgZm9yIGEgZ2F0ZSBvciBpZiB0aGVyZSBpcyBhIHRyYWZmaWMgamFtIG9uIHRoZSB0YXJtYWMgRE8gTk9UICBpIHJlcGVhdCBETyBOT1QgYXNrIHVzIHRvIGNhbGwgdGhlIGZsaWdodCBkZWNrIGFuZCB0ZWxsIHRoZW0gdG8gSE9MRCBZT1VSIENPTk5FQ1RJTkcgRkxJR0hULiBUaGF0IG5vdCBob3cgaXQgd29ya3MgaW4gQW1lcmljYS4gWW91IGFyZSBub3Qgc3BlY2lhbCBhbmQgeW91ciBmbGlnaHQgd2lsbCBuZXZlciBiZSBoZWxkIGZvciB5b3UgdW5sZXNzIHlvdSBoYXZlIEdlb3JnZSBDbG9vbmV5IHN0YXR1cy4gRHVyaW5nIHRoZSBob2xpZGF5IHNlYXNvbiBtYWtlIHN1cmUgeW91ciBjb25uZWN0aW9uIHRpbWUgaXMgYXQgbGVhc3QgOTAgbWludXRlcyBtaW5pbXVtLiBXZWF0aGVyLCBtYWludGVuYW5jZSwgQWlyIHRyYWZmaWMgY29udHJvbCBkZWxheXMgYXJlIGFsbCBmYWN0b3JzIHRoYXQgd2lsbCBzdG9wIHlvdSBmcm9tIGhhdmluZyBhIHNlYW1sZXNzIGV4cGVyaWVuY2UuIFBsYW4gYWhlYWQuClZhbmR1cmFuNSB1CklmIHNvLCAyMDE4IHdvdWxkIGJlIHRoZSBlYXJsaWVzdCBpdCBjb3VsZCBiZSBicm91Z2h0IGluLCBhc3N1bWluZyBpdCBhZG9wdGVkIGF0IHRoZSBuZXh0IGRyaXZlcnMgbWVldGluZy4gCkl0IG1pZ2h0IHN1cnByaXNlIHlvdSB0byBsZWFybiB0aGF0IHRoZXJlIGFyZSBtYW55IHdvbWVuIHdobyBoYXZlIHVuZGVyZ29uZSBGR00gYnV0IGZlZWwgdGhhdCBpdCBpc24gYSBiaWcgZGVhbCBlaXRoZXIuIFRoZXkgZG9uIHJlZ3JldCBpdC4gVGhleSBzdGlsbCBoYXZlIG9yZ2FzbXMgYW5kIGhhcHB5IHNleCBsaXZlcy4gTGlrZSB5b3UgdGhleSBoYXZlIG5vIGlkZWEgd2hhdCB0aGV5IGFyZSBtaXNzaW5nLCBidXQgdmVyeSByZWFsIGhhcm0gd2FzIGRvbmUgdG8gdGhlbSBqdXN0IGFzIHNlZW1zIGl0IHdhcyBkb25lIHRvIHlvdS4KSG93ZXZlciwgdGhlc2UgZWZmZWN0cyBoYXZlIG5vdCBiZWVuIGNsZWFybHkgZXZpZGVudCBpbiBodW1hbnMgZm9sbG93aW5nIG9yYWwgYWRtaW5pc3RyYXRpb24gb2YgY2FubmFiaW5vaWRzLCBwcm9iYWJseSBkdWUgdG8gbG93IHN5c3RlbWljIGJpb2F2YWlsYWJpbGl0eS4gClBlciBXYWxrIFNjb3JlIHJhdGluZ3MsIHRoZSBzdXJyb3VuZGluZyBhcmVhIGlzIGV4dHJlbWVseSB3YWxrYWJsZSwgaXMgdmVyeSBiaWtlYWJsZSBhbmQgaGFzIGV4Y2VsbGVudCB0cmFuc2l0LiAzMm5kIFN0LiwgNDgwOC4gSXQgYWxzbyBsaXN0ZWQgZm9yICQyLDcwMC9tb250aC4KQSBiYXJiZXIgc2hvcCBzZXRzIGl0IHByaWNlcy4gVGhleSBzYXksIHBheSBtZSBYIG1vbmV5IHRvIGN1dCB5b3VyIGhhaXIuIEkgc2F5IG9rLiBUaGV5IGN1dCBteSBoYWlyLiBTbyB3aHkgYW0gSSBleHBlY3RlZCB0byB0aXAgdGhlbT8gVGhleSBsaXRlcmFsbHkgZGlkIHRoZWlyIGpvYi4KUHJlIGluanVyeSwgMjAxNiBDYXJyIGhhZCB0aGUgcG90ZW50aWFsIHRvIGJlIHRoYXQgdHlwZSBvZiBwbGF5ZXIuIENhcnIgaGFzIGFuIGFybSwgYW5kIG5vdCBtYW55IHBlb3BsZSByZWFsaXplIHRoaXMsIGJ1dCBoZSBvbmUgb2YgdGhlIGZhc3RlciBzdGFydGluZyBRQnMgaW4gdGhlIGxlYWd1ZSAoNC42OSA0MCB0aW1lKSBhbmQgY291bGQgYmUgbW9iaWxlIGxpa2UgUm9kZ2Vycy4gQW5kIGhlIHdhcyB1bmJlbGlldmFibHkgY2x1dGNoIGluIHRoZSA0dGggcXVhcnRlciB0aGF0IHllYXIsIGp1c3QgbGlrZSBSb2RnZXJzIGlzLiBJdCB3YXNuIGp1c3QgQ293aGVyZCBtYWtpbmcgdGhlIFJvZGdlcnMgY29tcGFyaXNvbiBiYWNrIHRoZW4uClByb3ZpZGVkIHRoZSBTb29mYXMgY2FuIHB1dCBvdXQgZW5vdWdoIGVuZXJneSwgeW91IGNvdWxkIGNvbmNlaXZhYmx5IHJ1biBsYXJnZXIsIG1vcmUgcG93ZXIgaHVuZ3J5IGRldmljZXMgb2ZmIHRoZW0gc29tZWRheS4uIApJIGdldCBhIG5hdHVyYWwgMjAhU28gVmVjbmEgYXBwZWFycyBiZWZvcmUgdGhlIGdyb3VwLCB2b3VjaGVzIGZvciBteSBzdG9yeSwgYW5kIGRpc3NpcGF0ZXMuIApUaGUgbWF0Y2ggd2FzIHNhaWQgdG8gaGF2ZSBsYXN0ZWQgZm9yIGZpdmUgbW9udGhzLiBXaGVuIE5pY2sgdGhlIEdyZWVrIGZpbmFsbHkgc3Rvb2QgdXAgZnJvbSB0aGUgdGFibGUgZm9yIHRoZSBsYXN0IHRpbWUgYW5kIGluZmFtb3VzbHkgYW5ub3VuY2VkICJNci4gCklzIGluIGEgcGFydCBvZiBBSSBjYWxsZWQgVHVyaW5nIHByb3ZpbmcsIGxvZ2ljYWwgcmVhc29uaW5nLCBhbmQgc28gb24uIApEZWFuIEJhcm5ldHQgd2FzIHRoZSBmb3JtZXIgbWFuYWdlciBvZiBSdWJ5IFR1ZXNkYXkgaW4gU3QuIEdlb3JnZSB1bnRpbCBpdCBjbG9zZWQsIGhlIHNhaWQsIGFuZCB0aGVuIGhlIHJlbG9jYXRlZCB0byBQb2NhdGVsbG8sIElkYWhvLiBBZnRlciB0YWxraW5nIHdpdGggSm9lIEZyYXNlciB3aG8gb3ducyBUaW1lIGNvcnBvcmF0ZSBhbmQgcnVucyB0aGUgU2FsdCBMYWtlIENpdHkgVGltZSBQdWIgR3J1YiwgQmFybmV0dCBmb3VuZCBhIGZyYW5jaGlzZSBvcHBvcnR1bml0eSBhdmFpbGFibGUgaW4gU3QuIApJbiAxOTQxLCBGcmFuayB3YXMgbWVkaWNhbGx5IGRpc2NoYXJnZWQgZnJvbSB0aGUgYXJteS4gSW4gMTk0NCBoZSBtZXQgRWxhaW5lIEhhbGxlciBhbmQgdGhleSB3ZXJlIG1hcnJpZWQgb24gTm92ZW1iZXIgMTUgb2YgdGhhdCB5ZWFyLiAKR3JlYXQgdG8gaGF2ZSBzdHJhdGVneSBhbmQgdmlzaW9uLCBidXQgaW1wbGVtZW50YXRpb24gaXMgdGhlIG1vc3QgaW1wb3J0YW50IHBhcnQsIHNhaWQgdGhlIHNlbGYgZGVzY3JpYmVkIGFuZCBvZiBkZXRhaWwuIApNclN0aWNrczIxICAzIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpFeGNsdXNpdmUgZmlndXJlcyBvYnRhaW5lZCBieSB0aGUgTmV3Y2FzdGxlIEhlcmFsZCByZXZlYWwgdGhhdCBwdWJzIGFuZCBjbHVicyBwb2NrZXRlZCAkNDA3IG1pbGxpb24gbmV0IHByb2ZpdCBpbiB0aGUgeWVhciB0byBNYXJjaCBmcm9tIDEwLDA0NiBwb2tlciBtYWNoaW5lcyAgIGEganVtcCBpbiBwcm9maXQgb2YgYWJvdXQgMTAgcGVyIGNlbnQgc2luY2UgMjAxMC4gCkFuZCBDYW5hZGlhbnMgYW5kIEFtZXJpY2FucyB3aWxsIG5vdCBrbm93IG9uZSBhbm90aGVyIGFzIHdlbGwuIApQSE9UTzogVFJJIFYuL1lFTFAKTmV1ZSBUb3Bob3RlbHMgaW4gQmVybGluIChBdXN3YWhsKQpUaGVyZSBpcyBhIHBhcnQgb2YgbmV1cm9saW5ndWlzdGljcyB0aGF0IGlzIHJlZmVycmVkIHRvIGFzICJ3b3JkIGNhdGFsb2dzIi4gClRoZXJlIGEgaGFpciB0ZXh0dXJlIG51bWJlcmluZyBzeXN0ZW0gdGhhdCBnb2VzIGZyb20gbGlrZSAxIDQgd2l0aCBsZXR0ZXJzLiAyQSBpcyBiYXNpY2FsbHkgdGhlIGxpZ2h0ZXN0IG9mIHdhdmVzLiAzIDQgYXJlIGxlZ2l0IGN1cmx5LCBhbHRob3VnaCB3aGVyZSBJIGxpdmUgYSBsb3Qgb2YgcGVvcGxlIHdvdWxkIGNvbnNpZGVyIDJCIDJDIGN1cmx5IGFuZCB3aGF0IEkgaGF2ZSAid2F2eS4iCkkgYWxzbyBsZWFybmVkIFRoYWkgb24gdGhlIHRhYmxlLiBJdCB3YXMgYW4gaW5jcmVkaWJsZSBleHBlcmllbmNlLiAKV2hlbiBwcmVzc2VkIGJ5IHRoZSBqdWRnZSwgUm9qYXMgTGF0cmF2ZXJzZSBhZG1pdHRlZCBzaGUgaGFzIHNwZW50IHRoZSB3aW50ZXIgc2tpaW5nIGFuZCAiaGFuZ2luZyBhcm91bmQuIgpIeXBlcnZpdGFtaW5vc2lzIEEgYW5kIGEgYmFkIHRpbWUgY29taW5nIGF0IHlvdS4gCiJJdCdsbCBiZSBhbm90aGVyIDEwIGRheXMgYmVmb3JlIHdlIGtub3cgdGhlIG1ha2V1cCBvZiBvdXIgdGVhbSBhbmQgaW5kZWVkIHRoZSBtYWtldXAgb2YgdGhlIHBhcmxpYW1lbnQgc28gSSdtIG5vdCBnb2luZyB0byBzcGVjdWxhdGUgb24gd2hvIGhhcyB3aGF0IHBvcnRmb2xpb3MsIiBNcyBXaGl0ZSBzYWlkLgpOb3cgaWYgeW91IGRvbiBrbm93IHRoZSBDYXRob2xpYyByaXR1YWwgZm9yIGNvbmZlc3Npb24sIHlvdSBiYXNpY2FsbHkgc3RhcnQgYnkgc2F5aW5nICJCbGVzcyBtZSBGYXRoZXIgZm9yIEkgaGF2ZSBzaW5uZWQsIGl0IGhhcyBiZWVuIChYIGFtb3VudCBmb3IgdGltZSkgc2luY2UgbXkgbGFzdCBjb25mZXNzaW9uLiIgTm93IGV2ZW4gd2hlbiBJIHdhcyBzdGlsbCBhIHJlZ3VsYXIgYXQgYWdlIDE0LCBJIGhhZG4gd2VudCB0byBjb25mZXNzaW9uIGluIGEgbG9uZyB0aW1lLiAKV2UgY2FuIGRvIHRoaXMgYXMgYSB3aG9sZSBwbGFuZXQgd2hlcmUgbm8gb25lIGdvZXMgaHVuZ3J5IGFuZCBldmVyeW9uZSBoYXMuIApTbWlsZXkgRmFjZSBJJ20gYW4gZWNjZW50cmljLCBjb21wYXNzaW9uYXRlLCBwb3NpdGl2ZS9vcHRpbWlzdGljLCBraW5kaGVhcnRlZCBhbmQgbG92aW5nIHdvbWFuIHdobyBpcyB3aWxsaW5nIHRvIHNwZW5kIHRpbWUgaW4gZ2V0dGluZyB0byBrbm93IHlvdS4gCkl0IGEgbGVhZ3VlIHdoZXJlIHdlIGtlZXAgcG9pbnRzIHdpdGggYWJvdXQgNjAgYWN0aXZlIHBsYXllcnMgYW5kIGFueXdoZXJlIGJldHdlZW4gMjAgICA0MCBvZiB0aGVtIG1pZ2h0IHNob3cgdXAgb24gYSBnaXZlbiBwb2tlciBuaWdodC4gCk5vdyB0YWtlIHlvdXIgc2Npc3NvcnMgYW5kIHlvdXIgcnVsZXIuIApPbmUgdGhpbmcgYWJvdXQgODg4IGlzIHRoYXQgaXQgZG9lc24ndCBhY2NlcHQgVVMgcGxheWVycyB5ZXQuCkRlciBWZXJtaWV0ZXIgaXN0IG1laW5lciBNZWludW5nIG5hY2ggenUgMTAwJSBpbSBVbnJlY2h0IHdlbm4gZXIgbnVyIGRhcyBBcmd1bWVudCBsaWVmZXJ0IGRhcyBkdSBHcm5kZSBicmluZ2VuIG11c3N0LiBJY2ggd3JkZSBlcyBhYmVyIG5vY2ggZWlubWFsIHZlcnN1Y2hlbiwgaW5kZW0gZHUgYWxsZ2VtZWluZ2x0aWdlIEdybmRlIHp1bSBIYWx0ZW4gZWluZXIgS2F0emUgdm9yYnJpbmdzdCwgc293YXMgd2llIFNlZWxlbmhlaWwsIEdlc2VsbHNjaGFmdCBldGMuIEZhbGxzIGRhbm4gaW1tZXJub2NoIGFiZ2VsZWhudCB3aXJkLCBzaWVoZSBvYmVuLiA0MCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KSSB3ZW50IHZlZ2V0YXJpYW4gYWJvdXQgNSBtb250aHMgYWdvLCBhbmQgdGhhdCB3YXMgdGhlIGJpZ2dlc3QgY2hhbmdlLiBJIGNvb2sgYSBsb3QgbW9yZSBmb3IgbXlzZWxmIGFuZCBkb24ndCBidXkgbXkgbHVuY2hlcyBldmVyeWRheSBmb3Igd29yay4gSSBlYXQgbW9yZSBmaWJyZSBhbmQgcHJvdGVpbiwgYW5kIHRyaWVkIHRvIGN1dCBwcm9jZXNzZWQgc3VnYXIgb3V0IGFzIG11Y2ggYXMgcG9zc2libGUuIFNvIG5vIHNvZGEgb3IgY2FuZHkuIEkgZG8gaGF2ZSBxdWl0ZSB0aGUgc3dlZXQgdG9vdGggdGhvdWdoIHNvIEkgYmFrZSBjb29raWVzIGFuZCBjYWtlcyBhIGxvdCwgdXNpbmcgaGVhbHRoaWVyIGluZ3JlZGllbnRzLgpEZSBjb21wZXRlbnRpZXMgZGllIGhvcmVuIGJpaiBoZXQgY29tcGV0ZW50aWVnZWJpZWQ6RGUgZnlzaW90aGVyYXBldXQgbGV2ZXJ0IGhvb2dzdGFhbmRlIGNsaW50em9yZyBvcCBlZW4gaW50ZWdlcmUsIG9wcmVjaHRlIGVuIGJldHJva2tlbiB3aWp6ZS4gSGlqIG5lZW10IHZlcmFudHdvb3JkZWxpamtoZWlkIHZvb3IgemlqbiBoYW5kZWxlbiBlbiBiZXdhYXJ0IHdlbG92ZXJ3b2dlbiBlZW4gYmFsYW5zIHR1c3NlbiBwZXJzb29ubGlqa2UgZW4gcHJvZmVzc2lvbmVsZSByb2xsZW4uIApQZXJzb25hbGx5LCBJIGZvY3VzIG9uIG9uZSBwcm9qZWN0IGF0IGEgdGltZS4gSWYgSSBwaWNrZWQgdGhlIHdyb25nIG9uZSBhbmQgSSB3YW50IHRvIHdvcmsgb24gc29tZXRoaW5nIGVsc2UsIHRoYXQganVzdCBtb3JlIGZ1ZWwgdG8gZ2V0IG1lIHRvIGZpbmlzaCB3aGF0IEkgd29ya2luZyBvbi4KRWRpdDsgc29ycnkgZm9yIHRoZSBsb25nIHN0b3J5CklmIHRoZSBsYXN0IGRpZ2l0IGlzIGEgMCBvciBhIDUsIHRoZSB3aG9sZSBudW1iZXIgaXMgZGl2aXNpYmxlIGJ5IDUuIAoiamltb3RoeWpvbmVzICAyIHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvSSBpbiB0aGUgc2FtZSBzaG9lcyBhcyB5b3UuIEkgaG9uZXN0bHkgdG9vIGV4aGF1c3RlZCBhbmQgZG9uIGhhdmUgdGhlIHRydXN0IGFueSBsb25nZXIgdG8gYWRhcHQuIFRoZSBwYXkgZm9yIHRoZSBjdW11bGF0aXZlIGtub3dsZWRnZSBpcyBwZWFudXRzIGNvbXBhcmVkIHRvIHdoYXQgSSB2YWx1ZSB0aGUga25vd2xlZGdlIGFuZCB3aGF0IEkga25vdyBidXNpbmVzc2VzIGFyZSBjYXBhYmxlIG9mIGRvaW5nIHdpdGggaXQuIApTb29uIHJlYWxpemVkIHRoZXkgcHJvYmFibHkgZGlkbiB3YW50IHVzIGFzIG11Y2ggYXMgdGhleSBkaWQgdGhlIG9wcG9ydHVuaXR5IHRvIGJlIG9uIGFpciwgc2F5cyBNci4gVHJlbGl2aW5nLiAKVGhlIE1lZGljYWwgQ2xpbmljIHByb3ZpZGVzIGEgZnVsbCByYW5nZSBvZiBwcmltYXJ5LCBwcmV2ZW50YXRpdmUsIGFuZCB1cmdlbnQgbWVkaWNhbCBjYXJlIHNlcnZpY2VzIGZvciBBdWJ1cm4gc3R1ZGVudHMsIGZhY3VsdHksIHN0YWZmLCB2aXNpdG9ycywgYW5kIG1lbWJlcnMgb2YgdGhlIHN1cnJvdW5kaW5nIGNvbW11bml0eS4gU2VydmljZXMgYXJlIHByb3ZpZGVkIG9uIGFuIGFwcG9pbnRtZW50IGJhc2lzLCBidXQgd2FsayBpbnMgd2lsbCBiZSBldmFsdWF0ZWQgYW5kIGdpdmVuIGFwcG9pbnRtZW50cyBvciBzZWVuIGltbWVkaWF0ZWx5IGJhc2VkIG9uIHRoZSB1cmdlbmN5IG9mIHRoZWlyIGNvbmRpdGlvbi4gQ2FyZSBpcyBwcm92aWRlZCBieSBvdXIgdGVhbSBvZiBmdWxseSBsaWNlbnNlZCBhbmQgQm9hcmQgQ2VydGlmaWVkL0VsaWdpYmxlIFBoeXNpY2lhbnMgKE1ELCBETyksIENlcnRpZmllZCBSZWdpc3RlcmVkIE51cnNlIFByYWN0aXRpb25lcnMgKENSTlApIGFuZCBDZXJ0aWZpZWQgUGh5c2ljaWFuIEFzc2lzdGFudHMgKFBBIEMpLCBhbmQgc3VwcG9ydGluZyBzdGFmZi4gCkE6IEZhY2Vib29rIHJlcXVpcmVzIGNvbW1lbnRlcnMgdG8gaGF2ZSA0IGZyaWVuZHMgYW5kIGEgcHJvZmlsZSBwaG90byBpbiBvcmRlciBmb3IgYSBjb21tZW50IHRvIGJlIHZpZXdhYmxlIG91dHNpZGUgeW91ciBvd24gbmV0d29yayBvZiBmcmllbmRzLiAKSWYgdGhlIHBlcnNvbiBoYXMgYSBtZWRpY2FsIGNvbmRpdGlvbiBzdWNoIGFzIGRpYWJldGVzLCBoZWFydCBkaXNlYXNlLCBjb25nZXN0aXZlIGhlYXJ0IGZhaWx1cmUsIG9yIGlzIHByZWduYW50LgpVbml0ZWQgU3RhdGVzIHYuIApHbyB0byB0aGUgY2hlZXIgcHJhY3RpY2UuIENob29zZSB0aGUgbGFzdCBwaHJhc2Ugb24gdGhlIHNjcmVlbiwgdGhlbiBjaG9zZWQgdGhlIDJuZC4gCkFuZCBxdWVzdGlvbiB0aGUgd2hvbGUgbm90aW9uIG9mIGNydWVsdHksIGl0cyBtZWFuaW5nLCBhbmQgdGhlIHBvcnRhYmlsaXR5IG9mIHRoZSBjb25jZXB0IGFjcm9zcyBhbmltYWxzIG9mIGFsbCB0eXBlcy4gCkJ1dCBtYW4sIHdoYXQgYSBoYXJkIGpvYiB0aGlzIG11c3QgYmUuIApIZSB0aGVuIGxldCB0aGVtIHRoYXcgYmFjayB0byBsaXF1aWQgYW5kIGFmdGVyIGhlIHN0aXJyZWQgdGhlbSwgdGhleSB3ZXJlbiBncml0dHkgYW5kIGl0IHRhc3RlZCBqdXN0IGxpa2UgaXQgaGFkIG5ldmVyIGJlZW4gZnJvemVuLgpTdXN0YWluYWJpbGl0eSBpbiBpbmdyZWRpZW50cyBpcyBhIGh1Z2UgcGFzc2lvbiBmb3IgbWUsIHNvIHBlcnNvbmFsbHkgZm9yIG15IGJvdGFuaWNhbCBicmFuZCwgSSBvbmx5IHVzZSBzdXN0YWluYWJseSBzb3VyY2VkIGluZ3JlZGllbnRzLCBtYW55IG9mIHRoZW0gd2lsZCBoYXJ2ZXN0ZWQgaW4gZXRoaWNhbCBhbW91bnRzIGZyb20gbmF0dXJhbGx5IG9jY3VycmluZyBlY29zeXN0ZW1zLiBGb3IgdGhpcyBzYW1lIHJlYXNvbiBJIHJlZnVzZSB0byB1c2UgYW5pbWFsIHByb2R1Y3RzIGluIG15IGdvb2RzIChzYXZlIGZvciBldGhpY2FsbHkgc291cmNlZCBIb25leSBhYnNvbHV0ZSkgYXMgaXQncyBpbmh1bWFuZSwgZ3Jvc3MsIG9yIHVuc3VzdGFpbmFibGUgKG1haW5seSB0aGlua2luZyBvZiBhbmltYWwgbXVza3MgaGVyZSkuIEkgYWxzbyBtYWtlIG15IG93biB0aW5jdHVyZXMgZm9yIGJhc2Ugb2lscyBmb3IgbXkgYmxlbmRzLCB3aGljaCBzb21lb25lIG1lbnRpb25lZCBpc24ndCB0aGF0IGNvbW1vbiBmb3IgYnJhbmRzLiAKUXVpY2sgYW5kIENoZWFwOiBUZXN0aW5nPyBXaGF0IHRlc3Rpbmc/IEl0IHdvcmtzIG9uIHRoZSBtYWluIGRldiBjb21wdXRlciBvbiBJRSA2LiBXZSBkaWQgaXQgaW4gaG91c2UsIGFuZCB0aGUgZGV2cyB3b3JraW5nIG9uIGl0IGFyZSBwYWlkIHVuZGVyIG1hcmtldCBzYWxhcmllcy4gT3Igd2UgZ290IGEgdmVuZG9yLCBidXQgaXQgdGhlIGZyZWUgdmVyc2lvbiB0aGF0IGlzIGdsaXRjaHkgYXMgaGVsbCBhbmQgaXMgbm90IGN1c3RvbWl6ZWQgZm9yIG91ciBuZWVkcy4gQW5kIHlvdSB3YW50ZWQgZXh0cmEgZmVhdHVyZXM/IFJlcG9ydCBmdW5jdGlvbnM/IERPQ1VNRU5UQVRJT04/IT8hPyE/IEhBSEFIQUhBSEhBSEFIQQpNZWdpdHRvMTk4NCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnbwpXZSBhbGwgaGF2ZSBwZW9wbGUgaW4gb3VyIGxpZmUgdGhhdCBjYXJlIGZvciB1cyBhbmQgd2lsbCBzdXBwb3J0IHVzIHRocm91Z2ggYW55dGhpbmcuIEl0IGp1c3QgYSBzaGFtZSB0aGF0IGl0IHRha2VzIHNvbWUgb2YgdXMgbG9uZ2VyIHRvIGZpbmQgdGhlbSB0aGFuIG90aGVycy4uIApJIGVzcGVjaWFsbHkgaGF0ZSB0aGUgZG9ncyBpbiBnYXJkZW4gY2VudHJlcyB0aGluZyB0b28sIGJlZW4gc28gbWFueSB0aW1lcyB3aGVyZSBJJ3ZlIHNlZW4gcGVvcGxlJ3MgZG9ncyBwaXNzaW5nIGFsbCBvdmVyIHRoZSBwbGFudHMuIEFsbCBvZiB0aGlzIGlzIGp1c3Qgc28gdW5uZWNlc3NhcnkuIFlvdXIgZG9nIHdpbGwgYmUgZmluZSBpZiB5b3UgbGVhdmUgaXQgYXQgaG9tZSB3aGlsZSB5b3UgcnVuIGVycmFuZHMsIHNlcmlvdXNseS4gSSBhbHNvIGZlZWwgYmFkIGZvciB0aGUgZm9sa3Mgd2l0aCBnZW51aW5lIHNlcnZpY2UgZG9ncyB3aG8gaGF2ZSB0byBkZWFsIHdpdGggdGhlIGRpc3RyYWN0aW9uIG9mIHBlb3BsZSdzIHVucnVseSBkb2dzIGdldHRpbmcgaW4gdGhlaXIgd2F5LiAKSWYgeW91IG9ic2VydmUgeW91ciBjaGlwLCB5b3UgbWF5IG5vdGljZSB0aGUgbmFtZSBvZiBhIG1hbnVmYWN0dXJlciwgb3IgZXZlbiBhIHNwZWNpZmljIHBpY3R1cmUgYWN0dWFsbHkgZW1iZWRkZWQgaW50byB0aGUgY2hpcCBpdHNlbGYuIApXb3csIHRoZSBUZXhhcyBSZXB1YmxpY2FucyBtdXN0IGJlIHdhdGNoaW5nIHNvbWUgcHJldHR5IHN0cm9uZyBhbnRpIGdheSBwcm9wYWdhbmRhLCBtYXliZSBldmVuIFVnYW5kYW4gYW50aSBnYXkgcHJvcGFnYW5kYSwgaWYgdGhleSB3YW50IHRvIHN0YXJ0IHB1dHRpbmcgcGVvcGxlIGluIGphaWwgZm9yIGhhdmluZyBzZXggdGhhdCBpcyBub3QgInJlcHJvZHVjdGl2ZS4iIHRoYXQgd2hhdCBzb2RvbXkgaXM6IG5vbiByZXByb2R1Y3RpdmUgc2V4LiAKTXkgdGVhY2hlciB3b3VsZCBzb21ldGltZXMgbWVudGlvbiB0byBtZSB0aGF0LCBpbiBhY3VwdW5jdHVyZSBzY2hvb2wgKGkgdGhpbmsgaW4gVGFpd2FuKSBzaGUgbGVhcm5lZCBtb3JlIGFib3V0IGp1c3QgdGhhdDogYWN1cHVuY3R1cmUsIGFjdXByZXNzdXJlLCBhbmQgcHJvYmFibHkgQ2hpbmVzZSBoZXJicyBhcyB3ZWxsLiAKWmFjazEwMTggIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvClRoZSBwcmluY2lwbGUgb2YgcGxheWluZyBwb2tlciBpcyBzaW1wbGU7IHlvdSBjYW4gbWFrZSBtb25leSBpZiB5b3UgYXJlIHNraWxsZWQuIApUaGlzIGtpZCB0YWxraW5nIG9uIHRoZSBwaG9uZSBmcm9tIGhpcyBob3NwaXRhbCBiZWQsIGluIHRoZSBiYWNrZ3JvdW5kIHlvdSBjYW4gaGVhciBiZWxscyBkaW5nLCBwZW9wbGUgc2NyZWFtaW5nLiBHYW1lIHNob3dzLgpFdmVyeSB0aW1lIG9uZSBvZiB0aGVzZSBwZW9wbGUgZmxldyBhbmQvb3IgdXNlZCBhIGNvbXBhbmlvbiBwYXNzLCB0aGF0IHdhcyAxKSBBIHNlYXQgdGhleSBtaWdodCBoYXZlIHNvbGQuIApUaGUgcGFydHkgaGFzIGFscmVhZHkgZXhwcmVzc2VkIGl0cyByZXNlcnZhdGlvbnMgYWJvdXQgdGhlIHN1c3BlbnNpb24gb2YgZnVuZGFtZW50YWwgcmlnaHRzLiAKWW91IG5lZWQgdG8gdGFrZSBhbiBFcHNvbSBzYWx0IGJhdGgsIGl0IGFkZCBNYWduZXNpdW0gdG8geW91ciB0aXJlZCBzb3JlIG11c2NsZXMsIGJ1dCB3aWxsIGFsc28gcHVsbCBvdXQgdG94aW5zLiBEcmluayBMT1RTIG9mIHdhdGVyLCBmbHVzaCB0aGF0IHN0dWZmIG91dC4uIApEYXJieSBDaHJpc3RpYW5hIHBvcnRlIGF1dG91ciBkdSBjb3UgdW4gcGVuZGVudGlmIGRvbnQgbGEgZm9ybWUgcGV1dCBwYXJhdHJlIHN1c3BlY3RlIDogbmUgZGlyYWl0IG9uIHBhcyB1biBwZXRpdCB6aXppIGZvc3NpbGlzID8gTWFyaWphYyBsZSBzdXBwcmltZSwgbGUgcmVtcGxhYW50IHBhciB1bmUgY3JvaXggdHJhY2UgIGxhIHZhIHZpdGUsIGVuIGRldXggY291cHMgZGUgcGF0dGUuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25UaGUgb2xkIGhhY2tzIHdobyB3b3JrZWQgZm9ydGhlIEJsdWUgTW91bnRhaW5zIEVjaG9kZWNhZGVzIGFnb3dvdWxkIHVuZG91YnRlZGx5cmVsaXNodGhlIHRob3VnaHQgb2YgYSBicmV3ZXJ5IGluIHRoZWlyIG9sZCB3b3JrcGxhY2UuIApMJ3VuZSBkJ2VsbGVzIHRhaXQgcHJvcHJpdGFpcmUgZCd1biBiaWVuIGltbW9iaWxpZXIgZGUgMjUwLjAwMC4gUGxhY2VyIGRhbnMgbGEgcGllcnJlICBQYXJpcy4gcmllbiBkZSBwbHVzIHNyLCBjJ2VzdCBlbiB2cml0IHVuIGludmVzdGlzc2VtZW50IGp1ZGljaWV1eC4KRGVzcGl0ZSB0aGUgc3Ryb25nIHN1cHBvcnQgb2YgR292ZXJub3IgUGF0dGVyc29uLCB0aGUgc2FtZSBzZXggbWFycmlhZ2UgYmlsbCB3YXMgdm90ZWQgZG93biB5ZXN0ZXJkYXkgaW4gdGhlIE5ldyBZb3JrIFNlbmF0ZS4gCldoZW4gcGVvcGxlIG92ZXJmb2xkIGF0IHRoZXNlIHN0YWNrIGRlcHRocywgdGhlIGJsaW5kcyBhbmQgYW50ZXMgdGhleSBnaXZpbmcgeW91IGlzIGEgaHVnZSBwZXJjZW50YWdlIG9mIHlvdXIgc3RhY2suIFRoZSBmYWN0IHRoYXQgZmlzaCBhcmUgZmFyIHRpZ2h0ZXIgdGhhbiB0aGV5IHNob3VsZCBiZSBoZXJlIGlzIGV4YWN0bHkgd2h5IHlvdSBjYW4gc3RpbGwgaGF2ZSBhbiBlZGdlLi4gCkRvY3RvciB3YXMgY29uY2VybmVkIGFib3V0IHRoZSBkZWNsaW5lIGluIG15IGdlbmVyYWwgaGVhbHRoIGFuZCBtb3ZlZCB0aGUgc3VyZ2VyeSBkYXRlIHVwLCBhbmQgdG9sZCBtZSBhdCBhIHBvc3Qgb3AgdmlzaXQgdGhhdCB0aGVyZSB3YXMgc29tZSBjb25jZXJuIEkgY291bGQgaGF2ZSBoYWQgc3RyZXNzIGluZHVjZWQgY2FyZGlhYyBhcnJlc3QgaWYgdGhleSB3YWl0ZWQgbG9uZ2VyIGJ1dCBzaW5jZSBpdCB3YXMgYSB3b3JrIHJlbGF0ZWQgaW5qdXJ5IGhlIGhhZCB0byBjcmF3bCB1cCBteSBlbXBsb3llciBpbnN1cmFuY2UgYXNzIHRvIGdldCB0aGluZ3MgYXBwcm92ZWQgZmFzdGVyCkkgYW0gYSBodWdlIGFkdm9jYXRlIGZvciByZXVzYWJsZSBtZW5zdHJ1YWwgcHJvZHVjdHMuIEkgd2lzaCB0aGV5IHdvcmtlZCBiZXR0ZXIgaW4gdGhpcyBjb21tdW5pdHkuIEkgaGF2ZSBydW4gaW50byB0aGlzIHNhbWUgaXNzdWUgd2hlbiB0cnlpbmcgdG8gcmFpc2UgZGlhcGVycyBmb3IgYSBuZWFyYnkgZm9vZCBwYW50cnkuIApGcmVlIHBva2VyIHNvZnR3YXJlIGlzIGEgcHJvZ3JhbSBkZXNpZ25lZCB0byBoZWxwIHlvdSBwbGF5IHBva2VyIHdpdGggbXVjaCBlYXNlIGFuZCBjb252ZW5pZW5jZS4gVGhlIHdheSB5b3UgcGxheSBwb2tlciBpbiB0aGUgdHJhZGl0aW9uYWwgbGl2ZSBjYXNpbm9zIGlzIHRoZSB3YXkgeW91IGhhdmUgdG8gcGxheSBpdCBoZXJlLCB3aXRoIHRoaXMgc29mdHdhcmUuIApXaXRoIHRoZSBBbmhldXNlciBCdXNjaCBJbkJldiBwYXJlbnQgY29tcGFueSwgTGFiYXR0IHBhcnRpY2lwYXRlZCBpbiB0aGUgIk5vcnRoIEFtZXJpY2EgV2F0ZXIgU2F2aW5ncyBDb21wZXRpdGlvbiIgYSAyIG1vbnRoIGluaXRpYXRpdmUgbGF1bmNoZWQgb24gdGhlIFVuaXRlZCBOYXRpb25zJyBXb3JsZCBXYXRlciBEYXksIGNvIGhvc3RlZCB0aGUgIkNvcnBvcmF0ZSBMZWFkZXJzIGZvciBhIEdyZWVuZXIgTG9uZG9uIiBldmVudCB0byBicmluZyB0b2dldGhlciBwdWJsaWMgYW5kIHByaXZhdGUgc2VjdG9yIG9yZ2FuaXphdGlvbnMgdG8gZGlzY3VzcyB0aGUgZGV2ZWxvcG1lbnQgb2YgYSBsb3cgY2FyYm9uIHN1c3RhaW5hYmxlIGVjb25vbXksIGEgbnVtYmVyIG9mIGFubnVhbCBwdWJsaWMgbGFuZCBjbGVhbiB1cCBpbml0aWF0aXZlcyB3aXRoIGVtcGxveWVlcyBmcm9tIGJyZXdlcnkgbG9jYXRpb25zIGFjcm9zcyBDYW5hZGEKVGhlcmUgaXMgYSBkaWZmZXJlbmNlIGluIHRoZW0gYW5kIGl0J3Mgbm90IGp1c3QgaHlwZS4gCihUaGUgbmV0d29ya3MgZmlyc3QgYmVnYW4gbmVnb3RpYXRpbmcgYWdhaW5zdCBDNyBkZWxpdmVyaWVzIGZpdmUgeWVhcnMgYWZ0ZXIgdGhlIG9yaWdpbmFsIGN1cnJlbmN5IHdhcyBhZG9wdGVkLikuIApFdmVudHVhbGx5IHlvdSB3b3VsZCBoYXZlIHRvIHBlZSBhbmQgY3JhcCBpbiB0aGUgaG9sZSB5b3Ugd2VyZSBpbmhhYml0aW5nLiBCeSB0aGUgdGltZSB0aGUgZmlyc3QgZmV3IHdlZWtzIGhhZCBwYXNzZWQsdGhlIGZlY2VzIHdvdWxkIHN0YXJ0IHRvIHJvdCwgYWxvbmcgd2l0aCB5b3VyIGZlZXQgYW5kIHNraW4sIGJlY2F1c2UgdGhlIGhvbGUgd291bGQgbmV2ZXIgYmUgY2xlYW5lZC4gVGhleSB3b3VsZCBtYWtlIHN1cmUgdG8gdGFrZSBjYXJlIG9mIHlvdXIgd291bmRzIGZyb20gdGltZSB0byB0aW1lLCBqdXN0IHNvIG11Y2ggdGhhdCB5b3UgZGlkbnQgZ28gc2VwdGljIGFuZCBkaWUgdG8gcXVpY2tseS4gClRoZSBvbmx5IHRpbWUgQSBldmVyIHB1dCBoaXMgZm9vdCBkb3duIHdpdGggQiB3YXMgd2hlbiBoZSByZWZ1c2VkIHRvIHJlcGxhY2UgdGhlIHRyYW5zbWlzc2lvbiBpbiBoaXMgY2FyIHNvIHRoZXkgY291bGQgZHJpdmUgaXQgb25lIGxhc3QgdGltZSB0byB0aGUganVua3lhcmQuIFdoZW4gdGhleSBib3VnaHQgYSBuZXcgY2FyIEIgYnJhZ2dlZCBmb3IgZGF5cyBhYm91dCBob3cgbG93IHRoZSBtb250aGx5IHBheW1lbnQgd2FzLCBlaXRoZXIgbm90IGNhcmluZyBvciBub3QgcmVhbGl6aW5nIHRoYXQgdGhleSBoYWQgYSBoZWlub3VzIGludGVyZXN0IHJhdGUgYW5kIHRoYXQgImxvdyBtb250aGx5IHBheW1lbnQiIGhhZCBhZGRlZCB0aG91c2FuZHMgdG8gdGhlIGZpbmFsIGNvc3Qgb2YgdGhlIGNhci4gCkNBUEUgQ09SQUwsIEZsYS4gICBIZWF0aGVyICJMZWZ0eSIgU2NobmVjayBoYW5kZWQgYSBzdGFjayBvZiBjYXJkcyB0byBhbm90aGVyIGRlYWxlciB0byBzaHVmZmxlLiJJJ20gaGVyIHJpZ2h0IGhhbmQgbWFuLCIgc2FpZCBMZW8gTmF2YXJybywgYXMgaGUgd2hhY2tlZCBhIHNldCBvZiBub25leGlzdGVudCBkcnVtcy4gVGhlIDM2IHllYXIgb2xkJ3MgcGVyc29uYWxpdHkgbHVyZXMgcGxheWVycy4gU2hlJ3MgdXN1YWxseSB0aGUgb25lIHdpdGggdGhlIHB1bmNobGluZXMgYWJvdXQgdGhlIGxvc3Mgb2YgaGVyIHJpZ2h0IGFybSwgd2hpY2ggd2FzIHNldmVyZWQgaW4gYSAyMDA4IGNhciBjcmFzaC4gCk9yIG5vdy4gCllvdSBjYW4gbWVzcyBhcm91bmQgaW4gdGhlIHBva2VyZG9wZSB2YXJpYW5jZSBjYWxjdWxhdG9yIHRvIHNlZSB3aGF0IGtpbmQgb2Ygc3dpbmdzIGFyZSB0byBiZSBleHBlY3RlZCB3aXRoIGRpZmZlcmVudCB3aW5yYXRlcy4KSXRhbHkncyBwbGFuIHRvIGVuZG9yc2UgdGhlIEJlbHQgYW5kIFJvYWQgSW5pdGlhdGl2ZSwgdGhlIGZpcnN0IHN1Y2ggbW92ZSBieSBhIEc3IG1lbWJlciwgd2lsbCBib29zdCBDaGluYSdzIGdsb2JhbCBhbWJpdGlvbnMuIApBdCB0aGlzIHBvaW50LCBhIGxvdCBvZiBpdCB3aWxsIGp1c3QgYmUgd2hvIHRoZSBpbmRpdmlkdWFsIG9mZmljZXIgdGhpbmtzIHNlZW1zIHRydXRoZnVsLCB3aGV0aGVyIHRoZXkgdGhpbmsgaXQgaXMgb3IgaXNuIGEgd2FzdGUgb2YgdGltZSwgYW5kIGZpbGluZyBzdGFuZGFyZHMgb2YgdGhlIGxvY2FsIHBvbGljZSBkZXBhcnRtZW50IGFuZCBwcm9zZWN1dG9yLi4gClRoZXJlIGFyZSBwZW9wbGUgd2hvIGxpa2UgZnVsbCBnYW1lcyB3aGlsZSBvdGhlcnMgd2lsbCBwcmVmZXIgc2hvcnRoYW5kIHNlc3Npb25zLiAKWW91ciBsZWFwIHRvIHN0YXRlIHlvdXIgZG91YnQgZm9yIGFsbCB0aGUgb3RoZXIgcGhvdG9zIHN1Z2dlc3RzIHlvdSBoYXZlIG1vdGl2YXRpb25zIGJleW9uZCB0cnV0aCBzZWVraW5nLgpTaGFuZ2hhaSwgQ2hpbmUuIEFsb3JzIHF1ZSBsYSBudWl0IHRvbWJlIGV0IHF1ZSBsZXMgZW5mYW50cyBycHRlbnQgbGV1cnMgZ2FtbWVzICBsYSBmbHRlLCAgcXVlbHF1ZXMgbXRyZXMgZGUgbCwgZGUgamV1bmVzIENoaW5vaXNlcyBjb21tZW5jZW50IGxldXIgam91cm5lLgpJIHJlbWVtYmVyIGEgZ3V5IHdhcyBsaWtlIHJ1bm5pbmcgdXAgYW5kIGNhbGxlZCB0byBtZSwgIkFyZSB5b3Ugc3VyZSB5b3Ugb2theT8hIiBhbmQgSSBqdXN0IHllbGxlZCAieXVwISIgYXMgSSBob2JibGVkIGF3YXkgcXVpY2tseS4KSXQgc2VlbXMgdG8gaGF2ZSBhIGJpdCBmb3J3YXJkIGFuZCBiYWNrd2FyZHMgZm9yIE1vbGluby4gQ2hhcmdlcyB3ZXJlIGJyb3VnaHQgYWdhaW5zdCBoaW0gY2hpZWZseSB0aHJvdWdoIHRoZSB3b3JrIG9mIHBpZWNlcyBsaWtlIHRoZSBmaXJzdCBwcmVzZW50ZWQgYWJvdmUsIGJ5IHRoZSBKZXN1aXQgUGFvbG8gU2VnbmVyaSAoMTYyNCAxNjk3KSwgd2hvc2UgZmlyc3QgZWZmb3J0cyB3ZXJlIHVuc3VjY2Vzc2Z1bCBpbiBkaXNsb2RnaW5nIE1vbGlubywgd2l0aCBoaXMgb3duIHdvcmsgZmluZGluZyBpdHMgd2F5IHRvIHRoZSBJbmRleC4gSG93ZXZlciwgYnkgMTY4NSBoZSB3YXMgYWdhaW4gc2VudCB0byB0aGUgSW5xdWlzaXRpb24sIGFuZCBqdXN0IG1vbnRocyBiZWZvcmUgdGhpcyBib29rIHdhcyBwdWJsaXNoZWQsIGhlIHdhcyBhbHJlYWR5IHRyaWVkIGFuZCBpbXByaXNvbmVkLgoiSWYgb25lIG15IGZyaWVuZHMgd2VyZSBhdCBteSBleGVzIGhvdXNlLCB0aGUgZmF0aGVyIG9mIG15IGNoaWxkcmVuIiBhbmQgaGVyIHNheWluZyAiSSBrbm93IGZvciBhIGZhY3QgSSdtIG5vdCB0aGUgcmVhc29uIHRoZWlyIGZhbWlseSBpcyBicm9rZW4gdXAiLiBTZWVtcyBsaWtlIEtobG9lIGlzIGp1c3QgcmVhbGx5IHVwc2V0IGFuZCBlbWJhcnJhc3NlZCBiZWNhdXNlIGV2ZXJ5dGhpbmcgaXMgc28gcHVibGljIHdoZW4gdGhlIHJlbGF0aW9uc2hpcCB3YXMgZG9vbWVkLiBOb3QgdG8gbWVudGlvbiB0aGUgZmFjdCB0aGF0IFRyaXN0YW4gaGFzIGhpcyBvd24gcGxhY2UgaW4gTEE/IFdvdWxkbid0IHRoZXkgYmUgbGl2aW5nIHRvZ2V0aGVyIHRoZXJlIGlmIHRoZXkgYWxzbyBoYXZlIGEgcGxhY2UgaW4gQ2xldmVsYW5kIHRvZ2V0aGVyIGFscmVhZHk/IEhvbmVzdGx5IGhlIGhhcyB6ZXJvIHJlc3BlY3QgZm9yIHRoZWlyIGZhbWlseSB0aGVpciBkYXVnaHRlciBhbmQgdGhlaXIgcmVsYXRpb25zaGlwLi4gCkl0IHdhcyBhIHJvbGUgdGhhdCBoYXJuZXNzZWQgaGlzIHBlcnNvbmFsaXR5IGFuZCBsaWZlIGV4cGVyaWVuY2VzLiAKQXV0cmVmb2lzLCBjJ3RhaXQgbGUgbm9tIGQndW5lIHZhcmlhbnRlIGRlIHBva2VyIHBsdXMgdHJhZGl0aW9ubmVsbGUgWzFdLCBkc29ybWFpcyBsZSBQb2tlciAzIENhcnRlcyBzZSByZnJlIHBsdXMgY29tbXVubWVudCBhdSBqZXUgZGUgY2FzaW5vIHNpbXBsaWZpIHF1aSBocml0ZSBkdSBub20gZGUgY2V0dGUgdmFyaWFudGUgY2FyIHNvbiBzeXN0bWUgZGUgY2xhc3NlbWVudCBkZXMgbWFpbnMgZXN0IHByb2NoZSAobWFpcyBwYXMgaWRlbnRpcXVlKS4gIGxhIGRpZmZyZW5jZSBkdSBwb2tlciBjbGFzc2lxdWUsIGF1IHBva2VyIHRyb2lzIGNhcnRlcywgY2hhcXVlIGpvdWV1ciBlc3NhaWUgZGUgYmF0dHJlIGxlIGRvbm5ldXIgb3Ugc2ltcGxlbWVudCBkJ29idGVuaXIgdW5lIGJvbm5lIG1haW4gYXUgbGlldSBkZSBqb3VlciBsJ3VuIGNvbnRyZSBsJ2F1dHJlLiBDZXMgZGV1eCBqZXV4IG5lIG5jZXNzaXRlbnQgcXVlIHBldSBkZSBwcnBhcmF0aW9uIGV0IHZvdXMgcG91cnJleiBmYWNpbGVtZW50IHkgam91ZXIgY2hleiB2b3VzLgpOZXcgcGxheWVycyBsb29rIGF0IDMgdGhpbmdzLCB0aGVpciBjYXJkcywgdGhlIGNhcmRzIGluIHRoZSBtaWRkbGUgYW5kIGhvdyBtdWNoIHRoZSBiZXQgaXMgYW5kIGp1c3QgZWl0aGVyIG1hdGNoIHRoZSBiZXQsIG9yIHJhaXNlLiAKTGEgY2wgOiBuZSBwYXMgY2hlcmNoZXIgIHRvdXQgZ290ZXIgc291cyBwcnRleHRlIHF1J29uIGVzdCBkYW5zIHVuIGxpZXUgaW5oYWJpdHVlbCwgY291dGVyIHNlcyBlbnZpZXMgcG91ciBzZSBmYWlyZSBwbGFpc2lyLCBzYXZvdXJlciBhdmVjIGF0dGVudGlvbiBwb3VyIG5lIHBhcyB0cmUgZnJ1c3RyIChlKSBldCByZ3VsZXIgYXBycyB1biB2ZW50dWVsIHJlcGFzIHRyb3AgY29waWV1eCBlbiBhdHRlbmRhbnQgbGUgcmV0b3VyIGRlIGxhIGZhaW0uCkNoYXJsZXMgRS4gCldpdGggdGhlIGZ1bmVyYWwgc2VydmljZSB0byBiZWdpbiByaWdodCBhZnRlci4gCkkgd3JvdGUgYWJvdXQgaG93IHRoZSBsYXcgd2lsbCBmaW5hbGx5IHB1dCBhbiBlbmQgdG8gYmFua3MgbWFraW5nIGh1Z2UgcHJvZml0cyBvZmYgb2Ygc3R1ZGVudCBsb2Fucy4gClRoaXMgaXMgbXkgc3RhbmRhcmQgbGlzdCBvZiBpdHMgInByb3MiIHRoYXQgd2lsbCBldmVudHVhbGx5IGxlYWQgdG8gYWRvcHRpb246RGVjZW50cmFsaXNlZCwgYm90aCBpbiBkZXNpZ24sIGFuZCBpbiBvcGVyYXRpb24sIGFuZCBiZWNvbWluZyBpbmNyZWFzaW5nbHkgc29TY2FsZWFibGUgICB0byBwb3NzaWJseSA3MDAwdHBzLiAoYXZlcmFnZSBzdXN0YWluZWQgNzUgYmxvY2tzIHBlciBzZWNvbmQgb3ZlciAzMCBtaW51dGVzIGhhcyBiZWVuIHNlZW4gb24gYW4gdW5zYXR1cmF0ZWQgbWFpbm5ldCB3aXRoIGEgcmVwb3J0ZWQgcGVhayBvZiA3NTYgYmxvY2tzIHBlciBzZWNvbmQpLlNpbXBsZSAgIGEgVXNlciBlWHBlcmllbmNlIHRoYXQgZXZlbiB5b3VyIGdyYW5ueSBjb3VsZCB1bmRlcnN0YW5kICAgc2VlIHRoZSBOYXRyaXVtIFdhbGxldCBmb3IgZXhhbXBsZVdvcmtpbmcgdG9kYXkgKG5vdCBmdXR1cmUgdmFwb3Vyd2FyZSlBbmRyb2lkLCBJT1MsIGRlc2t0b3AgYW5kIGJyb3dzZXIgd2FsbGV0c0hhcmQgUHJ1bmluZyBjb21pbmcgdi4gCkluIGEgVGV4YXMgaG9sZCAnZW0gcG9rZXIgZ2FtZSB0aGUgYm9hcmQgaGFzIGEgc3RyYWlnaHQgMTAgSiBRIEsgQQoiSSB3b24ndCBsaWUgICBpdCdzIGJlZW4gYSB0b3VnaCB5ZWFyLCIgU3BhcmtzIHNhaWQgVHVlc2RheSBhdCB0aGUgTWFwbGUgTGVhZnMnIHByYWN0aWNlIGluIFZhbmNvdXZlci4gIkJ1dCBJIHRoaW5rIGl0J3MgbWFkZSBtZSBhIGJldHRlciBhdGhsZXRlIGFuZCBhIGJldHRlciBnb2FsdGVuZGVyLiBJJ2QgcmF0aGVyIGdvIHRocm91Z2ggdGhpcyBzdHVmZiBub3cgdGhhbiBhIHBvcnRpb24gb2YgeW91ciBjYXJlZXIgd2hlcmUgeW91J3JlIGJlaW5nIHJlbGllZCBvbiBhcyBhIHN0YXJ0ZXIuCklsIHkgYSBwbHVzIGRlIDIwMCBzYWxvbnMgZGUgbWFzc2FnZSByb3RpcXVlICBNb250cmFsLiBUb3V0ZXMgbGV1cnMgYWN0aXZpdHMgb3UgcHJlc3F1ZSB2b250IGNvbnRyZXZlbmlyICBsYSBub3V2ZWxsZSBsb2kgc3VyIGxhIHByb3N0aXR1dGlvbiA6IHRlbmlyIHVuZSBtYWlzb24gZGUgZGJhdWNoZSwgZmFpcmUgZGUgbGEgcHVibGljaXQgcG91ciBvZmZyaXIgZGVzIHNlcnZpY2VzIHNleHVlbHMgZXQsIHN1cnRvdXQsIG9idGVuaXIgZGVzIHNlcnZpY2VzIHNleHVlbHMgY29udHJlIHJ0cmlidXRpb24uIE1tZSBjaG9zZSBwb3VyIGxlcyBhZ2VuY2VzIGQnYWNjb21wYWduZW1lbnQgcXVpIHJlb2l2ZW50IGxlcyBjbGllbnRzIGRhbnMgZGVzIGxpZXV4IHBydnVzICBjZXR0ZSBmaW4gcGx1dHQgcXVlIGQnb2ZmcmlyIHVuIHNlcnZpY2UgIGRvbWljaWxlLiAKUGxheWVycyB3b3VsZG4gZXZlbiBzd2FwIHRvIGl0IGluZmFudHJ5IGRvbWluYW50IG1hcHMgb3IgbW9kZXMuIAo1NCBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KUmVsaWMyMjc5IHUKRm9yZWlnbk1hbmFnZW1lbnQgIDQ0NCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KV2VsbCB0aGUgYmFuaydzIHJlY29yZHMgZm9yIHRoZSB5ZWFyIGVuZGVkIERlY2VtYmVyIDMxIDIwMDksIGRvbid0IGFjdHVhbGx5IHNob3cgYW55IHRyYW5zZmVyIG9mIG1vbmV5IHRvIHRoZSBVbml0ZWQgQXJhYiBFbWlyYXRlcy4KVGhlIDIgMyB6b25lIHRyaWVzIHRvIGZvcmNlIHRlYW1zIHRvIHRha2Ugb3V0c2lkZSBqdW1wc2hvdHMsIHNpbmNlIGl0IGlzIHZlcnkgZGlmZmljdWx0IHRvIGdldCBpbnRvIHRoZSBwYWludC4gSG93ZXZlciwgdGhlIG1haW4gd2Vha25lc3Mgb2YgaXQgaXMgdGhhdCB5b3UncmUgb3V0c2lkZSBwbGF5ZXJzIHdpbGwgcHJvYmFibHkgZ2V0IGV4Y2VsbGVudCBsb29rcyBhdCBqdW1wc2hvdHMuIEhvd2V2ZXIsIHdoZW4gaXQgY29tZSdzIGRvd24gdG8gaXQsIHRoZXJlIGlzIG5vIGZvcm11bGEgdG8gYmVhdCB0aGF0IHpvbmUuIApUaGlzIHRoaW5nIGlzIHRoaXMgQnVpbHQgSW4gQ2FyZCBTaHVmZmxlciBkb2VzIHRoZSBqb2IgbXVjaCBxdWlja2VyIHRoYW4gdGhleSBkbywgYW5kIHRvIGJlIGhvbmVzdCBpdCBvbmx5IHRha2VzIHNlY29uZHMgdG8gc2h1ZmZsZSBhIGNvdXBsZSBvZiBkZWNrcyBvZiBjYXJkcy4gSWYgdGhpcyBhbG9uZSB3YXNuJ3QgZW5vdWdoLCBLYXJlbiAoVG9tJ3Mgd2lmZSkgZXZlbiBjb21tZW50ZWQgb24gdGhlIHdvb2RlbiBhcHBlYWwuIApMYSBwbHVwYXJ0IGRlIG1lcyBsZWN0ZXVycyBsJ29udCBkY291dmVydCB0cnMgdGFyZGl2ZW1lbnQgYXBycyBzJ3RyZSBmYWl0IHBsdXMgb3UgbW9pbnMgY291aWxsb25uZXIgaWNpIG91IGwgZXQgYXUgbW9pbnMgcXVhbmQgaWxzIGRjb3V2cmVudCAgcXVlbCBwb2ludCBvbiBsZXMgYSBwb3NzZHMsIG9uIHBldXQgdHJlICBwZXUgcHJzIGNlcnRhaW5zIHF1J29uIG5lIGxlcyB5IHJlcHJlbmRyYSBwbHVzIG91IGFsb3JzIGMnZXN0IHF1J2lscyBzb250ICJpbmN1cmFibGVzIi5FbmZpbiBwb3VyIHRlcm1pbmVyLCBqZSB2b2lzIHF1ZSBNLiBWZW5lc3NvbiwgYXUgbGlldSBkZSBtZXR0cmUgIGNvbnRyaWJ1dGlvbiBsZSBjaGF0IHF1J2lsIGEgaHJpdCBkJ3VuZSB2aWVpbGxlIGRhbWUgYSBvcHQgcG91ciBsYSBtaXNlIGVuIHNjbmUgZGUgc2EgZmVtbWUgZXQgZGUgc29uIG5vdXJyaXNzb24uIApBbmQgYSBnYXMgc3RhdGlvbiBpcyBvbmUgd2F5IHRvIGtlZXAgZ2FtYmxlcnMgY29taW5nIGJhY2sgdG8gdGhlIFJvY2tzaW5vLgpXZSBhcmUgV2FsbCBTdHJlZXQuIEl0IG91ciBqb2IgdG8gbWFrZSBtb25leS4gV2hldGhlciBpdCBhIGNvbW1vZGl0eSwgc3RvY2ssIGJvbmQsIG9yIHNvbWUgaHlwb3RoZXRpY2FsIHBpZWNlIG9mIGZha2UgcGFwZXIsIGl0IGRvZXNuIG1hdHRlci4gV2Ugd291bGQgdHJhZGUgYmFzZWJhbGwgY2FyZHMgaWYgaXQgd2VyZSBwcm9maXRhYmxlLiBJIGRpZG4gaGVhciBBbWVyaWNhIGNvbXBsYWluaW5nIHdoZW4gdGhlIG1hcmtldCB3YXMgcm9hcmluZyB0byAxNCwwMDAgYW5kIGV2ZXJ5b25lIDQwMWsgZG91YmxlZCBldmVyeSAzIHllYXJzLiAuCkdvb2dsZSBJbm5hdGUgUGhvYmlhcy4gCkZ0LiAKQnV0IFRIQyAodGhlIGNoZW1pY2FsIGNvbXBvdW5kIGluIG1hcmlqdWFuYSB0aGF0IGdpdmVzIHRoZSAiaGlnaCIpIGhhcyBhIHZlcnkgbG93IHZhcG9yIHByZXNzdXJlLiBJdCBpcyBzbyBsb3cgdGhhdCB0aGUgdGVjaG5pcXVlIHVzZWQgZm9yIG1lYXN1cmluZyBhbGNvaG9sICAgcHV0dGluZyB0aGUgc3Vic3RhbmNlIGluIGEgY2xvc2VkIGNvbnRhaW5lciBhbmQgd2FpdGluZyBmb3IgdGhlIHByZXNzdXJlIHRvIGVxdWFsaXplICAgZG9lc24ndCB3b3JrIHRvIG1lYXN1cmUgVEhDLiBJdCB3b3VsZCB0YWtlIHRvbyBsb25nLiBSZWNlbnRseSwgc2NpZW50aXN0cyBkZXRlcm1pbmVkIHRoZXkgY291bGQgdXNlIGEgdGVjaG5vbG9neSBjYWxsZWQgUExPVCBjcnlvIHRvIGFuYWx5emUgdGhlIGZldyBtb2xlY3VsZXMgb2YgVEhDIHRoYXQgbWFrZSBpdCBpbnRvIHRoZSB2YXBvciBwaGFzZS4gVGhpcyBjb3VsZCBwYXZlIHRoZSB3YXkgZm9yIGEgbWFyaWp1YW5hIGJyZWF0aGFseXplci4KSW5zdGVhZCwgZmluZCBvbmUgdGhhdCB3aWxsIGZpdCB3aXRoIHlvdXIgY3VycmVudCBwbGF5aW5nIHN0eWxlLiAKSXQgYmVlbiBhIGJpZyBkZWFsIGFyb3VuZCBoZXJlLCB0aGVyZSB3YXMgZXZlbiBwZXRpdGlvbnMgY2lyY3VsYXRpbmcgYXJvdW5kIHRoZSBzaG9wcyB0byBtYWtlIGl0IHNvIGhlIHdvdWxkbiBiZSBhYmxlIHRvIHBsZWFkIGluc2FuaXR5IGFuZCBnZXQgb2ZmIHdpdGggYW4gZWFzaWVyIHNlbnRlbmNlLiAKU29tZSBvZiBoZXIgYmlnZ2VzdCBoaXRzIGluY2x1ZGUgIlBva2VyIEZhY2UsIiAiSnVzdCBEYW5jZSwiICJCYWQgUm9tYW5jZSwiIGFuZCAiQm9ybiBUaGlzIFdheS4iIChGdWxsIEFuc3dlcikuIApVbHRpbWF0ZWx5LCB5b3UgY2FuIGNob29zZSBmcm9tIGEgbnVtYmVyIG9mIHBva2VyIGNoaXAgc2V0cyBvbiB0aGUgbWFya2V0LiBJZiB5b3Ugd2FudCB0byBtYWtlIHRoZSByaWdodCBjaG9pY2UsIHlvdSB3aWxsIHdhbnQgdG8gc2VsZWN0IHRoZSAxMDAgMTEuNWcgVGV4YXMgSG9sZGVtIFBva2VyIENoaXAgU2V0LgpMYWR5IEdhZ2EgVGFrZXMgSGVyIDIwMTcgU3VwZXIgQm93bCBIYWxmdGltZSBTaG93IHRvIE5ldyBIZWlnaHRzCkFsc28sIGdvaW5nIGJhY2sgdG8geW91ciBkb2N0b3IgYW5hbG9neSwgaWYgYSBkb2N0b3IgaGFzIGEgcGF0aWVudCB3aG8gcmVmdXNlcyB0byBoZWxwIHRoZW0sIHJlZnVzZXMgdG8gdGVsbCB0aGVtIGFib3V0IHRoZWlyIHN5bXB0b21zLCBkb2VzbiBzaG93IHVwIHRvIHRoZWlyIGFwcG9pbnRtZW50cywgZXRjLiB3aGF0IGNhbiB0aGF0IGRvY3RvciBkbz8gVHJ5IHRoZWlyIGJlc3QsIHllcywgYnV0IGxpa2VseSBpdCB3b24gYmUgZW5vdWdoLiBBbmQgdGhhdCBub3QgdGhlIGRvY3RvciBmYXVsdC4KV2hlbiBhIHdvbWFuIGR1bmtzIGEgYmFsbCBpdCB3aW5kcyB1cCBhcyAxIG9uIHNwb3J0c2NlbnRlciB0b3AgMTAgYmVjYXVzZSBpdCB1bnByZWNlZGVudGVkLiBNZW4gYXJlIGJpb2xvZ2ljYWxseSBiaWdnZXIsIGZhc3RlciBzdHJvbmdlciwgYW5kIHRoZXJlZm9yZSBtb3JlIGF0aGxldGljIHdoZW4gd2UgdGFsa2luZyBhdCB0aGUgZWxpdGUgbGV2ZWwuIApFYXJsaWVyIHRoYXQgZGF5LCBFbWlseSB3YXMgc2hvd2luZyBoZXIgdG9uZWQgYWJzIGluIGEgc2tpbXB5IHdoaXRlIGNyb3AgYW5kIG1hdGNoaW5nIHNraXJ0IGFzIHNoZSBzdGVwcGVkIG91dCBmb3IgYSBzdHJvbGwgaW5NaWxhbi4KSSBkb24gdGhpbmsgcGVvcGxlIHdpbGwgZGV2YWx1ZSB5b3Ugb3ZlciB5b3VyIHBhc3QuIElmIHlvdSBoYXZlIG9idmlvdXNseSBncm93biBzaW5jZSB0aGVuLCBpdCB3aWxsIG5vdCBtYXR0ZXIgdG8gdGhlbS4gTWFrZSBhbiBlZmZvcnQgdG8gZXhlcmNpc2UsIGVhdCB3ZWxsLCBhbmQgZG8gdGhpbmdzIHRoYXQgbWFrZSB5b3UgaGFwcHkgYW5kIGFyZSBmdW4uIFRob3NlIHRoaW5ncyBtYXR0ZXIgbW9yZSB0byBhIG1hbiBsb29raW5nIGZvciBhIHZhbHVhYmxlIHdvbWFuIG1vcmUgdGhhbiBzY2Fycy4gdW5sZXNzIHRoZXkgZG9uIGhhdmUgdGhlaXIgcHJpb3JpdGllcyBpbiBvcmRlci4KSWYgc3VjaCBhbiBhY3F1aXNpdGlvbiBpcyB5b3VyIGdvYWwgdGhlbiB5b3UgcHJvYmFibHkgd2lsbCB3YW50IHRvIGxvb2sgdG93YXJkcyB0aGUgMjAwIFBhdWxzb24gVG9waGF0IEFuZCBDYW5lIFBva2VyIENoaXBzIHdpdGggQWx1bWludW0gQ2FzZSB3aGVuIGNvbnNpZGVyaW5nIHRoZSBwdXJjaGFzZSBvZiBzdWNoIGFuIGl0ZW0uIFJlYWxseSwgeW91IHdvdWxkIGJlIGhhcmQgcHJlc3NlZCB0byBmaW5kIGEgcG9rZXIgY2hpcCBzZXQgdGhhdCBpcyBtb3JlIGFsbHVyaW5nIGFuZCBhcHBlYWxpbmcgdGhhbiB0aGlzIG9uZS4gSXQgaXMgdHJ1bHkgYSBjb21wbGV0ZSBzdHVubmVyIG9uIGEgbnVtYmVyIG9mIGxldmVscy4KU2V2ZXJhbCByZXB1dGFibGUgcHJvdmlkZXJzIG9mIGxpdmUgY2FzaW5vIHNvbHV0aW9ucyBoYXZlIExpdmUgQ2FzaW5vIEhvbGQnZW0gUG9rZXIgdGFibGVzIG9uIG9mZmVyIGluY2x1ZGluZyB0aGUgaW5kdXN0cnkgZ2lhbnRzIEV2b2x1dGlvbiBHYW1pbmcsIFBsYXl0ZWNoIGFuZCBNaWNyb2dhbWluZy4gCkp1c3QgRGFuY2UsIFBva2VyIEZhY2UsIExvdmVHYW1lLCBQYXBhcmF6emkgYW5kIEVoLCBFaCBmcm9tIHRoZSBmaXJzdCBhbGJ1bSwgYW5kIEJhZCBSb21hbmNlLCBUZWxlcGhvbmUgYW5kIEFsZWphbmRybyBmcm9tIHRoZSBzZWNvbmQgYWxidW0uIApTaSBsZSBwcmVtaWVyIGRlcyBhcHByZW50aXNzYWdlcyBzZSBmYWl0IGF2ZWMgb3UgY29udHJlIHNhIG1yZSwgaWwgZXhpc3RlIGRlcyBpbmZsdWVuY2VzIGV0IGRlcyBpbnNwaXJhdGlvbnMgdG91dCBhdXNzaSBwdWlzc2FudGVzIHF1aSBjb25mb3J0ZW50LCBhcGFpc2VudCBvdSBtb2RpZmllbnQgbm90cmUgcmVsYXRpb24gIGxhIGZtaW5pdC4gIExlcyBmZW1tZXMgYXBwcmVubmVudCBsZXMgdW5lcyBkZXMgYXV0cmVzLCBjb25zdGF0ZSBsYSBwc3ljaG9sb2d1ZSBjbGluaWNpZW5uZSBNYXJ5c2UgVmFpbGxhbnQuIEVudHJlIGVsbGVzLCBkYW5zIHVuIHJhcHBvcnQgZCdpbnRpbWl0LCBkZSBzZW5zdWFsaXQsIGVsbGVzIHBldXZlbnQgY2hhbmdlciBsZXVyIHJlc3NlbnRpLCBleHByaW1lciBsZXVycyBzZW5zYXRpb25zLCBsZXVyIHJhcHBvcnQgYXUgY29ycHMsICBsJ2ltYWdlIGRlIHNvaSBDJ2VzdCBkYW5zIGNlICJneW5jZSIsIHF1aSBlc3QgY2VsdWkgZGVzIHN1cnMsIGRlcyBjb3BpbmVzIG91IGRlcyBhbWllcywgcXVlIGwnb24gZGNvdXZyZSwgYWZmaXJtZSBvdSByZW1vZGxlIHNvbiByYXBwb3J0ICBsYSBmbWluaXQsIHN1ciBsZSBtb2RlIGR1IGRzaXIsIGR1IGRvdXRlIG91IGRlIGxhIGNyYWludGUuICBJbCBmYXV0IGFsb3JzIG5lIHBhcyBoc2l0ZXIgIHNvbGxpY2l0ZXIgbGUgY29uc2VpbCBvdSBsZXMgY3JpdGlxdWVzIGRlIGZlbW1lcyBxdWUgbCdvbiBhZG1pcmUgZXQgZW4gcXVpIGwnb24gYSBjb25maWFuY2UuIENvbWJpZW4gZGUgIHJlbG9va2luZ3MgIGdyYXR1aXRzIGV0IHJ1c3NpcyBzZSBmb250IHN1ciBsYSBiYXNlIGRlIHByY29uaXNhdGlvbnMgYXZpc2VzIHN1ciB1bmUgY291cGUsIHVuZSBjb3VsZXVyIGRlIGNoZXZldXgsIHVuZSBpbnNwZWN0aW9uIHNhbnMgY29tcGxhaXNhbmNlIGRlIHNhIGdhcmRlIHJvYmUuIEwnYW1pZSBvdSBsYSBzdXIgdmllbnQgbGV2ZXIgdW4gZG91dGUgZW4gbm91cyBvdSBydmVpbGxlciB1bmUgY29tcHRlbmNlIGNlbnN1cmUuIFNvbiByZWdhcmQgdm9pdCBjZSBxdWkgbm91cyBjaGFwcGUsIHNvbiBhdWRhY2UgcGV1dCByYWxsdW1lciBsYSBudHJlLiBPbiBwZXV0IHJ1bmlyIGxhIHNvbW1lIGRlIGNvbXBsaW1lbnRzIGRpdmVycyBxdWkgdm9udCBkYW5zIGxlIG1tZSBzZW5zLCBjZWxhIGZpbml0IHBhciBkZXNzaW5lciB1bmUgZGlyZWN0aW9uIHF1ZSBsJ29uIGEgaW50cnQgIHN1aXZyZSBzaSBsJ29uIHNlbnQgcXUnZWxsZSByc29ubmUgZGUgbWFuaXJlIGp1c3RlIGVuIHNvaS4KSGUgaGFzIGxvbmcgYmVlbiBhIHN0YXBsZSBvZiB0aGUgY291bnRyeSBtdXNpYyBzY2VuZSBldmVuIHRob3VnaCBoZSBzZWVtcyB0byBiZSBhIGJpdCBiZWhpbmQgdGhlIHRpbWVzIHdoZW4gaXQgY29tZXMgdG8gdGhlIHBvcCBtdXNpYyB0aGF0IG5vdyBwYXNzZXMgZm9yIGNvdW50cnkuIApUaGUgUmVkIEhhd2sgKE1hZ2F6aW5lOiAxOTI1LCBCb29rOiAxOTI2KVRoZSBSZWQgSGF3ayBpcyB0aGUgd2Vha2VzdCBhbmQgc2hvcnRlc3Qgb2YgdGhlIHRocmVlIHNlY3Rpb25zIG9mIHRoZSB0cmlsb2d5LiBJdCdzIG5vdCBvbmx5IHRoZSBtb3N0IG92ZXJ0bHkgcmFjaXN0IHN0b3J5IG9mIHRoZSB0aHJlZSwgaXQncyB0aGUgbGVhc3Qgc2F0aXNmeWluZyBuYXJyYXRpdmVseSwgY29uc2lzdGluZyBsYXJnZWx5IG9mIGEgZGVyaXZhdGl2ZSBhZHZlbnR1cmUgdGhhdCBlbmRzIGFicnVwdGx5LiBJbnN0ZWFkIGl0IGxhdW5jaGVzIHN0cmFpZ2h0IGludG8gdGhlIHN0b3J5LCB3aXRoIG9ubHkgYSBicmllZiBleHBsYW5hdGlvbiBvZiB0aGUgc2V0dGluZyB0byBpbmZvcm0gdGhlIHJlYWRlcnMgdGhhdCBpbiAyNDA4IHRoZSBLYWxrYXJzIGhhZCBiZWVuIHB1c2hlZCB0byBBbWVyaWNhJ3Mgd2VzdCBjb2FzdCBieSBKdWxpYW4gMTh0aC4uIApQbGF5aW5nIHBva2VyIGlzIGp1c3Qgb25lIG9mIHRoZSBnYW1lcyB0aGF0IGNhc2lub3MgaGF2ZSB0byBvZmZlci4gSG93ZXZlciwgd2hpY2ggb25lcyBhcmUgdGhlIGJlc3QgZm9yIHBsYXlpbmcgcG9rZXIgeW91IG1heSBhc2s/IFRoaXMgYXJ0aWNsZSBicmVha3MgZG93biB0aGUgYmVzdCBpbiBib3RoIFZlZ2FzIGFuZCBBdGxhbnRpYyBDaXR5LiBPbmUgb2YgdGhlIGZpcnN0IGlzIHRoZSBWZW5ldGlhbiBpbiBMYXMgVmVnYXMuIFRoZSBwb2tlciByb29tIGhlcmUgaGFzIHBsZW50eSBvZiBzcGFjZSwgaGFzIGEgbG90IG9mIHBva2VyIHRvdXJuYW1lbnRzIGFuZCB0aGUgZGVhbGVycyBhbmQgc3RhZmYgYXJlIGV4Y2VsbGVudC4gVGhlIEJlbGxhZ2lvIGlzIHRoZSBuZXh0IG9uZSBvbiB0aGUgbGlzdC4gWW91IGNhbiBmaW5kIGRpZmZlcmVudCBwb2tlciBzdGFycyBwbGF5aW5nIGluIHRoZSBiYWNrIHJvb20uIFRoaXMgaGFzIGEgZ3JlYXQgbWl4IG9mIGdhbWVzLCBwZW9wbGUgYW5kIGF0bW9zcGhlcmUuClNvIGhlcmUgdGhlIHRoaW5nLiAKQXQgYSBtZWV0aW5nIG9uIHRoZSBtaW5pbXVtIHdhZ2UgaGlrZSBhdCB0aGUgSyBCSVogb2ZmaWNlIGluIFllb3VpZG8sIFNlb3VsLCBpbiBKdWx5LCB0aGUgZmVkZXJhdGlvbiBhcmd1ZWQgdGhhdCBmb3JlaWduIHdvcmtlcnMsIG1vc3RseSBpbmV4cGVyaWVuY2VkIGluIG1hbnVmYWN0dXJpbmcgc2VjdG9ycyBmb3Igd2hpY2ggdGhleSB3ZXJlIHJlY3J1aXRlZCwgc2hvdWxkIGJlIHBhaWQgODAgcGVyY2VudCBvZiB0aGUgbWluaW11bSB3YWdlIHRoZSBmaXJzdCB5ZWFyLCA5MCBwZXJjZW50IHRoZSBmb2xsb3dpbmcgeWVhciwgYW5kIDEwMCBwZXJjZW50IGluIHRoZSB0aGlyZCB5ZWFyLiBUaGUgcHJvcG9zYWwgY2FtZSBhZnRlciB0aGUgZmVkZXJhdGlvbiBhY2NlcHRlZCBtb3N0IG9mIGl0cyBtZW1iZXIgY29tcGFuaWVzIHN1Z2dlc3Rpb25zIHRoYXQgcmFpc2luZyBtaWdyYW50IHdvcmtlcnMgd2FnZXMgaXMgdW5mYWlyLi4gCk9uY2UgdGhlIEp1c3RpY2Ugb2YgdGhlIFBlYWNlIGhhcyBoZWFyZCBib3RoIHNpZGVzIGhlL3NoZSB3aWxsIG1ha2UgdGhlaXIgZGVjaXNpb24uLiAKV2hhdCBraW5kYSBwbGF0Zm9ybSBjb3VsZCBCYXJiaWUgaGF2ZT8gYWxsLCBzaGUgaGFkIHRvIHN0YXkgd2l0aGluIGhlciBhc3NpZ25lZCBnZW5kZXIgcm9sZSBhbmQgbm90IG9mZmVuZCBhbnkgcG90ZW50aWFsIGNvbnN1bWVycy4gCk15IGNsaWVudCB3b3VsZCBsaWtlIHRvIG9mZmVyIGEgdW5pcXVlIGNoYWxsZW5nZSB0byBhdm9pZCBhbnkgbmVnYXRpdmUgcHJlc3MgLyBtZWRpYSBhZ2FpbnN0IHlvdXIgZXN0YWJsaXNobWVudCwgb3IgYW55IGxlZ2FsIHN1aXRzIG9yIHJhbWlmaWNhdGlvbnMuIEhlIHdvdWxkIGxpa2UgdG8gb2ZmZXIgdGhpcyBvcHBvcnR1bml0eSB0byB5b3VyIEFmcmljYW4gQW1lcmljYW4gYm91bmNlciwgc2luY2UgaGUgc3RhcnRlZCB0aGUgcGh5c2ljYWwgY29uZnJvbnRhdGlvbiwgd2hlcmUgaGUgbmVlZGVkIHNvIG11Y2ggaGVscCB0byBnbyBhZnRlciBteSBjbGllbnQsIHJlc3VsdGluZyBpbiBoaXMgZmFjZSBiZWluZyB1bmRlcnN0YW5kYWJseSBzbGFwcGVkLiBNeSBjbGllbnQgd291bGQgbGlrZSB0byBtZWV0IGhpbSBpbiBhIGNoYXJpdHkgZXhoaWJpdGlvbiBib3hpbmcgYm91dCBpbiBQb3J0bGFuZCwgT3JlZ29uLiBQcm9jZWVkcyBvZiB1cCB0byAkMjBrIHdpbGwgZ28gdG8gY2hhcml0eS4gSWYgdGhlIGJvdW5jZXIgd2lucywgaGUgaXMgd2lsbGluZyB0byBnaXZlICQyMGsgdG8geW91ciBjaGFyaXR5IGJ1dCBpZiBteSBjbGllbnQgd2lucywgaGUgZXhwZWN0cyB5b3VyIGVzdGFibGlzaG1lbnQgdG8gcGF5IG15IGNsaWVudHMgY2hvc2VuIGNoYXJpdHkuCjE6IFdoZW4gdGhlIGRlYWxlciBpcyBoYXMgZ2F0aGVyZWQgdGhlIHBpbGUgb2YgY2FyZHMgaW4gZnJvbnQgb2YgaGltLCB3YWl0IHVudGlsIGhlIHB1bGxzIHRoZSBzdGFjayB0b3dhcmRzIGhpbXNlbGYsIHRoZW4gdHlwZSBwb2tlcnRlbi4gSWYgeW91IGdldCBhIEsgYW5kIEEgb2YgY2x1YnMgeW91J3JlIGdvb2QuIApJZiB5b3UgYXJlIGZvbGRpbmcgdGhlIGZsb3Agd2hlcmUgeW91IGhpdCB0b3AgcGFpciwgdGhlbiB5b3Ugc2hvdWxkbiBiZSBjYWxsaW5nIHRoZSA0YmV0Li4gClRoZXJlIGFyZSBzb21lIHBlb3BsZSB3aG8gYXJlIGdvaW5nIHRvIGFic29sdXRlbHkgYW5kIHVucXVlc3Rpb25hYmx5IGp1c3Qgbm90IHdvcmsgd2l0aCBhIGJpbmFyeSBzeXN0ZW0sIGJ1dCBJIHBlcnNvbmFsbHkgaW4gYSBwbGFjZSB3aGVyZSBJIG9rYXkgd2l0aCBteSBnZW5kZXIgdG8gd29tYW4gaW4gbW9zdCBjaXJjdW1zdGFuY2VzLCBiZWNhdXNlIEkgaW4gdGhhdCB0YWlsIHdoZXJlIEkga2luZGEgb3ZlciB0aGVyZSBidXQgbm90IDEwMCUgb24gdGhlIG5vc2UuLiAKRGVhciBicm90aGVyIG9mIFRoZXJlc2EgIlR1dHRpZSIsIFBhdWxldHRlIGFuZCBEb3JlZW4uIERlYXIgc29uIGluIGxhdyBvZiBFbGlnaW8gYW5kIEFkYSAoR3JvdHRvbGkpIFRvbWluaS4gCkVzcGVjaWFsbHkgc2luY2UgaGUga25vd3Mgc2hlIHdhbnRzIGEgZmFtaWx5LiAKSWYgdGhpcyBpcyBhIHBvc3NpYmlsaXR5LiAKSSBva2F5IHdpdGggZWl0aGVyIGFwcHJvYWNoLiBUaGUgb25seSB0aW1lIEkgcmVhbGx5IGhhdmUgaXNzdWVzIHdpdGggdGhlcmFwaXN0cyB0aW1lIGJvdW5kYXJpZXMgYXJlIHRob3NlIHRoZXJhcGlzdHMgdGhhdCBqdXN0IHNlZW0gdG8gaGF2ZSBOTyBjb25jZXB0IG9mIHRpbWUgbWFuYWdlbWVudC4gS2VlcGluZyBhIGNsaWVudCB3YWl0aW5nIHJlZ3VsYXJseSBmb3IgMjAgbWludXRlcyBiZWNhdXNlIHlvdSBjYW4gYmUgYm90aGVyZWQgdG8gc2F5IGdvb2RieWUgaW4gYSByZWFzb25hYmxlIHRpbWUgZGVtb25zdHJhdGVzIGEgbGFjayBvZiByZXNwZWN0IGZvciBvdGhlcnMgdGltZS4uIApNb2RlcmF0ZSBmYXQgaW50YWtlLCBvZiB3aGljaCBhIHJlYXNvbmFibGUgZG9zZSBpcyBzYXR1cmF0ZWQsIGhhcyByZXBlYXRlZGx5IGJlZW4gZm91bmQgdG8gY29ycmVsYXRlIHdpdGggZnJlZSB0ZXN0b3N0ZXJvbmUgYW5kIG11c2NsZSBkZXZlbG9wbWVudC4uIApDb3MnIHVuIGNvbnN1bHRvIGFzdHJvbG9naWNvPwpEaWUgZHVyY2ggZGllIFNlaXRlbmJldHJlaWJlciBlcnN0ZWxsdGVuIEluaGFsdGUgdW5kIFdlcmtlIGF1ZiBkaWVzZW4gU2VpdGVuIHVudGVybGllZ2VuIGRlbSBkZXV0c2NoZW4gLiBEaWUgVmVydmllbGZsdGlndW5nLCBCZWFyYmVpdHVuZywgVmVyYnJlaXR1bmcgdW5kIGplZGUgQXJ0IGRlciBWZXJ3ZXJ0dW5nIGF1ZXJoYWxiIGRlciBHcmVuemVuIGRlcyBlcyBiZWRyZmVuIGRlciBzY2hyaWZ0bGljaGVuIFp1c3RpbW11bmcgZGVzIGpld2VpbGlnZW4gQXV0b3JzIGJ6dy4gCkxpZ2h0IHR1cm5zIGdyZWVuLCBzaGUgYmFja3MgdXAsIGFuZCBJIGxheSBvbiBteSBob3JuLiBMdWNraWx5IHNoZSBkaWRuJ3QgaGl0IG1lIGJ1dCBJIHJlYWxseSB3aXNoIEkgY291bGQgaGF2ZSBzYXcgaGVyIGZhY2Ugd2hlbiBzaGUgcmVhbGl6ZWQgd2hhdCBldmVyeW9uZSB3YXMgdHJ5aW5nIHRvIHRlbGwgaGVyLgpNYSBjb25uYWlzc2FuY2UgZGUgbGEgY3Vpc2luZSBqYXBvbmFpc2UgYXZhaXQgY29tbWVuYywgaWwgeSBhIGJpZW4gbG9uZ3RlbXBzIChwbHVzIGRlIHZpbmd0IGFucy4pLCBwYXIgbGEgZGNvdXZlcnRlIGRlcyBicm9jaGV0dGVzICh5YWtpdG9yaSkgZGFucyB1biByZXN0YXVyYW50IHByb2NoZSBkZSBtb24gYnVyZWF1IGQnYWxvcnMuIFB1aXMgc29udCB2ZW51cyBsZXMgc3VzaGkuIApNYWtlIG5vIG1pc3Rha2UsIGhhZCB0aGV5IGJlZW4gb2xkIGVub3VnaCBpbiB0aG9zZSBkYXlzLCBCZWNrIGFuZCBldmVyeSBtb2Rlcm4gZGF5IG1vdmVtZW50IGNvbnNlcnZhdGl2ZSB3b3VsZCBoYXZlIHN0b29kIHdpdGggdGhlIHNlZ3JlZ2F0aW9uaXN0cywgd2l0aCB0aGUgYmlnb3RzLCB3aXRoIHRoZSBtb2JzIHdobyBidXJuZWQgdGhlIGJ1c2VzIGNhcnJ5aW5nIGZyZWVkb20gcmlkZXJzLiBIb3cgZG8gd2Uga25vdz8gRWFzeS4gCk9ubHkgMjQsIGl0IGlzIHVuY2xlYXIgd2hlcmUgQWJlcm5hdGh5IHdpbGwgZ28gd2l0aCBoZXIgcG9rZXIgc2tpbGxzLiBCdXQgZm9yIHRoZSB0aW1lIGJlaW5nLCBzaGUgcGxhbnMgdG8gY29udGludWUgcGxheWluZyBhbmQgaW1wcm92aW5nLCB3aGljaCB3aWxsIGxpa2VseSBrZWVwIGhlciBvbiB0aGUgcG9rZXIgcmFkYXIgZm9yIHRoZSBmb3Jlc2VlYWJsZSBmdXR1cmUuCkl0YWx5IHByb2JlZCBpbiB0aGVpciBtb3JlIGZsZXhpYmxlIDQgMSAzIDIgZm9ybWF0aW9uIGJ1dCBFbmdsYW5kIG9mZmVyZWQgYSBnb29kIGFkdmVydGlzZW1lbnQgZm9yIDQgNCAxIDEgYnkgcGxheWluZyB3aWRlciBvbiB0aGUgY291bnRlciBhdHRhY2sgdGhhbiB0aGV5IGhhZCBpbiBhbnkgb2YgdGhlaXIgdGhyZWUgZ3JvdXAgZ2FtZXMuLiAKR2VycnkgUXVpbmxhbiwgYSBkaXJlY3RvciBhdCBTeWRuZXkgYmFzZWQgbGlxdW9yIGFuZCBob3NwaXRhbGl0eSBicm9rZXJzIE1hbmVudGkgUXVpbmxhbiBhbmQgQXNzb2NpYXRlcywgd2lsbCBhY3QgYXMgY29uanVuY3Rpb25hbCBhZ2VudCBhbmQgdGhlIGF1Y3Rpb24gaXMgbW9zdCBsaWtlbHkgdG8gYmUgY29uZHVjdGVkIGluIFN5ZG5leS4gCkFjcm9zcyB0aGUgY291bnRyeSwgQ0lCQyBzcG9uc29ycyBudW1lcm91cyBjaGFyaXRhYmxlIGFuZCBjb21tdW5pdHkgaW5pdGlhdGl2ZXMsIHdpdGggbWFueSBwcm9ncmFtcyB0cmFjaW5nIHRoZWlyIHJvb3RzIHRvIGluaXRpYXRpdmVzIHNwZWFyaGVhZGVkIGJ5IHNtYWxsIGdyb3VwcyBvZiBlbXBsb3llZXMgd2l0aGluIHRoZSBiYW5rLCBpbmNsdWRpbmcgdGhlICJDYW5hZGlhbiBDYW5jZXIgU29jaWV0eSBDSUJDIFJ1biBmb3IgdGhlIEN1cmUiIGFuZCAiQ0lCQyBNaXJhY2xlIERheSBhbmQgQ2hpbGRyZW4ncyBGb3VuZGF0aW9uIi4uIApNdW1iYWksIE5vdmVtYmVyIDIyLCAyMDE3SE9XTCAgIFRoZSBpbmN1bWJlbnQgRSBDb21tIGFuZCBEaWdpdGFsIEFnZW5jeSwgaGFzIGJlZW4gcmVjZW50bHkgYXNzaWduZWQgdGhlIGRpZ2l0YWwgZHV0aWVzIGZvciBCYWFkc2hhaCBHYW1pbmcsIGEgb25lICBvZiBpdHMga2luZCBvbmxpbmUgcG9ydGFsIHRoYXQgb2ZmZXJzIFBva2VyLCBGYW50YXN5IExlYWd1ZSBhbmQgUnVtbXkgdW5kZXIgb25lIHJvb2YuIFRoZSBtYW5kYXRlIGVudGFpbHMgYnVpbGRpbmcgYW5kIGF1Z21lbnRpbmcgdGhlIGJyYW5kJ3MgZGlnaXRhbCBwcmVzZW5jZSB0aHJvdWdoIHN0cmF0ZWdpYyBwbGFubmluZyBhY3Jvc3MgZGlnaXRhbCBwbGF0Zm9ybXMuIFRoZSBmb2N1cyB3aWxsIGJlIHRvIGJ1aWxkIGFmZmluaXR5IHZpYSBicmFuZCBhZHZvY2FjeSB0aHJvdWdoIG1hcmtldGluZyBhbmQgYWxsaWFuY2VzIGRpZ2l0YWwgcGxhdGZvcm1zLiAKRm9yIGFydCwgdXNlIHRoZSBmb2xsb3dpbmcgW0FydF0gVGl0bGUgb2YgQ2hvaWNlIChOYW1lIG9mIHRoZSBzb3VyY2UgU2VyaWVzKS4gTWFuZ2EgcGFuZWwgY3JvcHMgb3IgZnVsbCBwYWdlcyBhbmQgbWFuZ2EgcmVsYXRlZCBmYW5hcnQgKHJlbWVtYmVyIHRvIGluY2x1ZGUgdGhlIHNvdXJjZSBpbiBhIGNvbW1lbnQpIGJvdGggZmFsbCB1bmRlciB0aGUgW2FydF0gdGFnLgpIYXZlbid0IGhpdCB1cCBhIE1pbm5lYXBvbGlzIFZpbnRhZ2UgTWFya2V0IHlldD8gSXQncyB0aW1lISBUaGlzIG1vbnRoJ3MgZXZlbnQgb25jZSBhZ2FpbiB0YWtlcyBwbGFjZSBhdCB0aGUgTWFjaGluZSBTaG9wIGV2ZW50IHNwYWNlLCBhbmQgdGhpcyBTdW5kYXkgaXQgd2lsbCBiZSBmaWxsZWQgd2l0aCBsb2NhbCB2aW50YWdlIHZlbmRvcnMgcmVhZHkgdG8gZGVsaWdodCBhbmQgaW5zcGlyZSB5b3Ugd2l0aCB0aGVpciBmaW5kcy4gVGhlIGV2ZW50cyBrZWVwIGdldHRpbmcgYnVzaWVyIGFuZCBidXNpZXIsIHNvIGlmIGNyb3dkcyBhcmVuJ3QgeW91ciB0aGluZywgZG9uJ3Qgd29ycnk6IFlvdSBjYW4gYnV5IGFuIGVhcmx5IGJpcmQgdGlja2V0IGZvciAkMTAgYW5kIHNob3AgYmVmb3JlIHRoZSBkb29ycyBvZmZpY2lhbGx5IG9wZW4uIE9uIHRoZSByb3N0ZXIgZm9yIHRoZSBNYXJjaCBldmVudCBhcmUgdmVuZG9ycyBsaWtlIERlYXJoZWFydCBWaW50YWdlLCBIYXplbCBSb3NlLCBXZWVrZW5kIFNhbHZhZ2UsIFdlbGxpZXMgVmludGFnZSwgTm9pc3kgRXllIFZpbnRhZ2UsIGFuZCB3YXksIHdheSBtb3JlLiAKV2ViIHNlYXJjaCByZXN1bHRzIGZvciBGcmVlIENyb2NoZXQgUGF0dGVybiBGb3IgTW9oYXdrIEhhdCBXaXRoIEVhciBGbGFwcyBmcm9tIFZpdmVsaS4KQWxsIG9mIG15IEFtZXJpY2FuIGZyaWVuZHMgaGF2ZSBhIHN0b3J5IG9yIHR3byBhYm91dCB0aGUgdGltZSAidGhleSBmdWNrZWQgdGhpcyBndXkgdXAiIG9yICJnb3QgZnVja2VkIHVwLiIgSXQgbGlrZSBldmVyeW9uZSB3YW50cyB0byBiZSBhIGdhbmdzdGEgdGhhdCBmaWdodHMsIGFzIGlmIGl0IHNvbWUga2luZCBvZiBhbHBoYSB0aGluZy4gTWF5YmUgSSBsaXZlZCBpbiBBc2lhIGZvciB0b28gbG9uZywgYnV0IG5vIG1hdHRlciBob3cgZnVja2VkIHVwIEkgYW0gZ2V0dGluZyBpbnRvIGEgZmlnaHQgaXMgbGlrZSB0aGUgbGFzdCBvZiBsYXN0IHJlc29ydHMuIFBsdXMsIHlvdSBkb24ga25vdyB3aG8gaXMgZ29ubmEgcHVsbCBvdXQgYSBmdWNraW4gZ3VuIGluIHRoZSBTdGF0ZXMuIApZb3UgY2FuIGFsd2F5cyBwcmV0dHkgdXAgdGhlIGZyb250IGVuZCwgYnV0IGFsbW9zdCBhbGwgY2FyZCBnYW1lcyBjYW4gYmUgcmVwcmVzZW50ZWQgd2l0aCB0ZXh0IGFsb25lLi4gCkJlc2lkZXMgdGhlIG9idmlvdXMgdGhpbmdzIGxpa2UgYmFkIGF2YWlsYWJpbGl0eSBhbmQgcG9vciBzcGVsbGluZywgbXkgYmlnZ2VzdCByZWQgZmxhZyBpcyBoYXZpbmcgYSBsb3Qgb2Ygam9iIGhpc3RvcnkgaW4gYSBzaG9ydCB0aW1lIGZyYW1lLiBJZiB5b3Ugd29ya2VkIDMgcGxhY2VzIHdpdGhpbiBhIHllYXIgaXQgbm90IGdvaW5nIHRvIG1ha2UgbWUgdGhpbmcgeW91IGhhdmUgbW9yZSBleHBlcmllbmNlLCBpdCBnb2luZyB0byBtYWtlIG1lIHRoaW5rIHlvdSBjYW4gaG9sZCBhIGpvYiBvciBoYXZlIGRlbWFuZHMgdG9vIGhpZ2ggZm9yIG90aGVyIHJldGFpbGVycyB0byBtZWV0LiBJZiAzIG90aGVyIHN0b3JlcyB3ZXJlbiB3b3J0aCB3b3JraW5nIGF0IGZvciBtb3JlIHRoYW4gYSBmZXcgbW9udGhzLCB3aHkgd2lsbCBteSBzdG9yZSBiZSBhbnkgZGlmZmVyZW50PyBIaXJpbmcgam9iIGhvcHBlcnMgaXMgYSB3YXN0ZSBvZiBteSB0aW1lIGFuZCBsYWJvciBidWRnZXQuLiAKTW9zdCBhY3Rpb25zIHJlcXVpcmUgc29tZSBsZXZlbCBvZiBiZWluZyBhYmxlIHRvIHRha2UgaW5mbyBmcm9tIGludGVsbGlnZW5jZSBzb3VyY2VzIGFuZCBhcHBseWluZyB0aGVtIHRvIHRoZSBzaXR1YXRpb24uIApBbmQgSSB0aGluayBpdCBhbHdheXMgd2lsbCwgZm9yIG1lLi4gClZpY3RvcnZpY3RvcjEgIDQyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KQW5kIGdldHRpbmcgcG9pbnRzIG9mdGVuIChidXQgbm90IGFsd2F5cykgbWVhbnMgZ3JhYmJpbmcgcGxhbmV0cy4gClByYWN0aWNlLCBwcmFjdGljZSwgcHJhY3RpY2UuIFdoaWxlIHlvdSBnZXR0aW5nIHRoZSBoYW5nIG9mIHRoaW5ncywgZ28gb3V0IHRvIGFuIGVtcHR5IGZpZWxkIGFuZCBwcmFjdGljZS4gCkkgaW1hZ2luZSB0aGF0IE1HTSBOYXRpb25hbCBIYXJib3IgaXMgcHJvYmFibHkgYSBtaXggb2YgcmVncyBhbmQgdG91cmlzdHMgZnJvbSBjb25mZXJlbmNlcywgZGVwZW5kaW5nIG9uIGlmIHRoZXJlIGlzIGEgY29uZmVyZW5jZSBhdCBOYXRpb25hbCBIYXJib3Igb3Igbm90LiAKSSdtIG5vdCBzdXJlIGhvdyB0byBpbnRlcnByZXQgaGlzIHJlYWN0aW9uIHRvIGhlciBzY2FycyBpbiB0aGUgc2hvdywgYnV0IGl0IGRlZmluaXRlbHkgd2Fzbid0IHRoZSBvdXRyaWdodCBkaXNndXN0IGhlIGhhZCBpbiB0aGUgYm9vay4gR2l2aW5nIGl0IHVwIHRvIE1lc3NpbmEgZm9yIGEgc3RlbGxhciBwZXJmb3JtYW5jZS4uIApFciByZWNobmV0IG1hbCBnYW56IGxlaXNlIG5hY2gsIHdhcyBpaG0gZGFzIGFsbGVzIGJyaW5ndC4gSW4gNiBKYWhyZW4gdW5kIDQgTW9uYXRlbiwgd2lyZCBlciBkaWUgVW5rb3N0ZW4gd2llZGVyIGVyYXJiZWl0ZXQgaGFiZW4gZGllIGlobSBkdXJjaCBkaWUgZXR3YXMgaGhlcmVuIFZlcmd0dW5nZW4genVzdGVoZW4uIEFiIGRhbm4gd2lyZCBpaG0gd2llZGVyIGhubGljaCB2aWVsIGJsZWliZW4gd2lyIDIwMDUgYWxzIGVyIHNlaW5lIFByYXhpcyBpbiBCYXNlbCBlcmZmbmV0ZS4gV2FyIGRhcyBaaWVsIGRlciBUYXJpZiBWZXJoYW5kbHVuZ2VuIG5pY2h0IGVpbiBhbmRlcmVzPwpXZWlnaHQgdHJhaW5pbmcgbWF5IHJlZHVjZSB0aGUgcmlzayBvZiB0eXBlIDIgZGlhYmV0ZXMgYnkgaGVscGluZyB0byBidWlsZCBsZWFuIG1hc3MuClRoZSBvd25lciBvZiBJbmRpZSBBbGUgSG91c2UgaW4gVG9yb250byBiZWNhbWUgdGhlIHRhbGsgb2YgdGhlIGVudHJlcHJlbmV1cmlhbCBjb21tdW5pdHkgd2hlbiBhbiBlcXVpcG1lbnQgc3VwcGxpZXIgd2VudCBiYW5rcnVwdCwgbGVhdmluZyBoaW0gJDgwMCwwMDAgaW4gdGhlIGhvbGUgb24gdGhlIHZlcmdlIG9mIGEgbmV3IGV4cGFuc2lvbiBwcm9qZWN0Li4gClRoZSByZXBvcnQgcmVsZWFzZWQgV2VkbmVzZGF5IGZvdW5kIHRoYXQgVmFuY291dmVyLCBUb3JvbnRvIGFuZCBDYWxnYXJ5IHNhdyBsYXJnZSBkcm9wcyBpbiBoaWdoIGVuZCByZWFsIGVzdGF0ZSBzYWxlcyBpbiAyMDE4IGFzIHRoZSBtYXJrZXRzIGRlYWx0IHdpdGggYSBudW1iZXIgb2YgaGVhZHdpbmRzIGluY2x1ZGluZyB0aWdodGVyIHN1cHBseSwgaGlnaGVyIGZvcmVpZ24gYnV5ZXJzIHRheGVzIGFuZCBzdHJhaW5lZCBlY29ub21pYyBjb25kaXRpb25zIGR1ZSB0byB0aGUgZmFsbGluZyBwcmljZSBvZiBjcnVkZS4KVGhpcyBpcyB0aGUgaW52ZXJzZSBvZiB0aGUgZGV2ZWxvcGluZyB3b3JsZC4gSXQgdXNlcyBsZXNzIHJlc291cmNlcyBub3csIGJ1dCBpbiB0aGUgbmVhciBmdXR1cmUgd2lsbCBzb29uIHVzZSBhIGxvdCBtb3JlLiAKVGhlIGZpZWxkIG9mIGNhciBnYWRnZXRzIG1heSBteXN0aWZ5IGEgY2hhcmFjdGVyIGxpa2UgSm9obiBCb29rLCBpZiB3ZSBzdXBwb3NlIGhlJ3MgYmVlbiBsaXZpbmcgaW4gYW4gQW1pc2ggY29tbXVuaXR5IGFsbCB0aGlzIHRpbWUsIGJ1dCB0aGF0IGRvZXNuJ3QgbWVhbiBpdCdzIGFueSBlYXNpZXIgZm9yIHRoZSByZXN0IG9mIHVzIHRvIG5hdmlnYXRlLiAKUGxheWVkIGhhcmQsIEhvcnZhdCBzYWlkLiAKU28gaG93IGJhZCBpcyBpdD8gQWZ0ZXIgc3BsaXR0aW5nIHRoZSBXYXNoaW5ndG9uIHNlcmllcywgdGhlIEdpYW50cyBhcmUgNDkgNjQgKC40MzQgd2lubmluZyBwZXJjZW50YWdlKS4gT25seSBmb3VyIHRlYW1zIGFyZSB3b3JzZTogQ2luY2lubmF0aSAoLjQzMCksIFRleGFzICguNDMwKSwgUGl0dHNidXJnaCAoLjQwOSksIGFuZCBUYW1wYSBCYXkgKC4zODYpLgpBcyBhIHdlc3Rlcm5lciB3aG8gZnJlcXVlbnRseSBmaW5kcyBoaW1zZWxmIGluIEphcGFuLCBJIHRoaW5rIHRoYXQgdGhpcyB2aWRlbyBzdW1tYXJpemVzIGFuIGFzcGVjdCBvZiB0aGUgSmFwYW5lc2UgY3VsdHVyZSB0aGF0IEkgYWRtaXJlLiBSZWdhcmRpbmcgdGhlIHdvcmtlcnMsIEkgbm90IHN1cmUgdGhhdCB0aGUgQU5BIGNvcnBvcmF0ZSBvZmZpY2Ugd291bGQgdmlldyB0aGlzIGFzIGJlaW5nIGluZWZmaWNpZW50LiBJIHRoaW5rIGl0IGl0IGlzIG1vcmUgYWJvdXQgQS4gCiJObyBtYXR0ZXIgdGhlIHR5cGUgb3IgbWVjaGFuaXNtIG9mIGNvbW11bmljYXRpb24sIGV2ZXJ5IGluc3RhbmNlIG9mIGNvbW11bmljYXRpb24gbXVzdCBoYXZlIGEgbWVzc2FnZSB0aGF0IGlzIGJlaW5nIHRyYW5zZmVycmVkIGZyb20gc2VuZGVyIHRvIHJlY2VpdmVyLiBJbiBvcmRlciBmb3IgY29tbXVuaWNhdGlvbiB0byBiZSBzdWNjZXNzZnVsLCB0aGVzZW5kZXJhbmRyZWNlaXZlciBtdXN0IGhhdmUgc29tZSBzaWducywgd29yZHMgb3Igc2lnbmFscyBpbiBjb21tb24gd2l0aCBlYWNoIG90aGVyIHNvIHRoZSBzZW50IG1lc3NhZ2UgY2FuIGJlIHVuZGVyc3Rvb2QuIFRoZSBpZGVhbCBkZWZpbml0aW9uIG9mIGNvbW11bmljYXRpb24gaXMgYSAyIHdheSBpbnRlcmFjdGlvbiBiZXR3ZWVuIHR3byBwYXJ0aWVzIHRvIHRyYW5zbWl0IGluZm9ybWF0aW9uIGFuZCBtdXR1YWwgdW5kZXJzdGFuZGluZyBiZXR3ZWVuIHRoZW1zZWx2ZXMuIApTcGVlZDogQWJzb2x1dGUgbWluaW11bSBvZiAxNjAgaW1vLCAxODArIGlzIHdoYXQgdG8gc2hvb3QgZm9yLiBZb3UgZG9uIHdhbnQgaGltIGdldHRpbmcgbGFwcGVkIHRvIGVhc2lseSBhbmQgeW91IHdhbnQgaGltIHRvIGJlIGFibGUgdG8gc2hha2UgZGVidWZmcyBhbmQgY3ljbGUuCkl0IHdhcyBleGFjdGx5IHdoYXQgSSByZW1lbWJlcmVkLCBhbmQgSSB3YXMgaGFwcHkuIEkgZGlkbiBuZWVkIHRocmVlIGRheXMgb2Ygd2FpdGluZy4gSSB3ZW50IHRocm91Z2ggYSByaXR1YWwgd2l0aG91dCBldmVuIHRoaW5raW5nICJvaCwgaXQganVzdCBiYWtlZCBhbmQgYnJlYWRlZCBjb2Qgd2l0aCBnYXJsaWMgYW5kIGxlbW9uLiIuIApFaW4gU3QgZGllc2VzIEZsYWlycyBoYWJlbiB3aXIgaW4gRm9ybSB2b24gZHJlaSBrbGVpbmVuIFN0ZWluYmlsZGVybiBtaXQgbmFjaCBEIGdlbm9tbWVuLiBadSBlaW5lbSBlcnNjaHdpbmdsaWNoZW4gUHJlaXMuIFdvbWl0IG51biBhdWNoIExpZWJoYWJlciBhdXRoZW50aXNjaGVyIEt1bnN0IGVpbmVuIEdydW5kIGhhYmVuLCBzaWNoIG5hY2ggTGlzc2Fib24gYXVmenVtYWNoZW4uCk15IGxpa2VzLCBkaXNsaWtlcywgcGFzc2lvbnMsIGNsb3NlIGZyaWVuZHNoaXBzLCByZWxhdGlvbnNoaXBzICAgc2hlIGhhcyBubyBjb25jZXB0IG9mIGFueSBvZiBpdCwgYmVjYXVzZSBrbm93aW5nIG1lIGFzIGEgcGVyc29uIHdhcyBhIHByaXZpbGVnZSBzaGUgdGhyZXcgYXdheS4uIApFZGl0OiBsb29raW5nIG5vdywgdGhleSBnb3Qgc2V2ZXJhbCBkaWZmZXJlbnQgc2VyaWVzIG9mIHRoZW0uIEl0IHVzZWQgdG8gYmUgdGhlcmUgd2VyZSBub3QgdGhlc2UgdGhyZWFkIGNvdW50IG9wdGlvbnMuIEkgYmVsaWV2ZSB3aGVuIHdlIGJvdWdodCBvdXJzIHRoZXkgd2VyZSA2MDAgdGhyZWFkIGNvdW50IGFuZCB0aGF0IHdhcyB0aGUgb25seSBvcHRpb24uIE5vdyB0aGVyZSBhcmUgd2Ftc3V0dGEgZHJlYW0gem9uZSBwaW1hY290dCA1MDAsIDc1MCwgb3IgMTAwMCB0aHJlYWQgY291bnQgcGVyY2FsZSBzaGVldHMuIFdlIHZlcnkgaGFwcHkgd2l0aCB0aGUgNjAwLCBzbyBJIHdvdWxkIHRoaW5rIGFueSBvZiB0aG9zZSBhcmUgcHJvYmFibHkgZmluZSBidXQgb2YgY291cnNlIHltbXYgYXMgSSBoYXZlbiB0cmllZCB0aGVtLgpUaGUgcGxhY2VzIEkgZ28gaW4gR2VybWFueSBmZWF0dXJlIHN1cGVyIGhvdCB3b21lbiBpbiB0aGVpciAyMHMgYW5kIGVhcmx5IDMwcywgYW5kIHRoZSBzZXggaXMgdXN1YWxseSAoYnV0IG5vdCBhbHdheXMpIGRhbW4gZnVuLiAKIDcgcG9pbnRzICBzdWJtaXR0ZWQgMTUgaG91cnMgYWdvQ29taW5nIGZyb20gYSBTd2VkZSB5ZXMgYWxyZWFkeSB3aXRob3V0IHRoZSBtaWdyYW50cyBpdCB3ZXJlIGNvbGxhcHNpbmcuIEkgb25seSBzZWVuIHN0YXRzIGZvciBOb3J3YXkgYnV0IHRoZXkgaGF2ZSBhIGxvdCBvZiBwZW9wbGUgZHlpbmcgd2FpdGluZyBmb3IgY2FyZS4gQnV0IGR1ZSB0byB0aGUgTm9yd2VnaWFuIHBvcHVsYXRpb24gYmVpbmcgdGlueSAoYXJvdW5kIDUgbWlsbGlvbikgaXQgZG9lc24gbWFrZSB0aGUgbmV3cyBidXQgcGVyIGNhcGl0YSB0aGV5IGhvcnJpYmxlIGFzIGlzIFN3ZWRlbi4gCiJJIHRoaW5rIFt0aGUgZmluZGluZ10gYWRkcyB2ZXJ5IG5pY2VseSB0byB0aGUgbGl0ZXJhdHVyZSwiIHNheXMgVmFsZXJpZSBSZXluYSwgcHJvZmVzc29yIG9mIGh1bWFuIGRldmVsb3BtZW50IGFuZCBwc3ljaG9sb2d5IGF0IENvcm5lbGwgVW5pdmVyc2l0eSwgd2hvIHdhcyBub3QgYXNzb2NpYXRlZCB3aXRoIHRoZSByZXNlYXJjaC4gIlRoZSBuZXcgYnJlYWt0aHJvdWdoIGhlcmUgaXMgdGhhdCBpdCBleHRlbmRzIG91ciBrbm93bGVkZ2UgYWJvdXQgYWRvbGVzY2VudCByaXNrIHRha2luZyBpbnRvIHRoZSByZWFsbSBvZiBhbWJpZ3VpdHkgYXZlcnNpb24uIgpBcyBzdHVkZW50cyBkZXZlbG9wIHRoZWlyIHVuZGVyc3RhbmRpbmcsIHRlYWNoZXJzIHJhaXNlIHRoZSBjaGFsbGVuZ2UgbGV2ZWxzIHRvIGVuY291cmFnZSB0aGVtLCBzYWlkIFNhbnRvcywgdGhlIGNlbnRlcidzIGFjYWRlbWljIGRpcmVjdG9yLiBTYXR1cmRheS4gCkhlIGluIGZhY3Qgd2FzIGhhdmluZyBzZWl6dXJlcyBhbmQgaGlzIGhlYWx0aCBkZWNsaW5lZCBldmVuIGZ1cnRoZXIuIEJ5IHRoZSB0aW1lIHRoZXkgcmVhbGl6ZWQgd2hhdCB3YXMgZ29pbmcgb24sIGhlIGZlbGwgaW50byBhIGNvbWEgYXMgdGhlIGNhbmNlciBxdWlja2x5IHNwcmVhZCBpbnRvIGhpcyBicmFpbiBhbmQgcGFzc2VkIGF3YXkuIApNZSBlbGFib3JhdGUgb24gMy4gVGhlIHByb2JsZW0gd2l0aCBtb3NpbmxpbmdzIGlzIHRoZWlyIG1vdmVtZW50LiBUaGV5IGFyZSBhYmxlIHRvIHNwcmludCBhcm91bmQgZmFzdGVyIHdpdGggdmVyeSBsaXR0bGUgc3RhbWluYSByZWR1Y3Rpb24gYmVjYXVzZSB0aGV5IGFyZSBsaWdodCB3ZWlnaHQsIHBvcHBpbmcgcXVpY2sgc2hvdHMuIApUaGV5IGFyZSBjb21wbGV0ZWx5IGRpc2Nvbm5lY3RlZCBmcm9tIGFjdHVhbGx5IHVzaW5nIHRoZSBwcm9kdWN0IGFuZCBhcmUgbW9yZSBjb25jZXJuZWQgd2l0aCBmb2xsb3dpbmcgbGF0ZXN0IHRyZW5kcyBhbmQgbG9va2luZyBmbGFzaHkuIFdoZW4gaXQgY29tZXMgdG8gYWN0dWFsbHkgdXNpbmcgc29mdHdhcmUsIHV0aWxpdHkgaXMga2luZy4gRnVuY3Rpb24gb3ZlciBmb3JtLiAKQW5kIERheXMgR29uZSBsb29rcyBib3JpbmcgYW5kIHVuaW5zcGlyZWQgYnV0IEdvZCBmb3JiaWQgYW55b25lIGNyaXRpY2l6ZXMgU29ueS4gWGJveCBoYXMgaXRzIGZhdWx0cywgeWVzLCBidXQgbXkgZmF2b3JpdGUgdGhpbmcgYWJvdXQgdGhlIFhib3ggY29tbXVuaXR5IGFuZCB0aGUgcmVhc29uIHRoYXQgSSBwcmVmZXIgbXkgWGJveCBvdmVyIG15IFBsYXlTdGF0aW9uIGlzIGJlY2F1c2UgdGhleSBhcmUganVzdCBhcyBxdWljayB0byBjcml0aWNpemUgTWljcm9zb2Z0IGFzIHRoZXkgYXJlIHRvIHByYWlzZSB0aGVtIGJ1dCB0aGF0IGtpbmQgb2YgYXR0aXR1ZGUgaXMgdW5oZWFyZCBvZiBpbiB0aGUgUGxheVN0YXRpb24gY29tbXVuaXR5LiBZZXMgWGJveCBpcyBsYWNraW5nIGluIGV4Y2x1c2l2ZXMgdGhpcyBnZW4gYnV0IGl0IG1vcmUgdGhhbiBtYWtlcyB1cCBmb3IgaXQgd2l0aCB0aGUgc2VydmljZXMgdGhleSBoYXZlIGludHJvZHVjZWQgYW5kIGNvbnRpbnVlIHRvIHN1cHBvcnQgYXMgd2VsbCBhcyB0aGUgdHJhbnNwYXJlbmN5IHRoZXkgaGF2ZSB3aXRoIHRoZSBjb21tdW5pdHkgYW5kIHRoZSB3aWxsaW5nbmVzcyB0byBtYWtlIGdhbWluZyBtb3JlIGFjY2Vzc2libGUgZm9yIGV2ZXJ5b25lIG5vIG1hdHRlciB3aGVyZSBvciBob3cgeW91IHBsYXkuIApNb3N0IHBsYWNlcyBhcmUgYWxtb3N0IGlkZW50aWNhbCwgYnV0IG1heSB2YXJ5IGluIGZyYW1lIHNlbGVjdGlvbiAvIGxlbnMgc2VsZWN0aW9uLiBJZiB5b3UganVzdCBsb29raW5nIGZvciBhIGJhY2sgdXAgcGFpciBvciBhcmVuIHNldCBvbiB3aGF0IHlvdSB3YW50LCB2aXJ0dWFsbHkgZXZlcnkgc2hvcCBpcyB0aGUgc2FtZS5JbiBlbGVtZW50YXJ5ICg3dGggZ3JhZGUpLCBhIGdpcmwgcGlja2VkIG9uIG1lIGFsbCB0aGUgd2F5IGZyb20gNHRoIGdyYWRlIHRpbGwgZ3JhZHVhdGlvbi4gCllvdSBjYW4gZG8gdGhpcywgYW5kIHdlIGRvLiBJdCBjYWxsIGRlc2FsaW5hdGlvbi4gVGhlIHByb2Nlc3MgeW91IGRlc2NyaWJlIGlzIGNhbGxlZCBkaXN0aWxsYXRpb24gZGVzYWxpbmF0aW9uLCBhbmQgaGlzdG9yaWNhbGx5IHdhcyB0aGUgb25seSB3YXkgdG8gdHVybiBzYWx0IHdhdGVyIGludG8gZHJpbmtpbmcgd2F0ZXIuIApNb3JlIGltcG9ydGFudCB0aGFuIGZpbmRpbmcgdGhlIGNoZWFwZXN0IHByaWNlIGlzIGZpbmRpbmcgc29tZW9uZSB3aG8gaXMgcmVsaWFibGUuIApKZSB2YWlzIGRvbmMgbGllciBtZXMgYWN0aXZpdHMgZGUgY2hhcmcgZCdhdGVsaWVycyBhdmVjIG1vbiBibG9nLiBEYW5zIGxlcyBzZW1haW5lcyBxdWkgc3VpdmVudCwgbGVzIG5vdGVzIHB1YmxpZXMgc2Vyb250IGVzc2VudGllbGxlbWVudCBjb21wb3NlcyBkZSB0cmF2YXV4IGVmZmVjdHVzIGxvcnMgZGUgbWVzIHJlY2hlcmNoZXMgcG91ciBsYSByYWxpc2F0aW9uIGRlIG1lcyBjb3Vycy4gVm91cyByZXRyb3V2ZXJleiBkb25jIGVzc2VudGllbGxlbWVudCBkZXMgZmljaGVzIGRlIGRyb2l0IHBuYWwgb3UgZGUgcHJvY2R1cmUgcG5hbGUuCkknbSBhIHlvdW5nIGFkdWx0IGFuZCBuZWVkIG15IG93biBsaWZlLiAKVGhlIEVkbW9udG9uIG5hdGl2ZSwgd2hvIGhhcyBwbGF5ZWQgb25lIE5ITCBnYW1lLCB3YXMgYSBzZXZlbnRoIHJvdW5kIHBpY2sgaW4gMjAxMi4KUHVpcyBkZSAzICA1IGFucywgdGVuZHJlIHByb2dyZXNzaXZlbWVudCB2ZXJzIHVuIHJlc3BlY3QgZGUgc29uIGF1dG9ub21pZSBldCBkZSBzb24gaW50aW1pdCBwb3VyIGxlIHJlbmRyZSBhdXRvbm9tZSwgc2N1cmUgZXQgY29uZmlhbnQgZW50cmUgNSBldCA3IGFucy4uIApXaGVuIHdhcyBpdCBjbGVhciB3aG8gd291bGQgd2luIHdvcmxkIHdhciAyPwpJIHJlYWxseSBmZWVsIGxpa2UgdGhlIGRlYXRoIG9mIGhlciB5b3VuZ2VyIHNpc3RlciBoYXMgZWZmZWN0ZWQgaGVyIGFuZCBob3cgc2hlIGludGVyYWN0cyB3aXRoIGhlciBjaGlsZHJlbi4gSWYgc2hlIG5lZWRzIGEgbmFubnkgdG8gaGVscCBoZXIsIHRoZW4gbGV0IGhlciBoYXZlIGl0Lkl0IHRha2VzIGEgdmlsbGFnZSB0byByYWlzZSBhIGNoaWxkLCBhbmQgYXMgbXVjaCBhcyBBbWJlciBoYXMgc2NyZXdlZCB1cCBpbiB0aGUgcGFzdCwgSSBwZXJzb25hbGx5IHRoaW5rIHRoaXMgaXMgYSBnb29kLCBwcm9hY3RpdmUgc3RlcCBmb3IgaGVyLiAKVGhlIDUwIHllYXIgb2xkIGFjdG9yIGRyZXNzZWQgaW4gYSBibGFjayBnYWxhIGJhbmRoIGFuZCBkYXJrIGdsYXNzZXMgY2FsbGVkIHBva2VyIGFuICJpbnRlbGxpZ2VudCBnYW1lLCBtYXliZSBldmVuIGEgc3BvcnQgb2YgaW50ZWxsaWdlbmNlIi4KQSAyMCBtaW51dGUgbGVzc29uIHRvb2sgbWUgMzAgaG91cnMgdG8gcHJlcGFyZSBhbmQgYWxsIG1pZ2h0IGhhdmUgZ29uZSBzbW9vdGhseSB3ZXJlIGl0IG5vdCBmb3IgdGhlIGZhY3QgdGhhdCB0aGUgc2NyZWVuIHdhcyBpbnRlcmFjdGl2ZSBJIGtlcHQgaW5hZHZlcnRlbnRseSB0b3VjaGluZyBpdCwgYW5kIGxvc3QgY29udHJvbCBvZiB0aGUgc2xpZGVzIGFsdG9nZXRoZXIuIApBdCBKYWxpYW53YWxhIEJhZ2ggdGhleSBjYWxsZWQgaW4gYSBHb3JraGEgcmVnaW1lbnQgdG8gbW93IGRvd24gaHVuZHJlZHMgb2YgSGluZHUgYW5kIFNpa2ggbWVuLCB3b21lbiBhbmQgY2hpbGRyZW4uLiAKQSBuZXcgc3R1ZHkgb3V0IG9mIENhbmFkYSBzdWdnZXN0cyB0aGF0IGV4ZXJjaXNlIGN1dHMgdGhlIHJpc2sgb2YgQWx6aGVpbWVyIGFuZCBsZXNzIGRldmFzdGF0aW5nIG1lbnRhbCBsb3NzZXMsIHBhcnRpY3VsYXJseSBpbiB3b21lbi4uIApXb25kZXJzIHdoeSBEaWNrZW5zIGFiYW5kb25lZCB0aGlzIHByb2plY3QsIGV4Y2VwdCB0aGF0IHRoZXJlIHdhcyBqdXN0IG5vIHRpbWUgZm9yIGhpbSB0byBkZWRpY2F0ZSB0byBpdC4gSGlzIGJpb2dyYXBoeSBvZiBEaWNrZW5zLCBpbiB0aHJlZSB2b2x1bWVzLCB3YXMgcHVibGlzaGVkIGZyb20gMTg3MiAxODc0LiAKQnJlYWtpbmcgSW4uIEEgd2VlayBvbiBhIHRvcGxlc3MgYmVhY2ggY2FuIGRvIHdvbmRlcnMgZm9yIHlvdXIgc2VsZiBjb25zY2lvdXNuZXNzIGFib3V0IGdvaW5nIGJyYWxlc3MuIEJ1dCBpZiB5b3UncmUgbm90IHBsYW5uaW5nIGEgdHJpcCB0byB0aGUgTWVkaXRlcnJhbmVhbiBhbnl0aW1lIHNvb24sIHRyeSBzdGFydGluZyBvdXQgaW4gdGhlIHdpbnRlciB3aGVuIHlvdSdsbCBiZSB3ZWFyaW5nIGxheWVycyBhbnl3YXkuIApXZWxsIHRoYXQgaG93IEkgc2FpZCwgaXQgbWF5IGJlIGEgZ29vZCBtb2RlbCBmb3IgeW91IGJ1dCBub3QgZm9yIHRoZW0uIApOb3Qgc2F5aW5nIGl0IGEgcG9zaXRpdmUgdHJlbmQgdGhhdCBpdCB0aGUgbm9ybSwgYnV0IGl0IGEgcG9zaXRpdmUgdGhpbmcgdGhhdCB0aGV5IHdpbGxpbmcgdG8gYmUgaG9uZXN0IGFib3V0IGl0IGFuZCByZWFsbHkgZG8gd2FudCB0byBsZWFybiBhYm91dCB0aGUgdG9waWNzIHRvIGJldHRlciBlZHVjYXRlIHRoZW1zZWx2ZXMgYW5kIHRoZWlyIHVuZGVyc3RhbmRpbmcvcGVyc3BlY3RpdmUgYXJvdW5kIGh1bWFuIHNleHVhbGl0eS4uIApJIGhvcGUgeW91IGVuam95IEJlbm5pbmd0b24sIGFuZCBvdGhlciB3b25kZXJmdWwgcGxhY2VzIGluIFZlcm1vbnQuClJlZGRpdCB1CkNlcGVuZGFudCwgbGUgcHJzdW0gYWJzZW50IGVzdCBhdXNzaSBwcnN1bSB2aXZhbnQsIGRvbmMgaWwgY29udGludWUgIGRldm9pciByZW1wbGlyIHNlcyBvYmxpZ2F0aW9ucyAgbCdnYXJkIGRlIHNvbiBjb25qb2ludCBldCBkZSBzZXMgZW5mYW50cyBlbiBjZSBxdWkgY29uY2VybmUgbCdlbnRyZXRpZW4gZGUgbGEgZmFtaWxsZSBldCBsZXMgY2hhcmdlcyBkdSBtYXJpYWdlLCBsYSBybXVucmF0aW9uIGR1IHJlcHJzZW50YW50IChhcnQuIExlIHJlcHJzZW50YW50IGFzc3VyZSBlbiAgYm9uIHByZSBkZSBmYW1pbGxlICBsJ2FkbWluaXN0cmF0aW9uIGRlcyBiaWVucyBkZSBsJ2Fic2VudCwgYXZlYyBwb3NzaWJsZSByZW1wbGFjZW1lbnQgcGFyIGxlIGp1Z2UgKGFydC4gClllcywgdGhlcmUgYSBncmVhdCBtaXggb2YgcGFjZXMgZnJvbSAzaHIgZm9sa3MgYWxsIHRoZSB3YXkgdG8gNStydW4vd2FsayBncm91cHMuIEkgd2FzIGluIG9uZSBvZiB0aGUgc2xvd2VzdCBydW4gZ3JvdXBzIGxhc3QgZmFsbCAoYW5kIHdhcyB1c3VhbGx5IHRoZSBvbmx5IGd1eSBpbiBteSBncm91cCkuIEkgZm91bmQgdGhhdCBiZWluZyBwdXQgaW50byBhIHBhY2luZyBncm91cCAoYmFzZWQgb24gcmVjZW50IHJhY2UgcmVzdWx0cykgaGVscGVkIG1lIHdpdGggcGFjaW5nIGlzc3VlcyBhIGxvdC4gSW5zdGVhZCBvZiBnb2luZyBhbGwgb3V0IGV2ZXJ5IHJ1biwgSSBrZWVwIHRvIHRoZSBwbGFuIHdpdGggdGhlIHBhY2VycyB3aG8gYXJlIGV4cGVyaWVuY2VkLiBHb2luZyBieSB5b3VyIHRpbWUgaW4gSG90IENob2NvbGF0ZSwgdGhlcmUgZGVmaW5pdGVseSBhIGdyb3VwIGZvciB5b3UuCkkgd2VudCB0byBKYXBhbiBhbmQgaGFkIHRvIHRhbGsgdG8gcGVvcGxlIGFuZCBsb29rIHVwIGluZm9ybWF0aW9uIGFuZCB0YWtlIGNsYXNzZXMgaW4gRW5nbGlzaC4gClBvcHMgZ2VubmllcyB0byBkaXN0cmFjdCBmb3IgcmVzY3VlcyBhbmQgZ2VubnkgY2Fwcy4gCkV2ZW4gd2l0aCBjb21wbGV0ZSBrbm93bGVkZ2Ugb2YgaG93IGV2ZXJ5b25lIHdhbnRzIHRvIHZvdGUsIGl0IGlzIHZlcnkgaGFyZCB0byBjbyBvcmRpbmF0ZSBzdWNoIGEgY2FtcGFpZ24gdG8gc2hpZnQgdm90ZXMgaW4gc3VjaCBhIGNvbXBsaWNhdGVkIHdheS4gCldhcyBpdCBvdmVyIHRoZSBHRk0gb3IgdGhlIHZpc2EgYmVpbmcgcG9zdGVkPyBJIGtlcHQgc2VlaW5nIHBlb3BsZSBzYXkgdGhlIHZpc2EsIGJ1dCBJIHN1c3BlY3QgaXQgYW5vdGhlciBHRk0uIElmIHRoYXQgdGhlIGNhc2UsIHBlb3BsZSBzaG91bGQgZGlyZWN0IGFueSBuZWdhdGl2aXR5IGF0IEtyZWVueS4gClRoZWlyIG11c2NsZXMgYXJlIHN0cm9uZ2VyLCB0aGVpciBzb2Z0IHRpc3N1ZXMgYW5kIGpvaW50IHN1cmZhY2VzIGNhbiBkZWFsIHdpdGggZ3JlYXRlciBsb2FkcywgZXRjLi4gClNxdWF0cyBvbiB0aGUgb3RoZXIgaGFuZCwgaGFzIGJlZW4gdGhlIHNhbWUgYXQgYXJvdW5kIDE0NWtnIGZvciB0aGUgcGFzdCAyIHllYXJzLiBNZWRpb2NyZSBpbiBldmVyeSBzZW5zZSBJIGd1ZXNzLiBIYWhhLiAyIHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvCjEwLCAyMDE5LktpZHMgYWxzbyByZWxpc2hlZCB0aGUgY2FuZGllcyBpbnNpZGUgdGhlIHJlZCBlbnZlbG9wZXMgaGFuZGVkIG91dCBieSBkaWduaXRhcmllcywgcG9saXRpY2lhbnMgYW5kIFZhbmNvdXZlciBQb2xpY2UgQ2hpZWYgQWRhbSBQYWxtZXIuaXMgb25lIG9mIHRoZSBtb3N0IGRpdmVyc2UgY2l0aWVzIGluIHRoZSB3b3JsZCBhbmQgdGhlIFZhbmNvdXZlciBQb2xpY2UgRGVwYXJ0bWVudCBpcyBzbyBkaXZlcnNlLCB0b28sIHRoZSBjaGllZiBzYWlkLiBFbmdhZ2VtZW50IGlzIGEgYmlnIHBhcnQgb2Ygd2hhdCB3ZSBkby53ZSB0YWtlIG91ciB1bmlmb3JtcyBvZmYsIHdlIGp1c3QgbGlrZSBldmVyeW9uZSBlbHNlLiAKQXBwcmVuZXogIHN1aXZyZSBsb3JzIGR1IHByIGZsb3AuIElsIHMnYWdpdCBkdSB0b3VyIGQnZW5jaHJlcyBxdWkgYSBsaWV1IGF2YW50IHF1ZSBsZSBkb25uZXVyIHBvc2UgbGVzIHRyb2lzIGNhcnRlcyBjb21tdW5lcyBkdSBmbG9wIHN1ciBsYSB0YWJsZS4gCldhbGsgb3ZlciwgdGFrZSBhIGxvb2sgcHVzaGVkIHRoZSBtYWluIHBvd2VyIGJhY2sgb24sIGZpcmVkIGl0IHVwIGFuZCB3ZW50IHRvIGxlYXZlLiAKTGVzIG15c3RpcXVlcyBldCBsZXMgc2FnZXMgc2F2ZW50IGRlcHVpcyBsb25ndGVtcHMgcXUnaWwgZXhpc3RlIHVuIGNoYW1wIGNvc21pcXVlIHJlbGlhbnQgdG91dCAgdG91dCBhdSBwbHVzIHByb2ZvbmQgZGUgbGEgcmFsaXQsIHVuIGNoYW1wIHF1aSBjb25zZXJ2ZSBldCB0cmFuc21ldCBsJ2luZm9ybWF0aW9uLiBDZSBjaGFtcCBlc3QgY29ubnUgc291cyBsZSBub20gZGUgIGNoYW1wIGFrYXNoaXF1ZSAuIApJIHdhcyByZWxpZXZlZCBteSBsZWdzIHdlcmUgc3RpbGwgd29ya2luZy4gCklmIGFwcGxpY2FibGUsIHBsZWFzZSBhZGQgYXBwcm9wcmlhdGUgZmxhaXIuIFRoZXJlIGlzIGZsYWlyIGZvciBhbGwgZmVkZXJhbCBhcHBlYWxzIGNvdXJ0cyBhbmQgZm9yIHRoZSBzcGVjaWZpYyBKdXN0aWNlcy4gCiJJJ3ZlIG5ldmVyIGhhZCBhbnkgY29udmVyc2F0aW9ucyB3aXRoIGFueWJvZHkgYWJvdXQgdGhhdCBhdCBhbGwuIEl0IHdvdWxkIGJlIHdyb25nIGZvciBtZSB0byBydW4gaWYgSSBpbnRlbmRlZCB0byBkbyB0aGF0IHdpdGhvdXQgdGVsbGluZyBwZW9wbGUuIkNhbGVuZGFyIDkgU2F0MTAgU3VuMTEgTW9uMTIgVHVlMTMgV2VkIE1hbmlsb3cgTGFzIFZlZ2FzOiBUaGUgSGl0cyBDb21lIEhvbWUhIFdlc3RnYXRlIExhcyBWZWdhcyBDYXNpbm8uIAoiTyBlc3QgYWxsIERpZXUgPyIgcydjcmlhIHQgaWwsICJqZSB2ZXV4IHZvdXMgbGUgZGlyZSAhIE5vdXMgbCdhdm9ucyB0dSwgICB2b3VzIGV0IG1vaSAhIE5vdXMgdG91cywgbm91cyBzb21tZXMgc2VzIGFzc2Fzc2lucyAhIE1haXMgY29tbWVudCBhdm9ucyBub3VzIGZhaXQgY2VsYSA/IENvbW1lbnQgYXZvbnMgbm91cyBwdSB2aWRlciBsYSBtZXIgPyBRdWkgbm91cyBhIGRvbm4gbCdwb25nZSBwb3VyIGVmZmFjZXIgbCdob3Jpem9uID8gUXUnYXZvbnMgbm91cyBmYWl0IGxvcnNxdWUgbm91cyBhdm9ucyBkdGFjaCBjZXR0ZSB0ZXJyZSBkZSBsYSBjaGFuZSBkZSBzb24gc29sZWlsID8gTyBsYSBjb25kdWlzZW50IG1haW50ZW5hbnQgc2VzIG1vdXZlbWVudHMgPyBPIGxhIGNvbmR1aXNlbnQgbm9zIG1vdXZlbWVudHMgPyBMb2luIGRlIHRvdXMgbGVzIHNvbGVpbHMgPyBOZSB0b21ib25zIG5vdXMgcGFzIHNhbnMgY2Vzc2UgPyBFbiBhdmFudCwgZW4gYXJyaXJlLCBkZSBjdCwgZGUgdG91cyBsZXMgY3RzID8gWSBhIHQgaWwgZW5jb3JlIHVuIGVuIGhhdXQgZXQgdW4gZW4gYmFzID8gTidlcnJvbnMgbm91cyBwYXMgY29tbWUgIHRyYXZlcnMgdW4gbmFudCBpbmZpbmkgPyBMZSB2aWRlIG5lIG5vdXMgcG91cnN1aXQgaWwgcGFzIGRlIHNvbiBoYWxlaW5lID8gTmUgZmFpdCBpbCBwYXMgcGx1cyBmcm9pZCA/IE5lIHZveWV6IHZvdXMgcGFzIHNhbnMgY2Vzc2UgdmVuaXIgbGEgbnVpdCwgcGx1cyBkZSBudWl0ID8gTmUgZmF1dCBpbCBwYXMgYWxsdW1lciBsZXMgbGFudGVybmVzIGF2YW50IG1pZGkgPyBOJ2VudGVuZG9ucyBub3VzIHJpZW4gZW5jb3JlIGR1IGJydWl0IGRlcyBmb3Nzb3lldXJzIHF1aSBlbnRlcnJlbnQgRGlldSA/IE5lIHNlbnRvbnMgbm91cyByaWVuIGVuY29yZSBkZSBsYSBkY29tcG9zaXRpb24gZGl2aW5lID8gICBsZXMgZGlldXgsIGV1eCBhdXNzaSwgc2UgZGNvbXBvc2VudCAhIERpZXUgZXN0IG1vcnQgISBEaWV1IHJlc3RlIG1vcnQgISBFdCBjJ2VzdCBub3VzIHF1aSBsJ2F2b25zIHR1ICEgQ29tbWVudCBub3VzIGNvbnNvbGVyb25zIG5vdXMsIG5vdXMsIGxlcyBtZXVydHJpZXJzIGRlcyBtZXVydHJpZXJzID8gQ2UgcXVlIGxlIG1vbmRlIGEgcG9zc2QganVzcXUnIHByc2VudCBkZSBwbHVzIHNhY3IgZXQgZGUgcGx1cyBwdWlzc2FudCBhIHBlcmR1IHNvbiBzYW5nIHNvdXMgbm90cmUgY291dGVhdSAgIHF1aSBlZmZhY2VyYSBkZSBub3VzIGNlIHNhbmcgPyBBdmVjIHF1ZWxsZSBlYXUgcG91cnJvbnMgbm91cyBub3VzIHB1cmlmaWVyID8gUXVlbGxlcyBleHBpYXRpb25zLCBxdWVscyBqZXV4IHNhY3JzIHNlcm9ucyBub3VzIGZvcmNzIGQnaW52ZW50ZXIgPyBMYSBncmFuZGV1ciBkZSBjZXQgYWN0ZSBuJ2VzdCBlbGxlIHBhcyB0cm9wIGdyYW5kZSBwb3VyIG5vdXMgPyBOZSBzb21tZXMgbm91cyBwYXMgZm9yY3MgZGUgZGV2ZW5pciBub3VzIG1tZXMgZGVzIGRpZXV4IHBvdXIgZHUgbW9pbnMgcGFyYXRyZSBkaWduZXMgZGVzIGRpZXV4ID8gSWwgbid5IGV1dCBqYW1haXMgYWN0aW9uIHBsdXMgZ3JhbmRpb3NlLCBldCBjZXV4IHF1aSBwb3Vycm9udCBuYXRyZSBhcHJzIG5vdXMgYXBwYXJ0aWVuZHJvbnQsICBjYXVzZSBkZSBjZXR0ZSBhY3Rpb24sICB1bmUgaGlzdG9pcmUgcGx1cyBoYXV0ZSBxdWUgbmUgZnV0IGphbWFpcyB0b3V0ZSBoaXN0b2lyZS4iICAgSWNpIGwnaW5zZW5zIHNlIHR1dCBldCByZWdhcmRhIGRlIG5vdXZlYXUgc2VzIGF1ZGl0ZXVycyA6IGV1eCBhdXNzaSBzZSB0dXJlbnQgZXQgbGUgZHZpc2FncmVudCBhdmVjIHRvbm5lbWVudC4gCkJyYWhtYSBubyBlcyB1biBpbmRpdmlkdW8sIHNpbm8gbGEgZm9ybWEgbm8gbWFuaWZpZXN0YSBkZWwgU2VvciBEaXZpbm8sIGRlIHF1aWVuIHByb2NlZGUgdG9kbyBlbCBtdW5kbyBldmlkZW50ZS4gCkFkcmlhbiBzaXRzIHVwLCBhbmQgZXZlbiB0aG91Z2ggd2UgdGhvdWdodCBoZSBnb3Qgc2hvdCBpbiB0aGUgc2hvdWxkZXIsIGl0IHR1cm5zIG91dCBoZSBqdXN0IGdvdCBjcmVhc2VkIGluIHRoZSBmb3JlaGVhZCwgd2hpY2ggd291bGQgbG9vayByZWFsbHkgbmFzdHksIGlmIGl0IGxvb2tlZCBhIGxpdHRsZSBsZXNzIGxpa2UgUml0IGR5ZSBtYWRlIGludG8gYSBwYXN0ZSBhbmQgc21lYXJlZCBvbiBoaXMgZmFjZS4gRXZlcnlvbmUgZ29lcyB0byB0aGUgaG9zcGl0YWwsIGFuZCBzb21laG93IEhvb2tlciBpcyB0aGUgb25seSBvbmUgd2l0aCBhIGJhbmRhZ2Ugb24sIG9uIGhpcyBoYW5kLiAKVGhlc2UgZml2ZSB2aXRhbWlucyBhcmUgd2F0ZXIgc29sdWJsZSBCIGNvbXBsZXggdml0YW1pbnMgdGhhdCBwbGF5IHZpdGFsIHJvbGVzIGluIGhlYWx0aHkgc2tpbiBhbmQgdmlzaW9uLCBob3Jtb25lIGFuZCByZWQgYmxvb2QgY2VsbCBmb3JtYXRpb24sIGFuZCBjZW50cmFsIG5lcnZvdXMgc3lzdGVtIGFuZCBtZXRhYm9saWMgZnVuY3Rpb24uIApUaGlzIGlzIHNvbWV0aGluZyB0aGF0IHRoZXkgYXJlIGN1cnJlbnRseSB3b3JraW5nIG9uLi4gClNvbWUgc3VpdGVzIGhhdmUgbGl2ZSBlZGdlIGRpbmluZyB0YWJsZXMgbWFkZSBmcm9tIGEgdHJlZSB0aGF0IGhhZCBzdG9vZCBvbiBuZWFyYnkgQmxpc3MgU3RyZWV0LiBEZWNvcmF0aXZlIG9kZGl0aWVzLCBmcm9tIHNtYWxsIGFuaW1hbCBza3VsbHMgdG8gYmlnIGJyYXNzIGtleXMsIHNpdCB1bmRlciBnbGFzcyBkb21lcy4gVGhlIGZlZWwgaXMgYSBsaXR0bGUgbGlrZSBhIHdpemFyZCB3b3Jrc2hvcCwgYW5kIHdoZXRoZXIgeW91IGxpa2UgdGhhdCBzb3J0IG9mIHRoaW5nIG9yIG5vdCwgaXQgdW51c3VhbCBhbmQgZnJlc2ggZm9yIHRoZSBjYXNpbm8gaW5kdXN0cnkuIFNldXNzLiBQaWxsb3dzIGFuZCBjYXJwZXRzIGZlYXR1cmUgcXVvdGVzIGZyb20gRW1pbHkgRGlja2luc29uLCB0aGUgMTl0aCBjZW50dXJ5IEFtaGVyc3QgcG9ldCB3aG8gcHVibGlzaGVkIHdvcmsgaW4gdGhlIFNwcmluZ2ZpZWxkIFJlcHVibGljYW4gbmV3c3BhcGVyLiBCZSBpdHMgUGlsbG93IHJvdW5kLiBTVEVQIGxpZ2h0bHkgb24gdGhpcyBuYXJyb3cgc3BvdCEgV2lsbCB0aGVyZSByZWFsbHkgYmUgYSBNb3JuaW5nPwpTcXVhcmUgZmVldCBvZiBvdXRkb29yIHMgYW5kIDUuMSAgc3F1YXJlIGZlZXQgb2YgaW5kb29yIHNwYWNlIG91dHNpZGUgb2YgICB3aXRoIGluZG9vciBzIGNvbnRpbnVlIHRvIHBlcmZvcm0gYmV0dGVyIHRoYW4gaG90ZWxzd2l0aG91dCBpbmRvb3IgcyAgIGVzcGVjaWFsbHkgaW4gYSB0b3VnaCBlY29ub215LiBSZWdpb25hbGRyaXZlIHRvIHMgYXJlIHNlZWluZyBtb3JlIHZpc2l0b3JzIHRoYW4gdGhlIG5hdGlvbmFsIGZseSB0b3MuIEFuZCBvdXRkb29yIHBhcmsgb3duZXJzIGhhdmUgZGlzY292ZXJlZCB0aGF0IGhhdmluZyBhIGhvdGVsIG9ucHJvdmlkZXMgZmFtaWxpZXMgd2l0aCBhIHJlYXNvbiB0byBzdGF5IGxvbmdlciBhbmQgc3BlbmQgbW9yZSBtb25leS4gCkl0IHJlcXVpcmVzIHRoZSBzYW1lIHNraWxscyBhbmQgdGhlIGZpbmdlcmluZ3MgYXJlbid0IHRoYXQgZGlmZmVyZW50LiAKU3BlYWtpbmcgb2YgSmVzc2llLCBzaGUgYmVlbiBzdGVhZGlseSB3b3JraW5nIGhlciB3YXkgdXAgdGhlIHJhbmtpbmdzLiAKRG9uJ3QgbWl4IHBvc2l0aXZlIGFuZCBuZWdhdGl2ZSBmZWVkYmFjay4gU2F5IHlvdSdyZSBnaXZpbmcgeW91ciBlbXBsb3llZSBmZWVkYmFjayBpbiBhIHBlcmZvcm1hbmNlIHJldmlldy4gWW91IHN0YXJ0IG9mZiBieSBtZW50aW9uaW5nIGhvdyBncmVhdCB0aGUgZW1wbG95ZWUgaXMgdG8gd29yayB3aXRoLCBhbmQgbm90ZSBvbmUgb3IgdHdvIGFkZGl0aW9uYWwgdGhpbmdzIHRoZXkndmUgZXhjZWxsZWQgYXQuIApQb2tlciBjb2RlIHdpbGwgYmUgcHJvdmlkZWQgdG8gYSB1c2VyIHRvIGdldCB0aGUgYW5ub3VuY2VkIGZyZWUgY3JlZGl0IGludG8gdGhlaXIgYWNjb3VudC4gVGhlIGdlbmVyYWwgcnVsZSB0byBnZXQgY3JlZGl0IGlzIHJlZ2lzdGVyaW5nIHRvIHNpdCB3aXRoIGFwcHJvcHJpYXRlIGZlZXMgYW5kIHNlbGVjdGluZyB0aGUgcGFja2FnZS4uIApBbmQgTXJzLiBFbG1lciBCZW5uZXR0LCB3aG8gaGFkIGJlZW4gUGVpZmZlciwgTXJzLiBJdmFuIENhcmJhdWdoIGFuZCBpcyBpbXByb3ZpbmcuIApBbHRlcm5hdGl2ZWx5LCBjb250YWN0IHlvdXIgbG9jYWwgU21hbGwgQnVzaW5lc3MgQWRtaW5pc3RyYXRpb24gb2ZmaWNlIGFib3V0IGEgc21hbGwgYnVzaW5lc3MgbG9hbiAoc2VlIFJlc291cmNlcykuLiAKU28sIHRoZSBvbmx5IGNvbnRyb2wgdGhhdCB0aGUgcGxheWVyIGhhcyBpcyB0byBiZSBpbiBjaGFyZ2Ugb2YgaG93IG11Y2ggbW9uZXkgd2lsbCBiZSBvbiB0aGUgcG90LCBiYXNlZCBvbiB0aGUgaGFuZCB3aGljaCB0aGUgcGxheWVyIGhvbGRzLi4gCkkgd2VudCB0byBzdW1tZXIgY2FtcCB3aXRoIEdyYW50IE1hcmdvbGluIGZvciA3IHllYXJzLiBJIHdpbGwgYW5zd2VyIGFueSBvZiB5b3VyIHF1ZXN0aW9ucy4gSGUgc2VlbXMgbW9yZSBkZWx1c2lvbmFsLCBuZXVyb3RpYyBhbmQgc2l0dWF0aW9uYWxseSBhbmQgc29jaWFsbHkgdW5hd2FyZSB0aGFuIEkgdGhvdWdodC4gClRoZSBzY293bHMgSSdkIGdldCB3YWxraW5nIGRvd24gdGhlIHN0cmVldCwganVzdCBiZWNhdXNlIEkgd2FzIHlvdW5nLiBQZW9wbGUgdXNlZCB0byB5ZWxsIGF0IG1lIGFsbCB0aGUgdGltZSBiZWNhdXNlIG15IG11c2ljIHdhcyB0b28gbG91ZCBpbiBteSBoZWFkcGhvbmVzLiBMaWtlIHJlYWxseSBsYWR5PyBJbiB0aGUgU3RhcmJ1Y2tzIGxpbmV1cD8gSSdtIHNvcnJ5IGZvciBkaXN0dXJiaW5nIHdoYXQgaXMgdXN1YWxseSBzdWNoIGEgcXVpZXQgYW5kIHRyYW5xdWlsIHBsYWNlLgpQYXVsLiAKQXMgcGFydCBvZiB0aGUgY29uZGl0aW9ucyBvZiBoZXIgYmFpbCwgWm9pYSBtdXN0IGxpdmUgd2l0aCBoZXIgbW90aGVyIGFuZCBoYXZlIG5vIGNvbnRhY3Qgd2l0aCBmb3VyIG90aGVyIHBhcnRpZXMgbmFtZWQgaW4gdGhlIGluY2lkZW50LgpUcnkgdG8gZ2V0IHRoZSBvd25lciB0byB0aHJvdyBpbiB0aGUgQmVudGxleSBtYW51YWwgaWYgdGhleSBoYXZlIGl0LiAKQXMgZmFyIGFzIHJvdGF0aW9uIGdvZXMgc25vdyBjcm93cyBhbmQgZGlzY3JldGl6ZSBzaG91bGQgYmUgYWJsZSB0byBoZWxwLi4gClRoZSByZWNpcGllbnQgb2YgdGhpcyBlZmZvcnQgd2FzIHRoZSBNY1ZpY2tlcnMgQnVpbGRpbmcgaW4gQ2hpY2FnbywgYSB0aGVhdGVyIHRoYXQgb3BlbmVkIGluIDE4NTcgYW5kIGNhbWUgdG8gaXQgc2xvdyBlbmQgaW4gMTkyMi4gSXQgbG9va3MgbGlrZSB0aGUgbGFzdCBiaXQgb2YgY3VycmVuY3kgd2FzIHNxdWVlemVkIG91dCBvZiB0aGlzIG9sZCBidWlsZGluZywgcGVyZm9ybWFuY2VzIGJlaW5nIGdpdmVuIHJpZ2h0IHRvIHRoZSB2ZXJ5IGVuZCB3aGlsZSBmb3VuZGF0aW9ucyBmb3IgdGhlIG5ldyBidWlsZGluZyB3ZXJlIGJlaW5nIGNvbnN0cnVjdGVkIDI0IGhvdXJzIGEgZGF5LiAKUGVyc29uYWxseSBpdCBzb21lIHByZXR0eSBncmVhdCBpbXBvcnRhbmNlIHRvIHlvdXIgcGh5c2ljYWwgZml0bmVzcyBhbmQgYSBoZWFsdGh5IGxpZmVzdHlsZS4gSSBhbSAyNiB5ZWFycyBvbGQgYW5kIDcgeWVhcnMgYnkgdHJhaW5pbmcgY2FyZSBhYm91dCBpdHMgZm9ybSAsIHRoZXJlZm9yZSBJIHNlcnZlIHdpdGggdGhlIGlzc3VlcyBvZiBwaHlzaWNhbCBleGVyY2lzZSBhbmQgbnV0cml0aW9uYWwgYWR2aWNlIC4gTWFzc2FnZSBjb21iaW5lZCB3aXRoIGEgZGlldCBhbmQgYXMgc3lzdGVtYXRpYyB0cmFpbmluZyBjYW4gY2hhbmdlIHRoZSBwZXJjZXB0aW9uIG9mIHlvdXIgYm9keS4gCkkgYWxzbyBoYXBweSB0byBjaGF0IG1vcmUgaWYgeW91IGxpa2UuIApUaGVzZSBwcm9iYWJseSBvdXRzb2xkIG5ldyBydW5zIHdpdGggdGhlIGNvcnJlY3QgZGF0ZS4gClRoZXJlIGFyZSAzIG1haW4gc29ydHMgb2Ygc2tpbiBjYW5jZXIsIHNxdWFtb3VzIGNlbGwgY2FyY2lub21hIChjYXJjaW5vbWEgaXMgYSB0eXBlIG9mIGNhbmNlciksIGJhc2FsIGNlbGwgY2FyY2lub21hLCBhbmQgbWFsaWduYW50IG1lbGFub21hLgpHb3JlICAgbWFkZSBtaWxsaW9ucyBmb29saW5nIHN0dXBpZCBwZW9wbGUgICBhd2FyZGVkIHRoZSBwZWFjZSBwcml6ZQpUaGVyZSBoYXZlIGJlZW4gaW5kZXBlbmRlbmNlIGZpZ2h0ZXJzLCBkZW1vbnN0cmF0aW9ucywgZXRjLiAKQWxzbywgSSB0aGluayB5b3UgbWF5IGJlIGNvbmZ1c2VkLgoxOTgyKS5IZSB3b3JrZWQgaW4gdGhlIGZpcm0gSHVudG9uIFdpbGxpYW1zLiBUaGUgcGFydG5lciBvZiB0aGF0IGZpcm0gaXMgbm93IEFzc2lzdGFudCBBZG1pbmlzdHJhdG9yIGFwcG9pbnRlZCB0byB0aGUgRVBBLiBQcm9iYWJseSBkaWRuIHdvcmsgYXQgdGhlIGZpcm0gYXQgdGhlIHNhbWUgdGltZSwgYnV0IHRoZSBjb25uZWN0aW9uIGlzIHRoZXJlLlJvYmVydCBSLiAKTG9jYWwgTWF5YXMgd2VyZSB2ZXJ5IHBlYWNlZnVsIGFuZCB3ZWxjb21pbmcuIEl0IGJlYXV0aWZ1bCBhbmQgaW50ZXJuYXRpb25hbCBzcG90IHdpdGggYSBib2hlbWlhbiB2aWJlIGFuZCBleGNlbGxlbnQgZm9vZC4gV2Ugd2FudGVkIHRvIG9mZmVyIGZ1bGwgaG9tZXMgc28gZmFtaWxpZXMgYW5kIGdyb3VwcyBjb3VsZCBzdGF5IHRvZ2V0aGVyLCBzaGUgc2F5cyBvZiBoZXIgcGFydG5lcnNoaXAgaW4gWm9yYmEuClRpY2tldHMgaW5jbHVkZSBhbiBhcnJheSBvZiBjbGFzc2ljIFZhbGVudGluZSdzIERheSBnaWZ0cywgbGlrZSBmbG93ZXJzLCBjaG9jb2xhdGUsIGFuZCBhIGtlZXBzYWtlIHBob3RvLiAKTm90IHRoYXQgdGhlIGF1ZGllbmNlIGl0c2VsZiBsYWNrZWQgYW55IHN0YXIgcG93ZXIuIApUUkVCLCB3aGljaCByZXByZXNlbnRzIG1vcmUgdGhhbiA1MiwwMDAgcmVhbCBlc3RhdGUgYWdlbnRzIGFjcm9zcyB0aGUgcmVnaW9uLCBzYXlzIHRoZSBKYW51YXJ5IGZpZ3VyZXMgYXJlIGluIGxpbmUgd2l0aCBpdHMgZm9yZWNhc3QgdGhhdCBzYWxlcyB3aWxsIGZpbmlzaCBoaWdoZXIgaW4gMjAxOS4KWW91IHdpbGwgYWxzbyBsZWFybiBob3cgdG8gaW50aW1pZGF0ZSB5b3VyIGNvbXBldGl0b3JzIHdpdGggdmFyaW91cyBmbG9wIG1vdmVzIGFuZCBzcGVjaWZpYyBiZXR0aW5nIHN0cmF0ZWdpZXMuIApBbG9uZyB3aXRoIE1pcmFuZGEgdGhyZWUgc29ucywgdGhlIG5ldyBjb3VwbGUgaGVhZHMgZm9yIFdlc3QgVmlyZ2luaWEgd2hlcmUgSm9kaSByZW1lbWJlcnMgdGhlIGFpciBhcm91bmQgaGVyIGhhZCBmZWx0IHJpZ2h0LiAKQ291cGxlIHdlZWtzIGxhdGVyIEkgb3ZlcmhlYXIgc29tZSBvdGhlciBwZW9wbGUgaW4gdGhlIGd5bSBtZW50aW9uIG9mZiBoYW5kIGluIGNvbnZlcnNhdGlvbiBob3cgdGhlcmUgT05FIGJhciBpbiB0aGUgZ3ltIHRoYXQgaXMgc3Vic3RhbnRpYWxseSBsaWdodGVyIHRoYW4gYWxsIHRoZSBvdGhlcnMgYW5kIGl0IGNsaWNrcyBsb2wuIEkgYnJva2UgdGhyb3VnaCBhIHBsYXRlYXUgYmVjYXVzZSBteSBkdW1iIGFzcyBkaWRuIG5vdGljZSBhIGxpZ2h0ZXIgYmFyIG9uZSB3ZWVrIGFuZCBteSBmYWtlIFBSIGJlY2FtZSBteSByZWFsIFBSIHdpdGhvdXQgZXZlbiBiZWluZyBhd2FyZSBvZiBpdC4uIApObyBuZWVkIHRvIGxhYmVsIHNvY2lldHkgYmVjYXVzZSBzb21lIHBlb3BsZSBzYXkgdGhpbmdzIGxpa2UgdGhhdC4gCkl0IHNvdW5kcyBsaWtlIHlvdSBhcmUgdW5kZXIgcm9sbGVkIGZvciB0aGUgZ2FtZSBhdCB0aGUgY2FzaW5vLiBJZiB5b3UgYXJlIHVuYWJsZSB0byBjb250cmlidXRlIHRvIGEgcG9rZXIgYmFua3JvbGwgYnkgeW91ciBub3JtYWwgam9iLCB0aGVuIHRoZSBiZXN0IHN0cmF0ZWd5IGlzIHRvIHBsYXkgbWljcm9zdGFrZXMuIElmIHlvdSBjYW4gbWFrZSBjb250cmlidXRpb25zIHRvIHlvdXIgcG9rZXIgYmFua3JvbGwgYnkgeW91ciBub3JtYWwgam9iLCB0aGVuIHNhdmUgdXAgNSAxMCBidXlpbnMgYW5kIHBsYXkgYW4gQUJDIHBva2VyIHN0cmF0ZWd5LiAKT3ZlcnZpZXcgZm9yIFRoZUxvbmVseVNhbXVyYWkKSSB0aGluayB0aGUgdGhpbmcgdGhhdCBodXJ0cyBpcyB0aGF0IEkgZmVlbCBsaWtlIEkgZGlkIGFsbCBvZiB0aG9zZSB0aGluZ3MuIFdoZW5ldmVyIHNoZSBoYWQgYSBiYWQgZGF5LCBzaGUgY2FsbCBtZSByaWdodCBhd2F5IGFuZCBJIGxpc3RlbiBmb3IgaG91cnMuIFRvIHNlZSBoZXIsIEkgaGFkIHRvIGRyaXZlIDQ1IG1pbnV0ZXMgYW5kIEkgbWFkZSB0aGF0IGRyaXZlIGV2ZXJ5IHRpbWUuIApMb3RlY2ggIDcgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpNYXNzYWdlIHRoZXJhcHkgZm9yIGZpYnJvbXlhbGdpYSBzeW1wdG9tcwoiSWYgeW91IGtub3cgdGhlIG9sZCAnU3RyZWV0IExlZ2FsLCcgdGhlcmUgd2lsbCBiZSBoaWRkZW4gcGxlYXN1cmVzIHRoYXQgeW91J2xsIGdldCBtb3JlIHRoYW4gb3RoZXIgcGVvcGxlLiBCdXQgaXQncyBub3QgcmVxdWlyZWQgYXQgYWxsLCIgc2FpZCByZXR1cm5pbmcgZXhlY3V0aXZlIHByb2R1Y2VyIEJydWNlIFNtaXRoLCB3aG8gaXMgYWxzbyB0aGUgc2hvd3J1bm5lci4KTXVza2Vnb24ncyBOaWMgTWFuaW9uIGFuZCBTaGVsYnkgVG93bnNoaXAncyBKb2UgQ2FkYWFyZSBhbW9uZyBuaW5lIG1lbiBsZWZ0IGF0IHRoZSBhbm51YWwgcGlubmFjbGUgb2YgcG9rZXIgYmVpbmcgaGVsZCBhdCB0aGUgUmlvIEFsbCBTdWl0ZSBIb3RlbCBhbmQgQ2FzaW5vIGluIExhcyBWZWdhcy4KSXQgc2hlZHMgYSBkaWZmZXJlbnQgbGlnaHQgb24gaGVyIGJlaGF2aW9yIGluIHRoZSBwcmV2aW91cyBlcGlzb2RlIHdoZXJlIHNoZSB3YXMgb2JzZXNzaXZlbHkgYXNraW5nIElkaW5hIGhvdyBtYW55IHdvbWVuIHNoZSBzbGVwdCB3aXRoLiBIb25lc3RseSBubyBpZGVhIHdoZXJlIHRoaXMgZ29lcyBmb3IgdGhlbSBidXQgSSBkb24ndCB0aGluayB0aGVpciByZWxhdGlvbnNoaXBzIGxhc3RzIGFzIGlzIGFmdGVyIHRoaXMgc2Vhc29uLi4gClVDTEEgUmVjcmVhdGlvbiBpcyBjb21taXR0ZWQgdG8gcHJvdmlkaW5nIGhpZ2ggcXVhbGl0eSByZWNyZWF0aW9uYWwgZXhwZXJpZW5jZXMgdGhhdCBiZW5lZml0IHRoZSBjYW1wdXMgY29tbXVuaXR5LgpObyBpbXBvcnRhIG8gcXVvIGRlZGljYWRhIG9zIGRvaXMgc28gcGFyYSBvIGNhc2FtZW50byByZWFsLCBkZXBvaXMgZGUgdW0gY2Fzbywgdm9jIHBvZGUgZXN0YXIgdGVuZG8gdW0gdGVtcG8gZGlmY2lsIGNvbmZpYXIgZW0gc2V1IG1hcmlkbyBvdSBlc3Bvc2Egc2UgaW5kaWNhciB1bWEgY2VydGEgY29pc2EuIApIZSBhIG1hbiB3aG8gaGFzIGxpdmVkIGFuZCB5ZXQgd2hvIGhhcyBub3QgbGl2ZWQgYW5kIGFsbCBvZiBhIHN1ZGRlbiB0aGlzIGNoYW5jZSB0byBmdWxmaWwgaGlzIGxpZmUgYmVmb3JlIGhlIGRpZXMgcHJlc2VudHMgaXRzZWxmLiAKSGF5IEZldmVyIE1heSBIYXZlIEhpZ2hlciBSaXNrIG9mIFBzeWNoaWF0cmljIERpc29yZGVycwpJIGRpZCBteSB0ZXN0aW5nIGFuZCBjb250cmFyeSB0byBmYW1pbHkgbGVnZW5kLCB3ZSBkbyBub3QgaGF2ZSBhbnkgTmF0aXZlIEFtZXJpY2FuIGhlcml0YWdlLiBUaGV5IGFsd2F5cyB0aG91Z2h0IHRoZXkgaGFkIHNvbWUgYW5kIGFwcGxpZWQgZm9yIHNjaG9sYXJzaGlwcyBzdGF0aW5nIHRoYXQuIE5vcGUuMTAwJSBsaWx5IHdoaXRlIEJyaXQvSXJpc2gvU2NvdHRpc2ggd2l0aCBhIHRlZW5zeSBzcGxhc2ggb2YgU2NhbmRpbmF2aWFuLgpTaGUgaGFkIGEgbG9vayBvZiByZWxpZWYgb24gaGVyIGZhY2UgdGhhdCB3aGF0ZXZlciBzaGUgd2FzIGdvaW5nIHRocm91Z2ggd2FzIGdvaW5nIHRvIGJlIG9rIGFuZCBpdCBtYWRlIG1lIHZlcnkgaGFwcHkuLiAKWW91IGFyZSBsaWtlIG1lLiBUcnVzdCBtZSwgbm8gd2luIHdpbGwgYmUgYmlnIGVub3VnaC4gCkhlIGhhcyBiZWVuIGRpdm9yY2VkIGF0IGxlYXN0IHR3aWNlLCBpbmNsdWRpbmcgbWFycmlhZ2VzIHRoYXQgZW5kZWQgaW4gMTk4MCBhbmQgMTk5MC4gT25lIG9mIHRoZSBleCB3aXZlcyBsaXZlcyBpbiBTb3V0aGVybiBDYWxpZm9ybmlhLCB3aGVyZSBhIGxhcmdlIGdhdGhlcmluZyBvZiByZXBvcnRlcnMgY29uZ3JlZ2F0ZWQgaW4gaGVyIG5laWdoYm9yaG9vZC4gCktoYWxpZmEgaXMgcHJvdWQgb2YgYm90aCB0aGUgd29yayBzaGUncyBkb25lIG9uIFR3aXRjaCBhbmQgaGVyIG5ldyBzaG93IG9uIENvbXBsZXguIEhvd2V2ZXIsIHRoZXJlJ3Mgb25lIHBhcnQgb2YgaGVyIG1pbmkgbWVkaWEgYnVzaW5lc3Mgc2hlIGRvZXNuJ3QgcmVhbGx5IHRhbGsgYWJvdXQ6IGhlciBhcHAuCkhlIGV4Y3VzcyB3YXMgaGVzIHRvbyBodW5nIG92ZXIgc28gSSB0b29rIHRoZSBidXMuIEFsc28gaWYgaGUgZG9lc24ndCBnZXQgd2hhdCBoZSB3YW50cyBmcm9tIHNvbWVvbmUgaGUgY2FuIGdldCBtYWQgYXQgdGhlbS4gSGVzIGRvbmUgaXQgdG8gbWUgYW5kIG90aGVyIHBlb3BsZS4gCk5ldyBCZWdpbm5pbmdzIENsdWIKSXQgaG9uZXN0bHkgZGVwcmVzc2luZyBhbmQgaWYgeW91IGFyZSBzcGVuZGluZyBhbGwgb2YgeW91ciBlbmVyZ3kgdHJ5aW5nIHRvIGRvIHRoZSByaWdodCB0aGluZyBvbmx5IHRvIGJlIGlnbm9yZWQuLiAKTGVvIHdvdWxkIGhlYWQgYnV0dCBtZSByaWdodCBpbiB0aGUgZmFjZSBpZiBpIHRyaWVkIHRoYXQgd2l0aCBoaW0gdGhvdWdoLiAKV2hpbGUgbG90dGVyeSB0eXBlIGdhbWVzIGFyZSB0aGUgbW9zdCBwb3B1bGFyLCBwb2tpZXMgY29tZSBzZWNvbmQsIGFuZCBzb21lIHNheSB0aGVpciB1YmlxdWl0eSBpcyBkb2luZyB1bnRvbGQgaGFybSB0byBvcmRpbmFyeSBBdXN0cmFsaWFucy4gCk91ciBwcm9wZXJ0eSBtYW5hZ2VyIGFkdmlzZWQgdGhlIHN0cmF0YSBjb3Jwb3JhdGlvbiBpdCBoYXMgbm8gY2hvaWNlIGJ1dCB0byBhcHBseSB0aGUgc2NoZWR1bGUgb2YgdW5pdCBlbnRpdGxlbWVudCByZWdpc3RlcmVkIGluIHRoZSBMYW5kIFRpdGxlIFJlZ2lzdHJ5LiBTaGUgaGFzIHJlc3BvbmRlZCBhbmQgYWR2aXNlZCBzaGUgYmVsaWV2ZXMgdGhlIHNjaGVkdWxlIHRoZSBzdHJhdGEgY29ycG9yYXRpb24gYW5kIG1hbmFnZW1lbnQgY29tcGFuaWVzIGhhdmUgYmVlbiB1c2luZyBhcmUgbWl4ZWQgdXAgYmVjYXVzZSBhIGR1cGxpY2F0ZSB1bml0IGluIHRoZSBuZXh0IGJ1aWxkaW5nIGhhcyBhIDEyIHBlciBjZW50IGxvd2VyIHVuaXQgZW50aXRsZW1lbnQuIApTaGUgZGlkIG5vdCBjb21tZW50IG9uIHRoZSBjaGFyZ2VzIG9yIHRha2UgcXVlc3Rpb25zLiAKVGhlIEdpYW50cyBqdXN0IGxvYWRlZCB0aGUgYmFzZXMgd2l0aCBubyBvdXRzLCBhbmQgUGFkcmVzIG1hbmFnZXIgQnVkIEJsYWNrIGp1c3QgcmVwbGFjZWQgcmlnaHQgaGFuZGVkIHN0YXJ0ZXIgSm9zaCBCYW5rcyBmb3IgbGVmdHkgSnVzdGluIEhhbXBzb24uLiAKMTggLiBIQUNIRVRURSAuIApJZiB0aGF0IGRpc2Vhc2UgaXMgUnViZWxsYSB0aGVuIG9uZSBjYW4gbWFrZSB0aGUgY29uY2x1c2lvbiB0aGUgUnViZWxsYSB2YWNjaW5lIGNvdWxkIGNhdXNlIGF1dGlzbSB2aWEgUnViZWxsYS4gVGhlIG9ubHkgdGhpbmcgSSBnZXQgZnJvbSB0aGUgY29uY2x1c2lvbiBvZiB0aGUgc3R1ZHkgaXMgdGhhdCB0aGVyZSBpcyBubyBpbmNyZWFzZWQgcmlzayB3aXRoIE1NUiB2YWNjaW5lIGFib3ZlIHRoZSByaXNrIG5vcm1hbGx5IGFzc29jaWF0ZWQgd2l0aCBjYXRjaGluZyBSdWJlbGxhIHdoaWNoIG1heSB0aGVuIHRyaWdnZXIgYXV0aXNtLi4gCllvdSBhcmUgY29ycmVjdCwgYXMgdGhlc2UgcGxhbnMgZW5kIHVwIHJ1aW5pbmcgaW5ub2NlbnQgcGVvcGxlJ3MgbGl2ZXMgYW5kIGV2ZW4gdGhvc2Ugd2hvIGhlIGxvdmVzIGFuZCBhcmUgaW1wb3J0YW50IHRvIGhpbS4gCkF1Y2ggaW4gZGVtIERpZW5zdGxlaXN0dW5nc3Nla3RvciBydW5kIHVtIGRhcyBUaGVtYSBLcnBlciB1bmQgV29obGJlZmluZGVuIGdpYnQgZXMgdmllbGUgU3BlemlhbGlzdGVuIGltIFZpZXJ0ZWwuIERlciBTY2huaGVpdHNzYWxvbiBDbGVvcGF0cmEgbmltbXQgZGFiZWkgZWluZSBBdXNuYWhtZXN0ZWxsdW5nIGVpbi4gCllvdSBhbHNvIGxvc2UgTVBHLCBhbmQgcm90YXJpZXMgYWxyZWFkeSBnZXQgc29tZXRoaW5nIGxpa2UuIApUaGV5IGhhdmUgb25lIGNoaWxkLCB3aG8gd2UgY2FsbCBLZWxseSwgYWdlIDMuIAoiQWxsIGNvbnZlcnNhdGlvbnMgY2VudGVyZWQgb24gZm9vZCwiIHdyb3RlIE1pZXAuIApBcyBpdCBpcyB2ZXJ5IHBvcHVsYXIgaW4gdGhlIHdvcmxkICwgaGVyZSBtYWlubHkgaW50cm9kdWNlIG1veGlidXN0aW9uLiAKSSBkb24gdGhpbmsgc2V0dGluZyB1cCBhIHN5c3RlbSB3aGljaCBjYXVzZWQgYSBjYXRhc3Ryb3BoZSBhZnRlciAyMDAgeWVhcnMgY2FuIHBvc3NpYmx5IGJlIGNvbnNpZGVyZWQgZGVsaWJlcmF0ZSwgeW91IGFyZSBnaXZpbmcgaGlzIHBvd2VycyBvZiBmb3Jlc2lnaHQgd2F5IHdheSB0b28gbXVjaCBjcmVkaXQuIEZlZWwgZnJlZSB0byBnaXZlIG1lIHNvbWUgYWNjZXB0ZWQgZXhhbXBsZXMgb2YgbXVyZGVycyBjb21taXR0ZWQgY2VudHVyaWVzIGFmdGVyIHRoZSBtdXJkZXJlciBkaWVkLCBpZiB5b3UgY2FuIHRoaW5rIG9mIGFueS4gSSBjYW4uIApUaGUgd29ybGQgdW5zZWVuIGZ1bGwgbW92aWUgZG93bmxvYWRpbnN0bWFuayBkb3dubG9hZCBmaWxtIC4gQXN0ZXJpeCBhbmQgb2JlbGl4IGNvbXBsZXRlIGNvbGxlY3Rpb24gcGRmIGRvd25sb2FkZ29sa2VzIHRlcnJ5IGdvb2RraW5kIC4gClVubGlrZSB0aGUgTWVnYSBNaWxsaW9ucyBnYW1lcyB5b3UndmUgcHJvYmFibHkgaGVhcmQgb2Ygd2hlcmUgdGhlIGphY2twb3Qga2VlcHMgYnVpbGRpbmcgdW50aWwgc29tZW9uZSBoaXRzIGFsbCBzaXggbnVtYmVycyBhbmQgd2lucyB0aGUgYmlnIHByaXplLCBpbiBXaW5mYWxsLCBpZiB0aGUgamFja3BvdCByZWFjaGVkICQ1IG1pbGxpb24sIGFuZCBubyBvbmUgbWF0Y2hlZCBhbGwgc2l4IG51bWJlcnMsIGFsbCB0aGUgbW9uZXkgJ3JvbGxlZCBkb3duJyB0byB0aGUgbG93ZXIgdGllciBwcml6ZSB3aW5uZXJzLCBkcmFtYXRpY2FsbHkgYm9vc3RpbmcgdGhlIHBheW91dHMgb2YgdGhvc2Ugd2hvIG1hdGNoZWQgZml2ZSwgZm91ciBvciB0aHJlZSBudW1iZXJzLi4gCkFuZCB0aGVpciBjYW5jZXIgc3Vydml2YWwgcmF0ZXMgYXJlIDEwIHllYXJzIGJlaGluZCB0aGUgRXVyb3BlYW4gYXZlcmFnZS4gClRoZXJlIGlzIGEgcmF0aGVyIGxhcmdlIHJhaXNlIHRvICQ0MCBmcm9tIGEgc29tZXdoYXQgY29tcGV0ZW50IHJlZy4gCkNocmlzdG9mZiBsYXVnaHMuIGxvb2tzIGF0IG1lIGFuZCBidXN0cyBvdXQgbGF1Z2hpbmcgYW5kIHNhaWQsIGlmIHlvdSB3YW50IHRvIHdvcmsgdGhhdCBiYWQsIHlvdSBoaXJlZC4KVG8gYmUgaG9uZXN0LCB0aGF0IHNvdW5kcyBhbWF6aW5nLiBJIGFjdHVhbGx5IGRvIGtub3cgaG93IHRvIGNvb2sgcHJldHR5IHdlbGwsIGFuZCBJIHdhcyBwb2ludGluZyBvdXQgdGhhdCB3ZSBhbHdheXMgbWFrZSBpdCBzb3VuZCBlYXN5IHdoZW4gaXQgcmVhbGx5IG5vdC4KT25lIHRoaW5nIEkgdGhpbmsgbW9zdCBwZW9wbGUgZG9uIHJlYWxpemUgaXMgdGhhdCB3ZSBhcmUgbGl0ZXJhbGx5IG9uZSBvZiB0aGUgb25seSBsYXJnZSBzdWJyZWRkaXRzIG9uIHRoZSBzaXRlIHRoYXQgaGFzIGEgbWV0YSBzdWJyZWRkaXQgd2l0aCB0aGlzIGxldmVsIG9mIHRyYW5zcGFyZW5jeSBhbmQgbW9kIGludGVyYWN0aW9uLiA5OSUgb2Ygb3RoZXIgc3VicyBoYXZlIG5vdGhpbmcgbGlrZSB0aGlzIGFuZCB0aGVpciBjb21tdW5pdHkgcmVsYXRpb25zIGFyZSBiZXR0ZXIgZm9yIGl0LiAKT3VyIGdyb3VwIGlzIG1vcmUgaW50byBDcmFwcyBhbmQgUm91bGV0dGUgYW55d2F5cy4gQ3JhcHMgZXNwZWNpYWxseSwgaXQgZGVmaW5pdGVseSBoYXMgdGhhdCAiZ2V0IHJpY2ggcXVpY2siIGFwcGVhbCB0byB0aGUgZ2FtZS4gSG93ZXZlciwgdGhlcmUgYXJlIHNvbWUgd2hvIHdvdWxkIHJhdGhlciB3YXRjaCB0aGUgYmFsbCByb2xsIGFyb3VuZCB0aGUgd2hlZWwuIEVpdGhlciB3YXkgd2UgaGFkIHR3byBnYW1lcyB0aGF0IGFsbCBvdXIgZnJpZW5kcyBlbmpveWVkIGFuZCB0aGV5IGNvdWxkIHBsYXkgdGhlbSBhcyBsb25nIGFzIHRoZXkgd2FudGVkLiBBZnRlciBwb25kZXJpbmcgb3ZlciBldmVyeXRoaW5nIHRoZSBoYXJkZXN0IHBhcnQgaXMgdXNpbmcgdGhlc2Ugd2l0aCB0b25zIG9mIHBlb3BsZS4KU2luY2UgMTkzNywgYSBwb29sIG9mIDI2OCBtYWxlcyB3aG8gZ3JhZHVhdGVkIGZyb20gSGFydmFyZCBVbml2ZXJzaXR5IGhhdmUgYmVlbiBhbmFseXplZCwgc2NydXRpbml6ZWQsIHN1bW1vbmVkIGFuZCBzdXJ2ZXllZCBieSBhIGNvbGxlY3Rpb24gb2YgZG9jdG9ycywgcHN5Y2hvbG9naXN0cywgYW50aHJvcG9sb2dpc3RzLCBzb2Npb2xvZ2lzdHMsIHBzeWNoaWF0cmlzdHMgYW5kIHBoeXNpb2xvZ2lzdHMuIApBbiBpbXBvcnRhbnQgcnVsZSB0aGF0IHBlb3BsZSBtdXN0IHJlbWVtYmVyIHdoZW4gcGxheWluZyB0aHJlZSBjYXJkIHBva2VyIGlzIHJlZ2FyZGluZyB0aGUgaGFuZCByYW5rcy4gCkFuaW1hbHMgaW4gZ2VuZXJhbCBzZWVtIHRvIGhhdmUgYW4gdW5kZXJzdGFuZGluZyBvZiB3aGVuIHRoZXkgbmVlZCB0byB0dXJuIHRvIHNvbWV0aGluZyB3aXRoIG1hbmlwdWxhdG9ycyBmb3IgaGVscC4gCkknbSBnYXkgYW5kIGtub3cgYSBsb3Qgb2YgcGVvcGxlIHdobyBhcmUgc3VwZXIgdm9jYWxseSBnYXksIGJ1dCBub3QgY3JlZXBzIGxpa2UgdGhpcy4gU291bmRzIGxpa2UgeW91IGhvbmVzdGx5IGRvbid0IGhhdmUgYW4gaXNzdWUgd2l0aCBoaW0gYmVpbmcgZmxhbWJveWFudCBtb3JlIGxpa2UgeW91IGhhdmUgYW4gaXNzdWUgd2l0aCBoaW0gc2V4dWFsbHkgaGFyYXNzaW5nIHlvdXIgZ2lybGZyaWVuZCBhbmQgb3RoZXIgZ2lybHMuIFlvdSdyZSAxMDAlIGluIHRoZSByaWdodCBoZXJlLCBPUC4gCkRvIG5vdCBwdXQgd29yZHMgaW4gbXkgbW91dGguIElmIHlvdSBhcmUgYXNraW5nIG1lIHRvIG5vdCBwcmVzdW1lIHRvIGtub3cgU2FtIEh5ZGUsIGRvIG5vdCBwcmVzdW1lIHRvIGtub3cgbWUuIEkgYWN0aXZlbHkgZGlkIG5vdCBjYWxsIGhpbSBhIE5hemkgb3IgYSB3aGl0ZSBzdXByZW1hY2lzdC4gSSBzYWlkIHRoYXQsIGZ1bmN0aW9uYWxseSwgaXQgZG9lcyBub3QgbWF0dGVyIHdoZXRoZXIgaGUgaXMgb3Igbm90IGJlY2F1c2UgdGhlIHNoaXR0eSB0aGluZyB0aGF0IGhlIGRpZCBzdXBwb3J0ZWQgdGhvc2UgZ3JvdXBzLiBJZiBTYW0gSHlkZSB3YW50cyB0byBoYXZlIGhpcyBjYWtlIGFuZCBlYXQgaXQgdG9vLCB3YW50cyB0byBoYXZlIGhpcyBvcGluaW9ucyBiZSBjb25mdXNpbmcgYW5kIG5lYnVsb3VzIGFuZCBhbHNvIHdhbnRzIHRvIGNvbnRyaWJ1dGUgdG8gZ3JvdXBzIGhlIGRpc2FncmVlcyB3aXRoLCB0aGF0IGhpcyByaWdodC4gSGUgY2FuIGRvIHRoYXQuIEJ1dCB0aGUgb25seSB0aGluZyBJIGRlZmluaXRlbHkga25vdyBhYm91dCBoaW0gaXMgdGhhdCBoZSBtYWRlIHRoYXQgZG9uYXRpb24gYW5kIEkgZG9uIGhhdmUgdG8gc3BlbmQgYW5vdGhlciBzZWNvbmQgcG9uZGVyaW5nIG9yIGNvbnNpZGVyaW5nIGV2ZXJ5IHBvc3NpYmxlIG51YW5jZSBvZiBoaXMgZGVjaXNpb24gdG8ga25vdyB0aGF0IEkgZGlzYWdyZWUgd2l0aCBpdC4gSWYgaGUgd2FzIHRyeWluZyB0byBtYWtlIGEgcG9pbnQsIHRoZXJlIHdlcmUgdG9ucyBvZiBvdGhlciBhbmQgYmV0dGVyIHdheXMgdG8gZG8gc28uIElmIGhlIGp1c3QgbWFkZSBhIG1pc3Rha2UsIGZpbmUuIEJ1dCB0aGUgcG9zaXRpb24gYW5kIG1pbmRzZXQgaGUgd2FzIGluIHdoZW4gaGUgZGlkIHRoZSBzaGl0dHkgdGhpbmcgdGhhdCBoZSBkaWQgaW4gbm8gd2F5IGFic29sdmVzIGhpbSBvZiB0aGF0IHNoaXR0eSB0aGluZy4KIldlIHdlcmUgbG9va2luZyBhdCBpdCBmcm9tIGFuIGFydGlzdGljIHZpZXcuIApBbmQgd2UndmUgcmVhY2hlZCB0aGF0IHN0YWdlIHdoZXJlIHdlIGNhbiBzZWUgaWYgd2Uga2VlcCBwcm9jZWVkaW5nIHRoZSB3YXkgd2UncmUgZ29pbmcsIHdlJ2xsIGZpbmlzaCB1cCBpbiB0aGUgcmVkIGFnYWluLiIgSW4gYSBsZXR0ZXIgdG8gTWVtYmVyIGZvciBBbGJ1cnkgR3JlZyBBcGxpbiwgTXIgTWFycmluZXIgc2FpZG9wZXJhdGluZyBvdmVyaGVhZHMgc3VjaCBhcyByYXRlcywgaW5zdXJhbmNlcywgZ2FzLCBlbGVjdHJpY2l0eSBhbmQgY2x1YiBjb21wbGlhbmNlIGlzc3VlcyBoYWQgYWxzbyBjYXVzZWQgcHJvYmxlbXMuIFRoZSBwcmVzaWRlbnQgaG9wZWQgYSBtZWV0aW5nIG9mIG1lbWJlcnMgYW5kIG90aGVyIHN0YWtlaG9sZGVycyBsaWtlIFNub3d5IEh5ZHJvLCB3aGljaCBidWlsdCBLaGFuY29iYW4gb3JpZ2luYWxseSB0byBob3VzZSB3b3JrZXJzIGFuZCB0aGVpciBmYW1pbGllcywgd291bGQgcmVzb2x2ZSB0aGUgY2x1YidzIGZ1dHVyZSBkaXJlY3Rpb24uIApUaGUgZmVhciBpcyBmb3IgdGhvc2Ugd2hvIGRvbid0IGRvIHRoZWlyIHJlc2VhcmNoIGFuZCB3YW5kZXIgaW50byB0aGlzIG1vdmllIHVuYXdhcmUgb2Ygd2hhdCB0aGV5J3JlIGFib3V0IHRvIHNlZS4gCkl0IHNtZWxsZWQgYXdmdWwgYW5kIHdhcyBvZnRlbiBmdWxsIG9mIG1hZ2dvdHMhLiAKTCdhdWJlIGQndW5lIG5vdXZlbGxlIGxvaSBhdSBDYW5hZGEKMjAxMi4gCkZvciBMZW5pbiB0aGVyZSBuZWVkZWQgdG8gYmUgYSB2YW5ndWFyZCBwYXJ0eSB0byBsZWFkIHRoZSByZXZvbHV0aW9uIGFuZCB0ZWFjaCB3b3JrZXJzIGFib3V0IGhvdyB0aGV5J3JlIG9wcHJlc3NlZC4gSGlzIHdhcyBtb3JlICJkaWN0YXRvcnNoaXAiIHRoYW4gIm9mIHRoZSBwcm9sZXRhcmlhdCIuIEZvciB0aGlzIGhlIG5lZWRlZCB0byBlbGltaW5hdGUgdGhlIENhcGl0YWxpc3QgY2xhc3MgYmVjYXVzZSB0aGV5IHdlcmUgYSB0aHJlYXQuIApGdWNrIGl0c2VsZiBzb3VuZHMgZGlzZ3VzdGluZyB0byBzb21lIHBlb3BsZSwgZmFpciBlbm91Z2gsIGlmIHlvdSdyZSB3aXRoIHlvdXIgbWF0ZXMgYW5kIHlvdSBsZXQgdGhlIHdvcmQgc2xpcCBhIGJ1bmNoLCBpdCdzIGZpbmUsIG9yIGlmIHlvdSBqb2tpbmdseSBzYXkgdG8geW91ciBmcmllbmRzICJvaCBmdWNrIG9mZiIgb3Igc29tZXRoaW5nIGxpa2UgdGhhdCBpdCdzIHVzdWFsbHkgZmluZS4gQnV0IGlmIEkgZ28gdG8gcGljayBteSA4IHllYXIgb2xkIHNpc3RlciB1cCBmcm9tIHNjaG9vbCBhbmQgaGVyIHRlYWNoZXIgZ3JlZXRzIG1lIGFuZCBJIHJlc3BvbmQgd2l0aCAiRnVjayBvZmYhIiBPYnZpb3VzbHkgdGhhdCdzIGdvaW5nIHRvIGJlIGEgcHJvYmxlbSwgYXMgaW4gYWdncmVzc2lvbiwgd3JvbmcgdGltZSBhbmQgcGxhY2UsIGFuZCBqdXN0IGF3ZnVsIGNvbmR1Y3QuLiAKU2hlIGhhZCBjaGFuZ2VkIGhlciBkcmVzcyB0byBhIGJyb3duIGZpZ3VyZWQgbXVzbGluLCB3aGljaCBzdHJldGNoZWQgdGlnaHQgb3ZlciBoZXIgcmF0aGVyIHdpZGUgaGlwcyBhcyBUb20gaGVscGVkIGhlciB0byB0aGUgcGxhdGZvcm0gaW4gTmV3IFlvcmsuIApTdXJlIG9uZSBvZiB0aGUgdHdvIHNpZGVzIG1pZ2h0IGdpdmUgeW91IGEgbGl0dGxlIGV4dHJhIGJlbmVmaXQgdGhhbiB0aGUgb3RoZXIgYnV0IHRoZXkgc3RpbGwgd2lsbCBzaHV0IHRoZSBnb3Zlcm5tZW50IGRvd24gYW5kIHRoZW4gY3J5IHdlIHNob3VsZCBiZSB0aGlua2luZyBvZiB0aGUgbm9uIHBhaWQgcGVvcGxlLCB0aGV5IHVuZGVyc3RhbmQgYW5kIGZlZWwgZm9yIHRoZW0sIHN0aWxsIGRvIG5vdGhpbmcgLiBubyBtYXR0ZXIgd2hhdCBwYXJ0eQpUaGUgZmVycnkgd291bGRuIG5lZWQgYSBicmlkZ2UgdG8gY3Jvc3MgdGhlIHJpdmVyIGlmIGl0IGRpZG4gd2hvbGx5IGRlcGVuZCBvbiBvbmUgZnJvbSBjb21wbGV0aW5nIGl0cyB0YXNrLCB3aGljaCBmZXJyaWVzIGFsbW9zdCBuZXZlciBkbywgYmVpbmcgd2F0ZXJjcmFmdCBhbmQgYWxsLi4gCkhvdyB0byBJZGVudGlmeSBUZXJtcyBVc2VkIFRoYXQgRGVzY3JpYmUgQWxsIENsYXkgUG9rZXIgQ2hpcHMKSWNoIG11c3Mgc2FnZW4sIGRhc3MgZXMgbWljaCB6dW5jaHN0IGF1Y2ggc2VociBiZXJyYXNjaHQgaGF0LCBhbHMgaWNoIGRhcyBlcnN0ZSBNYWwgZGF2b24gaHJ0ZSwgZGFzcyBpbiBtYW5jaGVuIEJldHJpZWJlbiB0cm90eiBkZXMgZ2xlaWNoZW4gQmVydWZzIGFsbGUgdW50ZXJzY2hpZWRsaWNoIGJlemFobHQgd2VyZGVuLiBLbGluZ3QgZXR3YXMgZmFpcmVyLCB3ZW5uIG1hbiBhdWYgZGllIHVudGVyc2NoaWVkbGljaGVuIExlaXN0dW5nZW4gc2NoYXV0LCBhYmVyIGVpZ2VudGxpY2ggaXN0IFZlcmhhbmRsdW5nc2dlc2NoaWNrIHVuZCBzb21pdCBTZWxic3RiZXd1c3N0c2VpbiB1bmQgUmhldG9yaWsgZWluIG5vY2ggd2ljaHRpZ2VyZXIgRmFrdG9yLiBXZW0gZGFzIGZlaGx0LCBkZW0gYnJpbmd0IGF1Y2ggZWluZSBncmVyZSBMZWlzdHVuZyBuaWNodCBpbW1lciB3YXMuClJlYWxseT8gQXJlbiBNcy4gQW1lcmljYSBhbmQgTXMuIApJIGtub3cgdGhlIGZlZWxpbmcuIFRoZXkgdW5pcXVlIGFuZCBpcnJlcGxhY2VhYmxlIHdpdGggdGhlaXIgd2VpcmQgbGl0dGxlIHF1aXJrcyBhbmQgYW50aWNzIGxvbC4gClRoZSBkaXNjdXNzaW9uIGlzIGdvb2QgYmVjYXVzZSBpdCBicm91Z2h0IHVwIHNvbWUgaXNzdWVzIHdlIG5lZWQgdG8gYWRkcmVzcyBidXQgZ29pbmcgYXJvdW5kIGFuZCB0cnlpbmcgdG8gZ2V0IHRoZSBpZGVudGl0eSBvZiBldmVyeSB1c2VyIHdobyBkaXNhZ3JlZXMgd2l0aCB5b3UgYW5kIHRyeWluZyB0byByYWxseSBwZW9wbGUgdG8gbGVhdmUgdGhlIHN1YiBzZWVtcyBhd2Z1bGx5IGNoaWxkaXNoL3Ryb2xsaXNoLiBJdCBtYWtlcyBtZSBxdWVzdGlvbiB5b3VyIGludGVudGlvbnMgb2YgbWFraW5nIHRoZSB0aHJlYWQgaW4gdGhlIGZpcnN0IHBsYWNlLiAKVGhlIHdvbWFuIHdhcyBjaGFyZ2VkIGluIEp1bmUgd2l0aCBtaXNkZW1lYW5vciBwcm9zdGl0dXRpb24uIFNoZSB3YXMgb3JkZXJlZCBub3QgdG8gYmUgYXQgdGhlIFJpc2luZyBTdW4gb3Igd29yayBmb3IgYW55IG1hc3NhZ2UgcGFybG9yIGFzIGEgY29uZGl0aW9uIG9mIGJvbmQuCk5PQk9EWSBJUyBUUllJTkcgVE8gUFVTSCAiU1BJUklUVUFMIENSQVAiIE9OIFlPVS4gRG8geW91IHdhbnQgdG8gYmlja2VyIGFib3V0IHdoZXRoZXIgb3Igbm90IGl0IHN1ZmZpY2llbnRseSBzZWN1bGFyIG9yIGRvIHlvdSB3YW50IHRvIGFkZHJlc3MgeW91ciBvdmVyZWF0aW5nPwpJIGhvcGUgdGhleSByZWNvdmVyLCB0aGF0IHdhcyBzb21lIG9mIHRoZSBtb3N0IGVtb3Rpb25hbCB0b3JuYWRvIGZvb3RhZ2UgSSBldmVyIHdhdGNoZWQuIApUaGlzIGludm9sdmVkIGF0IG9uZSBwb2ludCBwdWxsaW5nIGRvd24gdGhlaXIgcGFudHMgaW4gcHVibGljLiBIb3cgaG9ycmlibGUgY2FuIHBlb3BsZSBiZSB0byB0cmFucyBwZW9wbGU/IEFzIGhvcnJpYmxlIGFzIGl0IGdldHMuLiAKVGhvc2UgTkRBJ3MgVHJ1bXAgaGFkIGluZGl2aWR1YWxzIHNpZ24gd2VyZSBCUy4gTm93IENvaGVuIHByb2R1Y2luZyBjb21wYW55IGRvY3VtZW50cywgd291bGQgdGhhdCBiZSBjb25zaWRlcmVkIGFuIGVudGlyZWx5IGRpZmZlcmVudCBpc3N1ZT8gQ291bGQgQ29oZW4gYmUgZXhwb3NlZCB0byB0cnVlIGxlZ2FsIGltcGxpY2F0aW9ucyBmcm9tIHRoZSBUcnVtcCBPcmdhbml6YXRpb24/ClRoZW4gSSBjYWxsZWQgbWluZSAocHJvZ3Jlc3NpdmUpIGFuZCBtYWRlIGEgY2xhaW0uIFRoZXkgc2FpZCB0aGV5IGNhbiBnbyBhaGVhZCBhbmQgcGF5IGZvciB0aGUgcmVwYWlycyBhbmQgdGhlbiB0aGV5bGwgZ28gYWZ0ZXIgaGVyIGluc3VyYW5jZSB0byByZWNvdXAgdGhlIGNvc3RzLiAKU2hhbmUgV2FybmUsIHRoZSBmb3JtZXIgQXVzdHJhbGlhIGxlZ3NwaW5uZXIsIGhhcyBjb21taXR0ZWQgaGlzIGltbWVkaWF0ZSBmdXR1cmUgdG8gSGFtcHNoaXJlIGJ1dCB3aWxsIG5vdCBiZSBhdmFpbGFibGUgZm9yIHRoZSBjbHViJ3MgVHdlbnR5MjAgQ3VwIGNhbXBhaWduIGR1ZSB0byBhIHBva2VyIHRvdXJuYW1lbnQgaW4gTGFzIFZlZ2FzLgpCdWxscyA9IGJhZCwgZG9ncyA9IHZlcnkgYmFkLCBkb2xwaGlucyBhbmQgd2hhbGVzID0gdmVyeSwgdmVyeSBiYWQuIApPdXIgbWFzc2V1c2Ugd291bGQgdGhlbiBmb2xkIHRoZSB0b3dlbCBzbyBvbmUgb2YgbXkgYnV0dCBjaGVla3Mgd291bGQgYmUgZXhwb3NlZC4gVGhlIG1hc3NldXNlIHdvdWxkIHRoZW4gc3RhcnQgYXQgbXkgYW5rbGUgYW5kIGluIG9uZSBtb3Rpb24gbWFzc2FnZSB1cCB0byBteSBzaG91bGRlci4gCkhvd2V2ZXIsIGFsbW9zdCBhbGwgb2YgdGhpcyB3b3JrIGhhcyBiZWVuIHVuZGVydGFrZW4gaW4gbm9uZWxpdGUgYXRobGV0ZXMgYW5kIHBhcnRpY2lwYW50cyB3aG8gZG8gbm90IHJvdXRpbmVseSBvcGVyYXRlIHVuZGVyIGNvbmRpdGlvbnMgb2YgaGlnaCBzdHJlc3MuIFRodXMsIHRoZXJlIGlzIHZlcnkgbGl0dGxlIGtub3duIGFib3V0IHRoZSBpbmZsdWVuY2Ugb2YgcHJlc3N1cmUgb24gZGVjaXNpb24gbWFraW5nIGluIGVsaXRlIGF0aGxldGVzLk9iamVjdGl2ZTogVGhpcyBzdHVkeSBpbnZlc3RpZ2F0ZWQgdGhlIGluZmx1ZW5jZSBvZiBwaHlzaWNhbCBwZXJmb3JtYW5jZSBwcmVzc3VyZSBvbiBkZWNpc2lvbiBtYWtpbmcgaW4gYSBzYW1wbGUgb2Ygd29ybGQgY2xhc3MgZWxpdGUgYXRobGV0ZXMuIApMaWtlIEkgc3RhdGUgYWxsIHJhY2VzIGNvbW1pdCByb3VnaGx5IHRoZSBzYW1lIGFtb3VudCBvZiBjcmltZS4gCkhvb2tUaGVtICAyIHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpUaGUgY2FzZSBpcyBvbmdvaW5nLkEgcGlsb3Qgc2luY2UgdGhlIGVhcmx5IHllYXJzIG9mIFRpbSBIb3J0b25zLCBKb3ljZSBhbHNvIGNyYXNoIGxhbmRlZCBhbWlkIGhpZ2ggd2luZHMgb24gdGhlIHJ1bndheSBvZiBoaXMgRm94IEhhcmIgUmVzb3J0IGluIDIwMDcsIHRoZSBnb2xmIG1lY2NhL2dhdGVkIGNvbW11bml0eSBoZSBidWlsdCBpbiBub3J0aGVybiBOb3ZhIFNjb3RpYS5CdXQgdGhhdCB0aGUgdGhpbmcgYWJvdXQgSm95Y2U6IGhlIHRydWx5IGRpZCByZW1lbWJlciB3aGVyZSBoZSB3YXMgZnJvbSwgYW5kIGFsd2F5cyB3ZW50IGhvbWUgYWdhaW4sIHJldHVybmluZyB0byBUYXRhbWFnb3VjaGUgZHVyaW5nIHRoZSBzdW1tZXJzLiAKQWN0dWFsbHkgaXQgZmFyIGJldHRlciBpZiBwZW9wbGUgdGhpbmsgSSBqdXN0IHRyb2xsaW5nLiAKSSBpbWFnaW5lIHRoYXQgTUdNIE5hdGlvbmFsIEhhcmJvciBpcyBwcm9iYWJseSBhIG1peCBvZiByZWdzIGFuZCB0b3VyaXN0cyBmcm9tIGNvbmZlcmVuY2VzLCBkZXBlbmRpbmcgb24gaWYgdGhlcmUgaXMgYSBjb25mZXJlbmNlIGF0IE5hdGlvbmFsIEhhcmJvciBvciBub3QuIApLb21tZW4gd2lyIHp1cmNrIHp1bSBQb2tlcm4uIEljaCBzdGVoZSBpbW1lciBub2NoIGFuIGRlciBHcmVuemUgenUgMi80LCBoYWJlIG51biBhYmVyIG5vY2ggZWluZSBXb2NoZSBVcmxhdWIsIHVtIGRhcyBMaW1pdCB6dSBlcnJlaWNoZW4uIFdpZSBpY2ggZXMgdm9yaGVyIHNjaG9uIGVpbm1hbCBhbmdla25kaWd0IGhhYmUsIGlzdCBkaWUgdm9ybHVmaWdlIEVudHNjaGVpZHVuZyBiemdsLiBGdWxsIFRpbHQgamV0enQgZXJzdCBlaW5tYWwgZ2VmYWxsZW4uIERlciBtb25ldHJlIFZvcnRlaWwgZHVyY2ggZGllIDI3JSBSYWtlYmFjayBpc3QgZWluZmFjaCB6dSBncm8gaW0gVmVyZ2xlaWNoIHp1IFN0YXJzLgpBbHdheXMgY2FtZSBpbnNpZGUgYW5kIGRpZCBtdWx0aXBsZSByb3VuZHMuLiAKVGhpcyBzYW1lIHN0b3J5IG11c3QgaGF2ZSBiZWVuIEFQIG5ld3MsIGFzIGl0IGlzIGFsbCBvdmVyIHRoZSBwbGFjZS4gSW4gaXQsIHRoZXJlIGlzIGFuIGFzc2VydGlvbiBsb29zZWx5IGF0dHJpYnV0ZWQgdG8gRHIuIExhcHBpbiB0aGF0IG1hZGUgdGhlIGNsYWltIHRoYXQgd2hlbiBoZSBncmFkdWF0ZWQgZnJvbSBWZXQgc2Nob29sIGluIDE5NzIsIGl0IHdhcyBjb21tb24gdGhhdCBnb2xkZW5zIGxpdmVkIHRvIGJlIDE2IG9yIDE3LiAKQWRkaW5nIGluIHBhaXIgcHJvZ3JhbW1pbmcgZm9yIHNvbWUgdGhpbmdzLCB0aW1lIGZvciBmaXhpbmcgYnVncyBhbmQgb3RoZXIgbm9uIHByb2plY3Qgd29yayBsaWtlIHN1cHBvcnQgdGlja2V0cyBhbmQgaXQgYmVjb21lcyByYXRoZXIgaGFyZCB0byBzYXkgaG93IG1hbnkgaG91cnMgd2lsbCBiZSBzcGVudCBieSB0aGUgaGFuZGZ1bCBvZiBkZXZlbG9wZXJzIGluIHRoZSBzcHJpbnQuLiAKSXQgaXMgaGFyZCB0byBzYXkgaG93IG1hbnkgb2YgdGhvc2UgY2l2aWxpYW5zIHdlcmUga2lsbGVkIGJ5IFBLSy4gQXJteSB1c2VkIGEgaGVhdnkgaGFuZGVkIGFwcHJvYWNoIGluIHRob3NlIHJlZ2lvbnMuIEl0IGEgbWFzc2l2ZSBwcm9ibGVtIGZvciB0aGVtLgpUdXJuaXRpbiBnZXRzIHBlb3BsZSB0aGlua2luZyBhYm91dCB3aGF0IGl0IG1lYW5zIHRvIHBsYWdpYXJpemUsIGFuZCwgdGhlIGhvcGUgaXMsIGdpdmVzIHRoZW0gYSBiZXR0ZXIgdW5kZXJzdGFuZGluZyBvZiBob3cgdG8gd3JpdGUuLiAKTW9yZSB0aGFuIHBvbGl0aWNzIHRoaXMgaXMgYSBwcm9ibGVtIG9mIGN1bHR1cmUgYW5kIGFlc3RoZXRpY3MuIENpdHkgZmF0aGVycyBhbmQgYWRtaW5pc3RyYXRvcnMgY2FuJ3Qga2VlcCBvdXIgY2l0aWVzIGNsZWFuLiBUaGUgcGlja2luZyBhbmQgZGlzcG9zYWwgb2YgZ2FyYmFnZSB0YXggdGhlaXIgYmVzdCBhYmlsaXRpZXMuIApUaGV5IGFyZSB0aGVpciBmb3IgdGhlbXNlbHZlcywgbm90IGZvciB5b3UuIApOb3cgYSBzaGFmdCB3aXRoIGEgZ2VhciBvZiBkaWZmZXJlbnQgc2l6ZXMgb24gZWFjaCBlbmQuIFRoZXNlIGdlYXJzIHdvdWxkIGhhdmUgdGhlIHNhbWUgcm90YXRpb25hbCB2ZWxvY2l0eS4gCkR1ZSB0byB0aGlzLCB0aGUgUXVlZW4gb2YgSGVhcnRzIHRhdHRvbyBjYW4gc3ltYm9saXplIGRldGVybWluYXRpb24sIHBlcnNldmVyYW5jZSwgYW5kIHRoZSB3aWxsIHRvIHN1cnZpdmUuIApQb3VyIGNsdHVyZXIgbGEgcHJlbWlyZSBwYXJ0aWUgZGUgY2V0IGFydGljbGUsIHZvaWNpIHVuIGV4dHJhaXQgZCBsaXZyZSBxdWUgaiBiZWF1Y291cCwgUGxhaWRveWVyIHBvdXIgbCBkYW5zIGxlcXVlbCBGcmFuY2lzIEhhbGwgdm9xdWUgbGUgY2FzIGQgZGF0dGllciBiaWVuIHBhcnRpY3VsaWVyOiBDaGV6IGNlIGRhdHRpZXIsIGxvcnNxdSBwYWxtZSB2aWVpbGxpdCBvdSBzZSBkdGFjaGUsIG91IGxvcnNxdSBlc3QgbGFndWUgcGFyIGxlcyBlbXBsb3lzIG11bmljaXBhdXgsIGVsbGUgbGFpc3NlIHN1ciBsZSB0cm9uYyB1bmUgbGFyZ2UgYmFzZSBlbmdhaW5hbnRlIGVuIGZvcm1lIGRlIHZhc3F1ZSByZXRvdXJuZSB2ZXJzIGxlIGNpZWwsIGRhbnMgbGFxdWVsbGUgcyBkZXMgcGFydGljdWxlcyBkIGFwcG9ydGVzIHBhciBsZSB2ZW50LCBkZXMgZmV1aWxsZXMgbW9ydGVzIGV0LCBiaWVuIGVudGVuZHUsIGRlcyBncmFpbmVzIGRlIHBsYW50ZXMgZGl2ZXJzZXMuIElsIHNlIGNyZSBhaW5zaSwgZW4gaGF1dCBkdSB0cm9uYywganVzdGUgc291cyBsYSBjb3Vyb25uZSBkZXMgcGFsbWVzIHZpdmFudGVzLCB1biBlc3NhaW0gZGUgcGV0aXRzIGphcmRpbnMgc3VzcGVuZHVzLCBvbWJyYWdzLCBodW1pZGVzLCBkYW5zIGxlc3F1ZWxzIHBvdXNzZW50IGRlIG5vbWJyZXVzZXMgaGVyYmVzLCBtaXNyZXMsIHJpZ3JvbnMsIGJhbHNhbWluZXMsIHB0dW5pYXMsIG5vbWJyaWxzIGRlIFZudXMsIHZhbHJpYW5lcywgZXRjLiBEZSB0ZW1wcyAgYXV0cmUsIG9uIHkgb2JzZXJ2ZSB1biBwZXRpdCBhcmJyZSwgdW4gY3lwcnMsIHVuIGZpZ3VpZXIsIHVuIHBpdHRvc3BvcnVtIG91IGVuY29yZSB1biBwaW4gZCBkb250IGxlcyBncmFpbmVzIG9udCB0IGFwcG9ydGVzIHBhciBsZSB2ZW50IG91IGxlcyBvaXNlYXV4LiAKVGhlcmUgaXMgYSBuZXcgd2F2ZSBvZiBjbGVhbiBjdXQgYnV0dG9uZWQgZG93biB3aGl0ZSBzdXByZW1hY2lzdHMsIGFuZCBhIGdyZWF0IGRlYWwgb2YgdGhlbSBjb21lIGZyb20gdGhlIHRlY2ggaW5kdXN0cnkuLiAKR29yZ2MgaXNuIHRoYXQgYW1hemluZyBvZiBhIGNhcnJ5IHBsYXllci4gR29yZ2Mgc3RyZW5ndGggYXMgYSBkb3RhIDIgcGxheWVyIGlzIHRoYXQgaGUgaXMgY29uc2lzdGVudC4gQnV0IGhlIGlzIG5vdCBleHRyYW9yZGluYXJ5IG90aGVyd2lzZS4gSGVzIG5vdCBzb21lIHN1cGVyc3RhciB0aGF0IGNvbWVzIG91dCBvZiBub3doZXJlIGFuZCBqdXN0IHNoaXRzIG9uIGV2ZXJ5b25lIGFuZCBldmVyeXRoaW5nICgyMDE1IHN1bWFpbCkgYnV0IGhlIGlzIGEgY29uc2lzdGVudCB0b3AgdGllciBwbGF5ZXIgYXMgZmFyIGFzIG1haW50YWluaW5nIGhpcyBvd24gcGVyc29uYWwgc2tpbGwuIEJ1dCBkZXNwaXRlIHRoYXQsIHRoZXJlIGlzIGEgcmVhc29uIEdvcmdjIGhhcyBub3QgYmVlbiBhcHByb2FjaGVkIGZvciBhIHByby9zZW1pIHNoaXR0ZXIgdGVhbSBpbiBhIHdoaWxlLiBBbmQgaXRzIGJlY2F1c2Ugb2YgR29yZ2MgYXR0aXR1ZGUgYW5kIHRoZSBmYWN0IGhlcyB2ZXJ5IHdoaW55LiBXaGljaCBpcyBhIHZlcnkgZGVnZW5lcmF0ZSB0cmFpdCB0byBoYXZlIGluIHRlYW0gZW52aXJvbm1lbnRzLgpBIGNvdXBsZSBvZiBtb250aHMgYWdvLCB3aGlsZSB0aGUgZXhlY3V0aXZlIGNvbW1pdHRlZSB3YXMgZGViYXRpbmcgdGhlIGdhbWluZyBleHBhbnNpb24sIEkgaGFkIGEgYnJpZWYgZXhjaGFuZ2Ugd2l0aCBMYXl0b24gb24gc29jaWFsIG1lZGlhLiBJIGNvdWxkbiB1bmRlcnN0YW5kIHdoeSBldmVyeSBjb3VuY2lsbG9yIHdobyBvcHBvc2VkIHRoZSBwbGFuIG9mZmVyZWQgbm8gYWx0ZXJuYXRpdmVzLiBMYXl0b24gYW5zd2VyZWQgdGhhdCBvdXIgdG8gcHJvc3Blcml0eSBhbmQgZ29vZCBqb2JzIGlzbiBwYXZlZCBieSBwcm9taXNlcyBvZiAoYSkgZ29sZGVuIG1pbGUuIApUaGluZ3MgYmVnYW4gdG8gc2hpZnQgdG8gdGhlIGltcG9zc2libHkgbGFyZ2UgaW4gdGhlIEdyZWF0IERlYmF0ZSAoMTkyMCAxOTIzKSBwZXJpb2QgKGJldHdlZW4gU2hhcGxleSBhbmQgQ3VydGlzKSBvbiB3aGV0aGVyIHRoZSBuZWJ1bGFlIHdlcmUgImxvY2FsIiAoU2hhcGxleSkgb3IgZXh0cmFnYWxhY3RpYzIgKEN1cnRpcykuIApJbCBzZW1ibGUgcXVlIGxlIHN1amV0IGZhc3NlIGVuY29yZSB2ZW5kcmUgZHUgcGFwaWVyLCBtbWUgc2kgbGEgc2l0dWF0aW9uIG5lIHByb2dyZXNzZSBwYXMgYmVhdWNvdXAuClBldXQgdHJlIGVzdCBlbGxlIGxlIHBhcnRoZW5pdW0gZGNyaXQgcGFyIFBsaW5lIGRhbnMgdW4gcGFzc2FnZSBkZSBsIG5hdHVyZWxsZS4gIExlcyBNYWdlcyBwcmNvbmlzYWllbnQsIGQgUGxpbmUsIGRlIGN1ZWlsbGlyIGxlIHBhcnRoZW5pdW0gZGUgbGEgbWFpbiBnYXVjaGUsIGVuIGRpc2FudCwgc2FucyBzZSByZXRvdXJuZXIsIHBvdXIgcXVpIG9uIGxlIGN1ZWlsbGFpdCwgcHVpcyBkIG1ldHRyZSB1bmUgZmV1aWxsZSBzb3VzIGxhIGxhbmd1ZSBkdSBtYWxhZGUgZXQgZGUgbGEgbHVpIGZhaXJlIGF2YWxlciBwZXUgYXBycyBkYW5zIHVuIGN5YXRoZSBkICAoMSkuIApJIGFsc28gcmVjZW50bHkgY2FtZSB0byB0aGUgcmVhbGl6YXRpb24gdGhhdCB0aGUgcmVhc29uIEkgZ290IHRvIGhhbmcgb3V0IHdpdGggbXkgKG11Y2ggb2xkZXIpIHNpc3RlciBhbmQgaGVyIGZyaWVuZHMgc28gb2Z0ZW4gaXMgYmVjYXVzZSB0YWtpbmcgbWUgYWxvbmcgZXZlcnl3aGVyZSAoZXZlbiB0byBzbGVlcCBvdmVyKSB3YXMgdGhlIG9ubHkgd2F5IG15IHNpc3RlciB3YXMgYWJsZSB0byBoYXZlIGEgc29jaWFsIGxpZmUgc2luY2Ugd2UgY291bGRuIHJlbHkgb24gaGF2aW5nIGFuIGFkdWx0IGFyb3VuZC4uIApUaGlzIGlzIGEgbGl0dGxlIGJpdCBtb3JlIGluIGRlcHRoIGluZm8gYW5kIEkgaGF2ZW4gcHJlc2VudGVkIGl0IHZlcnkgd2VsbCwgYnV0IEkganVzdCB3YW50ZWQgdG8gbWFrZSB5b3UgdGhpbmsgYSBsaXR0bGUgbW9yZSBhYm91dCB0aGUgdmFsdWUgb2YgUTEwIHZzIDMzLiBXaXRoIDMzLCB5b3UgZG9uIG1ha2UgYSBsb3Qgb2YgaGFuZHMsIGJ1dCB3aGVuIHlvdSBkbywgaXQgYSByZWFsbHkgc3Ryb25nIGhhbmQgdGhhdCBjYW4gZ2V0IHlvdSBhIGxvdCBvZiBtb25leS4gV2hlbiB5b3UgbWFrZSBhIGhhbmQgd2l0aCBRMTAsIHlvdXIgaGFuZCBjb3VsZCBiZSBiZWF0IGJ5IHRoaW5ncyBsaWtlIFFKIG9yIGV2ZW4gQTEwIGlmIHlvdSBoaXQgYSBwYWlyIG9mIHRlbnMuIFlvdSBnZXQgIm91dGtpY2tlZCIuCkkgd2FzIHNpdHRpbmcgbmV4dCB0byBhIGJlZCBib3VuZCBpbmRpdmlkdWFsIHN1ZmZlcmluZyBmcm9tIGRlbWVudGlhIHdobyBkaWQgbm90IHNwZWFrIGZvciBzZXZlcmFsIG1vbnRocyBvdGhlciB0aGFuIHRoZSBvY2Nhc2lvbmFsIG1vYW4vZ3JvYW4uIEl0IHdhcyBhcm91bmQgMTAgUE0gYW5kIHdhcyBob2xkaW5nIGhlciBoYW5kIHRvIHByb3ZpZGUgdGFjdGlsZSBjb21mb3J0IGJlY2F1c2Ugc2hlIHdhcyByZXN0bGVzcyBpbiB0aGF0IG1vbWVudCwgaGVuY2UgdGhlIHZpc2l0LiAKVG9hc3R5bW93ICA0IHBvaW50cyAgc3VibWl0dGVkIDIyIGhvdXJzIGFnbwpUaXBzIEFjY2VwdCBjcmVkaXQgY2FyZHMgaWYgeW91IGNhbiBhZmZvcmQgdGhlIGVxdWlwbWVudCBjb3N0cyBhbmQgZmVlcyBhc3NvY2lhdGVkIHdpdGggaXQuIFNvbWUgY3JlZGl0IGNhcmQgYWNjZXB0YW5jZSBwcm9ncmFtcyBoYXZlIHVwZnJvbnQgY29zdHMgb2YgJDUwMCBvciBtb3JlIGluIGFkZGl0aW9uIHRvIHRyYW5zYWN0aW9uIGZlZXMuIApJIHRoaW5rIHRoZSB0cmVuZCBvZiBub3QgaGF2aW5nIHVuZGVyZ3JhZCBidXNpbmVzcyBwcm9ncmFtcyBpcyBtb3JlIGFuIGl2eSBsZWFndWUgdGhpbmcgdGhhbiBhbiBvdmVyYWxsIHRyZW5kLgpJZiB0aGUgZGlzY29sb3JhdGlvbiBpcyBzdGlsbCB2aXNpYmxlIHRoZSBuZXh0IGRheSwgdHVybiB0byBob3Qgb3Igd2FybSBjb21wcmVzc2VzLiAKWW91ciByaWdodHMgYW5kIG9ibGlnYXRpb25zIHRvIHRoZSBVbml2ZXJzaXR5IGFuZCB0aGUgVW5pdmVyc2l0eSBvYmxpZ2F0aW9ucyB0byB5b3UgYXJpc2luZyB1bmRlciB0aGF0IGNvbnRyYWN0IHdpbGwgYmUgc2V0IG91dCBpbiB0aGUgZG9jdW1lbnRzIGxpc3RlZCBiZWxvdywgYW5kIHRoZXNlIHdpbGwgZm9ybSB0aGUgdGVybXMgYW5kIGNvbmRpdGlvbnMgb2YgeW91ciBzdHVkZW50IGNvbnRyYWN0LiAKQnV0IHN5bWJvbGljIHZpb2xlbmNlIGlzbiBmdW5ueS4gSXQgZGFuZ2Vyb3VzLiBJdCBwb3dlcmZ1bC4gClByYWN0aWNlIG9ubGluZSBvciB3aXRoIGZyaWVuZHMgb24geW91ciBwb2tlciBuaWdodC4gQmV3YXJlIHRob3VnaDogcHJhY3RpY2luZyBvbmxpbmUgdG8gbGVhcm4gdGhpcyBza2lsbCB3aWxsIHJlcXVpcmUgcmVhbCBtb25leSwgYmVjYXVzZSBwZW9wbGUgZG8gbm90IHJlYWN0IHRoZSBzYW1lIHdheSB3aXRoICJwbGF5IG1vbmV5Ii4gCkZvciBleGFtcGxlLCBpbiB0aGF0IHJlZmVyZW5jZSBkZXNpZ24gdGhlcmUgaXMgYW4gb3B0aW9uIGluIHRoZSBBWEkgQ0RNQSB0byBjaG9vc2UgYW4gQVhJIExpdGUgb3IgQVhJIGludGVyZmFjZSBmb3IgdGhlIGNvbnRyb2wgcmVnaXN0ZXJzLiAKV2hpbGUgdGhlIFVuaXZlcnNpdHkgd2FzIGEgMSB0aW1lIHBheW1lbnQgY291cnNlLCBKTmFuZGV6IHdhcyB2ZXJ5IGFjdGl2ZSBpbiB0aGUgRkIgZ3JvdXAgYW5kIHN0YXJ0ZWQgdXBkYXRpbmcgbGVzc29ucyBhbmQgY2hhcnRzIGJhc2VkIG9uIGhpcyBzb2x2ZXIgd29yayBiZWNhdXNlIGhlIGRpZG4gd2FudCB0byBsZWF2ZSB0aGUgbWVtYmVycyBiZWhpbmQuIEl0IGJlY2FtZSBhcHBhcmVudCB0aGUgd2hvbGUgY291cnNlIGNvdWxkIGJlIHVwZ3JhZGVkLCBhbmQgc2luY2UgSk5hbmRleiBkaWQgbm90IHdhbnQgdG8gY3JlYXRlIGFub3RoZXIgcHJvZHVjdCB0aGF0IHdvdWxkIHN1ZmZlciB0aGlzIGZhdGUsIGhlIGFwcHJvYWNoZWQgeW91IGd1eXMgdG8gY3JlYXRlIGEgbWVtYmVyc2hpcC4uIApIZSB3YXMgcGxheWluZyB0aGUgYmlnZ2VzdCBnYW1lcyBhdmFpbGFibGUgb24gdGhlIG5ldCB2ZXJ5IHF1aWNrbHkgKGRvIG5vdCBjb3B5IHRoaXMgYXQgaG9tZSwgeW91IG1pZ2h0IGh1cnQgeW91cnNlbGYhKS4gV2hlbiBzY29vcGluZyBhIGxhcmdlIHBvdCwgaGUgd291bGQgdHlwZSBESU5HICEnIGludG8gdGhlIGNvbnZlcnNhdGlvbiBib3guIApQcmlkZSBoYXMgZHJ1ZyB1c2UgYmVjYXVzZSBpdCBpbiBTRi4gSSBjYW4gc3BlYWsgZm9yIG90aGVyIGNpdGllcyB0aG91Z2guIEkgY2FuIHNheSB0aGF0IHByaWRlIGlzIGEgdHJhc2ggZXZlbnQgYW5kIHdheSBvdmVyIGJsb3duLiAKU2F5cyBpIGNhbiBsb2FkIGl0IHdoZW4gaGUgcHVsbHMgYXdheS4gCldlbGwgbXkgZ2lybGZyaWVuZCBhbmQgSSBicm9rZSB1cCBhZnRlciBzaGUgZGVjaWRlZCB0byB0ZXh0L21lc3Mgd2l0aCBhIGd1eSBhdCBoZXIgY2h1cmNoLiBXZSBnb3QgYmFjayB0b2dldGhlciBhbmQgc2hlIHdhbnRzIG1lIHRvIGdvIHRvIGNodXJjaCB3aXRoIGhlci4gCjQuIFRpZ2h0IGFnZ3Jlc3NpdmUgICBUaGlzIGlzIHRoZSBwcmVmZXJyZWQgcGxheWluZyBzdHlsZSB1c2VkIGJ5IG1vc3QgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllcnMuIEl0IGludm9sdmVzIGJlaW5nIGhpZ2hseSBzZWxlY3RpdmUgd2l0aCB0aGUgc3RhcnRpbmcgaGFuZCBzZWxlY3Rpb24gYW5kIGJldHRpbmcgYW5kIHJhaXNpbmcgdmVyeSBhZ2dyZXNzaXZlbHkuIApCeSB0aGUgd2F5LCB0aGUgbGluayB0byByYWtlYmFja3Byb3MgY2FsbG1lamF5IGxpbmtzIHRvIGFib3ZlIGlzIHRvIEZ1bGwgVGlsdCdzIGludGVybmFsIHJha2ViYWNrIHByb2dyYW0uIFRoZXJlIGFyZSBiZXR0ZXIgZGVhbHMgb3V0IHRoZXJlLCBzdWNoIGFzIENhcmRSdW5uZXJzLCB3aGljaCBnaXZlcyB5b3UgcmFrZWJhY2ssIHBsdXMgYWNjZXNzIHRvIHRyYWluaW5nIHZpZGVvcyBhbmQgYSBjb3B5IG9mIEhvbGRlbSBNYW5hZ2VyIGlmIHlvdSBnZW5lcmF0ZSBtb3JlIHRoYW4gJDEwMCBpbiBNR1IgKHJha2UpLgpJdCBpcyBjaGFyYWN0ZXJpc2VkIGJ5IHBocmFzZXMgbGlrZSAiSSBkb24ndCBrbm93IHdoeSBJJ20gY3J5aW5nIi4gClJhc2FsYXM4OTEwIHUKT3IsIHVzZSB0aGVpciBwcm9kdWN0IGFzIHRoZSBzdG9yeXRlbGxpbmcgbWVkaXVtIGl0c2VsZi4gVXByb3h4IGFuZCBJbnRlbCBkaWQgdGhpcyBpbiB0aGVpciBDUkU4OiBDZWxlYnJhdGUgdGhlIFByb2Nlc3MgY2FtcGFpZ24gYnkgY3JlYXRpbmcgMTAgaGVybyBwaWVjZXMgb2YgY29udGVudCB1c2luZyBhIGxhcHRvcCBsb2FkZWQgd2l0aCBJbnRlbCdzIE9wdGFuZSBNZW1vcnkuIApBbWFuZGE6IEkgZmlyc3Qgd2FrZSB1cCBpbiB0aGUgbW9ybmluZyBhbmQgSSBnZXQgcmVhZHkgZm9yIHNjaG9vbCwgYW5kIHRoZSBzY2hvb2wgc3RhcnRzIGF0IDg6MzAuIEkgaGF2ZSBuaW5lIGNsYXNzZXMsIGZvcnR5IGZpdmUgbWludXRlcyBlYWNoLCBpbiBzY2hvb2wgYW5kIHRoZXkgZmluaXNoIGF0IGEgcXVhcnRlciB0byBmb3VyLiAKIlRoZSB0cmFpbiBzaGVkIHdhcyBub3QgaW5pdGlhbGx5IGJ1aWx0IGZvciBlbGVjdHJpZmljYXRpb24gc28gd2UgZG8gaGF2ZSB0byBwdXQgdG9nZXRoZXIgYSBwbGFuIG9uIGhvdyB3ZSBjYW4gZG8gdGhhdCwiIEFpa2lucyBzYWlkLCBub3RpbmcgdGhhdCB0aGUgcGxhbiBpcyBhYm91dCA3NSBwZXIgY2VudCBjb21wbGV0ZS4gIkFyZSB3ZSBnb2luZyB0byByYWlzZSB0aGUgcm9vZiBhIGNvdXBsZSBpbmNoZXM/IExvd2VyIHRoZSByYWlsIGEgY291cGxlIG9mIGluY2hlcz8gVGhlcmUgaXMgYSB2YXJpZXR5IG9mIHRoaW5ncyB0aGF0IHdlIGNhbiBkby4iCiJBdCBhbnkgb3RoZXIgcG9pbnQsIHlvdSBhcmUgYWxzbyBhbiBlbXBsb3llZSBvZiB0aGUgY2x1Yi4gV2UgaGF2ZSBleHBsYWluZWQgdG8gaGltIHdoYXQgc29ydCBvZiBiZWhhdmlvciB3ZSBleHBlY3QgZnJvbSBvdXIgcGxheWVycy4gV2UgY2FuIG9ubHkgaG9wZSB0aGF0IGhlIGhhcyBiZWVuIHRhdWdodCBhIGxlc3NvbiBhbmQgd2lsbCBjaGFuZ2UgaGlzIGJlaGF2aW9yLiIKU3BpZGVyc2F0aW4gIDQgcG9pbnRzICBzdWJtaXR0ZWQgNyBob3VycyBhZ28KVGhlIHdheSB0aGV5IGRyZXNzZWQuIApUaGUgdHJ1dGggaXMgdGhhdCB0aGUgdmFzdCBtYWpvcml0eSBvZiBwb3JuIGlzIHN0cmFpZ2h0LiAKWW91IGFyZSB0aGUgZnJvbnQgbGluZSB0byBhbmdyeSBhbmQgYW5ub3lpbmcgcGVvcGxlIGFuZCB0aGVyZSBhcmUgcHJvY2Vzc2VzL3N5c3RlbXMvcG9saWNpZXMgdGhhdCB5b3UgYXJlIGxpdGVyYWxseSBubyBjb250cm9sIG92ZXIuIFRoZXkgd29yayBzbyBoYXJkIHdpdGhvdXQgYnJlYWtzLCBjb3ZlcmVkIGluIGdyZWFzZSBhbmQgc3dlYXQsIGFyZSBvbiB0aGVpciBmZWV0IGFsbCBkYXkgYW5kIGdldCB2ZXJ5IGxpdHRsZSBwYXkuIExhdGVseSwgSSBhbSBub3RpY2luZyB0aGUgaW5mbHV4IG9mIHRob3NlIGZyb20gb3RoZXIgY291bnRyaWVzIChFU0wsIHRlbXBvcmFyeSBmb3JlaWduIHdvcmtlcnMsIGV0Yy4pIGFuZCB0aGV5IHNob3VsZCBiZSBnaXZlbiB0aGUgdXRtb3N0IHJlc3BlY3QgZm9yIGEgaGFyZCBqb2Igd2VsbCBkb25lLgpBZnRlciBhbGwsIE1hcmdhcmV0IHdhcyBvbmx5IHNpeCBhbmQgYWxyZWFkeSBoYWQgYSByZXB1dGF0aW9uIGZvciBuYXVnaHRpbmVzcy4gCkVsZW9ub3JhIGFza2VkIG1lIHRvIGFycml2ZSAxMCBtaW51dGVzIGVhcmx5IGZvciB0aGUgZmlyc3QgYXBwb2ludG1lbnQgdG8gdGFsayBhYm91dCBteSBoZWFsdGggaGlzdG9yeS4gU2hlIHdhcyBzbyBmcmllbmRseSBhbmQgY2FyaW5nLCBJIGltbWVkaWF0ZWx5IGZlbHQgYXQgZWFzZS4gQWZ0ZXIgdGhhdCBmaXJzdCBtYXNzYWdlLCB3aGljaCB3YXMgd29uZGVyZnVsbHkgcmVsYXhpbmcsIEVsZW9ub3JhIHNhaWQgSSB3YXMgc3VmZmVyaW5nIGZyb20gYSBGcm96ZW4gc2hvdWxkZXIuIApTY2hvbGFyc2hpcCBtb25leSBjYW4gY29tZSBmcm9tIGFueSBudW1iZXIgb2Ygc291cmNlcy4gVGhlcmUgYXJlIHNjaG9sYXJzaGlwcyBwcm92aWRlZCBieSBnb3Zlcm5tZW50cywgY29ycG9yYXRpb25zLCB1bml2ZXJzaXRpZXMgb3IgYW55IG9yZ2FuaXphdGlvbiB3aXRoIGEgbGl0dGxlIGdvb2R3aWxsIGFuZCBzb21lIG1vbmV5IHRvIGJ1cm4uIE1hbnkgZmFtb3VzIHNjaG9sYXJzaGlwcyBjb21lIGZyb20gc3RpcHVsYXRpb25zIGluIHRoZSB3aWxscyBvZiBwaGlsYW50aHJvcGlzdHMuIApDb3BzIENyYWNrIERvd24gT24gSWxsZWdhbCBGaXJld29ya3MgVGhpcyBKdWx5IDR0aEhvcGluZyBub3QgdG8gaGF2ZSBhIHJlcGVhdCBvZiBsYXN0IHllYXIgd2hlbiBmaXJld29ya3Mgc3BhcmtlZCBmb3VyIGJydXNoIGZpcmVzIGFuZCBpbmp1cmVkIG9uZSBwZXJzb24sIENvcmFsIFNwcmluZ3MgcG9saWNlIHBsYW4gdG8gYmUgb3V0IGluIGZvcmNlIHRoaXMgeWVhciB0byBoZWxwIGVuc3VyZSB0aGF0IGNpdHkgcmVzaWRlbnRzIGNlbGVicmF0ZSB0aGUgRm91cnRoIG9mIEp1bHkgc2FmZWx5LgpJZiB0aGF0IGhhcHBlbnMsIHRoZW4geW91IGtub3cgdGhhdCBNYW5tb2hhbiBTaW5naCBwbGF5ZWQgaGlzIHBvbGl0aWNhbCBjYXJkcyBkZWZ0bHkuIApUaGUgTXVzaWtmZXN0IENhZmUgd2FzICJvbmUgb2YgdGhlIG9yaWdpbmFsIHBpZWNlcyBvZiB0aGUgcHV6emxlLCIgUGFya3Mgc2F5cy4KVGhlIEJhY2hlbG9yIG9mIE51cnNpbmcgYXQgdGhlIFVuaXZlcnNpdHkgb2YgQmlybWluZ2hhbSBpbmNvcnBvcmF0ZXMgYW4gaW50ZXJuYXRpb25hbCBmb2N1cyBpbmNsdWRpbmcgYSA0IHdlZWsgZWxlY3RpdmUgZXhwZXJpZW5jZSB3aGljaCB5b3UgY2FuIGFycmFuZ2Ugb3ZlcnNlYXMuIApUaGF0J3Mgd2h5IHRoZXkgaGF2ZSBzdGFydGVkIHNlbGxpbmcgdGhlIHByb2R1Y3RzIGRpcmVjdGx5IG9ubGluZSBiZXNpZGVzIHRoZSBvZmZsaW5lIHN0b3JlcyBpbiB0aGUgbG9jYWwgcGxhY2VzLiAKTm8gbW92aWUgY291bGQgcG9zc2libHkgZXZlciByZWFjaCBldmVyeW9uZS4gCkluIHRoZSBpbnRlbnRpb24gdG8gdHJlYXQgYW5hbHlzaXMsIG9uIGF2ZXJhZ2UsIHRoZSBsYXJnZXN0IENvYmIgYW5nbGUgZGVjcmVhc2VkIGJ5IDEuMiBpbiB0aGUgU2Nocm90aCBhbmQgaW5jcmVhc2VkIGJ5IDIuMyBpbiB0aGUgY29udHJvbCBncm91cCBvdmVyIDZtb250aHMsIGFuZCB0aGlzIGRpZmZlcmVuY2Ugd2FzIHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQuIApJIG1heSBiZSBtaXN0YWtlbiwgYnV0IEkgdGhpbmsgdGhlIHdheSB0aGF0IGl0IHdvcmtzIGlzIHRoaXM6IFlvdSBhcmUgYmFzaWNhbGx5IGRpbHV0aW5nIHlvdXIgb3duIHVyaW5lIHdpdGggdGhlIGxhcmdlIGFtb3VudHMgb2Ygd2F0ZXIgeW91IGRyaW5rIHByaW9yIHRvIHRha2luZyBkcnVnIHRlc3QuIFNvbWUgbGFicyBhcmUgYWJsZSB0byB0ZXN0L2RldGVjdCBkaWx1dGlvbi4gVGhpcyAoSSd2ZSBoZWFyZCkgaXMgZHVlIHRvIGxvd2VyIHRoYW4gbm9ybWFsIGxldmVscyBvZiBuaWFjaW4gaW4geW91ciB1cmluZS4gCkdlbnRseSB0YXAgeW91ciB1cHBlciBsaXAgKHdoZXJlIFJlbiBhbmQgRHUgY2hhbm5lbHMgbWVldCkgYW5kIHJlcGVhdCBvdXQgbG91ZCBvciBzaWxlbnRseSB0byB5b3Vyc2VsZjoKV2Vha2VyIHRlYW1zIG5lZWQgdG8gZHJhZnQgb3RoZXIgdHlwZXMgb2YgY29tcG9zaXRpb25zICAgcGljaywgc3BsaXQgcHVzaCwgcG9rZSwgZXRjLiBMZXQgdGhpbmsgYWJvdXQgd2hhdCB3b3VsZCBoYXBwZW4gaWYgVFNNIHBsYXllZCB0aGVpciBiZXN0IGNvbXBvc2l0aW9uICAgb3V0bGFuaW5nIHRoZSBvdGhlciB0ZWFtIGludG8gbGF0ZSBnYW1lLiBEbyB5b3UgZ2VudWluZWx5IHRoaW5rIHRoYXQgVFNNIGNhbiBvdXRsYW5lIFNLVD8gRG8geW91IHNlcmlvdXNseSB0aGluayB0aGF0IFRTTSBjYW4gZ2FpbiBhbnkgbWVhbmluZ2Z1bCBhZHZhbnRhZ2UgYWdhaW5zdCBTS1QgdGhyb3VnaCBqdXN0IGxhbmluZz8gU0tUIGhhcyBiZXR0ZXIgbWFjcm8sIGJldHRlciB0ZWFtIGZpZ2h0aW5nLCBldGMuIApUaGUgc3Ryb25nZXN0IG5ldXJvZ2VuaWMgc3RpbXVsdXMgaXMgZXhlcmNpc2UuIFdoZWVsIHJ1bm5pbmcgaW4gcm9kZW50cyByZXN1bHRzIGluIGEgMyA0IGZvbGQgb3IgZXZlbiBncmVhdGVyIGluY3JlYXNlIGluIHRoZSBwcm9kdWN0aW9uIGFuZCBzdXJ2aXZhbCBvZiBuZXcgbmV1cm9ucyBpbiB0aGUgZGVudGF0ZSBneXJ1cyBvZiB0aGUgaGlwcG9jYW1wdXMgWzMwXS4gVGhlIG9uc2V0IG9mIHRoZSBlZmZlY3Qgb2YgcnVubmluZyBvbiBjZWxsIGdlbmVzaXMgaXMgcmFwaWQuIApBZHZlcnRpc2Ugd2l0aCB1cyBIZWxwIGNlbnRyZSBBZ2VudCBhZG1pbiBNZWRpYSBzYWxlcyBMZWdhbCBPcHQgb3V0IFByaXZhY3kgU2l0ZSBtYXAgQ2FyZWVycwpBbHdheXMgcmVtZW1iZXIgdGhhdCBzaXQgYW5kIGdvIFRleGFzIEhvbGQnRW0gcG9rZXIgdG91cm5hbWVudHMgYXJlIGZhc3QgcGFjZWQsIGRpZmZpY3VsdCBhbmQgdmVyeSBjb21wZXRpdGl2ZS4gWW91ciBiZXN0IGNoYW5jZSBpcyB0byBwbGF5IHRpZ2h0IGFuZCBhZ2dyZXNzaXZlIGFuZCBtYWtlIHRoZSBtb3N0IG9mIHlvdXIgZ29vZCBwb2tlciBoYW5kcy4gVXNlIGFsbCB5b3VyIHNraWxscyBhbmQgYW55IGFkdmFudGFnZSB0aGF0IHlvdSBjYW4gZ2V0IHdpbGwgbWFrZSBhIGRpZmZlcmVuY2UuCkkgaGFkIGEgcGFpciBvZiBHVCAyMDAwcyBhIGNvdXBsZSB5ZWFycyBhZ28gdGhhdCBzdWNrZWQgb24gdGhlIGZpcnN0IHJ1biwgbGl0ZXJhbGx5IGhhdGVkIHRoZW0uIFJhbiA1IG1vcmUgdGltZXMgaW4gdGhlbSwgZ290IGJsaXN0ZXJzLCBldGMuIEJlZm9yZSByZXR1cm5pbmcgdGhlbS4gCk5vYm9keSBrbm93cywgaXQgaHVydHMgdG8gdGhpbmsgYWJvdXQgc28gd2h5IHNob3VsZCB5b3UgZG8gdGhpcywgaWYgeW91IGNhbiBsaXZlICJpbiB0aGUgbm93Iiwgd2hpY2ggbWVhbnMgImdpdmUgbWUgbXkgc2hvcnQgdGltZSBoaWdocyBzbyBJIGRvbiBnbyBpbnNhbmUgZnJvbSB0aGUgd29ydGhsZXNzbmVzcyBvZiBldmVyeXRoaW5nIi4uIApPbGRlciBTaGVsZG9uJ3Mgdm9pY2VvdmVyIHRoZW4gc2F5cywgIkRlc3BpdGUgd2hhdCBpdCBsb29rcyBsaWtlLCBJIGRpZG4ndCBwcmF5IHRvIEdvZCB0aGF0IG5pZ2h0LiBJIHByYXllZCB0byBCbGFpc2UgUGFzY2FsLiBNeSB0aGlua2luZyB3YXMsIGlmIGhlIHdhcyByaWdodCBhYm91dCB0aGUgZXhpc3RlbmNlIG9mIEdvZCwgdGhlbiBoZSBjb3VsZCBwYXNzIGFsb25nIG15IHJlcXVlc3QgZm9yIG15IGRhZCB0byBnZXQgYmV0dGVyLiAKV2hhdCBpcyB0aGUgc2Vjb25kIGhpZ2hlc3Qgc3VpdCB3aGVuIHBsYXlpbmcgcG9rZXI/CkV4ZXJjaXNlIEJhbGxzIChvciBTd2lzcyBCYWxscykgaGF2ZSBiZWVuIHVzZWQgYnkgcGh5c2ljYWwgdGhlcmFwaXN0cyBzaW5jZSB0aGUgMTk2MHMgYW5kIGhhdmUgYmVjb21lIG1vcmUgcG9wdWxhciB0aHJvdWdob3V0IHRoZSBmaXRuZXNzIGluZHVzdHJ5IG92ZXIgdGhlIGxhc3QgNSAxMCB5ZWFycy4gTm93IHRoZXkgYXJlIHNvIHBvcHVsYXIgdGhhdCB0aGV5IGNhbiBiZSBmb3VuZCBhdCBtb3N0IGxhcmdlIGRpc2NvdW50IHJldGFpbGVycy4gV2l0aCB0aGUgY29uc3RhbnQgb25zbGF1Z2h0IG9mIGFkdmVydGlzaW5nIGZvciB0aGUgbmV4dCBncmVhdCBwaWVjZSBvZiBleGVyY2lzZSBlcXVpcG1lbnQsIGl0IGNhbiBiZSBkaWZmaWN1bHQgdG8gZGV0ZXJtaW5lIHdoYXQgaXMgd29ydGggYnV5aW5nIGFuZCB3aGF0IHdpbGwgYmUgYWRkZWQgdG8geW91ciBjb2xsZWN0aW9uIG9mIHVudXNlZCBlcXVpcG1lbnQuIApBbWVyaWNhIGlzIGxpdGVyYWxseSBjcnVtYmxpbmcgYmVmb3JlIG91ciBleWVzLiAKVHdvIGd1eXMgaW4gYmxhY2sgc3VpdHMgKHRoaW5rIEFnZW50cyBmcm9tIHRoZSBNYXRyaXgsIHNlY3VyaXR5IGVhcnBpZWNlcyBhbmQgc3VuZ2xhc3NlcywgdGhlIHdob2xlIGJpdCkgY2FtZSBvdXQgb2Ygbm93aGVyZSBhbmQgZnVsbCBvbiB0YWNrbGVkIHRoaXMgZ3V5LiBUaGVyZSBjaGlwcyBhbGwgb3ZlciB0aGUgZmxvb3IgYW5kIHRoaXMgZ3V5IGlzIGZ1bGwgb24gY3J5aW5nLCB3YWlsaW5nLCBzY3JlYW1pbmcgIkkgY2FuIGxvc2UgdGhpcyBtb25leSwgSSBnb25uYSBiZSBob21lbGVzcywgSSBjYW4gSSBjYW4gcGxlYXNlIHBsZWFzZSBwbGVhc2UuIiBUaGV5IHNjb29wZWQgaGltIHVwIGFuZCBkcmFnZ2VkIGhpbSBvdXQgb2YgdGhlIHJvb20uIApNeSBwb29yIGJveWZyaWVuZCBrZXB0IGFza2luZyBpZiBJIHdhbnRlZCB0byBnbyB0byB0aGUgRVIuIApXaGVuIHRoZSBjYWxjaXVtIHN0b3JlIGlzIGRlcGxldGVkLCBieSBicmllZiBleHBvc3VyZSB0byByb2NrIGNvbmNlcnQgbGV2ZWwgc291bmRzIG9yIGJ5IHRoZSBpbnRyb2R1Y3Rpb24gb2YgY2FsY2l1bSBjaGVsYXRvcnMsIHRoZSBzb3VuZCBldm9rZWQgcmVzcG9uc2VzIG9mIHRoZSBzZW5zb3J5IGNlbGxzIGRlY3JlYXNlLiAKSSBhY3R1YWxseSBzaG9ja2VkIHNoZSBpcyBmbHlpbmcgdG9kYXkgYmVpbmcgMzggbW9udGhzIHByZWduYW50LiBJIGtub3cgUG9sZSB3YW50cyB0aGF0IGJhYnkgdG8gYmUgYSBVUyBDaXRpemVuICAgYnV0IGl0IHdvdWxkIGJlIG5vIG1hdHRlciB3aGVyZSBpdCBib3JuLiAKSXQgaXNiZWxpZXZlZCB0aGlzIGFsYnVtIGlzIG5vIGxvbmdlciBhdmFpbGFibGUgdmlhIHJldGFpbCBzdG9yZXMuIApPbmUgbm92aWNlIG1lZGl0YXRvciBmb3VuZCB0aGlzIHRvIGJlIHRoZSBjYXNlIHdoZW4gaGUgc2lnbmVkIHVwIGZvciBhIGxvY2FsIGNsYXNzIG9uIG1lZGl0YXRpb24uIE9uIHRoZSBmaXJzdCBuaWdodCBvZiBpbnN0cnVjdGlvbiwgaGUgd2FzIHRvbGQgdG8gbGllIG9uIHRoZSBmbG9vciBhbmQgc2ltcGx5IHBheSBhdHRlbnRpb24gdG8gaGlzIGJyZWF0aGluZyBmb3IgdGVuIG1pbnV0ZXMuIEhlIHRob3VnaHQgdG8gaGltc2VsZiwgIlRoYXQncyBpdD8gVGhhdCdsbCBiZSBlYXN5LiIgSGUgY2xvc2VkIGhpcyBleWVzIGFuZCwgd2l0aGluIHNlY29uZHMsIGl0IHdhcyBsaWtlIHNvbWVvbmUgaGFkIHB1c2hlZCB0aGUgcGxheSBidXR0b24gb24gaGlzIG1lbnRhbCBWQ1IuIFdvcmsgaGFzc2xlcywgYmlsbHMsIGVycmFuZHMsIHBsb3RzIGZyb20gVFYgcHJvZ3JhbXMsIGFuZCBtb3JlIHJhbiB0aHJvdWdoIGhpcyBtaW5kIGxpa2UgYW4gb2xkIHNpbGVudCBmaWxtIHNldCBvbiBmYXN0IGZvcndhcmQuIEJ5IHRoZSB0aW1lIHRoZSB0ZW4gbWludXRlcyBoYWQgZWxhcHNlZCwgaGUgZmVsdCBtb3JlIHRlbnNlIHRoYW4gd2hlbiBoZSBzdGFydGVkLgpEaXJ0RGlnbGV0dCAgMSBwb2ludCAgc3VibWl0dGVkIDI0IGRheXMgYWdvCkhvdyBtYW55IHZpZXdzIGRvZXMgbGFkeSBnYWdhIGhhdmUKSGVyIG5hbWUgaXMgUGEuIApXYWl0ICd0aWwgdGhlIGtpZHMgYXJlIHRlZW5hZ2Vycy4gSG93ZXZlciwga2lkcyBnZXQgTVVDSCBtb3JlIGV4cGVuc2l2ZSBhcyB0aGV5IGFnZS4gV2l0aCB0d28gdGVlbmFnZXJzLCB5b3VyIGdyb2NlcnkgYmlsbCB3aWxsIG1vcmUgdGhhbiBkb3VibGUsIHRoZXknbGwgZ3JvdyByYXBpZGx5IGFuZCBuZWVkIG5ldyBjbG90aGVzICh3aGljaCBhcmUgbXVjaCBtb3JlIGV4cGVuc2l2ZSB0aGFuIGJhYnkgY2xvdGhlcyksIHRoZWlyIGFjdGl2aXRpZXMgd2lsbCBiZWNvbWUgbW9yZSBleHBlbnNpdmUsIHRoZXknbGwgc3RhcnQgZHJpdmluZyBhbmQgeW91ciBhdXRvIGluc3VyYW5jZSB3aWxsIHRyaXBsZS4gCkhlIGFza2VkIGZvciBvbmUgb2YgdXMgdG8gcHVzaCBoaW0gaW4gYW5kIGNsb3NlIHRoZSBkb29yLiAKU2luY2Ugc2hlIHdhcyBhbHJlYWR5IGdldHRpbmcgdGhlICJiYXJ0ZW5kZXIgc3BlY2lhbCBibGVuZCIgKHdoYXRldmVyIHJlZHMgaGFkIGJlZW4gb3BlbmVkIHRoZSBsb25nZXN0KSBzaGUgbmV2ZXIgcmVhbGl6ZWQuIE9yIGF0IGxlYXN0IG5ldmVyIHNhaWQgYW55dGhpbmcuLiAKUG9zc2libHkgYSByZWd1bGF0aW9uIGxpbWl0YXRpb24sIGFuZCBhcmd1YWJseSBhIGNvbnN1bWVyIGRlbWFuZCBsaW1pdGF0aW9uLCBidXQgYWdhaW4sIHBsZW50eSBvZiBtYW51YWwgbXVzdGFuZ3MsIGNoYWxsZW5nZXJzIGFuZCBjYW1hcm9zIHdoaWNoIGFyZSBjb21wYXJhYmxlIHRvIG1lIGFzIGhpZ2ggZG9sbGFyLCBzdGF0dXMgc3ltYm9sLCByZWNyZWF0aW9uIHZlaGljbGVzLiAKQSBnYW1lIC8gbW92aWUgLyBib29rIG9yIHNvbWV0aGluZyBJIHRob3VnaHQgSSByZWFsbHkgbGlrZS4gCk5vIG9uZSB3b24gYWdhaW4sIGJ1dCBDYW5hZGlhbnMgaGFkIHNwZW50ICQ2MC42IG1pbGxpb24gaW4gTG90dG8gTWF4IHRpY2tldHMuIFRoZXkgaGFkIGEgb25lIGluIDI4IG1pbGxpb24gc2hvdCBhdCB3aW5uaW5nIHRoZSBncmFuZCBwcml6ZS4KSW4gMTAwIG1vcmUgc3RvcmVzIHRoYW4gd2hlbiB3ZSB0YXBlZCB0aGUgZXBpc29kZSBhbmQgd2UgYXJlIGluIHRoZSBwcm9jZXNzIG9mIG1vdmluZyB0byB0aGUgc3RhbmQgdXAgcGFja2FnaW5nLiBXZSBleHBlY3QgdG8gc2VlIGEgMjAlIGxpZnQgaW4gc2FsZXMgd2hlbiB0aGUgbmV3IHBhY2thZ2luZyBpcyBvbiBzdG9yZSBzaGVsdmVzLCBzaGUgc2FpZC4gQW5kIHRvIGxhdW5jaCBuZXcgYWxsIG5hdHVyYWwgaGVhbHRoeSBwcm9kdWN0cy4uIApJIHRob3VnaHQgdGhpcyB3YXMgYSBjb29sIGlkZWEuIApUaGVpciBzZWNyZXRzIHdpbGwgZm9yZXZlciByZW1haW4gc2FmZSB3aXRoIGhlci4gCkEgZmV3IHRoaW5ncyBoZWxwIGltbWVuc2VseS4gCkFueXdheSB0aGUgYXBwIGlzIGF3ZXNvbWUuIE9mIHlvdXIgY29ucyB0aGUgb25seSBvbmUgSSBldmVyIHdvcnJpZWQgYWJvdXQgaXMgdGhlIGNvbGx1c2lvbi4gV2hpbGUgeW91IG5lZWQgYSBHUFMgc2lnbmFsIGFuZCBhbiBJUCB0cmFja2VyIEkgcHJldHR5IHN1cmUgaXQgZG9lc250IGtpY2sgeW91IG9mZiBpZiB5b3UgaW4gY2xvc2UgcHJveGltaXR5IHRvIGVhY2hvdGhlciB3aGlsZSBpbiB0aGUgc2FtZSBnYW1lIChjaXRhdGlvbiBuZWVkZWQpLgpTaW5jZSBicmVha2Zhc3QgaXMgb25lIG9mIHRoZSBwZXJrcyBvZiB0aGUgSW5uLCBJIGRvbid0IHRoaW5rIHJlc29ydCBndWVzdHMgd2VyZSBnaXZlbiB0aGF0IGludml0ZS4gClBsYXlpbmcgdGhlIGZyZWUgb25saW5lIGNhc2lubyBnYW1lcyBub3QganVzdCBoZWxwIHlvdSBkZXZlbG9wIHRoZSBza2lsbHMgb3IgaW1wcm92ZSB0aGUgc2FtZSBidXQgYWxzbyBoZWxwIHRoZSBsZWFybmVycyBsZWFybiB0aGUgcnVsZXMgYW5kIHJlZ3VsYXRpb25zIG9mIHRoZSBnYW1lcyBhbmQgZ2V0IHRoZW0gdG8gaGF2ZSBhIGJldHRlciBpbnNpZ2h0IG9mIHRoZSBkaWZmZXJlbnQgdGVjaG5pcXVlcyBhbmQgdGhlIHN0cmF0ZWdpZXMgdGhhdCBhcmUgdG8gYmUgdXNlZCB3aGlsZSBwbGF5aW5nIHRoZSBvbmxpbmUgY2FzaW5vcy4gCkknbSBpbiB3ZWVrIDYgb3Igc28gb2YgSGFuc29uJ3MgdHJhaW5pbmcgcGxhbiBmb3IgSnVuZSBtYXJhdGhvbi4gWWVzdGVyZGF5IEkgaGFkIGEgdGVtcG8gcnVuIHNjaGVkdWxlZCBidXQgSSBjb3VsZG4ndCBoaXQgdGhlIHBhY2UgYXMgdGhlcmUgd2VyZSBmaXZlIGluY2hlcyBvZiBzbm93IG9uIGFsbCB0aGUgc2lkZXdhbGtzLiBJIHB1dCBpbiBtb3JlIGVmZm9ydCB0aGFuIGFuIGVhc3kgcnVuIGJ1dCBkaWRuJ3QgZW5kIHVwIGdvaW5nIG11Y2ggZmFzdGVyLiBQcm9iYWJseSB3YXMgbm90IGFzIG11Y2ggZWZmb3J0IGFzIEkgd291bGQgaGF2ZSBwdXQgaW50byB0aGUgZ29hbCBwYWNlIHNpbmNlIEkgd2FzIG1vc3RseSBmb2N1c2VkIG9uIG5vdCBmYWxsaW5nLiBJIGRvbid0IGZlZWwgZmF0aWd1ZWQgZnJvbSBpdC4KQnJhZHkgZ290IGhpcyB0ZWFtIHRvIG1pZGZpZWxkLCBidXQgaGlzIGRlc3BlcmF0aW9uIHBhc3MgZmVsbCB0byB0aGUgZ3JvdW5kIGluIHRoZSBlbmQgem9uZS4KWW91IHNheSAiZmV0aXNoaXNhdGlvbiIgYnV0IGl0IHdhcyBmYXIgbGVzcyB0aGlzIGFuZCBtdWNoIG1vcmUgYSBkaWFsb2d1ZSwgYXMgSSBtZW50aW9uZWQgaW4gdGhlIHBvc3QuCkdpdmVuIHRoYXQgdHJhZGl0aW9ucyBoYXMgYWx3YXlzIGNoYW5nZWQgdG8gc3VpdCB0aGUgY3VsdHVyZSBvZiB0aGUgdGltZSBhbmQgcGxhY2UsIEkgd291bGQgcmVmcmFpbiBmcm9tIGV2ZXIgY2FsbGluZyBiZWluZyBzdHJhaWdodCAidHJhZGl0aW9uYWwiLiAKT25jZSBpdCBwcm9kdWNlZCwgaWYgeW91IHRoZW4gZ28gdGhlIGhhbmRtYWRlIGJvb2tiaW5kaW5nIG1ldGhvZCwgeW91IGhhdmUgdG8gZm9ybWF0IHRoZSBwcmludCBqb2IuIFRoYXQgZGVwZW5kcyBlbnRpcmVseSBvbiB0aGUgc2l6ZSBvZiB0aGUgcGFnZXMgeW91IHdhbnQgICBidXQgZm9yIGRlc2lnbmluZyBib29rbGV0IHN0eWxlIHByaW50cyAodHlwaWNhbGx5IHVzZWQgaW4gaGFyZGNvdmVyIGJvb2tiaW5kaW5nIHRlY2huaXF1ZXMpLCB0aGlzIGxpdHRsZSBwcm9ncmFtL3dlYnNpdGUgaXMgZXh0cmVtZWx5IGhlbHBmdWwsIGFzIGl0IHdpbGwgcmVjb25maWd1cmUgYSBwZGYgZmlsZSBpbnRvIG9uZSB0aGF0IGNhbiBwcmludCBhY2NvcmRpbmcgdG8gdGhlIG5lZWRzIG9mIHRoZSBib29rIHN0eWxlIHlvdSBhcmUgcHJpbnRpbmcuLiAKSSB3YXMgY29uZnVzZWQgZm9yIGEgZmV3IHNlY29uZHMgdHJ5aW5nIHRvIHVuZGVyc3RhbmQgaG93IHRoZSBoZWxsIHRoZSBUViB3YXMgb24sIHNpbmNlIEkgd2FzIHRoZSBvbmx5IG9uZSBpbiB0aGUgcm9vbSBhbmQgdGhlIHJlbW90ZSB3YXMgb24gdGhlIG5pZ2h0c3RhbmQuIApTbyB3aGF0IGlmIHRoZSBVUyBpcyBpbiByZWNlc3Npb24/IFdoaWNoIG90aGVyIGNvdW50cnkgaW4gdGhlIHdvcmxkIGlzIGZpZ2h0aW5nIEFtZXJpY2EncyB3YXIgdGhlIHdheSB3ZSBhcmU/IEJyaXRhaW4gaGFzIG5vdCBtb3JlIHRoYW4gdHdvIHBsdXMgYnJpZ2FkZXMgaW4gQWZnaGFuaXN0YW4uIApUaGUgSlIgUGFzcyBpcyBub3QgYSBvbmUgZGF5IGFmZmFpci4gVGhlIHNob3J0ZXN0IChhbmQgY2hlYXBlc3QpIGlzIGdvb2QgZm9yIDcgZGF5cyBmcm9tIGRheSBvZiBhY3RpdmF0aW9uLCBhbmQgeW91IGhhdmUgdG8gcHVyY2hhc2UgaXQgYmVmb3JlIHlvdSBhcnJpdmUgaW4gSmFwYW4uIAoiVGhleSB0aG91Z2h0IEkgd2FzIHNvbWUgc29ydCBvZiBnZW5pdXMsIHNvIGluc3RlYWQgb2YgYSBoYW1tZXIgYW5kIGEgZmlsZSwgdGhleSBnYXZlIG1lIHNvbWUgYm9va3MgYW5kIHNlbnQgbWUgdG8gY29sbGVnZSB0byBzdHVkeSBhZHZhbmNlZCBtZWNoYW5pY3MuCkxlIENvbmNvcmRhdCBlc3Qgc2lnbiBlbnRyZSBCb25hcGFydGUgZXQgbGUgcGFwZSBQaWUgVklJLiAKQW5kIHlvdSdkIGJlIHN0aWxsIGtpbmQgZW5vdWdoIHRvIGxldCBoaXMgZmFtaWx5IGtub3cgdG8gdGFrZSBjYXJlIG9mIGhpbSBvbmNlIHlvdSBleGl0IHRoZSBwaWN0dXJlLiBJdCdzIHRoZWlyIHJlc3BvbnNpYmlsaXR5IG5vdyB0byBoZWxwLCBub3QgeW91cnMuCkRpdmUgZGVlcCBpbnRvIHRoZSBhZ2VuZGFzIGRyaXZpbmcgdXMgdG93YXJkcyB0aGUgZnV0dXJlLiAKSWYgeW91IGFyZSBub3QgdmVyeSBtYW55IHBsYXllcnMgYXdheSBmcm9tIHRoZSBmaW5hbCB0YWJsZSBwbGF5IHRpZ2h0ZXIgc2luY2UgdGhlIHBheW91dHMgYXJlIG11Y2ggYmlnZ2VyIGlmIHlvdSBtYWtlIGl0IHRvIHRoZSBmaW5hbCBwb2tlciB0YWJsZS4gS25vd2luZyB0aGlzLCBvZiBjb3Vyc2Ugd2lsbCBoYXZlIHRoZSBiaWcgc3RhY2tzIHRyeWluZyB0byBwdXNoIHlvdSBhcm91bmQuIFlvdSBjYW4gdXRpbGl6ZSB0aGlzIHRvIHlvdXIgYmVuZWZpdCB3aGVuIHVwIGFnYWluc3Qgb3RoZXIgc2hvcnQgb3IgbWVkaXVtIHN0YWNrcywgd2hvIGZlYXIgZ2V0dGluZyBlbGltaW5hdGVkLiBJZiB5b3UgZW5kIHVwIHVwIGZvciB0aGUgdG91cm5hbWVudCBpbiB0aGF0IGNhc2UgZG9uIGZvcmdldCB0aGF0IHBvdCBvZGRzIGZhdm9yIGdvb2Qgc3RhcnRlciBjYXJkcywgYW5kIHRoZSBjaGFuY2Ugb2YgZHJhd2luZyBhIGhhbmQgcmFyZS4KSGVjayBpIHRyaWVkIGxvb2tpbmcgaW50byBmbGF0IGVhcnRoIGFuZCBpIHJlYWxseSB0cmllZCB0byBzZWUgd2hhdCB5b3UgR3V5cyBhcmUgb24gYWJvdXQsIGJ1dCBldmVyeSB0aW1lIGkgdHJ5IHlvdSBiYXNpY2FsbHkgZGlzbWlzcyBtZSBhcyBhIHNoaWxsLCBub3QgYSByZWFsIHBlcnNvbiwgYnJhaW53YXNoZWQgYnkgdGhlIGdvdmVybm1lbnQuIAoiSnVzdCBBbm90aGVyIFRyYWluIFNvbmciIGlzIG5vdCBhcyBvcmRpbmFyeSBhcyBpdCBzb3VuZHMsIHNpbmNlIGl0IGlzIGFib3V0IHNvbWVvbmUgYWxtb3N0IGtpbGxlZCBieSBhIHRyYWluLiAKSWYgeW91IGRvbiBoYXZlIHRoZSBtZWFucyB0byBzdXBwb3J0IGEgZG9nIGVtb3Rpb25hbGx5IGFuZCBwaHlzaWNhbGx5IGZvciB0aGVpciBlbnRpcmUgbGlmZSB5b3UgaGF2ZSBubyBidXNpbmVzcyBnZXR0aW5nIG9uZS4uIApUYWljaGkgdnMuIFRvbW9ha2kgSG9ubWEgICBEVUQgICBPbmUgb2YgdGhlIHdvcnN0IE5KUFcgc2luZ2xlcyBtYXRjaGVzIEkgY2FuIHJlbWVtYmVyLiBJIGZlZWwgc29ycnkgZm9yIEhvbm1hIGJ1dCB0aGUgZHVkZSBtb3ZlcyBpbiBzbG93IG1vdGlvbi4gCldpdGhpbiBhIGZldyBtb250aHMgb2YgZ2V0dGluZyBteSBwaG9uZSBudW1iZXIsIEkgaGFkIHRleHRzIGZyb20gcGVvcGxlIGFza2luZyBtZSB0byBwaWNrIHRoZW0gdXAgdG8gInBhcnR5IiwgaGFkIHNvbWUgYWdlbmN5IGNhbGwgdG8gc2V0IHVwIGNvdXJ0IG9yZGVyZWQgY2hpbGQgdmlzaXRhdGlvbiwgd2FzIG9mZmVyZWQgYXNzaXN0YW5jZSBpbiBwYXlpbmcgbXkgZWxlY3RyaWMgYmlsbCwgYW5kIGhhZCBhIGdhcyBjb21wYW55IGVtcGxveWVlIGNsYWltIHRvIGJlIHNpdHRpbmcgaW4gZnJvbnQgb2YgbXkgaG91c2UgdGVsbGluZyBtZSBoZSBpcyB0dXJuaW5nIG9mZiB0aGUgZ2FzIHRvIG15IGhvdXNlLiBJIGFza2VkIHdoYXQgYWRkcmVzcyBoZSB3YXMgYXQgICBub3QgZXZlbiBpbiB0aGUgc2FtZSB0b3duLiBJIHRvbGQgaGltIHRvIGdvIGFoZWFkLiAKTm93LCBqdXN0IHdoYXQncyB0aGUgcHJvcGVyIGJhbmtyb2xsIGZvciBjYXNoIGdhbWVzPyBQdXQgaXQgdG8gdXNlIGluIHRoaXMgd2F5LCBpZiB5b3UgZG8gbm90IGhhdmUgYXQgdGhlIHZlcnkgbGVhc3QgMTAweCB0aGUgbWluaW11bSBiZXQgb3IgaGlnaGVyIGZvciB0aGUgb3ZlcmFsbCBnYW1lIHlvdSdyZSB0YWtpbmcgaW50byBhY2NvdW50LCB0aGVuIHlvdXIgZ2FtZSBpc24ndCBmb3IgeW91LiBUaGUgc3RhcmsgdGhlIHRydXRoIGlzIHRoYXQgdGhlIGNoYW5jZXMgYXJlIGFnYWluc3QgeW91IGFuZCB5b3Ugd2lsbCBsb3NlIG1vcmUgaGFuZHMgdGhhbiB3aW4uIFRoaXMgaXMgZXhhY3RseSB3aHkgeW91IHdpbGwgaGF2ZSB0byBjYXJlZnVsbHkgc2VsZWN0IHdoaWNoIGhhbmRzIHlvdSBwbGF5LiAK|<---