--->|VGhlIGZhY3QgdGhhdCBvdXIgYW5jZXN0b3JzIGVpdGhlciBraWxsZWQgZXZlcnlvbmUgd2hvIHdhc24ndCBqdXN0IGxpa2UgdGhlbSAoSmV3cywgZ3lwc2llcywgVWtyYWluaWFucy4pIG9yIHN0b2xlIHRoZWlyIHByb3BlcnR5IGR1cmluZyBhbmQgYWZ0ZXIgdGhlIHdhci4gCkl0J3MgYW1hemluZyB0byB0aGluayBhYm91dCB0aGUgd2F5IEkgdXNlZCB0byBsaXZlLCBidXQgdGhlIG1vbmV5IHNlZW1lZCB0byByZWFsbHkga2ljayBpbiBhZnRlciBJIHB1cmNoYXNlZCB0aGVzZSBzaG9lcy4gClRoZSByZWNlbnQgY2FzZSBpbnZvbHZlZCBhIHdvbWFuICggd2l0aCBkaXNhYmlsaXRpZXMgd2hvIGhhcyByZXNpZGVkIGluIGEgTWV0cm8gVmFuY291dmVyIEhvdXNpbmcgQ29ycG9yYXRpb24gKE1WSEMpIHN1YnNpZGl6ZWQgaG91c2luZyBjb21wbGV4IHNpbmNlIDE5OTIuIFNoZSBoYWQgYmVlbiByZWNlaXZpbmcgcmVudGFsIGFzc2lzdGFuY2UgZnJvbSBNVkhDIGV2ZXJ5IHllYXIgdW50aWwgMjAxNS4gVGVuYW50cyB3aG8gd2lzaCB0byByZWNlaXZlIHJlbnQgc3Vic2lkaWVzIG11c3QgZGVtb25zdHJhdGUsIG9uIGFuIGFubnVhbCBiYXNpcywgdGhhdCB0aGV5IG1lZXQgdGhlIGVsaWdpYmlsaXR5IGNyaXRlcmlhIGJ5IGNvbXBsZXRpbmcgYW5kIHN1Ym1pdHRpbmcgYW4gYXNzaXN0YW5jZSBhcHBsaWNhdGlvbi4gCldlaXQgYmVyIGVpbmUgTWlsbGlvbiBCZXN1Y2hlciBsaWVlbiBzaWNoIGJlcmVpdHMgdm9uIGRpZXNlciBTaG93IGluIGRlbiBCYW5uIHppZWhlbi4gCkl0IG1ha2VzIHlvdSB3YW50IHRvIGNvbnN1bWUgbW9yZSwgY2FuIGluZHVjZSBhZGRpY3Rpb24sIGFuZCB3aXRoZHJhd2FsIHN5bXB0b21zLiAKRWFjaCBoZXJvIGhhcyBjaGFsbGVuZ2VzIHlvdSBtdXN0IG92ZXJjb21lIHRvIGJlY29tZSBnb29kIGF0IHRoZW0uIApXaGVuIHJlc2VhcmNoaW5nIGNhc2lubyBwb2tlciBjaGlwcyB3ZWlnaHQsIHlvdSB3aWxsIGRpc2NvdmVyIHRoYXQgdGhlIHdlaWdodCBpcyBtZWFzdXJlZCBpbiBncmFtcy4gSWYgeW91IHZpc2l0IHlvdXIgbG9jYWwgZGVwYXJ0bWVudCBzdG9yZSBpbiBvcmRlciB0byBwaWNrIHVwIGEgcGFjayBvZiBwbGFzdGljIHBva2VyIGNoaXBzLCBzdWNoIGFzIHRob3NlIG9mZmVyZWQgYnkgQmljeWNsZSwgeW91IHdpbGwgZmluZCB0aGF0IHRoZXkgb25seSB3ZWlnaCBhYm91dCAyIHRvIDMgZ3JhbXMgYSBwaWVjZS4gSG93ZXZlciwgaWYgeW91IHZpc2l0IGNhc2lub3MgYW5kIHBsYXkgYXJvdW5kIHdpdGggY2xheSBjaGlwcywgeW91IG1heSBmaW5kIHRoYXQgdGhleSBhcmUgYXMgbXVjaCBhcyAxMCBncmFtcyBhIHBpZWNlLiBVbHRpbWF0ZWx5LCB0aGUgd2VpZ2h0IG9mIGEgcG9rZXIgY2hpcCB3aWxsIGJlIGRlcGVuZGVudCB1cG9uIHRoZSBtYXRlcmlhbHMgdGhhdCB3ZXJlIHVzZWQgdG8gY29uc3RydWN0IHRoZSBwcm9kdWN0LgpTRiAzNiBvdXRjb21lcyB3ZXJlIHByZWRpY3RlZCB1c2luZyBtdWx0aXBsZSByZWdyZXNzaW9uIHRlY2huaXF1ZXMgZnJvbSB3ZWF0aGVyIHBhcmFtZXRlcnMsIHdoaWNoIGluY2x1ZGVkIGhpZ2ggYW5kIGxvdyB0ZW1wZXJhdHVyZSwgYXZlcmFnZSBkZXcgcG9pbnQsIHdldCBidWxiLCBiYXJvbWV0cmljIHByZXNzdXJlLCB0b3RhbCBwcmVjaXBpdGF0aW9uLCBwaGFzZSBvZiB0aGUgbW9vbiwgYW5kIGxlbmd0aCBvZiBzdW5saWdodC4KQnV0IGl0IHdhcyBhIHNpdHVhdGlvbiB3aGVyZSB0aGVyZSB3YXMgbm90IG11Y2ggZWxzZSBJIGNvdWxkIGhhdmUgZG9uZSwgZXNwZWNpYWxseSB3aXRoIEp1bGlhIGNvbWluZyBpbjsgaXQgcmVhbGx5IHB1dCBhIGh1Z2UgdGFyZ2V0IG9uIG15IGJhY2suIApZb3VyIGJvdW5kYXJ5IHdhcyBib3RoIGNsZWFyIGFuZCByZWFzb25hYmxlLCBhbmQgc2hlIHZpb2xhdGVkIGl0IGJlY2F1c2Ugc2hlIHdhbnRlZCB0bzogbm8gb3RoZXIgcmVhc29uLCBzaGUgaHVydCB5b3UgYW5kIGFuZ2VyZWQgeW91IGFuZCB2aW9sYXRlZCB5b3UgdW5jYXJpbmdseSwganVzdCBzbyBzaGUgY291bGQgc2F0aXNmeSBoZXJzZWxmLiAKRGllIElIRyBwbGFudCBkZXJ6ZWl0IHp3ZWkgSG90ZWxzIGluIGRlciBTdGFkdCBpbSBFY29ub215IEJlcmVpY2gsIHVtIGlocmVuIE1hcmt0YW50ZWlsIGF1Znp1c3RvY2tlbi4gCldoYXQgd2FzIExhZHkgR2FnYSdzIGZpcnN0IFVLIG51bWJlciAxIHNpbmdsZQpQb2tlciBpcyBvbmUgb2YgdGhlIG1vc3QgcG9wdWxhciBnYW1lcyBhcm91bmQgdGhlIHdvcmxkIGF0IHRoaXMgbW9tZW50LiAKV2UndmUgc2VlbiBpdCBiZWZvcmUgd2l0aCBoaXMgbGVhZGVyc2hpcCBzcGlsbCAgIGhlIHdhcyBiZWF0ZW4gdHdpY2UgYmVjYXVzZSBoZSBmYWlsZWQgdG8gYWRlcXVhdGVseSBhc3Nlc3MgdGhlIGNvbXBldGl0aW9uIGFuZCBwbG91Z2hlZCBvbiBhaGVhZC4gCkV2ZW4gaWYgeW91IHN0YXJ0IGFwcGx5aW5nIHRvIHN1bW1lciBpbnRlcm5zaGlwcywgeW91IHN0aWxsIG5lZWQgdG8gcGFzcyBiYXNpYyBDUyB3aGl0ZWJvYXJkaW5nIGFuZCBjb2RpbmcgaW50ZXJ2aWV3cyBmb3IgYSBTRSBpbnRlcm5zaGlwLgpJdCBpcyBpbXBvcnRhbnQgdG8gbm90ZSB0aGF0IEZPSSBkb2VzIG5vdCBtZWFuIHRoYXQgYWxsIGluZm9ybWF0aW9uIG11c3QgYmUgcHJvdmlkZWQgaW4gcmVzcG9uc2UgdG8gYSByZXF1ZXN0LCB0aGVyZSBhcmUgcmVhc29ucyBpbmNsdWRpbmcgRGF0YSBQcm90ZWN0aW9uLCBDb25maWRlbnRpYWxpdHkgYW5kIENvbW1lcmNpYWwgSW50ZXJlc3RzIHRoYXQgbWF5IGV4ZW1wdCB0aGUgaW5mb3JtYXRpb24gZm9yIGJlaW5nIHByb3ZpZGVkLiAKV2hlbiB5b3UgdXNlIHBsYXN0aWMgcG9rZXIgcGxheWluZyBjYXJkcyBmb3IgYnVpbGRpbmcgY2FyZCBob3VzZXMsIHlvdSBjYW4gZWFzaWx5IGVuam95IHNoYXJpbmcgeW91ciBwYXN0IHRpbWUgd2l0aCBvdGhlciBmYW1pbHkgbWVtYmVycy4gV2l0aG91dCBhIHF1ZXN0aW9uLCBpZiB5b3UgaGF2ZSBhIGxhcmdlIGVub3VnaCB0YWJsZSwgeW91IGNhbiB3b3JrIG9uIGJ1aWxkaW5nIHRoZSBzdHJ1Y3R1cmUgZm9yIHdlZWtzIG9uIGVuZC4gQXQgdGhlIHZlcnkgbGVhc3QsIGlmIHlvdSB3YW50IHRvIGJ1aWxkIHNvbWV0aGluZywgdGhpcyBtYXkgYmUgbW9yZSBpbnRlcmVzdGluZyB0aGFuIHdvcmtpbmcgb24gcHJlIGRlc2lnbmVkIGppZ3NhdyBwdXp6bGVzLiBJZiB5b3UgaGF2ZSBjaGlsZHJlbiB0aGF0IGFyZSBib3JlZCB3aXRoIHJvdXRpbmUgdHlwZXMgb2YgZ2FtZXMsIGJ1aWxkaW5nIGNhcmQgaG91c2VzIG1heSBiZSBvZiBzb21lIGludGVyZXN0IHRvIHRoZW0uClplbmdlciBiZWF0IHRoZSByYXAsIG9mIGNvdXJzZSwgZXN0YWJsaXNoaW5nIHRoZSBiYXNpcyBmb3IgdGhlIEZpcnN0IEFtZW5kbWVudCB0byB0aGUgVVMgQ29uc3RpdHV0aW9uIGFuZCBzZXR0aW5nIGEgcHJlY2VkZW50IHRoYXQgbW9zdCBOZXcgWW9yayBwb2xpdGljaWFucyBoYXZlIHJlc3BlY3RlZCBldmVyIHNpbmNlOiBOZXdzcGFwZXJzIGhhdmUgYSByaWdodCB0byBwdWJsaXNoIGp1c3QgYWJvdXQgYW55dGhpbmcgdGhleSBkYW1uZWQgd2VsbCBwbGVhc2UuIEV2ZW4gd2hlbiB0aGV5IGFyZSwgaW4gQmlsbCBkZSBCbGFzaW8ncyB2aWV3LCBhbiAiaWRlb2xvZ2ljYWwgYXBwYXJhdHVzIiB0aGF0IGNvbnN0aXR1dGVzICJhIHZlcnkgbmVnYXRpdmUgcHJlc2VuY2UgaW4gb3VyIGNpdHkuIi4gCkRvIHBsYXllcnMgY2hhbmdlIHRoZSB3YXkgdGhleSBwbGF5PyBBIGxvdCBvZiB0aGVtIGNhbid0IGdldCBvdmVyIHRoYXQgSSdtIGEgZ2lybC4gClNoZSBIYXMgMSBBbGJ1bS4gVGhlIEZhbWUgTW9uc3RlciBpcyBhbiBFUC4gQWx0aG91Z2ggVGhlIEZhbWUgTW9uc3RlciBpcyBub3QgYWxzbyAxIGluIFVTIEJpbGxib2FyZC4gClRoZSBjb25jZW50cmF0aW9ucyBvZiBDQkQgYW5kIFRIQyBpbiBpbnRlc3RpbmFsIGx5bXBoIGZsdWlkIHdlcmUgaW4gdGhlIHJhbmdlIG9mIDEyMCBhbmQgNjAgZy9tTCBjb21wYXJlZCB0byAwLjUgYW5kIDAuNiBnL21MIGluIHBsYXNtYSwgcmVzcGVjdGl2ZWx5LiAKSSByYXRoZXIgaGF2ZSBvbmUgaW5zdGVhZCBvZiB0aGUgNSBtaWxsaW9uIGluZ2FtZSBoaW50IHNjcmVlbnMgdGhhdCBzb21ldGltZXMgZXZlbiBleHBsYWluIHRoZSBtb3N0IG9idmlvdXMgc3R1ZmYuIApJIHNvcnJ5LCBidXQgd2UgZG9uIGFsbG93IHF1ZXN0aW9ucyBvbiAvci9Bc2tIaXN0b3JpYW5zLCBhbmQgc28gd2UgaGF2ZSByZW1vdmVkIHRoaXMgc3VibWlzc2lvbi4gSXQgbm90IHRoYXQgdGhlIHF1ZXN0aW9uIGlzIGJhZDsgaXQgaXMgc2ltcGx5IHRoYXQsIGdpdmVuIHRoZSBydWxlcyBvZiB0aGlzIHN1YnJlZGRpdCwgdGhlc2UgdHlwZXMgb2YgcXVlc3Rpb25zIGFyZSBpbGwgc3VpdGVkIHRvIGl0cyBmb3JtYXQuIFdlIGZvdW5kIHRoYXQgdGhleSB0ZW5kIHRvIGdldCByZXNwb25zZXMgYWxvbmcgdGhlIGxpbmVzIG9mICJ0aGUgZmlyc3QvbGFzdCBleGFtcGxlIEkga25vdyBvZiwiIG9yIGVsc2UgbWFueSBzaG9ydCwgc3BlY3VsYXRpdmUgcmVzcG9uc2VzIGluIHRoZSBjYXNlIHRoYXQgdGhlIGFuc3dlciB3ZW50IHVucmVjb3JkZWQuIFRoaXMgcmVzdWx0cyBpbiBtYW55IHJlbW92ZWQgY29tbWVudHMsIGFuZCB2ZXJ5IGZldyBhbnN3ZXJlZCB0aHJlYWRzLgpCdWlsZCB1cCB0aGUgc29mdCBwb3dlciBvZiB0aGUgTm9ydGggS29yZWFuIG11c2ljIHNjZW5lIGFuZCB1c2UgaXQgYXMgYSByZXZlbnVlIHNvdXJjZSB0byBhbGxldmlhdGUgZWNvbm9taWMgc3RyZXNzICh0aGVpciB2ZXJzaW9uIG9mIHRoZSBIYWxseXUgV2F2ZSkuIApBbWJhc3NhZG9yIHRvIHRoZSBnYW1lLiBOZXZlciBhbiB1bmtpbmQgd29yZCB0byBzYXkgYWJvdXQgYW55b25lLCBleGNlcHQgbWF5YmUgd2hlbiBzdGFyc3RydWNrIGFtYXRldXJzIHBsYXkgd2l0aCBoaW0gYW5kIGRvIGR1bWIgc2hpdCBpbiB3aGljaCBjYXNlIHRoZXkgZnVja2luZyBkb25rZXlzIGFueXdheSwgbG9sLiBPciB3aGVuIGhlIGNvbW1lbnRzIG9uIGZpbmFsIHRhYmxlcyB3aXRoIGd1eXMgbGlrZSBGZWRvciBvciBCb25vbW8gcGxheWluZyBoZWFkcyB1cCBhbmQgbGl0ZXJhbGx5IGluc2ludWF0ZXMgdGhhdCB0aGV5IGFyZSBsb25nIHRlcm0gbHVja2llciB0aGFuIGhpbS4uIApDb2xvcmFkbyBmb3IgZXhhbXBsZSwgd2UgdG9vayBvdmVyIHByZXR0eSBtdWNoIHRoZSBlbnRpcmUgcGFydHkuIFdlIG5haWxlZCBldmVyeXRoaW5nIGF0IHN0YXRlIChnb2luZyB0byB0aWdodGVuIGl0IHVwIHNvb24gdG9vKSwgYW5kIGNhcHR1cmVkIG1hbnkgb2YgdGhlIGNvdW50aWVzLgpBbGwgY2hhcmdlcyBpbmN1cnJlZCBhdCBUaGUgQXNoZSBDZW50ZXIgYXJlIGJpbGxlZCB0byB5b3Vyc3R1ZGVudHMnIEJydWluQmlsbGFjY291bnQgNyAxMCBidXNpbmVzcyBkYXlzYWZ0ZXIgc2VydmljZS5TdHVkZW50cyBhcmUgYWJsZSB0byBzZW5kIG1lc3NhZ2VzIHZpYSB0aGUgc2VjdXJlIHBhdGllbnQgcG9ydGFsIHRvIGdldCBtZWRpY2FsIGFkdmljZSwgY29tbXVuaWNhdGUgd2l0aCB0aGVpciBwcmltYXJ5IGNhcmUgcHJvdmlkZXIsIGluc3VyYW5jZSB0ZWFtLCByZWdpc3RlcmVkIGRpZXRpY2lhbiBvciBhIG1lbWJlciBvZiBvdXIgcGhhcm1hY3kgdGVhbS4gCk1vZGVybmlzdGUgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KQ2xheSBjb21wb3NpdGUgcG9rZXIgY2hpcHMgYXJlIHRoZSBtb3N0IHBvcHVsYXIgaW4gdXNlIG91dHNpZGUgb2YgY2FzaW5vcyB0b2RheS4gCkRhcnQyMiAgMTggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KRW5maW4sIHVuIHRlbXBzIGVuIHJ1bmlvbiBwbG5pcmUgcGVybWV0dHJhIGRlIHBhcnRhZ2VyIGxlcyBkaXNjdXNzaW9ucyBwYXIgdGFibGVzIG91IGQnYWJvcmRlciBkJ2F1dHJlcyBzdWpldHMgcXVlIGQnYXVjdW4gc291aGFpdGVyYWl0IHZvcXVlciBlbnNlbWJsZS4KQ3V0IHRvIHRoZSBVUywgd2hlcmUgbXkgY2hpbGRyZW4gYW5kIEkgbGl2ZSBtb3N0IG9mIHRoZSB0aW1lLiBUaGUgdmFjY2luZSBpcyBzdGlsbCBpbiB2ZXJ5IHNob3J0IHN1cHBseSwgb2Z0ZW4gaW1wb3NzaWJsZSB0byBnZXQuIApMYWR5RWxsYU9mRnJlbGwgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVGhlUXVlcSAgMTQxIHBvaW50cyAgc3VibWl0dGVkIDEyIGhvdXJzIGFnbwpXaGVuIHdlIGxvb2sgYXQgQUksIEkgd291bGQgc2F5IHRoZXJlIGFyZSB0aHJlZSBpbXBvcnRhbnQgYXNwZWN0cyB3ZSBoYXZlIHRvIHRoaW5rIGFib3V0LiBPbmUgaXMgdGhhdCB0aGVyZSBoYXZlIGJlZW4gYnJlYXRodGFraW5nIGFwcGxpY2F0aW9ucy4gUmVjZW50bHksIG9uZSBvZiB0aGUgQ2FybmVnaWUgTWVsbG9uIHBva2VyIEFJIHByb2dyYW1zIGJlYXQgdGhlIGZvdXIgYmVzdCBwb2tlciBwbGF5ZXJzIGluIHRoZSB3b3JsZC4gCkFuZCBteSBzaXN0ZXIgYWxzbyBzaWRlcyB3aXRoIGNvbW11bml0eSBtZW1iZXJzIG92ZXIgaGVyIG93biBicm90aGVyLkp1c3Qgd2FudGVkIHRvIGdldCB0aGF0IG9mZiBteSBjaGVzdC4gClRoYXQgaW5kaWNhdGVzIHRoYXQgaXQgYSBuZXVyb3RveGluIHRoYXQgcHJvYmFibHkgdGFyZ2V0cyBwYWluIHJlY2VwdG9ycyBzcGVjaWZpY2FsbHksIGJ1dCBpdCBkb2VzbiBjYXVzZSBsb25nIHRlcm0gZGFtYWdlLiBJbiBodW1hbnMgYW55d2F5LiBTbyB0byB0aGUgZGVncmVlIHRoYXQgdGhlcmUgaXMgZ29vZCBuZXdzLCB0aGF0IHdvdWxkIGJlIHRoZSBnb29kIG5ld3MuIE1heWJlIHRoZXJlIG5vIHBlcm1hbmVudCBkYW1hZ2UgcG9zc2libHkuClNoZSB3YXMgY29udmluY2VkIHNoZSBoYWQgaW50byB0aGUgbWlkZGxlIG9mIGFuIGFsbW9zdCBtdXJkZXIgYW5kIHRoYXQgcHJldHR5IG11Y2ggc2F2ZWQgaGVyIGxpZmUuLiAKQW5kIGNvbXBhcmVkIHRvIHRoZSBjdXJyZW50IHNjYW5uZXIgaXQgaXMgYWxtb3N0IGltcG9zc2libGUgdG8gc2VlIHRoZSBwb3J0YWxzIGJlaGluZCB0aGUgc2t5IGZpZWxkLgpUaGUgZmlyc3Qgd2l0bmVzcyB0ZXN0aWZpZWQgdGhhdCBwYXJ0IG9mIHRoZSByZWFzb24gaGUgZGlkbiBzYXkgYW55dGhpbmcgYXQgdGhlIHRpbWUsIHdoZW4gaGUgd2FzIHN0aWxsIGluIGhpZ2ggc2Nob29sLCB3YXMgZm9yIGZlYXIgb2YgaGF2aW5nIG90aGVycyBzYXkgdGhpbmdzIGFib3V0IGhpbS4gR29pbmcgdGhyb3VnaCBhIHJvdWdoIHBhdGNoIHdpdGggaGlzIHBhcmVudHMsIGhlIGRlc2NyaWJlZCBLaXNzbmVyIGFzIGEgZmF0aGVyIGZpZ3VyZSBhbmQgbWVudG9yIHNvbWVvbmUgd2l0aCB3aG9tIGhlIGNvdWxkIGRpc2N1c3MgcGVyc29uYWwgaXNzdWVzLCBmcm9tIHJlbGlnaW9uIHRvIGdpcmxzLi4gCkkgaGF2ZSByZWFkIG92ZXIgMjAgcG9rZXIgYm9va3MgYW5kIHdhdGNoZWQgb3ZlciAxMDAgcG9rZXIgdHJhaW5pbmcgdmlkZW9zLiAKV2FsayBPZmYgaGltc2VsZiB3aG8gc3BvcnRpbmcgYSAuMzAyIGF2ZXJhZ2UgKDM5IGZvciAxMjkpIHNpbmNlIGhpcyByZXR1cm4gdG8gdGhlIHRlYW0gaW4gSnVseSAgIGhpdHMgYSBzbG93IHJvbGxlciB0byBzaG9ydCwgYW5kIHdpdGggaGlzIGluc2FuZSBzcGVlZCwgYmVhdHMgdGhlIHRocm93IG9uIGEgYmFuZyBiYW5nIHBsYXkgYXQgZmlyc3QuIApZZXMsIE5hdGFsaWUgYml0IEFzaGxleS4gQXNobGV5IGNsZWFybHkgaG9va2VkIGhlcnNlbGYgdG8gSm9obiB3YWdvbiBiZWNhdXNlIHNoZSB3YW50ZWQgdG8gYmUgb25lIG9mIHRob3NlIFdpbmQgR2FwIGdpcmxzIGxpa2UgQ2FtaWxsZSBjbGFzc21hdGVzLCB3aXRoIHRoZSBodXNiYW5kIGFuZCB0aGUgd2luZSBhdCBsdW5jaCBhbmQgdGhlIGdvc3NpcC4gU2hlIGNyYXZlZCBhdHRlbnRpb24ganVzdCBsaWtlIGFsbCB0aGUgb3RoZXIgV0cgd29tZW4uIEJ1dCB0aGF0IHJlbGF0aW9uc2hpcCB3YXMgY2xlYXJseSBmYWxsaW5nIGFwYXJ0LCBzbyBzaGUgdHVybmVkIG9uIEpvaG4gICBhZ2FpbiwgZm9yIGF0dGVudGlvbi4KSSBhZ3JlZSwgTkFEIGNlcnRhaW5seSBjb3VsZCBiZSBCUy4gSSB1bmRlcnBsYXllZCBteSBBREhEIGluIG15IG9yaWdpbmFsIHBvc3QgYnV0IEkgaW5jbHVkZSBpdCBpbiBteSB1cGRhdGUuIFRoZSB0aGVvcnkgd291bGQgYmUgaW5jcmVhc2luZyBOQUQgbGV2ZWxzIHdpbGwgaGF2ZSBlcmdvZ2VuaWMgZWZmZWN0cyBvbiBkb3BhbWluZSBsZXZlbHMgZm9yIHRob3NlIHdpdGggQURIRC4gCkkgdGhpbmsgaXQgb2theSB0byBzaG93IHdlIGFyZSBodW1hbiBhbmQgdGhpcyBzdHVmZiBnZXRzIHRvIHVzLiAKQnkgU3VuIFN0YWZmIChjb250YWN0KQpLbm93aW5nIHRoYXQgdGhlIEdlcm1hbiBwb3B1bGF0aW9uIHdhcyBrZXB0IGluIHRoZSBkYXJrIGFuZCBjaG9zZSB0byBzdGF5IGluIHRoZSBkYXJrIHVudGlsIHJlbGF0aXZlbHkgbGF0ZSBpbiB0aGUgZGF5IGRvZXMgbm90IGFic29sdmUgYW55b25lIG9mIGFueXRoaW5nLiBOb3IgZG9lcyBpdCBtZWFuIEkgc29tZWhvdyBzdXBwb3J0IGl0LiAKVGhlaXIgZWZmb3J0IHRvIGNvbXBseSB3aXRoIHF1ZXN0aW9ucyB3YXMgdGhlaXIgdW5kb2luZywgYXQgbGVhc3QgaW4gdG9kYXkncyBvcGluaW9uLiAKQW5kIHRob3NlIHRocmVhZHMgd2VyZSByZXBsYWNlZCBieSB0aGUgb2ZmaWNpYWwgb25lcy4gV2UgY2FuIGFsd2F5cyBiZSBzdXJlIHRoYXQgdGhlIGFyY2hpdmUgaXMgZnVsbHkgdXAgdG8gZGF0ZSwgaXRzIGJldHRlciB0byBoYXZlIGFsbCB0aGUgdGhyZWFkcyB1bmRlciBvbmUgY29uc29saWRhdGVkIGFjY291bnQuCkFzIGEgcGVyc29uIHdobyBkaWRuJ3QgZ2V0IGRlYWx0IGFuIGVhc3kgaGFuZCBpbiBsaWZlLCBzaGUgd2FzIHJlbWFya2FibGUgaW4gdHVybmluZyBhIGhhbmQgb2Ygc3BhZGVzIGludG8gZGlhbW9uZHMuIEhlciB0aHJlZSBjaGlsZHJlbiBCaWxsIEJhbm5vbiwgQnJlbmRhIFdhZGUgKG5lIEJhbm5vbikgYW5kIEJvbm5pZSBIb3kgKG5lIEJhbm5vbikgKGFuZCBodXNiYW5kIEJpbGwpIHdpbGwgc29yZWx5IG1pc3MgaGVyIGFzIHdlbGwgYXMgaGVyIHN0ZXBzb24gS2V2aW4gUGF0ZXJzb24gKGFuZCB3aWZlIEthdGh5KSwgaGVyIHNvbiBieSBhbm90aGVyIG1vdGhlciBKaW0gQW5kZXJzb24gKGFuZCB3aWZlIE1hcnliZXRoKSwgaGVyIGdyYW5kY2hpbGRyZW4gQnJhZCBIb3kgKGFuZCB3aWZlIEF5YSksIEJldmVybGVlIEpvaG5zb24gKG5lIEhveSBhbmQgaHVzYmFuZCBNYXJ0aW4pLCBCaWFuY2EgSG95LCBEYW5pZWwgV2FkZSwgRWxpb3R0IFdhZGUsIFN0ZXBoYW5pZSBDYW5hdmFuIChhbmQgaHVzYmFuZCBEYW5pZWwpLCBMaXNhIEJvd21hbiAoYW5kIHBhcnRuZXIgQ2hhZCksIFJpZWxleSwgU2hhbm5vbiBhbmQgVGhlcmEuIApMb2NhdGVkIGJldHdlZW4gQVJJQSBSZXNvcnQgQ2FzaW5vIGFuZCBCZWxsYWdpbywgVmRhcmEgb2ZmZXJzIGFjY2VzcyB0byBhbGwgb2YgdGhlIGVudGVydGFpbm1lbnQsIGdhbWluZywgc2hvcHBpbmcsIGRpbmluZyBhbmQgbmlnaHRsaWZlIGF0IENpdHlDZW50ZXIgYW5kIGluIExhcyBWZWdhcywgd2hpbGUgYWxzbyBwcm92aWRpbmcgYSByZXRyZWF0IGZyb20gaXQgYWxsLgpQbGFjZSB0aGUgcGFsbSBvZiBlYWNoIGhhbmQgYXQgdGhlIHRvcCBvZiBhIHRoaWdoLCB3aXRoIHRoZSBzaWRlIG9mIHlvdXIgaW5kZXggZmluZ2VyIGluIHRoZSBjcmVhc2UgYmV0d2VlbiB0aGlnaCBhbmQgc3RvbWFjaC4gCk9uZSBuaWdodCBJIGhlYXJkIGEgdmVyeSBsb2FkIG5vaWNlIHdoZW4gSSBsYXkgaW4gbXkgYmVkIGFuZCB3aGVuIG15IG11bSBjYW1lIGFuZCB0dXJuIG9uIHRoZSBsaWdodHMsIG9uZSBzaGVsZiBoYWQgZmFsbGVuIG9mIHRoZSB3YWxsLiBUaGUgc3RhdHVlIGxheSBiZXNpZGUgbXkgb24gbXkgcGlsbG93IHJpZ2h0IG5leHQgdG8gbXkgaGVhZCEKRWRpdDogRklSU1QgUkVERElUIEdPTEQgV0hBVCBVVVVVVVVVUApMaXZlIFBva2VyIGRpZmZlcnMgZnJvbSBzdGFuZGFyZCBQb2tlciBnYW1lcyBpbiB0d28gd2F5cyAgIHRoZSBnYW1lIGlzIG9wZXJhdGVkIGJ5IGEgcmVhbCBsaWZlIGRlYWxlciBhbmQgeW91IHBsYXkgYWdhaW5zdCB0aGUgaG91c2UsIG5vdCBvdGhlciBwbGF5ZXJzLiAKSSBhbSBhIHBhcnRuZXIuIApJIG5lZWQgc29tZXRoaW5nIGZvciBpdCIuIE5vdyB5b3UgaGF2ZSBhIGNob2ljZS4gWW91IGNhbiBwcmVzcmliZSBhIG5ldyBtZWQgbGlrZSBEWE0gdGhleSBwcm9iYWJseSBuZXZlciBoYWQgaXQsIHNvIHlvdSBkb24ga25vdyBob3cgdGhleSB3aWxsIHJlYWN0LCBiaW5kcyBpcnJldmVyc2libHkgdG8gbXVsdGlwbGUgZGlmZmVyZW50IHNlcm90b25pbiByZWNlcHRvcnMsIGluY2x1ZGluZyB0aGUgNSBoeWRyb3h5IDIgZmFtaWx5ICh0aGUgc2FtZSBmYW1pbHkgTFNEIGV4cGxvaXRzKSwgY3Jvc3MgcmVhY3Qgd2l0aCBtdWx0aXBsZSB3aWRlbHkgdXNlZCBtZWRpY2F0aW9ucy4gCkhvd2V2ZXIsIHlvdSByZWFsaXplIHRoYXQgeW91IGhhdGUgc2tpcHBpbmcgYnJlYWtmYXN0LiBTbyBub3cgeW91IGFkZCBicmVha2Zhc3QgYmFjayBpbiwgYnV0IHlvdSByZWFsaXplIHRoYXQgeW91IGhhdmUgdG8gc3VidHJhY3QgdGhvc2UgY2Fsb3JpZXMgc29tZXdoZXJlIGVsc2UuIApJdCB3YXMgd2FzaGVkIG91dCB3aGl0ZSBmYWNlIHdpdGggWkVSTyBjb250b3VyLiBJdCB3YXNuIGV2ZW4gYWNoaWV2ZWQgYW4gYW4gYXJ0aXN0aWMgY2hvaWNlLiBJdCB3YXMganVzdCBhIHBsYWluIG9sZCBsYWNrIG9mIHNraWxsLiAKSGUgaGFzIGJlZ3VuIHdpdGggYSBzYXZhZ2UgaG9vay4gCkNvbnNpZGVyaW5nIHRoZSB1bmlxdWVuZXNzIG9mIHRoZSBwYXJ0bmVyc2hpcCwgVGhlIDQ4IEhGUCB3YXMgZmxleGlibGUgaW4gaXRzIGZvcm1hdCBieSBnaXZpbmcgcGFydGljaXBhbnRzIDE1IGRheXMgdG8gd29yayBvbiB0aGVpciBzaG9ydCBmaWxtcy4gIlRoZSB0ZWFtcyB3ZXJlIGdpdmVuIGZpdmUgZGF5cyBmb3Igc2NyaXB0LCBmaXZlIGRheXMgZm9yIHRoZSBzaG9vdCB3aXRoIHRoZSBYVVY1MDAgYW5kIGZpdmUgZGF5cyBmb3IgcG9zdCBwcm9kdWN0aW9uLCIgR29wYWxrcmlzaG5hbiBhZGRzLgpJZiB0aGUgZ292ZXJubWVudCBwcm92aWRlcyBubyB1bmVtcGxveW1lbnQgYmVuZWZpdCBhbmQgeW91IHB1dCBhd2F5IDQlIG9mIHlvdXIgc2FsYXJ5IGludG8gYSBiYW5rIGFjY291bnQgaW4gY2FzZSB5b3UgbG9zZSB5b3VyIGpvYiwgdGhhdCBpcyB3ZWFsdGguIEhvd2V2ZXIsIGlmIHlvdSBsb3NlIHlvdXIgam9iLCB0aGUgNCUgb2YgeW91ciBpbmNvbWUgdGhhdCB5b3UgcHV0IGF3YXkgbWlnaHQgbm90IGNvdmVyIGV4cGVuc2VzIGFzIHdlbGwgYXMgdGhlIDIlIHRoZSBnb3Zlcm5tZW50IGhhcyBwdXQgYXdheSBmcm9tIGV2ZXJ5b25lIHRvIHNwcmVhZCB0aGUgcmlzayBvdmVyIG1vcmUgcGVvcGxlLiAKTGV2ZWw6IFphbm9uIG9mZmVyZWQgbW9kaWZpY2F0aW9ucyBmb3IgdGhlIG1vcmUgZGlmZmljdWx0IGJhbGFuY2Ugb3Igc3RyZW5ndGggbW92ZXMuIFRoZXJlIHdhc24ndCBhbnkgcHJlc3N1cmUgdG8gdHJ5IGEgZmV3IG9mIHRoZSBtb3JlIGFkdmFuY2VkIHZhcmlhdGlvbnMuIFRoZSBmbG93IHdhcyBzbG93IGVub3VnaCBmb3IgbW9zdCBwZW9wbGUgdG8gZm9sbG93IGFsb25nIHdpdGggZWFzZS4gb24gVHVlc2RheXMgYW5kIFRodXJzZGF5cy4gb24gU3VuZGF5cy4KSSBkZWNpZGUgdG8gZG8gc29tZXRoaW5nIGFib3V0IGl0LiBGaXJzdCBhIHRyaXAgdG8gV2FsbCBTdHJlZXQgdG8gY2FzaCBpbiA1IGJpbGxpb24gaW4gY3JlZGl0IGRlZmF1bHQgc3dhcHMuIApUaGUgZG93bnNpZGUsIG9mIGNvdXJzZSwgaXMgdGhhdCBpdCdzIGVhc2llciB0byBidXN0IG91dCBlYXJseSB3aXRoIHRoaXMgc3RyYXRlZ3kuIApQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gClRoaXMgcGFzdCB3ZWVrLCBoZSBkZW1hbmRlZCB0aGV5IG1vdmUgaW4gdG8gY2xlYW4gdXAgc28gY2FsbGVkIGFyZWFzICAgZW50aXJlIG5laWdoYm9yaG9vZHMgd2hlcmUgcG9saWNlIGZlYXIgdG8gdHJlYWQgICBhY2NvcmRpbmcgdG8gbG9jYWwgcHJlc3MgcmVwb3J0cy5GdXJ0aGVyIGZ1ZWxpbmcgdGhlIHByb2JsZW0gaXMgcmFtcGFudCBwb2xpY2UgY29ycnVwdGlvbiwgdW5kZXJtaW5pbmcgZWZmb3J0cyB0byBjb21iYXQgdGhlIGNpdHkgdmlvbGVudCBnYW5ncyBhbmQgZXh0cmVtaXN0cy4gCkxldCdzIGZhY2UgaXQuIFNvbWUgcGVvcGxlIGp1c3QgZG9uJ3QgbGlrZSB0byBnYW1ibGUuIApUaGUgd2F5IGl0IGlzIGRhbmdlcm91cyBpcyB0aGF0IGl0IGFsc28gcGFyYWx5emVzIHRoZSBtdXNjbGVzIHRoYXQgYWxsb3cgeW91IHRvIGJyZWF0aGUuIApBIGd1eSBjYW1lIHdpdGggaGlzIHdpZmUgYW5kIHdhbnRlZCB0byBkZW1vIHRoZW0uIFdlIGNoYXR0ZWQgZm9yIGEgbG9uZyB0aW1lIGFuZCBsaXN0ZW5lZCB0byBtdXNpYy4gSGUgaGFkIHNpbWlsYXIgdGFzdGVzIHRvIG1lIGFuZCBqdXN0IHNlZW1lZCBsaWtlIGEgbmljZSBndXkuIApUcnVtcCB3cm90ZSBoZXIgdGhhdCBzaGUgd2FzIHdlbGNvbWUgdG8gdHJhdmVsIGNvbW1lcmNpYWwsIGJ1dCB3b3VsZCBub3QgYmUgYWxsb3dlZCB0byB1c2UgbWlsaXRhcnkgYWlyY3JhZnQuIEhlIHRoZW4gbGVha2VkIHRoZSBhbHRlcm5hdGl2ZSBjb21tZXJjaWFsIHRyYXZlbCBhcnJhbmdlbWVudHMgUGVsb3NpIGhhZCBtYWRlIHRvIHRoZSBwcmVzcywgZW5kYW5nZXJpbmcgaGVyIHNhZmV0eSBhbmQgdGhlIHNhZmV0eSBvZiBwZXJzb25uZWwuIApXZSBoZWFkZWQgdG8gYSBzdG9yZSB0byBncmFiIGFub3RoZXIgb25lLiBXZSBoYWQgYWxyZWFkeSBwYXJrZWQgaW4gYSBsb3QgYW5kIGNvdWxkbiBkcml2ZSwgdGhlcmUgd2FzIG5vIHRyYW5zaXQgYW5kIHRoZXJlIHdlcmUgYWJvdXQgNSBjYWJzIGluIHRoZSB0b3duIGZvciB0aGUgZXh0cmEgMTAwIDAwMCArIHBlb3BsZSB0aGVyZSBmb3IgdGhlIGZlc3RpdmFsIHNvIHdhaXQgdGltZXMgd2VyZSBpbnNhbmUuIFdlIGZpbmFsbHkgZ290IGEgY2FiIHRvIHN0b3JlIGFuZCBnb3Qgb3VyIHRlbnQuIApXZSB0cnkgdG8gbWFrZSBhbGwgb2Ygb3VyIG1hdGVyaWFsIGNvaGVyZSBpbnRvIGEgc2luZ2xlIGdvb2Qgc3RvcnkuIApCdXQgaXQgKHRoZSBsaXN0KSBzaXRzIGluIHRoZSBjb3JuZXIgb2YgdGhlIG1hcCAoaXQgbmV2ZXIgbW92ZXMpIGFuZCBJIHBsYWNlIGEgbGFyZ2Ugcm9jayAzIChyYW5nZSBzdGljayBpbmNyZW1lbnRzKSBmcm9tIG15IGhvbWUgZWRnZSwgYW5kIHR3byBmcm9tIHRoZSBzaWRlIGVkZ2UsIHRoaXMgbWFrZXMgaXQgc28gdGhhdCBhbnlvbmUgdGhhdCB3YW50cyB0byBjb21lIGluIG9uIG15ICJjYXN0bGUiIGhhcyB0byBtb3ZlIG9uIHRoZSBpbnNpZGUgb2YgdGhlIHJvY2ssIG1ha2luZyBpdCBzbyBJIGhhdmUgYSB0dXJuIG9yIHR3byBvZiBhdHRhY2tpbmcgdGhlbSBiZWZvcmUgdGhleSBjYW4gbGVhdmUgdG8gc2FmZXR5IHRvIHN0cmFmZSBhZ2Fpbi4gCkFsb25nIHRoaXMgYW1hemluZyByaWRlLCBSaWNrIGFjY3VtdWxhdGVkIGh1bmRyZWRzIG9mIGZyaWVuZHMgYW5kIGNvbm5lY3Rpb25zLiBXaGlsZSBoZSB3YXMga25vd24gYnkgbWFueSBkaWZmZXJlbnQgc29jaWFsIGdyb3Vwcywgd29yayBjb2xsZWFndWVzLCBhbmQgc3R1ZGVudHMsIGhlIHJlbWFpbmVkIGEgZGV2b3V0IGZhbWlseSBtYW4gaGlzIGVudGlyZSA3MyB5ZWFycy4gSGlzIGZhbWlseSBhbHdheXMgY2FtZSBmaXJzdC4gRm9yIFJpY2sgYW5kIERpYW5hJ3MgNTB0aCB3ZWRkaW5nIGFubml2ZXJzYXJ5LCB0aGVpciBncmFuZGNoaWxkcmVuIGJ1aWx0IHdvcmQgYXJ0IHdpdGggd29yZHMgbGlrZTogZmFtaWx5LCBsYXVnaHRlciwgY2lnYXJzLCBhbmQgRWxsaWNvdHR2aWxsZS4gCkhhbm5haCBNb250YW5hCkhlIGNhbiBhbHNvIHJhaXNlIHdoaWNoIG1ha2VzIHRoZSBiZXQgaGlnaGVyLiBUaGUgcmVtYWluaW5nIHBsYXllciB3aWxsIGNvbGxlY3QgdGhlIHBvdC4gClBsYWNlIGEgZGVzc2VydCBwbGF0ZSBvdmVyIHRoZSB0b3Agb2YgYSByYW1la2luIGFuZCBpbnZlcnQuIApJIGFscmVhZHkgd2VudCB0byBjb21tdW5pdHkgY29sbGVnZSB3aGVuIEkgd2FzIDE5LCBJIGhhZCBnb3R0ZW4gYSBwb29yIHBlcnNvbiBncmFudCBhbmQgbXkgY2FyIGJyb2tlIGRvd24gaGFsZiB3YXkgdGhyb3VnaCBvbmUgbW9udGggYW5kIEkgaGFkIG5vIHdheSB0byBnZXQgYmFjayB0aGVyZSB1bnRpbCB0aGUgbmV4dCBtb250aCBhbmQgYWxsIG15IGNsYXNzZXMgZHJvcHBlZCBtZSwgbm93IEkgb3dlIHRoZW0gbW9uZXkuCiJUaGUgbGV0dGVyIHdpbGwgc2F5IHRoZSBjb3VuY2lsIHJlY29nbmlzZXMgdGhlcmUgaXMgYSBwcm9ibGVtIGluIHRoZSBjb21tdW5pdHkgYW5kIHdpbGwgY2FsbCBvbiB0aGUgb3BlcmF0b3JzJyBjb21tdW5pdHkgc3Bpcml0IGFuZCBhc2sgdGhlbSB0byBkbyB0aGVpciBiaXQgdG8gaGVscCB3aXRoIHRoZSBwcm9ibGVtLCIgQ3IgTW9yYW4gc2FpZC4KVGhlIHN1cmdlcnkgSSBoYWQgd2FzIHRoZSBTSVBTLCB3aGljaCBpcyB0aGUgZHVvZGVuYWwgc3dpdGNoIHdpdGggYSBtb2RpZmljYXRpb24gbXkgc3VyZ2VvbiBoZWxwZWQgZGVzaWduIHRoYXQgcHJlc2VydmVzIHRoZSBweWxvcmljIHZhbHZlLCB3aGljaCBjb250cm9scyB0aGUgc3BlZWQgdGhhdCB0aGUgc3RvbWFjaCBlbXB0aWVzIGludG8gdGhlIGludGVzdGluZXMuIFRoaXMgaXMgc3VwcG9zZWQgdG8gcHJldmVudCBkdW1waW5nIHN5bmRyb21lLCB3aGljaCBpcyBjb21tb24gaW4gYmFyaWF0cmljIHBhdGllbnRzIGlmIHRoZXkgZWF0IGZyaWVkIG9yIGhpZ2ggZmF0IGZvb2RzIGxpa2UgaWNlIGNyZWFtIHRoYXQgcGFzcyB0b28gcXVpY2tseS4gSSBoYXZlIG5vdCBoYWQgZHVtcGluZyBzeW5kcm9tZSBhdCBhbGwsIGJ1dCBJJ20gbm90IGVhdGluZyB0aG9zZSB0aGluZ3Mgc28gaXQncyBoYXJkIHRvIHRlbGwgaWYgdGhhdCdzIGJlY2F1c2Ugb2YgdGhlIHZhbHZlIG9yIGRpZXQuLiAKVGhpcyBpcyBqdXN0IG9uZSBhbmltZSBmYW4gc3BlYWtpbmcgdG8gb3RoZXJzLiAKQ2FuYWRpYW4gaGVyZSBhbmQgbW9zdCBvZiBteSBrbm93bGVkZ2UgaW4gYW1lcmljYW4gcG9saXRpY3MgY29tZXMgZnJvbSBob3VzZSBvZiBjYXJkcyAoc28gbm90IGEgbG90KS4gV2hhdCBleGFjdGx5IHdvdWxkIGEgdHJ1bXAgcHJlc2lkZW50IGJlIGFibGUgdG8gZG8gd2l0aCBtb3N0IG9mIGhpcyBwYXJ0eSBkaXNsaWtpbmcgaGltIC4gCkl0J3MgdG91Z2ggdG8gcGluIGRvd24gYW4gZXhhY3QgcmVjb3ZlcnkgdGltZWxpbmUgZnJvbSBwbGFudGFyIGZhc2NpYSBpbmp1cmllcyBiZWNhdXNlIGluZGl2aWR1YWwgY2FzZXMgdmFyeSBncmVhdGx5LiBTb21lLCBsaWtlIE5vYWggaW4gMjAxMywgcGxheWVkIHdpdGggY29uc2lkZXJhYmxlIHBhaW4uIExpbGxhcmQgbWlzc2VkIHNldmVuIGdhbWVzICAgdGhlIGZpcnN0IG9mIGhpcyB0aGVuIGZvdXIgeWVhciBwcm8gY2FyZWVyICAgZHVyaW5nIHRoZSAyMDE2IHNlYXNvbi4gClRoZSBvdGhlciBwcm9qZWN0ZWQgdHdvIHNlZWRzIGFyZSBLZW50dWNreSBhbmQgTWljaGlnYW4uIFRoZSByZW1haW5pbmcgdGhyZWUgc2VlZHMgYXJlIE1hcnF1ZXR0ZSwgUHVyZHVlIGFuZCBIb3VzdG9uLCBhbmQgdGhlIG90aGVyIGZvdXIgc2VlZHMgYXJlIE5ldmFkYSwgSW93YSBTdGF0ZSBhbmQgV2lzY29uc2luLgpVZ2gsIEkgZ290dGVuIHNvIG11Y2ggY3JhcCBmcm9tIG90aGVyIHdvbWVuIHdoZW4gSSBoYXZlIGFwcHJlY2lhdGVkIG15IGh1c2JhbmRzIGVmZm9ydHMuIE1hbnkgb2YgdGhlbSB0aGluayBvZiBtZSBhcyBzb21lIHNvcnQgb2YgdW5hYmxlIGFuZCB3ZWFrIGlkaW90LCB3aG8gbXkgc2FkIGh1c2JhbmQgbmVlZHMgdG8gc2F2ZSBldmVyeSBkYXksIGV2ZW4gdGhvdWdoIHRoZXkgaGF2ZSBubyBpZGVhIGhvdyBtdWNoIEkgZG8gYW5kIGhvdyBtdWNoIEkgZ29uZSB0aHJvdWdoIHRoZXNlIHBhc3QgZmV3IHllYXJzIHdpdGggY2hyb25pYyBwYWluIGluIGJvdGggcHJlZ25hbmNpZXMgYW5kIGFsbCB0aGUgaGVhbHRoIGVtZXJnZW5jaWVzLiBPZnRlbnRpbWVzIGl0IHN0cmFpZ2h0IG9uIGJlIGEgYmV0dGVyIHdpZmUgdGhhbiB5b3UiIHNlbnRpbWVudC4gClN0aWxsLCBlY29ub21pc3RzIGFyZSBkaXZpZGVkIG92ZXIgd2hldGhlciBBYmUgZWZmb3J0IHRvIHRoZSBlY29ub215IGFuZCBzdGltdWxhdGUgc3Ryb25nZXIgZGVtYW5kLCB3aGljaCBpcyBpbnRlbmRlZCB0byBicmluZyBhIHZpcnR1b3VzIGN5Y2xlIG9mIGNvbnN1bWVyIHNwZW5kaW5nIGFuZCBpbmNyZWFzZWQgYnVzaW5lc3MgaW52ZXN0bWVudCwgd2lsbCBhY3R1YWxseSB3b3JrLiAKU29ya2luIG1ha2VzIGFuIGltcHJlc3NpdmUgZGlyZWN0b3JpYWwgZGVidXQgaGVyZS4uIApZZXMsIHRoaXMgc3VyZSBkb2VzIGxvb2sgbGlrZSBhbiBvZGQgY2hhcmdpbmcgY2hvaWNlLCBhbmQgSSBiZSBwaXNzZWQgaWYgSSB3ZXJlIGNoYXJnZWQgd2l0aCBEVUkgZm9yIHRha2luZyBhbiBhbnRpZGVwcmVzc2FudCAoZWRpdDogYW5kIHRoYXQgd291bmQgdXAgbm90IGhhcHBlbmluZyBpbiB0aGlzIGNhc2UgLiBTZWUgYmVsb3cpLiBCdXQgaG93IHRoZSBoZWNrIGlzIHRoaXMgYSBwYXJhYmxlIGFib3V0IHRoZSB1bmp1c3Qgc3lzdGVtPyBUaGUgbW9zdCBsaWtlbHkgb3V0Y29tZSBpcyB0aGF0IGEganVkZ2Ugd2lsbCBub3QgZmluZCBwcm9iYWJsZSBjYXVzZS4gClRoZSBtaWNybyBkaXN0aWxsZXJ5IGlzIGNlbGVicmF0aW5nIHNhbGVzIGdyb3d0aCBvZiBtb3JlIHRoYW4gMzAgcGVyIGNlbnQsIGEgbmV3IHByb2R1Y3QgbGluZSwgYW5kIG5ldyBhcmVhcyBvZiBidXNpbmVzcyBncm93dGgsIG9uIHRvcCBvZiBhICQxMCBtaWxsaW9uIGludmVzdG1lbnQgaW4gYSBuZXcgcGxhbnQgb24gSGlnaGJ1cnkgQXZlbnVlLgoiV29tZW4gYW5kIExHQlQgaGF2ZSBtYWRlIHN0cmlkZXMsIGJ1dCBpdCBmZWVscyBsaWtlIGEgZ2lhbnQgd2FsbCBoYXMgYmVlbiBwdXQgdXAgZm9yIHByb2dyZXNzIGluIHRoZSB3b3JsZCwiIHNoZSBzYWlkLiAiV2h5IHNob3VsZCB3ZSBnbyBiYWNrIHRvIGEgdGltZSB3aGVuIHRoZXJlIHdhcyBhIHJlZ3Jlc3NpdmUgc29jaWV0eT8gSXQncyB0aW1lIGZvciBhIGdvb2Qgc29jaWV0eS4gSSBpbnRlbmQgb24gbWFraW5nIHRoYXQgc3RhdGVtZW50LCBwcm9iYWJseSB3ZWFyaW5nIG9uZSBvZiB0aG9zZSByb2Jlcy4iLi4gCldpdGggdGhlIGludHJvZHVjdGlvbiBvZiBDYXB0YWluIE1hcnZlbCBpbnRvIGFuIGFscmVhZHkgY3Jvd2RlZCBmaWVsZCwgdGhlIE1DVSBoYXMgYmVjb21lIHVuYmFsYW5jZWQuIE9yZGluYXJ5IHZpbGxhaW5zIG1pZ2h0IGFzIHdlbGwgZ2l2ZSB1cCBhbmQgY29udmVudGlvbmFsIGhlcm9lcyBjYW4gcmV0aXJlLiAKTWlsbGlvbnMgb2YgcGVvcGxlIHRydXN0IFdlYm5vZGUuIEkgd29ya2VkIHdpdGggV2Vibm9kZSBpbiB0aGUgcGFzdCBhbmQgbG92ZWQgaG93IHVzZXIgZnJpZW5kbHkgaXQgd2FzLiAKVGhlIHJhbmdlIGlzIDE5NWYgMjA1ZiBhbmQgeW91J2xsIHBheSBhIHByZW1pdW0gdG8gZW5zdXJlIHlvdXIgY29mZmVlIG1ha2VyIGNvbnNpc3RlbnRseSBoZWF0cyB3YXRlciB0byB0aGlzIHRlbXAgYW5kIGRvZXMgaXQgcXVpY2tseS4gClRoZSBnaXJscyBhbGwgYXNzZW1ibGUgb24gYSBjb3VjaCB0byB0aGUgcmlnaHQgb2YgdGhhdC4gVGhlIGdpcmxzIHdpbGwgaGF2ZSBlaXRoZXIgYmVlbiBoYW5naW5nIGFyb3VuZCBvdXRzaWRlIG9yIGluIGEgcm9vbSBhdCB0aGUgYmFjay4gCkhvdyB0byBHZXQgdGhlIEJlc3QgV2VsY29tZSBCb251c2VzIGluIE9ubGluZSBDYXNpbm9zCkkgd2FzIGNvbmNlcm5lZCBpbiBjYXNlIHRoZSBicnVzaCB3b3VsZG4ndCBnZXQgaG90IGVub3VnaC4gCkFuZCA1TUIgZGlkbiB0YWtlIHRoYXQgbG9uZyB0byBkb3dubG9hZCwgZXZlbiBvdmVyIGRpYWx1cCkuIApTaGUgaGFkIGFuIGVtb3Rpb25hbCBicmVhayBkb3duIHdoZXJlIHNoZSBmZWx0IGxpa2Ugc2hlIGlzIHRoZSB2aWxsYWluIG9mIHRoZSBob3VzZS4gClBsdXMgdGhlIHN1cnByaXNlIGluIHRoZSBkZWxpdmVyeSByb29tIGlzIExPQURTIE9GIEZVTi4gCkJ1dCBpdCBpcyB2ZXJ5IGJpdHRlciwgYW5kIHN0dXBpZCBob3QuIApJZiB5b3Ugd2FudCB0byB0cnkgaXQgeW91cnNlbGYsIHg9ZWFkIGlzIGEgc3VwZXJzaW1wbGlmaWVkIHZlcnNpb24gb2YgdGhlIGVxdWF0aW9uIChMYW1iZXJ0IHdoZXJlIHggaXMgdGhlIGlucHV0IHBvd2VyLCBhIGlzIHRoZSBjb2VmZmljaWVudCBvZiBhYnNvcnB0aW9uIGFuZCBkIGlzIHRoZSBkZXB0aCBpbiBtZXRlcnMuIApXaGVuIHlvdSBtb3ZlZCB0aGUgZ2FtZSBoZXJlLCBkZWFsaW5nIHdpdGggYmlsbGlvbmFpcmVzLiBUaGVyZSB3YXMgYW4gZWxlbWVudCBvZiBvcmdhbml6ZWQgY3JpbWUgZ2V0dGluZyBpbnZvbHZlZCwgYXMgd2VsbC4gClRoaXMgaXMgb2Z0ZW4gZG9uZSBpbiBhIHZlcnkgZGlyZWN0IHdheSwgcHJhY3RpY2FsbHkgInF1b3RpbmciIHRoZWlyIGhlcm9lcyBieSByZXByb2R1Y2luZywgcmVwdXJwb3Npbmcgb3IgcmVmZXJlbmNpbmcgc2VxdWVuY2VzLi4gClRoZSBmb2xsb3dpbmcgZGF5IHdhcyBvdXIgImJlYWNoIGRheSIuIFdlIGhlYWRlZCBvdXQgb2YgdG93biBhbmQgcGlja2VkIHVwIHR3byBoaXRjaGhpa2VycyAoYmFja3BhY2tlcnMpIHdobyBuZWVkZWQgdG8gZ28gdG8gdGhlIGJlYWNoIHRvby4gV2UgZHJvcHBlZCB0aGVtIG9mZiBhdCBhIGhvc3RlbCB3aXRoIGhhbW1vY2tzIGFuZCBhbGwgSSBjb3VsZCB0aGluayB3YXMgdGhhdCBJIGFtIGRlZmluaXRlbHkgdG9vIG9sZCB0byBzdGF5IGluIHBsYWNlcyB0aGF0IGFyZSAkNCBhIG5pZ2h0ISBPdXIgaG90ZWwgaGFkIHJlY29tbWVuZGVkIHdlIGdvIHRvIFBsYXlhIFJvY2EgaW4gTGFzIFBlbml0YXMuIFdlIGltYWdpbmVkIHJlbnRpbmcgYSBjaGFpciBhbmQgdW1icmVsbGEsIHN3aW1taW5nIGluIHRoZSBnZW50bGUgd2F0ZXIsIGVhdGluZyBmcmVzaCBmaXNoIHRhY29zLiBJbnN0ZWFkLCB3ZSBsYWlkIG9uIGhhcmQgYnJvd24gc2FuZCwgaHVydCBvdXIgZmVldCB3YWxraW5nIG92ZXIgcm9ja3MgaW50byBzdHJvbmcgd2F2ZXMsIGFuZCBhdGUgc29tZSBzb3J0IG9mIGdyZWFzeSBjaGlja2VuIGFuZCBwb3RhdG9lcyBmb3IgbHVuY2guIEhvd2V2ZXIsIHR5cGljYWwgZm9yIHRoaXMgdHJpcCwgYXQgdGhlIGVuZCBvZiB0aGUgZGF5IHdlIHdlcmUgYmxpc3NmdWxseSBoYXBweSEgVGhlcmUgaXMgc29tZXRoaW5nIGFib3V0IHRoZSB2aWJlIG9mIE5pY2FyYWd1YSwgYW5kIGhhdmluZyBzcGVudCBhIGRheSBnZXR0aW5nIHRhbiBhbmQgc2FsdHkgdGhhdCBkb2VzIGEgYm9keSBnb29kLiBUaGUgYmVhY2ggd2FzIG5vdCBjcm93ZGVkIGF0IGFsbCwgYW5kIHRoZSBOaWNhcmFndWFucyB3ZXJlIGFsbCBzd2ltbWluZyBpbiB0aGVpciBjbG90aGVzLCBzbyBwYWxlIEVtaWx5IGFuZCBKZXNzIHJlYWxseSBzdHVjayBvdXQhCkVzcGVjaWFsbHkgY29uc2lkZXJpbmcgdGhhdCB3ZSBhcmUgdGhlIG9sZGVzdCBzdGFuZGluZyBpbiBvdXIgbGl0dGxlIGFyZWEuIApZb3VyIGxpZmUgd2lsbCBOT1QgY2hhbmdlLCB1bnRpbCBZT1UgY2hhbmdlIFlPVVIgbGlmZS4gCkNlcnRhaW5seSwgaWYgeW91IG1ha2UgdXNlIG9mIGEgcHJlIGJ1aWx0IHRoZW1lIGFuZCBkb24gY2hhbmdlIGl0IGF0IGFsbCwgdGhpcyBjYW4gZmVlbCBsaWtlIHlvdSBub3QgZG9pbmcgd2ViIGRldmVsb3BtZW50IGF0IGFsbC4gQSB3b3JkIG9mIGV4cGVyaWVuY2U6IHlvdSB3b24gYmUgbGVhdmluZyB0aGF0IHRoZW1lIHRoZSB3YXkgaXQgaXMuIHdpbGwgd2FudCB0byB0byB0d2VhayBoZWFkZXIgZGVzaWducywgY2hhbmdlIG1lbnUgdGhlbWVzLCBhZGQgc25henp5IGFuaW1hdGlvbnMuIFRoZXkgd2FudCB0byBhZGQgcGFyYWxsYXggc2Nyb2xsaW5nIGFuZCBhbmltYXRlZCBzcHJpdGVzIGFuZCBjb2xvdXJlZCBiYWNrZ3JvdW5kcyB0aGF0IGNoYW5nZSBiYXNlZCBvbiB0aGUgdGltZSBvZiBkYXkuIFRoZXkgd2FudCB0byBlbWJlZCBmdW5jdGlvbmFsaXR5IHRoYXQgZG9lc24gY29tZSBwcmVwYWNrYWdlZCBpbiBhIG5pY2UgbGl0dGxlIHdpZGdldC4KUmVjZW50IHllYXJzLCBudW1lcm91cyBtZWRpY2FsIHN0dWRpZXMgaGF2ZSBjb25maXJtZWQgdGhlIGVzc2VudGlhbCByb2xlIG9mIG1hbmlwdWxhdGlvbiBhbmQgbW90aW9uIGluIHRoZSBtYWludGVuYW5jZSBvZiBkaXNjIGhlYWx0aCwgam9pbnQgbHVicmljYXRpb24gKHN5bm92aWFsIGZsdWlkKSwgYW5kIGFydGljdWxhciBjYXJ0aWxhZ2UgbnV0cml0aW9uLiBJbmNyZWFzaW5nbHksIHJlc2VhcmNoZXJzIGhhdmUgY29uY2x1ZGVkOiB0aGF0IGltcGFpcmVkIGpvaW50IG1vYmlsaXR5LCB3aGljaCBhbHRlcnMgdGhlIGpvaW50IGx1YnJpY2F0aW9uIG1lY2hhbmlzbSwgbWF5IGJlIHRoZSBwcmluY2lwYWwgbWVjaGFuaXNtIGluIHNwaW5hbCBkZWdlbmVyYXRpb24uIFRoZSBqb2ludHMgb2YgdGhlIGJvZHkgYXJlIGF2YXNjdWxhciAobm8gYmxvb2Qgc3VwcGx5KSB3aGljaCBsZWF2ZXMgdGhlbSBkZXBlbmRlbnQgb24gbW92ZW1lbnQuLiAKQnV0IHNoZSB3YXMgYWx3YXlzIGF3YXJlIHRoYXQgYSBjZXJ0YWluIHJlc2VydmUgbGF5IGJlbmVhdGggaGVyIGV4dWJlcmFuY2UuICJLZWxpIHdhcyBub3QgdGhlIHR5cGUgdG8gc2hhcmUgaW50aW1hdGUgcGVyc29uYWwgZGV0YWlscywiIHNoZSBzYXlzLiBOb3cgTGFuZSBsaWZlIGlzIHRvIGJlIGxhaWQgYmFyZS4gT25lIGJ5IG9uZSwgY29sbGVhZ3VlcyBhbmQgYWNxdWFpbnRhbmNlcyBhcmUgY2FsbGVkIHRvIGdpdmUgZXZpZGVuY2UgYWJvdXQgaGVyICAgdG8gcmVjYWxsIGluY2lkZW50cywgdmVudHVyZSBvcGluaW9ucywgcmVwZWF0IGhhbGYgcmVtZW1iZXJlZCBjb252ZXJzYXRpb25zLiAKSXQgaXMgd2hlbiBhIHBsYXllciBwdXRzIHRvbyBtdWNoIHByZXNzdXJlIG9uIGhpbXNlbGYgYXMgYSBwb2tlciBwbGF5ZXIgd2lsbCBoZSB1c3VhbGx5IGJlIHByb25lIHRvIGxvc2luZyBiZWNhdXNlIHRoZSBmb2N1cyBhbmQgcGF0aWVuY2UgbmVlZGVkIGluIHRoZSBnYW1lIGlzIGFmZmVjdGVkIGJ5IHRoZSBuZWdhdGl2aXR5IG9mIHRoZSBwbGF5ZXIuIApZb3UndmUgYWxzbyBjYWxsZWQgbWUgb3V0IGZvciBjb25maXJtYXRpb24gYmlhcywgZXZlbiB0aG91Z2ggeW91J3ZlIHN0aWxsIHByb3ZpZGVkIG5vdGhpbmcgZnJvbSBhbGwgdGhlIHN0dWRpZXMgdGhhdCBzaG93IGhvdyBoZWxwZnVsIHlvdSB0aGluayB0aG9zZSBob3RsaW5lcyBhcmUuCkF0IHRoYXQgcG9pbnQgaXQgd2lsbCBnbyBpbnRvIGEgbG9zdCBmdW5kcyByZWNvcmQuIEkgaGFkIHRoZSBzYW1lIHRoaW5nIGhhcHBlbiBhbmQgaXQgdG9vayBtZSBzb21lIHBob25lIGNhbGxzIGFuZCBhIGxpdHRsZSBkaWdnaW5nIHRvIGdldCBteSBtb25leSBiYWNrIGJ1dCBiZWxpZXZlIG1lIHlvdSBkZWZpbml0ZWx5IGNhbiAuIEl0IHdpbGwgYmUgbGlua2VkIHRvIHlvdXIgc29jaWFsIHNlY3VyaXR5IG51bWJlciBtb3N0IGxpa2VseSBhbmQgeW91IGNhbiBzZWFyY2ggZm9yIGl0IG9uIHZhcmlvdXMgU3RhdGUgd2Vic2l0ZXMgdGhhdCBoYXZlIHRvIGRvIHdpdGggbG9zdCBwcm9wZXJ0eS4gCkdyYW5kIEh5YXR0IEt1YWxhIEx1bXB1ciBoYXMgbW9yZSB0aGFuIDM1LDUzMCBzcXVhcmUgZmVldCAoMywzMDAgc3F1YXJlIG1ldGVycykgb2YgZXhjbHVzaXZlIG1lZXRpbmdzIGFuZCBldmVudHMgc3BhY2UsIHNwYW5uaW5nIHNpeCB1bmlxdWUgdmVudWVzLiAKQW5kIHRoZXJlJ3Mgbm8gcmVhc29uIHRvIHN1c3BlY3QgaGUgd2lsbCBvciB3YW50cyB0byBvciBpcyBldmVuIGFibGUgdG8uIApUaGF0IGNoaWxkcmVuIG9mIHNhbWUgc2V4IHBhcnRuZXJzIG5lZWQgYXQgbGVhc3Qgb25lIHJvbGUgbW9kZWwgb3IgY2FyZSB0YWtlciBpbiB0aGVpciBsaWZlIHRoYXQgaXMgdGhlIG9wcG9zaXRlIHNleCBvZiB0aGVpciBwYXJlbnRzIHNvIHRoYXQgdGhleSBjYW4gZ3JvdyB1cCBiYWxhbmNlZCBhbmQgaGF2ZSBib3RoIGdlbmRlcnMgdG8gbGVhcm4gZnJvbS4gCkN1cmVzZWFyY2ggYW5kIFRob24gdG9nZXRoZXIuIFRoYXQgc291bmRzIGxpa2UgYSBncmVhdCB3YXkgdG8gaGVscCBib3RoIHNpZGVzIG9mIHRoZSBwcm9ibGVtLgpVbnRpbCAyMDE3LCBHYWxsaW5nZXIgd2FzIGEgZGlyZWN0b3Igb2YgcHJvZHVjdCBtYXJrZXRpbmcgc3RyYXRlZ3kgYXQgU29iZXlzLCBDYW5hZGEgc2Vjb25kIGJpZ2dlc3QgZ3JvY2VyeSBjaGFpbi4gU2hlIG1ldCBSb25uZW4gSGFyYXJ5LCBjbyBmb3VuZGVyIGFuZCBjbyBDRU8gb2YgdGhlIFNwaW4gTWFzdGVyIEx0ZC4gdG95IGVtcGlyZSAocmVzcG9uc2libGUgZm9yIGZyYW5jaGlzZXMgc3VjaCBhcyBQQVcgUGF0cm9sIGFuZCBBaXIgSG9ncykgYXQgYSBIYWxsb3dlZW4gcGFydHkgaW4gMjAxNi4KSmUgbidhaSBqYW1haXMgZXUgZCdhZmZpbml0cyBwYXJ0aWN1bGlyZXMgYXZlYyBsYSBjdWlzaW5lIG1leGljYWluZSBtYWlzIHNhbnMgZG91dGUgbidhdmFpcyBqZSBwYXMgZmFpdCBsZXMgYm9ubmVzIGV4cHJpZW5jZXMuIApCdXJuaW5nIGEgY2FyZCBiZWZvcmUgdGhlIGZsb3AsIHR1cm4gYW5kIHJpdmVyIGNhcmRzIGFyZSByZXZlYWxlZCBpcyBhIHByZWNhdXRpb24gZGV2aXNlZCB0byBwcmV2ZW50IGNoZWF0aW5nLiBUaGUgY29uY2VwdCBvZiBidXJuaW5nIGNhcmRzIGRldmVsb3BlZCBhcyBtYW55IHByb2Zlc3Npb25hbHMgcGxheWluZyBmb3IgaGlnaCBzdGFrZXMgd291bGQgb2Z0ZW4gc3VidGx5IG1hcmsgdGhlIGJhY2sgb2YgY2VydGFpbiBjYXJkcywgZ2l2aW5nIHRoZW1zZWx2ZXMgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBhYm91dCB3aGF0IGNhcmQgd2FzIG9uIHRvcCBvZiB0aGUgZGVjayAoYW5kIGhlbmNlIG5leHQgdG8gYmUgcGxheWVkKS4gU2ltaWxhcmx5IGluIGdhbWVzIHdoZXJlIHRoZSBkZWFsZXIgaXMgcGxheWluZywgaXQgaXMgYWxzbyBnb29kIHByYWN0aWNlIHRvIGhhdmUgc29tZW9uZSBvdGhlciB0aGFuIHRoZSBkZWFsZXIgc2h1ZmZsZSB0aGUgY2FyZHMsIGFuZCBzb21lb25lIGVsc2UgdG8gY3V0IHRoZSBjYXJkcy4gVGhpcyBlZmZlY3RpdmVseSBlbGltaW5hdGVzIG1hbnkgbWV0aG9kcyBvZiB0cmljayBzaHVmZmxpbmcvdHJpY2sgY3V0dGluZy9ib3R0b20gZGVhbGluZy4KSmVycnksICJVS0UiIEtBTkNFUgpPbiB0aGUgbmlnaHQgb2YgdGhlIGRheSBoZSBkaWVkIEkgd2FzIHdhaXRpbmcgZm9yIG15IHRyYWluIGhvbWUgZnJvbSB3b3JrLiBXaGlsZSB3YWl0aW5nIEkgbm90aWNlZCBhIHN0YXRpb25hcnkgZ2xvd2luZyBncmVlbiBiYXIgb2YgbGlnaHQgaGlnaCB1cCBvbiB0aGUgd2FsbC4gCklhbiBhbmQgSmFtaWUncyByZWxhdGlvbnNoaXAgaXMgb25lIG9mIG15IGZhdm9yaXRlcy4gR2V0dGluZyBpbnRvIHRyb3VibGUgdG9nZXRoZXIgZnJvbSB0aGUgbGl0ZXJhbCBtb21lbnQgaGUgd2FzIGJvcm4sIGhhaGEuIEkgYW0gaG9waW5nIHRoYXQgSWFuIHdpbGwgZ2V0IHNvbWUgb2YgaGlzIG93biBQb1Ygc2NlbmVzIHdpdGggdGhlIE1vaGF3ayBpbiBzNSwgSSB0aG91Z2h0IHRoZSBmaWxtaW5nIG9mIHRoZSBnYXVudGxldCBzY2VuZSArIGhpcyBhY2NlcHRhbmNlIGludG8gdGhlIE1vaGF3ayBhZnRlciBKYW1pZSBhbmQgQ2xhaXJlIGxlZnQsIGJvZGVzIHdlbGwgZm9yIG1vcmUgSWFuIHNjcmVlbiB0aW1lIGluIHNlYXNvbiA1Li4gCkNvbmNsdXNpb246ICJPdXIgaHVtYW4gYW5jZXN0b3JzIHdlcmUgbm90IHdob2xseSBjYXJuaXZvcmVzICAgInRoYXQgd291bGQgYmUgc2lsbHksIiBzYWlkIEFpZWxsbywgd2hvIGRvZXMgbm90IGFyZ3VlIHRoYXQgbWVhdCBlYXRpbmcgY2F1c2VkIGJpZ2dlciBicmFpbnMgICBqdXN0IHRoYXQgaXQgbWFkZSBiaWdnZXIgYnJhaW5zIHBvc3NpYmxlLiIKUGF5IGF0dGVudGlvbiB0byB0aGUgY2xpdG9yaXMuIEJlIGdlbnRsZSB3aXRoIGl0LiAKV2hhdCBoYXBwZW5zIGlmIHlvdSBzYXV0IGEgdmVnZXRhYmxlIGFuZCBtYXliZSBhZGQgYSB0aW55IGJpdCBvZiBsZW1vbiBhbG9uZyB3aXRoIHRoZSBzYWx0PyBBbmQgbWF5YmUgbGlrZSwgYWRkIGEgbGl0dGxlIGN1bWluIGFuZCBwZXBwZXIgdG8gdGhlIG1lYXQ/IE1heWJlIGlmIHlvdSBtYWtlIHZlcnkgdGlueSBzdGVwcyBpbiBhIGdvb2QgZGlyZWN0aW9uLCBzaGUgbWlnaHQgbm90IGV2ZW4gbm90aWNlLCBzaW5jZSBpdCBqdXVzc3Qgc2ltaWxhciBlbm91Z2ggdG8gd2hhdCBzaGUgdXNlZCB0byB0aGF0IHNoZSBzdGlsbCBmaW5kcyBpdCBhcHBlYWxpbmc/IFRoZW4geW91IGNvdWxkIGdyYWR1YWxseSB1cCB0aGUgIndlaXJkbmVzcyIgYXMgaGVyIHBhbGF0ZSBkaXZlcnNpZmllcz8KVGhlIHdvcmsgaXMgcGFydCBvZiBhIHJlZnVyYmlzaG1lbnQgcHJvZ3JhbSB3aGljaCwgYnkgeWVhcidzIGVuZCwgd2lsbCBoYXZlIHJlc3VsdGVkIGluIGFib3V0ICQyLjMgbWlsbGlvbiBoYXZpbmcgYmVlbnJlIGludmVzdGVkIGludG8gdGhlIGNsdWIgaW4gYnVpbGRpbmcgYW5kIHJlbWVkaWFsIHdvcmtzIGluIHJlY2VudCB0aW1lcy4gCkkgYWxzbyBtZXQgYSByZWFsIGhvdCBDaGluZXNlIGdpcmwuIEFic29sdXRlIG1vZGVsIHF1YWxpdHkuIEJlYXV0aWZ1bCBzbWFsbCBmYWNlLCBzbGVuZGVyLCBiaWcgdGl0cywgYW5kIHN1cnByaXNpbmdseSBhbiBhd2Vzb21lIGJ1YmJsZSBidXR0LiAKRm9yIHdoYXQgaXQncyB3b3J0aCAgSSBhbSBwcm91ZCBvZiB5b3UuIFlvdSB0b29rIGluIGtpZHMgdGhhdCBuZWVkZWQgYSBob21lLiBZb3UgbWFkZSBzdXJlIHRoYXQgeW91ciBiZXN0IGZyaWVuZCBjYW4gcmVzdCBlYXN5IGJlY2F1c2Ugc2hlIGtub3dzIHlvdSBsb3ZlIHRob3NlIGNoaWxkcmVuIGFuZCB3aWxsIHRha2UgY2FyZSBvZiB0aGVtLiAKSW5kaWEgaGFzIGEgbHlpbmcgcHJvYmxlbS4gVGhlIHBlb3BsZSBkb24gbWF0Y2ggdGhlIHJlc3VtZXMuIApOZXh0IHRpbWUgSSBrbm93IHdoYXQncyBnb2luZyBvbiBJJ20gaGFuZGN1ZmZlZCBvbiBteSBrbmVlcyB3aXRoIGEgY3Jvd2QgT2YgMTUgcGVvcGxlIGFuZCBwb2xpY2Ugb2ZmaWNlcnMgaW4gdGhyZWUgZGlmZmVyZW50IHVuaWZvcm1zIGF0IGxlYXN0LiAKVmFuIGJvdmVub3AgZGUgaGV1dmVscyBoYWRkZW4gd2UgZ29lZCB6aWNodCBvcCBkZSBtb29pZSBsaWdnaW5nIHZhbiBoZXQgc3RhZGplLiAKVGhpcyBndXkgaXMgdGFraW5nIHlvdSBmb3IgYSByaWRlIHRvIHNlbGwgYSBwb2xpdGljYWwgYXJndW1lbnQuIE15IGNvd29ya2VycyBkbyBpdCB0b28uIEkgbGl0ZXJhbGx5IGFsc28gYSAyMyB5ZWFyIG9sZCB3aXRoIG15IGZpcnN0IGNhcmVlciBqb2Igb3V0IG9mIGNvbGxlZ2UgKG9ubHkgSSBhbHNvIGJlZW4gd29ya2luZyB0byBnZXQgdGhyb3VnaCBjb2xsZWdlKS4gClRoZXJlIHNob3VsZCBiZSBhIG9uZSBtb3JlIHBhcnR5IHRvIHRyYW5zZmVyIG9yIHJlY2VpdmUgdGhlIG1lc3NhZ2UuIApDb29raWVfIF9Nb25zdGVyICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpTY2FsaWEgYWxzbyBzdXBwb3J0ZWQgZnJlZSBzcGVlY2ggcmlnaHRzLCBidXQgY29tcGxhaW5lZCB0b28uIERvIG5vdCBsaWtlIHNjcnVmZnkgcGVvcGxlIHdobyBidXJuIHRoZSBBbWVyaWNhbiBmbGFnLCBoZSBzYWlkIGluIDIwMDIsIGJ1dCB0aGUgRmlyc3QgQW1lbmRtZW50IGdpdmVzIHRoZW0gdGhlIHJpZ2h0IHRvIGRvIHRoYXQuIApVbnRlcmhhbHRzYW0gdm9yZ2VsZXNlbmUgQW5la2RvdGVuLCBrdXJ6ZSBHZXNjaGljaHRlbiwgRXBpc29kZW4gdW5kIEVyaW5uZXJ1bmdzbW9tZW50ZSBhbiBlaW5lIEtpbmRoZWl0IGluIGRlbiA1MGVyLzYwZXIgSmFocmVuIGF1ZiBkZXIgSW5zZWwgVGVuZXJpZmZhLCBhbiBSZWJlbGxpb24sIGx0ZXJ3ZXJkZW4sIEJlZ2VnbnVuZ2VuLCBUb2QgdW5kIExpZWJlLiBNb21lbnRlIGJpcyBoaW4gaW4gZGllIEdlZ2Vud2FydCB1bmQga2xlaW5lIExpZWJlc2Vya2xydW5nZW4gYW4gRnJhdWVuLiBEZXIgc3BhbmlzY2hlIFVudGVydGl0ZWwgQ2hpbGFqaXRvcyBrb21tdCB2b24gY2hpbGFqb3MgdW5kIGRhcyBzaW5kIGRpZSBrbGVpbnN0ZW4gV2VydGUgYmVpbSBLYXJ0ZW5zcGllbCBsaXRlcmFyaXNjaGUgTWluYXR1cmVuIGJlaSBNYXJhIEd1dGlycmV6LiBEaWUgQXV0b3JpbiBtYWNodCBFcmlubmVydW5nZW4gdW5kIEFuZWtkb3RlbiB6dSBhdWVyZ2V3aG5saWNoZW4gRXJlaWduaXNzZW4sIHNjaGFmZnQgQmlsZGVyLCBkaWUgZGllIEZhbnRhc2llIGFucmVnZW4sIGVpbmUgb3JpZ2luZWxsZSBBbnNjaGF1dW5nIGRlciBSZWFsaXR0LCBzaWUgbWFjaHQgZGllIE1hZ2llIGRlciBNb21lbnRlIGVyZmFocmJhci4KSWYgeW91IHNvbWVob3cgaGFkIGEgc2V0LCBkb24ndCB5b3UgdGhpbmsgeW91IHdvdWxkJ3ZlIHB1dCBpbiBhIHNtYWxsIHZhbHVlIGJldCB3aGVuIGhlIGNoZWNrcyB0byB5b3U/IEluIGFkZGl0aW9uLCB0aGUgdHVybiBpc24ndCBhIHNjYXJlIGNhcmQgd2hhdHNvZXZlci4gU28gaWYgdmlsbGFpbiBpcyBwZXJjZXB0aXZlIGVub3VnaCwgeW91IGNhbiBzZWUgd2h5IHlvdXIgbGluZSBkb2Vzbid0IG1ha2Ugc2Vuc2UuLiAKU28gbm93IEluZGlhIGFuZCBEZW5tYXJrIG11c3QgaW52YWRlIHRoZSBVUy4gClRlc3RkZXggIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNCBkYXlzIGFnbwpEYW5keSBsaWVzIHRvIG9idGFpbiB0aGUgcHJpc29uZXIuIApUaGUgZ2FtZXBsYXkgb2YgWWFrdXphIGhhcyB0aGUgcGxheWVyIGNvbnRyb2xsaW5nIEtpcnl1IChvciBhbm90aGVyIGNoYXJhY3RlciBkZXBlbmRpbmcgb24gdGhlIHRpdGxlKSBpbiBhbiBvcGVuIHdvcmxkIHdoZXJlIHlvdSBjYW4gZmlnaHQgdGh1Z3MsIGVuY291bnRlciBhIHZhcmlldHkgb2YgZW50aHJhbGxpbmcgc2lkZSBxdWVzdHMsIHBsYXkgc29tZSBkYXJ0cywgZ28gYm93bGluZywgY2hhdCB3aXRoIGhvc3Rlc3NlcywgYW5kIGV2ZW4gc2luZyBrYXJhb2tlLi4gClNvcnJ5IGZvciBleGFnZ2VyYXRpbmcuIEJ1dCB0aGV5IGRvIHByb3Zva2UgS29yZWEgb24gdmFyaW91cyBpc3N1ZXMuIApBbmQgYXMgdGhlIFNPIHRyeWluZyB0byBoZWxwIGhpbSwgcGxlYXNlIGRvIG5vdCBhZGQgdG8gdGhlIHByZXNzdXJlIG9yIGdpdmUgaW4gdG8gYmFyZ2FpbmluZy4gCkluIHRoZSBldmVudCB0aGF0IHRoZXkgZGlkIGNvbWUgdG8gaGltIHdpdGggcXVlc3Rpb25zIGFib3V0IHRob3NlIGJsb29keSBzaG9lIHByaW50cywgaGUgd291bGQgc2ltcGx5IGJlIGFibGUgdG8gc2F5ICdJIHdlYXIgYSBzaXplIDEwLCcgIiBOaWV0byBleHBsYWluZWQuIApUaGVuIHR3byB5ZWFycyBhZ28gSSBzdHVtYmxlZCBhY3Jvc3MgdGhpcyBzdWIgYW5kIHdlbnQgY3JhenkgSSBzdGlsbCBhIGJlZ2lubmVyIGluIHJlYWxpdHkgYnV0IEkgaGF2ZSBzbyBtdWNoIGZ1biB0aHJvd2luZyBJIGRvbiByZWFsbHkgY2FyZSBhYm91dCBteSBza2lsbCBhcyBtdWNoLiBJIGxvdmUgd2F0Y2hpbmcgeW91IGFsbCB0aHJvdyB0aGlzIGlzIGhvbmVzdGx5IHN1Y2ggYSBncmVhdCBjb21tdW5pdHkgZXZlcnlvbmUgaXMgcmVhbGx5IHdlbGNvbWluZyBhbmQgaGVscGZ1bC4gSXQgdmVyeSByZWZyZXNoaW5nIHdoZW4gY29tcGFyZWQgdG8gdGhlIGdhdGVrZWVwaW5nIHRoYXQgZ29lcyBvbiBpbiBvdGhlciBob2JiaWVzL3N1YnMuIFdoZXRoZXIgeW91IGJlZW4gdGhyb3dpbmcgZm9yIGEgZGF5IG9yIHRlbiB5ZWFycywgeW91IHNwZW50ICQxMCBvciAkMTAwLCBpZiB5b3UgaGF2ZSAxIHlveW8gb3IgNTAgZXZlcnlvbmUgaXMgd2VsY29tZSBoZXJlLgpPcGVuaW5nIHNhbHZvIGlzIGEgZG91YmxlIGVkZ2VkIHN3b3JkIGFnYWluc3QgbGFyZ2Ugc2hpcHMuIApIb3dldmVyLCBhcyBjZWxscyBkaXZpZGUsIHdoaWNoIHRoZXkgZG8gdGhyb3VnaG91dCBvdXIgbGl2ZXMgdG8gcmVwbGVuaXNoIHNraW4gYW5kIG90aGVyIG9yZ2FucywgdGVsb21lcmVzIHNocmluay4gT25jZSB0ZWxvbWVyZXMgYXJlIHRvbyBzbWFsbCwgY2VsbHMgc3RvcCBkaXZpZGluZyBhbmQgb3VyIHNraW4gKGFuZCBvdGhlciBvcmdhbnMpIGJlZ2luIHRvIGRlZ3JhZGUuIApUaGlzIHdpbGwgdGFrZSAzIG9yIDQgdHJpZXMsIGFzIFhpbmcgd2lsbCByZSBhc3NlbWJsZSB3aXRoIHdoYXRldmVyIHJlbWFpbmluZyBjb21wb25lbnRzIGFyZSBzdGlsbCBhYmxlIHRvIGNvbWJpbmUsIGJ1dCBnaXZlbiBlbm91Z2ggcGF0aWVuY2UgeW91IGNhbiBkZWZlYXQgdGhpcyBib3NzLi4gCkhBSEFIQSEgTXkgbGl0dGxlIGNvdXNpbiBjYWxsZWQgcG9vcGluZyAiYm9vcGluZyIgZm9yIHRoZSBsb25nZXN0IHRpbWUuIEhlIHdlbnQgdGhyb3VnaCBhICh0aGFua2Z1bGx5IHZlcnkgYnJpZWYpIHBlcmlvZCB3aGVyZSBoZSB3b3VsZCAiY2hlY2sgb3VyIGRpYXBlcnMiIGZvciB1cywgZXNwZWNpYWxseSBoaXMgbW9tIEhlIGdvIGFyb3VuZCBiZWhpbmQgYW5kIHlhbmsgb24gdGhlIGJhY2sgb2YgaGVyIGplYW5zIGFuZCBsb29rIGRvd24gYXQgaGVyIGJ1dHQuIApXZSBhbHJlYWR5IG1lbnRpb25lZCBpbiBvdXIgcHJldmlvdXMgYXJ0aWNsZXMgdGhhdCB0aGVyZSBhcmUgYmVuZWZpdHMgZm9yIGJlZ2lubmVycyBsaWtlIHlvdSBpbiBqb2luaW5nIHRoZXNlIGxpdmUgcG9rZXIgdG91cm5hbWVudHMgb3IganVzdCBiYXNpY2FsbHkgcHJhY3RpY2luZyBwb2tlciBvbiB0aGUgSW50ZXJuZXQuIFdlIHNhaWQgdGhhdCBhIGJlbmVmaXQgb2Ygb25saW5lIHBva2VyIGdhbWluZyBpcyB0aGF0IGJlZ2lubmVycyBsaWtlIHlvdSBjYW4gc3RhcnQgYnVpbGRpbmcgYSBiYW5rIG9mIGV4cGVyaWVuY2UgYW5kIG1vbmV5LgpTbyBJIGlzZWQgdG8gaGF2ZSBhIHBhcnR5IHRyaWNrIHdoZXJlIEkgd291bGQgbGlnaHQgbXkgZmFydHMgb24gZmlyZS4gCkJhcmdlcyBpbnRvIGJlZHJvb21zIGZvciBtYWRlIHVwIHJlYXNvbnMKQU9MIGF0dGVtcHRlZCB0byBiZSB0aGlzIHNxdWFyZSwgZmFtaWx5IGZyaWVuZGx5ICJlbnRpcmUgaW50ZXJuZXQgaW4gb25lIGFwcGxpY2F0aW9uIiwgYnV0LCBzZWV0aGluZyBiZW5lYXRoIHRoZSBzdXJmYWNlIHdhcyBjaGFvcyBhbmQgaWxsZWdhbGl0eS4gVGhlIGtpZHMgdXNpbmcgZmFrZSBhY2NvdW50cyB0byBkb3dubG9hZCBwb3JuIGFuZCB3YXJleiAoY3JhY2tlZCBhbmQvb3IgcGlyYXRlZCBzb2Z0d2FyZSkgd2FzIGRlZmluaXRlbHkgdGhlIGxlYXN0IG9mIHRoZSBpbGxlZ2FsIHRoaW5ncyB0byB3b3JyeSBhYm91dC4gSSByZW1lbWJlciB0aGUgZmlyc3QgdGltZSBhIDQwIHllYXIgb2xkIHdvbWFuIGxlZCBtZSBvbiBmb3IgYSB3ZWVrIG9yIHR3byB0aGF0IHNoZSB3YXMgb25seSBpbiBoZXIgZWFybHkgMjAgWWVhaC4gLiAuIGFzIGZhciBhcyBJIGtub3csIEFPTCBpcyB0aGUgb3JpZ2luIG9mIHRoZSB0ZXJtcyAiY3liZXIiLCBhcyBpbiBjeWJlcnNleCwgYW5kICJBU0wiIChBL1MvTCksIGFzIGluLCBhZ2UsIHNleCwgbG9jYXRpb24uClRoZXkgd2VyZSBzbyBmdW4gYW5kIGNvb2whIFRoZW4gdGhyb3VnaCBtaWRkbGUgYW5kIGhpZ2ggc2Nob29sIHdlIGRyaWZ0ZWQgYSBiaXQuIFdlIGxvdmVkIHRoZW0gYnV0IHdlcmVuJ3QgY2xvc2UuIAogMyBwb2ludHMgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnb0l0cyBvbmx5IHdvcnRoIGlmIHlvdSBhbHJlYWR5IG1heGVkIHRoZSBqb2Igb24geW91ciBjdXJyZW50IGNsYXNzIGJlY2F1c2UgeW91IGRvbiBoYXZlIHRvIGdvIHRocm91Z2ggdGhlIHNoYXJkcyBhZ2FpbiB5b3UganVzdCBoYXZlIHRvIGxldmVsIHVwLiBPYnZpb3VzbHkgaXMgd29ydGggYmVjYXVzZSB5b3UgY2FuIHNoYXJlIGdvbGQgbWVkYWxzIGFuZCBjb250cmlidXRpb25zLiAKVGhleSBmdXJ0aGVyIGFyZ3VlIHRoYXQgdGhlcmUgYXJlIGxpdHRsZSB0byBubyBoZWFsdGggYmVuZWZpdHMgb3V0c2lkZSB0aGVzZSB0d28gbGltaXRlZCByYW5nZXMuIApJIGhhdmVuIHdvcmtlZCBpbiB0aGUgSG9ob2thbSBhcmVhLCBvciByZWFsbHkgZXZlbiB0cmF2ZWxsZWQgdGhlcmUgbXVjaCwgYnV0IEkga25vdyBpdCB2ZXJ5IGRyeS4gCkplIHN1aXMgZW4gYWRtaXJhdGlvbiBkZXZhbnQgdG91cyBjZXMgamV1bmVzIG1lY3MgcGFyZmFpdGVtZW50IGdhcm9ubmllcnMgZXQgcXVpIHNlIGZvbnQgZW1wYWxlciBzYW5zIHNlIHRyYW5zZm9ybWVyIGVuIGZlbWVsbGVzIGdsYXBpc3NhbnRlcyB0b3V0IGVuIGJhbmRhbnQgY29tbWUgZGVzIGNlcmZzIG1haXMgamUgbmUgc2FpcyBwYXMgZmFpcmUuIEplIHN1aXMgc2FucyBkb3V0ZSBuIHRyb3AgdHQgISBMZSBtb25kZSBlc3QgdnJhaW1lbnQgdHJzIG1hbCBmYWl0IGV0IGplIG4nYWkgZ3VyZSBkZSBjaGFuY2UuVnUgbGEgdG91cm51cmUgdHJhZ2lxdWUgZGUgbCdwb3F1ZSwgY2Ugbidlc3QgcGFzIG1vaSBxdWkgdmFpcyByZXByb2NoZXIgIGNlcyBqZXVuZXMgZGUgY29tcGVuc2VyIGxlcyBhZmZyZXMgY29ub21pcXVlcyBkZSBsYSB2aWUgYWN0dWVsbGUgcGFyIGNlIGdlbnJlIGQnYW11c2VtZW50IHZvcXUgc2kgYSBsZXMgbWV0IGRlIHRycyBib25uZSBodW1ldXIsIG1haXMgbGUgbW9kZSBkZSB2aWUgZmFvbiBjaWdhbGUgbmUgcHJzYWdlIHJpZW4gZGUgYm9uLiAKRXZlbiBhcyB0aGUgVXR0YXJha2hhbmQgc3RhdGUgZmFjZWQgdGhlIHdvcnN0IGZsb29kcyBpbiBpdHMgaGlzdG9yeSwgdGhlIENXQywgd2hpY2ggaGFzIGJlZW4gZ2l2ZW4gdGhlIHRhc2sgb2YgZm9yZWNhc3RpbmcgZmxvb2RzIGFjcm9zcyBmbG9vZCBwcm9uZSBhcmVhcyBhbGwgb3ZlciBjb21wbGV0ZWx5IGZhaWxlZCBpbiBtYWtpbmcgYW55IGZvcmVjYXN0cyB0aGF0IGNvdWxkIGhhdmUgaGVscGVkIHRoZSBwZW9wbGUgYW5kIGFkbWluaXN0cmF0aW9uIGluIFV0dGFyYWtoYW5kLgpBIHdlaWdodGVkIGF2ZXJhZ2UgaXMgbGlrZSBhbiBhdmVyYWdlIHdpdGggYW4gZXh0cmEgc3RlcC4gVGFrZSBhIDEwIHBlcnNvbiBzYW1wbGUgd2l0aCB0d28gc3ViZ3JvdXBzLiBHcm91cCBBIGhhcyAyIHBlb3BsZSBhbmQgYW4gYXZlcmFnZSBvZiA1LiBHcm91cCBCIGhhcyA4IHBlb3BsZSBhbmQgYW4gYXZlcmFnZSBvZiAxMC4gV2Ugd2FudCB0byBkbyBhIHdlaWdodGVkIGF2ZXJhZ2Ugb2YgdGhlc2UgdHdvIGdyb3Vwcy4gTm9ybWFsbHkgZm9yIGFuIGF2ZXJhZ2UgeW91J2QganVzdCBhZGQgdXAgYW5kIGRpdmlkZSBieSB0aGUgbnVtYmVyIG9mIHZhbHVlcywgYnV0IHRoZSBncm91cHMgaGF2ZSBkaWZmZXJlbnQgbnVtYmVycyBvZiBwZW9wbGUgc28gd2UgY2FuJ3QgZG8gdGhhdC4gQmVsb3cgaXMgaG93IEknZCBmaW5kIHRoZSB3ZWlnaHRlZCBhdmVyYWdlIGZvciBteSBleGFtcGxlLgpJdCBjbGVhciB0aGVpciBmb2N1cyBpcyBvbiBDU0dPLCBEb3RhLCB0aGlzIGNhcmQgZ2FtZSwgZXRjLiBHYW1lcyB0aGF0IG1ha2UgZXNwb3J0cyBhbmQgcHVsbCBpbiBhIGZ1Y2sgbG9hZCBvbiBtaWNyb3RyYW5zYWN0aW9ucyBhbmQgYXJlIGFpbWVkIGZvciBsYXJnZSBhdWRpZW5jZXMgYW5kIGxvbmcgbGlmZXNwYW5zLiBOb3QgYXQgYWxsIHRoZSBzYW1lIG1hcmtldCBhcyBQb3J0YWwsIEhhbGYgTGlmZSwgTGVmdCBmb3IgRGVhZC4KMS4gT3ZlcnZpZXcKSGUgYm91Z2h0IGEgRm9yZCBkZWFsZXJzaGlwIGluIFNjaGF1bWJ1cmcsIElsbC4sIGZyb20gQXV0b05hdGlvbiBJbmMuIEhpcyBvd24gSG9uZGEgc3RvcmUgYWNyb3NzIHRoZSBzdHJlZXQgd2lsbCBtb3ZlIHRvIGEgbmV3IHNob3dyb29tIG9uIDExIGFjcmVzIG5lYXJieSwgYW5kIGhlIHdpbGwgcmVmdXJiaXNoIHRoZSBjdXJyZW50IGRlYWxlcnNoaXAgZm9yIGFuIGV4aXN0aW5nIEtpYSBmcmFuY2hpc2UuIApIZSBzYXlzIGhlIGNoYW5nZSwgYnV0IG5vdyB3ZSBhcmUgYmFyZWx5IHNwZWFraW5nIGFuZCBpdCBzbyBmcmVha2luZyBhd2t3YXJkIGluIG91ciBob3VzZSByaWdodCBub3cuIApFYWNoIGNvbXBhbnkgd291bGQgb3duIDUwJS4gSXQgdG9vayBvbmx5IGZvdXIgaG91cnMgZm9yIHRoZSBtYW5hZ2VtZW50IHRlYW0gYXQgQm95ZCBHYW1pbmcsIHdoZXJlIEJvdWdobmVyIHdhcyB0aGVuIGNoaWVmIG9wZXJhdGluZyBvZmZpY2VyLCB0byBkZWNpZGUgdG8gcHJvY2VlZC4gIlR3byB3ZWVrcyBsYXRlciwgd2UgaGFkIGFuIGFncmVlbWVudCB0byBkbyBhICQ1MDAgbWlsbGlvbiBkZWFsLCIgaGUgc2F5cy4uIApUaGlzIGlzIHdoZW4geW91IGNhbiBzZWUgdGhyb3VnaCB0aGUgbGllLiAKVGhlcmUgd2FzIGEgbG90IG9mIHRoaW5ncyB0aGF0IHRoYXQgd2VyZSBkb25lIGhvcGVsZXNzIGZpZWxkLiBDb21mb3J0YWJsZSBjb25maWRlbmNlIGFuZCB0aGF0IHRob3NlIHRoYXQgd291bGQgY29tbWl0IGNyaW1lcyBsaWtlIHRoaXMuIE9uIHRoZSBzdHJpcCBtYWxsIHdpbGwgYmUgaHVudGVkIGRvd24gYW5kIHdoYXRldmVyIGFtb3VudCBvZiBjYXNoIGFuZCBnb2QgaXMgbm90IGVub3VnaCB0byBmYWNlIGEgbGlmZXRpbWUgaW4gcHJpc29uLiAKRnJvbSBJbmRpYSwgdGhlIHRyZW5kIHNwcmVhZCB0byBDaGluYSwgd2hlcmUgdGhlIENoaW5lc2UgdG9vayB0aGUgbmFpbCBnYW1lIHVwIGEgbGV2ZWwgc29tZXRpbWUgYXJvdW5kIDMwMDAgQkNFLiBUaGV5IGNyZWF0ZWQgYSBzb3J0IG9mIG5haWwgdmFybmlzaCB1c2luZyBhIG1peHR1cmUgb2YgZWdnIHdoaXRlcywgYmVlc3dheCwgZ2VsYXRpbiwgZ3VtIEFyYWJpYyAoc2FwIGZyb20gdGhlIGFjYWNpYSB0cmVlKSBhbmQgYWx1bSwgdGhlbiBjb2xvcmVkIHRoYXQgd2l0aCBmbG93ZXIgcGV0YWxzLCBvciBnb2xkIG9yIHNpbHZlciBkdXN0LiAKVGhpcyBpcyBhIHNtYWxsIHRpcCBvZmYgd2hldGhlciBvciBub3QgeW91IGxvb2tpbmcgZm9yIGp1c3QgYSBsZWdpdCBtYXNzYWdlIG9yIHNvbWV0aGluZyBtb3JlLiBUaGV5IHdpbGwgb2Z0ZW4gYXNrIHlvdSBpZiB0aGlzIGlzIHlvdXIgZmlyc3QgdGltZSB0aGVyZS4gQWx3YXlzIHNheSBOTy4gClRoZXJlIGlzIG9ubHkgb25lIGVhcmJ1ZCAod2lyZWQpIHRoYXQgc3RheXMgZm9yIG1lLiAKV2hlbiBJIGNhbWUgYWNyb3NzIG15IG1vdGhlciwgd2hvIHdhcyBjYXN1YWxseSB3YXRjaGluZyBUViwgSSBhc2tlZCBoZXIsICJXaGF0IHRoZSBmdWNrIHdhcyB0aGF0IGNyYXNoPyEiIFNoZSBsb29rZWQgYXQgbWUgd2l0aCBhIGxvb2sgb2YgYmV3aWxkZXJtZW50LiAKWWVzLCB0aGF0IGxpdHRsZSBib3R0bGUgY29zdHMgdGhhdCBtdWNoLCBhbmQgdGhleSBwcm91ZCBvZiBpdC4gCk5hbWFzdGUgU29sYXIgaGFzIHJhaXNlZCBtb3JlIHRoYW4gJDMuMSBtaWxsaW9uIGZyb20gbW9yZSB0aGFuIDkwIGludmVzdG9ycywgYWNjb3JkaW5nIHRvIGEgc3RhdGVtZW50IGlzc3VlZCBieSB0aGUgY29tcGFueS4gVGhlIHByb2NlZWRzIGZyb20gdGhlIG9mZmVyaW5nIHdpbGwgYmUgdXNlZCBmb3Igd29ya2luZyBjYXBpdGFsIGFuZCB0byBmdW5kIHRoZSBjb21wYW55J3MgbmF0aW9uYWwgZXhwYW5zaW9uLgpJIHdvdWxkIHN1Z2dlc3QgcnVubmluZyB0aGUgc2FtZSBzaW0gd2l0aCBtdWx0aXBsZSBiZXQgc2l6aW5ncyBzZWUgd2hpY2ggb25lIGl0IHByZWZlcnMgYW5kIHRoZW4gcmUgcnVuIGl0IHdpdGgganVzdCB0aGF0IHNpemluZyBhbmQgc2VlIHdoYXQgaXQgY29tZXMgdXAgd2l0aC4uIApDb250cmFzdCB0aHJlYWQgaXMgbGlrZSBhIGhpZ2hsaWdodGVyLCBhbmQgeW91IGRvbiB3YW50IHRvIGhpZ2hsaWdodCB3b2JibHkgbGluZXMuLiAKSHR0ZW4gc2ljaCBhbGxlIGRpZXNlIFN0dWRlbnRlbiBmciBkaWUgTGVocmUgZW50c2NoaWVkZW4sIHdyZSBpaG5lbiAoaWhyZXIgZWlnZW5lbiBNZWludW5nIG5hY2gsIGRhIGVzIGlobmVuIGVnYWwgd2FyKSBuaWNodHMgdmVybG9yZW4gZ2VnYW5nZW4sIGFiZXIgZGllIE1lbnNjaGVpdCB3cmUgdW0gZWluIGxpdGVyYXJpc2NoZXMgV2VyayByZWljaGVyLiAoQXVlcmRlbSBrbm50ZSBkZXIgU3RhYXQsIGRlciBkYW1pdCBHZWxkIHNwYXJ0LCBkaWVzZXMgZnIgYW5kZXJlIHByb3NvemlhbGUgRGluZ2UgYXVzZ2ViZW4sIG9kZXIgYXVjaCBkaWUgS29uZGl0aW9uZW4gZGVyIHZlcmJsZWliZW5kZW4gU3R1ZGVudGVuIHZlcmJlc3Nlcm4pLiAKSXQgbm90IGRpdmVyc2l0eSB0aGF0IENhbmFkaWFuIHVuaXZlcnNpdGllcyBhcmUgYWZ0ZXIgdGhvdWdoLCBwcmVjaXNlbHkgdGhlIG9wcG9zaXRlLiBJIHRoaW5rIGl0IGhhcyBiZWVuIG1lcml0b2NyYWN5IGZvciBhZG1pc3Npb24gcHJvY2VzcyBhdCB0aGUgbGVhc3QsIHdpdGggZ3JhbnRzIGJlaW5nIGhhbmRlZCBvdXQgb24gYSBtb3JlIHN1YmplY3RpdmUgZ3JvdW5kIGJhc2VkIG9uIG5lZWRzIGFuZCBwb2xpdGljYWwgbWlub3JpdHkgc3RhdHVzLiBJdCBtYXkganVzdCBiZSB0aGF0IENoaW5lc2Ugc3R1ZGVudHMsIG9yIHJhdGhlciBlYXN0L3NvdXRoZWFzdCBhc2lhbiBzdHVkZW50cyBhcmUgYW1vbmcgdGhlIG1vcmUgc3VjY2Vzc2Z1bCBvbmVzIGluIHRlc3RpbmcuIApEYW1uIHRoYXQncyBmdWNraW5nIHNhZCwgYnV0IEknbSBnbGFkIHlvdSBhdCBsZWFzdCBmZWVsIHN1cHBvcnRlZCBoZXJlLi4gClNvbWUgbWVuIHdpbGwgc3RvcCBhdCBub3RoaW5nIEkgZ3Vlc3MhIFVuYmVsaWV2YWJsZS4gCklmIHlvdSBhcmUgdGFraW5nIGEgbG9vayBhcm91bmQgZm9yIGNhc2lubyBwb2tlciBjaGlwcyB0aGF0IGhhdmUgd2hhdCBpcyBjYWxsZWQgYSAiaG90IHN0YW1wIiwgaXQgaXMgaW1wb3J0YW50IHRvIHRlc3QgdGhlIHF1YWxpdHkgb2YgdGhlIHByb2R1Y3QgcHJpb3IgdG8gaW52ZXN0aW5nIGEgbG90IGludG8gdGhlbS4gV2hlbiBjYXNpbm8gcG9rZXIgY2hpcHMgYXJlICJob3Qgc3RhbXBlZCIsIGl0IGluZGljYXRlcyB0aGF0IHRoZXJlIGlzIGEgc2VjdGlvbiBvZiB0ZXh0IHRoYXQgaXMgZ29sZCBpbiBjb2xvciBvbiB0aGUgcGllY2VzLiBUaGUgdGV4dCB0eXBpY2FsbHkgaW5kaWNhdGVzIHRoZSB2YWx1ZXMsIG9yIGRlbm9taW5hdGlvbnMsIG9mIHRoZSBjaGlwcy4uIAoxLiBDb21wbGV0ZSB5b3VyIG1hc3NhZ2UgdGhlcmFweSB0cmFpbmluZyBhbmQgYmVjb21lIGEgbGljZW5zZWQgb3IgcmVnaXN0ZXJlZCBtYXNzYWdlIHRoZXJhcGlzdCBpbiB5b3VyIHN0YXRlLiAKSidhaSBwZW5zIGFsb3JzICBEZXMgR3RlYXV4IGV0IGR1IFBhaW4sIGJlbGxlIGJvdXRpcXVlIGRjb3V2ZXJ0ZSBpbCB5IGEgcXVlbHF1ZXMgYW5uZXMgYm91bGV2YXJkIFBhc3RldXIuIEonYXBwcmNpZSBiZWF1Y291cCBsZXVycyBwYWlucywgbm90YW1tZW50IGxhIGZvY2FjY2lhLCBsZSBwdW1wZXJuaWNrZWwgbWFpcyBqZSBuJ2F2YWlzIHBhcyBldSBsJ29wcG9ydHVuaXQgZGUgZ290ZXIgbGV1cnMgcHRpc3NlcmllcyA6IGVuIGZhaXQsIGonYWNodGUgcmFyZW1lbnQgZGVzIGd0ZWF1eCBkZSBwdGlzc2llci4gCkZvciBzb21lb25lIHdobyBoYXMgZ3Jvd24gdXAgaW4gdGhlIG1vZGVybiB3b3JsZCwgdGhlIGNpdHkgb2YgUm9tZSwgZXZlbiBhZnRlciBpdHMgcmVkZXZlbG9wbWVudCBieSBBdWd1c3R1cywgd2FzIG5vdCBhIHBhcnRpY3VsYXJseSBwbGVhc2FudCBwbGFjZS4gSSBhY3R1YWxseSBwb3NpdCB0aGF0IHRoZSBnbGFkaWF0b3JpYWwgY29udGVzdHMgd291bGQgYmUgb25lIG9mIHRoZSBtb3N0IHJlY29nbml6YWJsZSAgIGFuZCBldmVuIGFjY2VwdGVkICAgdGhpbmdzIGluIG1vZGVybiBzb2NpZXR5LiAKSWYgeW91IGxpa2UgdG8gYnV5IG1lbnN3ZWFyLCB0aGVyZSBhIHRoaXJkIHRpZXIgQmFuYW5hIFJlcHVibGljIGFuZCB0aGUgaW50ZXJuZXQuIApNYXJrIExldnksIEFubmUsIEFubmV0dGUsIFRyZXZvciwgU2FuZHkgYW5kIEdvcmQsIHlvdSBhcmUgdGhlIGJlc3QhIExvdmUgeW91IGRhZCEgSSdtIGV2ZXJ5dGhpbmcgSSBhbSBiZWNhdXNlIHlvdSBsb3ZlZCBtZSB4b3hvIEhlYXZlbiBoYXMgYSBuZXcgQW5nZWwhIEZhbWlseSBhbmQgZnJpZW5kcyBhcmUgaW52aXRlZCB0byBCQVkgR0FSREVOUyBGVU5FUkFMIEhPTUUgIldpbGxpYW0gSi4gQSBmdW5lcmFsIE1hc3Mgd2lsbCBiZSBjZWxlYnJhdGVkIGF0IFN0cy4gCkhlIHRlbGxpbmcgdGhlIGlnbm9yYW50IG1ham9yaXR5IHdobyB3b3VsZCBiZSBvdXRyYWdlZCBieSBoaXMgc3Rlcm9pZCB1c2Ugb25lIHRoaW5nLCB3aXRoIGEgbm9kIGFuZCBhIHdpbmsgdG8gZXZlcnlvbmUgd2hvIGNhcmVzLiBJdCBjb21wbGV0ZWx5IGRpZmZlcmVudCBmcm9tIGd1eXMgbGlrZSBTaW1lb24gUGFuZGEgYW5kIE1pa2UgTyB3aG8gYXJlIHNlbGxpbmcgZGFtYWdpbmcgbGllcyB0byBwZW9wbGUgd2hvIGxvb2sgdG8gdGhlbSBmb3IgaW5zcGlyYXRpb24gYW5kIGd1aWRhbmNlLgpUaGUgcGxheWluZyBjYXJkIHNldCBjb21lcyB1cCB3aXRoIGEgZ3VhcmFudGVlIGZvciBhbnkga2luZCBvZiBkZWZlY3RzIGZyb20gdGhlIG1hbnVmYWN0dXJlcnMuLiAKVGhlIHdvcnN0IHNoaXQgbGFuZGxvcmQgeW91IGNhbiBpbWFnaW5lIGJlY2F1c2UgaG93IGRvIEkgaG9sZCBoaW0gYWNjb3VudGFibGU/IFdlIGhhZCBhIHNob3dlciB3aXRoIHRpbGVzIGxpdGVyYWxseSBmYWxsaW5nIG9mZiB0aGUgc2hvd2VyIGludG8gdGhlIHR1YiwgYW5kIGhlIHdhcyBpbiBDYWxpZm9ybmlhIGFuZCBkaWQgbm90IGhhdmUgc29tZW9uZSBsb2NhbCBkb2luZyBoaXMgam9iIGZvciBoaW0uIApOb3QgZXhhY3RseSB0aGUgc2FtZSwgc2luY2UgdGhpcyB3YXMgaW50ZW50aW9uYWwgZGlyZWN0IGludGVyYWN0aW9uIHdpdGggdGhlIGdlbmVyYWwgcHVibGljLCBidXQgaGUgd2FzIHByZXNpZGVudCBhdCB0aGUgdGltZSBzbyBJIGFzc3VtZSB0aGV5IHdlcmUgYXQgbGVhc3Qgc2NyZWVuaW5nIHBlb3BsZSBmb3Igd2VhcG9ucy4gMSBwb2ludCAgc3VibWl0dGVkIDExIGRheXMgYWdvCkkgc2F3IHlvdSBzdGFuZCB1cCBmb3Igd2hhdCB0aGUgYWdlbmN5IHJlcHJlc2VudGVkIHRvIG5vdCBvbmx5IGludGVybmFsIHByZXNzdXJlcyBidXQgdG8gY2xpZW50cy4gCkluIHRlcm1zIHdoZW4gZ2FtZXMgYXJlIHNvbHZlZCBJIHdvdWxkIHNheSBsb3dlc3QgdmFyaWFuY2UgZ2FtZXMgd2lsbCBiZSBzcGxpdCBwb3QgZ2FtZXMgbGlrZSBvbWFoYSA4LiBQbGF5ZXJzIHVzZWQgdG8gaGF2ZSBzdHJhaWdodCBsaW5lIGdyYXBocyBpbiBQTE84IGJ1dCBjb3VsZCBoYXZlIGJlZW4gdmFyaWFuY2UgYW5kL29yIHRoZXkgd2VyZSB1c2luZyBib3QgYXNzaXN0YW5jZSB0aGF0IHNvbHZlZCBpdC4gSW4gb3RoZXIgd29yZHMsIHJlbGF0aXZlIHNraWxsIGxldmVscyBvZiBwbGF5ZXJzIGF0IHRoZSB0YWJsZS4uIApMZWUgc2F5cyBoZSBkb2VzIG1vcmUgdGhhbiA3MCBwZXJjZW50IG9mIGhpcyBidXNpbmVzcyBkdXJpbmcgdGhvc2UgaG91cnMgICBjYXNpbm8gd29ya2VycywgZmlyZWZpZ2h0ZXJzLCBhaXJwb3J0IGJhZ2dhZ2UgaGFuZGxlcnMsIGV2ZW4gcG9saWNlIG9mZmljZXJzLiBPbmUgd2FzIGEgd29tYW4gd2hvIGhhZCBqdXN0IGZpbmlzaGVkIHBsYXlpbmcgc2xvdHMgYWZ0ZXIgYSBkaW5uZXIgYXQgQ29jbydzLiBBbm90aGVyIHNhaWQgaGUgd2FzIGEgTGFzIFZlZ2FzIGJ1c2luZXNzbWFuIGZyZXNoIG9mZiBhIGxhdGUgZmxpZ2h0IGhvbWUgZnJvbSBDaGljYWdvLiBUaGUgdGhpcmQgd2FzIE1hcmsgQ2Vzc2lldSwgYSAyOCB5ZWFyIG9sZCBtYW5hZ2VyIGF0IENpcmNvIGluIHRoZSBCZWxsYWdpbyB3aG8gY2FtZSBpbiBhZnRlciB3b3JrLgpQcmVuYXRhbCB2aXRhbWlucyBwcm9iIGJlY2F1c2Ugb2YgdGhlIGJpb3Rpbi4gV29ya2luZyBvdXQvc2F1bmFzL3N0ZWFtIHJvb21zICAgYW55dGhpbmcgdGhhdCByYWlzZXMgeW91ciBib2R5IHRlbXAgYmFzaWNhbGx5LiBJIGhhdmUgdG8gbG9vayBpdCB1cCBidXQgSSByZW1lbWJlciBteSBoYWlyc3R5bGlzdCB0ZWxsaW5nIG1lIGl0IGhlbHBzIGJsb29kIHJlYWNoIHRoZSBzY2FscCwgd2hpY2ggY2FycmllcyBudXRyaWVudHMgdGhlcmUgdG9vLiBNYWtlcyBzZW5zZSwgaGFpciBhbHdheXMgZ3Jvd3MgZmFzdGVyIGluIHN1bW1lciBmb3IgbWUuIFRoZSBvdGhlciBwYXJ0IGlzIHByZXZlbnRpbmcgYnJlYWthZ2UuIFlvdXIgaGFpciBjYW4gZ3JvdyBsaWtlIHdlZWRzIGJ1dCBpZiBpdCBicmVha3Mgb2ZmIGFzIGZhc3Qgd2hhdCB0aGUgcG9pbnQ/IExvdHMgb2YgYWx0ZXJuYXRpbmcgY29uZGl0aW9uaW5nIGFuZCBwcm90ZWluIHRyZWF0bWVudHMsIGNvbWIvYnJ1c2ggZnJvbSB0aGUgYm90dG9tIHRvIG1pbmltaXplIHNuYWdzLCBzbGVlcCBvbiBhIHNpbGsgb3Igc2lsayBsaWtlIHBpbGxvd2Nhc2UgZXRjLgpTbyB0aGVyZSdzIGJlZW4gbW92ZW1lbnQgYW5kIHRoZXJlIGFwcGFyZW50bHkgYXJlIGludmVzdGlnYXRpb25zIGdvaW5nIG9uIGluIHRoZSBKdXN0aWNlIERlcGFydG1lbnQuIApBZnRlciBwZXJmb3JtaW5nIHRoZSBleGVyY2lzZXMgaW5kZXBlbmRlbnRseSBpbiBhbGwgNCBkaXJlY3Rpb25zLCBzbG93bHkgbWFrZSBjaXJjbGVzIHdpdGggeW91ciBwZWx2aXMgKCJodWxhIiBhbmQgRmlndXJlIDhzKS4gS2VlcCBhbGwgb3RoZXIgbXVzY2xlcyByZWxheGVkLCBhbmQgc3BlbmQgbW9yZSB0aW1lIG1vdmluZyBpbiBkaXJlY3Rpb25zIHRoYXQgZmVlbCBzdGlmZiBvciBzb3JlLgpKb25lczogIkkgdG9sZCBoaXMgZ2VyaWF0cmljIGFzcyB0aGF0IEkgd291bGQgZ2l2ZSBoaW0gYWxsIG9mIG15IHRpdGxlcyBpZiBoZSBjb3VsZCBnbyB0b2UgdG8gdG9lIHdpdGggbWUsIHNhbnMgdGFuay4gSSBmaWd1cmVkIGhlIHdvdWxkIGRyb3AgYmFsbHMuIEdyYW50ZWQsIGhpcyBiYWxscyBhbHJlYWR5IHJlYWNoZWQgaGlzIGtuZWVzLCBidXQgdGhhdCdzIGJlc2lkZSB0aGUgcG9pbnQuIgpEZXIgQ2hhaXJtYW4gZGVyIDI1aG91cnMgQ29tcGFueSwgS2FpIEhvbGxtYW5uLCBzaWVodCBub2NoIHdlaXRlcmUgRXhwYW5zaW9uc21nbGljaGtlaXRlbjogIldpciBzaW5kIGF1Y2ggZmhpZywgZ3V0ZSBSZXNvcnRzIGluIFVybGF1YnNkZXN0aW5hdGlvbmVuIHp1IGVudHdpY2tlbG4uIiBEYWJlaSBnZWhlIGVzIGVoZXIgdW0gSWJpemEsIFNhaW50IFRyb3BleiBvZGVyIFplcm1hdHQgYWxzIHVtIE5vcmQgIG9kZXIgT3N0c2VlLgoyIHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ29Xb3csIHRoYXQgbWlnaHQgYmUgcXVpdGUgYSBiaXQgb2xkZXIuIApJbiBhIGNyYXp5IGNvaW5jaWRlbmNlLCBib3RoIG9mIG91ciBleCB1bmJla25vd25zdCB0byB1cywgZW5kZWQgdXAgZGF0aW5nIGVhY2ggb3RoZXIgbGlrZSBhIDIgMyB5ZWFycyBiZWZvcmVoYW5kLCBhZnRlciB0aGV5IGhhZCBicm9rZW4gdXAgd2l0aCB1cy4gQW5kIHRoZXkgZGF0ZWQgZm9yIGxpa2UgYSB5ZWFyIG9yIHNvLi4gCkJyZWYsIENhc2Fzbm92YSBwb3VycmFpdCB0cmUgdW4gZGVzY2VuZGFudCBkZSBtYXJyYW5lIHF1aSBzJ2lnbm9yZSwgY2UgcXVpIGV4cGxpcXVlcmFpdCBwcm9iYWJsZW1lbnQgZXQgZW4gcGFzc2FudCwgc2EgY2FwYWNpdCAgcmVib25kaXIgYXZlYyBzdWNjcyBzdXIgbGUgcGxhbiBjb25vbWlxdWUuIE1haXMgaWwgeSBhIGF1c3NpIGR1IFRvcnF1ZW1hZGEgKGVuIHZlcnNpb24gc29mdCkgY2hleiBjZSBzZWN0YWlyZSBxdWkgYSBhZmZlY3QgcGFyZm9pcyB1bmUgdGVpbnR1cmUgZGUgY2hyaXN0aWFuaXNtZS5SZXRvdXIgYXV4IHNvdXJjZXMgZGUgQ2FzYXNub3ZhRGFucyB1biBham91dCBhdSBwb3N0IGluaXRpYWwgaidhaSBpbmRpcXUgc2VzIHNvdXJjZXMuIEplIG4nYWkgcGFzIHZvdWx1IGRpcmUgcXVlIGNlIHF1aSBlc3Qgbm91dmVhdSBlc3QgZm9yY21lbnQgbWVpbGxldXIgcXVlIGNlIHF1aSBkYXRlIChNYXJjaGVzc2VhdSBldCBNb3NzcmkpIG1haXMgcXVlIGxldXIgdmlzaW9uIGRlIGwnaHlnaW5pc21lIHRhaXQgZXh0cm1lbWVudCBzaW1wbGlzdGUuIApJbiAxOTYzIHRoZSBjb21wYW55IG1hZGUgdGhlIGJpZ2dlc3QgYnJlYWt0aHJvdWdoIHdoZW4gYmV0dGluZyBzaG9wcyBpbiBFbmdsYW5kIGJlY2FtZSBsZWdhbC5UaGUgY3VycmVudCBvd25lciBvZiBCZXRWaWN0b3IgdG9vayBvdmVyIHRoZSBjb21wYW55IGluIDE5NzUgYW5kIGJlY2FtZSB0aGUgZGVmaW5pdGlvbiBmb3IgcGlvbmVlcmluZyBhY3Rpb25zIGluIHRoZSBzcG9ydHMgYmV0dGluZyBpbmR1c3RyeS4gCkxpa2UgaW4gIkFsbCBteSBsaWZlLiAKTEVWMkwgU3BvcnRzIEJhciBhbmQgRW50ZXJ0YWlubWVudCAgIEEgMjc1IHNlYXQgc3BvcnRzIHRoZW1lZCByZXN0YXVyYW50IGFuZCBiYXIgd2l0aCBhIDEyMyBpbmNoIEhEVFYgYW5kIG51bWVyb3VzIGFkZGl0aW9uYWwgSERUVnMsIGFsbG93aW5nIHNwb3J0cyBmYW5zIHRvIGNhdGNoIGFsbCB0aGUgYWN0aW9uIGZyb20gdGhlaXIgZmF2b3JpdGUgc3BvcnRzIHRlYW1zIGZyb20gcHJlc2Vhc29uIHRvIHRoZSBmaW5hbHMuIFRoZSByZXN0YXVyYW50IGFsc28gb2ZmZXJzIGEgbmV3IG1lbnUsIGEgc3RhZ2UgZm9yIGxpdmUgbXVzaWMgcGVyZm9ybWFuY2VzLCBhbiBhcmVhIGZvciBzcG9ydHMgd2FnZXJpbmcsIGFuZCBpcyB0aGUgbGFyZ2VzdCBzcG9ydHMgdGhlbWVkIHJlc3RhdXJhbnQgaW4gdGhlIE5pYWdhcmEgUmVnaW9uLgpJIGFmcmFpZCBoZSBpcy4gRGFkZHkgaXMgdmVyeSBzaWNrIGFuZCBzdGlsbCBoYXMgYSBsb3Qgb2YgaGVhbGluZyB0byBkby4iU28sIEkgdmVyeSB0aW1pZCBhYm91dCBoYWlyY3V0cy4gCktleCBzayByYXJlbiwgb20gZGUgYW52IG5kcyBrb3JyZWt0LCBrb21tZXIgYXR0IHNrIHJhIHNsb3RzIG1lbiBvZnRhc3QgbiByIGVuIGF1a3Rvcml0YXRpdiByZWNlbnNlbnRlbiBoYXIgZW4gbWVuaW5nIGVsbGVyIHR2IG9tIGRldC4gCkhvdyBzaGUgcmVhY3RlZCB3aGVuIHlvdSBkaXNhZ3JlZWQgb24gdGhpcyBpc3N1ZSB3b3VsZCBiZSBoYXJkIHRvIGRlYWwgd2l0aCBhbmQgY291bGQgYmUgZGlzY3Vzc2VkIHdpdGggdGhlIG1hbWEgaXNzdWUgaWYgeW91IGNhbiBkbyBpdCBjaXZpbGx5Li4gCklzIGEgc3VpY2lkZSB0aHJlYXQgcHJvY2VkdXJhbGx5IGRlZmluZWQsIGFuZCBob3cgaXMgdGhhdCBkZWZpbml0aW9uIGNvbW11bmljYXRlZCB0byBhIGxvdyBza2lsbGVkIGZyb250bGluZSB3b3JrZXIgd2l0aCBubyBiYWNrZ3JvdW5kIGluIHRoZSB0b3BpYyB0aGV5IHByb3ZpZGluZyBhZHZpY2Ugb24/IGlmIEkgaGF2ZSBhbiBhbnN3ZXIgZm9yIHRoYXQgcXVlc3Rpb24sIGFuZCBJIGJlZW4gd29ya2luZyBvbiBpdCBmb3IgYWxtb3N0IHR3byB5ZWFycy4gCjg0KSBUaGlzIHRyYWNrIGlzIGdvaW5nIHRvIGJlIHJlbGVhc2VkIG9uICJCb3JuIFRoaXMgV2F5IiB0aGUgYWxidW0sIGJ1dCB0aGUgeW91dHViZSB2ZXJzaW9ucyBhcmUgZGlmZmVyZW50LiAKSXQgbmljZSBlYXN5LCBidXQgbm90IGJldHRlciBpbiB0ZXJtcyBvZiByZXN1bHRzLiAKSSB0YWtlIHRoZSByaXNrIG9mIGdldHRpbmcgbXkgcGhvbmUgd2V0IGV2ZXJ5IGRlY2FkZSBhbmQgYSBoYWxmIGlmIHRoZXkgbGV0IG1lIGp1c3Qga2VlcCBteSBkYW1uIHBob25lIGphY2suIApJdCBpcyBzaWduaWZpY2FudCB0aGF0IG9ubHkgRWR3YXJkIGFuZCBKYWNvYiB0YWtlIHRoZWlyIHNoaXJ0cyBvZmYgKE9IIE1ZIEdPRCEgVEhFWSBTTyBIT1QhKSB3aGVyZWFzIEJlbGxhIHRlbmRzIHRvIHdlYXIgamVhbnMgYW5kIGZsYW5uZWwgc2hpcnRzLiAKSW0gTGF1ZiBkZXIgbmNoc3RlbiBmbmYgYmlzIHNpZWJlbiBKYWhyZSBzb2xsZW4gMjQgd2VpdGVyZSBUcmF2ZWwgMjQgSG90ZWxzIGVyZmZuZXQgd2VyZGVuLiBXaWUgZGllIG1laXN0ZW4gSG90ZWxzIGRlciBuZXVlbiBHZW5lcmF0aW9uIHdlcmRlbiBkaWUgSHVzZXIgZWluZW4gcHJnbmFudGVuIFN0aWwsIGduc3RpZ2UgU3RhbmRvcnRlIHVuZCBob2Nod2VydGlnZSBBdXNzdGF0dHVuZyB6dSBhbnNwcmVjaGVuZGVuIFByZWlzZW4gYmlldGVuLgpNeSBtb20gd2VudCB0byBhIGx1bmNoIHdpdGggYSBsYXJnZSBncm91cCBvZiBjb3VzaW5zIGFuZCBzYXQgYmVzaWRlIG9uZSBzaGUgYmFyZWx5IGtuZXcuIEJvdGggb2YgdGhlbSBzdGFydGVkIHRhbGtpbmcgYWJvdXQgdGhlaXIga2lkcyBhbmQgaG93IHRoZXkgaGFkIGJlZW4gaGVscGluZyBvdXQgZHVyaW5nIHRoZSBmbG9vZC4gVGhleSBjbHVlZCBpbiB3ZSBtdXN0IGJlIGluIHRoZSBzYW1lIGNsYXNzLiAKT24gdGhlIENvbiBzaWRlLCBtb3N0IHdlYnNpdGVzIGRvIG5vdCBkZWxpdmVyIGluIHByb3BlciB0aW1lLiAKUXVhbmQgb24gZW50ZW5kIGEgbGVzIG1haW5zIHZvdXMgZG1hbmdlbnQuTGEgc29sdXRpb24gZGUgbCdpbmNpbnJhdGlvbiBhIHQgdm9xdWUgZW4gamFudmllciAyMDE1IGV0ICBsYSBzdWl0ZSBkZSBsYSB0dWVyaWUgZHUgQmF0YWNsYW4gZXQgbGEgcXVlc3Rpb24gc2UgcG9zZSBkZSBzYXZvaXIgcG91cnF1b2kgYXVjdW4gcGFydGkgbmUgbCdhIHJlcHJpc2UgIHNvbiBjb21wdGUuIApUbyBzcGVlZCB0aGUgZ2FtZSB1cCBpdCBpcyBoZWxwZnVsIHRvIHBsYXkgdXNpbmcgdHdvIGRlY2tzIHRoYXQgaGF2ZSBkaWZmZXJlbnQgY29sb3IgYmFja2luZy4gV2hpbGUgb25lIGhhbmQgaXMgYmVpbmcgcGxheWVkIHdpdGggb25lIGRlY2ssIHRoZSBvdGhlciBkZWNrIGlzIGJlaW5nIHNodWZmbGVkIGJ5IHRoZSBuZXh0IGRlYWxlci4KJDQvOCB3b3VsZCBiZSBhIG5vcm1hbCBsaW1pdCBiZXR0aW5nIHN0cnVjdHVyZS4gSW4gbGltaXQgYmV0dGluZywgdGhlIGFjdGlvbiBpcyBpbiBpbmNyZW1lbnRzIG9mIHRoZSBjdXJyZW50IGJldC4uIApTb21lIHNtYWxsZXIgY29tbXVuaXRpZXMgaGF2ZSB0b3VybmV5cyB3aXRoIGFyb3VuZCAkMzAwIHRvIHdpbiBhbmQgb25seSAxNTAgcGxheWVycy4gSWYgWW91IGFyZSBhIGdvb2QgdG91cm5hbWVudCBwbGF5ZXIgdGhlbiBZT3UgY2FuIHN0YXJ0IGEgZnJlZSBwb2tlciBiYW5rcm9sbCBieSBvbmx5IHBsYXlpbmcgZnJlZSBwb2tlciB0b3VybmFtZW50cy4gVGhlcmUgYXJlIGFsc28gc29tZSBhbGwgZnJlZSBwb2tlciBzaXRlcyB0aGF0IG9mZmVyIHRvdXJuYW1lbnRzIGVpdGggd2l0aCBwcml6ZXMgb3IgY2FzaCBwcml6ZXMuIApTbyBtdWNoIHNvLCBpbiBmYWN0LCB0aGF0IHNlcGFyYXRpc3Qgc2VudGltZW50IGluIEFsYmVydGEgaXMgYXBwcm9hY2hpbmcgYWxsIHRpbWUgaGlnaHMuIApNeSBodXNiYW5kIGdyYW5kcGFyZW50cywgb25lIHNldCB3YXMgdmVyeSBqdWRnbWVudGFsIGFuZCBkaXNhcHByb3Zpbmcgb2YgZXZlcnl0aGluZyBoZSBkaWQgYW5kIHRoZSBvdGhlciB3YXMgb2ssIGJ1dCBlbW90aW9uYWxseSB2ZXJ5IGRpc3RhbnQuIEhlIGZlbHQgbGlrZSB5b3UsIGRpZG4gcmVhbGx5IGdldCB0aGUgYm9uZCBiZXR3ZWVuIG15IGdyYW5kbWEgYW5kIEkuIApBbm90aGVyIHBhcmVudCBvbmNlIGNhbGxlZCBpdCB0aGUgWmVybyBab25lLCBhbmQgd2hlbiBJIGhlYXJkIHRoYXQsIG15IG1pbmQgZmxvb2RlZCB3aXRoIGNvbnRleHQgYW5kIHVuZGVyc3RhbmRpbmcuIApUaGlzIGlzIHRoZWluZmFtb3VzICJUaGUgRmFtZSBNb25zIGVyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuIEl0J3NoaWdobHkgc3VnZ2VzdGVkIHlvdSBhY3F1aXJlIHRoZSAnZXhwbGljaXQnIHZlcnNpb24gb2YgdGhlYWxidW0uNDYgNTAgKSBQb2tlciBGYWNlICBBY291c3RpYy9KdXN0IERhbmNlL0xvdmVnYW1lL0JlYXV0aWZ1bCwgRGlydHksIFJpY2gvUG9rZXIgRmFjZSAuIFRoZXNlc29uZ3MgYXJlIG9uIGFuIGFsYnVtIGNhbGxlZCAiV2FsbWFydCBzb3VuZGNoZWNrLiIgVGhlIGxhdHRlciBmb3Vyc29uZ3MgaGF2ZSAiT3JpZ2luYWwgcGVyZm9ybWFuY2Ugc2VyaWVzIiBpbiB0aGVpciBuYW1lcy4gCk1vc2FtYW5pYSAgMTcwIHBvaW50cyAgc3VibWl0dGVkIDIzIGRheXMgYWdvCk9yIHRoZSBtZXJjaWxlc3MgdmlvbGVuY2UgdGhhdCByYWdlcyBqdXN0IG91dHNpZGUgdGhlIGZvcnRpZmllZCB3YWxscyBvZiB0aGUgbWlsaXRhcnkgYmFzZSwgd2hlcmUgaGUgaGFzIGJlZW4gc3RhdGlvbmVkIHNpbmNlIE1heSwgY291bnNlbGluZyBzb2xkaWVycyBvZiBhbGwgZmFpdGhzLCBob2xkaW5nIEpld2lzaCBob2xpZGF5IHNlcnZpY2VzLCBhbmQgZGlzdHJpYnV0aW5nIFNlZGVyIGtpdHMsIHByYXllciBib29rbGV0cywgYW5kIHNwaXJpdHVhbCBndWlkYW5jZSB0byBKZXdpc2ggc2VydmljZSBtZW1iZXJzIGFsbCBvdmVyIElyYXEuLiAKTXJ0aGVydXNzaWFuICAxNCBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpMYXN0IHllYXIsIFN0YXJ3b29kIG9wZW5lZCB0aHJlZSBuZXcgaG90ZWxzIGluIFJ1c3NpYSBhbmQgQ0lTLCBtYXJraW5nIGEgbnVtYmVyIG9mIGtleSBtaWxlc3RvbmVzLCBpbmNsdWRpbmcgdGhlIGhpZ2hseSBzdWNjZXNzZnVsIGRlYnV0IG9mIHRoZSBXIGJyYW5kIGluIFJ1c3NpYSB3aXRoIHRoZSBvcGVuaW5nIG9mIFcgU3QuIFBldGVyc2J1cmcgYW5kIHRoZSBlbnRyYW5jZSBvZiBTdGFyd29vZCBpbnRvIFVrcmFpbmUgYW5kIEF6ZXJiYWlqYW4uCk9kZGx5IGVub3VnaCwgSSBnb3QgbXkgYmlnZ2VzdCBwYXljaGVjayB3aGVuIEkgbGVmdCB0aGFuIHdoZW4gSSB3YXMgYWN0dWFsbHkgd29ya2luZy4uIApXb3csIEkgd2Fzbid0IGV4cGVjdGluZyB0aGF0ISBJZiBGZWxkbWFuIGhhZCBhIGtpbmcgaW4gaGlzIGhhbmQsIEkgd291bGQgaGF2ZSBleHBlY3RlZCBoaW0gdG8gbWFrZSBhIGJldCBvbiB0aGUgdHVybi4gCkkgYWxzbyByZWFsbHkgZW5qb3llZCBEb3JuZSwgYWx0aG91Z2ggbW9zdCBwZW9wbGUgZG9udC4gSXQgZG9lcyBmZWVsIHZlcnkgdG9uYWxseSBkaWZmZXJlbnQgZnJvbSB0aGUgcmVzdCBvZiB0aGUgc2hvdywgYW5kIG15IGZpcnN0IHRpbWUgd2F0Y2hpbmcgaXQgSSB3YXMgcXVpdGUgamFycmVkIGFuZCBsb3N0IGJ1dCBvbiByZXdhdGNoLCBJIHJlYWxseSBlbmpveWVkIGl0LiAKSGUgd2FzIHZlcnkgaHVydCBhbmQgYWdhaW4gYXNrZWQgbWUgdG8gcGxheSBmb3IgaGlzIGZyaWVuZHMuIEFuZCB0aGVuIGhlIHNhaWQgc29tZXRoaW5nIEknZCByZW1lbWJlciBmb3IgdGhlIHJlc3Qgb2YgbXkgbGlmZS4gSGUgc2FpZCB0aGF0IGlmIEkgZG9uJ3QgcGxheSBmb3IgdGhlbSBub3cgdGhleSB3aWxsIG5ldmVyIGhhdmUgYW5vdGhlciBjaGFuY2UgdG8gaGVhciB0aGUgdmlvbGluLiAKVGhlcmUgYXJlIG1pbm9yIHZhcmlhdGlvbnMKVGhlIHBhcnNlYyBjb21lcyBkaXJlY3RseSBmcm9tIGhvdyBkaXN0YW5jZXMgdG8gc3RhcnMgYXJlIG1lYXN1cmVkLiAKVW5pYmV0IGZvbGxvd3MgYW5kIGNvbXBsaWVzIHdpdGggdGhlIFBheW1lbnQgQ2FyZCBJbmR1c3RyaWVzIERhdGEgU2VjdXJpdHkgU3RhbmRhcmQgKFBDSSBEU1MpIGFuZCB0aG9zZSBpc3N1ZWQgYnkgdGhlIEV1cm9wZWFuIGdhbWluZyBhbmQgYmV0dGluZyBhc3NvY2lhdGlvbi5XaGVyZSBjYW4gSSBmaW5kIGdsb3NzYXJ5IHdpdGggYmV0dGluZyB0ZXJtcz9XZSBvZmZlciBhbmQgbWFpbnRhaW4gYSBiZXR0aW5nIGdsb3NzYXJ5IHdoaWNoIGlzIGEgbm9uIGV4aGF1c3RpdmUgbGlzdCBvZiB0cmFkaXRpb25hbCBhbmQgbW9kZXJuIGJldHMuIApUaGVpciBsaXZlIHN0cmVhbWluZyBjaGFubmVsIGlzIGluY29ycG9yYXRlZCB3aXRoIHRoZWlyIGxpdmUgYmV0dGluZyBwb3J0YWwuIEFueSBmZWF0dXJlIHRoYXQgYWRkcyB0byB0aGUgdXNlciBleHBlcmllbmNlIGlzIGEgd2VsY29tZWQgb25lLCBsaWtlIHRoZSBjb21wcmVoZW5zaXZlIHN0YXRpc3RpY3Mgc2VjdGlvbiBmb3IgbG9hZHMgb2YgaW5mb3JtYXRpb24gZm9yIGEgd2lkZSB2YXJpZXR5IG9mIHNwb3J0cy4gRm9yIGV4YW1wbGUsIGluIHRoZSBjYXNlIG9mIGZvb3RiYWxsIHlvdSBjYW4gdmlldyBsZWFndWUgdGFibGVzLCBmaXh0dXJlcywgcmVzdWx0cyBvZiBwcmV2aW91cyBmaXh0dXJlcywgb3IgeW91IGNhbiB2aWV3IGhlYWQgdG8gaGVhZCBtYXRjaCB1cHMgYW5kIGRldGFpbGVkIHJldmlld3Mgb2YgcHJldmlvdXMgZ2FtZXMuIApXaGljaCBpcyBzb21ldGhpbmcgbm90IHJlYWxseSB0aGF0IGJpZyBhIHN0ZXAgdGhhdCBzaG91bGQgYmUgbWFraW5nIGEgQnVzaW5lc3MgSW5zaWRlciBoZWFkbGluZS4gCk5vcm1hbGx5IGFueSBlbGVjdHJvbmljIGRldmljZSB3aXRoIGRpcmVjdCB3YXRlciBleHBvc3VyZSB3aWxsIGhhdmUgYSBzaG9ydCBhbmQgdGhlIGFyZWEgYWZmZWN0ZWQgd2lsbCBzaG93IGEgYmxhY2sgYXJlYS9idXJuIHNwb3Qgd2hlcmUgdGhpcyBoYXMgb2NjdXJyZWQuClRoZSBzY2FsZSBhbmQgdmFyaWV0eSBvZiB0aGUgcHJvc3RpdHV0aW9uIHNjZW5lIGlzIHdheSBiZXR0ZXIgaW4gVGhhaWxhbmQgYnV0IHRoZSBQaGlsaXBwaW5lcyBpcyBhIGNsb3NlIHNlY29uZCBhbmQgdGhleSBzcGVhayBFbmdsaXNoIGJldHRlci4gClRoZXkgYXJlIGFsc28gdnVsbmVyYWJsZSB0byBiZWluZyBwb2lzb25lZCBieSBwZXN0aWNpZGVzIGVhdGVuIGJ5IHRoZWlyIHByZXkuIApXaGVuIGVtYmFya2luZyBvbiBzb21ldGhpbmcgbmV3IGl0IGlzIGFsd2F5cyBiZXR0ZXIgdG8gZGV2ZWxvcCB0aGUgY29ycmVjdCBoYWJpdHMgYW5kIG1ldGhvZHMgZnJvbSB0aGUgc3RhcnQuIExpa2UgZXZlcnkgc2tpbGwsIGJyaWRnZSBzaG91bGQgYmUgbGVhcm5lZCBmcm9tIGEgcXVhbGlmaWVkIHRlYWNoZXIuIEF0IHRoZSBCZXR0ZXIgQnJpZGdlIGNsYXNzZXMsIHlvdSB3aWxsIGJlIHRhdWdodCB0aGUgZ2FtZSBpbiBhIHN0cnVjdHVyZWQgZm9ybWF0IGJ5IENvbnRyYWN0IEJyaWRnZSBBc3NvY2lhdGlvbiBvZiBJcmVsYW5kIHF1YWxpZmllZCBhbmQgZXhwZXJpZW5jZWQgdGVhY2hlciBDYXJtZWwgTXVycGh5LiBFYWNoIGNsYXNzIGNvbnNpc3RzIG9mIHR1aXRpb24sIHNhbXBsZSBnYW1lcyBvbiBhIGJpZyBicmlkZ2UgYm9hcmQsIHByYWN0aWNlIGdhbWVzLCBjb21wcmVoZW5zaXZlIGhhbmQgb3V0IHdpdGggc2VsZiBjb3JyZWN0aW5nIGV4ZXJjaXNlcywgcmVjb21tZW5kZWQgcmVhZGluZywgYW5kIHdlYnNpdGVzLgpJIGhhZCBzbyBtdWNoIGZ1biBpbiBCZWlqaW5nLiBUaGUgY2l0eSBJIGxpdmUgaW4gbm93IGlzIGEgYml0IGxlc3MgaGVjdGljLCBtdWNoIGxlc3MgcG9wdWxvdXMsIGFuZCBjb25zaWRlcmFibHkgbW9yZSBib3JpbmcuIEkgY2FtZSBkb3duIGhlcmUgZm9yIGFuIG9wcG9ydHVuaXR5IGFuZCB3aGlsZSBJIG1ha2UgYW5kIHNhdmUgbW9yZSBtb25leSBub3csIEkgZmVlbCBsaWtlIEknbSBqdXN0IHNwaW5uaW5nIG15IHdoZWVscyBzb2NpYWxseS4gCk9uZSBsb3Npbmcgb3ZlciAxMDAgcG91bmRzLiAKRGlhZ3JhbXMgb2YgSW1hZ2luYXRpb24gSWRlYXMKRGllIEVpbnplbHByZWlzZSBsaWVnZW4gendpc2NoZW4gMTAsICB1bmQgNDAsICBwcm8gS29uemVydC4gCkhlbGVuIGFpbXMgdG8gaW5zcGlyZSBjbGllbnRzIHRvIGZpbmQgc3VzdGFpbmFibGUgc29sdXRpb25zIGZvciBpbXByb3ZpbmcgaGVhbHRoIGFuZCB3ZWxsYmVpbmcsIHdoaWNoIHNoZSBhcHByb2FjaGVzIHdpdGggc2tpbGwgYW5kIGVudGh1c2lhc20uSWYgeW91IHdvdWxkIGxpa2UgdG8gYWRkcmVzcyBoZWFsdGggaXNzdWVzLCByZW1lbWJlciBob3cgdG8gcmVsYXgsIG9yIG5lZWQgYSBoZWFsdGggTU9ULCBwbGVhc2UgZ2V0IGluIHRvdWNoIUhlbGVuIG9mZmVycyB0cmVhdG1lbnRzIGluIFJlZmxleG9sb2d5LCBhbmQgVGhhaSBZb2dhIC5BIHJlbGF4aW5nIG1hc3NhZ2UgdG8gcmVmbGV4IHBvaW50cyBvbiBmZWV0IGhlbHBzIHRvIHJlIGVzdGFibGlzaCByZWxheGF0aW9uIGFuZCBiYWxhbmNlIGluIHRoZSB3aG9sZSBib2R5LiAKWW91IG1heSBzdGFydCB3aXRoIGEgZ3JlYXQgaGFuZCBidXQgaXQgY2FuIHR1cm4gcmF0aGVyIGxpa2UgYSBuaWdodG1hcmUgd2l0aCB0aGUgd3JvbmcgY29tbXVuaXR5IGNhcmRzLiBUaGlzIGlzIGEgZmFpciB3YXJuaW5nIGJ1dCB3ZSBtYWRlIHRoZSBsaXN0IGFzIGJlc3QgYXMgd2UgY291bGQgc3VnZ2VzdCkuLiAKQWxsIHdlIGFyZSBzYXlpbmcgaXMgdGhhdCBvbmxpbmUgZ2FtYmxpbmcgc2hvdWxkIGJlIGdpdmVuIHRoZSBzYW1lIGZhaXIgc2hvdCB0aGF0IHRoZSBzcG9ydHMgYmV0dGluZyBpbmR1c3RyeSBlbmpveXMuIApJbnRlcm5hdGlvbmFsIEFzc29jaWF0aW9uIG9mIEF0aGxldGljcyBGZWRlcmF0aW9ucwpOaW5qYSBzdG9yeXRlbGxlcnMsIGNyZWF0b3JzIGFuZCBtYXJrZXRlcnMgY29tZSB0b2dldGhlciBhdCBDIFNwYWNlLCBhbiBpbW1lcnNpdmUgZXhwZXJpZW5jZSBmZWF0dXJpbmcgY29uZmVyZW5jZXMsIGtleW5vdGVzIGFuZCBleGhpYml0cyBmcm9tIGNvbXBhbmllcyBzdWNoIGFzIEdvb2dsZSwgSHVsdSwgTkJDVW5pdmVyc2FsLCBOZXVMaW9uLCBOaWVsc2VuLCBQYW5kb3JhLCBVbml2aXNpb24sIFdXRSBhbmQgbW9yZS4gSXQncyBhbiBhcmVhIG9mIHRoZSBzaG93IHRoYXQgaGlnaGxpZ2h0cyB0cmVuZHMgdGhhdCBhcmUgY2hhbmdpbmcgdGhlIGZ1dHVyZSBvZiBtYXJrZXRpbmcgYW5kIGVudGVydGFpbm1lbnQuIFdlIHdpbGwgc2VlIHNwb3J0cyBpbm5vdmF0b3JzIHdobyBoYXZlIGRldmVsb3BlZCBwcm9kdWN0cyB0aGF0IGFyZSBhZmZlY3RpbmcgYXRobGV0aWMgcGVyZm9ybWFuY2UgYW5kIGZhbiBlbmdhZ2VtZW50IGluIHVuZXhwZWN0ZWQgd2F5cywgYW5kIHNtYXJ0IGNpdHkgaW5ub3ZhdG9ycyB3aG8gYXJlIGRlc2lnbmluZyB3YXlzIHRvIGltcHJvdmUgc3VzdGFpbmFiaWxpdHksIG1vYmlsaXR5IGFuZCBsaXZhYmlsaXR5IGZvciBwZW9wbGUgYXJvdW5kIHRoZSBnbG9iZS4KRG9ucGEgYW5kIHJlY29uIGFyZSBzZWFyY2hhYmxlIGFuZCB5b3UgcmVhbGx5IG9ubHkgbmVlZCBvbmUgb24gdGhlIGZpZWxkLCBhcmUgaW5jcmVkaWJseSB3ZWFrLCBhbmQgZG9uIGhlbHAgdG8gY292ZXIgdGhlIGRlY2sgbWFpbiB3ZWFrbmVzcyAgdGhlIGZhY3QgdGhhdCBpdCBoYXJkbHkgZ2VuZXJhdGVzIGFueSBhZHZhbnRhZ2UgYnV0IGhhcyBhIGJvc3MgbW9uc3RlciB0aGF0IGdvZXMgIDEgZm9yIGl0cyBlZmZlY3QuIApKdXN0IGtlZXAgZ3JpbmRpbmcuIEdvb2QgbHVjay4uIApBbHdheXMgbWFpbnRhaW4gdGhhdCBwcmVtaXVtIGRvZXNuIHNjcmVhbSwgaGUgc2FpZC4gCkNsaWNrY2xpY2sgYm9vbSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMiBob3VycyBhZ28KU28sIEkgYW0gdHJhaW5pbmcgZm9yIGEgaGFsZiAoaW4gQXByaWwpIGFuZCBJJ3ZlIGdvdHRlbiB2ZXJ5IGZydXN0cmF0ZWQgd2l0aCBteSB0cmFpbmluZy4gCkluIG1vc3QgYXJlYXMsIGluY2x1ZGluZyBteSBvd24sIHdyYXBwaW5nIHBhcGVyIGlzIG5vdCByZWN5Y2xhYmxlLiBJIHdhcyBidW1tZWQgdG8gbGVhcm4gdGhhdC4gU28gZm9yIHdyYXBwaW5nIGdpZnRzLCBJIG1heToKQ3ljbG9wcyBDYW4gU2luZyBhbmQgRGFuY2U6IEkgaGFkIG5vIGlkZWEgSmFtZXMgTWFyc2RlbiBpcyBhIHNpbmdlciwgYnV0IGhlIHRvcmUgZG93biBWZWdhcyBXZWRuZXNkYXkgbmlnaHQgYXQgdGhlIEhhaXJzcHJheSBwcmVzZW50YXRpb24uIApGaW5nZXJzIGNyb3NzZWQhIExhc3QgeWVhciBteSB0YXggcGVyc29uIHNhaWQgSSBnZXQgYW4gZXh0cmEgJDExMDAgaW4gMjAxOCBhZnRlciB0aGUgVHJ1bXAgVGF4IGN1dHMuIHNvIEkgYWRqdXN0ZWQgbXkgd2l0aGhvbGRpbmcgdG8gZ2l2ZSBteXNlbGYgYW4gZXh0cmEgJDE2MC9tbyBpbiBteSBwYXljaGVjay4gVXNlZCB0byBjbGFpbSAwIHdpdGggYWRkaXRpb25hbCAkMTYwL21vIHdpdGhob2xkaW5nLiBzbyBJIGp1c3Qgbml4ZWQgdGhhdCBhZGRpdGlvbmFsIHdpdGhob2xkaW5nLiBUaGlzIGRpZG4gZWZmZWN0IG15IG5ldCBwYXkgYXQgYWxsIGFmdGVyIHRoZSBuZXcgdGF4IHdlbnQgaW50byBlZmZlY3QuIE5vdyBJIGtpbmRhIHdvcnJpZWQgd2hhdCBteSByZXR1cm4gaXMgZ29ubmEgYmUuIExhc3QgY291cGxlIHllYXJzIEkgYmVlbiBnZXR0aW5nIGFyb3VuZCAkMjIwMCByZWZ1bmQsIHNvIEkgaG9wZSBpdHMgc3RpbGwgY2xvc2UgdG8gdGhhdC4gU3RpbGwgbm8gaWRlYSB3aGF0IGhhcHBlbmVkIHRvIHRoYXQgb3RoZXIgJDE2MC9tby4KVGhlIGFjdHVhbCBzdG9yeSBvZiBob3cgQmxvb20gY2FtZSB0byBwb3dlciBpbiB0aGUgcG9rZXIgcmluZyBpcyBzb21ldGhpbmcgdGhhdCB0cnVseSBjYW5ub3QgYmUgbWFkZSB1cC4gU2hlIGJlZ2FuIGFzIGEgY29ja3RhaWwgd2FpdHJlc3MgYW5kIGhhZCBiZWVuIGhpcmVkIGJ5IGEgd2VhbHRoeSByZWFsIGVzdGF0ZSBpbnZlc3RvciB0byBwbGF5IGhvc3Rlc3MgYXQgYSBnYW1ibGluZyB0b3VybmFtZW50IGhlIHdhcyB0aHJvd2luZyBhdCBIb2xseXdvb2QncyBpbmZhbW91cyBjbHViIFRoZSBWaXBlciBSb29tLiAKSGlzIG93biBleCB3aWZlIGFjY3VzZWQgaGltIG9mIHJhcGUgdW5kZXIgb2F0aC4uIApUaGUgbG9hbiB3b3JkcyBvZiBDaGluZXNlIG9yaWdpbiB3aWxsIGdlbmVyYWxseSBzb3VuZCBsaWtlIENhbnRvbmVzZS4gVGhhdCBiZWNhdXNlIENhbnRvbmVzZSBoYXBwZW5zIHRvIHJldGFpbiBhIGxvdCBvZiB0aGUgc3lsbGFibGVzIGZyb20gTWlkZGxlIENoaW5lc2UgdGhhdCBNYW5kYXJpbiBoYXMgbG9zdC4gVGhlIGxpbmd1YSBmcmFuY2EgQ2hpbmVzZSB0aGF0IHdhcyBrbm93biB0byB0aGUgS29yZWFucyBhbmQgSmFwYW5lc2Ugd2FzIG1vcmUgc2ltaWxhciB0byBDYW50b25lc2UgdGhhbiBNYW5kYXJpbi4gCkl0IGJlY2F1c2UgdGhleSB0aGVtc2VsdmVzIGFyZSBodXJ0aW5nIGFuZCBkb2luZyBpdCBhcyBhbiBpbmRpcmVjdCB3YXkgb2YgYXNraW5nIGZvciBoZWxwLi4gCkp1c3QgYWZ0ZXIgYSBUaGFpIHJlc3RhdXJhbnQsIGRpcCBpbiB0byB0aGUgbGl0dGxlIGVuY2xhdmUgYW5kIHlvdSB3aWxsIHNlZSBOYXRhcmVlLiAKNy4gQ29uanVudG8gZGUgYXJtYWRpbGhhcyBlbSBzdWEgY2FzYS4gU2Ugdm9jIGFjaGEgcXVlIHNldSBlbmdhbm8gbWFyaWRvIHBvZGUgdHJhemVyIGFsZ3VtIGVtIHN1YSBjYXNhIGVucXVhbnRvIHZvYyBlc3RpdmVyIHZpYWphbmRvIG91IGZvcmEsIG1vbnRhciBhbGd1bWFzIGFybWFkaWxoYXMuIENvbG9xdWUgdW0gY29uanVudG8gbGltcG8gZGUgZm9saGFzIGUsIGVtIHNlZ3VpZGEsIGNvbG9xdWUgdW1hIG1pZ2FsaGEgc29icmUgbyBjb2xjaGEuIENlcnRpZmlxdWUgc2UgZGUgcXVlIHVtIGNvIG91IHVtIGdhdG8gbm8gbW92IGxvLiBFbSBzZWd1aWRhLCB2ZXJpZmlxdWUgc2UgbyBtaW9sbyBhaW5kYSBlc3Qgbm8gbWVzbW8gbHVnYXIgYXBzIHNldSByZXRvcm5vLgpUaGUgYW5pbWFsIHdpdGggdGhlIHNpbiBvbiBpdCBpcyBuZXZlciBzYWNyaWZpY2VkLi4gCkhlIG5ldmVyIGtuZXcgdGhlIHByb2JsZW0gd2l0aCBoaXMgZXllIHdhcyBsaWtlIHRoYXQganVzdCBmb3IgaGltLiBJdCBqdXN0IGNhbWUgaW4gYW5kIG91dCBhdCByYW5kb20uIApEaWQgeW91IGtub3cgdGhhdCwgd2VyZSBpdCBub3QgZm9yIHRoZSByZWx1Y3RhbmNlIG9yIG9mIHRoZSBUdXJraXNoIGdvdmVybm1lbnQsIEdlcm1hbnkgbWF5IHdlbGwgaGF2ZSBzdWNjZWVkZWQgaW4gb2ZmZXJpbmcgdGhlICJ3aW5uaW5nIGJpZCIsIGFuZCBpZiBzbywgVEhFWSwgbm90IHRoZSBCcml0aXNoLCB3b3VsZCBoYXZlIGdhaW5lZCB0aGUgc3VwcG9ydCBvZiB0aGUgWmlvbmlzdHM/CkFzIGEgbG9uZ3RpbWUganVkZ2Ugb2YgTW9ub3BvbHkgY2hhbXBpb25zaGlwcywgSSBmaWd1cmVkIG91dCBhIHByaW1lIHJlYXNvbiBmb3IgdGhlIGdhbWUgc3RheWluZyBwb3dlci4gRm9yIG1vc3Qgb2YgdXMsIGl0IHByb3ZpZGVzIG9uZSBvZiBsaWZlIGZpcnN0IG9wcG9ydHVuaXRpZXMgdG8gaGFuZGxlIG1vbmV5IGFuZCBwcmFjdGljZSB0aGUgYXJ0IG9mIG5lZ290aWF0aW9uLiBNb25vcG9seSBwdXRzIHlvdSB0aHJvdWdoIGEgZmluYW5jaWFsIHdyaW5nZXIgd2l0aG91dCByZWFsIHdvcmxkIGxvc3MuIApXZSBzZWUgdGhhdCBpZiwgc2F5LCB0aGVyZSBhcmUgZml2ZSBzZWF0cyBpbiB0aGUgRVUgcmVnaW9uIHRoZW4gYW55IHBhcnR5IHdpdGggbW9yZSB0aGFuIGEgc2l4dGggb2YgdGhlIHZvdGUgd2lsbCBnZXQgYSBzZWF0LCBhcyBvdGhlcndpc2UgdGhlIG90aGVyIHBhcnRpZXMgbmVlZCB0byBoYXZlIGZpdmUgcGlsZXMgb2YgY2hpcHMsIGFsbCBiaWdnZXIgdGhhbiB0aGlzIHBpbGUsIGFuZCB0aGF0IHRvbyBtYW55IGNoaXBzLiBXaXRoIFVLSVAgcG9sbGluZyBhdCBhcm91bmQgMzAgcGVyIGNlbnQsIGNvbnNpZGVyYWJseSBtb3JlIHRoYW4gdGhlIDE4IHBlciBjZW50IHRoYXQgcmVwcmVzZW50cyBvbmUgaW4gc2l4LCB0aGV5IHdpbGwgZ2V0IGEgc2VhdCByZWdhcmRsZXNzIG9mIHdoYXQgdGhlIG90aGVyIHZvdGVycyBkby4uIApBbmQgSSBhbHNvIHVzZWQgaXQgd2l0aCBwdXBpbHMgZnJvbSA4dGggdG8gMTB0aCBncmFkZSB0byBwcm9ncmFtIExFR08gcm9ib3RzIGluIFNURU0gdGFzdGVyIHNlc3Npb25zLiBNeSBjb2xsZWFndWVzIHVzZSBpdCB3aXRoIGV2ZW4geW91bmdlciBjaGlsZHJlbiB0byBwcm9ncmFtIENhbGxpb3BlIChiYXNpY2FsbHkgQkJDIG1pY3JvOmJpdCBmb3IgR2VybWFucykuCk1uYXJkIHRvbGQgdGhlIC4gIldlIGRpZG4ndCB0aHJvdyB3aGF0IHdlIGhhdmUgaW4gdGhlIGdhcmJhZ2UgYW5kIHNheSB3ZSBoYXZlIHRvIGRvIGl0IGFsbCBhZ2Fpbi4gV2UncmUganVzdCB0YWtpbmcgbW9yZSB0aW1lIFdlJ3JlIGNvbmZpZGVudCBpdCB3aWxsIGJlIHJlYWR5IFtieSBBcHJpbCAyOV0uIlNoZSBkZWNsaW5lZCB0byBkaXNjdXNzIGhvdyBtdWNoIHRoZSBzaG93LCB3aGljaCBpcyBiZWhpbmQgc2NoZWR1bGUgYnkgYWxtb3N0IHRocmVlIG1vbnRocywgbWlnaHQgZ28gb3ZlciBidWRnZXQuTXIuIApNYWNhdSBpcyB3b3J0aCB2aXNpdGluZyBvbmNlIG9yIHR3aWNlIGZvciBub3cgZm9yIHRoZSBleHBlcmllbmNlLCBidXQgeW91IHByb2JhYmx5IG5vdCByb2xsZWQgdG8gcGxheSB0aGVzZSBnYW1lcyBmcm9tIHBsYXlpbmcgMjAwbmx6IHVubGVzcyB5b3UgaGF2ZSBzb21lb25lIHdobyBjYW4gYmFjayB5b3UuIApGcm9tIHlvdXIgc2lzdGVyIHBvaW50IG9mIHZpZXcsIChhbmQgbXkgb3duIHdpdGggbXkgc2lzdGVyKSBpdCBwcm9iYWJseSByZWFsbHkgcGFpbmZ1bCB0byB3YXRjaCBzb21lb25lIHlvdSBsb3ZlIGdvIGJhY2sgYW5kIGJlIG1hbmlwdWxhdGVkIGJ5IHNvbWVvbmUgeW91IGtub3cgaXMgYXdmdWwuIApNYXliZSBCYXJiIGlzIGp1c3QgYXMgc3VnZ2VzdGlibGUgYXMgQnJlbmRhbiB3YXMsIGFuZCBzaGUgaGFkIHNvbWVvbmUgaW4gaGVyIGVhciAoYW5kIGluIGhlciBiZWQpIHRha2luZyBhZHZhbnRhZ2Ugb2YgdGhhdC4gU2NvdHQgd291bGQgd2hpc3BlciBwb2lzb24gaW4gaGVyIGVhciBhYm91dCBCcmVuZGFuIGFuZCB3aGF0IHNoZSBzaG91bGQgZG8uIFdoeSBkbyB3b21lbiBzdGF5IHdpdGggYWJ1c2l2ZSBtZW4/IEJlY2F1c2UgdGhleSBhcmUgbWFzdGVyZnVsIGF0IG1hbmlwdWxhdGluZyB3b21lbiBpbnRvIGRpc3RydXN0aW5nIGV2ZXJ5b25lIGJ1dCB0aGUgYWJ1c2VyLCBpc29sYXRpbmcgdGhlbSwgYW5kIGRlc3Ryb3lpbmcgdGhlaXIgc2VsZiBlc3RlZW0uIFNoZSBlaXRoZXIgY29tcGxldGVseSBiZWF0ZW4gZG93biwgb3IgYSBuYXJjaXNzaXN0aWMgcHN5Y2hvcGF0aC4gT3IgcmVhbGx5LCByZWFsbHkgc3R1cGlkLgpMaWtlIEkgbG9va2luZyBmb3IgYW4geHl6IHJlcG9ydGluZyB0byBtZSwgc28gSSB0aGUgaGlyaW5nIG1hbmFnZXIgZm9yIHRoYXQgcG9zaXRpb24uIApBbmQgdGhlIGZhdCBhY3RpdmlzdHMgd2hvIGNsYWltIHRoYXQgaXRzIGEgbWVkaWNhbCBpc3N1ZSAoc3VjaCBhcyBoeXBvdGh5cm9pZGlzbSksIGlzc3VlcyB3aXRoIHRoZSB0aHlyb2lkIHVzdWFsbHkgYWNjb3VudCBmb3IgYXQgbW9zdCBhcm91bmQgMTAgbGJzIG9mIHdlaWdodCBnYWluLiBOb3QgdGhlIGh1bmRyZWRzIHRoZXNlIHBlb3BsZSB1c3VhbGx5IGFyZSBvdmVyIHRoZSBoZWFsdGh5IHdlaWdodCByYW5nZS4gCkl0J3Mgbm90IG5lYXJseSBhcyBkZXZvbHZlZCAob3IgYXMgZnVuKSBhcyBDSSwgYnV0IGl0IGdpdmVzIGEgYml0IG1vcmUgc3RydWN0dXJlIHRvIHRoYXQgc3R5bGUgb2YgcGxheS4gCkFzZ2Fyb25lYW4gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNyBob3VycyBhZ28KSSBlbmpveSB3b3JraW5nIHdpdGggbWF0aGVtYXRpY3MgYW5kIG51bWJlcnMsIHNvIEkgdGhpbmsgdGhpcyBpcyB0aGUgcmlnaHQgZmllbGQgb2Ygc3R1ZHkgZm9yIG1lLiBNeSBzZW5pb3IgeWVhciBpbiBoaWdoIHNjaG9vbCBJIGhhdmUgYmVnYW4gdG8gaW50cm9kdWNlIG15c2VsZiBpbnRvIGJ1c2luZXNzIGNsYXNzZXMgdG8gcHJlcGFyZSBteXNlbGYgZm9yIHdoYXQgaXQgd2lsbCBiZSBsaWtlLCBhbmQgSSBtYWludGFpbiBteXNlbGYgdGhyb3VnaCB0aG9zZSBjbGFzc2VzLi4gClllYWgsIGZ1Y2sgdGhhdC4gbXkgcGVyc29uYWwgaGVhbHRoIGNvbWVzIGZpcnN0LiB0aGF0J3Mgbm90IGJlaW5nIGxhenksIGl0J3MgYmVpbmcgbWF0dXJlIGFuZCBrbm93aW5nIGhvdyB0byBwcmlvcml0aXNlLiBpdCdzIG5vdCBteSBmYXVsdCB0aGF0IHlvdSBtYW5hZ2VkIHRvIGVhcm4gYSBQaEQgYmVmb3JlIHlvdSBsZWFybmVkIHRvIGhhdmUgYmFzaWMgZW1wYXRoeS4KQW5kIEkgbm90IHRoZSBvbmx5IG9uZS4gCkhhemFtYSBIb25va2EgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCldoZW4gSSBzdGFydCBhY3R1YWxseSBwcm9kdWNpbmcgdGhlbSBvdXQgb2YgY2FyYm9uIG1vc3Qgb2YgbXkgZXhwZW5zZXMgd2lsbCBiZSBpbiBtYXRlcmlhbHMuLiAKVmVuZXp1ZWxhLCBDb2xvbWJpYSwgYW5kIEJvbGl2aWEgd2VyZSBhbGwgaW4gdGhlIG1pZHN0IG9mIHBvbGl0aWNhbCBpbnN0YWJpbGl0eSwgd2l0aCBnb3Zlcm5tZW50cyBlbGV2YXRlZCBieSBjb3VwIG9yIHJldm9sdXRpb24sIGFuZCB3aGlsZSBoYXZpbmcgbm8gZGVzaXJlIHRvIGFsaWVuYXRlIHRoZW0sIGZvciB0aGUgVVMgdG8gcmVjb2duaXplIHRoZW0gbWlnaHQgZ2l2ZSB1bmludGVuZGVkIG1vcmFsIGFpZCB0byB0aGUgQ29uZmVkZXJhY3kuIApMYWR5IEdhZ2Egd2FzIDE3IHdoZW4gc2hlIGdvdCBoZXIgZmlyc3QgdGF0dG9vLiAKSSBzdXBwb3J0ZWQgQmVybmllIGVhcmx5IGluIHRoZSAyMDE2IHByaW1hcnkuIEkgdGhvdWdodCBoaXMgQU1FUklDQSEgYWQgd2FzIG9uZSBvZiB0aGUgYmVzdCBwb2xpdGljYWwgYWRzIEkgZXZlciBzZWVuLiBJIGZlbHQgaGUgd2FzIHNvbWVvbmUgdGhhdCBjb3VsZCB1bml0ZSB0aGUgY291bnRyeSAgIFJlZCBhbmQgQmx1ZSwgQmxhY2sgYW5kIFdoaXRlLCBSaWNoIGFuZCBQb29yLiAKWW91ciBtdXNpYyBoYXMgYmVlbiBhIHN0YXBsZSBpbiBteSBwbGF5bGlzdHMgdGhyb3VnaCA0IHllYXJzIG9mIGNvbGxlZ2UgYW5kIDUgeWVhcnMgb2YgZ3JhZCBzY2hvb2wuIEkgbGlzdGVuZWQgdG8gaXQgdG8gY2FsbSBtZSBkb3duIGJlZm9yZSBteSBmaW5hbCBwcmVzZW50YXRpb24gaW4gZ3JhZCBzY2hvb2wgdG8gZWFybiBteSBQaEQuIEkgcGxheWVkIGl0IGF0IG15IHdlZGRpbmcuIApIZSBub2RzIGFwcHJvdmluZ2x5IGFuZCBhZGRzIHRocmVlIGJ1Y2tzIG9udG8gbXkgYWxyZWFkeSBleHBlbnNpdmUgY2FiIHJpZGUuIApJIGNvdWxkIHRlbGwgcG9vciBwZW9wbGUgaW4gM3JkIHdvcmxkIGNvdW50cmllcyB3aXRoIGJhZCBsaXZpbmcgY29uZGl0aW9ucyB0byAid29yayBoYXJkIiBhbmQgd2hhdCB3aWxsIHRoYXQgZ2V0IG1lPyBQZW9wbGUgc2hpdHRpbmcgb24gbWUgZm9yIGJlaW5nIGluY29uc2lkZXJhdGUuIEJ1dCBhbnlvbmUgZGFyZSB0ZWxsIGFuIHVnbHksIHBvb3IsIG1lbnRhbGx5IGlsbCBwZXJzb24gdG8gIndvcmsgaGFyZCBhbmQgc3VjY2VlZCIgYW5kIGl0ICJnb29kIGFkdmljZSIgZm9yIHNvbWUgb2RkIHJlYXNvbiwgZGVzcGl0ZSB0aGUgc2FtZSBjb25jZXB0IGFuZCByZWFzb25pbmcgYmVoaW5kIGl0Li4gClRoZSBmcmVlIENvbXBhbmlvbiBBcHAgb24gaU9TIGFuZCBBbmRyb2lkIHBpdHMgdGhlIGNvbnNvbGUgcGxheWVyIGFnYWluc3QgdGhlIG9uZSBob2xkaW5nIHRoZSB0YWJsZXQuIApIYW5ub24sIGFnZSB1bmF2YWlsYWJsZSwgb2YgUmVhZGluZyB3ZXJlIGNoYXJnZWQgd2l0aCBwcm9zdGl0dXRpb24gaW4gY29ubmVjdGlvbiB3aXRoIGEgcG9saWNlIGludmVzdGlnYXRpb24gb2YgVGhlIEJvZHkgQmFuaywgYSBtYXNzYWdlIHBhcmxvciBhdCBNb3JyaXMgUnVoZidzIGFkZHJlc3MsIHBvbGljZSBzYWlkLiAKWW91IGtub3csIGVhdCB0aGUgc2FtZSBmb29kIHlvdSBhdGUgYmVmb3JlLiBCZSBsaWtlIGEgbWFjaGluZSBpcyBiYXNpY2FsbHkgaXQuIEkga25vdyB0aGVyZSBhIHB1cnBvc2UgZm9yIGl0IGFuZCB0aGUgd29yayBJIGRvIGhhcyBhY3R1YWwgbWVhbmluZywgYnV0IGRhbW4sIHNvbWV0aW1lcyBpdCBnZXQgaG9tZSB0b28gdGlyZWQgLyBzdHJlc3NlZCB0byBlbmpveSBsaWZlLi4gCldoZW4gSSBkaWQgZmluYWxseSBsb3NlLCBJIGRlY2lkZWQgbXkgd2lubmluZyBzdHJlYWsgd2FzIG92ZXIgc28gSSBncmFiYmVkIHVwIG15IGNoaXBzLCBjYXNoZWQgdGhlbSBpbiwgYW5kIGpvaW5lZCB0aGUgZ3V5cyBmb3IgYSBuaWNlIGJ1ZmZldCBkaW5uZXIuIFRoYXQgbmlnaHQgSSBoZWFkZWQgYmFjayB0byB0aGUgY2FzaW5vIGZvciBhbm90aGVyIHNob3QgYXQgdGhlIHBva2VyIHRhYmxlcy4gQW5kIHRoZXJlIHNoZSB3YXMuIEkgaW1tZWRpYXRlbHkgc2F3IGhlciBhdCBvbmUgb2YgdGhlIHByaWNpZXIgcG9rZXIgdGFibGVzIGFuZCBkZWNpZGVkIHRoYXQgbWF5YmUgbXkgc2tpbGxzIGNvdWxkIGltcHJlc3MgaGVyLgpBbmQgdGhlIGp1ZGdlLCBDYW1lcm9uIEN1cnJpZSwgd2FzIGNvcnJlY3QgaW4gaGlzIGFzc2Vzc21lbnQgdGhhdCBzdGF0ZXMgYXJlIG5vdCBpbiB0aGUgYnVzaW5lc3Mgb2YgaXNzdWluZyBDaHJpc3RpYW4gcGxhdGVzLgoiSGUgaGFkIGEgZnVsbCBkZXRhaWxpbmcgZG9uZSBvZiBib3RoIHRoZSBleHRlcmlvciBhbmQgaW50ZXJpb3Igb2YgaGlzIENhbWFybywgIiBzYWlkIHByb3NlY3V0b3IgTWljaGFlbCBOaWV0by4KWW91IG1heSB0cnVzdCBtZSB3aGVuIEkgc2F5IHRoYXQsIG9yIHlvdSBtYXkgbm90LiBJdCB1cCB0byB5b3UuLiAKV2Ugd2VyZSBnb25uYSBlbmpveSBsaWZlIGEgbGl0dGxlIGJpdC4gQnV0IG9uZSBtb3JuaW5nIGluIDIwMDMsIEplcnJ5IGhhcHBlbmVkIHRvIHdhbGsgYmFjayBpbnRvIHRoZSBjb3JuZXIgc3RvcmUgYW5kIHNwb3R0ZWQgYSBicm9jaHVyZSBmb3IgYSBicmFuZCBuZXcgbG90dGVyeSBnYW1lIGNhbGxlZCBXaW5mYWxsLiAKVGhhdCBJIGFtIG5vdCBuZXJ2b3VzLiBBIGJpdCBvZiB0ZW5zaW9uIGlzIG5vcm1hbC4gSWYgZXZlcnl0aGluZyBpcyBnb2luZyB3ZWxsClRoZXJlIGlzIGEgcG9zdCBvbiBob3cgdG8gZG8gaXQgd2l0aCB1c2VycyBvbiBoZXJlLlB1cHRlbnRqb2UgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSSB3aXNoIHRoZXJlIHdhcyBhIHdheSB0byBvbmx5IHNob3cgc3R1ZmYgZ3JhYmJlZCBieSBSU1MgdnMgQmF0Y2ggYWRkIGJlY2F1c2UgdGhpcyBncmFwaCB3aWxsIGxvb2sgZGlmZmVyZW50LiBPTUcgYW5kIHRoZSBvdGhlcnMgYmVjYW1lIGZyb250IHJ1bm5lcnMgd2hlbiBJIGdyYWIgYmlnZ2VyIG9sZGVyIHNlcmllcy5JIGp1c3QgZGlkIGEgcXVpY2sgc2VhcmNoIFRWIHNlYXJjaCBvbiBhIHNob3cgdGhhdCBjYW1lIG91dCBpbiAxOTc0IGFuZCB0aGUgb25seSByZXN1bHRzIGFyZSBmcm9tIE9NRywgR0VFSywgYW5kIFNsdWcuIApBcyBwYXJ0IG9mIGEgcHVzaCB0byBtYXhpbWlzZSB0aGlzIHJldmVudWUgc3RyZWFtLCB3b3JrIG9uIGEgbmV3IG5vbiBzbW9raW5nIGRpbmluZyB0ZXJyYWNlIGFyZWEgaXMgZm9yZ2luZyBhaGVhZC4gCkhlIHdhcyBzZWxmbGVzcyBpbiBoaXMgZmluYWwgbW9tZW50cyBvbiBlYXJ0aCBhbmQgY2hvc2UgdG8gaGVscCBzYXZlIG90aGVycyBieSBkb25hdGluZyBoaXMgb3JnYW5zLiAKSGVwIGhvc3VtYSBnaXRtaXN0aXIgZWtzaS4gClRyYWRpdGlvbmFsIHJlbWVkaWVzIGluY2x1ZGUgaGVyYmFsIG1lZGljaW5lcywgYWN1cHVuY3R1cmUsIG1hc3NhZ2UgYW5kIG1veGlidXN0aW9uLCBhbiBoZXJiYWwgaGVhdCB0aGVyYXB5LiAKQ29yZ2xlZXNpIHUKSSByZXNwZWN0ZWQgVGF0aGFuIChkb24ndCBnaXZlIGhpbSB0aGUgZGlnbml0eSBvZiByZWZlcnJpbmcgdG8gaGltIGFzIFRhdGUpLCBidXQgaGltIHRyYW5zZmVycmluZyB0byBNaWFtaSBwcm92ZXMgaGUgaXMgYSB3aW1wIGZvciByZWZ1c2luZyB0byBldmVuIGF0dGVtcHQgdG8gY29tcGV0ZSB3aXRoIEZpZWxkcy4KQWJlciBiZWltIEtub3ggU2luZ2xlIFRhYmxlIHR1cm5pZXIgYmVpIGkgTmV0d29yayB3dXJkZSBkZXIgQ2FzaW5vIEphY2twb3QgaW4gSGhlIHZvbiAkMTEwLDAwMCB0YXRzY2hsaWNoIGdla25hY2t0LiBEZXIgaXJpc2NoZSAgIHN0YXJ0ZXRlIHNlaW5lbiBhbSBNb3JnZW4gZGVzIDE5LiAKQnJhZGxleSwgdGhlIGVpZ2h0IHllYXIgTUxTIHZldGVyYW4gd2hvIHdhcyBzY29yZWxlc3MgaW4gYmFjayB0byBiYWNrIDMwIHBsdXMgc3RhcnQgc2Vhc29ucywgc2NvcmVkIHRoZSBmaXJzdCBnb2FsIG9mIHRoZSAyMDE5IHNlYXNvbiBpbiBmaXJzdCBoYWxmIHN0b3BwYWdlIHRpbWUgd2l0aCBhbiBlYXN5IHJlZGlyZWN0aW9uIG9mIEF1cm8ncyBjcm9zcyB0byB0aGUgcGVuYWx0eSBzcG90LiBIaXMgc2Vjb25kIGdvYWwgaW4gdGhlIDYybmQgbWludXRlIGFsc28gY2FtZSBvbiBhbiBvcGVuIHNob3QgZnJvbSB0aGUgc3BvdC4KIldlJ3JlIHNvIGJsZXNzZWQsIiBoZSB0ZWxscyBoZXIsIGxvdmluZ2x5LgpJIHdlbnQgdG8gdGhlIGxhYm91ciBEZXB0IHllc3RlcmRheSBhbmQgc3Rvb2QgaW4gYSBtYXNzaXZlIHF1ZXVlIGZvciBhbiBob3VyIGFuZCBhcyBJIGdvdCBhYm91dCBmaWZ0aCBmcm9tIHRoZSBmcm9udCB0aGV5IHNhaWQgdGhlIHN5c3RlbSBpcyBvZmZsaW5lLiAKTm93LCBldmVuIHRob3VnaCBVSEYgaXNuJ3QgZXhhY3RseSBhIGdyaXR0eSBkb2N1bWVudGFyeSBhYm91dCB0aGUgbGF0ZSAnODBzIG1lZGlhIGxhbmRzY2FwZSwgYSBjaGFyYWN0ZXIgZG9lcyBhY2N1cmF0ZWx5IG1lbnRpb24gdGhhdCBpdCdzIGlsbGVnYWwgZm9yIHNvbWVvbmUgdG8gb3duIHR3byBzdGF0aW9ucyBpbiB0aGUgc2FtZSB0b3duLiBPciBhdCBsZWFzdCwgdGhhdCdzIGhvdyBpdCB3YXMgYmFjayB0aGVuLiBJbiAxOTk2LCB0aGUgVGVsZWNvbW11bmljYXRpb25zIEFjdCBtYWRlIGl0IGxlZ2FsIGZvciBjb21wYW5pZXMgdG8gb3duIG11bHRpcGxlIGNoYW5uZWxzIGluIHRoZSBzYW1lIGdlb2dyYXBoaWNhbCBsb2NhdGlvbiAgIG1lYW5pbmcgdGhhdCB0b2RheSwgYW55IG51bWJlciBvZiBuYXRpb25hbCBtZWdhY29ycG9yYXRpb25zIHdvdWxkIGJlIGZyZWUgdG8gYmlkIG9uIHRoZSBzdGF0aW9uLCBjYXVzaW5nIGl0cyB2YWx1ZSB0byBza3lyb2NrZXQuClBva2VyIFN0YXJzIGlzIGEgdG9wIG5vdGNoIHNpdGUgd2hlcmUgcGxheWVycyBvZiB0aGUgYWJvdmUgYXZlcmFnZSBjcml0ZXJpYSBhcmUga25vd24gdG8gZG9taW5hdGUuIFRoZSBzdGFuZGFyZCBvZiB0aGUgZ2FtZSBwbGF5ZWQgaGVyZSBpcyBhbHNvIHZlcnkgaGlnaC4uIApOb3cgSSByZWFkIHRoYXQgdGhlIHJlY2VudCBzbm93cyBpbiB0aGUgVVMgYXJlIGdpdmluZyB0aGUgIm90aGVyIHNpZGUiIG9mIHRoZSBnbG9iYWwgd2FybWluZyBkZWJhdGUgYW1tdW5pdGlvbi4gCklmIHlvdSBjYW4gaWRlbnRpZnkgYSB0ZWxsIGluIHlvdXIgb3Bwb25lbnRzIHBsYXkgdGhlbiB5b3UgY2FuIHNwb3QgdGhlaXIgd2Vha25lc3MuIApCdXQgc2luY2UgaGUncyBhIHBpZWNlIG9mIHNoaXQsIG5vdyB5b3Ugc3VwcG9ydCBwaWVjZXMgb2Ygc2hpdC4gQmFzaWNhbGx5LCBhbnlib2R5IGNhbiBkbyBhbnl0aGluZywgYXMgbG9uZyBhcyB0aGV5IGNhbGwgdGhlbXNlbHZlcyBhIFJlcHVibGljYW4uIERvbmFsZCBUcnVtcCBjb3VsZCBzaGl0IGluIHlvdXIgbW91dGggYW5kIHlvdSB3b3VsZCBsZXQgaGltIHNoaXQgaW4geW91ciBtb3V0aC4gClRoYXcgaXQgb24gdGhlIGNvdW50ZXIgZm9yIHNldmVyYWwgaG91cnMsIG9yIGluIHRoZSBvdmVuIGhvdyBsb25nIGRlcGVuZHMgb24gdGhlIHNpemUgb2YgdGhlIGxvYWYuIFBhY2thZ2VkIHNsaWNlZCBicmVhZCBjYW4gc3RheSBpbiBpdHMgYmFnLiBQdWxsIG91dCBzbGljZXMgYXMgeW91IG5lZWQgdGhlbTsgdGhleSB3aWxsIGRlZnJvc3QgcXVpY2tseS4uIApUaGUgYmVzdCB0aGVvcnkgaSByZWFkIHN5YXMgdGhhdCBpbiBhIGh1bmRyZWQgeWVhcnMsIG1vc3QgY291bnRyaWVzIHdpbGwgaGF2ZSBzcGFjZSBjb2xvbmllcywgd2hpY2ggd2lsbCBiZSB1c2VkIHRvIGdhdGhlciBlbmVyZ3kgYW5kIG1pbmVyYWxzLiBGYXIgRWFzdCBBc2lhIHdpbGwgYmUgdW5pZmllZCBhcyBhbiBlY29ub21pYyBwb3dlcmhvdXNlLCBhbmQgRXVyb3BlIHdpbGwgaGF2ZSBmYWxsZW4gZmFyIGJlaGluZCB0aGVtIGFuZCB0aGUgVVMgZHVlIHRvIHBvcHVsYXRpb24gY3J1bmNoLiAKQ2hlY2sgdG8gc2VlIGlmIHlvdXIgc2Nob29sIGFjY2VwdHMgdGhpcyB0eXBlIG9mIGFpZCBhbmQgZmlsbCBvdXQgdGhlIEZyZWUgQXBwbGljYXRpb24gZm9yIEZlZGVyYWwgU3R1ZGVudCBBaWQgKEZBRlNBKS4gClNvbWUgb2YgdGhlIGZpcnN0IGltcHJvdmVtZW50cyBpbmNsdWRlZCBhbiB1cGdyYWRlZCBidWZmZXQsIGdhbWluZyBmbG9vciBhbmQgdGhlICJKdWtlIEpvaW50IiBuaWdodGNsdWIuIEluIE1heSwgU291dGhsYW5kIGFkZGVkIGEgc3RlYWtob3VzZS4gClN3ZWF0aW5nLCByYXNoZXMgYW5kIGV2ZW4gZnVuZ2FsIGluZmVjdGlvbnMgYXJlIGFsc28gcG9zc2liaWxpdGllcy4gCklmIHlvdSBjYW4ndCBjb21taXQgdG8gYmUgYSBzdGFmZmVyLCB0aGVuIHZvbHVudGVlcmluZyBpcyB0aGUgbmV4dCBiZXN0IHRoaW5nLiBUaGlzIHllYXIsIEJDRk0gaGFzIGEgcG9vbCBvZiBpbmNlbnRpdmVzIGZvciByZWd1bGFyIHZvbHVudGVlcnMuIApCcmllZiB2YW4gZGUgbWluaXN0ZXIgdmFuIE9uZGVyd2lqcywgQ3VsdHV1ciBlbiBXZXRlbnNjaGFwLltHb29nbGUgU2Nob2xhcl0pLiAKRXZlbiB0aG91Z2ggSSBoYXZlIGhhZCB0aGlzIGFjY291bnQgd2l0aCB0aGVtIGZvciBvdmVyIDQgeWVhcnMuLiAKNykgVGhlIG5vcm1hbCBXZXN0ZXJuIGRpZXQgY29udGFpbnMgbGl0dGxlIEFMQSBbZmxheHNlZWQgb2lsLCBldGMuXSwgcHJvdmlkaW5nIGxlc3MgdGhhbiA1MCUgb2YgdGhlIFJEQS4KTW9vbmxpZ2h0aW5nIGNhbiBiZSBhIGdyZWF0IHdheSB0byB1c2UgeW91ciBza2lsbHNldCB0byBicmluZyBpbiBzb21lIGV4dHJhIGNhc2ggb24gdGhlIHNpZGUuIEZvciBzb21lLCBpdCBtYXkgYWxzbyBiZSBhIHdheSB0byBqdXN0aWZ5IHdyaXRpbmcgb2ZmIHNvbWUgb3RoZXJ3aXNlIGV4cGVuc2VzLCBzdWNoIGFzIGV4cGVuc2VzIGZvciB0aGUgYnVzaW5lc3MgdXNlIG9mIGEgd29yayBzcGFjZSBpbiB5b3VyIGhvbWUsIGZvciB0YXggcHVycG9zZXMuIApMYWR5IEdhR2EpLCBDaGFuZ2luZ1NraWVzLCBEbyBNZSBSaWdodCAoZmVhdC4gTGFkeSBHYUdhKSwgR3JlYXRlc3QsIEhvbGx5d29vZCBbTGl2ZUF0IHRoZSBCaXR0ZXIgRW5kIDEvMjAvMDZdICxTb21ldGltZXMgLiA5MykgMyBXYXkgKFRoZUdvbGRlbiBSdWxlKSBbZmVhdC4gSnVzdGluIFRpbWJlcmxha2UgTGFkeSBHYUdhXSBpcyBhY29tZWR5IHNpbmdsZSB3aXRoIGNvbWVkaWFucyBmZWF0dXJpbmcgdGhlIG9uZSBhbmQgb25seSBMYWR5IEdhR2EhQ2FuIGdldCB0aGlzIHNvbmcgb24gaVR1bmVzLiA5NCA5NikgQWxsIG9mIHRoZXNlIHNvbmdzIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXM6IE11cmRlciBNeSBIZWFydCAoZmVhdC4gCkkgYWR2aXNlZCBhIGdyb3VwIDIgMyB5ZWFycyBhZ28gdGhhdCBoYWQgdGhlIGV4YWN0IHNhbWUgaWRlYS4gSSBrbm93IG90aGVycyBoYWQgaXQgdG9vLiBJIG5vdCBzdXJlIHdoYXQgaGFwcGVuZWQgdG8gdGhlbSwgR29vZ2xlIGl0LiAKQWZ0ZXIgdGhlIHdhciwgaGUgaW1taWdyYXRlZCB0byBDYW5hZGEsIG1hcnJpZWQsIGFuZCBsaXZlZCBpbiBLaXRjaGVuZXIgb24gTWVybmVyIEF2ZW51ZSBmb3IgbW9zdCBvZiBoaXMgbGlmZS4gSGUgcmV0aXJlZCBmcm9tIEdlbmVyYWwgU3ByaW5ncy9MZWFyIFNpZWdsZXIgaW4gMTk4OC4gSW4gMjAwNCwgaGUgYW5kIEhlbGVuIG1vdmVkIHRvIExvbmRvbiB0byBsaXZlIHdpdGggdGhlaXIgZGF1Z2h0ZXIuIApJIGFjdHVhbGx5IGxpa2UgdGhlIHNoeSBNQyBhcmNoZXR5cGUuIApUaGUgc3RhbmRhcmQgZGV2aWF0aW9uIGlzIGEgbWVhc3VyZSBvZiByaXNrLiAKSXQgdGhpcyBwcm9jZXNzIHRoYXQgY2F1c2VzIHRoZSBjaGFuZ2UgaW4gZmxhdm9yLi4gCk91dCBvZiAxMjc2IHRpbWVzIGJlaW5nIHRoZSBmYXZvcml0ZSBwcmVmbG9wLCBwb3N0IGZsb3AsIGFuZCB0dXJuLCBJIHdvbiBhbiBpbmNyZWRpYmxlIDE4IHRpbWVzLiBJIHdvdWxkIHNheSB0aGF0IHRoaXMgZGVmaWVzIGFsbCBvZGRzLiAKQ2lucSBwaWNlcyAoQ2hpbmUpIDogYmFkaWFuZSwgc2ljaHVhbiwgZmVub3VpbCwgY2FubmVsbGUsIGdpcm9mbGUuCkhlIGlzIGNyZWRpdGVkIHdpdGggZGVzdHJveWluZyBhIFNvdmlldCBCYXR0bGVzaGlwLCB0d28gY3J1aXNlcnMgYW5kIGEgZGVzdHJveWVyLCA1MTkgdGFua3MsIDE1MCBTZWxmIFByb3BlbGxlZCBBcnRpbGxlcnkgd2VhcG9ucywgNCBhcm1vcmVkIHRyYWlucyBhbmQgbmluZSBhaXJjcmFmdCBpbmNsdWRpbmcgc2V2ZW4gZmlnaHRlcnMuIEhlIHdhcyBrbm93biBhcyB0aGUgRWFnbGUgb2YgdGhlIEVhc3Rlcm4gRnJvbnQuIChGdWxsIEFuc3dlcikuIApCZWFzbGV5LCBDcm93ZGVyLCBDb2JiLCBIdW1waHJpZXMsIFRhdGUsICAgZXZlbiBndXlzIGxpa2UgSG9nYW4gYW5kIFdpbGxpYW1zIHBsYXkgb3V0IG9mIHRoZSBzbG90IG1vcmUgdGhhbiA1MCUgb2YgdGhlaXIgc25hcHMuIEpvaG4gQnJvd24sIERvbnRlIE1vbmNyaWVmLCBhbmQgRGV2aW4gRnVuY2hlc3MgbWF5IGJlIHRoZSB0b3AgcHJlZG9taW5hdGVseSBvdXRzaWRlIHJlY2VpdmVycyBhdmFpbGFibGUuIAozLCIgYmVsaWV2ZWQgdG8gYmUgdGhlIG5vdyBtYXJyaWVkIEdpdWZmcmUsIGFsbGVnZWQgdGhhdCBFcHN0ZWluIHdpcmVkIGhpcyBtYW5zaW9uIHdpdGggaGlkZGVuIGNhbWVyYXMsIHNlY3JldGx5IHJlY29yZGluZyBvcmdpZXMgaW52b2x2aW5nIGhpcyBwcm9taW5lbnQgZnJpZW5kcyBhbmQgdW5kZXJhZ2UgZ2lybHMuIApJbiBhZGRpdGlvbiB0byB0aGVzZSBzZXh1YWwgc2VjcmV0aW9ucywgc29tZSB3b21lbiBoYXZlIHRoZSBhYmlsaXR5IHRvICJlamFjdWxhdGUuIiBJdCBpcyBiZWxpZXZlZCB0aGF0IHRoZSBTa2VuZSBnbGFuZHMsIGxvY2F0ZWQgaW4gYSB3b21hbiB1cmV0aHJhLCBwcm9kdWNlIGEgbGlxdWlkIHRoYXQgaXMgYmVsaWV2ZWQgdG8gY29udGFpbiBoaWdoIGxldmVscyBvZiBwcm9zdGF0aWMgYWNpZCBwaG9zcGhhdGFzZSAoYSBjaGVtaWNhbCBzZWNyZXRlZCBieSB0aGUgcHJvc3RhdGUgZ2xhbmQgYW5kIGZvdW5kIGluIHNlbWVuKSwgZ2x1Y29zZSwgYW5kIGZydWN0b3NlLiAKSW4gaXRzIGJyb2FkZXN0IGdsb2JhbCBkaXZlcnNpZmljYXRpb24gbW92ZSB0byBkYXRlLCBaeW5nYSBvbiBKdWx5IDI2IGFubm91bmNlZCB0aGF0IGl0IGhhcyBwYXJ0bmVyZWQgd2l0aCBUZW5jZW50LCBvbmUgb2YgQ2hpbmEgdG9wIEludGVybmV0IHNlcnZpY2UgcHJvdmlkZXJzLiAKU3RlbGxhciwgc29tZXRpbWVzIG9mZiB0aGUgd2FsbCB3cml0aW5nIG1ha2VzIHVwIGZvciBwb29yIGFuaW1hdGlvbiBpbiB0aGlzIHNlcmllcyB3aGljaCBmb2xsb3dzIHRoZSBsaXZlcyBvZiBmb3VyIHRoaXJkIGdyYWRlcnMgYXQgU291dGggUGFyayBFbGVtZW50YXJ5IFNjaG9vbDogU3RhbiwgS3lsZSwgQ2FydG1hbiwgYW5kIEtlbm55LiBJbiBPY3RvYmVyIGl0IHdhcyBhbm5vdW5jZWQgdGhhdCBKaW0gTGV5bGFuZCB3YXMgY29taW5nIG91dCBvZiByZXRpcmVtZW50IGFuZCBoYWQgYWNjZXB0ZWQgdGhlIFRpZ2VycyBtYW5hZ2VyaWFsIGpvYi4gTGV5bGFuZCBpcyBsb29raW5nIHRvIGhlbHAgY2hhbmdlIHRoZSB0ZWFtJ3MgZm9ydHVuZXMgZm9yIDIwMDYgYW5kIGJleW9uZCBidXQgaGUgd2lsbCBoYXZlIGhpcyB3b3JrIGN1dCBvdXQgZm9yIGhpbS4gCkkgdHJhdmVsaW5nIHJpZ2h0IG5vdywgSSByZS9idWlsZGluZyBteSByb3V0aW5lIGR1ZSB0byBhIGJhZCByZWFjdGlvbiwgYW5kIEkgbGlrZSB0byBleGNoYW5nZSBpdCBmb3IgdGhlIGZvYW1pbmcgY2xlYW5zZXIuIChIb3BlZnVsbHkgdGhpcyB3b3JrcyBkb2VzbiBib3RoZXIgbXkgc2tpbiEpIEkgYWxzbyByZWFsaXplIHRoYXQgdGhlaXIgd2Vic2l0ZSBzYXlzIHRoYXQgdGhleSBhbGxvdyBhIHJldHVybiB3aXRob3V0IGEgcmVjZWlwdCBmb3Igc29yZSBjcmVkaXQgYnV0IEkgYSBiaXQgc2tlcHRpY2FsLi4gCk5vIHN1cnByaXNlLCBzaW5jZSBEb3VnIGV4Y2VsbGVkIGF0IGFueXRoaW5nIGhlIHNldCBoaXMgbWluZCB0byBkbywgaGUgd2FzIGEgdmVyeSBnb29kIGRhbmNlciEgRG91ZyBsb3ZlZCBzcGVuZGluZyBzdW1tZXJzIGF0IGhpcyBjb3R0YWdlIG9uIExha2UgU2N1Z29nIGVuam95aW5nIGZhbWlseSwgZnJpZW5kcywgYW5kIHRoZSBvdXRkb29ycy4gCkhvdyBpcyB0aGF0IHdyb25nIG9yIHJhY2lzdD8gRnVydGhlcm1vcmUsIGlmIHlvdSBhIG1peGVkIHJhY2UgcGVyc29uLCBlc3BlY2lhbGx5IGlmIHlvdSBvbGRlciwgeW91IHZlcnkgd2VsbCByZW1lbWJlciBiZWluZyB0ZWFzZWQgZm9yIHRoaXMgZ3Jvd2luZyB1cCwgYmVpbmcgdW5hY2NlcHRlZCBieSB5b3VyIHBlZXJzLCBiZWluZyBtYWRlIHRvIGZlZWwgYXNoYW1lZCBvZiB5b3VyIG1peGVkIHJhY2UgaGVyaXRhZ2UgICBhZ2FpbiwgdGhpcyBpcyBtZSBzcGVha2luZyBmcm9tIHBlcnNvbmFsIGV4cGVyaWVuY2UgICBzbyB3aGVuIHlvdSBzZWUgYSBtaXhlZCByYWNlIGNvdXBsZSwgaXQgY2FuIHdhcm0geW91ciBoZWFydCBieSByZW1pbmRpbmcgeW91IHRoYXQgdGhpbmdzIGFyZSBjaGFuZ2luZywgd2UgbW92aW5nIGZvcndhcmQgYXMgYSBzb2NpZXR5IGFuZCB3aGF0IHdhcyBvbmNlIHRhYm9vIGlzIGJlY29taW5nIGNvbXBsZXRlbHkgbm9ybWFsLiBXZSBtb3ZpbmcgdG93YXJkIGEgbW9yZSBhY2NlcHRpbmcgc29jaWV0eSBhbmQgc2VlaW5nIHRoaXMgcmFuZG9tIG1peGVkIHJhY2UgY291cGxlIGlzIGluZGljYXRpdmUgb2YgdGhhdC4gCkEgY29pbmNpZGVuY2UsIHBlcmhhcHMsIGJ1dCBJIHRoaW5rIEJhcmJpZSBtYXkgaGF2ZSBiZWVuIGEgQ0lBIGFnZW50Li4gCkkgdGhpbmsgdGhleSBtZWFuIHRoaXMuIApBbHdheXMgY29uc3VsdCB5b3VyIGRvY3RvciBiZWZvcmUgZWxpbWluYXRpbmcgZm9vZHMgZnJvbSB5b3VyIGRpZXQuIApXYXkgdG8gbGVhdmUgb3V0IGhhbGYgdGhlIHN0b3J5OiAiU29tZSB0ZWFjaGVycyB3ZXJlIGV2ZW4gd29yc2UsIFNvZWxsIHNhaWQuIApBbmQgdGhlIHN0YXRlbWVudCB0aGF0IGhlIGdhdmUgYXQgdGhlIGNyaWNrZXQgZ3JvdW5kIGhhZCB1cyBldmVuIG1vcmUgY29uZnVzZWQuIApXaXRoIGEgMzcgMCByZWNvcmQgYW5kIHBlcmhhcHMgdGhlIG1vc3QgYXZvaWRlZCBmaWdodGVyIG9uIHRoZSBwbGFuZXQsIEdHRyBtYWtlcyBhIHN0cm9uZyBjYW5kaWRhdGUuLiAKRG8gbm90IHBhc3MgZ28uIApJZiBpdCBpcyB1c2VkIGFzIGEgcmhldG9yaWNhbCBkZXZpY2UsIHRoZSBnZW5lcmFsIG5hbWUgZm9yIHRoaXMgaXMgInRyb3BlIi4gQ29tbW9uIHR5cGVzIG9mIHRyb3BlcyBhcmUgbWV0YXBob3JzIChzdWJzdGl0dXRpbmcgc29tZXRoaW5nIHdoaWNoIGJlYXJzIHNpbWlsYXJpdHkpLCBtZXRvbnlteSAoc3Vic3RpdHV0aW5nIHNvbWV0aGluZyB3aGljaCBpcyByZWxhdGVkIG9yIGFzc29jaWF0ZWQgdG8gdGhlIHRoaW5nKSBhbmQgc3luZWNkb2NoZSAoc3Vic3RpdHV0aW5nIGEgcGFydCBmb3IgdGhlIHdob2xlIG9yIHZpY2UgdmVyc2EpLiBCb3RoIHlvdXIgZXhhbXBsZXMgY291bGQgYmUgY29uc2lkZXJlZCBzeW5lY2RvY2hlcy4gQnV0IEkgdGhpbmsgb25seSB0aGUgc2Vjb25kIGlzIGEgZ29vZCBleGFtcGxlIGZvciBhIHRyb3BlOyB0aGUgZmlyc3QgaXMgbW9yZSBhIGNhc2Ugb2Ygc2VtYW50aWMgc2hpZnQuCkVESVQ6IGl0IGFic29sdXRlbHkgaXMgbWVhbnQgdG8gYmUgYSBzYWZlIHNwYWNlIGZvciBoZXIuIE91ciBydWxlIGlzIHRoYXQgbm8gbWF0dGVyIHdobyBjYWxscyB0aGUgbWVldGluZywgbm8gbWF0dGVyIHdoYXQgaXQgYWJvdXQsIHRoZXJlIHdvbiBiZSBhbnkganVkZ2VtZW50LCBvbmx5IHN1cHBvcnQgZm9yIGVhY2ggb3RoZXIgYmVjYXVzZSB3ZSBhIHRlYW0uIEkgaGVyIGRhZCBhdCB0aGUgZW5kIG9mIHRoZSBkYXksIG9mIGNvdXJzZSwgYnV0IHdlIGEgdGVhbQpJdCB3YXMgYW4gaW5zdWx0IHRvIHRoZSBwZW9wbGUgd2hvIGhhZCB3b3JrZWQgdGhlcmUgYW5kIHZvbHVudGVlcmVkIGNvdW50bGVzcyB5ZWFycyB3aXRob3V0IGFza2luZyBmb3IgYW55IHJlY29nbml0aW9uLiBBIGZldyBvZiB0aG9zZSBraWRzIHJlYWxpemVkIGl0LCBidXQgdGhlIG1ham9yaXR5IGRpZCBhIG9uZSBvZmYgc3VtbWVyIGFuZCBhZGRlZCBpdCB0byB0aGVpciByZXN1bWUgdG8gZmVlbCBnb29kIDEzNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpTb21lIG9mIHRoZW0gc2F5IHRoYXQgaW4gb3JkZXIgdG8gbG9zZSB3ZWlnaHQsIHlvdSBiZSBjb25zdGFudGx5IHRoaW5raW5nIGFib3V0IGZvb2QsIGFuZCB3aWxsIGFsd2F5cyBmZWVsIGh1bmdyeS4gRnJvbSBteSBwZXJzcGVjdGl2ZSwgaXQga2luZCBvZiB0aGUgb3Bwb3NpdGUuIApIYW1pb3RhIEVjaG8gTmV3c3BhcGVyIEFyY2hpdmVzClRoZSBGQUEgQ2F0IDEgYW5kIEJvZWluZyBjb250cmFjdHMgYXJlIGR1ZSB0byB0aGUgaGFyZCB3b3JrIG9mIFZpZXRuYW1lc2UgZ292ZXJubWVudCBkZXBhcnRtZW50cyBhbmQgY29udHJhY3RzLCB0aGV5IGFyZSB3aG8gZGVzZXJ2ZSB0aGUgY3JlZGl0LCBub3QgQW1lcmljYW4gbm9yIE5vcnRoIEtvcmVhbiBwb2xpdGljaWFucy4gVGhlIHN1bW1pdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIGl0LgpJbiB0aGUgeWVhcnMgbGVhZGluZyB1cCB0byB0aGUgQ2l2aWwgV2FyLCB0aGUgQW1lcmljYW4gcG9saWN5IHRvd2FyZHMgaGVyIHNvdXRoZXJuIG5laWdoYm9ycyB3YXMgbm90IHBhcnRpY3VsYXJseSBmcmllbmRseSwgYW5kIGluIGNvbnNlcXVlbmNlLCBub3QgYWxsIHRoYXQgd2VsbCByZWNlaXZlZC4gCkRpZXNlcyBCdWNoIGlzdCBnbGVpY2h6ZWl0aWcgV2VpdGVyZW50d2lja2x1bmcgdW5kIFJldm9sdXRpb24sIGRhIGVzIGVpbmUga2xhcmUgVHJlbm5saW5pZSB6d2lzY2hlbiB0cmFkaXRpb25lbGxlbSB1bmQgbW9kZXJuZW0gUG9rZXIgemllaHQuIApJZiBJIHdlcmUgaW4gdGhlaXIgcG9zaXRpb24gSSBjYW4gc2F5IHRoYXQgSSB3b3VsZG4gZ3Jhdml0YXRlIHRvd2FyZHMgdGhlIHNhbWUgY29uY2x1c2lvbnMgdGhleSBoYXZlIG1hZGUgb24gdGhlIGlzc3VlLiBIZWxsIEkgd291bGQgZmFsbCB1bmRlciB0aGUgTklNQlkgY2F0ZWdvcnkgZm9yIGlzc3VlcyBzdWNoIGFzIG9mZnNob3JlIGRyaWxsaW5nIGFyb3VuZCBNb250YW5hIGRlIE9ybyBvciBldmVuIGhvdXNpbmcgZGV2ZWxvcG1lbnQgdGhhdCB3b3VsZCBkcmFzdGljYWxseSByYWlzZSB1cmJhbiBzcHJhd2wgaW50byB1bmRldmVsb3BlZCBsYW5kLiAKRHlpbmcgTGlnaHQgVXBkYXRlIHYxLjQuMCAuIApJJ3ZlIGJlZW4gdW5hYmxlIHRvIGZpbmQgYSBtYXRjaGluZyBsZXR0ZXIgc2hpZnQgZm9yICJFTlQiIGFuZCAiTk0iIHRoYXQgd291bGQgbGVhZCB0byBhIHByYWN0aWNhbCBzb2x1dGlvbi4uIApZb3UgYXJlIHRoZSBwZXJzb24gd2hvIGdhdmUgYmlydGggdG8gdGhlIGNoaWxkIGFuZCBpZiB5b3Ugc3BlbnQgYW55IHRpbWUgYnJlYXN0ZmVlZGluZyB0aGVuIHlvdXIgYmFieSB3aWxsIGFsd2F5cyByZW1lbWJlciB0aGF0IGJvbmQsIG5vIHdvcmRzIGNhbiBjaGFuZ2UgdGhhdC4uIApFdmVuIHRoZSBCaWJsZSBpbnN0cnVjdHMgdGhlIHNsdWdnYXJkIHRvIGdvIHN0dWR5IGFudHMuCkluIDIwMTUsIFNtaXRoIHdhcyBsZWZ0IG9mZiBldmVyeSB5ZWFyIGVuZGluZyBsaXN0LCB3aGljaCBpcyBidWxsc2hpdC4gClRoZXkgZGVzaWduZWQgYSB1bmlxdWUgdHJhaW5pbmcgc2ltdWxhdGlvbiB0byBoZWxwIGhlciByZW1haW4gb24gdGhlIHNoaXAgd2l0aG91dCBhY2NsaW1hdGluZyB0byBpdHMgZ3Jhdml0eSBhbmQgdGh1cyBsb3NpbmcgaGVyIHN0cmVuZ3RoLlRoYXQnZCBiZSBhbGwgd2VsbCBhbmQgZ29vZCBpZiBzaGUgd2VyZSB0aGUgb25seSBYZWxheWFuIHRvIGJlIHNlcnZpbmcgaW4gdGhlIFVuaW9uIG9yIG1vcmUgbGlrZWx5IHRoZSBvbmx5IG9uZSB0byBldmVyIHRyYXZlbCBvZmYgd29ybGQuIFdoZW4gVGFsbGEgYXJyaXZlcywgd2Ugc2VlIHRoYXQgdGhpcyBpc24ndCB0aGUgY2FzZS4gCkhhcyBhbnlvbmUgZWxzZSBzdGFydGVkIGRvaW5nIHRoaXMsIG9yIGFtIEkgdG90YWxseSBpbmNvcnJlY3QgYWJvdXQgaG93IGNvbXBvc3QgYWZmZWN0cyBsaW1wd3VydCBncm93dGg/LiAKVGhhdCBpc24gZ29pbmcgdG8gaGVscCB5b3UgcHJvZ3Jlc3MgaW4geW91ciBjYXJlZXIuClRoZSByZWFzb24gSSBkZWNpZGVkIHRoaXMgd2FzIGJlY2F1c2UgSSBsb29rZWQgYXQgSCByZXR1cm4gcG9saWN5LCBhbmQgaXQgbm8gaGFzc2xlIHJldHVybiB3aXRoaW4gMzAgIDkwIGRheXMsIHNvbWV0aGluZyBsaWtlIHRoYXQuIEl0IGEgcmVhc29uYWJsZSB0aW1lIGZvciBtZSB0byBkZWNpZGUgaWYgdGhlIGNoYWlyIGlzIG5vdCBnb2luZyB0byB3b3JrLiAKSXQgZ29lcyBkb3duIHRoZSBkcmFpbiB0byB0aGUgd2FzdGUgdHJlYXRtZW50IHBsYW50IHdoZXJlIGl0J3MgdHJlYXRlZCBhbmQgcmVsZWFzZWQgdG8gYSByaXZlciBvciBsYWtlIHdoZXJlIGRvd25zdHJlYW0gaXQncyBwdWxsZWQgaW4gYnkgd2F0ZXIgdHJlYXRtZW50IHBsYW50cywgdHJlYXRlZCwgYW5kIG1hZGUgZHJpbmthYmxlIGFnYWluLiAKVGhlIHBvaW50IGlzIHRoYXQga25vd2xlZGdlLCByZWdhcmRsZXNzIG9mIGRpc2NpcGxpbmUsIGlzIHBvd2VyZnVsIGFuZCBuZWNlc3NhcnkgZm9yIGh1bWFuIHByb2dyZXNzLiAKVGhlIE5UU0IgZGV0ZXJtaW5lZCB0aGF0IGEgamFtbWVkIGVsZXZhdG9yIHByZXZlbnRlZCB0aGUgcGlsb3QgZnJvbSBiZWluZyBhYmxlIHRvIGxpZnQgdGhlIG5vc2Ugb2YgdGhlIHBsYW5lLi4gCiJJIHdhcyBkdW1iZm91bmRlZCwiIGhlIHNhaWQuICJJIHNhdCB0aGVyZSBsaWtlIGFuIGlkaW90LiIKQWxzbywgaWYgeW91IG9yZGVyIGRlbGl2ZXJ5IGZvb2QgZHVyaW5nIHRoZSBnYW1lLCBpdCBpcyBub3QgeW91ciByZXNwb25zaWJpbGl0eSB0byBwYXksIGFtYXppbmcgaG93IHRoZXJlIHdhcyBhYnNvbHV0ZWx5IG5vdGhpbmcgb24gaXQgd29ydGggZ2xhbmNpbmcgYXQgb24gZWl0aGVyIHNpZGUuIApBcyBhIGdlbmVyYWwgcnVsZSB5b3Ugc2hvdWxkIGZvbGQgaWYgeW91IGFyZSBkZWFsdCB0d28gbG93IG5vbiBwYWlyIGNhcmRzLCBmb3IgZXhhbXBsZSA5IGFuZCA4LiBBbHRob3VnaCB0aGVyZSBpcyBzdGlsbCBhIGNoYW5jZSB0aGF0IHlvdSBtYXkgZ2V0IGEgc3RyYWlnaHQsIGJ5IGl0IGlzIHZlcnkgdW5saWtlbHkgdGhhdCB0aGlzIHdpbGwgb2NjdXIgYXQgYSBmdWxsIHRhYmxlLgpQYWNrIGxpbmVycyBhcmUgdGhlIHNoaXp6bGUuIEdsYWQgbWFrZXMgdHJhc2ggY29tcGFjdG9yIGxpbmVycy4gClNvdXRoZXJuWm9ycm8gdQpZb3VyIGZpbmFsIHBvaW50IG1ha2VzIG5vIHNlbnNlIHdoYXRzb2V2ZXIuIEl0IHdvdWxkIGJlIGFjY2VwdGFibGUgdG8ga2lsbCBjb25zY2lvdXMgYmVpbmdzIGlmIHRoZXkgaGFkIGEgZ29vZCBsaWZlIGJlZm9yZWhhbmQ/IFdoYXQ/IFNvIGlmIEkgdHJlYXQgeW91ciBtb20gcmVhbCBuaWNlIGJlZm9yZSBzaG9vdGluZyBoZXIgaW4gdGhlIGhlYWQsIHRoYXQgT0s/IEdyb3cgYSBicmFpbi4KRXZlbiBpZiBJJ2QgYmVlbiBza2lsbGVkIGVub3VnaCB0byBidXkgYmFjayBhdCB0aGUgZXhhY3QgYm90dG9tLCBJIHdvdWxkIGhhdmUgaGFkIGZld2VyIHJlc291cmNlcyBhdmFpbGFibGUgdG8gcmVwdXJjaGFzZSB0aGUgc3RvY2tzIEkgc29sZC4gClBvdXIgY2VsYSwgZWxsZSBwcm9wb3NlIHF1ZSBsJ2FydGljbGUgMTIyIDEgZHUgQ29kZSBwbmFsIGVudmlzYWdlIGV4cHJlc3NtZW50IHVuZSByZHVjdGlvbiBkZSBwZWluZSBwcml2YXRpdmUgZGUgbGliZXJ0LiBTZWxvbiBsYSBub3V2ZWxsZSByZGFjdGlvbiBwcm9wb3NlLCAgbGEgcGVpbmUgcHJpdmF0aXZlIGRlIGxpYmVydCBlbmNvdXJ1ZSBlc3QgcmR1aXRlIGR1IHRpZXJzLiBFbiBvdXRyZSwgbGEganVyaWRpY3Rpb24gdGllbnQgY29tcHRlIGRlIGNldHRlIGNpcmNvbnN0YW5jZSBwb3VyIGZpeGVyIGxlIHJnaW1lIGRlIGxhIHBlaW5lLiBMb3JzcXVlIGxlIHN1cnNpcyAgZXhjdXRpb24gYXZlYyBtaXNlICBsJ3ByZXV2ZSBkZSB0b3V0IG91IHBhcnRpZSBkZSBsYSBwZWluZSBhIHQgb3Jkb25uLCBjZXR0ZSBtZXN1cmUgZXN0IGFzc29ydGllIGRlIGwnb2JsaWdhdGlvbiB2aXNlIHBhciBsZSAzIGRlIGwnYXJ0aWNsZSAxMzIgNDUgYXBycyBhdmlzIG1kaWNhbCBldCBzYXVmIGRjaXNpb24gY29udHJhaXJlIGRlIGxhIGp1cmlkaWN0aW9uIC4gU3VyIGxlIGZvbmRlbWVudCBkZSBjZXQgYXJ0aWNsZSAxMzIgNDUgZHUgQ29kZSBwbmFsLCBsYSBqdXJpZGljdGlvbiBkZSBjb25kYW1uYXRpb24gb3UgbGUganVnZSBkJ2FwcGxpY2F0aW9uIGRlcyBwZWluZXMgcGV1dCBpbXBvc2VyIHNwY2lhbGVtZW50IGF1IGNvbmRhbW4gbCdvYnNlcnZhdGlvbiBkZSBjZXJ0YWluZXMgb2JsaWdhdGlvbnMsIGVuIGwnZXNwY2UsICBzZSBzb3VtZXR0cmUgIGRlcyBtZXN1cmVzIGQnZXhhbWVuIG1kaWNhbCwgZGUgdHJhaXRlbWVudCBvdSBkZSBzb2lucywgbW1lIHNvdXMgbGUgcmdpbWUgZGUgbCdob3NwaXRhbGlzYXRpb24gLgpJIHRhbGtlZCBzbyBtdWNoIHNoaXQgYWJvdXQgR3VjY2kgYmVjYXVzZSBJIGtuZXcgdGhpcyB3b3VsZCBldmVudHVhbGx5IGhhcHBlbiwgYnV0IEkgY2FuIGV2ZW4gYmUgbWFkIGF0IGhpbS4gSSByb290aW5nIGZvciBtb3JlIGZvbGsgdG8gc3RhcnQga2VlcGluZyBpdCByZWFsIHdpdGggdGhlbXNlbHZlcy4KWW91IGNhbiByZWFsbHkgc3RvcCB0aGF0IG11Y2ggcGFpbiBlYXNpbHksIGV2ZW4gd2l0aCBkcnVncy4gWW91IGhhdmUgdG8gZ28gdG9vIGNsb3NlIHRvIHRoZSBsZXRoYWwgZG9zZSAoZXNwZWNpYWxseSBpbiBjaGlsZHJlbikgYWZ0ZXIgYSB3aGlsZS4gU28geWVhaCwgYWZ0ZXIgYSBjZXJ0YWluIHBvaW50IGl0IGp1c3Qgd29uIHdvcmsgd2l0aG91dCBraWxsaW5nIHlvdS4KKFByaXZhY3kgUG9saWN5KUdvb2dsZSBNYXBzU29tZSBhcnRpY2xlcyBoYXZlIEdvb2dsZSBNYXBzIGVtYmVkZGVkIGluIHRoZW0uIChQcml2YWN5IFBvbGljeSlHb29nbGUgQWRTZW5zZSBIb3N0IEFQSVRoaXMgc2VydmljZSBhbGxvd3MgeW91IHRvIHNpZ24gdXAgZm9yIG9yIGFzc29jaWF0ZSBhIEdvb2dsZSBBZFNlbnNlIGFjY291bnQgd2l0aCBIdWJQYWdlcywgc28gdGhhdCB5b3UgY2FuIGVhcm4gbW9uZXkgZnJvbSBhZHMgb24geW91ciBhcnRpY2xlcy4gTm8gZGF0YSBpcyBzaGFyZWQgdW5sZXNzIHlvdSBlbmdhZ2Ugd2l0aCB0aGlzIGZlYXR1cmUuIApfa2l0byAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpBIE5BU0Egc3Bva2Vzd29tYW4sIFJlbmVlIEp1aGFucywgY29uZmlybWVkIFR1ZXNkYXkgdGhhdCB0aGUgYWdlbmN5IHdhcyAidGFraW5nIHN0ZXBzIHRvIGF1dGhlbnRpY2F0ZSIgdGhlIGRpc3BsYXkgaXQgcmVjZWl2ZWQgZnJvbSBhdHRvcm5leSBSaWNoYXJkIFdyaWdodC4gSnVoYW5zIGRlY2xpbmVkIHRvIHNheSB3aGF0IHdvdWxkIGhhcHBlbiBhZnRlciB0aGF0LgpGaWF0IENocnlzbGVyIHNheXMgdGhlIGZlYXR1cmUgY2FuIGJlIHR1cm5lZCBvZmYgYnkgc3RlcHBpbmcgb24gdGhlIGJyYWtlcyBmb3IgYSBsb25nZXIsIHN1c3RhaW5lZCBwZXJpb2Qgb2YgdGltZS4gVGhlIGNvbXBhbnkgc2F5cyBpdCBub3QgYXdhcmUgb2YgYW55IGNyYXNoZXMgb3IgaW5qdXJpZXMgZnJvbSB0aGUgcHJvYmxlbSwgd2hpY2ggd2FzIGRpc2NvdmVyZWQgZHVyaW5nIGEgdGVzdCBkcml2ZSBieSBhbiBlbXBsb3llZS4KWW91J3JlIHRydWx5IGlnbm9yYW50IGlmIHlvdSByZWFsbHkgYmVsaWV2ZSB0aGF0IGFsbCBvZiBHb29kd2lsbHMgY2xvdGhlcyBnZXRzIGJvdWdodCBieSBwZW9wbGUgc3RydWdnbGluZyB0byBnZXQgYnkuIFlvdSBrbm93IHdoZXJlIHRoZXJlIGV4Y2VzcyBjbG90aGVzIGdldCBkdW1wZWQ/IEhhaXRpLiBJdCBnZXRzIGR1bXBlZCBpbiBIYWl0aSwgYXMgd2FzdGUhIEJlY2F1c2UgdGhlcmUncyBubyB3aGVyZSB0byBkaXNwb3NlIG9mIHRoZSBleGNlc3MgaGVyZS4gCkkgY2FuJ3QgaW1hZ2luZSBhbnlvbmUgd2FudGluZyBhIGJvd2wgb2YgaG90IGNhbm5lZCBzdGV3LiAKQ3JlYXRlICJtaXhlZCIgZWNoZWxvbnMgdGhhdCBhZGQgYSBSRiB0byBhbiBvdGhlcndpc2UgQVJTTUcgc2V0dXAuIFJlcGxhY2Ugb25lIFNNRyB3aXRoIGEgSEcsIGFuZCBvbmUgQVIgd2l0aCBhIFJGLiAKSW5jcmVkaWJseSBsb3VkLiBVbmJlbGlldmFibHkgbG91ZC4gCk1ja2VlaGVuJ3MgY2hpcCBzdGFjayBtb3JlIHRoYW4gZG91YmxlcyB0aGF0IG9mIElzcmFlbCdzIFp2aSBTdGVybiAoR1BJIE5vLiAKQXMgZmFyIGFzIHdoaWNoIHZlZ2V0YWJsZXMgbWF5IHNlZSB0aGUgYmlnZ2VzdCBpbmNyZWFzZXMsIGl0J3MgZGlmZmljdWx0IHRvIGtub3cgd2hhdCBwcm9kdWNlIGl0ZW0gd2lsbCBiZWNvbWUgdGhlIG5leHQgY2F1bGlmbG93ZXIsIENoYXJsZWJvaXMgc2FpZC4gVGhlIGNydWNpZmVyb3VzIHZlZ2V0YWJsZSBzYXcgc29hcmluZyBwcmljZXMgcGVyIGhlYWQgaW4gMjAxNi4KU3BlZWQgdXAgdGhlIDEsIGFuZCBpbmNyZWFzZSB0aGUgbW92ZW1lbnQgcGVyY2VudGFnZSB0byBjb21wZW5zYXRlIHdpdGggdGhlIGRlY3JlYXNlIGVmZmVjdCB0aW1lIHRvIGJhbGFuY2UgaXQuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCiJJbiBKYXBhbiBJIGdvdCBtZXNzZWQgdXAgcHJldHR5IGJhZC4gRHVyaW5nIHRyYWluaW5nIEkgZ290IGtpY2tlZCBpbiB0aGUgaGVhZCBieSBhIDIxMCBwb3VuZCBjaGFtcGlvbi4gClRoZSBwcm9ncmFtIGlzIGEgc3RhcnQsIGJ1dCBtb3JlIG5lZWRzIHRvIGhhcHBlbiBmcm9tIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQsIGFsb25nIHdpdGggbGFyZ2UgZW50ZXJwcmlzZXMgc3VjaCBhcyBiYW5rcywgdG8gZ2l2ZSBwcmVmZXJlbmNlIHRvIHNtYXJ0IElDVCBjb21wYW5pZXMgaW4gdGhpcyBjb3VudHJ5LiBPcGVuaW5nIHVwIGFsbCBjb250cmFjdHMgdG8gYSBmYWlyIGJpZGRpbmcgcHJvY2VzcyBhbmQgaWRlbnRpZnlpbmcgdGFsZW50ZWQgQ2FuYWRpYW4gYm9ybiBJQ1QgY29tcGFuaWVzLCBpbnN0ZWFkIG9mIGFsd2F5cyBsZWFuaW5nIG9uIGZvcmVpZ24gaW5jdW1iZW50cywgd291bGQgYmUgZ29vZCBuZXh0IHN0ZXAuCkkga25vdyBpdCdzIGNvbnNpZGVyZWQgYSBnZW5lcmFsaXphdGlvbiB0byBwaW4gb25lIGlzc3VlIG9uIGFuIGVudGlyZSBuYXRpb24sIGJ1dCBBbWVyaWNhLCB3ZSBuZWVkIHRvIHRhbGsuCk9uIHRoZSBuaWdodCBvZiB0aGUgbXVyZGVyczsgaXQgbGVhdmVzIGFsbW9zdCBmb3VyIGhvdXJzIGxhdGVyLiBXaGlsZSB0aGUgY2FyIG9uIHRhcGUgbG9va2VkIGxpa2UgRXJuaWUgU2NoZXJlcidzIHJlZCBDYW1hcm8sIHRoZSB2aWRlbyB3YXMgZ3JhaW55IGFuZCBwb2xpY2UgY291bGRuJ3QgaWRlbnRpZnkgdGhlIGRyaXZlciBvciBsaWNlbnNlIHBsYXRlIG51bWJlci4gClJhbmdlIGFkdmFudGFnZSBjYW4gbWVhbiB0d28gdGhpbmdzIGFuZCBpdCBpbXBvcnRhbnQgdG8gZGlmZmVyZW50aWF0ZSBiZXR3ZWVuIGhhdmluZyBtb3JlIG51dCBjb21iaW5hdGlvbnMgYW5kIGhhdmluZyBtb3JlIGVxdWl0eS4gClRoaXMgbWVhbnMgdGhlIGJpZyBibGluZCBoYXMgdGhlIG9wdGlvbiB0byByYWlzZSBvciBqdXN0ICJjaGVjay4iIEJ5IGNoZWNraW5nIHRoZSBwbGF5ZXIgZG9lcyBub3QgcHV0IGluIGFueSBtb3JlIG1vbmV5LiAKQWNjb3JkaW5nIHRvIG9uZSBtYW51ZmFjdHVyZXIsIHRoZSByaWdodCBjaGFpciBhdCB0aGUgcmlnaHQgZ2FtZSBjYW4gcmVhbGx5IGhlbHAgYSBjYXNpbm8ncyBib3R0b20gbGluZS4KVGhlIHBvbGljZSB3b3VsZCBub3QgcmV2ZWFsIHRoZSBjYXVzZXMgb2YgZGVhdGggYnV0IGNvbmZpcm1lZCB0aGF0IHRoZSBpbnZlc3RpZ2F0aW9uIGlzIG9uZ29pbmcuIFRoZXkgd291bGQgbm90IHNheSBpZiB0aGVyZSB3b3VsZCBiZSBhbnkgbW9yZSBjaGFyZ2VzIG5vciB3aHkgdGhlIHRocmVlIHN1c3BlY3RzIHdlcmUgY2hhcmdlZCB3aXRoIHNlY29uZCBkZWdyZWUgbXVyZGVyIGFuZCBub3QgZmlyc3QgZGVncmVlLgpUaGUgIk1haWRlbiBUcmlidXRlIG9mIEJhYnlsb24iIHdhcyBhIHNlcmllcyBvZiBhcnRpY2xlcyBhbmQgYSBzaW1pbGFyIHBpZWNlIG9mIHllbGxvdyBqb3VybmFsaXNtIHB1Ymxpc2hlZCBpbiB0aGUgUGFsbCBNYWxsIEdhemV0dGUgaW4gMTg4NS4gSW4gaXQsIHRoZSByZXBvcnRlciAobWFsZSkgc3VwcG9zZWRseSB1bmNvdmVyZWQgYSBzZXggc2NhbmRhbCB3aGVyZSAocG9vciwgd2hpdGUpIHZpcmdpbnMgYXJlIGJlaW5nIHByb2N1cmVkIGJ5IG9sZGVyIChyaWNoLCB3aGl0ZSkgbWVuIGZvciBzZXh1YWwgcHVycG9zZXMuIFRoZSBzdG9yeSB3YXNuIHJlYWxseSB0cnVlLCBidXQgaXQgdHJ1bHkgaGl0IGEgbmVydmUgdGhhdCBjYXVzZWQgcmlvdGluZyBpbiB0aGUgc3RyZWV0cyBhbmQgYSBmbHVycnkgb2YgbGF3cyBtZWFudCB0byBjb250cm9sIHNleCAoYW50aSBwcm9zdGl0dXRpb24sIGFudGkgc29kb215LCBhZ2Ugb2YgY29uc2VudCkuIE11Y2ggc3R1ZGllZCBieSBoaXN0b3JpYW5zLCB0aGUgZXZlbnQgaXMgY29uc2lkZXJlZCB0byBoYXZlIGJlZW4gYXQgdGhlIGNlbnRlciBvZiB3aGF0IGl0IG1lYW50IHRvIGJlIHByb3RlY3Qgd2hpdGUgd29tZW4gYW5kIGdpcmxzIHZpcnR1ZSBhZ2FpbnN0IHRoZSBjb3JydXB0aW9uIG9mIHRoZSB1cHBlciBjbGFzcyBhbmQgdGhlcmVmb3JlIGRlZ2VuZXJhdGUgImdlbnRsZW1lbiIgYW5kIHBvb3IgYW5kL29yIGJyb3duIG1lbiB3aG8gd2VyZSB0aGVyZWZvcmUgZGVnZW5lcmF0ZSAiYnJ1dGVzLiIgQnkgY3JlYXRpbmcgY2F0ZWdvcmllcyBpbiBuZWVkIG9mIHByb3RlY3Rpb24gKHdoaXRlIHdvbWVuIGFuZCBjaGlsZHJlbiksIEJyaXRpc2ggYW5kIFVTIHJ1bGluZyBjbGFzc2VzIGNvdWxkIHNob3JlIHVwIHdoaXRlIHByaXZpbGVnZSAoYmVjYXVzZSBpZiB3aGl0ZSB3b21lbiBvZiBhbGwgY2xhc3NlcyB3ZXJlbiBwdXJlLCB0aGVuIGhvdyBjb3VsZCB2aW9sZW5jZSBhZ2FpbnN0IGJyb3duIGFuZCBibGFjayBtZW4gYmUganVzdGlmaWVkPykuClN5c3RlbSBvZiBnb3Zlcm5hbmNlIGhhcyBhIExPVCB0byBkbyB3aXRoIGNvcnJ1cHRpb247IHRoZSBxdWFsaXR5IG9mIGRlbW9jcmFjeSBpbiBhIGNvdW50cnkgZ2VuZXJhbGx5IHNjYWxlcyB3aXRoIHRoZSBsZXZlbCBvZiBjb3JydXB0aW9uLCBiZWNhdXNlIHRoZSBtb3JlIHlvdSBhbnN3ZXIgdG8gdGhlIHBlb3BsZSwgdGhlIGhhcmRlciBpdCBnZXRzIHRvIGJlIGNvcnJ1cHQuV2hpbGUgb24gdGhlIG9wcG9zaXRlIHNjYWxlLCBpbiBhIGRpY3RhdG9yc2hpcCwgY29ycnVwdGlvbiBpcyBnZW5lcmFsbHkgaG93IHRoZSBydWxlciBnZXRzIHRvIHN0YXkgaW4gcGxhY2U7IGVnIFJ1c3NpYSBpcyBvZnRlbiBldmVuIGRlc2NyaWJlZCBhcyBhbiBvbGlnYXJjaGljIGNvdW50cmllcywgYmVjYXVzZSB5b3UgZ290IGEgc21hbGwgcmluZyBvZiBmdWNrZXJzIGFyb3VuZCBQdXRpbiB3aG8gc3RlYWwgbW9zdCBvZiB0aGUgY291bnRyaWVzIHdlYWx0aC5JIGRpZG4gc2F5IHRoYXQgZWl0aGVyLiAKSSBhbSBhIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIgYW5kIEkgaGF2ZSBhdmVyYWdlZCAkNjcwIHBlciBob3VyIG92ZXIgdGhlIHBhc3QgMTEgeWVhcnMgb2YgcG9rZXIuIFdoZW4gcGVvcGxlIGFzayBtZSB3aGF0IEkgZG8gZm9yIGEgbGl2aW5nLCBhbmQgSSB0ZWxsIHRoZW0gdGhhdCBJIGFtIGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciwgdGhleSBvZnRlbiBhcmUgaW5jcmVkdWxvdXMgYW5kIHNheSAieW91IG1ha2UgZW5vdWdoIHRvIGxpdmUgb2ZmIHRoYXQ/IiBIb3cgY2FuIEkgb3Blbmx5IGFuZCBob25lc3RseSBjb252ZXkgdGhlIHRydXRoIGlzIEkgaGF2ZSBtYWRlIG1pbGxpb25zIGFuZCBJIG1ha2Ugb3ZlciAkNjAwIGFuIGhvdXI/IHNub3dmbGFrZSBkZXRhaWxzIGluc2lkZS4gW21vcmUgaW5zaWRlXS4gClJvbiBsb3ZlZCBsaXZpbmcgb24gdGhlIGZhcm0sIGZpc2hpbmcsIGh1bnRpbmcsIGNhbXBpbmcsIGJvYXRpbmcgYW5kIGp1c3QgYmVpbmcgb3V0ZG9vcnMuIApQZWdnIHNhaWQgdGhlcmUgaXMgbm8gZXZpZGVuY2UgdG8gc3VnZ2VzdCB0aGF0IHRoZSBmaXJlIGlzIHN1c3BpY2lvdXMgYXQgdGhpcyB0aW1lLgpGb3J3PTEuNSwgdGhlZ2FsYXhpZXN3b3VsZCBmaXJzdCBiZSBzZXBhcmF0ZWQgZnJvbSBlYWNoIG90aGVyLiBBYm91dCA2MCBtaWxsaW9uIHllYXJzIGJlZm9yZSB0aGUgQmlnIFJpcCwgZ3Jhdml0eSB3b3VsZCBiZSB0b28gd2VhayB0byBob2xkIHRoZU1pbGt5IFdheWFuZCBvdGhlciBpbmRpdmlkdWFsIGdhbGF4aWVzIHRvZ2V0aGVyLiAKVGhlIGRyYWdvbidzIHBvaW50IG9mIHZpZXcgc3RpbGwgdGhpbmsgaXQgYSBncmVhdCBidXNpbmVzcy4gVGhleSBhcmVuIHByb2ZpdGFibGUgeWV0LCBidXQgdGhhdCB0eXBpY2FsIGZvciB0aGlzIHR5cGUgb2Ygc3RhcnR1cCwgTXIuIFRyZWxpdmluZyBzYWlkLiByZWFzb24gSSBpbnZlc3QgaXMgdGhlIHBlb3BsZSBhbmQgSSBsb3ZlIHRoZXNlIGVudHJlcHJlbmV1cnMuIEZ1bm5pbHkgZW5vdWdoLCBLeWxlIEhhZ2VsIHBsYXlzIGZvciB0aGUgUGhvZW5peCBDb3lvdGVzIGZhcm0gdGVhbSB0aGUgUG9ydGxhbmQgUGlyYXRlcyBhbmQgbXkgc29uIEJyYWQgaXMgdGhlIGFzc2lzdGFudCBnZW5lcmFsIG1hbmFnZXIgb2YgdGhlIFBob2VuaXggQ295b3Rlcy4gSGUgc2lnbmVkIEt5bGUgYnV0IGhlIG5ldmVyIHRvbGQgbWUuIEkgZGlkbiBmaW5kIG91dCB1bnRpbCBhZnRlciB0aGUgc2hvdy4gdGhleSBhcmUgc3RpbGwgd29ya2luZyB0aGUgcmlnaHQgbW9kZWwsIE1yLiBUcmVsaXZpbmcgaXMgZXhjaXRlZCBhYm91dCB0aGUgcG90ZW50aWFsIGZvciB0aGUgYXBwLiBhIGZyaWVuZGx5IGFsdGVybmF0aXZlIHRvIFR3aXR0ZXIgYW5kIHVzZXMgcG9zaXRpdmUgcmVpbmZvcmNlbWVudCB3aGljaCBtYWtlcyBpdCBncmVhdCBmb3Iga2lkcy4gSSBzaXQgb24gdGhlIGJvYXJkIG9mIHRoZSBIb2NrZXkgQ2FuYWRhIEZvdW5kYXRpb24gYW5kIHdlIGFyZSBhbHdheXMgbG9va2luZyBmb3Igd2F5cyB0byBnZXQgbW9yZSBraWRzIGludm9sdmVkIHdpdGggaG9ja2V5IGFuZCB0aGlzIGlzIGEgZ3JlYXQgd2F5IHRvIGRvIHRoYXQuCkRhbmdlcnMgdGhhdCB0aGUgY29vbGluZyBvZiB0aGUgcm9ja2V0IGZ1ZWwgd2lsbCBmYWlsLCBkYW5nZXJzIHRoYXQgd2VhdGhlciB3aWxsIGhpdCB0aGUgcm9ja2V0LiBJZiB5b3UgaGF2ZSB0byBicmluZyBpdCBiYWNrIGludG8gdGhlIGhhbmdlciwgdGhlcmUgYXJlIGEgd2hvbGUgc2xldyBvZiBkYW5nZXJzIHRoZXJlLgpBZnRlciBpdCBjaGFuZ2VkIGxpdmVzIG9mIHNvbWUgcHJvIHBva2VyIHBsYXllcnMsIGV2ZXJ5b25lIGRyZWFtcyBvZiBzdWNoIHN1Y2Nlc3Mgb24gdGhlIHBva2VyIHRhYmxlLiBIb3dldmVyLCB0aGlzIGlzIG5vdCBwb3NzaWJsZSBmb3IgZXZlcnlvbmUgdG8gcmVhY2ggdGhlIHN1Y2Nlc3MuIApSYXcgYXBwbGUgY2lkZXIgdmluZWdhciB1c2VkIGFzIGEgaGFpciByaW5zZSBtYXkgc3RpbXVsYXRlIGhhaXIgZ3Jvd3RoLiBGb3IgdGhlIGdhcmxpYyBmb3IgaGFpciBsb3NzIHJlbWVkeSAgIGFuIGhvdXIgYmVmb3JlIGJlZHRpbWUsIHNsaWNlIG9wZW4gYSBjbG92ZSBvZiBnYXJsaWMgYW5kIHJ1YiBpdCBvbiB0aGUgYXJlYSBvZiBsb3NzLCB3YWl0IGZvciBhbiBob3VyIHRoZW4gbWFzc2FnZSB0aGUgc2NhbHAgd2l0aCBvbGl2ZSBvaWwsIHB1dCBvbiBhIGNhcCwgZ28gdG8gYmVkLCBhbmQgc2hhbXBvbyB5b3VyIGhhaXIgaW4gdGhlIG1vcm5pbmcuIApJIHN0YXJ0ZWQgZ2VybWluYXRpb24gSmFuIGZpcnN0IGFuZCB3YXMgbG9va2luZyB0byBlbmpveSBieSA0MjAgYnV0IEkgZG9uIHRoaW5rIEkgbWFrZSBpdC4gCkEgcGxheWVyJ3MgYnJlYXRoaW5nIHBhdHRlcm4gY2FuIGJlIGEgdmVyeSBtZWFuaW5nZnVsIHRlbGwuIEhpcyBicmVhdGhpbmcgY2hhbmdlcyBhcmUgYWxtb3N0IG5ldmVyIGludGVudGlvbmFsLiBUaGUgY2xvc2VyIHlvdSBhcmUgdG8gdGhlIHBsYXllciwgdGhlIGJldHRlciB0aGlzIHRlbGwgd2lsbCB3b3JrIGZvciB5b3UuIFNoYWxsb3cgYnJlYXRoaW5nLCBvciBhbiBhdHRlbXB0IHRvIGF2b2lkIGJyZWF0aGluZyBsb3VkbHkgaXMgYSBzaWduIG9mIGEgd2VhayBoYW5kLgpUaGV5IGVuZGVkIHVwIG5vdCBjdXR0aW5nIG9mZiBzdXBwb3J0IGVudGlyZWx5LiBUaGV5IGluc3RlYWQgY3V0IHRoZWlyIHN1cHBvcnQgYmFjayBncmFkdWFsbHkgKGFuZCBub3QgdW5yZWFzb25hYmx5KS4gQnV0IG9uY2UgdGhleSB3ZXJlIG5vIGxvbmdlciBzdXBwb3J0aW5nIG1lIGZpbmFuY2lhbGx5LCB0aGV5IHN0YXJ0ZWQgdXNpbmcgcHJvbWlzZXMgb2YgZ2lmdHMgdG8gdHJ5IHRvIGluZmx1ZW5jZSBtZS4gSSBsZWFybmVkIHRvIGp1c3QgaWdub3JlIHRoYXQuIEkgbWFrZSBkZWNpc2lvbnMgYmFzZWQgb24gd2hhdCBpcyBiZXN0IGZvciBteSBodXNiYW5kIGFuZCBJLiBUaGV5IGRvIG5vdCBmYWN0b3IgaW50byBteSBsaWZlIGNob2ljZXMuIElmIHRoZXkgd2FudCB0byBnaXZlIG1lIHNvbWV0aGluZywgZmluZS4gQnV0IHRoYXQgZG9lcyBub3QgZW50aXRsZSB0aGVtIHRvIGNvbnRyb2wgb3ZlciBteSBsaWZlLiBBIGdpZnQgaXMgYSBnaWZ0IGFuZCB0aGVyZSBzaG91bGQgYmUgbm8gc3RyaW5ncyBhdHRhY2hlZC4gVGhhdCBkb2VzbiBtYWtlIG1lIHVuZ3JhdGVmdWwuClRoZSBwb3N0ZXJzIG9uIHRoaXMgYXJ0aWNsZSBzZWVtIGV4dHJlbWVseSBzZWxmIGF3YXJlIGFuZCBhcnRpY3VsYXRlIGluIHRoZWlyIHRob3VnaHRzIGFuZCBmZWVsaW5ncy4gSSBhc2tlZCBoaW0gd2hhdCBoZSB3YW50ZWQgZnJvbSBtZSwgYW5kIGF0IGZpcnN0IGhlIHNhaWQgbXkgY29tcGFueSwgYW5kIHdoZW4gSSBhc2tlZCBoaW0gaXMgdGhhdCBhbGwsIGhlIHNhaWQgbm8gaGUgd2FudGVkIGl0IHRvIGJlY29tZSBtb3JlIHRoYW4gdGhhdC4gCkkgd2FudCB0aGVtIHRvIGZlZWwgZGlmZmVyZW50IGFuZCBub3QganVzdCBiZSAiT2ggaGV5LiAKWW91IGZhbGwgb2ZmIHRoZSB0cmFpbiB3aXRoaW4gYSB3ZWVrIGZyb20gYm9yZWRvbSBpZiB5b3Ugb25seSBlYXRpbmcgcmljZSwgbWVhdCwgYW5kIHZlZ2dpZXMuIApUaGlzIGlzIGEgcmVhbGx5IGR1bWJlZCBkb3duIHZlcnNpb24gb2YgaXQsIGJ1dCB0aGF0IGJhc2ljYWxseSB0aGUgbGFjdGljIGFjaWQgb3IgYW5hZXJvYmljIGVuZXJneSBwYXRod2F5LiBUaGVyZSBhcmUgMyAgIEFUUC9QQywgYW5hZXJvYmljICh3aXRob3V0IG94eWdlbikgYW5kIGFlcm9iaWMgKHdpdGggb3h5Z2VuKS4gSW4gc2Nob29sIG9uZSBwZXJzb24gZ2V0cyBhbmQgb25lIGdpdmVzLCB0aGVuIHdlIHRyYWRlLiAKTGUgam91ZXVyIGVuIGxpZ25lICAgInBsdXR0IG1hc2N1bGluIiwgZyBlbiBtb3llbm5lIGRlIDM4IGFucyBldCBkaXBsbSAgIGRwZW5zZSBlbiBtb3llbm5lIDEuNTAwIGV1cm9zIHBhciBhbi4gTWFpcyAidW4gam91ZXVyIHN1ciBkaXggZHBlbnNlIHBsdXMgZGUgMy4xMDAgZXVyb3MiLCB1biBib25kIHBhciByYXBwb3J0IGF1eCAxLjIwMCBldXJvcyBjb25zdGF0cyBlbiAyMDEyIGRhbnMgbGEgZGVybmlyZSB0dWRlIGNvbXBhcmFibGUuClRoZXJlIGFyZSBhYm91dCB0aHJlZSBhbHRlcm5hdGl2ZXMgICBTdHJpZGV4IE1heGltdW0gU3RyZW5ndGggcGFkcyBmcm9tIGlIZXJiICgkMTAgaXNoLCBjb250YWlucyBpbmdyZWRpZW50cyB0aGF0IGNhbiBiZSBpcnJpdGF0aW5nKSwgVGhlIE9yZGluYXJ5IDIlIFNhbGljeWxpYyBBY2lkICgkMTAgaXNoLzMwIG1sLCBqdXN0IGFzIGV4cGVuc2l2ZSBhcyBQYXVsYSBDaG9pY2UgcGVyIG1sKSBhbmQgdGhlIHJ1bm5lciB1cCwgQ29zUlggQmxhY2toZWFkIFBvd2VyIExpcXVpZCAoJDI1LzEwMCBtbCBhbmQgNCUgQmV0YWluZSBTYWxpY3lsYXRlKS4gTm90aGluZyBJIGhhdmUgdHJpZWQgaGFzIGV2ZXIgY29tcGFyZWQgaW4gZWZmaWNhY3kgd2hlbiBpdCBjb21lcyB0byBQYXVsYSBDaG9pY2UgYW5kIHNhbGljeWxpYyBhY2lkIHByb2R1Y3RzICAgb25lIG9mIHRoZSBmZXcgUEMgcHJvZHVjdHMgSSB3aWxsIHN0aWxsIHNoZWxsIG91dCAkJCBmb3Igd2hlbiBteSBzdXBwbHkgcnVucyBvdXQuLiAKTCBzZW1ibGUgYXZvaXIgYXBwcmlzIGRlIHNhIGRlcm5pcmUgbXNhdmVudHVyZSA6IEplIHZhaXMgdG91dCBkZSBzdWl0ZSBwcmVuZHJlIHVuZSBwZXRpdGUgZG91Y2hlLiAKQWxsIHRoZXNlIHRoaW5ncywgSSBhc2sgaW4geW91ciBkYXJsaW5nIHNvbiBKZXN1cyBuYW1lLCBhbmQgaXQgaXMgdGhyb3VnaCBIaXMgcHJlY2lvdXMgQmxvb2QsIHRoYXQgSSBwcmF5LiAKVGhlcmUgYSByZWFzb24gbWFueSBnYW1lcyBlbmdpbmVzIGFyZSB3cml0dGVuIGluIGxvdyBsZXZlbCBsYW5ndWFnZXMgd2l0aCBtYW51YWwgbWVtb3J5IG1hbmFnZW1lbnQsIGFuZCBpZiB5b3UgbmVlZCB0byB1c2UgV0FTTSB0byBtYWtlIGEgcGVyZm9ybWFudCB3ZWIgZ2FtZSB0aGVuIHRoYXQgYmVjYXVzZSB5b3UgY2FuIHVzZSBhIGZ1bmRhbWVudGFsbHkgZGlmZmVyZW50IGxhbmd1YWdlIHRvIHdyaXRlIGl0IGluLi4gClRoZSBjaGFuZ2VzIHRoYXQgdG9vayBwbGFjZSBpbiB0aGF0IHVuaXZlcnNlIGJldHdlZW4gdGhvc2UgdHdvIGl0ZXJhdGlvbnMgd2VyZSB3YXkgbW9yZSBzdWJzdGFudGl2ZSB0aGFuIGp1c3QgZ2VuZGVyLiBHZW5kZXIgaXNuIHNwZWNpYWwgYW5kIGlzbiBvZmYgbGltaXRzIGZvciBzdWNoIGNoYW5nZXMuQnV0IHdoYXQgZG9lcyBib3RoZXIgbWUgaXMgdGhlIGVuZGxlc3MgcmVjeWNsaW5nIG9mIGVzdGFibGlzaGVkIHVuaXZlcnNlcyB0byBtaWxrIHRoZSBib3ggb2ZmaWNlIHJhdGhlciB0aGFuIGFjdHVhbGx5IG1ha2luZyBzb21ldGhpbmcgbmV3LmVkaXQ6IEFsc28sIGFzIHBvaW50ZWQgb3V0LCB0aGVyZSBoYXMgYmVlbiBubyBnZW5kZXIgcmVwbGFjZW1lbnQgaW4gTWFydmVsIG9yIFN0YXIgV2FycyBtb3ZpZXMgdGhhdCBJIGF3YXJlIG9mLiAKV2FzIGp1c3QgbGlzdGVuaW5nIHRvIHN0YXkgdHVuZWQgd2l0aCBQcmVldCBhbmQgaGUgbWFkZSB0aGUgcG9pbnQgaW4gcmVsYXRpb24gdG8gTmFkbGVycyByZXF1ZXN0cyB0aGF0IGJ5IHN0YXJ0aW5nIHdpdGggcmVxdWVzdHMgaW5zdGVhZCBvZiBzdWJwb2VuYXMgaXMgdGhhdCBpdCBzaG93cyBpdCBpbmRpY2F0ZXMgdGhhdCB5b3UgYWN0aW5nIGluIGdvb2QgZmFpdGguIFdpdGggTmFkbGVyIHJlcXVlc3Qgb2YgODAgZG9jcyBpdCBnaXZlcyB0aGUgY2hhbmNlIGZvciBzb21lIHdobyBhcmUgd2lsbGluZyB0byBjb29wZXJhdGUgYmVmb3JlIHRoZSBoYXZlIHRoZSBsZW5ndGh5IHN1YnBvZW5hIHByb2Nlc3MuIEhlcmUgdGhlIG92ZXJzaWdodCBjb21taXR0ZWUgcmVxdWVzdCBoYXMgd29ya2VkIGFuZCBJIGdvaW5nIHRoZSBzYW1lIGlzIHRydWUgZm9yIG90aGVyIHJlcXVlc3RzLi4gClRoaXMgZGlzY2lwbGluZSBpcyBib2RpbHkgKG5vIGZhdCBQcmVzaWRlbnRzKSwgc2V4dWFsIChubyBzZXggb3V0c2lkZSB0aGUgZGlzY2lwbGluZSBvZiBtYXJyaWFnZSksIGFuZCBiZWhhdmlvcmFsIChubyBzd2VhcmluZyBsaWtlIGEgc2FpbG9yIG9yIHBpY2tpbmcgeW91ciBub3NlIG9yIGNhbGxpbmcgdGhlIFByZXNpZGVudCBhIExJQVIpLi4gClRoZXNlIHByb2R1Y3RzIGFyZSBtb3JlIHBvcHVsYXIgYW1vbmcgdGhlIHBsYXllcnMgd2hvIGFyZSBjb25jZXJuZWQgYWJvdXQgdGhlaXIgcGxheWluZyBjYXJkcyBhbmQgYmVsaWV2ZSB0aGF0IHRoZWlyIGdvb2QgbHVjayBsaWVzIGluIHRoZXNlIGNhcmRzLiBUaGVpciBmYWl0aCBpbiB0aGVzZSBwcm9kdWN0cyBoYXZlIG1hZGUgb3RoZXIgc3VwZXJzdGl0aW91cyBhcyB3ZWxsLiBIb3dldmVyLCB0aGUgZmluYWwgcmVzdWx0IGlzIGluY3JlYXNlIGluIHNhbGVzIGluIFNoYWRvdyBTcGlubmVycyBDaGlwIEFuZCBBIENoYWlyIFBva2VyIENhcmQgUHJvdGVjdG9yLi4gCiJVbnRpbCB3ZSBtZWV0IGFnYWluIGF0IHRoZSByYWluYm93IGJyaWRnZSIsIHdlIHdpbGwgYmUgbG92aW5nIGFuZCBtaXNzaW5nIHlvdSBzbyB2ZXJ5IG11Y2ggc3dlZXQgYm95LiBZb3Ugd2VyZSBzdWNoIGFuIGFtYXppbmcgYnVubnkuIFlvdSB3ZXJlIHNvIGZ1bGwgb2YgbGlmZSBhbmQgZW5lcmd5IHNvbWV0aW1lcyBhbmQgeW91IGFsd2F5cyBmb3VuZCBzb21lIGtpbmRhIG1pc2NoaWV2b3VzIHdheSBvZiBtYWtpbmcgdXMgbGF1Z2guIE5vIG1hdHRlciB3aGF0IHlvdSBkaWQsIHlvdSBjb3VsZCBkbyBubyB3cm9uZy4gWW91IGNoZXdlZCB1cCBhbmQgZHVnIGF0IHNvIG1hbnkgdGhpbmdzLiBZb3UgbGVmdCBoYWlyIGV2ZXJ5d2hlcmUgYW5kIGtpbGxlZCBldmVyeW9uZSdzIGFsbGVyZ2llcy4gWW91IHRyaWVkIHRvIGVhdCBhbmQvb3IgZHJpbmsganVzdCBhYm91dCBldmVyeXRoaW5nIHRoYXQgd2UgYnJvdWdodCBhbnl3aGVyZSBuZWFyIHlvdSwgYW5kIGFsd2F5cyBmb3VuZCBhIHdheSB0byBnZXQgaW50byBpdCBubyBtYXR0ZXIgd2hlcmUgd2UgdHJpZWQgdG8gaGlkZSBpdC4gWW91IHdlcmUgdGhlIGJlc3QgYnVubnkgYW55IGh1bWFuIGNvdWxkIGV2ZXIgYXNrIGZvciBhbmQgSSdtIHNvIHNhZCB0aGF0IHlvdSBhcmUgZ29uZSwgYnV0IGFsc28gaGFwcHkgdGhhdCB5b3UgYXJlIG5vIGxvbmdlciBpbiBwYWluIGFuZCBjYW4gcmVzdCBwZWFjZWZ1bGx5IGF0IGVhc2UgaW4gSGVhdmVuLiBJIHdpbGwgbmV2ZXIgZm9yZ2V0IHlvdSBvciBhbGwgdGhlIGpveSB5b3UgYnJvdWdodCB0byBvdXIgbGl2ZXMuIFdlIGxvdmUgYW5kIG1pc3MgeW91IHNvIG11Y2ggSGFycnkgQmVuamFtaW4gQnVyZ2VzcyBLcmF1c2tvcGYgYW5kIHdlIGNhbid0IHdhaXQgdG8gc2VlIHlvdSBhZ2FpbiAiYXQgdGhlIHJhaW5ib3cgYnJpZGdlLiIgU3dlZXQgZHJlYW1zIHN3ZWV0IGJhYnkgYm95LiBNb21teSBsb3ZlcyB5b3UgCkkganVzdCBuZWVkIGEgdm9sdW1lIGxpY2Vuc2Ugb3IgYW55dGhpbmcgZWxzZSB0aGF0IHdpbGwgYWxsb3cgbWUgdG8gb3BlbiB1cCB0aGUgbGlicmFyeSBvZiByZWNvcmRpbmdzIGFuZCBvdGhlciBtdXNpYy4gClNpbmNlIGhpcyBkYXlzIGF0IFNhbG9tb24gYW5kIGEgZGVjYWRlcyBsb25nIFdhbGwgU3RyZWV0IGNhcmVlciwgQmVybmFyZCBoYXMsIGJ5IGFsbCBhY2NvdW50cywgY2hpbGxlZCBvdXQgYW5kIHJldGlyZWQgdG8gQXNwZW4sIHdoZXJlIGhlIHdyaXRlcyBmaWN0aW9uIGFuZCBzZXJ2ZXMgb24gdGhlIEFzcGVuIFdvcmRzIGJvYXJkLiBGb3IgeWVhcnMsIExld2lzIHNhaWQsIGhlJ2QgdmlzaXQgQmVybmFyZCBoZXJlIGFuZCB0YWtlIGEgbG9uZyBhbm51YWwgYmlrZSByaWRlIHRvZ2V0aGVyIChvbmUgeWVhciwgTGV3aXMgcmVjYWxsZWQsIHRoZXkgcm9kZSBmcm9tIEFzcGVuIHRvIENyZXN0ZWQgQnV0dGUsIG9ubHkgdG8gcmVhbGl6ZSB3aGVuIHRoZXkgZ290IHRoZXJlIHRoYXQgdGhleSBkaWRuJ3QgaGF2ZSBrZXlzIHRvIHRoZSBjYXIgQmVybmFyZCBoYWQgZHJvcHBlZCBvZmYgdGhlcmUgdG8gZHJpdmUgYmFjaykuLiAKRm9yIGV4YW1wbGUsIGlmIHlvdSBoYWQgbHVuY2ggd2l0aCBhIHJ1c3NpYW4gb25jZSBhbmQgc2FpZCB3b3VsZCBiZSBncmVhdCBpZiB5b3Ugc3VwcG9ydCBtZSwgdGhhdCBjb3VsZCBiZSBsb29zZWx5IGNsYXNzaWZpZWQgYXMgY29sbHVzaW9uIHdpdGggaW50ZW50IHRvIGluZmx1ZW5jZSB0aGUgZWxlY3Rpb24uIApJIHdhcyBza2VwdGljYWwuIEkgaGFkIGEgc29sYXIgY2FsY3VsYXRvciBiYWNrIGluIHRoZSBkYXkgYW5kIGl0IHdhcyBwcmV0dHkgd2ltcHkuIEJ1dCB0aGUgdGVjaG5vbG9neSBoYXMgaW1wcm92ZWQgc2luY2UgdGhlbiBhbmQgbXkgaVBob25lIGNvdWxkIGFsd2F5cyB1c2Ugc29tZSBleHRyYSBqdWljZS4gSWYgdGhlc2UgYmVuY2hlcyBjYW4gcHJvdmlkZSBpdCAgIGFuZCBkbyBzbyB3aXRob3V0IGh1cnRpbmcgdGhlIGVudmlyb25tZW50ICAgd2hhdCdzIG5vdCB0byBsaWtlPwpJZiB5b3VyIGNsaWVudCBoYXMgYSBjb250YWdpb3VzIHNraW4gZGlzZWFzZSwgb3IgaGFzIGNlcnRhaW4gZGVybWF0b2xvZ2ljYWwgcHJvYmxlbXMgc3VjaCBhcyBhY25lLCBvciBoYXMgd291bmRzIG9yIHNvcmVzLCB5b3UgY2FuIHByb2NlZWQgd2l0aCB0aGUgaG90IHN0b25lIG1hc3NhZ2UsIGJ1dCBhdm9pZCB0aGUgYXJlYXMuIFlvdSBtdXN0IGFsc28gd2VhciBnbG92ZXMgdG8gcHJvdGVjdCB5b3Vyc2VsZiBmcm9tIGNvbnRyYWN0aW5nIHRoZSBjb250YWdpb3VzIGRpc2Vhc2UuCiJEYXRhIGZyb20gdGhlIGFpcnBsYW5lJ3MgZmxpZ2h0IGRhdGEgcmVjb3JkZXIgKEZEUikgc2hvd2VkIHRoYXQgdGhlIGFpcnBsYW5lJ3MgcmlnaHQgZWxldmF0b3Igd2FzIHBvc2l0aW9uZWQgZnVsbCB0cmFpbGluZyBlZGdlIGRvd24gKFRFRCkgd2hlbiB0aGUgZmxpZ2h0IGNyZXcgZmlyc3QgcG93ZXJlZCB1cCB0aGUgYWlycGxhbmUgb24gdGhlIGRheSBvZiB0aGUgYWNjaWRlbnQgYW5kIHJlbWFpbmVkIHRoZXJlIHRocm91Z2hvdXQgdGhlIGFjY2lkZW50IHNlcXVlbmNlLiAKQXMgeW91IGNhbiBzZWUsIGl0IHdhcyBhIGNvbXBvdW5kIHdvcmQgaW4gR3JlZWsuIEJ1dCBpbiBtb2Rlcm4gbGFuZ3VhZ2VzLCBpbmNsdWRpbmcgY29uc3RydWN0ZWQgbGFuZ3VhZ2VzIGxpa2UgRXNwZXJhbnRvIGFuZCBJbnRlcmxpbmd1YSwgaXQgaXMgYSBzaW5nbGUgd29yZCB0aGF0IGNhbiBiZSBkaXZpZGVkLiBXaHk/IEJlY2F1c2UgaW4gdGhvc2UgbGFuZ3VhZ2VzIGRlbW8gIGFuZCAga3JhdGlhIGRvbiBleGlzdCBhcyBzZXBhcmF0ZSB3b3Jkcy4gVGhleSBhcmUgc28gY2FsbGVkIGJvdW5kIG1vcnBoZW1lcyB0aGF0IGRvbiBoYXZlIGluZGVwZW5kZW50IGV4aXN0ZW5jZS4KRmx1c2ggICBGaXZlIGNhcmRzIG9mIHRoZSBzYW1lIHN1aXQgKDMsNSw5LEosQSBvZiBzcGFkZXMpClN0YXllZCBvdXQgdGhlcmUgZm9yIGFib3V0IHRocmVlIGhvdXJzIGp1c3Qgd2F0Y2hpbmcgaW4gYXdlLiBIYXZpbmcgZmxvd24gc2luY2UgSSB3YXMgYSB0aW55IGNoaWxkIEkgb2Z0ZW4gdGFrZSBob3cgYW1hemluZyB0aGUgY29uY2VwdCBvZiBmbGlnaHQgaXMgZm9yIGdyYW50ZWQsIGJ1dCB3YXRjaGluZyB0aG9zZSBuZXcgdHdvIHN0b3J5IHN1cGVyYnVzIHBsYW5lcyB0YWtpbmcgb2ZmIGlzIGEgdHJ1ZSB3b25kZXIuIAoiQSBjaGlsZGNhcmUgY2VudHJlIGlzIGNlcnRhaW5seSBwYXJ0IG9mIG91ciBtYXN0ZXIgcGxhbiBhbmQgd291bGQgYmUgcG9zaXRpb25lZCBvbiB0aGUgdmVyeSBmYXIgY29ybmVyIG9mIG91ciBzaXRlIGFkamFjZW50IHRvIGEgcmVzaWRlbnRpYWwgYXJlYS4KU3RhdGUgQXR0b3JuZXkgRGF2ZSBBcm9uYmVyZyBzYWlkIEtyYWZ0IHdpbGwgYmUgaXNzdWVkIGEgc3VtbW9ucyB0aGF0IGlzIHNpbWlsYXIgdG8gYSB0cmFmZmljIHRpY2tldCBhbmQgYXNzaWduZWQgYSBkYXkgdG8gYXBwZWFyIGluIGNvdXJ0LiBNb3N0IHBlb3BsZSBjaGFyZ2VkIGZvciB0aGUgZmlyc3QgdGltZSB3aXRoIHNvbGljaXRpbmcgYXJlIGVsaWdpYmxlIGZvciBhIGRpdmVyc2lvbiBwcm9ncmFtIHdoZXJlIHRoZXkgcGF5IGEgc21hbGwgZmluZSwgcGVyZm9ybSAxMDAgaG91cnMgb2YgY29tbXVuaXR5IHNlcnZpY2UgYW5kIGF0dGVuZCBhIGNsYXNzIHdoZXJlIHRoZXkgbGVhcm4gYWJvdXQgdGhlIGRhbmdlcnMgb2YgcHJvc3RpdHV0aW9uIGFuZCBob3cgaXQgaXMgb2Z0ZW4gdGllZCB0byBodW1hbiB0cmFmZmlja2luZy4uIApXaGVuZXZlciBwb3NzaWJsZSwgZ2l2ZSB0aGUgc3R1ZGVudCBhIHBoeXNpY2FsIG9iamVjdCB0byBoZWxwIHRoZW0gY29uY2VwdHVhbGl6ZSB0aGUgcHJvYmxlbS4gVGhpcyBjb3VsZCBpbmNsdWRlIHNtYWxsIGl0ZW1zLCBzdWNoIGFzIGJlYW5zIG9yIHBva2VyIGNoaXBzLCB0aGF0IHRoZXkgY2FuIG1hbmlwdWxhdGUuIEZvciBleGFtcGxlLCB5b3VyIHN0dWRlbnQgY291bGQgd29yayB0aHJvdWdoIHRoZSBwcm9ibGVtIDIwLzQgdXNpbmcgMjAgcG9rZXIgY2hpcHMuIFRoZXkgY291bGQgZGl2aWRlIHRoZSBwb2tlciBjaGlwcyBpbnRvIDQgcGlsZXMsIHdoaWNoIHdvdWxkIHNob3cgdGhhdCB0aGVyZSBhcmUgNSBjaGlwcyBpbiBlYWNoIHBpbGUuClNoZSB0dXJuZWQgMzAgeWVhcnMgb2xkIGluIHByaXNvbiBsYXN0IHllYXIuSW4gcmVhbGl0eSwgdGhpcyBzaG91bGQgYmVlbiBjb25zaWRlcmVkIHNlbGYgZGVmZW5zZSwgYSByYXBpbmcgb2YgYSBtaW5vciwgYW5kIG1pbm9ycyBhbmQgY2hpbGRyZW4gc2hvdWxkIGFic29sdXRlbHkgTkVWRVIgYmUgYWxsb3dlZCB0byBiZSBsYWJlbGVkIGFzIHByb3N0aXR1dGVzIGluIGEgY291cnQgb2YgbGF3IHRoYXQgdXBob2xkcyB0aGUgc2FtZSBsYXcgdGhhdCBtaW5vcnMgY2Fubm90IGdpdmUgY29uc2VudCB0byBzZXguVGhpcyBpcyBqdXN0IG9uZSBjYXNlLiAKSSB1bmRlcnN0YW5kIHRoZSBmZWVsaW5nIHRoZSByYWNpc20gaXMgaGl0dGluZyB5b3UgYWxsIG9mIHRoZSBzdWRkZW4uIEkgY2FuIHJlbWVtYmVyIGV2ZXJ5IHN0YWdlIG9mIG15IHJlYWxpemF0aW9ucy4gSGVsbCwgSSBkaWRuIGV2ZW4gcmVhbGl6ZSBtb3N0IHBlb3BsZSB3ZXJlIG1vbm9yYWNpYWwgd2hpdGUgdW50aWwgSSB3YXMgNy4gSXQgb2theSB0byBiZSBzd2VwdCBvZmYgeW91ciBmZWV0IGFuZCBzYWQuIFRha2UgeW91ciB0aW1lLiBUYWtlIGEgYnJlYWsuIEFuZCByZXR1cm4gcmVhZHkgdG8gZmFjZSB0aGVpciByYWNpc20uIFlvdSBkb24gYW5kIHNob3VsZG4gYmUgdW5hZmZlY3RlZCBieSB0aGVpciByYWNpc20sIHNpbXBseSBjYWxtIGFuZCBzZWN1cmUgZW5vdWdoIHRvIGhhbmRsZSBpdC4KSGUgd2FzIGFibGUgdG8gcHVsbCBvdXQgb2YgaXQuIApUaGF0IHNhaWQsIEkgZG9uIHRoaW5rIHRoaXMgaXMgcmVhbGx5IHJlbGV2YW50IHRvIHRoZSB0b3BpYyBhdCBoYW5kLCB3aGljaCBpcyBob3cgdG8gb2J0YWluIGFuIGVwaW5lcGhyaW5lIHBlbiBhcyBjaGVhcGx5IGFzIHBvc3NpYmxlLiBJbiBtYW55IGNhc2VzIHRoZSBjYXNoIHByaWNlIHBsdXMgY291cG9uIGFuZC9vciBxdWFsaWZ5aW5nIGZvciBhIHByb2dyYW0gKEF1dmkgUSkgaXMgYmV0dGVyIHRoYW4gd2l0aCBpbnN1cmFuY2UuLiAKQXMgaG9taW5lbT8gWW91IGNhbiBwcm9taXNlIHNoaXQgYmVjYXVzZSB5b3UgYXJlIGNvbXBsZXRlbHkgb3V0IG9mIHlvdXIgZGVwdGgsIHlvdSBzaWxseSBvbCBiaXJkIGxhd3llciwgeW91LiBIb3cgdGhlIGZ1Y2sgZG8geW91IGtub3cgd2hhdCBhIGxlZ2FsIGFzc2lzdGFudCBkb2VzIG9yIHdoYXQgdGhlIGpvYiBpcyBsaWtlPyBZb3UgbmV2ZXIgd29ya2VkIGluIHRoZSBsZWdhbCBmaWVsZCBhdCBhbGwgbG9sLiBTdXJlIHNlZW1zIGxpa2UgeW91IHdpc2ggeW91IGRpZCwgdGhvdWdoLiAKTGUgMTBlIGVzdCB1biBkZXMgYXJyb25kaXNzZW1lbnRzIGxlcyBwbHVzIGRlbnNlcyBkZSBsYSBjYXBpdGFsZSBhdmVjIDkzIDAwMCBoYWJpdGFudHMgZG9udCB1bmUgcG9wdWxhdGlvbiBqZXVuZSBpbXBvcnRhbnRlIDogMjMsOSUgcG91ciBsZXMgMTUgMjkgZXQgMjcsNiUgcG91ciBsZXMgMzAgNDQgYW5zLiBEZXV4IGdhcmVzLCB0cm9pcyBocGl0YXV4IGV0IGRlIG5vbWJyZXV4IGNvbW1lcmNlcyAocHJlc3F1ZSBsZSBkb3VibGUgZGUgbGEgbW95ZW5uZSBwYXJpc2llbm5lKSwgb24gY29tcHJlbmQgYXVzc2kgcXVlIGxlcyB1c2FnZXJzIGRlIHRvdXRlIHNvcnRlIHkgdmllbm5lbnQgbm9tYnJldXguIFNhbnMgb3VibGllciBsJ291dmVydHVyZSByY2VudGUgZGUgbGEgc2FsbGUgZGUgY29uc29tbWF0aW9uICBtb2luZHJlIHJpc3F1ZSAoU0NNUikuCkxvcmQgSSBrbm93IHRoYXQgaXQgbWF5IGJlIGEgZGFuZ2Vyb3VzIHByYXllciB0byBwcmF5LiBJIHByYXkgbW9yZSBmb3IgbXkgaHVzYmFuZCB0aGVuIG15IGNoaWxkcmVuLiBQbGVhc2UgdGFrZSBhIGxvb2sgYXQgbXkgYm9va3MhIFJlbW92ZSBoaW0gZnJvbSB0aGUgc2hhbWUgYW5kIGd1aWx0IG9mIGhpcyBwYXN0IGFuZCBnaXZlIGhpbSBjb3VyYWdlIHRvIGxpdmUgaW4gdGhlIHByZXNlbnQgYW5kIHNldCBnb2FscyBmb3IgdGhlIGZ1dHVyZSwgR29kIEkgdm93ZWQgdG8gc3RhbmQgYnkgaGltIGluIHlvdXIgbmFtZSBhbmQgbmVlZCBzdHJlbnRoIGFuZCBwYXRpZW5jZSB0byBnZXQgdGhydSB0aGlzIHRpbWUgaW4gb3VyIGxpdmVzLiBXaGVuIFlvdXIgSHVzYmFuZCdzIEhlYXJ0IElzIEhhcmQgVHJ1ZSBXb21hbiBCbG9nIFJldml2ZSBPdXIgSGVhcnRzIGlvbiBhbmRyb2lkIG1vcmUgaG9yaXpvbnRhbCBpb24gYW5kcm9pZCBtb3JlIHZlcnRpY2FsIGlvbiBjaGV2cm9uIHJpZ2h0IGlvbiBpb3MgYm9va21hcmtzIG91dGxpbmUgaW9uIGlvcyBib29rbWFya3MgaW9uIGlvcyBjaGF0YnViYmxlIG91dGxpbmUgaW9uIGlvcyBjaGF0YnViYmxlIGlvbiBpb3MgY2xvdWQgZG93bmxvYWQgb3V0bGluZSBpb24gaW9zIGNsb3VkIGRvd25sb2FkIGlvbiBpb3MgcGFwZXJwbGFuZSBvdXRsaW5lIGlvbiBpb3MgcGFwZXJwbGFuZSBpb24gaW9zIHByaW50ZXIgb3V0bGluZSBpb24gaW9zIHByaW50ZXIgaW9uIGlvcyBsb2NrZWQgaW9uIHNvY2lhbCBmYWNlYm9vayBvdXRsaW5lIGlvbiBzb2NpYWwgZmFjZWJvb2sgaW9uIHNvY2lhbCB0d2l0dGVyIG91dGxpbmUgaW9uIHNvY2lhbCB0d2l0dGVyIGlvbiBzb2NpYWwgd2hhdHNhcHAgb3V0bGluZSBpb24gc29jaWFsIHdoYXRzYXBwIG5ld3MgcHJvZmlsZSByZWNlaXB0IGNyZWRpdCBjYXJkIGRpYW1vbmQzIGJ1bGxob3JuIGlvbiBpb3MgbG9jYXRpb24gb3V0bGluZSBJIHdhcyBhIHdpZmUgd2lsbGluZyB0byBzdGF5IGFuZCBrZWVwIG15IHZvdywgbm8gbWF0dGVyIHdoYXQuIEkgd291bGQgYmUgc3VycHJpc2VkIGlmIGFueSBvZiBvdXIgcHJpZXN0cyB0aGluayB0aGF0LiBDcnlpbmcgb3V0IGZvciBoZWxwIERlYXIgTG9yZCwgSSBiZWcgYW5kIHByYXkgZm9yIG15IGZpYW5jIERlcmVrLgpEMiBoYWQgYSBteXN0ZXJpb3VzLCBlZXJpZSBzdG9yeSBiZWluZyB0b2xkIHRocm91Z2ggbmFycmF0aW9uIGFuZCBmbGFzaGJhY2tzLiBEMyBoYWQgdGhlIGdyZWF0ZXN0IHN0cmF0ZWdpc3Qgb2YgdGhlIGJ1cm5pbmcgaGVsbHMgdGVsbGluZyB5b3UgZXhhY3RseSB0aGUgbmV4dCBzdGVwIG9uIGhpcyBwbGFuIHRvIGJyZWFrIGludG8gQmFzdGlvbiBLZWVwLCB0byBjaXRlIG9uZSBvZiB0aGUgc3Rvcnkgc2hvcnRjb21pbmdzLiBSb1MgY2FtcGFpZ24gaGFkIGEgd2F5IGJldHRlciBzdG9yeS4gRG8geW91IGtub3cgd2h5IHRoZSBzdG9yeSB0dXJuZWQgb3V0IGxpa2UgdGhpcz8gRGlkIHBlb3BsZSBnZW5lcmFsbHkgdGhvdWdodCB0aGlzIHdhcyBhbHJpZ2h0IG9yIHdhcyBpdCAiaW1wb3NlZCIgaW4gc29tZSB3YXk/Ckkgbm90IHNheWluZyBXYWxsIFN0LiB3b24gZ28gdXAsIGFuZCB0aGF0IHVwIG1pZ2h0IGxhc3QgZm9yIGEgY291cGxlIG9mIHllYXJzLiBBZnRlciBhbGwsIHlvdSBjYW4gd2luIGF0IHRoZSBjYXNpbm9zIHRvbywgYXQgbGVhc3QgZm9yIGEgd2hpbGUuIEJ1dCBldmVudHVhbGx5LCBhIHN5c3RlbSB0aGF0IGlzIG1lYW50IHRvIGV4dHJhY3Qgd2VhbHRoIGZyb20gbW9zdCBvZiB1cyB0byBwcm9kdWNlIGh1Z2UgcHJvZml0cyBmb3IgYSBoYW5kZnVsIChjYXNpbm9zLCBjb25zdW1lciBjYXBpdGFsaXNtKSB3aWxsIG5vdCBiZSBhYmxlIHRvIHN1c3RhaW4gdXMuIEl0IHdpbGwgbm90IHByb3ZpZGUgaG91c2luZyBvciBoZWFsdGhjYXJlIG9yIGdvb2Qgc2Nob29scyBvciBhIGNsZWFuIGVudmlyb25tZW50LiBTbyBiZWZvcmUgeW91IGdvIGFuZCBiZXQgdGhlIGZhcm0gYmVjYXVzZSBXYWxsIFN0LiBpcyBoYXBweSwgcmVtZW1iZXIgdGhhdCBnYW1ibGluZyB0aGUgc2hpcnQgb2ZmIHlvdXIgYmFjayBpcyBub3QgYSBncmVhdCBwbGFuIGZvciB0aGUgZnV0dXJlLgpJdCBpbmNyZWRpYmx5IGFudGkgY29tcGV0aXRpdmUuIApBIHdlZWsgYW5kIGEgaGFsZiBsYXRlciwgaGUgY2FtZSBiYWNrIHNvYmJpbmcgYW5kIHNheWluZyBob3cgaGUgY291bGRuJ3QgZG8gaXQgYW5kIGhlIGJlZ2dlZCBtZSB0byB0YWtlIGhpbSBiYWNrLiAKQSBwcm8gdGlwIGZvciBhbGwgd2hvIG1pZ2h0IGJlIGNvbnZlcnRlZCB0byB0aGUgc3dpbmdpbmcgbGlmZSBzdHlsZSAoeWVzLCB0aGF0IGEgcHVuKTogU2V4IGluIGEgaGFtbW9jayB3b3JrcyBhIGxpdHRsZSBkaWZmZXJlbnQuIFN1cmUsIGEgY291cGxlIGNhbiBjdWRkbGUsIGJ1dCB0aGUgYWN0aW9uIGlzIG5vdCBnb25uYSBoYXBwZW4gaW4gdGhlIHRoaW5nLCBUaGUgYmFzaWMgbWFuZXV2ZXIgKHVzaW5nIGdlbmVyaWMgaGV0ZXJvIHNleCwgbW9kaWZ5IGFzIHlvdSBzbyBkZXNpcmUpIGlzIGZvciB0aGUgZmVtYWxlIHRvIGxheSBkb3duLCBhbmQgdGhlIG1hbGUgdG8gc3RyYWRkbGUgaGVyIGFuZCB0aGUgaGFtbW9jay4gTWlsaXRhcnksIHVuaW9uIGFuZC9vciB3b3JraW5nIGNsYXNzIHN0aWNrZXJzLiAKT3ZlcmFsbCBSZXB1dGF0aW9uIGluIEdhbWluZyBDb21tdW5pdHkKV2FzIHdhdGNoaW5nIGhpcyBzdG9tYWNoIGFuZCBoZSB3YXMgYnJlYXRoaW5nIHJlYWxseSBoYXJkIGxpa2UgbGFib3JlZCBicmVhdGhpbmcgYW5kIEkgbGlrZSwgaXQsIEkgdGFraW5nIGhpbSBpbiwnIHRoZSBtb3RoZXIgc2FpZC4KRWl0aGVyIG9yZ2FuaXphdGlvbiBjYW4gb2ZmZXIgdG8gY29udGludWUgc2VydmljaW5nIEFCQyBPcmcgY2xpZW50cyBpZiB0aGV5IGdpdmVuIHRoZSBhc3NldCB0cmFuc2ZlciwgYnV0IHRoZXkgY2FuIGJlIGZvcmNlZCB0by4gClRoaXMgaXMgbWFpbmx5IGZyb20gYWR2ZXJ0aXNlbWVudC4gWW91dHViZSBoYXMgd2l0bmVzc2VkIGEgMzAlIGdyb3d0aCBvZiBnYW1lcnMgd2l0aGluIHRoZSAyMDE2IHRvIDIwMTggeWVhcnMuIEFzIHRoZSBnYW1pbmcgd29ybGQgYmVjb21lcyBtb3JlIGFkdmFuY2VkLCB0aGVyZSB3aWxsIGJlIG1vcmUgaW5ub3ZhdGl2ZSB3YXlzIGZvciB1c2VycyB0byBlYXJuIG1vbmV5Li4gClRob3VnaCBzdWNoIHRyZW5kcyBhcmUgdW5jZXJ0YWluLCB0aGVpciBwb3RlbnRpYWwgaW1wYWN0IHdvdWxkIGJlIG1hc3NpdmU6IFdoaWxlIEphcGFuZXNlIG1lZ2EgYmFua3MgaG9sZCBzaG9ydCBtYXR1cml0eSB0d28geWVhciBnb3Zlcm5tZW50IGJvbmRzLCB0aGUgbGlmZSBpbnN1cmFuY2UgY29tcGFuaWVzIGNhcnJ5IEpHQnMgd2l0aCBhdmVyYWdlIG1hdHVyaXRpZXMgb2YgMTEgeWVhcnMgdG8gMTIgeWVhcnMuIApPZiBjb3Vyc2UsIEkga25vdyBtb3N0IHBlb3BsZSBkaXNsaWtlIENJIGFuZCBjb21ib3MgZm9yIG9uZSByZWFzb24gb3IgYW5vdGhlciwgc28gSSBub3QgZXhwZWN0aW5nIHRvbyBtYW55IHRvIGNvbW1pc2VyYXRlLCBidXQgSSBkbyBzaW5jZXJlbHkgZmVlbCB0aGF0IG9uZSBvZiB0aGUgYmlnIHBhcnRzIG9mIHdoYXQgbWFkZSBOZXRydW5uZXIgZnVuIGZvciBtZSBpcyBnb2luZyB0byBnbyBhd2F5LCBpZiB0aGUgYmFuIHJlYWxseSBnb2VzIHRocm91Z2guClRoYXQgaGVscGVkLiBJIG9wdGVkIG5vdCB0byB3ZWFyIGdsb3ZlcyBhbmQgbXkgaGFuZHMgcmVhbGx5IGh1cnQgZm9yIHRoZSBmaXJzdCB0aHJlZSBtaWxlcyB1bnRpbCBJIGdvdCB3YXJtZWQgdXAuIApNaXNzbWlsZCAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpVbiBkaW1hbmNoZSBpbmRpZW4gbGFyZ2VtZW50IGluc3BpcgpCZWluZyBhIG1pbGxpb25haXJlIGdpdmVzIHlvdSB0aGUgb3B0aW9uIHRvIGRvIHdoYXQgeW91IHdhbnQsIHdoZW4geW91IHdhbnQsIGFuZCB3aGVyZSB5b3Ugd2FudC4gSXQgYWxzbyBnaXZlcyB5b3UgcmVzcG9uc2liaWxpdHkuIEkndmUgYnVpbHQgYSBmZXcgZ3JlYXQgY29tcGFuaWVzLCBhbmQgd2l0aCB0aGF0IGNvbWVzIGEgcmVzcG9uc2liaWxpdHkgdG8gbXkgaW52ZXN0b3JzIGFuZCBhIHJlc3BvbnNpYmlsaXR5IHRvIG15IGVtcGxveWVlcy4gCk9uIG15IGdyYXkgZ3JlZW4gYm9keSBodWdnaW5nLCBvdmVydGF4IHJpZyBvdXQgY2hpZWZseSB0aGUga25lZSwgZnJvbnQgZmFzdGVucyB3aXRoIGEgemlwcGVyLCBhbmQgYmxhY2sgaW1tb3J0YWwgc2hvZXMgb24gY29uc2VxdWVudGlhbCBoZWVscy4gSSBpbiBhIHJ1biwgZGFtbiBuZWFyIG1lZXQgZG93biB0aGUgc2lkZXdhbGsuIApXb3JzdCBvZiBhbGwsIElmIEkgd2VyZSBhbiBPaWxlcnMgZmFuLCBJIGJlIHZlcnkgd29ycmllZCBhYm91dCBNY0RhdmlkIHNpZ25pbmcgc29tZXdoZXJlIGVsc2UuIFRoZSBndXkgaGFzIGJlZW4gdG8gaGlzIGNyZWRpdCBhbGwgY2xhc3MgdGhyb3VnaG91dCB0aGlzIG1lc3MsIGJ1dCBhdCBzb21lIHBvaW50IGhlIGdvaW5nIHRvIHdhbnQgdG8gd2luLCBhdCB0aGUgdmVyeSBsZWFzdC4KSSB1c2VkIHRvIGZlZWwgdGhlIG5lZWQgdG8gZ3JpbmQgb3V0IG9mIGl0LCBidXQgY29tcGFjdGluZyBhbGwgdGhvc2UgbG9zc2VzIGlzIGluc2FuZWx5IHRvdWdoLCBhdCBsZWFzdCBvbiBteSBtZW50YWwgZ2FtZS4uIApUaGUgb25seSB0aGluZyB5b3UncmUgd2FpdGluZyBmb3Igbm93IGlzIHRoZSBmbG9wLiBUaGUgZmxvcCBjb21lcyB1cCBhbmQgYW5vdGhlciBBY2Ugc2hvd3MgaXRzZWxmLiAKQXNrIHRoZSBzdHVkZW50cyB0byB0ZWxsIHlvdSBob3cgdG8gZmlndXJlIGl0IG91dC4gCkkgY2FsbCwgb3RoZXIgZ3V5IG91dC4gVHVybiBpcyBKIHRvIG1ha2UgNSA1IDUgSi4gClRoYXQgZWFybHkgaW5ub3ZhdGlvbiBpcyBub3cgYmFjayBpbiBzdHlsZS4gCjIgd2Vla3MgYWZ0ZXIgam9pbmluZyBpIGZvdW5kIG91dCBhbGwgdGhlIG5lZ2F0aXZpdHkgY29tZXMgZnJvbSB0aGUgZGlyZWN0b3Igd2hvIHVuZGVycGF5cyBwZW9wbGUgd29ya2luZyA0MCBob3VyIHdlZWtzIGFuZCBkb2VzIG5vdCBsZXQgYW55b25lIHRha2UgbGVhdmUgdW50aWwgY2hyaXN0bWFzLgpGaXJzdCBoZSBpbnNpc3RlZCBoZSB3YW50ZWQgZXh0cmFzIG9uIGl0IGJ1dCBvbmx5IHdhbnRlZCB0byBwYXkgdGhlIGJhc2UgcHJpY2UsIGJ1dCBhZnRlciBhIGZldyBtaW51dGVzIG9mIGFyZ3VpbmcgaGUgcmVsZW50ZWQgYW5kIGp1c3QgYm91Z2h0IGl0IHdpdGhvdXQgZXh0cmFzLiAKU2VuaW9yIFN0eWxpc3QgLyBDb2xvdXJpc3QKVGhlIHNvIGNhbGxlZCBTcGVha2VyIENhbGwgYWxsb3dzIGl0IHRvIGF1dG9tYXRpY2FsbHkgYWN0aXZhdGUgdGhlIHNwZWFrZXJwaG9uZSB3aGVuIHlvdSB0YWtlIHRoZSBoYW5kc2V0IG9mZiB5b3VyIGVhciBkdXJpbmcgYSBjYWxsIGFuZCBwbGFjZSBpdCBvbiBhIGxldmVsIHN1cmZhY2UuIApGaW5hbmNpYWxseSBhbmQgc29jaWFsbHksIHBva2VyIGlzIG1vdmluZyBvdXQgb2Ygc21va3kgYmFja3Jvb21zLCBpbnRvIGdsaXR6eSBhcmVuYS4gT25saW5lIHBva2VyIGhhcyBncm93biBpbnRvIGEgZ2xvYmFsIGluZHVzdHJ5IHdpdGggYSAxNSBiaWxsaW9uIHR1cm5vdmVyLiAKVGhhdCBraWQgbWFkZSBhIHNhbGUgYnkgcmVhZGluZyBteSBtaW5kLiAKQ29sb3IgYW5kIGl0cyB1c2UgYW5kIGFidXNlIGlzIGEgdmVyeSBwZXJzb25hbCB0aGluZyBlc3BlY2lhbGx5IHRoZSAiYWJ1c2UiIHBhcnQuIFRoZSBwYW1waGxldCBiZWxvdyAoVmlld3Mgb2YgdGhlIE5ldyBZb3JrIFdvcmxkIEZhaXIsIDE5MzksIGFuZCBwdWJsaXNoZWQgdGhhdCB5ZWFyKSB0byBtZSBpcyBjZXJ0YWlubHkgb25lIG9mIHRob3NlIGVudHJpZXMgaW4gdGhlIGhpc3Rvcnkgb2YgdGhlIGFidXNlIG9mIGNvbG9yLCBub3Qgc28gbXVjaCB0aGF0IHRoZSBjb2xvcnMgdXNlZCBpbiBpdCBhcmUgb2RkIHRvZ2V0aGVyLCBidXQgdGhlIHNhdHVyYXRpb24gb2YgY29sb3IgYWNyb3NzIHRoZSBib2FyZCBsZWFkcyB0byBzb21ldGhpbmcgbGlrZSBTcGxlbmRvcmFtYSBoeXBlciBjb2xvci4gCklmIHlvdSBzb21laG93IGhhZCBhIHNldCwgZG9uJ3QgeW91IHRoaW5rIHlvdSB3b3VsZCd2ZSBwdXQgaW4gYSBzbWFsbCB2YWx1ZSBiZXQgd2hlbiBoZSBjaGVja3MgdG8geW91PyBJbiBhZGRpdGlvbiwgdGhlIHR1cm4gaXNuJ3QgYSBzY2FyZSBjYXJkIHdoYXRzb2V2ZXIuIFNvIGlmIHZpbGxhaW4gaXMgcGVyY2VwdGl2ZSBlbm91Z2gsIHlvdSBjYW4gc2VlIHdoeSB5b3VyIGxpbmUgZG9lc24ndCBtYWtlIHNlbnNlLi4gCkZlZWQgTWUgSmFjaywgYW5vdGhlciBiYW5kIHRoYXQgSSB3b3VsZCBjbGFzc2lmeSBhcyBpbmRpZS9tYXRoLiBJZiB5b3UgbGlrZSB0aGlzLCBhbHNvIGNoZWNrIG91dCBUaGUgTW9zdC4KUmVnYXJkbGVzcywgaXQncyB3b3J0aCBwdXR0aW5nIHVwIHdpdGggZm9yIHRoZSBhbW91bnRzIHRoYXQgYXJlIHJhaXNlZCBhbmQgaXQncyBub3QgbmVhcmx5IGFzIHJpZGljdWxvdXMgYXMgc3R1ZGVudHMgc3RpbGwgYmVpbmcgb3Zlcmx5IG91dHNwb2tlbiBhYm91dCBKb2UgUGF0ZXJubywgYnV0IHRoYXQncyBhIHdob2xlIG90aGVyIGN1bHQgbWVudGFsaXR5IVRIT04gb3JnYW5pemF0aW9ucyAoc3R1ZGVudCBydW4gImNsdWJzIiBiYXNpY2FsbHkpIGdldCB0byBjaG9vc2UgYSBjZXJ0YWluIG51bWJlciBvZiBkYW5jZXJzIGV2ZXJ5IHllYXIsIHVzdWFsbHkgYmFzZWQgb24gd2hvJ3MgcGFydGljaXBhdGVkIGluIHRoZWlyIG9yZyBhbmQgY29udHJpYnV0ZWQgYSBsb3QgdG8gVEhPTiBzaW5jZSBhdHRlbmRpbmcgUGVubiBTdGF0ZS4gVGhlIGxvdHRlcnkgaXMgZm9yIGluZGVwZW5kZW50IGRhbmNlcnMsIG1lYW5pbmcgc2hlIHdhcyBub3QgcGFydCBvZiBhbiBvcmcuIEFzIG11Y2ggYXMgaXQgc3Vja3MsIHRoZXJlJ3MgYSBsb3Qgb2YgcGVvcGxlIHRoYXQgcHV0IGluIHRvIGJlIGFuIGluZGVwZW5kZW50IGRhbmNlciBhbmQgYSBsb3Qgb2YgdGhlbSByYWlzZSBhIHRvbiBvZiBtb25leSwgc28gaXQncyBzb3J0YSB0aGUgb25seSBwb3NzaWJsZSB3YXkgdG8gZ28gYWJvdXQgaXQuIApTYW1lIHNlbnNhdGlvbiBhcyB5b3UgZGVzY3JpYmUgYW5kIHRoYXQgaGFwcGVuZWQgdG8gbXkgaGFtc3RyaW5ncy4gSSB0b29rIHRpbWUgb2ZmIGZyb20gc3F1YXRpbmcgZm9yIGEgYml0IHRvIG5vdCBhZ2dyZWdhdGUgdGhlIGluanVyeS4gCkJlbG93LCB5b3Ugd2lsbCBmaW5kIHNvbWUgZGlmZmVyZW50IHR5cGVzIG9mIHBva2VyIGdhbWVzLiBFYWNoIG9mIHRoZXNlIGdhbWVzIHJlcXVpcmVzIGEgZGlmZmVyZW50IHNldCBvZiBza2lsbHMgYW5kIGNhbGN1bGF0aW9ucywgdGhleSBhbGwgc3RpbGwgZW1ib2R5IHRoZSBoZWFydCBvZiBwb2tlcjsgcmVhZCB5b3VyIG9wcG9uZW50IHByb3BlcnR5LCBibHVmZmluZyBoaW0gd2hlbiBuZWNlc3NhcnkgYW5kIGFsd2F5cyBvdXRwbGF5IGhpbS4gSGVyZSBhcmUgc29tZSBvZiB0aGUgYmVzdCBwb2tlciBnYW1lIHZhcmlhdGlvbnMgYXJvdW5kLgpHdXQgY2hlY2sgdGltZS4gTWFkZSBteXNlbGYgYSBwcm9taXNlIHRoYXQgSSB3b3VsZCBzdGFydCBwbGF5aW5nIG15IEEgZ2FtZSBhbmQgZ2l2ZSBpdCBteSBhbGwgbXkgbmV4dCBzZXNzaW9uOyBpZiBJIHdlbnQgYnJva2UgYXQgdGhhdCBwb2ludCwgSSdkIHF1aXQgcG9rZXIgZm9yIGdvb2QgYW5kIGdvIGJhY2sgdG8gc2Nob29sLiBTYXQgZG93biBhdCB0aGUgVmVuZXRpYW4gYXQgYXJvdW5kIE1hcmNoIDMxc3Qgbm9vbiwgcGxheWVkIGZvciBhcm91bmQgMjEgaG91cnMgdGlsIDlhbSB0aGUgbmV4dCBtb3JuaW5nLCByYW4gcHJldHR5IGZ1Y2tpbmcgd2VsbCwgYW5kIGZpbmlzaGVkIHRoZSBzZXNzaW9uIHVwIDIySy4gCklzc3VlcyBvZiBzYW5pdGF0aW9uIGhhdmUgYWxyZWFkeSBiZWVuIG1lbnRpb25lZCwgYnV0IGl0IGlzIHVubGlrZWx5IHRoYXQgdGVsZWNvbW11bmljYXRpdmUgbWVkaWNpbmUgd2lsbCBiZSBhdmFpbGFibGUgdG8gdGhlbSAgIHBoeXNpY2lhbnMgd2lsbCBuZWVkIHRvIGJlIHRoZW9yZXRpY2FsbHkgY2FwYWJsZSBvZiBvcGVyYXRpbmcgb24gYSB3aWRlIHZhcmlldHkgb2YgdHJhdW1hcyB0byBlZmZlY3RpdmVseSByZXNwb25kIHRvIGltbWVkaWF0ZSB0aHJlYXRzIHRvIGxpZmUuLiAKSW52ZXN0ZWQgaW4gZXZlcnl0aGluZyBmcm9tIG1pbGl0YXJ5IGVxdWlwbWVudCBhbmQgYmlvdGVjaCB0byBhIGxvdHRlcnkgYmVoZW1vdGggYW5kIE1hcnZlbCBjb21pY3MuNDYuIApZb3VyIHNlbmlvciBwZW9wbGUgaXMgbm90IHRoZSBzb2x1dGlvbiB0byBub3QgZ2V0dGluZyB0ZW51cmUuIApGb3IgZXhhbXBsZSwgYSAyMDA4IHNob3dlZCB0aGF0IGEgNiB3ZWVrIHByb2dyYW0gaW5jcmVhc2VkIHRoZSBhbW91bnQgb2YgZmF0IGJ1cm5lZCBkdXJpbmcgZXhlcmNpc2UgYnkgMTIgcGVyY2VudCBhbmQgZGVjcmVhc2VkIHRoZSBveGlkYXRpb24gb2YgY2FyYm9oeWRyYXRlcyBvYnZpb3VzbHksIGEgZmF2b3JhYmxlIHJlc3VsdCBmb3IgbG9zaW5nIGZhdC4gTW9yZSBpbXByZXNzaXZlLCBhIDIwMDcgc3R1ZHkgc2hvd2VkIHRoYXQgaW4gYXMgbGl0dGxlIGFzIDIgd2Vla3MsIGFjdGl2ZSB3b21lbiB3aG8gcGVyZm9ybWVkIGludGVydmFsIHRyYWluaW5nIGV4cGVyaWVuY2VkIGEgMzYgcGVyY2VudCBpbmNyZWFzZSBpbiB0aGUgdXNlIG9mIGZhdCBmb3IgZnVlbCBkdXJpbmcgZXhlcmNpc2UuClZlZ2FzIGlzbid0IHRoZSBwbGFjZSB0byBzZXQgdXAgc2hvcC4gVG9vIG1hbnkgd2FubmFiZSBwb2tlciBwcm9zIGFuZCB0aGUgYWN0aW9uIGlzbid0IHRoZXJlLiBDYWxpZm9ybmlhIGNvc3Qgb2YgbGl2aW5nIGlzIHRvbyBoaWdoIGZvciAkNTBrLiBUaGVyZSdzIHBsZW50eSBvZiBhY3Rpb24gaW4gRmxvcmlkYS4gVGhvc2Ugb2xkIGd1eXMga25vdyB0aGV5IGNhbid0IHRha2UgaXQgd2l0aCB0aGVtIGFuZCBwbGF5IGxpa2UgaXQuIEFyaXpvbmEgaGFzIGEgY291cGxlIHBsYWNlcyB3aXRoIGRlY2VudCBhY3Rpb24uIEltIGJhc2VkIGluIE5KLiBCb3JnYXRhJ3MgYWN0aW9uIGlzIGdvb2QuIFBhcnggaXMgZ29vZCBmb3IgeW91ciBsaW1pdHMgdG9vLiBIb3BlIHRoYXQgaGVscHMuCkl0YWx5IHRha3R3aiBldmVyeSBhZHZhbnRhZ2Ugb2YgaGVyIHN0cmlja2VuIGZvZXMgcHJlc3NlZCB1cG9uIHRobyBBbGllcyBJbiBhIHNlcmllcyBvZiB1bmltcG9ydGFudCBhc3NhdWx0cyBtIHdoaWNoIHRoZSBJdGFsaWFucyB3ZXJlIGNhcmVmdWwgbm90IHRvIGVpcG9zZSB0aGVtc2VsdmVzIHRvIGFueSBmdUggc2NhdG8gb2N0dG9uIGZyb20gZWl0aGVyIHRoZSBGcmVuY2ggb3IgdGhlIElyaXRIaC4gCkkgbm90IGludGVudGlvbmFsbHkgdHJ5aW5nIHRvIG1ha2UgeW91IGZlZWwgYmFkIGJ1dCB5b3UgbmVlZCB0byB1bmRlcnN0YW5kIHlvdXIgZmxvcCBsZWFkIGhlcmUgaXMgYSBnaWdhbnRpYyBtaXN0YWtlOyBpdCByZWFsbHkgYmFkLlR1cm4gc3Vja3MgYnV0IHlvdSBwbGF5ZWQgaXQgZmluZS4gTm90aGluZyB0byB0YWxrIGFib3V0IGhlcmUsIGFjdGlvbiBpcyB0b3RhbGx5IHN0YW5kYXJkLllvdXIgamFtIG9uIHRoZSByaXZlciBpcyBhbHNvIHByZXR0eSBiYWQsIGFuZCB5b3VyIHRoaW5raW5nIGlzIG9mZiwgd2hpY2ggSSBkb24gYmxhbWUgeW91IGZvciBzaW5jZSBpdCBwcmV0dHkgY2xlYXIgZnJvbSB5b3VyIHBvc3QgeW91IGF0IGxlYXN0IHNvbWV3aGF0IG5ldyBzbyB5b3UgZG9uIGhhdmUgdGhlIGV4cGVyaWVuY2UgdG8gdGVsbCB5ZXQuIEkgZ2V0IHRoYXQgeW91IHdhbnQgdG8gdHJ5IHRvIGJsdWZmIG90aGVyIDhzIG9mZiB0aGUgaGFuZCwgYnV0IHlvdSB3cm9uZyBpbiB0aGlua2luZyB0aGF0IGZsdXNoIGRyYXdzIHdvdWxkbiBoYXZlIGdvdHRlbiB0aGlzIGZhciwgc28geW91ciBzaG92ZSBoZXJlIGlzIGtpbmQgb2Ygc3VpY2lkYWwuVGhlIHBvdCBvbiB0aGUgZmxvcCBpcyA2MDAwIGFuZCB2aWxsYWluIHN0aWxsIGhhcyBhbG1vc3QgMTAwayBiZWhpbmQuIApJIGp1c3QgZ290IGl0IGxhc3QgRmVicnVhcnkgYXQgVExDLiBJdCB3YXMgc3VwZXIgcXVpY2ssIHN1cGVyIGVhc3ksIGFuZCBldmVyeW9uZSB3YXMgdmVyeSBwcm9mZXNzaW9uYWwuIApMYWR5IEdhZ2EgYW5ub3VuY2VzIGRpYWdub3NpcyB3aXRoIGZpYnJvbXlhbGdpYQoiQXMgYSBzaW5nbGUgZmF0aGVyIHRvIGEgdGVlbmFnZSBzb24gSSBpbnRlcm5hbGx5IGFuZCBleHRlcm5hbGx5IGFsd2F5cyBzaG93IGFic29sdXRlIHJlc3BlY3QgZm9yIGhpcyBtb20uIApNYWlsb3JkZXJicmFpbiAgNjIgcG9pbnRzICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ28KTXkgaHVzYmFuZHMgZnJpZW5kIHNlbnQgbWUgYW4gZW1haWwgbGFzdCBuaWdodCBhc2tpbmcgaWYgaGUgY2FuIHN1cnByaXNlIG15IGh1c2JhbmQgd2l0aCBhIHBhbXBlcnMgYW5kIHBva2VyIHBhcnR5LiBUaGV5IHBsYXkgcG9rZXIgb25jZSBhIG1vbnRoIHdpdGggYSBidW5jaCBvZiBndXlzLiBBbmQgYXJlIGdvaW5nIHRvIHVzZSB0aGUgcGFtcGVycyBhcyBidXkgaW4gZm9yIHRoZSBuaWdodC4gRG8geW91IHRoaW5rIGl0IGlzIHJ1ZGUgdG8gYXNrIGZvciBhIHNpemUgMSBvciBhYm92ZSBkaWFwZXJzPyBPciBzaG91bGQgSSBqdXN0IHJldHVybiB0aGUgc21hbGxlciBzaXplcz8gTXkgaHVicyB3aWxsIHRoaW5rIGl0IGlzIGEgcmVndWxhciBwb2tlciBuaWdodCBidXQgd2hlbiBoZSBnb2VzIGl0IHdpbGwgYmUgZm9yIHBhbXBlcnMgKG9yIHdoYXRldmVyIGRpYXBlcnMgdGhlIGd1eXMgYnJpbmcpIHRoaXMgaXMgb3VyIDR0aCBiYWJ5IGFuZCB0aGV5IGtub3cgd2UgaGF2ZSBldmVyeXRoaW5nLiBIZSBhbHNvIGFza2VkIGZvciBteSBmYXRoZXIgYW5kIGJyb3RoZXJzIGluZm8gc28gaGUgY2FuIGV4dGVuZCBhbiBpbnZpdGUgdG8gdGhlbS4gTm90IHN1cmUgb2YgYWxsIHRoZSBkZXRhaWxzICBidXQgSSBhbSBzdXJlIHRoZXkgd2lsbCBmaWd1cmUgb3V0IGhvdyB0byB1c2UgdGhlbSBmb3IgYnV5IGluLiBJIGp1c3QgZG9uJ3Qgd2FudCB0byBzb3VuZCBydWRlIGFza2luZyBmb3IgbGFyZ2VyIHNpemVzLiBCdXQgd2UgYWxzbyBkb24ndCB3YW50IDMwIHBhY2thZ2VzIG9mIG5ld2Jvcm4gZGlhcGVycy4gTG9sLiBJIGFtIGFzc3VtaW5nIG1hbnkgb2YgdGhlbSB3aWxsIGhhdmUgdGhlIHdpdmVzIG9yIHNpZ25pZmljYW50IG90aGVycyBwaWNrIHVwIHRoZSBkaWFwZXJzIHNpbmNlIG1hbnkgb2YgdGhlIGd1eXMgaGF2ZSB0ZWVuYWdlIGtpZHMgKG15IGh1YnMgaXMgYW4gb2xkIGR1ZmZlcmFzIGFyZSBoaXMgZnJpZW5kcyBsb2wpCkVuIFNpY2lsZSwgbGUgY2hhbnZyZSBpbnRlcnZlbmFpdCBkYW5zIGNlcnRhaW5zIGNoYXJtZXMgZGUgbWFnaWUgcG9wdWxhaXJlIGFmaW4gZGUgcyBsYSBwZXJzb25uZSBhaW1lIChwYXIgbWFnaWUgc3ltcGF0aGlxdWUsIGJpZW4gc3IpLiAKQW1heWEgb3ducyBvbmxpbmUgYnVzaW5lc3NlcyBQb2tlclN0YXJzLCBGdWxsIFRpbHQsIEJldFN0YXJzLCBhbmQgU3RhckRyYWZ0LiBGdXJ0aGVybW9yZSwgdGhlIGNvbXBhbnkgaG9zdHMgYnJhbmRlZCBwb2tlciBldmVudHMgbGl2ZSB0aHJvdWdoIGNhc2lub3MgYW5kIGNvbXBldGl0aW9ucywgd2hpY2ggaW5jbHVkZSB0aGUgV29ybGQgQ2hhbXBpb25zaGlwIG9mIE9ubGluZSBQb2tlci4gCldlbGwgdGhhdCBzcG90IHdhcyBidWdnaW5nIG1lIG1vcmUgdGhhbiB1c3VhbCwgYW5kIHRpZXIgMSBtZWRpY2FsIHN1cHBvcnQgY291bGRuIGZpZ3VyZSBvdXQgd2h5LCBzbyB0aGUgd2FsayBpbiBjbGluaWMgc2VudCBtZSB0byBhIHNwZWNpYWxpc3QuIApZb3UgY2FuIGZpbmQgYW4gb25saW5lIHBva2VyIGdhbWUgYW55IHRpbWUgb2YgdGhlIGRheSBvciBuaWdodC4gClRoZSBvd25lciwgQm9iIEZvcmQsIHdhcyBub25lIG90aGVyIHRoYW4gdGhlIG1hbiB3aG8gaGFkIHdhc3RlZCBKZXNzZSBKYW1lcyBpbiAxODgyLiBBIGZldyB3ZWVrcyBhZnRlciBQb2tlciBBbGljZSB3ZW50IHRvIHdvcmsgZm9yIEZvcmQsIEVkd2FyZCBPJ0tlbGxleSBlbnRlcmVkIEZvcmQncyB0ZW50IHNhbG9vbiBvbiBKdW5lIDgsIDE4OTIsIHdpdGggYSAxMCBnYXVnZSBzaG90Z3VuLiBBY2NvcmRpbmcgdG8gd2l0bmVzc2VzLCBGb3JkJ3MgYmFjayB3YXMgdHVybmVkLiAKRXZlcnkgY29tcGFueSB3YW50cyB0byBkbyB0aGlzLCBvZiBjb3Vyc2UsIGJ1dCBub25lIGRvZXMgaXQgYXMgZWZmZWN0aXZlbHkgYXMgWnluZ2EuIEFueW9uZSB3aG8gdXNlcyBGYWNlYm9vayBoYXMgcmVjZWl2ZWQgYSBiYXJyYWdlIG9mIGludml0YXRpb25zIHRvIGhlbHAgYSBuZWlnaGJvciBvciByZWNlaXZlZCBnaWZ0cyBmcm9tIFp5bmdhIGdhbWVzLCBvZnRlbiBmcm9tIHRoZWlyIGRlYXJlc3QgZmFtaWx5IGFuZCBmcmllbmRzLiAKVGhlIGltcGFjdCBvZiBNb29yZSdzIExhdyBbdGhlIGlkZWEgdGhhdCBjb21wdXRpbmcgcG93ZXIgZG91YmxlcyBldmVyeSB0d28geWVhcnNdIGJlY29tZXMgbW9yZSBwcm9ub3VuY2VkLiAgTm90IG9ubHkgdGhlIGZhbW91cyBNb29yZSdzIExhdyBidXQgYWxsIHRoZSB2YXJpYXRpb25zIG9mIGl0LCBpbiBhbGwgdGhlIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgaW5kdXN0cnkuIApGb3IgdGhlIGxvbmcgaGF1bCBpZiB5b3UgZmVlbCBsaWtlIHRoZXJlIGFyZSBpc3N1ZXMgd2l0aCBiZWluZyBzb21lb25lIG91dHNpZGUgeW91ciBjbGFzcywgdGhlcmUgYXJlIHNvIG1hbnkgd2F5cyB0byBwcm90ZWN0IHlvdSBhZ2FpbnN0IGZpbmFuY2lhbCBydWluIG9mIGEgcGFydG5lciwgaW5jbHVkaW5nIHByZW51cHMuIFVzZXMgdGVybXMgbGlrZSAiYWxwaGEiIGFuZCAiYmV0YSIgaW4gZGVzY3JpYmluZyBodW1hbiByZWxhdGlvbnNoaXBzLiBUYWxrcyBhYm91dCBhdHRyYWN0aXZlbmVzcyBpbiB0ZXJtcyBvZiAic2V4dWFsIG1hcmtldCB2YWx1ZSIuIApNb3NzLCBJIGhhdmUgdG8gbGV0IHlvdSBnby4iIERhbmRvbG9zIHRoZW4gd2VudCB1cHN0YWlycyB0byBiZWQuLiAKSSBhbHNvIGxvb2tpbmcgdG8gZ2V0IGEgdHJpIGJpa2UuIApGb3IgZXhhbXBsZSwgaWYgdGhlcmUgYXJlIDMwMCBjaGlwcyBpbiB0aGUgcG90LCBhbmQgeW91ciBvcHBvbmVudCBiZXRzIDEwMCBjaGlwcywgdGhlbiB5b3UnbGwgYmUgcHV0dGluZyBpbiAyMCUgb2YgdGhlIHRvdGFsIHZhbHVlIG9mIHRoZSBwb3QgKDEwMCBjaGlwcyBpbnRvIGEgNTAwIGNoaXAgcG90KS4gSW1wbGllZCBvZGRzIHJlcHJlc2VudCB0aGUgbW9uZXkgdGhhdCB3aWxsIGdvIGludG8gdGhlIHBvdCBhZnRlciB5b3UgY2F0Y2ggeW91ciBkcmF3LiAKSSBhbHNvIHN0YXJ0ZWQgd29ya2luZyBvdXQgd2l0aCB3ZWlnaHRzIHRocmVlIHRpbWVzIGEgd2VlayBhcm91bmQgdGhlIHNhbWUgdGltZSwgYW5kIHJlY2VudGx5IHVwcGVkIGl0IHRvIGZvdXIgdGltZXMgYSB3ZWVrLiBNeSBjYXJkaW8gY29uc2lzdHMgb2YgZ29pbmcgb24gMzBtaW4gNjBtaW4gd2Fsa3MgYXQgY291cGxlIG9mIHRpbWVzIGEgd2Vlay4uIApCdXQgdGhlIGJ1cmthIGlzIHNpbmdsZWQgb3V0IGFzIHBhcnRpY3VsYXJseSBvcHByZXNzaXZlIHRvIHdvbWVuIGJlY2F1c2UgcGFydCBvZiB0aGUganVzdGlmaWNhdGlvbiBmb3IgdGhlIHdhciBpbiBBZmdoYW5pc3RhbiB3YXMgdGhlIGxpYmVyYXRpb24gb2Ygd29tZW4uIFRoaXMgbGllIHNvbGQgdG8gdXMgYnkgdGhlIEJ1c2ggYWRtaW5pc3RyYXRpb24gYW5kIGFjdHVhbGx5IGJlbGlldmVkIGJ5IHNvbWUgbWFqb3IgZmVtaW5pc3Qgb3JnYW5pemF0aW9ucyBzaG91bGQgYmUgc2VlbiBmb3Igd2hhdCBpdCBpczogYSByYWNpc3QganVzdGlmaWNhdGlvbiBmb3IgaW52YXNpb24uIApTaGUgd2VudCBvbiB0byBzdWNjZXNzZnVsIGNhcmVlcnMgdGVhY2hpbmcgYXV0aXN0aWMgY2hpbGRyZW4gYW5kIG9wZXJhdGluZyByZXRpcmVtZW50IGhvbWVzLkJvcmRlbiBzdG9yeSBpcyB2aXZpZGx5LCBoZWFydCB3cmVuY2hpbmdseSByZWNvdW50ZWQgaW4gaGVyIGJvb2sgTmluZSBUZWFycy4gClRvcCBzdGFrZSBsaW1pdCB0YWJsZXMgYXJlbid0IHRoZSBwbGFjZSB0byBlYXJuIG1vbmV5LiBJdCBpcyByYXRoZXIgYSBwbGFjZSB3aGVyZSB5b3UgY2FuIGJsb3cgbGFyZ2UgYW1vdW50cyBvZiBtb25leS4gU2V0dGluZyB1cCBhIGJldHRpbmcgbGltaXQgZXZlbiBpZiB5b3UgYXJlIHBsYXlpbmcgd2l0aCAkMSAyIG9yICQyIDQgYmxpbmRzIGFuZCBzdGlja2luZyB0byB5b3VyIGxpbWl0IGlzIHRoZSBiZXN0IHdheSB0byBwbGF5LiAKSG93ZXZlciwgSSBkbyByZW1lbWJlciB0aGF0IGEgbG90IG9mIHNjaG9vbHMgaW4gdGhlIFVTIHdhdGNoZWQgdGhlIGJyb2FkY2FzdCBsaXZlIGR1ZSB0byB0aGUgcHJlc2VuY2Ugb2YgQ2hyaXN0YSBNY0F1bGlmZmUgb24gdGhlIHNodXR0bGUgYW5kIGhlciBhZmZpbGlhdGlvbiB3aXRoIE5BU0EgVGVhY2hlciBpbiBTcGFjZSBQcm9qZWN0LiAKVmlzaXRpbmcgb3IgbmV3IHRvIEtvcmVhIGFuZCBsb29raW5nIGZvciBzb21lIHBlb3BsZSB0byBoYW5nIG91dCB3aXRoIG9yIGFyZSB5b3UganVzdCBsb29raW5nIHRvIG1lZXQgc29tZSBvZiB5b3VyIGZlbGxvdyByZWRkaXRvcnM/IExlYXZlIGEgcmVwbHkgdG8gdGhpcyBjb21tZW50IHdpdGggYSBsaXR0bGUgaW5mbyBhYm91dCB5b3Vyc2VsZiwgeW91ciBpbnRlcmVzdHMsIGFuZCB0aGUgZ2VuZXJhbCBhcmVhIHlvdSBhcmUgaW4uIApJIGFtIG5vdCBpbiBsZWFkZXJzaGlwLCBidXQgd291bGQgbG92ZSB0byBzZWUgYSAiZGV2ZWxvcG1lbnQgcGxhbiIgb2Ygc29ydHMga2luZCBvZiBsaWtlIHNwZW5kIDEwIG1pbnV0ZXMgbWVldGluZyB3aXRoIHRoZSBza2F0ZXJzIGVhY2ggbW9udGgsIHRlbGwgdGhlbSBzb21lIGdvb2QgdGhpbmdzIHRoZXkgZGlkLCBnaXZlIGVtIHNvbWUgc3R1ZmYgdG8gd29yayBvbiwgaGVscCB0aGVtIHNldCBzb21lIGdvYWxzIGFuZCBtYWtlIGEgcGxhbi4gV2UgZ2VuZXJhbGx5IGRvIGZlZWRiYWNrIHRocm91Z2ggZW1haWwgYW5kIEkgcGVyc29uYWxseSB0aGluayB0aGlzIHByZXZlbnRzIGEgZHluYW1pYyBjb252ZXJzYXRpb24gYWxzbyBoYXZpbmcgYmVlbiBvbiB0aGUgcmVjZWl2aW5nIGVuZCwgZ2V0dGluZyBmZWVkYmFjayB0aGF0IGRvZXNuIG1ha2Ugc2Vuc2Ugb3IgaXNuIGhlbHBmdWwgYW5kIG5vdCBrbm93aW5nIHdobyBvbiB0aGUgbGVhZGVyc2hpcCB0ZWFtIHRvIGRpcmVjdCBxdWVzdGlvbnMgdG8gaXMga2luZCBvZiBzdHJlc3NmdWwuIEhvd2V2ZXIsIEkgbm90IHN1cmUgaWYgb3RoZXJzIGRvIHRoaXMsIGFuZCBJIG5vdCBvbiBsZWFkZXJzaGlwIHNvIHRoaXMgaXMgbm90IG15IGRlY2lzaW9uLldlIGRvbiBoYXZlIGFueW9uZSBjbG9zZSBlbm91Z2ggdG8gc2V0IHVwIGEgc2NyaW1tYWdlIHdpdGgsIGJ1dCB3ZSBkbyBzY3JpbW1hZ2Ugb3VyIEIgdGVhbSBvbiBvY2Nhc2lvbnMgdG8gYXQgbGVhc3QgcnVuIGxpbmVzLiAKSW4gdGhlIGh1Z2UgcGFuaWMgdGhhdCBlbnN1ZWQgbmF0aW9ud2lkZSBhZnRlciB0aGVzZSBpbnRlcmVzdGluZyBlbnZlbG9wZXMgZHVtcGVkIHRoZWlyIHRveGljIHBvd2RlcnMsIHRoZXJlIHdhcyBubyByZWxpYWJsZSBhbmQgcmF0aW9uYWwgbmV3cyBjb3ZlcmFnZSBvbiB0aGUgb25nb2luZyAob3IsIHBlcmhhcHMsIG5vbiBvbmdvaW5nKSBpbnZlc3RpZ2F0aW9uIG9mIHRoZSBhbnRocmF4IG1haWxpbmdzLiAKVG8gYWNjZXNzIHRoZSBzZXR0bGVtZW50IG9mZmVyIGZvciB0aGlzIGNsYWltLCB5b3UgaGF2ZSB1bnRpbDIwMTkgMDEgMjkgdG8gdmlzaXQgdGhlIHByb3ZpZGVkIFVSTCBhbmQgY29tcGxldGUgdGhlIHNldHRsZW1lbnQgaW5zdHJ1Y3Rpb25zLiBJZiB5b3UgcHJlZmVyLCB5b3UgY2FuIHNpbXBseSBjb3B5IGFuZCBwYXN0ZSBvciB0eXBlIHRoZSBVUkwgZGlyZWN0bHkgaW50byB0aGUgSW50ZXJuZXQgYnJvd3NlciBvZiB5b3VyIGNob2ljZS4gSGVyZSwgeW91IHdpbGwgZ2FpbiBjb25maWRlbnRpYWwgYW5kIHByaXZhdGUgYWNjZXNzIHRvIGFsbCBpbnN0cnVjdGlvbnMgaG93IHRvIGNvbXBsZXRlIHlvdXIgc2V0dGxlbWVudCBwYXltZW50IGFuZCByZWNlaXZlIHlvdXIgZXhlY3V0ZWQgUmVsZWFzZSBvZiBMaWFiaWxpdHkuIFBsZWFzZSBub3RlIHRoYXQgeW91ciBVbmlxdWUgTm90aWNlIElEIGZvcm1zIHRoZSBVUkwgYW5kIGNvcnJlc3BvbmRzIHdpdGggdGhlIFVuaXF1ZSBOb3RpY2UgSUQgZm91bmQgYXQgdGhlIG91dHNldCBvZiB0aGlzIG5vdGlmaWNhdGlvbi4KVW5kZXIgaWRlYWwgY2lyY3Vtc3RhbmNlcywgMSBvZiAxNSBkaWZmZXJlbnQgb3V0cyBjYW4gY29tcGxldGUgYSBzdHJvbmcgaGFuZC4gVG8gdGFsbHkgeW91ciBvdXRzLCB5b3UnbGwgbmVlZCB0byBjYXJlZnVsbHkgYXNzZXNzIHlvdXIgaGFuZCBhZnRlciB0aGUgZmxvcCBhbmQgdGhlbiBkZWNpZGUgd2hhdCBoYW5kIHlvdSBjYW4gYXR0YWluLiBGb3IgZXhhbXBsZTouIApBbWF6b24gd2FudHMgdG8gdXNlIGRhdGEgYXMgYSBsdXJlIGZvciBiaWcgYWR2ZXJ0aXNpbmcgc3BlbmRlcnMgdG8gY29tbWl0IHRvIGludmVzdGluZyBpbiBpdHMgcGxhdGZvcm0sIHdoZXJlIGFkdmVydGlzaW5nIGlzIHRoZSBmYXN0ZXN0IGdyb3dpbmcgc2VnbWVudCBvZiB0aGUgYnVzaW5lc3MuIHRoaXMgeWVhciwgbWFraW5nIGl0IHRoZSB0aGlyZCBsYXJnZXN0IGRpZ2l0YWwgYWR2ZXJ0aXNpbmcgcGxhdGZvcm0gYmVoaW5kIEZhY2Vib29rIGFuZCBHb29nbGUuCkluIHJlY2VudCB5ZWFycyB3ZSBoYXZlIGJlZW4gcmVwZWF0ZWRseSBiZXRyYXllZCBieSBvdXIgZWxlY3RlZCBsZWFkZXJzIHdobyBoYXZlIGJlZW4gc2VydmluZyB0aGVpciBvd24gbmFzdHkgbGl0dGxlIGFnZW5kYXMgcmF0aGVyIHRoYW4gc2VydmluZyB0aGUgY29tbW9uIGdvb2QuIApUaGUgd29yZCBteW9mYXNjaWEgaXMgZGVyaXZlZCBmcm9tIHRoZSBMYXRpbiB3b3JkICJteW8sIiBtZWFuaW5nIG11c2NsZSwgYW5kICJmYXNjaWEsIiBmb3IgYmFuZC4gClRoZXkgdXNlIHRvIGhhdmUgZXF1aXBtZW50IHRvIHByb2plY3Qgc2xpZGVzL21vdmllcy4gQnV0IGFmdGVyIHRoZSBhdWRpdG9yaXVtIHVwZGF0ZSwgaXQgd2FzbiB1c2VmdWwgYW55bW9yZSBzbyB0aGV5IGdhdmUgaXQgdG8gdGhlIEJveXMgU2NvdXRzIHRvIHN0b3JlIHRoZWlyIHN0dWZmIGFuZCB0aGV5IGNhbiBzdGlsbCBzaG93IHNsaWRlIG1vdmllcyAoeW91IGtub3cgdGhlIG9uZXMgdGhhdCBnbyBkaW5nIHdoZW4geW91IG1hbnVhbGx5IG1ha2UgaXQgZ28gdG8gdGhlIG5leHQgc2xpZGUpLiAKR00gaGFzIGJlZW4gYSBwYXNzaXZlIG9ic2VydmVyLCBjbG9zaW5nIG9yIHBhcnRpYWxseSBzaHV0dGluZyBkb3duIDMwIGFzc2VtYmx5IGFuZCBwYXJ0cyBwbGFudHMgYXMgdGhlIHN0cmlrZSBpbnRlcnJ1cHRzIHRoZSBzdXBwbHkgb2YgYXhsZXMgYW5kIG90aGVyIHBhcnRzLiAKVGhleSB3aWxsIGJlIHRoZSBzdWJzIGJvdW5kYXJpZXMuIApDRU8gc3BlYWtzIG9mICdhIHNlbnN1YWwgZXhwZXJpZW5jZScKSWYgQ2l2aWwgTGF3IGlzIGp1c3QgYSBmb3JtIG9mIFJvbWFuL1BhcGFsIENvbW1lcmNpYWwgTGF3LCB0aGVuIHRoZSBMYXcgaXMgSXNzdWVkIGluIHRoZSBTb3ZlcmVpZ24gTmFtZSAoaWUuIFRoZSBQb3BlKS4gSWYgaXQgaXNzdWVkIGluIEhpcyBOYW1lLCB0aGVuIGhlIHdvdWxkIGhhdmUgdG8gYWdyZWUgdG8gZ2l2ZSB1cCBTb3ZlcmVpZ250eSAod2hpY2ggbm8gU292ZXJlaWduIHdvdWxkLCBvYnZpb3VzbHkpLCB0byBiZSBjaGFyZ2VkIHVuZGVyIGl0Li4gCkhvd2V2ZXIsIEkgZG9uIGV2ZW4gd2FudCB0byBiZWdpbiBjb3VudGluZyBibHVmZnMgaWYgSWtlIGlzIGNhbGxpbmcgZmxvcCBhcyB3aWRlIGFzIFE5byB3aXRob3V0IGEgQkRGRC4gTWF5YmUgaXQgb3B0aW1hbCBkZWZlbnNlICAgbm90IHN1cmUsIGJ1dCBpdCBkZWZpbml0ZWx5IHNlZW1zIHRvbyB3aWRlLiBQZXJoYXBzIE1hdGVvcyB3YXMgc2F2dnkgZW5vdWdoIHRvIHBpY2sgdXAgb24gdGhlIGZhY3QgdGhhdCBJa2Ugd291bGQgYmUgY2FsbGluZyBmbG9wIGxpZ2h0IGluIHBvc2l0aW9uIGJlY2F1c2UgaGUgd2FzIGNoZWNrIHJhaXNpbmcgc3VwZXIgd2lkZS4gCk9wZW5pbmdzIGFyZSBwYXJ0aWN1bGFyIG1vdmUgb3JkZXJzIGluIHN1cHBvcnQgb2Ygc29tZSBjb25jcmV0ZSBpZGVhLiAKSW4gb3RoZXIgd29yZHMgYnkgcXVpdHRpbmcgYXQgdGhlIHJpZ2h0IHRpbWUgb3Igbm90IHF1aXR0aW5nIGF0IHRoZSByaWdodCB0aW1lIGJ1dCB5b3UgY2Fubm90IGRvIHRoYXQuIE1vbmV5IG1hbmFnZW1lbnQgaXMgYSBjb21wbGV0ZWx5IHNwdXJpb3VzIGlkZWEgYXMgZmFyIGFzIHdoZW4geW91IHF1aXQgb3Igd2hlbiB5b3UgZG9uJ3QgcXVpdC4gClRoZSB2aWRlbyBJIGxpbmtlZCB0YWxrcyBhYm91dCBob3cgU3dpdHplcmxhbmQgZGlkIG1vcmUgdGhhbiBqdXN0IGRlY3JpbWluYWxpemUgdGhleSBnYXZlIGF3YXkgYXMgbXVjaCBkcnVncyBhcyBwZW9wbGUgd2FudGVkIGJ1dCB0aGV5IGhhZCB0byBkbyB0aGVtIHdpdGhpbiBzYWZlIGNsaW5pY3MgdGhhdCBhbHNvIGZvY3VzZWQgb24gcmVoYWJpbGl0YXRpb24uIApHZW5lcmljdXNlcm5hbWU0MTk3ICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpGb3Jlc3QgSGlsbHMsIGluIGNhc2UgeW91IGRpZG4ga25vdywgaXMgYW4gdXBwZXIgbWlkZGxlIGNsYXNzIG5laWdoYm9yaG9vZCBpbiBRdWVlbnMgd2hlcmUgdGhlIGhvbWVzIGFyZSBzcHJhd2xpbmcsIHRoZSBzY2hvb2wgZGlzdHJpY3QgaXMgQSssIGFuZCB0aGUgcGVvcGxlIGFyZSBtb3N0bHkgd2hpdGUgd2l0aCBhIGhlYXZ5IHNwcmlua2xlIG9mIEFzaWFuLi4gCkhldCB6b25uZXRqZSBzY2hlZW4gYWwgdnJvbGlqayBkdXMgd2Uga29uZGVuIHplbGZzIGFsIGJ1aXRlbiB6aXR0ZW4uIE9udGJpanRlbiBkZWRlbiB3ZSB0cm91d2VucyBpbiBoZXR6ZWxmZGUgd2VncmVzdGF1cmFudCBhbHMgYmlqIG9uemUgU2xvdmVuaSByZWlzLCBlbiB0b2V2YWxsaWcgd2FzIHZhbiBvbnplIHZvbGdlbmRlIHN0b3BzIGJpaiBkaWUgbW9vaWUgd2VncGFya2luZyB2b2wgcm96ZSBibG9lbWVuIGRpZSB3ZSBvb2sgYWwga2VuZGVuIHZhbiBlZW4gdm9yaWdlIHJlaXMuIApJZiB0aGUgY2xpZW50IHVzZXMgYW4gaW5zdWxpbiBwdW1wLCBkbyBub3QgZ2V0IG1hc3NhZ2UgbHVicmljYW50IG9uIHRoZSBzZW5zb3IsIHRyYW5zbWl0dGVyLCBwdW1wLCBvciBpdHMgdHViaW5nLiBGb3IgYWRkZWQgY29tZm9ydCwgb2ZmZXIgeW91ciBjbGllbnQgYSBzb2Z0IGN1c2hpb24gdG8gcGxhY2Ugb3ZlciB0aGUgcHVtcCB3aGlsZSBseWluZyBwcm9uZS4KUG9rZXIgaXMgYSBsb3QgbW9yZSBjb21wbGljYXRlZCB0aGFuIEkgaGFkIGV2ZXIgaW1hZ2luZWQKWW91IGZpcnN0IHBsYWNlIGFuIGFudGUgYmV0IGFuZCBpZiB5b3UgbGlrZSB5b3VyIGZpcnN0IHRocmVlIGNhcmRzIChnZW5lcmFsbHkgaWYgeW91IGhvbGQgUSwgMTAgb3IgYmV0dGVyKSwgeW91IHBsYWNlIGEgc2Vjb25kIHBsYXkgYmV0IGJlbG93IHRoZSBhbnRlIGFuZCB3aW4gaWYgeW91IGJlYXQgdGhlIGRlYWxlci4gCkkgcHJvYmFibHkgd29uIGdvIGJhY2sgdG8gZ3JpbmRpbmcgaXNrIGJlY2F1c2UgSSBjYW4gc3RhbmQgaW5jdXJzaW9uIGNvbW1zLiAKUG9rZXIgaXMgYWxsIGFib3V0IHRoZSBsb25nIHRlcm0uIFN0YXJ0IHBsYW5uaW5nIHRvZGF5IGZvciB3aGVyZSB5b3Ugd2FudCB0byBiZSBhIHllYXIgZnJvbSBub3cuIFBsYXlpbmcgMS8yIGZvciBhbm90aGVyIDVrIGhvdXJzIG9yIHBsYXlpbmcgc2NhcmVkIGF0IDIvNSBpc24gZ29pbmcgdG8gbWFrZSB5b3UgYmV0dGVyLiAKQSBmZXcga2V5IGZlYXR1cmVzIG9mIHRoZSBDb250aWdvIEFyaWEgU3RhaW5sZXNzIFN0ZWVsIE11ZyAgIDEgTXVnIExpcXVpZHMgaG90IGZvciBzZXZlbiBob3VycyBhbmQgY29sZCBmb3IgMjAgaG91cnMgRGlzaHdhc2hlciBzYWZlIG11ZyBCUEEgZnJlZSBFYXN5IHdvbid0IGJlIGFibGUgdG8gZmluZCBhIGpvYiBhZnRlciBncmFkdWF0aW5nIGFueXdheS4gQWlycG9ydCBzZWN1cml0eSB3aWxsIGp1c3QgbWFrZSB5b3UgdW5sb2NrIHRoZW0gd2hlbiB5b3UgZ2V0IHRoZXJlLCBhbmQgaWYgdGhleSBhcmUgbm90IHVubG9ja2VkIHRvIER1bWFndWV0ZSwgYXMgaXQgaXMgbG9jYXRlZCByaWdodCBpbiBmcm9udCBvZiB0aGUgc2VhLiBDb250aW5nZW50IG51cnNlcywgd29ya2luZyBhcyBuZWVkZWQsIGFyZSBwYXJ0aWFsbHkgdXRpbGl0eSBjb21wYW55J3Mgd2Vic2l0ZTsgcGFydGljdWxhcmx5IHlvdXIgZ2FzLCBlbGVjdHJpYywgYW5kIHBob25lIGNvbXBhbmllcy4gXSBNYW55IHNlbmlvcnMgbWF5IHRoaW5rIGEgMTAlIGRpc2NvdW50IGlzIG5vdCB3b3J0aCBhbmQgdGhlIGxhcmdlIGNhbm9weSBpcyBncmVhdCBvbiB0aG9zZSBsb25nIHN1bm55IGRheXMgb3V0IGFuZCBhYm91dC4gVHJhdmVsIEFzc2lnbm1lbnQgTGVuZ3RocyBBc3NpZ25tZW50cyBjYW4gcnVuIGFueXdoZXJlIGZyb20gZm91ciB3ZWVrcyB0byBvbmUgeWVhciBvbiBmZXZlciwgc2hha2luZyBjaGlsbHMsIHN0b21hY2ggY3JhbXBzLCB2b21pdGluZyBhbmQgbmF1c2VhLiBUaXBzIFdhcm5pbmdzIE9uIEVhc3RlciwgaXQgaXMgYSB0cmFkaXRpb24gZm9yIGJveXMgYmUgaGVscGZ1bCB0byByZWNlaXZlIGEgY2VydGlmaWNhdGlvbiB0byB0ZWFjaCBFU0wgYmVmb3JlaGFuZC4gVGhpcyBudXJzZSB0cmF2ZWxzIGFyb3VuZCB0aGUgY291bnRyeSwgbW9zdCBvZnRlbiBpbiBjb250cmFjdHMgb2YgMTMgd2Vla3Mgb25lIHdhcyBsaWtlIGEgY2hpbGRob29kIGRyZWFtIHRoYXQgSSBuZXZlciB0cmllZCB0byBmb2xsb3cuCk5vOiBsaWtlIGFsbCBJbnRlcm5ldCBzdGFuZGFyZHMsIHRoZSBXZWIgd2FzIHN1Y2Nlc3NmdWwgb25seSBiZWNhdXNlIGl0IHdhcyBvcGVuIGFuZCBmcmVlLiAKU2lyIERhdmlkIExlYW4sIExpZmUgYW5kIFdvcmtzIGNoYXJ0cyB0aGUgY2VsZWJyYXRlZCBkaXJlY3RvcidzIGNhcmVlciBhbmQgZmVhdHVyZXMgcmFyZSBpbWFnZXMgZnJvbSBCcmllZgpUaGUgUGFraXN0YW4gb2YgdG9kYXkgaXMgbm90IGNhc3QgaW4gdGhlIGltYWdlIG9mIEppbm5haCBvciBJcWJhbC4gCkhlIHdhcyBqdXN0IGJlaW5nIGhlbHBmdWwgYW5kIHByb2JhYmx5IHdhcyBqdXN0IHdhdGNoaW5nIG15IGV4Y2hhbmdlIHdpdGggdGhlIGZsb29yIGJlY2F1c2UgaGUgd2FzIGN1cmlvdXMgYWJvdXQgaG93IHRoZSBwcm9tb3Rpb24gaXMgcGFpZCBvdXQgSSBndWVzcy4gSSd2ZSBzZWVuIG1hbnkgcmVncyBhdCB0aGUgaGlnaGVyIGxpbWl0cyBqdXN0IGNhcnJ5IHRoZWlyIGZsYWdzIHRvIGFuZCBmcm9tIHRoZSBjYXNpbm8gYnV0IHRoZXkgYWx3YXlzIHZhbGV0IGFzIGEgaGFiaXQgYW5kIHNlZW1pbmdseSBhIHNlY3VyaXR5IG1lYXN1cmUuIApTaGUgbWF5IGd1aWx0IHlvdS4gU2hlIG1heSB0aHJlYXRlbiB5b3UuIFNoZSBtYXkgc2F5IHRoaW5ncyB0byB1bmRlcmN1dCB5b3VyIGNvbmZpZGVuY2UgYW5kIHRyeSB0byBtYWtlIHlvdSB0aGluayB0aGF0IHNoZSdzIHRoZSBiZXN0IHlvdSdsbCBiZSBhYmxlIHRvIGdldC4gCllvdSBjYW4gZG8gdGhpcyBhcyBtYW55IHRpbWVzIGFzIG5lY2Vzc2FyeS4gT25jZSB5b3Ugd2luIG9uZSBiZXQsIHlvdSB3aWxsIGJlIGJhY2sgdG8gZXZlbi4gVGhlb3JldGljYWxseSwgeW91IG5ldmVyIGxvc2UuIApUcmFuc2xhdGlvbiBpdHNlbGYgaXMgYSB0cmlja2x5IHByb2Nlc3MuIE1hbnkgd29yZHMgaGF2ZSBtdWx0aXBsZSBtZWFuaW5ncyBhbmQgY2hhbmdlIHdoYXQgaXQgbWVhbnMgaW4gb3VyIGxpZmUuCkMgYXVzc2kgdW4gcmVtZGUsIGJpZW4gc3IuIERpb3Njb3JpZGUgbCBzb3VzIHNlcyBkZXV4IGZvcm1lcywgZnJhY2hlIGV0IHNjaGUuIExlcyBmcnVpdHMgZnJhaXMsIGFpZ3JlcyBldCBhc3RyaW5nZW50cywgc2UgZGVzdGluZW50IHBsdXR0ICBlbmRpZ3VlciBsZXMgZmx1eCBkZSB2ZW50cmUgZXQgY2V1eCBtZW5zdHJ1ZWxzLCBhaW5zaSBxdWUgbGVzIGhtb3Jyb2RlcywgbWFpcywgcHJ2aWVudCBEaW9zY29yaWRlLCBpbHMgY2F1c2VudCB1bmUgZG91bGV1ciBkZSB0dGUgZXQgZW5pdnJlbnQgcXVhbmQgb24gZW4gbWFuZ2UgZW4gdHJvcCBncmFuZGUgYWJvbmRhbmNlICg3KS4gClRoaXMgd2FzIHRoZSB1bnJlYWwgcGFydC4gCkRpZCBJIHNlZSB3aGF0IEkgc2F3PyBEaWRuJ3QgcmVhbGx5IGtub3csIHRoYXQgbWF5YmUgbWludXRlIHdhcyBlbm91Z2ggZm9yIG1lIHRvIGRvdWJ0IG15IG93biBleWVzLiAKQSBzbWFsbCBzdHVkeSBwdWJsaXNoZWQgaW4gYSAyMDEzIGlzc3VlIG9mIEpvdXJuYWwgb2YgQnJlYXRoIFJlc2VhcmNoIGludmVzdGlnYXRlZCB3aGV0aGVyIGRydWcgaW50b3hpY2F0aW9uIGNvdWxkIGJlIGlkZW50aWZpZWQgdGhyb3VnaCBicmVhdGguIFN3ZWRpc2ggcmVzZWFyY2hlcnMgY29uZHVjdGVkIHRlc3RzIGxvb2tpbmcgZm9yIHN1YnN0YW5jZXMgbGlrZSBtYXJpanVhbmEsIGNvY2FpbmUsIG1ldGhhbXBoZXRhbWluZSwgbWV0aGFkb25lIGFuZCBtb3JwaGluZS4gVGhleSB1c2VkIGEgbWV0aG9kIG9mIGNoZW1pY2FsIGFuYWx5c2lzIGNhbGxlZCBsaXF1aWQgY2hyb21hdG9ncmFwaHkgbWFzcyBzcGVjdHJvbWV0cnkgZm9yIHRoZSBicmVhdGggYW5kIGJsb29kIHBsYXNtYSB0ZXN0cy4gClNvIGxldHMgcHJldGVuZCB3ZXJlIGhhY2tpbmcgaGVhbHRoLiAKVGhleSdsbCByZWNvcmQgc29tZW9uZSdzIHdpbiBhcyBhIGphY2twb3QsIGJ1dCBpdCdzIG9uZSBtYWNoaW5lIG91dCBvZiAzMC4gVGhleSBkb24ndCBnaXZlIGEgcyAuIFRoZSByb3J0IGlzIHRoZXkgdGFrZSA5MCBwZXIgY2VudC4iLiAKQ3JveG9uIHNhaWQuLiAKQW5kIHdoYXQgbWFrZXMgaXQgbW9yZSByZW1hcmthYmxlIGlzIHRoZXkgd29uIHRoZWlyICQ2LDAwMCBidXkgaW4gYW5kIHRoZSB0cmlwIHRvIEFydWJhIGJ5IHBsYXlpbmcgYSAkMjcgc2F0ZWxsaXRlIHRvdXJuYW1lbnQgYXQgdGhlIG9ubGluZSBwb2tlciByb29tLCBVbHRpbWF0ZSBCZXQuIE5laXRoZXIgb2YgdGhlc2UgbWVuIGFyZSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVycyBidXQgYXQgdGhlIGVuZCBvZiB0aGUgdG91cm5hbWVudCBWaWMgRmV5IGZpbmlzaGVkIGluIDZ0aCBwbGFjZSBhbmQgd29uICQxMDUsMDAwIGFuZCBFcmljayBCcmVuZXMgZmluaXNoZWQgaW4gZmlyc3QgYW5kIHdlbnQgaG9tZSB0byBDb3N0YSBSaWNhICQxLDQxNywwMDAgcmljaGVyLiAKRWRpdDoyIHNvcnJ5IGV2ZXJ5b25lLCBJIHBvc3RlZCB0aGlzIHRoZW4gd2VudCB0byBiZWQuIENvdXBsZSBjb21tb24gcXVlc3Rpb25zLiBObyBJIGFtIG5vdCBmcm9tIEFsYWJhbWEsIG9yIHRoZSBzb3V0aCBhdCBhbGwuIFRoZSBmaW5nZXJzIHdvdWxkJ3ZlIHdvcmtlZCBhbmQgYmVudCBhbmQgZnVuY3Rpb25lZCBub3JtYWxseSwgdGhleSBoYWQgYm9uZXMsIG11c2NsZXMgdGVuZG9ucyAsIGJsb29kIHZlc3NlbHMuCldhZ2Fza3kgaGFzIGJlZW4gc2hhcmluZyBoZXIgam91cm5leSB0byBsaXZpbmcgbWVhbmluZ2Z1bGx5IGFuZCBmcnVnYWxseSBvbiBoZXIgYmxvZywgQmxpc3NmdWwgYW5kIERvbWVzdGljLCBzaW5jZSAyMDA5LgpQb2tlciBpcyBhIGhvYmJ5LiBZb3UgcGxheSBwb2tlci4gRG9pbmcgdHJpY2tzIHdpdGggYSB5byB5byBpcyBhIGhvYmJ5LiBNYXliZSBzb21lb25lIHRlbGxzIHlvdSAieW91IGFyZSBzbyBhbWF6aW5nIGF0IHlvIHlvIHRyaWNrcywgcmVhbGx5IGluY3JlZGlibGUiLCB0aGVuIHlvdSBnbyB0byBhIHRyaWNrIGNvbXBldGl0aW9uIGFuZCB3aW4gYW5kIGp1c3Qga2VlcCB3aW5uaW5nIHVudGlsIHlvdSBjYW4gcmVhbGx5IGp1c3RpZnkgZ29pbmcgdG8gd29yayBhcyBpdCB3aWxsIGhhdmUgdG9vIGhpZ2ggYW4gb3Bwb3J0dW5pdHkgY29zdCB0byBtYWtlIHNlbnNlLiBTaW5jZSB0aGUgeW8geW8gbW9uZXkgaXMgbGVzcyBzdGFibGUvc2VjdXJlLCB5b3Ugd2FudCB0byBmYWN0b3IgdGhhdCBpbiBhbmQgY3JlYXRlIGEgY29tcGFyYWJsZSByaXNrIGFkanVzdGVkIGluY29tZSwgc28gbWluaW11bSAyIDN4IGN1cnJlbnQgaW5jb21lLgpEcmlua2luZyByZWd1bGFyIG1pbGsgd2lsbCBub3Qgb25seSBnaXZlIGtpdHRlbnMgZGlhcnJoZWEsIGJ1dCB3aWxsIGFsc28gY2F1c2UgdGhlbSB0byBzbG93bHkgc3RhcnZlIHRvIGRlYXRoIGlmIHRoZWlyIGRpZXQgaXNuJ3QgcHJvcGVybHkgc3VwcGxlbWVudGVkIFtzb3VyY2U6IEtpdHRlbiBSZXNjdWVdLiBUaGUgcmF0aW8gb2YgY2FzZWlucyBhbmQgd2hleSBpbiBjb3cncyBtaWxrIGlzIG5vd2hlcmUgbmVhciBzdWZmaWNpZW50IHRvIHN1cHBvcnQgYSBncm93aW5nIGtpdHRlbiBbc291cmNlOiBGcmllc10uIElmIHlvdSdyZSBhdHRlbXB0aW5nIHRvIG51cnNlIGtpdHRlbnMgd2l0aG91dCB0aGUgaGVscCBvZiBtb20sIHBpY2sgdXAgc3BlY2lhbCBjYXQncyBtaWxrIGF0IHRoZSBwZXQgc3RvcmUuIApNYXNzIHBoaWxhbnRocm9weSB0b29rIG9mZiBpbiBhIHdpZGUgdmFyaWV0eSBvZiBmaWVsZHMuIENvbW11bml0eSBjaGVzdHMgc3ByYW5nIHVwIGluIGV2ZXJ5IG1ham9yIGNpdHksIGFuZCB0aGUgUmVkIENyb3NzIHRvb2sgdm9sdW50ZWVyaXNtIGFuZCBncmFzcyByb290cyBwaGlsYW50aHJvcHkgdG8gbmV3IGxldmVscyB0byBzdXBwb3J0IHRoZSB0cm9vcHMgYWJyb2FkLiBCeSB0aGUgMTkzMHMsIHdoZW4gUHJlc2lkZW50IEZyYW5rbGluIEQuIFJvb3NldmVsdCBpbnRyb2R1Y2VkIHRoZSBNYXJjaCBvZiBEaW1lcywgdm9sdW50ZWVycyBrbmV3IGhvdyB0byBjYW52YXNzIGVudGlyZSBwb3B1bGF0aW9ucyBpbiBsYXJnZSBhbmQgc21hbGwgY2l0aWVzIGFsaWtlLiBUb2RheSwgaXQgaXMgcG9zc2libGUgZm9yIHByYWN0aWNhbGx5IGV2ZXJ5IGNpdGl6ZW4gd2lsbGluZyB0byBzcGVuZCBhIGxpdHRsZSBtb25leSB0byByZXNwb25kIGRpcmVjdGx5IGFuZCBhbG1vc3QgaW5zdGFudGx5IHRvIHdvcmxkIGVtZXJnZW5jaWVzIHNpbXBseSBieSBzaXR0aW5nIGRvd24gYXQgYSBjb21wdXRlciBvciBwaWNraW5nIHVwIGEgY2VsbHBob25lLgpGb3IgYmV0dGVyIG9yIHdvcnNlLCB0cmFkaXRpb25hbCBwcm9iYWJpbGl0eSBwcm9ibGVtcyB0ZW5kIHRvIGludm9sdmUgZ2FtYmxpbmcgcHJvYmxlbXMsIHN1Y2ggYXMgZGllIGdhbWVzIGFuZCBjYXJkIGdhbWVzLCBwZXJoYXBzIGJlY2F1c2UgdGhleSBhcmUgdGhlIG1vc3QgY29tbW9ucGxhY2UgZXhhbXBsZXMgb2YgdHJ1bHkgZXF1aXByb2JhYmxlIHNhbXBsZSBzcGFjZXMuIEEgbWlkZGxlIChqdW5pb3Igc2Vjb25kYXJ5KSBzY2hvb2wgc3R1ZGVudCBmaXJzdCB0cnlpbmcgaGVyIGhhbmQgYXQgcHJvYmFiaWxpdHkgd2lsbCBiZSBjb25mcm9udGVkIHdpdGggc2ltcGxlIHF1ZXN0aW9ucyBsaWtlICdXaGF0IGlzIHRoZSBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIGEgNz8nIFlldCBieSB0aGUgbGFzdCBkYXlzIG9mIGhpZ2ggc2Nob29sIGFuZCB0aGUgZWFybHkgZGF5cyBvZiB1bml2ZXJzaXR5LCB0aGUgZ29pbmcgZ2V0cyByb3VnaC4uIApJIHN1Z2dlc3QgdGhvc2UgcGVvcGxlIGluIGZhdm9yIG9mIGhhdmluZyBvcGVuIGJvcmRlcnMgb3Igc2FuY3R1YXJ5IGNpdGllcyBhbmQgc3RhdGVzIHRha2UgdGhlIGluaXRpYXRpdmUgYnkgcmVtb3Zpbmcgd2FsbHMsIHdyb3VnaHQgaXJvbiBkb29ycyBhbmQgd2luZG93cyBmcm9tIHRoZWlyIHByb3BlcnRpZXMgYW5kIHdlbGNvbWUgYWxsIGNvbWVycy4gUHJvdmlkZSB0aGVtIHNoZWx0ZXIsIGpvYnMsIHRyYW5zcG9ydGF0aW9uLCBtZWRpY2FsIGFzc2lzdGFuY2UgYW5kIGlmIHRoZXkgZGVtYW5kIG1vcmUsIGxldCB0aGVtIHN1ZSB5b3UgYW5kIHByb3ZpZGUgdGhlbSBsZWdhbCBhc3Npc3RhbmNlLgpJIGRvbid0IGJlbGlldmUgbXVjaCBvZiBhbnkgb2YgdGhlbSB0aG91Z2h0LCAiZnVjayB0aGUgZnV0dXJlLCIgYnV0IHJhdGhlciwgInlheSEgVGhlIGZ1dHVyZSEgVGhleSdsbCBoYXZlIGl0IGp1c3QgYXMgZ29vZCwgb3IgYmV0dGVyLCB0aGFuIHVzISBUaGlzIGdyb3d0aC9jb25zdW1wdGlvbiBpc24ndCB1bnN1c3RhaW5hYmxlIGF0IGFsbCEiIE5vdyB0aGV5J3JlIHNvIGRlZXAgaW4gaXQsIHRoZXkgY2FuJ3Qgc2VlIHRoZXNlIGlzc3VlcyBkdWUgdG8gY29uc2Npb3VzIG9yIHVuY29uc2Npb3VzIGJsaW5kZXJzIHRoYXQgbWFrZSBpdCBoYXJkIGZvciB0aGVtIHRvIGFkbWl0IHRoZXkgZnVja2VkIGl0IHVwIGZvciB1cy4uIApEYXMgc2NoZWludCBtYW4gc2ljaCBpbSBNb21lbnQgbmljaHQgenUgdHJhdWVuIHVuZCB1bSBkYXMgUHJvamVrdCBuaWNodCBlbmRnbHRpZyBiZWdyYWJlbiB6dSBtc3Nlbiwgd2lyZCBlcyBsaWViZXIgenVyY2tnZXpvZ2VuIHZvcmx1ZmlnIGRhcyBoZWl0IHdvaGwsIGVzIGthbm4gaXJnZW5kd2FubiB3aWVkZXIgYXVzIGRlciBTY2h1YmxhZGUgZ2Vob2x0IHVuZCBha3R1ZWxsIHdlcmRlbiEgVmVyaGluZGVydCBpc3QgZGllIEF1dG9iYWhuIGFsc28gbm9jaCBuaWNodCBnYW56LCBhYmVyIHp1bWluZGVzdCBhdWYgZGllIGxhbmdlIEJhbmsgZ2VzY2hvYmVuIG9kZXIgZXJsZWJlbiB3aXIgaGllciBlaW5lIFByb2pla3QgQmVlcmRpZ3VuZyBhdWYgcGFsbWVyaXNjaGUsIGJ6dy4uIApWb3RlciBmcmF1ZCBpcyB0aGUgbmFtZSBvZiB0aGUgZ2FtZSwgYmVjYXVzZSB3ZSB3b24gaW4gMjAxNiB3aGVuIHBlb3BsZSBoYWQgZXZlbiB3b3JzZSBvcGluaW9ucyBpZiBUcnVtcC5lbGxpcHNlczIwMTUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbyJUaGlzIGlzIGFuIG9sZCwgdHJpZWQgYW5kIHRydWUgcmVjaXBlIHRoYXQgaGFzIGJlZW4gaW4gbXkgZmFtaWx5IGZvciBjZW50dXJpZXMhIGl0IGFsd2F5cyB0YWtlcyBtZSBiYWNrIHRvIHRob3NlIHRpbWVzIHdoZW4gbXkgZ3JhbmRmYXRoZXIgdXNlZCB0byB0YWtlIHVzIHRvIHRoZSBjaXJjdXMgc28gdGhhdCB3ZSBjb3VsZCBtb2NrIGFuZCBsYXVnaCBhdCBhbGwgdGhvc2UgZGVmb3JtZWQgZnJlYWtzISBPZiBjb3Vyc2UsIG5lZ3JvZXMgYW5kIElyaXNobWVuIGtuZXcgdGhlaXIgcGxhY2UgYmFjayB0aGVuLiAKSk9ESSBEVUNLRVRUOiBBcyBUaGUgTW9ybmluZyBDYWxsJ3MgYXNzaXN0YW50IGZlYXR1cmVzIGVkaXRvciByZXNwb25zaWJsZSBmb3IgZW50ZXJ0YWlubWVudCwgc2hlIHNwZW5kcyBhIGxvdCBvZiB0aW1lIHN1cnZleWluZyB0aGUgbXVzaWMgbGFuZHNjYXBlIGFuZCBzaXppbmcgdXAgdGhlIFZhbGxleSdzIGZlc3RpdmFscyBhbmQgY2x1YiBzY2VuZS4gU2hlJ3Mgbm8gZXhwZXJ0LCBidXQgZW5qb3lzIGl0IGFsbCBlc3BlY2lhbGx5IGFydGlzdHMgd2hvIHJlc29uYXRlZCBpbiBoZXIgeW91bmdlciB5ZWFycywgc3VjaCBhcyBDcm9zYnksIFN0aWxscywgTmFzaCBhbmQgWW91bmcsIFRyYWN5IENoYXBtYW4sIFNhbnRhbmEgYW5kIEpvbmkgTWl0Y2hlbGwuLiAKIDYgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvSWYgImthaiIgd2VyZSBhIHBsdXJhbCBhZGplY3RpdmUsIHRoZW4gdGhlIHJvb3Qgd291bGQgaGF2ZSB0byBiZSAiayAiOyBpZiAiZG8iIHdlcmUgYSBub3VuLCB0aGUgcm9vdCB3b3VsZCBoYXZlIHRvIGJlICJkICIsIGJvdGggb2Ygd2hpY2ggYXJlIHRvbyBzaG9ydCAgIGFsbCByb290cyBpbiBFc3BlcmFudG8gY29udGFpbiBhdCBsZWFzdCBvbmUgY29uc29uYW50IGFuZCBvbmUgdm93ZWwuIApDb2xvcmFkbyBGcmllZCBDaGlja2VuIHRha2VzIG1vZGVybiBhbmQgY2xhc3NpYyBkaXBzCldoeSBkbyB0aGV5IG93biB0aGVtPwpXaG8gYXJlIHNhbWUgc2V4IGhhdmUgYmVlbiBkaXNjcmltaW5hdGVkIGFnYWluc3QsIGJ1dCB0aGV5IGRvbiBkZXNlcnZlIHRoZSByaWdodCB0byBiZSBuZWFyIHNpY2sgbG92ZWQgb25lcyBieSB2aXJ0dWUgb2YgdGhlaXIgY291cGxpbmcgYW55bW9yZSB0aGFuIHRoZSBLaW5ncyBkZXNlcnZlIHRoZWlyIHJpZ2h0cyBhbmQgcHJpdmlsZWdlcyBieSB2aXJ0dWUgb2YgYmVpbmcgd2VhbHRoeSwgd2hpdGUgYW5kIHN0cmFpZ2h0LiAKVGhlbiBqdXN0IGFzIHN1ZGRlbmx5IHRoaXMgYm9pc3Rlcm91cyBnYW5nIG9mIEFtZXJpY2FuIG1lbiB3ZXJlIHF1aWV0LCBmZWFyIHNob3dpbmcgb24gdGhlaXIgZmFjZXMsIGFzIHRoZSByZWFsaXphdGlvbiB0aGF0IEFtZXJpY2EgY291bGQgbG9zZSBoaXQgdGhlbS4gCjFzdFBsYWNlUm9kZW8gIDY2IHBvaW50cyAgc3VibWl0dGVkIDEwIG1vbnRocyBhZ28KSG9uZXN0IGZlZWRiYWNrIG9uIHRoZSBTcGVjdHJlOiBpdCBzZWVtcyBsaWtlIHRoZSBzaWxlbmNlIGVmZmVjdCBpbiBpdHMgY3VycmVudCBmb3JtIGlzIHRvbyBnb29kIGF0IG5ldXRyYWxpemluZyBjYXN0ZXJzLCBlc3BlY2lhbGx5IGluIHRoZSBtaWQgZ2FtZSB3aGVyZSBtb3N0IGFyZSBhZmZlY3RlZCBieSBzaWxlbmNlLiBFbmVteSBBSSBkb2VzbiBhdm9pZCB0aGUgcmFkaXVzLCBzbyBJIGp1c3QgcHVsbCB0aGVtIGJhY2sgYXJvdW5kIGEgY29ybmVyLCBvciBjbG9zZSBhIGRvb3IgYW5kIHdhaXQsIGFuZCB0aGVuIHRoZXkgdXAgY2xvc2Ugd2l0aG91dCBtb3N0IG9mIHRoZSBhYmlsaXRpZXMgdGhhdCBtYWtlIHRoZW0gZGFuZ2Vyb3VzLi4gCk1hbGFpc2UgYW5kIGJsdXJyZWQgdmlzaW9uIG1heSBhbHNvIGJlIHByZXNlbnQuLiAKTXIuIEhlaXIgZ2V0cyAxNiB3ZWVrcyBmdWxseSBwYWlkISBJJ20gY2hvb3NpbmcgdG8gc2VlIGl0IGFzIGEgbWFqb3IgcGx1cyB0aGF0IGhlIGdldHMgdG8gYmUgbXIuIG1vbSBmb3IgYSBtb250aC4gU2hvdWxkIGdpdmUgaGltIGEgcmVhbGx5IGdvb2QgaWRlYSBvZiB3aGF0IGl0J3MgbGlrZSBiZWluZyBob21lIHdpdGggYmFieSBhbGwgZGF5IQpJbHMgZW4gb250IGZhaXQgZGVzIHB1YmxpY2l0cyBldCBkZXMgaW5jaXRhdGlmcyBwb3VyIGRlcyBjb2xsZWN0ZXMgZGUgZm9uZHMuIExhIHByc2VuY2UgZGUgTW1lIEVtZXJ5IHBhcm1pIGxldXJzIHJhbmdzIGxldXIgYXVyYWl0IGRvbm4gbCBkIHJham91dGVyLi4gCkxlcyBjb25zZXJ2YXRldXJzIG9udCBwcm9maXQgZHUgcmV0b3VyIGRlIE1hcmMgRW1lcnkgYXVDYW5hZGEgcG91ciBsYW5jZXIgdW5lIGZsY2hlIGF1eCBsaWJyYXV4LiBMZSBtaW5pc3RyZSBmZHJhbCBkZSBsYSBTY3VyaXQgcHVibGlxdWUsIFN0ZXZlbiBCbGFuZXksIGEgcHVibGkgdW4gY29tbXVuaXF1IGRhbnMgbGVxdWVsIGlsIGFmZmlybWUgcXVlIGxlcyBFbWVyeSBzb250IGRlIGZlcnZlbnRzIHBhcnRpc2FucyBkZSBsYSB2aXNpb24gZGUgSnVzdGluIFRydWRlYXUgZGUgbGdhbGlzZXIgbGEgbWFyaWp1YW5hLCBxdWkgYXVyYWl0IHBvdXIgZWZmZXQgZGUgZmFjaWxpdGVyIHNvbiBhY2NzIGF1eCBqZXVuZXMsIGRwbG9yZSB0IGlsLi4gClRoZSBidWlsZGluZyB3aWxsIGJlIG9wZW4gdG8gYWxsIHVzZXJzIGFuZCB3aWxsIG9wZXJhdGUgdW5kZXIgYSBzdXJmIGNsdWIgbW9kZWwgd2hlcmUgcHJvZml0cyB3aWxsIGJlIGZ1bm5lbGxlZCBiYWNrIHRvIGxvY2FsIGF0aGxldGVzLCBzcG9ydGluZyB0ZWFtcyBhbmQgY29tbXVuaXR5IG9yZ2FuaXNhdGlvbnMsIGluY2x1ZGluZyB0aGUgdHdvIG1haW4gYmVuZWZpY2lhcmllcyAgIHRoZSBTdW5zaGluZSBDb2FzdCBGYWxjb25zIGFuZCBCcm90aGVycyBKdW5pb3IgUnVnYnkgQ2x1Yi4KT3ZlcnZpZXcgZm9yIFRyZWVyZW1lCk1vc2xleSB3YXMgdGVudGF0aXZlIGZyb20gdGhlIG9wZW5pbmcgYmVsbCwgbW92aW5nIGJhY2t3YXJkIGFuZCB1bndpbGxpbmcgdG8gZW5nYWdlIFBhY3F1aWFvLiBXaXRoIGdvb2QgcmVhc29uLCBiZWNhdXNlIGEgbGVmdCBob29rIGJ5IFBhY3F1aWFvIGZvdW5kIGl0cyBtYXJrIHdpdGggYSBtaW51dGUgbGVmdCBpbiB0aGUgdGhpcmQgcm91bmQgYW5kIHB1dCBNb3NsZXkgb24gdGhlIGNhbnZhcyBmb3Igb25seSB0aGUgdGhpcmQgdGltZSBpbiBoaXMgMTggeWVhciBwcm8gY2FyZWVyLgpUaGV5IGEgYml0IG9mIGFuIGludmVzdG1lbnQsIGJ1dCB3ZWxsIHdvcnRoIHRoZSBwcmljZSBhbmQgeW91IHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgdGhlIGtleSBwYXJ0cyBvZiB5b3VyIGtpdCwgYXJlIHRoZSBvbmVzIHRoYXQgV09OIGZhaWwgb24geW91IGluIHRoZSBtaWRkbGUgb2YgdGhlIGJhY2tjb3VudHJ5IS4gClRoaXMgd2FzIGEgZGVzdHJ1Y3RpdmUgY3ljbGUsIGJ1dCBJIHdhcyBmb3J0dW5hdGUgbm90IHRvIGVuY291bnRlciBkZXBlcnNvbmFsaXphdGlvbiB1bnRpbCBsYXRlciBvbiAocG9zc2libHkgYmVjYXVzZSB0aGlzIHN0aW50IG9ubHkgbGFzdGVkIHRocmVlIG9yIGZvdXIgbW9udGhzLikgR2V0dGluZyBvdXQgbW9yZSBhbmQgaW52b2x2ZWQgaW4gbmljaGUgY29tbXVuaXRpZXMgaGVscGVkLiBGb3IgaW5zdGFuY2UsIEkgc3RhcnRlZCBwbGF5aW5nIGEgbG90IG9mIGJvYXJkIGdhbWVzIHdoaWNoLCBpbiB0dXJuLCBsZWQgdG8gbWUgcGFpbnRpbmcgbWluaWF0dXJlIGZpZ3VyZXMgZm9yIHVzZSBpbiBib2FyZCBnYW1lcyBhbmQgZ2FtZXMgbGlrZSBXYXJoYW1tZXIuIApOb3QgbXkgZGF5LgpJIGFtIHRoZSBvbmUgd3JpdGluZy9tYWludGFpbmluZyBidWlsZCBzY3JpcHRzLCBidXQgSSBub3QgdGhlIG9ubHkgb25lLiBJIGFzY3JpYmUgdG8gdGhlIGlkZWEgcHJvbW90ZWQgaW4gVGhlIERldk9wcyBIYW5kYm9vayB0aGF0IHRoZSBidWlsZCBzaG91bGQgYmUgY29sbGVjdGl2ZWx5IG93bmVkIGJ5IHRoZSBkZXYgdGVhbS4gQXMgYSBkZXZlbG9wZXIsIGlmIHlvdSBkb24ga25vdyBob3cgdGhlIGJ1aWxkIHdvcmtzLCB0aGVuIHlvdSBub3QgYSBmdWxseSBmdW5jdGlvbmluZyBtZW1iZXIgb2YgdGhlIHRlYW0uCklUIGd1eSBoZXJlLiBTbyBpdCBzZWVtcyBsaWtlIHlvdXIgT1MgY2Fubm90IGZpbmQgeW91ciBkZXNrdG9wIGZvbGRlciBmb3IgeW91ciB1c2VyLiBJdCBkZWZhdWx0cyB0byB0aGUgb25lIGluIFN5c3RlbSAzMi4gCkluY2lzaW9ucyBtYWRlIGFyb3VuZCB0aGUgYXVyZW9sYSBhbmQgbm90IHZpc2libGUuIApBbmQgaGF2aW5nIG91ciByZWxhdGl2ZWx5IHVuaXF1ZSBsYWJvciByZWxhdGlvbnMgc2Nob29sIHNob3VsZCBqdXN0IGJlIGEgYmlnIHJlZCBmbGFnIGlmIHlvdSBhIGNvbnNlcnZhdGl2ZS4gCkFuZCBiZWNhdXNlIGhlIGEgdGhyZWF0IHRvIG91ciBkZW1vY3JhY3kgZm9yIHRyeWluZyB0byBwcmVzZXJ2ZSB0aGUgY29uc3RpdHV0aW9uLiBUaGF0IHdhcyBhd2Vzb21lLi4gCkkgd2FudGVkIHRvIGNyZWF0ZSBhIG5ldyBzaXRlIHRvIHByb21vdGUgbXkgdXBjb21pbmcgYm9vayAzNDkgRGF5cyBzbyBXZWJub2RlIHdhcyBhIG5hdHVyYWwgcGxhY2UgZm9yIG1lIHRvIGdvLiAKVGhlb2Rvcm91ICgxNyAyIDApIHdpbGwgZmFjZSBOby4gOCBEZXJlayBCcnVuc29uICgxOCA3IDApLgpIZSBzYXQgdGhlcmUgY29sb3JpbmcgdGhyb3VnaG91dCB0aGUgcHJvY2VlZGluZ3MuIEhlIGRpZWQgdHdvIHllYXJzIGxhdGVyIGZyb20gY2FuY2VyLiAKUmVnYXJkaW5nIHdoZXRoZXIgdGhlIENvbW1hbmRlciBpcyByZXF1aXJlZCB0byBzaG9vdCBpbiB0aGUgc2hvb3RpbmcgcGhhc2UgdG8gdXNlIFZNVCwgSSBhZ3JlZSB3aXRoIHlvdSB0aGVyZTogeW91IGNvdWxkIG5vdCB1c2UgVk1UIHRvIGxlYXZlIG1lbGVlIGNvbWJhdC4gSG93ZXZlciwgdGhhdCB3YXNuIHdoYXQgSSB3YXMgc2F5aW5nIGluIG15IHBvc3QuIApUaGlzIGlzIHRydWUsIFBva2VyIGJvdHMgZG8gZXhpc3QuIEl0IGlzIGJlbGlldmVkIHRoYXQgcG9rZXIgYm90cyB3b3VsZCBtYWtlIHdpbm5pbmcgaW1wb3NzaWJsZS4gVGhpcyBpcyBOT1QgdHJ1ZS4gCldoeSBkb2VzIGNvZmZlZSBtYWtlIHlvdXIgYnJlYXRoIHNvIGJhZApBbmQgQi4gVGFraW5nIGF3YXkgc29tZXRoaW5nIHRoYXQgaXMgaW52b2x2ZWQgaW4gdGhlIGNhdXNlIG9mIGEgY2VydGFpbiBkaXNlYXNlIG1heSBub3QgaGVscCBhbnltb3JlIG9uY2UgeW91IGhhdmUgZGV2ZWxvcGVkIHRoYXQgZGlzZWFzZTsgc28gdHJlYXRpbmcgY2hyb25pYyBzdHJlc3Mgb25jZSB5b3UgYWxyZWFkeSBoYXZlIGNsb2dnZWQgYXJ0ZXJpZXMgd2lsbCBub3QgcmVzb2x2ZSB0aGUgcHJvYmxlbS4gCk1lYW53aGlsZSwgc2luY2UgQ2Flc2FycyB0b29rIG92ZXIgdGhlIFdTT1AsIGl0IGhhcyBiZWVuIHN0YWdlZCBhdCB0aGUgUmlvIEFsbCBTdWl0ZSBIb3RlbCwgd2hpY2ggaXMgb2ZmIHN0cmlwLCBhbmQgaXQgaGFzIGdyb3duIG91dCBvZiBhbGwgcmVjb2duaXRpb24uIFRoZSAyMDE2IHJlbmV3YWwgY29udGFpbnMgbmVhcmx5IDcwIGRpZmZlcmVudCBldmVudHMgb2YgZXZlcnkgc2hhcGUsIHNpemUsIGJ1eSBpbiwgYW5kIGZvcm1hdC4gSXQgaXMgdGVsZXZpc2VkIGluIG92ZXIgODAgZGlmZmVyZW50IGNvdW50cmllcywgdGhhbmtzIHRvIGEgZGVhbCB3aXRoIEVTUE4sIGFuZCB0aGUgbWFpbiBldmVudCB0aGVzZSBkYXlzIGdldHMgYmV0d2VlbiA2LDAwMCBhbmQgNywwMDAgdGhvdXNhbmQgcGxheWVycyBldmVyeSB5ZWFyLi4gCkFuZCBubyB3b3JyaWVzIGF0IGFsbCB3aXRoIG15IHJlbGF0aW9uc2hpcC4gTXkgZmlhbmNlIGlzIGEgc3dlZXQgaGVhcnQgYW5kIEkgbG92ZSBoZXIuIFNoZSBpcyBzbGVlcGluZyBpbiBteSBiZWQgYXMgd2Ugc3BlYWsuIApXaGVuIGEgbXVnIGdldHMgdGhlIHN3ZWF0cywgdGhleSBjYW4gbGVhdmUgd2F0ZXIgd2l0aCBhIGRlc2lnbmVyIGJhY2twYWNrIHN0dWZmZWQgd2l0aCBleHRyYSBnZWFyIHRoYXQgYWRkcyBhbiBleHRyYSAxMCBwb3VuZHMuIERlcGVuZGluZyBvbiB3aGVyZSB5b3UgY2hvb3NlIHRvIGdvLCBpdCBtYXkgeW91ciBtb25leSBpbiBwdWJsaWMsIHdlYXJpbmcgZXhwZW5zaXZlIHdhdGNoZXMgb3IgamV3ZWxyeSAsIHlvdSB3aWxsIGJlIHF1aWNrbHkgdGFyZ2V0ZWQgYnkgc2Vhc29uZWQgY3JpbWluYWxzLiAKTXVjaCBsb3ZlIGFuZCBncmF0aXR1ZGUgdG8gdGhlIGNhcmVnaXZlcnMgYXQgTGVnYWN5IExvZGdlLiBBbmdlbHMgZG8gd2FsayBhbW9uZyB1cy4KIkFuZCBJIHNhaWQsICdDb3VsZCB5b3UgZXhwbGFpbiB0aGF0PycgQW5kIGhlIHNhaWQsICdXZWxsLCBpdCdzIGZvciBhIHF1aWNrIGdldGF3YXkuJyBPdXQgdGhlIHdpbmRvdy4gCkluZGVlZCwgdGhvc2Ugd29ya2luZyBhdCBoZWFkcXVhcnRlcnMsIGxpa2UgUnVjaCwgY29sbGFib3JhdGUgd2l0aCBlbXBsb3llZXMgYXQgc2l4IGJyZXdlcmllcywgc2V2ZXJhbCByZWdpb25hbCBzYWxlcyBvZmZpY2VzLCB0aHJlZSBjcmFmdCBicmV3ZXJpZXMsIHR3byBjaWRlciBob3VzZXMgYW5kIGEgaG9zdCBvZiBvdGhlciBmYWNpbGl0aWVzLiBUaGF0IHRyYW5zbGF0ZXMgaW50byBhIGRlZXAgdW5kZXJzdGFuZGluZyBvZiBhbGwgdGhlIGRpZmZlcmVudCBmdW5jdGlvbnMgdGhhdCBjcmVhdGUgTGFiYXR0J3MgcHJvZHVjdHMgYW5kIGJyaW5nIHRoZW0gdG8gbWFya2V0LiAKSSBibGV3IG91dCBteSB0aXJlcyB3aGlsZSBJIHdhcyBkcml2aW5nIGFib3V0IDg1bXBoIG9uIDc1TiBpbiBEYWxsYXMuIFdoZW4gdGhlIGZpcnN0IHRpcmUgYmxldywgSSBvdmVyY29ycmVjdGVkIGFuZCBteSBjYXIgdmVlcmVkIHN0cmFpZ2h0IGZvciB0aGUgY29uY3JldGUgYmFycmljYWRlIChJIHdhcyBpbiB0aGUgc2Vjb25kIGxhbmUgZnJvbSB0aGUgbGVmdCBvdXQgb2YgZm91cikuIEkgcGFuaWNrZWQgYW5kIGNvbXBsZXRlbHkgbGV0IGdvIG9mIHRoZSBzdGVlcmluZyB3aGVlbCB3aGljaCBjYXVzZWQgbXkgY2FyIHRvIHN3ZXJ2ZSBpbiB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uIGFuZCBhbm90aGVyIHRpcmUgcG9wcGVkLiBUaGUgcmVzdCBvZiB3aGF0IGhhcHBlbmVkIGlzIHVuY2xlYXIgYnV0IEkgZW5kZWQgdXAgaW4gdGhlIGZhciByaWdodCBsYW5lLCBzdGFyaW5nIGF0IG9uY29taW5nIHRyYWZmaWMgKG15IGNhciBoYWQgZG9uZSBhIDE4MCkgYW5kIGFsbCBvZiB1cyB3ZXJlIGF0IGEgZGVhZCBzdG9wLiBTb21laG93IEkgaGl0IG5vdGhpbmcgYW5kIG5vIG9uZSBoaXQgbWUuIEl0IHdhcyBqdXN0IG1lIHN0YXJpbmcgYXQgYSBsaW5lIG9mIGNhcnMsIGFsbCBvZiB1cyB3aXRoIG91ciBtb3V0aHMgaGFuZ2luZyBvcGVuIGxpa2UgV1RGIEpVU1QgSEFQUEVORUQuCklETSA2LjI4IENyYWNrIERvd25sb2FkLiBZb3Ugd2VyZSB1c2luZyBnZW51aW5lIFdpbmRvd3MgNyB3aXRob3V0IGFueSBwcm9ibGVtLiBBY3RpdmF0ZSBXaW5kb3dzIG5vdy4gSWYgaXRzIG5vdCwgZG91YmxlIGNsaWNrIG9uIGl0IGFuZCBzZXQgaXRzIFN0YXJ0dXAgdHlwZSB0byAiQXV0b21hdGljIi4gClJlYWxseSB0aG91Z2ggR29vZ2xlIGl0IGFuZCB0cnkgbm90IHRvIGNoYW5nZSB0ZWFjaGVycyB0b28gb2Z0ZW4gc2luY2UgeW91IGhlYXIgYSB0aG91c2FuZCBkaWZmZXJlbnQgdmVyc2lvbnMuIFBpY2sgYSBzaW5nbGUgc3R5bGUgdG8gc3RhcnQgdG9vLiBNaW5kZnVsbmVzcyBpcyBhbW9uZ3N0IHRoZSBtb3N0IGJhc2ljLiAKR2FuZGFsZiBpbiB0dXJuIHRvbGQgaGltIHRoYXQgaWYgaGUgaGVhcmQgYW55IG1vcmUgbmV3cyBhYm91dCB0aGUgTmF6Z3VsIHRvIHNlbmQgd29yZCB0byBTYXJ1bWFuLiAKV2hlbiBpdCBjb21lcyB0byBzZWxlY3RpbmcgdGhlIGJlc3Qgc2xvdCBtYWNoaW5lcywgb25lIG9mIHRoZSBpbXBvcnRhbnQgdGhpbmdzIHdoaWNoIHlvdSBoYXZlIHRvIGRvIGlzIGRldGVybWluZSB3aGljaCBzbG90IG1hY2hpbmVzIG9mZmVycyBodWdlIHBheW91dHMuIEZpbmRpbmcgdGhlIGJlc3Qgc2xvdCBtYWNoaW5lcyBpcyBhIHByb2JsZW0gd2hpY2ggYSBsb3Qgb2YgZ2FtYmxlcnMgZmFjZSBiZWNhdXNlIHRoZXkgaGF2ZSBsaW1pdGVkIGNvbXByZWhlbnNpb24gb24gaG93IHRvIGdvIGFib3V0IGNob29zaW5nIHRoZSBiZXN0IHNsb3RzLiBCZWxvdyBhcmUgZmV3IHNlY3JldHMgdGhhdCBjYW4gaGVscCB5b3Ugc2VsZWN0IHRoZSBiZXN0IHNsb3QgbWFjaGluZXMuLiAKVGhlcmUgYWxzbyBhIGNvbnZlbmllbnQgdHJpY2sgdGhhdCAxIGttL3MgaXMgZXh0cmVtZWx5IGNsb3NlIHRvIDEgcGFyc2VjIHBlciBtaWxsaW9uIHllYXJzLiBBbHBoYSBDZW50YXVyaSBpcyBhIGJpdCBvdmVyIGEgcGFyc2VjIGF3YXkuIFNvIGlmIHlvdSBrbm93IHlvdXIgc3BlZWQgaW4ga20vcywgeW91IGNhbiB2ZXJ5IGVhc2lseSBjYWxjdWxhdGUgaG93IG1hbnkgeWVhcnMgaXQgd291bGQgdGFrZSB0byByZWFjaCBBbHBoYSBDZW50YXVyaSBvciB3aGF0ZXZlci4KUmVtZW1iZXIsIGVhcmx5IGluY2Vuc2UgY29udGFpbmVkIG5vdGhpbmcgb3RoZXIgdGhhbiBncm91bmQgaGVyYnMsIHBsYW50IGd1bXMsIGFuZCBob25leS4gCkZpZ2h0aW5nIGFnYWluc3QgYSBtdWx0aWJpbGxpb24gZG9sbGFyIGluZHVzdHJ5IHRoYXQgdmVyeSwgdmVyeSBnb29kIGF0IGJlaW5nIHN0cmF0ZWdpYyBhbmQga2VlcGluZyB0aGVpciBidXNpbmVzcyBnb2luZywgc2FpZCBTdGVwaGFuaWUgQ2xhcmssIGV4ZWN1dGl2ZSBkaXJlY3RvciBhdCBBbWlyYWgsIGEgbm9ucHJvZml0IHRoYXQgcnVucyBhIHNhZmUgaG91c2UgZm9yIHdvbWVuIGVzY2FwaW5nIHNleCB0cmFmZmlja2luZyBpbiBNYXNzYWNodXNldHRzLCB3aGVyZSBpbGxlZ2FsIG1hc3NhZ2UgcGFybG9ycyBoYXZlIHByb2xpZmVyYXRlZC4gYXJlIGFsd2F5cyAxMCBzdGVwcyBhaGVhZC4gRWxpemFiZXRoIFdhcnJlbiB1bnZlaWxzIHBsYW4gdG8gYnJlYWsgdXAgQW1hem9uLCBGYWNlYm9vayBhbmQgR29vZ2xlJ0kgd2FzIHNjYW1tZWQnOiBBcnQgSW5zdGl0dXRlIG9mIFNlYXR0bGUgd2lsbCBjbG9zZSBhYnJ1cHRseSBGcmlkYXksIHR3byB3ZWVrcyBiZWZvcmUgZW5kIG9mIHF1YXJ0ZXIKQ291bGQgaGF2ZSBsZXQgaGltIHdpbiBidXQgSSBkaWRuLiAKQSBiYXRodHViIGlzIHNsaWdodGx5IGhhcmRlciB0byBnZXQgaW50bywgYnV0IGl0cyBhIGxvdCBtb3JlIHJlbGlhYmxlIHdoZW4gaXQgY29tZXMgdG8gd2F0ZXJwcm9vZmluZyBpdC4KT3ZlcnZpZXcgZm9yIGNoaWVmbG9va291dApEY2xhcmF0aW9uIGQnYWJzZW5jZSAoYXJ0LiBEYW5zIGNlIGNhcywgZGVzIG1lc3VyZXMgZGUgcHVibGljaXQgcGV1dmVudCB0cmUgcHJpc2VzIChhcnQuIApXb3Jrb3V0IHJldmlldzogR2V0dGluZyBzdHJlZXQgc21hcnQgd2l0aCBLcmF2IE1hZ2EgaW4gQnJvb21maWVsZApBdCB0cmlhbCB0aGUgY29wIHdpbGwgdGFrZSB0aGUgd2l0bmVzcyBzdGFuZCBhbmQgdGVzdGlmeSBhcyB0byB3aGF0IHRoZXkgc2F3LCB5b3Ugd2lsbCBnZXQgYSBjaGFuY2UgdG8gYXNrIHRoZSBjb3AgcXVlc3Rpb25zIHdoZW4gdGhleSBhcmUgb24gdGhlIHN0YW5kLiAKWW91IHdpbGwgdXNlIHRoZXNlIHRvIGhlbHAgeW91IHB1dCBuYWlscyBpbiB0aGUgd2FsbCBvbiB3aGljaCB5b3Ugd2lsbCBoYW5nIHRoZSBmcmFtZWQgcGljdHVyZXMuIApTZWluZSBGaW5nZXIgbXNzZW4gbWl0IElocmVtIFJja2VuIGluIFZlcmJpbmR1bmcgc3RlaGVuLCBkYW1pdCBlciBmaGxlbiBrYW5uLCB3byBkaWUgVmVyc3Bhbm51bmdlbiBzaW5kIHVuZCBTaWUgZG9ydCBtYXNzaWVydC4gClNvbGljaXRpbmcgbW9uZXksIGdvb2RzLCBzZXJ2aWNlcywgb3IgZmF2b3VycyBpcyBub3QgYWxsb3dlZC4gbW9yZSA+PgpXaGlsZSB0aGUgZm9jdXMgaGFzIGJlZW4gb24gcmVmcmlnZXJhdGlvbiwgTXIuIERlc2phcmRpbnMgc2FpZCB0aGUgdGVjaG5vbG9neSBjYW4gYWxzbyBjcmVhdGUgaGVhdCwgd2hpY2ggb3BlbnMgdXAgbmV3IG9wcG9ydHVuaXRpZXMgZm9yIHByb2R1Y3QgZGV2ZWxvcG1lbnQuLiAKVW5mb3J0dW5hdGVseSwgbW9zdCBvZiB0aGVzZSBnYW1lcyBvZmZlciB0aGUgaGlnaGVzdCBhZHZhbnRhZ2VzIHRvIHRoZSBob3VzZSBzbyB5b3VyIGNoYW5jZXMgb2Ygd2lubmluZyBvdmVyIGFuIGV4dGVuZGVkIHBlcmlvZCBvZiB0aW1lIGFyZSBzbGltLi4gCkFyZSBhIGxvdCBvZiB3b21lbiBsb2NhbGx5IEkgZG9uIHRoaW5rIGFyZSBhd2FyZSB5ZXQgb2YgdGhlIHByb2dyYW0sIHNhaWQgTHV0eiwgd2hvIGNhbWUgdG8gV2luZHNvciBpbiBTZXB0LiAyMDE2LiBXYW50IHRvIGxldCBwZW9wbGUga25vdyB3ZSBoZXJlLiAKVGhlcmUgYXJlIG9mIGNvdXJzZSBzb21lIGNhdmVhdHMgdG8gdGhpcy4gTGlrZSB5b3UgYWxsdWRlZCB0bywgaWYgeW91IGhhdmUgYSBsYXJnZSBwb3N0IGZsb3AgZWRnZSwgdGhlIEVWIG9mIHdlYWtlciBoYW5kcyBnbyB1cCBhbmQgd2UgY2FuIHByZWZlciBjYWxscyByYXRoZXIgdGhhbiBqdXN0IHRha2luZyBkb3duIHRoZSBibGluZHMuIApJIGhhdmUgbm8gcHJvYmxlbSBzZXBhcmF0aW5nIGFydCBmcm9tIGFydGlzdCB3aGVuIHRoZSBhcnRpc3QgaXMganVzdCBhIHN0YW5kYXJkIGFzc2hvbGUuIApXaGVuIGNvbGxlY3RpbmcsIHRoZW1lcyBhcmUgdmVyeSBpbXBvcnRhbnQuIFRoZXJlIGFyZSBtYW55IHR5cGVzIG9mIHRoZW1lcyBvbiB0aGUgbWFya2V0IHdoZW4gaXQgY29tZXMgdG8gcG9rZXIgY2hpcHMuIApJZiB5b3UgbWV0IGhlciBhdCBhIHBhcnR5IG9yIGF0IGEgYmFyIG9yIGFueSBvdGhlciBzb2NpYWwgc2V0dGluZywgdGhlbiBieSBhbGwgbWVhbnMgYXNrIGhlciBvdXQsIG90aGVyd2lzZSBzdGVlciBjbGVhciBvZiBib3RoZXJpbmcgaGVyIGluIGhlciB3b3JrcGxhY2UuIEl0J3Mgbm90IHRoZSByaWdodCBzZXR0aW5nIGZvciBkYXRpbmcuCkluIHRoZSBsb25nIHJ1biwgbXVtIG9yIG1vbSBpcyBqdXN0IGEgd29yZCwgeW91ciBtb3RoZXIgbWF5IHRyeSB0byBjbGFpbSBpdCBhbmQgdXNlIGl0IHRvIG1ha2UgaGVyc2VsZiBmZWVsIGEgYml0IHlvdW5nZXIgdGhhbiBpZiBzaGUgd2FzIGNhbGxlZCBncmFuZG1hLCBidXQgeW91ciBiYWJ5IHdpbGwgYWx3YXlzIGtub3cgd2hvIGl0J3MgcmVhbCBtb3RoZXIgaXMuIApJIGhvcGUgdGhleSBtYWtlIGl0IHdvcmsgZm9yIGFsbCBvZiB0aGVtLiAKSW4gdGhlIGFib3ZlIHNjZW5hcmlvIHNwZWNpZmljYWxseSwgSSBoYXZlIHNlY29uZCBwYWlyIHdpdGggYSBiYWNrZG9vciBmbHVzaCBkcmF3IGFuZCBJIGZhY2luZyBhIGhhbGYgcG90IGJldC4gCldvcmtpbmcgT24gTXkgRmlyc3QgRml4CkFueXdheXMgaXQgd2FzIG15IHBhcnR5IGFuZCBmb3IgaXQgaSBoYWQgYSAic2F0dXJkYXlzIGFyZSBmb3IgdGhlIGJveXMiIGZsYWcgdGhhdCBldmVyeW9uZSB3b3VsZCBzaWduLgpPdmVyIHRoZSBwYXN0IDE1MCB5ZWFycyB0aGlzIGJhbGFuY2UgaGFzIGJlZW4gdXBzZXQuIi4gClBoaWxhbnRocm9weSBieSB0aGUgUmVzdCBvZiBVcwpIZSBjYW4gdGVsbCBDb25ub3IgYmVjYXVzZSBDb25ub3IgaXMgaG9va2VkIHVwIHRvIEN5YmVybGlmZS4gCkFsc28gaWYgeW91IGJpZyBpbnRvIHNsZWVwIHlvdSBzaG91bGQgbG92ZSB0aGlzIHZlcnkgaW5mb3JtYXRpdmUgcG9kY2FzdCB0aG8gYmUgYXdhcmUgYSBsb3Qgb2YgaXQgaXMgYWxzbyB0aGUgc29jaWV0YWwgaXNzdWVzIGFuZCBjb25zZXF1ZW5jZXMgb2Ygc2xlZXAgcmF0aGVyIHRoYW4gb25seSBwZXJzb25hbApIYXZlIGEgTGFkaWVzIFBva2VyIE5pZ2h0ClRoZSBCYXl3YXRjaCBzdGFyIGlzIGN1cnJlbnRseSBsb2NrZWQgaW4gYSBiaXR0ZXIgZmlnaHQgd2l0aCBoZXIgZXggYWZ0ZXIgaGUgZmlsZWQgcGFwZXJzIGluIGEgQ2FsaWZvcm5pYSBjb3VydCBjaGFsbGVuZ2luZyBoZXIgZGl2b3JjZSBwZXRpdGlvbiBieSBzZWVraW5nIGFuIGFubnVsbWVudCBvbiB0aGUgZ3JvdW5kcyBvZiBmcmF1ZC4KVGhlc2UgcGF0dGVybnMgaGF2ZSBwb3NpdGl2ZXMgYW5kIG5lZ2F0aXZlcyBhbmQgYmVpbmcgYWJsZSB0byByZWNvZ25pemUgdGhlbSBnaXZlcyB5b3UgaW5mb3JtYXRpb24gd2l0aG91dCBoYXZpbmcgdG8gYWN0dWFsbHkgY2FsY3VsYXRlIGl0IGV2ZXJ5IHRpbWUuIApUaGUgY291cnQgaGVhcmQgQ2FzdGVsbG8gd2FzIHNlZW4gdGhyZWF0ZW5pbmcgdGhyZWUgbWVuIHdpdGggdGhlIHN0aWNrIG9uIERlY2VtYmVyIDI3IHdoaWxlIHNob3V0aW5nIG9uIHRoZW4gYmlnIG1hbiBBIHBvbGljZSBvZmZpY2VyIHVuc2hlYXRoZWQgdGhlIHdlYXBvbiBhbmQgc2hvd2VkIGl0IHRvIHRoZSBqdWRnZSwgd2hvIHNhaWQgaXQgd2FzIGxpa2UgYSBwb2tlciBUaGUganVkZ2Ugc2FpZDogY2xlYXJseSB2ZXJ5IGRhbmdlcm91cy4gWW91IGNhbiBpZ25vcmUgdGhlIGN1cnJlbnQgY2xpbWF0ZSBvZiBrbml2ZXMgYW5kIHdlYXBvbnMuIApROiBJIGNhbiBiZWxpZXZlIEkgZ29pbmcgdG8gYXNrIHlvdSB0aGlzLCBidXQgZG8geW91IGhhdmUgYSBmYXZvdXJpdGUgYnJlZWQgb2YgY293PwpJIGRpZCBpdCBhbmQgZGlkbiBldmVuIGxlYXZlIEZ1a3Vva2EgYWlycG9ydCBvbmNlLiBCdXQgYmV3YXJlIHRoYXQgSmFwYW4gZmxpZ2h0IGF0dGVuZGFudHMgKGluIG15IGNhc2UsIGFueXdheSkgd2VyZSBoZXNpdGFudCBhYm91dCBsZXR0aW5nIG1lIGJvYXJkIHRoZSBmbGlnaHQuIEkgaGFkIGEgcmV0dXJuIHJvdW5kIHRyaXAgZmxpZ2h0IGZyb20gSmFwYW4gPiBTZW91bCA+IEphcGFuLiAKUmFpbHJvYWQgd2FzIGJlaW5nIGJ1aWx0IGluIGFuIGltcG9zc2libHkgYmFkIHBsYWNlLCB3aXRoIG5vIHV0aWxpemFibGUgbmF0dXJhbCByZXNvdXJjZXMsIG5vIGxhYm9yaW5nIHBvcHVsYXRpb24gdG8gaGlyZSwgYW5kIHNvIG9uLCBhbGwgdGhlIHdoaWxlIHRha2luZyBwbGFjZSBpbiBmYW50YXN0aWNhbGx5IGJhZCBjaXJjdW1zdGFuY2VzLiBBcyBtdWNoIGFzIGxhbmRzbGlkZXMgYW5kIGFjY2lkZW50cyB0b29rIHRoZSBsaXZlcyBvZiB3b3JrZXJzLCB0aGV5IGFsc28gc3VjY3VtYmVkIHRvIHNtYWxscG94LCBkeXNlbnRlcnksIGNob2xlcmEsIHZhcmlvdXMgdHlwZXMgb2YgZmV2ZXJzLCBhbmQgYSBob3N0IG9mIG90aGVyIGtpbGxlcnMuIApBcyBJJ3ZlIHNhaWQgYmVmb3JlLCBwZW9wbGUgbG92ZSB0byBydW4gd2l0aCBteXRocywgYW5kIHNhZGx5LCB0aGlzIG9uZSBpcyBzZWxmIHN1c3RhaW5pbmc6IFRoZSBtaXNpbmZvcm1hdGlvbiBicmluZ3MgYSBsb3Qgb2Ygdml0cmlvbCwgdGhlIHZpdHJpb2wgcHJvbXB0cyByZW1vdmFscywgYW5kIHRoZSByZW1vdmFscyByZXN1bHQgaW4gbW9yZSBtaXNpbmZvcm1hdGlvbi4gRXZlcnkgdGltZSBzb21lb25lIHRyaWVzIHRvIGV4cGxhaW4gdGhlIHRydXRoLCB0aGV5IGdldCBkb3dudm90ZWQgZm9yIGdvaW5nIGFnYWluc3QgdGhlIG1vYi4gd2hpbGUgYXQgdGhlIHNhbWUgdGltZSwgY29tbWVudHMgYmVnaW5uaW5nIHdpdGggIkkndmUgaGVhcmQuIiBvciAiSSd2ZSBzZWVuLiIgZ2V0IHVwdm90ZWQsIHJlYWQsIGFuZCByZXBlYXRlZCBieSBwZW9wbGUgd2hvIGRvbid0IGFjdHVhbGx5IGtub3cgYW55dGhpbmcgYWJvdXQgdGhlIHNpdHVhdGlvbi4KV2h5IFNoZWxsaSB3b3VsZCBwaXNzIG9mZiBhIGh1Z2Ugdm90aW5nIGJsb2NrIGluIHRoZSBob3VzZSBpcyBiZXlvbmQgbWUuClRoYW5rcyBmb3IgcG9zdGluZyB0aGlzISBJIGJlZW4gZGFpbHkgZm9yIG1lZGl0YXRpbmcgZm9yIGxlc3MgdGhhbiBhIHllYXIsIGJ1dCBJIGNhbiByZXBvcnQgYW5lY2RvdGFsbHkgdGhhdCBJIGZlZWwgbGVzcyBhbWJpdGlvbiB0aGFuIGJlZm9yZSBJIHN0YXJ0ZWQuIEkgdGhpbmsgSSBrbm93IHdoeS4gCkluIGFkZGl0aW9uLCB0aGUgcGF0aWVudCBzaG91bGQgcHJhY3RpY2UgYWJkb21pbmFsIGJyYWNpbmcgaW4gYSB2YXJpZXR5IG9mIHBvc2l0aW9ucy4KSSBtYWtlIHRvbnMgb2YgbWVhbHMgU3VuZGF5IHRvIGVhdCB0aHJvdWdob3V0IHRoZSB3ZWVrLiBMaWtlIGNoaWNrZW4gYW5kIHJpY2UuIFlvdSB3YW50IHRvIGJlIGVhdGluZyBhcm91bmQgMzAwMCBjYWxvcmllcyBhbHNvLiAKSG9sZCB1cC4gRmlyc3Qgb2ZmLCBsZXQgbWUgc2F5IEkgbGlrZSB0aGUgWWVsbG93IERlbGF5LCBhbmQgaWYgaGlzIHByaWNlIHJhbmdlIHdhcyBhcm91bmQgJDUwIHlvdSBiZSBhYnNvbHV0ZWx5IHJpZ2h0LCBidXQgYSBwcmljZSByYW5nZSBvZiAxMDAgICAxNTAgb3BlbnMgeW91IHVwIHRvIGEgdG9uIG9mIG9wdGlvbnMgdGhhdCBydW4gY2lyY2xlcyBhcm91bmQgdGhlIG1vb2VyLiBJIGRvbiB3YW50IHRvIGRpc3BhcmFnZSB0aGUgbW9vZXIgYXMgaXQgYSBncmVhdCBjaGVhcCBvcHRpb24sIGJ1dC4KSSB3b3JrZWQgaGFyZCB0byBiZSBhYmxlIHRvIG1hbmFnZSBpdCBhbmQgZmluYWxseSBhZnRlciB5ZWFycyBvZiBtZWRpY2F0aW9uIGFuZCB0aGVyYXB5IGdvdCB0byBhIGdvb2QgcGxhY2UuIApXaXRoIGVhY2ggbmV3IG1vZGVsIG9mIGNhciBvbiB0aGUgc3RyZWV0cywgbW9yZSBhdXRvbWFrZXJzIGFyZSBhc3N1bWluZyB0aGF0IHBlb3BsZSB3YW50IHRoZWlyIHBob25lcyBhbmQgdGhlaXIgY2FycyB0byBiZSBpbnRlcmNvbm5lY3RlZC4gCkNvZ2VudCBFbnRlcnRhaW5tZW50IE1hcmtldGluZywgd2l0aCBvZmZpY2VzIGluIE5ldyBZb3JrIGFuZCBMb3MgQW5nZWxlcywgc3BlY2lhbGl6ZXMgaW4gdGFsZW50IHByb2N1cmVtZW50LCBpbmZsdWVuY2VyIG1hcmtldGluZyBhbmQgZXhwZXJpZW50aWFsIGFjdGl2YXRpb25zLiAKSSBhbHNvIHJlY2VpdmVkIGEgbG90IG9mIG15dGhpY3MsIGRvdWJsZSByYXJlcyBhbmQgZG91YmxlIG15dGhpY3MgZHJvcHMuIApVc2UgcnViYmVyIGdsb3ZlcyB3aGVuZXZlciB5b3UgYXJlIGdvaW5nIHRvIHRvdWNoIGNsZWFuaW5nIHNvbHV0aW9ucyBvciBkbyB5b3VyIGhvdXNld29yay4gVGhpcyB3aWxsIHByb3RlY3QgeW91ciBoYW5kcyBhbmQgZmluZ2VycywgcHJldmVudGluZyBpdCBmcm9tIGRyeWluZy4gRHJ5IGhhbmRzIGFuZCBmaW5nZXJzIHJlc3VsdCB0byBhZ2luZyBxdWlja2x5LgpDaGVjayBvdXQgVGVhIEtldHRsZSBXaGlzdGxlIChUZWFwb3QgV2hpc3RsaW5nIFRlYSBQb3QgSG90IFdhdGVyIEJvaWwgQm9pbGluZyBOb2lzZSBDbGlwKSBbU291bmQgRWZmZWN0XSBieSBGaW5ub2xpYSBTb3VuZCBFZmZlY3RzIG9uIEFtYXpvbiBNdXNpYy4gU3RyZWFtLiBBcHIgMTUsIDIwMTggICAyNSBzZWNEb3dubG9hZCByb3lhbHR5IGZyZWUgV2hpc3RsaW5nIEtldHRsZSBXaGkgc291bmQgZWZmZWN0IHdpdGggV0FWIGFuZCBNUDMgY2xpcHMgYXZhaWxhYmxlIC4gCllvdXIgYm9keSBnZXRzIHN0dWNrIGluIGZpZ2h0IG9yIGZsaWdodCBtb2RlIGFuZCBzdHJlc3Mgd3JlYWtzIGhhdm9jIG9uIHlvdXIgYm9keSBiZWNhdXNlIG9mIGNvcnRpc29sIHJlbGVhc2UuLiAKSW1tZXIgZGFyYW4gZGVua2VuIGRhcyBkaWUgVW13ZWx0aGlsZmUgbnVyIGRlc2hhbGIga2xhZ2VuIGthbm4gdW5kIGF1Y2ggZ2V3aW5udCB3ZWlsIGVzIHNpY2ggaGllciB1bSBnZWx0ZW5kZXMgUmVjaHQgaGFuZGVsdC4KSSBsb3ZlIHRoZSBncmVhdCBicml0aXNoIGJha2Ugb2ZmLCBkb2N0b3Igd2hvLCBhbmQgcGVha3kgYmxpbmRlcnMhIEkgaGF2ZW4gc2VlbiB0aGUgYnJpdGlzaCB2ZXJzaW9uIG9mIHRoZSBvZmZpY2UsIGJ1dCBsb3ZlIHRoZSBhbWVyaWNhbiB2ZXJzaW9uLiBJIHJld2F0Y2hlZCBpdCB3YXkgdG9vIG1hbnkgdGltZXMuCkxldCB0aGVtIHRha2UgY3JlZGl0IGZvciB0aGVpciBvd24gYWNoaWV2ZW1lbnRzLiAKV2Uga25vdyB0aGUgVGFyZyBsb3JkcyB3b3VsZCBwcmFjdGljZSBGaXJzdCBOaWdodCB0aGVyZSBvciB3b3VsZCBmaW5kIG1pc3RyZXNzZXMgZnJvbSB0aGUgd29tZW4gbG9jYWwgdG8gdGhlIGlzbGFuZC4gNSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvSGUgdGFrZXMgaGlzIGdsYXNzZXMgb2ZmIGluIHByZXZlbnRpb24gYXMgc29vbiBhcyBoZSByZWFsaXplcyB0aGF0IHRoZSBCdWxnYXJpYW4gbWFzY290cyBhcmUgdmVlbGEuIkkgd29uZGVyIHdoYXQgdGhleSd2ZSBicm91Z2h0LCIgc2FpZCBNci4gCkRvIHdoYXQgbW9zdCBvZiB1cyAoaW4gbXkgbGFyZ2UgY291bnR5IGxpYnJhcnkpIGRpZCwgYW5kIHRyeSB0byBnZXQgb24gYSBTVUIgbGlzdCBmaXJzdC4gSSBkb24ndCBrbm93IHdoZXJlIHlvdSBsaXZlLCBidXQgbW9zdCBiaWdnZXIgY2l0eS9jb3VudHkgbGlicmFyaWVzIGFsd2F5cyBuZWVkIHN1YnMuIEFuZCBvbmNlIHRoZXkgZ2V0IHRvIGtub3cgeW91LCBhc3N1bWluZyB5b3UncmUgY29tcGV0ZW50IGFuZCBsaWthYmxlLCBpdCdzIE1VQ0ggZWFzaWVyIHRvIGdldCBoaXJlZCBmcm9tICJ3aXRoaW4iIGlmIGEgcGVybWFuZW50IHBvc2l0aW9uIG9wZW5zLiAKRm9yIHRoaXMgZ2FtZSBldmVyeW9uZSBidXlzIGEgZ2lmdCBhdCBhIHNldCBidWRnZXQuIApXaXRoIHRoYXQgc2FpZCwgc25pcGVyIHNraXJtaXNoZXJzIHdpbGwgcmFjayB1cCB0aGUgbW9zdCBraWxscyBpbiB0aGUgZ2FtZSBiZWNhdXNlIHRoZXkgY2FuIGZpcmUgYXQgdW5pdHMgdGhhdCBkb24gaGF2ZSB0aGUgcmFuZ2UgdG8gZXZlbiBzZWUgdGhlbS4uIApJdCBjb3VsZCBiZSBpbmRvb3JzIG9yIG91dGRvb3JzLCBhcyBsb25nIGFzIGl0IGlzIHBlYWNlZnVsIGFuZCBpbnZpdGluZyB0byB5b3UuIE9uY2UgdGhlcmUsIHJlcGVhdCB5b3VyIGFmZmlybWF0aW9uIHN0YXRlbWVudCB0aHJlZSB0aW1lcy4gCldoaWxlIGl0J3MgbGVzcyByZXN0cmljdGl2ZSB0aGFuIHByaW9yIHBsYW5zLCBjaGFyaXRpZXMgc3RpbGwgZG9uJ3Qgc3VwcG9ydCBpdC4gCkhhaGFoIHRoYXQncyBhIHByZXR0eSBmdW5ueSBhbmQgYWNjdXJhdGUgYW5hbG9neSBvbiBoaXMgZGVtZWFub3IuIEkndmUgbmV2ZXIgbWV0IGhpbSBpcmwsIGJ1dCB0aGUgcmVhc29uIEkgZGVzcGlzZSBoaW0gaXMgdGhlIHdheSBoZSB0cmVhdHMgcGVvcGxlLiBJbiBzZXZlcmFsIG9mIGhpcyB2aWRlb3MgaGUgcHJvamVjdHMgaGF0ZSB0b3dhcmRzIG90aGVyIHBsYXllcnMganVzdCBmb3IgYmVpbmcgZmlzaHkgb3IgdW5rbm93bGVkZ2VhYmxlIGFib3V0IHBva2VyLiBOb25lIG9mIGl0IGlzIHJlYWxseSBqdXN0aWZpZWQuIFRvIG1lLCBoZSBzZWVtcyByZWFsbHkgZGlzcmVzcGVjdGZ1bCBhbmQgcnVkZSB0b3dhcmRzIG90aGVycyB3aGVuIGhlIGRvZXNuJ3QgZ2V0IGhpcyB3YXksIGluIGNhcmRzIGFuZCBpbiBsaWZlLiBQZW9wbGUganVzdCBicnVzaCB0aGlzIG9mZiBiZWNhdXNlIGhlJ3MgImNoYXJtaW5nIiBpbiBhIGN5bmljYWwgc29ydCBvZiB3YXksIHdoaWNoIEkgYWRtaXQgY2FuIGJlIGZ1bm55LiBCdXQgSXRzIHF1aXRlIGEgd2F5IHRvIGFjdCB3aGVuIEkgZG9uJ3QgZXZlbiByZXNwZWN0IGhpbSBhcyBhIHNvbGlkIHBva2VyIHBsYXllciBsZXQgYWxvbmUgYSBuaWNlIHBlcnNvbiB0byBtZWV0IHJhbmRvbWx5IG9uIHRoZSBzdHJlZXQuCkkgc3RpbGwgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgd2hhdCBpdCBtZWFucyB0byBub3QgaWRlbnRpZnkgd2l0aCBteSBwYWluLiAKVGhlIHN0YXRlICh0aGUgcGVvcGxlKSBkbyBpbiBmYWN0IGhhdmUgdGhlIGFiaWxpdHkgdG8gZGljdGF0ZSB3aGF0IHlvdSBkbyB0byB5b3VyIGNoaWxkcmVuLiBIZW5jZSB3ZSBoYXZlIENQUywgaGVuY2Ugd2UgaGF2ZSBtYW5kYXRvcnkgc2Nob29saW5nLiAKV2hhdCdzIGRpZmZlcmVudD8gWW91IG1heSBoYXZlIHNlZW4gc2ltaWxhciBiYWxscyB1c2VkIGZvciBtb2RpZmljYXRpb25zIGluIFBpbGF0ZXMsIGJ1dCB0aGV5J3JlIHRoZSBjZW50ZXIgb2YgdGhlIGFjdGl2aXR5IGhlcmUuClByb2YuIE5ldW1pd2FraW4gZW1wZmllaGx0IGZyIGRpZSBpbm5lcmUgQW53ZW5kdW5nIGhhbmRlbHNibGljaGUgMyVpZ2UgSDJPMiAgIExzdW5nLCBiZWdpbm5lbmQgbWl0IDIgMyBUcm9wZmVuIGF1ZiBlaW5lbiBFc3NsZmZlbCBXYXNzZXIsIDMgbWFsIHRnbGljaC4gRGllIERvc2lzIHdpcmQgdGdsaWNoIHVtIGVpbmVuIFRyb3BmZW4gZXJoaHQgKHp1ciBHZXdobnVuZykuIApJZiBjYWxsZWQsIHNob3ZpbmcgbW9zdCBmbG9wcyB0byBkZW55IGhpcyBlcXVpdHkvZ2V0IGEgYmFkIGNhbGwgZnJvbSBBSi9BUS4gCkhhYml0YXQgY29uZGl0aW9ucyBhcmUgbGlrZWx5IHRvIGJlIGZ1bGx5IGVzdGFibGlzaGVkIHdpdGhpbiBvbmUgdG8gdHdvIHllYXJzLiBIb3dldmVyLCBtb25pdG9yaW5nIG9mIHRoZSBzaXRlIHNob3VsZCBiZSB1bmRlcnRha2VuIGJ5IHRoZSBwcm9wb25lbnQgdG8gZW5zdXJlIHRoYXQgdGhlIGhhYml0YXQgZnVuY3Rpb25zIGVmZmVjdGl2ZWx5LiBEZXBhcnRtZW50IGJlbGlldmVzIGl0IHVubGlrZWx5IHNhbG1vbiBoYXZlIGJlZW4gYWZmZWN0ZWQgYnkgdGhlIHRlbXBvcmFyeSBhbHRlcmF0aW9uLCBhcyBzaW1pbGFyIHJlYXJpbmcgaGFiaXRhdCBleGlzdHMgdXBzdHJlYW0gYW5kIGRvd25zdHJlYW0gb2YgdGhlIHNpdGUuLiAKUGx1cyBhIFNwaWRleSBhbmQgRGVhZHBvb2wgbW92aWUgd291bGQgYmUgbmljZS5Xb3VsZCB5b3UgYXBwcm92ZSB0aGlzIGFjcXVpc2l0aW9uP1llcyA0MCUgaXMgdGhlIGxlZ2FsIGJlbmNobWFyayB0byBhc3N1bWUgYSBkb21pbmFudCBwb3NpdGlvbiBhbmQgdGhhdCBoYXMgbm90IGJlZW4gcmVhY2hlZC4gR2l2ZW4gY29tY2FzdCBpcyBhbHNvIHN0aWxsIGEgbWFqb3IgcGxheWVyIHRoZXJlIGlzIHN0aWxsIGVmZmVjdGl2ZSBjb21wZXRpdGlvbiBpbiBhIGxlZ2FsIHNlbnNlLiBBbHNvIGhhdmluZyBhIGRvbWluYW50IHBvc2l0aW9uIGlzIG5vdCBpbGxlZ2FsLiAKSW4gTWV0cm9pZCBQcmltZSwgaWYgeW91IGdldCBsb3N0IGZvciBhIGxvbmcgdGltZSB0aGUgZ2FtZSB3aWxsIGV2ZW50dWFsbHkgc2F5ICJ1bmNsZSIgYW5kIHlvdXIgbWFwIHdpbGwgdGVsbCB5b3Ugd2hlcmUgdG8gZ28gbmV4dCAoc2F5aW5nIHRoZXJlIHNpZ25pZmljYW50IGFjdGl2aXR5IGluIHRoYXQgYXJlYSkuIEFzIGEgd2ltcHkgTWV0cm9pZCBwbGF5ZXIgd2hvIGxvdmVzIHRoZSBhY3Rpb24gYW5kIHB1enpsZXMgYnV0IGhhdGVzIHdhbmRlcmluZyBhaW1sZXNzbHksIEkgd291bGQgbG92ZSB0aGUgb3B0aW9uIHRvIGFzayB0aGUgZ2FtZSB0byB0ZWxsIG1lIHdoZXJlIHRvIGdvLiBJIGZlZWwgbGlrZSBpZiBaZWxkYSBoYXMgTmF2aSBhbmQgTWFyaW8gaGFzIFN1cGVyIEd1aWRlIEJsb2NrcyBhbmQgc21hcnQgc3RlZXJpbmcsIHRoaXMgbWF5IGJlIHJlYXNvbmFibGUgYXMgbG9uZyBhcyBpdCBub3QgdGhlIGRlZmF1bHQgc2V0dGluZyBvZiB0aGUgZ2FtZS4gCkRvIHlvdSB3YW50IHRvIGhlYXIgc29tZXRoaW5nIGZ1bm55PyBJIGhhdmUgYmVlbiBwbGF5aW5nIHBva2VyIGZvciBvdmVyIGZpZnR5IHllYXJzIGFuZCBwcm9iYWJseSBUZXhhcyBIb2xkZW0gYmVmb3JlIG1hbnkgb2YgeW91IHdlcmUgZXZlbiBib3JuLiBBbGwgdGhhdCB0aW1lIGFuZCBub3Qgb25jZSBoYXZlIEkgY29tZSBhY3Jvc3MgYW55dGhpbmcgdGhhdCByZW1vdGVseSByZXNlbWJsZWQgbXkgb3duIHN0cmF0ZWdpZXMuIApUaGVuIGlmIHlvdSBnZXQgdG8gY2FtcCB3aXRoIHBsZW50eSBvZiBzdW5saWdodCBsZWZ0IHRoZW4ganVzdCBwdXQgaXQgd2hlcmUgaXQgc2VlcyB0aGUgbW9zdCBsaWdodC4gClNvIEknZCBsaWtlIHRvIHBvc3NpYmx5IHR1cm4geW91IG9udG8gdG8gc29tZXRoaW5nIEkndmUgYmVlbiBkb2luZyBhbmQgZ2V0IHlvdXIgaW5zaWdodC4gSSdtIHN1cmUgeW91IGFyZSBmYW1pbGlhciB3aXRoIEVNRFIuIApCdXQsIGlmIHlvdSdyZSByZWFsbHkgaW50byB5b3VyIHBva2VyIGFuZCBjYW4ganVzdGlmeSB0aGUgY29zdCwgdGhlcmUncyBzb21lIGJlYXV0aWZ1bCBsb29raW5nIHBva2VyIHRhYmxlcyB0aGF0IGFyZSBhIGdlbnVpbmUgcGllY2Ugb2YgZnVybml0dXJlLiBUaGV5IGFyZSBub3Qgb25seSB0aGUgYmVzdCB3YXkgdG8gcGxheSwgYnV0IHRoZXkgY2FuIGJlIHF1aXRlIHN0cmlraW5nIGFzIGZ1cm5pdHVyZSBpbiBhIHJlY3JlYXRpb24gcm9vbS4KSSBoYXZlIGEgSG9iYml0IGVkaXRpb24gd2l0aCB0aGUgVG9sa2llbiBpbGx1c3RyYXRpb25zIChhbmQgdGhhdCBnb3JnZW91cyB0aXRsZSB3aXRoIHRoZSBNb3VudGFpbiBldGMuKSwgYW5kIEkgcHJlZmVyIHRoYXQgb25lIG92ZXIgaWxsdXN0cmF0aW9ucyBieSBzb21lb25lIGVsc2UuIFRob3NlIGlsbHVzdHJhdGlvbnMgZ2l2ZSBhIGdyZWF0IGluc2lnaHQgaW50byBob3cgaGUgaW1hZ2luZWQgdGhpbmdzLgpMYW5kb25fUHVuY2hlcyAgMiBwb2ludHMgIHN1Ym1pdHRlZCA1IHllYXJzIGFnbwpJIGp1c3Qgd2lzaCBJIGNvdWxkIGdldCBhd2F5IGJ5IG15c2VsZiBmb3IgdGhyZWUgZGF5cyBzbyBJIGNhbiBoYXZlIG5pY290aW5lIGZpdHMgaW4gcGVhY2UuIApUaGUgcG9pbnQgaXMgaXMgdGhhdCBpdCBpcyByZWFsbHkgY3JhenkgaG93IHVuY2FwcGVkIHlvdXIgZWFybmluZyBwb3RlbnRpYWwgaXMgb24gdGhlIGludGVybmV0LiBUaGV5IGNvdWxkIGhhdmUgeW91dHViZSxtZXJjaCxzcG9uc29ycyxkb25hdGlvbnMsdHdpdGNoIHN1YnMsIGFsbCBhcyBzZXBhcmF0ZSBzb3VyY2VzIG9mIGluY29tZSwgc28gaXQgdmVyeSBoYXJkIHRvIHNpdCBoZXJlIGFuZCBndWVzcyBob3cgbXVjaCB0aGV5IG1ha2UgZXhhY3RseSwgYnV0IGl0IGZhaXJseSBlYXN5IHRvIHNlZSBpdHMgbW9yZSB0aGFuIGFuIE5ITCBwbGF5ZXIuLiAKVGhhdCBpcyBpbXBseWluZyB0aGF0IHRoZSBmaW5hbCBnYW1lIHdhcyBhY3RpdmVseSBkZXZlbG9wZWQgb3ZlciB0aGVzZSBsYXN0IDYgeWVhcnMuIEl0IGVudGlyZWx5IHBvc3NpYmxlIHRoYXQgQmlvd2FyZSBzcGVudCB5ZWFycyB0cnlpbmcgdG8gY29tZSB1cCB3aXRoIGEgY29uY2VwdCB0aGV5IGZlbHQgd2VyZSBwYXNzaW9uYXRlIGFib3V0LCBvciB3b3JrZWQgb24gYSBwcm90b3R5cGUgdGhhdCBkaWRuIGVuZCB1cCBwYW5uaW5nIG91dCBhdCBhbGwuIEZGWFYgd2FzIHRlY2huaWNhbGx5IGluIGRldmVsb3BtZW50IGZvciBvdmVyIDEwIHllYXJzLCBidXQgdGhlIGZpbmFsIGdhbWUgd2UgZW5kZWQgdXAgZ2V0dGluZyB0b29rIGxlc3MgdGhhbiAyIHllYXJzIHRvIGRldmVsb3AuIApDb21iaW5lIHRoZSBpbmdyZWRpZW50cyBhbmQgdXNlIGFzIGEgbWFzc2FnZSBvaWwsIG9yIHB1dCAyIHRlYXNwb29ucyBpbiB5b3VyIGJhdGguIEZlZWxpbmcgZXh0cmF2YWdhbnQ/IFRoZW4gYWRkIDIgZHJvcHMgb2YgeW91ciBjaG9pY2Ugb2YgYW4gZXhwZW5zaXZlIGVzc2VudGlhbCBvaWwgc3VjaCBhcyBqYXNtaW5lIG9yIHJvc2UuIApUaGVzZSBhcmUgb2Z0ZW4gbWFkZSBvZiBhbHVtaW51bSwgd2hpbGUgc29tZSBtb3JlIGV4cGVuc2l2ZSBvbmVzIGFyZSBtYWRlIHVwIG9mIGdyYXBoaXRlLiBPdGhlciBwb3B1bGFyIHBva2VyIGNoaXAgY2FzZXMgYXJlIGFsc28gbWFkZSB1cCBvZiBjYXJib24gZmliZXIsIHdvb2QsIHZpbnlsIGFuZCBsZWF0aGVyLi4gCk5vdyB0aGlzIGlzIGp1c3QgbXkgb3Bpbmlvbiwgb2YgY291cnNlLiAKT3RoZXIgRG5EIHN0cmVhbXMgYXJlIGVpdGhlciBwcm8gYWN0b3JzIGRvaW5nIHBybyBhY3RvciBkcmFtYSAoQ1IpLCBvciBtb3JlIGNvbWVkaWMgKEFJLCBIUSwgRmlsbSBSZXJvbGwpLCBidXQgdGhpcyBnYW1lIGZlbHQgbGlrZSB3aGF0IGl0IHdvdWxkIGJlIGlmIHlvdSB3ZXJlIHRvIHJlY29yZCBhbG1vc3QgYW55IGhvbWUgZ2FtZSwgYW5kIGl0IG1hZGUgaXQgdmVyeSBlbmpveWFibGUuIApNYWlzIGNlIG5lIHNvbnQgcGFzIGxlcyBwYWdlcyBhdXhxdWVsbGVzIGonYXR0cmlidWUgbGUgcGx1cyBkJ2ltcG9ydGFuY2UgcXVpIHNvbnQgY29uc3VsdGVzLiBQYXIgZXhlbXBsZSBsYSBydWJyaXF1ZSBwb2xsdXRpb24gbGVjdHJvbWFnbnRpcXVlIGFycml2ZSBlbiA0OW1lIHBvc2l0aW9uLiAKTG91aXMuIApMaXR0bGVzaHJvb20gIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCkRpc2Vhc2UgaXMgc2VlbiBpbiBsYXJnZSBwYXJ0IGFzIGRpc2hhcm1vbnkgaW4gdGhpcyBpbnRlcm5hbCBlbmVyZ3kgZmxvdywgYW5kIHRoZSBwdXJwb3NlIG9mIGFjdXB1bmN0dXJlIGlzIHRvIHJlc3RvcmUgdGhlIGJhbGFuY2UuIEFjdXB1bmN0dXJpc3RzIG1heSBkbyB0aGlzIGJ5IHVzaW5nIG5lZWRsZXMsIGZpbmdlciBwcmVzc3VyZSwgaGVhdCBzb3VyY2VzLCBvciBvdGhlciBtZXRob2RzIHRvIG1hbmlwdWxhdGUgY2VydGFpbiBzcGVjaWZpYyBwb2ludHMgKG9yIGFjdXBvaW50cykgYWxvbmcgdGhlIG1lcmlkaWFucy4gV2VzdGVybiBzY2llbnRpZmljIHJlc2VhcmNoIGlzIHN0aWxsIGF0IGEgbG9zcyB0byBleHBsYWluIHdoeSBhY3VwdW5jdHVyZSB3b3Jrcy4gCkluIHBva2VyLCB5b3Ugd2lsbCBiZWNvbWUgcHJlZGljdGFibGUuIApTb21ldGhpbmcgZGlmZmVyZW50PyBUcnkgL3IvSW50ZXJuZXRJc1VnbHkuIElmIHlvdSBleGhpYml0IGEgc2ltaWxhciBhZGRpY3RpdmUgbHVzdCBmb3IgaW5mb3JtYXRpb24gYXMgeW91IGRvIGZvciBpbnRlcm5ldCwgd2UgaGlnaGx5IHJlY29tbWVuZCB5b3UgZ28gZ2l2ZSAvci9kYXRhaXNiZWF1dGlmdWwgYSBzdWIgdG9vLgpUaGUgaW1wb3J0YW50IHRoaW5nIGlzIHRvIHBheSBhdHRlbnRpb24gdG8gd2hhdCB5b3UgYXJlIGRvaW5nLiBEb24ndCBqdWRnZSwganVzdCBvYnNlcnZlLiBJZiB5b3UgaGF2ZSBhbiBpbnRlcm5hbCB2b2ljZSBjb21tZW50aW5nIG9uIHdoYXQgeW91IGFyZSBkb2luZywgYXNrIGl0IHZlcnkgbmljZWx5IGlmIGl0IHdpbGwgZ28gYXdheSB1bnRpbCB5b3UgaGF2ZSBmaW5pc2hlZCBtZWRpdGF0aW5nLiBUZWxsIGl0IGEgdGltZSB3aGVuIGl0IGNhbiBjb21lIGJhY2suClZhYW5pIEthcG9vciBzdWZmZXJlZCBiZWNhdXNlIGFmdGVyIHNodWQgZGVzaSByb21hbmNlIGFuZCBUZWx1Z3UgcmVtYWtlIG9mIGJhYWQgYmFhamEgYmFyYWF0aCwgc2hlIGNvdWxkbiBkbyBvdGhlciBmaWxtcyBiZWNhdXNlIHNoZSBzdGlsbCBoYWQgb25lIEhpbmRpIG1vdmllIHdpdGggeXJmIHRvIGNvbXBsZXRlIGhlciBjb250cmFjdCBhbmQgc2hlIHdhc24gZ2V0dGluZyBpdC4gQmVmaWtyZSB0b29rIGEgbG9uZyB0aW1lIHRvIG1ha2UgYW5kIHRoZXJlIHdlcmUgZnJlcXVlbnQgYmxpbmRzIHRoYXQgdmFhbmkgd2FzIHJlZ3VsYXJseSB2aXNpdGluZyB5cmYgb2ZmaWNlIHRvIGdldCBoZXIgbW92aWUgdG8gbW92ZSBhbG9uZy4uIApUaGVuIChTUE9JTEVSIEFMRVJUKSBCZWxsYSBiZWNvbWVzIHByZWduYW50IChoYXZlIHNleCBldmVuIG9uY2UgYW5kLikgYW5kIHRoZSBiYWJ5IGlzIGdvaW5nIHRvIEtJTEwgaGVyIHNpbmNlIGl0IG5vdCBmdWxseSBodW1hbi4uIApNb2Rlc3Rtb25rICAxIHBvaW50ICBzdWJtaXR0ZWQgNCB5ZWFycyBhZ28KV2UgaGVhciBmcm9tIEplc3NlIGlzIG9uZSBzaWRlIG9mIHRoaXMgQlJUIHRoaW5nLiBDb21wbGFpbnRzIHJlbGF0ZSBzcGVjaWZpY2FsbHkgdG8gdGhlIHNpemUgYW5kIHNjYWxlIG9mIHRoZSBwcm9wb3NlZCByYXBpZCB0cmFuc2l0IG5ldHdvcmssIFNwZW5jZSBzYWlkLCBhcmd1aW5nIHJhcGlkbHkgY2hhbmdpbmcgdGVjaG5vbG9neSBtYXkgbWFrZSBCUlQgb2Jzb2xldGUgd2l0aGluIHRoZSBuZXh0IHR3byBkZWNhZGVzLiBBbmQgaGlzIHR3ZWV0IHdoYXQgU3BlbmNlIGRlc2NyaWJlZCBhcyBhIGhhbGYgaGVhcnRlZCBqb2tlIHdhcyBub3Qgc2VyaW91cywgdmlvbGVudCB0aHJlYXQuIApXaGF0IGEgc2xhcCBpbiB0aGUgZmFjZSB0aGF0IG11c3QgaGF2ZSBiZWVuLiAKVGhlbiBzdWRkZW5seSB0aGUgVFYgdHVybmVkIG9mZiBpdHNlbGYsIGFuZCBJIGFsbW9zdCBzaGl0IG15IHBhbnRzLiAKU3BlbnQgdGhlIHdob2xlIGRheSBpbiBNdW1iYWkuLiAKTG9vayBmb3IgYSBjbGFzcyBhdCB5b3VyIGxvY2FsIGd5bSBvciB5b2dhIHN0dWRpbywgb3Igc2VlIGlmIHlvdSBjYW4gam9pbiBhIHN0YW5kYXJkIHlvZ2EgY2xhc3Mgd2l0aCBhIHRlYWNoZXIgd2hvIGNhbiBvZmZlciBtb2RpZmljYXRpb25zIHdoZW4gbmVjZXNzYXJ5LiBZb3UgY2FuIGFsc28gbG9vayBmb3IgRFZEcyBvciBvbmxpbmUgdmlkZW9zIGZvciBhbiBhdCBob21lIHByYWN0aWNlICAganVzdCBtYWtlIHN1cmUgeW91ciBkb2N0b3IgZ2l2ZXMgdGhlIG9rYXkuLiAKVGhlcmUgaGF2ZSBiZWVuIHByb3Rlc3RzIGFnYWluc3QgVHJ1bXAsIGFuZCB0aGVyZSBiZWVuIGEgbG90IG9mIGNlbGVicml0eSBhbmQgbWVkaWEgYW5pbW9zaXR5IGZvY3VzZWQgdG93YXJkcyBoaW0sIGJ1dCBub2JvZHkgc2hvdCBoaW0geWV0LiAKSWYgdGhleSB3ZXJlIGNvb2tpbmcgdGhlIGludGVuZGVkIHdheSwgdGhlbiB0aGV5IHdvdWxkbnQgYmUgY29tcGxhaW5pbmc/PwpTcGVha2luZyB0aHJvdWdoIGEgc3Bva2VzbWFuLCBNciBJdmV5IHNhaWQ6IEkgYW0gb2J2aW91c2x5IGRpc2FwcG9pbnRlZCB3aXRoIHRoaXMganVkZ2UgZGVjaXNpb24uIApBIGxvdCBvZiB0aGF0IGlzIGJlY2F1c2Ugb2YgcHJvcGFnYW5kYSBiZWluZyBzcHJlYWQsIG5vdCBiZWNhdXNlIG9mIHRoZSBpbmRpdmlkdWFsIEFtZXJpY2FucyB0aGF0IGFyZSBhZmZlY3RlZCBieSBpdC4gSGUgbm90IHNheWluZyBvbmUgc2lkZSBpcyByaWdodCBhbmQgb25lIHNpZGUgaXMgd3JvbmcsIGhlIHNheWluZyB0aGF0IHdlIGRpdmlkZWQgYW5kIGl0IGltcG9zc2libGUgZm9yIHVzIHRvIHNlZSBleWUgdG8gZXllLiAKT3VpLCBib24gQmllbiBjb25udWUgZGVzIG1kZWNpbnMgZ3JlY3MgZXQgcm9tYWlucywgbm91cyBkaXQgb24sIGVsbGUgYXBwYXJhdCBjZXBlbmRhbnQgY29tbWUgcmVtZGUgc2Vjb3VyYWJsZSBhdXggcHVsbW9uaXF1ZXMgZXQgYXV0cmVzIGxpdGhpYXNpcXVlcy4uIApUaGVHcmluZGVyc0NsdWIgaGFzIHJlY2VudGx5IHN0YXJ0ZWQgYSAybmQgY2x1YiBjYWxsZWQgOGJpdCBzbyB0aGF0IHdlIGFyZSBpbiBib3RoIG9mIHRoZSAyIGJpZyBVUyBQUFBva2VyIHVuaW9ucyBjdXJyZW50bHkgYW5kIHdlIGNhbiBvZmZlciBvdXIgcGxheWVycyBtb3JlIHRhYmxlIHNlbGVjdGlvbi9nYW1lcy4gClRoaXMgd2FzIGNlbWVudGVkIHdoZW4gc2hlIG1vdmVkIHRvIHN0cmFpZ2h0ZW4gbXkgY29zdHVtZSBhbmQgSSBzdWRkZW5seSBmZWx0IHZlcnksIHZlcnkgaGFwcHksIGFuZCB2ZXJ5LCB2ZXJ5IGVtYmFycmFzc2VkIGF0IHRoZSBzYW1lIHRpbWUuLiAKSXQgbWlnaHQgYmUgZHVlIHRvIGEgbWl4IG9mIGZhY3RvcnMuLiAKNy8xMC4gCkFjaGlldmluZyBiYWxhbmNlIG1lYW5zIG1vcmUgdGhhbiBqdXN0IHBlcmZvcm1pbmcgd2VsbCBpbiBhbGwgdGhyZWUgc3BvcnRzOyBpdCBhbHNvIGV4dGVuZHMgdG8gYmFsYW5jaW5nIHlvdXIgbGlmZSB3aXRoIHRyaWF0aGxvbiB0cmFpbmluZyBhbmQgZmluZGluZyBtZW50YWwgYmFsYW5jZS4gVGhlIHZhcmlldHkgb2YgbXVsdGlzcG9ydCB0cmFpbmluZyBjYW4gaGVscCB0byBicmVhayB0aGUgbW9ub3Rvbnkgb2YgdHJhaW5pbmcgZm9yIGp1c3Qgb25lIHNwb3J0LCBhbmQgdGhpcyBoZWxwcyBrZWVwIGF0aGxldGVzIGludGVyZXN0ZWQgYW5kIGVuZ2FnZWQuIApUaGVyZSdzIGEgcHJldHR5IGRlY2VudCBhbnN3ZXIgYnkgaGVyZSB3aGljaCBydW5zIHRocm91Z2ggdGhlIGRldGFpbHMgb2YgY2FsY3VsYXRpbmcgc3BlY2lmaWMgcHJvYmFiaWxpdGllcyBpZiB5b3Ugd2FudCB0byB2YWxpZGF0ZSB0aGlzIChvciBhbnkgb3RoZXIpIG1hdGNodXAsIG9yIHlvdSBjb3VsZCBqdXN0IHVzZSBzb21ldGhpbmcgbGlrZSBQcm9Qb2tlclRvb2xzLiBJZiB5b3UncmUgZGVzcGVyYXRlIGZvciBhIG1hbnVhbCBjYWxjdWxhdGlvbiB0byBzaG93IHlvdSBob3cgaXQncyBkb25lLCBkcm9wIGEgY29tbWVudCBhbmQgSSdsbCBoYXZlIGEgYmFzaCB3aGVuIEkgaGF2ZSBhIGZldyBtaW51dGVzLgpGb3IgbW9yZSBpbmZvcm1hdGlvbiBvbiBob3cgeW91IGNhbiBkaXNhYmxlIGNvb2tpZXMsIHBsZWFzZSBzZWUgIllvdXIgQ2hvaWNlcyIgYmVsb3cuLiAKQW5vdGhlciByZWFzb24gdGhpcyBnYW1lIGhhcyBzdXN0YWluZWQgYW5kIGluY3JlYXNlZCBpbiBpdHMgbnVtYmVyIG9mIHBsYXllcnMsIGlzIGJlY2F1c2Ugb2YgdGhlIGluY3JlYXNpbmcgYWNjZXNzaWJpbGl0eSBvZiBvbmxpbmUgYmxhY2tqYWNrIGdhbWVzLiAKTUVETElORSAoZnJvbSAxOTY2IHRvIDE5OTgpLCBFTUJBU0UgKGZyb20gMTk3NCB0byAxOTk4KSwgQ0lOQUhMLCBDUkFDLCBhbmQgTUFOVElTIHdlcmUgc2VhcmNoZWQuIApTbW9raW5nIGluY3JlYXNlcyBhbnhpZXR5IGFuZCBzdHJlc3MuIApJdCBhcHBlYXJzIGFzIHRob3VnaCBoZXIgbGVncyBzd2l2ZWwsIHJhdGhlciB0aGFuIGJlbmQuIApCZXNpZGVzIHRoZSBsZWcgdXAgeW91IGhhdmUgb24gaGVyIGZyb20gbm90IGJlaW5nIGEgZGVyYW5nZWQgZXZpbCBwZXJzb24sIHlvdSBoYXZlIGEgbGVnIHVwIGJ5IGhhdmluZyBsZWdhbCwgY291cnQgYWRtaXNzaWJsZSBldmlkZW5jZSB0aGF0IHNoZSBpcyBhIGRlcmFuZ2VkIGV2aWwgcGVyc29uIHdobyBwbGFucyB0byBkbyBtb3JlIGV2aWwuIFdoeT8gQmVjYXVzZSBhcyBtdWNoIGFzIHNoZSdzIGV2aWwsIHNoZSdzIG5vdCB0aGF0IHNtYXJ0LiAKVGhlIGdyYWlucyB3b3VsZCBiZSBzZXBhcmF0ZWQgYW5kIHRoZSBkaXNoIG92ZXJhbGwgd291bGQgaGF2ZSBhIGxvdCBtb3JlIHRleHR1cmUgYW5kICJjb29rZWQvc2VhcmVkIiBmbGF2b3IuSW5zdGVhZCBvZiBkcnkgdG9hc3RpbmcsIHlvdSBjb3VsZCBhbHNvIGFkZCBzb21lIG9pbCBhbmQgc2F1dGVlIGl0LldoaWxlIGFjYWRlbWlhIGFkbWl0dGVkbHkgaGFzIG1hbnkgbGFyZ2UgZmxhd3MgYW5kIEkgYWJzb2x1dGVseSBkaWRuJ3QgaGF2ZSBhIGZ1biB0aW1lIG92ZXJhbGwsIEkgZG8gdGhpbmsgaXQgd2FzIGEgcmVhbGx5IGFtYXppbmcgbGVhcm5pbmcgZXhwZXJpZW5jZSBhbmQgSSB0aGluayBpdCBhY2hpZXZlZCB0aGUgZ29hbHMgb2YgdGhlIHByb2dyYW0uIAoiVGhleSdyZSBub3QgdXN1YWxseSBoZXJlLCIgYSBmYXJtZXIgc2FpZCBhcyBoZSBzaGFycGVuZWQgYSBibGFkZS4gIlRoZXkncmUgb25seSBoZXJlIGZvciB0aGUgZWxlY3Rpb24sIGFuZCBhZnRlciB0aGF0LCB0aGV5IGxlYXZlIGFnYWluLiIKVElMIHRoYXQgYSBzdXBlcm1hcmtldCB3YXMgY2xvc2VkIGRvd24gc28gdGhhdCBNaWNoYWVsIEphY2tzb24gY291bGQgZnVsZmlsbCBoaXMgZHJlYW0gdG8gZ28gdG8gYSBzdXBlcm1hcmtldCBhbmQgc2hvcCBsaWtlIGV2ZXJ5Ym9keSBlbHNlIGFuZCBleHBlcmllbmNlIHdoYXQgaXQgd2FzIGxpa2UgdG8gInB1dCB0aGluZ3MgaW4gYSBiYXNrZXQuIiBJdCB3YXMgcG9wdWxhdGVkIHdpdGggaGlzIGZyaWVuZHMgYW5kIGZhbWlseSBwcmV0ZW5kaW5nIHRvIGJlIGZlbGxvdyBzaG9wcGVycyBhbmQgZW1wbG95ZWVzLiBIaXMgZnJpZW5kIGhhcHBlbmVkIHRvIG93biBhIHN1cGVybWFya2V0IGFuZCBoZWFyZCBvbiBhbiBpbnRlcnZpZXcgTWljaGFlbCBnYXZlIHRoYXQgaGUgd2lzaGVkIGhlIGNvdWxkIGp1c3QgaGF2ZSBhIG5vcm1hbCBkYXkgYXQgdGhlIHN0b3JlIGxpa2UgZXZlcnlvbmUgZWxzZS4gU28gdGhpcyB3YXMgc2V0IHVwIGFzIGEgZ2lmdCBiYXNpY2FsbHkuIApBIHZpZGVvIHdvdWxkIGRyb3duIHRoZW0gb3V0LCB5b3Ugc2F5PyBXZWxsIHllcywgaWYgdGhlIGluIGZsaWdodCBlbnRlcnRhaW5tZW50IHdhcyB3b3JraW5nLCB3aGljaCBpdCB3YXMgTk9ULiBXZW5kaSBzYXQgbmV4dCB0byBhIG1hbiB3aG8gYWx0ZXJuYXRlbHkgbG9va2VkIG91dCB0aGUgd2luZG93IHdoaWxlIGNvdmVyaW5nIGhpcyBoZWFkIHdpdGggYSBibGFua2V0IGFuZCBwbGF5ZWQgdGhlIGRydW1zIG9uIGhpcyBpUG9kIHRvdWNoIHdpdGggaGlzIHRodW1icy4gCiJFdmVuIGlmIHJ1bGVzIGFib3V0IG5vdCBzZWxsaW5nIGFsY29ob2wgdG8gcGVvcGxlIHdpdGhvdXQgSUQgd2VyZSBmb2xsb3dlZCwgdGhlIGNvbXBhbnkgc2F3IHJlYXNvbiB0byBiZWxpZXZlIHRoZSBjdXN0b21lciBpbnRlcmFjdGlvbiB3YXMgbGVzcyB0aGFuIGdvb2QgYW5kIHRoYXQgdGhlIGVtcGxveWVlIG1pZ2h0IGhhdmUgaGFuZGxlZCBpdCBiZXR0ZXIiICAgYSB2ZXJ5IGJpYXNlZCBhc3N1bXB0aW9uLGFuZCBJIGNvdW50ZXIgeW91IHdpdGggdGhlIGFzc3VtcHRpb24sdGhhdCB0aGUgbWFuYWdlciBpbmNsdWRlZCB0aGF0IHRoZSBlbXBsb3llZSBoYW5kbGVkIHRoZSBzaXR1YXRpb24gbW9yZSB0aGVuIGdvb2QgYW5kIHRoYXQgdGhlIGVtcGxveWVlIGNvdWxkbiBoYW5kbGUgaXQgYmV0dGVyLGluIGhpcyByZXBvcnQKRXZlcnkgdGltZSBpIHdhbGsgaW50byBhIHJvb20gYWZ0ZXIgMTAgeWVhcnMsIGkgc3RpbGwgd2FudCB0byBvcGVuIHRoZSB3aW5kb3dzLiAKTGFzdCBtb250aCBMb3VpcyBOLiAKVGhlIHJpdmVyIGhhcyBwYXRocyB1c2VkIGJ5IGV2ZXJ5b25lIGdvaW5nIHRvIHRoZWlyIGZhdm9yaXRlIHNwb3QgdG8gZmlzaC4gCkkgd29ya2VkIGhhcmQgZm9yIHlvdSwgaGFyZGVyIHRoYW4gSSBldmVyIGRpZCBhbnl3aGVyZSBlbHNlLiBJIGhhZCBzb21ldGhpbmcgdG8gcHJvdmUgYW5kIHlvdSBnYXZlIG1lIHRoZSBmcmVlZG9tIHRvIGRvIHRoYXQuIEkgd2F0Y2hlZCB5b3UgZGVhbCB3aXRoIHBlcnNvbmFsIHRyYWdlZHksIGFuZCBJIGNvdWxkbid0IGhlbHAgYnV0IGJlIGFtYXplZC4gClllcywgdGhleSBkaWQgSVAgYmFucywgYnV0IHRob3NlIGNhbiBiZSBwcmV0dHkgZWFzeSB0byBjaXJjdW1uYXZpZ2F0ZS4gVGhleSBoYWQgZmxhZ2dpbmcgc3lzdGVtcy4gRm9yIGEgd2hpbGUgdGhleSB0cmllZCB0byBoaXJlIHRlYW1zIG9mIG1vZGVyYXRvcnMsIGJ1dCB0aGF0IGdvdCBleHBlbnNpdmUuIApZb3Uga25vdywgYmFjayBpbiBteSBkYXkgd2hlbiB0aGUgcGFyZW50cyB3ZXJlIHBpY2tpbmcgdXAsIHRoZSBzY2hvb2wgbGl0ZXJhbGx5IGhhbmRlZCBvdXQgYmFkZ2VzIGZvciBwYXJlbnRzIHRvIHB1dCBpbiB0aGVpciB2ZWhpY2xlcywgbGlrZSBhIGxpdHRsZSB0aGluZyB0byBnbyBpbiB0aGUgZGFzaGJvYXJkIHdpdGggdGhlIGtpZCBuYW1lIGFuZCBncmFkZS4gClRoZSByZWxheGF0aW9uIGJlZ2lucyB0aGUgbW9tZW50IHlvdSBlbnRlciB0aGUgZG9vciBhcyB0aGUgc3RhZmYgd2VsY29tZXMgeW91IGluIEFzaWFuIHN0eWxlIHdpdGggTmFtYXN0ZSwgYSBIaW5kaSBncmVldGluZyBvZmZlcmVkIHdpdGggaGFuZHMgaW4gYSBwcmF5ZXIgcG9zaXRpb24gYW5kIGEgcXVpY2sgYm93IGZvcndhcmQuLiAKQWthIEFjZSwgb25seSBOaWVjZSwgTmlja2llIGFuZCBTaGF3biwgQnJpYW4gYW5kIEFsbGkgYW5kIEpvc2h1YSwgWmFjaGFyeSwgSmFyb2QgYW5kIGFsc28gSmFtaWUgYW5kIFBoaWxpcC4gCkl0IHNlZW1zIGluaHVtYW5lIHRvIHRoZSBwYXJlbnRzIGFuZCB0aGUgY2hpbGQsIGFuZCBlc3BlY2lhbGx5IGZvciB0aGUgd29tYW4gd2hvIGhhcyBiZWVuIHRocm91Z2ggc28gbXVjaCBwaHlzaWNhbGx5IGFuZCBlbW90aW9uYWxseS4gClRvIHByZXZlbnQgam9iIGxvc3NlcyBhIHNhZ2EgdGhhdCBoYXMgYWxyZWFkeSBjb3N0IGhpbSBhIGNhYmluZXQgbWluaXN0ZXIgYW5kIGhpcyBwcmluY2lwYWwgc2VjcmV0YXJ5LiAKSG90ZWwgSW5kaWdvIGZpcnN0IGxhdW5jaGVkIGluIEF0bGFudGEgaW4gMjAwNC4gTGFzdCB5ZWFyIEhvdGVsIEluZGlnbyBjYW1lIHRvIEV1cm9wZSB3aGVuIHRoZSBIb3RlbCBJbmRpZ28gTG9uZG9uIFBhZGRpbmd0b24gb3BlbmVkLiBUaGUgc2Vjb25kIEhvdGVsIEluZGlnbyBpbiBFdXJvcGUsIGluIExvbmRvbiBUb3dlciBIaWxsIG9wZW5lZCBlYXJsaWVyIHRoaXMgbW9udGguIApCeSB0aGUgZW5kIHRoZSBwcm90YWdvbmlzdCB3YXMgYmFjayB0byBpbnRlcnByZXRpdmUgeW9nYSBkYW5jaW5nIGluIGEgY2FmZXRlcmlhIHdpdGggY2hpbGRyZW4gc2hlIGJyYWlud2FzaGVkIHRoZSBzcGlyaXQgb2YgVGFpIENoaSBpbnRvLCBpbiBob3BlcyBvZiBjb25qdXJpbmcgc29tZSBIYXJyeSBQb3R0ZXIgZ29lcyB0byBCb2xseXdvb2Qgc29sdXRpb24gdG8gYSBzY2hvb2wgc2hvb3RlciAoSSB0aGluaz8pLiAKSSd2ZSB0cmllZCBleHBsYWluaW5nIHRvIG15IHBhcmVudHMgaG93IHlvdSBjYW4ndCBqdXN0IHdhbGsgaW50byBhIGJ1c2luZXNzIGFuZCBwaHlzaWNhbGx5IGhhbmQgdGhlbSBhIHJlc3VtZSBhbmQgdGhlbiBleHBlY3QgYSBqb2IgYmVjYXVzZSB5b3Ugc2hvd2VkICJpbml0aWF0aXZlIi4gSWYgeW91IHRyeSB0aGF0IGluIHRoZSB3b3JsZCBub3cgeW91IHR5cGljYWxseSBnZXQgYSByZXNwb25zZSBvZiAicGxlYXNlIGdvIG9uIG91ciB3ZWJzaXRlL2pvYiBwb3J0YWwgYW5kIGZpbGwgb3V0IHRoZSBmb3JtIi4uIApWb2x1bnRlZXIgd29tZW4gYWdlZCAxOCAyMiBhbmQgbm90IHVzaW5nIGhvcm1vbmFsIGNvbnRyYWNlcHRpdmVzIHdlcmUgcmVjcnVpdGVkIGR1cmluZyBzdW1tZXIgYW5kIHdpbnRlci4gVGhleSBwcm92aWRlZCBkZW1vZ3JhcGhpYyBhbmQgbGlmZXN0eWxlIGluZm9ybWF0aW9uIGFuZCBhIGJsb29kIHNhbXBsZS4gCkFsbW9zdCBub25jaGFsYW50LiBXaGF0IGRpZCBzaGUgZG8gd2l0aCB0aGUgYmFieT8gT24gYSBtaWR3aW50ZXIgTW9uZGF5IG1vcm5pbmcgbmVhcmx5IG5pbmUgeWVhcnMgbGF0ZXIsIHJlcG9ydGVycyBmcm9tIG1ham9yIG5ld3NwYXBlcnMsIHRlbGV2aXNpb24gbmV0d29ya3MgYW5kIHJhZGlvIHN0YXRpb25zIGFyZSBnYXRoZXJlZCBhdCBXZXN0bWVhZCBDb3JvbmVycyBDb3VydCBpbiB3ZXN0ZXJuIFN5ZG5leSBpbiB0aGUgaG9wZSBvZiBmaW5kaW5nIG91dC4gClNtb2tlIGJpbGxvd2luZyBmcm9tIGEgbWFuaG9sZSwgY2FwdHVyZWQgaW4gaW5jcmVkaWJsZSBob21lIHZpZGVvLCBmaWxsZWQgdGhlIGFpciBhdCA1dGggYW5kIEJyb2FkIFN0cmVldHMgZG93bnRvd24uIFRoZW4sIGFuIGV4cGxvc2lvbiBlcnVwdGVkIHRoYXQgd2l0bmVzc2VzIHNheSBsaXRlcmFsbHkgc2hvb2sgbmVhcmJ5IGJ1aWxkaW5ncy4gT25lIGRlc2NyaWJlcyB0aGUgY292ZXIgIndlbnQgYSBmZXcgZmVldCBpbiB0aGUgYWlyIGp1c3QgbGlrZSBhIHBva2VyIGNoaXAgZmxpcHBpbmcgZW5kIG92ZXIgZW5kLiIKQXMgbG9uZyBhcyBteSBhY3Rpb25zIGFyZSBhdXRoZW50aWMgYW5kIHNraWxsZnVsIChjbG9zZSBjYWxsIHRobyB3dGggdGhhdCBwb2tlciBkb3VjaGUgbm96emxlKSwgSSBqdXN0IHZpZXcgbXkgZmVlbGluZ3Mgd3RoIGEgc2Vuc2Ugb2YgY3VyaW9zaXR5IGFzIHRoZXkgYXJpc2UgYW5kIGluZXZpdGFibHkgcGFzcy4gCk1vcmVvdmVyLCBkZXNwaXRlIHRoZSBtb3ZpZSB0aXRsZSwgQXNpYW4gaXNuIGEgbW9ub2xpdGhpYyBpZGVudGl0eSB0aGF0IGVhc2llciB0byB1bmRlcnN0YW5kIGZyb20gdGhlIHZhbnRhZ2UgcG9pbnQgb2YgYSBjb3Ntb3BvbGl0YW4gcGxhY2UgbGlrZSBTaW5nYXBvcmUsIHdoaWNoIHNlcnZlcyBhcyBhIG5leHVzIGZvciBtYW55IEFzaWFuIGV4cGVyaWVuY2VzLiBCdXQgSG9sbHl3b29kIGhhcyB0ZW5kZWQgdG8gdHJlYXQgaXQgYXMgb25lIGNhdGVnb3J5LiBLb3JlYW4gaXMgZGlmZmVyZW50IHRoYW4gQ2hpbmVzZSwgd2hpY2ggaXMgZGlmZmVyZW50IGZyb20gdGhlIFZpZXRuYW1lc2UgY3VsdHVyZSwgYnV0IHRoZSB3YXkgdGhlIFtBbWVyaWNhbl0gY3VsdHVyZSBoYXMgdHJlYXRlZCB1cyBpcyBhIHBvaW50IHRoYXQgd2UgY2FuIHByb2JhYmx5IGZpbmQgc29tZSBjb21tb24gZ3JvdW5kIG9uLCBXdSBzYXlzLiAKQnV0IGluIHRoZSBlbmQgSSBzZWVuIGxvdHMgb2Ygd2VpcmQgc3R1ZmYgaGFwcGVuIGluIGRhdGEgY2VudGVycy4gCk9uZSB0aW1lIEkgY2FsbGVkIHVwIGFuIEFTTSBiZWNhdXNlIGEgY3VzdG9tZXIgd2FzIGJ1dHRodXJ0IEkgd2FzbnQgdGFraW5nIGFueW1vcmUgcGVvcGxlIG9uIGEgY2xvc2VkIHJlZ2lzdGVyIEkgd2FzIGp1c3QgaGVscGluZyBvdXQgb24sIGNsYWltaW5nIEkgd2FzICJydWRlIiBmb3IgdGFraW5nIHBlb3BsZSB3YWl0aW5nIGluIGxpbmUgZm9yIGEgd2hpbGUgYW5kIG5vdCBoZXIgd2hvIGp1c3QgY2FtZSB1cC4gQ29udmVyc2F0aW9uIHdlbnQgZG93biBzb21ldGhpbmcgbGlrZSB0aGlzIGFmdGVyIHRoZSB0eXBpY2FsICJJIG5lZWQgdG8gc3BlYWsgdG8geW91ciBtYW5hZ2VyIgpIZSBzYWlkIHNpZ25pZmljYW50bHkgbW9yZSBpbiB0aGUgdHYgYWRhcHRhdGlvbiB0aGFuIGluIHRoZSBub3ZlbC4gCldoZW4gc29tZW9uZSBjdXRzIHRoZWlyIHBpbmt5IG9mZiB3aXRoIGEgdGFibGUgc2F3IHdlIGRvbid0IGJsYW1lIHRoZSBwZW9wbGUgd2hvIG1hZGUgdGhlIHNhdywgd2UgYmxhbWUgdGhlIGlkaW90IHdobyBkaWRuJ3Qga25vdyBob3cgdG8gdXNlIGl0LCBzYW1lIHdpdGggdmVoaWNsZXMuIApWaWVsbGVpY2h0IHdvbGx0ZSBzaWUgZG9ydCBWZXJ3YW5kdGUgYmVzdWNoZW4gdW5kIGJlaSBGbHVjaHQgaGVsZmVuIGluIFdlc3Rlbj8gS1AgYWJlciBlcyBnZWh0IG1pciBhdWNoIG5pY2h0IGFuLiAKU2l4dHkgc2l4IHBlciBjZW50IG9mIHRob3NlIHdpdGggc2F2aW5nIHJlZ3JldCByZXRpcmVlcyB3aG8gd2lzaGVkIHRoZXkgaGFkIHNhdmVkIG1vcmUgaWRlbnRpZmllZCBhIG5lZ2F0aXZlIHNob2NrIGR1cmluZyB0aGVpciB3b3JraW5nIHllYXJzIGFzIGEgY2F1c2UgZm9yIGEgc2F2aW5nIHNob3J0ZmFsbC4gVGhpcyBpcyBub3QgdG8gc2F5IHRoYXQgdGhvc2Ugd2l0aG91dCBzYXZpbmcgcmVncmV0IGRpZCBub3QgaGF2ZSBzaW1pbGFyIHNob2NrcyBkdXJpbmcgdGhlaXIgbGl2ZXMsIGJ1dCB0aGUgaW5jaWRlbmNlIG9mIG5lZ2F0aXZlIHNob2NrcyB3YXMgbW9yZSB0aGFuIDUwIHBlciBjZW50IGhpZ2hlciBmb3IgcmVncmV0ZnVsIHJldGlyZWVzLiBUaGlzIHN1Z2dlc3RzIHRoYXQgb25jZSBvciB0d2ljZSBpbiBhIGxpZmV0aW1lIHN1cnByaXNlcyBtYXkgYmUgbW9yZSB0byBibGFtZSB0aGFuIHNpbXBseSBzYXZpbmcgdG9vIGxpdHRsZSBmcm9tIGVhY2ggcGF5Y2hlcXVlLi4gClRoYXQgbWVhbnMgdGhhdCBpdCBpc24ndCB0aGUgcmlnaHQgcGxhY2UgZm9yIG9mZmVyaW5nIG1lcmNoYW5kaXNlLCBldmVuIGZhbiByZWxhdGVkIG1lcmNoYW5kaXNlLiAKSXQgc2VlbXMgeW91IG1vc3RseSBoZXJlIHRvIHN5bXBhdGhpemUgd2l0aCB0aGUgc2VuZGVycyBvZiBpbmFwcHJvcHJpYXRlIG1lc3NhZ2VzIG9yIGNvbXBsYWluLi4gCkhlIHdhc24ndCByZWFkeSB0byBzZXR0bGUgZG93biBhbnl0aW1lIHNvb24uIApIZSBnZXRzIHNvIGhhcHB5IHRhbGtpbmcgYWJvdXQgaXQgdGhhdCBJIGRvbiBrbm93IHdoYXQgdG8gc2F5IGFmdGVyd2FyZHMuIEkganVzdCBnZXQgc2FkIGFib3V0IGl0LiAKQnV0IGZvciBhbGwgdGhlIHdlYWx0aCBhbmQgZXhjaXRlbWVudCBvZiB0aGF0IGxpZmVzdHlsZSwgdGhlcmUgd2FzIGEgdmVyeSBkYXJrIHNpZGUuIFNoZSB3YXMgYmVhdGVuIGJ5IHRoZSBSdXNzaWFuIG1hZmlhLCBzdGFydGVkIHVzaW5nIGRydWdzIGFuZCBoYWQgaGVyIGFzc2V0cyBzZWl6ZWQgYWZ0ZXIgYSAyMDExIEZCSSByYWlkLgoyMiBGZWIgMjAxNSAuIERvd25sb2FkIGNlcmFtYWggYWdhbWEgSXNsYW0gTmFzaWhhdCB0ZW50YW5nIEtlbWF0aWFuIGRhbiBLaWF0S2lhdCBNZW5naXNpIFdha3R1IG9sZWggVXN0YWR6IFlhemlkIEFiZHVsIFFhZGlyIEphd2FzLiAKTXVsdGlwbGUgZnJlcXVlbmN5IHByb3RvY29scy4iQSBudW1iZXIgb2YgdXMgYXJlIHByZXNzaW5nIGZvciB0cmVhdG1lbnQgc29mdHdhcmUgYmFzZWQgb24gdGFyZ2V0IGRvc2UgcmF0aGVyIHRoYW4gZnJlcXVlbmN5LiAKKSBPcmlnaW5hbHRleHRlIGF1cyBkZW0gRSBNYWlsIGRlciBwaHlzaW9zd2lzcyB2b20gMTUuNS4yMDE0S2FudG9uYWwgZ2VyZWdlbHQgaXN0IGhpbmdlZ2VuIGRlciBNdWx0aXBsaWthdG9yLiBKZSBuYWNoIEthbnRvbiBpc3Qvd2FyIGRpZXNlciBiZWkgMC44NiBiaXMgMS4wMy4gRGllIHBoeXNpb3N3aXNzIGhhdCBzaWNoIGRhZnIgZWluZ2VzZXR6dCBkYXNzIGRpZXNlciBNdWx0aXBsaWthdG9yIChrYW50b25hbGVyIFRheHB1bmt0d2VydCkgZnIgYWxsZSBNaXRnbGllZGVyIGVyaGh0IHdpcmQuIApUaGUgZGV0b3hpZmljYXRpb24gc2VjcmV0IG9mIGhvbmV5IG1hc3NhZ2UgbGllcyBpbiB0aGUgaGVhbGluZyBwb3dlciBvZiBob25leSBpbiBjb21iaW5hdGlvbiB3aXRoIHRoZSBlZmZlY3RzIG9mIGEgJ3B1bXBpbmcgb3V0JyBtYXNzYWdlIHRlY2huaXF1ZSBhbmQgdGhlIHBvd2VyZnVsIHN0cmVzcyByZWxpZXZpbmcgcmVmbGV4IHRoZXJhcHkuClNoYWRvd2JhbiBtZWFucyB0aGVpciBjb21tZW50cyBkb24gYXBwZWFyIHdoZW4gdGhleSBwb3N0LiAKSW4gZWxpbWluYXRpbmcgc3BlY2lmaWMgZm9vZCBhbmQgcG9ydGlvbiByZWNvbW1lbmRhdGlvbnMsIHRoZSBndWlkZSBubyBsb25nZXIgbGlzdHMgbWlsayBhbmQgZGFpcnkgcHJvZHVjdHMgYXMgYSBkaXN0aW5jdCBmb29kIGdyb3VwLiBUaGUgcHJldmlvdXMgZ3VpZGUgc2FpZCBDYW5hZGlhbnMgc2hvdWxkIGNvbnN1bWUgdHdvIHRvIGZvdXIgIm1pbGsgYW5kIGFsdGVybmF0aXZlcyIgc2VydmluZ3MgYSBkYXksIGRlcGVuZGluZyBvbiB0aGVpciBhZ2UuCiJEZWFsaW4nIGZvciBEb2dzIGlzIG91ciBsYXJnZXN0IGZ1bmRyYWlzZXIsIiBzYWlkIFRpbSBIYXJyaW5ndG9uLCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgVGhlIEFiaWxpdHkgQ2VudGVyLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVUSEUgIkVra2Egb2Ygc2V4IiBvcGVuZWQgaXRzIGRvb3JzIHRvIEJyaXNiYW5lIHRoaXMgd2Vla2VuZCBhbmQgd2FzIG1ldCB3aXRoIGl0cyBiaWdnZXN0IGNyb3dkcyBvbiByZWNvcmQuIE1vcmUgdGhhbiA0MCwwMDAgcGVvcGxlIHBhaWQgdGhlaXIgd2F5IGludG8gdGhlIHdvcmxkIGJpZ2dlc3QgYWR1bHQgbGlmZXN0eWxlIHNob3cgYXQgdGhlIENvbnZlbnRpb24gQ2VudHJlLCBkYXp6bGVkIGJ5IHBvcm4gc3RhcnMsIHN0cmlwcGVycywgc2hvd2JhZ3MgYW5kIHNpZGVzaG93IGFsbGV5LiBIZWF2eSBxdWV1ZXMgZm9yIHRoZSBTZXggVHJhaW4gd2VyZSBtYXRjaGVkIG9ubHkgYnkgdGhlIGNyb3dkcyBnYXRoZXJlZCBhcm91bmQgdGhlIGJyYXZlIHBhcnRpY2lwYW50cyBvZiBzdHJpcCBwb2tlciwgd2hpbGUgcG9ybiBzdGFycyBMZXhpIEJlbGxlIGFuZCBBbGV4aXMgVGV4aXMgZGlkbiBoYXZlIHRpbWUgdG8gcHV0IHRoZWlyIGJyZWFzdHMgYXdheSwgc28gaGVhdnkgd2FzIHRoZSBkZW1hbmQgZm9yIGEgcGljdHVyZSB3aXRoIHRoZW0uIFRvcCBvZiBtYW55IHBlb3BsZSBsaXN0IHdhcyBhIHBob3RvIHdpdGggTWljaGVsbGUgIkJvbWJzaGVsbCIgTWNHZWUsIHRoZSBBbWVyaWNhbiBhZHVsdCBlbnRlcnRhaW5lciBhbmQgbWlzdHJlc3Mgd2hvIHNwbGl0IEhvbGx5d29vZCBhY3RyZXNzIFNhbmRyYSBCdWxsb2NrIGZyb20gaGVyIGJhZCBib3kgaHVzYmFuZCBKZXNzZSBKYW1lcy4gRGVzcGl0ZSB0aGUgaG9tZSB3cmVja2VyIHRhZywgTWNHZWUgYXR0cmFjdGVkIHBsZW50eSBvZiBjb3VwbGVzIGtlZW4gZm9yIGEgcGhvdG8uICJJIGxvdmUgd2hhdCBJIGRvLiBUaGlzIGlzIHNvIGZ1bi4gQSBsb3Qgb2YgcGVvcGxlIGhhdmUgY29tZSB0byBzZWUgbWUgb3V0IG9mIGN1cmlvc2l0eSBhbmQgdGhleSBiZWVuIHN1cnByaXNlZCBob3cgbmljZSBJIGFtLCIgc2hlIGxhdWdoZWQuICJUaGV5IHRoaW5rIEkgZ29pbmcgdG8gYmUgYW4gYXdmdWwsIG1lYW4gcGVyc29uLiIgUXVlZW5zbGFuZGVycyBhcmUgYnkgZmFyIHRoZSBtb3N0IGVudGh1c2lhc3RpYyBmb3IgU2V4cG8gaW4gQXVzdHJhbGlhLCBzYWlkIHRoZSBTZXhwbyBnZW5lcmFsIG1hbmFnZXIsIFJvYiBHb2R3aW4sIGFkZGluZyB0aGV5IGJvbWJhcmQgc3RhZmYgd2l0aCBlbWFpbCBpbnF1aXJpZXMgbW9udGhzIGJlZm9yZSBpdCBhcnJpdmVzLgpQYXRyaWNrIExFTUFTTEUsIE1tZSBDYXRoZXJpbmUgTEVNT1JUT04sIE1NLiAKV2Ugd291bGQgaGF2ZSBzZXQgdGhlIHByaWNlIGxvd2VyIGlmIHdlIGNvdWxkLiAKQm9yZGVyLiAKTGVhcm5pbmcgUGljdHVyZXMgQnJlYXN0IENhbmNlciBBcm15IG9mIFdvbWVuISBMZXQncyBUYWxrIEFib3V0IE9iYW1hIEFib3J0aW9uIChwdXQgeW91ciBzaGllbGRzIHVwISkgV2hhdCdzIGluIGEgIllvbmkiPyBWQkFDICh3aXRoIGEgd2hpZmYgb2YgcGl0KSBNeSBQdXBwaWVzIFZpZXcgRnJvbSBBYm92ZSBPcmdhc21pYyBCaXJ0aCBRdWVzdGlvbnMgQW5zd2VyczogSG9tZWJpcnRoIEJpcnRoIFBsYW4gRG9pbmcgU3dpbW1pbmdseSBNZXRhdGFyc2FsIE1hbmlhIFNlbmRpbmcgSXQgQWxsIFBhY2tpbmcgV2F0ZXIgV29ya3MgUGFsaW4gUGFsbCAgIEZhbWlseSBpcyBOT1Qgb2ZmIGxpbWl0cyBJdCdzIFNlcHRlbWJlci4gCkl0IG5vdyBldm9sdmVkIGludG8gYmVnZ2luZyB5b3VyIGFjcXVhaW50YW5jZXMgYW5kIG9mdGVuIHRvdGFsIHN0cmFuZ2VycyBmb3IgbW9uZXkgdG8gcGF5IGZvciB5b3VyICQyMDAwIGRyZXNzIGFuZCAkODAwMCBvcGVuIGJhci4gVmVyeSBvZnRlbiB0aGUgY291cGxlIGFyZSB3ZWxsIGludG8gdGhlaXIgY2FyZWVycyBvciBhbHJlYWR5IG93biBhIGJpZyBuZXcgaG91c2UgICBub3QgZXhhY3RseSBmaXR0aW5nIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgeW91bmcgYW5kIGp1c3Qgc3RhcnRpbmcgb3V0IGNvdXBsZXMgc29jaWFscyB1c2VkIHRvIGJlIGZvci4gSSBmaW5kIGl0IHRvdGFsbHkgcmlkaWN1bG91cyBhbmQgSSB3YXMgYm9ybiBoZXJlLi4gClRoZSBwYXRpZW50IHByZXNlbnRzIHdpdGggaW5jcmVhc2VkIHNlbnNpdGl2aXR5IHRvIHNpdHRpbmcsIGF3a3dhcmQgcG9zdHVyZXMsIG9yIGluY3JlYXNlZCBzZW5zaXRpdml0eSB0byBjZXJ0YWluIG1vdmVtZW50cyBvciB1bmV4cGVjdGVkIG1vdmVtZW50cy4KQSBOQVMgaXMgYSBsaXR0bGUgYm94IHdpdGggNCBvciA1IGhhcmQgZHJpdmVzIGluIGl0IHRoYXQgY29ubmVjdHMgdG8gYSByZWd1bGFyIG5ldHdvcmsgdXNpbmcgZXRoZXJuZXQgYW5kIFRDUC9JUC4gQSBTdG9yYWdlIEFyZWEgTmV0d29yayBvbiB0aGUgbW92aWUgcHJvZHVjdGlvbiBsZXZlbCB3b3VsZCBjb25zaXN0IG9mIHNldmVyYWwgc2VydmVyIHJhY2tzIGZpbGxlZCB3aXRoIGRpc2sgYXJyYXlzIHdoaWNoIGhhdmUgdGhlaXIgb3duIHN0b3JhZ2UgYmFzZWQgbmV0d29ya2luZyBlcXVpcG1lbnQgYW5kIHRyYW5zZmVyIHByb3RvY29scyBzZXBhcmF0ZSBmcm9tIHRoZSByZWd1bGFyIFRDUC9JUCBiYXNlZCBuZXR3b3JraW5nIGVxdWlwbWVudC4gClRoZSB2ZXJ5IGZpcnN0IG5pZ2h0IHdlIHBsYXllZCBzb21lIFRleGFzIEhvbGQgZW0nIGFuZCBhIGNvdXBsZSBvZiBvdXIgZnJpZW5kcyB3ZXJlIGdyYWJiaW5nIGZvciB0aGUgc2FtZSBob2xkZXIgYW5kIGtub2NrZWQgb3ZlciByZWQgd2luZS4gVGhleSB3ZXJlIGJvdGggZXh0cmVtZWx5IHNvcnJ5IGJlY2F1c2UgdGhlIGZlbHQsIHN1cnJvdW5kaW5nIHBva2VyIGNoaXBzLCBhbmQgc29tZSBjbG90aGluZyB3ZXJlIGRyZW5jaGVkLiAKVGhlIHByaWNlIGluY2x1ZGVzIHRocmVlIHN1cGVyYiBzcGEgY3Vpc2luZSBtZWFscyBhbmQgb25lIG1hc3NhZ2UgZWFjaCBkYXksIGFuZCBhbGwgdmlzaXRzIGJlZ2luIHdpdGggYSB3ZWxsbmVzcyBjb25zdWx0YXRpb24uIENoaSBOZWkgVHNhbmcgKCQ5OCksIGFuIGFiZG9taW5hbCBtYXNzYWdlLCB3YXMgNDUgbWludXRlcyBvZiBwcm9iaW5nIHRoYXQgbWFkZSBtZSBmZWVsIGxpZ2h0ZXIgYW5kIHB1cmVyLiBBbHNvIHJlY29tbWVuZGVkOiBUaGFpIGhlcmJhbCBtYXNzYWdlICgkNjEpLCB3aGljaCBjb21iaW5lcyBUaGFpIG1hc3NhZ2Ugd2l0aCBoZWF0ZWQgaGVyYmFsIHBhY2tzIHRvIGRldG94aWZ5IGFuZCByZWxpZXZlIGFjaGVzLiAKSSdtIGJhdHRsaW5nIHNvbWUgaGVhbHRoIGlzc3VlcyBteXNlbGYgYW5kIHNlZSBhIHNwZWNpYWxpc3QgaW4gYSBsaXR0bGUgb3ZlciBhIHdlYWsgbm93IGFuZCB0aGV5IHRoaW5rIG1pbmUgaXMgYXV0b2ltbXVuZSBvciBpbmZsYW1tYXRvcnkgcG9zc2libHkuIENhbiBJIGFzayB3aGF0IGhlciBzeW1wdG9tcyB3ZXJlIGFuZCBob3cgc2hlIHdhcyBkaWFnbm9zZWQ/IEkndmUgc2VlbiBzbyBtYW55IGRycyBzaW5jZSBNYXJjaCBhbmQgaGF2ZW4ndCBnb3R0ZW4gYW55IHJlYWwgYW5zd2VycyBhbmQgaGF2ZSBoZWFyZCBhIGxvdCBvZiAiaG1tbXMiLCAidGhhdCdzIGludGVyZXN0aW5nIiBhbmQgIndlaXJkIiBvbmx5IHRvIGJlIHNlbnQgdG8gdGhlIG5leHQgZHIuIEkgYWxzbyBoYXZlIGltcGxhbnRzIG1pbmUgYXJlIHNhbGluZSBidXQgYWxsIHRoZSBzaGVsbHMgc28gdG8gc3BlYWsgYXJlIHNpbGljb25lLgpJIHdhcyBhYm91dCAxMSwgc3dlZXBpbmcgdGhlIGRpbmluZyByb29tIGZsb29yIHdoaWxlIHRoZSBzcGVjaWFsIHdhcyBwbGF5aW5nLiBJIGZvdW5kIG15c2VsZiB3b25kZXJpbmcgaG93IGxvbmcgaXQgd291bGQgdGFrZSBodW1hbnMgdG8gZXZvbHZlIHBhc3QgdGhlIG5lZWQgZm9yIG1hbGVzLCBzbyB0aGF0IEkgY291bGQgbWFycnkgYSB3b21hbi4gCk5vdCB0aGF0IEknbSBjb21wbGFpbmluZyB0aG91Z2guLiAKQnV0IHRyYXNoIHRhbGtpbmcgaXMgcmlza3kuIEluIHRoZSBmdXR1cmUsIGNob29zZSBkaWZmZXJlbnQgc3RyYXRlZ2llcywgb3IgYXNrIGlmIGFueSB0b3BpY3MgYXJlIG9mZiBsaW1pdHMuIE15IHNvbiBhbmQgaGlzIGZyaWVuZHMgcGxheSBDYXJkcyBBZ2FpbnN0IEh1bWFuaXR5LiBUaGV5IGhhdmUgYSBzdGFuZGluZyBydWxlIG9mIG5vIGR3YXJmIGpva2VzIHdoZW4gdGhlIHBlcnNvbiB3aXRoIGR3YXJmaXNtIGlzIHBsYXlpbmcgKGRpc2NhcmQgdGhlIGNhcmQgYW5kIGdyYWIgYW5vdGhlciksIGFuZCBkb24gcGxheSBKZXN1cyBjYXJkcyB3aGVuIEpvc2ggaXMgdGhlIGp1ZGdlLCBhcyBoZSBhIENocmlzdGlhbiB3aG8gZmVlbHMgaXQgZGlzcmVzcGVjdGZ1bC4gSGUgZGlzY2FyZHMgSmVzdXMgYW5kIEdvZCBjYXJkcyB3aGVuIGhlIGdldHMgdGhlbS4gQnV0IGhlIHNhaWQgaGUgb2theSB3aXRoIG90aGVycyBwbGF5aW5nIHRoZW0gYXMgbG9uZyBhcyBoZSBkb2VzbiBoYXZlIHRvIGp1ZGdlLiBTbyB0aGV5IHNldCB1cCBkaWZmZXJlbnQgcmVzcGVjdGZ1bCBib3VuZGFyaWVzIGZvciBlYWNoIHBlcnNvbiB0aGF0IGxldCB0aGVtIHN0aWxsIGhhdmUgYSBmdW4sIG9ibm94aW91cyBnYW1lIHdpdGhvdXQgY3Jvc3NpbmcgbGluZXMuClRoYXQncyB3aHkgSSByZWFsbHkgdGhpbmsgc2hlIGhhcyBzb21lIHR5cGUgb2YgcGVyc29uYWxpdHkgZGlzb3JkZXIgKGxpa2UgYW50aSBzb2NpYWwsIGV0YykuIApMZWhtYW4gaGFkIGRlY2xpbmVkIGV2ZW4gdG8gaW50ZXJ2aWV3IG1lIGZvciBhIHN1bW1lciBqb2IsIGJ1dCBoYWQgYmVlbiB0cnlpbmcgdG8gaGlyZSBtZSBldmVyIHNpbmNlIEknZCBnb25lIG9uIHRvIGRvIHdlbGwgYXQgR29sZG1hbi4gQXQgbXkgZmluYWwgTGVobWFuIGludGVydmlldywgdGhlIGhlYWQgb2YgdGhlIGdvdmVybm1lbnQgYm9uZCBkZXNrIGFza2VkIHdoZXRoZXIgSSBoYWQgcGxheWVkIGNvbXBldGl0aXZlIHNwb3J0cy4gCkRvIHlvdSB0aGluayB3b21lbiBzaG91bGQgYmUgYWxsb3dlZCBvciBhcmUgZml0IHRvIGJlY29tZSBwcmVhY2hlcnMvbWluaXN0ZXJzP1RoaXMgaGFzIGJlZW4gYSBzb3JlIHN1YmplY3QgaW4gbXkgZmFtaWx5LihJIHRoaW5rIHRoZXkgc2hvdWxkKS4gU29tZSBwZW9wbGUgYmVsaWV2ZSB0aGF0IHdvbWVuIGRvIG5vdCBoYXZlIGEgcGxhY2UgaW4gcmVsaWdpb24gYXMgYSBtaW5pc3RlciBvciBwcmVhY2hlci4gSW4gdGhlIEhvbHkgQmlibGUsIGl0IHRhbGtzIGFib3V0IHdvbWVuIGJlaW5nIHNlZW4gYW5kIG5vdCBoZWFyZC4KV2l0aCB0aGUgZmFzdCBwYWNlZCBjb250ZW1wb3JhcnkgbGlmZSwgZXZlcnlvbmUgbmVlZHMgdGltZSB0byByZWxheCBhbmQgYWxzbyB0YWtlIGEgYnJlYWsuIApBdCB0aGUgdGltZSBvZiB0aGUgc2hvb3RpbmcsIG5lYXJseSA1MCBwZW9wbGUgd2VyZSBpbnNpZGUgdGhlIGxvY2tlZCByb29tLiAKSXQgd2FzIHRoZXJlLCB0aGUgZ2lybCBzYWlkLCB0aGF0IE5ndXllbiBzZXh1YWxseSBhc3NhdWx0ZWQgaGVyIGZvciB0aGUgZmlyc3QgdGltZS4gU2hlIHRvbGQgZGV0ZWN0aXZlcyBzaGUgbGF0ZXIgaGFkIGNvbnNlbnN1YWwgc2V4IHdpdGggTmd1eWVuIGJlY2F1c2Ugd2FzIHByb3ZpZGluZyBmb3IgaGVyIG5lZWRzLCBpbmNsdWRpbmcgZHJ1Z3MgYW5kIGZvb2QuIFBlb3BsZSB3aXRob3V0IGhvbWVzLCB3aG8gYXJlIGxpdmluZyBkYXkgdG8gZGF5LCBvZnRlbiBoYXZlIG5vIGNob2ljZSBidXQgdG8gaGF2ZSBzZXggZm9yIG1vbmV5IG9yIHRoaW5ncyBsaWtlIHNoZWx0ZXIsIGFkdm9jYXRlcyBzYXkuLiAKU2hydWcgeW91ciBzaG91bGRlcnMgdXAgYXMgaGFyZCBhcyB5b3UgY2FuIGZvciBhIGZldyBzZWNvbmRzIChhbHNvIHRyeSB1cCBhbmQgZm9yd2FyZCwgdXAgYW5kIGJhY2spLCBmb2xsb3dlZCBieSBwcmVzc2luZyB5b3VyIHNob3VsZGVycyB0b3dhcmRzIHRoZSBmbG9vciB3aGlsZSBwdXNoaW5nIHRoZSB0b3Agb2YgeW91ciBoZWFkIHRvd2FyZCB0aGUgY2VpbGluZy4uIApQZW5ueSBDYXJzb24sIGFuZCB0aGF0IGhlciByZWFsIG5hbWUgeW91IGNhbiBsb29rIGhlciB1cCBJIGRvbiBjYXJlLiAKSSd2ZSByZWFkIEtleW5lcy4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgOCBkYXlzIGFnb3llIHRoZXJlIGFyZSBhbHdheXMgc29tZSBleGNlcHRpb25zIHRoYXQgaG9sZCB0aGVpciBvd24gc3RhbmRhcmRzIG92ZXIgdGhlaXIgb3duIGhhcHBpbmVzcywgYnV0IGJlaW5nIG1vcmUgZGVtYW5kaW5nIGluIGxvdmUgZG9lcyBub3QgbWFrZSB5b3UgbGVzcyBsb25lbHksIGFuZCBldmVyeW9uZSBzdWZmZXJzIGZyb20gbG9uZWxpbmVzcywgaXRzIGp1c3QgYSBtYXR0ZXIgb2YgaG93IGxvbmcgYW5kIGhvdyBtdWNoLmJ1dCBmcmllbmRzaGlwIGFuZCBkYXRpbmcgYXJlIHR3byBkaWZmZXJlbnQgdGhpbmdzLCB5b3UgbGlrZWx5IGRvbiBzZWUgeW91ciBmcmllbmRzIGFzIGRhdGluZyBtYXRlcmlhbCwgc28gd2hpbGUgdGhleSBtaWdodCBsaWtlIHlvdS4gCkNyYW5ncmFwZWpvb3NlICAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KTWF5YmUgbG9vayB1cCBtdXNpYyB0aGVyYXBpc3RzIHdvcmtpbmcgd2l0aCBhIHBvcHVsYXRpb24geW91IGJlIGludGVyZXN0ZWQgaW4gd29ya2luZyB3aXRoLCB0b28sIGFuZCBzZWUgaWYgeW91IGNhbiBtZWV0IHdpdGggdGhlbSBzb21lIHRpbWUuIApQbGF5IGFzIG11Y2ggYXMgcG9zc2libGUuIApJbiBvcmRlciB0byBpbXByb3ZlIG92ZXJhbGwgc3Vydml2YWwsIG5vdmVsIHRyZWF0bWVudCBzdHJhdGVnaWVzIHRoYXQgYXJlIGJhc2VkIHVwb24gc3BlY2lmaWMgbW9sZWN1bGFyIG1lY2hhbmlzbXMgdGhhdCBwcm9sb25nIHRoZSBhbmRyb2dlbiBkZXBlbmRlbnQgc3RhdGUgYW5kIHRoYXQgYXJlIHVzZWZ1bCBmb3IgYW5kcm9nZW4gaW5kZXBlbmRlbnQgZGlzZWFzZSBuZWVkIHRvIGJlIGlkZW50aWZpZWQuCkwnZW1icnlvbiBkb2l0IHRyZSByYW5nIGRhbnMgbGEgY2F0Z29yaWUgZGVzIGNob3NlcywgY29tbWUgbGUgc291bGlnbmUgbCd1dGlsaXNhdGlvbiBwYXIgbGUgVHJpYnVuYWwgYWRtaW5pc3RyYXRpZiBkJ0FtaWVucywgZGFucyBzYSBkY2lzaW9uIGR1IDkgbWFycyAyMDA0LCBkZSBsYSB0ZXJtaW5vbG9naWUgIG1hdHJpZWwgLiBJbCBmYXV0IGRvbmMgZmFpcmUgYXR0ZW50aW9uIGRhbnMgbCd1dGlsaXNhdGlvbiBkZXMgdGVybWVzIHV0aWxpc3MuIEwnZW1icnlvbiBpbiB2aXRybyBwZXV0IHRyZSBjb25zaWRyIGNvbW1lIHVuIHRyZSBodW1haW4sIG1haXMgY2V0dGUgZXhwcmVzc2lvbiBuZSByZW52b2llICBhdWN1bmUgcmFsaXQganVyaWRpcXVlIHByY2lzZS4gCkdldCB0aGVtIHRvIGNsZWFuIGV2ZXJ5dGhpbmcgcmlnaHQgYmVmb3JlIHlvdSBwdXQgeW91ciBmZWV0IGluLCBhbmQgY29uc2lkZXIgYnJpbmdpbmcgeW91IG93biB0b29scyBmb3IgdGhlbSB0byB1c2UuIEFsc28sIGlmIHlvdSBkbyBkZWNpZGUgdG8gZ28gYWhlYWQgYW5kIGdldCBhIHBlZGljdXJlLCB5b3UnbGwgcHJvYmFibHkgd2FudCB0byBza2lwIHRoZSBmb290IGFuZCBjYWxmIG1hc3NhZ2UgYmVjYXVzZSB0aGUgbmFpbCB0ZWNobmljaWFuIHdpbGwgbGlrZWx5IG5vdCBiZSBhIHByZWduYW5jeSB0cmFpbmVkIHJlZmxleG9sb2dpc3Q7IGhpdHRpbmcgY2VydGFpbiBwcmVzc3VyZSBwb2ludHMgY2FuIHRyaWdnZXIgbGFib3IuIAozNCBiaWxsaW9uIHNwZW50IHllYXJseSBvbiBhbHRlcm5hdGl2ZSBtZWRpY2luZQpGb3Igc29tZSwgdGhleSBhcmUgcmVqb2ljaW5nIGJlY2F1c2UgaXQgbWVhbnMgdGhlcmUgd29uIGJlIGNhc3VhbHMgbGVmdCwgdGhvc2Ugd2hvIHN0YXlzIHdpbGwgYmUgdGhlIG9uZXMgd2hvIHRoaW5rcyBmb3JraW5nIDEwMCBVU0QgZm9yIGEgY2FyZCBnYW1lIGlzIG5vIGJpZyBkZWFsLiBJZiB5b3UgYXJlIGluIHRoaXMgZ3JvdXAsIGZpbmUgbGV0IGdpdmUgdGhlbSB0aW1lLiBXaXRob3V0IGEgcHJvZ3Jlc3Npb24gc3lzdGVtIGJlZm9yZSBDaHJpc3RtYXMgdG8gc3RvcCB0aGUgZHJvcCBpbiBwbGF5ZXJzIGNvdW50LCB0aGUgZ2FtZSB3aWxsIGJlIHByb2JhYmx5IGRvbmUgZm9yIGdvb2QuClRyZWVzIHJlc3Bhd24uIEl0IHdvcnRoIG5vdGluZyB0aGF0IHRoZSB0eXBlIG9mIHRyZWUgYW5kIGl0IGxvY2F0aW9uIGlzIHN0YXRpYy4gRm9yIGV4YW1wbGUsIGlmIHlvdSBjdXQgZG93biBhIHBlYXIgdHJlZSwgYSBuZXcgcGVhciB0cmVlIHdpbGwgZ3JvdyBpbiB0aGUgZXhhY3Qgc2FtZSBzcG90LgpLb3JlYSBoYXMvaGFkIGEgcHJldHR5IHNlcmlvdXMgcGlyYWN5IGN1bHR1cmUgZm9yIGEgbG9uZyB0aW1lLiBNYXliZSBub3cgdGhhdCBjb250ZW50IGNyZWF0aW9uIGhhcyBiZWVuIGluY3JlYXNpbmdseSBsb2NhbGl6ZWQsIHBlb3BsZSB3aWxsIHN1ZGRlbmx5IGNhcmUgdGhhdCBkdWRlcyBzdGFuZCBvbiBzdHJlZXQgY29ybmVycyBhbmQgdW5hYmFzaGVkbHkgcGVkZGxlIGJpbmRlcnMgZnVsbCBvZiBidXJuZWQgRFZEcyBvZiBIb2xseXdvb2QgbW92aWVzLCBvciB0aGF0IHZpZGVvIGdhbWUgc2FsZXNtZW4gd2lsbCBoYXBwaWx5IHNlbGwgeW91IGEgaGFja2VkIGNvbnNvbGUgbG9hZGVkIHdpdGggcGlyYXRlZCBnYW1lcy4gCklzIHNoZSBnb2luZyB0byBzbGVlcCBvbiB0aGF0IGJsb3cgdXAgY291Y2g/IEhlIGNhbiBldmVuIGtlZXAgdXAgd2l0aCBoaXMgY2hpbGQgc3VwcG9ydCBhbmQgaGUgd2FudHMgaGVyIHRvIGxpdmUgd2l0aCBoaW0gZnVsbCB0aW1lLi4gClRoZSBwcm9kdWN0IGNhbiBiZSBhbnl0aGluZyBmcm9tIGJhbGwgYmVhcmluZ3MgdG8gYmFjayBydWJzLiBQbGFjZSBjYW4gc29tZXRpbWVzIGJlIHZlcnkgZXBoZW1lcmFsICAgZm9yIGV4YW1wbGUgYSBwaG9uZSBudW1iZXIgbWlnaHQgYmUgdGhlIHBsYWNlLiAKRm9yIHllYXJzLCBFcHN0ZWluIGx1cmVkIGFuIGVuZGxlc3Mgc3RyZWFtIG9mIHRlZW5hZ2UgZ2lybHMgdG8gaGlzIFBhbG0gQmVhY2ggbWFuc2lvbiwgb2ZmZXJpbmcgdG8gcGF5IHRoZW0gZm9yIG1hc3NhZ2VzLiBJbnN0ZWFkLCBwb2xpY2Ugc2F5LCBmb3IgeWVhcnMgaGUgY29lcmNlZCBtaWRkbGUgYW5kIGhpZ2ggc2Nob29sIGdpcmxzIGludG8gZW5nYWdpbmcgaW4gc2V4IGFjdHMgd2l0aCBoaW0gYW5kIG90aGVycy4KRGV0ZWN0aXZlIER1ZGVrIHNwZWFyaGVhZGVkIHRoZSBpbnZlc3RpZ2F0aW9uIGZvciB0aGUgQWxhbWVkYSBDb3VudHkgU2hlcmlmZidzIERlcGFydG1lbnQuICJXaGVuIHdlIGFycml2ZWQgYXQgdGhlIHNjZW5lLCBpdCB3YXMgTWFyY2ggMTQsIDIwMDguIEJhc2VkIG9uIHRoZSBkZWNvbXBvc2l0aW9uIG9mIHRoZSBib2RpZXMsIHdlIGZlbHQgdGhhdCB0aGUgbXVyZGVyIGhhZCBvY2N1cnJlZCBzZXZlcmFsIGRheXMgYmVmb3JlLCAiIGhlIGV4cGxhaW5lZC4gCkluIG90aGVyIG5ld3MsIGV4Y2l0aW5nIHBsYW5zIGhhdmUgYmVndW4gdG8gYmUgbWFkZSBmb3IgdGhlIHVwY29taW5nIGFjYWRlbWljIHllYXIsIGluY2x1ZGluZyBhbiBpbnRlciBzdWJqZWN0LCB5ZWFybG9uZyBjb21wZXRpdGlvbiB3aXRoaW4gdGhlIG5ldyBTY2hvb2wgb2YgRW5naW5lZXJpbmcgd2hpY2ggaGFzIHJlIGFsaWduZWQgb2YgTWVjaGFuaWNhbCwgQ2l2aWwgYW5kIEVsZWN0cmljYWwgRW5naW5lZXJpbmcgZGlzY2lwbGluZXMuIFRoaXMgY29tcGV0aXRpb24gd2lsbCBjb21wcmlzZSBvZiBhIHZhcmlldHkgb2YgYWN0aXZpdGllcyBpbmNsdWRpbmcgc3BvcnRpbmcsIHNvY2lhbCwgYWNhZGVtaWMgYW5kIGNoYXJpdGFibGUuIApBIHBlcmNlbnRhZ2Ugb2YgdG91cmlzdHMgcmVnYXJkbGVzcyBvZiBuYXRpb25hbGl0eSB3aWxsIGFjdCBvZmZlbnNpdmVseSBvciBiYWRseSB3aGlsZSB0cmF2ZWxpbmcuIE1hbnkgcGVvcGxlIHRyYXZlbCBqdXN0IHRvIGRvIGNyYXAgdGhleSB3b3VsZCBuZXZlciBkbyBhdCBob21lLiBQbHVzIGdlbmVyYWxseSBhbnkgbG9jYXRpb24gdGhhdCBzZXJ2ZXMgbGlxdW9yIGFuZCBwcm9zdGl0dXRpb24gd2lsbCBzZWUgaXQgZmFpciBzaGFyZSBvZiBiYWQgYmVoYXZpb3IgbGlrZSB0aGlzLiAKUHJvdmlkZSBleHRyYSBhdHRlbnRpb24gZm9yIHlvdXIgc2lkZWJ1cm5zLiBUaGUgc2lkZWJ1cm5zIGFyZSB1c3VhbGx5IGEgZm9yZ290dGVuIGFyZWEgd2hlbiBpdCBjb21lcyB0byBncm9vbWluZywgc2luY2UgdGhleSBhcmUgbm90IHVzdWFsbHkgY292ZXJlZCBieSBzaGFtcG9vaW5nIGZvciB0aGUgaGFpciBvciBjbGVhbnNpbmcgZm9yIGZhY2lhbCBza2luLiAKQW4gImFjZSIgaXMgYSBmaWdodGVyIHBpbG90IHdobyBzaG9vdHMgZG93biA1IGVuZW15IGFpcmNyYWZ0IGR1cmluZyBhZXJpYWwgY29tYmF0LiBFYWNoIGNvdW50cnkgaGFkIGEgc2xpZ2h0bHkgZGlmZmVyZW50IHNldCBvZiBydWxlcyBmb3IgY2xhaW1pbmcgYW4gZW5lbXkgYWlyY3JhZnQgImtpbGwiLiBGb3IgZXhhbXBsZSwgdGhlIHJ1bGUgbWF5IHJlcXVpcmUgdGhhdCBhbm90aGVyIHBpbG90IG9yIHBlcnNvbiBvbiB0aGUgZ3JvdW5kIHdpdG5lc3MgdGhlIGV2ZW50LiAKSGlzIHNsZWVrIGFuZCBzY3VscHR1cmFsIHRha2Ugb24gdGhlIHBpbmcgcG9uZyB0YWJsZSBjb21lcyBpbiBzdGFuZGFyZCBzaXplcyAoZnJvbSAkOSwwMTYpIGluIHNoYWRlcyBvZiBncmV5IGFuZCB3aGl0ZSwgYW5kIGFzIGEgdW5pcXVlIHBpZWNlIHNjYWxlZCB0byBmaXQgYW55IHNwYWNlIGFuZCBzdHlsZWQgdG8gYW55IGRlc2lnbiBzY2hlbWUuIApIdW1hbiB0cmFmZmlja2luZyBpcyBhIGNyaW1lIGludm9sdmluZyB0aGUgZXhwbG9pdGF0aW9uIG9mIHNvbWVvbmUgZm9yIHRoZSBwdXJwb3NlcyBvZiBjb21wZWxsZWQgbGFib3Igb3IgYSBjb21tZXJjaWFsIHNleCBhY3QgdGhyb3VnaCB0aGUgdXNlIG9mIGZvcmNlLCBmcmF1ZCwgb3IgY29lcmNpb24uIApNeSBvbmUgeWVhciBhbm5pdmVyc2FyeSBmb3IgYmVpbmcgY2VydGlmaWVkIGlzIGluIEFwcmlsLiBJIGEgbWFsZSB0aGVyYXBpc3QuIEkgd2FzIHRyeWluZyB0byBtYWtlIG15IG93biBjbGllbnRzIGZvciBlaWdodCBtb250aHMgdW50aWwgZ2V0dGluZyBwaWNrZWQgdXAgaW4gRGVjZW1iZXIuIApIZSB3YXMgd2VhcmluZyBhIHRhbGwgYmxhY2sgdHNoaXJ0IHdpdGggVG9ueSB0aGUgdGlnZXIgYmxpbmdlZCBvdXQgb24gaXQgYW5kIGJhZ2d5IGFzcyBqZWFucyB3aXRoIGEgZml0dGVkIGhhdC4gCkV4cHJlc3Npb25zIG9mIGludGVyZXN0IG1pZ2h0IHNlZW0gc3RyYWlnaHRmb3J3YXJkLiAKTnV0cml0aW9uYWwgTWlzdGFrZXMgVG9wIDEwCjcgTW92aWVzIFRoYXQgUHV0IEluc2FuZSBXb3JrIEludG8gRGV0YWlscyBZb3UgRGlkbnQgTm90aWNlCklmIHlvdSBhcmUgYSBQb2tlciBmYW4gYW5kIHlvdSBwcmVmZXIgYSBnZW51aW5lIGNhc2lubyBhdG1vc3BoZXJlIGluc3RlYWQgb2YgcGxheWluZyBSTkcgb3BlcmF0ZWQgZ2FtZXMsIExpdmUgUG9rZXIgdmFyaWFudHMgY291bGQgYmUgYSBwZXJmZWN0IGZpdCBmb3IgeW91LiBBbHRob3VnaCB0aGV5IGFyZSBub3QgYXMgbnVtZXJvdXMgYXMgTGl2ZSBCbGFja2phY2sgYW5kIFJvdWxldHRlIHRhYmxlcywgeW91IGNhbiBzdGlsbCBwbGF5IGEgZmV3IHZhcmlhbnRzIG9mIHRoZSBnYW1lIHRoYW5rcyB0byByZXB1dGFibGUgc29mdHdhcmUgcHJvdmlkZXJzIHdobyBtYWRlIHN1cmUgdG8gaGF2ZSBhbGwgdHlwZXMgb2YgY2FyZCBnYW1lcyBob3N0ZWQgYnkgbGl2ZSBkZWFsZXJzIG9uIG9mZmVyLi4gClRoZXkgaGF2ZSBubyBkZXNpcmUgdG8gbWFrZSB0aGUgd29ybGQgYSBiZXR0ZXIgcGxhY2UgZm9yIHRoZSBhdmVyYWdlIHBlcnNvbi4gVGhlIGZhY3QgaXMgdGhhdCB0aGV5IGFsbCBtaXNlcmFibGUgZmFpbHVyZXMgYXMgbm9ybWFsIHBlb3BsZS4gVW5hYmxlIHRvIGVtcGF0aGl6ZSwgdW5hYmxlIHRvIGxvdmUgdGhlaXIgZmVsbG93IG1hbiwgYW5kIHVuYWJsZSB0byBleHBlcmllbmNlIGFueXRoaW5nIHJlbW90ZWx5IHJlc2VtYmxpbmcgam95IG9yIGZ1bGZpbGxtZW50LiAKV2VudCB0byB0aGUgWSBhZnRlcndhcmRzIHRvIHN3aW0uIEMgZ290IHRpcmVkIGJlZm9yZSBJIGRpZCwgYnV0IGl0IHdhcyBqdXN0IGFzIHdlbGwgdGhhdCB3ZSBxdWl0IGF0IHRoYXQgcG9pbnQsIGJlY2F1c2Ugb24gdGhlIHdheSBob21lIHdlIHN0b3BwZWQgZm9yIGdyb2NlcmllcyBhdCBBbGRpIGFuZCBJIHdhcyBsaW1waW5nIGFuZCBleGhhdXN0ZWQgYnkgdGhlIHRpbWUgSSBnb3QgdG8gdGhlIGNoZWNrb3V0LgpQcmVuZXogdW4gcGxlaW4gYm91Y2hvbiBldCBnYXJkZXogY2UgbGlxdWlkZSBkYW5zIHZvdHJlIGJvdWNoZSAxMCBtaW51dGVzIHBhciBqb3VyLCBldCBjcmFjaGV6IGxlLCAoamUgbGUgZmFpcyBlbiBwcmVuYW50IG1vbiBiYWluKS4gClRoaW5raW5nIENsaW50b24gY291bGQgZGl0Y2ggdGhlbSB0byBmbHkgb24gYSBwbGFuZSB0byBhIHByaXZhdGUgaXNsYW5kIGlzIGEgaHVnZSBmYWxzZSBhc3N1bXB0aW9uLiBMaWtlIGl0IHdvdWxkIGhhdmUgYmVlbiBzdHJpY3RseSBsb2dnZWQsIGFuZCB0aGVyZSB3b3VsZCBiZSB0b25zIG9mIHJlY29yZHMgYW5kIHJlcG9ydHMuIFRoZSB3aG9sZSBwb2ludCBvZiBzZWNyZXQgc2VydmljZSBmb3IgZm9ybWVyIFZJUHMgb2YgdGhlIFVTQSBpcyB0byBwcm90ZWN0IHRoZSBzZWNyZXRzIHRoYXQgdGhleSBrbm93LiAKIlRoaXMgYWxsaWFuY2UgY2FuIGhlbHAgd2l0aCB0aGUgcGxhbm5pbmcgc2NoZW1lIHRvIG1ha2UgaXQgc3Ryb25nZXIgdG8gc3RvcCBwb2tpZXMgY29taW5nIGluLCIgTXIgRmxvcmVuY2Ugc2FpZC4gCkkgZGVjaWRlZCBpdCB3YXMgdGltZSB0byBwbGF5IHdpdGggdGhlIGFjdHVhbCBzaW0uIEkgd2FzIGhhcHB5IHRvIGZpbmQgb3V0IHRoZSBzaW0gbG9va2VkIGZhaXJseSBub3JtYWwsIGV4Y2VwdCB0aGF0IHdoZW4gSSB6b29tZWQgaW4gb24gaXQsIGl0cyBoYWlyIHdhcyBhIG9kZCB0cmFuc3BhcmVudCBibHVlLiAKUmF0aGVyIHRoYW4gcmVzb3J0aW5nIHRvIHBzeWNob3Ryb3BpYyBkcnVncywgaXQgd291bGQgYmUgcHJ1ZGVudCB0byBleHBsb3JlIHdoZXRoZXJtYWduZXNpdW0oTWcpIHN1cHBsZW1lbnRhdGlvbiBpbXByb3ZlcyBkZXByZXNzaW9uLCBzaW5jZSB0aGlzIGVzc2VudGlhbCBtaW5lcmFsIGlzIGltcGxpY2F0ZWQgaW4gdGhlIHBhdGhvcGh5c2lvbG9neSBvZiB0aGlzIGRpc29yZGVyLiBNYWduZXNpdW0gbWF5IGJlIGluZGVlZCBicmFuZGVkIGFzIG1pcmFjdWxvdXMgZ2l2ZW4gaXRzIGVzc2VudGlhbGl0eSBhcyBhIGNvZmFjdG9yIHRvIG92ZXIgdGhyZWUgaHVuZHJlZCBlbnp5bWF0aWMgcmVhY3Rpb25zICg3KS4gCkkgdGhvdWdodCBzdXNwZW5zaW9uIHdhcyBnb25uYSBiZSB0aGUgbW92ZS4gSXQgaXMgdGhlICJyaWdodCIgdGhpbmcgdG8gZG8sIGFuZCBkZWVwIGRvd24gaSBhZ3JlZSB3aXRoIGl0IGV2ZW4gdGhvdWdoIEh1bnQgaGFzIGJlZW4gb25lIG9mIG15IGZhdm9yaXRlIHBsYXllcnMgc2luY2UgY29taW5nIGludG8gdGhlIGxlYWd1ZS4uIApJIHRoaW5rIGl0IHdvdWxkIGJlIGNvb2wgdG8gc2VlIHRoZSBmdXJ0aGVyIGFkdmVudHVyZXMgb2YgU2FkaWUgaW4gc291dGggYW1lcmljYSwgb3Igc29tZW9uZSB3aG8gZmFpbGVkIHRvIGdldCByaWNoIGluIHRoZSBjYWxpZm9ybmlhIGdvbGQgcnVzaCwgZ2V0dGluZyBhIHNoaXAgdG8gY2hpbmEgdG8gZmluZCBhIGZhYmxlZCB0cmVhc3VyZS4KQXMgc3VjaCwgYWZ0ZXIgeW91IGNyYWNrZWQgb2ZmIGEgcGllY2Ugb2YgY2hvY29sYXRlLCBzdG9yZSB0aGUgcmVzdCBzb21ld2hlcmUgd2hlcmUgeW91IGNhbiBzZWUgaXQgYW5kIGFyZSB1bmxpa2VseSB0byByYW5kb21seSBlbmNvdW50ZXIgaXQgICBtZWFuaW5nIG5vdCBuZXh0IHRvIHlvdXIgVFYgb3Igc29tZXRoaW5nLiAKQmVmb3JlIHRoZSBkZWFsLCBlYWNoIHBsYXllciBwbGFjZXMgYW4gYW50ZSBpbnRvIHRoZSBwb3QgYW5kIHRoZW4gcmVjZWl2ZXMgdHdvIGRvd24gY2FyZHMgKGhvbGUgY2FyZHMpIGFuZCBvbmUgZmFjZSB1cCBjYXJkLiBUaGUgcGxheWVyIHdpdGggdGhlIGxvd2VzdCBmYWNlIHVwIGNhcmQgKGFuIGFjZSBpcyBoaWdoIGluIHRoaXMgc2l0dWF0aW9uKSBpcyByZXF1aXJlZCB0byBzdGFydCB0aGUgYmV0dGluZyBhY3Rpb24gd2l0aCBhbiBpbml0aWFsIGJldCBjYWxsZWQgdGhlICJicmluZyBpbi4iIFRoZSBicmluZyBpbiBtdXN0IGJlIGF0IGxlYXN0IHRoZSByZXF1aXJlZCBtaW5pbXVtIGFtb3VudCBhZ3JlZWQgdXBvbiBiZWZvcmUgdGhlIGdhbWUuIFBsYXkgY29udGludWVzIHRvIHRoZSBsZWZ0IHdpdGggZWl0aGVyIGNhbGxzICh0byBlcXVhbCB0aGUgcHJldmlvdXMgb3Bwb25lbnQncyBiZXQpLCByYWlzZXMgKHRvIGJldCBoaWdoZXIgdGhhbiB0aGUgcHJldmlvdXMgb3Bwb25lbnQpLCBvciBmb2xkcyAodG8gcmVzaWduKS4gClRoZSBvZGQgdGhpbmcgd2FzIHRoYXQgb25lIG9mIHRoZSBjbGFpbWFudHMgdG8gdGhlIGltcGVyaWFsIHRocm9uZSwgd2hvIHdhcyBnZW5lcmFsbHkgcmVjb2duaXNlZCB0byBiZSB0aGUgdHJ1ZSBpbmhlcml0b3IsIGVuZGVkIHVwIGluIHRoZSBTRiBCYXkgQXJlYSB3aGVyZSBJIGdyZXcgdXAuIEhlIHdhcyBhIHRydWUgaGlwcGllLCBsaXZpbmcgb24gYSBob3VzZWJvYXQgaW4gU2F1c2FsaXRvLCBkb2luZyBMU0QgYW5kIHRoaW5ncyBsaWtlIHRoYXQuIApGb3IgU3RhcmZpZWxkIHRvIGJlIGluIGEgcGxheWFibGUgc3RhdGUgYnkgdGhlbiwgSSBzYXkgdGhleSB3ZWxsIGludG8gZnVsbCBwcm9kdWN0aW9uIGFuZCB0aGVuIHNvbWUuIEN5YmVycHVuayAyMDc3IGNvbnN0YW50bHkgaGFkIG1vbWVudHMgaW4gaXQgZ2FtZXBsYXkgZm9vdGFnZSBuYXJyYXRpb24gbWFraW5nIGEgZGlzY2xhaW1lciB0aGF0IHdoYXQgdGhleSBzaG93IGNhbi93aWxsIGJlIGNvbXBsZXRlbHkgZGlmZmVyZW50IGZyb20gd2hhdCBpcyByZWxlYXNlZC4gQ0RQUiwgSGlkZW8gS29qaW1hLCBDSUcsIE5hdWdodHkgRG9nIGV0YywgdGhlbiBCR1MgbWlnaHQgYmUgYXMgZmFyIChwb3RlbnRpYWxseSBldmVuIGZ1cnRoZXIpIGluIHRoZWlyIGRldmVsb3BtZW50IGF0IHRoYXQgc2FtZSBwb2ludCBpbiB0aW1lLi4gCkhlIHdhcyB0aGUgZmlyc3QgdGhhdCBrbmV3IGFib3V0IGl0IGJ1dCBvdGhlcnMgaGFkIGFuIGVxdWFsIGNoYW5jZSB0byBjcmVhdGUgYW5kIHNhdmUgYml0Y29pbnMuIApIb3dldmVyLCB0aGVyZSB3YXMgYSBmYWxsb3V0IG92ZXIgbWlzc2luZyBmdW5kcyB3aXRoIExvcGV6IGFjY3VzaW5nIHRoZSB2aWN0aW0gb2Ygc3RlYWxpbmcgYW5kIGtpY2tpbmcgaGVyIG91dCBvZiB0aGUgYXBhcnRtZW50LCBoZSB0b2xkIHBvbGljZS5Mb3BleiBkZW1hbmRlZCB0aGUgd29tYW4gcGF5IGhlciAkMywwMDAgb3Igc2hlIHdvdWxkIHNlbmQgInByb3ZvY2F0aXZlIiBwaG90b3MgdG8gaGVyIGh1c2JhbmQsIHdoaWNoIHNoZSBldmVudHVhbGx5IGRpZC5UaGUgd29tYW4gdG9sZCBpbnZlc3RpZ2F0b3JzIHNoZSB0cmF2ZWxlZCB0byBhbmQgZnJvbSBNZXhpY28gc2V2ZXJhbCB0aW1lcywgYnV0IHJldHVybmVkIGJlY2F1c2UgU29saXMgdGhyZWF0ZW5lZCBoZXIuIApGb3IgZGlldCwgSSBkaWQga2V0bywgd2hpY2ggaXNuIHRoZSBlYXNpZXN0LCBidXQgdGhlIGZhdHR5IG1lYWxzIGtlZXAgeW91IGZ1bGxlciBsb25nZXIuIElmIHNoZSBjYW4gZ2l2ZSB1cCBwb3AsIGxvb2sgZm9yIDBjYWwgZml6enkgZnJ1aXQgZHJpbmtzLCBJIGZvdW5kIHRoZXkgYmVlbiBhIGdyZWF0IHN1YnN0aXR1dGUuIApJJ20gYSB0b3RhbGx5IHNlY3VyZSBwZXJzb24gbm93IGJ1dCBJJ2xsIG5ldmVyIGZvcmdldCB0aGF0IHNoaXQuIApUaGUgdHVybiBjb21lcyBhIEsgb3Igc29tZXRoaW5nIGJ1dCBpdCBhIGRpYW1vbmQsIHNvIEkgaGF2ZSBhIGZsdXNoIGRyYXcuIE5leHQgYmV0IGlzIGxpa2UgJDYwIGFuZCBldmVyeW9uZSBjYWxscywgc28gYXQgdGhpcyBwb2ludCBJIGZlZWwgbGlrZSBJIHByaWNlZCBpbiwgYnV0IEkgZGVmaW5pdGVseSBuZWVkIGEgZGlhbW9uZCBzaW5jZSB0aGVyZSBsaWtlbHkgc29tZW9uZSB3aXRoIDQvNSwgdHJpcHMsIG9yIHR3byBwYWlyIHdpdGggSyAxMC4gVGhlIHJpdmVyIGNvbWVzIGEgZGlhbW9uZCBzbyBJIGhhdmUgdGhlIG51dHMuLiAKQXllLCBkZXBlbmRzIG9uIGhvdyB5b3UgYnVpbGQgeW91ciBzaGlwLiBJZiB5b3UgcHV0IGFybW9yIG9uIGZyb250IGJhY2sgYW5kIHNpZGVzLCBhbmQgY29tcGxlbWVudCB5b3VyIGxvYWRvdXQgd2l0aCBhIGxvdCBvZiB0dXJyZXRzLCBoYXZpbmcgZ29vZCB0aHJ1c3QgY2FuIGtlZXAgeW91ciBzaGlwIG1vdmluZywgcHV0dGluZyBsb3RzIG9mIGZpcmUgb24gdGhlIGVuZW15IGR1cmluZyBwYXNzb3ZlcnMgYW5kIGtlZXBpbmcgeW91IGluIHJhbmdlLCB3aGlsZSBhbHNvIGRpc3RyaWJ1dGluZyBlbmVteSBmaXJlIG92ZXIgYSBsYXJnZSBwb3J0aW9uIG9mIHlvdXIgYXJtb3IgZm9yIHNob3J0IHRpbWVzLCBnaXZpbmcgZW5lbXkgbGVzcyB0aW1lIHRvIGJyZWFrIGEgaG9sZSBpbiBvbmUgc3BvdC4gClRoZSBZYW5rZWVzIGFyZSBhIGJ1c2luZXNzIGRlc2lnbmVkIHRvIG1ha2UgbW9uZXkuIElmIHRoZXkgYXJlIGdvaW5nIHRvIHRha2UgbXkgbW9uZXksIHlvdSBkYW1uIHdlbGwgYXR0ZW1wdCB0byBzcGVuZCBpdCB3aGVuIHByZXNlbnRlZCBvbiBhcmd1YWJsZSBhIHRvcCAxMCBwbGF5ZXIuIEknbSBub3Qgc2F5aW5nIHlvdSBoYXZlIHRvIGJ1eSBoaW0sIHdoaWNoIGluIHRoaXMgY2FzZSB0aGV5IGhhZCBjb252ZXJzYXRpb25zLCBidXQgZW50ZXJ0YWluIHRoZSBpZGVhIHRoYXQgaGUnZCBiZSB1c2VmdWwuIEVzcGVjaWFsbHkgYXMgZmFucywgSSd2ZSBoZWFyZCBzbyBtdWNoIHNoaXQgYWJvdXQgaG93IGhlIHdvdWxkbid0IGJlIGEgZ29vZCBwbGF5ZXIgb3IgZml0LiBXaGF0IHRoZSBhY3R1YWwgaGVsbD8gSGUncyBhIHRvcCAxMCBwbGF5ZXIgaW4gdGhlIGdhbWUuClNpZSBodHRlIG51ciBmYWhyZW4gZHJmZW4gaW4gUmVnaW9uYWxiYWhuIHdvIGVzIDUgVGFnZSBkYXVlcnQgYmlzIG1hbiBBdWdzYnVyZyBpc3QgbG9sICh2b24gTW5jaGVtIGF1cyB3b2hsZ2VtZXJrdCkuIERpZSBGcmF1IHNhZ3QgaGF0IGtlaW4gR2VsZCB1bmQgc2llIG11c3Mgdm9tIFJlbnRlIGxlYmVuIHZvbiBpaHJlbSB2ZXJzdGlyYnRlbiBNYW5uIHVuZCBlcyBpc3Qgd2VuaWcuIApEYXMgVm9sayBoYXQgTWFkdXJvIGJlaSBkZXIgbGV0enRlbiBkZW1va3JhdGlzY2hlbiBXYWhsIGRhZnIgYWJnZXN0cmFmdC4gU2VpbmUgUGFydGVpIGhhdCBkaWUgTWFjaHQgdmVybG9yZW4uIApUaGUgY29uZmxhdGlvbiBvZiB3aGl0ZSBmZW1hbGUgcHVyaXR5IGFuZCBjaGlsZGlzaCBzZXh1YWwgaW5ub2NlbmNlIGdvdCB0YW5nbGVkIHVwIHdpdGggbm90aW9ucyBvZiB3aGl0ZSBzdXBlcmlvcml0eSBvdmVyICJ0aG9zZSBwZW9wbGUiIHdob3NlIGNoaWxkcmVuIGhhZCBzZXggYW5kIHdvbWVuIHdlcmUgcHJvbWlzY3VvdXMuIApQZXIgZm9ybmlyZSBzZXJ2aXppIHByb21vemlvbmFsaSBzdWkgcHJvZG90dGkgZSBzdWxsZSBpbml6aWF0aXZlIGRpIEFSVCBlbGV2ZW4KR2FsbGVyeSBQYXJrbGFuZDogT25lIFllYXIgTGF0ZXJPbmUgWWVhciBBbm5pdmVyc2FyeSBPZiBEZWFkbHkgU2hvb3RpbmcgQXQgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIEluIFBhcmtsYW5kLCBGbG9yaWRhUEFSS0xBTkQsIEZMT1JJREEgICBGRUJSVUFSWSAxNDogU29waGlhIFJvdGhlbmJlcmcgYW5kIGhlciBzaXN0ZXIsIEVtbWEgUm90aGVuYmVyZyAoTCBSKSB3YWxrIHdpdGggdGhlaXIgbW90aGVyIENoZXJ5bCBSb3RoZW5iZXJnIG91dHNpZGUgb2YgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIG9uIEZlYnJ1YXJ5IDE0LCAyMDE5IGluIFBhcmtsYW5kLCBGbG9yaWRhLiAKVGhlIG9ubHkgY2hhbmNlIHdlIGhhdmUgaXMgVHJ1bXAgYmVpbmcgY2F1Z2h0IG9uIHRhcGUvY2FtZXJhIHNheWluZyB3aGF0IGEgYnVuY2ggb2YgYmFja3dhdGVyIHJ1YmVzIGhpcyBzdXBwb3J0ZXJzIGFyZSBhbmQgaG93IGVhc2lseSB0aGV5IGNhbiBiZSBtYW5pcHVsYXRlZC4gCklzIGNsaWVudHMgZGlkIHJlbWFpbiBvbiB0aGUgc2lkZWxpbmVzLCBBaG1lZCB0b2xkIHRoZSBGaW5hbmNpYWwgUG9zdCBpbiBhIHBob25lIGludGVydmlldy4gaXMsIHdpdGggc28gbXVjaCB2b2xhdGlsaXR5IGFuZCB1bmNlcnRhaW50eSwgdGhleSBtaWdodCBoYXZlIGRlZmVycmVkIGFuZCB3YWl0ZWQgdG8gbWFrZSB0aGVpciBkZWNpc2lvbnMgYWJvdXQgdGhlaXIgaXNzdWFuY2VzIG9yIHdoYXRldmVyLiBBbmQgb24gdGhlIG90aGVyIGhhbmQsIGJlY2F1c2Ugb2YgdGhlIGRpc2xvY2F0aW9ucyBpbiB0aGUgbWFya2V0LCBvdXIgdHJhZGluZyBtYXJnaW5zIGNvbXByZXNzZWQgcXVpdGUgc2lnbmlmaWNhbnRseS4gQ0lCQyBhbm5vdW5jZWQgVGh1cnNkYXkgdGhhdCBpdCB3YXMgaGlraW5nIGl0cyBxdWFydGVybHkgZGl2aWRlbmQgYnkgZm91ciBjZW50cywgdG8gJDEuNDAgcGVyIHNoYXJlLiBURCBzYWlkIGl0IHdhcyBpbmNyZWFzaW5nIGl0cyBkaXZpZGVuZCBhcyB3ZWxsLCBieSBzZXZlbiBjZW50cywgdG8gNzQgY2VudHMgcGVyIHNoYXJlLgpJIGRvbid0IGNvdW50IGNhbG9yaWVzIGJlY2F1c2UgSSdsbCBvYnNlc3MgYW5kIGl0IGdldHMgdG8gdW5oZWFsdGh5IGhlYWQgc3BhY2UgbGV2ZWxzIHN1cGVyIGZhc3Qgd2l0aCB0aGF0LCBzbyB3aGVuIEknbSBleHRyYSBodW5ncnkgb24gaGVhdnkgd29yayBvdXQgZGF5cywgSSBjaG9vc2UgYSBoZWFsdGh5IHByb3RlaW4gKHRvZnUsIGxlbnRpbHMsIGVkYW1hbWUsIHBlYW51dHMsIGV0YykuIApXaGVuIHRoZSBjb2xsZWdlIHBhcmVudHMgc2F5IHlvdSBjYW4gZG8gbXVzaWMgdGhleSBkb24gYWN0dWFsbHkgbWVhbiB5b3UgY2FuIGRvIG11c2ljLiBXaGF0IHRoZXkgbWVhbiBpczogZ2V0IGEgdHlwaWNhbCBkZWdyZWUsIGdyYWR1YXRlLCBnZXQgYW4gOCA1IGpvYiB3aGVyZSB5b3Ugc2l0IGF0IGEgZGVzayBhbmQgd2VhciBraGFraXMsIFRIRU4gbWFrZSBtdXNpYyBmb3IgYSBoYWxmIGhvdXIgb2NjYXNpb25hbGx5IGFmdGVyIHlvdSBnb25lIHRvIHRoZSBneW0sIGRvbmUgbGF1bmRyeSwgbWFkZSBkaW5uZXIsIGFuZCBwcmVwYXJlZCBmb3IgdGhlIG5leHQgZGF5IGF0IHdvcmsuIFRoZW4gZXZlbnR1YWxseSB5b3UgbG9vayBiYWNrIGF0IHdoZW4gbXVzaWMgd2FzIGEgZHJlYW0gYW5kIGNvbnZpbmNlIHlvdXJzZWxmIHRoZXJlIHdhcyBubyB3YXkgeW91IGNvdWxkIGhhdmUgZXZlciBtYWRlIGl0IGFueXdheS4uIApBIHF1ZXN0byBwdW50byBxdWFsY3VubyBwb3RyZWJiZSBvYmlldHRhcmUgY2hlIHVuIGNvcyBzcGlldGF0YSBkZWxsYSBzb2NpZXQgY29udGVtcG9yYW5lYSwgZGVsIGNhb3MsIGRlbCBkaXNvcmRpbmUsIGRlbGxvIHNxdWlsaWJyaW8gbm9uIGFwcHJvZGEgYSBudWxsYSBkaSBidW9ubyBzZSBwb2kgbm9uIHN1Z2dlcmlzY2UgaWwgcmltZWRpbyBhdHRvIGEgbW9kaWZpY2FyZSBsbyBzdGF0byBpbiBjdWkgc2kgdHJvdmEuCkJ1dCBzb21lIGFyZSBkcmVhZGZ1bCwgc28gYmV3YXJlLiAKT3Igc28gSSBzYXkuIGFueSBicm9rZW4gaGVhcnRlZCBsb3ZlciwgY29udGludW91c2x5IHJlamVjdGVkIGFuZCB0aGVuIGNvdXJ0ZWQgYW5kIHRoZW4gcmVqZWN0ZWQgYWdhaW4sIEkgaGFyYm9yIGEgc21hbGwgcGllY2Ugb2YgaG9wZS4gdGltZSBoZSBkbyB0aGUgcmlnaHQgdGhpbmcuIHRpbWUgd2lsbCBiZSBkaWZmZXJlbnQuIHRpbWUgaGUgYXBwb2ludCBFbGl6YWJldGggV2FycmVuIHRvIGhlYWQgdGhlIGNvbnN1bWVyIGFkdm9jYWN5IGFnZW5jeSB0aGF0IHNoZSBpbnZlbnRlZC4gZXZlbiB0aGF0IGxpdHRsZSBwaWVjZSBvZiBob3BlZnVsbmVzcyBidXJpZWQgZGVlcCBpbiB0aGUgcmVjZXNzZXMgb2YgbXkgc3RvbnkgaGVhcnQga25vd3MsIGRlZXAgZG93biwgdGhhdCB0aGUgY2hhbmNlcyBvZiB0aGlzIGhhcHBlbmluZyBhcmUgYWJvdXQgdGhlIHNhbWUgYXMgdGhlIGNoYW5jZXMgb2YgYSBwZXJmZWN0bHkgcm9tYW50aWMgZW5kaW5nIHRvIG15IGxpZmUsIHdoZXJlIG15IGJlbG92ZWQgcmlkZXMgdXAgb24gYSB3aGl0ZSBob3JzZSBhbmQgdGFrZXMgbWUgb2ZmIGludG8gYSBzdW5zZXQgdG8gbGl2ZSBoYXBwaWx5IGV2ZXIgYWZ0ZXIuClRoZSBjbGFpbSBieSB0aGUgQ2F0aG9saWMgQ2h1cmNoIGFuZCBtYW55IGNvbnNlcnZhdGl2ZXMgdGhhdCBob21vc2V4dWFscyBhcmUgbW9yZSBsaWtlbHkgdG8gbW9sZXN0IGNoaWxkcmVuIGlzIHNpbXBseSBub3QgdHJ1ZS4gRmFjdCwgb2YgYWxsIHRoZSByZXNwZWN0ZWQgc3R1ZGllcyBvZiBjaGlsZCBtb2xlc3RhdGlvbiBhbmQgc2V4dWFsIG9yaWVudGF0aW9uIGRvbmUsIG5vbmUgaGF2ZSBlc3RhYmxpc2hlZCBhIGNvbm5lY3Rpb24gYmV0d2VlbiBob21vc2V4dWFsaXR5IGFuZCBjaGlsZCBtb2xlc3RhdGlvbi4gTWFueSBvdGhlcnMgaGF2ZSBkZW1vbnN0cmF0ZWQsIEkgaGF2ZSBiZWVuIHRvbGQgcmVjZW50bHksIHRoYXQgdGhlcmUgaXMgYSByZWxhdGlvbiBiZXR3ZWVuIGhvbW9zZXh1YWxpdHkgYW5kIHBlZG9waGlsaWEuIApTaGUgd2F0Y2hlcyBhcyB0aGUgcmFpbiBzbG93cyBhIGJpdCBhbmQgaGl0cyB0aGUgc2lkZXdhbGsuIApUaGVyZSBhcHBhcmVudGx5IGEgZm91cnRoIG9wdGlvbiB0aGF0IGlzICJzZWNyZXQiIGJ1dCBpdCBkaWZmaWN1bHQgdG8gYmVsaWV2ZSBpdCBpbnZvbHZlcyBhbnl0aGluZyBsaWtlIGEgcmVhbCBvcHRpb24sIHdoZXJlIGEgYnVuY2ggb2YgYmVhbiBjb3VudGVycyBhcmUgbm90IHNpdHRpbmcgYXJvdW5kIGFyZ3Vpbmcgd2hldGhlciB3ZSBzaG91bGQgc2VuZCAyNywzMDMgc29sZGllcnMgdG8gZXNjYWxhdGUgdGhlIHdhciBvciAzOCwgNzI0LiAKU29tZXRpbWVzIHJlY2lwZXMgd29yayBhbmQgc29tZXRpbWVzIHRoZXkgZG9uJ3QuIFNvbWV0aW1lcyBpdCBpcyBvdXIgZmF1bHQgYW5kIHNvbWV0aW1lcyBpdCdzIGEgcG9vcmx5IHdyaXR0ZW4gcmVjaXBlLiAKWW91IGNhbiBhbHNvIGZpbmQgbW9udGggdG8gbW9udGggcGxhbnMgd2hpY2ggZ2l2ZSB5b3UgZmxleGliaWxpdHkuLiAKSGUncyBub3QgZ29pbmcgdG8gYmUgc29tZSBraW5kIG9mIHJldm9sdXRpb25hcnkgb3IgbGliZXJhdG9yLiAKT3JpZ2luYXRpbmcgaW4gVGV4YXMsIEhvbGQnZW0gcG9rZXIgZGlkIG5vdCBjcm9zcyB0aGUgc3RhdGUgYm9yZGVyIHVudGlsIHRoZSBsYXRlIDYwcywgd2hlbiB0aHJlZSBUZXhhbiBnYW1ibGVycyBicm91Z2h0IHRoZSBnYW1lIHRvIHRoZSBNZWNjYSBvZiBVU0EgZ2FtYmxpbmcgICBMYXMgVmVnYXMuIEF0IGZpcnN0LCB0aGUgZ2FtZSBkaWQgbm90IHJlYWxseSBraWNrIG9mZiBhbmQgZm9yIHF1aXRlIGEgd2hpbGUgaXQgd2FzIG9ubHkgb2ZmZXJlZCBpbiB0aGUgZmFtb3VzIERvd250b3duIExhcyBWZWdhcyBjYXNpbm8sIEdvbGRlbiBOdWdnZXQuIApJdCdzIGludGVyZXN0aW5nIHRoYXQgeW91IGNvbnNpZGVyIFdlc3Rlcm4gYW5kIGRldmVsb3BlZCB0byBiZSB0aGUgc2FtZSB0aGluZy4gSSB0aG91Z2h0IHRoZSBwb2ludCBvZiB0aGlzIHN1YiBpcyB0byBzdWJ2ZXJ0IHRob3NlIGlkZWFzLgpZb3UgY2FuIHVzZSB6ZXN0IHRvIGJyaWdodGVuIHRoZSBmbGF2b3VyIG9mIHN0ZXdzLCBzb3VwcywgbWFyaW5hZGVzLCBkcmVzc2luZ3MsIHNhdWNlcywgZXRjLiBSZW1vdmUgYmlnZ2VyIHBpZWNlcyBvZiByaW5kIGJlZm9yZSBzZXJ2aW5nLi4gCkl0IHdhcyBhIGh1Z2UgcHJpdmlsZWdlIHRvIGJlIGludml0ZWQgdG8gbGF1bmNoIHRoZSBib29rIG9uIHN1Y2ggYW4gaW1wb3J0YW50IGRhdGUgaW4gdGhlIEtuZ2l0YW5nYSBjYWxlbmRhciBhbmQgdG8gc2VlIHRoZSB3YXkgaW4gd2hpY2ggaXQgaGFzIGJlZW4gZW1icmFjZWQgYnkgVGFpbnVpIGhhcyBiZWVuIGFtYXppbmcuIApHb29kIGx1Y2shLiAKRU1FIGlzIGEgYnVzdC4gCkJlY2F1c2UgYSBsYXJnZSBwb3J0aW9uIG9mIHRoZSB2ZWdhbiBhdWRpZW5jZSBhcmUgYW50aSBzY2llbmNlIGZhZCBkaWV0ZXJzIGxvb2tpbmcgZm9yIGEgbWlyYWNsZSBjdXJlIHRvIGV2ZXJ5IGxpZmUgcHJvYmxlbS4gCk5hdGlvbmFsIHNlY3VyaXR5ClRoZSBpbnZlc3RtZW50IGZsb3BwaW5nIGVhcmx5IHdhcyBuZXZlciB0aGUgcHJvYmxlbS4gSXQgaG93IHRheGFibGUgZXZlbnRzIGFyZSByZWNvZ25pemVkIGluIGNvb3JkaW5hdGlvbiB0byB3aGVuIHRheGVzIGFyZSBkdWUuIElmIGxpa2Uga2luZCB0cmFuc2FjdGlvbnMgd2VyZSBhcHBsaWNhYmxlLCB0aGVuIG5vIG9uZSB3b3VsZCBvd2UgYW55dGhpbmcgdW50aWwgYSBjb2luIGlzIHNvbGQgYmFjayB0byBmaWF0LiBOb3QgYW5vdGhlciBjb2luLgpTdGFydGxlZCwgdGhlIG1hbiBzbmFwcyB0byB3aXRoIGEgZ3VpbHR5IGxvb2sgb24gaGlzIGZhY2UuIHRoZSB3aWRvdyBmYWNpYWwgZXhwcmVzc2lvbnMgcmFjZSBmcm9tIGZyb20gZmVhciwgdG8gcmVsaWVmLCB0byBjb25mdXNpb24gYXMgc2hlIHNlZXMgdGhlIG90aGVyIHdvbWFuIGhhbmQgdW5kZXIgaGlzIG5ld3NwYXBlciBhbmQgc2hlIGlzIGZ1cmlvdXNseSBwdW1waW5nIGF3YXkhIHRoZSB3aWRvdyB3YXMgc2FkZGVuZWQsIGJ1dCBhc2tlZCAiaSBub3QgYW5ncnksIGJ1dCBhIGxpdHRsZSBqZWFsb3VzICB3aGF0IGRvZXMgc2hlIGhhdmUgdGhhdCBpIGRvbiBtYW4gbG9va3MgaW50byB0aGUgd2lkb3cgZXllcywgcGFudGluZywgYW5kIHNheXMgYXMgY2FsbWx5IGFzIGhlIGNvdWxkIG11c3RlciB0aGUgd29yZC4gCkEgbGluaW1lbnQgaGVhdHMgdGhlIHNraW4gYW5kIHVuZGVybHlpbmcgbXVzY2xlcyBhbmQgam9pbnRzIHRvIHJlbGlldmUgcGFpbi4gVGhlIGJhc2Ugb2YgYSBsaW5pbWVudCBtYXkgYmUgZWl0aGVyIHJ1YmJpbmcgYWxjb2hvbCBvciBhbiBlZGlibGUgYWxjb2hvbCBzdWNoIGFzIHZvZGthLiBJZiB5b3UgZG8gdXNlIHJ1YmJpbmcgYWxjb2hvbCwgcmVtZW1iZXIgdGhhdCBpdCBpcyB0b3hpYyB0byBkcmluaywgc28gbGFiZWwgaXQgYWNjb3JkaW5nbHkuIEFsY29ob2wgaXMgY29vbGluZyBhbmQgcXVpY2tseSBldmFwb3JhdGVzLCBsZWF2aW5nIG5vIG9pbHkgcmVzaWR1ZS4gT2NjYXNpb25hbGx5LCB0aG91Z2gsIGEgcGVyc29uIHdpbGwgcHJlZmVyIHVzaW5nIGEgdmVnZXRhYmxlIG9pbCBiYXNlLCBtYWtpbmcgdGhlIGxpbmltZW50IG1vcmUgbGlrZSBhIGNvbmNlbnRyYXRlZCBtYXNzYWdlIG9pbC4gT2lsIGhlYXRzIHVwIGZhc3RlciBhbmQgd2lsbCBzdGF5IG9uIHRoZSBza2luIGxvbmdlciwgbWFraW5nIGl0IGJldHRlciBmb3IgbWFzc2FnZXMuIE9uIHRoaXMgcGFnZSwgeW91IHdpbGwgZmluZCBhbGwgb2Ygb3VyIGhlcmIgcHJvZmlsZXMgYW5kIGluc3RydWN0aW9ucyBmb3IgdHJlYXRpbmcgbWVkaWNhbCBwcm9ibGVtcyB3aXRoIGhlcmJhbCByZW1lZGllcy4KRG9vcldheSBMaWZ0IGFuZCBEcm9wOiBBbGlnbiBmZWV0IHBhcmFsbGVsIHRvIGRvb3J3YXkuIApOb3cgb24gNjAgTWludXRlczogVGhlcmUgbGVzcyB0aGFuIGEgbW9udGggdW50aWwgdGhlIG1pZCB0ZXJtIGVsZWN0aW9ucy4gSGVhciB3aGF0IFByZXNpZGVudCBUcnVtcCBoYXMgdG8gc2F5IGFib3V0IHNvbWUgb2YgdGhlIGlzc3VlcyB0aGF0IHdpbGwgbGlrZWx5IGJlIG1vdGl2YXRpbmcgdm90ZXJzIGF0IHRoZSBiYWxsb3QuIApIb3cgc28/IEluIG1vc3Qgb2YgdGhvc2Ugc3BvcnRzIHRoZXJlJ3Mgbm8gZGlyZWN0IGNvbXBldGl0aW9uIGJldHdlZW4gdGhlIHBsYXllcnMuIFlvdSBjYW4ndCBpbiBhbnkgd2F5IGluZmx1ZW5jZSB3aGF0IHlvdXIgb3Bwb25lbnQgZG9lcywgeW91IG1heSBhcyB3ZWxsIGJlIHBsYXlpbmcgb24gZGlmZmVyZW50IGRheXMgYW5kIGxvY2F0aW9ucy4KSSBhc2tlZCBoaW0gcmVwZWF0ZWRseSB0byBzbG93IGRvd24gKEkgaGF2ZSBwcmV0dHkgYmFkIHBhc3NlbmdlciBhbnhpZXR5IGFueXdheSBzbyB0aGlzIHdhcyByZWFsbHkgaGVsbCBmb3IgbWUpIGFuZCBoZSB3b3VsZCBmb3IgYSBsaXR0bGUgYml0IGFuZCB0aGVuIGdldCBiYWNrIHVwIGFnYWluIHNwZWVkaW5nLiBJIHdhcyBzd2VhdGluZyBhbmQgc3RyZXNzZWQgdGhlIGVudGlyZSB3YXksIGFuZCBieSB0aGUgdGltZSB3ZSBnb3QgdGhlcmUgSSB3YXMgYWJzb2x1dGVseSBhbmdyeSBhbmQgdGlyZWQuIEkgZGlkbid0IHNwZWFrIHRvIGhpbSB0aGUgZW50aXJlIGNvbmNlcnQuCk1yLiBQcmVzaWRlbnQsIGl0IGlzIHRpbWUgdG8gYnJpbmcgb3VyIHRyb29wcyBob21lLiBJZiBvdXIgbWlzc2lvbiBpbiBBZmdoYW5pc3RhbiBpcyBzaW1wbHkgdG8gcHJvdGVjdCB0aGUgcG9wdWxhY2UgYW5kIGJ1aWxkIHRoZSBuYXRpb24sIHRoZW4gSSBiZWxpZXZlIHRoZSB0aW1lIGhhcyBjb21lIHRvIGJyaW5nIG91ciB0cm9vcHMgaG9tZS4gClBvc3RlZCBieSB0aGVydWJldHRlcyBhdCAxMjo1NCBQTSBvbiBPY3RvYmVyIDExLCAyMDExCkhvd2V2ZXIsIEkgZG8sIGluIGZhY3QsIHVzZSBFeGNlcHRULCBiZWNhdXNlIFZhcmlhbnQgdHlwZXMgYWxsb3cgbWUgdG8gaGF2ZSB0cnVseSBjb21wb3NhYmxlIGV4Y2VwdGlvbiB0eXBlcywgc2lkZXN0ZXBwaW5nIHRoZSBwaXRmYWxscyBvZiBFeGNlcHRUIG92ZXIgSU8gZm91bmQgaW4gSGFza2VsbC4gClRoZXJlIGlzIGZyZWUgZW50cnkgYmVmb3JlIDhwbSB3aXRoIGEgJDIwIGVudHJ5IGZyb20gOHBtIHRvIDNhbS4gT3VyIHJlcG9ydGVycyBoYXZlIGNoZXJyeSBwaWNrZWQgdGhlIGJlc3QgZXZlbnRzIHRvIGhlbHAgeW91IHNlZSBvZmYgMjAxMyBhbmQgc2luZyBpbiAyMDE0Li4gCkhvbGxvIHNhaWQgc2hlIGFsd2F5cyB3YW50ZWQgdG8gZ28gb24gYWR2ZW50dXJlcyBhbmQgYmUgYSBkYXJlZGV2aWwsIGJ1dCBzaGUgd2FudGVkIHRvIHdhaXQgdW50aWwgaGVyIHRocmVlIGtpZHMgd2VyZSBvbGRlci4gTm93IHNoZSBoYXMgZml2ZSBncmFuZGNoaWxkcmVuIGFuZCBzaXggZ3JlYXQgZ3JhbmRjaGlsZHJlbi4KU2hvcnQgaGlnaHMgZm9sbG93ZWQgYnkgZXhjZWVkaW5nbHkgY3J1c2hpbmcgbG93cy4gClNheSwgeW91IGRvbid0IGhhdmUgYW55IGlkZWEsIHN0aWxsIHlvdSB3aWxsIGJlIGZpbmRpbmcgc29tZSBwcm9kdWN0cyB0byBwdXJjaGFzZSBhcyB0aGUgdG9wIGxpc3RlZCBvbmVzIGxpa2UgVGhlIEZsdXNoIEZhY2VzIFBva2VyIENhcmQgUHJvdGVjdG9yIHdpbGwgZGVmaW5pdGVseSBhdHRyYWN0IHlvdS4uIApZZXMsIEkgd291bGQgbGlrZSBmb3IgbmV3IG11c2ljIHRvIGJlIGdlbmVyYXRlZC4gCkxpa2UsIGl0J3MgbGlrZSB0aGV5IHRoaW5rIG1vc3QgcGVvcGxlIGFyZSBhcyB1biBlbXBhdGhldGljIGFzIHRoZW0sIHNvIHRoZXkgdHJ5IHRvIG1hbmRhdGUgdGhhdCBlbXBhdGh5IGZyb20gdGhlIHRvcCBkb3duLiBCdXQgZGVlcCBkb3duIHRoZXkncmUgZXh0cmVtZWx5IHNlbGZpc2guIApNeSAyMXN0IGJpcnRoZGF5IHdhcyBzcGVudCBpbiBhIGRpc3VzZWQgd2hhbGluZyBzdGF0aW9uIG9uIFNvdXRoIEdlb3JnaWEsIG15IDIybmQgaW4gUmlvIGRlIEplbmVpcm8uIEkgYmVlbiB0aHJvdWdoIHRoZSBTdWV6IGFuZCBQYW5hbWEgY2FuYWxzIGEgZmV3IHRpbWVzLiAKVGhhdCBpdC4gCkxpa2UgTk8gUkVBTExZPyBIZXIgcnVubmluZyBhbmQgZGFuY2luZyBhcm91bmQgdGhlIGNsYXNzcm9vbSBhbmQgaGl0dGluZyBwZW9wbGUgbWVhbnMgc2hlIG1pZ2h0IGhhdmUgc29tZSBwcm9ibGVtcy4gClRoZSBrZXkgbWV0cmljIHRoYXQgdGhlIHN0b2NrIG1hcmtldCBjdXJyZW50bHkgd2F0Y2hlcyB0byBqdWRnZSBCb2VpbmcncyBwZXJmb3JtYW5jZSBpcyBjYXNoIGZsb3cgICBhIG1lYXN1cmUgb2YgaG93IG11Y2ggY2FzaCBpcyBnZW5lcmF0ZWQgYnkgcmVndWxhciBvcGVyYXRpb25zICAgd2hpY2ggY2FtZSBpbiBhdCAkMi45NSBiaWxsaW9uIGZvciB0aGUgcXVhcnRlciBhbmQgJDE1LjMgYmlsbGlvbiBmb3IgdGhlIGZ1bGwgeWVhci4gTWFuYWdlbWVudCBwcm9qZWN0ZWQgY2FzaCBmbG93IGluIDIwMTkgd2lsbCBoaXQgJDE3IGJpbGxpb24uLiAKVW5pdGVkIFN0YXRlcyBTZWNyZXRhcnkgb2YgdGhlIFRyZWFzdXJ5CkFsdGhvdWdoIGR1ZWxpc3RzIHJhcmVseSB3ZW50IHRvIHRyaWFsIGZvciB0aGVpciBjcmltZSwgd2hlbiB0aGV5IGRpZCwgbWFueSB3b3VsZCBwcm91ZGx5IGFkbWl0IHRvIHdoYXQgdGhleSBkaWQsIGFuZCBjb3VudCBvbiB0aGUganVyeSBhY3F1aXR0aW5nIHRoZW0gICBudWxsaWZpY2F0aW9uICAgYmVjYXVzZSB0aGV5IGhhZCBjb25kdWN0ZWQgdGhlbXNlbHZlcyBob25vcmFibHkuIEV2ZW4ganVkZ2VzIHdlcmUga25vd24gdG8gYXQgdGltZXMgb3BpbmUgdG8gdGhlIGp1cnkgdGhhdCB0aGV5IGJlbGlldmVkIHRoZSBkdWVsIGhhZCBiZWVuIGZhaXIgYW5kIHByb3Blcmx5IGNvbmR1Y3RlZCwgZXZlbiB0aG91Z2ggaWxsZWdhbC4gCkl0IHNlZW1zIGxpa2UgeW91IHdhbnQgQ3Jvc3NmaXQgdG8gYmUgc29tZXRoaW5nIGl0IG5vdC4gUmVndWxhciBneW1zLCBwZXJzb25hbCB0cmFpbmVycywgYW5kIGFsdGVybmF0aXZlIHdvcmtvdXQgcmVnaW1lcyBzdGlsbCBleGlzdC4gQnV0IHRoZXkgd29uIGdldCB5b3UgQ3Jvc3NmaXQuCkknbSBub3Qgc3VyZSB3aGF0IHRoZSBzdGF0aXN0aWNzIGFyZSBvdXQgdGhlcmUsIGJ1dCB0aGUgbWFqb3JpdHkgb2YgbXVsdGkgbWlsbGlvbmFpcmVzIGFuZCBiaWxsaW9uYWlyZXMgYWxsIGhhdmUgdmVyeSBsYXJnZSBwcm9wZXJ0eSBwb3J0Zm9saW9zLiBUaGVyZSBhcmUgbWFueSB3YXlzIHRoYXQgeW91IGNhbiBpbnZlc3QgaW4gcmVhbCBlc3RhdGUsIGFzIHlvdSBndXlzIGtub3cuIFJlZ2FyZGxlc3Mgb2YgdGhlIG5pY2hlIHlvdSB1c2UsIHlvdSB3YW50IHRvIGdldCB0byBhIGNlcnRhaW4gbGV2ZWwgb2YgZmluYW5jaWFsIHN0YXR1cyB3aGVyZSB5b3UgY2FuIGJ1eSBhbmQgaG9sZC4gTG9uZyB0ZXJtIHdlYWx0aCwgaW4gbXkgb3BpbmlvbiwgaXMgYnVpbHQgYnkgYnV5aW5nIGFuZCBob2xkaW5nIHByb3BlcnRpZXMuIFRoZXkgaG9wZWZ1bGx5IHdpbGwgYXBwcmVjaWF0ZSBpbiB2YWx1ZSwgd2hpY2ggd2lsbCBob3BlZnVsbHkgY29udGludWUgdG8gZXhwYW5kIHlvdXIgbXVsdGltaWxsaW9uYWlyZSBzdGF0dXMsIGFuZCB5b3Ugd2lsbCBhbHNvIHJlY2VpdmUgcmVzaWR1YWwgaW5jb21lIGZyb20gdGhlbSBzbyB5b3UgY2FuIGFjaGlldmUgdHJ1ZSBmaW5hbmNpYWwgZnJlZWRvbSBhbmQgZW5qb3kgeW91ciBsaWZlLgpXaGl0ZWhvdXNlIHdhbnRzIHRvIGtub3cgd2hldGhlciBLYXZhbmF1Z2ggaGFzIGdhbWJsZWQgYXQgYW55IHBvaW50IHNpbmNlIDIwMDAsIGhvdyBtYW55IHRpbWVzLCB3aXRoIHdob20sIHdoZXJlIGFuZCBob3cgbXVjaCBtb25leSBoZSBoYXMgd29uIG9yIGxvc3QuIFRoZSBzZW5hdG9yIGlzIGFsc28gYXNraW5nIHRoZSBub21pbmVlIHdoZXRoZXIgaGUgcGxheXMgaW4gYSByZWd1bGFyIG9yIHBlcmlvZGljIHBva2VyIGdhbWUgYW5kIGlmIGhlIGhhcyBldmVyIGdhbWJsZWQgaW4gdGhlIHN0YXRlIG9mIE5ldyBKZXJzZXkgIGxpa2VseSBhIHJlZmVyZW5jZSB0byBBdGxhbnRpYyBDaXR5LiBGaW5hbGx5LCBXaGl0ZWhvdXNlIHdhbnRzIHRvIGtub3cgaWYgS2F2YW5hdWdoIGhhcyBldmVyIHJlY2VpdmVkIG9yIGZpbGVkIGEgVyAyRyB0YXggZm9ybSB3aXRoIHRoZSBJUlMgcmVwb3J0aW5nIGdhbWJsaW5nIGVhcm5pbmdzIG9yIGxvc3Nlcy4uIApUZXJtaW5vbG9neSBDaGFpbiBsaWZ0ICAgUHVsbHMgdGhlIGNhciB1cCB0aGUgaW5pdGlhbCBoaWxsIHRvIGdpdmUgaXQgdGhlIHNwZWVkIHRvIHBlcmZvcm0gc29tZSBvZiB0aGUgbGF0ZXIgbWFub2V1dnJlcy4KRWxpemFiZXRoIGhvbGRzIGEgQkEgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBUZXhhcyBhdCBBdXN0aW4gYW5kIGFuIE1BIGZyb20gVUIuIFNoZSBpcyBhIDIwMTcgMTggRmVsbG93IGluIHRoZSBVbml2ZXJzaXR5IGF0IEJ1ZmZhbG8gSW5zdGl0dXRlIGZvciB0aGUgUmVzZWFyY2ggb24gV29tZW4gYW5kIEdlbmRlciBhbmQgMjAxOCAyMDE5IEh1bWFuaXRpZXMgSW5zdGl0dXRlIGZlbGxvdy4gCkJ1dCB0aGVuIGltYWdpbmUgaWYgc29tZW9uZSBnYXZlIEdyYXZpdHkgYSBmcmFuY2hpc2Ugc3BvdCwgYW4gb3JnIHRoYXQgd291bGQgZGlzc2FwcGVhci4gV2hpbGUgaXQgZ29vZCB0byBzZWUgdGhhdCBjdXJyZW50IG9yZ3MgaGF2ZSBpbnZlc3RlZCBhIGxvdCBpbnRvIHRoZSBzY2VuZSBhIGxvdCBvZiB0aGVzZSBvcmdzIGhhdmUgdmVyeSBsaXR0bGUgdG8gc2hvdyB3aGVuIGl0IGNvbWVzIHRvIG91dHNpZGUgb2YgdGhlIExlYWd1ZSBvZiBMZWdlbmRzIHNjZW5lIChQMSBjb21lcyB0byBtaW5kLCBFY2hvIEZveCBsb29rcyBsaWtlIGEgZGlzYXN0ZXIpLiAKRm9yIGh5cG5vdGljLCByZXBldGl0aXZlIG11c2ljLCBJJ20gYSBiaWcgZmFuIG9mIHRoZSBtaW5pbWFsaXN0cy4gQnV0IG1pbmltYWxpc20gaXMgbm90IGFtYmllbnQgbXVzaWMgICBpdCBkZW1hbmRzIHRvIGJlIGxpc3RlbmVkIHRvLCBpdCBjYW4ndCBiZSBhYnNvcmJlZCBwYXNzaXZlbHkuIFRoZXJlJ3Mgbm90IG11Y2ggb2YgaXQgd3JpdHRlbiBmb3Igc29sbyBwaWFubywgYnV0IEkgY291bGQgcG9pbnQgdG8gQ2hpbmEgR2F0ZXMgYnkgSm9obiBBZGFtcywgb3IgaXRzIGJpZ2dlciBicm90aGVyIFBocnlnaWFuIEdhdGVzLiBIaXMgQ29tbW9uIFRvbmVzIEluIFNpbXBsZSBUaW1lIGhhcyBhIGtpbmQgb2YgYW1iaWVudCBmZWVsLCBpZiB0aGF0J3Mgd2hhdCB5b3UncmUgbG9va2luZyBmb3IsIGFzIGRvZXMgR3JhbmQgUGlhbm9sYSBNdXNpYyAoYXQgbGVhc3QsIHVudGlsIHRoZSAzcmQgbW92ZW1lbnQpLgpBcyBhIGNvbnNlcXVlbmNlLCB0aGUgZmV3IG11c2NsZXMgdGhhdCBhcmUgd29ya2luZywgd29yayBleHRyZW1lbHkgaGFyZC4gTW9zdCBUYWkgQ2hpIHBvc3R1cmVzIGFyZSB2ZXJ5IHN0cmVudW91cyBvbiB0aGUgdGhpZ2ggbXVzY2xlcy4uIApJIHJhbiBpbnRvIHRoZSB3b21hbiB3aG8gd291bGQgYmVjb21lIG15IGRhdWdodGVyJ3MgbW90aGVyIGF0IHRoZSAyMDEyIFdvbWVuIG9mIHRoZSBXb3JsZCBQb2V0cnkgU2xhbSBpbiBEZW52ZXIuIFdoZW4gc2hlIHNoYXJlZCB0aHJvdWdoIHRlYXJzIHRoYXQgc2hlIGFuZCBoZXIgaHVzYmFuZCBoYWQgc3RhcnRlZCB0aGUgYWRvcHRpb24gcHJvY2VzcywgSSBrbmV3IG15IGFuc3dlci4gCkkgc3RhcnRlZCB1cCB0aGUgZm9vdHBhdGggdG8gTXQgVmVybm9uIGJ1dCBxdWlja2x5IHJlYWxpemVkIEkgd2FzIGhlYWRpbmcgdGhlIHdyb25nIHdheSBhbmQgbWFkZSBhIHF1aWNrIHR1cm4gYXJvdW5kLiBKdXN0IGFzIEkgd2FzIGRvaW5nIHRoYXQgYSBndXkgaW4gYSBibHVlIGphY2tldCB3aXRoIEZCSSBvbiBiYWNrIGFwcGVhcmVkIGZyb20gdW5kZXIgdGhlIGZvb3RwYXRoLCBhbmQgc3R1Y2sgb3V0IGhpcyBhcm0gdG8gYmxvY2sgbWUuIE5vdyBJJ20gb25seSA1IGZvb3QgNCwgc28gY2xvdGhlc2xpbmluZyBtZSB3YXMgcHJvYmFibHkgYWNjaWRlbnRhbCwgYnV0IGl0IGtub2NrZWQgdGhlIHdpbmQgb3V0IG9mIG1lLi4gClRoZXNlc29uZ3MgYXJlIG9uIGFuIGFsYnVtIGNhbGxlZCAiV2FsbWFydCBzb3VuZGNoZWNrLiIgVGhlIGxhdHRlciBmb3Vyc29uZ3MgaGF2ZSAiT3JpZ2luYWwgcGVyZm9ybWFuY2Ugc2VyaWVzIiBpbiB0aGVpciBuYW1lcy4gSXQgaXNiZWxpZXZlZCB0aGlzIGFsYnVtIGlzIG5vIGxvbmdlciBhdmFpbGFibGUgdmlhIHJldGFpbCBzdG9yZXMuIApXaGF0J3Mgbm90IHRhbGtlZCBhYm91dCBpbiB0aGlzIHRocmVhZCBpcyByaWRlIHF1YWxpdHkgYW5kIGludmVzdG1lbnQgZW5jb3VyYWdlbWVudC4gUGVvcGxlIHByZWZlciB0byByaWRlIHRoZSB0cmFpbiBvciBsaWdodCByYWlsIG92ZXIgYnVzc2VzIGFuZCB3b3VsZCBwcmVmZXIgdG8gbGl2ZSBuZWFyIGEgdHJhaW4gc3RhdGlvbiBvdmVyIGEgYnVzIHN0b3AuIApMRUMgTENTIGxpdmUgZGlzY3Vzc2lvbiB0aHJlYWRzIHdpbGwgYmUgc3RpY2tpZWQgYXV0b21hdGljYWxseSBhdCB0aGUgc3RhcnQgb2YgYSBnYW1lIGRheS4KVGFnZ2VkIEFubmllJ3MgTWFzc2FnZSwgYmFyLCBiYmJqLCBCVFMsIGZpc2hib3dsLCBHcmFuZCBNZXJjdXJlIEhvdGVsLCBtYXNzYWdlLCBOYW5hLCBOYW5hIFBsYXphLCBQbG9lbmNoaXQsIHJlZCBsaWdodCBkaXN0cmljdCwgcmVzdGF1cmFudCwgc29hcHkgbWFzc2FnZSwgU3VraHVtdml0IFJvYWQsIFN1a2h1bXZpdCBTb2kgMiwgU3VraHVtdml0IFNvaSA0LCBUaGFpIG1hc3NhZ2UsIHVucHJvdGVjdGVkClBlb3BsZSB3aG8gYWJ1c2UgY2hpbGRyZW4gZ2V0IG9mZiBvbiB0aGUgcG93ZXIgdGhleSBmZWVsIG92ZXIgaHVydGluZyBoZWxwbGVzcyBjaGlsZHJlbi4gVGhleSBhbHNvIGFyZSBsZXNzIGxpa2VseSB0byBzYXkgYW55dGhpbmcgb3V0IG9mIGZlYXIuIApBbGwgb2YgYSBzdWRkZW4gaXQgd2FzbiBhYm91dCBoYXZpbmcgZnVuIGFuZCBhIGZldyBsYXVnaHMsIGl0IHdhcyBhYm91dCB3aW5uaW5nIGFuZCBtYWtpbmcgYSBidWNrLiAKVGhleSB3aWxsIGFsc28gc2VlayBjbGllbnQgcmVsYXRpb25zaGlwcyB0aGV5IGZlZWwgYXJlIG1vcmUgZXF1aXRhYmxlLiAKSXQgc2ltcGxlIHJlYWxseS4gRXZlcnkgaHVtYW4gaGFzIGJhc2ljIHdhbnRzLCBhbmQgdGhlIHByaW1hcnkgb25lIGlzIHRvIGJlIGxvdmVkLiBBbmQgSSBiZWxpZXZlIGJlaW5nIGFjY2VwdGVkIGZhbGxzIGludG8gdGhhdCBjYXRlZ29yeS4gV2UgYXMgaHVtYW5zIHN0cml2ZSBsaWtlIGhlbGwgdG8gd2luIGF0IHRoZSBnYW1lIG9mIGxpZmUgYnkgcHVyc3VpbmcgaGFwcGluZXNzLiBXaGVuIGluIGFsbCByZXRyb3NwZWN0LCB3ZSBhcmUgYWN0dWFsbHkgcHVyc3VpbmcgcGxlYXN1cmUuIApUaGV5IGhhdmUgdGhlIGxvb2sgb2YgYSByZWFsIHRhYmxlIGJ1dCBhdCBhIGZyYWN0aW9uIG9mIHRoZSBjb3N0Li4gClRoZSBpZGVhIHRoYXQgaW1taWdyYW50IGdyb3VwcyBzbG93bHkgY2xpbWJlZCB0aGVpciB3YXkgdXAgdGhlIGVjb25vbWljIGxhZGRlciBvdmVyIGdlbmVyYXRpb25zIGlzIGxhcmdlbHkgZmFsc2U7IHRoZSBpbW1pZ3JhbnRzIHRoYXQgd2VyZSBwb29yIG92ZXJ3aGVsbWluZ2x5IGVuZGVkIHVwIGdvaW5nIGJhY2sgdG8gdGhlaXIgbmF0aXZlIGNvdW50cmllcy4gV2hhdCBhY3R1YWxseSBoYXBwZW5lZCBpcyB0aGF0IHRoZSBVbml0ZWQgU3RhdGVzIHNlbGVjdGVkIGZvciBwZW9wbGUgd2hvIGNvdWxkIG1ha2UgbW9uZXk7IGJsYWNrcyBzaW1wbHkgbmV2ZXIgd2VudCBiYWNrIHRvIEFmcmljYSBiZWNhdXNlIHRoZXkgbmVlZCB3aGl0ZSBwZW9wbGUgdG8gYmUgYXMgcmljaCBhcyB0aGV5IGFyZSB0b2RheSAoYmxhY2tzIGhhdmUgYWx3YXlzIGJlZW4gd2VhbHRoaWVyIHRoYW4gdGhlIGF2ZXJhZ2UgcnVzc2lhbiwgZXZlbiB1bmRlciBzbGF2ZXJ5KS4KQXBwbGUgc29sbCBzZWluZW4gbGFuZ2UgdW5kIG1pdCBncm9lciBTcGFubnVuZyBlcndhcnRldGVuICAgZGVyIGVpbmUgS29tYmluYXRpb24gZWluZXMgTGFwdG9wcyBtaXQgZWluZW0gUGhvbmUgZGFyc3RlbGx0LCBhbSAyOC4gTWFpIDIwMTAgaW4gR3JvYnJpdGFubmllbiB2b3JzdGVsbGVuLiBQaGlsIExhYWssIE1pa2UgQ2FybywgSmVubmlmZXIgVGlsbHkgdW5kIE5laWwgQ2hhbm5pbmcgamVkZXJ6ZWl0IGF1Y2ggbWl0IGRpZXNlbSBtb2Rlcm5lbiBUb3VjaHNjcmVlbiBHZXJ0IGVpbnNlaGVuIHp1IGtubmVuLCBkaWUgVmVyZmdiYXJrZWl0IHZvbiB3aWNodGlnZW4gSW5mb3JtYXRpb25lbiBhdXMgZGVyIHNwYW5uZW5kZW4gV2VsdCBkZXMgIFNwaWVsZXMgbWF4aW1hbCB2ZXJiZXNzZXJ0IHd1cmRlLgpOb3cgaWYgeW91J3JlIGRpZWhhcmRzIGxpa2UgdXMgdGhlbiBpdCB3b24ndCBzb3VuZCBvZGQgdGhhdCB3ZSB0cmFuc2Zvcm1lZCBvdXIgZ2FyYWdlIGludG8gYSBtaW5pIGNhc2luby4gClRoZSBwYXRyb24gcGxheSBsb25nZXIgYXQgYSBsb3dlciByYXRlOyB0aGUgcGxheWVyIHdpbGwgYmUgaGFwcGllciBhbmQgcGxheSBsb25nZXIsIGhlIHNhaWQuIApUaGUgZm91ciBJbGxhd2FycmEgc3VidXJicyBhcmUgY2xhc3NpZmllZCBhcyAiYmFuZCB0aHJlZSIgY29tbXVuaXRpZXMsIGFjY29yZGluZyB0byBhIExpcXVvciBhbmQgR2FtaW5nIE5TVyBtYXAgd2hpY2ggbWFya3MgdGhlbSBhcyByZWQgem9uZXMuIFRoZWlyICJoaWdoIHJpc2siIHJhdGluZyBoYXMgYmVlbiBkZWNpZGVkIGJhc2VkIG9uIHRoZWlyIHNvY2lvIGVjb25vbWljIGxldmVsIGRldGVybWluZWQgYnkgdGhlIEF1c3RyYWxpYW4gQnVyZWF1IG9mIFN0YXRpc3RpY3MuCkkgZ2V0IGF0dGFjaGVkIHRvIGFsbCB0aGVzZSB0ZWFjaGVycyBhbmQgdGhlcmFwaXN0cyBhbmQgaGFpcmRyZXNzZXJzIHdobyBhcmUgd29uZGVyZnVsIGFuZCBraW5kIGJ1dCBvbmx5IHJlYWxseSB0aGVyZSB0byBkbyB0aGVpciBqb2IgYW5kIHRoZW4gbW92ZSBvbi4gSXQgYmV5b25kIGVtYmFycmFzc2luZywgbm90IHRvIG1lbnRpb24gcGFpbmZ1bCwgdG8gYmUgc3R1Y2sgcmVwZWF0aW5nIHRoaXMgcGF0dGVybiBvZiBnZXR0aW5nIGF0dGFjaGVkIHRvIGEgTW9tIDIuMCB3aG9tIEkgc3RpbGwgZmFpbCB0byBtYWtlIGEgZ2VudWluZSBjb25uZWN0aW9uIHdpdGggYW5kIGdldCBsZWZ0IGJlaGluZC4gSXQganVzdCByZWluZm9yY2VzIG15IGJlbGllZiB0aGF0IHRoZXJlIHNvbWV0aGluZyBpbmhlcmVudGx5IGJhZCBhbmQgdW5sb3ZhYmxlIGFib3V0IG1lLiAKV2xhZCBoYWQgcG93ZXIsIGFzIHdlbGwgYXMgYm94aW5nIHNraWxscywgYnV0IGZvciBzb21lIHJlYXNvbiBubyBvbmUgd2lsbCBldmVyIHVuZGVyc3RhbmQgaGUgZGlkbiBwcmVzc3VyZSBGdXJ5IGluIHRoZWlyIGZpZ2h0LCBzbyB3ZSBuZXZlciBrbm93IGlmIGhlIGNvdWxkIGhhdmUgZ290dGVuIGtub2NrZWQgZG93biBhbmQgZ2V0IGJhY2sgdXAgYWdhaW4gYnkgYSBoYXJkIHB1bmNoZXIgbGlrZSBLbGl0c2Noa28uIApNeSBwb2ludCBoZXJlIGlzIHRoYXQgdGhlIHBsYXN0aWMgYm9keSBpcyBub3QgcGFzc2UuIApJZiB5b3UgZ2V0IGEgUm95YWwgRmx1c2gsIHlvdSB0aGVuIGhhdmUgdG8gbWFrZSBpdCBwYXkgb2ZmLiAKTW9zdCBwZW9wbGUgZG9uJ3Qgc3R1bWJsZSBpbiB0byB3ZWFsdGgsIGl0cyB2ZXJ5IGdlbmVyYXRpb25hbC4gR3Jvd2luZyB1cCB3aXRoIHJpY2ggZnJpZW5kcyBhbmQgdGhleSBuZXZlciB3b3JrZWQgZW50cnkgbGV2ZWwgam9icyBhbmQgb2Z0ZW4gbW92ZWQgaW50byB0aGUgZmllbGQgdGhlaXIgcGFyZW50IHdvcmtzIHdpdGggICBzYW1lIGhhcHBlbnMgd2l0aCB0aGUga2lkcyB3aG8ncyBwYXJlbnRzIGFyZSBjYXJwZW50ZXJzIGFuZCB0cmFkZXNtZW4gYnV0IHRoZXkgZG9uJ3QgZXZlciBlbmQgdXAgaW4gdGhlICsyNTBrIHdlYWx0aCBicmFja2V0Li4gCkZyb20gdGhlIHBvdiBvZiBhbiBlbmdpbmVlciBsb29raW5nIGZvciB0aGUgbGFzdCBwaWVjZSBvZiBwZXJmb3JtYW5jZSwgdGhlbiBpdCBzb3VuZHMgb2YgY291cnNlIHJlYXNvbmFibGUgYW5kIHZlcnkgcHJvbWlzaW5nLiAKSSdtIHNvcnJ5IHRoaW5ncyBkaWQgbm90IHdvcmsgb3V0IHRoZSB3YXkgeW91IHdhbnRlZCwgYnV0IEkgYW0gYSBzY2hvb2wgcHN5Y2hvbG9naXN0IGFuZCBhbiBhZHZvY2F0ZSBmb3IgdGhlIHB1YmxpYyBzY2hvb2xzLiBJIHdvcmsgd2l0aCBtYW55IHN0dWRlbnRzIHdpdGggZHlzbGV4aWEgYXQgbXkgc2Nob29scyBhbmQgYXNzaXN0IHRoZSBzcGVjaWFsIGVkdWNhdGlvbiB0ZWFjaGVycyB3aXRoIHVzaW5nIGFwcHJvcHJpYXRlIHJlc291cmNlcyBhbmQgc3RyYXRlZ2llcyBmb3IgZHlzbGV4aWEuIFRoZSBwdWJsaWMgc2Nob29sIHNob3VsZCBiZSBhYmxlIHRvIHByb3ZpZGUgdGhlIHJlYWRpbmcgc2VydmljZXMgeW91ciBzb24gbmVlZHMsIGFuZCBpZiB0aGV5J3JlIG5vdCB0aGVuIHRoZXkncmUgbm90IGRvaW5nIHRoZWlyIGpvYnMuCkJlY2F1c2UgdGhhdHMgImp1c3QgdGhlIHNvY2lhbCBub3JtIj8/P1RoaXMgd291bGQgaW5ldml0YWJseSBhcHBseSB0byBpbmRpdmlkdWFscyB3aG8gYXJlIG9uIHRoZSBhdXRpc3RpYyBzcGVjdHJ1bSwgcGh5c2ljYWxseSBkaXNhYmxlZCBvciBoYXZlIGRvd24gc3luZHJvbWUuIApJdCdzIGEgbGllIHRoYXQgZXZlcnkgcG9rZXIgZ2FtZSBmZWF0dXJlcyBhIHN1Y2tlciAgIGluIGNhc2lub3MgdGhleSBmcmVxdWVudGx5IGZlYXR1cmUgc2V2ZXJhbCBzdWNrZXJzICh3aG8gcGF5IHRoZSBob3VzZSB0byBiZSB0aGVyZSksIG9uZSBkZWNlbnQgcGxheWVyICh3aG8gb2Z0ZW4gcGF5cyB0aGUgaG91c2UgYSBjb21taXNzaW9uIHRvIGJlIHRoZXJlIHdpbm5pbmcpLCBhbmQgdGhlIGhvdXNlICh3aGljaCB0YWtlcyBhIHJha2UgYW5kIHRoZXJlZm9yZSB3aW5zIGF0IHBva2VyIHdpdGhvdXQgaGF2aW5nIGFueSBjYXJkcykuLiAKQSBiaWcgZGlmZmVyZW5jZSB0b2RheSAoZnJvbSAxOTcwKSwgc2FpZCB0aGUgODEgeWVhciBvbGQgbGVnZW5kIHdobyBob3N0ZWQgVGhlIFRvbW15IEh1bnRlciBTaG93IG9uIHJhZGlvIGFuZCB0aGVuIHRlbGV2aXNpb24gZm9yIDMyIHllYXJzLgpXaW5uZXJzIGFyZSBlbmR1cmluZzogVGhlIHRyaXVtcGhhbnQgcGxheWVycyBhcmUgdXN1YWxseSB0b2xlcmFudC4gSXQgaXMgb2Z0ZW4gc2VlbiB0aGF0IHRoZSBwbGF5ZXJzIGRvIGdldCBpbXBhdGllbnQgYWZ0ZXIgdGhlIGRlYWxpbmcgb2YgaGFuZCBhZnRlciBoYW5kIG9mIGRlYnJpcyBjYXJkcy4gCkxhbm9saW4gaXMgYSB0eXBlIG9mIGx1YnJpY2FudCB0aGF0J3MgZWZmZWN0aXZlIGluIHJlc3RvcmluZyBza2luJ3MgaHlkcmF0aW9uLiBTa2luIHRlbmRzIHRvIGxvc2UgaXRzIG1vaXN0dXJlIGZyb20gdGltZSB0byB0aW1lIGFuZCBsYW5vbGluIGlzIGFuIGV4Y2VsbGVudCBtb2lzdHVyaXplciB0byBoZWFsIGl0LiAKQ3RzbXg1MDAgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNCBkYXlzIGFnbwpBbHNvLCBhcyBvdGhlcnMgaGF2ZSBzYWlkLCBtYWtlIHN1cmUgeW91IG9mZmVyaW5nIHRoZSBzYW1lIGJhc2ljIHRoaW5ncyB0aGF0IFN0YXJidWNrcyBpcy4gCkl0IG1lYW5zIHNvbWVvbmUgd2hvIGlzIGluIGEgc3RhdGUgb2YgY29uZnVzaW9uIG9yIGZydXN0cmF0aW9uLCBpbiB3aGljaCB0aGV5IGFkb3B0IGFuIG92ZXIgYWdncmVzc2l2ZSBzdHJhdGVneS4gCiJJdCBpcyBhIG1pbmQgZ2FtZSBwbGF5ZWQgYnkgdGhlIHlvdW5nIGFuZCB0aGUgb2xkLCBtYWxlIGFuZCBmZW1hbGUsIHNpdHRpbmcgYWxsIHRvZ2V0aGVyIHdoaWNoIGlzIGEgdW5pcXVlIHByb3Bvc2l0aW9uIHRoYXQgbm8gb3RoZXIgc3BvcnQgY2FuIG9mZmVyIGF0IHRoaXMgc3RhZ2UsIiBzYXlzIGhlLi4gClRoZSBtb3N0IGRpZmZpY3VsdCBjb3VudHJpZXMgdGhhdCBhcmVuIG5vdCBpbXBvcnRhbnQgYXJlIENoaW5hIGFuZCBPdHRvbWFuLCBib3RoIG9mIHRoZW0gZ2V0IGJ1dHRmdWNrZWQgYW5kIHN0YWJiZWQgaW4gdGhlIGJhY2sgYnkgR1BzIGNvbnN0YW50bHksIHlvdXIgcGVhayBwcm9iYWJseSB3b3VsZCBiZSByZWNsYWltaW5nIHRoZSBsb3N0IHRlcnJpdG9yaWVzLgpCdXQgaW4gdGhpcyBjYXNlLCB5b3UgYmxhbWluZyBhbiBBc2lhbiB3b21hbiBmb3IgdGhlIG11cmRlciBvZiB0aHJlZSBBc2lhbiBtZW4gYmVjYXVzZSBvZiB3aGF0PyBBIGJvb2sgc2hlIHdyb3RlIDI1IHllYXJzIGFnbz8uIApIb3BlZnVsbHkgaXQgaGlzIGVmZm9ydCB0byBhYnNvbHZlIFNoYW5uYW4gb2YgdGhpcyBsaW5nZXJpbmcgIndoYXQgaWY/IiBhbmQgYnJpbmcgc29tZSBwZWFjZSB0byBoZXIgZmFtaWx5IGFuZCBsb3ZlZCBvbmVzLi4gCiAxMjEgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnb01vbmV0IGdldHMgaW52aXRlZCB0byBiZSBpbiBhIG11c2ljIHZpZGVvIHdpdGggTUFET05OQS4gVGVsbHMgTVAgdGhhdCBzaGUgbmVlZHMgdG8gbGVhdmUgdG8gcmVjb3JkIHRoZSB2aWRlby4gVGhleSBzYXkgc2hlIGNhbiBnbyBiZWNhdXNlIG9mIHRoZSBzaG9ydCBub3RpY2UuIApPdGhlciB0aW1lcywgaGUnbGwgZ2l2ZSB5b3UgaGlzIHdob2xlIHN0YWNrLiBGb3J0dW5hdGVseSwgdGhlcmUncyBubyBndWVzc3dvcmsgcmVxdWlyZWQuIENhbGN1bGF0aW5nIHlvdXIgaW1wbGllZCBvZGRzIGFjY3VyYXRlbHkgaXMgcmVsYXRpdmVseSBzaW1wbGUuIAp0eXBlcyBvdSBsZSBtYXJpYWdlIG15c3RpcXVlIHNlbG9uIENHIEpVTkcKVGhlIGxhcmdlIGthIHdpdGhpbiB0aGUgcGFzdCBtb250aCBoYXMgdGFrICBjbGFzcyB3YXMgZHVseSBpbXByZXNzZWQgd2l0aCB0aGUgZW4gYSBwcm9wZXJ0eSBpbXByb3ZlbWVudCBpbnZlbiAgYmVhdXRpZnVsIGNlcmVtb255ICxhbmQgZW5qb3llZCB0b3J5IG9uIHRoZSBTaXRrYSBIaWdod2F5IGFuZCB0aGUgd29yayB2ZXJ5IG11Y2guJyBTYXcgTWlsbCBDcmVlayBSb2FkLCBleGNsdXNpdmUgVGhvc2UgaW5pdGlhdGVkIHdlcmUgTG91cmV0dGEgb2YgdGhlIFNpdGthIENpdHkgbGltaXRzLiAKSWYgeW91IGhhdmUgZXZlciBzZWVuIGEgcGljdHVyZSBvZiBhIHZhcGUgcG9zdCBiYXR0ZXJ5IHZlbnRpbmcgaW4gd2hpY2ggdGhlIGF0b21pemVyIGlzIHN0dWNrIGluIHRoZSBjZWlsaW5nLCB0aGFuIHRoaXMgaXMgd2hhdCBoYXBwZW5lZC4uIApPcmlnaW5hbGx5IG9ubHkgaGVhcmluZyB0aGVpciBzb25ncyBvZiB0aGUgYW5pbWUgc2VyaWVzLCBJIGxvb2tlZCBtb3JlIGludG8gdGhlaXIgbXVzaWMgYW5kIGRpc2NvdmVyZWQgdGhhdCB0aGVyZSBldmVuIG1vcmUgZ3JlYXQgbXVzaWMgZnJvbSB0aGVtLiAKSmUgbidvc2UgcGVuc2VyICBjZSBxdSdpbCBlbiBjb3RlcmFpdCAgdW4gc21pY2FyZCBmcmFuYWlzIGVuIHZvdWxhbnQgc3VpdnJlIGNldHRlIHZvaWUuRW5maW4gbGUgRHIgSG9yb3dpdHogZXN0IHVuIGludGVybmlzdGUgY2UgcXVpIHNpZ25pZmllIHF1J2lsIG1hdHJpc2UgcGx1c2lldXJzIHNwY2lhbGl0cywgc2kgYmllbiBxdSd1biBnbnJhbGlzdGUgbW1lIG1vdGl2IHJpc3F1ZSBkJ3RyZSByYXBpZGVtZW50IGRwYXNzIHBhciBsJ2FtcGxldXIgZHUgc3VqZXQuIEVuZmluIGNvbW1lIGJlYXVjb3VwIGQnb3V2cmFnZXMgdGVjaG5pcXVlcyBlbiBmcmFuYWlzIGNlIGxpdnJlIG5lIGNvbXBvcnRlIGF1Y3VuIGluZGV4LiBDZXR0ZSBkaXRpb24gZXN0LCBpbCBmYXV0IGxlIGRpcmUsIHVuIHZ1bGdhaXJlIHRyYXZhaWwgZCdhbWF0ZXVyICFCcmVmLCBpbCBtZSBzZW1ibGUgcXVlIGxhIHByaXNlIGVuIGNoYXJnZSBkZSBMeW1lIGV0IGRlIHNlcyBjbyBpbmZlY3Rpb25zIHNlbG9uIGNldHRlIHBlcnNwZWN0aXZlIG4nZXN0IGd1cmUgZW52aXNhZ2VhYmxlIHF1J2F1IHNlaW4gZCd1bmUgbWRlY2luZSBob3NwaXRhbGlyZS5KZSBqb2lucyBhdXNzaSBhdXggcHJzZW50ZXMgOiAgdW5lIGxldHRyZSBzaWduZSBwYXIgbW9pLCBkZW1hbmRhbnQgdW4gaW52ZXN0aXNzZW1lbnQgZGVzIFBhcmxlbWVudGFpcmVzIHBvdXIgbGEgcmVjb25uYWlzc2FuY2UgZGVzIG1hbGFkaWVzIHZlY3RvcmllbGxlcyAgdGlxdWVzLCAgdW5lIGxpc3RlIGRlIHJmcmVuY2VzIGV0IGRvY3VtZW50cyByZWxhdGlmcyAgbGEgbWFsYWRpZSBkZSBMeW1lLCAgUFBSRSBOMjAwMywgIHRleHRlIGFkb3B0IE40MDAuVm9pY2kgcXVlbHF1ZXMgcHJjaXNpb25zLiAKR2FuZyB2aW9sZW5jZSB3YXMgYmFkIGF0IHRoYXQgdGltZSAoZXZlbiBpbiBLQykgc28gdGhlcmUgdGhhdC4gCkxpdiBCb2VyZWUgaW4gc2V4eSBkYW5jZQpZZXMsIEluZm9ybWF0aWNzIGlzIG9uIHRoZSBsaXN0LCBidXQgbm90ZSBob3cgaXQgaXMgYWxzbyB0aGUgb25seSBvbmUgd2l0aG91dCBhIGh5cGVybGluayB0YWtpbmcgeW91IHRvIHRoZSBwcm9ncmFtIHBhZ2UuIEkgYWN0dWFsbHkgaGFkIGl0IGJvb2ttYXJrZWQgZm9yIGEgZmV3IG1vbnRocy4gCkFzIG11Y2ggYXMgbGl2ZSBzcG9ydHMgd2lsbCBnZW5lcmF0ZSB0aGUgbGlvbidzIHNoYXJlIG9mIGNvbW1lcmNpYWwgaW1wcmVzc2lvbnMgZm9yIHRoZSByZXZhbXBlZCBGb3gsIHRoZSBCaWcgRm91ciBicm9hZGNhc3RlciBuZXh0IGZhbGwgd2lsbCBzdGlsbCBiZSBvbiB0aGUgaG9vayB0byBwcm9ncmFtIHNvbWUgZWlnaHQgaG91cnMgb2YgZ2VuZXJhbCBlbnRlcnRhaW5tZW50IGZhcmUgcGVyIHdlZWsuIApPZiB0aGUgMTQgYXZhaWxhYmxlIGNyYXBzIHRhYmxlcywgdGhleSBzaWRsZWQgdXAgdG8gdGhlIG5lYXJlc3Qgb25lIGFuZCB3YWl0ZWQgZm9yIHRoZSB0aHJlZSBvdGhlciBwbGF5ZXJzIHRvIGZpbmlzaCByb2xsaW5nLiBDYXByYSBzaG90IG5leHQsIGJ1dCBzZXZlbmVkIG91dCBxdWlja2x5LiAKVGhhbmtmdWxseSwgdGhlcmUgYXJlIG1hbnkgcGVvcGxlIGluIGEgc2ltaWxhciBzaXR1YXRpb24sIHdpdGggbG90cyBvZiBzZW5pb3JzIGxvb2tpbmcgdG8gZmluZCB0aGF0IHNwZWNpYWwgc29tZW9uZS4gVW5saWtlIHRoZSB3aWxkIGZyb250aWVyIG9mIG9ubGluZSBkYXRpbmcsIG91ciBldmVudHMgYXJlIGRlc2lnbmVkIHRvIGxldCB5b3Uga25vdyBleGFjdGx5IHdoZXJlIHRvIGdvLiAKVGhlIHBhdGh3YXkgcmFuIGZvciBzaXggbW9udGhzIGFuZCB0aGVuIGFuIEYyIGNvbGxlYWd1ZSBhc3Nlc3NlZCBhbnkgYmVuZWZpdC4gCihFbnRlciBEb2N0b3IgRGlldHJpY2gsIGEgY291bnNlbG9yIHdobyBwcmFjdGljZXMgd2l0aCBhIHdpc2UgYW5kIHlldCBzdHJpa2luZ2x5IGF0dHJhY3RpdmUgbWFubmVyIGEgY3Jvc3MgYmV0d2VlbiBTaWdtdW5kIEZyZXVkLCBZb2RhIGFuZCBCcmFkIFBpdHQuKQpBbGwgdGhhdCB0byBzYXkgZnJvbSBteSBsaW1pdGVkIGV4cGVyaWVuY2UgaW4gcG9rZXIsIHdoZW4gbW9zdCBwZW9wbGUgc2F5IHRoZXkgbG92ZSB0byBnbyBwcm8sIHRoZXkgbGlrZWx5IG11Y2ggYmV0dGVyIG9mZiBrZWVwaW5nIGl0IGFzIGEgaG9iYnkuIEl0IGVhc3kgdG8gZ2V0IHR1bm5lbCB2aXNpb24gd2l0aCAiSSBsb3ZlIHBsYXlpbmcsIiAiSSBjYW4gd2luIHNldmVyYWwgaHVuZGVyZCBpbiBhIGZldyBob3VycywgY2FuIGRvIHRoYXQgYXQgbXkgam9iIiAibm8gYm9zcyBvciB0aW1lY2xvY2siLiBUaGV5IGRvbiB0aGluayBhYm91dCBnb2luZyB0byB3b3JrIGZvciAxLCAyLCBzb21ldGltZXMgMyBvciBtb3JlIHdlZWtzIGFuZCBsb3NpbmcgbW9uZXkuIERvd25zd2luZ3MgYXJlbiB0aGUgb25seSBkb3duZmFsbC4gRG8geW91IGRyaW5rPyBIb3cgbXVjaD8gRG8geW91IHBsYXkgZ2FtZXMgaW4gdGhlIHBpdD8gU3BvcnRzIGJldD8gSSBzZWVuIHBlb3BsZSBoYW5kbGUgdXBzd2luZ3Mgd29yc2UgdGhhbiB0aGV5IGhhbmRsZSBkb3duc3dpbmdzLiBTdWRkZW5seSB0aGVyZSBjYXNoIGdhbG9yZSwgImxldCBkbyB0aGUgYnVmZmV0LCBsZXQgb3JkZXIgVWJlciBlYXRzLCBsZXQgZ28gY2x1YmJpbmcgaW5zdGVhZCBvZiBncmluZGluZyB0aGlzIHdlZWtlbmQgd2UgdXAsIHdoYXQgaXQgbWF0dGVyPyIgTGlrZSBNaWtlIE1jZGVybW90dCBzYWlkICJpdCBsaWtlbHkgYW55IG90aGVyIGpvYi4iIFdlbGwgaXQgbm90LCBidXQgeW91IG5lZWQgdG8gdGFrZSBpdCBzZXJpb3VzbHkgYW5kIGJlIHdpbGxpbmcgdG8gcHV0IGluIHRoZSBob3VycyBsaWtlIHlvdSBkbyBub3cuIFdoZW4gcG9rZXIgeW91ciBqb2IsIGV2ZXJ5IGRlY2lzaW9uIHlvdSBtYWtlIGlzICsgb3IgIGV2LCBzZXQgYSBwbGFuLCBzZXQgZ29hbHMgYW5kIHByaW9yaXRpZXMgdGhlbiBzZXQgYWJvdXQgYSB3YXkgdG8gYWNoaWV2ZSB0aGVtLgpXZWxsLCBsb29rIG5vIGZ1cnRoZXIuIEkndmUgY3VsbGVkIHRoZSBkZXB0aHMgb2YgTmV0ZmxpeCB0byBicmluZyB5b3UgZml2ZSByZWxheGluZyBtb3ZpZXMgdGhhdCBhcmUgYWxsIHZlcnkgZGlmZmVyZW50LiAKSSBoYWQgd2F0Y2hlZCBKZXNzaWNhIG1pbmQgZGV0ZXJpb3JhdGUgZm9yIHNldmVuIHllYXJzLiBTZXZlbiB5ZWFycyBvZiBpbnZhc2l2ZSBwcm9jZWR1cmVzIGFuZCBoZXIgZm9yZ2V0dGluZyBoZXIgb3duIG5hbWUgYW5kIGZvcmdldHRpbmcgaG93IHRvIHVzZSB0aGUgYmF0aHJvb20uIFNldmVuIHllYXJzIG9mIGhlciBwbGVhZGluZyB3aXRoIG1lIHRvIHN0b3AgdGhlbSBvciBwdXQgYW4gZW5kIHRvIGl0IGJ1dCBJIGNvdWxkIG5ldmVyIGJyaW5nIG15c2VsZiB0by4gCkkgd2FzIGEgc2luZ2xlIG1vdGhlciBnZXR0aW5nIGludG8gdGhlIFRpbmRlciByZWFsbSBmb3IuIEkgd2Fzbid0IHJlYWxseSBzdXJlIHdoYXQuIEkgZGlkbid0IGxpc3QgdGhhdCwgYXMgaXQncyBwcml2YXRlLCBJIHdhbnRlZCB0byBwcm90ZWN0IG15IGRhdWdodGVyLCBhbmQgZnJhbmtseSwgSSBkaWRuJ3Qga25vdyB3aGF0IEkgd2FzIGxvb2tpbmcgZm9yLiBCZWZvcmUgdGhlIGZpcnN0IHBsYW5uZWQgIndhbm5hIGNvbWUgb3ZlciIgKHdpdGggbXkgZGF1Z2h0ZXIgYXQgYSBzaXR0ZXIncyksIEkgc2FpZCwgaGV5LCBqdXN0IGZ1bGwgZGlzY2xvc3VyZSAgSSBrbm93IHdoYXQgd2UncmUgYm90aCBhZ3JlZWluZyB0byByaWdodCBub3csIGJ1dCBzdGlsbCB0aGluayB5b3Ugc2hvdWxkIGtub3cgSSBoYXZlIGEgY2hpbGQuIFNoZSB3b24ndCBiZSBhcm91bmQsIGJ1dCBJJ2QgcmF0aGVyIHlvdSBrbm93LiBIZSB3YXMgZmluZSBmb3IgdGhhdCBob29rdXAsIGhlIGFic29sdXRlbHkgZGlkbid0IGNhcmUsIGFuZCB3ZSBlbmRlZCB1cCBzZWVpbmcgb25lIGFub3RoZXIgYWdhaW4uIFdlIGJyb2FjaGVkIHRoZSB0b3BpYyBvbiBhIGRhdGUsIGFuZCB3aGlsZSBoZSBpbml0aWFsbHkgZmVsdCBhIGxpdHRsZSBhd2t3YXJkIHdpdGggdGhlIGtub3dsZWRnZSwgaGUgYXBwcmVjaWF0ZWQgbXkgaG9uZXN0eSBhbmQgbXkgdGltaW5nLCBhbmQgd2UncmUgbWFycmllZCBub3chCldoaWxlIGEgc2xvd2Rvd24gd2FzIHdpZGVseSBleHBlY3RlZCBpbiB0aGUgZmluYWwgbW9udGhzIG9mIHRoZSB5ZWFyIGR1ZSB0byBmYWxsaW5nIG9pbCBwcmljZXMsIGl0IGEgbXVjaCBibGVha2VyIHBpY3R1cmUgdGhhbiBhbnlvbmUgYW50aWNpcGF0ZWQgd2l0aCB3ZWFrbmVzcyBleHRlbmRpbmcgd2VsbCBiZXlvbmQgdGhlIGVuZXJneSBzZWN0b3IuIENvbnN1bXB0aW9uIHNwZW5kaW5nIGdyZXcgYXQgdGhlIHNsb3dlc3QgcGFjZSBpbiBhbG1vc3QgZm91ciB5ZWFycywgaG91c2luZyBmZWxsIGJ5IHRoZSBtb3N0IGluIGEgZGVjYWRlLCBidXNpbmVzcyBpbnZlc3RtZW50IGRyb3BwZWQgc2hhcnBseSBmb3IgYSBzZWNvbmQgc3RyYWlnaHQgcXVhcnRlciwgYW5kIGRvbWVzdGljIGRlbWFuZCBwb3N0ZWQgaXRzIGxhcmdlc3QgZGVjbGluZSBzaW5jZSAyMDE1LgpUaGUgaW50ZW50aW9uIHdhcyBuZXZlciB0byBjaG9vc2UgdXAgc2lkZXMgbGlrZSBhIHNjcmF0Y2ggZm9vdGJhbGwgZ2FtZS4gSSBwZXJzb25hbGx5IGZvdW5kIGl0IHRvIGJlIG9uZSBvZiBoZXIgYmV0dGVyIHZpZGVvcywgYW5kIHNoZSBrbmV3IGl0IHdvdWxkIGJlIGNoYWxsZW5naW5nIGZyb20gdGhlIGdldCBnby4gU2hlIHNhaWQgYXMgbXVjaC4uIApXaGVyZSBkb2VzIHRoZSBCTVYgc3RvcmUgeW91ciBzY2FubmVkIGJpcnRoIGNlcnRpZmljYXRlLCBTb2NpYWwgU2VjdXJpdHkgY2FyZD86IE1vbmV5IE1hdHRlcnMgV2hlcmUgZG9lcyB0aGUgQk1WIHN0b3JlIHlvdXIgc2Nhbm5lZCBiaXJ0aCBjZXJ0aWZpY2F0ZSwgU29jaWFsIFNlY3VyaXR5IGNhcmQ/OiBNb25leSBNYXR0ZXJzIEkgd2FzIHRyeWluZyB0byByZXNlYXJjaCBPaGlvIEJNViBwb2xpY3kgb24gU3RhdGUgSUQgZG9jdW1lbnRhdGlvbiBhbmQgSSBzYXcgeW91ciBhcnRpY2xlIGZyb20gbGFzdCBKdWx5LiBNeSBodXNiYW5kIGFuZCBJIHJlY2VudGx5IG1vdmVkIGJhY2sgdG8gT2hpbyBhbmQgSSBuZWVkIHRvIGdldCBhbiBPaGlvIGRyaXZlcidzIGxpY2Vuc2UgYW5kIHZlaGljbGUgcmVnaXN0cmF0aW9uLiBJJ20gY29uY2VybmVkIGJlY2F1c2UgbXkgcGVyc29uYWwgZG9jdW1lbnRzIChpbmNsdWRpbmcgbXkgYmlydGggY2VydGlmaWNhdGUgYW5kIFNvY2lhbCBTZWN1cml0eSBjYXJkKSB3ZXJlIHNjYW5uZWQuIApJIGxpa2UgUGVubnkgdGFrZSBvbiB0aGUgaHVtb3JvdXMgc3B5IHRocmlsbGVyIGdlbnJlLCBpbiBhbiBhbG1vc3QgSGl0Y2hjb2NraWFuIHZlaW4sIGFsYmVpdCB3aXRoIG11Y2ggYnJvYWRlciBodW1vciBhbmQgc29tZXdoYXQgb3ZlciB0aGUgdG9wIHNsYXBzdGljay4gCk9uZSBvZiB0aGUgbWFpbiBkaWZmZXJlbmNlcyBiZXR3ZWVuIHRoaXMgYW5kIGFzayBpcyB0aGF0IEkgd291bGQgbGlrZSB0byBzZWUgc29tZSBkZWdyZWUgb2YgaW50ZWxsaWdlbmNlIGFwcGFyZW50IGluIGl0cyB1c2VycyAoSSdtIGFscmVhZHkgZGVhZCkgU29tZSB0aGluZ3MgYXJlIGZpbmUuIEkgdW5kZXJzdGFuZCBkaWdpYm94IHVzZXJzIGhhdmUgdHJvdWJsZSB3aXRoIGNhcGl0YWxpc2F0aW9uIG5vdCBhbiBpc3N1ZSwgYW5kIHRoZXJlIGFyZSBnb2luZyB0byBiZSBzcGVsbGluZyBtaXN0YWtlcyBhbmQgdHlwb3MsIG5vIHdvcnJpZXMuIAoyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29UaGUgdGhpbmcgaXMgYXQgdGhpcyBwb2ludCB5b3UncmUgdXNpbmcgaW5lZmZlY3RpdmUgbWV0aG9kcyB0byB0cnkgYW5kIHNvbHZlIGEgcHJvYmxlbSBtYWRlIGJ5ICJzb2x1dGlvbnMiIHRvIG90aGVyIGlzc3VlcyBpdCdzIGxpa2UgcHV0dGluZyBhIGJhbmQgYWlkIG9uIHRvcCBvZiBhIGJhbmRhaWQuIEVpdGhlciB5b3UgY2FuIGtlZXAgcHV0dGluZyBvbiBtb3JlIG9mIHRoZW0gb24gdG9wIG9yIHlvdSBjYW4gZHJhdyB0aGVtIG9mZiAocmVtb3ZlIHN1YnNpZGllcyBhbmQgYW55dGhpbmcgZ2l2aW5nIHRoZW0gYW4gYWR2YW50YWdlIGluIGdlbmVyYWwpLiAKIkR1bmNhbiB3YXMgYSByZWFsIGJveSBib3ksIiBzaGUgc2F5cy4gCkJ5IG1ha2luZyBhIGJldCBvbiBhIGZsdXNoIGZsb3AgeW91IGNvbW1pdHRlZCB5b3Vyc2VsZiB0byBhbGwgaW4uIFlvdSBjb3VsZCBoYXZlIGVhc2lseSBsb3N0IHRvIGFueSBmbHVzaCwgc28geW91IHByZXRlbmQgeW91IGhhdmUgdGhlIGZsdXNoIG5vdCBwbGF5IHRoZSAyIHBhaXIuIE90aGVyd2lzZSB5b3UgY2hlY2sgeW91cnNlbGYgb3V0IG9mIHRoYXQgaGFuZC4gClRoZW4gc3RhcnQgcGxheWluZyBpbiBjYXNpbm9zIC4gCkluIHRoZSBtb3ZlbWVudCB5b3UgZGVzY3JpYmUgKEkgZGlkbiBib3RoZXIgdG8gd2F0Y2ggdGhlIHZpZGVvIHRvIHRoZSBlbmQpIG9uZSBtdXNjbGUgaXMgZG9pbmcgYW4gaXNvbWV0cmljIGNvbnRyYWN0aW9uIHdoaWxlIG90aGVyIG11c2NsZXMgaW4gYW5kIGFyb3VuZCBpdCBhcmUgbW92aW5nLiBUaGlzIGNhbiBicmVhayBhZGhlc2lvbnMgYmV0d2VlbiB0aGUgbXVzY2xlcyBhbGxvd2luZyBmb3IgZnJlZXIgbW92ZW1lbnQuIEkgd2lsbCB0cnkgdG8gd2F0Y2ggdGhlIHZpZGVvIGJ1dCB3YXRjaGluZyBhIHBlcnNvbiBnZXR0aW5nIHRyZWF0ZWQgaXMgdGhlIGxhc3QgdGhpbmcgSSB3YW50IHRvIGRvIG9uIG15IGRheXMgb2ZmLiAKUiBQb2tlciBDaGFtcGlvbnNoaXAgMjAxMCBTQ09PUCBoZXJhdXMKSSBkaXNhZ3JlZS4gSSBhZ3JlZSB3aXRoIHRoZSBvdGhlciBjb21tZW50IHJlcGx5IGFjdHVhbGx5LiAKV29yc2UgeWV0LCBpZiB0aGUgc2VsbGVyIHB1dHMgdGhlIHByb3BlcnR5IGJhY2sgb24gdGhlIG1hcmtldCBhbmQgcmVjZWl2ZXMgbGVzcywgc2hlIGNvdWxkIGJlIG9uIHRoZSBob29rIGZvciB0aGUgZGlmZmVyZW5jZS4uIApJdCByZWFsbHkgYSBsb3cgYnJvdyBkaXNjdXNzaW9uIGFib3V0IGEgbm9uIGlzc3VlIHRoYXQgYXBwZWFscyB0byBYZW5vcGhvYmVzIGFuZCByYWNpc3RzLiAKU29tZSBwZW9wbGUgaGF2ZSB0aGUgaWRlYSB0aGF0IGFuaW1hbHMgY2FycnkgYWxsIGtpbmRzIG9mIGRhbmdlcm91cyBkaXNlYXNlcy4gU29tZSBvZiB0aG9zZSBmZWFycyBhcmUgd2VsbCBmb3VuZGVkLCBlc3BlY2lhbGx5IGFtb25nIHdpbGQgb3IgZXhvdGljIGFuaW1hbHMuIEJ1dCB0aGUgdHJ1dGggaXMsIHRoZXJlIGFyZW4ndCB2ZXJ5IG1hbnkgc2VyaW91cyBkaXNlYXNlcyB5b3UgY2FuIGNhdGNoIGZyb20gYSBkb21lc3RpYyBhbmltYWwgICBhbmQgZXNwZWNpYWxseSBub3QgZnJvbSBhIHBldC4gT3RoZXJ3aXNlLCBpdCB3b3VsZG4ndCBtYWtlIHZlcnkgZ29vZCBwZXRzLCB3b3VsZCB0aGV5PyBUaGVyZSBhcmUsIGhvd2V2ZXIsIHNvbWUgZGlzZWFzZXMgdGhhdCBjYW4gYmUgdmVyeSBzZXJpb3VzIGZvciB5b3VyIGNhdC4gSW4gdGhpcyBhcnRpY2xlLCB3ZSB3aWxsIHJldmlldyBhbmQgcHJvdmlkZSB0cmVhdG1lbnQgZm9yIHZhcmlvdXMgY2F0IGRpc2Vhc2VzIG92ZXIgdGhlIGZvbGxvd2luZyBzZWN0aW9uczoKRXZlbiBtaWRzaXplIGNpdGllcyBsaWtlIERlc3NhdSBvciBCaWVsZWZlbGQgaGF2ZSBwbGVudHkgb2Ygb3B0aW9ucywgYW5kIHdoZXJlIGluIEdlcm1hbnkgb3IgcmVhbGx5IENlbnRyYWwvV2VzdGVybiBFdXJvcGUgb3ZlcmFsbCBpcyBtb3JlIHRoYW4gMTVLbSBmcm9tIGEgY2l0eSBvZiBhdCBsZWFzdCA1MGs/IFRoZSBCYXZhcmlhbiBBbHBzIG1heWJlLCBidXQgZXZlbiB0aGVyZSwgbW9yZSBwbGFjZXMgd291bGQgYmUgd2l0aGluIGEgcmVhc29uYWJsZSBkaXN0YW5jZSBvZiBhIGNpdHkgb3IgbGFyZ2UgdG93biB0aGFuIG5vdC4gClRoaXMgc2VlZCB3YXMgY2hvc2VuIGJlY2F1c2UgaXQgc3RydWNrIG1lIGFzIHNpbWlsYXIgdG8gdGhlIG9yaWdpbmFsIG9uZSBJIHVzZWQgKGl0IGhhZCBubyBpbXBsb3NpdmVzLCBidXQgZGlkIGhhdmUgL2twLywgYW5kIHdhcyByYXRoZXIgc21hbGwpLiAKVGhpcyBtZWFucyB0aGF0IGJldHRlciB0aGFuIGV2ZXJ5IGZvdXJ0aCBwYXRpZW50IGJlY2FtZSBhc3ltcHRvbWF0aWMgd2l0aCA5IHdlZWtzIG9yIGxlc3Mgb2YgY2hpcm9wcmFjdGljIG1hbmlwdWxhdGlvbiwgZXZlbiB0aG91Z2ggdGhleSBoYWQgYmVlbiBjaHJvbmljIGZvciBtb3JlIHRoYW4gOCB5ZWFycy4KQ29uc2lkZXIgeW91ciBwb3NpdGlvbi4gSWYgeW91IGFyZSBwbGF5aW5nIGEgdmlkZW8gc2xvdCB3aXRoIDEwMCBwYXlsaW5lcyBhdCAkMSBwZXIgbGluZSwgeW91ciBtaW5pbXVtIGJldCBpcyAkMTAwIHBlciBwbGF5LiBZb3UgYXJlIG5vdyBwbGF5aW5nIGEgaGlnaCBsaW1pdCBiZXQgb24gYSAkMSBzbG90LiBGb3IgZ3JlYXRlciBwYXliYWNrIHBlcmNlbnRhZ2UsIGluY3JlYXNlZCByYXRpbmdzIGFzIGEgcGxheWVyIGFuZCBtb3JlIHBlcnNvbmFsaXplZCBhdHRlbnRpb24sIHlvdSBtYXkgd2lzaCB0byBtb3ZlIG92ZXIgdG8gdGhlIGhpZ2ggbGltaXQgbWFjaGluZXMuCkkgYnV5IG1pbmUgZnJvbSBSb3NlUm9zZVNob3AgZm9yICQxNSBwbHVzIHNoaXBwaW5nIGFuZCBhbSBzdXJlIEkgY291bGQgZmluZCBpdCBmb3Igc2ltaWxhci9jaGVhcGVyIHByaWNlcyBlbHNld2hlcmUuLiAKTXkgaHVzYmFuZCBhbmQgSSBhcmUgcHJldHR5IGxvdyBtYWludGVuYW5jZSBhbmQgZHJlc3NpbmcgdXAgYW5kIGdvaW5nIHNvbWV3aGVyZSBmYW5jeSBnZW5lcmFsbHkgaXNuIHJlYWxseSBvdXIgdGhpbmcuIFdlIGRvIGl0IG5vdyBhbmQgdGhlbiwgYnV0IHRoaXMgeWVhciBpdCBqdXN0IHdhc24gaW4gdGhlIGNhcmRzLiBJIHVuZW1wbG95ZWQgYW5kIGV2ZXJ5dGhpbmcgaW4gbXkgc2F2aW5ncyBjb25zaXN0cyBvZiBnaWZ0cyBhbmQgYSB0ZWFjaGVyIHNhbGFyeS4gTXkgaHVzYmFuZCBtYWtlcyBnb29kIG1vbmV5LCBidXQgbGF0ZWx5IGhpcyBqb2IgaXMgbW9yZSBzdHJlc3NmdWwgdGhhbiB1c3VhbC4gSSBzcGVudCB0aGUgZGF5cyBsZWFkaW5nIHVwIHRvIHllc3RlcmRheSBsZWF2aW5nIHNtYWxsIHRoaW5ncyBhcm91bmQgdGhlIGhvdXNlIHdpdGggYSBkb3JreSBub3RlIGludm9sdmluZyBhIHB1biBiZWNhdXNlIHRoZSBtYW4gbGl2ZXMgYW5kIGJyZWF0aGVzIGRhZCBqb2tlcyBsb2wuIE9uZSBkYXkgaXQgd2FzIGEgYm90dGxlIG9mIENydXNoIHNvZGEgd2l0aCBhIG5vdGUgdGhhdCBzYWlkLCAiWW91IGFyZSBzb2RhIGxpY2lvdXMgYW5kIEkgYmVlbiBjcnVzaGluIG9uIHlvdSBzaW5jZSAyMDExLiIgT25lIGRheSBpdCB3YXMgYSBqYXIgb2Ygc3VuIGRyaWVkIHRvbWF0b2VzIHdpdGggYSBub3RlIHRoYXQgc2FpZCwgIkkgbG92ZSB5b3UgZnJvbSBteSBoZWFkIHRvIG1hIHRvZXMuIiBTaGl0IGxpa2UgdGhhdC4gSGUgYm91Z2h0IHVzIHRpY2tldHMgdG8gYSBob2NrZXkgZ2FtZS4KUHJvamVjdCBMZWFkZXJzIG1haW50YWluIGltcG9ydGFudCByZWxhdGlvbnNoaXBzIGJldHdlZW4gdGhlIHVuaXZlcnNpdHkgYW5kIHRoZWlyIGRlc2lnbmF0ZWQgY29tbXVuaXR5IHBhcnRuZXJzIHdoaWxlIGdhaW5pbmcgdmFsdWFibGUgbGVhZGVyc2hpcCBhbmQgcHJvZmVzc2lvbmFsIHNraWxscyBhcHBsaWNhYmxlIHRvIGFueSBjYXJlZXIuIApBbmFsIHNleCBpcyBlbmpveWFibGUgZm9yIG1lbiBiZWNhdXNlIHRoZSB0aWdodCBhbmFsIHNwaGluY3RlciByaW5ncyBwcm92aWRlIHN0cm9uZyBzZW5zYXRpb25zIHRvIGEgdGhydXN0aW5nIHBlbmlzLi4gCjIuIFlvdXIgSW52ZXN0bWVudCBQb3J0Zm9saW9zICAgUlJTUHMsIFJSSUZzLCBURlNBcywgRGVmaW5lZCBDb250cmlidXRpb24gUGxhbnMgYW5kIE5vbiBSZWdpc3RlcmVkIGFjY291bnRzLiAKSGV5LCBmcmllbmQuIEkgZGVhbHQgd2l0aCB0aGlzIGZvciBhbiBleHRlbmRlZCBwZXJpb2Qgb2YgdGltZSAoOSBtb250aHMpIGFmdGVyIGEgYmFkIGV4cGVyaWVuY2Ugd2l0aCBhIGRydWcuIFdoYXQgYWx3YXlzIGhlbHBlZCBtZSB3YXMgdG8gcGxhbnQgbXkgZmVldCBmaXJtbHkgb24gdGhlIGdyb3VuZDsgdG8gZm9jdXMgb24geW91ciBicmVhdGhpbmcsIHJlYXNzdXJpbmcgeW91cnNlbGYgdGhhdCB5b3UgYWxyaWdodDsgYW5kIHJlbWluZGluZyB5b3Vyc2VsZiBvZiB0aGUgdGltZSwgZGF0ZSwgYW5kIHdoZXJlIHlvdSBhcmUuIEFsbCBpbiBhbGwsIHRvIGdldCBvdXQgb2YgbXkgZXh0ZW5kZWQgZnVuayB3YXMgdG8gbGl0ZXJhbGx5IHJlc2hhcGUgdGhlIHdheSBJIHRoaW5rLiBTdGF5aW5nIHBvc2l0aXZlIGFuZCBoYXBweSBpcyB3aGF0IGhlbHBlZCBtZSB0aGUgbW9zdCBpbiByZWNvdmVyaW5nLgpXYXMgdmllbGxlaWNodCBhdWNoIGJldHJhY2h0ZXQgd2VyZGVuIHNvbGx0ZSBpc3QgZGFzIGRlciAid2VpYmxpY2hlIFNleGthdWYiIG9mdCBpbiBlaW5lbSBzZWx0c2FtZW4gR3JlbnpiZXJlaWNoIHp1ciBTZXhhcmJlaXQgYWJsdWZ0LiBGcmF1ZW4ga2F1ZmVuIHNpY2ggd29obCBlaGVyICJCZXppZWh1bmdlbiIsIHRyZXRlbiBhbHMgU3VnYXJtb21teXMgYXVmIChnZXJhZGUgaW0gYWZyaWthbmlzY2hlbiBTZXh0b3VyaXNtdXMpIG9kZXIgZ2VoZW4gbWl0IGVpbmVtIEdpZ29sbyBFc3NlbiBvZGVyIFRhbnplbi4gCkJsdWZmOiBUaGlzIGlzIGEgZ29vZCBkZWNlcHRpdmUgc2tpbGwgeW91IGNhbiB1c2UgdG8geW91ciBhZHZhbnRhZ2UuIEJsdWZmaW5nIG1lYW5zIHlvdSBhcmUgbWFraW5nIGFuIGltcHJlc3Npb24gdGhhdCB5b3UgYXJlIGhvbGRpbmcgdGhlIG1vc3QgdW5iZWF0YWJsZSBjYXJkIGluIHRoZSBnYW1lIGV2ZW4gaWYgdGhlIGZhY3QgaXMgeW91IGRvbid0IGV2ZW4gaGF2ZSBhIHBhaXIgb3IgdmljZSB2ZXJzYS4KTXkgZGFkIGFuZCBtZSBib3RoIGxvb2tlZCBpbnRvIHRoZSBsYXcgLCBhbmQgZXZlbiBjYWxsZWQgdGhlIHRvd25zaGlwIHRvIGFzayB3aGF0IHdlIGNhbiBhbmQgY2FudCBkby4gc28gd2UgYm90aCBrbm93IHdoYXQgd2UgaGF2ZSBkb25lIHRvIG15IHByb3BlcnR5IGlzbnQgZ29pbmcgYWdhaW5zdCBhbnl0aGluZy4gRUIganVzdCB0aGlua3Mgc2hlcyBoaWdoZXIgdGhlbiBtaWdodHkgYW5kIGlzIGFsbG93ZWQgdG8gaGF2ZSBhIHNheSBldmVyeW9uZSBlbHNlIGJ1c2luZXNzLgpXaGVuIEkgYXNrZWQgaGltIGFib3V0IHRob3NlIG5ldyBpZGVhcyBhbmQgaW52ZXN0bWVudHMsIGhlIGRpZG4gYW5zd2VyLi4gCk5vdCB0byBzYXkgdGhhdCBJIHdvdWxkbiBoaXJlIHNvbWVvbmUgd2hvIGNvdWxkIG1ha2UgaXQgYXMgcHJvIHBva2VyIHBsYXllciBmb3IgNSB5ZWFycywgYnV0IG1vc3QgcGVvcGxlIHdvdWxkIHNlZSBpdCBhcyBhIGNyYXp5IGdhbWJsaW5nIHN0aW50IGFuZCBpbW1lZGlhdGVseSBkaXNtaXNzIHlvdS4KU2lkZSBOb3RlIHRoYXQgUGVyaGFwcyBJc24gUmVhbGx5IFJlbGF0ZWQgYnV0IFNvbWV0aGluZyBJIEp1c3QgV2FudCB0byBHZXQgT2ZmIE15IENoZXN0OkkgZ3JldyB1cCBkZXZlbG9waW5nIHZpcnR1YWxseSBubyBza2lsbHMgb3IgbW90aXZhdGlvbiBvdXRzaWRlIGp1c3Qgc2Vla2luZyBwbGVhc3VyZSBpbiBmb29kLCBzZXgsIGRydWdzLCBob29rYWgsIGV0Yy4gSSBjdXJyZW50bHkgcGF5aW5nIHRoaXMsIGFnYWluLCBhcyBhIDI0IHllYXIgb2xkIHdpdGggb25seSBhbiBBQSBpbiBIaXN0b3J5IGFuZCB2YXJpb3VzIGFkZGljdGlvbnMsIG5hbWVseSBhbiBhZGRpY3Rpb24gdG8gYmVpbmcgYSBoeXBvY3JpdGUgYW5kIG5vdCBzdGFuZGluZyBpbiB0cnV0aCwgZXRoaWNzLCBvciBnZW5lcm9zaXR5LiBPdmVyIHRoZSBsYXN0IGZpdmUgeWVhcnMgd2l0aCBteSB0ZWFjaGVyLCBwYXJ0aWN1bGFybHkgdGhpcyBsYXN0IHllYXIsIGl0IGJlY29tZSBhcHBhcmVudCB0byBtZSwgaSB0aGluaywgdGhhdCB0aGUgcmVhbCBjaGFsbGVuZ2Ugb2YgYmVpbmcgYSBoZWFsZXIgaXMgaGVhbGluZyBvdXJzZWx2ZXM7IHB1cmlmeWluZyBvdXJzZWx2ZXMgYW5kIGluY3JlYXNpbmcgdGhlIHF1YWxpdHkgYW5kIG1hZ25pdHVkZSBvZiBvdXIgb3duICJ2aWJyYXRpb24iOyBvdXIgb3duIHN1YnRsZSBlbmVyZ3kgdGhhdCB0aG9zZSBhcm91bmQgdXMsIGluY2x1ZGluZyBvdXIgcGF0aWVudHMsIGNhbiBzZW5zZS4gCkNyaW1pbmFsIGFuZCBjaXZpbCBjaGFyZ2VzIGZpbGVkIGluIE5ldyBZb3JrIGhhdmUgZm9yY2VkIG9ubGluZSBwb2tlciBzaXRlcyBQb2tlclN0YXJzIChiYXNlZCBpbiB0aGUgSXNsZSBvZiBNYW4pIGFuZCBGdWxsIFRpbHQgUG9rZXIgKGJhc2VkIGluIEFsZGVybmV5LCBpbiB0aGUgQ2hhbm5lbCBJc2xhbmRzKSwgYXMgd2VsbCBhcyBDYW5hZGEgYmFzZWQgQWJzb2x1dGUgUG9rZXIsIHRvIHN0b3AgZG9pbmcgYnVzaW5lc3Mgd2l0aCBBbWVyaWNhbnMuSXQgaXMgdGhlIGxhdGVzdCB1cGhlYXZhbCBmb3IgdGhlIGluZHVzdHJ5LCB3aGljaCBvdmVyIHRoZSBsYXN0IGRlY2FkZSBoYXMgZ3Jvd24gZnJvbSBub3RoaW5nIGludG8gb25lIHRoYXQgcmFrZXMgaW4gYW4gZXN0aW1hdGVkICQ1Ym4gKDMuMjVibikgZWFjaCB5ZWFyIGFuZCBpcyByZWd1bGF0ZWQgaW4gdmFzdGx5IGRpZmZlcmVudCB3YXlzIGluIGNvdW50cmllcyBhcm91bmQgdGhlIHdvcmxkLkFtZXJpY2EgaXMgdGhlIGJpZ2dlc3QgbWFya2V0LCB3aXRoIHVwIHRvIGEgbWlsbGlvbiBvbmxpbmUgcGxheWVycy4gR2FtYmxpbmcgbGF3cyB2YXJ5IGZyb20gc3RhdGUgdG8gc3RhdGUsIGJ1dCBpbiAyMDA2LCB0aGUgVVMgZmVkZXJhbCBnb3Zlcm5tZW50IGF0dGVtcHRlZCB0byBwdXQgdGhlIGJyYWtlcyBvbiBvbmxpbmUgcG9rZXIgd2l0aCB0aGUgVW5sYXdmdWwgSW50ZXJuZXQgR2FtYmxpbmcgRW5mb3JjZW1lbnQgQWN0IChVSUdFQSkuVGhlIFVJR0VBIHdhcyBtZWFudCB0byBoYWx0IG1vbmV5IHRyYW5zZmVycyB0byBvbmxpbmUgZ2FtaW5nIHNpdGVzLCBhbmQgc2V2ZXJhbCBiaWcgcG9rZXIgc2l0ZXMsIHdhcnkgb2YgcnVubmluZyBmb3VsIG9mIHRoZSBsYXcsIHB1bGxlZCBvdXQgb2YgdGhlIEFtZXJpY2FuIG1hcmtldC4gClRoaW5raW5nIGFib3V0IGdldHRpbmcgeW91ciB0b2VzIGRvbmU/IEFueSBiZWF1dHkgdHJlYXRtZW50IG9yIHByb2NlZHVyZSBpbnZvbHZpbmcgY2hlbWljYWxzLCBmdW1lcyBvciBtYXNzYWdlIHNob3VsZCBiZSBPSydkIGJ5IHlvdXIgZG9jdG9yIGJlZm9yZWhhbmQsIGp1c3QgdG8gYmUgc2FmZS4gCk1vcmVvdmVyLCBOYXdheiBTaGFyaWYncyBnZW5lc2lzIGFzIGEgcG9saXRpY2FsIGVudGl0eSBkdXJpbmcgdGhlIFppYSB5ZWFycyBpcyBub3QgYSBzb2xpdGFyeSB0YWxlIG9mIHRoZSBtaWxpdGFyeSdzIHBhdHJvbmFnZSBvZiBiaWcgYnVzaW5lc3MgY3VtIGJpZyBwb2xpdGljcy4gCkFmdGVyIGEgZGF5IGF0IFBldHJhLCB3ZSB3ZXJlIHdpbmRibG93biBhbmQgZXhmb2xpYXRlZCEgV2UgaGFkIGhlYXJkIGEgbG90IGFib3V0IGEgcGxhY2UgY2FsbGVkIFdhZGkgUnVtIChidXQgaGF2aW5nIG5vIGJvb2ssIGhhZCBubyBpZGVhIHdoYXQgaXQgd2FzKS4gSXQgc2VlbWVkIHRvIGJlIGFib3V0IGFuIGhvdXIgYXdheSBzbyB3ZSBob3BwZWQgaW4gdGhlIEF2ZW8gYW5kIGhlYWRlZCB0aGVyZS4gCkhpcyBmYXRoZXIgd2FzIGEgYmFuayByb2JiZXIsIEVyaWMgUGFkZG9jayBzYWlkLiBUaGUgRkJJIGxpc3RzIHRoZSBsYXRlCkl0IGEgc3Vic2NyaXB0aW9uIHNlcnZpY2UgYW5kIG5vdGhpbmcgTmludGVuZG8gaGFzIGRvbmUgaW4gdGhlIHBhc3Qgc3VnZ2VzdHMgdGhhdCB0aGUgaW5mcmFzdHJ1Y3R1cmUgZm9yIHRoaXMgbmV3IHNlcnZpY2Ugd2lsbCBiZSB3b3J0aCBwYXlpbmcgZm9yLiBJbiBvcmRlciB0byB1c2Ugdm9pY2UgY2hhdCBpbiBnYW1lcywgeW91IGhhdmUgdG8gdXNlIGFuIGFwcCBvbiB5b3VyIHBob25lIHRvIGRvIHNvIGJ1dCB5b3Ugc3RpbGwgaGF2ZSB0byBwYXkgTmludGVuZG8gZm9yIGl0Li4gClJlcHVibGljYW4gbGVnaXNsYXRvciBFZGlzb24gTWlzbGEgQWxkYXJvbmRvIHdhcyBzZW50ZW5jZWQgdG8gMTAgeWVhcnMgaW4gcHJpc29uIGZvciByYXBpbmcgaGlzIGRhdWdodGVyIGJldHdlZW4gdGhlIGFnZXMgb2YgOSBhbmQgMTcuCjEgQ29tbWVudApXZSB3ZXJlIHZpY3RpbXMsIGFuZCBub3cgd2UgYXJlIHN1cnZpdm9ycyEgSXQgZG9lcyBnZXQgYmV0dGVyLiAKRGVwZW5kaW5nIG9uIHlvdXIgbGlmZXN0eWxlIGFuZCB3aGVyZSB5b3Ugc2hvcCBJIHdvdWxkIHNheSAzMDAgdG8gNTAwIHBlciBtb250aC4KV2hhdCBZb3UgTmVlZCBUbyBLbm93IEFib3V0IEZyZWUgT25saW5lIFBva2VyCk91ciBmaXJzdCBzaWduIG9mIHRyb3VibGUgaXMgdGhhdCBpdCBhbGxlZ2VkbHkgaGFzIHR5cGUgKHIgIGEpICA+IChyICBhKSwgYnV0IHRoaXMgaXMgYSB0eXBlIGVycm9yIGJlY2F1c2UsIGFzIEdIQyB3b3VsZCBwdXQgaXQsIHR5cGUgdmFyaWFibGUgJ3InIHdvdWxkIGVzY2FwZSBpdHMgc2NvcGUuLiAKSSBzdXBwb3NlIGl0IGlzIGRpZmZlcmVudCB0byB3ZXN0ZXJuZXJzIHdobyBkbyBub3QgY2FycnkgdGhlIHNjYXJzIG9mIHRoZSB3YXIgaW4gdGhlIG5hdGlvbmFsIHBzeWNoZS4gVGhlIG9jY3VwYXRpb24gb2YgRnJhbmNlIHdhcyBhIGpva2UgY29tcGFyZWQgdG8gdGhlIGhvcnJvciB3ZSBlbmR1cmVkLi4gClRoYXQgaXMgdGhlIGV4YWN0IGRlZmluaXRpb24gb2YgTk9UIGVxdWFsIHByb3RlY3Rpb24gb2YgdGhlIGxhdy4uIApTaGUgYmVhdXRpZnVsIGFuZCB3ZSBsdWNreSB0aGF0IHNoZSBkaWRuIGhhdmUgYW55IGJpcnRoIGRlZmVjdHMgYnV0IGl0IGJlZW4gYSB5ZWFyIG5vdyBhbmQgSSBoYXZpbmcgYSBoYXJkIHRpbWUgcGh5c2ljYWxseS4gSXQgaGFyZCB0byBpbnRlcmFjdCB3aXRoIGhlciB0aGUgd2F5IEkgd291bGQgbGlrZSB0by4gCkFkdm9jYXRlcyBzYXkgZ2FtYmxpbmcgd291bGQgYnJpbmcgbmV3IHJldmVudWUsIHRob3VzYW5kcyBvZiBqb2JzLCBiaWxsaW9ucyBpbiBpbnZlc3RtZW50cyBhbmQgbWlsbGlvbnMgb2YgdG91cmlzdHMgd2hvIGhhdmUgYmVlbiBkcmlmdGluZyBvZmYgdG8gTG91aXNpYW5hLCBOZXcgTWV4aWNvIGFuZCBPa2xhaG9tYS4KRW4gY2UgcXVpIG1lIGNvbmNlcm5lIGNlbGEgZmFpdCB1biBkZW1pIHNpY2xlIHF1ZSBqZSBzdWlzIGltbXVuaXMgY29udHJlIGNldHRlIGhvcnJldXIgY2FyIGRlcHVpcyB0b3V0IGNlIHRlbXBzIGplIHNhaXMgcXVlIGxlIHNldWwgb2JqZWN0aWYgZGUgQmlnIFBoYXJtYSBjJ2VzdCBkZSBmYWlyZSB1biBtYXhpbXVtIGRlIGZyaWMgcGFyIHRvdXMgbGVzIG1veWVucyBldCBxdWVscXUndW4gc29pdCBsZXMgY29uc3F1ZW5jZXMgc2FuaXRhaXJlcy4gVG91cyBsZXMgc2NhbmRhbGVzIHNhbml0YWlyZXMgcXVpIGV4cGxvc2VudCByZ3VsaXJlbWVudCBkZXB1aXMgbG9uZ3RlbXBzLCBlbiBGcmFuY2UgcGFydGljdWxpcmVtZW50LCByc3VsdGUgZCd1biBkZmF1dCBkZSBjb250cmxlLlJlbWFycXVlICBsJ2ludGVudGlvbiBkZXMgbGVjdGV1cnMgZXN0IGFib25ucyBldCBkZXMgY2FyZW5jZXMgZGUgbGEgcGx1cGFydENlIGJsb2cgYSBhdHRpciBqdXNxdScgMjUgMDAwIHZpc2l0ZXMgcGFyIG1vaXMsIHNhdWYgcXUnaWwgbmUgZmF1dCBzZSBmYWlyZSBhdWN1bmUgaWxsdXNpb24gcXVhbmQgb24gdm9pdCBsZSB0ZW1wcyBtb3llbiBkZSBzdGF0aW9ubmVtZW50IHF1aSBlc3QgaW5mcmlldXIgIDIgbWludXRlcy5PbiB2aWVudCBwb3VyIHByZW5kcmUsIGphbWFpcyBwb3VyIGRvbm5lci4gCkJ1dCBtb21lbnRzIGxhdGVyaGVjaGFuZ2VkIGhpcyBtaW5kLiAKVGhlIG1lbiBoaXMgdW5pdCBoYXMgYXJyZXN0ZWQgb3ZlciB0aGUgcGFzdCB3ZWVrIGFuZCBhIGhhbGYgaGF2ZSBjb21lIGZyb20gYWxsIHdhbGtzIG9mIGxpZmUsIGhlIHNhaWQuIApJbCBhIHJldSBlbiB0b3V0IDIgcnBvbnNlcywgdW5lIHBvc2l0aXZlIGV0IHVuZSBzYW5zIGludHJ0LiBUb3V0IGNlcyBnZW5zIHF1aSBub3VzIGNvdGVudCB0cnMgY2hlciBldCBxdWkgdm90ZW50IGRlcyBsb2lzIHNvbnQgdG90YWxlbWVudCBpbmNvbXB0ZW50cyBzdXIgcXVhbnRpdCBkZSBzdWpldHMuIApKb24gTG91Y2tzOiBBbiBvbGQgaG9zdCBvZiB0aGUgTFIgcG9kY2FzdCwgYW5kIG5vdyBob3N0IG9mIHRoZSBDb25zdHJ1Y3RlZCBSZXNvdXJjZXMgcG9kY2FzdC4gQSBmb3JtZXIgUiBlbXBsb3llZSBhdCBXb3RDLCBoZSBoYXMgZXhwZXJpZW5jZSB3aXRoIGJvdGggZGV2ZWxvcG1lbnQgYW5kIHBsYXkgKGJvdGggY29uc3RydWN0ZWQgYW5kIGxpbWl0ZWQpLiAKRm9yIGEgZ2FyZGVuIHZhcmlldHkgYm9keSB3cmFwLCB5b3UgbGllIG9uIGEgbWFzc2FnZSB0YWJsZSBhbmQgZ2V0IHJ1YmJlZCBkb3duIHdpdGggYW4gZXhmb2xpYXRpbmcgc2NydWIsIGluIHdoYXRldmVyIHZhcmlldHkgeW91IHBpY2tlZCBmcm9tIHRoZSBtZW51IChtb3N0IHNwYXMgb2ZmZXIgYSBmZXcgb3B0aW9ucykuIEFmdGVyIHlvdSByaW5zZSBvZmYgaW4gYSBzaG93ZXIsIHRoZSB0aGVyYXBpc3QgYXBwbGllcyB0aGUgd3JhcCBpbmdyZWRpZW50cyAobWF5YmUgc2Vhd2VlZCwgbXVkLCBjbGF5IG9yIGFuIGhlcmJhbCBvciBmcnVpdCBwcm9kdWN0KSB0byB5b3VyIGJvZHksIGNvdmVyaW5nIGl0IHdpdGggYSBsYXllciBvZiBwbGFzdGljIHdyYXAuIFdoZW4geW91J3JlIGFsbCB3cmFwcGVkIHVwLCB5b3UgbWlnaHQgYmUgZnVydGhlciBjb3ZlcmVkIHdpdGggc2hlZXRzLCB0b3dlbHMgYW5kIHRoZXJtYWwgYmxhbmtldHMuIApZb3UgYXJlIHJpZ2h0IHRoYXQgdGhleSBkb24ndCBzdGF5IGFzICdiYWdzJyB0aGUgd2hvbGUgdGltZSwgYnV0IHRoZXkgc3RheSBhcyB0aGUgcGxhc3RpYyBtb2xlY3VsZS4gCkV2ZW4gJDI1MCB5b3Ugd291bGQgd2FsayByaWdodCBmdWNraW5nIHBhc3QgaXQgLiBZb3Ugd291bGRuJ3QgZXZlbiBhY2tub3dsZWRnZSBmb3IgYSBzZWNvbmQgdG8gYnV5IGl0IC4uIApNb3JlIGltcG9ydGFudGx5IHRoYW4gbnVtYmVyIG9uZSBvbiB0aGUgbGlzdCwgeW91IG5lZWQgdG8gcmVjb2duaXplIHRoYXQgaGF2aW5nIGdvYWxzIGRvZXMgbm90IGhlbHAgdXAgYWNoaWV2ZSBvdXIgZ29hbHMuIApJbiBmYWN0IHRoaXMgc2l0ZSBoYXMgYmVlbiBjb25kZW1uZWQgaGVhdmlseSBieSBtdWx0aXBsZSBEdmFpdGEgbGVhZGVycyBmb3IgaXRzIG9mZmVuc2l2ZSBhbmQgb2Z0ZW4gdGltZXMgY2hhcmFjdGVyIGF0dGFja3Mgb24gU3JpbGEgUHJhYmh1cGFkYS5UaGF0IGJlaW5nIHNhaWQsIGFzIEkgdW5kZXJzdGFuZCBnZW5lcmFsbHkgdGhlIG9iamVjdGlvbiwgZnJvbSB0aGUgVGF0dHZhdmFkaXMgaXMgdGhhdCBHYXVkaXlhcyBwcmVhY2ggc29tZXRoaW5nIHdoaWNoIGlzIGluIGRpcmVjdCBjb250cmFkaWN0aW9uIGZyb20gU3JpcGFkIE1hZGh2YWNoYXJ5YSBhbmQgdGhlcmVmb3JlIGNhbm5vdCBiZSBjYWxsZWQgaW4gSGlzIGxpbmUuIApJIGJ1ZGdldCBhYm91dCAkMjAwL2RheSBpbiBzcGVuZGluZyAoY2Ficy91YmVycywgZHJpbmtzLCBmb29kKSwgYnV0IEkgaGF2ZSBhIHRlbmRlbmN5IHRvIGdvIGJpZyBvbmNlIHRoZSBib296ZSBzdGFydHMgZmxvd2luZywgc28gd2Ugc2VlIHdoZXJlIHRoYXQgZ29lcy4gCllvdXIgc2VlZCBjYXRhbG9ndWUgb3IgcGFja2V0IHdpbGwgZ2l2ZSBhcHByb3hpbWF0ZSB0aW1lcyBvZiBnZXJtaW5hdGlvbi4gCkRyLiBBZGFsYmVydCBJLgpUaGUgQmlnIEJlbiBiZWxsIHdhcyBpbnN0YWxsZWQgaW4gdGhlIGNsb2NrIHRvd2VyIHNldmVuIHllYXJzIGxhdGVyLi4gCkkgcmVzcGVjdCBoZXIgcmVjb3JkIG9mIHNlcnZpY2UgYW5kIEkgYWdyZWUgd2l0aCBtb3N0IG9mIGhlciBwbGF0Zm9ybSwgYnV0IHNoZSBnZW5lcmFsIGVsZWN0aW9uIHBvaXNvbi4gZWRpdDogVGhlcmUgaXMgYSByZWFzb24gdGhhdCBUcnVtcCBpcyBzbyBlYWdlciB0byBydW4gYWdhaW5zdCBoZXIsIHBlb3BsZS4KVGhlIGZpbG0gc3RpbGwgdG9vayBwbGFjZSBpbiB0aGUgZWFybHkgJzkwcywgYnV0IGlmIHlvdSdyZSB3YXRjaGluZyBpdCBpbiAyMDA1IG9yIGxhdGVyLCBpdCdzIHRvdWdoIG5vdCB0byBhdCBsZWFzdCBraW5kYSBzZWUgQmVubnkncyBzaWRlIG9mIHRoaW5ncy4gCkkgcGxheWVkIGV2ZXJ5IGRheSBzaW5jZSBlbmQgb2YgbGFzdCBPY3RvYmVyIGZvciAyIGhycyBkYWlseSBhbmQgZXZlbiB0aGVuIGl0IGZlbHQgbGlrZSBJIG9ubHkgc2NyYXBpbmcgYnkgZHVyaW5nIGV2ZW50cy4gSSBoYXZlIGRvemVucyBvZiBsdmwgMTAwIGRvbGxzLiAKT3IgdGhleSBoYXZlIHNvbWUgb3RoZXIgcHJvYmxlbS4uIApUaGUgZ3JlYXQgb25lcyB3aG8gbWVuZGVkIHRoZSBnYXAgYmV0d2VlbiB0aGUgbWVudGFsIGFuZCB0aGUgcGh5c2ljYWwgdGhyb3VnaCBjb3VyYWdlIGFuZCBzdGVybiBvbmUgcG9pbnRlZG5lc3MuIEluIHRob3NlIHN1cnJlYWwgbW9tZW50cywgdGhleSBjbGltYmVkIHVwIGEgbGFkZGVyIHRvd2FyZHMgbXlzdGlxdWUgYW5kIGltbW9ydGFsaXR5LkluIGEgbXV0dWFsIHRyYWRlIG9mZiwgb3VyIHR3aXN0ZWQgdGhpcnN0ICBjcmF2aW5nIGZvciBicnV0YWwgcHVuY2hlcyBhbmQgYXNzZXJ0aXZlIGtub2Nrb3V0cywgY291cGxlZCB3aXRoIHVudGFtYWJsZSB3YXJyaW9yIHNwaXJpdHMgbGVmdCBmb3IgZ3JvdGVzcXVlIHNpZ2h0cyBhdCB0aGUgZW5kIG9mIGdsb3Jpb3VzIGNhcmVlcnMsIHRoZSBwcmljZSB0aGV5IHBhaWQgZm9yIGEgdHJhbnNjZW5kZW50YWwgc3RhdHVzLiAKQnV0IGFzIEVyaW4gTWFsb25leSBXaW5kZXIsIHRoZSBwcmVzaWRlbnQgb2YgQWJpZ2FpbCBNYWRpc29uLCBhIGhvdXNlaG9sZCBzdGFmZmluZyBjb21wYW55IGluIE1hbmhhdHRhbiwgc2FpZCwgIklmIHlvdSdyZSBhYmxlIHRvIGFmZm9yZCBzb21ldGhpbmcgYW5kIHlvdSB0cmVhdCB0aGUgcGVvcGxlIHdlbGwsIHRoZXJlJ3Mgbm8gbGltaXQiIHRvIHdoYXQgYSBuYW5ueSBjYW4gZG8uIApVbmRlcmJlZCBzdG9yYWdlIGZvciBsaW5lbnMgYW5kIHNlYXNvbmFsIGNsb3RoaW5nIHN3YXAgb3V0cyBzbyBvdXIgZHJlc3NlcnMgYW5kIGNsb3NldHMgY291bGQgc3RheSBtaW5pbWFsLiBTdWl0Y2FzZXMgY2FuIGFsc28gYmUgdXNlZCBhcyBzdG9yYWdlIHdoZW4gbm90IGluIHVzZS4KU29tYXRvc2Vuc29yeSBuZXVyb25zIChhbmQgcGFpbiByZWNlcHRvcnMgYWxsIG92ZXIgdGhlIGZhY2UgYW5kIGhlYWQpIHRyYXZlbCBpbnRvIHRoZSBjZW50cmFsIG5lcnZvdXMgc3lzdGVtIHRocm91Z2ggdGhlIHRyaWdlbWluYWwgbmVydmUuIApEb3VidGZ1bCBpdCBpcyBsb3cgc3VpdGVkIGRpYW1vbmQgY29ubmVjdG9ycy4gCg==|<---