--->|Rm9yIGV4YW1wbGU6LiAKVGhlIGZvbGxvd2luZyBwcm92aWRlcyBpbmZvcm1hdGlvbiBhYm91dCBlbnRpdGllcyB3aXRoIHdoaWNoIHdlIG1heSBzaGFyZSBpbmZvcm1hdGlvbi4gT3VyIHByYWN0aWNlcyB2YXJ5IGRlcGVuZGluZyBvbiB0aGUgdHlwZSBvZiBpbmZvcm1hdGlvbi4KSGVyZSB0aGUgY2FsY3VsYXRpb24gaW4gZWZmZWN0IGxpc3RzIHRoZSBwYWlycyBmaXJzdCBhbmQgdGhlbiB0aGUgc2luZ2xldG9uIGJ1dCBjb3VudHMgdGhlc2UgdHdvIG9yZGVycyBzZXBhcmF0ZWx5LCBldmVuIHRob3VnaCB0aGV5J3JlIHRoZSBzYW1lIGhhbmQ6aGVhcnRzdWl0IDUsIGRpYW1vbmRzdWl0IDUsIHNwYWRlc3VpdCAzLCBjbHVic3VpdCAzLCBjbHVic3VpdCA4Li4gCkJ1dCBFcHN0ZWluICAgd2hvIGhhZCBhIGxvbmcgbGlzdCBvZiBwb3dlcmZ1bCwgcG9saXRpY2FsbHkgY29ubmVjdGVkIGZyaWVuZHMgICBkaWRuJ3QgZ28gdG8gc3RhdGUgcHJpc29uIGxpa2UgbW9zdCBzZXggb2ZmZW5kZXJzIGluIEZsb3JpZGEuIEluc3RlYWQsIHRoZSBtdWx0aW1pbGxpb25haXJlIHdhcyBhc3NpZ25lZCB0byBhIHByaXZhdGUgd2luZyBvZiB0aGUgUGFsbSBCZWFjaCBDb3VudHkgc3RvY2thZGUsIHdoZXJlIGhlIHdhcyBhYmxlIHRvIGhpcmUgaGlzIG93biBzZWN1cml0eSBkZXRhaWwuIApGaXJzdCBvZmYsIEkgd291bGQgbGlrZSB0byBnZXQgYSBzZW5zZSBvZiB3aGF0IHN0cmF0ZWdpZXMgYXJlIGJlaW5nIHVzZWQgdG8gYWNjZXNzIHBvcm4uIEkgaGVhcmQgc29jaWFsIG1lZGlhIHBsYXlzIGEgYmlnIHBhcnQgaW4gdGhhdC4gU2Vjb25kLCBJIHRyeWluZyB0byBnZXQgYSBzZW5zZSBvZiBob3cgZGlmZmVyZW50IGdlbmVyYXRpb25zIHNlZSBwb3JuIGFuZCBpdHMgaWxsZWdhbGl0eS4KU28gdGhpcyBicmluZ3MgdXMgdG8gTW9uZGF5IChDaHJpc3RtYXMpLiBJdCB3YXMgYSBDaHJpc3RtYXMgbGlrZSBubyBvdGhlci4KV2hldGhlciBpdCBpcyBuYXR1cmFsIGRlcGVuZHMgb24gY29udGV4dC4gQWZ0ZXIgdm9jYWwgd2FybSB1cHMgaGF2aW5nIGEgY29udmVyc2F0aW9uIGF0IG5vcm1hbCB2b2x1bWU/IFRvdGFsbHkgbmF0dXJhbC4gU3BlYWtpbmcgc29mdGx5IEkgaGF2ZSB0byB0cnkgc28gZGFtbiBoYXJkIHRvIHNwZWFrIGZlbWluaW5lbHkuIEkgY2FuIHByb2plY3QgbXkgdm9pY2Ugbm8gcHJvYmxlbSBidXQgd2hpbGUgdGVhY2hpbmcgeW9nYSBpdCB0b29rIGFib3V0IHR3aWNlIGFzIGxvbmcgdG8gZ2V0IGl0IHRvIGZlZWwgbmF0dXJhbCBhcyBqdXN0IHNwZWFraW5nLiBJIGFtIHRoaW5raW5nIGFib3V0IDIwIG90aGVyIHRoaW5ncyB3aGlsZSBsZWFkaW5nIGEgY2xhc3Mgc28gYWRkaW5nIG9uIGZvY3VzaW5nIG9uIG15IHZvaWNlIG1hZGUgaXQgMTB4IGhhcmRlci4KSGVyZSwgYSBzdGVhZHkgc3RyZWFtIG9mIHdvbWVuIGJyYXZlIHBhaW4gYW5kIGlsbG5lc3MsIGVuZHVyZSB3ZWVrcyBvZiBiZWRyZXN0IGFuZCBkaWFnbm9zdGljIHRlc3RzLCBhbmQgdW5kZXJnbyBzdXJnZXJ5IGFuZCBzbGVlcGxlc3MgbmlnaHRzICAgYWxsIHRvIGJpcnRoIHRoZWlyIGJhYmllcyBzYWZlbHkuIFRoZXkgbWF5IGVuZCB1cCBpbiBpbnRlbnNpdmUgY2FyZSwgaW4gdGhlIG9wZXJhdGluZyByb29tIG9yIGhhdmUgdGhlaXIgbmV3Ym9ybnMgc2VudCB0byBpbnRlbnNpdmUgY2FyZS4gQnV0IHRoZXkgZ2V0IHRocm91Z2ggaXQsIGRyYXdpbmcgc3RyZW5ndGggZnJvbSBhIGZpZXJjZSBhbmQgYmVhdXRpZnVsIGxvdmUgZm9yIGEgY2hpbGQgdGhleSBoYXZlIG5ldmVyIG1ldC4gCkJlIHJlYWxpc3RpYyBpbiBhc3Nlc3Npbmcgd2hldGhlciB5b3UgcmVhZHkgZm9yIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSBzY2hlZHVsZS4gRm9yIGV4YW1wbGUsIGlmIHlvdSBiZWVuIHJ1bm5pbmcgMjAgbWlsZXMgKDMyIGttKSBwZXIgd2VlayBhbmQgeW91ciBsb25nZXN0IHJ1biBpbiB0aGUgbGFzdCBzZXZlcmFsIHdlZWtzIGlzIDYgbWlsZXMgKDEwIGttKSwgbm93IGlzbiB0aGUgdGltZSB0byBzdWRkZW5seSBqdW1wIHRvIGEgMzMgbWlsZSAoNTMga20pIHdlZWsgY29udGFpbmluZyBhIDEyIG1pbGUgKDE5IGttKSBydW4gYW5kIGEgNCBtaWxlICg2IGttKSB0ZW1wbyBydW4sIGFzIHRoZSBmaXJzdCB3ZWVrIG9mIHRoZSAxOCB3ZWVrIHNjaGVkdWxlIGNhbGxzIGZvci4gVGhlIGlkZWEgYmVoaW5kIHRoZSBzY2hlZHVsZXMgaXNuIHRvIG1ha2UgeW91IGFzIHRpcmVkIGFzIHBvc3NpYmxlIGFzIHNvb24gYXMgcG9zc2libGUgYnV0IHRvIGFwcGx5IHJlcGVhdGVkIHRyYWluaW5nIHN0cmVzcyB0aGF0IHlvdSBhYnNvcmIgYW5kIGJlbmVmaXQgZnJvbS4KU3RyZW5ndGhlbiB0aGUgcmVzb2x2ZSBvZiBpbmRpdmlkdWFsIG1lbWJlcnMgYnkgY3JlYXRpbmcgdGhlIGZyYW1ld29yayBmb3IgYSBzaGFyZWQgc2Vuc2UKT25lIG9mIHRoZSBiZXN0IGFyZ3VtZW50cyB0byBleHBsYWluIHRoZSB1bmJlbGlldmFibHkgc3BlY2lmaWMgc3RhcnRpbmcgY29uZGl0aW9ucyByZXF1aXJlZCB0byBnaXZlIHVzIGxpZmUgaXMgdGhlIG11bHRpdmVyc2UgdGhlb3J5LiBHaXZlbiBldmVyeSBwb3NzaWJsZSB1bml2ZXJzZSwgb25lIG9mIHRoZW0gd291bGQgYmUgb3Vycy4gSXQgYW4gYW5zd2VyIHRoYXQgc29sdmVzIHRoZSBwcm9ibGVtLiAKTGVvbiBQYW5ldHRhCkkgYXJyaXZlIGluIEF1Z3VzdCBiZWNhdXNlIG1hbiBJIHdhbnRlZCB0byBmZWVsIHRoZSBraWNrcyB5b3Uga25vdy4gVGhhdCdzIGxpa2UgdGhlIGJlc3QgcGFydCBvZiBwcmVnbmFuY3ksIGZlZWxpbmcgdGhlbSBraWNrcyBhbmQgcGVvcGxlIHNheSB5b3UgcHJldGVuZCB0YWxrIGJ1dCBJIHRoaW5rIG1lIGFuZCBsaXR0bGUgZ2lybCB3ZXJlIGhhdmluZyBhIGNvbnZlcnNhdGlvbi4gQW55d2hvLCBJIGhhZCB0aGlzIGZlbWFsZSBtYXNzYWdlIGxhZHkgY29tZSBpbiBhbmQgYXBwYXJlbnRseSBsb3RzIG9mIHBlb3BsZSBiZWcgdG9vICg/Pz8gICB0aGV5IG93biB0aGVpciBvd24gaG91c2VzIGFuZCBqZWVwcyksIGFuZCB3aGVuIHRoZXkgYXNrZWQgd2hhdCBpdCBpcyAgIEkgc2FpZCBpdCdzIGEgZ2lybCBhbmQgSSBhbHdheXMgd2FudGVkIG9uZTouIApMaWtlIGNsYXksIHNoZSBzYWlkLCBwb2tpbmcgYXQgdGhlIGJhbGwgb2YgZmxvdXIgaW4gaGVyIHBhbG0uIGJlY2F1c2UgaXQgYWxpdmUuIGEgZm9ybWVyIG1hcmtldGVyIGZvciBTb2JleXMgSW5jLiwgYW5kIHRoZSBoYW5kZnVsIG9mIHBlb3BsZSBpbiBoZXIgb3JiaXQgYSBiaWxsaW9uYWlyZSB0b3ltYWtlciwgYSBTd2VkaXNoIGJha2VyIGFuZCBhIHJvb2tpZSBtaWxsZXIgYWxsIGxpa2UgdG8gdGFsayBhYm91dCBmbG91ciBpbiB0aGUgc2FtZSBzdGFyayBtYW5uZXI6IEl0IGlzIGxpdmluZyBvciBpdCBpcyBkZWFkLgpCZXN0bWluaXBjIHUKIkhlIGlzIChhcyBnb29kIGFzIGhlIHNheXMgaGUgaXMpLCIgSG9yZm9yZCBzYWlkLiAiSSBmZWVsIGxpa2UgU21hcnQgaW4gVW5vIGlzIGxpa2UgaGUgaXMgaW4gZXZlcnl0aGluZzogSGUganVzdCB0YWxrcyBoaXMgd2F5IGludG8gc3R1ZmYgYW5kIHRoZW4gaGUganVzdCwgbGlrZSwgd2lucy4gCkZpcnN0IG9mZiwgSSBjcmVhdGVkIGEgZGF0YWJhc2UgdGFibGUgdG8gaG9sZCAiRG9uYXRpb24iIHJlY29yZHMuIEl0IGhvbGRzIGRvbmF0aW9ucyBnaXZlbiB0byBhIGNvbXBhbnksIGFuZCBJIHdhbnQgdGhvc2UgZG9uYXRpb25zIHNlbnQgdG8gZG93bnN0cmVhbSBzeXN0ZW1zLiBCZWNhdXNlIEkgbWF5IGdldCBtb3JlIHRoYW4gb25lIGRvbmF0aW9uIGR1cmluZyBhIFdDRiBTUUwgYWRhcHRlciBwb2xsaW5nIGludGVydmFsLCBJIG5lZWQgdG8gc3BsaXQgdGhlIGNvbGxlY3Rpb24gb2YgcmV0cmlldmVkIHJlY29yZHMgaW50byBpbmRpdmlkdWFsIHJlY29yZHMuClRoZXNlIGNoaXBzIGhhdmUgdGhlIHNhbWUgdmFsdWUsIGFuZCBwbGF5IGFzIGFueSBvdGhlciBMYXMgVmVnYXMgY2FzaW5vIHBva2VyIGNoaXBzIGF0IHRoZSB0YWJsZXMsIGJ1dCBtb3N0IHBlb3BsZSB0aGF0IGdldCBob2xkIG9mIHRoZW0gdGFrZSB0aGVtIGhvbWUgYXMgY29sbGVjdG9yJ3MgaXRlbXMuIElmIHlvdSBzZWUgb25lLCBhbmQgeW91IHdhbnQgaXQsIGdyYWIgaXQgZmFzdCEuIApTZWUsIHRoZSAzMDAgUGF1bHNvbiBQaGFyb2FoIENhc2lubyBUb3AgSGF0IFBva2VyIENoaXAgU2V0IHdpdGggQWx1bWludW0gQ2FzZSB0aGF0IHdlIHB1cmNoYXNlZCB3ZSBqdXN0IGtlcHQgZm9yIG91cnNlbHZlcy4gV2UgdW5kZXJzdGFuZCB3ZSB0b2xkIHlvdSBpbiB0aGUgYmVnaW5uaW5nIGl0IHdhc24ndCBmb3IgdXMsIGJ1dCB5b3Ugd291bGRuJ3QgaGF2ZSB1bmRlcnN0b29kLiBTbyB3ZSdyZSB0ZWxsaW5nIHlvdSBub3cuIApJIGhhdmVuIHBsYXllZCB0aGF0IG11Y2ggc2luY2UgaXQgYmVlbiBvdXQsIGJ1dCBtaW51cyB0aGUgZWFybHkgZ2FtZSBmaWdodCBvdmVyIGl0LCBpdCBzZWVtcyBsaWtlIGEgam9rZSB3ZWFwb24uIApSaWdodCBub3csIG1vc3QgbGFyZ2Ugc2NhbGUgZGV2cywgb25lcyB3aG8gY2FyZSBhYm91dCB3aGF0IHRoZWlyIHByb2R1Y3QgaXMgZ29pbmcgdG8gYmUgc2hhcmluZyBhIHN0b3JlZnJvbnQgd2l0aCwgYXJlIHdpdGggVmFsdmUgcHJpbWFyaWx5IGJlY2F1c2UgU3RlYW0gaXMgdGhlIGxhcmdlc3QgZm9yIFBDLiBCdXQgYmVjYXVzZSBvZiBob3cgaGFuZHMgb2ZmIFZhbHZlIGlzLCBzaGl0IGxpa2Ugd2hhdCBhYm92ZSBtYW5hZ2VzIHRvIGdldCBvbiB0aGUgc3RvcmUuIEl0IGEgZmFyIGNyeSBmcm9tIHdoYXQgU3RlYW0gdXNlZCB0byBiZSwgd2hlbiBnZXR0aW5nIHlvdXIgZ2FtZSBvbnRvIFN0ZWFtIG1hZGUgaXQgcmVzcGVjdGFibGUuIE5vdyBpdCBzbyBlYXN5IHlvdSBjYW4gbWFrZSBhIGJhcmVseSBmdW5jdGlvbmluZyBwcm9ncmFtIG1hZGUgb3V0IG9mIHN0b2xlbiBhc3NldHMgYW5kIGdldCBpdCBvbnRvIFN0ZWFtLiBPciBtYWtlIHNvbWV0aGluZyBsaWtlIHRoZSBzaGl0IGFib3ZlLgpNYXliZSB5b3UgY291bGQgYXNrIGhlciB0byBwcmFjdGljZSByZWFsbHkgU1RPUFBJTkcgYW5kIGNvbnNpZGVyaW5nOiB3aGF0IGRvIEkgd2FudCB0byBkbz8/IFNvIHRoZSByZXN0YXVyYW50LiBTaGUgbmVlZHMgdG8gdGhpbmsgYWJvdXQgd2hhdCBraW5kIG9mIGZvb2Qgc2hlIGxpa2VzIGFuZCB3YW50cywgYW5kIG1ha2UgdGhhdCBjaG9pY2UuIApWb3VzIHRlcywgIG1vbiBodW1ibGUgYXZpcywgdG91dCAgZmFpdCBkYW5zIGxlIGp1c3RlICBzb24gc3VqZXQgZXQgamUgdm91cyByZW1lcmNpZSBkZSBkb25uZXIgdm90cmUgdG1vaWduYWdlICBzb24gZW5kcm9pdCwgY2UgcXVlIGplIGZhaXMgZ2FsZW1lbnQgIGNoYXF1ZSBmb2lzIHF1ZSBqZSBsZSBwZXV4LlF1YW5kIGplIHBhcmxhaXMgZCd1biByZWN5Y2xhZ2UgZCdhaXJzIGNvbm51cy4gCkFzIG90aGVycyBoYXZlIG5vdGVkLCB5b3UgY291bGQgcHJhY3Rpc2UgaW4gYSBWTSBmaXJzdC4gSSB3aWxsIHNheSB0aGF0IGl0IHF1aXRlIHNhdGlzZnlpbmcgd2hlbiB5b3UgZ2V0IGFzIGZhciBhcyBib290aW5nIHVwIGFuZCBzZWVpbmcgYSBncmFwaGljYWwgbG9naW4gc2NyZWVuIGZvciB0aGUgZmlyc3QgdGltZS4gCkFub3RoZXIgaW50ZXJlc3RpbmcgdGhpbmcgdG8gbm90ZSBhYm91dCBwb2tlciBjaGlwcyBpcyB0aGF0IHRoZXkgc291bmQgZGlmZmVyZW50bHkuIEV4cGVydCBwb2tlciBwbGF5ZXJzIGFuZC9vciBwb2tlciBjaGlwIHRyaWNrcyBtYXN0ZXJzIGhhdmUgdGhlaXIgb3duIHByZWZlcmVuY2VzIG9mIGNoaXBzLiAKTXkgdW5kZXJzdGFuZGluZywgYW5kIEkgYW0gbm90IGV4cGVydCwgaXMgdGhhdCB0aGV5IGhhZCBhbiBpc3N1ZSBpbiB0aGF0IGEgbWlub3JpdHkgb2YgYXV0aXN0aWMgY2hpbGRyZW4gZ290IGZ1bGwgc2VydmljZSwgYW5kIHRoZW4gdGhlcmUgd2FzIGEgbGFyZ2VyIHdhaXRpbmcgbGlzdCBvZiBjaGlsZHJlbiBvbiB3YWl0aW5nIGxpc3RzLiBOb3cgdGhlIGdvdmVybm1lbnQgaXMgZ29pbmcgdG8gZ2l2ZSB0aGUgbW9uZXkgZGlyZWN0bHkgdG8gdGhlIHBhcmVudHMgb2YgYW4gYXV0aXN0aWMgY2hpbGQsIHNwcmVhZGluZyBpdCBvdXQgbW9yZSBldmVubHkuIApBcyBpbXByZXNzaXZlIGFzIHRoYXQgcnVuIHdhcywgdGhpcyB5ZWFyJ3MgbWF5IGJlIGJldHRlciBhcyB0aGVyZSB3ZXJlIDcsODc0IGVudHJhbnRzIGZvciB0aGUgdG91cm5hbWVudC4gCkknZCBiZXQgaWYgc2hlIHdlbnQgdXAgdG8gaGVyIHByb2Zlc3NvciBhbmQgdG9sZCB0aGVtIHNoZSB3YXMgdGhpcyBhZGFtYW50IGFib3V0ICJmaWd1cmluZyBwZW9wbGUgb3V0IiwgaGUnZCBwb2xpdGVseSB0ZWxsIGhlciB0aGF0IHNoZSdzIHdheSBvdXQgb2YgbGluZS4uIApUaGUgZ2FtZSBsYWNrcyBhbnkgc291bCAsIGFuZCBpdCBpc24gYmVjYXVzZSBvZiB0aGUgZmFjdCBpdCBpbiBiZXRhOyB0aGUgQkYzIGJldGEgaGFkIGEgc291bC4gCkRlbW9jcmF0cyBoYXZlIGJlZW4gcGxheWluZyB0aGlzIHNtYXJ0LiBUaGV5IGFyZSBJbnRyb2R1Y2luZyBhIGxvdCBvZiBsZWdpc2xhdGlvbiB0aGF0IGRvZXNuIGhhdmUgYSBjaGFuY2Ugb2YgZ2V0dGluZyBwYXNzZWQuIFRoZXkgYXJlIGdldHRpbmcgcG9saXRpY2FucyBvbiByZWNvcmQgd2l0aCB3aGF0IHRoZWlyIHBvc2l0aW9ucyBhcmUuIFRoaXMgd2lsbCBoaWdobGlnaHQgdGhlIGRpZmZlcmVuY2VzIGJldHdlZW4gdGhlIHBhcnRpZXMgZ29pbmcgaW50byAyMDIwLgpIZXkgT1AgL3UvWGVSb0ZvUm0hIEkgbm9ybWFsbHkgZG9uIHNlbGYgcHJvbW90ZSBvbiBSZWRkaXQgYnV0IEkgdGhpbmsgb3VyIG11c2ljIGlzIHZlcnkgY2xvc2UgdG8gd2hhdCB5b3UgZGVzY3JpYmluZy4gCkV0IGonYWxsYWlzIG91YmxpZXIuIFBvdXRvdSBldCBzYSBtYW5pcmUgZGUgcydoYWJpbGxlci4gY2V0dGUgYXR0aXR1ZGUgcXVpIGNvbnNpc3RlICBzdXJqb3VlciBsZSBwcm9sbywgY2UgbWFucXVlIGRlIHJlc3BlY3QgIGwnZW5jb250cmUgZGUgbGEgY2xhc3NlIG91dnJpcmUgZG9udCBpbCBhIGwnb3V0cmVjdWlkYW5jZSBkZSBzZSByY2xhbWVyLiBjZSBtcHJpcyBkZSBsYSBjcmF2YXRlIGF1IG5vbSBkJ3VuIG15c3RyaWV1eCBwcmluY2lwZSAhIFJpc2libGUgISBKZSBtZSBzb3V2aWVucyBkJ3VuIGRlIG1lcyBvbmNsZXMsIGJuaXN0ZSBxdWkgcGFzc2FpdCBzb24gdGVtcHMgIGJvc3NlciB2aWEgYWdlbmNlcyBkJ2ludHJpbSwgcXVpIGFsbGFpdCBkZSBjaGFudGllciBlbiBjaGFudGllciBmYWlyZSBkZXMgZmVudHJlcyBldCBkZXMgcG9ydGVzLCBkZXMgcG9ydGVzIGV0IGRlcyBmZW50cmVzLiBMb3JzcXVlIGondGFpcyBlbmZhbnQsIGxlIHNhbWVkaSBzb2lyIGlsIG0nZW1tZW5haXQgYXUgY2lubWEuIFJhcyBkZSBwcnMsIGNvaWZmIGltcGVjYWJsZW1lbnQsIGxlIGNvc3RhcmQgZGV1eCBwaWNlcyBkZSBtaXNlLiBJbCBhaW1haXQgbGEgcHJvcHJldCBldCBsYSBkY2VuY2UuIExlIG1pbGlldSBkb250IG9uIHZpZW50IG5lIGNvbW1hbmRlIHBhcyBkJ3RyZSBoYWJpbGwgZGUgbWFuaXJlIG5nbGlnZS4gUG91dG91IGh1bWlsaWUgbGVzIGNsYXNzZXMgcG9wdWxhaXJlcywgaWwgbmUgbGVzIGhvbm9yZSBudWxsZW1lbnQgbmkgbmUgbGVzIHJlcHJzZW50ZSwgaWwgbGV1ciBwb3N0aWxsb25uZSAgbGEgZ3VldWxlIHF1YW5kIGlsIGFmZmlybWUgcGFybGVyIGVuIGxldXIgbm9tLgpFdmVyeSB0aW1lIEkgc3RlcCB0aHJvdWdoIHRoZSBhdXRvbWF0aWMgc2xpZGluZyBkb29ycyBhdCBteSBob3NwaXRhbCBlbnRyYW5jZSwgSSB3YWxrIGJldHdlZW4gdHdvIHNpZGVzIG9mIG15IGxpZmUuIApOb25lIG9mIHRoZSBpbmNsdWRlZCBzdHVkaWVzIHJlcG9ydGVkIHNlcmlvdXMgc2lkZSBlZmZlY3RzLCBzdWNoIGFzIHZlcnRlYnJvYmFzaWxhciBhY2NpZGVudHMsIHdpdGggU01UU01UIG1heSBiZSBiZXR0ZXIgdGhhbiBtYXNzYWdlIGZvciBjZXJ2aWNvZ2VuaWMgaGVhZGFjaGUgYW5kIG1heSBiZSBvZiBzaW1pbGFyIGJlbmVmaXQgdG8gcHJlc2NyaXB0aW9uIGRydWdzIGZvciB0ZW5zaW9uIHR5cGUgaGVhZGFjaGVzIGFuZCBtaWdyYWluZS4gUGFydGljaXBhbnRzIHdpdGggY2hyb25pYyBoZWFkYWNoZSB3ZXJlIGVsaWdpYmxlLCBidXQgdGhlIGNyaXRlcmlhIGZvciB0aGlzIGdyb3VwIHdlcmUgYnJvYWRseSBkZWZpbmVkLiAKQWxzbywgdGhlIGFjY291bnRhbnQgY2FuIGtlZXAgZG9pbmcgd2hhdCBoZSBkb2luZywgYnV0IHRoYXQgZG9lc24gbWVhbiBJIGhhdmUgdG8gaGlyZSBoaW0uIElmIGhlIHdvcmtlZCBmb3IgdGhlIHN0YXRlIGFuZCBteSB0YXggZG9sbGFycyB3ZW50IHRvIGZ1bmRpbmcgaGlzIHNhbGFyeSwgSSB3b3VsZCBwcm90ZXN0IGp1c3QgYXMgbXVjaCwgdGhlIHNhbWUgd2F5IEkgcHJvdGVzdGVkIHRoZSBjdXJyZW50IENvbnN0YWJsZSBhbmQgQ29yb25lci4gVGhhdCB0aGUgd2hvbGUgcG9pbnQsIHRoYXQgcGVvcGxlIGRvbiB3YW50IHRvIHN1cHBvcnQgaGltIGZpbmFuY2lhbGx5LiAKU21va2luZyBhbmQgRHJlc3MgQ29kZXM6IG5vIG1hdHRlciBpZiB0aGF0IHlvdSBhcmUgYSBzbW9rZXIgb3IgbWF5YmUgYSBub24gc21va2VyLCBhZnRlciB5b3UgYXJlIGdhbWJsaW5nIG9ubGluZSB5b3UgYXJlIGFic29sdXRlbHkgZnJlZSBmcm9tIG9iZXlpbmcgdGhlIGd1aWRlbGluZXMuIFNpbWlsYXIgZ29lcyBmb3IgZHJlc3NpbmcsIGVhdGluZyBhbmQgZHJpbmtpbmc7IHlvdSBtYXkgZWl0aGVyIHNtb2tlIG5vbiBxdWl0IG9yIHN0YXkgd2l0aGluIGEgbm9uIHNtb2tpbmcgZW52aXJvbm1lbnQ7IHB1dCBvbiB5b3VyIHNsb3BwaWVzdCBjbG90aGluZyBvciByZW1haW4gbmFrZWQ7IGVhdCwgZHJpbmssIHRhbGsgYXJvdW5kIHRoZSB0ZWxlcGhvbmUsIHdhdGNoIFRlbGV2aXNpb24sIHdoYXQgZXZlci4gCiJPaCwgSSBwdXQgdGhhdCBpbiwiIHNhaWQgRGlhbmEsIHJlYXNzdXJlZC4gIkl0IHdhcyBhcyBlYXN5IGFzIHdpbmsgICBhbmQgb2YgY291cnNlIG15IGV4cGVyaWVuY2UgaW4gb3VyIG9sZCBTdG9yeSBDbHViIGhlbHBlZCBtZS4gWW91IGtub3cgdGhlIHNjZW5lIHdoZXJlIEF2ZXJpbCBtYWtlcyB0aGUgY2FrZT8gV2VsbCwgSSBqdXN0IHN0YXRlZCB0aGF0IHNoZSB1c2VkIHRoZSBSb2xsaW5ncyBSZWxpYWJsZSBpbiBpdCwgYW5kIHRoYXQgd2FzIHdoeSBpdCB0dXJuZWQgb3V0IHNvIHdlbGw7IGFuZCB0aGVuLCBpbiB0aGUgbGFzdCBwYXJhZ3JhcGgsIHdoZXJlIFBFUkNFVkFMIGNsYXNwcyBBVkVSSUwgaW4gaGlzIGFybXMgYW5kIHNheXMsIFN3ZWV0aGVhcnQsIHRoZSBiZWF1dGlmdWwgY29taW5nIHllYXJzIHdpbGwgYnJpbmcgdXMgdGhlIGZ1bGZpbG1lbnQgb2Ygb3VyIGhvbWUgb2YgZHJlYW1zLCcgSSBhZGRlZCwgaW4gd2hpY2ggd2Ugd2lsbCBuZXZlciB1c2UgYW55IGJha2luZyBwb3dkZXIgZXhjZXB0IFJvbGxpbmdzIFJlbGlhYmxlLiciLiAKMjAvaG91ciB3b24gc2V0IG1lIHVwIGZvciBsaWZlPy4gU2VyaW91c2x5IHdoYXQgaXMgdGhlIGNvc3Qgb2YgbGlmZSB3aGVyZSB5b3UgbGl2ZT8gMjAgYW4gaG91ciBpcyBhbHJlYWR5IDIuNSBqdW1wIHdoaWNoIGlzIGdyZWF0IGZvciBzb21lb25lIHdobyBncmV3IHVwIHBvb3IgYW5kIGxlYXJuZWQgdG8gZW5qb3kgdGhlIGZyZWUgc3R1ZmYgaW4gbGlmZSwgbGlrZSBuYXR1cmUuIEkga25vdyBmb3IgdGhlIGF2ZXJhZ2UgcGVyc29uIHdvdWxkbnQgYmUgZW5vdWdoIGJlY2F1c2UgdGhleSBzcGVuZCBlbm9ybW91cyBhbW91bnRzIG9mIG1vbmV5IGluIHNoaXQgdGhleSBkb24gbmVlZCwgYnV0IHVubGVzcyBJIGhhdmUgYSBmYW1pbHkgb2YgMiBraWRzIEkgaG9uZXN0bHkgZG9uIHNlZSBob3cgMjAvaG91ciBpc24gZW5vdWdoIGluIHRoZSBVSy4gCkhlIHNwZWN0YWN1bGFybHkgZmFpbGVkIGR1cmluZyB0aGUgTllETiBpbnRlcnZpZXcsIGFuZCBhZnRlciB0aHJlZSB5ZWFycywgaGUgc3RpbGwgY2FuIHNlZW0gdG8gZXhwbGFpbiB0aGluZ3MgYmV5b25kIGEgc3VyZmFjZSBsZXZlbC4gU2VlIGhpcyBpbnRlcnZpZXcgd2l0aCBDaHJpcyBIYXllcyAoYSBzZWxmIGlkZW50aWZpZWQgQmVybmllIHN1cHBvcnRlcikgbGFzdCB3ZWVrIGFzIGFuIGV4YW1wbGUuIApOb3csIHRoaXMgcG9rZXIgY2FsY3VsYXRvciBjYW4gYWxzbyBoZWxwIHlvdSBzYXZlIHlvdXIgYmFua3JvbGwgYW5kIGJ1aWxkIGl0IHVwIGFzIHdlbGwuIEl0IGluZm9ybXMgeW91IGFib3V0IHRoZSBob2xlIGNhcmQgc3RyZW5ndGggYWxvbmcgd2l0aCBwb3Qgc2l6ZXMgYW5kIHRoZXNlIHR3byB0aGluZ3MgcGxheSBhIHZpdGFsIHJvbGUgaW4geW91ciBkZWNpc2lvbnMuIApBbHNvIGVhcm5pbmcgaXRzIHBsYWNlIGFtb25nIHRoZSBzZWFzb24ncyBoaWdoZXN0IHJhdGVkIG5ld2JpZXMgYXJlIE5CQydzIHNwaW5vZmYgb2YgaXRzIHN1bW1lciBmbGFnc2hpcCwgIkFtZXJpY2EncyBHb3QgVGFsZW50OiBUaGUgQ2hhbXBpb25zLCIgd2hpY2ggYXZlcmFnZWQgMTAuMSBtaWxsaW9uIHZpZXdlcnMgYW5kIGEgMS43IHJhdGluZyBhcyBhIGZpbGwgaW4gZm9yIHRoZSBzZWVtaW5nbHkgZGVhdGhsZXNzICJUaGUgVm9pY2UsIiBhbmQgdGhlIFBlYWNvY2sncyBEd2F5bmUgSm9obnNvbiBob3N0ZWQgIlRoZSBUaXRhbiBHYW1lcyIgKDUuMTcgbWlsbGlvbiB2aWV3ZXJzLCAxLjQgcmF0aW5nKS4uIApPcmlnaW5hbGx5IG9ubHkgaGVhcmluZyB0aGVpciBzb25ncyBvZiB0aGUgYW5pbWUgc2VyaWVzLCBJIGxvb2tlZCBtb3JlIGludG8gdGhlaXIgbXVzaWMgYW5kIGRpc2NvdmVyZWQgdGhhdCB0aGVyZSBldmVuIG1vcmUgZ3JlYXQgbXVzaWMgZnJvbSB0aGVtLiBUaGV5IGhhdmUgbWFueSBkaWZmZXJlbnQgc29uZ3MgYW5kIHJlYWxseSBleHBhbmQgdGhlIGdlbnJlIG9mIGFsdGVybmF0aXZlLiBTb21lIHNvbmdzIGNhbiBiZSB1cGJlYXQsIGFuZCB0aGVuIG90aGVycyBnZXQgbW9yZSBvZiBhIHNob2VnYXplIGtpbmQgb2YgZmVlbC4gCkhlJ3Mgc3RpbGwgdXNpbmcgZGlyZWN0IG1haWwsIHdoaWxlIHlvdSBhcmUgY29uZHVjdGluZyBXZWJpbmFycy4gClBlb3BsZSB3aXRoIHRoZSBoaWdoZXN0IGFjdGl2aXR5IGxldmVscyB3ZXJlIGhhbGYgYXMgbGlrZWx5IGFzIGluYWN0aXZlIGluZGl2aWR1YWxzIHRvIGRldmVsb3AgQWx6aGVpbWVyIGFuZCB3ZXJlIGFyb3VuZCA0MCUgbGVzcyBsaWtlbHkgdG8gc3VmZmVyIGFueSBkZW1lbnRpYSBvciBtZW50YWwgaW1wYWlybWVudCwgdGhlIHJlcG9ydCBpbmRpY2F0ZXMuIFByZXZpb3VzIHJlc2VhcmNoIGhhcyBzdWdnZXN0ZWQgZXhlcmNpc2UgaGVscHMgcGVvcGxlIHJldGFpbiB0aGVpciBtZW50YWwgcHJvd2VzcyBhcyB0aGV5IGFnZSwgYW5kIG1heSBldmVuIHN0YXZlIG9mZiBBbHpoZWltZXIgYW5kIG90aGVyIGRlbWVudGlhLiBJdCBoYXMgYmVlbiBzdWdnZXN0ZWQgdGhhdCBiZWNhdXNlIGV4ZXJjaXNlIGhlbHBzIG1haW50YWluIGhlYWx0aHkgYmxvb2QgZmxvdyBhbmQgbG93ZXJzIGhpZ2ggYmxvb2QgcHJlc3N1cmUgYW5kIGNob2xlc3Rlcm9sLCBpdCBtYXkgcHJvdGVjdCB0aGUgYnJhaW4ganVzdCBhcyBpdCBkb2VzIHRoZSBoZWFydCBhbmQgb3RoZXIgb3JnYW5zLiBUaGUgaW52ZXN0aWdhdG9ycyBmb3VuZCB0aGF0IHRoZSBtb3JlIGFjdGl2aXR5IHRoZSBuZWFybHkgNSwwMDAgc3R1ZHkgcGFydGljaXBhbnRzIHJlcG9ydGVkIGF0IHRoZSBzdHVkeSBzdGFydCwgdGhlIGxlc3MgbGlrZWx5IHRoZXkgd2VyZSB0byBzdWZmZXIgbWVudGFsIGRlY2xpbmUuClNoZSByZW1haW5lZCBleHRyZW1lbHkgY2xvc2Ugd2l0aCBoZXIgZmFtaWx5LCBhIHRpZ2h0IGtuaXQgZ3JvdXAgdGhhdCBsaXZlcyBuZWFyIGVhY2ggb3RoZXIgaW4gQW5kb3Zlci4KVGhlIGNoYXJnZXMgY2FycnkgYSBwb3RlbnRpYWwgcHJpc29uIHRlcm0gbGFzdGluZyBkZWNhZGVzLCB0aG91Z2ggaGlzIGFjdHVhbCBzZW50ZW5jZSB3b3VsZCBiZSBmYXIgbGVzcy4gQXR0b3JuZXkgRGFuaWVsIFJpY2hlbnRoYWwuIENvbmZlcmVuY2UgY2VudHJlIGluIE1hY2F1LCB3aGVyZSBoZSByZXNpZGVzLiAKRW4gZWZmZXQsIGxvcnMgZHUgZGVybmllciB0cmltZXN0cmUgZGUgbGEgZ3Jvc3Nlc3NlLCBsJ2VuZmFudCBzdWJpdCBkZXMgZm9ydGVzIHByZXNzaW9ucyBzdXIgc29uIGNvcnBzLCBwYXJ0aWN1bGlyZW1lbnQgc3VyIGwnYXhlICJjcm5lICAgYmFzc2luIiBxdWkgZGV2cm9udCB0cmUgbGEgY2libGUgZHUgbWFzc2FnZSBzdXIgbGVzIGJicy4gCkhhdmluZyBhIGpvYiBldmVuIGEgbmVhcmx5IGZ1bGwgdGltZSBqb2Igd2FzIHdoYXQgaGVscGVkIG1lIHN0YXkgbW9zdCBmb2N1c2VkIGF0IHNjaG9vbCAoQlMgICBFRS9DRSkuIEl0IGhlbHBzIGF2b2lkIHByb2NyYXN0aW5hdGlvbiBleGN1c2VzLCBoZWxwcyB3aXRoIG1hbmFnaW5nIHRpbWUsIGFuZCBpZiB5b3Ugd29yayBpdCB3ZWxsIGVub3VnaCB5b3UgYWN0dWFsbHkgaGF2ZSBzb21lIHNlbWJsYW5jZSBvZiBpbmRlcGVuZGVuY2UgYXQgdGhlIGVuZCBvZiB0aGUgZGF5LiBJZiB3b3JraW5nIGlzIG92ZXJ3aGVsbWluZyBidXQgeW91IHN0aWxsIG5lZWQgbW9uZXkgSSB3b3VsZCB0ZWxsIGFueW9uZSB0byBmb2N1cyB0aGVpciBkYW1uZWQgaGFyZGVzdCB0byBnZXQgYSBqb2Igd2l0aCB0aGUgc2Nob29sIHRoZXkgYXR0ZW5kLiAKQnV0IHRoZSBzZWNvbmQgYmlnZ2VzdCBidXlpbmcgZ3JvdXAgaXMgb2xkZXIgdGhhbiA2NSBhbmQgdGhpcmQgaXMgYWdlcyA1NSB0byA2NC4gVGhhdCBtZWFucyBwZW9wbGUgZG93bnNpemluZyBhcmUgYSBzaWduaWZpY2FudCBmYWN0b3IsIHNhaWQgQ291d2VuYmVyZ2hzLi4gCkhlIGVhcm5lZCBhIGNhcmVlciBiZXN0ICQ4NzgsNTAwIGZvciBoaXMgZWZmb3J0cyBkdXJpbmcgdGhhdCB0b3VybmFtZW50LCB3aGljaCBpbmNsdWRlZCBhIGZpbmFsIHRhYmxlIGNvbnNpc3Rpbmcgb2YgdGhlbiBmZWxsb3cgcmlzaW5nIHN0YXJzIEpvcmRhbiBNb3JnYW4gKEdQSSBOby4gCkluIHRoZSBlbmQgYWZ0ZXIgbXkgZ3JhbmRwYXJlbnRzIHBhc3NlZCwgYWxsIHRocmVlIGRpdmlkZWQgZXZlcnl0aGluZyBlcXVhbGx5IGFuZCBldmVuIEZhY2VUaW1lZCB0aGUgZ3JhbmRraWRzIGFuZCBvdGhlciByZWxhdGl2ZXMgd2hpbGUgZ29pbmcgdGhyb3VnaCB0aGUgaG91c2UgdG8gYXNrIGlmIHRoZXJlIHdhcyBhbnl0aGluZyB3ZSBlc3BlY2lhbGx5IHdhbnRlZC4gSSd2ZSBnb3Qgb25lIG9mIG15IGdyYW5kZmF0aGVyIGNvd2JveSBoYXRzLCBzb21lIGVtYnJvaWRlcnkgbXkgZ3JhbmRtb3RoZXIgZGlkLCBhbmQgYSBmZXcgb3RoZXIgb2RkcyBhbmQgZW5kcy4gCjMuIFRoZSBFeHBlcnQgICB0aGlzIGd1eSBrbm93cyBtb3JlIGFib3V0IHBva2VyIHRoYW4gYW55b25lIGVsc2UgYXQgdGhlIHRhYmxlIGFuZCBsaWtlcyB0byBjaGl0IGNoYXQgYWJvdXQgcG9rZXIgZXRpcXVldHRlIGFuZCBzdHJhdGVneSB3aGVuZXZlciBwb3NzaWJsZS4gSGUgYmV0cyBoaXMgbG93IHBhaXJzIGhhcmQgcHJlIGZsb3AgYW5kIG9mdGVuIGRvZXMgd2VsbCBhdCB0aGUgdGFibGUsIGFsdGhvdWdoIGhlIGFsc28gc3VmZmVycyBzb21lIGJpZyBsb3NzZXMgb24gYSByZWd1bGFyIGJhc2lzIGR1ZSB0byBoaXMgaW5hYmlsaXR5IHRvIGFkanVzdCB0byB0YWJsZSBkeW5hbWljcyB3aGVuIHRocmVlIG9yIGZvdXIgcGVvcGxlIGNhbGwgaGlzIDEweCByYWlzZSB3aXRoIGEgcGFpciBvZiBzZXZlbnMuIApJIGdvIHRvIHRoZSB3b3JrZXIgdG8gYXNrIGhpbSB0byBzaGlmdCBoZXIgYmVkLgpJdCBub3cgZmFjZXMgcmF0aWZpY2F0aW9uIGJ5IHRoZSBsZWdpc2xhdHVyZXMgb2YgYWxsIHRocmVlIGNvdW50cmllcy4uIApGb3Igc3VyZSwgbW9zdCBvZiB0aGUgdGltZSB5b3UgYXJlIGdvaW5nIHRvIGZpbmQgbm90aGluZyBtb3JlIHRoYW4gbmljZSBwZW9wbGUgd2hvIGp1c3QgYWxsIGhhdmUgYSBjb21tb24gaW50ZXJlc3QgYW5kIGFyZSBoYXBweSB0byBtZWV0IG90aGVycyB3aG8gc2hhcmUgdGhlbS4gQnV0IHRoZSAiYW5ncnkgbmVyZCIgc3RlcmVvdHlwZSBpcyByZWFsIGFuZCBpcyBnZXR0aW5nIG1vcmUgYW5kIG1vcmUgdm9jYWwgdGhlc2UgZGF5cywgYW5kIHRoZXJlIGEgbG90IG9mIGdhdGVrZWVwaW5nIGdvaW5nIG9uIGFzIHdlbGwuIEl0IGNhbiBiZSBhIGNyYXBzaG9vdCwgYmVjYXVzZSBmb3IgZXZlcnkgaGVhcnR3YXJtaW5nIHN0b3J5IHlvdSBoZWFyIHRoZXJlIGlzIGFsc28gb25lIHdoZXJlIHNvbWVvbmUgZmVsdCBsaWtlIHRoZXkgd2VyZSBzY29sZGVkIG91dCBvZiB0aGUgcm9vbSBmb3Igbm90IGJlaW5nIHRoZSAicmlnaHQiIGtpbmQgb2YgZmFuLiBJIGhvcGUgaGUgY2FuIHRyeSBnb2luZyBhZ2FpbiB0byBhIENvbWljIENvbiBvciBhIGNvbnZlbnRpb24gbGlrZSB0aGF0IG9uZSBkYXksIGFzIGhlIHNob3VsZCBiZSBhYmxlIHRvIGdvIGFuZCBoYXZlIGZ1biEgU29tZXRpbWVzIGl0IGRlcGVuZHMgd2hlcmUgeW91IGdvIHRvbyAgIG5vdCB0b28gc2hvY2tlZCB0aGF0IHRoZXJlIHdlcmUgamVya3Mgb24gdGhlIHRyYWluIGxhdWdoaW5nIGF0IGhpbSBpbiBMb25kb24sIHdoZXJhcyB0aGUgb25lIGhlcmUgaW4gTllDIG5vYm9keSBiYXRzIGFuIGV5ZSBhdCBwZW9wbGUgaW4gY29zdHVtZSAoYW5kIG1hbnkgZXZlbiBsaWtlIGl0IGZvciBtYWtpbmcgdGhlaXIgY29tbXV0ZSBtb3JlIGZ1biB0aGF0IGRheSkKQSBkaXNjaXBsaW5lZCBwbGF5ZXIga25vd3MgdmVyeSB3ZWxsIHdoZW4gdG8gc3RvcCwgd2hhdCBoYW5kcyB0byBwbGF5IGFuZCBub3QgdG8gcGxheSwgYW5kIHdoYXQgdHlwZXMgb2YgZ2FtZXMgYXJlIGZvciBoaW0uLiAKSW4gdGhlIHBhc3QsIG5lZWRsZXMgd2VyZSBwbGFjZWQgaW4gYW4gYXV0b2NsYXZlLCBhIGRldmljZSB1c2VkIHRvIHN0ZXJpbGl6ZSBkZW50YWwgYW5kIHN1cmdpY2FsIHRvb2xzLCBhZnRlciBlYWNoIHVzZS4gSG93ZXZlciwgd2l0aCB0aGUgaW5jcmVhc2UgaW4gcHJldmFsZW5jZSBvZiBoZXBhdGl0aXMgYW5kIEFJRFMvSElWLCBtb3N0IHByYWN0aXRpb25lcnMgaW4gdGhlIFdlc3Qgbm93IHVzZSBwcmVzdGVyaWxpemVkIGRpc3Bvc2FibGUgbmVlZGxlcyB0byBlbnN1cmUgYWJzb2x1dGUgc2FmZXR5LiAKQSB0ZW50IHdpdGggYSBiYXRodHViIGZsb29yIGlzIHZlcnkgd2VsY29tZSBvbiB0aGUgQXBwYWxhY2hpYW4gVHJhaWwuIEkgdXNlZCBhIFpwYWNrcyBvbiBteSB0aHJ1IGhpa2UgbGFzdCB5ZWFyLiAKSWYgeW91IGFyZSBhIHBsYXllciBhbmQgdGhlIGNhcmQgdGhhdCB5b3UgYXJlIGRlYWx0IHdpdGggaXMgbG93ZXIgdGhhbiB0aGUgY2FyZCB0aGF0IHRoZSBkZWFsZXIgaGFzLCB5b3UgbG9zZSB0aGUgYmV0LiAKSSB0aGluayB0aGUgcHJvYmxlbSBoZXJlIGlzIHRoYXQgd2Uga25vdyBjb25jbHVzaXZlbHkgaW4gdGhlIHdvcmxkIG9mIG9iZXNpdHkgbWVkaWNpbmUgYW5kIG51dHJpdGlvbmFsIHNjaWVuY2UsIHRoZSBjYXVzZSBvZiBvYmVzaXR5IGlzIGEgY29tcGxleCBkaXNlYXNlLiBHZW5ldGljIGNhdXNlcy4gQmVoYXZpb3JhbC4gClRyYXZlbCB1c2VkIHRvIGJlIGEgbmlnaHRtYXJlLCBidXQgd2l0aCB0aGUgaGVscCBvZiBteSB3aWZlIGFuZCBqdXN0IHBsYWluIHByYWN0aWNlIEkgZ290IGJldHRlci4gClRoZSBBc3NvY2lhdGVkIFByZXNzLi4gCldlIG11c3QgYmUgaGF2aW5nIGEgbm90aW9uIGluIHRoZSBtaW5kcyB0aGF0IGNhc2lub3MgYXJlIHN1cmVseSBhc3NvY2lhdGVkIHdpdGggdGhlIGdhbWJsaW5nIGFuZCBodWdlIG1vbmV5IGZsb3dpbmcgYWNyb3NzIHRoZSB0YWJsZXMuIApUaGUgcm92ZXIgc2tpZGRlZCB0byBhIGhhbHQsIHBvdW5kaW5nIHRoZW0gd2l0aCBzdG9uZXMgYW5kIGNvdmVyaW5nIHRoZW0gaW4gYSByZWQgbWlzdCBvZiBkaXJ0LiAKQnV0IHllcywgaXQgaXMgcG9zc2libGUgaGUgd291bGQgaGF2ZS4gCkluIDIwMTUsIHRocm91Z2ggU3RlbGwgU291bmRjbG91ZCwgdGhlIFNlYXR0bGUgYmFzZWQgZWxlY3Ryb25pYyBtdXNpYyBkdW8gT0RFU1pBLCBoYWQgYmVlbiBleHBvc2VkIHRvIGhpcyBtdXNpYyBhbmQgZW5qb3llZCBpdC4gT0RFU1pBIGFza2VkIFN0ZWxsIHRvIG9wZW4gZm9yIHRoZW0gYXQgdGhlIFNhbiBGcmFuY2lzY28gYW5kIExBIHN0b3BzIG9mIHRoZWlyIHRvdXIsIGFuZCBTdGVsbCBldmVudHVhbGx5IGpvaW5lZCB0aGVtIG9uIHRoZWlyIHdob2xlIHRvdXIgYWZ0ZXIgaGUgZmluaXNoZWQgYW5kIHJlbGVhc2VkIGhpcyByZW1peCBvZiBPREVTWkEgdHJhY2sgIlNheSBNeSBOYW1lLiIKIkkgZmVsdCB0aGF0IGEgaHVnZSBwYXJ0IG9mIHRoaXMgZW50ZXJwcmlzZSBkZXBlbmRlZCBvbiBkaXNjcmV0aW9uLCBzbyBJIHRyaWVkIHRvIGRpc2NvdXJhZ2Ugc3BlY3RhdG9ycyB3aGVuIEkgY291bGQsIGJ1dCBJIGNvdWxkbid0IHN0b3AgdGhlIGd1eXMgYnJpbmdpbmcgZ2lybGZyaWVuZHMgYWxvbmcgdG8gc2hvdyBvZmYgaW4gZnJvbnQgb2YsIG9yIHRoZSBvY2Nhc2lvbmFsIGNlbGVicml0eSBzdG9wcGluZyBieS4gCk15IGhlYXJ0IHdhcyBhbGl2ZSBhbmQgdHJhcHBlZCB3aXRoaW4gdGhlIHdhbGxzIHNjcmVhbWluZyBmb3Igd2hhdCBpdCB0cnVseSB3YW50ZWQsIGJ1dCBpdCB3YXMgc3RpbGwgbm90IHRoZSBwbGFjZSBJIHdhcyBpbiB3aGVuIGludGVyYWN0aW5nIHdpdGggbWVuLiBCb3RoIGFyZSBzdHVubmluZyB3b21lbiwgYnV0IGluIGRpZmZlcmVudCB3YXlzLiBCaWcgZ2lybHMsIHNraW5ueSBnaXJscyBpdCBkb24ndCBtYXR0ZXIgd2hhdCB5b3UgZ290IENhbnQgbGV0IHlvdSBnbyB0b28gZmFyLCBjYXVzZSB5b3VyIGEgc3VwZXJzdGFyIE5vdyBoZXJlJ3MgdGhlIGNvdW50ZG93biBsZXQgZW0ga25vdy4uIApQaWNrcyB0aGVpciBvd24gZmluaXNoZXMsIGluc2lkZSBhbmQgb3V0LCBzYXlzIERpYW5lIFphcm9sYSwgRm94cmlkZ2UgZGlyZWN0b3Igb2Ygc2FsZXMgYW5kIG1hcmtldGluZy4gU2V0cyB1cyBhcGFydCBhbmQgYWx3YXlzIGhhcy4gCldlIGRvIG5lZWQgdG8gZ28gdGhhdCBmYXIsIGFuZCBmdXJ0aGVyLiAKRm9zb21heCwgQm9uaXZhLCBSZWNsYXN0LCBBY3RvbmVsIHRoZXNlIG1lZGljYXRpb25zIGFyZSBzdXBwb3NlZCB0byBoZWxwIHN0b3AgeW91IGZyb20gZ2V0dGluZyBib25lIGZyYWN0dXJlcyBhcyB5b3UgZ2V0IG9sZGVyLgpNeSBhY2NvdW50aW5nIGNsYXNzIGluIGhpZ2ggc2Nob29sIGlzIGNvbXBsaWNhdGVkIGJ1dCBJIGdvdCB0aHJvdWdoIGl0LCBhbmQgSSBlbmpveSBsZWFybmluZyBtb3JlIGFib3V0IGFjY291bnRzIGFuZCBob3cgdG8gYmFsYW5jZSB0aGVtLiAKSSBmb3Jnb3QgYWxsIGFib3V0IGl0IHVudGlsIG5vdy4gSSBjYW4ndCBpbWFnaW5lIGhvdyBoYXJkIHRoYXQgbWlnaHQndmUgYmVlbiBmb3Igc29tZW9uZSBpbiBkaWZmZXJlbnQgY2lyY3Vtc3RhbmNlcywgd2l0aG91dCB0aGUgYW5zd2VycyB0aGF0IGNhc2hpZXIgd2FudGVkLiBJIHN0aWxsIGRvbid0IGtub3cgd2hldGhlciB0aGUgY2FzaGllciBoYWQgYW55IHJpZ2h0IHRvIGFzayBtZSBhbnkgb2YgdGhvc2UgcXVlc3Rpb25zIChJJ20gZ3Vlc3Npbmcgbm90KSwgYnV0IGhlIHN1cmUgYWN0ZWQgbGlrZSBpdCB3YXMgaGlzIGpvYiB0byBzY3JlZW4gbWUuLiAKUmVnaXN0cmF0aW9uIGlzIGEgYnJlZXplLCBhbmQgd2l0aGluIG1pbnV0ZXMgeW91IGNhbiBiZSBwYXJ0aWNpcGF0aW5nIGluIGNhc2ggdGFibGVzIGFuZCBvbmxpbmUgdG91cm5hbWVudHMuIFRoZSB0b3VybmFtZW50cyBhcmUgcmVhbGx5IGdyZWF0LiAKUmF0aGVyLCBpdCBpcyBhIGdsb2JhbCBzeXN0ZW0gdGhhdCBjb250YWlucyByYXRoZXIgdGhhbiBzb2x2ZXMgcHJvYmxlbXMuIApJIGEgZnVsbCB0aW1lIHN0dWRlbnQsIEkgd29yayAyMmlzaCBob3VycyBhIHdlZWssIGhhdmUgYSBob21lIGFuZCBhIG1hcnJpYWdlIHRvIGtlZXAgcnVubmluZyBhbmQgY29va2luZyBvciBwcmVwYXJpbmcgTEVTUyBmb29kIGRvZXNuIGFkZCB0aW1lIHRvIG15IGRheS4gSSBsaXZlZCBpbiBteSBiYWdneSBjbG90aGVzIGFuZCBzdGlsbCB3ZWFyIHNvbWUgc2hpcnRzIGJlY2F1c2UgdGhleSBzdGlsbCBnb29kLiAKSW4gc29tZSBjb3VudHJpZXMgaXQgaXMgbGVnYWwsIHdoaWxlIG5vdCBpbiBvdGhlcnMuIApUaGVyZSBpcyBzb21ldGhpbmcgSSBsaWtlIHRvIHBvaW50IG91dCB3aGljaCBJIGZpbmQgZnVubnkuLiAKVGhlIGR1cmlhbCBzdG9yeSBpcyBmdW4gdG9vLiBJbiAyMDA2LCBhIGd1eSBjZWxlYnJhdGVkIDk5IGNvbiwgYnV0IHRoZXJlIHdhcyBhIGJ1Zy4gSWYgaGUga2lja2VkIHlvdSBvdXQgb2YgaGlzIGhvdXNlLCB3aGlsZSB5b3UgaW4gYSBQVlAgYXJlYSBpbnNpZGUsIHlvdSBjb3VsZCBhdHRhY2sgb3RoZXIgcGxheWVycyBvdXRzaWRlIG9mIHRoZSB3aWxkZXJuZXNzLiAKTXkgZHZyIGlzIG5vdCByZWFkeSFJJ3ZlIHdhdGNoZWQgc28gbXVjaCBJIGZlZWwgbGlrZSBJJ20gaG90IGdsdWluZyBhbmQgc2V3aW5nIGluIG15IHNsZWVwLCB0ZWxsaW5nIG15IGNhdHMgdG8gc2FzaGF5IHlvdSBzdGF5IGFuZCBzYXNoYXkgeW91IGdvLiBJIGhhdmUgYXNzaWduZWQgdGhlbSB0aGUgZHJhZyBuYW1lcyBvZiBUaGUgSXJpZGVzY2VudCBUYWJzdGVyIGFuZCBMYWR5IFRvb3QgVG9vdC4gSXQncyB0YWtlbiBtZSBhIHdoaWxlLCBidXQgSSByZWFsaXplZCBNb25pcXVlIEhlYXJ0J3Mgdm9pY2UgYW5kIGluZmxlY3Rpb25zIHNvdW5kIHZlcnkgbXVjaCBsaWtlIFdlc2xleSBTbmlwZXMgaW4gV29uZyBGb28uSSB0aGluayB0aGUgcHJvYmxlbSBpcyB0aGF0IHRoZXkodGhlIHByb2R1Y2VycykgZG9uIHB1dCBlbm91Z2ggYWN0dWFsIHRob3VnaHQgYW5kIHByZXBhcmF0aW9uIGludG8gdGhlIGFjdGluZyBjaGFsbGVuZ2VzIHRvIHB1bGwgdGhlbSBvZmYuIApJZiBhbmQgd2hlbiB0aGlzIGV2ZXIgaGFwcGVucyB0byBPUCBhZ2FpbiwgT1AgTkVFRFMgdG8gc2F5ICJuby4gClR3byBmZWV0IGJlbG93IHlvdTsgdGFrZSB0aGUgcG9rZXIgZnJvbSB0aGUgZmlyZXBsYWNlIGFuZCBzdHJpa2UgdGhyZWUgdGltZXMgb24gdGhlIGZsb29yLiBWaWV3IGluIGNvbnRleHQKQnJpZGdlOiBUaGUgYnJpZGdlIGlzIGEgYmFzaWMgbW92ZW1lbnQgd2hlcmUgeW91IGxheSBvbiB0aGUgZmxvb3Igd2l0aCB5b3VyIGtuZWVzIGJlbnQgYW5kIGZlZXQgZmxhdCBvbiB0aGUgZ3JvdW5kIGFuZCB0aGVuIHJhaXNlIHlvdXIgaGlwcyBvZmYgdGhlIGdyb3VuZCB1bnRpbCB5b3VyIGJvZHkgZm9ybXMgYSBzdHJhaWdodCBsaW5lIGZyb20gc2hvdWxkZXIgdG8ga25lZS4gVGhlcmUgYXJlIG11bHRpcGxlIHZhcmlhdGlvbnMgdGhhdCBjYW4gYmUgcGVyZm9ybWVkIG9uIHRoZSBiYWxsLi4gCkEgcHVibGljIGhlYWx0aCBhcHByb2FjaCBlbXBoYXNpc2VzIHByZXZlbnRpb24sIGl0IGNlcnRhaW5seSBwcm92aWRlcyBzdXBwb3J0IGZvciBwZW9wbGUgd2hvIGRvIGhhdmUgcHJvYmxlbXMsIGJ1dCB0aGUgZW1waGFzaXMgc2hvdWxkIGJlIG9uIHByZXZlbnRpb24uIEEgZ29vZCBwdWJsaWMgaGVhbHRoIGFwcHJvYWNoIHdvdWxkIGZpcnN0IG9mIGFsbCBjb250cm9sIHRoZSBzdXBwbHkgb2YgdGhlIHByb2R1Y3QsIGxpa2UgZHJ1Z3Mgb3IgYWxjb2hvbCwgYW5kIGl0IHdvdWxkIGFsc28gcmVndWxhdGUgb3IgbWFuYWdlIHRoZSBkZW1hbmQgZm9yIHRoZSBwcm9kdWN0LiAKRm9yIHBlb3BsZSB3aG8gbGlrZSB0byB0aHJvdyBhcm91bmQgdGhlIHdvcmQgImJpZ290IiBldmVyeSBmaXZlIG1pbnV0ZXMsIHRoZXkgcHJldHR5IGJpZyBvbmVzIHRoZW1zZWx2ZXMuIApJdCBkb2VzIG5vdCBtYXR0ZXIgaG93IHNtYWxsIHRoZSBjaXJjbGVzIGFyZSwgdGhleSB3aWxsIGluY3JlYXNlIG92ZXIgdGltZS4gSWYgeW91IGFyZSB1bmFibGUgdG8gc3RhcnQgd2l0aCBjaXJjbGVzLCBzdGFydCB2ZXJ5IHNsb3dseSBtb3ZpbmcgeW91ciBoZWFkIGZyb20gc2lkZSB0byBzaWRlLCBhZ2FpbiBqdXN0IGluIGEgcGFpbiBmcmVlIHJhbmdlIG9mIG1vdGlvbjsgZG8gbm90IHB1c2ggaXQgdG8gdGhlIHBvaW50IHdoZXJlIGl0IGh1cnRzLiAKTidheWFudCBwYXMgZmFpdCBnYWZmZSBqJ2FpIGNydSAgdW5lICJydmxhdGlvbiIgZGF0YW50IGRlIDIgbW9pcyAodm9pciBsZSBwcmVtaWVyIHRpdHJlKS4gRW4gZmFpdCBsYSBzaXR1YXRpb24gZXN0IGNsYWlyZSA6IENhc2Fzbm92YXMgYydlc3QgY29tbWUgcydpbCBuJ2F2YWl0IGphbWFpcyBleGlzdC4gTGUgdG1vaWduYWdlIHZpZW50IGQndW4gbWRlY2luIHF1aSBhIHB1IHNlIHBhc3NlciBkZSBMZXZvdGh5cm94LiBKZSBzYXZhaXMgcXVlIHBsYW50ZXIgc29uIGN1bCBzdXIgdW5lIGNoYWlzZSBjJ3RhaXQgcGFzc2VyIHVuZSBoZXVyZSBwb3VyIGRjb3V2cmlyIHF1J2VsbGUgYXVyYWl0IGZhaXQgbGUgcmdpbWUgZGUgU2VpZ25hbGV0LiAKVGhlIGdpcmwgd2FzIHZlcnkgc3dlZXQgYW5kIHdlIHRhbGtlZCBzb21lIGFuZCBJIGZlbGwgaW4gbG92ZSwgbm90IHdpdGggYSBzdHJpcHBlciwgYnV0IGEgaG9va2VyLiAKT2J2aW91c2x5IGNvdW50cmllcyBoYXRlIHVzLiBCdXQgaXRzIG5vdCByZWFsbHkgdG8gc2NhbGUgd2l0aCB0aGUgaGF0ZSBvZiB0aGUgUGFsZXN0aW5pYW5zIGFuZCBJc3JhZWxpcy4gSSByZWFsbHkgaGF2ZSBubyBjbHVlIHdoYXQgeW91IGFyZSB0YWxraW5nIGFib3V0IGluIHNheWluZyB3ZSBhcmUgdGF1Z2h0IHRvIGhhdGUgQW1lcmljYS4gVGhhdCBsaXRlcmFsbHkgYSByaWRpY3Vsb3VzIHN0YXRlbWVudCBvZiBoeXBlcmJvbGUuIE9idmlvdXNseSB5b3Ugbm90IGEgYmlnIGZhbiBvZiBoaXN0b3J5IGNsYXNzZXMgd2hpY2ggdGFsayBhYm91dCB0aGUgdHJ1dGggYW5kIG5vdGhpbmcgYnV0IHRoZSB0cnV0aC4gV291bGQgeW91IHJhdGhlciBoYXZlIHByb3BhZ2FuZGEgY2xhc3NlcyB3aGljaCBlbGltaW5hdGUgQW1lcmljYSBnZW5vY2lkZSBvZiB0aGUgTmF0aXZlIEFtZXJpY2FucywgZG9uIGRpc2N1c3MgQW1lcmljYSByZWZ1c2FsIHRvIGhlbHAgSG9sb2NhdXN0IHZpY3RpbXMsIGFuZCBjZWFzZSBzcGVha2luZyBhYm91dCB0aGUgaW5zdGl0dXRpb24gb2Ygc2xhdmVyeT8KSSdtIG5vdCBhIG1lZGljYWwgZG9jdG9yIG9yIHNvbWVvbmUgd2hvc2UgbGluZSBvZiB3b3JrIGV2ZXIgaW52b2x2ZXMgY3JpbWUgc2NlbmVzLCBidXQgSSB0aGluayB3aGVuIHRoZXkgb3JpZ2luYWxseSByZWxlYXNlZCB0aGF0IGluZm9ybWF0aW9uLCB0aGV5IHNhaWQgdGhhdCB0aGUgQkFDIHdhcyBoaWdoIGV2ZW4gZm9yIGRlY29tcG9zaXRpb24gKGluZGljYXRpbmcgdGhlIHRpbmllc3QgYW1vdW50IG9mIGRvdWJ0KS4gSSByZWFkIGEgc2NpZW50aWZpYyBhcnRpY2xlIHRoYXQgc2FpZCB0aGVyZSBpcyBub3QgYWx3YXlzIGFsY29ob2wgcHJlc2VudCBpbiBhIHN0b21hY2ggYmVjYXVzZSBvZiBkZWNvbXBvc2l0aW9uLCBidXQgc29tZSBmYWN0b3JzLCBsaWtlIGV4cG9zdXJlIHRvIGV4dHJlbWUgaGVhdCwgd2VyZSBtb3JlIGxpa2VseSB0byBjYXVzZSBhIHBvc3QgbW9ydGVtIGhpZ2ggQkFDLiBTbywgcGVyc29uYWxseSwgSSBiZWxpZXZlIHRoYXQgaXQgd2FzIGp1c3QgZGVjb21wb3NpdGlvbiwgYnV0IEkgZG9uJ3QgdGhpbmsgaXQncyB0aGF0IGNyYXp5IHRvIHNwZWN1bGF0ZSB0aGF0IGl0IG1heSBoYXZlIGJlZW4gYmVjYXVzZSBzaGUgZHJhbmsgYWxjb2hvbC4gClBldGUgaGFkIHNvbWUgbW9yZSB0ZXN0cyB0b2RheSAgIEkgbXVzdCBzYXksIHRoZSBzdGFmZiBhcmUgdmVyeSB0aG9yb3VnaC4gClNoZSBoYWQgdG8gbWFrZSBhIGRlY2lzaW9uLgpBcyBhIHJhcHBlciwgc2hlIHJlbGVhc2VkICJJbiBGaW5hIFdlIFRydXN0LCIgYWZ0ZXIgeWVhcnMgb2YgbWFraW5nIHByb2ZhbmUgYW5kIGhpbGFyaW91cyB2aXJhbCByYXAgdmlkZW9zIGluIGhlciB0cmFkZW1hcmsgcmFzcHkgdm9pY2UuIE9uZSBlYXJseSBoaXQsICJNeSBWYWcsIiB3YXMgYW4gb2RlIHRvIGhlciBmZW1hbGUgYW5hdG9teSBhbmQgYSByZXNwb25zZSB0byBNaWNrZXkgQXZhbG9uJ3MgIk15IERpY2suIiBJdCBpbmNsdWRlZCB0aGUgbHlyaWNzOi4gCkphY2UgQWdvbGxpLCBhIDIzIHllYXIgb2xkIHBlcnNvbmFsIHRyYWluZXIgY3VycmVudGx5IHJlc2lkaW5nIGluIFZlbmljZSBCZWFjaCwgQ2FsaWYuCllvdXIgZmVldCBhcmUgYSB3aG9sZSBsb3QgZmFyIG1vcmUgc2Vuc2l0aXZlIHRoYW4gdGhleSBhcHBlYXIuIApUaGUgc3Rvcnkgb2Ygb3VyIHJlbGF0aW9uc2hpcCB3YXMgYSB2ZXJ5IGJhZC4gSSBrbm93IHRoYXQuIEJ1dCBteSBmaWFuYyBpcyBhbiBhbWF6aW5nIG1hbiwgaGUncyBoZWxwZWQgbWUgc28gbXVjaCBpbiBteSBsaWZlLiBJJ3ZlIGJlZW4gYWJhbmRvbmVkIGJ5IGV2ZXJ5IHNpbmdsZSBwZXJzb24gaW4gbXkgZmFtaWx5IGluIGEgbXVsdGl0dWRlIG9mIHdheXMuIEkgY3VycmVudGx5IGxpdmUgaW4gbXkgY2hpbGRob29kIGhvbWUgYnkgbXlzZWxmIHRoYXQgSSBkbyBub3QgaGF2ZSB0aGUgbW9uZXkgdG8gcmVwYWlyIG15c2VsZi4gSSBiYXJlbHkgaGF2ZSBlbm91Z2ggbW9uZXkgZXZlcnkgbW9udGggdG8gcGF5IGZvciBteSBjYXIgaW5zdXJhbmNlLCBwaG9uZSBiaWxsLCBldGMuIE15IGZpYW5jIGhhcyBoZWxwZWQgbWUgc28gbXVjaCBieSBnaXZpbmcgbWUgbW9uZXksIGFuZCBoZSBrZXB0IG1lIHN0cm9uZyB3aGVuIGV2ZXJ5IG90aGVyIHBlcnNvbiBpbiBteSBmYW1pbHkgc3RvcHBlZCBjYXJpbmcgYWJvdXQgbWUuCkkgbWVhbiBpZiB5b3Ugc3VkZGVuZGx5IGRlY2lkZWQgdG8gZ28gaW4gYSBtaW5pIHNraXJ0IGFuZCBicmEsIHBpc3NlZCBkcnVuayBhdCAyQU0gaW4gYSBiYWQgcGFydCBvZiB0b3duIHRoZW4gbWF5YmUgeW91IHNob3VsZCBoYXZlIGJlZW4gYSBiaXQgbW9yZSBjYXJlZnVsLiBOb3QgdGhhdCB5b3UgZGlkbiBoYXZlIGFueSByaWdodCB0byBkbyB0aGF0LiBJbiBhIGdvb2Qgd29ybGQgaXQgd291bGQgaGF2ZSBiZWVuIHBlcmZlY3RseSBzYWZlIGFuZCBmaW5lIGJ1dCBjb21tb24gc2Vuc2UgYW5kIGV2ZXJ5dGhpbmcuIApKYW5ldGpveG8gIDQgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpSYW5kb21Bbm5hbiAgMjggcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpCdXQgeWVzLCBpbiB0aGUgc2Vuc2UgdGhhdCBwZW9wbGUgd2hvIGhhdmUgYmVlbiBoYXZpbmcgYSByZWFsbHkgaGFyZCB0aW1lIGZvciBhIHdoaWxlIGFuZCBhcmUgdW5oYXBweSBidXQgdGhpbmsgdGhpcyBpcyBqdXN0IGhvdyB0aGluZ3MgYXJlIHJlYWxpemUgdGhhdCBub3QgbmVjZXNzYXJpbHkgdHJ1ZS4gCkNvcHMgaWxsZWdhbGx5IGRldGFpbiBwZW9wbGUgYWxsIHRoZSB0aW1lIGFuZCBpZiB5b3UgYXJlIHJlbGVhc2VkIGJlY2F1c2UgdGhleSBkZXRhaW5lZCB5b3UgaWxsZWdhbGx5IHlvdSBzdGlsbCBoYWQgdG8gc2l0IGluIGphaWwgZm9yIDI0IGhvdXJzLiAKVGhlIG1vc3QgaW1wb3J0YW50IGNyaXRlcmlvbiBpcyB0aGUgZW50aXR5IHRoYXQgb3BlcmF0ZXMgdGhlIEF1c3RyaWFuIG9ubGluZSBjYXNpbm8uIElmIHRoZSBvd25lciBpcyBhYm92ZSBib2FyZCB0aGVuIGV2ZXJ5dGhpbmcgZWxzZSBzaG91bGQgZm9sbG93LiBJZiB5b3UgaGF2ZSBsaWtlZCBvbmUgb25saW5lIGNhc2lubywgdGhlbiB0aGUgb3RoZXIgYnJhbmRzIGZyb20gdGhlIHNhbWUgZ3JvdXAgd2lsbCBiZSB3b3J0aCBsb29raW5nIGF0LiBVbmZvcnR1bmF0ZWx5IHRoZXJlIGlzIG5vIHN0YW5kYXJkIHByYWN0aWNlIGZvciBsb2NhdGluZyB0aGUgbmFtZSBvZiB0aGUgb3duZXIgYXQgdGhlIG9ubGluZSBjYXNpbm8gd2Vic2l0ZS4gSXQgaXMgb2Z0ZW4gZ2l2ZW4gYXQgdGhlIGJvdHRvbSBvZiB0aGUgaG9tZSBwYWdlLiBZb3UgY2FuIGFsc28gbG9vayBmb3IgaXQgaW4gdGhlIEFib3V0IFVzIG9yIEZBUSBwYWdlLgpOaXRlZXNoIENob3VkaHJ5LCBNRCwgUGhEIEhhcnZhcmQgTWVkaWNhbCBTY2hvb2wKTm8gb25lIGFyZ3VlcyB0aGF0IHRoaXMgZ2FtZSBpc24ndCBwYXJ0IGx1Y2sgYW5kIHBhcnQgc2tpbGwgb25seSBob3cgbXVjaCBvZiBlYWNoIGlzIGludm9sdmVkLiBvbiBUdWVzZGF5IGFuZCBwaXR0ZWQgdGhlIHVuYXNzdW1pbmcgTW9vbiBhZ2FpbnN0IHRoZSBjYWxjdWxhdGluZyBDYWRhIHdhcyBhcHJvcG9zLiBDYWRhLCBmcm9tIHRoZSBEZXRyb2l0IGFyZWEsIHJpc2tlZCBhbGllbmF0aW9uIGZyb20gaGlzIHBhcmVudHMgdG8gcGFydGljaXBhdGUuIEhlIGN1dCBoaXMgcG9rZXIgdGVldGggaW4gb25saW5lIHBsYXkgYXMgYSB0ZWVuYWdlcjsgYWdhaW5zdCBoaXMgcGFyZW50cycgd2lsbCwgaGUgcXVpdCBjb2xsZWdlIHRvIHBsYXkgY2FyZHMgZm9yIGEgbGl2aW5nLiBCdXQgaGUgc29vbiB3b24gZW5vdWdoIHRvIHBheSBjYXNoIGZvciBoaXMgaG91c2UgYW5kIG1hbmFnZWQgdG8gcmVjb25jaWxlIHdpdGggTW9tIGFuZCBEYWQsIHdobyB3ZXJlIGluIExhcyBWZWdhcyB0byBjaGVlciBoaW0gb24uIChSZWFkICJBcmUgUGVvcGxlIEdhbWJsaW5nIExlc3M/IikKQ2FzaW5vcyB0eXBpY2FsbHkgb25seSB1c2UgcG9rZXIgY2hpcHMgdGhhdCBhcmUgMzltbSBhcyBmYXIgYXMgZGlhbWV0ZXIuIApUaGV5IHdvcnJ5IGFib3V0IGltbWlncmFudHMgY3Jvc3NpbmcgdGhlIGJvcmRlciwgYnV0IG5vdCBhYm91dCBSdXNzaWEgaW52YWRpbmcgQ3JpbWVhIGFuZCBVa3JhaW5lLiBUaGV5IHdvcnJ5IGFib3V0IGRydWdzIGFjcm9zcyB0aGUgc291dGhlcm4gYm9yZGVyLCBidXQgbm90IHRocm91Z2ggc2VhcG9ydHMuIEdvc2gsIHdoYXQgYSBjb25mdXNpbmcgbWF0cml4IG9mIGdvb29ibHkgZ29vcC4gCklmIHlvdXIgcGxhbiBpcyBpbGwgZ2V0IGEgYm9udXMgZnJvbSBoYXZpbmcgYSBraWQgZnJvbSB0aGUgZ292ZXJubWVudCwgb3IgbXkgbGlmZSB3aWxsIHN0YWJsZSBvdXQgb25jZSBJIGhhdmUgYSBraWQsIG9yIEkgbmV2ZXIgbmVlZCB0byBtb3ZlIHVwIGltIG15IGpvYiBhbmQgSSBoYXBweSByZW50aW5nIGFuIGFwYXJ0bWVudC4gWW91IHNob3VsZCBnZXQgeW91ciBzaGl0IHRvZ2V0aGVyIGJlZm9yZSBoYXZpbmcgYSBraWQuIApUaGVpciBkb2cgYmFya2VkIGFsbCBmdWNraW5nIGRheSBhbmQgbmlnaHQuIEFuZCB0aGV5IHdlcmUganVzdCBydWRlLiBJdCB3YXMgc3VjaCBhIGpveW91cyBkYXkgd2hlbiB0aGV5IG1vdmVkIG91dCB0d28geWVhcnMgbGF0ZXIuLiAKRmluZCB0aGUgc2l0ZSBwdWJsaXNoZXIuIExvb2sgd2hvIGJhY2tzIHRoZSBwdWJsaXNoZXIgYW5kIHlvdSBmaW5kIG91dCB3aG8gZ2V0cyBjaG9zZW4gZm9yIGFueSBvZiB1cyB0byB2b3RlIGZvci4gVGhlIGRlbXMgYXJlIG5vdyB0ZWxsaW5nIHlvdSBob3cgdGhlIHJlcHVibGljYW4gZ2V0IGNob3NlbiB0byBydW4uIApTbyBJIHN3ZWF0aW5nIFZpbGxhaW4gaGFyZC4gCkJlZW4gcGxheWluZyBsaXZlIGZvciA0IDUgeWVhcnMgYW5kIHRoZXJlIFdJTEwgYmUgdGltZXMgd2hlcmUgaGUgZmxpcHMgb3ZlciBBQS4gaXQgc3Vja3MgYW5kIGl0cyBwYXJ0IG9mIHRoZSBnYW1lLiBnZXR0aW5nIHN0YWNrZWQgS0t2QUEgaXMgaW1tZW5zZWx5IHRpbHRpbmcuClNvIHdoeSB0aGUgYW5nc3Q/IElzIGl0IGJlY2F1c2Ugb2YgdGhlIFdvcmxkIFBva2VyIFRvdXIgY292ZXJhZ2Ugb24gdGhlIFRyYXZlbCBDaGFubmVsIHdoZXJlIHNvIG1hbnkgb2YgdGhlIG5ldyBwbGF5ZXJzIHRvZGF5IHNhdyBhbmQgYmVjYW1lIGluZmF0dWF0ZWQgd2l0aCBuYW1lcyBsaWtlIFBoaWwgSXZleSBhbmQgSG93YXJkIExlZGVyZXIgYW5kIGp1c3QgY2FuJ3Qgc3RhbmQgd2F0Y2hpbmcgdGhlaXIgImhvcnNlIiBsb3NlPwpUaWdlcnMgU2lnbiBQaXJhdGUgRnJlZSBBZ2VudCBIYXJyaXNvbkZyZWUgYWdlbnQgSm9zaCBIYXJyaXNvbiBoYXMgYWdyZWVkIHRvIGEgb25lIHllYXIgZGVhbCB3aXRoIHRoZSBEZXRyb2l0IFRpZ2VycywgYWNjb3JkaW5nIHRvIGEgcGVyc29uIGZhbWlsaWFyIHdpdGggdGhlIG5lZ290aWF0aW9ucy4KSWYgc2hlIGNvbnRyaWJ1dGVzICQ1MDAgcGVyIG1vbnRoIG1hdGNoZWQgYnkgaGVyIGVtcGxveWVyLCB0b3RhbCAkMSwwMDAgcGVyIG1vbnRoLCB0aGUgJDU5LDAwMCBhbHJlYWR5IGluIHRoZSBwbGFuIGdyb3dpbmcgYXQgMyBwZXIgY2VudCBhZnRlciBpbmZsYXRpb24gd2lsbCByaXNlIHRvICQ0MjksMDAwIGluIDIwIHllYXJzIGF0IGhlciBhZ2UgNTcuIFRoYXQgc3VtLCBzdGlsbCBncm93aW5nIGF0IHRocmVlIHBlciBjZW50IHBlciB5ZWFyIGFmdGVyIGluZmxhdGlvbiBhbmQgc3BlbnQgb3ZlciB0aGUgbmV4dCAzMyB5ZWFycyB0byBoZXIgYWdlIDkwIHdvdWxkIGdlbmVyYXRlICQyMCw2NjAgcGVyIHllYXIgaW4gMjAxOSBkb2xsYXJzLi4gClNvIHNlcmlvdXNseSBkb2VzIHRoZSBSdXNzaWFuIGxlYWRlciB0YWtlIHRoaXMgcmVzcG9uc2liaWxpdHkgdGhhdCBoZSBoYXMgYmVlbiBsZWN0dXJpbmcgQW1lcmljYSBvbiB0aGUgc3ViamVjdCwgaW4gaXRzIG93biBuZXdzcGFwZXIgb2YgcmVjb3JkLiAKVG8gZ2V0IHNvbWV3aGF0IG9mIGEgZ2F1Z2Ugb24gdGhlIG5hdGlvbmFsIG1pbmRzZXQgZnJvbSB0aGUgd2F5IHBlb3BsZSBwdW5jaCBlYWNoIG90aGVyIGlzIHJlYWxseSBhbWF6aW5nLiIuIApPdmVydmlldyBmb3IgS2FybWF0aWNBcm1hZ2VkZG9uCllvdSBjb3VsZCBhbHNvIGhhdmUgdGhlIG9wdGlvbiB0byBjcmVhdGUgeW91ciBvd24gcHJpdmF0ZSB0YWJsZSB0aHVzIG1ha2luZyB5b3UgZmVlbCByaWNoIGFuZCBwb3dlcmZ1bC4gCklzIHRoaXMgcmVmZXJyaW5nIG1vcmUgdG8gc2hhcmQgc3luYy9lYXNlIG9mIHVzZSByYXRoZXIgdGhhbiBhbiBhY3R1YWwgcG93ZXIgaW5jcmVhc2UgUUEgaGVscGluZyBTa2l0dGVyIHN1YmNvbnNjaW91c2x5IGRvZGdlIGF0dGFja3Mgd2l0aCBoZXIgY2xvbmVzLCBhcyBvcHBvc2VkIHRvIFFBIGluY3JlYXNpbmcgaGVyIHJhbmdlPy4gCkhlciBmcnVzdHJhdGlvbi4gSSB0aG91Z2h0IEkgYmVlbiBhIGdyZWF0IHBhcmVudCBhbmQgd2FzIGZydXN0cmF0ZWQgdGhhdCBteSBzb24gd2FzIGRvaW5nIHRoaXMgdG8gaGltc2VsZi4gQWx0aG91Z2ggSSBuZXZlciB3aGlwcGVkIG15IHNvbiBJIHdhbnRlZCB0by4gClNoZSBzbWlsZWQgYXQgbWUsIHNhaWQgaGVsbG8gdG8gREQgYXBwcm9wcmlhdGVseSBhbmQgSSBkaWRuJ3Qgc2VlIGhlciBmb3IgdGhlIHJlbWFpbmluZyA0MCBtaW51dGVzLCBzaGUgc3RheWVkIGluIGEgZGlmZmVyZW50IHJvb20sIHlvdW5nZXIgU0lMIGlnbm9yZWQgbWUuIApJdCdzIHRpbWUgYWdhaW4gZm9yIHRoZSBoaWdoIHNjaG9vbCBnaXJscyBzb2NjZXIgc2Vhc29uLCB3aGVyZSBzb21lIG9mIHRoZSBiZXN0IHBsYXllcnMgaW4gdGhlIHN0YXRlIHdpbGwgdGFrZSB0aGUgcGl0Y2ggYW5kIGRvbiB0aGVpciBzY2hvb2wgY29sb3JzIHdpdGggcHJpZGUuCjEgcG9pbnQgIHN1Ym1pdHRlZCA3IGRheXMgYWdvClRvdWNoOiBDb2R5IHJvb21tYXRlcyBzaXN0ZXIgaXMgYSBtYXNzYWdlIHRoZXJhcGlzdCBhbmQgZG9lcyBkZWVwIHRpc3N1ZSBtYXNzYWdlcy4gSSBjb250YWN0ZWQgaGVyIGFuZCBhc2tlZCB0byBwdXJjaGFzZSBhIGdpZnQgY2VydGlmaWNhdGUuIElyb25pY2FsbHksIGFmdGVyIEkgaGFkIG1hZGUgYXJyYW5nZW1lbnRzIHRvIGdldCB0aGUgZ2lmdCBjZXJ0LCBoZSBjb21wbGFpbmVkIHRvIG1lIGFib3V0IGhpcyBiYWNrLiBDYW4geW91IHNheSBwZXJmZWN0IHRpbWluZz8KWnluZ2EsIG9mIGNvdXJzZSwgaXMgdGhlIGdhbWUgbWFrZXIgdGhhdCBjcmVhdGVkIHN1Y2ggd2lsZGx5IHBvcHVsYXIgRmFjZWJvb2sgZ2FtZXMgYXMgRmFybVZpbGxlIGFuZCBDaXR5VmlsbGUsIGFzIHdlbGwgYXMgWnluZ2EgUG9rZXIgYW5kIFdvcmRzIFdpdGggRnJpZW5kcy4gSXQgdGhlIGJyYWluY2hpbGQgb2YgTWFyayBQaW5jdXMsIHdobyBmb3VuZGVkIHRoZSBjb21wYW55IGFmdGVyIHN0YXJ0aW5nIGhpcyBjYXJlZXIgaW4gZmluYW5jZSBhbmQgYXR0ZW5kaW5nIEhhcnZhcmQgQnVzaW5lc3MgU2Nob29sLiBIZSBuYW1lZCBpdCBhZnRlciBoaXMgbGF0ZSBiZWxvdmVkIGJ1bGxkb2csIFppbmdhLi4gCkNhbGwgdGhlIHBvbGljZS4gClRoZW4sIGFmdGVyIGxheWluZyBhIHRvdWNoIGZ1cnRoZXIgYmFjayB0aGFuIGhpcyBwbGF5aW5nIHBhcnRuZXJzIGF0IHRoZSBzaG9ydCBzZWNvbmQsIGhlIHBsYXllZCBhIGJlYXV0aWZ1bCBsb3cgc3Bpbm5pbmcgd2VkZ2UgZm9ybSA1MCB5YXJkcyB0aGF0IGJpdCBoYXJkIGFuZCBzdG9wcGVkIHR3byBmZWV0IGZyb20gdGhlIGhvbGUgZW4gcm91dGUgdG8gaGlzIHNpeHRoIGJpcmRpZSBvZiB0aGUgZGF5LiAKMTkpICJUaGUgcHJlc2VuY2Ugb2YgdGhlc2UgbmV1cmFsIGVsZW1lbnRzIHdpdGhpbiB0aGUgbnVjbGV1cyBwdWxwb3N1cyB3YXMgYSBmZWF0dXJlIG9ubHkgb2YgaW50ZXJ2ZXJ0ZWJyYWwgZGlzY3MgZnJvbSB0aGUgcGFpbiBsZXZlbC4iClNlcyByZWxhdGlvbnMgYXZlYyBsZSBwcnNpZGVudCBkZSBsYSBScHVibGlxdWUgZXQgZG9uYyBhdmVjIExSRU0gcmVzdGVudCBmbG91ZXMuIApUaGUgZm91ciBkYXkgQ0VTIHNob3cgb3BlbnMgVHVlc2RheSwgdGhvdWdoIG1lZGlhIHByZXZpZXdzIGJlZ2luIFN1bmRheS4gVHJhbnNwb3J0YXRpb24gU2VjdXJpdHkgRWxhaW5lIENoYW8uIFRoZSBlbnRpcmUgZmVhdHVyZWQgc3BlYWtlciBsaXN0IGlzIGN1cnJlbnRseSBoYWxmIGZlbWFsZSwgYWx0aG91Z2ggdGhlIGV4YWN0IHBlcmNlbnRhZ2Ugd29uJ3QgYmUga25vd24gdW50aWwgYWZ0ZXIgdGhlIGV2ZW50LiAKQSBnb29kIHBva2VyIGNhbGN1bGF0b3IgaGFzIHRvIGJlIHRoYXQgc2ltcGxlLi4gCkZpcnN0IG9mZiwgbXkgZW50aXJlIHBvaW50IGFib3V0IGRlZ3JlZXMgc2VlbWVkIHRvIGdvIG92ZXIgeW91ciBoZWFkLiBIYXZpbmcgYSBkZWdyZWUgKG9yIG1hc3RlcnMpIGRvZXNuJ3QgbWVhbiB0aGF0IHBlcnNvbiBoYXMgYW55IG1vcmUgY2x1ZSBhYm91dCB3aGF0J3MgcmVhbGx5IGdvaW5nIG9uLlNlY29uZCwgYWxtb3N0IG5vIGNvbnNlcnZhdGl2ZXMvcmVwdWJsaWNhbnMgZG9uJ3QgYmVsaWV2ZSBpbiBzY2llbmNlIG9yIGluIGNsaW1hdGUgY2hhbmdlLiAKVGhlIFJhdmVud2luZyBlbGl0ZXMgYXJlIHRlcnJpZmljLiBJIGRvbiB1c2UgdGhlIENoYW1waW9uIHRoYXQgbXVjaCBidXQgd2hlbiBJIGNhbiBmaXQgaGltIGluIGhlIGRvZXMgZ3JlYXQgd29yay4gCkVhc3Rvbm8gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KU3VwcG9zZSB0aGUgcmF0cyBhcmUgZXV0aGFuaXplZCB3aGVuIHRoZWlyIGhlYWx0aCBzdGFydHMgdG8gZGV0ZXJpb3JhdGUsIHNvIHRoZXkgZ2V0IGNsb3NlIHRvIDEgUUFMWSBwZXIgeWVhci4gVGhpcyB3b3VsZCBjb3N0IGFib3V0ICQ1IHBlciByYXQgcGVyIG1vbnRoIHBsdXMgYW4gb3Bwb3J0dW5pdHkgY29zdCBvZiBtYXliZSAkNTAwIHBlciBtb250aCBmb3IgdGhlIHRpbWUgc3BlbnQsIHdoaWNoIHdvcmtzIG91dCB0byBhbm90aGVyICQ1IHBlciByYXQgcGVyIG1vbnRoLiAKSW4gZmFjdCwgdGhlcmUgYXJlIGV2ZW4gcGljdHVyZXMgb2YgVHJhY2UgQWRraW5zLCB3aG8gZGlkIGEgcGhvdG8gc2hvb3QgYXQgdGhlIGJhciwgYW5kIGFsc28gb25lIG9mIFRyYXZpcyBUcml0dCwgd2hvIGZpbG1lZCBhIG11c2ljIHZpZGVvIHRoZXJlIGFuZCBhbHNvIHRvb2sgcGhvdG8ncyB0aGF0IGFwcGVhcmVkIG9uIHRoZSBjb3ZlciBvZiBoaXMgMjAwNCBhbGJ1bSBjYWxsZWQgIk15IEhvbmt5IFRvbmsgSGlzdG9yeS4iIFRyYXZpcyB3YXMgcGhvdG9ncmFwaGVkIGxlYW5pbmcgb24gdGhlIHBvb2wgdGFibGUgZm9yIHRoYXQgYWxidW0gY292ZXIuLiAKV2Ugd291bGQgaGF2ZSBsb3ZlZCB0byBoYXZlIG9wZXJhdGVkIGxlZ2FsbHkgaW4gdGhlIFVTIGFuZCBwYXkgdGF4ZXMuIApKdXN0IGxpa2UgaG93IG5vdCBldmVyeW9uZSB3aG8gZW5qb3lzIG1ldGFsIGNvbnN0YW50bHkgd2VhcnMgYmFuZCBzaGlydHMsIGhhcyBsb25nIGhhaXIgYW5kIGhlYWRiYW5ncyBhbGwgdGhlIHRpbWUuIApJIHdvcmtlZCBoYXJkIGluIHNjaG9vbCwgcHV0IG15c2VsZiB0aHJvdWdoIHRvdWdoIGRlZ3JlZXMgYW5kIGJlY2FtZSBzbWFydCBhbmQgd2VsbCByZWFkLiAKSHVtYW4gdHJhZmZpY2tpbmcgaXMgYSBjcmltZSBpbnZvbHZpbmcgdGhlIGV4cGxvaXRhdGlvbiBvZiBzb21lb25lIGZvciB0aGUgcHVycG9zZXMgb2YgY29tcGVsbGVkIGxhYm9yIG9yIGEgY29tbWVyY2lhbCBzZXggYWN0IHRocm91Z2ggdGhlIHVzZSBvZiBmb3JjZSwgZnJhdWQsIG9yIGNvZXJjaW9uLiAKUGFzc2luZyBzZW50ZW5jZSBhbmQgcmVmZXJyaW5nIHRvIHRoZSBldmlkZW5jZSBvZiBhIGdpcmwgaGUgYWJ1c2VkIHRocmVlIHRpbWVzIGluIGhpcyBjYXIgSnVkZ2UgTG91aXNlIEthbWlsbCBzYWlkOiAiU2hlIG1hbmFnZWQgdW50aWwgcmVjZW50bHkgdG8gc3VwcHJlc3MgdGhlIHNoYW1lIHNoZSBmZWx0LCBidXQgc2hlIGhhZCB0byByZWxpdmUgaXQgaW4gdGhlIHdpdG5lc3MgYm94IGJlY2F1c2UgeW91IGRlbmllZCB0aGUgb2ZmZW5jZXMuCk1hc3NhZ2UgYXMgYSBoZWFsdGhjYXJlIHByb2Zlc3Npb24gaXNuIGFuIGlubmF0ZSBza2lsbC4gClRoZXkgaGF2ZSBzcGVudCB0aGVpciBtb25leSBpbiB3b25kZXJmdWwgYWx0cnVpc3RpYyB3YXlzLCBhbmQgYW55b25lIHdobyBzYXlzIG90aGVyd2lzZSBoYXNuIGJlZW4gcGF5aW5nIGF0dGVudGlvbi4KIkltcG9ydGFudGx5LCBub25lIG9mIHRoZSBhbGxlZ2F0aW9ucyBjb250YWluZWQgaW4gdGhlIGluZGljdG1lbnQgcmVsYXRlIHRvIE1zLiAKU1NEIHdvbid0IGdpdmUgYW55IGFkdmFudGFnZSBvdmVyIDcyMDAgUlBNcywgd2hpbGUgdGhlcmUgaXMgYSBsb3QgaW5mb3JtYXRpb24gZ29pbmcgb24gaXRzIGFsbCBzdXBlciBzbWFsbCBhbW91bnQgb2YgZGF0YS4gSSBtZWFuIGEgYnVkZHkgb2YgbWluZSB3aG8gcmVjZW50bHkgc3RvcHBlZCBwbGF5aW5nIG9ubGluZSBwb2tlciBmb3IgYSBsaXZpbmcgaGFkIG1pbGxpb25zIG9mIGhhbmRzIGluIGhpcyBkYXRhYmFzZSB3aGljaCB0b29rIHVwIG5vIG1vcmUgdGhhbiAyMEdCIEkgdGhpbmsgaGUgc2FpZC4gClRoZSByZXN1bHQgaXMgYSB3b3JsZCB3aGVyZSBSaWNrIFdhcnJlbiBjYW5ub3Qga2lsbCBnYXlzIGF0IGhvbWUsIGJ1dCBoZSBjYW4gdmlydHVhbGx5IGtpbGwgdGhlbSBpbiBVZ2FuZGEuIEEgcG9zdG1vZGVybiBzdG9yeSBvZiBwb2xpdGljcyBhbmQgZGVzaXJlcyBwbGF5ZWQgb3V0IG9uIGdheSBib2RpZXMgdGhhdCB3aWxsIHNvb24gYmUgZGVhZC4KV29tZW4gaW4gdGVjaG5vbG9neSBqb2JzIGFyZSBvdmVyd2hlbG1pbmdseSBvdXRudW1iZXJlZCBieSB0aGVpciBtYWxlIGNvdW50ZXJwYXJ0cy4gCkEgcmVnaW9uYWwgYXBwcm9hY2ggYWxzbyBpbnRlZ3JhdGVzIHRoZSBoZWFsdGggY2FyZSBuZWVkcyBvZiBhIGdyZWF0ZXIgcG9wdWxhdGlvbiBhbmQgZGVmaW5lcyB3aG8gd2UgYXJlIHRvIHRoZSBwcm92aW5jZSBhbmQgdGhlIG5hdGlvbi4uIApHb29kIEhlYWRhY2hlIGFydGljbGU6SGVhZGFjaGVzIE1pc3NpbmcgQW5hdG9taWNhbCBMaW5rIFN1cHBvcnRzIENoaXJvcHJhY3RpYyBUcmVhdG1lbnQuIAooSW4gY2FzZSB5b3UncmUgaW50ZXJlc3RlZCwgbmV3IGhpcmVzIGFyZSBjYWxsZWQgTm9vZ2xlcnM7IG9mZmljZSBkb2dzIGFyZSBEb29nbGVycywgYW5kIExHQlRRIHN0YWZmIG1lbWJlcnMgaGF2ZSBkdWJiZWQgdGhlbXNlbHZlcyBHYXlnbGVycy4pCldlIG1heSBjb250YWN0IHRoaXJkIHBhcnRpZXMgbWVudGlvbmVkIHdpdGhpbiB0aGUgZmlsZSBpbiBvcmRlciB0byBvYnRhaW4gY29uc2VudCB0byBkaXNjbG9zZSB0aGUgaW5mb3JtYXRpb24uIApQYXJ0IG9mIHRoZSBwcm9wb3NlZCBjb21wcm9taXNlIGJ5IHRoZSBzdGF0ZSBHYW1pbmcgQ29udHJvbCBCb2FyZCB3b3VsZCBhbGxvdyBldmVudHMgImF0IG5lYXJseSBhbnkgbG9jYXRpb24gaW4gdGhlIHN0YXRlLCBpbmNsdWRpbmcgYmFycywgY2h1cmNoZXMsIHNjaG9vbHMsIGZyYXRlcm5hbCBoYWxscywgY29tbXVuaXR5IGNlbnRlcnMsIG9yIG90aGVyIGxvY2F0aW9ucyIgYW5kIGFsbG93IGNoYXJpdGllcyBvciBhIGxpY2Vuc2VkIHN1cHBsaWVyIHRvIHJ1biBldmVudHMuLiAKUG9zdHMgZnJvbSBORVcgVVNFUlMgd2lsbCBhdXRvbWF0aWNhbGx5IGdvIHRvIFNQQU0uIEl0IHNlZW1zIGEgbG90IG9mIHJlZGRpdG9ycyB1c2UgdGhyb3dhd2F5IGFjY291bnRzIGZvciB0aGVpciB0YXggcXVlc3Rpb25zLCBzbyBpZiB5b3UgZG9uIHNlZSB5b3VyIHBvc3QgcmlnaHQgYXdheSwgdGhpcyBpcyB3aHkuIElmIHlvdXIgcG9zdCBkb2VzbiBzaG93IGFmdGVyIDYgaG91cnMsIG1lc3NhZ2UgdGhlIG1vZHMuIApHYWNvcmxleSAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28KQnV0IEkgYmUgc3VyZSB0byBtYWtlIGFub3RoZXIgZWRpdCBhbmQgcG9zdCB1cCBoZXJlIGEgZmV3IHJlY29tbWVuZGF0aW9ucyBpIHRoaW5rIG1pZ2h0IHN1aXQgYSBsb3Qgb2YgeW91IS4gClRoZXkgd2lsbCBzbGVlcCBpbiB0aGUgc2FtZSByb29tIHdoZXJlIHRoZXkgd29yayB0byBzYXZlIG1vbmV5IChhcyB0aGUgcm9vbXMgYXJlIHJlbnRlZCBieSB0aGUgZGF5KSwgYW5kIHRoZXkgZm9jdXMgb24gd29ya2luZyBhcyBtdWNoIGFzIHBvc3NpYmxlIHRvIG1heGltaXplIHdoYXQgdGhleSB0YWtlIGhvbWUuIFRoZXkgdXN1YWxseSBtYWtlIG1lIGZlZWwgd2VsY29tZSBhcyBhIGN1c3RvbWVyLCBoYXZlIGVtcGF0aHkgZm9yIG15IG1vdGl2YXRpb25zIGZvciBiZWluZyB0aGVyZSwgYW5kIHRyeSBnZW51aW5lbHkgaGFyZCB0byBtYWtlIHRoZSBleHBlcmllbmNlIHNhdGlzZnlpbmcuIAogNyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29Zb3Ugd2FudCBmdWxsIGZyZWVkb20gYXQgaG9tZSwgdXNlIEtvZGkgYWthIHRoZSBPRyBha2EgV2hhdCBQbGV4IGlzIGJhc2VkIG9mZiBvZiwgdGhhdCBnb3QgYSBsb3Qgb2YgdXMgaW50byB0aGlzIHN0dWZmIGJhY2sgaW4gdGhlIGRheSB3aGVuIGl0IHdhcyBYQk1DRW1ieSwgbm90IG9wZW4gc291cmNlIGFuZCBhcyBvZiB0b2RheSB0aGVyZSBpcyBhIGJpZyB0aHJlYWQgYmVjYXVzZSBvbmUgb2YgdGhlaXIgdXBncmFkZXMgYXBwYXJlbnRseSBlcmFzZWQgYSBndXlzIGZ1bGwgbW92aWUgZm9sZGVyICgxN1RCKSBZSUtFUyFKZWxseWZpbiwgb3BlbiBzb3VyY2Ugb2YgRW1ieSB0aGF0IEkgaG9wZSB0YWtlcyBvZmYgYW5kIGlzIGdyZWF0IGJ1dCBpdHMgbm90IG5lYXJseSBhcyB3aWRlIHNwcmVhZCBhcyBQbGV4LkkgZ2V0IHlvdXIgcGFpbi4gCk92ZXJ2aWV3IGZvciBhcmF5dGEKVGhpcyBtYXkgYmUgZG9uZSBpbiBhIG9uZSBvbiBvbmUgb3IgZ3JvdXAgc2V0dGluZy4gClRoZSBsb3NzIG9mICQ0Ny43IG1pbGxpb24gaXMgdXAgb24gbGFzdCB5ZWFyJ3MgZXhwZW5kaXR1cmUgb2YgJDQ2LjIgbWlsbGlvbi4gClRoZW4geW91IHdpbGwgaGF2ZSA1MCBzdW4gYXQgdGhlIHN0YXJ0IHB1dCBpbiBhIHBsYW50IHdvcnRoIDUwLzI1LiAKVGhleSB1c3VhbGx5IG1vcmUgaW50cm92ZXJ0ZWQsIGtlZXAgdG8gdGhlbXNlbHZlcyBhbmQgdGhlaXIgd2F5cyBtaWdodCBjb21lIG9mZiBhcyBhbnRpIHNvY2lhbCB0byBBbWVyaWNhbnMgYmVjYXVzZSB0aGV5IGJlbGlldmUgZXZlcnkgZW1vdGlvbiBhbmQgZmVlbGluZyBtdXN0IGJlIG91dCB0aGVyZSBhbmQgbm90aWNlZCBieSBvdGhlcnMgaW4gb3JkZXIgdG8gYWN0dWFsbHkgbWF0dGVyLiAKVGhlIGxpc3Qgb2YgcHJlZG9taW5hbnRseSBGcmVuY2ggd2luZXMgaXMgY29uY2lzZSB5ZXQgdmFyaWVkIGFuZCBpcyBpbnRlcmVzdGluZywgd2hldGhlciBieSB0aGUgZ2xhc3Mgb3IgYm90dGxlLiBEcmFmdCBhbmQgYm90dGxlZCBBdmVyeSBCcmV3aW5nIGJlZXJzIGFyZSBmZWF0dXJlZCwgaW5jbHVkaW5nICJUaGUgUmV2ZXJlbmQsIiBhbmQgdGhlIG1lbnUgYXNrcyB0aGF0IHlvdSBkZXNpZ25hdGUgYSBkcml2ZXIgYWZ0ZXIgY29uc3VtaW5nIHRoaXMgaGlnaCBhbGNvaG9sIGJvbWJlci5BZnRlciBzYW1wbGluZyBBIENhZmUncyB3YXJlcywgaXQncyBlYXN5IHRvIHNlZSB3aHkgdGhlIHNlcnZlciBoYWQgc3VjaCBhIGRpZmZpY3VsdCB0aW1lIGhlbHBpbmcgdXMgd2hpdHRsZSBvdXIgc2VsZWN0aW9ucy4gCkhlIGluanVyZWQgdGhlIEFDIGpvaW50IGluIGhpcyByaWdodCBzaG91bGRlciBhZ2FpbnN0IENvbG9yYWRvIFN0YXRlIG9uIFNlcHQuIApUaGF0IHJlYWxseSBpdC4gCktub3csIHRoaXMgZ3V5IGFuZCBoaXMgY28gZGVmZW5kYW50IGhhZCBwbGVudHkgb2YgdGltZSB0byByZWZsZWN0IG9uIHRoaXMgb3ZlciB0aGUgY291cnNlIG9mIGEgd2hvbGUgd2Vla2VuZCwgZXNzZW50aWFsbHksIHdoZW4gaGUgd2FzIG1pc3NpbmcuIApZb3VyIHRvbGVyYW5jZSB3aWxsIHNreSByb2NrZXQgYW5kIHlvdSBoYXZlIHRvIHRha2UgbW9yZSBhbmQgbW9yZSB0byBnZXQgdGhlIGVmZmVjdHMgeW91IHdhbnQuIAoiVGhlcmUncyBhIGxvdCBvZiBkaWZmZXJlbnQgY29udmVyc2F0aW9ucyB0aGF0IGNvbnRpbnVlLCBJIGRvbid0IHRoaW5rIGFueW9uZSBoYXMgbmFycm93ZWQgaXQgZG93biB0byBvbmUsIHR3byBvciBldmVuIHRocmVlIHBhdGhzIGF0IHRoaXMgcG9pbnQsIiBHYXJkbmVyIHNhaWQuClNTIENsdWIgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgVGltIExldmVzcXVlIHNhaWQgdGhlIGNsdWIgd2Fzbid0IHVuZGVyIGltbWVkaWF0ZSB0aHJlYXQsIGJ1dCBpdCB3YW50ZWQgdG8gb2ZmbG9hZCB0aGUgbGljZW5jZXMgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4gCkVtcGxveWVycyBjYW4gdXRpbGl6ZSB0aGlzIHNlcnZpY2UgdG8gYm9vc3QgZW1wbG95ZWUgbW9yYWxlLCByZWR1Y2UgYWJzZW50ZWVpc20sIGFuZCBtb3N0IG9mIGFsbCByZWR1Y2UgdGhlIG51bWJlciBvZiByZXBldGl0aXZlIG1vdGlvbiBpbmp1cmllcyBhbmQgcHJldmVudCBXb3JrZXIncyBDb21wZW5zYXRpb24gY2xhaW1zLgpZb3UgdGhpbmsgSSBraWRkaW5nPyBCYXJraW5nIHVwIHRoZSB3cm9uZyB0cmVlPyBUaGUgOTAgbWlsbGlvbiBkb2dzIHdlIGtub3cgYWJvdXQgYXJlIGluY3JlYXNpbmcgZXhwb25lbnRpYWxseS4gVmlzaXQgYW55IGRvZyBwYXJrIGFuZCBzZWUgZm9yIHlvdXJzZWxmIHdoYXQgaGFwcGVucyB3aGVuIGFueSBtYWxlIGRvZyBnZXRzIHRvZ2V0aGVyIHdpdGggYW55IGZlbWFsZSBkb2cuIFRoZXkgYXJlbiBleGFjdGx5IGRpc2NyaW1pbmF0aW5nIGluIHRoZWlyIHJvbWFudGljIGVuY291bnRlcnMuIFdlIGFscmVhZHkgc2VlIHNpZ25zIG9mIGEgZG9nIGNlbnRyaWMgY3VsdHVyZS4gV2hlbiBkaWQgdGhlIGRvZyBzdHJvbGxlciBiZWNvbWUgdWJpcXVpdG91cz8gV2h5IGRvIHdlIHNlZSB3YXRlciBib3dscyBmb3IgZG9ncyBvdXRzaWRlIHJlc3RhdXJhbnRzIHdoZW4gaG9tZWxlc3MgcGVvcGxlIGhhdmUgdG8gc2Nyb3VuZ2UgdG8gZ2V0IGEgZHJpbms/IEFuZCBhaXJsaW5lcz8gVGhlIHJ1bGVzIHN0YXRlIHRoYXQgc3VwcG9ydCBkb2dzIHRha2UgcHJpb3JpdHkgb3ZlciBodW1hbnMgd2l0aCBhbGxlcmdpZXMgb3IgYXZlcnNpb25zIHRvIHRoZSBzbWVsbHMgYW5kIHBvdHR5IHByb2JsZW1zIHRoYXQgc29tZXRpbWVzIGNvbWUgd2l0aCBhIGNhbmluZSBwYXNzZW5nZXIuIERvZ3MgYXJlIGJvcm4gd2l0aCBhbGwgdGhlIGNsb3RoZXMgdGhleSBuZWVkIG9uIHRoZWlyIGJhY2tzLCB5ZXQgdGhlIGRvZyBjbG90aGluZyBpbmR1c3RyeSBpcyBhIG11bHRpIGJpbGxpb24gZG9sbGFyIGJ1c2luZXNzLgpTZWl0IDIwMTIgYmlzIDIwMTcgaXN0IGRlciBUYXJtZWQgc3RpbGxnZWxlZ3QuIFp1c3RuZGlnIGZyIGRpZSBUYXJpZmUgd2FyIGJpcyA/PyBkaWUgVGFybWVkIFN1aXNzZS4gRWlnZW50bGljaCBodHRlIGRpZSBUYXJtZWQgU3Vpc3NlIEFHIGRpZXNlIGFibHNlbiBzb2xsZW4uClR3byBjYXNlcyBvZiBvdXIgY3VsdHVyZSBkZXNpcmUgdG8gcHJvdGVjdCBsYWRpZXMgZXZlbiB3aGlsZSB3ZSBoYXBwaWx5IHRocm93IG90aGVyIHNvcnRzIG9mIHdvbWVuIHRvIHRoZSB3b2x2ZXMgaGF2ZSBjb21lIHVwIHRoaXMgd2Vlay4gUGVvcGxlIE1heSAxMyBjb3ZlciBvZiBVVkEgc3R1ZGVudCwgWWVhcmRseSBMb3ZlLCBhIHlvdW5nIGxhY3Jvc3NlIHBsYXllciB3aXRoIGEgcHJvbWlzaW5nIGZ1dHVyZSBtdXJkZXJlZCBieSBleCBib3lmcmllbmQgYW5kIGZlbGxvdyBsYWNyb3NzZSBwbGF5ZXIgR2VvcmdlIEh1Z3VlbHkuIApEZXZlbG9wZWQgZm9yIGVjb25vbWljcywgd2hlcmUgaXQgaGFzIGhhZCBzb21lIHN1Y2Nlc3NlcywgZ2FtZSB0aGVvcnkgZGlkbid0IHF1aXRlIGNvbXBsZXRlbHkgcmV2b2x1dGlvbml6ZSB0aGF0IGZpZWxkLiBCdXQgaXQgaGFzIGJlZW4gd2lkZWx5IGFkb3B0ZWQgYnkgbWFueSBvdGhlciBzb2NpYWwgc2NpZW5jZXMuIEFuZCBldm9sdXRpb25hcnkgZ2FtZSB0aGVvcnkgaXMgYW4gaW1wb3J0YW50IGJyYW5jaCBvZiB0aGUgc3R1ZHkgb2YgZXZvbHV0aW9uYXJ5IGJpb2xvZ3kuIApUaGF0IGFsbCBJIGhhZCB3YXMgbXkgZnJpZW5kcyBiYWNrIGluIE5vdmEgU2NvdGlhLCB3aG8gd291bGQgZW1haWwgbWUgY29uc3RhbnRseSBvbiB3aGF0IG90aGVyIHBlb3BsZSB3ZXJlIHBsYXlpbmcgYWdhaW5zdCBtZSBhbmQgaG93IHRoZXkgd2VyZSBwZXJjZWl2aW5nIG1lLiBJIGZlbHQgbGlrZSBpdCB3YXMgYSB3aG9sZSB0ZWFtIGFwcHJvYWNoIGFuZCBJIGZlbHQgbGlrZSBJIHdhcyBwbGF5aW5nIGZvciB0aGUgcHJvdmluY2Ugb2YgTm92YSBTY290aWEgcmVhbGx5LiBCZWxpZXZlcyBoaXMgYWdlIGFsc28gZ2F2ZSBoaW0gYW4gYWR2YW50YWdlLCBiZWNhdXNlIHlvdW5nZXIgcGxheWVycyBwZXJjZWl2ZSBvbGRlciBwbGF5ZXJzIGFzIGNvbnNlcnZhdGl2ZS4gCiJIZSdzIGFuIGVhc3kgcGxheWVyIHRvIHJvb3QgZm9yLCIgUm95YWxzIGdlbmVyYWwgbWFuYWdlciBEYXl0b24gTW9vcmUgc2FpZC4gCklmIHlvdSd2ZSB3ZXJlIGx1Y2t5IGVub3VnaCB0byBjb21lIGluIDFzdCBvciAybmQgdGhlIHByZXZpb3VzIHN0ZXAsIGl0IGNvc3RzIHlvdSBub3RoaW5nLiAKVGhlIHN1Y2Nlc3MgcGxheWluZyBpbiBqYWlsIHJlYWxseSBpcyBhIG1ham9yIGZhY3RvciBpbiBteSBjb25maWRlbmNlIHNpbmNlIGl0IHdhcyA4IGhvdXJzIGEgZGF5IGF0IHRoZSB0YWJsZSB3aXRoIGNhc2ggc3Rha2VzIHBsYXlpbmcgYWdhaW5zdCBvdGhlciBwZW9wbGUgd2hvIGRpZCB0aGUgc2FtZSB0aGluZywgOCBob3VycyBhIGRheSBhdCB0aGUgY2FzaCBzdGFrZXMgdGFibGUsIGZvciB1cHdhcmRzIG9mIDEgeWVhciwgd2hpbGUgd2Fsa2luZyBhd2F5IGxlc3MgdGhhbiBmbHVzaCA1IG9yIGxlc3MgdGltZXMuIEFuZCB5ZXMsIGkgd2FzIHZlcnkgaW1wdWxzaXZlIHdoZW4gaXQgY2FtZSB0byBkcnVncyBidXQgd2hlbiBzb2JlciwgcG9rZXIgaGFzIG5ldmVyIGJlZW4gYSBwcm9ibGVtIHdoZW4gaXQgY29tZXMgdG8gaW1wdWxzZSBjb250cm9sLiAKQnV0IGlmIHlvdSBsb3ZlZCBzb21lb25lIHRvIHBpZWNlcyBhbmQgdGhleSBqdXN0IGRpc2FwcGVhcmVkIG9uZSBkYXksIHlvdSBzdGlsbCBsb3ZlIHRoZW0gZXZlbiBhIGxvbmcgdGltZSBsYXRlci4gSWYgeW91IHNhdyB0aGVtIGFnYWluIGFmdGVyIHNldmVyYWwgeWVhcnMsIHlvdSBzdGlsbCBiZSBzbyBoYXBweSB0byBzZWUgdGhlbSBiZWNhdXNlIG5vdGhpbmcgaGFwcGVuZWQgdG8gY2hhbmdlIGhvdyB5b3UgZmVlbCBhYm91dCB0aGVtLiAKRGVwZW5kaW5nIG9uIHdoZXJlIHlvdSBhcmUgaW4gdGhlIHdvcmxkLCBpdCBhbHNvIGRlcGVuZHMgd2hpY2ggc2l0ZSBvciBhZ2VuY3kgeW91IGdldCB0aGVtLiBBcyBJIGZyb20gQXNpYSwgSSBnb3Qgb3VycyBmcm9tIEtsb29rLgpCdXQgaXQncyBzdGlsbCB3b3J0aCBtZW50aW9uaW5nIEkgdGhpbmsuIE15IGJpZ2dlc3Qgb3Bwb25lbnQgaW4gcG9rZXIgaXMgYWxtb3N0IGFsd2F5cyBteXNlbGYuIApUaGFuayB5b3UgZm9yIHlvdXIgY3VzdG9tLiBLaW5kIFJlZ2FyZHMgSmVycnkgUnVzc2VsbCBHZW5lcmFsIE1hbmFnZXJSZXNwb25zZSBmcm9tIEplcnJ5IFIsIEdlbmVyYWwgTWFuYWdlciBhdCBXZXN0Z3JvdmUgSG90ZWwgYW5kIENvbmZlcmVuY2UgQ2VudHJlUmVzcG9uZGVkIDIgZGF5cyBhZ29EZWFyIEd1ZXN0IFRoYW5rIHlvdSBmb3IgY2hvb3NpbmcgdGhlIFdlc3Rncm92ZSBIb3RlbCBMZWlzdXJlIENsdWIgYW5kIFNwYSBhbmQgZm9yIHRha2luZyB0aGUgdGltZSB0byBnaXZlIHVzIHlvdXIgcmV2aWV3LiBJIGFtIGRlbGlnaHRlZCB0aGF0IHlvdSBlbmpveWVkIHlvdXIgc3BhIHRyZWF0bWVudCBhbmQgdGhhdCB5b3Ugd291bGQgbGlrZSB0byByZXR1cm4uIApUZW4gZWVyc3RlIHZpbmQgaWsgZGF0IGZ5c2lvdGhlcmFwZXV0aXNjaCBoYW5kZWxlbiBoZXQgZGVza3VuZGlnIGt1bm5lbiBoYW5kZWxlbiBlbiBvb3JkZWxlbiBvdmVyIGhldCBiZXdlZ2luZ3Nwcm9ibGVlbSB2YW4gZWVuIHBhdGludC4gCkV0aXF1ZXR0ZSBpcyB0byBleGNoYW5nZSBwaG9uZSBudW1iZXJzLiBXaGlsZSBtYW55IHdpbGwgZ2l2ZSB5b3UgYSBmYWtlIG9uZSwgYmFzZWQgb24gdGhlIG51bWJlcnMgZ2FtZSBhbG9uZSwgeW91IHNob3VsZCBiZSBhYmxlIHRvIGNvbm5lY3Qgd2l0aCBhIGxlYXN0IG9uZSBnaXJsIHdobyB3aWxsIGdpdmUgeW91IHRoZWlyIHJlYWwgbnVtYmVyIChteSBwZXJzb25hbCBoaXQgcmF0ZSBpcyBhYm91dCAyMCUpLiAKVGhhdCBpcyBkZWZpbml0ZWx5IG5vdCBub3RoaW5nLiBDZWFzaW5nIHdhciBleGVyY2lzZXMgaXMgdGhlIHByaWNlIHRvIHBheSBmb3IgbWFpbnRhaW5pbmcgZGlwbG9tYWN5LiBJbiB5b3VyIG9waW5pb24sIGhhcyB0aGF0IGRlZ3JhZGVkIHJlYWRpbmVzcz8uIApUaGlzIGlzIGZ1bmN0aW9uIG9mIHRoZSBtb2RlbCBjbGFzcyBhbmQgdGhlIGRhdGEgZGlzdHJpYnV0aW9uLiBOYWl2ZWx5LCB3aXRob3V0IHVzaW5nIGFueSBwcmlvciBpbmZvcm1hdGlvbiwgeW91J2Qgc2F5IHlvdSBzaW1wbHkgbmVlZCBhIGxvdCBvZiBkYXRhLiBCdXQgdGhpcyBpc24ndCB0cnVlLCBhbmQgcGVvcGxlIHJlc2VhcmNoIGZpbmRpbmcgZWZmZWN0aXZlIGRhdGEgc2V0cyB0byB0cmFpbiBvbiBmb3Igc3BlY2lmaWMgZGVjaXNpb24gYm91bmRhcmllcyBhbmQgbW9kZWwgY2xhc3Nlcy4gClRoZSBzZW5zYXRpdml0eSBhbmQgYnV0dGh1cnRlZG5lc3MgaXMgY29tcGxldGVseSBjb21pbmcgZnJvbSB5b3VyIGVuZCwgZ3V5LiBIYXZlIGEgZ29vZCBldmVuaW5nLCBtYW4sIGFuZCBrZWVwIHlvdXIgaGVhZCBvbiBhIHN3aXZlbCBvdXQgdGhlcmUuLiAKS2lsZW5jIHNwZWFraW4gYmxhY2sgYmUgd2F5IHdhY2sKSWYgaGUgd2FudHMgdG8gY291bnRlcmNsYWltIGRvd24gdGhlIGxpbmUgYWJvdXQgdGhlIGRlZHVjdGlvbnMgdGhlbiBJIGd1ZXNzIHRoYXQgaGF2ZSB0byBiZSBhIGRpZmZlcmVudCBtYXR0ZXIsIGkgbm90IHRvbyB3b3JyaWVkIGFib3V0IHRoYXQsIGhlIHdvdWxkIGhhdmUgYSB2ZXJ5IGhhcmQgdGltZSBwcm92aW5nIHNvbWUgb2YgdGhlIGl0ZW1zIG9uIGhpcyBsaXN0Li4gCkJ1dCBJIHJhcmVseSBnZXQgcHVuaXNoZWQgZm9yIHBsYXlpbmcgdGhpcyB3YXkgYW5kIGlmIEkgcGF0aWVudCwgSSB3aWxsIGV2ZW50dWFsbHkgaGl0IGFuZCB3aW4gYSBiaWcgcG90IGZyb20gaXQuLiAKSSB3b3VsZG4gd2FudCBteSBraWRzIHRvIHNlZSB0aGlzIGJ1dCB3ZSBhbHNvIHRhbGsgYWJvdXQgZXZlcnl0aGluZyBzbyBJIHRoaW5rIEkgY2FuIG5hdmlnYXRlIHRhbGtpbmcgYWJvdXQgdGhpcyB3aXRoIHRoZW0gdG9vLiBJIHRoaW5rIGl0IHNpbWlsYXIgdG8gdGhlIE1BR0EgaGF0cyBpbiBBbWVyaWNhLiAKQmVjb21pbmcgZmFtaWxpYXIgd2l0aCBibG9ja2luZyBhbGwgdHlwZXMgb2YgYXR0YWNrcywgZ2V0dGluZyB1c2VkIHRvIGJlaW5nIHB1dCBpbiBibG9jayBzdHJpbmdzIChhbmQgbm90IGNvdW50ZXJpbmcgdW50aWwgeW91IGFyZSBvdXQgb2YgaXQpIGFuZCBkZWZlbmRpbmcgYWdhaW5zdCBjcm9zcyB1cHMgd2lsbCBiZSBhbnkgcGxheWVyIGdyZWF0ZXN0IGFzc2V0LiBJIHNlZW4gcGxheWVycyB3aG8gYXJlIHJpZGljdWxlZCBmb3IgYXNraW5nIGhvdyB0byBibG9jaywgYnV0IGl0IGFub3RoZXIgYXNwZWN0IG9mIGZpZ2h0aW5nIGdhbWVzIHRoYXQgbXVzdCBiZSBwcmFjdGljZWQuLiAKVGhlIG9ubHkgZHJhd2JhY2tzIHdlcmUgYW4gYWJzZW5jZSBvZiBtaXJyb3JzIGFuZCBwbGFzdGljIHVuZGVyIHRoZSBiZWRzaGVldHMgYW5kIHBpbGxvd2Nhc2VzLiAKSWYgeW91IGRvIHlvdXIgb3duIGxpdHRsZSByZXNlYXJjaCBvbiBjb21wZXRpdGl2ZSBvZGRzIGFuZCBjb21wYXJlIEJldFZpY3RvciB3aXRoIG90aGVyIHJlcHV0YWJsZSBib29rbWFrZXJzIHlvdSB3aWxsIG5vdGljZSB0aGF0IEJldFZpY3RvciBvZmZlcnMgc29tZSBvZiB0aGUgYmVzdCBsb25nIHRlcm0gb2Rkcy4gCiJUaGV5IGZpbmQgdGhhdCBxdWlldCBhbmQgcGVhY2UsIGFuZCBrbm93aW5nIHRoYXQgZXhpc3RzLCB0aGV5IGNhbiBnbyBiYWNrIHRvIHRoYXQsIiBNb2NjaWEgc2F5cy4KWWVzLCB3ZSBjYW4uIEZvciB0aGUgMTk1OCBjaGFtcGlvbnNoaXAgb25seSB0aGUgdG9wIDYgcmVzdWx0cyBjb3VudCwgd2hpY2ggbWVhbiA2IGxhcmdlc3QgcG9pbnRzIGhhdWxzLiBGb3IgSGF3dGhvcm4sIHRoYXQgaXMgaGlzIHdpbiBhbmQgdGhlIDUgMm5kIHBsYWNlcy4KT3ZlcnJlYWNoaW5nOiBZb3UgYXJlIGFib3ZlIHlvdXIgdHJhaW5pbmcgbG9hZCBhbmQgeW91ciAgZHVyaW5nIHdvcmtvdXRzIGlzIHRvbyBuZWdhdGl2ZS4KVGhhdCBzYWlkLCBpbiBhbnkgcmVhbCBlc3RhdGUgbWFya2V0LCBpdCdzIGVpdGhlciBnb2luZyB0byBiZSB0b3VnaCB0byBmaW5kIGRlYWxzIChzZWxsZXIncyBtYXJrZXQpb3Igc2VsbCBkZWFscyAoYnV5ZXIncyBtYXJrZXQpLiBUaGVzZSBkYXlzLCBpdCdzIHRvdWdoIHRvIGZpbmQgZGVhbHMsIGFuZCBmb3IgbWFueSBpbnZlc3RvcnMsIHRoYXQncyBhIGJpZyBvYnN0YWNsZS4KT2gsIGJ1dCB5b3Ugc2VlIHRoYXQgaXMgb25lIG9mIHRoZSBncmVhdCBpcm9uaWVzIG9mIHRoZSB1bml2ZXJzZSwgRmxveWQncyBnaW1taWNrIHdhcyBoaXMgemVybyBsb3NzZXMuIApCb3RoIHdlcmUgNSA0IGRlY2lzaW9ucywgd2l0aCBKdXN0aWNlIFN0ZXBoZW4gRy4gQnJleWVyIGNhc3RpbmcgdGhlIGtleSB2b3Rlcy4uIApUbyByZXR1cm4gdG8gdGhlIHBva2VyIGFuYWxvZ3k6IElmIGEgcGxheWVyIGVuam95cyBhIHBhcnRpY3VsYXJseSBwcm9maXRhYmxlIG5pZ2h0IGFuZCB3aW5zIG1vc3Qgb2YgdGhlIGhhbmRzLCBpdCdzIHNlbnNpYmxlIHRvIGNyZWRpdCB0aGUgcG93ZXIgb2YgZ29vZCBsdWNrLiBZZXQgaWYgdGhlIHNhbWUgY29tcGV0aXRvciBhY2hpZXZlcyBzaW1pbGFyIHN1Y2Nlc3Mgb3ZlciBhIHBlcmlvZCBvZiB5ZWFycyBhbmQgZGVjYWRlcywgdGhlIG90aGVyIGdhbWJsZXJzIHdpbGwgY29tZSB0byBhc3N1bWUgdGhhdCBzb21lIG90aGVyIGZhY3RvciBoYXMgZGV0ZXJtaW5lZCB0aGUgY29uc2lzdGVudCBvdXRjb21lIG9mIHRoZWlyIGdhbWVzLgoyMSsuICQ4LyQxMC4gCktlZXAgaW4gbWluZCB0aGF0IGluIGEgZ3JvdXAgc3VwcG9ydCBlbnZpcm9ubWVudCB5b3UgZ29pbmcgdG8gZ2V0IHBvaW50cyBvZiB2aWV3IGZyb20gYWxsIGtpbmRzIG9mIHBlb3BsZTogc3Bpcml0dWFsLCBhZ25vc3RpYywgaHVtYW5pc3QsIGF0aGVpc3QuIFRoaXMgZmFjdCBkb2VzbiB0aHJlYXRlbiB5b3UuIEFjY2VwdGluZyBpdCBkb2VzbiBoYXJtIHlvdSBvciBjaGVhcGVuIHlvdS4KSGFwcHkgSG9saWRheXMhLiAKRXZlcnlkYXkgLiAKVGhlIGRyaXZlciBvZiB0aGUgb3RoZXIgY2FyIHRob3VnaHQgaGUgYnJha2UgY2hlY2tlZCBoaW0uLiAKU2hlIHNheXMgdGhlIGJlc3QgdGFjdGljIHdpdGggdmljdGltcyBpcyB0byBsaW1pdCB0aGUgYW1vdW50IG9mIHRpbWUgeW91IGxpc3RlbiB0byB0aGVtLiBUaGV5IHdpbGwgdGFrZSBhcyBtdWNoIHRpbWUgYXMgeW91IGdpdmUgdGhlbSwgc28gaXQgaXMgdXAgdG8geW91IHRvIHNldCB0aW1lIGxpbWl0cyBhbmQgYm91bmRhcmllcyB3aGVuIHNwZWFraW5nIHdpdGggdGhlbS4gQXQgdGhlIGJlZ2lubmluZyBvZiBhbiBpbnRlcmFjdGlvbiwgc2F5IHNvbWV0aGluZyBsaWtlLCAiSSBvbmx5IGhhdmUgZml2ZSBtaW51dGVzLiIgQ3V0IHRoZW0gb2ZmIHdoZW4gdGhlaXIgdGltZSBpcyB1cCBzbyB5b3UgZG9uJ3QgZ2V0IHN1Y2tlZCBkcnkuLiAKRGllIGdydGVuIFByb2JsZW1lLCBkaWUgd2lyIGluIGRlciBIaW5zaWNodCBoYWJlbiwgc2luZCBkaWUgb2JlcmZsY2hsaWNoZW4gQXJndW1lbnRlIGluc2Jlc29uZGVyZSBkZXIgTVJBIEJld2VndW5nLCBkaWUgbWhzYW0gZW50a3JmdGV0IHdlcmRlbiBtc3NlbiAoenVtIEJlaXNwaWVsIHp1bSBHZW5kZXIgUGF5IEdhcCkuCldpbGwgYmUgY29taW5nIGluIGFuZCBjb29raW5nIHVwIGhpcyBjbGFzc2ljIHNwYWdoZXR0aSBkaW5uZXIgd2l0aCBhIGhvdXNlIHNhbGFkLCBnYXJsaWMgYnJlYWQgYW5kIGEgZ2xhc3Mgb2YgQ2hpYW50aSBhbGwgZm9yICQxNC45NSwgTWFjZXkgc2FpZC4gCkF0IG1pbGUgNiBJIGhhZCB0byB1c2UgdGhlIGJhdGhyb29tLiBXaGVuIEkgY2FtZSBvdXQsIEkgaGFkIGxvc3QgdGhlIHBhY2VycyBhbmQgZm9yIHRoZSB3aG9sZSBiYWNrIGhhbGYgb2YgdGhlIHJhY2UgSSBoYWQgbm8gaWRlYSB3aGVyZSBJIHdhcyBpbiByZWxhdGlvbiB0byBhbnkgcGFjZSBncm91cC4gOiguIApUaGUgdHJhbnMgZGVybWFsIGdlbCB0eXBpY2FsbHkgY29tZXMgaW4gYSBzcGVjaWFsIHBlbiB0aGF0IHNxdWVlemVzIG91dCBhIHNwZWNpZmljIGFtb3VudCBvZiBtZWRpY2F0aW9uIG9udG8gYW4gYXBwbGljYXRvci4gClRoZSBtYWNoaW5lcyB5b3UgbWVudGlvbiBhbmQgdGhlIHNpbWlsYXIgVEVOUyBtYWNoaW5lcyBjYW4gYmUgdXNlZnVsIGluIHNvbWUgd2F5cy4gCk92ZXJ2aWV3IGZvciBzb2x1bXVzaWNmYWRlCklmIHlvdSB3YW5uYSBsb29rIGZvciBzb21lIGNsb3RoZXMgb24gdGhlIGNoZWFwZXIgc2lkZSwgdHJ5IE9sZCBOYXZ5LiBUaGVpciByZWd1bGFyIGxpbmUgZ29lcyB1cCB0byAyMCBhbmQgdGhleSBhbHNvIGhhdmUgYSBwbHVzIHNpemUgc2VsZWN0aW9uIGZvciBzaXplcyAxNiAzMCBzbyB5b3UgYmUgYWJsZSB0byBzaG9wIGJvdGggc2VjdGlvbnMhIFRoZWlyIGNsb3RoZXMgYXJlbiB0aGUgZ3JlYXRlc3QgcXVhbGl0eSB0aG91Z2ggYnV0IEkgZG8gbG92ZSB0aGVpciBqZWFucy4gVGhleSBjaGVhcCBzbyBpdCB3aHkgSSBzdGlsbCBzaG9wIHRoZXJlLgpJdCB0b28gYmFkLCByZWFsbHkuIApTdHVkaWVzIHdlcmUgZXhjbHVkZWQgaWYgdGhleSBmb2N1c2VkIG9ubHkgb24gdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBnYW1ibGVycywgdHJlYXRtZW50IHJldGVudGlvbiBvciB0aGVyYXBldXRpYyBhbGxpYW5jZSBvbmx5LCBvciBldmFsdWF0ZWQgcGhhcm1hY29sb2dpY2FsIHRyZWF0bWVudHMgb3IgUGFya2luc29uIHN5bXB0b21zIHRoYXQgYXJvc2UgZnJvbSBwaGFybWFjb2xvZ2ljYWwgdHJlYXRtZW50cyB3aXRoIG5vIGRhdGEgcmVsYXRlZCB0byBlZmZlY3RpdmVuZXNzIG9mIENCVC4uIApBbnl3aG8sIHNvcnJ5IHlvdSBoYXRlIGJlaW5nIGZhbW91cy4gCk9uY2UgSSBzYWlkIHNvbWV0aGluZywgaXQgZXNjYWxhdGVkLCBoZSBzYWlkIGxldCdzIGdvIG91dHNpZGUgYW5kIGZpZ2h0LiBJIGNhbGxlZCBoaW0gZmF0LCBhbmQgZWF0IGEgVHdpbmtpZS4gT2YgY291cnNlIEkgYWluJ3QgZ29pbmcgdG8ga2VlcCBteSBtb3V0aCBzaHV0LiAKQW5kIGl0IGh1cnRzIG1lLCBDYXB0YWluIEppbS4gSSdtIG5vdCB1c2VkIHRvIGJlaW5nIGRpc2xpa2VkICBhbmQgSSd2ZSB0cmllZCBzbyBoYXJkIHRvIHdpbiBMZXNsaWUncyBmcmllbmRzaGlwLiIuIApBZnRlciBJIGRpZCB0aGlzLCBpdCBzZWVtZWQgdG8gZml4IHRoZSBtb29zZSBzcGF3bnMgaW4gbXkgZ2FtZSBhcyBJIHJhbiBpbnRvIGFub3RoZXIgb25lIG5vdCBsb25nIGFmdGVyLiAKTm90IGV2ZW4gc29uZyByZWNvbW1lbmRhdGlvbnMuIEp1c3QgYSBzdHVwaWQgZnVja2luZyBiYW5kIGxpc3QgY2VudGVyIGp1c3RpZmllZCBvbiBvbmUgd2hvbGUgcGFnZS4gCklmIGEgQ0IgcmFuZ2UgZXhpc3RzIHRoaXMgdmVyc2lvbiBvZiBBUSBpcyBkZWZpbml0ZWx5IGEgcGFydCBvZiBpdC4gCkxldHp0ZSBXb2NoZSBmaHJ0ZSB1bnMgZWluIFRhZ2VzYXVzZmx1ZyBpbiBkYXMgQmlvc3BocmVuIFJlc2VydmF0IHZvbiBMb3MgVGlsb3MuIEJlaSBzdHJhaGxlbmRlbSBTb25uZW5zY2hlaW4gZnVocmVuIHdpciB2b24gTG9zIExsYW5vcyBSaWNodHVuZyBTYW50YSBDcnV6IGRlIExhIFBhbG1hLiBFaW4ga2xlaW5lciBBYnN0ZWNoZXIgenVtIE1pcmFkb3IgZGUgbGEgQ29uY2VwY2lvbiBib3QgZWluZW4gd3VuZGVyYmFyZW4gUnVuZGJsaWNrIGJlciBkZW4gT3N0ZW4gZGVyIEluc2VsIG1pdCBkZXIgSGF1cHRzdGFkdCB6dSB1bnNlcmVuIEZlbi4gVW5kIHdpZSBkZXIgWnVmYWxsIGVzIHdvbGx0ZSwgZXJsZWJ0ZW4gd2lyIGRvcnQgZGVuIFN0YXJ0IGh1bmRlcnRlciBCcmllZnRhdWJlbi4gRWluIHRvbGxlcyBFcmxlYm5pcywgd2llIHNpY2ggZGllIFRhdWJlbiB6dSBTY2h3cm1lbiBmb3JtaWVydGVuIHVuZCBlaW5lbiB3dW5kZXJiYXJlbiBUYW56IiBhbSBIaW1tZWwgdm9sbGZocnRlbi4KQW5kIGlmIHlvdSBkb24gd2FudCB0byBkZWFsIHdpdGggSVZzLCBjYXRoZXRlcnMsIHZpdGFscywgbWVkcywgZXRjLiwgdGhlbiBzaXQgZG93biBhbmQgcmVhZC4gCkFuZCBhcyBBbGZvbnNpIHdpdG5lc3NlZCBmaXJzdGhhbmQgYXQgdGhlIG5hdGlvbmFsIGNoZXNzIGNoYW1waW9uc2hpcCBpbiBOYXNodmlsbGUsIHRoYXQncyBleGFjdGx5IHdoYXQgQnVsaW5ndG9uJ3MgY2hlc3MgcGxheWVycyBkby4KVGhpcyBpcyB3aGF0IEkgd2FzIGdvaW5nIHRvIHNheSEgTXkgaHVzYmFuZCBhbmQgSSBoYXZlIGJlZW4gbWFycmllZCBmb3IgNiB5ZWFycywgd2UgYmVlbiB0b2dldGhlciAxNiBpbiB0b3RhbC4gV2hpbGUgd2UgaGF2ZSBhbiBhd2Vzb21lIHNleCBsaWZlIGFuZCBhcmUgc3RpbGwgVkVSWSBhdHRyYWN0ZWQgdG8gZWFjaCBvdGhlciwgaWYgaGUgYXNrZWQgbWUgdG8gcmVjcmVhdGUgYSBsb29rIGZvciBoaW0gYmVjYXVzZSBoZSBlbmpveWVkIGl0LCBpdCB3b3VsZCBnaXZlIG1lIGJ1dHRlcmZsaWVzIGFuZCBJIHdvdWxkIGxvdmUgdG8gZG8gaXQgZm9yIGhpbS4gCiJXZSBhcmUgZGVlcGx5IGNvbmNlcm5lZCBhYm91dCB0aGUgc2l0dWF0aW9uIGFuZCB0aGUgcGVvcGxlIGFmZmVjdGVkLCIgb3duZXIgYW5kIG1hbmFnZXIgQ29saW4gTGkgc2FpZCBpbiB0aGUgc3RhdGVtZW50LiAiVGhlcmUgYXJlIGEgbnVtYmVyIG9mIHNlbnNpdGl2aXRpZXMgYW5kIGNvbnNpZGVyYXRpb25zIGFib3V0IHRoaXMgc2l0dWF0aW9uLCBhbmQgZm9yIHRoYXQgcmVhc29uLCB0aGUgdHJpYnVuYWwgb3V0Y29tZSBpcyB1bmRlciBhcHBlYWwgYnkgbGVnYWwgcmVwcmVzZW50YXRpdmVzLiIKVG9ueSB3aWxsIGFsd2F5cyBiZSByZW1lbWJlcmVkIGFzIGdlbmVyb3VzLCBmdW5ueSBhbmQga2luZC4gCkJ1dCBwZW9wbGUgZ28gdG93YXJkcyB0cmliYWxpc20sIGVuZCBvZiB0aGUgZGF5IGl0cyBpbiBvdXIgbmF0dXJlIHRvIHBpY2sgc2lkZXMgb3IgYSBncm91cCwgZnJvbSBvdXIgbmF0aW9uIGFsbCB0aGUgd2F5IHRvIG91ciBvd24gZmFtaWxpZXMuIApJbiAxOTU1LCBEaXNuZXlsYW5kIG9wZW5lZCBhbmQgdGhlIHRoZW1lIHBhcmsgZXJhIHdhcyBvbi4gV2hpbGUgdGhlbWUgcGFya3MgYXJlIG9mdGVuIGNpdGVkIGFzIHRoZSBtYWluIHJlYXNvbiB3aHkgdHJhZGl0aW9uYWwgcGFya3MgYXJlIGZhaWxpbmcsIERpc25leSBoZWxwZWQgYnJpbmcgYSBuZXcgZm9ybSBvZiB0aGUgcm9sbGVyIGNvYXN0ZXIgdG8gdGhlIG5hdGlvbmFsIHNwb3RsaWdodC4gTWF0dGVyaG9ybiBNb3VudGFpbiwgYnVpbHQgaW4gMTk1OSwgd2FzIHRoZSBmaXJzdCB0dWJ1bGFyIHN0ZWVsIGNvYXN0ZXIsIG1hZGUgYnkgQXJyb3cuIFRoZSByaWRlIGRpZCBub3QgZG8gYW55IGxvb3BzIG9yIGFueXRoaW5nIGZhbmN5LCBqdXN0IGEgZ3JhZHVhbCBzZXJpZXMgb2YgZGlwcyB0aHJvdWdoIGEgbW91bnRhaW4uIFRoaXMgY2hhbmdlIG1hZGUgYW4gdW5vZmZpY2lhbCBsaW5lIG9mIGRlbWFyY2F0aW9uLCBvbiBvbmUgc2lkZSBzdGVlbCBjb2FzdGVycyB3ZXJlIGZvciB0aGVtZSBwYXJrcywgb24gdGhlIG90aGVyIHdvb2QgY29hc3RlcnMgd2VyZSBmb3IgdHJhZGl0aW9uYWwgcGFya3MuClNvbWUgb2YgdGhlIHNhY3JpZmljZXMgYXJlIG1vcmUgaWRpb3N5bmNyYXRpYy4gCkVhY2ggb25lIG9mIHRoZW0gaGFzIGEgUmVkIENhc2lubyBHcmFkZSBXb29sIEJsZW5kIFNwZWVkIENsb3RoIG9uIGl0IG5vdywgYnV0IGluIHRoZSBiZWdpbm5pbmcgdGhleSB3ZXJlIGFsbCBvbGQgZmFkZWQgZ3JlZW4uIApDb25zaXN0ZW5jeSBpcyBrZXkhIFVzZSBhbiBlcmcgc2NvcmUgY2FsY3VsYXRvciB0byBoZWxwIHlvdSBmaW5kIHRoZSBzcGxpdCB5b3UgbmVlZCB0byBtYWludGFpbiB0aGVuIGZpbmQgdGhhdCBzcGxpdCB3aXRoaW4gdGhlIGZpcnN0IHRlbiBzdHJva2VzIGFuZCBIT0xEIElULiBZb3UncmUgZ29pbmcgdG8gaGF2ZSBhIGxvdCBvZiBhZHJlbmFsaW5lIGNvdXJzaW5nIHRocm91Z2ggeW91IGluIHRoZSBmaXJzdCA1MDAgYW5kIHlvdXIgYm9keSBpcyBnb2luZyB0byB3YW50IHRvIGdvIGhhcmRlciBidXQgeW91IG11c3QgcmVzaXN0IHRoZSB1cmdlLiBZb3UgYW5kIHlvdXIgY29hY2ggY2FuIGRlY2lkZSB3aGVuIHlvdSB3YW50IHRvIHN0YXJ0IHlvdXIgc3ByaW50IGF0IHRoZSBlbmQgYnV0IEkgc3VnZ2VzdCB5b3Ugc3RhcnQgd2hlbiB5b3UgaGF2ZSAzMDAgbSB0byBnby4gClRoZSBwb2tlciByaWRlIHdpbGwgZXhpc3RpbmcgbW91bnRhaW4gYmlrZSB0cmFpbHMgb24gdGhlIG1lc2EuIFRoZSByaWRlIGlzIGFib3V0IDkgbWlsZXMgbG9uZyBhbmQgc2hvdWxkIHRha2UgYWJvdXQgMSAxLzIgdG8gMiBob3VycyB0byBjb21wbGV0ZS4uIApJIGhhdmUgbG9zdCA5NSBwb3VuZHMuIAoiVGhleSBzaG91bGQgcmVuZGVyIHRoZWlyIHJlcG9ydC4gCk1vcmUgdGhhbiAzMCBob3RlbCBhbmQgcmVzaWRlbnRpYWwgcHJvamVjdHMgYXJlIHVuZGVyIGRldmVsb3BtZW50IGFyb3VuZCB0aGUgZ2xvYmUgd2l0aCBmdXR1cmUgb3BlbmluZ3Mgd2hpY2ggaW5jbHVkZSBUaGUgUml0eiBDYXJsdG9uLCBIb25nIEtvbmcgd2hpY2ggd2lsbCBvcGVuIGFzIHRoZSBoaWdoZXN0IGhvdGVsIGluIHRoZSB3b3JsZC4gClZlcml6b24ncyBXYXJyZW4gQ2hhc2UgZ2F2ZSBhbiBlbnRpcmUgcHJlc2VudGF0aW9uIG9uIEZyaWRheSBhYm91dCB0aGUgdGVsZWNvbW11bmljYXRpb24gYnJhbmQncyAxOCBtb250aCBvbGQgaW50ZXJuYWwgYWdlbmN5IDE0MCwgd2hlcmUgaGUgaXMgY2hpZWYgb3BlcmF0aW5nIG9mZmljZXIuIEhlIHNwZW50IGhpcyB0aW1lIG9uIHN0YWdlIGRlYnVua2luZyBzZXZlcmFsICJteXRocyIgYWdlbmN5IGZvbGtzIG9mdGVuIHRyb3Qgb3V0IHdoZW4gY3JpdGljaXppbmcgaW4gaG91c2UgcHJpbWFyaWx5IHRoYXQgaXQncyB3aGVyZSBjcmVhdGl2ZXMgZ28gInRvIHJldGlyZS4iIEhlIGV2ZW4gcmVmZXJlbmNlZCBhIHJlY2VudCBvcGluaW9uIHBpZWNlIGluIEFkIEFnZSBieSA0QXMgQ0VPIGFuZCBQcmVzaWRlbnQgTWFybGEgS2FwbG93aXR6LCB0aGF0IHNhaWQgcmVwb3J0cyBvZiB0aGUgdHJlbmQgYXJlICJncmVhdGx5IGV4YWdnZXJhdGVkLiIuIApBbHNvLCBvbmUga2V5IHBvaW50IHRvIHJlbWVtYmVyOiBldmVuIGlmIHlvdSBhcmVuIGdldHRpbmcgc3Ryb25nZXIsIHJlc2lzdGFuY2UgdHJhaW5pbmcgZHVyaW5nIHdlaWdodCBsb3NzIGlzIGV4dHJlbWVseSBiZW5lZmljaWFsIGluIHByZXNlcnZpbmcgbXVzY2xlIG1hc3MgYXMgeW91IGxvc2Ugd2VpZ2h0LiBXaGVuIHlvdSBvcGVyYXRpbmcgYXQgYSBkZWZpY2l0LCB5b3VyIGJvZHkgdXNlcyBib3RoIGZhdCBhbmQgbXVzY2xlIGZvciBlbmVyZ3kgKHRoaXMgaXMgd2h5IHNvbWUgZm9sa3MgYXJlICJza2lubnkgZmF0IiBhdCB0aGUgZW5kIG9mIHRoZWlyIHdlaWdodCBsb3NzKS4gCkl0IGEgYml0IG9mIGFuIGF3a3dhcmQgc2NlbmFyaW8gYmVpbmcgc2FuZHdpY2hlZCBiZXR3ZWVuIHRoZSB0d28sIGJ1dCBjYWxsaW5nIFYxcyBzaG92ZSBpcyB0b3RhbGx5IGZpbmUgdGhlbiByZWFjdCB0byB3aGF0ZXZlciBWMiBkb2VzIGFmdGVyLi4gCkkgdXNlIHRoZSBHRSBaV2F2ZSBzd2l0Y2hlcyBhbmQgbGlrZSB0aGVtIGEgbG90ICAgbG92ZSB0aGF0IHRoZXkgYmxlbmQgd2VsbCB3aXRoIGR1bWIgc3dpdGNoZXMgc28gSSBoYXZlIGEgY29oZXNpdmUgbG9vayB0aHJvdWdob3V0LiAKTG9vayB1cCB0aGUgIktpZG5leSBTaW5ldyBDaGFubmVsIiBhbmQgdGhhdCB3aWxsIHRlYWNoIHlvdSB3aGVyZSB5b3Ugc2hvdWxkIGJlIGRldmVsb3BpbmcgeW91ciBwb3dlci4gCk5GUyBpcyBvbmx5IGEgdGl0YW4gYmVjYXVzZSBvZiBpdHMgSGlzdG9yeSBhbmQgdGhlIGFudGljaXBhdGlvbiB0aGUgbmV4dCByZWxlYXNlIHdpbGwgYmUgbGlrZSB0aGUgZ29vZCBvbGQgZGF5cywgZXZlcnkgc2luZ2xlIHRpbWUuIFBHUiB3b3VsZCBqdXN0IGZhbGwgc2hvcnQgd2hlbiBzb21lb25lIGFza3MgIlNvIGNvdWxkIHlvdSBjdXN0b21pemU/IE5vPyBPaCwgd2VsbCB0aGVuLiIgSXRzIGEgQ3VsdCBDbGFzc2ljLiAKQWxzbywganVzdCBhcyBpbXBvcnRhbnQsIGlzIHRvIHBhdCB5b3Vyc2VsZiBvbiB0aGUgYmFjayBmb3IgdGhlIHByb2dyZXNzIHlvdSBETyBtYWtlLiBNZWFzdXJhYmxlIHByb2dyZXNzIGlzIG1vdGl2YXRpb24gYmVzdCBmcmllbmQuIApIb3BvYXRlIGZyb250ZWQgdGhlIE5TVyBSdWdieSBMZWFndWUgY29uZHVjdCByZXZpZXcgcGFuZWwgb24gV2VkbmVzZGF5IG5pZ2h0IGFmdGVyIHBsZWFkaW5nIGd1aWx0eSB0byB0aHJlZSBjb3VudHMgb2YgY29udHJhcnkgY29uZHVjdCBhbmQgb25lIG9mIHN0cmlraW5nIGp1c3QgbWludXRlcyBhZnRlciBjb21pbmcgb2ZmIHRoZSBiZW5jaCB3aGlsZSBmaWxsaW5nIGluIGZvciBOYXJyYXdlZW5hIEhhd2tzIGFnYWluc3QgRm9yZXN0dmlsbGUgRmVycmV0cy4KUmF0aGVyIHRoYW4gcmVseSBvbiBhIGZldyBkZWVwIHBvY2tldHMgdG8gcGF5IGZvciBhIG5ldyBob3NwaXRhbCBmb3IgY2hpbGRyZW4gd2l0aCB0dWJlcmN1bG9zaXMsIGhlIHNvbGQgdGhlIHNlYWxzIGZvciB0d28gb3JlICh0aGVyZSBhcmUgMTAwIG9yZSBpbiBhIERhbmlzaCBrcm9uZSkgZWFjaC4gCkl0IGludm9sdmVzIHBva2VyIG1hY2hpbmUgcGxheWVycyBzaWduaW5nIG9uIGEgZm9yIGEgc3dpcGUgY2FyZHRoYXQgYWxsb3dzIHRoZW0gdG8gc2V0IHRoZWlyIG93biBsaW1pdHMsIHNldCByZW1pbmRlcnMgYW5kIHRyYWNrIHRoZWlydGltZSBhbmRzcGVuZGluZyBvbiBnYW1pbmcgbWFjaGluZXMuIApFeHBsb2l0YXRpb24gaXMgdGFraW5nIGFkdmFudGFnZSBvZiBraWRzIGZvciBzb21lIGtpbmQgb2YgZ2Fpbi4gUHJldHR5IHN1cmUgbm8gaGlnaCBzY2hvb2wgc3BvcnRzIHRlYW0gaXMgZ2VuZXJhdGluZyBlbm91Z2ggcmV2ZW51ZSBmb3IgdGhlIHNjaG9vbCB0byBiZSBtYWtpbmcgYW55IG1vbmV5IG9mZiB0aGUga2lkcyBoYXJkIHdvcmsuIApCdXkgYSBob3VzZSwgZmluZCBhIHByb3BlcnR5IG1hbmFnZXIsIGFuZCBvZmYgdG8gdGhlIGJlYWNoIGZvciBtYXJnYXJpdGFzLiAKSm9obnNvbiAxMCBzb25nIGFsYnVtLCBpbmNsdWRlcyBzZXZlbiBvcmlnaW5hbCBudW1iZXJzIGFuZCB0aHJlZSBjb3ZlcnMsIGluY2x1ZGluZyBMZW9uYXJkIENvaGVuIEJvb2dpZSBTdHJlZXQsIExhZHkgRGF5IGFuZCBKb2huIENvbHRyYW5lIGJ5IEdpbCBTY290dCBIZXJvbiwgdGhlIGNvdmVycyBzdWdnZXN0ZWQgYnkgbGVnZW5kYXJ5IG11c2ljIHByb2R1Y2VyLCBmb3VyIHRpbWUgR3JhbW15IHdpbm5lciBMYXJyeSBLbGVpbi4KSSBhbHNvIGRvbid0IGdvIHRvIGEgY2hyaXN0aWFuIHNjaG9vbCAoaXQgc2VlbXMgbGlrZSBzb21lIGNocmlzdGlhbnMgdGhpbmsgcG9rZXIgYW5kIGdhbWJsaW5nIGlzIGZyb20gdGhlIGRldmlsKS4gTWF5YmUgeW91IHNob3VsZCByZWFkIHRoZSAyMDAgcGFnZSBkcmVzcyBjb2RlIGFuZCBwb2xpY3kgbWFudWFsIHRoZXkgaGF2ZSBhdCB5b3VyIHNjaG9vbHMuIApQZXJ2eSByaWNoIGd1eXMgYXJlIGRyYXduIHRvIHNrZXRjaHkgc2V4IHNwYXMgZm9yICdjbGFuZGVzdGluZSB0aHJpbGwnCkNoZWNrIE5ld3MgU2hvcHBlcidzIHdlYnNpdGUgZXZlcnkgbHVuY2h0aW1lIGZvciBhIG5ldyBkYWlseSBvcGluaW9uIGNvbHVtbi4gV2VkbmVzZGF5IGlzIGEgcmVhZGVyJ3MgcmFudCwgVGh1cnNkYXkgd2lsbCBjb3ZlciBhIG1vcmFsIGlzc3VlLiBGcmlkYXkgaXMgc3BvcnQsIGFuZCBNb25kYXkgaXMgYmFjayB0byB0aGUgU2hvcHBlciBSYW50IG9uIGEgdG9waWNhbCBuZXdzIHN0b3J5LiBCZSBzdXJlIHRvIGhhdmUgeW91ciBzYXkgaWYgeW91IGFncmVlIG9yIGRpc2FncmVlIHdpdGggd2hhdCB5b3UgcmVhZC4KTXkgcXVlc3Rpb246IEhvdyBzb29uIGFmdGVyIHlvdSBwYXkgb2ZmIGEgY3JlZGl0IGNhcmQgd2lsbCBpdCBiZSByZWZsZWN0ZWQgaW4geW91ciBjcmVkaXQgc2NvcmU/LiAKRG9lcyAyIGtpbmdzIGFuZCAyIDMgYmVhdCAzIHF1ZWVucz8KTm93LCB0YWtlIGFuIGV4YW1wbGUgb2YgYSA2MCB5ZWFyIG9sZCBjb3VwbGUgd2l0aCAkMSwwMDAsMDAwIGVhY2ggaW4gUlJTUHMgYW5kICQxLDAwMCwwMDAgaW4gam9pbnQgbm9uIHJlZ2lzdGVyZWQgaW52ZXN0bWVudHMuIEFzc3VtZSB0aGV5IHNwZW5kICQxMDAsMDAwIHBlciB5ZWFyIGFuZCB0YWtlIHRoZWlyIENQUCBhbmQgT0FTIHBlbnNpb25zIGF0IGFnZSA2NSwgcmVjZWl2aW5nIDgwIHBlciBjZW50IGFuZCAxMDAgcGVyIGNlbnQgb2YgdGhlIHJlc3BlY3RpdmUgbWF4aW11bXMuIFdlIHdpbGwgbWFrZSB0aGUgc2FtZSBmb3VyIHBlciBjZW50IHJldHVybiBhc3N1bXB0aW9uIG9uIGEgYmFsYW5jZWQgaW52ZXN0bWVudCBwb3J0Zm9saW8gYW5kIGFzc3VtZSByZXNpZGVuY2UgaW4gdGhlIHByb3ZpbmNlIG9mIE9udGFyaW8uCkp1c3QgcmVsYXguIFRoYW5rIHlvdSBmcm9tIGFsbCBvZiB1cyBmb3Igc2hvd2VyaW5nIGJlZm9yZSBoYW5kISA6KSBBbHNvLCBwbGVhc2UgcGxlYXNlIHBsZWFzZSBjb21tdW5pY2F0ZSB3aXRoIHlvdXIgdGhlcmFwaXN0ISBJZiB0aGUgcHJlc3N1cmUgaXMgdG9vIG11Y2gsIHRlbGwgdGhlbSEgSWYgeW91IGxpa2UgbW9yZSBwcmVzc3VyZSwgdGVsbCB0aGVtISBUb28gaG90IG9yIGNvbGQ/IFRlbGwgdGhlbSEgT3VyIGpvYiBpcyB0byBtYWtlIHlvdSBjb21mb3J0YWJsZSBlbm91Z2ggdG8gcmVsYXgsIGFuZCBpZiB0aGluZ3MgYXJlbiB0aGUgd2F5IHlvdSBsaWtlIHRoZW0sIHlvdSB3b24gYmUgcmVsYXhlZC4uIApBZnRlciBmb3VyIGRheXMsIEkgaGFkICJmdW5jdGlvbmFsaXR5LCBib3JkZXJsZXNzIGRlc2lnbiwgdmVyc2F0aWxlIGZpbmlzaGVzLCBzbWFydCBob21lIGZlYXR1cmVzLiJMZXQncyBiZWdpbiB3aXRoIGhvbWUgdGVjaC4gCk5vdCBzdXJlIGhvdyBwZW9wbGUgbWFuYWdlIHRvIGp1Z2dsZSBtdWx0aXBsZSBjb252ZXJzYXRpb25zIGF0IG9uY2UgdGhvdWdoLiBIYXZlIG9uZSBkYXRlIGZvciBzdXJlIHRoaXMgd2Vla2VuZCB3aXRoIG1vcmUgcG9zc2libHkgdG8gZm9sbG93IHNvb24gYWZ0ZXIuIFRoZSBwYXN0IGhhcyB0YXVnaHQgbWUgdG8ga2VlcCB0aGluZ3MgaW4gcGVyc3BlY3RpdmUgYW5kIG5vdCBnZXQgbXkgaG9wZXMgdXAgYWJvdXQgYW55IG9mIGl0LCBidXQgaGFyZCB0byBub3QgYmUgYXQgbGVhc3QgYSBsaXR0bGUgZXhjaXRlZCBhYm91dCBteSBpbXByb3ZpbmcgZm9ydHVuZXMgbGF0ZWx5LiAKSSB3YXMgZmluZSB0byBwYXkgZm9yIHRoZSAyLzMgZGlhcGVycyBhIGRheSBqdXN0IG5vdCB0byBzZWUgdGhlIGxvb2sgb24gaGlzIGZhY2UuIFlvdW5nZXN0IGhhcyBhbHJlYWR5IHN0YXJ0ZWQgdXNpbmcgdGhlIHRvaWxldCB3aXRoIG5vIHByb21wdHMgYXQgMTQgbW9udGhzLiAKVGhpcyBjb3VsZCBiZSBzb21ldGhpbmcgbGlrZSBhIHBob3RvIG9mIHlvdSBzaG93aW5nIHdoYXQgeW91IGRvaW5nIHRoZSBBTUEgYWJvdXQgd2l0aCBhIHNpZ24gdGhhdCBoYXMgeW91ciB1c2VybmFtZSBhbmQgdGhlIGRhdGUuIEl0IGNvdWxkIGFsc28gYmUgZG9jdW1lbnRzIChwYXJ0aWFsbHkgcmVkYWN0ZWQgaWYgZGVzaXJlZCkgd2l0aCBhIG5vdGUgdGhhdCBoYXMgdGhlIHVzZXJuYW1lIGFuZCB0aGUgZGF0ZS4uIApIYXZlbiBzZWVuIGFueSBnYW1lIHJlY2VudGx5IHRoYXQgY2FwdHVyZXMgdGhlIG11bHRpcGxheWVyIHN0b3J5IGFuZCBwYWNpbmcgd2Ugc2F3IGluIHNvbWUgb2YgdGhvc2Ugb2xkZXIgZ2FtZXMuIApPZiBjb3Vyc2UgaGluZ2VzIGFyZSBhIHdlYWsgc3BvdCBidXQgaWYgeW91IGhhdmluZyBhICJzYWZldHkgZG9vciIgdXN1YWxseSB5b3UgaGF2ZSBtZXRhbCByb2RzIHRoYXQgZ29lcyBpbnRvIHRoZSB3YWxsIG9uIHRoZSBzYW1lIHNpZGUgYXMgdGhlIGhpbmdlcyB3aGVuIHRoZSBkb29yIGlzIGNsb3NlZCwgc28gaWYgdGhlIGRvb3IgaXMgbG9ja2VkIGFuZCBjbG9zZWQgSSBiZWxpZXZlIGl0IHdpbGwgc3RheSBjbG9zZWQgcmVnYXJkbGVzcyBpZiB0aGUgaGluZ2VzIGFyZSB0aGVyZSBvciBub3QuIEFsc28gdGhlIGhpbmdlcyB0aGVtc2VsdmVzIGFyZSBub3QgZXhhY3RseSBlYXN5IHRvIHdvcmsgd2l0aCwgdGhleSBhcmUgdmVyeSBzbGltIGFuZCB5b3UgbmVlZCB0byBnbyBhdCB0aGVtIGZvciBxdWl0ZSBzb21lIHRpbWUgdG8gbG9vc2VuIHRoZW0uIApDb3VuY2lsIGxhd3llcnMgd2lsbCBhcHBlYXIgYmVmb3JlIHRoZSBjb21taXNzaW9uIGxhdGVyIHRoaXMgbW9udGggdG8gYXJndWUgdGhlaXIgY2FzZS4gCkpha2UncyBEaW5lciBvd25lciwgTHlsZSBIaWNrcywgc2F5cywgIldoZW4gbXkgZGF1Z2h0ZXIgQ2FycmllIHdhcyBhY2NlcHRlZCBpbnRvIEhhYml0YXQncyBIb21lb3duZXJzaGlwIFByb2dyYW0gaW4gMjAwNiwgSSB3YW50ZWQgdG8gc3RhcnQgYSBmdW5kcmFpc2luZyBlZmZvcnQgdGhhdCB0aGUgcmVndWxhciBKb2UgY291bGQgYmUgYSBwYXJ0IG9mLiBGcmFuayBQYXRrYSwgdGhlIGxhdGUgUmljaGFyZCBTbWl0aCBhbmQgSSBkZXZlbG9wZWQgSG9sZCBFbScgZm9yIEhhYml0YXQsIHdlZWtseSBwb2tlciBnYW1lcyB0byByYWlzZSBtb25leSBmb3IgQmVuZCBBcmVhIEhhYml0YXQuIEZvciBzZXZlcmFsIHllYXJzLCBKYWtlJ3MgRGluZXIgaGFzIGNvbnNpc3RlbnRseSBoYWQgMiAzIHRhYmxlcyBwbGF5aW5nIGV2ZXJ5IE1vbmRheSBuaWdodC4KJCAyMC4wMDAgZnIgZGVuIGVyc3RlbiBQbGF0ei4iUGFydHkgIEFscyBlaW5lIGRlciBlcmZhaHJlbnN0ZW4gIENvbXBhbmllcyBtaXQgZGVuIG1laXN0ZW4gIG4gdW5kIGRlbiBoY2hzdGVuIFVtc3R6ZW4gaXN0IFBhcnR5ICBzZWl0IDE5OTcgYXVzIGRlbSBLcmVpcyBkZXIgZmhyZW5kZW4gIFJvb21zIG5pY2h0IG1laHIgd2VnenVkZW5rZW4uIERhcyAgZ2FyYW50aWVydCBiZWkgZGVuICBlbiBtb25hdGxpY2ggYmVyIDYgTWlsbGlvbmVuIERvbGxhciBhbiBQcmVpc2dlbGRlcm4uIApQb2tlciBvbiBUViBoYXMgYmVlbiB0aGUgY2F0YWx5c3QgdGhhdCBhbGxvd3MgbWlsbGlvbnMgb2YgcGVvcGxlIHRvIHZpZXcgcmVhbCBwb2tlciBiZWluZyBwbGF5ZWQgYnkgdG9kYXkncyB5b3VuZyBndW5zIGFuZCBwb2tlciBsZWdlbmRzLiBBIGRheSBkb2VzIG5vdCBnbyBieSB3aXRob3V0IGFkdmVydGlzaW5nIGZvciBhbm90aGVyIFRleGFzIEhvbGQnRW0gVFYgcG9rZXIgc2NoZWR1bGVkIGV2ZW50IGZvciBjYWJsZSBvciB0ZWxldmlzaW9uLiBJdCBpcyBiZWNvbWluZyB0aGUgYmFzaXMgZm9yIGNvcnBvcmF0ZSBpbnZlc3RtZW50IGluIGEgZ3Jvd2luZyBpbmR1c3RyeSBhbmQgYSBtb3RpdmF0aW9uIGZvciBwbGF5ZXJzIHRvIGVudGVyIG51bWVyb3VzIHRvdXJuYW1lbnRzIHRoYXQgb2ZmZXIgbWlsbGlvbnMgb2YgZG9sbGFycy4gU29mdHdhcmUgaXMgYmVpbmcgZGV2ZWxvcGVkIGZvciBoYW5kIGhlbGQgZGV2aWNlcyBhbmQgY2VsbCBwaG9uZXMgdG8gcGxheSBwb2tlci4gRGVhbHMgYXJlIGJlaW5nIG1hZGUgdG8gYnJvYWRjYXN0IGxpdmUgdG91cm5hbWVudHMgb3ZlciB0aGUgSW50ZXJuZXQgZnJvbSBsYW5kIGJhc2VkIGNhc2lub3MuIEFuZCBpZiB0aGF0J3Mgbm90IGVub3VnaCwgdGhlbiB0aGVyZSBhcmUgYSBncm93aW5nIG51bWJlciBvZiB0ZWxldmlzaW9uIHNob3dzIGJhc2VkIG9uIHBva2VyLiBFdmVuIGNoYXJpdHkgZXZlbnRzIGFyZSBicmluZ2luZyBpbiBtb25leSBmb3IgdGhvc2Ugd2hvIG5lZWQgaXQgYmVoaW5kIHRoZSBhZmZlY3Rpb24gc3RhcnRlZCBieSB0ZWxldmlzZWQgdG91cm5hbWVudCBldmVudHMuIFBsdXMgd29tZW4gYXJlIGNvbWluZyB0byB0aGUgdGFibGVzIGluIGRyb3ZlcywgYWxvbmcgd2l0aCBtYWdhemluZXMgb24gZGlmZmVyZW50IHZlcnNpb25zIG9mIHRoZSBnYW1lIGxpa2UgVGV4YXMgSG9sZCdFbSBtYXJrZXRlZCBlc3BlY2lhbGx5IHRvIHdvbWVuLiBBbmQgdGhlIGVuZCBpcyBub3QgaW4gc2lnaHQgZm9yIHRoaXMgdHJlbmQgYXMgbW9yZSBwZW9wbGUgbGVhcm4gdG8gZW5qb3kgYW5kIHdhdGNoIHRoZSBnYW1lIG9mIHBva2VyLgpTaGFubm9uIE1vcnRsYW5kLCBwdWJsaWMgcmVsYXRpb25zIG1hbmFnZXIgZm9yIEhvcnNlc2hvZSBDYXNpbm8gQ2xldmVsYW5kIGFuZCBUaGlzdGxlRG93biwgc2FpZCB0aGUgZXhwYW5zaW9uIHdpbGwgYWRkIDk3IFZMVHMgdG8gdGhlIGN1cnJlbnQgMzIgbWFjaGluZXMuIApIb3cgdG8gcGljayB0aGUgcmlnaHQgbWFzc2FnZQoiTWFueSBndWVzdHMsIG9uY2UgdGhleSd2ZSBlbnRlcmVkIHRoZWlyIHBvb2wgdmlsbGEsIGRvbid0IGNvbWUgb3V0LCIgZXhwbGFpbnMgUnV1ZCBIdWxzY2hlciwgQmFueWFuIFRyZWUncyBkaXJlY3RvciBvZiByb29tcy4gVGhlIDEzIGVub3Jtb3VzIChuZWFybHkgNiwwMDAgc3F1YXJlIGZlZXQpIHNwYSBwb29sIHZpbGxhcyAoJDEsMjUwKSBoYXZlIGtpbmcgc2l6ZSBiZWRzIGluIGdsYXNzIHdhbGxlZCBwYXZpbGlvbnMsIHByaXZhdGUgb3V0ZG9vciBzcGEgcGF2aWxpb25zIG92ZXJsb29raW5nIHRoZSBsYWdvb24sIHN0ZWFtIHJvb21zIGFuZCBzYXVuYXMsIG91dGRvb3Igc3Vua2VuIGJhdGhzLCBsYXAgcG9vbHMsIGFuZCBKYWN1enppcywgYWxsIHN1cnJvdW5kZWQgYnkgbGlseSBwb25kcywgcGFsbSB0cmVlcywgZnJhbmdpcGFuaSwgamFzbWluZSwgYW5kIG9yY2hpZHMuIAoiVGhlIGZhY3QgdGhhdCBJJ20gaW50byB3b21lbiwgdGhleSdyZSBhbGwgaW50aW1pZGF0ZWQgYnkgaXQuIApUaGVyZSBhbHNvIHRoZSBpZGVhIG9mIGdyaWVmLiBUaGlzIGlzIHVzdWFsbHkgZG9uZSB0aHJvdWdoIHdvcmtpbmcgd2l0aCB0aGUgTHVuZyBjaGFubmVsLiBUaGlzIGNhbiBiZSB0aHJvdWdoIG1vdmluZyBxaSBhbmQgYmxvb2QsIG9yIHRocm91Z2ggcmVjb25uZWN0aW5nIHRoZSBMdW5ncyB0byB0aGUgS2lkbmV5cy4gClVuIG1vdCBxdWkgdmV1dCBkaXJlIHRvdXQgZXQgcmllbiwgZW4gcmFpc29uIGRlIGwgZmFpYmxlc3NlIGR1IGJhZ2FnZSBsZXhpY2FsIGFzc29jaSBhdSBtb25kZSBkZXMgb2RldXJzLi4gClRoZXJlIGFyZSBhbHNvIGFtYXppbmcgYm9udXMgb2ZmZXJzIGZvciB0aGUgZmlyc3QgdGltZSBtb2JpbGUgdXNlcnMuIApDb21wYXJlIHRoYXQgdG8gcGxheWVyIEIsIHRocm93aW5nIDEwMCBwaXRjaGVzIGV2ZXJ5IDUgZGF5cyB3aWxsIGhhdmUgbWFkZSA0IHN0YXJ0cyBhbmQgdGhyb3duIDQwMCBwaXRjaGVzLiAKVGhlIGNvbG9uaXN0cyBvZiBHbGllc2UgNDQ1IGNsYWltIHRvIGhhdmUgcmVjb3ZlcmVkIHRoZSBwcm9iZSBlbiByb3V0ZSBhbmQgaGFkIGl0IG9uZSBkaXNwbGF5IGluIG9uZSBvZiB0aGVpciBvcmJpdGFsIGhhYml0YXRzIGZvciBnZW5lcmF0aW9ucyBhbmQgYnJvYWRjYXN0IHRoZSBmdWxsIHJlY29yZGluZyBvbiB0aGUgcGxhdGUgdG8gbnVtZXJvdXMgbmVpZ2hib3JpbmcgY29sb25pZXMuIApVU01DIFRveXMgZm9yIFRvdHMgYXJlIGluIGZ1bGwgc3dpbmcKWWVzISBJdCBpcyBjcmF6eSB0aGUgYW1vdW50IG9mIGRpc3Jlc3BlY3QgeW91IGNhbiBleHBlcmllbmNlIGluIGEgc2Nob29sLiBJIGRvbid0IHdhbnQgdG8gZ2VuZXJhbGl6ZSB0byBhbGwgdGVhY2hlcnMgKGJlY2F1c2UgSSBkbyBrbm93IHNvbWUgYW1hemluZyBvbmVzIHRoYXQgZGVzZXJ2ZSBzbyBtdWNoIHByYWlzZSksIGFuZCBJIHdhbnQgdG8gZW1waGFzaXplIHRoYXQgSSBhbSBhYnNvbHV0ZWx5IHBybyB0ZWFjaGVyICh0aGV5IGhhdmUgc28gbWFueSByZXNwb25zaWJpbGl0aWVzIGFuZCBkb24ndCBnZXQgcGFpZCBhIGZyYWN0aW9uIG9mIHdoYXQgdGhleSBkZXNlcnZlKS4gQnV0IEkgbGlzdGVuIHRvIHRoZXNlIHRlYWNoZXJzIHNjcmVhbSBhbmQgcHVuaXNoIHRoZWlyIHN0dWRlbnRzIGFsbCBkYXkgbG9uZywgYW5kIHRoZW4gdGhleSBnbyBhbmQgZGlzcGxheSB0aGUgc2FtZSwgaWYgbm90IHdvcnNlLCBiZWhhdmlvcnMgd2hlbiB0aGV5IGhhdmUgdG8gc2l0IHRocm91Z2ggYSAzMCBtaW51dGUgcHJlc2VudGF0aW9uLiAKWWVhaCBpIGR1bm5vLiBNZW1lcyBhc2lkZSwgeW91IGNhbiBmaW5kIG9ibm94aW91cyBmYW5ib3lzIG9mIGFueSBvdGhlciBicmFuZCBhcyB3ZWxsLiBJIHdhcyB0aGlua2luZyBpdCB3YXMgcHJvYmFibHkgc29tZXRoaW5nIHNwZWNpZmljIGFib3V0IHdvcmtpbmcgb24gaG9uZGFzLiAKSSB0aG91Z2h0IEkgc2F3IGhpbSBpbiBvbmUgb2YgdGhlc2UgYWJhbmRvbmVkIGluZHVzdHJpYWwgYnVpbGRpbmdzLCBseWluZyBkb3duLCBidXQgdGhlIGxpZ2h0cyBncmV3IHVuYmVhcmFibHkgc2hhcnAgYW5kIEkgbG9zdCBteSB3YXkuIApNdWNoIGFwcHJlY2lhdGVkLCBpdCdzLiBIYXJkLiAKSW4gZ2FtZSwgSSB0aG91Z2h0IDY1Y2Mgd2FzIGFuIG9rYXkgY2FsbCBidXQgcGVvcGxlIGFyZSByaWdodC4gClRoaXMgaXMgd2h5IEkgaGF2ZSBjaGFuZ2VkIHRhY3RpY3Mgd2l0aCBteSB5b3VuZ2VzdCBkYXVnaHRlci4gSW5zdGVhZCBvZiBiZWluZyB0aGUgZmF0aGVyIHRoYXQgY2xlYW5lZCBoaXMgZ3VuLCBvciBzaGFycGVuZWQgaGlzIGtuaWZlIHdoZW4gdGhlIGJveWZyaWVuZCBjYW1lIG92ZXIsIEkgZGVjaWRlZCB0aGF0IHRoZSBiZXN0IHdheSB0byBoZWxwIG15IGRhdWdodGVyIG1ha2Ugc21hcnRlciBkZWNpc2lvbnMgYWJvdXQgYm95cyBpcyB0byB0cmVhdCBoZXIgbW90aGVyIHdpdGggbG92ZSBhbmQgcmVzcGVjdC4gU3VyZSwgbXkgd2lmZSBhbm5veXMgbWUgYXQgdGltZXMsIGJ1dCBJIGRvbiBsYXNoIG91dCBhdCBoZXIsIEkgZG9uIGluc3VsdCBoZXIsIEkgaGF2ZSBuZXZlciByYWlzZWQgYSBoYW5kIHRvd2FyZHMgaGVyIGluIGFuZ2VyLiBJIHJhaXNlIG15IHZvaWNlLCBidXQgdGhhdCBtb3JlIGJlY2F1c2UgSSBhbSBnb2luZyBkZWFmIGFuZCBkb24gcmVhbGl6ZSB0aGF0IEkgYW0gcmFpc2luZyBteSB2b2ljZSwgSSBoYXZlIG5ldmVyIHJhaXNlZCBpdCBpbiBhbmdlci4KSXQgZGVmaW5pdGVseSBibGV3IG15IG1pbmQuIApMdWNpYSBIb3RlbHMgd2l0aCBQb29sc1BldCBGcmllbmRseSBIb3RlbHMgaW4gU3QuIEx1Y2lhUG9wdWxhciBTdC4gClRoaXMgaW5jbHVkZXMgcGljdHVyZXMgb2Ygc2NyZWVucyBhbmQgcGhvdG9zIHdoZXJlIHRoZSBpbnRlcmVzdCBpcyB0aGUgY29udGVudHMgb2YgYSBzY3JlZW4uIApNYXliZSB0aGUgb25seSBwZW9wbGUgd2hvIGNhbiByZXZlcnNlIHRoZSBjdXJzZSBhcmUgdGhvc2UgbW9ua3MuIE9yIG1heWJlIHRoZXkgaGF2ZSB0byBkZXN0cm95IGJhYmF1IGhpbXNlbGYuIApOYWdhbGFuZCBSZWNlbnRseSwgTmFnYWxhbmQgcGFzc2VkIFRoZSBOYWdhbGFuZFByb2hpYml0aW9uIG9mIEdhbWJsaW5nIGFuZCBQcm9tb3Rpb24gYW5kIFJlZ3VsYXRpb24gb2YgT25saW5lR2FtZXMgb2YgU2tpbGwgQmlsbCwgMjAxNS4gVGhpcyBiaWxsIGJhbnMgYWxsIGtpbmRzIG9mIGdhbWJsaW5nIGludGhlIHN0YXRlLiBIb3dldmVyLCB0aGVyZSBpcyBhIHNjb3BlIGZvciAiZ2FtZXMgb2Ygc2tpbGwuIiAuCkVkaXQ6IHRvIGFuc3dlciB5b3VyIHF1ZXN0aW9uLCBJIHVzdWFsbHkganVzdCB0ZWxsIHBlb3BsZSB3aGF0IHRoZSBuZXcgcGxhbiBpcyBhbmQgd2h5ICAgYnJpZWZseS4gClRoaXMgaXMgYSBzdHJvbmcgaGFuZCwgcGFydGljdWxhcmx5IGlmIHRoZSBib2FyZCBkb2Vzbid0IGNvbWUgdXAgd2l0aCBhIHBvc3NpYmxlIGxvdy5bdCB0IHQgdF0gUGxheSBmb3VyIGhpZ2ggY2FyZHMsIGV2ZW4gd2l0aCBhIHBhaXIgb3IgdHdvIHBhaXJzLiBBcyB5b3UgZ2FpbiBleHBlcmllbmNlIGFuZCBsZWFybiB5b3VyIG9wcG9uZW50cycgcGxheWluZyBzdHlsZXMgYW5kIGhhbmQgc2VsZWN0aW9uLCB5b3UgY2FuIHBsYXkgYSBmZXcgbW9yZSBzdGFydGluZyBoYW5kcy4gClNvLCB0aGUgb2RkcyB0aGF0IHdlIGdldCBlaXRoZXIgdGhlIG90aGVyIHF1ZWVuIG9yIHRoZSBvdGhlciB0d28gY2FyZHMgaXMgMy8xMDgxLiAKSSB3b3VsZCBsaWtlIHRvIGdpdmUgYW4gYWx0ZXJuYXRlIHZpZXcgb24gdGhlIG1hdHRlci4gTG9MIGlzIGFuIGludmVzdG1lbnQgYW5kIGEgaG9iYnkvaW50ZXJlc3QuIApTZW1lbiBpcyBhbHNvIGtub3duIHRvIHNvZnRlbiB0aGUgY2Vydml4LCB3aGljaCBjYW4gYWxzbyBhaWQgaW4gdGhlIHByb2Nlc3MuIFNvbWUgd29tZW4gYXJlIGtub3duIHRvIGhhdmUgdGhlaXIgcGVyaW9kcyBhZnRlciBoYXZpbmcgc2V4Li4gCkQzIGlzIG9uZSBnYW1lIHRoYXQgd2FzIHJlbGVhc2VkIDcgeWVhcnMgYWdvLiBUaGVyZSBhcmUgTk9UIGEgcGxldGhvcmEgb2YgQVJQR3MgdGhlIHdheSB0aGVyZSBhcmUgYSBwbGV0aG9yYSBvZiBTaG9vdGVycyBvciBldmVuIE1PQkEvTU1PIGdhbWVzLiAKSWYgeW91IGRvaW5nIHByb2NlZHVyZXMgdW5kZXIgeCByYXksIHlvdSBhY3R1YWxseSBzZWUgdGhpcyByZXZlcnNlIGNvbG9yIHNjaGVtZSBtb3JlIG9mdGVuLCBhbHNvIGR1ZSB0byBjb252ZW50aW9uIChhbmQgaXQgbWF5IGJlIGVhc2llciB0byBmb2xsb3cgYmxhY2sgc3R1ZmYgbW92aW5nIG9uIGEgd2hpdGUgYmFja2dyb3VuZCwgYW5kIHdoZW4gYW4gaW1hZ2UgaXMgc2F2ZWQgeW91IGtpbmQgb2YgaGF2ZSBhIHNlbnNlIHJpZ2h0IGF3YXkgdGhhdCB0aGlzIGlzIGEgbG93ZXIgcXVhbGl0eSBzdGlsbCBpbWFnZSBmcm9tIGEgdmlkZW8pLi4gCkhhbWlsdG9uIGZhY2luZyBtb3JlIHRoYW4gb25lIHByb2JsZW0KQ29tbWUgb24gbGUgZGlyYWl0IGRhbnMgbGEgc3BocmUgTFJFTSwgbGUgQ29uc2VpbCBkZSBQYXJpcyBmb25jdGlvbm5lIGVuIGFwcGFyZW5jZSBlbmNvcmUgY29tbWUgZGFucyAgbCdhbmNpZW4gbW9uZGUgIDogdW5lIG5ldHRlIG1ham9yaXQgcG91ciBsYSBjb2FsaXRpb24gc29jaWFsaXN0ZXMgY29sb2dpc3RlcyBjb21tdW5pc3RlcyAoOTEgY29uc2VpbGxlcnMgYXUgdG90YWwsIG1ham9yaXQgIDgyIHZvaXgpIGV0IHVuZSBvcHBvc2l0aW9uIHJlZ3JvdXBlIGF1dG91ciBkJ3VuIHBsZSBMUiAoNTUgY29uc2VpbGxlcnMgbHVzIHNvdXMgbCd0aXF1ZXR0ZSBVTVAgZW4gMjAxNCkgZXQgVURJIE1PREVNICgxNiBjb25zZWlsbGVycyksIGRvbmMgdW4gY2xpdmFnZSBjbGFzc2lxdWUgZ2F1Y2hlL2Ryb2l0ZS4gCkFuZCBzb21ldGltZXMgdGhlIG10dHMgZG9udCBwb3AgdXAgZXZlbiB0aG91Z2ggeW91IGVudGVyZWQuIApNYXNzYWdpbmcgdGhlc2Ugc2Vuc29ycyBjYW4gZGVjcmVhc2UgdGhlIGhlYXJ0IHJhdGUsIHNvbWV0aW1lcyBlbm91Z2ggdG8gY2F1c2UgZmFpbnRpbmcuIEluIHNvbWUgcGVvcGxlLCB0aGUgc2Vuc29ycyBhcmUgc28gc2Vuc2l0aXZlIHRoYXQgbWVyZWx5IHRpZ2h0ZW5pbmcgYSBuZWNrdGllIG9yIHR1cm5pbmcgdGhlIGhlYWQgY2FuIG1ha2UgdGhlbSBwYXNzIG91dC4gCkl0IHJlYWxseSBpcyBzb21ldGhpbmcgdmVyeSBkaWZmZXJlbnQgdG8gd2hhdGV2ZXIgZWxzZSB5b3UgZmluZCBpbiBTaWVtIFJlYXAuIApTcXVpZGRpbmJvb3RzICAzIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhlIGdhbWVzIG9uIFN0YXJzIHdlcmUgYSBsb3QgdG91Z2hlciB0aGFuIHRoZSBSdXNoIGdhbWVzIG9uIEZUUC4gCkV2ZXJ5b25lIHdhcyBsb29raW5nIGF0IG1lOyBubyBvbmUgbWFkZSBhIHNvdW5kLiAKSWYgeW91IGRpZyBhIGxpdHRsZSB0aGVyZSBhcmUgYSB0b24gb2Ygb2NjdXBhdGlvbiBwcm9maWxlcyB0aGF0IGdpdmUgeW91IGEgZ29vZCBvdmVydmlldyBvZiBwb3RlbnRpYWwgd2FnZXMvc2FsYXJpZXMgYW5kIGhvdyBtdWNoIHNjaG9vbGluZyBpdCB0YWtlcyB0byBnZXQgdGhlcmUuLiAKQXVidXJuIGlzIHJlc3RlZCBhbmQgcmVhZHkgYWZ0ZXIgYSB3ZWVrIG9mZiBmb2xsb3dpbmcgYSBob3JyaWJsZSBmaXJzdCBoYWxmIHRoYXQgY29udHJpYnV0ZWQgdG8gYSAzNSAyMSBsb3NzIGF0IExTVS4gQVUgY29hY2hlcyBzYXkgdGhleSdyZSBzaGFraW5nIHVwIHRoZSBvZmZlbnNlIGFuZCBkZWZlbnNlIGEgYml0LCBidXQgbm8gbm90YWJsZSBwZXJzb25uZWwgc2hpZnRzIGhhdmUgY29tZSBhYm91dC4gCkthbWFsYSB0b3AgZG9ub3IgaXMgVGltZSBXYXJuZXIsIHdoaWNoIG93bnMgQ05OLiBXaG8gaGFzIGJlZW4gZ2l2aW5nIGhlciBhIHRvbiBvZiBjb3ZlcmFnZSBhbmQgYXMgZWFybHkgYXMgMS8yOSwgYSB0b3duIGhhbGwuLiAKUm9iZXJ0IFdpbGxpYW1zb24gSUlJICAgUHJvZmVzc2lvbmFsIFBva2VyIFBsYXllciBSZXZpZXcgU2VyaWVzCk5vIGF0dGFja3Mgd2VyZSBldmVyIGNvbW1pdHRlZCBieSB0aGUgQWZnaGFuIGdvdmVybm1lbnQgYWdhaW5zdCB0aGUgVVMgbm9yIGJ5IHRoZSBJcmFxaXMuLiAKQSByZXBsYWNlbWVudCByZXNpc3RvciBhc3NlbWJseSBydW5zIGFib3V0ICQzMCBhbmQgaXMgcHJldHR5IGVhc3kgdG8gcmVwbGFjZS4gSWYgaXQgZmFpbHMgYWdhaW4sIHlvdSBzaG91bGQgcHJvYmFibHkgY2hlY2sgdGhlIGN1cnJlbnQgZHJhdyBvZiB0aGUgYmxvd2VyIG1vdG9yLiAoSWYgeW91J3IgaGFuZHksIHlvdSBjYW4gYWxzbyByZXBhaXIgaXQgeW91cnNlbGYgZm9yIGEgY291cGxlIG9mIGJ1Y2tzIGJ5IGdldHRpbmcgYSB0aGVybWFsIGZ1c2UgZnJvbSBSYWRpbyBTaGFjayBhbmQgY3JpbXBpbmcgaXQgaW4gcGxhY2Ugb2YgdGhlIG9sZCBmdXNlLiAoVGhlc2UgdGhlcm1hbCBmdXNlcyBhcmUgaW5zaWRlIHNldmVyYWwgYXBwbGlhbmNlcywgc3VjaCBhcyBtaWNyb3dhdmVzIHRvIHByb3RlY3QgdGhlbSBmcm9tIGdldHRpbmcgdG9vIGhvdC4pIChJdCBpcyBpbnNpZGUgdGhlIGFzc2VtYmx5ICAgYmVuZCB0aGUgZm91ciB0YW5ncyBzdHJhaWdodCBhbmQgcHVsbCB0aGUgY292ZXIgb2ZmIGZvciBhY2Nlc3M7IGJlIHN1cmUgdG8gcHV0IGl0IGJhY2sgdG9nZXRoZXIuKSAoRnVsbCBBbnN3ZXIpClNpIGwnb24gcGV1dCBkcGxvcmVyIGxlcyBjb25zcXVlbmNlcyBkZSBjZXR0ZSBkY2lzaW9uLCBpbCBwYXJhdCBkaWZmaWNpbGUgZGUgcmVtZXR0cmUgZW4gY2F1c2UgbGVzIGp1c3RpZmljYXRpb25zIGFwcG9ydGVzIHBhciBsZSBDb25zZWlsIENvbnN0aXR1dGlvbm5lbC4gTGEgc2V1bGUgY3JpdGlxdWUgcG91cnJhaXQgc2UgcmFwcG9ydGVyICBsYSBkaWZmcmVuY2UgZGUgdHJhaXRlbWVudCBxdWUganVzdGlmaWUgbGEgZGlmZnJlbmNlIGRlIHNleGUgZGFucyBsZSBjb3VwbGUuIApIaXMgd29yayB3YXMgc2hhcmVkIGZhciBhbmQgd2lkZS4gClRhZyBzcG9pbGVycyBmb3IgRERMQyBtb2RzIGFuZCBub24gRERMQyBtZWRpYS4gRm9ybWF0IG5vbiBERExDIHNwb2lsZXIgdGl0bGVzIGxpa2U6YS4gQXR0cmlidXRlIHRoZSBhcnRpc3QgaW4gdGhlIHRpdGxlIGFuZCBnaXZlIGEgZGlyZWN0IGxpbmsgdG8gdGhlIHNvdXJjZSBwYWdlIGZvciBhbGwgc3VibWlzc2lvbnMgdXNpbmcgZmFuYXJ0LiAKVGhlcmUgYXJlIGEgY291cGxlIGJsb2NrcyB3aGVyZSBpdCBjYW4gZXh0ZW5kIGFzIGZhciBhcyAyMDAgZWFzdCwgb3IgYXMgZmFyIHdlc3QgYXMgdGhlIHRyYXggbGluZS4gClRoZSB3YXkgSSBsb29rIGF0IGl0LCBpbiB0ZXJtcyBvZiBteSBkZWZhdWx0IHN0cmF0ZWd5LCB0aGVyZSBhcmUgdmVyeSBmZXcgcGVvcGxlIGluIHRoZSB3b3JsZCB0aGF0IGNvdWxkIGJlYXQgbWUganVzdCBwbGF5aW5nIGEgdG90YWxseSB0aGVvcnkgYmFzZWQgc3R5bGUuIFNvIGJ5IG1ha2luZyBhZGp1c3RtZW50cyB0byBwZW9wbGUgYmVmb3JlIGtub3dpbmcgd2hhdCB0aGV5IGFyZSBkb2luZywgSSBnbyBmcm9tIGZvciBzdXJlIHdpbm5pbmcsIHRvIG1heWJlIHdpbm5pbmcuIApCdXR0cyBvbiBob3Qgc2VhdCBpbiBTTkMKSXQncyBqdXN0IGFubm95aW5nIGhvdyB5b3UgY2FudCBjYWxsIGluIGFuZCB5b3UgaGF2ZSB0byBzdGF5IG5lYXJieSwgb3RoZXJ3aXNlIHlvdSBtaWdodCBtaXNzIGdldHRpbmcgY2FsbGVkLiBZZXN0ZXJkYXksIEkgd2FzIHdhaXRpbmcgZm9yIDMwIG1pbnMgYW5kIGdvdCBjYWxsZWQsIHNvIEkgaGVhZGVkIHRvIHRoZSBiYWNrIHBvZGl1bSBzaW5jZSB0aGF0cyB3aGVyZSB0aGUgZmxvb3Igd2hvIHdhcyBhbm5vdW5jaW5nIG5hbWVzIG9uIHRoZSBtaWMgd2FzLCBlbmRlZCB1cCB3YWl0aW5nIGxpa2UgMiAzIG1pbnMgYXMgaGUgd2FzIGhlbHBpbmcgc29tZW9uZSBlbHNlIGFuZCB0aGVuIGhlIHRvbGQgbWUgMS8zIGFuZCAyLzUgc2VhdGluZyBJIG5lZWQgdG8gZ28gdG8gdGhlIGZyb250ICh3aGljaCBtYWtlcyBzZW5zZSwgYnV0IHNpbmNlIGl0IHdhcyBhIG5ldyByb29tLCBJIGd1ZXNzIEkgd2Fzbid0IHRoaW5raW5nKSBhbmQgYnkgdGhlIHRpbWUgSSBnb3QgdG8gdGhlIGZyb250IHRoZXkgaGFkIGdpdmVuIG15IHNlYXQgYW5kIEkgZW5kZWQgdXAgd2FpdGluZyAyMCBtb3JlIG1pbnMuIApGaXJzdCBvZmYgSFVHRSBodWcsIEkgYW0gc28gc29ycnkgdGhhdCB5b3UgYXJlIGdvaW5nIHRocm91Z2ggdGhpcy4gSSBtb3ZlZCB0byB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgd29ybGQgZm9yIGdyYWQgc2Nob29sIGFuZCBteSBodXNiYW5kLiBJIGdyZXcgdXAgd2l0aCBteSBwYXJlbnRzIGRpdm9yY2luZyB3aGVuIEkgd2FzIGluIGdyYWRlIHNjaG9vbCBhbmQgYmVjYXVzZSBvZiBvdXIgdmVyeSBjb25zZXJ2YXRpdmUgcmVsaWdpb24gd2FzIGJ1bGxpZWQgYW5kIHNoYW1lZCBiZWNhdXNlIG15IHBhcmVudHMgd2VyZSBkaXZvcmNlZC4gSSBzd29yZSB0aGF0IGlmIEkgZXZlciBnb3QgZGl2b3JjZWQgSSB3b3VsZCBuZXZlciByZW1hcnJ5LgpTb21ldGltZXMgeW91IGNhbiBzaXQgdXAgbGF0ZSBhdCBuaWdodC4gCkJlaW5nIGFyb3VuZCBjaGlsZHJlbiBmcm9tIHNpbWlsYXIgYmFja2dyb3VuZHMgd2lsbCBzb2Z0ZW4gdGhlIGFkanVzdG1lbnQuIAo3IG9mIG15IHJlYWwgbGlmZSBmcmllbmRzIGhhdmUgcXVpdCBhcyBvZiB0aGlzIG1vcm5pbmcgYmVjYXVzZSBvZiBEUFMgcXVldWVzLiBOb3QgZXhhZ2dlcmF0aW5nLiBBbmQgSSdtIHVwc2V0LiBTb21ldGhpbmcgbmVlZHMgdG8gYmUgZG9uZS4gQnV0IG5vIGFtb3VudCBvZiBpbmNlbnRpdmVzIGFyZSBnb2luZyB0byBtYWtlIHBlb3BsZSB0YW5rIGFuZCBoZWFsIGxvbC4gVW5sZXNzIGEgbmV3IGNsYXNzIGlzIGdvaW5nIHRvIGNvbWUgb3V0LCB3aGljaCB3b24gaGFwcGVuLCBub3RoaW5nIHdpbGwgY2hhbmdlLgpBZnRlciBiZWluZyBhc2tlZCBmb3IgaGlzIGxpY2Vuc2UgYW5kIHJlZ2lzdHJhdGlvbiwgQ2FzdGlsZSBoYWQgdG9sZCBPZmZpY2VyIFlhbmV6IHRoYXQgaGUgaGFkIGEgZmlyZWFybSwgdG8gd2hpY2ggWWFuZXogcmVwbGllZCAiRG9uIHJlYWNoIGZvciBpdCB0aGVuIiwgYW5kIENhc3RpbGUgc2FpZCAiSSBJLCBJIHdhcyByZWFjaGluZyBmb3IuIiBZYW5leiBzYWlkICJEb24gcHVsbCBpdCBvdXQiLCBDYXN0aWxlIHJlcGxpZWQgIkkgbm90IHB1bGxpbmcgaXQgb3V0IiwgYW5kIFJleW5vbGRzIHNhaWQgIkhlIG5vdC4iIFlhbmV6IHJlcGVhdGVkICJEb24gcHVsbCBpdCBvdXQiIGFuZCB0aGVuIHNob3QgYXQgQ2FzdGlsZSBzZXZlbiB0aW1lcyBhcyBoZSByZWFjaGVkIGZvciBoaXMgZHJpdmVyIGxpY2Vuc2VLYXJsX0Nyb3NzICAgMTc2IHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnb0kgaG9uZXN0bHkgY2FuIGJlbGlldmUgdGhhdCBwZW9wbGUgc3RpbGwgY2FuIGFjY2VwdCB0aGF0IEFtZXJpY2FucyBjaG9zZSB0byB2b3RlIGZvciBUcnVtcCBvZiB0aGVpciBvd24gYWNjb3JkLiJObywgbm8sIG5vLiBQZW9wbGUgYXJlIHRvbyBkdW1iIHRvIG1ha2UgdXAgdGhlaXIgb3duIG1pbmQuIEl0IG11c3QgYmUuIAo1IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29IZSB0YWtlcyBoaXMgZ2xhc3NlcyBvZmYgaW4gcHJldmVudGlvbiBhcyBzb29uIGFzIGhlIHJlYWxpemVzIHRoYXQgdGhlIEJ1bGdhcmlhbiBtYXNjb3RzIGFyZSB2ZWVsYS4iSSB3b25kZXIgd2hhdCB0aGV5J3ZlIGJyb3VnaHQsIiBzYWlkIE1yLiAKQW50b25lbGxhIFBpc2FuaSBmaXJzdCBlbmNvdW50ZXJlZCBhbiBBZXJvbiB3aGlsZSB3b3JraW5nIGFzIGFuIGV4ZWN1dGl2ZSBhdCBZYWhvbyBpbiAyMDA0LiAiRXZlcnlvbmUgaGFkIHRoZW0gdGhlcmUsIGFuZCBZYWhvbyB3YXMgdmVyeSBmb2N1c2VkIG9uIHNldHRpbmcgdXAgZWFjaCB3b3JrIHN0YXRpb24gdG8gYmUgb3B0aW1hbCBmb3IgdGhlIGVyZ29ub21pY3Mgb2YgdGhlaXIgd29ya2VycywiIHNoZSBzYXlzIHZpYSBlbWFpbC4gTm93YWRheXMsIHNoZSdzIHNwZW5kaW5nIGV2ZW4gbW9yZSB0aW1lIGJlaGluZCBhIGRlc2sgZ2V0dGluZyBzdGFydHVwIE9mZmljaWFsIENvdXBvbiBDb2RlIG9mZiB0aGUgZ3JvdW5kIGFuZCByZWxpZXMgb24gaGVyIGJlbG92ZWQgQWVyb24gdG8gcHJldmVudCBzb21lIG9mIHRoZSBhY2hlcyB0aGF0IHRocmVhdGVuIHRvIGFjY29tcGFueSBzZWRlbnRhcnkgd29ya2RheXMuIAoiT2YgY291cnNlLCBjdXN0b21lciBwcml2YWN5IGFuZCBjb25maWRlbnRpYWxpdHkgaXMgcmVzcGVjdGVkIGF0IGFsbCB0aW1lcy4iCkluIGZhY3QsIHRoZXkgYXJlIHJhdGlvbmFsIGVjb25vbWljIGFjdG9ycyB3aG8gdW5kZXJzdGFuZCB0aGF0IGxvb2tpbmcgImJldHRlciIgcmVhbGx5IGNhbiBsZWFkIHRvIG1vcmUgc3VjY2VzcyBpbiB0aGUgam9iIG1hcmtldCBhbmQgdGhlIHJvbWFuY2UgbWFya2V0LiBXaGF0IHRoZXNlIHdvbWVuIGRvbiB1bmRlcnN0YW5kICB3aGF0IGZldyBvZiB1cyB1bmRlcnN0YW5kICBpcyBkZWJ0LiAKRXMgaGFuZGVsdCBzaWNoIGRhYmVpIGFiZXIgbmljaHQgdW0gZWluZW4gRWluZ3JpZmYgd2llIEhhYXJlc2NobmVpZGVuLCBzb25kZXJuIGVzIGdsZWljaHQgZGVyIEFtcHV0YXRpb24gZWluZXMgS3JwZXJ0ZWlscy4gCkkgc2VlIHRydWUgYmVhdXR5LCBpbnRlbGxpZ2VuY2UsIGRlcHRoLCBzdHJlbmd0aCwgYW5kIHJlc2lsaWVuY2UuIApJbiBmYWN0LCBhbGwgeW91IGhhdmUgdG8gZG8gaXMgY29tcHV0ZSB3aGF0IHRoZSB2YWx1ZSBvZiB5b3VyIGNhcmRzIGlzIGFuZCBpZiB5b3Ugc3RpbGwgbmVlZCB0byBpbXByb3ZlIG9uIGl0IG9yIHN0aWNrIHdpdGggd2hhdCB5b3UgaGF2ZS4uIApQZW9wbGUgd2hvIHNwb3J0IHRoZSBBY2Ugb2YgU3BhZGVzIGFyZSwgd2hldGhlciB0aGV5IGtub3cgaXQgb3Igbm90LCBhbm5vdW5jaW5nIHRoYXQgdGhleSB3ZWxjb21lIGRlYXRoIGFzIGEgbWVhbnMgdG8gYSBiZXR0ZXIgZXhpc3RlbmNlLCBvciBzaW1wbHksIHRoYXQgdGhleSBhcmUgbm90IGFmcmFpZCBvZiBkZWF0aCBhbmQgdGhlIGNoYW5nZXMgaXQgd2lsbCBicmluZy4gVGhlIHByb2JhYmlsaXR5IG9mIGRlYWxpbmcgdGhlIEtpbmcgb2YgU3BhZGVzIG5leHQgaXMgMSBpbiA1MS4gVGhlIHByb2JhYmlsaXR5IG9mIGRlYWxpbmcgdGhlIFF1ZWVuIG9mIFNwYWRlcyBuZXh0IGlzIDEgaW4gNTAuIFRoaXMgaXMgdGhlIHNhbWUgYXMgdGhlIG51bWJlciBvZiBwZXJtdXRhdGlvbnMgb2YgTiAoNTIpIHRoaW5ncyB0YWtlbiBQICgzKSBhdCBhIHRpbWUsIHdoaWNoIGlzIHN0YXRlZCBhcyBOISAgIFAhICg1MiAgNTEgIDUwKSBJZiB5b3UgZGlkIG5vdCBjYXJlIHdoYXQgb3JkZXIgdGhlIGNhcmRzIHdlcmUgZGVhbHQgaW4sIGJ1dCBzdGlsbCB3YW50ZWQgdG8ga25vdyB0aGUgcHJvYmFiaWxpdHkgb2YgZ2V0dGluZyB0aGUgQWNlLCBLaW5nLCBhbmQgUXVlZW4gb2YgU3BhZGVzLCB0aGVuIHlvdSB3b3VsZCBiZSB0YWxraW5nIGFib3V0IHRoZSBjb21iaW5hdGlvbnMgb2YgTiAoNTIpIHRoaW5ncyB0YWtlbiBQICgzKSBhdCBhIHRpbWUsIHdoaWNoIGlzIHN0YXRlZCBhcyAoTiEgICBQISkgLyAoTiAgIFApISAoNTIgIDUxICA1MCAvIDMgLyAyIC8gMSkuIFRoZSBwcm9iYWJpbGl0eSBpbiB0aGlzIGNhc2UgaXMgMSBpbiAyMiwxMDAuIChGdWxsIEFuc3dlcikKV2hpbGUgaW4gaGlzIHR3ZW50aWVzLCBOb3J0b24gd29ya2VkIGFzIGFuIGlyb253b3JrZXIgaGVscGluZyB0byBidWlsZCB0aGUgV29ybGQgVHJhZGUgQ2VudGVyIGluIE5ldyBZb3JrIENpdHkuIApOb3csIGFzayB5b3Vyc2VsZiB3aGF0IGhlIGNhbiBjYWxsIGEgS2luZyBoaWdoIGRyeSBib2FyZCB3aXRoLiBLWCBjb21ib3MgKFRvbnMgb2YgdGhlbSksIHBvY2tldCBwYWlycyBpbmNsdWRpbmcgc2V0cyBhbmQgSkosIG1heWJlIHNvbWV0aGluZyBsaWtlIDY3cyBvciBRVHMgd2l0aCBhIGJhY2tkb29yLiAKS1cgYW5kIHRoYXQgU3BlY2lhbCBBZ2VudCwgRGVicmEgU3RhdXNzLiBUaGUgb25lIHdobyBjYWxsZWQgTWFuaXRvd29jIFNPIGFza2luZywgcHJhY3RpY2FsbHkgQkVHR0lORywgdG8gYmUgYSBwYXJ0IG9mIHRoZSBUZXJlc2EgSGFsYmFjaC9TdGV2ZW4gQXZlcnkgaW52ZXN0aWdhdGlvbiBiZWZvcmUgaXQgd2FzIGV2ZW4gYW4gaW52ZXN0aWdhdGlvbi4gU2hlIHNvdW5kZWQgc28gaW5jcmVkaWJseSBkZXNwZXJhdGUgdG8gYmUgcGFydCBvZiBoYW5naW5nIFN0ZXZlbiBBdmVyeS4gClNvIG1hbnkgd3JpdGUgdXBzIGFuZCByZXZpZXdzIGhhdmUgYmVlbiB3cml0dGVuIGFib3V0IG9ubGluZSBwb2tlciBhbmQgY2FzaW5vcyBhbmQgdGhlaXIgYWR2YW50YWdlcyBvdmVyIGxhbmQgY2FzaW5vcy4gQW5kIGl0IGRvZXMgbWFrZSBzZW5zZSB0byBtb3ZlIGZyb20gbGFuZCBiYXNlZCB0byBvbmxpbmUuIApPaCBtYW4sIHdoZXJlIHRvIHN0YXJ0LiBJIHRoaW5rIG15IHBlcnNvbmFsIGZhdm9yaXRlIHdhcyBhIGdhbWUgd2hlcmUgeW91IGNvdWxkIHNtYWNrIHNvbWVvbmUgaW4gdGhlIGZhY2UgaWYgdGhleSBhc2tlZCBhIHF1ZXN0aW9uIHRoYXQgZW5kZWQgaW4gYSBvbmUgc3lsbGFibGUgd29yZC4gSSB0aGluayB3ZSBnb3QgdGhhdCBvbmUgZnJvbSBhIG1vdmllIG9yIHNob3cuIApJZiB0aGV5IGNvbnRpbnVlIHRvIGFjdCBsaWtlIGFzc2hvbGVzLCBsZWF2ZSB0aGVtIGJlLiBUaHJvd2luZyBoaW0gdG8gdGhlIGN1cmIgYW5kIHRlbGxpbmcgaGlzIGdpcmxmcmllbmQgYmVoaW5kIGhpcyBiYWNrIG5vIGxlc3Mgd2FzIHByZXR0eSB1bmRlcmhhbmRlZCBhbmQgaG9uZXN0bHkgYSBsaXR0bGUgdW5jYWxsZWQgZm9yLiAKTGFzdCB5ZWFyIG1vcmUgRXN0b25pYW4gY2l0aXplbnMgcmV0dXJuZWQgdG8gdGhlIGNvdW50cnkgdGhhbiBsZWZ0Li4gCkl0IHdpbGwgbm90IHByb3ZpZGUgaG91c2luZyBvciBoZWFsdGhjYXJlIG9yIGdvb2Qgc2Nob29scyBvciBhIGNsZWFuIGVudmlyb25tZW50LiAKTGUgZHZlbG9wcGVtZW50IGRlIGxhIGZjb25kYXRpb24gaW4gdml0cm8gKEZJVkVURSksIGltcGxpcXVhbnQgdW4gdHJhbnNmZXJ0IGQnZW1icnlvbiAoY29ubmFpc3NhbnQgdW4gc3RvY2thZ2UgcGFyIGNvbmdsYXRpb24pLCByZW1ldCAgam91ciBjZXR0ZSBxdWVzdGlvbiBlbiByYWlzb24gZGVzIGVtYnJ5b25zIHN1cm51bXJhaXJlcyAocG91dmFudCB0cmUgc3VwcHJpbXMgOyBsYSByZWNoZXJjaGUgc3VyIGwnZW1icnlvbiB0YW50IGludGVyZGl0ZSBzYXVmIHN1ciBsZXMgZW1icnlvbnMgY29udXMgaW4gdml0cm8gYXZlYyBsJ251bXJhdGlvbiBkZSBjb25kaXRpb25zKSAoQikuLiAKT25lIHdheSBvZiB0aGlua2luZyBhYm91dCBpdCB3b3VsZCBiZSB0aGF0IGl0IHN1aWNpZGUgZm9yIHlvdSByYW5nZSBiZXQgd2l0aCA5OSBKSiBpbnRvIHNvbWVvbmUgd2hvc2UgcmFuZ2UgaXMgMjdvIGFuZCBBQS4gRXZlbiBpZiB5b3UgYWhlYWQgcmFuZ2V3aXNlIHlvdSBhcmUgZ2l2aW5nIHRoZSBvdGhlciBwbGF5ZXIgZnJlZSBtb25leSBpZiB5b3UgYmV0Li4gCkNyYXp5IS4gClR1cm5zIG91dCB0aGUgYmxva2UgcmVjb2duaXplZCBoZXIgZnJvbSB0aGUgbG9jYWwgTW9zcXVlIGFuZCB3YXMgaW5jZW5zZWQgc2hlIGRpZG4gaGF2ZSBoZXIgdHJhZGl0aW9uYWwga2l0IG9uLi4gCkNyb3Nzd29yZCBQdXp6bGUgQW5zd2VycyBzdGFmZiBob3BlIHlvdSBlbmpveSB0aGlzIHNpdGUuLiAKUGFydCBvZiBoZXIgcGxlYSBkZWFsLCBXaWxsaWFtcyBmYWNlcyBhIG1pbmltdW0gb2YgMTUgeWVhcnMgaW4gcHJpc29uIGFuZCB3aWxsIGJlIHJlcXVpcmVkIHRvIHBheSByZXN0aXR1dGlvbiB0byB0aGUgdmljdGltcy4gCkxhc3QgbW9udGggSSB2aXNpdGVkIHRoZSBBcmsgdGVhY2hlciB0cmFpbmluZyBzdW1tZXIgc2Nob29sLCB3aGVyZSBtb3N0IG9mIHRoZSBncm91cCBpcyBiZWluZyB0cmFpbmVkIGFsb25nc2lkZSBtdWNoIHlvdW5nZXIgdHJhaW5lZXMuIChBIG1pbm9yaXR5IHdpbGwgYmUgdHJhaW5pbmcgd2l0aCBtZSBhdCBNb3NzYm91cm5lIENvbW11bml0eSBDb2xsZWdlIGluIEhhY2tuZXksIHdpdGggYSBmZXcgbW9yZSBhdCBIb2xsYW5kIFBhcmsgU2Nob29sIGFuZCBlbHNld2hlcmUuKSBJIHdhdGNoZWQgdGhlIGZpcnN0IHNlc3Npb24gaW4gd2hpY2ggZXZlcnlvbmUgaGFkIHRvIHBsYXkgYW4gaWNlIGJyZWFraW5nIGdhbWUgY2FsbGVkIGJhY2twYWNrIGJpbmdvLgpUaGV5J3JlIGZ1biBhbmQgc2V4eS4gCiJCcmV0dCBSYXRuZXIgaGVscGVkIG1lIG91dCBvZiBmcmllbmRzaGlwIHRvIGFzc2lzdCBtZSBpbiBnZXR0aW5nIGF1ZGl0aW9ucyBhbmQgdHJ5aW5nIHRvIGhlbHAgbWUgZmluZCBhbiBhZ2VudCwgYW5kIEkgaGF2ZSBubyBpc3N1ZXMgd2l0aCBoaW0gb3IgY2xhaW1zIGFnYWluc3QgaGltLCIgS2lyayB3cm90ZS4KQWJvdXQgNTAgeWVhcnMgYWdvLCBTdG9ja2hvbG0gc3RhcnRlZCBidWlsZGluZyBhbiBpbmZyYXN0cnVjdHVyZSBmb3IgdGhlIGRpc3RyaWJ1dGlvbiBvZiBkaXN0cmljdCBoZWF0aW5nLiBOb3cgaXQgY292ZXJzIG92ZXIgOTkgcGVyIGNlbnQgb2YgdGhlIGNpdHkncyB0b3RhbCBoZWF0aW5nIG5lZWRzIHVzaW5nIHJlbmV3YWJsZSBmdWVsIGFuZCBlbmVyZ3kgZGVyaXZlZCBmcm9tIHdhc3RlIG9yIHJlc2lkdWFsIGhlYXQuIFRoZSBpbmZvcm1hdGlvbiBiZWxvdyB3aWxsIGJlIHVzZWQgdG8gb3B0aW1pemUgdGhlIGNvbnRlbnQgYW5kIG1ha2UgYWRzIGFjcm9zcyB0aGUgbmV0d29yayBtb3JlIHJlbGV2YW50IHRvIHlvdS4gClJlcG9ydGVyOiBGb3IgTW9sbHksIHBlcmZlY3RpbmcgdGhlIGdhbWUgZm9yIHRoZSBhIGxpc3QgcGxheWVycyBtZWFudCBzdHVkeWluZyB0aGVpciBwb2tlciBwZXJzb25hbHRpZXMuIEFsbCByaWdodC4gCkJ1dCBpdCBub3QganVzdCB5b3VyIGhlYXJ0IHRoYXQgYXQgcmlzayBmcm9tIHRvbyBtdWNoIHNpdHRpbmc7IHlvdXIgaGlwcywgc3BpbmUsIGFuZCBzaG91bGRlcnMgY291bGQgYWxzbyBzdWZmZXIuIEluIGZhY3QsIGl0IG5vdCBhIGxlYXAgdG8gc2F5IHRoYXQgYSBjaGFpciBwb3RhdG8gbGlmZXN0eWxlIGNhbiBydWluIHlvdSBmcm9tIGhlYWQgdG8gdG9lLgpXaGVuIHlvdSBzZWUgdGhlIGxvZ28gb24gdGhlIGNoaXBzLCB0aGVyZSBpcyBhIGNlcnRhaW4gcHN5Y2hvbG9naWNhbCBiZW5lZml0IHRvIHRoZWlyIHByZXNlbmNlIHRoYXQgY2Fubm90IGJlIG92ZXJsb29rZWQuIApZb3UgdGhpbmsgaXRzICJjcmVkaWJsZSBhbmQgcmVhc29uYWJsZSIgdG8gY2xhaW0gdGhhdCBDcm9td2VsbCBhbmQgaGlzIFBhcmxpYW1lbnRhcmlhbnMgY29tbWl0dGVkIGEgZ2Vub2NpZGUgYnkgZGVsaWJlcmF0ZWx5IGNhdXNpbmcgYSBmYW1pbmUgMjAwIHllYXJzIGxhdGVyLCBJIHRoaW5rIHlvdSBvdmVyZXN0aW1hdGluZyBDcm9td2VsbCBhYmlsaXR5IHRvIHBsYXkgdGhlIGxvbmcgZ2FtZS4gCkRvIG5vdCBoZXNpdGF0ZSB0byByZWFjaCBvdXQgdG8gdXMgYWJvdXQgYW55IHF1ZXN0aW9ucywgY29uY2VybnMgYW5kL29yIGNvbW1lbnRzIHlvdSBoYXZlIGFib3V0IHRoZSBzdWIuLiAKQmVjYXVzZSBvZiBjcmVhdGluZSdzIHZpdGFsIGltcGFjdCBvbiB5b3VyIGJvZHkncyBlbmVyZ3kgbGV2ZWxzLCBpdCBzaG91bGQgYmUgY29uc2lkZXJlZCBmb3IgYW55b25lIGludGVyZXN0ZWQgaW4gc2xvd2luZyBhZ2luZywgaW1wcm92aW5nIGVuZXJneSBsZXZlbHMsIGFuZCBmaWdodGluZyBvZmYgYWdlIHJlbGF0ZWQgZGlzZWFzZXMuCkdlbmVyYWxseSwgSSB0aGluayBjYXJzIGFyZSBub3QgZ29vZCBmb3IgbWVudGFsIGhlYWx0aCwgcGFydGljdWxhcmx5IGZvciBlbXBhdGh5LiAKSSBsaXRlcmFsbHkgdHJpZWQgZXhwbGFpbmluZyB0aGlzIHRvIG15IHBhcmVudHMgYSBmZXcgbW9udGhzIGFnby4gVGhlIGVsZWN0b3JhbCBjb2xsZWdlIGRvZXNuJ3QgZmF2b3IgInJ1cmFsIiB2cyAidXJiYW4iLCB5ZXMgc21hbGxlciBzdGF0ZXMgaGF2ZSBzb21ld2hhdCBtb3JlIGluZmx1ZW5jZSB0aGFuIGxhcmdlciBzdGF0ZXMgcGVyIHZvdGVyLCBidXQgaXQgcmVhbGx5IGFsbCBoaW5nZXMgb24gdGhlIGJhdHRsZWdyb3VuZCBzdGF0ZXMuIEFuZCBmdXJ0aGVyIGl0IGRvZXNuJ3QgbmVjZXNzYXJpbHkgZmF2b3Igb25lIHBhcnR5IG92ZXIgdGhlIG90aGVyLCBzb21ldGltZXMgaXQgZmF2b3JzIG9uZSwgc29tZXRpbWVzIHRoZSBvdGhlciwgYW5kIGlmIFRleGFzIHdlcmUgdG8gYmUgc2xpZ2h0bHkgbW9yZSBEZW1vY3JhdCBsZWFuaW5nLCB0aGUgRUMgd291bGQgZmF2b3IgRGVtb2NyYXRzLCBhbmQgdGhleSB0b28gY291bGQgd2luIHRoZSBFQyB3aXRob3V0IHdpbm5pbmcgdGhlIHBvcHVsYXIgdm90ZS4KQnV0IGhpcyB3aW4gd291bGQgZmVlbCBtb3JlIGxlZ2l0IHRoYW4gYSBiYWQgc3BvcnQgd2hvIGNhbid0IGJlIGJvdGhlcmVkIHRvIG1ha2UgcmVhbCB3YWZmbGVzIG9yIGdldCBoZXIgc2NvdGNoIGVnZ3Mgb24gdGhlIHBsYXRlLiBBbGwgU2FyYSBkb2VzIGlzIGJyYWcgdGhhdCBzaGUncyB0aGUgYmVzdCwgYW5kIHNoZSdzIHJlYWxseSBwdXNoeSBhbmQgZG9lc24ndCBoYXZlIHNraWxscyB0byBiYWNrbml0IHVwLiBXaXNoaW5nIE5pbmkgd2FzIHN0aWxsIG9uIHRoZSBzaG93IGJlY2F1c2UgeW91IGNvdWxkIHRlbGwgTmluaSB3b3VsZCBoYXZlIGdpdmVuIGhlciBhIHJlYWxpdHkgY2hlY2suLiAKSSBkb24gaG9sZCBhbnkgd29tYW4gdG8gdGhlIHN0YW5kYXJkcyBvZiBhIHBvcm5vZ3JhcGhpYyBmaWxtLCBub3IgZG8gSSBleHBlY3QgbXkgc2V4IGxpZmUgdG8gYmUgbGlrZSB0aGUgY2FydG9vbmlzaGx5IGV4YWdnZXJhdGVkIGZhbnRhc3kgZnVlbCBJIHVzZSBwb3Jub2dyYXBoeSBhcy4gSSBkbyBub3Qgc2VlIG15IGdpcmxmcmllbmQgZGFpbHksIGFuZCBJIHdvdWxkIGJlIHB1bmlzaGluZyBteXNlbGYgaWYgSSBkaWRuIHdhdGNoIHBvcm4gd2hlbiBJIGZlZWwgc2V4dWFsIGRlc2lyZSBhbmQgc2hlIGlzbiBhcm91bmQsIGFzIGl0IGxpbWl0cyBteSBhYmlsaXR5IHRvIHB1dCBteXNlbGYgaW4gdGhlIHJpZ2h0IGhlYWRzcGFjZSB0byByZWFjaCBhbiBvcmdhc20uIApNeSBmcmllbmQgaGFzIGJlZW4gc2V4dWFsbHkgaGFyYXNzZWQgYnkgYSBhbm9ueW1vdXMgdGV4dGVyIGhlIG1lc3NhZ2VzIGhlciB0aHJvdWdoIGFub255bW91cyB0ZXh0aW5nIGFwcHMsIHNuYXAgY2hhdCwgZmFjZWJvb2ssIGFuZCBpbnN0YWdyYW0uIFRoaXMgcGVyc29uIGhhcyBzZXh1YWxseSBoYXJhc3NlZCBoZXIgYW5kIHNlbnQgdGhyZWF0ZW5pbmcgbWVzc2FnZXMgdG8gaGVyIHRoZSBwb2xpY2UgY2xhaW0gdGhlIGhhdmUgdHJhY2tlZCB0aGUgY2FsbHMgYW5kIHRleHRzIHRvIGEgY2VydGFpbiBjaXR5IGJ1dCBjYW50IGRvIGFueW1vcmUgdGhlbiB0aGF0IGlzIHRoZXJlIGFueXdheSB0byByZXZlYWwgd2hvIHRoaXMgcGVyc29uIGlzIG9yIHRyYWNrIHRoZW0gZG93biBpIHdhbnQgdGhlbSBicm91Z2h0IHRvIGp1c3RpY2Ugc2hlIGlzIGFmcmFpZCB0byBsaXZlIGhlciBsaWZlIG9yIGRvIGFueXRoaW5nIGNhdXNlIG9mIHRoaXMgYW5vbnltb3VzIHBlcnNvbi4gUGxlYXNlIHNvbWVvbmUgZ2l2ZSBtZSBhZHZpY2UgaSBoYXZlIGdvbmUgdG8gdGhlIHBvbGljZSBhbmQgdGFrZW4gZG93biBpbmZvcm1hdGlvbiBmb3IgMyB5ZWFycyBhbmQgdGhlIHBvbGljZSBoYXZlIG9ubHkgY29uY2x1ZGVkIHdoYXQgY2l0eSB0aGUgcGVyc29uIGlzIGNvbnRhY3RpbmcgZnJvbS4uIApTbW9raW5nIGlzIGEgaHVnZSBwdWJsaWMgaGVhbHRoIHByb2JsZW0uIEFsY29ob2wgaXMgYmFkIGJ1dCBub3doZXJlIG5lYXIgYXMgYWRkaWN0aXZlIGFzIG5pY290aW5lLiAKSXRzIEFuZHJvaWQgT1MsIGluIGxlc3MgdGhhbiBhIGRlY2FkZSwgaGFzIGJlY29tZSBpbmR1c3RyeSBzdGFuZGFyZCBmb3IgdGhlIG5ldyBndWFyZCBvZiB0aGUgcGVydmFzaXZlIFdlYi4gCkNocmlzIFdhbGxhY2UgbWF5IG5vdCBiZSBDaHJpcyBXYWxsYWNlCllvdXIgZXZlcnkgYWN0aW9uIGFuZCBpbmFjdGlvbiBpbmZsdWVuY2VzIHRoZSBjaGlsZCdzIGZ1dHVyZSwgY29udHJpYnV0ZXMgdG8gdGhlaXIgY2hhcmFjdGVyIGRldmVsb3BtZW50LiAKSXQgd2FzIGFuIG91dHN0YW5kaW5nIGVmZm9ydCBpbiBzdXBwb3J0IG9mIHRoZSBKaW0gQnJ1Y2UgVXJvbG9neSBhbmQgUHJvc3RhdGUgQ2FuY2VyIFRydXN0IGF0IHRoZSB0aGlyZCBhbm51YWwgUG9rZXI0UHJvc3RhdGUgZnVuZHJhaXNpbmcgZXZlbnQuIApCZWNhdXNlIHRoZXJlIGEgbXlyaWFkIG9mIHJlYXNvbmluZyB0byBiZSB3YXRjaGluZyB0aGUgZm9ybWVyIHRoYXQgaGF2ZSBub3RoaW5nIHRvIGRvIHdpdGggc2Vla2luZyBzZXh1YWwgZ3JhdGlmaWNhdGlvbiBmcm9tIGNoaWxkcmVuLiBMb2xpdGEgcG9ybiBob3dldmVyLCBkb2VzbiBoYXZlIHRoYXQuRnJhbmtseSBpdCBkaXN0dXJiaW5nbHkgY29tbW9ucGxhY2UuIApCZXN0IG9mIHRoZSBUd2luIENpdGllcyAyMDE1CkJ1ZGRoYSAuIApNYW55IHF1ZXN0aW9ucyBnZXQgc3VibWl0dGVkIGxhdGUgZWFjaCB3ZWVrIHRoYXQgZG9uIGdldCBhIGxvdCBvZiBhY3Rpb24sIHNvIGlmIHlvdXIgcXVlc3Rpb24gZGlkbiBnZXQgYW5zd2VyZWQsIGZlZWwgZnJlZSB0byBwb3N0IGl0IGFnYWluLi4gCk5vIHNoYWRlIGF0IHRob3NlIHBlb3BsZSBidHcsIGl0IGp1c3Qgbm90IHZlcnkgdXNlZnVsIGlmIHlvdSBkb24ga25vdyB3aGF0IGl0IGFsbCBtZWFucy4uIApJbiBBdWd1c3QgMjAxNiwgYSBzaXR0aW5nIE1leGljYW4gbWF5b3Igd2FzIGFycmVzdGVkIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgbXVyZGVyIG9mIDEwIHBlb3BsZSB3aG9zZSBib2RpZXMgaGFkIGJlZW4gc2V0IGFibGF6ZS4KRmluYWxseSwgdGhlcmUgaXMgYSBuZXcgcHVzaCB0byBiYW4gYWxsIG9ubGluZSBwb2tlciBvbiB0aGUgZmVkZXJhbCBsZXZlbC4gVGhlIGVmZm9ydCBpcyBsZWQgYnkgZmFtb3VzIGJpbGxpb25haXJlIGFuZCBjYXNpbm8gbWFnbmF0ZSBTaGVsZG9uIEFkZWxzb24sIGJlc3Qga25vd24gZm9yIGJ1aWxkaW5nIHRoZSBWZW5ldGlhbiBpbiBMYXMgVmVnYXMsIGFuZCBmb3IgYmVpbmcgYSBtZWdhIGRvbm9yIGluIFJlcHVibGljYW4gUGFydHkgcG9saXRpY3MuIEFkZWxzb24gaGFzIGxvbmcgZm91Z2h0IGVmZm9ydHMgdG8gbGVnYWxpemUgb25saW5lIGdhbWJsaW5nLCBhcmd1aW5nIGFnYWluc3QgaXQgb24gbW9yYWwgZ3JvdW5kcy4gU291cmNlcyB0ZWxsIDEwTmV3cyB0aGF0IGhlIGlzIGFjdGl2ZWx5IGxvYmJ5aW5nIGluIENhbGlmb3JuaWEgdG8gdHJ5IHRvIHByZXZlbnQgb25saW5lIGdhbWluZy4KSXQgZG9lc24gaGVscCB0aGF0IHRoZXJlIGFyZSBtdWx0aXBsZSBjb25mbGljdGluZyBzY2hvb2xzIG9mIHRob3VnaHQgaW4gZGV2ZWxvcG1lbnRhbCBwc3ljaG9sb2d5LCBiZWhhdmlvdXIgbWFuYWdlbWVudCwgZWR1Y2F0aW9uYWwgcGhpbG9zb3BoeSwgaW5zdHJ1Y3Rpb24gbWV0aG9kb2xvZ3kgYW5kIGV2ZW4gb3JnYW5pc2F0aW9uYWwgZGVzaWduLCBzbyBhIHN0cmljdGx5IGV2aWRlbmNlIGJhc2VkIGFwcHJvYWNoIGlzIGFsc28gaW1wb3NzaWJsZS4gRWZmZWN0aXZlbHksIG91ciBjdXJyZW50IHN5c3RlbXMgYXJlIGp1c3QgYSBodWdlIHNldCBvZiBjb21wcm9taXNlcyB3aGljaCBldmVyeW9uZSBhZ3JlZXMgaXMgc3ViIG9wdGltYWwgYnV0IHdoaWNoIGRlZmllcyBjb25zZW5zdXMgb24gcHJlY2lzZWx5IGhvdy5UcmFpbkxvYWYgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ29JdCBhbHNvIG1heGltaXplcyBkZXZlbG9wbWVudGFsIHVuaWZvcm1pdHkgd2hpY2ggcG9zaXRpdmVseSBhZmZlY3RzIHRoZWlyIHNvY2lhbCBkZXZlbG9wbWVudCBhbmQgdGhlaXIgYWJpbGl0eSB0byBib25kIHdpdGggb3RoZXJzLkhvdyB3b3VsZCBzaWJsaW5ncyBmYWN0b3IgaW4gdG8gdGhpcyB0aGVuPyBTdXJlbHkgNyBob3VycyBhdCBzY2hvb2wgc29jaWFsaXNpbmcgd2l0aCB0aGUgc2FtZSBhZ2UgdnMgOSBob3VycyBhdCBob21lIHNvY2lhbGlzaW5nIHdpdGggKy8gIGFnZXMgd291bGQga2luZCBvZiBtYWtlIHRoaXMgc3RhdGVtZW50IHJlZHVuZGFudD8gWW91ciBzdGF0ZW1lbnQgbW9zdGx5IGFwcGVhbHMgdG8gdGhlIHNvY2lhbCBpbXBhY3Qgb2YgYWdlIG1peGVkIGNsYXNzZXMsIGltcGx5aW5nIHRoYXQgbWFpbnRhaW5pbmcgc2FtZSBhZ2UgY2xhc3NlcyBoZWxwcyBzb2NpYWwgZGV2ZWxvcG1lbnQgaG93ZXZlciwgc29jaWFsIHBlcmlvZHMgKGJyZWFrcyBhbmQgbHVuY2hlcykgYXJlIGNvbXBsZXRlbHkgdmFyaWVkIGluIGFnZXMsIHBhcnRpY3VsYXJseSBpbiBzZWNvbmRhcnkgc2Nob29sIGJvYXN0aW5nIGEgaHVnZSBhZ2UgbGVhcCBmcm9tIDEyIHRvIDE2IHllYXIgb2xkcy4gClRoZXkgY291bGQgaGF2ZSB3YWl0ZWQgdG8gcGVyZm9ybSB0aGUgam9iLiAKV2hlbiB0aGlzIHBhaW4gb2NjdXJzLCBtZXNzYWdlcyBhcmUgc2VudCB0byB0aGUgYnJhaW4gdGhyb3VnaCAnYWZmZXJlbnQgbmVydmVzJyAgICdzZW5zb3J5IG5lcnZlcyB0aGF0IGhhdmUgcmVjZXB0b3JzIGF0IHRoZSBza2luIGFuZCBqb2ludHMnLiAKQXMgSSBnb3QgdG8ga25vdyBoaW0sIEkgZm91bmQgb3V0IGhlIHdhcyBhIHJlZnVnZWUsIHdoaWNoIEkgdGhvdWdodCB3YXMgb2RkLCBjb25zaWRlcmluZyBoZSBjYW1lIGZyb20gdGhpcyBzdXBwb3NlZGx5IHNhZmUgcGxhY2UgZmlsbGVkIHdpdGggQ2hyaXN0aWFucy4uIApGaW5hbGx5IEhvbGRlbSBQb2tlciB0YWtlcyBjb21taXRtZW50IGFuZCBwYXRpZW5jZS4gCk1pa2Vob25jaG85OSAgIDEzIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KQ29tbWlzc2FpcmUgZXVyb3BlbiAgbCdFbnZpcm9ubmVtZW50IGRlIDIwMDQgIDIwMDksIGlsIGEgZHRlbnUgcGx1c2lldXJzIHBvcnRlZmV1aWxsZXMsIGRvbnQgY2VsdWkgZGUgbWluaXN0cmUgZGVzIEFmZmFpcmVzIHRyYW5ncmVzIGRhbnMgbGUgZ291dmVybmVtZW50IGRlIHRlY2huaWNpZW5zIGF1IHBvdXZvaXIgIGwnYXBvZ2UgZGUgbGEgY3Jpc2UgZ3JlY3F1ZSBlbiAyMDExIDIwMTIuLiAKT25jZSB5b3UgaGF2ZSBkb25lIHdpdGggbGVhcm5pbmcsIGl0cyB0aW1lIHRvIHBheSBmb3IgdGhlIHByb2R1Y3QgYW5kIGdldCB0aGF0IGRlbGl2ZXJlZCBhdCBob21lLi4gClRoZSBnb2FsLCB0aGVzZSBwYXN0b3JzIHNheSwgaXMgdG8gaW5qZWN0IHNvbWUgbWFjaGlzbW8gaW50byB0aGVpciBtaW5pc3RyaWVzICAgYW5kIGludG8gdGhlIGltYWdlIG9mIEplc3VzICAgaW4gdGhlIGhvcGUgb2YgbWFraW5nIENocmlzdGlhbml0eSBtb3JlIGFwcGVhbGluZy4gIkNvbXBhc3Npb24gYW5kIGxvdmUgICB3ZSBhZ3JlZSB3aXRoIGFsbCB0aGF0IHN0dWZmLCB0b28sIiBzYWlkIEJyYW5kb24gQmVhbHMsIDM3LCB0aGUgbGVhZCBwYXN0b3IgYXQgQ2FueW9uIENyZWVrIENodXJjaCBvdXRzaWRlIG9mIFNlYXR0bGUuICJCdXQgd2hhdCBsZWQgbWUgdG8gZmluZCBDaHJpc3Qgd2FzIHRoYXQgSmVzdXMgd2FzIGEgZmlnaHRlci4iLiAKUGxlYXNlIGJlIHJlc3BlY3RmdWwgdG8gb3RoZXJzLiAKVGhlIEZCSSBnb3QgYSB3YXJyYW50IHRvIGNyYWNrIG15IGFuZHJvaWQgYW5kIEkgdGhpbmsgdGhlIGNoYXJnZXMgbXkgc3RpY2suIE5ldmVyIHNob3VsZGEgbGV0IHRoYXQgZ3V5IHVzZSBteSBwaG9uZS4gCiJUaGUgcHJlc2VudCB3b3JrIGlzIHdvcnRoIHdoaWxlIGZvciBpdHMgb3duIHNha2UsIiBoZSBhbm5vdW5jZWQuICJJdCBpcyBzbyBkYW5nZXJvdXMgdGhhdCB5b3UgbWlnaHQgZWFzaWx5IGxvc2UgeW91ciBsaWZlIHdpdGhpbiBhIGZvcnRuaWdodC4gVGhhdCBpcyB3aHkgSSBzaGFsbCBnaXZlIHlvdSB5b3VyIHdvcmsgY2hhcHRlciBieSBjaGFwdGVyLiBUbyBkYXkgSSBwcm9wb3NlIG9ubHkgdG8gaGFuZCB5b3UgeW91ciBjcmVkZW50aWFscyB3aGljaCwgYnkgdGhlIGJ5LCB3aWxsIG1lYW4gc3VkZGVuIGRlYXRoIHRvIHlvdSBpZiBldmVyIHRoZXkgYXJlIGZvdW5kIGJ5IHRoZSB3cm9uZyBwZW9wbGUgdXBvbiB5b3VyIHBlcnNvbiBhbmQgZXhwbGFpbiB0aGUgY29tbWVuY2VtZW50IG9mIHlvdXIgdGFzay4iCkkgaGF2ZSBvcmRlcmVkIGZyb20gWmVubmkgcXVpdGUgYSBmZXcgdGltZXMuIEkndmUgaGFkIHJlZ3VsYXIgYW5kIHRyYW5zaXRpb25zLCBidXQgbm90IHByZXNjcmlwdGlvbiBzdW5nbGFzc2VzLiAKSSByZWNlbnRseSByZWFkIEZlcmFsIGJ5IEdlb3JnZSBNb25iaW90IHdoaWNoIHdhcyBhIGJpdCBvZiBhbiBhd2FrZW5pbmcgZm9yIG1lLCBJIG5ldmVyIGxvb2sgYXQgdGhlIGxhbmRzY2FwZSBoZXJlIGluIHRoZSBVSyBhZ2Fpbi4gSXQgd2FzIGFsc28gaW5jcmVkaWJseSBwZXJzdWFzaXZlIHdpdGggcmVnYXJkIHRvIHJld2lsZGluZyBwcm9qZWN0cyBnbG9iYWxseS4gCkZvciBzdXJlLCBhbmQgdGhlcmUgYSByZWFkaWx5IHZpc2libGUgZmVlZGJhY2sgbG9vcCBpbiBwbGF5IHdoZXJlYnkgYSBwZXJzb24gd2l0aGRyYXdpbmcgZnJvbSB0aGVpciBpbW1lZGlhdGUgY29tbXVuaXR5IChpZiBpdCBldmVuIGV4aXN0cywgd2hpY2ggaXQgbWlnaHQgbm90LCBlc3BlY2lhbGx5IGluIHN1YnVyYmlhKSBjYW4gc2xpcCBmdXJ0aGVyIGludG8gaGF0ZSBhbmQvb3IgZXhhY2VyYmF0ZWQgbWVudGFsIHByb2JsZW1zIHNpbXBseSBmcm9tIGdldHRpbmcgaW4gd2l0aCB0aGUgd3JvbmcgY3Jvd2Qgb25saW5lLgpZT1VSIGxhbmd1YWdlIGFuZCB5b3VyIGVudGlyZSBwcmVzZW5jZSBpbiB0aGlzIHRocmVhZCBpcyB0b3hpYyBkaXZpc2l2ZW5lc3MuLiAKSSBlbmRlZCB1cCBtYWtpbmcgbW9uZXkgYnV0IHdpdGhpbiBhIHllYXIgSSBzb2xkIG91dCBhbGwgb2YgbXkgcG9zaXRpb25zIGFuZCB3ZW50IGJhY2sgdG8gbm9ybWFsIHRyYWRpbmcuIApDYW4gYW55b25lIHNoYXJlIGV4cGVyaWVuY2VzIGFzIGEgc29sbyB0cmF2ZWxlcj8gTXkgZnJpZW5kIGNhbiBubyBsb25nZXIgbWFrZSBpdCBhbmQgSSBhbSB1c2luZyBhIGNyZWRpdCB0aGF0IHdpbGwgZXhwaXJlIHNvIGl0J3Mgbm93IG9yIG5ldmVyLkkgbWFkZSB0aGUgdHJpcCBieSBteSBzZWxmIG9uIHB1cnBvc2UgYXMgSSB3YW50ZWQgdGltZSB0byByZWZsZWN0LCBoYXZpbmcganVzdCByZXRpcmVkLiBUaGUgc3RhZmYgYXQgTWlyYXZhbCBtYWRlIG1lIGZlZWwgdmVyeSBjb21mb3J0YWJsZS4gCk5pY2Ugd29yayBvbiB5b3VyIGZpcnN0IHNvbmchIEkgYWdyZWUgd2l0aCBGdWNraW5nIEdsb3Jpb3VzLCBwZXJzb25hbCBleHBlcmllbmNlIGFsd2F5cyBldm9rZXMgbW9yZSBlbW90aW9uIGFuZCBpbWFnZXJ5IHRoYW4gZ2VuZXJhbCBzdGF0ZW1lbnRzLiBNb3N0IHBlb3BsZSB3aWxsIGluZmVyIHdoYXQgZ29pbmcgb24gb3Igd2hhdCBoYXBwZW5lZCBiYXNlZCBvbiB0aGUgY29udGV4dC4gQWxzbywgZG9uIGJlIGFmcmFpZCB0byBOT1Qgcmh5bWUgYXQgdGhlIGVuZCBvZiBldmVyeSBwaHJhc2UuIApUaGlzIGlzIGEgY291bnRyeSB3aGljaCBibG9ja3MgYW5kIGNlbnNvcnMgdGhlIEludGVybmV0IGJlY2F1c2UgdGhleSB3YW50IHRvIGJhbiBwb3Jub2dyYXBoeSwgSSBjYW4ndCBidXkgdGhpcyBleGN1c2UuIFRoZSBnb3Zlcm5tZW50IGFscmVhZHkgc2hvd2VkIGludGVyZXN0IGluIGNlbnNvcmluZyBZb3VUdWJlIGZvciAiZmFrZSBuZXdzIiBjaGFubmVscyB3aGljaCB3ZXJlIGhhcm1pbmcgdG8gdGhlaXIgYnJhbmQsIGFuZCB0aGV5IGFyZSBjaXRpbmcgc3R1ZmYgbGlrZSAgICAsICAgLiAKSSB0cmllZCBNYWNhIGFuZCB3aGlsZSBpdCBtYWRlIG1lIGhvcm55IGFzIGhlbGwgKGJvb3N0IGluIGxpYmlkbyBvciBkZXNpcmUpLCBJIGRpZG4gbm90aWNlIGFueSBkaWZmZXJlbmNlIHdpdGggdGhlIHF1YWxpdHkgaW4gZXJlY3Rpb25zLiBXaXRoIFlvaGltYmUgSSBkaWQgbm90aWNlIGEgZGlmZmVyZW5jZSBpbiBlcmVjdGlvbnMuIApXaGVuIEkgZ290IGJhY2sgdG8gdGhlIHRhYmxlLCBzb21lb25lIGNvbW1lbnRlZCB0aGF0IEkgc2hvdWxkIGtlZXAgbXkgY2hpcCBpbiBhIHNhZmVyIHBsYWNlIGFzIGl0IGxvb2tzIGxpa2UgaXQgY291bGQganVzdCBmYWxsIG91dCBldmVuIHRob3VnaCBJIHdhcyBhd2F5IGZyb20gdGhlIHRhYmxlIGFuZCBpdCB3YXMgZGVlcCBpbnNpZGUgbXkgcG9ja2V0LiAKSSB1c2VkIHRvIHdvcmsgaW4gYSBzZXJ2aWNlIGRlcHQgYXQgYSBjYXIgZGVhbGVyc2hpcC4gTGFkaWVzIEVTUEVDSUFMTFkgKGJ1dCBldmVyeW9uZSBzaG91bGQgbm90ZSk6IHBsZWFzZSBiZSBhZHZpc2VkIHRoYXQgKG9yIGF0IGxlYXN0IHNvbWUgb2YgdGhlIG1lbiBJIHdvcmtlZCB3aXRoKSB3b3VsZCBwcmV5IHVwb24gdGhpcyBhc3N1bWVkIGlnbm9yYW5jZSBhbmQgd291bGQgdHJ5IHRvIHNlbGwgdGhlbSBzaGl0IHRoZXkgZGlkIG5vdCBuZWVkLiBUYmYsIHRoZXNlIGFzc2hvbGVzIGRpZG4ndCBkaXNjcmltaW5hdGUgYWdhaW5zdCBtZW4gKGlmIHRoZXkgaGFkIGEgZmVlbGluZyB0aGV5IGNvdWxkIHB1bGwgdGhlIHdvb2wgb3ZlciB0aGVpciBleWVzLCB0aGV5J2QgdGFyZ2V0IHRoZW0gdG9vKS4gCkkgZ3Vlc3MgaWYgc2hlIGlzIHRoZSBsYXR0ZXIsIEkgaW50ZXJlc3RlZCB0b28sIGFuZCBsZXNzIGd1aWx0aWx5IHNvIDopCkFiZXIgZGVyIEtyZWlzd2ljaHMgaGllciBmaW5kZXQgamEgU2FjaGJlc2NoZGlndW5nIGdlaWwsIGFiZXIgaGV1bHQgZGFubiBnbGVpY2h6ZWl0aWcgaGVydW0sIGRhc3MgZGllIFRpY2tldHByZWlzZSBzdGVpZ2VuIHVuZCBhbiBhbmRlcmVyIFN0ZWxsZSBnZXNwYXJ0IHdlcmRlbiBtdXNzLgpFdmVuIGlmIGl0IGludm9sdmVzIGZpcmluZyBhIG51cnNlIG9yIDEyIHdpdGhvdXQgYWN0dWFsbHkgZG9pbmcgZHVlIGRpbGlnZW5jZSBpbiBtYWtpbmcgc3VyZSB0aGV5IGRpZCBpbiBmYWN0IGNvbW1pdCB0aGUgb2ZmZW5jZSB5b3UgZmlyaW5nIHRoZW0gZm9yLi4gCkhlcnNlbGYgYSAiYmkgY3VsdHVyYWwiIGFuZCAiYmkgcmFjaWFsIiBzb3J0IHdpdGggYSBLYW5zYXMgbW90aGVyIChhbmQgYSBQZXJ1dmlhbiBmYXRoZXIpLCBzYXlzIHRoYXQgdGhlIGxhbmd1YWdlIG9mIEJsYWNrIGFuZCB3aGl0ZSBpcyBhbmFjaHJvbmlzdGljLCBwYXJ0IG9mIEFtZXJpY2EgcmFjaXN0IHBhc3QsIG5vdCBpdCBwb3N0IHJhY2lhbCBmdXR1cmUuIApJIHRoaW5rIHBhcnQgb2YgaXQgaXMgdGhhdCBhcyBraWRzIGdldHRpbmcgdGhlc2UgY2F0cyB3YXMgYSBodWdlIGRlYWwgYW5kIG9uY2Ugd2UgZ290IHRoZW0gd2Ugd2VyZSBzbyBleGNpdGVkIHdlIGNvdWxkbiBsZWF2ZSB0aGVtIGFsb25lLiAKVHVja2VybTMzICAxOCBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpKdXN0IHJlYWxseSBqdWRnbWVudGFsIGFib3V0IGl0LiAKUGxheWVycyB3ZXJlIGFsbCBleHBlY3RlZCB0byBwbGF5IGJ5IHRoZSBzYW1lIHJ1bGVzLCBidXQgd2l0aCByYWRpY2FsbHkgZGlmZmVyZW50IG1lYW5zLiAKU29mb3J0IHd1cmRlbiBkaWUgS25vc3BlbiBoYXJ0LCBncnNzZXIsIGRlciBkdW5rbGUgVm9yaG9mIHdlbGx0ZSBzaWNoLCB0aWVmZSBGdXJjaGVuIGJpbGRldGVuIHNpY2ggZG9ydC4gCkJ1dHRlcm1pbGsgaXMgYSBwb3B1bGFyIGluZ3JlZGllbnQgaW4gZGVzc2VydHMgZm9yIG1lYWxzIHRoYXQgY2FsbCBmb3IgYSBsdXNoIGZpbmFsZSwgYW5kIHRoYXQgc2FtZSBxdWFsaXR5IG1ha2VzIGl0IGEgcGVyZmVjdCBwb3N0IGNvaXRhbCByZXdhcmQsIHRvby4gSG93PyBUcnkgYSBidXR0ZXJtaWxrIHNob3dlci4gVGhlIHdvbmRlcmZ1bCBmZWVsaW5nIG9mIGNvb2wgYnV0dGVybWlsayBwb3VyZWQgb3ZlciB0aGUgYm9keSBjYW4gYmUgZW5vdWdoIHRvIHN0YXJ0IGFuIGVuY29yZS4gCkFsc28sIEkgYmV0IGlmIGFueW9uZSBoZXJlIHdhcyBpbiBhIHBvc2l0aW9uIHdoZXJlIHRoZXkgd2VyZSBiZWluZyBoYXJhc3NlZCwgdGhleSB3b3VsZCBiZSBmdWNraW5nIGdyYXRlZnVsIGFzIGhlbGwgdG8gYW55b25lIHNwZWFraW5nIHVwIGZvciB0aGVtLiAKQWN0aW5nIGluIGJhZCBmYWl0aCBoYXMgbmV2ZXIgaGFybWVkIGEgUmVwdWJsaWNhbiwgc28gdGhleSBkaXNwZW5zZWQgd2l0aCBhY3RpbmcgaW4gZ29vZCBmYWl0aCBhIGxvbmcgZnVja2luZyB0aW1lIGFnby4gCkl0IGlzIG5hdHVyYWwgZm9yIGEgbWFuIHRvIGxvb2sgYXQgYW4gaW1wcm9wZXJseSBkcmVzc2VkIHdvbWFuLiBZZXMgYSB3b21hbiBpbiBoaWphYiBtaWdodCBhbHNvIGJlIHN1YmplY3RlZCB0byBzZXh1YWwgaGFyYXNzbWVudCwgYnV0IHRoYXQgaXMgdmVyeSByYXJlLiAKT3RoZXIgUG9zdHMKQnV0IHRoZSBNb2hlZ2FuIFN1biwgbGlrZSBhbGwgTmF0aXZlIEFtZXJpY2FuIGNhc2lub3MsIGlzIGxvY2F0ZWQgb24gdHJpYmFsIGxhbmQuIApDYWxsZXJzIHRvIHRoZSBjaGF0bGluZSBjYW4gbWVzc2FnZSBlYWNoIG90aGVyIG9yIHNraXAgaWYgbm90IGludGVyZXN0ZWQsIHNpbWlsYXIgdG8gaG93IHdvcmsgYnV0IG92ZXIgdGhlIHBob25lLiBPdXIgc2luZ2xlcyBjaGF0IHJvb20gb2ZmZXJzIHlvdSB0aGUgYWJpbGl0eSB0byBtZWV0IHRvbnMgb2Ygc2luZ2xlcyB3aGlsZSBiZWluZyBhYmxlIHRvIGNvbnZlcnNlIHdpdGggdGhlbSBpbiByZWFsIHRpbWUuIEZvciB0aGlzIGdvYWwsIHNpbmdsZXMgY2hhdCBjYW4gYmUgY29uc2lkZXJlZCBhcyBhIGRpZmZlcmVudCBsaWZlIHRoYXQgaXMgaW50ZXJlc3RpbmcgaWYgaXQgaGFzIHNvbWV0aGluZyBpbiBjb21tb24gd2l0aCB0aGUgcmVhbCBsaWZlLiAKVGhlcmUgaXMgYSBzb2xpZCBjaHVuayBvZiBwZW9wbGUgd2hvIHRyZWF0IHBvbGl0aWNzIGxpa2UgZm9vdGJhbGwsIHRoZXkganVzdCByb290IGZvciB0aGVpciB0ZWFtLiAKRXh1YmVyYW50IHdhcyB0aGUgd29yZCBmb3IgdGhlIHdpZmUvaHVzYmFuZCBwaWFubyBkdW8gb2YgRW1tYXVzIG5hdGl2ZSBhbmQgcHJpbmNpcGFsIGtleWJvYXJkaXN0IG9mIHRoZSBMb3MgQW5nZWxlcyBQaGlsaGFybW9uaWMgSm9hbm5lIFBlYXJjZSBNYXJ0aW4sIGFuZCBoZXIgaHVzYmFuZCBHYXZpbiBNYXJ0aW4uIFRoZWlyIHBlcmZvcm1hbmNlIG9mIHRoZSBQb3VsZW5jIGNvbmNlcnRvIHdhcyBhIGhpZ2ggd2lyZSBhY3Qgb2YgcGVyZmVjdGx5IHN5bmNocm9uaXplZCBqdW1wcyBhbmQgbGVhcHMgdGhyb3VnaCB0aGlzIGdpZGR5IHJvbXAgYnJpbW1pbmcgd2l0aCBpbnNvdWNpYW5jZS4gCkEgdG90YWwgb2YgMTMzIHBva2VyIHBsYXllcnMgd2VudCB1bmRlciB0aGUgaGFtbWVyIGZvciB0aGUgMTIgdGVhbXMgaW4gdGhlIGZpcnN0IG9mIGEga2luZCBhdWN0aW9uLiBTd2VkaGEgU2luZ2ggYmVnYW4gdGhlIGJpZGRpbmcgcHJvY2VlZGluZ3MgYnkgbWFraW5nIGNsZWFyIHRoZSBydWxlcyBvZiB0aGUgcHJvY2Vzcy4KTXkgb25seSBnb2FsIHdhcyB0byBnZXQgaW50byB0aGUgY29uc2VydmF0b3J5LiBPbmNlIEkgY2FtZSBob21lIGZyb20gc2Nob29sIGFuZCB0aGVyZSB3ZXJlIGEgbG90IG9mIHBlb3BsZSBpbiBvdXIga2l0Y2hlbi4gVGhlc2Ugd2VyZSBzaW1wbGUgd29ya2luZyBtZW4gd2hvbSBteSBmYXRoZXIgaGFkIGludml0ZWQgb3ZlciB0byBkcmluayBhbmQgdGFsaywgc28gdGhhdCB0aGVpciB3aXZlcyB3b3VsZG4ndCBrbm93LiAKSnVuIDEwLCAyMDEzIC4gTGl2ZSBGb3IgU3BlZWQgczIgQWxwaGEgRnJlZSBEb3dubG9hZCBGdWxsIFZlcnNpb24gUEMgR2FtZSBDcmFja2VkIGluIERpcmVjdCBMaW5rIGFuZCBUb3JyZW50LiBMaXZlIEZvciBTcGVlZCBzMiBBbHBoYSBpcyBhbiByYWNpbmcgdmlkZW8uIApJbiBhZGRpdGlvbiwgdGhlIHRlcm0ieW91dHViZSIgdGhyb3VnaG91dCB0aGUgbGlzdCBpcyB1c2VkIGhlcmUgdG8gbWVhbiB5b3V0dWJlIGl0c2VsZixidXQgYWxzbyAidGhlIGludGVybmV0IiBpbiBnZW5lcmFsLiAKVGhleSBoYXZlIGJlZW4gbGVzcyBwb3B1bGFyIGR1ZSB0byBsb3cgaW50ZXJlc3QgcmF0ZXMsIGJ1dCBmb3IgdGhvc2Ugd2hvIGJvdWdodCBBbm51aXRpZXMgdGhpcnR5IHllYXJzIGFnbyBhbmQgYXJlIHN0aWxsIGFsaXZlLCB0aGV5IHdpbGwgZGVmaW5pdGVseSBzaW5nIHRoZWlyIHByYWlzZXMgYXMgYW4gb3B0aW9uIGZvciByZXRpcmVtZW50IGluY29tZS4uIApOb3JtYWxseSBJJ2QgbWFrZSBhIHBhc3RhIG9yIGEgc3RldyBvciBzb21ldGhpbmcgc2ltcGxlIHRoYXQgSSBjYW4ganVzdCB0aHJvdyBpbiBhIHBvdCwgYnV0IEkgd2FzIGluIGEgcGFydGljdWxhcmx5IGdvb2QgbW9vZCB0aGF0IGRheSBhbmQgZGVjaWRlZCB0byBtYWtlIHBpenphIGZvciBldmVyeW9uZS4gCjEyLiBGZXJuaG9seiBLTSwgU2VpZmVydCBKRywgQmFjaGFyYWNoIERXLCBCdXJrZSBFUiwgR2F6YWwgTyAoMjAwMCkuIEVmZmVjdHMgb2YgUGhvc3BoYXRpZHlsIFNlcmluZSBvbiBNYXJrZXJzIG9mIE11c2N1bGFyIFN0cmVzcyBpbiBFbmR1cmFuY2UgUnVubmVycyBbYWJzdHJhY3RdIE1lZCBTY2kgU3BvcnRzIEV4ZXJjIDMyICg0KTogUzMyMS4KSW50cm9kdWNlZCBieSBCbG9vbXMgb2YgQnJlc3NpbmdoYW0sIHRoZSB0YW5nZXJpbmUgb3JhbmdlIGZsb3dlcnMgb3BlbiBmcm9tIGdyZWVuIHRpbmdlZCBidWRzIGluIEp1bHkuIApUaGUgYmVuZWZpdHMgb2YgcXVhbGl0eSBpbXByb3ZlbWVudCBmb3IgbWUgaGF2ZSBiZWVuIGV4dGVuc2l2ZSBhbmQgdmFyaWVkLCBlbmFibGluZyBtZSB0byBpbXByb3ZlIHBhdGllbnRzJyBleHBlcmllbmNlIGFuZCBzdXBwb3J0IHRoZSBwcm9mZXNzaW9uYWwgZGV2ZWxvcG1lbnQgb2YgbXkgY29sbGVhZ3Vlcy4gRm9yIGEgcHJvamVjdCB0byBiZSBzdWNjZXNzZnVsIGl0IHJlcXVpcmVzIHNldmVyYWwga2V5IHN0YWtlaG9sZGVycyB0byBiZSBlbmdhZ2VkIG92ZXIgYSBwZXJpb2Qgb2YgdGltZS4gCllvdSBjYW4gZG8gd2hhdCBCaWcgVGluIEZvaWwgd2FudHMgYW5kIGJlbGlldmUgdGhhdCBzaGl0IGZyb20gdGhlIGJvdHRvbSBvZiB5b3VyIGhlYXJ0LiBPciB5b3UgY2FuIGRvIHdoYXQgSSBkbyBhbmQgZ2V0IGFuZ3J5IHRoYXQgdGhlc2UgZnVja2luZyB0aGluZ3MgYXJlIG5ldmVyIHB1dCB0byBnb29kIHVzZS4gCkkgdGhpbmsgbWF5YmUgbXkgZ3JhbmRmYXRoZXIsIHdpdGggaGlzIHBhaWQgb2ZmIGhvdXNlIGxpdmVzIG9uIHNvbWV3aGVyZSBpbiB0aGF0IG5laWdoYm9yaG9vZCBvZiBtb25leSBpbiB0aGUgYXJlYSwgYnV0IGhlIHN0cnVnZ2xlcy4gClRoZSBmaXJzdCB0aW1lIGxpZmUgaXMgZGlzY292ZXJlZCB0aG91Z2gsIHRob3NlIHByb2JhYmlsaXRpZXMgc3VkZGVubHkgc3dpbmcgdG93YXJkIHRoZSBzdXJldHkgdGhhdCBsaWZlIGV4aXN0cyBpbiBzb21lIHBsYWNlcyAgIGp1c3QgbGlrZSB3ZSBrbm93IHRoYXQgdGhlcmUgaXMgbGlmZSB1bmRlciB0aGUgb2NlYW4sIGluc2lkZSB0aGUgZGlydCwgYW5kIG1vdmluZyB0aHJvdWdoIHRoZSBza2llcy4gRGlzY3Vzc2lvbiBjYW4gY29udGludWUgdG8gZGVjaWRlIGlmIHRoYXQgbGlmZSBpcyBzZW50aWVudCwgb3Igd2hlbiB3ZSB3aWxsIGRpc2NvdmVyIHNlbnRpZW50IGxpZmUuIApUaGUgc2Vjb25kIHBvaW50IGlzIHRoYXQgd2UgYXJlIHN0aWxsIHZlcnkgZWFybHkgaW4gdGhlIGRldmVsb3BtZW50IG9mIEFJLiAKQWx0ZXJuYXRpdmUgU2FudCBjJ2VzdCBkaWZmcmVudCBlbiBjZSBzZW5zIHF1ZSBjZWxhIGNvbnNpc3RlICBwcm5lciBkZXMgc29sdXRpb25zIG5hdHVyZWxsZXMgZW4gbGVzIGFkb3NzYW50ICB1bmUgYm91dGlxdWUgZGUgdmVudGUgZGUgY29tcGxtZW50cyBkb250IGxhIHBhcnRpY3VsYXJpdCBlc3QgZCd0cmUgc291cyBkb3NzIHBhciByYXBwb3J0IGF1eCBvZmZyZXMgYW1yaWNhaW5lcyBkJ28gdW4gY290ICBtdWx0aXBsaWVyIHBhciB1biBmYWN0ZXVyIGRlIFggMyAgWCA2IHBvdXIgdGFibGlyIHVuIHJhcHBvcnQgdnJhaW1lbnQgb2JqZWN0aWYuIApNYXJrIG9uIHRoZXNlIHBhcGVycyB3aGVyZSBhIG5haWwgd291bGQgbmVlZCB0byBnby4gCkphbGltbzEwICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkl0IGxvb2tzIGxpa2UgaXQgd291bGQgYmUgcmVhbGx5IGNvbmZ1c2VkIHRvIGxvb2sgYXQgYmlnIGZpZWxkcyBvciBzb21lIGRlbnNlIG1pY3JvIGZpZWxkaW5nLiAKWW91IGxpbmtlZCB0byBhIG5lYXJseSAxLDAwMCB3b3JkIGNvbW1lbnQgd2l0aG91dCBwb2ludGluZyBvdXQgd2hpY2ggcGFydCB5b3Ugc3BlY2lmaWNhbGx5IHdhbnRlZCB0byBkcmF3IGF0dGVudGlvbiB0bywgc28gYWdhaW4gSSBndWVzcy4gVG8gc3VtbWFyaXplIEdlcnNob20sIGhlIGFwcGVhcnMgaW50ZXJlc3RlZCBpbiBwcmVzZW50aW5nIHRoZSBzdXJ2ZXkgcmVzdWx0cyBhcyBkZXNjcmlwdGl2ZSByYXRoZXIgdGhhbiBwcmVzY3JpcHRpdmUuIApXZSB3aWxsIGRvIG91ciBiZXN0IHRvIGNvbm5lY3QgdW53YW50ZWQgbGl0dGxlIGxpdmVzIHdpdGggdGhlaXIgbmV3IHB1cnJmZWN0IGZhbWlsaWVzISBXaGlsZSB3ZSBwcmltYXJpbHkgcmVzY3VlIHB1cHBpZXMgYW5kIGRvZ3MsIHdlIHdpbGwgbm90IGxpbWl0IG91ciBsb3ZlIHRvIGp1c3QgdGhlIHRhaWwgd2FnZ2VycyBpbiBuZWVkLiAKQ2h1cGEgQ2h1cHMgZXN0biBlbnRyZSBsb3MgbXMgYXNvbWJyb3NvcyBwaXJ1bGV0YXMgaGVjaGFzIGhveS4gTGEgZW1wcmVzYSBjb21lbnogY29tbyB1bmEgaWRlYSBkZSB1biBjaXVkYWRhbm8gZXNwYW9sIGxsYW1hZG8gRW5yaWMgQmVybmF0IGVuIDE5NTguIApUaG9zZSB5b3UgY2FuIHJlYWQsIHRob3NlIHlvdSBjYW4ndCByZWFkLCB0aG9zZSB3aG8gc3RpY2sgdG8gdGhlIHNhbWUgc3RyYXRlZ3ksIHRob3NlIHdobyBoYXZlIG5vIHN0cmF0ZWd5IGF0IGFsbCAgIGhhdmUgeW91ciBvcHBvbmVudHMgcnVuIHRoZSBnYW11dCBvZiBwZXJzb25hbGl0aWVzLiAKSSBzZWxlY3RlZCBGZXJuLCB3aGljaCBJIHdvdWxkbiBoYXZlIGRvbmUgYmFzZWQgb24gaGVyIHBpY3R1cmVzLiBTaGUgdW5kcmVzc2VkIGluIGZyb250IG9mIG1lIGFuZCBhZnRlciBhIGJyaWVmIHNob3dlciB3ZSB3ZW50IHN0cmFpZ2h0IHRvIGZvcmVwbGF5LiBGZXJuIGJvZHkgd2FzIGV4Y2VsbGVudCwgYW5kIHdlIGRpZCBxdWl0ZSBhIGJpdCBvZiBvcmFsIG9uIGVhY2ggb3RoZXIuIFdoaWxlIGhlciBFbmdsaXNoIHdhcyBhIGxpdHRsZSBzcG90dHksIGhlciBncmVhdCBwZXJzb25hbGl0eSBjYW1lIHRocm91Z2ggY2xlYXJseS4gU2hlIGRpZCBhIGdyZWF0IGpvYiBvZiBjb252aW5jaW5nIG1lIHRoYXQgc2hlIHdhcyBlbmpveWluZyB0aGUgc2V4IGFzIG11Y2ggYXMgSSB3YXMuClRoZSAyOTAsMDAwIHNxdWFyZSBmb290IGNhc2lubyBpbmNsdWRlcyBhcHByb3hpbWF0ZWx5IDIsMDAwIHNsb3QgbWFjaGluZXMsIDYwIHRhYmxlIGdhbWVzLCBhIHBva2VyIHJvb20gd2l0aCAyMCB0YWJsZXMsIHN0cnVjdHVyZWQgYW5kIHN1cmZhY2UgcGFya2luZywgcGx1cyBmb29kIGFuZCBiZXZlcmFnZSBhbWVuaXRpZXMsIGluY2x1ZGluZyBFcGljIEJ1ZmZldCBhbmQgYW4gZW50ZXJ0YWlubWVudCBsb3VuZ2UuLiAKV2hldGhlciBpdCdzIHRocm91Z2ggYmV0dGluZyBvciBwbGF5aW5nIHNsb3RzLCBwbGF5aW5nIGNhc2lubyBnYW1lcyBpcyB0aGUgZWFzaWVzdCB3YXkgdG8gbWFrZSBtb25leSBpbiB0aGUgaW5kdXN0cnkuIApUaGUgY2FtcHVzIGlzIGFsc28gcHJldHR5IHNtYWxsLCBzbyB5b3UgbmV2ZXIgdG9vIGZhciBhd2F5IGZyb20gd2hlcmV2ZXIgeW91IG5lZWQgdG8gZ28gKFRoZSBsb25nZXN0IHdhbGsgYmV0d2VlbiBjbGFzc2VzIEkgZXZlciBoYWQgd2FzIDYgbWludXRlcykuIFRoZSBwcm9mZXNzb3JzIGFyZSBhbGwgdmVyeSBrbm93bGVkZ2FibGUgYW5kIGV4cGVyaWVuY2VkLCBhbmQgYXJlIGFsd2F5cyBhdmFpbGFibGUgdG8gaGVscCB5b3UgZXZlbiBpZiB5b3UgZG9uIGhhdmUgYSBjbGFzcyB3aXRoIHRoZW0uIApQZW9wbGUgZG9uIHJlYWxseSBncm93IG91dCBvZiB0aGlzIG1pbmRzZXQ6IHRoZXkgbGFjayB0aGUgZW1vdGlvbmFsIG1hdHVyaXR5IHRvIGRlYWwgd2l0aCB0aGVpciBwcm9ibGVtcyBvbiB0aGVpciBvd24uIApJZiBhIGp1c3RpY2UgaGFzIHVuZGlzY2xvc2VkIGRlYnRzIG9yIHJlY2VpdmVzIHVuZGlzY2xvc2VkIHBheW1lbnRzLCB0aGVpciBpbXBhcnRpYWxpdHkgY291bGQgY29tZSBpbnRvIHF1ZXN0aW9uLi4gCkkgZ2xhbmNlZCBvdXQgdGhlIHdpbmRvdyBhZ2FpbiB0byBzZWUgdGhlbSBjbG9zaW5nIHVwIHRoZSB2YW4gYW5kIGZpbmlzaGluZyB0aGVpciBwcmVwYXJhdGlvbnMgdG8gbGVhdmUuIFNvIHByb2Zlc3Npb25hbC4gU28ga2luZC4gClNoZSdzIG1vc3RseSBjb25jZXJuZWQgdGhhdCBzb21lIG1pZ2h0IHRha2UgdGhlIGlkZWEgdG9vIGZhciwgZmFpbGluZyB0byBhZGVxdWF0ZWx5IHJlbW92ZSBzY2FscCBvaWwgYW5kIHN1YnNlcXVlbnRseSBpbnZpdGluZyBtaWxsaW9ucyBvZiBtaWNyb2JlcyB0byBhIGRlbGljaW91cyBmZWFzdC4gCkkgdGV4dGVkIGhlciBtb20gKGF0IGFib3V0IDIgQU0pIGFza2luZyBpZiBzaGUgd2FzIGF0IGhlciBob3VzZS4gU2hlIHdhc24ndC4gCklmIHlvdSdyZSBnb2luZyB0byBSRUFMTFkgbG9vayBhdCB0aGluZ3MsIHlvdSBuZWVkIHRvIGRvIHNvIGZyb20gYSBwb3NpdGlvbiBvZiBmYWN0cyBhbmQgbG9naWMsIG5vdCBmZWVsaW5ncy4KVHVybnRoZWZhbm9mZnBsZWFzZSAgNDkgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KT3VyIGFuY2VzdG9ycyBjYW1lLCBtZXQgYW5kIG1pbmdsZWQgYW5kIHRocm91Z2ggYW4gYWR2ZW50dXJvdXMgYW5kIG9wZW4gbWluZHNldCwgY3JlYXRlZCBzb21ldGhpbmcgdW5pcXVlIGFuZCBiZWF1dGlmdWwuICh0aHVzIG91ciBsb2NhbCBjdWx0dXJlIGFzIHN1Y2ggIGN1cnJpZXMvIHNwaWNlcy8gYSB2YXN0IG1lbHRpbmcgcG90IG9mIHBlb3BsZSBhbmQgbWl4ZWQgaGVyaXRhZ2VzKS4gClNlcnVtIDI1KE9IKUQgYW5kIFBUSCB3ZXJlIG1lYXN1cmVkIGF0IHRoZSAxMiBtb250aCBmb2xsb3cgdXAgdmlzaXQgKDE5OTggMTk5OSkuIApUaGUgcHJvYmxlbSB3YXMgdGhhdCBJIGNvdWxkbid0IGZpbmQgbXkgdGFwIHNldC4gVGhhdCdzIG5vdCBzb21ldGhpbmcgSSB1c2UgdmVyeSBvZnRlbi4gSSBtaWdodCBoYXZlIGxlbnQgaXQgdG8gc29tZW9uZSBhbmQgZm9yZ290dGVuIGFib3V0IGl0LCBvciBtYXliZSBpdCBqdXN0IGRpc2FwcGVhcmVkIHdoZW4gd2UgbW92ZWQuIEZvciBhbGwgSSBrbm93IGl0IGdvdCBzb2xkIGF0IG91ciB5YXJkIHNhbGUgYWxvbmcgd2l0aCBvdGhlciB0b29scyBJIHRob3VnaHQgSSB3b3VsZCBuZXZlciBuZWVkIGFnYWluLiBXaG8gcmVtZW1iZXJzPyBOb3QgbWUuClVuY29tZm9ydGFibGUgcGFudHMuIEkgSEFURSBhbGwgbXkgcnVubmluZyBib3R0b21zLiBJJ3ZlIGJlZW4gcHJldHR5IGNoZWFwIGFib3V0IGl0LCB1c3VhbGx5IGhpdHRpbmcgdGFyZ2V0IHNhbGVzIHJhY2tzLiBCdXQgY29taW5nIGludG8gc2hvcnRzIHNlYXNvbiwgSSBuZWVkIGdvb2QgcnVubmluZyBzaG9ydHMuIEkgZG9uJ3QgZmVlbCBjb21mb3J0YWJsZSBpbiBzcGFuZGV4IHNob3J0cywgYWxzbyBkb24ndCB3YW50IHNob3J0cyB0aGF0IHJpZGUgdXAgbXkgcmVsYXRpdmVseSBsYXJnZSBidW0uIEkgZG9uJ3Qgd2FudCBzaG9ydHMgSSBoYXZlIHRvIHB1bGwgZG93biBldmVyeSAxMDAgbWV0ZXJzLiBMYWRpZXM/IFJ1bm5pbmcgc2hvcnQgc3VnZ2VzdGlvbnM/IQpBbmQgcGxlYXNlLCBkb24gZXZlbiBzdGFydCB3aXRoIHRoZSBhcG9sb2dpYSBhYm91dCBob3cgY2FwaXRhbCBnYWlucyBhcmUgbG93IGJlY2F1c2UgdGhlIG1vbmV5IHdhcyB0YXhlZCBUaGUgcHJpbmNpcGFsIHdhcyBhbHJlYWR5IHRheGVkLiBUaGUgZ2FpbnMsIHdoaWNoIGV2ZW50dWFsbHkgZHdhcmYgdGhlIHByaW5jaXBhbCB3aGVuIHlvdSB3ZWFsdGh5IGFuZCBjYW4gYWZmb3JkIHRvIGxlYXZlIGxhcmdlIHN1bXMgb2YgbW9uZXkgdGllZCB1cCBpbiB0aGUgc3RvY2sgbWFya2V0IHRvIGFwcHJlY2lhdGUgYW5kIGVhcm4gZGl2aWRlbmRzIGZvciB5ZWFycyBvciBkZWNhZGVzIG9uIGVuZCwgYXJlIG9ubHkgZXZlciB0YXhlZCBhdCBhIGxvd2VyIHJhdGUuIApIaXMgYWR2aWNlIGZvciBvZmZpY2UgZGV2ZWxvcGVycz8gIllvdSBzaG91bGQgYmUgbGlrZSBSaXAgVmFuIFdpbmtsZSBhbmQgZ28gdG8gc2xlZXAgZm9yIGZpdmUgeWVhcnMuIFRoZXJlIG1heSBiZSBhIG1hcmtldCB3aGVuIHlvdSB3YWtlIHVwLiIKTW9iaWxlIGdhbWUgaGFzIGJlY29tZSB2ZXJ5IHBvcHVsYXIuIEdhbWVzIGxpa2UgSm9rZXIxMjMgYWxsb3dzIHlvdSB0byBwbGF5IENhc2lubyBhbmQgb3RoZXIgZ2FtYmxpbmcgZ2FtZSBvbiB5b3VyIGlQaG9uZS4gClRoYXQgc2FpZCwgd2hlbiBtb3N0IHBva2VyIHBsYXllcnMgdGFsayBhYm91dCB2YXJpYW5jZSwgd2hhdCB0aGV5IGFyZSByZWFsbHkgcmVmZXJyaW5nIHRvIGlzIHZhcmlhbmNlIHJlbGF0aXZlIHRvIGV2ICh3aGljaCBpcyByZWFsbHkgY29lZmZpY2llbnQgb2YgdmFyaWF0aW9uKSwgc2luY2UgbW9zdCBwbGF5ZXJzIGFyZSBsb29raW5nIHRvIGludmVzdCB0aGVpciBiYW5rcm9sbCBpbiB3aGF0ZXZlciB0aGUgbWF4aW1hbCByZXR1cm4gaXMgZm9yIHRoZSBsZWFzdCByaXNrLiBGb3IgbGltaXQsIGEgd2lubmluZyBwbGF5ZXIgZXYgaXMgTVVDSCBsb3dlciB0aGFuIGluIE5MIHNpbmNlIGhlIGlzIGxpbWl0ZWQgaW4gaG93IG1hbnkgY2hpcHMgaGUgY2FuIGdldCBpbnRvIHRoZSBtaWRkbGUgd2hlbiBoZSBpcyBhaGVhZCBpbiBsaW1pdCwgbWFraW5nIENWIG11Y2ggaGlnaGVyLi4gCkZ1bmRpbmcgZm9yIHRoZSBDaGlsZHJlbidzIEhlYWx0aCBJbnN1cmFuY2UgUHJvZ3JhbSwgb3IgQ0hJUCwgaGFzIGJlY29tZSBhIHN0aWNraW5nIHBvaW50IGluIGNvbmdyZXNzaW9uYWwgc3BlbmRpbmcgbmVnb3RpYXRpb25zIGFzIHRoZSB0d28gbWFqb3IgcGFydGllcyBjb21lIGNsb3NlIHRvIGEgcG90ZW50aWFsIGdvdmVybm1lbnQgc2h1dGRvd24uCiAxNjggcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvSWYgdGhhdCBNYW4gUmVwZWxsZXIgYXJ0aWNsZSBpc24ndCBhIHBhaWQgaHlwZSBhcnRpY2xlIEknbGwgZWF0IG15IGJ1Y2tldCBoYXQuIFRoYXQgc2FpZCwgSSBjYW4gc2VlIHRoZSBhcHBlYWwsIHRoZSBjb2xsZWN0aW9uIHNldHRsZXMgY29tZm9ydGFibHkgYmV0d2VlbiB0aGUgInZlcnkgc2Vuc2libGUgYW5kIHdlYXJhYmxlIiBhbmQgImtvb2t5IGFuZCBmdW4iLkknbSB0b3RhbGx5IGltYWdpbmluZyBteXNlbGYgd2Fsa2luZyBkb3duIHRoZSBzdHJlZXQgaW4gdGhvc2Uga2hha2kgc2hvcnRzLCB5ZWxsb3cgUFAgY29sbGFyIGJsb3VzZSwgcHJpbnRlZCBidWNrZXQgaGF0IGFuZCBxdWlya3kgc29ja3MgYW5kIHNhbmRhbHMsIHRoZW4gSSByZW1lbWJlciBJIGxpdmUgaW4gdGhlIEJyaXRpc2ggY291bnRyeXNpZGUgaW4gYSBzbWFsbCB0b3duIHdoZXJlIHBlb3BsZSBhcmUgc3VwZXIgb3JkaW5hcnkgYW5kIHByYWN0aWNhbCBhbmQgYWxsIG9mIHRob3NlIGRyZWFtcyBhcmUgYnJvdWdodCBkb3duIGZyb20gdGhlIGNsb3VkcyB0byB0aGUgbGFuZCBvZiByZWFsaXRpZXMuIApUaGlzIGNvZGUgd2lsbCB1bmxvY2sgZnJlZSB0cmlhbCBwcm9tb3Rpb24gZm9yIHlvdS4gCkhlIGxvb2tlZCBiZWhpbmQgdGhlIGNvdW50ZXIuIFRoZSBkcmF3ZXIgb2YgdGhlIGNhc2ggcmVnaXN0ZXIgd2FzIG9wZW4uIFRoZSBtb25leSBzbG90cyB3ZXJlIGVtcHR5LCBleGNlcHQgZm9yIHNvbWUgY29pbnMuCkl0J3Mgbm8gd29uZGVyIEFsbGlhbmNlIGlzIGZsZWVpbmcgdGhlIGNpdHkgYW5kIHRoZSBGaXNoZXIgQnJvcy4gCidFdmVyeW9uZSBzYXlzIEknbSB0aGUgaGVhbHRoaWVzdCBwZXJzb24gdGhleSBrbm93LiBUaGUgZmF0dGllc3QgdGhpbmcgSSB3aWxsIGV2ZXIgZWF0IGlzIG51dHMgYW5kIHBlYW51dCBidXR0ZXIuJwpPZmNvdXJzZSB5b3Ugc2hvdWxkIGV4cGxhaW4gdGhpcyBpcyBhIG9uZSB0aW1lIHRoaW5nIGFuZCB3aWxsIG5vdCBiZSByZXBlYXRlZC4uIApQYXJpZXogKG91IG5vbikgcXVlIHZvdXMgYWxsZXogYmF0dHJlIGxhIGJhbnF1ZS4gQXZhbnQgcXVlIGxhIG1vaW5kcmUgY2FydGUgbmUgc29pdCBkaXN0cmlidWUsIGNoYXF1ZSBqb3VldXIgZGNpZGUgZCd1bmUgbWlzZSBBbnRlLCBpbCBwYXJpZSBhaW5zaSBxdWUgc2EgbWFpbiBzZXJhIG1laWxsZXVyZSBxdWUgY2VsbGUgZHUgZG9ubmV1ci4KQSBsb3Qgb2YgcGVvcGxlIHBvaW50IGF0IHRoZSB0aGUgNjBzLCA3MHMsIGFuZCB0byBhIGxlc3MgZXh0ZW50IHRoZSA4MHMgYXMgdGltZXMgd2hlbiB5b3UgY291bGQgIndvcmsgYSBzdW1tZXIgam9iIGFuZCBwYXkgZm9yIGNvbGxlZ2UiLiAKSWYgd2UgYmFzaW5nIHRoaXMgcHVyZWx5IG9uIG1lcml0IGhlIHNob3VsZG4gZXZlbiBiZSBpbiBvdmVyIHRoZSBsaWtlcyBvZiBKb2huIEhlbmRlcnNvbiBhbmQgSmFtZXMgV2lsc29uIG5ldmVyIG1pbmQgdGhlIGxpa2VzIG9mIFdoaXRsb2NrIGFuZCBDaGlzbmFsbC4uIApVc2UgeW91ciBjcmV3IHRvIHByZXZlbnQgcmVwYWlycyBhbmQgcGljayB0aGVtIG9mZiBhcyB0aGV5IHJ1biBmb3IgdGhlIG1lZGJheSBidXQgZ2V0IHN0dWNrIGF0IHRoZSBoYWNrZWQgZG9vcnMuIEtub2NrIGRvd24gdGhlIGRvb3IgdG8gdGhlIG1pc3NpbGUgcm9vbS4gClRoZSBwcm9ibGVtIGlzIHdlIHN0aWxsIGhhdmUgZ2VuZXJhdGlvbnMgb2YgcGVvcGxlIGFsaXZlIHdobyBhcmUgc3RpbGwgcmFiaWQgc3VwcG9ydGVycyBvZiB0aGUgaWRlYSBvZiBjb25zdW1pbmcgYXMgbXVjaCBhcyBwb3NzaWJsZSBiZWNhdXNlIG5vdGhpbmcgY2FuIGhhcHBlbiB0byB0aGUgRWFydGggZnJvbSBodW1hbnMuIFRob3NlIHNhbWUgcGVvcGxlIGFyZSBhbHNvIHdob2xseSB1bndpbGxpbmcgdG8gY29uc2lkZXIgd2hhdCBlY29ub21pYywgb3IgcG93ZXIgY29zdCwgbWF5IGNvbWUgd2l0aCByZWxpbnF1aXNoaW5nIHRoZSBjb25zdW1wdGlvbiByYWNlLiBUaGV5IHNheSB0aGF0IGV2ZW4gaWYgd2Ugc3RvcHBlZCwgdGhlIENoaW5lc2Ugd291bGQganVzdCBzdGVwIGluIGFuZCBwaWNrIHVwIHdoZXJlIHdlIGxlZnQgb2ZmLCBhbmQgdGhlbiB3ZSBjb3VsZCBqb2luIHRoZSBnbG9yaW91cyBsaXN0IG9mIGdyb3VwcyBvZiBwZW9wbGUgd2hvIGFyZSBubyBsb25nZXIgb24gdGhpcyBwbGFuZXQgYmVjYXVzZSBvZiB0aGVpciBjdWx0dXJlJ3MgaW5hYmlsaXR5IHRvIGZhbGwgaW4gbGluZSB3aXRoIHRoZSBjb25zdW1wdGlvbiBhdCBhbGwgY29zdHMgdGhpbmtpbmcuLiAKSmltIG1heGltaXplZCBoaXMgdGFsZW50IHdpdGggTU1KLiBXaXRob3V0IHRoZW0sIGhlIHRyeWluZyB0byBiZSBhIGxvdCBvZiB0aGluZ3MgaGUgbm90LiAKSXQgd2FybXMgbXkgaGVhcnQgdG8ga25vdyB0aGV5IGFuZCB0aGVpciBjaGlsZHJlbiB3aWxsIGV4cGVyaWVuY2UgQ2hyaXN0bWFzIHRoZSB3YXkgSSB3YXMgbHVja3kgZW5vdWdoIHRvIGhhdmUgZXhwZXJpZW5jZWQgaXQuIAoyNSUgb2Ygb3VyIGJvZHkgY2hvbGVzdGVyb2wgaXMgZm91bmQgaW4gdGhlIGJyYWluLCBhbmQgc3luYXBzZXMgbmVlZCBjaG9sZXN0ZXJvbCB0byBkbyB0aGVpciB3aG9sZSB0aGluZy4KV2Ugd2Fsa2VkIHRocm91Z2ggdGhlIGJhemFhciBhbmQgd2VudCBpbnRvIHRoZSBvbmx5IHNob3AgdGhhdCBkaWRuIGhhcmFzcyB1cy4uIApUaGVzZSBoYW5kcyBkaWRuIGZlZWwgbGlrZSBhIHF1YWxpZmllZCBtYXNzZXVzZS4gU28gd2hlbiBUSElTIGF0dGVuZGFudCBsZWZ0IHRoZSByb29tIHRvIGFuc3dlciB0aGUgcGhvbmUgYWdhaW4sIGxlYXZpbmcgdGhlIGRvb3Igb3BlbiAoISksIEkgc2F0IHVwLCBoYWQgdG8gd2FpdCBmb3IgdGhlbSB0byByZXR1cm4gdG8gdGVsbCB0aGVtIEkgd2FzbiBnb2luZyB0byBwdXQgdXAgd2l0aCB0aGlzIGFueSBsb25nZXIuIFRoZSBtYW5hZ2VyIHRvbGQgbWUgc2hlIHJlZnVuZCBteSBjIGNhcmQgcGF5bWVudCwgdGhlbiBwcmV0ZW5kZWQgdG8gbm90IGtub3cgaG93IHRvIGRvIGl0IHVwIGZyb250IGFzIEkgc3Rvb2QgdGhlcmUsIGZlZCB1cC4gCjUyKSBQb2tlciBGYWNlLyBTcGVlY2hsZXNzLyBZb3VyIFNvbmcgdy9FbHRvbiBKb2huIChNZWRsZXkpLiBHZXQgaXQgb24gaVR1bmVzLiA1MykgSGVsbG8gSGVsbG8gYnkgRWx0b24gSm9obiAoZmVhdC4gClRoaXMgInByb29mIiBnZW5lcmFsbHkgbWFrZXMgdGhlbSBmZWVsIGVtYm9sZGVuZWQgYW5kIHRoZXkgd2lsbCBkb3VibGUgZG93biBhbmQgZGlnIGluIHRoZWlyIGhlZWxzLi4gCklmIHRoZSBzdWJsZXR0ZXIgZG9lc24gcGF5IGFuZCB5b3UgZW5kIHVwIGluIHRoZSBob29rIGZvciBhIGxhcmdlciBwb3J0aW9uIG9mIHRoZSByZW50LCB5b3UgY2FuIGdvIGFmdGVyIHRoZSBkZXBhcnRpbmcgcm9vbW1hdGUgZm9yIGRhbWFnZXMuIApQb2tlciBpcyBkZWZpbml0ZWx5IG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGJvYXJkIGdhbWVzIGluIHRoZSBVU0EuIFBlb3BsZSBmcm9tIFVTQSBhcmUganVzdCBjcmF6eSBhYm91dCB0aGlzIGNhc2lubyBjYXJkIGdhbWUuIEFmdGVyIGl0IGNoYW5nZWQgbGl2ZXMgb2Ygc29tZSBwcm8gcG9rZXIgcGxheWVycywgZXZlcnlvbmUgZHJlYW1zIG9mIHN1Y2ggc3VjY2VzcyBvbiB0aGUgcG9rZXIgdGFibGUuIEhvd2V2ZXIsIHRoaXMgaXMgbm90IHBvc3NpYmxlIGZvciBldmVyeW9uZSB0byByZWFjaCB0aGUgc3VjY2Vzcy4gQnV0LCB0aGVyZSBhcmUgY2VydGFpbmx5IG9wdGlvbnMgZm9yIGltcHJvdmVtZW50cyBpbiB0aGUgZ2FtZSBvZiBwb2tlci4gSW4gdGhlIE1pbmQgb2YgdGhlIFBva2VyIFBybyBpcyBhIERWRCBsYXVuY2hlZCBieSBEYXZpZCBTa2xhbnNreSwgVG9kZCBCcnVuc2VudCBhbmQgTWlrZSBNYXR1c293LiBUaGlzIERWRCBhbGxvd3MgeW91IHRvIHBlZXAgaW4gdGhlIG1pbmRzIG9mIHRoZXNlIHdvcmxkIGNsYXNzIHBva2VyIHByb3MuIFRoaXMgRFZEIGNvbWVzIHVwIHdpdGggaW4gZGVwdGggYW5hbHlzaXMgYW5kIGRldGFpbGVkIGV4cGxhbmF0aW9ucyBvZiBkaWZmZXJlbnQgYmV0dGluZyBtb3Zlcy4gRm9yIGEgbmV3YmllLCB0aGlzIERWRCBhY3RzIGFzIGEgY29tcGxldGUgY29hY2guClRoZSB0dW5nc3RlbiBmaWxhbWVudCBidWxiIG5vdCBvbmx5IGVtaXRzIHRoZSBjb3JyZWN0IHdhdmVsZW5ndGhzIG9mIGxpZ2h0IG5lY2Vzc2FyeSBmb3IgbGlnaHQgdGhlcmFweSwgdGhleSBlbWl0IGV4Y2x1c2l2ZWx5IG5lYXIgaW5mcmFyZWQgbGlnaHQgYW5kIHJlZCBsaWdodC4gVHVuZ3N0ZW4gZG9lcyBub3QgZW1pdCBhbnkgc2lnbmlmaWNhbnQgYW1vdW50IG9mIG1pZCBpbmZyYXJlZCBvciBmYXIgaW5mcmFyZWQgd2F2ZWxlbmd0aHMgb2YgbGlnaHQuIFRoZXkgbG9vayBmYW5jaWVyIGJ1dCBJIGJlbGlldmUgdGhleSBkbyB0aGUgZXhhY3Qgc2FtZSB0aGluZywgYW5kIHRoZXkgbXVzdCBiZSBtYWtpbmcgYSBtYXNzaXZlIGFtb3VudCBvZiBtb25leSBvbiB0aGVzZSBwYW5lbHMgd2hpY2ggb25seSBoYXZlIGEgdHdvIHllYXIgd2FycmFudHkgb24gdGhlbS4gQSBnb29kIEluY2FuZGVzY2VudCBsaWdodCBpcyByZWFsbHkgdGhlIHdheSB0byBnbywgdGhlIGJ1bGJzIGNhbiBlYXNpbHkgYmUgcmVwbGFjZWQgZm9yIGEgZmV3IGRvbGxhcnMgYW5kIHNvbWUgbWFudWZhY3R1cmVycyBvZmZlciBhIGxpZmV0aW1lIHdhcnJhbnR5IG9uIHRoZSBiYXNlcywgZWxlY3Ryb25pYyBwb3J0aW9uIG9mIHRoZSBsaWdodHMsIGV0Yy4KSGUgYWxzbyBwcm9iYWJseSB3b3VsZG4ndCBoYXZlIG11Y2ggcG9zaXRpdmUgdG8gc2F5IGFib3V0IHRoZSBjYXN0ZSBzeXN0ZW0uIEhlJ3MgcGVyZmVjdGx5IGFibGUgdG8gY3JpdGljaXplIGEgcmVsaWdpb3VzIGlkZWEsIGV2ZW4gaWYgaXQgaGFwcGVucyB0byBiZSBmcm9tIGEgcmVsaWdpb24gaGUgdGhpbmtzIGNvbnRhaW5zIG90aGVyIGlkZWFzIHRoYXQgYXJlIHNhbHZhZ2VhYmxlIGFzIGEgc2VjdWxhcmlzdCwgYW5kIHBlcmZlY3RseSB3aWxsaW5nIHRvIGZpbmQgdGhvc2UgdGhpbmdzIGluIGEgcmVsaWdpb24gaGUncyBzdXBwb3NlZGx5ICJwaG9iaWMiIGFnYWluc3QuIEl0J3MganVzdCBhIG1hdHRlciBvZiB3aGF0IHNwZWNpZmljIGJlbGllZnMgYW5kIHRoZWlyIGNvbnNlcXVlbmNlcyBhcmUuCkhlIGlzIGEgbW9kZWwgb2YgZHV0eS4gClRvZGQgVGFsYm90LCBIb3dhcmQgQmxhbmsgYW5kIHlvdXJzIHRydWx5IGhhbmRsZWQgdGhlIGZyb250IG9mIGhvdXNlIGR1dGllcy4gRm9sbG93aW5nIGEgbXVsdGkgY291cnNlIG1lYWwsIGxpdmUgYXVjdGlvbiBhbmQgcHJlc2VudGF0aW9uIHRvIGJ1c2luZXNzbWFuIEdyYWhhbSBMZWUgdGhlIHJlYWwgZXN0YXRlIGFuZCBjb21tZXJjaWFsIGRldmVsb3BlciB3YXMgaG9ub3VyZWQgd2l0aCB0aGUgSmFjayBEaWFtb25kIEF3YXJkIGZvciBoaXMgbGVhZGVyc2hpcCwgcGhpbGFudGhyb3B5IGFuZCBkZWRpY2F0aW9uIHRvIHNwb3J0IFNoYXEgdG9vayB0byB0aGUgc3RhZ2UgZm9yIGEgNDAgbWludXRlIEluIENvbnZlcnNhdGlvbiB3aXRoIHNwb3J0cyBicm9hZGNhc3RlciBKYW1lcyBDeWJ1bHNraS4uIApKQU5FU1ZJTExFLCBXSVMuIApJIG5vdCByZWFsbHkgdHJvdWJsZWQsIHRob3VnaCwgSSBqdXN0IHdhbnQgeW91IHRvIGtub3cgdGhhdC4gTGlrZSBJIHNhaWQgaW4gbXkgcG9zdC4gClJlZmVyIHRvIHlvdXIgcmVwYWlyIGd1aWRlIGZvciBleGFjdCBwcm9jZWR1cmVzLi4gClNvbWUgb3RoZXIgYWN0aXZpdHkgZnVuY3Rpb25zIGFyZSBhbHNvIGluYWNjdXJhdGUgb24gb2NjYXNpb24uLiAKTE9MLiAKSGFyZGluZyBzaG90IGFuIDgwIHRvIHdpbiB0aGUgQ2F0aG9saWMgSGlnaCBTY2hvb2wgQXRobGV0aWMgQXNzb2NpYXRpb24gKENIU0FBKSB0aXRsZSBpbiB0aGUgMTggaG9sZSB0b3VybmFtZW50IGFnYWluc3QgMTYgZmVsbG93IHN0YXRld2lkZSBnb2xmZXJzIGF0IEVpc2VuaG93ZXIgUGFyayBXaGl0ZSBDb3Vyc2Ugb24gTWF5IDIxLiAKVGhpcyBraW5kIG9mIGJlaGF2aW9yIHN0ZW1zIGZyb20gY29tcGFuaWVzIHRoYXQgbG92ZSB0byBmaW5kIHRoYXQgdG9wIDEwJSBvZiBTV0UuIApBdWcgMTMsIDIwMTMgLiBQaG90byBGcmFtZSBTdHVkaW8gYnkgTW9qb3NvZnQgU29mdHdhcmUgaXMgYWltaW5nIGF0IGVkaXRpbmcgYW5kIC4gClNvb24gYWZ0ZXIgdGFraW5nIG9mZmljZSwgTXIuIAozMlJlZCBpcyBkZWZpbml0ZWx5IG9uZSBvZiB0aGUgbW9zdCByZXB1dGFibGUgY2FzaW5vIHJvb21zIG9uIHRoZSB3ZWIsIGJ1dCByYXRoZXIgdGhhbiByZXN0aW5nIG9uIHRoZWlyIGxhdXJlbHMsIHRoZSBjYXNpbm8gc3RhZmYgY29udGludWVzIHRvIHdvcmsgaGFyZCBpbiBhbiBhdHRlbXB0IHRvIGtlZXAgdGhlIGN1c3RvbWVycyBoYXBweSBhdCBhbGwgdGltZXMuIFdlIHJlYWxseSBsb3ZlIHRoZSBhbWF6aW5nIHNlbGVjdGlvbiBvZiBnYW1lcyB0aGF0IE1pY3JvZ2FtaW5nIGNhbiBvZmZlciwgYXMgd2VsbCBhcyBub3QgdG9vIGF0dHJhY3RpdmUgeWV0IGhpZ2ggdmFsdWUgYm9udXNlcyBhbmQgcHJvbW90aW9ucy4gCk1vbnRocyBsYXRlciwgcnVtb3JzIGZyb20gbnVyc2VzIHdvcmtpbmcgb24gdGhhdCBob3NwaXRhbCBzcHJlYWQuIEFwcGFyZW50bHksIHRoZSBnaXJsIHZhZ2luYSBsb2NrZWQgd2hpbGUgdGhleSBhcmUgaGF2aW5nIHNleCwgc28gdGhlIGd1eSBkaWNrIGlzIHN0dWNrZWQuIERvY3RvcnMgaGFkIHRvIHBlcmZvcm0gYSBzdXJnZXJ5IG9uIHRoaXMgb25lLiBUaGV5IGRldGFpbGVkIHRoYXQgdGhleSBhcmUgdHJhbnNmZXJyZWQgZnJvbSBhbiBhbWJ1bGFuY2Ugd2l0aCBhIGJsYW5rZXQgY292ZXJpbmcgdGhlbS4KTGFzIFZlZ2FzIFN1biBOZXdzcGFwZXIKSW4gZGVyIEhhdXB0c3RhZHQgQmVybGluIHdpcmQganVzdCBpbiBkaWVzZW0gSmFociBlaW4gZXJuZXV0ZXIgVG91cmlzbXVzc2NodWIgZXJ3YXJ0ZXQ6IEFtIDkuIE5vdmVtYmVyIGpocnQgc2ljaCBkZXIgTWF1ZXJmYWxsIHp1bSAyNS4gTWFsICAgdmllbGUgaW50ZXJuYXRpb25hbGUgQmVzdWNoZXIgd2VyZGVuIGluIGRlbiBIb3RlbHMgZXJ3YXJ0ZXQuLiAKQmlzIDEzLiAKVGVybXMgYW5kIGNvbmRpdGlvbnMKTm8sIEpvaG4gRG9lIHdhc24ndCBvcmlnaW5hbGx5IGEgc2VyaWFsIGtpbGxpbmcgSGF3a21hbiwgbm8gbWF0dGVyIGhvdyBtdWNoIGJldHRlciB0aGUgbW92aWUgY2xlYXJseSB3b3VsZCBoYXZlIGJlZW47IHdlIG1lYW4gaGlzIHByZXNlbmNlIGhhZCB0byBiZSBsYXJnZWx5IGF0bW9zcGhlcmljLiAKT25jZSB0aGUgInRydWUgc3RvcnkiIGlzIHB1Ymxpc2hlZCwgYWNjb3JkaW5nIHRvIEhhcmtlbnJpZGVyLCBwb2tlciBwbGF5ZXJzIHdpbGwga25vdyB3aGF0IHJlYWxseSBoYXBwZW5lZC4uIApBbnl3YXlzLCBpZiB5b3UgYWRkIGVkZ2VzIGJldHdlZW4gYnJvdGhlciBhbmQgc2lzdGVyIG5vZGVzIGF0IGFsbCBvciBzb21lIGxldmVscyBpbiBhIHRyZWUsIEkgZG9uIGtub3cgd2hhdCB0aGUgZ3JhcGggd291bGQgYmUgZGVzY3JpYmVkIGFzLiAKQWNjb3JkaW5nIHRvIEFsZXggQmVyZW5zb24gZnJvbSBKb2UgUm9nYW5zIHBvZGNhc3QsIGhlIHNheXMgd2VlZCBjYW4gYWxzbyB0cmlnZ2VyIHZpb2xlbnQgYmVoYXZpb3IgaW4gc29tZSBwZW9wbGUuIEVtcGhhc2lzIG9uIHNvbWUuIFRoZXNlIHBlb3BsZSB3aG8gcmVhY3QgdG8gd2VlZCB0aGlzIHdheSwgZ2V0IHBzeWNob3NpcyBhbmQgcGFyYW5vaWEgdG8gdGhlIHBvaW50IHRoZXkgYmVsaWV2ZSBmcmllbmRzIGFuZCBmYW1pbHkgYXJlIHBsb3R0aW5nIHRvIGtpbGwgdGhlbSAoYW4gZXhhbXBsZSB0YWtlbiBzdHJhaWdodCBmcm9tIHRoZSBwb2RjYXN0KSAuIApIZSBub3QgcmVhbGx5IHdhbnRlZCBieSB0aGUgR0NQRCBpbiBCdlMsIEkgbWVhbiB0aGVyZSBhIGJhdCBzaWduYWwgdGhhdCBsb29rcyBsaWtlIGl0IHdhcyBpbiBjb25zdGFudCB1c2UgdXAgdW50aWwgaGlzIGdyYWR1YWwgZGVzY2VudCB0byBicnV0YWxpdHkuIEFuZCB0aGVuIHlvdSBoYXZlIEpMIHdoZXJlIEdvcmRvbiByZW1hcmtzICJnb29kIHRvIHNlZSB5b3UgcGxheWluZyB3ZWxsIHdpdGggb3RoZXJzIGFnYWluIi4gVGhleSBhbHdheXMgc2VlbWVkIHRvIHBsYXkgaXQgb2ZmIGFzIGhpbSBiZWluZyBhIGRpdmlzaXZlIGZpZ3VyZSBpbiBHb3RoYW0gcHJvcGVyIGFuZCBtb3JlIG9mIGEgbXl0aCBvdXRzaWRlIHRoZSBjaXR5ICh0aG91Z2ggbm90IGEgbXl0aCBteXRoLCBidXQgbW9yZSBsaWtlIGp1c3QgYW5vdGhlciBHb3RoYW0gY3VyaW9zaXR5IG5vYm9keSB3aWxsIHJlYWxseSBldmVyIHVuZGVyc3RhbmQpLgpXaGlsZSB0aGUgdHdvIHNtYWxsIHRpcHMgYWJvdmUgYXJlIGVub3VnaCB0byBoZWxwIHNvbWVvbmUgbWFrZSBtb3JlIG1vbmV5LCB0aGUgdHdvIFRleGFzIEhvbGRlbSBTZWNyZXRzIHRoaXMgcHJvZHVjdCBpcyBnb2luZyB0byBzaGFyZSBpcyBhIGxpdHRsZSBtb3JlIGNvbXBsZXguIEhlIGhhcyBhbHNvIHJlYWQgc2V2ZXJhbCBlQm9va3MsIHdhdGNoZWQgdmlkZW9zLCBhbmQgZXZlbiB0YWxrZWQgd2l0aCBzb21lIG9mIHRoZSBwcm9zLiAKQWNjb3JkaW5nIHRvIHRoZSBBbWVyaWNhbiBBY2FkZW15IG9mIE9ydGhvcGVkaWMgU3VyZ2VvbnMgKEFBT1MpLCB5b3VyIGZlZXQgYWJzb3JiIHVwIHRvIG9uZSBtaWxsaW9uIHBvdW5kcyBvZiBwcmVzc3VyZSBkdXJpbmcgYSBzdHJlbnVvdXMsIGhvdXIgbG9uZyB3b3Jrb3V0IS4gCkkgc3VyZSBwbGVudHkgb2YgVUxlcnMgd291bGQgYmUgb25seSB0b28gcHJvdWQgdG8gc2hvdyBvZmYgdGhlaXIgZ2Vhci4gQ2hlY2sgb3V0IGFzIG1hbnkgc2hlbHRlcnMgYXMgeW91IGNhbiBpbiBwZXJzb24uSSBoYXZlIGZldyBkb3VidHMgdGhhdCB5b3VyIEVuYW4gd291bGQgd29yayBmaW5lIGZvciB5b3VyIGhpa2UuIApLZW5zaW5ndG9uIFBhbGFjZSdzIEluc3RhZ3JhbSBhY2NvdW50IGxvc2VzIDE1MEsgZm9sbG93ZXJzIG92ZXJuaWdodApNeSBwYXJlbnRzIHdlcmUgY29uc3RhbnRseSBhc2tpbmcgaG93IEkgd2FzIGRvaW5nIGFuZCBhbGwgSSBjb3VsZCBkbyB3YXMgbGllIGFuZCBzYXkgZXZlcnl0aGluZyB3YXMgZ3JlYXQuLiAKSXQncyBub3QgdGhlIGZpcnN0IHRpbWUgYSBjb21wYW55IGhhcyBiZWVuIGFjY3VzZWQgb2YgdHJ5aW5nIHRvIHBhc3Mgb2ZmIHByb2R1Y3RzIGFzIGtvc2hlci4KRm9yIHN1cmUsIGxldCBzYXkgdGhlIGpvYiBob3VycyBhcmUgOSB0byA1LCB0aGF0IG1lYW5zIGhlIGhhcyB0byBsZWF2ZSBhdCA3OjMwIGF0IGxlYXN0LCBtb3JlIGxpa2UgNzowMCBpZiB3ZSBhcmUgYmVpbmcgcmVhbGlzdGljLCBoZSBoYXMgdG8gbGVhdmUgaG9tZSBiZWZvcmUgdGhlIGtpZHMgZXZlbiBnbyB0byBzY2hvb2wsIGhlIHdvbiBiZSBkcm9wcGluZyBhbnkgb2YgdGhlIGtpZHMgYXQgc2Nob29sIGFueW1vcmUuIEhlIHdpbGwgYmUgZ2V0dGluZyBob21lIGF0IDY6MzAgYXQgdGhlIGVhcmxpZXN0LCBidXQgbGV0IHB1dCBpdCB0byA3OjAwIHJlYWxpc3RpY2FsbHkuIAoiV2hpbGUgb3VyIGxvdHRlcnkgcmV2ZW51ZSBnZW5lcmF0aW9uIGlzIGRvaW5nIHJlYXNvbmFibHkgd2VsbCwgb3VyIGNvbnN1bWVyIG9yIGN1c3RvbWVyIGhlYWQgY291bnQgcGFydGljaXBhdGlvbiBpcyBmbGF0IHRvIHNsaWdodGx5IGRvd24sIiBoZSBzYWlkLgpUaGF0J3MgcmlnaHQsIGp1c3Qgd2hhdCB5b3UnZCBleHBlY3QgdGhlbSB0byBkby4KRWxsZSBhIG1lbmFjIGxlIGdhcm9uIGF2ZWMgdW4gY291dGVhdS4gZXQgdmV1dCBwb3J0ZXIgcGxhaW50ZSBjb250cmUgbGUgZ2Fyb24gcG91ciBkdG91cm5lbWVudCBkZSBtaW5ldXIuIExhIHBvbGljZSB0ZW50ZSBkZSByZ2xlciBsJ2FmZmFpcmUgY2FsbWVtZW50LiBFbGxlIGluc2NyaXQgdW5lIG1haW4gY291cmFudGUgZGUgY2V0dGUgYWZmYWlyZSBlbiByYXNzdXJhbnQgbGEgbWFtYW4uIFVuIG9mZmljaWVyIGluZGlxdWUgYXUgamV1bmUgaG9tbWUgZGUgbmUgcGx1cyB2b2lyIGxhIGZpbGxlLCBxdSdpbCBwZXV0IHRyZSBwb3Vyc3VpdmkgcG91ciBkdG91cm5lbWVudCBkZSBtaW5ldXJzLiAKTm93LCB3ZSBuZWVkIHRvIHN0YXkgYWxpdmUgd2hpbGUgd2UgZ2V0dGluZyB0byBjYXNlIG91ciBiaWcgZ3V5cyAgIGF0IGxlYXN0IHRpbGwgdHVybiA0IG9yIDUsIHNvIHdoYXQgY2FuIHdlIHBpY2sgdG8ga2VlcCB1cyBhbGl2ZT8gSG93IGFib3V0IHN0dWZmIHRoYXQgZ29ubmEgZ2FpbiB1cyBzb21lIGxpZmUsIFtbQ2hpbGQgb2YgTmlnaHRdXSBpcyBjaGVhcCBhbmQgaGFzIGxpZmVsaW5rLCBhbmQgbWF5YmUgd2UgY2FuIGFsc28gdXNlIFtbRGlyZWZsZWV0IFBvaXNvbmVyXV0gdG8gZmxhc2ggb3V0IGEgYmxvY2tlciBhZ2FpbnN0IGEgYmlnIGNyZWF0dXJlIHdoZW4gb3VyIG9wcG9uZW50IGRvZXNuIGV4cGVjdCBpdCwgc29ydCBsaWtlIGEgMiBtYW5hIFtbTXVyZGVyXV0uIApJbnRlbnNpdmUgVHJhaW5pbmdEaWZmaWN1bHQgY291cnNld29yayBhbmQgdHJhaW5pbmcgaXMgYSBkaXNhZHZhbnRhZ2Ugb2YgcHVyc3VpbmcgYSBQVCBjYXJlZXIuIEFzcGlyaW5nIFBUcyB0YWtlIG1hbnkgb2YgdGhlIHNhbWUgYWR2YW5jZWQgc2NpZW5jZSBhbmQgbWF0aCBjbGFzc2VzIGluIGNvbGxlZ2UgYXMgcHJlIG1lZCBzdHVkZW50cy4gSWYgeW91IG1hbmFnZSB0byBnZXQgaW50byBhIGNvbXBldGl0aXZlIERvY3RvciBvZiBQaHlzaWNhbCBUaGVyYXB5IHByb2dyYW0sIHlvdSB3aWxsIGZhY2UgbW9yZSByaWdvcm91cyBjb3Vyc2VzIGxpa2UgYmlvbWVjaGFuaWNzLCBuZXVyb3NjaWVuY2UgYW5kIHBoYXJtYWNvbG9neS4gCk1hbnkgb2YgdGhlIGdhbWVzIGluIHRob3NlIGRheXMgd2VyZSBvcmdhbml6ZWQgYnkgY3JpbWUgc3luZGljYXRlcy4gCk9tIDIwIG5hIDYgZ2luZyBkZSB3ZWtrZXIgYWwsIHpvZGF0IHdlIG9tIGt3YXJ0IG5hIDcgb3AgZGUgc2h1dHRsZSBidXMgemF0ZW4gb3Agd2VnIG5hYXIgWmF2ZW50ZW0uIE9udGJpanRlbiBkZWRlbiB3ZSBvcCB3YXQgb25kZXJ0dXNzZW4gb256ZSB2YXN0ZSBzdGVrIGlzIG9wIGRlIGx1Y2h0aGF2ZW4uIE1ldCBvbnMgZmxleCB0aWNrZXQgbW9jaHRlbiB3ZSBkZSByaWogYmlqIHNlY3VyaXR5IHZvb3JzdGVrZW4sIGhpaGkuIE9tIDEwIHUgc3RlZ2VuIHdlIGRhbiBvcCwgbWV0IEJydXNzZWxzIEFpcmxpbmVzLCBvcCB2b2xib2VrdCB2bGllZ3R1aWcsIGVuIG1ldCBsZWtrZXJlIGNob2NvbW91c3NlIGFscyBkZXNzZXJ0LiBIZXQgd2FzIGVlbiB2bHVjaHQgdmFuIG9uZ2V2ZWVyIDN1IGVuIHZhbnVpdCBkZSBsdWNodCB6YWcgUnVzbGFuZCBlciB6ZWVyIGdyb2VuIHVpdCwgbWV0IHZlbGUgdWl0Z2VzdHJla3RlIGJvc3Nlbi4gRWVubWFhbCBvcCBkZSBncm9uZCB2ZXJ3YWNodHRlIGlrIG1paiBhYW4gaGV0IGVyZ3N0ZSwgbWFhciBuZWUgaG9vciwgbWV0IHNsZWNodHMgNSBtaW51dGVuIGFhbnNjaHVpdmVuIHdhcmVuIGFsbGUgZm9ybWFsaXRlaXRlbiAoaW5jbHVzaWVmIGVlbiBzdGVtcGVsIG9wIGhldCBtb29pZSB2aXN1bSBpbiBvbnMgcGFzcG9vcnQsIGRpdCBoYWRkZW4gd2Ugdm9vcmFmIG1vZXRlbiByZWdlbGVuKSBhY2h0ZXIgZGUgcnVnLCBlbiBvbnRtb2V0dGVuIHdlIG9uemUgdGF4aSBjaGF1ZmZldXIgaW4gZGUgYWFua29tc3RoYWwuIEFtZXJpa2EgYmlubmVucmFrZW4gZHV1cnQgaGVlbCB3YXQgbGFuZ2VyIQpFdmVuIGlmIHlvdSBkb24ndCBzZWUgdGhlbSBwZXJjaGluZywgb3IgaG92ZXJpbmcgb3ZlcmhlYWQsIHlvdSBtYXkgaGVhciB0aGVpciBkaXN0aW5jdGl2ZSAncGVlZXV1JyBjYWxsIHdoZW4gdGhleSBhcmUgbmVhcmJ5LiAKSXQgdG8gYmFkIFNhYmVhbiBnYXZlIHRoZSBiYW5rIHRvIFppdG8gdGhhdCBtdWNoIGNhc2gga2VlcHMgb3VyIG9wdGlvbnMgbGltaXRlZC4gTWF5YmUgd2UgY291bGQgdHJhZGUgWml0byBhbmQgZ2V0IGEgM3JkIGJhc2VtYW4gYnV0IEkgZG9uIHRoaW5rIHRoZXJlIGEgR00gb3V0IHRoZXJlIGFzIGZvb2xpc2ggYXMgb3Vycy4uIApKYWtlQW5kSmF2aXMgdQpCaW9mZWVkYmFjayBhbmQgU2xlZXAgRGlzb3JkZXJzClRoZSBjaHVyY2ggc3RhcnRlZCBtYWtpbmcgaW52ZXN0bWVudHMgdnMgZ2l2aW5nIGJhY2sgaW50byB0aGUgY29tbXVuaXR5IGFzIG11Y2ggYXMgcG9zc2libGUuIFlvdSBjb3VsZCBhcmd1ZSB0aGV5IHdlcmUgZG9pbmcgc28gdG8gbWFrZSBtb3JlIG1vbmV5IHRvIHJlaW52ZXN0IGluIHRoZSBjb21tdW5pdHkgYnV0IEkgdGhpbmsgdGhlcmUganVzdCB3YXMgYSBjb25mbGljdCBvZiB3aGVuIHlvdSBzdG9wIGJyaW5naW5nIGluIG1vbmV5IGFuZCBzdGFydCBnaXZpbmcgaXQgYmFjayB0aHJvdWdoIENocmlzdCB0byB0aGUgcGVvcGxlLkFnYWluLCBub3QgZ29zcGVsIGJ1dCBpdCB3b3VsZCBzZWVtIHN0cmFuZ2UgdG8gZmlyZSBhIHByZWFjaGVyIHdobyBzdGFydGVkIHRoZSBjaHVyY2ggYmFzZWQgb24gInlvdSBub3Qgb2theSBidXQgdGhhdCBva2F5IiBiZWNhdXNlIGhlIHdhcyBkcmlua2luZy5Kb2V5Sm9lSm9lMDAgIDIyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb05vdCBPUCwgYnV0IHRoZSByZXZpZXdzIG9uIHRoZSBCZXR0ZXIgQnVzaW5lc3MgQnVyZWF1IHdlYnNpdGUgYXJlbiBncmVhdCwgZWl0aGVyIGFyZSB0aGUgWWVscCByZXZpZXdzLCBidXQgaXQgWWVscCwgeWEga25vdz8gVGhlIGRvIGNvbWUgb2ZmIGJldHRlciBhdCBsZWFzdC4gCkkgdGhvdWdodCB0aGF0IHdoYXQgd2UgbmVlZCB0byBtYWtlIHZpZGVvcyBvZiB0aGVzZSBwZW9wbGUgd2hvIGFsbCBoYWQgdGhlc2UgZGlzZWFzZXMsIGp1c3QgYmx1bnQgdGFsayBhYm91dCBicmVha2luZyByaWJzIGZyb20gY291Z2hpbmcgc28gaGFyZCBmcm9tIHdob29waW5nIGNvdWdoLCBldGMuClJ1c3NpYSBhbHNvIGhhcyB0ZXJtIGxpbWl0cy4gVGhleSBhcmVuIHRoZSBzYW1lIGFzIHRoZSBBbWVyaWNhbiBvciBFdXJvcGVhbiBvbmVzLCBidXQgdGhleSBhcmUgdGhlcmUuIFJ1c3NpYW4gY29uc3RpdHV0aW9uIGFsbG93aW5nIHRvIHNlcnZlIG1vcmUgdGhhbiAyIHRlcm1zIG9uIHRoZSBjb25kaXRpb24gb2YgdGhlbSBub3QgYmVpbmcgbW9yZSB0aGFuIDIgY29uc2VjdXRpdmVseSBkb2VzbiBtYWtlIGl0IGFueSBsZXNzIGRlbW9jcmF0aWMgaW4gaXRzZWxmLiAKVGhhdEF1dGlzdGljV29tYW4gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KV2UgaGF2ZSBhIGdvb2QgZXhwZXJpZW5jZSB3aXRoIGl0LCIgT2dkZW4gc2F5cy4gCkxha2UgQ2hhbXBsYWluCkV4cG9ydHMgd2VyZSBkb3duIDMuOCBwZXIgY2VudCB0byAkNDYuMyBiaWxsaW9uIGluIERlY2VtYmVyLgpUbyBrbm93IGFsbCBvZiB0aG9zZSBmYWNlcyBpcyB0aGVuIHRoZSBrZXkgdG8gRmFjZWxvY2suLiAKQWxzbywgeW91ciB3b3J0aCBpc24gYmFzZWQgb24gd2hldGhlciBoZSBhY2tub3dsZWRnZXMgeW91IG9yIGFueXRoaW5nLiAKVFNETFlCIEJPT0sgQ0xVQgpUaGVyZSBpcyBhIGxvdCBvZiBsb3cgcXVhbGl0eSBzdHVmZiB0aGF0IGlzIGNvbWluZyBvdXQgb24gWW91VHViZSBhbmQgbWFuYWdpbmcgYSBnb29kIG51bWJlciBvZiB2aWV3cyBhcyB3ZWxsLiAKV2h5IGFtIEkgdGhpbmtpbmcgYWJvdXQgMzAgeWVhcnMgbGVmdD8gSSBoYXZlIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIG9uZSB5ZWFyIGFuZCB0aGF0IGEgbG90IG9mIHRpbWUgdG8gZG8gYSBsb3Qgb2Ygc3R1ZmYuIApTb3VuZHMgbGlrZSBkaXNjcmltaW5hdGlvbi4gQnV0IGlmIHlvdSBmZWVsIGJhZCBmb3IgTWljaGFlbCBSdXNzbywgaW1hZ2luZSB3YWtpbmcgdXAgYmxhY2ssIGFuZCBpbiBhIHN0YXRlIHdpdGggc29tZSBvZiB0aGUgd29yc3QgcmFjaWFsIGRpc3Bhcml0aWVzIHRoaXMgc2lkZSBvZiBWbGFkaXZvc3RvY2suIGFuZCB0aGVuIGhlYXJpbmcgd2hhdCBEb3VnIE1jTGVvZCBzYWlkIG9uIHRoZSBhaXIgd2hpbGUgYW5ub3VuY2luZyBhIGdhbWUgZm9yIEtTVEMgNDUuClRoZXJlJ3MgYSBzaHV0dGxlIHRvIEdyYXRvbiB0d28gYmxvY2tzIGZyb20gbXkgaG91c2UsIGl0J3MgMTAgZG9sbGFycyByb3VuZCB0cmlwLCBidXQgeW91IGdldCBpdCBiYWNrIGluIGZyZWUgcGxheSwgc28gSSdsbCBzdGljayBpdCBpbiB2aWRlbyBwb2tlciB3aGlsZSBJJ20gd2FpdGluZywgaXQncyBhYm91dCA0NSBtaW5zICAxIGhyIGF3YXkuIApNYW55IG9mIHRoZSBjaGlsZHJlbiBoZXJlIGFyZSBiYWRseSBtYWxub3VyaXNoZWQgYW5kIHJlY2VpdmUgbGl0dGxlIGluIHRoZSB3YXkgb2YgZWR1Y2F0aW9uLiBOaW5vIGxlZnQgc2Nob29sIHdoZW4gaGUgd2FzIDEyLiAKOCkgRXhjZXNzaXZlIFNwYW0uIApNaXQgRm9yZW1vc3QgSG9zcGl0YWxpdHkgSElFWCB3aXJkIGVpbiAxNDAgWmltbWVyIEhvdGVsIGFtIFN0dXR0Z2FydGVyIEhhdXB0YmFobmhvZiByZWFsaXNpZXJ0ICAgRXJmZm51bmcgc29sbCAyMDE2IHNlaW4uIApTdGV2ZW4gc2FpZCB0aGF0IHNoZSBsZWZ0IGFmdGVyIGhlIGhhZCBsZWZ0IHRvIGdvIGh1bnRpbmcuIApXaGF0IEkgdGFsa2luZyBhYm91dCBleHBsYWlucyB3aHkgcGVvcGxlIGZhbGwgZm9yIGFudGkgdmF4eGluZyBzdHVmZiBhcyB3ZWxsLCBhbmQgYWxsIHRoZSBvdGhlciBlYXNpbHkgc2NpZW50aWZpY2FsbHkgZGVtb25zdHJhYmxlIGxpZXMgdGhhdCBwZW9wbGUgc3RpbGwgbWFuYWdlIHRvIGJlIGNvbWZvcnRhYmxlIGJlbGlldmluZyBpbi4gCkluIHRoZSBldmVudCB0aGF0IGxlZ2FsIGFjdGlvbiBpcyBjb21tZW5jZWQsIEVsZXZhdGlvbiBQaWN0dXJlcyB3aWxsIHB1cnN1ZSBhbGwgbGVnYWwsIGVxdWl0YWJsZSBhbmQgc3RhdHV0b3J5IHJlbWVkaWVzIGFnYWluc3QgeW91LCB3aGljaCB3aWxsIGluY2x1ZGUgbW9uZXRhcnkgZGFtYWdlcywgYXMgd2VsbCBhcyBkYW1hZ2VzIGZvciBjb252ZXJzaW9uLCB1bmp1c3QgZW5yaWNobWVudCBhbmQgaW50ZXJmZXJlbmNlIHdpdGggZWNvbm9taWMgcmVsYXRpb25zLCBhcyB3ZWxsIGFzIGNvdXJ0IGNvc3RzIGFuZC9vciBsZWdhbCBjb3Vuc2VsIGZlZXMgaW5jdXJyZWQgaW4gdGhpcyBtYXR0ZXIuIApMb3ZlZCBzaXN0ZXIgaW4gbGF3IHRvIEhpbGFyeSBhbmQgR2VvZmYgQ29sbGlucy4gClVudGlsIDE5OTcsIHRoZSBGREEgZGlkIG5vdCBldmVuIGFsbG93IGJyb2FkY2FzdCBhZHZlcnRpc2VtZW50cyBmb3IgcHJlc2NyaXB0aW9uIGRydWdzLCBhbmQgdGhlIFVTIGlzIG9uZSBvZiBvbmx5IHR3byBjb3VudHJpZXMgaW4gdGhlIHdvcmxkIChOZXcgWmVhbGFuZCBiZWluZyB0aGUgb3RoZXIpIHRoYXQgZXZlbiBhbGxvd3MgdGhpcyB0eXBlIG9mIGFkdmVydGlzaW5nLiBJdCBzZWVtcyB0aGF0IG90aGVyIGRldmVsb3BlZCBuYXRpb25zIGhhdmUgdGhpcyBjcmF6eSBpZGVhIHRoYXQgeW91IHNob3VsZCBkZWNpZGUgd2hhdCBwcmVzY3JpcHRpb25zIHlvdSBuZWVkIGJhc2VkIG9uIGEgZG9jdG9yJ3MgYWR2aWNlLCBhbmQgbm90IHRoYXQgb2YgYSB0YWxraW5nIGJlZSBvbiB0ZWxldmlzaW9uLgpLaW5kIG9mIHNhZCB0aGF0IGNhcmluZyBwZXJzb25hbGl0aWVzIGhhdmUgc3VjaCBhIGhhcmQgdGltZSBjb25uZWN0aW5nLiBJIGZlZWwgbGlrZSBwZW9wbGUgcGxhY2UgdG9vIG11Y2ggZW1waGFzaXMgb24gc3R5bGUgb3ZlciBzdWJzdGFuY2UsIGF0IHRoaXMgY3VycmVudCBzdGFnZSBpbiBoaXN0b3J5LiAKWW91IG11c3Qgd2FpdCA5MCBkYXlzIGZvciBaeW5nYSB3aXRoIGFic29sdXRlbHkgbm8gYWN0aXZpdHksIG5vdCBldmVuIGEgY2xpY2ssIHRvd2FyZCB0aGUgWnluZ2EgUG9rZXIgYXBwIGFuZCB0aGV5IHdpbGwgcmVtb3ZlIHlvdSBmcm9tIHRoZWlyIGRhdGFiYXNlLiAKSWYgeW91J3JlIGV4cGVyaWVuY2luZyBzdG9tYWNoIHJlbGF0ZWQgbWF5aGVtIG5vcm1hbGx5IGFzc29jaWF0ZWQgd2l0aCB0aGUgInN0b21hY2ggZmx1LCIgeW91IHNob3VsZCBrbm93IHRoYXQgYWNjb3JkaW5nIHRvIHBlb3BsZSB3aG8gd2VudCB0byBtZWRpY2FsIHNjaG9vbCBmb3Igc2V2ZW4geWVhcnMsIHRoZSBzdG9tYWNoIGZsdSBpcyBub3QgYWN0dWFsbHkgYSB0aGluZy4KWW91ciBiZXN0IGJldCBmb3IgU2VydmVyIENvcmUgaXMgdGhlIG9mZmljaWFsIGRvY3VtZW50YXRpb24uCklmIHlvdSBhcmUgdXAgZm9yIGdldHRpbmcgd2V0LCB0aGUgZm91bnRhaW5zIGluIEd3YW5naHdhbXVuIHBsYXphIGNvdWxkIGJlIGZ1bi4gCkhvd2V2ZXIsIGJlZm9yZSBJIHRyeSBhbmQgZXZlbiBicmluZyB1cCBtYXJyaWFnZSB3aXRoIHRoZSBwZXJzb24gSSdtIHNlZWluZyBJIGhhdmUgdG8gYnJpbmcgdXAgd2hhdCBJJ3ZlIHJlYWxpemVkIHRvIGhpbSwgYW5kIHNlZSBpZiBoZSBzZWVzIHRoYXQgYXMgc29tZXRoaW5nIHRoYXQgd2lsbCBoYXBwZW4uIAozLiBQbGFjZSBhIGxvbmcgcmVjb3JkaW5nIGRpZ2l0YWwgdGFwZSByZWNvcmRlciB1bmRlciB5b3VyIGNoZWF0aW5nIGh1c2JhbmQncyBjYXIgc2VhdCBldmVyeSBtb3JuaW5nIGFuZCB0aGVuIGxpc3RlbiB0byBpdCB3aGVuIHlvdSBhcmUgYWxvbmUuIApJIHRoaW5rIGhpcyBvdmVyYWxsIG1lc3NhZ2UgaXMgYSBnb29kIG9uZSwgZXNwZWNpYWxseSBzaW5jZSBrbm93aW5nIGEgYml0IGFib3V0IGZpeGluZyB1cCB5b3VyIG93biBjYXIgd2lsbCBhbHNvIGhlbHAgeW91IGlkZW50aWZ5IHRoZSBtZWNoYW5pY3Mgd2hvIGFyZSB0cnlpbmcgdG8gcmlwIHlvdSBvZmYgd2hlbiBhIHJlcGFpciBleGNlZWRzIHlvdXIgYWJpbGl0eSBvciB0aW1lIGF2YWlsYWJsZS4gClRoZSBlbmQgb2YgdGhlIHllYXIsIEkgYmUgZ29pbmcgdG8gTW9udHJlYWwgdG8gY2VsZWJyYXRlIE5ldyBZZWFyIEV2ZS4gSG93ZXZlciwgSSBiZSBnZXR0aW5nIHRoZXJlIGEgZmV3IGRheXMgYmVmb3JlIHRoZSByZXN0IG9mIG15IGZyaWVuZHMuIEkgYWxyZWFkeSBzZWVuIE1vbnRyZWFsIGFuZCB3YW50IHRvIGdyaW5kIGFzIG1hbnkgaG91cnMgc2luY2UgSSBhIHN0dWRlbnQgYW5kIGRvbiBnZXQgbXVjaCBsaXZlIHRpbWUgb3RoZXJ3aXNlLgpDbGluaWNhbCBza2lsbCBkZXZlbG9wbWVudCBpcyBhbiBlc3NlbnRpYWwgcGFydCBvZiBhbnkgbnVyc2luZyBjb3Vyc2UuIFRoaXMgd2lsbCBvY2N1ciBib3RoIGluIHRlYWNoaW5nIGFuZCBwcmFjdGljZS4gClNNVCBhZGRlZCB0byBtYXNzYWdlIGRpZCBub3QgaW1wcm92ZSBlcGlzb2RpYyB0ZW5zaW9uIHR5cGUgaGVhZGFjaGVzLlRoZXJlIHdhcyBvbmUgUkNUICg1MyBwYXRpZW50cykgb2YgU01UIHZlcnN1cyBtYXNzYWdlIGZvciBjZXJ2aWNvZ2VuaWMgaGVhZGFjaGUuIFRoZSBxdWFsaXR5IHNjb3JlIHdhcyA2NyBwb2ludHMuIFRoZXJlIHdhcyBtb2RlcmF0ZSBldmlkZW5jZSB0aGF0IFNNVCBpcyBiZXR0ZXIgdGhhbiBtYXNzYWdlIGZvciBjZXJ2aWNvZ2VuaWMgaGVhZGFjaGUuVGhlIHNlbnNpdGl2aXR5IGFuYWx5c2lzIHNob3dlZCB0aGF0IHRoZSBjb25jbHVzaW9ucyByZW1haW5lZCB0aGUgc2FtZSB3aGVuIGRpZmZlcmVudCBjcml0ZXJpYSB3ZXJlIHVzZWQgdG8gY2xhc3NpZnkgdGhlIGxldmVsIG9mIGV2aWRlbmNlIGFuZCB0byBhc3Nlc3MgZWZmaWNhY3kuSW4gMiBSQ1RzIG9mIFNNVCB2ZXJzdXMgYW1pdHJpcHR5bGluZSwgYWR2ZXJzZSBlZmZlY3RzIHdlcmUgcmVwb3J0ZWQgYnkgbW9yZSB0aGFuIDUwJSBvZiB0aGUgcGF0aWVudHMgb24gYW1pdHJpcHR5bGluZSAoZHJvd3NpbmVzcywgZHJ5IG1vdXRoLCB3ZWlnaHQgZ2FpbikgY29tcGFyZWQgd2l0aCA1JSBvZiB0aG9zZSBvbiBTTVQgKG1vc3QgY29tbW9ubHkgbXVzY2xlIHNvcmVuZXNzIGFuZCBuZWNrIHN0aWZmbmVzcykuIApTbywgaWYgdGhleSB3ZXJlIHRvdWNoaW5nIHRoZSBncm91bmQgbGlrZSB0aXJlcywgdGhleSB3b3VsZCBib3RoIGdvIHRoZSBzYW1lIGRpc3RhbmNlIGV2ZW4gdGhvdWdoIG9uZSB3b3VsZCBiZSBjb21wbGV0aW5nIHR3aWNlIGFzIG1hbnkgZnVsbCByZXZvbHV0aW9ucyBhcyB0aGUgb3RoZXIuIFRoaW5rIGEgYmlrZSB3aXRoIHRyYWluaW5nIHdoZWVscywgYm90aCB0aGUgYSB0cmFpbmluZyB3aGVlbCBhbmQgYSBiaWtlIHRpcmUgd2l0aCBhIHJvY2sgaW4gdGhlIHRyZWFkLiAKU3VyZSwgaXQncyBtYWRlIGV2ZXJ5b25lIG1vcmUgd2VhbHRoeSBpbiB0aGUgcHJvY2VzcyBidXQgdGhlIHdlYWx0aCBoYXMgYmVlbiBjb25jZW50cmF0ZWQgdG8gdGhlIHRvcCwgYW5kIHdlJ3ZlIGNyZWF0ZWQgZ3JlYXRlciBpbmVxdWl0eSB0aGFuIGV2ZXIuLiAKSWYgeW91ciBjYXJkcyBhcmUganVzdCBzaXR0aW5nIG91dCBpbiB0aGUgb3BlbiwgeW91IGFyZSBzdWJqZWN0IHRvIHR3byBwb3NzaWJsZSBkaXNhc3RlcnMuIEZpcnN0LCB0aGUgZGVhbGVyIG1heSBzY29vcCB0aGVtIHVwIGluIGEgYmxpbmsgYmVjYXVzZSB0byBsZWF2ZSBvbmUncyBjYXJkcyB1bnByb3RlY3RlZCBpcyBhIHNpZ25hbCB0aGF0IHlvdSBhcmUgZm9sZGluZy4gU2Vjb25kLCBhbm90aGVyIHBsYXllcidzIGNhcmRzIG1heSBoYXBwZW4gdG8gdG91Y2ggeW91cnMgYXMgdGhleSBmb2xkLCBkaXNxdWFsaWZ5aW5nIHlvdXIgaGFuZCBhbmQgeW91ciBpbnRlcmVzdCBpbiB0aGUgcG90LiAKQnkgY29tcGFyaXNvbiwgdGhlIGF2ZXJhZ2UgQW1lcmljYW4gcmVsZWFzZXMgdHdlbnR5IHRvbnMuIEEgeWVhci4KSSBvd24gYSBwcmludCBjb21wYW55LiBJIHRoaW5rIHlvdXIgYm9zcyBpcyBjb25mdXNlZC4KRG9lcyB0aGF0IGFuc3dlciB5b3VyIHF1ZXN0aW9uPyBGZWVsIGZyZWUgdG8gYXNrIG1vcmUgaWYgeW91IHdhbnRyb2JlcnRzcGllcnMyNCAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxOSBkYXlzIGFnb0lmIHlvdSBjYW50IGNvbnRyb2wgeW91ciBjYXIgYXQgdGhhdCBzcGVlZCBkb24gZHJpdmUgdGhhdCBzcGVlZC4gUGxlYXNlIGJlIG15IGd1ZXN0IHRvIGRyaXZlIDIwIGluIHRoZSA1NSBhbGwgeW91IHdhbnQsIGl0IGl0IG1ha2VzIHlvdSBmZWVsIGNvbWZvcnRhYmxlIEl2ZSBnb3Qgbm90aGluZyBhZ2FpbnN0IHlvdSBvciB5b3VyIHNhZmV0eSwganVzdCBtb3ZlIHRoZSBmdWNrIG92ZXIgdG8gdGhlIHJpZ2h0IGxhbmUgd2hlbiB5b3UgZG8uIApQdXJpc3RzIGRyaW5rIG9ubHkgd2F0ZXIuIApZb3UgY291bGQgYWxzbyBwdXNoIHRvIGhvbGQgdGhlIGxpbmUgYW5kIGlmIHlvdSBkbyBub3Qgd2FudCB0byBkbyBsb3cgbGV2ZWwgdGhpbmdzIGxpa2UgdGllciAxIHN1cHBvcnQgaW50ZXJuYWxseSwgcHVzaCB5b3VyIG1hbmFnZW1lbnQgdG8gaGlyZSBhbiBlbnRyeSBsZXZlbCBkZXNrdG9wIHN1cHBvcnQgcGVyc29uIHRvIGRlbGVnYXRlIHRoYXQgY3JhcCB0by4gSXQgd2lsbCBtYWtlIHNlbnNlIHRvIHRoZW0gdG8gbm90IHdhc3RlIHlvdXIgbW9yZSB2YWx1ZWQgc2FsYXJ5IG9uIGxvd2VyIHBheSB0YXNrcyBhbmQgaXQgZ2V0cyB5b3UgdG8gZG8gd2hhdCB5b3UgYWN0dWFsbHkgd2FudC4KTG9va2luZyBiYWNrLCBJIGNhbiBzYXkgaXQgbm90IHRoYXQgdGhleSBkb250IGNhcmUuIFN0aWxsIGRvbnQga25vdyB3aHkgdGhleSB3ZXJlbiBhcyBjdXJpb3VzIGFib3V0IGl0IGFzIEkgd2FudGVkIHRoZW0gdG8gYmUsIGJ1dCBJIHRoaW5rIEkgYWdyZWUgd2l0aCBzb21lb25lIGVsc2UgaW4gdGhpcyB0aHJlYWQgaW4gc2F5aW5nIHRoYXQgeW91ciBzZXh1YWxpdHkgaXMgYSBzbWFsbCBwYXJ0IG9mIHlvdS4gCk9uIHZldXQgdHJhdmFpbGxlciBlbiBjb2xsYWJvcmF0aW9uIGF2ZWMgbGVzIHVuaXZlcnNpdCBldCBsZXMgc3AgcG91ciBtb250ZXIgZGVzIHByb2dyYW1tZXMgZGl0IGlsLiAKVGhlIEFsbCBTdGFyIG91dGZpZWxkZXIgc2lnbmVkIGEgJDcyIG1pbGxpb24sIGZvdXIgeWVhciBkZWFsIHRvIHJlbWFpbiB3aXRoIHRoZSBLYW5zYXMgQ2l0eSBSb3lhbHMsIHRoZSBsb25nIGRvd250cm9kZGVuIHRlYW0gdGhhdCBkcmFmdGVkIGhpbSBtb3JlIHRoYW4gYSBkZWNhZGUgYWdvLCBhbmQgdGhhdCBoZSBoZWxwZWQgY2xpbWIgdG8gdGhlIHBpbm5hY2xlIG9mIHRoZSBzcG9ydCB3aXRoIGEgV29ybGQgU2VyaWVzIHRyaXVtcGggdGhpcyBwYXN0IHNlYXNvbi4KQ29uZGVzY2VuZGluZyBhbmQgcnVkZSBlaD8gWW91IHRhbGtpbmcgYWJvdXQgdGhlIHRyZWF0bWVudCBvZiBteSBjb3VudHJ5bWVuIGR1cmluZyBhYm91dCB0aGUgd29yc3QgcGVyaW9kIGluIG91ciBoaXN0b3J5IGluIGEgYmVsaXR0bGluZyBhbmQgZGVmZW5jaXZlIG1hbm5lciEgWW91ciBjb21wYXJpc29uIHdhcyBCcml0YWluIHRyZWF0bWVudCBvZiBJcmVsYW5kIHdhc24gYXMgYmFkIGNvbXBhcmVkIHRvIHRoZSBOYXppcyB0cmVhdG1lbnQgb2YgSmV3cy4gV2h5IG1ha2UgYSBjb21wYXJpc29uIG9mIHRoZSB0d28gaWYgbm90IHRvIGRlZmVuZCBvbmU/IFRoZSBPdHRvbWFuIHNoaXBtZW50IG9mIGFpZCB3YXMgc2VudCB0byBteSBob21ldG93biBhbmQgd2UgaGF2ZSB0aGUgc3RhciBhbmQgY3Jlc2NlbnQgYXMgb3VyIGVtYmxlbS4gClB1YmxpY2FyIGNvbnRlbmlkbyBpcnJlbGV2YW50ZSwgcHVibGljYXIgcmVpdGVyYWRhbWVudGUgZWwgbWlzbW8gY29udGVuaWRvIG8gdW5vIHNpbWlsYXIsIG8gZGUgYWxnbiBvdHJvIG1vZG8gaW1wb25lciB1bmEgY2FyZ2EgZXhjZXNpdmEgbyBkZXNwcm9wb3JjaW9uYWRhbWVudGUgZ3JhbmRlIGVuIGxhIGluZnJhZXN0cnVjdHVyYSBkZSBsYSBSZWQ7Ckhvd2V2ZXIsIGVsZWN0cmljIHZlaGljbGVzIGhhdmUgc3RydWdnbGVkIHRvIGluY3JlYXNlIHNhbGVzIG51bWJlcnMgYmVjYXVzZSBvZiBoaWdoIHByaWNlcyBhbmQgc28gY2FsbGVkIHJhbmdlIGFueGlldHk6IGJ1eWVycyBmZWFyIG9mIHJ1bm5pbmcgb3V0IG9mIHBvd2VyLi4gCldoaWNoIGV2ZW4gdGhlIHRob3VnaHQgb2YgdGhhdCBiZWluZyBuZWFyIHNlZW1zIHNvIGltcG9zc2libGUgdG8gT1AgZmFucyBldmVuIHRob3VnaCBsb2dpY2FsbHkgc3BlYWtpbmcgT2RhIGNvdWxkIGVhc2lseSB0YWtlIDEwIHllYXJzIHRvIGZpbmlzaCB0aGUgc3Rvcnkgd2l0aCBMdWZmeSBvbiBhIHlvbmtvIGxldmVsLi4gCkJ1eSBOT04gUEFDS0FHRUQgc3BpbmFjaCB0aG91Z2ggYXMgaXQncyBtdWNoIGNoZWFwZXIuIEp1c3QgYnV5IHRoZSBmcmVzaCBidW5jaCBmb3IgYWJvdXQgJDEuIApBbnlob3csIG91ciBnbyB0byBvZiBhY3Rpb24gc3BvcnRzIGlzIG9mZiB0aGUgdGFibGUgZHVlIHRvIGEga25lZSBpbmp1cnkuIEFuZCB3ZSBjYW4gc3RheSBvdXQgdGhhdCBsYXRlIG9yIGltYmliZSBoZWF2aWx5IGJlY2F1c2Ugd2UgaGF2ZSB3b3JrIHRvbW9ycm93IGFuZCBtb3N0IFViZXIgb3IgTHlmdCBkcml2ZXJzIHdvbiBiZSBhYmxlIHRvIG1ha2UgaXQgdG8gb3VyIGhvdXNlICAgNHdkIG1hbmRhdG9yeSB1cCBoZXJlIGluIHRoZSBtb3VudGFpbnMuLiAKVGhlc2UgYXJlIHZlcnkgbGltaXRlZCwgb25seSBhbGxvd2luZyBzdXBlciBpbnRlbnNlIGFjdGl2aXR5IGZvciBvbmx5IHVwIHRvIDEwIHNlY3MuIApKdXN0IGJlY2F1c2UgeW91IGEgaGFybWxlc3MgYnV0dGVyZmx5IG5vdywgbXkgbGl0dGxlIFN0YWN5LCBkb2VzbiBtZWFuIHlvdSB3b24gZ3JvdyB1cCB0byBiZSBhbiB1bnNjcnVwdWxvdXMgaGFycGllLiBBIGNydWVsIHN1Y2N1YnVzIHRoYXQgc2NyZWVucyBtZW4gZm9yIHdlYWtuZXNzZXMgZXZlcnkgd2FraW5nIG1pbnV0ZSBvZiB5b3VyIGxpZmUuIApGdWNrIGlzIHlvdXIgcHJvYmxlbSBsbWFvLiBQbGVhc2UgZGVzY3JpYmUgaW4gbW9yZSBkZXRhaWwgdGhlIGtpbmQgb2YgYmVudCB0aGF0IEkgYW0gbm90IHNlZWluZyBvdXIgY291bnRyeSwgYW5kIGhvdyBpdCBpcyBtb3JlIG5hdGlvbmFsaXN0aWMgdGhhbiBzaW1pbGFyIG1vdmVtZW50cy90ZW5kZW5jaWVzIGluIHRoZSBVSy4gR3JlYXQgdGhpbmcgYWJvdXQgdGhlIE5MIGlzIHRoYXQgd2Ugc21hbGwsIGJ1dCB3ZSBkb24gZmFpbCB0byByZWNvZ25pemUgdGhhdC4gCklmIHlvdSBjYW1lIHRvIHdvcmsgbGF0ZSwgdGhlIHN1cGVydmlzb3IgaGFkIHRvIHN0b3Agd2hhdCBoZSB3YXMgZG9pbmcgdG8gZ2l2ZSB5b3UgYSBydW5kb3duIG9mIHRoYXQgZGF5cyBtZWV0aW5nIHNvIHlvdSBjb3VsZCBnZXQgdG8gd29yay4gT25jZSBJIHdhcyBzZW50IHRvIGZldGNoIGEgdG9vbCBpbiBhIGh1cnJ5LiAKSWYgdGhpcyBnYW1lIGhhZCBidWcgZml4ZXMsIHRoZXkgd291bGQgaGF2ZSBtYXJrZXRlZCB0aGF0LiAKT2YgY291cnNlLCB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gbWFpbnN0cmVhbSBnYXkvbGVzYmlhbiBtb3ZlbWVudHMgYW5kIHRyYW5zIGFjdGl2aXN0cyBoYXMgYWx3YXlzIGJlZW4gZnJhdWdodC4gSW4gdGhlIDE5NzBzLCB3aGVuIE10b0YgbGVzYmlhbiBTYW5keSBTdG9uZSB3YXMgb3V0ZWQgd29ya2luZyBhdCBhIHdvbWVuIG9ubHkgY29tcGFueSwgZmVtYWxlIGJvcm4gbGVzYmlhbiBKYW5pY2UgUmF5bW9uZCByZXNwb25kZWQgd2l0aCBhbiBlbnRpcmUgcG9sZW1pYywgVGhlIFRyYW5zc2V4dWFsIEVtcGlyZS4gSW4gaGVyIGJvb2ssIFJheW1vbmQgYWNjdXNlZCB0cmFuc3dvbWVuIG9mIGJyaW5naW5nIHBhdHJpYXJjaHkgaW50byB3b21lbiBvbmx5IHNwYWNlIChvciBwcm9iYWJseSAid29tYnluIG9ubHkgc3BhY2UiIG9yIG1heWJlICJ3aW1taW4gb25seSBzcGFjZSIpLiAKR2FtZSBTaG93cyBBIFByaW5jZXNzIGNydWlzZSBpcyB0aGUgaWRlYWwgcGxhY2UgdG8gbGl2ZSBvdXQgeW91ciBmYXZvcml0ZSBnYW1lIHNob3dzIGFuZCBjb250ZXN0cy4gS2FyYW9rZSBuaWdodHMgYXJlIGFpbWVkIGF0IGZpbmRpbmcgdGhlIGNydWlzZSBsaW5lJ3MgIlByaW5jZXNzIElkb2wsIiB3aGljaCBhdHRyYWN0cyBsYXJnZSBjcm93ZHMgZXZlcnkgbmlnaHQuIFRoZSAiTmV3bHl3ZWQgR2FtZSIgYW5kICJOb3QgU28gTmV3bHl3ZWQgR2FtZSIgYXJlIGh1bW9yb3VzIGZhdm9yaXRlcyB0aGF0IGNoYWxsZW5nZSBhIGNvdXBsZSdzIGtub3dsZWRnZSBvZiBvbmUgYW5vdGhlciB3aXRoIHByaXplcyB0aGF0IGluY2x1ZGUgd2luZSBhbmQgZGlubmVyIHVwZ3JhZGVzLiBPdGhlciBnYW1lIHNob3dzIHlvdSBtYXkgY29tZSBhY3Jvc3MgaW5jbHVkZSAiRmFtaWx5IEZldWQsIiAiTWFqb3JpdHkgUnVsZXMiIGFuZCAiV2Vha2VzdCBMaW5rLiIgT25lIG9mIHRoZSBtb3N0IHJlY2VudCBhZGRpdGlvbnMgaXMgIklmIFRoZXkgQ291bGQgU2VhIE1lIE5vdywiIGEgcmVhbGl0eSBzdHlsZSBtYWtlb3ZlciBzaG93IGZlYXR1cmluZyB2aWRlbyBjbGlwcyBvZiB0d28gcGFzc2VuZ2VycyB3aG8gcmVjZWl2ZSBzcGEgdHJlYXRtZW50cyBhZG4gbmV3IHdhcmRyb2JlcyBmcm9tIHNoaXAgYm91dGlxdWVzLiBMYXRlciwgdGhlIHBhc3NlbmdlcnMgY29tZSBvdXQgb24gc3RhZ2UgdG8gcmV2ZWFsIHRoZWlyIG5ldyBsb29rcywgYW5kIG9uZSBsdWNreSBwYXNzZW5nZXIgZnJvbSB0aGUgYXVkaWVuY2UgcmVjZWl2ZXMgYSByZWFsIHRpbWUgbWFrZW92ZXIuCk11aGFtbWFkIHdhcyBhbiBldmlsIGFuZCBwb2lzb25vdXMgcGllY2Ugb2Ygc2hpdCBhbmQgYW55b25lIHdobyByZXZlcmVzIGhpbSBmb3IgYW55IHJlYXNvbiBpcyBjb21wbGV0ZWx5IGlnbm9yYW50Li4gCldpcmQgZWluIEFVRiB6dSA1MCUgYXVzZ2VzdGVsbHQga2FubiBkZXIgQXJiZWl0Z2ViZXIgZGF2b24gYXVzZ2VoZW4sIGRhc3MgSGVyciBNZWllcmhhbnNkaWUgdm9sbGVuIDUwJSBiZWkgaWhtIGFyYmVpdGV0LiBFciBpc3QgamEgenUgNTAlIHZvbiAxMDAlIGtyYW5rIGdlc2NocmllYmVuLgpJbiBjaXRpZXMgYW5kIGNvbGxlZ2UgY2FtcHVzZXMgYWNyb3NzIHRoZSBjb3VudHJ5LCB5b3VuZyBtZW4gZmVlbCBhIG5lZWQgdG8gYXNzZXJ0IHRoZWlyICJoZXRlcm9zZXh1YWxpdHkiIGFuZCAibWFzY3VsaW5pdHkiIGJ5IGZvcmNpbmcgb3RoZXIgeW91bmcgbWVuIHRvIHN1Y2sgZG93biBhIGRyaW5rIHRoYXQgaXMgImdpcmxpZSIgYW5kICJncm9zcy4iCkkgdXNlZCB0byB2aXNpdCBhIGRpc2FibGVkIGNsaWVudCBhIHdoaWxlIGJhY2ssIGtpbmRhIHlvdW5nIGd1eSBsYXRlIDIwIGFuZCB3aGVlbGNoYWlyIGJvdW5kLiBJIGhhZCBhIHdob2xlIGdhbWVyIHRoaW5nIGdvaW5nIG9uIGJlY2F1c2UgSSBsb3ZlIHZpZGVvIGdhbWVzIHNvIEkgb2ZmZXIgdG8gcGxheSBnYW1lcyB3aXRoIGNsaWVudHMsIGhhdmUgc29tZSBuYXVnaHR5IHBlbmFsdGllcyBpZiB5b3UgbG9zZSB0aGF0IHNvcnQgb2YgdGhpbmcgZm9yIGZ1bi4gCkFuZCBpdCBwZXJoYXBzIHVubGlrZWx5IHRoYXQgaXQgd2lsbCBiZSB1c2VkIGFzIG1vbmV5IHdpdGggaG93IHZvbGF0aWxlIGl0IGlzLiBXaG8gd2FudHMgdG8gaGF2ZSBtb25leSB0aGF0IGNhbiBnbyBkb3duIGhhbGYgaXRzIHZhbHVlIGluIHN1Y2ggYSBzaG9ydCBub3RpY2U/IFRoYXQgd291bGQgYmUgY2F0YXN0cm9waGljIGZvciB0aGUgZWNvbm9teS4KTGUgZnJyZSBlc3QgbGEgc29ldXIgc29udCBpc3N1cyBkJ3VuZSBmcmF0cmllIGRlIDQgZW5mYW50cyBkb250IGlscyBzb250IGxlcyBzZXVscyBzdXJ2aXZhbnRzLiAKTm93IHdoYXQgSSBtZWFuIHdoZW4gSSBzYXkgdGhhdCBpcyB3ZSBoYXZlIGNlcnRhaW4gY3JpdGVyaWEgYnkgd2hpY2ggd2UgZGVmaW5lIHRoZSBpbmRpdmlkdWFsIHdobydzIHNhaWQgdG8gYmUgdGhlIHByb2JsZW0gZ2FtYmxlci4gCllvdSd2ZSBzZWVuIGxvdHMgb2YgZmluZXMgYW5kIHNhbmN0aW9ucyBhbmQgdGhpbmdzLCBidXQgaXQgaXMgaGFyZCB0byBrbm93IHdoYXQgaXQgYWRkcyB1cCB0by4gCkRpZSBkdXJjaCBkaWUgU2VpdGVuYmV0cmVpYmVyIGVyc3RlbGx0ZW4gSW5oYWx0ZSB1bmQgV2Vya2UgYXVmIGRpZXNlbiBTZWl0ZW4gdW50ZXJsaWVnZW4gZGVtIGRldXRzY2hlbiAuIERpZSBWZXJ2aWVsZmx0aWd1bmcsIEJlYXJiZWl0dW5nLCBWZXJicmVpdHVuZyB1bmQgamVkZSBBcnQgZGVyIFZlcndlcnR1bmcgYXVlcmhhbGIgZGVyIEdyZW56ZW4gZGVzIGVzIGJlZHJmZW4gZGVyIHNjaHJpZnRsaWNoZW4gWnVzdGltbXVuZyBkZXMgamV3ZWlsaWdlbiBBdXRvcnMgYnp3LiBFcnN0ZWxsZXJzLiAKSSBhbG1vc3Qgc3Ryb2tlZCBvdXQuIEkgbG92ZSBteSBCRiBhbmQgaGlzIG1vbSBhbmQgc2lzdGVycyBhcmUgZ29vZCBwZW9wbGUsIGJ1dCBmdWNrIHRoZW0gZm9yIHRoYXQuIApBbHNvIG9uIHRoZSByYWNpbmcgcHJvZ3JhbSBpcyBoaXMgZmF0aGVyLCAxMSB5ZWFyIG9sZCBJJ20gR29yZ2VvdXMsIHdobyBpcyBoZWFkZWQgYmFjayB0byB0aGUgc3R1ZCBiYXJuIG5leHQgeWVhciB0aGFua3MgdG8gaGlzIHNvbidzIHN1Y2Nlc3MuLiAKSSd2ZSBoZWFyZCBhYm91dCBpdCBvbiB0aGUgQlAgcG9kY2FzdCBidXQgSSdtIG5vdCByZWFsbHkgc3VyZSB3aGVyZSB0byBzdGFydC4gCk1hcnkgQW5uZSBCZWRhcmQsIGEgbWVtYmVyIG9mIHRoZSBjaXR5J3Mgc2hlbHRlciwgc3VwcG9ydCwgYW5kIGhvdXNpbmcgYWRtaW5pc3RyYXRpb24sIHNhaWQgYXMgZXhwZWN0ZWQsIFRvcm9udG8gc2hlbHRlcnMgd2VyZSBidXN5IG9uIFN1bmRheSBuaWdodCBhbmQgb3ZlciB0aGUgd2Vla2VuZC4KRGV2ZWxvcGVkIGluIHRoZSAxOXRoIGNlbnR1cnksIGNoaXJvcHJhY3RpYyBpcyBiYXNlZCBvbiB0aGUgaWRlYSB0aGF0IG5lcnZlIGVuZXJneSBmbG93cyB0aHJvdWdoIHRoZSBzcGluYWwgY29sdW1uLiAKQm9vayBjaGFwdGVyR3Vuc2xpbmdlcnMsIHBva2VyIHBsYXllcnMsIGFuZCBjaGlja2VucyAzOiBEZWNpc2lvbiBtYWtpbmcgdW5kZXIgbWVudGFsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIGp1bmlvciBlbGl0ZSBhdGhsZXRlc1BhcmtpbiwgQi4gQW5kIFdhbHNoLCBWLiAyMDE3LiAKRXZlbiBiZWZvcmUgdGhlIHN0YXJ0IG9mIGhpcyBmaWxtbWFraW5nIGNhcmVlciwgYXQgYSB0aW1lIHdoZW4gd2Ugd2VyZSBkb21pbmF0ZWQgYnkgbW92aWVzIGZyb20gSG9sbHl3b29kLCBKb2huIE8nU2hlYSB3YXMgb25lIG9mIHRoZSBmZXcgdm9pY2VzIHN0YXRpbmcgdGhlIG5lZWQgZm9yIGxvY2FsIGZpbG1zIHdoaWNoIHdvdWxkIHJlZmxlY3QgTmV3IFplYWxhbmQncyB3YXkgb2YgbGlmZS4gUmVpZCBvYnNlcnZlcyB0aGF0IGhlIHdhbnRlZCB0byBiZSBhIE5ldyBaZWFsYW5kIGZpbG1tYWtlciBhcyBtdWNoIGFzIGhlIHdhbnRlZCB0byBiZSBhIGZpbG1tYWtlciBhdCBhbGwuClRoaXMgcHJvZHVjdCB3aWxsIGF0dHJhY3QgeW91IGJ5IGFsbCBtZWFucy4gCktpc2FoIENhcmxvIGlzIGlzbiBleGFjdGx5IHdoYXQgeW91IGxvb2tpbmcgZm9yLiAoSnVzdCBsb29rZWQgaXQgdXAgICBzdWJ0aXRsZXMgaW4gRW5nbGlzaCwgbm90IEJJICAgSSBtaXNyZW1lbWJlcmVkLikgSXQgYSAxMCBlcGlzb2RlIHdlYiBzZXJpZXMgYWJvdXQgYSBob3NwaXRhbCB3YXJkIGluIEpha2FydGEgdGhhdCB0cmVhdHMgcGF0aWVudHMgd2l0aCBISVYvQUlEUy4gSXQgbWF5IHN0aWxsIGJlIGhlbHBmdWwgdG8geW91ciBwcm9jZXNzIGJlY2F1c2UgdGhlIHNwb2tlbiBsYW5ndWFnZSBpcyBwcmV0dHkgZWFzeSB0byBmb2xsb3cvdW5kZXJzdGFuZC4gClRoZSBGYWlyIENyZWRpdCBSZXBvcnRpbmcgQWN0IGNvdmVycyBzZXJ2aWNlcyBub3QgYmVpbmcgZGVsaXZlcmVkIGFzIGV4cGVjdGVkLCB3aGljaCBpcyBhIHBlcmNlcHRpb24gdGhpbmcuIEhvd2V2ZXIsIHRoZXJlIGlzbiBhbnl0aGluZyB0byBwcmV2ZW50IEJsaXp6YXJkIGZyb20gYmFubmluZyBhY2NvdW50cyBiZWNhdXNlIG9mIGl0LiBXaGljaCBpcyBhIHdob2xlIGRpZmZlcmVudCByYW50IGFib3V0IGhvdyBjb25zdW1lciBwcm90ZWN0aW9ucyBuZWVkIHRvIGJlIHVwZGF0ZWQgZm9yIHRoaXMgZGF5IGFuZCBhZ2UuCldoaWxlIE1hZWRhIG1heSBoYXZlIGNyZWF0ZWQgdGhlIG1vZGVybiB0ZW50YWNsZSByYXBlLCBoZSB3YXNuJ3QgdGhlIGludmVudG9yIG5vdCBldmVuIGNsb3NlLiAKSWwgZGZlbmQgcGx1cyBsYXJnZW1lbnQgbGUgZHJvaXQgZGVzIGNvbnNvbW1hdGV1cnMgIGF2b2lyIHVuIHBhaW4gZGUgaGF1dGUgcXVhbGl0IGV0ICBlbiBjb25uYXRyZSBsZXMgcHJvY2VzcyBkZSBmYWJyaWNhdGlvbi4uIApPbmUgaW50ZXJ2ZW50aW9uIG9mdGVuIHVzZWQgaXMgbWFuaXB1bGF0aXZlIHRoZXJhcHkuIEN1cnJlbnQgZXZpZGVuY2UgZnJvbSByYW5kb21pemVkIGNvbnRyb2xsZWQgdHJpYWxzIGRlbW9uc3RyYXRlcyB0aGF0IG1hbmlwdWxhdGl2ZSB0aGVyYXB5IG1heSBiZSBhcyBlZmZlY3RpdmUgYXMgb3RoZXIgY29uc2VydmF0aXZlIHRyZWF0bWVudHMgb2YgTEJQLCBidXQgaXRzIGFwcHJvcHJpYXRlIHJvbGUgaW4gdGhlIGhlYWx0aGNhcmUgZGVsaXZlcnkgc3lzdGVtIGhhcyBub3QgYmVlbiBlc3RhYmxpc2hlZC4uIApTaGUgdG9vayBubyBwcmlzb25lcnMgaW4gdGhlIHBvb2wsICJidXQgb3V0IG9mIHRoZSB3YXRlciwgc2hlIHdhcyBhIGxvdmVseSB5b3VuZyBnaXJsIi4gRGV0ZWN0aXZlIFJpY2hhcmQgR2F1dCBpcyBhIHRhbGwgYW5kIGVhcm5lc3QgNDMgeWVhciBvbGQgd2l0aCBjbG9zZWx5IGNyb3BwZWQgYnJvd24gaGFpciBhbmQgYSBtaWxkIGRlbWVhbm91ci4gClRoZXJlIGFyZSAyIGJ1cyBzdG9wcyBuZWFyIHRoZSBob3RlbC4gVGhlIGJ1c2VzIGdvIHRocm91Z2ggdGhlIExpbmNvbG4gVHVubmVsIHdoaWNoIGlzIHVzdWFsbHkgYSAzMCBtaW51dGUgcmlkZSBpZiB0aGVyZSBhcmVuJ3QgYW55IHRyYWZmaWMgcHJvYmxlbXMuVGhlIGNvc3QgaXMgJDMuNTAgJDQ6NTAgZGVwZW5kaW5nIG9uIHRoZSBidXMgc3RvcC4gVGhlcmUgaXMgdGhlIG9wdGlvbiBvZiBwdXJjaGFzaW5nIGEgcm91bmQgdHJpcCB0aWNrZXQuMSB2b3RlU2hvdyBhbGwgYW5zd2VycyJSbSA0MDcgd2FzIGdvb2QgRVhDRVBUIGZvciBub2lzZSBwcm9ibGVtLiAKUydhZ2lzc2FudCBkZSBjZXMgbWVzdXJlcyBkZSBzcmV0LCBjZSBzb250IGNlbGxlcyBxdWkgdGFpZW50IGRqIHBydnVlcyBsb3JzIGRlIGxhIHByaXNlIGQndW4gYXJydCBvdSBkJ3VuIGp1Z2VtZW50IGRlIGRjbGFyYXRpb24gZCdpcnJlc3BvbnNhYmlsaXQgcG5hbGUgcG91ciBjYXVzZSBkZSB0cm91YmxlIG1lbnRhbCA6IEludGVyZGljdGlvbiBkJ2VudHJlciBlbiByZWxhdGlvbiBhdmVjIGxhIHZpY3RpbWUgZGUgbCdpbmZyYWN0aW9uIG91IGNlcnRhaW5lcyBwZXJzb25uZXMgb3UgY2F0Z29yaWVzIGRlIHBlcnNvbm5lcywgZXQgbm90YW1tZW50IGxlcyBtaW5ldXJzLCBzcGNpYWxlbWVudCBkc2lnbmVzIDsgSW50ZXJkaWN0aW9uIGRlIHBhcmF0cmUgZGFucyB0b3V0IGxpZXUgc3BjaWFsZW1lbnQgZHNpZ24gOyBJbnRlcmRpY3Rpb24gZGUgZHRlbmlyIG91IGRlIHBvcnRlciB1bmUgYXJtZSA7IEludGVyZGljdGlvbiBkJ2V4ZXJjZXIgdW5lIGFjdGl2aXQgcHJvZmVzc2lvbm5lbGxlIG91IGJudm9sZSBzcGNpYWxlbWVudCBkc2lnbmUsIGRhbnMgbCdleGVyY2ljZSBkZSBsYXF1ZWxsZSBvdSAgbCdvY2Nhc2lvbiBkZSBsYXF1ZWxsZSBsJ2luZnJhY3Rpb24gYSB0IGNvbW1pc2Ugb3UgaW1wbGlxdWFudCB1biBjb250YWN0IGhhYml0dWVsIGF2ZWMgbGVzIG1pbmV1cnMsIHNhbnMgZmFpcmUgcHJhbGFibGVtZW50IGwnb2JqZXQgZCd1biBleGFtZW4gcHN5Y2hpYXRyaXF1ZSBkY2xhcmFudCBsYSBwZXJzb25uZSBhcHRlICBleGVyY2VyIGNldHRlIGFjdGl2aXQgOyBTdXNwZW5zaW9uIGR1IHBlcm1pcyBkZSBjb25kdWlyZSA7IEFubnVsYXRpb24gZHUgcGVybWlzIGRlIGNvbmR1aXJlIGF2ZWMgaW50ZXJkaWN0aW9uIGRlIHNvbGxpY2l0ZXIgbGEgZGxpdnJhbmNlIGQndW4gbm91dmVhdSBwZXJtaXMuIApObyBzcGFtbWluZyAgIHRoaXMgaW5jbHVkZXMgcG9sbHMgYW5kIHN1cnZleXMKSXQgcGF0ZW50bHkgYWJzdXJkIHRoYXQgc2hlIHdvdWxkIHNhdmUgYmFiaWVzIElOIFRIRSBXT01CIGZyb20gZGVhdGggd2l0aCBtaXJhY2xlIHN1cmdlcmllcyBhbmQgZmluZCBjb21mb3J0IGFuZCBlc2NhcGUgZnJvbSB0aGF0IHN0cmVzcyBhbmQgY2hvb3NlIHRvIHN0YXJ0IGEgZmFtaWx5IGFtb25nIGEgQ1JJTUlOQUwgR0FORyBwb3NpbmcgYXMgYSBtb3RvcmN5Y2xlIGNsdWIuIEl0IGNsaWNoZSBhbmQgdGhhdCBkb2VzbiBtZWFuIHRoZSBzaG93IGlzbiBlbmpveWFibGUuIApJbmRpdmlkdWFscyB3aG8gc3Vic2NyaWJlIHRvIHByaW50IHdpbGwgZ2V0IG9ubGluZSBhY2Nlc3MuIEluc3RpdHV0aW9ucyB3aWxsIGhhdmUgdG8gdGFrZSBvdXQgYSBwcmludCBhbmQgb25saW5lIHN1YnNjcmlwdGlvbi4KSW4gTWF5IDIwMTggbXkgYm9zcyBwcm9tb3RlZCBtZSB0byB0ZWFrIGxlYWQgYW5kIGdvdCBhIHJhaXNlIHRvIDQ1ay4gCjg1IDg3KSBBbGwgb2YgdGhlc2Ugc29uZ3MgY2FuIGJlIGZvdW5kIG9uIGlUdW5lczogTXVyZGVyIE15IEhlYXJ0IChmZWF0LiAKT3RoZXJ3aXNlIHlvdSBjaGVjayBiZWNhdXNlIG11Y2ggb2YgdGhlIEJCIHJhbmdlIHNtYXNoZXMgdGhlIGJvYXJkLi4gCllvdSBhcyBhIHBva2VyIHBsYXllciBzaG91bGQgdHJ5IHRvIHB1cmNoYXNlIHRoZSBwcm9kdWN0cyBwYXlpbmcgc29tZSBoZWZ0eSBhbW91bnRzIGFzIHRoZXNlIGNhcmRzIGRlbm90ZSB5b3VyIHByZXNlbmNlIGluIHRoZSBjYXNpbm8gdGFibGUuIFNvIHRoZSBsZWFkaW5nIHBva2VyIHN0YXJzIGNhbiBvbmx5IGJlIHRoZSBwb3RlbnRpYWwgcGVvcGxlIHdobyB3YW50IHRvIHNhdmUgdGhlaXIgY2FyZHMgZnJvbSB0aGVpciBvd24gZmlzdHMuIApTcGFDbHViJ3MgZ29hbCBpcyB0byBpbnNwaXJlIGFuZCBtb3RpdmF0ZSBndWVzdCdzIGhlYWx0aGllc3QgaW50ZW50aW9ucyBpbnRvIGFjdGlvbi4gRml0bmVzcyBpbnN0cnVjdG9ycyBjb25kdWN0IGRhaWx5IGdyb3VwIGFuZCBwcml2YXRlIGZpdG5lc3MsIHlvZ2EgYW5kIHRhaSBjaGkgY2xhc3NlcyBmb3IgcGFzc2VuZ2Vycy4gCllvdSBtYXkgdm9sdW50ZWVyIGluIHRoZSBjaGlsZHJlbidzIHdhcmQsIGhlbGwgbWF5YmUgdGhlIGNhcmRpb2xvZ3kgd2FyZCBmb3IgdGhhdCBtYXR0ZXIuIApZZWFoIEkgd291bGQgdGhpbmsgaXQgd291bGQgYmUgZGlmZmljdWx0IGlmIHlvdSBhcmUgYSBwb2xpY2Ugb2ZmaWNlciBjYWxsZWQgZm9yIHRoaXMga2luZCBvZiBzdHVmZi4gClllYWguIG15IG5hdnkgZG9jIG1pc2RpYWdub3NlZCBtZSwgdGhlbiBzZWVtZWQgdG8gdGhpbmsgSSB3YXMgY2Fycnlpbmcgb24gYW5kIGZha2luZyBzdGlsbCBiZWluZyBpbiBwYWluLCBhcyBjbGVhcmx5IEkgaGFkIGJlZW4gZGlhZ25vc2VkLCBJIG11c3QgYmUgYmV0dGVyIGJ5IG5vdywgdGhlIGZhY3QgdGhhdCBJIHN0aWxsIGNvbXBsYWluaW5nIG11c3QgYmUgbWUgcHJldGVuZGluZywgYXMgQ0xFQVJMWSBzaGUgY291bGRuIGhhdmUgZG9uZSBhbnl0aGluZyB3cm9uZyBpbiB0aGUgcHJvY2Vzcy4KVGhlIGNvbW11bml0eSBjYW4gYmUgc28gaW5zdWxhciBhbmQgSSB0aGluayB0aGF0IGEgaHVnZSBwYXJ0IG9mIHRoaXMuIApKYW1lcyBEaW5hbiwkMi4yIGJpbGxpb24sIFdoYXJ0b24uIApBdCB0aGUgdmVyeSBsZWFzdCwgcHJvcGVyIGV0aXF1ZXR0ZSBpcyB0byBhZGQgIih4IHBvc3QgZnJvbSBzbyBhbmQgc28pIiBhdCB0aGUgZW5kIHRvIGF0IGxlYXN0IGdpdmUgc29tZSBjbHVlIGFzIHRvIHRoZSB0cnVlIG9yaWdpbiBpZiBhbnlvbmUgd2FudHMgdG8gZ28gZGlnZ2luZyBmb3IgbW9yZSBpbmZvLiBJbnN0ZWFkLCB5b3Ugc2VlbSB0byBoYXZlIGludGVudGlvbmFsbHkgZG9uZSBldmVyeXRoaW5nIHBvc3NpYmxlIHRvIG1ha2UgaXQgYXBwZWFyIHlvdSBzdGVhbGluZyBjb250ZW50Li4gCkkgZGVjaWRlZCB0aGF0IEkgd2FudGVkIHRvIHN0YXJ0IG15IG93biBidXNpbmVzcywgbGVhdmUgdGhlIHN0cmVzc2Z1bCB3b3JrIHdvcmxkIGJlaGluZCBhbmQgb2ZmZXIgUmVpa2kgYW5kIGhlYWxpbmcgbW9kYWxpdGllcyB0byB0aGUgd29ybGQuIApNYWRkaWUgQm93bWFuLCB0aGUgZ29sZCBtZWRhbGlzdCBpbiBTb2NoaSB3aG8gZnJlcXVlbnRseSByb29tcyB3aXRoIERyZXcgb24gdGhlIHJvYWQgYW5kIGFkbWl0dGVkbHkgZW5qb3lzIHB1c2hpbmcgaGVyIHRlYW1tYXRlJ3MgYnV0dG9ucywgc2FpZCBzaGUgYWRtaXJlcyB0aGF0IERyZXcgcmVtYWlucywgaW4gYWxsIGNpcmN1bXN0YW5jZXMsIGhlciB0cnVlIHNlbGYsIG5vdCBjaGFuZ2luZyB3aG8gc2hlIGlzIGp1c3QgYmVjYXVzZSBvZiB3aGVyZSBzaGUgbWF5IGJlIG9yIHdobyBzaGUgbWF5IGJlIGFyb3VuZC4KRXZlbnR1YWxseSB3aGF0ZXZlciBtdXNjbGVzIHRob3NlIGFyZSB5b3UgZ2V0IHVzZWQgdG8gaXQgYW5kIGl0J2xsIGJlIGp1c3QgaG93IHlvdSBtb3ZlIGJ1dCBJIGhhZCB0byBkbyBpdCBjb25zaXN0ZW50bHkgZm9yIGl0IHRvIGdvIGF3YXkgaW4gYXRobGV0aWNzIGluIGhpZ2hzY2hvb2wuIEdvb2QgbHVjayBtYW4uIApJIGFsd2F5cyBsZXQgYWdncmVzc2l2ZSBkcml2ZXJzIHBhc3MgYmVjYXVzZSBJIGRvbiB3YW50IHRoZW0gb24gbXkgYXNzLCBidXQgdGhleSBzdGlsbCBwaXNzIG1lIHJpZ2h0IHRoZSBoZWxsIG9mZi4gSSBzcGVuZCAxIDIgaG91cnMgYSBkYXkgZHJpdmluZywgc29tZXRpbWVzIHdpdGggbXkga2lkcyBpbiB0aGUgY2FyLiBTdGF0aXN0aWNhbGx5IHNwZWFraW5nIGl0IHRoZSBtb3N0IGRhbmdlcm91cyB0aGluZyBJIGRvIGluIG15IGRheSwgYW5kIHBlb3BsZSB3aG8gZHJpdmUgbGlrZSBmdWNraW5nIGFzc2hvbGVzIGp1c3QgbWFrZSBpdCB0aGF0IG11Y2ggbW9yZSBkYW5nZXJvdXMsIGFsbCBzbyB0aGV5IGNhbiBnZXQgc2l4IGNhcnMgYWhlYWQgaW4gdHJhZmZpYywgb3IgZ2V0IHNvbWV3aGVyZSA0MCBzZWNvbmRzIGVhcmxpZXIsIG9yIGp1c3QgdG8gdmVudCB0aGVpciBibGluZCBzdHVwaWQgYWdncmVzc2lvbi4gClRoZSBBdXRvbW8gVmljaW91cyBpcyBvZmZpY2lhbGx5IGRlYWQuIFJlYmVjY2EgY2FtZSBvdmVyIHRvZGF5IGFuZCBmaXNoZWQgYXJvdW5kIGluIHRoZSBlbmdpbmUgZm9yIHRoZSB0aW55IHBpY2UgdGhhdCBicm9rZSBvZmYgdGhlIHNwYXJrcGx1ZyB3aXRoIGEgc3VwZXIgc3Ryb25nIHRpbnkgbWFnbmV0IHN0dWZmZWQgaW50byBhIGxlbmd0aCBvZiBwYW50eWhvc2UuIApJdCBjYW4gYmUgZG9uZS4gCkhvd2V2ZXIsIHNxdWFtb3VzIGNlbGxzIGFsc28gb2NjdXIgaW4gdGhlIGxpbmluZyBvZiB0aGUgZGlnZXN0aXZlIHRyYWN0LCBsdW5ncywgYW5kIG90aGVyIGFyZWFzIG9mIHRoZSBib2R5Lk9yYWwgc3F1YW1vdXMgY2VsbCBjYXJjaW5vbWFzIChPU0NDKSBhcmUgdGhlIHNpeHRoIG1vc3QgY29tbW9uIGNhbmNlciB3b3JsZHdpZGUgYW5kIGFyZSBkaWZmaWN1bHQgYW5kIHZlcnkgZXhwZW5zaXZlIHRvIHRyZWF0LkluIHRoZSBleHBlcmltZW50cywgdGhlIHNjaWVudGlzdHMgZ3JldyBjZWxsIGN1bHR1cmVzIGluIHRoZSBsYWIgZnJvbSBzZXZlcmFsIGRpZmZlcmVudCBjZWxscyBsaW5lcyB0byB3aGljaCB0aGV5IGFkZGVkIGZhdHR5IGFjaWRzLlRoZSBjZWxsIGxpbmVzIGluY2x1ZGVkIGJvdGggbWFsaWduYW50IG9yYWwgYW5kIHNraW4gU0NDcywgYWxvbmcgd2l0aCBwcmUgbWFsaWduYW50IGNlbGxzIGFuZCBub3JtYWwgc2tpbiBhbmQgb3JhbCBjZWxscy5Qcm9mZXNzb3IgS2VubmV0aCBQYXJraW5zb24sIEhlYWQgb2YgdGhlIE9yYWwgQ2FuY2VyIFJlc2VhcmNoIEdyb3VwIGF0IFF1ZWVuIE1hcnkgSW5zdGl0dXRlIG9mIERlbnRpc3RyeSwgc2FpZDpmb3VuZCB0aGF0IHRoZSBvbWVnYSAzIGZhdHR5IGFjaWQgc2VsZWN0aXZlbHkgaW5oaWJpdGVkIHRoZSBncm93dGggb2YgdGhlIG1hbGlnbmFudCBhbmQgcHJlIG1hbGlnbmFudCBjZWxscyBhdCBkb3NlcyB3aGljaCBkaWQgbm90IGFmZmVjdCB0aGUgbm9ybWFsIGNlbGxzLndlIGRpc2NvdmVyZWQgdGhpcyB3YXMgcGFydGx5IGR1ZSB0byBhbiBvdmVyIHN0aW11bGF0aW9uIG9mIGEga2V5IGdyb3d0aCBmYWN0b3IgKGVwaWRlcm1hbCBncm93dGggZmFjdG9yKSB3aGljaCB0cmlnZ2VyZWQgY2VsbCBkZWF0aC4gCkl0IHdhcyBlc3NlbnRpYWxseSBhIHJlZ3VsYXIgZGVjayBvZiBjYXJkcywgb25seSB3aXRoIGZhY2VzIGFuZCBkYXRhIG9mIG1pc3NpbmcgcGVvcGxlIGluIHRoZSBhcmVhIHRoYXQgYXJlIGN1cnJlbnQgY29sZCBjYXNlcy4gCkJ1dCB0aGV5IGNhbid0IGRlbnkgcGVvcGxlIG9mIHRoZWlyIGNpdmlsIHJpZ2h0cy4gCllvdSBjYW4gZGVmaW5pdGVseSBmb2xsb3cgeW91ciBtZW50b3JzIGFuZCBwaWNrIHRoZWlyIHNpbWlsYXIgcHJvZHVjdHMgYXMgd2VsbC4gCkluIGl0cyBkYXksIHRoZSBvbGQgUlNMIENsdWIgd2FzIGEgbWFnbmV0IGZvciBuYXRpb25hbCBhbmQgaW50ZXJuYXRpb25hbCBlbnRlcnRhaW5lcnMsIHdpdGggbmFtZXMgbGlrZSBBQyBEQywgTWlkbmlnaHQgT2lsLCBDb2xkIENoaXNlbCBhbmQgQXVzdHJhbGlhbiBDcmF3bCBkcmF3aW5nIGh1Z2UgY3Jvd2RzIGludG8gdGhlIDEyNiBmb290ICg0MCBtZXRyZSkgYXVkaXRvcml1bS4gIlRoZSBjbHViIHdhcyBzbyBpbnN0cnVtZW50YWwgdG8gdGhlIGNvbW11bml0eS4gIkl0IHdhcyBzZWVuIGFzIGEgbGVhZGVyLCBhbHdheXMgZG9pbmcgc29tZXRoaW5nIGRpZmZlcmVudCwiIE1ycyBIeWRlIHNhaWQuIApZb3UgaGF2ZSBhIHRhbGVudGVkIG1hcnRpYWwgYXJ0aXN0IGluIFRoZSBDYWx2YXJ5LCBhIHBoeXNpY2FsbHkgaW1wb3Npbmcgd29tYW4gaW4gQm9iYnksIGJ1dCB3aGF0IEkgbGlrZSBtb3N0IGlzIHRoZSBncmFkdWFsIGNoYW5nZSBpbiBEYWlzeS4gCkhldXR6dXRhZ2UgZ2lidCBlcyBtZWhyIGFscyA2MDAwIEFydGlrZWwgYmVyIGRpZSBpbm5lcmUgQW53ZW5kdW5nIHZvbiBIMk8yICwgd2FzIGVpbmUgUmV2b2x1dGlvbiBpbiBkZXIgTWVkaXppbiBhdXNnZWxzdCBoYXQuIApUaGUgb2J2aW91cyBwbGF5aW5nIHdpdGggZGF0ZXMgYW5kIGJlaW5nIGZsZXhpYmxlIHdpdGggdGhhdApUcnkgc29tZSB3YXJtZXIgd2hpdGVzIHdpdGggY29vbGVyIHRvbmVzLiBHZXQgdGhhdCB3b3cgZmFjdG9yLCBqdXN0IGJlIHN1cmUgdG8gbGF5ZXIgdGhlIGNvbG91cnMgd2l0aCBsb3RzIG9mIGludGVyZXN0aW5nIHRleHR1cmVzLi4gClRoZXNlIGFyZSB0aGUgb3JpZ2lucyBvZiB0aGUgQ2hlbiBhbmQgWWFuZyBmb3JtcyBvZiBUYWkgQ2hpLiBUaGUgV3UsIFN1biwgYW5kIEhhbyBzdHlsZXMgZGV2ZWxvcGVkIGxhdGVyLiAKRGVuIEF1ZnRyYWcgaGF0IGRhcyBCYXV1bnRlcm5laG1lbiBKdWcgICBOb3d5aSBXZWsgYmVrb21tZW4sIGVpbmUgVG9jaHRlcmZpcm1hIHZvbiAgZGVzIEdlc2NoZnRzbWFubmVzIEFsZWtzYW5kciBUc2NoaWdpcmluc2tpLiBHZW0gVmVydHJhZyB3aXJkIEh5YXR0IGRhcyBHZWJ1ZGUgMjUgSmFocmUgbGFuZyBiZXRyZWliZW4gICBtaXQgZGVyIE9wdGlvbiBhdWYgZWluZSB6d2VpbWFsaWdlIFZlcmxuZ2VydW5nIGRlciBQYWNodHplaXQgdW0gd2VpdGVyZSB6ZWhuIEphaHJlLiBEaWUgSG90ZWxrZXR0ZSBiZXRyZWlidCBydXNzbGFuZHdlaXQgYmlzbGFuZyB6d2VpIEh1c2VyOiBkYXMgQXJhcmF0IFBhcmsgSHlhdHQgaW4gTW9za2F1IHVuZCBkYXMgSHlhdHQgUmVnZW5jeSBpbiBKZWthdGVyaW5idXJnLiBEYXJiZXIgaGluYXVzIGZocnQgZGllIEtldHRlIEFwcGFydGVtZW50cyBpbSBGZGVyYXRpb25zIFR1cm0gaW0gTW9za2F1ZXIgQnVzaW5lc3MgVmllcnRlbCBNb3Njb3cgQ2l0eS4KT3VyIGZlYXJsZXNzIHByZXNpZGVudCwgd2hvIGhhcyByYXJlbHkgc2VlbiBhIGNvbXByb21pc2UgaGUgd29uJ3QgZW1icmFjZSwgaXMgcGxheWluZyBoaXMgdXN1YWwgZG91YmxlIGdhbWUsIHRlbGxpbmcgaGlzIHN1cHBvcnRlcnMgaG93IGZpcm0gaGUgd2lsbCBiZSwgYW5kIHRlbGxpbmcgaGlzIGF2b3dlZCBlbmVtaWVzIGhlIGlzIHdpbGxpbmcgdG8gcGxheSBpbiB0aGVpciBwaWdwZW4gaWYgdGhleSB3b3VsZCBqdXN0IGJlIG1vcmUgInJlYXNvbmFibGUiLgpUaGF0IGFydGljbGUgd2FzIHdyaXR0ZW4gd2l0aCBhIGJpemFycmUgcGVyc3BlY3RpdmUuIFBlb3BsZSBhcmUgaGF2aW5nIGZld2VyIGtpZHM/IEdPT0QhIFdlIG5lZWQgdG8gc2xvdyB0aGUgYmlydGggcmF0ZSBkcmFtYXRpY2FsbHkgYWNyb3NzIHRoZSB3b3JsZCBpZiB3ZSBpbnRlbmQgdG8gaGF2ZSBhIGhhYml0YWJsZSBwbGFuZXQgaW4gdGhlIGZ1dHVyZS4gU2hvcnQgdGVybSBlY29ub21pYyBwcm9ibGVtcyBhcmUgYSBzbWFsbCBwcmljZSB0byBwYXkgZm9yIGxvbmcgdGVybSBlY29sb2dpY2FsIHN1c3RhaW5hYmlsaXR5LgogU3RyYWlnaHQgZnJvbSB0aGlzIG1vcm5pbmcgcGFwZXIsIHdpdGggYSBjb3VwbGUgb2YgdG9wcGVycyBKb2UgTGFjb2IgYnV5IENocmlzIENvaGFuIHRlYW0gYW5kIHRoZW4ga2VlcCBDb2hhbiB3b3JzdCBsaWV1dGVuYW50cz8KVGhlIHNjb3BlIG9mIGEgdGhlb3J5IGlzIHRoZSBsaW1pdHMgb2Ygd2hlcmUgaXQgaXMgYXBwbGljYWJsZS4gJ1RoZSBUaGVvcnkgb2YgVW5zdXBwb3J0ZWQgRmFsbGluZycgc3RhcnRlZCBvdXQgd2l0aCB0aGUgdW5pdmVyc2UgYXMgc2NvcGUuIApLZWxtZV9QYXJlbnVlbHogIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgNTcgbWludXRlcyBhZ28KVGhlIHRvdWNoc2NyZWVuIGFuZCBvdmVyYWxsIFVJIGlzIGp1c3QgZmFudGFzdGljLCBJIGFsd2F5cyBhbWF6ZWQgYXQgaG93IHdoYXRldmVyIGNvbnRyb2wgSSBsb29raW5nIGZvciBuZXh0IHNlZW1zIHRvIGludHVpdGl2ZWx5IGp1c3QgYmUgdW5kZXIgbXkgZmluZ2VydGlwcywganVzdCB3aGVyZSBJIGV4cGVjdCBpdCB0byBiZS4gRm9yIHN1Y2ggYSBwb3dlcmZ1bCBzeW50aCwgbW9zdCBvZiB0aGUgbmVjZXNzYXJ5IGNvbnRyb2xzIGFyZSByZWFsbHkgYWNjZXNzaWJsZSwgYW5kIG5vdCBidXJpZWQgdW5kZXIgdGhvdXNhbmRzIG9mIG1lbnVzIG9yIGluQXJjYW5lYW5kIHVuZG9jdW1lbnRlZCBsYXlvdXRzLiAKT3IgdGhlIG5leHQgdGltZSB5b3UgZmluZCBhIHN0dWR5IHRoYXQgaXMgY29tcGVsbGluZyB0byB5b3UsIGxvb2sgZm9yIG9wcG9zaXRlIHBvaW50cyBvZiB2aWV3LiBJIHRoaW5rIHlvdSB3aWxsIGZpbmQgdGhhdCB0aGVyZSBpcyB2YWxpZGl0eSB0byBjcml0aWNpc21zIG9mIENBR1cuT3JwaGljX1RocmVuY2ggIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNiBob3VycyBhZ29Sb3kgU3BlbmNlciB3aG8gYWxzbyBiZWxpZXZlcyBpbiBpbnRlbGxpZ2VudCBkZXNpZ24/IFJpY2hhcmQgTGluZHplbiB3aG8gaXNuIGNvbnZpbmNlZCBjaWdhcmV0dGVzIGNhdXNlIGx1bmcgY2FuY2VyP0luIGFueSBjYXNlLCB5b3Ugc2VlbSB0byBoYXZlIG1pc3VuZGVyc3Rvb2Qgd2hhdCAic2NpZW50aWZpYyBjb25zZW5zdXMiIG1lYW5zLiAKIllvdSBrbm93IHdoYXQ/IEkganVzdCBoYXBwZW4gdG8gbGlrZSBzZXguIEkgbGlrZSBtYWtpbmcgbW9uZXksIGFuZCBJIHJlYWxseSBsaWtlIGdldHRpbmcgdG8gdGhlIGNvcmUgb2Ygc29tZWJvZHkncyBuZWVkLCByZWFsbHkgZmluZGluZyBvdXQgd2hhdCdzIGdvaW5nIG9uIGluc2lkZSB0aGF0IGxlYWRzIHNvbWVvbmUgdG8gbWUsIiBKZXNzIHNheXMuIApOb3QgdG8gbWVudGlvbmVkIHlvdXIgc2FmZXR5IHdoZW4geW91IGFyZSB0aGVyZSBiZWNhdXNlIHlvdSBuZXZlciBrbm93IHdoYXQga2luZCBvZiBwZXJzb24gdGhlIGhvc3QgaXMuIEluIHRoZSBlbmQsIEkgZmluZCBob3RlbHMgdG8gYmUgYSBzYWZlciBhbmQgZmluYW5jaWFsbHkgcmVhc29uYWJsZSBjaG9pY2UuLiAKSGUgZHJlYW1lZCBhbmQgYnJvb2RlZCBvdmVyIGxvc3QgTWFyZ2FyZXQgdW50aWwgc2hlIGJlY2FtZSBhIHZpdmlkIHJlYWxpdHkgdG8gaGltIGFuZCBsaXZlZCBpbiBoaXMgcGFnZXMuIApEaWV0IG9yIHN1Z2FyeSAgIHNvZGEgZHJpbmtzIGFyZSB0aGUgd29yc3QgdGhpbmdzIHlvdSBjYW4gZmVlZCB5b3VyIGJvZHkuIApBY2NvcmRpbmcgdG8gc3RhdGUgY291cnQgcmVjb3JkcywgT3VkZW5ob3ZlbiB3YXMgY2hhcmdlZCB3aXRoIHNleHVhbCBhc3NhdWx0IGFuZCBjb252aWN0ZWQgb2YgZGlzb3JkZXJseSBjb25kdWN0IGFzIHBhcnQgb2YgYSBwbGVhIGJhcmdhaW4uIERlcGFydG1lbnQgZG9jdW1lbnRzIHNob3cgcmVndWxhdG9ycyBmaXJzdCB3YW50ZWQgaGltIHRvIHN1cnJlbmRlciBoaXMgbGljZW5zZS4gQnV0IGFmdGVyIGhpcyBsYXd5ZXIgbmVnb3RpYXRlZCB3aXRoIGEgZGVwYXJ0bWVudCBhdHRvcm5leSwgT3VkZW5ob3ZlbiBpbnN0ZWFkIHJlY2VpdmVkIGFuIDE4IG1vbnRoIHN1c3BlbnNpb24gYW5kIHdhcyBnaXZlbiB0aGUgb3B0aW9uIHRvIHJldHVybiB0byBwcmFjdGljZSBpZiBoZSBzb3VnaHQgdHJlYXRtZW50IGZyb20gYSBzZXggb2ZmZW5kZXIgdGhlcmFwaXN0IGFuZCB0b29rIGNvbnRpbnVpbmcgZWR1Y2F0aW9uIGNsYXNzZXMuIEhpcyBsaWNlbnNlIGV4cGlyZWQgaW4gMjAxMC4gQXR0ZW1wdHMgdG8gY29udGFjdCBoaW0gd2VyZSB1bnN1Y2Nlc3NmdWwuCjUuIE1vc3Qgb2YgdXMgZWF0IGEgZGFuZ2Vyb3VzbHkgdW5iYWxhbmNlZCBkaWV0IHRoYXQncyB0b28gaGlnaCBpbiBjYWxjaXVtIGFuZCB0b28gbG93IGluIG1hZ25lc2l1bS4KQWxsIEknbSBzYXlpbmcgaXMgdGhhdCAiWW91ciByZXN1bHRzIG1heSB2YXJ5LiIKVGhlcmUgYXJlIGFsc28gZ3Jhc3MgKHR1cmYpIGNvdXJ0cyBhdCBKb2huIEtlbXAgUGFyaywgd2hpY2ggaXMgYWxzbyBpbiBGb2xzb20uIEJvdGggYXJlIGZyZWUuVGhlIEZvbHNvbSBBZHVsdCBMZWFndWUgaGFzIGEgc2VjdGlvbiBmb3IgZnJlZSBhZ2VudCBvciBzb2xvIHBhcnRpY2lwYW50cyB3aGVyZSB5b3UgY2FuIHRyeSB0byBmaW5kIGEgdGVhbSB0byBwbGF5IHdpdGgsIGJ1dCB0aGVpciBnYW1lcyBhcmUgc2NoZWR1bGVkIGJldHdlZW4gNjowMCBwbSBhbmQgMTA6MDAgcG0gKG5vdCBzdXJlIGlmIHRoYXQgd2lsbCB3b3JrIHdpdGggeW91ciBzY2hlZHVsZSkuIEl0IGNvc3RzIGFib3V0ICQ0NiB0byBqb2luIHBlciBzZWFzb24uVGhlIHZvbGxleWJhbGwgc2Vhc29uIGlzIGFsbW9zdCBvdmVyLCBJIGd1ZXNzaW5nIHRoZXkgc3RhcnQgYSBuZXcgbGVhZ3VlIC8gZGl2aXNpb24gb24gdGhlIHdlZWsgb2YgSGFsbG93ZWVuIChJIGN1cnJlbnRseSBwbGF5aW5nIHRoaXMgc2Vhc29uIHdpdGggc29tZSBjb3dvcmtlcnMsIGJ1dCB3aWxsIGJlIHRha2luZyBhIGJyZWFrIHdoZW4gdGhlIHNlYXNvbiBpcyBvdmVyKS5zY2F0dGVyZWRzaG93ZXJzICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvV293LCB0aGFuayB5b3Ugc28gc28gbXVjaC4gClNsb3QgbWFjaGluZXMgYXJlIGFsc28gc29tZXRpbWUgcmVmZXJyZWQgdG8gYXMgZnJ1aXQgbWFjaGluZSBvciBwb2tlciBtYWNoaW5lIGFuZCBhcmUgc2ltcGx5IGNhbGxlZCBhcyBzbG90cy4gVHJhZGl0aW9uYWwgc2xvdCBtYWNoaW5lcyB3ZXJlIG5vdCBhcyBhZHZhbmNlZCBhcyBuZXcgc2xvdCBtYWNoaW5lcyBhbmQgd2VyZSBlYXN5IHRvIG1hbmlwdWxhdGUuIFRoaXMgd2FzIGR1ZSB0byB0aGUgc3ByaW5nIGJhc2VkIHRlY2hub2xvZ3kgd2hpY2ggZW5hYmxlZCB0aGUgcGxheWVyIHRvIGNvbnRyb2wgdGhlIHNwaW4gdXNpbmcgdGhlIGxldmVyLiAKQXMgYSBzaWRlIG5vdGUsIEkgZG9uIHRoaW5rIHRoaXMgaXMgYSBnb29kIHNwb3QgdG8gc2VtaSBibHVmZiBvbiB0aGUgZmxvcC4gVVRHIG9wZW4gcmFuZ2UgaXMgdmVyeSB0aWdodCBhbmQgdGhlbiBoZSBjb250aW51ZWQgb24gdGhlIGZsb3AgYWdhaW5zdCAzIG9wcG9uZW50cyBvdXQgb2YgcG9zaXRpb24gc28gdGhlIG9ubHkgaGFuZCB5b3UgZ2V0dGluZyB0byBmb2xkIGhlcmUgcmVhbGlzdGljYWxseSBpcyBBSy4gCk1heWJlIHNvIHRoZWlyIGN1c3RvbWVycyBjb3VsZCBzYXkgdGhleSBoYWQgYmlnZ2VyIGJvb2JzIHRoYW4gdGhleSBhY3R1YWxseSBkaWQ/LiAKWWV0IHdoeSwgYWZ0ZXIgZGVjYWRlcywgZGlkIHRoZSBSdXNzaWFucyBzdWRkZW5seSBuZWVkIHRvIGNsZWFyIHRoaXMgb25lIGxvbmVseSBzcG90LCBpbiB0aGUgaGVhcnQgb2YgYSBmcmlnaWQgd2ludGVyLCBmaW5pc2hpbmcganVzdCBiZWZvcmUgTUgzNzAgZGlzYXBwZWFyZWQ/Li4gClNoZSBzYXlzIHdoZW4gc2hlIGlzIGRvbmUgd2l0aCB0aGlzIHRvdXIgIHNoZSB3aWxsIGhlYWQgYmFjayB0byBSYWxlaWdoIHRvIGRlY2lkZSB3aGF0IHRvIGRvIGFib3V0IFNlbmF0ZSBCaWxsIDEzLiAKQm9sZCBtb3ZlcyBhbmQgcG9rZXIKVGhlcmUgYXJlIGdyZWF0IGRlYWxzIGdvaW5nIGZvciBUZXhhcyBIb2xkICdlbSBwcm9mZXNzaW9uYWwgcG9rZXIgZ2FtZSB0YWJsZXMgZm9yIHNhbGUgb25saW5lIGF0IG51bWVyb3VzIG9mIHN0b3JlcyBmb3IgaHVnZSBkaXNjb3VudHMuIElmIHlvdSdyZSBhIGhhcmRjb3JlIHBva2VyIGVudGh1c2lhc3QgYW5kIHdhbnQgdG8gcGxheSBvbiBhIHByb2Zlc3Npb25hbCBwb2tlciBnYW1lIHRhYmxlIHRoYXQgdGhlIHByb3MgaW4gVmVnYXMgcGxheSBvbiwgdGhlbiB5b3UgY291bGRuJ3QgYXNrIGZvciBhIGJldHRlciBwb2tlciB0YWJsZSB0aGF0J3MgZ29pbmcgZm9yIGEgY2hlYXAgcHJpY2Ugb25saW5lLiAKU3VjaCBhcyB0aGUgcGVyc2VjdXRpb24gb2YgZXF1YWxpdHkgYW5kIGRpdmVyc2l0eSBzdGVhbGluZyB0aGVpciBjb3VudHJ5IGZyb20gdGhlbSBhbmQgaGF2aW5nIHRoZWlyIHZhbHVlcyBhbmQgZ3VucyBjb25maXNjYXRlZC4KRWlnaHR5IGZvdXIgdm9sdW50ZWVycyAoNDQgZmVtYWxlcywgNDAgbWFsZXMsIDQ0LjExNy4zIHllYXJzLCAxNzIuMzYuMSBjbSwgNzAuMTEwLjIga2cpIHdlcmUgbWVhc3VyZWQgZHVyaW5nIG5vcm1hbCBkYWlseSBsaWZlIHVzaW5nIHNob3J0cyBtZWFzdXJpbmcgbXVzY2xlIGVsZWN0cm9teW9ncmFwaGljIChFTUcpIGFjdGl2aXR5IChyZWNvcmRpbmcgdGltZSAxMS4zMi4wIGhvdXJzKS4uIApXaXRoIG1vc3Qgb2YgdGhlIHN1cHBsZW1lbnRhbCBtb25leSBnb2luZyB0byBpbmNyZWFzaW5nIHRoZSBudW1iZXIgb2YgVVMgdHJvb3BzIGluIEFmZ2hhbmlzdGFuLCBkZXNwaXRlIHRoZSBmYWN0IHRoYXQgdGhlcmUgaXMgbm8gcmVhbCBleGl0IHN0cmF0ZWd5IGFuZCBubyBvbmUgaW4gdGhlIHdvcmxkLCBub3QgZXZlbiBvdXIgY2xvc2VzdCBhbGxpZXMsIGJlbGlldmUgdGhlIHdhciBpcyB3aW5uYWJsZS4gaW4gQWZnaGFuaXN0YW4sIHdpdGggNDMgcGVyY2VudCBzYXlpbmcgdGhpbmdzIGFyZSBnb2luZyBiYWRseS4iVGhhdCBhIGh1Z2UgMjMgcG9pbnQganVtcCBzaW5jZSBsYXN0IE5vdmVtYmVyLCB3aGVuIHR3byB0aGlyZHMgdGhvdWdodCB0aGF0IHRoaW5ncyB3ZXJlIGdvaW5nIHBvb3JseSBpbiB0aGUgd2FyLCIgc2F5cyBDTk4gUG9sbGluZyBEaXJlY3RvciBLZWF0aW5nIEhvbGxhbmQuCkhlIGhhZCBiZWVuIHNpY2sgZm9yIGEgd2hpbGUsIGFuZCBoYWQgaGFkIGEgYnVuY2ggb2Ygc3Ryb2tlcyBvdmVyIHRoZSB5ZWFycy4gCkxpdGVyYWxseSB0aGUgbGVhc3QgZW50aHVzaWFzdGljLCBtb3N0IGxpbWl0ZWQgZW5kb3JzZW1lbnQgcG9zc2libGUuIApJbW1lZGlhdGVseSBhZnRlciB0aGUgc2hvd2VyLCBpdCBzdHJhaWdodCBvbiB0byBhIHZlcnkgZ29vZCBiYXJlYmFjayBibG93am9iIHdoaWxlIHRoZSBzZWNvbmQgbGFkeSBzaG93ZXJzLiBBZnRlciBzaGUgaXMgZmluaXNoZWQsIHNoZSBqb2lucyBpbiB3aXRoIHRoZSBvcmFsIGFjdGlvbiBhbmQgZnJvbSB0aGVyZSwgaXQgb24gdG8gdGhlIHNleC4gSG93IGFuZCB3aGF0IHlvdSBkbyBpcyB1cCB0byB5b3UuIEkgYmFuZ2VkIGVhY2ggb2YgdGhlbSBhIGNvdXBsZSBvZiB0aW1lcyB3aGlsZSBraXNzaW5nIGFuZCB0b3VjaGluZyB0aGUgb3RoZXIgYW5kIHRoZW4gZWxlY3RlZCB0byB0YWtlIGEgcmVzdCBhbmQgd2F0Y2ggdGhlbSBkbyB0aGUgbGVzYmlhbiByb3V0aW5lLiBJdCB3YXMgT0sgYnV0IG5vdCBhcyBob3QgYXMgSSB0aG91Z2h0IGl0IHdvdWxkIGJlLiBJIHN1cmUgaXQgd291bGQgaGF2ZSBiZWVuIGhvdHRlciBpZiBib3RoIHdvbWVuIHdlcmUgc2V4eS4gQXMgaXQgd2FzLCBJIHdhcyBzdHVjayB3aXRoIHRoZSBkaWxlbW1hIG9mIGJhbmdpbmcgdGhlIGhvdCBvbmUgYW5kIGxvb2tpbmcgYXQvcGxheWluZyB3aXRoIHRoZSBsZXNzIGF0dHJhY3RpdmUgb25lLCBvciB2aWNlIHZlcnNhLCBhbmQgSSBkaWRuIHdhbnQgdG8gcGF5IHRvbyBtdWNoIGF0dGVudGlvbiB0byB0aGUgc2V4eSBvbmUgYW5kIG1ha2UgdGhlIG90aGVyIG9uZSBmZWVsIGJhZC4gTWF5YmUsIGFzIFRoYWlzIGxpa2UgdG8gc2F5LCBJIHRoaW5rIHRvbyBtdWNoPwo4KSBFeGNlc3NpdmUgU3BhbS4gCk11Y2ggb2Ygd2hhdCBJIGNvdWxkIHRlbGwgeW91IGlzIG5vdyAnU3ViIEp1ZGFjYWUnLCBzbyBzYXkgbm8gbW9yZS4gClllcywgdGhlcmUgYSBncmVhdCBtaXggb2YgcGFjZXMgZnJvbSAzaHIgZm9sa3MgYWxsIHRoZSB3YXkgdG8gNStydW4vd2FsayBncm91cHMuIApJJ3ZlIGRlY2lkZWQgSSdkIGJlIGEgbWVuYWNlIHRvIG90aGVycyBhcyB3ZWxsIGFzIHdlbGwgYXMgYSBkYW5nZXIgdG8gbXlzZWxmIHRvIHJpZGUgYXQgdGhlIG1vbWVudC4gClByb3ZlcmJzIDE1OjFdIHJ1bGUgNiBubyBoaXN0b3J5IGxlc3NvbnNbIGdldCByaWQgb2YgYWxsIGJpdHRlcm5lc3MsIHJhZ2UgYW5kIGFuZ2VyLCBicmF3bGluZyBhbmQgc2xhbmRlciwgYWxvbmcgd2l0aCBldmVyeSBmb3JtIG9mIG1hbGljZS4gClRha2UgY2FyZSBhbmQgZ29vZCBsdWNrIHdpdGggZXZlcnl0aGluZy4KVGhlIHRvcCAyNSBob3RlbHMgZm9yIHBva2llcyBwcm9maXRzIHRvb2sgJDQ4Niw1MzggcGVyIHdlZWsgZnJvbSBjb21tdW5pdGllcyBpbiB0aGUgMjAxNi8xNyBmaW5hbmNpYWwgeWVhciBhbG9uZSBhY2NvcmRpbmcgdG8gdGhlIEdyZWVucyBOU1cgTUxDIEp1c3RpbiBGaWVsZC4gCllvdXIgcG9zaXRpb24gd2FzIHJlYWxseSBiYWQgYXN3ZWxsLiBZb3UgbmV2ZXIgcG9zaXRpb25lZCB5b3Vyc2VsZiBpbiBhIHdheSB0byBzZXQgYW55IGtpbGwgYXR0ZW1wdHMgdXAsIGFuZCB5b3UgcGxheWVkIHRvbyBkZWZlbnNpdmVseSBpbiBnZW5lcmFsLiAKQ29tbW9uIHNlbnNlIGlzIHdoYXQgcGFzc2VzIGFzICJvYnZpb3VzLCIgYnV0IGluIGZhY3QgaXMgb2J2aW91c2x5IHRvIHRoZSBiZW5lZml0IG9mIHRob3NlIHdobyBvd24gaXQuIApDaGlsZCBjYW4gdGFrZSBhbnkgdHdvIG9mIHRoZSBmb3VyIHJhY2UgY29tcG9uZW50cyBvZiB0aGUgcGFyZW50cywgYnV0IHlvdXIgY2hpbGQgZmlyc3QgY29tcG9uZW50IHJhY2UgbXVzdCBiZSB0YWtlbiBmcm9tIHRoZSBmaXJzdCBjb21wb25lbnQgcmFjZSBvZiBlaXRoZXIgcGFyZW50LiBZb3VyIGNoaWxkIGRvdWJsZSBiYXJyZWxsZWQgcmFjZSB3aWxsIGJlIGxpbWl0ZWQgdG8gdHdvIGNvbXBvbmVudHMgd2l0aCBvbmUgaHlwaGVuLiBUaGUgZm9sbG93aW5nIGFyZSBleGFtcGxlcyBvZiBob3cgeW91ciBjaGlsZCBkb3VibGUgYmFycmVsbGVkIHJhY2UgbWF5IGJlIHJlY29yZGVkLi4gClZpbGxhcyBhcmUgYmFkIGZvciBodW1hbml0eS4gSWYgd2UgYWxsIGxpdmVkIGluIHZpbGxhcywgaWYgSSBoYWQga2lkcyBJIHdvdWxkbid0IGV4cGVjdCB0aGVtIHRvIHNlZSAyNSBiZWZvcmUgd2UgY29tcGxldGVseSBpcnJldmVyc2libHkgZnVja2VkIHRoZSBlYXJ0aC4gCklBTUEgbWFzc2FnZSB0aGVyYXBpc3QgYXQgYSBoaWdoIGVuZCBzcGEKWWV0IHBlb3BsZSBvbiBSZWRkaXQgdGVsbCBtZW4gdGhhdCB0aGV5IG5lZWQgdG8gYmUgYWJvdmUgYXZlcmFnZSBpbiBtYW55IGFzcGVjdHMgYmVmb3JlIGZpbmRpbmcgYSBtYXRlLiAKIkJ5IGRlc2lnbiwgdGhlIG9wZW4gZW52aXJvbm1lbnQgaGVscHMgZXN0YWJsaXNoIG1vcmUgb2YgYW4gZXZlbiBwbGF5aW5nIGZpZWxkLCByZW1vdmluZyB0aGUgZm9ybWFsaXR5IG9mIGVudGVyaW5nIGFuIG9mZmljZSBhbmQgYWxsb3dpbmcgbW9yZSBqdW5pb3IgdGVhbSBtZW1iZXJzIHRvIHBhcnRpY2lwYXRlIGluIG9wZW4gY29udmVyc2F0aW9uLiAKTWNLZXNzb24sIFJleGFsbCwgSmFtaW4gQXNhcmlhLCBEYXZpZCBKYWNrc29uLCBZb3JrIEhlcml0YWdlIGFuZCBvdGhlcnMgICBzZW50ZW5jaW5nIGRvZXNuJ3QgYmVnaW4gd2l0aCBhbnkgcG9pbnQgYnV0IHNlbnRlbmNlcyBsaWtlIHRoaXMgb25lIGRvLiBBUkdPIHN0b29kIGZvciAiQWxpIFJvc2hhbiBHTyIuIFlvdSBpZGlvdHMuIApFdmVyeSBjbGVyZ3ltYW4gb3IgZXF1aXZhbGVudCBmb3IgZXZlcnkgcmVsaWdpb24gaGFkIGJlZW4gcHV0IHRvIGRlYXRoIGZvciB0aGUgY3JpbWUgb2Ygc3VnZ2VzdGluZyB0aGUgZXhpc3RlbmNlIG9mIGhpZ2hlciBwb3dlcnMgdGhhbiB0aGUgS2Fsa2Fycy4gUmVsaWdpb24gc3RpbGwgZXhpc3RzIGFzIGFuIHVuZGVyZ3JvdW5kIG1vdmVtZW50LCBidXQgb25seSBhcyBoYWxmIHJlbWVtYmVyZWQgZnJhZ21lbnRzIGZyb20gZGlmZmVyZW50IGZhaXRocyBhbmQgZGVub21pbmF0aW9ucyByYW5kb21seSBmaXR0ZWQgdG9nZXRoZXIsIHdpdGggb3ZlcmFsbCBlbXBoYXNpcyBvbiB0aGUgd29yc2hpcCBvZiBmbGFncy4gCkhlIGNsb3NlcyBoaXMgZXllcyBmb3IganVzdCBhIGJyaWVmIG1pbnV0ZSB3aGVuIGhlIGhlYXJzIHRoZSBkb29yIGJlbGwgcmluZ2luZy4uIApDb2xsZWdlIGFzIGEgaG9iYnkgSSBzdGFydGVkIHdyaXRpbmcgYSBwb2tlciBib3QuIApVbmxlc3MgeW91IGxpdmUgb24gdGhlIHByZXR0eSBzaWRlIG9mIHRoZSBtb3VudGFpbi4gCk90aGVyIHBvaW50cyB0aGF0IGJvZGUgd2VsbCBhcmUgdGhlIHBvc3NpYmlsaXRpZXMgb2Ygb2ZmZXJpbmcgbWFueSBkaWZmZXJlbnQgdHlwZXMgb2Ygc2VydmljZXMsIHN1Y2ggYXMgaGVhdGVkIHN0b25lIG1hc3NhZ2UsIGRlZXAgdGlzc3VlIHRyZWF0bWVudHMsIGFuIGFzc29ydG1lbnQgb2YgZmFjaWFscyBhbmQgYm9keSBsb3Rpb25zIGFuZCBvaWxzLCBmb3JtcyBvZiBoeWRyYXRpb24gdGhlcmFwaWVzIGFuZCBhcm9tYXRoZXJhcHkuIFRoZSBhdG1vc3BoZXJlIGl0c2VsZiBpcyBhbiBleGNlbGxlbnQgb25lIGluIHdoaWNoIHRvIHdvcmsgYXMgd2VsbCBhcyBlbmpveSBhcyBhIGNsaWVudC4gQWNjb3JkaW5nIHRvIHRoZSBXYWxsIFN0cmVldCBKb3VybmFsLCBhIGRheSBzcGEgbWlnaHQganVzdCBiZSB0aGUgInVsdGltYXRlIGZlZWwgZ29vZCBidXNpbmVzcy4iLiAKUG9rZXIgaXMgYm9vbWluZy4gQW5kIG1hbnkgcGVvcGxlIHBsYXkgZnJlZSBwb2tlciBnYW1lcyBvbmxpbmUuIApUaGVzZSBzZWxmIHJlcG9ydGVkIG1lYXN1cmVzIHdlcmUgcmVpbmZvcmNlZCBieSBhIHNpbWlsYXIgbGluayBiZXR3ZWVuIGdyZWF0ZXIgYWN0aW5pYyBza2luIGRhbWFnZSBjYXVzZWQgYnkgc3VuIGV4cG9zdXJlIGFuZCBsb3dlciByaXNrIG9mIE1TIGluY2lkZW5jZSAoYWRqdXN0ZWQgUD0wLjAwNiBmb3IgdHJlbmQpLgpJdCBwb3NzaWJsZSB0byB3b3JrIHNvbWV0aGluZyBvdXQuIApJdCB3YXMgMzIgaGlnaCwgNjYgbG9uZywgYW5kIDEzMCB3aWRlLCBhbmQgd2FzIG1hZGUgdG8gc2VhdCAxMDAgYW5kIG1ha2UgYSB0cmFuc2F0bGFudGljIHZveWFnZS4gVGhpcyB3YXMgdGhlICJOb3ZpcGxhbm8iICh0aGUgQ2Fwcm9uaSBDYS4gNmMsIGFuZCB0cmFuc2xhdGVkIGluIHRoZSBhcnRpY2xlIGFzICJOaW5lIHBsYW5uZW4iKSwgYW5kIHByZXNlbnRlZCBpdHNlbGYgaW4gYW4gaW1wcmVzc2l2ZSBpZiBub3QgY29tcGxpY2F0ZWQgbWFubmVyIGl0IHdhcyBhIHByb3RvdHlwZSwgdGhvdWdoLCBhbmQgd2FzIGNyYXNoZWQgYW5kIGZpbmlzaGVkIG9uIGl0cyBzZWNvbmQgZmxpZ2h0Li4gClZpb2xlbmNlIGlzIHRoYXQgd2hpY2ggd2UgbW9kZXJucyBzdXBwb3NlZGx5IGRvIG5vdCBlbmdhZ2UgaW4uIApSaXNrIGlzIHRoZSBuYW1lIG9mIHRoZSBnYW1lLi4gCiJUaGUgZGlmZmVyZW5jZSBpcyB0aGF0IG91ciBjb3VuY2lsIGhhcyBubyBlbmZvcmNlbWVudCBTaGFja2VsZm9yZCBub3RlZC4gClllYWgsIGZvciB0aGlzIHJvdGF0aW9uIHNvbHV0aW9uIHRvIHdvcmsgeW91IGhhdmUgdGhlIFdDVyBwcm9ibGVtLiBXV0UgaGFzIHB1dCBhbGwgdGhlaXIgbWFya2V0aW5nIGludG8gYSBzZWxlY3QgZmV3IGd1eXMsIHNvIHdpdGhvdXQgdGhlbSB0aGV5IHdvbiBkcmF3LiBUaGV5IGhhdmUgdG8gYmFzaWNhbGx5IGFjY2VwdCBhIGxvc3MgZm9yIGEgcGVyaW9kIG9mIHRpbWUgd2hpbGUgdGhleSBidWlsZCBuZXcgc3RhcnMgZm9yIHdoZW4gdGhlaXIgbWFpbnMgYXJlIG9mZiBUVi4uIAoiVGhleSBhcmUgbGlrZSB3aGF0IHRoZSBFdXJvcGVhbnMgY2FsbCBwYXBhcmF6emksIiBoZSBzYXlzIG9mIHRoZSBwb3NzZSBvZiBwaG90b2dyYXBoZXJzIGFuZCB0ZWxldmlzaW9uIGNhbWVyYW1lbiB3aG8gaGF2ZSBiZWVuIGFtYnVzaGluZyBoZXIgaW4gdGhlIGZvcmVjb3VydC4gSSB1bmRlcnN0YW5kIHRoZSBmYXNjaW5hdGlvbiB3aXRoIExhbmUuIEZyb20gbXkgc2VhdCBhdCB0aGUgc2lkZSBvZiB0aGUgY291cnRyb29tLCBJIHN0YXJlIGF0IGhlciBmb3IgaG91cnMuIApFeGFjdGx5ISBTb21lb25lIGxvY2FsIHRvIG1lIHBvc3RlZCBvbiBGYWNlYm9vayB3aGluaW5nIGFib3V0IGEgZGlzaG9uZXN0IENhciBEZWFsZXIgd2hvIHJlZnVzZWQgdG8gZ2l2ZSBiYWNrIGhpcyBkZXBvc2l0IGFuZCBzb2xkIHNhaWQgdmVoaWNsZSB0byBhbm90aGVyIHB1cmNoYXNlci4gQXQgMXN0IEkgYmVsaWV2ZWQgaGltIGFuZCBzYWlkICJUYWtlIHRoZW0gdG8gU21hbGwgQ2xhaW1zIENvdXJ0LiIgVGhlbiBJIHNhdyBvdGhlciBldmlkZW5jZSwgYW5vdGhlciB1c2VyIHBvc3RlZCBhIHNuYXBzaG90IG9mIHRleHRzIGZyb20gdGhlIENhciBEZWFsZXIgc3RhdGluZyB0aGUgZ3V5IGRpZCBOT1QgZm9sbG93IHRocm91Z2ggd2l0aCBwcm9kdWNpbmcgcGF5IHN0dWJzIHByb3ZpbmcgaGlzIGluY29tZSB0byBzZWN1cmUgZmluYW5jaW5nIHNvIHRoZXkgc29sZCB0aGUgdmVoaWNsZSAoYWZ0ZXIgaG9sZGluZyBpdCBmb3IgYW4gdW5zcGVjaWZpZWQgYW1vdW50IG9mIHRpbWUpIGFuZCByZWZ1bmRlZCBoaW0gMS8yIHRoZSBkZXBvc2l0LiBUaGUgb3JpZ2luYWwgcG9zdGVyIHJlZnVzZWQgdG8gYW5zd2VyIDIgcXVlc3Rpb25zIGFib3V0IGhvdyBsb25nIHRoZSBEZWFsZXIgZGlkIGhvbGQgdGhlIGNhciB3YWl0aW5nIGZvciBoaW0gdG8gcHJvdmlkZSBwcm9vZiBvZiBpbmNvbWUuIEkgcG9zdGVkIGl0IHNvdW5kZWQgbGlrZSBoZSBicmVhY2hlZCB0aGUgdmVyYmFsIGNvbnRyYWN0IGJ5IG5vdCBwcm92aWRpbmcgcHJvb2Ygb2YgaW5jb21lIHRvIG1ha2UgZmluYW5jaW5nIGhhcHBlbiBhbmQgaGUgYmxvY2tlZCBtZSBmcm9tIGhpcyBwb3N0ISBIb3cgZGFyZSBJIHN0YXRlIGEgdmFsaWQgYXJndW1lbnQhIEFsbCBoZSB3YW50ZWQgd2FzIHBlb3BsZSB0byBiZSBvbiBoaXMgc2lkZS4KVGhlIGNvbW11bml0eSBvZiBhY2FkZW1pYyBwaGlsb3NvcGhlcnMgd2hvIHNwZWNpYWxpemUgaW4gc3VjaCBxdWVzdGlvbnMuIApMZSBHb3V2ZXJuZW1lbnQgYXNzdXJlIGxlIHRyYWl0ZW1lbnQgYXV4IHZxdWVzIGV0IGF1eCBjdXJzIChBcnRpY2xlIFhJVikuLiAKQm91bnRpZXMgZm9yIHBlb3BsZSB3aG8gZGVjaWRlIHRoZXkgd2FudCB0byBiZSBsaWtlIEJvYmEgRmV0dC4gR28gaW50byBzb21lIGJhciBvciBhcHByb3ByaWF0ZSBhcmVhLCBhbmQgdGhlcmUgYSBzY3JlZW4gdGhhdCBkaXNwbGF5cyBhIHBpY3R1cmUgb2YgYm90aCB1bmlxdWUsIGFuZCBkeW5hbWljIHByb2ZpbGVzIG9mIE5QQ3Mgd2hvIGFyZSB3YW50ZWQsIGFuZCB0aGVpciBwcmljZS4gWW91IGNhbiB3YWxrIHVwIGFuZCBhY2NlcHQgb3IgZGVjbGluZS4gV291bGQgYWxzbyBiZSBjb29sIGlmIGl0IHNob3dlZCB0aGVpciB0aHJlYXQgbGV2ZWwgd2hpY2ggd291bGQgZGV0ZXJtaW5lIGhvdyBkaWZmaWN1bHQgdGhleSBhcmUuIFdvdWxkIGJlIG5pY2UgdG8gYmUgYWJsZSB0byBicmluZyB0aGVtIGJhY2sgYWxpdmUgdG9vIGlmIHlvdSBjb3VsZC4gSSB0aGluayBjb21wdXRlciBzY3JlZW5zIGNvdWxkIGJlIGEgdXNlZnVsIHRvb2wgdGhhdCBhbHNvIHNlbnNpY2FsIGluIHVuaXZlcnNlIGZvciBkeW5hbWljIHF1ZXN0cy4gTm90IGxpbWl0ZWQgdG8gYm91bnRpZXMgZWl0aGVyLiAoMDA6MjAgb253YXJkcylCYXJlbHkgdHJhaW5lZCBMZWlhIGlzIHNob3Qgb3V0IGludG8gc3BhY2UgaW4gYSBsYXJnZSBleHBsb3Npb24sIGlzIHVuY29uc2Npb3VzIGFuZCBmbG9hdHMgYWxvbmcgd2l0aCB0aGUgUmFkZHVzIHdoaWxlIHRoZSBGTyBUSUUgZmlnaHRlcnMgbGVhdmUsIGFuZCB5ZXQgaXMgYWJsZSB0byByZWdhaW4gY29uc2Npb3VzbmVzcyBhZnRlciBzb21lIHRpbWUgYW5kIHVzZSB0aGUgZm9yY2UgdG8gcHVsbCBoZXJzZWxmIGJhY2sgdG8gdGhlIHNoaXAsIGV2ZW4gbWFuYWdpbmcgdG8gZG9kZ2UgdGhlIGV4cGxvc2lvbiBkZWJyaXMgYXJvdW5kIHRoZSBzaGlwLiAKQmVhdG9uIkJhc2ljYWxseSBtYXJyaWVkIiBpcyBob3cgYSBmcmllbmQgZGVzY3JpYmVkIGhlciByZWxhdGlvbnNoaXAgd2l0aCBoZXIgbGl2ZSBpbiBib3lmcmllbmQgb24gVmFsZW50aW5lJ3MgRGF5IGEgZmV3IHllYXJzIGFnby4gCk1lZGlhIHRyYWNraW5nIG9yIG1vbml0b3Jpbmcgb2YgU2Nvb3AgQ29udGVudCBpcyBleHByZXNzbHkgcHJvaGliaXRlZDogU2Nvb3AgZG9lcyBub3QgcGVybWl0IHVubGljZW5zZWQgcmVkaXN0cmlidXRpb24gb2YgU2Nvb3AgQ29udGVudCBieSBtZWRpYSBtb25pdG9yaW5nIG9yIHRyYWNraW5nIHNlcnZpY2VzLjQuMS4gQWxsIHVubGljZW5zZWQgaGFydmVzdGluZyBhbmQvb3IgcmVkaXN0cmlidXRpb24gb2YgU2Nvb3AgQ29udGVudCBieSBtZWRpYSB0cmFja2luZyBvciBtb25pdG9yaW5nIHNlcnZpY2VzLCB3aGV0aGVyIGF1dG9tYXRlZCwgY29tcHV0ZXJpc2VkIG9yIG1hbnVhbCwgaXMgZXhwcmVzc2x5IHByb2hpYml0ZWQuNC4yLiAKUHJhY3RpY2UuIFRoZSBzdHVkZW50cyB3aWxsIGdldCBiZXR0ZXIgYXQgdW5kZXJzdGFuZGluZyB0aGUgY29uY2VwdHMgaWYgdGhleSBhcmUgZ2l2ZW4gc2V2ZXJhbCBvcHBvcnR1bml0aWVzIHRvIHByYWN0aWNlIHRoZSBtYXRlcmlhbC4gClVubGVzcyB5b3UgbGl2ZSBvbiB0aGUgcHJldHR5IHNpZGUgb2YgdGhlIG1vdW50YWluLiAKUmV1YmVubWl0Y2hlbGw6UjogTW9kZWwgMyBSZXNlcnZlZApFcyBnYWIgMiBEaW5nZSwgd2VnZW4gZGVuZW4gaWNoIGZhc3Qgc2Nob24gc2F1ZXIgYXVmIE1vemlsbGEgd2FyOgpMZWQgYnkgR2VyYWxkIEJ1dHRmaWVsZCwgRGlyZWN0b3IsIEhTVywgdGhlIHBvcnRmb2xpbyBzdXBwb3J0cyBhbmQgbWFpbnRhaW5zIHRoZSBVbml2ZXJzaXR5J3MgSFNXIE1hbmFnZW1lbnQgRnJhbWV3b3JrIGFuZCBzdXBwb3J0cyB0aGUgSFIgQnJhbmNoIGluIHJlc3BlY3Qgb2YgSFIgYW5kIEhTVyByZWxhdGVkIHJpc2tzLCBsZWdpc2xhdGl2ZSBjb21wbGlhbmNlIGFuZCBpbnRlcm5hbC9leHRlcm5hbCBhdWRpdCBwcm9jZXNzZXMuIFRoZSBIU1cgcG9ydGZvbGlvIHByb3ZpZGVzIGNvcmUgc2VydmljZXMgc3VjaCBhcyB0aGUgbWFuYWdlbWVudCBvZiB0aGUgVW5pdmVyc2l0eSdzIHNlbGYgaW5zdXJhbmNlIGxpY2VuY2UsIHRoZSBmb3JtdWxhdGlvbiBvZiBzYWZldHkgYW5kIGluanVyeSBtYW5hZ2VtZW50IHBvbGljeSBhbmQgcHJvY2VkdXJlLCBhbmQgYXNzaXN0cyB3aXRoIHRoZSBmb3JtdWxhdGlvbiBvZiBzdHJhdGVnaWVzIGFuZCB0aGUgY28gb3JkaW5hdGlvbiBvZiByZXN1bHRhbnQgYWN0aXZpdGllcyB0byBlbmFibGUgdGhlIFVuaXZlcnNpdHkgdG8gbWFpbnRhaW4gYSBzYWZlIHdvcmtwbGFjZSBhbmQgY29tcGxpYW5jZSB3aXRoIHRoZSBSZXR1cm4gdG8gV29yayBTQSBDb2RlIG9mIENvbmR1Y3QgZm9yIFNlbGYgSW5zdXJhbmNlLiBUaGUgSFNXIHBvcnRmb2xpbyBhbHNvIHByb3ZpZGVzIGEgcmFuZ2Ugb2Ygc2hhcmVkIHNlcnZpY2VzIGluY2x1ZGluZyB0aGUgcHJvdmlzaW9uIG9mIEhTVyBhZHZpY2UgYW5kIGNhc2UgbWFuYWdlbWVudCBmb3Igd29ya2VycyBjb21wZW5zYXRpb24gY2xhaW1zLiAKQ29tY2FzdCBhbmQgQ2hhcnRlciBoYXZlIGJlZW4gcHJldHR5IG11Y2ggYmVnZ2luZyB0aGUgdG93biB0byBhbGxvdyB0aGVtIHRvIGxheSBjYWJsZSBsaW5lIHNvIHRoZXkgY291bGQgZ2V0IHRoZWlyIHNlcnZpY2UgdG8gdGhlIDEwMDAgb3Igc28gaG9tZXMgaW4gdGhlIHRvd24uIFdoZW4gdGhlIHRvd24gZGlkIGRlY2lkZSB0byBhcHByb3ZlIGl0IHRoZXkgcmVxdWVzdGVkIGFuIGFsbCBmaWJlciBuZXR3b3JrIGRpcmVjdCB0aGUgdGhlIHJlc2lkZW50cyBob21lcy4gQ2hhcnRlciBlbmRlZCB1cCBhZ3JlZWluZyB0byBsYXkgdGhlIG5ldHdvcmsgZm9yIG5leHQgdG8gbm90aGluZyBhbmQgYWdyZWVkIHRvIGEgcHJpY2UgY2FwIGZvciBzZXJ2aWNlIGZvciBhIDIwIHllYXIgcGVyaW9kLiBJIGhhdmUgZ2lnYWJpdCBzZXJ2aWNlIGZvciAkNDAgYSBtb250aC4KVGhleSBhcmUgYWxzbyB1c2VkIHRvIHBpY2sgdXAgYW5kIG1vdmUgYnVybmluZyBjb2FsIGFuZCBsb2dzIGlmIG1vcmUgcHJlY2lzaW9uIGlzIG5lZWRlZCB0aGFuIGEgcG9rZXIgd2lsbCBwcm92aWRlLiAKSSBkZWVwbHkgYXBwcmVjaWF0ZSB5b3VyIGRldGFpbGVkIHJlc3BvbnNlIGFuZCBjb25zaWRlcmF0aW9uLiAKVGhlbnlvdSBkZWNpZGUgaWYgeW91IHdvdWxkIHBsYXkgYXQgYSBnYW1lIGxpa2UgdGhhdC4gCkFnaW5nIGlzIG5vdCBhIGRpc2Vhc2UsIGl0IGlzIGEgcHJvZ3Jlc3NpdmUgYmlvbG9naWNhbCBjaGFuZ2UgYW5kIHRoZXJlIG1heSBiZSB2YXN0IGRpZmZlcmVuY2VzIGluIHRoZSBoZWFsdGggb2YgcGVvcGxlIHdobyBhcmUgYWdlZCA2NSBhbmQgb3Zlci4gT25lIG9sZGVyIHBhdGllbnQgbWF5IG5vdCBiZSBhYmxlIHRvIHRvbGVyYXRlIGEgbWVkaWNhbCB0cmVhdG1lbnQgYmVjYXVzZSBvZiBhY2N1bXVsYXRlZCBjb21vcmJpZGl0aWVzLCBidXQgYW5vdGhlciBvZiB0aGUgc2FtZSBhZ2Ugd2l0aG91dCBjb21vcmJpZGl0aWVzIG1heSBlYXNpbHkgZG8gc28uIApXaGVuZXZlciB5b3UgcGljayB1cCB0aGUgcGhvbmUsIHNlbmQgc29tZW9uZSBhbiBFIG1haWwvTGlua2VkSW4vRmFjZWJvb2sgbWVzc2FnZSB5b3UgaGF2ZSBhIGNoYW5jZSB0byBtYWtlIG1vbmV5LiBZb3UganVzdCBuZWVkIHRvIGtub3cgdGhlIG9kZHMuCkJlYXVjb3VwIGRlIENhbmFkaWVucyB1dGlsaXNlbnQgZGVzIG1kaWNhbWVudHMgdHJzIGRhbmdlcmV1eCwgbGEgY3Jpc2UgZGVzIG9waW9kZXMgZXN0IHVuIHByb2JsbWUgZGUgbG9uZ3VlIGRhdGUsIGV0IGwnYWxjb29saXNtZSBjYXVzZSBkZXMgcHJvYmxtZXMgZ3JhdmVzLiBMYSBtYXJpanVhbmEgZXN0IGxlIGNob2l4IGxlIHBsdXMgc2N1cml0YWlyZSwgbGFuY2UgdCBlbGxlLiBFbGxlIGRvbm5lIGNvbW1lIG1vZGxlIGxlcyBDb2ZmZWUgU2hvcCBkIGF1eCBQYXlzIEJhcywgY2VzIGNhZnMgbyBsZXMgY2xpZW50cyBwZXV2ZW50IGNvbnNvbW1lciBsaWJyZW1lbnQgZGUgbGEgbWFyaWp1YW5hLi4gCkkgaG9uZXN0bHkgdGhpbmsgdGhlIENhbGViL05vdHQgcmVsYXRpb25zaGlwIGlzIGZyYWN0dXJlZCBhdCB0aGlzIHBvaW50LCBJIG1lYW4gaG93IGRvIHlvdSBjb21lIGJhY2sgZnJvbSB3aGF0IE5vdHQgc2FpZCBzaGUgb2J2aW91c2x5IG1lYW50IGl0LiAKTXkgY29sbGVhZ3VlIFNjb3R0IEdvbGRzdGVpbiwgbm93IHdpdGggdGhlIG1heW9yJ3Mgb2ZmaWNlLCBnb3QgYSB0aXAgdGhhdCB0aGVyZSB3YXMgYSBkb21lc3RpYyB2aW9sZW5jZSBjYWxsIGF0IENhcmF3YXkncyBPYWsgQ2xpZmYgaG9tZS4gSSBjYWxsZWQgQ2FyYXdheSBmaXJzdCB0aGluZyB0aGF0IG1vcm5pbmcgYW5kIGFza2VkIGhpbSBhYm91dCBpdC4gClRoZXkgZG9uIGNhcmUgYWJvdXQgeW91IGFueXdheS4gQnV0IHdpdGggbm9ybWFsL2luIHRoZSBGT0cgcGVvcGxlLCBpdCBoZWxwcyB0byBtYWtlIHRoZSBub3QgZ2V0IG9uIHRoZSBkZWZlbnNpdmUgYW5kIGRpZyB0aGVpciBoZWVscyBpbiwgYmVjYXVzZSB5b3UgZG9uIHNvdW5kIGFjY3VzYXRvcnkuUGVyaWR3ZW4gIDEyIHBvaW50cyAgc3VibWl0dGVkIDggZGF5cyBhZ29JIGxvc3QgNDBsYnMgYW5kIG51bWVyb3VzIGpvaW50IHByb2JsZW1zIGJ5IGNoYW5naW5nIHRvIGEgS2V0byBsaWZlc3R5bGUsIGFuZCBrZXB0IGl0IG9mZiBmb3Igb3ZlciBhIHllYXIuIChTbWFsbCB0aW1lbGluZSBhdCB0aGUgbW9tZW50LCBidXQgc2luY2UgdGhlIGxvbmdlc3QgSSBldmVyIHN1c3RhaW5lZCBhbnkgd2VpZ2h0IGxvc3MgcHJldmlvdXNseSB3YXMgYWJvdXQgYSBtb250aCwgdGhhdCBhd2Vzb21lIGZvciBtZS4pIEJhY29uIGlzIGtldG8gICBidXQgaXQgYSBzbWFsbCBwYXJ0IG9mIGEgd2hvbGUgZGlldCBjaGFuZ2UuIApUaGUgV29ybGR3aWRlIExlYWRlciBpdHNlbGYgZGlkIG5vdCBhcHBlYXIgdG8gdHJ1c3QgU2NoZWZ0ZXIgcmVwb3J0LCBhcyB0aGUgdGlkYml0IHdhcyBub3QgaW5jbHVkZWQgaW4gRVNQTiBvbmxpbmUgbmV3cyBzdG9yeSBvciBtZW50aW9uZWQgYWdhaW4gb24gSm9obiBIYXZlbnMsIHdobyB3YXMgc2Vjb25kIGluIGNvbW1hbmQgYXQgQ2l0aWdyb3VwLCBhIGJpZyBuYW1lPyIgU2NoZWZ0ZXIgc2FpZC4gCldlIGtuZXcgd2Ugd2FudGVkIHRvIGdldCBtYXJyaWVkIGFmdGVyIDMgbW9udGhzLiAKWW91IGRvbiBoYXZlIHRvIHRpcCwgYW5kIGl0IGRvZXNuIHNjcmV3IHlvdXIgc2VydmVyIG91dCBvZiBtaW5pbXVtIHdhZ2UgcGF5LkRvbiBiZWxpZXZlIG1lPyBGcm9tIHRoZSBkZXBhcnRtZW50IG9mIGxhYm9yLCB3aGVyZSBhbiBlbXBsb3llZSBkb2VzIG5vdCByZWNlaXZlIHN1ZmZpY2llbnQgdGlwcyB0byBtYWtlIHVwIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGRpcmVjdCAob3IgY2FzaCkgd2FnZSBwYXltZW50ICh3aGljaCBtdXN0IGJlIGF0IGxlYXN0ICQyLjEzIHBlciBob3VyKSBhbmQgdGhlIG1pbmltdW0gd2FnZSwgdGhlIGVtcGxveWVyIG11c3QgbWFrZSB1cCB0aGUgZGlmZmVyZW5jZS5JbmI0ICJ0aGV5IHdvcmsgdG9vIGhhcmQgZm9yIG1pbmltdW0gd2FnZSEhIlJpY28xMDkgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvSSBzaG93ZWQgeW91IHRvbnMgYW5kIHRvbnMgb2YgcGVvcGxlIHdpdGggb3ZlciA4MCUgd2luIHJhdGUuIERvbiBtb3ZlIHRoZSBnb2FscG9zdHMuIFRha2UgdGhlIEwgd2l0aCBzb21lIGRpZ25pdHkuUmVnYXJkbGVzcywgc3VnZ2VzdGluZyB0aGF0IHdpbm5pbmcgNjkgb3V0IG9mIDg2IGdhbWVzIGlzIGx1Y2sgaXMgcmV0YXJkZWQuIApTbywgZXZlbiB0aG91Z2ggYSBkb2cgd2l0aCByYWJpZXMgaGFzIGl0cyBiZWhhdmlvciB0YW1wZXJlZCB3aXRoIGJ5IHRoZSB2aXJ1cywgdGhlIGRpc2Vhc2UgaXRzZWxmIGlzIGFsd2F5cyBqdXN0IGJhcmVseSBzdGF5aW5nIGFmbG9hdCB3aXRoaW4gYSBjb21tdW5pdHkgICBiZWNhdXNlIGZvciBldmVyeSBhbmltYWwgdGhhdCBnZXRzIGl0LCBpdCdzIHByb2JhYmx5IG9ubHkgZ29pbmcgdG8gbWFuYWdlIHRvIGluZmVjdCBvbmUgb3RoZXIgYW5pbWFsIGJlZm9yZSB0aGUgaG9zdCBkaWVzLiBJbiBXZXN0IEFmcmljYSwgRWJvbGEsIGZvciBhbGwgaXRzIHZpcnVsZW5jZSwgb25seSBzdWNjZWVkcyBpbiBpbmZlY3RpbmcgMS41IG1vcmUgcGVvcGxlIGZvciBldmVyeSBwZXJzb24gd2hvIGNvbWVzIGRvd24gd2l0aCBpdC4gT24gdGhlIG90aGVyIGhhbmQsIGZvciBldmVyeSBwZXJzb24gd2hvIGdldHMgdGhlIG1lYXNsZXMgdmlydXMsIDE1IG90aGVycyBjb3VsZCBiZSBpbmZlY3RlZCBiZWZvcmUgdGhlIGZpcnN0IHBlcnNvbiBnZXRzIGJldHRlciBvciBkaWVzLiBJdCBzZWVtcyBtZWFzbGVzIGlzIGRvaW5nIE9LIHdpdGhvdXQgaGF2aW5nIHRvIGtpbGwgeW91IHJpZ2h0IGF3YXksIG9yIHBhc3NpdmVseSBldm9sdmluZyBhIHN0cmF0ZWd5IGZvciBnZXR0aW5nIHlvdSBjbG9zZXIgdG8gb3RoZXIgcG90ZW50aWFsIGhvc3RzLgpPbmxpbmUgcG9rZXIgY2FuIGJlIHN1c3RhaW5lZCBzaW1wbHkgYmVjYXVzZSBmaXNoIGxvc2UgbW9uZXkgdG9vIHF1aWNrbHkgd2hlbiB0aGUgc2tpbGwgZGlzcGFyaXR5IGlzIHNvIGdyZWF0LCBlc3BlY2lhbGx5IGF0IGhpZ2hlciBsaW1pdHMuIE5ldHdvcmtzIGhhdmUgdG8gZXNzZW50aWFsbHkgbWFrZSBpdCBpbXBvc3NpYmxlIGZvciBwcm9mZXNzaW9uYWxzIHRvIG1ha2UgbW9uZXkgaW4gb3JkZXIgdG8ga2VlcCB0aGVpciBidXNpbmVzcyBhbGl2ZS4gVGhlIGxvbmdlciB0aGF0IHBlb3BsZSBjYW4gcGxheSBhbmQgdGhlIG1vcmUgdmFyaWFuY2UgdGhlIG5ldHdvcmsgY2FuIGludHJvZHVjZSBpbnRvIHRoZSBnYW1lLCB0aGUgbG9uZ2VyIHRoZSBuZXR3b3JrIGNhbiBjb2xsZWN0IHJha2UuIApJZiB5b3Ugd2FudCB5b3VyIGJlc3QgY2hhbmNlIG9mIHdpbm5pbmcgbW9uZXksIHBsYXkgcG9rZXIuIApJZiB5b3UgaGF2ZW4gZXhwZXJpZW5jZWQgaXQgYWxyZWFkeSwgVGFpIENoaSBjYW4gYW5kIHdpbGwgbWFrZSB5b3UgcGh5c2ljYWxseSBleHRyZW1lbHkgcG93ZXJmdWwuIApQZXJoYXBzIGV2ZW4gaGF2aW5nIGl0IGxvb2tlZCBhdCBieSBhIHByb2Zlc3Npb25hbC4gCkNlbGEgcmFmcmFpY2hpciBsZSBjdWwgZGUgdG91cyBzZXMgZXhjaXRzIGRlIHNleGUgcGFyIHRyb3AgaW5kdGVybWluIGV0IHBlcnNvbm5lIG5lIHMnZW4gb2ZmdXNxdWVyYSAhIElsIHNlcmFpdCBzb3VoYWl0ZSBxdSdlbGxlIHNlIGNvbmNlbnRyYSBzdXIgbCdhdmFudWUgamVhbiBNZGVjaW4sIGxhIHBsYWNlIE1hc3NuYSBldCBsYSBjbGJyZSBwcm9tZW5hZGUuUHJvY3MgRFNLLCBhZmZhaXJlIGR1IENhcmx0b24sIGMnZXN0IGxhICJkYmFuZGFsZSIgIUFwcnMgcXVlIGxlIHByc2lkZW50IGV0IGxlIHByb2N1cmV1ciBhaWVudCAicmVjYWRycyIgbGVzIGRiYXRzIGF1dG91ciBkdSBidXQgaW5pdGlhbCBkdSBwcm9jcywgbGUgcHJveG50aXNtZSBhZ2dyYXYgKGRvbnQgbGEgZGZpbml0aW9uIGV4YWN0ZSBtJ2NoYXBwZSwgamUgbGUgY29uZmVzc2UgZW4gdG91dGUgaHVtaWxpdC4pIGV0IG5vbiBwYXMgbGUgcHJvY3MgZGUgbCdhZHVsdHJlIChzb2RvbWl0aXF1ZSBlbiBwYXJ0aWN1bGlyZXIpIGNlcnRhaW5lcyAicGFydGllcyIgb250IGNvbXByaXMgcXUnZWxsZXMgcmlzcXVhaWVudCBkZXMgZG9tbWFnZXMgZXQgaW50cnRzIGVuIHZlcnR1IGRlcyBwb3NzaWJsZSByZXRvdXIgZGUgYnRvbiBsaXMgIGxhIG5hdHVyZSBkZSBsYSBwcm9jZHVyZSBhY2N1c2F0b2lyZSBxdWkgc2llZCAgbGEgbWF0aXJlIGNpdmlsZS4gClknYWxsIG9uIGZ1Y2tpbmcgY3JhY2suIEkgZ2V0IGhvbGRpbmcgdGhlbSB0byBhIGhpZ2ggc3RhbmRhcmQuIApFZGl0OiBGV0lXIEkgcGx1Z2dlZCBpdCBpbnRvIGEgc29sdmVyIGFuZCB0aGlzIGlzIHdoYXQgaXQgc3VnZ2VzdGVkLiBISiAxMDAgQkIgZGVlcC4gClRpcCAxOiBOZXZlciB0cnVzdCBhIHN0cmlwIG1hbGwKTGVhcm5pbmcgaG93IHRvIHBsYXkgd2VsbCBpcyBub3cgZWFzaWVyIHRoYW4gZXZlci4gVGhlcmUgaXMgc28gbXVjaCBpbmZvcm1hdGlvbiBpbiB0aGUgcHVibGljIGRvbWFpbiBpdCBub3QgaGFyZCB0byBnZXQgdXAgdG8gc3BlZWQgYnV0IGJlY2F1c2UgdGhlcmUgYXJlIHdheSBsZXNzIHNvZnQgc3BvdHMsIGl0IHB1dHMgd2F5IG1vcmUgcHJlc3N1cmUgb24gbWVudGFsIGdhbWUvZGlzY2lwbGluZSBldGMuClRvdWNoIGFsc28gaGFzIGEgcG9zaXRpdmUgZWZmZWN0IG9uIGNhcmVnaXZlcnMuIFNpbmNlIHRoZW4sIG1hbnkgc3R1ZGllcyBoYXZlIGlsbHVzdHJhdGVkIGhvdyB0b3VjaCBhbmQgbWFzc2FnZSBjYW4gYXNzaXN0IGluZmFudHMsIGVzcGVjaWFsbHkgYmFiaWVzIGJvcm4gcHJlbWF0dXJlbHksIHRvIHN1cnZpdmUsIGdhaW4gd2VpZ2h0IGFuZCB0aHJpdmUuIApTbG93YWtpamUgMjAxMwpJdCBoYXMgc3RhcnRlZCB0byBsb29rIHJlYWxseSBvYnZpb3VzbHkgZmFrZSBhbmQgSSBmZWVsIGxpa2Ugc2hlIGNhbiBzZWUgd2hhdCBvdGhlcnMgc2VlLiBUaGF0IHdvdWxkIGJlIG15IGZlYXIgYXMgd2VsbC5qZ3NqZ3M1ICA1IHBvaW50cyAgc3VibWl0dGVkIDIyIGRheXMgYWdvTXkgbW9tIHN0YXJ0ZWQgZ2V0dGluZyB2ZXJ5IHNtYWxsIGFtb3VudHMgb2YgQm90b3ggaW4gaGVyIGVhcmx5IDMwcyBmb3IgbWlncmFpbmVzIGFuZCBzaGUgaW4gaGVyIG1pZCA1MHMgbm93IGFuZCBsb29rcyBmYW50YXN0aWMuIApJdCB3YXMgYSBmdWNraW5nIGpva2UuIFNvIHJ1ZGUgYW5kIGRpc3Jlc3BlY3RmdWwuCklsIGEgYXNzaXN0IGRpeCBzZXB0IGZvaXMgIGxhIHJ1aW5lIGRlIEpydXNhbGVtLCBldCByaWVuIG5lIHBldXQgbGUgZGNvdXJhZ2VyOyByaWVuIG5lIHBldXQgbCdlbXBjaGVyIGRlIHRvdXJuZXIgc2VzIHJlZ2FyZHMgdmVycyBTaW9uLi4gCkxhIHBvbGljZSB0ZW50ZSBkZSByZ2xlciBsJ2FmZmFpcmUgY2FsbWVtZW50LiBFbGxlIGluc2NyaXQgdW5lIG1haW4gY291cmFudGUgZGUgY2V0dGUgYWZmYWlyZSBlbiByYXNzdXJhbnQgbGEgbWFtYW4uIFVuIG9mZmljaWVyIGluZGlxdWUgYXUgamV1bmUgaG9tbWUgZGUgbmUgcGx1cyB2b2lyIGxhIGZpbGxlLCBxdSdpbCBwZXV0IHRyZSBwb3Vyc3VpdmkgcG91ciBkdG91cm5lbWVudCBkZSBtaW5ldXJzLiAKSSBlYXQgZXZlcnkgMiB0byAzIGhvdXJzLCBnb2luZyA4IHdvdWxkIGJlIHRvcnR1cmUuIEkgd291bGQgYmUgcGh5c2ljYWxseSBzaWNrIGFuZCBkaXp6eS4gCkJhc2ljYWxseSBmb3IgbW9zdCBvZiB0aGVtIHBsYXlpbmcgYmFsbCBpcyB0aGUgZWFzaWVzdCB3YXkgdG8gZ2V0IGhvbWUgcXVpY2tseSBhbmQgd2l0aG91dCByaXNraW5nIHRoZWlyIGxpdmVzIHRvbyBtdWNoLi4gCkJpYXQga2x0ciwgb3Rvcml0ZXllIHRhcG1hIGFydGsgZGFtYXJsYXJuemEga2FkYXIgaWxlbWkuIApJZiBkZXNpcmVkLCBtZW1vcmlhbCBkb25hdGlvbnMgY2FuIGJlIG1hZGUgdG8gdGhlIE1lbGFub21hIE5ldHdvcmsgb2YgQ2FuYWRhIG9yIHRoZSBBdXRvaW1tdW5lIERpc2Vhc2UgRm91bmRhdGlvbiBvZiBDYW5hZGEuIEkgd2lsbCBhbHdheXMgbG92ZSBob3cgcHJlY2lvdXMgb3VyIG1vbWVudHMgdG9nZXRoZXIgYW5kIHdpbGwgYWx3YXlzIHJlZ3JldCBub3Qgc2VlaW5nIGhpbSBvbmUgbGFzdCB0aW1lIHRvIHRlbGwgaGltIGhvdyBtdWNoIEkgbG92ZWQgaGltLiBJIGNvdWxkIHRlbGwgb3IgYXNrIGhpbSBhbnl0aGluZy4gCiJBcyBhIGxpZmVsb25nIEVzc2VuZG9uIHN1cHBvcnRlciwgSSBiZSBidXlpbmcgYSBOb3J0aCBNZWxib3VybmUgbWVtYmVyc2hpcCBpbiAyMDE4IGlmIG15IGNsdWIgaGFzbiBjb21taXR0ZWQgdG8gZXhpdCB0aGUgcG9raWVzIGJ5IHRoZSBiZWdpbm5pbmcgb2YgbmV4dCBzZWFzb24uIiBOZWlsIE11cnJheSwgb2YgQ29tbXVuaXR5IENsdWJzIFZpY3RvcmlhLCBzYWlkIHRoZSBnYW1ibGluZyBleHBlbmRpdHVyZSBhdCBBRkwgY2x1YnMgdmVudWVzIHdhcyAicHJvdmlkZWQgd2lsbGluZ2x5IGJ5IGN1c3RvbWVycyB3aG8gZ28gdGhlcmUgZm9yIHRoZWlyIG93biBlbnRlcnRhaW5tZW50IHB1cnBvc2VzIiwgYW5kIHdhcyBpbnZlc3RlZCBiYWNrIGludG8gdGhlaXIgY2x1YnMuIApJJ20gbm90IHVzZWQgdG8gYmVpbmcgZGlzbGlrZWQgIGFuZCBJJ3ZlIHRyaWVkIHNvIGhhcmQgdG8gd2luIExlc2xpZSdzIGZyaWVuZHNoaXAuIi4gCkkgdW5kZXJzdGFuZCB5b3VyIGZydXN0cmF0aW9uIGFuZCBkaXNsaWtlLCB0aGF0IHlvdXIgcmlnaHQgYXMgYSBtYXR0ZXIgb2YgcGVyc29uYWwgdGFzdGUuIEkgd291bGQganVzdCBsaWtlIHRvIHBvaW50IG91dCB0aGF0IElSTCwgdGhlcmUgYXJlIG1hbnkgbWlzbGVhZGluZywgaW5jb3JyZWN0LCBvdmVyIGVtcGhhc2l6ZWQgZmFjdHMgb3IgZGlzY292ZXJpZXMgdGhhdCBkaXN0cmFjdCBwb2xpY2UgaW52ZXN0aWdhdGlvbnMuIFRoZSBiZXN0IGRldGVjdGl2ZXMgYXJlbiB0aGUgb25lcyB3aG8gY2FuIGZpbmQgYWxsIHRoZSBwaWVjZXMgb2YgZXZpZGVuY2UsIG9yIG5lY2Vzc2FyaWx5IHRpZSB0aGVtIHRvZ2V0aGVyLCBidXQgdGhlIG9uZSB3aG8gY2FuIGRpc2Nlcm4gd2hpY2ggb25lcyBtYXR0ZXIsIGFuZCB3aGljaCBvbmVzIGFyZSBjb2luY2lkZW50YWwuCkthdGUgaGFzIG5vIFRGU0EgYnV0IHRoZXkgY291bGQgZWFzaWx5IGFsbG9jYXRlICQ1MDAgcGVyIG1vbnRoIGZyb20gZXhpc3RpbmcgaW5jb21lIHRvIGhlciBURlNBLiAkNiwwMDAgaW4gYW5udWFsIGNvbnRyaWJ1dGlvbnMgaW5jcmVhc2luZyBhdCB0aHJlZSBwZXIgY2VudCBhZnRlciBpbmZsYXRpb24gd291bGQgZ3JvdyB0byAkMTQwLDQ4NiBhdCBoZXIgYWdlIDU1LCBhIHN1bSB0aGF0IHdvdWxkIHN1cHBvcnQgJDUsNzU0IGFubnVhbCBwYXlvdXRzIGZvciB0aGUgbmV4dCA0MCB5ZWFycy4uIApBbm90aGVyIGZvdW5kIHRoYXQgV2hvbGUgQm9keSBWaWJyYXRpb24sIGNvbWJpbmVkIHdpdGggZXhlcmNpc2UsIGFwcGVhcmVkIHRvIGltcHJvdmUgZ2x5Y2VtaWMgbGV2ZWxzIGZvciBwZW9wbGUgd2l0aCB0eXBlIHR3byBkaWFiZXRlcy4gQW5vdGhlciBzdHVkeSBvbiB0eXBlIHR3byBkaWFiZXRlcyBsYXN0IHllYXIgZm91bmQgdGhhdCAiZGFpbHksIHNob3J0IGR1cmF0aW9uIiBXaG9sZSBCb2R5IFZpYnJhdGlvbiBtYXkgaW1wcm92ZSBnbHljZW1pYyBjb250cm9sIGFuZCByZWR1Y2UgaW5mbGFtbWF0aW9uLgpJdCBvbiBZb3VUdWJlLCBidXQgdGhlcmUgYXJlIG5vIHN1YnRpdGxlcywgc28geW91IGhhdmUgdG8gdW5kZXJzdGFuZCBDaGluZXNlLiBCZWNhdXNlIGl0IG5vdCBzb21lIGlkb2wgcm9tYW5jZSBkcmFtYSB3aXRoIGFtYXRldXIgd3JpdGluZyBhbmQganV2ZW5pbGUgYWN0aW5nLCBzbyBvYnZpb3VzbHkgaXQgZG9lc24gYXBwZWFsIHRvIHRoZSB5b3VuZ2VyIGFuZCBpbnRlcm5hdGlvbmFsIGRlbW9ncmFwaGljLCBhbmQgdGhleSB3b24gYm90aGVyIHN1YmJpbmcgaXQuCkl0IGtpbmRhIG9kZCBob3cgb3ZlciB0aGUgbGFzdCB0d28gZ2VuZXJhdGlvbnMgb3Igc28gd2UgYmVjb21lIGV4dHJlbWVseSBpc29sYXRlZCBjb21wYXJlZCB0byBob3cgdGhpbmdzIHVzZWQgdG8gYmUuLiAKQW5kIG1vc3QgcGVvcGxlIHRoaW5rIG9mIHBpenphIGFzIGJlaW5nIE5lYXBvbGl0YW4gYmVjYXVzZSBvZiBpdHMgZGVlcCBvcmlnaW5zIHRoZXJlLCB3aGlsZSB0aGUgYWN0dWFsIGludGVybmF0aW9uYWwgc3R5bGUgaXNuJ3QgZXZlbiBjbG9zZSB0byB3aGF0IGRlZmluZXMgZXZlbiB0aGUgY29udGVtcG9yYXJ5IHBpenphIHRoZXJlLgpUaGUgSm9uYXMgQnJvdGhlcnMgd2lsbCBqb2luIEphbWVzIENvcmRlbiBmb3IgYSB3ZWVrIGxvbmcgdGFrZW92ZXIgb24gVGhlIExhdGUgTGF0ZSBTaG93IHN0YXJ0aW5nIE1vbmRheSwgTWFyY2ggNCB0aHJvdWdoIFRodXJzZGF5LCBNYXJjaCA3ICgxMjozNyAxOjM3IEFNLCBFVC9QVCksIG9ubHkgb24gQ0JTLiBUaGUgYnJvdGhlcnMgd2lsbCBhY2NvbXBhbnkgQ29yZGVuIG9uIE1vbmRheSBmb3IgYW4gZXhjbHVzaXZlIGNoYXQgb24gdGhlIGNvdWNoLCB0ZWxsaW5nIHRoZSBmdWxsIHN0b3J5IGJlaGluZCB0aGVpciByZXVuaW9uIHllYXJzIGluIHRoZSBtYWtpbmcuIApXaGF0IHNpemUgYmF0dGVyeSBiYW5rIGFyZSB5b3UgdXNpbmc/IEkgY291bGQgdHlwaWNhbGx5IGdldCA2IG9yIDcgZGF5cyBpZiBJIHN0YXJ0ZWQgd2l0aCBteSBwaG9uZSBhbmQgMTAwMDAgbUFoIGJhdHRlcnkgZnVsbHkgY2hhcmdlZCwgYW5kIGl0IG9ubHkgd2VpZ2hzIDUgb3IgNiBvei4gCldoYXQgZG9lcyBhIFRleGFzIEhvbGRlbSBQb2tlciBUYWJsZSBGZWx0IExheW91dCBkbyBmb3IgeW91PyBGaXJzdCBvZiBhbGwsIGl0IHJlcGxpY2F0ZXMgdGhlIGV4YWN0IGxheW91dCB0aGF0IHlvdSdsbCBzZWUgb24gVFYuIEluc3RlYWQgb2YganVzdCBoYXZpbmcgYSBzaW1wbGUgZ2FtZSB0YWJsZSB0byB0cnkgYW5kIHBsYXkgb24sIHRoZSBUZXhhcyBIb2xkZW0gUG9rZXIgVGFibGUgRmVsdCBMYXlvdXQgd2lsbCBoZWxwIGd1aWRlIHlvdS4gWW91J2xsIGtub3cgZXhhY3RseSB3aGVyZSB0byBwbGFjZSB0aGUgY2FyZHMgYW5kIHRoZSBjaGlwcyBhbmQgeW91IHdpbGwgYmUgcGxheWluZyBsaWtlIGEgcHJvIGluIG5vIHRpbWUuCiJTbyB0aGF0J3Mgd2h5IEkgd2FzIGxpbWl0ZWQsIGJ1dCB0aGUgcmVzdWx0cyBoYXZlIGJlZW4gdGhvc2Ugc2xvd2VyIHNvbmdzLCB0aG9zZSBzbGlnaHRseSBtb3JlIG1lbGFuY2hvbGljIHNvbmdzLiAKWWVhaCBpdCdzIHByb2JhYmx5IGJlZW4gYXJvdW5kIGZvcmV2ZXIgYnV0IHRoYXQgZG9lc24ndCBtZWFuIGxlYXJuaW5nIGhvdyB0byBjb21tdW5pY2F0ZSBpc24ndCBlc3NlbnRpYWwgYW5kIGJldHRlciBmb3IgZXZlcnlvbmUgaW4gdGhlIGxvbmcgcnVuLkJ1dCB5ZWFoLCBJIG5vdyB0aGluayB3ZSBib3RoIHN1ZmZlciBmcm9tIENvbmZpcm1hdGlvbiBCaWFzLiBCZWNhdXNlIEkgYW0gbm90IGx5aW5nIHdoZW4gSSBzYXksIEkgaGF2ZSBuZXZlciBzZWVuIGl0IGRvbmUvaGVhcmQgb2YgaXQgZG9uZSBieSBhbnlvbmUgSSBrbm93L2ludGVyYWN0IHdpdGgvd29yayB3aXRoLlRoZSB3b3JzdCBvbmUgSSBoYWQgd2FzIGEgYnVkZHkgd2hvIGR1bXBlZCBhIGxhZHkgdmlhIHRleHQuIFRoYXQgd2FzIGEgYnVsbHNoaXQgbW92ZSBhbmQgSSBsZXQgaGltIGtub3cgaXQuQnV0IHllYWgsIHlvdSBhcmUgc3Vycm91bmRlZCBieSB0cmFzaCBhbmQgdGhhdCBtdXN0IGZ1Y2tpbmcgc3VjayBhIGdpYW50IGJhZyBvZiBkaWNrcyBkdWRlLkdvb2Qgb24geW91IGZvciBrZWVwaW5nIHlvdXIgaGVhZCBvbiBzdHJhaWdodCBiZWluZyBzdXJyb3VuZGVkIGJ5IHBlb3BsZSB0aGF0IGRvIHRoYXQga2luZCBvZiBidWxsc2hpdC5Zb3Ugd2lsbCBkbyB3ZWxsIGluIHRoaXMgd29ybGQuSSBoYXZlIGV2ZXJ5IG90aGVyIGZ1bGwgd2VlayBhbmQgd2lsbCBtYWtlIGRhbW4gc3VyZSBoZSBrbm93cyBoZSBpcyBsb3ZlZC4gCkFjY29yZGluZyB0byBDb2xvbWJpYW4gUHJlc2lkZW50IEp1YW4gTWFudWVsIFNhbnRvcywgNDAgRkFSQyBtZW1iZXJzIGhhdmUgYmVlbiBraWxsZWQgc2luY2UgdGhlIHBlYWNlIGFjY29yZCB3YXMgc2lnbmVkIGludG8gbGF3ICAgc2l4IGluIHRoZSBub3J0aGVybiByZWdpb24gb2YgQW50aW9xdWlhIG5lYXIgSXR1YW5nby4gCkkgd2FzIG1pcyBkaWFnbm9zZWQgd2l0aCBhY2hpbGxlcyB0ZW5kaW5pdGlzIGxhdGVyIGkgZm91bmQgaSBoYWQgcGxhbmF0YXIgZmFjaXRpcyhzcGVsbGluZykgaWYgeW91IGhhdmUgaXQgYmFkIGl0IHdpbGwgbW92ZSBmcm9tIHlvdXIgZm9vdCB0byB5b3VyIGhlZWwgdG8geW91ciBhY2hpbGxlcyBldmVuIHVwIHlvdXIgY2FsZi4KVGhhdCBvZGQhIEkgaG9uZXN0bHkgd291bGRuIGJlIHRvbyB3b3JyaWVkIGFib3V0IGl0LiBEb2dzIGhhdmUgdGhlaXIgb2ZmIGRheXMgdG9vIGp1c3QgbGlrZSB1cy4gV2Ugc25hcCBhbmQgZ2V0IHNuaXBweSB3aXRoIG91ciBzcG91c2VzIChvciBhdCBsZWFzdCBJIGRvLCBoZWxsbyBQTVMpIGFuZCBkb2dzIHdpbGwgZG8gdGhlIHNhbWUgdGhpbmcgYnV0IGluIHRoZSBmb3JtIG9mIGEgdm9jYWwgZ3J1bWJsZSBvciBncm93bCBhbmQgd29yc3QgY2FzZSBhIG5pcC4gLgpUd28gZWFybGllciBoaXN0b3JpZXMgb2YgT3RhZ28gVW5pdmVyc2l0eSBoYXZlIGJlZW4gcHJvZHVjZWQsIG1hcmtpbmcgaXRzIDUwdGhhbmQgMTAwdGhhbm5pdmVyc2FyaWVzLiBCdXQgdGhlIG51bWJlciBvZiBzdHVkZW50cyBoYXMgcXVhZHJ1cGxlZCBzaW5jZSB0aGUgY2VudGVuYXJ5IGhpc3RvcnksIGFuZCB0aGUgdW5pdmVyc2l0eSBpcyBub3cgYSBkaWZmZXJlbnQgYW5kIG11Y2ggYnVzaWVyIHBsYWNlLiAKT24gdGhlIG90aGVyIGhhbmQsIGEgbG93ICh0aWdodCkgVlBJUCByYXRpbmcgd2l0aCBvZmZlciB1cCBhbXBsZSBvcHBvcnR1bml0eSB0byB0YWtlIGRvd24gYSBsb3Qgb2Ygc21hbGwgcG90cyB3aGlsZSBidWlsZGluZyBhbiBhZ2dyZXNzaXZlIGltYWdlIGZvciB5b3Vyc2VsZi4uIApUYXJnZXQgdGhlIGN1c3RvbWVycyB3aG8gYXJlIGFjdHVhbGx5IGludGVyZXN0ZWQgaW4geW91ciBzZXJ2aWNlcy4gV2UgaGVscCB5b3UgdG8gcmVhY2ggeW91ciB0YXJnZXQgYXVkaWVuY2UuIFdoeSBTaG91bGQgWW91IENob29zZSBpYmFja3BhZ2U/IFRoaXMgcGFnZSBzaG93cyBob3cgbWFueSBnaXJscyBhcmUgYWN0dWFsbHkgb3V0IHRoZXJlIGF2YWlsYWJsZSB0byB5b3UuIApTdHJhdGVnaWMgaW50ZWxsaWdlbmNlIGlzIHdoYXQncyBuZWVkZWQgdG8gb3V0c21hcnQgYSBjdW5uaW5nIHJpdmFsLiBUbyB1bmRlcnN0YW5kIHRoZSBkaWZmZXJlbmNlLCBjb25zaWRlciB3aGF0IGl0IHRha2VzIHRvIHByZWRpY3QgdGhlIHN0b2NrIG1hcmtldCBwZXJmb3JtYW5jZSB2cy4gR3Vlc3NpbmcgdGhlIGhhbmQgb2YgYSByaXZhbCBwb2tlciBwbGF5ZXIuIApPbmUgY291bGQgc2F5IHRoYXQgdGhlIHRocmVlIENvbW1pc3Npb25zIGluIEJydXNzZWxzIChGcmVuY2ggKENPQ09GKSwgRHV0Y2ggYW5kIHRoZSBDb21tb24gQ29tbXVuaXR5IENvbW1pc3Npb24gKENPQ09NKSBhcmUgYWxzbyB0aHJlZSBnb3Zlcm5tZW50cyBidXQgbGV0IGtlZXAgaXQgZWFzeS4KTWFueSBvZiB0aGUgYm95cyBpbmZsdWVuY2VkIHRocm91Z2ggdGhlIHllYXJzIGJ5IFJlc2NoIGFyZSBub3cgbWVuLCBsaWtlIE1pY2hhZWwgR3VpaGVlbiwgb25lIG9mIHRoZSBmaXJzdCB0byBiZWNvbWUgYW4gRWFnbGUgU2NvdXQgdW5kZXIgUmVzY2gncyBsZWFkZXJzaGlwLCBhbG1vc3QgMzAgeWVhcnMgYWdvLiAiSSBsZWFybmVkIGEgbG90IGFib3V0IHRoZSBTY291dHMgYW5kIGFib3V0IGxlYWRlcnNoaXAgdGhyb3VnaCBNci4gCk5ldyBKZXJzZXkgRGV2aWxzIGxlZ2VuZCBLZW4gRGFueWVrbyBoYXMgZm91bmQgYSB3YXkgdG8gZmlsbCB0aGUgY29tcGV0aXRpdmUgdm9pZCBhZnRlciByZXRpcmluZyBmcm9tIGhvY2tleSBmb2xsb3dpbmcgdGhlIERldmlscyAyMDAzIFN0YW5sZXkgQ3VwIHZpY3Rvcnkgb3ZlciB0aGUgdGhlbiBNaWdodHkgRHVja3Mgb2YgQW5haGVpbSwgRGFuZXlrbydzIHRoaXJkIEN1cCB3aW4uIFRoZSBtYW4gbmFtZWQgIk1yLiBEZXZpbCIgaGFzIHNpZ25lZCBhIHNwb25zb3JzaGlwIGRlYWwgd2l0aCBvbmxpbmUgcG9rZXIgcm9vbSBwYXJ0eXBva2VyLCB3aGljaCBjdXJyZW50bHkgb3BlcmF0ZXMgbGVnYWwgb25saW5lIHBva2VyIGluIHRoZSBTdGF0ZSBvZiBOZXcgSmVyc2V5LCB3aGljaCB3aWxsIHNlZSBEYW5leWtvIHJlcHJlc2VudCB0aGUgY29tcGFueSBpbiB2YXJpb3VzIHBva2VyIHRvdXJuYW1lbnRzIGJvdGggbGl2ZSBhbmQgb25saW5lLi4gCjIuIGZvcmNlIFBha2lzdGFuIHRvIHN0b3AgZnVuZGluZyB0ZXJyb3Jpc20KV2hpY2ggT25lIElzIEVhc2llciBmb3IgQ2hpbmVzZSBDb25zdW1lcnMgdG8gU3dhbGxvdwpZb3UgZG9uIG5lZWQgdG8gYmUgaW5zdGFudGx5IGhhcmQgb3Igd2V0IGFzIHNvb24gYXMgc29tZW9uZSBpbmRpY2F0ZXMgaW50ZXJlc3QuIEJ1aWxkIHVwIHRvIGl0LiAKSXQgYSBzdWJ0bGV0eSB3aXRoaW4gaHVtYW4gY29tbXVuaWNhdGlvbi4gQW5kIGV2ZW4gaWYgdGhpcyBvbmUgcGFydGljdWxhciBjb21tZW50IHRoYXQgeW91IGh1bmcgdXAgb24gY291bGQgYmUgZGVmaW5pdGVseSBwcm92ZW4gdG8gbm90IGhhdmUgY29tZSBmcm9tIGEgcGxhY2Ugb2Ygc2V4aXNtLCB0aGUgZ2VuZXJhbCBiZWhhdmlvciBvZiB0aGUgZ3V5IHdhcyBzZXhpc3QsIGluYXBwcm9wcmlhdGUsIGFuZCBkZW1lYW5pbmcuLiAKUHVzc3kgc2hvdWxkbid0IHNtZWxsIEJBRC4uIApFcmljIFBhZGRvY2sgc2FpZCBoZSBhbmQgaGlzIGJyb3RoZXIgaGFkIGJvdWdodCBhbmQgc29sZCBzb21lIG9mIHRob3NlIHByb3BlcnRpZXMgdG9nZXRoZXIgYW5kIHRoYXQgU3RlcGhlbiBQYWRkb2NrIHJlYWwgZXN0YXRlIGFuZCBnYW1ibGluZyBleHBsb2l0cyBoYWQgdHVybmVkIGhpbSBpbnRvIGEgbXVsdGltaWxsaW9uYWlyZS4uIApCYXNpY2FsbHkgd2hlbmV2ZXIgd2UgZ28gdG8gYSBsYXJnZSBhcXVhcml1bSBJIGNhbiBnZXQgYWxsIG9mIHRoZSBmaXNoIHRvIGNvbWUgb3ZlciB0byBtZSwgcG9zZSBmb3IgcGljdHVyZXMgb3Igc3dpbSBpbnRvIG15IGhhbmQuIApUaGUgcHJvYmxlbSBpcyB0aGF0IHNvY2lhbGlzdCBjYW4gbGV0IHRoaXMgYmUgYW5vdGhlciBleGFtcGxlIG9mIHNvY2lhbGlzbSBmYWlsaW5nLkFnYWluLCByZWZlciB0byB0aGUgYXJ0aWNsZSBhYm92ZSBpZiB5b3UgaGF2aW5nIHRyb3VibGUgdW5kZXJzdGFuZGluZy4gV2hvIG93bnMgYSBjb21wYW55IGhhcyBub3RoaW5nIHRvIGRvIHdpdGggd2hhdCB0aGUgZ292ZXJubWVudCBvZiBhIHBsYW5uZWQgZWNvbm9teSBpcyBkb2luZy4gCiJUaGUgb2JzZXJ2ZWQgZGlmZmVyZW5jZXMgaW4gUk9JcyBbcmV0dXJuIG9uIGludmVzdG1lbnRzXSBhcmUgaGlnaGx5IHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQgYW5kIGZhciBsYXJnZXIgaW4gbWFnbml0dWRlIHRoYW4gdGhvc2Ugb2JzZXJ2ZWQgaW4gZmluYW5jaWFsIG1hcmtldHMsIiB0aGUgcGFwZXIgc2F5cywgIndoZXJlIGZlZXMgY2hhcmdlZCBieSB0aGUgbW9uZXkgbWFuYWdlcnMgdmlld2VkIGFzIGJlaW5nIG1vc3QgdGFsZW50ZWQgY2FuIHJ1biBhcyBoaWdoIGFzIHRocmVlIHBlcmNlbnQgb2YgYXNzZXRzIHVuZGVyIG1hbmFnZW1lbnQgYW5kIHRoaXJ0eSBwZXJjZW50IG9mIGFubnVhbCByZXR1cm5zLiIuIApJdCBpcyBwb3NzaWJsZSB0aGF0IHRob3NlIHBsYXllcnMgaGF2ZSBvdXRncm93biB0aGVpciBvbGQgY2hpcHMuIE1hbnkgcGxheWVycyB3aWxsIGRpc2NhcmQgb2YgY2hpcHMgdGhhdCB0aGV5IG5vIGxvbmdlciB1c2UsIGRvbmF0ZSB0aGVtLCBvciBzZWxsIHRoZW0uIApTb21lIGVjb25vbWlzdHMgaGF2ZSB3YXJuZWQgdGhlIHByZXZpb3VzIHJhdGUgaGlrZXMgbWF5IGFscmVhZHkgaGF2ZSBnb25lIHRvbyBmYXIsIGFuZCB0aGVyZSBjb25jZXJuIGFib3V0IHRoZSBpbXBhY3Qgb24gdGhlIGVjb25vbXkgaWYgQ2FuYWRhIGhpZ2hseSBpbmRlYnRlZCBob3VzZWhvbGRzIHBhcmUgYmFjayBzcGVuZGluZyB0byBwYXkgZGVidCBpbnN0ZWFkLiBUaGUgY291bnRyeSBkZWJ0IHNlcnZpY2UgcmF0aW8gdGhlIHNoYXJlIG9mIGRpc3Bvc2FibGUgaW5jb21lIHJlcXVpcmVkIHRvIHBheSBwcmluY2lwYWwgYW5kIGludGVyZXN0IG9uIG91dHN0YW5kaW5nIGxvYW5zIHJvc2UgdG8gMTQuNSBwZXIgY2VudCBpbiB0aGUgdGhpcmQgcXVhcnRlciwgdGhlIGhpZ2hlc3Qgc2luY2UgYmVmb3JlIHRoZSAyMDA4IGZpbmFuY2lhbCBjcmlzaXMsIGFjY29yZGluZyB0byBTdGF0aXN0aWNzIENhbmFkYS4uIApXaGljaCBqdXN0IHByb3ZlcyB0aGF0IGN1c3RvbWVycyBtYXkgYmUgaW4geW91ciBhcmVhLCBidXQgaWYgeW91IGNhbiBnZXQgdGhlbSBpbiB0aGUgc2hvcCBhbmQgc2hvdyB0aGVtIHdoYXQgeW91IGhhdmUgdXNpbmcgZWR1Y2F0ZWQgc3RhZmYuIFlvdSBzdW5rLgpJdCdzIG5vdCBhYm91dCBsdWNrIGl0J3MgYWJvdXQgbG9naWMsIGRlY2lzaW9uIG1ha2luZywgbWF0aC4gV2UgYWxsIHNob3VsZCBiZSBhYmxlIHRvIHBsYXkgcG9rZXIgb24gdGhlIFdlYiBpZiB3ZSB3YW50IHRvLCBhbmQgSSBiZWxpZXZlIHRoYXQgbWFraW5nIGl0IGlsbGVnYWwgc3RyaXBzIHVzIG9mIG91ciByaWdodHMuIFRoaXMgaXMgYW4gaW1wb3J0YW50IGlzc3VlLCBhbmQgaG9wZWZ1bGx5IHdlJ2xsIHNlZSBpdCByZXNvbHZlZCBzb29uLi4gClN1YnNlcXVlbnRseSwgc2hlIHNhaWQgdGhlIHN1cm5hbWUgd2FzIE5vcnJpcy4gRGVzcGl0ZSBhIG5hdGlvbndpZGUgc2VhcmNoIGFuZCBhIHB1YmxpYyBhcHBlYWwgZm9yIGluZm9ybWF0aW9uLCBubyB0cmFjZSBvZiBUZWdhbiBvciBBbmRyZXcgTW9ycmlzL05vcnJpcyBoYXMgYmVlbiBmb3VuZC4gUGVycGxleGluZ2x5LCBMYW5lIGZhbWlseSBhbmQgY2xvc2VzdCBmcmllbmRzIHNheSB0aGV5IGhhZCBubyBpbmtsaW5nIG9mIFRlZ2FuIGV4aXN0ZW5jZS4gCkkgd2VudCB0byB0aGUgb3J0aG9wZWRpYyBzdXJnZW9uIHdobyBrZXB0IHB1c2hpbmcgaXQgb2ZmIGFzIHNjYXIgdGlzc3VlIGFuZCBpbiBteSBoZWFkLi4gCkxhZHkgR2FHYSByZWxlYXNlZCBoZXIgZGVidXQgYWxidW0gVGhlIEZhbWUgb24gOSBKYW51YXJ5IDIwMDkuIE9uIDMgSmFudWFyeSAyMDA5LCBzaGUgcmVsZWFzZWQgaGVyIDFzdCBzaW5nbGUgSnVzdCBEYW5jZSBhbmQgdGhlIHRyYWNrIGZlYXR1cmVkIENvbGJ5IE8nIERvbmlzIGFuZCBBa29uIC4gVGhlIHNvbmcgcGVha2VkIGF0IDEgb24gdGhlIElyaXNoIFJlY29yZGVkIE11c2ljIEFzc29jaWF0aW9uIChJUk1BKSBzaW5nbGVzIGNoYXJ0LiBJdCB3YXMgcmVjZW50bHkgYW5ub3VuY2VkIHRoYXQgUGFwYXJhenppIHdvdWxkIGJlIHJlbGVhc2VkIGFzIExhZHkgR2FHYSdzIG5leHQgc2luZ2xlIGluIElyZWxhbmQuIExvdmVHYW1lIHdhcyBpbml0aWFsbHkgcGxhbm5lZCB0byBiZSB0aGUgM3JkIHNpbmdsZSBmcm9tIHRoZSBhbGJ1bSBidXQgZHVlIHRvIEF1c3RyYWxpYSBiYW5uaW5nIHRoZSBjb250cm92ZXJzaWFsIHZpZGVvIGFuZCBseXJpY3MsIEdhR2EgZGVjaWRlZCB0byBjaGFuZ2UgdGhlIElyaXNoIHNpbmdsZSByZWxlYXNlIHRvIFBhcGFyYXp6aSAuIChGdWxsIEFuc3dlcikKVGhlb3JldGljYWxseSwgeW91IG5ldmVyIGxvc2UuIApBcyBmYXIgYXMgdGhlIGNvbWJpbmUgYXMgYSB3aG9sZSB0aGUgZHJpbGxzIGFyZSBhbGwgd2F0Y2hlZCBhbmQgYWxsIHN0aWxsIG1hdHRlciB0byBzY291dHMuIFRhcGUgaXMgbW9yZSBpbXBvcnRhbnQgYnV0IHRhcGUgaXMgd2hhdCBkZXRlcm1pbmVzIHdobyBnZXRzIGFuIGludml0ZSAodGhlIGxlYWd1ZSBjYW52YXNzZXMgc2NvdXRpbmcgZGVwYXJ0bWVudHMgb24gd2hvIHRoZXkgd2FudCBpbnZpdGVkKS4gU28gYmFzaWNhbGx5IGFsbCB0aGUgZ3V5cyBkb2luZyB0aGUgZHJpbGxzIGhhdmUgZ29vZCB0YXBlLCBlbm91Z2ggdG8gbWVyaXQgYSBjbG9zZXIgbG9vay4KVGhlIHByb2JsZW0gd2l0aCB0cnlpbmcgdG8gcHJlc2NyaWJlIGEgc3RyaWN0IG5hbWluZyBwYXR0ZXJuIHRvIHRoZXNlIHRoaW5ncyBpbiBlbmdsaXNoIGlzIHRoYXQgYSBsb3Qgb2YgcGxhY2VzIGhhdmUgYmVlbiBjYWxsZWQgYnkgdGhlIHNhbWUgKG5vdCByZWR1bmRhbnQpIG5hbWUgZm9yIGEgdmVyeSBsb25nIHRpbWUuIEVzc2VudGlhbGx5LCBpdCBhIGNsYXNoIG9mIGhvdyBwZW9wbGUgYWN0dWFsbHkgY29tbXVuaWNhdGUgdnMuIFRyeWluZyB0byAiaW1wcm92ZSIgYSBuYW1pbmcgbWVjaGFuaXNtIHZpYSBwcmVzY3JpcHRpdmUgbWV0aG9kcy4uIApVc2UgYSBicmFpbiB0byBsdXJlIGhpbSBvZmYgaGlzIGxpdHRsZSBsZWRnZSBhbmQgb250byB5b3VyIHdhbGwuIApJIHdvbmRlciBpZiBJIHNob3VsZCBicmVhayB1cCB3aXRoIGhpbS4gCiJJdCBwcm92aWRlcyBhYnVuZGFudCBoZWFsdGggcXVhbGl0aWVzIGF0IHRoZSBjZWxsdWxhciBsZXZlbCwgYm90aCBpbnRlcm5hbGx5IGFuZCBleHRlcm5hbGx5IG9uIHRoZSBza2luLCIgQm94IHNheXMuCjgpIEV4Y2Vzc2l2ZSBTcGFtLiAKSSBjYW4gdGVsbCB5b3UgYXMgc29tZW9uZSB3aG8gYWxzbyB3ZW50IHRvIGFydCBzY2hvb2wgYW5kIGZhbGxzIGludG8gdGhlIGV4YWN0IHNhbWUgcGl0ZmFsbHMgdGhhdCB5b3UgYXJlIGV4cGVyaWVuY2luZyBpcyB0aGF0IHRoZSB0aGluZyB0aGF0IGhhcyBoZWxwZWQgbWUgZHJhdyBmb3IgZnVuIGFnYWluIGlzIHRvIHNwZW5kIHRpbWUgd2l0aCBhbm90aGVyIGNyZWF0aXZlIHBlcnNvbi4gSXQgZG9lc24ndCBldmVuIGhhdmUgdG8gYmUgYW5vdGhlciBhcnRpc3QuIEl0IGNhbiBiZSBhIGZyaWVuZCB3aXRoIGEgZ3JlYXQgc2Vuc2Ugb2YgaHVtb3Igd2hvIGlzIGFsd2F5cyB0aHJvd2luZyBhcm91bmQgY3JhenkgaWRlYXMgb3IgbWFraW5nIGZ1bm55IGpva2VzLiBWaXN1YWxpemUgd2hhdCB0aGV5J3JlIHNheWluZyBhbmQgdHJ5IHRvIG1ha2Ugc29tZXRoaW5nIGZ1bm55IG91dCBvZiBpdC4gT3IgaGFuZyBvdXQgd2l0aCBhbm90aGVyIGFydGlzdCBvciBhIHN0b3J5IHRlbGxlci4gQ3JlYXRpdml0eSBpbnNwaXJlcyBjcmVhdGl2aXR5LiBBIGZyaWVuZCBzaG93ZWQgbWUgYSBzdG9yeWJvYXJkIHNoZSdkIHdvcmtlZCBvdXQuIEl0IHNwYXJrZWQgc29tZXRoaW5nIGluc2lkZSBvZiBtZSBhbmQgbWFkZSBtZSBzYXksIHRoYXQncyBnb29kLCBidXQgd2hhdCBpZiB3ZSBkaWQgdGhpcy4gYW5kIEkgZHJldyBteSBpZGVhLiBIZXIgY3JlYXRpdml0eSBpbnNwaXJlZCBteSBvd24uCkhvd2V2ZXIsIHRvIG1ha2UgaXQgZWFzaWVzdCBvbiB5b3Vyc2VsZiBhbmQgeW91ciBwbGF5ZXJzLCBJIHN1Z2dlc3Qga2VlcGluZyB0byBhIHByZXR0eSBzaW1wbGUgZm9ybXVsYS4gU3RhcnQgZWFjaCBwbGF5ZXIgd2l0aCAkMjAwMCBpbiBjaGlwcy4gCk1heWJlIG5vdCBraWxsIHRoZW0sIGJ1dCBhdCBsZWFzdCBzaGlwIHRoZW0gYWxsIHRvIGFuIGlzb2xhdGVkIGFyZWEgd2hlcmUgdGhleSBjYW4gc3ByZWFkIHRoZWlyIGhhdGUgZXhjZXB0IGFtb25nc3QgdGhlbXNlbHZlcy4gSSB0YWxraW5nIHJhY2lzdHMsIHNleGlzdHMsIHBlb3BsZSBsaWtlIEFsZXggSm9uZXMgY2xhaW1pbmcgdGhlIGZhbWlsaWVzIG9mIHNjaG9vbCBzaG9vdGluZyB2aWN0aW1zIHdlcmUgInBhaWQgYWN0b3JzIi4gCkV0IGNldCBhaW1hbnQgYXR0aXJlIGxlcyBwZXJzb25uZXMgZXQgbGVzIHNpdHVhdGlvbnMgcXVpIHNvbnQgZW4gY29ycmVzcG9uZGFuY2UgYXZlYyB0b3VzIGxlcyBsbWVudHMgcHN5Y2hpcXVlcyBkZSBzYSB2aWUuCk9rYXksIHRoZSBjYXNlIG1heWJlLCBidXQgZGVmaW5pdGVseSBub3QgdGhlIGNoaXBzLiBUaGVuIGFzIHdlIHdlbnQgdGhyb3VnaCB0aGVtIG9uZSBieSBvbmUgdXNpbmcgc29tZXRoaW5nIGFzIHNpbXBsZSBhcyB3YXJtIHdhdGVyIGFuZCBzb2FwIHRoZXkgZW5kZWQgdXAgYmVpbmcgZmluZS4gSXQgd2FzIGEgZGVmaW5pdGUgcmVsaWVmLCBidXQgd2Ugd2lsbCBuZXZlciBkb3VidCB0aGUgUGF1bHNvbiBDb21wYW55IGFnYWluLiAKVGhlIG1hY2hpbmVzIHlvdSBtZW50aW9uIGFuZCB0aGUgc2ltaWxhciBURU5TIG1hY2hpbmVzIGNhbiBiZSB1c2VmdWwgaW4gc29tZSB3YXlzLiAKSWwgYXNzdXJlIGF2b2lyIHQgIHVuZSBwb3F1ZSAibGUgcGx1cyBncm9zIGpvdWV1ciBkZSBwb2tlciBsZWN0cm9uaXF1ZSBkdSBtb25kZSIuCldoaWxlIHRoZXJlIGFyZSBhIG51bWJlciBvZiBzZXRzIG9uIHRoZSBtYXJrZXQsIG5vdCBhbGwgb2YgdGhlIHNldHMgaGF2ZSB0cmVtZW5kb3VzIHZhbHVlIGFzc29jaWF0ZWQgd2l0aCB0aGVtLiBUaGlzIGlzIG9mdGVuIGR1ZSB0byB0aGVpciBwZWRlc3RyaWFuIGRlc2lnbi4gSG93ZXZlciwgd2hlbiB5b3UgbWFrZSBhIHB1cmNoYXNlIG9mIHRoZSAxMDAgMTEuNWcgVGV4YXMgSG9sZGVtIFBva2VyIFNldCwgeW91IGFyZSBwcm9jdXJpbmcgYSBzZXQgdGhhdCBpcyBhbnl0aGluZyBidXQgcGVkZXN0cmlhbi4KIldpciBmcmV1ZW4gdW5zIHNlaHIgYXVmIGRpZSBGbHVtbWkgT3Blbi4gRGFzcyBKYW4gdW5kIEx1a2FzIGlocmUgSWRlZSBtaXQgZGVuIFJvY2tldCBCZWFucyB1bXNldHplbiB3b2xsZW4sIG1hY2h0IHVucyBuYXR1cmxpY2ggc3RvbHoiLCBzbyBBbmphIFJsZXIsIENyZWF0aXZlIERpcmVjdG9yIHZvbiBSb2NrZXQgQmVhbnMgVFYuIApZb3UgY2FuIG1ha2UgYXMgbWFueSBzYW5kYm94IHBhZ2VzIGFzIHlvdSBuZWVkLCBidXQgd2UgcmVjb21tZW5kIHRoYXQgeW91IGtlZXAgdGhlIG51bWJlciByZWFzb25hYmxlLiAKVmlldyBpbWFnZSBvZiBSZWQgYWxlcnQ6IHlvdSB3b3VsZG4ndCB3YW50IHRvIG1lc3Mgd2l0aCB0aGlzIG1lYW4gbG9va2luZyBtYW5kcmlsbCAoU1BMKSAoQ3JlZGl0OiBTUEwpClRoYW5rcyBmb3Igc2hhcmluZyB0aGlzIGV4cGVyaWVuY2UvY29udmVyc2F0aW9uLiBIaXMgd29ybGQgdmlldyBtYXkgYmUgYWJvdXQgdG8gYmUgc2hhdHRlcmVkLCBpZiwgdGhhdCBpcywgaGUgcGF5cyBhdHRlbnRpb24uIFNvdW5kcyBsaWtlIGhlIGxlZnQgaXQgYmVoaW5kLgooQ0JTIERldHJvaXQvQ0JTIExvY2FsKSBDYXNzaXVzIFdpbnN0b24sIHRoZSBNaWNoaWdhbiBTdGF0ZSBTcGFydGFucyBwb2ludCBndWFyZCwgaGFzIHN1ZmZlcmVkIHRlbmRpbml0aXMgaW4gaGlzIGtuZWVzIGZvciBvdmVyIGEgbW9udGguIEJ1dCBpdCBoYXNuIGtlcHQgaGltIG9mZiB0aGUgY291cnQsIGR1cmluZyBoaXMgdGVhbSBpbmp1cnkgZmlsbGVkIHNlYXNvbi4gKE90aGVyIHRlYW1tYXRlcywgbGlrZSBOaWNrIFdhcmQgKGhhbmQpIGFuZCBKb3NoIExhbmdmb3JkIChmb290KSwgaGF2ZW4gYmVlbiBzbyBsdWNreS4pIFdpbnN0b24gaGFzIGxvZ2dlZCBzZXJpb3VzIG1pbnV0ZXMgb2YgbGF0ZSwgaW5jbHVkaW5nIGFsbCA0MCBpbiBhIGJpZyB3aW4gb3ZlciByaXZhbCBNaWNoaWdhbiBpbiBsYXRlIEZlYnJ1YXJ5LiAKSXQgaXMgc3RpbGwgYSB5ZWFyIG91dCwgYnV0IGl0IGFwcGVhcnMgcGVvcGxlIGFyZSBndW5uaW5nIGZvciBEZWUgTWFyZ28uIGhhcyBhIGNvdXBsZSBvZiBpc3N1ZXMgdGhhdCB3b3JrIGFnYWluc3QgaGltICAgaGUgcmFpc2VkIHRheGVzLCBhbmQgaGUgaGFzIGEgc2hpdHR5IHRyYWNrIHJlY29yZCB3aGVuIGl0IGNvbWVzIHRvIGdldHRpbmcgcmUgZWxlY3RlZC4gd2hvIGlzIGdvbm5hIHJ1biBhZ2FpbnN0IERlZT8KS29ub3BrYSBkb2Vzbid0IGhhdmUgYSBjb21wdXRlciBpbiBoZXIgb2ZmaWNlIGFuZCBkb2Vzbid0IGtub3cgaG93IHRvIHVzZSBvbmUuIFR3byBmaWxlIGNhYmluZXRzIGluIGEgdGlueSB3YWl0aW5nIHJvb20gaW5zaWRlIGEgMTYwIHllYXIgb2xkIGNsYXBib2FyZCBob3VzZSBob2xkIG1vc3Qgb2YgaGVyIHBhdGllbnQgcmVjb3Jkcy4gVGhlIG9ubHkgc2lnbiBvZiB0ZWNobm9sb2d5IGluIHRoZSB3YWl0aW5nIHJvb20gaXMgYSBsYW5kbGluZSB0ZWxlcGhvbmUgb24gaGVyIGRlc2suLiAKWW91IG1heSBmZWVsIHB1c2hlZCB0byBib3Jyb3csIHNlbGwsIG9yIGV2ZW4gc3RlYWwgdGhpbmdzIGZvciBnYW1ibGluZyBtb25leS5IYXZlIGZhbWlseSBhbmQgZnJpZW5kcyB3b3JyaWVkIGFib3V0IHlvdS4gRGVuaWFsIGtlZXBzIHByb2JsZW0gZ2FtYmxpbmcgZ29pbmcuIApUaGF0IGFjdHVhbGx5IGluc2lnaHRmdWwgYnJvLiAKQW5vdGhlciBwb3NzaWJsZSByZWFzb24gZm9yIHRoZSBjcml0aWNpc20geW91IHJlY2VpdmVkIGlzIHRoYXQgdGhlIG1vdGhlcmJvYXJkIGhhcyBRdWFsY29tbSBOSUMuIApXZSB3aWxsIHNlZSBzcG9ydHMgaW5ub3ZhdG9ycyB3aG8gaGF2ZSBkZXZlbG9wZWQgcHJvZHVjdHMgdGhhdCBhcmUgYWZmZWN0aW5nIGF0aGxldGljIHBlcmZvcm1hbmNlIGFuZCBmYW4gZW5nYWdlbWVudCBpbiB1bmV4cGVjdGVkIHdheXMsIGFuZCBzbWFydCBjaXR5IGlubm92YXRvcnMgd2hvIGFyZSBkZXNpZ25pbmcgd2F5cyB0byBpbXByb3ZlIHN1c3RhaW5hYmlsaXR5LCBtb2JpbGl0eSBhbmQgbGl2YWJpbGl0eSBmb3IgcGVvcGxlIGFyb3VuZCB0aGUgZ2xvYmUuLiAKSSB0aGluayB5b3UgYXJlIHJpZ2h0LiBJIHRoaW5rIGl0IGlzIGltcG9zc2libGUgZm9yIHNvbWVvbmUgdG8gZ28gdG8gQmxpenogYW5kIGdldCBhIGdvb2QgaWRlYSBvZiB3aGF0IHRoZSBuZXcgY2FyZHMgd2lsbC93b24gZG8uIFJlZ2lzIGFuZCBMaWZlY29hY2ggYXJlIGdyZWF0IGV4YW1wbGVzIG9mIHRoZSBleHRyZW1lcywgYnV0IGluIHRoZSBlbmQuIEJvdGggY291bGQgYmUganVzdCBhcyB3cm9uZyB3aXRoIHRoZWlyIGluaXRpYWwgcmVhY3Rpb25zLiBJIGxvdmUgd2F0Y2hpbmcgUmVnaXMsIHRoaW5rIGhlIGEgc3dlbGwgZ3V5LiBJIHdvdWxkIHByb2JhYmx5IGJlIGV4Y2l0ZWQgYXMgd2VsbCBpZiBJIGdvdCB0byBwbGF5IHdpdGggc29tZSBuZXcgY2FyZHMuIEJ1dCBvbmNlIHRoZSBtZXRhIGFjdHVhbGx5IHJvbGxzIG91dCwgdGhhdCB3aGVuIHdlIGNhbiBzZWUgaWYgaXRzIGEgeWF5IG9yIGJ1c3QuCkkgc2Vjb25kIEphY2sgbiBEaWFuZSBJIHRoaW5rIGl0cyByZWFsbHkgZnVuLiAKU2luY2UgaGFpciBsb3NzIG1heSBiZSBhbiBlYXJseSBzaWduIG9mIGEgZGlzZWFzZSwgaXQgaXMgaW1wb3J0YW50IHRvIGZpbmQgdGhlIGNhdXNlIHNvIHRoYXQgaXQgY2FuIGJlIHRyZWF0ZWQgcHJvcGVybHkgYW5kIHF1aWNrbHkuIFJlY29nbml6aW5nIGFuZCB0cmVhdGluZyBhbiBpbmZlY3Rpb24gbWF5IGhlbHAgc3RvcCB0aGUgbG9zcy4gSWYgYSBtZWRpY2luZSBpcyBjYXVzaW5nIHlvdXIgbG9zcywgeW91ciBkb2N0b3IgbWF5IGJlIGFibGUgdG8gcHJlc2NyaWJlIGEgZGlmZmVyZW50IG1lZGljaW5lIG9yIHlvdSBtYXkgZGVjaWRlIHlvdSByZWFsbHkgZG9uJ3QgbmVlZCBvciB3YW50IHRoZSBtZWRpY2luZS4uIApUaGUgZG9jdG9ycyB3ZXJlIGF0IGEgbG9zcyBhcyB0byB3aGF0IHRvIGRvLCBzbyBzaGUgc3VnZ2VzdGVkIHRoYXQgdGhleSB0cnkgdGhlIHRyZWF0bWVudCB3aXRob3V0IHRoZSBhbmVzdGhlc2lhLiAKRWRpdC4gU3dpdGNoIHRvIG91dGVyIGFwcGx5LCB0cmVhdCB5b3VyIGpvaW4gbGlrZSBhbiBleGlzdHMgc3RhdGVtZW50LgpZb3VyTW9tU2FpZEhpICAxNDcgcG9pbnRzICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnbwpXaGF0IGFyZSBLZWdlbCBFeGVyY2lzZXMKVGhpcyBpbXBhY3RzIHRoZSBlbnZpcm9ubWVudCwgYW5kIGFsc28gd291bGQgcmVxdWlyZSB0aGUgZWxlY3RyaWMgY29tcGFueSB0byBoYXZlIG1vcmUgY2FwYWNpdHkgb24gZGVtYW5kIHRvIHN1cHBvcnQgdGhlIGluY3JlYXNlZCBkZW1hbmQuIEl0cyBtb3JlIGV4cGVuc2l2ZSBhbGwgYXJvdW5kLi4gCktlZXAgaGFpciBsb29zZSBuZWFyIHRoZSBlYXJsb2JlcywgZmFsbGluZyBvdmVyIHRoZSBzaG91bGRlcnMgd2hpbGUgbW9kZWxsaW5nIGEgcGlubmVkIHVwIGhhaXJzdHlsZSBvbiBhIG1lZGl1bSBoYWlyIGN1dC4gR28gZm9yIHdhdnkgY3VybHMgd2l0aCBhIGdvb2Qgbm91cmlzaGVyIG9uIGpldCBibGFjayBoYWlyLiBDb21wbGV0ZSB0aGUgbG9vayB3aXRoIGtvaGwgbGluZXIgaW4gdGhlIGV5ZXMuLiAKRmlyc3RseSwgInlvdSIgaXMgbm90ICJtZSIsIGEgbWVtYmVyIG9mIHRoZSAvZnVubnkgbW9kZXJhdGlvbiB0ZWFtIGJhbm5lZCB5b3UuIFdlIGhhdmUgMjArIG1vZGVyYXRvcnMsIGFsbCBvZiB3aG9tIGhhdmUgbGl2ZXMgb3V0c2lkZSBvZiByZWRkaXQsIGFyZSB1bnBhaWQgdm9sdW50ZWVycy4gU09NRVRJTUVTIGEgbWFpbCBzbGlwcyB0aHJvdWdoIHRoZSByb3BlcyBiZWNhdXNlIG9mIHRoZSBhYm92ZSAoYmVjYXVzZSBnZW5lcmFsbHkgd2Ugd2lsbCBub3QgaW50ZXJmZXJlIG9uIGVhY2ggb3RoZXJzIGJhbnMgdW5sZXNzIG5lY2Vzc2FyeSkuIApGaXJzdCwgd2UgaGF2ZSB0aGUgIk5vIERlcG9zaXQgQm9udXMuIiBUaGlzIGlzIGZyZWUgbW9uZXkgZ2l2ZW4gc3RyYWlnaHQgdXAgYnkgb25saW5lIHBva2VyIHNpdGVzIHRvIG5ldyBwbGF5ZXJzIHdobyB3YW50IHRvIHBsYXkgdGhlaXIgdGFibGVzLiBQbGF5ZXJzIGFyZSBub3QgcmVxdWlyZWQgdG8gbWFrZSBhIGRlcG9zaXQgdG8gYWNxdWlyZSB0aGlzIGJvbnVzLiBBbGwgeW91IGhhdmUgdG8gZG8gaXMgcmVnaXN0ZXIgYW5kIGFjY2VwdCBpdC4gVGhpcyBpcyBhIGdyZWF0IHdheSBmb3IgbmV3IG9ubGluZSBwbGF5ZXJzIHRvIHRlc3QgdGhlIHdhdGVycyBhbmQgZ2V0IHRoZWlyIGZlZXQgd2V0LiBZb3UgY2FuIHNpdCBvbiB0aGVpciB0YWJsZXMgYW5kIGdldCBkb3duIHRvIGJ1c2luZXNzIG9uIHRoZSBob3VzZS4KWWVhaCwgSSBmZWVsIHlvdS4gSSBnb3QgYSB0dWIgb2YgcHJvdGVpbiBwb3dkZXIgZm9yIHNvbWV0aGluZyBsaWtlICQ2MCBVU0QuIG91Y2guIEJ1dCBpdCByZWFsbHkgaGVscHMgd2hlbiBJIGFkZCBhIGRhbGxvcCBvZiBncmVlayB5b2d1cnQgYXMgd2VsbCBhbmQgbXkgMiBzY29vcCAyNmcgcHJvdGVpbiBzaGFrZXMgZ28gdXAgdG8gNDBnIHBlciBzaGFrZSB3aXRoIDEwMGcgZ3JlZWsgeW9ndXJ0LiBCdXQgdGhhdCBiZWluZyBzYWlkLCBsaWtlIEkgc2FpZCAgIHBsYXkgYXJvdW5kIHdpdGggb3RoZXIgcHJvdGVpbiBwYWNrZWQgZm9vZHMgbGlrZSBxdWlub2EgaW5zdGVhZCBvZiByaWNlLCBncmVlayB5b2d1cnQsIGJlYW5zIG9mIGFsbCBmb3Jtcy4gSSBhZGRlZCB0aGVtIHRvIG15IGRpZXQgYW5kIEkgZ2xhZCBJIGRvbnQgaGF2ZSB0byBzaXQgaW4gZnJvbnQgb2YgYSBodWdlIG1vdW5kIG9mIGNoaWNrZW4vc2FsbW9uL2JlZWYgd2hhdGV2ZXIgaXQgaXMuIGJlY2F1c2UgaG9uZXN0bHksIHRoYXQgZ2V0cyBvbGQgdG9vLgpJbmRlZWQsIG1hbnkgc3BlYWtlcnMgb2YgdGhlc2UgZGlhbGVjdHMgYXJlIHNtYXJ0IGVub3VnaCB0byBrbm93IHRoYXQgZG91YmxlIG5lZ2F0aXZlcyBhcmVuIHN0YW5kYXJkL2Zvcm1hbCBFbmdsaXNoLCBzbyB0aGV5IGdvIHRocm91Z2ggYSBwcm9jZXNzIGNhbGxlZCBjb2RlIHN3aXRjaGluZywgd2hlcmUgdGhleSBmb2xsb3cgZGlmZmVyZW50IHJ1bGVzIGRlcGVuZGluZyBvbiB0aGUgc2l0dWF0aW9uLi4gCllvdXIgMiA2IGRyb3BzIGNhbiBkbyB0aGUgam9iIG9mIHRvcCBlbmQgT0sgeW91ciBwcmVmZXIgYmV0dGVyIGZpbmlzaGVycyBidXQgaGF0ZXIgaXMgZmluZS4gVGhpbmsgYWJvdXQgcGxheWluZyB0aGUgd2F0Y2hkb2cuIApTaGUgaGl0IG9uIHRoZSBpZGVhIHdoZW4gc2hlIGluanVyZWQgaGVyIGJhY2sgYSBmZXcgeWVhcnMgYWdvLiAKSWYgY2FyZCBnYW1lcyBkb24gYXBwZWFsIHRvIHlvdSwgdGhlIGNsZWFyIGNob2ljZSBvZiBhIGdhbWUgd2hlcmUga25vd2xlZGdlIGFuZCBleHBlcmllbmNlIGFyZSBpbXBvcnRhbnQgaXMgY3JhcHMuIFdpdGggYW4gYWxtb3N0IHVubGltaXRlZCBhcnJheSBvZiBiZXR0aW5nIG9wcG9ydHVuaXRpZXMgYW5kIGEgZmFzdCBtb3ZpbmcgYW5kIGxpdmVseSBwYWNlLCB0aGlzIGlzIGFub3RoZXIgZ2FtZSB3aGVyZSB0aGUgaG91c2UgYWR2YW50YWdlIG9uIG1hbnkgYmV0cyBpcyBhcyBsb3cgYXMgeW91IGZpbmQgYW55d2hlcmUgaW4gdGhlIGJpbmdvLgpXaGF0ZXZlciB0aGUgbGFzdCBzY2VuZSBpcywgaXQgYmUgaW1wcmludGVkIGluIG15IG1lbW9yeSBmb3JldmVyLiBJIHNwZW50IHRoZSBsYXN0IDggeWVhcnMgZmllbmRpbmcgb3ZlciB0aGlzIHNlcmllcywgb3ZlcmFuYWx5aXppbmcgZXZlcnkgc2NlbmUgYW5kIHBpZWNlIG9mIGRpYWxvZ3VlLCByZXdhdGNoaW5nIHRoZSBzZXJpZXMgYW5kIGZhdm9yaXRlIHNjZW5lcyBtdWx0aXBsZSB0aW1lcywgYW5kIHJlIHJlYWRpbmcgdGhlIGJvb2tzLiAKRmVicnVhcnkgNiwgMTk5OUJ5IEx5bm5lIEJ1bXB1cyBIb29wZXIgb2YgVGhlIFNlbnRpbmVsIFN0YWZmCkxhcmdlIHRyYW5zZmVyIG9uIGZyb250LCBFRElTT04gVFJJVU1QSCBQSE9OT0dSQVBILiAKQmxvY2tpbmcgc2hvdWxkIHByb2JhYmx5IGJlIGEgc2VyaW91cyBvcHRpb24uIEtpY2tpbmcgdGhlbSBvZmYgb2YgeW91ciBuZXR3b3JrIGlzIG1vcmUgaW1wb3J0YW50IHRoYW4gYWN0dWFsbHkgZmluZGluZyB0aGVtLCBpZGVhbGx5IGNoYW5nZSB5b3VyIFNTSUQgcGFzc3dvcmQsIGFuZCBsaW1pdCBpdHMgZGlzdHJpYnV0aW9uLgpUaGVuLCBoZSBtb3ZlZCBpbnRvIHRoZSBwaGFzZSB3aGVyZSBoZSB3b3VsZCBzaGFyZSBpbnRlcmVzdHMgd2l0aCBvdGhlciBraWRzIG92ZXIgc2hvcnQgcGVyaW9kcyBvZiB0aW1lLCBidXQgaGUgZGlkIG5vdCBpbnRlcmFjdCB3aXRoIHRoZW0gb3V0c2lkZSBvZiB0aGF0IGludGVyZXN0IGF0IGFsbC4gRm9yIHRoZSBsb25nZXN0IHRpbWUsIGhlIGRpZG4gbm90aWNlIHRoYXQgaGUgd2FzIHRoZSBvbmx5IGtpZCBub3QgaW50ZXJhY3Rpbmcgb3V0c2lkZSBvZiB0aGUgc3BlY2lmaWMgaW50ZXJlc3QgYWN0aXZpdHkuIFJlY2VudGx5LCB0aG91Z2gsIGhlIGJlZ3VuIHRvIHJlYWxpemUgaG93IGxlZnQgb3V0IGhlIGlzLCBhbmQgb25jZSB0aGF0IGJlZ2FuIHRvIGhhcHBlbiBvdmVyIHRoZSBsYXN0IGZldyBtb250aHMsIEkgYmVnYW4gbG9va2luZyBmb3Igd2F5cyBoZSBjb3VsZCBpbnRlcmFjdCB3aXRoIHRoZSBzYW1lIGtpZChzKSBvdmVyIGEgbG9uZ2VyIHBlcmlvZCBvZiB0aW1lIHRvIGRldmVsb3AgYXQgbGVhc3Qgb25lIG9yIHR3byBmcmllbmRzaGlwcyB0aGF0IGFyZSBhIGJpdCBkZWVwZXIgKHJlbGF0aXZlbHkgc3BlYWtpbmcpLi4gCldyaXRlIGEgYnVzaW5lc3MgcGxhbiB3aGljaCBvdXRsaW5lcyB0aGUgdHlwZXMgb2Ygc2VydmljZXMgeW91IHBsYW4gdG8gb2ZmZXIsIGhvdyBtdWNoIHlvdSBwbGFuIHRvIGNoYXJnZSwgdGhlIGFyZWFzIHlvdSBwbGFuIHRvIGNvdmVyLCBob3cgbXVjaCB5b3VyIHN0YXJ0dXAgY29zdHMgYXJlLCBob3cgeW91ciBidXNpbmVzcyB3aWxsIG9wZXJhdGUgYW5kIGEgcGxhbiBmb3IgbWFya2V0aW5nIHlvdXIgbW9iaWxlIG1hc3NhZ2UgYnVzaW5lc3MuLiAKT24gbCd5IHZvaXQgc2UgcGF2YW5lciBlbiBxdWFsaXQgZCdhbWJhc3NhZGV1ciBkZSBsYSBycHVibGlxdWUgZGUgTW9udG1hcnRyZSBlbiBjb21wYWduaWUgZCd1biBwYXJ0aWN1bGllciwgdW5lIHNvcnRlIGRlIHBheXNhbiBtYXJxdSBwYXIgdW5lIGJvbm5lIGRvc2UgZCdpdnJvZ25lcmllLiBQZXV0IHRyZSBxdSdlbiByZWNoZXJjaGFudCBNb250bWFydHJlIHN1ciBjZSBibG9nIHZvdXMgcmV0cm91dmVyZXogbWEgcHJvc2UuU2Fsb3BlcmllcyBlbiBmb3JtZSBkZSBibHVmZiBkJ3VuIGNydGluIHF1aSBzZSBwcmVuYWl0IHBvdXIgdW4gaGFja2V1clBhcm1pIGxlcyBzYWxvcGVyaWVzIHF1ZSBsZSBib24gRG9jdGV1ciAiSm8gcG91c3NlIGF1IGNyaW1lIiBpbCB5IGEgY2VsbGUgZCd1biB0eXBlIHF1aSBtJ2EgY3JpdCBldCBxdWkgcHJ0ZW5kIGF2b2lyIGNhcHQgbW9uIG51bXJvIGQnSVAgYmllbiBxdWUgaid1dGlsaXNlICJwcm90b25tYWlsIiwgdW5lIG1lc3NhZ2VyaWUgc3Vpc3NlLiAKSGlsZGFobCwgYSBmb3JtZXIgY2hhaXIgb2YgdGhlIFdpbm5pcGVnIEJsdWUgQm9tYmVycyBib2FyZCBhbmQgQ0VPIG9mIHRoZSBNYW5pdG9iYSBMaXF1b3IgQ29udHJvbCBDb21taXNzaW9uLCBkaWVkIGluIDIwMTEuIApTdHVkaWVzIHdpdGggYSBjb21wYXJpc29uIGdyb3VwIHRoYXQgaW5jbHVkZWQgdHJlYXRtZW50IGFzIHVzdWFsLCBubyB0cmVhdG1lbnQgb3Igd2FpdGluZyBsaXN0LCBvciBvdGhlciBmb3JtIG9mIHRyZWF0bWVudCBvciBpZiB0aGV5IHByb3ZpZGVkIHByZSAgYW5kIHBvc3QgdHJlYXRtZW50IG9ubHkgb3V0Y29tZSBtZWFzdXJlcyB3ZXJlIGVsaWdpYmxlIGZvciBpbmNsdXNpb24uIApJIHNlZW4gcGxhY2VzIHdoZXJlIGxpdHRsZSBlbmZvcmNlbWVudCBvZiBjaXR5IHJlZ3VsYXRpb25zIHR1cm5zIHRoZSBkb3dudG93biBjb3JlIGludG8gYSBnaWFudCBiYXphYXIuIEl0IGludGVyZXN0aW5nIHRvIHZpc2l0IGJlY2F1c2UgaXQgc28gY3JhenkgYnV0IGl0IHN1cmUgaXNuIHdoZXJlIHlvdSB3YW50IHRvIGxpdmUuCjIpIFNoZSBtdXR1YWxseSBmaW5kcyB5b3UgImN1dGUiIGFuZCBpcyBzdWJjb25zY2lvdXNseSBzZWVraW5nIHlvdSBvbiBGQiB3aXRoIHRoZSBleGN1c2UgdG8gImNoZWNrIHRoYXQgeW91IG9rYXkiLgpPYnZpb3VzbHkgaGUgaGFzIHRvIHN0aWNrIHRvIHRoZSBzY3JpcHQsIGJ1dCBoZSBnZXRzIHRocm91Z2ggdGhlIHdob2xlIHRoaW5nIHdpdGggYW4gYW1hemluZyBwb2tlciBmYWNlLgpJIGRpc2FncmVlIHdpdGggVHVja2VyIENhcmxzb24gc29sdXRpb24sIGJ1dCBJIGdsYWQgaGUgYXQgbGVhc3QgY2FuIHNlZSB0aGUgcHJvYmxlbS4gCkhvdyBtYW55IGRvZ3MgZG9lcyBMYWR5IEdhZ2EgaGF2ZQpEZXQgaGFuZGxlciBpa2tlIG9tIGh2ZW0gc29tIGJlZ3Iga3JpbWluYWxpdGV0ZW4sIG1lbiBodm9yIGRlbiBiZWdzLCBzaWVyIFN0amJlcmcuLiAKTGEgZm1pbml0LCBjZSBuJ2VzdCBwYXMgdW4gdGF0IGZpZywgZGZpbml0aWYsIGMnZXN0IHVuZSBmYW9uIGRlIHNlIGNvbnN0cnVpcmUgZXQgZGUgc2UgbW9kZWxlciBlbiBqb3VhbnQgYXZlYyBzb2ksIGF2ZWMgdG91cyBsZXMgc29pIHBvc3NpYmxlcy4gCkhlIHdhbnRlZCB0byByb2IgYSBqZXdlbGxlcnMgb24gb3VyIGNpdHkgbWFpbiBzdHJlZXQuIApXaGVuIEkgZ290IG15IGRvZywgaGUgd2FzIGEgbmluZSB5ZWFyIG9sZCBTaWJlcmlhbiBodXNreSB3aXRoIHNldmVyZSBleWUgcHJvYmxlbXMgKGNhbiBwcm9kdWNlIGhpcyBvd24gdGVhcnMpLiBIaXMgb3duZXIsIHdobyBoYWQgb25seSBiZWVuIGluIGhpcyBlYXJseSAzMCBoYWQgZGllZCAoYWxjb2hvbGljIHdobyBzbGlwcGVkIGludG8gZGlhYmV0aWMgY29tYSkuIApIb3cgQnJ1Y2UgTGVlIENoYW5nZWQgVGhlIFdvcmxkMTIuMThHL01LVi83MjBQIC4gCk1hcmdhcmV0IHdhcyBhIGxpZmUgbG9uZyByZXNpZGVudCBvZiBQZXRlcmJvcm91Z2gsIGFuZCB3YXMgdGhlIGxhc3Qgc3Vydml2aW5nIGNoaWxkIG9mIHRoZSBsYXRlIFRob21hcyBhbmQgUm9zYXJpbyBBbnRob255IChBbmdpb25lKS4gClByb2R1Y3RzIGxpa2UgVGhlIENvYWNoIEZhY2VzIFBva2VyIENhcmQgUHJvdGVjdG9yIGFyZSBhbHdheXMgc3VjY2Vzc2Z1bC4gT25jZSBhbnkgb2YgdGhlc2UgcHJvZHVjdHMgYXJlIGxhdW5jaGVkIGluIHRoZSBtYXJrZXQsIHRoZSBwb2tlciBsb3ZlcnMgYmVjb21lIGNyYXp5IGFib3V0IHRoZSBwcm9kdWN0IGFuZCB0aGV5IG1ha2UgdGhlIHNob3BzIGJ1enplZCB1cC4gCkFuZCBJIHdpbGwgdGVsbCB5b3Ugd2h5LiAKRnVjayBpcyB5b3VyIHByb2JsZW0gbG1hby4gUGxlYXNlIGRlc2NyaWJlIGluIG1vcmUgZGV0YWlsIHRoZSBraW5kIG9mIGJlbnQgdGhhdCBJIGFtIG5vdCBzZWVpbmcgb3VyIGNvdW50cnksIGFuZCBob3cgaXQgaXMgbW9yZSBuYXRpb25hbGlzdGljIHRoYW4gc2ltaWxhciBtb3ZlbWVudHMvdGVuZGVuY2llcyBpbiB0aGUgVUsuIApXaGVuIE5vLjE4IHdhcyBhdWRpdGVkYXQgdGhlIGVuZCBvZiB0aGUgZGF5IGl0IHdhcyBmb3VuZCB0byBiZSBzaG9ydCAkNzkwLiAKSGUgaGFzICQxNDIsMDAwIGNhc2ggYW5kLCBnaXZlbiBoaXMgZnJ1Z2FsIHdheSBvZiBsaWZlLCBoZSBzaG91bGQgYmUgYWJsZSB0byBhZGQgdG8gc2F2aW5ncyBhcyBsb25nIGFzIGhlIGlzIHdvcmtpbmcuIAoiU2luY2UgY29taW5nIHRvIFRvcm9udG8sIEpvenkgaGFzIGhlbHBlZCBURkMgd2luIG11bHRpcGxlIGNoYW1waW9uc2hpcHMsIHNjb3Jpbmcgc28gbWFueSBjbHV0Y2ggZ29hbHMsIGluY2x1ZGluZyB0aGUgYmlnZ2VzdCBnb2FsIGluIG91ciBjbHViJ3MgaGlzdG9yeS4uIApIb3cgZG8geW91IHN0YXJ0IHlvdXIgY2FyZWVyIGFzIGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllcgpCdSBlZ2l0aW1zaXoga2lzaWxlciB0b3BsdWx1Z3Ugc2F5aXNhbCBvbGFyYWsgYnV5dWsgb2xzYSBkYSBvcnRhbGFtYSBlbiBjb2sgZ2VsaXIgaGFuZ2kga2VzaW1kZW4gZ2VsaXlvcj8gT2t1bXVzLCBzZWhpcmRlIHlhc2F5YW4gbWkgeW9rc2Ega295ZGUgdmUgdGFybGFkYSBjYWxpc2lwIHVsa2VzaW5pIGhpYyBnZXptZW1pcyBpbnNhbiBtaT8gVWxrZW5pbiBBUkdFc2luaSBvbHVzdHVyYW4sIG8gdGFybGFsYXJpIGZpbmFuc2xheWFuLCB5ZW5pIHVydW5sZXIgdGFzYXJsYXlhbiBoYW5naSBrZXNpbT9TaXJmIGRhaGEgYnV5dWsgYmlyIHBvcHVsYXJpdGV5ZSB1bGFzdGlsYXIgZGl5ZSBoYWtsaSBvbGR1a2xhcmkgbWkgYW5sYW1pbmEgZ2VsaXlvcj8gQnUgaW5zYW5sYXIgZHVueWEgZGEgb2x1cCBiaXRlbmxlcmkgdGFraXAgZWRlYmlsaXlvcmxhciBtaT8gS3VsdHVyZWwgdmUgc29zeWFsIG9sYXJhayBiaWxpbmNsaSBpbnNhbmxhciBtaT8gR2VsZWNla3RlIHJvYm90bGFyaW4gdGFtYW1lbiBlbGUgZ2VjaXJlY2VnaSB0YXJpbSBzZWt0b3J1bmRlIGthYyBraXNpIGNhbGlzaXlvcmRhIHVsa2VuaW4gZ2VsZWNlZ2luaSBiZWxpcmxpeWViaWxpeW9yP0JhbmEgZ29yZSBidSB5dXp5aWxkYSBzb3JndWxhbWF5aSBiaWxtZXllbiwgZWdpdGltaSBpbGtva3VsdSBnZWNtZXllbiBpbnNhbmxhciB0b3BsdWx1Z3UgdWxrZW5pbiBnZXJpIGthbGFuIGluc2FuaXlsYSBheW5pIHNveiBoYWtraW5hIGJ1bHVubWFtYWxpLiBBeW5pIHNvcnVudSBBbWVyaWthZGEsIEluZ2lsdGVyZSBkZSB5YXNpeW9yLiAKSSBhZ3JlZSB3aXRoIGV2ZXJ5dGhpbmcgZWxzZSBoZXJlLiBQdXNoeSBzYWxlcyBwZW9wbGUga2lsbCBjdXN0b21lcnMgYW5kIGNvcnBvcmF0ZSBoYXMgeWV0IHRvIHJlYWxpemUgaXQKVGhlIHBsYXllcnMgbGF1Z2hlZCwgam9rZWQgYW5kIHdpbmNlZCBpbiBlcXVhbG1lYXN1cmUgYXMgZXZlbnRzIHVuZm9sZGVkLiAKNDBrcGggbGltaXRzIHBhc3QgZW1lcmdlbmN5IHNlcnZpY2VzIHNob3VsZCBiZSBhdCB0aGUgZGlzY3JldGlvbiBvZiB0aGUgcGVyc29ubmVsIGludm9sdmVkIGFuZCBjb3VsZCBiZSBpbXBsZW1lbnRlZCBieSBwb3J0YWJsZSBmbGFzaGluZyBzcGVlZCBlbmZvcmNlbWVudCBzaWducyB3aGVuIHRoZSBzaXR1YXRpb24gaXMgY29uc2lkZXJlZCB0byBiZSBwcmVzZW50aW5nIGEgc2lnbmlmaWNhbnQgcmlzay4uIApJZiB5b3VyIGltbXVuZSBzeXN0ZW0ganVzdCBpZ25vcmVkIHRob3NlIHZpcnVzZXMgYW5kIGxldCB0aGVtIHRha2UgdGhlaXIgYmVzdCBzaG90IGF0IHlvdSwgeW91J2QgYmUgZmluZS4gCldlbGwsIG5vdyB0aGF0IHdlJ3ZlIGhhZCB0aW1lIHRvIGRpZ2VzdCB0aGUgcmVzdWx0cyBvZiBQZXRlJ3MgUGV0IFNjYW4gYW5kIGNvbWUgdG8gdGVybXMgd2l0aCB0aGUgbmV3cywgYW5kIG5vdyB0aGF0IGFsbCBvdXIgZmFtaWx5IGhhdmUgYmVlbiBpbmZvcm1lZCwgaXQncyB0aW1lIHRvIGdpdmUgeW91IGFsbCBhbiB1cGRhdGUuIApCZWNhbWUgYXdhcmUgb2YgbXVsdGlwbGUgd2F5cyBpbiB3aGljaCBkaWV0IG1pZ2h0IGluZmx1ZW5jZSBzbW9raW5nIGFuZCBxdWl0dGluZy4gcmVzZWFyY2hlcnMgcmFuZG9tbHkgc3VydmV5ZWQgMTAwMCBjaWdhcmV0dGUgc21va2VycyBhZ2VkIDI1IHllYXJzIGFuZCBvbGRlciBmcm9tIGFyb3VuZCB0aGUgVW5pdGVkIFN0YXRlcywgdXNpbmcgcmFuZG9tIGRpZ2l0IGRpYWxpbmcgdGVsZXBob25lIGludGVydmlld3MuIFRoZXkgdGhlbiBjb250YWN0ZWQgdGhlIHBhcnRpY2lwYW50cyBhZ2FpbiAxNCBtb250aHMgbGF0ZXIsIGFza2luZyB3aGV0aGVyIHRoZXkgaGFkIGFic3RhaW5lZCBmcm9tIHNtb2tpbmcgYW5kIG90aGVyIHRvYmFjY28gdXNlIGZvciBhdCBsZWFzdCB0aGUgcHJldmlvdXMgbW9udGguVGhleSBmb3VuZCB0aGF0IHRoZSBjaWdhcmV0dGUgc21va2VycyB3aG8gYXRlIGZydWl0cyBhbmQgdmVnZXRhYmxlcyBhbiBhdmVyYWdlIG9mIDQgb3IgbW9yZSB0aW1lcyBwZXIgZGF5IHdlcmUgMyB0aW1lcyBtb3JlIGxpa2VseSB0byBiZSBhYnN0aW5lbnQgZnJvbSBhbGwgdG9iYWNjbyBwcm9kdWN0cywgaW5jbHVkaW5nIGNpZ2FyZXR0ZXMsIDE0IG1vbnRocyBsYXRlciwgY29tcGFyZWQgd2l0aCB0aG9zZSB3aG8gYXRlIGZydWl0cyBhbmQgdmVnZXRhYmxlcyBmZXdlciB0aGFuIDIgdGltZXMgcGVyIGRheSAoUFRoaXMgaGVsZCB0cnVlIGV2ZW4gYWZ0ZXIgY29udHJvbGxpbmcgZm9yIGFnZSwgc2V4LCByYWNlIGFuZCBldGhuaWNpdHksIGVkdWNhdGlvbiwgaG91c2Vob2xkIGluY29tZSwgYW5kIGJlaGF2aW9yYWwgaW5kaWNhdG9ycyBvZiBnZW5lcmFsIGhlYWx0aCBvcmllbnRhdGlvbi5UaG9zZSB3aG8gYXRlIG1vcmUgZnJ1aXRzIGFuZCB2ZWdldGFibGVzIGFsc28gZXhoaWJpdGVkIGZld2VyIG1lYXN1cmVzIG9mIGRlcGVuZGVuY2UuVGhleSB3ZXJlIGxlc3MgbGlrZWx5IHRvIHNtb2tlIDIwIG9yIG1vcmUgY2lnYXJldHRlcyBwZXIgZGF5IChQd2hvIGVhdCBtb3JlIGZydWl0cyBhbmQgdmVnZXRhYmxlcyBtYXkgYmUgbW9yZSBoZWFsdGggY29uc2Npb3VzIHRvIGJlZ2luIHdpdGggYW5kIHRoZXJlZm9yZSBiZSBtb3JlIGFtZW5hYmxlIHRvIHNtb2tpbmcgY2Vzc2F0aW9uLCBIYWliYWNoIHNhaWQuc3VydmV5cyBpbmRpY2F0ZSB0aGF0IHBlb3BsZSB3aG8gc21va2UgY2lnYXJldHRlcyBhcmUgbW9yZSBsaWtlbHkgdG8gYmluZ2UgZHJpbmssIHVzZSBpbGxpY2l0IGRydWdzLCBhbmQgZXhlcmNpc2UgbGVzcywgYW5kIHdlIGNvbnRyb2xsZWQgZm9yIHRoaXMgdXNpbmcgZXhlcmNpc2UsIGhlYXZ5IGRyaW5raW5nLCBhbmQgc3RyZWV0IGRydWcgdXNlIGFzIG1hcmtlcnMgb2YgZ2VuZXJhbCBoZWFsdGggb3JpZW50YXRpb24sIGhlIGFkZGVkLkhvd2V2ZXIsIHJlc2lkdWFsIGNvbmZvdW5kaW5nIG1heSBzdGlsbCBleGlzdCwgYW5kIHRoZSByZXNlYXJjaGVycyByZWNvbW1lbmQgZnVydGhlciByZXNlYXJjaCwgaW5jbHVkaW5nIHN0dWRpZXMgdGhhdCBpbmNvcnBvcmF0ZSBhbGwgZGlldGFyeSBmYWN0b3JzIGFuZCBleHBlcmltZW50YWwgc3R1ZGllcy5Gb3Igbm93LCBkb2N0b3JzIHNob3VsZCBjb250aW51ZSB0byBhc2sgYWxsIG9mIHRoZWlyIHBhdGllbnRzIGFib3V0IHRvYmFjY28gdXNlLnRoZWlyIHBhdGllbnRzIHdobyB1c2UgdG9iYWNjbywgdGhleSBzaG91bGQgYXNrIGFib3V0IHRvYmFjY28gdXNlIGF0IGVhY2ggdmlzaXQsIGFkdmlzZSBvZiBjb25zZXF1ZW5jZXMgb2YgdG9iYWNjbyB1c2UsIGFzc2VzcyB3aWxsaW5nbmVzcyB0byBxdWl0LCBhc3Npc3QgdGhlIHBhdGllbnQgd2l0aCBhIGNlc3NhdGlvbiBwbGFuLCBhbmQgYXJyYW5nZSBmb2xsb3cgdXAsIGluY2x1ZGluZyBiZWhhdmlvcmFsIGFuZCBwaGFybWFjZXV0aWNhbCBzdHJhdGVnaWVzIHRoZXkgZmVlbCBhcmUgYXBwcm9wcmlhdGUgZm9yIHRoZSBwYXRpZW50LCBoZSBzYWlkLkRvY3RvcnMgY2FuIGFsc28gc3VnZ2VzdCB0aGF0IHBhdGllbnRzIHdobyBhcmUgZXhwZXJpZW5jaW5nIGEgY2lnYXJldHRlIGNyYXZpbmcgZWF0IGEgcGllY2Ugb2YgZnJ1aXQsIGEgdmVnZXRhYmxlLCBvciBkcmluayBhIGdsYXNzIG9mIHdhdGVyIGhlbHAgdGhlbSBhdm9pZCBnaXZpbmcgaW4gdG8gdGhlIHVyZ2UgdG8gc21va2UsIGhlIGFkZGVkLlNjb3R0IE1jSW50b3NoLCBQaEQsIGFzc29jaWF0ZSBwcm9mZXNzb3IgaW4gdGhlIERlcGFydG1lbnQgb2YgQ29tbXVuaXR5IGFuZCBQcmV2ZW50aXZlIE1lZGljaW5lIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFJvY2hlc3RlciwgaW4gTmV3IFlvcmssIHNhaWQgdGhlIHN0dWR5IHdhcyBmb3IgZmluZGluZyBhbiBpbXBvcnRhbnQgcmVsYXRpb25zaGlwIGJldHdlZW4gZnJ1aXQgYW5kIHZlZ2V0YWJsZSBjb25zdW1wdGlvbiBhbmQgYSBzbW9rZXIgY3VycmVudCBsZXZlbCBvZiBhZGRpY3Rpb24sIGFzIHdlbGwgYXMgdGhlaXIgZnV0dXJlIHN1Y2Nlc3Mgd2l0aCBiZWluZyBhYnN0aW5lbnQgZnJvbSBzbW9raW5nLnRlbGxzIHVzIHRoYXQgZnV0dXJlIHJlc2VhcmNoIG1pZ2h0IG5vdCBvbmx5IGNvbmZpcm0gdGhlc2UgcmVsYXRpb25zaGlwcyBidXQgd2lsbCBsZWFkIHRvIGludGVydmVudGlvbnMgd2l0aCBzbW9rZXJzIHRvIGluY29ycG9yYXRlIGNoYW5nZXMgaW4gdGhlaXIgZGlldCB0byBpbmNyZWFzZSB0aGVpciBjaGFuY2VzIG9mIGJlaW5nIHN1Y2Nlc3NmdWwgd2l0aCB0aGVpciBxdWl0IGF0dGVtcHRzLCBEci4gCkJ1dCBob25lc3RseSwgaXQgYSBwYXJ0eSBnYW1lLCBzbyBldmVuIGlmIHlvdXIgY2hhcmFjdGVyIGlzbiBwZXJmZWN0LCB5b3UgY2FuIGhhdmUgYW4gZWFzeSB0aW1lIHdpdGggdGhlIHJpZ2h0IHBhcnR5LgpBdSBtaWNybyBkdSBEcml2ZSBkZSBSVEwyLCBOaWNvbGEgU2lya2lzIGEgZW4gZWZmZXQgZXhwbGlxdSA6ICJDb21tZSBvbiBhIGNyb3VsIHNvdXMgbGVzIGRlbWFuZGVzIGV0IGxlcyByZWdyZXRzIGRlIGdlbnMgcXVpIG4nb250IHBhcyBwdSB2ZW5pciBub3VzIHZvaXIgKC4pIG9uIGEgdHVkaSB0b3V0ZXMgbGVzIHBvc3NpYmlsaXRzLCBkZSBzYXZvaXIgbyBlc3QgY2UgcXVlIGwnb24gcG91cnJhaXQgcGFzc2VyIGV0IGNvbW1lbnQiLiBFbiByZXZhbmNoZSwgcGVyc29ubmUgbmUgc2FpdCBlbmNvcmUgc2kgSW5kb2NoaW5lIGluc3RhbGxlcmEgdW5lIG5vdXZlbGxlIGZvaXMgYXUgcGxhZm9uZCBsJ2ltbWVuc2Ugc291Y291cGUgdm9sYW50ZSBxdWkgYXZhaXQgY29udHJpYnUgYXUgc3VjY3MgZGVzIGNvbmNlcnRzIGR1IDEzIFRvdXIgOiB1biBkaXNwb3NpdGlmIGRlIDc1MCBtMiAoMTUwMCBtMiBwb3VyIGxlcyBjb25jZXJ0cyBkZSBsJ0FjY29ySG90ZWwgQXJlbmEgZGUgUGFyaXMpIGNvbXBvcyBkJ3VuZSBtdWx0aXR1ZGUgZCdjcmFucy4gImEgc2VyYSBwZXV0IHRyZSBsYSBkZXJuaXJlIG9jY2FzaW9uIGQnY291dGVyIGwnYWxidW0gMTMgZW4gaW50Z3JhbGl0IGV0IGRlIHZvaXIgY2UgcXUndGFpdCBjZSAxMyBUb3VyIGF2YW50IGRlIHJldmVuaXIgZCdpY2kgZGV1eCBhbnMiIGV4cGxpcXVlIE5pY29sYQpPdXIgY3JlZGl0IGZpbGVzIGFyZSBmcm96ZW4uIApVRkMgcHJlc2lkZW50IERhbmEgV2hpdGUgc2F5cyBSYWNoYWVsIE9zdG92aWNoIGhhcyBubyBwcm9ibGVtIHdpdGggZm9ybWVyIENhcm9saW5hIFBhbnRoZXIgYW5kIERhbGxhcyBDb3dib3kgR3JlZyBIYXJkeSBzaGFyaW5nIHRoZSBoaWdoIHByb2ZpbGUgSmFudWFyeSBjYXJkLgpUaGF0IHNhaWQsIEkgaG9uZXN0bHkgZG9uIHRoaW5rIHRoZXJlIGlzIGEgY29uc2Vuc3VzIG9uIGhvdyB0byBwcmV2ZW50IHNldmVyZSBEUiBiZWNhdXNlIHlvdXIgYm9keSBtZWNoYW5pY3MgYmVmb3JlIGdldHRpbmcgcHJlZ25hbnQgY2FuIGltcGFjdCBob3cgZmFyIGl0IHByb2dyZXNzZXMuIApPbmUgd2FzIHRoZSBwcm9taXNlIHRvIHVzZSBvdXIgbWVkaWNhbCBrbm93bGVkZ2UgYW5kIHNraWxscyBpbiB0aGUgYWR2YW5jZW1lbnQgb2YgaHVtYW4gcmlnaHRzIGFuZCBzb2NpYWwganVzdGljZS4gVGhlIG90aGVyIHdhcyB0byBub3QgcGVybWl0IGZhY3RvcnMgc3VjaCBhcyBnZW5kZXIgaWRlbnRpdHkgdG8gaW50ZXJ2ZW5lIGluIHRoZSBjYXJlIHRoYXQgd2UgcHJvdmlkZS4uIApUaGlzIHdhcyBwcm9iYWJseSB0aGUgbW9zdCBpbXBvcnRhbnQgbGVzc29uIHRoYXQgbXkgZmF0aGVyIHRhdWdodCBtZS4gSSB1bmRlcnN0b29kIHRoZW4gdGhhdCBJIHdhbnRlZCB0byBiZWNvbWUgYSBtdXNpY2lhbi4gQW5kIEkgdW5kZXJzdG9vZCB3aHkgSSBtdXN0IGRvIHRoaXMuIApTcGVjaWZpY2FsbHkgY2l0ZWQgQW1hem9uIE1hcmtldHBsYWNlLCBHb29nbGUncyBhZCBleGNoYW5nZSwgYW5kIEdvb2dsZSBTZWFyY2ggYXMgZXhhbXBsZXMgb2YgcGxhdGZvcm0gdXRpbGl0aWVzIGFuZCBzYWlkLCBNYXJrZXRwbGFjZSBhbmQgQmFzaWNzLCBhbmQgR29vZ2xlJ3MgYWQgZXhjaGFuZ2UgYW5kIGJ1c2luZXNzZXMgb24gdGhlIGV4Y2hhbmdlIHdvdWxkIGJlIHNwbGl0IGFwYXJ0LCB3aGlsZSBhZGRpbmcgdGhhdCBHb29nbGUgU2VhcmNoIHdvdWxkIGFsc28gaGF2ZSB0byBiZSBzcHVuIG9mZi4uIApTaG9ydGx5IGFmdGVyIEJhcmJpZSBhcnJpdmFsIGluIFJ1c3NpYSwgdGhlIGVudGlyZSBTb3ZpZXQgRW1waXJlIGNvbGxhcHNlZC4gQSBjb2luY2lkZW5jZSwgcGVyaGFwcywgYnV0IEkgdGhpbmsgQmFyYmllIG1heSBoYXZlIGJlZW4gYSBDSUEgYWdlbnQuLiAKVGhlIHRyZW5kIGlzIHZlcnkgc3Ryb25nLCBhcyBjb25kaXRpb25zIGltcHJvdmUgeW91IGhhdmUgYSBnZW5lcmF0aW9uIHRoYXQgaGFzIG1hbnkgbWFueSBjaGlsZHJlbiBhbmQgYmFzaWNhbGx5IGFsbCBvZiB0aGVtIHN1cnZpdmUuIApPbHNlbiBpcyBhbiBhbmltYWwgd2VsZmFyZSBhZHZvY2F0ZSBhbmQgYXJ0aXN0Li4gCkluIGZhY3QgdGhleSBhY3R1YWxseSBzZWxsIGluc2VydHMgdGhhdCByYWlzZSB5b3VyIGhlZWxzIHVwIGluc2lkZSB0aGUgc2hvZSwgYW5kIG1ha2UgeW91IGdhaW4gYW4gYWRkaXRpb24gMSAzaW5jaGVzIHRoZXkgY2xhaW0sIGFsdGhvdWdoLCBJJ3ZlIG5ldmVyIHRyaWVkIHRoZW0uIFRoZXkgYWxzbyBjbGFpbSB0aGV5IGFyZSBnb29kIGZvciB5b3VyIHBvc3R1cmUuIApJdCB3YXMgYW4gb2xkIGxlYXRoZXIgYm91bmQgYm9vayBmaWxsZWQgd2l0aCB0aGUgcmVjb3JkIG9mIGhpcyB2b3lhZ2VzIGFuZCBhZHZlbnR1cmVzLiAKQnV0IHRoZSBwcm9ibGVtIGhlcmUgaXMgdGhhdCBuZWl0aGVyIENvdHRvIG5vciBQYWNxdWlhbyBhcmUgY3VycmVudGx5IGRvbm5pbmcgdGl0bGUgc3RyYXBzLiAKd2h5IGFyZSB3ZSBzbyBvYnNlc3NlZCB3aXRoIGdldHRpbmcgbW9yZSBvZiBpdApOb3VzIG5lIG5vdXMgZm9jYWxpc29ucyBwYXMgc3VyIGxlcyBzYWxvbnMgZGUgbWFzc2FnZS4gCk15IGJpZ2dlc3QgZ3JpcGUgaW4gdGhpcyBjb3VudHJ5IGlzIHRoZSBBbWVyaWNhbmlzYXRpb24gb2YgaXQuIFlvdSBnb3QgR29vZ2xlLCBBbWF6b24sIFN0YXJidWNrcyBldGMgY29taW5nIGluIGFuZCB0cmFkaW5nIGhlcmUuIApIZWxsbywgSSBoYXZlIGJlZW4gYnJvd3NpbmcgYXJvdW5kIG9ubGluZSBmb3IgYSB3aGlsZSB0b2RheSwgdHJ5aW5nIHRvIGdldCBtb3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBub3Rhcml6YXRpb24vYXV0aGVudGljYXRpb24gcHJvY2VzcyBmb3IgZGVncmVlcyBhbmQgYmFja2dyb3VuZCBjaGVja3MuIEkgcHJvYmFibHkgdXNlIGFuIGFnZW5jeSBmb3IgdGhlIGJhY2tncm91bmQgY2hlY2sgc2luY2UgSSBoYXZlIHRvIHN0YXJ0IGZyb20gc2NyYXRjaCBhbnl3YXkgc2luY2UgbXkgbGFzdCBiYWNrZ3JvdW5kIGNoZWNrIHdhcyBwcmVwYXJlZCBzdWNoIGEgbG9uZyB0aW1lIGFnby4gQnV0IEkgYSBiaXQgY29uZnVzZWQgYWJvdXQgd2hhdCB0byBkbyB3aXRoIHRoZSBkZWdyZWUuCldvcmtlcnMgaW4gYSBMYXMgVmVnYXMgZXNjb3J0IHNlcnZpY2UgcHJvdmlkZSBhIG51bWJlciBvZiBzZXJ2aWNlcyBiZXlvbmQgdGhlIHNpbXBsZSBleGNoYW5nZSBvZiBzZXggZm9yIG1vbmV5OyBpbmRlZWQsIHN1Y2ggcHJvc3RpdHV0aW9uIGlzIG5vdCBldmVuIHBhcnQgb2YgdGhlaXIgb2ZmaWNpYWwgam9iIGRlc2NyaXB0aW9uLCB3aGljaCBpcyBob3cgTGFzIFZlZ2FzIGVzY29ydHMgY29udGludWUgdG8gd29yayB3aXRoaW4gdGhlIGNpdHkgbGltaXRzLi4gClZvbHVudGVlcnMgdG8gQWlkIGluIFNraW4gVGVzdGluZyBpbiBOaW5lIFNjaG9vbHMgLiAKRXZlcnkgSGFuZCByZXZlYWxlZCBpcyBhIHdvbmRlcmZ1bCBib29rIGZvciB0aGUgcG9rZXIgbGVhcm5lcnMuIAoiWW91IGJlIHJvbGxpbmcgb3V0IHVwZGF0ZXMgd2hpbGUgd2UgdXNlIHRoZSBzb2Z0d2FyZT8/ISIKQW5kIHRoZW4gYSB0aHJvdyB0cmFpbmluZyBzaW11bGF0b3IgaW4gdGhlIGdhbWUuIFRoZXJlIGFyZSBjZXJ0YWluIG1vbnMgdGhhdCBJIGp1c3QgZG9uIGVuY291bnRlciBlbm91Z2ggdG8gZ2V0IGV4Y2VsbGVudCB0aHJvd3MgYWdhaW5zdC4gSSBjb3VsZCBzZWUgdGhpcyBzaW1pbGFyIHRvIGJhdHRsZXMuIFlvdSBoYXZlIHRvIGhhdmUgdGhlIHBva2Vtb24gYmVmb3JlIHlvdSBhcmUgYWJsZSB0byB0cmFpbiBjYXRjaGluZyBpdC4gQW5kIHlvdSBjb3VsZCBldmVuIGhhdmUgbGV2ZWxzIG9mIGRpZmZpY3VsdHkgbGlrZSB0aGUgYmF0dGxlIGxlYWd1ZXMuIEhpZ2hlc3QgbGV2ZWwgYW5kIHRoZSBtb24gaXMganVzdCBmbGlwcGluZyBvdXQganVtcGluZyBhbmQgYXR0YWNraW5nIGEgbG90LiBUaGF0IHdvdWxkIGJlIGZ1biBhbmQgYSBjbGVhciBub2QgaW4gdGhlIGRpcmVjdGlvbiBvZiBza2lsbCBiZWluZyBhbiBpbXBvcnRhbnQgZmFjdG9yIGluIHRoZSBnYW1lLgpVbSBkZW4gaW0gUG90IGxpZWdlbmRlbiBCZXRyYWcgZXJoaHQgd2VyZGVuLiBQb3QgTGltaXQgJC4xMC8kLjIwIFNtYWxsQmxpbmQgJDAuMTAgKyBCaWdCbGluZCAkMC4yMCA9ICQwLjMwIERlciBuY2hzdGUgUmFpc2UgKG9obmUgZGFzIG5vY2ggamVtYW5kIGNhbGx0KSBkYXJmIG1heC4gCkhvdyB0byBjcmFjayBtb2NoYSBwcm8gMi42IGNyYWNrIGRvIGRpYWJsbyAyIGxvZCBwbCBlYXJuIHRvIGRpZSBjcmFja2VkLiAKSSBlbmNvdW50ZXJlZCB0aGVtIG9uIERNVCwgUm9nYW4gZW5jb3VudGVyZWQgdGhlbSBvbiBETVQsIG1vc3QgcGVvcGxlIHdobyBzbW9rZSBETVQgZW5jb3VudGVyIHRoZW0uIApUaGV5IGNvbWUgaW4gZGlmZmVyZW50IHZhbHVlcyBvZiBtb25leS4gCldoYXQgbW9yZSBpcyB0aGVyZSB0byBzYXk/IE15IGdvZCwgSSBhbSBnb25lIHdpdGggdGhpcyBzaXRlLCBnb25lIHdpdGggdGhpcyBmb3J1bSwgZ29uZSB3aXRoIHRoaXMgZ2FtZS4gSSB3aW4sIEkgd2luLCBJIHdpbiwgYW5kIHdoZW4gSSBsb29rIGF0IHRoZSBtb25leSBJIGhhdmUgdGFrZW4gZnJvbSBteSBmcmVpbmRzIGluIHRoZSBob21lIGdhbWUsIHRoZSBpZGlvdHMgYXQgdGhlIFBva2Vyc3RhcnMgTWluaXN0YWtlcyBvZiAxLzJjZW50cywgMi81IGNlbnRzLi4gCk1hdHRlciBvZiBmYWN0LCB0aGUgY2F1c2VzIG9mIGRlcHJlc3Npb24gYXJlIHNvIHdlbGwgZG9jdW1lbnRlZCB0aGF0IEkgaGF2ZSBhIGhhcmQgdGltZSBiZWxpZXZpbmcgd2h5IHBlb3BsZSBhcmUgYmVpbmcgbGVmdCBpbiB0aGUgZGFyay4uIApCeSB0aGVuIHRob3VnaCwgTWFzc2FjaHVzZXR0cyBTdGF0ZSBMb3R0ZXJ5IGhhZCBtb3ZlZCBvbiB0byBhIGRpZmZlcmVudCBnYW1lIHdpdGhvdXQgYSBzdGF0aXN0aWNhbCB0d2lzdC4gClNvIGJhY2sgdG8gMjIgUm93bGFuZCAgIHRoaXMgcmVhbGx5IGlzIHRoZSByaWdodCB0eXBlIG9mIGNhbXBhaWduIGZvciB0aGUgc2VsbGVyLCBhcyB0aGUgYnV5ZXIgaXMgZ29pbmcgdG8gYmUgYSBzcGVjaWFsIG9uZS4gT2YgY291cnNlIHRoZSBzZWxsZXIgYWxzbyBrbm93cyBoZSBvciBzaGUgaXMgaW52b2x2ZWQgaW4gdGhlIHNhbWUgZ2FtZSBhbmQgdGhlcmUgYXJlIHNvbWUgcmlza3MgZm9yIGEgc2VsbGVyIGluIGFuIEVPSSBwcm9jZXNzICAgd2hlcmUgdGhlIHJ1bGVzIGNhbiBiZSB2YWd1ZSBhbmQgdGhlIHdheSBmb3J3YXJkIGEgbGl0dGxlIHVuY2xlYXIuIFNvbWV0aW1lcyBidXllcnMgZHJvcCBvdXQgb3IganVzdCBkb24ndCBzdGFydCB0aGUgZW5nYWdlbWVudCBwcm9jZXNzIGFzIHRoZWlyIGZlYXIgb2YgdW5jZXJ0YWludHkgaXMgZ3JlYXRlciB0aGFuIHRoZWlyIGxvdmUgb2YgdGhlIGhvbWUuLiAKTG9jYWwgSGlzdG9yeUEgbm90ZXdvcnRoeSBsb2NhbCBidXMgaXMgMTkzOSBCcmlzdG9sIEs1RyBUaGUgT2xkIEdpcmwsIGFuIG9wZW4gdG9wIGJ1cyB0aGF0IGlzIHRoZSBvbGRlc3QgYnVzIGluIHRoZSBjb3VudHJ5IHRvIHN0aWxsIGJlbG9uZyB0byBpdHMgb3JpZ2luYWwgY29tcGFueS4gU2hlIGlzIHRoZSBvbGRlc3QgYnVzIGluIHRoZSBTb3V0aGVybiBWZWN0aXMgZmxlZXQgYW5kIGlzIHN0aWxsIGluIHNlcnZpY2UgbW9yZSB0aGFuIDc1IHllYXJzIGFmdGVyIHRoZXkgZmlyc3QgYm91Z2h0IGhlci4uIApJdCB3YXMgYSB3ZWVrbHkgcml0dWFsLCBzbyB0aGV5IHdvdWxkIGJlIGZyZXNoIHNjcnViYmVkIGZvciBjaHVyY2ggaW4gdGhlIG1vcm5pbmcuLiAKUGx1cyB0aGUgcmlkZSB0byBnZWJlbGUgaXMgdmVyeSBwcmV0dHkuIEFzayBmb3IgYSAiZG9udXogbHVsZXNpIiBhbmQgYSAia2FydG9zaGthIGx1bGVzaSIgKGdyb3VuZCBwb3JrIGtlYmFiIGFuZCBtYXNoZWQgcG90YXRvIGtlYmFiKS4gCkkgZ3Vlc3MgSSBqdXN0IGRvbiBhZHZvY2F0ZSBkb2N0b3JzIGlnbm9yaW5nIG9uZSBjb21wb25lbnQgb2YgaGVhbHRoLiAKRmVlbCBmcmVlIHRvIFBNIG1lIG9yIG9uZSBvZiB0aGUgb3RoZXIgY2hhdCBtb2RzIG9uIERpc2NvcmQgZm9yIGEgbGluayB0byBhZGQgb25lIG9mIHRoZXNlIGJvdHMgdG8geW91ciBzZXJ2ZXIKSSB3ZW50IGludG8gYSBwcmltYWwgc3RhdGUgb2YgcGFuaWMuIApJbiBkZWZlYXQgYXJlIGhpZGRlbiB0aGUgc2VlZHMgb2Ygc3VjY2Vzcy4gClRoZSBwcm9ibGVtIGlzLCBtYW55IHBlb3BsZSBkb24ga25vdyB3aGF0IG1ha2VzIGEgVEZTQSBkaWZmZXJlbnQgZnJvbSBhbiBSUlNQLiBBIHJlcG9ydCBieSBCYW5rIG9mIE1vbnRyZWFsIGVzdGltYXRlcyB0aGF0IDMyIHBlciBjZW50IG9mIENhbmFkaWFucyBhcmUgaW4gdGhhdCBjYW1wLgpQSVg6IERvbHBoaW5zIFNob2NrIFBhdHJpb3RzIFdpdGggTWlyYWNsZSBJbiBNaWFtaU5ldyBFbmdsYW5kIFBhdHJpb3RzIHYgTWlhbWkgRG9scGhpbnNNSUFNSSwgRkwgICBERUNFTUJFUiAwOTogUnlhbiBUYW5uZWhpbGwgMTcgaGFuZHMgdGhlIGJhbGwgb2ZmIHRvIEZyYW5rIEdvcmUgMjEgb2YgdGhlIE1pYW1pIERvbHBoaW5zIGluIHRoZSBzZWNvbmQgaGFsZiBhZ2FpbnN0IHRoZSBOZXcgRW5nbGFuZCBQYXRyaW90cyBhdCBIYXJkIFJvY2sgU3RhZGl1bSBvbiBEZWNlbWJlciA5LCAyMDE4IGluIE1pYW1pLCBGbG9yaWRhLiAoUGhvdG8gYnkgTWFyayBCcm93bi9HZXR0eSBJbWFnZXMpCkR1cmluZyBhIHdlZWtuaWdodCByZXZpZXcgdmlzaXQsIG15IGRpbmluZyBjb21wYW5pb24gYW5kIEkgZm91bmQgdGhlIHRydWNrIHBhcmtlZCBvdXRzaWRlIEd1bmJhcnJlbCBCcmV3aW5nLCB3aGljaCBwcm92aWRlZCBhIHNwYWNpb3VzIGFuZCBjb21mb3J0YWJsZSBpbnRlcmlvciB0byBjb3VsZCBlbmpveSBvdXIgbWVhbC4gCkkgZG8gd2FudCByZXBsYXkgdmFsdWUgZm9yIGEgQkdTIHN0eWxlIGdhbWUuIApJdCBnb29kIHRvIGhlYXIgdGhhdCB5b3UgaW4gYSBwb3NpdGlvbiB0byBoZWxwIG90aGVyczsgSSB3YXMgaW4gdGhhdCBzYW1lIGJvYXQgbXlzZWxmLiAKIk5pcC9UdWNrIiBpcyBub3Qgc3VwcG9zZWQgdG8gbGliZXJhdGUgdXMuIEl0IGp1c3QgdGhhdCB3aGVuIGEgc21hcnQgYW5kIGNyaXRpY2FsIHByb2R1Y2VyIGxpa2UgTXVycGh5IG1hbmFnZXMgdG8gdGVhY2ggdXMgd2hhdCB3ZSBhbHJlYWR5IGtub3csIHRoYXQgYWdpbmcgZmVtYWxlIGJvZGllcyBhcmUgc28gZXh0cmFvcmRpbmFyaWx5IHVnbHkgdGhleSByZXF1aXJlIGhlcm9pYyBtZWRpY2FsIGludGVydmVudGlvbiwgYW5kIGRvZXMgaXQgaW4gYSB3YXkgdGhhdCBzZWR1Y2VzIHVzIHdpdGggY2xldmVybmVzcywgaXQgaXMgYSByZWxpZWYgdG8ga25vdyB0aGF0IGl0IHdpbGwgZXZlbnR1YWxseSBiZSBvZmYgdGhlIGFpci4KQWZ0ZXIgYSBmZXcgZGF5cyBvZiBjb21wZXRpaW9uLCBBbGkgQXl1YiAoR1BJOTcxMDkpIGVuZGVkIHVwIHdpdGggdGhlIHRpdGxlLCB0YWtpbmcgaG9tZSA0MCwyNTUuIApTbyB0aGUgbmlnaHRzIG92ZXIgYW5kIHdlIGFsbCBiYWNrIGF0IG15IGZyaWVuZHMgaG91c2UuIApBdCBsZWFzdCB3aXRoIEJMIHRoZXkgaGF2ZSB0byBjb21taXQgdG8gdGhlIGZpZ2h0IHRvIGtlZXAgbGF1bmNoaW5nIGJyb29kbGluZ3MgYW5kIHRoZW4gdW5pdHMgbGlrZSB2aWtpbmdzLCB0aG9ycywgdmlwZXJzLCBjb3JydXB0b3JzIGFuZCB0ZW1wZXN0IGNhbiBjb3VudGVyIHRoZW0uLiAKWWVzIHRoZXkgY2FuIGJlIHBsYXRlIG1vdW50LiAKVGhlc2UgYmVuZWZpdHMgYXJlIHN1Y2ggYXM7LiAKVGhleSBlaXRoZXIgZ28gd2l0aCBhIGxvb3NlciBzdWl0IHRoYXQgbGV0cyB0aGVtIGhpdCBkZXB0aCBlYXNpZXIgb3IganVzdCBrbmVlIHdyYXBzIHRvIGdpdmUgdGhlbSBhIHNsaWdodCBib29zdC4gTGlmdGVycyBsaWtlIExhcmEgU3R1cm0gYW5kIE1pa2UgS3VobnMgYXJlIHdvcmxkIGNoYW1waW9ucyBpbiBnZWFyOyBJIHN1cmUgdGhleSBmaWd1cmVkIG91dCB3aGF0IHRoZXkgY2FuIHB1dCBvbiB0byBoaXQgZGVwdGggaW4gdGhlIGdlYXIgdGhleSBnb2luZyB0byB1c2UuLiAKSW4gdGhlIGluZGljdG1lbnQsIHRoZSBwcm9zZWN1dGlvbiBhZGRyZXNzZWQgdGhlIHF1ZXN0aW9uIG9mIHRoZSBzdGF0dXRlIG9mIGxpbWl0YXRpb25zLCBzYXlpbmcgdGhhdCBldmVuIGFidXNlIHRoYXQgaGFwcGVuZWQgbW9yZSB0aGFuIHR3byBkZWNhZGVzIGFnbyBmYWxscyB3aXRoaW4gdGhlIGNoYXJnaW5nIHdpbmRvdyBhbGxvd2VkIHVuZGVyIElsbGlub2lzIGxhdy4gClRoZWtpbGxpbmdqb2tlciAgMSBwb2ludCAgc3VibWl0dGVkIDggbW9udGhzIGFnbwpGaWd1cmluZyBvdXQgcGxhY2VtZW50IGZvciB0aGUgcG90IGxpZ2h0cyBhcm91bmQgdGhlIGV4aXN0aW5nIHNreWxpZ2h0cyB3YXMgZWFzeSBjb21wYXJlZCB0byBjYWxjdWxhdGluZyB0aGUgYW5nbGVzIGZvciB0aGUgY3VzdG9tIHN0YWlubGVzcyBzdGVlbCBkdWN0IGFib3ZlIHRoZSBob29kIGZhbiB0aGF0IGhhZCB0byBiZSBtaXRyZWQgdG8gZml0IHRoZSBzbG9wZSBvZiB0aGUgY2VpbGluZywgSmVuc2VuIHNheXMuVG8gZW5zdXJlIGFsbCB0aGUgd29vZCB3YXMgY29tcGxlbWVudGFyeSwgSmVzdCBzYXlzIHRoZXkgY29uc2lkZXJlZCAxNSBkaWZmZXJlbnQgc2hhZGUgb3B0aW9ucyBiZWZvcmUgZGVjaWRpbmcgb24ganVzdCB0aGUgcmlnaHQgY29sb3VyIGZvciB0aGUgd2hpdGUgb2FrIGVuZ2luZWVyZWQgaGFyZHdvb2QgZmxvb3IgdGhhdCBydW5zIHRocm91Z2hvdXQgdGhlIGhvbWUgbGl2aW5nIHNwYWNlcy4gCkFzIHdlIGJlZ2luIG91ciBkZXBsb3ltZW50IG9mIDMwLDAwMCBhZGRpdGlvbmFsIHRyb29wcyB0byBBZmdoYW5pc3RhbiwgdGhpcyBDaHJpc3RtYXMgRXZlIHdpbGwgYWxzbyBtYXJrIHRoZSAzLDAwMHRoIGRheSBvZiB0aGUgd2FyIGluIEFmZ2hhbmlzdGFuIGFuZCB0aGUgMzB0aCBhbm5pdmVyc2FyeSBvZiB0aGUgaW5pdGlhbCBSdXNzaWFuIGludmFzaW9uIG9mIEFmZ2hhbmlzdGFuIGluIDE5NzkuIFRodXMgZmFyLCB0aGlzIHdhciBoYXMgYWxyZWFkeSBjb3N0IHRoZSBBbWVyaWNhbiB0YXhwYXllciBhIG1pbmltdW0gb2YgJDMwMCwwMDAsMDAwLDAwMCBhY2NvcmRpbmcgdG8gdGhlIENvbmdyZXNzaW9uYWwgUmVzZWFyY2ggU2VydmljZSAoYW5kIHRoYXQganVzdCB0aGUgZnVuZGluZyB0aGF0ICJvbiBidWRnZXQiKS4uIApUaGUgbWFqb3IgY2hhbGxlbmdlIGZvciBhIEJvdCBpcyB0byBub3QgYmUgcHJlZGljdGFibGUuIEl0IGlzIGZ1dGlsZSB0byBwbGF5IGdvb2QgaWYgeW91IGFyZSBhbHdheXMgcGxheWluZyB0aGUgc2FtZS4gCkF0IHRoZSBzYW1lIHRpbWUsIEplbGxpY28gd2FzIGluIGFuIHVuZW52aWFibGUgc2l0dWF0aW9uIHRvby4gSGUgaGFkIHRvIGZpbGwgYSBzZWF0IG9uIHRoZSBtb3N0IGFkdmFuY2VkIHNoaXAgaW4gdGhlIGZsZWV0LCBvbiB2ZXJ5IHNob3J0IG5vdGljZSwgYW5kIGhlIGhhZCByZWFzb24gdG8gYmVsaWV2ZSB3YXIgd2FzIGdvaW5nIHRvIGJyZWFrIG91dCBpbiBoaXMgc2VjdG9yLiBUaGUgd2VpZ2h0IG9mIHRoZSB3b3JsZCBtdXN0IGhhdmUgYmVlbiBvbiBoaXMgc2hvdWxkZXJzLCBJIGRvdWJ0IGhlIGZlbHQgaGUgaGFkIHRpbWUgdG8gZ2V0IHRvIGtub3cgdGhlIGNyZXcgYW5kIGJyaW5nIHRoZW0gYWxvbmcgc2xvd2x5LCBoZSBmZWx0IGhlIGhhZCB0byBnZXQgdGhlbSBpbnRvIGZpZ2h0aW5nIHNoYXBlIGFmdGVyIHllYXJzIG9mIHZlcnkgY3VzaHkgZGlwbG9tYXRpYyBhbmQgc2NpZW50aWZpYyBkdXR5LgpUaGF0IG1lYW5zIGl0cyBncmF2aXRhdGlvbmFsIGZpZWxkIGlzIGEgbGl0dGxlIHVuZXZlbiwgY2F1c2luZyBzYXRlbGxpdGVzIHRvIGFsdGVyIHRoZWlyIG9yYml0cyBvdmVyIHRpbWUuIApBbGwgeW91cmUgZG9pbmcgb3RoZXJ3aXNlIGlzIGVkdWNhdGluZyB0aGUgZmlzaCB3aGlsZSBnaXZpbmcgdGhlIGdlbmVyYWwgY29tbXVuaXR5IG1vcmUgcmVhc29uIHRvIHRoaW5rIHBva2VyIHBsYXllcnMgYXJlIGR1bGwsIHVubGlrZWFibGUgcGVvcGxlLi4gCkJ1ZCBMaWdodCdzIG5ldyBhZHMsIGJ5IGFnZW5jeSBvZiByZWNvcmQgV2llZGVuIEtlbm5lZHkgTmV3IFlvcmssIHdpbGwgYWlyIHRoaXMgd2Vla2VuZCBkdXJpbmcgdGhlIE5hdGlvbmFsIEZvb3RiYWxsIExlYWd1ZSBwbGF5b2Zmcy4gVGhlIEFuaGV1c2VyIEJ1c2NoIEluQmV2IG93bmVkIGJyZXcgaXMgYWxzbyBkZXZlbG9waW5nIHR3byBuZXcgYWRzIGZvciB0aGUgU3VwZXIgQm93bC4gR29lbGVyIGRlY2xpbmVkIHRvIHJldmVhbCB0aGUgY29udGVudCBvZiB0aG9zZSBhZHMgb3RoZXIgdGhhbiB0byBjb25maXJtIHRoZSBicmFuZCBpcyBzdGlja2luZyB3aXRoIGl0cyBtZWRpZXZhbCBjYW1wYWlnbi4gU2NodWx0eiBpcyB0aGUgQXNzaXN0YW50IE1hbmFnaW5nIEVkaXRvciwgTWFya2V0aW5nIGF0IEFkIEFnZSBhbmQgY292ZXJzIGJldmVyYWdlLCBhdXRvbW90aXZlIGFuZCBzcG9ydHMgbWFya2V0aW5nLiBIZSBpcyBhIGZvcm1lciByZXBvcnRlciBmb3IgTWNDbGF0Y2h5IG5ld3NwYXBlcnMsIGluY2x1ZGluZyB0aGUgRnJlc25vIEJlZSwgd2hlcmUgaGUgY292ZXJlZCBidXNpbmVzcyBhbmQgc3RhdGUgZ292ZXJubWVudCBhbmQgcG9saXRpY3MsIGFuZCB0aGUgSXNsYW5kIFBhY2tldCBpbiBTb3V0aCBDYXJvbGluYS4gTmVhbCBBd2FyZHMsIHRoZSBBc3NvY2lhdGlvbiBvZiBDYXBpdG9sIFJlcG9ydGVycyBhbmQgRWRpdG9ycywgdGhlIENhbGlmb3JuaWEgTmV3c3BhcGVyIFB1Ymxpc2hlcnMgQXNzb2NpYXRpb24sIHRoZSBTb3V0aCBDYXJvbGluYSBQcmVzcyBBc3NvY2lhdGlvbiBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgYW5kIEVkaXRvcnMuIEEgbmF0aXZlIG9mIENpbmNpbm5hdGksIFNjaHVsdHogaGFzIGFuIGVjb25vbWljcyBkZWdyZWUgZnJvbSBYYXZpZXIgVW5pdmVyc2l0eSBhbmQgYSBtYXN0ZXJzIGluIGpvdXJuYWxpc20gZnJvbSBOb3J0aHdlc3Rlcm4gVW5pdmVyc2l0eS4KRmlyc3QsIGl0IHNob3VsZCBiZSBub3RlZCB0aGF0IHBva2VyIGdhbWVzIGZhbGwgaW50byAyIGdyb3VwczogcG9rZXIgcm9vbSBnYW1lcyBwbGF5ZWQgYWdhaW5zdCBvdGhlciBwbGF5ZXJzIGFuZCBjYXNpbm8gcG9rZXIgZ2FtZXMgcGxheWVkIGFnYWluc3QgdGhlIGRlYWxlci4gQ2FzaW5vIHBva2VyIGdhbWVzIGFyZSBDYXJyaWJlYW4gUG9rZXIsIENhc2lubyBIb2xkZW0gUG9rZXIsIFJveWFsIFBva2VyLCBPYXNpcyBQb2tlciwgUG9rZXIgVGhyZWUsIFRleGFzIEhvbGRlbSwgUGFpIGdvdyBwb2tlci4gRXZlbiB0aG91Z2ggdGhlcmUncyBhIHZhcmlldHkgb2YgcG9rZXIgZ2FtZXMsIHRoZXkgYWxsIGZvbGxvdyB0aGUgY29udmVudGlvbmFsIHJ1bGVzIG9mIGhhbmRzIHZhbHVlIGFuZCBoaWVyYXJjaHkuIChGdWxsIEFuc3dlcikKVGhlIHJlYmVsIGdyb3VwcyBNTkxGIGFuZCBNSUxGIHdlcmUgYmVpbmcgbWF0ZXJpYWxseSBhbmQgbW9yYWxseSBzdXBwb3J0ZWQgYnksIGFtb25nIG90aGVycywgU0EuIE51ciBNaXN1YXJpLCBmb3IgYSB3aGlsZSwgd2FzIGNvZGRsZWQgYnkgU0EuIApGcmlkYXkgdGhyb3VnaCBTdW5kYXkuIEZyZWUuIDY4MSAxN3RoIEF2ZS4gCkEgd2VpcmRseSBmcmVuZXRpYyBtYXNodXAgb2YgY2VsZWJyaXR5IGNvc3BsYXkgYW5kIGx5c2VyZ2ljIHRhbGVudCBzaG93LCAiVGhlIE1hc2tlZCBTaW5nZXIiIGlzIHRoZSBzZWFzb24ncyBvbmx5IHRydWUgYnJlYWtvdXQgaGl0LiAKQUEgUGFpciBvZiBhY2VzClNpbmNlIHBvcm4gaGFzIGJlZW4gbGVnYWxpemVkIHRoZSByZXBvcnRlZCByYXBlIHJhdGUgaGFzIGRyb3BwZWQgYnkgYSBodWdlIHBlcmNlbnRhZ2UuIEkgdGhpbmsgYmVjYXVzZSBJIHNlZW1lZCBsaWtlIGEgc3RvbmVyIHR5cGUgYW5kIHNoZSB3YXMgZXh0cmVtZWx5IHN0cmFpZ2h0IGxhY2VkLiBTaGUgc2FpZCBJIHdvdWxkbid0IGJlIGFibGUgdG8gaGFuZGxlIHRoZSBBUCB0ZXN0IGFuZCB0aGF0IGlmIEkgc3R1ZGllZCBoYXJkIGFsbCBzZW5pb3IgeWVhciBtYXliZSBJIGNvdWxkIHBhc3MgaWYgSSdtIGx1Y2t5LiAKMy4gVGhpcmQsIHdlIG11c3QgcmVpbnZpZ29yYXRlIGxhYm9yLiBXb3JrZXJzIGhhdmUgc29tZSBhYmlsaXR5IHRvIHJlcHJlc2VudCB0aGVtc2VsdmVzLCBBbWVyaWNhbnMgd2lsbCBjb250aW51ZSB0byB3b3JrIG1vcmUgaG91cnMgdGhhbiBhbnlvbmUgZWxzZSBvbiBlYXJ0aC4gCkkgZG9uIGFncmVlIHdpdGggZXZlcnl0aGluZyBoZSBzYXlzLCBidXQgaGUgY29tZXMgb2ZmIGFzIHJlYXNvbmFibGUuIApJbiB0aGUgcHJlc2VudCBkYXksIHJlc2lkZW50cyBvZiB0aGUgVUsgZnJlZWx5IGhhdmUgYWNjZXNzIHRvIGh1bmRyZWRzIG9mIG9wZXJhdG9ycyBvZmZlcmluZyBzcG9ydHMgYmV0dGluZywgY2FzaW5vLCBiaW5nbywgc2NyYXRjaGNhcmRzIGFuZCBtb3JlIGFuZCB0aGlzIGlzIGFuIGltcG9ydGFudCBzZWN0b3IgaW4gdGVybXMgb2YgbmF0aW9uYWwgcmV2ZW51ZS4gU28sIGl0IGZlZWxzIGxpa2UgYSB3aW4gd2luLCB0aGUgbmF0aW9uIGlzIHByb2ZpdGluZywgYW5kIGdhbWJsZXJzIGFyZSBzcG9pbHQgZm9yIGNob2ljZSB3aXRoIGhpZ2ggcXVhbGl0eSBnYW1lcy4gCkZhciBhcyB2YXJpYW50cyBnbywgeW91IGhhdmUgdG8gbG9vayBhdCB0aGUgc3BlY2lmaWNzIG9mIHdoYXQga25vd24uIApCb2JieSBvYnNlc3Npb24gd2FzIGFuIGluZGljYXRpb24gb2YgYSBzZXh1YWxseSBkZXZpYW50IHBzeWNob3BhdGggaW4gdGhlIG1ha2luZy4gClBsYXllcnMvZmxvcCBhbmQgYXZlcmFnZSBwb3RzIGFyZSBhcyBsb3cgYXMgdGhleSBoYXZlIGV2ZXIgYmVlbi4gR2FtZXMgYXJlIGR1bGwgYXMgc2hpdC4gWW91IG5vdCB0b28gbGlrZWx5IHRvIGJlIGVudGVydGFpbmVkIGJ5IHBsYXlpbmcgdGhlbSBidXQgaWYgeW91IGZ1bmRhbWVudGFsbHkgc291bmQgYW5kIG1hbmFnZSB5b3VyIG1lbnRhbCBnYW1lIHdlbGwsIGl0IGlzIHN0aWxsIHZlcnkgcG9zc2libGUgdG8gc3F1ZWV6ZSBhIHJlYXNvbmFibGUgcHJvZml0IGZyb20gdGhlbS4gCkhlIHdpbGwgYmUgZ3JlYXRseSBtaXNzZWQgYnkgaGlzIGxvdmluZyBwYXJ0bmVyIG9mIDMwIHllYXJzLCBTaGVycnkgQ29vaywgaGlzIGV4IHdpZmUgQXJsZW5lIFJlZ2FuLCBoaXMgY2hpbGRyZW4gTWFybmluLCBKZW5ueSAoUm9iKSwgV2lsbCAoRWxzcGV0aCksIHN0ZXBzb25zIFJvYiBDb29rIGFuZCBTZWFuIENvb2ssIGFuZCBncmFuZGNoaWxkcmVuIEtsb2UgYW5kIENvbGUgTmFyZGksIENhZGVuIGFuZCBLYWl5YSBCZWxpc2xlLCBGZWxpeCBhbmQgSW5ub2dlbiBIYWFzLCBhbmQgQXZyZWwgQ29vaywgd2hvIGtuZXcgaGltIGFzIEdyYW5kcGEgQmVhciBhbmQgUGFwYSBDaG9jb2xhdGUuIEhlIHdpbGwgYmUgcmVtZW1iZXJlZCBmb25kbHkgYnkgaGlzIHNpYmxpbmdzLCBNaWtlIEhhYXMgKEphY3F1aWUpLCBMYXJyeSBIYWFzIChEaWFuZSksIFN1emFubmUgTWFkdGVyIChCcmlhbiksIFJvc2VtYXJ5IExhdm9pZSAoTm9ybSksIGFsbCBvZiBoaXMgbmllY2VzIGFuZCBuZXBoZXdzLCBhbmQgbG9uZyB0aW1lIGZyaWVuZCBhbmQgZGV2b3RlZCBlbXBsb3llZSwgVG9tIER1bnBoeSwgd2hvIHdvcmtlZCBmb3IgQmlsbCByaWdodCB1bnRpbCB0aGUgZW5kLiAKSXQncyBuZXcgZm9vdGJhbGwuIEl0J3MgYSBuZXcgYWdlLiBZaW56IGdvdCBtaWxsZW5uaWFscyB0YWtpbmcgcHVudHMuIEFzayB5b3VyIERhZCB0byBjb25zaWRlciB0aGUgc2l0dWF0aW9uIGluIHRoYXQgcHJpc20gd2l0aCB0aGF0IHBhcmFkaWdtLgpJZiB0aGUgYmlsbCBwYXNzZXMsIGl0IHdvdWxkIGRyaXZlIHRoZSBidXNpbmVzcyBvZiBwb2tlciB1bmRlcmdyb3VuZCwgYnV0IGZvciBub3cgaXQgcmVtYWlucyBpbiB0aGUgb3Blbi4uIApIZSBoYXMgYWxzbyBiZWVuIHNlbGVjdGVkIGFzIHRoZSBDaGllZiBHdWVzdCBvZiB0aGUgSVBDIEF3YXJkcyBjZXJlbW9ueSwgd2hlcmUgcG9rZXIgYWZpY2lvbmFkb3Mgd2lsbCBiZSBob25vdXJlZC4KSGFuZCAxOiBLS1E0MiwgSGFuZCAyOiBLS0o5OC4gQm90aCBwbGF5ZXJzIGhhdmUgYSBwYWlyIG9mIEtzLiBIYW5kIDEgd2lucywgc2luY2UgUSBpcyBoaWdoZXIgcmFuayB0aGFuIEouClRoZXJlIGFyZSBubyBmb29kcyB0aGF0IGFyZSB0b3RhbGx5IG9mZiBsaW1pdHMgd2hlbiBpdCBjb21lcyB0byBidWxraW5nIG9yIGN1dHRpbmcsIGl0IGp1c3QgZGVwZW5kcyBvbiB3aGV0aGVyIHlvdSBjYW4gZml0IHRoZW0gd2l0aGluIHlvdXIgZGlldCBzbyB0aGV5IG1lZXQgeW91ciBjYWxvcmllIGFuZCBudXRyaWVudCBnb2Fscy4gCllvdSBjYW5ub3QgbGlrZSBjb21wYW5pZXMuIENvbXBhbmllcyBhY3QgaW4gd2F5cyB0aGF0IGFyZSBub3QgY29tcGFyYWJsZSB0byBwZW9wbGVzLiAKSSBrbm93IGJlY2F1c2UgSSB1c2VkIHRvIHN0cmFpZ2h0ZW4gbXkgaGFpciBhbGwgdGhlIHRpbWUsIGFuZCBJIGRvbiBldmVuIGhhdmUgY3VybHkgaGFpciFJIGFncmVlIHdpdGggeW91LCBub3QgYWNjZXB0aW5nIGhvdyB5b3VyIGZyaWVuZHMgbG9vayBuYXR1cmFsbHkgaXMgcnVkZSBJTU8uIApJZiB5b3UgaGF2ZSBhbiBYYm94IDM2MCBmcmVlemluZyBwcm9ibGVtLCB5b3UncmUgbm90IGFsb25lLiBOZWFybHkgb25lIG1pbGxpb24gWGJveCBnYW1lcnMgYXJlIGZhY2VkIHdpdGggdGhpcyBmcmVlemluZyBwcm9ibGVtLiBFdmVuIE1pY3Jvc29mdCBoYWQgdG8gYWRtaXQgdGhhdCB0aGVyZSB3YXMgYSBwcm9ibGVtIGFuZCBpbiBKdWx5IG9mIDIwMDcgYWRtaXR0ZWQgdGhhdCBmaXZlIHBlcmNlbnQgb2YgYWxsIFhib3ggMzYwIGNvbnNvbGVzIGFyZSBmcmVlemluZyB1cCBhbmQgaXQgaXMgcHJvYmFibGUgdGhhdCB0aGUgcmVzdCBtYXkgZm9sbG93IHN1aXQuIApMZWFybmluZyB0aGUgYmFzaWMgbWF0aCBiZWhpbmQgbGltaXQgaG9sZCAnZW0gcG9rZXIgd2FzIG5vdCBhY3R1YWxseSB0aGF0IGhhcmQuIApUbyBmaW5kIHRoZSBiZXN0IG9ubGluZSBwb2tlciByb29tcyB0byBwbGF5IHBvdCBsaW1pdCBvbWFoYSB5b3Ugd2FudCB0byBmaW5kIG91dCB3aGF0IHBybyBwb2tlciBwbGF5ZXJzIGFyZSB0aGUgbm9ybWFsIHBsYXllcnMgYXJlIGZvbGxvd2luZy4gV2hpY2ggb25saW5lIHBva2VyIHJvb20gaXMgdGhlIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIgaXMgcGxheWluZyBhbmQgd2hvIGlzIHNwb25zb3JpbmcgaGltIG9yIGhlci4gT25jZSB5b3UgZmluZCBvdXQgdGhpcyB5b3Ugd2FudCB0byBrbm93IHdoaWNoIG9mIHRoZSBwb2tlciByb29tcyBoYXZlIHRoZSBtb3N0IGFjdGlvbiBhdCB0aGUgc3Rha2VzIHlvdSBwbGF5LiBOb3RoaW5nIHdvcnN0IHRoYW4gc2lnbmluZyB1cCB0byBhbiBvbmxpbmUgcG9rZXIgcm9vbSB0aGF0IGRvZXNuJ3QgaGF2ZSB0aGUgYWN0aW9uIGF0IHlvdXIgc3Rha2VzIGxldmVsLgpHaXZlIGEgc2ltcGxlIGV4YW1wbGUgYW5kIGdvIHRocm91Z2ggaXQgc3RlcCBieSBzdGVwLiBPbmNlIHlvdSBoYXZlIGludHJvZHVjZWQgdGhlIGNvbmNlcHQsIGFuZCBleHBsYWluZWQgdGhlIGRpZmZlcmVudCBzdGVwcyBpbnZvbHZlZCBpbiBkb2luZyB0aGUgY2FsY3VsYXRpb24sIHByb3ZpZGUgYSBzaW1wbGUgZXhhbXBsZS4gU2hvdyB0aGVtIGhvdyB5b3UgZmlndXJlIGl0IG91dCBzdGVwIGJ5IHN0ZXAuIElmIHlvdSBhcmUgdGVhY2hpbmcgdG8gYSBjbGFzc3Jvb20gb2Ygc3R1ZGVudHMsIHVzZSB0aGUgYmxhY2tib2FyZCB0byB3cml0ZSBvdXQgdGhlIHByb2JsZW0sIHRoZW4gdXNlIGEgZGlmZmVyZW50IGNvbG9yIHBpZWNlIG9mIGNoYWxrIChvciBtYXJrZXIpIHRvIHNob3cgdGhlbSBlYWNoIHN0ZXAgaW52b2x2ZWQgaW4gdGhlIGNhbGN1bGF0aW9uLgpIZSB3ZW50IHRvIHRoZSBVbml2ZXJzaXR5IG9mIE5ldmFkYSBMYXMgVmVnYXMsIHRoaW5raW5nIGhlIHdvdWxkIGdvIGludG8gdGhlIGhvdGVsIGluZHVzdHJ5LiAKVGhlIG5pZ2h0IFRydW1wIHdhcyBlbGVjdGVkIEkgaGFkIGEgYml0IG9mIGEgbWVudGFsIGJyZWFrLiAKSXQgdHJ1ZSB0aGF0IGdyZWF0IHdlYWx0aCwgYnkgaXRzZWxmLCBuZXZlciBtYWRlIGFueWJvZHkgaGFwcHkuIFRoZSBvbmx5IHBlb3BsZSBJIGV2ZXIgc2VlbiB3aG8gYXJlIHNhdGlzZmllZCB3aXRoIGxpZmUgYXJlIHBlb3BsZSB3aG8gYWNoaWV2ZSBzb21ldGhpbmcgYmV5b25kIG1lcmUgd2VhbHRoLiAKU29tZSBhZHZhbmNlZCBwbGF5ZXJzIHJhaXNlIG9uIHRoZSBmbG9wIGluIG9yZGVyIHRvIGdpdmUgdGhlbSBjb3JyZWN0IHBvdCBvZGRzIHRvIGNhbGwgb24gdGhlIHR1cm4gaWYgdGhlaXIgaGFuZCBkb2VzIG5vdCBpbXByb3ZlLiBUaGlzIGlzIGFuIGFkdmFuY2VkIHBsYXkgYW5kIHNob3VsZCBiZSBkb25lIG9ubHkgd2hlbiB5b3UgYXJlIGEgZmF2b3JpdGUgdG8gd2luIHRoZSBoYW5kIG9yIGhhdmUgdHJlbWVuZG91cyBpbXBsaWVkIG9kZHMuIElmIHlvdSBhcmUgYSBub3ZpY2UsIHNpbXBseSBtYXN0ZXJpbmcgeW91ciBhYmlsaXR5IHRvIHVuZGVyc3RhbmQgYW5kIHVzZSBwb3Qgb2RkcyBzaG91bGQgYmUgeW91ciBnb2FsLiBBcyB5b3UgZ3JvdyBhcyBhIHBsYXllciwgeW91IHdpbGwgc3RhcnQgdG8gc2VlIHNpdHVhdGlvbnMgaW4gd2hpY2ggeW91IGNhbiB1c2UgYWR2YW5jZWQgcGxheXMgc3VjaCBhcyB0aGlzLgpQZXJzb25uZSBuJ2FwcHJvdXZlIGNlIGdlbnJlIGRlIHZlbmdlYW5jZSBtYWlzIGlsIG4neSBhIHBhcyBsaWV1IGRlIHMnZW4gdG9ubmVyIG5pIGRlIHBsYWluZHJlIGNlcyBob21tZXMgcG9saXRpcXVlcyBxdWkgb250IHBsdXMgb3UgbW9pbnMgYXR0aXMgbGEgY29scmUgcG9wdWxhaXJlIHMnaWxzIHZlbmFpZW50ICBzdWJpciBkZXMgZG9tbWFnZXMgcXVlbGNvbnF1ZXMuVm9pY2kgbGUgY29tcHRlIHJlbmR1IGRlIGxhIHByZXNzZSA6VW5lIHRlbnRhdGl2ZSBkJ2luY2VuZGllIGEgZXUgbGlldSBhdSBkb21pY2lsZSBkdSBwcnNpZGVudCBkZSBsJ0Fzc2VtYmxlIG5hdGlvbmFsZSBSaWNoYXJkIEZlcnJhbmQuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtUaGVhdHJlIGFuZCBBcnRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25Ud2VsdmUgbW9udGhzIGFnbyBhbG1vc3QgdG8gdGhlIGRheSwgTHVjaW5kYWxlIFNhbSBHcmFldHogd2Fsa2VkIGluIHRvIHRoZSAgYXQgdGhlIHRhaWwgZW5kIG9mIGEgYnVja3Mgc2hvdywgYW5kIHdhbGtlZCBvdXQgd2l0aCBtb3JlIHRoYW4gJDM3MCwwMDAuIFRydWUgc3RvcnkuIEluIHRoZSBlYXJseSBob3VycyBvZiBTZXB0ZW1iZXIgMjUsIDIwMTYsIFNhbSBzYXQgZG93biBhdCBhIHBva2VyIHRhYmxlIGFuZCB3YXMgc29tZWhvdyBkZWFsdCB0aGUgZHJlYW0gaGFuZCAgIGEgcm95YWwgZmx1c2guIApTb3JyeSBmb3IgcmFtYmxpbmcgaXQncyBqdXN0IHN1Y2ggYSBjb21tb24gbWlzY29uY2VwdGlvbiB0aGF0IEkgZmVlbCBhcyB0aG91Z2ggSSBuZWVkIHRvIGludGVyamVjdC4gCldXSUkgVmV0IEZpbmFsbHkgR2V0cyBNdWNoIE5lZWRlZCBOZXcgUm9vZiBUaGFua3MgVG8gR2VuZXJvc2l0eSBPZiBDQlM0IFZpZXdlcnNUaGVyZSBpcyBub3cgYSBoYXBweSBlbmRpbmcgdG8gdGhlIHN0b3J5IG9mIGFuIGVsZGVybHkgd2FyIHZldGVyYW4gd2hvIHdhcyBpbiBkZXNwZXJhdGUgbmVlZCBvZiByb29mIHJlcGFpci4KUGFudHMsIHNob2VzLCBnbG92ZXMgYW5kIHNvbWUgb3RoZXIgdGhpbmdzIGNvbWUgaW4gcGFpcnMsIGFuZCBpbiBnZW5lcmFsIHVzYWdlLCBhIHBhaXIgaXMgdHdvIChhcyB5b3UgcHJvYmFibHkgYWxyZWFkeSBrbmV3KS4gClNpemUgaXMgbm90IHRoYXQgYmlnIG9mIGEgZGVhbC4gQW5kIEkgaGF2ZSB0byBiZSBob25lc3QsIGlmIHlvdSBtZWV0IGEgZmVtYWxlIHdobyBpcyBnb2luZyB0byBtYWtlIHlvdSBmZWVsIGJhZCBvciBpbnNlY3VyZSBhYm91dCBpdCwgZ2V0IHJpZCBvZiBoZXIgYmVjYXVzZSBzaGUgdHJhc2guIApQb3N0ZWQgYnkgdW5peHJhdCBhdCAxOjI4IFBNIG9uIEF1Z3VzdCA3LCAyMDA2CkZvciB0aGVzZSByZWFzb25zLCB5b3UgY2FuIG9mdGVuIHBsYXkgd2Vha2VyIGhhbmRzIHRoZSBjbG9zZXIgeW91IGdldCB0byB0aGUgYnV0dG9uLiBMZXQncyBhc3N1bWUgdGhhdCB0aGUgc21hbGwgYmxpbmQgaXMgaW4gc2VhdCAxLCB0aGUgYmlnIGJsaW5kIGlzIGluIHNlYXQgMiwgYW5kIHRoZSBidXR0b24gaXMgaW4gc2VhdCAxMC4gClRvIHRoZSBwb2ludCB3aGVyZSBJIGdldHRpbmcgYXR0aXR1ZGUgZnJvbSBoaW0gZXZlcnkgdGltZSB3ZSB0YWxrIGJlY2F1c2UgSSBkb24gd2FudCB0byBnbyBvdXQgYW5kIGhhbmcgd2l0aCBoaW0uIApXaGV0aGVyIG9yIG5vdCB0aGVzZSByZXN0cmFpbnRzICAgb3IgTWljaGlnYW4ncyBkcml2aW5nIHdpdGggYSBkb2cgaW4gdGhlIGxhcCAgIHdpbGwgYmVjb21lIGxhdyBpcyBhbnlvbmUncyBndWVzcy4gQnV0IG9uZSB0aGluZyBpcyBsaWtlbHk6IEV2ZW4gaWYgeW91ciBzdGF0ZSBkb2VzIG5vdCBzdHJpY3RseSBwcm9oaWJpdCB5b3UgZnJvbSBkcml2aW5nIHdpdGggYSBkb2cgaW4geW91ciBsYXAsIGlmIGhlJ3MgY2F1c2luZyB5b3UgdG8gZHJpdmUgZGFuZ2Vyb3VzbHksIHRoZSBwb2xpY2Ugd2lsbCBwcm9iYWJseSBmaW5kIHNvbWUgd2F5IHRvIGNpdGUgeW91Li4gClNvIEkgZ3Vlc3MgZWFjaCB3ZWFwb24gaXMgZGlmZmVyZW50LCBidXQgc29tZXRpbWVzIGV2ZW4gdGhlIHVubG9ja3MgZG9uIG1ha2Ugc2Vuc2UuIApBZ2FpbiBjYW1lIHRoZSByZWQgZmxhc2ggYW5kIHRoZSBzb3VuZCBvZiBhIGJsb3csIGFuZCBmbHV0dGVyaW5nIGl0cyB3aW5ncyBhcyB0aG91Z2ggdHJ5aW5nIHRvIGtlZXAgdXAgaW4gdGhlIGFpciwgdGhlIGJpcmQgaGFsdGVkLCBzdG9wcGVkIHN0aWxsIGFuZCBpbnN0YW50LCBhbmQgZmVsbCB3aXRoIGEgaGVhdnkgc3BsYXNoIG9uIHRoZSBzbHVzaHkgZ3JvdW5kLi4gCk9uIE1heSBEYXksIE1heSAxLCAyMDA3LCB0aGUgZGF5IG9mIHRoZSBjZWxlYnJhdGlvbiBvZiB0aGUgVmlyZ2luIE1hcnksIFRoZSBUZW1wbGUgb2YgTG92ZSAgIFRoZSBXb3JsZCBQZWFjZSBSZWxpZ2lvbiBhbm5vdW5jZWQgdGhhdCBOb3N0cmFkYW11cycgdGhpcmQgYW50aSBDaHJpc3Qgd2FzIHRoZSB1bHRyYSBoYXJkIGxpbmUgZGFpbHkgYWR2aXNvciBhbmQgcHVwcGV0IG1hc3RlciBvZiB0aGUgUHJlc2lkZW50IG9mIElyYW4sIElyYW5pYW4gQXlhdG9sbGFoIE1lc2JhaCAocHJvbm91bmNlZCBNYXliYWgsIGxpa2UgTm9zdHJhZGFtdXMnIE1hYnVzLCBsaWtlIEhpc3RlciBpcyB0byBIaXRsZXIpIFlhemRpLiBJcmFuaWFuIEF5YXRvbGxhaCBNZXNiYWggWWF6ZGkncyBkZWNsYXJlZCBpbnRlbnRpb24gaXMgdG8gZm9sbG93IHRoZSB3b3JkIG9mIEdvZCBvZiBNb3VudCBTaW5haSBhcyB0b2xkIHRvIHRoZSBhbmdlbCBHYWJyaWVsIGFuZCB0aGVuIHRvIHRoZSBQcm9waGV0IE11aGFtbWFkIChQQlVIKSBvdXRsaW5lZCBpbiB0aGUgS29yYW4gYW5kIHRoZSBIYWRpdGggYW5kICJNYWtlIFdhciBvbiB0aGUgQ2hyaXN0aWFucywgSmV3cyBhbmQgaW5maWRlbHMgYW5kIGJlIHJld2FyZGVkIHdpdGggZXRlcm5hbCBwYXJhZGlzZSBpbiBIZWF2ZW4gd2l0aCBHb2Qgb2YgTW91bnQgU2luYWksIGNyeXN0YWwgY2xlYW4gbGFrZXMgYW5kIHNwcmluZ3MsIGVuZGxlc3Mgd2luZSB3aXRoIG5vIHNpZGUgZWZmZWN0cywgNzIgdmlyZ2lucyBhbmQgODAsMDAwIHNlcnZhbnRzIHBlciBtYXJ0eXIgYW5kIGJlbGlldmVyLiIgKEtvcmFuIFN1cmEgQ2hhcHRlciA5OjUsIDI5IDMwIGFuZCBDaGFwdGVyIDU2LCAiTWVjY2EiKS4gCldlIGRvIG5vdCB3YW50IG91ciBzdWJyZWRkaXQgbGl0dGVyZWQgd2l0aCBnZW5lcmFsIHVwbGlmdGluZy4gCihMb29raW5nIGJhY2sgdG8gaXQgbm93LCB0aGF0IHN1Y2ggYSBXaW5ncyBlcmEgZHJlYW0gbG9sLikKSXRzIGNhcGl0YWwgaXMgRGFsbGFzLCBob3dldmVyIG90aGVyIG9wdGlvbnMgaGF2ZSBiZWVuIHByb3Bvc2VkLi4gCkFzIGZvciB0dXJuIHBsYXksIGVhc3kgZm9sZCB3aGVuIGZhY2luZyB0d28gYWxsIGlucywgYW5kIHByb2JhYmx5IGV2ZW4gb25lIGFsbCBpbiBmcm9tIGEgbG9vc2UgcGxheWVyLgpJdCBpcyBpbXBvcnRhbnQgb24gc2V2ZXJhbCBsZXZlbHMuIE9uIHRoZSBtb3N0IGJhc2ljLCBzZWxmaXNoIGxldmVsLCBpdCBoZWxwcyB5b3UgdG8gc3RheSBoaXJlZCBhbmQgaGVscHMgeW91IHRvIGFkdmFuY2UuIApJIGhvbmVzdGx5IGZlZWwgbGlrZSBiZWluZyBDRiBhbmQgcmVsaWdpb3VzIGhhcyBhbm90aGVyIG1hc3NpdmUgcmFuZ2Ugb2YgaXNzdWVzLiBJJ20gY29uc3RhbnRseSBiZWluZyBqdWRnZWQgYnkgdGhlIGNodXJjaCBwZW9wbGUgKCdjYXVzZSB3ZSBhbGwga25vdyBob3cganVkZ2VtZW50YWwgQ2hyaXN0aWFucyBjYW4gYmUpLiAKTm90IGhhdmluZyBuZXQgbmV1dHJhbGl0eSB1bmVxdWl2b2NhbGx5IGVuY291cmFnZXMgbW9ub3BvbHkgc3RydWN0dXJlIGZvciBzZXJ2aWNlcyB0aGUgSVNQIG9mZmVycyBiZXlvbmQgaW50ZXJuZXQgYWNjZXNzLCBhbmQgdHJ5aW5nIHRvIGFyZ3VlIG90aGVyd2lzZSBtYWtlcyB5b3UgbG9vaywgZnJhbmtseSwgc3VwZXIgaWdub3JhbnQsIGxpa2UgYSB0cm9sbCwgb3IgcHJvYmFibHkgc29tZSBraW5kIG9mIHB1YmxpYyBwbGFudC4KV2hhdCBoYXBwZW5zLCBtb3JlIG9yIGxlc3MsIGlzIHRoaXM6IGNvbmRpdGlvbnMgb2YgbWV0YWJvbGljIGRlbWFuZCwgYWN0aXZhdGlvbiBvZiB0aGUgaW50ZXJjb3N0YWwgbXVzY2xlcyB0byBtYWludGFpbiBsdW5nIGluZmxhdGlvbiBkdXJpbmcgZXhwaXJhdGlvbiBzZXRzIGluIG1vdGlvbiByZWZsZXggY29udHJhY3Rpb24gb2YgbGFyeW5nZWFsIG11c2NsZXMsIGNyZWF0aW5nIGEgc3lzdGVtIHVuZGVyIHByZXNzdXJlIHRoYXQgbGVuZ3RoZW5zIHRoZSBleHBpcmF0aW9uIHBoYXNlIG9mIHRoZSBicmVhdGggYW5kIGVuaGFuY2VzIG94eWdlbmF0aW9uIG9mIHRoZSBibG9vZC4gRXhwaXJhdGlvbiBhZ2FpbnN0IHRoZSBjb25zdHJpY3RlZCBnbG90dGlzIHByb2R1Y2VzIHB1bHNlcyBvZiBzb3VuZC4gVHJhbnNsYXRpb246IEluIHRoZSByaWdodCBjaXJjdW1zdGFuY2VzLCB0aGUgc291bmQganVzdCBoYXBwZW5zLi4gCldoZW4gc2Vla2luZyBvdXQgcXVhbGl0eSBjYXNpbm8gc3R5bGUgYnJpZGdlIHBsYXlpbmcgY2FyZHMsIHlvdSBzaG91bGQgb3B0IGZvciBuYW1lIGJyYW5kcyBsaWtlICJSYW1hZGEgRXhwcmVzcyIsICJFeGNhbGlidXIiIGFuZCAiSmFtZXMgQm9uZCBDYXNpbm8gUm95YWxlIi4gCkFuZCB0aGUgZ3V5IHdobyBzaG90IGJsYWNrIHBlb3BsZSBhdCBhIHN0b3JlLiAKVGhlcmUgd2FzIG5vdGhpbmcgc3BlY2lhbCBhYm91dCBDOXMgcnVuLCBhbmQgdGhlIGZhY3QgdGhhdCB0aGUgdGVhbSBmYWlsZWQgdG8gZG8gYW55dGhpbmcgYWZ0ZXJ3YXJkcyBqdXN0IGNvbXBvdW5kZWQgaG93IG11Y2ggb2YgYSBtZWFuaW5nbGVzcyBmbHVrZSBpdCB3YXMuIFZQIGF0IGxlYXN0IGNhcnJpZWQgb24gYmVpbmcgYSBnb29kIHRlYW0gYWZ0ZXIgd2lubmluZyBLYXRvd2ljZS4gQzkgaW1wbG9kZWQgYWxtb3N0IGltbWVkaWF0ZWx5LgpObyBzcGFtLCBmdW5kcmFpc2luZywgdm90ZSBkcml2ZXMsIHN1cnZleXMgb3Igc3R1ZGllczogUGxlYXNlIHJlYWQgUmVkZGl0IHNlbGYgcHJvbW90aW9uIHJ1bGVzIGJlZm9yZSBwb3N0aW5nIHlvdXIgb3duIGNvbnRlbnQuIFJlYWQgbW9yZSBhYm91dCBmdW5kcmFpc2luZywgc3VydmV5cyBhbmQgc3R1ZGllcyBoZXJlLgo0LCBOby4xLCAxOTk0LCAzNiAzOSAiUG9zdHVyYWwgYW5kIFJlc3BpcmF0b3J5IE1vZHVsYXRpb24gb2YgQXV0b25vbWljIEZ1bmN0aW9uLCBQYWluLCBhbmQgSGVhbHRoIiBjb25jbHVkZWQgdGhhdCBwb3N0dXJlIGFmZmVjdHMgYWxsIGh1bWFuIGZ1bmN0aW9uIGluY2x1ZGluZyBwcm9wZXIgYnJlYXRoaW5nLCBtdXNjdWxvc2tlbGV0YWwgcGFpbiwgbWluZC9ib2R5IGludGVyYWN0aW9uIGFuZCBiYWxhbmNlLCB2b2NhbCBhYmlsaXR5IHNwZWFraW5nIGFuZCBzaW5naW5nLCBwcm9wZXIgaW1tdW5lIGZ1bmN0aW9uIGFuZCwgb2YgY291cnNlLCBvdmVyYWxsIGhlYWx0aC4gClJvYXN0IHRoZSB0dXJrZXkgaW4gdGhlIHByZWhlYXRlZCBvdmVuIHVudGlsIHRoZSBza2luIGdldHMgcmVhbGx5IG5pY2UgYW5kIGJyb3duLCBhYm91dCA0MCBtaW51dGVzLiBMb3dlciB0aGUgb3ZlbiBoZWF0IHRvIDE4MCBmb3IgdGhlIHJlbWFpbmRlciBvZiB0aGUgY29va2luZyB0aW1lLiAKU2VwcHVrdSB3b3VsZCBoYXZlIGJlZW4gaGlzIGFuc3dlciB0aGUgaG9ub3JhYmxlIHdhcnJpb3Igd2F5IG91dC4gClJlcHVibGljYW5zIGRlYWwgb3V0IGEgaGFuZCBvZiBvdmVycmVhY2ggcG9rZXIgYXQgdGhlIGNhcGl0b2wKSG93ZXZlciwgdGhleSBzaG91bGQgbGFzdCBhIGxpZmV0aW1lIHdoZW4gcHJvcGVybHkgaGFuZGxlZC4gCkFsb25nIHdpdGggZmFjaWxpdHkgcG9vbHMsIHBlZGljdXJlcyBjYW4gYWxzbyBiZSB0cm91Ymxlc29tZS4gRXZlbiB0aGUgYmVzdCBzcGFzIGV4cGVyaWVuY2UgY2hhbGxlbmdlcyBrZWVwaW5nIHRoZWlyIHBvb2xzIGFuZCBwZWRpY3VyZSBlcXVpcG1lbnQgZnJlZSBvZiBiYWN0ZXJpYSwgc28gcHJlZ25hbnQgd29tZW4gYXJlIHByb2JhYmx5IGJldHRlciBvZmYganVzdCBza2lwcGluZyB0aGVzZSBwYXJ0aWN1bGFyIHNwYSBzZXJ2aWNlcyBmb3IgYSBmZXcgbW9udGhzLCBvciBhdCB0aGUgdmVyeSBsZWFzdCBkb2luZyBhIHRob3JvdWdoIFEgd2l0aCB0aGUgc3BhIHByb2Zlc3Npb25hbHMgdG8gZmluZCBvdXQgd2hhdCBwcmVjYXV0aW9ucyB0aGV5IHRha2UgdG8ga2VlcCB0aGluZ3MgY2xlYW4uIApJdCBiZWVuIGEgdmVyeSBsb25nIHRpbWUgc2luY2UgSSBmb2xsb3dlZCBpdCwgYnV0IGNvbXBldGl0aXZlIFRlYW0gRm9ydHJlc3MgMiBoYWQgdGhlIHNhbWUgdGhpbmcgZ29pbmcgb24gd2l0aCBTb2xkaWVyIGFuZCBEZW1vbWFuLiBBIGdvb2QgRGVtb21hbiBjb3VsZCBiYXNpY2FsbHkgc3RheSBpbiB0aGUgYWlyIHRoZSBlbnRpcmUgZ2FtZSBpZiBoZSB3YW50ZWQgdG8gYW5kIHRoZXJlIHdhcyBhIGxvdCB0aGF0IHdlbnQgaW50byBiZWluZyBhIGdvb2QgU29sZGllci4gRm9yIEZQUywgdGhvdWdoLCBUcmliZXMgYW5kIFRyaWJlcyAyIGhhdmUgZXZlcnlvbmUgYmVhdC4KV2VsbCBoYXZlIGZ1biB3aXRoIHRoaXMgaXQnbGwgdHJpY2sgc29tZSBwZW9wbGUgc29tZSBwZW9wbGUgd2lsbCBjYXRjaCBpdCBvZmYgdGhlIGJhY2sgdSBqdXN0IGdvdHRhIGJlIGNhcmVmdWwgb2YgaG93IHUgZG8gaXQuLiAKVGhpcyBpcyBub3QgYSBxdWVzdGlvbiBvZiBwcm9iYWJpbGl0eSwgc28geW91IGhhdmUgdG8gYXNzdW1lIHRoZSB1bmx1Y2tpZXN0IG9mIHNjZW5hcmlvcy4gTGV0cyBzYXkgeW91IG1hbmFnZSB0byBwdWxsIG91dCB0ZW4gcmVkIGNoaXBzIGluIGEgcm93IHJpZ2h0IG9mZiB0aGUgYmF0LiAKRm9yIHRoZSBsYXR0ZXIsIHNoZSBtYXJpbmF0ZXMgaXQgYSBzYXVjZSBhY2hpb3RlIHBhc3RlLCBhcHBsZSBjaWRlciwgdG9tYXRvLCBnYXJsaWMsIGZyZXNoIG9yZWdhbm8sIHNhbHQgYW5kIHBlcHBlciAobWFyaW5hdGluZyBpcyBiaWcgaW4gdGhlIFl1Y2F0YW4pLi4gCkFzIEVkd2FyZCdzIGRlYXRoIHdhcyBub3QgYXZlbmdlZCwgbm9yIHdhcyBoZSBnaXZlbiBhIHByb3BlciBmdW5lcmFsIHVudGlsIDk4MCwgaXQgc2VlbWVkIHRoYXQgRW5nbGFuZCB3YXMgdW5kZXJnb2luZyBhIHBlcmlvZCBvZiBpbnN0YWJpbGl0eSBxdWl0ZSB1bmxpa2UgdGhlIEdvbGRlbiBBZ2UgZXhwZXJpZW5jZWQgZHVyaW5nIEVkZ2FyJ3MgcmVpZ24uIApBaGVsbHV2YWRlYWxzb24gdQpUdXJucyBvdXQgaW4gbXkgaW5maW5pdGUgd2lzZG9tIEkgZWl0aGVyIEEpIERlbGV0ZWQgYWxsIG9mIGhpcyBzaG93IGV2ZW4gdGhvdWdoIEkgcHJvbWlzZWQgbXlzZWxmIGl0IHdhcyB0aGUgb25lIHRoaW5nIEkgbmV2ZXIgZ2V0IHJpZCBvZiwgb3IgQikgSSBzYXZlZCBpdCBzb21ld2hlcmUgaSBuZXZlciBnb2luZyB0byBmaW5kIGl0LiBJIHNlbWkgZXh0cmVtZWx5IHVwc2V0IGFib3V0IGFsbCBvZiB0aGlzIGFuZCBub3cgSSBjcmllZCBhYm91dCBpdC4gRnVjayBtZS4uIApCdXQgY2VudHJhbCBiYW5rZXJzIGhhdmUgc2Vuc2l0aXZpdGllcyBvZiB0aGVpciBvd24uIApUaGVyZSBhcmUgbWFueSBmYWN0b3JzIHdoeSBzb21lIHBlb3BsZSBoYXZlIGEgcmVjZWRpbmcgaGFpcmxpbmUuIApCdXQgdGhlbiBpbWFnaW5lIGlmIHNvbWVvbmUgZ2F2ZSBHcmF2aXR5IGEgZnJhbmNoaXNlIHNwb3QsIGFuIG9yZyB0aGF0IHdvdWxkIGRpc3NhcHBlYXIuIFdoaWxlIGl0IGdvb2QgdG8gc2VlIHRoYXQgY3VycmVudCBvcmdzIGhhdmUgaW52ZXN0ZWQgYSBsb3QgaW50byB0aGUgc2NlbmUgYSBsb3Qgb2YgdGhlc2Ugb3JncyBoYXZlIHZlcnkgbGl0dGxlIHRvIHNob3cgd2hlbiBpdCBjb21lcyB0byBvdXRzaWRlIG9mIHRoZSBMZWFndWUgb2YgTGVnZW5kcyBzY2VuZSAoUDEgY29tZXMgdG8gbWluZCwgRWNobyBGb3ggbG9va3MgbGlrZSBhIGRpc2FzdGVyKS4gCihFZGl0IG5vcGUsIGlmIHlvdSBnb2luZyBpbiB0d28gd2Vla3MgaXQgYmUgdG9vIGNvbGQhKSBUaGUgbXVzZXVtIHVuZGVyIHRoZSBwbGF6YSBpcyBjb29sIGZvciBhIHF1aWNrIHZpc2l0LiBUaGV5IGhhdmUgYSBmZXcga2lkIGZyaWVuZGx5IHRoaW5ncy4gCkFiZXIgZGEgZGFzICAgaGllciBiZXIgZWluZW4gZ2VzYW10ZW4gTW9uYXQgZGF1ZXJ0LCBrYW5uIHNpY2ggaGllciBlaW4gZG9jaCBzZWhyIGFuc2VobmxpY2hlciBCZXRyYWcgYW5zYW1tZWxuLiAKUG9pbnQgMi4gbm8gb2J2aW91c2x5IG5vdC4gYnV0IEkgd291bGQgZXhwZWN0IGF0IGxlYXN0IHNvbWUgZWxldmF0ZWQgd2FybWluZyB0cmVuZCBjb21wYXJlZCB0byBhbnkgb3RoZXIgMzAgeWVhciBzbGljZSwgY29uc2lkZXJpbmcgaG93IG11Y2ggQ28yIHdlIGFyZSBub3cgcHV0dGluZyBvdXQuIEl0cyBsaXRlcmFsbHkgMTB4IG1vcmUgdGhlbiB0aGF0IHRpbWUgZnJhbWUuIGFuZCBsaWUgc3RyYWlnaHQgdG8gb3VyIGZhY2VzIGFuZCB0ZWxsIHVzIHRoYXQgaXRzIG5vdCBwb3NzaWJsZSB0aGF0IG5hdHVyYWwgdmFyaWFiaWxpdHkgY2FuIGRvIHRoYXQuCkJlZm9yZSB5b3UgYXR0ZW1wdCB0byB0YWNrbGUgYW55IG90aGVyIGlzc3VlcyBJbiB5b3VyIHJlbGF0aW9uc2hpcCB3aXRoIHlvdXIgbW9tLCBJIGNhbid0IHN0cmVzcyBpdCBlbm91Z2ggdGhhdCB5b3Ugc2hvdWxkIHByb2JhYmx5IGdldCB5b3VyIG93biBwbGFjZSwgc28gYXMgbm90IHRvIGZ1cnRoZXIgY29tcHJvbWlzZSB5b3VyIGxpdmluZyBhcnJhbmdlbWVudCBhbmQgbWFrZSB0aGluZ3MgbW9yZSBjb21wbGljYXRlZCBhbmQgc3RyZXNzZnVsLiBTb3JyeSBpZiBJJ3ZlIHJlcGVhdGVkIG15c2VsZiBoZXJlLCBidXQgSSBqdXN0IGdldCB0aGUgZmVlbGluZyB0aGVyZSBpcyBtb3JlIGRpc2N1c3MgdGhhbiB0aGUgd2F5IHNoZSBpcyBjb25mdXNpbmcgeW91ciBiYWJ5LCB5b3UganVzdCBoYXZlIHRvIGJlIGNhcmVmdWwgYWJvdXQgaG93IHlvdSBkbyBpdC4gQWZ0ZXIgYWxsLCBoYXZpbmcgc3BhY2UgdG8gYnJlYXRoZSBhZnRlciB5b3UgaGF2ZSBhIGRpc2FncmVlbWVudCBjYW4gbWFrZSB0aGluZ3MgbXVjaCBlYXNpZXIgdG8gZ2V0IG92ZXIuClRoZSBtYW5hZ2VyIHRvbGQgbWUgc2hlIHJlZnVuZCBteSBjIGNhcmQgcGF5bWVudCwgdGhlbiBwcmV0ZW5kZWQgdG8gbm90IGtub3cgaG93IHRvIGRvIGl0IHVwIGZyb250IGFzIEkgc3Rvb2QgdGhlcmUsIGZlZCB1cC4gV2hlbiBJIHRocmVhdGVuZWQgdG8gY2FsbCBteSBiYW5rIGFuZCBoYXZlIHRoZSBjaGFyZ2UgY29udGVzdGVkLCBzaGUgc3VkZGVubHkgcmVtZW1iZXJlZCBob3cuIEZ1bm55IGhvdyB0aGF0IGdvZXMuIFN0YXkgYXdheS4gU29tZW9uZSBzaHV0IHRoaXMgcGxhY2UgZG93biBhbmQgbGV0IHRoZXNlIGdpcmxzIGdvIHdvcmsgc29tZXdoZXJlIGVsc2UuIApNYXliZSBvbiB0aGUgc2lkZSBhIGxpdHRsZSwgZ3JhZHVhdGluZyB0byB0b3VjaGluZyB0aGUgY2xpdCB2ZXJ5IGxpZ2h0bHkgZXRjLiAKQnV0IHRoZSBiaWcgdGhpbmcgaXMgd2FpdCBpdCBvdXQgd2hpbGUgc3RyZXRjaGluZyBldmVyeWRheSBhbmQgc2VlIGlmIHlvdSBmZWVsIGJldHRlciBhZnRlciBhIHdlZWsuIApXaGlsZSBhbGwgdHlwZXMgb2YgbWFzc2FnZSBjYW4gaGVscCByZWxpZXZlIHBhaW4gY2F1c2VkIGJ5IHRlbnNlIG11c2NsZXMsIHN0aWZmIGpvaW50cyBvciBpbmp1cmllcywgYSBob3Qgc3RvbmUgbWFzc2FnZSBtYXkgcHJvdmlkZSBncmVhdGVyIHJlbGllZiBkdWUgdG8gdGhlIGludGVuc2UgbmF0dXJlIG9mIHRoZSBtYXNzYWdlLiBCZWNhdXNlIHRoZSBob3Qgc3RvbmVzIGFsbG93IHRoZSBtYXNzYWdlIHRoZXJhcGlzdCB0byBwZW5ldHJhdGUgZGVlcGVyLCB5b3UgbWF5IGZpbmQgdGhhdCBhIGhvdCBzdG9uZSBtYXNzYWdlIGxlYXZlcyB5b3UgZmVlbGluZyBwaHlzaWNhbGx5IGJldHRlciB0aGFuIGEgU3dlZGlzaCBvciBkZWVwIHRpc3N1ZSBtYXNzYWdlIHRoYXQgZG9lcyBub3QgaW5jb3Jwb3JhdGUgaGVhdC4uIApHZXQgY29tZm9ydGFibGUgYXQgYSBnYW1pbmcgdGFibGUgYW5kIGtlZXAgYW4gZXllIG91dCBmb3IgdGhlIHBpdCBib3NzLiBIZSdzIHRoZSBvbmUgaW4gYSByZWFsbHkgc3BpZmZ5IHN1aXQsIHdhbmRlcmluZyBhbW9uZyB0aGUgdGFibGVzLCBtYWludGFpbmluZyBhIHNlZW1pbmdseSBjYXN1YWwgYnV0IHdhdGNoZnVsIGV5ZSBvbiBhbGwgdGhhdCBnb2VzIG9uLiAKSXQgbm9taW5hdGVkIGZvciBiZXN0IGZpbG0gYW5kIGJlc3QgZm9yZWlnbiBmaWxtLiAKTGV2ZWxzIG9mIGxhY3RhdGUgYXJlIHVzdWFsbHkgYmFjayB0byByZXN0aW5nIGxldmVscyB3aXRoaW4gNjAgbWludXRlcyBvZiBleGVyY2lzZS4gSXQgaXMgbm90IHRoZSBjYXVzZSBvZiBzb3JlbmVzcywgdGhhdCBjb250cm92ZXJzeSB3YXMgc2V0dGxlZCBpbiBteSBmaWVsZCB5ZWFycyBhZ28uIApCb2Igd2lsbCB0YWtlIHR3byBzdGVwcyBmb3J3YXJkIHdpdGggTWFubnkgdGhlbiB0YWtlIG9uZSBzdGVwIGJhY2ssIG1ha2luZyB0aGUgZmFucyB3YW50IG1vcmUgYW5kIG1vcmUgd2hpbGUgbWlsa2luZyB0aGVtIGF0IHRoZSBzYW1lIHRpbWUuIApUaGUgdHdpc3QgZGlkIG1lc3Mgd2l0aCB0aGUgZmxvdywgYnV0IGl0IHdhcyBjb21wbGV0ZWx5IHVuZXhwZWN0ZWQgYW5kIEkgZW5qb3llZCB0aGF0LiAKSSBzZWVuIHdvcnNlIHRoaW5ncyBpbiB0aGUgcGFzdCAxMCB5ZWFycywgYnV0IHRoYXQgaXMgYWx3YXlzIHNvbWV0aGluZyBJIHRoaW5rIGFib3V0IHdoZW4gdGhlIHRvcGljIGNvbWVzIHVwLi4gClBva2VyIHBsYXllciBTYW0gSG9sZGVuIGhhcyBtYWRlIGl0IHRvIHRoZSBmaW5hbCB0YWJsZSBvZiB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIHRvdXJuYW1lbnQgaW4gTGFzIFZlZ2FzLCBqdXN0IGEgeWVhciBhZnRlciB0dXJuaW5nIHByb2Zlc3Npb25hbC4gCkxvcyBBbmdlbGVzIGFyZWEgdGhlcmFwaXN0cyBhbmQgY291bnNlbG9ycyBzZW5kIG1hbGUgcGF0aWVudHMgdG8gSmFuZSBhbmQgdGhlbiBzaGUgdGFrZXMgb2ZmIGhlciBjbG90aGVzIGFuZCBlbmdhZ2VzIGluIHRoYXQgdGltZSBwcm92ZW4gcGVkYWdvZ2ljYWwgbWV0aG9kIG9mIHRlYWNoaW5nIGJ5IGRvaW5nLiAKMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvLiAKQ29tcGFueSBJIHdvcmtlZCBmb3IgbWFkZSBjdXJic2lkZSBjb250YWluZXJzLCB0aGUgZ3JlZW4gYmlucywgY29tcG9zdGVycywgcmFpbiBiYXJyZWxzLCBhIGxvdCBvZiBlbnZpcm9ubWVudGFsIHByb2R1Y3RzLCBzbyBJIHdhcyBpbiB0aGF0IGNpcmNsZSBvZiB0aGlua2luZywgaGUgc2F5cy4gZGF5LCBJIHdhcyBzaXR0aW5nIGluIG15IGtpdGNoZW4gbG9va2luZyBhdCBhIGxpdHRsZSBjb250YWluZXIgd2l0aCBhIGhhbmRsZSBhbmQgSSB0aG91Z2h0IHdlIHNob3VsZCBtYWtlIGEgY29udGFpbmVyIHdpdGggYSBoYW5kbGUgdG8gc3RvcmUgYW5kIG9yZ2FuaXplIHlvdXIgZW1wdHkgYmVlciBhbmQgd2luZSBib3R0bGVzLiBDYW5hZGEsIGJvdHRsZSByZWN5Y2xpbmcgaXMgZW5jb3VyYWdlZCBhbmQgcmV3YXJkZWQgd2l0aCBhIHJlZnVuZCBvZiA1IHRvIDI1IGEgYm90dGxlLiBvdXIgb3duIGV4cGVyaWVuY2UsIHdlIGtuZXcgaWYgdGhlcmUgd2FzIG5vIGJveCB0byBzdG9yZSB0aGUgZW1wdGllcywgb2Z0ZW4gd2UganVzdCBwdXQgdGhlbSBpbiB0aGUgYmx1ZSBib3gsIHdoaWNoIG9mdGVuIGVuZCB1cCBpbiBsYW5kZmlsbHMsIENocmlzIHNheXMuCjguIFRoZSBSYWlzZXIgICB0aGlzIGlzIGEgcGxheWVyIHdobyBjb21lcyBtb3N0bHkgZm9yIHRoZSBjb21yYWRlcmllLCBidXQgd2hvIGFsc28gcGxheXMgcHJldHR5IGFnZ3Jlc3NpdmUgcG9rZXIgYmVjYXVzZSBoZSdzIHVuY29uY2VybmVkIGFib3V0IHRoZSBvdXRjb21lLiAKVGhleSBhcmUgZGVtYW5kaW5nIHRoYXQgZm91bmRlciBhbmQgQ0VPIE5vZWwgQmlkZXJtYW4sIHRoZSBzZWxmIHN0eWxlZCAiS2luZyBvZiBJbmZpZGVsaXR5Iiwgc2h1dHMgdGhlIHdob2xlIG9wZXJhdGlvbiBkb3duLgpBY2NvcmRpbmcgdG8gUGx1dGFyY2gsIHRoZXJlIHdhcyBhIGRlY3JlcGl0IG9sZCBTcGFydGFuIG5vYmxlIG5hbWVkIENsZW9ueW11cywgd2hvLCB0aHJvdWdoIGx1Y2sgYW5kIHByb2JhYmx5IGEgbG90IG9mIG1vbmV5LCBtYXJyaWVkIHRoZSBtdWNoIHlvdW5nZXIgQ2hlbGlkb25pcyAod2hvIHdhcyBhIGxhZHksIGluIGNhc2Ugd2UgaGFkIHRvIG1ha2UgdGhhdCBjbGVhcikuIEl0IHNob3VsZCBhbHNvIGJlIG5vdGVkIHRoYXQgQ2xlb255bXVzIHdhcyBhIGJpdCBvZiBhIC4gQXMgb2Z0ZW4gaGFwcGVucyBpbiB0aGVzZSBjYXNlcywgQ2xlb255bXVzIGVuZGVkIHVwIGN1Y2tvbGRlZCB3aGVuIENoZWxpZG9uaXMgZmVsbCBpbiBsb3ZlIHdpdGggaGVyIGdyZWF0IG5lcGhldy4gQW5kLCBhcyBjdWNrb2xkZWQgbWVuIG9mdGVuIGRvLCBoZSBsZWZ0IHRvd24gYW5kIGNvbnZpbmNlZCBhIG5laWdoYm9yaW5nIGFybXkgdG8gam9pbiBoaW0gaW4gaGlzIHF1ZXN0IHRvIGV4YWN0IGhpcyByZXZlbmdlIG9uIHRoZSBjb3VwbGUvcmVsYXRpb25zIHdobyB3cm9uZ2VkIGhpbS4KRklSU1QgT1ZFUkFMTDogVGhlIDY3IHJlbWFpbiB0aGUgZnJvbnRydW5uZXIgZm9yIHRoZSBIYW1pbHRvbiBTcGVjdGF0b3IgVHJvcGh5IGFzIHJlZ3VsYXIgc2Vhc29uIGNoYW1wcyBhbmQgdGhlIG9ubHkgdGVhbSB0aGF0IGNhbiByZWFsbHkgY2F0Y2ggdGhlbSBpcyBMb25kb24uIFRoZSBLbmlnaHRzIGFyZSBtb3JlIGNvbmNlcm5lZCB3aXRoIGxvY2tpbmcgZG93biBmaXJzdCBpbiB0aGUgV2VzdGVybiBDb25mZXJlbmNlIHdoaWxlIFNhZ2luYXcgYW5kIFNhdWx0IFN0ZS4gTWFyaWUgcHVyc3VlIHRoZW0uIElmIExvbmRvbiBkb2VzIHBhc3MgT3R0YXdhLCBnaXZlIHRoZW0gZnVsbCBjcmVkaXQuIFRoZWlyIGZpbmFsIGZvdXIgZ2FtZXMgaW5jbHVkZSB0aGUgU3Bpcml0ICh0d2ljZSksIEd1ZWxwaCBhbmQgdGhlIEdyZXlob3VuZHMgd2l0aCB0aHJlZSBvZiB0aG9zZSBvbiB0aGUgcm9hZC4gVGhlIEJhcmJlciBQb2xlcywgbWVhbndoaWxlLCBoYXZlIHR3byBlYWNoIGFnYWluc3QgS2luZ3N0b24sIFBldGVyYm9yb3VnaCBhbmQgT3NoYXdhLgpGaWxsZXIgaXMgc3RpbGwgYmVpbmcgdXNlZCwgYnV0IG1vcmUgc3BhcmluZ2x5LiAKVGhlIHRpbWUgbXkgYmxhY2sgZnJpZW5kIHdhcyBwdWxsZWQgb3ZlciBpbiBteSBtb3N0bHkgd2hpdGUgbmVpZ2hib3Job29kLCBwdWxsZWQgZnJvbSB0aGUgY2FyLCBwYXQgZG93biBzZWFyY2hlZCwgaGFkIGhpcyBiYWcgc2VhcmNoZWQsIGFsbCB3aGlsZSBJIHdhcyBjb21wbGV0ZWx5IGlnbm9yZWQuIEhlIGRpZCAndCBzbyBtdWNoIGFzIGRyaW5rIGF0IHBhcnRpZXMsIG1lYW53aGlsZSBJIGhhZCBhIGdyYW0gaW4gbXkgcG9ja2V0IGFuZCB0aGUgY29wcyBuZXZlciBldmVuIGxvb2tlZCBhdCBtZSBiZWNhdXNlIG9mIG15IHNraW4gY29sb3IuLiAKQnVyZ295bmUncyBjaGFsbGVuZ2VzIEJlZm9yZSBhcHBlYXJpbmcgb24gdGhlIHNob3csIEJ1cmdveW5lIGhhZCBiZWVuIHdvcmtpbmcgb24gb3BlcmF0aW9ucyBhbmQgc3lzdGVtcyBmb3IgYSBtdWx0aSB1bml0IGJ1c2luZXNzIGZvciB0d28geWVhcnMuIApBcmUgeW91IG5vdyBnb2luZyB0byBhcmd1ZSB0aGF0IEJvRCBzZWFyY2ggaGlzdG9yeSBkb2VzbiBlcXVhdGUgdG8gbXVyZGVyIGVpdGhlcj8gSSBhZ3JlZSwgYnV0IGl0IGFuIGluZGljYXRpb24uIFRoZSBzYW1lIHN0YW5kYXJkIGFwcGxpZXMgdG8gYm90aC4uIApNb3N0IFJNVHMgbWFrZSAzMCAgIDUwayBhIHllYXIgKGxlc3MgdGhhbiBJIGEgcHJvZmVzc2lvbmFsIG1ha2UpIGFuZCBhcmUgc2VsZiBlbXBsb3llZCAodGhlcmVmb3JlIGxpa2VseSBub3QgY29udHJpYnV0aW5nIHRvIEVJIG9yIENQUCBhbmQgaGF2ZSBubyBiZW5lZml0cykuIFRoZXkgYXJlIGF0IHJpc2sgb2YgZGV2ZWxvcGluZyBzZXZlcmUgaGFuZCBwcm9ibGVtcyBjYXVzaW5nIGVhcmx5IHJldGlyZW1lbnQgZnJvbSB0aGUgdHJhZGUuIApGUkVFIEhEIE1PVklFIFNJVEUgLiAKVGhlIHNlYWxzIGNhbXBhaWduIHNob3dlZCB0aGF0IHRoZSA5OSBwZXJjZW50LCBldmVuIHdoZW4gZmVlbGluZyBkaXNlbmZyYW5jaGlzZWQsIGFyZSBoYXJkbHkgcG93ZXJsZXNzIHRvIHJlcGFpciB0aGUgc2FmZXR5IG5ldCAgIGFuZCBldmVuIGluZmx1ZW5jZSB0aGUgYWN0aW9ucyBvZiB0aGUgMSBwZXJjZW50LiAK|<---