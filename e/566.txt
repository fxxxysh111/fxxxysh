--->|Q2hlY2sgb3V0IHRoZSBsb2NhbCBtdXNpYyBzY2VuZSBldmVyeSB3ZWVrZW5kIGluIFBhcmxheSBMb3VuZ2Ugb3IgY29tZSBkb3duIGZvciBhIGhlYWRsaW5pbmcgcGVyZm9ybWVyIGluIG91ciAzLDAwMCBzZWF0IElzbGFuZCBFdmVudCBDZW50ZXIhIEFueSB3YXkgeW91IHBsYXksIFRyZWFzdXJlIElzbGFuZCBSZXNvcnQgQ2FzaW5vIGlzIGEgc3VyZSBiZXQgZm9yIGEgZ29vZCB0aW1lIS4gCk1heWJlIG5vdCB0aGUgbmljZXN0LCBidXQgdGhpcyBoYXMgaGFkIHRoZSBncmVhdGVzdCBpbXBhY3Qgb24gbWUuIEFuIGVsZGVybHkgQXNpYW4gd29tYW4gd2FzIHdhbGtpbmcgcGFzdCBteSBob21lIHdoZW4gYSBzdWRkZW4gZG93biBidXJzdCBvZiByYWluIHN0YXJ0ZWQgd2l0aCBubyBlbmQgaW4gc2lnaHQuIFNoZSB0b29rIHNoZWx0ZXIgaW4gb3VyIGVudHJ5IHVuZGVyIHRoZSBjYW5vcHkgYXQgdGhlIGZyb250IGRvb3Igd2hpbGUgaXQgcG91cmVkLiAKU28gSSB0ZW5kIHRvIGJlIG92ZXJseSBndWxsaWJsZSB3aXRoIHRoaW5ncyBpbiBnZW5lcmFsIHNvIHRha2UgbXkgb3BpbmlvbiB3aXRoIGEgZ3JhaW4gb2Ygc2FsdCBidXQgSSBiZWxpZXZlIHRoYXQgdGhpcyBpcyBhIHNvbHZhYmxlIGlzc3VlLiAKVGhleSB3YW50ZWQgdG8gc3BvaWwgdGhlIHBpY25pYywga2lsbCBpdCBvZmYgZm9yIGdvb2QuIAp3aWZlIGFuZCBoZXIgZ3JhbmRwYXJlbnRzIGJlZm9yZSB0dXJuaW5nIGd1biBvbiBoaW1zZWxmCkhlIHdhbnRzIGxhZGRlcnMgYW5kIHdoYXRldmVyIGVsc2UgZm9yIHRoZSBmaXJlLiAKVXNpbmcgYSBoeWJyaWQgdG9wIGNhcCBkZXZpY2Ugd2l0aCBhIG5vbiBoeWJyaWQgc2FmZSBhdG9taXplci4gCklmIHNoZSB3aG9sZWhlYXJ0ZWRseSB3YW50ZWQgdG8gYmUgbWFycmllZCwgdGhlcmUgd291bGQgbm90IGJlIHRoZSBjb25mbGljdCBhbmQgaGVuY2Ugbm8gYW54aWV0eS4gCihUaGUgb2JzZXNzaW9uIGlzIGEgbmF0aW9uYWwgb25lLCB0b28uKS4gClRoZSBzcGVjaWZpY2l0eSBvZiBzaXRlIHJlYWxseSBkZXBlbmRzIG9uIHRoZSBwYXJrLiBTb21ldGltZXMgd2UgY2FuIGxpc3QgZGlmZmVyZW50IGFyZWFzLCBidXQgb2Z0ZW4gd2UgY2FuJ3QuIApBbmdyeSBiZWNhdXNlIEkgY2FuJ3QgYmVsaWV2ZSBob3cgbWFueSB0aW1lcyB0aGlzIGd1eSBnb3QgYXdheSB3aXRoIHdoYXQgaGUgZGlkLiAKQmVpbmcgdGhlIGNhcGl0YWwgb2YgR2VvcmdpYSwgaXQncyB0aGUgY291bnRyeSdzIGN1bHR1cmFsIGNlbnRyZS4gCkNyZWRpdCBjYXJkIGNvbXBhbmllcyBiZWdhbiB0byB0YWtlIG9uIGEgdmFyaWV0eSBvZiBzaGFkeSBwcmFjdGljZXMsIGZyb20gY29tcGxldGVseSBpbmNvbXByZWhlbnNpYmxlIGxhdGUgZmVlcywgcmFpc2luZyByYXRlcyB3aXRob3V0IHdhcm5pbmcgb3IgY2F1c2UsIGFuZCBpbnRlcmVzdCByYXRlcyBhdCBhYm91dCAxOSUgYnV0IGFzIGhpZ2ggYXMgMjglIGZvciAiaGlnaCByaXNrIiBjdXN0b21lcnMgICBsaWtlIGNvbGxlZ2Ugc3R1ZGVudHMsIHRoZSB1bmVtcGxveWVkLCBhbmQgZXZlbiBvbmUgb2YgbXkgZG9ncywgd2hvIHVudGlsIGEgeWVhciBhZ28gcmVndWxhcmx5IHJlY2VpdmVkIGNyZWRpdCBjYXJkcyBpbiB0aGUgbWFpbCAodGhlIG90aGVyIGRvZyBzZWVtZWQgYSBiaXQgbWlmZmVkIGFib3V0IGhlciBsYWNrIG9mIGNyZWRpdCwgYnV0IHRoZXJlIHdhcyByZWFsbHkgbm90aGluZyB0byBiZSBkb25lIGFib3V0IGl0LiAKSXQncyBkb2luZyBhIHN0ZXAgYmFjay4gCkkgYW0gZXhwb3NlZCB0byBhbGwga2luZHMgb2YgY29tcGFuaWVzLCBtb3N0IGpvYnMgYXJlIG5hdHVyYWxseSBjb21pbmcgZnJvbSBsYXJnZSBvcmdzIChiYW5rcywgZmluYW5jaWFsIGNvbXBhbmllcywgcmV0YWlsLCBldGMpLiBPbmUgb2YgdGhlIHJlYXNvbiBweXRob24gaXMgb24gZGVjbGluZSBmb3Igd2ViIGRldmVsb3BtZW50IGlzIFNQQXMuIERvZXNuIG1ha2Ugc2Vuc2UgdG8gc3VwcG9ydCB0d28gZGlmZmVyZW50IHN0YWNrcyBmb3IgYmFja2VuZCBhbmQgZnJvbnRlbmQuIApKdXN0IHRlbGxpbmcgdGhlIHN0b3J5IG9mIHdoYXQgaGFwcGVuZWQgdG8gbWUgYmVjYXVzZSBJIHRob3VnaHQgaXQgd2FzIGludGVyZXN0aW5nIGVub3VnaCBhbmQgSSByZWFsbHkgbmVlZGVkIHRvIGdldCBpdCBvZmYgbXkgY2hlc3QuIApBcyBleHByZXNzaW9ucyBvZiBzeW1wYXRoeSwgZG9uYXRpb25zIGluIENoYXJsaWUncyBtZW1vcnkgbWF5IGJlIG1hZGUgdG8gdGhlIENhbmFkaWFuIENhbmNlciBTb2NpZXR5LCBTdGVkbWFuIENvbW11bml0eSBIb3NwaWNlIG9yIHRoZSBjaGFyaXR5IG9mIHlvdXIgY2hvaWNlLiAKU28gaG9wZSB1IGhhdmUgc29tZSBjbGltYmluZyBleHBlcmllbmNlIG9yIHRoYXRsbCBiZSBhbiBlYXN5IHNuYXBwZWQgbGVnIGZyb20gYSBmYWxsLi4gClNldCBsaW1pdHMgb24gbG9zc2VzIGFuZCBzdGljayB0byB0aGVtLi4gClRoZSBtYWpvcml0eSBvZiB3aGF0IHBvbGljZSBoYXZlIGFyZSBhdmFpbGFibGUgdG8gY2l2aWxpYW5zLCBhcyB3ZWxsIChtb3N0LCBub3QgYWxsKS4gUG9saWNlIGRlcGFydG1lbnRzIGhhdmUgdGFua3MsIHllcywgYnV0IHRoZXkgdW5hcm1lZC4gCldlIGNhbm5vdCBhY2NlcHQgQ2hpbmVzZSBoZWdlbW9ueSBpbiBFYXN0IEFzaWEuIApJbiB5b3VyIGdyYWR1YXRpb24gcGljdHVyZSwgeW91IGxvb2sgZ3JlYXQgYW5kIGlmIEkgd2FzIDE4IEkgdGhpbmsgdGhhdCB5b3Ugd2VyZSB0b28gZm9jdXNlZCBvbiB5b3VyIGNhcmVlciBhbmQgd291bGQgaGF2ZSBubyB0aW1lIGZvciBhIHJlbGF0aW9uc2hpcC4gSSBwZXJzb25hbGx5IHByZWZlciBubyBtYWtldXAgYnV0IGFzIG90aGVyIHJlZGRpdG9ycyBoYXZlIG1lbnRpb25lZCwgeW91IGNvdWxkIHRyeSBhIGZldyB2YXJpYXRpb25zIG9mIG1ha2V1cCBhbmQgc2VlIHdoYXQgc3VpdHMgeW91IHRoZSBiZXN0LiAKVGhlIHN1cHBvcnQgSSBmZWx0IEkgd2FzIHRyeWluZyB0byBnaXZlIGhlciBzZWVtZWQgdG8gZ28gdW5ub3RpY2VkIGFuZCB1bmFwcHJlY2lhdGVkLiBUb3dhcmQgdGhlIGVuZCBvZiBvdXIgcmVsYXRpb25zaGlwIHdlIGZlbHQgbW9yZSBsaWtlIHJvb21tYXRlcyByYXRoZXIgdGhhbiBhIGNvdXBsZS4gUHVuY3R1YXRlZCBieSBuaWdodHMgb2YgdW5zcG9rZW4gdGVuc2lvbi4gCkxlYXNlIHBheW1lbnRzIGFyZSBhIGZ1bmN0aW9uIG9mIHNlbGxpbmcgcHJpY2UsIHJlc2lkdWFsIHZhbHVlICh0aGUgcHJpY2UgdGhlIGZhY3RvcnkgYnV5cyB0aGUgY2FyIGZvciBhdCB0aGUgZW5kIG9mIHRoZSBsZWFzZSksIGFuZCBtb25leSBmYWN0b3IgKHRoZSBlcXVpdmFsZW50IG9mIGludGVyZXN0IHJhdGUpLiAKRWluIHNlaHIgZ3V0ZXMgQnVjaCwgbWl0IGVpbmVyIGZhY2V0dGVucmVpY2hlbiBBdWZsaXN0dW5nIHZlcnNjaGllZGVuZXIgU2l0dWF0aW9uZW4uIFVtIGRlbiBHZWduZXIgZWluZW4gU2Nocml0dCB2b3IgcmF1cyB6dSBzZWluIGlzdCBkaWVzZXMgQnVjaCBmciBMaXZlIFBva2VyIFNwaWVsZXIgZWluZmFjaCBQZmxpY2h0LgpUbyBkYXRlLCBJJ3ZlIHNwZW50IGFyb3VuZCAkNTAgb24gaXQgICB3aGljaCBpcyBhIHJpZGljdWxvdXMgYW1vdW50IGZvciBhIGdhbWVzIGpvdXJuYWxpc3QgdG8gc3BlbmQgb24gc3VjaCBhIGxvdyByZW50IGdhbWUuIApOb3Qgc3VycHJpc2luZ2x5LCBhIHJlY29yZCBudW1iZXIgb2YgQW1lcmljYW5zIG5vdyBjbGFpbSBmZWRlcmFsIGRpc2FiaWxpdHkgY2hlY2tzIGFuZCBmb29kIHN0YW1wcywgdXAgbmVhcmx5IDIwIGFuZCA0NCBwZXJjZW50LCByZXNwZWN0aXZlbHkuLiAKVGFpIENoaSB3aWxsIHN0cmVuZ3RoZW4geW91ciBmZWV0LCBsZWdzLCBoaXBzIGFuZCBwZWx2aXMuIApJZiB5b3UgYXJlIGFwcGx5aW5nIGZyb20gdGhlIEVVIG9yIG92ZXJzZWFzLCBhbmQgeW91ciBzY2hvb2wgb3IgY29sbGVnZSBpcyBub3QgcmVnaXN0ZXJlZCB3aXRoIFVDQVMsIHlvdSBhcmUgcmVzcG9uc2libGUgZm9yIHlvdXIgYXBwbGljYXRpb24uIApQcml6ZSBQb29sOiBXaXRoIHRoaXMgaW4gbWluZCwgaXQgaXMgd29ydGh5IHRvIHVuZGVyc3RhbmQgdGhhdCB0aGUgd2F5IHByaXplcyBhcmUgZGlzdHJpYnV0ZWQgaXMgYSBjcnVjaWFsIGZhY3RvciBpbiBhbnkgdG91cm5hbWVudCBzdHJhdGVneSBzaW5jZSBvbmx5IDEwJSB0byAyMCUgb2YgdGhlIGZpZWxkIHdpbGwgZ2V0IHJld2FyZGVkIGFueXRoaW5nIGluIGEgdG91cm5hbWVudC4gVGhpcyBpcyBiZWNhdXNlIFByb2ZpdHMgZm9yIHRvdXJuYW1lbnQgd2lubmVycyBjb21lIGZyb20gdGhlIG9jY2FzaW9uYWwgYmlnIHdpbi4gRm9yIHRoYXQgcmVhc29uLCBvbmUgbmVlZHMgdG8gaGl0IHRob3NlIGJpZyBzY29yZXMgaW4gb3JkZXIgdG8gbWFrZSBwcm9maXRzLi4gCiJHb2QiIHdhcyBpbiB0aGUgaW5pdGlhbCBibHVlcHJpbnRzIG9mIHRoZSBjb25zdGl0dXRpb24gZGVzaWduLiAKVU5JQUMsIEdlcmFsZCBKb3NlcGggICA4NCwgb2YgQmF5ZmllbGQgcGFzc2VkIGF3YXkgcGVhY2VmdWxseSBhdCBGYWlyd2luZHMgTG9kZ2UgaW4gU2FybmlhIG9uIFRodXJzZGF5LCBKYW51YXJ5IDIzLCAyMDE0IHdpdGggaGlzIHR3byBzb25zIGJ5IGhpcyBzaWRlLiBCZWxvdmVkIGh1c2JhbmQgb2YgdGhlIGxhdGUgUnVieSAoS3JlaXMpIFVuaWFjICgxOTg1KS4gTG92aW5nIGZhdGhlciBvZiBKYXkgKEJldGggQW5uKSBVbmlhYyBhbmQgR2FyeSAoTG9yZW5hKSBVbmlhYy4gCk9uY2Uga25vd24gYXMgIlNraW5ueSBKb2V5LCIgTWVybGlubyBidWlsdCBhIGNoaXNlbGVkIGJvZHkgaW4gcHJpc29uLCBhbmQgcmVpbnZlbnRlZCBoaW1zZWxmIGFzIHRoZSBtYWl0cmUgZCcgYXQgYSBCb2NhIFJhdG9uIHJlc3RhdXJhbnQgdGhhdCBiZWFycyBoaXMgbmFtZSBhbmQgc2VydmVzIHJlY2lwZXMgaW5zcGlyZWQgYnkgaGlzIG1vdGhlciBpbiBTb3V0aCBQaGlsbHkuIEhlIGhhcyBiZWVuIGxpdmluZyBpbiBGbG9yaWRhIGJ1dCBoYXMgYWxzbyBmcmVxdWVudGVkIHRoZSBQaGlsYWRlbHBoaWEgYXJlYS4KVGhlIHBlcm1hbmVudCBleGhpYml0aW9uIGRyYXdzIHRvZ2V0aGVyIGluZm9ybWF0aW9uLCBwaG90b2dyYXBocyBhbmQgZmlsbSBkb2N1bWVudGFyaWVzIGZyb20gdGhlIERhdmlkIExlYW4gRm91bmRhdGlvbiwgdGhlIEJyaXRpc2ggRmlsbSBJbnN0aXR1dGUsIHRoZSBCQkMgYW5kLCBtb3N0IGltcG9ydGFudGx5LCBEYXZpZCBMZWFuJ3Mgc29uIFBldGVyLCBncmFuZHNvbiBOaWNrIGFuZC4gCkRvbiBydXNoIHRvIEdUTyBiZWNhdXNlIGV2ZXJ5b25lICJkb2luZyBpdCIuIApUaGUgcnVsZXMgZm9yIHJ1bm5pbmcgdGhlIGdhbWUgYXJlIHF1aXRlIHNpbXBsZSwgYnV0IG1heSBwb3NzaWJseSByZXF1aXJlIHNvbWUgcHJpb3Iga25vd2xlZGdlIG9mIGhvdyB0byBydW4gYSByb2xlcGxheWluZyBnYW1lIGZvciBvdGhlcnMuIApVbHRpbWF0ZWx5IGl0IHVwIHRvIHlvdS4gCkFuZCwgZm9yIHRoZSByZWNvcmQsIHRoZSBVUyBoYXMgYSBodWdlIHByb2JsZW0gd2l0aCBtaXNyZXByZXNlbnRhdGlvbiBpbiBzZWFmb29kLiBUaGlzIGlzIG5vdCBhdCBhbGwgYSBDaGluYSBzcGVjaWZpYyBwcm9ibGVtLCBvciBldmVuIG9uZSB0aGF0IGl0IGlzIGVzcGVjaWFsbHkgbm90YWJsZSBmb3IuIEkgcmVwZWF0IG15c2VsZjogd2Ugc2hvdWxkIG1hbGlnbiBnb3Zlcm5tZW50cyBhbmQgZW50aXRpZXMgd2hlbiB3ZSBhcmUgcHJvdmlkZWQgd2l0aCBjb25jcmV0ZSBleGFtcGxlcyBvZiB0aGVpciB3cm9uZyBkb2luZy4gCkFsc28gcmVjb21tZW5kcyB0aGF0IGZvciBmdXJ0aGVyIHByb3RlY3Rpb24gZnJvbSBiaXJkcywgZXNwZWNpYWxseSB0aG9zZSB3aXRoIGxvbmcgYmVha3MsIHRvIHR1Y2sgdGhlIGNvY29vbnMgaW50byBhIHNtYWxsIERpeGllIGN1cCBiZWhpbmQgdGhlIGhvbGVzIGZvciBleHRyYSBwcm90ZWN0aW9uLi4gClRoZXkgd291bGQgYmV0IHdpdGggYSB3ZWFrIGhhbmQgYW5kIHdvdWxkIGhvbGQgd2l0aCBhIHN0cm9uZyBoYW5kLCBhbGxvd2luZyB0aGVpciBzdHJhdGVneSB0byBiZSB0cmllZCBvdXQgb24geW91ciByZWZpbmVkIHBsYXlpbmcgc3R5bGUgYW5kIG1heWJlIGhlbHAgZmlzaCBpbiBhIGZldyBwbGF5ZXJzIGFsb25nIHdpdGggaGltLiAKU2VuaW9yIGRpcmVjdG9yIG9mIGNvbnRlbnQgcHJvZHVjdGlvbiwgUiBQYXJ0bmVycwpUaG9zZSBhcmUgdGhlIG9uZXMgSSBjYW4gdGhpbmtvZiBvZmYgdGhlIHRvcCBvZiBteSBoZWFkLiAKVG9kYXksIHBlcmZ1bWUsIGZvb2QsIG1lZGljaW5lLCBhbmQgYXJvbWF0aGVyYXB5IHByb2R1Y3RzIGFyZSB2aWV3ZWQgYXMgc2VwYXJhdGUgZW50aXRpZXMsIGFsdGhvdWdoIGFyb21hdGhlcmFweSBpcyBzbG93bHkgcmVjbGFpbWluZyBpdHMgbWVkaWNpbmFsIGhlcml0YWdlLiAKVGhlIGRlIGZhY3RvIHZpbGxhaW4gaW4gdGhlIHN0YWdlIG11c2ljYWwgUmVudCBhbmQgaXQncyBzdWJzZXF1ZW50IG1vdmllIGFkYXB0YXRpb24gaXMgQmVubnksIGEgbGFuZGxvcmQgd2hvIHVzZWQgdG8gYmUgcm9vbW1hdGVzIHdpdGggdGhlIG1haW4gY2hhcmFjdGVycywgYnV0IGhhcyBzaW5jZSBiZWNvbWUgMSkgc3R1cGlkIHJpY2ggYW5kIDIpIGEgZGljay4gCkluIHBhcnRpY3VsYXIsIGV4ZXJjaXNlIGFmZmVjdHMgdGhlIHByb3BlcnRpZXMgb2YgZGVuZHJpdGljIHNwaW5lcywgd2hpY2ggYXJlIGFjdGluIHJpY2ggcHJvdHVzaW9ucyBvbiB0aGUgZGVuZHJpdGVzIHRoYXQgY29udGFpbiBleGNpdGF0b3J5IHN5bmFwc2VzLiAKV291bGQgaXQgaGF2ZSBtYWRlIGEgZGlmZmVyZW5jZT8gQ2F0ZWdvcmljYWwgbm8uIElzIGhlIHRoZSBiZXN0IGJveGVyIGV2ZXIgbWFkZSwgYWJzb2x1dGVseS4gClNpbXBseSBmb2xsb3cgdGhlIHRpcHMgaGVyZSwgYW5kIGVuam95IHN1Y2Nlc3MhLiAKTW9zdGx5IHNoZSBkaWRuJ3QgaGF2ZSB0byBzcGVuZCBhcyBtdWNoIHRpbWUgaGVscGluZyBoaW0gbGVhcm4gdGhlIHNpZ25hbCB0aGF0IGhlIGhhZCB0byBnby4gCjUuIFR1cm4gdGhlIGxpZ2h0cyBkb3duIGxvdyBhdCBuaWdodApXaWxzb24gUmF5Ym91bGQgYW5kIEJ1dHRzIGFjY291bnRzIGRpZmZlciBvbiBTTkMgTGF2YWxpbiBiZWNhdXNlIHRoZXJlIHNlZW1zIHRvIGhhdmUgYmVlbiBhIGJyZWFrZG93biBpbiBjb21tdW5pY2F0aW9uOiBCdXR0cyBzZWVtcyB0byBoYXZlIHRob3VnaHQgdGhhdCBhIGZpbmFsIGRlY2lzaW9uIHdvdWxkIGhhdmUgYmVlbiBpbiB3cml0aW5nLiBBbmQgdGhleSBkaWZmZXIgb24gdGhlIGNhYmluZXQgc2h1ZmZsZSBiZWNhdXNlIHRoZXJlIHNlZW1zIHRvIGhhdmUgYmVlbiBhIGJyZWFrZG93biBpbiB0cnVzdDogV2lsc29uIFJheWJvdWxkIGJlbGlldmVkIHRoYXQgc2hlIHdhcyBiZWluZyByZXBsYWNlZCBhcyBBRyBiZWNhdXNlIG9mIHRoZSBTTkMgTGF2YWxpbiBkZWNpc2lvbi4KNykgU3RlbGxhOiAwMDQwIDAxMzUsIDEwMG1pbiwgdGhlIGZpcnN0IHRpbWUgaW4gdGhlIHBhc3QgZml2ZSBtb250aHMgKEluIHRoZSBsYXN0IHNlc3Npb24gSSBmYWlsZWQgdG8gZnVjayBoZXIgYmVjYXVzZSBvZiBteSBkaWNrJ3MgY29uZGl0aW9uKS4gSW4gYSByb29tIERGSywgQkosIGNvdyBnaXJsLCAyNSBtaW4gREFUWSB3aXRoIGhlciBpbnRlbnNlIGZ1Y2tpbmcgTywgbWlzc2lvbmFyeSwgdG9iYWNjbyBicmVhaywgaGVyIHVuc3VjY2Vzc2Z1bCBCSiBhaW1pbmcgYXQgQ0lNLCBteSBtYXNzYWdlIG9uIGhlci4gUmVwZWF0LgpPdGhlciBjaXRpZXMgYWNyb3NzIEJyYXppbCBhbHNvIHdpbGwgYmVuZWZpdCBmcm9tIGJvdGggZXZlbnRzLCBzdWNoIGFzIFNhbyBQYXVsbyBhbmQgTWFuYXVzLiAKVGhvc2UgY291bnRyaWVzIHBheSB0aGVpciB3b3JrZXJzIGEgZG9sbGFyIGEgd2VlayBhbmQgZm9yY2UgdGhlbSB0byBsaXZlIGF0IHRoZSBqb2IgdG8gbWFrZSBtb25leS4gClJlZ2FyZGluZyB0aGUgcXVlc3Rpb24gb2YgaG93IHF1aWNrbHkgeW91IGNhbiBjb21wZWwgdGhlbSB0byBzZXJ2ZSB5b3UsIEkgd291bGQgZXhwZWN0IGl0IHRvIHRha2UgYSBmdWxsIGNvbnZlcnNhdGlvbiBsYXN0aW5nIGF0IGxlYXN0IGEgZmV3IG1pbnV0ZXMuIFRoaXMgc2hvdWxkbiB1c3VhbGx5IGJlIGEgcHJvYmxlbSwgc2luY2UgZmV3IGNyZWF0dXJlcyBhcmUgZ29pbmcgdG8gaW1tZWRpYXRlbHkgYXR0YWNrIHRoZSBjYXN0ZXIgb24gc2lnaHQsIGV2ZW4gaWYgdGhleSBhcmUgYW5ncnkgYWJvdXQgYmVpbmcgYm91bmQuIE1vc3Qgb3V0c2lkZXJzIGFyZSBub3QgZHVtYiwgYW5kIGtub3cgZnVsbCB3ZWxsIHRoYXQgYW55IGJlaW5nIGNhcGFibGUgb2YgY2FzdGluZyBhIHNwZWxsIGFzIHBvd2VyZnVsIGFzIFBsYW5hciBCaW5kaW5nIGlzIGFsbW9zdCBjZXJ0YWlubHkgcG93ZXJmdWwgZW5vdWdoIHRoYXQgdGhleSB3b3VsZCBoYXZlIGJhZCBvZGRzIG9mIGZpZ2h0aW5nIHRoZW0gYWxvbmUuIEJhc2ljYWxseSBmb3IgbW9zdCBvZiB0aGVtIHBsYXlpbmcgYmFsbCBpcyB0aGUgZWFzaWVzdCB3YXkgdG8gZ2V0IGhvbWUgcXVpY2tseSBhbmQgd2l0aG91dCByaXNraW5nIHRoZWlyIGxpdmVzIHRvbyBtdWNoLgpJIHdhc24ndCBtYWtpbmcgZW5vdWdoIG1vbmV5IHRvIHBheSBmb3IgaXQgc28gSSBuZWVkZWQgYSBwbGFuLiAKSG93ZXZlciwgdGhlIGFwcGxpY2F0aW9uIGRpZCBub3QgcHJvY2VlZCBhZnRlciBjb21tdW5pdHkgb3Bwb3NpdGlvbiB3aGljaCBpbmNsdWRlZCB0aGUgY291bmNpbCBkZWNsYXJpbmcgaXRzIGRldGVybWluYXRpb24gdG8gcmVtYWluIHBva2llIGZyZWUuIApJdCBhIG5vcm1hbCBib2R5IHJlZmxleC4uIApNeSBzaG93ZXIgaXMgY29lZCBidXQgYSBmcmllbmQgb2YgbWluZSBoYWQgaGlzIGFuZCBoZXJzIHNlcGFyYXRlIHNob3dlcnMgb24gc2FtZSBkYXkuIApUbyBwdXQgdGhpbmdzIGluIHBlcnNwZWN0aXZlLCB0aGUgYXZlcmFnZSBMZXggVmVsZGh1aXMgc3Vic2NyaWJlciBpcyBwcm9iYWJseSBhYm91dCB0aHJlZSB0aW1lcyBiZXR0ZXIgdGhhbiB0aGUgYXZlcmFnZSBwbGF5ZXIgaW4gdGhvc2UgcHViIHRvdXJuZXlzLCBzbyB5b3UgbGVhcm4gYSBsb3QgbW9yZSBxdWlja2x5IGFuZCBlZmZpY2llbnRseSB0aGFuIGJ5IGp1c3QgcGxheWluZyB5b3VyIGxvY2FsIHRvdXJuZXlzLi4gClNoZSBkb2Vzbid0IHVuZGVyc3RhbmQgdGhhdCBpZiBldmVyeW9uZSBkaWQgaGVyIGV4YWN0IHdpbGwgYWxsIHRoZSB0aW1lLCBzaGUgd291bGQgc3RpbGwgZmVlbCB1bmxvdmVkIUkgYWxzbyB0cnkgdG8gcmVtZW1iZXIgdGhpcyB3aGVuIG15IGNoaWxkcmVuIGFyZSB2ZXJ5IGdyb3VjaHkgb3IgYWN0aW5nIG91dCB0aGV5IGFyZSBmZWVsaW5nIHVubG92ZWQuIApXaXRoIHRoZSBleGNlcHRpb24gb2YgcG9rZXIsIGFsbW9zdCBhbGwgZ2FtZXMgaW4gYSB0eXBpY2FsIGNhc2lubyBhcmUgc3RhY2tlZCBhZ2FpbnN0IHRoZSBwbGF5ZXIsIGFuZCBpbiB0aGUgbG9uZyBydW4gdGhlIGNhc2lubyBhbHdheXMgY29tZXMgb3V0IGFoZWFkLiBJIHdhcyBpbnRyaWd1ZWQgYnkgcG9rZXIgYmVjYXVzZSBpbiBwb2tlciB5b3UgYXJlIHBsYXlpbmcgYWdhaW5zdCBvdGhlciBwbGF5ZXJzLCBub3QgYWdhaW5zdCB0aGUgY2FzaW5vLiAKUGx1cyBpdCBubyBzZWNyZXQgdGhlcmUgYmVlbiBtb3JlIHRoYW4gYSBmZXcgY2FzZXMgb2Ygc2VsZiBpbmZsaWN0ZWQgaGFybSBpbiBhdHRlbXB0cyB0byBxdWFsaWZ5IGZvciBtZWRpdmFjcyBvciBtZWRpYSBzeW1wYXRoeSAoaHVuZ2VyIHN0cmlrZXMsIHNld2luZyBsaXBzIHNodXQgZXRjKS4gQWxzbyB3aHkgYWNjZXNzIHRvIHRoZXNlIGZhY2lsaXRpZXMgaGFzIGJlZW4gcmVzdHJpY3RlZCBhcyByYXRlcyBvZiBzZWxmIGhhcm0gZXNjYWxhdGVkIHdoZW4gVFYgY3Jld3MgYW5kIGpvdXJuYWxpc3RzIGFycml2ZWQuCkFjY29yZGluZyB0byBhIHJlY2VudCBhcnRpY2xlIGluIE5ld3N3ZWVrLApZb3UncmUgcmlnaHQgYW5kIHJlYXNvbmFibGUuLiAKTm90ZSBJIGFtIG5vdCBvbmUgdG8ganVkZ2UgaW5kaXZpZHVhbCBjYXNlcyBJIGtub3cgbm90aGluZyBhYm91dDsgYnV0IHN0aWxsLCBpbiBnZW5lcmFsLCBJIHRoaW5rIGl0IGlzIGltcG9ydGFudCB0byBhdm9pZCBmb29saW5nIG91cnNlbHZlcy4KVGhpcyBiZWxpZWYgc3lzdGVtIHRoZW9yaXplcyB0aGF0IGEgbGlmZSBmb3JjZSwga25vd24gYXMgY2hpIG9yIHFpIChwcm9ub3VuY2VkIGNoZWUpIHRyYXZlbHMgdGhyb3VnaCB0aGUgYm9keSBhbG9uZyBwYXRod2F5cyBjYWxsZWQgbWVyaWRpYW5zLiAKVGhlbiB0aGUgbWludXRlIHNvbWUgc21hbGwgbmV3cyBpdGVtIGRyb3BzIHlvdSd2ZSBnb3QgQ05OIHRlbGxpbmcgeW91IGhvdyBpbXBvcnRhbnQgaXQgaXMsIEZveCBzcGlubmluZyBhIGRpZmZlcmVudCB2YXJpYXRpb24gb2YgaXQsIHRoZW4gcmVkZGl0IGNvbmZsYXRpbmcgaXQgdG8gYSB0aGlyZCBib21iaW5nIG9mIEphcGFuLi4gCldlIGFyZSBnb2luZyB0byBoYXZlIGFub3RoZXIgbG9vayBhdCBpdCBpbiB0aGUgbmV4dCBtb250aCBhbmQgYSBoYWxmLCBidXQgbXkgY2hhbmNlcyBvZiBnb2luZyBhaGVhZCBhcmUgc2xpbW1lciB0aGFuIHRoZXkgd2VyZSB3aGVuIHdlIHN0YXJ0ZWQuIApTb21lIGdyb3VwcyBhcmUgYXJndWluZyBmb3Igc29tZSBmb3JtIG9mIGxlZ2FsaXphdGlvbiwgd2hpbGUgb3RoZXJzIHNheSBwcm9zdGl0dXRpb24gbXVzdCByZW1haW4gYWdhaW5zdCB0aGUgbGF3LgpQam9uZXMwMzAzICAyMCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KQW5kIHNvIGxpZmUgd2VudCBvbiBsaWtlIHRoaXMgZm9yIDEzIHllYXJzLCBhbmQgYXMgRGF2aWQgTWNDdWxsb2NoIHdyb3RlIGluIGhpcyBsb3ZlbHkgd29yaywgVGhlIEdyZWF0IEJyaWRnZSwgV2FzaGluZ3RvbiB3YXMgYXMgaW5kaXNwZW5zYWJsZSB0byB0aGUgYnJpZGdlIGFzIEVtaWx5IHdhcyB0byBXYXNoaW5ndG9uIGl0IGNvdWxkIG5vdCBoYXZlIGJlZW4gYnVpbHQgd2l0aG91dCB0aGUgcGFpciBvZiB0aGVtLi4gCllvdSBzZWUgdGhpcyBoYXBwZW4gb25saW5lIGEgbG90IHRvbywgc3RvcmllcyB0aGF0IGdldCBwYXNzZWQgYXJvdW5kIGFib3V0IGhvdyBvbmUgcGVyc29uIGRpZCBzb21ldGhpbmcgYmFkLiBJIHN1cnByaXNlZCBJIG5ldmVyIGhlYXJkIG9mIFNhY2hhIGJlZm9yZSAoYW5kIEkgdGhpbmsgb25seSB0aGUgbGFuZ3VhZ2UgYmFycmllciBwcm9iYWJseSBwcmV2ZW50ZWQgaXQgZnJvbSBiZWluZyBpbiB3aWRlIGNpcmN1bGF0aW9uIGFtb25nIEVuZ2xpc2ggc3BlYWtpbmcgdHJhbnNwaG9iZXMpIGNvbnNpZGVyaW5nIGhpcyBzdG9yeSBpcyBzb21ldGhpbmcgc28gbHVyaWQgYW5kIGdhcmlzaCB0aGF0IGl0IHdvdWxkIGJlIGluY3JlZGlibGUgZm9kZGVyIGZvciB0aG9zZSBsb29raW5nIHRvIHBhaW50IHRyYW5zIHBlb3BsZSBhcyBzZXh1YWwgZGV2aWFudHMuCkRlYWRseW1vb25kdXN0ICAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpCcmluZ2luZyBwZW9wbGUgdG9nZXRoZXIgZm9yIGEgYmV0dGVyIHdvcmxkIGlzIGEgdGhlbWUgdGhhdCBpcyBkZWFyIHRvIGVtcGxveWVlcyBvZiBMYWJhdHQsIGFuZCB0aGV5J3JlIGFibGUgdG8gZG8ganVzdCB0aGF0IHRocm91Z2ggc2V2ZXJhbCBwcm9ncmFtcy4gCldoZXRoZXJzcG9vbiBjb3JlIGRlbW9ncmFwaGljIGlzIGdhbW1vbnMgYW5kIHRoZXkgc2VuZHMgb3V0IG1hZ2F6aW5lcyB0byBob3VzZWhvbGRzIG9uIHRoZSBlbGVjdG9yYWwgcmVnaXN0ZXIgYXMgbGlzdGVkIGFzIGhhdmluZyAxIG9yIG1vcmUgcGVyc29uIG9mIGdhbW1vbnkgYWdlLiBJbiBiZXR3ZWVuIHRoZSBvZmZlcnMgZm9yIGN1dCBwcmljZSBmb29kIGFuZCBhbGNob2hvbCBhcmUgcGFnZXMgY29udGFpbmluZyBwcm8gQnJleGl0IHBvbGl0aWNzLiBJZiB5b3Ugc2VlIGEgV2hldGhlcnNwb29ucyBNYWdhemluZSB0aGFuIHRha2UgYSBsb29rIGFzIGl0IGlzIHdlaXJkLgpUaGVzZSBhcmUgdGhlIHNpdGVzIHRoYXQgd2UgcmVhbGx5IGp1c3Qgd2FudCB0byB0aHJvdyBvZmYgb2YgYSBjbGlmZi4gCkl3aXNoSWNvdWxkQmVXaXR0eSAgMSBwb2ludCAgc3VibWl0dGVkIDEzIGRheXMgYWdvClJ1c3NpYSBrbm93cyBleGFjdGx5IHdobydzIHNpdHRpbmcgYXJvdW5kIHRoaXMgcG9rZXIgdGFibGU6IEl0J3Mgbm90IEN5cHJ1cyB0aGF0IHRoZXkncmUgcGxheWluZywgaXQncyB0aGUgRVUuIApUaGUgYXJ0aWNsZSBiYXNpY2FsbHkgbGF5cyBvdXQgdGhhdCB3aGVuIGRvZ3MgaGFuZ3Mgb3V0IHdpdGggeW91LCBsaWNrIHlvdSBhbmQgZWF0IHRoaW5ncyB0aGF0IHNtZWxsIGxpa2UgeW91IGl0J3MgYmVjYXVzZSB0aGV5IGxpa2UgeW91LiBOb3RoaW5nIHRvIGRvIHdpdGggIndhbnRpbmcgdG8gc2VydmUgeW91IiBwc2V1ZG9zY2llbmNlIGJ1bGxzaGl0LiAKV2l0aCBhIGZhdGhlciB3aG8gdGF1Z2h0IGdhbWUgdGhlb3J5IGFuZCBwcm9iYWJpbGl0eSBhdCBVQ0xBLCBDaHJpcyBGZXJndXNvbiwgYSBCcnVpbiB3aXRoIHR3byBVQ0xBIGRlZ3JlZXMsIHdhcyBwcm9iYWJseSBib3JuIHRvIGJlIGEgcG9rZXIgY2hhbXBpb24uIFlvdSBtaWdodCBldmVuIHNheSB0aGUgZGVjayB3YXMgc3RhY2tlZCBpbiBoaXMgZmF2b3IuIApIaXMgc3VpdGNhc2UgaWxsdXN0cmF0ZXMgaXQuIApTd2l2ZWwgY2hhaXIgaGFzIHRyaXBsZWQgaW50byBhIG1vcmUgdGhhbiAkMyBiaWxsaW9uIG1hcmtldCBzZXJ2ZWQgYnkgbW9yZSB0aGFuIDEwMCBjb21wYW5pZXMuIApUaGUgY29ycmVjdCBzdHJhdGVneSB0byBiZWNvbWUgYSBzdWNjZXNzZnVsIHRvdXJuYW1lbnQgcGxheWVyIGlzIHNvbWV3aGVyZSBpbiBiZXR3ZWVuIHRoZXNlIHR3byBzdHlsZXMuIEFzIGFsd2F5cywgeW91IHNob3VsZCBiZXQgd2hlbiB5b3UgYXJlIGEgZmF2b3JpdGUgdG8gd2luLCBidXQgaW4gY2xvc2Ugc2l0dWF0aW9ucyBpbiBhIHRvdXJuYW1lbnQgaXQgbWF5IGJlIGJlc3QgdG8gaG9sZCBiYWNrIHVubGVzcyB5b3UgYXJlIGdldHRpbmcgc2hvcnQgc3RhY2tlZCAodG8gaGF2ZSB0aGUgc21hbGxlc3QgYW1vdW50IG9mIGNoaXBzIGluIGEgdG91cm5hbWVudCkuIElmIHlvdXIgc3RhY2sgZ2V0cyB0b28gbG93LCB5b3Ugd2lsbCBiZSBmb3JjZWQgdG8gY2hvb3NlIGEgZ29vZCBzdGFydGluZyBoYW5kIGFuZCBwcm9iYWJseSBiZXQgYWxsIG9mIHlvdXIgY2hpcHMsIGhvcGluZyBubyBvbmUgZWxzZSBoYXMgYSBiZXR0ZXIgaGFuZC4KQnV0IHdoZW4gdGhvc2UgdHdvIHdoaXRlLCBjb3Jwc2UgbGlrZSBibG9hdGVkIGZhY2VzIHdpdGggZGVlcCB3cmlua2xlcyB3ZXJlIHN0YXJpbmcgYXQgbWUgZnJvbSBvdXRzaWRlIG15IGJlZHJvb20gd2luZG93IG9uIHRoZSB0aGlyZCBmbG9vciBhZnRlciBhIHBhcnRpY3VsYXJseSBiYWQgZmlnaHQgd2l0aCB0aGUgd29tYW4gd2hvIGJpcnRoZWQgbWUsIGkga25ldyB0aGF0IEkgd2FzbnQganVzdCAic2FkIiAgVGhlcmUgd2FzIHNvbWV0aGluZyBtb3JlIHRvIGl0LiAKVHJ1Y28gdW0gam9nbyBwb3B1bGFyIGRpdmVydGlkbyBkZSBjYXJ0YXMsIHJlcGxldG8gZGUgc2ltdWxhIG1hbCBlIHRydXF1ZXMuIE9zIGpvZ2Fkb3JlcyBwb2RlbSBzZXIgZGUgZHVhcyBhIHNlaXMgcGVzc29hcywgcG9kZW5kbyBzZXIKVGhlIHJvb20gaXMgZmlsbGVkIHdpdGggMTUgdGFibGVzIGZvciBwbGF5ZXJzLCBmbGF0IHNjcmVlbiBUVnMgYW5kIGEgYmFyIGZvciBwbGF5ZXJzIHRvIGVuam95IHVudGlsIHRoZSBlYXJseSBtb3JuaW5nIGhvdXJzLiAKTEVUX1pFS0VfRUFUICA5IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkZyb20gdGhlIHRvcCBvZiBmbG9vcnMgMjQsIDI2LCAyNyBhbnMgMzIgdGhlc2UgY29zeSA3MCBtc3EuIEFwYXJ0bWVudHMgdHJ1bHkgZmVlbHMgbGlrZSBob21lIGFuZCByZXByZXNlbnQgdGhlIHBlcmZlY3QgYWNjb21tb2RhdGlvbiBjaG9pY2UgZm9yIHNob3J0IGFuZCBsb25nIHRlcm0gc3RheXMgd2hldGhlciB5b3UgY29tZSB0byBCYW5na29rIGZvciBhIGJ1c2luZXNzIHRyaXAgb3Igd2l0aCB2YWNhdGlvbiBwdXJwb3Nlcy5UaGUgZmxhdCBjb21mb3J0YWJseSBmaXRzIHVwIHRvIGZvdXIgcGVvcGxlIGFuZCBmZWF0dXJlcyAxIGRvdWJsZSBiZWRyb29tIHBsdXMgRW4gc3VpdGUgYmF0aHJvb20gd2l0aCB0dWIsIGEgc2Vjb25kIGJlZHJvb20gd2l0aCBkb3VibGUgYmVkLCBhIGxpdmluZyByb29tIHdpdGggc2F0ZWxsaXRlL2NhYmxlIFRWIGNvbnNvbGUsIGRpbmluZyBhcmVhIGFuZCBzZXBhcmF0ZSBraXRjaGVuIChmdWxseSBlcXVpcHBlZCB3aXRoIGNvZmZlZSBtYWNoaW5lIGFuZCB3YXNoaW5nIG1hY2hpbmUgd2l0aCBpbnRlZ3JhdGVkIGRyeWVyIGZhY2lsaXRpZXMpLiAKQmFsYW5jZS4gSWYgeW91IHNvbWV0aW1lcyBjYWxsIHdpdGggYSBnb29kIG9yIGdyZWF0IGhhbmQgaW4gYSBzYW1lIHNpdHVhdGlvbiB5b3Ugd291bGQgY2FsbCB3aXRoIGEgZHJhdyAoZXg6IHlvdSBoYXZlIFRQVEsgb24gYSBmb3VyIGZsdXNoIGJvYXJkKS4gVGhlIG9ubHkgd2F5IHRoZXkgY2FuIG5hcnJvdyB5b3VyIGNhbGxpbmcgcmFuZ2UgdG8ganVzdCBhIGZsdXNoIGRyYXcgaXMgaWYgeW91IHBsYXkgdHAgcmVhbGx5IGZhc3QgYWx3YXlzIGFuZCBhcmUgbmV2ZXIgY2hlY2sgY2FsbGluZy4gCk1vb25saWdodGluZyBjYW4gYmUgYSBncmVhdCB3YXkgdG8gdXNlIHlvdXIgc2tpbGxzZXQgdG8gYnJpbmcgaW4gc29tZSBleHRyYSBjYXNoIG9uIHRoZSBzaWRlLiBGb3Igc29tZSwgaXQgbWF5IGFsc28gYmUgYSB3YXkgdG8ganVzdGlmeSB3cml0aW5nIG9mZiBzb21lIG90aGVyd2lzZSBleHBlbnNlcywgc3VjaCBhcyBleHBlbnNlcyBmb3IgdGhlIGJ1c2luZXNzIHVzZSBvZiBhIHdvcmsgc3BhY2UgaW4geW91ciBob21lLCBmb3IgdGF4IHB1cnBvc2VzLiBCdXQgYmUgZm9yZXdhcm5lZCBpZiB5b3UgZG9uIG9wZXJhdGUgeW91ciBidXNpbmVzcyBpbiBhIGNvbW1lcmNpYWwgbWFubmVyIG9yIGl0IGRlZW1lZCB0aGF0IHRoZXJlIGlzIGEgc2lnbmlmaWNhbnQgcGVyc29uYWwgZWxlbWVudCBhc3NvY2lhdGVkIHdpdGggeW91ciBzbyBjYWxsZWQgYW55IGxvc3NlcyB5b3UgaW5jdXIgZnJvbSB0aGF0IGJ1c2luZXNzIG1heSBiZSBkZW5pZWQgYnkgdGhlIHRheG1hbi4uIApNeSBhdHRlbXB0ZWQgZ3VpZGUgdG8gbGl2ZSBsb3cgc3Rha2VzIHBva2VyIGluIFZlZ2FzCkJpcyAxMy4gTXJ6IDIwMTAgd2lyZCBkaWVzZXMgd2ljaHRpZ2UgIEV2ZW50LCB3ZWxjaGVzIGZyIGVpbmUgd2VsdHdlaXRlIGJlcnRyYWd1bmcgaW0gRmVybnNlaGVuIGF1ZmdlemVpY2huZXQgd2lyZCwgbmFjaCAyMDA2IHp1bSBlcnN0ZW4gTWFsIHdpZWRlciBhbiBkaWVzZW0gYmVsaWVidGVuIE9ydCBtaXR0ZW4gYXVmIGRlbSBlciBDaGFtcHMgRWx5c2VzIHN0YXR0ZmluZGVuLiAKQWZ0ZXIgYSBsb25nIGRheSBhdCB3b3JrIG9yIHBsYXksIHdlIG9mdGVuIGZpbmQgb3Vyc2VsdmVzIHJldHJlYXRpbmcgaW50byB0aGUgY29tZm9ydHMgb2Ygb3VyIGJhdGhyb29tIGZvciBhIGxvbmcsIGhvdCBzaG93ZXIgb3Igc29hayBpbiB0aGUgdHViLiBQaHlzaWNhbGx5IGFuZCBwc3ljaG9sb2dpY2FsbHksIHRyZWF0aW5nIHlvdXJzZWxmIHRvIGEgc3RlYW1pbmcgaG90IGJhdGggb3Igc2hvd2VyIGNhbiBoZWxwIHRvIGVhc2UgYWNoZXMgYW5kIHBhaW5zIGZvciBib3RoIHRoZSBib2R5IGFuZCBtaW5kLiBUaGUgaWRlYSBvZiBoeWRyb3RoZXJhcHkgaXMgY2VydGFpbmx5IG5vdGhpbmcgbmV3LiAKSXQgZGViYXRhYmxlLiBUaGUga2lkcyBwYXJlbnRzIG1pZ2h0IGFyZ3VlIHRoYXQgYSBkb2cgaXMgbGlrZWx5IHRvIGF0dHJhY3QgYSBjaGlsZCBiZWNhdXNlIG1vc3Qga2lkcyBhcmUgbmF0dXJhbGx5IGN1cmlvdXMsIGFuZCBiZWNhdXNlIGRvZ3MgYXJlLCBpbiBvdGhlciBjb250ZXh0cywgbm9ybWFsbHkgc29tZXRoaW5nIGtpZHMgYXJlIGVuY291cmFnZWQgdG8gYXBwcm9hY2ggZ2VudGx5LiBUaGUgb3duZXIgbWlnaHQgYXJndWUgdGhhdCBkb2cgcGVubmVkIGluIGluIHRoZSBiYWNrIHlhcmQsIGF3YXkgZnJvbSBhIGtpZCB3aG8gbWlnaHQgd2FuZGVyIHBhc3QgdGhlIHByb3BlcnR5LCBjb3VsZCBub3QgaGF2ZSBhdHRyYWN0ZWQgdGhlbSBvbnRvIHRoZSBwcm9wZXJ0eSBpbiB0aGUgZmlyc3QgcGxhY2UsIGFuZCB0aGF0IHRoZSBvbmx5IHJlYXNvbiB0aGUga2lkIGV2ZW4ga25ldyB0aGVyZSB3YXMgYSBkb2cgdGhlcmUgd2FzIGJlY2F1c2UgdGhleSB3ZXJlIGFscmVhZHkgdHJlc3Bhc3NpbmcuIFdobyB3b3VsZCBwcmV2YWlsIGRlcGVuZHMgb24gYSBsb3Qgb2YgZmFjdG9ycy4KSG93ZXZlciwgdGhpcyBpcyBtb2RpZmllZCBieSBob3cgeW91IHBsYXkgeW91ciB3aW5uaW5nIGhhbmQuIElmIHlvdSBnZXQgYSBSb3lhbCBGbHVzaCwgeW91IHRoZW4gaGF2ZSB0byBtYWtlIGl0IHBheSBvZmYuIApTZWNvbmQsIHlvdXIgcHJlbWlzZSBmb3IgdGhpcyBub3QgYmVpbmcgYXR0YWluYWJsZSBpcyBhIHNpdHVhdGlvbiB3aXRoIHJlcGVhdGVkIHVuZXhwZWN0ZWQgZXhwZW5zZXM/IFllcywgaWYgeW91IE9OTFkgc2F2ZWQgdGhhdCBtb25leSwgaGFkIG5vIGluc3VyYW5jZSBvciBvdGhlciBtZWFucyBvZiBzdXBwb3J0LCBBTkQgaGFkIHJlcGVhdGVkIGV2ZW50cyBsaWtlIGJyb2tlbiBib25lcyB0aGVuIG1heWJlIHlvdSBtaWdodCBjb21lIHVwIHNob3J0LiBCdXQgdGhhdCBsaWtlIHNheWluZyAiV2VsbCBpZiBoZSBjb3VsZG4gY29tZSB1cCB3aXRoIDgwMCBpbiB0aGF0IHllYXIgaGUgaGFkIHRvIHBheSBmb3IgY2hlbW8gYW5kIGhpcyBob3VzZSBidXJuZWQgZG93biBhbmQgaGUgZ290IGRlcG9ydGVkLCBzbyBtb3N0IHBlb3BsZSBwcm9iYWJseSBjb3VsZG4gZG8gaXQgZWl0aGVyLiIgRG9lc24gbWFrZSBhIGxvdCBvZiBwcmFjdGljYWwgc2Vuc2UuLiAKV2hpbGUgdGhlIGZpbG0gaXMgY2hhcm1pbmcgeW91IHdpdGggaXRzIHJvbWFudGljIGNvbWVkeSBhZmZlY3RhdGlvbnMsIGl0IHNseWx5IGRvaW5nIGFub3RoZXIga2luZCBvZiB3b3JrIGFzIGEgY29tbWVudGFyeSBvbiBjbGFzczogUmFjaGVsIGJhY2sgZ3JvdW5kIGlzIHdvcmtpbmcgY2xhc3MsIHdoaWxlIGhlciBjb2xsZWdlIHJvb21tYXRlIEdvaCBQZWlrIExpbiwgYSBTaW5nYXBvcmUgbmF0aXZlLCBpcyBoaWxhcmlvdXNseSByZW5kZXJlZCBhcyBub3V2ZWF1IHJpY2hlIHRoZW4gdGhlIFlvdW5ncyBhcmUgc28gb2xkIG1vbmV5LCB0aGV5IGRvbiBldmVuIHRhbGsgYWJvdXQgaXQuIFRoZXJlIGFyZSBBc2lhbnMgZnJvbSBzZXZlcmFsIGNvdW50cmllcywgd2l0aCBkaWZmZXJlbnQgYWNjZW50cyBhbmQgZGlmZmVyZW50IHZhbHVlcyBob3VzZXdpdmVzLCB0b3RhbCBqZXJrcywgZGV2aW91cyBzb2NpYWxpdGVzLCBhaXIgaGVhZGVkIGFjdG9ycyBhbmQgc2Fzc3kgZnJpZW5kcy4gCkluIHRoZSB3b3JkcyBvZiBoaXMgb3duZXIgcGFyZW50cywgIkhlIGRpZG4gdGFrZSBjYXJlIG9mIGhpbXNlbGYsIGJ1dCBoZSBhbHdheXMgbWFkZSBzdXJlIHRvIHRha2UgY2FyZSBvZiBCbHVlLiAKU2F5aW5nIHRoYXQgaGUgdGF1Z2h0IGhlciBzcGVjaWFsIG1hc3NhZ2UgdGVjaG5pcXVlcyBhbmQgaGlzIGJ1c2luZXNzIG1ldGhvZHMsIGFuIEVhc3QgU3Ryb3Vkc2J1cmcgbWFuIGhhcyBhc2tlZCBOb3J0aGFtcHRvbiBDb3VudHkgQ291cnQgdG8gcHJvaGliaXQgYSB3b21hbiBoZSBmb3JtZXJseSBlbXBsb3llZCBmcm9tIGNvbmR1Y3RpbmcgYSBtYXNzYWdlIGJ1c2luZXNzIGluIEVhc3QgQWxsZW4gVG93bnNoaXAuIEluIGEgc3VpdCBmaWxlZCBieSBhdHRvcm5leSBKZWZmcmV5IFZlbGFuZGVyLCBEYWxsYXMgUmF5IFZhdnJhLCB3aG8gb3BlcmF0ZXMgYSBtYXNzYWdlIHNwYSBvbiBSb3V0ZSAyMDksIGlzIGFza2luZyB0aGUgY291cnQgdG8gYmFuIExvdmV0dGUgRS4gClRhY29saWtlc3dlZWQgIDEgcG9pbnQgIHN1Ym1pdHRlZCA3IGRheXMgYWdvClNhaWJhIHF1YW5kbyBwZWRpciBtZXNhLCBwYWdhciB1bWEgYXBvc3RhLCBzdWJpciBvdSBsYXJnYXIgYSBtby4gRXNzYXMgYWVzIHNvIGNoYW1hZGFzLCBlbSBpbmdscywgZGUgImNoZWNrIiwgImNhbGwiLCAicmFpc2UiIGUgImZvbGQiLCByZXNwZWN0aXZhbWVudGUsIGUgcXVhbHF1ZXIgdW1hIGRhcyBmb3JtYXMsIHBvcnR1Z3VzIG91IGluZ2xzLCBwb2RlIHNlciB1c2FkYSBlbSBjYXNhcyBkZSBwb2tlciBmc2ljYXMgb3Ugb25saW5lLiBEZXBvaXMgZGUgdm9jIHRlciByZWNlYmlkbyBzdWFzIGNhcnRhcywgZSBhcyBhcG9zdGFzIGNoZWdhcmVtIGF0IHZvYywgdm9jIHRlbSB0cnMgb3BlczogcGFnYXIsIHN1YmlyIG91IGxhcmdhci4gVG9kbyBtdW5kbyB0ZW0gdW1hIGVzdHJhdGdpYSBwcnByaWEgZW0gcmVsYW8gYSBpc3NvLCBtYXMgYXF1aSB2YWkgdW1hIGV4cGxpY2FvIGRlIGNhZGEgYW86CkkndmUgaGFkIG1vcmUgc2hvdHMgdGhhbiBJIGNhbiByZW1lbWJlciBnbyBiYWQgZm9yIG1lLiBGb3Igc29tZSByZWFzb24sIG1vdmluZyB1cCBmcm9tIDEwME5MIHRvIDIwME5MIHdhcyB0aGUgd29yc3QgcnVuIEkgZXZlciBoYWQgd2l0aCBzaG90cyBkdXJpbmcgbXkgcG9rZXIgY2FyZWVyLiBJdCBtdXN0IGhhdmUgdGFrZW4gbWUgMTAgZGlmZmVyZW50IGF0dGVtcHRzIGJlZm9yZSBmaW5hbGx5IGJlaW5nIGFibGUgdG8gbW92ZSB1cCBmb3IgZ29vZC4gSWYgeW91ciBzaG90IGxhc3RzIGZvciBhbnkgZGVjZW50IGxlbmd0aCBvZiB0aW1lIGJlZm9yZSBnb2luZyBiYWQsIHRoZSB0ZW1wdGF0aW9uIHRvIGNvbnRpbnVlIHBsYXlpbmcgaGlnaGVyIHN0YWtlcyB3aWxsIGJlIGdyZWF0LiBZb3UnbGwgam9pbiB0aGUgc21hbGxlciB0YWJsZXMgYWdhaW4gYW5kIGZlZWwgbGlrZSB0aGUgbW9uZXkganVzdCBpc24ndCBlbm91Z2ggdG8gZ2V0IHlvdXIgYmxvb2Qgc3RpcnJpbmcuIERvbid0IHdvcnJ5OyB0aGF0IGZlZWxpbmcgd2lsbCBnbyBhd2F5IHNvb24gZW5vdWdoLiBEb24ndCBsZXQgaXQga2VlcCB5b3UgZnJvbSBtYWtpbmcgdGhlIHJpZ2h0IGNob2ljZS4KTG9va2luZyBiYWNrIG9uIGl0LCBJIG1pZ2h0IGhhdmUgZ2l2ZW4gQWwgQ2Fwb25lIGEgZmV3IGhpbnRzLiAKIkkgYmVsaWV2ZSB0aGF0J3Mgd2h5IGhlIGxlZnQgdGhvc2Ugc2hvZSBwcmludHMgaW50YWN0LCBpbiBhbiBhdHRlbXB0IHRvIHRocm93IG9mZiBpbnZlc3RpZ2F0b3JzLiBJbiB0aGUgZXZlbnQgdGhhdCB0aGV5IGRpZCBjb21lIHRvIGhpbSB3aXRoIHF1ZXN0aW9ucyBhYm91dCB0aG9zZSBibG9vZHkgc2hvZSBwcmludHMsIGhlIHdvdWxkIHNpbXBseSBiZSBhYmxlIHRvIHNheSAnSSB3ZWFyIGEgc2l6ZSAxMCwnICIgTmlldG8gZXhwbGFpbmVkLiAKMS4gCkJpZywgbGlmZSBsaWtlIEJldHR5IEJsdWUgd2lsbCBiZSB0aGVyZS4gClZhcmlvdXMgcmVsZXZhbnQgZGF0YSBzb3VyY2VzIHdlcmUgYWNjZXNzZWQuIExhbmd1YWdlIGFuZCBwdWJsaWNhdGlvbiByZXN0cmljdGlvbnMgbWlnaHQgbWVhbiB0aGF0IHN0dWRpZXMgd2VyZSBtaXNzZWQgYW5kIHRoZSByZWxhdGl2ZSBiaWFzZXMgY291bGQgbm90IGJlIHJ1bGVkIG91dC4gIGFuZCBxdWFsaXR5IGFzc2Vzc21lbnQgd2VyZSBjYXJyaWVkIG91dCB3aXRoIGF0dGVtcHRzIHRvIG1pbmltaXNlIGVycm9yIGFuZCBiaWFzOyBpdCB3YXMgdW5jbGVhciB3aGV0aGVyIHNpbWlsYXIgc3RlcHMgd2VyZSB0YWtlbiBmb3IgZGF0YSBleHRyYWN0aW9uLiAKV2hhdCBpZiBpdCBlc2NhbGF0ZXM/IFdoYXQgaWYgaGUgYWN0dWFsbHkgZ2V0cyBtb3JlIGJlbGxpZ2VyZW50LCBvciBldmVuIHZpb2xlbnQuIApDT01FIExJQkVSQVJTSSBEQUwgU0lTVEVNQSBFIFZJVkVSRSBTRVJFTkkKVGhpcyBzb2Z0d2FyZSBhcHBhcmVudGx5IGhhcyBiYWQgcmV2aWV3cyBvbiBpdHMgYmVsdC4uIApJIGltYWdpbmUgdGhpcyB3aWxsIG1ha2UgY3ljbGluZyBpbiBTZW91bCBhIG11Y2ggbW9yZSBhdHRyYWN0aXZlIHByb3NwZWN0IHRvIHRoZW0gc2VlaW5nIGFzIHRoZXknbGwgaGF2ZSB0byBpbnRlcmFjdCBsZXNzIHdpdGggY2FycyBhbmQgc3Vid2F5cyB0byBnZXQgdGhlIEhhbiBwYXRoIG9uIHRoZSB3ZWVrZW5kLiAKIkFjcm9zcyB0aGUgYm9hcmQgdGhlIHJlYWN0aW9uIHRvIEdPUHJvdWQncyBwcmVzZW5jZSBoZXJlIGhhcyBiZWVuIHBvc2l0aXZlLCBidXQgdGhlbiB5b3UgaGF2ZSBndXlzIGxpa2UgdGhpcy4gCkJ5IEhvbGx5IFdhbGtlciAoQldCIFRleHRzLCBwYXBlciAkMTQuOTk7IGUgYm9vayAkNC45OSkKV2UgbmVlZGVkIGEgTm92YSBTY290aWEgbWluaXN0ZXIgYW5kIGEgVHJlYXN1cnkgQm9hcmQgY2hhaXIgd2l0aCBtaW5pc3RlcmlhbCBleHBlcmllbmNlLiAKQWZ0ZXIgYWJvdXQgYW4gaG91ciBwYXNzZWQgYnkgd2UgYWdyZWVkIHRoYXQgdGhlcmUgd2FzIG9ubHkgb25lIHdheSB0byBmaWd1cmUgb3V0IHdobyBoYWQgdGhlIHJpZ2h0IHN0cmF0ZWd5IGFuZCB3aG8gd2FzIHNpbXBseSBvdXQgaW4gbGVmdCBmaWVsZCB3aXRoIHRoZWlyIHRob3VnaHRzLiBTbyB3ZSBkZWNpZGVkIHRvIGhvbGQgb3VyIG93biBsaXR0bGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIHdpdGggYSBncmFuZCBwcml6ZSB0aGF0IHdhcyBvbmx5IHBlbm5pZXMgY29tcGFyZWQgdG8gdGhlIG1pbGxpb25zIG9mIGRvbGxhcnMgdGhhdCBjYW4gYmUgd29uIGF0IHRoZSByZWFsIGV2ZW50LiAKSSBzdGlsbCBoYWQgdG8gZ28uIApTYW5mdGVzIFlvZ2EgdW5kIEt1bmRhbGluaSBZb2dhIG1pdCBFdmEgR3VydSBTYW50IFBhd2xhczogbWl0dHdvY2hzIHZvciBkZW0gTWl0dGFnZXNzZW52b24gMTE6MzAgVWhyIGJpcyAxMjozMCBVaHIsIGZyZWl0YWdzIHZvbiA5OjMwIFVociBiaXMgMTEgVWhyLiAKUmVmZXJyaW5nIHRvIFdpbGwgYXMgInRoZSBleCBNci4gVGF5bG9yIgpCdXQgaXQgYSBob2JieSBzaGUgZmlyc3QgdHJpZWQgZ3Jvd2luZyB1cCBpbiBTYXJuaWEgYXMgYSBtZW1iZXIgb2YgdGhlIFNvY2lldHkgb2YgQ3JlYXRpdmUgQW5hY2hyb25pc20sIHNvIHRoZSBheGUgYW5kIGtuaWZldGhyb3dpbmcgcmFuZ2VzIGF0IFZhbGxleSBBeGUgaXMgd2hlcmUgTWFyc2hhbGwgbWV0IHVwIHdpdGggVGhlIE9ic2VydmVyIEZyaWRheSB0byB0YWxrIGFib3V0IGJlaW5nIGJhY2sgYXQgaG9tZSB3aXRoIGhlciBmaXJzdCBub3ZlbC4KSXQgc2VlbXMgbGlrZSBoYXZpbmcgYSBiaWcgc29jaWFsIG1lZGlhIHByZXNlbmNlIG5vd2FkYXlzIGlzIGhlbHBmdWwsIGJ1dCBub3QgbmVjZXNzYXJ5LCBidXQgaGF2aW5nIFNPTUUgVHdpdHRlci9JbnN0YWdyYW0gYWNjb3VudCBzZWVtcyBhbG1vc3QgbGlrZSBhIG5lY2Vzc2l0eSB0aG91Z2guIApJdCBkb2VzIHRoaXMgYnkgYnJlYWtpbmcgdXAgdGhlIGxpcGlkcyBpbnNpZGUgdGhlIGZhdCBjZWxscyBpbnRvIHRob3VzYW5kcyBvZiB0aW55IGRyb3BsZXRzIHdoaWNoIGdyYWR1YWxseSBkaXNzb2x2ZSBhbmQgdmlzaWJseSBzaHJpbmsgdGhlIHZvbHVtZSBvZiBmYXQgaW4gZWFjaCBjZWxsLiBXaXRoIHRoZSBoZWxwIG9mIG1pY3JvY2lyY3VsYXRpb24gYm9vc3RlcnMgaW5jbHVkZWQgaW4gdGhlIGZvcm11bGEsIHRoZSBtZWx0ZWQgZmF0IHZvbHVtZSBmcm9tIGluc2lkZSB0aGUgY2VsbHMgaXMgdGhlbiB0cmFuc3BvcnRlZCBhd2F5IGFuZCBvdXQgb2YgdGhlIGJvZHkuLiAKIldlIGFyZSBhIHNwZWNpYWxpc3Qgc2VydmljZSBkZWFsaW5nIGluIGdhbWJsaW5nIGFuZCBhc3NvY2lhdGVkIGZpbmFuY2lhbCBpc3N1ZXMgYW5kIHdlIGFyZSBhdmFpbGFibGUgdG8gZ2FtYmxlcnMgYW5kL29yIHRoZWlyIGZhbWlsaWVzIHdobyBhcmUgYWZmZWN0ZWQgYnkgdGhlaXIgZ2FtYmxpbmcuIiBBIDE5OTkgRmVkZXJhbCBpbnF1aXJ5IHNob3dlZCB0aGF0LCBvbiBhdmVyYWdlLCBhIHByb2JsZW0gZ2FtYmxlciBsb3NlcyAkMTIsMDAwIHBlciB5ZWFyLCB3aGlsZSBvdGhlciBnYW1ibGVycyBsb3NlLCBvbiBhdmVyYWdlLCAkNjI1IHBlciB5ZWFyLiAiRHVyaW5nIHRoaXMgUmVzcG9uc2libGUgR2FtYmxpbmcgQXdhcmVuZXNzIFdlZWssIHdlIGFyZSB1cmdpbmcgYWxsIGdhbWJsZXJzIHRvIHRha2UgdGltZSBvdXQsIHRoaW5rIGFib3V0IHlvdXIgZ2FtYmxpbmcgZHVyaW5nIHRoZSB3ZWVrLCBwZXJoYXBzIHRha2UgYSBicmVhayBhbmQgc3RheSBpbiBjb250cm9sLCIgTXIgSG93YXJkIHNhaWQuICJJZiBnYW1ibGluZyBpcywgb3IgaXMgYmVjb21pbmcsIGEgcHJvYmxlbSwgY29udGFjdCBzb21lb25lIHRvIHRhbGsgYWJvdXQgaXQuIiBNYXkgMTUgMjAwOCAgIDEwOjMzUE0uIAonJ0NvbnN1bWVyIGNvbmZpZGVuY2UgaW4gb3VyIGFyZWEgaXMgcHJldHR5IGxvdywgbWVtYmVycyBhcmUgY29taW5nIGFuZCBub3Qgc3BlbmRpbmcgYXMgZnJlZWx5IGFzIHRoZXkgdXNlZCB0bywnJyBoZSBzYWlkLiAKVGhlcmUgbm8gc2hhbWUgaW4gdGFraW5nIGl0LCBldmVuIGlmIGl0IFBPU1NJQkxFIHlvdSBjb3VsZCBnZXQgYnkgd2l0aG91dCBpdC4gVGhlcmUgbm8gcmVhc29uIHRvIHN0cnVnZ2xlIHdpdGggdGhpbmdzIHRoYXQgbmV1cm90eXBpY2FsIHBlb3BsZSBuZXZlciBldmVuIGhhdmUgdG8gdGhpbmsgYWJvdXQuSWYgd2UgY29tcGFyZSBBREhEIHRvIHNvbWUgbW9yZSB2aXNpYmxlIGRpc2FiaWxpdGllcywgaW1hZ2luZSBzb21lb25lIHdobyB1c2VzIGEgd2hlZWxjaGFpciBidXQgdGVjaG5pY2FsbHkgaXMgY2FwYWJsZSBvZiB3YWxraW5nLiAKMzcgcG9pbnRzICBzdWJtaXR0ZWQgMTAgaG91cnMgYWdvSSBnb2luZyB0byBhc3N1bWUgdGhhdCA0IDUgaG91cnMgd2lsbCBpbmNsdWRlIHRoZSByb3VuZCB0cmlwIGFuZCBnb2luZyB0aHJvdWdoIHNlY3VyaXR5IGFnYWluLiBZb3UgY2FuIHRha2UgQkFSVCBmcm9tIHRoZSBhaXJwb3J0IGludG8gdGhlIGNpdHkgYW5kIHByb2JhYmx5IGhhdmUgYSBzb2xpZCBob3VyIG9yIHR3byB0byBtZXNzIGFyb3VuZC4gCjEwKSBFZGd5IG1lbWVzIGFyZSBub3QgYWxsb3dlZCBhbmQgd2lsbCBiZSByZW1vdmVkLiBUaGVyZSBhcmUgdmVyeSBvYnZpb3VzIGxpbmVzIHRoYXQgc2hvdWxkbiBiZSBjcm9zc2VkLiBUaGlzIGluY2x1ZGVzIChidXQgaXMgbm90IGxpbWl0ZWQgdG8pIGpva2VzIGFib3V0IHBlZG9waGlsaWEvY2hpbGQgZXhwbG9pdGF0aW9uLCByYXBlLCBpbmNlc3QsIHRlcnJvcmlzdCBhdHRhY2tzLCBzY2hvb2wgc2hvb3RpbmdzLCBzZXh1YWwgYXNzYXVsdCwgYm9tYmluZ3MsIGFuZCBvdmVybHkgcmFjaXN0L3NleGlzdC9ob21vcGhvYmljIGpva2VzLiBEb24gbWFrZSBtZW1lcyBvdXQgb2YgdHJhZ2ljIGV2ZW50cyBvbiB0aGUgZGF5IGl0IGhhcHBlbnMsIGhhdmUgc29tZSByZXNwZWN0LiBWaW9sYXRpb25zIG9mIHRoaXMgcnVsZSB3aWxsIHJlc3VsdCBpbiBsZW5ndGh5IG9yIHBlcm1hbmVudCBiYW5zLgpMZXMgZ2xpc2VzLCBjYXRoZHJhbGVzIGV0IHBhcm9pc3NlcyBub24gYWxpbmVzLCBuY2Vzc2FpcmVzIGF1IGN1bHRlLCBzb250IHJlbWlzZXMgIGxhIGRpc3Bvc2l0aW9uIGRlcyB2cXVlcyA7IG1haXMgYXVjdW4gdHJvdWJsZSBuZSBzZXJhIGFwcG9ydCBhdXggZHJvaXRzIGRlcyBwcm9wcml0YWlyZXMgZGVzIGJpZW5zIGVjY2xzaWFzdGlxdWVzIGFsaW5zIChBcnRpY2xlcyBYSUkgZXQgWElJSSkuIApUaGUgZGVzY3JpcHRpb24gb2YgZWFjaCBwYXR0ZXJuIGxpc3RzIHRoZSBmdWxsIHJhbmdlIG9mIHNldmVyaXR5LCBmcm9tIGEgbWlsZCBzZXQgb2Ygc3ltcHRvbXMgdG8gbGlmZSB0aHJlYXRlbmluZyBkaXNlYXNlLiBJZiBpbnRlcnZlbnRpb24gdGFrZXMgcGxhY2UgYXQgdGhlIGVhcmx5IHN0YWdlcywgaXQgaXMgcG9zc2libGUgdG8gcmVzdG9yZSBiYWxhbmNlIGJlZm9yZSB0aGUgc3ltcHRvbXMgYmVjb21lIG1vcmUgc2V2ZXJlLi4gCkJlbmNoZXJmaWxsZXIgIDEwIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkdvbmUgYXJlIHRoZSBkYXlzIG9mIGxlYXZpbmcgeW91J3JlIHlvdXIgaG9tZSBhbmQgZHJpdmluZyBkb3duIHRvIHBsYXkgY2FzaW5vIGdhbWVzIC4gClBhbGFkaW4gIEkgZ28gT2F0aCBvZiBjb25xdWVzdCwgb2F0aCBvZiB2ZW5nZWFuY2UsIG9yIE9hdGggb2YgYW5jaWVudHMuIFBhbGFkaW4gd291bGQgYmUgbXkgcGVyc29uYWwgbGFzdCBwaWNrIGJ1dCBhZ2FpbiBpdCBkZXBlbmRzIHdoYXQgeW91IHNlZSBpbiB0aGlzIGltYWdlIHRoYXQgeW91IGxpa2UuCkJ1dCB0aGVyZSBhcmUgbW9yZSByZWFsIHJlYXNvbnMgZm9yIHRoZSAgdG8gd2FudCBBcnRlc3Qgbm93LCBkZXNwaXRlIGhpcyBvYnZpb3VzIHJpc2tzLHRoYW4gdGhlcmUgd2VyZSBsYXN0IHllYXIsIGFuZCB0aGVyZSB3ZXJlIHNvbWUgcmVhbCByZWFzb25zIG9uIGJvdGggc2lkZXMgb2YgdGhlIGFyZ3VtZW50IGxhc3QgeWVhci4KTW9yZW92ZXIsIENvbmdyZXNzaW9uYWwgcHJvY2VkdXJlcyBmdXJ0aGVyIGNvbnN0cmFpbiByZWZvcm0uIEZvciBleGFtcGxlLCB0aGUgU2VuYXRlJ3MgY3VycmVudCBmaWxpYnVzdGVyIHJ1bGUgc3BlY2lmaWVzIHRoYXQgYSBzdXBlciBtYWpvcml0eSAgIDYwIG9mIHRoZSAxMDAgbWVtYmVyIGJvZHkgICBtdXN0IHN1cHBvcnQgYnJpbmdpbmcgYSBtZWFzdXJlIHRvIHRoZSBmbG9vciBmb3IgYSB2b3RlLiAKVGhpcyBpc24gc29tZXRoaW5nIG5ldy4gCk1heWJlIG1hbnkgb2YgdXMgZG8gbG9uZyBmb3IgdGhlIHNvcnQgb2YgcGFzc2lvbiBFZHdhcmQgYW5kIEJlbGxhIGhhdmUsIGJ1dCBzdWNoIGFuIGFsbCBjb25zdW1pbmcgbG92ZSwgdGhlIHNvcnQgdGhhdCBtYWtlcyB5b3UgbGVhdmUgeW91ciBmYW1pbHkgYW5kIGZyaWVuZHMgYmVoaW5kLCB0byBkcm9wIGFsbCBpbnRlcmVzdCBpbiB0aGUgd29ybGQgb3V0c2lkZSB0aGUgY291cGxlLCB3b3VsZCBiZSBjb25zaWRlcmVkIHBzeWNob3RpYyBhbmQgZXZlbiBkYW5nZXJvdXMgYnkgbW9zdCBvZiB1cy4gYW4gYWxsIGNvbnN1bWluZyBwYXNzaW9uIGlzIGFuIGlkZWFsLCBzb21ldGhpbmcgbGlrZSBIZWF2ZW4sIHRvIGJlIGhlbGQgb3V0IHRvIHVzIG9yZGluYXJ5IGxvdmVycyBhcyBzb21ldGhpbmcgdG8gaW1hZ2luZSBhbmQgZGVzaXJlLgpZb3UgbWF5IGhhdmUgam9pbmVkIGluIGlnbm9yYW5jZSBidXQgSSBkb24gdGhpbmsgeW91IHNob3VsZCBxdWl0IGluIGlnbm9yYW5jZSBlaXRoZXIuIEdpdmUgaXQgc29tZSB0aG91Z2h0LCBhbmQgbGlzdGVuIHRvIHRoZSB0ZWFjaGVyIHlvdSBzcG9rZSB3aXRoLiAKSXQgc291bmRzIGxpa2UgeW91IHNhdyB0b28gbWFueSBtYXJrZXRzIGFuZCBwYWxhY2VzLiAKRm9yIHRoZSBwYXN0IDIwIHllYXJzIEkgaGF2ZSBiZWVuIGxpc3RlbmluZyB0byByZWNvcmRlZCBib29rcy4gSSBjYW4gZ2V0IHRoZW0gZnJvbSB0aGUgcHVibGljIGxpYnJhcnkgc28gdGhlIGNvc3QgaXMgemVybyBhbmQgdGhlIGNvbGxlY3Rpb24gaXMgYmVpbmcgdXBkYXRlZCBhbGwgdGhlIHRpbWUuIFRoZSBsaWJyYXJ5IHdoZXJlIEkgbGl2ZSBoYXMgYm90aCB0YXBlIGNhc3NldHRlcyBhbmQgY29tcGFjdCBkaXNrcy4gClNvbWUgODAgcGVyY2VudCBvZiBEdXRjaCBKZXdzIGRpZWQgaW4gdGhlIEhvbG9jYXVzdCwgZ2l2aW5nIEhvbGxhbmQgdGhlIGhpZ2hlc3QgZGVhdGggcmF0ZSBpbiB3ZXN0ZXJuIEV1cm9wZS4gCkJvdXNmaWVsZCBTbGlkZSBTaG93cywgVGhlIEdyZWdzb24gQ2VudHJlLCBNb29yIExhbmUsIExhbmNhc3RlciwgNy4zMHBtLCBsb2NhbCBwaG90b2dyYXBoZXIgRGF2aWQgQm91c2ZpZWxkIGFuZCBoaXMgZ3Vlc3RzIHByZXNlbnQgR2xhY2llciBFeHByZXNzLCAyLjUwLCAwMTUyNCA4NDk5NTkuVGhlIFJvYmVydCBHaWxsb3csIE1hcmtldCBTdHJlZXQsIExhbmNhc3RlciwgMTBhbSBub29uIE11c2ljYWwgQnJlYWtmYXN0OyAxMi4zMCAzcG0gbHVuY2ggd2l0aCBEYXZlIEtlbGx5LCBhY291c3RpYyBndWl0YXIgZm9saywgamF6eiBhbmQgcG9wIGNsYXNzaWNzOyA4LjMwcG0gMWFtIFBva2VyIFNjaG9vbCB3aXRoIFN0ZXZlIFdpbnRlcnNnaWxsOyA5cG0gbWlkbmlnaHQgSm9ubnkncyBvbiBUaGUgUm9vZiBUb3AsIHNvbG9zIGZyb20gSmFtaWUgV2Fsa2VyIG9mIFRhbnRydW0vVGhlIEZldWQuRXZlcnl0aGluZyBVbmRlciB0aGUgU3VuLCBleGhpYml0aW9uIEJlbG92ZWQgICBQaG90b2dyYXBoaWMgRXhoaWJpdGlvbiwgQ2l0eSBNdXNldW0sIE1hcmtldCBTcXVhcmUsIExhbmNhc3Rlciwgc2hvdCBpbiBjZW1ldGVyaWVzIGFyb3VuZCBMYW5jYXNoaXJlIGJ5IHBob3RvZ3JhcGhlciBEYXJyZW4gQW5kcmV3cywgMTBhbSA1cG0uRXhoaWJpdGlvbiBvZiBhcnQgYnkgR2VybWFuIGFydGlzdCBLdXJ0IFNjaHdpdHRlcnMsIGFzIHBhcnQgb2YgYSBwcm9ncmFtbWUgb2YgZXZlbnRzIGNvbW1lbW9yYXRpbmcgSG9sb2NhdXN0IE1lbW9yaWFsIERheSAoSmFudWFyeSAyNyksIFRoZSBEdWtlcyBHYWxsZXJ5LCBNb29yIExhbmUsIExhbmNhc3RlciwgNiAxMHBtLCAwMTUyNCA1OTg1MDAuCldlcmUgb24gc2V2ZXJhbCByYWRpbyBzdGF0aW9ucyBhbmQgd29yZCBzcHJlYWQuIEl0IHdhcyB1bmlxdWUgYW5kIHBlb3BsZSB3ZXJlIGludGVyZXN0ZWQuIApMIEJyYW5kcyBJbmMuLCBvd25lciBvZiB0aGUgbGluZ2VyaWUgY2hhaW4sIGFubm91bmNlZCBXZWRuZXNkYXkgcGxhbnMgdG8gY2xvc2UgYWJvdXQgNTMgVmljdG9yaWEgU2VjcmV0cyBpbiBOb3J0aCBBbWVyaWNhIHRoaXMgeWVhciwgbW9yZSB0aGFuIHRocmVlIHRpbWVzIHRoZSAxNSBpdCBoaXN0b3JpY2FsbHkgY2xvc2VkIGRvd24gaW4gYW4gYXZlcmFnZSB5ZWFyLiAKSXQgd2FzIHJlYWxseSBiaXphcnJlIHRvIHRhbGsgdG8gcGVvcGxlLiAKSGUgbGF0ZXIgYmVjYW1lIGNoYWlybWFuIG9mIEhKIEhlaW56LCBzdWNjZWVkaW5nIEhKIEhlaW56IElJLiAKSXMgdG9vIG11Y2ggYXQgc3Rha2UuIApJIGhhZCB0aGUgaGVscCBvZiBteSBjb3VzaW4gYnV0IHNoZSB3YW50IHdpdGggbWUgaW4gZXZlcnkgY2xhc3Mgc28gSSBoYWQgdG8gZmVuZCBmb3IgbXkgc2VsZi4uIApGb3JtaW5nIFlvdXIgQ29tcGFueVBhcnQgb2Ygb3duaW5nIGEgYnVzaW5lc3MgaW5jbHVkZXMgZ2l2aW5nIGl0IGEgbmFtZSBhbmQgZGVjaWRpbmcgb24gYSBidXNpbmVzcyBlbnRpdHksIHN1Y2ggYXMgc29sZSBwcm9wcmlldG9yc2hpcCBvciBsaW1pdGVkIGxpYWJpbGl0eSBjb21wYW55LiBBcyBhIHNvbGUgcHJvcHJpZXRvciwgeW91IGNhbiB1c2UgeW91ciBTb2NpYWwgU2VjdXJpdHkgbnVtYmVyIGZvciB0YXggcmV0dXJucywgYnV0IGZvciBhbnkgb3RoZXIgbGVnYWwgc3RydWN0dXJlLCB5b3UgbmVlZCBhbiBFbXBsb3llciBJZGVudGlmaWNhdGlvbiBOdW1iZXIsIG9yIEVJTiwgZnJvbSB0aGUgSVJTLCB3aGljaCB5b3UgY2FuIGFwcGx5IGZvciBvbmxpbmUuLiAKTXkgaHVzYmFuZCBpcyBtb3JlIEhMIHRoYW4gSSBjYW4gbWVldCBoaXMgbmVlZHMuIApBIHZhc3Qgc2VsZWN0aW9uLCBhIGhlbHBmdWwgcGFwYXNhbiBhbmQgbW9kZXJhdGVseSBwcmljZWQuIEl0IHNsaWdodGx5IGRvd25tYXJrZXQgZnJvbSB0aGUgdXN1YWxseSBvcHVsZW50IEh1YXkgS2h3YW5nIGRlbnMgYnV0IHRoYXQgbWlnaHQgYmUgd2hhdCB5b3Ugd2FudCBpZiB0aGUgYmlnZ2VyL3BsdXNoZXIgcGxhY2VzIGxvb2sgYSBiaXQgZm9yZWJvZGluZy4gCldoZW4geW91IG1ha2UgYSBuZXcgcnVsZSBmb3IgYSAicHJvdGVjdGVkIGNsYXNzIiB5b3UgaGF2ZSBub3cgbWFkZSB0aGUgcnVsZSBlbmZvcmNlbWVudCBldmVuIG1vcmUgc3ViamVjdGl2ZS4uIApJIGZlZWwgbGlrZSBldmVyeW9uZSBzcGFtbWluZyB0aGF0IHBpY3R1cmUgaW4gdGhyZWFkcyBhYm91dCBoaW0gd2l0aG91dCBhbnkgY29udGV4dCBzZWVtcyBwcmV0dHkgZGlzaW5nZW51b3VzLiBJZiBpdCB3YXMganVzdCBhbiBpbnRlcnZpZXcgSSBkb250IHNlZSBhIHByb2JsZW0sIGhlIGRvZXNudCBleGFjdGx5IGxvb2sgaGFwcHkgaW4gdGhlIHBpY3R1cmUgZWl0aGVySW5zdHJ1Y3Rpb25zIGZvciBpbW1lZGlhdGUgbmVnb3RpYXRpb25zIHJlZ2FyZGluZyB0aGUgam9pbnQgb3BlcmF0aW9uIG9mIGFwcGx5aW5nIGFydGlmaWNpYWwgcmFpbiB0ZWNobm9sb2dpZXMgaW4gdGhlIEVhc3QgQ2hpbmEgU2VhV2l0aCB0aGF0IGhlIGluc3RydWN0ZWQgbmVnb3RpYXRpb25zIGZvciBjb25zdHJ1Y3RpbmcgYSBmaW5lIGR1c3QgZm9yZWNhc3Rpbmcgc3lzdGVtIGluIHJlc3BlY3RpdmUgY291bnRyaWVzSGUgaW5zdHJ1Y3RlZCB0aGUgZ292ZXJubWVudCB0byBmb2N1cyBvbiB0aGUgZmluZSBkdXN0IGlzc3VlIGFuZCB0byBhbGxvY2F0ZSBlbWVyZ2VuY3kgYnVkZ2V0cyBhcyBuZWVkZWQgdG8gY29tYmF0IGZpbmUgZHVzdC5JbnN0cnVjdGlvbnMgdG8gcmV2aWV3IHBvc3NpYmxlIG1lYXN1cmVzIGluIGVuZm9yY2luZyB0aGUgZWFybHkgc2h1dGRvd24gb2Ygb2xkIGNvYWwgcG93ZXIgcGxhbnRzIChyYXRoZXIgdGhhbiB0aGUgY3VycmVudCB0cmFuc2l0aW9uYWwgc2h1dGRvd24gc3RyYXRlZ3kgYWxyZWFkeSBpbiBlZmZlY3QpLi4gCkRvbmMgcG91cnF1b2kgc29udCBlbGxlcyBsID8gTG9ycyBkJ3VuIGNoYW5nZSBhdmVjIGxlcyBlbXBsb3lzIHByc2VudHMsIG5vdXMgYXBwcmVub25zIHF1J2VsbGVzIGFwcGFydGllbm5lbnQgZW4gZmFpdCAgZCdhdXRyZXMgc29jaXRzIGRlIGdlc3Rpb24gZGUgbWFyY2ggKGNvdWxldXIgZGlmZnJlbnRlLCBub3VzIGF2b25zIHB1IGxlIGNvbnN0YXRlciBzdXIgbGUgY2FtaW9uKS4gQWluc2kgZGVzIGNvbW1lcmFudHMgcHJlbmRyYWllbnQgZGVzIGJhbm5lcyBkZSBjaSBkZSBsLCBldCBmYXV0ZSBkZSBwbGFjZSBkYW5zIGxldXJzIGNhbWlvbnMgY2VydGFpbnMgam91cnMgb3UgcG91ciBjYXVzZSBkZSB0cm9wIG1hdXZhaXMgdGF0LCBpbHMgbGVzIGFiYW5kb25uZXJhaWVudC4gSWwgZmF1ZHJhaXQgZG9uYyBxdWUgY2Ugc29pdCBsZSBib24gZ2VzdGlvbm5haXJlIHF1aSB2aWVubmVudCBsZXMgcmVjaGVyY2hlciAhCjQuIApPdXIgV1cyIHZldGVyYW5zIGFuZCBzdXJ2aXZvcnMgYXJlIGR5aW5nIG91dCBhbmQgd2lsbCBiZSBnb25lIHdpdGhpbiB0aGUgbmV4dCBkZWNhZGUsIHRoYXQgZG9lc24gbWVhbiB3ZSB3b24gc3RpbGwgY2FyZSBhYm91dCB0aGUgaG9sb2NhdXN0LiAKSSBhbSBmZWVsaW5nIHNvIG1hbnkgZGlmZmVyZW50IGVtb3Rpb25zIHJpZ2h0IG5vdy4gSSBmZWVsIHNvcnJ5IGZvciBoZXIsIGJ1dCBJJ20gYWxzbyBhbmdyeSBhdCBoZXIuIApKZSBwZXV4IGRpcmUgc2kgdm91cyBjcmFpZ25leiBkZSBwcmVuZHJlIGR1IHBvaWRzIGZyZWluZXogc3VyIGxlIHJlcGFzIGR1IHNvaXIsIHBvdGFnZSBzYW5zIHBhdGF0ZSBuaSBjYXJvdHRlcywgbGd1bWVzIHZlcnRzIGV0Yy5Qb3VyIHRlcm1pbmVyIHN1ciB1biBob3JzIHN1amV0ICh2b3VzIHZvdXMgcGVybWV0dGV6IGRhbnMgdm9zIGFydGljbGVzIGFsb3JzIGFsbG9ucyB5KSBxdWkgcG91cnJhaXQgYXR0aXNlciB2b3RyZSBjdXJpb3NpdCwgaidhaSBjaGVyY2ggIkJlY2tlciIgbWFpcyBqZSBuJ2FpIHJpZW4gdHJvdXYgc3VyIHZvdHJlIGJsb2cuLiAKIlRoZSBicnV0ZXMsIHRoZXNlIGJpZyBwdXJwbGlzaCBsb29raW5nIGFsaWVucywgd2hlbiB0aGV5IHRyaWVkIHRvIGF0dGFjayB5b3Ugb24gYSB2ZWhpY2xlIHRoZWlyIGF0dGFjayB3YXMgYSBoZWFkYnV0dC4gQnV0IGJlY2F1c2UgdGhlIGJydXRlIG1vZGVsIGhhZCBubyBuZWNrIHRoZWlyIGhlYWRidXR0IHdhcyB3ZWlyZCBsb29raW5nLCBpdCBpbnZvbHZlZCB0aGlzIHBlbHZpYyB0aHJ1c3QuIgpJdCB0aGUgdXNlIG9mIFVTIHRheGRvbGxhcnMgdG8ga2VlcCBpdHNlbGYgb24gdG9wIGFuZCB0aGVuIHVzaW5nIHRoZSBwcm9maXRzIGZyb20gdGhvc2UgdGF4IGRvbGxhcnMgdG8gcGF5IGV2ZW4gYmlnZ2VyIHNhbGFyaWVzIHRvIHRoZSBHb2xkbWFuIFNhY2hzIGJhbmtlcnMgdGhhdCBtYWtlcyB0aGUgT2JhbWEgYmFpbG91dCBsb29rIGxpa2UgYSBiYWlsb3V0IGZvciBiYW5rZXJzIGFuZCBub3QgdGhlIHBlb3BsZS4gSXQgaXMgYWxzbyB3aHkgTWF0dCBUYWliYmkgcmVmZXJyZWQgdG8gR29sZG1hbiBTYWNocyBhcy4gClBhcnQgb2YgaXQgaXMgdGhhdCBXb1cgd2FudHMgdG8gbWFpbnRhaW4gYSBtdWNoIGxvd2VyIGJhciBmb3Igd2hhdCB0eXBlIG9mIFBDIHdpbGwgcnVuIHRoZSBnYW1lLCBzbyB0aGV5IGRvbiB1cCB0aGUgcG9seWdvbnMgYW5kIHRleHR1cmUgcmVzb2x1dGlvbnMgdG8gdGhlIHNhbWUgYW1vdW50cyBhcyBuZXdlciBhbmQgbm9uIHN1YnNjcmlwdGlvbiBnYW1lcyBkby4gT3IgZWxzZSB0aGV5IGp1c3QgY2hvcCBzb21lIG9mIHRoZWlyIHJldmVudWUgb2ZmIGZvciBubyByZWFzb24uCk5pbmEgQm8nTmluYSBpcyBhIGxlZ2VuZCwgYW5kIGEgZmllcmNlIHBlcmZvcm1lciEgSSdtIHN1cmUgeW91J2xsIGxvdmUgaXQhIDopIE1heWJlIGJyaW5nIGp1c3Qgb25lIChwb3NzaWJseSB0d28pIGNsb3NlIGZyaWVuZHMgb3IgZmFtaWx5IG1lbWJlcnMgdGhhdCB5b3UgZmVlbCBjb21mb3J0YWJsZSB3aXRoIHNvIHlvdSBjYW4gZW5qb3kgdGhlIGV4cGVyaWVuY2UuIApZb3UgY2FuIGx1Y2sgb3V0IHNpbmNlIHNvbWUgbW9uaXRvcnMgZG9uIGdvIHRocm91Z2ggaGVhdnkgdXNlIGFuZCBhcmUgc3RpbGwgbGlrZSBicmFuZCBuZXcuIApJIG1hZGUgdHdvIGNhc2ggb3V0cyBzbyBmYXIgYW5kIGJvdGggd2VyZSBwcm9jZXNzZWQgd2l0aGluIGFuIGhvdXIgb2YgbXkgcmVxdWVzdCAoYnV0IHRoZXkgb25seSBhbGxvdyBvbmUgY2FzaCBvdXQgcGVyIDQ4IGhvdXJzKS4gClByb3N0aXR1dGlvbiB2YXJpYW50cyBpbiBLb3JlYQpJIGFtIHNsb3dseSBiZWNvbWluZyBhd2FyZSB5ZXQgYWdhaW4gb2YgaG93IGVhc2lseSBteSBlbWFpbHMgY2FuIGVpdGhlciBiZSBtaXNyZWFkIG9yIGFyZSBwb29ybHkgZnJhbWVkIG9yIHBocmFzZWQsIGFuZCBtYXkgYmUgdW5kZXJzdG9vZCBpbiBhIHdheSBJIGhhZCBub3QgaW50ZW5kZWQuIEl0IHdhcyBhbWF6aW5nIHRvIHNlZSB0aGVpciBsb3ZlIGRldmVsb3AgYW5kIG1hbmlmZXN0IGl0c2VsZi4gCkV4Y2VwdCBoaW0uIApXaGVuIHlvdSB1c2UgYSBCbGFja2phY2sgYW5kIFRleGFzIEhvbGRlbSAzNiB4IDcyIEluY2ggMiBTaWRlZCBMYXlvdXQgeW91IGhhdmUgdGhlIGV4YWN0IHRhYmxlIHlvdSB3aWxsIHNlZSBpbiBhIGNhc2lubyB3aGVuIHlvdSBnbyBwbGF5IHRoZSByZWFsIHRoaW5nLiBVc2luZyBhIGxheW91dCBsaWtlIHRoaXMgaXMgdGhlIGJlc3Qgb3B0aW9uIGJlY2F1c2UgeW91IGFyZSBnYWluaW5nIGV4cGVyaWVuY2UgYmVmb3JlIHlvdSBsYXkgZG93biB5b3VyIG1vbmV5IHRvIHRoZSBkZWFsZXIuIApJIGhhZCBtZWV0aW5ncyBhdCB0aGUgVU4gdGhvdWdoIG9uIE1vbmRheSBhbmQgZXZlbiB0aG91Z2ggSSB3ZW50IEkgd2FzIGFic29sdXRlbHkgZnVja2VkLiBDb3VsZG4gbW92ZSBteSBuZWNrIGFuZCBldmVyeXRoaW5nIGh1cnQuIApUaGV5J3JlIG9uIGVpdGhlciBzaWRlIG9mIHlvdXIgaGVhZCBhYm91dCAxIGluY2ggKDIuNTQgY2VudGltZXRlcnMpIGJlaGluZCB5b3VyIGV5ZXMuIApIZXJlJ3MgYSBjb3VudGVycG9pbnQgIGlmIHRoZXkgZG9uJ3Qgc2VsbCBzb21ldGhpbmcsIGhvdyBkbyB5b3UgZXhwZWN0IHRoZW0gdG8gc3RheSBhZmxvYXQ/IFRoZXJlIGFyZSBhIFRPTiBvZiBzdXBwbGVtZW50cyBvdXQgdGhlcmUsIHdoaWNoIG1lYW5zIGEgdG9uIG9mIHdvcmsgcmVhZGluZyBhbmQgc3ludGhlc2l6aW5nIHRoYXQgcmVzZWFyY2guIEluIGFkZGl0aW9uLCB5b3UgcmVhbGx5IG5lZWQgYW4gZXhwZXJ0IHRvIGJlIHJlYWRpbmcgc2FpZCByZXNlYXJjaCB0byBnaXZlIGVhY2ggc3R1ZHkgYW4gZWZmZWN0aXZlIHJlYWRpbmcgIHZlcnkgdW5saWtlbHkgdGhhdCB5b3UgY291bGQgcHVsbCB0b2dldGhlciBlbm91Z2ggZXhwZXJ0IGxhYm9yIGZvciBmcmVlLi4gCkluIHN1Y2ggY2FzZXMsIGxlYWRlcnMgbWlnaHQgdHJ5IHRvIHVzZSBjb2FjaGluZywgd2FybmluZ3MgYW5kIGluY2VudGl2ZXMgdG8gY3VyYiB0aGUgdG94aWMgZW1wbG95ZWUgYmVoYXZpb3IuIApXaGljaCB3b3JrIHdlbGwgb24gc29tZSB0eXBlcyBvZiBpY2UsIGJ1dCBub3Qgb3RoZXJzLiAKVGhpcyByZXNlYXJjaCBpcyBhbHNvIHJlYXNzdXJpbmcuIExpa2UgYWxsIG5ldyB0ZWNobm9sb2dpZXMsIHRoZSBJbnRlcm5ldCBoYXMgcHJvdm9rZWQgYSB0cmVtZW5kb3VzIGFtb3VudCBvZiBhbnhpZXR5LCBhcyBwZW9wbGUgd29ycnkgYWJvdXQgdGhlIGRlY2F5IG9mIG91ciBhdHRlbnRpb24gc3BhbnMgYW5kIHRoZSBkaXNzb2x1dGlvbiBvZiBhdXRoZW50aWMgaHVtYW4gY29udGFjdC4gV2UgYXJlIHNvbWV0aW1lcyBzbyBidXN5IHRleHRpbmcgdGhhdCB3ZSBmb3JnZXQgdG8gdGFsaywgYW5kIGl0IHNlZW1zIHRvIHNvbWUgdGhhdCBvdXIgb25saW5lICJmcmllbmRpbmciIGhhcyBydWluZWQgcmVhbCBmcmllbmRzaGlwLgpDaGVjayB0aGUgd2VhdGhlciBmb3JlY2FzdCBpZiB5b3UgcGxhbiBvbiBkcml2aW5nIG91dCBsYXRlIGF0IG5pZ2h0LiBJIHNlZW4gdGhlIHdlYXRoZXIgdHVybiBmcm9tIDU1IGFuZCBzdW5ueSBkdXJpbmcgdGhlIGRheSB0byAyNSBhbmQgc25vdy9mb2cgc28gdGhpY2sgeW91IGNvdWxkbiBzZWUgeW91ciBidW1wZXIgdXAgb24gdGhlIG1vdW50YWluIHRoYXQgaXMgb24gdGhlIGJvcmRlciBvZiBXVi9WQS4KQnV0IG15IGZhbWlseSBsb3ZlcyBSZWQgTG9ic3Rlci4gCkp1c3QgZW5vdWdoIHRvIGZlZWwgZW1iYXJyYXNzZWQgZm9yIGhpbSBhbmQgaG9wZSB0aGF0IHNvbWVvbmUgaXMgdGhlcmUgbG9va2luZyBhZnRlciBoaW0gd2hpbGUgaGlzIHdpZmUgaXNuIHRoZXJlIHRvLiAKVGhlIGNvbXBhbnkncyBvZmZpY2VzIGFyZSBhdCA5NDggTm9ydGggU3QuIE9yZ2FuaWMgaW5kdXN0cnkgdmV0ZXJhbiBNYXJrIFJldHpsb2ZmLCB3aG8gY28gZm91bmRlZCBBbGZhbGZhJ3MgTWFya2V0IGFuZCBBdXJvcmEgT3JnYW5pYyBEYWlyeSwgc2l0cyBvbiBIYWJpdGF0J3MgYm9hcmQgb2YgZGlyZWN0b3JzLgpIb3dldmVyLCBvbiBoYXJkIGNvdXJ0cywgaXQgaXMgZG9uZSBpbiBwYWludC4gCjIzIHRvIG1ha2Ugc3VyZSB0aGVyZSBhcmUgbm8gbGFzdCBtaW51dGUgZmFtaWxpZXMgc3RydWdnbGluZyB0byBwcm92aWRlIGEgQ2hyaXN0bWFzIGZvciB0aGVpciBraWRzLiBUaGUgdGVhbXMgY29uc2lzdCBvZiB0aHJlZSBwZW9wbGUgZWFjaCBhbmQgdGhlIGVudHJ5IGZlZSBpcyAkMjAuIApEcm92ZSB0byBMb3Vpc2lhbmEgU2F0dXJkYXksIHBsYXllZCB3aXRoIGEgZ3V5IHRoYXQgaGFkIGEgV1NPUCBob29kaWUgYW5kIFdTT1AgaGF0IG9uLiBCcm91Z2h0IGlQYWQgYW5kIGhlYWRwaG9uZXMgdG8gdGhlIHRhYmxlLiBIZSBwbGF5ZWQgc3VwZXIgbG9vc2UgYWdncmVzc2l2ZSBhbmQgaGUgZ290IGludG8gYSAxLzMgZ2FtZSBmb3IgJDI2MDAsIHRyaWVkIHRvIGludm9rZSBtYW5kYXRvcnkgYnV0dG9uIHN0cmFkZGxlcywgYW5kIGhlIGxlZnQgZG93biAkODAwLiAKQnV0cyBpdHMgbm90IHJlYWxseSB0aGF0IHN0cmFpZ2h0IGZvcndhcmQuIEkgaGF2ZSBiZWVuIGRvaW5nIGEgbGl0dGxlIG5vcm1hbCBzdGFuY2UgaW4gbXkgdHJhaW5pbmcgYnV0IDc1JSBzdW1vIHN0YW5jZS4gTXkgZGVhZGxpZnQgaXMgc3Ryb25nZXIgdGhhbiBldmVyLCBidXQgbm9ybWFsIHN0YW5jZSBpcyB3ZWFrZXIgdGhhbiBpdCB3YXMgbGFzdCB5ZWFyLgpXaGlsZSB0aGUgU2NvdHRpc2ggYXJteSB3YXMgaGVhZGluZyBpbiBoZXIgZGlyZWN0aW9uLiBCZWZvcmUgeW91IGtuZXcgaXQsIElzYWJlbGxhIHdhcyBzdXJyb3VuZGVkIGJ5IGhvc3RpbGUgZm9yY2VzIGFuZCBpdCB0b29rIGEgY291cGxlIG9mIGhlciBrbmlnaHRzIHN0ZWFsaW5nIGJvYXRzIHRvIGdldCBoZXIgb3V0IG9mIHRoZSBqYW0uIApOb3csIGhlIHNhaWQsIHNpbmdsZSBncmVhc2VzIHdpbGwgZG8gc2V2ZXJhbCBqb2JzIHdoZXJlIGZvcm1lcmx5IGRpZmZlcmVudCBsdWJyaWNhbnRzIHdlcmUgcmVxdWlyZWQuIApTdXJlIHlvdSBhc2sgZm9yIGEgdGFibGUgaW4gdGhlIHBpY3R1cmVzcXVlIGNvdXJ0eWFyZCBzbyB5b3UgY2FuIGVuam95IGJlYXV0aWZ1bCBzY2VuZXJ5IHdoaWxlIGEgdGVhbSBvZiBpbXBlY2NhYmx5IHRyYWluZWQgY2hlZnMgYW5kIHNlcnZlcnMgZGVsaXZlciBnb3VybWV0IGRpc2hlcywgbGlrZSBsb2JzdGVyIHJhdmlvbGkgYW5kIGhlYXJ0eSByb3NlbWFyeSBzdGVha3MsIHRoYXQgYXJlIGd1YXJhbnRlZWQgdG8gaW1wcmVzcywgd3JvdGUgcmV2aWV3ZXIgUmFtb25hLgpTbWFydGVyIG9yZ2FuaXphdGlvbnMgZG9uJ3QgaWdub3JlIGlubmF0ZSB0YWxlbnRzIGFuZCBleHBlcmllbmNlLiAKSSBzZWVuIHBvc3QgYWZ0ZXIgcG9zdCBvZiBwZW9wbGVzICJncmlsbGVkIGNoZWVzZXMiIGFsbCBvdmVyIHJlZGRpdCBhbmQgaXQgYmVlbiBkcml2aW5nIG1lIGluc2FuZS4gClRocyBzIHdoZW4gd2UgZGVjZGVkIHdlIGNhbiBzbGVlcCB3aGVuIHdlIGRlYWQgICBhbmQgdGhzIGJlY2FtZSBvdXIgdW5vZmZjYWwgbW90dG8gb2YgdGhlIHRycCEuIApJZiB5b3Ugd2FudCB0byBiZSBkb3VibHkgc3VyZSBpdCdzIHJlYWR5LCBwbGFjZSBhIHNtYWxsIGFtb3VudCBvbiBhIHBsYXRlIGFuZCByZWZyaWdlcmF0ZSBpdCB1bnRpbCBpdCdzIGNvb2wgYnV0IG5vdCBjb2xkLiAKVGhpcyBQcml2YWN5IFBvbGljeSBhcHBsaWVzIHdoZW4geW91IHVzZSBhIHdlYnNpdGUsIG1vYmlsZSBvciB0YWJsZXQgYXBwbGljYXRpb24sIG9yIG90aGVyIG9ubGluZSBzZXJ2aWNlIChjb2xsZWN0aXZlbHksIHRoZSAiU2VydmljZXMiKSB0aGF0IGxpbmtzIG9yIHJlZmVycyB0byBpdC4gClN0YXJ0IG91dCB3aXRoIHRoZSBpZGVhbCBnYXMgbGF3IGVxdWF0aW9uLCBQVj1OUlQuIApKZWZmIEhvcm4gc2VuaW9yIGFkdmlzZWQgYWdhaW5zdCBzdWdnZXN0aW5nIGFzIG11Y2ggdG8gaGlzIHNvbi4gIkRvbiB0ZWxsIGhpbSB0aGF0IGhlIGdvdCByZWQgaGFpciwiIGhlIHNhaWQuIApSb2xsZXIgZ2l2ZXMgdGhlbSBhIHRlc3QgZGVzaWduLiBPbmNlIGluIHRoZSBzeXN0ZW0sIHdvcmsgaXMgcmV2aWV3ZWQgb24gYSBtb250aGx5IGJhc2lzLiAKVGhhdC4gClRoZXJlIG1heSBhbHNvIGJlIGVsZW1lbnRzIG9mIGNsYXNzaXNtIGFuZCBhZ2Vpc20gdGhhdCB3ZW50IGludG8gdGhlIGd1eSBjb21tZW50LCBidXQgaW4gdGhpcyBzY2VuYXJpbyBkZWZpbml0ZWx5IHNleGlzbSwgdG9vLiBIZSBldmVuIG1hZGUgYSBwb2ludCBvZiBzYXlpbmcgImJlYXV0eSBBTkQgYnJhaW5zIiBhcyBpZiBpdCBzdXJwcmlzaW5nIG9yIGltcHJlc3NpdmUgc2hlIGhhdmUgYm90aC4gCk1vc3QgcGVvcGxlIGtuZXcgd2hhdCB0aGUgTmF6aXMgd2VyZSBhYm91dCBhbmQgdGhlc2UgY29ycG9yYXRpb25zIGhhZCA2IDggeWVhcnMgdG8gZGl2ZXN0LCByZXB1cnBvc2UsIG9yIGFiYW5kb24gdGhlaXIgR2VybWFuIG9wZXJhdGlvbnMuLiAKSG93aGlnaGlzdG9vaGlnaFRoaXMgdXNlciBoYXMgbm90IHlldCBiZWVuIHZlcmlmaWVkLgpCYXJyaXN0YW4gdGhpbmtzIGFib3V0IHNvbWVob3cgZmluZGluZyBiZWV0bGVzIGZvciBRdWVudHluIGNvcnBzZSB0byBnZXQgaGltIGJhY2sgdG8gRG9ybmUuIAoiT25lIFdvcmQgRXh0aW5ndWlzaGVyIiBoYXMgYWx3YXlzIGVtb3Rpb25hbGx5IHJlc29uYXRlZCB3aXRoIG1lIGhlYXZpbHkgICBhbmQgbm8gb3RoZXIgb2YgSGVycmVuIHByb2plY3RzIGhhcy4gClR3ZW50eSBzZXZlbiBwYXBlcnMgd2VyZSBpbmNsdWRlZCBpbiB0aGlzIHJldmlldzogMTAgUkNUcyAoYXJvdW5kIDI0MCBwYXRpZW50cyk7IGFuZCAxNyBzdHVkaWVzIGxhYmVsbGVkIGFzIGNhc2Ugc2VyaWVzIChhcm91bmQgMjAwIHBhdGllbnRzKSAuIApOZXcgZGV2ZWxvcG1lbnQgaXMgdGhlIG5ldyBwcmV3YXIuIi4gClRob3NlIGZvcndhcmRzLCB3aXRoIGZldyBleGNlcHRpb25zLCB3ZXJlIGFsbCBsb2NhbCBtZW4sIHBsYXlpbmcgZm9yIHRoZSBsb3ZlIG9mIHRoZSBnYW1lLCBidXQgaW4gdGhlIHR3byB0ZWFtcyB3ZXJlIGhpZ2hseSBwYWlkIGNvYWNoZXMsIGFwcGFyZW50bHkgY29udGVudCB0byBhbGxvdyB0aGUgZm9yd2FyZHMgY2xvc2UgdGhlIGdhbWUgdXAgYW5kIGJhdHRsZSBpdCBvdXQgaW4gdGhlIHdvcnN0IHR5cGUgb2Ygc3BlY3RhY2xlIGZyb20gdGhlIHN1cHBvcnRlcnMgcG9pbnQgb2Ygdmlldy4gCk1vc3RseSwgaGlzIGdhemUgd2FzIHRyYWluZWQgc3RyYWlnaHQgYWhlYWQuIEEgZmV3IHRpbWVzIGR1cmluZyBsb25nZXIgd2FpdHMgb24gdGhlIHRlZSBibG9jayB3aGVyZSBoZSBoYWQgdGhlIGhvbm91cnMgYWxtb3N0IGFsbCBkYXkgaGUgdGVlZCB1cCwgdG9vayBhIGZldyBzdGVwcyBiYWNrIGFuZCB3b3VsZCBqdXN0IHN0YXJlIGF0IGhpcyBiYWxsLi4gCiJJIGZlZWwgbGlrZSBteXNlbGYgZm9yIHRoZSBmaXJzdCB0aW1lIGV2ZXIsIiBzaGUgdG9sZCBSb2xsaW5nIFN0b25lIGluIE9jdG9iZXIsIGFmdGVyIHRoZSBhbGJ1bSBkZWJ1dGVkIGF0IE5vLiAKSXQncyB2ZXJ5IHVudXN1YWwgYW5kIHdoZW4gcGxheWVycyBzZWUgc3VjaCBzeXN0ZW0gdGhleSBkb24ndCBsaWtlIGl0IGluIHRoZSBiZWdpbm5pbmcuIAoiRm9yY2luZyB1c2Ugb2YgY2FzaCIgYW5kICJiYW5uaW5nIGNhc2hsZXNzIHN0b3JlcyIgYXJlIHR3byBkaWZmZXJlbnQgdGhpbmdzLiBJbiBtb3N0IGRldmVsb3BlZCBXZXN0ZXJuIGNvdW50cmllcywgYW4gYWxsIGNhc2ggbGlmZXN0eWxlIGlzIGZvciBkcnVnZ2llcywgTUdUT1cgbnV0dGVycywgYW5kIHRoZSB2ZXJ5IHBvb3IuIFRoZSBwb29yIHdlcmUgdGhlIGlzc3VlIHdoZW4gdGhlc2UgdHlwZXMgb2YgYmFucyBhcmUgd3JpdHRlbiwgYmVjYXVzZSB0aGUgb25seSB3YXkgZm9yIGEgcG9vciBwZXJzb24gdG8gZ2V0IGFjY2VzcyB0byBjYXNobGVzcyBwYXltZW50IHN5c3RlbXMgaXMgdG8gdXNlIG9uZSBvZiB0aG9zZSBwcmVkYXRvcnkgcHJlIHBhaWQgY2hhcmdlIGNhcmRzLCB3aGljaCBJIHRoaW5rIG1vc3QgcmVhc29uYWJsZSBwZW9wbGUgY2FuIGFncmVlIGlzIGtpbmRhIGZ1Y2tlZCB1cC4KVG8gYWR2ZXJ0aXNlLCBsZWF2ZSBmbHllcnMgYW5kIHBvc3RlcnMgYXQgYmlrZXIgYmFycywgYmlrZXIgZXZlbnRzIGFuZCBtb3RvcmN5Y2xlIHNob3BzIGluIHlvdXIgYXJlYS4gSWYgeW91IGFyZSBsb29raW5nIGZvciBhIGJpZyBjcm93ZCwgcnVuIGFuIGFkIG9uIGEgbG9jYWwgUmFkaW8gU3RhdGlvbiwgdGhpcyB3aWxsIGNvc3QgeW91IHNvbWUgdXBmcm9udCBtb25leSBidXQgeW91IGNhbiBnZXQgdGhlIG1lc3NhZ2UgdG8gYWxsb3Qgb2YgcGVvcGxlLiBBbHNvIGlmIHlvdSdyZSBpbnRvIHRoZSBpbnRlcm5ldCB0aGluZywgeW91IGNhbiBydW4gYSBCYW5uZXIgQWQgYWR2ZXJ0aXNlbWVudCBvbiByZWxldmFudCB3ZWJzaXRlcy4gS2VlcCBpbiBtaW5kIHlvdXIgbWFya2V0aW5nIGVmZm9ydHMgc2hvdWxkIGJlIGxvY2FsaXplZCwgbW9zdCBiaWtlcnMgYXJlIG9ubHkgbG9va2luZyBmb3IgYSBkYXkgZXZlbnQgYW5kIHdpbGwgbm90IHRyYXZlbCBmYXIgZm9yIGEgcG9rZXIgcnVuLgpXaGF0IGFyZSB0aGUgcG9rZXIgY2hpcHMgdmFsdWUgaW4gb3JkZXI/ClRoZXkga2lja2VkIG91dCB3aG9tIHRoZXkgY291bGQgYW5kIGdoZXR0b2l6ZWQgdGhlIHJlc3QuICJCdXQgbG9vaywgd2UgYSBmcmllbmRseSBkZW1vY3JhY3khIiAiV2UgZG9uIHRhcmdldCBjaXZpbGlhbnMhIiBXZWxsLCBzdXJlLCBleGNlcHQgd2hlbiB5b3UgdGFyZ2V0IHRoZWlyIGxhbmQgYW5kIGxpdmVsaWhvb2RzLiAKSW4gYWRkaXRpb24sIGhlIGRpc2NvdmVyZWQgaG93IHRvIG1ha2UgaGlzIG93biB0cmFkZW1hcmtlZCBmYWJyaWMgb3V0IG9mIGV1Y2FseXB0dXMgdHJlZXMuIApEaWZmZXJlbmNlIGlzIHRoYXQgSSBzaWduZWQgZm9yIHRoZXNlIHBvbGljZXMgMTEgeWVhcnMgYWdvIGluIDIwMDcsIEkgZGlkbiBsb3NlIG1vbmV5IG92ZXJhbGwsIHRoZSByZXR1cm5zIGNvdWxkIGhhdmUgYmVlbiBiZXR0ZXIgaWYgSSB3YXMgbW9yZSBwcnVkZW50IGJ1dCB0aGF0IHdhcyB0aGUgcHJpY2UgZm9yIG15IGlnbm9yYW5jZS4gCkFkb2xmIEhpdGxlciB3YXMgZGV0ZXJtaW5lZCB0byB3YWdlIHdhciwgaXQgd2FzIG5vIG1vcmUgaW5ldml0YWJsZSB0aGF0IGhpcyAxOTM5IGludmFzaW9uIG9mIFBvbGFuZCBwcmVjaXBpdGF0ZWQgZ2xvYmFsIGNvbmZsaWN0IHRoYW4gdGhhdCB0aGUgYXNzYXNzaW5hdGlvbiBvZiBBcmNoZHVrZSBGcmFueiBGZXJkaW5hbmQgb2YgQXVzdHJpYSBkaWQgc28gaW4gMTkxNC4gQnJpdGFpbiBhbmQgRnJhbmNlIGxhY2tlZCBib3RoIHRoZSB3aWxsIGFuZCB0aGUgbWVhbnMgdG8gdGFrZSBlZmZlY3RpdmUgYWN0aW9uIHRvd2FyZHMgZnVsZmlsbWVudCBvZiBzZWN1cml0eSBndWFyYW50ZWVzIHRoZXkgaGFkIGdpdmVuIGVhcmxpZXIgdG8gdGhlIFBvbGVzLiBUaGUgZGVjbGFyYXRpb25zIG9mIHdhciBvbiBHZXJtYW55IHdlcmUgZ2VzdHVyZXMgd2hpY2ggZXZlbiBzb21lIHN0YXVuY2ggYW50aSBOYXppcyB0aG91Z2h0IGZvb2xpc2gsIGJlY2F1c2UgZnV0aWxlLiBGb3IgZXZlcnkgZXZlbnR1YWwgYmVsbGlnZXJlbnQgc2F2ZSB0aGUgUG9sZXMgdGhlbXNlbHZlcywgdGhlIHN0cnVnZ2xlIGJlZ2FuIHNsb3dseTogb25seSBpbiBpdHMgdGhpcmQgeWVhciBkaWQgZ2xvYmFsIGRlYXRoIGFuZCBkZXN0cnVjdGlvbiBhdHRhaW4gdGhlIHZhc3RuZXNzIHN1c3RhaW5lZCB0aGVyZWFmdGVyIHVudGlsIDE5NDUuIEV2ZW4gSGl0bGVyIFJlaWNoIHdhcyBhdCBmaXJzdCBpbGwgZXF1aXBwZWQgdG8gZ2VuZXJhdGUgdGhlIGludGVuc2l0eSBvZiB2aW9sZW5jZSBkZW1hbmRlZCBieSBhIGRlYXRoIGdyYXBwbGUgYmV0d2VlbiB0aGUgbW9zdCBwb3dlcmZ1bCBuYXRpb25zIG9uIGVhcnRoLiBib29rIGdpdmVzIGEgcGFub3JhbWljIHZpZXcgb2YgdGhlIFNlY29uZCBXb3JsZCBXYXIgZnJvbSBIaXRsZXIgaW52YXNpb24gb2YgUG9sYW5kIHRvIGEgY2hhcHRlciBlbnRpdGxlZCBhbmQgVmFucXVpc2hlZCBhbmQgaXQgZG9lcyBzbyBvbiB0aHJlZSBkaWZmZXJlbnQgbGV2ZWxzOwpFYWNoIGdpZnQgaXMgYm91Z2h0IHdpdGhpbiBhIHNldCBidWRnZXQgb2Ygbm9ybWFsbHkgYXJvdW5kICQxMCB0byAkMjAuIApUaGVzZSBvbmxpbmUgcG9rZXIgdG91cm5hbWVudHMgY2FuIGJlIHZlcnkgdXNlZnVsIHdoZW4gY29tcGFyZWQgdG8gdGhlIHJlYWwgY2FzaW5vIHBva2VyLiAKQWxsIHRoYXQgc2FpZCwgYXNrIHlvdXJzZWxmIHdoeSB0aGV5IHdvdWxkIG9mZmVyIHRvIHBheSBhIHllYXIgdXAgZnJvbnQuIApUaGlzIGhhcyBubyBlZmZlY3Qgb24gdW5kZWFkIG9yIGNvbnN0cnVjdHMuLiAKIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdveWUgdGhlcmUgYXJlIGFsd2F5cyBzb21lIGV4Y2VwdGlvbnMgdGhhdCBob2xkIHRoZWlyIG93biBzdGFuZGFyZHMgb3ZlciB0aGVpciBvd24gaGFwcGluZXNzLCBidXQgYmVpbmcgbW9yZSBkZW1hbmRpbmcgaW4gbG92ZSBkb2VzIG5vdCBtYWtlIHlvdSBsZXNzIGxvbmVseSwgYW5kIGV2ZXJ5b25lIHN1ZmZlcnMgZnJvbSBsb25lbGluZXNzLCBpdHMganVzdCBhIG1hdHRlciBvZiBob3cgbG9uZyBhbmQgaG93IG11Y2guYnV0IGZyaWVuZHNoaXAgYW5kIGRhdGluZyBhcmUgdHdvIGRpZmZlcmVudCB0aGluZ3MsIHlvdSBsaWtlbHkgZG9uIHNlZSB5b3VyIGZyaWVuZHMgYXMgZGF0aW5nIG1hdGVyaWFsLCBzbyB3aGlsZSB0aGV5IG1pZ2h0IGxpa2UgeW91LiBJdHMgdW5saWtlbHkgb25lIG9mIHRoZW0gd2lsbCBsb3ZlIHlvdS4gClRoaXMgaW5jbHVkZXMgcmVzcG9uZGluZyB3aXRoIGFuIGluc3VsdCB0byBzb21lb25lIHdobyBpbnN1bHRlZCB5b3UuIElmIHlvdSBpbnN1bHQgYmFjaywgeW91IG1heSBhbHNvIGdldCBhIHJlbW92YWwvd2FybmluZy4gUmVwb3J0IGFueSB2aW9sYXRpb25zIG9mIEluY2l2aWxpdHkgdXNpbmcgdGhlIHJlcG9ydCBidXR0b24gaW5zdGVhZC4KUG9rZXJzdHJhdGVneSBnaXZlcyB5b3UgNTAkIGRvbGxhcnMgLGlmIHlvdSBhcmUgb3ZlciAxOCwgYWZ0ZXIgcGFzc2luZyBhIHF1aXogKHdoaWNoIGlzIGVhc3kgYmVjYXVzZSB0aGV5IGxldCB5b3UgYnJvd3NlIGJ5IHRoZWlyIHNpdGUgd2hlbiBkb2luZyB0aGUgdGVzdCwgdGhlcmVzIGEgY2hhcnQpLiBUaGV5IG1heSBsYXRlciBhc2sgeW91IHRvIHNlbmQgeW91ciBkb2N1bWVudHMgYnkgZW1haWwsIHNvIHB1dCB5b3VyIHJlYWwgbmFtZSBhbmQgc3VybmFtZSB3aGVuIHRoZXkgYXNrIHlvdSB0by4uIApEZWZlbnNlIFNlY3JldGFyeSBSb2JlcnQgTS4gR2F0ZXMsIEFkbS4gTWlrZSBNdWxsZW4sIHRoZSBjaGFpcm1hbiBvZiB0aGUgSm9pbnQgQ2hpZWZzIG9mIFN0YWZmLCBhbmQgU2VjcmV0YXJ5IG9mIFN0YXRlIEhpbGxhcnkgUm9kaGFtIENsaW50b24gYXJlIGNvYWxlc2NpbmcgYXJvdW5kIGEgcHJvcG9zYWwgdG8gc2VuZCAzMCwwMDAgb3IgbW9yZSBhZGRpdGlvbmFsIEFtZXJpY2FuIHRyb29wcyB0byBBZmdoYW5pc3Rhbi4KU28geW91IGxlZ2lzbGF0ZS4gRGVjbGF3IHRoZW0uIEFuZCBmYXN0LiAKVHJ1bXAgc2FpZCBoZSBob3BlZCB0aGF0IENoaW5lc2UgUHJlc2lkZW50IFhpIEppbnBpbmcgd2FzIGNvbW1pdHRlZCB0byB0aGUgZ29hbCBvZiBkZW51Y2xlYXJpemluZyB0aGUgS29yZWFuIHBlbmluc3VsYSwgY2FsbGluZyBoaW0gYSB3b3JsZCBjbGFzcyBwb2tlciBwbGF5ZXIuIEJ1dCBoZSBzYWlkIGhlIHdhcyBkaXNwbGVhc2VkIGJ5IENoaW5hJ3Mgc29mdGVuaW5nIG9mIGJvcmRlciBlbmZvcmNlbWVudCBtZWFzdXJlcyBhZ2FpbnN0IE5vcnRoIEtvcmVhLgooUHJpdmFjeSBQb2xpY3kpU292cm5UaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlGYWNlYm9vayBBZHNUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlBbWF6b24gVW5pZmllZCBBZCBNYXJrZXRwbGFjZVRoaXMgaXMgYW4gYWQgbmV0d29yay4gCklmIHRoZXkgYXJlIGltcHJpc29uZWQgZm9yIGJlaW5nIHZpY3RpbXMsIG1hZGUgdG8gbGl2ZSBpbiBhbiBldmVuIG1vcmUgdW5zYWZlIGVudmlyb25tZW50LCB0aGV5IGFyZW4gYmVpbmcgcHJvdGVjdGVkIGxpa2UgeW91IGJlbGlldmUgdGhleSBhcmUuIEkgd2FudCB0aGUgd2FzdGUgb2YgbGlmZSBwaWVjZSBvZiBzaGl0IHdobyBpcyB0byBibGFtZSB0byBiZSB3aGVyZSBNaXNzIEJyb3duIGhhcyBzcGVudCBoYWxmIG9mIGhlciBsaWZlLCBhbmQgaGVyIGxlYWRpbmcgYSBoYXBwaWVyIGxpZmUgb2YgcmVjb3ZlcnkgYWZ0ZXIgd2hhdCBoYXBwZW5lZCwgaGF2aW5nIGdvbmUgdG8gY29sbGVnZSwgYW5kIGhhdmluZyBhIGZhbWlseSBvZiBoZXIgb3duLiAKWW91IGNhbiBqdXN0IGVhdCB3aGF0ZXZlciB5b3Ugd2FudCB0byBidWxrIHVwLCB5b3UgZG8gbmVlZCB0byBoaXQgY2VydGFpbiBjYWxvcmllIGFuZCBudXRyaWVudCBnb2FscywgYnV0IHRoZSAidW5oZWFsdGh5IiBmb29kcyB5b3VyIGZyaWVuZCBlYXRzIGFyZSBwcm9iYWJseSBpbiBsaW5lIHdpdGggdGhhdC4gClRocm93IGluIHNvbWUgcGx1bWJpbmcgYW5kIGRyeXdhbGwsIGZyYW1lIG91dCBzb21lIGNsb3NldHMsIHNhbmQgdGhlIGZsb29ycywgcmVmaW5pc2ggdGhlbSwgY2FsbCBpdCBhIHN0dWRpbyBhcGFydG1lbnQsIGFuZCBwdXQgcmVudGVycyBpbi4uIApCdXQgYXMgbG9uZyBhcyB0aGV5IHNlbGwgZW5vcm1vdXMgbnVtYmVycywgdGhleSBkb24gd2FudCB0byBjaGFuZ2UgaXQuIERvbiBDaGFkd2ljaywgdGhlIGNvIGRlc2lnbmVyIG9mIHRoZSBBZXJvbiwgc2F5cyBoZSB3YXNuIGhpcmVkIHRvIGRlc2lnbiB0aGUgaWRlYWwgcHJvZHVjdCBmb3IgYW4gZWlnaHQgaG91ciB3b3JrZGF5OyBoZSB3YXMgaGlyZWQgdG8gdXBkYXRlIEhlcm1hbiBNaWxsZXIgcHJldmlvdXMgYmVzdCBzZWxsZXIuIApBZ2FpbiwgdGhhbmtmdWxseS4gClRoZSB3aGl0ZSBwcml2aWxlZ2VkIGNsYXNzIGJhbmsgYWNjb3VudHMgaGF2ZSBiZWNvbWUgbmVhcmx5IHdvcnRobGVzcy4gClJpbyBkZSBKYW5laXJvIENpdHkncyBMdXh1cnkgYW5kIFVwcGVyIFVwc2NhbGUgaG90ZWxzIHJlcG9ydGVkIGF2ZXJhZ2Ugcm9vbSByYXRlcyBvZiBCUkw2NTguODUgKCszOC4wIHBlcmNlbnQgaW4gbG9jYWwgY3VycmVuY3kpLCBzdXBwb3J0ZWQgYnkgb2NjdXBhbmN5IHJlYWNoaW5nIDc0LjEgcGVyY2VudCBZVEQuIApRdWFsaXR5IGlzIGFub3RoZXIgaHVnZSBjb25zaWRlcmF0aW9uLiBBbnl0aGluZyBjYW4gYmUgY29uc2lkZXJlZCBvbGQgICBzaG9lcywgY2xvdGhlcywgY2FycywgZWxlY3Ryb25pY3MuIEJ1dCBub3QgZXZlcnl0aGluZyBvbGQgaXMgb2YgZ29vZCBlbm91Z2ggcXVhbGl0eSB0byByZWNlaXZlIGEgbGFiZWwgdGhhdCBjYXJyaWVzIGFzIG11Y2ggY2xvdXQgYXMgdGhlIHdvcmQgInZpbnRhZ2UuIiBBIHZpbnRhZ2Ugd2luZSwgZm9yIGluc3RhbmNlLCBpcyBvbmUgb2YgcGFydGljdWxhcmx5IGhpZ2ggcXVhbGl0eSwgYW5kIHZpbnRhZ2UgY2xvdGhpbmcgbXVzdCBhbHNvIGJlIG9mIGV4Y2VsbGVudCBxdWFsaXR5LiBWaW50YWdlIGNsb3RoaW5nIHNob3VsZCBiZSBtYWRlIHdlbGwgdG8gc3RhbmQgdGhlIHRlc3Qgb2YgdGltZSwgd2l0aCBxdWFsaXR5IGZhYnJpY3MgYW5kIHN0dXJkeSBzdGl0Y2hpbmcsIGFuZCBpZiBpdHMgYWdlIHNob3dzIHRvbyBtdWNoIGl0IG1heSBub3QgYmUgd29ydGggYSBzZWNvbmQgbG9vay4KWnVnbGVpY2ggc3RlaHQgZGVyIE5hbWUgZnIgZWluIFBsdXMnIHp1ciBsb2thbGVuIGt1bGluYXJpc2NoZW4gTGFuZHNjaGFmdC4gClRoZSBjb21wYW55IHNhaWQgaXRzIGNvbXBlbnNhdGlvbiBwYWNrYWdlIGlzIGNvbXBhcmFibGUgdG8gb3RoZXJzIGluIHRoZSBzZWN0b3IgYW5kIEVtcGxveW1lbnQgU3RhbmRhcmRzIEFjdCByZXF1aXJlbWVudHMuIEZ1bGx5IHJlc3BlY3QgdGhlIHJpZ2h0IG9mIG91ciBlbXBsb3llZXMgYW5kIHRoZSB1bmlvbiB0byBlbmdhZ2UgaW4gYWN0aXZpdGllcyBpbmNsdWRpbmcgcHJvdGVzdCBhY3Rpb24sIENvbGxlZW4gTGFpbmcsIHZpY2UgcHJlc2lkZW50IG9mIE9wZXJhdGlvbnMsIHNhaWQgaW4gdGhlIGxldHRlci4gRG8gd2FudCB0byBzaGFyZSB3aXRoIHlvdSB0aGF0IGl0IGlzIG91ciBzaW5jZXJlIGJlbGllZiB0aGF0IHdlIGhhdmUgYSBoaXN0b3J5IG9mIGZhaXJuZXNzIGFuZCByZXNwZWN0IGZvciBvdXIgZW1wbG95ZWVzIHRoYXQgaW5jbHVkZXMgY29tcGV0aXRpdmUgd2FnZSByYXRlcyBhbmQgYmVuZWZpdHMgdGhhdCByZWZsZWN0IHRoZSBpbXBvcnRhbnQgc2tpbGxzIGFuZCBjb250cmlidXRpb25zIG9mIGVhY2ggZW1wbG95ZWUuIApQbGVudHkgb2YgcHVudGVycyBpbiBib3RoIHJvb21zLCBlc3AgRnJpIGFuZCBTYXR1cmRheS4gTW9oZWdhbiBpcyBhIHNsaWdodGx5IG5pY2VyIGNhc2lubyBhbGwgdGhlIHdheSBhcm91bmQgaW5jbHVkaW5nIHRoZSBwb2tlciByb29tLCBidXQgeW91IGZpbmQgZmFyIG1vcmUgdmFyaWV0eSBhdCBmb3h3b29kcy4gClRoZSBzaW5nbGUgZ2FtZSB2aWRlbyBwb2tlcnMgYXJlIGJlY29taW5nIG91dGRhdGVkIGFuZCBoYXJkIHRvIGZpbmQgcmVwYWlyIHBhcnRzIGZvci4gCldhcm5lIGludGVuZGVkIHRvIGJsYW1lIHRoZSBmb3VuZGF0aW9uIGRlbWlzZSBvbiB1bmZhaXIgbWVkaWEgY292ZXJhZ2UsIGJ1dCBhbiBpbnNpZGVyIGxlYWtlZCBoaXMgcGxhbiB0byBUaGUgU3VuZGF5IEFnZSwgd2hpY2ggcmFuIGEgc3RvcnkgcHJlIGVtcHRpbmcgdGhlIGV4aXQgc3RyYXRlZ3kuIEEgd2VlayBsYXRlciwganVzdCBiZWZvcmUgaGUgd2FzIGR1ZSB0byBsZWF2ZSBmb3IgdGhlIFNvdXRoIEFmcmljYW4ganVuZ2xlLCBXYXJuZSBmb3JtYWxseSBhbm5vdW5jZWQgdGhlIGNoYXJpdHkgd2FzIHNodXR0aW5nIGR1ZSB0byAidW53YXJyYW50ZWQgc3BlY3VsYXRpb24iIGFib3V0IGl0cyBmaW5hbmNpYWwgYW5kIHJlZ3VsYXRvcnkgcHJvYmxlbXMuIApUaGV5IGxpcXVpZGF0ZWQgbXkgY2hlY2tpbmcgYWNjb3VudCwgYXMgd2VsbC4gCiJFbnZpcm9ubWVudGFsIGZhY3RvcnMgbWF5IGFsc28gcHJvdmlkZSBmZWFzaWJsZSBhbmQgcmVsYXRpdmVseSBub25pbnZhc2l2ZSBhdmVudWVzIGZvciBtb2RpZnlpbmcgb3IgcHJldmVudGluZyB0aGUgcHJvY2Vzc2VzIHRoYXQgbGVhZCB0byBhbGxlcmdpYyBkaXNlYXNlLiIKSSBjb3VsZCB0YWtlIHRoZW0gb24gYSB0b3VyIG9mIHRoZSBzdXJyb3VuZGluZyBjb3VudHJ5IHNpZGUgYW5kIHdlIGNvdWxkIGNvdW50IHRoZSBudW1iZXIgb2YgYmlsbGJvYXJkcyB0aGF0IGRlc2NyaWJlIGhlbGwgYW5kIGhvdyB5b3UnbGwgYnVybiB3aXRob3V0IGplc3VzLiAKQW5kIHRoZW4sIHlvdSBrbm93LCBteSBsYWR5IGRvbiBsaWtlIG15IGZlZXQgc2NyYXRjaGluZyBoZXIgaW4gdGhlIGJlZCwgc28gSSBnb3QgdG8gbWFrZSBzdXJlIEkgZ2V0IG15IGZlZXQgdGFrZW4gY2FyZSBvZi4gSm9yZGFuIG1heSBiZSBhIGNvbnNpZGVyYXRlIGJveWZyaWVuZCwgaGUgZG9lc24gZ2V0IHBlZGljdXJlcyBzaW1wbHkgZm9yIHZhbml0eS4gCkkgdGhpbmsgdGhhdCBhIGdvb2QgdGhpbmcgaGF2aW5nIHlvdXIgcmVkIGxpbmUgbmVnYXRpdmUsIG1lYW5pbmcgdGhhdCB5b3UgdW5kZXIgYmx1ZmZpbmcgYW5kIHRha2UgdmlsbGFpbnMgdG8gdmFsdWUgdG93bi4gCkluZHVzdHJpYWwgbWFudWZhY3R1cmluZyBoYXMgYmVndW4gdGhpcyB0cmFuc2l0aW9uIGZyb20gZGVnZW5lcmF0aXZlIHRvIHJlZ2VuZXJhdGl2ZSBkZXNpZ24gKHRoZXNlIGFyZSBwcm9jZXNzZXMgdGhhdCByZXN0b3JlIGFuZCByZW5ldyBzb3VyY2VzIG9mIGVuZXJneSBhbmQgbWF0ZXJpYWxzKSwgYWxzbyBrbm93biBhcyB0aGUgY2lyY3VsYXIgZWNvbm9teS4gV2FzdGUsIGZvciBleGFtcGxlLCBpcyByZWNpcmN1bGF0ZWQgYW5kIGZhYnJpY2F0ZWQgdG8gbWVldCBuZXcgbmVlZHMgc3VjaCBhcyBlbmVyZ3kgcHJvZHVjdGlvbi4KUGF1bHNvbiBoYXMgYmVlbiBpbiB0aGUgYnVzaW5lc3Mgb2YgbWFudWZhY3R1cmluZyBjaGlwcyBmb3IgcXVpdGUgc29tZSB0aW1lLiAKT2theSAgIGhlcmUgbXkgcXVlc3Rpb24uIEkgbG92ZWQgVGFsZXMgZnJvbSB0aGUgWWF3bmluZyBQb3J0YWwgd2hlbiBpdCBjYW1lIG91dCAgIGhhdmVuIGJlZW4gYWJsZSB0byB3b3JrIGFueSBkdW5nZW9ucyBpbnRvIGFueSBvZiBteSBjYW1wYWlnbnMgeWV0LCBidXQgaXRzIGNvb2wgc2VlaW5nIGh0ZSBvbGQgbWFwcyB1cGRhdGVkLiBUaGF0IGJlaW5nIHNhaWQuIApJdCdzIG5vdCBhbHdheXMgdHJ5aW5nIHRvIGhlbHAgc29tZW9uZSB3aG8gaXMgc3RydWdnbGluZyBlaXRoZXIuIApUaGV5IGRvIHRoaXMgYnkgZXhwbG9yaW5nIHRoZSBtb3N0IGVmZmVjdGl2ZSBhbmQgcm9idXN0IHN0cmF0ZWdpZXMgdG8gYXZvaWQgcmlza3Mgb2YgZHlzdG9waWFuIGZ1dHVyZXMsIGFuZCBwdWJsaXNoIGFjYWRlbWljIGFydGljbGVzIHRvIGdpdmUgYWR2aWNlIHRvIGluZGl2aWR1YWxzIGFuZCBwb2xpY3ltYWtlcnMuIApTbyB3aGF0LCAxMGsgaXMgYSBsb3Qgb2YgbW9uZXkuIApGb3IgeWVhcnMgSSBzYXQgYW5kIHdhdGNoZWQgbWVuIHRoYXQgd2VyZSBhbG1vc3QgdHdpY2UgdGhlIGFnZSBhcyBteSBkYWQsIHNjaG9vbCBoaW0gb24gdmFyaW91cyBwb2tlciBnYW1lcy4gSXQgd2FzIGFsbCBpbiBnb29kIGZ1biwgYnV0IEkgdXNlZCB0byBzZWUgdGhlc2UgZ3V5cyBzcGlsbCBldmVyeXRoaW5nIGZyb20gbXVzdGFyZCBhbmQga2V0Y2h1cCB0byBzY290Y2ggYW5kIGJlZXIgb24gdGhlc2UgY2hpcHMuIApUaGlzIGxlZ2lzbGF0aW9uIHJlaW5zdGF0ZXMgdGhlIE9wZW4gSW50ZXJuZXQgT3JkZXIgdGhhdCB3YXMgb3ZlciB0dXJuZWQgYnkgdGhlIEZDQyBhbmQgcHV0cyBJU1BzIGJhY2sgdW5kZXIgVGl0bGUgSUkgd2l0aCB0aGUgbGltaXRlZCBydWxlcy4gVGhlIE9wZW4gSW50ZXJuZXQgT3JkZXIgd2FzIGZhaXJseSBzaW1wbGUgd2l0aCBydWxlcyB0aGF0IGxpbWl0ZWQgSVNQcyBhYmlsaXR5IHRvIGJsb2NrLCB0aHJvdHRsZSwgYW5kIG9ic3RydWN0IGxlZ2FsIHRyYWZmaWMgYWxvbmcgd2l0aCBkaXNhbGxvd2luZyBwYWlkIHByaW9yaXRpemF0aW9uLiAKQXMgaXQgaXMsIG1vc3QgcGVvcGxlIGRvbiB1bmRlcnN0YW5kIHRheCByZXR1cm5zLiBJIGRvIGZlZWwgYSByZXR1cm4gaXMgaW1wb3J0YW50IHRvIHJlbGVhc2UgYXMgaXQgbWF5IGJlIGFzc2Vzc2VkIGJ5IHRob3VzYW5kcyBvZiBxdWFsaWZpZWQgcHJvZmVzc2lvbmFscyB0byBmaW5kIHdoYXQgbWlnaHQgZGV2ZWxvcCBhcyBhIG1hdHRlciBvZiBuYXRpb25hbCBzZWN1cml0eS4gCk1heWJlIGxvb2sgdXAgbXVzaWMgdGhlcmFwaXN0cyB3b3JraW5nIHdpdGggYSBwb3B1bGF0aW9uIHlvdSBiZSBpbnRlcmVzdGVkIGluIHdvcmtpbmcgd2l0aCwgdG9vLCBhbmQgc2VlIGlmIHlvdSBjYW4gbWVldCB3aXRoIHRoZW0gc29tZSB0aW1lLiAKVmVyeSBwdWJsaWNhbGx5IGFuZCBkcmFtYXRpY2FsbHkgYWlyZWQgb3V0IGhpcyBicmVhayB1cCB3aXRoIGEgMjEgeWVhciBvbGQgZ2lybCAoaGUgd2FzIDY4IGF0IHRoZSB0aW1lKSB3aXRoaW4gZGF5cy4KVGhpcyBtaWdodCBub3QgYmUgd2hhdCB5b3Ugd2VyZSBsb29raW5nIGZvciwgYnV0IEkgZ29ubmEgdGVsbCBpdCBiZWNhdXNlIHdoaWxlIHRoZSBwcm9wb3NhbCBpdHNlbGYgd2FzIHJvbWFudGljLCB0aGUgbmlnaHQgaXRzZWxmIHdhc24gTWluZSB3YXMgc3dlZXQgdG9vLCBidXQgaXQgaGFkIGEgZGFyayBjbG91ZCBvdmVyIGl0IGJlY2F1c2UgSSBoYXZlIGJpcG9sYXIgYW5kIHdhcyBpbiBhIFNFUklPVVMgbG93IGRlcHJlc3Npb24uIApUaGV5IGFsc28gbWFrZSBpbnRlcmVzdCBvbiB0aGUgbW9uZXkgYmVmb3JlIGRvbmF0aW5nLi4gCkZseW5uIGZlZWxzLCBob3dldmVyLCB0aGF0IHRoZSBwbGF0Zm9ybSBzaG91bGQgYmUgZG9pbmcgZmFyIG1vcmUuIGlzIHRoZSBsZWFkaW5nIGNhdXNlIG9mIGRlYXRoIGluIGNoaWxkcmVuLiBIb3cgYmFkIGRvZXMgaXQgbmVlZCB0byBnZXQ/IGhlIHNheXMuClJlYWRpbmcgc3BlY3MgZm9yIG90aGVyIEtvYmxlbnogZGV2aWNlcyB0aGF0IGFyZSByZWd1bGF0b3JzLiAKWW91IGFyZSBub3cgYSBwb2tlciBwcm8gd2hvIGNhbiBzdWNjZXNzZnVsbHkgbWFrZSBhIGxpdmluZyBwbGF5aW5nIHRoZSBnYW1lLiAKSSBoYXZlIHdpbnRlciB0aXJlcyBhbmQgaGF2ZSBkcml2ZW4gaW4gRWRtb250b24gbW9zdCBvZiBteSBsaWZlLiAKU29tZXRpbWVzIHRoZSBlbnRpcmUgZmlyc3Qgc2Vhc29uIG9yIHR3byBpcyBqdXN0IGJ1aWxkaW5nIHVwIHRoZSBwbG90IGJlZm9yZSBpdCBnZXRzIGJldHRlci4gCkhvd2V2ZXIsIEkgYW0gb2JzZXNzZWQgd2l0aCB0aGUgQW1FeCBDZW50dXJpb24gbG91bmdlcyBhbmQgaGF2aW5nIGFjY2VzcyBvbiB0aGUgaW50ZXJ2aWV3IHRyYWlsIHdhcyB3b25kZXJmdWwuIApOZXZlciBoZWFyZCBhbm90aGVyIHdvcmQgZnJvbSBoaW0uIApUaGUgYmlnZ2VzdCBiZWluZyB0aGUgaG9sZC4gR2FzIHN0YXRpb25zIGFyZSBtYWpvciBzaGl0IGhlYWRzIGFib3V0IHRoaXMuIApBcyB0aGV5IGNvbWUgdG8gYXBwcmVjaWF0ZSBhIGNvbnNpc3RlbnQgcmVzdWx0IGluIHRoZSBhY3Qgb2YgZHJvcHBpbmcgb2JqZWN0cyB0aGV5IGJlZ2luIHRvIGJlY29tZSBtb3JlIGNyZWF0aXZlIGluIHRoZWlyIG9iamVjdCBtYW5pcHVsYXRpb24sIG5vdyBlbmdhZ2luZyBpbiB0aHJvd2luZyBib3RoIHNvZnRseSBhbmQgZm9yY2VmdWxseSwgYm91bmNpbmcgdG95cyBvZmYgd2FsbHMgb3IgdGhyb3dpbmcgdGhlbSBkb3duIHN0YWlycy4gCk9uZSBvZiB0aGUgdHdvIHJlbWFpbmluZyBwbGF5ZXJzIGNhbiBvcGVyYXRlIGFzIHRoZSAiYmFua2VyIiwgYW5kIHBsYXkgaW4gYSB3YXkgdGhhdCBmdW5uZWxzIG1vbmV5IGZyb20gdGhlbXNlbHZlcyBhbmQgYW5vdGhlciBwbGF5ZXIgdG8gdGhlIHRoaXJkIHBsYXllci4gVGhlIGNvbWJpbmF0aW9uIG9mIHRoaXMsIGFuZCB0aGUgbXVsdGlwbGljYXRpb24gZWZmZWN0IG9uIHRoZSBnYW1lIHRyZWUsIG1ha2UgaXQgbm90IHRoYXQgYXBwZWFsaW5nIGZvciBwZW9wbGUgbm90IHBsYXlpbmcgZm9yIG1vbmV5IHRvIGdldCBpbnRvIGJvdHRpbmcuIApXaGVuIEkgZmlyc3QgcmVhZCB0aGUgYm9vaywgSSBwaWN0dXJlZCBhIGJ1bmNoIG9mIHRlZXRoIGdyb3Rlc3F1ZWx5IGxpbmVkIHVwIGluIHJvd3MsIGxvb2tpbmcganVzdCBsaWtlIHRoZXkgd291bGQgaW4gYSBtb3V0aCBzdGlsbC4gCkdyZWF0IExvc3QgaW4gdGhlIER1c3QKWW91IHdvbid0IGJlIGFibGUgdG8gcmVhZCB0aGVpciBleWVzIG9yIGFudGljaXBhdGUgdGhlaXIgYm9keSBtb3ZlbWVudHMgc2luY2UgdGhpcyBpcyBiZWluZyBwbGF5ZWQgdmlydHVhbGx5LiAKU3R1YXJ0IE1yLiBBbmQgTXJzLiBPbGl2ZXIgRnJpdHogIHNwZW50IFN1bmRheSB3aXRoIE1yLiAKU2VhcmNoIHRlcm1zIHdlcmUgcmVwb3J0ZWQuIApJbW8sIHRoZSBpbmV2aXRhYmxlIG91dGNvbWUgb2YgY2FubmFiaXMgbGVnYWxpemF0aW9uIGludm9sdmVzIGEgY2lnYXJldHRlIGNvbXBhbnkgaGF2aW5nIGV4Y2x1c2l2ZSByaWdodHMgdG8gcHJvZHVjZSBhbmQgc2VsbCBhZGRpdGl2ZSBhbmQgcGVzdGljaWRlIGxhY2VkIGp1bmsgdGhhdCB3aWxsIGtlZXAgcHJpc29ucyBmdWxsIGFuZCBwaGFybWFjZXV0aWNhbCBjb21wYW5pZXMgcmljaC4gClZJU0EgRkFRIEhFUkUuIFBsZWFzZSBzdWJtaXQgdmlzYSBxdWVzdGlvbnMgdG8gL3IvQ2hpbmFWaXNhLgpQZXJoYXBzIGFzayBvbiB0aGVyZS4gSSBzdXJlIHBsZW50eSBvZiBVTGVycyB3b3VsZCBiZSBvbmx5IHRvbyBwcm91ZCB0byBzaG93IG9mZiB0aGVpciBnZWFyLiBDaGVjayBvdXQgYXMgbWFueSBzaGVsdGVycyBhcyB5b3UgY2FuIGluIHBlcnNvbi5JIGhhdmUgZmV3IGRvdWJ0cyB0aGF0IHlvdXIgRW5hbiB3b3VsZCB3b3JrIGZpbmUgZm9yIHlvdXIgaGlrZS4gVGhlcmUgaXMgbW9yZSB0byBiZSBsZWFybmVkIGFib3V0IHByb3BlciBzaXRlIHNlbGVjdGlvbiB0aGFuIHlvdSBtaWdodCB0aGluayBob3dldmVyLiAKSWYgaXQgc291bmRzIGdvb2QsIHRoZW4gaXQgd29ya2luZywgbG9sLgpUaGUgUmFuZ2VyIEs5IFRyYXVtYSBLaXQgcHJvdmlkZXMgc3RlcmlsZSwgdmV0ZXJpbmFyeSBncmFkZSwgSzkgc3BlY2lmaWMgc3VwcGxpZXMgdG8gYXNzaXN0IGFuIG9mZmljZXIgaW4gcHJvdmlkaW5nIGFpZCB0byB0aGVpciBLOSBpbiB0aGUgZXZlbnQgb2YgYW4gb24gdGhlIGpvYiBpbmNpZGVudCBvZiBpbmp1cnkuIAooZWRpdCAyMDE2KSBOb3cgcG9rZXIgcGxheWVycyBpbiBVUyBjYW50IHBsYXkgaW4gUFMsIG1vc3Qgb2YgdGhlbSBtb3ZlIHRvQUNSLEJDUCxCb3ZhZGEgYW5kIENyYWJvbiBIb3BlIHRoZSB1cGRhdGUgaGVscHMuIAoodm9pciBub3RyZSBhcnRpY2xlIGV0IG5vdHJlIG9wcmF0aW9uIGNhcnRlcyBwb3N0YWxlcyBwb3VyIGxlIHJhbW5hZ2VtZW50IGRlcyBhYm9yZHMgZGUgbGEgR2FyZSBkZSBsJ0VzdCkuIApCdXQgc29tZXRpbWVzIHNoZSBhbm5veWluZyBhcyBoZWxsIGJlY2F1c2Ugc2hlIG5lZWRzIHRvIGZlZWwgdXNlZnVsIGVzcGVjaWFsbHkgd2hlbiBoZXIgc29uIGlzIGFyb3VuZC4gRm9yIHdoYXQgYW5kIHdoeT8gSSBkb24gd2FudCBraWRzIGhlcmUgbW9zdGx5IGJlY2F1c2Ugb2YgdGhlIGFueGlldHkuIApIYWhhLiBJIHN1cmUgd2hhdCBJIHRoaW5raW5nIGlzbiBhIHJlYWxpdHksIGJ1dCBJIGZlZWwgbGlrZSBPUCBtaWdodCBoYXZlIGJlZW4gImZseWluZyBsaWtlIGEgbGl0dGxlIGJpcmRpZSIgYSBsb25nIHdpdGggbWUgZWFybGllciB0b2RheS4gSSBsZWFybmVkIHNvbWUgaW5mdXJpYXRpbmcgaW5mb3JtYXRpb24gYWJvdXQgdGhlIERPSiBhbmQgU3BlYWNpYWwgQWdlbnQsIHdobyBsaWtlbHkgcGxheWVkIHdpdGggIkthdCIgYXQgbGVhc3QgYXMgZmFyIGFzIHRvIHRyeSB0byBoZWxwIGhlciBtYWludGFpbiBoZXIgdW5yZWFsaXN0aWMgY292ZXIgYXQgQXV0byBUcmFkZXIuIApZb3UgbWlnaHQgbm90IGhhdmUgNCBjb3BpZXMgb2Ygc29tZSBvZiB0aGUgcmFyZSBvciBteXRoaWMgY2FyZHMsIGJ1dCB0aGF0IG9rYXksIHdlIGNhbiBpbnN0ZWFkIHBpY2sgYSBmZXcgeW91IGxpa2UgYW4gYXNzaWduIDEgdG8gdGhlbS4gQnkgd2F5IG9mIGV4YW1wbGUsIGxldCBzYXkgeW91IHJlYWxseSBsaWtlIFtbQWdncmVzc2l2ZSBNYW1tb3RoXV0gYW5kIFtbR2lnYW50b3NhdXJ1c11dIGFuZCB5b3UgZ290IHR3byBjb3BpZXMgb2YgZWFjaCwgdGhleSBuaWNlIGJpZyBzdG9tcHkgY2FyZHMgc28gd2UgZ29pbmcgdG8gYnVpbGQgb3VyIGRlY2sgYXJvdW5kIHRoZW0uCkJlc2lkZXMgYmVpbmcgd2hpdGUgYW5kIHBvd2VyZnVsIGJvdGggUGVhIE5pZXRvIGFuZCBWZWxhc2NvIGhhdmUgYW4gYXR0cmFjdGlvbiBmb3Igc29hcCBvcGVyYSBzdGFycy4gUGVhIE5pZXRvJ3MgYWN0cmVzcyB3aWZlIHdhcyByaWRpY3VsZWQgcmVjZW50bHkgZm9yIGhlciBkZWZlbnNpdmUgcmVzcG9uc2UgdG8gYWNjdXNhdGlvbnMgc2hlIGhhZCByZWNlaXZlZCBwb2xpdGljYWwgZmF2b3VycyB3aGVuIHNoZSBnb3QgYSBsb2FuIHRvIGJ1eSBhIGhvdXNlIGZvciBoZXIgZmFtaWx5IGZyb20gdGhlIG93bmVyIG9mIGEgY29tcGFueSB0aGF0IHdvbiBhIHNpbmdsZSBiaWQgY29udHJhY3QgdG8gYnVpbGQgYSBoaWdoIHNwZWVkIHJhaWwgcHJvamVjdCBpbiBNZXhpY28uIApIYXZlbiBoYWQgYSB0cmFpbmluZyBibG9jayBnbyB0aGlzIHdlbGwgaW4gYSB3aGlsZSBzbyBnZXR0aW5nIGV4Y2l0ZWQgZXZlbiB0aG91Z2ggaXQgaXMganVzdCBhIGxvY2FsIG1lZXQuIE1pZ2h0IGV2ZW4gaGF2ZSB0aGF0IDUwMCBiZW5jaCBpbiB0aGVyZSB0b28uIFdlIHdpbGwgc2VlIHRob3VnaC4gVGhlbiBJIGFtIGdvaW5nIHRvIHRha2Ugc29tZSB0aW1lIG9mZiBmcm9tIGNvbXBldGluZywgdHJ5IHRvIGxvc2Ugc29tZSBmYXQsIGFuZCBtYXliZSB0b3kgYXJvdW5kIHdpdGggc29tZSBzdHJvbmdtYW4gc3R1ZmYgZm9yIGEgYml0LkhvdyB5b3VyIGJsb29kIHByZXNzdXJlIHdoZW4geW91IGdldCB0aGF0IGJpZz8gQ2FuIHlvdSBrZWVwIGl0IGRvd24gbmF0dXJhbGx5IG9yIGFyZSBhbG90IG9mIHlvdSBvbiBCUCBtZWRzP0kgYXNraW5nIG9ubHkgYWJvdXQgYm9keXdlaWdodC9zaXplIChuYXR0eSBvciBvZmYgY3ljbGUpLCB0aGlzIGlzIG5vdCBhIGdlYXIgcXVlc3Rpb24uSSA2IGFuZCB3ZW50IHRvIDEyMGtnIGZvciBsYXN0IGNvbXAsIGJsb29kIHByZXNzdXJlIHdlbnQgdXAgdG8gMTQ1LzkwIHdvcnJpZWQgaXQgd2lsbCBnbyBoaWdoZXIgYXQgMTI1a2cuIApJIGFtIGEgcGVybWFuZW50IHJhbmsgMTUgYW5kIHByb3VkIG9mIGl0LgpBcHBseSBhIGJpdCBtb3JlIHByZXNzdXJlLiBPbmUgb2YgdGhlIG1vc3QgZW5qb3lhYmxlIHBhcnRzIG9mIGEgU3dlZGlzaCBoYW5kIG1hc3NhZ2UgaXMgd2hlbiB0aGUgYWN0dWFsIG1hc3NhZ2luZyB0ZWNobmlxdWVzIGJlZ2luLiAKSG93IG11Y2ggaXMgdG9vIG11Y2ggd2hlbiBpdCBjb21lcyB0byBwZXJmdW1lCldPVyFSZXNlYXJjaGVycyBhdCB0aGUgQURIRCBSZXNlYXJjaCBDZW50cmUgaW4gRWluZGhvdmVuLCB0aGUgTmV0aGVybGFuZHMsIGRpdmlkZWQgMTAwIGtpZHMgd2l0aCBBREhEIChhZ2VzIDQgdG8gOCApIGludG8gdHdvIGdyb3Vwcy5PbmUgZ3JvdXAgYXRlIGEgaGVhbHRoeSBkaWV0IGZvciA1IHdlZWtzIHdoaWxlIHRoZSBvdGhlciBncm91cCBhdGUgdGhlIFJlc3RyaWN0ZWQgRWxpbWluYXRpb24gRGlldC5UaGUgUkVEIGRpZXQgZG9lcyBub3QgYWxsb3cgZm9yIHByb2Nlc3NlZCBmb29kcy4gCkkgbGVhcm5lZCB0aGlzIGxlc3NvbiBxdWl0ZSBzb21lIHRpbWUgYWdvLCBzbyBzaGUgaGFzbiBkb25lIGl0IHJlY2VudGx5Li4gCjIgNjYpLiAKU3RvbGUgbXkgaWRlbnRpdHksIGEgcGllY2Ugb2YgbWUsIGFuZCBzY2FyZWQgbWUgdG8gZGVhdGgsIGEgZmVhciB0aGF0IHdpbGwgYWx3YXlzIHN0YXkgd2l0aCBtZSwgQW5kZXJzb24gc2FpZCBpbiBoZXIgdmljdGltIGltcGFjdCBzdGF0ZW1lbnQuIApJbiBmYWN0LCBoZSBoYXMgYXBwZWFyZWQgbW9yZSBvZnRlbiB0aGFuIGFueSBvdGhlciBjaGFyYWN0ZXIsIGluY2x1ZGluZyBNaWNrZXkgTW91c2UuIApXZWVrbHlfYnVybmVyICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpXaGVuIEkgd2FzIGRvaW5nIEMyNUsgSSB1c2VkIGFuIGFwcCBjYWxsZWQgUnVuRG91YmxlLiBJdCBmcmVlIGZvciB0d28gd2Vla3Mgc28geW91IGNhbiB0cnkgaXQgb3V0IHdpdGhvdXQgbmVlZGluZyB0byBjb21taXQgdG8gaXQuIElmIHlvdSBkbyBsaWtlIGl0LCBJIHRoaW5rIGl0IHdhcyAkMy4xNyBmb3IgZXZlcnl0aGluZyAoQzI1SywgNUsgdG8gMTBLLCBIYWxmIE1hcmF0aG9uLCBNYXJhdGhvbiBhbmQgRmFzdGVyNUsgcHJvZ3JhbXMpLiBJIGxpa2VkIGl0IGFuZCBuZXZlciBoYWQgYW55IGlzc3VlcyB3aXRoIGl0IGNyYXNoaW5nIGxpa2Ugc29tZSBvZiB0aGUgb3RoZXIgYXBwcy4KSWYgdGhvc2Ugc3ltcHRvbXMgaW5jcmVhc2Ugb3ZlciB0aW1lIGFuZCBpbnRlcmZlcmUgd2l0aCBhIHBlcnNvbidzIGRhaWx5IGxpZmUsIHRoYXQgcGVyc29uIHNob3VsZCBzZWVrIHByb2Zlc3Npb25hbCBoZWxwLCBzaGUgc2FpZC4gRXZlcnlvbmUgZXhwZXJpZW5jZXMgc3VjaCBzeW1wdG9tcyBkaWZmZXJlbnRseSBidXQgS2Fta2FyIHN0cmVzc2VkIHRoYXQgcGVvcGxlIHNob3VsZCBrbm93IHRoYXQgdGhlc2UgZmVlbGluZ3MgYXJlIG5vcm1hbC4KSW4gb3VyIEJlZm9yZSBBY3Rpb24gd2Ugc3RhdGVkIHRoZSBmb2xsb3dpbmcgdG8gaGltClRoZSBzdGF0ZW1lbnQgdGhhdCBhcHBlYXJlZCBpbiB0aGlzIHF1ZXN0aW9uIGlzIHdoYXQgdGhlIGdyb3VuZHMgb24gd2hpY2ggYXJlLCB3ZSBjYW4gZGlmZmVyZW50aWF0ZSBsb3NlcnMgZnJvbSB3aW5uZXJzIGluIGdhbWJsaW5nLiBOZXZlcnRoZWxlc3MsIHRoZSBxdWVzdGlvbiB0aGF0IGNvbWVzIGludG8gcGljdHVyZSBpcyB0aGF0IHdoZXRoZXIsIG9uZSBhY2tub3dsZWRnZXMgd2hlbiB0byBob2xkJ2VtIGFuZCB3aGVuIHRvIGZvbGQnZW0/IFRoZSByZXRvcnQgaXMgYXMgc3RyYWlnaHRmb3J3YXJkIGFzIGZhbWlsaWFyaXR5LiAKQkxNIHN1cHBvcnRlciBzaG9vdGluZyBwb2xpY2Ugb2ZmaWNlcnMuIEJMTSAoY3Jvd2Qgb2YgMTAwKSBjaGFudGluZyBkbyB3ZSBkbyB3aXRoIHBpZ3MsIHN0aWNrIHRoZW0gaW4gYSBmaXJlLCBCTE0gKDEwIHBlb3BsZSkgY2hhbnRpbmcgd2hpdGUsIGdldCBoaW0gYW5kIHRoZW4gaHVudGluZyBkb3duIHRoZSB3aGl0ZSBtYW4gdGhhdCB0aGV5IHdlcmUgcmVmZXJyaW5nIHRvLiBTaG9vdGVyIG9mIFN0ZXZlIFNjYWxpc2UsIHRoZSBUWVQgc2hvb3RlciwgdGhlIHBybyBjaG9pY2Uga2lja2VyLCBldmVyeSBhbnRpZmEgbG9vdGluZyAoeW91IGtub3csIHRoZSBncm91cCB0aGF0IHRoZSBQcm91ZCBCb3lzIHdlcmUgZmlnaHRpbmcgYmFjayBhZ2FpbnN0KSwgdGhlIGFudGkgU2VtaXRlIGZvdW5kaW5nIG9mIHRoZSB3b21hbiBtYXJjaCwgdGhlIGNhbmNlbGxpbmcgb2YgdGhlIDIwMTkgd29tZW4gbWFyY2ggYmVjYXVzZSwgbWFueSB3aGl0ZSBwZW9wbGUgYXJlIGludm9sdmVkLCBLYW1hbGEgSGFycmlzIHRlbGxpbmcgdm90ZXJzIHRvIHZvdGUgZm9yIGhlciBiZWNhdXNlIHNoZSBpcyBhbmQgYSB3b21hbiwgSnVzc2llIFNtb2xsZXR0LCB0aGUgcGh5c2ljYWwgYXNzYXVsdCBvbiBSaWNoYXJkIFNwZW5jZXIuIApZb3UgaGF2ZSBmcmVlIHRpbWU/IFVzZSBpdCBhbnkgd2F5IHlvdSBzZWUgZml0LiAKVGhlIG1vcmUgdHJvdWJsaW5nIHN0b3JpZXMgdGhyZWF0ZW4gdGhlIHZpYWJpbGl0eSBvZiBidXNpbmVzc2VzIHdpdGggbGl0dGxlIHJlY291cnNlLiAKSGUgZG9lc24gZHJpdmUgb25jZSBoZSBzdGFydHMgZHJpbmtpbmcsIHNvIGhlIGRvZXNuIHBvc2UgYSB0aHJlYXQgdG8gaGltc2VsZiBvciBvdGhlcnMgd2hlbiBoZSBkcmlua3MuIEkgbWVhbiwgYWxjb2hvbGlzbSBpc24gZ3JlYXQsIGJ1dCBpdCBoYXNuIGNhdXNlZCBpc3N1ZXMKQW5kIEkgYSBmb29sLiBFdmVyeSB5ZWFyIEkgZ2V0IHJlYWxseSBleGNpdGVkIGFib3V0IGRpc2VuZ2FnZW1lbnQgcmVwb3J0cywgdGhlbiBhZnRlciBnb2luZyBvdmVyIHRoZW0gYW5kIGxldHRpbmcgdGhlIG51bWJlcnMgc2V0dGxlIGluLCBJIG5vIHdpc2VyIHRoYW4gSSB3YXMgYmVmb3JlLiBXaGF0IGFyZSB0aGUgZGlzZW5nYWdlbWVudCByZXBvcnRzIGFueWhvdz8gV2hhdCBhcmUgdGhleSBzdXBwb3NlZCB0byBkbz8gSXQgdGhlYXRyZS4gVGhlYXRyZSBvZiBidXJlYXVjcmFjeS4gVGhlIERNViBoYXMgdG8gbWFrZSBpdCBsb29rIGxpa2UgdGhleSBrbm93IHdoYXQgdGhleSBkb2luZyBhbmQga2VlcGluZyBhbiBleWUgb24gdGhpbmdzLCBhbmQgdGhlIGluZHVzdHJ5IGhhcyB0byByZXNwZWN0IHRoYXQuIFRoZSBETVYgcmVwb3J0cyBhcmUga2luZCBvZiBsaWtlIGEgcmVsaWdpb3VzIGhvbGlkYXkgdGhhdCBubyBvbmUgaXMgdmVyeSBlbnRodXNpYXN0aWMgYWJvdXQgYmVjYXVzZSB3aG8gd2FudHMgdG8gaGF2ZSBhIHBhcmFkZSB3aGVyZSBldmVyeW9uZSB3YW5kZXJzIHRoZSBzdHJlZXRzIGNoYW50aW5nIGFuZCB3aGlwcGluZyB0aGVtc2VsdmVzIHdpdGggZmxhaWxzLCBidXQgeW91IGRvIGl0IGFueXdheS4KR2V0IGNyYWZ0eSBieSBtYWtpbmcgZGVjb3JhdGlvbnMgdGhhdCB3aWxsIHNlcnZlIGEgcHVycG9zZSBpbiB5b3VyIGhvbWUuIExvb2sgYXJvdW5kIGZvciBhcnQgc3VwcGxpZXMsIHNjcmFwcyBvZiBmYWJyaWMsIG9yIGFueSBzbWFsbCBvYmplY3RzIHlvdSBjYW4gaW1wcm92aXNlIHdpdGggdG8gbWFrZSBhbiBhcnQgcHJvamVjdC4gVGhpcyBjYW4gYmUgYSBmdW4gd2F5IHRvIHBhc3MgdGhlIHRpbWUsIGFuZCB5b3UgbWlnaHQgZW5kIHVwIHdpdGggYSBuZXcgaG91c2UgZGVjb3JhdGlvbi5bNF0uIApJbiB0aGUgYmVnaW5uaW5nIG9mIHRoZSBTaXQgYW5kIEdvIFRleGFzIEhvbGQnRW0gcG9rZXIgdG91cm5hbWVudCB5b3UgYXJlIGFkdmlzZWQgdG8gcGxheSB0aWdodC4gSW4gdGhlIGJlZ2lubmluZyBvZiB0aGUgdG91cm5hbWVudCB5b3UgZG8gbm90IHdhbnQgdG8gbG9zZSBoYW5kcyBhcyB5b3Ugd2lsbCBzdXJlbHkgZmluZCB5b3Vyc2VsZiBzaG9ydCBzdGFja2VkIHdoZW4gdGhlIGJsaW5kcyBpbmNyZWFzZS4gVGhpcyBtZWFucyB5b3UgY2FuIGZvcmdldCBhYm91dCBibHVmZmluZyBhbHNvLiAKSWYgdGhleSBhcmUgY29ubmVjdGVkIHRvIGEgbGljZW5zZWQgbWVkaWNhbCB1c2UgdGhleSBjYW4gYmUgbG9jYXRlZCBpbiBwcmV0dHkgbXVjaCBhbnkgb2ZmaWNlIGJ1aWxkaW5nLiBJbiBvdGhlciBjaXRpZXMgYW5kIFNMQyBjb3VudHkgYXMgYSB3aG9sZSwgdGhlcmUgYXJlIGRpZmZlcmVudCB6b25pbmcgYXJlYXMuClBvY2tldEdyZWVucyAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCk90aGVyIHBlb3BsZSBhcmUgZ2V0dGluZyB0aGVpciB0cmVhdG1lbnRzIHBhaWQgZm9yIGJ5IHRoZSBpbnN1cmFuY2UgY29tcGFueSBvZiB0aGUgcGVyc29uIHdobyBjYXVzZWQgdGhlIGFjY2lkZW50IHRoZXkgd2VyZSBpbi4gc29tZSB3YW50IHRvIGdldCBiZXR0ZXIgYXMgc29vbiBhcyBwb3NzaWJsZSwgc29tZSBtaWxrIGl0IGZvciBhbGwgaXQgaXMgd29ydGguIGV2ZW50dWFsbHkgdGhlIGluc3VyYW5jZSBjb21wYW55IHdpbGwgcHVzaCBmb3IgYSBmaW5hbCBzZXR0bGVtZW50IGlmIHRoZSByZWNvdmVyeSBwcm9jZXNzIGlzIHRha2luZyB0byBsb25nLiB0aGVzZSBwYXRpZW50cyBhcmUgYSBnb2xkZW4gZ29vc2UgZm9yIDEgMiB5ZWFycyBhbmQgY2FuIGJlIG1pbGtlZCBmb3IgZG96ZW5zIG9mIHRyZWF0bWVudHMuCkNvbW1vbiBzZW5zZSB0ZWxscyB1cyB0aGF0IHRoZSBrZXkgdG8gc3VjY2VlZGluZyBpbiBhIHRyaWF0aGxvbiBpcyBzd2ltbWluZywgcmlkaW5nIG9yIHJ1bm5pbmcgYXMgZmFzdCBhcyBwb3NzaWJsZSAgIGJ1dCBvbmx5IHVwIHRvIGEgY2VydGFpbiBwb2ludC4gVW5sZXNzIHlvdSdyZSBjb21wZXRpbmcgaW4gYSBzcHJpbnQgdHJpYXRobG9uIChhIGZyYWN0aW9uIG9mIHRoZSBsZW5ndGggb2YgYW4gSXJvbm1hbiB0cmlhdGhsb24pLCB5b3UgY2FuJ3QgcG9zc2libHkgZ28gZnVsbCB0aWx0IGZvciB0aGUgZW50aXJlIHJhY2UuIExlYXJuaW5nIHRvIHBhY2UgeW91cnNlbGYgaXMgdGhlcmVmb3JlIGEgY3JpdGljYWwgZWxlbWVudCBvZiB0cmlhdGhsb24gdHJhaW5pbmcuIApFaWdodDogTHVjayBiZSBhIGxhZHkKSWNoIGhhYmUgaW4gNSBNaW51dGVuIFdpa2lwZWRpYSBtZWhyIGdlbGVybnQgYWxzIGlociBoaWVyIGJlciBTdHVuZGVuIHp1c2FtbWVuZ2VzY2hyaWViZW4gaGFidC4gRGFzIGFsbGVzIGlzdCBzbyBnZWlmZXJuZCwgdW5kIHNvIHN0cnVuemR1bW0sIGRhc3Mgc29nYXJXZW5uIG1hbiBkYSB3aXJrbGljaCBudXIgVXJsYXViIG1hY2h0IHVtIHZsbGlnIG9obmUgSGludGVyZ2VkYW5rZW4gZGFzIExhbmQgdW5kIHNlaW5lIEt1bHR1ciBrZW5uZW56dWxlcm5lbiwgd2lyZCBtYW4gdGVpbHdlaXNlIHNjaG9uIHNlaHIgZ2VzY2hvY2sgd2FzIGRvcnQgdW52ZXJob2xlbiBhbiBqZWRlciBkcml0dGVuIEVja2UgYW5nZWJvdGVuIHdpcmQuSWNoIGthbm4gZGVuIFRoYWlzIG51ciBlbXBmZWhsZW4sIGRhc3Mgc2llIG1hbCByaWdvcm9zIFNjaGx1c3MgZGFtaXQgbWFjaGVuLiBBYmVyIHdlbm4gbWFuIGRhIG1hbCBkdXJjaCBlaW5lIGdlc2NoZnRpZ2UgSGF1cHRzdHJhZSBCYW5na29rcyBsdWZ0IHVuZCBkYW5uIHNpZWh0IHdpZSBlaW4gVGhhaSBpbSBBbnp1ZyBzZWluIGJlc3RlcyBTdGNrIHJhdXNob2x0IHVuZCBlaW5mYWNoIGdlZ2VuIGVpbmUgSGF1c3dhbmQgcGlua2VsdCAuIApDUFUgY29vbGVyOiBIb25lc3RseSBJIHNjcmFwcGVkIHRoaXMgb25lIGFzIHRoZSBXcmFpdGggUHJpc20gY29vbGVyIGluY2x1ZGVkIHdpdGggdGhlIDI3MDBYIGlzIHF1aXRlIGNhcGFibGUgb24gaXQgb3duLiBBbmQgaXQgaGFzIGEgYml0IG9mIFJHQiBvbiBpdCwgc28gaXQgZXZlbiBsb29rcyBjb29sIDopIFlvdSBjYW4gc2VlIGEgYnVpbGQgd2l0aCBpdCBhbmQgaG93IGl0IGxvb2tzIGluIHRoZSBIMjAwIGhlcmUuIApTaWduaW5nIGEgcGV0aXRpb24gaXMgbmljZSwgYnV0IGl0IGFsc28gcG9pbnRsZXNzLiBJIGdyZXcgdXAgQ2F0aG9saWMgYW5kIHdlbnQgdG8gdGhlaXIgc2Nob29scyBmcm9tIGtpbmRlcmdhcnRlbiB0aHJvdWdoIHVuaXZlcnNpdHksIGFuZCBxdWl0dGluZyB0aGF0IHdob2xlIHNjZW5lIHdhcyB0aGUgZWFzaWVzdCBkZWNpc2lvbiBJIGV2ZXIgbWFkZS4gSSB3b3VsZG4gbGVhdmUgb25lIG9mIG15IGtpZHMgaW4gdGhlIGNhcmUgb2YgYSBjYXRob2xpYyBwcmllc3QgZm9yIDMwIHNlY29uZHMuCkdvb2QgbHVjayBtYW4uIApUaGlzIHVsdGltYXRlbHkgbGVkIHRoZSBjb3VuY2lsIHRvIHJldm9rZSB0aGUgYnVzaW5lc3MgbGljZW5zZXMgb2YgU2h1IFFpbiBPJ05laWwsIG93bmVyIG9mIEdvbGRlbiBEcmFnb24gb24gV2VzdCBTYWhhcmEsIGFuZCBaaHUgSC4gClBpenphIEh1dCBwaXp6YSAoY3JlYW0gY2hlZXNlIGFuZCBzd2VldCBwb3RhdG8gcGl6emEgaXMgYXdlc29tZSBhbmQgd2VpcmQpCk1vdGhlciB3YW50cyByZWxhdGlvbnNoaXAgdG8gc3RvcCwgdW5kZXJhZ2UgZGF1Z2h0ZXIgZG9lc24gYXBwYXJlbnRseSB3YW50IHRvLiBNb3RoZXIgdGhyZWF0ZW5zIExlaWtlbiwgd2hvIGN1dHMgb2ZmIHRoZSByZWxhdGlvbnNoaXAuIFNvbWV0aW1lIGFmdGVyIHRoYXQsIG1vdGhlciBzdGlsbCBmaWxlcyBjcmltaW5hbCBjb21wbGFpbnQuCkl0IGlzIHdoYXQgaXQgaXMuIApBbmQgaXQgYWxzbyBmdW5ueSwgbGVnaXRpbWF0ZWx5IGZ1bm55LCBiZWNhdXNlIHBlb3BsZSB3aG8gc2hhcmUgaGVyIGV4cGVyaWVuY2VzIGFuZCB0aG9zZSB3aG8gZG9uIGNhbiBib3RoIGxhdWdoIGF0IHRoZSBpbnRlcmVzdGluZyB3YXkgc2hlIHZpZXdzIGFuZCBjb25jZXB0dWFsaXNlcyB0aGUgd29ybGQgdGhyb3VnaCBodW1vdXIsIHdoZXRoZXIgb3Igbm90IHdlIGxpdmVkIHRocm91Z2ggYW5kIHRob3VnaHQgYWJvdXQgd2hhdCBzaGUgdGFsa2luZyBhYm91dCBvciBub3QuU28gdG8gc2F5IHRoYXQgZXhwZXJpZW5jZSBoYXMgbm8gYWZmZWN0IG9uIHdoZXRoZXIgYSBqb2tlIGlzIGdvb2Qgb3Igbm90IGlzIHBsYWlubHksIG9idmlvdXNseSBmYWxzZS4gCkJ1dCB3aGF0IGlzIGZhc2NpbmF0aW5nIGlzIHRoYXQgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHNpdHRpbmcgdGltZSBhbmQgbW9ydGFsaXR5IHdhcyBpbmRlcGVuZGVudCBvZiBwaHlzaWNhbCBhY3Rpdml0eSBsZXZlbHMuClRoZSBjbHViIHJlY29yZGVkIGEgc21hbGwgcHJvZml0IGluIHRoZSB5ZWFyIGVuZGluZyAyMDEyLCBidXQgaXMgZGVhbGluZyB3aXRoIGEgbG9uZyBzdGFuZGluZyBkZWJ0IHJlcGF5bWVudCB0byB0aGUgQXVzdHJhbGlhbiBUYXggT2ZmaWNlLiBBbG1vc3QgYSB5ZWFyIGFnbywgdGhlIHNwb3J0cyBjbHViIGFncmVlZCB0byBhcHByb2FjaCBBbGJ1cnkgQ291bmNpbCB3aXRoIGEgc2FsZSBhbmQgbGVhc2UgYmFjayBwcm9wb3NhbCBmb3IgYSBjYXIgcGFyaywgYnV0IG5vIGZvcm1hbCB0YWxrcyB0b29rIHBsYWNlIG9uIHRoZSBwb3RlbnRpYWwgcmVzY3VlIHBhY2thZ2UuIApEZXBlbmRpbmcgb24gdGhlIHBvaW50IGluIHRoZSBnYW1lIGEgYmFkIGhhbmQgaXMgb25lIHdoaWNoIGlzIHRoZSB1bmRlcmRvZyAoaGFzIGxpdHRsZSBjaGFuY2Ugb2Ygd2lubmluZykgb3IgYmVjb21lcyB1bnBsYXlhYmxlIG9uIGZ1cnRoZXIgYmV0dGluZyByb3VuZHMuIFRoZSB1bmRlcmRvZyBjYXNlIGlzIGNsZWFyLCBpZiB5b3UgaGF2ZSBjYXJkcyB3aGljaCBoYXZlIGEgdmVyeSBsb3cgY2hhbmNlIG9mIHdpbm5pbmcgdGhlbiB5b3UgY2xlYXJseSBoYXZlIGEgYmFkIGhhbmQuIApBdCB0aGUgc2FtZSB0aW1lLCB5b3Ugc2hvdWxkIGNob29zZSB0byB3b3JrIHdpdGggYSBjb21wYW55IHRoYXQgd2lsbCBwdXQgYXQgeW91ciBkaXNwb3NhbCBjb21wZXRlbnQgZGVhbGVycyB3aG8gd2lsbCBkZWFsIHdpdGggdGhlIGNhcmRzIGFuZCBpbnN0cnVjdCB0aGUgZ3Vlc3RzIHdpdGggcmVzcGVjdCB0byB0aGUgcnVsZXMgb2YgdGhlIGdhbWUuIApPaCBteSBnb2Qgd2UgbmVhcmx5IG1lYXN1cmVtZW50IHR3aW5zISAoSSBVQjogMjcuNSwgMjYsIDI1LCBCOiAzMywgMzMsIDMzLCBmb3IgY29tcGFyaXNvbi4pIEkgYWxzbyBwcmV0dHkgcHJvamVjdGVkLCBmdWxsIG9uIHRvcCBhbmQgY2xvc2Ugc2V0LiAyOEUgKFVTIDI4REREKSB3b3JrcyBhIHRyZWF0IGZvciBtZSwgc28gSSB0aGluayB5b3UgcmlnaHQgd2l0aCB0aGUgc2l6aW5nLiBJIGRvbiBoYXZlIGFueSBzZWFtbGVzcyBicmFzIHJuLCBidXQgSSB3YWl0aW5nIG9uIGEgRnJleWEgRGVjbyB0byBhcnJpdmUgaW4gdGhlIG1haWwgc28gSSBsZXQgeW91IGtub3cgaG93IHRoYXQgZ29lcy4gVGhlIGxhc3QgRnJleWEgYnJhIEkgaGFkIHdhcyBhIGRpc2FzdGVyLCBidXQgSSByZW1haW4gaG9wZWZ1bC4gTXkgZmF2b3VyaXRlIGJyYSBmcm9tIGEgY29tZm9ydCBhbmQgZml0IHBlcnNwZWN0aXZlIGlzIGEgQ29tZXhpbSBJbmdyaWQsIGJ1dCBZTU1WIG9uIGhvdyBtdWNoIHNlYW0gc2hvd2luZyBpcyB0b28gbXVjaCB0aHJvdWdoIGEgc2hpcnQuIChQbHVzIEkgZ290IHRoZSBzaXplIHdyb25nLCBidXQgZXZlbiB3aXRoIGN1cHMgMSAyIHNpemVzIHRvbyBzbWFsbCBpdCBtb3JlIGNvbWZvcnRhYmxlIHRoYW4gdGhlIG1ham9yaXR5IG9mIG15IG90aGVyIGJyYXMpClVuZHJlc3MgeW91ciBiYWJ5LiAKSXQncyBiZXN0IHRvIHN0YXJ0IHdpdGggYW55IHR3b3Mgb24gdGhlIGZhciBsZWZ0IGFuZCBydW4gdGhlbSB1cCB0byB0aGUgYWNlIG9uIHRoZSBmYXIgcmlnaHQuLiAKSmV0enQgc2NobHVnIEhlbGVucyBIZXJ6IGRvY2ggbm9jaCBlaW5pZ2UgRnJlcXVlbnplbiBoaGVyLCBhbHMgc2llIGF1ZnN0YW5kLCB1bSBpaHJlIEtsZWlkZXIgYWJ6dWxlZ2VuLiAKVGhpcyBkb2N1bWVudGFyeSByYWlzZXMgYSBnb29kIHF1ZXN0aW9uOiB3aGVyZSBkb2VzIHRoZSBsaW5lIGNyb3NzIG92ZXIgYmV0d2VlbiBtZW50YWwgaWxsbmVzcyBhbmQgZXZpbCwgaW4gYW4gaW5kaXZpZHVhbCB3aG8gd2FzIGEgbWVnYSBzdGFyIGZyb20gdGhlIGFnZSBvZiAxMCBhbmQgbmV2ZXIgaGFkIGEgcHJpdmF0ZSBjaGlsZGhvb2Qgb3Igbm9ybWFsIGVudmlyb25tZW50IHRvIGRldmVsb3Agc2V4dWFsbHk/IEhvdyBtdWNoIG9mIE1KIGlzIGEgbW9uc3RlciBhbmQgaG93IG11Y2ggYSBmYWlsdXJlIG9mIGEgcHJvcGVyIGNoaWxkaG9vZD8gSWYgaGUgd2FzIGhhdmluZyBzZXh1YWwgcmVsYXRpb25zIHdpdGggY2hpbGRyZW4sIGhvdyBtdWNoIG9mIHRoYXQgd2FzIGp1c3QgYW5kIGRpc3JlZ2FyZCBmb3IgaW5ub2NlbmNlLCBhbmQgaG93IG11Y2ggb2YgdGhhdCB3YXMgbmV2ZXIgaGF2aW5nIHByb3BlciBleHBvc3VyZSB0byBhZHVsdGhvb2QgaW4gYW5kIG9mIGl0c2VsZj8KSSBkb24gdGhpbmsgYXMgbWFueSBwZW9wbGUgYXMgaXQgc2VlbXMgdGhpbmtzIHRoYXQgd2F5LiBJIHRoaW5rIG1vc3Qgb2YgdXMgS05PVyB3ZSBhcmUgYSBkaXZlcnNlIHBlb3BsZSwgYnV0IGFyZSBndWFyZGVkIGFib3V0IG91ciBpbnRlcmVzdHMgYmFzZWQgb24gY2hpbGRob29kIGV4cGVyaWVuY2VzIGdldHRpbmcgcm9hc3RlZCBkb2luZyBhbnl0aGluZyB0aGF0IHdhcyBhIGRldmlhdGlvbiBmcm9tIHRoZSAibm9ybSIgLiBCdXQga2lkcyBhcmUgaWdub3JhbnQgYnkgbmF0dXJlLCBhbmQgdGhlIG9sZGVyIGdlbmVyYXRpb24gd2FzIGdyb29tZWQgdGhhdCB3YXkuIApXZSBsb29rIGZvcndhcmQgdG8gd2VsY29tZSB5b3UgYmFjayBpbiB0aGUgbmVhciBmdXR1cmUuIApEZXB1aXMgZGNlbWJyZSAyMDE4LCBwbHVzaWV1cnMgZGUgbm9zIGFkaHJlbnRzIG5vdXMgb250IHNpZ25hbCBsYSBwcnNlbmNlIGQndW4gY2FtaW9uIGRlIGxhIHNvY2l0IE9yYW5nZSBCYW5rLCBsYSBmaWxpYWxlIGJhbmNhaXJlIGR1IGdyb3VwZSBPcmFuZ2UsIGdhciBpbGxnYWxlbWVudCBzdXIgdW5lIHBsYWNlIGRlIGxpdnJhaXNvbiBhdSBiYXMgZHUgYm91bGV2YXJkIEJhcmJzIGV0IGRib3JkYW50IHN1ciBsYSBjaGF1c3NlLiBFZmZlY3RpdmVtZW50LCB0cnMgcmd1bGlyZW1lbnQsIGNlIGNhbWlvbiBzJ2luc3RhbGxlIGljaSBlbiBmaW4gZCdhcHJzIG1pZGkgICBlbiBwbGVpbmUgaGV1cmUgZGUgcG9pbnRlICAsIGRwbG95YW50IHNvbiBtb2JpbGllciBzdXIgbGUgdHJvdHRvaXIsIHByaXZhdGlzYW50IGFpbnNpIGwnZXNwYWNlIHB1YmxpYyBwb3VyIG1lbmVyIHNvbiBhY3Rpdml0IHByb21vdGlvbm5lbGxlLCBzYW5zIGJpZW4gdmlkZW1tZW50IGF1Y3VuZSBhdXRvcmlzYXRpb24gcG91ciBsZSBmYWlyZSwgZXQgZ25hbnQgbGEgY2lyY3VsYXRpb24gZGVzIGJ1cyBldCBkZXMgdmxvcy4gClByb2xvbmdlZCBwZXJpb2RzIG9mIHNpdHRpbmcgYXJlIGJhZCBmb3IgdGhlIGJhY2ssIGJ1dCBwcm9sb25nZWQgc2l0dGluZyB3aXRob3V0IHByb3BlciBsdW1iYXIgc3VwcG9ydCBvciBsb3NzIG9mIG5ldXRyYWwgaW4gdGhlIGx1bWJhciBzcGluZSBpcyB3b3JzZS4KUG91ciBtYSBwYXJ0LCBqJ2FpIGNvbW1lIGQnaGFiaXR1ZGUgcHJhdGlxdSBkYXZhbnRhZ2UgZGUgbGEgY3Vpc2luZSA1Uy4gQWluc2ksIHVuIG1hdGluIGRlIGxldmVyIG1hdGluYWwsIGF5YW50IGRjb25nZWwgdW4gcmVzdGUgZGUgY3VycnkgZGUgbGd1bWVzIGVuIHBydmlzaW9uIGR1IHNvaXIsIGplIG4nYWkgcGFzIGV1IHRyb3AgZW52aWUgZGUgbGUgc2VydmlyIHRlbCBxdWVsIGV0IGonYWkgaW1wcm92aXMgdW5lIHRhcnRlIGF1IGN1cnJ5IGRlIGxndW1lcyAocHRlICB0YXJ0ZSBhdmVjIHVuZSB0b3VjaGUgZGUgZmFyaW5lIGRlIHBvaXMgY2hpY2hlcyBwb3VyIGxlIGdvdCksIGQnYXV0YW50IHBsdXMgc2ltcGxlIHF1ZSBqJ2F2YWlzIGR1IGxhaXQgZXQgZGUgbGEgY3JtZSBlbnRhbXMsIGRlcyB1ZnMsIGRlIGxhIGNvcmlhbmRyZS4gQ2V0dGUgdGFydGUsIHNlcnZpZSBhdmVjIHVuZSBzYWxhZGUgZGUgcG91cnBpZXIgZnV0IHRvdXQgIGZhaXQgZGxpY2lldXNlLiBDJ2VzdCBjZSBxdWUgaidhcHBlbGxlIGRlIGxhIGN1aXNpbmUgZG9taW5vLgpUaG9zZSBjb25kb3Mgd2VyZSBsYXRlciBzZWl6ZWQgYnkgdGhlIGdvdmVybm1lbnQsIHdoaWNoIGNsYWltZWQgdGhleSB3ZXJlIHVzZWQgdG8gbGF1bmRlciBtb25leSBmb3IgdGhlIFJ1c3NpYW4gbW9iLiAoTlkgVGltZXMsIEFwciAzMCwgMTk5MikuIApUaGVyZSBhcmUgYWxzbyBjZXJ0YWluIGFwcHMgeW91IGNhbiBkb3dubG9hZCB3aGVyZSB5b3UgaG9sZCBkb3duIGEgYnV0dG9uIG9uIHlvdXIgcGhvbmUgc2NyZWVuIGlmIHlvdSBmZWVsIHVuc2FmZSwgYW5kIGl0IHdpbGwgYXV0b21hdGljYWxseSBhbGVydCB0aGUgcG9saWNlIHdpdGggeW91ciBsb2NhdGlvbiBpZiB5b3UgbGV0IGdvIGJlZm9yZSBhIHNldCB0aW1lLiAKTm93IGl0IGlzIHRoYXQgd2luZC9zb2xhciBjYW4ndCBwb3dlciBtb2Rlcm4gc29jaWV0eS4gQXNpZGUgZnJvbSB0aGUgZmFjdCB5b3UndmUgZm9yZ290dGVuIGh5ZHJvZWxlY3RyaWMsIGFuZCB0aGUgY291bnRyaWVzIHdoZXJlIGl0IGRvZXMgcG93ZXIgc29jaWV0eSwgYW5kIHRoZSBzdGF0ZXMgaW4gb3VyIG93biBjb3VudHJ5IHdoZXJlIHRoZXkgd29yayBqdXN0IGZpbmUgd2l0aG91dCBuYXR1cmFsIGdhcywgYW5kIHRoZXNlIHRoaW5ncyBjYWxsZWQgImJhdHRlcmllcyIsIHlvdSBzZWVtIHRvIGFsc28gYmUgaWdub3JpbmcgYW55IGFkdmFuY2VtZW50IGluIHJlbmV3YWJsZSB0ZWNobm9sb2dpZXMgdGhhdCBoYXZlIG9jY3VycmVkIG9yIHRoYXQgd2lsbCBvY2N1ciB0byBwcm9nbm9zdGljYXRlLCB3aXRob3V0IGV2aWRlbmNlLCBzb21ldGhpbmcgd2hpY2ggc2ltcGx5IGNhbiBub3QgYmUgZmFsc2lmaWVkIGF0IHRoaXMgdGltZS4uIAoxKSBGb2xkIFByZS4gVGhlIHdob2xlIHRhYmxlIHN0aWxsIGdldHMgdG8gYWN0IGJlaGluZCB1cywgd2UgaGF2ZSBhIHBlcnNvbiBzaG93aW5nIGltbWVuc2UgaGFuZCBzdHJlbmd0aCwgYW5kIFFKcyBkb2VzIG5vdCBkbyB3ZWxsIGFnYWluc3QgdGhhdCByYW5nZS4KSSBoYWQgc3VyZ2VyeSBmb3IgYSB0b3JuIHRlbmRvbiBzaGVhdGggdGhhdCB3YXMgY2F1c2luZyBteSB0ZW5kb24gdG8gZnJheSBpdHNlbGYgb3ZlciBteSBib25lLiAKQWNjb3JkaW5nIHRvIGEgR292ZXJubWVudCBBY2NvdW50YWJpbGl0eSBPZmZpY2UgcmVwb3J0LCB5b3UgY2FuIGZhaXJseSBlYXNpbHkgZ2V0IHBhc3QgdGhlIHNlY3VyaXR5IGF0IGZlZGVyYWwgYnVpbGRpbmdzIHdpdGggYWxsIHRoZSBtYXRlcmlhbHMgeW91IG5lZWQgdG8gYnVpbGQgYW4gZXhwbG9zaXZlIGRldmljZS4gQmV0dGVyLCB5b3UgY2FuIHRoZW4gYXNzZW1ibGUgdGhhdCBleHBsb3NpdmUgZGV2aWNlIGluc2lkZSBhbmQgd2FsayBhcm91bmQgdGhlIGJ1aWxkaW5nIHdpdGggaXQgYW5kIGFwcGFyZW50bHkgbm8gb25lIHdpbGwgYm90aGVyIHlvdS4gCldpbGwgZ28gSXNoaWRhLCBidXQgRXJ3aW4gaXMgYSBmdWNraW5nIGxlZ2VuZCwgc28gSSBjYW5ub3QgY29tcGxhaW4gZWl0aGVyIHdheS5UaGF0IGFsbCBmb3IgbWUsIHZvdGUgR3V0cyBhbGwgdGhlIHdheSBiYXliZWUhTUM6IE15IEhlcm8gQWNhZGVtaWEgZmFucyBsb3N0IGhhcmQuIE9ubHkgYm95cyBsZWZ0IGFyZSBEZWt1IGFuZCBBbGwgTWlnaHQsIGFuZCB0aGUgb3RoZXIgMyBhbGwgZ290IHVwc2V0IGluIGEgc2luZ2xlIGRheS4gRnVja2luZyBudXRzIHRoYXQgd2FzLkFzIGZvciB3aW5uZXJzLCBHdXRzLiAKRmFybSB3b3JrZXJzLiBSb29mZXJzLiAKRXhwZWN0IGl0LiBJdCBqdXN0IGEgZnVubnkgb2RkIHRoaW5nIHRoYXQgYnJhaW5zIGRvLi4gClRoaXMgc3lzdGVtIGxldHMgdXMgcGljayBhbiBvcHRpb24gdGhhdCBhIG1ham9yaXR5IHByZWZlcnMgYW5kIHN0aWxsIGdpdmUgbW9yZSB0aGFuIHR3byBvcHRpb25zIHdoaWNoIGlzIGdvb2QsIGJlY2F1c2UgbmVhcmx5IGFsbCB0aGUgb3B0aW9ucyB3ZSBwdXQgaW4gdGhlIHBvbGwgY2FtZSBkaXJlY3RseSBmcm9tIGEgZmVlZGJhY2sgdGhyZWFkIHdlIHJhbiBhIGZldyB3ZWVrcyBiZWZvcmUgdGhlIHZvdGUgaXRzZWxmLkkgYXZvaWRlZCB0aGlzIGFza2luZyBpbiBhIHB1YmxpYyB0aHJlYWQgYmVjYXVzZSBJIGRpZG4gd2FudCBhbnkgdG8gZGVhbCB3aXRoIGFueSB0dW1ibHIgc3R5bGUgZG93bnZvdGUgbW9icyBvciBseW5jaGluZ3MsIGJ1dCBpcyB0aGVyZSBhIHJlYXNvbiB3aHkgUG9rZW1vbiBhcnRzIGFuZCBjcmFmdHMgYXJlbiB0aGVpciBvd24gc3ViPyBJIG1lbnRpb25lZCB0aGlzIGluIHRoZSBzdXJ2ZXkgdGhpbmcgYmVmb3JlIHRoZSB2b3RlIHdhcyBoZWxkLCBidXQgSSBzdGF0ZWQgdGhhdCBpbiBteSBvcGluaW9uLCB0aGUgbWFqb3JpdHkgb2YgdGhyZWFkcyBpbiBhbnkgc3ViIHNob3VsZCBiZSBkaXNjdXNzaW9uIHRocmVhZHMgYW5kIGl0IGxvb2tlZCBsaWtlIGV2ZXJ5IG90aGVyIFBva2Vtb24gc3ViamVjdCBoYXMgdGhhdCBleGNlcHQgZm9yIGFydHMgYW5kIGNyYWZ0cy5BdCB0aGlzIHBvaW50LCBhbGwgb2YgdGhlIHN1YnJlZGRpdCBydWxlcyBhcmUgc3VwcG9ydGVkIGJ5IGNvbW11bml0eSB2b3Rlcy4gU28gdGhlIHJlYXNvbiBhbnkgb25lIHRoaW5nIGlzIGFsbG93ZWQgb3Igbm90IGFsbG93ZWQgaXMgYmVjYXVzZSBvZiB0aGF0ISBJZiBwZW9wbGUgdm90ZSB0byBiYW4gYWxsIGFydCBhbmQgY3JhZnQgcG9zdHMgd2hlbiB3ZSBkbyBhbm90aGVyIHZvdGUgbGlrZSB0aGlzICh3aGljaCB3ZSB3aWxsIGRvIHJlZ3VsYXJseSwgdG8gbWFrZSBzdXJlIHRoZSBydWxlcyBsaW5lIHVwIHdpdGggcGVvcGxlIHByZWZlcmVuY2VzKSwgdGhlbiB3ZSBkbyBpdC4gCllvdSByZWFsbHkgY2FuJ3QgdXNlIHRvbyBtdWNoLi4gCkphbmRhIHdhcyBpbml0aWFsbHkgdHJhaW5lZCBhcyBhIG5ldXJvbG9naXN0IHdobyBsYXRlciBzcGVjaWFsaXplZCBpbiBtYW51YWwgbWVkaWNpbmUgKE11c2NsZSBhbmQgSm9pbnQgTWFuaXB1bGF0aW9uKSBhbmQgcmVoYWJpbGl0YXRpb247IGhlIHdhcyB1bmlxdWVseSBxdWFsaWZpZWQgdG8gZXhwbGFpbiB0aGUgY29tcGxleCBuYXR1cmUgb2YgY2hyb25pYyBwYWluIHN5bmRyb21lcyBpbiBhIG1hbm5lciB0aGF0IGludGVncmF0ZWQgbmV1cm9sb2dpY2FsbHkgYmFzZWQgcHJpbmNpcGxlcyB3aXRoIG1hbnVhbCB0ZWNobmlxdWVzLiBIaXMgYm9va3MgaGF2ZSBiZWVuIHRyYW5zbGF0ZWQgaW50byBmb3VyIGxhbmd1YWdlcyBpbiBudW1lcm91cyBlZGl0aW9ucy4gCk9wYWxGYWUgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KUGxheWVkIFBva2VyIGZvciAyIGhvdXJzCkJlZm9yZSBoZSBkaWVkLCBOaXhvbiBnYXZlIGludmVzdGlnYXRvcnMgYSB2YWd1ZSBkZXNjcmlwdGlvbiBvZiB0aGUgZ3VubWFuLi4gCk1ha2VzaGlmdCBtZSwgc2lyLiBZb3VyIHdob3JlIGNvdWxkIG5vdCBjb250cm9sIG15c2VsZiwgYW5kIHRoZSB3aG9sZSBraXQgaGFwcGVuZWQgc28gZmlybSAuIFNoZSB0YWtlcyB0aGUgdGhyYXNoaW5nLCBzaGUgd2lsbCBkbyB3aGF0ZXZlciB5b3Ugb3JkZXIsIFNpci4KTW9zdCBwb2tlciBjaGlwcyBhcmUgY29tcG9zZWQgb2YgcGxhc3RpYywgY2xheSwgY2VyYW1pY3MsIGFuZCB3b29kLiAKVW5zdXJwcmlzaW5nbHksIEkgd2Fzbid0IGhhcHB5IHdpdGggdGhvc2UgZWl0aGVyIGFuZCBhbSByZWdyZXR0aW5nIGV2ZXIgZ2V0dGluZyB0aGVtIGluIHRoZSBmaXJzdCBwbGFjZS4gClJpZ2h0IHdoZW4gT1AncyB5b3VuZyBsaXR0bGUgZmFtaWx5IGlzIHRvdGFsbHkgc3RyZXNzZWQgZHVlIHRvIGRlYWxpbmcgd2l0aCBhIGxpdHRsZSBraWQncyBwb3RlbnRpYWxseSBmYXRhbCBpbGxuZXNzLCBUT1cgcmVtaW5kcyBTVEJYIERIIHRoYXQgaGUgaGFzbid0IGJlZW4gZ2V0dGluZyBoaXMgcm9ja3Mgb2ZmIGVub3VnaDsgaGVyIGJpZyBzdHVkIGJhYWFhYnkgREVTRVJWRVMgc29tZSBmdWNrIHRpbWUuIApIdW1hbnMgYXJlbid0IHJlYWxseSB0aGF0IHN0dXBpZCBpbiBjb21wYXJpc29uIHRvIGFuaW1hbHMsIGluIGZhY3Qgd2UncmUgdmVyeSBzbWFydC4gVGhhdCBpbnRlbGxpZ2VuY2UsIGNvbWJpbmVkIHdpdGggdGhlIGV2b2x1dGlvbmFyeSBkZXNpcmVzIHByZXNlbnQgaW4gb3RoZXIgYW5pbWFscywgYWxsb3dlZCB1cyB0byBjb25zdW1lIG1vcmUgdGhhbiBpcyBuYXR1cmFsbHkgZmVhc2libGUgb3IgY29uY2VpdmFibGUgYnkgYSBsb25nIHNob3QuIFdlJ3JlIHZpY3RpbXMgb2YgdGhlIHN1Y2Nlc3Mgb2YgZ3JlZWR5IHBlb3BsZSBhbmQgbGVhZGVycyB0aHJvdWdob3V0IGh1bWFuIGhpc3RvcnkuCklsZXMgRXBhcnNlczogZHNpZ25lIGxlcyBjaW5xIGxlcyBmcmFuYWlzZXMgZGFucyBsZSBDYW5hbCBkdSBNb3phbWJpcXVlIGV0IGRhbnMgbCdPY2FuIEluZGllbiA6IDEvIEJhc3NhcyBkYSBJbmRpYSAoMSBrbSBldCBpbmhhYml0KSAyLyBFdXJvcGEgKDI4IGttLCAxNSBoYWIuIApJbnN0ZWFkIHRoZSAxMDAgV29ybGQgUG9rZXIgVG91ciBQb2tlciBDaGlwIFNldCBvZmZlcmVkIGF1dGhlbnRpYyBwb2tlciBjaGlwcy4uIApXaGVuIHlvdSBnbyB0byB0aHJvdyBhIEhpZGVtYXNhIEhvb2ssIHlvdSB3YW50IHRvIHN0aWNrIG91dCB5b3VyIG5vbiB0aHJvd2hhbmQgaW5kZXggZmluZ2VyLiBUaGVuIHdpdGggb25lIG1vdGlvbiB5b3UgZ29pbmcgdG8gcHVsbCB0aGUgeW95byBpbnRvIHRoZSBhaXIsIGFib3V0IHBhcmFsbGVsIHdpdGggeW91ciBmaW5nZXIsIG9yIG1heWJlIGEgbGl0dGxlIGhpZ2hlciwgd2hpbGUgYWxzbyBzd2luZ2luZyB0aGUgc2xhY2sgc3RyaW5nIHRvd2FyZHMgeW91ciBub24gdGhyb3doYW5kLiBUaGlzIGlzIHdoZXJlIGl0IGdldCBjb21wbGljYXRlZC4KVGhlc2UgYXJlIHN0cmljdGx5IGFuZCBwdXJlbHkgZ2FtaW5nIG9ubHkuIApJbiBzcG90cyBJIGZlbHQgSSB3YXMgZ2l2aW5nIHVwIGxlc3MgZ3JvdW5kIGFuZCBJIGhhZCBoaW0gbWlzc2luZy4gClRoZXJlIG1heSBhbHJlYWR5IGJlIHNvbWUgb2ZmIHRoZSBzaGVsZiB0aGluZyBvdXQgdGhlcmUgZm9yIHRoaXMgYWxyZWFkeSwgSSBkb24ga25vdy4gQ3JlYXRpbmcgYSB3ZWIgcGFnZSBhbmQgaW5zdGFsbGluZyB0aGUgYmVmb3JlIG1lbnRpb25lZCBvcGVudnBuIG1vZHVsZSB3aWxsIHByb2JhYmx5IG9ubHkgdGFrZSBhbiBob3VyIG9yIHNvIHRvIGNvbXBsZXRlLgpKdW5raXQzMyAgMzEgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCkNvcHMgZm91bmQgYSBsb2FkZWQgaGFuZGd1biBpbiB0aGUgYmFzZW1lbnQuClVyZ2UgeW91IG5vdCBwYW5kZXIgdG8gYSB2b2NhbCBtaW5vcml0eSwgcmF0aGVyIHRoYXQgeW91IGFjdCBpbiB0aGUgcHVibGljIGdvb2Qgb24gdGhlIHNpZGUgb2YgdGhlIHNpbGVudCBtYWpvcml0eSwgSGlzY294IHNhaWQuClRha2UgeW91ciBsYXJnZSBzaGVldCBvZiBncmVlbiB2ZWx2ZXQsIHZlbHZldGVlbiBvciB2ZXJ5IGZpbmUgZmVsdC4gKElmIHlvdSBkZWNpZGUgdG8gdXNlIGZlbHQsIGVuc3VyZSB0aGUgZmVsdCBpcyBvZiBhIGhpZ2ggcXVhbGl0eSBhbmQgaXMgbm90IHZlcnkgZnV6enkuIElmIGl0IGlzLCBpdCB3aWxsIHN0YXJ0IHRvIHBpbGwgd2l0aCB1c2Ugb3IgY2F0Y2ggb24gdGhlIGVkZ2VzIG9mIHRoZSBjYXJkcy4pIEN1dCB0aGUgZmFicmljIHNvIHRoYXQgaXQgaXMgYWJvdXQgMS8yIGluY2ggKDEyLjcgbW0pIGxhcmdlciB0aGFuIHRoZSBmb2FtIGFsbCBhcm91bmQsIG9yIDIgaW5jaGVzICg1MCBtbSkgbGFyZ2VyIHRoYW4gdGhlIHBseXdvb2Qgb24gYWxsIGVuZHMuCkJhc2ljYWxseSwgdGhlIHBvaW50IHdhcyB0byBhZHZlcnRpc2UgdG8gdGhlIG5vbiBvd25pbmcgZm9sa3MgImxvb2sgaG93IGNvb2wgdGhpcyBETEMgaXMhIFlvdSBzaG91bGQgYnV5IGl0LCB0b28hIiBBbmQgdGhlIGFyZWFzIHdlcmUgZGVzaWduZWQgdG8gYmUgYnJ1dGFsbHkgaGFyZCBzcGVjaWZpY2FsbHkgdGhyb3VnaCBlbmVteSBzcGFtIGFuZCBnYW5rcyBpbiBvcmRlciB0byBlbmNvdXJhZ2UgY28gb3AgcGxheSBzbyB0aGF0IHRoZSBwZW9wbGUgd2hvIGRpZCBvd24gdGhlIERMQyB3b3VsZCBzdW1tb24gYWxsIHRoZSBmb2xrcyB3aG8gZGlkbiBjYW4gc2VlIHRoZSBjb21wYXJpc29uIHRvIHRoZSByZXN0IG9mIHRoZSBnYW1lOiBtb3N0IG9mIHRoZSB0aW1lLCBpZiB5b3UgZ2V0ICJnYW5rZWQiIGJ5IG1vcmUgdGhhbiB0d28gZW5lbWllcyBhdCBvbmNlLCBldmVuIGluIFNjaG9sYXIsIGl0IGJlY2F1c2UgeW91IGRvbmUgc29tZXRoaW5nIHdyb25nIHlvdSBydXNoZWQgZm9yd2FyZCB3aGVuIHlvdSBzaG91bGQgaGF2ZSBodW5nIGJhY2sgYW5kIHB1bGxlZCBlbmVtaWVzLCBvciBzb21ldGhpbmcgc2ltaWxhci4gVGhhdCBpcywgZ2V0dGluZyBnYW5rZWQgaXMgYSBzaWduIHlvdSBtYWRlIGEgdGFjdGljYWwgZXJyb3IuIApUaGUgZmlyc3QgbGluZSBvZiBkZWZlbnNlIGlzIHRoZSBza2luLCB3aGljaCBwcmV2ZW50cyBhIGxvdCBvZiBwYXRob2dlbnMgZnJvbSBlbnRlcmluZyB0aGUgYm9keS4pIFRoZSBseW1waGF0aWMgc3lzdGVtIChjbGFzc2lmaWVkIGFzIGEgY2lyY3VsYXRvcnkgc3lzdGVtKSBhY3R1YWxseSBkb2VzbiBjaXJjdWxhdGUgaXRzZWxmLiBJdCBtb3ZlbWVudCByZWxpZXMgb24gdXMgbWFudWFsbHkgbW92aW5nIGl0IGFyb3VuZCB0aHJvdWdoIHBoeXNpY2FsIG1vdmVtZW50LCBibG9vZCBmbG93LCBhbmQgaW4gdGhpcyBjYXNlIG1hc3NhZ2UuIApDYXNpbm8gZXhlY3V0aXZlcyB3ZXJlIGNvbnZpbmNlZCwgZXJyb25lb3VzbHkgYXMgaXQgdHVybmVkIG91dCwgdGhhdCBTdWZmb2xrIERvd25zIGFuZCBwYXJ0bmVyIENhZXNhcnMgRW50ZXJ0YWlubWVudCBoYWQgdGhlIEdyZWF0ZXIgQm9zdG9uIGxpY2Vuc2UgbG9ja2VkIHVwLiAKVGhlIHR3byBEYWxsYXMgSHlhdHQgaG90ZWxzIGFyZSBzZXBhcmF0ZWQgYnkgYSBydW53YXksIHdoaWNoIG1ha2VzIHRoZSB2aWV3IGZyb20gdGhlIHJvb2Z0b3AgcG9vbCBhdCBlaXRoZXIgaG90ZWwgcHJldHR5IHNwZWN0YWN1bGFyLiAKUGxheWluZyBmb3IgbW9uZXkgb3IgZXhjaXRlbWVudCBpcyB0aGUgcGxheWVycycgY2hvaWNlLiAKV2l0aCBtYW50aXMgQSBvciBnZW5lcmFsPyBJZiBpdCBpc24gZXZlbiBnb25uYSBib2FyZCB5b3UgKGlzIHRoYXQgYm9hcmRpbmcgZHJvbmUgaW4gcGhhc2UgMiBvciB0ZWxlIGxvb2tlZCBhdCBzY3JlZW5zIG5vdykgdGhlbiBJIHByb2JhYmx5IHRyeSB0byBoYWNrIGFuZCBndW5zaGlwIGl0LiBBbmQvb3IgdXNlIHNvbWUgc2hpcCB3aXRoIGEgZHJvbmUgc3lzdGVtIHNvIEkgY2FuIHVzZSBhIGRlZmVuc2UgZHJvbmUgb24gdGhvc2UgbWlzc2lsZXMsIGFuIG9mZmVuc2l2ZSBkcm9uZSB0byBicmVhayB0aHJvdWdoIHNvbWV0aGluZyBhcyByaWRpY3Vsb3VzIGFzIGNsb2FrICsgem9sdGFuIHNoaWVsZC4gTWF5YmUgZW5naSBDLgpTb3JyeSBmb3IgcHV0dGluZyBpdCBvdXQgdGhlcmUsIGJ1dCBpZiB5b3UncmUgZ29uZyB0byBsb29rIGZvciBoaW0sIHlvdSBoYXZlIHRvIGtub3cgZXZlcnl3aGVyZSBwZW9wbGUgY2FuIGhpZGUgdGhlaXIgdmljdGltcy4gCk9uIHJvdWxlIHZpdGUuIE9uIHZhIGNhcGFibGUgZGUgcmV2ZW5pciBtIGRpdC4uIApHdXlzIGFjdCBsaWtlIHRoaXMgZG91YmxlIHN0YW5kYXJkIGV4aXN0cyB3aGVyZSBnaXJscyBjYW4gcmFwIGFib3V0IHNleCB3aXRob3V0IGdldHRpbmcgc2hpdCBvbiwgYW5kIEkgY2FuIHNlZSB3aGF0IHlvdSBtZWFuIHdoZW4geW91IHNheSB0aGlzLCBwZW9wbGUgYXJlIGdldHRpbmcgZGlzZ3VzdGVkIGJ5IHRoZSBseXJpY3MsIGJ1dCBJIGhvbmVzdGx5IHRoaW5rIGNvbXBhcmlzb25zIHRvIGNhcnRpIGFuZCBmZXJnIGFyZW4gZmFpci4gVGhlIGJpZ2dlc3Qgd29tZW4gaW4gdGhlIGdhbWUgcmlnaHQgbm93LCBOaWNraSBhbmQgQ2FyZGksIGxpdGVyYWxseSBhcmUgc2V4IGljb25zLiBOaWNraSBoYXMgYW4gYWxidW0gY292ZXIgd2l0aCBoZXIgZW50aXJlIGJvZHkgb24gZGlzcGxheSwgbGl0dGxlIG5pcCBjb3ZlcnMgYW5kIHNoaXQuIElmIERyYWtlLCBiaWdnZXN0IGR1ZGUgaW4gdGhlIGdhbWUsIHB1dCBvdXQgYW4gYWxidW0gd2hlcmUgaGUgY292ZXJpbmcgaGlzIGRpY2sgd2l0aCBhIGxlYWYsIHRoYXQgc2hpdCB3b3VsZCBwcm9iYWJseSBiZSBzdXBlciBjb250cm92ZXJzaWFsIChpdCB3b3VsZCBiZSB3ZWlyZCB0b28sIGJ1dCB0aGlzIHByb3ZlcyBteSBwb2ludC4gTWVuIGhhdmUgZXZlbiBsZXNzIGZyZWVkb20gdG8gZGlzcGxheSBzZXh1YWxpdHkpLiBJZiBEcmFrZSBzYWlkICJpbSBnb25uYSBwdXQgbXkgZGljayBpbiBoZXIgYXNzLCBhbmQgbWFrZSBoZXIgc3dhbGxvdyB0aGUgbnV0IiwgdGhhdCBzaGl0IHdvdWxkIGJlIGVxdWFsbHkgYXMgZGlzZ3VzdGluZyBhcyBDYXJkaSBzYXlpbmcgdGhhdC4gV2hvIHlvdSBjb21wYXJpbmcgbWF0dGVycy4gSSBrbm93IHRoaXMgaXMgYSBjaXJjbGVqZXJrIHN1YiBhbmQgYWxsLCBidXQgc3RpbGwuCkl0IHdhcyBkZWFkIHF1aWV0IGFuZCB3ZSBkcm92ZSBwYXN0IGEgZmFybS4gCkljaCBwZXJzbmxpY2ggZ2VoZSBiZWkgQ0cgbnVyIHNlbHRlbiBBbGwgSW4gbWl0IG51ciBlaW5lbSBQYWFyLiAKVGhhdCBzYWlkLCBkbyBzb21lIHRoaW5ncyB0aGF0IG5vcm1hbGl6ZSBlbmNvdW50ZXJzIHdpdGggd29tZW4gaW4gYSBzYWZlIGVudmlyb25tZW50ISBUYWtlIGEgZGFuY2UgY2xhc3MsIHNvbWV0aGluZyBsaWtlIHRoYXQuIApUaGV5IHNlZSB0aGUgc3RhdHVlIG9mIENocmlzdCB0aGUgUmVkZWVtZXIgYW5kIHN0dWR5IHRoZSBtb3NhaWMgc2lkZXdhbGtzIChwYXZlbWVudHMpIGJlZm9yZSBza2V0Y2hpbmcgYmlyZHMsIHBsYW50cywgcGVvcGxlIGFuZCBzY2VuZXJ5LiAKVGhlIGltcHJvdmVtZW50IHdpbGwgYmUgdGhhdCBtb3JlIGNsYXNzZXMgKGhvcGVmdWxseSBhbGwpIHdpbGwgYmUgaW5jbHVkZWQgaW4gZW5kIGdhbWUgY29udGVudC4gCk5lbGx5IEZ1cnRhZG8gaXMgb25lIG9mIHRoZSBmZXcgZmVtYWxlcyB3aXRoIHRoZSBtb3N0IG51bWJlciBvbmVzLiBUaHJlZSBvdXQgb2YgYSB0b3RhbCBvZiBmaXZlIG9uIHRoZSB5ZWFyIGVuZCBjaGFydHMgd2VudCB0byB0aGUgdG9wIG9mIHRoZSBIb3QgMTAwIHdpdGggIlByb21pc2N1b3VzIiwgZmVhdHVyaW5nIFRpbWJhbGFuZCBpbiAyMDA2IGFuZCwgIkdpdmUgSXQgVG8gTWUiIGFuZCAiU2F5IEl0IFJpZ2h0IiBpbiAyMDA3LiBIZXIgc3VjY2Vzc2Z1bCBjYXJlZXIgYmVnYW4gaW4gMjAwMCB3aXRoIHRoZSByZWxlYXNlIG9mIGhlciBkIGFsYnVtIFdob2EsIE5lbGx5IS4gCkdhZ2EgYWxzbyByZXZlYWxlZCB0aGF0IHNoZSBvZnRlbiB3cml0ZXMgc29uZ3MgaW4gb25seSAxMCBtaW51dGVzLCBhbmQgdGhhdCB0aG9zZSBub25zZW5zZSB3b3JkcyBpbiAiQmFkIFJvbWFuY2UiIGFyZW4ndCBzdWNoIG5vbnNlbnNlIGFmdGVyIGFsbC4gVHVybnMgb3V0IHRoZSAicm9tYSwgcm9tYSBtYSIgcGFydHMgYXJlIG1lYW50IHRvIGJlIHBhcnQgb2YgdGhlIHdvcmQgInJvbWFuY2UuIiBXaG8ga25ldz8hCkdlbCBpc24gbmVjZXNzYXJ5LCB5b3UgY291bGQgYWxzbyBkbyBoYWxmIGEgbG9uZyBydW4sIHN0b3AgYW5kIGVhdCBhIGJhbmFuYSBhbmQgdGhlbiBmaW5pc2ggdGhlIHJ1bi4gSSB3b3VsZCBqdXN0IHRlc3Qgb3V0IGRpZmZlcmVudCB0aGluZ3Mgc28geW91IGFyZW4gc2hvY2tpbmcgeW91ciBzdG9tYWNoIHRoZSBkYXkgb2YuLiAKRVNULiBUaHJlZSBoZWxpICBjb3B0ZXIgY3Jld21lbiB3ZXJlIGluanVyZWQgaW4gb25lIGNyYXNoIGFuZCBhbiBBdXN0cmEgIGxpYW4gYWR2aXNlciB3aXRoIHRoZSBWaWV0ICBuYW1lc2Ugd2FzIHdvdW5kZWQuIApHZXQgcmVhZHkgZm9yIEZhY2Vib29raWUuIApUaGVyZSBhcmUgbWFueSByZWFzb25zIHdoeSBwZW9wbGUgaGF2ZSBzZXh1YWwgaW50ZXJjb3Vyc2UgICBpdCBpbXByb3ZlcyBpbnRpbWFjeSBiZXR3ZWVuIGEgY291cGxlIGJ5IHJlbGVhc2luZyBob3Jtb25lcyB0aGF0IGhlbHAgdGhlbSBib25kLCBhbmQgc3R1ZGllcyBoYXZlIHNob3duIHRoYXQgc2V4dWFsIGFjdGl2aXR5IHJlbGlldmVzIHN0cmVzcywgYm9vc3RzIGltbXVuaXR5LCByZWR1Y2VzIHBhaW4gYW5kIGJ1cm5zIGNhbG9yaWVzIFtzb3VyY2U6IERvaGVueV0uIFRob3NlIGFyZSBiZW5lZml0cyB0aGF0IGFueW9uZSBjYW4gcmVhcCBmcm9tIHNleCwgbm8gbWF0dGVyIHRoZWlyIGdlbmRlciBvciB0aGVpciBzZXh1YWxpdHkuIEJ1dCBmb3IgdGhlIHN1YmplY3QgYXQgaGFuZCAgIG1ha2luZyBhIGJhYnkgICBhIG1hbiBhbmQgYSB3b21hbiBhbmQgdGhlaXIgdW5pcXVlIGdlbmV0aWMgaW5mb3JtYXRpb24gaXMgcmVxdWlyZWQuIAo6KSBNYXNzYWdpbmcgYSBwZXJzb24gaXMgaGFyZCBvbiB5b3VyIGJvZHkhIVRoZSBiaWcgYnVja3MgZG9uIGNvbWUgdW50aWwgeW91IFJFQUxMWSB3b3JrIGF0IGJ1aWxkaW5nIHlvdXIgb3duIGNsaWVudGVsZSwgYW5kIHRoYXQgYSBsb3Qgb2Ygd29yayF0aXBzIGZvciBzdGFydGluZyB0aGlzLiAKSXNuIHRoZXJlIGFub3RoZXIgcHJvYmxlbSwgdG9vLCB0aGF0IHBhaW4gaXMgYmFzaWNhbGx5IGEgc3ltcHRvbSBhbmQgbm90IHNvbWV0aGluZyB0aGF0IGNhbiBiZSByZWFsbHkgY3VyZWQ/IE9uY2UgSSBjcmFja2VkIGEgZmluZ2VyIHBsYXlpbmcgYmFza2V0YmFsbCwgSSBzdG9wcGVkIGZvciBhIHNlY29uZCwgcHVsbGVkIGl0LCBiYW5kYWdlZCBpdCB3aXRoIHNvbWUgdGFwZSBhbmQgcGxheWVkIHRoZSByZXN0IG9mIHRoZSBhZnRlcm5vb24gd2l0aG91dCBtdWNoIGRpc2NvbWZvcnQuIFdlbnQgZm9yIGEgYmVlciBhZnRlcndhcmRzLCB0aGVuIGhvbWUuIEl0IHdhc24gdW50aWwgdGhlIG5leHQgZGF5IHRoYXQgSSBub3RpY2VkIHNvbWV0aGluZyB3YXNuIHF1aXRlIHJpZ2h0LiAKVGhlcmUgd2VyZSBtYW55IHBhaXJzIG9mIHNob2VzIG9uIHRoZSBkaXNjb3VudCByYWNrLiAKSXNsZSBvZiBNYW4gKFVLKTpHcmFuZG1hc3RlciBhbmQgZm9ybWVyIHdvcmxkIGp1bmlvciBjaGFtcGlvbiBEIEhhcmlrYSB3YXMgYWRqdWRnZWQgdGhlIGJlc3Qgd29tYW4gcGxheWVyIGFmdGVyIHNoZSBzZXR0bGVkIGZvciBhIGRyYXcgd2l0aCBBbG9uIE1pbmRsaW4gb2YgSXNyYWVsIGluIHRoZSBuaW50aCBhbmQgZmluYWwgcm91bmQgb2YgUG9rZXIgTWFzdGVycyBJc2xlIG9mIE1hbiBDaGVzcyB0b3VybmFtZW50IHRoYXQgY29uY2x1ZGVkIGhlcmUuCkFoLCBzbyBNYWNreSBkaWQgY29uc2lkZXIgR2FlbGlvIGFuZCBDYXJ0YSBoaXMgZnJpZW5kcy4gQnV0IGFzIHBlciBmdWNraW5nIG5vcm0gZm9yIGFtYml0aW91cyBjaGFyYWN0ZXJzLCBoZSBhYmFuZG9uZWQgdGhvc2UgYm9uZHMgYmVjYXVzZSBpdCBkaXN0cmFjdGluZyBoaW0gZnJvbSBoaXMgYW1iaXRpb25zLiBUcmFnaWMgYWxsIGFyb3VuZC4KQnVzY2ggZ29pbmcgYWxsIGluIHdpdGggbmV3IHNwb25zb3IKU2luY2UgeW91IGRvbiBrbm93IHdoYXQgeW91IGRvaW5nIHdpdGggdGF4IGZpbGluZyBhbmQgeW91IGNhbiBhZmZvcmQgYSBwcm9mZXNzaW9uYWwsIEkgc3VnZ2VzdCBjaGVja2luZyB0aGUgQ1JBIHdlYnNpdGUgZm9yIGZyZWUgdGF4IGNsaW5pY3MuIFRoZXJlIGFyZSBhIGh1Z2UgbnVtYmVyIG9mIHRoZXNlIHdoZXJlIHZvbHVudGVlcnMgaGVscCBwZW9wbGUgdG8gZmlsZSB0aGVpciByZXR1cm5zLCBhbmQgSSBzdXJlIHRoZXJlIHdpbGwgYmUgb25lIG5lYXJieSBmb3IgeW91LiBUYWtlIGV2ZXJ5dGhpbmcgeW91IGhhdmUgKGJhbmsgc3RhdGVtZW50cywgcGF5IHN0dWJzLCBhbnl0aGluZyB5b3UgY2FuIGdldCBmcm9tIHRoZSBDUkEgd2Vic2l0ZSwgYW5kIG9mIGNvdXJzZSBhbnkgdGF4IGZvcm1zIHlvdSBiZWVuIGdpdmVuKSBhbmQgc29tZW9uZSB3aWxsIGhlbHAgeW91IHRvIGdvIHRocm91Z2ggeW91ciBwYXN0IHllYXIgcmV0dXJucyBhbmQgZ2V0IGV2ZXJ5dGhpbmcgdXAgdG8gZGF0ZS4uIApJIGNob3NlIHRoaXMgZGVzaWduIGZyb20gc2FpZCBwYWNrIG1ha2VyIGZvciBleHRyYSBzdHJlbmd0aCBpbiBoaWdoIHVzZSBhcmVhcy4gCkl0IGlzIGltcG9ydGFudCB0byB1bmRlcnN0YW5kIHRoYXQgYXV0aGVudGljIGNhc2lubyBwb2tlciBjaGlwcyBhcmUgY3JlYXRlZCBpbiBzdWNoIGEgd2F5IHRoYXQgc2VjdXJpdHkgZmVhdHVyZXMgYXJlIGluY29ycG9yYXRlZCBpbnRvIHRoZSBhY3R1YWwgY2hpcC4gSWYgYXJ0d29yayBpcyBpbnRlZ3JhdGVkIGludG8gdGhlIGRlc2lnbiBvZiB0aGUgY2hpcCwgaXQgd2lsbCBiZSBvZiB0aGUgaGlnaGVzdCBxdWFsaXR5LiBJbiBhZGRpdGlvbiB0byB0aGlzLCB0aGVyZSBhcmUgdXN1YWxseSBtYW55IGRpZmZlcmVudCBjb21iaW5hdGlvbnMgdXNlZCBpbiB0aGUgd2F5IG9mIGNvbG9ycyBvbiB0aGUgZWRnZXMgb2YgdGhlIGNoaXBzLiBUaGVzZSBhcmUgcmVmZXJyZWQgdG8gYXMgImVkZ2Ugc3BvdHMiLiBJbiBvcmRlciB0byBpZGVudGlmeSB3aGV0aGVyIG9yIG5vdCBwb2tlciBjaGlwcyBhcmUgYXV0aGVudGljIHRvIGEgcGFydGljdWxhciBjYXNpbm8sIGl0IGlzIGFic29sdXRlbHkgdml0YWwgdG8gZW5zdXJlIHRoYXQgeW91IGtub3cgdGhlIGFydHdvcmsgYW5kIGVkZ2Ugc3BvdHMgdGhhdCBhcmUgdW5pcXVlIHRvIHRoYXQgcGFydGljdWxhciBjYXNpbm8uClVubGlrZSBzaXR0aW5nIGRvd24gYXQgYSBwb2tlciB0YWJsZSB3aXRoIGZyaWVuZHMsIG9ubGluZSBwb2tlciBoYXMgYW4gYWRkZWQgZGltZW5zaW9uIHRoZXNlIGRheXMuIFRoZXJlIGlzIGEgbG90IG9mIHByZXNzdXJlIGZyb20gbWFueSBxdWFydGVycyB0byBtYWtlIG9ubGluZSBwb2tlciBpbGxlZ2FsLCBwYXJ0aWN1bGFybHkgaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIFlvdSB3aWxsIGFsbW9zdCBhbHdheXMga25vdyBpZiB0aGUgdGFibGUgZ2FtZSB5b3UgYXJlIHBsYXlpbmcgaXMgaW4gYW4gYXJlYSB3aGVyZSBwb2tlciBpcyBsZWdhbCwgYnV0IGl0IGlzIGdldHRpbmcgaGFyZGVyIHRvIGtub3cgaWYgdGhpcyBpcyB0cnVlIGFib3V0IHBva2VyIHBsYXllZCBvbmxpbmUuClRoaXMgaXMgc29tZXRoaW5nIEkgYXNrZWQgaW4gdGhlIHRocmVhZCBidXQgd2l0aCBubyBhbnN3ZXIgYXMgb2YgeWV0LiBJIGJlIGludGVyZXN0ZWQgdG8ga25vdyBhcyB3aGVuIFRBU0VSIHdhcyBmaXJzdCByb2xsZWQgb3V0IHRvIG5vbiBmaXJlYXJtcyB0aGUgaG9sc3RlcnMgd2VyZSBhIHBsYXN0aWMgZnJhbWUgZGVzaWduZWQgdG8gc2hvdyBpdCBvZmYgd2l0aCB0aGUgaWRlYSBpdCB3b3VsZCBiZSBhIGRldGVycmVudCwgd2hpbGUgdGhlIGFydGljbGUgc3VnZ2VzdHMgY29uY2VhbG1lbnQgd291bGQgYmUgYmV0dGVyLi4gCkhpcGZsZXhvcnN0cmV0Y2ggIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ28KQ2h1cGEgQ2h1cHMgZXN0biBlbnRyZSBsb3MgbXMgYXNvbWJyb3NvcyBwaXJ1bGV0YXMgaGVjaGFzIGhveS4gTGEgZW1wcmVzYSBjb21lbnogY29tbyB1bmEgaWRlYSBkZSB1biBjaXVkYWRhbm8gZXNwYW9sIGxsYW1hZG8gRW5yaWMgQmVybmF0IGVuIDE5NTguIApTbyBiYXNpY2FsbHkgYW4gYXQgcmlzayBkZW1vZ3JhcGhpYyBpbiBhIGNvdW50cnkgdGhhdCBhbHJlYWR5IGhhcyBoaWdoIHJhdGVzIG9mIHRvYmFjY28gY29uc3VtcHRpb24gdW5zdXJwcmlzaW5nbHkgaGFzIGFuIGVwaWRlbWljIG9mIHRvYmFjY28gYWRkaWN0aW9uLiBzbW9rZSBmcmVlIGF0dGl0dWRlcyBhcmUgc2xvd2x5IGJlY29taW5nIG1vcmUgcG9wdWxhciBpbiBtYWluc3RyZWFtIHNvY2lldHkgYnV0IGxnYnRxIHNvY2lldHkgaXMgZnJ1c3RyYXRpbmdseSBsYWdnaW5nIGJlaGluZCBhbmQgdGhleSBhbGwgc2VlbSBwcmV0dHkgcmVzaWduZWQgdG8gdGhlIGZhY3QuCkEgZmV3IGh1bmRyZWQgeWVhcnMgYWZ0ZXIgY2hpbGQgYW5kIGZldHVzIHdlcmUgcmVtb3ZlZCBmcm9tIEhlbGwsIGEgdmFyaWV0eSBvZiBmb3JjZXMgaW4gV2VzdGVybiBzb2NpZXR5IGFsc28gcmVtb3ZlZCB0aGUgY2hpbGQgZnJvbSB0aGUgd29ybGQgb2YgYWR1bHRzLiAKSW4gZGVyIHNwb3J0bGljaGVuIFByYXhpcyBrYW5uIGVzIGRlciBWZXJiZXNzZXJ1bmcgdm9uIGVyZ2Vibmlzd2lya3NhbWVuIFBhcmFtZXRlcm4sIGRlciBFcmhodW5nIGRlciBBdXNkYXVlciBzb3dpZSBkZXIgQmVsYXN0YmFya2VpdCBkZXMgc3R0eiBtb3RvcmlzY2hlbiBBcHBhcmF0ZXMgZGVzIFNwb3J0bGVycyBkaWVuZW4uLiAKSSB3b3VsZCBhY2NlcHQgbXkgc3RhdGVtZW50IGFib3V0IEMgYXMgaHlwZXJib2xlIHdoaWNoIHdhcyB3cml0dGVuIGZvciBleHBlZGllbmN5LiBCdXQgSSBkbyBiZWxpZXZlIHRoZXkgd291bGQgcmF0aGVyIGFsbCB0aGUgbGFuZ3VhZ2UgbWlub3JpdGllcyBpbiBTcGFpbiBkaXNzYXBlYXJlZC4gV2l0aCBDYXRhbGFuIHRoZXkgcHJldGVuZCBsaWtlIHRoZXkgb25seSB3YW50IHRvIHJlZHVjZSB0aGUgcHJlZmVyZW5jZSBmb3IgQ2F0YWxhbiBzb21ld2hhdCwgYnV0IEMgd2FudHMgdG8gcmVtb3ZlIHN0YXR1cyBmcm9tIG90aGVyIGxlc3MgcG9saXRpY2FsbHkgcG93ZXJmdWwgbGFuZ3VhZ2UgZ3JvdXBzIGxpa2UgdmFsZW5jaWFuIGFuZCBvdXRyaWdodCBiYW4gZXZlbiB3ZWFrZXIgb25lcyBsaWtlIEFyYW5lc2UgZnJvbSBiZWluZyB1c2VkIGluIGVkdWNhdGlvbi4gV2h5PyBJdCBqdXN0IHNwaXRlZnVsLiBBdCBiZXN0IEMgaXMgaGFwcHkgdG8gdW5kZXJtaW5lIGVmZm9ydHMgdG8gcHJvdGVjdCB0aGVzZSBsYW5ndWFnZXMuIEF0IHdvcnN0IGl0IGFjdHVhbGx5IHdhbnRzIHRvIGhhc3RlbiB0aGVpciBkZW1pc2UuCkkgZ3Vlc3MgaSdtIHNtYXJ0LCBkaWQgd2VsbCBvbiB0aGUgU0FULCBidXQgaSBjb21lIGFjcm9zcyBhcyBwcmV0dHkgZGl0enkgc29tZXRpbWVzIGNvcyBpIGhhdmUgQURELiBoZWgsIHRoYXQncyBhIGxvdCBvZiBhY3Jvbnltcy4KRG9udCBrbm93IHdoYXQgaXRzIGNhbGxlZCwgYnV0IGlpcmMgdGhlIGphcGFuZXNlIHVzZWQgdG8gcHV0IGNvbnZpY3RzIGluIGNvbmNyZXRlIGhvbGVzIGluIHRoZSBncm91bmQuIApTYXlpbmcgdGhhdCBwcmVmbG9wIHNvbHV0aW9ucyBieSBzbm93aWUgYmFzZWQgb24gdGhlIHBvdHNpemUgYXJlIHRoZSBiZSBhbGwgZW5kIGFsbCBvZiBHVE8gbm8gbGltaXQgaXMgcmlkaWN1bG91cy4gVGhlIHRoZW9yeSBzaGlmdHMgZGVwZW5kaW5nIG9uIHRoZSBzdHJhdGVnaWVzIGJlaW5nIHVzZWQuIFNheSBJIG9wZW4gNTElIG9uIHRoZSBidXR0b24sIHNiIHNob3VsZCBhZGFwdCBoaXMgM2Igc3RyYXRlZ3kgdG8gbXkgb3BlbiwgYXMgYmIgaW5jcmVhc2VzIGhpcyAlIGluIGNvbGQ0YmV0dGluZy4gCkkgaGFkIGEgd2hvbGUgZ2FtZXIgdGhpbmcgZ29pbmcgb24gYmVjYXVzZSBJIGxvdmUgdmlkZW8gZ2FtZXMgc28gSSBvZmZlciB0byBwbGF5IGdhbWVzIHdpdGggY2xpZW50cywgaGF2ZSBzb21lIG5hdWdodHkgcGVuYWx0aWVzIGlmIHlvdSBsb3NlIHRoYXQgc29ydCBvZiB0aGluZyBmb3IgZnVuLiAKRXZlbiBwZW9wbGUgd2l0aCBhIGxvdCBvZiBwb2tlciBjaGlwIHRyaWNrIGV4cGVyaWVuY2UgaGF2ZSBkaWZmaWN1bHR5IHdpdGggdGhlIHRyaXBsZSBzdGFjayBzaHVmZmxlLiAKU28gdGhlIG5leHQgc3RhZ2UgaW4gdGhhdCBldm9sdXRpb24gaXMgdG8gYmFzaWNhbGx5IHRyeSBhbmQgbWFrZSB0aGVtIG1vYmlsZS4gCllvdSB3b3VsZG4gYmVsaWV2ZSBob3cgY29uc2lzdGVudGx5IHBlb3BsZSB3aWZmIG9uIHRoZSBmbG9wIGFuZCB3aWxsIGZvbGQgdG8gYSBwb3Qgc2l6ZWQgYmV0LiBZb3UgaGF2ZSBubyBpbmNlbnRpdmUgdG8gcGxheSBvdXQgb2YgcG9zaXRpb24gY2F1c2UgeW91IGNhbiBiZSB3aGlza2VkIGF3YXkgdG8gYSBuZXcgdGFibGUgdGhlIHNlY29uZCB5b3UgZm9sZC4gQW55IHByaW1lIG1hdGhlbWF0aWNhbCBtb2RlbD8gT3IgYW0gSSBvdmVydGhpbmtpbmcgaW4gYSBmaWVsZCBJIHVuZGVyIHF1YWxpZmllZCB0byB0YWxrIGFib3V0PyBMb2wuIApTbywgZm9sbG93aW5nIHRoYXQgcGF0aCwgaGVyZSBhIGxvb2sgYXQgdGhlIGNvbXBlbGxpbmcgc3RvcnkgbGluZXMgaW4gdGhpcyBmaW5hbCBzdHJldGNoIHJ1bi4KV2hhdCBraW5kIG9mIGxlc3NvbiBpcyB0aGF0IGZvciB0aGVtPyBJZiB5b3VyIGJveWZyaWVuZCBtb3ZlcyAodG8gYSB2YW1waXJlIGluZmVzdGVkIHRvd24gaW4gSXRhbHkgZm9yIGluc3RhbmNlKSwgeW91IHNob3VsZCBnbyBpbnRvIHdoYXQgY2FuIG9ubHkgYmUgZGVzY3JpYmVkIGFzIGNsaW5pY2FsIGRlcHJlc3Npb24sIGxvc2UgdG91Y2ggd2l0aCB5b3VyIGZyaWVuZHMsIHlvdXIgZmFtaWx5LCBhbmQgc3RhcnQgdG8gaGFsbHVjaW5hdGUgaGlzIHByZXNlbmNlIHdoZW5ldmVyIHlvdSBkbyBzb21ldGhpbmcgc3R1cGlkIGxpa2UganVtcCBvZmYgYSBjbGlmZi4gCkR1cmluZyB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24sIHRoZSBkZXBhcnRtZW50IHNhaWQgb25saW5lIGdhbWJsaW5nIHdpdGhpbiBzdGF0ZXMgdGhhdCBkb2VzIG5vdCBpbnZvbHZlIHNwb3J0aW5nIGV2ZW50cyB3b3VsZCBub3QgdmlvbGF0ZSBmZWRlcmFsIGxhdywgYnV0IGluIHRoZSBOb3ZlbWJlciBvcGluaW9uLCB0aGUgb2ZmaWNpYWxzIHNhaWQgdGhlIGxhdyBhcHBsaWVzIHRvIGFueSBmb3JtIG9mIGdhbWJsaW5nIHRoYXQgY3Jvc3NlcyBzdGF0ZSBsaW5lcy4uIApCcmVhc3RzIHN3ZWxsIGR1cmluZyBwcmVnbmFuY3ksIHNvIGFzIGEgc2luZ2xlIG1hbGUsIHlvdSBrbm93IHRvIHN0YXkgYXdheSBmcm9tIHRoYXQgZmVtYWxlLCBzbyB5b3UnZCBmaW5kIGhlciB1bmF0dHJhY3RpdmUuCllvdSBoYXZlIHRvIGtlZXAgaW4gbWluZCBvdXIgY2l0eSBpcyBsaWtlIE1heWJlcnJ5LiBJdCdzIG9uZSBvZiB0aG9zZSBwbGFjZXMgd2hlcmUgZXZlcnlvbmUga25vd3MgZXZlcnlvbmUuIEhvd2V2ZXIsIG5leHQgeWVhciB3ZSdsbCBoYXZlIGEgd2hvbGUgc2xldyBvZiBwZW9wbGUgZnJvbSBhcm91bmQgdG93biBhbmQgaW4gb3RoZXIgY2l0aWVzIGNvbnRyaWJ1dGluZy4gClRoZXJlIGFyZSBubyBwYXJhYmVucyBvciBzdWxwaGF0ZXMsIGluc3RlYWQgd2UgdXNlIGNvY29udXQgb2lsIGFuZCB0ZWEgdHJlZSBvaWwsIHNvIGl0IGRvZXNuIGRyeSBvdXQgdGhlIHNraW4sIHNheXMgTXIuIApBbHNvIGdvIHZpc2l0IHlvdXIgbG9jYWwgYWRkaWN0aW9uIGNlbnRlcnMgYW5kIHNlZSBpZiB0aGVyZSBpcyBhbnkgd29yayB5b3UgY2FuIGRvIHRoZXJlIHRvIGhlbHAgYXMgd2VsbC4gClRoZXNlIHNlcnZpY2VzIHdpbGwgYXV0aGVudGljYXRlIHlvdXIgaWRlbnRpdHkgYW5kIHByb3ZpZGUgeW91IHRoZSBvcHRpb24gdG8gc2hhcmUgY2VydGFpbiBwZXJzb25hbCBpbmZvcm1hdGlvbiB3aXRoIHVzIHN1Y2ggYXMgeW91ciBuYW1lIGFuZCBlbWFpbCBhZGRyZXNzIHRvIHByZSBwb3B1bGF0ZSBvdXIgc2lnbiB1cCBmb3JtLiAKVGhlIHByb3NlY3V0b3IgaXMgdXN1YWxseSB3aWxsaW5nIHRvIG9mZmVyIHlvdSBhIGRlYWwgaW4gZXhjaGFuZ2UgZm9yIGEgZ3VpbHR5IHBsZWEgYW5kIHdpbGwgYWxtb3N0IGNlcnRhaW5seSBvZmZlciB5b3Ugc29tZSBraW5kIG9mIHJlZHVjdGlvbiBhdCB0aGlzIHBvaW50LiBJZiB5b3UgbGlrZSB0aGUgZGVhbCB0aGV5IGFyZSBvZmZlcmluZyB5b3UgY2FuIGFjY2VwdCBpdC4gT25jZSB5b3UgYWNjZXB0IHRoZSBkZWFsIHlvdSB3aWxsIGJlIGNhbGxlZCB1cCBpbiBmcm9udCBvZiB0aGUgSnVzdGljZSBvZiB0aGUgUGVhY2UgYW5kIGFza2VkIGlmIHlvdSBhcmUgd2lsbGluZyB0byBwbGVhZCBndWlsdHkgdG8gdGhlIHJlZHVjZWQgY2hhcmdlLCBpZiB5b3Ugc2F5IHllcyB0aGUgSlAgd2lsbCBydWJiZXIgc3RhbXAgdGhlIGRlYWwgYW5kIHRoYXQgd2lsbCBiZSB0aGF0Li4gCkl0IGhhcyBoYWQgaXRzIGZvdXIgc3Ryb25nZXN0IG1vbnRocyBzaW5jZSBpdCBsYXVuY2hlZCwgdHVybm92ZXIgYW5kIHNhbGVzIHBlciBzdG9yZSBoYXZlIGluY3JlYXNlZCBhbmQgbmV3IGZsYXZvdXJzIGFyZSBpbiBkZXZlbG9wbWVudC4uIApBcyBzaGUgYXBwcm9hY2hlcywgc2hlIHNheXMgb3V0IGxvdWQsICJTYW0uIFNhbS4gWW91IG5lZWQgdG8gY29tZSB0byB0aGUgY29uZmVyZW5jZSByb29tLiAKV2hlbmV2ZXIgcG9zc2libGUsIGdpdmUgdGhlIHN0dWRlbnQgYSBwaHlzaWNhbCBvYmplY3QgdG8gaGVscCB0aGVtIGNvbmNlcHR1YWxpemUgdGhlIHByb2JsZW0uIFRoaXMgY291bGQgaW5jbHVkZSBzbWFsbCBpdGVtcywgc3VjaCBhcyBiZWFucyBvciBwb2tlciBjaGlwcywgdGhhdCB0aGV5IGNhbiBtYW5pcHVsYXRlLiBGb3IgZXhhbXBsZSwgeW91ciBzdHVkZW50IGNvdWxkIHdvcmsgdGhyb3VnaCB0aGUgcHJvYmxlbSAyMC80IHVzaW5nIDIwIHBva2VyIGNoaXBzLiBUaGV5IGNvdWxkIGRpdmlkZSB0aGUgcG9rZXIgY2hpcHMgaW50byA0IHBpbGVzLCB3aGljaCB3b3VsZCBzaG93IHRoYXQgdGhlcmUgYXJlIDUgY2hpcHMgaW4gZWFjaCBwaWxlLgpVbnR1ayBiaXNhIG1lbmFuZyB0ZW50dSBzYWphIGJ1a2FuIGhhbCB5YW5nIG11ZGFoIGRhbiBkaWJ1dHVoa2FuIGtlc2FiYXJhbiBkYW4ga2ViZXJ1bnR1bmdhbiBkYWxhbSBwZXJtYWluYW4gY2VtZSBvbmxpbmUgaW5pLCBrZWJlcnVudHVuZ2FuIG1lbmphZGkgZmFrdG9yIHV0YW1hIHBlbmVudHUga2VtZW5hbmdhbi4gU2FhdCBiZXJtYWluIGp1ZGkgY2VtZSBvbmxpbmUsIHNlYmFpa255YSBwYWhhbWkgZGFuIGt1YXNhIGF0dXJhbiBiZXJtYWluIHNlaGluZ2dhIGJpc2EgYmVybWFpbiBkZW5nYW4gbGFuY2FyLiAKTXVjaCB0byBteSBkaXNtYXksIFRoZSBTb2NpYWwgTmV0d29yayB3YXNuJ3QgYWJvdXQgYSBndXkgcG9zdGluZyBhIHBpY3R1cmUgb2YgaGltc2VsZiBhdCB0aGUgRWlmZmVsIFRvd2VyIGFuZCBoaXMgc2xvdyBkZXNjZW50IGludG8gbWFkbmVzcyBhcyBoZSB0cmFja3MgaG93IG1hbnkgbGlrZXMgaXQgZ2V0cyBvdmVyIHRoZSBuZXh0IHR3byBob3VycyBpbiByZWFsIHRpbWUuIApBaXJwYXJpZiwgYXNzb2NpYXRpb24gZGUgc3VydmVpbGxhbmNlIGRlIGxhIHF1YWxpdCBkZSBsJ2FpciBlbiBsZSBkZSBGcmFuY2UsIHBydm9pdCBwb3VyIGF1am91cmQnaHVpIHVuIGRwYXNzZW1lbnQgZHUgc2V1aWwgZCdpbmZvcm1hdGlvbiBldCBkZSByZWNvbW1hbmRhdGlvbiwgbGUgcHJmZXQgYSBkb25jIGZpbmFsZW1lbnQgZGNpZCBsYSBtaXNlIGVuIHBsYWNlIGRlIGxhIGNpcmN1bGF0aW9uIGRpZmZyZW5jaWUgIGwnaW50cmlldXIgZHUgcHJpbXRyZSBkbGltaXQgcGFyIGwnQTg2IDogc2V1bHMgbGVzIHZoaWN1bGVzIG11bmlzIGQndW5lIHZpZ25ldHRlIENyaXQnQWlyIGRlIGNsYXNzZSAwICAzIHBvdXJyb250IGNpcmN1bGVyIGRhbnMgY2UgcHJpbXRyZS4gTCdvYmxpZ2F0aW9uIGRlIGNvbnRvdXJuZW1lbnQgcGFyIGxhIEZyYW5jaWxpZW5uZSBkZXMgdmhpY3VsZXMgZW4gdHJhbnNpdCBkb250IGxlIFBUQUMgZXhjZGUgMyw1IHRvbm5lcy4gCk1yIE1lZGRpbmdzIHNheXMgU3RhbkNoYXJ0J3MgcGFydG5lcnNoaXBzIHdpdGggbG9jYWwgYmxpbmRuZXNzIGNoYXJpdGllcyBhcm91bmQgdGhlIHdvcmxkIGhhcyBsZWQgdGhlIGJhbmsgdG8gaW50cm9kdWNlICJzcGVha2luZyIgQVRNcyB3aXRoIEJyYWlsbGUga2V5cyBhbmQgdG8gcmVjcnVpdCBmcm9tIHNjaG9vbHMgZm9yIHRoZSBibGluZCwgZXNwZWNpYWxseSBpbiBjYWxsIGNlbnRyZXMsIHdoZXJlIGltcGFpcmVkIHZpc2lvbiBuZWVkIG5vdCBiZSBhbiBpbXBlZGltZW50LiBJbiBVZ2FuZGEgaXQgaGFzIGhpcmVkIGEgZm9ybWVyIGVtcGxveWVlIG9mIGEgcGFydG5lciBjaGFyaXR5IGFzIGFuIGV4ZWN1dGl2ZS4uIApTb21lb25lIHVwc2V0cyB1cywgd2UgZG8gbm90IHNob290IHRoZW0gb3IgYmVhdCB0aGVtIG9yIGtpbGwgdGhlbS4gCkRhbmllbCBpcyByZWFsbHkgcGFzc2lvbmF0ZS4gClRoZSBpcm9ueSBoZXJlIGlzIHRoYXQgdGhlIGNvcnBvcmF0aW9ucyBhcmUgYXQgdHVybiB3aXRob3V0IHJlYWxpemluZyB0aGUgZ2FtZSBoYXMgY2hhbmdlZC4gCkhlcmUsIGNvbnNpZGVyIGhvdyB0aGUgImZpdmUiIHN1YmxpbmUgYnkgSGFhZ2VuIERheiBpcyBicm91Z2h0IHRvIGxpZmUuIFRoZSBwYWNrYWdpbmcgZG9lcyBhIGZhbnRhc3RpYyBqb2Igb2YgdW5kZXJzY29yaW5nIGEga2V5IGJyYW5kIGVxdWl0eSBwb2ludCBhcm91bmQgcHJlbWl1bSBuZXNzIGFuZCBwdXJlIGdvb2RuZXNzIGJ5IHNpbXBseSBsaXN0aW5nIGZpdmUgY29yZSBpbmdyZWRpZW50cyBwcm9taW5lbnRseSBvbiB0aGUgZnJvbnQgb2YgdGhlIHBhY2thZ2U6IG1pbGssIGNyZWFtLCBzdWdhciwgZWdncyBhbmQgd2hhdGV2ZXIgdGhlIG5hdHVyYWwgZmxhdm9yIGlzLgogZHZvcmFudGUgZXQgZ3VyaXNzZXVzZSBkZSBUaGllcnJ5IERlbGFicmUsIGRvbnQgaWwgc2VtYmxlIHByb2NoZSBkZSBmYWlyZSB1bmUgYWN0aXZpdCAgdGVtcHMgcGxlaW4sIGNvbW1lIGZvdXJuaXNzZXVyIGRlIHBhaW4gZCdleGNlcHRpb24gcG91ciByZXN0YXVyYXRldXJzLiAgaW5xdWl0ZSBkJ0FsYWluIFJleSBwb3VyIHNlcyBhYmVpbGxlcyBtZW5hY2VzIG91IGRlIGwnb3N0cmljdWx0ZXVyIElzbWFsIERyaXNzaSBCYWtoa2hhdCBmYWNlICBsJ29tbmlwcnNlbmNlIGRlcyBodXRyZXMgdHJpcGxvZGVzLiAKVGhlIG1pY3JvY29zbSBoZXJlIGlzIG9mIGFuIGlzb2xhdGVkLCByZWxhdGl2ZWx5IGltcG92ZXJpc2hlZCAoaGlzdG9yaWNhbGx5KSByZWdpb24gb2YgQ2FuYWRhIHdoaWNoLCB1bnRpbCB2ZXJ5IHJlY2VudGx5LCBoYWQgZW5qb3llZCBhbiB1cHRpY2sgaW4gZWNvbm9taWMgYWN0aXZpdHkgd2hpY2ggaW5jbHVkZWQgaW1wcm92ZW1lbnRzIHRvIGhvdXNpbmcgKHRocm91Z2ggcmVub3ZhdGlvbnMpIGFuZCB0cmFuc3BvcnRhdGlvbi4gSG93ZXZlciwgd2l0aCBBbGJlcnRhIG9pbCBhbmQgZ2FzIGZvcnR1bmVzIGJlZ2lubmluZyB0byBmbGFnIGFuZCB0aGUgb25nb2luZyBjb250cm92ZXJzeSBvdmVyIGhvdyB0byBnZXQgdGhhdCBvaWwgYW5kIGdhcyB0byBtYXJrZXQgKG9yIGluZGVlZCB3aGV0aGVyIHRvIGRpc3RyaWJ1dGUgaXQgZ2l2ZW4gd2hhdCB3ZSBub3cga25vdyksIE5ld2ZvdW5kbGFuZGVycyBhcmUgc3RhcnRpbmcgdG8gZmVlbCB0aGUgcGluY2ggYWdhaW4gYW5kIGFyZSBzbG93aW5nIGRvd24gdGhlaXIgc3BlbmRpbmcuCkkgZ290IHRvIHRoZSBob3RlbCB3aGVyZSBJIGhhZCBzdGF5ZWQgc3ggeWVhcnMgcHJldm91c2x5LiAKVm9pY2kgdW4gYnJlZiBjYWxjdWwsIGFkbWV0dG9ucyBxdSd1biBwZXRpdCBzdHVkaW8sIHVuIHBldSBtaXRldXgsIGNvdGUgNjAwIDcwMCBkYW5zIGNlIGNvaW4sIHNhY2hhbnQgcXUnaWwgbid5IGEgcGFzIGRlIHRydmUgbGUgZGltYW5jaGUgZGFucyBjZSBtdGllciwgZGV1eCBmb2lzIDUwIHBlbmRhbnQgMzAgam91cnMgbm91cyBmb250IDMwMDAgLCBhdXhxdWVscyBpbCBmYXV0IHNvdXN0cmFpcmUgbGVzIGNoYXJnZXMgZGUgbG95ZXI7IHJzdWx0YXQgZXN0aW0gOiBwbHVzIGRlIDIwMDAgcGFyIG1vaXMgcGFyIHN0dWRpby4gSG9ycyBpbXB0LiBDYXIgbm91cyBkb3V0b25zIHF1ZSBsZSAicHJveG50ZSBwcnN1bSIgc2Ugc29pdCBkb25uIGxhIHBlaW5lIGRlIHJlbXBsaXIgdW5lIGRjbGFyYXRpb24gZGUgcmV2ZW51cy4uIApPbmxpbmUgUG9rZXIgU2l0ZSBSZXZpZXdzIEd1aWRlbGluZSAgNjogRWFzeSBjb21wZXRpdGlvbi4KRm9yIHN0YXJ0ZXJzLCBjb2ZmZWUgY2FuIGNhdXNlIHhlcm9zdG9taWEsIG1vcmUgY29tbW9ubHkga25vd24gYXMgImRyeSBtb3V0aC4iIFRoYXQncyBiZWNhdXNlIGNvZmZlZSBjb250YWlucyBjYWZmZWluZSAgIHVwIHRvIDIwMCBtaWxsaWdyYW1zIGluIGEgc2luZ2xlIDggb3VuY2Ugb3IgMjM3IG1pbGxpbGl0ZXIgY3VwICAgb25lIG9mIHRoZSBjaGllZiBjdWxwcml0cyBvZiBkZWNyZWFzZWQgc2FsaXZhIGFuZCwgaW4gdHVybiwgYSBkcnkgbW91dGguIEhhdmluZyBhIGRyeSBtb3V0aCBpcyBtb3JlIHRoYW4gYW4gaW5jb252ZW5pZW5jZS4gCkxpZmUgd2Fzbid0IGFueSBzaW1wbGVyIGZvciBwZW9wbGUgb3ZlcmFsbCwgYnV0IGl0IHdhcyBmb3IgdXMgYmVjYXVzZSB3ZSB3ZXJlIHlvdW5nLiBJIHRoaW5rIHRoYXQncyB3aGF0IHBlb3BsZSBtaXNzLiBJIGtub3cgdGhhdCdzIHdoYXQgSSBtaXNzLiBXaGF0IEkndmUgY29tZSB0byBiZWxpZXZlIGlzIHRoYXQgaW4gYSBzb21ld2hhdCBkaWZmZXJlbnQgd2F5LCB0aGluZ3MgY2FuIHN0aWxsIGJlIHRoYXQgd2F5LiBCdXQgbm93IHRoYXQgSSdtIG5vdCB1bmRlciB0aGUgd2luZyBvZiBteSBwYXJlbnRzLCBJIGhhdmUgdG8gbWFrZSBlZmZvcnRzIG5vdyB0byBoZWxwIG1ha2UgaXQgc28gSSBjYW4gaGF2ZSBzb21lIGNhcmVmcmVlIHRpbWUgdG8gbXlzZWxmIG9uIGEgc3VtbWVyIGV2ZW5pbmcuIEluc3RlYWQgb2YgYW4gU05FUywgaXQgbWF5IGJlIGEgTmludGVuZG8gU3dpdGNoLCBhbmQgaW5zdGVhZCBvZiBhIGJlZ2lubmVyIHRlbGVzY29wZSwgaXQgbWF5IGJlIGEgRFNMUiBhbmQgYSB0cmlwb2QgYmVjYXVzZSB0aGF0J3MgdGhlIGhvYmJ5IEkgZ290IGludG8uIEJ1dCBldmVyeXRoaW5nIHRoYXQgbWFkZSBsaWZlIHNpbXBsZSB0aGVuIGlzIGhlcmUgdG8gbWFrZSBpdCBzaW1wbGUgbm93IGlmIHdlIGxldCBpdCBhbmQgd29yayB0b3dhcmQgdGhhdC4KVGhlbiBJIHN1ZGRlbmx5IGRyYWcgaGVyIGluIHRoZSBiZWRyb29tLiAiSSB3YW50IG15IHdvbWFuLiBOb3cuIi4gCkFzIGZvciB3aGV0aGVyIG9yIG5vdCBrb3JlYSB3b3VsZHZlIGJlZW4gc3BsaXQgdXAsIGkgd291bGQgYXJndWUgdGhhdCBpdCBwcm9iYWJseSB3b3VsZCBoYXZlLiAKQWxsIEknbSBzYXlpbmcgaXMgY2FzdCBhIHdpZGVyIG5ldCBhbmQgeW91J2xsIHN0YXJ0IHRvIGJlIG9wZW4gdG8gbW9yZSBzdHVmZi4gQWxzbyBpdCBkb2Vzbid0IGh1cnQgdG8gbGF5IGRvd24gc29tZSByZWFsbHkgZ29vZCBkaWNrIGdpcmxzIHNlZW0gdG8gY2hhbmdlIHRoZWlyIGRlbWVhbm9yIGFmdGVyIHRoYXQgZm9yIHdoYXRldmVyIHJlYXNvbiBsb2wuIApIaXRjaGNvY2sgZGlkIGhpcyBob21ld29yayBvbiBLb3NraW5lbiBhcyBzb29uIGFzIGhlIHRvb2sgdGhlIGpvYi4gSGUgY29udGFjdGVkIGhpcyBmb3JtZXIgRGFsbGFzIGRlZmVuY2VtYW4gU2VyZ2VpIFp1Ym92IGFuZCB0aGUgU3QuIFBldGVyc2J1cmcgKEtITCkgYXNzaXN0YW50IGNvYWNoLCByYXZlZCBhYm91dCBoaW0uCkluZG9uZXNpYSwgKEp1bHkgMTcsIDIwMTgpICBXaGlsZSB0aGUgY29udmVuaWVuY2Ugb2Ygb25saW5lIGdhbWJsaW5nIGhhcyBiZWVuIHRvdWNoaW5nIHRoZSBsaXZlcyBvZiBpbm51bWVyYWJsZSBlbnRodXNpYXN0cyBhbGwgb3ZlciB0aGUgd29ybGQsIHRoZSBtYXR0ZXIgb2Ygc2FmZXR5IGhhcyBiZWVuIGhvbGRpbmcgYSBtYXNzaXZlIHNlY3Rpb24gb2YgbmV3ZXIgYW5kIHJhdGhlciBsZXNzIGV4cGVyaWVuY2VkIGdhbWJsZXJzIGZyb20gYXBwcm9hY2hpbmcgdGhlIHNhbWUuIEZvYmV0IDg4LCBhbiB1cGNvbWluZyBvbmxpbmUgZ2FtYmxpbmcgcGxhdGZvcm0gaW4gdGhpcyByZXNwZWN0IGhhcyBtYW5hZ2VkIHRvIGNoYW5nZSB0aGluZ3MgZm9yIHRoZSBiZXR0ZXIuClJlYWxpc3RpY2FsbHkgSSBzaG91bGQgYmUgMTI1IDEzMCwgYnV0IGJlY2F1c2UgSSBkb24gd29yayBvdXQgYW55bW9yZSwgdGhhdCB3b3VsZCBhbGwgYmUgZmF0LiBFdmVuIHRob3VnaCBJIGhhZCBhbiB1bmRlcndlaWdodCBCTUkgaW4gdGhhdCBwaWN0dXJlLCBJIG9ubHkgbGlrZSAxIDIlIHVuZGVyZmF0LiBJbiB0aGF0IHNlY29uZCBwaWMgd2l0aCB0aGUgY3JvcCB0b3AsIHlvdSBjYW4gdGVsbCBmcm9tIG15IGJlbGx5IHRoYXQgSSBkb24gd29yayBvdXQhCkFuIGVuZ2luZWVyaW5nIHRlY2huaWNpYW4gZm9yIHRoZSBEZXBhcnRtZW50IG9mIHRoZSBOYXZ5LCBBbmR5IGlzIG1hdGhlbWF0aWNhbGx5IG1pbmRlZC4gSGUgcGxheXMgcG9rZXIgYnkgYXNzZXNzaW5nIGhpcyBjaGFuY2Ugb2Ygd2lubmluZyBhbmQgYW5hbHl6aW5nIGl0cyByaXNrLgpBUlBBTkVULCBvbmUgb2YgdGhlIEludGVybmV0J3MgcHJlZGVjZXNzb3JzLCBiZWdhbiBtb2Rlc3RseSBhcyBhIHRocmVlIG5vZGUgbmV0d29yay4gR3JhZHVhbGx5LCBzbWFydCBwZW9wbGUgYmVnYW4gdG8gbGluayBuZXR3b3JrcyB0b2dldGhlciB1c2luZyBwcm90b2NvbHMgZnJvbSB0aGUgQVJQQU5FVCBwcm9qZWN0LiBJbiB0aGUgMTk4MHMsIHRoaXMgbmV0d29yayBwcm92ZWQgdG8gYmUgYSB2YWx1YWJsZSB0b29sIGZvciByZXNlYXJjaCBhbmQgY29tbXVuaWNhdGlvbi4gCkkgcmVncmV0IG5vdCBiZWluZyB0aGUgYXdlc29tZSBiaWcgc2lzdGVyIEkgc2hvdWxkIGhhdmUgYmVlbiBpbiBoaWdoIHNjaG9vbC4gSGUgd291bGQgY2F1c2UgcHJvYmxlbXMgYmVoaW5kIG15IGJhY2suLiAKSSBhZ3JlZSBpbiBnZW5lcmFsIHdpdGggdGhlIG90aGVyIGZvbGtzIHdobyBwb3N0ZWQgaGVyZSwgYnV0IEkgd2FudCB0byB0cnkgbG9va2luZyBhdCBpdCBmcm9tIGFub3RoZXIgYW5nbGU6CkEgc2hvcHBpbmcgbGlzdCBmb3IgInByZXNzdXJlIGNvb2tlciBib21iIG1hdGVyaWFscyIgd2FzIGFsc28gYWxsZWdlZGx5IGZvdW5kIG9uIGFuIGlQYWQgZW5kaW5nIGluIGEgbm90ZSB0byAia2VlcCB0aGlzIGEgc2VjcmV0IGJldHdlZW4gbWUgYW5kIEFsbGFoIEluc3BpcmVUaGVCZWxpZXZlcnMiLgpOb3YgMjUsIEZyZWUgRG93bmxvYWQgTWFuYWdlRW5naW5lIEFETWFuYWdlciBQbHVzIFN0YW5kYXJkIEVkaXRpb24gICBXZWIgYmFzZWQgQWN0aXZlIERpcmVjdG9yeS4gSGVlbCBjcmFjayB0cmVhdG1lbnQgQlQgcHJvbWlzZXMgZmlicmUgdG8gbW9zdCBvZiBMb25kb24gYnkgMjAxMSAgIFBpY3R1cmVzLiBSZWFkIE1vcmUuIApTb21ldGltZXMgdGhleSB3aWxsIHNheSwgIldob29wcywgb3VyIGJhZCwgc2hvdWxkIGhhdmUgYmVlbiAkMSwwMDAuIiBPdGhlciB0aW1lcyB0aGV5IHdpbGwgdGVsbCB5b3UgdG8gZ2V0IGJlbnQuIApMZSBzY2llbnRpZmlxdWUgZW4gY2hlZiBkZSBsJ0luc3RpdHV0IEN1cnRpcyBDYWxkd2VsbCBhZmZpcm1lIHF1ZSBsYSBsb2kgZGV2cmFpdCB0cmUgbW9kaWZpZSBwb3VyIHBlcm1ldHRyZSBhdXggcGF0aWVudHMgZGUgY2hvaXNpciBsZSB0cmFpdGVtZW50IGxlIHBsdXMgZWZmaWNhY2UgcG91ciB0cmFpdGVyIGxldXIgY29uZGl0aW9uIHNhbnMgcG90ZW50aWVsbGVtZW50IGVtcGNoZXIgbGEgcmFsaXNhdGlvbiBkZSBsZXVycyBkZXJuaXJlcyB2b2xvbnRzLgpDbG9zZXIgdG8gdGhlIGNvYWNoZXM/IElmIGhlIHRyaWVzIHRvIHRhbGsgdG8geW91LCB5b3UgY2FuIHN3aXRjaCBvbiB2b2ljZSBtZW1vIHRvIHJlY29yZC4gQW5kIGp1c3QgbG9vayB0aHJvdWdoIGhpbSBhbmQgZG9uJ3QgYW5zd2VyLiBBcyBpZiBoZSdzIGEgY3JhenkgZnJlbmNobWFuIGZyb20gYSBmb3JlaWduIHBsYW5ldC4uIApJd2FuIFBhd2xvdml0c2NoIE5ldW1pd2FraW4sIE1lbnNjaCBkZXMgSmFocmVzIDIwMDIuIApJIGtub3cgb2Ygc2V2ZXJhbCwgYnV0IEkgZG91YnQgdGhhdCBhbnlvbmUgaXMgZ29pbmcgdG8gbWVudGlvbiBhY3R1YWwgcmVjdXJyaW5nIHBva2VyIGdhbWVzIGhlcmUsIHNpbmNlIHRoZXkgYXJlIGlsbGVnYWwgYW5kIG5vYm9keSB3YW50cyB0aGVpciBnYW1lIGJ1c3RlZC4gSW5kaWFuYSBoYXMgbm8gc29jaWFsIGdhbWVzIGV4Y2VwdGlvbiB0byB0aGUgZ2FtYmxpbmcgbGF3cy4KUG9vbCB0YWJsZXMgdGFrZSB1cCBxdWl0ZSBhIGJpdCBvZiBzcGFjZS4gSWYgeW91IHdhbnQgdG8gcHVyY2hhc2UgYSBiaWxsaWFyZCB0YWJsZSwgdGhlbiB3aHkgbm90IGEgcG9vbCBkaW5pbmcgdGFibGUgdGhhdCBjYW4gZ28gcmlnaHQgaW50byB5b3VyIGRpbmluZyByb29tPyBFc3BlY2lhbGx5IGlmIHlvdSBkb24ndCBoYXZlIGEgYmFzZW1lbnQsIG9yIGEgcmVjIHJvb20sIHdoZXJlIGVsc2UgY2FuIHlvdSBwdXQgYSBiaWxsaWFyZCB0YWJsZT8gQ29udmVydGlibGUgcG9vbCBkaW5pbmcgdGFibGVzIGFyZSBtb3JlIGNvbnZlbmllbnQuIEJldHRlciB5ZXQsIG1vc3QgcG9vbCBkaW5pbmcgdGFibGVzIGNhbiBjb252ZXJ0IGludG8gcG9rZXIgdGFibGVzLiAKRmlyc3RseSwgaG9uLCBicmVhdGhlLiBBbmQgaHVncyBpZiB5b3Ugd2FudCB0aGVtLiAKV2UgcmVsaWVkIG9uIHRoZW0gdG8gbWFrZSBvciBicmVhayBvdXIgY2FyZWVycy4gV291bGQgdGhleSBnaXZlIHVzIGEgZmlnaHQgb24gdGhlaXIgY2FyZD8gV291bGQgdGhleSBwcm9tb3RlIHVzPyIgc2hlIGV4cGxhaW5zIGFzIGhlciB0b25lIHF1aWNrbHkgY2hhbmdlcyB0byBzZXJpb3VzLiAKSSBkb24gZXZlbiBmdWxseSB0cnVzdCB0aGVtLiBXaGF0IGlmIENhZXNhciBnbyBiYW5rcnVwdCBhZ2FpbiwgYnV0IHRoaXMgdGltZSBmb3IgZ29vZD8gQXJlIHRoZXkgcmVhbGx5IGdvbm5hIGhhdmUgbW9uZXkgdG8gcGF5IG91dD8gUHJvYmFibHksIGJ1dCBpdCBtaWdodCB0YWtlIHNvbWUgZWZmb3J0IG9uIG15IGVuZC4gCiJJdCdzIGp1c3Qgc2FkIEkgd29uJ3QgYmUgcGxheWluZyB3aXRoIG15IGVuc2VtYmxlIGFueW1vcmUuIiBXaGlsZSBzaGUsIGxpa2UgYWxsIEhTQyBzdHVkZW50cywgd29uJ3QgZmluZCBvdXQgaGVyIHJlc3VsdHMgdW50aWwgRGVjZW1iZXIgMTcsIExpbGkgc2FpZCBzaGUgaGFzIG1peGVkIGZlZWxpbmdzIGFib3V0IGhlciBwZXJmb3JtYW5jZXMuIApBQ1IgdXNlcyBzdGFuZGFyZCBzaG9ydCBkZWNrIGhhbmQgcmFua2luZ3MsIHllYWguIFNvIDMgb2YgYSBraW5kID4gc3RyYWlnaHQgYW5kIGZsdXNoID4gZnVsbCBob3VzZS4gVHJpdG9uIHNlcmllcyAodGhlIGV2ZW50IE9QIGNsaXAgaXMgZnJvbSkgd2FzIHRoZSBmaXJzdCBncm91cCB0byBwbGF5IHN0cmFpZ2h0ID4gMyBvZiBhIGtpbmQgc28gdGhvc2UgaGFuZCByYW5rcyAoc3RyYWlnaHQgPiAzIG9mIGEga2luZCwgZmx1c2ggPiBmdWxsIGhvc2UpIGFyZSBjYWxsZWQgVHJpdG9uIGhhbmQgcmFua2luZ3MuIApJdCB3aWxsIGRlZmluaXRlbHkgaGVscCB0byBoYXZlIGEgZ29vZCB2aXN1YWwgbWVtb3J5LiAKWW91IHN0YXJ0IG9mZiBieSBtZW50aW9uaW5nIGhvdyBncmVhdCB0aGUgZW1wbG95ZWUgaXMgdG8gd29yayB3aXRoLCBhbmQgbm90ZSBvbmUgb3IgdHdvIGFkZGl0aW9uYWwgdGhpbmdzIHRoZXkndmUgZXhjZWxsZWQgYXQuIApJIGFtIG5vdCBnb25uYSBhcmd1ZSBhYm91dCB2ZXJzYXRpbGl0eSBvciBhcHAgc2VsZWN0aW9uIHNpbmNlIGlPUyBhbmQgQW5kcm9pZCBhcmUgZGVmaW5pdGVseSBzdXBlcmlvciwgYW5kIEFwcGxlIGNhbWVyYXMgYXJlIGxpZ2h0bmluZyBmYXN0IGFuZCBwZXJmZWN0IGZvciBwb2ludCBhbmQgc2hvb3QsIGJ1dCBmb3IgInBob3RvZ3JhcGhlcnMiIGEgTHVtaWEgZGV2aWNlIHJ1bm5pbmcgV2luZG93cyBQaG9uZSBpcyBtdWNoIG11Y2ggYmV0dGVyLi4gCkJyaW5nIHlvdXIgaWRlYSB0byBDaGluYSwgZGV2ZWxvcCBpdCwgYnVpbGQgaXQsIGtlZXAgeW91ciBJUCwga2VlcCB5b3VyIHByb2ZpdHMsIGdldCBwYWlkIGJvbnVzZXMgaWYgeW91IG1lZXQgdGhlc2Ugc3VjY2VzcyBjcml0ZXJpYS4gSSB0cmlwbGUgY2hlY2tlZCBvbiB0aG9zZSBsYXN0IHR3by4gCkEgc291cmNlIGNvbmZpcm1lZCBUdWVzZGF5IHRoYXQgdGhlIE1MUyB0ZWFtIGhhcyByZWFjaGVkIGFuIGFncmVlbWVudCBpbiBwcmluY2lwbGUgdG8gYWNxdWlyZSBTcGFuaXNoIGF0dGFja2luZyBtaWRmaWVsZGVyIEFsZWphbmRybyBQb3p1ZWxvIGZyb20gQmVsZ2lhbiBsZWFndWUgbGVhZGVyIEtSQyBHZW5rLgpJIGRvIHVuZGVyc3RhbmQgdGhvdWdoIEkgaGF2ZSBhIHdpbmUgY2VsbGFyIGFuZCB3aGVuIEkgcXVpdCBkcmlua2luZyBJIGFza2VkIG15IGh1c2JhbmQgdG8gY2hhbmdlIHRoZSBsb2NrcyBhbmQga2VlcCB0aGUga2V5LiAKVGhlIE9BQSBpcywgYWNjb3JkaW5nIHRvIEdvb2dsZSwgImEgZ2xvYmFsIGFsbGlhbmNlIG9mIHRlY2hub2xvZ3kgYW5kIGF1dG8gaW5kdXN0cnkgbGVhZGVycyBjb21taXR0ZWQgdG8gYnJpbmdpbmcgdGhlIEFuZHJvaWQgcGxhdGZvcm0gdG8gY2FycyBzdGFydGluZyBpbiAyMDE0LiIgQWx0aG91Z2ggR29vZ2xlIGRvZXNuJ3Qgc3BlY2lmaWNhbGx5IGZyYW1lIHRoZSBzaXR1YXRpb24gYXMgYSBtYXR0ZXIgb2YgY29tcGV0aXRpb24gb3IgY29uZmxpY3QsIG9yIGV2ZW4gYWRkcmVzcyBpdHMgcml2YWxzIGJ5IG5hbWUsIGl0J3MgY2xlYXIgdGhhdCBnYWluaW5nIG1hcmtldCBzaGFyZSB3b3VsZCBiZSBhIGJlbmVmaXQgb2YgdGhlIE9BQSdzIHN1Y2Nlc3MuIFRoaXMgbWVhbnMgdGhhdCBldmVuIGlmIEFwcGxlIGhhcyBhIGxlYWQgb24gdmVoaWNsZSBpbnRlZ3JhdGlvbiwgR29vZ2xlIGFuZCBBbmRyb2lkIGFyZSBwbGFubmluZyB0byBmaWdodCBiYWNrLCBhbmQgdGhleSBhbHJlYWR5IGhhdmUgYSBncm91cCBvZiBhdXRvIG1hbnVmYWN0dXJlcnMgd2hvIHdhbnQgdG8gdXNlIHRoZWlyIGlubm92YXRpb25zIGluIG5ldyBjYXIgbW9kZWxzLiBUaGUgZmlyc3QgbWVtYmVycyB0byBqb2luIEdvb2dsZSBpbiB0aGUgT0FBIHdlcmUgYXV0byBtYW51ZmFjdHVyZXJzIEF1ZGksIEdlbmVyYWwgTW90b3JzLCBIb25kYSBhbmQgSHl1bmRhaSwgYW5kIHRoZSBjb21wdXRlciBjaGlwIG1ha2VyIE5WSURJQS4gQnV0IHRoZSBiYXR0bGUgaXNuJ3QgZW50aXJlbHkgYWJvdXQgd2lyZWxlc3MgZGV2aWNlcyBhbnltb3JlLiBHb29nbGUgaXNuJ3QgY29udGVudCB3aXRoIHNpbXBseSBzeW5jaW5nIHNtYXJ0cGhvbmVzICAgdGhlIGNvbXBhbnkgd2FudHMgdG8gZ2V0IGl0cyB0ZWNobm9sb2d5IG11Y2ggZGVlcGVyIGludG8gdGhlIGNhci4KVGhlIGNpdHkgb2YgT21haGEgaGFzIGEgYm9vbWluZyBlY29ub215IGFuZCBpdCBpcyB0aHVzIG9mIGxpdHRsZSB3b25kZXIgdGhhdCBpdCBpcyBVU0EgNDB0aCBtb3N0IHBvcHVsb3VzIGNpdHkgYW5kIGhvbWUgdG8gbWlsbGlvbnMgb2YgcGVvcGxlLiAKQ2FzY2lhdG8gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCk92ZXJ2aWV3IGZvciBhcnVua3VtYXI5dDIKV2VlZ2FyLCB3aG8gaGFkIG9uZSBnb2FsIGluIDQ5IGdhbWVzIHRoaXMgc2Vhc29uLCBzY29yZWQgdHdvIGluIGEgc3BhbiBvZiAxOjQwLgpUaGVuICQyNTAgZm9yIGFueSBmdXJ0aGVyIHRlc3RzLiAKTG9jYWwgc3VwcG9ydCBsaWtlIHRoZSBBcnQgV2FsaywgR1JPVyBMb2NhbCBTb3V0aCBUZXhhcywgQ0MgQmxpc3MgQm94LCBEb3dudG93biBGYXJtZXJzIE1hcmtldCwgZXRjLiBZb3UgdGFsayBhYm91dCBkb3dudG93biB3ZSBqdXN0IGhhZCBDb3JwdXMgQ2hyaXN0aSBEaW5lIERvd250b3duLCBwcm9tb3RpbmcgZWF0aW5nIGF0IGxvY2FsIHJlc3RhdXJhbnRzIGluIG91ciBkb3dudG93biBhcmVhLiBIZXJlIGlzIGEgbGlzdCBvZiBzb21lIG9mIHRoZSB1cGNvbWluZyB0aGluZ3MgZm9yIGRvd250b3duIGFzIHdlbGwuCkxldCBpdCBnZXQgbmljZSBhbmQgY3Jpc3B5ISBBdCB0aGlzIHRpbWUsIGFsc28gbGF5IG91dCB5b3VyIGNhcnJvdHMgb24gYSBiYWtpbmcgc2hlZXQsIHNwcmF5IHdpdGgganVzdCBhIGJpdCBvZiBvaWwsIHNlYXNvbiB3aXRoIHNhbHQsIGFuZCBwdXQgaW4gdGhlIG92ZW4gdW50aWwgc29mdCAobGlrZSAzMCBtaW4/KS4uIApJIHN1cmUgYSBsb3Qgb2YgZmF0aGVycyB0aHJvdWdob3V0IHRpbWUgaGF2ZSB0aG91Z2h0IHRoaXMgc28gSSBrbm93IGl0IHByb2JhYmx5IGFpbiByZWFsLCBidXQgZGFtbmVkIGlmIGl0IGRvZXNuIHNlZW0gbGlrZSB0aGlzIGxhdGVzdCBnZW5lcmF0aW9uIGlzIGNvbWluZyBvdXQgc29mdCBhbmQgY29kZGxlZCBhcyBzaGl0LiBJIGhlYXJkIGEgYm95IHRlbGwgaGlzIGZyaWVuZCAiSSBuZWVkIGEgZ29vZCBjcnkiIGF0IHRoZSBwYXJrLiBXaGF0IHRoZSBmdWNrIGlzIHRoYXQ/ISBJZiBJIGxldCBteSBraWQgYmUgdGhhdCBraWQgaGUgZ2V0IGZ1Y2tpbiBlYXRlbiBBTElWRSBpbiB0aGUgcmVhbCB3b3JsZCEgQnV0IHRoZW4gbXkgd2lmZSBzdGFydHMgdGFsa2luZyBhYm91dCAidG94aWMgbWFzY3VsaW5pdHkiIGFuZCBpdCBsaWtlLiAKVGhlcmUgYSBsaW5lIHRvIHRoaXMsIGhvd2V2ZXIsIHNpbmNlIHdlIGRvbiBnZXQgcmVkb3MgZm9yIG1hbnkgdGhpbmdzIGluIGxpZmUuIApNZWdhIFR5cGhvbiB3b3VsZCBiZSBnb29kLCBlc3BlY2lhbGx5IGlmIHVzaW5nIG1hbnkgZHJhZ29uIHN1YnMuIApIb3cgd2FzIHRoYXQgcG9zc2libGU/IEFkbWl0dGVkbHksIExhbmUgaGFzIGJyb2FkIHNob3VsZGVycyBhbmQgYSBzdG9ja3kgYnVpbGQuIFN0dWR5aW5nIGhlciBpbiBjb3VydCBhcyBEZXRlY3RpdmUgU2VuaW9yIENvbnN0YWJsZSBSaWNoYXJkIEdhdXQgZGV0YWlscyBoaXMgcGFpbnN0YWtpbmcgZWZmb3J0cyB0byB0cmFjayBkb3duIFRlZ2FuLCBJIGNhbiBpbWFnaW5lIHNoZSBtaWdodCBjYXJyeSBhIHByZWduYW5jeSB0byBmaXZlIG9yIGV2ZW4gc2l4IG1vbnRocyBiZWZvcmUgaXQgd2FzIG9idmlvdXMuIEJ1dCBuaW5lIG1vbnRocz8gUXVpdGUgYXBhcnQgZnJvbSB0aGUgZGlmZmljdWx0eSBvZiBkaXNndWlzaW5nIGEgc3dvbGxlbiBiZWxseSwgaXQgaXMgaGFyZCB0byBiZWxpZXZlIHNoZSBjb3VsZCBoYXZlIGhhZCB0aHJlZSBiYWJpZXMgaW4gZml2ZSB5ZWFycyB3aXRob3V0IHRlbGxpbmcgYW55b25lICAgbm90IGhlciBiZXN0IGZyaWVuZCwgaGVyIG1vdGhlciwgb3IgdGhlIGZvb3RiYWxsZXIgd2hvIGxvdmVkIGhlci4gClNvIG15IGxpdHRsZSBwcm9qZWN0IHRoYXQgc2hvdWxkIGhhdmUgdGFrZW4gYWJvdXQgMiBob3VycyBhbmQgJDIwPyBZZWFoLCBsaWtlIDUgd2Vla3MgYW5kICQ4MC4gQnV0IG5vdyBJIGRvbiBoYXZlIG5hc3R5IHBpcGUgd2F0ZXIgYmF0aCBiYWNrd2FzaCBhbmQgdGhhdCBpcyBuaWNlLiAKSSBkb24ndCBnZXQgaXQuIFdlIGVsZWN0ZWQgdGhlbSB0byBmaWdodCBmb3IgdXMuIApFZGdlZmllbGQgRm94IExha2UgTmV3IEplcnNleSBTYW4gUmFtb24gVW5hbGFza2EgSmFja3NvbiBCYWxkd2luIFdlc3QgSW1wZXJpYWwgRWxmcmlkYSBBaXJ3YXkgSGVpZ2h0cyBBdmVuYWwgQm9uaXRhIEtsb25keWtlIERhbm5lbW9yYSBDbGlmdG9uIFN1c2FudmlsbGUgU3dpZnQgVHJhaWwgLgpUaGVyZSBpcyBubyBtYWdpY2FsICJEbyB0aGlzIiBhbnN3ZXIgdG8gbWFnaWNhbGx5IGdldCBiZXR0ZXIgYXQgcG9rZXIuIApJIGhhZCB0aGUgb3Bwb3J0dW5pdHkgdG8gc3BhcmUgd2l0aCB0aGUgc2FtZSBndXkgSSBzcGFycmVkIHdpdGggdGhlIGZpcnN0IHRpbWUgYWZ0ZXIgYWJvdXQgMiBtb250aHMgYW5kIEkgd2FzIGF0IGEgcG9pbnQgd2VyZSBJIGhhZCB0byBicmluZyBkb3duIG15IHNwZWVkIGFuZCBwb3dlciBzbyBhcyBub3QgdG8gaHVydCBoaW0uIEkgY291bGQgc2VlIG1vc3Qgb2YgdGhlIHB1bmNoZWQgdGhhdCBoZSB0aHJldy4gCk5laXRoZXIgdGhvc2Ugc2tpbGxzIG5vciBiYWtpbmcsIGpld2VscnkgbWFraW5nLCBvciBzaW5naW5nIGhhdmUgYW55IHBsYWNlIGJlaW5nIGdlbmRlcmVkIGFjdGl2aXRpZXMgdGhlc2UgZGF5cy4gClNvbWUgYmFzaWMgc3RhcnRpbmcgaGFuZCBjb25kaXRpb25zLiAKU29tZSBtZW1iZXJzIG9mIHRoZSBzcGVjaWVzIHN0YXkgY2xvc2UgdG8gd2hlcmUgdGhleSBoYXRjaGVkLCBzdWNoIGFzIGluIHRoZSBVSywgd2hpbGUgb3RoZXJzIG1pZ3JhdGUgbG9uZyBkaXN0YW5jZXMgZnJvbSB0aGUgc3RlcHBlcyBvZiBSdXNzaWEgdG8gdGhlIGdyYXNzbGFuZHMgb2YgU291dGggQWZyaWNhLi4gCkxhc3QgeWVhciwgaXQgd2FzIGdpdmVuIHRvIHVzIGFzIGEgQ2hyaXN0bWFzIHByZXNlbnQgZnJvbSBvdXIgYmVzdCBmcmllbmRzIHdobyBjb21lIG92ZXIgYWxsIHRoZSB0aW1lLiAKQW0gMy4gCkFsbCBvZiB0aGlzIGRvZXMgd29yayB0byBzdXBwb3J0IHlvdXIgZmluYWwgcG9pbnQsIHRob3VnaCEgTnVsbCBwb3NpdGlvbiBhcyBhbiBpbXBvcnRhbnQgY29udHJvbCBmbG93IHRvb2wgaW4gSmF2YSBwcm9iYWJseSB3b3VsZCBoYXZlIG5ldmVyIGhhcHBlbmVkIGlmIEphdmEgc3VwcG9ydGVkIHN1bSB0eXBlcyBpbiBhIG5pY2Ugd2F5LgpXaHJlbmQgamVkZXIgU2V0enJ1bmRlIGRhcmYgbWFuIHNvIG9mdCBlcmhoZW4sIHdpZSBtYW4gd2lsbCBpbiBlaW5lbSBDYXNpbm8uCkkgYWN0dWFsbHkgaGFkIG1vbmV5IHNhdmVkIHVwIHRoYXQgaGUgd2FzIHVuYWJsZSB0byBhY2Nlc3MgYW5kIEkgY291bGQgaGlyZSBhIGxhd3llci4gCkFsc28sIHRoaXMgbGlzdCB1c2VzIHRoZSB0ZXJtICJpVHVuZXMiIHRvIHJlcHJlc2VudGRpZ2l0YWwgc3RvcmVzLiAKT3IgZXZlbiBmZWVsaW5nIHRoZSBuZWVkIHRvLiBJIGFsd2F5cyB3b25kZXJlZCBob3cgc2hlIHdvdWxkIGZlZWwgaWYgc2hlIGZvdW5kIG91dCBhZnRlciBhbGwgdGhvc2UgeWVhcnMgb2YgYmVpbmcgbGllZCB0byAoYmVjYXVzZSB5ZXMsIGx5aW5nIGJ5IG9taXNzaW9uIGlzIHN0aWxsIGx5aW5nKS4uIApMb2wgdGhhdCByZW1pbmRzIG1lIG9mIGEgY291cGxlIHllYXJzIGFnby4gVGhlIG1hcmNoaW5nIGJhbmQgSSB3YXMgaW4gaW4gaGlnaCBzY2hvb2wgZ29lcyB0byBJbmRpYW5hcG9saXMgdG8gY29tcGV0ZSBpbiBiYW5kcyBvZiBBbWVyaWNhIGdyYW5kIG5hdGlvbmFscyBhbmQgd2UgcmVudGVkIDIgb3V0IG9mIDQgZmxvb3JzIGluIGEgaG90ZWwuIFRoaXMgb25lIGdpcmwgbWljcm93YXZlZCBNYWMgYW5kIGNoZWVzZSB3aXRob3V0IHRoZSB3YXRlciBhbmQgaXQgc2V0IG9mZiBhbGwgb2YgdGhlIGZpcmUgYWxhcm1zLCBmaWxsZWQgdGhlIHRvcCAyIGZsb29ycyB3aXRoIHNtb2tlIGFuZCB0aGUgc21lbGwgd2FzIGdvZCBhd2Z1bC4gV2UsIGFsb25nIHdpdGggYWxsIG9mIHRoZSByZWd1bGFyIGd1ZXN0cyBhbmQgYWxsIHRoZSBzdGFmZiwgaGFkIHRvIGV2YWN1YXRlIHRoZSBob3RlbCBhbmQgc3RhbmQgb3V0IGluIHRoZSBmcmVlemluZyBjb2xkIHVudGlsIGl0IHdhcyBkZWVtZWQgc2FmZSB0byByZXR1cm4oNDUgbWludXRlcykuIEkgZmVlbCBiYWQgZm9yIGhlci4gU2hlIGdvdCBzbyBtdWNoIHNoaXQgZnJvbSBldmVyeW9uZSBhZnRlciB0aGF0LgpUb3duIFRleGFzIFBhc3RvciBEYXlzIEFmdGVyIENodXJjaCBNYXNzYWNyZQpXaG8gdG9vayB0aGUgbW9uZXk/IFRoZSBEZXBhcnRtZW50IG9mIEp1c3RpY2Ugc2F5cyBpdCB3YXMgdGhlIFByb2Zlc3NvciBhbmQgSmVzdXMsIGFtb25nIG90aGVycy4gVGhvc2UgYXJlIHRoZSBuaWNrbmFtZXMgb2YgSG93YXJkIExlZGVyZXIgYW5kIENocmlzIEZlcmd1c29uLCByZXNwZWN0aXZlbHkuIFRoZXkgYm90aCBwcm9taW5lbnQgcG9rZXIgcHJvcyB3aG8sIGl0IHNlZW1zLCBwdXJzdWVkIGFuIGV4cGVkaWVudCBtZWFucyBvZiBncmFiYmluZyBwaWxlcyBvZiBtb25leSB0aGF0IGRpZG4gaW52b2x2ZSBwbGF5aW5nIGNhcmRzIG9yIHJlbHlpbmcgb24gbGFkeSBsdWNrLiAKVGhlIGdheSBjb21tdW5pdHkgaW4gTW9udGdvbWVyeSBDb3VudHkgaXMgInZvY2FsLiAKSSB0cmllZCB0byBnZXQgYXdheSB3aXRoIHJldXNpbmcgbXkgZXhpc3RpbmcgeHAgaW5zdGFsbCBidXQgYSBidW5jaCBvZiBkbGxzIHdlcmUgY29ycnVwdC4gClRoZSBpZGVhIGlzIHRoYXQgYnkgYWxsb3dpbmcgbWlzdGFrZXMgaW4gcmVwbGljYXRpb24sIHRoZXJlIHdpbGwgYmUgYSBwb3B1bGF0aW9uIG9mIGNlbGxzIHRoYXQgZGV2ZWxvcCBtdXRhdGlvbnMgdGhhdCBtYWtlIHRoZW0gYmV0dGVyIHN1aXRlZCBmb3IgdGhpcyBzdHJlc3NmdWwgZW52aXJvbm1lbnQuIApZb3UncmUgdGhlIG9uZSB0cmlnZ2VyZWQgYnkgc29tZSBkdWRlJ3MgU29BIGtleWNoYWluLiBUaGF0LCB0byBtZSwgc291bmRzIGxpa2UgdGhlIGxvd2VzdCBjb21tb24gZGVub21pbmF0b3Igb2YgYnV0dGh1cnQuIApGaW5kaW5nIGhpbXNlbGYgdGhydXN0IGludG8gdGhlIGNvdW50cnkncyBjb25mbGljdHMsIEFqYXkgbXVzdCBtYWtlIGNob2ljZXMgdGhhdCB3aWxsIHNoYXBlIGhpcyBmYXRlIGluIHRoZSBldmVyIGNoYW5naW5nIGxhbmRzY2FwZSBvZiBLeXJhdC4uIApUaGUgdW51c3VhbGx5IHNoYXJwIHJlbWFya3MgYnkgRm9yZWlnbiBNaW5pc3RlciBXYW5nIFlpIHJlcHJlc2VudGVkIHRoZSBmaXJzdCB0aW1lIHRoZSBDaGluZXNlIGdvdmVybm1lbnQgYWRkcmVzc2VkIGEgbGF3c3VpdCBmaWxlZCB0aGlzIHdlZWsgYnkgdGhlIHRlY2hub2xvZ3kgZ2lhbnQsIHdoaWNoIGlzIGFyZ3VpbmcgaW4gY291cnQgdGhhdCBpdCBvcGVyYXRlcyBpbmRlcGVuZGVudGx5IG9mIEJlaWppbmcgYW5kIGhhcyBiZWVuIHVuZmFpcmx5IHN0aWdtYXRpemVkIGJ5IGNvbmdyZXNzaW9uYWwgbGF3bWFrZXJzIHdobyBjbGFpbSBpdCBwb3NlcyBhbiBlc3Bpb25hZ2UgdGhyZWF0IHRvIHRoZSBVbml0ZWQgU3RhdGVzLiBhY3Rpb25zIGFnYWluc3QgSHVhd2VpIGFuZCBpdHMgZXhlY3V0aXZlcyBhcyAiYnkgbm8gbWVhbnMgYSBwdXJlIGp1ZGljaWFsIGNhc2UsIGJ1dCBhIGRlbGliZXJhdGUgcG9saXRpY2FsIG1vdmUgdG8gYnJpbmcgdGhlbSBkb3duIiBhbmQgcGxlZGdlZCBCZWlqaW5nJ3Mgc3VwcG9ydC4KUHJvcGVydGllcyByYW5rZWQgdXNpbmcgZXhjbHVzaXZlIFRyaXBBZHZpc29yIGRhdGEsIGluY2x1ZGluZyB0cmF2ZWxlciByYXRpbmdzLCBjb25maXJtZWQgYXZhaWxhYmlsaXR5IGZyb20gb3VyIHBhcnRuZXJzLCBwcmljZXMsIGJvb2tpbmcgcG9wdWxhcml0eSwgbG9jYXRpb24gYW5kIHBlcnNvbmFsIHVzZXIgcHJlZmVyZW5jZXMuCkl0J3MgZGlmZmljdWx0IGluIEVuZ2xpc2ggb25seSBiZWNhdXNlIEVuZ2xpc2ggaGFzIGNvbXBsaWNhdGVkIHZvd2VsIHN0cnVjdHVyZXMuIApMYXN0bHksIGlmIGhlIHBsYW5uZWQgb24ga2lsbGluZyBTYWFkaWEsIGl0IG1ha2VzIG5vIHNlbnNlIHRvIGxpZSBhYm91dCBpdC4gCllvdXIgcGFydG5lciBzaG91bGQgYmUgU08gRVhDSVRFRCB0byBzZWUgYWdhaW4gYW5kIGV4cGxvcmUgbW9yZSBvZiB3aG8geW91IGFyZSBhbmQgd2hhdCBtYWtlcyB5b3UgdGljay4uIApRdWVzdGlvbnMgcmVnYXJkaW5nIHdoZXRoZXIgb3Igbm90IHlvdSBjb21lIG9mZiBhcyBjcmVlcHkgc2hvdWxkIGJlIGRpcmVjdGVkIHRvIC9yL3JlbGF0aW9uc2hpcHMuLiAKV2hlcmVhcyBDaGluYSB0cmFuc2dyZXNzaW9ucyBtb3N0bHkgYW1vdW50IHRvIGJlaW5nIHNvbWV3aGF0IG9mIGEgbnVpc2FuY2UgZm9yIHNvbWUgb2YgaXRzIGNsb3Nlc3QgbmVpZ2hib3JzLCB3aGljaCBjb2xsZWN0aXZlbHkgbWFrZSBmb3IgYW4gZWZmZWN0aXZlIGVub3VnaCBjb3VudGVyIHdlaWdodCBhZ2FpbnN0IGl0LgpTdHUgVW5nYXIgaXMgZ2VuZXJhbGx5IGJyb3VnaHQgdXAgYXMgdGhlIGhhdmluZyB0aGUgbW9zdCAicHVyZSB0YWxlbnQiIGV2ZXIuIEhlIHdvbiBiYWNrIHRvIGJhY2sgV1NPUCB0aXRsZXMgaW4gMTk4MCBhbmQgMTk4MS4gSGUgaGFkIGEgbG9uZ3RpbWUgYWRkaWN0aW9uIHdpdGggZHJ1Z3MuIApJZiB5b3UgYXJlIHN1ZmZlcmluZyBmcm9tOiBTcG9ydHMgSW5qdXJpZXMsIFNwcmFpbnMsIFN0cmFpbnMsIENhciBhY2NpZGVudCwgSGVybmlhdGVkIERpc2MsIERpc2MgQnVsZ2UsIERlZ2VuZXJhdGl2ZSBEaXNjIERpc2Vhc2UsIE5lY2sgcGFpbiwgSGVhZGFjaGVzLCBMb3cgYmFjayBwYWluLCBvZiBqdXN0IHdhbnQgdG8gZmVlbCBiZXR0ZXIgYW5kIGhhdmUgYmV0dGVyIGxpZmUgcGVyZm9ybWFuY2UgIHBsZWFzZSBjYWxsIG91ciBvZmZpY2UgYXQgKDk0OSkgODU3LjE4ODggYmVnaW5fb2ZfdGhlX3NreXBlX2hpZ2hsaWdodGluZyg5NDkpIDg1Ny4xODg4ZW5kX29mX3RoZV9za3lwZV9oaWdobGlnaHRpbmcgb3IgdmlzaXQgb3VyIHdlYnNpdGUgYXQgQURKVVNUMklUIHRvIGxlYXJuIG1vcmUgYWJvdXQgRnVuY3Rpb25hbCBGaXRuZXNzIENoaXJvcHJhY3RpYywgU3BvcnRzIG1hc3NhZ2UsIE15b2Zhc2NpYWwgUmVsZWFzZSwgQ29ycmVjdGl2ZSBFeGVyY2lzZSwgTm9uIFN1cmdpY2FsIFNwaW5hbCBEZWNvbXByZXNzaW9uLCBDbGFzcyBJViBsYXNlciwgRnVuY3Rpb25hbCBFbmRvY3Jpbm9sb2d5IGFuZCBGdW5jdGlvbmFsIE51dHJpdGlvbi4KV2hpbGUgYnV5aW5nIHNwZWN1bGF0aXZlIGFzc2V0cyBjYW4gaGF2ZSBzb21lIHZhbHVlIGFuZCBjYW4gYmVuZWZpdCBwZW9wbGUsIGl0IGVzc2VudGlhbGx5IGdhbWJsaW5nLCBhbmQgc2hvdWxkbiBiZSB5b3VyIHByaW9yaXR5LiBZb3Ugc2hvdWxkIGFscmVhZHkgYmUgb24gb24gdHJhY2sgd2l0aCByZXRpcmVtZW50IHNhdmluZ3MgYmVmb3JlIGRvaW5nIHRoYXQsIGFuZCBzaG91bGQgb25seSByZWFsbHkgcHV0IDUlIG9mIHlvdXIgbmV0IHdvcnRoIG1heGltdW0gaW50byBzcGVjdWxhdGl2ZSBhc3NldHMuCkJ1dCBpZiBJIGhhZCB0byBndWVzcywgSSBiZXQgZGlzY29yZCB3b24gc29tZXdoZXJlIGluIHRoZSBiYWxscGFyayBvZiAxMDAgMjAwayBpbiB0aGUgcGFzdCA1IG1vbnRocy4gClJlYWxseSwgd2hvIGNhcmVzIGlmIHRoZXkgZ2V0IGthcm1hIGxldCB0aGVtIGhhdmUgaXQuIFNlY29uZCBJIG5vdCByYWdnaW5nIG9uIEVjY2hpTWFzdGVyIGZvciBoaXMgaW5pdGlhbCBjb21tZW50IGJ1dCBoaXMgcmVwbGllcyB0byBvdGhlciBwZW9wbGUuCkRyLiBKZWZmcmV5IFdpbm5pY2tpIHN0YXJ0ZWQgVGhlIERlbnRhbCBTaG9wcGUgaW4gTWF5IG9mIDIwMDYuIAooSW50ZXJtZGUgcGVyc29ubmVsIDogbG9yc3F1ZSBqZSByZW5jb250cmFpIEplYW4gQ2hhcGVsbGUsIGFubmUgMTk2NiwgY2VsdWkgY2kgdm91bHV0ICB0b3V0IHByaXggbSdlbmZvbmNlciBkYW5zIGxhIHR0ZSBsJ2lkZSBzZWxvbiBsYXF1ZWxsZSBsYSBCRCBkZXZhaXQgcmVzdGVyIGNvbmZpbmUgIHVuIHB1YmxpYyBkJ2dlIHNjb2xhaXJlLiAKVGhlIGhpc3Rvcnkgb2YgYSBzb2Z0IHRpc3N1ZSB0cmVhdG1lbnQgdGhhdCBoYXMgcmV2b2x1dGlvbml6ZWQgaGVhbHRoIGNhcmUKQnV0IHNlcmlvdXNseSwganVzdCBsZXQgbWUgY2FtcC4gSSBhbSBoYXBwaWVyIHNsZWVwaW5nIGluIG15IHRlbnQgdGhhbiBpbiBhIGNhYmluIHdpdGggYSBidW5jaCBvZiBzdHJhbmdlcnMsIHNvIGl0IG5vdCBkb2luZyBtZSBhIGZhdm9yIHRvIGNoYXJnZSBtZSBleHRyYSBiZWNhdXNlIHlvdSBmb3JjaW5nIG1lIHRvIHNsZWVwIGluIGEgY2FiaW4uCk15IGRhZCBldmVudHVhbGx5IGhhZCBoZXIgY29tbWl0dGVkIHRvIHRoZSBzdGF0ZSBob3NwaXRhbCwgYW5kIGFmdGVyIHNoZSB3YXMgcmVsZWFzZWQgc2hlIHdhc24ndCB0YWtpbmcgaGVyIG1lZGljYXRpb24uIEhlIHVzZWQgdGhhdCBhcyBwcm9vZiBpbiB0aGUgZGl2b3JjZSBhbmQgY3VzdG9keSBjYXNlcyBhZ2FpbnN0IGhlci4gVGhlIGRpdm9yY2Ugd2Fzbid0IGZpbmFsaXplZCB1bnRpbCAyMDAzIG9yIDIwMDQuCkJ1aWxkaW5nIHJvdXRpbmVzIGFyb3VuZCBoZXIgdGhyZWUgdG9wIHRvb2xzIGJhbmRzLCBhIHN0ZXAgYW5kIGEgYm9zdSBiYWxsIGRvIGEgbG90IG9mIHNxdWF0IGFuZCBsdW5nZSB2YXJpYXRpb25zLCIgTGVlIHRlbGxzIEUhIE5ld3MuICJXZSBkbyBhIGxvdCBvZiBzaWRlIHdhbGtpbmcgc3F1YXRzIHdpdGggdGhlIHJlc2lzdGFuY2UgYmFuZCwgd2UgZG8gYSBsb3Qgb2Ygc3RlcCB1cCBjb21iaW5hdGlvbnMgd2l0aCB0aGUgc3RlcHMsIHdlIGRvIGEgbG90IG9mIGp1bXBpbmcgc3F1YXQgY29tYmluYXRpb25zIHdpdGggdGhlIEJvc3UgYmFsbC4gV2UgZG8gYSBsb3Qgb2YgbGVnIGxpZnQgZG9ua2V5IGtpY2tzIGEgbGl0dGxlIGJpdCBvZiBldmVyeXRoaW5nLiIuIApBbmQgdGhpcyBpcyB0aGUgbGVhc3QgaGUgY2FuIGRvLiAKUmVzdHJhaW5lZEdvbGQgIDEgcG9pbnQgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCllvdSBhbHNvIGhhdmUgaW1wbGllZCBvZGRzLiBUaGF0IGlzIHRvIG1lIGEgYmV0dGVyIHdheSBvZiBjYWxjdWxhdGluZyBpdC4gTGV0IHNheSB5b3UgZmxvcCBhIGZsdXNoIGRyYXcgYW5kIHlvdSB0aGluayB5b3VyIG9wcG9uZW50IGhhcyBhbiBvdmVyIHBhaXIgdG8gdGhlIGJvYXJkLiAKVGhlIEdyYW50IFN0dWR5LCBhcyBpdCBiZWNhbWUga25vd24sIGNvbnRpbnVlcyB0b2RheSBhZnRlciA3MiB5ZWFycy4gCkluR2VuTmF0ZUtlbm55IHUKSXQgYWxzbyBzaGluZXMgYSBzcG90bGlnaHQgb24gVGliaSAgIGFuIGFmZmFibGUsIG1lZGlhIHNhdnZ5IHBvbGl0aWNhbCB2ZXRlcmFuIHdobyBzcGVha3MgZmx1ZW50IEhlYnJldy4gVGliaSBpcyBrbm93biBmb3IgaGlzIGhhcnNoIGNyaXRpY2lzbSBvZiBnb3Zlcm5tZW50IHBvbGljaWVzIHRvd2FyZCB0aGUgY291bnRyeSdzIEFyYWIgY2l0aXplbnMgYW5kIHRvd2FyZCBQYWxlc3RpbmlhbnMgd2hvIGxpdmUgdW5kZXIgSXNyYWVsaSBjb250cm9sIGluIHRlcnJpdG9yaWVzIElzcmFlbCBjYXB0dXJlZCBpbiAxOTY3LgpBbHNvIEkga2VlcCBvZiB3aXRoIERlZXAgTGVhcm5pbmcgYW5kIE1hY2hpbmUgTGVhcm5pbmcgaW4gZ2VuZXJhbCBmb3IgcHJvZmVzc2lvbmFsIHJlYXNvbnMuVGhhdCBzYWlkLCB0aGUgdGVjaG5pcXVlcyB3ZSBpbnRyb2R1Y2UgYXJlIG5vdCBpbmNvbXBhdGlibGUgd2l0aCBkZWVwIGxlYXJuaW5nLiBJIGRlc2NyaWJlIHRoZW0gbW9yZSBhcyBhbiBhbHRlcm5hdGl2ZSB0byBNQ1RTLiAKTWFpcyByaWVuIG4gZGl0IHN1ciBsIGRlIGNldHRlIHBsYW50ZSAgbGEgc3BocmUgZ3luY29sb2dpcXVlLCBjZSBxdWkgbiBwYXMgbGUgY2FzIGRhbnMgbCBkZSBEaW9zY29yaWRlLiBBdSB0cm9pc2ltZSBsaXZyZSBkZSBsYSBNYXRlcmlhIG1lZGljYSwgY2hhcGl0cmUgMTMyLCBvbiBwZXV0IGxpcmUgbCBzdWl2YW50ZTogbGVzIGZsZXVycyBzb250IHZhbGV1cmV1c2VzIFtdIGF1eCBpbmZsYW1tYXRpb25zIGRlIGxhIG1hdHJpY2UuIApGb3IgdGhlIHBva2VyIGxvdmVycywgYmxhY2tqYWNrIGNvbGxlY3Rpb24gaXMgdGhlIG1vc3QgbmVjZXNzYXJ5IHRoaW5nIHRvIGJ1aWxkIHlvdXIgb3duIGxpdHRsZSBjYXNpbm8gYXQgaG9tZS4gClNpbmNlIGl0IGlzIGEgY29tbW9uICB0aGVtZSwgaXQgaXMgb2Z0ZW4gZGVwaWN0ZWQgd2l0aCBvdGhlciAgc3ltYm9scyBhbmQgZWxlbWVudHMuIApTZXZlbiB5ZWFycyBvZiBoZXIgcGxlYWRpbmcgd2l0aCBtZSB0byBzdG9wIHRoZW0gb3IgcHV0IGFuIGVuZCB0byBpdCBidXQgSSBjb3VsZCBuZXZlciBicmluZyBteXNlbGYgdG8uIApTbyBmYXIgYXMgaGlzIHBlcmZvcm1hbmNlIGFuZCBlYXJuaW5ncyBpbiB0aGUgZ2FtZSBvZiBwb2tlciBpcyBjb25jZXJuZWQsIHRoZSB0b3RhbCBsaXZlIHRvdXJuYW1lbnQgdmljdG9yaWVzIG9mIE1hcmNlbCBhbW91bnRzIG1vcmUgdGhhbiAzLjQgbWlsbGlvbiBVUyBkb2xsYXJzLiBNYXJjZWwgTHVza2UgaXMgYWxzbyBmYW1vdXMgYXMgYSBtZW50b3IuIEhlIG1lbnRvcmVkIG5vdCBvbmx5IERhdmlkIFdpbGxpYW1zIHdobyB0dXJuZWQgdXAgYXMgdGhlIHJ1bm5lciB1cCBpbiB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGluIDIwMDQsIGJ1dCBhbHNvIEtpcmlsIEdlcmFzaW1vdiwgYSBwb2tlciBwcm9mZXNzaW9uYWwgZnJvbSBSdXNzaWEuIEtpcmlsIGVuZGVkIHVwIGJlaW5nIHRoZSBydW5uZXIgdXAgaW4gdGhlIHNlYXNvbiAxIGNoYW1waW9uc2hpcCBvZiB0aGUgV29ybGQgUG9rZXIgVG91ciBpbiB3aGljaCBNYXJjZWwgaGltc2VsZiBlbmRlZCB1cCBzZWN1cmluZyB0aGUgMTR0aCBwbGFjZS4gTWFyY2VsIGlzIGFsc28gYSBibGFjayBiZWx0IGluIGthcmF0ZS4KQW5kIE9wIHdpbGwgc3RpbGwgYmUgd2FpdGluZyBhcm91bmQgZm9yIGhpbSB0byAiY29tZSBiYWNrIi4gCkJleW9uY2Ugd2FudGVkIExhZHkgR2FnYSB0b2JlIGluIHRoZSBtdXNpYyB2aWRlbyBmb3IgVmlkZW8gUGhvbmUgc28gTGFkeSBHYWdhIGRlY2lkZWQgdGhhdCBzaGV3YW50ZWQgQmV5b25jZSBpbiBoZXIgbXVzaWMgdmlkZW8gZm9yIFRlbGVwaG9uZS4gSXQgYWxzbyBpbmNsdWRlc3doZXJlIHlvdSBjYW4gYWNxdWlyZS9saXN0ZW4gdG8gdGhlbS4gCk92ZXJ2aWV3IGZvciBFbGRlcktpbmdwaW4KSXQgd2FzIHRoZXJlIHRoYXQgc2hlIHJlY2VpdmVkIHNvbWUgbGlmZSBjaGFuZ2luZyBhZHZpY2UuSW5pdGlhbGx5IHRoaW5raW5nIHNoZSB3b3VsZCBvbmx5IHN0YXkgaW4gR3JlZWNlIGZvciB0aHJlZSBtb250aHMsIEVsZGVyIEhvbG1lcyBmb3VuZCBzaGUgZGlkbid0IHdhbnQgdG8gbGVhdmUuIk15IGRhZCBzYWlkLCAnWW91IHNob3VsZCBnaXZlIGl0IGEgeWVhciwgeW91IGNhbid0IGtub3cgYSBwbGFjZSBpbiB0aHJlZSBtb250aHMsJyIgc2hlIHRvbGQgTmV4dCBtYWdhemluZS5TbyBzaGUgc3RheWVkIGFuZCBoYXMgZ29uZSBvbiB0byByZWJ1aWxkIGhlciBsaWZlIGluIEdyZWVjZSwgc2F5aW5nIGhlciBkYWQncyBhZHZpY2UgdG8gdGFrZSBoZXIgdGltZSB3YXMgaGVyIGJpZ2dlc3QgbGVzc29uLiJJIHdhbnQgdG8gZ2V0IHNodCBkb25lIGZhc3QsIiBzaGUgc2FpZC4gCldoeSBidXkgYSB2aW50YWdlIGRyZXNzIGlmIHlvdSBjYW4ndCBhY3R1YWxseSB3ZWFyIGl0PyBMYXN0bHksIGxvb2sgYXQgbGFyZ2VyIHNpemVzIHRoYW4geW91J3JlIHVzZWQgdG8gYnV5aW5nLiBPdmVyIHRoZSB5ZWFycyBzaXppbmcgaGFzIHRyZW5kZWQgZG93bndhcmQgdG8gbWFrZSBwZW9wbGUgZmVlbCBiZXR0ZXIgYWJvdXQgdGhlbXNlbHZlcywgd2hpY2ggbWVhbnMgYSBzaXplIDIgdG9kYXkgY291bGQgaGF2ZSBiZWVuIGEgc2l6ZSA2IGEgZGVjYWRlIG9yIHR3byBhZ28uIEp1c3QgbWFrZSBzdXJlIHRvIHRyeSB0aGUgY2xvdGhlcyBvbiBiZWZvcmUgeW91IGJ1eS4uIApFYXJsaWVyIHRoaXMgbW9udGgsIHRoZSBBTkEgcmV2ZWFsZWQgdGhhdCB0aGUgRkJJIGhhZCByZWNlbnRseSBjb250YWN0ZWQgUmVlZCBTbWl0aCBhYm91dCB0aGUgaW52ZXN0aWdhdGlvbiBpbiBhdHRlbXB0IHRvIGdldCBjb29wZXJhdGlvbiBmcm9tIEFOQSBtZW1iZXJzLCB3aGljaCBpbmNsdWRlIHNvbWUgb2YgdGhlIGxhcmdlc3QgbWVkaWEgc3BlbmRlcnMgaW4gdGhlIG5hdGlvbi4gClVwcyBZb3UgV29udCBCZWxpZXZlIFdlIFN1cnZpdmVkCkFzIGltcG9ydGFudCBhcyB0aGUgZWZmZWN0aXZlIHVzZSBvZiB0ZWNobm9sb2d5IGFuZCBhcnRpZmljaWFsIGludGVsbGlnZW5jZSB3aWxsIGJlIGZvciBleHBlcmllbnRpYWwgbWFya2V0aW5nIGdvaW5nIGZvcndhcmQsIGl0J3MganVzdCBvbmUgZGV0YWlsLiBBcyBtYW55IGJyYW5kcyBiZWdpbiB0byBkZSBlbXBoYXNpemUgb3ZlcnJlbGlhbmNlIG9uIGRpZ2l0YWwgbWFya2V0aW5nIHdoaWNoIGhhcyBiZWNvbWUgbW9yZSBjaGFsbGVuZ2luZyBpbiB0aGUgYWdlIG9mIHByaXZhY3kgY29tcGxpYW5jZSBsYXdzIGxpa2UgRXVyb3BlJ3MgR2VuZXJhbCBEYXRhIFByb3RlY3Rpb24gUmVndWxhdGlvbiwgb3IgR0RQUiB0aGVyZSB3aWxsIGJlIGEgbmF0dXJhbCByZXR1cm4gdG8gaW4gcGVyc29uIGludGVyYWN0aW9uIGJldHdlZW4gYnVzaW5lc3MgYW5kIGNvbnN1bWVyLiBDYWxsIGl0IGEgYm9vbWVyYW5nIGVmZmVjdCwgYnV0IHJlYWwgdGltZSwgZmFjZSB0byBmYWNlIGV2ZW50cyBhcmUgbm93IGFuIGVzc2VudGlhbCBwYXJ0IG9mIGFueSBob2xpc3RpYyBtYXJrZXRpbmcgc3RyYXRlZ3kgYW5kIHVsdGltYXRlbHkgd2hhdCBwZW9wbGUgdG9kYXkgY3JhdmUuIApTbywgdG8gZW5zdXJlIHRoZXkgd291bGQgZ2V0IGNyZWRpdCBmb3IgYW4gZW5lbXkgYWlyY3JhZnQsIHNvbWV0aW1lcyB0aGV5IGxhbmRlZCBhbmQgY3V0IHRoZSB0YWlsIG51bWJlciBvZmYgb2YgdGhlIGRvd25lZCBhaXJjcmFmdCBpbiBvcmRlciB0byB2YWxpZGF0ZSB0aGVpciBjbGFpbS4gCkEgZ29vZCBvaG0gbWV0ZXIuIApFZW4gc3Bvb3IgdmFuIGdlb2NhY2hlbiB2b2xnZW5kIHdhbmRlbGRlbiB3ZSB2ZXJkZXIsIGRvb3IgZGUgd2lqayBtZXQgZGUgYW1iYXNzYWRlcy4gCk1ha2UgcGFwZXIgY3V0b3V0cyBvZiBlYWNoIGZyYW1lLiBVc2luZyBwbGFpbiBwYXBlciBvciB3cmFwcGluZyBwYXBlciwgY3V0IG91dCBzaGFwZXMgdGhhdCBhcmUgdGhlIHNhbWUgc2l6ZXMgYXMgeW91ciBmcmFtZXMuIApJIHRoaW5rIGluIHRoZSBzYW1lIGxhdyB0aGV5IGFsc28gcmVsYXhlZCByZXN0cmljdGlvbnMgb24gaG9sZGluZyBwb2tlciBnYW1lcyBvdXQgb2YgY2FzaW5vcy4gU28gd2UgY2FuIHByb2JhYmx5IHNlZSBhIHJldHVybiBvZiBwdWIgdG91cm5hbWVudHMgYW5kIHRoZSBsaWtlLiBUaGlzIG1lYW5zIGFsbCB0aGUgc3dpc3MgY2FzaW5vcyB3aXRoIGFuIG9ubGluZSBwb2tlciByb29tIG5vdyBoYXZlIGFsbCB0aGUgcG93ZXIuIApIZSBzZWVtcyB0byBoYXZlIGZvdW5kIG5vdGhpbmcgdGhyZWF0ZW5pbmcgaW4gdGhlIG1hbiwgYW5kIGhpcyBpbXByaXNvbm1lbnQgYW4gImFib21pbmF0aW9uIi4gCk1hc3NldXJQZXJtYWxpbmsgUmVwbHkgYnkgSk9ITiBCRUxMQU1ZIG9uIEphbnVhcnkgMjYsIDIwMTIgYXQgNToyMWFtClRlY2huaWNhbGx5IEkgc3VwcG9zZSB0aGF0IHRoZSBjcmVhdHVyZSBjb3VsZCBub3QgcmVwb3J0IGJhY2sgdG8geW91LCBidXQgbW9zdCBleHRyYXBsYW5hciBjcmVhdHVyZXMganVzdCB3YW50IHRvIGxlYXZlLiBJZiB0aGV5IHdhbnQgdG8gc3RheSBvbiB0aGUgTWF0ZXJpYWwgcGxhbmUgZm9yIHRoZWlyIG93biBwdXJwb3NlcyB0aGVyZSBhcmUgZ2VuZXJhbGx5IGVhc2llciB3YXlzIGZvciB0aGVtIHRvIGRvIHNvIHRoYXQgZG9uIGludm9sdmUgY2Fycnlpbmcgb3V0IHRoZSB3aGltcyBvZiBtb3J0YWxzLi4gClVuZCBzY2hsaWVsaWNoIG11c3MgbWFuIG9obmVoaW4gbmVpZGxvcyBhbmVya2VubmVuLCBkYXNzIGRpZSBGcmF1ZW4gZGVuIE1ubmVybiAoYXVjaCkgaW0gIGtlaW5lc2ZhbGxzIHVudGVybGVnZW4gc2luZC4KWWVwLiBJIHVzZWQgdG8gaGF2ZSBzb21lIGxvd2VyIGJhY2sgcGFpbiBkdXJpbmcgYW5kIGFmdGVyIHNvbWUgbG9uZyByaWRlcyBhbmQgd2l0aCBzb21lIGNsaW1iaW5nOyBoYXZpbmcgZ290dGVuIG9sZGVyIEkgYW0gbm90IGFzIHN1cHBsZSBhcyBJIHVzZWQgdG8gYmUsIEkgdXNlZCB0byBiZSBtb3JlIHN0cmV0Y2hlZCBvdXQgd2l0aCBhIDEzIGNtIHN0ZW0sIEkgc29sdmVkIHRoZSBwcm9ibGVtIHdpdGggYSBzbGlnaHRseSBzaG9ydGVyIHN0ZW0gMTFjbSBhbmQgcGxheWluZyBhcm91bmQgd2l0aCB0aGUgaGVpZ2h0IGFuZCBicmFrZSBob29kIGFuZ2xlIHRoYXQgSSBoYXZlIGEgY29tZm9ydGFibGUgcmVhY2ggYW5kIHN1cHBvcnQgdG8gcHVsbCBvbiB0aGUgYmFycyBlaXRoZXIgc2VhdGVkIG9yIHN0YW5kaW5nICBub3RlOiB0b28gaGlnaCBtaWdodCBmZWVsIGNvbWZvcnRhYmxlIHNlYXRlZCBidXQgbm90IHN0YW5kaW5nLiBJIG9ic2VydmVkIG15IHByb2ZpbGUgc2lkZSB2aWV3IHNob3dzIG15IGJhY2sgYXBwZWFycyBwZXJmZWN0bHkgc3RyYWlnaHQsIG5vdCBjdXJ2ZWQsIGF0IGFuIGFwcHJveCA0NWRlZy4gYW5nbGUgd2hpbGUgc2VhdGVkIGFuZCBoYW5kcyBsaWdodGx5IHJlc3Rpbmcgb24gdGhlIHNoaWZ0ZXIgaG9vZHMKVGhlcmUgd2FzIG5vIGltbWVkaWF0ZSBjb21tZW50IGZyb20gdGhlc2Ugb2ZmaWNpYWxzIG9uIHRoYyBzaXR1YXRpb24gaW4gVGhhaWxhbmQuICdCaWcgMycgcmVwb3J0cyBzYWxlcyBpbmNyZWFzZSBERVRST0lUIChVUEkpIFRoZSBuYSB0aW9uJ3MgImJpZyB0aHJlZSIgYXV0byBtYWsgIGVycyBUdWVzZGF5IHJlcG9ydGVkIGNvbSAgYmluZWQgc2FsZXMgb2YgY2FycyBkdXIgIGluZyB0aGMgRGVjLiAxMSAyMCBwZXJpb2QsIGEgcGVyIGNlbnQgaW5jcmVhc2Ugb3ZlciB0aGUgc2FtZSBwZXJpb2QgbGFzdCB5ZWFyLiAKWW91IGNhbiBhbHNvIGJldCBvbiBhIHRpZSBidXQgc2luY2UgaXQgcmFyZWx5IGhhcHBlbnMsIHlvdSBoYXZlIGhpZ2hlciBjaGFuY2VzIG9mIHdpbm5pbmcgYnkgYmV0dGluZyBvbiBlaXRoZXIgcGxheWVycyBvciB0aGUgZGVhbGVycy4uIApFbXBsb3llZXMgd2lsbCBtb3ZlIHRvIDI2MCBNYWRpc29uIGZyb20gaXRzIHNhdGVsbGl0ZSBvZmZpY2VzIGF0IDE2IEUuIDM0dGggU3QuIGxhdGVyIHRoaXMgZmFsbC4KQWx0aG91Z2ggYnJhY2VzIGhhdmUgYSBiYWQgcmVwdXRhdGlvbiBmb3IgbWFraW5nIGFuIGluZGl2aWR1YWwgbG9vayBhbmQgc3BlYWsgZnVubnksIHRoZXkgYXJlIGEgbmVjZXNzYXJ5IHBpZWNlIG9mIGRlbnRhbCBlcXVpcG1lbnQgaWYgeW91IG5lZWQgdG8gaGF2ZSBjb3JyZWN0aW9ucyBkb25lIG9uIHlvdXIgdGVldGguIApTaGUgY2FuIGV4YWN0bHkgdGFrZSBhIHNoaXAsIG9yIGEgcHJpdmF0ZSBqZXQuLiAKSW50ZXJlc3RpbmdseSwgeW91ciBleGFtcGxlIG9mIFRIQyBpcyBhIGdvb2QgYXJndW1lbnQgZm9yIHVzaW5nIHRoZSB3aG9sZSBwbGFudCByYXRoZXIgdGhhbiBzeW50aGV0aWMgVEhDIGluIGEgZHJ1ZyBsaWtlIE1hcmlub2wuIE1hcmlub2wvc3ludGhldGljIFRIQyBoYXMgbW9yZSBzaWRlIGVmZmVjdHMgYW5kIGlzbiBhcyBlZmZlY3RpdmUsIHdoaWNoIHNjaWVudGlzdHMgdGhpbmsgaXMgYmVjYXVzZSBpdCBsYWNraW5nIHRoZSBvdGhlciBjYW5uYWJpbm9pZHMgdGhhdCBhcmUgcHJlc2VudCBpbiBjYW5uYWJpcywgbGlrZSBDQkQgZm9yIGV4YW1wbGUuLiAKSGFkIGFsd2F5cyBiZWVuIGFibGUgdG8gbG9vayBhdCBoaXMgc2NyZWVucyBhbmQgc2VlIHRoZSBzdG9jayBtYXJrZXQuIE5vdyB0aGUgbWFya2V0IGFzIGl0IGFwcGVhcmVkIG9uIGhpcyBzY3JlZW5zIHdhcyBhbiBpbGx1c2lvbiwgd3JpdGVzIExld2lzLiBXYXMgYXMgaWYgc29tZW9uZSBrbmV3IHdoYXQgaGUgd2FzIHRyeWluZyB0byBkbyBhbmQgd2FzIHJlYWN0aW5nIHRvIGhpcyBkZXNpcmUgdG8gc2VsbCBiZWZvcmUgaGUgaGFkIGZ1bGx5IGV4cHJlc3NlZCBpdC4uIApJIHB1c2hlZCBteXNlbGYgdG8gdGhlIGxpbWl0cyBvbiB0aGUgZm9vdHkgZmllbGQsIGF0IHRyYWluaW5nLCBhdCBnYW1lIGRheS4gJydCdXQgdGhpcyBJIGNvdWxkbid0IHN0b3AgICBzdWNoIGEgc2ltcGxlIHRoaW5nIGFzIHB1c2hpbmcgYSBidXR0b24gb24gYSBwb2tlciBtYWNoaW5lLicnIE1yIEhpbmRtYXJzaCBpcyBhbiBhbWJhc3NhZG9yIGZvciB0aGUgbG9iYnkgZ3JvdXAgYXMgcGFydCBvZiBpdHMgQ2x1YlNBRkUgY2FtcGFpZ24sIHdoaWNoIGVuY291cmFnZXMgZ2FtYmxlcnMgdG8gYWRtaXQgd2hlbiB0aGV5IGhhdmUgYSBwcm9ibGVtLiBIZSB3YXMgc3BlYWtpbmcgYXQgYSAnJ3Bvc3QgZWxlY3Rpb24gc3VtbWl0JycgaGVsZCBhdCBTb3V0aHMgTGVhZ3VlcyBDbHViIGFuZCBhdHRlbmRlZCBieSByZXByZXNlbnRhdGl2ZXMgZnJvbSBtb3JlIHRoYW4gMTAwIGNsdWJzIGluIHRoZSBIdW50ZXIgYW5kIENlbnRhbCBDb2FzdC4gClRzdWJ1bWUgaXMgYWxyZWFkeSBraW5kYSBwZXJmZWN0LCBzbyB3aGlsZSBzaGUgaGFzIGEgbG90IHRvIHRlYWNoIElzaGlnYW1pLCB0aGVyZSBpc24gcmVhbGx5IGFueXRoaW5nIGhlIGNhbiB0ZWFjaCBoZXIgd2hpY2ggaXMgd2h5IHRoZWlyIHNoaXAgZmVlbHMgbGFja2luZy5UcmFkZXJNb2VzICAyIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvSSB0aGluayBpdCBiZXR0ZXIgdGhhbiBmaWxsZXIsIGFuZCBSYXBodGFsaWEgaXMgYSAwMiBsZXZlbCB3YWlmdSwgc28gc2hlIGhhcyBzb21lIHN0YXlpbmcgcG93ZXIsIGJ1dCBJIGRlZmluaXRlbHkgYWdyZWUgdGhhdCBpdCBpc24gYW4gYW1hemluZ2x5IHdyaXR0ZW4gb3IgbWVtb3JhYmxlIHNob3csIG9yIHJlYWxseSB0ZWxsaW5nIHVzIGFueXRoaW5nIHBhcnRpY3VsYXJseSBpbXByZXNzaXZlLiBXaGV0aGVyIGluIHRlcm1zIG9mIHRoZW1lcywgb3IgcGxvdCwgb3IgY2hhcmFjdGVycywgaXQganVzdCBmaW5lLiBJdCBhbiBhYm92ZSBhdmVyYWdlIGlzZWthaSB3aXRoIGhpZ2ggcHJvZHVjdGlvbiB2YWx1ZXMsIGEgc2lnbmlmaWNhbnQgc3RlcCBhYm92ZSB0aGluZ3MgbGlrZSBTbWFydHBob25lIG9yIERlYXRoIE1hcmNoLCBidXQgbm93aGVyZSBuZWFyIGFzIG1lbW9yYWJsZSBhcyBLb25vc3ViYSBvciBPdmVybG9yZCBvciBOR05MLiAKSWYgaWYgdGhlIE9QIGRvZXNuJ3QgaGF2ZSB0aW1lIHRvIGhhbmcgb3V0IG1vcmUgbWF5YmUgdGhlcmUgaXNuJ3QgbXVjaCBvbmUgb24gb25lIGNvbnZlcnNhdGlvbiBlaXRoZXIuIApJIGhhdmVuJ3QgYmVlbiB0aGVyZSBpbiBvdmVyIGEgeWVhciwgYnV0IGZyb20gd2hhdCBJIHJlbWVtYmVyLCBsb3cgc3Rha2VzIG5vdyBtZWFucyA0IDggbGltaXQgb3IgJDEwMCBidXkgaW4gbm8gbGltaXQgICB0aGUgbGltaXRzIGhhdmUgZ29uZSB1cCBpbiByZWNlbnQgeWVhcnMuIApKZW5uaWZlciBPZG9tLCBhIGdpcmwgd2hvIHdlbnQgdG8gbXkgbWlkZGxlIHNjaG9vbCAoYnV0IHdvdWxkIGhhdmUgZ29uZSB0byB0aGUgbmV4dCBoaWdoIHNjaG9vbCBvdmVyLCBhcyB0aGF0IG1pZGRsZSBzY2hvb2wgc3BsaXQgdXMgaW50byB0aHJlZSBkaWZmZXJlbnQgaGlnaCBzY2hvb2xzIGF0IHRoZSB0aW1lKSB3YXMga2lkbmFwcGVkLiBTaGUgd2FzIGZvdW5kIHJhcGVkIGFuZCBtdXJkZXJlZCBsZXNzIHRoYW4gYSB3ZWVrIGxhdGVyLiBIZXIgbXVyZGVyIGlzIHN0aWxsIHVuc29sdmVkLi4gCkNhbid0IGxpZSBpdCB3YXMgc28gcmV3YXJkaW5nIHRvIHNlZSBoaXMgbGlmZSBnbyBkb3duIGluIGZsYW1lcyB3aGlsZSBzaGUgYmFzaWNhbGx5IHR1cm5lZCBoZXIgZW50aXJlIGxpZmUgaW50byBzb21ldGhpbmcgYmVhdXRpZnVsLiBXaGVuIEkgZmlyc3Qgc3RhcnRlZCB3YXRjaGluZywgSSBkaWRuJ3QgdGhpbmsgaXQgd291bGQgYmUgc28gY2xlYXIgd2hvIHdhcyBseWluZyBhbmQgd2hvIHdhcyB0ZWxsaW5nIHRoZSB0cnV0aC4gCjMgcG9pbnRzICBzdWJtaXR0ZWQgMjIgZGF5cyBhZ29JIHRoaW5rIGhlciBhYmlsaXRpZXMgYXJlIGZpbmUgYnV0IHNoZSBkZWZpbml0ZWx5IG5lZWRzIGJpZ2dlciBjaGFuZ2VzIHRvIGhlciB3ZWFwb24sIHllYWguIEkgcGVyc29uYWxseSBsaWtlIHRvIHNlZSBoZXIgb2xkIGJlYW0gcmV0dXJuaW5nIGJ1dCBvbmx5IGxvY2tpbmcgdG8gc2hpZWxkcyAoYW5kIHBvc3NpYmx5IEhQIHNoaWVsZHMgdG9vKS4gTWF5YmUgdGhleSBjb3VsZCBsZWF2ZSB0aGlzIGRhbWFnZSBidXQgYWRkIG1vcmUgYmVuZWZpdHMgZnJvbSBjaGFyZ2luZyB5b3VyIHdlYXBvbiwgc3VjaCBhcyBtb3JlIGFtbW8gcmVjb3ZlcmVkLCBwb3NzaWJseSBhIGxpZmVzdGVhbCB0byBoZXIgc2hpZWxkIEhQIGFuZCBtYWtpbmcgeW91ciBNMiBzdHJvbmdlci4gClRoZSBvd25lciBSaWNoYXJkIHJlYWNoZWQgb3V0IGFza2luZyBmb3IgaW5mb3JtYXRpb24gZnJvbSBwZW9wbGUgdG8gaGVscCB0cnkgdG8gZmluZCBhIGxlYWsgdGhhdCBkaWRuIGV4aXN0IG9uIGhpcyBlbmQgb3IgYXQgdGhlaXIgcHJvY2Vzc29yLiAKUmlnaHQgbm93LCB1c2luZyBJbnRlbCBYVFUsIEkgaGF2ZSBpdCBzZXQgdG8gIDEwMCBhbmQgZXZlcnl0aGluZyBzZWVtcyB0byBiZSBydW5uaW5nIGZpbmUuIFRoZSB0ZW1wIGRpZmZlcmVuY2VzIHdlcmVuIHRoYXQgc3Vic3RhbnRpYWwsIGJ1dCBJIG5vdGljZWQgbXkgY29yZSBjbG9jayBzdGFiaWxpemluZyBhdCAzLjkuIApNeSAzIGZyaWVuZHMgZGVjaWRlZCB0aGV5IHdhbnRlZCB0byBnbyB0byB0aGUgYmVhY2gsIHNvIHRoZXkgYm9va2VkIGFuIEFpcmJuYiBpbiBWYXJhZGVyby4gTXkgd2lmZSBhbmQgSSB3YW50ZWQgdG8gc2VlIGEgZGlmZmVyZW50IHBhcnQgb2YgSGF2YW5hLCBzbyB3ZSBzdGF5ZWQgdGhlcmUgZm9yIGFub3RoZXIgZmV3IGRheXMuIApLZWVwIGluIG1pbmQgdGhpcyBpcyBhbHNvIG5vdCBldmVuIGZhY3RvcmluZyBpbiB0aGUgbWludXRlcyBBTFJFQURZIHNwZW50IHNtb2tpbmcuIEFzc3VtaW5nIHlvdSBwb3dlciBzbW9rZSBhbmQgYSBjaWcgb25seSBsYXN0cyA0IG1pbnV0ZXMgb3Igc28uIHRoYXRzIGxpa2UgYW5vdGhlciAxMjAgbWludXRlcyBzdWJ0cmFjdGVkIGZyb20geW91ciAibm90IHNtb2tpbmciIHRpbWUgb2YgdGhlIGRheSB3aXRoIHdoaWNoIHRvIHVzZSBmb3IgZnVydGhlciBzbW9raW5nLgpMYXN0IHllYXIsIGFzIG9uZSBleGFtcGxlLCBzaGUgYXNrZWQgdGhlIExpbmNvbG53b29kIFZpbGxhZ2UgQm9hcmQgdG8gcmVqZWN0IGEgcmVxdWVzdCB0byBsaWZ0IGl0cyBiYW4gb24gdmlkZW8gZ2FtYmxpbmcuIEF0IGlzc3VlIHdhcyBhIHByb3Bvc2FsIGJ5IExhcmVkbyBIb3NwaXRhbGl0eSB0byBvcGVuIGEgU3RlbGxhIHMgQ2FmZSAgIHRoZSBzYW1lIERlcyBQbGFpbmVzIGNvbXBhbnkgYW5kIGdhbWJsaW5nIHBhcmxvciBjaGFpbiB0aHJvdWdoIHdoaWNoIEdpbHJveSBlbmRlZCB1cCB3aW5uaW5nIGhlciBkcmF3aW5nLgpMZWZ0b24gQ2hpbmEgQnV0dGVyIERpc2guIFZpb2xldCBDaGludHogcGF0dGVybi4gTGlkIG9mIGJ1dHRlciBkaXNoIGlzIGhhbmRwYWludGVkIHdpdGggYmVhdXRpZnVsIHZpb2xldHMuIExpZCBpcyBpbiBleGNlbGxlbnQgY29uZGl0aW9uLiBUcmF5IGhhcyBhIGZldyBtaW5vciBjaGlwcyAuCkZvciBmaXZlIHN0cmFpZ2h0IHNlYXNvbnMsIHRoZSBQYW50aGVycyBoYXZlIGZpbmlzaGVkIGluIHRoZSB0b3Agc2l4IG9mIHRoZSB0ZWFtIHN0YW5kaW5ncyBhdCB0aGUgQ2xhc3MgNUEgc3RhdGUgbWVldC4gSXQncyBhIG1hcmsgdGhlIHRlYW0gaGFzIHRha2VuIHByaWRlIGluIGFjaGlldmluZyBhbmQgYWltcyBmb3IgYWdhaW4gdGhpcyB5ZWFyLiAKVGhlIHJlYXNvbiBwYXJsaWFtZW50YXJ5IGRlbW9jcmFjaWVzIGhhdmUgYSBidXJlYXVjcmF0aWMgbWFjaGluZSB0aGF0IGhlbHBzIGZpbGwgb3V0IHBvc2l0aW9ucyBsaWtlIGFtYmFzc2Fkb3JzIGlzIGJlY2F1c2UgcGFybGlhbWVudGFyeSBkZW1vY3JhY2llcyBhcmUgbWVzc3kgcGxhY2VzIHdoZXJlIG1pbGxpb25zIG9mIGRpZmZlcmVudCBvcGluaW9ucyBjb252ZXJnZS4gCkkgbm90IHNheWluZyB5IGRpZG4gZG8gYW55dGhpbmcgaW4geW91ciBvd24gZGVmZW5zZSwgSSBqdXN0IHNheWluZyBpZiBJa2UgZGlkbiBzaG93IHVwLCB5b3UgKGFuZCBwcm9iYWJseSB3ZSkgYmUgc3BlYWtpbmcgUnVzc2lhbiByaWdodCBub3cuCkkgaGF2ZSBnb25lIHRvIHZhcmlvdXMgZGlmZmVyZW50IHNpdGVzIHRvIHJlc2VhcmNoIHRoZSBtZWFuaW5nIG9mIFRoZSBZZWFyIG9mIHRoZSBIb3JzZS4gVGhlIGtpbmQgdGhhdCBtYWtlcyB5b3UgZmVlbCBzZXh5IGFuZCBmcmlza3kuIFRoYXQncyB0aGUgcm9tYW50aWMgZW5lcmd5LiAKVGhlIGR1c3Qgb3JpZ2luYXRlcyB3ZXN0IGFuZCBub3J0aHdlc3Qgb2YgQmVpamluZywgZXZlbiBhcyBmYXIgYXMgdGhlIEdvYmksIG5vdCB0aGUgU2hhbmRvbmcgcGVuaW5zdWxhLiAKVG8gZXhpc3Qgd2l0aG91dCBjb3Jwb3JhdGlvbnMuIFdlIG11c3QgYXQgZmlyc3QgaGF2ZSB0aGVtLiAKSWwgZW4gYWxsYWl0IGRlIG1tZSBlbiBJdGFsaWUgZHUgbm9yZCAoUGltb250KSwgYWluc2kgcXUgQXJjYWRpZTogcG91ciBzaWduaWZpZXIgY2V0dGUgZ2VzdGF0aW9uIGRlIGwgYXUgc2VpbiBkdSBjaG5lLCBsZXMgcG90ZXMgZGogZm9ydCBhbmNpZW5zLCBIb21yZSBldCBIc2lvZGUsIHV0aWxpc2VudCBsYSBmb3JtdWxlIGRldmlzZXIgZHUgY2huZSBldCBkdSByb2NoZXIsIGMgcGFybGVyIGRlcyBvcmlnaW5lcy4gRW4gcGx1cyBkIGduciBsZSBwcmVtaWVyIGhvbW1lLCBsZSBjaG5lIGVzdCAocG91ciBsIGRlIGNlcyBwb3B1bGF0aW9ucykgcGFzIG1vaW5zIHF1IHRyZSBzYWNyIGV0IGRpdmluIGRvbnQgdG91dCBkY291bGU6IHBsdXMgcXVlIGRlIHNldWxlbWVudCByZXByc2VudGVyIGwgcHJpbWl0aWYsIGlsIGVzdCB2dSBjb21tZSBjZWx1aSBkb250IHByb3ZpZW5uZW50IGxlcyBhdXRyZXMgaG9tbWVzICBzYSBzdWl0ZSwgdG9tYmFudCwgZW4gc29tbWUsIGRlIHNlcyBicmFuY2hlcyBjb21tZSBkZXMgZ2xhbmRzICBsIENvbXB0ZSB0ZW51IGRlIHNhIGZvcm1lIG92b2RlIGV0IHBoYWxsaXF1ZSwgaWwgc2VtYmxlcmFpdCBxdSBhaXQgYXR0cmlidSBhdSBnbGFuZCBkdSBjaG5lIGwgZGUgdmlndWV1ciBtYXNjdWxpbmUgZXQgZG9uYyBkZSBmZXJ0aWxpdCAoY2UgcXVpIG4gcGFzIHRvdXQgIGZhaXQgZXhhY3QsIGNlcnRhaW5zIGdsYW5kcyBlbXBydW50YW50IGxhIGZvcm1lIGQgc2VpbiBEZSBjZXQgaG9tbWUgZGVzY2VuZHUgZHUgY2huZSwgbCBkaXQgYXVzc2kgcXVlLCBkYW5zIGxlcyB0ZW1wcyBwcmVtaWVycywgaWwgYXVyYWl0IHRpciBzYSBzdWJzaXN0YW5jZSBkdSBnbGFuZDogT24gbiBwYXMgZXUgdG9ydCBkZSB0cmFpdGVyIGRlIGxnZW5kZSBsZXMgYWZmaXJtYXRpb25zIGRlIEx1Y3JjZSwgZGUgVmlyZ2lsZSwgZCBkZSBQbGluZSwgZGlzYW50IHF1ZSBsZXMgZ2xhbmRzIGZ1cmVudCBsYSBwcmVtaXJlIG5vdXJyaXR1cmUgZGVzIGhvbW1lcywgbWFpcyBvbiBhdXJhaXQgdG9ydCBkZSBjcm9pcmUgcXVlIGxlcyBnbGFuZHMgbiBwYXMgcmVsbGVtZW50IGV0IGxvbmd0ZW1wcyB0ZW51IHVuZSBsYXJnZSBwbGFjZSBkYW5zIGwgKDIpLiAKQSBoYW5kIGNvbnRhaW5pbmcgYW4gYWNlIHRoYXQgaXMgc3VpdGVkIHRvIGFub3RoZXIgY2FyZCBpbiB0aGUgaGFuZCBpcyBhIGdvb2QgZXhhbXBsZSBvZiBib3RoIHNjb29waW5nIGFuZCByZWRyYXcgaGFuZHMuIFlvdSBjYW4gd2luIGxvdyB3aXRoIHRoZSBhY2UsIGFuZCB5b3UgY2FuIHdpbiBoaWdoIHdpdGggYW4gYWNlIGhpZ2ggZmx1c2ggaWYgeW91ciB0aHJlZSBzdWl0ZWQgY2FyZHMgaGl0IG9uIHRoZSBib2FyZC4gClRoZXkgaGF2ZSBrZXB0IHRoZSBiZWhhdmlvcnMsIGJ1dCBhYmFuZG9uZWQgdGhlIHJlcHJlc2VudGF0aW9ucyAod2l0aCB0aGUgZWxpbWluYXRpb24gb2Ygc2tldW1vcnBoaXNtKS4gU28gbm90IGFsbCB0aGUgc2hpdCBJIG1lbnRpb25lZCBpcyBzdGlsbCB0aGVyZS4KVGhlIGVuZXJneSBpbiBCb3N0b24ncyBpbm5vdmF0aW9uIHNjZW5lIGlzIGF3ZSBpbnNwaXJpbmcuIEV2ZXJ5IGRheSBJIGVudGVyZWQgdGhlIE1hc3NDaGFsbGVuZ2Ugb2ZmaWNlcyBkdXJpbmcgdGhlIGFjY2VsZXJhdG9yLCBubyBtYXR0ZXIgaG93IGxpdHRsZSBzbGVlcCBJIGhhZCwgSSB3YXMgaW5zdGFudGx5IGludmlnb3JhdGVkLiBFdmVuIG5vdywgdGhlIGVhZ2VybmVzcyBhbmQgc3luZXJnaWVzIGFuZCBjcmVhdGl2aXR5IGZsb3dpbmcgYXJvdW5kIG1lIHN3ZWVwIG1lIGF3YXkgYW5kIHRha2UgbWUgdG8gaGVpZ2h0cyBJIG5ldmVyIHRob3VnaHQgSSBjb3VsZCByZWFjaC4gCkJ5IEFwcmlsLCBzaGFyZSBwcmljZXMgaGFkIHN1cmdlZCB0byB0aGVpciBoaWdoZXN0IGxldmVsIGluIG5lYXJseSBmaXZlIHllYXJzLCB3aXRoIGludmVzdG9ycyBmbG9vZGluZyBpbnRvIHRoZSBtYXJrZXQgYW50aWNpcGF0aW5nIGFuIGVjb25vbWljIHR1cm5hcm91bmQgYW5kIGJldHRlciBwZXJmb3JtYW5jZSBieSBtYWpvciBleHBvcnRlcnMgbGlrZSBUb3lvdGEgYW5kIFNvbnkuLiAKQWxzIG1pciBkYW5uIGxhbmd3ZWlsaWcgd3VyZGUsIGhhYiBpY2ggbWljaCBtYWwgZGFzIFBhc3N3b3J0IGZyIFBva2VyNEV2ZXIgYXVzZ2VrcmFtLiAKSSB1bmNlcnRhaW4gd2hhdCB5b3UgbWVhbiBhYm91dCB0aGUgZ2lybHMgaGlqYWNraW5nIGFueXRoaW5nICAgdGhlIEdpcmwgU2NvdXRzIGhhcyBtYWludGFpbmVkIGl0c2VsZiBhcyBhIGZlbWFsZSBvbmx5IG9yZ2FuaXphdGlvbiwgbGFzdCBJIGNoZWNrZWQuIEl0IGlzIHRoZSBmb3JtZXIgQm95IFNjb3V0cyBvZiBBbWVyaWNhIHdobyBhcmUgbm93IGFsbG93aW5nIGdpcmxzIGluLCBhbmQgbm8gb25lIGZvcmNlZCBCU0EgdG8gZG8gdGhpcyBhcyBmYXIgYXMgSSBrbm93LiBQZXJoYXBzIHRoZSBCU0Egc2F3IGEgcGFydCBvZiB0aGUgbWFya2V0IGJlaW5nIGlnbm9yZWQsIGFuZCBkZWNpZGVkIHRvIGNhc2ggaW4/IEkgZG9uIGtub3csIGJ1dCB0aGF0IHNlZW1zIGEgbG90IG1vcmUgcmVhc29uYWJsZSB0aGFuIHRoYXQgd29tZW4gYXJlIHRyeWluZyB0byBpbnZhZGUgbWVuIHNwYWNlLgpFbnRlcmluZyB0aGUgcG90ICh0aGUgdG90YWwgYW1vdW50IHRoYXQgaGFzIGJlZW4gYmV0IGluIGEgc2luZ2xlIGdhbWUpIHdpdGggd2Vha2VyIGhhbmRzIHRoYW4gdXN1YWwgaXMgdGhlIG1vc3QgY29tbW9uIHRoaW5nIHBsYXllcnMgb24gYSB0aWx0IGRvLiAKSSBkb25lIGhlcmUuLiAKSGUgc2FpZCBoZSB3YXMgZ3JhdGVmdWwgdG8gdGhlIHRlYW0gbWVtYmVycywgaW5jbHVkaW5nIEJveWVyLCB3aG8gaGVscGVkIGtlZXAgaGltIGNhbG0gYWZ0ZXIgdGhlIGNvbGxpc2lvbi4KRGlkIHlvdSBrbm93IHRoYXQgc29tZSBvZiB5b3VyIGNoaWxkaG9vZCBpbW11bml6YXRpb25zIHdlYXIgb2ZmIGFmdGVyIGEgZmV3IHllYXJzPyBIZXJkIGltbXVuaXR5IGlzIGtlZXBpbmcgWU9VIHNhZmUsIHRvby4gSSBnb3QgYWxsIG15IHZhY2NpbmF0aW9ucyBhcyBhIGtpZCwgYnV0IGNhdWdodCBXSE9PUElORyBDT1VHSCBhcyBhbiBhZHVsdC4gCkFmdGVyIHNwZW5kaW5nIGhpcyBjaGlsZGhvb2QgaW4gSGFtYnVyZyBhbG9uZ3NpZGUgaGlzIHlvdW5nZXIgc2lzdGVyLCBBbm4sIEJpbGwgYXR0ZW5kZWQgQ2xhcmtzb24gQ29sbGVnZSBpbiBQb3N0ZGFtLCBOZXcgWW9yaywgd2hlcmUgaGUgZWFybmVkIGhpcyBkZWdyZWUgaW4gRWxlY3RyaWNhbCBFbmdpbmVlcmluZy4gTGF0ZXIsIEJpbGwgcmVjZWl2ZWQgaGlzIE1hc3RlcnMgaW4gRWxlY3RyaWNhbCBFbmdpbmVlcmluZyBmcm9tIFJlbnNzZWxhZXIgUG9seXRlY2huaWMgSW5zdGl0dXRlIChSUEkpIGFuZCBoaXMgTUJBIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgTWljaGlnYW4uIEl0IHdhcyB3aGlsZSBhdHRlbmRpbmcgUlBJIHRoYXQgQmlsbCBtZXQgTmFuZXR0ZSBTY2FsaXNpIGFuZCBlbWJyYWNlZCB0aGUgQ2F0aG9saWMgRmFpdGggICB0d28gZXZlbnRzIHRoYXQgcHJvZm91bmRseSBzaGFwZWQgdGhlIHJlc3Qgb2YgaGlzIGxpZmUuIApQZW5uIE5hdGlvbmFsLCB3aGljaCBvcGVyYXRlcyAzOSB0aG9yb3VnaGJyZWQgaG9yc2UgcmFjaW5nIHRyYWNrcyBhbmQgY2FzaW5vcywgbW9zdGx5IHVuZGVyIHRoZSBIb2xseXdvb2QgQ2FzaW5vIGJyYW5kLCB3aWxsIHBheSAkMzAwIG1pbGxpb24gZm9yIHRoZSBjYXNpbm8ncyBvcGVyYXRpbmcgYXNzZXRzIGFuZCBzZXJ2ZSBhcyB0aGUgY2FzaW5vIG9wZXJhdG9yLiBWaWNpIFByb3BlcnRpZXMsIGEgcmVhbCBlc3RhdGUgaW52ZXN0bWVudCB0cnVzdCBzcHVuIG9mZiBmcm9tIENhZXNhcnMgRW50ZXJ0YWlubWVudCBDb3JwLiBkdXJpbmcgaXRzIGJhbmtydXB0Y3kgbGFzdCB5ZWFyLCBhY3F1aXJlZCB0aGUgcmVhbCBlc3RhdGUgZm9yICQ3MDAgbWlsbGlvbiBhbmQgd2lsbCBzZXJ2ZSBhcyB0aGUgcHJvcGVydHkgb3duZXIuCkxhc3QgeWVhcidzIHdpbm5lciwgUGhpbCBIZWxsbXV0aCBKci4sIDI0LCBhIHRhbGwsIHdlZWR5IHlvdXRoIHdob3NlIHNvZnQgZmFjZSBwcm9qZWN0cyBhbiB1bnNldHRsaW5nIGV4cHJlc3Npb24gb2Ygc3dlZXQgZGVjYXksIGp1a2VzIGFuZCB0d2l0Y2hlcyB0byB0aGUgbXVzaWMgb2YgaGlzIFdhbGttYW4uIEhlIHBpbGVzIHVwIGEgZm9ydHJlc3Mgb2YgY2hpcHMsIHRoZW4gd2F0Y2hlcyBpdCBkaXNpbnRlZ3JhdGUuIAo0NiA1MCApIFBva2VyIEZhY2UgIEFjb3VzdGljIC9KdXN0IERhbmNlL0xvdmVnYW1lL0JlYXV0aWZ1bCwgRGlydHksIFJpY2gvUG9rZXIgRmFjZSAuIApJbiBhICQ1LzEwIGdhbWUgaXQgbWF5IGJlICQyLiAKSXQgd29uJ3QgaHVydCB0aGUgYmFieS4uIApBdCBvbmUgcG9pbnQgSSBwaWNrZWQgdXAgYSBwYWlyIG9mIGtpbmdzIGluIG15IGhvbGUgY2FyZHMgYW5kIHRoZSBwbGF5ZXIgaW1tZWRpYXRlbHkgdG8gbXkgcmlnaHQgYW5ub3VuY2VkIEFsbCBJbi4gCkRvZXMgZml2ZSBvZiBhIGtpbmQgYmVhdCBhIHN0cmFpZ2h0IGZsdXNoClNvIGlmIHlvdSBjYXVnaHQgYnV5aW5nIGEgJDQwIGx1bmNoIGZvciBhIGNpdmlsIHNlcnZhbnQgaXMgY29uc2lkZXJlZCBhIGNvcnJ1cHQgYmVoYXZpb3IsIHdoaWxlIGluIEphcGFuLCBpdCB1bnRoaW5rYWJsZSB0aGF0IGl0IGNvdWxkIGJlIGEgY3JpbWUgbGlrZSBpbiBLb3JlYS4uIApNeSBtb20gd2FzIG9uIG1vcnBoaW5lIHdoZW4gc2hlIHdhcyBkeWluZy4gU2hlIHdhcyBhdCBob21lIGFuZCwgdGhlIG1vcm5pbmcgc2hlIGRpZWQsIG15IGRhdWdodGVyIGFuZCBJIHdlcmUgc3RhcnRpbmcgdG8gY2xlYW4gaGVyIHVwIGFuZCBwdXQgb24gYSBmcmVzaCBnb3duLiBJIHJlbWVtYmVyIHNoZSBvcGVuZWQgaGVyIGJlYXV0aWZ1bCBibHVlIGV5ZXMgYW5kIGp1c3Qgc3RhcmVkIGF0IG1lIGZvciBhYm91dCAzMCBzZWNvbmRzLiBXZSBoYWQgc3RhcnRlZCB1bmJ1dHRvbmluZyBoZXIgZ293biBhbmQgbXkgZGF1Z2h0ZXIgdG9sZCBtZSB0aGF0IHNoZSB3YXMgZHlpbmcgcmlnaHQgdGhlbi4gVGhlcmUncyBhIHR5cGUgb2YgYnJlYXRoaW5nIHBlb3BsZSB3aWxsIGRvIHdoZW4gdGhleSdyZSBkeWluZy4gV2hlbiBzaGUgc2FpZCB0aGF0LCBJIGp1c3QgcHV0IG15IGFybXMgYXJvdW5kIGhlciBhbmQga2VwdCB3aGlzcGVyaW5nIGluIGhlciBlYXIgdGhhdCBzaGUgd2FzIHRoZSBiZXN0IG1vbSBldmVyIGFuZCBob3cgbXVjaCBJIGxvdmVkIGhlci4gSXQgd2FzIGp1c3QgbWludXRlcyBhbmQgdGhlbiBJIGtuZXcgc2hlIHdhcyBnb25lLiBJdCB3YXMgc28gc2FkIGZvciBtZSBidXQgd2UnZCBoYWQgdG8gdGFrZSBoZXIgb2ZmIGRpYWx5c2lzIGJlY2F1c2UgaGVyIGJvZHkgd2FzIGp1c3Qgd2VhcmluZyBvdXQgc28gSSBrbmV3IHNoZSdkIG9ubHkgbGFzdCBhIHdlZWsgdG8gMTAgZGF5cy4gU2hlIG9ubHkgbWFkZSBpdCA2IGRheXMuIEJ1dCBJJ20gZ2xhZCBzaGUgd2FzIGFibGUgdG8gc3RheSBob21lIHdpdGggbWUgdGhlIHdob2xlIHRpbWUuIEkgZmVsdCB0aGF0IG1hbidzIGdyaWVmLiBIZSdzIGluIHRoZSBzdGFnZSBhZnRlciBhIGRlYXRoIHdoZXJlIHlvdSBoYXZlIHNvIG11Y2ggdG8gZG8gdGhhdCB5b3Ugc2VlbSBzYWQgYnV0IG9rYXkuIFRoZW4sIHdoZW4gdGhlIGZ1bmVyYWwgaXMgb3ZlciBhbmQgZXZlcnlvbmUgbGVhdmVzLCB5b3UgZmFsbCBhcGFydC4KRnJldWVuIHdpciB1bnMgYmVyIFZvZWxrZWwgQmlvIENvY2t0YWlscywgU29tbWVyam9naHVydHMgdm9uIGRlbiBTY2hyb3piZXJnZXIgQmF1ZXJuLCBEYXZlcnQgUGl0YSBUYXNjaGVuIHVuZCBCaW8gSHVtbXVzIG9kZXIgU2NobGFuZ2VuZ3Vya2VuIHp1IGduc3RpZ2VuIFByZWlzZW4gaGllciBhbGxlIEFuZ2Vib3RlOi4gClBsYXllcnMgbG9vayBhdCB0aGVpciBjYXJkcy4gCiJXaGF0J3Mgc3VycHJpc2luZyBpcyB3aGVuIHlvdSB3YWtlIHVwIGluIHRoZSBtb3JuaW5nIGFuZCBldmVyeW9uZSdzIGNhbGxpbmcgYW5kIGVtYWlsaW5nIHlvdSBhbmQgc2F5aW5nICdJIHNhdyB0aGlzIG9uIG15IHBhcmVudGluZyBncm91cCcgYW5kIHNlZWluZyBob3cgZmFyIGl0J3Mgc3ByZWFkLiIKU3VydmVpbGxhbmNlIHZpZGVvIHNob3dlZCB0aGUgb2ZmaWNlcnMgbGF0ZXIgZHJvcHBpbmcgQ2hhbWJlcnMgb2ZmLCBhbmQgYSByYXBlIGtpdCBmb3VuZCBzZW1lbiBtYXRjaGluZyB0aGUgRE5BIG9mIGRldGVjdGl2ZXMgRWRkaWUgTWFydGlucyBhbmQgUmljaGFyZCBIYWxsLiBUaGUgb2ZmaWNlcnMgcmVzaWduZWQgZnJvbSB0aGUgTllQRCwgYW5kIGluIE9jdG9iZXIgMjAxNywgdGhleSB3ZXJlIGNoYXJnZWQgd2l0aCA0MyBjcmltZXMsIGluY2x1ZGluZyByYXBlIGFuZCBraWRuYXBwaW5nLiAKTXVzY2xlcyBhcmUgdGhlICJlbmdpbmUiIHRoYXQgeW91ciBib2R5IHVzZXMgdG8gcHJvcGVsIGl0c2VsZi4gQWJzb2x1dGVseSBldmVyeXRoaW5nIHRoYXQgeW91IGNvbmNlaXZlIG9mIHdpdGggeW91ciBicmFpbiBpcyBleHByZXNzZWQgYXMgbXVzY3VsYXIgbW90aW9uLiBUaGUgb25seSB3YXlzIGZvciB5b3UgdG8gZXhwcmVzcyBhbiBpZGVhIGFyZSB3aXRoIHRoZSBtdXNjbGVzIG9mIHlvdXIgbGFyeW54LCBtb3V0aCBhbmQgdG9uZ3VlIChzcG9rZW4gd29yZHMpLCB3aXRoIHRoZSBtdXNjbGVzIG9mIHlvdXIgZmluZ2VycyAod3JpdHRlbiB3b3JkcyBvciAidGFsa2luZyB3aXRoIHlvdXIgaGFuZHMiKSBvciB3aXRoIHRoZSBza2VsZXRhbCBtdXNjbGVzIChib2R5IGxhbmd1YWdlLCBkYW5jaW5nLCBydW5uaW5nLCBidWlsZGluZyBvciBmaWdodGluZywgdG8gbmFtZSBhIGZldykuLiAKIkkgZ2V0IGNhdWdodCB1cCBpbiB0aGUgY2hhcmFjdGVycywiIHNoZSBzYWlkLi4gCjY3Ni8yLiAKSSBhbHJlYWR5IGZpbmlzaGVkIHdyaXRpbmcgdGhpcyB3aG9sZSB0aGluZy4gR29kLCBpdCBsb25nIEFGIEkgc29ycnkgZ3V5cy4gSSBnb2luZyBvdmVyIGl0IG5vdyBmb3IgYSBzZWNvbmQgdGltZSBiZWNhdXNlIHdoYXQgSSB0eXBlZCB3YXMgYSByZWFsbHkgZ29vZCBzdHJlYW0gb2YgY29uc2Npb3VzbmVzcywgYnV0IGZ1Y2tlZCBpZiB5b3UgdGhlIHJlYWRlci4gCkl0IHVwIHRvIHlvdXIgc2Nob29sIHRvIGRldGVybWluZSB5b3VyIHN0YXR1cywgYW5kIGNhbGN1bGF0ZSBob3cgbXVjaCB0aGV5IGdvaW5nIHRvIGdpdmUgeW91LiAKIkkgd2FudCB0byB0YWxrIGFib3V0IGhvdyB0aGVyZSBpcyBuYXR1cmFsbHkgYSBjaGFvdGljLCBtZXNzeSwgdW5wcmVjZWRlbnRlZCBzb2NpbyBjdWx0dXJhbCwgc2V4dWFsIGNoYW5nZSAgIHRoZSByZWNrb25pbmcgYXMgc29tZSBmb2xrcyBhcmUgY2FsbGluZyBpdCAgIGhhcHBlbmluZyBhcm91bmQgdXMsIiBzaGUgYWRkZWQuIApLaWRzIG1hZGUgdGhlaXIgY2FzZSBsYXN0IG5pZ2h0IGF0IHRoZSBTdC4gUGF1bCBDaXR5IENvdW5jaWwgdG8gZ2V0IGNhbmR5IGNpZ2FyZXR0ZXMgYmFubmVkLiBOb25lIG9mIHRoZSBjb3VuY2lsIG1lbWJlcnMgc3Bva2UgdXAgZHVyaW5nIHRoZSBoZWFyaW5nIGFuZCBpdCBhcHBlYXJzIHRoZXkgd2lsbCBhbGwgdm90ZSBmb3IgaXQuIFN0b2NrIHVwIG9uIHRoZSBjYW5keSBmdW4gc28geW91ciBjaGlsZHJlbiB3b24ndCBiZSBkZW5pZWQgYWNjZXNzIHRvIGZha2UgY2lncy4gV2hpbGUgd2UgZmluZCB0aGUgYmFuIGEgbGl0dGxlIHNpbGx5LCBpdCdzIHByZXR0eSBhd2Vzb21lIHRvIHNlZSBhIHB1YmxpYyBoZWFyaW5nIHBhY2tlZCB3aXRoIHdlbGwgc3Bva2VuIGhpZ2ggc2Nob29sIHN0dWRlbnRzIG1ha2luZyB0aGVpciBjYXNlLiBXZSBuZWVkIG1vcmUgb2YgdGhhdC4KWW91J2xsIGZpbmQgc29tZSBncmVhdCBhcnRpY2xlcyB0aGF0IHdpbGwgaGVscCB5b3UgYmUgbW9yZSBpbmZvcm1lZCBvbiB5b3VyIGNvbmRpdGlvbiBhbmQgdHJlYXRtZW50IG9wdGlvbnMuIApUaGUgY2FzaW5vJ3MgRWxlbWVudCBSZXN0YXVyYW50IGlzIG9wZW4gZm9yIGJyZWFrZmFzdCwgbHVuY2ggYW5kIGRpbm5lci4gCkFzIEkgZ2V0IG91dCBvZiB0aGUgc2hvd2VyLCBJIGNhbGwgdG8geW91LiBJIHNheSBvdXQgbG91ZCwgJ1dpbGwgeW91IG1ha2UgbWUgYSBjdXA/JyBUaGVuIEkgcmVtZW1iZXIgeW91ciBnb25lLi4gCkkgaGF2ZW4gd2F0Y2hlZCBhbnl0aGluZyB0aGF0IHdhc24gYWlyaW5nIGFuZCBJIHdhdGNoaW5nIGxlc3MgYW5kIGxlc3Mgb2YgYWlyaW5nIGRyYW1hcy4gSSBoYXZlbiBtZXQgYSBzaW5nbGUgcGVyc29uIHRocm91Z2ggZHJhbWFzIGFuZCBvbmx5IHRhbGsgdG8gMiBvZiB0aGUgcGVvcGxlIEkgbWV0IHRocm91Z2ggZHJhbWFzLCB3ZSBkb24gdGFsayBhYm91dCBkcmFtYXMgYW55bW9yZSB0aG91Z2gsIGF0IGFsbC4uIApBZnRlciBraWxsaW5nIHRoZSB0d28gU2hhcmtzIEkgd2FzIGNhcGFibGUgb2YgcmVhY2hpbmcgdGhlIGRlZXBlciBDaGVzdCBhbmQgaXQgZ3JhbnRlZCBuZXcgU2hpcCBDcmV3IFVuaWZvcm1zLiBJbSBub3Qgc3VyZSB3aGF0IHRoZSBvdGhlciBjb3VsZCBoYXZlIGJlZW4gc2luY2UgSSB3YXMgaGF2aW5nIGxvdHMgb2YgdHJvdWJsZSBsb2NhdGluZyBpdCBhbmQgSSBmZWx0IGl0IHdhcyBldmVudHVhbGx5IHRvbyBtdWNoIHRpbWUgZm9yIHRoZSB0cm91YmxlLgpJIGFsc28gYSBiaXQgY3VyaW91cyBhcyB0byBob3cgaGUgd29yZGVkIGl0LiBJZiBpdCB3YXMgc29tZXRoaW5nIGxpa2UsICJCYWJlLCB0b2RheSB3YXMgZ3JlYXQsIGxldCBnZXQgbWFycmllZCwgbG9vayBpIGhhdmUgYSByaW5nIGFuZCBldmVyeXRoaW5nIiwgd2VsbC4KT24gZGVtYW5kIHByaW50ZWQgY2FycyBtYXkgYmUganVzdCBhcm91bmQgdGhlIGNvcm5lci4gCkkgZG9uIG1lYW4gdG8gcG9wIHRoaXMgYnViYmxlIG9mIHNvY2lhbCBjb250cm9sLCBidXQgaWYgdGhpbmdzIGFyZSBzbyBiYWQgdGhhdCBubyBmb29kIGlzIGJlaW5nIGRlbGl2ZXJlZCB0byBteSBjaXR5IGJlY2F1c2UgZXZlcnlvbmUgZGVhZCBvciBkeWluZyB0aGVuIEkgdGhpbmsgSSBXSUxMIFBBTklDLiBQYW5pYyB3aWxsIGJlIHRoZSBhcHByb3ByaWF0ZSByZXNwb25zZS4gClRoZSB2aWRlbyBzaG93cyB0d28gR1JJWlpMWSBiZWFycyB0aGF0IHNlYW0gdG8gYmUgYXdhcmUgb2YgaGltLiBUaGV5IGRlY2lkZWQgdG8gY2hhcmdlLCBpbiB3aGljaCB5b3UgYXJlIGdlbmVyYWxseSBhZHZpc2VkIHRvIHBsYXkgZGVhZCBpbiB0aGUgZmV0YWwgcG9zaXRpb24uIApBbiBpbXBvcnRhbnQgc2hpZnQgaW4gbW9kZWxzIG9mIGhlYWx0aCBjYXJlIGhhcyBiZWVuIGV2b2x2aW5nIGluIHRoZSBtaWRzdCBvZiB0aGUgdHVybW9pbCB0aGF0IGNoYXJhY3Rlcml6ZXMgaGVhbHRoIGNhcmUgZGVsaXZlcnkgaW4gdGhlIFVTIHRvZGF5LiBPbmUgZnVuZGFtZW50YWwgY2hhbmdlIGlzIGJhc2VkIG9uIHRoZSBncm93aW5nIHJlYWxpemF0aW9uIHRoYXQgdGhlIGJpb21lZGljYWwgbW9kZWwsIHRoZSBjb3JuZXJzdG9uZSBvZiBjb250ZW1wb3JhcnkgbWVkaWNpbmUsIG9mZmVycyB0b28gbGltaXRlZCBvZiBhbiBhcHByb2FjaCB0byBoZWFsdGguIEFzIEVicmFsbCwgQkFwcFNjMSBub3RlZCBpbiAxOTk0LApPbmUgcG9zc2libGUgc29sdXRpb24sIGFzIHJlcG9ydGVkIGJ5IHRoZSBGaW5hbmNpYWwgUG9zdCB0aGlzIHBhc3Qgd2VlaywgY291bGQgY29tZSBmcm9tIGEgY2hhbmdlIGluIHRoZSBydWxlcyB0aGF0IGJhbiBjb21wYW5pZXMgY29udmljdGVkIG9mIGJyaWJlcnkgZnJvbSBwYXJ0aWNpcGF0aW5nIGluIGdvdmVybm1lbnQgY29udHJhY3RzLiBPZmZpY2lhbHMgYXJlIHVuZGVyc3Rvb2QgdG8gYmUgbG9va2luZyBhdCB0aGUgcG9zc2liaWxpdHksIGJ1dCB0aGUgcG9saXRpY2FsIGNsaW1hdGUgbWlnaHQgbWFrZSBzdWNoIGEgY2hhbmdlIHVudGVuYWJsZSBmb3Igbm93LiAKV2FubmEga25vdyB3aHkgdGhlIGZyZWVkb20gcmlkZXJzIHdlcmVuIGx5bmNoZWQgb3IgcGh5c2ljYWxseSBjYXN0IGF3YXk/IEJlY2F1c2UgdGhleSBoYWQgYSBncm91cCBvZiBhcm1lZCBtZW4gYmVoaW5kIHRoZW0gdGhhdCB3YXRjaGVkIG92ZXIgdGhlIHNpdHVhdGlvbi4gUm9zYSBwYXJrcyBldmVuIHRhbGtlZCBib3V0IGhvdyBwaXZvdGFsIFJvYmVydCBEb3VnbGFzcyB3YXMsIHRoZSBtYW4gd2hvIHdyb3RlIE5lZ3JvZXMgd2l0aCBHdW5zIGFuZCB0aGUgbWFuIHdobyBpbmZsdWVuY2VkIE1hbGNvbG0gWC4gCkFuZCBJIGFncmVlLCBCYXJiIGRvZXNuIGhhdmUgbXVjaCwgaWYgYW55LCBjcmVkaWJpbGl0eSBsZWZ0LiBJIGNvdWxkIGltYWdpbmUgaGVyIGNvbWluZyB0byB0ZXJtcyB3aXRoIGl0IGFmdGVyIHRoZSBmYWN0LCBhcyBpbiBCb2JieSBoYXMgc28gbXVjaCBtb3JlIHRvIGxvc2UgdGhhbiBCcmVuZGFuLiBTaGUgbWF5IGhhdmUgZXZlbiBjb252aW5jZWQgaGVyc2VsZiB0aGF0IEJyZW5kYW4gd2FzbiBnb2luZyB0byBoYXZlIG11Y2ggYSBsaWZlIGluIHRoZSBmaXJzdCBwbGFjZSBhbmQgbWlnaHQgYmUgY29udGVudCB0byBoYXZlIGhpcyBjb3N0IG9mIGxpdmluZyBwcm92aWRlZCBieSB0aGUgc3RhdGUuIEl0IHNvdW5kcyByaWRpY3Vsb3VzLCBidXQsIHNoZSBtdXN0IGhhdmUgZm91bmQgc29tZSB3YXkgdG8ganVzdGlmeSBpdC4gSXQgaGFyZCB0byBsaXZlIHdpdGggYSBsaWUgdGhhdCBiaWcgZm9yIHRoYXQgbG9uZywgYW5kIGl0IGNvdWxkIGV4cGxhaW4gZGVwZW5kZW5jeSBpc3N1ZXMgKGJvb3plLCBkcnVncykgaWYgc2hlIGhhcyBhbnkuIFNoZSBub3QgcmVhbGx5IGEgcGljdHVyZSBvZiBoZWFsdGggc28gaXQgY291bGQgYmUgd2h5LgpUaGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGRyZXcgODIsMzYwIHBsYXllcnMgbGFzdCB5ZWFyIHdpdGggMTAgcGVyIGNlbnQgd2lubmluZyBzb21lIG9mIHRoZSAkMjI3LjcgbWlsbGlvbiBpbiBwcml6ZSBtb25leS4gQnV0IHRoaXMgeWVhciBhcHBlYXJlZCB0byBiZSB1bnVzdWFsbHkgYW1iaXRpb3VzLCBjYXRlcmluZyB0byB0aGUgcmVndWxhciBndXkgd2hvIGRvZXNuIG1pbmQgcGFydGluZyB3aXRoICQ1NjUgYnV0IHdvdWxkIGJsdXNoIGF0IHNwZW5kaW5nICQxLDAwMCwgd2hpbGUgc3RpbGwgYXR0cmFjdGluZyBwcm9zIHdobyBkb24gd2FudCB0byBwbGF5IGFnYWluc3QgdGhvc2UgZ3V5cy4gd2hhdCBhbHNvIG5ldzoKSSBjYW5ub3Qgc3RhbmQgZGlzY2xvc3VyZSBvciB3aGF0IG1vcmUgY29sbG9xdWlhbGx5IGtub3duIGFzIG15c3RlcnkgbWVhdCBuYXZpZ2F0aW9uLiBJdCBiZWVuIGEga25vd24gcHJvYmxlbSBmb3IgYXQgbGVhc3QgMjAgeWVhcnMgYW5kIG5ldyBkZXNpZ25lcnMgY29udGludWUgdG8gZG8gaXQuIEl0IGlzIHRoZSBwcmltYXJ5IHJlYXNvbiBJIGRvIG5vdCBsaWtlIHdvcmtpbmcgd2l0aCBVWCBkZXNpZ25lcnMgYW5kIG90aGVyIGZyb250IGVuZCBwZW9wbGUuIFRoZXkgYXJlIGNvbXBsZXRlbHkgZGlzY29ubmVjdGVkIGZyb20gYWN0dWFsbHkgdXNpbmcgdGhlIHByb2R1Y3QgYW5kIGFyZSBtb3JlIGNvbmNlcm5lZCB3aXRoIGZvbGxvd2luZyBsYXRlc3QgdHJlbmRzIGFuZCBsb29raW5nIGZsYXNoeS4gV2hlbiBpdCBjb21lcyB0byBhY3R1YWxseSB1c2luZyBzb2Z0d2FyZSwgdXRpbGl0eSBpcyBraW5nLiBGdW5jdGlvbiBvdmVyIGZvcm0uIFdlIHVzZSBsb2dpbiBmb3JtcyBzbyBvZnRlbiBhbnkgbGFja2luZyBmdW5jdGlvbiBpcyBwYWluZnVsbHkgb2J2aW91cy4KT1AgcG9pbnQgb2YgdmlldyBhbmQgd29yZHMgYXJlIGFsbCB3ZSBoYXZlIGdvaW5nIGZvciB0aGUgc2l0dWF0aW9uLCBhbmQgeW91IGRhbW4gcmlnaHQgd2UgYWxsIGdvaW5nIHRvIGdpdmUgb3BpbmlvbnMgYmFzZWQgb25seSBvbiB0aGUgaW5mb3JtYXRpb24gd2UgaGF2ZS4gCkFzIC91L2N0cmViZXIgc2FpZCBzaW1wbGVyIGlzIGJldHRlciBhbmQgaXQgcHJldHR5IGVhc3kgdG8gZ2V0IHNvIG11Y2ggcG93ZXIgZ2VuZXJhdGlvbi9zdG9yYWdlIHRoYXQgeW91IGRvbiByZWFsbHkgaGF2ZSB0byB3b3JyeSBhYm91dCBydW5uaW5nIG91dC4gQWJvdXQgdGhlIG9ubHkgdGhpbmcgSSBkbyByZWFsbHkgZWFybHkgaXMgcHV0IG15IHNtZWx0ZXIgdXBzdHJlYW0gb2YgbXkgYmF0dGVyaWVzL2hhYml0YXQuIFRoYXQgd2F5IHdoZW4gbmlnaHQgY29tZXMgdGhlIHNtZWx0ZXIgZG9lc24gdGFrZSB0aGUgbGltaXRlZCBiYXR0ZXJ5IHBvd2VyIGFuZCBnZW5lcmF0aW9uIGF3YXkgZnJvbSB0aGUgcmVzZWFyY2ggc3RhdGlvbnMgdGhhdCBJIHByZWZlciB0byBiZSBydW5uaW5nIG92ZXIgdGhlIHNtZWx0ZXIuIEhvd2V2ZXIgb25jZSB5b3UgY2FuIGJ1aWx0IGEgc2h1dHRsZSBhIHF1aWNrIGhvcCB0byB0aGUgbGl0aGl1bSBwbGFuZXQgY2FuIGdldCB5b3UgZW5vdWdoIGxpdGhpdW0gdG8gbWFzcyBwcm9kdWNlIGFsbCBiYXR0ZXJpZXMgeW91IGV2ZXIgbmVlZC4KV2VsY29tZSB0byB0aGUgaDJnMiBDdXJhdG9ycycgSG9tZSBQYWdlLiBUaGUgQ3VyYXRvcnMgYXJlIGEgc21hbGwgYnV0IGRlZGljYXRlZCBidW5jaCBvZiBleGlzdGluZyB2b2x1bnRlZXJzIHdob3NlIHJvbGUgaXQgaXMgdG8gcGljayB1cCBlZGl0b3JpYWwgZmVlZGJhY2ssIG1ha2UgY2hhbmdlcyB0byBFZGl0ZWQgRW50cmllcyBhbmQgZ2VuZXJhbGx5IGtlZXAgYW4gZXllIG9uIGV4aXN0aW5nIEVkaXRlZCBHdWlkZSBlbnRyaWVzLiAKS2FudGVuS2FudCAgMzcgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpJIGFsc28gZ29pbmcgdG8gcmVjb21tZW5kIExhbmUgQnJ5YW50IGJlY2F1c2UgSSBsb3ZlIHRoZSBxdWFsaXR5LiBJIHdvcmtlZCB0aGVyZSBmcm9tIDIwMDYgMjAwOCBhbmQgc3RpbGwgaGF2ZSBwaWVjZXMgZnJvbSB0aGVuIHRoYXQgaGF2ZW4gZXZlbiBjb21lIGNsb3NlIHRvIHBvb3Bpbmcgb3V0IG9uIG1lLgphbmQgd2h5IENFUyBpcyB0aGUgcGxhY2UgdG8gZmluZCB0aGVtCkFsaWNpYSBHYXJjaWEgSGVycmVybywgY2hpZWYgQXNpYSBQYWNpZmljIGVjb25vbWlzdCBhdCBOYXRpeGlzIFNBCkFsc28sIHRoZSBnYW1lIHRyYWlucyB5b3UgYSBsb3Qgb2Ygc2tpbGxzIHRoYXQgY2hlc3MgYWxzbyBwcmVwYXJlcyB5b3UgZm9yLgpHZXQgdGhlIHJpZ2h0IGNvbnN1bHRhbnRzIG9uIHRoZSBqb2IgYW5kIGRvIGl0IG9ubHkgb25jZS4gCkhlIGlzIGluIGxvdmUgd2l0aCBoaXMgZmlhbmNlIEJlYXRyaXggJ0JlYScgRW1lcnkuIFdoZW4gaGVyIGZhdGhlciBTaXIgQ2hhcmxlcyB0YWtlcyBoZXIgYXdheSBhZnRlciByZWZ1c2luZyB0byBhbGxvdyB0aGVpciBlYXJseSBtYXJyaWFnZSwgaGUgcGx1bmdlcyBoaW1zZWxmIGludG8gaGlzIHdvcmsuIApBIHdob3BwaW5nICQzIGJpbGxpb24gd2FzIHNwZW50IG9uIGhvbWVvcGF0aHkgICBoaWdobHkgZGlsdXRlZCBkcnVncyBtYWRlIGZyb20gbmF0dXJhbCBpbmdyZWRpZW50cy4gSXQgaXMgYmFzZWQgb24gYSB0aGVvcnkgdW52ZXJpZmllZCBieSBtYWluc3RyZWFtIHNjaWVuY2U6IHRoYXQgc3Vic3RhbmNlcyB0aGF0IGNyZWF0ZSBjZXJ0YWluIHN5bXB0b21zIGluIGhlYWx0aHkgcGVvcGxlIGFyZSBlZmZlY3RpdmUgaW4gdHJlYXRpbmcgdGhlIGRpc2Vhc2UgdGhhdCBjYXVzZXMgdGhlIHNhbWUgc3ltcHRvbXMuClBTOiBJIHJlYWxpemUgd2hhdCBteSBtaXN0YWtlIHdhcyxJIGFsc28ga25vdyB0aGF0IGp1c3QgY3V6IEkgZm91bmQgdGhlIG1pc3Rha2UgYW5kIEkga25vdyB0aGUgc29sdXRpb24sIG15IGJyYWluIHBoeXNpY2FsIGNhbm5vdCBhY2NlcHQgYW5kIGNoYW5nZSBsaWtlIEkgd2FudCBpdCB0bywgaGF2ZSB0byBmb3JjZSBteXNlbGYgdG8gZmlnaHQgdGhlIGZlYXIsIGRvIGl0LiBJdCBsaWtlIHRyYWluaW5nIG15IHN1YmNvbnNjaW91cyBicmFpbiB0byBmdWNrIG9mZiB3aXRoIHRoYXQgbWVudGFsaXR5LgpBdCBZdm9ubmUncyBEYXkgU3BhIGluIEFsZXhhbmRyaWEsIFZhLiwgYSAyNSBtaW51dGUgc2Vzc2lvbiB3aXRoIHRoZSBmaXNoLCBmb2xsb3dlZCBieSBhIHBlZGljdXJlLCBpcyBhdmFpbGFibGUgZm9yICQ2NSBbc291cmNlOiBZdm9ubmUncyBEYXkgU3BhXS4uIApNR00gU3ByaW5nZmllbGQgaXMgZnVsbCBvZiBvbGQgZnVybml0dXJlIGFuZCByZWNsYWltZWQgcGllY2VzIG9mIGJyaWMgYSBicmFjLCBtYW55IGJvdWdodCBhdCB0aGUgZmFtb3VzIGFudGlxdWVzIGZhaXIgaW4gbmVhcmJ5IEJyaW1maWVsZC4gQSBsYXJnZSAxOXRoIGNlbnR1cnkgY2hhbmRlbGllciBvdmVyIHRoZSBlbGV2YXRvciB2ZXN0aWJ1bGUgY2FtZSB0byBTcHJpbmdmaWVsZCBmcm9tIE5ldyBZb3JrIGFmdGVyIE1HTSBjaGllZiBleGVjdXRpdmUgSmltIE11cnJlbiBzcG90dGVkIGl0IGluIGFuIGFudGlxdWUgc3RvcmUsIGFjY29yZGluZyB0byB0aGUgY29tcGFueS4uIApUaGVyZSBpcyBhIGdvb2QgcmVhc29uIGZvciB0aGlzISBUaGVzZSBhcmUgdGhlIG1vc3QgY29tbW9uIGNvbG9ycyB3aGVuIGl0IGNvbWVzIHRvIGRlbm9taW5hdGlvbnMuIApTbywgaWYgeW91IG5lZWQgc29tZSBhZHZpY2Ugb24gYSBuZXcgam9iLCBhIG5ldyBoYWlyY3V0IG9yIGEgbmV3IG1hbiwgeW91J2xsIHdhbnQgdG8gc3RlZXIgY2xlYXIgb2YgdGhlIGNsdWJzIGFuZCBjaGVjayBvdXQgc29tZXRoaW5nIGEgbGl0dGxlIGRpZmZlcmVudC4gSGVyZSBhcmUgZml2ZSBtb3JlIGZ1biBkYXRlcyB0aGF0IHlvdSBhbmQgeW91ciBnaXJsZnJpZW5kcyBjYW4gZ2l2ZSBhIHRyeSBuZXh0IHRpbWUgeW91J3JlIHNob3J0IG9uIGlkZWFzIGJ1dCB1cCBmb3Igc3BvbnRhbmVpdHkuLiAKRW4gMjAwNCwgVml2IFRvbWJzLCBhbG9ycyBkaXJlY3RyaWNlIGRlIEdhcmRlbiBQcmltYXJ5IFNjaG9vbCBkZSBNZXJ0b24gKGF1IHN1ZCBkZSBMb25kcmVzKSBkaXNhaXQgZHUgcHJvZ3JhbW1lOiAgbG9yc3F1ZSBub3VzIGF2b25zIGNvbW1lbmMgIHByYXRpcXVlciBsZSBtYXNzYWdlIGVuIGNsYXNzZSBkYW5zIGxlIGNhZHJlIGQndW4gcHJvamV0IHBpbG90ZSwgaidhdmFpcyBkZSBsYSBkaWZmaWN1bHQgIGNyb2lyZSBsZXMgcnN1bHRhdHMuIApJdCdzIG5vd2hlcmUgbmVhciB0aGUgbGV2ZWwgdGhhdCBGYWNlYm9vayBpcyBhdCBpbiB0ZXJtcyBvZiB1c2UsIGJ1dCBhIGJldHRlciBleGFtcGxlIGlzIGFub3RoZXIgcGF5bWVudCBuZXR3b3JrIGxpa2UgVmlzYS4gCkV2ZW50dWFsbHkgeW91IG1pZ2h0IGJlIGFibGUgdG8gdGFsayBoZXIgaW50byBpdC4gR29vZCBsdWNrLCBiZWNhdXNlIGlmIHNoZSBkb2VzbiBsaWtlIGFuYWwsIHNoZSBuZXZlciB3aWxsLiAKTHVzdCBvciBMb3NlciBSZWxhdGlvbnNoaXAgUXVpegpQSVg6IE1pYW1pIE9yYW5nZSBCb3dsIFBsYXllZCBIb3N0IFRvIDUgU3VwZXIgQm93bHNMb21iYXJkaSBLcmFtZXJHcmVlbiBCYXkgUGFja2VycyBjb2FjaCBWaW5jZSBMb21iYXJkaSBpcyBjYXJyaWVkIG9mZiB0aGUgZmllbGQgYWZ0ZXIgaGlzIHRlYW0gZGVmZWF0ZWQgdGhlIE9ha2xhbmQgUmFpZGVycyAzMyB0byAxNCBpbiB0aGUgU3VwZXIgQm93bCBJSSBnYW1lIGluIE1pYW1pLCBGbGEuIApJdCBpcyB2ZXJ5IHBvc3NpYmxlIHRoYXQgc29tZW9uZSBhcm91bmQgdGhlIHdvcmxkIGNhbiBiZSB5b3VyIG9wcG9uZW50Li4gCkFmdGVyIHRoaXMgSSB0dXJuZWQgaXQgb2ZmLCBhbmQgYSBjb3VwbGUgb2Ygd2Vla3MgbGF0ZXIgSSByZXR1cm5lZCB0byBpdCwgYW5kIHRoYXQgd2hlbiBJIGNvbXBsZXRlbHkgZmVsbCBmb3IgdGhlIGVudGlyZSBhbGJ1bS4gQW5kIHRoYXQgcmVhbGx5IGhvdyBJIGZlbGwgZm9yIFRNViBhbmQgUHJvZyBpbiBnZW5lcmFsLiAKQW55d2F5cywgc29ycnkgZm9yIGRyYWdnaW5nIGV2ZXJ5b25lIGludG8gbXkgbWlkIGxpZmUgc291bCBzZWFyY2hpbmcgY3Jpc2lzLiBJIGZlZWwgbGlrZSBhIHRvdGFsIGR1bWJzIGZvciBiZWluZyBzdWNoIGEgd3Vzcy4gRG9uJ3QgcXVvdGUgbWUgb24gdGhhdCEgOm1yZ3JlZW46ClRoaXMgYW5kIHVzIGRpdmlkZSBoYXMgYmVjb21lIGVzcGVjaWFsbHkgYXBwYXJlbnQgd2hlbiB5b3UgbG9vayBhdCB3aGF0IGhhcyBiZWVuIGhhcHBlbmluZyBsYXRlbHk6IEZpcnN0LCB3aGVuIENoaW5hIGJvcm4gcGFkZGxlcnMgYnJvdWdodCBob21lIFNpbmdhcG9yZSBmaXJzdCBPbHltcGljIG1lZGFsIGluIDQ4IHllYXJzLgpJbiB0aGlzIHJlZ2FyZCwgdGhlIHRvcCBwcm9zIGluIHRoZSB3b3JsZCBhcmUgdHJlYXRlZCB0aGUgZXhhY3Qgc2FtZSBhcyB0aGUgYXZlcmFnZSBKb2UgICBwdXQgdXAgdGhlIG1vbmV5IGFuZCB5b3UgZ2V0IGEgc2VhdCBhdCB0aGUgdGFibGUuIApJdCB2ZXJ5IHRyZW5kIGhlYXZ5LiBBbHNvLCBpdCBub3QgdGVjaG5pY2FsbHkgaW4gdGhlIGJ1c2luZXNzIHNjaG9vbCwgc28geW91IGNvdWxkIHBvc3NpYmx5IG1ham9yIGluIGZpbmFuY2UgdGhlbiBtaW5vciBpbiBlY29uLklmIHlvdSBwbGFuIG9uIG1vdmluZyB0byB0aGUgY2l0eSBvZiBOZXdiZXJyeSwgaGVyZSBhcmUgc29tZSB0aGluZ3MgSSBsZWFybmVkIGFib3V0IE5ld2JlcnJ5LkNvbWNhc3QgaXMgdGhlIG9ubHkgbm9uIHNhdGVsbGl0ZSBjYWJsZSBwcm92aWRlci5FbGVjdHJpY2l0eSBhbmQgd2F0ZXIgYXJlIHBhaWQgdG8gdGhlIENpdHkgb2YgTmV3YmVycnkuR2V0dGluZyB0aGUgZWxlY3RyaWNpdHkgd2F0ZXIgcHV0IGluIHlvdXIgbmFtZSBpcyAkMzAgaXNoLiBJZiB5b3UgdXNlIGEgY3JlZGl0IGNhcmQgdGhlcmUgaXMgYSBmZWUuIApXaW5uaW5nIGNvbWJpbmF0aW9ucyB3aWxsIGNyaXNzIGNyb3NzLCB1c2UgZGlhZ29uYWxzLCBNcywgV3MsIHNxdWlnZ2xpZXMsIGN1cmx5IGN1ZXMsIGFuZCBvdGhlciBkaXJlY3Rpb25zLCBkZXBlbmRpbmcgb24gdGhlIGdhbWUuIApCdXQgb24gaW5jb21lLCBub3QgdGhlaXIgd2VhbHRoQ291bmNpbCB0YXggb24gYSAxN20gbHV4dXJ5IG1hbnNpb24gaW4gQmVsZ3JhdmlhLCBMb25kb24/IDEsMzc2LiBQaG90b2dyYXBoOiBUb2xnYSBBa21lbi9BRlAvR2V0dHkgSW1hZ2VzV2Uga25vdyB0aGF0IGdpYW50IG11bHRpbmF0aW9uYWxzIGFyZSBlbmdhZ2VkIGluIGluZHVzdHJpYWwgc2NhbGUgdGF4IGF2b2lkYW5jZS4gClNjaGlycm1hY2hlciBhbmQgb3RoZXIgY29tbWVudGF0b3JzIGNvbmp1cmUgdXAgYSBzb3J0IG9mIHJldmVyc2UgTWFsdGh1c2lhbiBuaWdodG1hcmU6IEdlcm1hbnkgYXMgYSBsYW5kIG9mIHByZWRvbWluYW50bHkgZ2VyaWF0cmljIHRvd25zIGFuZCBjaXRpZXMgc2V0IGluIGEgZGVzZXJ0ZWQsIGNyZWVwaW5nIGNvdW50cnlzaWRlLgpTTyB5ZWFoLCB0aGVyZSBhcmUgcXVpdGUgYSBsb3Qgb2YgcHJlc3NpbmcgcHJvYmxlbXMuIEkgY2FuIGV2ZW4gYmVnaW4gdG8gZ2V0IGludG8gYW55IG9mIHRoZW0gaW4gYSBodWdlIGFtb3VudCBvZiBkZXRhaWwgaW4gb25lIGNvbW1lbnQgd2l0aG91dCBoaXR0aW5nIDEwayBjaGFyYWN0ZXJzLCBzbyBpZiB5b3UgaGF2ZSBhbnkgbW9yZSBzcGVjaWZpYyBxdWVzdGlvbnMsIEkgYmUgbW9yZSB0aGFuIGhhcHB5IHRvIHNoYXJlIHdoYXQgSSBrbm93IHdpdGggeW91IQpJIGFtIHR1cmtpc2gsIGJvcm4gYW5kIHJhaXNlZCBpbiBHZXJtYW55IGFuZCBJIHJlZ3VsYXJseSB2aXNpdCBmYW1pbHkgaW4gVHVya2V5LiBQb2xpdGljYWxseSBpdCBpcyB0ZW5zZSBidXQgb3RoZXJ3aXNlIGl0J3MgYWxyaWdodCBhbmQgdGhlIHBlb3BsZSBhcmUgc28gd2FybSBhbmQgd2VsY29taW5nLiBBIGxvdCBvZiBwZW9wbGUgdGFsayBzaGl0IGFib3V0IEVyZG9nYW4uIApUaGUgbWFrZXJzIG9mIHRoZXNlIGNoaXBzIGhhdmUgYSBnb29kIGRlYWwgb2YgZXhwZXJpZW5jZSBpbiB0aGUgZ2FtaW5nIGluZHVzdHJ5LCBhbmQgdGhpcywgYWxvbmcgd2l0aCB0aGVpciBwZXJzb25hbCBkZWRpY2F0aW9uIG1lYW5zIHRoYXQgdGhleSBoYXZlIHByb2R1Y2VkIGNoaXBzIHdpdGggYW4gYXV0aGVudGljIGNhc2lubyBsb29rIGFuZCBmZWVsIGFib3V0IHRoZW0uIFRoZXNlIGNoaXBzIGFyZSBhbG1vc3QgaWRlbnRpY2FsIHRvIHRob3NlIHVzZWQgaW4gc29tZSBvZiB0aGUgbW9zdCBmYW1vdXMgY2FzaW5vcyBpbiB0aGUgd29ybGQgYW5kIHdpbGwgZmVlbCBldmVuIG1vcmUgYXV0aGVudGljIHdpdGggdXNlLi4gClRoZXkgY2FuIGFsc28gYXBwZWFyIG9uIHRoZSBmb3JlYXJtcyBhbmQgbmVjay4gClRoZSBhbGx1cmUgb2YgcG9rZXIgb24gVFYgaXMganVzdCBUVi4gCldlIG9uIG15IDI0dGggYmlydGhkYXkgKHRoaXMgcGFzdCBOb3ZlbWJlcikgbXkgZ2lybGZyaWVuZCBhbmQgSSB3ZW50IGRvd25zdGFpcnMgdG8gZHJpbmsgd2l0aCBzb21lIGZyaWVuZHMuIApJbiBBdWd1c3QgMjAwMywgcG9rZXIgc3Rha2VzIGluY3JlYXNlZCB0byAkMiB1bmRlciBzdGF0ZSBwb2tlciBydWxlcywgcmlzaW5nIGFnYWluIGluIEp1bHkgMjAwNyB0byAkNSBmb3IgbGljZW5zZWQgcGFyaSBtdXR1ZWwgZmFjaWxpdGllcy4gQXMgYSByZXN1bHQsIGRlYWxlcnMgb2Z0ZW4gbWFkZSBtb3JlIHRoYW4gbWFuYWdlcnMuIEluc3RlYWQgb2YgaW5jcmVhc2luZyBtYW5hZ2Vycycgd2FnZXMsIExldnkgc2FpZCwgdGhlIGRlYWxlcnMnIHN1cnBsdXMgdGlwcyB3ZXJlIHVzZWQgdG8gcGF5IG1hbmFnZXJzLCBldmVuIHRob3VnaCBkZWFsZXJzIGRpZCBhbGwgdGhlIHdvcmsuIApXZSBoYXZlIGFsc28gbm90ZWQgeW91ciBraW5kIGdyYWRpbmcgb24gYXJlYXMgd2UgaGF2ZSB0byBpbXByb3ZlIG9uIGFuZCBvbiB3aGljaCB3ZSBjYW4gY2VydGFpbmx5IGRvIGJldHRlci4gClBva2Vyd2lzZSwgSSBsb3ZlIHRoZSBiaWtlLiBJdCBkZXBlbmRzIG9uIHdoYXQgeW91IGxpa2UgaW4gYSByb29tLCBidXQgdGhlIGJpa2UgaXMgcmVhbCBiaWcsIGxvdHMgb2Ygc3BhY2UsIGFuZCB3ZWxsIGxpdC4gQWx3YXlzIGNvb2wgdG8gcGxheSBvbiBhIEZyaWRheSBuaWdodCB3aGlsZSB0aGUgbGF0YiBiaWcgZ2FtZSBpcyBnb2luZyBvbi4KU2hpdCBsaWtlIHRoaXMgaXMgd2h5IEkga25vdyB0aGF0IHdlIGZ1Y2tlZC4gVG9vIG1hbnkgc3R1cGlkIHBlb3BsZSBvbiB0aGUgcGxhbmV0LiB3aGF0IGRvIHdlIGhhdmUgbGVmdC4gMTAgMjAgeWVhcnMgYW5kIHlvdSBhbGwgZ29ubmEgYmUgbGlrZSwgIkZVQ0tJTkcgU0FWRSBNRS4iCkRvIGhlciBhbmQgeW91cnNlbGYgYSBmYXZvciBhbmQgbW92ZSBvbi4gQWxzbywgY2FsbCBhIHRoZXJhcGlzdCB0b21vcnJvdyBhbmQgZ2V0IGhlbHAuIERvbiBldmVuIHRoaW5rIG9mIHRyeWluZyB0byBraWxsIHlvdXJzZWxmLiAKVGhlcmUncyBvbmNlIHdhcyBhIG11cmRlcm91cyBmb3ggLyBXaG8gbGlrZWQgdG8ga2lsbCBzaW5uZXJzIGZvciBzaG9ja3MgLyBUaGVuIG9uZSBkYXkgaGUgZ290IGNhdWdodCAvIEFuZCB3YXMgYmVhdGVuLCB3ZSB0aG91Z2h0IC8gVW50aWwgc29tZW9uZSBjcmllZCAiV2hhdCdzIGluIHRoZSBib3g/IgpVbmZvcnR1bmF0ZWx5LCBpdCBkb2Vzbid0IG1hdHRlciB3aGF0IHRoZSBvZmZpY2UgdGVsbHMgeW91ICBubyBvbmUgaGFzIGFueSBjbHVlIHdoYXQgeW91ciBpbnN1cmFuY2Ugd2lsbCBhY3R1YWxseSBjb3ZlciB1bnRpbCBzZXJ2aWNlcyBoYXZlIGJlZW4gcmVuZGVyZWQgYW5kIHlvdXIgaW5zLiAKWnl6eWZlciAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyNSBkYXlzIGFnbwpZb3UgcHJvYmFibHkgdGhpbmssICJ3aGF0IGlzIHdyb25nIHdpdGggaGltIHRoYXQgaGUgZGF0aW5nIGEgbGl0dGxlIGtpZD8iICAgbm90LCAid293IHRoYXQgMTEgeWVhciBvbGQgbXVzdCBiZSBzbyBjb29sLiIgQmVjYXVzZSBpdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIHRoZSB5b3VuZ2VyIHBlcnNvbiwgYW5kIGV2ZXJ5dGhpbmcgdG8gZG8gd2l0aCB0aGUgb2xkZXIgb25lICJwcmV5aW5nIiBvbiB5b3VuZ2VyIHBlb3BsZSB3aG8gbWlnaHQgbm90IGJlIGF3YXJlIHdoZW4gdGhleSBiZWluZyBpbmFwcHJvcHJpYXRlLi4gCkFsbGVzIGluIGFsbGVtIGJpbiBpY2ggYmlzaGVyIGhvY2h6dWZyaWVkZW4gd2llIG1laW4gTmV1c3RhcnQgaW4gZGllc2VzIFByb2pla3QgbHVmdCB1bmQgZnJldSBtaWNoIHNjaG9uIGF1ZiB3ZWl0ZXJlIGVyZm9sZ3JlaWNoZSBQb2tlcnNlc3Npb25zLiAKWW91IGNhbiBhbHNvIGxvb2sgYXQgbW92aW5nIHlvdXIgY2xlYXRzIGJhY2sgYSAzIDUgbWlsbGltZXRlcnMsIGVzcGVjaWFsbHkgaWYgeW91IGhhdmUgbGFyZ2VyIGZlZXQuIFlvdSBtYXkgbmVlZCB0byBsb3dlciB5b3VyIHNlYXQgYSBoYWlyIHRvIGFjY29tb2RhdGUgZm9yIHRoYXQgY2hhbmdlLgpZb3VyIG5ldyBwYXJ0bmVyIGlzbiBnb2luZyB0byBsZXQgeW91IG1vdmUgaW4sIGl0IHRvbyBzb29uLiAKQWZ0ZXIgYWxsLCB5b3UncmUgZWl0aGVyIGhvbGRpbmcgc29tZW9uZSB1cCwgYmVpbmcgaGVsZCB5b3Vyc2VsZiwgb3Igc3BvdHRpbmcgeW91ciB0ZWFtbWF0ZXMgdG8gZW5zdXJlIHRoZXkgZG9uJ3QgZ2V0IGluanVyZWQuIApTb21lIGZyZWUgcG9rZXIgd2Vic2l0ZXMgb2ZmZXIgWW91IHRvIGZ1bmQgWW91ciBwb2tlciBhY2NvdW50IHdpdGggYSByZWFsIG1vbmV5IGRlcG9zaXQgZm9yIFlvdSwgaWYgWW91IG9wZW4gYSBuZXcgcG9rZXIgYWNjb3VudCB2aWEgdGhlaXIgYWZmaWxpYXRlIGxpbmsuIApBbHNvLCB0aG91Z2ggaXQgYmVlbiBhIHdoaWxlIHNpbmNlIEkgc3dvdHRlZCB1cCBvbiBteSBURjIgbG9yZSwgSSB0aGluayBIZWF2eSBtaWdodCBoYXZlIGFjdHVhbGx5IGJ1aWx0IHRob3NlIGd1bnMgaGltc2VsZi4gQWZ0ZXIgYWxsLCBoZSBjbGFpbXMgdGhleSBmaXJlIGN1c3RvbSB0b29sZWQgY2FydHJpZGdlcywgYW5kIGluIHRoZSBmaXJzdCBQb2tlciBOaWdodCBhdCB0aGUgSW52ZW50b3J5IGhlIHN0YXRlcyB0aGF0IG9uZSBvZiBoaXMgaG9iYmllcyBpbnZvbHZlcyBjb2xsZWN0aW5nIG9sZCBjb2lucyBhbmQgbWVsdGluZyB0aGVtIGRvd24gdG8gbWFrZSBjdXN0b20gYnVsbGV0cy4gU28gd2hpbGUgaGUgbWF5IG5vdCBoYXZlIHRoZSBwYXJ0aWN1bGFyIHNtYXJ0cyBhc3NvY2lhdGVkIHdpdGggdGhlIE1lZGljIGFuZCB0aGUgRW5naW5lZXIsIGhlIHN0aWxsIGEgZGVjZW50IGd1bnNtaXRoLi4gClRoYXQgd2hlcmUgYWxsIHRoZSBiaWcgbW9uZXkgaXMgbWFkZS4gCkluIEZlYnJ1YXJ5LCAiQmxhY2sgUGFudGhlciwiIHRoZSBtb3ZpZSB2ZWhpY2xlIGZvciB0aGUgTWFydmVsIENvbWljcyBzdXBlcmhlcm8sIGJlY2FtZSB0aGUgaGlnaGVzdCBncm9zc2luZyBtb3ZpZSBieSBhIGJsYWNrIGRpcmVjdG9yIG9mIGFsbCB0aW1lLiAKVGhlIFBva2VyIEZhY2Ugb2YgV2FsbCBTdHJlZXQKSGUgd2FzIHVwc2V0LiBSZWZ1c2VkIHRvIGFuc3dlciBjYWxscyBhYm91dCBkYXljYXJlLCBzY2hvb2wgc3R1ZmYsIG9yIHNjaGVkdWxlIGNoYW5nZXMuLiAKMi4gCkdlb3JnZSBKb3ZpY2hldmljaApBdWZmZW5iZXJnIHdvbiBhbiBhd2FyZCBmb3IgdGhlIHJlc2VhcmNoIGhlIGRpZCBpbiBJbmRvbmVzaWEgd2hpY2ggd2FzIGJhc2VkIG9uIGZhY3RzIGhlIGNvbXBsZXRlbHkgbWFkZSB1cCB0byBiZSB0cnVlLiBJIGp1c3Qgd2F0Y2hlZCBhIFRFRCB2aWRlbyB0aGF0IHlvdSBtaWdodCB3YW50IHRvIHdhdGNoLiBWUE5zIGNhbiBiZSBleHBlY3RlZCB0byBwcm92aWRlIGNvbXBsZXRlIGFub255bWl0eSAxMDAlIG9mIHRoZSB0aW1lIHRob3VnaC4gUElBIGlzIGEgZ29vZCBvbmUgYnV0IGV2ZW4gaXQgc3VnZ2VzdHMgdG8gdXNlIHR3byBWUE5zIGlmIHlvdSBhcmUgcmVhbGx5IHdvcnJpZWQgYWJvdXQgaXQuCkp1c3QgYmVjYXVzZSB5b3UgYSBoYXJtbGVzcyBidXR0ZXJmbHkgbm93LCBteSBsaXR0bGUgU3RhY3ksIGRvZXNuIG1lYW4geW91IHdvbiBncm93IHVwIHRvIGJlIGFuIHVuc2NydXB1bG91cyBoYXJwaWUuIApGb3VydGgsIHRoZSBudW1iZXIgb2YgYm9vc3RlcnMgcmVxdWlyZWQgYW5kIHRoZSBsZW5ndGggb2YgcHJvdGVjdGlvbiB3YXNuJ3QgdmV0dGVkLiAKQXMgYSBtYXR0ZXIgb2YgZmFjdCwgYXJ0aWZpY2lhbCBqYWNrIG8gbGFudGVybnMgYXJlIG11Y2ggbW9yZSBjb21tb24gdGhlc2UgZGF5cyB0aGFuIHJlYWwgb25lcywgYW5kIGl0J3MgYmVlbiB0aGF0IHdheSBmb3IgbWFueSB5ZWFycy4gQXMgdXN1YWwgaW4gb3VyIGluY3JlYXNpbmdseSBzZWRlbnRhcnkgbGlmZXN0eWxlLCB3ZSdkIHJhdGhlciBidXkgaXQgdGhhbiBtYWtlIGl0LiAKVW5jbGUgRnJlZCBhbmQgSSBhZ3JlZWQgb24gJDEwLjAwIGEgbW9udGggcGF5bWVudHMuIApJIHRob3VnaHQgdGhlIG1hbnkgV2VzdGVybiBhZHZlbnR1cmVzIGluIHRoZSBNaWRkbGUgRWFzdCBoYXZlIHByb3ZlZCB0aGlzIHRvIHRoZSBwZW9wbGUgYWxyZWFkeS5BaCB5ZXMsIGNsYWltaW5nIG90aGVycyBkb24gbG9vayBhdCB0aGUgZGV0YWlscyBhbmQgdGhlbiBtYWtpbmcgYSBtYXNzaXZlIGdlbmVyYWxpemF0aW9uIGFib3V0IGhvdyBub24gZGVtb2NyYXRpYyBjb3VudHJpZXMgY2Fubm90IGJlY29tZSBkZW1vY3JhdGljIGJlY2F1c2Ugb2YgdGhlIG1pZGRsZSBlYXN0LiAKSSB5b3UgYnV0IDcgeWVhcnMgYWdvIHRoYXQgZGlkbiBsZWF2ZSBjb3Jwb3JhdGUuIENvcnBvcmF0ZSBsaWZlIHN1Y2tzIG1hbi4gUG9saXRpY3MgYW5kIHRveGljIHBlb3BsZSBhcmUgbWFueSB0aW1lcyB1bmF2b2lkYWJsZSB1bmxlc3MgeW91IHN0YXJ0IHlvdXIgb3duIHRoaW5nLiBTdXJlIHlvdSBjYW4gZW5kdXJlIGZvciB0aGUgZXh0cmEvc3RhYmxlICQgYW5kIHNjaGVkdWxlZCB3b3JrIGhvdXJzLCBidXQgaXQgZnJlYWtpbmcgc3Vja3MhISEgWW91IGFyZSBhYmxlIHRvIHBheSByZW50IGFuZCBsaXZlIHdoaWxlIGRvaW5nIHNvbWV0aGluZyB5b3UgZW5qb3kuIEkgc2F5IGRvdWJsZSBkb3duLCByZW1vdGl2YXRlLCBhbmQgcmVpbnZlbnQgeW91cnNlbGYuIEEgYml0IGh5cG9jcml0aWNhbCBmb3IgbWUgYmVjYXVzZSBJIGtlZXAgZ2V0dGluZyBzdWNrZWQgaW50byBtb3JlIHllYXJzLCBidXQgdGhlIHRpbWUgZGVmaW5ldGx5IGRvZXNuIHNvdW5kIHdhc3RlZCB0byBtZS4KUG9ja2V0UXVhZHNPbmx5IHUKSSBub3QgbmVjZXNzYXJpbHkgc2F5aW5nIHlvdSBiZWxpZXZlIHRoYXQsIGJ1dCBJIGRvIGhlYXIgdGhpcyBraW5kIG9mIHJlYXNvbmluZyBmYXIgdG9vIG9mdGVuIGFuZCB5b3VyIHdvcmRpbmcgbWFkZSBtZSB0aGluayBvZiBpdC4KRmx5aW5nYnJvd25pZXBpZSAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMjggZGF5cyBhZ28KRGVyIFRheHB1bmt0IChUUCkgaXN0IGRlciBHcnVuZHdlcnQgZWluZXIgTGVpc3R1bmcsIGVyIGlzdCBpbiBkZXIgZ2FuemVuIFNjaHdlaXogZ2VnZWJlbi4gTWl0IGRpZXNlbSB1bmQgZGVtIGVpZ2VudGxpY2hlbiBUYXJpZndlcnQvVGF4cHVua3QgV2VydCAoVFBXKSwgd2lyZCBkaWUgTGVpc3R1bmcgZWluZXMgQXJ6dGVzL1NwaXRhbCBhYmdlZ29sdGVuLgpUaGUgc2VybW9uIHdhcyBqdXN0IHNvIHJhbmRvbSBhbmQgdW5wbGFubmVkLiAKQW55dGhpbmcgb3ZlciAxMDAgaXMgc28gaG90IHRoYXQgYmFkIHNoaXQgc3RhcnRzIGhhcHBlbmluZy4gRG9pbmcgYW55dGhpbmcgYXRobGV0aWMgb3V0c2lkZSB3aXRob3V0IHByb3BlciBjb25zaWRlcmF0aW9ucyBpcyBqdXN0IGEgcmVjaXBlIGZvciBoZWF0IHN0cm9rZS9oZWF0IGV4aGF1c3Rpb24sIHdpdGhvdXQgQUMgZWxkZXJseSBwZW9wbGUgYW5kIGJhYmllcyBhcmUgYXQgcmlzayBvZiBzdHJhaWdodCB1cCBkeWluZywgc3VuIGJ1cm4gaGFwcGVucyByZWFsIHF1aWNrIGlmIHlvdSBsaWdodCBza2lubmVkLi4gClJvb3RpbmcgZm9yIHlvdS4gCk9uZSBvZiB0aGUgc2l0ZSB0aGF0IGNvbWVzIHRvIG1pbmQgaXMgJ3Bva2VyIGxpc3RpbmcnIHlvdSBtYXkgd2FudCB0byBjaGVjayBpdCBvdXQuIApUaGUgb25seSByZW1vdmFsIGhhcyBiZWVuIHByaXZhdGUsIGFuZCBDTiBhcyBhbHdheXMgaGF2ZSBkb25lIGZ1Y2sgYWxsIHRvIHJlbW92ZSBzbm93IHRoZXkgcHVzaCBvZmYgdGhlIHJhaWwgYnJpZGdlcyBvbiBMYXdyZW5jZS4gCk1hdGVybmFsIG1vcnRhbGl0eSByYXRlcyBoYXZlIHBsdW1tZXRlZCBmcm9tIDEsNDAwIHBlciAxMDAsMDAwIGxpdmUgYmlydGhzIGluIDE5OTAgdG8gMzUwIGluIDIwMTUsIGFjY29yZGluZyB0byB0aGUgSU1GLi4gCklmIHRoZXkgYWNjdXNlIGEgcmFuZG9tIHBlcnNvbiwgYW5kIGFyZSB3cm9uZywgdGhleSBsb3NlLiAKQ2hpbmEgc2xvd2x5IGNvbnF1ZXJzIHlldCB3ZSBiZWxpZXZlIHdlJ3JlIHN0aWxsIGF0IHBlYWNlOyB0aGF0J3MgYnkgZGVzaWduLiBDdXJpb3VzbHksIHdlIG9uY2UgZm91Z2h0IHRoaXMgd2F5IHRvbyB0aGUgQ29sZCBXYXIuLiAKSSB0aGluayBJIGtub3cgd2hhdCB0aGV5IHdlcmUgZ29pbmcgZm9yLCBidXQgaXQgd2FzIHNlcmlvdXNseSBwb29ybHkgd3JpdHRlbi5WaXZpZW5uZSBBbm90aGVyIG9uZSB3aG8gSSB0aGluayBJIGtub3cgd2hhdCB0aGV5IHdlcmUgZ29pbmcgZm9yIGJ1dCB0aGV5IHNldmVyZWx5IG1pc3NlZCB0aGUgbWFyay4gSSBmZWVsIGxpa2UgYSBsb3lhbGlzdCBtYWdlIHdobyB3YXMgYXQgbGVhc3Qgd2lsbGluZyB0byBub3QgaGF0ZSB5b3UgZm9yIGEgZGlmZmVyZW5jZSBpbiBvcGluaW9uIHdvdWxkIGhhdmUgYmVlbiBiZXR0ZXIgd3JpdHRlbi4gSGVyIHBlcnNvbmFsIHN0b3J5bGluZSBpcyB0cmFnaWMsIGJ1dCBtYW4gb2ggbWFuLCBoZXIgcGV0dGluZXNzIGlzIGdyYXRpbmcgYWZ0ZXIgbXVsdGlwbGUgcGxheXRocm91Z2hzLiAKV2lsbFRodWcgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KVGhlbiBzaGUgdHJpZWQgdG8gZ2V0IG1lIHRvIHRhbGsgYWJvdXQgb3VyIGlzc3Vlcywgd2hpY2ggYWxzbyBkaWRuIGhhcHBlbi4gV2UgZGlzY3VzcyBvdXIgaXNzdWVzIHByaXZhdGVseSBhbmQgcmVzb2x2ZSB0aGVtLiAKQXJ0aXN0cyB0ZW5kIHRvIHVuZGVydmFsdWUgdGhlaXIgd29yayBpZiBhbnl0aGluZy4gU3RvcCBmZWVsaW5nIGd1aWx0eSBhbmQgYmUgcHJvdWQgYW5kIGhhcHB5Li4gCkFsd2F5cyByZWFkIHRoZSBpbnN0cnVjdGlvbnMgYW5kIGNhdXRpb25zIGFib3V0IGVzc2VudGlhbCBvaWxzIGJlZm9yZSBwdXJjaGFzaW5nIHRoZW0uIApIb3cgY2FuIEkgY29udGludWUgdG8gaG9sZCBvZmYgd2hlbiBhbGwgSSBjYW4gdGhpbmsgYWJvdXQgaXMgY3VtbWluZz8gSG93IGNhbiBJIHBvc3NpYmx5IGVkZ2UgMiBvciAzIG9yIDEwIG1vcmUgdGltZXMgd2l0aG91dCBnb2luZyBvdmVyPyBJdCdzIGFib3V0IGRpc2NpcGxpbmUgYW5kIG1hbmFnaW5nIHRoZSBjb25mbGljdCBvZiB3aGF0IHRoZSBib2R5IHNheXMgaXQgd2FudHMgd2l0aCB3aGF0IHRoZSBicmFpbiBzYXlzIGl0IHdhbnRzLi4gClRoZXkgZmVsdCBzbyBiYWQuLiAKRGVhbHMgbXVzdCBiZSBvZiBlaXRoZXIgc2lnbmlmaWNhbnQgZGlzY291bnQgb3IgZGlmZmljdWx0IHRvIGZpbmQgYW5kIHJlYWRpbHkgYXZhaWxhYmxlIHRvIHRoZSB3aWRlciBjb21tdW5pdHkuCk1hcmdhcmV0IGxvdmVkIGJvd2xpbmcgYW5kIGNvb2tpbmcsIGVzcGVjaWFsbHkgSXRhbGlhbiBmYXZvdXJpdGVzLCBsaWtlIHNwYWdoZXR0aSwgcGFzdGEgYW5kIGJlYW5zIGFuZCB0aGUgYmVzdCBjaGlja2VuIHNvdXAgYW5kIEl0YWxpYW4gZHJlc3NpbmcgaW4gUGV0ZXJib3JvdWdoLiBNYXJnYXJldCB3aWxsIGFsc28gYmUgZ3JlYXRseSBtaXNzZWQgYnkgaGVyIGxvbmcgdGltZSBwb2tlciBidWRkaWVzLiAKV2hhdCBtYW55IG9mIHVzIGRvbid0IHJlYWxpemUgaXMgdGhhdCBtZW4gZGlzcmVzcGVjdCB1cyB3aXRob3V0IHVzIGV2ZW4gbm90aWNpbmcuLiAKTG9pbiBkZSBzIHBsYWluZHJlLCBsZXMgcG9wdWxhdGlvbnMgcGF1dnJlcyBkdSBub3JkIGRlIGwgKFBvbG9nbmUsIExpdHVhbmllKSwganVzcXUgem9uZXMgbGVzIHBsdXMgcmVjdWxlcyBkZSBsIHNlcHRlbnRyaW9uYWxlIHVzcmVudCBkZSBsYSBiZXJjZSBwb3VyIGxhYm9yZXIgdW5lIHNvcnRlIGRlIGJpcmUsIGJvaXNzb24gbGUgcGx1cyBzb3V2ZW50IGZlcm1lbnRlIGNvbm51ZSBzb3VzIGRpdmVycyBub21zIChwYXJzdCwgYmFydHNoLCBiYXJ0c2NoLCBiYXJzemN6OyB0b3VzIG1vdHMgZGFucyBsZXNxdWVscyBvbiBhIGJpZW4gdm91bHUgbGlyZSBjZWx1aSBkZSBsYSBiZXJjZSksIHRlcm1lcyBxdWkgbmUgc29udCBjZXBlbmRhbnQgcGFzIHNhbnMgdm9xdWVyIGNldHRlIGZhbWV1c2Ugc291cGUgcnVzc2UsIGxlIGJvcnRzY2gsIHF1aSB0YWl0IGNvbmZlY3Rpb25uZSBwYXIgbGVzIFNpYnJpZW5zIGF2ZWMgZGVzIGZldWlsbGVzIGRlIGJlcmNlIGF1eHF1ZWxsZXMgb24gYWpvdXRhaXQgdW5lIHBhdHRlIGQgZ2liaWVyIHRyYWRpdGlvbm5lbCBkZSBjZXR0ZSB6b25lIGdvZ3JhcGhpcXVlLCBkIGwgZGVzIG5vbXMgdmVybmFjdWxhaXJlcyBkZSBsYSBiZXJjZSwgcGF0dGUgZCAsIHF1aSB0cmFuc2NyaXQgZ2FsZW1lbnQgbGUgbm9tIGxhdGluIGJyYW5jYSB1cnNpbmEsIGRlIGJyYW5jYSwgcGF0dGUgZXQgdXJzdXMsIG91cnMuIENldHRlIHBycGFyYXRpb24gcyBlbiBwcm9jZGFudCBjb21tZSBjZWNpOiBzaSBvbiBhY2N1bXVsZSBsZXMgdGlnZXMgZXQgbGVzIHB0aW9sZXMgYnJpc3MgZGFucyB1biB0b25uZWF1IGV0IHF1IHZlcnNlIGRlIGwgcG91ciBjb3V2cmlyIGxlIHRvdXQsIGFwcnMgdW4gbW9pcyBkZSBmZXJtZW50YXRpb24gb24gZW4gcmV0aXJlIHVuZSBtYXNzZSBkIGdvdCBhaWdyZWxldCwgZXQgYXNzZXogYWdyYWJsZSwgZXhwbGlxdWFpdCBUaG9yZSBlbiAxODAzLCByZXByZW5hbnQgR2lsaWJlcnQuIApBbmQgc29tZXRpbWUgaW4gOTggOTkgdGhlcmUgd2FzIGEgcGxldGhvcmEgb2YgaW1wb3J0cyBhdCBHcmFuZCBNYXJ0IGFuZCBDYXJyZWZvdXIuIEtyb21iYWNoZXIsIE9sZCBQZWN1bGllciwgTGVmZmUsIE9ldHRpbmdlciwgZXRjLi4gCkkgYWxzbyByZXBlYXRlZCBleHBsYWluZWQgaG93IHNoaXQgd29ya3MgaW4gcmVhbCBsaWZlIGFuZCBob3cgdGhhdCBpcyBpbiBzdGFyayBvcHBvc2l0aW9uIHRvIGJvdGggaG93IHRoZSBnYW1lIGhhbmRsZXMgbGF5ZXJzIGFuZCBob3cgdGhlIE9QIHRoaW5rIGxheWVycyB3b3JrLi4gCkdvb2QgbHVjayB0byB5b3UgYW5kIHlvdXJzLgpBbGwgdGhlIG1hdGVyaWFsIGlzIHdyaXR0ZW4sIGJ1dCBJJ20gc3RpbGwgd3JpdGluZy4gClRhbGsgdG8geW91ciByaGV1bWF0b2xvZ2lzdCBvciBvdGhlciBkb2N0b3IgZm9yIHlvdXIgZmlicm8gYWJvdXQgaGF2aW5nIHR3aW5zIG5vdywgYW5kIHRhbGsgdG8geW91ciBPQiBhYm91dCBmaWJyby4gQ2hhbmNlcyBhcmUsIHlvdXIgT0IgZG9lc24ga25vdyBtdWNoIGFib3V0IGZpYnJvLCBidXQgdGhleSBuZWVkIHRvIGtub3cgeW91IGhhdmUgaXQuIApUaGUgbmljZSBnaXJsIGhhZCBhIENoaW5lc2UgbG9vayBhYm91dCBoZXIsIHZlcnkgcGxlYXNhbnQsIGZhaXIgYW5kIHlvdXRoZnVsIGZlYXR1cmVzIGFsYmVpdCBhIGJpdCBzZXJpb3VzIGxvb2tpbmcuIEhlciBoYWlyIHdhcyBqZXQgYmxhY2ssIHZlcnkgbG9uZyBhbmQgc3RyYWlnaHQsIHdvcm4gaW4gYSBwb255dGFpbC4gU2hlIHNjb3JlZCBhbiA4LiBUaGUgb2xkZXIgd29tYW4gZGlkIG5vdCBoYXZlIGFuIHVuYXR0cmFjdGl2ZSBmYWNlLCBpdCBqdXN0IHRoYXQgc2hlIGxvb2tlZCBoZXIgYWdlLCBvciBtb3JlLiBGYWlybHkgYW5ndWxhciwgYWxtb3N0IEV1cm9wZWFuIGZlYXR1cmVzIGFuZCBwZXJtZWQgYnJvd24gYmxhY2sgaGFpci4gU2hlIGhhZCBzb21lIGFjbmUgc2NhcnMuIFNoZSBnZXRzIGEgNC4gQXZlcmFnZTogNi8xMAoiTXJzLiAKSWYgVG95b3RhIHBsYXlzIGl0cyBjYXJkcyByaWdodCwgb3RoZXIgYXV0b21ha2VycyB3aWxsIGhhdmUgdG8gcGF5IGxpY2Vuc2luZyBmZWVzIHRvIFRveW90YSBmb3IgZXZlcnkgZnVlbCBjZWxsIGNhciB0aGV5IGJ1aWxkLiAiVG95b3RhIGlzIGJ1aWxkaW5nIHRoZWlyIG93biBwb3dlciBjb250cm9sbGVycyBhbmQgbW90b3JzLCBhbmQgdGhleSBoYXZlIGEgam9pbnQgdmVudHVyZSB3aXRoIFBhbmFzb25pYyB0byBidWlsZCBiYXR0ZXJpZXMsIiBzYXlzIGFuYWx5c3QgRHVsZWVwLiAiRXZlcnlvbmUgZWxzZSBpcyBkZXBlbmRpbmcgb24gbGFyZ2UgVGllciAxIHN1cHBsaWVycyBsaWtlIFNpZW1lbnMgb3IgSGl0YWNoaSBmb3IgdGhlaXIgY29tcG9uZW50cy4iClRoZSBPQUEgaXMsIGFjY29yZGluZyB0byBHb29nbGUsICJhIGdsb2JhbCBhbGxpYW5jZSBvZiB0ZWNobm9sb2d5IGFuZCBhdXRvIGluZHVzdHJ5IGxlYWRlcnMgY29tbWl0dGVkIHRvIGJyaW5naW5nIHRoZSBBbmRyb2lkIHBsYXRmb3JtIHRvIGNhcnMgc3RhcnRpbmcgaW4gMjAxNC4iIEFsdGhvdWdoIEdvb2dsZSBkb2Vzbid0IHNwZWNpZmljYWxseSBmcmFtZSB0aGUgc2l0dWF0aW9uIGFzIGEgbWF0dGVyIG9mIGNvbXBldGl0aW9uIG9yIGNvbmZsaWN0LCBvciBldmVuIGFkZHJlc3MgaXRzIHJpdmFscyBieSBuYW1lLCBpdCdzIGNsZWFyIHRoYXQgZ2FpbmluZyBtYXJrZXQgc2hhcmUgd291bGQgYmUgYSBiZW5lZml0IG9mIHRoZSBPQUEncyBzdWNjZXNzLiBUaGlzIG1lYW5zIHRoYXQgZXZlbiBpZiBBcHBsZSBoYXMgYSBsZWFkIG9uIHZlaGljbGUgaW50ZWdyYXRpb24sIEdvb2dsZSBhbmQgQW5kcm9pZCBhcmUgcGxhbm5pbmcgdG8gZmlnaHQgYmFjaywgYW5kIHRoZXkgYWxyZWFkeSBoYXZlIGEgZ3JvdXAgb2YgYXV0byBtYW51ZmFjdHVyZXJzIHdobyB3YW50IHRvIHVzZSB0aGVpciBpbm5vdmF0aW9ucyBpbiBuZXcgY2FyIG1vZGVscy4gVGhlIGZpcnN0IG1lbWJlcnMgdG8gam9pbiBHb29nbGUgaW4gdGhlIE9BQSB3ZXJlIGF1dG8gbWFudWZhY3R1cmVycyBBdWRpLCBHZW5lcmFsIE1vdG9ycywgSG9uZGEgYW5kIEh5dW5kYWksIGFuZCB0aGUgY29tcHV0ZXIgY2hpcCBtYWtlciBOVklESUEuIAogOSBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ29Gb3Igc3RhcnRlcnMgZWZmZWN0aXZlIHN0YWNrcyBtZWFuIHRoZSBzbWFsbGVyIHN0YWNrIG9mIHR3byBwbGF5ZXJzIGluIGEgaGFuZCwgeW91IG5vdCAkMjIwIGVmZmVjdGl2ZSBpZiBubyBvbmUgY2FuIGNvdmVyIGl0LCB5b3UgJDE1MCBlZmZlY3RpdmUgd2l0aCBVVEcgYW5kICQxMDAgZWZmZWN0aXZlIHdpdGggQ08uT25seSByZWFsIHJlYXNvbiBmb3IgY2hlY2tpbmcgaGVyZSBpcyBpZiB5b3UgYWdhaW5zdCBzb2xpZCBhZ2dyZXNzaXZlIG9wcG9uZW50cyBhZ2FpbnN0IHdob20geW91IHdhbnQgdG8gcHV0IHNvbWUgc3Ryb25nIGhhbmRzIGludG8gY2hlY2tpbmcgcmFuZ2UgYmVjYXVzZSB5b3UgZXhwZWN0IHRoZW0gdG8gb3ZlcmJsdWZmIHdoZW4geW91IGNoZWNrIGhlcmUsIGluIHlvdXIgYXZlcmFnZSAxLzIgZ2FtZSB0aGVyZSBpcyBnb2luZyB0byBiZSBjb25zaWRlcmFibHkgbW9yZSB2YWx1ZSBpbiBjaGFyZ2UgaGVhcnQgZHJhd3MgYW5kIGRlbnlpbmcgZ3V0dGVycyBhbmQgQSBlcXVpdHkgdGhhbiBpbiB0cnlpbmcgdG8gYmUgZGVjZXB0aXZlIHdpdGggYSBTUFIgb2YgMS5Zb3Ugc2hvdWxkIGhhdmUgYSB2ZXJ5IHNwZWNpZmljIHJlYXNvbiBmb3IgY2hlY2tpbmcgdGhpcyBmbG9wLCBuYW1lbHkgYSBnb29kIHJlYWQgb24gc29tZW9uZSBhcyBzb21lIGNvbWJpbmF0aW9uIG9mIG92ZXJibHVmZmluZyB5b3VyIGNoZWNrcyBhbmQgdW5kZXIgY2FsbGluZyB5b3VyIHZhbHVlYmV0cyBoZXJlIHdobyB5b3UgZXhwZWN0IHRvIGJlIHRyYXBwaW5nIGF0IGEgdmVyeSBoaWdoIGZyZXF1ZW5jeSBieSB0YWtpbmcgdGhpcyBsaW5lLiAKQ2VsZWJyaXR5IGdhcmRlbmVyIFAuIEFsbGVuIFNtaXRoIHdpbGwgYmUgYW1vbmcgdGhvc2Ugb24gaGFuZCwgYWxvbmcgd2l0aCBBcmthbnNhcyBBZ3JpY3VsdHVyZSBEZXBhcnRtZW50IG9mZmljaWFscywgZm9yIHRoZSBjZXJlbW9ueS4gCkhvdyB0byBSdW4gYSBIb21lIFBva2VyIFRvdXJuYW1lbnQKTm90IGp1c3QgQmFsYWtvdCwgSUFGIHdhcyByZWFkeSB0byBoaXQgSmVNIGNoaWVmIGhvbWUgYXQgQmFoYXdhbHB1ciB0b29OZXcgRGVsaGksIE1hciAwOTogSXQgd2FzIG5vdCBqdXN0IEJhbGFrb3QgdGhhdCB0aGUgSW5kaWFuIGFnZW5jaWVzIGhhZCBtYXBwZWQuIFRoZXJlIHdlcmUgc2V2ZXJhbCBvdGhlciB0YXJnZXRzIGluIFBha2lzdGFuIHRoYXQgaGFkIGJlZW4gb24gdGhlIHJhZGFyIG9mIHRoZSBhZ2VuY2llcy4gVGhlIG1hcHBpbmcgb3IgY29kaWZ5aW5nIG9mIHRoZXNlIHRhcmdldHMgd2FzIGFuRnJlZSBQcmVzcyBKb3VybmFsClVudGlsIGEgTkFTQSByb3ZlciBjb21lcyBhY3Jvc3MgYSBibGFjayBib3ggYW5kIGlzIGltbWVkaWF0ZWx5IGluZmVjdGVkIHdpdGggYSBjb21wdXRlciB2aXJ1cy4gVGhlIHZpcnVzIGlzIHRyYW5zbWl0dGVkIGJhY2sgdG8gZWFydGggYW5kIGhpdHMgdGhlIGludGVybmV0LiAKTm8gcGlyYWN5LCBldmVuICJhYmFuZG9ud2FyZSIuClRoZXNlIGFyZSB0aGluZ3MgdGhhdCB3ZSBnZXQgZmVlZGJhY2sgZnJvbSB1c2VycyB0aGF0IGl0IHNjYXJlcyB0aGVtIG9mZiBmcm9tIHBvc3RpbmcgYWdhaW4uIApBbmQgaWYgbWlycm9ybGVzcyBpcyB0aGUgZnV0dXJlIEkgbWF5IGp1c3QgaW52ZXN0IGluIHRoZSBuZXcgc3lzdGVtLiAKRXZlcnlvbmUgaW52aXRlcyBldmVyeW9uZSBlbHNlIGZvciB0ZWEuIApXaXRoIHRoZSB0aGlyZCBkYXksIHlvdSBjYW4gZ2V0IGRlZXBlciBpbnRvIHRoZSBwYXJrIGZvcm1hdGlvbnMsIHBvc3NpYmx5IGNoZWNrIG91dCBzdHVmZiBvbiB0aGUgZWFzdGVybiBzaWRlIG9yIHRoZSBjb2xvcnMgaW4gS29sb2IgQ2FueW9uIG91dHNpZGUgb2YgdGhlIG1haW4gcGFyayBjYW55b24ganVzdCBvZmYgSSAxNS4gQXNzdW1lIGl0IHN0aWxsIHJlcXVpcmVzIGEgTmF2YWpvIGd1aWRlLCBpdHMgYmVlbiBhIHdoaWxlLCBidXQgd2hlbiBJIHdhcyB0aGVyZSB0aGV5IGhhZCBhIGxvbmdlciBwaG90byB0b3VyIHNvIHlvdSBjb3VsZCB0YWtlIHlvdXIgdGltZSBhbmQgZ2V0IHNvbWUgc2hvdHMgd2l0aG91dCBwZW9wbGUuLiAKSGFuc3ZhbmhlbmdlbCAgMTUsOTI3IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkluIGZhY3QsIGl0IGlzIG91dHJpZ2h0IHNpY2tlbmluZy4gCkZpbmFsbHkgYmVhdCBLaW5nZG9tIEhlYXJ0cyBJSUksIGV2ZW4gZ290IFVsdGltYSBXZWFwb24gYW5kIEdvbGRlbiBIaWdod2luZCB3aGlsZSBJIHdhcyBhdCBpdC4gTWFuLCBJIGdvdCBzbyBtdWNoIG9uIG15IG1pbmQgYWJvdXQgaXQgYW5kIGhvdyBpdCBlbmRlZC4gVG8gc3VtIHVwIG15IHRob3VnaHRzOgpUaGUgW09DIEZhbmFydF0gZmxhaXIgc2VydmVzIGZvciBmYW5hcnQgbWFkZSBieSB5b3UuIEtlZXAgaW4gbWluZCB0aGV5IGhhdmUgcmVzdHJpY3Rpb25zIGluIHBsYWNlIHRvIGF2b2lkIHNwYW0uCk9wZW4geW91ciBtb3V0aCBhIGxpdHRsZSB3YXksIGFuZCBsZXQgdGhlIHdhdGVyIGRyYWluIG91dCBzbG93bHkuIFdoaWxlIHRoZSB3YXRlciBkcmFpbnMgZnJvbSB5b3VyIG1vdXRoLCBicmVhdGhlIGluIGFuZCBvdXQgdGhyb3VnaCB5b3VyIG5vc2UuLiAKSG93IGZhciBpcyBpdC4gQWxzbyBpcyB0aGVyZSBJbmRpYW4vdmVnZXRhcmlhbiBmb29kIGF2YWlsYWJsZSBpbiB0aGUgcmVzb3J0IG9yIG5lYXJieU1hciA0IFRoaXMgcGxhY2UgaXMgb24gdGhlIGJlYWNoIHNvIGp1c3QgZmV3IHN0ZXBzIGFuZCB0aGVyZSB5b3UgYXJlICBvbiB0aGUgYmVhY2guIFNpbmNlIHRoZXJlIGFyZSBubyBob3RlbCBvd24gYmVhY2hlcyBpbiBUaGFpbGFuZCBhbHNvIHBlb3BsZSBvdXRzaWRlIHRoZSBob3RlbCBjYW4gY29tZSB0byB0aGlzIGJlYWNoLiAKV2hlbiBjaXJjdWxhdGlvbiBpbXByb3ZlcywgdGhlIGJydWlzZSB3aWxsIGhlYWwgZmFzdGVyIGFuZCB0aGUgZGlzY29sb3JhdGlvbiB3aWxsIGZhZGUgYXdheSBmYXN0ZXIsIGFzIHdlbGwuIE1hc3NhZ2luZyBhbHNvIHNlZW1zIHRvIGZhY2lsaXRhdGUgdGhlIHNwZWVkeSBoZWFsaW5nIG9mIGJydWlzZXMuIApEb24gZ2V0IG1lIHdyb25nICBteSBoYWlyIGF0IHRoZSBtb21lbnQgaXMgbW9yZSBsaWtlIFNlbmF0b3IgQm94ZXIgdGhhbiBNcy4gRmlvcmlubyBsb25naXNoIGFuZCBraW5kYSBnaXJseSBhbmQgaXMgYWx3YXlzIGluIG15IHdheS4gCkl0IHdhcyBub3QgZm9yIGxhY2sgb2YgbW9uZXkuIApFdmVuIGlmIHlvdSBhc2sgS29yZWEgdG8gcmVkdWNlIFNlb3VsIEFQSSBieSBoYWxmICh3aGljaCBpcyB1bnJlYWxpc3RpYyBmb3Igc3VjaCBhIGRlbnNlbHkgcG9wdWxhdGVkIG1lZ2FjaXR5KSwgdGhhdCBzdGlsbCBBUUkgYXJvdW5kIDE1MHMgd2hpY2ggaXMgNXggb3ZlciB0aGUgc2FmZSByYW5nZS4gTGl2aW5nIHdpdGggQVFJIGFyb3VuZCAxMDBzIGlzIGEgaGVsbCBvZiBhIGxvdCBiZXR0ZXIgdGhhbiBTZW91bCBjb25zdGFudGx5IGJyZWFraW5nIDIwMHMuIApUb2RheSwgSSBoYWQgdGhlIGhvbm9yIGFuZCB0aGUgcHJpdmlsZWdlIG9mIGFjY29tcGxpc2hpbmcgYSAxOS41IHllYXIgdGFzay4gCkxpa2VzIGl0IHJvdWdoLiAKTHVmZnkgaXMgdGhlIG1haW4gY2hhcmFjdGVyLiBIaW0gc3RhbmRpbmcgd2l0aCB0aGUgYmlnIGRvZ3MgbWVhbnMgdGhhdCB3ZSBhcmUgb25seSB0aGF0IG11Y2ggY2xvc2VyIHRvIEVvUy4gCkl0J3MgYSBncmVhdCByZXNvdXJjZSBpZiB5b3UncmUganVzdCBzdGFydGluZyB0byB0aGluayBhYm91dCBzb21lIG9mIE5ldHJ1bm5lcidzIHN0cmF0ZWdpYyBjb21wbGV4aXR5LCBidXQgb3RoZXJ3aXNlIHlvdSBtYXkgYmUgZGlzYXBwb2ludGVkLi4gClRvIG1ha2UgaXQgd29yayB0aGUgcmlnaHQgY2hpbGQgd291bGQgaGF2ZSB0byBiZSB1cHdhcmRzIG9mIHRoZSBsZWZ0Li4gCk15IGh1c2JhbmQgY291bGRuIGNvbWUgdG8gdGhhdCBhcHB0IHNvIEkgc3VkZGVubHkgZmVsdCBzbyBhbG9uZSBldmVuIHRob3VnaCB0aGUgZG9jdG9yIHdhcyBpbmNyZWRpYmx5IG5pY2UgYW5kIHVuZGVyc3RhbmRpbmcuIApIZWF0aW5nLCBmb29kKSBoYXMgYm90aCBkaXJlY3QgYW5kIGluZGlyZWN0IGltcGFjdHMgb24gYSBjaGlsZCdzIHJpc2sgb2YgQURIRC4gTG93ZXIgbGV2ZWxzIG9mIHBhcmVudCBpbnZvbHZlbWVudCBtZWRpYXRlcyB0aGlzIGFzc29jaWF0aW9uLCBhcyBkb2VzIHByZXNlbmNlIG9mIGFkdmVyc2l0eTsgd2l0aCBjaGlsZHJlbiBleHBvc2VkIHRvIGFkdmVyc2l0eSBhbmQgdGhvc2Ugd2l0aCBsZXNzIGludm9sdmVkIHBhcmVudHMgYmVpbmcgYXQgYW4gaW5jcmVhc2VkIHJpc2sgb2YgaGF2aW5nIEFESEQuIApJbiB0aGUgMTk3MHMsIHRoZSBhdmVyYWdlIHdvcmtlciByZW1haW5lZCBhdCBhIGJ1c2luZXNzIGZvciAyNCB5ZWFycy4gCk15IGJlc3QgcnVucyB3ZXJlIG9uIDEvMywgd2l0aCBhIGdvb2QgYmFuayByb2xsLCBwYXRpZW50IHBsYXksIHN3aXRjaGVkIG9uL2F3YXJlLiBBdCBsZWFzdCA0IDYgaG91cnMgYXQgYSB0YWJsZS4xIElmIGEgZmlzaCBjb21lcyAob3Igc29tZW9uZSBtYWtpbmcgc3RyYW5nZSBtb3Zlcywgd2lubmluZyB2aWEgbHVjayBldGMuKSB5b3Ugc2hvdWxkIHdhaXQgdGhlbSBvdXQgYW5kIG5vdCB0cnkgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlaXIgcG9vciBwbGF5IHVudGlsIHlvdSBhcmUgaW4gcG9zaXRpb24gd2l0aCBhIHN0cm9uZyBoYW5kLiAKVGhlIGZpcnN0IHN0ZXAgdG8gY3JlYXRlIGEgY2xlYXIgY2FsbCB0byBhY3Rpb24gaXMgdG8gZGV0ZXJtaW5lIHlvdXIgZ29hbC4gU3VyZSwgaXQgaXMgbmljZSB0byB0cnkgdG8gZ2V0IGFzIG1hbnkgdmlzaXRvcnMgYXMgcG9zc2libGUgdG8gdGhlIHdlYnNpdGUgdGhhdCBkaXNwbGF5cyBhbGwgdGhvc2UgUmVhbCBDbGF5IFBva2VyIENoaXBzIHRoYXQgeW91IGhhdmUgdG8gb2ZmZXIuIApJIGNvbWUgZnJvbSBhIGRpdm9yY2VkIGZhbWlseSBhbmQgbm93IGJlaW5nIGEgZmF0aGVyIEkgaGF2ZSBtdWNoIG1vcmUgZW1wYXRoeSBmb3IgYm90aCBteSBmYXRoZXIgQU5EIG15IHN0ZXAgZGFkLiBZb3VyIGh1c2JhbmQgaXMgc2NhcmVkIHRvIGRlYXRoIHRoYXQgaGUgbWlnaHQgbG9zZSBoaXMgc29uLiAKU291dGhsYW5kIFBhcmsgR2FtaW5nIGFuZCBSYWNpbmcgaXMgb25lIG9mIHRoZSBvbGRlc3Qgb3BlcmF0aW5nIHRyYWNrcyBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gSXRzIGRvZyBpbmp1cnkgcmVjb3JkIGNvbXBhcmVzIHdlbGwgd2l0aCBzb21lIHRyYWNrcyAoNDI5IGF0IFNvdXRobGFuZCwgMSwzNTEgYXQgR3VsZiBHcmV5aG91bmQgUGFyayBpbiBUZXhhcyBmb3IgdGhlIHllYXJzIDIwMDggMjAxMSkuIEl0cyBvcGVyYXRvcnMgYW5kIHRyYWluZXJzIGluc2lzdCB0aGUgZG9ncyBhcmUgd2VsbCB0cmVhdGVkIGFuZCB0aGF0IHRoZXkgYXJlIGRvaW5nIHdoYXQgdGhleSBsb3ZlIHRvIGRvLCBhbmQgdGhlcmUncyBhbiBvbnNpdGUgYWRvcHRpb24gYWdlbmN5LCBNaWQgU291dGggR3JleWhvdW5kIEFkb3B0aW9uIE9wdGlvbiwgd2hvc2UgY3VzdG9tZXJzIHBvc3QgaGFwcHkgYW5kIHBob3RvcyBhYm91dCB0aGVpciBkb2dzIG9uIHRoZWlyIEZhY2Vib29rIHBhZ2UuIFRoZSB0cmFjayBoYXMgZWNvbm9taWMgdmFsdWU7IGl0IGlzIG9uZSBvZiB0aGUgdG9wIGVtcGxveWVycyBpbiBXZXN0IE1lbXBoaXMuIFN1YnNpZGl6ZWQgYnkgdGhlIGVsZWN0cm9uaWMgd2FnZXJzLCBTb3V0aGxhbmQncyBwdXJzZXMgaGF2ZSBpbXByb3ZlZC4KSSBoYXZlIG5ldmVyIGhhZCBhIEJ1ZCBpbiBLb3JlYS4gSSBhbHdheXMgYmVlbiBhYmxlIHRvIGdldCBIZWluZWtlbiBhbmQgU2Fwb3JvIChhbmQgR3Vpbm5lc3MgZm9yIHRoYXQgbWF0dGVyKS4gCkkgc2F3IE1hcm9vbiA1IGluIGNvbmNlcnQgYmFjayBpbiAyMDExPywgd2hpbGUgdGhleSB3ZXJlIG9uIHRvdXIgd2l0aCBUcmFpbiwgKHNheSB3aGF0IHlvdSB3aWxsIGFib3V0IFRyYWluLCB0aGV5IHB1dCBvbiBhIHJlYWxseSBncmVhdCBzaG93KS4gCkl0IG5vdCB0aGF0IGJhZC4gUGVvcGxlIGp1c3QgbG92ZSB0byBjb21wbGFpbiBhYm91dCB0aGVpciBsb2NhbCBkcml2ZXJzLCBlc3BlY2lhbGx5IGlmIHRoZXkgZnJvbSBhIGRpZmZlcmVudCBwYXJ0IG9mIHRoZSBzdGF0ZS9jb3VudHJ5LiBBbmQgcGVvcGxlIHNlZW0gdG8gbG92ZSBjb21wbGFpbmluZyBhYm91dCBpdCBvbiB0aGlzIHN1YnJlZGRpdCBzcGVjaWZpY2FsbHksIGJ1dCB0aGF0IGFsc28gcHJvYmFibHkgbm90IHVuaXF1ZS4gSSBmcm9tIE1hcnlsYW5kLCBhbmQgSSBhbHdheXMgZ3JldyB1cCBoZWFyaW5nICh1c3VhbGx5IGZyb20gb3V0IG9mIHN0YXRlcnMpIHRoYXQgIk1hcnlsYW5kL0RDIGRyaXZlcnMgYXJlIHRoZSB3b3JzdCEiCkludGVyQ29udGluZW50YWwgSG90ZWxzIEdyb3VwIChJSEcpIGhhcyBzaWduZWQgYSBmcmFuY2hpc2UgYWdyZWVtZW50IHRvIG9wZW4gYSBIb3RlbCBJbmRpZ28gaW4gTWFkcmlkICAgdGhlIGZpcnN0IEhvdGVsIEluZGlnbyBzaWduaW5nIGluIENvbnRpbmVudGFsIEV1cm9wZS4gClBva2VyIHNlYXRpbmcgYW5kIHRoZSBwb3NpdGlvbiBvbmUgaGFzIGF0IHRoZSB0YWJsZSBpcyBvbmUgb2YgdGhlIG1vc3QgaW1wb3J0YW50IGFuZCBsZWFzdCB0YWxrZWQgYWJvdXQgYXNwZWN0cyBvZiBwb2tlci4gSXQncyBlc3BlY2lhbGx5IHJlbGF0aXZlIHRvIHRoZSBUZXhhcyBIb2xkJ0VtIHBva2VyIGdhbWUgYmVjYXVzZSBpdCBpcyBwb3NpdGlvbmFsIGluIG5hdHVyZS4gV2hlcmUgYSBwbGF5ZXIgc2l0cyBlYWNoIGhhbmQgZGV0ZXJtaW5lcyB0aGUgYW1vdW50IG9mIGluZm9ybWF0aW9uIGhlIG9yIHNoZSBjYW4gZ2FpbiBvbiBvdGhlciBwbGF5ZXJzLiAKVGhlIEJlYXUgUml2YWdlIENhc2lubyBhbHNvIGhhcyB0aGUgbW9zdCB0YWJsZSBnYW1lcyBvZiBhbnkgY2FzaW5vIGluIHRoZSBCaWxveGkgYXJlYSBpbmNsdWRpbmcgQmxhY2tqYWNrLCBCYWNjYXJhdCwgUGFpIEdvdyBhbmQgTWlzc2lzc2lwcGkgU3R1ZC4gCklmIHlvdSBkb24gaGF2ZSB0aGUgbWVhbnMgdG8gc3VwcG9ydCBhIGRvZyBlbW90aW9uYWxseSBhbmQgcGh5c2ljYWxseSBmb3IgdGhlaXIgZW50aXJlIGxpZmUgeW91IGhhdmUgbm8gYnVzaW5lc3MgZ2V0dGluZyBvbmUuLiAKVGhlIHNpdGUgaXMgY2xlYW4sIGNsZWFyIGFuZCBhIGxpdHRsZSB1bnByZWRpY3RhYmxlIHdoZW4gaXQgY29tZXMgdG8gY29udGVudCBhcyBpdCBlYXNpbHkgbW92ZXMgZnJvbSBhIG1vb3NlIHJhdmlvbGkgcmVjaXBlIHRvIE1hdGlzaWMgbXVzaW5nOiB1c2VkIHRvIGJlIGEgWXVwcGllLCB0aGVuIGEgRElOSy4gQnV0IG15IGxhdGVzdCBhY3JvbnltPyBJIG5vdyBvZmZpY2lhbGx5IGFuIEFDT0QsIGFuIEFkdWx0IENoaWxkIG9mIERpdm9yY2UuIApJbiBoZXIgc3BhcmUgdGltZSwgc2hlIGlzIGEgY29tcGV0aXRpdmUgYmxpbmQgd2luZSB0YXN0ZXIgYnV0IHJlbWVtYmVycyB0byBlbmpveSB0aGUgb2NjYXNpb25hbCBnbGFzcyBvZiB3aW5lIGp1c3QgZm9yIHBsZWFzdXJlLi4gCiJWZWVsYSEiU28gbWF5YmUgeW91IGhhdmUgdG8gYmUgYWJsZSB0byBzZW5zZSB0aGVtIHRvbz8gTGlrZSBub3cgSSB3b25kZXIgaWYgYmxpbmQgbWVuIGFyZSBhbHNvIGVudHJhbmNlZCBvciBpZiB0aGVyZSBhcmUgb3RoZXIgdGhpbmdzIGxpa2Ugc2NlbnQgb3IgdGhlaXIgdm9pY2VzIHRvby4gUm9uIGdldHMgc29tZXdoYXQgaW1tdW5lIHRvIEZsZXVyIGNoYXJtIHdoZW4gc2hlIGxpdmVzIHdpdGggaGltLlNpcmVuT2ZTY2llbmNlU2VlIGEgd29tYW4gcGFsZSBhcyBzbm93IDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0ZlbWFsZSBLdm90aGUgKEt2b3RoZXR0ZSwgaGFoYSkgd291bGQgbm90IGhhdmUgZ290dGVuIHRoZSBTaGFlZCBzaW5jZSBGZWx1cmlhbiBzZWVtcyB0byBvbmx5IGxpa2UgbWVuIEJVVCBLdm90aGV0dGUgcHJvYmFibHkgd291bGQgaGF2ZSBoYWQgYW4gZWFzaWVyIGdvIG9mIGl0IGlmIHNoZSB3ZW50IHRvIHRoZSBBZGVtLkkgdGhpbmsgYSBzdG9yeSBvZiB0aGlzIG5hdHVyZSBjb3VsZCBiZSBkb25lIHdpdGggYSBmZW1hbGUgcHJvdGFnb25pc3QgYnV0IG9mIGNvdXJzZSBtYW55IGVsZW1lbnRzIHdvdWxkIG5lZWQgdG8gYmUgdHdlYWtlZC4gCkxldCB0aGlzIGJpdGNoIGZyeSB1cC4uIApUaGVuIHlvdSBoYXZlIGNoZWF0aW5nLiBQYXBlciBtYWdpYyBpcyBiYXNpY2FsbHkgYSBjaGVhdGVycyBwYXJhZGlzZS4gClRoZSB1c2Ugb2Ygd2FybSBhbmQgbmV1dHJhbCBlYXJ0aCB0b25lIGludGVyaW9ycyBpbiB0aGUgbW9kZXJuIGd1ZXN0cm9vbXMgZW5oYW5jZXMgdGhlIHdlbGNvbWluZyBhbmQgc3R5bGlzaCBmZWVsIHRoYXQgaXMgcHJvamVjdGVkIHRocm91Z2hvdXQgdGhlIGhvdGVsLi4gCk15IDIgYnJvdGhlcnMgYW5kIEkgc2hhcmVkIG9uZSBiZWRyb29tIGFuZCBzaGUgc2xlcHQgaW4gdGhlIGxpdmluZyByb29tLiBUaGUgaG91c2Ugd2FzIHdhbGwgdG8gd2FsbCBmdWxsIG9mIGR1c3QsIGNyeXN0YWxzIGFuZCBhbnkgb3RoZXIgdGhpbmcgc2hlIGhvYXJkIGZyb20gaGVyIHN0cmFuZ2Ugc2hvcHBpbmcgc3ByZWVzLlNoZSB3b3VsZCBuZXZlciBldmVyIGNsZWFuLCB0aGF0IHdhcyBteSBqb2IgYXMgc2hlICJXYXNuIG91ciBzbGF2ZSIuVGhlIGJhZCB0aGluZyBhYm91dCBpdCBpcyB3aGVuIGhlciBqdW5rIHN0YXJ0ZWQgcGlsaW5nIHVwIGluIG91ciByb29tIHRoZSByYXRzLCBwb2lzb25vdXMgc3BpZGVycyBhbmQgc25ha2VzIHdvdWxkIHNuZWFrIGludG8gYm94ZXMgYW5kIHdha2UgdXMgdXAgaW4gdGhlIG5pZ2h0Lk15IHlvdW5nZXN0IGJyb3RoZXIgd2FzIDMgYXQgdGhlIHRpbWUgYW5kIHVuYWJsZSB0byBwcm9jZXNzIHRoZSBzaXR1YXRpb24gc28gSSB3b3VsZCBvZnRlbiBoYXZlIHRvIGtpbGwgYW55dGhpbmcgdGhhdCBtaWdodCBjYXVzZSBoYXJtIHRvIGhpbSxJbmNsdWRpbmcgYSBzbWFsbCBmYW1pbHkgb2YgcmVkIGJlbGx5IGJsYWNrIHNuYWtlcyBsaXZpbmcgdW5kZXIgdGhlIGJyb2tlbiBmbG9vcmJvYXJkcyBiZWNhdXNlIG15IG1vdGhlciB3b3VsZCBuZXZlciBjYWxsIHNvbWVvbmUgdG8gdGFrZSB0aGVtIGF3YXkgZXZlbiBpZiB0aGVyZSB3YXMgYSBjaGFuY2Ugb2YgdXMgc3RlcHBpbmcgb24gdGhlbSBvbiB0aGUgd2F5IHRvIHRoZSB0b2lsZXQuSSB3YXMgYSBzbWFsbCAxMiB5ZWFyIG9sZCBnaXJsIHNvIHlvdSBjYW4gaW1hZ2luZSBob3cgbWVzc2VkIHVwIEkgZmVsdCBhZnRlciBraWxsaW5nIDggYmFieSBzbmFrZXMgd2l0aCBhIGJsdW50IG1lYXQgY2xlYXZlciAoSXQgd2FzIGFsbCBJIGhhZCkgYW5kIGtub3dpbmcgZnVsbCB3ZWxsIGlmIEkgd2FzIGJpdHRlbiB3ZSB3ZXJlIHRvbyBmYXIgYXdheSBmcm9tIHRoZSBob3NwaXRhbCB0byBnZXQgaGVscC4gCk5vIG1vcmUgIm1hbiBjYXJkcyIgbm8gbW9yZSAiZWFybmVkIG1hc2N1bGluaXR5IiBubyBtb3JlICJibHVlIGlzIGZvciBib3lzIGFuZCBwaW5rIGlzIGZvciBnaXJscyIuIEl0IGFsbCBidWxsc2hpdC4gClRoaXMgaXMgY29ycm9ib3JhdGVkIGJ5IHJlcG9ydHMgaW4gVW5pdGVkIFN0YXRlcywgR2VybWFuIGFuZCBCcml0aXNoIGFyY2hpdmVzIGFuZCBvZiBjb250ZW1wb3JhcnkgZGlwbG9tYXRzIGluIHRoZSBPdHRvbWFuIEVtcGlyZSwgaW5jbHVkaW5nIHRob3NlIG9mIGl0cyBhbGx5IEdlcm1hbnkuIFRoZSBHZXJtYW4gQW1iYXNzYWRvciwgV2FuZ2VuaGVpbSwgZm9yIGV4YW1wbGUsIG9uIDcgSnVseSAxOTE1IHdyb3RlICJ0aGUgZ292ZXJubWVudCBpcyBpbmRlZWQgcHVyc3VpbmcgaXRzIGdvYWwgb2YgZXh0ZXJtaW5hdGluZyB0aGUgQXJtZW5pYW4gcmFjZSBpbiB0aGUgT3R0b21hbiBFbXBpcmUiIChXaWxoZWxtc3RyYXNzZSBhcmNoaXZlcykuIApDYXNpbm8gc3R5bGUgZ2FtZXMgZWFybmVkIE1pY2hpZ2FuIGNoYXJpdGllcyAkMy42IG1pbGxpb24gaW4gZmlzY2FsIDIwMDQgYW5kICQxMC41IG1pbGxpb24gaW4gZmlzY2FsIDIwMDgsIGFjY29yZGluZyB0byB0aGUgTWljaGlnYW4gTG90dGVyeS4gCiJJdCdzIG9idmlvdXMgdGhhdCBpbiB0aGUgbGFzdCBlbGVjdGlvbiwgeW91IGhhZCB0aGUgSURDIHBlb3BsZSBkZWZlYXRlZCwgeW91IGhhZCBvdGhlciB5b3VuZyBtaWxsZW5uaWFscyAgIHdobyBhcmUgb24gdGhlIGxlZnQgd2luZyBvZiB0aGUgcGFydHkgICBhbmQgSSB0aGluayBbR2lsbGlicmFuZF0gd291bGQgbGlrZSB0byBiZSBhdHRyYWN0aXZlIHRvIHRoZSBtaWxsZW5uaWFscyBhbmQgdG8gdGhlIGxlZnQgd2luZywiIEFyenQgc2FpZC4KTXkgZGFkIHdhbGtlZCB0byB0aGUgY29ybmVyIG9mIHRoZSBzdHJlZXQgdG8gd2F0Y2ggbWUgKHdlIGhhZCBhIGNvcm5lciBob3VzZSkuIApNb3JlIHRoYW4gd2UgaW1hZ2luZWQuIApJIHRob3VnaHQgeW91IHdlcmUgYWJvdXQgdG8gY29tcGxhaW4gYWJvdXQgdGhlIHdheSBtYWxlIG51cnNlcyBhcmUgdXRpbGl6ZWQgaW4gaGVhbHRoY2FyZS4gSSdtIGdsYWQgeW91IGdldCBpdC4gRXF1YWxpdHkgZG9lc24ndCBtZWFuIGV4cGVjdGluZyB0aW55IHBldGl0ZSB3b21lbiB0byBkbyBldmVyeXRoaW5nIGEgbWFuIGlzIHBoeXNpY2FsbHkgYWJsZSB0byBkby4gCkV2ZW4gd2l0aG91dCBhIHByb2dyYW0gdG8gaGVscCBwYXkgZm9yIGEgZnVuZXJhbCwgSSBkb24gYmVsaWV2ZSB0aGF0IHRoZSBuZXh0IG9mIGtpbiBhcmUgb24gdGhlIGhvb2sgZm9yIGEgZnVuZXJhbCwgdW5sZXNzIHRoZXkgd2FudCB0byBiZS4gCkkgZGlkbiBzcGVjaWZpY2FsbHkgYXNrIG15IGZyaWVuZCBhYm91dCB0aGF0LCBidXQgYXMgZXZlcnlvbmUgaW4gU3BhaW4gc2VlbXMgdG8gaGF2ZSBvbmUsIEkgdGhvdWdoIGhpcyAiMSwwMDAgdG8gMiwwMDAiIHJhbmdlIHdvdWxkIGhhdmUgaW5jbHVkZWQgdGhhdCB0b28uIApJIGV4cGVjdCBwcmllc3RzIHRvIGJlIGNvdW5zZWxsaW5nIGFueSBsYXlwZXJzb24gdG8gcmVmb3JtIGlmIHRoZXkgaGFkIGFueSBzZXJpb3VzbHkgaGFybWZ1bCBiZWhhdmlvcnMuIElmIHRob3NlIGhhcm1mdWwgYmVoYXZpb3VycyBmYWxsIHVuZGVyIHRoZSBicm9hZCBjYXRlZ29yeSBvZiAicG9saXRpY3MiLCB3ZWxsLCB0aGV5IHN0aWxsIGhhcm1mdWwgYmVoYXZpb3Vycy4gCkluIHRoaXMgaW50ZXJ2aWV3LCBsZWQgYnkgYm94aW5nIGZhbnMgYWNyb3NzIHRoZSBnbG9iZSwgdGhlIFNvdXRoIEtvcmVhbiBzdGFyIHNoYXJlcyB0aGUgaGFwcGllc3QgYW5kIG1vc3QgZGlmZmljdWx0IG1vbWVudHMgb2YgaGlzIGxpZmUuIEhlIGFsc28gdGFsa3MgYWJvdXQgaGlzIGZpcnN0IHN0ZXBzIGluIGJveGluZyBhbmQgaGlzIGh1bWJsZSBhaW0gdG8gaGVscCBpbXByb3ZlIGxpZmUgZm9yIGhpcyBmYW1pbHk6ClBhaW50aW5nIGl0IGFzIHNvbWV0aGluZyB0aGF0IHByaXZpbGVnZWQgY29sbGVnZSBraWRzIHdoaW5lIGFib3V0IHdoZW4gdGhleSBjaGFsbGVuZ2VkIG9uIHRoZWlyIHBvbGl0aWNhbCB2aWV3cy4gClRoZSBkYXlzIHRha2UgZm9yZXZlciwgYnV0IHRoZSB5ZWFycyBmbHkgYnkuIApJJ3ZlIGJlZW4gYXNrZWQgYSBmZXcgdGltZXMgdGhpcyB3ZWVrIGFib3V0IHRoZSBzb3VyY2Ugb2YgdGhlIG1hdGVyaWFscyB0aGF0IEkgd3JpdGUgYWJvdXQuIFRoZSBvdmVyd2hlbG1pbmcgbWFqb3JpdHkgb2YgdGhlIGJvb2tzIGFuZCBwYW1waGxldHMgYXJlIHJpZ2h0IGhlcmUsIGluIG15IHN0b3JlIG9yIHdhcmVob3VzZSAoc2VlIHRoZSBhYm92ZSBsaW5rIGZvciB0aGUgc2NpZW5jZSBib29rc3RvcmUpLCBzbyBJIHNlZSBhbGxvdCBvZiB0aGlzIHN0dWZmIGV2ZXJ5ZGF5LCBjdXJyZW5jeSBvZiB0aGUgcmVhbG0gYW5kIGFsbCB0aGF0LiBNb3N0IG9mIHRoZSBvZGQgdGhpbmdzIHRoYXQgYXJlIGZvdW5kIGluIG15IGJsb2cgZmxhZ3BvbGUgcGFpbnRpbmcsIHppcHBlciByZXBhaXIsIGZpbmRpbmcgRW5nbGFuZCBpbiB0aGUgR3JlYXQgUHlyYW1pZCwgYnVpbGRpbmcgdGhlIEdyZWF0IFB5cmFtaWQgaW4gRGV0cm9pdCwgYW5kIHNvIG9uKSBoYXZlIGNvbWUgdG8gbWUgdmlhIHRoZSBMaWJyYXJ5IG9mIENvbmdyZXNzLCB3aGVyZSBmb3IgbWFueSB5ZWFycyBJIG1hbmFnZWQgdG8gcHVyY2hhc2UvdHJhZGUgZm9yIGJpdHMgYW5kIHBpZWNlcyBvZiB0aGVpciBzdXJwbHVzLiAKRHppYWEgcG9saWNqaSBuYSBvZyBzIHN6YWJsb25vd2UsIHRvIHphd2llcmFvIGVsZW1lbnR5LCBrdHJ5Y2ggemF6d3ljemFqIG5pZSBtYSB3IHBvZG9ibnljaC4gCkh1Z3MgdG8geW91IGFuZCBJIGhvcGUgeW91IGhhZCBhIHdvbmRlcmZ1bCB3ZWRkaW5nLgpUaGUgcGFyZW50IGNvbXBhbnksIGNhbGxlZCA4ODggSG9sZGluZ3MsIGlzIGxpc3RlZCBvbiB0aGUgTG9uZG9uIFN0b2NrIEV4Y2hhbmdlIHdoZXJlIG9ubHkgdGhlIGJpZ2dlc3QgY29tcGFuaWVzIG1ha2UgaXQsIGFuZCBzdHJpY3RseSBhZGhlcmVzIHRvIHRoZSBydWxlcyBhbmQgcmVndWxhdGlvbnMgd2l0aCB3aGljaCB0aGUgY3VzdG9tZXIgYXQgODg4IFNwb3J0IGlzIHByb3RlY3RlZC4gVGhpcyBvcGVyYXRvciBoYXMgd29uIGF3YXJkcyBmb3IgYmVpbmcgYSByZWxpYWJsZSBvcGVyYXRvciBhbmQgdGhlIG1vc3QgcmVjZW50IGlzIHRoZSAyMDEwIE1vc3QgU29jaWFsbHkgUmVzcG9uc2libGUgT3BlcmF0b3IgYXdhcmQuIApIZSBnYXZlIG1lIGFuIGljeSBsb29rLCBkcm9wcGVkIHRoZSBjaGlwIG9uIHRoZSB0YWJsZSwgYW5kIHRyaWVkIHRvIGxhdWdoIGl0IG9mZiwgYnV0IGhlIHdhcyB2aXNpYmx5IGFuZ3J5LiIuIApBIHdlaXJkbHkgZnJlbmV0aWMgbWFzaHVwIG9mIGNlbGVicml0eSBjb3NwbGF5IGFuZCBseXNlcmdpYyB0YWxlbnQgc2hvdywgIlRoZSBNYXNrZWQgU2luZ2VyIiBpcyB0aGUgc2Vhc29uJ3Mgb25seSB0cnVlIGJyZWFrb3V0IGhpdC4gU2luY2UgYm93aW5nIG9uIEphbi4gClBsYXlvZmYgUnVsZXMxMi4gCklmIEkgZmVlbCBteSBiYWNrIHR3aW5naW5nIG9uIERMcywgSSBsb3dlciB0aGUgd2VpZ2h0IGF1dG9tYXRpY2FsbHkuIiB3aGlsZSByZXNpc3RhbmNlIHRyYWluaW5nIG1heSBiZSBkZXRyaW1lbnQgaWYgcmVzaXN0YW5jZSBsb2FkcyBhcmUgZXhjZXNzaXZlbHkgaGVhdnksIGxpZ2h0IGxvYWQgYmVuZWZpdHMgYXJlIHRvbyBncmVhdCB0byByZXNpc3RhbmNlIHRyYWluaW5nIGFsbCB0b2dldGhlci5TbywgdGhlIEdvbGQgU3RhbmRhcmQgb2YgbWVhc3VyaW5nIFJlc2lzdGFuY2UgRml0bmVzcyBpbiBpbmRpdmlkdWFscyBpcywgMSBSZXBldGl0aW9uIE1heGltdW0gWzFSTV0gKGFzIHlvdSBtYXkga25vdy4pIEEgMVJNIGlzIHRoZSBtYXggYSBwZXJzb24gY2FuIGxpZnQsIGl0IGlzIGFuIGFsbCBvdXQgZWZmb3J0LkNvbnNpZGVyIHRoaXMgYXJ0aWNsZSBmcm9tIDE5OTEgd2hpY2ggcmVwb3J0ZWQsICJUaGUgcmVhY3Rpb24gbW9tZW50cyBhdCB0aGUga25lZSwgaGlwLCBhbmQgTDQvTDUgam9pbnRzLCBhbmQgdGhlIGNvbXByZXNzaXZlIGFuZCBzaGVhcmluZyBmb3JjZXMgb24gTDQvTDUgYXJlIGRvY3VtZW50ZWQgaW4gcG93ZXJsaWZ0ZXJzIGNvbXBldGluZyBpbiBhIG5hdGlvbmFsIHBvd2VybGlmdGluZyBjaGFtcGlvbnNoaXAgLiAKQnV0IGJ5cGFzc2luZyB0aGUgc3RvbWFjaCBmb3IgZmVlZGluZyBpcyB0aGUgd2F5IHRvIGdvLiBJdCBzZWVtcyBsaWtlIGhlciBkb2N0b3JzIHRyaWVkIGEgbmFzYWwgdHViZSB0cmlhbCB0byBzZWUgaWYgc2hlIHdvdWxkIHRvbGVyYXRlIEogZmVlZHMgYmVmb3JlIHBsYWNpbmcgdGhlIGFiZG9taW5hbCB0dWJlLiAKVGhlIHNlY29uZCBNcnMgSGFycmlzb24gICBHZW9yZ2Ugd2FzIHByZXZpb3VzbHkgbWFycmllZCB0byBQYXR0aSBCb3lkICAgaXMgY3JlZGl0ZWQgd2l0aCBwcm92aWRpbmcgYSBjYWxtaW5nIGluZmx1ZW5jZSBvbiB0aGUgbXVzaWNpYW4ncyBsaWZlLgpUaGVyZSBoYXZlIGJlZW4gZXhjYXZhdGlvbnMgaW4gdGhlIEluZHVzIFZhbGxleSBzaW5jZSB0aGUgMTl0aCBjZW50dXJ5LiAKIkV2ZXJ5IEZyaWRheSwgd2Ugd291bGQgaGF2ZSBsb25nIGx1bmNoZXMgZmVhdHVyaW5nIHNwZWFrZXJzIGFuZCBjb21lZGlhbnMgYW5kIGl0cyB3YXMga25vd24gYXMgdGhlIFBPRVRTIGx1bmNoICAgJ1Agb2ZmIGVhcmx5LCB0b21vcnJvdydzIFNhdHVyZGF5JywiIHNoZSBleHBsYWluZWQuIApJIGdldCB3aGVyZSB5b3UgY29taW5nIGZyb20sIGFuZCBpdCBkZWJhdGFibGUgd2hldGhlciBvciBub3QgaXQgc2hvdWxkIGhhdmUgYmVlbiBhIHBhaWQgZXhwYW5zaW9uLiAKVGhpcyBpcyBteSBhcmd1bWVudCB3aGVuIHBlb3BsZSB0YWxrIGFib3V0IHRoZSBiZW5lZml0cyBvZiBlYXRpbmcgb3Igb3RoZXJ3aXNlIGluZ2VzdGluZyB0aGVpciBwbGFjZW50YXMgYWZ0ZXIgaGF2aW5nIGEgYmFieS4gVGhhdCB0aGluZyBpcyBsaXRlcmFsbHkgYSBmaWx0ZXIgYmV0d2VlbiB5b3UgYW5kIHRoZSBncm93aW5nIGZldHVzLiBJdCBmdWxsIG9mIGFsbCB0aGUgY3JhcCB5b3UgdG9vayBpbnRvIHlvdXIgYm9keSB0aGF0IHlvdXIgYm9keSB3YXMgbGlrZSAibmFoLCBub3QgbGV0dGluZyB0aGF0IGluIHRvIHRoaXMgbWluaSBodW1hbi4iLiAKRXMga2FtIHdpZSBlcyBrb21tZW4gbXVzc3RlCkxvd2UncyBjbG9zaW5nIDMxIENhbmFkaWFuIHN0b3JlcwpUaGVyZSB3YXMgYSBnYW1lIG1vZGUgY2VudGVyZWQgYXJvdW5kIEZVQ0tJTkcgTkFaSSBaT01CSUVTLiBIb3cgbWFueSB6b21iaWVzIGZvdWdodCBpbiBXV0lJPy4gCkJsYWNoIHNhaWQgaW4gdGhlIHNwcmluZyB0aGF0IGhlIGtuZXcgaGUgbmVlZGVkIHRvIG1ha2Ugc29tZSBhZGp1c3RtZW50cyBhZnRlciBoaXMgZmlyc3QgeWVhciBpbiB0aGUgUENMIGVuZGVkIHdpdGggYW4gMTEgMTIgcmVjb3JkIGFuZCA0LjQ2IEVSQS4KSWYgSSB3YWxraW5nIGFyb3VuZCB0aGUgaG91c2Ugd2l0aCBoZXIsIEkgaGF2ZSBteSBoYW5kIHVwdHVybmVkIHN1cHBvcnRpbmcgaGVyIHdlaWdodCB3aXRoIGhlciBsZWdzIGluIGJldHdlZW4gbXkgZmluZ2VycywgYW5kIG15IGZvcmVhcm0gc3VwcG9ydGluZyB0aGUgcmVzdCBvZiBoZXIgYm9keSBhbmQgdGFpbC4gCkFiZXIgZ2xlaWNod29obCBpbnRlcmVzc2llcnQgc2ljaCBhdWNoIG5pZW1hbmQgZGFmciwgd2VubiBkdSBlYmVuamVuZSBMZWJlbnNlbnR3cmZlIGluIGRlbiBMR0JUIGZyZXVuZGxpY2hlbiBDbHVicywgRnJldW5kZXNrcmVpc2VuIG9kZXIgZGVuIGVpZ2VuZW4gdmllciBXbmRlbiBhdXNsZWJ0Li4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uVGhlIHBhaW4gZnJvbSBwb2tpZXMgbG9zc2VzIGlzIHNvYXJpbmcuIApUaGlzIGlkZWEgb2YgdGhlIG5ld2JpZSBwb2tlciBsb3ZlcnMgaGF2ZSBtYW5hZ2VkIG1hbnkgbmV3IHBlb3BsZSB0byB0YWtlIHBva2VyIHBsYXlpbmcgYXMgYSBwcm9mZXNzaW9uLiBOb3QgZXZlcnlvbmUgaXMgZXF1YWxseSBzdWNjZXNzZnVsIGluIHRoaXMgc2VjdG9yIGJ1dCB0aGUgZWFzaW5lc3MgYW5kIGNvbXByZWhlbnNpdmVuZXNzIG9mIHRoaXMgZ2FtZSBvZiBwb2tlciBoYXMgaW5pdGlhdGVkIHRoZSBwb3RlbnRpYWwgb2YgYWxsIHRoZSBwbGF5ZXJzIG91dCB0aGVyZS4gCkkgYW0gbm90IHF1aXRlIHN1cmUgaWYgSSBhbSB0aGF0IHNhbWUgcGVyc29uIHRob3VnaCBvciBpZiBLb3JlYSBpcyB0aGUgc2FtZSBjb3VudHJ5LiAKT3ZlcnZpZXcgZm9yIGNvbW9lc3Bvc3NpYmxlClRoZSBnYW1lIHBheXMgdXAgdG8gMTAwOjEgZm9yIGEgUm95YWwgRmx1c2ggaGFuZCBvbiB0aGUgQ2FsbCBiZXQgYW5kIDEsMDAwOjEgZm9yIHRoZSBzYW1lIGhhbmQgb24gYSA1KzEgQm9udXMgYmV0Li4gClVuZm9ydHVuYXRlbHksIHNvbWUgcGxheWVycyBjYW4gcHJldGVuZCBkaXNjb25uZWN0cyBpbiBkYW5nZXJvdXMgZm9yIHRoZW0gc2l0dWF0aW9ucyB0cnlpbmcgdG8gcHJvdGVjdCB0aGVpciBpbnZlc3RtZW50cyBpbnRvIHRoZSBwb3QuIE1vc3Qgb2Z0ZW4gc3VjaCBzaXR1YXRpb24gaGFwcGVucyBpbiBubyBsaW1pdCBwb2tlci4gRm9yIGV4YW1wbGUsIHlvdSBoYXZlIHRoZSBoaWdoZXN0IHNldCBvbiB0aGUgZmxvcCwgeW91IHJhaXNlIHRoZSBiZXRzIGFjdGl2ZWx5IGFuZCBoYXZlIGFsc28gdGhlIGJlc3QgY29tYmluYXRpb24gb24gdGhlIHR1cm4sIHRoZSBwb3QgaXMgdmVyeSBoaWdoLCBidXQgc3VkZGVubHkgZm9yIHRoZSByaXZlciB5b3UgaGF2ZSB0aGUgdGhpcmQgb3IgZm91cnRoIGNvbW11bml0eSBjYXJkLCBhbmQgeW91ciBvcHBvbmVudCBnb2VzIGFsbCBpbi4gVGhlIHBvdCBpcyBodWdlIGFuZCB5b3UgbXVzdCByZXNwb25kIG5vdCBsZXNzLiBXaGF0IHNob3VsZCB5b3UgZG8/IFlvdSBkbyBub3Qgd2FudCB0byByaXNrIGxhcmdlIGFtb3VudCBvZiBtb25leSBpbiBvcmRlciB0byBjaGVjayBpZiB5b3VyIG9wcG9uZW50IGhhcyBnYXRoZXJlZCBhIHN0cmFpZ2h0LCBob3dldmVyLCBpdCBkaXN0cmVzc2VzIHlvdSB0byBnaXZlIHRoZSBoYXJkbHkgYnVpbHQgcG90LiBUaGVyZSBpcyBhbm90aGVyIHdheSAgIHRvIGRpc2Nvbm5lY3QuIEluIHN1Y2ggYSBjYXNlIHlvdSBkbyBub3QgbmVlZCB0byByZXNwb25kIHRvIHRoZSBvcHBvbmVudCdzIGJldCBhbmQgaWYgeW91ciBjb21iaW5hdGlvbiBpcyBiZXR0ZXIsIHlvdSB3aWxsIGdldCB0aGUgd2hvbGUgYWxsIGluLiBJdCBpcyB1bmRlcnN0b29kIHRoYXQgc3VjaCBhY3Rpb25zIGFyZSB1bmV0aGljYWwgYXQgbGVhc3QsIGFuZCB0aGV5IGFyZSBwcm9oaWJpdGVkIGluIGFsbCBwb2tlciByb29tcy4gVGhhdCBpcyB3aHkgdGhlIG51bWJlciBvZiBhbGwgaW5zIGluIGRpc2Nvbm5lY3RzIGlzIGxpbWl0ZWQgKHVzdWFsbHkgZnJvbSBvbmUgYSBkYXkgdG8gc2V2ZXJhbCBhIHdlZWspLiBQbGF5ZXJzIHdpdGggb2Z0ZW4gZGlzY29ubmVjdHMgYXJlIGJlaW5nIGNoZWNrZWQsIGFuZCB0aGVpciBhY3Rpb25zIGJlY29tZSBzdXNwaWNpb3VzLCBzdWNoIHBsYXllcnMgbWF5IGJlIGRlcHJpdmVkIG9mIGRpc2Nvbm5lY3QgcHJvdGVjdGlvbiBhdCBhbGwuIEFzIHRoZSBiZW5lZml0IG9mIGZhbHNlIGRpc2Nvbm5lY3RzIGluIGxpbWl0IHBva2VyIGlzIG11Y2ggc21hbGxlciwgbWFueSBwb2tlciByb29tcyBwcm92aWRlIHByb3RlY3Rpb24gb25seSBvbiB0aGUgbGltaXQgb3IgYWRkIHNwZWNpYWwgdGFibGVzIHdpdGhvdXQgcHJvdGVjdGlvbiBvbiB0aGUgbm8gbGltaXQgYW5kIHBvdCBsaW1pdC4gVGhlcmUgaXMgbm8gZGlzY29ubmVjdCBwcm90ZWN0aW9uIGluIHRvdXJuYW1lbnRzIGF0IGFsbC4KV2hpbGUgeW91IG1lbnRpb25lZCBpdCwgdGhvdWdoLCBJIGRpZCBkbyBhIGxpdHRsZSBleHBsb3JhdGlvbiBvZiBzdXBwb3J0aW5nIGRlZmF1bHRpbmcgKGZvciBpbnNlcnRpbmcgcm93cykgaGVyZS4gCllvdSBhcmVuJ3QgdGhhdCBtdWNoIGJldHRlciBvZmYgZnJvbSBhIHRheCBwZXJzcGVjdGl2ZSB0aGFuIGEgTlknZXIgYXQgdGhhdCByYXRlLiAKSWYgeW91LCBvciBzb21lb25lIHlvdSBsb3ZlLCB3YXMgcmFwZWQgb3IgY2FycnlpbmcgYW4gZXh0cmVtZWx5IHNpY2sgYmFieSwgeW91IG1pZ2h0IGhhdmUgYW5vdGhlciBzb25nIHRvIHNpbmcuIApKYW1iZWFycyB1ClNheXMgaXQgdGltZSB0byBtb3ZlIGJleW9uZCB0aGUgY29sb3IgbGluZSBhbmQgYWRtaXQgdGhhdCByYWNlIGlzIG5vdCBhIHRoaXMgb3IgYSB0aGF0IGFuZCBpdCBjZXJ0YWlubHkgbm90IGxvY2F0ZWQgaW4gdGhlIGJvZHkuIFJpZ2h0IGFuZCBzaGUgd3JvbmcuIApOaW1yb2RlciB1Ckl0cyBva2F5IHRvIGJlIHNvcmUgYnV0IHlvdSBzaG91bGRuIGJlIHNvcmUgdG8gdGhlIHBvaW50IHlvdSBjYW4gbW92ZSB5b3VyIG5lY2suIFRob3NlIGFyZSBub3QgdGhpbmdzIHRoYXQgc2hvdWxkIGhhcHBlbiBhZnRlciBnZXR0aW5nIGEgbWFzc2FnZS4gCkVuIGZhaXQgYydlc3QgYXVzc2kgdW4gdG9uaXF1ZSBkdSBGb2llIGV0IHVuIG1kaWNhbWVudCB1dGlsaXMgbm90YW1tZW50IHBvdXIgbGVzIHRyb3VibGVzIGxpcyAgbGEgbW5vcGF1c2UuIApKbmFuZHpQb2tlciAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpOb3RpY2UgdGhlIHdvcmRpbmcgb2YgdGhpcyBvbmUuIApZb3UgZ3V5cyBhcmUgc2Nyb29nZXMsIGZvciByZWFsLiBJIGJlIGFubm95ZWQgdG8gaGF2ZSBhIGtpZCBpbnRlcnJ1cHQgbXkgY29udmVyc2F0aW9uLCBvZiBjb3Vyc2UsIGJ1dCBpcyBpdCByZWFsbHkgdGhlIGVuZCBvZiB0aGUgd29ybGQgaWYgc29tZW9uZSB0YWxrcyB0byB5b3Ugd2hpbGUgeW91IHdhaXRpbmcgZm9yIGZvb2Q/IE9oIG5vLCBteSAyNCBob3VycyBvZiBwcmV0ZW5kaW5nIHRvIGJlIGludmlzaWJsZSBoYXZlIGJlZW4gaW50ZXJydXB0ZWQuCklmIHRoZXkgd2VyZSBhIGdpZnQsIHRoZW4gdW5kZXIgTWljaGlnYW4gbGF3LCB5b3Ugb3duIGl0LiBIb3dldmVyLCB5b3VyIGZhdGhlciBoYXMgdGhlIHJpZ2h0IHRvIG1hbmFnZSB5b3VyIHByb3BlcnR5IHVudGlsIHlvdSByZWFjaCB0aGUgYWdlIG9mIG1ham9yaXR5OyB0aGlzIGluY2x1ZGVzIHByZXZlbnRpbmcgeW91IGZyb20gc2VsbGluZyBpdC9wdW5pc2hpbmcgeW91IGZvciBzZWxsaW5nIGl0LiBPbmNlIHlvdSByZWFjaCB0aGUgYWdlIG9mIG1ham9yaXR5LCB5b3Ugd291bGQgaGF2ZSBmdWxsIGNvbnRyb2wgb3ZlciB0aGUgcHJvcGVydHkuIElmIGhlIHNvbGQvZGVzdHJveWVkIHlvdXIgcHJvcGVydHkgYmVmb3JlIHlvdSByZWFjaGVkIHRoZSBhZ2Ugb2YgbWFqb3JpdHksIHlvdSB3b3VsZCBiZSBhYmxlIHRvIHN1ZS4KVGhlIGdhaW4gaXMgdHJhbnNmZXJyZWQgb24gYSByZWFsIGNhc2lubyBhY2NvdW50IHdoZXJlIHlvdSBtdXN0IHdpbiBpdCBiYWNrLCBsaWtlIGFueSBjYXNpbm8gYm9udXMsIHVzdWFsbHkgaGF2aW5nIHJ1biBpdCAyMCB0aW1lcyBpbiBjYXNpbm8gc2xvdHMuIApCZXIgZGllIEphaHJlIHNpbmQgd2lyIGd1dGUgRnJldW5kZSBnZXdvcmRlbiB1bmQgaGFiZW4gYXVjaCBhdWVyaGFsYiB2b24gTGEgUGFsbWEgc2NobmUgZ2VtZWluc2FtZSBUb3VyZW4gdW5kIFJlaXNlbiB1bnRlcm5vbW1lbi4gSGhlcHVua3RlIHdhcmVuIHVuc2VyZSBUcmVra2luZ3RvdXIgZHVyY2ggZGVuIEhpbWFsYXlhIGluIExhZGFraCwgaW0gTm9yZGVuIEluZGllbnMgKG5hdHJsaWNoIG1pdCBBYnN0ZWNoZXJuIG5hY2ggRGVsaGkgdW5kIEFncmEpIHVuZCBlaW5lIGVpbm1vbmF0aWdlIFJ1bmRyZWlzZSBpbSBKZWVwIGR1cmNoIGRpZSBNb25nb2xlaS4gR2VybmUgZXJpbm5lcmUgaWNoIG1pY2ggYXVjaCBhbiBnZW1laW5zYW1lIFJhZHRvdXJlbiBpbiBzdGVycmVpY2gsIGRlciBTbG92YWtlaSB1bmQgVW5nYXJuIG9kZXIgYW4gZWluZW4gaGVpZW4gU29tbWVydXJsYXViIGltIHNkbGljaGVuIEtyb2F0aWVuIC4gCiJXZSdsbCBzZWUgd2hvIGNhbiBnZXQgdG8gNjAgdm90ZXMsIiBNY0Nvbm5lbGwgc2FpZCBhdCBhIFJlcHVibGljYW4gcmV0cmVhdCBsYXN0IHdlZWsuIFdoZW4gYXNrZWQgaWYgTWNDb25uZWxsIHdhcyByZWZlcnJpbmcgdG8gYW1lbmRtZW50cyBhcyB3ZWxsLCBNY0Nvbm5lbGwgc3Bva2Vzd29tYW4gQW50b25pYSBGZXJyaWVyIHRvbGQgQ05OIHRoZSBmbG9vciBwcm9jZXNzIHdhcyBzdGlsbCBub3QgZGVjaWRlZCBidXQgIjYwIHZvdGVzIGlzIGEgcmVhbGl0eSBpbiB0aGUgU2VuYXRlIiBhbmQgImlzIGEgcmVhbGl0eSBvbiBhbWVuZG1lbnRzIGFzIHdlbGwuIgpPcmFuZ2UgaXMgYSByZWFsbHkgdG91Z2ggY29sb3Igc28geW91ZCBsaWtlbHkgd2FudCB0byBidWlsZCBpdCB1cCBmcm9tIGEgbGlnaHQgYnJvd24gZmlyc3QuIApOb3cgd2UgYXJlIHRhbGtpbmcgYWJvdXQgaGlraW5nL2p1bmdsZSB0cmVra2luZy4gVGhyZWRibyBkaWdnaW5ncyBpcyBqdXN0IHdheSB0b28gbG9uZyBvZiBhIHdhbGssIGJ1dCBpZiBqdXN0IGZvciB0aGUgc3RheSBhdCBjYW1wc2l0ZSwgSSBndWVzcyBpdCBva2F5LiBBZ2FpbiwgR3V0aGVnYSBwcm9iYWJseSB3b3J0aCBjaGVja2luZyBvdXQgZXNwZWNpYWxseSB0aGUgd2FsayB0byB0aGUgc3VzcGVuc2lvbiBicmlkZ2UgKGV4YWN0bHkgd2hhdCBJIHdhbnQpLiBUaGVuIEkgbmVlZCB0byBrbm93IG90aGVyIGVhc3kvbW9kZXJhdGUgMSAyIGhvdXJzKyAoNCA2a20/KSBtYXggaGlraW5nL3RyZWtraW5nIHRyYWlsLCBuaWNlIHNub3d5IHBhdGggYW5kIHByb2JhYmx5IGhhdmUgYSBsaXR0bGUgY2l2aWxpemF0aW9uIGFsb25nIHRoZSB3YXkuIEF0IGxlYXN0IGl0IHdpbGwgaGVscCBpbmNhc2UgdGhlIHdlYXRoZXIgdHVybnMgYmFkLiBJIGRpZCBhIHJlYWxseSBsb25nIGhpa2UgYWxvbmUgYXQgVGFzbWFuIFZhbGxleSBiZWZvcmUsIGFuZCB0aGUgd2luZCBndXN0aW5nIGF3YXkgbXkgZ3V0cywgYWxtb3N0IGZsZXcgb2ZmIGEgY2xpZmYgaW50byB0aGUgZ2xhY2llcnMuIEdyZWF0IGV4cGVyaWVuY2UgdGhvdWdoLiBCYWNrIGluIE5aLCBhbG1vc3QgZXZlcnl0aGluZyBJIGRpc2NvdmVyIGJ5IGp1c3QgZHJpdmluZyBhbmQgZm9sbG93aW5nIHRoZSBncmVlbiB5ZWxsb3cgc2lnbiwgdGhpcyBmb3Jlc3QgdGhhdCBmb3Jlc3QgYW5kIHdoYXQgbm90LiBJdCBhbG1vc3QgZXZlcnl3aGVyZS4gSXMgaXQgYWxtb3N0IHNpbWlsYXIgZXhwZXJpZW5jZSB0aGVyZSBpbiBBdXN0cmFsaWEgb3IgbXVjaCBsZXNzPwpJZiBzb21lb25lIHRvb2sgaGltLCB0aG9zZSBtYWtlc2hpZnQgaG9tZWxlc3MgY2FtcHMgdW5kZXIgdGhlIHN0cmVldHMgd291bGQgYmUgYSBnb29kIGhpZGluZyBwbGFjZSwgRVhDRVBUIHRoYXQgdGhlc2UgYmlnIHJhaW5zIGxhdGVseSBmbHVzaCB0aG9zZSBlbmNhbXBtZW50cyBvdXQuIFNvcnJ5IGZvciBwdXR0aW5nIGl0IG91dCB0aGVyZSwgYnV0IGlmIHlvdSdyZSBnb25nIHRvIGxvb2sgZm9yIGhpbSwgeW91IGhhdmUgdG8ga25vdyBldmVyeXdoZXJlIHBlb3BsZSBjYW4gaGlkZSB0aGVpciB2aWN0aW1zLiAKVHVybnMgb3V0IGdvaW5nIGJhY2sgdG8gc2xlZXAgd2FzIHRoZSByaWdodCBkZWNpc2lvbi4gCkkgd2VudCB0aHJ1IHRoZSBwcm9jZXNzIChsb3RzIG9mIHRlc3RpbmcgdXAgZnJvbnQpIEkgcGFpZCBOT1RISU5HIG91dCBvZiBwb2NrZXQgKHNlcmlvdXNseSB0aGV5IG9mZmVyZWQgdG8gcmVpbWJ1cnNlIG1lIGZvciBhbnkgc25hY2tzIEkgYXRlIGR1cmluZyB0aGUgcHJvY2VzcykgYW5kIGFmdGVyIHRoZSBzdGFuZGFyZCBvbmUgeWVhciB3YWl0IEkgcmVjZWl2ZWQgYSBjYXJkIGluIHRoZSBtYWlsIChpbiBGcmVuY2gpIGZyb20gdGhlIGRvbmVlIHNheWluZyAoaW4gc2hvcnQpICJJIGxpdmVkIiBidXQgdGhhdCB3YXMgaXQsIG5vIG5hbWUsIG5vdGhpbmcuIE5ldmVyIGhlYXJkIGFub3RoZXIgd29yZCBmcm9tIGhpbS4gCldoZW4geW91IGdldCB0byB0aGUgdGlwcywgeW91ciBjYW4gZWl0aGVyIHR1cm4gdGhlIGJydXNoIG91dHdhcmRzIHRvIGdldCBmbGlja2VkIG91dCBlbmRzLCB0dXJuIGl0IGlud2FyZHMgdG8gZ2V0IGN1cmxlZCBpbiBlbmRzLCBvciBwdWxsIGl0IHN0cmFpZ2h0IG91dCBmcm9tIHRoZSBoZWFkIGZvciBwb2tlciBzdHJhaWdodCBoYWlyLiBCbG93IGRyeSBlYWNoIHBpZWNlIHRocmVlIHRpbWVzIGZyb20gcm9vdHMgdG8gZW5kcy4KSSB0aGluayBpZiB5b3UgYXJlIGEgc21hbGwgICBoaWdoIHN0YWtlcyB0b3VybmFtZW50IHBva2VyIHBsYXllciwgdGhlcmUgaXMgc2ltcGx5IG5vIHdheSB5b3Ugd2lsbCBub3QgZ2V0IHdheSBtb3JlIHRoYW4gJDk5OSBvZiB2YWx1ZSBvdXQgb2YgdGhpcyBjb3Vyc2UuIExldCBzYXkgeW91IHBsYXkgMTAwayB3b3J0aCBvZiBidXlpbnMgaW4gYSB5ZWFyLCB5b3Ugb25seSBuZWVkIHRvIGluY3JlYXNlIHlvdXIgUk9JIGJ5IDElIGZvciBpdCB0byBiZSBhIHByb2ZpdGFibGUgcHVyY2hhc2UuClJlZ2lzdGVyIHRvIGF0IGxlYXN0IHNpeCBvbmxpbmUgY2FzaW5vcyBzbyB5b3UgY2FuIHJvdGF0ZSBmcm9tIG9uZSBjYXNpbm8gc2l0ZSB0byBhbm90aGVyLgpJIHJlYWxseSBoYXZlIGEgaGFyZCB0aW1lIGJlbGlldmluZyBoZSB3YXMgYSBjaGlsZCBtb2xlc3Rlci4gCkJ1dCB0aGV5IGRvbid0IGhhdmUgdGhlIHNhbWUgaW5mb3JtYXRpb24gc2V0IHRoYXQgeW91IGRvLiBUaGV5IGtub3cgdGhhdCBIaWxsYXJ5IGhhdGVzIHRoZW0gYW5kIGNhbGxzIHRoZW0gZGVwbG9yYWJsZS4gVGhleSBzZWUgVHJ1bXAgYWN0dWFsbHkgdGFsayBhYm91dCBzYXZpbmcgam9icyBmb3IgcGVvcGxlIGxpa2UgdGhlbSBpbnN0ZWFkIG9mIHRhbGtpbmcgYWJvdXQgYSB3YWdlIGdhcCB0aGF0IHRoZWlyIG1lZGlhIHRlbGxzIHRoZW0gaXMgYnVsbHNoaXQuIApDaGlyb3ByYWN0aWMgUm9sZSBpbiBUcmVhdGluZyBIZWFkYWNoZXMKMTcsIE5vLiAKRWFzdGVybiBFdXJvcGUsIENhdWNhc3VzLCBhbmQgSG9ja2V5LiBLYWlzZXJtYXRpYXMgaXMgYmV0dGVyIGtub3duIHRvIGhpcyBmcmllbmRzIGFuZCBmYW1pbHkgYXMgTWF0dCBMZXJuZXIsIGFuZCBoZSBpcyBoZXJlIHRvZGF5IHRvIHRhbGsgdG8gdXMgYWJvdXQgdGhlIGhpc3Rvcnkgb2YgaG9ja2V5ISBXZSB0YWxrIGFib3V0IHRoZSBoaXN0b3J5IG9mIGhvY2tleSBpdCBydWxlcywgZXF1aXBtZW50LCBzdHlsZXMuIApNZWV0IHRoZSBOZXcgWW9yayBpbnZlc3RvciB3aG8ncyBtYWtpbmcgYWxsIHRoZSByaWdodCBjYWxscyBpbiBzaG9ydGluZyBDYW5hZGlhbiBzdG9ja3NEb2xsYXJhbWEgc2hhcmVzIGRyb3AgYWZ0ZXIgc2hvcnQgc2VsbGVyIHNheXMgJ2Jyb2tlbiBncm93dGggc3RvcnknIGNvdWxkIHR1bWJsZSA0MCVUZW4gc3RvY2tzIGZvciAyMDE5OiBXaGF0IHRoZSBwcm9zIGFyZSBwaWNraW5nIHRvIG91dHBlcmZvcm0gdGhpcyB5ZWFyClRoZWxyZWQgcmVwbGFjZWQgbWFueSBvZiB0aGVzZSBtZW4gYnkgbWVuIHdobyB3b3VsZCBwcm92ZSB0byBiZSB0cmFpdG9yczsgYSBncmVhdCBleGFtcGxlIGlzIEVhbGRvcm1hbiBMZW9mc2lnZSwgd2hvIGluIDEwMDIga2lsbGVkIGZpYywgdGhlIEtpbmcncyBIaWdoIFJlZXZlNC4gCktub3dpbmcgdGhlIHByb2JhYmlsaXR5IG9mIG1ha2luZyBhIHNwZWNpZmljIGhhbmQgaW4gcG9rZXIgY2FuIGJlIGRvbmUgYnkgY2FsY3VsYXRpbmcgaGFuZCBvZGRzLiBGaWd1cmluZyBvdXQgaG93IG1hbnkgb3V0cyB5b3UgaGF2ZSB3aWxsIGdpdmUgeW91IHRoZSBwb3NzaWJpbGl0eSBvZiBjYWxjdWxhdGluZyB0aGUgbnVtYmVyIG9mIHRpbWVzIHlvdSB3aWxsIGhpdCB5b3VyIGhhbmQgYnkgdGhlIHJpdmVyLgpNYWtlIG1pc3Rha2VzIHdoaWxlIEkgZG9uIGNvbmRvbmUgd2hhdCBoYXBwZW5lZCB0aGF0IG5pZ2h0LCB5b3Uga25vdywgd2hhdCBDaHJpcyBkaWQgdG8gaGVyIHJlbWVtYmVyIGJlaW5nIHlvdW5nLCAxOSwgYW5kIGF0IHRoYXQgYWdlIGl0IHNlZW1lZCBsaWtlIGV2ZXJ5dGhpbmcgd2FzIHNvIG92ZXIgdGhlIHRvcCwgYW5kIGV2ZXJ5b25lIHNvIHBhc3Npb25hdGUgYWJvdXQgdGhpbmdzIGF0IHRoZSBhZ2UsIFBoaWZlciB0b2xkIHVzIGF0IHRoaXMgd2Vla2VuZCBXb3JsZCBQb2tlciBUb3VybmFtZW50IEludml0YXRpb25hbCBhdCB0aGUgQ29tbWVyY2UgQ2FzaW5vIGluIExvcyBBbmdlbGVzLgpKdXN0IHBsYXkgZXZlcnkgaGFuZCBhbmQgZXZlcnkgYmV0IGFuZCByYWlzZSB1bnRpbCB0aGUgYml0dGVyIGVuZC4gCkd1bnNsaW5nZXJzLCBwb2tlciBwbGF5ZXJzLCBhbmQgY2hpY2tlbnMgMjogRGVjaXNpb24gbWFraW5nIHVuZGVyIHBoeXNpY2FsIHBlcmZvcm1hbmNlIHByZXNzdXJlIGluIHN1YmVsaXRlIGF0aGxldGVzLiBJbjogV2lsc29uLCBNLiwgV2Fsc2gsIFYuIApUaGVuIEkgZ290IG9sZGVyLCBhbmQgZGVzcGl0ZSBteSB3ZWxsIHJlbm93bmVkIGZvcm1hbCBlZHVjYXRpb24sIEkgZm91bmQgbXlzZWxmIGhhdmluZyB0byBzdGFydCBmcm9tIHNjcmF0Y2ggYWdhaW4gZmlyc3Qgb2NjYXNpb25hbGx5IG1vcHBpbmcgYW5kIHN3ZWVwaW5nIHVwIHRoZSBibG9jaywgdGhlbiB3b3JraW5nIGluIHRoZSBraXRjaGVuIGFzIGEgdHJ1c3RlZSwgdGhlbiBhdCBhIHBpY2tsZSBmYWN0b3J5IHBsYW50LCB0aGVuIGEgd2FyZWhvdXNlIGRpc3RyaWJ1dGlvbiBjZW50ZXIsIGFuZCBmaW5hbGx5IGluIGEgdHJhY2tlZCBjYXJlZXIgcHJvZmVzc2lvbiBtYWtpbmcgZ29vZCBtb25leSB3aXRoIGdlbmVyYWxseSBtaW5pbWFsIHBoeXNpY2FsIGxhYm9yLiAKT3ZlcnZpZXcgZm9yIG11bHRpClRMO0RSOiBUaGUgbWFqb3JpdHkgb2YgdGhlIGFsbGVnYXRpb25zIGFuZCBhbGwgb2YgdGhlIG1vc3Qgc2VyaW91cyBvbmVzIGFwcGVhciB0byBoYXZlIGdvbmUgYXdheS4gSGUgcGF5aW5nIGJhY2sgc29tZSBpbXByb3Blcmx5IGNsYWltZWQgbWlsZWFnZSBhbmQgcGF5aW5nIGJhY2sgdGF4ZXMgb24gcHJvZml0cyBtYWRlIGZyb20gc2VsbGluZyBXb3JsZCBTZXJpZXMgdGlja2V0cy4gV2hpY2gsIGNvbnNpZGVyaW5nIHRoZSBncmF2aXR5IG9mIHRoZSBvcmlnaW5hbCBjaGFyZ2VzLCBpcyBwcmV0dHkgc21hbGwgYmVlci4KU28gd2hpbGUgY3JhcHMgbW92ZXMgYXQgMTAwIG9yIHNvIHJvbGxzIHBlciBob3VyIGFuZCBibGFja2phY2sgYWJvdXQgNjAgaGFuZHMgcGVyIGhvdXIsIHJvdWxldHRlIG1vdmVzIGF0IGEgbW9yZSBzdGF0ZWx5IHBhY2UgICByb3VnaGx5IDQ1IHNwaW5zIHBlciBob3VyLiAKVGhlIFRvcCAxMCBPbmxpbmUgUG9rZXIgQ2FzaW5vICA2IEFic29sdXRlIFBva2VyIFRoaXMgaXMgYSBncmVhdCBzaXRlIHRoYXQgZW1wbG95cyBnb29kIHNvZnR3YXJlLiAKSXRzIGtpbmQgb2YgbGlrZSBidXkgMiBnZXQgMSBmcmVlLi4gCk5vdCB2ZXJ5Li4gClRoZW4gS2FsbGlzIGJsb2NrZWQgdHdvIGRlbGl2ZXJpZXMgZnJvbSBSYXZpbmRyYSBKYWRlamEgYW5kIHdvcmtlZCBvbmUgdG8gZmluZSBsZWcsIGFuZCB0aGVuIHRvIHNxdWFyZSB0byBtb3ZlIHRvIDk0LiBIZSB3YXMgYmVhdGVuIGJ5IE1vaGFtbWFkIFNoYW1pLCBoYWQgYSBzaG9ydCBiYWxsIGh1cmxlZCBhdCBoaW0sIHN1cnZpdmVkIGEgeW9ya2VyIGFuZCBzYXcgb25lIGdvIGRvd24gdGhlIGxlZyBzaWRlLiAKQWx0ZXJuYXRpdmVseSwgeW91IHNob3VsZCBkb3duIGxvYWQgYW5kIHNldCB1cCB0aGUgYXBwbHlpbmcgYW5kIGFwcGxpY2F0aW9uIGZyb20gdGhlIG9ubGluZSBnYW1lIG9uIHlvdXIgZXF1aXBtZW50IGZvciBwbGF5aW5nIHRoZSBzcG9ydC4gTW9zdCBvZiB0aGUgb2J0YWluIHByaW1hcmlseSBiYXNlZCBKdWRpIG9ubGluZSBnYW1lcyBhcmUgYmxhY2tqYWNrLCBvbmxpbmUgcG9rZXIsIHJvdWxldHRlIGFuZCBldmVuIG1vcmUuIApFdmVyeW9uZSB3YW50cyB0byB3aW4uIEl0J3MgY2FsbGVkIGRlYWxlcidzIGNob2ljZSBiZWNhdXNlIHRoZXJlIGFyZSAyMCBkaWZmZXJlbnQgZ2FtZXMgdGhlIHBsYXllcnMgY2FuIGNob29zZSBmcm9tLiBUaGUgb25lIGdhbWUgSSBwaWNrZWQgYSBsb3Qgd2FzIHRoZSBmaXZlIGNhcmQgZHJhdywgd2hpY2ggd2FzIHRoZSBsZWFzdCBwaWNrZWQuIi4gClNlbGwgdGhlIGRyYW1hLCBkYXJsaW5ncywgc2VsbCB0aGUgZHJhbWEuU2luZywgZ3VzdGlseSBhbmQgbG91ZGx5LCBwcmVmZXJhYmx5IHdpdGggeW91ciB3aW5kb3dzIGRvd24uIFJlYWxseSBnZXQgaW50byBpdC4gQm9udXMgcG9pbnRzIGFyZSBhd2FyZGVkIGZvciB2aXNpYmxlIHNwaXR0bGUgZWplY3Rpb24uU2NyZWFtIGdyZWV0aW5ncyBhdCBwZWRlc3RyaWFucyBhbmQvb3IgYW5pbWFscy4gCkJ1dCBsZXQgaW1hZ2luZSB0aGUgc3lzdGVtIHdvcmtlZCBwZXJmZWN0bHkgYW5kIGhlIGNhbGxzIGEgc2Nob29sIGFuZCBzYXlzICJJIGEgc3RhdGUgcmVwcmVzZW50YXRpdmUiIGFuZCB0aGV5IHNheSAibm8geW91IG5vdCIKTm9ybWFsbHksIG9uZSBjYW4ganVkZ2Ugd2hldGhlciBoZSBpcyBoYXBweSBvciBkaXN0dXJiZWQgZnJvbSBoaXMgZmFjZSAgIGV2ZW4gZnJvbSBhIGRpc3RhbnQgUHJlc3MgR2FsbGVyeS4gU29tZWhvdyB3ZSBjb3VsZCBub3QgZGlzY2VybiBhbnkgdHJhY2VzIG9mIGRpc3R1cmJhbmNlIG9uIGhpcyBmYWNlLiAKT3RoZXIgZXhhbXBsZXMgaW5jbHVkZSBLaXJrc3RhbGwgQWJiZXksIHdoaWNoIGRhdGVzIGJhY2sgdG8gdGhlIDEydGggQ2VudHVyeSBhbmQgdGhlIFdlc3RnYXRlIG1lZGl2YWwgZ2F0ZWhvdXNlIGluIFdpbmNoZXN0ZXIuIApTa2luIG1hc3MgYmlvcHNpZXMvcHVuY2ggYmlvcHNpZXNBcnRlcmlhbCBibG9vZCBnYXMKVGhlIGhlYXZ5IHJvbGxlciBvbiB0aGUgcHJvZ3JhbSB3YXMgTWFobGVyJ3MgU3ltcGhvbnkgTm8uIDEsIlRpdGFuLiIgV2l0dHJ5IGNob3NlIHRvIHRoZSB3b3JrIGluIGl0cyBvcmlnaW5hbCBmaXZlIG1vdmVtZW50IGZvcm0sIHRoZSBzZWNvbmQgbW92ZW1lbnQgZW50aXRsZWQgIkJsdW1pbmUiIChGbG93ZXJzKSwgd2hpY2ggdGhlIGNvbXBvc2VyIHN1YnNlcXVlbnRseSBkcm9wcGVkLiAKSG9uZXN0bHksIEkgbG9va2VkIHVwIHRvIGhlciBjaGFyYWN0ZXIgU2FtIHNvIG11Y2ggYXMgYSBraWQuIE5vdCBmb3IgdGhlICJmcmllZCBjaGlja2VuIiBsaW5lcywgYnV0IGJlY2F1c2Ugc2hlIHdhcyBhIGJhZGFzcyBhbmQgc2hlIHdhcyB0b3VnaCBhbmQgYSBmaWVyY2VseSBsb3lhbCBmcmllbmQuIEkgd2FzIGEgbG90IGxpa2UgaGVyIGFzIGEga2lkIChhbmdlciBpc3N1ZXMsIHN0eWxlLCBldmVuIHRoZSBjdXJseSBoYWlyKSBhbmQgSSB0aG91Z2h0IGl0IHdhcyBjb29sIHRvIHNlZSBzb21lb25lIGtpbmRhIGxpa2UgbWUuIFNoZSBoYWQgaGVyIGJhZCBtb21lbnRzLCBidXQgaGVyIGJhZCBtb21lbnRzIHdlcmUgc2ltaWxhciB0byBtaW5lIChhY2NpZGVudGFsbHkgc2F5aW5nIHNvbWV0aGluZyBodXJ0ZnVsLCBnZXR0aW5nIHRvbyBtYWQgdG9vIGZhc3QpIGFuZCBpdCBoZWxwZWQgdG8gc2VlIGhvdyBzaGUgZGVhbHQgd2l0aCB0aG9zZSBwcm9ibGVtcy4gSWRrIEkgbGlrZWQgaGVyIGFuZCB0aGF0IGNoYXJhY3RlciBhbHdheXMgbWFkZSBtZSBsaWtlIEplYW5ldHRlIE1jQ3VyZHkuIEkganVzdCBzdGFydGVkIHVzaW5nIHdhc2hpIHRhcGUgbW9yZSB0aGlzIHllYXIgc28gSSdtIHN0aWxsIGdldHRpbmcgdGhlIGhhbmcgb2YgaXQhIFVzdWFsbHkgdGhlIHdlZWtseSBzcHJlYWRzIGtpbmQgb2YgZm9sbG93IHRoZSB0aGVtZSBvZiB0aGUgbW9udGhseSBjb3ZlciBidXQgdGhhdCdzIHJlYWxseSBqdXN0IGJlY2F1c2UgaXQncyB3aGF0IEkgaGFwcGVuIHRvIGJlIGludG8gYXQgdGhlIHRpbWUgYW5kIEkgZ2V0IHNpY2sgb2YgaXQgYWZ0ZXIgYSBtb250aC4gTGlrZSByaWdodCBub3cgSSdtIGludG8geWVsbG93IGFuZCBsYXN0IG1vbnRoIEkgd2FzIGludG8gcGluayBhbmQgcHVycGxlIGZvciBWYWxlbnRpbmUncyBEYXkuIFRoYW5rIHlvdSBmb3IgeW91ciBjb21tZW50IQpTbyBhIGNvbGxlYWd1ZSB3aG8gaGFzIHRoZSBnaWZ0IG9mIHRhbGtpbmcgc2hpdCByZWFsbHkgd2VsbCBjYWxscyB0aGUgbnVtYmVyLiAKU3ltcHRvbXMgYXJlIHJlbGlldmVkIGJ5IHJlc3QsIHdhcm10aCBhbmQgbHlpbmcgZG93bi4uIApXaXIgdHJhZmVuIHVucyBhbHMgMTUgSmhyaWdlIGJlaW0gQmVtYWxlbiBkZXIgV25kZSBpbiB1bnNlcmVyIE5hY2hiYXJzY2hhZnQuIFNlaXRkZW0gd3VyZGVuIHdpciBGcmV1bmRlLiBVbnNlciBTdHVkaW8gaXN0IGluIE1hZHJpZCwgYWJlciB3aXIgdmVyYnJpbmdlbiB1bnNlcmUgVGFnZSBoaWVyIHVuZCBkb3J0LCB3aXIgbGViZW4gendpc2NoZW4gRmFyYmVpbWVybiwgQ29tcHV0ZXJuIHVuZCBUaXNjaHRlbm5pcy4gV2lyIGxpZWJlbiwgd2FzIHdpciB0dW4uIFdpciB2ZXJzdGVoZW4gdW5zZXJlIEFyYmVpdCBhbHMgV2Vya3pldWcgZGllIFN0cmFlbiB6dSB2ZXJ3YW5kZWxuIHVuZCBWZXJiaW5kdW5nIHp3aXNjaGVuIGRlbiBNZW5zY2hlbiB6dSBzY2hhZmZlbi4gV2lyIGZobGVuIFZlcmFudHdvcnR1bmcgZnIgZGllIFN0YWR0IHVuZCBkaWUgWmVpdCBpbiBkZXIgd2lyIGxlYmVuLgpJdCByZWFsbHkgdmlsbGFpbiBkZXBlbmRlbnQsIGJ1dCB0aGVyZSBhIGxvdCBvZiAxLzIgcGxheWVycyB0cnkgdG8gdHJhcCB3YXkgdG9vIG11Y2guIApFaGhoIHRoZXNlIFp1bWEgeWVhcnMgaXMgcmVhbGx5IHN0dXBpZC4gTXkgY291c2luIGlzIGZpbmFsbHkgZG9uZSB3aXRoIGhlcnMsIGJ1dCBJIHdhcyBhbHdheXMgc28gc2NhcmVkIHRoYXQgc29tZXRoaW5nIHdvdWxkIGhhcHBlbiB0byBoZXIuCiJIZSBpbW1lZGlhdGVseSB3ZW50IGFuZCB0YWxrZWQgdG8gdGhlaXIgc3RhdGUgZ292ZXJubWVudCBjaGFpciwgYW5kIG9idmlvdXNseSB0aGUgc2FtZSBjb252ZXJzYXRpb24gd2FzIGdvaW5nIG9uIG92ZXIgb24gdGhlIFNlbmF0ZSBzaWRlLiBBbmQgYSBudW1iZXIgb2YgdGhlIHJlYWxseSBvYmplY3Rpb25hYmxlIGFzcGVjdHMgd2VyZSBhZGRyZXNzZWQgYmVmb3JlIHRoZSBmaW5hbCBiaWxsIHdhcyBwYXNzZWQsIiBXaGVlbG9jayByZWNhbGxzLiAiQmVjYXVzZSBpdCBtYXkgd2VsbCBoYXZlIHJlc3VsdGVkIGluIGEgdmV0byBvZiB0aGF0IGJpbGwsIGFuZCBpZiB0aGF0IGJpbGwgaXMgdmV0b2VkLCBpdCBwcm9iYWJseSB3b3VsZG4ndCBoYXZlIGJlZW4gdGhlIG9ubHkgYmlsbC4iLiAKSW4gZ2VuZXJhbCwgZ3JhaW5zIGFuZCBiZWFucyBhcmUgY29uc2lkZXJlZCB0byBicmluZyBzdGFiaWxpdHkgdG8gdGhlIGJvZHkuIFRoZXkgYnVpbGQgYmxvb2QgYW5kIHFpLCBhbmQgdGhleSBlc3RhYmxpc2ggcmh5dGhtIGFuZCBzdGFiaWxpdHkuIApJIGFsc28gdGFsayB0byB0aGUgZ2lybHMgYXMgZXh0ZW5zaXZlbHkgYXMgSSBjYW4uIAoiQnV0IEkgZm91bmQgb3V0IGZyb20gbXkgZXhwZXJpZW5jZSwgSSBuZWVkIGEgY2hhbGxlbmdlLiAKVGhlIHBhcGVyOiAiQWJzdHJhY3QgUmVhbCBhbmQgc2ltdWxhdGVkIHBhcnRpY3VsYXRlIGZhbGxvdXQgYW5kIHNvbHV0aW9ucyBvZiBTcjg1Q0wyIGFuZCBDczEzNENsMiBmZWQgdG8gMTAyIGhlYWx0aHkgdm9sdW50ZWVycy4gClJ1bW91cnMgc3dpcmxlZCB0aGF0IE1hcndhbiBCYXJnaG91dGksIHBlcmhhcHMgdGhlIGJlc3Qga25vd24gUGFsZXN0aW5pYW4gcHJpc29uZXIgYW5kIGEgbm90ZWQgbGVhZGVyIG9mIEZhdGFoJ3MgeW91bmdlciBnZW5lcmF0aW9uLCB3b3VsZCBiZSBpbmNsdWRlZCwgYXMgd2VsbCBhcyBwZXJoYXBzIEFobWVkIFNhZGF0LCBhIHJlc3BlY3RlZCBsZWFkZXIgb2YgdGhlIGxlZnRpc3QgUG9wdWxhciBGcm9udCBmb3IgdGhlIExpYmVyYXRpb24gb2YgUGFsZXN0aW5lLCB3aG8gaGFzIGJlZW4gaW1wcmlzb25lZCBmb3IgYWxtb3N0IGEgZGVjYWRlLiBCdXQgdGhlbiBzdXBlcnNlZGluZyBydW1vdXJzIGRlbmllZCB0aGF0IGVpdGhlciBTYWRhdCBvciBCYXJnaG91dGkgd291bGQgYmUgaW5jbHVkZWQuIERlc3BpdGUgdGhlIHJlY2VudGx5IGVzY2FsYXRpbmcgdGVuc2lvbnMgYmV0d2VlbiB0aGUgcG9wdWxhdGlvbiBhbmQgdGhlIG1pbGl0YXJ5IGNvdW5jaWwgd2hpY2ggaG9sZHMgb3ZlcmFsbCBwb3dlciBpbiBFZ3lwdCwgdGhlIHBvc3QgVGFocmlyIFNxdWFyZSBFZ3lwdGlhbiBnb3Zlcm5tZW50IGlzIHBsYXlpbmcgYSBzaWduaWZpY2FudGx5IG5ldyByb2xlIGluIHRoZSByZWdpb24uCkkgbmVhciB0aGUgZW5kIGFuZCBpdCBoYXMgdGFrZW4gbWUgYWJvdXQgYSB5ZWFyIGJ1dCBJIGEgc2xvdyB3YXRjaGVyLCBJIGZhbGwgYXNsZWVwIGR1cmluZyB2aXJ0dWFsbHkgYW55IHNob3cgaWYgSSB0cnkgdG8gd2F0Y2ggaXQgYWZ0ZXIgd29yaywgYW5kIEkgdG9vayBsaWtlIGEgNCBtb250aCBicmVhay4gSXQgaXMgdmVyeSBiaW5nZSBhYmxlLiAKU2Vjb25kbHksIGl0IG5vdCB0aGUgcHJlc2VuY2Ugb2YgYSBnb3Zlcm5tZW50IHRoYXQgbWFrZXMgbWUgdGFrZSBzdGVwcyB0byBhdm9pZCBiZWluZyBraWxsZWQuIApEaWUgSG90ZWxrZXR0ZSBiZXRyZWlidCBydXNzbGFuZHdlaXQgYmlzbGFuZyB6d2VpIEh1c2VyOiBkYXMgQXJhcmF0IFBhcmsgSHlhdHQgaW4gTW9za2F1IHVuZCBkYXMgSHlhdHQgUmVnZW5jeSBpbiBKZWthdGVyaW5idXJnLiAKRm9yIGluc3RhbmNlLCB0aGUgbW9yZSBwb2x5ZXN0ZXIgaXMgaW4gdGhlIGNsb3RoLCB0aGUgbW9yZSBzbGVlayBpdCB3aWxsIGZlZWwsIGFuZCB0aGUgbW9yZSBzdGFpbiByZXNpc3RhbnQgaXQgd2lsbCBiZSwgYnV0IHlvdSBhbHNvIG5lZWQgdG8gcmVtZW1iZXIgdGhhdCB5b3UgYXJlIGxvb2tpbmcgYXQgc29tZXRoaW5nIHRoYXQgbWlnaHQgZmVlbCBhIGxpdHRsZSBtb3JlIGxpa2UgcGxhc3RpYyB0aGFuIHlvdSBtaWdodCBwcmVmZXIuIElmIHlvdSBsb3ZlIHRoZSBvbGQgZmFzaGlvbmVkIGZlZWwgb2Ygc29tZSBvZiB0aGUgdHJhZGl0aW9uYWwgZmVsdHMsIG1ha2Ugc3VyZSB0aGF0IHlvdSBnZXQgb25lIHRoYXQgaGFzIGEgaGlnaGVyIHdvb2wgY29udGVudC4gVGFrZSBzb21lIHRpbWUgYW5kIG1ha2Ugc3VyZSB0aGF0IHlvdSB0aGluayBhYm91dCB3aGF0IHlvdXIgb3B0aW9ucyBhcmUgZ29pbmcgdG8gYmUgd2hlbiB5b3Ugd2FudCB0byByZWRvIGEgZmVsdCB0YWJsZS4uIApIT1dFVkVSIEkgd2FudCB0byBkaXNjb3VyYWdlIHlvdSBmcm9tIGdldHRpbmcgdGhlIFIgbmluZVQgc2NyYW1ibGVyIGFzIGEgZmlyc3QgYmlrZS4gVGhlcmUgYXJlIGEgbnVtYmVyIG9mIHJlYXNvbnMgaXQgaXMgaW5hcHByb3ByaWF0ZS4gCllvdXIgaGVhZGxpbmUgbXVzdCBiZSBjb21wcmlzZWQgb25seSBvZiB0aGUgZXhhY3QgY29waWVkIGFuZCBwYXN0ZWQgaGVhZGxpbmUgb2YgdGhlIGFydGljbGUgICBzZWUgb3VyIHJ1bGUgaGVyZS4pIFdlIHJlY29tbWVuZCBub3QgdXNpbmcgdGhlIFJlZGRpdCBhIHRpdGxlIGFzIGl0IG1heSBub3QgZ2l2ZSB0aGUgZXhhY3QgdGl0bGUgb2YgdGhlIGFydGljbGUuIElmIHlvdSBhcmUgbG9va2luZyBmb3IgcGFjaWZpYyBjb250ZW50LCB0aGVyZSBpc24gYW55IGhlcmUsIHdhciB0aHVuZGVyIGhhcyBodW5kcmVkcyBvZiBwbGFuZXMsIGJ1dCB0aGV5IGFyZSBwb29ybHkgc2ltdWxhdGVkIGFuZCB0aGUgbW9kZWxzIGFyZSB2ZXJ5IHBvb3IgYXMgd2VsbC4gTWFraW5nIGFpcmNyYWZ0IGluIHRoaXMgZ2FtZSB0YWtlcyBmYXIgbW9yZSB0aW1lLCBidXQgdGhlIGV4cGVyaWVuY2UgaXMgZmFyIG1vcmUgcmV3YXJkaW5nIHRoYW4gYSAxNiBwbGF5ZXIgc2ltIGJhdHRsZSBpbiB3YXIgdGh1bmRlci4gT25saW5lIGlzIDQydnM0MiBmb3IgODQgbWFuIHNlcnZlcnMuClQgU3BsaW5lcyAzIDQgS2V5Z2VuIENyYWNrCkxvYm90b21pc3RDaXJjdSAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVmVyaXRhc2x1eGxpYmVydGFzIHUKQWx0aG91Z2ggeW91IGNhbid0IGV4cGVjdCB0b3RhbCBtaXJhY2xlcywgbW9zdCBjcmVhbXMgc2hvdWxkIGhlbHAgdG8gc29tZSBkZWdyZWUuLiAKV2hlbiB0aGV5IGNhbWUgdG9nZXRoZXIsIHRoZSBFYWxkb3JtYW4gW0VhZHJpY10gd2FudGVkIHRvIGJldHJheSB0aGUgdGhlbGluZyBbRWRtdW5kXS4gQW5kIHRoZW4gRWFsZG9ybWFuIEVhZHJpYyBlbnRpY2VkIDQwIHNoaXBzIGZyb20gdGhlIGtpbmcsIGFuZCB0aGVuIHN1Ym1pdHRlZCB0byBDbnV0LiAKKGV1aCBub24sIG1lYywgYydlc3QgbW9uIHBvaWRzIGFwcnMgYXZvaXIgcGVyZHUgMTAga2csIG9uIHBldXQgZGlyZSBxdWUgZGVwdWlzIHVuZSB2aW5ndGFpbmUgZCdhbm5lcyBjJ2VzdCBtb24gcG9pZHMgbGUgcGx1cyBiYXMpLiAKSSBnZXQgdGhhdCB0aGV5J3JlIGNvdmVyaW5nIHRoZWlyIGFzc2VzLCBidXQgaXQgbGVnaXRpbWF0ZWx5IGZlZWxzIGxpa2UgSSBnZXQgYSByZXBvcnQgdGhhdCBpc24ndCAxMDAlIHN0cmFpZ2h0IG9mZiB0aGUgTUFSIG9uY2UgYSBtb250aCAod29yZCBmb3Igd29yZCwgb2J2aW91c2x5IEkgZG9uJ3Qgd2FudCB0aGVtIG1ha2luZyBzaGl0IHVwKSBhbmQgaXQncyBsaWtlIHRoZXkndmUgbmV2ZXIgc2V0IGV5ZXMgb24gdGhlIHBhdGllbnQgaW4gdGhlaXIgbGl2ZXMuIEl0IGNvdWxkIGxlZ2l0aW1hdGVseSBqdXN0IGJlIHRoZWlyIGNoYXJnZSBjYWxsaW5nIHJlcG9ydHMgZXZlcnkgdGltZSBmb3IgYWxsIEkga25vdy4uIApMb2dpblRoaXMgaXMgbmVjZXNzYXJ5IHRvIHNpZ24gaW4gdG8gdGhlIEh1YlBhZ2VzIFNlcnZpY2UuIEdvb2dsZSBSZWNhcHRjaGFUaGlzIGlzIHVzZWQgdG8gcHJldmVudCBib3RzIGFuZCBzcGFtLiAoUHJpdmFjeSBQb2xpY3kpQWtpc21ldFRoaXMgaXMgdXNlZCB0byBkZXRlY3QgY29tbWVudCBzcGFtLiAKVHVybnMgb3V0IEthd2FqYSB3YXMgcGxheWluZyBvZmYgdGhlIEZCSSBhY3JvbnltIHRvIHRvdXQgaGlzIGNvbXBhbnksIGtub3duIGZvciBpdHMgTHVtYXNjYXBlIGdyYXBoaWNzIHRoYXQgYnJpbmcgb3JkZXIgdG8gdGhlIHNwcmF3bGluZyBzY29wZSBvZiBzZXZlcmFsIGluZHVzdHJpZXMuIEhlIHJldmVhbGVkIGEgc2xpZGUgdGhhdCBzdGF0ZWQgIkx1bWE6IEFnZW50cyBGYWNpbGl0YXRpbmcgQnVzaW5lc3MgSW52ZXN0bWVudC4iIFRoZSByZWZlcmVuY2Ugd2FzIG5vdCBsb3N0IG9uIEJpbGwgRHVnZ2FuLCBncm91cCBleGVjdXRpdmUgVlAgYXQgdGhlIEFOQSwgd2hpY2ggaGFzIGZhY2lsaXRhdGVkIGNvbW11bmljYXRpb24gYmV0d2VlbiB0aGUgcmVhbCBGQkkgYW5kIEFOQSBtZW1iZXJzIGFib3V0IHRoZSBwcm9iZS4gCk1hcnkgSm8gUGF0dGVyc29uIG9mZmljaWF0aW5nLiAKSSBsaWtlIHRvIHRyYWluIG15IGNsaWVudHMgdG8gYmUgZ29vZCBhdCBpbnRha2UgOikgU28gSSBzZW5kIHRoZW0gaG9tZSB3aXRoIHF1ZXN0aW9ucyB0byB0aGluayBhYm91dC4gIk5vdGljZSB3aGVuIGl0IGJvdGhlcnMgeW91LiBEZXNjcmliZSBpdCB3aXRoIGFkamVjdGl2ZXMgd2hlbiBpdCBjb21lcyB1cC4gS2VlcCBhIHBhaW4gam91cm5hbC4gSSBuZWVkIHRvIGtub3cgd2hhdCBhY3Rpdml0aWVzIHRoaXMgcGFpbiBhZmZlY3RzIHNvIHdlIGNhbiBiaWxsIHlvdXIgaW5zdXJhbmNlIGZvciB0aGUgbWFzc2FnZS4iIEkgdXN1YWxseSBqdXN0IGdpdmUgdGhlbSBhIGhpbnQgb2Ygc29tZXRoaW5nIHRvIGtlZXAgdGhpbmtpbmcgYWJvdXQsIGFuZCBiZXR3ZWVuIHRoYXQgYW5kIGdldHRpbmcgdXNlZCB0byB0aGUgcmh5dGhtIG9mIG15IHF1ZXN0aW9ucyAoZWcgdGhlIDJuZCB0aW1lIHRoZXkgaGVhciAiZGVzY3JpYmUgdGhhdCBzZW5zYXRpb24gd2l0aCB3b3JkcyBvdGhlciB0aGFuIG9yIHRoZXkgZG8gYSBsb3QgYmV0dGVyLiBUaGV5IGdpdmUgbWUgYSBsb3QgYmV0dGVyIGluZm8uCkhhdmUgZnVuLiAKSW4gYmxhY2tqYWNrIHN0cmF0ZWd5IGNpcmNsZXMgd2UgaGVhciBhIGxvdCBhYm91dCBvZGRzLCBwZXJjZW50YWdlcywgYXZlcmFnZXMsIGFuZCBhc3NvY2lhdGVkIHRlcm1zIGxpa2Ugc2hvcnQgaGF1bCwgbG9uZyBydW4sIGFuZCBpbmZpbml0eS4gQnV0IG1heWJlIHdlIHNob3VsZCB0dXJuIG91ciBmb2N1cyB0byB3aGF0IGtpbmQgb2YgbHVjayB3ZSBhcmUgaGF2aW5nIGluIG91ciBzZXNzaW9ucy4gCkl0IHR1cm5lZCBvdXQgdGhhdCBzaGUgd2FzIGxlZnQgZm9yIGRlYWQgYnkgdGhlIEJZQiBiZWNhdXNlIHNoZSBoYWQgYmVlbiBicmVkIHNvIG1hbnkgdGltZXMgdGhhdCBzaGUgaGFkIHBlcm1hbmVudCBkYW1hZ2UgdG8gaGVyIHJlcHJvZHVjdGl2ZSBvcmdhbnMgYW5kIGhhZCB0byB1bmRlcmdvIHNldmVyYWwgc3VyZ2VyaWVzIHRvIHNhdmUgaGVyLiAKQW55d2F5IGlmIHlvdSBkb24ndCBoYXZlIGEgam9iIHlvdSBjYW4ndCBnZXQgdGhlIHRlbXBvcmFyeSByZXNpZGVudCBwZXJtaXQuClBoZWlzZW5iZXJnICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpDZXJ0YWluIENvbnRlbnQgaXMgZnVybmlzaGVkIGJ5IGFnZW5jaWVzIHN1Y2ggYXMgdGhlIEFzc29jaWF0ZWQgUHJlc3MgYW5kIFJldXRlcnMsIHdoaWNoIHdpbGwgbm90IGJlIGxpYWJsZSBmb3IgYW55IGRlbGF5cywgaW5hY2N1cmFjaWVzLCBlcnJvcnMgb3Igb21pc3Npb25zIGluIGFueSBzdWNoIENvbnRlbnQsIG9yIGluIHRoZSB0cmFuc21pc3Npb24gb3IgZGVsaXZlcnkgb2YgYWxsIG9yIGFueSBwYXJ0IHRoZXJlb2YsIG9yIGZvciBhbnkgZGFtYWdlcyBhcmlzaW5nIHRoZXJlZnJvbS4uIApJdCBhbG1vc3QgYSBzZWxmIGZ1bGZpbGxpbmcgcHJvcGhlY3ksIGluIHRoZSBzZW5zZSB0aGF0IHlvdSBhcmUgZXhhZ2dlcmF0aW5nIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4geW91ciBjb21wYXJpc29uIGdyb3VwcyB0byBwcm92ZSB0aGF0IHRoZSB0d28gZ3JvdXBzIGFyZSBkaWZmZXJlbnQuIApUaGUgZmVkZXJhbCBhZ2VuY3kgc2FpZCBUaHVyc2RheSB0aGF0IHRoaXMgaXMgdGhlIHRlbnRoIHF1YXJ0ZXIgaW4gYSByb3cgd2hlcmUgaXQgaGFzIGdpdmVuIHRoZSBuYXRpb25hbCBob3VzaW5nIG1hcmtldCBhIGFzc2Vzc21lbnQuCkdlb3JnZSBXYXNoaW5ndG9uLCBKYW1lcyBNb25yb2UsIEFuZHJldyBKYWNrc29uLCBKYW1lcyBQb2xrLCBKYW1lcyBCdWNoYW5hbiwgQW5kcmV3IEpvaG5zb24sIEphbWVzIEdhcmZpZWxkLCBXaWxsaWFtIE1jS2lubGV5LCBUaGVvZG9yZSBSb29zZXZlbHQsIFdpbGxpYW0gVGFmdCwgV2FycmVuIEhhcmRpbmcsIEZyYW5rbGluIFJvb3NldmVsdCwgSGFycnkgVHJ1bWFuLCBMeW5kb24gSm9obnNvbiwgYW5kIEdlcmFsZCBGb3JkIHdlcmUgYWxsIEZyZWVtYXNvbnMsIG1hbnkgc3ltYm9scyBvZiB3aGljaCBhcmUgZm91bmQgb24gQW1lcmljYW4gY3VycmVuY3kuIExpbmNvbG4gd2FzIHRoZSBvbmx5IHByZXNpZGVudGlhbCBjYW5kaWRhdGUgd2hvIHdhcyBub3QgYSBGcmVlbWFzb24gaW4gdGhlIDE4NjAgZWxlY3Rpb24uLiAKQXJkcmV5IGFsc28gd2FybnMgdGhlIDEzOCBwZXIgY2VudCBkaXZpZGVuZCBvbiBub24gcmVnaXN0ZXJlZCBDYW5hZGlhbiBkaXZpZGVuZHMgY2FuIHB1dCB5b3UgY2xvc2VyIHRvIHRoZSBjbGF3YmFjayB6b25lLgpJIHBlZWxlZCBvbmUgZm9yIHRoZSB0YWJsZSB0byBzaG93IHRoZW0gaG93IGl0IHdhcyBkb25lLiBUb29rIGEgd2hpZmYgb2YgaXQsIGFuZCBpdCBzbWVsbGVkIGxpa2UgYXNzLiAKQ29sbGVnZSBmb290YmFsbCB2cyB0aGUgTkZMIGFub3RoZXIuIE5vIG9uZSBzZWVtcyB0byBiZSBhYmxlIHRvIGV4cGxhaW4gd2h5IHNtYWxsIEV1cm9wZWFuIHRlYW1zIGdldCB0aGVpciBjdWx0IGZvbGxvd2luZ3MgZGVzcGl0ZSBwbGF5aW5nIHRyYXNoIGZvb3RiYWxsLiBGZW1pbmlzdHMgYXJlIGZhaXIgZW5vdWdoIHRvIGFyZ3VlIHRoYXQgeW91IGNvdWxkIGludmVzdCBzdWZmaWNpZW50IHJlc291cmNlcyB0byBtYXJrZXQgbGVhZ3VlcyBpbnRvIGV4aXN0ZW5jZS4uIApKdXN0IGNvbWluZyBieSBhbmQgc2F5aW5nIGhpLCBzaGFyaW5nIGEgc21pbGUsIGFuZCBicmluZ2luZyBzb21lIGZsb3dlcnMgdG8gYnJpZ2h0ZW4gdGhlIHJvb20gY2FuIGRvIHdvbmRlcnMuIApUaGUgcGhvbmUgd2FzIGRpc2Nvbm5lY3RlZCBmcm9tIGNlbGx1bGFyLCBzbyBoZSBwcmV0dHkgbXVjaCB1c2VkIGl0IGFzIGlQb2Qgb3ZlciB3aSBmaS4gSGUgbmVlZGVkIGhlbHAgZG93bmxvYWRpbmcgYW5kIG1hbmFnaW5nIGhpcyBzb25ncywgYmVjYXVzZSBoZSB3b3VsZCB3b3JrIG91dCBpbiBoaXMgeWFyZCBhIGxvdCBhbmQgbG9zZSBoaXMgd2lmaSBjb25uZWN0aW9uLiAKVGhlIEZyZW5jaCBub3RlZCB0aGF0IFJ1c3NpYSB3YXMgcHVzaGluZyBmb3IgaXRzIFN5cmlhbiBhbGx5IHRvIHRha2UgQWxlcHBvICJyZWdhcmRsZXNzIG9mIHRoZSBodW1hbiBjb3N0Ii4gCkJlbmVmaXRzIEVtcGxveWVycyBiZW5lZml0IGZyb20gaGF2aW5nIGhlYWx0aHkgZW1wbG95ZWVzLiAKU3RhdGlzdGljIENhbmFkYSBpc24gYSBzdHJhbmdlciB0byBjb250cm92ZXJzeS4gVGhlIGFnZW5jeSBmb3IgeWVhcnMgZWFybmVkIHRoZSBpcmUgb2YgZWNvbm9taXN0cyBieSByZWxlYXNpbmcgam9icyBhbmQgaW5mbGF0aW9uIGRhdGEgZWFybGllciB0aGFuIG90aGVyIGRhdGEsIGEgcHJhY3RpY2UgaXQgZW5kZWQgaW4gMjAxMS4gQXJvdW5kIHRoZSBzYW1lIHRpbWUsIGl0IGFkbWl0dGVkIHRvIGFsbG93aW5nIHNvbWUgZGlzdHJpYnV0b3JzIHRvIGdldCBpbmZvcm1hdGlvbiBhbG1vc3QgYSBtaW51dGUgYWhlYWQgb2YgdGhlIG9mZmljaWFsIHJlbGVhc2UsIGEgcHJhY3RpY2UgdGhhdCBsZWQgdG8gYW4gaW52ZXN0aWdhdGlvbiBieSBLUE1HIExMUC4uIApJJ2Qgc2F5IGdvIGZvciB0aGUgTVJJIGlmIHlvdSBjYW4gYWZmb3JkIGl0LiBJIGxpdmUgaW4gQ2FuYWRhIHNvIE1SSSBpcyBmcmVlIGJ1dCBoYXJkIHRvIGdldC4gSSB3aXNoIEkgaGFkIGRlYWx0IHdpdGggaXQgYSB5ZWFyIGVhcmxpZXIuIApJZiBoZSBiZWF0cyBLYWlraSwgd2hpY2ggaXMgdmVyeSBwbGF1c2libGUsIHNpbmNlIGhlIGdvdCBtb3JlIHZvdGVzIHRoYW4gaGltIGxhc3Qgcm91bmQsIHdlIG1heSBzZWUgb25lIG9mIHRoZSBjcmF6aWVzdCBzdHJlYWtzIGluIGJlc3QgY2hhcmFjdGVyIGhpc3RvcnkuIEkgcHVsbGluZyBmb3IgbXkgYm95LCBkZXNwaXRlIG9ubHkgaGF2aW5nIHJlYWQgMSB2b2x1bWUgb2YgYmVyc2Vyay4gNCBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvTm90IG11Y2ggdG8gc2F5IGFib3V0IHRvZGF5cyB2b3RlLCBvdGhlciB0aGFuIEtpbGx1YSBpcyBhYm91dCB0byBlbmQgdGhpcyBtYW5zIHdob2xlIGNhcmVlci4gCllvdSBub3Qgc2ltcGx5IHBheWluZyBhIHBvcnRpb24gb2YgeW91ciB3aW5uaW5ncywgeW91IHBheWluZyA1MDAgRVVSIGFuZC9vciBhIHBvcnRpb24gb2YgeW91ciB3aW5uaW5ncy4gCkNoaXBzIGFyZSBhdmFpbGFibGUgaW4gbWFueSBkaWZmZXJlbnQgZGVzaWducyB1c2luZyBkaWZmZXJlbnQgbWF0ZXJpYWxzLiBUaGUgdHlwZSB0aGF0IHN1aXRzIHlvdSBiZXN0IGlzIGEgcGVyc29uYWwgZGV0ZXJtaW5hdGlvbi4gVGhpcyBjaG9pY2UgbWF5IGJlIGJhc2VkIG9uIHRoZSBmZWVsIG9mIHRoZSBjaGlwIGluIHlvdXIgaGFuZDsgcHJpY2luZyBtYXkgYWxzbyBiZSBhIGRldGVybWluaW5nIGZhY3RvciwgYnV0IGlmIHlvdSdyZSBhIGxvdmVyIG9mIHRoZSBnYW1lLCB0aGUgZmVlbCBzaG91bGQgYmUgdGhlIGZpcnN0IHRoaW5nIHlvdSBldmFsdWF0ZS4uIAoibmFlc2RheSwgYWNjb3JkaW5nIHRvIE1lbCB2aW4gR2VzY2hrZS4gRXZlcnlvbmUgaXMgaW52aXRlZCBoZSBzYWlkLCBlc3BlY2lhbGx5IHlvdW5nc3RlcnMgaW50ZXJlc3RlZCBpbiBiYXNlYmFsbC4gCk5hc3NhdSBoYXMgcGxlbnR5IG9mIHRvcCBub3RjaCBkaW5pbmcgb3B0aW9ucy4gSGVyZSBhcmUgYSBmZXcgb2YgdGhlIG1vc3QgcG9wdWxhciwgYWNjb3JkaW5nIHRvIFNreXNjYW5uZXIuClRoZSBkcnVnIGJyb2tlciB3aG8gc3F1aXJlZCB0aGUgb2ZmaWNlcnMgdG8gdGhlIGFpcnBvcnQgdG8gcGljayB1cCB0aGUgZHVmZmVsIGJhZ3Mgd2FzIGFuIGFnZW50LiBTbyB3YXMgdGhlIGRydWcgZGVhbGVyIHdobyBzdHVmZmVkIHRoZSBiYWdzIGludG8gaGlzIE1lcmNlZGVzIEJlbnouIEF0dG9ybmV5IFBhdHJpY2sgSi4gCldobyBhcmUgdGhlIHR3byBQcmVzaWRlbnRzIHRvIHdpbiB0aGUgcG9wdWxhciB2b3RlIGluIHRocmVlIGNvbnNlY3V0aXZlIGVsZWN0aW9ucz8KVGhlIGdvdmVybm1lbnQgYXJndWVkIHRoYXQgc2luY2Ugbm8gcHJvc3RpdHV0aW9uIGNoYXJnZXMgaGFkIGJlZW4gbGFpZCBhZ2FpbnN0IGFueSBvZiB0aGUgd29tZW4gaW52b2x2ZWQsIHRoZSBzb2NpZXR5IGFuZCBLaXNlbGJhY2ggbGFja2VkIHRoZSBsZWdhbCBzdGFuZGluZyB0byBwdXJzdWUgdGhlIGNhc2UuIEEgQnJpdGlzaCBDb2x1bWJpYSBqdWRnZSBhZ3JlZWQgd2l0aCB0aGUgZ292ZXJubWVudCwgYnV0IHRoZSBwcm92aW5jaWFsIGFwcGVhbCBjb3VydCBzYWlkIHRoZSBncm91cCBoYWQgcHVibGljIGludGVyZXN0IHN0YW5kaW5nIGFuZCBjb3VsZCBwcm9jZWVkLi4gClBsYXkgd2l0aCB0aGUgYm95cywgbXkgaHVzYmFuZCB0YXVnaHQgbWUgaG93IHRvIHBsYXkuIApUaGUgYWNjZXB0YWJsZSBsZXZlbCBvZiBwb3dlciBkZXBlbmRzIG9uIHRoZSBlZmZlY3Qgc2l6ZSB5b3Ugd2FudCB0byBkZXRlY3QgaW4geW91ciBkYXRhLCBzbyB0aGF0IGNvdWxkIG1lYW4gMyByZXBsaWNhdGVzIGlzIGVub3VnaCBmb3Igb25lIGV4cGVyaW1lbnQsIGJ1dCA2IGlzIHJlcXVpcmVkIGZvciBhbm90aGVyLi4gClRvdWdoIG1hbi4gT24gb25lIG9mIHRocmVlIGxhcmdlIG1lc3NhZ2UgYm9hcmRzIHNldCB1cCBGcmlkYXkgaW4gdGhlIGFyZW5hIGNvbmNvdXJzZSBmb3IgZmFucyB0byBsZWF2ZSB3ZWxsIHdpc2hlcywgRm9uc2VjYSB3cm90ZSBhbmQgR29yZGllIGFyZSB3YWl0aW5nIGZvciB5b3UgaW4gaGVhdmVuLiBQcm9kdWN0aW9uIExpbmUgc2hvdWxkIGJlIGtub3duIGFsbCBvdmVyIHRoZSB3b3JsZCwgc2FpZCBGb25zZWNhLiAKSW4gbWlkIE9jdG9iZXIsIEdlbmVyYWwgTW90b3JzIENFTyBSaWNrIFdhZ29uZXIgdW52ZWlsZWQgY3V0cyBpbiBVQVcgaGVhbHRoIGNhcmUgYmVuZWZpdHMuIExhc3Qgd2VlayBoZSByZXZlYWxlZCBwbGFucyB0byBjbG9zZSBlaWdodCBmYWN0b3JpZXMgYnkgMjAwOS4KSSBiZWxpZXZlIHRoZSBleHRlcmlvciBjb2x1bW5zIHdlcmUgZGVzaWduZWQgdG8gYnJlYWsgaWYgaGl0IHdpdGggdGhlIGZvcmNlIG9mIGFuIGFpcnBsYW5lIGluIHN1Y2ggYSB3YXkgdGhhdCB0aGUgZXh0ZXJpb3IgYXMgYSB3aG9sZSByZXRhaW5lZCBpdHMgc3RydWN0dXJhbCBpbnRlZ3JpdHkuIApBIHNpbmdsZSBleHBvc3VyZSBpcyB1bmxpa2VseSB0byBsZWFkIHRvIGFueSBtYWpvciBoZWFsdGggcHJvYmxlbXMuIFJlcG9ydCBhbnkga25vd24gb3IgcG90ZW50aWFsIGluY2lkZW50LCBhcyB0aGlzIHdpbGwgdGhlbiBiZSBpbnZlc3RpZ2F0ZWQgYW5kIGFueSBhc2Jlc3RvcyBmaWJyZXMgY2FuIGJlIGNsZWFuZWQgdXAgdG8gYXZvaWQgcG90ZW50aWFsIGV4cG9zdXJlIG9mIGFueW9uZSBlbHNlLiAKVGhlcmUgaXMgZmxhaXIgZm9yIGFsbCBmZWRlcmFsIGFwcGVhbHMgY291cnRzIGFuZCBmb3IgdGhlIHNwZWNpZmljIEp1c3RpY2VzLiAKVm9pbCBwb3VyIGxlcyBhcHBhcmVuY2VzIHF1aSBzb250IGF1am91cmQnaHVpIHRyb21wZXVzZXMgY2FyIGwnaXJydXB0aW9uIGRlIExSRU0gZGFucyBsZSBwYXlzYWdlIHBvbGl0aXF1ZSBldCBsYSBwcm9ncmVzc2lvbiBkZSBsYSBGcmFuY2UgSW5zb3VtaXNlIG9udCBmYWl0IGV4cGxvc2VyIGxlcyBjaG9zZXMgIFBhcmlzIGNvbW1lIHVuIHBldSBwYXJ0b3V0IGVuIEZyYW5jZS4gTm91cyBuJ3ZvcXVvbnMgcGFzIGxlIFJhc3NlbWJsZW1lbnQgTmF0aW9uYWwgKGV4IEZOKSBxdWkgbidhIGphbWFpcyBydXNzaSAgdnJpdGFibGVtZW50IHBlcmNlciAgUGFyaXMsIGxhIENhcGl0YWxlIGZhaXNhbnQgZXhjZXB0aW9uICB1bmUgdHJzIGdyYW5kZSBwYXJ0aWUgZGUgbGEgRnJhbmNlLi4gClNvbWUgbWlnaHQgbm90IGFwcHJvdmUgb2YgZ2FtYmxpbmcsIGJ1dCBUd2luIFJpdmVyIGdlbmVyYXRlcyAkMzAwIG1pbGxpb24gYSB5ZWFyIGZvciB0aGUgc3RhdGUgb2YgUmhvZGUgSXNsYW5kLiBTZXZlcmFsIHBlb3BsZSBhcmUgYmV0dGluZyBwb2tlciBjYW4gaGVscCBrZWVwIHRoZSBtb25leSBzdHJlYW0gZmxvd2luZy4KQWxhc3RhcllhYm95IHUKTW9zdCBwcm91ZCBvZiBteSBzcGlyaXQgdG8gbmV2ZXIgZ2l2ZSB1cCwgaGUgZ3VzaGVkLiBXYXMgYWxvbmUgYSBsb3QgYW5kIEkganVzdCB3b2tlIHVwIGFuZCB3b3JrZWQgaGFyZC4gClRyZW5kcyBpbiB0aGUgbWFya2V0IHBsYWNlIGFsc28gc2hvdyBtb3JlIGFuZCBtb3JlIHBlb3BsZSBvcHQgZm9yIHRoZSBhdXRvbWF0aWMuLiAKWW91IG1heSB0aGluayB5b3VyIHdpc2RvbSBhbmQgZXhwZXJpZW5jZSB3YXMgd2FzdGVkIG9uIGEgeW91bmcgY3JlYXRpdmUgd2hvIHNlZW1lZCB0byBub3QgcGF5IGF0dGVudGlvbiwgYnV0IGl0IHdhc24ndC4gSSBsZWFybmVkIHRoYXQgd2hhdCB3ZSBkbyBpcyBtb3JlIHRoYW4gdGFrZSBvcmRlcnMgICB3ZSBhZHZpc2UsIHdlIGNvbnN1bHQgYW5kIHdlIGNyZWF0ZSBzb2x1dGlvbnMuIApJIGtub3cgdGhlcmUgbXVzdCBiZSBvdGhlciBmYWN0b3JzIGJ1dCBpdCBhbHdheXMgY29tZSBiYWNrIHRvIHdoeSB3b3VsZG4geW91IHdhbnQgdG8gYnJpbmcgeW91cnNlbGYgaW50byB0aGUgZm9sZCBhbmQgcmVhcCB0aGUgYmVuZWZpdHMgb2YgYSBwZWFjZWZ1bCByZWNvbmNpbGlhdGlvbi4gSSBzdXJlIHRoYXQgbmFpdmUgb2YgbWUgdG8gdGhpbmsgZm9yIG1hbnkgcmVhc29ucyBidXQgaWYgYW55b25lIGNhbiBicmVhayBpdCBkb3duIGZvciBtZSBpdGQgYmUgaW50ZXJlc3RpbmcgdG8gcmVhZC4gCldheSBtb3JlIG9mdGVuIHlvdSBmaW5kIGEgY29tbWlzaCB3aXRoIGFuIGFnZW5kYSBvZiB0aGVpciBvd24gYW5kIGlmIHRoZXkgZG9uIHBlcnNvbmFsbHkgbGlrZSBzb21ldGhpbmcsIHRoZXkgdmV0byBhbmQgbm8gb25lIGV2ZW4gZ2V0cyBhIHNheSwgZXZlbiBpZiBpdCB3ZXJlIGEgZmFpciB0cmFkZS5JIHN1cmUgYm90aCBoYXZlIHRoZWlyIHVwcyBhbmQgZG93bnMsIGJ1dCBwZXJzb25hbGx5IEkgaGFkIG1vcmUgbHVjayBnb2luZyB3aXRoIHRoZSBsZWFndWUgdmV0by4gClNlYXQgU2VsZWN0aW9uIFdoZW4gT25lIE9mIFRoZSBQbGF5ZXJzIEF0IFRoZSBUYWJsZSBJcyBBIEhvbW9zZXh1YWwKIDEzIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ29Kb2JiZXQgaSBidXRpa2VybmEgciBmciBkZXQgbWVzdGEgYnJhLiBEdSBibGlyIHRpbGwgYXR0IGJyamEgbWVkIHRpbWFuc3RsbGQgb2NoIGZyIGRlbGEgdXBwIHNjaGVtYXQgbWVkIGRlIGFuZHJhIGkgYnV0aWtlbiwgZGV0IHIgcnR0IGZsZXhpYmVsdCBtZWQgdmlsa2EgZGFnYXIgbWFuIGpvYmJhci4gCk9ydmlsbGUgdGhvdWdoLiBXZWxsIEkgc2h1dCBpdCBvZmYgYWZ0ZXIgdGhleSBzaG93ZWQgYSBzdHJhaWdodCB1cCAzMCBzZWNvbmQgY2xpcCBvZiBzb21lIHJlYWxpdHkgdHYgc2hvdyBsaWtlIHRoZSBLYXJkYXNoaWFucyBvciBob3VzZXdpdmVzIG9mIGJsYW5rIG9yIHNvbWV0aGluZy4gCk91ciBmcmVlIHRyaWFsIGFsbG93cyBzaW5nbGVzIHRvIHRyeSBDaHJpc3RpYW5DYWZlLiBJZiBhbmQgd2hlbiB5b3UgaGF2ZSBtb3JlIHRpbWUsIGNoZWNrIG91dCBvdXIgJ0hhdmUgeW91IG1ldC5DaHJpc3RpYW4gZGF0aW5nOiBmaW5kIHlvdXIgc291bCBtYXRlIHdpdGggdXNUaGV5IGFyZSBhbHNvIGF2YWlsYWJsZSB0byBwcm92aWRlIGd1aWRhbmNlIG9yIHBlcnNvbmFsIHN1cHBvcnQgdGhyb3VnaG91dCB5b3VyIG9ubGluZSBkYXRpbmcgam91cm5leSBzaG91bGQgeW91IG5lZWQgaXQuIFdlIG9mZmVyIGEgZnJlZSAxMCBkYXkgdHJhaWwgc28gc2luZ2xlcyBjYW4gbWVldCBhbmQgY29ubmVjdCBmb3IgZnJlZS4gCkEgbW9udGggb3Igc28gbGF0ZXIgaGUgZGllZC4gQWxtb3N0IG15IGVudGlyZSBjbGFzcyBhbmQgcGVvcGxlIGZyb20gb3RoZXIgY2xhc3NlcyB3ZW50IHRvIGhpcyBmdW5lcmFsLCB0aGUgc2FtZSBwZW9wbGUgd2hvIGRpZG4ndCB3YW50IHRvIHNpdCB3aXRoIGhpbSwgbWFkZSBmdW4gb2YgaGltLiBUaGV5IHdlbnQgdG8gaGlzIGZ1bmVyYWwgc28gdGhleSBjb3VsZCBoYXZlIGEgaGFsZiBkYXkgYXQgc2Nob29sLi4gCkFsbW9zdCBldmVyeW9uZSBpcyB0aWx0aW5nIGF0IHNvbWUgcG9pbnQsIGF0IGxlYXN0IGlmIHlvdSBoYXZlIGEgZG93bnN3aW5nIGFuZCBwbGF5IGEgbWVkaW9jcmUgem9vbSBzZXNzaW9uIGFmdGVyIGFuIEJhZCBkYXkgYW5kIGxvc2UgNCsgYmlnIHBvdHMgaW4gYSBmZXcgbWludXRlcyBhZ2FpbnN0IDYwLzEwIHN0YXRpb25zIHdobyB3aWxsIHJpdmVyIGhpcyB0d28gb3V0cyBhbmQgdGhlbiBmaW5hbGx5IGNhbGwgYSAyMDBiYiA1YiBzaG92ZSB3aXRoIEFBIHRvIHNlZSBoaW0gaGl0dGluZyB0d28gcGFpciB3aXRoIEtRbywgeW91IHdpbGwgZ2V0IG92ZXIgdGhlIHBvaW50ICJhdCBsZWFzdCBpIGdldCBpdCBpbiBnb29kIi4gCkV2ZW50dWFsbHkgeW91IGdldCB0byB0aGUgcG9pbnQgd2hlcmUgeW91IGtub3cgdGhlIG9kZHMgb3IgY2FuIHF1aWNrbHkgbG9vayB0aGVtIHVwLCBhbmQgeW91IGRvbid0IHJpZGUgYWRyZW5hbGluZSBvZiBiaWcgd2lucyBvciBzd2VhdCB0aGUgc21hbGwgbG9zc2VzLiBCdXQgdGhlIGJlc3QgcG9rZXIgZ2FtZXMgdGVuZCB0byBoYXBwZW4gYXQgbmlnaHQuIEFuZCBzb21ldGltZXMgdGhlIGJlc3QgZ2FtZSBmb3IgMSBkYXkgcnVucyBhbGwgbmlnaHQgYW5kIHRoZSBiZXN0IGdhbWUgdGhlIG5leHQgZGF5IGhhcHBlbnMgZWFybHksIGFuZCB5b3UgYmFyZWx5IHNsZWVwIGJldHdlZW4gdGhlbS4gCklzIHRoaXMgc29tZXRoaW5nIGFsbCBwYXJlbnRzIGRvPy4gClRoYXQgdGhlcmUgYXJlIHJlYWwgY29uc2VxdWVuY2VzdGhhdCBjb21lIGZyb20gZXZlcnkgc2luZ2xlIGRlY2lzaW9udGhhdCB5b3UgbWFrZS4uIApBcnJlc3RlZCwgdGhlIHBvbGljZSBkcmFnZ2VkIGhlciBmcm9tIHRoZSB0aGVhdHJlLiBEZXNtb25kIHNwZW50IDEyIHRlcnJpZnlpbmcgaG91cnMgc2l0dGluZyB1cCwgd2hpdGUgZ2xvdmVzIG9uLCB0aGUgaW1hZ2Ugb2YgZGlnbml0eS4uIApZb3UgbXVjaCBiZXR0ZXIgZ29pbmcgd2l0aCBhIHJlZ2lvbmFsIGJyYW5kLiBJZiB5b3UgcmVhbGx5IHdhbnQgYSBoZWFsdGh5IGRvZyBmb29kIHRvbywgYnV5IHNvbWV0aGluZyBncmFpbiBmcmVlIHdpdGggY2hpY2tlbiwgdmVuaXNvbiwgYmVlZiwgb3IgcG9yayBhcyB0aGUgbnVtYmVyIG9uZSBpbmdyZWRpZW50LiBCeSBwcm9kdWN0cyBhcmVuIG5lY2Vzc2FyaWx5IGJhZCwgZWl0aGVyLCBidXQganVzdCBtYWtlIHN1cmUgdGhlcmUgaXNuIGFuIG92ZXJhYnVuZGFuY2Ugb2YgdGhlbS4gCk9uIHRoZSBsb3cgZW5kLCBtYXNzYWdlIHRoZXJhcGlzdHMgZWFybmVkIGEgMjV0aCBwZXJjZW50aWxlIHNhbGFyeSBvZiAkMjcsMjIwLCBtZWFuaW5nIDc1IHBlcmNlbnQgZWFybmVkIG1vcmUgdGhhbiB0aGlzIGFtb3VudC4gCldpdGhvdXQgYm90aCB0aGUgc291cmNlIGFuZCB0aGUgYnVpbGQgaW5mb3JtYXRpb24gKGhvcGVmdWxseSB0aGUgYnVpbGQgdG9vbHMgYXJlIHNwZWNpZmllZCBhcyBkZXYgZGVwZW5kZW5jaWVzKSwgdGhpcyBpc24gcG9zc2libGUuIApUaGUgcmV2ZWxhdGlvbnMgZnJvbSB0aGUgZGVwb3NpdGlvbiBsZWQgdG8gc2NydXRpbnkgb2YgdGhlIG1hcnJpZWQgZmF0aGVyIG9mIGZpdmUncyB0cmVhdG1lbnQgb2Ygd29tZW4gb3ZlciB0aGUgbGFzdCBzaXggZGVjYWRlcyAgIGZyb20gaGlzIHRpbWUgYXMgYSBmbGVkZ2xpbmcgY29tZWRpYW4gdG8gaGlzIHRvcCByYXRlZCB0dXJuIGFzIERyLiBDbGlmZiBIdXh0YWJsZSBpbiAiVGhlIENvc2J5IFNob3ciIGluIHRoZSAxOTgwcyBhbmQgYmV5b25kLgpGb3IgdGhvc2Ugd2hvIHN0dWRpZWQgd2l0aCBoZXIsIGVwaXBoYW5pZXMgYWJvdW5kZWQsIHNhaWQgRHIuIEpvaG4gQi4gSGVybWFuLCBhc3NvY2lhdGUgY2hpZWYgb2YgcHN5Y2hpYXRyeSBhdCBNYXNzYWNodXNldHRzIEdlbmVyYWwuCkluIEQyIEkgZmVlbCB0aGF0IG9ubHkgYm93cywgSm90dW5uLCBUaHVuZGVybG9yZCAoYnJvdWdodCBiYWNrIGZyb20gRDEpLCBhbmQgdGhlIHJhaWQgZXhvdGljcyBhcmUgdGhlIG9ubHkgb25lcyB0aGF0IGhhdmUgdGhhdCB6YW55IGZhY3RvciBJIGxvdmVkIGluIEQxIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCiJXaXRoIG9ubHkgYSBmZXcgbWlsbGlvbiBtZXRlcnMgaW5zdGFsbGVkLCBtYXliZSB0aGF0J3Mgbm90IGEgaHVnZSB0aHJlYXQgdG9kYXksIiBKaW0gRXZlcmV0dCwgYW4gb2ZmaWNpYWwgd2l0aCB0aGUgRGVmZW5zZSBBZHZhbmNlZCBSZXNhcmNoIFByb2plY3RzIEFnZW5jeSwgdG9sZCB0aGUgQ2hyaXN0aWFuIFNjaWVuY2UgTW9uaXRvciBpbiBKYW51YXJ5LiJCdXQgd2hhdCBoYXBwZW5zIGlmIGl0IHByb2NlZWRzIG92ZXIgMTAgeWVhcnMgYW5kIG1vc3Qgb2YgdGhlIGNvdW50cnkgaXMgaW4gdGhhdCBzaXR1YXRpb24/IiBJZiBpdCdzIGFueSBjb21mb3J0LCB0aGUgTW9uaXRvciByZXBvcnRlZCB0aGF0IHRoZSBQZW50YWdvbiBhbmQgcHJpdmF0ZSBpbmR1c3RyeSBhcmUgcG91cmluZyByZXNvdXJjZXMgaW50byBiZWVmaW5nIHVwIHNlY3VyaXR5IGZvciBmdXR1cmUgc21hcnQgZ3JpZHMuLiAKSWwgcydhZ2l0IGQndW4gZW1wcnVudCAgbCdpbmRlIGxhcmdlbWVudCBkcml2IGR1IGdhbG5pc21lIGdyZWMuIApOb3RoaW5nIHdvcnN0IHRoYW4gc2lnbmluZyB1cCB0byBhbiBvbmxpbmUgcG9rZXIgcm9vbSB0aGF0IGRvZXNuJ3QgaGF2ZSB0aGUgYWN0aW9uIGF0IHlvdXIgc3Rha2VzIGxldmVsLi4gCkkgd2FzIHNvIG1pc2VyYWJsZSB0aGVyZS4gClJpbm9haXNteXNwaXJpdCB1Ckl0J3Mgbm90IHRoZSBmaXJzdCB0aW1lIGEgY29tcGFueSBoYXMgYmVlbiBhY2N1c2VkIG9mIHRyeWluZyB0byBwYXNzIG9mZiBwcm9kdWN0cyBhcyBrb3NoZXIuCkZhcm1lciBtYXJrZXQgZWFjaCBTYXR1cmRheSAoOWFtIHRvIDFwbT8pIGR1cmluZyB3YXJtZXIgbW9udGhzIGp1c3Qgb2ZmIERlcG90IFN0cmVldCAoYW5kIGEgYml0IHNvdXRoIG9mIFJpdmVyIFN0LikuIApJbiB0aGUgZmlyc3QgZXhhbXBsZSwgaW5zdGVhZCBvZiBzZWxsaW5nIHRoZSB0cm9uIGhvdXNlIHRvIG1vdmUgdG8ga2luZyBjb3VudHJ5LCBsZXQncyBpbWFnaW5lIHRoZXkgbW92ZWQgdG8ga2luZyBjb3VudHJ5IGhvdXNlIGJ1dCByZW50ZWQgb3V0IHRoZSBUcm9uIGhvdXNlIGZvciA1IHllYXJzIGJlZm9yZSBzZWxsaW5nIGl0LCB0aGVuIENHVCB3b3VsZCBvbmx5IGFwcGx5IGZvciB0aGUgaW5jcmVhc2UgaW4gdmFsdWUgYmV0d2VlbiB0aGUgdGltZSB0aGV5IG1vdmVkIG91dCBhbmQgdGhlIHRpbWUgdGhleSBzb2xkIGl0LiAzMCUgb2YgdGhlIDUwMGsgZ2FpbiBmcm9tIHRoZSBsYXN0IDUgeWVhcnMpCkFuZCBkZXNwaXRlIHdoYXQgdGhlIENocmlzdGlhbiBDaXZpYyBMZWFndWUgb2YgTWFpbmUgdGhpbmtzLCB0aGVzZSBhcmUgbm90IGlzc3VlcyBvZiBzZXh1YWxpdHkgKGRlc2lyZSksIGJ1dCBvZiBzZXggKG1hbGUvZmVtYWxlKSBhbmQgZ2VuZGVyIChtYXNjdWxpbmUvZmVtaW5pbmUpLiAKSGFsbywgc3RhciBvZiB0aGUgbmV3IGZpbG0gRG9ncyBpcyBhIG1lbWJlciBvZiBGbG9yaWRhIFRhc2sgRm9yY2UgMSwgb25lIG9mIHRoZSBtb3N0IGVsaXRlIHNlYXJjaCBhbmQgcmVzY3VlIHRlYW1zIGluIEFtZXJpY2EgYW5kIHBhcnQgb2YgdGhlIE1pYW1pIERhZGUgRmlyZSBSZXNjdWUgRGVwYXJ0bWVudCAoQ0JTNCkKUm9jayB0aHJ1c3RzIGJvdGggZmlzdHMgaW4gdGhlIGFpciwgdGFraW5nIGluIHRoZSBhZG1pcmF0aW9uIHdpdGggYSBwZXJmZWN0bHkgc3RyYWlnaHQgZmFjZSwgYXMgaWYgdGhpcyBpcyBzb21ldGhpbmcgaGUgZG9lcyBhbGwgdGhlIHRpbWUsIGJlY2F1c2UgaXQgaXMuIFRoZSBtYW4gaW4gdGhlIHN1aXQgdHdpdGNoZXMgYW5kIGxldHMgb3V0IGEgZGVhdGggcmF0dGxlLCB3aGljaCBpcyBkcm93bmVkIG91dCBieSB0aGUgY2xhcHBpbmcuIApJdCB0aWNrZWQgb2ZmIHNvbWUgcGVvcGxlIGF0IHRoZSB0b3Agb2YgdGhlIGNvbXBhbnksIGJ1dCBldmVuIHRoZXkgaGF2ZSBjb21lIGFyb3VuZC4gW0Zvcm1lciBTYWxvbW9uIENFT10gSm9obiBHdXRmcmV1bmQgY2FsbHMgbWUgZXZlcnkgc28gb2Z0ZW4sIGFuZCBJJ3ZlIGJ1bXBlZCBpbnRvIGhpbSBhbmQgaXQncyBiZWVuIHJlYWxseSBmcmllbmRseS4gU28gdGltZSBoYXMgbWVsbG93ZWQgd2hhdGV2ZXIgaG9zdGlsaXRpZXMgdGhlcmUgd2VyZSB3aGVuIHRoZSBib29rIGNhbWUgb3V0Li4gCiJNYXliZSBpdCdzIGJlY2F1c2UgSSBmZWx0IHB1bGxlZCB0b3dhcmQgYSBkaWZmZXJlbnQgdHlwZSBvZiBjcmVhdGl2ZSBvdXRsZXQgYW5kIEkgcmVhbGx5IGxpa2VkIHRoZSBjb250cm9sIG9mIHBhaW50aW5nIG9mIG5vdCBoYXZpbmcgYSBjb21taXR0ZWUgaW4gdGhlIHdheSB0ZWxsaW5nIG1lIHdoYXQgdGhlIGlkZWEgbXVzdCBiZSB0byBhcHBlYWwgdG8gYSBmb3VyIHF1YWRyYW50IHdoYXRldmVyLCIgaGUgc2FpZC4gQ2FycmV5IHNob3dlZCBhIGNvbGxlY3Rpb24gb2YgaGlzIHBvbGl0aWNhbCBjYXJ0b29ucywgbWFkZSBmYW1vdXMgb24gaGlzIFR3aXR0ZXIgcHJvZmlsZSwgYXQgdGhlIE1hY2Nhcm9uZSBnYWxsZXJ5IGluIExvcyBBbmdlbGVzLiAKVG8gcHJvbW90ZSB0aGUgc2FsZSBvZiBHb2xkIENvaW5zLCB3ZSBnaXZlIGF3YXkgU3dlZXBzdGFrZXMsIHVuaXF1ZWx5IHJlcHJlc2VudGVkIGFzIGEgdmlydHVhbCBjdXJyZW5jeSAoU3dlZXBzIENhc2gpLiBTd2VlcHMgQ2FzaCBjYW4gYmUgdXNlZCBmb3IgcGxheSBpbiBvdXIgcG9rZXIgcm9vbSwgYWdhaW5zdCBvdGhlciBwbGF5ZXJzIHdpdGggU3dlZXBzIENhc2gsIHVudGlsIHdpbm5pbmdzIGFyZSB3aXRoZHJhd24gdmlhIFBheVBhbCBhcyByZWFsIGNhc2ggcHJpemVzLgpBYm91dCAxMCBtaW51dGVzIGFmdGVyIHRoZSBibHVmZiB0aGlzIGd1eSBpcyBiYXNpY2FsbHkgbGlmZSB0aWx0ZWQgYW5kIHRhbGtpbmcgc21hY2sgdG8gZXZlcnlvbmUgYXQgdGhlIHRhYmxlLiAKTXkgc3RyYXRlZ3kgaGFzIGFsd2F5cyBiZWVuIHRvIGxpbXAgYW55IHN1aXRlZCBjYXJkcyBhbmQgY29ubmVjdG9ycywgYW5kIGxpbXAgd2l0aCBzdWIgcHJlbWl1bXMgc3VjaCBhcyBBMTAsIEtKLCBBOSwgbG93IHBvY2tldCBwYWlycywgZXRjLiBBbGwgb2YgdGhlIGdvb2QgaGFuZHMgKEFKKykgSSB3aWxsIHJhaXNlIHRvIGVpdGhlciAxMiBvciAxNS4gSSB0cnkgdG8ga2VlcCBpdCB0aGUgc2FtZSBzaXplIHdpdGggYWxsIG9mIG15IHByZW1pdW0gaG9sZGluZ3MuIApTYWRseSwgZm9yIHRoZSBCYXJ5bGFzLCB0aGUgcmVzb2x1dGlvbiBvZiB0aGVpciBzZXBhcmF0aW9uIGlzIGZhciBmcm9tIG92ZXIuIApJdCBraW5kYSBnaXZlcyBwZW9wbGUgbW9yZSByb29tIGZvciBleHByZXNzaW9uLCBhcyB0aGV5IGFibGUgdG8gY29tYmluZSBhbmQgZXhwbG9yZSBhIGxvdCBtb3JlIGRpZmZlcmVudCBlbGVtZW50cyBhbmQgd2F5cyB0byBtYW5pcHVsYXRlIHRoZSB0b3kuIE9uIHRvcCBvZiB0aGF0LCB5b3UgYWJsZSB0byBtYWtlIHRoZSBleGVjdXRpb24gb2YgdHJpY2tzIHZhcnkgd2lsZGx5IGRlcGVuZGluZyBvbiBwZXJzb25hbCBzdHlsZSBhbmQga25vdyBob3cgd2hpY2gganVzdCBhZGRzIHRvIHRoZSBleHByZXNzaXZpdHkgb2YgaXQgYWxsIS4gCiJKJ2FpIGx1IGRhbnMgbGVzIGpvdXJuYXV4IGJyaXRhbm5pcXVlcyBxdWUgbGVzIHRheGlzLCBsZXMgcmVzdGF1cmFudHMgZGUgbHV4ZSBldCBsZXMgYm90ZXMgZGUgbnVpdCBzZSBwbGFpZ25lbnQgZCd1bmUgYmFpc3NlIGRlIGxldXIgY2hpZmZyZSBkJ2FmZmFpcmVzIHF1aSBlc3QgZGlyZWN0ZW1lbnQgbGllIGF1eCBwcm9ibG1lcyBkZSBsYSBDaXR5LiIgQ2UgdHJhZGVyLCBxdWkgYSBxdWl0dCBsYSBiYW5xdWUgR29sZG1hbiBTYWNocyBjZXQgdCwgZXN0aW1lIHF1ZSAibGVzIGNob3NlcyB2b250IGVuY29yZSBlbXBpcmVyLiBFdCBqZSBuZSBzZXJhaXMgcGFzIHRvbm4gcXVlIEdvbGRtYW4gU2FjaHMgZXQgTW9yZ2FuIFN0YW5sZXkgbWV0dGVudCBsYSBjbGVmIHNvdXMgbGEgcG9ydGUiLi4gClNjYW5kaW5hdmlhbiBjb3VudHJpZXMsIGxpa2UgU3dlZGVuIG9yIE5vcndheSwgaGF2ZSBhbHdheXMgYmVlbiBvcmllbnRlZCB0b3dhcmRzIG1vcmUgcHJvZ3Jlc3NpdmUgc29jaWFsIHBvbGljaWVzLiAKSG93IFRvIE1ha2UgTWFzc2FnZSBPaWwKVGhlIGRlbW9jcmF0aWMgcG9saXMgY29udGludWVkIHRvIHN1cHBvcnQgdGhlIGFydHMuIE1vcmUgYW5kIG1vcmUgc2N1bHB0dXJlcyBhbmQgcGljdHVyZXMgc2hvd2VkIGZlbWFsZSBmaWd1cmVzIGluc3RlYWQgb2Ygb25seSBmb2N1c2luZyBvbiB0aGUgbWFsZSBib2R5LiAKQSByZWFsIHNoYW1lIGNvbnNpZGVyaW5nIGhvdyBtdWNoIE1hbmdhbmllbGxvIGlzIGFwcGFyZW50bHkgaW50byB0aGUgcm9sZSBhbmQgd2FudHMgdG8gbWFrZSBpdCBoYXBwZW4uIEJ1dCBoZSBkb2VzbiBoYXZlIHRoZSBzdGF0dXMgYXMgdGhvc2Ugb3RoZXJzIEkgZ3Vlc3MuIEJ1dCBpdHMgYWxzbyBhIHNoYW1lIGJlY2F1c2UgdGhpcyBpcyBvYnZpb3VzbHkgYW4gZXh0cmVtZWx5IHBvcHVsYXIgY2hhcmFjdGVyIGFuZCB3aWxsIGRyYXcgYSBsb3Qgb2YgYXR0ZW50aW9uLiAKVGhlIG5ldyBlbnRpdHkgd2lsbCBvcGVyYXRlIGVudGlyZWx5IHNlcGFyYXRlIGZyb20gdGhlIFBhbnRoZXJzIEdyb3VwIHdpdGggbm8gY29tbWVyY2lhbCByZWxhdGlvbnNoaXAuIApJdCBpcyB2ZXJ5IGltcG9ydGFudCB0byB1bmRlcnN0YW5kIHRoYXQgdGhlcmUgaXMgbm8gbWl4dHVyZSBvZiBnb29kIGJhZC4gCihPZiBjb3Vyc2Ugc28gaXMgYWxjb2hvbCBhbmQgbmljb3RpbmUsIHR3byBvdGhlciB2aWNlcyBqdXN0IGFzIGFkZGljdGl2ZSBidXQgbGVnYWwgZXZlcnl3aGVyZSEpIFNvbWUgYXJndWUgdGhhdCBidWlsZGluZyBjYXNpbm9zIHdpbGwgaW5jcmVhc2UgY3JpbWUgcmF0ZSBhbmQgcHJvc3RpdHV0aW9uLCBhbmQganVzdCBnZW5lcmFsbHkgZG8gbW9yZSBoYXJtIHRoYW4gZ29vZC4gVGhlIHJldmVudWUgZ2VuZXJhdGVkIHdvdWxkIG9ubHkgYmUgdXNlZCB0byBjb21iYXQgdGhlIHByb2JsZW1zIHRoYXQgZ2FtYmxpbmcgYnJpbmdzLiAKTm8sIEkgYW0gbm90ICJncm9zc2x5IHVuZGVyZXN0aW1hdGluZyB0aGUgYnJlYWtpbmcgZG93biBhbmQgcmVidWlsZGluZyBwcm9jZXNzIG9mIGluaXRpYWwgZW50cnkgdHJhaW5pbmciIGJlY2F1c2UgSSBjdXJyZW50bHkgYWN0aXZlIGR1dHkgaW4gdGhlIFVTIG1pbGl0YXJ5CkJlZWYgdG9uZ3VlIHRhY28gYXQgQ2hpbGFjYXRlcy4gS2F5YW5hIFN6eW1jemFrIGZvciB0aGUgQm9zdG9uIEdsb2JlQ2hpbGFjYXRlcyBmaXJzdCBvcGVuZWQgaW4gSmFtYWljYSBQbGFpbiBpbiAyMDE1LCBhbmQgcHJvdmVkIHNvIHBvcHVsYXIgdGhhdCBhbm90aGVyIGxvY2F0aW9uIHdhcyBhZGRlZCB0byB0aGUgbmVpZ2hib3Job29kIGluIDIwMTcuIFRoZSB0aW55IHR3aW4gdGFxdWVyaWFzIGNhbiBjaGFsayB1cCB0aGF0IHN1Y2Nlc3MgdG8gdGhlaXIgc2ltcGxlIGJ1dCBkZWxpY2lvdXMgdGFjb3MgdGhhdCBjb21lIG9uIGhvbWVtYWRlIGNvcm4gdG9ydGlsbGFzIGFuZCBhcmUgZmlsbGVkIHdpdGggY2hpcG90bGUgc2ltbWVyZWQgY2hpY2tlbiB0aW5nYSwgc3dlZXQgYW5kIHNhdm9yeSBhbCBwYXN0b3IsIG9yIGZsYXZvciBwYWNrZWQgcGFwYXMgY29uIGNob3Jpem8uICgyMjQgQW1vcnkgU3QuLCBCb3N0b247IDY1OCBDZW50cmUgU3QuLCBCb3N0b24pClRpY2tldHMgZm9yIEJyYXdsIGFyZSBvbiBzYWxlIG5vdyBhbmQgYXJlIHByaWNlZCBhdCAkMjgsICQzOCwgJDYzLCAkOTMsICQxMDAgYW5kICQxMjMuCkhvdyBtdWNoIG9mIHByb2Zlc3Npb25hbCBwb2tlciBpcyBiYXNlZCBvbiBsdWNrCldoaWxlIGNyZWF0aW5nIGZvciBOZXRmbGl4LCB3ZSBoYWQgdGhhdCBsdXh1cnk7IHdlIGhhZCB0aGUgb3B0aW9uIHRvIGludHJvZHVjZSB0aGUgY2hhcmFjdGVyIGEgbGl0dGxlIGxhdGVyLCIgaGUgYWRkZWQuIApNaWNoaWdhbiBDb3VwbGUgQ2F1Z2h0IEhhdmluZyBTZXggSW4gUmVzb3J0IEhvdCBUdWIKQXJicmUgZG9udCBsYSBub2JsZXNzZSBuIHBsdXMgIHByb3V2ZXIsIGxlIGNobmUgZXN0IHVuIGh0ZSBkZXMgZm9ydHMgdGVtcHJlcyBkZSBsIG5vcmQuIENvbnRyYWlyZW1lbnQgIHNvbiBjb3VzaW4gbGUgY2huZSByb3V2cmUsIGxlIGNobmUgcGRvbmN1bCBwcmZyZSBsZXMgcGxhaW5lcyBldCBsZXMgdmFsbGVzIGZsdXZpYWxlcywgbWFpcyBwYXJ0YWdlIGF2ZWMgbHVpIHNvbiBhcHB0ZW5jZSBwb3VyIGRlcyBzb2xzIGFjaWRlcyBldCBlbnNvbGVpbGxzLiBNYWlzIGlsIGVzdCBiaWVuIG1vaW5zIHNvY2lhYmxlIGV0IHByZnJlIHZpdnJlIGlzb2wgIGwgcGx1dHQgcXUgZ3JhbmQgZ3JvdXBlIGVuIHBsZWluZSBmb3J0LiAKSW50ZXJlc3RzOiBOZWVkbGV3b3JrICAga25pdHRpbmcgYW5kIGVtYnJvaWRlcnksIG1vc3RseS4gUGxheWluZyBjb21wdXRlciBnYW1lcyAgIHByZWZlcmFibHkgb25lcyB0aGF0IGludm9sdmUgc29tZSBtZW50YWwgd29yay4gUmVhZGluZyAgIGdvb2QgZmljdGlvbiAvIGxpdGVyYXR1cmUsIGhpc3RvcnkgKG1vc3RseSBwcmUgMjB0aCBjZW50dXJ5KSwgbmF0dXJhbCBoaXN0b3J5IChlc3BlY2lhbGx5IGRpbm9zYXVycyBhbmQgZXZvbHV0aW9uKSwgdHJhdmVsIChlc3BlY2lhbGx5IGV4cGVkaXRpb25zIHByZSBTZWNvbmQgV29ybGQgV2FyIG9yIGV4cGVkaXRpb25zIHRoYXQgd2VudCB3cm9uZykuIApUaXRsZXMgZm9yIG5ld3MgcG9zdHMgc2hvdWxkIGlkZWFsbHkgYmUgYXMgY2xvc2UgdG8gdGhlIHRpdGxlIG9mIHRoZSByZXBvcnQgYXMgcG9zc2libGUuIEZvciBleGFtcGxlLCB3b21lbiB3aG8gd29yayBpbiByZXN0YXVyYW50cyBvciBpbiBiZWF1dHkgc2Fsb25zIGluIHJlZCBsaWdodCBkaXN0cmljdHMgd2VyZSBpbmNsdWRlZCBhcyAiZWFybmluZyBhIGxpdmluZyBmcm9tIHRoZSBzZXggdHJhZGUiIGJlY2F1c2UgdGhhdCB3YXMgd2hhdCBzdXBwb3J0ZWQgdGhlaXIgYnVzaW5lc3MuIGl0IGJlZW4gbG9uZyBrbm93biB0aGF0IGtvcmVhIGhhcyBvbmUgb2YgdGhlIGJpZ2dlc3QgcHJvc3RpdHV0aW9uIGluZHVzdHJpZXMgaW4gYXNpYSAoYmlnZ2VyIHRoYW4gdGhhaWxhbmQgYmFzZWQgb24gdGhlIG51bWJlciBvZiBnaXJscyBpbnZvbHZlZCkuIGFuZCBpdCBsb25nIGJlZW4ga25vd24gdGhhdCB0aGF0IG51bWJlciBpcyBvdmVyIDEgbWlsbGlvbiAodGhlIGFydGljbGUgbWVudGlvbmVkIDEuMiBtaWxsaW9uKS4KQmFzaWNhbGx5LCB3aHkgd291bGQgdGhleSBodXJ0IHRoZWlyIG93biBwcm9maXQgbWFyZ2lucyBpbiBvcmRlciB0byBhY3QgZXRoaWNhbGx5IHdoZW4gdGhlcmUgaXMgbW9yZSBwcm9maXQgYW5kIHZlcnkgbGl0dGxlIChpZiBhbnkpIGxvc3MgdG8gZG8gdGhlIG9wcG9zaXRlPwpJIGRlbGliZXJhdGVseSB0cmllZCB0byBtYWtlIHRoZSB3aG9sZSB0aGluZyBmdW4gYW5kIGp1c3Qgc29ydCBvZiBhIGJ1ZGR5IGhhbmcsIGFuZCBnZXQgYSByZWNvcmQgb3V0IG9mIGl0IGFzIGEgYnlwcm9kdWN0LiBBbmQgaXQgd29ya2VkLiAKSnVzdCBkcm92ZSBwYXN0IGEgZmFybSBhbmQgYnJvdGhlciBoYXMgMTMpIHRoZW4gdGhlIHdob2xlIGZhbWlseSB3b3VsZCBiZSBvbiBoaWdoIGFsZXJ0IGxvb2tpbmcgZm9yIGNlbWV0ZXJpZXMuIEl0IHdhcyBhIGZ1biB3YXkgdG8gcGFzcyB0aGUgdGltZS4uIApXb3VsZG4ndCBpdCBiZSB3aXNlciB0byBhcmd1ZSB0aGF0IERvZHQncyBpbGxlZ2FsIHRlbmFuY3kgd2FzIHdpdGggdGFjaXQgY29uc2VudCwgc2luY2UgdW5pdmVyc2l0eSBjb3BzIHdlcmUgbGVhdmluZyBoaW0gaW4gdGhlIHRyZWUsIHVudGlsIHRoZSBwb2tpbmcgaW5jaWRlbnQ/Ckkgd29yayBpbiBhIEh1bmdhcmlhbiBraW5kZXJnYXJ0ZW4uIE9uZSBvZiB0aGUgbW9zdCBmcmVxdWVudGx5IGFza2VkIHF1ZXN0aW9ucy9jb25jZXJucyBmb3JlaWduIHBhcmVudHMgaGF2ZSBpcyB0aGF0IHRoZWlyIGNoaWxkIGRvZXNuJ3Qga25vdyBhbnkgSHVuZ2FyaWFuLiAKQmVjb21lIGEgUmVkZGl0b3JhbmQgc3Vic2NyaWJlIHRvIG9uZSBvZiB0aG91c2FuZHMgb2YgY29tbXVuaXRpZXMuIFRoZXNlIGFyZSBteSBwZXJzb25hbCBhY2NvdW50cy4gQXMgbG9uZyBhcyBJIHJlbWVtYmVyLCBJIGFsd2F5cyBiZWVuIGFkZGljdGVkIHRvIHBvcm5vZ3JhcGh5LiAKU2luY2UgMTk5MSwgd2hlbiB0aGUgY291bnRyeSBuZXcgZnJlZSBtYXJrZXQgcG9saWNpZXMgdG9vayBlZmZlY3QsIHByaXZhdGUgbW9uZXkgaGFzIGZsb3dlZCBpbiwgZnVlbGluZyBjb25zdHJ1Y3Rpb24gb2Ygd29ybGQgY2xhc3MgaG9zcGl0YWxzIHRoYXQgY2F0ZXIgdG8gZm9yZWlnbmVycy4gU3Vycm9nYWN5IHRvdXJpc20gaGFzIGdyb3duIHN0ZWFkaWx5IGhlcmUgYXMgd29yZCBnZXRzIGFyb3VuZCB0aGF0IGJhYmllcyBjYW4gYmUgaW5jdWJhdGVkIGF0IGEgbG93IHByaWNlIGFuZCB3aXRob3V0IGdvdmVybm1lbnQgcmVkIHRhcGUuIApHYW1ibGluZywgY2FsbGVkICJlbnRlcnRhaW5tZW50IiBieXNvbWUsIGhhcyBtYWRlIHRoZSB0cmFuc2Zvcm1hdGlvbiBmcm9tIGJlaW5nIGEgdmljZSB0byBhIG1ham9yIChhbmRncm93aW5nKSBpbmR1c3RyeS4gU2F0cmUsIGFuIGV4ZWN1dGl2ZSB3aXRoIGEgcHVibGljbHkgdHJhZGVkIGNvbXBhbnkoUHJvbXVzKSB0aGF0IGhhcyAxNSBjYXNpbm9zIGluIDggc3RhdGVzIChhbmQgaGFzIGV4cGFuZGVkIHRvIE5ld1plYWxhbmQpLCB3cm90ZSBhYm91dCB0aGUgaW5kdXN0cnkgaW4gMTk5MzogIlNvY2lhbGl6YXRpb24sZW50ZXJ0YWlubWVudCBhbmQgd2lubmluZyBhcmUgdGhlIHRocmVlIG1ham9yIHJlYXNvbnMgd2h5IHBlb3BsZSBnYW1lYXQgY2FzaW5vcyAocGFnZSAxMSkuIiBJbiBteSBvd24gb3BpbmlvbiwgaG93ZXZlciwgaW5kaXZpZHVhbHMgbm90b25seSBnbyBmb3IgZ2FtYmxpbmcgYnV0IHRoZXkgYWxzbyBnbyB0byB0cnkgYW5kIHdpbiBhbmQgYmVjYXVzZSB0aGV5d2lzaCB0byBiZSAiYSBzb21lYm9keS4iIEluIDE5OTUsIGFuIGVzdGltYXRlZCAzMCwwMDAsMDAwIHBlb3BsZXZpc2l0ZWQgTGFzIFZlZ2FzIGFuZCBpbiBGZWJydWFyeSAxOTk2LCBlaWdodCBOZXZhZGEgZ2FtaW5nIGNvbXBhbmllcyJkb25hdGVkICQyMDAsMDAwIHRvIGhlbHAgYXR0YWNrIHByb2JsZW0gZ2FtYmxpbmcsIGFuIGlsbG5lc3MgdGhhdGFmZmVjdHMgMiB0byA1IHBlcmNlbnQgb2YgdGhlIGFkdWx0IHBvcHVsYXRpb24iIChSZW5vIEdhemV0dGVKb3VybmFsLCBGZWJydWFyeSA2LCAxOTk2LCBwYWdlIDNFKS4gCkFsbGVuIGRpZSBnZXJhZGUgYXVmIExhIFBhbG1hIHNpbmQsIGVtcGZlaGxlIGljaCBkaWUgRmhydW5nIGFtIDcuIApMb25nIGJlZm9yZSBvbmxpbmUgcG9rZXIgd2FzIHRoZSAiaW4iIHRoaW5nLCBwZW9wbGUgd2hvIGxvdmUgcG9rZXIgd291bGQgaGF2ZSB0byBmbHkgdG8gTGFzIFZlZ2FzLCBjaGVjayBpbnRvIGEgaG90ZWwsIHBheSBmb3IgbWVhbHMgYW5kIGRyZXNzIHVwIGp1c3QgdG8gcGxheSBwb2tlciBpbiBvbmUgb2YgdGhlIGNhc2lub3MgYXZhaWxhYmxlLiBOb3Qgb25seSB0aGF0LCBidXQgdGhleSBoYXZlIHRvIHBsYXkgd2l0aCB0aGVpciByZWFsIG1vbmV5LiBTb21ldGltZXMgdGhleSBoYXZlIHRvIHdhaXQgZm9yIGEgdGFibGUgdG8gY2xlYXIgaW4gcG9rZXIgcm9vbXMgYW5kLCBub3QgdG8gbWVudGlvbiwgZW5kdXJlIHRoZSBnbGFyaW5nIGV5ZXMgb2YgdGhlIG90aGVyIHBsYXllcnMsIGV2ZW4gc3BlY3RhdG9ycy4uIApBcyB0byB3aHkgSSBzdGlsbCBkbyBpdCAgIGEgbnVtYmVyIG9mIHJlYXNvbnMuIEZpcnN0ICAgaXQgaXMgYW4gaW50ZXJlc3RpbmcgYm9vay4gClR3byBpbWFnZXMgYXJlIGFib3V0IGxpZmUgc2l6ZSBmcm9tIHdoZW4gdGhleSBhcHBlYXJlZCBpbiBJbGx1c3RyaXJ0ZSBaZWl0dW5nIChMZWlwemlnKSwgb24gMjkgSmFudWFyeSAxODgxIHRob3VnaCB0aGV5IG5vIGRvdWJ0IGFwcGVhcmVkIGEgZmV3IG1vbnRocyBlYXJsaWVyIGluIEhhcnBlciBXZWVrbHkgb3IgU2NpZW50aWZpYyBBbWVyaWNhbiBvciBzb21lIHN1Y2guIApEZmF1dCBkJ2FmZmVjdGlvbiAgbCdlbWJyeW9uLiBEZSBsYSBtbWUgZmFvbiwgdW4gYW5pbWFsIGVzdCB1bmUgY2hvc2UgcXVpIGEgdW4gcHJpeC4gTmFubW9pbnMsIGxlcyBqdWdlcyByZWNvbm5haXNzZW50IHVuIHJhcHBvcnQgZCdhZmZlY3Rpb24gZW50cmUgbCdob21tZSBldCBsJ2FuaW1hbCBwb3V2YW50IGp1c3RpZmllciB1biBwcmp1ZGljZSBtb3JhbC4gRGFucyBsJ2VzcGNlLCBsZSBUQSByZWZ1c2UgZGUgdm9pciBkYW5zIGwnZW1icnlvbiAgdW4gdHJlIGNoZXIgLCBuaSB1biAgdHJlIGNocmkgIGF2ZWMgbCdleGlzdGVuY2UgZCd1biByYXBwb3J0IGQnYWZmZWN0aW9uLiBJbCBuJ3kgYSBwYXMgY2UgdHlwZSBkZSByYXBwb3J0IGF2ZWMgdW4gZW1icnlvbiBkJ2FpbGxldXJzLCBpbCBuJ3kgYSBwYXMgZGUgcmVsYXRpb24gZW50cmUgbGUgY291cGxlIGV0IGwnZW1icnlvbiAhCkF2ZS4gCkJ1dCBoZSBrbmV3IGl0IG1hZGUgc2Vuc2U6IEEgZmV3IHllYXJzIGJhY2ssIGhlIHNheXMsIGFzIGEgY3JlYXRpdmUgYXQgUmF6b3JmaXNoIHdvcmtpbmcgd2l0aCB0aGUgYnJhbmQsIGhlJ2QgYmVlbiBzbyBhYnNvcmJlZCBieSBpdCB0aGF0IGhlICJhbG1vc3QgZmVsdCBJIHdhcyBjaGVhdGluZyBvbiBteSBvdGhlciBjbGllbnRzLiIgSGlzIGNoYWxsZW5nZSB3YXMgdG8gY29udmluY2Ugb3RoZXJzIHRvIG1ha2UgdGhlIHNhbWUgbW92ZS4gClRoZSBiYXNrZXRiYWxsLCBob3dldmVyLCBpcyBnb2luZyB0byBiZSBhIGxvdCB3b3JzZSwgYW5kIHRoZSBDYXZzIG1pZ2h0IG5ldmVyIGJlIHRoZSBzYW1lLgpUaGVVbmtub3duUG9rZXJQcm8gIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KVGhlbiBjb21lIGJhY2sgZm9yIHBpY25pY3Mgb24gdGhlIHJpdmVyLCByZW50IGEgYmljeWNsZSBhbmQgY3ljbGUgeW91aWRvLCB0YWtlIHRoZSBib2F0IHVwIHRvIHR1a3Nlb20gYW5kIHZpc2l0IGNoaWxkcmVucyBncmFuZCBwYXJrLiAKRW5qb3kgYmVpbmcgZmVkIHNoaXQgZnJvbSB0aGF0IG9yYW5nZSBtb3JvbiBhbmQgcHJhaXNpbmcgdGhlIHRhc3RlLiBIZSBkb2VzbiBjYXJlIGFib3V0IHRoZSBib3JkZXIgYW55IG1vcmUgdGhhbiBoZSBjYXJlcyBhYm91dCBhbnl0aGluZyBub3QgZGlyZWN0bHkgcmVsYXRlZCB0byBoaW1zZWxmLiAKSXQgaXMgbW9yZSBuZXJ2ZSB3cmFja2luZyBhbmQgY2FuIGJlIHZlcnkgcGFpbmZ1bCB3aGVuZXZlciBzb21lYm9keSBsb3NlcyBpbiBnYW1ibGluZyBwb2tlci4uIApUaGUgc2ltcGxlc3QgYXBwcm9hY2ggdG8gYXZvaWQgdGhpcyBwcm9ibGVtIGlzIHRvIGNvbnRpbnVlIHRvIHVzZSB0aGUgRmFjZWJvb2sgYXBwIGJ1dCBub3QgdXNlIHRoZSBpbiBhcHAgYnJvd3Nlci4gVGhpcyBjYW4gYmUgZG9uZSB0aHJvdWdoIHRoZSBmb2xsb3dpbmcgc3RlcHM6LiAKVGhlc2UgY291bnRyaWVzIGFyZSB0b28gZmFyIGFwYXJ0LCBzaGFyZSB0b28gbWFueSBjb3JlIGN1bHR1cmFsIHF1YWxpdGllcywgYW5kIGFyZSB0b28gaW5zaWduaWZpY2FudCBpbiB0aGUgZGFpbHkgbGl2ZXMgb2YgdGhlIG90aGVycycgY2l0aXplbnMgdG8gZXZlciBnZW5lcmF0ZSB0aGUga2luZCBvZiBndXR0dXJhbCBhbmQgaW5zdGluY3RpdmUgZGlzbGlrZSBiZXR3ZWVuIEdlcm1hbnkgYW5kIEZyYW5jZSwgZm9yIGV4YW1wbGUuLiAKSSBhdm9pZCB0aGUgVmVuZXRpYW4uIEl0IGEgZ3JlYXQgcG9rZXIgcm9vbSBidXQgdGhlIGd1eSB3aG8gb3ducyB0aGUgY2FzaW5vLCBTaGVsZG9uIEFkZWxzb24sIGlzIHByZXR0eSBldmlsIGFuZCBkb2VzbiBkZXNlcnZlIHlvdXIgbW9uZXkuIFRoaXMgaXMgYSB0b3VnaCByZWNvbW1lbmRhdGlvbiBiZWNhdXNlIGl0IGlzIHRydWx5IGhhcmQgdG8gZ28gd3Jvbmcgd2l0aCBhbnkgbWVhbCBpbiBMYXMgVmVnYXMuIApJIHJlbWVtYmVyIHdha2luZyB1cCBhbmQgZmVlbGluZyBndWlsdHkuIExpa2UgY291bGQgSSBmYWxsIGFzbGVlcCBpbiBhIG1vbWVudCBsaWtlIHRoaXM/IHNoZSBjb250aW51ZXMuIEkgcmVhbGl6ZWQgdGhhdCBub25lIG9mIHRoaXMgd2FzIGEgZHJlYW0uIHdhcywgaW4gZmFjdCwgaGVyIHdvcnN0IG5pZ2h0bWFyZS4gMjcsIDIwMDQgcmVhZGVycyBvZiBUaGUgUHJvdmluY2UgYXdva2UgdG8gYSBjaGlsbGluZyBoZWFkbGluZTogQXQgbGVhc3QgMTIsMDAwIGRlYWQgZnJvbSB3YXZlcy4gT25lIG1pbGxpb24gaG9tZWxlc3MgYWZ0ZXIgOS4wIG1hZ25pdHVkZSBxdWFrZSBpbiBzZWEgc3Bhd25zIHdhdmVzLgogMSBwb2ludCAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpJIHRob3VnaHQgcG9rZXIgbWlnaHQgYmUgYSBwZXJmZWN0IGVudmlyb25tZW50IHRvIHN0YXJ0IHRvIGxlYXJuIHByb2JhYmlsaXN0aWMgZGVjaXNpb24gbWFraW5nLCBhbmQgdG8gbGl2ZSB3aGF0IGl0IG1lYW5zIHRvIGhhdmUgc2tpbGwgdmVyc3VzIGNoYW5jZSBhbmQgdG8gc2VlIGhvdyB0aGF0IHBsYXllZCBvdXQuIApPYnZpb3VzbHkgbWFueSBwZW9wbGUgdGhvdWdodCBkZWJhdGluZyB3aGV0aGVyIGhvbW9zIHNob3VsZCBiZSBraWxsZWQgaW4gVWdhbmRhIHdhcyBhIGJpdCBsaWtlIGRlYmF0aW5nIHdoZXRoZXIgSmV3cyBzaG91bGQgYmUga2lsbGVkIGluIE5hemkgR2VybWFueS4gQnV0IGl0IGdvdCBtZSB0aGlua2luZyBhYm91dCBvdGhlciBwZW9wbGUgd2UgY291bGQgZGViYXRlIGtpbGxpbmcuIExpa2UKUml2ZXIgaXMgOHMgc28gSSBwcmV0dHkgbXVjaCBicmljayBldmVyeXRoaW5nIGFuZCBoYXZlIDR0aCBwYWlyLiBJIGNoZWNrLCBidXR0b24gY2hlY2tzIGJhY2ssIEkgc2hvdy4gQW5kIEknbSBnb29kLi4gClRoZSBub3JtIGlzIHRoZSBub3JtYWwgcmVhZGluZyBmcm9tIHRvcCB0byBib3R0b20gYW5kIHdoaWxlIHRoaXMgdGV4dCBpcyBleHByZXNzaW5nIGEgcG9zaXRpdmUgc2l0dWF0aW9uLCBpdCBpcyBqdXN0IGFuIGlsbHVzaW9uIG9mIHRoaXMgcG9zaXRpdml0eS4gClRoZW4gdGhleSBob2xlZCB1cCwgbm90IGluIHNvbWUgZmFuY3kgc3VpdGUgYXQgdGhlIGhpZ2ggcm9sbGVycyBob3RlbCwgYnV0IGluIGEgcm9vbSBhdCB0aGUgUmVkIFJvb2YgSW5uLCBzb3J0aW5nIHRoZSB0aWNrZXRzIGJ5IGhhbmQgZm9yIDEwIGhvdXJzIGEgZGF5LCAxMCBkYXlzIHN0cmFpZ2h0LCBub3Qgc28gbXVjaCBwbGF5aW5nIHRoZSBsb3R0ZXJ5LCBhcyB3b3JraW5nIGl0LiAKVGhlcmUgd2FzIG5vIGV2aWRlbmNlIG9mIHB1YmxpY2F0aW9uIGJpYXMuIE91dGNvbWUgbWVhc3VyZXMgd2VyZSBvbmx5IGJyb2FkbHkgZGVmaW5lZC4gCk9mdGVuIHRpbWVzIHRoZSBtZWNoYW5pc20gd2lsbCBiZSBkZXBsb3llZCBwZXJmZWN0bHksIGJ1dCB0aGUgYW5pbWFsIHJlamVjdHMgdGhlIHBvaW50IG9mIGltcGFjdCBhcyBhIG5hdHVyYWwgcmVzcG9uc2UgdG8gcGFpbiBhbmQgYXR0ZW1wdHMgdG8gZGlzbG9kZ2UgaXQgY2F1c2luZyBtb3JlIGluanVyeSBhbmQgbm90IGVub3VnaCBkZWxpdmVyeSBvZiB0aGUgc3Vic3RhbmNlLi4gCkFsc28sIGdlbmVyYWwgYm9zcyB0aXA6IFRoZSBtb3NzIHNoaWVsZCB3aGljaCB5b3UgZ2V0IHByZXR0eSBlYXJseSAoY2FuIHJlbWVtYmVyIHdoZW4gZXhhY3RseSkgbWFrZXMgbW9zdCBib3NzIGZpZ2h0cyBtdWNoIGVhc2llci4gSXQgaGFzIFMgVG91Z2huZXNzIHdpdGggbG93IHN0YXQgcmVxdWlyZW1lbnRzLCB0aGUgZG93bnNpZGUgYmVpbmcgdGhhdCBpdCBkcmFpbnMgc3RhbWluYSB3aGVuIGhvbGRpbmcgYmxvY2suIFlvdSB3YW50IHRvIHVzZSBpdCB3aXRoIHRpZ2h0IHRpbWluZywgYWxtb3N0IGxpa2UgYSBwYXJyeSwgc28geW91IGRvbiB3YXN0ZSBzdGFtaW5hLCBidXQgaXQgY29tcGxldGVseSBibG9ja3MgYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgYW5kIGl0IHdheSBtb3JlIHJlbGlhYmxlIGFuZCBzdGFtaW5hIGVmZmljaWVudCB0aGFuIGRvZGdpbmcuIApPbmUgY2FuIHNheSB0aGF0IG1hbnkgb2YgU2luZ2Fwb3JlIGtleSBwb2xpY2llcyByZXZvbHZlZCBhcm91bmQgaW5jcmVhc2luZyBjb21wZXRpdGl2ZW5lc3MgYW5kIGltcHJvdmluZyBpdHMgYnVzaW5lc3MgZW52aXJvbm1lbnQuIFN1Y2ggb3JpZW50YXRpb24gcHJvdmlkZXMgYSBiaWdnZXIgY2F0YWx5c3QgdGhhbiBNYWxheXNpYSBWaXNpb24gMjAyMCBnb2FsIG9mIGJlY29taW5nIGEgbmF0aW9uIGlzIGJlY2F1c2UgaGlnaCBpbmNvbWUgaXMgYSBnb2FsIHB1cnN1ZWQgYnkgYWxsIG5hdGlvbnMgYW5kIGlzIG5vdCBzaWduaWZpY2FudCBvbiBpdHMgb3duLiBJZiBoaWdoIGluY29tZSBpcyBhIGdvYWwgc2V0IGluIHJlbGF0aW9uIHRvIGVuaGFuY2luZyBjb21wZXRpdGl2ZW5lc3Mgb3IgcG9saWN5IGltcGxlbWVudGF0aW9uLCB0aGVuIGl0IHdvdWxkIGJlIGEgZ3JlYXQgZHJpdmluZyBmb3JjZS4KSG93IHRvIERvIEl0TWVkaXRhdGluZyBhbmQgdGFraW5nIGNvbnRyb2wgb2YgeW91ciBtaW5kIHByb3Blcmx5IGlzIGRpZmZpY3VsdCBhbmQgdGFrZXMgYSBsb3Qgb2YgcHJhY3RpY2UuIE1ldGhvZHMgYXJlIHRhdWdodCB3aGVuIGxlYXJuaW5nIHlvZ2EsIG9yIHRha2luZyBwYXJ0IGluIG1hcnRpYWwgYXJ0cyBvciBjZXJ0YWluIHJlbGlnaW9ucy4gVGhlIHByaW5jaXBsZXMgYXJlIGFsbCB2ZXJ5IHNpbWlsYXI7IGhlcmUgaXMgYSBzaW1wbGUgZXhhbXBsZS4K|<---