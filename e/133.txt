--->|SSBoYXZlIG5vIHByb2JsZW1zIHdpdGggbmlnaHR3YXZlLCBidXQgdGhlIGVmZm9ydCB0byByZXdhcmQgcmF0aW8gc2VlbXMgcm91Z2ggYXQgdGhlIG1vbWVudC4gVGhhdCBjb3VsZCBiZSBvdXIgaWdub3JhbmNlLCB3aGljaCB3b3VsZCBiZSBwYXJ0bHkgZHVlIHRvIHRoZSBkZXZzIGxhY2sgb2YgY2xhcml0eSBvbiBob3cgdGhlIHN5c3RlbXMgb3BlcmF0ZSwgYnV0IGl0IGlzIGFsc28gc29tZXRoaW5nIHRoYXQgY2FuIGJlIGFkanVzdGVkIGJhc2VkIG9uIGZlZWRiYWNrLgpDb25jZXB0IGFuZCBpbXBsZW1lbnRhdGlvbiB3YXMgc2ltcGxlIGlmIG5vdCBzb21ld2hhdCBjb21wbGV4LiBvdXRsaW5lIG9mIGEgaGVhZCBvZiBhIGdlbmVyaWMgcGVyc29uIHdhcyBkaXZpZGVkIGludG8gdGhyZWUgc2VnbWVudHMgZnJvbnQsIGxlZnQsIGFuZCByaWdodCBvbiB0b3Agb2Ygd2hpY2ggd2FzIHBsYWNlIGEgZ3JpZCBvZiA3eDIwIHJlY3Rhbmd1bGFyIHNlY3Rpb25zLiBvbmUgb2YgdGhlc2Ugc2VjdGlvbnMgd291bGQgaGF2ZSBvbiBhdmVyYWdlIGFuIGFzc29jaWF0ZWQgZG96ZW4gY2FyZHMgb2YgcGljdG9yaWFsIGFuZCB0ZXh0dWFsIGRlc2NyaXB0aW9uIG9mIHRoYXQgc2VjdGlvbiBvZiB0aGUgaGVhZCBvciBmYWNlLiAKVGhleSBhcmUgbmljZSB0byBsb29rIGF0LCBidXQgYXJlIGEgcmVhbCBwYWluIHRvIGdldCBvZmYsIGJlY2F1c2UgdGhlIGdsaXR0ZXIgYml0cyBkb24ndCBkaXNzb2x2ZSBpbiBhY2V0b25lLiAKSmUgcmFwcGVsbGUgcXVlIGxlIHNldWwgbW95ZW4gZGUgbGltaXRlciBsYSBwcm9zdGl0dXRpb24gYydlc3QgZGUgcmVzdGF1cmVyIGwnY29ub21pZSBhZmluIGQnb2ZmcmlyIGFzc2V6IGRlIGpvYnMgbW90aXZhbnRzIGV0IGNvcnJlY3RlbWVudCBybXVucnMgIVJvbGFuZCBEdW1hcyBlc3QgZGV2ZW51ICJndGV1eCIgOiBpbCBhY2N1c2Ugbm90cmUgSXpub2dvdWQgcHJvdmlzb2lyZSBkJ3RyZSBzb3VzICJpbmZsdWVuY2UganVpdmUiR3Jvc3NlIG1vdGlvbiBkYW5zIGwnaGV4YWdvbmUgY2FyIGxhIGdhZmZlIGVzdCBkb3VibGUsIGNhciBpbCBhIHZpb2wgZGV1eCAidGFib3VzIjogb3NlciBwYXJsZXIgZGUgbCdpbmZsdWVuY2Ugbm9uIHBhcyBqdWl2ZSBtYWlzIHNpb25pc3RlIHB1aXNxdSdvbiBlc3QgZGFucyBsZSBkb21haW5lIG5vbiBkZSBsYSByZWxpZ2lvbiBtYWlzIGQndW5lIGlkb2xvZ2llIHBvbGl0aXF1ZSBwcm9mYW5lIGphZGlzIHRlbnUgcG91ciBocnRpcXVlIGV0IHF1ZSBkJ2F1dHJlIHBhcnQgaWwgbWV0IGEgc3VyIGxlIGNvbXB0ZSBkJ3VuZSBmZW1tZSBBbm5lIEdyYXZvaW4uQydlc3QgZW4gZWZmZXQgZnJhbmNoZW1lbnQgImNvZXVyYW50IiBjb21tZSBkaXQgTWFtb24sIGplIHZldXggZGlyZSBIYW1vbiwgY2FyIGNldHRlIGZlbW1lIGVzdCB1bmUgZ3JhbmRlIG11c2ljaWVubmUsIHVuZSBleGNlbGxlbnRlIHZpb2xvbmlzdGUgcXVpIGEgZHBhc3Mgc2EgY3VsdHVyZS4gClRoZSBtb21lbnQgSSBjaGVja2VkIGludG8gdGhlIGhvdGVsLCBJIGFjY2Vzc2VkIHRoZSBOZXQgZm9yIHNvbWUgZHJlc3MgY29kZSBhZHZpY2UgZm9yIGJpZyB0aW1lIGdhbWJsaW5nLiBTaG91bGQgaXQgYmUgYSB0dXhlZG8/IFNob3VsZCBpdCBiZSBhIGJ1c2luZXNzIGphY2tldD8gVGhlIGNvbnNlbnN1cyB3YXMgYSBkYW1wZW5lciAgIEkgd2FzIGdvaW5nIHRvIGdhbWJsZSBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gbXkgbGlmZSBhbmQgbm8gb25lIHRob3VnaHQgc29tZSBncmFuZGV1ciBiZWZpdHRlZCB0aGUgb2NjYXNpb24uCkkndmUgaGFkIEhpY2tlbmxvb3BlciBhcyBhIGdvdmVybm9yIHRoZSBwYXN0IDggeWVhcnMsIGFuZCB0aGUgc3RhdGUgaGFzIGJvb21lZCBlY29ub21pY2FsbHkuIApUaGUgcGxheWVycywgZnJvbSBvbmUgdG8gc2V2ZW4sIHNpdCBhcm91bmQgYSB0YWJsZSB3aXRoIHRoZSBkZWFsZXIgYXQgdGhlIGhlYWQgb2YgdGhlIHRhYmxlLiBJIHdpbGwgY29uc2lkZXIgdGhlIGNhc2Ugd2hlcmUgYSBzaW5nbGUgNTIgY2FyZCBkZWNrIGlzIHVzZWQuIApIZSB0aGVuIHJlcG9ydGVkbHkgcGFpZCBhIG1hbiB3aG8gaGFzIGZvdWdodCBnYW1ibGluZyBmb3IgeWVhcnMgICB0aGUgZm9ybWVyIGhlYWQgb2YgdGhlIG5hdGlvbmFsIENocmlzdGlhbiBDb2FsaXRpb24sIFJhbHBoIFJlZWQsIGFsbW9zdCAkNCwwMDAsMDAwIGZvciBoaXMgaGVscC4gClRoZSBtb3ZlIGZvbGxvd2VkIHNpeCB5ZWFycyBzcGVudCB3aXRoIFF1aWNrIFN0ZXAsIGR1cmluZyB3aGljaCB0aW1lIGhlIHJvZGUgYXMgYSBzdXBwb3J0IGN5Y2xpc3QgZm9yIFRvbSBCb29uZW4uClRoZSBHb29nbGUgUGxheSBTdG9yZSBpcyBmdWxsIG9mIGFsbCBzb3J0cyBvZiBhcHBzLiBGcm9tIG11c2ljIC8gdmlkZW8gcGxheWVycywgdG8gZmlsZSBtYW5hZ2VycyBhbmQgdmFyaW91cyB0b29scywgeW91J2xsIGFsd2F5cyBzZWUgc29tZXRoaW5nIHdvcnRoIGEgdHJ5LiAKTm90IHNheWluZyBJIGFncmVlIHdpdGggdGhlIHNuYWtlIGZhcm0gc3BlY3VsYXRpb24sIGJ1dCBpdCBiZSBzaWxseSB0byBkaXNtaXNzIGl0IG91dCBvZiBoYW5kLiAKVGhlcmUsIGRlYXIgdmlzaXRvcnMgZnJvbSAvci9hbGwhSSB5b3VyIGZyaWVuZGx5IG5laWdoYm91cmhvb2QgZnVsbHkgYXV0b21hdGVkIG1vZGJvdCwgc28gaXQgaXMgbXkgdGFzayB0byBpbmZvcm0geW91IHRoYXQgeWVzLCB0aGlzIGlzIC9yL2RlLCBhIHN1YnJlZGRpdCBmb3IgdGhlIEdlcm1hbiBzcGVha2luZyBjb3VudHJpZXMgb2YgRXVyb3BlLllvdSBhcmUgcXVpdGUgd2VsY29tZSB0byBjb21tZW50IGluIEVuZ2xpc2guIE5vdGUgdGhvdWdoLCB0aGF0IHdlIGhhdmUgaGVhcmQgdGhlIHVzdWFsIGpva2VzIGEgbWlsbGlvbiB0aW1lcyBhbmQgd2lsbCByZWdhcmQgdGhlbSB3aXRoIHBvaW50ZWQgd2VhcmluZXNzLiBBbHNvLCBvdmVyemVhbG91cyBUcnVtcGV0cyB3aWxsIGJlIHRpZWQgdXAgYW5kIGZvcmNlZCB0byBsaXN0ZW4gdG8gMjQgaG91cnMgb2YgTWFyaW8gQmFydGguIApZb3Ugc3VwcG9ydCB0aGUgc3RhdHVzIHF1byBzbyB5b3UgYXJlIHNjdW0uIEkgc2F5IHRoZSBzYW1lIGFib3V0IGRlbW9jcmF0cyB3aG8gYWNjZXB0IGdlcnJ5bWFuZGVyaW5nCk1pdCBncnRlciBTcGFubnVuZyBoYXQgZGllIEJldmxrZXJ1bmcgICBhbmdlZmhydCBhdWNoIHZvbiBkZW4gRnJldW5kZW4gZGVyIHMgdW5kIENhc2lubyBHYW1lcyAgIGRpZSBFcmZmbnVuZyBkZXMgR3JlZW5icmllciBSZXNvcnRzIG1pdCBzZWluZW0gbm9ibGVuIENhc2lubyBlcndhcnRldC4gClRoaXMgc3ViY2xhc3MgZG9lcyBub3QgaGF2ZSBhbnkgaGVhbGluZyBhYmlsaXR5LiAKQmFiaWVzIGNyeWluZyBpbiB0aGUgbG9iYnkuIApNYW55IG9mIHVzIGFyZSBub3cgcGxhbm5pbmcgb3VyIHN1bW1lciB2YWNhdGlvbnMuIApIb29wZXIsIHNheWluZyAiV2hvJ3MgZ29pbmcgdG8gcmVhZCBtZSBteSBzdG9yaWVzPyBPciBmaXggbXkgYmlyZCBzZWVkIG1pbGtzaGFrZXM/IiBXaXRoIHRob3NlIHR3byBzaW1wbGUgc3RhdGVtZW50cywgU3Bpbm5leSBoYWQgY29tcGxldGUgY29tbWFuZCBvZiB0aGUgZW1vdGlvbnMgaW4gdGhlIHJvb20uLiAKQW5kIHQgd2FzIENMT1NFRCEgV2Ugd2VudCB0byB0aGUgQmx1ZSBNb3NxdWUuIEl0LCB0b28sIHdhcyBDTE9TRUQhIER1ZSB0byB0aGUgaG9sZGF5cyBhbGwgdGhlIGhvdXJzIGFuZCBvcGVubmcgYW5kIGNsb3NuZyB0bWVzIHdlcmUgZGZmZXJlbnQuIFNvIHdlIG9wdGVkIHRvIHRha2UgdGhlIHRyYW0gdG8gRW1ub251IGFuZCB0YWtlIGEgYm9hdCBhY3Jvc3MgdGhlIEJvc3Bob3J1cyB0byBVc2t1ZGFyLCBvbiB0aGUgQXNhbiBzZGUgb2YgSXN0YW5idWwuIApHb3Qgb3V0IHdpdGggb3VyIGd1bnMgaW4gb3VyIGhhbmRzIGFuZCBteSBwYXJ0bmVyIHllbGxlZCBidXQgaGUganVzdCBvcGVuZWQgdXAuIFRoZSBmaXJzdCBibGFzdCBjYXVnaHQgbWUgaW4gdGhlIGFybSBhbmQgYWNyb3NzIHRoZSBzaWRlIG9mIHRoZSBoZWFkIEkgd2VudCBkb3duLCByZWxhdGVkIHRoZSBub3cgZGVjZWFzZWQgb2ZmaWNlci4gSGUgcmVtZW1iZXJlZCBnZXR0aW5nIGJhY2sgb24gaGlzIGZlZXQsIHJldHJpZXZpbmcgaGlzIHJldm9sdmVyLCBhbmQgaGVhZGluZyB1cCB0aGUgZHJpdmV3YXkgd2hlcmUgaGUgZW5jb3VudGVyZWQgR2xlbiwgb3V0IG9mIHRoZSBiYWNreWFyZCBob2xkaW5nIGhpcyBndXRzLiB3aG8gaGFkIGNoYXNlZCB0aGUgc3VzcGVjdCBiZWhpbmQgNjQwIEVkaW5ib3JvdWdoLCByZWNlaXZlZCBhIHNob3RndW4gYmxhc3QgdG8gdGhlIGFiZG9tZW4gYnV0IHNob3QgdGhlIGd1bm1hbiBpbiB0aGUgZm9yZWhlYWQuIEhlIHdlbnQgb24gdG8gaGF2ZSBhbiBpbGx1c3RyaW91cyBwb2xpY2UgY2FyZWVyIGJ1dCBzdGlsbCBoYWQgbW9yZSB0aGFuIDEwMCBwZWxsZXRzIGluIGhpcyBib2R5IHdoZW4gaGUgcmV0aXJlZC4KR2FtZXN0b3AgYnV5cyB1c2VkIGdhbWVzIGZvciBhIGNlcnRhaW4gcHJpY2UuIApIb3cgbWFueSBzaW5nbGVzIGhhcyBMYWR5IEdhZ2EgcmVsZWFzZWQKVGhlIHNwcmVhZCB0ZWxsaW5nIHVzIHRoYXQgdGhlIG1hcmtldCBpcyBsZXNzIGNvbnZpbmNlZCBvZiBhIEJvQyBoaWtlLCBzYWlkIEJpcGFuIFJhaSwgaGVhZCBvZiBOb3J0aCBBbWVyaWNhbiBmb3JlaWduIGV4Y2hhbmdlIHN0cmF0ZWd5IGF0IENJQkMuIG1hcmtldCBpcyBsb29raW5nIGZvciBzb21lIGZvcm0gb2YgYWNrbm93bGVkZ21lbnQgb2Ygd2Vha2VyIHRoYW4gZXhwZWN0ZWQgZ3Jvd3RoIGluIHRoZSBzdGF0ZW1lbnQuIGRvbGxhciBvdmVyIHRoZSBjb21pbmcgbW9udGgsIHJlY291cGluZyBpdHMgeWVhciBlbmQgbGV2ZWxzLCBmcm9tIEMkMS4zMyBub3cuIFRoZSBkZXByZWNpYXRpb24gd291bGQgYmUgY29udGluZ2VudCBvbiB3ZWFrZXIgZGF0YSwgd2l0aCBhbGwgZXllcyBvbiBlbXBsb3ltZW50IGZpZ3VyZXMgZHVlIEZyaWRheS4gVGhlIHJlcG9ydCBpcyBleHBlY3RlZCB0byBzaG93IENhbmFkYSBsYWJvdXIgbWFya2V0IGJhcmVseSBhZGRlZCBqb2JzIGluIEZlYnJ1YXJ5LCBmb2xsb3dpbmcgYW4gdW5leHBlY3RlZCBzdXJnZSBvZiA2Niw4MDAgaW4gSmFudWFyeS4KWWVzLCBJIGNsZWFybHkgcG9zdGVkIHRoaXMgd2l0aCAidGVhcnMgcnVubmluZyBkb3duIG15IGZhY2UuIiBMaXN0ZW4gaGVyZSwgbGlmZSBoYXMgd29ya2VkIG91dCBmb3IgbWUgaGVyZSwgYmV0dGVyIHRoYW4gSSBjb3VsZCwgb3Igd291bGQgaGF2ZSBleHBlY3RlZC4gSSBoYXZlIGp1c3QgZ3Jvd24gdGlyZWQgb2YgdGhlIG1hbnkgZmxhd3MgdGhhdCBwbGFndWUgdGhpcyBjb3VudHJ5LiBOb3QgdG8gc2F5IHRoYXQgZXZlcnkgY291bnRyeSBkb2VzIG5vdCBhbHNvIGhhdmUgaXRzIHNoYXJlIG9mIGRvd25zaWRlcy4uIApOb3csIGZvciBtYW55IG9mIHVzLCB3ZSBleHBlY3Qgbm90aGluZyBidXQgYmV0cmF5YWxPZiBjb3Vyc2UsIGxpa2UgYW55IGR5c2Z1bmN0aW9uYWwgcmVsYXRpb25zaGlwLCB0aGVyZSB3ZXJlIGNsdWVzIGltbWVkaWF0ZWx5IHRoYXQgd2Ugc2hvdWxkIHN0YXJ0IGhhcmRlbmluZyBvdXJzZWx2ZXMgdG8gdGhlIGZhbnRhc3kgdGhhdCB3ZSB3b3VsZCBmaW5hbGx5IGhhdmUgYW4gYWRtaW5pc3RyYXRpb24gdGhhdCB3YXMgb3VycyBhbmQgb3VycyBhbG9uZSwgcmF0aGVyIHRoYW4gYSBQcmVzaWRlbnQgdGhhdCBpcyBhbHdheXMgc25lYWtpbmcgb2ZmIHRvIGNhdm9ydCB3aXRoIGJpZyBtaWxpdGFyeSBhbmQgYmlnIGJhbmtzLiBUaGVuIGNhbWUgTGFycnkgU3VtbWVycyBhbmQgdGhlIFRBUlAgYmFpbG91dHMgYW5kIHRoZSBpbmNyZWFzZSBvZiB0cm9vcHMgaW4gYm90aCBJcmFxIGFuZCBBZmdoYW5pc3RhbiBhbmQgc28gbWFueSBiZXRyYXlhbHMgdGhhdCBieSBub3csIG15IGhlYXJ0IGlzIGxpa2Ugc3RvbmUgYW5kIHRoZXJlIGlzIG5vdGhpbmcgbGVmdCBmb3IgdGhlIE9iYW1hIGl0ZXMgdG8gZG8gdGhhdCB3aWxsIGh1cnQgbWVPciBzbyBJIHNheS4gClp1Z25nbGljaCBpc3QgZGVyIE5hdGlvbmFscGFyayBpbSBXZXNlbnRsaWNoZW4gZHVyY2ggc2VpbmUgc2R3ZXN0bGljaGUgZmZudW5nLCBkZW4gQmFycmFuY28gZGUgbGFzIEFuZ3VzdGlhcyBvZGVyIGJlaW0gQXVzc2ljaHRzcHVua3QgTGEgQ3VtYnJlY2l0YSwgZGVuIHdpciBhbHMgQXVzZ2FuZ3NwdW5rdCBmciB1bnNlcmUgaGV1dGlnZSBrbGVpbmUgV2FuZGVydW5nIGdld2hsdCBoYWJlbi4gRGllIEN1bWJyZWNpdGEgbGllZ3QgYXVmIGNhLiAxLjMwMCBtLCBpc3QgZWluZSBBcnQgaW4gZGllIENhbGRlcmEgdW5kIGJpZXRldCBlaW5lbiBrbGVpbmVuIFJ1bmR3YW5kZXJ3ZWcgbWl0IGF0ZW1iZXJhdWJlbmRlbiBBdXNibGlja2VuIGluIGRlbiBzb3dpZSBhdWYgZGllIGdlZ2VuYmVyIGxpZWdlbmRlIG5yZGxpY2hlIEdpcGZlbGtldHRlLgpUcnkgdG8gZ28gdG8gdGhlIGJhciB1cHN0YWlycy4uIApIYXZpbmcgYSBtaW5pbXVtIG9mIGZvdXIgZGlmZmVyZW50IGNvbG9ycyBpcyBhZHZpc2FibGUuIEN1c3RvbSBjaGlwIHNldHMgYXJlIGF2YWlsYWJsZSB0byBidXkgb25saW5lIGZvciBob3N0cyB0aGF0IHdhbnQgdG8gYWRkIGEgcGVyc29uYWwgZmxvdXJpc2ggdG8gdGhlaXIgZ2FtZXMuIE1vc3QgY2hpcCBzZXRzIGNvbWUgd2l0aCBhIGRlYWxlciBidXR0b24gYW5kIHN0b3JhZ2UgdW5pdCAgIHVzdWFsbHkgYSBzbWFsbCBtZXRhbCBjYXNlLi4gCkkga25vdywgSSBrbm93LiBhbmQgZ2lybHMgaGF2ZSBiZWVuIG1hZGUgdG8gZmVlbCBzaGFtZSBhbmQgZGlzZ3VzdCB3aXRoIHRoZWlyIGJvZGllcy4gcGFydGllcyBhcmUgYW4gYXR0ZW1wdCB0byByZXZlcnNlIHRoYXQgc2hhbWUgYnkgY2VsZWJyYXRpbmcgZmVtYWxlbmVzcy4gZ2V0IGl0LiBoYXZlIGZyaWVuZHMgd2hvIGJ1cnkgdGhlaXIgbWVuc3RydWFsIGJsb29kIGVhY2ggbW9udGggaW4gIk1vdGhlciBFYXJ0aCIgdG8gbWFyayB0aGUgInNhY3JlZG5lc3MiIG9mIHRoaXMgZXZlbnQuIGxldCBmYWNlIGl0LiBjYW5ub3QgY291bnRlciBtaWxsZW5uaWEgb2YgbWlzb2d5bnkgd2l0aCBhIHByb2R1Y3Qgbm9yIGV2ZW50IHRoZSBzb2NpYWwgZXZlbnQgb3JnYW5pemVkIGFyb3VuZCB0aGUgY29uc3VtcHRpb24gb2YgdGhhdCBwcm9kdWN0LiBjYW4geW91IGNvdW50ZXIgaXQgYnkgZW1icmFjaW5nIHlvdXIgaW5uZXIgZ29kZGVzcyBhbmQgZ2l2aW5nIHRoYW5rcyB0byBHYWlhIGZvciB5b3VyIHBlcmlvZCAoYWx0aG91Z2ggYXQgbGVhc3QgdGhhdCBmcmVlKS4gZW5kaW5nIG1pc29neW55IHRha2VzIHRoZSBkaXNtYW50bGluZyBvZiB0aGUgc3RydWN0dXJlcyB0aGF0IGNyZWF0ZSBpdCAgcGF0cmlhcmNoeSwgb2YgY291cnNlLCBidXQgYWxzbyB0aGUgY29uc3VtZXIgY2FwaXRhbGlzbSB0aGF0IHJlbGllcyBvbiBpbmR1Y2luZyBzZWxmIGhhdHJlZCBpbiBvcmRlciB0byBzZWxsIHVzIHN0dWZmIHRvIG1ha2UgdXMgaGF0ZSBvdXJzZWx2ZXMgbGVzcy4KSXQgaXMgYWxzbyBrbm93biBhcyBEb3VibGUgaGFuZCBwb2tlciBhbmQgaXMgYSBraW5kIG9mIENoaW5lc2UgcGFpIGdvdyBkb21pbm8gZ2FtZS4gCkl0IGZyYW5rbHkgICB0byBiZSBibHVudCAgIHRlZXRlcmluZyBvbiBkb3VibGV0aGluay4gWW91IGVzc2VudGlhbGx5IGFyZ3VpbmcgaXQgYSBncmVhdCBhbGliaSBiZWNhdXNlIGl0IGEgc2hpdHR5IGFsaWJpLgpNb250cmVhbDogTWVuIGNhbiBwYXJ0eSBoYXJkIGZyb20gUnVlIFN0LiBMYXVyZW50IHRvIFJ1ZSBDcmVzY2VudCwgd2hlcmUgdGhlIHN0cmVldHMgYXJlIGxpbmVkIHdpdGggdXBzY2FsZSBjbHVicywgbG91bmdlcywgYmFycyBhbmQgcHVicy4gT3IgY29tZSBmb3IgYSBzdW1tZXIgZmVzdGl2YWwgSW50ZXJuYXRpb25hbCBKYXp6IEZlc3RpdmFsIChKdW5lIDI4IHRvIEp1bHkgNykgYW5kIEp1c3QgZm9yIExhdWdocyBGZXN0aXZhbCAoSnVseSA5IDI5KS4KSSBjYW4gdW5kZXJzdGFuZCB3YW50aW5nIHRvIGtlZXAgdGhlIGhhbmRzIHdhcm1lZCB1cCBhbmQgcmVhZHksIGJ1dCBpcyBzcHJheWluZyByZWFsbHkgdGhlIHdheSB0byBkbyB0aGF0P3Jjb3Y1MjUgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb1BsYXVzaWJsZSwgYnV0IHdoeSBsZWF2ZSBvdXQgb2YgdGhlIGxvcmUgYSBHZXJtYW4gYXJteSBnZW5ldGljIG1hbmlwdWxhdGlvbiB3aGVuIHRoZXkgd2VyZSBzbyBvcGVuIGFib3V0IFVTIHNvbGRpZXIgZW5oYW5jZW1lbnQgcHJvZ3JhbT8gQ29tcGFyZWQgdG8gdGhlIHZhZ3VlIHRoaW5ncyB3ZSBzYXcgZnJvbSB0aGUgVVMgcHJvZ3JhbSAoYWxsIHRoYXQgc3R1ZmYgdGhleSBwdW1wZWQgaW50byBNb3JyaXNvbiEgU28gcHJlc3VtYWJseSBzdGFtaW5hIGVuaGFuY2luZyBzdHVmZiB3aXRoIHNvbWUgYW50aSBhZ2luZyBzaWRlIGVmZmVjdCksIHRoYXQgZHJhbWF0aWMgb2YgYSBzaXplIGluY3JlYXNlIHdvdWxkIGJlIHRvbyB1bmV0aGljYWwsIGV2ZW4gd2l0aCB3aWxsaW5nIHN1YmplY3RzLiAKU3RvcmllcyBhcmUgb2Z0ZW4gTWFyeSBTdWUgcmV2ZW5nZSBmaWNzLCBvciBmb2N1cyBhIGxvdCBtb3JlIG9uIGdvcmUsIGV0Yy4gCkRlYXRoQnlTdXBsZXggIDIsOTk2IHBvaW50cyAgc3VibWl0dGVkIDExIGhvdXJzIGFnbwpBIGxvdCBvZiBwZW9wbGUgZG9uJ3QgaGF2ZSBtdWNoIHRpbWUgaW4gdGhlIGRheSB3aXRoIGFsbCB0aGUgY2hvcmVzIHRvIGRvLiAKRHVzdGVyaW5nICA0IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KSSBhbSBzbyBleGNpdGVkIHRvIGhlYXIgdGhhdCB5b3UgYXJlIG5vdyBvZmZlcmluZyB0aGUgU2tvZGVzIGhvcnNlIHRyZWF0cyBvbiB5b3VyIHdlYiBwYWdlISBJIGFtIHZlcnkgZ2xhYiB0byBoZWxwIQpPY3QuIDE1OiBUaGUgTmV3IFlvcmsgVGltZXMgcmVwb3J0cyBvbiB0aGUgZGV2YXN0YXRpbmcgdXNlcyBvZiBGYWNlYm9vayBpbiBNeWFubWFyLCB3aGVyZSBnb3Zlcm5tZW50IG9mZmljaWFscyBwcm9tb3RlZCBwcm9wYWdhbmRhIHRvIGVuY291cmFnZSBldGhuaWMgY2xlYW5zaW5nIG9mIFJvaGluZ3lhIE11c2xpbXMuIFRoZSBzb2NpYWwgbmV0d29yayBoYXMgYmVlbiByZW1vdmluZyBodW5kcmVkcyBvZiBwYWdlcywgYW5kIGJ5IERlY2VtYmVyIHdhcyBzdGlsbCB0YWtpbmcgZG93biBtb3JlIGFjY291bnRzIHJ1biBieSBNeWFubWFyJ3MgbWlsaXRhcnksIHdoaWNoIGlzIGFjY3VzZWQgb2YgY2Fycnlpbmcgb3V0IHRoZSBldGhuaWMgY2xlYW5zaW5nIG9mIFJvaGluZ3lhIE11c2xpbXMuLiAKTXkgb3BpbmlvbiwgdGhvLCB0aGlzIG1hbmdhIGlzIGEgZ2VtLCB0aGUgYXJ0IGlzIGJhcm9xdWUgYW5kIGRldGFpbGVkIHRvIGEgVCwgYW5kIG1ha2VzIG1lIGxhdWdoIGhhcmQuIApTaW5jZSB0aGUgZmlyc3Qgb25saW5lIGNhc2lubyB3YXMgbGF1bmNoZWQsIHBsYXllcnMgYWxsIGFyb3VuZCB0aGUgd29ybGQgd2VyZSBhdHRyYWN0ZWQgYnkgdGhlIGFtYXppbmcgaWRlYSBvZiBwbGF5aW5nIGZyb20gdGhlIGNvbWZvcnQgb2Ygb3VyIGhvbWVzLiAKVGhlIFBTUEMgUGxhdGludW0gUGFzcyBpbmNsdWRlcyBhICQyNSwwMDAgYnV5IGluIHRvIHRoZSB0b3VybmFtZW50LCBzaXggbmlnaHRzIGFjY29tbW9kYXRpb24gYXQgdGhlIEF0bGFudGlzIFJlc29ydCwgaW4gTmFzc2F1LCByb29tIGZvbGlvIGFuZCB0cmF2ZWwgZXhwZW5zZXMsIHNvIENocmlzdGlhbiB3YXMgYWxsIHNldCBmb3IgaGlzIHRyaXAgYXdheSwgKG5vIHB1biBpbnRlbmRlZCkuCkR1cmluZyBWb2x1bnRlZXIgQXBwcmVjaWF0aW9uIFdlZWssIEJydWlucyBhcmUgaW52aXRlZCB0byBwYXJ0aWNpcGF0ZSBieSBzaWduaW5nIHVwIGZvciBzZXJ2aWNlIHByb2plY3RzLCBzaGFyaW5nIHZvbHVudGVlciBleHBlcmllbmNlcyBvbiB0aGUgVm9sdW50ZWVyIENlbnRlcidzIHNvY2lhbCBtZWRpYSBwYWdlcyAoRmFjZWJvb2ssIFR3aXR0ZXIsIEluc3RhZ3JhbSksIGFuZCB0aHJvdWdoIGEgdmFyaWV0eSBvZiBzZXJ2aWNlIGFjdGl2aXRpZXMgZGVzaWduZWQgYm90aCB0byBhcHByZWNpYXRlIHRob3NlIHdobyBoYXZlIGJlZW4gaW52b2x2ZWQgYW5kIHRvIGluc3BpcmUgb3RoZXJzIHRvIHNlcnZlLiAKJ1lvdSBjYW4ndCB0cnVzdCcgdGhlbQpBY3R1YWxseSwgQW1lcmljYW5zIGFyZSBhbHdheXMgaW4gYSBiaXQgb2YgYSBzZXggcGFuaWMgIGVzcGVjaWFsbHkgb3ZlciB3aGF0ICJjaGlsZHJlbiIgbWlnaHQgc2VlIChvbmUgb2YgdGhlIHJlYXNvbnMgQXBwbGUgbGlzdGVkIGlzICJjb21wbGFpbnRzIGZyb20gcGFyZW50cyIpLiAKV2h5IGFuZCBob3cgdGhvc2UgcHJvYmxlbXMgb2NjdXIsIGFuZCB3aGF0IHRvIGRvIGFib3V0IGl0LCBhcmUgc3RpbGwgdmVyeSBtdWNoIG1hdHRlcnMgb2YgZGViYXRlLiBJcyBzZXZlcmUgcHJvYmxlbSBnYW1ibGluZyBhIGRpc2Vhc2Ugb3IgYW4gaWxsbmVzcz8gSXMgaXQgYW4gYWRkaWN0aW9uIGluIHRoZSBjbGluaWNhbCBzZW5zZT8gQXJlIHBlb3BsZSBib3JuIHdpdGggYSBwcmVkaXNwb3NpdGlvbiB0byBwcm9ibGVtIGdhbWJsaW5nPyBDb3VsZCB0aGVyZSBldmVuIGJlIGEgcHJvYmxlbSBnYW1ibGluZyBnZW5lPyBUaGVyZSdzIG5vIGFncmVlbWVudCBvbiB0aGUgYW5zd2VycywgYW5kIHlldCB0aGV5J3JlIGNydWNpYWwgaW4gc2hhcGluZyBvdXIgcmVzcG9uc2VzIHRvIHByb2JsZW0gZ2FtYmxpbmc6IGNsaW5pY2FsbHksIGVjb25vbWljYWxseSwgZ292ZXJubWVudGFsbHksIGFuZCBpbmRpdmlkdWFsbHkuIApJIGhvdXNlIHNhdCBmb3IgbXkgY2hpbGRob29kIGNydXNoIHdoZW4gd2Ugd2VyZSAxMmlzaCBhcyBoZXIgZmFtaWx5IHdlbnQgb24gYSA2IHdlZWsgcm9hZCB0cmlwIGFyb3VuZCB0aGUgVVMuIFRoZXkgaGFkIGEgY2F0IGFuZCBhIGJpcmQgYW5kIHlvdSBzZWUgd2hlcmUgdGhpcyBpcyBnb2luZy4gVGhpcyBzdHVwaWQgbGl0dGxlIGZpbmNoIGdvdCBvdXQgb2YgaXRzIGNhZ2UgKGxlZ2l0LCB0aGUgY2FnZSB3YXMgY2xvc2VkIHdoZW4gSSByZXR1cm5lZCB0aGUgbmV4dCBkYXkpLCBhbmQgdGhlIGNhdCBraWxsZWQgaXQuLiAKR29vZCBsdWNrISAwIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnby4gCk9uZSBmdWNraW4gdGhpbmcuIApLZWVwIGl0IHVwIGR1ZGUgYW5kIEkgYmVsaWV2ZSBpbiB5b3UhCk9tYWhhIENhcGl0b2wgTG91bmdlIGFuZCBTdXBwZXIgQ2x1YiAoKQpJZiB5b3UgdGFrZSB0aGUgaWRlYXMgcHJlc2VudGVkIGJ5IHRoaXMgdmlkZW8gdGhvdWdoLCBpdCBpcyBwb3NzaWJsZSB0aGF0IHdoYXQgdGhhdCBjb21iYXQgc3BlZWQgcmFjaWFsIG11bHRpcGxpZXIgZG9lcyBpcyBtYWtlIHRoZSBIaXZlciBQcmluY2UgbW9yZSByZXNpc3RhbnQgdG8gY29tYmF0IHNwZWVkIHBlbmFsdGllcyBmcm9tIGhlYXZpZXIgYXJtb3IuIFRoZSB2aWRlbyBzdWdnZXN0cyB0aGF0IGl0ZW1zIHN1Y2ggYXMgdGhlIHdvb2RlbiBzYW5kYWxzIGRvbiBhY3R1YWxseSBhd2FyZCB5b3UgYSBib251cyB0byBjb21iYXQgc3BlZWQgb3V0cmlnaHQsIGJ1dCByYXRoZXIgdGhleSBjYW4gYmUgZXF1aXBwZWQgdG8gY2FuY2VsIG91dCBzb21lIG9mIHRoZSBuZWdhdGl2ZSBjb21iYXQgc3BlZWQgcGVuYWx0aWVzIG9uIGl0ZW1zIGxpa2UgdGhlIFNhbXVyYWkgQ2hlc3RwbGF0ZS4gCkRvbnQgZ2l2ZSB1cCBkdWRlLiAKQWx0aG91Z2ggY2VydGFpbmx5IG5vdCB0aGUgaW50ZW50aW9uLCB0aGUgQ3J1c2FkZXMgb2YgdGhlIGVsZXZlbnRoLCB0d2VsZnRoLCBhbmQgdGhpcnRlZW50aCBjZW50dXJpZXMgYWNxdWFpbnRlZCB0aGUgRXVyb3BlYW4gcG9wdWxhdGlvbiB3aXRoIEFyYWJpYW4gaWRlYXMgYW5kIGZvc3RlcmVkIGFuIGFwcHJlY2lhdGlvbiBvZiBFYXN0ZXJuIGFyb21hdGljcywgZGVzcGl0ZSByZXBlYXRlZCB3YXJuaW5ncyBieSB0aGUgQ2hyaXN0aWFuIHByaWVzdGhvb2QgdGhhdCBmcmFncmFuY2Ugd2FzIGFzc29jaWF0ZWQgd2l0aCBTYXRhbi4gQ3J1c2FkZXJzIHJldHVybmVkIGJlYXJpbmcgZ2lmdHMgb2Ygb2lscywgZnJhZ3JhbnQgd2F0ZXJzLCBhbmQgc29saWQgcGVyZnVtZXMuIApJIGhhdmUgdG8gc2F5IEkgYnV0IEkgYWdyZWUgd2l0aCBhIGxvdCBvZiB3aGF0IHlvdSBzYWlkLiBPbmUgb2YgdGhlIHRoaW5ncyBhYm91dCBtaWxpdGFyeSB2cyBwb2xpY2UgaG93ZXZlciBpcyB0aGUgcHJlc2VuY2Ugb2YgbGFyZ2Ugc2NhbGUgZm9yY2UuIFJ1bGVzIG9mIEVuZ2FnZW1lbnQgZXhpc3QgYmVjYXVzZSBtb3N0IGxvZ2ljYWwgaW5kaXZpZHVhbHMga25vdyB0aGF0IHdoZW4gdGhleSBhcmUgYXR0YWNraW5nIG9yIGFzc2F1bHRpbmcgYSBncm91cCBvZiBtaWxpdGFyeSBwZXJzb25uZWwsIHdoYXQgZXhhY3RseSB0aGV5IGdldHRpbmcgaW50by4gClRoZSB0YXBlIGxpbWl0cyBtb3ZlbWVudCBpbiB0aGUgaW5qdXJlZCBhcmVhLCBzdWNoIGFzIGEgam9pbnQsIHRvIHByZXZlbnQgZXhjZXNzIG9yIGFibm9ybWFsIG1vdmVtZW50LiBJZiBhIGNlcnRhaW4gam9pbnQgaXMgY2F1c2luZyByZXBlYXRlZCBpbmp1cnkgdGhlbiB0aGUgdGFwZSB3aWxsIHByZXZlbnQgaXQgZnJvbSBleGNlc3NpdmUgbW92ZW1lbnQuIFRoaXMgdGFwZSB3aWxsIGFsc28gYmVuZWZpdCBsaWdhbWVudHMgYW5kIHRlbmRvbnMgd2hpY2gsIGluIHR1cm4gd2lsbCByZWR1Y2UgdGhlIGNoYW5jZXMgb2Ygc3RyYWluIG9yIHNwcmFpbiBpbiB0aGF0IGFyZWEuIApOYXRpb25hbCBBY2FkZW15IG9mIFNjaWVuY2VzLCAxMDk6IDU5NCA1OTksIDIwMTJEZXBhcnRtZW50cyBvZiBhR2Vub21lIFNjaWVuY2VzIGFuZCBDb21wdXRlciBTY2llbmNlIGFuZCBFbmdpbmVlcmluZywgVW5pdmVyc2l0eSBvZiBXYXNoaW5ndG9uLCBTZWF0dGxlLCBXQSA5ODE5NTtGQVMgQ2VudGVyIGZvciBTeXN0ZW1zIEJpb2xvZ3ksIEhhcnZhcmQgVW5pdmVyc2l0eSwgQ2FtYnJpZGdlLCBNQSAwMjEzODsgYW5kIFNhbnRhIEZlIEluc3RpdHV0ZSwgU2FudGEgRmUsIE5NIDg3NTAxIEVkaXRlZCBieSBKZWZmcmV5IEkuIApJbiBhIGdhbWUgb2Ygb25saW5lIHBva2VyLCB0aGUgYmFua3JvbGwgYWN0cyBhcyB0aGUgbGlmZWxpbmUgb2YgdGhlIHBsYXllci4gSWYgeW91IGFyZSBhIG5ldyBwbGF5ZXIgdGhlbiB5b3Ugc2hvdWxkIHVuZGVyc3RhbmQgdGhlIHZhbHVlIG9mIGJhbmtyb2xsIGluIHlvdXIgZ2FtZS4gTm93LCB0aGlzIHBva2VyIGNhbGN1bGF0b3IgY2FuIGFsc28gaGVscCB5b3Ugc2F2ZSB5b3VyIGJhbmtyb2xsIGFuZCBidWlsZCBpdCB1cCBhcyB3ZWxsLiBJdCBpbmZvcm1zIHlvdSBhYm91dCB0aGUgaG9sZSBjYXJkIHN0cmVuZ3RoIGFsb25nIHdpdGggcG90IHNpemVzIGFuZCB0aGVzZSB0d28gdGhpbmdzIHBsYXkgYSB2aXRhbCByb2xlIGluIHlvdXIgZGVjaXNpb25zLiBJdCBoZWxwcyB5b3UgdGFrZSBzZW5zaWJsZSBkZWNpc2lvbiwgYnkgaW5mb3JtaW5nIHlvdSBhYm91dCB0aGUgaGFuZHMgdGhhdCBhcmUgcmlza3ksIGhhbmRzIHRoYXQgeW91IHNob3VsZCBub3QgYmUgYSBwYXJ0IG9mIGFuZCB0aGUgaGFuZHMgdGhhdCBjYW4gYmUgYmVuZWZpY2lhbCBmb3IgeW91LiBJbiBtb3N0IG9mIHRoZSBjYXNlcywgaXQga2VlcHMgdGhlIHBsYXllciBpbiB0aGUgdGlnaHQgYWdncmVzc2l2ZSBjb3JuZXIsIHdoaWNoIGlzIGNvbnNpZGVyZWQgdGhlIGJlc3QsIG5vIG1hdHRlciB3aGF0IGdhbWUgeW91IGFyZSBwbGF5aW5nLgpPaXMgSG9sbGFuZGUKKEFsdGhvZiBzYXlzIGhlJ3MgYmVlbiBoZWxwaW5nIG90aGVyIHBoYXJtYWNldXRpY2FsIGNvbXBhbmllcyBkZXZlbG9wIFBFIGRydWdzLCBhbmQgYWx0aG91Z2ggaGUgY2FuJ3QgcHJvdmlkZSBkZXRhaWxzLCBoZSBub3RlcyB0aGF0IG5vbmUgYXJlIGFzIGZhciBhbG9uZyBpbiB0aGUgcHJvY2VzcyBhcyBKb2huc29uIEpvaG5zb24gaXMuKS4gCldoaXRlcm9zZTk4ICAxNiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KSWNoIGhvZmZlLCBiZWltIG5jaHN0ZW4gTWFsIG1laHIgc2lubnZvbGxlcyB6dSBiZXJpY2h0ZW4sIGJpcyBkYWhpbiwKSSBoYXZlIGJhcmVseSBzY3JhdGNoZWQgdGhlIHN1cmZhY2Ugb2YgZm9vZCB0aGVyZS4gCldoeT8gQmVjYXVzZSBpbiB0aG9zZSBsYW5ndWFnZXMgZGVtbyAgYW5kICBrcmF0aWEgZG9uIGV4aXN0IGFzIHNlcGFyYXRlIHdvcmRzLiBUaGV5IGFyZSBzbyBjYWxsZWQgYm91bmQgbW9ycGhlbWVzIHRoYXQgZG9uIGhhdmUgaW5kZXBlbmRlbnQgZXhpc3RlbmNlLi4gCkZlZXQgaW5kZXBlbmRlbnRseSwgc3RhcmluZyBkb3duLCBoaXMgZXNzZW5jZSBsZWFwcyBvZiBwbGVhc3VyZSwgYWdpdGF0aW9uLCBmZWVsaW5ncyBvZiAuLiAKTXkgVGFpIENoaSBpbnN0cnVjdG9yIHRvbGQgdXMgZnJvbSB0aGUgYmVnaW5uaW5nIGl0IHdhcyBhIHJlbGF4aW5nIGV4ZXJjaWVzLCBXYWxraW5nIE1lZGl0YXRpb24uIFdlIGRpZG4ndCBiZWxpZXZlIGl0IGF0IGZpcnN0LiBBbGwgb3VyIGNvbmNlbnRyYXRpb24gaGFkIHRvIGJlIG9uIHdoYXQgbW92ZSB3YXMgbmV4dC4gClJvbWFudGljPy4gCkkgYWN0dWFsbHkgdGhpbmsgdGhpcyBpcyBhIG1vcmUgcG93ZXJmdWwgbGVzc29uIGZvciB0aGVtIHRoYW4gdGhlIHNhcHB5IGFuZCByaWRpY3Vsb3VzIHJvbWFuY2Ugd2hlcmUgdHdvIHRlZW5hZ2VycyBhbG1vc3Qga2lsbCB0aGVtc2VsdmVzIG92ZXIgdGhlaXIgbG92ZS4gClN0ZXZlIEJhbmssIGNvbW1pc3Npb25lciBvZiB0aGUgRGVwYXJ0bWVudCBvZiBTb2NpYWwgU2VydmljZXMsIHNhaWQgaGUgd2FzICJkZWVwbHkgdHJvdWJsZWQiIGJ5IHRoZSBpbmNpZGVudCBhbmQgYSAidGhvcm91Z2giIHJldmlldyBoYWQgYmVlbiBsYXVuY2hlZC4gSGUgc2FpZCB0d28gSFJBIGVtcGxveWVlcywgd2hvbSBoZSBkZXNjcmliZWQgYXMgcGVhY2Ugb2ZmaWNlcnMsIGFyZSBiZWluZyBwbGFjZWQgb24gbW9kaWZpZWQgZHV0eSBwZW5kaW5nIHRoYXQgaW52ZXN0aWdhdGlvbi4KSWYgeW91IGFyZSBncmVhdCBhdCBwb2tlciwgeW91IGNhbiBldmVuIG1ha2UgZW5vdWdoIGNhc2ggdG8gZ28gb24gYSBzaG9wcGluZyBzcHJlZSBvbmxpbmUuLiAKVGhlIFdlc3QgSGlnaGxhbmQgV2F5IFJhY2UKIkMnZXN0IHZyYWksIG5vdXMgc29tbWVzIHBhc3NzIGRlIGxhIGhvbnRlICBsYSBnbG9pcmUiLCBjb25maWUgc29uIG1haXJlLCBSYWZmYWVsbG8gRGUgUnVnZ2llcmksIHF1aSBjaGVyY2hlIG1haW50ZW5hbnQgIHZpdGVyIGxlcyBlZmZldHMgZCd1biB0b3VyaXNtZSBkZSBtYXNzZTogIk1hdGVyYSBuJ2EgcGFzIGJlc29pbiBkJ3VuIHRvdXJpc21lIGVycmFudCBpbmNvbnNjaWVudCBkZXMgbGlldXgsIGRlIGwnaGlzdG9pcmUgZXQgZGVzIHRyYWRpdGlvbnMgZGUgbm90cmUgdmlsbGUiLi4gCkFuZCBmb3VyIG90aGVyIG15dGhzIGFib3V0IHRoZSBzaW5nZXIKSGVsZW4gemdlcnRlLCB3aWUgcGVpbmxpY2ghICJWb3IsIGhlbSwgdm9yIC4gClRoYXQncyB0aGUgdGFrZWF3YXkgZnJvbSAiIiAoU3BpZWdlbCBHcmF1KSwgWXV2YWwgTm9haCBIYXJhcmkncyBmcmlnaHRlbmluZyBuZXcgYm9vayBvZiBiaWd0aGluay4gTWFjaGluZXMgcHV0IGh1Z2UgbnVtYmVycyBvZiBtYW51YWwgbGFib3JlcnMgYW5kIGZhY3Rvcnkgd29ya2VycyBvdXQgb2YgYnVzaW5lc3MsIGJ1dCB0aG9zZSBwZW9wbGUgbGFyZ2VseSBtb3ZlZCBvbiB0byBqb2JzIG9yZ2FuaXplZCBhcm91bmQgdGhlIGNvZ25pdGl2ZSBjYXBhY2l0aWVzIG9mIGh1bWFucy4gCkxheSBkb3duIHlvdXIgaGFuZC4gT25jZSB5b3UgaGF2ZSBjaG9zZW4geW91ciBwb2tlciBoYW5kLCBsYXkgaXQgZmFjZSBkb3duIG9uIHRoZSB0YWJsZS4gWW91ciBvcHBvbmVudCB3aWxsIHRoZW4gdGVsbCB5b3Ugd2hlcmUgdG8gbGF5IHRoZSBoYW5kICh3aGljaCBjb2luIHRvIHBsYWNlIGl0IGluIGZyb250IG9mKS4KSXQgYSBtb3NhaWMgY2l0eSB0aGF0IGlzIGZhbW91cyBmb3IgaXQgY29sb3JmdWwgcnVncy4gCkl0IHdhcyBiYXNpY2FsbHkgbG9ja2VkIGluIHBsYWNlIGR1ZSB0byByZWFsbHkgYmFkIHNjb2xpb3NpcyBhbmQgaW5mbGFtbWF0aW9uIGZyb20gbXkgQVMgKGJ1dCBtYWlubHkgYWxpZ25tZW50IGFuZCBjdXJ2YXR1cmUgaXNzdWVzKS4gSSBhbSBiYXNpY2FsbHkgODAlIGhlYWxlZCBub3cgYW5kIHN0aWxsIGltcHJvdmluZyB0byAxMDAlLiAKSnVzdCBpbWFnaW5lIGlmIHlvdSB3ZXJlIGluIHRoZWlyIHNob2VzICAgRGVtb2NyYXRzIGFuZCBsaWJlcmFsIHZhbHVlcyBvbiB0aGUgcmlzZSwgeW91ciBtb3N0IGRyZWFkZWQgYm9vZ2V5d29tYW4gYWJvdXQgdG8gdGFrZSB0aGUgd2hpdGUgaG91c2UgICBhbGwgc2VlbXMgbG9zdC4gVGhlbiBjb21lcyBEb25hbGQgVHJ1bXAuIApHaXZpbmcgc29tZW9uZSBhbGwgeW91ciBsb3ZlIGlzIG5ldmVyIGFuIGFzc3VyYW5jZSB0aGF0IHRoZXkgbG92ZSB5b3UgYmFjayEgRG9uIGV4cGVjdCBsb3ZlIGluIHJldHVybiwgZmlyc3Qgd2FpdCBmb3IgaXQgdG8gZ3JvdyBpbiB0aGVpciBoZWFydCBidXQgaWYgaXQgZG9lc24gYmUgY29udGVudCBpdCBncmV3IGluIHlvdXJzLiBJdCB0YWtlcyBvbmx5IGEgbWludXRlIHRvIGdldCBhIGNydXNoIG9uIHNvbWVvbmUsIGFuIGhvdXIgdG8gbGlrZSBzb21lb25lLCBhbmQgYSBkYXkgdG8gbG92ZS4uIApHbGFkIHlvdSBhcmUgZW5qb3lpbmcgdGhlbSEgU2luY2UgeW91IHNhaWQgeW91IG9ubHkgcmVhbGx5IGtub3cgdHdvIHNpbXBsZSBmb2xkcywgSSB0aG91Z2h0IEkgc2hhcmUgYSBmZXcgc3VnZ2VzdGlvbnM6IE1peCBpbiBib3RoIHN0YW5kaW5nIGFuZCBzZWF0ZWQgZm9yd2FyZCBmb2xkcyBpbiB5b3VyIHByYWN0aWNlLiAKT3VyIHNvbiB3YXMgbW9zdGx5IHBvdHR5IHRyYWluZWQgYXQgNiB3ZWVrcywgbWVhbmluZyBvbmx5IGEgdmVyeSByYXJlIGFjY2lkZW50LiAKRmlyc3QsIHNlZSBhIG5ldXJvbG9naXN0LiAKSSBsZWFybnQgdG8gY29kZSBvbiBXaW5kb3dzLCBhbmQgaGF2ZSByZWNlbnRseSAoYWJvdXQgYSB5ZWFyIGFnbykgc3dpdGNoZWQgdG8gYSBNYWMgZm9yIHdvcmsgYW5kIChhYm91dCBzaXggbW9udGhzIGFnbykgdG8gTGludXggYXQgaG9tZS4KV2hhdCB3ZSdyZSBmaW5kaW5nIGluY3JlYXNpbmdseSwgd2l0aCBkYXRhIGFuZCB0ZWNobm9sb2d5IGFuZCBhbmFseXRpY3MsIHdlIGNhbiBkbyBpdCBvdXJzZWx2ZXMuIApJZiB5b3UgY2FuIGZpbmQgb3V0IHRoZSB2ZW5kb3Igb3Igc3VwcGx5IHN0b3JlIHRoYXQgbWVtYmVycyBvZiB0aGUgb2ZmaWNlcidzIG5ldyBkZXBhcnRtZW50IHVzZSwgYnV5aW5nIGEgZ2lmdCBjZXJ0aWZpY2F0ZSBpcyBhIHRob3VnaHRmdWwgd2F5IHRvIG9mZnNldCB0aG9zZSBjb3N0cy4uIApZb3UncmUgZ29pbmcgdG8gaGF2ZSBhIGxvdCBvZiBhZHJlbmFsaW5lIGNvdXJzaW5nIHRocm91Z2ggeW91IGluIHRoZSBmaXJzdCA1MDAgYW5kIHlvdXIgYm9keSBpcyBnb2luZyB0byB3YW50IHRvIGdvIGhhcmRlciBidXQgeW91IG11c3QgcmVzaXN0IHRoZSB1cmdlLiAKVGhlIGJvb2sgIkxvdmUgYW5kIFJlc3BlY3QiIGhlbHBlZCBtZSBzZWUgaG93IHBhcmVudHMgd2FudCByZXNwZWN0IGFuZCBjaGlsZHJlbiBsb3ZlLCBhbmFsb2dvdXMgdG8gdGhlIGh1c2JhbmQgYW5kIHdpZmUgZHluYW1pYy4gU29tZXRpbWVzIG9mIGNvdXJzZSBob3cgSSBleHByZXNzIG15IGxvdmUgaXMgc2V0dGluZyBib3VuZGFyaWVzIGFuZCBsaW1pdHMgKFRoZSBGYXRoZXIgZGlzY2lwbGluZXMgdGhvc2UgSGUgbG92ZXMpIEZvciBteSBzb24gd2hvIGlzIGhhdmluZyBzb21lIHN0cm9uZyBidXJzdHMgb2YgZW1vdGlvbiBhcyBoZSBncm93cywgZ2l2aW5nIGhpbSB0YXNrcyBhbmQgbWFraW5nIGhpbSBmZWVsIHVzZWZ1bCBhbmQgbmVlZGVkIChhbG9uZyB3aXRoIHBoeXNpY2FsIGFmZmVjdGlvbikgbWFrZXMgaGltIGZlZWwgbG92ZWQuIApQbHVzaWV1cnMgbXVzdWxtYW5zIG9udCBkY2lkIGRlIHBvcnRlciBwbGFpbnRlIGNvbnRyZSBsJ0V0YXQgY2FyIGlsIGRldmllbnQgZGUgcGx1cyBlbiBwbHVzIGNsYWlyIHF1ZSBsZSByYXNzZW1ibGVtZW50IG4ndGFpdCBwcm90ZyBxdWUgZHUgY3QgbGUgbW9pbnMgZGFuZ2VyZXV4LiBKJ29zZSBlc3ByZXIgcXVlIGxldXJzIGF2b2NhdHMgc2F1cm9udCBtYW5vZXV2cmVyIHBvdXIgcG91cnN1aXZyZSBub24gcGFzIHRhbnQgbCdFdGF0IHBlcnNvbm5lIG1vcmFsZSBtYWlzIGxlcyByZXNwb25zYWJsZSwgbGUgTWFpcmUgZGUgTmljZSBldCBsZSBwcmZldCBkZSBwb2xpY2UgZXQgbGUgcHJmZXQgdG91dCBjb3VydC4gCiJXaGlsZSBJIGhhdmUgbm90IHlldCBwdXQgZG93biBhbnkgc3Ryb25nIHJvb3RzIGluIHRoZSBjb21tdW5pdHkgYXMgSSBqdXN0IG1vdmVkIGhlcmUsIEkgaW50ZW5kIHRvIHN0YXkgaGVyZSBwZXJtYW5lbnRseSwiIEJhbGRlcnJhbWEgd3JpdGVzLiAiVGhlIGFwcGxpY2FudCBoYXMgdHdvIGNoaWxkcmVuIGFuZCBJIGtub3cgdGhhdCBoZSBpcyBhIGRldm90ZWQgcGFyZW50IGFuZCB3b3VsZCBuZXZlciBkbyBhbnl0aGluZyB0aGF0IHdvdWxkIHRha2UgaGltIGF3YXkgZnJvbSB0aGVtLiIKV2h5IHdvdWxkIHRoZSBwcmVzcyBhY3F1aWVzY2UgdG8gdGhlICJwcm8gbGlmZSIgbGFuZ3VhZ2UgZ2l2ZW4gdGhhdCB0aGlzIGlzIGEgcHJvZmVzc2lvbiBkZXZvdGVkIHRvIGxhbmd1YWdlPyB3aGF0IHNvcnQgb2Ygc3ltYm9saWMgdmlvbGVuY2Ugd2FzIGRvbmUgdG8gYWJvcnRpb24gcmlnaHRzIGJlY2F1c2Ugb2YgaXQ/CkkgYXNrZWQgaGltIG5vdCBiZWNhdXNlIGhlIHdhcyBhIGR1ZGUgYnV0IGJlY2F1c2UgaGUgbG9va3Mgc3Ryb25nLiAKQW5kIEkgdGhpbmsgaXQgYWx3YXlzIHdpbGwsIGZvciBtZS4uIApOZXR3b3JrIG1lY2hhbmlzbXMgb2YgaW50ZW50aW9uYWwgbGVhcm5pbmcuIApBYmVyIGR1IG11c3N0IGRlaW5lbiBlaWdlbmVuIFdlZyB6dSBKZXN1cyBmaW5kZW4sIGRlbm4gZXIgd2lyZCBuaWNodCB2b24gYWxsZWluIHp1IGRpciBrb21tZW4gd2llIGRpZSBaZXVnZW4gSmVob3Zhcy4gClRoYXQgbm90IHRoYXQgYW5ub3lpbmcgb3IgZ3JpbmR5IHJlYWxseSwgY29uc2lkZXJpbmcgaG93IG1hbnkgaW1wcyB0aGUgZ2FtZSBoYXMgaW4gZWFjaCBmaWdodC4gCkFsbCB0aGUgd29ya2VyIGFudHMgYXJlIGZlbWFsZSBhbmQgZG8gbm90IGhhdmUgcmVwcm9kdWN0aXZlIHByZXNzdXJlcyBwbGFjZWQgb24gdGhlbS4gVGhlIHF1ZWVuIGRvZXMuIElmIHNoZSBwcm9kdWNlcyBhIGJ1bmNoIG9mIHdvcmtlcnMgdGhhdCBzb2FrIHVwIHJlc291cmNlcyB3aGVuIHRoZXkgYXJlIGR5aW5nLCBzaGUgd2lsbCBiZSBvdXRwZXJmb3JtZWQgYW5vdGhlciBxdWVlbiB3aG9zZSBvZmZzcHJpbmcgYmVoYXZlIGluIHdheXMgdGhhdCBkaXNjb3VyYWdlIHVubmVjZXNzYXJ5IGVuZXJneSBleHBlbmRpdHVyZS4KUG93ZXJsZXNzaGVybzExMSAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpUaG91Z2ggdGhlcmUgaXMgZGlzYWdyZWVtZW50IGFzIHRvIHdoZXRoZXIgYW5vdGhlciBzZXZlcmUgc2hvY2sgdG8gdGhlIHN5c3RlbSBpcyBsb29taW5nIChwZXJoYXBzIGluIHRoZSBmb3JtIG9mIGZvcmVjbG9zdXJlcyksIG1vc3QgaW5kdXN0cnkgaW5zaWRlcnMgdGhpbmsgYSByZWNvdmVyeSBpcyBhIHllYXIgb3IgdHdvIGF3YXkuIEV2ZXJ5b25lIGFncmVlcyBvbiB0aGUgb25lIHRoaW5nIHRoYXQgd2lsbCBzcHVyIGl0LiAiQ29tbWVyY2lhbCByZWFsIGVzdGF0ZSBuZWVkcyB0aGUgbGFib3IgbWFya2V0IHRvIHN0YWJpbGl6ZSBncm93dGgsIiBHeW91cmtvIHNheXMuICJSZWFsIGVzdGF0ZSBuZWVkcyBib2RpZXMuIgpUaGUgY2hhbmNlcyB0aGF0IHJhbmRvbWx5IHNlbGVjdGVkIHBlb3BsZSBsaXN0ZW4gdG8gdGhlIHNhbWUgbXVzaWMsIHdhdGNoIHRoZSBzYW1lIFRWLCBhbmQgZ2VuZXJhbGx5IGhhdmUgdGhlIHNhbWUgaW50ZXJlc3RzIGFyZSBzaWduaWZpY2FudGx5IGxvd2VyIHRoYW4gYXQgYW55IHBvaW50IGluIG1hbnkgZGVjYWRlcy4KWW91IGFsc28gaGF2ZSB0aGUgb3B0aW9uIGluIHVzaW5nIGEgcHJlcGFpZCBBVE0uIFRoZSBkaWZmZXJlbmNlIHdpdGggcHJlcGFpZCBBVE0gaXMgdGhhdCBwbGF5ZXJzIGdldCB0byBkZXBvc2l0IHRoZWlyIHBva2VyIG1vbmV5IHRvIGFuIEFUTSBjYXJkIGFuZCBub3QganVzdCBhIFdlYiBzaXRlLiBXaGVuIGRvaW5nIGNhc2ggb3V0cywgaXQgZ29lcyBkaXJlY3RseSB0byB5b3VyIGNhcmQuIEFuZCB0aGUgZ29vZCB0aGluZyBhYm91dCBpdCBpcyB0aGF0IHRoZSBwcmVwYWlkIEFUTSB3b3JrcyB3aXRoIG1vc3QgbG9jYWwgQVRNIG1hY2hpbmVzLgpJZiB5b3UgdGlsdCB0aGUgdGlwIHRvIHRoZSBzaWRlLCBmb3IgaW5zdGFuY2UsIGl0IGxvb2tzIGxpa2UgeW91IHNoYWRpbmcgcmF0aGVyIHRoYW4ganVzdCBjb2xvdXJpbmcgb3Igc2tldGNoaW5nLi4gClNvIGlmIHlvdSBoYXZlIDEwMDAgZGF0YXBvaW50cyB3aXRoIGFuIDgwIDIwIFRyYWluL1Rlc3Qgc3BsaXQsIGFuZCBhIGZlYXR1cmUgY2FsbGVkICJDb3VudHJ5Ii4gWW91IGFyZSB3b25kZXJpbmcgaWYgeW91IGNhbiBzdGlsbCBpbmNsdWRlICJDb3VudHJ5IiBpZiAiR2VybWFueSIgb2NjdXJzIGZld2VyIHRoYW4gMjAwIHRpbWVzIChzaXplIG9mIHRlc3Qgc2V0KT8KQXMgYSBjYXNlIGluIHBvaW50LCBJIGN1cnJlbnRseSB3b3JrIGluIGEgY2F0ZWdvcnkgd2hlcmUgdGhlIGZ1dHVyZSBpcyBiZWluZyByYXBpZGx5IHJlIGRlZmluZWQgaW4gdGVybXMgb2YgbW9iaWxpdHkgc29sdXRpb25zLiBTbWFydCBjaXRpZXMgYXJlIG5vIGxvbmdlciBhIGNvbmNlcHQgb24gdGhlIGRyYXdpbmcgYm9hcmQuIApDaG9jb2JvYXQgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNyBob3VycyBhZ28KWW9kYSBpcyBzaG9ydGVyIHRoYW4gdmlydHVhbGx5IGV2ZXJ5IG90aGVyIGZpZ2h0ZXIsIHdoaWNoIGdpdmVzIGhpbSBhIHBlcm1hbmVudCBsb3cgZ3JvdW5kIGRpc2FkdmFudGFnZTsgaG93ZXZlciwgaGlzIHNhYmVyIGZpZ2h0aW5nIHN0eWxlIHV0aWxpemVzIGEgZmxpcHBpbmcgaGVhdnkgdGVjaG5pcXVlIGluIG9yZGVyIHRvIG5lZ2F0ZSB0aGlzIHdlYWtuZXNzIGZvciBhIHRlbXBvcmFyeSB3aW5kb3cuIFlvdSBub3RpY2UgdGhhdCwgYWZ0ZXIgZmFsbGluZyBmcm9tIHRoZSBjZW50cmFsIHBvZGl1bSBpbiBUaGUgU2VuYXRlIGJ1aWxkaW5nLCBoZSBpbW1lZGlhdGVseSByZXRyZWF0cyB1cG9uIHJlYWxpemluZyBoZSBpcyBvbiB0aGUgbG93ZXN0IGdyb3VuZC4uIAoiSWYgeW91IHRoaW5rIGFib3V0IHRoZSBjYXNpbm8sIGluaGVyZW50bHksIHRoZXkncmUgb2ZmZXJpbmcgYSByaWdnZWQgZ2FtZSB0aGF0IHRoZXkga25vdyB0aGV5J3JlIGdvaW5nIHRvIHdpbiBhdCBhbmQgdGhleSBjcmVhdGUgdGhlIGlsbHVzaW9uIHRoYXQgeW91IGNhbiB3aW4gYXQgaXQsIiBzYWlkIE1hLiAiVGhleSB0cnkgdG8gc3Vja2VyIHBlb3BsZSBpbnRvIHBsYXlpbmcuIApQaGlsU3VzaGkgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KSWYgdGhhdCBnb2VzIHNtb290aGx5LCB3aGljaCBJIGFtIHN1cmUgaXQgd29uIC4gTG9sLCB0aGVuIEkgdGhpbmsgdGhlIHJlc3Qgd2lsbCBmYWxsIGludG8gcGxhY2UuIEkgd2lsbCBiZSBpbiB0aGlzIGJyYW5kIG5ldyBiYXNlbWVudCBzdWl0ZSBhbmQgd2lsbCB0YWtlIGNhcmUgb2YgaXQgYW5kIGJlY2F1c2UgSSBhbSBzaW5nbGUgYW5kIGNoaWxkbGVzcyBpdCBub3QgdGhhdCBiaWcgb2YgYSBkZWFsLiAKSXQgd2FzIHRoYXQgaWYgdGhlIE8gcmluZ3MgaGFkIGxpbWl0ZWQgbGlmZXRpbWUgKHNlZSBlZGl0KSBkYW1hZ2UgYW5kIG5lZWRlZCB0byBiZSByZXBsYWNlZC4gVGhpcyB3YXMgaGlnaGx5IGRvY3VtZW50ZWQgYnV0IHRoZXkgZGVjaWRlZCB0byBza2lwIHJlcGxhY2luZyB0aGVtIGEgZmV3IHRpbWVzLiAKV2hhdCBzaG91bGQgdGhlIENsZXZlbGFuZCBCcm93bnMgZG8gYWJvdXQgdGhhdD8zIGRheXMgYWdvICsgQnkgVGVycnkgUGx1dG8sIFRoZSBQbGFpbiBEZWFsZXJDbGV2ZWxhbmQgQnJvd25zOiBUYWxraW4nIHRydXRoIGFib3V0ICdnb2luZyBmb3IgaXQnIGFuZCB3aGF0IG1ha2VzIHNlbnNlIGluIDIwMTkgICBUZXJyeSBQbHV0byBDbGV2ZWxhbmQgQnJvd25zOiBUYWxraW4nIHRydXRoIGFib3V0ICdnb2luZyBmb3IgaXQnIGFuZCB3aGF0IG1ha2VzIHNlbnNlIGluIDIwMTkgICBUZXJyeSBQbHV0byBUaGUgQ2xldmVsYW5kIEJyb3ducyBoYXZlIGEgZ29vZCB5b3VuZyBxdWFydGVyYmFjaywgYnV0IEdNIEpvaG4gRG9yc2V5IGtub3dzIHRoZSB0ZWFtIG5lZWRzIHNvIG11Y2ggbW9yZS42IGRheXMgYWdvICsgQnkgVGVycnkgUGx1dG8sIFRoZSBQbGFpbiBEZWFsZXJDbGV2ZWxhbmQgSW5kaWFuczogV2h5IEhhbmxleSBSYW1pcmV6PyBIb3cgYWJvdXQgc29tZSBnb29kIG5ld3MgZnJvbSBHb29keWVhcj8gICBUZXJyeSBQbHV0byBDbGV2ZWxhbmQgSW5kaWFuczogV2h5IEhhbmxleSBSYW1pcmV6PyBIb3cgYWJvdXQgc29tZSBnb29kIG5ld3MgZnJvbSBHb29keWVhcj8gICBUZXJyeSBQbHV0byBXaGVuIHRoZSBJbmRpYW5zIHdlbnQgc2hvcHBpbmcgZm9yIGEgYmFyZ2FpbiBiYXQsIHRoZXkgc2V0dGxlZCBvbiBIYW5sZXkgUmFtaXJlei4gCklmIHNoZSB0aHJlYXRlbnMgc3VpY2lkZSwgcHJvdmlkZSBoZXIgd2l0aCB0aGUgY29udGFjdCBpbmZvcm1hdGlvbiB0byBhIHN1aWNpZGUgaG90bGluZSBhbmQgY2FsbCB0aGUgcG9saWNlLiBHZXQgYSB0aGlyZCwgcHJvZmVzc2lvbmFsIHBhcnR5IGludm9sdmVkICAgdGhleSBhcmUgdHJhaW5lZCB0byBkZWFsIHdpdGggcGVvcGxlIGxpa2UgdGhpcywgZXNwZWNpYWxseSBpbiBhIGNyaXNpcy4gSXQgaXMgYmV5b25kIHRoZSBzY29wZSBvZiB5b3VyIHVuZGVyc3RhbmRpbmcvdHJhaW5pbmcvd2hhdGV2ZXIsIGFuZCBhIHRoaXJkLCBwcm9mZXNzaW9uYWwgcGFydHkgd2lsbCBzZW5kIGEgY2xlYXIgbWVzc2FnZSB0byBoZXIgdGhhdCB5b3Ugc2V0dGluZyBib3VuZGFyaWVzLi4gClBhd2xlbnR5J3MgdHdvIGJyb3RoZXJzIGFuZCB0d28gc2lzdGVycyBzYXkgdGhleSBrbmV3IFBhd2xlbnR5IHdhcyBzbWFydCBhcyBhIGtpZC4gQnV0IGhlIHdhc24ndCBwYXJ0aWN1bGFybHkgaW50ZXJlc3RlZCBpbiBwb2xpdGljcywgc2luY2UgdGhlcmUgd2FzIG1vcmUgdGFsayBhYm91dCBzcG9ydHMgdGhhbiBwb2xpdGljcyBhdCB0aGUgZGlubmVyIHRhYmxlLiBIZSB0b2xkIGhpcyBzaWJsaW5ncyBoZSB3YW50ZWQgdG8gYmUgYSBkZW50aXN0LiAKRGV0dGEga29tbWVyIGZyIG4gZW4gbCBuZyB0aWQgRCBEIHIgZCBvY2ggYmwgYiBja2VyIHAgNzAgdGFsZXQgZm9ydGZhcmFuZGUgZHJhciB1cHBtIHJrc2FtaGV0ZW4gYXYgcHVibGlrZW4gc29tIGRlIGYgcnMga2VyIGx5Y2thbiBpIGNhc2lub3QuIEVuIHNuYWJiIGFuc2x1dG5pbmcgbWVkIG4gdGV0IGhhbmRsZWRhcmU6IHN0dWRlbnRlciBrYW4gZiBvbWVkZWxiYXIgYW5zbHV0bmluZyBtZWQgaGFuZGxlZGFyZSBmIHJldGFnLCBwcm9kdWt0ZXIgb2NoIHRqIG5zdGVyIHAgZiBzdCBtZWQgZmluZ3JldC4gCkxhIHBldGl0ZSBidGUgbmUgbWFuZ2UgamFtYWlzIGxhIGdyb3NzZSBkaXQgb24uIEMgdW4gZGljdG9uIHF1aSBuZSBzZSB2cmlmaWUgYXVjdW5lbWVudCBhdSBzdWpldCBkdSBjaG5lIHF1b2kgcXUgZW4gcGVuc2U6IHF1ZSBzYSBoYXV0ZSBzdGF0dXJlIG5lIHNvaXQgcGFzIGwgcXVpIG9ic2N1cmNpc3NlIGxlIGp1Z2VtZW50IGV0IGxhIHNhaW5lIG9ic2VydmF0aW9uLCBuaSBsZSBsaWV1IG8gYWxsZXIgYWJyaXRlciBzb24gaWdub3JhbmNlLiAKVGhlcmUgYXJlIGFsc28gcGxlbnR5IG9mIHN0dWRpZXMgb24gdGhlIHNvY2lhbCBpbXBhY3RzIG9mIHNraXBwaW5nIGdyYWRlcyBvciBrZWVwaW5nIGEgc3R1ZGVudCBiYWNrIGEgeWVhciwgaWYgeW91IGNhcmUgdG8gZG8gc29tZSByZXNlYXJjaCBvbiB5b3VyIG93bi5UcmFpbkxvYWYgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnb1ZlcnkgaW50ZXJlc3RpbmcgcmVhZHMsIHRoZXJlIGlzIHRoZSBjaGFsbGVuZ2Ugb2YgZWR1Y2F0aW9uIHZzIHNvY2lvbG9naWNhbCBpbXBhY3QuIEkgd29uZGVyIGlmIHRlY2hub2xvZ3kgbWF5IHByb3ZpZGUgYW4gYW5zd2VyIGZvciB0aGVzZSB0eXBlcyBvZiBzaXR1YXRpb25zLCBmb3IgZXhhbXBsZSwgZ2FtaW5nIGNvbW11bml0aWVzIHRlbmQgdG8gYm9hc3QgYSBodWdlIHZhcmlhdGlvbiBvZiBhZ2VzIHdpdGggbGl0dGxlIHRvIG5vIGltcGFjdCwgbW9zdGx5IGR1ZSB0byB0aGUgYW5vbnltaXR5IHlvdSBob2xkIG9ubGluZSwgSSB3b3VsZCBiZSB2ZXJ5IGludGVyZXN0ZWQgaW4gc2VlaW5nIGhvdyBvbmxpbmUgY291cnNlcyBzdWNjZXNzIHZzIGFnZSB2cyB0aW1lIHRha2VuIHdvdWxkIGhvbGQgdXAuIEluIG15IG9waW5pb24gdGhlIGVkdWNhdGlvbiBzeXN0ZW0gYXMgYSB3aG9sZSBtYXkgYmVuZWZpdCBmcm9tIGdvaW5nIGRpZ2l0YWwgd2hpbGUgc3RpbGwgbWFpbnRhaW5pbmcgdGhlIGltcG9ydGFuY2Ugb2YgYXR0ZW5kaW5nIHdoaWNoIGNvdmVyIGV4cGVyaWVuY2VkIGxlYXJuaW5nLi4gCkFsbGVpbiBkYXMgd2FyIGRpZSBSZWlzZSB3ZXJ0LiBMZWlkZXIgZ2luZ2VuIGRpZXNlIHp3ZWkgTiBpbiBkZXIgIHZpZWwgenUgc2NobmVsbCB2b3JiZWkuIEFiZXIgZXMgd2VyZGVuIG5pY2h0IGRpZSBsZXR6dGVuIHNlaW4uLiAKQnJ1aXNlcyBhbmQgaGlja2V5cyBhcmUgbm90IG9ubHkgdW5jb21mb3J0YWJsZSwgdGhleSBhbHNvIGF0dHJhY3QgdW53YW50ZWQgYXR0ZW50aW9uLiBUaHJvdWdob3V0IHRoZSBhZ2VzLCBwZW9wbGUgaGF2ZSBmb3VuZCBhIGxvdCBvZiB3YXlzIHRvIHRyZWF0IHRoZXNlIGJvdGhlcnNvbWUgd291bmRzLiBPbmUgd2F5IGlzIGJ5IHRoZSB1c2Ugb2YgZWdncy4gSWYgeW91IGhhdmUgZXh0cmEgZWdncyBpbiB5b3VyIGtpdGNoZW4sIHVzZSB0aGVtIHRvIGdldCByaWQgb2YgeW91ciBicnVpc2VzIG9yIGhpY2tleXMuCkl0IGxpa2UgbGlmdGluZyBmb3IgZnJhbWUuIApXaGVuIHlvdSBzYXkgeW91IGNvbnNpZGVyIGludGVsbGlnZW5jZSB0byBiZSB0aGUgdmFyaWFibGUgdGhhdCBtYXR0ZXJzICAgYWdhaW4sIHRoYXQgYmVjYXVzZSB5b3UgY2hvc2VuIHRoYXQgKGFzIGEgaHVtYW4pIGJlY2F1c2UgaXQgc29tZXRoaW5nIHRoYXQgaGFzIGhlbHBlZCBodW1hbnMgc3Vydml2ZS4gCkhlIGhhdGVzIHRoaXMgam9iIHNvbWV0aW1lcywgYnV0IGhlIGtub3dzIHRoaXMgaXMgd2h5IGhlIGRvZXMgdGhpcyBqb2IuIApXaGVuIGl0IGNvbWVzIHRvIG1lbnRpb25pbmcgYW1wbGUgZmFjdHMgYWJvdXQgcG9rZXIgb25saW5lIGdhbWVzIHZpYSB0aGUgaW50ZXJuZXQgd2UgaGF2ZSB0byBzdGFydCB0aGlua2luZyBhYm91dCB0d28gdmVyeSBpbXBvcnRhbnQgcG9pbnRzLiBQcmltYXJ5IGltbWVuc2VseSBpbXBvcnRhbnQgZmFjdG9yIGlzIGVhcm5pbmcgcHJvZml0IGFuZCBhIGZ1cnRoZXIgaXMgc2F0aXNmYWN0aW9uLiAKSGUgc3RhcnRlZCBoaXMgY2FyZWVyIGF0IE5vcnRoZXJuIExpZmUuIApPbmUgdGhuZyBJIGhhdmUgdG8gYWRkIGhlcmUgcyB0aGF0IG4gVHVya2V5IG1vc3QgaG91c2VzIGFuZCBidWxkbmdzIGhhdmUgc29sYXIgcGFuZWxzIG9uIHRoZSByb29mcyBhbmQgYWxsIGxnaHRidWxicyBhcmUgZW5lcmd5IHNhdm5nIGJ1bGJzLiAKRm9ybWVyd29tYmxlICAyIHBvaW50cyAgc3VibWl0dGVkIDQgeWVhcnMgYWdvCldoaWxlIGl0IGlzIHRydWUgdGhhdCBkZXZlbG9waW5nIGEgd2lubmluZyBzdHJhdGVneSBhbmQvb3IgcGxheWluZyBhZ2FpbnN0IHBsYXllcnMgd2l0aCBsZXNzIGV4cGVydGlzZSB0aGFuIHlvdSBhcmUgYm90aCBlZmZlY3RpdmUgaW4gb3B0aW1pemluZyB5b3VyIHByb2ZpdHMgd2hpbGUgcGxheWluZyB0aGUgbWFueSBwb2tlciBnYW1lcyB0aGF0IHlvdSBtYXkgaW5kdWxnZSBpbiwgY2hvb3NpbmcgdGhlIHJpZ2h0IHRhYmxlIGlzIGp1c3QgYXMgZWZmZWN0aXZlLgpJIHRoaW5rIGl0cyBuZWNlc3NlcnksIGJlY2F1c2UgaWYgaXQgd2FzbnQgZm9yIHRoZSBmb29kIHlvdSB3b3VsZCBoYXZlIG5vIHVyZ2VuY3kgYW5kIGJ5IHJlc3VsdCB0aGUgYmF0dGxlcyB3b3VsZCBiZSBtdWNoIHNsb3dlci4uIApJbnRlcmVzdGluZ2x5LCBodW1pZGl0eSBpcyBhIGJpdCBlYXNpZXIgKGFuZCBtb3JlIGFjY3VyYXRlKSB0aGFuIG9uZSBtaWdodCB0aGluay4gVGhlIGNvbnN1bWVyIGxldmVsIHN0dWZmIChhIHBvbHltZXIgdGhhdCBjaGFuZ2VzIGxlbmd0aCBiYXNlZCBvbiB1cHRha2Ugb2YgbW9pc3R1cmUpIGlzIHByZXR0eSBzbG9wcHksIGJ1dCBzbGluZyBwc3ljaHJvbWV0cnkgKG9yIHVzaW5nIHRoZSBlcXVpdmFsZW50IGRyeS93ZXQgYnVsYiB0aGVybW9tZXRlciBjb21iaW5hdGlvbiB3aGVyZSB0aGUgc2xpbmcgaXMgcmVwbGFjZWQgd2l0aCBhIGZhbiBibG93aW5nIGFpciBhY3Jvc3MgdGhlIHdldCBidWxiKSBpbiBjb25qdW5jdGlvbiB3aXRoIHRhYmxlcyBpcyBtdWNoIG1vcmUgYWNjdXJhdGUgdGhhbiBkaWFsIHR5cGUgaHlncm9tZXRlcnMuCkxpbmUgaXMgdGhpcyAgIHRoZSByZWFzb24geW91IHRoaW5rIHRoZSBFVSBoYXMgYSBtYWQgY293IHByb2JsZW0gaXMgYmVjYXVzZSB0aGV5IERFQUxUIHdpdGggdGhlIHByb2JsZW0uIApPdHRvIFdhcm1iaWVyIGRpZWQgZGF5cyBhZnRlciBOb3J0aCBLb3JlYSBzZW50IGhpbSBob21lIHRvIE9oaW8uIE5vdyBQcmVzaWRlbnQgVHJ1bXAgc2F5cyBoZSBhY2NlcHRzIEtpbSBKb25nIFVuJ3MgYWNjb3VudDogRWRpdG9yaWFsIEJvYXJkIFJvdW5kdGFibGUgT3R0byBXYXJtYmllciBkaWVkIGRheXMgYWZ0ZXIgTm9ydGggS29yZWEgc2VudCBoaW0gaG9tZSB0byBPaGlvLiAKUmVkZCB6ZXBwZWxpbiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCkF0IHRoZSBKYW51YXJ5IG1lZXRpbmcgb2YgdGhlIEludGVybmF0aW9uYWwgRXhlY3V0aXZlIFJlc291cmNlcyBHcm91cCAoSUVSRykgQm9zdG9uIENoYXB0ZXIsIHRoZSBmb2N1cyB3YXMgb24gM0QgcHJpbnRpbmcsIHRvdXRlZCBhcyBhbiBlbmFibGluZyBwbGF0Zm9ybSBmb3IgYXBwbGljYXRpb25zIHJhbmdpbmcgZnJvbSBwZXJzb25hbGl6ZWQgbWVkaWNpbmUgdG8gcGVyc29uYWwgZHJvbmVzLiAzRCBwcmludGluZyB3aWxsIGdyb3cgdG8gYW4gJDguNCBiaWxsaW9uIG1hcmtldCBpbiAyMDI1IGluIGN1cnJlbnQgYXBwbGljYXRpb25zIGxpa2UgcHJvdG90eXBpbmcsIG1vbGRzLCBhbmQgdG9vbGluZywgYXMgd2VsbCBhcyBwcm9kdWN0aW9uIHBhcnRzIGluIGFlcm9zcGFjZSwgYXV0b21vdGl2ZSwgbWVkaWNhbCwgY29uc3VtZXIgZ29vZHMsIGFuZCBlbGVjdHJvbmljcy4gCkknbSBmYXNjaW5hdGVkIGJ5IHRoZSBjb21tZW50cyBmcm9tIFJlZGRpdG9ycyBpbiBvdGhlciBjb3VudGllcyBhYm91dCB0aGVpciBtZWRpY2FsIGV4cGVyaWVuY2VzIGFuZCBob3cgbGl0dGxlIHRoZXkgaGF2ZSB0byBwYXkgZm9yIHRoZSBzZXJ2aWNlcy4gSGVhbHRoIGNhcmUgaW4gQW1lcmljYSBpcyBmdWNrZWQgdXAuIEkgdGhpbmsgd2Ugc2hvdWxkIGFsbCBiZSB3aWxsaW5nIHRvIGxvb2sgYXQgYW55IHR5cGUgb2YgYWx0ZXJuYXRpdmUgbWVhbnMgdG8gcHJvdmlkZSBoZWFsdGggY2FyZSB0byBhbGwgQW1lcmljYW5zLiAKVGhpcyBjb250aW51b3VzIHBhc3NpdmUgbW90aW9uIG9yIGZsZXhpb24gZGlzdHJhY3Rpb24gdGVjaG5pcXVlIGluY29ycG9yYXRlcyB0aGUgdXNlIG9mIGFuIGFydGljdWxhdGVkIGJlbmNoIHVwb24gd2hpY2ggdGhlIHBhdGllbnQgbGllcyBmYWNlIGRvd24uCk1BSiA6IENldCBhcnRpY2xlIHRyYWl0YW50IG9jY2FzaW9ubmVsbGVtZW50IGQndW4gdGV4dGUgc3VyIGxlICJmbHV4IGluc3RpbmN0aWYiLCB1bmUgdGVjaG5pcXVlIGRlIGNvbnRlbnRpb24gZGVzIG1lbnRydWVzLCBtJ2EgdmFsdSB1bmUgYXR0YXF1ZSBldCBkZXMgcmVtYXJxdWVzIGFjZXJiZXMgZCd1bmUgamV1bmUgY29ubmUgKGNpIGRlc3N1cykgZXQgZGUgc2VzIHRvdXRvdXMgYWRtaXJhdGV1cnMuIENhIGZlcmFpdCB1bmUgY29ub21pZSBkZSB0YW1wYXggY2VydGVzIG1haXMgY2EgbmUgdmEgcGFzIGVtcGNoZXIgbGVzIHJzaWR1cyBkZSBwaWx1bGVzIGNvbnRyYWNlcHRpdmVzIGRlIHBvbGx1ZXIgbGEgZmxvdHRlICFFdCBiaWVuIGplIHBlcnNpc3RlIGV0IHNpZ25lIDogRXN0IGNlIHF1ZSBsZXMgZmVtbWVzIHMnb2NjdXBlbnQgZGUgbm9zIHByb2JsbWVzIGRlIHJ0ZW50aW9uIChwcm9zdGF0ZSkuIE5vbiBhIG5lIGxlcyBjb25jZXJuZSBwYXMgZXQgZWxsZXMgb250IHJhaXNvbi4gCldoZW4gd2F0Y2hpbmcgVFYgcHJvZ3JhbXMsIG9yIG1vdmllcywgeW91J2xsIGNvbWUgYWNyb3NzIHNjZW5lcyB3aGVyZWluIHBlb3BsZSBhcmUgcGxheWluZyBwb2tlciwgbW9yZSBvZnRlbiB0aGFuIG5vdCwgVGV4YXMgaG9sZCAgIGVtLiBUaGUgc2FpZCBnYW1lIGxvb2tzIGFic29sdXRlbHkgY29vbCwgYW5kLCBpZiB5b3UgaGF2ZSBubyBleHBlcmllbmNlIHBsYXlpbmcgaXQsIHlvdSBtYXkgdGhpbmsgdGhhdCBmb2xsb3dpbmcgdGhlIHN0cmF0ZWdpZXMgeW91IG9ic2VydmVkIGZyb20gdGhlIHByb2dyYW0gb3IgdGhlIG1vdmllIHdpbGwgbWFrZSB5b3Ugd2luIGF0IEhvbGRlbS4gCkZyaWdnaW4gaGlzIGxvc3MhIFlvdSdyZSBiZWF1dGlmdWwgYW5kIEknbSBzdXJlIHlvdSBoYXZlIHN3ZWV0IHNvdWwuIApZb3UgaGF2ZSBmYW50YXN0aWMgZXllcyBhbmQgeW91IGxvb2sgcmVhbGx5IG5pY2UgZXZlbiB3aXRob3V0IG1ha2V1cC4gCkkgd291bGQgYWxzbyBnZXQgYSB0aGlyZCBhc2ggYW5kIHdpeiwgY3V0dGluZyB0aGUgdHdvIG9ncmVzIGZvciB0aG9zZSBzcG90cy4gQXNoIGlzIGp1c3Qgb2JqZWN0aXZlbHkgYmV0dGVyIGFuZCB3aXogZG9lcyBjb21lIGluIGhhbmR5IGJvdGggZm9yIHRoZSBib2R5IGFuZCB0aGUgZWZmZWN0LgpVc3VhbGx5IHlvdSBqdXN0IG5lZWQgdG8gZmluZCB0aGUgbmFtZXMgb2YgdGhlIG1vZGVscywgYnV0IGlmIHlvdSB0eXBlIGluIHNvbWV0aGluZyBsaWtlIE1ha2Vtb2RlbCBLb3JlYW4gcG9ybiBvciBNYWtlbW9kZWwgdHVtYmxyIHlvdSBmaW5kIHN0dWZmLi4gCkluIHJlc3BvbnNlIHRvIGFub3RoZXIgcXVlc3Rpb24sIGFib3V0IHRoZSByaWdodCB0byBkaWUgZGViYXRlLCBNYXJzaCBzYWlkIGhlIGhhcyBubyBvcGluaW9uLiBBbGwgaGUgd2lsbCBzYXkgaXM6ICJJIHVuZGVyc3RhbmQgdGhlIGRlc3BhaXIgYW5kIGhvdyBhIHBlcnNvbiB3b3VsZCByZWFjaCB0aGF0IHBvaW50LiIgQnV0IGhlIGlzIGNvIHdyaXRpbmcgYSBib29rIHRoYXQgaGUgaG9wZXMgd2lsbCBpbnNwaXJlIGhvcGUgYW5kIHByb3ZpZGUgaW5mb3JtYXRpb24gdG8gdmljdGltcyBvZiBsb2NrZWQgaW4gc3luZHJvbWUgYW5kIHRoZWlyIGZhbWlsaWVzLi4gCiJNZSBhbmQgbXkgZGFkIHN0aWxsIGdldCBwaG9uZSBjYWxscyBmcm9tIGNoYXJpdGllcyBhbmQgcGxheWVycyBhbmQgZGVhbGVycyBqdXN0IGFib3V0IGV2ZXJ5IGRheSwiIGhlIHNhaWQuIFBhcnQgb2YgdGhlIHByb3Bvc2VkIGNvbXByb21pc2UgYnkgdGhlIHN0YXRlIEdhbWluZyBDb250cm9sIEJvYXJkIHdvdWxkIGFsbG93IGV2ZW50cyAiYXQgbmVhcmx5IGFueSBsb2NhdGlvbiBpbiB0aGUgc3RhdGUsIGluY2x1ZGluZyBiYXJzLCBjaHVyY2hlcywgc2Nob29scywgZnJhdGVybmFsIGhhbGxzLCBjb21tdW5pdHkgY2VudGVycywgb3Igb3RoZXIgbG9jYXRpb25zIiBhbmQgYWxsb3cgY2hhcml0aWVzIG9yIGEgbGljZW5zZWQgc3VwcGxpZXIgdG8gcnVuIGV2ZW50cy4KRWR1Y2F0ZSBtZSBpbnN0ZWFkIG9mIGluc3VsdGluZyBtZS4gVGhhdCB0aGUgZ29hbCByaWdodD8gTm90IHRvIGFsaWVuYXRlIHBlb3BsZSBidXQgdG8gYnJpbmcgdGhlbSB0byBhIHBvaW50IG9mIHVuZGVyc3RhbmRpbmcgYW5kIGhvcGVmdWxseSwgZXZlbnR1YWxseSwgYWNjZXB0YW5jZS4gClRoZXJlIGEgd2luZSBhbmQgY2hvY29sYXRlIGZhaXIgbmV4dCB3ZWVrZW5kIGFuZCBJIHNlbnQgaXQgdG8gbXkgaHVzYmFuZCBhbGwgZXhjaXRlZCBsaWtlIGhleSwgdGhpcyBsb29rcyBsaWtlIHNvbWV0aGluZyBmdW4gdG8gZG8hIEFuZCB0aGVuIEkgcmV2aWV3ZWQgdGhlIHZlbmRvciBsaXN0LiBZZWEgdGhlcmUgcGxlbnR5IG9mIGxlZ2l0IHZlbmRvcnMsIGJ1dCBhZnRlciBJIGdvdCB0byBteSA4dGggTUxNIGJlZm9yZSBJIHBhc3NlZCB0aGUgIk0gb24gdGhlIGFscGhhYmV0aWNhbCB2ZW5kb3JzIGxpc3QsIEkganVzdCBzZW50IGhpbSBhIGRlamVjdGVkICJuZXZlcm1pbmQuIExldHMgdGFrZSB0aGUga2lkcyB0byB0aGUgcGFyayBpbnN0ZWFkIi4KSFlQRVJMT0NBTDogSSBkb24ndCBydW4gcGhvdG9zIG9mIHN0cmluZ2VycyBvZiBjcmFwcGllLCBkZWFkIGRlZXIgYW5kIHJ1dGFiYWdhcyBzaGFwZWQgbGlrZSBSaWNoYXJkIE5peG9uICAgbW9zdGx5IGJlY2F1c2Ugbm9ib2R5IHNlbmRzIGFueSBpbi4gV2hlbiBJIHdhcyBzcG9ydHMgZWRpdG9yIG9mIHRoZSBCdWVuYSBWaXN0YSwgVmEuLCBOZXdzLCBJIHJlZ3VsYXJseSBoYXVsZWQgbXkgTmlra29ybWF0IG91dCB0byB0aGUgcGFya2luZyBsb3QgdG8gc25hcCB0aGUgaGF1bCBpbiB0aGUgYmFjayBvZiBhIHBpY2t1cCwgZXZlcnl0aGluZyBmcm9tIGJlYXJzIHRvIG1vbnN0ZXIgZ3JlZW4gYmVhbnMuIApXaGV0aGVyIGl0J3MgSG9sZGVtLCBDcmFwcywgUGFpIEdvdywgQmxhY2tqYWNrLCBPbWFoYSBvciBhbnkgb3RoZXIgZ2FtZSBvdXQgdGhlcmUsIG1vc3Qgb2YgdXMgd2FudCB0aGUgbGF5b3V0cyBmaXJzdC4gClRoZSBwcmVtaWVyIHdvdWxkIGhhdmUgZ290IG1vcmUgc3RhbmRpbmcgT3MgYnV0IHlvdSBjb3VsZCBzZWUgc29tZSBmb2xrcyBnZXR0aW5nIGp1c3QgcGxhaW4gdGlyZWQgb2Ygc3RhbmRpbmcgdXAgYW5kIHNpdHRpbmcgZG93biBldmVyeSBtaW51dGUgYW5kIGEgaGFsZi4KWW91IHdvdWxkbid0IHVzZSBhbnkgc3Ryb25nIHNvYXAsIHlvdSB3b3VsZCB3YXNoIGluZnJlcXVlbnRseSwgeW91IHdvdWxkIHNxdWVlemUgeW91ciBoYWlyIGRyeSBub3QgcnVmZmxlLCB5b3Ugd291bGQgbm90IHB1dCBpdCBpbiB0aGUgZHJ5ZXIgb3IgcHV0IHN0cm9uZyBoZWF0IG9uIGl0LiAKUml2ZXIgYmV0cyBhcmUgbW9zdCBvZiB0aGUgdGltZSB2YWx1ZSBiZXRzLiBUaGF0IGVub3VnaCB0byBiZSBub3QgcmV0YXJkZWQgSSBzYXkuIApTbyBhZnRlciB3ZSBjaGl0IGNoYXR0ZWQgZm9yIGF3aGlsZSBpdCB3YXMgdGltZSB0byBnZXQgb3VyIGdhbWUgb24uIFdlIGVuZGVkIHVwIHB1cmNoYXNpbmcgdHdvIHRhYmxlcyBiZWNhdXNlIG9uZSB3b3VsZG4ndCBiZSBlbm91Z2ggZm9yIGV2ZXJ5b25lIHRoYXQgY29tZXMgb3Zlci4gCkkgaGF2ZSBhIDE5ODUgTWVyY2VkZXMgQmVueiwgMTkwRCBPTSA2MDIuOTExLCBJIGdldCA0NSA1MG1wZywgY2FuIHJ1biBncmVhc2UgKGFmdGVyIG1hcmtldCBmaWx0ZXIgdXBncmFkZSBhbmQgc2Vjb25kIGdyZWFzZSB0YW5rKSwgYW5kIEkgZ290IHRoZSBiYWJlIGZvciAxayBVU0QuIFRoZSBib2R5IGxvb2tzIGxpa2UgdHJhc2gsIGJ1dCBJIGdldCB0byBkcml2ZSBhIGRvcGUgYXNzIGRpZXNlbCA1c3BlZWQgZm9yIGEgZnJhY3Rpb24gb2YgdGhlIGNvc3Qgb2YgYW55IG5ldyBjYXIgd2l0aCB0aGUgYWRkZWQgYm9udXMgb2YgaGF2aW5nIHZlcnkgbG93IGNhcmJvbiBmb290cHJpbnQuLiAKVGhlIFNlbmF0ZSBiaWxsIChTQiA4KSB3b3VsZCBjaGFuZ2UgYWxsIHRoYXQuIEl0IHdvdWxkIGFsbG93IHNsb3QgbWFjaGluZXMgYXQgZG9nIGFuZCBob3JzZSB0cmFja3MgYW5kIHBva2VyIHJvb21zIGluIER1dmFsIGFuZCBzZXZlbiBvdGhlciBjb3VudGllcyBvdXRzaWRlIG9mIFNvdXRoIEZsb3JpZGEgd2hlcmUgbG9jYWwgdm90ZXJzIGhhdmUgYXBwcm92ZWQgcmVmZXJlbmR1bXMuIApOb3csIHlvdSBjYW4ga2VlcCB0aGVzZSBzaHVmZmxpbmcgc3RhcnMgYmVzaWRlIHlvdSBhbmQga2VlcCB0aGUgZ2FtZSBpbnRvIHlvdXIgaGFuZHMgd2l0aCB5b3VyIGJlc3QgZnJpZW5kLCB0aGUgNCBkZWNrIGF1dG9tYXRpYyBjYXJkIHNodWZmbGVyLiAKV2l0aCB0aGlzIHBhdHRlcm4sIHlvdSdsbCBoYXZlIGh5cG90aHlyb2lkIHN5bXB0b21zIGFuZCBhIFRTSCBiZWxvdyB0aGUgZnVuY3Rpb25hbCByYW5nZSAoMS44ICAgMy4wKSBidXQgd2l0aGluIHRoZSBzdGFuZGFyZCByYW5nZSAoMC41ICAgNS4wKS4gVGhlIFQ0IHdpbGwgYmUgbG93IGluIHRoZSBmdW5jdGlvbmFsIHJhbmdlIChhbmQgcG9zc2libHkgdGhlIGxhYiByYW5nZSB0b28pLgoiV2UgaGF2ZSBubyA1RyBwaG9uZXMgeWV0OyB3ZSBoYXZlIHNlZW4gcHJvdG90eXBlcyBvbiB0aGUgc2hvd3Jvb20gZmxvb3IsIGJ1dCBpZiB0aGVyZSBpcyBubyA1RyBwaG9uZSwgSSBkb24ndCB1bmRlcnN0YW5kIGhvdyBBVCBjYW4gYmUgcnVubmluZyBhIDVHIG5ldHdvcmsuIi4gClRoYXQgdGhlIHJ1bGUgdGhleSBhcmUgcHJvcG9zaW5nIG5vdywgYnV0IGl0IHdhcyBub3QgdGhlIHJ1bGUgdGhhdCB3YXMgaW4gcGxhY2UgaW4gc28gSSBkb24gdGhpbmsgdGhpcyBpcyBhIHZhbGlkIHBvaW50LgpUaGUgdHJ1bHkgY3JhenkgcGFydCBpcyB0aGF0IHRoaXMgd2Fzbid0IENHSTogdGhlIFdhY2hvd3NraSdzIHNwZW50IHR3byB3aG9sZSBkYXlzIGluIFN5ZG5leSB0cnlpbmcgdG8gaHVudCBkb3duIGFuZCBjYXN0IHJlYWwgaWRlbnRpY2FsIHR3aW5zIGp1c3QgZm9yIHRoaXMgc2NlbmUuIApNb3JlIHRoYW4gdGhhdCwgdGhlIGhlYXQgZnJvbSB0aGUgY29tcHJlc3Mgd2lsbCBkaWxhdGUgdGhlIGJsb29kIHZlc3NlbHMgYW5kIGNhcGlsbGFyaWVzLCB0aGVyZWJ5IGltcHJvdmluZyBjaXJjdWxhdGlvbiBpbiB0aGUgYXJlYS4gV2hlbiBjaXJjdWxhdGlvbiBpbXByb3ZlcywgdGhlIGJydWlzZSB3aWxsIGhlYWwgZmFzdGVyIGFuZCB0aGUgZGlzY29sb3JhdGlvbiB3aWxsIGZhZGUgYXdheSBmYXN0ZXIsIGFzIHdlbGwuIE1hc3NhZ2luZyBhbHNvIHNlZW1zIHRvIGZhY2lsaXRhdGUgdGhlIHNwZWVkeSBoZWFsaW5nIG9mIGJydWlzZXMuIApUaGUgbm90ZSBpbiBOYXR1cmUgc2F5cyAicC43MSIsIGJ1dCBhY3R1YWxseSBhcHBlYXJzIG9uIHBhZ2UgNDIuIFBhZ2UgNzAgYmVnaW5zIHRoZSBpbnRlcmVzdGluZyBzZWNvbmQgaGFsZiBvZiBhIGNoYXB0ZXIgb24gIkNvbXBhcmlzb24gb2YgdGhlIE1lbnRhbCBQb3dlcnMgb2YgTWFuIGFuZCB0aGUgTG93ZXIgQW5pbWFscyB0aGUgZGlmZmVyZW5jZSBpbiBtZW50YWwgcG93ZXIgYmV0d2VlbiB0aGUgaGlnaGVzdCBhcGUgYW5kIHRoZSBsb3dlc3Qgc2F2YWdlLCBpbW1lbnNlIiB3aGljaCBjb3VsZCBoYXZlIGxlZCB0byB0aGUgY29uZnVzaW9uLiAKSSByZWFsbHkgc2hvdWxkIGhhdmUgYmxvZ2dlZCB5ZXN0ZXJkYXksIGJ1dCBTdW5kYXkgd2FzIGhvcnJpYmx5IHN0cmVzc2Z1bC4gCkZhbGxhY3kgb2YgVHJhZGl0aW9uYWwgT2RkcyBUaGlua2luZwpTaGUncyBoYWQgbG90cyBvZiBjb21wYW55LiBBIHJlY2VudCBzdHVkeSBzdW1tYXJpemVkIGluIFRoZSBBdGxhbnRpYyBzaG93cyB0aGF0IGEgbWFqb3JpdHkgb2YgdGhlIHdvbWVuIGFtb25nIGNvaGFiaXRpbmcgY291cGxlcyBzYXkgdGhhdCB0aGV5J3JlICJhbG1vc3QgY2VydGFpbiIgdGhlaXIgcmVsYXRpb25zaGlwIHdpdGggdGhlIG1hbiBpcyBwZXJtYW5lbnQsIG5vdHdpdGhzdGFuZGluZyB0aGUgY29uc3BpY3VvdXMgYWJzZW5jZSBvZiBhIG1hcnJpYWdlIHByb3Bvc2FsIGZyb20gdGhlIG1hbi4gCk5pZ2h0Rm93bE1lZGlhICAxNjEgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ28KSWYgeW91IHdhbnQgZGF0YSB0byBwbGF5IHdpdGggdGhlIE5DQkkgR0VPIHdlYnNpdGUgaGFzIGEgdmFzdCBhcmNoaXZlIG9mIHB1Ymxpc2hlZCBzZXF1ZW5jaW5nIGRhdGEuIEZpbmQgYW55IHJlbGF0aXZlbHkgbW9kZXJuIHNlcXVlbmNpbmcgcGFwZXIgd2l0aCBtZXRhZ2Vub21pY3MsIGFuZCB0aGVpciByYXcgZGF0YSB3aWxsIG1vc3QgbGlrZWx5IGJlIGRlcG9zaXRlZCBoZXJlLgpBbG1vc3QgYWxsIG9mIHRoYXQgZ29lcyB0byBiYWNrcGFja2luZyAgSSB0cnkgdG8gc2F2ZSBhYm91dCBoYWxmIG9mIHRoYXQgdGltZSBmb3Igb3V0IG9mIHN0YXRlIHRyaXBzLiAKVGhlIHByb2JsZW0gYmVmb3JlIHRoZSBiYWQgZ3V5cyBkby4gCkl0IGhhcyBhIG1vZGVybiBsYXlvdXQvZGVzaWduIGFuZCB1cGRhdGVkIHZvY2FidWxhcnkgYW5kIHdvcmtib29rcy4gCkJ1dCBpZiB5b3UgdGhpbmsgZ2V0dGluZyB0YXR0b29zIHVuZGVyYWdlIGlzIGEgZ29vZCBpZGVhLCBHYWdhIG1pZ2h0IGhhdmUgYSBkaWZmZXJlbnQgb3Bpbmlvbi4gQXMgc2hlIGdyZXcgb2xkZXIgc2hlIGNhbWUgdG8gaGF0ZSBpdCBhbmQgc2hlIGdvdCBhIGh1Z2UgdGF0dG9vIG9mIHJvc2VzIG9uIGhlciBoaXAgYW5kIGxvd2VyIGJhY2sgaW4gb3JkZXIgdG8gZGlzZ3Vpc2UgaXQuIApNeXRoIE5vLiAyOiBPbmxpbmUgcG9rZXIgd2lucyB5b3UgbW9yZSBjYXNoIHRoYW4gbGl2ZSBwb2tlci4KWW91IGRvaW5nIGEgZ3JlYXQgam9iLCBoYW5naW5nIGluIHRoZXJlIHRocm91Z2ggdGhlIHRvdWdoZXN0IGRheXMsIG1ha2luZyB0aGUgYmVzdCB3aXRoIHdoYXQgeW91IGdpdmVuLiBZb3UganVzdCBhd2Vzb21lLiAKU3BlYWtpbmcgd2l0aCBDUDI0LCBBaWtpbnMgbm90ZWQgdGhhdCBub25lIG9mIHRoZSB3b3JrIHRoYXQgaGFzIHRvIGJlIGRvbmUgc28gZmFyICJoYXMgdG8gYmUgdW5kb25lLiIKQ29uZ3JhdHVsYXRpb25zISBUaGUgZmFjdCB0aGF0IHlvdSBhcmUgYWJlZ2lubmVyIHBva2VyIHBsYXllciBtZWFucyB5b3UgYXJlIGluIGZvciBhbiBleGNpdGluZyBuZXcgZGlzY292ZXJ5LiAKTXkgdm9pY2UgbWFpbCBzYXlzIHRoYXQgdGhleSB3b3VsZCB0YWtlIHRoZSBuZXh0IGNvdXJzZSBvZiBhY3Rpb24gd2hpY2ggd291bGQgYmUiY2FsbGluZyB0aGUgbW9ydGdhZ2Ugbm90ZSBkdWUiIGJlY2F1c2UgdGhleSBoYXZlIGEgZG9jdW1lbnQgc2lnbmVkIHN0YXRpbmcgdGhhdCBJIHdvdWxkICJoZWxwIG91dCBpZiB3ZSBuZWVkIHNvbWUgZG9jdW1lbnRhdGlvbiBmcm9tIHlvdW9yIHNvbWUgYXNzaXN0YW5jZSBzZWxsaW5nIHRoZSBsb2FuIi4uIApUaGUgY2FzZSBpcyBtYWRlIGZyb20gYWx1bWludW0gYW5kIHByb3ZpZGVzIGEgc2hpbnkgZWRnZSBhbmQgYm90dG9tIGNhc2luZy4uIAoyKSBFbW1hOiAxNTE1IDE2MTUsIDEwMEUsIHRoZSBmaXJzdCB0aW1lIGluIHRoZSBwYXN0IHNldmVuIG1vbnRocy4gClBlb3BsZSBmZWVsaW5nIG92ZXJ3aGVsbWVkIGJ5dGhlaXIgYXJyYXkgb2YgY29ubmVjdGVkIGRldmljZXNjYW4gaW52ZXN0IHVwIHRvICQ3MDAgb24gYW5vdGhlciBkZXZpY2UgbWVhbnQgdG8gZmVlbCBtb3JlIGFydGlzYW5hbC4KRWFybHkgaW4gdGhlIGNvbnZlcnNhdGlvbiwgSmltIFRyZWxpdmluZyBvZiBCb3N0b24gUGl6emEgbWVudGlvbmVkIHRoYXQgdGhlIG1hbGUgZmVtYWxlIHJhdGlvIG9mIHRoZSBlbnRyZXByZW5ldXJzIGhlIGludmVzdGVkIGluIHdhcyA3MCUgOiA0MCUuIFdoZW4gTGF2YSBMaWZlIGNvIGZvdW5kZXIgQnJ1Y2UgQ3JveG9uIGNhbGxlZCBoaW0gb24gaXQsIFRyZWxpdmluZyBzaG90IGJhY2s6IG5ldmVyIHdhcyBnb29kIHdpdGggbnVtYmVycy4gSSBqdXN0IGhhdmUgYSBsb3Qgb2YgdGhlbS4gV2hlbiBhc2tlZCBpZiBoZSB3YXMgZ29pbmcgdG8gd3JpdGUgYSBib29rLCBhcyB0aGUgb3RoZXIgZHJhZ29ucyBoYXZlLCBDcm94b24gc2FpZCBpdCBkaWRuIGludGVyZXN0IGhpbS4gU2FpZCBUcmVsaXZpbmcsIHdobyBpcyA3MiwgdG9vIHlvdW5nIHRvIHdyaXRlIGEgZ29kZGFtbiBib29rLiBXYWl0IHRpbGwgeW91IGdldCBzb21lIGV4cGVyaWVuY2UuCkxpbWUgRm9vdCBTY3J1Yi4gCihGdWxsIEFuc3dlcikuIApHdXkgTGFsaWJlcnQgYWZmaXJtZSBxdWUgcGx1c2lldXJzIGdyb3VwZXMgZGUgcGFydG91dCB2ZXVsZW50IHBhcnRpY2lwZXIgc2VzIGRpZmYgcHJvamV0cy4gTWFpcyBjZWxhIG5lIHMgcXUgZGUgdHIgZ3JhbmRzIGFjdGV1cnMsIGNvbW1lIGxlcyBmb25kcywgbGVzIGluc3RpdHV0aW9ucyBldCBsZXMgcGFydGVuYWlyZXMgc3RyYXQgY2FyIGlsIGZhdXQgZGVzIGludmVzdGlzc2VtZW50cyBtYXNzaWZzLiAKVGhlIHJhdGlvbmFsZSBiZWhpbmQgbWFscHJhY3RpY2UgbGF3c3VpdHMgaXMgdG8gYWxsb3cgYSBwZXJzb24gd2hvJ3Mgc3VmZmVyZWQgYW4gaW5qdXJ5IHRvIHJlY292ZXIgbW9uZXRhcnkgZGFtYWdlcyBmb3IgcGh5c2ljYWwgaW5qdXJ5LCBsb3N0IHdvcmsgb3IgZGFpbHkgbGl2aW5nIHNraWxscywgYW5kIGluIHNvbWUgY2FzZXMsIGVtb3Rpb25hbCBkaXN0cmVzcy4gCkVnb25jYXN0ZWVsICAwIHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvCkknbSBzcGVjaWZpY2FsbHkgdGFsa2luZyBhYm91dCB0aGUgcGxhY2VzIEkndmUgc2VlbiB3aGVyZSB0aGUgY29hY2ggd3JpdGVzIGEgc2luZ2xlIHN0cmVuZ3RoIHByb2dyYW0gZm9yIGFuIGVudGlyZSBneW0sIGRlc3BpdGUgYSBkb3plbiBvZiB0aGVpciBjbGllbnRzIG5vdCBuZWVkaW5nIGhhbGYgb2YgcHJvZ3JhbS4KSSBsb3ZlIGNhdHMsIG1pbmUgaXMgYSBjdWRkbGUgYnVnLiBUaGUgc3dlZXRlc3QgbW9zdCBnZW50bGUgY2F0IHRoYXQgSSBoYXZlIGV2ZXIga25vd24uIApLaXNlbGJhY2ggcG9pbnRlZCB0byB0aGUgbm90b3Jpb3VzIGNhc2Ugb2Ygc2VyaWFsIGtpbGxlciBSb2JlcnQgUGlja3RvbiBhcyBhbiBleGFtcGxlIG9mIHRoZSB2aW9sZW5jZSBleHBlcmllbmNlZCBieSB3b21lbiBpbnZvbHZlZCBpbiB0aGUgc2V4IHRyYWRlIG9uIHRoZSBzdHJlZXRzIG9mIFZhbmNvdXZlci4KQnV0IHdoZW4gc29tZXRoaW5nIGZhdm9ycyB3b21lbiB0aGV5IHdvbid0IHNheSBhbnl0aGluZy4gCllvdSBtdXN0IGNvbnN1bHQgeW91ciBwaHlzaWNpYW4gdG8ga25vdyBmb3Igc3VyZSB3aGF0IGlzIGNhdXNpbmcgeW91ciBhbGxlcmd5IGFuZCBob3cgaXQgY2FuIGJlIGF2b2lkZWQuIApTbyBJIHN1c3BlY3QgdGhhdCBhcyBsb25nIGFzIHRoZSBqb2ludCBhbmQgbXVzY2xlIGlzIHByZXBhcmVkIGZvciB0aGUgaGVhdnkgbG9hZCBpbiBzb21lIHdheSwgYW5kIHRoZSBib2R5IHVuZGVyc3RhbmRzIHRoZSByYW5nZSBvZiBtb3Rpb24gaXQgaXMgYWJvdXQgdG8gZW50ZXIsIGl0IGRvZXNuIHJlYWxseSBtYXR0ZXIuIDkgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnb1doaWxlIEkgd291bGRuIHB1dCBtdWNoIHZhbHVlIGluIGJvb2tzIEkgc3RpbGwgdGhpbmsgdGhlcmUgYSBsb3Qgb2YgdXNlZnVsIHJlYWRpbmcgaW4gdGhlIG9sZCAyKzIgYXJjaGl2ZXMuIAonJ0luIGhpcyBmaXJzdCBwaG9uZSBjYWxsIHRvIHBvbGljZSwgaGUgd2FzIHRvbGQgdGhhdCBiZWNhdXNlIHRoZSBldmVudHMgb2NjdXJyZWQgMzAgeWVhcnMgYWdvIHRoZXJlIHdhcyBub3RoaW5nIHRoZXkgY291bGQgZG8uIEkgcmFuZyB0aGUgc2V4IGNyaW1lcyBzcXVhZCBpbiBTeWRuZXkgdGhlIG5leHQgZGF5IGFuZCBsb2RnZWQgYSBjb21wbGFpbnQuIFN0cmlrZSBGb3JjZSBHZW9yZ2lhbmEgd2FzIGEgcmVzdWx0IG9mIHRoYXQgY29tcGxhaW50LicnU2VwdGVtYmVyIDE5IDIwMTQgICAxMDozMFBNLiAKOTAlIHN1cmUgSSB3YXMgZ29pbmcgdG8gdGFrZSBkb3duIHRoZSBwb3QuIApNeSBjbyBvcCBidXlzIGZyb20gYSBwbGFjZSB0aGF0IG5vdCBvbmx5IHNlbGxzIHRoZSB0eXBpY2FsIGJlZWYgYW5kIGNoaWNrZW4sIHRoZXkgYWxzbyBzZWxsIHR1cmtleSBuZWNrcywgY2hpY2tlbi9kdWNrIGZlZXQsIGFsbCBzb3J0cyBvZiBiZWVmIGJvbmVzLCBhbmQgb3RoZXIgcmFuZG9tIHRoaW5ncy4gTW9zdGx5IHJhdywgYnV0IG9jY2FzaW9uYWxseSB0aGV5IGhhZCBzbW9rZWQgdHJlYXRzLiBUaGUgb25seSBpc3N1ZSBpcyB5b3UgZG8gaGF2ZSB0byBidXkgImJ1bGsiIGJ1dCBvdXQgb2YgdGhlIHRocmVlIGNvIG9wcyBJIGRlYWx0IHdpdGgsIHRoZSBzaXplcyB3ZXJlIGFsd2F5cyBwcmV0dHkgcmVhc29uYWJsZS4gKGV4YW1wbGU6IGN1cnJlbnQgZ3JvdXAgaGFzIGVpdGhlciA1IG9yIDUwIGxiIGJhZ3MhKQpIYXZpbmcgb25lIEFyYWIgc3RhdGUgZm9yIEFyYWJzIHJlZ2FyZGxlc3Mgb2YgdGhlaXIgY29sb3VyLCByYWNlIG9yIHJlbGlnaW9uIGlzIHRoZSBkcmVhbSBvZiB3aXNlIHBlb3BsZS4gT25lIGRheSB0aGlzIGRyZWFtIG1pZ2h0IGJlIG1hdGVyaWFsaXNlZC4gClRoZXkgYWNjZXB0ZWQgYW4gb2ZmZXIgZnJvbSBKaW0gVHJlbGl2aW5nLCBEYXZpZCBDaGlsdG9uIGFuZCBBcmxlbmUgRGlja2luc29uIGZvciAkMzAwLDAwMCBpbiBleGNoYW5nZSBmb3IgYSAzMCUgc3Rha2UuIApBbmRyb2lkIHg4NiBSZW1peCBPUyBSZW1peCBPUyAuIApVbmRlciB0aGUgR09QIGl0IHdhcyB0aGUgaGFzdGVydCBydWxlLiBOYW1lZCBhZnRlciBhIGZhbW91cyByZXB1YmxpY2FuIHBlZG9waGlsZS4gSXQgc2F5cyBub3RoaW5nIGdldHMgYWRkZWQgYW5kIG5vdGhpbmcgZ2V0cyB2b3RlZCBvbiwgdW5sZXNzIGl0IGhhcyB0aGUgc3VwcG9ydCBvZiB0aGUgIm1ham9yaXR5IG9mIHRoZSBtYWpvcml0eSBwYXJ0eSIuIApDbGllbnRzIHdobyBhcmUgdHlwZSAxIGFyZSBpbnN1bGluIGRlcGVuZGVudDogQXZvaWQgdmlnb3JvdXMgbWFzc2FnZSBoZWF0L2ljZSBhcHBsaWNhdGlvbnMgb3ZlciBzaXRlcyBvZiByZWNlbnQgaW5zdWxpbiBpbmplY3Rpb24gZm9yIDI0IGhvdXJzLiBNYXNzYWdlIHRoZXJhcHkgd2FzIGZvdW5kIHRvIGluY3JlYXNlIGluc3VsaW4gYWJzb3JwdGlvbiBhZG1pbmlzdGVyZWQgYnkgc3ViY3V0YW5lb3VzIGluamVjdGlvbiAoNSw2KS4gVGhlIGluY3JlYXNlZCBhYnNvcnB0aW9uIHByb2R1Y2VkIGJ5IG1hc3NhZ2UgY291bGQgY2F1c2Ugb3IgY29udHJpYnV0ZSB0byBjb21wbGljYXRpb25zIHN1Y2ggYXMgaHlwb2dseWNlbWlhLgpBdCBhZ29yYSBubyBob3V2ZSBuZW5odW1hIG9ic2VydmFvIGRlIFN1cGVybWFuLi4gCk9ubGluZSBQb2tlciBTaG93IEZyZWVyb2xsIEV4cGxhaW5lZCAgNCBJdCdzIG5vdCBsaW1pdGVkIHRvIGp1c3QgcG9rZXIuClN0dWRpZXMgb2YgdGhlIGJlbmVmaXRzIG9mIG1hc3NhZ2UgZGVtb25zdHJhdGUgdGhhdCBpdCBpcyBhbiBlZmZlY3RpdmUgdHJlYXRtZW50IGZvciByZWR1Y2luZyBzdHJlc3MsIHBhaW4gYW5kIG11c2NsZSB0ZW5zaW9uLgpBaC4gdGF4aXMgYXJlIGV4dHJlbWVseSBleHBlbnNpdmUgaWYgeW91IGFyZSBnb2luZyB0byBnbyB0byBvdGhlciBjaXRpZXMuCkluIGEgc3RyYW5nZSwgZnVja2VkIHVwIHdheSwgcGFydCBvZiBtZSBpcyBnbGFkIGhlIHdvbi4gSXQgZGVuaWVkIGhpbSBldmVyeXRoaW5nIGhlIHdhbnRlZC4gQW5kIHRoZSBiZXN0IHBhcnQgaXMgaGlzIGVnbyBmdWNrZWQgaGltIG92ZXIgaWYgaGUgdHJ1bHkgZGlkbiB3YW50IHRoZSBqb2IgaGUgY291bGQgcmVzaWduZWQgb24gZGF5IDEsIGJ1dCBoZSBpbmNhcGFibGUgb2YgdGhhdCBraW5kIG9mIGFkbWlzc2lvbiBvZiBkZWZlYXQuIApBdCBldmVyeSBzdGVwIHdlJ2xsIGJlIGVuc3VyaW5nIHRoYXQgVGhlIFZpY3RvciBQb2tlciBDdXAgaXMgdGhlIFJvbGxzIFJveWNlIG9mIHBva2VyIHRvdXJuYW1lbnRzLiIuIApJdCB3YXMgYnkgYSByaXZlciBuZWFyIGEgYmlrZSB0cmFpbCB3aXRoIGxvdHMgb2Ygc2FuZCBhbmQgbG90cyBvZiB0cmVlcy4gCkkgYWx3YXlzIG1hZGUgaXQgbXkgcG9saWN5IG5vdCB0byB0ZWxsIHBlb3BsZSBob3cgdG8gZmVlbCBhYm91dCB0aGluZ3MsIGFuZCBhc3N1bWUgdGhleSBoYXZlIGEgZ29vZCByZWFzb24gZm9yIGZlZWxpbmcgY2VydGFpbiB3YXlzLiBVbnRpbCBpdCBjYW4gYmUgcHJvdmVuIG90aGVyd2lzZS4gWW91IHByb2JhYmx5IHNob3VsZCB0b28sIHZlcnN1cyBqdXN0IGp1bXBpbmcgdG8gdXAsIHB1c3N5LiAKWWVzLiBUaGVzZSBhcmUgdGhlIGNoaXBzIFt0aGF0IEkga25vdyBvZl0gdGhhdCBoYXZlIG1zZy4gQWxtb3N0IGFsbGZsYXZvcmVkIERvcml0b3MgY29udGFpbiBNU0cuIFNvbWUgY2hlZXRvcyBjb250YWluIG1zZzogQ2hlZXRvcyBGbGFtaW4nIEhvdCBJbmdyZWRpZW50cyB3aXRoIGZyZWUgR2x1dGFtYXRlKE1TRyk6IC4KUHJvZHVjdGlvbiBMaW5lIHNob3VsZCBiZSBrbm93biBhbGwgb3ZlciB0aGUgd29ybGQsIHNhaWQgRm9uc2VjYS4gClBlb3BsZSBkb24ndCBnZXQgImZpbmFuY2lhbCBhbmQgYnVzaW5lc3MgbWFuYWdlbWVudCB0cmFpbmluZyIgdGhleSBnZXQgZGVncmVlcyBpbiBpdC4gQWxzbywgd29ya2VycyBhbHJlYWR5IGNhbiBvd24gdGhlIG1lYW5zIG9mIHByb2R1Y3QuIApJbiBteSBkaXZvcmNlLCBpdCBqdXN0IHdhc24gaGFwcGVuaW5nLiBNeSBleCB3b3VsZCBmaWdodCBtZSBvbiBhbnl0aGluZyBhbmQgZXZlcnl0aGluZyBwb3NzaWJsZSwgYW5kIGdvaW5nIHRocm91Z2ggdGhlIGF0dG9ybmV5cyBhY3R1YWxseSBnb3QgdGhpbmdzIHJlc29sdmVkIG1vcmUgcXVpY2tseS4gTXkgZXggd291bGQgcmVhbGx5IG9ubHkgbGlzdGVuIHRvIHdoYXQgaGlzIGF0dG9ybmV5IHNhaWQsIHNvIHRoZSBzb29uZXIgSSBnb3QgdGhlIGlzc3VlIHRvIHRoYXQgZ3V5LCB0aGUgc29vbmVyIHNhaWQgaXNzdWUgd2FzIHJlc29sdmVkLiBJdCBkaWRuIG1hdHRlciBpZiBJIHNhaWQgYm9vIGFuZCB0aGVuIG15IGF0dG9ybmV5IHNhaWQgYm9vLCBoaXMgYXR0b3JuZXkgd2FzIHRoZSBvbmUgdGhhdCBoYWQgdG8gc2F5IGl0IGZvciBoaW0gdG8gYWN0dWFsbHkgYWNjZXB0ICJib28iLCBrd2ltPwpBZnRlciB5ZWFycyBvZiB3b3JrIGluIHRoZSBnYW1lIG9mIEhvbGx5d29vZCwgQ3JhenkgUmljaCBBc2lhbnMgaXMgcG9pc2VkIHRvIHdpbi4uIApTaGUgaGFzIGJlZW4gc29iZXIgZm9yIDcgeWVhcnMgYW5kIGhhcyBnb3R0ZW4gYmV0dGVyLCBidXQgSSBjYW4ndCBoZWxwIGxvYXRoaW5nIHRoZSBwZXJzb24gc2hlIGlzLiBJIGtub3cgSSBuZWVkIHRvIGZvcmdpdmUgaGVyIGFuZCBsZXQgaXQgYmUgYnV0IEkgZmVlbCBsaWtlIEkgY2FuJ3QuIFRoZXJlIGlzIGEgbG90IG1vcmUgdG8gdGhlIHN0b3J5LCB0b28gbXVjaCB0byB0eXBlIGJ1dCB0aGF0IGlzIHRoZSBqaXN0LiAKIllvdSB3YW50IHRvIGRlYmF0ZSBmb3VuZGF0aW9ucyBhbmQgY2hhcml0aWVzPyIgT2JhbWEgc2FpZCwgY29tcGFyaW5nIHRoZSBUcnVtcCBGb3VuZGF0aW9uIHRvIHRoZSBDbGludG9uIEZvdW5kYXRpb24sIGFzc29jaWF0ZWQgd2l0aCBEZW1vY3JhdCBIaWxsYXJ5IENsaW50b24gYW5kIGhlciBmYW1pbHkuIApDcmFja2VkIFdpbmRvd3MgNyBVbHRpbWF0ZQpEZWFyIERvcm90ZXlhLCBUaGFua3MgZm9yIGNob29zaW5nIHVzIGZvciB5b3VyIHJlY2VudCBob2xpZGF5IG9uIHRoZSBpc2xhbmQgb2YgSWJpemEgYW5kIGZvciB0YWtpbmcgdGhlIHRpbWUgdG8gc2hhcmUgeW91ciBjb25jZXJucyB3aXRoIHVzIG9uIHRoaXMgcG9ydGFsLiAKU28gSSBoYXZlIHRvIHN3aXRjaCBpdCB0byBhbGwgY2F0ZWdvcmllcyBhbmQgYWxsIHNpemVzIHRvIHNlZSBteSBjbG9zZXQuIApUaGUgR29sZiBpcyBidWlsdCBpbiBQdWVibGEgTWV4aWNvLCBpcyByZWxpYWJsZSwgcXVpZXQsIGNvbWZvcnRhYmxlLCBmYXN0LCBhbmQgKG9uY2UgSSBib3VnaHQgc29tZSB0YWtlb2ZmIDIyNSB3aWR0aCB3aGVlbHMpIGZ1biB0byBkcml2ZS4gR3JlYXQgcGVvcGxlLCBncmVhdCBnb2FsLCBidXQganVzdCBkaWRuIHNlcnZlIG15IHVzZSBjYXNlLiBJIGhhZCB0aGVtIGxlYXZlIHRoZSBnZWFyIG9uIHRoZSByb29mIHNvIHRoZXkgY291bGQgdXNlIG15IHBsYWNlIGFzIGEgbGluayBpbiB0aGUgY2hhaW4gYnV0IEkgZG9uIGhhdmUgc2VydmljZSB3aXRoIHRoZW0uIApIb25lc3RseSBmcm9tIGp1c3QgbWUgbG9va2luZyBhdCB0aGUgbnVtYmVycyBpdCBtYWtlcyBzZW5zZSB0byBtZSB0byBnbyBwcm8sIGJ1dCB0aGVyZSBpcyBhbG90IG9mIGNvbWZvcnQgaW4gaG9sZGluZyBhIGpvYi4gClRoZSBjYXNpbm8gbWFrZXMgaXQgcmV2ZW51ZSBmcm9tIHBva2VyIGJ5IHRha2luZyBhIHJha2UgKGEgc21hbGwgcGVyY2VudGFnZSBvZiBldmVyeSBwb3QpIHNvIG5vIG9uZSBhdCB0aGUgdGFibGUgaGFzIGFuIGluaGVyZW50IGFkdmFudGFnZSBvdmVyIGFub3RoZXIuLiAKIkFueSByZWxhdGlvbnNoaXAgdGhhdCBNci4gUnViaW4gaGFkIHdoaWxlIGF0IEdvb2dsZSB3YXMgY29uc2Vuc3VhbCBhbmQgZGlkIG5vdCBpbnZvbHZlIGFueSBwZXJzb24gd2hvIHJlcG9ydGVkIGRpcmVjdGx5IHRvIGhpbS4gCkkndmUgZGVjaWRlZCB0byBwb3N0IHRoaXMgYWZ0ZXIgaGVhcmluZyBjb252ZXJzYXRpb25zIGF0IHdvcmssIGFmdGVyIHdhdGNoaW5nIG15IGZyaWVuZHMgYmUgYm90aCB0aGUgZ2hvc3RlciBhbmQgZ2hvc3RlZSwgc3RvcmllcyBmcm9tIGFjcXVhaW50YW5jZXMsIGNsYXNzbWF0ZXMgd2hvIHN1ZGRlbmx5IGpvaW4gaW4gZGlzY3Vzc2lvbiBvbiB0aGUgdG9waWMgb2YgcmVsYXRpb25zaGlwcyBhbmQgcmVqZWN0aW9uIHRoYXQgc3RlbXMgZnJvbSB0aGUgdW5jZXJ0YWludHkgZHVlIHRvIGdob3N0aW5nLCBhbmQgeWVzIHNvY2lhbCBtZWRpYSBhcyB3ZWxsIGJ1dCBtb3N0bHkgZnJvbSBwZXJzb25hbCBvYnNlcnZhdGlvbnMuIApJdCBsaWtlOiBJIHRoaW5rIHRoZSB2YXN0LCB2YXN0LCB2YXN0IG1ham9yaXR5IG9mIGNvbGxlZ2UgY29hY2hlcywgZXZlbiB0aGUgaGlnaGx5IHJlZ2FyZGVkIG9uZXMsIHdvdWxkbiBtYWtlIGdyZWF0IE5CQSBjb2FjaGVzIGFuZCB0aGF0IHByZXR0eSBtdWNoIGJhY2tlZCB1cCBjb25jbHVzaXZlbHkgYnkgcmVjZW50IE5CQSBoaXN0b3J5LiBJIG5vdCBjb252aW5jZWQgSG9pYmVyZyBpcyBvbmUgb2YgdGhvc2UgZ3V5cyB5ZXQuIE9yIHRoYXQgaGUgd2lsbCBldmVuIGJlIGFuIGFib3ZlIGF2ZXJhZ2UgTkJBIGNvYWNoLiBJIGZlYXIgaGUgd2lsbCBiZSBtZWRpb2NyZS4gYXQgbGVhc3QgdG8gYmVnaW4gaGlzIGNhcmVlciAobGV0IG5vdCBmb3JnZXQgdGhhdCBjb2FjaGVzIGNhbiBpbXByb3ZlIGp1c3QgYXMgcGxheWVycyBjYW4pLgpTaGUgY2FsbGVkIG9uIEhhcnBlciB0byB0ZWxsIENhbmFkaWFucyAid2hhdCB3ZSBjYW4gYW5kIGNhbm5vdCBkbyBpbiB0aGUgcHJpdmFjeSBvZiBvdXIgaG9tZSB3aXRoIGFub3RoZXIgY29uc2VudGluZyBhZHVsdC4gSSBkb24ndCBiZWxpZXZlIHRoZXNlIGxhd3MgYXJlIGp1c3QgZXhjbHVzaXZlbHkgZm9yIHNleCB0cmFkZSB3b3JrZXJzOyBpdCdzIGZvciBldmVyeSBDYW5hZGlhbiB0byBlbmpveSB0aGVpciByaWdodCB0byBwcml2YWN5LiIKTWFpcywgY29tbWUgbm91cyBycG9uZGFpdCBhbG9ycyBsZSBncmFudCA6ICBpY2ksIGMnZXN0IEJhcmJzICEgLiBUb3V0IGVuIGFjY2VwdGFudCBkZSByZXRpcmVyIGxlcyBmYW1ldXggcHJvZHVpdHMuLiAKMS4gMi4gU2Nyb2xsIHRvIHRoZSBib3R0b20gb2YgdGhlIHBhZ2UgYW5kIGNsaWNrIHRoZSAiUmVwb3J0IGFDb25jZXJuIiBsaW5rLiAKU29tZSBmb29kIGZvciB0aG91Z2h0IS4gCkZlcnJlaXJhIHRvb2sgTmVsc29uIGRvd24gYWdhaW4ganVzdCAxMCBzZWNvbmRzIGludG8gdGhlIHNlY29uZCByb3VuZCBhbmQgYSBzdGVhZHkgZmx1cnJ5IG9mIGJsb3dzIGZvcmNlZCB0aGUgcmVmZXJlZSB0byBzdG9wIHRoZSBmaWdodCBvdmVyIGEgbWludXRlIGxhdGVyLgpUbyB0ZXN0IHRoYXQgaHlwb3RoZXNpcywgYW5kIHRvIGRldGVybWluZSB3aGV0aGVyIHRoZSBpbXBvcnRhbmNlIG9mIHRoZSBpbmRpdmlkdWFsIHF1ZXN0aW9ucyB3b3VsZCBiZSByYXRlZCBzaW1pbGFybHksIHRoZSB2YWxpZGF0aW9uIHByb2Nlc3Mgd2FzIHJlcGVhdGVkIHdpdGggcHJvZ3JhbSBkaXJlY3RvcnMgb2YgaW50ZXJuYWwgbWVkaWNpbmUgcmVzaWRlbmN5IGRlcGFydG1lbnRzIGFzIHN1YmplY3RzLgpEdXJpbmcgY3Jvc3MgZXhhbWluYXRpb24sIHByb3NlY3V0b3JzIHNob3dlZCBob21lIHNlY3VyaXR5IGZvb3RhZ2Ugb2YgSGVybmFuZGV6LCBPcnRpeiBhbmQgV2FsbGFjZSBhcHBlYXJpbmcgY2FsbSBpbiB0aGUgaG91cnMgc3Vycm91bmRpbmcgdGhlIG11cmRlci4gClRoYXQgdGhlIGNhc2Ugd2l0aCBldmVyeSBjYXIuIFdlbGwsIG1heWJlIG5vdCBicmFuZCBuZXcgY2FycyB3aXRoIGV2ZXJ5dGhpbmcgY292ZXJlZCBieSB3YXJyYW50eSwgYnV0IHRob3NlIGNvbWUgd2l0aCB0aGVpciBvd24gZG93bnNpZGVzLgpJIGhhZCB0byB3YWxrIG91dCBoYWxmIHdheSB0aHJvdWdoLiBBdCBmaXJzdCwgdGhlIG1hc3NldXNlIHdhcyBkb2luZyBhIGxvdmVseSBqb2IgYW5kIEkgd2FzIGVuam95aW5nIGl0LCBidXQgaXQgc29vbiB0dXJuZWQgb3V0IHRvIGJlIHRoZSBtb3N0IGhvcnJlbmRvdXMgZXhwZXJpZW5jZSBmb3IgbWFzc2FnZS4gClRvcCAxMCBtYW5laXJhcyBkZSBjb21vIHBlZ2FyIHVtIG1hcmlkbyB0cmFpbmRvCnNjaGVua2VuIHVuZCBzZWxic3QgbWFjaGVuIGthbm4genVtIFZhbGVudGluc3RhZyAyMDExCkV2ZXJ5b25lIHdhcyBsb29raW5nIGF0IG1lOyBubyBvbmUgbWFkZSBhIHNvdW5kLiBJIHdhcyByZWFkeSBmb3IgYW55IHJlYWN0aW9uLCBqdXN0IG5vdCB0aGlzIG9uZS4gVGhlaXIgZXhwcmVzc2lvbnMgd2VyZSB2ZXJ5IHNlcmlvdXMgYW5kIGF0dGVudGl2ZS4gClBsdXMsIHRoZSBuZXQgb2ZmZXJzIGRpZmZlcmVudCB3ZWJzaXRlcyBsaWtlIFRpcG9iZXQiPlRpcG9iZXQgc2l0ZSB3aGljaCBpcyB0aGUgbGl2ZSBiZXR0aW5nIHNpdGUgZm9yIHBlb3BsZSB0byBzZWUgYW5kIHRha2UgcGFydCBvZi4gCkJ1dCB0aGVyZSBzdGlsbC4gCldoZW4geW91ciBjdXRpY2xlcyBkcnkgb3V0LCB0aGV5IGxvc2UgdGhlIG5hdHVyYWwgZmF0cyB0aGF0IHVzdWFsbHkga2VlcCB0aGVtIHNvZnQuIApJbiBvbmUgb2YgbGlmZSBjb2luY2lkZW5jZXMsIE1yLiAKSSB0cmllZCB2YXJpb3VzIHRpbWVzIHRvIGxvc2Ugd2VpZ2h0IGJ5IGZvY3Vzc2luZyBvbiBleGVyY2lzZSBhbmQgSSBkZWNpZGVkIHRoYXQgdGhpcyB0aW1lIEkgd2FpdCBiZWZvcmUgaW50cm9kdWNpbmcgZXhlcmNpc2UuIEZpcnN0bHksIEkgZmluZCBleGVyY2lzaW5nIG1ha2VzIG1lIHdheSBodW5ncmllciBhbmQgSSBnZXQgaW50byBhIG1pbmRzZXQgb2YgIndlbGwsIEkgd29ya2VkIG91dCBzbyBJIGVhcm5lZCBtb3JlIGZvb2QiLiAKTXkgdW5kZXJzdGFuZGluZyBpcyB0aGF0IHRoZSB2aXNpYmxlIGxpZ2h0IHNwZWN0cnVtIGlzIHNvbWV3aGVyZSBhcm91bmQgNDAwIDgwMG5tIGxpa2UgeW91IHNhaWQgYnV0IHRoZSBzdW4gYWxzbyBwdXRzIG9mZiBpbmZyYXJlZCBsaWdodCB3aGljaCBleHRlbmRzIHdlbGwgcGFzdCB0aGF0LCB1cCBpbiB0aGUgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIG5tICBidXQgdGhlIGhpZ2hlciB0aGUgd2F2ZWxlbmd0aCBpbiBubSBpdCBkcm9wcyBvZmYgcXVpdGUgYSBiaXQgbGlrZSBpcyBzaG93biBhdCB0aGlzIGxpbms6TmVhciBpbmZyYXJlZCBsaWdodCBpcyBjb250YWluZWQgd2l0aGluIHRoZSBzcGVjdHJ1bSBvZiBuYXR1cmFsIHN1bmxpZ2h0LiBJbiBmYWN0LCBzdW5saWdodCB0aGF0IHJlYWNoZXMgdGhlIGVhcnRoJ3Mgc3VyZmFjZSBjb250YWlucyA1MiUgdG8gNTUlIG5lYXIgaW5mcmFyZWQgbGlnaHQuIEl0J3MgY2xlYXIgdGhhdCBodW1hbnMgYW5kIG90aGVyIGFuaW1hbCBhbmQgcGxhbnQgc3BlY2llcywgYnkgTmF0dXJlJ3MgZGVzaWduLCBoYXZlIGJlZW4gcHJvZ3JhbW1lZCB0byB1dGlsaXplIG5lYXIgaW5mcmFyZWQgbGlnaHQgdG8gb3VyIGJlbmVmaXQuClRoZXJlIGFyZSBjZXJ0YWluIHJ1bGVzIG9ubGluZSBwbGF5ZXJzIGZvbGxvdywgYW5kIHZlcmJhbGx5IGhhcmFzc2luZyB5b3VyIG9wcG9uZW50cyBpcyBkb3ducmlnaHQgd3JvbmcuIFJlc3BlY3Qgc2hvdWxkIGFsc28gYmUgZ2l2ZW4gdG8gdGhlbSBhbmQgcGxheWluZyBmYWlyIHNob3VsZCBhbHNvIGJlIG9ic2VydmVkLi4gCk9uIHNvbWUgb2YgbXkgaG9iYmllcywgZXNwZWNpYWxseSBGYW5kb21zLCBJIHRlbmQgdG8gZ28gaW50byB3aGF0IEkgY2FsbCAibW9kZXMiIGZvciBtb250aHMgYXQgYSB0aW1lLiBJIGhhdmUgYSBidW5jaCBvZiBGYW5kb21zIHRvIHBpY2sgZnJvbSBhbmQgdGhleSB1c3VhbGx5IGNvbWUgYWJvdXQgZnJvbSBhIGxhcmdlIGV2ZW50IGluIHRoZSBGYW5kb20sIG9yIGFmdGVyIEkgZmlyc3QgZGlzY292ZXJlZCBpdC4gCk5vLiBUZXhhcyBIb2xkJ0VtIGlzIGJ5IGZhciB0aGUgbW9zdCBwb3B1bGFyIHBva2VyIHZhcmlhdGlvbiB0byBkYXkuIFRleGFzIEhvbGQnRW0gaXMgcGxheWVkIGJ5IGZvbGxvd2luZyBydWxlcy4gWW91IHJlY2VpdmUgMiAiSG9sZSBjYXJkcyIuIEFmdGVyIHRoZSAyIGhvbGUgY2FyZHMgYXJlIGRlYWx0IHRoZXJlIGlzIGEgcm91bmQgb2YgYmV0dGluZy4gVGhlbiB0aGUgZmxvcCBpcyBiZWluZyBkZWFsdC4gVGhlIGZsb3AgY29uc2lzdHMgb3V0IG9mIDMgY2FyZHMgZmFjZSB1cC4gQWZ0ZXIgdGhlIHJvdW5kIG9mIGJldHRpbmcgdGhlICJ0dXJuIiBpcyBwdXQgb24gdGhlIHRhYmxlLiBUaGUgdHVybiBpcyAxIGZhY2UgdXAgY2FyZCBuZXh0IHRvIHRoZSBmbG9wLiBBbm90aGVyIHJvdW5kIG9mIGJldHRpbmcgaGFwcGVucy4gVGhlbiB0aGUgIlJpdmVyIiBpcyBkZWFsdC4gVGhpcyBpcyBhbm90aGVyIGZhY2UgdXAgY29tbXVuaXR5IGNhcmQuIEEgZmluYWwgcm91bmQgb2YgYmV0dGluZyBoYXBwZW5zIGFmdGVyIHRoZSByaXZlci4gQWZ0ZXIgdGhlIHJvdW5kIG9mIGJldHRpbmcgZmluaXNoZXMgb24gdGhlIHJpdmVyIHRoZSBwbGF5ZXIgd2hvIGhhcyBiZXQgZmlyc3QgbXVzdCBzaG93IGhpcyBjYXJkcyB0byBzZWUgd2hvIGhhcyB3b24gdGhlIHBvdC4gSW4gNSBjYXJkIGRyYXcgeW91IHJlY2VpdmUgNSBob2xlIGNhcmRzIGFuZCBkZXBlbmRpbmcgb24gdGhlIHZhcmlhdGlvbiBvZiA1IGNhcmQgZHJhdyB0aGVyZSBpcyAxIG9yIDMgb3IgbW9yZSByb3VuZHMgb2YgYmV0dGluZyB3aGVyZSBwbGF5ZXJzIGNhbiBjaG9vc2UgdG8gdHJhZGUgY2FyZHMgZnJvbSB0aGUgZGVjayhzKSBvZiBjYXJkcy4gRWFjaCB0cmFkZSBvZiB0aGUgY2FyZHMgaXMgZm9sbG93ZWQgYnkgYSByb3VuZCBvZiBiZXR0aW5nLiAoRnVsbCBBbnN3ZXIpClJlYWxpemUgdGhhdCB3aGlsZSB0aGV5IG1hZGUgYSBzaGl0dHkgY2hvaWNlIHdhaXRpbmcgc28gbG9uZyB0byB0ZWxsIHlvdSB0aGUgY2hvaWNlIHdhcyBtYWRlIG91dCBvZiBjb25jZXJuIGFuZCBsb3ZlIG5vdCBtYWxpY2UuIApJIGhhdmUgbm8gaXNzdWVzIHdoZW4gcGVvcGxlIHVzZSB0aGVpciBjaG9jb2JvcyBiZWNhdXNlIEkgc21hcnQgZW5vdWdoIHRvIGtub3cgdGhlcmUgd2F5cyB0byB0dXJuIG9mZiB0aGVpciBoZWFsdGggYmFycyBhbmQgbmFtZSBwbGF0ZXMuIFlPVSBDQU4gRVZFTiBQUkVTUyBBIEJVVFRPTiBBTkQgSElERSBPVEhFUiBQTEFZRVJTIEFORCBUSEVJUiBQRVRTIEZST00gWU9VUiBTQ1JFRU4uIApJdCBkb2VzbnQgbWF0dGVyIGhvdyB1Z2x5IHlvdXIgZGl2b3JjZSB3YXMuIEkgcHJvbWlzZSB0aGVpcnMgd2FzIHdvcnNlIGFuZCBldmVuIHRoZXkgZm91bmQgYSB3YXkgdG8gbWFrZSBpdCBhYm91dCB0aGVpciBjaGlsZHJlbiBhbmQgbm90IHRoZW1zZWx2ZXMuIEdyb3cgdXAuLiAKVGhpcyB3aWxsIGJlIGEgZ3JlYXQgZmlnaHQgb24gYSB0b3AgbGV2ZWwuIApXYWl0IGZvciB0aGUgYmlnIGJsaW5kIChUaGUgYmlnIGJsaW5kIGlzIHRoZSBsYXJnZXN0IGZvcmNlZCBiZXQgYXQgdGhlIGJlZ2lubmluZyBvZiBhIGdhbWUgZGVzaWduZWQgdG8gc3RpbXVsYXRlIGJldHRpbmcuIApJIGhhdmUgcHVyY2hhc2VkIGFuZCBiZWVuIHVzaW5nIExvZ2ljIFBybyBTdHVkaW8gOCBvbiBteSBNYWNCb29rIFBybyBmb3IgYSAuIFdoZW4geW91IEluc3RhbGwgaXQsIG1ha2Ugc3VyZSB5b3UgaGF2ZSB0aGUgU2VyaWFsIE51bWJlciBmb3IgTG9naWMgOCBoYW5keSwgZm9yIHdoZW4geW91IGFyZSBhc2tlZCBmb3IgaXQuIApDaXRpZXMgd2l0aGluIHR3byB0byB0aHJlZSB5ZWFycy4gCllvdXIgY29tcGFueSBjYW4gdXNlIGNoYWlyIG1hc3NhZ2UgYXQgY29ycG9yYXRlIGV2ZW50cywgc2FsZXMgcHJvbW90aW9uIGV2ZW50cywgcmV3YXJkcyBwcm9ncmFtcywgc3BvcnRpbmcgZXZlbnRzLCBvciBvbiBhIHdlZWtseS9tb250aGx5IGJhc2lzIGZvciB5b3VyIGVtcGxveWVlcy4KRmluYWxseSwgYm90aCBmZW1pbmlzbSBhbmQgaXNsYW0gYXJlIHN1cHJlbWFjaXN0IGlkZW9sb2dpZXMgd2hpY2ggc2VlayB3b3JsZCBkb21pbmF0aW9uIGJ5IGlkZW50aWZ5aW5nIGVuZW1pZXMgdG8gYmUga2lsbGVkLgpUViBuZXdzY2FzdGVyIE1pa2UgYW5kIFBSIG1hdmVuIEppbGwgS2lsbGVlbgpOZXcgYm95ZnJpZW5kLCBwYXJ0eWluZywgb3Blbmx5IHNwZW5kaW5nIEdGTSBtb25leSBvbiBoZXJzZWxmLiAKTGltaXQgbXkgc2VhcmNoIHRvIHIvYXNpYW5hbWVyaWNhbnVzZSB0aGUgZm9sbG93aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIG5hcnJvdyB5b3VyIHJlc3VsdHM6c2VlIHRoZSBzZWFyY2ggZmFxIGZvciBkZXRhaWxzLgpJIHdhcyBqdXN0IGhvcGluZyBteSBESCB0YW50cnVtcyBpcyBhIHBoYXNlLCBqdXN0IGxpa2UgbWluZS4uIApBcyBmb3IgZW50ZXJ0YWlubWVudCwgTXIgQm93ZGl0Y2ggc2FpZCBpdCB3YXMgdGhlIG9uZSBjb21wb25lbnQgdGhhdCBjYW4gYmUgcmVqdXZlbmF0ZWQgYnkgbmV3LCBlbmVyZ2V0aWMgb3BlcmF0b3JzLiAiVGhlIHB1YidzIGJlZW4gcHJldHR5IGdvb2QgdHJhZmZpYyB3aXNlLCBidXQgZW50ZXJ0YWlubWVudCdzIGtleSBmb3IgcHJvbW90aW5nIHRoZSBwbGFjZSwiIE1yIEJvd2RpdGNoIHNhaWQuICJUaGF0J3MgYW4gYXJlYSB3aGVyZSBhIHlvdW5nIGNvdXBsZSwgd2hvIGRvZXNuJ3QgbWluZCBhIGxvdCBvZiBoYXJkIHdvcmssIGNhbiBoZWxwIGltcHJvdmUuIiBXaGlsZSBNciBCb3dkaXRjaCBzYWlkIHRoZXJlIHdlcmUgbWFueSBmZWF0dXJlcywgYSBjaGFsbGVuZ2UgbGF0ZWx5IGhhZCBiZWVuIHRoZSBlZmZlY3Qgb2YgcG9saWNlIG9wZXJhdGlvbnMgb24gdGhlIGhpZ2h3YXkuIApZb3UgbWF5IHdhbnQgdG8gYXR0cmFjdCBidXNpbmVzc2VzIHRoYXQgc3BlY2lhbGl6ZSBpbiBXaG9sZXNhbGUgQ2xheSBQb2tlciBDaGlwcy4gClNvIGFsdGhvdWdoIEkgZG9uIG1pbmQgeW91IGRpc2FncmVlaW5nLCBJIGRvIGZpbmQgdGhhdCB5b3Ugb2Z0ZW4gc2VlbSB0byBwdXJwb3NlZnVsbHkgbWlzcmVhZCBtZSB0byBoYXZlIGFuIGFyZ3VtZW50IHdpdGggdGhlIGtpbmQgb2Ygc2ltcGxpc3RpYyBmZW1pbmlzbSB0aGF0IHlvdSBzZWVtIHRvIHRoaW5rIEkgcmVwcmVzZW50LiAKUnVsZSA1QjogUGxlYXNlIGJlIHN1cmUgdG8gcmVuYW1lIHlvdXIgZmlsZXMgdG8gc29tZXRoaW5nIHVuaXF1ZSEgSWYgeW91ciBwb3N0IGlzIHJlbW92ZWQgZm9yIHJ1bGUgNSBkdWUgdG8gb3VyIGJvdCBpdCB3aWxsIHN0YXkgcmVtb3ZlZCEKSXQgaXMgcHJvamVjdGVkIHRoYXQgcmFpc2luZyB0aGUgbWluaW11bSB5ZWFyIGFyb3VuZCBzZXJ1bSAyNShPSClEIGxldmVsIHRvIDQwIHRvIDYwIG5nL21MICgxMDAgMTUwIG5tb2wvTCkgd291bGQgcHJldmVudCBhcHByb3hpbWF0ZWx5IDU4LDAwMCBuZXcgY2FzZXMgb2YgYnJlYXN0IGNhbmNlciBhbmQgNDksMDAwIG5ldyBjYXNlcyBvZiBjb2xvcmVjdGFsIGNhbmNlciBlYWNoIHllYXIsIGFuZCB0aHJlZSBmb3VydGhzIG9mIGRlYXRocyBmcm9tIHRoZXNlIGRpc2Vhc2VzIGluIHRoZSBVUyBhbmQgQ2FuYWRhLCBiYXNlZCBvbiBvYnNlcnZhdGlvbmFsIHN0dWRpZXMgY29tYmluZWQgd2l0aCBhIHJhbmRvbWl6ZWQgdHJpYWwuCkkgaW1tZWRpYXRlbHkgd2VudCBpbnNpZGUgYW5kIGdyYWJiZWQgYSBncm9jZXJ5IGJhZyBmdWxsIG9mIGV4dHJhIHNoZWV0cyBmb3IgdGhhdCBiZWQsIGJsYW5rZXQsIGV0Yy4gSSBoYW5kZWQgaXQgdG8gdGhlIE1vdGhlciB3aG8gd2FzIGNoYXR0aW5nIHdpdGggbXkgbW9tIGFuZCB0b2xkIGhlciBhbGwgb2YgdGhlIGJlZGRpbmcgY2FtZSB3aXRoIGZvciBubyBleHRyYSBjaGFyZ2UuIApBbGwgb2YgdGhvc2UgZ3V5cyBhcmUgbW9zdGx5IGJhc2tldGJhbGwgb3IgZm9vdGJhbGwgZmFucy4gSG9ja2V5IGlzIGJpZyB3aXRoIHRoZSBDYW5hZGlhbnMuIFRoZSBFdXJvcGVhbiBndXlzIGFsc28gZW5qb3kgaXQsIHRob3VnaC4gClBpbXBpbmFib3ggIDMgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpJIGtub3csIEkga25vdywgaXQgaXMgc3RpbGwgZWFybHkgaW4gbm9uIGNvbmZlcmVuY2UgcGxheSwgYW5kIFV0YWgncyBmaXZlIHdpbnMgYWxsIGNhbWUgYWdhaW5zdCBhZG1pdHRlZGx5IGluZmVyaW9yIG9wcG9uZW50cy4gSG93ZXZlciwgdW5saWtlIGxhc3QgeWVhcidzIHBhcmFkZSBvZiBwYXRzaWVzLCB0aGUgUnVubmluJyBVdGVzIGhhdmUgYSBudW1iZXIgb2YgcXVhbGl0eSBvcHBvbmVudHMgb24gdGhlaXIgbm9uIGNvbmZlcmVuY2Ugc2NoZWR1bGUuCkkgYWx3YXlzIGRvbmUgYmV0dGVyIGluIGNvbXBzIGF0IEZveHdvb2RzLCBJIGdldCAxMCAyMCBwb2ludHMgZm9yIHNob3dpbmcgdXAgdHdpY2UgYSB3ZWVrIGFuZCAyIGZyZWUgcm9vbXMgYSB3ZWVrLiBXZWVrbmlnaHRzIG9ubHksIHdlZWtlbmQgcm9vbXMgZm9yZ2V0IGl0LCB0aGV5IGRvbiB3YW5uYSBrbm93IHlvdS4gSSBhbHNvIGdldCBhbGwgdGhlIHdlaXJkIGdpZnRzIGFuZCBiIGxpc3Qgc2hvd3MsIEkgcGxheSBtYXliZSAyMCBob3VycyBhIHdlZWsuIEF0IE1vaGVnYW4gSSBuZXZlciBnZXQgcm9vbXMgb3IgcG9pbnRzIGFwYXJ0IGZyb20gdGhlIHBva2VyIGhvdXJseS4gSSBnZXQgYSB0ZW4gZG9sbGFyIGZyZWUgYmV0IG1vbnRobHkgYW5kIGFsbCB0aGUgV05CQSBhbmQgTGFjcm9zc2UgZ2FtZXMgSSBjYW4gaGFuZGxlLCB0aGF0IGFib3V0IGl0LgpTdGlyIGluIGxlbW9uIHBlZWwgYW5kIGxlbW9uIGp1aWNlLiAKSSB3b25kZXJpbmcgd2h5IGdpdmUgYSBjYXJkIGlmIGl0IGRvZXNuIGNvbnRhaW4gdGhlIGNvZGUuIEFuZCBpdCBzaG91bGRuIHRha2UgbXVjaCBlZmZvcnQgZm9yIHRoZSBjbGVyayB0byBtZW50aW9uIHRoYXQgdGhlIGNvZGUgdG8gcmVkZWVtIHRoZSBnYW1lIGlzIG9uIHRoZSByZWNlaXB0LgpEaWQgcGVvcGxlIHJlYWQgYm9va3MgYXQgYSBwb2tlciB0YWJsZSBiZWZvcmUgcGhvbmVzIHdlcmUgYSB0aGluZwpBbm90aGVyIHBvc3NpYmxlIHJlYXNvbiBmb3IgdGhlIGNyaXRpY2lzbSB5b3UgcmVjZWl2ZWQgaXMgdGhhdCB0aGUgbW90aGVyYm9hcmQgaGFzIFF1YWxjb21tIE5JQy4gRnJlZUJTRCBtaWdodCBub3Qgc3VwcG9ydCBpdCB2ZXJ5IHdlbGwsIGlmIGF0IGFsbC4gCktoYW5ndXJhIHBlcnNvbmFsIHN0b3J5IHJlc29uYXRlZCB3aXRoIHRoZSBnZW5lcm91cyBmaWVsZCBhcyB0aGV5IHJhaXNlZCBuZWFybHkgJDEwMCwwMDAgZm9yIHRoZSBjYXVzZSBhIG5ldyBzdGFuZGFyZCBmb3IgdGhlIGZsZWRnbGluZyBldmVudC4uIApPa2FkYSBoYWQgYSByZXB1dGF0aW9uIGZvciBub3Qgc2VsbGluZyBhcyB3ZWxsIHdoZW4gaGUgZmlyc3QgY2FtZSBiYWNrIGJ1dCBub3cgSSBjb25zaWRlciBoaW0gdGhlIGJlc3Qgc2VsbGVyIGluIE5KUFcuIApMb29rIGl0IHVwOiBDaGVhdGluZyBjaGFyYWN0ZXJpc3RpY2FsbHkgaXMgZW1wbG95ZWQgdG8gY3JlYXRlIGFuIHVuZmFpciBhZHZhbnRhZ2UsIHVzdWFsbHkgaW4gb25lIG93biBpbnRlcmVzdCwgYW5kIG9mdGVuIGF0IHRoZSBleHBlbnNlIG9mIG90aGVycy4gClRoZSB1bHRpbWF0ZSBwYXJ0IG9mIGhpcyBmYW50YXN5IGlzIGJhc2ljYWxseSBnb25lIG5vdyB0aG91Z2gsIGJlY2F1c2UgaGlzIHVsdGltYXRlIGZlZWxzIHNvIG11Y2ggbGVzcyBwb3dlcmZ1bC4gClNhaWxpbmcgaGVscHMgaGltIGNvcGUgd2hlbiB0aGUgYmxhY2sgdGhvdWdodHMgY3Jvd2QgaGlzIG1pbmQuIEhlIHRha2VzIGNvbWZvcnQgZnJvbSBrbm93aW5nIGhpcyBzdGF0ZW1lbnQgdG8gcG9saWNlIGluIDIwMDcgbGF1bmNoZWQgU3RyaWtlIEZvcmNlIEdlb3JnaWFuYSwgYW5kIGl0cyBpbnZlc3RpZ2F0aW9ucyBwcm92aWRlZCBwcm9vZiBvZiB0aGUgbmVlZCBmb3IgYSByb3lhbCBjb21taXNzaW9uIHdoaWNoIGhhcyBleHBvc2VkIHRoZSB0cnV0aCBhYm91dCBjaGlsZCBzZXh1YWwgYWJ1c2UgaW4gQXVzdHJhbGlhbiBpbnN0aXR1dGlvbnMuIApObyBtYXR0ZXIgaG93IG11Y2ggaXMgY29udHJpYnV0ZWQgdG8gdGhlIHBvdCwgdXN1YWxseSA5NSUgd2FsayBhd2F5IHdpdGggbm90aGluZywgYW5kIGl0IHRoZSA5NSUgdGhhdCBncm93cyB0aGUgc2NlbmUuIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29XaGlsZSBJIGFncmVlIHdpdGggc29tZSBwb2ludHMgSSB0aGluayB5b3UgbWlzc2luZyB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgd2hpY2ggaXMgdGhhdCBTbWFzaCB0b3VybmFtZW50cyBuZWVkIHJlZ3VsYXRpb24gYW5kIHRoZXkgbmVlZCB0byBiZSBjZW50cmFsaXplZCBvciByZXByZXNlbnRlZCBieSBhIHNpbmdsZSBtYXJrZXRpbmcgY29tcGFueSBhbmQgd2hhdG5vdC4gClRoZSBMYXMgVmVnYXMgbmF0aXZlIGlzIGNvbWluZyBvZmYgYSBzZWNvbmQgY29uc2VjdXRpdmUgdG9wIGZpdmUgcnVuLCB0aGlzIHRpbWUgYXQgaGlzIGhvbWUgdHJhY2ssIGFuZCBmZWx0IGFzIGlmIGhpcyBDaGlwIEdhbmFzc2kgUmFjaW5nIHRlYW0gXyBhbmQgdGhlaXIgQ2hldnJvbGV0IHBvd2VyIHBsYW50cyBfIHdlcmUgZmluYWxseSBjYXRjaGluZyB1cCB0byB0aGUgRm9yZCBhbmQgVG95b3RhIHRlYW1zIHRoYXQgaGF2ZSBkb21pbmF0ZWQgdGhlIGVhcmx5IHBhcnQgb2YgdGhlIEN1cCBzZWFzb24uIApJbnZlc3QgdGltZSBwbGF5aW5nIGZyZWUgaG9sZGVtIGdhbWVzIG9ubGluZS4gVGhhdCB3YXkgeW91IGNhbiBzaGFycGVuIHlvdXIgc2tpbGxzIHdpdGhvdXQgbG9zaW5nIHlvdXIgYmFuayBhbmQgZGV2ZWxvcCB5b3VyIGhvbGRlbSBzdHJhdGVneS4KRG8gc29tZSByZXNlYXJjaDogSW50ZXJ2aWV3IHBvdGVudGlhbCBtYXNzYWdlIHRoZXJhcGlzdHMsIGNoZWNrIHRoZWlyIHdlYnNpdGVzIGFuZCBhc2sgcXVlc3Rpb25zLgpJIGhhdmUgdG8gbGV2ZWwgd2l0aCB5b3UgdGhvdWdoICAgYmVjYXVzZSB0aGlzIHN1YnJlZGRpdCBpcyBmb3IgcGVvcGxlIHdobyBoYXZlIHN1ZmZlcmVkIGFidXNlIGF0IHRoZSBoYW5kcyBvZiBuYXJjaXNzaXN0cywgd2UgYWN0dWFsbHkgZG9uIGFsbG93IHBlb3BsZSB0byBwYXJ0aWNpcGF0ZSBoZXJlIGlmIHRoZXkgc2VsZiBpZGVudGlmeSBhcyBuYXJjaXNzaXN0cyBvciBzb2Npb3BhdGhzLiAKSW5mb3JtYXRpb24gY29sbGVjdGVkIGZyb20gY29va2llcyBhbmQgc2ltaWxhciB0ZWNobm9sb2dpZXMuIFdlIG1heSByZWNlaXZlIGluZm9ybWF0aW9uIGZyb20gY29va2llcywgd2hpY2ggYXJlIHBpZWNlcyBvZiBkYXRhIHlvdXIgYnJvd3NlciBzdG9yZXMgYW5kIHNlbmRzIGJhY2sgdG8gdXMgd2hlbiBtYWtpbmcgcmVxdWVzdHMsIGFuZCBzaW1pbGFyIHRlY2hub2xvZ2llcy4gV2UgdXNlIHRoaXMgaW5mb3JtYXRpb24gdG8gaW1wcm92ZSB5b3VyIGV4cGVyaWVuY2UsIHVuZGVyc3RhbmQgdXNlciBhY3Rpdml0eSwgcGVyc29uYWxpemUgY29udGVudCBhbmQgYWR2ZXJ0aXNlbWVudHMsIGFuZCBpbXByb3ZlIHRoZSBxdWFsaXR5IG9mIG91ciBTZXJ2aWNlcy4gClJlc3BlY3QgYWxsLiBUaGlzIGlzIGltcG9ydGFudCBmb2xrcy4gSXQgcmVhbGx5IGlzLiAKSSBndWVzc2luZywgc2luY2UgeW91IGFuICJhdGhsZXRpYyBidWlsZCIgeW91IGFyZSBqdXN0IHRocm93biB0aGUgYmFsbCB0b28gZmFzdC4gCkRvZXMgdGhhdCBtZWFuIGhlIGhhcyB0byBoYW5kIG92ZXIgd2hhdCBpcyBpbiBoaXMgaGFuZHM/IE5vLCBvZiBjb3Vyc2Ugbm90LiBJdCBhbHNvIG1lYW5zIGhlIGNhbiBzY3JlYW0gYW5kIGNyeSBmb3Igd2hhdCBhbm90aGVyIGNoaWxkIGlzIGhvbGRpbmcuIFlvdSBjYW4gY29hY2ggaGltIGFsb25nLiAKSSBrbm93IHRoYXQgdGhleSBhbHNvIGRvbmUgc29tZSBxdWVzdGlvbmFibGUgdGhpbmdzIGxpa2UgZmlyaW5nIHRoZSBDRU8gZm9yIGhpcyBwZXJzb25hbCBvcGluaW9ucyBhbmQgdGhlIGZvcmNlZCBhZCBleHRlbnNpb25zLiAKSGF2aW5nIHRoZSBzYW1lIGlzc3VlcyBhcyB3ZWxsIHdpdGggWiBXYXZlIHdvcmtpbmcgZmxhd2xlc3NseSBidXQgWmlnYmVlL1poYSBpcyBoYXZpbmcgaXNzdWVzIGFuZCBub3QgZXZlbiBjb25uZWN0aW5nIHRvIHRoZSBzdGljay4gClNvIGl0IG5vdCBuZWNlc3NhcmlseSBhbGwgYXJvdW5kIHRoZSB3b3JsZCAoZXZlbiB0aG91Z2ggdGhhdCBhbHNvIHBvc2libGUgYW5kIG5vdCB1bnVzdWFsKSB0aGV5IG9wZXJhdGUsIGJ1dCBtYXliZSB0aGV5IHN1cHBseSBhIGNvdXBsZSBidXNpbmVzc2VzIGluIHRoZWlyIGFyZWEsIHdpdGggYWxtb3N0IG5leHQgZG9vciBzZXJ2aWNlIGFuZCBsaW1pdCB0aGVpciBjdXN0b21lcnMgdG8gYSBudW1iZXIgdGhleSBjYW4gaGFuZGxlIGlmIGV4cGFuc2lvbiBkb2VzbiBtYWtlIHNlbnNlLiAKQ2xpY2sgdGhlIHBpY3R1cmUgYXQgdGhlIHRvcCBvZiB0aGUgcGFnZSB0byBqb2luIHRoZSBjb252ZXJzYXRpb24hClRoZSBBbHBoYSBjaGFubmVsIGlzIGFjdGl2YXRlZCBvbiB0aGlzIHNraW4gYmVjYXVzZSBpdCBpcyB0aGVyZSBvbiB0aGUgZmlsZSB0aGF0IGlzIGluIGdhbWUuIFdoYXQgc2VlbXMgdG8gYmUgdGhlIGlzc3VlIGlzIHRoYXQgaXRzIGNyZWF0b3JzIGhhdmUgdGFrZW4gdGhlIGltYWdlcyBpbiBnYW1lIHdpdGggYSBmdWxsIGJsYWNrIGFscGhhIGNoYW5uZWwgKHNvIGl0IG5ldmVyIHdlYXJzKSBhbmQgdGhlbiBjcmVhdGVkIGFuIGFscGhhIGNoYW5uZWwgd2l0aG91dCBjYXJlZnVsbHkgdGVzdGluZyBpdC4gVmFsdmUgY3JlYXRlZCB0aGUgYWxwaGEgY2hhbm5lbCBhbmQgaGF2ZSBwcm9iYWJseSBub3QgdGFrZW4gdGhlIGdyZXlzY2FsZSB2YWx1ZXMgaW50byBjb25zaWRlcmF0aW9uLi4gCkFuIGVtcGxveWVlIHdvcmtpbmcgZm9yIGFuIG9ubGluZSBwb2tlciBzaXRlIGNhbiBlYXNpbHkgYWNjZXNzIHBsYXllciBpbmZvcm1hdGlvbiBhbmQgdGhlaXIgY3JlZGl0IGNhcmRzIG51bWJlcnMgYW5kIGhlIGNhbiB1c2UgdGhlc2UgdG8gZ2FpbiBhY2Nlc3Mgb3Igc2VsbCB0aGVzZS4gSW5zaWRlcnMgYWxzbyBoYXZlIGdyZWF0ZXIgb3Bwb3J0dW5pdGllcyBpbiBlYXZlc2Ryb3BwaW5nIG9uIHRoZSBwbGF5ZXJzJyBhY3Rpb25zIGFuZCBjb3VsZCB1c2UgYW5kIHNlbGwgdGhpcyBpbmZvcm1hdGlvbiBzbyB0aGF0IG90aGVyIHBsYXllcnMgY2FuIGNoZWF0Li4gCk15IGZhdm9yaXRlIHNvbmdzIGFyZSAiTm8gU2hhZGUiIGFuZCAiSm9obiBNeSBCZWxvdmVkIi4gSSBnb3Qgc3dhbGxvd2VkIGJ5IHRoZSBjbGljaGVzIG9mIGplYW5zLCB0cnVja3MgYW5kIGZpcmVmbGllcyBzbyBJIG5ldmVyIHJlYWxseSB0cmllZCB0byBleHBsb3JlIGl0IGxpa2UgYSBsb3Qgb2Ygb3RoZXIgZ2VucmVzLiAKTm90aGluZyBjb3VsZCBiZSBmdXJ0aGVyIGZyb20gdGhlIHRydXRoLi4gCkZvciBleGFtcGxlLCBiZWdpbiBtYXNzYWdpbmcgeW91ciBsZWZ0IHNob3VsZGVyIHdpdGggeW91ciByaWdodCBoYW5kLCBhbmQgY29udGludWUgcnViYmluZyBkb3duIHlvdXIgbGVmdCBhcm0uIApUaGUgcGFpciB3cmVzdGxlZCBmb3IgYSBzaG9ydCB0aW1lIGJlZm9yZSBiZWluZyBzZXBhcmF0ZWQgYnkgYmFyIHN0YWZmLiBUaGUgdmljdGltIHdhcyBsZWZ0IHdpdGggYSAxNWNtIGxvbmcsIDNjbSBkZWVwIGN1dCB0byBoaXMgbmVjayB3aGljaCByZXF1aXJlZCBzcGVjaWFsaXN0IHN1cmdlcnkuIApOZXltYXIgSnIsIGZvciBoaXMgcGFydCwgaXMgc3VjaCBhIGJpZyBwb2tlciBmYW4sIGhpcyBkb2cgaXMgZXZlbiBuYW1lZCBQb2tlciE6CldoaWNoIGxlYWRzIG1lIHRvIGhpcyBiaWdnZXN0IGlzc3VlLiBIZSBoYXMgdmVyeSBsaXR0bGUgbWVtb3J5IG9mIGhlciBhbmQgbm8gb25lIGRpZCBhbnl0aGluZyB0byBoZWxwIGhpbSBob2xkIG9uIHRvIGhpcyBtZW1vcmllcyBvciB0YWxrZWQgYWJvdXQgaG93IG11Y2ggc2hlIGxvdmVkIGhpbSBhcyBoZSBncmV3IHVwLiAKQ2xpdmUgQWxsY29jazogV2VsbCBhcyBhIHlvdW5nLCBwb29yIG1lZGljYWwgc3R1ZGVudCwgSSdkIGJlZW4gZ29pbmcgdG8gdGhlIGhvcnNlIHJhY2VzIGZvciBxdWl0ZSBhIHdoaWxlIGJ1dCBvbiB0aGlzIHBhcnRpY3VsYXIgZGF5IEknZCBwdXQgYSBsaXR0bGUgYml0IG1vcmUgdGhhbiBwZXJoYXBzIEkgc2hvdWxkIGhhdmUsIGFuZCBvbiBhIGhvcnNlIHdoaWNoIHVsdGltYXRlbHkgY2FudGVyZWQgdG8gdGhlIGxpbmUgdG8gd2luIHRoZSBHcmFuZCBOYXRpb25hbCBIdXJkbGUgYnkgYW4gZWFzeSB0ZW4gbGVuZ3Rocy4gQW5kIEkgZmVsdCBxdWl0ZSBjYWxtIGFuZCBxdWl0ZSByZWxheGVkIGJ1dCBJIHRob3VnaHQsIHdlbGwsIHlvdSdyZSBhIHN0dWRlbnQsIHdoeSBub3QgZG8gYSBsaXR0bGUgYml0IG9mIHNjaWVuY2UgaGVyZT8gQW5kIEkgdG9vayBteSBvd24gcHVsc2UgcmF0ZSwgd2hpY2ggdGhlbiB3YXMgYWJvdXQgMTUwIGJlYXRzIGEgbWludXRlOyBzbyBJJ3ZlIG5ldmVyIGRhcmVkIHJlcGVhdCB0aGF0IGV4cGVyaW1lbnQuIEJ1dCBvdXR3YXJkbHkgSSBmZWx0IGNhbG0uIApBcyBzb29uIGFzIEkgc3RlcHBlZCBmb290IGluIHRoZSBob3VzZSBJIGZlbHQgbGlrZSBldmVyeXRoaW5nIHdhcyB3cm9uZy4gCk5ldyByZXN0YXVyYW50IGlzIG5pY2UgYnV0IHNtYWxsZXIgcG9ydGlvbnMgYW5kIG92ZXIgcHJpY2VkLiBObyBmcmVlIGNvZmZlZSBzdGF0aW9uIGFueW1vcmUuIApZZXMsIGEgRlJFRSBmb3IgYSAzIHllYXIgdGVybSB3aXRob3V0IGhhdmluZyB0byByZXNvcnQgdG8gaWxsZWdhbCwgdW5ldGhpY2FsLCB2aXJ1cyBpbmZlY3RlZCBvciBzZWN1cml0eSBjb21wcm9taXNpbmcgc29mdHdhcmUgbGljZW5zaW5nIGNyYWNraW5nIG1ldGhvZHMuIFNtb2tlIEF1dG9kZXNrIFNvZnRpbWFnZSBBdXRvZGVzayBUIFNwbGluZXMgUGx1ZyBpbiBmb3IgUmhpbm8uIApUaGF0IHNhaWQsIEkgYWxzbyB0aGluayB5b3Ugd291bGQgYmUgZmluZSBpbiBhIG5pY2Ugc2tpcnQgYW5kIGJsb3VzZS4gCkMuIFZhY2NpbmUgcmVzaXN0YW5jZSBpc24ndCByZWFsbHkgYSB0aGluZyBpbiB3aWxkIHR5cGUgc3RyYWlucy4gV2hlbiBkZXZlbG9waW5nIGEgdmFjY2luZSwgeW91IHRhcmdldCBwcm90ZWlucyB0aGF0IGRvbid0IG11dGF0ZSBvciBtdXRhdGUgdmVyeSBzbG93bHkuIApXZWxsIGtub3duIHRvIGNyb3Nzd29yZCBwdXp6bGUgYWRkaWN0cyAoImNpdHkgaW4gT2tsYWhvbWEsIHRocmVlIGxldHRlcnMiKSwgaXQgd2FzIG5hbWVkIGFmdGVyIGEgZGFyayBoYWlyZWQgZ2lybCwgQWRhIFJlZWQsIGRhdWdodGVyIG9mIHRoZSB0b3duJ3MgZm91bmRlciwgYmFjayB3aGVuIE9rbGFob21hIHdhcyBJbmRpYW4gVGVycml0b3J5LiAKTGEgbG9pIGR1IDI4IHBsdXZpc2UgYW4gVklJSSBjb25jZXJuZSAgbGEgZGl2aXNpb24gZHUgdGVycml0b2lyZSBmcmFuYWlzIGV0IGwnYWRtaW5pc3RyYXRpb24gLiBTb24gYXJ0aWNsZSBwcmVtaWVyIGV4cGxpcXVlIHF1ZSAgTGUgdGVycml0b2lyZSBldXJvcGVuIGRlIGxhIFJwdWJsaXF1ZSBzZXJhIGRpdmlzIGVuIGRwYXJ0ZW1lbnRzIGV0IGVuIGFycm9uZGlzc2VtZW50cyBjb21tdW5hdXgsIGNvbmZvcm1tZW50IGF1IHRhYmxlYXUgYW5uZXggIGxhIHByc2VudGUgbG9pIC4gTGUgcmFwcG9ydCBkZSBDaGFwdGFsIGF1IENvcnBzIExnaXNsYXRpZiBjb25jZXJuYW50IGNldHRlIGxvaSBzb3VsaWduZSBxdWUgY2V0dGUgZGl2aXNpb24gZW4gZHBhcnRlbWVudCBhIHJzaXN0ICAgdG91cyBsZXMgb3JhZ2VzIGQndW5lIGxvbmd1ZSBSdm9sdXRpb24sIHBhcnV0IHRvdWpvdXJzIHJlc3BlY3RlIGV0IGluYnJhbmxhYmxlIGF1IG1pbGlldSBkZXMgcnVpbmVzIGV0IGRlcyBkZXN0cnVjdGlvbnMgLiAKQSBsYXcgZW5mb3JjZW1lbnQgb2ZmaWNpYWwgdG9sZCB0aGUgQVAgaW4gT2N0b2JlciB0aGF0IFBhZGRvY2sgYm91Z2h0IDEsMDAwIHJvdW5kcyBvZiB0cmFjZXIgYW1tdW5pdGlvbiBmcm9tIGEgcHJpdmF0ZSBzZWxsZXIgaGUgbWV0IGF0IGEgUGhvZW5peCBndW4gc2hvdy4gSXQgd2FzIG5vdCBpbW1lZGlhdGVseSBjbGVhciBpZiB0aGF0IHBlcnNvbiB3YXMgSGFpZy4KRXhjZXB0LCBuby4gCk1pbGQgY2FzZXMgYXJlIGFkZHJlc3NlZCB3aXRoIGJlZCByZXN0IGFuZCBtb25pdG9yaW5nIG9mIHRoZSBtb3RoZXIgYW5kIGJhYnkgKHNvbWV0aW1lcyBpbiBhIGhvc3BpdGFsKS4gTW9kZXJhdGUgY2FzZXMgbWF5IHJlcXVpcmUgbWVkaWNhdGlvbiB0byBjb250cm9sIGh5cGVydGVuc2lvbiBhbmQgcmVkdWNlIHRoZSByaXNrIG9mIGNvbnZ1bHNpb25zLiBUaGUgdWx0aW1hdGUgY3VyZSBmb3IgYm90aCBwcmVlY2xhbXBzaWEgYW5kIGVjbGFtcHNpYSBpcyBkZWxpdmVyeSBvZiB0aGUgYmFieSAob3IgYmFiaWVzKS4KVGhlcmUgd2VyZSBubyBkZW1hbmRzIGZvciBpbW1lZGlhdGVseSBmb3JtaW5nIGEganVkaWNpYWwgY29tbWlzc2lvbiB0byBwcm9iZSB3aG8gd2FzIGJlaGluZCB0aGlzIGRpcmVjdCBhdHRhY2sgb24gdGhlIHBlcnNvbiBhbmQgY2FuZGlkYXR1cmUgb2YgYW4gb2ZmaWNlciBvZiBwcm92ZW4gY3JlZGVudGlhbHMuIE5vIG9uZSBoZWxkIGFueSBwcmVzcyBjb25mZXJlbmNlIGRlbWFuZGluZyBhY2NvdW50YWJpbGl0eS4gTm9ib2R5IHNwb2tlLiAKU2VpdCB2b3IgZXR3YXMgbWVociBhbHMgemVobiBKYWhyZW4gZGFzICBpbiBkZW4gcyBlaW5nZWZocnQgd29yZGVuIGlzdCwgaGFiZW4gc3RldHMgIGRpZSBIbmRlIiBiZXN0aW1tdC4gCklmIHlvdSBhcmUgd29ya2luZyBhbmQgY2FyIGxpdmluZyB5b3Ugd2lsbCBuZWVkIGFuZCBiZSBhYmxlIHRvIGFmZm9yZCBpbmRvb3IgbW90ZWwvQWlyYm5iIHJlc3BpdGUgc29tZXRpbWVzLiBJZiBJIHdlcmUgeW91IEkgd291bGQgbm90IGJlIHNldHRsaW5nIGluIHRvIHN0YXkgaW4gdGhlIGNhciwgSSB3b3VsZCBiZSB3b3JraW5nIG9uIGdldHRpbmcgcGh5c2ljYWwgc2hlbHRlciBBU0FQLiBDcm93ZGZ1bmQsIHNlbGwgcGxhc21hIGlmIHlvdSBjYW4gb24gdG9wIG9mIHdvcmssIGFuZCBnZXQgaW5zaWRlIGluIHRoZSBuZXh0IGZldyBtb250aHMuLiAKVGhlcmUgYXJlIG90aGVyIHJlYXNvbnMgcG9saWNlIHNvbWV0aW1lcyBnaXZlIHRoZW0gYSB3aWRlIGJlcnRoLiBQcm9zdGl0dXRpb24gbGltaXRlZCB0byBhIHNpbmdsZSBsb2NhdGlvbiBtaWdodCBiZSBwZXJjZWl2ZWQgYXMgYmV0dGVyIHRoYW4gaG9va2VycyB3b3JraW5nIHJhbmRvbWx5IGFsbCBvdmVyIHRoZSBwbGFjZS4gQWxzbyBhIHBsYWNlIGxpa2UgdGhhdCB3aWxsIGhhdmUgc2VjdXJpdHkgYW5kIGtlZXAgb3RoZXIgY3JpbWVzIGFzc29jaWF0ZWQgd2l0aCBwcm9zdGl0dXRpb24gY2xhbXBlZCBkb3duLiBBbHNvIHRoZSBtYXlvciBvZiB0aGUgY291bnR5IHNlYXQgZ290IGFycmVzdGVkLiBBcyBmYXIgYXMgSSBrbm93IHRoZXkgd2VyZW4gdGFraW5nIGJyaWJlcyBmcm9tIHRoZSBtYXNzYWdlIHBhcmxvcnMgaW4gdGhpcyBjYXNlLCBpdCB3YXMganVzdCBhIGNsdXN0ZXJmdWNrLCBtaXNtYW5hZ2VkIGNvdW50eSB0aGF0IGRpZG4gaGF2ZSBpdCB0b2dldGhlciBlbm91Z2ggdG8gbWFuYWdlIGEgcmVsYXRpdmVseSBjb21wbGljYXRlZCBzdGluZyBvZiBtYXNzYWdlIHBhcmxvcnMuIHdyaXRpbmcgc3BlZWRpbmcgdGlja2V0cyB3YXMgYWJvdXQgYWxsIHRoZXkgY291bGQgaGFuZGxlLgpUaGUgYXdhcmQgaXMgY3JlYXRlZCBhbmQgbWFpbnRhaW5lZCBieSB0aGUgVUNMQSBWb2x1bnRlZXIgQ2VudGVyIEZlbGxvd3MuIApXZSBhbGwgaGF2ZSBwZW9wbGUgaW4gb3VyIGxpZmUgdGhhdCBjYXJlIGZvciB1cyBhbmQgd2lsbCBzdXBwb3J0IHVzIHRocm91Z2ggYW55dGhpbmcuIEl0IGp1c3QgYSBzaGFtZSB0aGF0IGl0IHRha2VzIHNvbWUgb2YgdXMgbG9uZ2VyIHRvIGZpbmQgdGhlbSB0aGFuIG90aGVycy4uIApJIHRoaW5rIGl0IGFsbCBjb21lcyBkb3duIHRvIHJpc2sgdG9sZXJhbmNlIGFuZCBrbm93aW5nIHdoYXQgeW91J3JlIGRvaW5nLiBJIGd1ZXNzIGlmIHlvdSBjb21wYXJlIGl0IHRvIGhhcmQgbW9uZXkgbGVuZGluZyAsIGl0IG1pZ2h0IGJlIGV2ZW4gYSBiZXR0ZXIgZGVhbCBjb25zaWRlcmluZyB5b3UncmUgYmVpbmcgY2hhcmdlcyAzIDUgcG9pbnRzIHdoZW4gdXNpbmcgYSBjYXJkIGFuZCBhIGhhcmQgbGVuZGVyIG1pZ2h0IGNoYXJnZSB5b3UgcG9pbnRzIGFzIHdlbGwgcGx1cyBhIHZlcnkgaGlnaCBpbnRlcmVzdCByYXRlLgpUaGUgdGF4aSB3YXMgY2FycnlpbmcgZm91ciBzY2hvb2wgYm95cyBhbmQgdGhlIGRyaXZlciB0b29rIHRoZW0gdG8gUmFmaXEncyBjb21wYW55LCBTeWxsYSBBY2NpZGVudCBNYW5hZ2VtZW50IGFuZCBTb2x1dGlvbnMuIEhlIG1hZGUgYSBjbGFpbSBvbiB0aGVpciBiZWhhbGYgd2l0aG91dCB0aGVpciBrbm93bGVkZ2UgZm9yIHBlcnNvbmFsIGluanVyaWVzIGFuZCB3YXMgcGFpZCBvdXQgYnkgdGhlIGluc3VyYW5jZSBjb21wYW55LgpFYWdsZXMgZGVmZWF0IFBhdHJpb3RzIHRvIHdpbiBTdXBlciBCb3dsIExJSQpTY2VuZSBhY3R1YWxseSBkaWRuJ3Qgc2hvdyB0aGUgcGFydCBJIGV4cGVjdGVkIGl0IHRvLCBmdWNrLiBiYXNpY2FsbHksIFN5bGFyIGlzIHByZXRlbmRpbmcgdG8gYmUgdGhlIGd1eSBoZSBqdXN0IGtpbGxlZCwgYW5kIGFjdHMgY29tcGxldGVseSBkaWZmZXJlbnQgdG8gaG93IGhlIG5vcm1hbGx5IGRvZXMuIEhlIHRoZW4gcHJvY2VlZHMgdG8ga2lsbCBldmVyeSBwZXJzb24gdGhleSBnbyB0byBtZWV0IGFsb25nIHNpZGUgdGhlaXIgam91cm5leSB0b2dldGhlci4gSXQgd291bGQgYmUgc28gaW50ZXJlc3RpbmcgdG8gbGF5IHRoZSBwYXRoIG91dCBpbiBmcm9udCBmb3IgdGhlIHBsYXllcnMgdG8gZXhwZXJpZW5jZSBhbGwgdGhlc2Uga2lkbmFwcGluZ3Mgc3RpbGwgaGFwcGVuaW5nIHdoaWxlIHRoaXMgbWFuIGluIHRoZWlyIHBhcnR5IGFjdHMgYXMgaWYgaGUgaXMgaW5ub2NlbnQgYW5kIGhlbHBpbmcsIGFuZCB0b3RhbGx5IGNoYW5nZXMgaGlzIGxhbmd1YWdlIGFuZCBib2R5IGxhbmd1YWdlIG9uY2Ugb3V0ZWQgYXMgdGhlIHZpbGxhaW4gICBsZXQgaGltIGZvbGxvdyB0aGUgcGFydHkgZm9yIG5vdyB0aG91Z2gsIGhlJ3MgYXQgYSBtb3N0IGFkdmFudGFnZW91cyBwb3NpdGlvbiBhbmQgaW0gc3VyZSBoZSdkIGRvIHRoZSBzYW1lCk15IHBhcmVudHMgd29uJ3QgYnV5IG1lIGEgcHMzIGhvdyBkbyBpIGxldCB0aGVtIGJ1eSBpdD8KVGhlIHByb2JsZW0gZm9yIG1lIGlzIG5vdCB3aGV0aGVyIHRoZSBnYW1lIGlzIHdvcnRoIHBsYXlpbmcgb3Igbm90OyB0aGUgcHJvYmxlbSBpcyB0aGF0IEkgb25seSBib3VnaHQgdGhlIGJhc2UgZ2FtZSBhdCBsYXVuY2ggYW5kIG5vdyBCdW5naWUgZXhwZWN0cyBtZSB0byBwYXkgYWxtb3N0ICQ3MCAkNTkuNDkgVVNEIChmb3IgdGhlIGxlZ2VuZGFyeSBlZGl0aW9uIHRoYXQgY29udGFpbnMgYWxsIGV4cGFuc2lvbnMgRm9yc2FrZW4gKyBFeHAgMSArIEV4cCAyICsgQW5udWFsIFBhc3MpIGp1c3Qgc28gdGhhdCBJIGNhbiBmaW5hbGx5IHBsYXkgdGhlIGdhbWUgcHJvcGVybHkuCkNSOiBXaGVuIHlvdSBsb29rIGF0IG1lZGljYWwgY291cnNlcywgeW91J2xsIGZpbmQgdGhhdCB0aGUgYmFzaWMgZGVmaW5pdGlvbiBvZiBmYXNjaWEgY29tZXMgZnJvbSBHcmF5J3MgQW5hdG9teS4gSW5zdHJ1Y3RvcnMgY29uc2lkZXIgZmFzY2lhIGFuIGFuYXRvbWljYWwgc2hlYXRoIHRoYXQgaXMgc3ByZWFkIHRocm91Z2hvdXQgdGhlIGJvZHkgYW5kIHNlcnZlcyB0byBjb21wYXJ0bWVudGFsaXplIHZhcmlvdXMgbGF5ZXJzIG9mIHRpc3N1ZSwgc3VjaCBhcyBtdXNjbGVzLCBuZXJ2ZXMgYW5kIGJsb29kIHZlc3NlbHMuIApJIGFscmVhZHkgcHJvdmlkZWQgeW91IHNvdXJjZXMgdGhhdCBjb21wbGV0ZWx5IGRlYnVuayB0aGF0IGJ1bGxzaGl0IGZvcmJlcyBhcnRpY2xlLCBhbmQgc2hvd2VkIHlvdSBhIGRpcmVjdCBxdW90ZSB0aGF0IHN0YXRlcyB0aGF0IG5lYXJseSA3MCBwZXJzb24gb2YgdGhlIHBlb3BsZSBvbiB0aGUgc291cmNlIHlvdSBwcm92aWRlZCB3ZXJlIGxpdGVyYWxseSBhbGwgYm9ybiBpbnRvIG1pbGxpb24gZG9sbGFyIGZhbWlsaWVzLiAKRmFpciBwb2ludHMsIGJ1dCBoZSB3YXMgYWxzbyBub3QgZ29pbmcgdG8gZ2V0IHN1cHBvcnQgZnJvbSB0aGUgbGVnYWN5IEROQyBzaW5jZSBoZSBsYXJnZWx5IHNwZW50IGhpcyBlbnRpcmUgcG9saXRpY2FsIGNhcmVlciBhcyBhbiBpbmRlcGVuZGVudCB1cCB1bnRpbCBoZSBjaG9zZSB0byBydW4gZm9yIHByZXNpZGVudC4gClVzZSAnRlJJRU5EUycgdG8gZ2V0IDIwJSBvZmYgb24geW91ciBvbmxpbmUgcHVyY2hhc2UuIApDYXJwZG9nMTEyICAzNyBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCklmIHlvdSd2ZSBhbHdheXMgd29uZGVyZWQgd2hhdCBmaXRuZXNzIHBsYW4gaXMgcmlnaHQgZm9yIHlvdSwgd2UgaGF2ZSBhIHZhcmlldHkgb2YgcGxhbnMgd2l0aCBlYXN5IHRvIHJlYWQgbGF5b3V0cy4gWW91IGNhbiBhbHNvIGxlYXJuIGhvdyB0byB1c2UgYXJvbWF0aGVyYXB5IGFuZCBoeXBub3RoZXJhcHkgdG8gY3JlYXRlIGEgYmV0dGVyIHlvdS4uIApQYWludGluZ3Mgd2VyZSBzdGlsbCBtYWlubHkgZm91bmQgb24gdmFzZXMgYW5kIG90aGVyIHBvdHRlcnkuIEluc3RlYWQgb2YgZ2VvbWV0cmljIHBhdHRlcm5zIHZhc2VzIHdlcmUgbm93IGRlY29yYXRlZCB3aXRoIHBpY3R1cmVzIG9mIHBsYW50cyBhbmQgbXl0aG9sb2dpY2FsIGZpZ3VyZXMuIFRoZSBtb3RpZnMgd2VyZSBwYWludGVkIGluIGJsYWNrIGdsb3NzeSBjbGF5IG9uIGEgYmFja2dyb3VuZCBvZiBsaWdodGVyIGNsYXksIHdoaWNoIGdhdmUgdGhpcyB0ZWNobmlxdWUgdGhlIG5hbWUgJ0JsYWNrIEZpZ3VyZSBQYWludGluZycuIERldGFpbHMgd2VyZSBpbmNpc2VkIGludG8gdGhlIGJsYWNrIGNsYXkuIER1cmluZyB0aGUgQXJjaGFpYyBQZXJpb2QgdGhlIGZpcnN0IGtub3duIG11cmFscyB3ZXJlIGFsc28gY3JlYXRlZCwgcHJvYmFibHkgaW5mbHVlbmNlZCBieSB0cmFkaXRpb25zIG9mIHRoZSBHcmVla3MnIG5laWdoYm91cnMgaW4gQW5hdG9saWEuIFNtYWxsZXIsIHBvcnRhYmxlIHBpY3R1cmVzIHdlcmUgdXNlZCBhcyBvZmZlcmluZ3Mgb3IgaW4gZnVuZXJhcnkgcml0ZXMuIEluIHNvbWUgY2FzZXMgcGljdHVyZXMgZXZlbiBzaG93IHRoZSBhcnRpc3QncyBzaWduYXR1cmUuCk92ZXJ2aWV3IGZvciB3aGl0ZWJhbmRpdApUb21vcnJvdyBpcyB0aGUgYmlnZ2VzdCBkYXkgb2YgdGhlIHRvdXIgICBsb29raW5nIGZvcndhcmQgdG8gbW9yZSBjbGltYmluZyBhbmQgMjA5a20uClRoZSBnb2FsLCBhY2NvcmRpbmcgdG8gdGhlIGZlZGVyYWwgZ292ZXJubWVudCwgaXMgZm9yIGNvbXBhbmllcyBvZiBhbGwgc2l6ZXMsIGFjYWRlbWlhIGFuZCB0aGUgbm9uIHByb2ZpdCBzZWN0b3IgdG8gY29sbGFib3JhdGUgb24gbmV3IHRlY2hub2xvZ2llcywgdG8gc3B1ciBlY29ub21pYyBncm93dGggYW5kIGNyZWF0ZSBqb2JzLiAKSSBjYW1lIHVwIGF0IGEgdGltZSB3aGVuIGdhbWVzIHdlcmUgcHJldHR5IGVhc3kuIApJdCwgYWJicmV2aWF0ZWQgYXMuIFRIRSBLSU5HIE9GIEZJR0hURVJTICc5OCBVTFRJTUFURSBNQVRDSCBGSU5BTCBFRElUSU9OLCBmcmVlIGFuZCBzYWZlIC4gCllvdXIgYWJpbGl0eSB0byByZWNvZ25pemUgdGhlIGFib3ZlIGVhcmx5IHdhcm5pbmcgc2lnbnMgY291bGQgZ2l2ZSB5b3UgdmFsdWFibGUgc2Vjb25kcyBpbiB3aGljaCB0byBhY3QsIHBvdGVudGlhbGx5IHNhdmluZyB5b3Vyc2VsZiBvciBhdmVydGluZyBkaXNhc3Rlci4KSXQgd2FzIGFuIGluaGVyaXRhbmNlLiAKVGhhdCBpcyB3aGF0IGhhcyBoYXBwZW5lZC4gCkNFUyBoYXMgdHJpZWQgdG8gbWFrZSBzb21lIGNvbmNlc3Npb25zLiBGb3IgZXhhbXBsZSwgaXQgb2ZmZXJzIHByaXZhdGUgcG9kcyBmb3Igd29tZW4gdG8gcHVtcCBicmVhc3QgbWlsayBhdCB0aGUgZXZlbnQuIEJ1dCBpdCBkb2Vzbid0IG9mZmVyIGNoaWxkIGNhcmUgc3VwcG9ydCwgdW5saWtlIHRoZSBzbWFsbGVyIEdyYWNlIEhvcHBlciBDZWxlYnJhdGlvbiBmb3IgV29tZW4gaW4gQ29tcHV0aW5nIGNvbmZlcmVuY2UsIGEgZmFsbCBldmVudCBhaW1lZCBhdCB3b21lbiBpbiBjb21wdXRlciBzY2llbmNlLgpTb21ldGltZXMgeW91IHdpbGwgZmluZCBrYXNpbm8gZ2FtZSB3aGljaCBtYXkgZ2l2ZSB5b3UgamFja3BvdCBhbmQgYm9udXMgZmVhdHVyZS4gVGhlIGphY2twb3QgY2FuIGJlIGEgZ29vZCBmZWF0dXJlIHRoYXQgZ3JlYXQgZm9yIHlvdSAuIE5vdCBza2lwLiAKTm8gYXBvbG9neSAsIGFza2VkIGZvciBteSBtb25leSBiYWNrLCBub3QgZm9ydGhjb21pbmcuIApSZWFkIHRoZSBndWlkZXMgb24gaG93IHRvIGRldGVybWluZSBhIGdvb2QgZml0LiBJdCBub3QgbGlrZSBmaW5kaW5nIHNob2VzIHRoYXQgZml0LCBpdCBhIGxpdHRsZSBtb3JlIGNvbXBsaWNhdGVkLiBJdCBva2F5IGlmIHdoZW4geW91IGZpcnN0IHB1dCB0aGVtIG9uIHlvdXIgdG9lcyBicnVzaCB0aGUgdGlwIG9mIHRoZSBib290LCBidXQgdGhleSBzaG91bGRuIGh1cnQsIGFuZCB0aGV5IHNob3VsZG4gZmVlbCBjcmFtcGVkIHdoZW4geW91IGJlbmQgeW91ciBrbmVlcy4uIApHZWJ0IGRpZSBnZXduc2NodGUgTWVuZ2UgU2FseiBpbiBlaW5lIFNjaHNzZWwgdW5kIG1pc2NodCBlaW4gd2VuaWcgdm9tIGwgZGF6dS4gTmVobXQgbGllYmVyIGVyc3RtYWwgbnVyIHdlbmlnIHZvbSBsLCBkZW5uIGlociBrbm50IHNwdGVyICAgamUgbmFjaCBnZXduc2NodGVyIEtvbnNpc3RlbnogICBpbW1lciBub2NoIGVpbiBiaXNzY2hlbiBkYXp1IGdlYmVuLiBOdW4ga29tbXQgZGVyIEFicmllYiBlaW5lciBCaW8gT3JhbmdlIHVuZCBldHdhcyBnZWhhY2t0ZXIgUm9zbWFyaW4gZGF6dS4gRWluIHBhYXIgVHJvcGZlbiB0aGVyaXNjaGVzIE9yYW5nZW5sIHp1ZmdlbiAobmVobXQgaGllciBhYmVyIGJpdHRlIGtlaW5lcyBhdXMgZGVtIFN1cGVybWFya3QsIGRhcyBtYW4gYWxzIFJhdW1kdWZ0IGJ6dy4gZnIgRHVmdGh1c2NoZW4gdmVyd2VuZGV0LCBzb25kZXJuIGVpbmVzIGF1cyBkZW0gUmVmb3JtaGF1cykuIEhhdCBkYXMgUGVlbGluZyBkaWUgZ2V3bnNjaHRlIEtvbnNpc3RlbnosIGZsbHQgZXMgaW4gZWluIGhic2NoZXMgR2xhcy4gV2VnZW4gZGVtIEFicmllYiBkZXIgT3JhbmdlbnNjaGFsZSB3cmRlIGljaCBzYWdlbiBjYS4gMiBXb2NoZW4uIFdlbm4gZHUgZXMgaW0gS2hsc2NocmFuayBhdWZiZXdhaHJzdCB1bmQgaW1tZXIgbWl0IGVpbmVtIExmZmVsIGVudG5pbW1zdCwgdmllbGxlaWNodCBzb2dhciAzIFdvY2hlbi4gVmllbGUgaGFiZW4gZXMgaW4gZGVyIER1c2NoZSBvZGVyIGJlaSBkZXIgQmFkZXdhbm5lIHN0ZWhlbiwgZGEga29tbXQgYmVpbSBFbnRuZWhtZW4gc2Nob24gbWFsIFdhc3NlciByZWluIHVuZCBlcyBpc3Qgb2Z0IHNlaHIgd2FybSBpbSBCYWRlemltbWVyIGRhcyBzaW5kIEZha3RvcmVuIGRpZSBzaWNoIGF1ZiBkaWUgSGFsdGJhcmtlaXQgbmVnYXRpdiBhdXN3aXJrZW4uIEljaCB3ZXJkZSBtYWwgZWluIFBlZWxpbmcgUmV6ZXB0IHBvc3RlbiwgZGFzcyBzaWNoIGF1ZiBqZWRlbiBGYWxsIG1laHJlcmUgV29jaGVuIGhsdCwgZGEgbCB1bmQgU2FseiBhbiB1bmQgZnIgc2ljaCBuaWNodCBzbyBzY2huZWxsIHZlcmRlcmJsaWNoIHNpbmQgClRoZXNlIGNvbXBldGl0aW9ucyBnZW5lcmFsbHkgcHJvbW90ZSBhIGxlc3Mgc3VidGxlIGZvcm0gb2YgcHVzaGluZyBoYW5kcywgd2hlcmUgcGFzc2l2ZSBUaW5nIEppbmcgaXMgbm90IGVtcGhhc2lzZWQgYXMgbXVjaCBhcyBpbiBwdXJlIHRyYWluaW5nLiAKVGhleSBkaXNhcHBlYXJlZCBmb3IgYSBsb25nIGFzcyB0aW1lIHdoZW4gdGhleSBzdGlsbCBoYWQgYSBtdXN0YXJkL2tldGNodXAgc2xhc2ggZGVzaWduIHdoaWNoIHdhcyBnb2QgYXdmdWwuIApXb21lbiB3aG9zZSBkaXNhcHBlYXJhbmNlIHdvbiByYWlzZSBhIGJpZyBmdXNzLiBNZWRpYSBjb3ZlcmFnZSBpcyBhIHRyYWZmaWNrZXIgd29yc3QgbmlnaHRtYXJlLiAKVGhlc2UgZmVlcyBhcmUgYWJvdXQgJDE1IGFuZCAkMzAwLCByZXNwZWN0aXZlbHkuLiAKMSB0aGUgd29yZCBvZiB0aGUgdG8gbWUsIHNheWluZywgb2YgbWFuLCBzZXQgeW91ciBmYWNlIGFnYWluc3QgR29nLCBvZiB0aGUgbGFuZCBvZiBNYWdvZywgdGhlIHByaW5jZSBvZiBSb3NoLCBhbmQgVHViYWwsIGFuZCBwcm9waGVzeSBhZ2FpbnN0IGhpbSwgc2F5LCBzYXlzIHRoZSBMb3JkIEJlaG9sZCwgSSB5b3UsIE8gR29nLCB0aGUgcHJpbmNlIG9mIFJvc2gsIE1lc2hlY2gsIGFuZCBUdWJhbC4gCkp1c3QgZXllYmFsbGluZyB5b3VyIHRlYW0sIEknbSBndWVzc2luZyB5b3UncmUgYWxzbyBwdW50aW5nIHBvaW50cyBub3cgKGl0J3MgZ2VuZXJhbGx5IGhhcmQgdG8gcHVudCBvbmUgd2l0aG91dCBhbHNvIHRoZSBvdGhlcikgVGhhdCBtZWFucyB5b3UncmUgcHVudGluZyAzIGNhdHMsIHNvIHlvdSByZWFsbHkgbmVlZCB0byBtYWtlIHN1cmUgdG8gZG9taW5hdGUgdGhlIG90aGVyIDYuIEJsb2NrcyBhbmQgcmVib3VuZHMgYXJlIG9idmlvdXNseSBncmVhdCwgc3RlYWxzIGFyZSBnb29kLCBmZyUgaXMgZGVjZW50LiBidXQgYXNzaXN0cyBhbmQgVE8gYXJlIGdvbm5hIGJlIHRvdWdoIHRvIGJhbGFuY2UuCkZyLiAKVG8gcG90ZW50aWFsbHkgaGlnaGxpZ2h0IHRoaW5ncyBhIGJpdCBiZXR0ZXIsIGNvbnNpZGVyIHRoZSBhYm92ZSB3aXRoIHRoZSBleGFtcGxlIG9mIEdhbWUgb2YgVGhyb25lcy4gRXZlcnkgc2Vhc29uIHNjb3JlcyBvZiB2aWV3ZXJzIGdvIGJhY2sgdG8gcmVhZCB0aGUgcmVsZXZhbnQgYm9va3MgYW5kIHNlY3Rpb25zIHRoYXQgaGF2ZSBiZWVuIGNvdmVyZWQuIFRoZXJlIGFyZSB3aG9sZSB3YXRjaCBncm91cHMgZGVkaWNhdGVkIHRvIHJlYWRpbmcgb25seSB1cCB0byB3aGF0IGhhcyBiZWVuIGNvdmVyZWQgYnkgdGhlIHR2IHNob3cuIFRoZSBzaG93IGlzIGFsc28gZmFtb3VzIGZvciBjdXR0aW5nIHNjZW5lcyBhbmQgaW50ZXJhY3Rpb25zIGFuZCBpbmZvcm1hdGlvbiwgb25seSBmb3IgdGhpbmdzIHRvIGJlIHJldmVhbGVkIGluIGEgZGlmZmVyZW50IHdheSBsYXRlciBvbiwgb3IsIHdoZW4gbm90IHJldmVhbGVkLCBjdXQgdG8gYW4gZXh0ZW50IHRoYXQgdGhlIHNraXBwZWQga25vd2xlZGdlIHdhcyBub3QgbmVjZXNzYXJ5IGluIHRoZSBmaXJzdCBwbGFjZSAgIG1ha2luZyB0aGUgc2hvdyBvcGVyYXRlIGFzIGEgYml0IG9mIGEgc2VwYXJhdGUgZW50aXR5IGF0IHRpbWVzLgpTbGVlcCB0cm91YmxlcyBjYW4gb2NjdXIgdG8gYW55IGZvbGtzLiBFdmVyIHN0YXJlIGF0IHRoZSBjbG9jayBkdXJpbmcgc2V4IGFuZCBncm9hbiBhcyBpbmRpdmlkdWFsIHdobyBpcyBhbHdheXMgeW91J3ZlIGdvdCBhIGJ1c3kgZGF5IHRvbW9ycm93IHRoZW4gY29ycmVjdCBtb3JlIGFueGlvdXMgYmVjYXVzZSBvZiB0aGUgbGFjayBvZiBzbGVlcD8gQSBwZXJzb24gdG9zcyBhbmQgdHVybiBkdXJpbmcgdGhlIG5pZ2h0IHRvIGEgbWFzc2l2ZSBhcnJheSBhbmQgYXdha2UgZ3JvZ2d5IGFuZCB0aXJlZD8gSWYgdGhhdCBpcyB0aGUgY2FzZSBkbyBub3Qgd29ycnkuIEl0IGhhcHBlbnMgdG8gYSB0ZXJyaWZpYyBkZWFsIG9mIGV2ZXJ5ZGF5LiBIdWdlIGFiaWxpdHkgdGhlIGJlc3Qgd2F5cyB0byBhbG9uZyB3aXRoIHRoaXMgaXMgdG8gdGFrZSBhIGdyZWF0IGFsbCBuYXR1cmFsIGRlZXAgc2xlZXAgc3VwcGxlbWVudC4KQSBMYXMgVmVnYXMgZGVhbGVyIGZpbGxlZCB1cyBpbiBvbiB3aGF0IGFuZCBob3cgdG8gcGxheSAiVGV4YXMgSG9sZCAnZW0iIGFuZCBsaWZlIGhhcyBuZXZlciBiZWVuIHRoZSBzYW1lLiAKVGhlZmlnaHQgd2lsbCBhbHNvYmUgYmVhbWVkIGludG8gOTUgbWlsbGlvbiBob21lcyBpbiB0aGUgVVMsIG1ha2luZyBpdCB0aGUgbW9zdCB3YXRjaGVkIGJveGluZyBldmVudCBvbiBmcmVlIHRvIGFpciBzaW5jZSBNdWhhbW1hZCBBbGkgZm91Z2h0IExlb24gU3BpbmtzIGluIDE5NzguIENhbiBIb3JuIGRvIGl0PyAiSSBuZXZlciBzZWVuIGEgcmVkaGVhZCB3aG8gY291bGRuIGZpZ2h0LCIgc2FpZCBsZWdlbmRhcnkgQXVzdHJhbGlhbiB0cmFpbmVyIEpvaG5ueSBMZXdpcywgd2hvIHByZXBhcmVkIHdvcmxkIGNoYW1waW9uIEplZmYgRmVuZWNoIGFuZCB3YXMgcmVjZW50bHkgaW5kdWN0ZWQgaW50byB0aGUgSW50ZXJuYXRpb25hbCBCb3hpbmcgSGFsbCBvZiBGYW1lLiBKZWZmIEhvcm4gc2VuaW9yIGFkdmlzZWQgYWdhaW5zdCBzdWdnZXN0aW5nIGFzIG11Y2ggdG8gaGlzIHNvbi4gCkkgaG9wZSBub3RoaW5nIGJhZCBoYXBwZW5lZCB0byBteSBicm90aGVyIGJlY2F1c2UgaGUgd291bGRuIGJlIGFibGUgdG8gZXhwbGFpbiBvciBkZWZlbmQgaGltc2VsZi4gClRoZSBmbGlwIHNpZGUgb2YgQ2hpbGVzJ3MgY29tbWl0bWVudCB0byBlbnZpcm9ubWVudGFsbHkgcmVzcG9uc2libGUgYnVpbGRpbmcgaXMgaGlzIHBhc3Npb24gZm9yIGxvY2FsIGFuZCBzdXN0YWluYWJsZSBmb29kLiBJbiAxOTc5IGhlIGJvdWdodCB0aGUgU2FuZGJhciByZXN0YXVyYW50LCBvbiB0aGUgc2l0ZSBvZiBhIDE5MTIgYmF0aGhvdXNlIGJ1aWx0IHRvIGFjY29tbW9kYXRlIHZpc2l0b3JzIHdobyBjYW1lIHRvIHRoZSBpc2xhbmQgYnkgZmVycnkuICJJIGJvdWdodCBteSBmaXJzdCBiZWVyIGhlcmUgd2hlbiBJIHdhcyAxNSB5ZWFycyBvbGQsJycgaGUgcmVjYWxscyB3aXRoIGEgbGF1Z2guIApBbmQgbW9zdCBvZiB1cyBzZWVrIHRvIGJlIGNvbXBlbnNhdGVkIGZvciBvdXIgZWZmb3J0IHdpdGggbW9uZXksIHByZWZlcmFibHksIG9yIHdpdGggZnJlZSBzdHVmZiBvZmZlcmVkIGluIGV4Y2hhbmdlIGZvciBvdXIgd29yay4gCkV2ZXIgdGFrZSBjb2xkIG1lZGljaW5lIGFuZCBkcml2ZT8gSG93IGFib3V0IGRyaXZlIHNsZWVweT8gUHJlc2NyaXB0aW9uIG1lZGljYXRpb24gbGFiZWxlZCBub3Qgb3BlcmF0ZSBoZWF2eSBlcXVpcG1lbnQ/IEFsbCB0aGUgc2FtZSBleGFjdCB0aGluZywgeW91IG5ldmVyIHNlZSBhbnlvbmUgZ2V0IGNoYXJnZWQgZm9yIGl0IHRob3VnaC4gClNvLCBoZXJlJ3MgdGhlIGRlYWwgIGFib3J0aW9uIGlzIHB1dCB0byBhIHB1YmxpYyByZWZlcmVuZHVtLCB3aXRoIHB1YmxpYyB2b3RpbmcgKHlvdXIgbmFtZSBhbmQgaG93IHlvdSB2b3RlZCBpcyBsb2dnZWQgaW4gYSBuYXRpb25hbCBkYXRhYmFzZSkuIElmIHRoZSBwcm8gbGlmZSByZWZlcmVuZHVtIHBhc3Nlcywgd2hlbiBhIGNoaWxkIGxpa2UgdGhpcyBpcyBib3JuIHRoZXJlJ3MgYSBsb3R0ZXJ5LiBXaGVuIHlvdXIgbnVtYmVyIGlzIGNhbGxlZCwgeW91IGdldCB0aGUga2lkLiAKSSByZWFsbHkgbG92ZSBDcmFja2Rvd24sIGl0IHdvdWxkIGJlIGEgc2hhbWUgZm9yIHRoZW0gdG8gY2FuIHRoZSBzZXJpZXMganVzdCBiZWNhdXNlIHRoZXkgdG9vayBhIHdyb25nIHR1cm4gb24gMy4gVGhlcmUgbm90aGluZyB3cm9uZyB3aXRoIHRoZSBnYW1lLCBpdCBncmVhdC4gVGhleSBqdXN0IGJ1aWx0IGZhbHNlIGV4cGVjdGF0aW9ucyBmb3IgYSBsb3Qgb2YgcGVvcGxlIGFuZCB0b29rIHRvbyBsb25nIHRvIHJlbGVhc2UgaXQuIENyYWNrZG93biBpcyBhIHZlcnkgc2ltcGxlIGtpbmQgb2YgZ2FtZSwgaXQgbm90IG1lYW50IHRvIGNvbXBldGUgd2l0aCB0aGUgbGlrZXMgb2YgR1RBIG9yIG90aGVyIGJpZyBBQUEgb3BlbiB3b3JsZCBnYW1lcy4gSXQganVzdCBtZWFudCB0byBiZSBhIGZ1biBjb2xsZWN0aW9uIHJ1biB0eXBlIG9mIGdhbWUsIGtpbmRhIGxpa2UgYSBwbGF0Zm9ybWVyIHdpdGggZ3VucyBhbmQgY2Fycy4KSGUgY2FuIGFsc28gcmFpc2Ugd2hpY2ggbWFrZXMgdGhlIGJldCBoaWdoZXIuIApXaHkgaXMgdGhhdD8gQW1lcmljYSBsZWFkcyB0aGUgd29ybGQgaW4gZHJ1ZyBjb25zdW1wdGlvbiwgYm90aCBwcmVzY3JpcHRpb24gYW5kIHNlbGYgbWVkaWNhdGlvbi4gClNvbWUgY2FzZXMgYXJlIGFsdW1pbnVtLCBsaWtlIERhdmlkJ3MsIGJ1dCBvdGhlcnMgYXJlIFJveWNlIGxlYXRoZXIuIEkgaGF2ZW4ndCBkZWNpZGVkIHlldCB3aGljaCBvbmUgSSB0aGluayBpcyBjb29sZXIgbG9va2luZy4uIAozLiAKSnVzdCBsYXN0IG1vbnRoLCB0aHJlZSBwb3B1bGFyIG9ubGluZSBwb2tlciBzaXRlcyAgIEZ1bGwgVGlsdCBQb2tlciwgUG9rZXJTdGFycyBhbmQgQWJzb2x1dGUgUG9rZXIgICB3ZXJlIHNodXRkb3duIGJ5IHRoZSBGQkksIGFuZCB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGFubm91bmNlZCBwbGFucyB0byByZWNvdmVyICQzIGJpbGxpb24gZnJvbSB0aGVtLCBhY2NvcmRpbmcgdG8gdGhlIExvcyBBbmdlbGVzIFRpbWVzLi4gCkFzIGZvciBtZXRob2RzL3N0eWxlcywgaXQgc2ltaWxhcmx5IHZhZ3VlLiAKSW4gZmFjdCwgaXQgb2Z0ZW4gc2VlbXMgdG8gZ2V0IHdvcnNlLiAKOTAlIHBsYXllcnMgd2hlbiB0aGV5IGNhbGwgdGhhdCBmbG9wIGFuZCB0aGFuIHJhaXNlIHR1cm4gYW5kIGphbSByaXZlciBoYXZlIDAgYmx1ZmZzIGFuZCB5b3UgYmVhdCBubyB2YWx1ZSBleGNlcHQgbWF5YmUgSlQuIApBIGNvbnZlcnNhdGlvbiB0byBleHBsb3JlIHRoZSBiZWxpZWYgdGhhdCB3ZSBjYW4gdGFwIGludG8gb3VyIGNyZWF0aXZlIHBvd2VyLCBvdXIgc2V4dWFsIGVuZXJneSBhbmQgdW5kZXJzdGFuZCBvdXIgaWRlbnRpdHkgYnkgZXhwbG9yaW5nIG91ciByZWxhdGlvbnNoaXAgd2l0aCBvdXIgc2Vuc2VzLgoiVGhlIGNhc2lub3Mgb24gdGhlIFN0cmlwICBoYXZlIHRvIG1ha2UgbW9yZSBtb25leSB0byBwYXkgZm9yIHRoZSBvcHVsZW50IGF0bW9zcGhlcmUuIFNvLCB0aGUgb2RkcyBhcmUgc2xpZ2h0bHkgYmV0dGVyIGluIGRvd250b3duIGNhc2lub3MgYW5kIGluIHRob3NlIGFyb3VuZCB0aGUgcGVyaW1ldGVyIG9mIExhcyBWZWdhcy4gVGhlIG1pbmltdW1zIGFyZSBsb3dlciBvZmYgdGhlIFN0cmlwLCB0aGV5IGhhdmUgYSBtdWNoIG1vcmUgY2FzdWFsIGF0bW9zcGhlcmUsIGFuZCB0aGV5IGRyYXcgbW9yZSBsb2NhbHMuLiAKQ29sbGVnZSBkZWdyZWVzIGluIGJ1c2luZXNzLCBhY2NvdW50aW5nLCBtYXJrZXRpbmcgYW5kIG1hbmFnZW1lbnQgYXBwbHkgdG8gdGhlIHJldGFpbCBlbnZpcm9ubWVudCwgb2ZmZXJpbmcgYW4gYWNhZGVtaWMgYmFja2dyb3VuZCB0aGF0IG1vc3QgY29tcGFuaWVzIGNhbid0IG1hdGNoIHdpdGggdGhlaXIgb3duIHRyYWluaW5nLiAKU29tZSBoYXZlIGEgY3Jhenkgc3ByZWFkLCBzb21lIGFyZSBvbiBwb2ludCBhbGwgdGhlIHRpbWUuIApJIHdvdWxkIGVpdGhlciBoYXZlIHRvIGxpdmUgc28gZmFyIG91dCBvZiB0b3duIHRvIG1ha2UgaXQgZmVhc2libGUgdGhhdCBpdCBqdXN0IG5vdCB3b3J0aCBpdC4uIApJIHJlYWxseSBsaWtlIHRoZSBBaXIgU2xpbmcgYnkgQWxwYWthIEdlYXIgYnV0IG5vdyB0aGF0IEkgaGF2ZSBhIHNld2luZyBtYWNoaW5lIEkgZG9uIHdhbnQgdG8gYnV5IGJhZ3MgYW55bW9yZSwgSSB3YW50IHRvIG1ha2UgdGhlbS4gU28gaGVyZSBpcyBteSBhdHRlbXB0IGF0IHJlY3JlYXRpbmcgdGhlIEFpciBTbGluZy4KQXMgZm9yIHdoYXQgaSBwaWNrIGluIHRoZSBiZWdpbm5pbmcgb2YgZWFjaCBnYW1lLCBJIHVzdWFsbHkgcHV0IEhlbnJ5IEt3YW4gaW4gdGhlIHByaW1lIGNsYXNzIG1lY2guIEdldHRpbmcgYXJvdW5kIGlzIHZlcnkgcG93ZXJmdWwgYW5kIGkgZmluZCBnZXR0aW5nIG15IHBhdGggYmxvY2tlZCBieSB2ZWsgdmVyeSBmcnVzdHJhdGluZy4gRXhjZXB0aW9ucyB0byB0aGlzIGFyZToKV2lsbCBMb2NoZWFkIGZvdXIgZ2FtZSBzdXNwZW5zaW9uIGZvciBhIGhlYWQgaGl0IG9uIEd1ZWxwaCBEbWl0cmkgU2Ftb3J1a292IGV4cGlyZXMganVzdCBpbiB0aW1lIGZvciBTYXR1cmRheSBob21lIGZpbmFsZSBhdCB0aGUgQnVkLiBJdCBhbHNvIGZpdHRpbmcgc2luY2UgdGhlIEtuaWdodHMgd2lsbCBob25vdXIgdGhlaXIgdGhyZWUgb3ZlcmFnZSBwbGF5ZXJzIExvY2hlYWQsIFJhYXltYWtlcnMgYW5kIEtldmluIEhhbmNvY2suIApJZiBhIG11c2NsZSBpcyBleHRyYSB0aWdodCB0aG91Z2ggdGhlIHRveGluIGlzIHNvcnQgb2Ygc3R1Y2suIE93IG93IGJ1cm5pbmchISBTT09PIGR1cmluZyBhIG1hc3NhZ2UgdG94aW5zIGFyZSBiZWluZyAicHVzaGVkIiBvdXQgYW5kIHJlbGVhc2VkLiBUaGF0IGlzIHdoeSBpdCBpcyBHUkVBVCBBTkQgSU1QT1JUQU5UIHRvIGRyaW5rIGxvdHMgb2Ygd2F0ZXIgYWZ0ZXIgYSBtYXNzYWdlIGFuZCBFVkVSWURBWSB0byBoZWxwIGVsaW1pbmF0ZSB3YXN0ZSBwcm9kdWN0IVdoZXJlIGFyZSB5b3UgZ29pbmcgdG8gc2Nob29sP1doZW4gSSB3YXMgaW4gc2Nob29sIGFsbCBJIHRob3VnaHQgd2FzIFdPVyB0aGlzIGlzIGdvaW5nIHRvIGJlIHNvIGVhc3kgSSBnb2luZyB0byBsZWFybiBob3cgdG8gbWFzc2FnZSBwZW9wbGUgYW5kIGNoYXJnZSA5MCBkb2xsYXJzIGFuIGhvdXIgYW5kIGJlIHJpY2ggYW5kIGRvIGxpa2UgMiBtYXNzYWdlcyA1IGRheXMgYSB3ZWVrIGEgZGF5IUl0IGlzIGEgbG90IG9mIGluZm9ybWF0aW9uLCBhbmF0b215LHBhdGhvbG9neSwga2luZXNpb2xvZ3ksIGV0aGljcywgdGVjaG5pcXVlLCBjbGluaWNhbC4gCkhlIGFsc28gc2xlcHQgaW4gdGhlIHNhbWUgYmVkIHdpdGggSm9yZGllIENoYW5kbGVyIGF0IENoYW5kbGVyJ3MgZmF0aGVyJ3MgaG91c2UuIFRoZSBwYXJlbnRzIHdlcmUgZGl2b3JjZWQuU28gZmFyLCBmaXZlIGJveXMgTWljaGFlbCBKYWNrc29uIHNoYXJlZCBiZWRzIHdpdGggaGF2ZSBhY2N1c2VkIGhpbSBvZiBhYnVzZTogSm9yZGllIENoYW5kbGVyLCBKYXNvbiBGcmFuY2lhLCBHYXZpbiBBcnZpem8sIFdhZGUgUm9ic29uLCBhbmQgSmltbXkgU2FmZWNodWNrLiAKU2VlbXMgaG9wZWZ1bCwgbGlrZSBtYXliZSB0aGluZ3MgY2FuIGdldCBiZXR0ZXIuIi4gCkFyZW4gdmlld2luZyBpdCBhcyBzb21ld2hlcmUgdG8gbGl2ZS4gSXQgYSBtb25leSBtYWtlci4gWW91IHVwIGFnYWluc3QgcGVvcGxlIHdobyBhcmUgYnV5aW5nIG11bHRpcGxlIHByb3BlcnRpZXMsIGZsaXBwaW5nIGl0LCB0cnlpbmcgdG8gcHVsbCBhIHByb2ZpdCwgTWNBbGlzdGVyIHNhaWQuCkkgdXNlZCB0byBoYXZlIGEgd2lkZSBub3NlIGFuZCB3YXMgYSB2ZXJ5IGhhcHB5IGNhbXBlciAoaGVhbHRoIHdpc2UpLCBhbHRob3VnaCBJIGRpZG4gbGlrZSB0aGUgd2F5IGl0IGxvb2tlZC4gTm93IEkgYWN0dWFsbHkgZW52eSBwZW9wbGUgd2hvIGhhdmUgbm9zZXMgbGlrZSBteSBvbGQgbm9zZSAoYW5kIGV2ZW4gc2VlIHRoZW0gYXMgYXR0cmFjdGl2ZSkgYW5kIHdoZW4gSSBzZWUgcGVvcGxlIHdpdGggbmFycm93IG5vc2VzIEkgZG9uIGtub3cgaG93IHRoZXkgaGF2ZSBsaXZlZCB0aGVpciB3aG9sZSBsaXZlcyBsaWtlIHRoYXQuIEkgZ3Vlc3MgbW9zdCBkb24ga25vdyBhbnkgb3RoZXIgd2F5IG9yIG1heWJlIHRoZXkgdXNlIGxlc3MgYWlyLCBJIGRvbiBrbm93LiBUaGUgcHJvYmxlbSBpcyBpbiBUViBhbmQgbW92aWVzIHRoZXkgYWx3YXlzIHNob3cgdGhlIGxvbmcgbmFycm93IG5vc2UgYXMgYSBzeW1ib2wgb2YgYmVhdXR5LiBOb3cgSSBkb24gdGhpbmsgaXQgbWVhbnMgYmVhdXR5LCBJIHRoaW5rIGl0IG1lYW5zIGRvY2lsZS4gSSB3YXMgc3Ryb25nZXIgYmVmb3JlIGFuZCB3b3VsZCBnaXZlIGFueXRoaW5nIHRvIGhhdmUgc3VyZ2VyeSB0byBnZXQgbXkgb2xkIHdpZHRoIGJhY2ssIGJ1dCBJIGRvbiBoYXZlIGFub3RoZXIgJDEyLDAwMC4KV2UgbXVzdCBnbyBvdXQgYW5kIGpvaW4gYSBsb2NhbCBrbml0dGluZyBncm91cCBvciBldmVuIGEgcmVsaWdpb3VzIGdyb3VwLCBpbnZpdGUgeW91ciBuZWlnaGJvcnMgZm9yIGRpbm5lciBvciBzdGFydCBhIGNvbW11bml0eSBnYXJkZW4uIGNhbm5vdCBzb2x2ZSBvdXIgc29jaWFsIGlzb2xhdGlvbiBieSB0ZWNobm9sb2d5ICBzb2NpYWwgbmV0d29ya3MsIGJsb2dnaW5nIGNvbW11bml0aWVzLCBhbmQgb25saW5lIGRhdGluZyBhcmUgZmluZSwgYnV0IHdlIGFjdHVhbGx5IG5lZWQgdG8gc3BlbmQgdGltZSBpbiB0aGUgc2FtZSBwaHlzaWNhbCBsb2NhdGlvbiB3aXRoIG90aGVyIGh1bWFuIGJlaW5nczkuIApIZSBldmVuIGZvdWdodCB0aHJvdWdoIHRoZSBhcGhhc2lhIHRvIHJlYWQgd2l0aCBtZSBiZWNhdXNlIGhlIGtuZXcgaG93IGltcG9ydGFudCBpdCB3YXMgZm9yIG15IGVkdWNhdGlvbi4gSSdtIHNvcnJ5IHlvdSBoYWQgdG8gZ28gdGhyb3VnaCBpdCwgdG9vLCBidXQgZ2xhZCB5b3UgYWxzbyBoYXZlIGF3ZXNvbWUgbWVtb3JpZXMgb2YgaG93IG11Y2ggaGUgbG92ZWQgeW91LiAKVGhhdCB3b3VsZCBoYXZlIG5ldmVyIGhhcHBlbmVkIGhhZCB0aGUgVVMgbm90IGdvdCBpbnZvbHZlZC4gCldlIGFsc28gY2FtZSB1cCB3aXRoIGEgZ2FtZSB3aGVyZSB3ZSB3aWxsIGNhbGwgb3V0IG91ciBudW1iZXIgcmF0aW5ncyBvZiB3aGF0ZXZlciBzb25nIHRoYXQgY29tZXMgb24gdGhlIHJhZGlvLCB3aGljaCBsZXRzIHVzIGtub3cgd2hlbiB0byBjaGFuZ2UgdGhlIHNvbmcgZm9yIHRoZSBvdGhlciBwZXJzb24ncyBzYWtlLCBhbmQgYWxzbyBoYXMgZm91bmQgdXMgYSBmZXcgbW9yZSBzb25ncyB3ZSBkaWRuJ3QgcmVhbGl6ZSB3ZSBhZ3JlZSBvbiEKT25kZXIga2VubmlzIGRlbGVuIGVuIHdldGVuc2NoYXAgYmVvZWZlbmVuIHZlcnN0YSBpayBtZWVyZGVyZSBkaW5nZW4uIFRlbiBlZXJzdGUgdmVyc3RhIGlrIG9uZGVyIGtlbm5pcyBkZWxlbiBlbiB3ZXRlbnNjaGFwIGJlb2VmZW5lbiBoZXQgZGVsZW4gdmFuIGJldHJvdXdiYXJlIGtlbm5pcyBtZXQgY29sbGVnYSdzIGVuIHBhdGludGVuLiAKTm90IGFsd2F5cywgaXQncyB1cCB0byB5b3VyIElTUCB0byBhc3NpZ24geW91ciBJUCBhZGRyZXNzIHRvIHRoZSBjZW50cmFsIGRldmljZSBvbiB5b3VyIGNvbm5lY3Rpb24gKHVzdWFsbHkgeW91ciByb3V0ZXIpLiAKQ2xhc3NpYyBQZXJpb2RUaGUgdGltZSBmcm9tIDUwMCAzMzYgQkMgd2FzIHRoZSBjbGltYXggb2YgR3JlZWsgYW50aXF1aXR5IGluIGFsbCBhc3BlY3RzIG9mIHBvbGl0aWNzLCBjdWx0dXJlIGFuZCBhcnRzLiAKRGVnZW5lcmF0aXZlIGNoYW5nZXMgd2VyZSBwcm9taW5lbnQgaW4gdmV0ZXJhbiBwbGF5ZXJzLCBhbmQgdGhlIHNhZ2l0dGFsIGRpYW1ldGVyIG9mIHRoZWlyIHNwaW5hbCBjYW5hbCBhdCBDMiB0byBDNiB3YXMgbG93ZXIgd2hlbiBjb21wYXJlZCB0byBhY3RpdmUgcGxheWVycyBhbmQgY29udHJvbHMuCk5vdyBhdCBsZXZlbCA2MCBjaGFyYWN0ZXJzIG15IFJSIGlzIGFjdHVhbGx5IGRvaW5nIGFsbW9zdCBhcyBtYW55IG9uZSBzaG90cyBhcyBEU0hHLiBJIG1lYW4sIG1vc3RseSBoZSBoaXR0aW5nIEV0cmlnYW4gb3IgRFQganVzdCB0byBwdXJnZSB0aGVpciBidWZmcywgYW5kIHRob3NlIG9uZXMgZG9uIGRpZSwgYnV0IEkgZmFjZWQgQXRybyB0ZWFtcyB3aXRoIG5vIHRhdW50ZXJzIGFuZCBSUiBjYW4gZWFzaWx5ICh3aXRoIGEgY3JpdCkgb25lIHNob3QgV0cgYWxsIG9uIGhpcyBvd24uIEFuZCBoZSBqdXN0IGEgc2luZ2xlIGV4YW1wbGUuIApJIGd1ZXNzIGhlIHRob3VnaHQgd2Ugd2VyZSBmcmllbmRzIChJIHdhcyByZWFsbHkgY29uZnVzZWQgYnkgdGhpcykuIApJdCdzIGRpZmZlcmVudCBmcm9tIGhpcyBiZWxlYWd1ZXJlZCBlZmZvcnRzIHRvIGJ1aWxkIHVuZGVyZ3JvdW5kIHR1bm5lbCBzeXN0ZW1zIGluIG90aGVyIGNpdGllcyBiZWNhdXNlIE11c2sgd2lsbCBiZSBwYWlkIGZvciBpdCBpZiB0aGUgY29udHJhY3QgaXMgYXBwcm92ZWQuIFByb2plY3RzIGluIExvcyBBbmdlbGVzIGFuZCBDaGljYWdvIGhhdmUgZHJhd24gb3Bwb3NpdGlvbiBhbmQgc2tlcHRpY2lzbSBmcm9tIHJlc2lkZW50cyBhbmQgb2ZmaWNpYWxzIGFib3V0IHdoZXRoZXIgdGhleSB3aWxsIGFjdHVhbGx5IG9wZW4uCkltIFp3ZWlmZWxzZmFsbCBrb3N0ZXQgZGVuIE1pbmlzdGVyIGRhcyBkZW4gSm9iLCB3ZW5uIGRlciBLYW56bGVyIGVpbmUgUG9zaXRpb24gdW5iZWRpbmd0IGR1cmNoc2V0emVuIHdpbGwuIEFiZXIgZGFzIHdpcmQgYmVrYW5udCAoc3B0ZXN0ZW5zLCB3ZW5uIGRlciBCdW5kZXNwcnNpZGVudCBzaWNoIGVya2xydCwgd2FydW0gZXIgZGVyICJFbnRsYXNzdW5nIiBzdGF0dGdlZ2ViZW4gaGF0KSwgdW5kIGh0dGUgc29taXQgZWluZSBnYW56IGVpZ2VuZSBXaXJrdW5nLgpIb3cgZG8geW91IGNoZWF0IGF0IHBva2VyCkluIGZhY3QsIGl0cyBwb3B1bGFyaXR5IG9ubGluZSBjYW4gYmUgZ2F1Z2VkIGJ5IHRoZSBmYWN0IHRoYXQgYXMgbWFueSBhcyAxNC41IG1pbGxpb24gcGVvcGxlIHdvcmxkd2lkZSBwbGF5IHBva2VyIG9ubGluZSBhdCBsZWFzdCBvbmNlIGEgbW9udGggZm9yIG1vbmV5LCBhY2NvcmRpbmcgdG8gdGhlIG1vc3QgcmVjZW50IHJlc2VhcmNoLiBUaGUgdmVyeSBmYWN0IHRoYXQgaXQgY2FuIGJlIHBsYXllZCBvbmxpbmUgaXMgdGhlIGJpZ2dlc3QgcmVhc29uIGZvciBpdHMgcG9wdWxhcml0eS4gCldlbGwsIGl0IHR1cm5zIG91dCB0aGUgdGFncyB3ZXJlbiBleGFjdGx5IGx5aW5nLiAKSSBvZnRlbiB0aGluayBpdCBpbXBvcnRhbnQgdG8gcmVhbGx5IGRlbGluZWF0ZSBzZWN0aW9ucyBvZiBhIHBpZWNlIG9mIG11c2ljIHJlYWxseSB3ZWxsIHRvIG1ha2UgaXQgY2F0Y2h5LiBTaWEgIkNoYW5kYWxpZXIiIGlzIGEgZ29vZCBleGFtcGxlIG9mIHRoaXMuIFRoZSBjaG9ydXMgaXMgYWxsIHVwIGluIHRoaXMgaGlnaCwgcG93ZXJmdWwgcmVnaXN0ZXIsIGJ1dCBJIHRoaW5rIG9uZSByZWFzb24gd2h5IGl0IHNvIG1lbW9yYWJsZSBpcyB0aGF0IGl0IGNvbnRyYXN0cyBzbyBzaGFycGx5IHdpdGggdGhlIHNvcnQgb2YgbG93IGVuZCBzaGUgdXNlcyBpbiB0aGUgdmVyc2UuIEl0IG1ha2VzIGl0IGZlZWwgbGlrZSB0aGUgaG9vayAiZXhwbG9kZXMgb3V0IiBpbiBhIHdheS4gIkZpcmV3b3JrIiBieSBLYXR5IFBlcnJ5IGRvZXMgYSBzaW1pbGFyIHRoaW5nLCBidXQgaXQgd29ya3MgaW4gYSByZWFsbHksIFJFQUxMWSBuaWNlIGJ1aWxkIHVwIHRvIHRoZSBjaG9ydXMgaW4gdGhlIHByZSBjaG9ydXMsIGxpa2UgdGhlIGFzY2VudCBvZiBhIGZpcmV3b3JrIGludG8gdGhlIG5pZ2h0IHNreSB3aGljaCB0aGVuICJleHBsb2RlcyIgYXQgdGhlIGNob3J1cy4KX01FU2lpaSAgOCBwb2ludHMgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KSG93IFRvIEdldCBUaGUgRnVsbCBWZXJzaW9uIE9mIE1pbmVjcmFmdCBGb3IgRnJlZSBPbiBUYWJsZXQgID4gPiA+ID4gbWluZWNyYWZ0IHRhYmxldCBtaW5lY3JhZnQgdGFibGV0IGNhc2UgbWluZWNyYWZ0LiAKVGhlcmUgYXJlIHRhbGwsIGlyb24gZmVuY2UgZ2F0ZXMgb24gdGhlIG90aGVyIHNpZGUgd2hlcmUgdGhvdXNhbmRzIG9mIHNwaWRlcnMgb2YgYWxsIHNpemVzIGxpdmUgICB3ZSBjYWxsIGl0IFNwaWRlciBBbGxleSAgIGFuZCB3ZSdsbCBzdG9wLCBldmVyeSB0aW1lLCB0byBjbGFpbSB3aGljaCBvbmUgaXMgdGhlIGJpZ2dlc3QuIApMb3lhbHR5IGlzbiBhYm91dCB3aG8gcmVzcGVjdHMgdGhlc2UgaW1hZ2luYXJ5IHJlbGF0aW9uc2hpcCBib3VuZGFyaWVzIHlvdSBpbnNpc3RpbmcgZXhpc3QuIE15IGJlc3QgZnJpZW5kLCB3aG9tIEkgbWV0IHdoZW4gaSB3YXMgNSwgZGF0ZWQgYSBndXkgZm9yIGEgY291cGxlIG9mIG1vbnRocyBhbmQgZGVjaWRlZCBzaGUgZGlkbnQgbGlrZSBoaW0uIApJIGtuZXcgdGhhdCBEZWxhd2FyZSB3YXMgbW92aW5nIGluIHRoYXQgZGlyZWN0aW9uLiAKVmVudXMsIGJyaWdodCBhbmQgc2lsdmVyeSwgc2hvbmUgd2l0aCBoZXIgc29mdCBsaWdodCBsb3cgZG93biBpbiB0aGUgd2VzdCBiZWhpbmQgdGhlIGJpcmNoIHRyZWVzLCBhbmQgaGlnaCB1cCBpbiB0aGUgZWFzdCB0d2lua2xlZCB0aGUgcmVkIGxpZ2h0cyBvZiBBcmN0dXJ1cy4gCk9uY2UgSSB3cmFwcGVkIG15IGhlYWQgYXJvdW5kIHRoZSBpbml0aWFsbHkgYmFmZmxpbmcgcnVsZXMgb2Ygc29tZSBvZiB0aGUgY2FyZCBnYW1lcywgSSBlbmpveWVkIFNlZHVjZSBNZSBpbiB0aGUgc2FtZSB3YXkgSSBlbmpveSBiZWluZyBkaXN0cmFjdGVkIGJ5IHRoZSBvY2Nhc2lvbmFsIGdhbWUgb2Ygc29saXRhaXJlLiAKVGhlIGN1cnJlbnQgYnVzaW5lc3MgcGxhbiB3aWxsIHNlZSB0aGUgY291cnNlIHJlY29uZmlndXJlZCB0byBhbGxvdyBmb3IgYSA0MiBsb3QgYmF0dGxlYXhlIHN1YmRpdmlzaW9uIGJlc2lkZSBEdW5tb3JlIFJvYWQsIHdoaWNoIGl0IGlzIGhvcGVkIHdpbGwgbWFrZSBhIHByb2ZpdCBvZiAkNSBtaWxsaW9uIG9uY2UgZGV2ZWxvcG1lbnQgY29zdHMgYXJlIHRha2VuIGludG8gYWNjb3VudC4gVGhlIGhvdGVsIHdpbGwgYmUgdXBncmFkZWQgdG8gYWNjb21tb2RhdGUgMTAgcG9rZXIgbWFjaGluZXMuIEluIHRoZSAyMDEzIDE0IGZpbmFuY2lhbCB5ZWFyIHRoZSBnb2xmIGNvdXJzZSBvcGVyYXRpb25hbCBsb3NzIHdhcyByZXBvcnRlZCBhdCAkMjQzLDAwMCwgYW4gaW1wcm92ZW1lbnQgb24gdGhlICQ1MTAsMDAwIGxvc3MgcmVwb3J0ZWQgaW4gMjAxMiAxMy4gClRyYW5zZ2VuZGVyZWQgaW5kaXZpZHVhbHMpIHdpbGwgbWFrZSB0aGVtIHZ1bG5lcmFibGUgaW4gdGhlIG5leHQgZWxlY3Rpb25zLi4gCkEgMjAxMCBzdHVkeSBpbiB0aGUgSm91cm5hbCBvZiBBcHBsaWVkIFBoeXNpb2xvZ3kgZm91bmQgdGhhdCB3aGVuIGhlYWx0aHkgbWVuIGxpbWl0ZWQgdGhlaXIgbnVtYmVyIG9mIGZvb3RzdGVwcyBieSA4NSBwZXJjZW50IGZvciAyIHdlZWtzLCB0aGV5IGV4cGVyaWVuY2VkIGEgMTcgcGVyY2VudCBkZWNyZWFzZSBpbiBpbnN1bGluIHNlbnNpdGl2aXR5LCByYWlzaW5nIHRoZWlyIGRpYWJldGVzIHJpc2suIAoxNSBBcHIgMjAxMyAuIERvd25sb2FkIG1hdGVyaSBraG90YmFoIGp1bSdhdCBwaWxpaGFuLCBraG90YmFoIElkdWwgRml0cmksIGtob3RiYWggSWR1bCBBZGhhLiAKSXQgaXMgYWxzbyB3b3J0aCBub3RpbmcgaGVyZSB0aGF0IHdoZXJlIEkgd29yayB3ZSBvbmx5IHdvcmsgNSBkYXlzIGEgd2VlayBhbmQgd2l0aGluIGVhY2ggc3ByaW50IGEgZGF5IGlzIGxvc3QgdG8gbWVldGluZ3MgbGlrZSB0aGUgZGVtbywgaXRlcmF0aW9uIHBsYW5uaW5nIG1lZXRpbmcsIHJldHJvc3BlY3RpdmUgYW5kIHJldmlldyBzbyB0aGVyZSBpcyBvbmx5IDkgZGF5cyB0byBhIHNwcmludC4gQWRkaW5nIGluIHBhaXIgcHJvZ3JhbW1pbmcgZm9yIHNvbWUgdGhpbmdzLCB0aW1lIGZvciBmaXhpbmcgYnVncyBhbmQgb3RoZXIgbm9uIHByb2plY3Qgd29yayBsaWtlIHN1cHBvcnQgdGlja2V0cyBhbmQgaXQgYmVjb21lcyByYXRoZXIgaGFyZCB0byBzYXkgaG93IG1hbnkgaG91cnMgd2lsbCBiZSBzcGVudCBieSB0aGUgaGFuZGZ1bCBvZiBkZXZlbG9wZXJzIGluIHRoZSBzcHJpbnQuLiAKRGFucyBjZXJ0YWlucyBjYXNpbm9zLCBpbCBlc3Qgb2JsaWdhdG9pcmUgZGUgcGxhY2VyIHVuZSBtaXNlIEFudGUsIHRhbmRpcyBxdWUgZCdhdXRyZXMgYXV0b3Jpc2VudCBsZXMgam91ZXVycyAgbmUgcGFyaWVyIHF1ZSBzdXIgbGUgUGFpciBQbHVzICh2b2lyIGNpIGRlc3NvdXMpLgpTb21laG93IHRoZSBzaXggeWVhciBvbGQgbW9sYXIgaXMgdGhlIG1vc3QgaW1wb3J0YW50LCB0aGUgc2VhdCBvZiBpdHMgaW5mZWN0aW9uIGxlYWRpbmcgdG8gZGlzZWFzZSB0aHJvdWdob3V0IHRoZSBib2R5LiBJIGR1bm5vLiBJIHdvbiBldmVuIGdvIGludG8gdGhlIG90aGVyIHR3byBmb3IgZmVhciBvZiBzcG9pbGluZyB0aGVpciB0aXRsZWQgd29uZGVycy4uIApUaGUgY3JpbWluYWwgaW52ZXN0aWdhdGlvbiBhbmQgZWZmZWN0IG9uIHRoZSBpbmR1c3RyeSdzIEEgbGlzdGVycyBiZWNhbWUgdGhlIGJpZ2dlc3Qgc3Rvcnkgb2YgdGhlIHN1bW1lciwgcmV2ZWFsaW5nIGRlbGlnaHRmdWxseSBzb3JkaWQgZGV0YWlscyBsaWtlIGRhcmsgYmFja3Jvb20gY2x1YnMsIHNlY3JldGl2ZSBnYW1lcyBpbiBoaWdoIHByaWNlZCBob3RlbCBzdWl0ZXMgYW5kIFBvbnppIHNjaGVtZXMuIFJ1bW9ycyBhbmQgbmV3cyBvZiB0aGUgcG9rZXIgcmluZyB0cmlja2xlZCBvdXQgZm9yIHllYXJzIGFmdGVyd2FyZHMsIHRoYW5rcyB0byBjb3VydHJvb20gcHJvY2VlZGluZ3MgYW5kIHBhcGVyd29yayB0aGF0IHdhcyBzbG93bHkgcmVsZWFzZWQgdG8gdGhlIG1lZGlhLiBJdCBoYWQgYWxsIHRoZSBtYXJraW5ncyBvZiBhbiBleHBlbnNpdmUsIHRlc3Rvc3Rlcm9uZSBmaWxsZWQgYmxvY2tidXN0ZXIgbW92aWUuIEV2ZW4gTGVvbmFyZG8gRGlDYXByaW93YXMgaW52b2x2ZWQuClJveWFsIGNoYXJnZXM6IEVsaXphYmV0aCBhbmQgTWFyZ2FyZXQgaW4gMTkzMiB3aXRoIE1hcmlvbiBDcmF3Zm9yZApSZWdpc3RyYXRpb24gaXMgYSBicmVlemUsIGFuZCB3aXRoaW4gbWludXRlcyB5b3UgY2FuIGJlIHBhcnRpY2lwYXRpbmcgaW4gY2FzaCB0YWJsZXMgYW5kIG9ubGluZSB0b3VybmFtZW50cy4gVGhlIHRvdXJuYW1lbnRzIGFyZSByZWFsbHkgZ3JlYXQuIApUaGUgcHJpbWFyeSBkaXNlYXNlIG1lY2hhbmlzbSBhdCBwbGF5IGlzIGNocm9uaWMgaW5mbGFtbWF0aW9uLCBhbmQgY2hyb25pYyBpbmZsYW1tYXRvcnkgYW5kIGRlZ2VuZXJhdGl2ZSBjb25kaXRpb25zIGFyZSBlbmRlbWljIHRvIGdyYWluIGNvbnN1bWluZyBwb3B1bGF0aW9ucy4KQ2hvb3NlIEZPTEQgQU5EIFNLSVAsLiBUaGVuLC4gCkNoYXQgcm9vbXMsIHBvbGxzLCBwZW9wbGUncyBhcnQgZXRjLiBQZXJzb25hbGx5LCBJIGhhdGVkIGl0LCB0aGUgY29uY2VwdCB3YXMgZmluZSBidXQgdGhlIGV4ZWN1dGlvbi9sb29rIHJlYWxseSBuZWVkZWQgcG9saXNoaW5nLiAKSSBhbHNvIHVuZGVyc3RhbmQgd2FudGluZyB0byBvbmx5IGxldmVsIGEgRFBTIGJ1dCB0aGlzIGdhbWUgb2ZmZXJzIHNvIG11Y2ggdGhleSB3ZXJlIHJlYWxseSBsaW1pdGluZyB0aGVtc2VsdmVzIGFuZCB0aGF0IHNhZC4gU28gbWFueSBmYXRlcywgc2lkZSBxdWVzdHMsIGNyYWZ0aW5nIGFuZCBnYXRoZXJpbmcgY2xhc3NlcyB0byBsZXZlbC4gSXQgYSBzaGFtZSB0aGV5IHR1bm5lbCB2aXNpb25lZCBsaWtlIHRoYXQuIEkganVzdCB0cmFuc2ZlcnJlZCB0byBPbWVnYSBhbmQgaGF2ZSBoYWQgbm8gaXNzdWVzIHdpdGggcGVvcGxlIGluIGZhdGVzIGRpc2Nvbm5lY3RpbmcgbWUuIEkgaGF2ZSBubyBpc3N1ZXMgd2hlbiBwZW9wbGUgdXNlIHRoZWlyIGNob2NvYm9zIGJlY2F1c2UgSSBzbWFydCBlbm91Z2ggdG8ga25vdyB0aGVyZSB3YXlzIHRvIHR1cm4gb2ZmIHRoZWlyIGhlYWx0aCBiYXJzIGFuZCBuYW1lIHBsYXRlcy4gWU9VIENBTiBFVkVOIFBSRVNTIEEgQlVUVE9OIEFORCBISURFIE9USEVSIFBMQVlFUlMgQU5EIFRIRUlSIFBFVFMgRlJPTSBZT1VSIFNDUkVFTi4gSSBoYWQgdG8gZG8gaXQgZm9yIFJhdWhiYW4uIFRoaXMgcG9zdCBpcyBpbmNyZWRpYmx5IHdoaW55IGNvbnNpZGVyaW5nIHBlb3BsZSBvbiBOQSBoYXZlIDQgaG91ciBxdWV1ZXMgYW5kIHVzIG9uIEVVIGhhdmUgbm8gcXVldWVzIGF0IGFsbCwgYW5kIGlmIHdlIGRvIGhhdmUgcXVldWVzIHRoZWlyIDUgMTAgbWludXRlcyBtYXguIEplc3VzIENocmlzdC4gVGhlIHRoaW5ncyBwZW9wbGUgdXNlIHRoaXMgc3VicmVkZGl0IHRvIGJpdGNoIGFib3V0IGFzdG91bmQgbWUuCkJ1dCBDYW5hZGlhbnMgdW5kZXJzdGFuZCBvdXIgc2l0dWF0aW9uLiBUaGV5IHVuZGVyc3RhbmQgdGhhdCBhcyBBbWVyaWNhbnMgd2Ugd291bGQgaGF2ZSB0cm91YmxlIGdldHRpbmcgdGhlIHZhY2NpbmUgYXQgaG9tZSwgc2luY2UgdGhlIFVTIGlzIG1vcmUgM3JkIFdvcmxkIHRoYW4gZmlyc3Qgd2hlbiBpdCBjb21lcyB0byBoZWFsdGggY2FyZS4gCkQndW5lIHBhcnQsIGNlIGNvbXBsbWVudCBzJ2FkcmVzc2UgZW4gcHJpb3JpdCAgZGVzIGpldW5lcyBxdWkgY3VsdGl2ZW50IGxldXIgbXVzY3VsYXRpb24gY29tbWUgVmVuZXNzb24gYXUgZGJ1dCBkZSBzYSBjYXJyaXJlLiAKVW5lIHNhbGFkZSBkZSBxdWlub2EsIHNlbW91bGUsIGxlbnRpbGxlcywgLiBOZSBtYW5nZXogcGFzIGRlYm91dCBvdSBzdXIgdW4gY29pbiBkZSB0YWJsZSwgcHJlbmV6IHZvdHJlIHRlbXBzLiBBcHBvcnRleiB0b3V0IHZvdHJlIHJlcGFzIHBsdXR0IHF1ZSBkZSByZXRvdXJuZXIgcGx1c2lldXJzIGZvaXMgZGFucyBsYSBjdWlzaW5lIHZvdXMgc2VydmlyLgpIb3cgVG8gUmVtb3ZlIEFjcnlsaWMgTmFpbHMKRHVyaW5nIG15IHByZWduYW5jeSB3ZSBkaXNjdXNzZWQgdGhlIGhpZ2ggcG9zc2liaWxpdHkgb2YgcHBkLiBTbyBpbiB3YW50aW5nIHRvIHRha2UgY2FyZSBvZiBteXNlbGYgYW5kIG15IGJhYnkgbXkgaHVzYmFuZCBhbmQgaSBkZWNpZGVkIHRoYXQgaXQgd2FzIGJlc3QgdG8gZm9ybXVsYSBmZWVkLi4gClBhcyBkZSBiYXJzIGR1IENoaWxpLCBwYXMgZGUgY3JldmV0dGVzIGRlIFRoYSBkZSBjb3Vyc2UgYXUgY29jaG9uIGdyYWlzcyBkZSBwYWlsbGVzLCBwb2duZSBkYW5zIGxlIG5leiBkZXMgdG9ydHVlcy4gRXQgbGUgcGxhc3RpcXVlIGNyIGRlcyBvYyBkZSBkIGRhbnMgbGVzIG9jIGMgYmllbiBjb25udS4KU2xvd2x5IGV4aGFsZS4gCk15IGZvY3VzIG9uIEZJIGNvbWVzIGZyb20gdGhlIGZhY3QgdGhhdCBJIHdhcyB3aXRob3V0IG1vbmV5IHRvIGVhdCBhcyBhIHRlZW5hZ2VyIHdoZW4gbXkgY3VzdG9kaWFsIHBhcmVudCBhYmFuZG9uZWQgbWUsIGFuZCB5b3Ugb25seSBoYXZlIHRvIGJlIGh1bmdyeSBvbmNlLiBJIGFtIG5vdCBjb25jZXJuZWQgd2l0aCBvcHRpbWl6aW5nIG5lYXJseSBhcyBtdWNoIGFzIEknbSBjb25jZXJuZWQgd2l0aCBzZWN1cml0eS4gCkZvcmVzdGVyIGhlcmUuIApCbG93am9iIG9yIHNleCkgZm9yIGV4dHJhIG1vbmV5LCBidXQgZG9uIGNvdW50IG9uIGl0Li4gCkV2ZW4gdGhlIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXJzIG9mdGVuIGNvbWVzIHRvIHRoZSBwb2tlciBzaG9wcyBpbiB0aGUgbG9jYWwgbWFya2V0cyBhbmQgcHVyY2hhc2UgYSBsb3Qgb2YgdGhpbmdzLiAKVXNpbmcgdGhlIHNhY3JlZCBwbGFudCB3aXNkb20gb2YgdGhlIGFuY2llbnRzIGFuZCBob25vdXJpbmcgdGhlIHJoeXRobXMgb2Ygb3VyIGVhcnRoIGFuZCBjb3NtaWMgdW5pdmVyc2UsIGJsZW5kaW5nIHRoZSBtYWdpY2sgcG93ZXIgb2YgdGhlIGx1bmFyIGN5Y2xlIGludG8gb3VyIHByZXBhcmF0aW9ucywgb3VyIGNvbmNvY3Rpb25zIGFyZSBhbGwgbWFkZSB3aXRoIGludGVudCB0byBwcm9tb3RlIGhlYWxpbmcgb24gcGh5c2ljYWwsIGVtb3Rpb25hbCBhbmQgZXRoZXJlYWwgcmVhbG1zClRoZSBvd25lciwgUnVkb2xwaCBFZHdhcmRzLCB3YW50ZWQgbm8gcGFydCBpbiBpdC4gSXQncyBtb3JlIHRoYW4gYSBsaXR0bGUgdW51c3VhbCBmb3IgYSBidXNpbmVzcyB0byBnZXQgYSBiaWcgZ3JhbnQgaXQgZG9lc24ndCB3YW50LiBFZHdhcmRzIHByb3ZpZGVkIGhpcyBsYW5kIHRvIHRoZSBjaXR5ICAgdW5kZXIgZHVyZXNzIGhlIHdvdWxkIGxhdGVyIHNheS4gCkJ1dCB0aGV5IGdldCB0aHJvdWdoIGl0LCBkcmF3aW5nIHN0cmVuZ3RoIGZyb20gYSBmaWVyY2UgYW5kIGJlYXV0aWZ1bCBsb3ZlIGZvciBhIGNoaWxkIHRoZXkgaGF2ZSBuZXZlciBtZXQuIApMb29rIG5vIGZ1cnRoZXIgdGhhbiBsZWFkIHRyYWNrICJCYXN0YXJkcywiIHRoZSByb2xsaWNraW5nICJCb290cywiIHRoZSBKb2hubnkgQ2FzaCBoYXVudGVkICJIdW50IFlvdSBEb3duLCIgb3IgdGhlIERvbGx5IFBhcnRvbiBjb3ZlciAiT2xkIEZsYW1lcyAoQ2FuJ3QgSG9sZCBhIENhbmRsZSB0byBZb3UpLCIgd2hpY2ggY29tZXMgd2l0aCBhbiBhc3Npc3QgZnJvbSBQYXJ0b24gaGVyc2VsZi4gClN3ZWlkbWFubm4gIDIgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvClNvIGZhciwgUGZpemVyIGhhcyBzaWduZWQgZm9yIDgwMCwwMDAgc3F1YXJlIGZlZXQgb24gdGhlIHNldmVudGggdGhyb3VnaCAyMXN0IGZsb29ycyBvZiB0aGUgNjUgc3RvcnkgdG93ZXIsIHdoaWNoIHdpbGwgcmlzZSB0byAxLDAzMSBmZWV0Li4gCkRlcyBtYWNoaW5lcyBldCBkZXMgaG9tbWVzIDogbCdyZSBkdSB0cmFuc2h1bWFuaXNtZUxlcyBvcmRpbmF0ZXVycyBmb250IHNlbnRpciBsZXVyIHByc2VuY2UgZGFucyBwcmVzcXVlIHRvdXRlcyBsZXMgc3BocmVzIGRlIG5vcyB2aWVzLiBBdmVjIGxhIG1vbnRlIGRlcyBhc3Npc3RhbnRzIHZvY2F1eCBwZXJzb25uZWxzIGV0IC4KVGhlc2UgcGVvcGxlIGFyZSBmdWNraW5nIHBzeWNoby4gSXQgaW50ZXJlc3RpbmcgaG93IG11Y2ggdGhlIHJ1bGUgb2YgbGF3IGNhbiBmYWxsIGJ5IHRoZSB3YXlzaWRlIGZvciB0aGVpciBwaXNzYW50IHdvcmxkdmlldy4KIlRoZSBza2lsbCBsZXZlbCBvZiB0aGUgcGxheWVycyBoZXJlIGhhcyBpbmNyZWFzZWQgZHJhbWF0aWNhbGx5IGp1c3QgaW4gdGhlIGxhc3QgeWVhci4iIChXYXRjaCBUSU1FJ3MgdmlkZW8gIk1hY2F1J3MgV2lubmVycyBhbmQgTG9zZXJzLiIpLiAKKG15IGNoYXJhY3RlcikgQWxseSwgdGhlcmUgYSBzdWdnZXN0aW9uIG9mIGl0IGFzIHdlbGwsIHdoZW4gc2hlIHdhbGtzIHVwIHRoZSBzdGFpcnMgYW5kIHNheXMgdG8gaGVyIGZhdGhlciwga25vdyBhbGwgYWJvdXQgZHJ1Z3Mgc2hlIHNoYXJlZC4gVGhpbmsgaXQgaW1wb3J0YW50IHRvIGNhcmUgZm9yIHBlb3BsZSBhbmQgdG8gbG9vayBvdXQgZm9yIHRoZWlyIG1lbnRhbCBoZWFsdGguIFRoaXMgeWVhciwgc2hlIGNvbmZlc3NlZCB0aGUgZmlsbSBoYWQgY2hhbmdlZCBoZXIgYW5kIG1hZGUgaGVyIG1vcmUgY29uZmlkZW50OiAoZGlyZWN0b3IgYW5kIGNvIHN0YXIpIEJyYWRsZXkgKENvb3Blcikgd29yayB3YXMgcGhlbm9tZW5hbCBhbmQgdGhlbiBoYXZpbmcgaGltIGJlbGlldmUgaW4gbWUsIGl0IGdhdmUgbWUgbW9yZSBhbW11bml0aW9uIHRvIGJlbGlldmUgaW4gbXlzZWxmIGFuZCBJIGp1c3QgZmVlbCBzbyBibGVzc2VkIHRvIGhhdmUgaGFkIHRoYXQgZXhwZXJpZW5jZS4uIApGb3IgYSByYW5nZWQgY2hhcmN0ZXIsIGFuIGVsdmVuIGFyY2hlciBpcyBwcm9iYWJseSB0aGUgZWFzaWVzdC4gVGhlIGdhbWUgcGhpbG9zb3BoeSBpczogbnBjcyBhcmUgZGlzcG9zYWJsZXMsIHlvdXIgb3duIGNoYXJhY3RlciBpcyBub3QuIFlvdSBjYW4gcmFpc2UgeW91ciBmYWxsZW4gY29tcGFuaW9uIGF0IHRlbXBsZXMsIGJ1dCB3aGVuZXZlciB5b3VyIG1haW4gZGllcywgaXQgZ2FtZSBvdmVyLiAKV291bGQganVzdCBiZSBhbm5veWluZyBpZiB5b3Ugd2FudCB0byBjYXB0dXJlIG11bHRpcGxlIG1vbnN0ZXJzIG9uIGEgcXVlc3QsIGFuZCA0LiAKQW5kIEkgbm90IHNheWluZyB0aGF0IGZlbWFsZSBnYW1lcnMgZG9uIGxpa2UgdG8gcGxheSBhcyBzZXh1YWxseSBhdHRyYWN0aXZlIGNoYXJhY3RlcnMgb3IgYW55dGhpbmcgICB2ZXJ5IG11Y2ggb24gdGhlIGNvbnRyYXJ5LiAKV2l0aG91dCBjb3JyZWN0aW5nIHRoZXNlIHByb2JsZW1zLCBpdCBpcyBkaWZmaWN1bHQgb3IgaW1wb3NzaWJsZSB0byByZXN0b3JlIHRoZSBwYXRpZW50J3MgZW5lcmd5IGxldmVsLiAKQXMgaXQgdHVybnMgb3V0LCBiaW5nZSBkcmlua2luZyBhbG1vc3QgZXZlcnkgd2Vla2VuZCBmb3IgdGhlIGVudGlyZXR5IG9mIG15IDIwIGFuZCBlYXJseSAzMCBjYXVzZWQgbXkgbGl2ZXIgZW56eW1lcyB0byBiZSBlbGV2YXRlZC4gSW4gc29tZSBjYXNlcyBwZW9wbGUgd2l0aCBlbGV2YXRlZCBsaXZlciBlbnp5bWVzIGV4cGVyaWVuY2UgbWVudGFsIHNpZGUgZWZmZWN0cyBlc3BlY2lhbGx5IGlmIHlvdSBoYXZlIGFuIHVuIGRpYWdub3NlZCBhbnhpZXR5IGRpc29yZGVyIGxpa2UgSSBqdXN0IGZvdW5kIG91dC4KRm91bmQgb3V0IG9uZSBvZiBteSAiY2xvc2VzdCBmcmllbmRzIiB3YXMgcGF5aW5nIHNvbWVvbmUgdG8gZG8gc29tZSBraW5kIG9mIHdpdGNoY3JhZnQvdm9vZG9vIHRoaW5nIG9uIG1lIGJlY2F1c2Ugc2hlIGRvZXNuIHdhbnQgbWUgdG8gZG8gd2VsbCBvciBzdWNjZWVkLiBUaGVyZSBhcmUgc29tZSBjcmF6eSBmdWNraW5nIHBlb3BsZSBvdXQgdGhlcmUgbGlrZSB3dGYuClNvbWV0aW1lcyB0aGV5IHVzZSBhbnRlcywgYnV0IG1vc3QgZ2FtZXMgYmVnaW4gd2l0aCB0d28gcGxheWVycyBwb3NpdGlvbmVkIG9uIHRoZSBsZWZ0IHNpZGUgb2YgdGhlIGRlYWxlciBwbGFjaW5nIG91dCBhIHByZSBzZXR0bGVkIG1vbmV5IHNvIHRoZW4gdGhlcmUgaXMgYSBwcmltYXJ5IGZ1bmQgb3IgYW1vdW50IHRvIGdldCB0aGluZ3Mgc3RhcnRlZC4gCkFmdGVyIGJyZWFzdGZlZWRpbmcsIHdhc2ggeW91ciBuaXBwbGVzIGFuZCB3aXBlIGRyeS4gQXBwbHkgYW5vdGhlciB0aGluIGxheWVyIG9mIGxhbm9saW4gdG8geW91ciBuaXBwbGUuIApMb29raW5nIGJhY2sgb24gaGlzIGxvbmcgY2FyZWVyIGFzIGEgcHJvZmVzc2lvbmFsIGdhbWJsZXIgaW4gTGFzIFZlZ2FzLCBBbGFuIEJvc3RvbiBhY2tub3dsZWRnZWQgdGhhdCB2aXZpZCBlbW90aW9ucyBhbmQgaW1hZ2VzIG9mIGdhbWJsaW5nIGhhdmUgYWx3YXlzIGJlZW4gaW50ZXJ0d2luZWQgaW4gaGlzIHBzeWNoZS4gCllvdSBjYW4gZG8gYSBnZW5lcmljIHNwb3J0cyB0aGVtZSwgb2YgY291cnNlLCBidXQgYSBzaHJpbmUgdG8gYSBzcGVjaWZpYyB0ZWFtIChvciBhdCBsZWFzdCBjaXR5KSBpcyByZWFsbHkgdGhlIGJlc3Qgd2F5IHRvIHNob3cgeW91ciBzdHVmZi4uIApQb3N0ZWQgYnkgS2V2aW4gRy4KU28gbG90cyBvZiBsaW5lYXIgcHJvZ3Jlc3Npb25zIHVzaW5nIDYgOCBhbmQgMTAgSSByZW1lbWJlciBCb3JpbmcgQnV0IEJpZyA1eDEwIHJlYWxseSBoZWxwaW5nIG1lIHRvIGFkZCBzaXplIHdoZW4gSSB3YXMgc3RpbGwgdHJhaW5pbmcgb2hwIGEgbG90LiBMb3RzIG9mIHJlYXIgZGVsdCByYWlzZXMgYXMgd2VsbCwgZG9uZSBib3RoIHN0cmljdGx5IGFuZCBleHBsb3NpdmVseS4gClN0aWNrIHRvIGl0LiBJdCBpcyBub3JtYWwgdG8gZ2V0IGJlYXQgdXAgaW4geW91ciBmaXJzdCBzcGFycmluZyBzZXNzaW9uLiBXaGVuIHlvdSBhcmUgYmFkIGF0IGJveGluZyBhbmQgeW91IGdldCBoaXQgaW4gdGhlIGZhY2UgeW91IGZlZWwgaGVscGxlc3MsIGJ1dCB3aGVuIHlvdSBnZXQgYmV0dGVyIGF0IGJveGluZyBhbmQgeW91IGdldCBoaXQgaW4gdGhlIGZhY2UsIHlvdSB3aWxsIHN0YXJ0IHRoaW5raW5nIG9mIHdheXMgdG8gaGl0IHlvdXIgb3Bwb25lbnQgYmFjayBiZWNhdXNlIHlvdSB3aWxsIGhhdmUgYSBiaWdnZXIgYXJzZW5hbC4KRmFtaWxpZXMgYXJlIGFsc28gdXNpbmcgdGhlaXIgZWRpYmxlIGdhcmRlbnMgYXMgZWR1Y2F0aW9uYWwgdG9vbHMsIFJ1c3Qgc2F5cy5zaG93IHRoZWlyIGtpZHMsIHdlIHBsYW50IGEgc2VlZCByaWdodCBub3cgYW5kIGp1c3Qgd2FpdCBhIGZldyBtb250aHMgYW5kIHdhdGVyIGl0LCBhbmQgdGhlbiB0aGUgc3RyYXdiZXJyeSB3aWxsIGNvbWUgdGhyb3VnaCB0aGUgZ3JvdW5kIGFuZCB5b3UgY2FuIHBpY2sgaXQgYW5kIGVhdCBpdCBvciBiYWtlIGEgY2FrZSB3aXRoIGl0LCBzaGUgc2F5cy5SdXN0IGdyZXcgdXAgaW4gR2VybWFueSBhbmQgc2F5cyBoZXIgdGltZSBzcGVudCBvbiBoZXIgZ3JhbmRwYXJlbnRzIGZhcm0gbGVkIGhlciB0byBiZWNvbWluZyBhIGxhbmRzY2FwZSBhcmNoaXRlY3QuIFNoZSB3YXMgYWxzbyBpbmZsdWVuY2VkIGJ5IGhlciBmYXRoZXIsIHdobyB3YXMgYSBjaXZpbCBlbmdpbmVlci5qdXN0IGZlbHQgbGlrZSB0aGUgcmlnaHQgY29tYm8gb2YgbmF0dXJhbCBzY2llbmNlIGFuZCBjb25zdHJ1Y3Rpb24sIHNoZSBzYXlzLiAKSWYgeW91IGhlYXIgdGhleSBhcmUgbm90IHNob3dpbmcgdXAsIHRoZW4gd2hhdCdzIGxlZnQgb2YgdGhlIGNoaXBzIGFyZSByZW1vdmVkIGZyb20gdGhlIGdhbWUuIApBbWVyaWNhIHdhcyBoaXQgYnkgJ0h1cnJpY2FuZSBBcnRodXInIHRoYXQgZGF5LiBXaHk/IE1vc3Qgb2YgdGhlIHBlb3BsZSB3aWxsIGNvbnNpZGVyIGl0IGEgbmF0dXJhbCBwaGVub21lbm9uIG9mIG5hdHVyZS4gQnV0LCBHb2QgaXMgaW4gY29udHJvbCBvZiBuYXR1cmUuIERpZCBHb2QgY29udmV5ZWQgYSBtZXNzYWdlIHRvIHRoZSBOYXRpb24gb2YgVW5pdGVkIFN0YXRlcy4gSSBiZWxpZXZlIEhFIGRpZCEiRm9yIHdob20gdGhlIExPUkQgbG92ZXRoIGhlIGNvcnJlY3RldGg7IGV2ZW4gYXMgYSBmYXRoZXIgdGhlIHNvbiBpbiB3aG9tIGhlIGRlbGlnaHRldGguIgpBYm91dCB0aGUgYWxsb3dlZCBmb29kcywgZG9uIGJlIHRvbyByZXN0cmljdGl2ZSwgb3IgeW91IGdvaW5nIHRvIGZhaWwuIEh1bWFucyB3YW50IHZhcmlldHkgaW4gZm9vZHMuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbkFMQlVSWSBDb3VuY2lsIGlzIHJlc2lzdGluZyBwcmVzc3VyZSB0byBiZSBwYXJ0IG9mIGEgcmVzY3VlIHBhY2thZ2UgZm9yIHRoZSBmaW5hbmNpYWxseSB0cm91YmxlZCBOb3J0aCBBbGJ1cnkgU3BvcnRzIENsdWIuIFRoZSBjbHViIHN0YXRlcyBpdCBoYXMgYXBwcm9hY2hlZCB0aGUgY291bmNpbCB3aXRoIGEgc2FsZSBhbmQgbGVhc2UgYmFjayBwcm9wb3NhbCBmb3IgdGhlIGNhciBwYXJrLCBidXQgdGhlIGNvdW5jaWwgY2xhaW1zIHRvIGhhdmUgbm8ga25vd2xlZGdlIG9mIHRoZSBvZmZlci4gCkFsdGhvdWdoIHlvdSBoYXZlIGEgYnVsbGV0ZWQgbGlzdCBvZiB0aGluZ3MgeW91IGRpZCB3cm9uZywgSSBzdXJlIHlvdSBoYXZlIGEgbGlzdCAyIDV4IGFzIGxvbmcgYXMgdGhpbmdzIHlvdSBkaWQgcmlnaHQuCkRvbiBoYXZlIHRoZW0gYmFjayB0byBiYWNrLiBZb3UgbWF5IHRoaW5rICJvaCBidXQgSSB3YW50IHRoZW0gdG8gbm90IGJlIGxvbmVseS4iIGluIHRoZSBsb25nIHJ1biB5b3UgYmUgaGFwcHkgYmVjYXVzZSBpZiBub3QgeW91IG9ubHkgZmVlbCBvdmVyd2hlbG1lZCBiZWNhdXNlIGtpZHMgYXJlIGEgbG90IG9mIHdvcmssIGl0IG5vdCBqdXN0IGZlZWRpbmcvY2xvdGhpbmcvZ2l2aW5nIHRoZW0gdG95cy4gClRoZSB2YWxpZGl0eSBvZiBvdXIgZXN0aW1hdGVzIGRlcGVuZHMgb24gdGhlIGVxdWl2YWxlbmNlIGJldHdlZW4gdGhlIFVTIGFuZCBFVSBvZiByZWxhdGl2ZSBkaWZmZXJlbmNlcyBpbiB0aGUgY29zdCBlZmZlY3RpdmVuZXNzIG9mIGNoaXJvcHJhY3RpYyBhbmQgbWVkaWNhbCBwaHlzaWNpYW4gc2VydmljZXMuCkRvIG5vdCBhYnVzZSB0aGUgcmVwb3J0IGJ1dHRvbi4gCkFzIFRlbm5lc3NlIFdpbGxpYW1zIG9uY2Ugc2FpZCwgaGFzIG9ubHkgdGhyZWUgY2l0aWVzOiBOZXcgWW9yaywgU2FuIEZyYW5jaXNjbywgYW5kIE5ldyBPcmxlYW5zLiAKQnV0IHdoaXRlbmVzcywgYXMgdXN1YWwsIGdldHMgdG8gcGFzcyBieSBhcyBhbiB1bm1hcmtlZCByYWNlLCBqdXN0IGdvb2Qgb2wgQW1lcmljYW5zIHdlYXJpbmcgc2lsbHkgUmV2b2x1dGlvbmFyeSBXYXIgY29zdHVtZXMgYW5kIGNhcnJ5aW5nICh3aGl0ZSBzdWNjZXNzaW9uaXN0IG1vdmVtZW50KSB5ZWxsb3cgZmxhZ3MuLiAKVGhlcmUgY2FuIGJlIGxpdHRsZSBvciBubyBkb3VidCB0aGF0IHRoaXMgaXMgdHJ1ZSBvZiBtb25rZXlzOyBidXQgSSBuZXZlciBrbmV3IG9mIGEgcmVhbGx5IGdvb2QgY2FzZSBhbW9uZyBkb2dzIHNhdmUgdGhpcyBvbmUsIGFuZCBoZXJlIHRoZSBzaWducyBvZiBkaXNsaWtlIHdlcmUgdW4gZXF1aXZvY2FsLiAKSXQgaGVscHMgYXZvaWQgcHJvY3Jhc3RpbmF0aW9uIGV4Y3VzZXMsIGhlbHBzIHdpdGggbWFuYWdpbmcgdGltZSwgYW5kIGlmIHlvdSB3b3JrIGl0IHdlbGwgZW5vdWdoIHlvdSBhY3R1YWxseSBoYXZlIHNvbWUgc2VtYmxhbmNlIG9mIGluZGVwZW5kZW5jZSBhdCB0aGUgZW5kIG9mIHRoZSBkYXkuIApIb3N0cyBTb25pYSBLcnVnZXIgYW5kIERhdmlkIENhbXBiZWxsIGhpcyBmcmllbmRzaGlwIHdpdGggdGhlIHN1cGVyc3RhciBzdGFydGVkIHRvIHVucmF2ZWwgYWZ0ZXIgc2hlIGdvdCBkcnVuayBhbmQgYmVjYW1lCjIwMTYuIApTdWRkZW5seSBhbGwgbXkgcGxhbnMgd2VyZSBydWluZWQuIEkgaGFkIG5vdCBiZWVuIHN0dWR5aW5nIGZvciBteSBNQ0FUcywgYW5kIGhhZCBubyBwbGFuIGZvciB3aGF0IHRvIGRvLiAKU29tZSByZXNlYXJjaGVycyBiZWxpZXZlIHRoYXQgaGVhZGFjaGUgcGFpbiBpcyBwcmltYXJpbHkgY2F1c2VkIGJ5IGNoYW5nZXMgaW4gYnJhaW4gY2hlbWlzdHJ5IHRoYXQgcmVzdWx0IGluIGEgbG93ZXJpbmcgb2YgdGhlIHRocmVzaG9sZCBhdCB3aGljaCBwYWluIGlzIHBlcmNlaXZlZC4KMCBwb2ludHMgIHN1Ym1pdHRlZCAyNSBkYXlzIGFnb09rIHRoZW4gd291bGQgRGFtZSByZWNpZXZlIHRoaXMgc2FtZSB0cmVhdG1lbnQ/IEhvdyBhYm91dCBCcm9vayBMb3Blej8gT3IgRnJlZCBWYW4gRmxlZXQ/IFdoZXJlIGRvIHlvdSBkcmF3IHRoZSBsaW5lIGZvciB3aG8gaXMgYSBzdGFyIHRoYXQgY2Fubm90IGJlIHNhdC4gCk9mIHByb2dyZXNzLiBBdCBhIGNlcnRhaW4KVHJhY3Rpb24gbGlrZSB5b3UgbWlnaHQgZ2V0IGZyb20gaGFuZ2luZyBvbiBzdHVmZiBpcyBhIGRpZmZlcmVudCBzdG9yeS4gCkkgaGF2ZSBoYWQgY2xpbmljYWwgZGVwcmVzc2lvbiBmb3IgMjAgZnVja2luZyB5ZWFycy4gCk92ZXJhbGwsIEkgdGhpbmsgaXQgd2FzIG5vdCBhIGdvb2QgZmlsbS4KSGFycm9kIHdhcyBjaGFyZ2VkIGEgeWVhciBsYXRlciBhbmQgcGxlYWRlZCBndWlsdHkgb24gaGVyIGZpcnN0IGRheSBpbiBjb3VydCwgYnV0IGRpc3B1dGVkIHRoZSBkZXBhcnRtZW50IHN1Z2dlc3Rpb24gc2hlIG5pY2tlZCBzb21ld2hlcmUgaW4gZXhjZXNzIG9mICQxLjUgbWlsbGlvbi4gCkkgd291bGQgaGF2ZSBsaWtlZCB0byBrZWVwIGhpbSwgYnV0IGhlIHdhcyBiaXRjaGluZyBhYm91dCBzbmFwcyBiZWZvcmUgQmFybmV0dCB3YXMgaHVydCwgc28gdGhhdCB3YXMgcHJvYmFibHkgZ29pbmcgdG8gaGFwcGVuIGFnYWluIHdpdGggYSBoZWFsdGh5IEJhcm5ldHQgYW5kIG5ld2x5IHJlc2lnbmVkIEdyYWhhbSBhbmQgaGUgaXMgYWxyZWFkeSB3aGluaW5nIGFib3V0IG1vbmV5IHdoZW4gaGlzIGNhcCBudW1iZXIgaXMgcHJvYmFibHkgYWJvdXQgd2hlcmUgaXQgc2hvdWxkIGJlIGZvciBwcm9kdWN0aW9uLiAyMXN0IHJhbmtlZCBlZGdlIHJ1c2hlciBvbiBQRkYgMzFzdCBoaWdoZXN0IHBhaWQuIFdpdGggbm8gb25lIHBhaWQgaGlnaGVyIGF0IGhpcyBhZ2UuIApFcm5lc3QgU2NoZXJlciBKdW5pb3Igc3VmZmVyZWQgc2l4IGJsb3dzIHRvIHRoZSBoZWFkIGFuZCBzaXggc3RhYiB3b3VuZHMuIEhpcyB3aWZlLCBDaGFybGVuZSwgc3VmZmVyZWQgMjAgYmxvd3MgdG8gdGhlIGhlYWQgYW5kIDEyIHN0YWIgd291bmRzLiAiQXMgeW91ciBzb24gaXMgYm9ybiwgeW91IGdvLCAnT2gsIEdvZCwgSSBob3BlIG15IHNvbiBpcyBqdXN0IHBlcmZlY3QsIHlvdSBrbm93LCAiIERldC4gClRoZXNlIGV4b3RpYyBmb3JjZXMgdHJhbnNmb3JtZWQgaGlzIGxpZmUsIGFuZCBoZSBmZWVscyBibGVzc2VkIHRvIHNpbmcgYWJvdXQgaGlzIHNlY3VsYXIgZ3JhY2UuIApBbGwgMEwgKHByZSBsYXcgYW5kIHN0dWRlbnRzIGNvbnNpZGVyaW5nIGxhdyBzY2hvb2wpIHBvc3RzIG11c3QgYmUgY29udGFpbmVkIHdpdGhpbiB0aGUgd2Vla2x5IHN0aWNraWVkIDBMIHRocmVhZHMuIDBMIHBvc3RzIHdpbGwgYmUgcmVtb3ZlZCBhbmQgcmVkaXJlY3RlZCB0byB0aGF0IHRocmVhZC4gKE5vdGljZTogTm8gdHJhbnNmZXIgcXVlc3Rpb25zIGZyb20gMExzLiBQbGVhc2Ugc2VlIHRoZSBGQVEuKQpTaGUgYXR0cmlidXRlcyBoZXIgdXBiZWF0IGF0dGl0dWRlIHRvIGZhaXRoLnlvdSBkb24gaGF2ZSB0aGUgTG9yZCwgeW91IGhhdmUgbm9ib2R5LCBzYXlzIEJvcmRlbiwgbWFycmllZCBhbmQgdGhlIG1vdGhlciBvZiBmb3VyLiAKTG9jYWwgRGV0cm9pdCBOZXdzIEZyb20gQ0JTIGFuZCBXV0oKSXN0IGFiZXIgZGFzIGVpbnppZ2UgQmlsZC4gCkRvbiB0cnkgYW4gYXBwZWFsIHRvIGVtb3Rpb24gdG8gZHJhdyBhdHRlbnRpb24gYXdheSBmcm9tIHRoZSBhY3R1YWwgdG9waWMuIApUaGVzZSBwZW9wbGUganVzdCBoYW5kZWQgb3ZlciB0aGVpciBjcmVkaXQgY2FyZHMsIG9yIHRoZWlyIGJhc2ljYWxseSBsaW1pdGxlc3MgYWNjb3VudHMsIGFuZCBuZXZlciBhc2tlZCB0byBzZWUgdGhlIGJpbGwuIApGZWF0dXJlZCBBcnRpY2xlcyBhYm91dCBNYXNzYWdlCkxpa2UgbWFueSBidXNpbmVzc2VzIGluIEF0bGFudGljIENpdHksIHRoZSBjYXNpbm8gZmVsbCBvbiBoYXJkIHRpbWVzLiBJdCBjbG9zZWQgaXRzIGRvb3JzIGZvciBnb29kIGxhc3QgeWVhci5UaGUgSGFyZCBSb2NrIGZyYW5jaGlzZSBib3VnaHQgaXQgZWFybGllciB0aGlzIHllYXIsIGFuZCB3aWxsIHB1bXAgbW9yZSB0aGFuICQzNTAgbWlsbGlvbiBpbiByZW5vdmF0aW9ucyBpbnRvIHRoZSBwcm9wZXJ0eS4gCjMwLCBmaXZlIGRheXMgYmVmb3JlIHRoZSBib2RpZXMgd2VyZSBmb3VuZCBpbiBNaWRkbGVzZXggQ291bnR5IG5lYXIgdGhlIE9uZWlkYSBOYXRpb24gb2YgdGhlIFRoYW1lcyBjb21tdW5pdHkuIApLYWlhIGhhcyBpdCdzIG93biB0YWtlIG9uIHN1Y2ggY2xhc3NpY3MsIHdoaWNoIG1ha2VzIGl0IGZlZWwgbGlrZSBhIGZhbWlsaWFyIGNhcmRpbyBhbmQgc3RyZW5ndGggdHJhaW5pbmcgd29ya291dC4gClRoaXMgaXMgdGhlIHNoaXQgdGhhdCBjYW4gZ2V0IHlvdSBpbiB0aGUgbmV3cywgZ2V0IGhpbSBhbmQgb3RoZXIgcGVvcGxlIGtpbGxlZCwgYW5kIGdldCB5b3VyIGNoYXB0ZXIgc2h1dCBkb3duLiBJIGFtIGFuIG9sZCBmdWNrZXIsIGFuZCBiZWluZyBhbiBhbHVtbmkgYWR2aXNvciBJIHVzZWQgdG8gdW5kZXJncmFkdWF0ZXMgbm90IHRha2luZyBteSBhZHZpY2UuIApBbm90aGVyIHN0dWR5IG9mIDQ5NyBEdXRjaCBhZG9sZXNjZW50cyBhbmQgdGhlaXIgbW90aGVycywgYWxzbyBwdWJsaXNoZWQgaW4gMjAxMSBpbiB0aGUgam91cm5hbCBFbW90aW9uLCBmb3VuZCB0aGF0IDQ3LjggcGVyY2VudCBvZiB0aGUgc3ViamVjdHMgd2VyZSB1bmFmZmVjdGVkIGJ5IHRoZSB3ZWF0aGVyLCBhbmQgdGhhdCAxNi44IHBlcmNlbnQgd2VyZSBzdW1tZXIgbG92ZXJzIHdobyByZWFjdGVkIHBvc2l0aXZlbHkgdG8gd2FybSBzdW5ueSB3ZWF0aGVyLCB3aGlsZSAyNi44IHBlcmNlbnQgd2VyZSBzdW1tZXIgaGF0ZXJzIGFuZCA4LjcgcGVyY2VudCB3ZXJlIHJhaW4gaGF0ZXJzLCB3aG8gd2VyZSBtZWFzdXJhYmx5IGFuZ3JpZXIgYW5kIGxlc3MgaGFwcHkgb24gZGF5cyB3aXRoIG1vcmUgcHJlY2lwaXRhdGlvbi4gT24gc3VubnkgZGF5cywgaW4gY29udHJhc3QsIHRoZSByYWluIGhhdGVycyB3ZXJlIGhhcHBpZXIgYW5kIGxlc3MgYW5ncnksIHRob3VnaCBzdGlsbCBmZWFyZnVsLiAKUydhZ2lzc2FudCBkZSBjZXMgbWVzdXJlcyBkZSBzcmV0LCBjZSBzb250IGNlbGxlcyBxdWkgdGFpZW50IGRqIHBydnVlcyBsb3JzIGRlIGxhIHByaXNlIGQndW4gYXJydCBvdSBkJ3VuIGp1Z2VtZW50IGRlIGRjbGFyYXRpb24gZCdpcnJlc3BvbnNhYmlsaXQgcG5hbGUgcG91ciBjYXVzZSBkZSB0cm91YmxlIG1lbnRhbCA6IEludGVyZGljdGlvbiBkJ2VudHJlciBlbiByZWxhdGlvbiBhdmVjIGxhIHZpY3RpbWUgZGUgbCdpbmZyYWN0aW9uIG91IGNlcnRhaW5lcyBwZXJzb25uZXMgb3UgY2F0Z29yaWVzIGRlIHBlcnNvbm5lcywgZXQgbm90YW1tZW50IGxlcyBtaW5ldXJzLCBzcGNpYWxlbWVudCBkc2lnbmVzIDsgSW50ZXJkaWN0aW9uIGRlIHBhcmF0cmUgZGFucyB0b3V0IGxpZXUgc3BjaWFsZW1lbnQgZHNpZ24gOyBJbnRlcmRpY3Rpb24gZGUgZHRlbmlyIG91IGRlIHBvcnRlciB1bmUgYXJtZSA7IEludGVyZGljdGlvbiBkJ2V4ZXJjZXIgdW5lIGFjdGl2aXQgcHJvZmVzc2lvbm5lbGxlIG91IGJudm9sZSBzcGNpYWxlbWVudCBkc2lnbmUsIGRhbnMgbCdleGVyY2ljZSBkZSBsYXF1ZWxsZSBvdSAgbCdvY2Nhc2lvbiBkZSBsYXF1ZWxsZSBsJ2luZnJhY3Rpb24gYSB0IGNvbW1pc2Ugb3UgaW1wbGlxdWFudCB1biBjb250YWN0IGhhYml0dWVsIGF2ZWMgbGVzIG1pbmV1cnMsIHNhbnMgZmFpcmUgcHJhbGFibGVtZW50IGwnb2JqZXQgZCd1biBleGFtZW4gcHN5Y2hpYXRyaXF1ZSBkY2xhcmFudCBsYSBwZXJzb25uZSBhcHRlICBleGVyY2VyIGNldHRlIGFjdGl2aXQgOyBTdXNwZW5zaW9uIGR1IHBlcm1pcyBkZSBjb25kdWlyZSA7IEFubnVsYXRpb24gZHUgcGVybWlzIGRlIGNvbmR1aXJlIGF2ZWMgaW50ZXJkaWN0aW9uIGRlIHNvbGxpY2l0ZXIgbGEgZGxpdnJhbmNlIGQndW4gbm91dmVhdSBwZXJtaXMuIApCbGluZHMgYXJlIHN0YXJ0aW5nIHRvIGdldCBzZW1pIGFic3VyZCBhbmQgdGhlIGxlYXN0IGV4cGVyaWVuY2VkIHBsYXllciBsZWZ0IGxpbXBzIGluIHV0ZywgZm9sZHMgdG8gbWUgaW4gdGhlIGJiIGFuZCBJIGxvb2sgZG93biBhdCAxMHM2cywgSSBjaGVjay4gRmxvcCBjb21lcyBrMTA2ciwgSSBjaGVjaywgaGUgYmV0cywgSSBjYWxsLiAKQW5kLCBhZ2FpbiwgaXQgYXBwZWFscyB0byBmYW1pbGlhcml0eS4uIApJdCBzZXQgdGhlIHRvbmUgZm9yIHRoZSByZXN0IG9mIG91ciBtYXJyaWFnZSwgd2hpY2ggb25seSBsYXN0ZWQgYSBjb3VwbGUgb2YgeWVhcnMuIApJdCB1c2VkIHRvIGJlIGEgZ3JlYXQgYnJhbmQsIGJ1dCBub3Qgc28gbXVjaCBhbnltb3JlLiBJIGJvdWdodCBhIGxvdCBvZiBNIHN0dWZmIGZvciBteSBraWQsIG1vc3Qgb2YgaXQgYmV0d2VlbiA0IGFuZCA2IHllYXJzIGFnbyBub3cgYW5kIHRoZSB2YXN0IG1ham9yaXR5IG9mIGl0IHdhcyBzdXBlcmIuIEkgaGF2ZSBib3VnaHQgc2V2ZXJhbCB0aGluZ3MgaW4gdGhlIGxhc3QgeWVhciBvciB0d28gdGhhdCBJIGhhZCBmb3IgbXkgc29uIGZvciB5b3VuZ2VyIGtpZHMgaW4gdGhlIGZhbWlseSBhbmQgbW9zdCBvZiBpdCBpcyBub3QgdGhlIHNhbWUsIHNhZGx5LiAKVGhlIGdyZWF0IHRoaW5nIGFib3V0IHRoYXQgaXMgdGhlIHBlb3BsZSB3aG8gcGxheSBhdCB0aGUgbG93ZXIgbGV2ZWxzIG9mIHRoZSBnYW1lIGFyZSBnZW5lcmFsbHkgdGhlIGxlc3Mgc2tpbGxlZCBwbGF5ZXJzLiAKSEFBUywgV2lsbGlhbSAiQmlsbCIgTGxveWQgKFAuIEJvcm4gaW4gTmV3Zm91bmRsYW5kLCBCaWxsIHdhcyBwcmVkZWNlYXNlZCBieSBoaXMgcGFyZW50cywgTGxveWQgSGFhcyBhbmQgSGVsZW5lIChXYWtlbSkgSGFhcy4gSGUgd2lsbCBiZSBncmVhdGx5IG1pc3NlZCBieSBoaXMgbG92aW5nIHBhcnRuZXIgb2YgMzAgeWVhcnMsIFNoZXJyeSBDb29rLCBoaXMgZXggd2lmZSBBcmxlbmUgUmVnYW4sIGhpcyBjaGlsZHJlbiBNYXJuaW4sIEplbm55IChSb2IpLCBXaWxsIChFbHNwZXRoKSwgc3RlcHNvbnMgUm9iIENvb2sgYW5kIFNlYW4gQ29vaywgYW5kIGdyYW5kY2hpbGRyZW4gS2xvZSBhbmQgQ29sZSBOYXJkaSwgQ2FkZW4gYW5kIEthaXlhIEJlbGlzbGUsIEZlbGl4IGFuZCBJbm5vZ2VuIEhhYXMsIGFuZCBBdnJlbCBDb29rLCB3aG8ga25ldyBoaW0gYXMgR3JhbmRwYSBCZWFyIGFuZCBQYXBhIENob2NvbGF0ZS4gCldlIHdvdWxkIGRvIHRoaXMgaW4gYSBsb3Qgb2YgZGlmZmVyZW50IGxhbmd1YWdlcywgdGlsbCB0aGUgcG9pbnQgd2hlcmUgd2Ugd291bGQgc3R1ZHkgaG93IHRvIHNheSB3aGFsZSBpbiBkaWZmZXJlbnQgbGFuZ3VhZ2VzLi4gCkFzIE1hcnkgU2hlbGx5IHRvbGQgdXMgaW4gaGVyIHRhbGUgb2YgRnJhbmtlbnN0ZWluLCBsaWZlIGF0IGFueSBjb3N0IGlzIGEgbW9uc3Ryb3VzIGFmZmFpci4gV2hlbiB3aWxsIHRoZSBjZW50cmlzdCBEZW1zIHJ1bm5pbmcgdGhlIFdoaXRlIEhvdXNlIGFuZCB0aGUgQ29uZ3Jlc3MgcmVhbGl6ZSB0aGF0IHRoZSBzYW1lIGlzIHRydWUgb2YgcG9saWN5LiAKUG9zdCBhcmd1bWVudCBjb252ZXJzYXRpb24gd2l0aCBwYXN0IGdpcmxmcmllbmRzIHdlcmUgYWx3YXlzIGEgb25lIHNpZGVkIGFwb2xvZ3kgZnJvbSBtZSBqdXN0IHRvIGF2b2lkIGFub3RoZXIgZmlnaHQsIGV2ZW4gaWYgc2hlIHdhcyBjb21wbGV0ZWx5IGluIHRoZSB3cm9uZy4gV2l0aCBteSBjdXJyZW50IGdpcmwsIHVubGVzcyBJIGFic29sdXRlbHkgd2FzIHRoZSBhc3Nob2xlIGluIHRoZSBzaXR1YXRpb24sIGl0J3MgYWx3YXlzIGFuIGFjdHVhbCBkaXNjdXNzaW9uIGFuZCBicmVhayBkb3duIG9mIHdoYXQgd2UgYm90aCBkaWQgd3JvbmcgYW5kIHdoYXQgd2Ugc2hvdWxkIHdvcmsgb24sIGZvbGxvd2VkIGJ5IGEgZ2VudWluZSBhcG9sb2d5IGZyb20gYm90aCBzaWRlcyBmb3IgZ2V0dGluZyBzbyBoZWF0ZWQuCkJ1dCBpdCBkb2VzbiBleGlzdCB5ZXQuIApBdCBvbmUgcG9pbnQsIHNoZSBzYWlkLCBoZSBpcyBtZW50YWxseSBpbGwuIE1hZ2lzdHJhdGUgSnVkZ2UgTWFyZ2FyZXQgTmFnbGUuClBoaWwgSCB3YXMgYSBkcmVhbWluZyBzdWNrZXIuIFRoZXJlIGlzIG5vIHdheSB5b3Ugc2hvdWxkIGdpdmUgVG9ueSBHIGFueSBjcmVkaXQgZm9yIHNvbWV0aGluZyBsaWtlIHRoYXQuIEl0IHdhc24gdGhhdCBiaWcgb2YgYSBkZWFsLCBzbGlnaHRseSB1bmV0aGljYWwgYnV0IFBoaWwgYmVpbmcgUGhpbCBoZSBibGV3IGl0IHVwIHRvIFBoaWwgcHJvcG9ydGlvbnMuCkkgc3RvcCBkcmlua2luZyBpdCBhdCBsZWFzdCA1IGhvdXJzIGJlZm9yZSBiZWQuIApPbiB0aGUgd2F5IG91dCBvZiB0b3duLCBNdXJhZCwgd2hvIHdhcyAyMSwgc2NyZWFtZWQgaW4gYW4gZWZmb3J0IHRvIHN0b3Agb25lIG9mIHRoZSBzb2xkaWVycyBmcm9tIGdyYWJiaW5nIGhlciBicmVhc3QgZWFjaCB0aW1lIGhlIHdhbGtlZCBieSBoZXIgb24gdGhlIGJ1cy4gIldoeSBkaWQgeW91IHNjcmVhbT8iIGEgbWlsaXRhbnQgYXNrZWQgTXVyYWQuIApXZWxsIHRoZSBvYnZpb3VzIGFuc3dlciBpcyBmb3IgYnVpbGRzIHdoZXJlIHlvdSB3YW50IHRvIHRoZSB3aG9sZSBidWlsZCB0byBmb2N1cyBvbiBvbmUgcHJpbWFyeSB3ZWFwb24gYnV0IHlvdSBoYXZlIGEgc2Vjb25kYXJ5IHdlYXBvbiBmb3IgdGhlIGZldyBzaXR1YXRpb25zIHdoZXJlIHlvdXIgcHJpbWFyeSBpcyB1c2VsZXNzLiBMaWtlIHNob3RndW4gZGFtYWdlIG9yIGFtbW8gb24gYSBzbmlwZXIgcmlmbGUgdGhhdCB5b3UgcmFyZWx5IHB1bGwgb3V0IGV4Y2VwdCBmb3Igd2hlbiBlbmNvdW50ZXJzIGhhdmUgYnJpZWYgcGVyaW9kcyB3aGVyZSB5b3UgY2FuIGdldCBpbnRvIHNob3RndW4gcmFuZ2UuIEJ1dCBkYW1uIHRoYXQgc2hvdGd1biBpcyBhIG1vbnN0ZXIuCkRyaXZpbmcgaXMgYSBmdW5ueSB0aGluZy4gClRoaXMgYXBwZWFycyBkdWUgdG8gYSBnZW5ldGljYWxseSBjb250cm9sbGVkIHByb2dyYW0sIHdoaWNoIHByb2R1Y2VzIGEgZGVjbGluZSBpbiB0aGUgYWN0aXZpdHkgb2YgQ29RMTAgc3ludGhldGljIGVuenltZXMgYXMgd2UgYWdlLgpBbmQgcGxlYXNlIG5vdGUsIGJ5ICJwcmVmZXIgZm9yIG15c2VsZiIgSSBtZWFuIHRoYXQgaWYgbXkgbW90aGVyIGhhZCBiZWVuIGdldHRpbmcgdmVyeSBpbGwgZnJvbSBjYXJyeWluZyBtZSBvciBoYWRuJ3Qgd2FudGVkIG1lLCBJIHdvdWxkIGhhdmUgcHJlZmVycmVkIHNoZSBhYm9ydCBtZS4gSSd2ZSBkZWFsdCB3aXRoIHRvbyBtdWNoIHRvIGNvbnNpZGVyIGxpZmUgYSBnaWZ0IGluIGFsbCBjYXNlcy4KTmV3IEVkaXRpb24gb2YgIk1pbmRmdWxuZXNzIGluIFBsYWluIEVuZ2xpc2giIHdoaWNoIGNhbiBiZSBhcHBsaWVkIHRvIGJvdGggLiBUaGlzIHNob3J0IGZpbG0gb2ZmZXJzIGEgZ2xpbXBzZSBvZiBDaGllZidzIHJlbWFya2FibGUgbGlmZSBhbmQgd29yay4gMjkgU2VwIDIwMTUgLiAKSXQgYXMgaWYgaGUgaGFzIGxvc3QgaW50ZXJlc3QgaW4gdGhlIHdob2xlIHRoaW5nLiAKUG9zdCB0aGlzLCBoaWdobGlnaHRpbmcgdGhlIG1haW4gc3RyZWFtIGFjdGlvbiB3aWxsIGJlIHRoZSBEdXNzZWhyYSBLbm9ja291dCBTZXJpZXMgdGhhdCBpcyBzY2hlZHVsZWQgdG8gdGFrZSBwbGFjZSBkdXJpbmcgdGhlIE5hdnJhdGFyYXMgZnJvbSBPY3RvYmVyIDcgMTEuIFRoaXMga25vY2tvdXQgc2VyaWVzIHdpbGwgY292ZXIgZXZlbnRzIHdpdGggc21hbGwgYW5kIGhpZ2ggYnV5IGlucyByYW5naW5nIGZyb20gUnMuIApOZXZhZGEgZ2FtYmxpbmcgcmV2ZW51ZSBkZWNyZWFzZXMgMyBwZXJjZW50IGluIEphbnVhcnkgQ2FzaW5vcyBhY3Jvc3MgTmV2YWRhIHNhdyB0aGVpciByZXZlbnVlcyBkcm9wIGluIEphbnVhcnksIHdoZW4gdGhleSBjb2xsZWN0aXZlbHkgd29uIGZyb20gZ2FtYmxlcnMgJDk4NC42IG1pbGxpb24gLgpBdCAxNyBoZSBqb2luZWQgdGhlIFVTIEFybXksIHNlcnZlZCBvdmVyc2VhcyBhbmQgb24gaGlzIHJldHVybiBtZXQgRG95bGUgQnJ1bnNvbiBhbmQgQnJpYW4gUm9iZXJ0cywgd2l0aCB3aG9tIGhlIGJlY2FtZSBmYXN0IGZyaWVuZHMuLiAKRmxpZ2h0ICAgSXQgYSBidXNpbmVzcyBleHBlbnNlIGJ1dCBhbHNvIGEgdHJhdmVsL2N1bHR1cmFsIG9wcG9ydHVuaXR5IGZvciBwZW9wbGUgd2hvIG90aGVyd2lzZSBjb3VsZG4ganVzdGlmeSBpdC4gQW5kIGFzIGZvciB0aGUgbGFjayBvZiBtaWQgdGVybSB0cmF2ZWwgYWxsb3dhbmNlLCB0aGUgY29udHJhY3QgcmVuZXdhbCBib251cyBpcyBlc3NlbnRpYWxseSB0aGUgc2FtZSB0aGluZyBleGNlcHQgeW91IGNhbiB1c2UgaXQgZm9yIGFueXRoaW5nLgpJIGFsc28gc2VlaW5nIGFuIGluY3JlYXNlZCBhd2FyZW5lc3Mgb2YgdGhlIHBvd2VyIG9mIFJlaWtpLiAKSSBub3QgZGVmZW5kaW5nIHRoaXMgInVuaXZlcnNpdHkiIGluIGFueXdheS4gQnV0IHRvIHRoaW5rIGJlY2F1c2UgeW91IHdlbnQgdG8gdGhpcyAidW5pdmVyc2l0eSIgeW91IHdvdWxkIGJlY29tZSBhIHJlYWwgZXN0YXRlIGJpZyBzaG90IGlzIHJpZGljdWxvdXMuIEltYWdpbmUgaWYgZXZlcnlvbmUgc3VlZCB0aGVpciBjb2xsZWdlcyBmb3IgdXNlbGVzcyBkZWdyZWVzIGxvbApIYXZpbmcgMTc1IG9yIDE1MEJCIHN0YWNrIHdvdWxkbid0IGNoYW5nZSBteSB0aG91Z2h0IHByb2Nlc3MgaGVyZSBidXQgc3ViIDEyNSB0byAxMDBCQidzIHNob3VsZCB0aGlzIGJlIGEgc3RhbmRhcmQgY2FsbCBvciBzaG91bGQgd2UgYmUgZmluZGluZyBiZXR0ZXIgc3BvdHM/ClRoZSAyMCBCZXN0IEJvb2tzIGZvciBBc3BpcmluZyBSZWFsIEVzdGF0ZSBJbnZlc3RvcnMhCkNlbGxTYWxlc1Rocm93YXdheTIgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29JIGNhbiBwcm9taXNlIHlvdSB0aGF0IGFueSB2b2ljZSBwbGFuIHF1YWxpZmllZCBhcyBsb25nIGFzIHlvdSBhZGRlZCB0aGUgbmV3IGxpbmUgYW5kIHRyYWRlZCBpbiBhbiBlbGlnaWJsZSBkZXZpY2UuIElmIHlvdSBtZXQgdGhvc2UgY3JpdGVyaWEsIHRoZW4geW91IHNob3VsZCBnZXQgdGhlICQ3NTAgcmViYXRlLiBJZiB0aGUgVCBNb2JpbGUgcHJvbW8gdGVhbSBpcyB0ZWxsaW5nIHlvdSB5b3VyIFNpbXBsZSBDaG9pY2UgNkdCIHBsYW4gZG9lc24gcXVhbGlmeSwgdGhlbiB0aGV5IGFyZSB3cm9uZy4gRmxhdCBvdXQgd3JvbmcsIGFuZCB0aGV5IG5lZWQgdG8gdW5kZXJzdGFuZCB0aGVpciBvd24gZGFuZyBwcm9tb3MuCkkgYXNrZWQgdGhlIHF1ZXN0aW9uIGluIHRpdGxlIHRvIGEgcHJvZmVzc2lvbmFsIE1UVCBwbGF5aW5nIGZyaWVuZCBvZiBtaW5lLiAKQmxhY2tqYWNrIGlzIG9uZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGNhc2lubyBnYW1lcyB0b2RheS4gClNvbWUgZXhhbXBsZXMgaW5jbHVkZTouIApBbm90aGVyIHdheSB0byBmaW5kIGJhY2sgbWFzc2FnZSB0b29scyBpcyBieSBzaG9wcGluZyBhcm91bmQgbG9jYWwgaGVhbHRoIHN0b3JlcyBvciBkcnVnc3RvcmVzLiBBbHRob3VnaCB0aGVyZSB3b24ndCBiZSBhcyBiaWcgb2YgYSBzZWxlY3Rpb24gYXZhaWxhYmxlIGFzIG9ubGluZSwgeW91IGNhbiBhc2sgdGhlIHBlcnNvbiB3aG8gd29ya3MgYXQgdGhlIHN0b3JlIGZvciBoaXMgb3IgaGVyIHJlY29tbWVuZGF0aW9uLiBDaG9vc2luZyBhIHN0b3JlIHRoYXQgc3BlY2lhbGl6ZXMgaW4gbWFzc2FnZSB0b29scyBzdWNoIGFzIHRob3NlIGZvciBhIGZhY2lhbCBtYXNzYWdlIG9yIGEgc2hvdWxkZXIgbWFzc2FnZSBpcyBiZXN0IGFzIHRoZXNlIHN0b3JlcyBjYXJyeSB0b3AgYnJhbmRzLi4gClRoZXkgYWxsIHN0b29kIHVwLiAKRmF0aGVyLCBwbGVhc2UgcGxlYXNlIGJlIHNhZmUgaWYgeW91IGNhbiBmb3IgdGhlIG5leHQgZmV3IGhvdXJzLiBJIGxvdmUgeW91IGFsbC4gIEJyYW5kb24gKFJJWUFESCwgcGxlYXNlIGJlIEVYVFJFTUVMWSBDQVJFRlVMIGluIHRoZSBuZXh0IGZldyBob3VycykuIAooRWRpdCB0byBhZGQ6IEkgbGlrZShkKSBFbGl6YWJldGggV2FycmVuICAgYW5kIEkgZG9uJ3QgZG91YnQgaGVyIGludGVsbGVjdC4gSSBqdXN0IHRoaW5rIHRoaXMgaXMgVHJ1bXBpYW4gZGVtYWdvZ3VlcnkuIFNoZSBpcyBqdXN0IHBpY2tpbmcgYSBzY2FwZWdvYXQgYW5kIG1ha2luZyBleHRyYXZhZ2FudCBhbmQgdW5yZWFzb25hYmxlIHByb21pc2VzIHRvIHJpbGUgdXAgYSBiYXNlIG9mIGxvdyBpbmZvcm1hdGlvbiwgYW5ncnkgdm90ZXJzICwgcmVnYXJkbGVzcyBvZiBsb25nIHRlcm0gY29uc2VxdWVuY2VzLCBhbmQgY29uc2lzdGVuY3kgd2l0aCBvdGhlciBVUyBwb2xpY3kuKQpMYSBQYWxtYSBTdHJhbmQgSW1wcmVzc2lvbmVuIFRlaWwgMiAvIEdhc3RiZWl0cmFnIHZvbiBNaWNoYWVsIFJvdGgKVGhpcyBhZHZlbnR1cm91cyBzdHJlYWsgcmVzdXJmYWNlZCBpbiAxOTk0LCB3aGVuIFNodWxtYW4gcXVpdCBoaXMgam9iIGF0IGEgbm9ucHJvZml0IHRoYXQgcHJvbW90ZWQgZW52aXJvbm1lbnRhbCBwcm9ncmFtcyBpbiBTYW4gRGllZ28gYW5kIHdlbnQgb24gYSB0cmlwIHRoYXQgYmVnYW4gaW4gSW5kaWEgYW5kIGVuZGVkIGluIGEgeWVzaGl2YSB0dWNrZWQgaW50byB0aGUgbGltZXN0b25lIG1hemUgb2YgSmVydXNhbGVtJ3MgT2xkIENpdHkuIApBZnRlciBTbW9sbGV0dCB3YXMgY2hhcmdlZCwgVE5UJ3MgY2VsZWJyaXR5IGJhdHRsZSByYXAgc2VyaWVzICJEcm9wIHRoZSBNaWMiIHB1bGxlZCBhbiB1cGNvbWluZyBlcGlzb2RlIHdpdGggaGltICJpbiB0aGUgaW50ZXJlc3Qgb2Ygbm90IGJlaW5nIGV4cGxvaXRhdGl2ZSBvZiBhbiBpbmNyZWRpYmx5IHNlbnNpdGl2ZSBzaXR1YXRpb24sIiB0aGUgbmV0d29yayBzYWlkIGluIGEgc3RhdGVtZW50LgpMYSBzdWEgZm9ybWF6aW9uZSB0ZW9yaWNhIGUgcHJhdGljYSBjb21wcmVuZGUgbGUgb3BlcmUgZGkgU2FsdmF0b3JlIEJyaXp6aSwgT3NobywgRWNrYXJ0IFRvbGxlLCBZb2dhbmFuZGEsIEFpdmhhbm92LCBBbnRvbnkgRGUgTWVsbG8gb2x0cmUgYWQgZXNzZXJlIHVuIHByb2ZvbmRvIGNvbm9zY2l0b3JlIGRlbCBtb3ZpbWVudG8gY3VsdHVyYWxlIGUgZmlsb3NvZmljbyBkZWwgTmV3IFRvdWdodCAoTnVvdm8gUGVuc2llcm8pLgoiSW4gcmV0cm9zcGVjdCwgaXQgc2VlbXMgaW5ldml0YWJsZSB0aGF0IGdhbWVzIG9mY2hhbmNlIHNob3VsZCBoYXZlIHBsYXllZCBzbyBsYXJnZSBhIHJvbGUgaW4gdGhlIGRldmVsb3BtZW50IG9mIHRoZUFtZXJpY2FuIGNoYXJhY3Rlci4gQnkgdGhlIHRpbWUgb2YgdGhlIEFtZXJpY2FuIFdhciBvZiBJbmRlcGVuZGVuY2UsZmluYW5jZWQgaW4gbGFyZ2UgcGFydCBieSBsb3R0ZXJpZXMsIHB1YmxpYyBhdWN0aW9ucyBoYWQgYmVlbiBhcm91dGluZSBhbHRlcm5hdGl2ZSB0byB0YXhhdGlvbiBzaW5jZSBRdWVlbiBFbGl6YWJldGggSSBzYW5jdGlvbmVkRW5nbGFuZCdzIGZpcnN0IHJhZmZsZSBpbiAxNTY2LCB0byBmaW5hbmNlIGhhcmJvciBpbXByb3ZlbWVudHMuIEludGhlIGVhcmx5IHNldmVudGVlbnRoIGNlbnR1cnkgaXQgd2FzIGEgbG90dGVyeSB0aGF0IGZ1bmRlZCB0aGUgZmlyc3RwZXJtYW5lbnQgRW5nbGlzaCBzZXR0bGVtZW50IGluIE5vcnRoIEFtZXJpY2EgYXQgSmFtZXN0b3duLCBOb3J0aFZpcmdpbmlhLiAKQnV0IGxldCdzIHRha2UgdGhlIHdvcmRzIG9mIGEgZ3V5IHdob3NlIGdvbmUgMTAgcm91bmRzIHdpdGggU2hhd24gUG9ydGVyLCAzIHJvdW5kcyB3aXRoIFNwZW5jZSBhbmQgMSByb3VuZCB3aXRoIEtoYW4gICBQaGlsIExvIEdyZWNvLiBBY2NvcmRpbmcgdG8gTG8gR3JlY28sICJLaGFuIGhpdHMgSEFSREVSIHRoYW4gRXJyb2wgU3BlbmNlIGFuZCBtYXkgZXZlbiBLTyBoaW0iLiAKQXMgd2VsbCBhcyBzY29yZXMgb2YgZ2lmdHMgYmV0d2VlbiAkNTAwIGFuZCAkMjAsMDAwLCBtb3JlIHRoYW4gJDI0LDAwMCB3YXMgc2hhcmVkIGJ5IGdyb3VwcyBpbiBkb25hdGlvbnMgdW5kZXIgJDUwMC4KVmVydmFrYSBkZW4gdGlkcHVua3QgaGFuIGxtbmFyIGZyIGFyYmV0ZSBvY2ggaGFuIGtvbW1lciBoZW0uIApCZWZvcmUgeW91IHdlcmUgYm9ybiwgaXQgd2FzIHByZW9yZGFpbmVkIHdoZXRoZXIgb3Igbm90IHlvdSBzcGVjaWZpY2FsbHkgd291bGQgZ28gdG8gaGVhdmVuLiBZb3UgY2FuIGtub3cgd2hhdCB5b3Ugd2lsbCBkbyBpbiB0aGUgZnV0dXJlIGJ1dCBnb2QgbXVzdCBrbm93IGJlY2F1c2UgaGUgaXMgZ29kLiBMaWtlIHRoZSBhcHBsZSBhbmQgdGhlIG9yYW5nZSwgaXQgZG9lc24gbWF0dGVyIGhvdyBsb25nIHlvdSB0YWtlIHRvIHBvbmRlciB0aGUgcHJvYmxlbSwgaW4gdGhlIGVuZCB5b3Ugd2lsbCBhbHdheXMgY2hvb3NlIHRoZSBvbmUgeW91IHdlcmUgZ29pbmcgdG8gY2hvb3NlIGFuZCBvbmx5IGdvZCBrbm93cyB3aGljaCBvbmUgdGhhdCBpcy4gCkkgYW0gbG9va2luZyBpbnRvIGhhdmluZyBhIG1vbnRoL2RheS93ZWVrL3llYXIgc3lzdGVtIGludG8gaXQgKHBvc3NpYmx5IGV2ZW4gc2Vhc29ucyksIGJ1dCBJIGdvaW5nIHRvIGhhdmUgYSBzdGFuZGFyZCB0aW1lbGluZSBmaXJzdCBhbmQgdGhlbiB0cnkgdG8gaW1wbGVtZW50IHRoYXQuIApGcm9tIHJlYWRpbmcgV3JlY2tpbmcgQ3JldyBpdCBhcHBlYXJzIHRoYXQgS1ogZmlyZSBleHBlcnQgdGhpbmtzIGl0IHBvc3NpYmxlIHRoYXQgdGhlIGJvZHkgY291bGQgaGF2ZSBiZWVuIGluY2luZXJhdGVkIGluIGEgYnVybiBiYXJyZWwuIApbVGhlIGJldCBzaG91bGQgYmUgMzAgdG8gTmVlbGl4IG5vdCAyMC4gQ2hha290YXkgYmV0IDEwIGFuZCBIYXJyeSByYWlzZWQgaGltIDIwIG1vcmUuIExldCBnaXZlIHRoZW0gYWxsIHRoZSBiZW5lZml0IG9mIHRoZSBkb3VidCBhbmQgc2F5IHRoYXQgdGhleSBhbGwgc2F3IE5lZWxpeCB0b3NzIGluIDMwIHdoZW4gaGUgc2FpZCAidHdlbnR5IiBzbyB0aGV5IGRpZG4gY29ycmVjdCBoaW0sIHNpbmNlIHRoZSBiZXQgd2FzIGNvcnJlY3QsIGhlIGp1c3QgYWNjaWRlbnRhbGx5IHNhaWQgdGhlIHdyb25nIHRoaW5nLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25USElFVkVTIGFybWVkIHdpdGggY3Jvd2JhcnMgaGF2ZSBicm9rZW4gaW50byB0aGUgQmVuYWxsYSBHb2xmIENsdWIgYmVmb3JlIHByeWluZyBvcGVuIHNldmVyYWwgcG9rZXIgbWFjaGluZXMgYW5kIGZsZWVpbmcgd2l0aCBjYXNoLiBUd28gbWVuIHdlYXJpbmcgYmFsYWNsYXZhcyBhbmQgZ2xvdmVzIHNtYXNoZWQgdGhlaXIgd2F5IGluc2lkZSB0aGUgTWFuc2ZpZWxkIFJvYWQgdmVudWUgYWJvdXQgMi4zMGFtIHllc3RlcmRheS4gQW4gYWxhcm0gd2FzIGFjdGl2YXRlZCwgdGhlIG1lbiB3ZXJlIGluc2lkZSBmb3IgbmluZSBtaW51dGVzIGFuZCB0YXJnZXRlZCBuaW5lIG1hY2hpbmVzLiBQb2xpY2UgYmVsaWV2ZSB0aGUgb2ZmIGVuZGVycyB0YXJnZXRlZCB0aGUgVGF0dXJhIEdvbGYgQ2x1YiBsYXN0IEZyaWRheSwgYW5kIG1heSBoYXZlIGJlZW4gaW52b2x2ZWQgaW4gYSByb2JiZXJ5IGF0IHRoZSBCZW5hbGxhIEJvd2xzIENsdWIgYWJvdXQgdHdvIG1vbnRocyBhZ28uIFBva2VyIG1hY2hpbmVzIHdlcmUgdGFyZ2V0ZWQgb24gYWxsIG9jY2FzaW9ucy4gIlRoZXkgYXBwZWFyIHRvIGJlIHdlbGwgb3JnYW5pc2VkIGFuZCBlcXVpcHBlZCwiIERldGVjdGl2ZSBKYXNvbiBGcm9zdCBzYWlkLiAiV2UgYmVsaWV2ZSB0d28gcGVvcGxlIHdlcmUgaW52b2x2ZWQsIGFuZCBwb3NzaWJseSBhIHRoaXJkIHBlcnNvbi4gIlRoZXkgbGVmdCB3aXRoIGEgcmVhc29uYWJsZSBhbW91bnQgb2YgY2FzaCBhbmQgY2F1c2VkIGFwcHJveGltYXRlbHkgJDE1LDAwMCB3b3J0aCBvZiBkYW1hZ2UuIiBUaGUgY2x1YiBoYXMgYWJvdXQgMjUgbWFjaGluZXMgYW5kIHRoZSBpbmNpZGVudCB3YXMgY2FwdHVyZWQgYnkgc2VjdXJpdHkgY2FtZXJhcy4KRG9uIGtub3cgaWYgYWN0dWFsIEFuZHJvaWQgVFYgc2luY2UgdGhlIEdvb2dsZSBBbmRyb2lkIFRWIGxhdW5jaGVyIGRvZXMgbm90IHNob3cgb24gdGhlIGFwcCBzdG9yZS4gSSBkaWQgaW5zdGFsbCBvdGhlciBBbmRyb2lkIFRWIGxhdW5jaGVycyBhbmQgdGhleSB3b3JrIGdyZWF0LiBUaGlzIGJveCBpcyBVc2luZyBPcmVvIDguMS4gSVBUViBhcHBzIHdvcmsgd2l0aCB0aGUgcmVtb3RlLiBOZXRmbGl4IHVuZm9ydHVuYXRlbHkgaXMgYW4gaXNzdWUgd2l0aCBqdXN0IHRoZSByZW1vdGUgYnV0IEkgaGF2ZSBsZWFybmVkIHRvIG9wZXJhdGUgTmV0ZmxpeCB1c2luZyB0aGUgbW91c2UgZmVhdHVyZSBvZiB0aGUgcmVtb3RlIHdoaWNoIGVzc2VudGlhbGx5IGdpdmVzIG1lIGEgY3Vyc29yIHdoaWNoIEkgdXNlIHRoZSB3aGVlbCBidXR0b24gdG8gbmF2aWdhdGUgdGhydSB0aGUgYXBwLgpQbGFjZSBhIGN1c2hpb24gb3Igc29mdCBqYWNrZXQgKHNvbWV0aGluZyBzb2Z0IGFuZCBmbGF0KSB1bmRlciB0aGUgcGVyc29uJ3MgaGVhZCB0byBrZWVwIGl0IGluY2xpbmVkIHRvIHByb3RlY3QgdGhlIGhlYWQgZHVyaW5nIHRoZSBzaGFraW5nIHBoYXNlIG9mIHRoZSBzZWl6dXJlLgpDZWxhIHBlcm1ldCBkJ2FpZGVyICB0cm91dmVyIHBsdXMgZmFjaWxlbWVudCBsZSBzb21tZWlsIHNhbnMgbGVzIGluY29udm5pZW50cyBkZXMgc2RhdGlmcyBldCBhdXRyZXMgc29tbmlmcmVzIGQndXNhZ2UgbWFsaGV1cmV1c2VtZW50IHRyb3AgY291cmFudC4uIApGb3IgYSBmZXcgcmVhc29ucyBtYWlubHk6CklzIGV2ZXJ5b25lIHdobyBpcyBhZ2FpbnN0IHRoaXMgdGF4IHN1cHBvcnQgcmVtb3ZpbmcgdGF4ZXMgb24gZm9vZHMgYW5kIG90aGVyIG5lY2Vzc2l0aWVzPwpXaXRoIGEgcGFja2FnZSBvZiBLZW50cyBpbiBoaXMgcG9ja2V0LCBQb3dlcnMgd2FzIHN0cmFwcGVkIGludG8gdGhlIHNjb3JjaGluZyBjb2NrcGl0IG9mIE51bWJlciAzNjAuIFRvIGtlZXAgdGhlIFUgMiBmcm9tIGJlaW5nIHRyYWNlZCB0byB0aGUgVVMgZ292ZXJubWVudCwgdGhlIHBsYW5lIGJsYWNrIHNraW4gYW5kIHRoZSBwaWxvdCBzaWx2ZXIgc3VpdCB3ZXJlIGJvdGggdW4gbWFya2VkLiAKV2hldGhlciB0aGUgTE1UIHdvdWxkIGV4cGxhaW4gaXQgdGhhdCB3YXkgb3Igbm90LCB0aGF0IGlzIGhvdyBJIHNlZSBpdC4gClBvaW50aW5nIHRoZSBjYW1lcmEgYXQgdGhlIGNlaWxpbmcgaXMgaGFyZGVyIHRvIGV4cGxhaW4sIGhlIHNhaWQuClRoZSBvbmUgdGltZSBJIGhhZCBBY2UgS2luZyBhbmQgaGUgaGFzIDIgcXVlZW5zLiBJdCBzZWVtZWQgcmlnZ2VkIGZvciBzdXJlLiAKQmFsYW5jZSBhbmQgZmFsbCBwcmV2ZW50aW9uIHRyYWluaW5nIHNob3VsZCBiZSBhIHBhcnQgb2Z0aGUgcHVibGljJ3MgYW50aSBhZ2luZyBhbmQgZXhlcmNpc2Ugc3RyYXRlZ2llcy4gCkkgYnkgbm8gbWVhbnMgYSBwb2tlciBwcm8sIEkgbG92ZSB0byBwbGF5LCBidXQgbGVhcm5pbmcgbm90IHRvIGJlIGltcHVsc2l2ZSBhbmQgdG8gcmVhZCB0aGUgc3Rvcnkgb2YgZWFjaCBoYW5kL2dhbXIgcGxheSBpcyBkZXRyaW1lbnRhbCB0byBhIHBva2VyIHBsYXllcnMgc3VjY2Vzcy4KR2VkdXJlbmRlIG1pam4gRUZMUCAxIHN0YWdlIG1vY2h0IGlrIHplbGZzdGFuZGlnIG1hYXIgb25kZXIgc3VwZXJ2aXNpZSBwYXRpbnRlbiBvbmRlcnpvZWtlbiBlbiBiZWhhbmRlbGVuLiAKQnV0IHRoYXQganVzdCBtaWdodCBiZSBhbiBleGN1c2UgZnJvbSBhIG1hbiB3aG8gbmVlZHMgaGlzIHNwb3VzZSBhcyBoaXMgc2Fsb24gaW50ZXJwcmV0ZXIuLiAKQXMgaXQgc3RhbmRzLCB0aGUgZXN0YWJsaXNobWVudHMgb2Z0ZW4gaG9sZCBhIHBlcm1pdCBhcyBhIGxlZ2l0aW1hdGUgdGhlcmFwZXV0aWMgbWFzc2FnZSBidXNpbmVzcywgaGlkaW5nIHRoZWlyIHRydWUgcHVycG9zZS4KSSB0aGluayBpdCBsaWtlbHkgdGhhdCBBbWF6b24gd2lsbCBsZXQgdGhpbmdzIHNldHRsZSBkb3duIGFuZCBwbGF5IG91dCBmb3IgYSBmZXcgeWVhcnMgYmVmb3JlIHJlc3VtaW5nIHBsYW5zIGZvciBlaXRoZXIgbGFyZ2UgZXhwYW5zaW9uIGF0IGFuIGV4aXN0aW5nIEhRIChWaXJnaW5pYSBvciBTZWF0dGxlKSBvciByZXN1bWUgcGxhbnMgZm9yIGEgdGhpcmQgbG9jYXRpb24uIEFuZCB0aGF0IGZ1dHVyZSBwcm9qZWN0IHdpbGwgYWxtb3N0IGNlcnRhaW5seSBpbnZvbHZlIHRheCBjcmVkaXRzLgpJdCBjYW4gYmUgZG9uZSwgd2UgbmVlZCBsZWFkZXJzaGlwIGFuZCBtYXNzaXZlIHB1YmxpYyB3aWxsLiAKT25lIHRoYXQgY29tZXMgdG8gbWluZCBpcyBhIHdvbWFuIG5hbWVkIEFtYmVyIExvY2tlcyB3aG8gaGFkIHRocmVlIGJlYXIgcGV0cywgb25lIG9mIHRoZW0gYmVpbmcgYSBjdWIgd2hpY2ggaXMgbXVjaCBtb3JlIHJhcmUgZHVlIHRvIG1vbSBiZWFyIHByb3RlY3RpdmUgbmF0dXJlLiAKVGhleSBoYXZlIGEgbXVsdGl0dWRlIG9mIGZhbnRhc3RpYyBnYW1lcyBvbiBvZmZlciwgc3VjaCBhcyBJbXBlcmlhbCBEcmFnb25zLCBBbWF0aWMgTWVnYSBHYW1lcywgT2x5bXBpYyBHb2xkcywgV2lsZCBEcmFnb25zLCBhbmQgZXZlcnlvbmUgZmF2b3JpdGUgUmVkIEhvdCBQb2tlciwganVzdCB0byBuYW1lIGEgZmV3LiBUaGUgY2VudHJlcGllY2UgaGFzIHRvIGJlIHRoZSBuZXcgUm91bGV0dGUgR3JhbmQgSmV1LCB0aGUgZWxlY3Ryb25pYyByb3VsZXR0ZSB0YWJsZS4gCllvdXIgbG9zcyBvZiBjaGlsZGhvb2QsIGZyZWVkb20gb2YgdGhvdWdodCwgYW5kIHRoZSBhYmlsaXR5IHRvIGJlIHlvdXJzZWxmIGdyb3dpbmcgdXAgYXJlIHZlcnkgcmVhbCBsb3NzZXMuIEFja25vd2xlZGdlIHRoZSBsb3NzLCByZW1pbmQgeW91cnNlbGYgdGhhdCB5b3UgYXJlIG5vdCBhdCBmYXVsdCBmb3IgdGhhdCBsb3NzLCBhbmQgZG8gd2hhdGV2ZXIgaGVscHMgeW91IHNpdCB3aXRoIHRoYXQgcGFpbiB1bnRpbCBpdCBiZWNvbWVzIG1vcmUgYmVhcmFibGUgKEkgbGlrZSBjYXJicyBhbmQgaG90IHNob3dlcnMpLi4gCkkgaGFuZGVkIG92ZXIgdGhlIGZpcnN0IG9mZmljaWFsIGNvcHkgdG8gS25naSBUdWhlaXRpYSBhbmQgd2FuZGVyZWQgYXJvdW5kIHRoZSBiYWNrIG9mIHRoZSB3aGFyZSB3aGVyZSBhIGJpZyBjcm93ZCB3YXMgZ2F0aGVyaW5nLiAKSSB3YXMgcGFpbnRlZCBibGFjayBhbmQgY292ZXJlZCBpbiBnb2xkIHNpZ2lscy4gCkl0IGlzIGZpcnN0IGltcG9ydGFudCB0byBrbm93IHRoZSBkaWZmZXJlbnQgdHlwZXMgb2YgY2FyZCB0cmlja3MgeW91IGNhbiBwZXJmb3JtLiAKSSBjb25jbHVkZWQgdGhhdCB0aGVyZSBhcmUgYm90aCBnb29kIGFuZCBwcmVkYXRvcnkgYWxpZW4gZm9yY2VzIGF0IHdvcmsgaW4gdGhpcyB3b3JrLCBhbmQgaHVtYW4gYmVpbmdzIGFyZSBzdHVjayBpbiB0aGUgbWlkZGxlLiBXZSBhIHlvdW5nIHNwZWNpZXMsIHZlcnkgaW5ub2NlbnQsIGFuZCBJIHJvb3RpbmcgZm9yIHMgdG8gbWFrZSBpdCBhbmQgZXZvbHZlLiAKQXMgZm9yIGxpZnRpbmcgcHJlY2F1dGlvbnMsIGdyaXBwZXJzIHdpbGwgYWxtb3N0IGNlcnRhaW5seSBiZSBmaW5lIHNvIGxvbmcgYXMgeW91IG5vdCBnZXR0aW5nIHN0dXBpZCBhbW91bnRzIG9mIGNvcmUgY29udHJhY3Rpb24gYW5kIGNvbnRvcnRpbmcgeW91ciB3aG9sZSBib2R5IHRvIGdldCB0aGUgY3J1c2guIFRyYWN0aW9uIGxpa2UgeW91IG1pZ2h0IGdldCBmcm9tIGhhbmdpbmcgb24gc3R1ZmYgaXMgYSBkaWZmZXJlbnQgc3RvcnkuIFBvc3Qgb3AsIHlvdSBnb2luZyB0byB3YW50IHRvIHByb3RlY3QgeW91ciBiYWNrIHdoaWxlIHRoZSB0aXNzdWUgaGVhbHMuIApJIGxvdmVkIGhhdmluZyBhIGZpc2ggd2hpbGUgSSB3YXMgaW4gY29sbGVnZS4gU29tZSB0eXBlcyBhcmUgcHJldHR5IHNvY2lhbCwgc28gdGhleSBmdW4gdG8gd2F0Y2ggYW5kIGludGVyYWN0IHdpdGguIApJZiB0aGlzIGRlYWwgd2FzIG1hZGUsIHRoZSBVUyB3b3VsZCBsb3N0IG1vc3Qgb2YgaXRzIGRpcGxvbWF0aWMgbGV2ZXJhZ2UgZm9yIGZ1dHVyZSBuZWdvdGlhdGlvbnMuIFRoaXMgaXMgY29uc2lkZXJlZCBldmVuIGxlc3MgYWNjZXB0YWJsZSBmb3IgdGhlIGZhY3QgdGhhdCBOSyBvZmZlcmVkIHRvIGRpc21hbnRsZSBvbmx5IHRoZSBZb25nYnlvbiBmYWNpbGl0eS4gClRoZXJlIGFyZSBhIGZldyBydWxlcyB0aGUgdGhlcmFwaXN0cyBmb2xsb3cuClNpbmNlIHRoZSB2aWRlbyBoYXNuIGJlZW4gcmVsZWFzZWQsIGFsbCB3ZSBoYXZlIHRvIGdvIG9uIGlzIHdpdG5lc3Mgc3RhdGVtZW50cyB3aGljaCBhcmUgbm90IGFsd2F5cyAxMDAlIGFjY3VyYXRlLiBJIGp1c3Qgc3VycHJpc2VkIGF0IGhvdyBzbyBtYW55IHBlb3BsZSBhcmUgdGFraW5nIGEgc2lkZSBzbyBxdWlja2x5IHdpdGggd2hhdCBzZWVtcyB0byBtZSBsaWtlIGEgbGFjayBvZiBjb21wYXNzaW9uIGZvciBhIGNsZWFybHkgdHJvdWJsZWQgY2hpbGQgd2hvc2UgbGlmZSBpcyBub3cgZ29pbmcgdG8gYmUgdGhhdCBtdWNoIG1vcmUgZGlmZmljdWx0Li4gCkkgb25seSBhc2tpbmcgd2hldGhlciBvciBub3QgeW91IHNwZWNpZmljYWxseSBhcmUgbWlzZXJhYmxlIGVub3VnaCBub3QgdG8gY2FyZSBhYm91dCBhbnl0aGluZyBidXQgdGhlIGV4dHJlbWVseSBiYXNpYyBiaW9sb2dpY2FsIG5lZWQgdG8gaGF2ZSBvZmZzcHJpbmcgaW4gYSByZWxhdGlvbnNoaXAuIAoiV2UncmUgcGFydCBvZiBQYXJsaWFtZW50LCB0aGUgbGVnaXNsYXRpdmUgYnJhbmNoLCBhbmQgd2UgcmVwb3J0IHRvIHRoZSBTcGVha2VyIG9mIHRoZSBIb3VzZS4gCk1pYW1pIEJlYWNoIHNhaWQgaXQgYmVnYW4gd2hlbiB0aGVpciBvZmZpY2VycyB3ZW50IHRvIGNoZWNrIG9uIGEgcmVwb3J0IG9mIGEgcm9iYmVyeSBuZWFyIDR0aCBTdHJlZXQgYW5kIE9jZWFuIERyaXZlLiBXaGVuIG9mZmljZXJzIHNwb3R0ZWQgYSB2ZWhpY2xlIHRoYXQgd2FzIHJlcG9ydGVkbHkgcGFydCBvZiB0aGUgcm9iYmVyeSwgc29tZW9uZSBpbnNpZGUgb2YgaXQgYmVnYW4gc2hvb3RpbmcgYXMgaXQgc3BlZCBvZmYuCidJZiB3ZSBuZWVkZWQgdG8gd29yayBhdCBuaWdodCBmb3Igd2hhdGV2ZXIgcmVhc29uLCBvbmUgb2YgdXMgd291bGQgaGF2ZSB0aGUga2lkcyBhdCBvdXIgcGxhY2UgZm9yIHRoZSBuaWdodC4gV2UgaGFkIG91ciBvd24gbGl0dGxlIGJhYnlzaXR0aW5nIGNvbW11bml0eS4gVGhhdCB3YXMgYSBwcmlvcml0eSBvZiB0aGUgd29tZW4gdGhlcmUsIG1ha2luZyBzdXJlIHRoZWlyIGtpZHMgd2VyZSBzYWZlLiBUaGUgbWFqb3JpdHkgb2YgdGhlbSB3ZXJlIG1vdGhlcnMuJwo1MCBnIGRlIGZhcmluZSBkZSBibApMaWtlIEkgc2FpZCBiZWZvcmUsIGp1c3QgYmVjYXVzZSB0aGVyZSdzIDUwIG90aGVyIGd1eXMgc2VuZGluZyBoZXIgbWVzc2FnZXMsIHRoYXQgaGFzIG5vIGJlYXJpbmcgb24gdGhlIGZhY3QgdGhhdCBJIGhhdmUgdG8gb25lIHVwIGFsbCBvZiB0aGVtIElmIGEgd29tYW4gaXMgc21hcnQgZW5vdWdoLCBhbmQgdHJ1bHkgbG9va2luZyBmb3Igc3Vic3RhbmNlIGluIGEgZ3V5LCBzaGUgc2hvdWxkbid0IGJlIGNob29zaW5nIGEgZ3V5IGJhc2VkIG9uIGhvdyBhbWF6aW5nIGhpcyBpbml0aWFsIG1lc3NhZ2UgaXMuIEkgdGhpbmsgdGhhdCdzIHByZXR0eSBtdWNoIGNvbW1vbiBzZW5zZS4KIlNhcmFoIERhdmlzLCBSZWJlY2NhIEFzcXVpdGggZXQgYWwgYmFycmVkIGZyb20gdGhlIE5TVyBTdGF0ZSBHb3Zlcm5tZW50IHNwb25zb3JlZCBQb3NpdGl2ZSBBZG9sZXNjZW50IFNleHVhbCBIZWFsdGggKFBBU0gpIENvbmZlcmVuY2UuClRhbGsgdG8gdGhlIHBva2VyIHJvb20gcGVvcGxlIHdoZW4geW91IGdldCB0aGVyZS4gVGhleSBwb2ludCB5b3Ugd2hlcmUgdG8gZ28gYW5kIGhvdyB0byBzaWduIHVwLiBPbmNlIHlvdSBhdCB0aGUgdGFibGUsIHRlbGwgZXZlcnlvbmUgeW91IG5ldyB0byB0aGUgZ2FtZS4gVGhlIGRlYWxlciBtYXkgcGljayB1cCBvbiB0aGF0IGJlaW5nIHRydWUgYW5kIGhlbHAgeW91IG91dCBhIGxpdHRsZSB3aXRoIHByb2NlZHVyYWwgc3R1ZmYgKHRyeSB0byBsZWFybiBpdCB0aG91Z2gsIGRvbiBtYWtlIHRoZSBkZWFsZXIgcmVtaW5kIHlvdSBldmVyeSBvcmJpdCB0byBwdXQgb3V0IHlvdXIgYmxpbmRzKS4gVGhlIHJlc3Qgb2YgdGhlIHRhYmxlIHdvbiBiZWxpZXZlIHlvdSBzaW5jZSBJIGJlZW4gcGxheWluZyBwb2tlciBmb3IgMjAgeWVhcnMgYW5kIHN0aWxsIHRlbGwgcGVvcGxlIHRoYXQgd2hlbiBJIHNpdCBkb3duIG9uY2UgaW4gYSB3aGlsZS4gSXQgYSBzdGFsZSBvbGQgam9rZS4KSSBnZXQgdGhlIHNlbnNlIEkgc3RvcHBlZCByaWdodCBiZWZvcmUgdGhlIG1ham9yIHBsb3QgdG9vayBvZmYgYW55d2F5LiAKVW5sZXNzIHlvdSB3ZXJlIGluIGEgZmFjdG9yeSwgeW91IGhlbHBlZCB5b3VyIGh1c2JhbmQgcnVuIHRoZSBlY29ub215IChvcmlnaW4sIEdyZWVrIGZvciAiaG91c2Vob2xkLiIgRWNvbm9teSBzdGFydHMgYXQgaG9tZSBhbmQgd29ya3Mgb3V0d2FyZCkuIFNvIHlvdSBvciBhbiBvbGRlciBkYXVnaHRlciBvZiB5b3VycyB3ZXJlIGNhcmluZyBmb3IgdGhlIGJhYmllcywgZXZlbiBhcyB5b3UgZGlkIGNob3JlcyBhbmQga2VwdCB0aGUgc3RvcmUncyBib29rcyBpbiBvcmRlciBvciB3aXBlZCBvZmYgdGFibGVzIG9yIGNhbm5lZCBhbGwgdGhlIHRvbWF0b2VzIGFuZCBhcHBsZXMgZm9yIGEgeWVhci4gCkJ5IHRoZSBlbmQsIGhlIGRpZG4ndCB3YW50IHRvIGxvb2suIEhlYWQgYm93ZWQsIGhhbmRzIHJ1bm5pbmcgdGhyb3VnaCBoaXMgaGFpciwgTWFyY28gU2lsdmEncyBhY3Rpb25zIHNob3dlZCB0aGVyZSBpcyBubyBsaWZlIGZvciBoaW0gYXMgYSBwb2tlciBwbGF5ZXIuCkkgZGlkIGNvbnNpZGVyYWJseSBiZXR0ZXIgdGhhbiB5ZXN0ZXJkYXkncyB0b3VybmFtZW50LCBsYXN0aW5nIGFsbW9zdCAzIHRpbWVzIGFzIGxvbmcuIEFub3RoZXIgZW1iYXJyYXNzaW5nIGVwaXNvZGUgaW4gbXkgNyBjYXJkIGNhcmVlci4gSG93IG9uIGVhcnRoIGRpZCBJIHdpbiA3IENhcmQgU3R1ZCBjb21wcyBpbiB0aGUgZWFybHkgOTBzID8gSSdtIGJ1Z2dlcmVkIGlmIEkgY2FuIHJlbWVtYmVyIGhvdyA/IE9mZiB0byB0aGUgM3BtIHN1cGVyIHNhdCBJIGdvLiAKMS4gTmV3IE9ybGVhbnMgU2FpbnRzCkluIFRvcm9udG8gYW5kIFZhbmNvdXZlciwgdGhlIHJlbnRhbCB2YWNhbmN5IHJhdGVzIGFyZSBkb3duIHRvIG9uZSBwZXIgY2VudC4gRmluZGluZyBhIHJlbnRhbCB1bml0IGluIG9uZSBkZXNpcmVkIG5laWdoYm91cmhvb2QgaGFzIGJlY29tZSBpbmNyZWFzaW5nbHkgZGlmZmljdWx0IGJlY2F1c2UgbWFueSBob3VzZWhvbGRzIHdobyB3b3VsZCBoYXZlIGNoYW5nZWQgdGVudXJlIGZyb20gcmVudGluZyB0byBvd25pbmcsIGNvdWxkbiBkbyBzbyBhbnltb3JlIGJlY2F1c2Ugb2YgaGlnaGVyIHByaWNlcyBhbmQgc3RyaW5nZW50IG1vcnRnYWdlIHJlZ3VsYXRpb25zLgpBcyBmb3IgdGhlIGhvbGRvdmVyIHBlcmlvZCwgdGhhdCB3aGF0IEkgd2FzIHdvbmRlcmluZy4gSG93IGNvdWxkIGFuIGFnZW50IHByb3ZlIC8gZGlzcHJvdmUgdGhhdCB0aGUgZXZlbnR1YWwgYnV5ZXIgd2FzIChvciB3YXNuIGludHJvZHVjZWQgdG8gdGhlIHByb3BlcnR5IGR1cmluZyB0aGVpciBjb250cmFjdCB0ZXJtLiBJIHdvdWxkIG5ldmVyIHNpZ24gbW9yZSB0aGFuIGEgOTAgZGF5IGFncmVlbWVudCBhcyBpZiBpdCBhIGJhZCBhZ2VudCBhbmQgdXNlbGVzcyB0aGVuIHdvdWxkbiB3YW50IHRvIGJlIHN0dWNrIHdpdGggdGhlbS4KVGhpcyBtZWFucyB0aGF0IGluIENsJ3Mgb3V0ZXIgc2hlbGwgdGhlcmUgYXJlIDcgZWxlY3Ryb25zLiBBbGwgYXRvbXMgd2FudCA4IGVsZWN0cm9ucy4gCkFsbCBVU0IgZmxhc2ggZHJpdmVzIChhbHNvIGtub3duIGFzIHRodW1iIGRyaXZlcywgcGVuIGRyaXZlcywgZXRjKSBhcmUgdXNlZCBhcyB5b3Ugd291bGQgdXNlIHRoZSBpbnRlcm5hbCBoYXJkIGRyaXZlIGluc2lkZSB5b3VyIGNvbXB1dGVyLiBTdWNoIGZsYXNoIGRyaXZlcyBjb21lIGluIG1hbnkgc3R5bGVzIGFuZCBjYXBhY2l0aWVzLCBhbmQgZmlsZXMgY2FuIGJlIHdyaXR0ZW4gdG8sIGRlbGV0ZWQgZnJvbSwgYW5kIGZvcm1hdHRlZCBhcyB5b3Ugd291bGQgdG8gaGFyZCBkcml2ZXMuIChGdWxsIEFuc3dlcikuIAo4LiBZb3VyIEtpZHMgKG9yIG90aGVyIGZhbWlseSkgICBUaGlzIGlzIHVzdWFsbHkgbm90IGEgcHJlZmVycmVkIG9wdGlvbiwgYnV0IGRlcGVuZGluZyBvbiB5b3VyIG5lZWRzIGFuZCB0aGUgZmFtaWx5IHNpdHVhdGlvbiwgdGhpcyBjYW4gYmUgYW4gaW1wb3J0YW50IHNvdXJjZSBvZiBpbmNvbWUuClByZW1pZXIgV2lsbCBIb2RnbWFuIGhpdCB0aGUgaHVzdGluZ3Mgb24gRnJpZGF5IHRvIHRvdXQgaGlzIGdvdmVybm1lbnQgY3JlZGVudGlhbHMgYXMgYSBzYWZlIHBhaXIgb2YgaGFuZHMgd2l0aCBqb2JzIGFuZCB0aGUgZWNvbm9teS4gCkFsdGhvdWdoIG5vdyB0aGF0IEknbSB0eXBpbmcgdGhpcyBvdXQgaXQgZG9lc24ndCwgd2h5IGRyaXZlIHRoZSBnaXJscyA0MCBtaW51dGVzIHRvIHRoZSBzaXRlIGJlZm9yZSBraWxsaW5nIHRoZW0/IFRoZSBvbmx5IHJlYXNvbiB0aGF0IG1ha2VzIG1vcmUgc2Vuc2UgdG8gbWUgaXMgYmVjYXVzZSBvZiB0aGUgInNoYWRvd3MiIHdoaWNoIEkgcmVhbGl6ZSBoYXNuJ3QgYmVlbiBjb25maXJtZWQgYnkgYW55b25lIGluIExFIHNvIEkgZ3Vlc3MgSSBzaG91bGRuJ3Qga2VlcCB0aGlua2luZyB0aGF0J3MgZXZpZGVuY2UgdGhleSB3ZXJlIHN0aWxsIGFsaXZlLiBTb3JyeSBmb3IgdGhlIHJhbWJsaW5nLiBJIGFncmVlIHdpdGggeW91ciBwb3N0IGFib3V0IGhpbSBzdGlsbCBibGFtaW5nIGhlciBpdCdzIHNpY2suLiAKSSBmaW5kIGl0IHdlaXJkIHRoZXkgc2hvdWxkIGJlIHRoZXJlLCBidXQgdGhleSBqdXN0IHN0YW5kaW5nIGFyb3VuZCwgbm90aGluZyBsb29rcyB1bnVzdWFsIHVudGlsIEkgbm90aWNlIGEgcmVkIHNoaXJ0IGJlbmVhdGggYSB0cmVlIGFib3V0IDEwIG1ldHJlcyBhd2F5LiAKSXQgc2VtaSB0aWx0cyBtZSBhbmQgSSBjYWxsIG9mZiB0byBiZSBzaG93biBLSy4gSSBhZGQgb24gJDUwMCBtb3JlIGFuZCB0aGUgdmVyeSBuZXh0IGhhbmQgdGhpcyBoYXBwZW5zOi4gCkluIHNob3J0LCBjb250ZW50aW9uIHJlZmVycyB0byBzaG9ydCB0ZXJtIGFjdGl2aXR5ICBzdWNoIGFzIGEgc2luZ2xlIHByb3Rlc3Qgb3IgYSBzaG9ydCBjYW1wYWlnbi4gV2hlbiB0aGlzIGNvbnRlbnRpb24gaXMgc3VzdGFpbmVkIG92ZXIgdGltZSAoYSBkaWZmaWN1bHQgdGFzayksIGEgc29jaWFsIG1vdmVtZW50IGVtZXJnZXMuIApJbiBzb21lIHdheXMgd2hhdCBoZSBpcyBzYXlpbmcgYWxtb3N0IG1ha2VzIE1PUkUgc2Vuc2UsIHRoZSB3YXkgaGUgc2NyYW1ibGVkIGFib3V0IHRyeWluZyB0byBtYWtlIGV4Y3VzZXMgYXMgdG8gd2h5IHRoZSBraWRzIHdlcmVuJ3QgdGhlcmUuIApGaXNoZXIgUHJpY2UgUGFwYXNhbiB3b3JrZWQgZm9yIG91ciBjb2xpY2t5IGd1eS4gU29tZXRpbWVzIHdlIGV2ZW4gbGVmdCBoaW0gaW4gdGhlcmUgdGhyb3VnaCB0aGUgbmlnaHQgYmVjYXVzZSBpdCBzZWVtZWQgc28gbXVjaCBtb3JlIGNvbWZvcnRhYmxlIGZvciBoaW0uIEFuZCBPdm9sIGdhcyBkcm9wcyAgIHRoZXNlIHJlYWxseSBzZWVtZWQgdG8gaGVscCBoaW0gYSB0b24uIApNYW5hZ2VFbmdpbmUgQURNYW5hZ2VyIFBsdXMgKDY0IEJpdCkgaXMgYSBjb21wcmVoZW5zaXZlIGFuZCAuIEZyZWUgWm9obyBXaW5kb3dzIDIwMDAvWFAvMjAwMy9WaXN0YS9TZXJ2ZXIgMjAwOC83IFZlcnNpb24gNi4wIEZ1bGwuIAoiVGhlIGNoaWxkIHdhcyBib3JuIHdpdGggYSBtYWxmb3JtZWQgaGVhcnQgYW5kIGRpZWQsJyBoZSBzYXlzIHF1aWV0bHkuIApXaGF0IGhhcHBlbmVkIHRvIGFsbCB0aGUgcGVvcGxlIHdobyBzYWlkIHRoZXkgY29tZT8gSGUgZ290IG92ZXIgaXQsIGNvbnRpbnVlZCB0byBpbnZpdGUgdGhlIHBlb3BsZSBhbmQgbGFzdCB5ZWFyIGhhZCBhcm91bmQgNjAgcGVvcGxlIGFjdHVhbGx5IGNvbWUsIGVuam95IHRoZW1zZWx2ZXMsIGFuZCB0aGFuayBoaW0gbGF0ZXIuIApIYXMgYW55b25lIHJlYWRpbmcgdGhpcyBldmVyIHRyaXBwZWQgYWNpZCBhbmQgcGxheWVkIGluIGFuIE1UVD9UaGlzIGlzIGV4YWN0bHkgY29ycmVjdC4gSSB3YXNuIGFibGUgdG8gcmVhZCBwZW9wbGUsIHNvIHRvIHNwZWFrLCBidXQgSSBoYWQgYSBmZWVsaW5nIHRoYXQgSSB3YXMgcGVyZmVjdGx5IGluIHR1bmUgd2l0aCB0aGUgZmxvdyBvZiB0aGUgdGFibGUuIFRoZSBkaWZmZXJlbmNlIGJldHdlZW4gZm9sZCBhbmQgcHVzaCwgZm9yIG1lLCB3YXMgdGhlIGV4dHJhIGhhbGYgc2Vjb25kIG15IG9wcG9uZW50IHRvb2sgdG8gbWFrZSBoaXMgbW92ZS4gCkZyYUJha3RvcyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyMSBkYXlzIGFnbwpUaGV5IGRpZG4gc28gaXQgcHJldHR5IHNhZmUgdG8gY29uY2x1ZGUgdGhhdCB0aGVyZSBhcmUgbm8gYnVnIGZpeGVzLiBJZiB5b3UgdGhlbiBidXkgdGhlIGdhbWUsIGtub3dpbmcgYWJvdXQgaXQgYnVncywgdGhlbiB5b3Ugc2hvdWxkbiBmZWVsIHVwc2V0IG9yIGVudGl0bGVkIHRvIGEgcmVzcG9uc2UsIGJlY2F1c2UgeW91IGtuZXcgd2hhdCB5b3Ugd2VyZSBidXlpbmcgZnJvbSB0aGUgc3RhcnQuLiAKSXQgcmlkaWN1bG91cyB0byB0aGluayB0aGUgY291bnRyeSBsaWtlcyBiZWluZyBwb29yLCBvciB0aGF0IEtpbSBpcyBzb21lIGtpbmQgb2YgZWNvbm9taWMgaWRpb3QuIE5LLCBhcyBoYXMgYmVlbiBwcmV2aW91c2x5IHJlcG9ydGVkIGF0IGxlbmd0aCwgd291bGQgbG92ZSB0byBoYXZlIGZvcmVpZ24gaW52ZXN0bWVudC4gClVuIHRycyBib24gY2hvaXgsIGluZGlxdWUgdCBlbGxlLiAKQnkgZmFyIHRoZSB3b3JzdCBpIGhhdmUgZXZlciB1c2VkLiAKTWl0IDIsNSBCQi8xMDAgSG5kZSBHZXdpbm4gYmluIGljaCB6d2FyIG5pY2h0IHVuenVmcmllZGVuLCBhYmVyIHZlcmdsaWNoZW4gbWl0IG1laW5lciBHZXdpbm5yYXRlIGF1ZiAwLDUwLzEgaXN0IGRlciBHZXdpbm4gcHJvIFN0dW5kZSBkb2NoIGV0d2FzIGdlZmFsbGVuLiAKW2RlbGV0ZWRdICA0IHBvaW50cyAgc3VibWl0dGVkIDkgbW9udGhzIGFnbwpTZWUsIHdlIGhvbGQgYW4gYW5udWFsIGV2ZW50IGVhY2ggeWVhciB3aGljaCBpcyBiYXNpY2FsbHkgYSBmdW5kcmFpc2VyIGZvciBsb2NhbCBjaHVyY2hlcy4gU2luY2UgcG9rZXIgaXMgc3VjaCBhIHBvcHVsYXIgZ2FtZSBodW5kcmVkcyBvZiBwZW9wbGUgZW5qb3ksIGl0IHdhcyBldmlkZW50IHRoYXQgVGV4YXMgSG9sZCBFbScgdGFibGVzIHdlcmUgZ29pbmcgdG8gYmUgdGhlIG1haW4gc291cmNlIG9mIG91ciBlbnRlcnRhaW5tZW50LiAKQW5vcmhpRGVtYXJjaGUgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvClBlcmhhcHMgeW91IGFyZSB0aGlua2luZyBvZiBhIHNpdHVhdGlvbiB3aGVyZSB0d28gcGVvcGxlIGhhdmUgdGhlIHNhbWUgcGFpciwgZm9yIGV4YW1wbGUgYSBwYWlyIG9mIG5pbmVzLCBhbmQgb25lIGhhcyB0aGUgYWNlIGtpY2tlciBhbmQgdGhlIG90aGVyIGEgbm9uIGFjZSBraWNrZXIuIEluIHRoaXMgY2FzZSB0aGUgcGVyc29uIHdpdGggdGhlIGFjZSB3aW5zLCBidXQgb25seSBiZWNhdXNlIHRoZXkgYm90aCBoYXZlIHRoZSBzYW1lIHJhbmtlZCBwYWlyLgpUaGV5IHdlcmUgdGhlIG5pY2VzdCBhbmQgZnJpZW5kbGllc3QgZ3Vlc3RzLiAKWW91IG5lZWQgdG8gYmUgdGhhdCBzdGFibGUgdm9pY2UgdGhhdCBoZWxwcyB0aGVtIGtub3cgdGhleSBhcmUgbG92ZWQgbm8gbWF0dGVyIHdoYXQuIFRoaXMgY2FuIGJlIHRvdWdoIGJlY2F1c2UgeW91IGRvbid0IHdhbnQgdG8gc2VlIHlvdXIgY2hpbGQgc3VmZmVyaW5nIGFuZCBiZWluZyBidWxsaWVkLCBhbmQgeW91IG1pZ2h0IHRoaW5rIGl0IHdvdWxkIGJlIGVhc2llciB0byBqdXN0IGhlbHAgdGhlbSBsb3NlIHdlaWdodC4gCk5vdywgeW91IGNhbiBsZWFybiBob3cgdG8gaWRlbnRpZnkgdGhlIGNvbG9ycyBzbyB0aGF0IHlvdSBjYW4gc3BlbmQgbW9yZSB0aW1lIGZvY3VzaW5nIG9uIHRoZSBnYW1lIHRoYW4gdGhlIHByaW50ZWQgbW9uZXkgYW1vdW50cyBsaXN0ZWQgb24gdGhlIENsYXkgQ2FzaW5vIFBva2VyIENoaXBzIHRoYXQgeW91IGFyZSBwbGF5aW5nIHdpdGghLiAKVGV4YXMgSG9sZCAnRW0gaXMgcG9wdWxhciBidXQgc28gYXJlIE9tYWhhLCBSYXp6LCA3IGNhcmQgc3R1ZCwgYW5kIG1hbnkgb3RoZXJzLiAKQWxyaWdodCwgdGhlIHRoaW5nIGlzIEkga2lsbGVkIHlvdSBvbmNlIGFscmVhZHkuIApXaG8gcmVhbGx5IG1ha2VzIGZ1biBvZiB0aGVpciB3aWZlIGZvciBoYXZpbmcgc29tZSBleHRyYSB3ZWlnaHQsIHdpdGggb3Igd2l0aG91dCB0aGUgZmFjdCB0aGF0IHlvdSBqdXN0IGhhZCBhIGJhYnk/IEFsc28sIHRoYXQncyBzbGlnaHRseSB5b3VyIGZhdWx0IGZvciBhY3R1YWxseSBhZ3JlZWluZyB0byBtYWtlIGhpbSBhIHNhbmR3aWNoLiAKUGVvcGxlIGhhdmUgYmVlbiBzYXlpbmcgcG9rZXIgaXMgZGVhZCBmb3IgdGhlIGJldHRlciBwYXJ0IG9mIGEgZGVjYWRlIG5vdywgYnV0IGl0IGNsZWFybHkgc3RpbGwgYmVhdGFibGUsIGFuZCBzb21lIHBlb3BsZSBhcmUgc3RpbGwgbWFraW5nIGxvdHMgb2YgbW9uZXkuIApZb3UgY2FuIHJlY29nbml6ZSB0aGVzZSBjaGlwcyBieSB0aGVpciBmdWxsIGNvbG9yIGdyYXBoaWNzLCBhbmQgZGVzaWducyBvbiB0aGUgcmltLiAKQW5kIGJ5IHRoZSB3YXksIEhhcnJ5LCBJIHVuZGVyc3RhbmQgd2hhdCB5b3UncmUgdHJ5aW5nIHRvIGRvLCB5b3UncmUgdHJ5aW5nIHRvIGRlZmxlY3QgdGhlIGZhY3QgdGhhdCBqb2JzIG51bWJlcnMgYXJlIGJhZCwgdGhhdCBBbWVyaWNhbnMgYXJlIG91dCBvZiB3b3JrLCBhbmQgeW91J3JlIHRyeWluZyB0byB0aHJvdyBhbnl0aGluZyB1cCBvbiB0aGUgc2NyZWVuIHRoYXQgd2lsbCBncmFiIGF0dGVudGlvbiBhd2F5IGZyb20gdGhlIGZhY3QgdGhhdCB0aGUgcG9saWNpZXMgb2YgdGhlIFdoaXRlIEhvdXNlIGhhdmVuJ3Qgd29ya2VkIHRvIHB1dCBBbWVyaWNhbnMgdG8gd29yaywgYW5kIHRoZSBwb2xpY2llcyBvZiB0aGUgU2VuYXRlIGhhdmVuJ3QgZXZlbiBnb3R0ZW4gYSBidWRnZXQgaW4gcGxhY2UgZm9yIHRocmVlIHllYXJzLiIgSW4gYWRkaXRpb24sIFJvbW5leSBwcm9jbGFpbWVkICJJIGhhdmUgcGFpZCB0YXhlcyBldmVyeSB5ZWFyLCBhbmQgYSBsb3Qgb2YgdGF4ZXMsIGEgbG90IG9mIHRheGVzLiAKTGlrZSBhIEJQIG9pbCBzcGlsbCwgY3VyYmluZyB0aGUgbWlsaXRhcnkgaW5kdXN0cmlhbCBjb21wbGV4IHNlZW1zIHVuc3RvcHBhYmxlLi4gCkl0IGV4cGFuZGVkIHRvIFBvcnRsYW5kLCBPcmVnb24sIHdoaWNoIGhhcyB0aGUgaGlnaGVzdCBudW1iZXIgb2Ygc3RyaXAgY2x1YnMgcGVyIGNhcGl0YSBpbiB0aGUgY291bnRyeSwgYW5kIG9uIE1hcmNoIDksIEhvb3ZlciBhbmQgdGhlIEN1cGNha2UgR2lybHMgY2VsZWJyYXRlIHRoZWlyIGVpZ2h0aCBiaXJ0aGRheS5Ib292ZXIgZm91bmRlZCB0aGUgbm9ucHJvZml0IGFmdGVyIGxlYXZpbmcgYSBkaWZmZXJlbnQgb3JnYW5pemF0aW9uIHRoYXQgcHJvdmlkZWQgc2ltaWxhciBzZXJ2aWNlcy4gClNpc3NvbidzIHJlY29tbWVuZGF0aW9uczogd29yayBpbiB5b3VyIGdhcmRlbiwgc3RvbXAgdGhyb3VnaCBhIGNyZWVrLCBsaWUgaW4gYSBmaWVsZCwgb3Igc2lnbiB1cCBmb3IgYSBtdWQgcnVuLiBPdGhlciBzZWN0aW9ucywgaG93ZXZlciwgYXJlIG1vcmUgc3VzcGVjdCwgbGlrZSB0aGUgb25lIHBvaW50aW5nIG91dCB0aGUgInNlcmlvdXMgaGVhbHRoIHJpc2tzIG9mIHVzaW5nIHRoZSBldmVyeWRheSB0b2lsZXQuIiBIZSdzIG5vdCB0YWxraW5nIGFib3V0IHRoZSBoeWdpZW5pY2FsbHkgY2hhbGxlbmdlZCBkdWRlIHdobyB1c2VkIGl0IGJlZm9yZSB5b3UsIGVpdGhlci4gSGUncyB3b3JyaWVkIGFib3V0ICJmZWNhbCBzdGFnbmF0aW9uIiBkdWUgdG8gaW5lZmZpY2llbnQgZXZhY3VhdGlvbiBjYXVzZWQgYnkgc2l0dGluZyBvbiB0aGUgdGhyb25lLiAKQ291cGxpbmcgZG9lcyBub3Qgc29sdmUgb3VyIGlzb2xhdGlvbiAgaW4gZmFjdCwgY291cGxpbmcgbWF5IGluY3JlYXNlIG91ciBzb2NpYWwgaXNvbGF0aW9uLiAKTm93IGxldCdzIGNvdW50ZXIgd2l0aCB0aGUgdmVyeSBuZXh0IGNvbWluZyB1cCBpbnF1aXJ5IHJhaXNlZCwgYXMgdG8gaG93IHRoZSBjYXJkIGdhbWVzIGNhbWUgaW50byBleGlzdGVuY2Ugb3Igd2hhdCBpcyB0aGUgbmFycmF0aW9uIGNvbmNlcm5lZCB0byBpdD8gVGhlIHN0b3J5IGdvZXMgbGlrZSB0aGlzIHRoYXQgdGhlIGNhcmRzIGFyZSBzYWlkIHRvIGJlIGdpdmVuIGJpcnRoIGluaXRpYWxseSBpbiBDaGluYSwgdGhlIGNvdW50cnkgd2hpY2ggYm9hc3RzIG9mIGFuIGF3ZXNvbWUgaW52ZW50aW9uIG9mIHBhcGVyIGFzIHdlbGwuIEFuZCB3aGVuIHRoaXMgaGFwcGVuZWQgaXMgYWxzbyBhbiBpbXBvcnRhbnQgcG9pbnQgdG8gYmUgcG9uZGVyZWQgb24gYXMgdGhlIHNhbWUgd2FzIGJyb3VnaHQgaW50byB0aGUgcGljdHVyZSBhcyBlYXJseSBhcyBpbiB0aGUgN3RoIG9yIDEwdGggY2VudHVyeS4gCkFmdGVyd2FyZCwgc2hlIGRlZXAgY2xlYW5zIHlvdXIgZmFjZSB3aXRoIGEgaG90IHRvd2VsIGFuZCBmaW5pc2hlcyB3aXRoIGEgbm91cmlzaGluZyBtYXNrLi4gCk1heWJlIHRoZXkgd291bGQgaGF2ZSBkb25lIGl0IG90aGVyd2lzZSB0b28sIGJ1dCB0aGV5IGFsbCAoMTcvMjAgd2VyZSByZWd1bGFycyBvciBzbyBhbmQgdGhlIDMgbmV3IG9mIHVzIHdlcmUgb3V0KSBwbGF5IHZlcnkgb2Z0ZW4gYW5kIEkgZmVsdCB0aGV5IHdlcmUganVzdCB3YWl0aW5nIGZvciBtZSB0byBidXN0LiBCdXQgSSBjb3VsZCBiZSB3cm9uZy4gTWF5YmUgaXRzIGNvbW1vbiB0byBuZWdvdGlhdGUgdGhlIGJ1YmJsZS4gCk5vYm9keSBrbm93cyBmb3Igc3VyZSB3aGF0IHdvdWxkIGhhcHBlbiBpZiB3ZSBkaWQgaXQuIEhlcmUgaXMganVzdCBvbmUgZXhhbXBsZSBhcnRpY2xlIHRoYXQgc2hvd3Mgd2hhdCBJIG1lYW4uIE11bHRpcGxlIGV4cGVydHMgZ2l2aW5nIGRpZmZlcmVudCBhbnN3ZXJzIHRvIHRoZSBzYW1lIHF1ZXN0aW9uIGxvbC4uIApJbiB0aGlzIGZpcnN0IGlzc3VlIG9mIHRoZSBTaG9wcGVyIE1hcmtldGluZyBzZXJpZXMsIHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBtYXJrZXRlcnMsIHJldGFpbGVycywgYWQgYWdlbmNpZXMgYW5kIHNob3BwZXIgbWFya2V0aW5nIGFnZW5jaWVzIGlzIGV4cGxvcmVkIGFuZCBhbmFseXplZCB0byBoaWdobGlnaHQgYmVzdCBwcmFjdGljZXMuIENhc2Ugc3R1ZGllcyBmcm9tIGxlYWRpbmcgbWFya2V0ZXJzIHN1Y2ggYXMgS2ltYmVybHkgQ2xhcmsgYW5kIENvdmVyR2lybCBhcmUgaW5jbHVkZWQsIGFzIHdlbGwgYXMgc3BlbmRpbmcgcHJvamVjdGlvbnMsIGEgbGlzdGluZyBvZiBsZWFkaW5nIHNob3BwZXIgYWdlbmNpZXMgYW5kIHRoZWlyIG1ham9yIGNsaWVudHMsIGFuZCB0aXBzIGFuZCBhZHZpY2Ugb24gaG93IHlvdSBzaG91bGQgYmUgYXBwcm9hY2hpbmcgeW91ciBzaG9wcGVyIG1hcmtldGluZyBwcmFjdGljZS4gT3RoZXIgaXNzdWVzIGV4cGxvcmUgbmV1cm9zY2llbmNlIHRlY2huaXF1ZXMsIGNhc2Ugc3R1ZGllcyBhbmQgc2VhcmNoLCBzb2NpYWwgYW5kIG1vYmlsZSBzdHJhdGVnaWVzLiBBZCBBZ2UgSW5zaWdodHMgY3VzdG9tZXJzIGNhbiBwdXJjaGFzZSBpbmRpdmlkdWFsIGNvcGllcyBvZiBlYWNoIGlzc3VlIGZvciAkMjQ5LCBvciAkMTk5IGlmIHlvdSBhcmUgYWxyZWFkeSBhbiBBZCBBZ2Ugc3Vic2NyaWJlci4KVXBkYXRlZCBmcm9tIHZlcnNpb24gcG9zdGVkIGF0IHRoZSBmaW5hbCBvdXQuICBBQgpJIGxpdmUgaW4gQ2FsaWZvcm5pYSBhbmQgd2UgYSBmYW1pbHkgb2YgNCwgc28gSSBzYXkgdGhpcyBub3QgYXMgc29tZW9uZSB3aXRoIG15IGhlYWQgaW4gdGhlIHNhbmQgaW4gcmVnYXJkcyB0byBDT0wgZGlmZmVyZW5jZXMgYnV0IGMgeW91IGRvbiBuZWVkICQyMDAsMDAwIGEgeWVhciB0byBsaXZlIG9uLCB3aGljaCBhc3N1bWVzIHlvdSBhY3R1YWxseSBkb24gbG9zZSBuZXQgd29ydGguCkhvd2V2ZXIsIHlvdSBkb24ga25vdyB0aGVpciBwb3RlbnRpYWwgYW5kIHlvdSBkb24ga25vdyB3aGV0aGVyIHRoZXkgd2lsbCBiZSBzdWNjZXNzZnVsLiAKRG91Z2xhcyB3cm90ZSBtYW55IG9mIHRoZSBmaXJzdCBFbnRyaWVzIHRvIGFwcGVhciBvbiBIMkcyLiBBcyB3ZWxsIGFzIGNvbGxhdGluZyBhbGwgaGlzIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIHNpdGUsIHRoaXMgcGFnZSBhbHNvIGhhcyBsaW5rcyB0byBhbGwgdGhlIEFwcHJvdmVkIEVudHJpZXMgd3JpdHRlbiBieSBtZW1iZXJzIG9mIHRoZSBjb21tdW5pdHkgdGhhdCBhcmUgYWJvdXQgQWRhbXMgYW5kIGhpcyB3b3JrLiAKRXF1aXR5IGlzIHRoZSBzaGFyZSBvZiBtb25leSBpbiB0aGUgcG90IHRoYXQgYSBwYXJ0aWN1bGFyIGhhbmQgd291bGQgd2luIGF0IHRoYXQgcG9pbnQgaW4gcGxheSBpZiB0aGUgY2FyZHMgd2VyZSByYW4gb3V0LiBBSyBhZ2FpbnN0IDhUIG9uIGEgVEo0ciBmbG9wIGhhcyAzNSUgZXF1aXR5LgpCcm9uemUgYW5kIElyb24gcGxheWVycyBuZWVkIHRvIGxlYXJuIHRoZSBmdW5kYW1lbnRhbCBtZWNoYW5pY2FsIHNraWxsczogYXZhdGFyIG1vdmVtZW50LCBLZXliaW5kcywgQ1NpbmcsIGl0ZW0gYnVpbGRzLCB3aGVuIHRvIGdldCBjZXJ0YWluIGl0ZW1zLCB3aGF0IHNwZWxscyBkbywgd2hlcmUgdG8gcG9zaXRpb24gaW4gdGhlIGxhbmUsIHdhdmUgbWFuYWdlbWVudCwgYmFjayB0aW1pbmdzLCBob3cgdG8gc3ByZWFkIGEgbGVhZCBhbmQgd2hhdCBjaGFtcGlvbnMgdG8gcGxheS4gCldoZW4gcXVlcmllZCwgSG9sZGVuIGV4cGxhaW5zIHRoZSBtYW4gImhhcyBib3VnaHQgYSBwZXJjZW50YWdlIG9mIG1lIGZvciBhIHRvdXJuYW1lbnQgSSdtIHBsYXlpbmcgaW4iICAgYSBjb21tb24gb2NjdXJyZW5jZSBhbW9uZyB0aGUgaGlnaCBlbmQgcG9rZXIgc2V0LgpZb3UgYWxzbyBsb3NlIE1QRywgYW5kIHJvdGFyaWVzIGFscmVhZHkgZ2V0IHNvbWV0aGluZyBsaWtlLiAKQnV0IHBhc3QgdGhhdCwgcGVvcGxlIHNheSBUcnVtcCBpcyB0aGUgbW9zdCBoYXRlZCBwcmVzaWRlbnQgaW4gaGlzdG9yeS4gClRoaXMgd2hvbGUgdGltZSBzaGUgY29udGludWVkIHRvIHNlbGYgaGFybSBhbmQgd291bGQgbWFrZSBzdXJlIEkga25ldyBpdCB0byB0cnkgYW5kIGd1aWx0IG1lIGludG8gYmVpbmcgd2l0aCBoZXIuIEF0IG9uZSBwb2ludCBzaGUgd291bGQgc2F5IHRoaW5ncyBsaWtlICJXaGVuIHRoZSBzdW4gaGl0cyBteSBhcm0ganVzdCByaWdodCBJIGNhbiBzZWUgd2hlcmUgSSBjYXJ2ZWQgaGlzIG5hbWUgaW4gbXkgYXJtIiBTaGUgd291bGQgYWxzbyBkYXRlIHBlb3BsZSBJIGtuZXcgYW5kIGJlIHNleHVhbCB3aXRoIHRoZW0gYW5kIGJyYWcgYWJvdXQgaXQgbmVhciBtZSB0byAiVHJ5IGFuZCBtYWtlIG1lIGplYWxvdXMiClRydWUsIGJ1dCBpdCBzZWVtcyBoYXJkIHRvIGdldCB0aG91c2FuZHMgb3V0IG9mIHRoaXMgc3lzdGVtLiBZb3UgY2FuIGdhaW4gbW9yZSB0aGFuIG90aGVyIHBlb3BsZSBwdXQgaW4uIEFuZCB3aGF0IHRoZXkgcHV0IGluIGlzIGJlaW5nIGZlZCBvdXQgYXQgYSBzdGVhZHkgcmF0ZSBhbHNvLiBUaGVyZSBpcyB1bmxpa2VseSB0byBiZSB0aG91c2FuZHMgdGhhdCBjYW4gcGF5IG91dC4gVGhlIHJlc2VydmUgdGhhdCBjYW4gcGFpZCBvdXQgaXMgZ29pbmcgdG8gYmUgYSBwb3J0aW9uIG9mIHdoYXQgd2FzIHB1dCBpbiBvdmVyIHRoZSBsYXN0IFggZ2FtZXMgb3IgWCBhbW91bnQgb2YgdGltZS4gU28gdW5sZXNzIHBlb3BsZSBhcmUgZHJvcHBpbmcgdGVucyBvZiB0aG91c2FuZHMgaW4gYSBzaXR0aW5nLCB0aGVyZSBub3QgZ29pbmcgdG8gYmUgYSBsb3QgdG8gYmUgcGFpZCBvdXQuCkJsdHRlcm4gQWt0aW9uc2FuZ2Vib3RlIGluIFNpdHpzYWNrIGl6enkgbCAxMjAgTGl0ZXIgQXBmZWxncm4gMTA5OTc4LiAKIk5vIG9uZSBzaG91bGQgdW5kZXJlc3RpbWF0ZSB0aGUgZGVhZGx5IG5hdHVyZSBhc3NvY2lhdGVkIHdpdGggdGhlc2UgY29ja3RhaWxzLCIgaGUgc2FpZC4gIllvdSBjYW4gYnV5IG9uZSBvZiB0aGVzZSBjb2NrdGFpbHMgZm9yICQxMCB0byAkMjAgb24gdGhlIHN0cmVldCBhbmQgbG9zZSB5b3VyIGxpZmUgaW4gYSBmZXcgc2Vjb25kcy4iIEdyZXkgRGVhdGggbWF5IGJlIHRoZSBkZXNjZW5kYW50IG9mIGdyYXkgcGViYmxlIGxpa2UgbWl4dHVyZXMgb2YgaGVyb2luIHRoYXQgbGF3IGVuZm9yY2VtZW50IG9mZmljaWFscyBzZWl6ZWQgaW4gU2FuIERpZWdvLCBDaGljYWdvLCBhbmQgcnVyYWwgdG93bnMgaW4gS2VudHVja3kgYW5kIEluZGlhbmEgaW4gcmVjZW50IHllYXJzLiBUaGUgR2VvcmdpYSBCdXJlYXUgb2YgSW52ZXN0aWdhdGlvbnMgYWxzbyByZXBvcnRlZCBvbiBUaHVyc2RheSB0aGF0IGEgZGlmZmVyZW50IHN5bnRoZXRpYyBvcGlvaWQgY29ja3RhaWwsIG1hZGUgb2YgVSA0NzcwMCBhbmQgZnVyYW55bCBmZW50YW55bCAoYSBzZXBhcmF0ZSB2YXJpZXR5IG9mIGZlbnRhbnlsKSwgaGFzIGtpbGxlZCAxNyBwZW9wbGUgaW4gdGhlIHN0YXRlIGluIHRoZSBsYXN0IGZvdXIgbW9udGhzLgpJIHRvbyBnaXZlIHRoZW0gYWxsIGxpdHRsZSB2b2ljZXMgYW5kIHBlcnNvbmFsaXRpZXMuIFR5cmlvbiwgdGhlIGxpdHRsZSBSb2JpbiBXaWxsaWFtcyBwdXBweSBhbHNvIHJlbWluZHMgbWUgb2YgaGFubmliYWwgbGVjdG9yLCBiYXRtYW4sIGFuZCBhIHR1cnRsZSwgZGVwZW5kaW5nIG9uIGhpcyBtb29kLiBJbiBteSBvd24gaGVhZCBpIGhlYXIgaGltIHNheWluZyBsaXR0bGUgbW9ic3RlciBwaHJhc2VzIGxpa2UgIkRvbnQgd29ycnkgYWJvdXQgaXQuIiwgYnV0IGhlIGFsc28gYmFya3MgZG93biBhdCBoaXMgc2lzdGVyIGxpa2UgaGVzIHNvbWUga2luZCBvZiBsaXR0bGUgZGljdGF0b3IgbG9sLiAKT25jZSB5b3UndmUgZ290IHlvdXIgaGVhZGxpbmUgYW5kIGludHJvIHNvcnRlZCwgeW91J2xsIG5lZWQgdG8gc3RhcnQgd3JpdGluZyB0aGUgbWFpbiBib2R5IG9mIHRoZSBwb3N0LiBUaGlzIGNhbiBzb21ldGltZXMgc2VlbSBvdmVyd2hlbG1pbmcsIHNvIGJyZWFrIHRoZSB0YXNrIGRvd24gaW50byBtYW5hZ2VhYmxlIGNodW5rcyBieSBjcmVhdGluZyAnc2VjdGlvbnMnIGFuZCBkcmFmdGluZyBzdWIgdGl0bGVzIGZvciBlYWNoIG9uZS4gVGhpcyB3aWxsIG5vdCBvbmx5IGhlbHAgeW91IHRvIGZvY3VzIG9uIHN1Y2Nlc3NmdWxseSBjb21wbGV0aW5nIHlvdXIgYmxvZyBwb3N0LCBvbmUgc3RlcCBhdCBhIHRpbWUsIGl0IHdpbGwgbWFrZSBpdCBzaW1wbGVyIGZvciB5b3VyIGF1ZGllbmNlIHRvIHJlYWQuLiAKQXQgb25seSA1MiB5ZWFycyBvbGQgRGVhbiBsZWF2ZXMgYmVoaW5kIGhpcyBiZWxvdmVkIHdpZmUgb2YgMjAgeWVhcnMsIE1pY2hlbGxlIGFuZCB0aGVpciB0aHJlZSB5b3VuZyBzb25zIFphY2hhcnksIEplZmZyZXkgYW5kIERlcmVrLiAKSWdldG5vc2F0aXNmYWN0aW9uIHUKT24gYXZlcmFnZSwgYSBub24gSHVuZ2FyaWFuIGNoaWxkIGVudGVyaW5nIHRoZSBzY2hvb2wgaW4gU2VwdGVtYmVyIGlzIGZsdWVudCBhbmQgcGxheWluZyBpbiBIdW5nYXJpYW4gd2l0aCB0aGVpciBwZWVycyBieSBKYW51YXJ5LiBUaGVzZSBjaGlsZHJlbiBhcmUgMyA1IHllYXJzIG9sZCwgZm9yIHJlZmVyZW5jZS4uIApBdCB0aGUgZW5kIG9mIHRoZSB5ZWFyIHRhbGx5IGEgcGVyY2VudGFnZSBvZiB5b3VyIG1lYWwgZXhwZW5zZXMsIGF1dG8gZXhwZW5zZXMsIHRyYXZlbCBleHBlbnNlcywgYW5kIGFueXRoaW5nIGVsc2UgeW91IHdvdWxkIGNvbnNpZGVyIHRoYXQgbWlnaHQgZ28gdG93YXJkcyB5b3VyIHMgQ29ycCBzdGFydHVwLiBNYXliZSB5b3VyIG5ldyBjb21wYW55IGlzIHBsYW5uaW5nIHRvIG1ha2UgdmlkZW8gZ2FtZXMsIHdyaXRlIG9mZiBhbGwgeW91ciB2aWRlbyBnYW1lIGFuZCBjb21wdXRlciBwdXJjaGFzZXMuIE1heWJlIHlvdXIgcGxhbm5pbmcgb24gb3BlbmluZyBhIHJlc3RhdXJhbnQsIHNvIHdyaXRlIG9mZiBhbGwgeW91ciBtZWFscyBhcyByZXNlYXJjaC4gU28gZm9yIGxlc3MgdGhhbiAkMS44ay95ciB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gcmVkdWNlIHlvdXIgdGF4YWJsZSBpbmNvbWUgYnkgYSB0aGlyZCBvciBtb3JlLiBBcyBsb25nIGFzIHlvdXIgcGVyc29uYWwgdGF4ZXMgIkNvcnAgbG9hbiIgbGluZXMgdXAgd2l0aCB5b3VyIENvcnAgdGF4IGZpbGluZ3MgeW91IHNob3VsZCBiZSBnb29kIGFzIGNvcnBzIGhhcmRseSBldmVyIGdldCBhdWRpdGVkLiBBdCBzb21lIHBvaW50IHlvdSBjYW4gY2xvc2UgdGhlIENvcnAgYmVjYXVzZSBhbGwgdGhhdCByZXNlYXJjaCBsZWQgeW91IHRvIGJlbGlldmUgeW91ciBidXNpbmVzcyBtb2RlbCB3YXNuJ3QgZ29pbmcgdG8gd29yaywgYW5kIG5vdyB5b3UgaGF2ZSBhIG5ldyBhbmQgYmV0dGVyIGJ1c2luZXNzIG1vZGVsLiBSaW5zZSBhbmQgcmVwZWF0LgpJIHVuZm9sbG93IGV2ZXJ5b25lIEkgZG9uIG5lZWQgdG8gc2VlIG5ld3MgZnJvbSBvbiBGYWNlYm9vaywgSSBkb24ga2VlcCBteSBmZWVkIGZpbGxlZCB3aXRoIGxpa2VzLCBhcHAgY29ubmVjdGlvbnMsICJyZWxldmFudCBuZXdzIiwgb3IgRmFjZWJvb2sgcmVjb21tZW5kYXRpb25zLiBEaXNhYmxlIGFueXRoaW5nIHVubmVjZXNzYXJ5IGZyb20gdGhlIHNldHRpbmdzIGFuZCBmaW5lIHR1bmUgeW91ciBwcml2YWN5IHRvIGRpc2FsbG93IGFsbCBvZiB0aGUgY2x1dHRlci4KRG8gdGhpcyBmb3IgYSB3ZWVrICg2IGRheXMsIGFuZCAxIHJlc3QgZGF5KS5OZXh0IHdlZWssIGRvd24geW91ciByZWNvdmVyeSB0aW1lIGJ5IDEwIHNlY29uZHMsIHNvIHlvdXIgMTUwbSB3YWxrIGJhY2sgaXMgMTo1MCwgdGhlbiAxOjQwLCB0aGVuIDE6MzAuTmV4dCBzdGVwIGlzIHRvIGJ1aWxkIHlvdXIgZGlzdGFuY2UsIHNvIGRvIDIgeCAxNTBtIGluIDIgbWludXRlcywgYnV0IGdvIGJhY2sgdG8geW91ciAxNTBtIGluIDIgbWluIHdhbGsgYmFjay4gCldoaWxlIHlvdSBtZW50aW9uZWQgaXQsIHRob3VnaCwgSSBkaWQgZG8gYSBsaXR0bGUgZXhwbG9yYXRpb24gb2Ygc3VwcG9ydGluZyBkZWZhdWx0aW5nIChmb3IgaW5zZXJ0aW5nIHJvd3MpIGhlcmUuIFRoaXMgc2hpZnRzIHRoZSBidXJkZW4gaW50byB0aGUgaW5kZXguIEkgbm90IHN1cmUgaXQgYW4gaW1wcm92ZW1lbnQuIEkgc3VwcG9zZSBpdCBhbiBpbXByb3ZlbWVudCBpbiB0aGUgc2Vuc2UgdGhhdCBpZiB5b3UgZG9uIGhhdmUgYW55IGRlZmF1bHQgZmllbGRzLCB5b3UgZG9uIGhhdmUgdG8gc3BlY2lmeSB0aGUgcmVkdW5kYW50IG5lZ2F0aXZlLiAgKE1heWJlIERheSkgKGZvciAibnVsbGFibGUiKSBoYXMgdGhhdCBhZHZhbnRhZ2UsIGJ1dCBJIGhhdmVuIGV4cGVyaW1lbnQgd2l0aCB0aGF0IGluIHRoaXMgc2V0dGluZywganVzdCB1c2VkIGl0IGluIG90aGVyIGRhdGFiYXNlcy4gVGhlIHByb2JsZW0gaXMsIGFzIHNvb24gYXMgSSBjb21taXQgdG8gdGhlIGJyYW5jaCwgbXkgSURFIG5vIGxvbmdlciBrbm93cyB3aGljaCBmaWxlcyBoYXZlIGJlZW4gbW9kaWZpZWQuClRoZSBmaW5hbCBvY2N1cnJlbmNlIHdpdGggdGhlIG9sZGVyIHdvbWFuIGNhbWUgaW4gMjAxMiwgYnV0IHNoZSBjb250aW51ZWQgdG8gZXhwZXJpZW5jZSBlbW90aW9uYWwgZGlzdHJlc3MgYW5kIGEgaG9zdGlsZSB3b3JrIGVudmlyb25tZW50IHVudGlsIHNoZSBsZWZ0IHRoZSBjb21wYW55IGxhc3QgeWVhciwgaGVyIGF0dG9ybmV5cyBKdXN0aW4gV2F0a2lucyBhbmQgTWF0dGhldyBIb2ZmbWFubiBzYWlkIFRodXJzZGF5LgpJJ3ZlIGJlZW4gc3VmZmVyaW5nIGZyb20gYSBwYWluZnVsIHNob3VsZGVyIHNpbmNlIGxhc3QgRGVjZW1iZXIuIApFZiB5ZSBkaWRuYXkgaGF2ZSB5ZXIgZmVldCBpbiB5ZXIgd2UgbGxpZXMuIENhcmVUaGVyZSBhcmUgdmFyaW91cyB0eXBlcyBvZiBoZWFsdGhjYXJlIHByb2Zlc3Npb25hbCB3aG8gbG9vayBhZnRlciBkaWZmZXJlbnQgYXNwZWN0cyB0byBkbyB3aXRoIHlvdXIgZmVldCAgCkFycnRvbnMgbm91cyB1biBpbnN0YW50IHBvdXIgb2JzZXJ2ZXIgbm9zIHBpZWRzIDogbGV1ciBhc3BlY3QgZXN0IGFzc2V6IGN1cmlldXg7IHN1cHBvcnRzIGZyYWdpbGVzIGRlIHN0cnVjdHVyZSBkbGljYXRlLCBpbHMgcG9ydGVudCBub3RyZSBwb2lkcyB0b3V0IGVudGllciwgaWxzIG5vdXMgZCAgcGxhY2VudCB0b3V0ZSBub3RyZSB2aWUuIFN1ciBldXggc2UgcmVmbHRlbnQgYXVzc2kgdG91cyBsZXMgc2NobWFzIGR1IHBhc3MgOiBkZXMgcGllZHMgY2FycnMgIHBldGl0cyBvcnRlaWxzIHZvcXVlbnQgbGVzIHBldXBsZXMgcHJpbWl0aWZzIHF1aSBhbGxhaWVudCBwaWVkcyBudXM7IGRlcyBvcnRlaWxzIGxvbmdzIGV0IGZpbnMgcmFwcGVsbGVudCBjZXV4IGQgc2luZ2UgcXVpIHZhIHMgYXV0b3VyIGQgYnJhbmNoZSwgZXRjLi4gCkNCUzQgV2FudHMgVG8gU2VuZCBZb3UgVG8gVW5pdmVyc2FsIE9ybGFuZG8gUmVzb3J0V291bGQgeW91IGxpa2UgdG8gZ28gdG8gVW5pdmVyc2FsIE9ybGFuZG8gUmVzb3J0PyBFbnRlciBoZXJlIGZvciBhIGNoYW5jZSB0byB3aW4gdHdvIHRpY2tldHMgdG8gZW5qb3kgYWxsIHRoZSBhY3Rpb24sIHRocmlsbHMgYW5kIGV4Y2l0ZW1lbnQuCldlIGFwcHJlY2lhdGUgeW91IHRoaW5raW5nIG9mIHVzIHZlcnkgbXVjaCEgRm9yIG1vcmUgb24gb3VyIHJ1bGVzLCBwbGVhc2UgY2hlY2sgb3V0IG91ciBzaWRlYmFyLiBJZiB5b3UgaGF2ZSBhbnkgcXVlc3Rpb25zIG9yIGNvbmNlcm5zIGFib3V0IHRoaXMgcmVtb3ZhbCwgZmVlbCBmcmVlIHRvIG1lc3NhZ2UgdGhlIG1vZGVyYXRvcnMuIFBsZWFzZSBsaW5rIHRoZSBwb3N0IHNvIG91ciB2b2x1bnRlZXJzIGtub3cgd2hhdCB5b3Ugd291bGQgbGlrZSByZXZpZXdlZC4gQ2hlZXJzIS4KVGhpcyB3YXMgb24gYSBmYWlybHkgb2J2aW91c2x5IGFudGkgbGF3IGVuZm9yY2VtZW50IHN1YiBzbyBJIHdhbnRlZCB0byBwdXQgaXQgaGVyZSBhbmQgZ2V0IHNvbWUgTEVPIHBlcnNwZWN0aXZlcyBvbiB0aGUgY29udGVudCBvZiB0aGUgdmlkZW8uIEkgdHJpZWQgdG8gZGVmZW5kIFNPTUUgb2YgdGhlIGFjdGlvbnMgaW4gdGhlIGNvbW1lbnRzIGFzIHNvbWVvbmUgd2hvIGhhcyB3b3JrZWQgY2xvc2VseSB3aXRoIExFT3MgYnV0IG5hdHVyYWxseSBJIGdvdCBkb3dudm90ZWQgdG8gaGVjayBvdmVyIHRoZXJlLiBMaWZlIHJhcmVseSBsb29rcyBsaWtlIHRoZSB0ZXh0Ym9vayBkZWZpbml0aW9uLiBXaGVuIGhlIHB1bGxlZCB0aGUgcGFzc2VuZ2VyIG91dCBvZiB0aGUgdmVoaWNsZSBiZWNhdXNlIGhlIHN1c3BlY3RlZCB0aGF0IGhlIGhhZCBjb21taXR0ZWQsIHdhcyBjb21taXR0aW5nLCBvciB3YXMgYWJvdXQgdG8gY29tbWl0IGEgY3JpbWUsIGFuZCB0aGUgc3ViamVjdCB3YXMgbm90IGZyZWUgdG8gZ28sIHRoYXQgbWV0IHRoZSBsZWdhbCBkZWZpbml0aW9uIG9mIGEgVGVycnkgc3RvcC4KRHJleGVsIGRpZXRpdGlhbiBzaGFyZXMgaG93IHRvIGVhdCBoZWFsdGh5IGF0IGZhc3QgZm9vZCByZXN0YXVyYW50cwpMUEcgaXMgYSBub24gcHJvZml0IHZvbHVudGVlciBncm91cCBiYXNlZCBpbiBLTCwgY29tbWl0dGVkIHRvIG1ha2luZyBhIGRpZmZlcmVuY2UgdG8gdGhlIHF1YWxpdHkgb2YgbGlmZSBmb3IgdGhlIExHQlQgY29tbXVuaXR5IGluIE1hbGF5c2lhLiAKVGhlcmUgaXMgbm8ganVzdGlmaWNhdGlvbiBmb3IgY29udGludWluZyB0byBjaG9wIG9mZiBwYXJ0cyBmcm9tIGNoaWxkcmVuIGdlbml0YWxzLi4gCkkganVzdCB0b29rIGl0IGFzIGEgcmVmZXJlbmNlIHRvIGhhdmUgc29tZXRoaW5nIHRvIGxpbmsuIE1heWJlIGNoZWNrIGZvciByZXZpZXdzIG9uIGdvb2dsZSBvciBzb21ldGhpbmcuLiAKSWYgY29udmljdGVkIG9mIHJhY2tldGVlcmluZyBjb25zcGlyYWN5LCBoZSBmYWNlcyB1cCB0byAyMCB5ZWFycyBpbiBwcmlzb24uCkJlbGxhcyBCb2R5d29ya3MKV2l0aCB0aGUgYmFieSBkdWUgU2F0dXJkYXksIE1jTGFyZW4gaGFzIGJlZW4gZnJhbnRpY2FsbHkgdHJ5aW5nIHRvIGNvbGxlY3QgbW9uZXkgZm9yIHRoZSBjb3VwbGUgYXMgd2VsbCBhcyBiYXNpYyBuZWNlc3NpdGllcyBmb3IgaGVyIHNpc3Rlci4KSSBmaW5kIGl0IGlyb25pYyB0aGF0IHlvdSBjb21wYXJlIHdoYXQgSSBhbSBkb2luZyB0byBzb21lb25lIHJhdGlvbmFsaXppbmcgc2xhdmVyeSwgeWV0IHNsYXZlcnkgKGFuZCBtYW55IG90aGVyIGhvcnJpZmljIGFjdHMgb2YgcmFjaXNtLCBzZXhpc20sIGV0Yy4pIG9jY3VycmVkIHdoZW4gYSBncm91cCBvZiBwZW9wbGUgd2VyZSBkZWh1bWFuaXplZCBieSBhbm90aGVyIGJhc2VkIG9uIGEgY2VydGFpbiBjaGFyYWN0ZXJpc3RpYywgd2hpY2ggaXMgRVhBQ1RMWSB0aGUgc2FtZSB0cmFpbiBvZiBsb2dpYyBiZWluZyB1c2VkIHRvIGp1c3RpZnkga2lsbGluZyBmZXR1c2VzIFJJR0hUIE5PVy4gQmxhY2sgcGVvcGxlIHdlcmUgZGVodW1hbml6ZWQgZm9yIHRoZWlyIHNraW4gY29sb3IsIHNvIGl0IGlzIG9rIGZvciBhY3R1YWwgaHVtYW5zIHRvIGVuc2xhdmUgdGhlbSA9IHVuYm9ybiBiYWJpZXMgYXJlIGRlaHVtYW5pemVkIHVudGlsIHRoZXkgYXJlIHZpYWJsZS9zZW50aWVudC9ldGMuIFNvIGl0IGlzIG9rIGZvciBhY3R1YWwgaHVtYW5zIHRvIGtpbGwgdGhlbS4gCk9mIGFsbCBhY2Nlc3NvcmllcyBmb3Igc3F1YXRzIEkgYW0gYSBmaXJtIGJlbGlldmVyIHRoYXQgdGhlIFNTQiBhbmQgVCBCYXIgc3F1YXRzIGFyZSBhcmd1YWJseSB0aGUgYmVzdC4gRXNwZWNpYWxseSBpZiB5b3UgaGF2ZSBzaG91bGRlciBwcm9ibGVtcyBsaWtlIEkgZG8uIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGRheXMgYWdvU3F1YXRzOiBicmVhdGhpbmcvYnJhY2luZyBkcmlsbHMsIGhpcCBtb2JpbGl0eSBkcmlsbHMsIGJhY2sgc3RyZXRjaGluZywgdGFjdGljYWwgZnJvZ3MsIGRlYWQgYnVncywgYmFuZGVkIGFua2xlIHNxdWF0cywgc21hc2ggdGhlIGJvdHRvbSBvZiBteSBmZWV0LCBzaG91bGRlcm9rcywgbW9kaWZpZWQgd2FsbCBhbmdlbHMsIHRoZW4gc3RhcnQgc3F1YXR0aW5nLkJlbmNoOiBCYW5kZWQgcHVsbCBhIHBhcnRzLCBrZXR0bGUgYmVsbCBhcm0gYmFycywgc2hvdWxkZXJva3MsIHRoZW4gc3RhcnQgYmVuY2hpbmcuRGVhZGxpZnQ6IFNhbWUgYXMgc3F1YXQgYnV0IHJlbW92ZSBiYW5kZWQgc3F1YXRzLCBmb290IHNtYXNoaW5nLCBhbmdlbHMsIGFuZCBzaG91bGRlciByb2Nrcy4gCkh1cHBlcnQgaGFkIGJlZW4gYSBmYW4gb2YgVmVyaG9ldmVuICAgdGhlIER1dGNoIHByb3ZvY2F0ZXVyIGVxdWFsbHkgcmVub3duZWQgYW5kIHJldmlsZWQgZm9yIEJhc2ljIEluc3RpbmN0ICgxOTkyKSBhbmQgU2hvd2dpcmxzICgxOTk1KSAgIGdvaW5nIGFsbCB0aGUgd2F5IGJhY2sgdG8gb25lIG9mIGhpcyBlYXJsaWVzdCBmZWF0dXJlcywgVHVya2lzaCBEZWxpZ2h0ICgxOTczKSwgYWJvdXQgdGhlIHRlbXBlc3R1b3VzIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIGEgc2N1bHB0b3IgYW5kIGhpcyB3aWZlLiAiSSByZW1lbWJlciByZWFkaW5nIHRoaXMgdmVyeSBnb29kIHJldmlldyBvZiBbVHVya2lzaCBEZWxpZ2h0XSBpbiBDaGFybGllIEhlYmRvLCIgc2hlIHJlY2FsbHMuICJUaGUgZmlsbSB3YXMgY29tcGxldGVseSBuZWdsZWN0ZWQgcmVsZWFzZSB3aXNlOyBpdCB3YXMgW3Nob3duXSBpbiBhIHNlbWkgcG9ybm8gbW92aWUgaG91c2UsIGFuZCB0aGF0J3Mgd2hlcmUgSSBzYXcgaXQuIi4gCkhvd2V2ZXIsIEkgZGVjaWRlZCB0aGlzIHllYXIgdG8gZ28gdG8gYSBkaWZmZXJlbnQgZGVzdGluYXRpb24uIFRoZSBnYW1lcyBpbiBWZWdhcyBhcmVuIHRvdWdoIHBlciBzZSwgYnV0IEkgaGF2ZSBqdXN0IGhhZCB0aGUgZmVlbGluZyB0aGF0IHRoZXJlIGFyZSBlYXNpZXIgZ2FtZXMgdG8gYmUgZm91bmQgaWYgSSBob3BwaW5nIG9uIGEgcGxhbmUuIApJIHNlbmQgeW91IGJhZyBvZiBmaWxsZXRzIHRoaXMgc3VtbWVyIGp1c3Qgc28geW91IGNhbiBnaXZlIHRoaXMgYSB0cnkgb3RoZXIgdGhhbiB3aGF0IHlvdXIgdXNlZCB0byEuIApDb21tZW50YWlyZSBkdGFpbGwgOgpTcGluYWwgbWFuaXB1bGF0aW9uIGZvciBhY3V0ZSBsb3cgYmFjayBwYWluCkhlcmUsIGFuIEEgdG8gWiBndWlkZSBvZiBzb21lIG9mIHRoZSB0ZXJtcyBTYXZlbGxpIGhpZ2hsaWdodHM6ClRoZSBzYW1lIGNhbiBiZSBzYWlkIG9mIHBva2VyLiAKRmVlcyByYW5nZSBmcm9tIGFzIGxpdHRsZSBhcyAkNjAgdG8gJDE1MCBwZXIgaG91ci5PZnRlbiBhIGNvbXBhbnkgYW5kIHRoZWlyIGVtcGxveWVlcyB3aWxsIHNoYXJlIHRoZSBjb3N0IG9mIGJyaW5naW5nIE9uIFNpdGUgTWFzc2FnZSBpbnRvIHRoZSBvZmZpY2UuIEluIHRoaXMgRW1wbG95ZWUvQ29ycG9yYXRlIHNwb25zb3JzaGlwLCB0aGUgY29tcGFueSBhbmQgdGhlIGVtcGxveWVlIGFncmVlIG9uIGEgcGVyY2VudGFnZSB0aGF0IGVhY2ggd2lsbCBjb3Zlci4gKEZvciBleGFtcGxlLCBDb21wYW55IDYwJSAvIEVtcGxveWVlIDQwJSlPZnRlbiBhIGNvbXBhbnkgd2lsbCBjb250cmlidXRlIHRoZSB0aW1lIHRvIHJlY2VpdmUgT24gU2l0ZSBNYXNzYWdlIGFuZCBlbXBsb3llZXMgd2lsbCBjb3ZlciAxMDAlIG9mIHRoZSBjb3N0Mi4gCldoaWNoIHRvd24geW91IGdvIHRvIGRlcGVuZHMgb24geW91ciBmYWN0aW9uLiAKRW4gY2lucSBtaW51dGVzLCBsZXMgdXRpbGlzYXRldXJzIGRlIENsaXQgbW9pIHNlcm9udCBzZW5zaWJpbGlzcyBzYW5zIHRhYm91IGF1IHBsYWlzaXIgc2V4dWVsIGZtaW5pbiB0b3V0IGVuIHNlIGZhbWlsaWFyaXNhbnQgYXV4IHpvbmVzIHJvZ25lcyBkdSBjbGl0b3Jpcy4KSW4gd2hhdCBmb3JtIHRoZXNlIGNvbWUgZG9lc24gcmVhbGx5IG1hdHRlci4gCkFsbHRoZW1hcmJlbHMgIDIgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpXb3JtIGlzIHN1Y2ggYSBwZXJmZWN0IHNsZWF6eSBhbnRpaGVybyBpbiB0aGUgZmlsbSBhbmQgSSB0aGluayB0aGUgb3ZlcmFyY2hpbmcgdGhlbWUgb2YgdGhlIG1vdmllIGlzIHZlcnkgcmVsYXRhYmxlLiBPbiBvbmUgaGFuZCB5b3UgaGF2ZSB0aGUgcGF0aCBvZiBsYXcgc2Nob29sIHdoaWxlIHRoZSB0ZW1wdGF0aW9ucyBvZiB0aGUgZmFzdCBwYWNlZCBsaWZlIGFzIGEgaGlnaCBzdGFrZXMgcG9rZXIgcGxheWVyIGtlZXAgcHVsbGluZyBhdCBNaWtlIE1jRC4gCkJyYW5kIHZvbHVtZSByZW1haW5zIGRvd24gbW9yZSB0aGFuIDYgcGVyY2VudCB5ZWFyIHRvIGRhdGUuIERvIHlvdSBoYXZlIGFueSBldmlkZW5jZSB0aGF0IHRoZSByZW5ld2VkIGVtcGhhc2lzIG9uIHJlZnJlc2htZW50IHMgd29ya2luZz8KVGhhdCBzdWNjZXNzLCB3cml0ZXMgVnJhbnRzaWRpcywgd2hvIGNyZWRpdHMgaGVyIGNhcmVlciBpbiBtYXRoIHRvIHNwYXJrIHRoYXQgd2FzIGlnbml0ZWQgaW4gTWFzc2V5IGVucmljaGVkIG1hdGggY2xhc3NlcywgaXMgZHVlIHRvIHRoZSBzY2hvb2wgZnVsbCB5ZWFyIGNvdXJzZXMuIFNoZSBub3RlcyB0aGUgSW50ZXJuYXRpb25hbCBCYWNjYWxhdXJlYXRlIFByb2dyYW0sIHdoaWNoIGNpdGVzIHRoZSBuZWVkIGZvciBib3RoIGludGVuc2l2ZSBsZXNzb25zIHRvIGxlYXJuIG1hdGVyaWFsIGFuZCBsZXNzb25zIHRoYXQgYXJlIHNwcmVhZCBvdmVyIHRpbWUgdG8gcmV0YWluIGl0LgpBbmQgSSBkb24gaGF2ZSB0byBkbyBpdCBmb3IgdGhlIGVsZWN0aW9uLCBJIGFscmVhZHkgZG9uZSBhIGxvdCBvZiB3YWxsIGZvciB0aGUgRWxlY3Rpb24uIDIwMjAuIApEaXRjaGluZyB0aGUgZGFpbHkgY29tbXV0ZSBhbmQgdGhlIHdoaXJsd2luZCBvZiBhY3Rpdml0aWVzIGluIENhbmFkYSBoYXMgYWxsb3dlZCB0aGUgZmFtaWx5IHRvIHNwZW5kIG11Y2ggbW9yZSB0aW1lIHRvZ2V0aGVyIG9uIGEgZGFpbHkgYmFzaXMsIHdoZXRoZXIgaXQgaGF2aW5nIGEgYmVhY2ggY2FtcGZpcmUsIHN3aW1taW5nLCBvciBleHBsb3JpbmcgdGhlIGlzbGFuZC4gCkkgdW5kZXJzdGFuZCB5b3VyIHBvaW50LCBidXQgdGhpcyB0ZWFtIGhhcyBiZWVuIGNlbGxhciBkd2VsbGVycyBzaW5jZSAyMDEyIGVzc2VudGlhbGx5LiAKVGhhdCB0aGUgdHlwZSBvZiB0aGlua2luZyB0aGF0IHdpbGwgcmVzdWx0IGluIHlvdSBmb2xsb3dpbmcgaW4geW91ciBwYXJlbnRzIGZvb3RzdGVwcyBhbmQgbGl2aW5nIGEgbGlmZSBvZiBzdHJ1Z2dsaW5nIGZpbmFuY2lhbGx5LCBldmVuIGlmIHlvdSBlYXJuIHNpZ25pZmljYW50bHkgbW9yZSB0aGFuIHRoZXkgZG8uLiAKVGhvc2UgdGVuZCB0byBoaWdobGlnaHQgZXllcyB3aXRob3V0IG92ZXIgcG93ZXJpbmcuIApJZiBhIDQsIDUsIDYsIDgsIDksIG9yIDEwIGlzIHJvbGxlZCwgeW91IHRoZW4gd2luIGlmIHRoZSBzaG9vdGVyIHJvbGxzIHRoYXQgbnVtYmVyIGFnYWluIGJlZm9yZSByb2xsaW5nIGEgNy4gCk15IHN1Z2dlc3Rpb24gdGhhdCB3ZSBhdm9pZCB0aGUgdGVybSBlbGRlcmx5aW4gbWVkaWNpbmUgZ29lcyBiZXlvbmQgdGhlIHdvcmQgaXRzZWxmIHRvIGVuY29tcGFzcyBhbGwgdGhhdCBpdCBjb25ub3Rlczogc3RlcmVvdHlwZXMsIHVud2FycmFudGVkIGltcHJlc3Npb25zLCBhbmQgYmlhcy4gVGhpcyBpcyBlc3NlbnRpYWxseSBhIGh1bWFuIHJpZ2h0cyBpc3N1ZS4gTWVkaWNpbmUgaXMgdGhlIHNjaWVuY2UgYW5kIGFydCBvZiBpbmRpdmlkdWFsaXNlZCBjb21tdW5pY2F0aW9uLCBldmFsdWF0aW9uLCByZWNvbW1lbmRhdGlvbiwgYW5kIHRyZWF0bWVudC4gCiJUaGUgc3RyZXNzIGlzIGp1c3QgZWF0aW5nIHBlb3BsZSB1cCByaWdodCBub3csIiBzYXlzIERhdmlkIEdyZWVuLCBwcmVzaWRlbnQgb2YgVW5pdGVkIEF1dG8gV29ya2VycyBMb2NhbCAxMTEyLCB3aGljaCByZXByZXNlbnRzIHdvcmtlcnMgYXQgdGhlIHBsYW50LiAiSXQncyBsaWtlIHBsYXlpbmcgcG9rZXIgd2l0aG91dCBsb29raW5nIGF0IHRoZSBjYXJkcy4gQW5kIG9uZSBpbiBDYW5hZGEgb24gdGhlIE1vbmRheSBhZnRlciBUaGFua3NnaXZpbmcgYXMgcGFydCBvZiBhIHN3ZWVwaW5nIHJlc3RydWN0dXJpbmcgcGxhbi4gClRoaXMgYmUgYW4gdW5wb3B1bGFyIG9waW5pb24sIGJ1dCBJIGFsd2F5cyBzYXcgdGhlIHdpbmsgd2luayBudWRnZSBudWRnZSBTdGFuIExlZSBjYW1lb3MgYXMgc2ltaWxhcmx5IGRpc3Rhc3RlZnVsLiAoRXNwZWNpYWxseSBzbyBhZnRlciBsZWFybmluZyBhYm91dCBob3cgaGUgZGlkbiBuZWNlc3NhcmlseSBoYXZlIGl0IGFsbCB0b2dldGhlciBpbiB0aGUgbGF0ZXIgeWVhcnMsIGFuZCBkb3VibHkgc28gd2hlbiBJIGhlYXJkIHRoYXQgdGhleSBwcmVwYXJlZCBmb290YWdlIHRvIGNvbnRpbnVlIGluc2VydGluZyBoaW0gaW50byBmaWxtcyBhZnRlciBoaXMgcGFzc2luZy4pIEl0IGp1c3QgYW4gYXdrd2FyZCBjdWx0IG9mIHBlcnNvbmFsaXR5IHRoaW5nIGFuZCBpdCBhbHdheXMgc3R1Y2sgbWUgYXMgZGVodW1hbml6aW5nIGluIGEgd2F5LiAKIlRoYXQncyBhIGtleSBwZXJzb24gb24gb3VyIHRlYW0sIiBXaWxsaWFtcyBzYWlkIG9mIFRpbGxpZS4gIlRoZXkncmUgbG9uZyBhbmQgYXRobGV0aWMuIEkgZmVsdCBsaWtlIHdlIG1pc3NlZCBlYXN5IHNob3RzIGFyb3VuZCB0aGUgcmltLCBhbmQgdGhhdCdzIG9uIHVzLiIKQSBkZWVwZXIgcmV2ZWFsIGJyaW5ncyBtZSB0byB0aGUgcmF0aGVyIGhvc3RpbGUgc2lkZSBvZiB0aGUgYm94aW5nIGJ1c2luZXNzLiAiWW91IHNlZSwgYmFjayB0aGVuLCB3ZSByZWxpZWQgb24gdGhlIHByb21vdGVycy4gV2UgcmVsaWVkIG9uIHRoZW0gdG8gbWFrZSBvciBicmVhayBvdXIgY2FyZWVycy4gCkEganVkZ2UgY2FuIGdldCBhIHJlcHJpbWFuZCwgd2hpY2ggZG9lc24gZG8gbXVjaCBleGNlcHQgYWxsb3cgZm9yIGhpbSB0byBiZSBibGFzdGVkIGluIHRoZSBwcmVzcy4gSWYgaGUgYWN0dWFsbHkgdmlvbGF0ZXMgdGhlIGp1ZGljaWFsIGNvZGUgb2YgY29uZHVjdCBvciBzZXJpb3VzbHkgaGFybXMgdGhlIGp1ZGljaWFsIGludGVncml0eSwgdGhlbiBoZSBjb3VsZCBiZSBjZW5zdXJlZCBhbmQgcG9zc2libHkgZmFjZSBzb21lIHNvcnQgb2YgYSBjb3JyZWN0aXZlIGFjdGlvbi4gCihXaGlsZSBhbiBlbmVteSBpcyB3aXRoaW4geW91ciBzaWxlbmNlOyB5b3VyIHN0ZWFsdGggaXMgaGFsdmVkIHNvIHRoZSBpbmRpdmlkdWFsIG1vbnN0ZXIgaXMgbW9yZSBsaWtlbHkgdG8gbm90aWNlIHlvdTsuIApJIGNhbiBzcGVhayBmb3Igb2xkIG1hdGVyaWFscyBvbiB5b3VyIHJlYWxtICh0aGV5IGNhbiBtb3ZlIHNsb3dseSBvbiBhbGwgcmVhbG1zLCBpdCBqdXN0IGRlcGVuZHMgb24gdGhlIHNwZWNpZmljIG1hdGVyaWFscyB5b3UgdGFsa2luZyBhYm91dCwgaGVyZSksIGJ1dCBleGFtcGxlcyB3b3VsZCBiZSB1c2VmdWwuIFdoYXQga2luZCBvZiBvbGQgd29ybGQgbWF0cyBkbyB5b3UgdGhpbmsgc2VsbCBvbiBvdGhlciBzZXJ2ZXJzIGJ1dCBub3QgeW91ciBvd24/ClRoZSBqdWRnZSBsYWlkIGJhcmUgdGhlIGFjY3VzYXRpb25zIGFnYWluc3QgS2lscGF0cmljayBvZiBmYWtlIGpvYnMgZm9yIGZhbWlseSBhbmQgZnJpZW5kcywgbGF2aXNoIHBhcnRpZXMsIHBheSB0byBwbGF5IHNjaGVtZXMsIGFuZCBzZWNyZXQgYWZmYWlycywgc2F5aW5nIGhlIGdlbmVyYWxseSBzaG93biBsaXR0bGUgcmVtb3JzZSBmb3IgYSBiZXZ5IG9mIGluZnJhY3Rpb25zLiAKT25lIHdhcyBmb3IgYSBjYXIgd29ydGggYWJvdXQgJDkwLDAwMCwgYW5kIFBhZGRvY2sgdG9vayB0aGUgY2FzaCBlcXVpdmFsZW50IGluc3RlYWQuIApUaGlzIE9QLCBlc3BlY2lhbGx5IHRoZSBub3RlIGFib3V0IHRoaXJkIHBhcnR5IGd1YXJkaWFuc2hpcC4gSSdtIGluIEF1cyB0b28sIGFuZCBJIGRpZCBub3RpY2UgaW4gb25lIG9mIHRoZSBob3NwaXRhbHMgSSd2ZSBiZWVuIGF0IHRoYXQgdGhlcmUgd2FzIGEgYnVzaW5lc3MgY2FyZHMgZm9yIGd1YXJkaWFucyBmb3IgYWR1bHRzIHdobyBuZWVkIGl0LiBUaGVyZSBhcmUgZGVmaW5pdGVseSBzZXJ2aWNlcyBsaWtlIHRoaXMgYXZhaWxhYmxlLCBhbmQgZm9yIGFueXRoaW5nIGxpa2UgTUlMJ3MgZXN0YXRlIG9yIGZpbmFuY2lhbCBtYXR0ZXJzLCBpdCdzIGVudGlyZWx5IHBvc3NpYmxlIHRvIGhhdmUgZWl0aGVyIGEgc29saWNpdG9yIG9yIHRoZSBwdWJsaWMgdHJ1c3RlZSB0YWtlIG9uIHRoZSByb2xlIG9mIGV4ZWN1dG9yLCBvciBtYW5hZ2UgaGVyIGZpbmFuY2VzIGlmIHNoZSBpcyBpbmNhcGFibGUuCk1hbnkgb2YgdGhlbSBtYWRlIHRoZWlyIGZvcnR1bmVzIGluIGJhY2sgcm9vbSBnYW1lcyAgIGFuZCB1c3VhbGx5IGxvc3QgdGhlbSBhZ2Fpbi4gClRvZGF5IGlzIHRoZSBzYW1lIGFzIGl0IHdhcyB0aGVuOiBHaXZlIHBlb3BsZSBhY2Nlc3MgdG8gdGhlIGJlc3QgYmVlciBJIGhhdmUgYWNjZXNzIHRvLCIgaGUgc2FpZCAgIGV2ZW4gaWYgdGhhdCBwdXJzdWl0cmVxdWlyZXMgYW4gYXdrd2FyZCBjb252ZXJzYXRpb24gYXQgdGltZXMuLiAKRmVhciBpcyBhIGhpZ2hseSBlZmZlY3RpdmUgc3RhdGUgdG8ga2VlcCBhIHBvcHVsYXRpb24gaW4uIFBlb3BsZSB3aG8gYXJlIGFmcmFpZCBvZiBhdHRhY2tzIGF0IGFpcnBvcnRzIGFuZCBmZWRlcmFsIGJ1aWxkaW5ncyBkb24gcmVhbGx5IGhhdmUgbXVjaCB0aW1lIHRvIHF1ZXN0aW9uIHdoYXQgdGhlIHN0YXRlIGlzIGRvaW5nIHRvICJwcm90ZWN0IiB1cy4gQ2xlYXJseSB0aGVyZSBpcyBhIHRocmVhdCwgd2h5IGVsc2Ugd291bGQgdGhleSBiZSB0YWtpbmcgbXkgaGFuZCBjcmVhbSBmcm9tIG15IHN1aXRjYXNlPyBDbGVhcmx5IHRoZXJlIGlzIGEgdGhyZWF0LCB3aHkgZWxzZSB3b3VsZCBJIGhhdmUgdG8gZ28gdGhyb3VnaCB0aGlzIG1ldGFsIGRldGVjdG9yIGp1c3QgdG8gZ28gaW50byBteSBsb2NhbCBwYXNzcG9ydCBvZmZpY2U/LiAKSSBhbSBwcm91ZCBvZiBteSBjdWx0dXJlIGFuZCBub3QgdGhlIGxlYXN0IGJpdCByYWNpc3QsIGJ1dCBmb3Igc29tZSByZWFzb24gcGVvcGxlIHRha2UgdGhhdCBwcmlkZSBpbiB0aGUgd3Jvbmcgd2F5LiAKSXQgbWVhbnMgYW55IHdheSBsb3NlbW9uZXkgYW5kIG5vdGhpbmcgZWxzZS4gCkRvbid0IGV4cGVjdCBzZXggdG8gYmUgbGluZWFyLiBJdCdzIG1vcmUgbGlrZSBhIGZsb3cgY2hhcnQgd2l0aCBtYW55IGRpZmZlcmVudCBkb29yd2F5cyBhbmQgcmVzcG9uc2VzLiBZb3UgZG8gbm90IG5lZWQgdG8gYmUgYXJvdXNlZCBiZWZvcmUgc2V4dWFsIGNvbm5lY3Rpb24gYW5kIHRvdWNoaW5nIHN0YXJ0cy4gSW4gZmFjdCwgbm9ib2R5IG5lZWRzIHRvIGZlZWwgZGVzaXJlIHRvIGFjaGlldmUgYW4gaW50aW1hdGUgY29ubmVjdGlvbi4KU28gSSB3YXMgdmVyeSBoYXBweSB5ZXN0ZXJkYXkgYXMgd2UgdHJhdmVyc2VkIHRoZSBzdHJlZXRzIG9mIG91ciBuZWlnaGJvcmhvb2QgdG8gaGF2ZSBhICJ0ZWFjaGFibGUgbW9tZW50IiBhcyB3ZSBkaXNjdXNzZWQgd2h5LCBvbiBhIGJsYXppbmcgaG90IGRheSwgc28gbWFueSB3b21lbiB3ZXJlIHdlYXJpbmcgaGlqYWIuIE15IGdpcmxzIGFjdHVhbGx5IGF0dGVuZCBzY2hvb2wgaW4gQnVybGluZ3RvbiwgVlQgd2l0aCBhIGZhaXIgbnVtYmVyIG9mIE11c2xpbSBnaXJscywgYnV0IHNvbWVob3cgdGhlIHNoZWVyIG51bWJlciBvZiB3b21lbiBjb3ZlcmVkIGZyb20gaGVhZCB0byB0b2UgaW4gdGhlIGJsYXppbmcgc3VuIGNhdWdodCB0aGVpciBleWUuLiAKRm9yIGV4YW1wbGUsIHBlb3BsZSByZXNwb25kIHRvIG1lcmN1cnkgZXhwb3N1cmUgZGlmZmVyZW50bHkgYW5kIGRldG94aWZ5IGl0IGF0IGRpZmZlcmVudCByYXRlcy4gVGhlcmUgaXMgYSBjbGFzc2ljIGJlbGwgY3VydmUgdG8gdGhlIHNwZWVkIHdpdGggd2hpY2ggcGVvcGxlIGRldG94IG1lcmN1cnksIGJ1dCB0aGVuIHRoZXJlIGlzIGxhcmdlIHBvcHVsYXRpb24gKG92ZXIgMTAgcGVyY2VudCkgdGhhdCBkZXRveGlmeSBtZXJjdXJ5IHZlcnkgc2xvd2x5LiBUaGVzZSBwZW9wbGUgbXVzdCBsaW1pdCB0aGVpciBleHBvc3VyZSBhbmQgbmVlZCBhZGRpdGlvbmFsIG51dHJpZW50cyB0byBoZWxwIHJlbW92ZSBtZXJjdXJ5IGZyb20gYnVpbGRpbmcgdXAgaW4gdGhlIGJvZHkuNSkgVGhlIGtleSB0byBkaWFiZXRlcyBwcmV2ZW50aW9uIGlzIGEgc3Ryb25nIGFuZCByZWNlcHRpdmUgY2VsbCBsaXBpZCBsYXllci5Zb3UgbmVlZCBzdWZmaWNpZW50IGFtaW5vIGFjaWRzIHRvIGJ1aWxkIHRoZSBwcm90ZWluIHN0cnVjdHVyZSBvZiBlYWNoIGNlbGwuIApVbmZvcnR1bmF0ZWx5LCBPUCwgSSBmZWFyIHlvdSBhcmUgc2V0dGluZyB5b3Vyc2VsZiB1cCBmb3IgYSBmaWdodC4gUmVhZGluZyB0aGlzIHN1YiwgTUlMIHdobyBsb3NlIHBvd2VyLCBsb3NlIGl0LiBOb3RoaW5nIGlzIGdvb2QgZW5vdWdoLiBMZWFybiB0byBwcm90ZWN0IHlvdXJzZWxmLCBsZWFybiB5b3VyIGxvY2FsIGxhd3Mgb24gaGFyYXNzbWVudCBhbmQgaG93IHRvIHByb3ZlIGl0LiBHZXQgYm90aCBvZiB5b3UgaW50byB0aGVyYXB5LiBTTyAoYW5kIG1heWJlIHlvdSkgbmVlZCBpbmRpdmlkdWFsIHRoZXJhcHkuIEJvdGggb2YgeW91IHNob3VsZCBnbyBmb3IgQ291cGxlcyBvciBNYXJyaWFnZSBDb3Vuc2VsaW5nLiBBbmQgaG9uZXN0bHksIG15IERIIGFuZCBJIGRpZCBwcmVtYXJpdGFsIGNvdW5zZWxpbmcgYW5kIGl0IHdhcyBhbWF6aW5nLiBSZWFsbHkgaGVscGVkIHVzIHRvIHN0ZXAgdXAgYXMgaW5kaXZpZHVhbHMgbWFraW5nIG91ciBvd24gbnVjbGVhciBmYW1pbHkuIExpa2UgRGF4IFNoZXBwYXJkIHNhaWQgb24gRWxsZW4sIHlvdSBkb24gZml4IHlvdXIgY2FyIHlvdXJzZWxmLCB5b3UgdGFrZSBpdCB0byBhIG1lY2hhbmljLCBhIHByb2Zlc3Npb25hbC4gVHJlYXQgeW91ciBtYXJyaWFnZSAob3IgcmVsYXRpb25zaGlwKSB0aGUgc2FtZSB3YXkuCkN1cCBob2xkZXJzIGFuZCBjaGlwIHRyYXlzIGFyZSBpbmNsdWRlZC4gClZhc2h1a2V2aWNoIHBsZWFkZWQgZ3VpbHR5IGFsb25nc2lkZSBzZXZlbiBvdGhlcnMgdG8gbXVsdGlwbGUgY2hhcmdlcywgaW5jbHVkaW5nIHNvbGljaXRhdGlvbiBhbmQgaWxsZWdhbCBhc3NlbWJseSBhdCBhIFBhdHRheWEgY291cnQgb24gVHVlc2RheSwgd2hpY2ggb3JkZXJlZCB0aGUgZ3JvdXAgYmUgZGVwb3J0ZWQuCldlIGtub3cgdGhhdCBpdCBhIGRpZmZlcmVuY2UgaW4gYnJhaW4gc3RydWN0dXJlLiBTbyBtb3N0IHNjaWVudGlzdHMgYXJndWUgdGhhdCBpdHMgZ2VuZXRpYyBpbiBzb21lIHdheS4gSnVzdCBsaWtlIEJpIHBvbGFyIGRpc29yZGVyLCBBdXRpc20sIGV0Yy4KU2hlYSAgdW5kIEtha2FvYnV0dGVyIHdlcmRlbiBoYXVwdHNjaGxpY2ggYWxzIEtvbnNpc3RlbnpnZWJlciB1bmQgRW11bGdhdG9yZW4gdmVyd2VuZGV0LiBWb3IgYWxsZW0gYmVpIGRlbiBCb2R5bWVsdHMgZ2VodCBlcyBqYSBkYXJ1bSwgZGFzcyBzaWUgZmVzdCBzaW5kIHVuZCBuaWNodCBzb2ZvcnQgaW4gZGVyIEhhbmQgc2NobWVsemVuLiAKIkluIHJlc3BvbnNlIHRvIHdoeSBJJ3ZlIHN0YXllZCBxdWlldCBmb3Igc28gbWFueSB5ZWFycywgSSBoYXZlIG5vdCBzdGF5ZWQgcXVpZXQgZm9yIHNvIG1hbnkgeWVhcnMsIGZyaWVuZHMgYW5kIGZhbWlseSBoYXZlIGJlZW4gYXdhcmUgb2YgdGhpcyBzdG9yeSBmb3IgbWFueSBtYW55IHllYXJzLCBJIGp1c3QgZGlkbid0IGdvIHRvIG5ld3NwYXBlcnMgd2l0aCB0aGUgc3RvcnkgaXMgYWxsLCIgc2hlIHdyb3RlLiAKTWFwIG91dCB5b3VyIGNvbGxhZ2UuIFN0YXJ0IGRlY2lkaW5nIGhvdyB5b3Ugd2FudCB0byBwbGFjZSB5b3VyIHBpY3R1cmVzLiBEbyB0aGlzIG9uIHRoZSBmbG9vciBvciBsYXJnZSB0YWJsZSBzbyB0aGF0IHlvdSBhcmUgbm90IHB1dHRpbmcgdW5uZWNlc3NhcnkgbmFpbCBob2xlcyBpbiB0aGUgd2FsbC4gS2VlcCBhbiBleWUgb24gdGhlIGNvbG9yczogYXJlIHlvdSBncm91cGluZyBhbGwgdGhlIGJsdWUgdG9uZWQgcGhvdG9zIHRvZ2V0aGVyPyBEbyB5b3UgaGF2ZSBhIGJpZyBzcG90IG9mIGJyb3duIHRvbmVkIHBob3Rvcz8gU3ByZWFkIHRoZSBwaG90b3Mgb3V0IHRvIGJhbGFuY2UgdGhlIGNvbG9yIGFjcm9zcyB0aGUgZW50aXJlIGNvbGxhZ2UuIApBdCB0aGUgc2FtZSB0aW1lIHRoZSBzdXJmYWNlIG5lZWRzIHRvIGJlIGFibGUgdG8gY29wZSB3aXRoIGFjY2lkZW50cyAgIHJlbWVtYmVyOiB5b3VyIGJhYnkgaXMgZ29pbmcgdG8gYmUgd2l0aG91dCBhIG5hcHB5ISBTb21ldGhpbmcgbGlrZSBhIHRoaWNrIHRvd2VsIG9uIHRvcCBvZiBvbmUgb2YgdGhvc2UgcGxhc3RpYyBjb3ZlcmVkIGJhYnkgY2hhbmdpbmcgbWF0cyB3b3VsZCBiZSBpZGVhbC4gCklmIHlvdSBhcmUgYm91bmQgYW5kIGRldGVybWluZWQgdG8gdGlwIGFzIGxpdHRsZSBhcyBwb3NzaWJsZSwgZG9uIGdvIHRvIGEgc3BhICAgc2VhcmNoIG91dCBhbiBpbmRlcGVuZGVudCB0aGVyYXBpc3QgYW5kIGNoZWNrIHdpdGggdGhlbSBiZWZvcmVoYW5kIGFib3V0IHRpcHMuIFRoZXkgZ2V0IDEwMCUgb2YgdGhlIG1vbmV5IHlvdSBnaXZlIHRoZW0gYW5kIGFsc28gY29udHJvbCB0aGUgcHJpY2VzLiBUaGV5IGNoYXJnZSB3aGF0IHRoZXkga25vdyB0aGV5IHdvcnRoLiBNeSBjbGllbnRzIHRoYXQgY29tZSB0byBteSBob21lIG9mZmljZSBvZnRlbiB0aXAgJDEwIG9yIG5vdCBhdCBhbGwsIGFuZCBJIG1ha2UgdXAgZm9yIGl0IGluIGxhY2sgb2Ygb3ZlcmhlYWQuCiJFdmVyeSBjaXR5IHdhbnRzIHRvIGJlIHNtYXJ0LCBidXQgdGhlIGNoYWxsZW5nZSBpcyBpdCdzIHZlcnkgZXhwZW5zaXZlIHRvIGRlcGxveSB0aGUgaW5mcmFzdHJ1Y3R1cmUsIHRoZSBmaWJlciBhbmQgdGhlIElvVCBkZXZpY2VzIHRvIG1ha2UgaXQgYWxsIGhhcHBlbiwiIHNheXMgQXJpIEJ1Y2hhbHRlciwgQ0VPIGF0IEludGVyc2VjdGlvbi4gIk1hcmtldGluZyBiZWNvbWVzIGEgd2F5IHRvIGNyZWF0ZSBhIHZpcnR1b3VzIGN5Y2xlIGFyb3VuZCB0aGF0IGJlY2F1c2UgcmF0aGVyIHRoYW4gdXNpbmcgdGF4cGF5ZXIgZG9sbGFycywgeW91IGNhbiB0aWUgaXQgdG8gYW4gYWR2ZXJ0aXNpbmcgY29uY2Vzc2lvbi4iLiAKQSBwb3dlcmZ1bCBlbW90aW9uYWwgY2FtcGFpZ24gdGhyb3VnaCBhZ2VuY3kgVkNDUCBlbnN1ZWQgYXJvdW5kIGEgdGhlbWUgb2YgZnJlZWRvbSBhbmQgZW5hYmxlbWVudCB0aGF0IGZvdW5kIGEgaHVtYW4gZXhwcmVzc2lvbiBmb3IgdGhlIHByb2R1Y3RzIG9uIG9mZmVyLiAKSSBoYWQgYSBTaWVubmEgYmVmb3JlIGRvd25zaXppbmcgdG8gbXkgY3VycmVudCBGb3Jlc3Rlci4gSSBub3cgcmVhbGl6ZSB0aGUgZXh0cmEgc3BhY2UgaXMgc29yZWx5IG1pc3NlZC4gCkxlIGNoYXQgUG9sbHV4IChQb3BhdWwpIHJvdXBpbGxlIGVuIHRyYXZlcnMgZHUgbGl0IHBlbmRhbnQgcXVlIHNhIG1yZSBJU0lTIHBhdHJvdWlsbGUgZGFucyBsZSBqYXJkaW4gdG91dCBhdXRvdXIgZHUgY2h0ZWF1IGRvbnQgZWxsZSBuZSBzJ2xvaWduZSBwb3VyIGFpbnNpIGRpcmUgamFtYWlzLiBFbGxlIHN1cnZlaWxsZSBsZXMgYWJvcmRzIGRlIGNlIHF1aSBlc3QgZGV2ZW51IHNvbiByZWZ1Z2UuIApJbnZlc3RpZ2F0b3JzIHNhaWQgdGhleSB3ZXJlIGV4YW1pbmluZyB0aGUgc2l0ZSwgZ2F0aGVyaW5nIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjcmFzaCBhdCB0aGUgZWRnZSBvZiBhIGdyYW5kc3RhbmQgYXJlYSBGcmlkYXkuClRoZXJlIGFyZSBzb21lIHBsYXllcnMgYXQgTkwyIHdobyBJIHNlZSBmbGF0IGNhbGxpbmcgd2l0aCBBSywgb3IgZXZlbiBRUSBhbmQgdGhleSBoYXZlIGEgM2JldCAlIG9mIDEgb3IgMiBhZnRlciBodW5kcmVkcyBvZiBoYW5kcy4gT3IgaW4gc29tZSBjYXNlcyBJIG5ldmVyIHNlZW4gdGhlbSAzYmV0LiBFdmVyLiAKV2FudCBUbyBNYWtlIE1vbmV5ICAgUmVhZCBUaGlzIFJldmlldyBPbiBPbmxpbmUgQ2FzaW5vIEJvbnVzClRoZSBicm90aGVscyBhcmUgbGVnYWwgb25seSBpbiBydXJhbCBjb3VudGllcyB0aGF0IGFwcHJvdmUgdGhlbS4iV2UncmUgZGlzYXBwb2ludGVkLCBidXQgaXQncyBub3Qgb3ZlciB5ZXQsIiBQYWhydW1wIHJlc2lkZW50IExpbmRhIENoZXNtb3JlIHNhaWQgb2YgdGhlIGNvbW1pc3Npb24ncyBmYWlsdXJlIHRvIHB1dCB0aGUgYnJvdGhlbHMgdXAgdG8gYSB2b3RlLiBDaGVzbW9yZSB3YXMgb25lIG9mIHNldmVuIHJlbGlnaW91cyB3b21lbiBmcm9tIFBhaHJ1bXAgd2hvIG1hZGUgdGhlIHRocmVlIGFuZCBhIGhhbGYgaG91ciBkcml2ZSB0byBUb25vcGFoIHRvIG1ha2UgdGhlaXIgdm9pY2VzIGhlYXJkIGJ5IHRoZSBjb21taXNzaW9uIGluIHBlcnNvbi5SZXNpZGVudHMgYWxzbyBhdHRlbmRlZCB0aGUgbWVldGluZyBpbiBQYWhydW1wIHZpYSB2aWRlb2NvbmZlcmVuY2UuIApGUkVFIEhJR0ggUVVBTElUWSBNUDMgQVVESU8gRE9XTkxPQUQgS2V0dGxlIHdoaXN0bGVzIGJyaWdodGx5IGJ1dCAuIEZyZWUgbXAzIGF1ZGlvIHNvdW5kIGRvd25sb2FkOiBMYXJnZSB0dXJiaW5lIHN0YXJpbmcgdXAgd2l0aCBhIHJvYXIgYW5kLiAKUXVhbnQgIGNlIGRlcm5pZXIsIGlsIGVzdCB1bmUgcmljaGVzc2UgcG91ciBsZSBwZXVwbGUsIGV4cGxpcXVlIGxlIFJvbWFpbiBQbGluZS4gTGVzIGNyYWxlcyBtYW5xdWVudCBlbGxlcywgbGEgZmFyaW5lIHF1ZSBmb3Vybml0IGxlIGdsYW5kLCBzY2ggZXQgbW91bHUsIHNlIHB0cml0IHBvdXIgZG9ubmVyIGR1IHBhaW4uIApPaWx5LiBTbyBJIG9pbHkgZmFydGVkIG9uIG15IGNvdWNoIGFuZCByYW4gdG8gdGhlIHNob3dlciB0byBmaW5pc2ggd2hhdGV2ZXIgZWxzZSBteSBib3dlbHMgaGFkIHBsYW5uZWQgZm9yIG1lLi4gClRoZXJlIGEgbWljcm8gZnVsbCByaW5nIGZvcnVtIHRoYXQgb25lIG9mIHRoZW0gc2l0cyBpbiBhbmQgYW5vdGhlciBvbmUgdGhhdCBJIHRoaW5rIGlzIHN1cHBvc2VkIHRvIGJlIHNpeCBtYXggYnV0IHRoZSBkaXN0aW5jdGlvbnMgYXJlIHNvbWV3aGF0IHVuY2xlYXIgYW5kIHRoZXNlIGZvcnVtcyBhcmUgbm93aGVyZSBuZWFyIGFzIGFjdGl2ZSBhcyB0aGV5IHVzZWQgdG8gYmUuLiAKTGVzdCB0aGUgc3VjY2VzcyBnbyB0byBoaXMgaGVhZCwgaG93ZXZlciwgaGUgZ290IGEgdGV4dCBmcm9tIE1pY2hhZWwgSGlnZ2lucywgd2hvIG9ic2VydmVkOiBudW1iZXIgODMgaW4gdGhlIHdvcmxkLCB5b3UgdGhlIG51bWJlciB0d28gSXJpc2ggcGxheWVyIGluIHRoZSB3b3JsZCwgeW91IG51bWJlciAzOCBpbiB0aGUgRXVyb3BlYW4gcmFua2luZ3MsIHlvdSBudW1iZXIgMjIgb24gdGhlIGFsbCB0aW1lIElyaXNoIG1vbmV5IGxpc3QsIGFuZCB5b3UgbnVtYmVyIHNldmVuIGluIHRoZSBDbGFyZW1vcnJpcyBQb2tlciBMZWFndWUhIFdlIGFsd2F5cyBkaWQgaGF2ZSBoaWdoIHN0YW5kYXJkcyBpbiBNYXlvLgpZb3Ugd291bGRuJ3QgdXNlIGFueSBzdHJvbmcgc29hcCwgeW91IHdvdWxkIHdhc2ggaW5mcmVxdWVudGx5LCB5b3Ugd291bGQgc3F1ZWV6ZSB5b3VyIGhhaXIgZHJ5IG5vdCBydWZmbGUsIHlvdSB3b3VsZCBub3QgcHV0IGl0IGluIHRoZSBkcnllciBvciBwdXQgc3Ryb25nIGhlYXQgb24gaXQuIApBYW1icm83OCAgMjIgcG9pbnRzICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ28KTG9vdCBhdCBvbmxpbmUgY2FzaW5vcy4gCldlIGZsaXAgb3VyIGNhcmRzIGFuZCBoZSBpcyB2aXNpYmx5IGRpc3RyYXVnaHQgYXMgaGUgc2hvd3MgSzlvLiBUdXJuIFR4LCBSaXZlciBLeC4gCk5vdGV6IHF1ZSBqZSBuZSBjb25uYWlzIHF1ZSBsZXMgdXNhZ2VzIGZyYW5haXMuIApUaGVyZSBpcyBubyBzYW1lIHNvdW5kIGluIEVuZ2xpc2ggZm9yIGNoLiBCdXQgdGhlcmUgaXMgYSB0aXAgZm9yIHlvdSBpZiB5b3UgYXJlIHdpbGxpbmcgdG8gc3BlYWsgbGlrZSB0aGUgbWFqb3JpdHkgb2Ygc291dGhlcm4gQ2hpbmVzZTogcHJvbm91bmNlICBhcyAoa2VlcCB5b3VyIHRvbmd1ZSBmbGF0IHdoZW4geW91IHNob3VsZCByb2xsIGl0IHVwKS4gSW4gdGhpcyBjYXNlIHlvdSBjYW4gdXNlIC90cy8gdG8gcmVwbGFjZSAvY2gvLiAKVGhlVG9wIDEwIE9ubGluZSBQb2tlckNhc2lubyAgOSBCd2luIEVhc3kgdG8gdXNlIGFuZCBlYXN5IHRvIGdldCBhZGRpY3RlZCB0by4gSXQgaGFzIGEgaHVnZSBwb2tlciBuZXR3b3JrIHdoaWNoIGlzIGdyZWF0IQpObyBDR1QgZXZlbnQgaGFzIG9jY3VycmVkIGFzIHRoZSBpdGVtIGhhc24gYmVlbiBzb2xkLCBzbyBpdCBhbiB1bnJlYWxpemVkIGxvc3MuIEkgbWVhbiB5b3UgY291bGQgcHJvYmFibHkgZmxvZyBpdCBvbiBlQmF5IGZvciAkNTAgaWYgeW91IHJlYWxseSB3YW50IHRvIGNyeXN0YWxpemUgdGhlIGxvc3MuIFJlZ2FyZGxlc3MgQ2FwaXRhbCBsb3NzZXMgZnJvbSBjb2xsZWN0YWJsZXMgY2FuIGJlIHVzZWQgb25seSB0byByZWR1Y2UgY2FwaXRhbCBnYWlucyBmcm9tIG90aGVyIGNvbGxlY3RhYmxlcy4gU28gSSBmaW5kIHRoYXQgdGhlc2UgdHlwZXMgb2YgbG9zc2VzLCBxdWFyYW50aW5lZCBhcmUga2luZCBvZiB1c2VsZXNzIHVubGVzcyB0aGV5IGEgY29sbGVjdG9yIGFuZCB5b3UgZ290IHBsZW50eSBvZiB0cmFuc2FjdGlvbnMgdG8gb2Zmc2V0IGluIGZ1dHVyZSB5ZWFycy4KTWFueSBlc3NlbnRpYWwgb2lscyBoYXZlIGEgcmVtYXJrYWJsZSBhYmlsaXR5IHRvIGJvdGggc3VwcG9ydCB0aGUgaW1tdW5lIHN5c3RlbSBhbmQgaW5jcmVhc2Ugb25lJ3MgcmF0ZSBvZiBoZWFsaW5nLiBTb21lIG9mIHRoZXNlIHNhbWUgZXNzZW50aWFsIG9pbHMgYXJlIGFsc28gcG93ZXJmdWwgYW50aXNlcHRpY3MuIE9uZSB3YXkgdGhlc2Ugb2lscyBmaWdodCBpbmZlY3Rpb24gaXMgdG8gc3RpbXVsYXRlIHRoZSBwcm9kdWN0aW9uIG9mIHdoaXRlIGNvcnB1c2NsZXMsIHdoaWNoIGFyZSBwYXJ0IG9mIHRoZSBib2R5J3MgaW1tdW5lIGRlZmVuc2UuIApCZXN0IGV4cGVuc2l2ZSBpdGVtcyB3ZSBnb3Qgb3V0IG9mIHRoZSByZWdpc3RyeSB3ZXJlIGEgc21hbGwgdG9hc3RlciBvdmVuLCBhIHN0YW5kIG1peGVyLCBhbmQgYSBzbWFsbCBkaW5uaW5nIHJvb20gc2V0Li4gCjEpIERyYXcgYSBob3Jpem9udGFsIGxpbmUgYW5kIG1hcmsgb2ZmIGluY3JlbWVudHMgb2YgMSB0byA3LiBUaGlzIHdpbGwgcmVwcmVzZW50IHRoZSBudW1iZXJzIDEgdGhyb3VnaCA3IHRoYXQgd2lsbCBhcHBlYXIgaW4gdGhlIG9yaWdpbmFsIGxpc3QuIEluIG90aGVyIG51bWJlciBzZXRzLCBpdCBtYXkgYmUgYmVuZWZpY2lhbCB0byBmaW5kIHRoZSByYW5nZSBvZiBudW1iZXJzIHRoYXQgYXJlIHByZXNlbnRlZC4gMikgRHJhdyBhIHZlcnRpY2FsIGxpbmUsIGFuZCBtYXJrIG9mZiBpbmNyZW1lbnRzIG9mIDEgdG8gMTAuIFRoaXMgd2lsbCByZXByZXNlbnQgdGhlIG51bWJlciBvZiB0aW1lcyAoZnJlcXVlbmN5KSB0aGF0IGVhY2ggbnVtYmVyIGFwcGVhcnMgaW4gdGhlIGxpc3QuIDMpIEdvaW5nIHRocm91Z2ggZWFjaCBvZiB0aGUgbnVtYmVycyBpbiB0aGUgbGlzdCwgYmVnaW4gbWFya2luZyBYcywgb3Igc29tZSBvdGhlciB0YWxseSwgdG8gc2hvdyBob3cgbWFueSB0aW1lcyBlYWNoIG51bWJlciBhcHBlYXJzLiBJbiB0aGUgZXhhbXBsZSBnaXZlbiBpbiB0aGUgcXVlc3Rpb24sIHRoZSBhbnN3ZXIgdG8gdGhpcyB3b3VsZCBiZTogKE51bWJlciA9IEZyZXF1ZW5jeSkgMiA9IDEgMyA9IDMgNCA9IDMgNSA9IDEgNiA9IDQgNyA9IDEgKEZ1bGwgQW5zd2VyKQpJdCBhbHNvIGhhZCB0aGUgb3Bwb3NpdGUgZWZmZWN0IGZvciBoaW0gaGUgdGhvdWdodCBoZSB3YXMgYmVpbmcgcGF0cmlvdGljLCBidXQgdGhlIEZCSSB3YXMgbW9yZSBpbnRlcmVzdGVkIGluIGhpbSB0aGFuIGhpcyBpbmZvcm1hdGlvbi4gCkNhdXNpbmcgZnVydGhlciBzZXZlcmFuY2UgYW5kIGRpdmlkZSBkb2VzbiBoZWxwLCBiZWNhdXNlIHlvdSBzdGlsbCBzaGFyZSBhIGNvdW50cnkgd2l0aCB0aGUgcGVvcGxlIG9uIHRoZSBvcHBvc2l0ZSBzaWRlLiBDb21tb24gZ3JvdW5kIGhhcyB0byBiZSBmb3VuZCBvciBpdCB3aWxsIGp1c3QgYmVjb21lIG1vcmUgYW5kIG1vcmUgY29uZmxpY3QuIERlbW9jcmF0cyB3aW5uaW5nIDIwMjAgaXMgbm90IGdvaW5nIHRvIGJlIHRoZSBmaW5hbCBzb2x1dGlvbiB0byB0aGUgcHJvYmxlbTsgaXQgd2lsbCBwdXQgdGhlIHJpZ2h0IHNpZGUgaW50byBhIHN0aXIganVzdCBhcyAyMDE2IGRpZCBmb3IgdGhlIGxlZnQuLiAKIkZvb2QgYWxsZXJnaWVzIGluIHBldHMgZGV2ZWxvcCB0byBpbmdyZWRpZW50cyB0aGF0IHRoZXkgYXJlIHJlZ3VsYXJseSBleHBvc2VkIHRvICAgdGhpbmdzIGluIHRoZWlyIGV2ZXJ5ZGF5IGRpZXQgcmF0aGVyIHRoYW4gdG8gc3BlY2lmaWMgZm9vZHMgbGlrZSBwZWFudXRzIG9yIHNoZWxsZmlzaCBsaWtlIGluIHBlb3BsZS4gCldoYXQgSSBsZWFybmVkIGlzLCBzb21ldGltZXMgdGhlIHBsYW4gd2Ugc2V0IG91dCB3aXRoIGlzbiB0aGUgcGxhbiB3ZSBlbmQgdXAgZXhlY3V0aW5nLiBNYXJrZXRzIHNoaWZ0LCBvdXIgcGVyc29uYWwgbGl2ZXMgY2hhbmdlLCBhbmQgbmV3IG9wcG9ydHVuaXRpZXMgdHJhbnNmb3JtIHdoYXQgd2Ugb25jZSB0aG91Z2h0IHdhcyBiZXN0IGZvciB1cy4gSW4gc2hvcnQsIEkgbGVhcm5lZCBpdCBtdWNoIGJldHRlciB0byBwbGF5IHRoZSBoYW5kIHlvdSBkZWFsdCBhbmQgdG8gcmVldmFsdWF0ZSBhdCBlYWNoIG5ldyB0dXJuIHRoYW4gaXQgaXMgdG8gc3R1YmJvcm5seSBzdGljayB0byBhIHN0cmF0ZWd5Li4gCklmIHlvdSBsZWdhbCB0byBkcmluaywgdGhpcyBpcyBhIGdyZWF0IG9uZSB0byB3YXRjaCBibGl0emVkLiBJZiBub3QsIGp1c3Qga25vdyB0aGF0IHRoaXMgb25lIG1ha2VzIGFzIG11Y2ggc2Vuc2UgZHJ1bmsgYXMgaXQgZG9lcyBzb2Jlciwgd2hpY2ggaXMgdG8gc2F5LCBub3QgbXVjaC4KR29vZ2xlIGRlbGF5cyBDaGluYSBwaG9uZSBsYXVuY2gKSSBoYXZlIG5ldmVyIGhhZCBhIEJ1ZCBpbiBLb3JlYS4gCkkgcmVhbGl6ZWQgaGlzIGJvb3RzIHdlcmVuIHdoZXJlIHRoZXkgdXN1YWxseSBzaXQuIApUaGUgd29yc3QgaXMgd2hlcmUgdGhlIHN0b3JlIG9ubHkgZ2l2ZXMgYmFncyB1cCBmcm9udCBpbnN0ZWFkIG9mIGdldHRpbmcgYSBjb3VudCBhZnRlcndhcmRzICAgeW91IGNhbiB1c2Ugb25lIGJhZyBhdCBhIHRpbWUgZnJvbSB0aGUgbmljZSBkaXNwZW5zZXIsIG5vIHlvdSBoYXZlIHRvIHRlbGwgdGhlbSBob3cgbWFueSBiYWdzIHlvdSBnb2luZyB0byBuZWVkIGFoZWFkIG9mIHRpbWUsIGFzIGlmIHlvdSBrbm93IGhvdyBpdCByZWFsbHkgZ29pbmcgdG8gZ28sIGFuZCB0aGV5IHBlZWwgb2ZmIGEgYnVuY2ggYWxsIHN0dWNrIHRvZ2V0aGVyIGFuZCBkdW1wIHRoZW0gaW4gYSBsdW1wIGluIGZyb250IG9mIHlvdSBhbmQgc3RhcnQgYmlvbmljIHNjYW5uaW5nIHlvdXIgc2hpdCBpbnRvIGEgcGlsZSBiZWZvcmUgeW91IGNhbiBldmVuIGdldCB0aGUgZmlyc3QgYmFnIHVuZnVja2VkIGVub3VnaCB0byBzdGFydCBiYWdnaW5nLiAKSXQgYSBmdWNrZWQgdXAgc3lzdGVtLi4gClRoZSBiZW5lZml0cyBvZiBteSBtZWRpdGF0aW9uICh3aGljaCBhcmUgaGFyZCB0byBxdWFudGlmeSBiYyB0aGV5IGFyZSB2YXN0IGFuZCBpbnRhbmdpYmxlKSBhcmUgZ3JlYXRseSBlbmhhbmNlZCB3aGVuIEkgdXNlIHRoZXNlIHNlbnNvcnMuIEFueSBjbHVlIG9uIHdoYXQncyBnb2luZyBoZXJlIGFuZCB3aHkgdGhpcyBzZWVtcyBzbyBlZmZlY3RpdmU/PyBJIGZlZWwgbGlrZSBJJ20gb250byBzb21ldGhpbmcgZ29vZCBoZXJlIGFuZCB3b3VsZCBsb3ZlIHRvIGhlYXIgd2hhdCB5b3UgdGhpbmsuIFRoYW5rcyEhLiAKQ29sb21iaWFuIGJvcm4gcG9wIHNpbmdlciBTaGFraXJhIG1hZGUgaGVyIG1hcmsgb24gdGhlIGRlY2FkZSB3aXRoIGhlciBsYXRpbiBpbnNwaXJlZCBtdXNpYywgQXJhYmljIGRhbmNlIG1vdmVzIGFuZCB1bmlxdWUgdm9pY2UuIGhpdCB3aXRoICJXaGVuZXZlciBXaGVyZXZlciIgaW4gMjAwMi4gU2hlIGhhZCBzaXggaGl0cyBvbiB0aGUgeWVhciBlbmQgY2hhcnRzLCBzb21lIG9mIHdoaWNoIGluY2x1ZGVkICJVbmRlcm5lYXRoIFlvdXIgQ2xvdGhlcyIgaW4gMjAwMiwgIkxhIFRvcnR1cmEiIGluIDIwMDUsIGFuZCAiU2hlIFdvbGYiIGluIDIwMDkuIFNoZSBoYWQgb25lIDEgb24gdGhlIEhvdCAxMDAgd2l0aCAiSGlwcyBEb24ndCBMaWUiLCBmZWF0dXJpbmcgV3ljbGVmIEplYW4sIGluIDIwMDYsIHdoaWNoIHdhcywgaW50ZXJuYXRpb25hbGx5LCBvbmUgb2YgdGhlIG1vc3Qgc3VjY2Vzc2Z1bCBzb25ncyBvZiB0aGUgMjFzdCBjZW50dXJ5LgpTaW5jZSBtb3N0IG9mIHRoZSBodW5kcmVkcyBvZiB2aXRhbWluIGNvbXBhbmllcyBvbmx5IGdldCB0aGVpciByYXcgbWF0ZXJpYWxzIGZyb20gYSBoYW5kZnVsIG9mIG1ham9yIHN1cHBsaWVycywgcHVyaXR5IGlzIG1vc3QgY29tbW9ubHkgYWZmZWN0ZWQgYnkgaG93IHRob3NlIG1hdGVyaWFscyBhcmUgdHJhbnNwb3J0ZWQsIHN0b3JlZCwgcHJvY2Vzc2VkLCBwYWNrYWdlZCBhbmQgc2hpcHBlZC4gVGhvc2Ugd2hvIGFkdm9jYXRlIGxpcXVpZHMgYW5kIGZvb2QgY29uY2VudHJhdGVzIG9mdGVuIHVzZSB0aGlzIGFyZ3VtZW50IHRvIHN1cHBvcnQgcHJvZHVjdHMuCkhlIGhhdGVzIHRoaXMgam9iIHNvbWV0aW1lcywgYnV0IGhlIGtub3dzIHRoaXMgaXMgd2h5IGhlIGRvZXMgdGhpcyBqb2IuIEhlIGlzIHRoZSB2b2ljZSBvZiB0aGUgdmljdGltLiBIZSBkb2VzbiBqdWRnZSBhbnlvbmUsIGJ1dCBoZSBjYW4gaGVscCB3b25kZXJpbmcgd2h5IHBlb3BsZSBhcmUgc28gY3J1ZWwgdG8gb25lIGFub3RoZXIuLiAKWW91J3ZlIGdvdHRlbiBhIHRvbiBvZiBnb29kIHJlc3BvbnNlIGZyb20gdGhlIGNvbnRyYWN0b3Igc2lkZSBzbyBJIHRob3VnaHQgSSdkIHRocm93IGluIG1pbmUgZnJvbSB0aGUgZmxpcCBzaWRlLiBJJ20gY3VycmVudGx5IGdvaW5nIHRocm91Z2ggYSBtYWpvciByZW1vZGVsIGF0IG15IGhvdXNlIGFuZCBzcGVudCB0aGUgZmlyc3QgaGFsZiBvZiBpdCBzdHJlc3NlZCBvdXQgYWJvdXQgZXhwZW5zZXMgYW5kIHRoZSBjb3N0IG9mIHRoaW5ncy4gSSByZWFsbHkgdGhpbmsgYWxsIG9mIHRob3NlIGZvbGtzIG91dCB0aGVyZSBsaWtlIHlvdXIgbW9tcyBjb3dvcmtlciBlbmQgdXAgc2V0dGluZyB1bnJlYXNvbmFibGUgZXhwZWN0YXRpb25zIGFuZCBnaXZlIGEgZmFsc2Ugc2Vuc2Ugb2YgdGhlIGFjdHVhbCBjb3N0IG9mIGxhYm9yLiBJIGhhZCBwZW9wbGUgdGVsbCBtZSBhbGwgc29ydHMgb2YgcmlkaWN1bG91c2x5IGxvdyBwcmljZXMgdGhleSBwYWlkIGZvciB0aGVpciAidG90YWwgcmVtb2RlbCIgLCBidXQgYWZ0ZXIgbXkgb3duIGV4cGVyaWVuY2UsIGFuZCBpbiByZWFkaW5nIHRocmVhZHMgb24gdGhpcyBzdWIgbGlrZSB5b3VyIG93biBJJ3ZlIHJlYWxseSBjb21lIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgZWl0aGVyIHRob3NlIGZvbGtzIHBhaWQgZm9yIGEgc2hpdHR5IGhhbGYgYXNzIGpvYiwgb3IgYXJlIGp1c3QgZnVsbCBvZiBzaGl0LiBHb29kIGNvbnN0cnVjdGlvbiBpcyBub3QgY2hlYXAgYW5kIGl0IHdpbGwgdGFrZSBsb25nZXIgdGhhbiB5b3UgdGhpbmssIGJ1dCBpdCB3aWxsIGFsc28gbG9vayBiZXR0ZXIgdGhhbiB3aGF0IHlvdSBhbmQgSSBjb3VsZCBkbyBnaXZlbiB0d2ljZSB0aGUgYW1vdW50IG9mIHRpbWUuClRvdXQgZW4gbSdhc3N1cmFudCBxdWUgamUgcG91dmFpcyBtb2kgbW1lIGNob2lzaXIgbGUgc2V4ZSBkZSBsYSBmZW1tZSBxdWkgbWUgZG91YmxlcmFpdCEgTWFpcyBhIG5lIGNoYW5nZWFpdCByaWVuOiBsZXMgZ2VucyBhbGxhaWVudCBwZW5zZXIgcXVlIGMndGFpdCBsZSBtaWVuIEQnYWNjb3JkLCBkb25jLC4gCkhvdyBzZXZlcmUgYXJlIHRoZSBzdHJ1Y3R1cmFsIGR5c2Z1bmN0aW9ucyB0aGF0IGNhdXNlZCB0aGUgcHJvYmxlbT8KSSBydW4gYW4gQXVyaSBtYWxlIHdpdGggZmFjZS4yPyh0aGUgbG9uZyBob3Jpem9udGFsIGhvcm5zKSBhbmQgdGhlIGRpc2NvdW50IFNlcGhpcm90aCBoYWlyLiBJbiBteSBwZXJzb25hbCBleHBlcmllbmNlLCBJIHJ1biBpbnRvIHZlcnksIHZlcnkgZmV3IG90aGVyIEF1IFJhIHRoYXQgdXNlIGVpdGhlciBvZiB0aG9zZSwgYW5kIG9ubHkgMSBvdGhlciBwZXJzb24gZXZlciB0byB1c2UgYm90aC4gCkV2ZXJ5IEZyaS4gCkl0IG1heSBzb3VuZCBzaW1wbGUsIGJ1dCB0aGVzZSBodWJzIHdlcmVuJ3QganVzdCBhIGNvbGxlY3Rpb24gb2YgY2hhaXJzIGNvYmJsZWQgdG9nZXRoZXIgYXJvdW5kIGEgc2NyZWVuLiBUaGUgZGVkaWNhdGVkIHNwYWNlcyB3ZXJlIGRlY2tlZCBvdXQgd2l0aCBmZWF0dXJlcyBsaWtlIExFRCB0b3VjaCB3YWxscywgYW5pbWF0cm9uaWMgcnVubmluZyBtYW5uZXF1aW5zIGFuZCBtdWx0aSBzY3JlZW4gZGlzcGxheXMgYW5kIHRoZSBlZmZvcnRzIHBhaWQgb2ZmLiBXZSBrbm9ja2VkIHRoZSBpbmR1c3RyeSBzdGFuZGFyZCBkd2VsbCB0aW1lIG91dCBvZiB0aGUgcGFyazsgd2Ugd2VyZSBhYmxlIHRvIHB1bGwgb2ZmIGFuIGF2ZXJhZ2UgdGltZSBzcGVudCBpbiB0aGUgYWN0aXZhdGlvbiBvZiAxNCBtaW51dGVzLCBub3QgdG8gbWVudGlvbiBhdHRyYWN0IG1pbGxpb25zIG9mIHZpc2l0b3JzLiAKQmFjayB0aGVuLCB0aGV5IHdlcmUgdmVyeSB3ZWxsIHJ1bi4gCkxhIHByZW1pcmUgZXN0IGxhIHNwZWN0YWN1bGFpcmUgbmF2ZXQgZGVzIGhvbW1lcyBwb2xpdGlxdWVzIGRlIGRyb2l0ZSBldCBkZSBnYXVjaGUgcXVpLCBjZXMgZGVybmllcnMgam91cnMsIGZvbnQgZGUgYmVsbGVzIHBocmFzZXMgc3VyIGwnYW1vdXIgcXVlIGxlIHBldXBsZSBmcmFuYWlzIHBvcnRlICBTaW1vbmUgVmVpbCwgc3VyIGwnaW1tZW5zZSBwb3B1bGFyaXQgZG9udCBjZWxsZSBjaSBhIGpvdWkgZGUgc29uIHZpdmFudCwgZG9udCBlbGxlIGpvdWl0IGRlcHVpcyBzYSBtb3J0LiBKZSBuZSBjcm9pcyBuaSAgY2V0dGUgcG9wdWxhcml0IG5pICBjZXQgYW1vdXIuIFF1ZSBub3VzIHNveW9ucyB0b3VzIGN1cnMsIGluZGlnbnMgcGFyIGxhIGJhc3Nlc3NlLCBsJ2luZmFtaWUgZGVzIHByb2ZhbmF0aW9ucyBub25hemllcyBkb250IGxlcyBwb3J0cmFpdHMgZGUgU2ltb25lIFdlaWwgb250IHQgc291aWxscywgY2VsYSB2YSBkZSBzb2kgOyBtYWlzIHF1ZSBsZSBwZXVwbGUgZnJhbmFpcyBub3Vycmlzc2UgcG91ciBjZXR0ZSBmZW1tZSBjb3VyYWdldXNlIHVuIGFtb3VyIHZpZiBldCBzZXJhaXQgdHJhbnNwb3J0IGRlIGpvaWUgc2kgY2VsbGUgY2kgZGV2YWl0IHNlcnZpciBkZSBtb2RsZSAgdW5lIHByb2NoYWluZSBNYXJpYW5uZSwgamUgbmUgbGUgY3JvaXMgcGFzLi4gClRoYXQgaXMgd2h5IEkgZG8gd2hhdCBJIGRvLiBFdmVuIHRob3VnaCBJIGFtIGxvb2tpbmcgYXQgaGl0dGluZyBjZXJ0YWluIGZpbmFuY2lhbCB0YXJnZXRzLCB5b3UgaGF2ZSB0byBoZWxwIHlvdXJzZWxmIGJlZm9yZSB5b3UgY2FuIGhlbHAgZXZlcnlvbmUgZWxzZS4gQW5kIHRoZSBtb3JlIG1vbmV5IEkgbWFrZSBub3csIHRoZSBtb3JlIEkgd2lsbCBiZSBhYmxlIHRvIGhlbHAgaW4gdGhlIGZ1dHVyZS4gCldhc2hpbmd0b24gaGFzIG1hZGUgaXRzIGRlbWFuZHMgY2xlYXI6IENoaW5hIG11c3QgYWdyZWUgdG8gZmFyIHJlYWNoaW5nICJzdHJ1Y3R1cmFsIiByZWZvcm1zIGluIGl0cyB0cmFkZSBwcmFjdGljZXMsIGN1cmJpbmcgbWFzc2l2ZSBzdGF0ZSBpbnRlcnZlbnRpb24gaW4gbWFya2V0cyBhbmQgdGhlIGFsbGVnZWQgdGhlZnQgb2YgQW1lcmljYW4gdGVjaG5vbG9naWNhbCBrbm93IGhvdywgaW5jbHVkaW5nIHRocm91Z2ggaGFja2luZyBhbmQgdGhlIGZvcmNlZCB0cmFuc2ZlciBvZiBpbnRlbGxlY3R1YWwgcHJvcGVydHkuCkluc2lkZXJTd29yZHMgdQpJdCdzIGRpZmZlcmVudCB0aGFuIG1vc3Qgb3RoZXIgY2FyIHJlcGFpcnMgYmVjYXVzZSBpdCdzIG5vdCBhYm91dCBtZWNoYW5pY2FsIHByb3dlc3M7IGl0J3MgbW9yZSBhYm91dCBjb250cm9sIGFuZCB0aGUgYWJpbGl0eSB0byBtYWludGFpbiBhIHN0ZWFkeSBoYW5kIGFuZCBhIGdlbnRsZSBwYWNlLiAKVGhlIHdpbm5lciByZWNlaXZlcyBhIGNhc2ggcHJpemUgYW5kIHdpbGwgdXN1YWxseSBkb25hdGUgYSBwb3J0aW9uIG9mIHRoZSBwcml6ZSBiYWNrIHRvIENhbHZlcnQgSG9zcGljZS4uIApIZSBoYWQgdGF1Z2h0IHByaXNvbmVycyB0aGVyZSBpbiB0aGUgZWFybHkgNzAgQnV0IEZhcnJhZ3V0IGlzIG5vdCBzbyBkaWZmZXJlbnQgZnJvbSBDaGVldmVyIGxhd24gbW93aW5nIGhvdXNlaG9sZGVycy4gWWVhcm5pbmcsIHdheXdhcmQsIGJlc2V0IGJ5IGFuZ2VyIGFuZCBuZWVkIGhlIGp1c3QgYSBDaGVldmVyIGNoYXJhY3RlciBpbiBleHRyZW1pcy4gCkZyaXNjaCBsYXN0IHdlZWsgICBhbmQgdXAgdW50aWwgTW9uZGF5J3Mgdm90ZSAgIGhhZCB0YWtlbiB0aGUgcG9zaXRpb24gdGhhdCBkZXZlbG9wZXJzIHN0YW5kIHRvIG1ha2UgYSBzaXphYmxlIHByb2ZpdCBhbmQgcXVlc3Rpb25lZCB3aGV0aGVyIGEgcHVibGljIHN1YnNpZHkgd2FzIG5lY2Vzc2FyeS4KRmFtb3VzbHksIE5vbCBDb3dhcmQgbWFrZXMgdGhlIGFubm91bmNlbWVudHMgaW4gdGhlIGZpbG0gYXQgdGhlIGZpY3Rpb25hbCBNaWxmb3JkIFN0YXRpb24uCkFuZGVyc29uIGlzIGN1cnJlbnRseSBpbiB0aGUgbWlkc3Qgb2YgaGVyIHRoaXJkIGRpdm9yY2UgZnJvbSBTYWxvbW9uLCB3aG8gc3Vic2VxdWVudGx5IGZpbGVkIGxlZ2FsIGRvY3VtZW50cyBzZWVraW5nIGFuIGFubnVsbWVudCBvZiB0aGVpciBtYXJyaWFnZS4gClRoYXQgbm90IHRvIHNheSB0aGVyZSBpc24gcHJvZ3Jlc3MgYmVpbmcgbWFkZSwganVzdCB0aGF0IGl0IGluY3JlbWVudGFsIGFuZCBhdCBhIHNtYWxsIHNjYWxlLiBJIHNlZSB3aXRoIG15IG93biBleWVzLCBpbiBhIHRyZW5kIHRoYXQgcmVmbGVjdGVkIGluIHNvY2lldHkgYXQgbGFyZ2UsIHRoYXQgZXZlcnkgZ2VuZXJhdGlvbiBvZiBzY2llbnRpc3RzIGlzIG1vcmUgcHJvZ3Jlc3NpdmUgYW5kIG1vcmUgdGhvdWdodGZ1bCBhYm91dCBzb2NpYWwgaXNzdWVzLiAKIlRoZXkgY2FsbGVkIG1lIGluIFV0YWggYW5kIHNhaWQgSSBuZWVkZWQgdG8gZ2V0IGJhY2sgdG8gTGFzIFZlZ2FzLiBUaGV5IGRpZG4ndCB0aGluayBzaGUgd2FzIGdvaW5nIHRvIG1ha2UgaXQsIiBTdGVmIFB1cmR5IHJlY2FsbGVkLiBIaXMgd2lmZSBoYWQgcmV0dXJuZWQgYSBkYXkgZWFybGllciwgYmVmb3JlIHRoZSBzZXJpb3VzbmVzcyBvZiBBbXkncyBjb25kaXRpb24gd2FzIGtub3duLgpJIGV2ZW4gaW4gc3VwcG9ydCBvZiBnaXZpbmcgdXAgRWFzdCBKZXJ1c2FsZW0KV2hlbiBJIHNhdyB5b3VyIHBvc3QgeWVzdGVyZGF5IGFuZCByZWFkIHRoZSB0aXRsZSwgbXkgaGVhcnQgc2Fuay4gSSBtaXNpbnRlcnByZXRlZCBpdCBhbmQgYXNzdW1lZCBpdCBoYWQgZ29uZSBuZWdhdGl2ZWx5IGZvciB5b3UuIApEZSBwbHVzLCBsZXMgQ1JTIHNlIGdhcmVudCBzeXN0bWF0aXF1ZW1lbnQgZW4gaW5mcmFjdGlvbiBhdmVjIGxlIGNvZGUgZGUgbGEgcm91dGUsIHN1ciBsZXMgdHJvdHRvaXJzIGV0IHN1ciBsZXMgcGFzc2FnZXMgcHJvdGdzLCBlbnRyYWluYW50IGQnYXV0cmVzIHVzYWdlcnMgIHN1aXZyZSBsZXVyIG1hdXZhaXMgZXhlbXBsZS4gQ2VydGFpbnMgdHJvdHRvaXJzIChydWVzIE15cmhhLCBMb24sIENhdiwgZGVzIFBvaXNzb25uaWVycy4pIHNvbnQgaW1wcmF0aWNhYmxlcyBwb3VyIGxlcyBwaXRvbnMuIEFpbnNpIGlscyBnbmVudCBsYSBjaXJjdWxhdGlvbiBldCBmb250IHByZW5kcmUgZGVzIHJpc3F1ZXMgYXV4IHBpdG9ucywgcGFydGljdWxpcmVtZW50IGF1eCBlbmZhbnRzLCBhdXggcGVyc29ubmVzIGdlcywgYXV4IHBhcmVudHMgYXZlYyBwb3Vzc2V0dGUgYWluc2kgcXUnYXV4IHBlcnNvbm5lcyBlbiBmYXV0ZXVpbCByb3VsYW50LiBPbiBzYWl0IHF1ZSBsZXMgZm9yY2VzIGRlIGwnb3JkcmUgcGV1dmVudCBsZ2FsZW1lbnQgc2Ugc291c3RyYWlyZSBhdXggcmdsZXMgY29tbXVuZXMsIG1haXMgcXVlbCBleGVtcGxlIHBvdXIgdG91dCAgY2hhY3VuLiBEJ2F1dGFudCBwbHVzIHF1J2lsIG4naW50ZXJ2aWVubmVudCBqYW1haXMgcG91ciBlbXBjaGVyIGxlcyBjb21wb3J0ZW1lbnQgYXV0b21vYmlsZXMgZGFuZ2VyZXV4IG91IG1tZSBsZXMgZmFpdHMgZGUgcGV0aXRlIGRsaW5xdWFuY2UuCkhpISBJIHJ1biBtYXJhdGhvbiBwYWNlIGF0IGFib3V0IDEwIG1pbi9taSwgd2l0aCB0cmFpbmluZyBydW5zIHNsb3dlciB0aGFuIHRoYXQuIFlvdSByaWdodCBpbiB0aGF0IGl0IGRvZXMgbWVhbiBzb21lIHJ1bnMgdGFrZSBhIGxvbmcgdGltZSwgd2hpY2ggY2FuIGJlIGEgYml0IGhhcmQgdG8gcGxhbiBhcm91bmQgKHRoZSBtaWR3ZWVrIGxvbmdpc2ggb25lcyB3ZXJlIHRoZSBoYXJkZXN0IGluIHRoYXQgcmVnYXJkKS4gCkhlIGxhdGVyIGJlY2FtZSBjaGFpcm1hbiBvZiBISiBIZWlueiwgc3VjY2VlZGluZyBISiBIZWlueiBJSS4gClNvIGRpZCBMb2NhbCA5OCwgd2hpY2ggc3BlbnQgJDExOCw3MTggYXQgdGhlIFdhbGRvcmYgZm9yIGl0cyBwYXJ0eS4gClN0cmFpbiB0aGUgY29va2luZyBsaXF1aWQgaW50byBhIGJvd2wuIFBsYWNlIDMgY3VwcyBvZiB0aGUgY29va2luZyBsaXF1aWQgaW50byBhIGxhcmdlIGhpZ2ggc2lkZWQgc2F1dGUgcGFuIGFuZCBicmluZyB0byBhIGJvaWwgb3ZlciBoaWdoIGhlYXQuIENvb2sgdW50aWwgdGhlIGxpcXVpZCBpcyByZWR1Y2VkIHRvIGFib3V0IDMvNCBjdXAuIApbV11oYXQgZmFzY2luYXRlcyB1cyBbaW4gT2VkaXB1cyB0aGUgS2luZ10gaXMgdGhlIHNwZWN0YWNsZSBvZiBhIG1hbiBmcmVlbHkgY2hvb3NpbmcsIGZyb20gdGhlIGhpZ2hlc3QgbW90aXZlcywgYSBzZXJpZXMgb2YgYWN0aW9ucyB3aGljaCBsZWFkIHRvIGhpcyBvd24gcnVpbi4gT2VkaXB1cyBtaWdodCBoYXZlIGxlZnQgdGhlIHBsYWd1ZSB0byB0YWtlIGl0cyBjb3Vyc2U7IGJ1dCBwaXR5IGZvciB0aGUgc3VmZmVyaW5ncyBvZiBoaXMgcGVvcGxlIGNvbXBlbGxlZCBoaW0gdG8gY29uc3VsdCBEZWxwaGkuIFdoZW4gQXBvbGxvIHdvcmQgY2FtZSBiYWNrLCBoZSBtaWdodCBzdGlsbCBoYXZlIGxlZnQgdGhlIG11cmRlciBvZiBMYWl1cyB1bmludmVzdGlnYXRlZDsgYnV0IHBpZXR5IGFuZCBqdXN0aWNlIHJlcXVpcmVkIGhpbSB0byBhY3QuIEhlIG5lZWQgbm90IGhhdmUgZm9yY2VkIHRoZSB0cnV0aCBmcm9tIHRoZSByZWx1Y3RhbnQgVGhlYmFuIGhlcmRzbWFuOyBidXQgYmVjYXVzZSBoZSBjYW5ub3QgcmVzdCBjb250ZW50IHdpdGggYSBsaWUsIGhlIG11c3QgdGVhciBhd2F5IHRoZSBsYXN0IHZlaWwgZnJvbSB0aGUgaWxsdXNpb24gaW4gd2hpY2ggaGUgaGFzIGxpdmVkIHNvIGxvbmcuIFRlaXJlc2lhcywgSm9jYXN0YSwgdGhlIGhlcmRzbWFuLCBlYWNoIGluIHR1cm4gdHJpZXMgdG8gc3RvcCBoaW0sIGJ1dCBpbiB2YWluOiBoZSBtdXN0IHJlYWQgdGhlIGxhc3QgcmlkZGxlLCB0aGUgcmlkZGxlIG9mIGhpcyBvd24gbGlmZS4gVGhlIGltbWVkaWF0ZSBjYXVzZSBvZiBPZWRpcHVzIHJ1aW4gaXMgbm90IG9yIGdvZHMgb3JhY2xlIHNhaWQgdGhhdCBoZSBtdXN0IGRpc2NvdmVyIHRoZSB0cnV0aCBhbmQgc3RpbGwgbGVzcyBkb2VzIGl0IGxpZSBpbiBoaXMgb3duIHdlYWtuZXNzOyB3aGF0IGNhdXNlcyBoaXMgcnVpbiBpcyBoaXMgb3duIHN0cmVuZ3RoIGFuZCBjb3VyYWdlLCBoaXMgbG95YWx0eSB0byBUaGViZXMsIGFuZCBoaXMgbG95YWx0eSB0byB0aGUgdHJ1dGguCkhlIHRhdWdodCBtZSBhYm91dCB0aGUgc2l0dWF0aW9uIGluIE15YW5tYXIsIGFuZCBhYm91dCBob3cgaGlzIG5lcGhldyB3YXMgc2Vla2luZyByZWZ1Z2VlIHN0YXR1cyBhcyB3ZWxsLCBoYXZpbmcgYmVlbiB0YWtlbiBmcm9tIGhpcyB2aWxsYWdlIGJ5IG1lbWJlcnMgb2YgdGhlIFRhdG1hZGF3IChNeWFubWFyIG1pbGl0YXJ5KSBhbmQgZm9yY2VkIHRvIGJlIGEgaHVtYW4gc2hpZWxkLCB3YWxraW5nIHRocm91Z2ggbWluZWZpZWxkcyBhaGVhZCBvZiB0aGUgdHJvb3AsIGV0Yy4gCkkgbWVhbiwgaXQncyBvbmUgb2YgdGhvc2UgdGhpbmdzIHdoZXJlIHlvdSBidXkgYSBqYWNrZXQgYW5kIHdlYXIgaXQgZm9yIDUgOCB5ZWFycyB0aGVuIHJlcGxhY2UgaXQgYmVjYXVzZSBpdCBnZXRzIHdvcm4gb3V0LCBzZW5kIGl0IGJhY2sgZm9yIGEgcmVwbGFjZW1lbnQgb3IgYnV5IGEgY2hlYXBlciBqYWNrZXQgYW5kIHJlcGxhY2UgaXQgZXZlcnkgZmV3IHllYXJzLiBJIGhhdmUgYSBwdWxsb3ZlciB0aGF0IGdvdCBjYXVnaHQgb24gc29tZXRoaW5nIGFuZCBtYWRlIGxpdHRsZSBob2xlcyBpbiBpdCwgaXQncyBjb3NtZXRpYyBidXQgdGhleSByZXBhaXJlZCBpdCBmb3IgbWUuIApMaWtlIG1hbnkgYnVkZGluZyBsZWdlbmRzLCAiTm8gSG9tZSBKZXJvbWUiIGxvc3QgbW9uZXkgdG8gdGhlIGJlc3QgcG9rZXIgcGxheWVycyBhbmQgY2FyZCBzaGFya3Mgb2YgQXRsYW50aWMgQ2l0eSBpbiB0aG9zZSB2ZXJ5IGVhcmx5IGRheXMgYnV0IGltcHJvdmVkIGhpcyBnYW1lIGltbWVhc3VyYWJseSBhbmQgdG9vayBpdCB0byBWZWdhcyB3aGVyZSBoZSB3b24gaGlzIGZpcnN0IFdTT1AgYnJhY2VsZXQgaW4gMjAwMC4gT3ZlciB0aGUgY291cnNlIG9mIHRoZSBuZXh0IGRlY2FkZSBoZSBhZGRlZCBzZXZlbiBtb3JlIGJyYWNlbGV0cyB0byB0aGF0IHRhbGx5LCBiZWNvbWluZyB0aGUgeW91bmdlc3QgYW5kIHF1aWNrZXN0IHBsYXllciBldmVyIHRvIHJlYWNoIHRoYXQgZmlndXJlLiAKIlRoZSBNaW5uZWFwb2xpcyBwcm9tb3Rpb25hbCBmaWxtIHdhcyBhIGNvbXBsZXRlIHN1cnByaXNlLCIgVmFuIENsZXZlIHNheXMsIGFkZGluZyB0aGF0IGl0IHdhcyBkaXNjb3ZlcmVkIGluc2lkZSBhIGNhbmlzdGVyIG1pc2xhYmVsZWQgIlNraXAgRGF5IDE5NDcuIiBUaGUgb3JpZ2lucyBvZiB0aGUgdmlkZW8gYXJlIHVua25vd24uCkluIHRlcm1zIHdoZW4gZ2FtZXMgYXJlIHNvbHZlZCBJIHdvdWxkIHNheSBsb3dlc3QgdmFyaWFuY2UgZ2FtZXMgd2lsbCBiZSBzcGxpdCBwb3QgZ2FtZXMgbGlrZSBvbWFoYSA4LiBQbGF5ZXJzIHVzZWQgdG8gaGF2ZSBzdHJhaWdodCBsaW5lIGdyYXBocyBpbiBQTE84IGJ1dCBjb3VsZCBoYXZlIGJlZW4gdmFyaWFuY2UgYW5kL29yIHRoZXkgd2VyZSB1c2luZyBib3QgYXNzaXN0YW5jZSB0aGF0IHNvbHZlZCBpdC4gSW4gb3RoZXIgd29yZHMsIHJlbGF0aXZlIHNraWxsIGxldmVscyBvZiBwbGF5ZXJzIGF0IHRoZSB0YWJsZS4KVHdlbnR5IHllYXJzIG1heSBoYXZlIGRvbmUgYSBncmVhdCBkZWFsIG9mIHN0cmVzcyB0byB5b3VyIGJvZHkuIApXaGVuIEkgYW0gZG9uZSB3b3JraW5nIEkgcHV0IHRoZSBrZXlib2FyZCBhbmQgbW91c2UgaW4gdGhlIGRyYXdlciBhbmQgY2xvc2UgaXQuIFlvdSdkIG5ldmVyIGtub3cgaXQgd2FzIGFuIG9mZmljZS4KUmVwbGFjZSBvbmUgU01HIHdpdGggYSBIRywgYW5kIG9uZSBBUiB3aXRoIGEgUkYuIApJIHRoaW5rIG1vc3Qgb2YgeW91ciBwb2ludHMgYXJlIHNwb3Qgb24gYW5kIGFsdGhvdWdoIEkgbWlnaHQgaGF2ZSBub3QgbGlrZWQgaXQgYXMgbXVjaCBhcyBTRUVEIChiZWNhdXNlIEkga2luZGEgZW5qb3llZCB0aGF0IGEgbG90IGFuZCB0aGVuIEkgY291bGRuIGhlbHAgdGhpbmtpbmcgYmFjayB0byBpdCB3aGVuZXZlciBzb21ldGhpbmcgaGFwcGVuZWQgaW4gRGVzdGlueSksIGl0IHdhcyBzdGlsbCBlbmpveWFibGUuIEp1c3QgaGFkIGEgbG90IG9mIHRoaW5ncyB0aGF0IGFubm95ZWQgbWUgYmVjYXVzZSB0aGV5IHN0YXJ0ZWQgcnVpbmluZyBtb21lbnRzIGFuZCBjaGFyYWN0ZXJzIEkgbGlrZWQgaW4gU0VFRC4KSSdtIHlvdW5nLCBkdW1iIGFuZCBmdWxsIG9mLiBXZWxsLCB5b3Uga25vdywgcmVzaWR1YWwgdGVlbmFnZSBhbmdzdC4gSSBtYXkgbm90IGxpa2UgdmlkZW8gZ2FtZXMgb3Igb25saW5lIHBva2VyIGJ1dCBJIHN1cmVseSBkbyBhcHByZWNpYXRlIGZhc3QgY2Fycy4gCk1hcmdhcmV0IE1jTGV0Y2hpZSwgYW4gYXR0b3JuZXkgcmVwcmVzZW50aW5nIEFQIGFuZCB0aGUgUmV2aWV3IEpvdXJuYWwgaW4gdGhlIGF1dG9wc2llcyBjYXNlLCBub3RlZCBpbiBjb3VydCB0aGF0IE5ldmFkYSBzdGF0ZSBwdWJsaWMgcmVjb3JkcyBsYXcgZG9lcyBub3QgZGlyZWN0bHkgYWRkcmVzcyBhdXRvcHNpZXMgYW5kIHRoYXQgYSBkZWNlYXNlZCBwZXJzb24gaGFzIG5vIGxlZ2FsIHJpZ2h0IHRvIHByaXZhY3kuClVzZSB0aGUgbGluayBJIGdhdmUgaW4gbXkgcHJldmlvdXMgbWVzc2FnZS4uIApCdXQgd2h5IHdhc3RlIHlvdXIgdGltZSBhbmQgdGFsZW50IG9uIHBsYXlpbmcgc2luZ2xlIGhhbmQgdmlkZW8gcG9rZXI/IFVubGlrZSBsaXZlIHBva2VyLCB3aGVyZSB5b3UgZ2V0IHRvIHBsYXkganVzdCBvbmUgaGFuZCwgdmlkZW8gcG9rZXIgYWxsb3dzIHlvdSB0byBwbGF5IG11bHRpcGxlIGhhbmRzLiBUaGlzIHdheSB5b3UgY2FuIGluY3JlYXNlIHlvdXIgd2lubmluZ3MgYW5kIHdhbGsgYXdheSBhIG11Y2ggaGFwcGllciB3aW5uZXIuIAoxMDAlIHRob3VnaHQgdGhlICQxOTAgd2FzIGJlaW5nIHRvc3NlZCBvdXQsIGFuZCBvbmx5IGRpZCBpdCBpbiB0aGUgc21hbGwgaG9wZXMgaGUgaGFkIGFuIG92ZXIgcGFpciBoZXJvIGNhbGwgdHlwZSBoYW5kIHRoYXQgZGlkbiBwYWlyIHRoZSBKIG9uIHRoZSByaXZlciBhcyB3ZWxsLiBMaWtlIEkgc2FpZCwgYXQgdGhhdCBwb2ludCBJIG5ldmVyIGZvbGRpbmcgJDE5MCBpbnRvIGEgcG90IHRoYXQgYmlnLiAKSW4gc29tZSBhcmVhcywgb3RoZXIgaGVhbHRoIGNhcmUgcHJvZmVzc2lvbmFscyBtaWdodCBwcm92aWRlIGEgcmVmZXJyYWwgdG8gYW4gYWN1cHVuY3R1cmlzdCwgZXNwZWNpYWxseSBpZiB0aGV5IHdvcmsgaW4gYSBob2xpc3RpYyBncm91cCBwcmFjdGljZS4uIApNb3ZpbmcgdG8gR2VybWFueSB3YXMgYSBsaWZlbG9uZyBkcmVhbSBhbmQgdGhlIGV4cGVyaWVuY2UgaGFzIGJlZW4gbW9zdGx5IHBvc2l0aXZlIHBlcnNvbmFsbHkgYW5kIHByb2Zlc3Npb25hbGx5LiBIb3dldmVyLCBJIHJlYWR5IHRvIGNvbWUgaG9tZS4gTWF5YmUsIEkgc2VlIHRoaW5ncyBkaWZmZXJlbnRseSBpZiBJIG1ldCBzb21lb25lIGZyb20gYW5vdGhlciBjb3VudHJ5IGFuZCB3ZSBoYWQgdG8gZmlndXJlIG91dCB3aGVyZSB0byBzZXR0bGUgZG93biwgYnV0IHRoZSB3YXkgSSBzZWUgdGhlIHdvcmxkIGlzIHNvICJBbWVyaWNhbi4iCllvdSBhbHNvIG1lbnRpb24gdHJ1Y2tpbmcgc2FmZXR5LCBtYW55IGlzc3VlcyBoZXJlIE1leGljbyBmYWlsdXJlIHRvIGFkb3B0IGFuZCBvciBlbmZvcmNlIHRyYW5zcG9ydGF0aW9uIHNhZmV0eSBsYXdzLCBNZXhpY28gcmVmdXNhbCB0byBleGNlcHQgb25seSBpbnN1cmFuY2UgY29tcGFueSB3aG8gaGF2ZSBhIGxpY2VuY2UgdG8gZG8gYnVzaW5lc3MgaW4gdGhlIFVTIGFuZCBvciBzdGF0ZXMuIFRoZSByZWZ1c2FsIHRvIGV4Y2VwdCB0aGUgZGlmZmVyZW5jZSBpbiBsaWFiaWxpdHkgbGF3cy4gVVMgaGFzIHRyYW5zcG9ydGF0aW9uIHdvcmtlciBsYXdzIERydWcgdGVzdGluZywgaG91cnMgb25lIGNhbiBvcGVyYXRlIGV0Yy4gVGhlIGFiaWxpdHkgdG8gY29sbGVjdCB0cmFmZmljIGZpbmVzIGZyb20gTWV4aWNhbiBkcml2ZXJzIGV0YyBldGMgZXRjClRoZSBLZWxzbyBIaWdoIENhbXB1c0RlY2FkZSBBd2FyZCByZWNvZ25pc2VzIGEgc3R1ZGVudCB3aG8gY29tcGxldGVkIHRoZWlyIHNlY29uZGFyeSBlZHVjYXRpb24gYXQgS2Vsc28gSGlnaCBDYW1wdXMgbW9yZSB0aGFuIDEwIHllYXJzIGFnb2FuZCBoYXMgYWNoaWV2ZWQgb3V0c3RhbmRpbmcgc3VjY2VzcyBpbiB0aGVpciBjaG9zZW4gZmllbGQuIApNZXp6bW8gNS4xIHBhdGNoLCBNZXp6bW8gNS4xIGtleWdlbiwgTWV6em1vIDUuMSBjcmFjaywgTWV6em1vIDUuMSBLZXksIE1lenptbyA1LjEgU2VyaWFsLCBNZXp6bW8gNS4xLiA2IHJlc3VsdHMgLiAKQWxzbywgbXkgcGFyZW50cyBjb21wbGFpbmVkIHRoYXQgaXQgd2FzIG15IGZhdWx0IHRoZWlyIGZyaWVuZHMgbm93IGhhZCB0byBzaGVsbCBvdXQgY2FzaCB0byBmaXggdGhlaXIgY29tcHV0ZXIgcHJvYmxlbXMuIApBenVyZXdyYXRoIGlzIGdyZWF0IHRvbywgeW91IGNhbiBkbyA0IHNoYWVscywgYSAxNWlhcy9zcGxhc2ggamV3ZWwsIGFuZCBlbmpveSBhbiBleHRyYSBsaWdodG5pbmcgZmFjZXQgc2luY2UgaXQgaGFzIGhpZ2hlciB3aWFzLiBJdCBpcyBtb3JlIGV4cGVuc2l2ZSB0aG91Z2gKQmlzc29ubmV0dGUgc2FpZCBjYXJlIHdvcmtlcnMgYXJlIGxlYXJuaW5nIHRvIGludGVydmVuZSBiZWZvcmUgYSBwZXJzb24gbG9zZXMgaGlzIG9yIGhlciBob21lLCB0byBiZSBhd2FyZSBvZiBzdWNoIHNjZW5hcmlvcyB3aGVuIGFuIGVsZGVyIGlzIGluIHRoZSBob3NwaXRhbCwgZm9yIGV4YW1wbGUuCjI4LCAxOTk5ICAgYWZ0ZXIgdGhlIHByb3BlcnRpZXMgd2VyZSBzZWl6ZWQgYnkgcG9saWNlICAgYW5kIHN0b2xlIGFwcGxpYW5jZXMsIHRvaWxldHMsIGNhYmluZXRzIGFuZCBvdGhlciBpdGVtcyBmcm9tIHRoZSBidWlsZGluZywgY291cnQgcmVjb3JkcyBzYXkuV2hpdGxvdyBldmVudHVhbGx5IHBsZWFkZWQgZ3VpbHR5IHRvIGJyZWFraW5nIGFuZCBlbnRlcmluZyBhbmQgd2FzIHNlbnRlbmNlZCB0byBvbmUgeWVhciBpbiBwcmlzb24uIApNYSBxdWFsICBsJ29yaWdpbmUgZGVsIHRhbmdvPyBFc3NvIG5hc2NlIGluIEFyZ2VudGluYSBkYSB1biBmZW5vbWVubyBkaSBncmFuZGUgaW1wYXR0byBzb2NpYWxlIGNvbWUgbCdpbW1pZ3JhemlvbmUuIEdsaSBldXJvcGVpIGdpdW5nZXZhbm8gaW4gQXJnZW50aW5hIGNvbiBpbCBkb2xvcmUgaW1tZW5zbyBkaSBjaGkgaGEgbGFzY2lhdG8gaSBwcm9wcmkgY2FyaSBlIHNhIGNoZSBub24gbGkgcml2ZWRyIG1haSBwaSBlIHF1ZXN0YSBzb2ZmZXJlbnphIHNpIGFuZCBhZCBpbmNvbnRyYXJlIGNvbiBxdWVsbGEgZGkgdW4nYWx0cmEgZmlndXJhIGRpIGVtaWdyYW50ZSwgcXVlbGxhIGRlbCBnYXVjaG8gY2hlIGxhc2NpYXZhIGxhIHByb3ZpbmNpYSBwZXIgY2VyY2FyZSBsYXZvcm8gaW4gY2l0dC4gRGEgcXVlc3RlIGR1ZSBwcm9mb25kZSBzb2xpdHVkaW5pLCBuYXNjZXZhIGlsIGJpc29nbm8gZGVsbCdpbmNvbnRyby4gVW4gYmlzb2dubyBjb3MgcHJvZm9uZG8gZGEgZXNwcmltZXJzaSBuZWwgZGVzaWRlcmlvIGRpIGFiYnJhY2NpYXJlIHF1YWxjdW5vLgpJIGJvdHRvbWVkIG91dCBhdCAxNzYsIHB1dCAzbGJzIGJhY2sgb24gYWxtb3N0IGltbWVkaWF0ZWx5LCBidXQgaGF2ZSBiZWVuIGhvbGRpbmcgdmVyeSBzdGVhZHkgYXQgMTc5IGZvciB0aGUgbGFzdCA1IDYgbW9udGhzLiBJZiBJIGNvdWxkIGFmZm9yZCBza2luIHN1cmdlcnksIEkgcHJvYmFibHkgbG9zZSBhbm90aGVyIDEwIDE1bGJzIGp1c3QgZnJvbSBza2luLkRvbiBzdHJlc3Mgb3ZlciB0aGUgc3RhdGlzdGljYWwgY29tcGFyaXNvbnMgYmV0d2VlbiBWU0cgYW5kIFJOWS4gCllvdSBjb3VsZCBzd2FwIGFyb3VuZCBhbnkgb2YgdGhlIGRldGFpbHMgb3IgdGhlIHRhcmdldHMgYW5kIGl0IHdvdWxkIHN0aWxsIHdvcmsuIFVuZm9ydHVuYXRlbHkgYSBzaXplYWJsZSBwcm9wb3J0aW9uIG9mIHBvc3RzIG9uIHRoYXQgc3VicmVkZGl0IGluY2x1ZGluZyB0aGUgbW9zdCBwb3B1bGFyIG9uZXMgb21pdCB0aGUgam9rZS4uIApIeXBlcmdyaXAgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMjYgZGF5cyBhZ28KV2hhdCB0byB3ZWFyOiBZb2dhIGNsb3RoZXMuIEJyaW5nIHdhdGVyLiBEb24ndCB5b3UgZGFyZSB3ZWFyIHNob2VzIGFuZCBzb2Nrcywgb3IgeW91J2xsIG1pc3MgdGhlIGZlZWxpbmcgb2YgZGV3IG9uIHRoZSBncmFzcy4KSG93IHRvIFBsYXkgUG9rZXIgQWdhaW5zdCBhIEJsdWZmZXIKSXQgaXMgYSBnYW1lIG9mIG51bWJlcnMsIHdoZXJlIHBsYXllcnMgY2hvb3NlIHRvIGJldCBvbiBzaW5nbGUgb3Igc2VyaWVzIG9mIG51bWJlcnMgb3IgZGlmZmVyZW50IGNvbG91cnMgbGlrZSBibGFjayBvciByZWQuIApBIHRyaWFsIGhhcyBiZWVuIHNldCBmb3IgdGhlIHdlZWsgb2YgSmFuLiAzMCwgMjAxMiwgaW4gYSBsYXdzdWl0IGZpbGVkIGFnYWluc3QgdGhlIGFjdG9yIGJ5IGEgdHJ1c3RlZSBmb3IgaW52ZXN0b3JzIHNlZWtpbmcgdGhlIHJldHVybiBvZiBtb3JlIHRoYW4gJDMwMCwwMDAgdGhhdCBNYWd1aXJlIHdvbiBwbGF5aW5nIHBva2VyIHdpdGggYSBCZXZlcmx5IEhpbGxzIGhlZGdlIGZ1bmQgbWFuYWdlciB3aG8gd2FzIGJldHRpbmcgd2l0aCBjbGllbnRzJyBtb25leS4KVGhlcmUgYXJlIHByb2JhYmx5IGFzcGVjdHMgb2YgY29udHJvbCAvIGdvdmVybm1lbnQgcG93ZXIgLyBjZW5zb3JzaGlwIG9mIGlkZWFzIGF0IHNvbWUgbGV2ZWwuIApHcGF0IE5pcGVyIERpLCBwaGFybWFjaXN0LiBNQ1EgYm9va3MgZm9yIEdQQVQgLiAKSHVpdCBhbnMgYXBycyBsYSBsb2kgbGVzIGF5YW50IHJnbGVtZW50cywgbGVzIGpldXggZW4gbGlnbmUgKHBhcmlzIHNwb3J0aWZzIGV0IGhpcHBpcXVlcywgcG9rZXIsIGV0Yy4pIHJlcHJzZW50ZW50IDEwJSBkZSBsJ2Vuc2VtYmxlIGRlcyBkcGVuc2VzIGVuIGpldXggZCdhcmdlbnQgZGFucyBsJ0hleGFnb25lLiBVbiB0b3RhbCBkZSAxNSBzb2NpdHMgICBGcmFuYWlzZSBkZXMgSmV1eCwgUE1VLCBCZXRDbGljIG91IFdpbmFtYXggICBzb250IGFncmVzIHBhciBsJ0FyamVsLCBsJ2F1dG9yaXQgYWRtaW5pc3RyYXRpdmUgY29tcHRlbnRlLi4gCllvdXIgaGVhcnQgaXMgc2V0IG9uIFBvbGUgQnJpZGdlLCBDaGllZiBNb3VudGFpbiBUYXhpIGFuZCBpcyByZWxpYWJsZSBhbmQgaW4gbXkgZXhwZXJpZW5jZSBhcmUgZ29vZCBkdWRlcyB3aG8gd2lsbCBnaXZlIHlvdSBhIGxvdCBvZiBuYXRpdmUgaGlzdG9yeSBvbiB0aGUgYXJlYSBpZiB5b3UgYXNrIChZb3UgYXJlIHByb2JhYmx5IGxvb2tpbmcgYXQgYSBtaW5pbXVtIG9mICQxMDAgb24gdGhhdCBjYWIgcmlkZSkuIElmIHlvdSB3YW50ZWQgdG8gYXZvaWQgdGhlIHdob2xlIGhpa2Ugbm9ydGggdG8gdGFnIHRoZSBib3JkZXIgZGVhbCwgQ2hpZWYgTW91bnRhaW4gVGF4aSB3aWxsIGFsc28gdGFrZSB5b3UgaW50byBDYW5hZGEgdG8gc3RhcnQgaW4gV2F0ZXJ0b24gc28geW91IGFyZSBqdXN0IGhpa2luZyBzb3V0aCBhZnRlciB0aGUgY2hlY2sgaW4gd2l0aCBjdXN0b21zIGF0IEdvYXQgSGF1bnQuIFNpbmNlIHRoZXkgYXJlIGJhc2VkIGluIFN0LiAKV2UgZWRpdGVkIG9uIDM1bW0gZmlsbSwgOSBtaW51dGUgc2VnbWVudHMgb2YgdGhlIG1vdmllLCB3aGljaCB3ZSB0aGVuIGRpZCBtaXhpbmcgb24sIG91dCBvZiBvcmRlciwgc2V2ZXJhbCB0aW1lcy4gCkkgaGF2ZSBoYWQgb3RoZXIgc2hvcnQgc2FsZXMgdGhhdCBkaWRuJ3QgY29tcGxldGUsIGJ1dCwgZm9yIHRoZSBtb3N0IHBhcnQsIHRoYXQgd2FzIE9rLCBiZWNhdXNlIEkgZm91Z2h0IHRoZSBnb29kIGZpZ2h0OiB0aGUgd29ya2luZyBvZiB0aGUgcHJvamVjdCB3YXMgInN1Y2Nlc3NmdWwiLiAKMzJSZWQgQ2FzaW5vIFJldmlldwpBIG1hc3NldXNlIGNhbiBhbHNvIHJlbGlldmUgcGFpbiB0aHJvdWdoIHNwb3J0cyBtYXNzYWdlIGJ5IHdvcmtpbmcgb24gdHJpZ2dlciBwb2ludHMsIHdoaWNoIGFyZSBzcG90cyB3aGVyZSB0aGUgbXVzY2xlIGlzIGVzcGVjaWFsbHkgdGlnaHQgYW5kIHNlbnNpdGl2ZS4gVGhlIGxvY2F0aW9uIG9mIHRoZXNlIGRlcGVuZCBvbiB0aGUgaW5kaXZpZHVhbCBhdGhsZXRlIGFuZCBoaXMgb3IgaGVyIHRyYWluaW5nIHJvdXRpbmUuIEJ5IHN0cmV0Y2hpbmcgbXVzY2xlcyBhbmQgbG9vc2VuaW5nIHRpc3N1ZXMsIG1hc3NhZ2UgY2FuIHJlbGlldmUgdGlnaHRuZXNzIGFuZCBnZXQgcmlkIG9mIHNwYXNtcy4gCldlJ3JlIHJpZ2h0IGluIHRoZSBtaWRkbGUgb2YgYWxsIG9mIHRoaXMgcG9saXRpY2FsIHVwaGVhdmFsIGFyb3VuZCBpbW1pZ3JhdGlvbiBpbiBvdXIgY291bnRyeS4gClByaW9yIHRvIG15IG93bmluZywgdGhlIHByZXZpb3VzIG93bmVyIHJlcGxhY2VkIHRoZSB3YXRlciBwdW1wLCBhbmQgdHJhbnNtaXNzaW9uLiAKSHVtYm9sZHQgSW5kZXBlbmRlbnQgQXJjaGl2ZXMKRXQgY29tcHJlbmRyZSBsZXMgY2F1c2VzLi4gCiJZb3UgY2FuIGJ1eSBvbmUgb2YgdGhlc2UgY29ja3RhaWxzIGZvciAkMTAgdG8gJDIwIG9uIHRoZSBzdHJlZXQgYW5kIGxvc2UgeW91ciBsaWZlIGluIGEgZmV3IHNlY29uZHMuIiBHcmV5IERlYXRoIG1heSBiZSB0aGUgZGVzY2VuZGFudCBvZiBncmF5IHBlYmJsZSBsaWtlIG1peHR1cmVzIG9mIGhlcm9pbiB0aGF0IGxhdyBlbmZvcmNlbWVudCBvZmZpY2lhbHMgc2VpemVkIGluIFNhbiBEaWVnbywgQ2hpY2FnbywgYW5kIHJ1cmFsIHRvd25zIGluIEtlbnR1Y2t5IGFuZCBJbmRpYW5hIGluIHJlY2VudCB5ZWFycy4gClRoZSBkcnVnIGNvc3RzIHBhdGllbnRzIDQwMCBkb2xsYXJzIGEgbW9udGggd2hpY2ggaXMgY29uc2lkZXJhYmx5IGhpZ2hlciB0aGFuIG92ZXIgdGhlIGNvdW50ZXIgb21lZ2EgMyBhdmFpbGFibGUgaW4gaGVhbHRoIGZvb2Qgc3RvcmVzLiAodGhlIGRydWcgdmVyc2lvbiBjb3N0cyBhdCBsZWFzdCBzaXhmb2xkIG1vcmUgdGhhbiBvdmVyIHRoZSBjb3VudGVyIHBpbGxzKQpIb3cgQnJ1Y2UgTGVlIENoYW5nZWQgdGhlIFdvcmxkICgyMDA5KS4gCkkgd2FzIHJ1bm5pbmcgYWJvdXQgNCA1IG1pbGVzIGEgZGF5IGJlZm9yZSBJIGdvdCBzaWNrIHdpdGhvdXQgaXNzdWUuLiAKSSBrbm93IHRoaXMgaXNuIG1lYW50IHRvIGJlIHRvbyBzZXJpb3VzLCBidXQgdGhpcyBpcyBzb3J0IG9mIHdoeSBJIGRvbiBnZXQgd2h5IHBlb3BsZSBmcmVhayBvdXQgYWJvdXQgaG93IHNvbWV0aGluZyBpcyBnb2luZyB0byBiZSAicnVpbmVkIiBieSBhbiBhZGFwdGF0aW9uLiBCcnVoLCB0aGUgb3JpZ2luYWwgd2lsbCBzdGlsbCBleGlzdCwgdW5jaGFuZ2VkLiBUaGUgbmV3IGFkYXB0YXRpb24gY291bGQgYmUgdGhlIGxpdGVyYWwgd29yc3QgdGhpbmcgZXZlciBhbmQgaXQgc3RpbGwgd29uICJydWluIiBhbnl0aGluZy4KVGhpcyBpcyBLb3JlYSBmYW1vdXMgQ2hpY2tlbiBHaW5zZW5nIHNvdXAuIApDdXRsZXIgdG9vayB0aGUgcHJhY3RpY2UgZmllbGQgd2VhcmluZyBqZXJzZXkgTm8uIDYsIGhpcyBudW1iZXIgc2luY2UgaGlnaCBzY2hvb2wsIGFmdGVyIHJlc2VydmUgcXVhcnRlcmJhY2sgQnJhbmRvbiBEb3VnaHR5IGFncmVlZCB0byBnaXZlIGl0IHVwLiBXaGVuIEN1dGxlciBiZWdhbiB0byB0aHJvdywgaGUgbG9va2VkIGxpZ2h0IG9uIGhpcyBmZWV0IGFuZCBxdWljayBhbmQgYWNjdXJhdGUgd2l0aCBoaXMgcGFzc2VzIHdoaWxlIHNob3dpbmcgZ29vZCBhcm0gc3RyZW5ndGguCiJXaGljaCB0cmVlIHdvdWxkIHlvdSBsaWtlIHRvIGJlPyIKTGFkeSBHYUdhKSwgR3JlYXRlc3QsIEhvbGx5d29vZCBbTGl2ZUF0IHRoZSBCaXR0ZXIgRW5kIDEvMjAvMDZdICxTb21ldGltZXMgLiA5MykgMyBXYXkgKFRoZUdvbGRlbiBSdWxlKSBbZmVhdC4gCkhlIGhhZCBubyBwcmVjZWRlbnQgZm9yIHNwZW5kaW5nIHN1Y2ggYSBodWdlIHN1bSBvZiBtb25leS4gClRoZSBpbnRlcnZlbnRpb24gbmVlZHMgdG8gYmUgaGVhdmllciBhbmQgbW9yZSBpbnRlbnNlIGF0IHRoYXQgcG9pbnQuIApTaGUgc2VudCBtZSBzb21lIHZpZGVvcywgYW5kIHRoZXJlIHdhcyBubyB0dXJuaW5nIGJhY2sgZm9yIG1lLiAKSWYgdGhlIGZvcm1lciwgc3VydmVpbGxhbmNlIHdvdWxkIG9ubHkgc2hvdyB0aGUgcGVyc29uIGxpdmVzIHRoZXJlLCBub3QgcGF5bWVudC4gUGVyaGFwcyB5b3UgY291bGQgc3VicG9lbmEgYmFuayByZWNvcmRzIGFzIHBhcnQgb2YgZGlzY292ZXJ5IChsaXRpZ2F0aW9uKSB0aGF0IG1pZ2h0IHNob3cgbW9udGhseSBkZXBvc2l0cyBiZWdhbiBvbiBhIGNlcnRhaW4gZGF0ZSBhbmQgd2VyZSBmb3IgdGhlIHNhbWUgYW1vdW50PyBCdXQgaWYgdGhlIHBheW1lbnRzIGFyZW4gYmVpbmcgZGVwb3NpdGVkIGl0IG9idmlvdXNseSBiZWNvbWVzIG1vcmUgZGlmZmljdWx0LiAKV2VyZSBmb3Igc2FsZSBmb3IgJDc1MCwwMDAuIApBcyB5b3UgZ2V0IGNvbWZvcnRhYmxlIHN0YXJ0aW5nIGFkZGluZyBtb3JlIGhhbmRzIHRvIHRoYXQgcmFuZ2UgYW5kIHNvIG9uLiBTbyB0byBhbnN3ZXIgeW91ciBxdWVzdGlvbiwgZ2F0aGVyIHlvdXIgdGhvdWdodHMgYW5kIGRvbid0IHJ1c2ggdG8gYSBkZWNpc2lvbiBhbmQgbm8gb25lIHdpbGwgcmVhbGx5IG5vdGljZS4gCkRvIHlvdSBoYXZlIGEgdGltZSBmcmFtZSBpbiBtaW5kPyBPY3RvYmVyIGluIEtvcmVhIGlzIGZhbnRhc3RpYy4gSWYgeW91IGFyZSB1cCBmb3IgZ2V0dGluZyB3ZXQsIHRoZSBmb3VudGFpbnMgaW4gR3dhbmdod2FtdW4gcGxhemEgY291bGQgYmUgZnVuLiAoRWRpdCBub3BlLCBpZiB5b3UgZ29pbmcgaW4gdHdvIHdlZWtzIGl0IGJlIHRvbyBjb2xkISkgVGhlIG11c2V1bSB1bmRlciB0aGUgcGxhemEgaXMgY29vbCBmb3IgYSBxdWljayB2aXNpdC4gCk1hbnkgb2JzZXJ2ZXJzIGF0dHJpYnV0ZSBncmlkbG9jayB0byBwYXJ0aXNhbiBwb2xhcmlzYXRpb24sIHRoYXQgaXMsIGRlZXAgZGl2aXNpb25zIGJldHdlZW4gdGhlIERlbW9jcmF0aWMgYW5kIFJlcHVibGljYW4gcGFydGllcyBpbiB3aGljaCBjb21wcm9taXNlIGlzIGNvbnNpZGVyZWQgdG8gYmUgYSBsaWFiaWxpdHkgcmF0aGVyIHRoYW4gYSB2aXJ0dWUuIApGcm9tIGxlZnQsIEtpbW15IENob2ksIEJlbmphbWluIE1pbGxtYW4sIEFkcmlhbmEgUmF2YWxsaSwgU2FtYW50LiBpbiBDaXJjbGUgR2FtZTogUmVpbWFnaW5pbmcgdGhlIE11c2ljIG9mIEpvbmkgTWl0Y2hlbGwuCk9mdGVuIGRvbmUgdG8gY29taWNhbGx5IGFic3VyZCBkZWdyZWUuIApNZW1iZXJzIG9mIFNpbXBseSBTaWNrIE1DIGFuZCBKdXN0aW4gUm9iZXJ0cywgYSBtYW5hZ2VyIG9mIFdlc3RzaWRlIFNjb290ZXIgU2FsZXMgSW5jLiwgYXJlIGhvbGRpbmcgYSBwb2tlciBydW4gYWxvbmcgd2l0aCBhIGJpa2UgYW5kIGNhciBzaG93IHRvIHJhaXNlIG1vbmV5IGZvciBEZWlvbiBEb3VnbGFzLCBhIDUgeWVhciBvbGQgYm95IHdobyB3YXMgZGlhZ25vc2VkIGluIEF1Z3VzdCAyMDE2IHdpdGggYSByYXJlIHR5cGUgb2YgYnJhaW4gdHVtb3IuIApEb24ndCBjb21lIGF0IG1lIHdpdGggdGhhdCBidWxsc2hpdC4gSXQncyBub3QgbXVyZGVyIHRvIHRlcm1pbmF0ZSBhIGZhdGFsIHByZWduYW5jeS4gSXQncyBub3QgbXVyZGVyIGZvciBhIHdvbWFuIHRvIGRlY2lkZSB3aGF0IHNoZSBkb2VzIHdpdGggaGVyIG93biBib2R5LiAKQnV0IEkgaGFkIG5vdGhpbmcgdG8gdGVsbC4gClRvdGFsbHkgYWdyZWUuIEkgY2VydGFpbmx5IGZlbHQgdGhlICJ3aGF0IHRoZSBmIGFtIEkgZG9pbmcgd2l0aCBteSBsaWZlLCBJIGhhdmUgbm90aGluZyB3b3J0aCB3aGlsZSBoZXJlLCIgbWluZHNldC4gSSBlbmRlZCB1cCBxdWl0dGluZyBteSBqb2IgYW5kIEkgbW92ZWQgdG8gYSBkaWZmZXJlbnQgc3RhdGUgYW5kIGxpdGVyYWxseSBzdGFydGVkIG92ZXIuIEkgaGF2ZSBhIGhlYWx0aHkgcmVsYXRpb25zaGlwIHdpdGggbXkgZmFtaWx5LCBob3dldmVyLCBhbmQgbXkgYnJvdGhlciBhY3RlZCBhcyBteSAibGFuZGluZyBwYWQiIGluIGEgbmV3IHN0YXRlLgpJdCBoYXMgYmFjdGVyaWEgZmlnaHRpbmcgaW5ncmVkaWVudCB0byBkbyB0aGlzLiBWaW5lZ2FyIGNhbiBhbHNvIGJhbGFuY2UgdGhlIHNraW4ncyBwSCBsZXZlbC4gCkluIGRlbiBIYWxsIG9mIEZhbWUgZGVyIE5GTyB3ZXJkZW4gRmFocnJhZHNwb3J0bGVyIGF1Zmdlbm9tbWVuLCBkaWUgc2ljaCBnZXJuZSBNYWwgZWluZSBTcHJpdHplIHNldHplbiB1bSBFcmZvbGdlIGltIEZhaHJyYWRzcG9ydCB6dSBlcnppZWxlbi4KV2hlbiBpdCB3YXMgdG9vIGNvbGQgdG8gaGVhdCB0aGUgd2hvbGUgaG91c2UsIHdlIGFsbCBwaWxlIGludG8gdGhhdCBvbmUgYmVkcm9vbSBhbmQgc2xlZXAgaW4gc2xlZXBpbmcgYmFncyBvbiB0aGUgZmxvb3IuLiAKSWYgeW91IGhhdmUgcHVyY2hhc2VkIGEgYmV0dGVyIHByb2R1Y3QsIHlvdSBkZWZpbml0ZWx5IGhhdmUgdGhlIG9wdGlvbiB0byB1c2UgdGhhdCBwcm9kdWN0IGZvciBhIGxvbmcgdGltZS4gCkFvdGVhcm9hQ2FudWNrICAyIHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvClNoZSBhY2N1c2VkIG1lIGJ5IG5hbWUgb2YgYXNzYXVsdCBhbmQgc3dlYXJpbmcgYXQgaGVyIGFuZCBpbnN1bHRpbmcgaGVyLiAKTm8uIDEwIE1pY2hpZ2FuIFN0YXRlIENvbWUgRnJvbSBCZWhpbmQgVG8gQmVhdCBSdXRnZXJzIDcxIDYwWGF2aWVyIFRpbGxtYW4gZ290IG9mZiB0byBhIHNoYWt5IHN0YXJ0LCBmaWxsaW5nIGluIGZvciBOaWNrIFdhcmQgaW4gdGhlIHN0YXJ0aW5nIGxpbmV1cCBmb3IgTm8uIDEwIE1pY2hpZ2FuIFN0YXRlLgpMaWtlIGV2ZXJ5IHNraWxsLCBicmlkZ2Ugc2hvdWxkIGJlIGxlYXJuZWQgZnJvbSBhIHF1YWxpZmllZCB0ZWFjaGVyLiAKV2Fsa2VyIHJzdW0gaXMgaW1wcmVzc2l2ZSwgQmFjaGVsb3IgZGVncmVlLCBSaG9kZXMgU2Nob2xhciBhdCBPeGZvcmQsIE1lbWJlciBvZiBQYXJsaWFtZW50LCBhbGwgYmVmb3JlIHNoZSB0dXJuZWQgMzAuIEFuZCBhbGwgb2YgaXQgZm9sbG93aW5nIGFuIG9yaWdpbiBzdG9yeSBhYm91dCBoZXIgbW90aGVyIHN0cnVnZ2xlcyBhcyBhIHNpbmdsZSBwYXJlbnQgYW5kIGhlciBvd24gbGlmZWxvbmcgZHJlYW0gdG8gbWFrZSBzdXJlIGV2ZXJ5IGNoaWxkIGluIE5ldyBaZWFsYW5kIGhhZCB0aGUga2luZCBvZiBzYWZlLCBzZWN1cmUsIG9wcG9ydHVuaXR5IHJpY2ggY2hpbGRob29kIHNoZSBlbmpveWVkLiBJdCB3YXMgYSBzdG9yeSB0aGF0LCBieSB0aGUgdGltZSBzaGUgbGVmdCBQYXJsaWFtZW50IGluIDIwMTQsIHNoZSBoYWQgY29tZSB0byBkb3VidCBhcyBpbmF1dGhlbnRpYy4gCk1heWJlIFRIQVQgd2FzIGhpcyBhdHRlbXB0IGF0IG1vdmluZyBvbiBmcm9tIGJlaW5nIGFuZ3J5IGFuZCBsb29rIGhvdyBpdCB3YXMgcmVjZWl2ZWQuIFRoZW4gaGUgd2VudCBiYWNrIGFuZCBnb3QgYW5ncnkgYW5kIHJlbGVhc2VkIEthbWlrYXplIGFuZCBldmVyeW9uZSBsb3ZlcyBpdC4gSSdtIHN1cmUgaGUgZmVlbHMgbGlrZSBhbGwgcGVvcGxlIHdhbnQgaXMgYW5ncnkgYW5kIHR3aXN0ZWQgc2xpbSBzaGFkeSBhbmQgdGhleSB3b24ndCBhY2NlcHQgYW55dGhpbmcgZWxzZS4gCkluIHRoZSB2aWRlbywgdGhlc2UgcGVvcGxlIHNraW5uZWQgYSBkb2cgYWxpdmUsIHRoZW4ganVzdCB0aHJldyBpdCBvbnRvIGEgcGlsZSBvZiBvdGhlciBkZWFkKD8pIGRvZ3MvYW5pbWFscy4gCkhhdmluZyBsb3N0IGhpcyBmYXRoZXIgaW4gaGlzIGVhcmx5IDIwcyBhbmQgaGlzIG1vdGhlciBpbiBoaXMgbGF0ZSAyMHMsIGhlIGtub3dzIGFib3V0IGxvc3MuIApUbyBhZGQgdG8gdGhhdCwgU29KIGlzIG15IGxlYXN0IGZhdm91cml0ZS4gKEkgc2FpZCBpdCBiZWZvcmUsIGJ1dCBqdXN0IHRvIGFkZCBvbi4gSSBjYW4gcmVzcGVjdC91bmRlcnN0YW5kIGl0IGlmIGFueW9uZSBjb25zaWRlcnMgZWl0aGVyIG9mIHRoZW0gdG8gYmUgdGhlaXIgZmF2IGdhbWUgaW4gdGhlIHNlcmllcykuIApZb3VyZSBsb29raW5nIHRvIGdldCB2YWx1ZSBmcm9tIGEgdGVuIHdoZW4geW91IGJldC4gSWRlYWxseSB5b3Ugd291bGQgd2FudCB0byBjaGVjayB0aGUgZmxvcCBiZWNhdXNlIHlvdSBzbWFzaCBpdC4gCiJUaGVzZSBpbmRpY3RtZW50cyBhcmUgY3JpdGljYWwgdG8gZW5zdXJlIHRoZSBpbnRlZ3JpdHkgb2YgY2FzaW5vIGdhbWluZyBpbiBvdXIgc3RhdGUsIiBzYWlkIEthcmVuIEh1ZXksIERpcmVjdG9yIG9mIEVuZm9yY2VtZW50IGZvciB0aGUgT2hpbyBDYXNpbm8gQ29udHJvbCBDb21taXNzaW9uLiAKQXQgdGhpcyBwb2ludCBoZSBjb3VsZCB3cml0ZSB0aGUgcGhvbmUgYm9vayBhbmQgaXQgYmUgb24gdGhlIG55dCBiZXN0c2VsbGVyIGxpc3QuYWxkaWFuZHRlc2Nvc2hvcHBlciAgOCBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvYSBzbGFtIHBpZz8gSSBob25lc3RseSBoYWQgbmV2ZXIgaGVhcmQgb2YgdGhhdCB0ZXJtIGJlZm9yZS4gSXMgaXQgaW4gY29tbW9uIHVzZSBpbiBBbWVyaWNhIG9yIHNvbWV0aGluZz9TbyBub3Qgb25seSBkaWQgeW91ciBmaCBub3Qgc3RhbmQgdXAgZm9yIHlvdSwgYnV0IGhpcyBzdXBwb3NlZCAiYmVzdCBmcmllbmQiIGFuZCBmdXR1cmUgZ3Jvb21zbWVuIGFjdHVhbGx5IGNhbGxlZCB5b3UgdGhhdCBpbiBmcm9udCBvZiBoaW0/IEFuZCBJIHRob3VnaHQgbXkgZXggaGFkIHNvbWUgY3JlZXB5IGZyaWVuZHMuIkJlY2F1c2UgbXkgZmlhbmNlIHdhcyBpbmNyZWRpYmx5IGRlcHJlc3NlZCBmb3IgYSB3ZWVrIChJIG5ldmVyIHNlZW4gaGltIGxpa2UgdGhpcyBpbiBuZWFybHkgOCB5ZWFycyBvZiBkYXRpbmcpIEkgd2FudGVkIHRvIGZpeCB0aGlzLiJ0aGF0IGNvbmNlcm5pbmcgYW5kIGFjdHVhbGx5IHJlYWxseSBkaXN0dXJiaW5nLiAKVGVycnkgYmVnYW4gaGlzIGNhcmVlciBhdCBGaW5kbGF5IEluZHVzdHJpZXMgYWZ0ZXIgc2VydmluZyBpbiB0aGUgbWlsaXRhcnkgSnVuZSBvZiAxOTc2LiBEdXJpbmcgaGlzIDMzIHllYXJzIGF0IEZpbmRsYXkgSW5kdXN0cmllcyBoZSB3b3JrZWQgaGlzIHdheSB1cCB0aGUgcmFua3MgdG8gUHJlc2lkZW50IGFuZCBDRU8uIEhlIHJldGlyZWQgaW4gMjAwMyBhbmQgc3RhcnRlZCBoaXMgbmV4dCB2ZW50dXJlIGluIGxpZmUgb2YgZm91bmRpbmcgQ2VudHJleCBQbGFzdGljcywgTExDLiAKVGhlIGZhcnRoZXIgeW91IGdvLCB0aGUgbW9yZSB5b3Ugd2lsbCBzZWUuIApJIHllbGwgYmFjaywgIllPVSBDQU4gU0lORyBMSUtFIEhJTSBCVVQgSSBCRVQgWU9VIFNVQ0sgRElDSyBKVVNUIEZJTkUiLiBUaGUgb3RoZXIgdHJhZGllcyBsYXVnaGVkIHVwIGEgc3Rvcm0uIE5leHQgbW9ybmluZyBub3RoaW5nIGJ1dCB0aGUgYmlyZHMgY2hpcnBpbmcuIApJbiByZXNwb25zZSwgdGhlIGNvbGxlZ2UgZG91YmxlZCBkb3duIG9uIHJlY3J1aXRtZW50IG9mIGhpZ2ggdHVpdGlvbiBpbnRlcm5hdGlvbmFsIHN0dWRlbnRzLCBlc3BlY2lhbGx5IGZyb20gSW5kaWEsIGx1cmluZyB0aG91c2FuZHMgdG8gV2luZHNvciB3aGVyZSB0aGV5IG5vdyBtYWtlIHVwIG5lYXJseSBhIHRoaXJkIG9mIHRoZSBzdHVkZW50IGJvZHkuCkkgaGFkIGEgbWFqb3IgY29uY2VybiB3aGljaCBJIHZvaWNlZCB0byBvdXIgdGhlcmFwaXN0IHRoYXQgREggd2FzIGdvaW5nIHRvIHRyYW5zaXRpb24gZnJvbSBsaXZpbmcgaGlzIGxpZmUgdG8gbWFrZSBoaXMgbW90aGVyIGhhcHB5IHRvIGRvaW5nIHRoZSBzYW1lIHRvIG1lIGJlY2F1c2UgaGUgb25seSBrbm93cyBob3cgdG8gYmUgYSBzZXJ2YW50LiAKSW52ZXN0aW5nLCBkcml2aW5nLCBidXlpbmcgYSBob3VzZSBhbmQgbWVyZWx5IGNyb3NzaW5nIHRoZSBzdHJlZXQgYXJlIGFsbCBhY3RzIHRoYXQgaW52b2x2ZSBkaXNjZXJuaWJsZSByaXNrcyBhbmQgdW5jZXJ0YWluIHJld2FyZHMuIApTdXJlLCBCb25kJ3MgY2FyZHMgd29ya2VkIHRoaXMgb25lIHRpbWUsIGJ1dCB0aGF0IHdhcyBkdW1iIGx1Y2suIApBIFNPVyBpcyBtYWRlIHRvIG1ha2UgcGVvcGxlIHRoaW5rIGhhcmQgYWJvdXQgd2h5IHRoZXkgYXJlIGFwcGx5aW5nLiBJZiB5b3UgZG9uIGhhdmUgYSB2ZXN0ZWQgaW50ZXJlc3QgeW91IGFyZSBsZXNzIGxpa2VseSB0byBzdWNjZWVkLiBUaGUgZmluaXNoICUgb2YgbW9zdCBmcmVlIE1PT0NzIGFyZSBsaWtlIDEwJQpUaG91Z2h0IEkgd291bGQgZW5kIG15IHBlZGlhdHJpY3Mgcm90YXRpb24gd2l0aCBhIHNob3J0IGJhY2twYWNraW5nIHRyaXAgYmVmb3JlIGhlYWRpbmcgaG9tZSB0byBDaGFybGVzdG9uIGFuZCBteSBjYXIgZGVjaWRlZCB0byBzdWRkZW5seSBoYXZlIGEgc3Ryb2tlIGFzIEkgd2FzIHR1cm5pbmcgb2ZmIHRoZSBoaWdod2F5IG9udG8gYSBiYWNrIHJvYWQuIApJbiBudXJzaW5nIHNjaG9vbCB3ZSB0YWxrZWQgYWJvdXQgTVJTQSBhbmQgaG9zcGl0YWwgYWNxdWlyZWQgaW5mZWN0aW9ucy4gV2UgYWxzbyBsZWFybmVkIHRoYXQgU2NhbmRpbmF2aWFuIGFuZCBOb3J3ZWdpYW4gaG9zcGl0YWxzIGhhZCBsb3cgaW5mZWN0aW9uIHJhdGVzLiAKQW5kIEkgd2FzIGp1c3QgYW5ncnkuIApGV0lXLCBJIGhhZCBhIHBvc2l0aXZlIGV4cGVyaWVuY2UgcmVudGluZyBhIDFCUiBpbiBzaGFkeXNpZGUgZnJvbSBHcmV2ZS4gSSBkaWRuJ3QgbGlrZSBzb21lIG9mIHRoZSBsYW5ndWFnZSBpbiBteSBsZWFzZSB0aGF0IHdvdWxkIGF1dG9tYXRpY2FsbHkgZm9yZmVpdCBzb21lIG9mIG15IHJpZ2h0cyBpZiBoZSBzYWlkIEkgZGVmYXVsdGVkIG9uIHBheW1lbnQsIGFuZCBEYXZpZCB0aGUgbWFuYWdlciB0b29rIG91dCB0aGF0IHBhcmFncmFwaCB3aXRoIG5vIGlzc3Vlcy4gUGxhY2Ugd2FzIGNsZWFuIGFuZCBmaXhlcyB3ZXJlIGZldyBidXQgYWRkcmVzc2VkIHF1aWNrbHksIGFuZCBJIGdvdCBteSBkZXBvc2l0IGJhY2sgZnVsbCBpbiBhIHdlZWsgYWZ0ZXIgbW92aW5nIG91dCwgYnV0IFlNTVYuIFN0YXkgYXdheSBmcm9tIE1vemFydCBpZiB5b3UgZG9uJ3QgbGlrZSBzdHJpY3QgbGVhc2VzLgpJIGZlZWwgeW91IGJ1ZC4gTXkgc29uIGlzIGdvaW5nIHRocm91Z2ggYW4gZXh0ZW5kZWQgZnVzc3kgcGVyaW9kIHJpZ2h0IG5vdyBhcyB3ZWxsIGF0IDMuNSBtb250aHMuIEl0IG5vdCBldmVyIGdvaW5nIHRvIGJlIEVBU1kgdGhhdCBtdWNoIEkga25vdy4gQW5kIEkgaGFkIG1vbWVudHMgd2hlcmUgSSBsaWtlIHBsZWFzZSBnZXQgaGltIGF3YXkgZnJvbSBtZSwgSSBjYW4gdGFrZSBhbnkgbW9yZSBzaHJpZWtpbmcgZGlyZWN0bHkgaW4gbXkgZWFyISA+OiggSSBjYW4gaW1hZ2luZSBob3cgdG91Z2ggaXQgaXMgd2hlbiB5b3UgZ290IHRvIGJlIG9uIHlvdXIgb3duIHRvbyB3aGlsZSB5b3UgaGF2ZSBvcHBvc2l0ZSBzY2hlZHVsZXM7IGluIHRoZSBlYXJsaWVyIHdlZWtzIGFuZCBtb250aHMgc29tZXRpbWVzIG9ubHkgbW9tIG9yIHRoZSBib29iIHdpbGwgZG8uIFNUT1AuIEVBU1kuIENBTE0uIEkgaGF2ZW4gZ290dGVuIHRvIG91dHJpZ2h0IHllbGxpbmcgYnV0IEkgaG9wZSBpdCBuZXZlciBjb21lcyB0byB0aGF0LiBJIHRlbmQgdG8gYmUgYSBwcmV0dHkgcGF0aWVudCBwZXJzb24gYnV0IGJhYmllcyBjYW4gdGhyb3cgdGhhdCBhbGwgcmlnaHQgb3V0IHRoZSB3aW5kb3chClRoZSBldmVudCBpcyBiZWluZyBvcmdhbmlzZWQgYnkgdGhlIEFjb21iIGJhc2VkIEd1eSBGcmFuY2lzIEJvbmUgQ2FuY2VyIFJlc2VhcmNoIEZ1bmQuClRoaXMgc291cmNlIChkdXRjaCBzb3JyeSwgaSBjYW4gdHJhbnNsYXRlIGlmIGl0IGltcG9ydGFudCB0byB5b3UpIHNlZW1zIHRvIGluZGljYXRlIHRoYXQgYmlydGggcmF0ZXMgYW5kIG5vdCB0aGUgd29ybGQgd2FycyBvciBpbW1pZ3JhdGlvbiB3ZXJlIHRoZSBtYWluIHJlYXNvbi4gVGhlIE5ldGhlcmxhbmRzIGhhZCBiaXJ0aCByYXRlcyB0aGF0IHdlcmUgd2F5IGhpZ2hlciB0aGVuIGFueSBvdGhlciBjb3VudHJ5IGluIHRoZSA1MCA3MCBpbiB3ZXN0ZXJuIGV1cm9wZS4gVGhlIHJlYXNvbiB0aG9zZSBwZW9wbGUgYXJlIGV4cGVydHMgaXMgYmVjYXVzZSB0aGVpciBleHBlcnRpc2UgaXMgc29jaWFsbHkgcmVjb2duaXplZCAgIHRoZXkgc3R1ZGllZCBmb3IgaXQsIGhhdmUgYSBkZWdyZWUsIHdvcmtlZCBpbiB0aGUgZmllbGQgZm9yIHllYXJzIGFmdGVyIGJlY29taW5nIGEgcmVjb2duaXplZCBleHBlcnQsIGRvIHJlc2VhcmNoIGFjY29yZGluZyB0byB0aGUgcHJpbmNpcGxlcyBvZiBhbiBlc3RhYmxpc2hlZCBzY2llbnRpZmljIG1ldGhvZCwgYW5kIHNvIG9uLiBUaGVpciBwYXN0IHBlcnNvbmFsIGV4cGVyaWVuY2VzLCBzdXJ2aXZpbmcgY2FuY2VyIG9yIGVzY2FwaW5nIGEgbGlmZSBvZiBjcmltZSwgYXJlIG9mIG5vIHJlYWwgY29uc2VxdWVuY2UgaW4gdGhpcy4KU3RyYWlnaHQ6IEZpdmUgY2FyZHMgaW4gc2VxdWVuY2UsIGJ1dCBub3QgaW4gdGhlIHNhbWUgc3VpdC4gQSBzdHJhaWdodCBjYW5ub3Qgd3JhcCwgbWVhbmluZyBpdCBpcyBub3QgYSBzdHJhaWdodCBpZiB5b3UgaGF2ZSBhIFF1ZWVuLCBLaW5nLCBBY2UsIFR3bywgVGhyZWUuIFRoZSBoaWdoZXIgc3RyYWlnaHQgd2lucyBpZiB0d28gb3IgbW9yZSBwZW9wbGUgaGF2ZSBhIHN0cmFpZ2h0LiAKT256ZSByaXQgZ2luZyBkb29yIGVlbiBhZndpc3NlbGluZyB2YW4gbGFuZHNjaGFwcGVuLCBlZXJzdCB2cmlqIHZsYWssIGVuIG9wIGVlbiBnZWdldmVuIG1vbWVudCBsYW5ncyBlZW4gcml2aWVyZGVsdGEgbWV0IHZlZWwgdm9nZWxzLiBXZSBtYWFrdGVuIGVlbiBzdG9wIHZvb3IgZWVuIHBpY2tuaWNrIGVlbiBlaW5kamUgdmFuIGRlIGF1dG9zdHJhZGUsIG1ldCB6aWNodCBvcCBkZSB3aWpuZ2FhcmRlbi4gSW4gaGV0IGtsZWluZSBkb3JwamUgUGF0YSAobGV1a2UgbmFhbSkgc3RvcGVuIHdlIG9vayB2b29yIGVlbiBjYWNoZS4gCkZvciB0aGUgbW9yZSBjb21tb24gZm9ybSBvZiBIb2xkICdFbSwgd2hhdCB5b3Ugd2FudCBpcyB0byBrbm93IEhvdyB0byBQbGF5IFRleGFzIEhvbGQgJ0VtIFBva2VyLiBGZWVsIG1vcmUgbGlrZSBwbGF5aW5nIGFuIG9sZCBmYXZvcml0ZS4gCkkgcmVhbGx5IGRvbiB3YW50IHRvIGxvc2UgbXkgZGF1Z2h0ZXIgd2hlbiBzaGUgbGVhdmVzIHRob3VnaC4gCkRhbW4gSSdtIGdldHRpbmcgZGVwcmVzc2VkIGp1c3QgbG9va2luZyBhdCB5b3VyIHBpY3R1cmUgYW5kIHRhbGtpbmcgYWJvdXQgeW91Li4gCkkgbWVhbiB0aGUgd29ya2VycyB0YWtpbmcgdGhlIG1lYW5zIG9mIHByb2R1Y3Rpb24gZnJvbSB0aGVpciBib3NzZXMuIApTaGUgYWRkZWQgdGhhdCB0aGVzZSBzdXBlciBuYW5uaWVzIG9mdGVuIGNvbW1hbmQgJDEwIG1vcmUgYW4gaG91ciB0aGFuIHRoZSAkMjAgYW4gaG91ciBnb2luZyByYXRlLlJlY2VudGx5LCBNYWxvbmV5IFdpbmRlciBzZWN1cmVkIGEgbmFubnkgZm9yIGEgR3JlZW53aWNoLCBDb25uLiwgQ0VPIGFuZCBtb3RoZXIgb2YgZm91ciB3aG8gd2FudGVkIGhlciBjYXJlZ2l2ZXIgdG8gYmxvdyBvdXQgaGVyIGhhaXIgICBkYWlseSAgIGluIGFkZGl0aW9uIHRvIGNhcmluZyBmb3IgdGhlIHR3byBnaXJscycgbG9ja3MsIGRyaXZpbmcgdGhlbSB0byBzY2hvb2wgYW5kIHByZXBhcmluZyB0aHJlZSBtZWFscyBhIGRheS4gCkFzIGFuIGF0dG9ybmV5IEkgaGF2ZSB0byB0YWtlIHN1YnN0YW5jZSBhYnVzZSBwcmV2ZW50aW9uL2F3YXJlbmVzcyBjbGFzc2VzIGV2ZXJ5IDIgeWVhcnMgdG8gY29udGludWUgcHJhY3RpY2luZyBpbiBteSBqdXJpc2RpY3Rpb24uIEl0IHJlYWxseSBkb2Vzbid0IHNlZW0gdG8gYmUgaGVscGluZyB0aG91Z2guIFdlIGhhZCBzb21ldGhpbmcgY2FsbGVkIGJhcnJpc3RlcnMnIGJhbGwgYXQgbXkgc2Nob29sIChiYXNpY2FsbHkgbGF3IHByb20pIGFuZCBpdCB3YXMgdGhlIGNyYXppZXN0IGRpc3BsYXkgb2YgZHJ1bmtlbm5lc3MgYW5kIHBvb3IgZGVjaXNpb24gbWFraW5nIEkgaGF2ZSBldmVyIHNlZW4uIEkgd29uZGVyIGlmIGxhdyBzY2hvb2wgaXMgd2hlcmUgaXQgYWxsIHN0YXJ0cyBmb3Igc29tZSBwZW9wbGUuIE9uZSBvZiBteSBmcmllbmRzIGZyb20gc2Nob29sIGVuZGVkIHVwIGluIEFBIGJlZm9yZSBzaGUgZXZlbiB0b29rIHRoZSBiYXIgZXhhbS4KUGx1ZyBpbnRvIHRoZSBwcm9ncmVzc2l2ZSBzbG90cy4gSWYgeW91IHNlZSBhIHdob2xlIGJ1bmNoIG9mIHBlb3BsZSBhdCBhIHJvdyBvZiBtYWNoaW5lcyB3aXRoIGEgZ2lhbnQgZGlzcGxheSBib2FyZCBhYm92ZSB0aGVtIHRoYXQncyB0dXJuaW5nIGludG8gcXVpdGUgdGhlIHNwZWN0YWNsZSwgdGhhdCdzIGEgY29tbXVuaXR5IHByb2dyZXNzaXZlIGdhbWUuIFRoZXNlIHR5cGVzIG9mIHNsb3RzIGhhdmUgYSBqYWNrcG90IHRvdGFsIHRoYXQgZ3Jvd3MgZWFjaCB0aW1lIHRoZSBtYWNoaW5lcyBhcmUgcGxheWVkLiBBbGwgdGhlaXIgbWFjaGluZXMgYXJlIGxpbmtlZCB1cCB0byBlYWNoIG90aGVyJ3MgYW5kIHRoZSBmaXJzdCBwZXJzb24gdG8gaGl0IHRoZSBqYWNrcG90IGdldHMgYSBwZXJjZW50YWdlIG9mIGFsbCB0aGUgcGxheSwgbm90IGp1c3QgdGhlaXIgb3duLlsxXQpUSEUgQ1VTVE9NRVIgQ09VUlRFU1kgTUFTU0FHRSBQUk9HUkFNVGhpcyB0aGlyZCBwcm9ncmFtIGlzIGEgcHVibGljIHJlbGF0aW9ucyBjdXN0b21lciBzZXJ2aWNlIGV2ZW50LiBXZSB3b3VsZCBvZmZlciBmaXZlIG1pbnV0ZSBvbiBzaXRlIG1hc3NhZ2VzIHRvIGF0dGVuZGVlcyBhcyBhIGNvdXJ0ZXN5IHNlcnZpY2UuVGhpcyBwcm9ncmFtIGlzIHNwb25zb3JlZCBieSBhbiBleGhpYml0b3Igb3Igb25lIG9mIHRoZSBwcmltYXJ5IHNob3cgc3BvbnNvcnMuIE91ciBvcmdhbml6YXRpb24gcHJlc2VudHMgdGhlICJTdHJlc3MgTWFuYWdlbWVudCBhbmQgTWFzc2FnZSIgYm9vdGggYXMgYSByZXByZXNlbnRhdGl2ZSBvZiB0aGUgc3BvbnNvci5PdXIgc3RhZmYgd2VhcnMgdGhlIHNwb25zb3I/cyBzaWduYXR1cmUgY2xvdGhpbmcgaW5jbHVkaW5nIHRlZSBzaGlydHMsIGhhdHMgb3IgYmFzZWJhbGwgY2Fwcy4gCkFuIE92ZXJ2aWV3IGFuZCBFYXN5IEd1aWRlIHRvIGEgQ3JhcHMgVG91cm5hbWVudCBTdHJhdGVneSBBcmUgeW91IGludGVyZXN0ZWQgaW4gdGFraW5nIHRoZSBnYW1lIG9mIGNyYXBzIHRvIHRoZSBuZXh0IGxldmVsPyBEbyBub3Qgd29ycnkuIFdlIGFyZSBoZXJlIHRvIGhlbHAgeW91IGdldCBhIHN0YXJ0IGluIHBsYXlpbmcgdGhlIGdhbWUgb2YgY3JhcHMuIApJdCBpcyB3ZWxsIGRvY3VtZW50ZWQsIGZvciBleGFtcGxlLCB0aGF0IGRpZXRhcnkgbWFnbmVzaXVtIGRlZmljaWVuY3kgaW4gY29uanVuY3Rpb24gd2l0aCBzdHJlc3MgY2FuIGxlYWQgdG8gbmV1cm9wYXRob2xvZ2llcyBhbmQgc3ltcHRvbXMgb2YgcHN5Y2hpYXRyaWMgZGlzb3JkZXJzLiAKVGhpbmsgdGhleSBuZWVkIGNhcGl0YWwgdG8gZ2V0IHN0YXJ0ZWQuIEl0IHRoZSBiaWdnZXN0IGZhbGxhY3kgaW4gdGhlIGVudHJlcHJlbmV1cmlhbCBzY2VuZSByaWdodCBub3cuIFdlIGRvbiBoZWFyIGFzIG1hbnkgc3RvcmllcyBhYm91dCB3aGF0IEkgY2FsbCB0aGUgc3RhcnR1cC4gSSB0aGluayBub3QgYmVpbmcgYWJsZSB0byByYWlzZSBjYXBpdGFsIGlzIGp1c3QgYW4gZXhjdXNlLiBCdXQganVzdCBhcyBtdWNoLCBpdCBzcGVuZHMgYSBsb3Qgb2YgdGltZSBvbiB0aGUgZGlsZW1tYXMsIHRyYWRlIG9mZnMgYW5kIHN0cnVnZ2xlcyBlbnRyZXByZW5ldXJzIGZhY2UuClNpZSBoYXQgZGFzIFNwaWVsIGphIG5pY2h0IG1pdGdlc3BpZWx0LCBzaWUgaGF0IHZvbiB2b3JuaGVyZWluIGlocmUgQWJsZWhudW5nIGRldXRsaWNoIGdlbWFjaHQuIFVuZCBudXIgbWFsIHNvIGFscyBIaW53ZWlzOiBKZXR6dCBibG9ja2llcmUgaWNoIERpY2gsIGJoISBpc3QgbmljaHQgZ2VyYWRlIGRhcyBOaXZlYXUsIHZvbiB3ZWxjaGVtIGljaCBhdWYgaXJnZW5kZWluICJLbm5lbiIgaW4gVmVyYmluZHVuZyBtaXQgVHdpdHRlciBzY2hsaWVlbiB3cmRlLgpTaGUgd2FudGVkIHRoZSBkb2xsYXIgYW1vdW50IGZvciB0aGUgZnJlZSBpdGVtIHJlZnVuZGVkLiBJIHRvbGQgaGVyIG5vIHRoYXQgdGhlIGJlc3QgaSB3b3VsZCBkbyBpcyByZXBsYWNlIGl0IHdpdGggbmV3IGNoaWNrZW4uIApUYWtlIEhvbWUgUG9pbnQ6ICAiVGhlICdsYXknIHJlY29tbWVuZGF0aW9uIHRvIGNvbnN1bWUgMSBnIHByb3RlaW4vbGIgb2YgYm9keXdlaWdodC9kYXkgKDIuMiBnL2tnL2RheSkgd2hpbGUgcmVzaXN0YW5jZSB0cmFpbmluZyBoYXMgcGVydmFkZWQgZm9yIHllYXJzLiBOdXRyaXRpb24gcHJvZmVzc2lvbmFscyBvZnRlbiBkZWVtIHRoaXMgbGF5IHJlY29tbWVuZGF0aW9uIGV4Y2Vzc2l2ZSBhbmQgbm90IHN1cHBvcnRlZCBieSByZXNlYXJjaC4gSG93ZXZlciwgYXMgdGhpcyByZXZpZXcgc2hvd3MsIHRoaXMgImxheSIgcmVjb21tZW5kYXRpb24gYWxpZ25zIHdlbGwgd2l0aCByZXNlYXJjaCB0aGF0IGFzc2Vzc2VzIGFwcGxpZWQgb3V0Y29tZSBtZWFzdXJlcyBvZiBzdHJlbmd0aCBhbmQgYm9keSBjb21wb3NpdGlvbiIuIApUaGlzIGlzIGJhc2VkIG9uIGdldHRpbmcgYSByb3lhbCBmbHVzaCBhIGNlcnRhaW4gcGVyY2VudGFnZSBvZiBoYW5kcywgYSBmdWxsIGhvdXNlIGFub3RoZXIgcGVyY2VudGFnZSwgYW5kIHNvIG9uLiAKVGhlcmUgYXJlIGh1bmRyZWRzIG9mIHN3aW1taW5nIHBvb2xzIGluIFRleGFzIHRoYXQgYXJlIG93bmVkIGJ5IHByaXZhdGUgb3duZXJzIG9yIHRoZXkgbWF5IGJlIHBhcnQgb2YgY2VydGFpbiBoZWFsdGggY2x1YnMgd2hpY2ggaW5jbHVkZSBzd2ltbWluZyBhcyBhbiBpbnRlZ3JhbCBwYXJ0IG9mIHRoZWlyIGhlYWx0aCByb3V0aW5lcy4gTm93IGlmIHkuCk9yIGEgUGlsbGFyIG9mIGl0LCBtaWdodCBzYXkgcG9vciBMb3Qgd2lmZS4gCkN1cmlvdXMgaWYgYW55b25lIGhhcyBhbnkgb3RoZXIgdGhvdWdodHMuLiAKWU9VUi4gCiJHaXZlIHRoZW0gbG90cyBvZiBjaG9pY2VzLiAKQmFkIGhlcmUgbWVhbnMgbm90IGEgYmFkIGNoYW5jZSBvZiB3aW5uaW5nLCBidXQgYSBnb29kIGNoYW5jZSBvZiBwbGF5aW5nIGl0IHdyb25nIGFuZCBsb3NpbmcgbW9uZXkuIApMZSAxNyBtYXJzIDIwMDgsIGxhIGJhbnF1ZSBkJ2ludmVzdGlzc2VtZW50IEJlYXIgU3Rlcm5zIGVzdCByYWNoZXRlIHBhciBKUE1vcmdhbiBwb3VyIDIzNiBtaWxsaW9ucyBkZSBkb2xsYXJzLCBhcHJzIHF1ZSBsYSBGZWQgYWl0IG9jdHJveSBwbHVzIGRlIDI5IG1pbGxpYXJkcyBkZSBkb2xsYXJzIGRlIHBydCBwb3VyIHNhdXZlciBsJ3RhYmxpc3NlbWVudCBkZSBsYSBmYWlsbGl0ZS4KTWF5YmUgQUssIEtKcywgS1RzLCBLOXMsIGJ1dCBmcm9tIG15IGV4cGVyaWVuY2UgdGhlIGdlbmVyYWwgcG9wdWxhdGlvbiB1bmRlcmJsdWZmcyB0aGVzZSBzcG90cyBhbiBleHRyZW1lIGFtb3VudC4gSSBub3QgdG9vIHN1cmUgYWJvdXQgc3RhY2sgc2l6ZXMgaGVyZSwgYnV0IGl0IGRpZCBsb29rIGxpa2UgaXQgd2FzIGEgZ2lhbnQgY2hlY2svamFtLCB3aGljaCB0aGVvcmV0aWNhbGx5IGhlIHNob3VsZCBiZSBibHVmZmluZyBhbGwgb2YgdGhvc2UgY29tYm9zIHdoaWNoIEkgZG9uIHRoaW5rIGhlIGV2ZXIgaXMuCkl0IGlzIGEgZ29vZCBzdGFydCBmb3IgdGhvc2Ugd2hvIGp1c3QgdGhpbmsgZ2lybHMgYXJlIGJ1c2luZXNzIHBhcnRpY2xlcy4gCkRyLiBKYW5kYSB3b3JrZWQgd2l0aCB0aGUgSW50ZXJuYXRpb25hbCBGZWRlcmF0aW9uIG9mIE1hbnVhbCBNZWRpY2luZSBhbmQgdGhlIEludGVybmF0aW9uYWwgRmVkZXJhdGlvbiBvZiBNYW51YWwgVGhlcmFwaXN0cy4gSGUgd2FzIGFibGUgdG8gdHJhbnNtaXQgaGlzIGlkZWFzIGVxdWFsbHkgd2VsbCB0byBzY2llbnRpc3RzLCBtZWRpY2FsIHBoeXNpY2lhbnMsIHBoeXNpY2FsIHRoZXJhcGlzdHMgYW5kIGNoaXJvcHJhY3RvcnMuIEhlIGFsc28gc3Bva2UgbXVsdGlwbGUgbGFuZ3VhZ2VzLgpBdXRvYmFobiB2ZXJoaW5kZXJ0CkVtcGxveWVlIGluanVyZWQgd2l0aCBtYWNoZXRlIGluIGNsdWIgcm9iYmVyeQpDZXMgZGVybmlyZXMgbmUgc29udCBkb25jIHBhcyBpbnRlcmRpdGVzICAgY29uZGl0aW9uIGRlIHByb3NjcmlyZSBsZXMgZmlucyBpZG9sdHJlcyAgKDgpLiAKSXQgd2FzIGRpc2FwcG9pbnRpbmcgd2hlbiBpdCBoYXBwZW5lZC4gCk5pY2h0cyBpc3QgbWVociBhbHMgVW50ZXJoYWx0dW5nIHNlaGVuIE1hbm4gd2luemlnZW4gRmFocnJhZCBmYWhyZW4uIApSYW5kb21pc2F0aW9uIGluIGJvdGggcGhhc2VzIHdhcyBpbmRpdmlkdWFsbHkgZG9uZSBieSByYW5kb20gc2FtcGxpbmcuIApPayBtYXliZSBpIGp1c3QgbWlzc2luZyBzb21ldGhpbmcgaGVyZSBidXQgZXZlcnl0aW1lIEkgc2VlIHNvbWVvbmUgc2F5IG1vcmUgYW5kIGJldHRlciByZXdhcmRzLCBpdCBzb3VuZHMgbGlrZSB0aGV5IGp1c3QgZ2l2aW5nIG1lIG1vcmUgb2YgbXkgbW9uZXkgYmFjay4gQW5kIGFueSB2b2x1bWUgYmFzZWQgcmV3YXJkcyBzeXN0ZW0gaGFzIGEgY29uc2VxdWVuY2Ugb2YgcGVuYWxpemluZyBwbGF5ZXJzIHRoYXQgZG9uIHBsYXkgYXMgbXVjaCBha2EgcmVjcyBha2EgdGhlIHBlb3BsZSB3ZSBzaG91bGQgYmUgcmV3YXJkaW5nIG5vdCBwZW5hbGl6aW5nLiBTbyB3aHkgd291bGRuIHRoZXkganVzdCBoYXZlIGV2ZW4gbG93ZXIgKGFscmVhZHkgbG93ZXIpIHJha2U/IEJlY2F1c2UgaHVtYW5zIHJlc3BvbmQgd2VsbCB0byBpbmNlbnRpdmVzIGFuZCBpdHMgYSB3YXkgdG8gZHJpdmUgbW9yZSB0cmFmZmljLiAKQU5JTUFMUyBLSUxMIFRIRSBXRUFLIFNPIFRIRVkgV09OIEdFVCBIVU5URUQgRE9XTiBBTkQgS0lMTEVEIEJZIFRIRSBFTkVNWS4gCkxhZHkgR2FnYSBoYXMgd3JpdHRlbiBtYW55IHNvbmdzLiBBbGwgaGVyIHNvbmdzIGhhdmUgYmVlbiB3cml0dGVuYnkgaGVyIHdpdGggbGl0dGxlIGhlbHAuIApXZWVibGluZ3RvbiB1ClRoZSB0ZW5zaW9uIGlzIGNvbnN0YW50Li4gCk9uZSBpbXBvcnRhbnQgY29uc2lkZXJhdGlvbiBpcyB0aGUgcG9zc2liaWxpdHkgdGhhdCB5b3UgbWlnaHQgbm90IGJlIGFibGUgdG8gZmluZCBvciBhZmZvcmQgcHJvZmVzc2lvbmFsIHN0YWZmIG1lbWJlcnMgY2VydGlmaWVkIGluIHRoZSB0cmVhdG1lbnRzIHlvdSB3b3VsZCBsaWtlIHRvIG9mZmVyLiAKUm9iMTAxICAyIHBvaW50cyAgc3VibWl0dGVkIDE5IGRheXMgYWdvCkR1cmluZyB0aGUgZmlyc3QgR3VsZiBXYXIsIGF0IGEgcHJvdGVzdCBpbiBOZXcgWW9yayBDaXR5IHdoZXJlIEkgbGl2ZWQgYXQgdGhlIHRpbWUsIEkgd2FzIHNvIHV0dGVybHkgYW5kIGNvbXBsZXRlbHkgZGVwcmVzc2VkIGJ5IHRoZSBhbnRpIHdhciBtb3ZlbWVudCwgc3VjaCBhcyB3ZSB3ZXJlLCB0aGF0IEkgc3RhcnRlZCBjaGFudGluZyAiSSB0aXJlZCwgSSBjcmFua3ksIEkgZG9uIGxpa2UgdGhlIGdvdmVybm1lbnQuIiB0aGUgY2hhbnQgc3RydWNrIGEgY2hvcmQgd2l0aCB0aGUgY3Jvd2QuIFdlIHdlcmUgYWxsIGNoYW50aW5nIGl0LiAKT3RoZXIgbmFtZXMgZm9yIGxpZ2h0IHZlcmIgaW5jbHVkZSBkZWxleGljYWwgdmVyYiB2ZWN0b3IgdmVyYiwgZXhwbGljYXRvciB2ZXJiLCB0aGluIHZlcmIsIGVtcHR5IHZlcmIgb3Igc2VtYW50aWNhbGx5IHdlYWsgdmVyYiAoYSBzZW1hbnRpY2FsbHkgd2VhayB2ZXJiIGlzIG5vdCB0byBiZSBjb25mdXNlZCB3aXRoIGEgd2VhayB2ZXJiIG9mIHRoZSBHZXJtYW5pYyB3ZWFrIGluZmxlY3Rpb24sIGhvd2V2ZXIpLiBXaGlsZSBsaWdodCB2ZXJicyBhcmUgc2ltaWxhciB0byBhdXhpbGlhcnkgdmVyYnMgcmVnYXJkaW5nIHRoZWlyIG1lYW5pbmcgY29udHJpYnV0aW9uIHRvIHRoZSBjbGF1c2VzIGluIHdoaWNoIHRoZXkgYXBwZWFyLCBsaWdodCB2ZXJicyBmYWlsIHRoZSBkaWFnbm9zdGljcyB0aGF0IGlkZW50aWZ5IGF1eGlsaWFyeSB2ZXJicyBhbmQgYXJlIHRoZXJlZm9yZSBkaXN0aW5jdCBmcm9tIGF1eGlsaWFyaWVzLiAKQXMgYW4gZXhlcmNpc2UgbmV3YmllIHRoYXQgbWVhbnMgam9pbmluZyB1cCB3aXRoIGhlciBzaXN0ZXJzIGZvciBhIGhpZ2ggaW50ZW5zaXR5IGludGVydmFsIHRyYWluaW5nIHNlc3Npb24gb25lIHRvIHR3byB0aW1lcyBwZXIgd2Vlay4gZm9yIHRoZSBzdW1tZXIsIHRoZXknbGwgb2Z0ZW4gdGVhbSB1cCB3aXRoIEtpbSBhbmQgZW5saXN0IGEgbmFubnkgdG8gd2F0Y2ggb3ZlciBUcnVlLCBDaGljYWdvIGFuZCBLeWxpZSdzIDYgbW9udGggb2xkIGRhdWdodGVyIFN0b3JtaSAoRGFkIGlzIGhlciBib3lmcmllbmQgVHJhdmlzIFNjb3R0KSB3aGlsZSB0aGV5IGx1bmdlIGl0IG91dCBmb3IgYW4gaG91ciBvciBzby4gIlNoZSBsb3ZlcyB3b3JraW5nIG91dCB3aXRoIGhlciBzaXN0ZXJzIGFuZCB0aGV5IG1vdGl2YXRlIGhlciBhIGxvdCwiIHNheXMgdGhlIHNvdXJjZS4gIkl0J3MgYSByZWFsbHkgZnVuIGZhbWlseSBldmVudCBpbiB0aGUgbW9ybmluZ3MuIgpFeHBlcnQgcG9rZXIgcGxheWVycyBhbmQvb3IgcG9rZXIgY2hpcCB0cmlja3MgbWFzdGVycyBoYXZlIHRoZWlyIG93biBwcmVmZXJlbmNlcyBvZiBjaGlwcy4gCk9oLCBOZWluLCBkYWNodGUgSGVsZW4sIGFiZXIgc2llIHdvbGx0ZSBqZXR6dCBkYXJiZXIgaGlud2VnIGtvbW1lbiB1bmQgYW50d29ydGV0ZSByYXNjaDogIkRyZWkgTWFsIi4gCkJ1dCBJIGNhbiBzZWUgaG93IG9uZSBjb3VsZCByZWFzb25hYmx5IGFzc3VtZSBzby4gCllvdSBzdGlsbCBoYXZlIHRoZSBzYW1lIG51bWJlciBvZiBvdXRzLCAxNCwgYnV0IG9uZSBsZXNzIHVuc2VlbiBjYXJkLCA0Ni4gTm90aWNlIHRoYXQgeW91ciBwb3Qgb2RkcyBhcmUgYWxtb3N0IHRoZSBzYW1lLCByb3VnaGx5IDIuMyB0byAxLiAKSSdkIHN1Z2dlc3QgbG90cyBvZiB0cmVhdHMgdG8gY291bnRlciBjb25kaXRpb24gaGVyIHRvIG5vdCBwYW5pYyB3aGVuIHNoZSBzZWVzIGRvZ3MsIGFuZCBtYXliZSBhIGdlbnRsZSBsZWFkZXIuIApXaGF0IGNhbWUgYXMgbm8gc3VycHJpc2UgdG8gdGhlIHBvbGljZSB3YXMgdGhhdCB0aGUgdHdvIG1lbiB3ZXJlIGZyb20gRWFzdGVybiBFdXJvcGUuIFRoZXNlIGRheXMgbWFueSBvZiB0aGVpciBzdXNwZWN0cyBhcmUuIFRob3VnaCB0aGlzIHdhcyBqdXN0IG9uZSBzbWFsbCBpbmNpZGVudCwgaXQgd2FzIGFjdHVhbGx5IHBhcnQgb2YgYSBtdWNoIHdpZGVyIHRyZW5kIG9mIG9yZ2FuaXNlZCBjcmltZSBlbWFuYXRpbmcgZnJvbSBnYW5ncyBpbiBSb21hbmlhLCBHZW9yZ2lhLCBVa3JhaW5lLCBSdXNzaWEgYW5kIGVsc2V3aGVyZSwgd2hpY2ggb3ZlciB0aGUgbGFzdCBkZWNhZGUgaGFzIGJlZW4gZ2l2aW5nIGxhdyBlbmZvcmNlbWVudCBhbiBpbmNyZWFzaW5nbHkgc2VyaW91cyBoZWFkYWNoZS4KSGUgd2FzIGFuZCBpcyBhIGNvbXBsZXRlIGplcmsuIEhlIHByZXR0eSBtdWNoIG5ldmVyIHNlZXMgbXkgc29uLiAKV2UgaGF2ZSA5OSBzbG90IG1hY2hpbmVzLCAyIEJsYWNramFjayB0YWJsZXMsIDEgcG9rZXIgdGFibGUgYW5kIDEgMSBhcm1lZCBiYW5kaXQgc2xvdCBtYWNoaW5lIGF2YWlsYWJsZSBmb3IgeW91ciBmdW4uRXN0YWJsaXNoZWQgaW4gMTk3OSB0aGUgU2VhcmNobGlnaHQgTnVnZ2V0IENhc2lubyB3YXMgYSBkcmVhbSBjb21lIHRydWUgZm9yIFdhcnJlbiBhbmQgVmVybGllIERvaW5nLiAKU28sIGlmIHZpZGVvIGdhbWVzIGFyZW4ndCB5b3VyIHRoaW5nLCBvciBpZiB5b3UncmUgYSBHYW1lciBsb29raW5nIHRvIGJyYW5jaCBvdXQgYSBiaXQsIHlvdSBtaWdodCB0cnkgc29tZSBvZiB0aGVzZSBhcmVhcyBvZiBsZXNzIG1haW5zdHJlYW0gR2FtaW5nLiBUbyBnZXQgc3RhcnRlZCwgeW91IGNhbiB0cnkgd2lraXBlZGlhIG9yIEdvb2dsZSBzZWFyY2hpbmcsIG9yIGdvIHRvIHlvdXIgbG9jYWwgY29taWMgb3IgZ2FtZSBzdG9yZS4gCkV2ZXJ5dGhpbmcgaXMgZGVhZCB3b3JsZCBpcyBub3QgZGVzaWduZWQgdG8gYmUgaW50ZWxsaWdpYmxlIGFuZCBpcyBub3Qgb3JkaW5hcmlseSBpbmZ1c2VkIHdpdGggbWVhbmluZy4iIFRoZSB3b3JsZCBvZiB0ZXJuaW9uIG1heSBub3QgYmUgaW5mdXNlZCB3aXRoIG1lYW5pbmcgYnV0IGl0IGlzIGluZnVzZWQgd2l0aCBhdHRpdHVkZSBhbmQgbW9vZCwgcHJvamVjdGVkIGJ5IHRoZSBvYnNlcnZlci4gCldoaWxlIHRoZSB3aW5kIGl0c2VsZiBrZXB0IGJlICB0d2VlbiB0aGlydHkgYW5kIGZvcnR5IGZpdmUgbWlsZXMgbWlsZXMgYW4gaG91ci4gQWNjb3JkaW5nIHRvIG9sZCB0aW1lcnMgdGhpcyBpcyB0aGUgaGFyZGVzdCB0aGUgd2luZCBoYXMgYmxvd24gaGVyZSBpbiBvdmVyIHRoaXJ0eSB5ZWFycy4gVGhlIGdyZWF0ZXN0IGFtb3VudCBvZiBkYW0gIGFnZSB3YXMgb24gQmlwcmtpIElzbGFuZCB3aGVyZSB0aGUgNDAgZm9vdCAiRHVyaSIgb2YgS2V0Y2hpa2FuIHdhcyBmbHVuZyB1cG9uIHRoZSByb3VrcyBhbmQgdGhlIGJvdHRvbSwgb2YgdGhlIGJvYXQgZW50aXJlbHkgY3J1c2ggIGVkLiAKWW91IGNhbiBvbmx5IGRvIGEgZGF5IHdvcnRoIG9mIHdvcmsgaW4gYSBkYXkuIE5ldmVydGhlbGVzcywgdGhlIGZlZWxpbmcgb2Ygc2F0aXNmYWN0aW9uIGF0IHRoZSBlbmQgb2YgdGhlIGRheSwga25vd2luZyB0aGF0IHlvdSBtb3ZlZCBpbiBhIHBvc2l0aXZlIGRpcmVjdGlvbiBpcyBpbmNyZWRpYmx5IGNvbWZvcnRpbmcsIGFuZCBpdCBib2xzdGVycyB5b3VyIHNlbnNlIG9mIGFnZW5jeSAoYWJpbGl0eSB0byBpbXByb3ZlIHlvdXIgb3duIGxpZmUpLi4gClBva2VyIG5lZWRzIGlzIG5ldyBzdG9yeXRlbGxpbmcsIGhlIHNheXMuIApPZiB0aGVzZSBpbmRlcGVuZGVudCBsZWFndWVzIGFyZSBpbXByb3ZpbmcgdGhlIHF1YWxpdHkgYW5kIGJyZWFkdGggb2Ygc3BvcnQgaW4gSW5kaWEsIGFuZCBvZmZlcmluZyB5b3VuZyBob3BlZnVscyBhIHBsYXRmb3JtIHRvIHNob3djYXNlIHRoZWlyIHRhbGVudCBiZXlvbmQgdGhlIG5hdGlvbmFsIGZpeGF0aW9uIG9uIGNyaWNrZXQuLiAKQ2VzIGRldXggc29ydGVzIGQnYWN0ZXMgZG9ubmVudCBuYWlzc2FuY2UgcmVzcGVjdGl2ZW1lbnQgIGRlcyBzaXR1YXRpb25zIGp1cmlkaXF1ZXMgc3ViamVjdGl2ZXMgZXQgb2JqZWN0aXZlcy4gCkNoYW5nZSBZb3VyIFNjZW5lcnlTbmF0Y2hlZCBtb21lbnRzIG9mIHBlYWNlIGFuZCBxdWlldCwgbG9uZ2VyIG1vbWVudHMgb2Ygc29saXR1ZGUgYW5kIHdlZWtzIG9mIHBvc2l0aXZlIGluYWN0aW9uIGFsbCBoYXZlIHRoZWlyIG1lcml0cy4gVGhpcyBzb3J0IG9mIGNvbXBsZXRlIHJlbGF4YXRpb24gaXMgcHJvYmFibHkgdGhlIGJlc3QgYXBwcm9hY2ggdG8gc3RyZXNzLCBidXQgaXQgaXNuJ3QgYWx3YXlzIHBvc3NpYmxlLCBlc3BlY2lhbGx5IGF0IHdvcmsuIApZb3UgbWVudGlvbmVkIHRoYXQgeW91IGEgcHJldHR5IGZydWdhbCBwZXJzb24uIApEJ2Fib3JkIGF2ZWMgbGEgIHF1aSB2YSBwcmVuZHJlIGZvcm1lLCBldCBxdWkgaWxsdW1pbmVyYSBkc29ybWFpcyBub3Mgc29pcmVzIGdyY2UgIHVuZSBtaXNlIGVuIHZhbGV1ciBkdSB2aWFkdWMgcGFyIGxhIGx1bWlyZS4gCldlbGwsIGluIHRoZSBmaXJzdCBnYW1lLCB0aGUgdHdpc3RzIGJsZW5kZWQgZXh0cmVtZWx5IHdlbGwgaW50byBhIHdlbGwgZXN0YWJsaXNoZWQgcmV2ZW5nZSBwbG90IHRoYXQgZ29lcyBvdXQgb2YgaGFuZCBpbnRvIGEgc3Rvcnkgd2hlcmUgeW91IGtpbGwgR29kLiBUaGVyZSBhcmUgYWxzbyBtYW55IHBlcnNvbmFsIHN0YWtlcyBmb3IgbW9zdCBvZiB0aGUgNyBtYWluIGNoYXJhY3RlcnMgdGhyb3VnaG91dCB0aGUgZ2FtZSB0byBrZWVwIHlvdSBpbnZlc3RlZCBpbiBib3RoIHRoZSBzdG9yeSBhbmQgdGhlIGNoYXJhY3RlcnMuLiAKQnV0IG5vdyB0aGUgcGxvdCB0aGlja2Vucy4gCk90aGVycyB2cyBTdGF0ZSBvZiBHdWphcmF0IE90aGVycyBjYXNlLCB0aGUgR3VqYXJhdEhpZ2ggQ291cnQgcmVmdXNlZCB0byByZWNvZ25pemUgcG9rZXIgYXMgYSBnYW1lIG9mIHNraWxsIGluRGVjZW1iZXIgMjAxNy4gCkxhIHZpZSBzZWNydGUgZGUgTW9udG1hcnRyZSBkZSAgcXVpIHZpZW50IGRlIHBhcmF0cmUgYXV4IGRpdGlvbnMgT21uaWJ1cyBlbiBlc3QgbCdpbGx1c3RyYXRpb24gcGFyZmFpdGUuIEQndW4gZm9ybWF0IHBldSBvcmRpbmFpcmUgKDE5Y20geCAyNWNtKSwgY2UgZ3JvcyBsaXZyZSBkZSAyNDAgcGFnZXMgc2UgdG91Y2hlIGV0IHNlIHJlZ2FyZGUgYXZlYyB1biByZWwgcGxhaXNpci4gCkFmdGVyIHJlYWRpbmcgdGhlIHJldmlld3MsIHRoZSBwbGF5ZXJzIGNhbiB0aGVuIGRlY2lkZSB3aGljaCBzaXRlIG1lZXRzIHRoZWlyIG5lZWRzLi4gCkNvbnRyYWN0IGJhc2lzLCBubyBiZW5lZml0cy4gQ29tcGVuc2F0aW9uIGF0IGNvbXBldGl0aXZlIERheSAgb3IgSG91cmx5ICByYXRlLgpDb3Jwb3JhdCAgNCBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvClRoZSBTaGF3cyBzdHJ1Z2dsZSBldmVyeWRheSB3aXRoIHRoZSAnd2hhdCBpZnMnLCBidXQgdGhlIHRob3VnaHQgaGlzIHN0b3J5IGNvdWxkIGluc3RpbGwgdmlnaWxhbmNlIGluIHRoZSBjb21tdW5pdHkgcHJvdmlkZXMgc29tZSBjb21mb3J0LiAiSWYgd2UgY2FuIHNhdmUgYSBsaWZlIGFuZCBzYXZlIGEgZmFtaWx5IGZyb20gbG9zaW5nIGEgbG92ZWQgb25lIHRocm91Z2ggYW4gYXN0aG1hIGF0dGFjaywgaXQncyB3b3J0aCBpdCwiIFN1ZSBzYWlkLiAKUG9saXRpY2FsIHRoZW9yaXN0IEp1ZGl0aCBTaGtsYXIgdXNlZCB0byBtYWludGFpbiB0aGF0IHdvcmsgaXMgbW9yZSBjcnVjaWFsIHRvIGRlbW9jcmFjeSBhbmQgY29tbXVuaXR5IHRoYW4gYWxtb3N0IGFueXRoaW5nIGVsc2UuIFNoZSBtaWdodCBoYXZlIGJlZW4gY29ycmVjdCwgc2luY2UgdGhlIGxhY2sgb2YgZ29vZCBlbXBsb3ltZW50IGNvaW5jaWRlcyB3aXRoIHRoZSBsb3NzIG9mIHRydXN0LCB3aXRoIHNjaGlzbXMgaW4gY2l2aWwgc29jaWV0eSwgYW5kIHdpdGggdGhlIGVyb3Npb24gb2Ygb3VyIHB1YmxpYyBsaWZlLiBUaGluZ3MgZmVlbCBsZXNzIGFuZCBsZXNzIHN1c3RhaW5hYmxlLgpTZXJ2ZXIgYXJlIHlvdSBvbj8gQXJrZW5zdG9uZT8gSWYgeW91IGFyZSBnbyBhaGVhZCBhbmQgYWRkIG1lLCBJIGdvdCB0d28gdG9vbnMgSSBmb2N1c2luZyBvbiB0aGVzZSBkYXlzLCBUaGlkaWsgKDEwOSBEd2FyZiBIdW50ZXIpIE9sbGlvICgxMyBIb2JiaXQgSHVudGVyKSBJIGNhbiBnZXQgZW5vdWdoIG9mIHRoYXQgcmFuZ2VkIGRwcyBsaWZlLiA6KQpUaGV5IG9mdGVuIGludm9sdmUgb3ZlcnplYWxvdXMgaW5zcGVjdG9ycyBhcHBseWluZyBydWxlcyBjYXByaWNpb3VzbHkgb3IgZ292ZXJubWVudHMgcHVibGlzaGluZyBjb250cmFkaWN0b3J5IGluZm9ybWF0aW9uLi4gCklzIGp1c3Qgc28gbWFueSBkaWZmZXJlbnQgd2F5cyB0byBhdXRoZW50aWNhbGx5IHNoYXJlIHlvdXIgc3RvcnksIGFuZCBJIHRoaW5rIEdyb3dpbmcgUm9vbSBpcyBvbmUgb2YgdGhvc2UgZmVzdGl2YWxzIHRoYXQgaXMgcmVhbGx5IG9wZW4gdG8gZXhwZXJpbWVudGFsIGZvcm1zIGFuZCB0aGluZ3MgdGhhdCBtaWdodCBub3QgbWFrZSBpdCBpbnRvIGFub3RoZXIgZmVzdGl2YWwuIFJlcG9ydHMgdGhhdCBhZnRlciB0aGUgdHdvIHByZXZpb3VzIGluY2FybmF0aW9ucyBvZiB0aGlzIGZlc3RpdmFsLCB0aGUgZmVlZGJhY2sgaGFzIGJlZW4gZW5jb3VyYWdpbmcuYmlnZ2VzdCBjaHVua3Mgb2YgZmVlZGJhY2sgSSBnb3Qgd2FzOiBteSBHb2QsIEkgY2Fubm90IGJlbGlldmUgdGhpcyBpcyBhIGxpdGVyYXJ5IGZlc3RpdmFsLiAKRXBpZHVyYWxzIGFyZSB2ZXJ5IHNhZmUgYW5kIHlvdSBkb250IGV2ZW4gaGF2ZSB0byBzZWUgdGhlIG5lZWRsZS4gVGhleSBwcm92aWRlZCBtZSB3aXRoIGEgcG9zaXRpdmUgYmlydGggZXhwZXJpZW5jZSBhbmQgaGVhbHRoeSwgdmFnaW5hbGx5IGJvcm4gYmFiaWVzLgoiTm8gcG9zdHMgYWJvdXQgY2VsZWJyaXRpZXMgb3IgcGVvcGxlIGluIHRoZSBtZWRpYSB0aGF0IHlvdSBkbyBub3Qga25vdyBwZXJzb25hbGx5LiBEaXNjdXNzaW9ucyBhYm91dCB0aGUgcG9zc2libGUgbmFyY2lzc2lzdGljIHRyYWl0cyBvZiBjZWxlYnJpdGllcywgdGhhdCBuYXN0eSBsYWR5IHlvdSByZWFkIGFib3V0IGluIGFuIGFydGljbGUsIG9yIHRoYXQgeW91IHNhdyBpbiBTdGFyYnVja3MgdGhhdCBvbmUgdGltZSBjYW4gYmUgcG9zdGVkIHRvIC9yL25hcmNzaW50aGV3aWxkLiAvci9yYWlzZWRieW5hcmNpc3Npc3RzIGlzIGZvciBwb3N0cyBhYm91dCBhYnVzZXJzIHRoYXQgeW91IGtub3cgcGVyc29uYWxseSBhbmQgdGhhdCBhcmUgYWJ1c2luZyB5b3UgcGVyc29uYWxseS4iLiAKVGhlcmUgaXMsIGhvd2V2ZXIsIGFuIGV4cGxvaXQgdGhhdCB3ZSBjYW5ub3QgZml4IG9uIG91ciBlbmQsIHRoYXQgc2VuZHMgZXZlcnlvbmUgYSBwdXNoIG5vdGlmaWNhdGlvbiB3aGVuIHRoZSB0aXRsZSBvZiBhIFJlZGRpdCBwb3N0IGNvbnRhaW5zIGF0RXZlcnlvbmUuIFRoaXMgc2VuZHMgYSBwdXNoIG5vdGlmaWNhdGlvbiB0byB0aGUgYWxtb3N0IDkwMCBtZW1iZXJzIG9mIHRoZSBzZXJ2ZXIsIGFuZCBldmVuIG9uIHN1YnMgd2l0aCBhIGxhcmdlIG1vZGVyYXRpb24gdGVhbSBsaWtlIG91cnMsIHRoZSB3ZWJob29rIG9mdGVuIHBvc3RzIGJlZm9yZSB3ZSBoYXZlIHRoZSBjaGFuY2UgdG8gcmV2aWV3IGl0cyBjb250ZW50cyAgIGFuZCBvbmNlIGl0J3MgcG9zdGVkLCB0aGUgZGFtYWdlIGlzIGFscmVhZHkgZG9uZS4gVGhlIGRlbGliZXJhdGVseSBzcGFtbXkgbWVzc2FnZXMgdXNlZCB0byB0cmlnZ2VyIHRoaXMgZXhwbG9pdCB3b3VsZCBzdXJlbHkgYmUgZGVsZXRlZCBldmVudHVhbGx5IGJ5IGEgbW9kZXJhdG9yIChpbmRlZWQsIGl0IGFwcGVhcnMgeW91IGFscmVhZHkgcmVtb3ZlZCB0aGUgb2ZmZW5kaW5nIG1lc3NhZ2UpLiBUaGUgImV4dHJhIG1vZGVyYXRpb24gd29yayIgdGhhdCB5b3Ugd2VyZSBncm91c2VkIGFib3V0IGNvbnNpc3RzIG9mIGNvcHkgcGFzdGluZyB0aGUgY29kZSB3ZSBwcm92aWRlZCB5b3UgaW50byBBdXRvTW9kIGNvbmZpZ3VyYXRpb24sIHNvIHRoYXQgaXQgd291bGQgcHV0IHBvc3RzIHRpdGxlZCB3aXRoIGV4cGxvaXRpdmUgc3ludGF4IGludG8gdGhlIG1vZHF1ZXVlIGZvciByZXZpZXcuCkknbSBub3QgbG9va2luZyBmb3IgYW4gZWFzeSB3YXkgdG8gdHJhaW4gb3IgYSBxdWljayBmaXgganVzdCB3YXlzIG9mIGdldHRpbmcgbW9yZSBvdXQgb2YgdGhlIHRpbWUgaSBoYXZlIGFuZCB0aGUgdHJhaW5pbmcgaSBkby4gSSBkb250IHNlZSBhbnl0aGluZyB3cm9uZyB3aXRoIHVzaW5nIHRlY2hub2xvZ3kgdG8gaGVscCBidXQgeW91IHdyb25nbHkgYXNzdW1lZCBpIGp1c3QgZG9udCBwdXQgdGhlIGVmZm9ydCBpbi4gCkkgYWRtaXQgdGhhdCBJIGRvbiB1bmRlcnN0YW5kIHRoZSByaWdodCB3aW5nIHZlcnkgd2VsbCwgYnV0IHRoZXJlIHNlZW0gdG8gYmUgZGlmZmVyZW50IGtpbmRzIGFmcmFpZCBvZiBkaWZmZXJlbnQgdGhpbmdzLiAKSSBMT1ZFIElhbi4gQW5kIEthaGVyb3RvbidzIGFjY2VwdGFuY2Ugb2YgaGltIHdoZW4gaGUgZ290IHRocm91Z2ggdGhlIGdhdW50bGV0ICh0aGF0IHdob2xlIHNjZW5lIHdhcyBpbmNyZWRpYmxlKS4KMi4gTGl0ZXJhdHVyZS4gd29yayB3cml0dGVuIGFzIGFuIGV4cGxhbmF0aW9uIG9yIGp1c3RpZmljYXRpb24gb2Ygb25lIG1vdGl2ZXMsIGNvbnZpY3Rpb25zLCBvciBhY3RzLgpUaGF0IHNhaWQsIFNtaXRoJ3MgcGVyZm9ybWFuY2UgZG9lc24ndCBkbyBlbm91Z2ggdG8gbWFrZSB0aGlzIG1vdmllIHdvcnRoIHRoZSB0aW1lLiBZb3UnZCBiZSBiZXR0ZXIgb2ZmIGRpdmluZyBpbnRvIEp1c3QgS2lkcyBhbmQgZ2V0dGluZyB0aGUgc3RvcnkgYW5kIGEgYmV0dGVyIHZlcnNpb24gYXQgdGhhdCBzdHJhaWdodCBmcm9tIHRoZSBzb3VyY2UuLiAKQmlsbCBQaXR0IG9mIFdlbGRvbmEgYnJvdWdodCBhbG9uZyBoaXMgR2lic29uLCBhIDE5NDkgZWRpdGlvbiBtYW51ZmFjdHVyZWQgYnkgV2VzdGVybiBBbWVyaWNhbiBJbmR1c3RyaWVzLCBJbmMuIGFzIHRoZSBvcmlnaW5hbCBzdGlja2VyIHByb2NsYWltcy4gUHVyY2hhc2luZyB0aGUgdGhlIHRyYWN0b3IgZnJvbSB0aGUgb3JpZ2luYWwgb3duZXIncyBncmFuZHNvbiBuZWFybHkgMTAgeWVhcnMgYWdvLCBQaXR0IGhhcyB0b3RhbGx5IHJld2lyZWQgdGhlIHNob3cgaXRlbS4KSW1tZWRpYXRlbHkgc2VsZWN0IEVYSVRHQU1FLC4gQmFjayBhdCB0aGUgbWFpbiBtZW51LiAKSG9sbWVzIGRlc2NyaWJlZCB0aGUgY29tcGxhaW5hbnQgYXMgYSBoYXBwaWx5IG1hcnJpZWQgbWFuIHdpdGggY2hpbGRyZW4sIGFuZCBjaGFsbGVuZ2VkIEtpc3NuZXIgdG8gZXhwbGFpbiB0aGUgdG91Y2hpbmcuIG91dCBvZiB0aGUgYmx1ZSB5b3UgcmVhY2ggb3ZlciBhbmQgdG91Y2ggaGlzIGdyb2luPyBXaHk/CldoaWxlIGl0IG5pY2UgdG8gYmUgcmVjb2duaXplZCBmb3IgaGF2aW5nIGFuIGFlc3RoZXRpY2FsbHkgcGxlYXNpbmcgYm9keSBhbmQgZmFjZSwgaXQgaGFyZGx5IHNvbWV0aGluZyB0aGF0IGhhcyB0aGUgY2FwYWNpdHkgdG8gdGVhY2ggYW55IGxpZmUgc2tpbGxzLiAKU2hlIGlzIHBhcnQgb2YgYSBjb21tdW5pdHkgb2Ygc2ltaWxhciBwZW9wbGUgd2hvIHBlcnBldHVhdGUgdGhlc2UgaWRlYXMuIApJIHdlYXIgcG93ZXIgdGllcywgSSB0ZWxsIHBvd2VyIGxpZXMsIEkgdGFrZSBwb3dlciBuYXBzIGFuZCBydW4gdmljdG9yeSBsYXBzLiAKR3JvdXAgb2YgQ2hyaXN0aWFuIGltbWlncmFudHMgZnJvbSBJcmFxIHdobyBmbG9vZGVkIGFyZWFzIGFyb3VuZCBNaWNoaWdhbiAoRGVhcmJvcm4gaGVpZ2h0cywgc3RlcmxpbmcsIGF1YnVybiBoaWxscykgYW5kIG9jY2FzaW9uYWxseSBTYW4gRGllZ28gYW5kIG90aGVyIGNpdGllcy4gQ2FuIG1vc3RseSBiZSBmb3VuZCBhdCBNR00gRGV0cm9pdCBvciBncmVla3Rvd24gY2FzaW5vLgpJIHdvdWxkIGFydGljdWxhdGUgaXQgYSBiaXQgZGlmZmVyZW50bHkuIENoaW5hIGlzIGFscmVhZHkgYSByZWdpb25hbCBoZWdlbW9uIGluIHRoZSBzZW5zZSBvZiBiZWluZyB0aGUgc2luZ2xlIG1vc3QgcG93ZXJmdWwgY291bnRyeSBpbiBpdHMgcmVnaW9uLCBvZiBFYXN0IEFzaWFuLiBIb3dldmVyLCB0aGUgVVMgaXMgbW9yZSB0aGFuIGp1c3QgdGhhdCwgbW9yZSBvZiBnbG9iYWwgaGVnZW1vbiwgdGhlIGxlYWRlciBvZiB0aGUgZnJlZSB3b3JsZCwgaW4gbm8gc21hbGwgcGFydCBkdWUgdG8gaXQgbW9yZSBwcm9ncmVzc2l2ZSBhbmQgc3VzdGFpbmFibGUgcmVsYXRpb25zaGlwcyB3aXRoIHNtYWxsZXIgYW5kIGxlc3MgcG93ZXJmdWwgcGFydG5lcnMuIApXb29kIFByZXAgICBDYW4gYmVhdCB0aGUgY29udmVuaWVuY2UsIHBvcmFiaWxpdHkgYW5kIGluZXhwZW5zZSBvZiBhIFN2ZW5TYXcuIGZsaW50LCBtYWduZXNpdW0gc3RyaWtlciBldGMuKSBpdCBtYWtlIHN0YXJ0aW5nIGEgZmlyZSBwb3NzaWJsZSBpbiB0aGUgZXZlbnQgdGhhdCB5b3VyIG1hdGNoZXMsIG9yIGxpZ2h0ZXIgZ2V0cyBjb21wcm9taXNlZC4KIkl0IHN1cnJlYWwsIGlzbiBpdD8iIGhlIGV4Y2xhaW1zIGF0IG9uZSBwb2ludC4gCldlIGFyZSB1bmNvbWZvcnRhYmxlIG9uIGEgbG90IG9mIHR1cm5zIGFuZCByaXZlcnMgKHRoaXMgaGFuZCBhcyBhbiBleGFtcGxlKSBhbmQgYXJlIHBsYXlpbmcgYSBsYXJnZXIgcG90IGluIGEgbWFyZ2luYWwgc2l0dWF0aW9uIGZvciB1cy4gSSBjYW4gZ2V0IGJlaGluZCBhIHNtYWxsIGJldCBvbiBmbG9wIGZvciBwcm90ZWN0aW9uIGJ1dCB0aGluayB3ZSBuZWVkIHRvIGxvb2sgYXQgc2xvd2luZyBkb3duIG9uIHR1cm4gdG8gYXZvaWQgc2l0dWF0aW9ucyBsaWtlIHRoaXMuIApJIGJlZW4gd2F0Y2hpbmcgRkx1dU1QLCBTaXIgVGltYmVycywgYW5kIFN1bmxlc3MgS2hhbiBmb3IgdHV0b3JpYWxzIGFuZCBkaWZmZXJlbnQga2luZCBvZiB0aXBzLiAKSSB3b3VsZCBsaWtlIHRvIHJlbWluZCB5b3UgdG8gbm90IGJlIHNvIHF1aWNrIHRvIGp1ZGdlIGFsbCBvZiBJc2xhbSBiYXNlZCBvbiB0aGUgcnVsaW5nIG9mIGEgc2luZ2xlIHJlbGlnaW91cyBsZWFkZXIgaW4gRWd5cHQuIEkgbXlzZWxmIGtub3cgbWFueSBFZ3lwdGlhbnMgdGhhdCBhcmUgdmVyeSBtdWNoIHBybyBjcnlwdG9jdXJyZW5jeSBhbmQgYXJlIGFsc28gcmVsaWdpb3VzLiBUaGUgY29uY2VwdCBvZiBCaXRjb2luIGFuZCBjcnlwdG9jdXJyZW5jeSBhY3R1YWxseSBmb2xsb3cgdGhlIHZhbHVlcyBvZiBJc2xhbWljIGZpbmFuY2UgdmVyeSB3ZWxsLCBhcyB0aGUgdGVjaG5vbG9neSBkb2VzIG5vdCBpbnZvbHZlIHVzdXJ5IG9yIGNyZWRpdC4gClRoZWlyIGxhdGVzdCB0YXJnZXQgaXMgRGFyaWMgSmFja3NvbiwgcmVjZW50bHkgcHJvbW90ZWQgdG8gcHJpbmNpcGFsIG9mIFNlZGd3aWNrIEVsZW1lbnRhcnkuIEphY2tzb24gam9pbmVkIHRoZSBkaXN0cmljdCBhIHllYXIgYWdvIGFzIGFzc2lzdGFudCBwcmluY2lwYWwgYXQgYW5vdGhlciBlbGVtZW50YXJ5IHNjaG9vbCwgR2FyZGVuIEdhdGUuIEJlZm9yZSB0aGF0IGhlIHdhcyBwcmluY2lwYWwgYXQgYSBCYWx0aW1vcmUsIE1hcnlsYW5kLCBoaWdoIHNjaG9vbCwgd2hlcmUgYSB0aGVuIHNlbmlvciBjbGFpbWVkIGluIEFwcmlsIDIwMTUgSmFja3NvbiBjaG9rZWQgaGltIGFuZCBjYXVzZWQgaGltIHRvIGZhbGwgYW5kIHN0cmlrZSBoaXMgaGVhZC4uIApQb2tlciBCbGluZHMgYW5kIEFudGVzCkFzIGEgc211cmYsIEkgaGF2ZSBmZWx0IHBlcnNvbmFsbHkgZGlzY3JpbWluYXRlZCBhZ2FpbnN0IGJ5IHRoZSBKZWhvdmFocyBXaXRuZXNzIHJlbGlnaW9uLiBHcm93aW5nIHVwIGluIHRoZSA5MHMgYW5kIGJlaW5nIHRvbGQgZXZlcnkgZGF5IHRoYXQgSSB3YXMgYSBjaGlsZCBvZiBkZW1vbnMgaGFzIGhhZCBhIGxhc3RpbmcgZWZmZWN0IG9uIG15IHBlcnNvbmFsIHNlbGYgd29ydGguIEkgY2FuJ3QgY2hhbmdlIHRoZSBjb2xvciBvZiBteSBza2luIGFuZCBub3Igc2hvdWxkIEkgYmUgYXNrZWQgdG8uIFdoZW4gdGhlIFdhdGNodG93ZXIgd291bGQgY2lyY2xlIGFib3V0IHdpdGggYmVhdXRpZnVsIHBpY3R1cmVzIG9mIGEgZGl2ZXJzZSBjb21tdW5pdHkgaW4gcGFyYWRpc2UsIHRoZXkgc2hvd2VkIGV2ZXJ5IHNraW4gY29sb3IgdW5kZXIgdGhlIHN1biwgZXhjZXB0IGZvciBtaW5lLiBUaGVyZSBhcmUgbm8gYmx1ZSBwZW9wbGUgaW4gcGFyYWRpc2UuIFdoZW4gd2l0bmVzc2VzIHdvdWxkIHNlZSBtZSwgdGhleSB3b3VsZCByZWNvaWwgaW4gaG9ycm9yIGFuZCB0ZWxsIHRoZWlyIGNoaWxkcmVuIG5vdCB0byBwbGF5IHdpdGggbWUuIEkgd2Fzbid0IGFsbG93ZWQgaW4gaG9tZXMgb3IgaW4gS2luZ2RvbSBIYWxscyBhbmQgSSBoYXZlIGhlYXJkIG9mIG1hbnkgaW4gbXkgY29tbXVuaXR5IGJlaW5nIGJ1cm5lZCBhbmQgZGVzdHJveWVkLiBUaGlzIGlzIG5vdCBhIHJlbGlnaW9uIG9mIGxvdmUuIExvdmUgaXMgbW9yZSB0aGFuIHNraW4gZGVlcC4gR29vZ2xlIHdoYXQgdGhlIEplaG92YWhzIFdpdG5lc3MgcmVsaWdpb24gaGFzIGRvbmUgdG8gdGhlIHNtdXJmIGNvbW11bml0eS4gVGhpbmsgb2YgbWUgdGhlIG5leHQgdGltZSB5b3Ugc2VlIGEgd2F0Y2h0b3dlciBtYWdhemluZSB3aXRoIGFsbCB0aGUgY29sb3JzIG9mIHRoZSByYWluYm93IHVuaXRlZCB0b2dldGhlciBleGNlcHQgZm9yIGJsdWUgcGVvcGxlLgpBZnRlciAzNSB5ZWFycyB3aXRoIHRoZSBtYWdhemluZSBTdGV2ZSByZXRpcmVkIGluIDIwMTYuIFRocm91Z2hvdXQgaGlzIGxpZmUgU3RldmUgcHVyc3VlZCBtYW55IHBhc3Npb25zIGZyb20gcnVnYnkgdG8gc2FpbGluZywgc29jY2VyLCBGb3JtdWxhIDUwMCwgUG9rZXIsIERWRHMsIFRyYWluIFNldHMgYW5kIENvbXB1dGVyIEdhbWVzLiAKQnV0IGl0IGNvdWxkIGJlIHRoYXQgdGhlIGhlYWRwaG9uZXMgYXJlIGJlbnQgb3Igbm90IGNsZWFuLklmIGl0J3MgeW91ciBwaG9uZSBpdCdzIGFjdHVhbGx5IHJlYXNvbmFibHkgY2hlYXAgdG8gZml4LiBJIGZpeGVkIG15IGlQaG9uZXMgYXV4IGNvcmQgZm9yIGEgY291cGxlIGRvbGxhcnMgd2hlbiBJIHdhcyBoYXZpbmcgaXNzdWVzLiBVbmZvcnR1bmF0ZWx5IHRob3VnaCBpdCB0YWtlcyBob3VycyBjYXVzZSB3aXRoIG1vc3QgcGhvbmVzIHlvdSBoYXZlIHRvIGZ1bGx5IGRpc21hbnRsZSB0aGUgcGhvbmUuIApJdCBsb29rcyBsaWtlIGEgbGl0dGxlIG1hc2NhcmEgdHViZSwgYW5kIGl0IGdvdCBhIGxpdHRsZSBzcG9vbGllIGNvbWIgd2hlbiB5b3UgdW5zY3JldyBpdC4gWW91IGp1c3QgYnJ1c2ggaXQgdGhyb3VnaCB5b3VyIGV5ZWJyb3dzIGFuZCBpdCBkaXN0cmlidXRlIHRoZSB0aW50IG9uIHRoZW0uIEl0IHZlcnkgbmF0dXJhbCBsb29raW5nIGFzIGxvbmcgYXMgeW91IGRvbiBhY2NpZGVudGFsbHkgZ2V0IHRoZSB0aW50IGFsbCBvdmVyIHlvdXIgc2tpbiEgSXQgd2FzaGVzIG91dC4gVXNpbmcgYSBzZW1pIHBlcm1hbmVudCBkeWUgdG8gdGludCB5b3VyIGV5ZWJyb3dzIGlzIGEgZ3JlYXQgaWRlYSB0b28gICB0aG91Z2ggaWYgeW91IGhhdmUgdGhlIGJ1ZGdldCwgeW91IG1pZ2h0IHdhbnQgdG8gZG8gdGhhdCBhdCBhIHNhbG9uIHdpdGggeW91ciBuZXh0IGhhaXJjdXQsIG9yIGp1c3Qgd2F0Y2ggYSBidW5jaCBvZiB5b3V0dWJlIHR1dG9yaWFscy4gSXQgY2FuIGJlIGhhcmQgdG8gZmluZCB0aGUgcmlnaHQgc2hhZGUuCkFkZGluZyBqdXN0IGEgZGFzaCBvZiBwZXJmdW1lIG9pbCB0byB5b3VyIHNjcnViIHdpbGwgZ2l2ZSBpdCBhIG1hcnZlbG91cyBzY2VudC4gCiJJdCBzZWVtcyBsaWtlIGEgdmVyeSBzaW1wbGUgYXBwcm9hY2ggdG8gYSB2ZXJ5IGNvbXBsZXggcHJvYmxlbSwiIEJ1ZG5pY2sgYWRkZWQuICJJIGRvbid0IHVsdGltYXRlbHkgYmVsaWV2ZSB0aGF0IGl0IGNhbiBzdWNjZWVkLiIKSXQgYSBwdXRkb3duIGFuZCB5b3Ugc2hvdWxkIHJlZ2FyZCBhbnkgY29uZmVzc2lvbiBhYm91dCBwYXN0IGJveWZyaWVuZHMgYW5kIHNleHVhbCBoaXN0b3J5IGFzIGEgcHV0ZG93bi4gCkFuZCBzbyBJIGFtIGxlZnQgd2l0aCB0aGUga25vd2xlZGdlIHRoYXQgcGFydCBvZiBteSBib25kIHdpdGggc3R1ZGVudHMgaXMgYSBoaWdobHkgcmFjaWFsaXplZCBvbmUuIFNlZSB0aGVtIGFzIGZ1bGx5IGh1bWFuIGJlY2F1c2UgdGhleSBzZWUgbWUgdGhhdCB3YXkuIApJIGZpbmQgYSBoYW5kIGJsZW5kZXIvaW1tZXJzaW9uIGJsZW5kZXIgeWllbGRzIHRoZSBiZXN0IHRleHR1cmUuIApUb2RheSwxIGluIDEzMyBwZW9wbGUgaGF2ZSBjZWxpYWMgZGlzZWFzZSwgYSBnZW5ldGljYWxseSBsaW5rZWQsIGF1dG9pbW11bmUgcmVzcG9uc2UgdG8gZ2x1dGVuLiAKSWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIGxlYXJuaW5nIGFsbCBhYm91dCBDbGF5IFBva2VyIENoaXBzLCBvbmUgdGhpbmcgdGhhdCB5b3Ugc2hvdWxkIGZvY3VzIG9uIGlzIGxlYXJuaW5nIGhvdyB0byBpZGVudGlmeSB0aGUgZGVub21pbmF0aW9ucyBvZiBSZWFsIENsYXkgUG9rZXIgQ2hpcHMuIFRoZXJlIGFyZSBtYW55IHN0YW5kYXJkIGNvbG9ycyB0aGF0IGFyZSB1c2VkIHRvIGlkZW50aWZ5IHdoYXQgZWFjaCBwb2tlciBjaGlwIHJlcHJlc2VudHMgYXMgZmFyIGFzIG1vbmV5IGZpZ3VyZXMgd2hlbiBpdCBjb21lcyB0byBhIGdhbWJsaW5nIHRhYmxlLiBOb3csIHlvdSBjYW4gbGVhcm4gaG93IHRvIGlkZW50aWZ5IHRoZSBjb2xvcnMgc28gdGhhdCB5b3UgY2FuIHNwZW5kIG1vcmUgdGltZSBmb2N1c2luZyBvbiB0aGUgZ2FtZSB0aGFuIHRoZSBwcmludGVkIG1vbmV5IGFtb3VudHMgbGlzdGVkIG9uIHRoZSBDbGF5IENhc2lubyBQb2tlciBDaGlwcyB0aGF0IHlvdSBhcmUgcGxheWluZyB3aXRoIS4gCjIzLiBUaGV5IGZsZXcgdG8gVmFuY291dmVyIGZyb20gRnJlc25vLCBDYWxpZi4sIHdpdGggZm91ciBvdGhlciBmYW1pbHkgbWVtYmVycyB0byB3YXRjaCBUaGUgSW50ZXJuYXRpb25hbCBEb3RhIDIgQ2hhbXBpb25zaGlwcy5BdXN0aW4gTGl1LCAyMSwgYW5kIGhpcyBicm90aGVyIEJyYW5kb24sIDE5LCBmbGV3IHVwIHdpdGggc2l4IGZhbWlseSBtZW1iZXJzIGZyb20gRnJlc25vLCBDYWxpZi4gCkEgcmFkaWF0b3IgZmx1c2gsIG9yIHRyYW5zbWlzc2lvbiBmbHVzaCBjb25zaXN0cyBvZiBhbiBleGNoYW5nZSBvZiB0aGUgY29vbGFudCwgb3IgdHJhbnNtaXNzaW9uIG9pbC4gVGhlc2UgYXJlIHVzdWFsbHkgcGVyZm9ybWVkIHdpdGggYSBtYWNoaW5lIHRoYXQgaG9va3MgaW50byB5b3VyIGhvc2VzIG9yIGxpbmVzIGFuZCB3aGVuIHlvdXIgdmVoaWNsZSBpcyBpZGxpbmcsIGNpcmN1bGF0ZXMgdGhlIGZsdWlkIHRocm91Z2ggdGhlIG1hY2hpbmUgYW5kIHRyYW5zZmVycyBuZXcgZmx1aWQgaW50byB5b3VyIHZlaGljbGUuIFRoZXNlIGFyZSByZWNvbW1lbmRlZCBieSB0aGUgbWFudWZhY3R1cmVyIGF0IHNwZWNpZmljIGludGVydmFscy4gClRoaXMgd2Fzbid0IGEgcmFjaWFsbHkgbW90aXZhdGVkIHBsYW5uZWQgYXR0YWNrLiBCdXQgc29tZSBtb3RoZXJmdWNrZXIgbWFkZSBhIG1lbWUgc2F5aW5nIGl0IHdhcyBzbyBub3cgaXQgaXMgaXMuIApPZnRlbiwgYWZ0ZXIgYmVjb21pbmcgY2xvc2VyIHdpdGggaGVyIGFuZCB0YWxraW5nIHRvIGhlciBhIGxvdCwgc2hlIHJlYWxpemUgdGhhdCBhIHJlbGF0aW9uc2hpcCB3aGVyZSBzaGUgaXMgdW5jb21mb3J0YWJsZSBleHByZXNzaW5nIGhlcnNlbGYgaXNuIGhlYWx0aHkuIEkgZ3Vlc3MgdXN1YWxseSB0aGUgZ3V5IGlzbiB1c2VkIHRvIGhlYXJpbmcgaGVyIGJlIHNvIGRpcmVjdCBhbmQgaGUgZ2V0cyBkZWZlbnNpdmUgaW1tZWRpYXRlbHkgYW5kIGl0IGtpbmQgb2Ygc2h1dHMgZG93biB0aGUgY29udmVyc2F0aW9uLiAKRm9yIGRlY2FkZXMsIGZlbWFsZSBBc2lhbiBhY3RvcnMgaGF2ZSBiZWVuIGFza2VkIHRvIHBvcnRyYXkgc3RlcmVvdHlwZXMgbGlrZSB0aGUgdmluZGljdGl2ZSBkcmFnb24gbGFkeSwgdGhlIHN1Ym1pc3NpdmUgQ2hpbmEgZG9sbCwgdGhlIG5lcmR5IG92ZXJhY2hpZXZlciBvciB0aGUgaW5lcnQgc2V4IHdvcmtlci4gQ3JhenkgUmljaCBBc2lhbnMgYXZvaWRzIGFsbCBvZiB0aGVzZSwgaW5zdGVhZCBzaG93aW5nIHRoZSBudWFuY2VzIG9mIEFzaWFuIHdvbWVuIGV4cGVyaWVuY2VzIGFjcm9zcyBnZW5lcmF0aW9ucy4uIApPZmZpY2VycyByZXNwb25kZWQgdG8gUy4gCk1hbmNoZSBoYXR0ZW4gc2VsYnN0IGVpbmUgaG5saWNoZSBJZGVlIGluIHNpY2ggZ2V0cmFnZW4sIGFuZGVyZSBmaW5nZW4gZXJzdCBiZWkgZGVyIEJlZ2VnbnVuZyBGZXVlciBmciBkYXMgUHJvamVrdC4uIApJbiBjb250cmFzdCB0byBhIHBhcmxpYW1lbnRhcnkgc3lzdGVtIG9mIGZ1c2VkIHBvd2VycywgdGhlIHNlcGFyYXRpb24gb2YgcG93ZXJzIGNyZWF0ZXMgYSBidWlsdCBpbiwgdGhhdCBpcywgc3RydWN0dXJhbCwgcG90ZW50aWFsIGZvciBncmlkbG9jayB3aGVuIGVhY2ggYnJhbmNoIGlzIGNvbnRyb2xsZWQgYnkgYW4gb3Bwb3NpbmcgcGFydHkuIApZb3UgY2FuIGRvIHRoaXMgYXMgbWFueSB0aW1lcyBhcyBuZWNlc3NhcnkuIE9uY2UgeW91IHdpbiBvbmUgYmV0LCB5b3Ugd2lsbCBiZSBiYWNrIHRvIGV2ZW4uIFRoZW9yZXRpY2FsbHksIHlvdSBuZXZlciBsb3NlLiAKVGhpcyBpcyBwc3ljaG9sb2dpY2FsbHkgdmVyeSBhcHBlYWxpbmcsIGFzIGRlbW9uc3RyYXRlZCBieSBvdXIgdW5lcnJpbmcgZGVzaXJlIHRvIGJ1eSBsb3R0ZXJ5IHRpY2tldHMuIApNT0RVTE8gUklDSElFU1RBIFNPQ0lPIFNPU1RFTklUT1JFCkljaCBrYW5uIGRpZSBUaWNoZSBpbSBLbGFzc2VucmF1bSBiZWxpZWJpZyBhdWZzdGVsbGVuLiBadWRlbSBrYW5uIGljaCBkZW4gU2NobGVyIHZlcnNjaGllZGVuZSBFaWdlbnNjaGFmdGVuIHp1b3JkbmVuLCBzbyBkYXNzIGljaCB6dW0gQmVpc3BpZWwgZHVyY2ggZWluIGdlYnJvY2hlbmVzIEhlcnogbWFya2llcmVuIGthbm4sIHdlcgpJbiB3aGljaCBwcm92aW5jZT8gUGVuc2lvbnMgbWlnaHQgYWxzbyBkaWZmZXIgYmV0d2VlbiBkaWZmZXJlbnQgYXJlYXMgd2l0aGluIGEgcHJvdmluY2UsIHNvbWUgdmlsbGFnZXMgbWlnaHQgYmUgbW9yZSBnZW5lcm91cyB0aGFuIG90aGVycy4gCk5vdywgSSBuZXZlciBkaXJlY3RlZCBhIHJhY2UgYmVmb3JlIGFuZCBJIHN1cmUgdGhpbmdzIGNhbiBnbyB3cm9uZywgYnV0IHdhaXRpbmcgdGlsbCBhIGNvdXBsZSB3ZWVrcyBvdXQgdG8gdGVsbCB1cz9JIGRvbiB0aGluayBJIGdvaW5nIHRvIGJvdGhlciB3aXRoIHRoaXMuIEkgc3VwcG9zZWQgdG8gZG8gYSAxOSBtaWxlIHRyYWluaW5nIHJ1biB0aGF0IGRheSBmb3IgdGhlIEhhbCBIaWdkb24gYW55d2F5Li4gClRoZSBmaW5hbGUgIkJhZCBSb21hbmNlIiB3YXMgYSBjcm93ZCBwbGVhc2VyLiBHYWdhLCB3aG8gaGFkIHNwZW50IG11Y2ggb2YgdGhlIGV2ZW5pbmcgaW4gYSBtZXRhbGxpYyBzcGFjZSBzdWl0LCBlbWVyZ2VkIGluIGhlciB0aGlyZCBvdXRmaXQgb2YgdGhlIHBlcmZvcm1hbmNlLCBhIG1pZHJpZmYgYmFyaW5nIGNvc3R1bWUgdG9wcGVkIG9mZiBieSBmb290YmFsbCBsaWtlIHNob3VsZGVyIHBhZHMuIFNoZSB0aHJldyBkb3duIHRoZSBtaWNyb3Bob25lIGFuZCBqdW1wZWQgb2ZmIGEgcGxhdGZvcm0gdG8gZGlzYXBwZWFyIGF0IHRoZSBlbmQuLiAKVGhhdCBzYWlkLCBJIGNhbiB1bmRlcnN0YW5kIHRoZSBvcHBvc2luZyBvcGluaW9ucy4gUGVyc29uYWxseSwgSSBsaWtlIHRoZSBpbm5vdmF0aW9uLCBJIGRvbiB3YW50IHRvIHN0YXkgc3R1Y2sgaW4gdGhlIDIwdGggY2VudHVyeSBhcyBtdWNoIGFzIEkgbG92ZSB0aGUgYXJjaGl0ZWN0dXJlIGZyb20gdGhhdCBwZXJpb2QuLiAKVGhpcyB3ZW50IG9uIGZvciBhIHdoaWxlIGFuZCB3aGVuIGl0IGNhbWUgdG8gcHJlc2VudGF0aW9uIHRpbWUgaGUgZGVjaWRlZCB0byBmdWNrIHVzIG92ZXIgYW5kIG5vdCB0dXJuIHVwIGFuZCBjb3N0IGFsbCBhIHBlcmNlbnRhZ2Ugb2Ygb3VyIGdyYWRlICh0aG91Z2ggaGUgZGlkIGhhdmUgdGhlIGRlY2VuY3kgdG8gdGVsbCB1cyBoZSB3b3VsZG4ndCBiZSBjb21pbmcgaW4pLiAKVG9vIGJhZCBJIGNhbiBmaW5kIHRoZSBiYWNrIG9mIHRoZSA4MDQzIHBhdHRlcm4gOi8uZ3J1bWJsZWdydW1ibGU0MiAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgMjEgZGF5cyBhZ29VbmZvcnR1bmF0ZWx5LCBjb3VudHkgaGVhbHRoIGRlcGFydG1lbnRzIGFsc28gZXhjbHVkZSB3b21lbiB3aXRoIHBlcm1hbmVudCBzdGVyaWxpemF0aW9uIGZyb20gZmFtaWx5IHBsYW5uaW5nIHZpc2l0cy4gSSBhIFB1YmxpYyBIZWFsdGggTnVyc2UgYW5kIHJlY2VudGx5IGVuY291bnRlcmVkIGEgc2ltaWxhciBzaXR1YXRpb24uIApUaGVyZSBhIHJ1bGUsIGlmIHlvdSBtZWV0IG9uZSBhc3MgaG9sZSBpbiBhIGRheSwgdGhhdCBwZXJzb24gaXMgYW4gYXNzIGhvbGUuIElmIGV2ZXJ5b25lIHlvdSBtZWV0IGluIGEgZGF5IGlzIGFuIGFzcyBob2xlLCB5b3UgdGhlIGFzcyBob2xlLiBJIGhvbmVzdGx5IGZlZWwgbGlrZSBzaGUgaXMganVzdCBqdW1waW5nIG9uIHRoZSBIYXJ2ZXkgV2VpbnN0ZWluIHRyYWluLCBhbmQgaGUgbmV2ZXIgYWN0dWFsbHkgaW50ZXJhY3RlZCB3aXRoIGhlci4gTGlrZSB0aGUgbW9yZSBzaGUgdGFsa3MsIHRoZSBsZXNzIGNyZWRpYmxlIHNoZSBzb3VuZHMuIExpa2UgaWYgc2hlIGhhZCBqdXN0IHNhaWQsIGhlIGFidXNlZCBtZSwgSSB3b3VsZCBoYXZlIGJlZW4gbGlrZSB5ZWFoLCBvay4gQnV0IHNoZSBrZWVwcyB0YWxraW5nLCBzYXlpbmcgbW9yZSBhbmQgbW9yZSB0aGluZ3MsIGNyYXppZXIgYW5kIGNyYXppZXIsIGFuZCBob25lc3RseSwgSSBqdXN0IGRvbiBjYXJlIGlmIHNoZSB0ZWxsaW5nIHRoZSB0cnV0aCwgaXQgYWxsIHNvdW5kcyBsaWtlIGJ1bGwgc2hpdC4KVGhlcmUgaXMgemVybyBldmlkZW5jZSB0aGF0IEJhYnMgd2FzIGEgTWVsaXNzYSBwdXNoZWQgaGVyIGNoaWxkcmVuIGludG8gZGFuY2UsIGFzIE1lbGlzc2EgaGFzIHdpdGggTWFkZGllIE1hY2tlbnppZSBaaWVnbGVyLiBNZWxpc3NhIGh1c2JhbmQgZXZlbiBsZWZ0IE1lbGlzc2EgZHVlIHRvIGhlciBvYnNlc3Npb24gd2l0aCB0aGVpciBkYXVnaHRlciBkYW5jZSBjYXJlZXIuIFRoZSBaaWVnbGVyIGdpcmxzIGhhdmUgaGFkIHRhbGVudCBmcm9tIGEgeW91bmcgYWdlLCBmcm9tIGEgc2tpbGwgdGhhdCB3YXMgZGV2ZWxvcGVkIGF0IGEgeW91bmcgYWdlLiBUaGVyZSByZWFsbHkgaXMgbm8gY29tcGFyaXNvbiBoZXJlIGJldHdlZW4gdGhlIFppZWdsZXIgZ2lybHMgYW5kIFdXVC4gWUVBSCwgV1dUIGlzIG1vcmJpZGx5IG9iZXNlLiBTbyB3aGF0LgpUaGUgR292ZXJub3IncyBrZXkgcG93ZXIgaXMgdG8gc2lnbiBvciB2ZXRvIGxlZ2lzbGF0aW9uLCBhbmQgdGhpcyBjYW4gYmUgb3ZlcnJpZGVuIGJ5IGEgMi8zIHZvdGUgaW4gYm90aCBjaGFtYmVycy4gCkl0IHRoZSBsYXN0IGdhbWUsIG1vdmUgb24uIEVyaWUgZG9uZSwgc28gaXMgSGFtaWx0b24uIE5vdywgd2UgZ290IHRvIHdvcnJ5IGFib3V0IHRoaXMgd2Vla2VuZCBhZ2FpbnN0IEZsaW50IGFuZCBTYWdpbmF3LiAKV2UgYmVlbiBsaWVkIHRvIGFuZCBzb2xkIGEgZmFsc2UgYmFnIG9mIGdvb2RzIGZvciBkZWNhZGVzLiAKTm90TXlJbnRlcm5ldCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyMSBkYXlzIGFnbwpNeSBMb2NhbCBTZXR0aW5nc090dGF3YShHZXR0eSBJbWFnZXMvaVN0b2NrcGhvdG8pVGhlIGNyaWJiYWdlIGJvYXJkIGlzIGEgZmFtaWxpYXIgYXJ0aWZhY3QuIFVzdWFsbHksIGl0IGFuIHVuYXNzdW1pbmcgcGxhbmsgb2Ygd29vZCBkb3R0ZWQgd2l0aCB0aHJlZSB3aW5kaW5nIHRyYWNrcyBvZiBzbWFsbCBob2xlcy4gQmVuZWF0aCwgdGhlcmUgaXMgYSBoaWRkZW4gY29tcGFydG1lbnQgZm9yIGEgc2V0IG9mIGNvbG91cmVkIHBlZ3MuIAo=|<---