--->|VGhlIDEwIHNlY29uZCBjb3VudGRvd24gc3RhcnRzIGFuZCB0aGUgZGVhbGVyIHN0YXJ0cyBkZWFsaW5nIHRoZSBoYW5kLiAKMzggNDUpIEJhZCBSb21hbmNlL0FsZWphbmRyby9Nb25zdGVyL1NwZWVjaGxlc3MvRGFuY2UgSW4gVGhlIERhcmsvVGVsZXBob25lIChGZWF0LiBCZXlvbmMpL1NvIEhhcHB5IEkgQ291bGQgRGllL1RlZXRoLiBUaGlzIGlzIHRoZSBpbmZhbW91cyAiVGhlIEZhbWUgTW9uc2VyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuCkkgdGhpbmsgU2FuZGVycyBwbGFuIGZvciBmcmVlIGNvbGxlZ2UgaXMgYSBjb21wbGV0ZSBjcm9jayBvZiBzaGl0IChwYXJ0aWN1bGFybHkgdGhlIGZ1bmRpbmcpLCBidXQgSSBkbyB0aGluayB0cmFkZSBzY2hvb2xzLCBjb21tdW5pdHkgY29sbGVnZXMsIGFuZCBvdGhlciAoY3JlZGlibGUpIHByb2dyYW1zIHRoYXQgb2ZmZXIgMiB5ZWFyIGRlZ3JlZXMgYW5kIHN0dWZmIGxpa2UgdGhhdCBzaG91bGQgYmUgc3Vic2lkaXplZCBtdWNoIG1vcmUgaGVhdmlseSB0aGFuIHRoZXkgYXJlIHJpZ2h0IG5vdy4gVGhlIG1lcml0IG9mIGEgYmFjY2FsYXVyZWF0ZSBkZWdyZWUgaGFzIGJlZW4gd2F0ZXJlZCBkb3duIGJ5IGV2ZXJ5b25lIGFuZCB0aGVpciBkb2cgdGhpbmtpbmcgZXZlcnlvbmUgbmVlZHMgb25lLiBJIGRvbiB0aGluayB0aGF0IHRydWUsIGJ1dCBJIGRvIHRoaW5rIHBvc3Qgc2Vjb25kYXJ5IGVkdWNhdGlvbiBpcyBleHRyZW1lbHkgaW1wb3J0YW50Li4gClNldmVyYWwgUmVwdWJsaWNhbiBzdGF0ZSBsZWdpc2xhdHVyZXMgYW5kIGdvdmVybm9ycyBkZW5pZWQgdGhlIE1lZGljYWlkIGV4cGFuc2lvbiwgY3JlYXRpbmcgYSBjb3ZlcmFnZSBnYXAgZm9yIHRoZSBwb29yIGFuZCBkcml2aW5nIHVwIHByZW1pdW1zIGJlY2F1c2UgaW5zdXJlcnMgd2VyZSB0aGVuIGZvcmNlZCB1bmRlciB0aGUgQUNBIHRvIGNvdmVyIGhpZ2ggcmlzayBwYXRpZW50cyB0aGF0IHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgd291bGQgaGF2ZSBjb3ZlcmVkIHRocm91Z2ggdGhlIGV4cGFuc2lvbi4gCkh1bWFucyBuZWVkIHRvIGdldCBiYWNrIHRvIGJlaW5nIHBlYWNlbWFrZXJzIGFuZCBsb3ZlcnMuIFdlIG5lZWQgdG8gZ2V0IGJhY2sgdG8gcmVzcGVjdC4gSUYgd2UgbmVlZCBsYXdzIHRvIHJlbWluZCBwZW9wbGUgb2YgdGhhdCwgdGhlbiB3ZSBuZWVkIHRoZW0uIApJIGhhdmUgbm8gY2x1ZSB3aGljaCBvbmUgb2YgeW91IGkgaGF2ZSB1cHNldCB3aXRoIGEgbG93IGVmZm9ydCBzaGl0cG9zdCwgb3IgaG93IHlvdSBqdXN0aWZ5IHRoZSBsb2dpYyBpbiBmbGV4aW5nIHlvdXIgcG93ZXJzIHRvIGJhbiBtZS4gUi9nYW1pbmcgaXMgbGl0ZXJhbGx5IGEgaGl2ZSBvZiBjcml0aWNpc20gYW5kIHRveGljIGJlaGF2aW91ciBhdCB0aW1lcywgdXNlcnMgYWN0aXZlbHkgZW5jb3VyYWdlIHJldmlldyBib21iaW5nIGFuZCBHb2QgZm9yYmlkIHlvdSBlbmpveSBhIGdhbWUgeW91IG5vdCBzdXBwb3NlZCB0by4gCkNvbnZlcnNlbHksIEdhZ2EgaXMgYW4gaW5jcmVkaWJsZSBtdXNpY2FsIHRhbGVudC4gQnJhZGxleSBuZXZlciBzYW5nIGJlZm9yZSBhbmQgc3BlbnQgYSB5ZWFyIHRyYWluaW5nIGp1c3QgdG8gbGVhcm4sIHNvIGhlIGp1c3QgYXMgaW5zZWN1cmUgYWJvdXQgaGlzIHZvaWNlIGFuZCBzdGFnZSBwcmVzZW5jZS4gU2hlIGhlbHBlZCBoaW0gbGVhcm4gbW9yZSwgYnVpbGQgaGlzIHNraWxsLCBhbmQgZ2V0IHRocm91Z2ggaXQuClRlY2hub2xvZ3kgaGFzIGhpdCB0aGUgZHJpbmtzIG1lbnUgd2l0aCBhIHRhYmxldCBvbiB0aGUgdGFibGUgdGhhdCBwcm92aWRlcyBub3QganVzdCB3aGF0J3MgaW4gdGhlIHdpbmUgY2VsbGFyLCBvbiB0YXAgb3IgYmVoaW5kIHRoZSBiYXIuIApEYW5zIGxlIGNhZiBkIG8gb24gcyBkb25uIHJlbmRleiB2b3VzLCBsYSBqZXVuZSBmZW1tZSBicmlsbGFudGUsIGF1am91cmQgbCBtZSByYWNvbnRlIGxlIHByb2Nlc3N1cyBkZSBwbGFpbnRlIGNvbW1lIGVsbGUgbCB2IDogdW5lIGNvdXJzZSBvYnN0YWNsZXMgdHJhdW1hdGlzYW50ZSBxdWksIGRhbnMgc29uIGNhcywgciBkZSBncmF2ZXMgbGFjdW5lcyB0YW50IGRhbnMgbCBwb2xpY2kgcXVlIGRhbnMgbGUgc291dGllbiBvZmZlcnQgYXV4IHZpY3RpbWVzIGQgc2V4dWVsbGVzIChqZSB2b3VzIHJlcGFybGVyYWkgZGUgY2UgZGV1eGkgYXNwZWN0IGx1bmRpKS4KQ2VwZW5kYW50LCBsZSBqb3VybmFsIHNjaWVudGlmaXF1ZSBhIGZhaXQgbWFyY2hlIGFycmlyZSBlbiAyMDEwIGVuIHJlY29ubmFpc3NhbnQgcXVlIGwgbiBqYW1haXMgZCB0cmUgcHVibGllLiBFbiAyMDExLCBsZSBCcml0aXNoIE1lZGljYWwgSm91cm5hbCBhIGRub25jIHVuIHRydWNhZ2UgbGFib3IuCkpvaG4gZXhlbXBsaWZpZWQgYSBsaWZlIHdlbGwgbGl2ZWQsIGFsYmVpdCBzaG9ja2luZ2x5IHNob3J0ZW5lZCwgY3VsdGl2YXRpbmcgaGlzIHN0cm9uZyBjaGFyYWN0ZXIgdmFsdWVzIGFuZCB0aGUgZHJpdmUgdG8gc3VjY2VlZCBpbiB3aGF0ZXZlciBoZSBkaWQgd2l0aCBpbnRlZ3JpdHksIGFzIGEgZGV2b3RlZCBmYW1pbHkgbWFuIGFuZCB3ZWxsIHJlc3BlY3RlZCBidXNpbmVzc21hbiwgd2l0aCBoaXMga2VlbiBtaW5kLCBwb3NpdGl2ZSBhdHRpdHVkZSwgY29tcGV0aXRpdmUgZGlzcG9zaXRpb24sIHNoYXJwIHdpdCBhbmQgY2xldmVyIHNlbnNlIG9mIGh1bW91ci4gQWx3YXlzIHRoZSBnZW50bGVtZW4uIEpvaG4gd2FzIGEgbG9uZyB0aW1lIE1lbWJlciBvZiBNYXJrbGFuZCBXb29kIEdvbGYgQ2x1YiB3aGVyZSBoZSBzaGFyZWQgaGlzIGxvdmUgb2YgZ29sZiB3aXRoIG1hbnkgb2YgaGlzIGdvbGYgYnVkZGllcywgZmFtaWx5IGFuZC9vciBidXNpbmVzcyBmcmllbmRzLCB0YWtpbmcgdGhlaXIgdG9vbmllcywgcGxheWluZyBwb2tlciBhbmQgc3RhY2tpbmcgdXAgaGlzIGNoaXBzLCBkaXNoaW5nIG91dCBvbmUgbGluZXJzLCBzaGFyaW5nIGhpcyBoZWFydHkgbGF1Z2gsIGh1Z2Ugc21pbGUgYW5kIGNvbnRhZ2lvdXMgcGVyc29uYWxpdHkgYW5kIHNlZW1pbmdseSwgY29uc3RhbnRseSB3aW5uaW5nIGEgZHJhdyBvciBwcml6ZSBvZiBzb21lIHNvcnQuIApGciBteSB1bmRlcnN0YW5kaW5nLHRoZSBsb2NhbCBjaGluZXNlIHBheSBmb3IgdGhlIHN3aW1taW5nIGZhY2lsaXRpZXMuIApUaGUgY29tcGFueSBpcyBtb3ZpbmcgaW50byBMRUQgbGlnaHRpbmcgaW4gYSBtYWpvciBwdXNoIHRvIHN0YXkgcmVsZXZhbnQgYmVjYXVzZSBBbWVyaWNhbiBjb25zdW1lcnMgYXJlIGJ1eWluZyBtb3JlIG9mIHRoZSBlbGVjdHJvbmljIGJ1bGJzIGFzIHRoZSBwcmljZSBmYWxscy4uIApMYXN0IHllYXIgZm9yIFRoYW5rc2dpdmluZyBJIGFycml2ZWQgYWZ0ZXIgd29ya2luZyBhbGwgbW9ybmluZywgZmFtaXNoZWQsIHRvIGZpbmQgdGhlIG9ubHkgdGhpbmcgSSBjb3VsZCBlYXQgd2FzIHN3ZWV0IHBvdGF0byBjYXNzZXJvbGUgc21vdGhlcmVkIGluIG1hcnNobWFsbG93LiBJIHNjcmFwZWQgdGhlIG1hcnNobWFsbG93IG9mZiBhbmQgaGFkIGEgZmV3IGJpdGVzIGJ1dCBpdCBoYWQgc28gbXVjaCBzdWdhciB0aGF0IGl0IHdhcyBiYXNpY2FsbHkgZGVzc2VydC4gClRoYXQgZmlyc3QgbmlnaHQgaG93IG11Y2ggbW9uZXkgZGlkIHlvdSBtYWtlIGlmIHRpcHMuIEFyb3VuZCAzLDAwMC4gCkkgZm91bmQgdGhlIHRheGkgc29tZWhvdywgYW5kIHdlIHNldCBvZmYuIApJdCBkZXBlbmRzIG9uIHdoYXQgaXQgaXMuIEknbSBza2VwdGljYWwsIGJ1dCBub3QgdG90YWxseSBhZ2FpbnN0IGNvcnBvcmF0ZSBzb2NpYWwgcmVzcG9uc2liaWxpdHkgZWZmb3J0cy4gQnV0IHRoZSBlZmZvcnRzIGRvIGFjdHVhbGx5IGhhdmUgdG8gYmUgbWVhbmluZ2Z1bC4gCkluIHRoZSBzdW1tZXIgaGVyIGZhbWlseSwgaW5jbHVkaW5nIE11cmFkJ3MgbW90aGVyLCBlaWdodCBicm90aGVycyBhbmQgdHdvIHNpc3RlcnMsIHN0cmV0Y2hlZCBvdXQgb24gbWF0dHJlc3NlcyBvbiB0aGUgcm9vZiBvZiB0aGVpciBob3VzZSwgd2hpc3BlcmluZyB0byBvbmUgYW5vdGhlciB1bnRpbCB0aGV5IGZlbGwgYXNsZWVwIHVuZGVyIHRoZSBtb29uLgpJdCB3YXMgYSB5ZWFyLiAKRm9vZCAgIFRoaW5rIEtub3JyIFNpZGVLaWNrcy4gdGhleSBjaGVhcCwgZWFzeSB0byBwcmVwYXJlIGFuZCBkZWxpY2lvdXMuIEdldCBhIGNhbmlzdGVyIHN0b3ZlIChhdmFpbGFibGUgb24gdGhlIGNoZWFwIGNoZXogQW1hem9uKQoiSSd2ZSBnb3QgYSBoaXN0b3J5IG9mIGdhbWJsaW5nIGluIG15IGZhbWlseS4gCkRvb3JzIHdlcmUgbG9ja2VkLiAKT3VyIGZyaWVuZHMgdGhyZXcgbXkgaHVzYmFuZCBhICJQYW1wZXIgUG9rZXIgUGFydHkiIGF0IHRoZSBzYW1lIHRpbWUgYXMgbXkgc2hvd2VyLiAKVGhlIGdvdmVybm1lbnQncyBjb3JydXB0aW9uIGVmZm9ydHMgaGF2ZSBub3QgYmVlbiBldmFsdWF0ZWQgYXMgZWZmZWN0aXZlLCBhY2NvcmRpbmcgdG8gc2V2ZXJhbCBzb3VyY2VzLCB3aGljaCBoYXMgYmVlbiBhdHRyaWJ1dGVkIHRvIGxheCBlbmZvcmNlbWVudCBvZiBhbnRpIGNvcnJ1cHRpb24gbGVnaXNsYXRpb24gYW5kIHRoZSBpbmVmZmVjdGl2ZW5lc3Mgb2YgYW50aSBjb3JydXB0aW9uIGFnZW5jaWVzLiBBbnRpIGNvcnJ1cHRpb24gYWdlbmNpZXMgaGF2ZSBiZWVuIGhpbmRlcmVkIGJ5IGV4Y2Vzc2l2ZSBwb2xpdGljYWwgaW5mbHVlbmNlIGFuZCBjb250aW51b3VzIHJlcGxhY2VtZW50IG9mIHN0YWZmLiAKV2h5IGNhbid0IHRoZXkgZmxlc2ggb3V0IHRoZSBzaGlwIHJlcGFpciBzeXN0ZW0/IE1heWJlIGFkZCBkaWZmZXJlbnQgbWVjaGFuaWNzIG9mIHJlcGFpcj8gV2hhdCBpZiB0aGUgcm9wZSB3b3VsZCBnZXQgdG9ybiBhbmQgbmVlZCByZXBsYWNpbmcsIGFuZCBtYWRlIGEgc2FpbCB1bnVzYWJsZT8gQW5kIGRpZmZlcmVudCBtZWxlZSB3ZWFwb25zIGNvdWxkIGJlIHB1cmVseSBwbGF5IHN0eWxlIGNob2ljZS4gRG9lc24ndCBtZWFuIG9uZSBIQVMgdG8gYmUgYmV0dGVyIHRoYW4gdGhlIG90aGVyLiAKQW1vbmcgdGhlIDE0IG9mZmVyZWQgZGFpbHkgYXJlIGEgaGFuZGZ1bCBvZiB0aHJvd2JhY2tzIGxpa2UgYXF1YSBhbmQgc3RlcCBhZXJvYmljcywgd2hpY2ggc29tZWhvdyBmZWVsIGp1c3QgcmlnaHQgaW4gdGhpcyBvbGQgc2Nob29sIGVudmlyb25tZW50LiAKWW91IGFyZSByaWdodCBzaGF1bi4gVGhpcyBpcyB0aGVpciBtb21lbnQgdG8gcmVhbGl6ZSB0aGlzIGlzIGEgc3R1cGlkIGZvcm0gb2YgcHJvdGVzdCBiZWNhdXNlIGl0IHdpbGwgb25seSBiZSB2aWV3ZWQgYXMgYmVpbmcgZGlzcmVzcGVjdGZ1bCBvZiB0aGUgY291bnRyeSB0aGF0IGhhcyBhbGxvd2VkIGZvciB5b3VyIHN1Y2Nlc3MuIApXaGV0aGVyIHRoZXkgd2luIG9yIG5vdCBpcyBhIGRpZmZlcmVudCBtYXR0ZXIsIGJ1dCB0aGUgcmVhbGl0eSBpcyBpdCB3b3VsZCBjb3N0IHRoZW0gbWlsbGlvbnMgdXBvbiBtaWxsaW9ucyB0byBmaWdodCB0aGUgY2FzZSwgZXNwZWNpYWxseSBpZiB0aGV5IGJyb2tlbiBpdCB1cCBpbnRvIGluZGl2aWR1YWwgc3VpdHMgZnJvbSBldmVyeSB2aWN0aW0gZmFtaWx5IGFuZCBzdXJ2aXZvci4gCkZvciB0aGUgaG9tZWxlc3MvRE9NRVNUSUMgVklPTEVOQ0Ugc2hlbHRlcnMuIAoiSGUgb25seSBzZXJ2ZWQgb24gbXkgY2FtcGFpZ24gZm9yIGEgdmVyeSBzaG9ydCB0aW1lIiBhbmQgIndlIHJlYWxseSB3b3VsZCBsaWtlIHRob3NlIGJvb2sgcm95YWx0aWVzIHBsZWFzZSBkb24ndCBtYWtlIHRoZW0gc3RvcC4iIFRocm93aW5nIE1pcGhhbSBKLiBNdWtwbyB1bmRlciB0aGUgYnVzICAgYmlyZHMgb2YgYSBmZWF0aGVyIGZsb2NrIHRvZ2V0aGVyLiBJIGZlZWwgbGlrZSBJJ20gdHJhcHBlZCBpbiBhbiBlcGlzb2RlIG9mIEJsYWNrIE1pcnJvciwgd2hlcmUgY3VycmVudCBVUyBwb2xpdGljYWwgcmVhbGl0eSBrZWVwcyByZWZsZWN0aW5nL2ZvcmVzaGFkb3dpbmcgdGhlIFNoYW1iaGFsYSBkZWJhY2xlLiBBbmQgbm93IGluIEZlYnJ1YXJ5IDIwMTkgcHJvY2xhaW1pbmcgdGhhdCBNSk0gbWVzc2VkIHVwIHRoZSB0ZWFjaGluZ3MsIEFuZCBJIHRvbGQgaGltIG5vdCB0byBkbyBpdCBhbmQgbm93IG9oIGRpZCBJIG1lbnRpb24gSSdtIHRocm93aW5nIGhpbSB1bmRlciB0aGUgYnVzPyBpcyBwcmV0dHkgZGlzZ3VzdGluZy4gSSB3b3VsZCBhbG1vc3Qgc2F5IFNoYWtlc3BlYXJlYW4uIEl0IHJlYWxseSBhbG1vc3Qgcml2YWxzIHRoZSBUcnVtcCBjcmltZSBmYW1pbHkgaG9uZXN0bHkKS29yZWFuIHN0eWxlIGNoaW5lc2UgZm9vZC4KQSBOZWdhdGl2ZSBDZWxpYWMgVGVzdCBEb2Vzbid0IFJ1bGUgT3V0IEdsdXRlbiBhcyBhIFByb2JsZW0KSSBhbHNvIHJlY29tbWVuZCwgaWYgaXQgaXMgYW4gb3B0aW9uLCB0byBwbGF5IG1vcmUgbGltaXQgZ2FtZXMsIGVzcGVjaWFsbHkgYXMgeW91IGhhdmluZyB0cm91YmxlIGZpZ3VyaW5nIG91dCB3aGF0IHlvdXIgb3Bwb25lbnQgY291bGQgaGF2ZSBmcm9tIHRoZSAiZm9yZ290IEEgNSBzdHJhaWdodCIgc3RvcnkuIFRoYXQgZ2l2ZSB5b3UgbW9yZSBleHBlcmllbmNlIGFzIHlvdSBsZWFybi4gVGhleSBzdXBwb3J0IGhpbSBiZWNhdXNlIGhlIGlzIHZlaGljbGUgaW4gd2hpY2ggdG8gcmVhbGlzZSB0aGVpciBoYXRlIGF0IGFueSBjb3N0LCBpbmNsdWRpbmcgYWNjZXB0aW5nL2lnbm9yaW5nIGhpcyBsaWVzIGFuZCBjcmltZXMuCldoZW4gaW5zdGFsbGluZyBwYWNrYWdlcyB3ZSBjb3VsZCB0aGVuIGNob29zZSBpZiB3ZSB3YW50ZWQgb25seSBjb3JlIGZpbGVzLCBvciBhbGwgZmlsZXMuLiAKTW9yZSBvZnRlbiB0aGFuIG5vdCB0aGlzIGxlYWRzIHRvIG1lIE5PVCBkeWluZyBidXQgbm90IGdldHRpbmcgdGhlIGZhcm0gSSB3YW50LCB3aGlsZSBteSB0ZWFtIGFsc28gZ2V0cyByZWt0IGluIG90aGVyIGxhbmVzLiBJIG5lZWQgdG8gZmluZCBhIHdheSB0byBpbXByb3ZlIG15IHRlYW0gY2hhbmNlcyBvZiB3aW5uaW5nIEFMTCBPTiBNWSBPV04uIApZb3UgYSBtb25rZXkgdGVsbGluZyBtZSBteSBpZGVhIGlzIHNoaXQgd2l0aG91dCBldmVuIHRoZSBtZW50YWwgY2FwYWNpdHkgdG8gZ3Jhc3AgdGhlIHNpbXBsZSB0aGluZ3MgaW4gdGhpcyBwb3N0LiAKSSBoYXZlIGEgZmVlbGluZyBoZXIgbGF3eWVycyBhcmUgdGhlIHJlYXNvbiBzaGUgc3RvcHBlZCBwb3N0aW5nIGFsbCB0aG9zZSBwYXJ0eSBwaWNzIHdpdGggaGVyIG5ldyBib3lmcmllbmQuIApBZnRlciBhbGwsIEphbWVzIHNhaWQgaXQgYmVzdCB3aGVuIGV4cGxhaW5pbmcgaG93IGluIFBva2VyLCBvbmUgaXMgbm90IHBsYXlpbmcgaGlzIGhhbmQgYnV0IHRoZSBwbGF5ZXIgb3Bwb3NpdGUgaGltLi4gCkZZSSwgTmV0ZmxpeCB2YWx1YXRpb24gKCQxNTNCKSBpcyBoaWdoZXIgdGhhbiBhbGwgb2YgTmV3IFplYWxhbmQgcHVibGljbHkgdHJhZGVkIGNvbXBhbmllcyBwdXQgdG9nZXRoZXIgKCQxMTJCKS4gRml4YXRpbmcgb24gd2hldGhlciBOZXRmbGl4IGFjdHVhbGx5IHBhaWQgJDAgb3IgJDEzME0gaW4gdGF4ZXMgaXMgbWlzc2luZyB0aGUgcG9pbnQuIERvIHlvdSB0aGluayB0aGF0IGFsbCBwdWJsaWNseSB0cmFkZWQgTlogY29tcGFuaWVzIHB1dCB0b2dldGhlciBvbmx5IHBheSAkMTMwTSBpbiB0YXhlcz8gT2YgY291cnNlIG5vdC4gSWYgdGhleSBkaWQsIE5aIHdvdWxkIGJlIHVuYWJsZSB0byBvZmZlciBlc3NlbnRpYWwgc2VydmljZXMuIE5ldGZsaXggdGF4IGJpbGwgaXMgYSBqb2tlLgpJdCBkb2Vzbid0IHNvdW5kIGxpa2UgeW91J3JlIGJlaW5nIGEgYnJpZGV6aWxsYSwgYnV0IEknbSBhbHNvIG5vdCBpbiB0aGUgcm9vbSBsaXN0ZW5pbmcgdG8geW91IGd1eXMgZGlzY3VzcyBpZGVhcy4gCkNhbid0IGxpZSBpdCB3YXMgc28gcmV3YXJkaW5nIHRvIHNlZSBoaXMgbGlmZSBnbyBkb3duIGluIGZsYW1lcyB3aGlsZSBzaGUgYmFzaWNhbGx5IHR1cm5lZCBoZXIgZW50aXJlIGxpZmUgaW50byBzb21ldGhpbmcgYmVhdXRpZnVsLiB3aGVuIEkgZmlyc3Qgc3RhcnRlZCB3YXRjaGluZywgSSBkaWRuJ3QgdGhpbmsgaXQgd291bGQgYmUgc28gY2xlYXIgd2hvIHdhcyBseWluZyBhbmQgd2hvIHdhcyB0ZWxsaW5nIHRoZSB0cnV0aC4gQnV0IGFmdGVyIGFsbCB0aGUgdGVzdGltb255IGFuZCB0aGF0IGZhY3QgdGhhdCBoZSByZXBlYXRlZCB0aGUgYmVoYXZpb3IgKGhvdyBhYm91dCB0aGUgaW50ZXJ2aWV3cyB3aXRoIHRoZSBwZW9wbGUgZnJvbSB0aGUgYnVubnkgcmFuY2g/ISkgaXQgd2FzIHNvIG9idmlvdXMuClRoZSBhZGRlZCBpbmNlbnRpdmUgaGVyZSBpcyB0aGUgZmFjdCB0aGF0IHRoZXNlIGdhbWVzIGFsc28gb2ZmZXIgc29tZSBvZiB0aGUgbG93ZXN0IGhvdXNlIGFkdmFudGFnZXMgZ2l2aW5nIHlvdSwgdGhlIGtub3dsZWRnZWFibGUgcGxheWVyLCBhbmQgYW4gZXhjZWxsZW50IGNoYW5jZSBvZiB3aW5uaW5nIG92ZXIgdGhlIGxvbmcgcnVuLi4gClNvIGlmIHlvdSB3YW50IHRvIHJlYWNoIHRoZSB0b3AgaXQgZ29pbmcgdG8gYmUgcGFpbmZ1bCwgYnV0IHlvdSBjYW4gc2l0IGNvbWZvcnRhYmx5IGF0IHRpZXJzIDE5MTcgYXMgYSBGMlAgYW5kIG5vdCBtaXNzIG11Y2ggb24gdGhlIHJld2FyZHMuQXMgZm9yIEFldGhlciBSYWlkcywgcmlnaHQgbm93IGl0IGlzIGEgYml0IHRveGljLiBTaW5jZSBpdCBkb2VzbiBhY2NvdW50IGZvciBCU1QgdGhlIG1ldGEgZmF2b3JzIGhpZ2hseSBhbm5veWluZyB1bml0cyBvbiBkZWZlbnNlLCBzdWNoIGFzIFN1dHIsIEwhQXp1cmEsIEIhVmVyb25pY2EgYW5kIEF2ZXJzYSAod2hpY2ggaXMgYSBmcmVlIHVuaXQpLCBhcyB3ZWxsIGFzIHVzaW5nIGNhdmFscnkgYW5kIG1ha2luZyBjaG9rZSBwb2ludHMgd2hpY2ggaXMgY292ZXJlZCBieSBtdWx0aXBsZSB1bml0cyB3aXRoIGRpZmZlcmVudCBjb2xvcnMgYW5kIGFkdmFudGFnZXMsIHdoaWNoIG1lYW5zIHlvdSBnb2luZyB0byBsb3NlIHVuaXRzIG5vIG1hdHRlciB3aGF0LiBUaGV5IHJlcGxpY2F0ZWQgdGhlIExlZ2VuZGFyeSBoZXJvIG1lY2hhbmljIHdpdGggTXl0aGljIGhlcm9lcyBhbmQgbWFkZSBpdCB3b3JzZS4gClRoZSBwb2ludCBpcyB0aGF0IHRoZXJlIGFyZSBwbGVudHkgb2YgcmVhc29ucyB0aGF0IHBvaW50IHRvIHB1YmxpYyBicm9hZGNhc3RpbmcgYmVpbmcgYSBnb29kIHRoaW5nIHdvcnRoIHN1cHBvcnRpbmcsIGV2ZW4gaWYgZmluYW5jaW5nIHRoaW5ncyB0aHJvdWdoIHRoZSBwdWJsaWMgaXMgY29tbXVuaXNtIGluIHlvdXIgZXllcyBvciB3aGF0ZXZlci4KWW91IGNhbiBwYXJzZSBbWF1IVE1MIHdpdGggcmVnZXguIEJlY2F1c2UgSFRNTCBjYW4gYmUgcGFyc2VkIGJ5IHJlZ2V4LiBSZWdleCBpcyBub3QgYSB0b29sIHRoYXQgY2FuIGJlIHVzZWQgdG8gY29ycmVjdGx5IHBhcnNlIEhUTUwuIApOZXh0LCBjb25zaWRlciBnZXR0aW5nIGEgcG9rZXIgdGFibGUuIFdoaWxlIHRoZSBkaW5pbmcgcm9vbSB0YWJsZSBtYXkgd29yaywgeW91IGNhbiBhZGQgZ3JlYXRseSB0byB5b3VyIGdhbWUgYnkgaGF2aW5nIGEgZ2VudWluZSBob2xkZW0gcG9rZXIgdGFibGUuIFRoZXkgY29tZSBpbiBhbGwgcHJpY2UgcmFuZ2VzLiBZb3UgY2FuIGdldCBhbiBpbmV4cGVuc2l2ZSB0YWJsZSB0b3AgdGhhdCB5b3Ugc2ltcGx5IHB1dCBvbiB0b3Agb2Ygd2hhdGV2ZXIgdGFibGUgeW91J3JlIHVzaW5nLiBUaGV5IGhhdmUgdGhlIGxvb2sgb2YgYSByZWFsIHRhYmxlIGJ1dCBhdCBhIGZyYWN0aW9uIG9mIHRoZSBjb3N0LgpTaGUgaGFzIHRoZSBwb3dlciB0byBkbyBzby4gTWFrZXMgc2Vuc2UgSSBndWVzcy4gQnV0IGdvZCBkYW1uIGlmIGl0IGlzbiBmcnVzdHJhdGluZy4gCkl0IGRlcGVuZHMgb24gaG93IG11Y2ggeW91IGFyZSBleGFtaW5pbmcgdGhlaXIgaGFuZCBhbmFseXNpcyBhbmQgd2hlcmUgeW91IGFyZSBpbiB5b3VyIHBva2VyIGpvdXJuZXkuIEkgdGhpbmsgdGhlcmUgaXMgYSBsb3Qgb2YgdmFsdWUgdG8gYmUgaGFkIGluIGEgcG9rZXIgdmxvZy4gWW91IGNhbiBwYXVzZSB0aGUgdmlkZW8sIGFuZCBhc2sgeW91cnNlbGYgYXQgZWFjaCBhY3Rpb24gd2hhdCB5b3Ugd291bGQgZG8sIGFuZCB0aGVuIGdldCBhZmZpcm1hdGlvbiBvciBzZWUgd2hhdCB0aGUgdmxvZ2dlciBkaWQgYW5kIGxpc3RlbiB0byB0aGVpciBleHBsYW5hdGlvbiBhcyB0byB3aHkuIFNvbWUgYXJlIGJldHRlciBhdCB0aGlzLCBhbmQgc29tZSBmb2N1cyBtb3JlIG9uIHRoZSBhbmFseXNpcyB0aGFuIHRoZSBlbnRlcnRhaW5tZW50IHZhbHVlLiBJZiB5b3UgYXJlIGdvaW5nIHRvIHdhdGNoIFRyb29wZXIgb3IgQm9za2ksIHRoZW4geW91IGFyZW4gZ29pbmcgdG8gZ2V0IG1vcmUgZGV0YWlsZWQgZXhwbGFuYXRpb25zIHRoYW4gc29tZW9uZSBsaWtlIEJyYWQgT3dlbi4gRXZlbiB0aGVuLCB0aGVpciBleHBsYW5hdGlvbnMgbWlnaHQgbm90IGJlIHRvbyBlZHVjYXRpb25hbCwgYnV0IGdlbmVyYWxseSB0aGUgdmxvZ2dlcnMgYXJlIHdpbm5pbmcgcG9rZXIgcGxheWVycyBhbmQgdGhlcmUgYXJlIHNvbWUgdXNlZnVsIG51Z2dldHMgb2YgaW5mb3JtYXRpb24uIExBVEIgaGFzIHNvbWUgY3JhenkgYWN0aW9uLCBhbmQgdGhlIGJlc3QgcGxheWVycyBhcmUgb24gdGhlIEZyaWRheSBzdHJlYW0uIFRoYXQgYmVpbmcgc2FpZCwgdGhlIHBsYXlzIHRoYXQgdGhlIEZyaWRheSBwbGF5ZXJzIGRvIGFyZW4gc3R1ZmYgdGhhdCBJIHdvdWxkIHB1bGwgaW4gdGhlIGxvY2FsIDEvMiBnYW1lLgpMZSBmb2xkaW5ndWUgZGFuZ2VyZXVzZSBzJ3RhaXQgZGogc2lnbmFsZSBwYXIgdW4gYW50Y2RlbnQgZGUgcHlyb21hbmllLCBzb2l0IHVuIGluY2VuZGllIGRlIHZ0ZW1lbnRzIGRhbnMgdW4gbWFnYXNpbi4gCkxpdiBCb2VyZWUgaXMgYW5vdGhlciBCcml0b24gd2hvIGhhcyBtYWRlIGEgaHVnZSBpbXBhY3Qgb24gdGhlIGludGVybmF0aW9uYWwgc2NlbmUsIG5vdCBsZWFzdCB0aHJvdWdoIHdpbm5pbmcgdGhlIDIwMTAgRXVyb3BlYW4gUG9rZXIgVG91ciBpbiBTYW4gUmVtbyBmb3IgMS4yNW0gZXVyb3MgKDEsMDk4LDczMSkuCk15IHVuaXZlcnNpdHkgc3R1ZGVudCB1bmlvbiBoYXMgaW5zdGF0ZWQgYSBwb2xpY3kgd2hlcmUgeW91IGNhbiBjbGFwIG9yIGNoZWVyIGR1cmluZyBtZWV0aW5ncywganVzdCBkbyBqYXp6IGhhbmRzIGluc3RlYWQuIFRoaXMgaXMgYXBwYXJlbnRseSBiZWNhdXNlIGNsYXBwaW5nIHdpbGwgYWdncmF2YXRlIGF1dGlzdGljIHBlb3BsZSBhbmQgcGVvcGxlIHdpdGggc2Vuc29yeSBpc3N1ZXMuCk5vIG9uZSB0YWtlcyBwcmlkZSBpbiB0aGUgY2l0eT8gSG93IHNvPyBDb21pbmcgdXAgaXMgQWRvcHQgYSBCZWFjaCBXaW50ZXIgQmVhY2ggQ2xlYW51cC4gVGhlcmUgYXJlIGNvbnN0YW50IGxvY2FsIGV2ZW50cyB0byBnZW5lcmF0ZS4gClRoZSBWZW50dXJlIEJyb3MgaXMgYmV5b25kIGEgc2hhZG93IG9mIGEgZG91YnQgbXkgZmF2b3VyaXRlIGFuaW1hdGVkIHNob3csIGJ1dCBhIGNvdXBsZSBwZW9wbGUgSSBzaG93biBpdCB0byBoYXZlIGJlZW4gdHVybmVkIG9mZiBieSB0aGUgZmlyc3Qgc2Vhc29uLiBJZiB5b3UgZmluZCB5b3Vyc2VsZiBpbiB0aGF0IHNpdHVhdGlvbiwgSSBpbXBsb3JlIHlvdSB0byBhdCBsZWFzdCB3YXRjaCB0aHJvdWdoIHRvIHRoZSBmaXJzdCBmZXcgZXBpc29kZXMgb2Ygc2Vhc29uIHR3bywgYWxsIG9mIHRoZSBjaGFyYWN0ZXJzIHNob3cgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgZ3Jvd3RoIHRocm91Z2hvdXQgdGhlIHNlcmllcy4KTm90d2l0aHN0YW5kaW5nIGltcHJlc3NpdmUgd2lucyBvdmVyIGJvdGggVUNMQSBhbmQgVVNDLCBVdGFoIHN0aWxsIGZpbmlzaGVkIGJlaGluZCBib3RoIHRlYW1zIGF0IG51bWJlciBmaXZlIGluIHRoZSBTb3V0aCBEaXZpc2lvbiwgYW5kIG51bWJlciBzaXggaW4gdGhlIG92ZXJhbGwgY29uZmVyZW5jZSBzdGFuZGluZ3MuIEFzIHRlbXB0aW5nIGFzIGl0IGlzIHRvIHJlaGFzaCB3aGF0IG1pZ2h0IGhhdmUgYmVlbiwgSSBhbSBjb250ZW50IHRvIHNpbXBseSByZXZlbCBpbiB3aGF0IHRoZSBVdGVzIHdlcmUgYWN0dWFsbHkgYWJsZSB0byBhY2NvbXBsaXNoLi4gClRoZSByZXBvcnQgc2hvd3MgMSBwZXJjZW50IG9mIE5ldmFkYSdzIDMgeWVhciBvbGRzIGFyZSBlbnJvbGxlZCBpbiB0aGUgc3RhdGUgZnVuZGVkIFByZSBLIHByb2dyYW0sIHdoaWxlIDMgcGVyY2VudCBvZiA0IHllYXIgb2xkcyBhcmUgZW5yb2xsZWQuIE5ldmFkYSBzcGVudCBhYm91dCAkMiw2MDAgcGVyIHN0dWRlbnQgb24gdGhlIHByb2dyYW1zIGluIDIwMTIuIEFzc29jaWF0ZWQgUHJlc3MuIApJIHBpY2tlZCB1cCBhIGJvb2sgZnJvbSB0aGUgZmxvb3IgYW5kIHdlaWdodGVkIGl0IGluIG15IGhhbmQsIEkgd29uZGVyLgpJZiB5b3Ugd2FudCB0byBnbyBBTUQsIHlvdSBjb3VsZCBwcm9iYWJseSBnZXQgY2hlYXBlciBieSBnZXR0aW5nIGEgNzgwRyBtb3RoZXJib2FyZCBhbmQgZG9pbmcgYSBoeWJyaWQgY3Jvc3NmaXJlIHdpdGggYSBIRCAzNDUwLiBJZiBhbGwgdGhleSdyZSBwbGF5aW5nIGlzIG9ubGluZSBwb2tlciwgaXQgc2hvdWxkIGJlIG1vcmUgdGhhbiBlbm91Z2ggZm9yIHRoZW0uIApJdCBpcyBhbGxlZ2VkIHRoYXQgUGF0ZWwsIHdoZW4gcXVlc3Rpb25lZCBzYWlkIHRoYXQgaGUgd2FzIHRoZSBjYXNoaWVyIGFuZCBhbHNvIG9wZXJhdGluZyB0aGUgZ2FtYmxpbmcgZGVuLiAKSW4gaGFza2VsbCBldmVyeXRoaW5nIG91dHNpZGUgb2YgSU8gbW9uYWQgcmVzcGVjdHMgYm90dG9tcywgYW5kIGluIElPIHlvdSBuZWVkIHRvIGV4cGxpY2l0bHkgY2F0Y2ggZXhjZXB0aW9ucyB0byBkZWFsIHdpdGggdGhlbS4KSSBhbSBwcm91ZCBvZiBteSBjdWx0dXJlIGFuZCBub3QgdGhlIGxlYXN0IGJpdCByYWNpc3QsIGJ1dCBmb3Igc29tZSByZWFzb24gcGVvcGxlIHRha2UgdGhhdCBwcmlkZSBpbiB0aGUgd3Jvbmcgd2F5LiAKR2V0dGluZyBhY2NlcHRlZCBieSBhIHNjaG9vbCB3YXNuIHRoZSBlbmQgb2YgaXQuIFRoZXJlIHdlcmUgdGhlIGdvdmVybm1lbnQgUHJvZmVzc2lvbmFsIFNraWxscyBUZXN0cyB0byBwYXNzLCB3aGljaCBpbnZvbHZlZCBzaXR0aW5nIGluIGEgZ3JpbSBvZmZpY2UgYnVpbGRpbmcgd2l0aCBzbGVldmVzIHJvbGxlZCB1cCB0byBlbnN1cmUgd2Ugd2VyZW4gY2hlYXRpbmcsIGFuZCBwcm92aW5nIHdlIGNvdWxkIHNwZWxsIGFuZApHaG9zdGluZyBoYXMgYmVlbiBhIHRoaW5nIHNpbmNlIHRoZSBiZWdpbm5pbmcgb2YgdGltZS4gVGhpcyBzdWJyZWRkaXQgaXMgbm90IGEgY3Jvc3Mgc2VjdGlvbiBvZiB0aGUgYXZlcmFnZSBwb3B1bGF0aW9uLiAKQW5kIHNpbmNlIEdvZCBsaWtlcyB0byBtYWtlIHRob3NlIHJhcmUgcHVibGljIGFwcGVhcmFuY2VzIGNvdW50IGZvciBzb21ldGhpbmcsIGhlIHN0YWdlcyB0aGUgd2hvbGUgdGhpbmcgaW4gYSBjb29sIGFzcyBmbGFtaW5nIGNoYXJpb3QuLiAKVGhlIHBva2VyIHJ1biBmZWF0dXJlcyBmaXZlIHN0YXRpb25zIHdoZXJlIHNub3dtb2JpbGUgcmlkZXJzIGRyYXcgb25lIGNhcmQgZWFjaC4gT25lIG9mIHRob3NlIHN0YXRpb25zLCBpbiBMaW1lIFBhcmssIHdpbGwgYmUgbmFtZWQgaW4gQWxhbiBtZW1vcnkuIHdhcyBoaXMgc3BvdCwgUmFjaGVsIHNhaWQuIGlzIGEgbGl0dGxlIHBhcnQgZm9yIGhpbS4gVGhlaXIgZ3JhbmRwYXJlbnRzIG93bmVkIGEgY2FiaW4gdGhlcmUsIHNvIHRoZSBib3lzIHNwZW50IGEgZ29vZCBkZWFsIG9mIHRoZWlyIGNoaWxkaG9vZCBpbiB0aGUgYXJlYS4KSWYgeW91IHdhbnQgY29tcGFyZSBhIE5vcnRoIEFtZXJpY2FuIGNvdW50cnksIHRoZW4gY29tcGFyZSBDYW5hZGEgd2hpY2ggbGluZ3Vpc3RpY2FsbHkgaGFzIDI2JSBGcmFuY28gQ2FuYWRpYW5zLiBBbmQgdGhlbiBpdCBoYXMgMTglIEVhc3QvU291dGgvQ2VudHJhbCBBc2lhbnMsIDIlIEFyYWJzL1BlcnNpYW5zLCAzLjUlIEJsYWNrIHBlb3BsZSwgMiUgSGlzcGFuaWNzIGFuZCA1JSBJbmRpZ2Vub3VzLiAKVG9hc3R5bW93ICAwIHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KSSBmaW5kIHRoYXQgYWZ0ZXIgYSB5ZWFyIG9yIHNvLCBteSBzcG9ydHMgYnJhIGJhbmRzIGFyZSBsb29zZXIgYW5kIHdpbGwgY2F1c2UgY2hhZmluZyAgIGluIGZhY3QsIEkgYmUgcmV0aXJpbmcgYSBnb29kIEp1bm8gdGhpcyBtb250aCBkdWUgdG8gdGhhdCBpc3N1ZS4gSGFwcGlseSBSdW5uZXIgV2FyZWhvdXNlIGhhcyBsYXN0IHNlYXNvbiBvbiBzYWxlIGZvciBvbmx5ICQzMCBlYWNoIS4gCkluIGFsbCB0aGUgc2Nob29scyBJIHdvcmtlZCBhdCwgSSBuZXZlciBvbmNlIHNhdyB0ZWFjaGVycyBtaXN0cmVhdGluZyBraWRzIHRvIHRoaXMgZGVncmVlLiAKVGhlIHNwb2tlc3dvbWFuIGNvbmNlZGVkIHRoYXQgdG90YWwgZ2FtYmxpbmcgZXhwZW5kaXR1cmUgaW4gUXVlZW5zbGFuZCBsYXN0IGZpbmFuY2lhbCB5ZWFyIHdhcyB0aGUgImhpZ2hlc3QgdG8gZGF0ZSIuCldpbGwgeW91IGFsbG93IHJlIGJ1eXM/UGxheWluZyBObyBMaW1pdCBUZXhhcyBIb2xkICdlbSBtZWFucyB0aGF0IGl0J3MgcG9zc2libGUgZm9yIHBsYXllcnMgdG8gbG9zZSBhbGwgdGhlaXIgY2hpcHMgdmVyeSBxdWlja2x5LiBBbGxvd2luZyBwbGF5ZXJzIHRvIHB1cmNoYXNlIG1vcmUgY2hpcHMgaWYgdGhleSBsb3NlIHRoZW0gYWxsIGR1cmluZyBhIHNwZWNpZmljIGFtb3VudCBvZiB0aW1lIGlzIG9uZSB3YXkgdG8gbWFrZSBzdXJlIHRoYXQgZXZlcnlib2R5IGdldHMgYSBjaGFuY2UgdG8gcGxheSBmb3IgYW4gYW1wbGUgYW1vdW50IG9mIHRpbWUgcHJpb3IgdG8gYmVpbmcgcmVsZWdhdGVkIHRvIHdhdGNoaW5nIHRoZSB0b3VybmFtZW50IGZyb20gdGhlIHNpZGVsaW5lcy4gVGhlIG90aGVyIGJlbmVmaXQgdG8gcmUgYnV5cyBpcyB0aGUgYWRkaXRpb25hbCBtb25leSBpbiB0aGUgcHJpemUgcG9vbCBmb3IgdGhlIHdpbm5lcnMuIFNldCB0aGUgbnVtYmVyIG9mIHJvdW5kcyBmb3Igd2hpY2ggeW91IHdpbGwgYWxsb3cgcmUgYnV5cy4KVHJ1bXAgYW5kIEtpbSBhcmUgc2NoZWR1bGVkIHRvIG1lZXQgSnVuZSAxMiBpbiBTaW5nYXBvcmUuIFRydW1wIG5vdyBzYXlzIHRoZSBtZWV0aW5nIGNvdWxkIGJlIGRlbGF5ZWQuIGRlbWFuZHMgZm9yIE5vcnRoIEtvcmVhJ3MgY29tcGxldGUgZGVudWNsZWFyaXphdGlvbi4KU3RhcnQgc21hbGwgICBjYW4geW91IHRoaW5rIG9mIHNvbWV0aGluZyB0aGF0IHlvdSBtYXliZSB3YW50IHRvIHRyeSBhbmQgbWFrZT8gU29tZXRpbWUganVzdCBzdGFydGluZyB3aXRoIHRoZSBiYXJlIGJvbmVzIGJhc2ljcyBjYW4gaGVscCB5b3UgZWFzZSB5b3VyIHdheSBpbnRvIGRvaW5nIHRoaW5ncyBzbyB0aGF0IGl0IGRvZXMgbm90IGFsbCBjb21lIGZsb29kaW5nIGF0IG9uY2UgKHRoZSBhbnhpZXR5KQpIb3dldmVyIHRoZXNlIHRlYSBob3VzZSBnaXJscyBhcmUgcmVhbGx5IGdyYWNlZnVsIGFuZCBza2lsbGVkIGluIGJyZXdpbmcgdGVhLi4gCkhlIHdhcyBhIHJlbWFya2FibGUgbWFuIHdpdGggYSB3b25kZXJmdWwgc2Vuc2Ugb2YgaHVtb3IuIEkgYW0gc3VyZSB0aGF0IHRoZXJlIGlzIGEgcG9rZXIgZ2FtZSBnb2luZyBvbiB1cCBpbiBoZWF2ZW4gd2l0aCBhbGwgaGlzIG9sZCBjcm9uaWVzLiBPdXIgaGVhcnRzIGFyZSB3aXRoIHlvdSBhbmQgeW91ciB3aG9sZSBmYW1pbHkuIApKQ0oyMDE1bWFsZSAzNSAgIDM5ClVuZGVyIERlbW9jcmF0cyB5b3UgcGF5IHNsaWdodGx5IG1vcmUgdGF4ZXMsIGFuZCB5b3VyIGludmVzdG1lbnRzIHdpbGwgZ3JvdyBhdCBhIHNsb3dlciBwYWNlLCBidXQgeW91IGhhdmUgZmFyIGdyZWF0ZXIgc2VjdXJpdHkgaW4gdGhvc2UgaW52ZXN0bWVudHMsIGVuc3VyaW5nIHRoYXQgNTAgeWVhcnMgZG93biB0aGUgcm9hZCB5b3UgYmUgd2VsbCBzaXR1YXRlZCBmb3IgcmV0aXJlbWVudC4KVGhlIHN0b3J5IG9mIHRoZWlyIGNvbnZlcnNhdGlvbiBhdCBOYXdheiBTaGFyaWYgcGVyc29uYWwgcmVzaWRlbmNlIGluIEphdGkgVW1yYSBzYXlzIGl0IGFsbC4gCkJpbGwgd2FzIHByZWRlY2Vhc2VkIGJ5IGhpcyBwYXJlbnRzLCBNYXJnYXJldCAgYW5kIEphY2sgRHVubiwgInRoZSBiZXN0IHN0ZXAgZmF0aGVyIG9uZSBjb3VsZCBldmVyIGFzayBmb3IiLiBIZSBsZWF2ZXMgYmVoaW5kIGhpcyB3aWZlIERyLiAKSnVzdCBsaWtlIFlvc2VtaXRlIFNhbSwgVGhvbWFzIEZyaWVkbWFuIGFsd2F5cyBiYXJrcyBtdWNoIGxvdWRlciB0aGFuIGhlIGNhbiBiaXRlLiBMaWtlIHRoZSBjYXJ0b29uIGNoYXJhY3RlciwgVGhvbWFzIEZyaWVkbWFuIGFsd2F5cyB3YWxrcyBhbmQgeWVsbHMgd2l0aCB0d28gZHJhd24gZ3VucywgZm9yIGFzIGFuIEFtZXJpY2FuIFppb25pc3QsIGhlIHRyYXZlbHMgd2l0aCB0d28gbnVjbGVhciBwb3dlcnMgKFVTIGFuZCBJc3JhZWwpIG9uIGhpcyBiZWx0ICAgYW5kIGJlY2F1c2UgdGhpcyAiaW1wZXJpYWwgbWVzc2VuZ2VyIiAgIGFzIEJlbGVuIEZlcm5hbmRleiBoYXMgcmlnaHRseSBjYWxsZWQgaGltICB3YWxrcyB3aXRoIHRoaXMgdHdvIGRyYXduIGd1bnMsIGFueSBjbGFwdHJhcCBoZSBibHVydHMgb3V0IGlzIHB1Ymxpc2hlZCB3aXRob3V0IGFueSBlZGl0b3JpYWwgc2Vuc2Ugb2YgZGVjZW5jeSBpbiB0aGUgTmV3IFlvcmsgVGltZXMuIApBbGwgc2VyaW91c2x5IGxvb2tzIGxpa2UgdGhleSB3ZXJlIHNpdHRpbmcgYXJvdW5kIG9uZSBhZnRlcm5vb24gYW5kIHdlcmUganVzdCBsaWtlLCAiaGV5LCBob3cgY2FuIHdlIHNxdWVlemUgc29tZSBtb25leSBvdXQgb2YgdGhlIG1pbGQgaW50ZXJuZXQgY2VsZWJyaXR5IHdlIGFjY3J1ZWQgc28gZmFyPyBJIGdvdCBpdCEgV2Ugd2lsbCB3cml0ZSBhIGJvb2sgdGhhdCBwZXJmZWN0bHkgZGVzY3JpYmVzIGJvdGggb3VyIHRyYWluaW5nIG1ldGhvZHMgYW5kIHNob3djYXNlcyBvdXIgY29tYmluZWQgaW50ZWxsZWN0LiIgU3VjaCBhIGZ1Y2tpbmcgc2NhbS4gCk15IHVuZGVyc3RhbmRpbmcsIGFuZCBJIGFtIG5vdCBleHBlcnQsIGlzIHRoYXQgdGhleSBoYWQgYW4gaXNzdWUgaW4gdGhhdCBhIG1pbm9yaXR5IG9mIGF1dGlzdGljIGNoaWxkcmVuIGdvdCBmdWxsIHNlcnZpY2UsIGFuZCB0aGVuIHRoZXJlIHdhcyBhIGxhcmdlciB3YWl0aW5nIGxpc3Qgb2YgY2hpbGRyZW4gb24gd2FpdGluZyBsaXN0cy4gTm93IHRoZSBnb3Zlcm5tZW50IGlzIGdvaW5nIHRvIGdpdmUgdGhlIG1vbmV5IGRpcmVjdGx5IHRvIHRoZSBwYXJlbnRzIG9mIGFuIGF1dGlzdGljIGNoaWxkLCBzcHJlYWRpbmcgaXQgb3V0IG1vcmUgZXZlbmx5LiBUaGlzIG1lYW5zIHRob3NlIHdobyB3ZXJlIGdldHRpbmcgdmVyeSBsYXJnZSBhbW91bnRzIGJlY2F1c2UgdGhlaXIgY2hpbGQgaXMgb24gdGhlIHZlcnkgaGlnaCBlbmQgb2YgdGhlIHNwZWN0cnVtIHdvdWxkIGdldCBsZXNzLgpTb21ldGltZXMgd2UgaGF2ZSB0byBtYWtlIGFuIGluaXRpYWwgZGVjaXNpb24gYWZ0ZXIgYSBzaG9ydCByZXZpZXcsIGFuZCBpdCBpc24gYWx3YXlzIGNvcnJlY3QsIGJ1dCB3ZSB3aWxsaW5nIHRvIGdpdmUgdGhpbmdzIGEgc2Vjb25kIGxvb2sgd2hlbiBhc2tlZC4uIApBcyBhIGZpbmFsIG5vdGUsIHRoZXJlIGEgcGhpbG9zb3BoaWNhbCBhc3BlY3Qgb2YgaXQuIEkgdW5kZXJzdGFuZCByZWFsaXR5IGlzIHN1YmplY3RpdmUsIHRoZXJlIGFyZSBubyBjb25zdGFudHMuClNsZWVweWo5MTAgdQpDb21wbGV0ZWx5IG91dCBvZiBsZWZ0IGZpZWxkLiAKRGUgZ3JhbmRzIG1lcmNpcyAgUm9sYW5kIEZldWlsbGFzIHBvdXIgbGUgdHJhdmFpbCBxdSdpbCBmYWl0IGV0IGxlIHBhcnRhZ2UgZGUgc29uIHNhdm9pciBldCAgQ2Fyb2xpbmUgcG91ciBhdm9pciB0IHVuZSBtZXNzYWdyZSBnb3VybWFuZGUuIEVsbGUgYXZhaXQgZCdhaWxsZXVycyByYXBwb3J0IHVuZSBhdXRyZSBtaWNoZSBwb3VyIHVuIGFjY3JvIGF1IHBhaW4sIGRvbnQgdm91cyBjb25uYWlzc2V6IHBldXQgdHJlIGxlIGJsb2csIFBhaW5yaXNpZW4sIHF1aSBhcnBlbnRlIGluZmF0aWdhYmxlbWVudCBsYSBjYXBpdGFsZSBlbiBxdXRlIGRlIGJvbm5lcyBib3VsYW5nZXJpZXMuCllvdSBzaG91bGQgaGF2ZSByZXBvcnRlZCBoaW0sIGJlY2F1c2Ugd2hhdCBoZSBkaWQgdGVsbGluZyB5b3UgdG8gY29tZSBpbnRvIGhpcyBvZmZpY2UgYW5kIHF1ZXN0aW9uaW5nIHlvdSBhYm91dCB0aGluZ3MgdGhhdCBoYWQgbm90aGluZyB0byBkbyB3aXRoIHlvdXIgY2xhc3MgYXQgYWxsIHdhcyB2ZXJ5IGluYXBwcm9wcmlhdGUuIFRoYXQgbm90IHdoYXQgYSBwcm9mZXNzb3IgaXMgc3VwcG9zZWQgdG8gZG8uIEFuZCwgeWVzLCB5b3UgYXJlIHdlbGwgd2l0aGluIHlvdXIgcmlnaHRzIHRvIHJlcG9ydCB3aGF0IGhlIGRpZCBJIGJldCB5b3Ugbm90IHRoZSBmaXJzdCBzdHVkZW50IGhlIHB1bGxlZCB0aGF0IG5vbnNlbnNlIG9uLiBBbmQgaGUgc291bmRzIGxpa2UgaGUgd2FzIG1lbnRhbGx5IGlsbCB3aGljaCBpcyB3aHkgaGUgd2FzbiB0aGVyZSBmb3IgdGhlIHNlbWVzdGVyIGJlZm9yZSB5b3UgZ290IHRoZXJlLiBJdCBtZXNzZWQgdXAgdGhhdCB5b3UgaGFkIHRvIGdldCBwcm90ZWN0aW9uIGZyb20geW91ciBmcmllbmRzIGp1c3QgdG8gbGVhdmUgdGhhdCBjcmVlcCBjbGFzcywgYnV0IEkgcmVhbGx5IGRvbiBibGFtZSB5b3UuCkl0IHNlZW1zIG9kZCB0aGF0IGFsbCB5b3VyIGNvbmZsaWN0IHJldm9sdmVzIGFyb3VuZCB0aGlzIGNhc3Qgd2hpY2ggaXMgcHJldHR5IGNsb3NlIHRvIHlvdS4gQWxsIG9mIHdob20gZW5kIHVwIGpvaW5pbmcgeW91IGF0IE1vdGhlciBCYXNlLCBpbiBvbmUgZm9ybSBvciBhbm90aGVyLiBUaGVyZSBzZWVtcyB0byBiZSBhIGxhY2sgb2Ygc2lkZXMsIHRoZXkgYWxsIGp1c3Qga2luZCBvZiB5b3VyIGNyZXcuCkplIHN1aXMgY29tbWUgdW5lIHBsYWllIG91dmVydGUuIi4gClByb2JsZW1zIHNob3VsZCBiZSBkZWFsdCB3aXRoIGJlZm9yZSB0aGV5IGJlY29tZSBwcm9ibGVtcy4gVGhlIHJ1bGVzIGFwcGx5IHRvIGV2ZXJ5b25lLi4gCkZpZ3VyZXMgZm9yIG90aGVyIGFlcm9iaWMgYWN0aXZpdGllcyBhcmUgc2hvd24gYmVsb3cgKHRoZXNlIGFyZSBjYWxjdWxhdGVkIHVzaW5nIGEgbWFuIHdobyB3ZWlnaHMgMTkwIHBvdW5kcykuU3RhdGlvbmFyeSBiaWtlIChsaWdodCk6IDQ3NCBjYWxvcmllcyBwZXIgaG91cldhbGtpbmcgdXBoaWxsICgzLjUgbWlsZXMgcGVyIGhvdXIpOiA1MTggY2Fsb3JpZXMgcGVyIGhvdXJIaWdoIGltcGFjdCBhZXJvYmljczogNjA0IGNhbG9yaWVzIHBlciBob3VyU3RhdGlvbmFyeSBiaWtlIChtb2RlcmF0ZSk6IDYwNCBjYWxvcmllcyBwZXIgaG91ckpvZ2dpbmcgKGxpZ2h0IHBhY2UpOiA2MDQgY2Fsb3JpZXMgcGVyIGhvdXJSdW5uaW5nICg1IG1pbGVzIHBlciBob3VyKTogNjkwIGNhbG9yaWVzIHBlciBob3VyU3RhdGlvbmFyeSBiaWtlICh2aWdvcm91cyk6IDkwNiBjYWxvcmllcyBwZXIgaG91cgpDZXQgYXJyb25kaXNzZW1lbnQgZXN0IGxlIHNldWwgIFBhcmlzICBhdm9pciBjaGFuZyBkZSBtYWpvcml0IGVuIDIwMTQsIHBhc3NhbnQgZCd1bmUgZ2F1Y2hlICBtb2RyZSAgIHVuZSBkcm9pdGUgIG1vZHJlICwgRGVscGhpbmUgQnJrbGkgKExSKSBsJ2VtcG9ydGFudCBhbG9ycyBhdmVjIHVuZSB0cnMgY291cnRlIG1ham9yaXQuIApEaWUgQW5rdW5mdHN6ZWl0ZW4gc2luZCBuaWNodCBhbmdlZ2ViZW4gdW5kIG1hbiBrYW5uIHNpZSBzaWNoIG51ciBMZWlkZXIgZmVobHQgYXVjaCBlaW5lIExhIFBhbG1hIEthcnRlIG1pdCBiZXJzaWNodCBiZXIgYWxsZSBCdXNsaW5pZW4gYXVmIGRlciBIb21lcGFnZS4gRXJzYXR6d2Vpc2Uga2FubiBtYW4gZGFzIEludGVybmV0YW5nZWJvdCBLYXJ0ZSAoc2llaGUgdW50ZW4pIG51dHplbi5Ob2NoIGduc3RpZ2VyIHdpcmQgZXMsIGthdWZ0IG1hbiBzaWNoIHVtIDEsICBiZWltIEJ1c2ZhaHJlciBlaW5lIEJ1cyBCb251c2thcnRlIGltIFNjaGVja2thcnRlbmZvcm1hdCB1bmQgbGR0IGVpbiBHdXRoYWJlbiB2b24gMTAsICAsIDIwLC4gIG9kZXIgMzAsICBhdWYuIApJIGhvcGUgdGhhdCB0aGlzIGhlbHBzIG1pbmltYWxseSwgWW91ciB0YWtpbmcgb24gYSB0YXNrIHRoYXQgbW9zdCBBZG1pbiB3b3VsZCBub3QgeW91IGhhdmUgNSBkaWZmcmVudCBwbGF0Zm9ybXMgdGhhdCB5b3UgYXJlIHdpc2hpbmcgdG8gdXNlIGluIHRoaXMgbmV0d29yay4gCjMpR2V0IGEgYm9vdCBkcmllciAgbGVhdGhlciBib290cyB3aWxsIGxhc3QgMnggYXMgbG9uZywgYmUgNXggbW9yZSBjb21mb3J0YWJsZSwgYW5kIDEweCBsZXNzIHNtZWxseSBpZiB5b3UgZ2V0IHRoZW0gYm9uZSBkcnkgZXZlcnkgbmlnaHQuIFRoZXNlIHRoaW5ncyBjaGFuZ2VkIG15IGxpZmUgIG5vdyBJIHJvYW0gdGhlIG9pbCBwYXRjaGVzIG9mIHRoZSB3b3JsZCBzcHJlYWRpbmcgdGhlIEhvbHkgV29yZCBvZiB0aGUgQm9vdCBEcmllciBsaWtlIGEgd2hpdGUgdHJhc2ggSmVzdXMuIApJbmRpY2EuIApBbGwgb2YgdGhpcyB3aWxsIGNvc3QgdW5kZXIgMTAwIGRvbGxhcnMuIApXZWxsLCB0aGVyZSBhY3R1YWxseSBvbmUgY29sb3IgYW5kIGl0J3MgbW9yZSBsaWtlIGFuIGVtZXJhbGQgZ3JlZW4gYW5kIGRlbGl2ZXJzIGEgbWFnbmlmaWNlbnQgZmVlbCB0byBhbnkgcm9vbS4gV2hpY2hldmVyIG9uZSB5b3UgY2hvb3NlLCB3ZSdyZSBwcmV0dHkgc3VyZSB5b3Ugd2lsbCBlbmpveSB0aGUgbmV3IGxhbmRzY2FwZSBvZiB5b3VyIHBva2VyIHRhYmxlcy4gClRoZSBmcnVzdHJhdGluZyBwYXJ0IGFib3V0IHRoaXMgb24gbXkgZW5kIGlzIG15IHlvdW5nZXIgc2lzdGVyIGp1c3Qgc3RhcnRlZCB3aXRoIHRoZSBuZXcgQnVya2luYSBncm91cCBpbiBKYW4sIHRoZXkgd2VyZSB0b2xkIHRoYXQgcmFwZXMgcmFyZWx5IGhhcHBlbiBhbmQgbWFkZSBpdCBzZWVtIGFsbW9zdCBpbXBvc3NpYmxlLiAKTGUgY2hhdCBQb2xsdXggKFBvcGF1bCkgcm91cGlsbGUgZW4gdHJhdmVycyBkdSBsaXQgcGVuZGFudCBxdWUgc2EgbXJlIElTSVMgcGF0cm91aWxsZSBkYW5zIGxlIGphcmRpbiB0b3V0IGF1dG91ciBkdSBjaHRlYXUgZG9udCBlbGxlIG5lIHMnbG9pZ25lIHBvdXIgYWluc2kgZGlyZSBqYW1haXMuIEVsbGUgc3VydmVpbGxlIGxlcyBhYm9yZHMgZGUgY2UgcXVpIGVzdCBkZXZlbnUgc29uIHJlZnVnZS4gTm91cyBsJ2F2b25zIGZhaXQgc3RyaWxpc2VyLCBsYSBjb3F1aW5lICEgZWxsZSBzZSBsYWlzc2FpdCB0cm9wIGZhY2lsZW1lbnQgYWJvcmRlciBwYXIgbGVzIHZveW91cyBkdSBxdWFydGllci4gTm9uIG1haXMgISBPbiB2YSB2b3VzIGFwcHJlbmRyZSAgYWRvcHRlciB1bmUgdGVudWUgY29ycmVjdGUgZGV2YW50IGxlcyBwZXRpdHMgY29saWVycywgTWFkYW1lICEKQW5kIGhleSwgdGhlcmUgYWxzbyB0aGUgc29jaWFsIGNvc3RzIHRoYXQgeW91IGltcG9zZSBvbiB5b3VyIGZlbGxvdyBjb21tdXRlcnMsIGluIHRlcm1zIG9mIGNvbmdlc3Rpb24sIHJvYWQgd2VhciBhbmQgdGVhciwgZXRjLiAKVGhlIGNhcmQgcm9vbSBjYWxscyB0aGUgbmV4dCBwZXJzb24gb24gdGhlIGxpc3Qgd2hlbiBhIHNlYXQgYmVjb21lcyBhdmFpbGFibGUuIFNpbXBseSBhc2sgd2hvZXZlciBpcyBpbiBjaGFyZ2Ugb2YgdGhlIGJvYXJkICAgb3IgYSBzdGFmZiBtZW1iZXIgICB0byBwbGFjZSB5b3Ugb24gdGhlIGxpc3QgZm9yIGFsbCBvZiB0aGUgZ2FtZXMgeW91IGFyZSB3aWxsaW5nIHRvIHBsYXkuIElmIHlvdSBhcmUgaW4gYSBzbWFsbCBwb2tlciByb29tIHdpdGggbm8gdmlzaWJsZSBzaWduIHVwIGFyZWEsIGFzayBhIGRlYWxlciBob3cgdG8gZW50ZXIgYSBnYW1lLi4gClNvIHlvdSBjb21lIGhlcmUgdG9kYXkgYW5kIHlvdSAgIGRlZXAgaW4gbXkgaGVhcnQsIHlvdSBrbm93LCB3aGVuIEkgcHJhY3RpY2VkIGxhdyBJIHJlcHJlc2VudGVkIGEgbG90IG9mIGxhd3llcnMgd2hvIGdvdCBpbiB0cm91YmxlLCBhbmQgeW91IGNvbWUgc2F5aW5nIEkgaGF2ZSBtYWRlIG15IG1pc3Rha2VzLCBidXQgbm93IEkgd2FudCB0byBjaGFuZ2UgbXkgbGlmZS4gClRoZSBmaXJzdCBmZXcgZGF5cyBhZnRlciBRdWl0IERheSwgaXQgbWlnaHQgYmUgZGlmZmljdWx0IHRvIGtlZXAgeW91ciBoYW5kcyBmcm9tIHlvdXIgbW91dGguIFlvdSBoYXZlIHRvIHJlbWluZCB5b3Vyc2VsZiBjb250aW51YWxseSB0aGF0IHlvdSBubyBsb25nZXIgYml0ZSB5b3VyIG5haWxzLiAKSWYgdGhleSBhcmUgdGhlbiB0aGV5IGhhdmUgdG8gZ28gYmFjayB0byB0aGF0IHNoZWx0ZXIuIApBbiBpbmRvb3IgY2F0IGhhcyBuZWFybHkgbm8gY2hhbmNlIG9mIGJlaW5nIGV4cG9zZWQgdG8gcmFiaWVzLCBidXQgdGhlIHNhZmVzdCBiZXQgaXMgdG8gZ2l2ZSB5b3VyIGNhdCBhIHJhYmllcyB2YWNjaW5lIGFuZCBrZWVwIGl0IGN1cnJlbnQuIApUaHJlZSBDYXJkIFBva2VyIGluY29ycG9yYXRlcyB0d28gbW9kZXMgb2YgcGxheS4gCkhlIHNhdyBoZXIgbmFrZWQuIEJ1dCBpZiBoZSBub3RpY2VkIGhlciBnYWluaW5nIGFuZCBsb3Npbmcgd2VpZ2h0LCBoZSBoYWQgbm8gcmVhc29uIHRvIGxlYXAgdG8gdGhlIGNvbmNsdXNpb24gdGhhdCBzaGUgd2FzIHByZWduYW50LCBoZSBhcmd1ZXMuIEhlIGtuZXcgc2hlIHdhcyBvbiB0aGUgcGlsbCwgaGFkIG9mdGVuIHNlZW4gaGVyIHRha2luZyBpdC4gQW5kIGhlIHRob3VnaHQgdGhlaXIgcmVsYXRpb25zaGlwIHdhcyBiYXNlZCBvbiB0cnVzdC4gCkluIGEgdG90YWwgbGFuZ3VhZ2UgdGhlIGJlbmVmaXQgaXMgbGVzcyBzZXZlcmUsIGJ1dCBpbiBhIHBhcnRpYWwgbGFuZ3VhZ2UgdGhleSBjYW4gYmUgY29uc2lkZXJhYmxlLiAKRXRpcXVldHRlOiBQbGVhc2Ugdm90ZSBvbiBzdWJtaXNzaW9ucyBiYXNlZCBvbiB3aGV0aGVyIHRoZSBjb250ZW50IGltcHJvdmVzIHRoZSBzdWJyZWRkaXQuIFBsZWFzZSB2b3RlIG9uIGNvbW1lbnRzIGJhc2VkIG9uIHRoZWlyIGNvbnRyaWJ1dGlvbiB0byB0aGUgZGlzY3Vzc2lvbiBhbmQgbm90IHNvbGVseSBvbiB3aGV0aGVyIHlvdSBhZ3JlZS4gUmVkZGlxdWV0dGUgb2ZmZXJzIGZ1cnRoZXIgaWRlYXMuIFRoaXMgc3VicmVkZGl0IHN1cHBvcnRzIGZyZWUgZGlzY3Vzc2lvbiBpbiB0aGUgY29tbWVudHMgc28gbG9uZyBhcyBpdCBkb2VzbiBicmVhayBzaXRlIHdpZGUgcnVsZXMgb3IgaXMgc3BhbS4gRm9yIHVzZXJzIHRoYXQgeW91IGZpbmQgaW50b2xlcmFibGUgY29uc2lkZXIgbWFuYWdpbmcgeW91ciBleHBlcmllbmNlIGJ5IGJsb2NraW5nIHRoZW0uIElmIHlvdSBoYXZlIGEgY29tcGxhaW50IGNvbmNlcm5pbmcgdGhpbmdzIGxpa2UgcnVkZW5lc3Mgb3IgYSBnZW5lcmFsIGRpcmVjdGlvbiBvZiBkaXNjdXNzaW9uIHRoYXQgeW91IGZpbmQgZGlzYWdyZWVhYmxlLCB5b3UgY2FuIGNvbXBsZXRlIHRoaXMgZm9ybSBhbmQgc2VuZCBpdCB0byBtb2RtYWlsLiBCZXlvbmQgdGhhdCwgaWYgeW91IGRvbiBsaWtlIHRoZSBzdWJyZWRkaXQsIHBsZWFzZSBqdXN0IHVuc3Vic2NyaWJlIHJhdGhlciB0aGFuIGdldHRpbmcgZGlzdHJlc3NlZCBhYm91dCBpdC4KQW55d2F5cywgSSB0aGluayBpdCBkZXBlbmRzIG9uIHdoYXQgaGFwcGVuZWQgd2l0aCB0aGUgbWlncmFpbmUuIElmIHlvdSBoYXZlIGF1cmEgYW5kIGNhbid0IHNlZSwgZXhwbGFpbiB0aGF0IHRvIHlvdXIgcHJvZmVzc29yLiBJZiBpdCdzIGRpc3RyYWN0aW5nIHBhaW4sIGFsc28gZXhwbGFpbiwgYnV0IHJlYWxpemUgdGhleSdsbCBwcm9iYWJseSBiZSBhIGxpdHRsZSBza2VwdGljYWwuClRoZSBzY29wZSBvZiBhIHRoZW9yeSBpcyB0aGUgbGltaXRzIG9mIHdoZXJlIGl0IGlzIGFwcGxpY2FibGUuICdUaGUgVGhlb3J5IG9mIFVuc3VwcG9ydGVkIEZhbGxpbmcnIHN0YXJ0ZWQgb3V0IHdpdGggdGhlIHVuaXZlcnNlIGFzIHNjb3BlLiBUZXN0aW5nIGl0IHdpdGggc29tZXRoaW5nIGxpZ2h0ZXIgdGhhbiBhaXIgb3IgaW4gYSBzcGFjZXNoaXAgZGlzcHJvdmVkIHRoZSBvbGQgdGhlb3J5IGFuZCByZXBsYWNlZCBpdCB3aXRoIG9uZSB3aXRoIGEgbmFycm93ZXIgc2NvcGUsIHRoZSBmYWxsaW5nIG9iamVjdHMgaGFkIHRvIGJlIGhlYXZpZXIgdGhhbiBhaXIsIGFuZCB0aGUgbG9jYXRpb24gaGFkIHRvIGJlIEVhcnRoLi4gCkFueXdheXMsIEkgQW1lcmljYW4gYnV0IEkgc3RpbGwgbmVlZCB0byBiZSBzaWduZWQgb250byB0aGUgYmFzZSBieSBzb21lb25lLCBJIHdlbnQgbGFzdCB0aW1lIHdpdGggYSBmcmllbmQsIGFuZCB0aGV5IGV2ZW4gaGFkIHRvIHBheSBmb3IgbWUuIFVuZm9ydHVuYXRlbHksIHRoZXkgaGFkIGEgbmV3IGRlcGxveW1lbnQuIApBbmQgc3F1ZWV6ZSB5b3VyIGJhYmllcyBhIGxpdHRsZSB0aWdodGVyLiAKQXJlIGFsbCBhcmVhcyB3aGVyZSBwZW9wbGUganVzdCB3YW50IHNvIGJhZGx5IHRvIHZhbGlkYXRlIHRoZWlyIGV4aXN0ZW5jZSB3aXRoIHNvbWUgc29ydCBvZiBwb2xhcml6ZWQgc3VyZmFjZSBsZXZlbCBvcGluaW9uIGFib3V0IFggZXh0cmVtZWx5IGNvbXBsZXggbWF0dGVyIHdpdGggYSBjb21wbGV0ZSBsYWNrIG9mIHRob3JvdWdoIGVkdWNhdGlvbi4gVGhleSB1bmRlcm1pbmUgcGVvcGxlIHdobyBkZWRpY2F0ZWQgdGhlaXIgZW50aXJlIGxpdmVzIHN0dWR5aW5nIHRoZSBzdWJqZWN0IGJlY2F1c2Ugb2Ygc29tZSBuZXdzIGFydGljbGUgdGhhdCB0aGV5IHJlYWQgdGhhdCBmZWQgdGhlaXIgYmlhcy4uIApPbmxpbmUgbWFya2V0cGxhY2VzIGFyZSB0aGUgYmVzdCBwbGFjZXMgdG8gc2VhcmNoIHRoZXNlIHBsYXlpbmcgY2FyZHMuIApMb2NhdGVkIGluIHNvdXRoZWFzdGVybiBWaXJnaW5pYSwgd2hlcmUgdGhlIG1vdXRoIG9mIHRoZSBDaGVzYXBlYWtlIEJheSBtZWV0cyB0aGUgQXRsYW50aWMgT2NlYW4sIFZpcmdpbmlhIEJlYWNoIGhhcyBhbGwgdGhlIG1ha2luZ3MgZm9yIGFuIHVuZm9yZ2V0dGFibGUgc2Vhc2lkZSB2YWNhdGlvbi4gCiJJdCdzIGFib3V0IHRoZSBzaXplIG9mIGEgc29jY2VyIGZpZWxkLCIgSGlja3NvbiBzYWlkLiAiU28sIGlmIHlvdSB0aGluayBvZiBhIHNvY2NlciBmaWVsZCBhbmQgeW91IHB1dCB0aGF0IHNvY2NlciBmaWVsZCBvbiBpdHMgZW5kIHNvIHlvdSBoYXZlIHRoaXMgcGl0IGdvaW5nIGRvd24uIFRoaW5rIGFib3V0IHRoaXMgZ2lhbnQgY2lyY3VsYXIgb3Igb3ZhbCBob2xlIHRoYXQganVzdCBnb2VzIGRvd24gYW5kIGRvd24gYW5kIGRvd24uIApEbyB5b3UgZXZlciBtaXNzIHRoZSBzY2VudCBvZiBvcmFuZ2UgYmxvc3NvbXMgPyBJZiBzbywgdGhpcyxtYXkgYmUgdGhlIHNjcnViIHlvdSBoYXZlIGJlZW4gc2VhcmNoaW5nIGZvciAhIFRoaXMgaGFzIGhlcmJhbCBpbmZ1c2lvbnMgLCB2aXRhbWluIEUgYW5kIG9yZ2FuaWMgYnJvd24gc3VnYXIgLCBhbG1vbmQgb2lsICwgb3JhbmdlIHplc3QgYW5kIGhvbmV5IHRvIGhlbHAgd2l0aCBpbXByb3ZpbmcgY2lyY3VsYXRpb24gdGhyb3VnaCB5b3VyIGJvZHkuLEFic29yYnMgLCBleGNlc3Mgb2lscyBhbmQgaGFzIGFudGlveGlkYW50cyB0aGF0IG1heSBoZWxwIHNsb3cgdGhlIHNraW4gYWdpbmcgcHJvY2Vzcy4gSWYgeW91ciBza2luIGlzIHJvdWdoIG9yIGRyeSB0aGlzIHRyZWF0bWVudCBpcyBmb3IgeW91LiBUaGUga2V5IGluZ3JlZGllbnQgaXMgU2hlYSBCdXR0ZXIgZXh0cmFjdCB3aGljaCBwcm90ZWN0cyB0aGUgc2tpbiBmcm9tIGVudmlyb25tZW50YWwgY29uZGl0aW9ucyBhbmQgc2VhbHMgaW4gbW9pc3R1cmUuIFRoZXJlIGlzIGEgc2hvd2VyIGF2YWlsYWJsZSBmb3IgeW91ciBjb252ZW5pZW5jZSB3aXRoIG5vIGFkZGl0aW9uYWwgY2hhcmdlIHRvIHlvdS4KVEhFIElOQ09NRSBQQVJUTkVSU0hJUCBQUk9HUkFNMy4gVEhFIENVU1RPTUVSIEMwVVJURVNZIE1BU1NBR0UgUFJPR1JBTTEuIE1BU1NBR0UgUFJJQ0VEIEJZIFRIRSBIT1VSVGhpcyBpcyB0aGUgbW9zdCBiYXNpYyBwcm9ncmFtIHdlIG9mZmVyIGFuZCBpcyBkZXNpZ25lZCB0byBzZXJ2ZSBhcyBhIHB1YmxpYyByZWxhdGlvbnMgY3VzdG9tZXIgc2VydmljZSBldmVudCBvciBhcyBhbiBlbXBsb3llZSBiZW5lZml0LldlIHNldCB1cCBvdXIgbWFzc2FnZSBjaGFpcnMgb3IgYSB0aGVyYXB5IHRhYmxlIG5lYXIgb3IgYXJvdW5kIHlvdXIgb2ZmaWNlLCBldmVudCwgb3IgcGFydHkuVGhlIGZlZSBpcyBiYXNlZCBvbiB0aGUgbnVtYmVyIG9mIGNoYWlycy90YWJsZXMgYW5kIHdvcmtlcnMgcmVxdWlyZWQsIHRoZSBudW1iZXIgb2YgaG91cnMgYm9va2VkIGFuZCB0aGUgbG9jYXRpb24gb2YgdGhlIGV2ZW50LiAKU2hlIGdldHMgbWUgYW5kIGJ1aWxkcyBtZSB1cCBhbmQgc3VwcG9ydHMgbWUgaW4gZXZlcnkgY29uY2VpdmFibGUgd2F5LiBXZSBiZWVuIG1hcnJpZWQgZm9yIDYgeWVhcnMgYW5kIGl0IGZlZWxzIGxpa2Ugbm8gdGltZSBoYXMgcGFzc2VkIGF0IGFsbC4uIApTaGUgd2FzIHlvdW5nIGFuZCBoYWQgbXkgcGFyZW50cyBhbmQgdGhlIHNhbG9uIG93bmVyIGxheWluZyBpbnRvIGhlci4gCkhvd2V2ZXIsIHRoYXQgaXMgd2hlcmUgdGhlIHNpbWlsYXJpdHkgZW5kcy4gCk1vZGVybmlzdGUgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVGhlIFRGU0FzIHdvdWxkIHJpc2UgdG8gJDI4MCw5MDAuIApHbyBpbnRvIHRoZSByb29tLiBXZSdkIHdhbnQgdG8ga25vdyBtb3JlIGFib3V0IGFueWJvZHkgd2hvIHdhcyBzZXF1ZXN0ZXJlZCBpbiBhIHJvb20gZm9yIG1vcmUgdGhhbiAxMiBob3Vycy4uIApJJ3ZlIGhhZCBjbGllbnRzIGFzc2F1bHQgbWUsIGNhbGwgbWUgc2N1bS9ncmVlZHkvbGlhciwgYSBraWxsZXIuIEkgbG92ZSBhbmltYWxzLiBJIHdhbnQgdG8gaGVscCB5b3UgYW5kIGRvIHRoZSBiZXN0IEkgY2FuIGZvciB3aGF0IHlvdSBjYW4gYWZmb3JkLiBJIHdpbGwgdHJ5IG15IGFic29sdXRlIGhhcmRlc3QgYW5kIEkgd2lsbCBhbHdheXMgYmUgaG9uZXN0IHdpdGggeW91LiBJIGdldCBubyBjdXRiYWNrcywgbm9uZSBvZiBpdCBnb2VzIGluIG15IHBvY2tldC4gSSBtYWtlIHRoZSBzYW1lIHdoZXRoZXIgSSdtIG91dCBpbiAxMiBob3VycyBvciB0aGVyZSBmb3IgMTcgaG91cnMuCkkgaG9wZSBCR1MgaXNuIHRvbyBmb2N1c2VkIG9uIGdyb3VuZGluZyBpdCBpbiBzY2llbmNlLiBJdCBjb3VsZCB3b3JrIGlmIHRoZXkgY29tZSB1cCB3aXRoIHNjaWVuY2UgZm9yIHRoZSBzcGVjaWFsIHBvd2VycyAobGlrZSB3aXRoIEJpb3RpY3MgaW4gTUUpLCBidXQgbW9zdCBwZW9wbGUgdGFsa2luZyBhYm91dCBncm91bmRpbmcgaXQgcHJvYmFibHkgbWVhbiB0aGV5IHdhbnQgaXQgdG8gYmUgaGFyZCBzY2llbmNlLCBldmVuIGlmIGl0IGlzIHN0aWxsIHNjaSBmaS4gSSBmZWVsLCBkZXNwaXRlIHdoYXQgc29tZSB3aWxsIHNheSwgdGhhdCB3b3VsZCBsaW1pdCB5b3VyIHBsYXkgc3R5bGUgdG9vIG11Y2gsIGV2ZW4gaWYgdGhlcmUgd2VyZSBkaWZmZXJlbnQgZmFjdGlvbnMgYW5kIGVuZGluZ3MuIApIdW5nYXJ5LiAKQXNrZWQgaG93IGl0IG1hZGUgaGltIGZlZWwsIHRoZSBjb21wbGFpbmFudCByZXNwb25kZWQ6IEluIHNob2NrLiBJIGRpZG4ga25vdyBob3cgdG8gcmVhY3Qgb3Igd2hhdCB0byBzYXkgdG8gaGltLiAKWW91IGFsc28gZG9uIEhBVkUgdG8gYmUgYSBtb3RoZXIgZmlndXJlIChhbmQgZnJvbSB5b3VyIHByZXZpb3VzIHJlcGxpZXMsIGl0IHNlZW1zIGxpa2UgdGhpcyBoYXMgYWxyZWFkeSBiZWVuIGVzdGFibGlzaGVkIGJldHdlZW4geW91IGFuZCB5b3VyIGh1c2JhbmQpLiBBbGwgeW91IGhhdmUgdG8gZG8gaXMgYmUgaW5jbHVzaXZlIGFuZCB1bmRlcnN0YW5kaW5nIHRvIGEgY2hpbGQuIApJIHdhbnRlZCB0byBicmluZ3NvbWV0aGluZyBkaWZmZXJlbnQgdG8gdGhlIHRhYmxlLiAKVGhpcyBlbGVjdHJvbmljIGdhbWluZyBzeXN0ZW0gYWxsb3dzIHlvdSB0byBwbGF5IGF0IGhvbWUsIG9yIGV2ZW4gYXdheSBmcm9tIGhvbWUhIE1hbnkgaW5kaXZpZHVhbHMgZW5qb3kgdGhlIGNvbnZlbmllbmNlIHRoYXQgdGhlIHBvcnRhYmlsaXR5IG9mZmVycy4uIApUaGUgbmV4dCB0aGluZyB0aGF0IHlvdSBtdXN0IGNvbnNpZGVyIHdoZW4gaXQgY29tZXMgdG8gZGlzY292ZXJpbmcgdGhlIHZhbHVlIG9mIHlvdXIgcG9rZXIgY2hpcHMgaXMgdGhlaXIgb3ZlcmFsbCBhcHBlYXJhbmNlLiAKUmV0cmFpbmluZyB0YWtlcyB0aW1lLiBJbnN0ZWFkIG9mIHdhaXRpbmcgZm9yIHBlb3BsZSB0byBsb3NlIHRoZWlyIGpvYnMsIGNpdGllcyBhbmQgYnVzaW5lc3MgbWF5IG5lZWQgdG8gaW52ZXN0IGluIHJldHJhaW5pbmcgbm93IGFuZCBjb21lIHVwIHdpdGggcGxhbnMgZm9yIHBlb3BsZSB3aG8gY2FuJ3QgbWFrZSB0aGUgdHJhbnNpdGlvbiwgbGlrZSBvbGRlciBlbXBsb3llZXMuCklDVSBvdXRjb21lcyBpbiB2ZXRlcmFucwpBc2lhbiBNYXNzYWdlJ3MgYXBwbGljYXRpb24gZm9yIHRoZSBwZXJtaXQgaW5pdGlhbGx5IGNhbGxlZCB0aGUgYnVzaW5lc3MgVGFpIE1hc3NhZ2Ugd2l0aCBNaWNoYWVsIFNoZXJtYW4gYXMgdGhlIG93bmVyLCBidXQgdGhvc2UgbmFtZXMgbGF0ZXIgd2VyZSBjcm9zc2VkIG91dC4KSG93ZXZlciwgYWxsIHlvdSBoYXZlIHRvIGRvIGlzIHNwZWFrIHdpdGggdGhlaXIgcmVjZXB0aW9uaXN0IGF0IHRoZSBmcm9udCBkZXNrLiAKV2l0aCByZW50aW5nIHlvdXIgbW9uZXkgaXMganVzdCBnb25lLCB6ZXJvIFJPSS4uIApXYXNoaW5ndG9uIFBvc3QKSGVyZSwgdGhlIG9ubHkgTmV3IFplYWxhbmQgc3RhZmYgbWVtYmVyIGNhbiBiZSBmb3VuZDogcGVyc29uYWwgdHJhaW5lciBFcmljayBQZXJzc29uLCBib3JuIGFuZCBicmVkIGluIE10IE1hdW5nYW51aS4uIApBY2NvcmRpbmcgdG8gdGhlIFByb2plY3QsIGl0cyBtZW1iZXJzIGJlbGlldmVkIHRoYXQuIApUZXhhcyBTaG9vdGluZyBWaWN0aW1zCkMnZXN0IHBvdXIgY2V0dGUgcmFpc29uIHF1ZSBsZXMgcG9saXRpcXVlcyBwdWJsaXF1ZXMgdG91Y2hhbnQgbGVzIGR0ZXJtaW5hbnRzIGRlIGxhIHNhbnQgICBxdWUgY2Ugc29pdCBsJ2R1Y2F0aW9uLCBsZSB0cmF2YWlsLCBsYSBzYW50LCBsZXMgdHJhbnNwb3J0cywgbCdlbnZpcm9ubmVtZW50ICAgdmlzZW50ICBkaW1pbnVlciBsZXMgaW5nYWxpdHMgZW4gc2FudCBlbiBhZ2lzc2FudCBzdXIgbGV1cnMgY2F1c2VzLiBDZXMgaW5nYWxpdHMgZW4gc2FudCBzb250IHBhcmZvaXMgYWJ5c3NhbGVzLiAKTG9sIG5vIHRoZSBuYXJyYXRpdmUgaXMgbm90IGNvcnJlY3QuIApBZGRpdGlvbmFsbHksIGFzIGFtYXppbmcgYXMgb3VyIGZsYWlyIHBhbmVsIGlzLCB3ZSBzaG91bGQgYWxzbyBwb2ludCBvdXQgdGhhdCAvci9Bc2tIaXN0b3JpYW5zIGlzIG5vdCBhIHByb2Zlc3Npb25hbCBoaXN0b3JpY2FsIGNvbnN1bHRhdGlvbiBzZXJ2aWNlLiAKQXMgYSByZXN1bHQsIHB1bmRpdHMgZXhwZWN0IGhvdXNpbmcgYWZmb3JkYWJpbGl0eSBhbmQgbW9ydGdhZ2Ugc3RyZXNzIHRlc3RzIHRvIGZpZ3VyZSBwcm9taW5lbnRseSBhcyB0aGUgcG9saXRpY2FsIHBhcnRpZXMgZ2VhciB1cCBmb3IgdGhlIE9jdG9iZXIgMjAxOSBlbGVjdGlvbnMuCkluIHRydXRoIHdlIGhhdmUgZm9yc2FrZW4gdGhlIHJpZ2h0IHRvIGNhbGwgSXFiYWwgb3VyIG5hdGlvbmFsIHBvZXQuIFdoYXQgY29tbW9uYWxpdHkgaXMgdGhlcmUgYmV0d2VlbiBoaXMgcG9ldHJ5IGFuZCBvdXIgd2F5IG9mIGxpZmU/IFRoZSB3YXkgb3VyIGxlYWRlcnMgY29uZHVjdCB0aGVtc2VsdmVzICAgZmF3bmluZyB3aGVuIHRoZXkgc2hvdWxkIGtub3cgYmV0dGVyIG5vdCB0bywgbGlzdGVuaW5nIHRvIGxlY3R1cmVzIHdoZW4gdGhleSBzaG91bGQgaGF2ZSB0aGUgd2l0IGFuZCB1bmRlcnN0YW5kaW5nIHRvIGVkdWNhdGUgZm9yZWlnbmVycyBhYm91dCB0aGUgcmVhbGl0eSBvZiBQYWtpc3RhbiBhbmQgaXRzIG5laWdoYm91cmhvb2QgICBzaG93cyBubyBzeW1wYXRoeSBvciBjb25uZWN0aW9uIHdpdGggSXFiYWwuIFRoZXJlIHNob3VsZCBiZSBubyBjb21tZW1vcmF0aW9uIG9mIElxYmFsIERheSBhbmQgbm8gY2hhbmdpbmcgb2YgdGhlIGd1YXJkIGF0IGhpcyB0b21iICAgYmV0d2l4dCBMYWhvcmUncyBncmVhdCBtb3NxdWUgYW5kIHRoZSBpbXBvc2luZyBmYSBvZiBBa2JhcidzIGZvcnQgICB1bnRpbCB3ZSBsZWFybiB0byBjb25kdWN0IG91cnNlbHZlcyB3aXRoIGdyZWF0ZXIgbmF0aW9uYWwgZGlnbml0eS4KTWlsZXMgQW5nZWxvLCBleGVjdXRpdmUgY2hlZiBhdCB0aGUgQ2FyaWJvdSwgc2VydmVkIGRlbGljaW91cyBkaXNoZXMgd2hpbGUgV29vZHkgQ3JlZWsgRGlzdGlsbGVycyBwb3VyZWQgTHVja3kgTGFkeSBSaHViYXJiIE1hcnRpbmlzLiAKTUlBTUkgKEFQKSAgIEh1cnJpY2FuZSBJcm1hIGdhdmUgRmxvcmlkYSBhIGNvYXN0IHRvIGNvYXN0IHB1bW1lbGluZyB3aXRoIHdpbmRzIHVwIHRvIDEzMCBtcGggU3VuZGF5LCBzd2FtcGluZyBob21lcyBhbmQgYm9hdHMsIGtub2NraW5nIG91dCBwb3dlciB0byBtaWxsaW9ucyBhbmQgdG9wcGxpbmcgbWFzc2l2ZSBjb25zdHJ1Y3Rpb24gY3JhbmVzIG92ZXIgdGhlIE1pYW1pIHNreWxpbmUuCkEgY291cGxlIGVhcmx5IHBvc2l0aW9uIGxpbXBzIGZyb20gZHJ1bmsga2lkcyBJJ20gdHJ5aW5nIHRvIHBsYXkgcG90cyB3aXRoLCBJIGxpbXAgaW4gdGhlIEhKIHdpdGggMTBjOGMuIEJ1dHRvbiBtYWtlcyBpdCAxNywgSSBjYWxsLCB1dGcgY2FsbHMuIEZsb3AgaXMgSjk0ciBvbmUgY2x1Yi4gClRoZXNlIGFyZWFzIG1heSBiZSB0YXJnZXRzIGZvciBzdXJ2ZWlsbGFuY2UgYW5kIGFycmVzdHMgYnkgbGF3IGVuZm9yY2VtZW50LiAKVGhlc2UgZmllbGRzIGFyZSB0aGUgZnV0dXJlIG9mIHRoZSB0ZWNobm9sb2d5IGluZHVzdHJ5LCBzbyBtdWNoIHNvIHRoYXQgVmlyZ2luaWEgVGVjaCByZWNlbnRseSBhbm5vdW5jZWQgaXRzIHBsYW4gdG8gb3BlbiBhbiBJbm5vdmF0aW9uIENhbXB1cyBpbiBBbGV4YW5kcmlhLCBWYS4gICB0d28gbWlsZXMgZnJvbSBBbWF6b24ncyBuZXcgbG9jYXRpb24gaW4gQXJsaW5ndG9uICAgZm9jdXNpbmcgb24gY29tcHV0ZXIgc2NpZW5jZSwgY29tcHV0ZXIgZW5naW5lZXJpbmcgYW5kIHNvZnR3YXJlIGVuZ2luZWVyaW5nLiBUaGlzIGFubm91bmNlbWVudCBpbiBhIG1ldHJvcG9saXRhbiBhcmVhIGFscmVhZHkgcmVjb2duaXplZCBhcyBhIHRvcCBwcm9kdWNlciBvZiBoaWdobHkgc2tpbGxlZCB0YWxlbnQgc2hvd3MgdGhhdCB0aGUgbmVlZCBmb3IgbW9yZSB0ZWNoIGdyYWR1YXRlcyB3aWxsIG9ubHkgY29udGludWUgdG8gaW5jcmVhc2UgYWNyb3NzIHRoZSBjb3VudHJ5Li4gCkludGVyZXN0aW5nbHksIGVwaWNhdGVjaGluIHdhcyBlc3BlY2lhbGx5IGVmZmVjdGl2ZSBpbiBlbmhhbmNpbmcgbWVtb3J5IGZ1bmN0aW9uIGFuZCBzeW5hcHRpYyBwbGFzdGljaXR5IHdoZW4gY29tYmluZWQgd2l0aCB2b2x1bnRhcnkgZXhlcmNpc2UgWzEyXS4gU2ltaWxhciByZXN1bHRzIHdlcmUgcmVwb3J0ZWQgZm9yIHRoZSBjb21iaW5hdGlvbiBvZiBmaXNoIG9pbCBhbmQgd2hlZWwgcnVubmluZyBpbiByYXRzLiBPbWVnYSAzIGZhdHR5IGFjaWQgY29uc3VtcHRpb24gYm9vc3RlZCB0aGUgZWZmZWN0IG9mIGV4ZXJjaXNlIG9uIHNwYXRpYWwgbGVhcm5pbmcsIHN5bmFwdGljIHBsYXN0aWNpdHkgYW5kIGhpcHBvY2FtcGFsIGJyYWluIGRlcml2ZWQgbmV1cm90cm9waGljIGZhY3RvciAoQkRORikgcHJvdGVpbiBsZXZlbHMgWzEzXS4gCkdlbmVyYWwgRHluYW1pY3MKRWxsZSBtJ2V4cGxpcXVlIG4ndHJlIHBhcyBhdSBjb3VyYW50LCBldCBwcm9jZGUgaW1tZGlhdGVtZW50ICBsJ2FmZnJhbmNoaXNzZW1lbnQgZW4gdGFyaWYgbGV0dHJlIHNhbnMgYXV0cmUgZGlmZmljdWx0LiAKT25lIHRoaW5nIHRoYXQgY2FuIHNhdmUgeW91IGZyb20gc29tZSBwaW5uaW5nIGlzIHNjb3JpbmcuIApMaWtlIGl0IGRvZXNuJ3QgbWF0dGVyIHRoYXQgODAgbWlsbGlvbiBwZW9wbGUgZ290IGhlcmUgZmlyc3Qgb3ZlciB0aGUgU2liZXJpYW4gbGFuZCBicmlkZ2UsIGVhdGluZyBoYWlyeSBtYW1tb3RocyBhbmQgYmF0dGxpbmcgc2FiZXIgdG9vdGggdGlnZXJzLiAKVW5sZXNzIHNvbWVvbmUgY2FuIG1ha2UgYSBmbHVzaCBvciBhIHN0cmFpZ2h0IGZsdXNoLCAoZm9yIGV4YW1wbGUsIGlmIHRoZSBRS0Egb24gdGhlIGJvYXJkIGFyZSBhbGwgdGhlIHNhbWUgc3VpdCBhbmQgcGxheWVyIDEgaGFzIEogMTAgaW4gdGhhdCBzdWl0KSwgdGhlIHBvdCBpcyBzcGxpdCBlcXVhbGx5IGFtb25nIHRoZSA0IHBsYXllcnMuIElmIHR3byBvciBtb3JlIHBsYXllcnMgbWFrZSB0aGUgc2FtZSBoYW5kIChvciBoYW5kcyB0aGF0IHJhbmsgdGhlIHNhbWUpIHRoZW4gdGhlIHBvdCBpcyBzcGxpdC4gSW4gdGhpcyBjYXNlLCBhc3N1bWluZyBubyBhdmFpbGFibGUgZmx1c2hlcywgZWFjaCBwbGF5ZXIgbWFrZXMgYW4gQWNlIGhpZ2ggc3RyYWlnaHQuIApIYXZpbmcgdHdvIHBhc3Nwb3J0cyBpcyBhbHdheXMgbmljZSwgYW5kIG1heWJlIGEgam9iIG9wcG9ydHVuaXR5IHdpbGwgY2hhbmdlIHlvdXIgbWluZCBpbiB0aGUgZnV0dXJlLi4gClBvc3QgQ2l2aWwgV2FyIEFtZXJpY2EgaGFkIHRvIGRlY2lkZSBhZ2FpbiBhbmQgYWdhaW4sIGluIGxlZ2FsIGNhc2VzIGxpa2UgUGxlc3N5IHYuIApJIHdhcyBkcml2aW5nIGhvbWUgZnJvbSB3b3JrIG9uIGEgcmVhbGx5IGNvbGQgbmlnaHQuIEkgd2FzIHB1bGxpbmcgdXAgdG8gYSBzdG9wIGxpZ2h0OyB0d28gbGFuZXMgSSBhIGZldyBjYXJzIGJlaGluZC4gVGhlIGxpZ2h0IHR1cm5zIGdyZWVuIGFuZCBvbmUgaWYgdGhlIGZpcnN0IGNhcnMgaW4gdGhlIHJpZ2h0IGxhbmUgaXNuIG1vdmluZy4gCkJlbnRvbml0ZSBjbGF5IChhdmFpbGFibGUgYXQgeW91ciBuYXR1cmFsIGZvb2Qgc3RvcmUpIHBvdWx0aWNlcyBhcmUgb2YgZ3JlYXQgaGVscCBmb3IgbW9yZSBwYWluZnVsIHN0aW5ncyBvciBiaXRlcy4gClRleHRlIGludGdyYWwgZGUgbGEgRGNsYXJhdGlvbiBkZXMgRHJvaXRzIGRlIGwnSG9tbWUgZXQgZHUgQ2l0b3llbiBkZSAxNzg5IDoKTm93IHRoYXQgSSd2ZSBraWNrZWQgbXkgYWRkaWN0aW9uIGFuZCBzdGFydGVkIHRvIHdvcmsgb24gbXlzZWxmLCBJIGp1c3QgZG9uJ3Qga25vdyBob3cgdG8gbmF2aWdhdGUgZGF0aW5nIGFuZCBJIGZlZWwgbGlrZSB3b21lbiBjYW4gcGljayB1cCBvbiBteSBpbmV4cGVyaWVuY2UuIAoxMyBXaG9sZSB0b3ducyB3ZXJlIGFiYW4gIGRvbmVkIHRvbmlnaHQgdG8gdGhlIGJyb3duIGZ1cnkgb2YgdGhlIE1pc3NvdXJpIFJpdmVyJ3Mgd29yc3QgZmxvb2QgYXMgdGhlIGdvdmVybm9ycyBqIG9mIHR3byBzdHJpY2tlbiBzdGF0ZXMgYXNrZWQgaSBoZWxwIGZyb20gdGhlIGZlZGVyYWwgZ292ZXJuICBtZW50LiBUaGUgcmFnaW5nICJCaWcgTXVkZHkiIHBvdW5kICBlZCBhdCBTaW91eCBDaXR5IGFuZCBtb3JlIHRoYW4gMzAuMDAwIHBlcnNvbnMgZmxlZCB0aGVpciBob21lcyBkb3duc3RyZWFtIGF0IE9tYWhhLCBOZWIgYW5kIENvdW5jaWwgQmx1ZmZzLCBsYS4gCkJleW9uZCB0aGF0LCB0aGUgbW9zdCBiYXNpYyBhcmd1bWVudCBmb3IgdGhlIHNlcGFyYXRpb24gb2Ygc2V4IGFuZCBnZW5kZXIgaXMgdGhlIGV4aXN0ZW5jZSBvZiB0cmFucyBwZW9wbGUgaXRzZWxmLiBVbmxlc3MgeW91ciBhcmd1bWVudCBpcyB0aGF0IHRyYW5zIHBlb3BsZSBzaG91bGQgbm90IGJlIGFjY2VwdGVkLCB0aGF0IHRoZWlyIGlkZW50aXRpZXMgYXJlIGludmFsaWQsIGFuZCB0aGF0IHRoZWlyIHN5bXB0b21zIGFyZSBhbGwgcHVyZWx5IGR1ZSB0byBtZW50YWwgaWxsbmVzcywgeW91IGhhdmUgdG8gYWNrbm93bGVkZ2UgdGhhdCBzZXggYW5kIGdlbmRlciBjYW4gYmUgZGlmZmVyZW50LiAKSSBqdXN0IHRoaW5raW5nIHdoYXQgd291bGQgSSBkbyBpZiBzaGUgd2FzIG15IGhlbHBlci4gSSB3b3VsZCBoYXZlIGtlcHQgaGVyIG9uIGFuZCBoaXJlZCBhIGhvdXJseSBtYWlkIGZvciBhIGZldyBtb250aHMgc28gc2hlIHdvdWxkIGhhdmUgYSBjaGFuY2UgYXQgZmlnaHRpbmcgdGhlIGNhbmNlci4gVGhlIHJlY292ZXJ5IHRpbWUgZm9yIHJlbW92aW5nIHlvdXIgY2Vydml4IGlzbiB0b28gbG9uZyBhbmQgdGhlcmUgYSBnb29kIGNoYW5jZSBzaGUgYmUgYWJsZSB0byB3b3JrIGFnYWluIGluIDYgOCB3ZWVrcyB0aW1lLCBidXQgc2NoZWR1bGluZyBmb3Igc3VyZ2VyeSB3aWxsIGFsc28gdGFrZSB3ZWVrcyBhbmQgdGhlcmUgbm8gZ3VhcmFudGVlIHRoYXQgdGhlIGNhbmNlciB3aWxsIGJlIGdvbmUgYWZ0ZXIgc3VyZ2VyeS4KSSB3b3VsZCBjYWxsIDAlIG9mIHRoZSB0aW1lIG9uIHRoZSByaXZlciBpZiBJIGRpZG4gaGF2ZSBhYnNvbHV0ZWx5IHRoZSBiZXN0IGFuZCB3aGljaCBhbG1vc3QgYWx3YXlzIHdhcyBhdCBsZWFzdCB0b3AgcGFpciB0b3Aga2lja2VyIGlmIG5vdCB0d28gcGFpciBleGNldGVyYSBvbmUgZGF5IEkgd2FzIHdhdGNoaW5nIFBhdHJpayBBbnRvbml1cyBwbGF5IFBoaWwgSXZleSBvbiBmdWxsIHRpbHQgb24gYSA0MDAgODAwIHRhYmxlIGFuZCBJIGJhc2ljYWxseSB3YXRjaGVkIFBhdHJpayBBbnRvbml1cyBjYWxsIFBoaWwgSXZleSBkb3duIHdpdGggNCAzIG9mZnMgYWdhaW5zdCBQaGlsIGl2ZXkgMyAyIG9mZiwgbmVpdGhlciBvZiB0aGVtIG1ha2luZyBhIHNpbmdsZSBwYWlyIG9uIHRoZSBib2FyZCwgQW50b25pbyBpcyBjYWxsaW5nIGEgc29tZXdoYXQgbGFyZ2Ugcml2ZXIgYmV0ICwgbXkgcmVjb2xsZWN0aW9uIHdhcyBzb21ld2hlcmUgYXJvdW5kICQxNDAsMDAwICwuIApZb3VyIG11c2ljIGhhcyBiZWVuIGEgc3RhcGxlIGluIG15IHBsYXlsaXN0cyB0aHJvdWdoIDQgeWVhcnMgb2YgY29sbGVnZSBhbmQgNSB5ZWFycyBvZiBncmFkIHNjaG9vbC4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc011c2ljIGFuZCBHaWdzVFYgR3VpZGVSQUNJTkcgTWluaXN0ZXIgUGF1bCBUb29sZSBzYXlzIHRoZSBOU1cgR292ZXJubWVudCBpcyBsb29raW5nIGF0IHBva2VyIG1hY2hpbmVzIGFuZCB0aGVpciBpbXBhY3QgYXMgcGFydCBvZiBhIGN1cnJlbnQgcmV2aWV3LiAKVGhleSBhbHNvIG9mZmVyIGZsZXhpYmxlIHNjaGVkdWxlIGZvciB0aGVpciBtYXNzYWdlIGNsYXNzZXMuIApMb3ZlIHlvdS4gCk5vdCBhbGwgaW5mb3JtYXRpb24gaXMgY29udHJvbGxlZCBieSB0aGUgZ292ZXJubWVudC4KUHVibGljIGRvbWFpbgpBcyB0cnVlIGFzIHRoYXQgaXMsIE9QIGlzbiBoaXMgYnJvdGhlciBnaXJsZnJpZW5kIHRoZXJhcGlzdCBhbmQgaGVyIHByb2JsZW1zIGFyZW4gaGlzIHRvIHNvbHZlLiBIZXIgY29uZGl0aW9uIGlzbiBhbiBleGN1c2UgZm9yIGVhdGluZyBzb21lb25lIGVsc2UgZm9vZCBlaXRoZXIuIFlvdSBjYW4gaGF2ZSBhbiBvdmVyZWF0aW5nIHByb2JsZW0gYW5kIGp1c3QgZWF0IHlvdXIgb3duIGZvb2QsIHNvIGhlciBlYXRpbmcgYWxsIG9mIHRoZXNlIHJvb21tYXRlcyBmb29kIGlzIGRlZmluaXRlbHkgYW4gYXNzaG9sZSBtb3ZlLiBJdCBvbiBPUCBicm90aGVyIHRvIGFjdHVhbGx5IGRlYWwgd2l0aCB0aGUgc2l0dWF0aW9uIGFuZCBoZSBoYXNuIGFuZCBPUCBkb2VzbiBoYXZlIGFueSBvdGhlciB3YXkgdG8gZGVhbCB3aXRoIHRoaXMgYmVzaWRlcyBoZWxwaW5nIGhlciBzb2x2ZSBoZXIgZWF0aW5nIGRpc29yZGVyIGhpbXNlbGYgd2hpY2ggaGUgc2hvdWxkbiBiZSBleHBlY3RlZCB0byBkbyBhbmQgZXNwZWNpYWxseSBub3QgYWZ0ZXIgYmVpbmcgcmVwZWF0ZWRseSBkaXNyZXNwZWN0ZWQgYnkgaGVyIGVhdGluZyBhbGwgaGlzIGZvb2QuIFRoZSB0aGluZ3MgT1AgYW5kIHRoZSBvdGhlciByb29tbWF0ZXMgaGF2ZSBiZWVuIHNheWluZyBhcmUgZGVmaW5pdGVseSB2ZXJ5IG1lYW4gYnV0IEkgc3RpbGwgdGhpbmsgaGUgTlRBLgpNeSBmYW1pbHkgaGFzIG5vIGNsdWUuIApXYXMgc3VycHJpc2VkIGJ5IGhvdyBxdWlja2x5IGV2ZXJ5dGhpbmcgbW92ZXMsIERvYnJldiBzYWlkIGluIGFuIGludGVydmlldyB3aXRoIENCUyBMb2NhbC4gVGhlIGZlYXIgb2YgZmFpbGluZyBjYW4gYmUgcG90ZW50aWFsbHkgb3ZlcndoZWxtaW5nLCBidXQgZm9yIG1vc3Qgb2YgdGhlIHRpbWUgaXQgd29ya3Mgb3V0IHJlYWxseSB3ZWxsLiBwbGF5cyB0aGUgbGVhZCBvZiB0aGUgc2hvdyBuYW1lZCBDbGVtLCB3aG8gaGFzIGp1c3QgZ290dGVuIGVuZ2FnZWQgYW5kIGFsc28ganVzdCBmb3VuZCBvdXQgdGhhdCBoZXIgaGFsZiBzaXN0ZXIgaXMgbW92aW5nIGluIHdpdGggaGVyIGFuZCBoZXIgZmlhbmMgVGhlIGFjdHJlc3MgY28gc3RhciBpcyBUb25lIEJlbGwsIHdobyBzaGUgd29ya2VkIHdpdGggcHJldmlvdXNseSBhbmQgYWxyZWFkeSBoYWQgYSBncmVhdCByZWxhdGlvbnNoaXAgd2l0aC4KQ2F2ZSEgVGhlIERlbnZlciBCcm9uY29zIGFyZSBwbGF5aW5nISBMZXQgYWxsIGdldCB0b2dldGhlciBhbmQgc2NyYXRjaCBvdXIgYmFsbHMhIEkgdGhpbmsgaXQgbmljZSB3aGVuIHlvdSBzZWUgYSByZWxhdGlvbnNoaXAgYmV0d2VlbiB0d28gbWVuIHVuZm9sZCBpbiBhIHZlcnkgYWR1bHQgZHluYW1pYywgYW5kIGEgd2F5IHRoYXQgaGFzIG51YW5jZSBhbmQgcmVhbGl0eS4gCkJpemFycmUgVGl0bGVzIHdpdGggUmVhbCBDb250ZW50Ckkgb3JpZ2luYWxseSBzYXcgdGhlIGlkZWEgb24gUGludGVyZXN0LCBwaW5uaW5nIGl0IGJ1dCBuZXZlciBvcGVuaW5nIGl0LCBzbyBJIGtpbmQgb2YgdG9vayBteSBvd24gYXBwcm9hY2guIFRoaXMgaXMgdGhlIHBpY3R1cmUgbGlua2VkIHRvIHRoZSBwaW46ClNjdWxwdHVyZXMgYmVjYW1lIG1vcmUgYW5kIG1vcmUgbmF0dXJhbGlzdGljLiAKQXQgbGV2ZWwgdHdvIHlvdSBzdGFydCB0aGlua2luZyBhYm91dCB3aGF0IGhhbmQgeW91ciBvcHBvbmVudCBoYXMsIHRyeWluZyB0byBwdXQgdGhlbSBvbiBhIHJhbmdlIG9mIGhhbmRzIGJhc2VkIG9uIHRoZWlyIHBsYXkgYW5kIGFkanVzdGluZyB5b3VyIHBsYXkgYWNjb3JkaW5nbHkuIApSaWNoYXJkRWxyaWMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpMdWNraWx5LCBNaW5uZXNvdGEgaXMgYSBzdGF0ZSBvZiBpbm5vdmF0b3JzLCBhIGxhbmQgd2hlcmUgYnJpbGxpYW50IG1pbmRzIGNhbiBzcGl0YmFsbCBpZGVhcyBsaWtlICJob3cgYWJvdXQgYSBnaWFudCBidWlsZGluZyBmaWxsZWQgd2l0aCBkaWZmZXJlbnQgcmV0YWlsZXJzIGFuZCBzdXJyb3VuZGVkIGJ5IGFjcmVzIG9mIGZyZWUgcGFya2luZyIgYW5kIG5vdCBnZXQgbGF1Z2hlZCBvdXQgb2YgdG93bi4gCk1pbm9ydm9nb25wb2V0IGhhcyBjb21lIHVwIHdpdGggYSBmdW4gbWVtb3J5IHRvIGFuc3dlciBib2JzdGFmZm9yZCdzIGNoYWxsZW5nZS4gSSByYW1ibGUgb246IGlmIHlvdSByZWFkIGl0LCB5b3UnbGwgZmluZCBvdXQgd2h5IHRoZXJlJ3MgYSBmcm9nIGluIHRoYXQgb2ZmaWNlIHBob3RvLiAKQSBjb3JydXB0LCBsb3cgbGV2ZWwgY29wIHdpdGggYSBoZWFsdGh5IGRvc2Ugb2Ygc3RyZWV0IHNtYXJ0cyByaXNlcyB0byBjb250cm9sIGh1bmRyZWRzIG9mIGlsbGVnYWwgZ2FtYmxpbmcgZGVucyBpbiBQYWtpc3RhbiBsYXJnZXN0IGNpdHkuIApOZXZlcnRoZWxlc3MgaXQgZG9lcyB0aGUgam9iIGFuZCBpcyBhcyBmb3JnaXZpbmcgYXMgSmVzdXMgaGltc2VsZi4gCkNhcmliYmVhbiBTdHVkIFBva2VyIEFsdGhvdWdoIENhcmliYmVhbiBjYXNpbm9zIGJ5IGFuZCBsYXJnZSBmZWF0dXJlIHRhYmxlIGdhbWVzIHRoYXQgaGF2ZSBiZWVuIHBvcHVsYXIgd29ybGR3aWRlIGZvciBkZWNhZGVzLCB0aGUgcmVnaW9uIGhhcyBwcm9kdWNlZCBhbiBpbm5vdmF0aW9uIHRoYXQgaXMgdW5pcXVlbHkgQ2FyaWJiZWFuLiBJdCdzIGEgdmFyaWF0aW9uIG9mIHBva2VyIGtub3duIGFzIENhcmliYmVhbiBTdHVkLCBhbmQgaXRzIG9yaWdpbnMgYXJlIHRoZSBzdWJqZWN0IG9mIGRlYmF0ZS4gU29tZSBjbGFpbSBpdCBvcmlnaW5hdGVkIGluIGFuIEFydWJhbiBjYXNpbm8sIHdoaWxlIG90aGVycyBzdWdnZXN0IHRoZSBnYW1lIHdhcyBkZXZlbG9wZWQgb24gYSBjcnVpc2Ugc2hpcCBzYWlsaW5nIHRvIEFydWJhLiBJbiBhbnkgY2FzZSwgQ2FyaWJiZWFuIFN0dWQgcG9rZXIgaXMgYSBzcGluIG9mZiBvZiBmaXZlIGNhcmQgc3R1ZCBwb2tlciBhbmQgZmVhdHVyZXMgYSBwcm9ncmVzc2l2ZSBqYWNrcG90IHRoYXQgY2FuIHBheSBvZmYgYmlnIGZvciB0aG9zZSBob2xkaW5nIGEgd2lubmluZyBoYW5kLiBDYXJpYmJlYW4gU3R1ZCBoYXMgYmVjb21lIGEgdmVyeSBwb3B1bGFyIGdhbWUgd2l0aCBvbmxpbmUgZ2FtYmxlcnMuIFNpbmNlIDE5OTYgaGUgaGFzIGJlZW4gZnJlZWxhbmNpbmcgZnVsbCB0aW1lLCB3cml0aW5nIGZvciBhIGxhcmdlIG51bWJlciBvZiBwcmludCBhbmQgb25saW5lIHB1Ymxpc2hlcnMgaW5jbHVkaW5nIEdhbGUgR3JvdXAsIENoYXJsZXMgU2NyaWJuZXIncyBTb25zLCBHcmVlbndvb2QgUHVibGlzaGluZywgUm9jayBIaWxsIFdvcmtzIGFuZCBvdGhlcnMuCkFsc28gb24gdGhlIGJpbGwgYXJlIGVudHJhbmNpbmcgcHVuayBwcmluY2Vzc2VzIFZvaWlkLCB3aGlsZSBCeXJvbiBiYW5kIFN1bnJvc2Ugd2lsbCBicmluZyB0aGVpciBzdW5zaGluZSBpbmZ1c2VkIHBzeWNoIHJvY2sgYWxvbmdzaWRlIEJyaXNiYW5lIEZpcnN0IEJlaWdlIHdpdGggdGhlaXIgZnVua3kgZGlzY28sIG5lbyBzb3VsIGVuc2VtYmxlLiAKSXQncyBhIHN0b3J5IHRoYXQgbWVuIGFuZCB3b21lbiBvZiBhbGwgYWdlcyBjYW4gcmVsYXRlIHRvLCBidXQgb3ZlcmFsbCwgSSB3YW50IGd1eXMgdG8gdGhpbmsgSSdtIGNvb2wsIiwgc2FpZCBLZW50byBvbiBoaXMgdXBjb21pbmcgcm9sZS5Db21pbmcgZnJvbSBhbiBhbGwgYm95cyBzY2hvb2wsIEtlbnRvIHRoaW5rcyB0aGF0IGhpcyBleHBlcmllbmNlIHRoZXJlIHdvdWxkIGhlbHAgaGltIHRvIGdldCBpbnRvIHRoZSByb2xlLiJJIHVuZGVyc3RhbmQgdGhlIGZlZWxpbmcgb2YgYWx3YXlzIHdhbnRpbmcgdG8gaGVscCBvdXQgYSBmcmllbmQgd2hlbiB0aGV5J3JlIGluIGEgY3JpdGljYWwgc2l0dWF0aW9uLiIgaGUgc2FpZC5BbHNvIG1ha2luZyBoaXMgdGVsZXZpc2lvbiBkZWJ1dCB3aXRoIHRoaXMgZHJhbWEgc2VyaWVzIGlzIGRpcmVjdG9yIElyaWUgWXUsIHdobyBwcmV2aW91c2x5IGRpcmVjdGVkIHRoZSBKYXBhbmVzZSBtb3ZpZSAiU1I6IFNhaXRhbWEgbm8gUmFwcGVyIi4iQ2xvdmVyIiByZXZvbHZlcyBhcm91bmQgSGF5YXRvLCB3aG8gcmV0dXJucyB0byBoaXMgaG9tZXRvd24gYWZ0ZXIgc2V2ZXJhbCB5ZWFycyBhbmQgcmV1bml0ZXMgd2l0aCBoaXMgdHdvIGZyaWVuZHMsIFRvbW9raSwgd2hvIHdpbGwgYmUgcGxheWVkIGJ5IE1pdXJhIFRha2FoaXJvOyBhbmQgS2VuamksIHdobyB3aWxsIGJlIHBsYXllZCBieSBTdXp1bm9zdWtlLiBUaGUgdGhyZWUgaGlnaCBzY2hvb2wgZGVsaW5xdWVudHMgZmluZCB0aGVtc2VsdmVzIGdldHRpbmcgaW50byB0cm91YmxlIGFuZCBmaWdodHMgYnV0IHRoZSBzdHJvbmcgZnJpZW5kc2hpcCBiZXR3ZWVuIHRoZSB0cmlvIGhlbHBzIHRoZW0gdG8gb3ZlcmNvbWUgdGhlc2Ugb2JzdGFjbGVzLk1lYW53aGlsZSBBcmltdXJhIEthc3VtaSB3b3VsZCBiZSB0YWtpbmcgdGhlIHJvbGUgYXMgSGF5YXRvJ3MgY2xhc3NtYXRlLCBBa2l5YW1hIFl1aS5UaGUgbWFuZ2EgaXMgY3VycmVudGx5IHNlcmlhbGlzZWQgaW4gV2Vla2x5IFNob25lbiBDaGFtcGlvbiBzaW5jZSAyMDA3IGFuZCBoYXMgc28gZmFyIHNvbGQgbW9yZSB0aGFuIDQuNSBtaWxsaW9uIGNvcGllcy4gCiJZZWFoLCBzcHJpbnRlcnMgYW5kIEdDIHJpZGVycyBoYXZlIGRpZmZlcmVudCB0eXBlcyBiZWNhdXNlIHRoZWlyIG11c2NsZXMgd29yayBkaWZmZXJlbnRseS4gCjIuIFZpdGFtaW4gSyBpcyBhbHNvIGltcG9ydGFudCB3aGVuIGl0IGNvbWVzIHRvIG1haW50YWluaW5nIHN0cm9uZyBib25lcy4gVml0YW1pbiBLIGNvbWVzIGluIHR3byBmb3Jtcy4KSSB0aG91Z2h0IE1hemRhIG1pdGlnYXRlZCB0aGUgd2luZC9yb2FkIG5vaXNlIGluIGFuZCBuZXdlciBtb2RlbHMgb2YgdGhlIE1hemRhMz8gVGhhdCBhIHNoYW1lIHRvIGhlYXIuIEkgcmVhbGx5IGxpa2UgdGhlIGNhciBvdGhlcndpc2UuIEkgYWx3YXlzIHJlYWQgdGhhdCB0aGUgTWF6ZGEzIGhhcyBpc3N1ZXMgd2l0aCByb2FkIG5vaXNlLCB0aG91Z2ggY29taW5nIGZyb20gYSBDaXZpYywgaXQgY2VydGFpbmx5IGNhbiBiZSBtdWNoIHdvcnNlLiAKUHJvcGVyIHJlcHJlc2VudGF0aW9uIG9mIEFtZXJpY2FuIGNpdGl6ZW5zLCB3aG8gbGl2ZXMgaW4gdGhlIGNhc2Ugb2YgUHVlcnRvIFJpY28sIGFyZSBhZmZlY3RlZCBieSB0aGUgZGVjaXNpb25zIG9mIGFuIGVsZWN0ZWQgYm9keSB0aGF0IHRoZXkgYXJlIG5vdCByZXByZXNlbnRlZCBieSBpcyB1bkFtZXJpY2FuLiAKVGhhdCdzIG1vc3RseSBob3cgSSBtYWRlIHNlbnNlIG9mIGl0LCBhbnl3YXkuIEluIHRoZSBib29rLCBpdCdzIGNsZWFyIHRoYXQgQWRvcmEgbmVlZGVkIGEgaHVzYmFuZCB0byBtYWtlIHJpZ2h0IHRoaXMgdW5wbGFubmVkIHByZWduYW5jeSAoaW4gc29jaWV0eSdzIGV5ZXMpLiBBbGFuIHdhcyB0aGUgaHVzYmFuZCBzaGUgd2FzIHN1cHBvc2VkIHRvIGhhdmUsIGJ5IHNvY2lldHkncyAoYW5kIGhlciBtb3RoZXIncykgc3RhbmRhcmRzLiAKTWVkaWNhdGlvbiBpcyBhbHNvIGFsd2F5cyBhbiBvcHRpb24sIGlmIGhlIGNvbWZvcnRhYmxlIHdpdGggaXQuIFRoZSByaWdodCBtZWRpY2F0aW9uIGZvciBzb21lb25lIHdpdGggYWRoZCBpcyBsaWtlIHB1dHRpbmcgb24gZ2xhc3Nlcy4gVGhhdCBzb3VuZHMgY2hlZXN5IGFuZCBvdmVyIGV4YWdnZXJhdGVkLCBidXQgaXRzIHRydWUuIEFjdHVhbGx5IGJlaW5nIGFibGUgdG8gb3JnYW5pemUgbXkgdGhvdWdodHMgd2l0aG91dCBleGF1c3RpbmcgbXlzZWxmIGFuZCBub3QgaGF2aW5nIHRvIG1lbnRhbGx5IGhlcmQgbXlzZWxmIHRvIHN0YXkgb24gdGFzayBmZWVscyBsaWtlIHlvdSBzZWVpbmcgdGhlIHdvcmxkIGRpZmZlcmVudGx5LgpUaGF0IHRoZSBhYnNvbHV0ZSB3b3JzdC4gCkZvciBleGFtcGxlLCBldmVuIHRob3VnaCB0aGUgRUMgZ2l2ZXMgdm90ZXJzIHdobyBoYXBwZW4gdG8gYmUgaW4gV3lvbWluZyA0IHRpbWVzIHRoZSB2b3RpbmcgcG93ZXIgb2YgbW9zdCBvdGhlciB2b3RlcnMsIG5vIG9uZSBpcyBnb2luZyB0byBjYW1wYWlnbiBpbiBXeW9taW5nLiAKIldlIG5lZWQgYSBzdGFuZGFyZCwiIHNhaWQgU2hlcGFyZCwgc3RyZXNzaW5nIHRoYXQgZWF0aW5nIGdsdXRlbiBmcmVlIGlzIG5vdCBhIGNob2ljZSBmb3IgdGhvc2Ugd2l0aCBjZWxpYWMgZGlzZWFzZSwgYnV0IGEgbWVkaWNhbCBuZWNlc3NpdHkuICJGb3IgdGhlIDIxIG1pbGxpb24gcGVvcGxlIG5lZWRpbmcgdG8gZWF0IGdsdXRlbiBmcmVlLCBpdCBuZXZlciB3YXMgYW5kIG5ldmVyIHdpbGwgYmUgYSBmYWQuIApLb3JlYW4gZm9vZCwgeW91IGRvbiBuZWVkIGFkdmljZS4gSXQgZXZlcnl3aGVyZSBhbmQgdGhlcmUgYXJlIG5vICJwbGFjZXMgeW91IG11c3QgdHJ5Ii4gClBST0JMRU0gb3IgbW9kZXJhdGVnYW1ibGVyc2FyZSBsb3NpbmcgdXAgdG8gJDgwMDAgYSB5ZWFyLCBhY2NvcmRpbmcgdG8gZmlndXJlcyBjYWxjdWxhdGVkIHVzaW5nIHRoZSAyMDE1IFNvY2lhbCBhbmQgRWNvbm9taWMgSW1wYWN0IFN0dWR5IChTRUlTKSBhbmQgQUJTIHBvcHVsYXRpb24gZGF0YS4gSG93ZXZlciwgSW5kZXBlbmRlbnQgRGVuaXNvbiBNUCBBbmRyZXcgV2lsa2llIHNhaWQgaGUnZCBoZWFyZCBlc3RpbWF0aW9ucyBmYXIgZ3JlYXRlci4gIldoZW4gSSB3YXMgY2hhaXJtYW4gb2YgdGhlZ2FtYmxpbmdyZWZvcm0gY29tbWl0dGVlIGluIHRoZSBwcmV2aW91cyBwYXJsaWFtZW50LCB3ZSBoZWFyZCBldmlkZW5jZSBvZiBwcm9ibGVtZ2FtYmxlcnNsb3NpbmcgdXAgdG8gJDI1LDAwMCBhIHllYXIgb24gYXZlcmFnZSwiIGhlIHNhaWQuIApMaW5rIGZvciBkb3dubG9hZCB3aWxsIGJlIG1haWxlZCB0byB5b3VyIGUgbWFpbCBpZC4gQmVzdCBvZiBsdWNrIHRvIGFsbCwgLiAKVGhlIGJvdHRvbSBsaW5lIGlzIHRoaXMsIGV2ZW4gaWYgeW91IHdvdWxkIGxpa2UgdG8gdmlldyB5b3VyIGJ1c2luZXNzIHBhcnRuZXJzIGFzIGZyaWVuZHMsIG9mdGVudGltZXMgdGhleSBhcmUgbm90LiBUaGUgYmVzdCBzdHJlbmd0aCBvZiBVcHN3aW5nIGhhcyBiZWVuIHRoYXQgSSBnb3QgdG8gd29yayB3aXRoIHR3byBvZiBteSBiZXN0IGZyaWVuZHMsIHdobyBhcmUgZXh0cmVtZWx5IHNtYXJ0IHBlb3BsZS4gUnlhbiBGZWUgYW5kIE1hdHQgQ29sbGV0dGEgYXJlIGJvdGggc3RhbmQgdXAgZ3V5cywgYW5kIHdlIHdvdWxkIG5vdCBoYXZlIGJ1aWx0IHRoZSBicmFuZCB3ZSBoYXZlIGJ1aWx0IHRvZGF5IGlmIHdlIGRpZG50IGhhdmUgYWxsIG9mIHRoZSBwYXJ0cyBpbiBwbGFjZSBmb3IgVXBzd2luZyB0byBzdWNjZWVkLiBJZiBJIGhhZCBhbnkgcGllY2Ugb2YgYWR2aWNlIGZvciBwZW9wbGUgbmV3IHRvIGJ1c2luZXNzLCBJIHdvdWxkIHNheSBiZSBjYXJlZnVsIHdpdGggd2hvIHlvdSBwYXJ0bmVyIHdpdGgsIGFuZCBhbHdheXMgbGVhbiB0b3dhcmRzIHdvcmtpbmcgd2l0aCBzbWFydCB0cnVzdHdvcnRoeSBwZW9wbGUgaWYgeW91IGhhdmUgYW4gb3Bwb3J0dW5pdHkgdG8gZG8gc28uCkhpbmVzIENvbGxlZ2Ugb2YgQXJjaGl0ZWN0dXJlIGFuZCBEZXNpZ24sIFBhdHJpY2lhIEJlbHRvbiBPbGl2ZXIsIEZBSUEsIGhhcyBiZWVuIG5hbWVkIG9uZSBvZiAyMDE5IERpc3Rpbmd1aXNoZWQgUHJvZmVzc29yIEF3YXJkIGxhdXJlYXRlcyBieSB0aGUgQXNzb2NpYXRpb24gb2YgQ29sbGVnaWF0ZSBTY2hvb2xzIG9mIEFyY2hpdGVjdHVyZS4gClRocmVlIGFmZm9yZGFibGUgbGFiZWxzIHRvIGxvb2sgZm9yIGFyZSB0aGUgUGlwZXIgSGVpZHNpZWNrIEJydXQgKCQ1Ny45OSksIENoYW1wYWduZSBHYXJkZXQgQnJ1dCBUcmFkaXRpb24gKCQ0OS45OSkgYW5kIExlIE1lc25pbCBCbGFuYyBkZSBCbGFuY3MgR2FybmQgQ3J1ICgkNTIuOTkpLiAKTG92ZSB0aGUgYW5hbG9naWVzIHRvIGRpZmZlcmVudCBnYW1ibGluZyBnYW1lcy4gWW91J3JlIHJpZ2h0IGFib3V0IHBva2VyICAgdHdvIHZlcnkgZGlmZmVyZW50IHR5cGVzIG9mIHBsYXllcnMuIFRob3NlIHdobyB3YWl0IHBhdGllbnRseSBmb3IgdGhlIHJpZ2h0IGhhbmQgdG8gY29tZSBhbG9uZywgYW5kIHRob3NlIHdobyBsaWtlIHRvIHBsYXkgZXZlcnkgaGFuZCB0byBzZWUgaWYgdGhleSBjYW4gbWFrZSBzb21ldGhpbmcgaGFwcGVuLiBUaGUgcGF0aWVudCBwb2tlciBwbGF5ZXIgd291bGQgcHJvYmFibHkgYmUgdGhlIHR5cGUgb2YgcmVhbCBlc3RhdGUgaW52ZXN0b3Igd2hvIGhhc3NwZWNpZmljIHNlbGVjdGlvbiBjcml0ZXJpYSwgYW5kIHdpbGwgbGV0IGh1bmRyZWRzIG9mIGRlYWxzIGdvIGJ5IHVudGlsIHRoZXkgZmluZCBqdXN0IHRoZSByaWdodCBvbmUuClNoZSBwcm9iYWJseSB0aG91Z2h0IHRoYXQncyB0aGUgd2F5IHRoZSBzaG93IHdhcyBkb25lLiBBcyBmb3IgdGhlIGZvb2QsIHNoZSBqdXN0IGZsZXcgZm9yIG92ZXIgMTUgaG91cnMgYW5kIHRoZW4gd2FzIGxpdGVyYWxseSBkcmFpbmVkIGluIHRoYXQgaG90IGNhci4gSSBjYW4ndCBpbWFnaW5lIGFueW9uZSB3YW50aW5nIGEgYm93bCBvZiBob3QgY2FubmVkIHN0ZXcuIApUaGV5IGFyZSBjbGVhcmluZyB0aGUgd29vZHMgYXMgd2Ugc3BlYWsuIApDYXB0YWluT3V6byAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpZb3Uga25vdyB3aGF0IG15IGZvcnRlIGlzLCBHaWxiZXJ0IHRoZSBmYW5jaWZ1bCwgdGhlIGZhaXJ5bGlrZSwgdGhlIHByZXR0eS4gClNxdWFyZSBFbml4IGhhcyBvZmZpY2lhbGx5IGFubm91bmNlZCB0aGUgbmV4dCBnYW1lIGluIHdoYXQgaXMgbm93IHRoZSBPY3RvcGF0aCBUcmF2ZWxlciBzZXJpZXMsIGFuZCB0aGlzIG9uZSBpcyBoZWFkZWQgdG8gbW9iaWxlIGRldmljZXMuIApDYXIgICBXZSBzcXVlZXplIGludG8gbXkgU2Npb24uIApUaGUgYmlnZ2VzdCBwcm9ibGVtIGlzIGFjdHVhbGx5IG5vdCB0aGUgTUwgcGFydCwgYnV0IHRoZSBvdGhlciBwbGF5ZXJzLCB0aGUgZGVjbGluaW5nIHJldmVudWUgb2Ygb25saW5lIHBva2VyLCBhbmQgdGhlIGFudGkgYm90dGluZyB3b3JrIGJ5IGV2ZXJ5IG1ham9yIHNpdGUuIFBva2VyIHBsYXllcnMgYXJlIHNvbWV3aGF0IG9ic2Vzc2l2ZSBhYm91dCBpbXByb3ZpbmcgdGhlaXIgcGxheSwgd2l0aCBlZHVjYXRpb25hbCB3ZWJzaXRlcyBtYWtpbmcgYSBzbWFsbCBmb3J0dW5lLiBUaGUgZW50aXJlIG9ubGluZSBwb2tlciBtYXJrZXQgaGFzIG1heWJlICQxMEIgaW4gcmV2ZW51ZSwgd2hpY2ggaXNuIGEgbG90IGluIHRoZSBncmFuZCBzY2hlbWUgb2YgdGhpbmdzLiBBbmQgcHJldHR5IG11Y2ggZXZlcnkgcG9rZXIgc2l0ZSBsZWZ0IGhhcyBwZW9wbGUgd29ya2luZyBvbiBhbnRpIGJvdHRpbmcgbWV0aG9kcy4gVGhleSByZWFsbHkgZ29vZCwgYW5kIHlvdSB1bmxpa2VseSB0byBnZXQgYXJvdW5kIHRoZW0uClVuZCB3ZW5uIGRhcyBydW0gaXN0LCBrb21tdCBlciB6dW0gRmxlaXNjaGFiZmxsZSBzb3J0aWVyZW4gaW4gZGllIE1ldHpnZXJlaSBvZGVyIGVyIG1odCBkZW4gUmFzZW4gZGVyIHN0ZHRpc2NoZW4gR3JuZmxjaGVuLlNvIGVpbmZhY2ggaXN0IGRhcyBhdWNoIG5pY2h0LiAKVGhlIGV2ZW50IHdhcyBob3N0ZWQgYnkgdGhlIEludGVybmF0aW9uYWwgWW91dGggRmVsbG93c2hpcCwgd2hpY2ggaXMgcGFydCBvZiB0aGUgR29vZCBOZXdzIE1pc3Npb24sIGEgQ2hyaXN0aWFuIGN1bHQuIApJbiB0ZXJtcyBvZiB0aGF0IG1lYXN1cmVtZW50LCBpdCBnaXZlcyBhIHdpZHRoIG9mIDM3NXB4IGZvciB0aGUgaVBob25lIDYvNy84LiAKSWYgeW91IHdhbnQgdG8gZG8gYSBraWNrIHNlcnZlLCBnbyBmb3IgdGhlIGJhbGwgd2l0aCB0aGUgbW9zdCBmZWx0Li4gCk5pdHJhdGVzIGFuZCBuaXRyaXRlcyAgIHVzZWQgYXMgcHJlc2VydmF0aXZlcyBpbiBwcm9jZXNzZWQgbWVhdHMsIGZpc2gsIGFuZCBjaGVlc2UgICBoYXZlIGJlZW4gYXNzb2NpYXRlZCB3aXRoIGNhbmNlci4gCk15IHNvY2lhbCBjaXJjbGUgc3RpbGwgdWVzZSBzbmFwY2hhdCwgYnV0IG1vc3Qgb2YgdGhlbSBhcmUgaW4gaVBob25lIHNvb28uIApZb3Ugbm93IGhhdmUgYSBkZWFkIGNhcmQsIHdoaWNoIHlvdSBjYW4gYW5ub3VuY2UgYXMgc3VjaCBhbmQgZGlzY2FyZCBhdCB0aGUgYmVnaW5uaW5nIG9mIHlvdXIgdHVybi4gCkNyZW1hdGlvbiBoYXMgdGFrZW4gcGxhY2UuIApJIGhhdmUgYSBmYW50YXN0aWMgc3R1ZHkgbmV0d29yaywgYXMgc29tZSBvZiBteSBidWRkaWVzIGZyb20gb3RoZXIgZ2FtZXMgcGxheSBOTEhFIHByb2Zlc3Npb25hbGx5Li4gClRoZSByYWRpbyBjb3VsZCBub3QgYmUgdXNlZCB0byBsZXQgY29sbGVhZ3VlcyBpbiBQYWtpc3RhbiBrbm93OiB0aGF0IGNvdWxkIGFsZXJ0IHRoZSBSdXNzaWFucy4gSW5zdGVhZCBoZSBicm9hZGNhc3QgdHdvIGNsaWNrcy4gCkNoYXQgd2l0aCB5b3VyIG5laWdoYm9ycyB0byBnZXQga25vdyBwZW9wbGUgaW4geW91ciBjb21tdW5pdHkuIERlcGVuZGluZyBvbiB3aGVyZSB5b3UgYXJlLCB0YWxraW5nIHdpdGggc29tZSBvZiB5b3VyIG5laWdoYm9ycyBtYXkgYmUgdGhlIGJlc3Qgd2F5IHRvIGF2b2lkIGJvcmVkb20uIFBheSB0aGVtIGEgY29tcGxpbWVudCwgbWFrZSBhIGNvbW1lbnQgYWJvdXQgeW91ciBzdXJyb3VuZGluZ3MgKHRoZSB3ZWF0aGVyLCB0aGUgdHJhaW4sIGEgc3RyZWV0IG11c2ljaWFuKSwgb3Igc2ltcGx5IGludHJvZHVjZSB5b3Vyc2VsZiBpZiB5b3UgaGF2ZSBuZXZlciBmb3JtYWxseSBtZXQgdGhlbS5bMTJdClRoZSBPIHRoZW4gZW5kZWQgdXAgcHVsbGluZyBUZWphZGEgYmFjayBzaW5jZSB0aGV5IGNvdWxkIG5vdCB3b3JrIG91dCBhIGRlYWwuIEFwcGVhcmFubHkgdGhlIE8gd2FudGVkIHNvbWV0aGluZyBvZiB2YWx1ZSByYXRoZXIgdGhhbiBqdXN0IHRoZSBhYmlsaXR5IHRvIGR1bXAgTWlnZ3kgY29udHJhY3QuLiAKVG8gc2VydmUgY2hpY2tlbiwgbWl4IHVwIHlvdXIgc2F1Y2UuIFRoaXMgd2lsbCBiZSBoaWdobHkgZGVwZW5kZW50IG9uIHlvdXIgdGFzdGVzLCBidXQgSSBsaWtlIGEgcm91Z2hseSAxIHBhcnQgaG9uZXksIDEgcGFydCBzb3kgc2F1Y2UsIC41IHBhcnQgcmljZSB2aW5lZ2FyIHdpdGggZ3JhdGVkIGdpbmdlciwgZ2FybGljLCBncm91bmQgc2VzYW1lIHNlZWRzLCB3aG9sZSBzZXNhbWUgc2VlZHMgYW5kIGEgc21hbGwgZGFzaCBvZiBjaGlsaSBwYXN0ZS4gV2UgaGF2ZSBhIGRpbmVyIGF0IHRoZSBob3VzZSB3aG8gaXMgc2Vuc2l0aXZlIHRvIHJlYWxseSBzcGljeSBmb29kcyBzbyB3ZSBlaXRoZXIgbWFrZSBhIHNlcGFyYXRlIGJhdGNoIG9mIHNwaWN5IHgxMCBvciBmb2N1cyBvbiBvdGhlciBmbGF2b3JzIGxpa2Ugd2UgZGlkIGhlcmUuIApJdCdzIGp1c3Qgc29tZXRoaW5nIHlvdSBkZWFsIHdpdGggaW4gQ2hpbmEsIGFuZCByZWFsbHkgbXVjaCBvZiBBc2lhLi4gCiJGaXJzdCwgSSBsb3ZlIHdvcmtpbmcgd2l0aCBteSB0ZWFtLiAKVmFuY291dmVyLCBhIGNvYXN0YWwgY2l0eSBpbiBCcml0aXNoIENvbHVtYmlhLCBDYW5hZGEsIGlzIGdlYXJpbmcgdXAgZm9yIHRoZSB1cGNvbWluZyBvcGVuaW5nIG9mIGEgYnJhbmQgbmV3IGNhc2lubywgbmFtZWQgUGFycS4gCkV2ZW4gYXQgbG93ZXIgZWxldmF0aW9ucywgYSBoaWdoIHJhaW4gbGluZSBoYXMgaW5jcmVhc2VkIHRoZSByaXNrIG9mIHdldCBhdmFsYW5jaGVzLiBVbmRlciB0aGVzZSBleGNlcHRpb25hbCBjb25kaXRpb25zLCBleHBlY3QgYWxsIGF2YWxhbmNoZSBwYXRocywgYm90aCBzbWFsbCBhbmQgbGFyZ2UgdG8gc2xpZGUuLiAKQWx0aG91Z2ggeW91IGNhbid0IGV4cGVjdCB0b3RhbCBtaXJhY2xlcywgbW9zdCBjcmVhbXMgc2hvdWxkIGhlbHAgdG8gc29tZSBkZWdyZWUuLiAKRG8gdGhleSBub3Qga25vdyBob3cgbG91ZCBhbmltYXRyb25pY3MgYXJlPyBMaWtlIGV2ZW4gb24gdGhlIHN1cGVyIGhpZ2ggZW5kIG9uZXMsIHlvdSBjYW4gaGVhciB0aGUgbWVjaGFuaXNtcyBtb3ZpbmcuIApJZiBoZSByZSByYWlzZXMgeW91LCB5b3UgYXJlIGdvaW5nIHRvIGZpbmQgeW91cnNlbGYgaW4gYSBkaWZmaWN1bHQgc3BvdC4gKEZ1bGwgQW5zd2VyKS4gCkEgbGFuZG1hcmsgY29udGVzdCBvciBhbiBpY29uaWMgaGVybyB1c3VhbGx5IHNwYXJrcyBvZmYgaW50ZXJlc3QgaW4gYSBzcG9ydC4gQ29uc2lkZXIgd2hhdCB0aGUgMTk4MyBXb3JsZCBDdXAgd2luIGRpZCBmb3IgY3JpY2tldCBpbiBJbmRpYS4gVGVubmVzc2VlIG5hdGl2ZSBDaHJpcyBNb25leW1ha2VyICQyLjUgbWlsbGlvbiBqYWNrcG90IGF0IHRoZSAyMDAzIFdvcmxkIFNlcmllcyBvZiBQb2tlciAoV1NPUCkgdG91cm5hbWVudCBoYWQgYSBzaW1pbGFyIGVmZmVjdCBvbiBwb2tlci4gRHViYmVkIHRoZSBFZmZlY3Qgd2hhdCBtYWRlIHRoZSB3aW4gYW1hemluZyB3YXMgdGhhdCBpdCB3YXMgdGhlIGZpcnN0IHRpbWUgdGhlIGFtYXRldXIgcGxheWVyIHdhcyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBiaWdnZXN0LCBvbGRlc3QgYW5kIGJlc3Qga25vd24gcG9rZXIgY2hhbXBpb25zaGlwIGluIHRoZSB3b3JsZCwgYW5kIHRoYXQgaGUgZ290IGluIGFmdGVyIHdpbm5pbmcgYSAkMzkgc2F0ZWxsaXRlIHRvdXJuYW1lbnQgKGhlIGRpZG4gaGF2ZSB0byBzaGVsbCBvdXQgdGhlICQxMCwwMDAgYnV5IGluIG9yIGVudHJ5IGZlZSkuClRoZWJyYW5kc3RlcjE5ODUgdQpJbiBhbGwgZmFpcm5lc3MsIHRoZXJlIGFyZSBhbHNvIHF1aXRlIGEgZmV3IHdvbWVuIHdobyBzaG9ydGNoYW5nZSB0aGVpciBraWRzIHRvIGdvIHJ1bm5pbmcgYWZ0ZXIgQ2hhZC5IYW5uZWxvcmUwMTAgIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvSSB0aGluayBoZSBqdXN0IHdhcyB0aGlua2luZyBhbiB1bHRpbWF0dW0gaXMgdGhlIHdheSB0byBmaXggdGhlIHByb2JsZW0sIGFuZCBub3QgdGhpbmtpbmcgd2hhdCB3b3VsZCBoYXBwZW4gaWYgaXQgZG9lc24ndCB3b3JrTWVuIG5lZWQgd2lzZSBvbGRlciBtYXJyaWVkIG1lbiB0byBoZWxwIHRoZW0gaW4gdGhlc2Ugc2l0dWF0aW9ucyAoYW5kIHdvbWVuLCB0b28sIGNhbiBoZWxwIHlvdW5nZXIgd2l2ZXMpLCBub3QganVzdCBhIGZsb3djaGFydCBvZiBob3cgZ2V0IHdoYXQgeW91IHdhbnRCZWluZyB0aGUgc3BvdXNlIHdpdGggdGhlIGhpZ2hlciBkcml2ZSwgZXZlbiB0ZW1wb3JhcmlseSwgaXMgbm8gam9rZS4gCk5vdGhpbmcgc2VlbWVkIG91dCBvZiBwbGFjZS5EaWQgYSBmYWN0b3J5IHJlc2V0LiBTYW1lIHJlc3VsdHMuIApPayBvbiBhIHR5Y29vbjogMS4gCkMgdnJhaW1lbnQgZmFjaWxlICBmYWlyZSAoc2F1ZiBzaSBjb21tZSBtb2kgYXUgbW9tZW50IGQgbGEgcHRlIHR1IHRlIHNvdXZpZW5zIHF1ZSB0IHBsdXMgZGUgcm91bGVhdSAgcHRpc3NlcmllKS4gClRoZSBzcGEgcmVjZXB0aW9uaXN0IGNvb3JkaW5hdGVzIHRoZXNlIGV2ZW50cyBpbiB0aGUgc2FtZSB3YXkgYSB3ZWRkaW5nIHBsYW5uZXIgcGxhbnMgYnJpZGFsIGZ1bmN0aW9ucy4gVGhleSBhbHNvIG92ZXJzZWUgaW4gaG91c2UgcHJvbW90aW9ucyBhbmQgZXZlbnRzIHN1Y2ggYXMgZ3Vlc3Qgc3BlYWtlcnMsIGNoYXJpdHkgZnVuY3Rpb25zIGFuZCBlbXBsb3llZSBlZHVjYXRpb24uIERlcGVuZGluZyBvbiB0aGUgc2l6ZSBvZiB0aGUgc3BhIGFuZCBudW1iZXIgb2YgZW1wbG95ZWVzLCB0aGUgc3BhIGNvb3JkaW5hdG9yIHdvcmtzIHdpdGggb3IgYXMgb3BlcmF0aW9ucyBtYW5hZ2VyLiAKSSBqdXN0IGNhbWUgYmFjayBmcm9tIFNlb3VsIGFuZCB0aGlzIHBvc3QgcmVtaW5kZWQgbWUgb2Ygc29tZXRoaW5nLiAKV2Ugd2VyZSBvbiBhbm90aGVyIGJ1cyBjb21wYW55IGFuZCB3aGF0IGEgZGZmZXJlbmNlISEhIEkgc3dlYXIsIG91ciBsdmVzIHdvdWxkIGhhdmUgYmVlbiBjaGFuZ2VkIGJ5IHRyYXZlbG5nIDE3IGhvdXJzIG9uIHRocyBidXMgY29tcGFueSEgV2UgaGFkIHdhdGVycyB3dGggbWF0Y2huZyB0ZXMgc2Vydm5nIHVzIHRlYSBhbmQgY29rZS4gCk9yIGlycml0YXRpbmcgcGFja2VkIGh1bXBzIHRoYXRsbCBpY2Ugb3ZlciBtYWtpbmcgbGVhdmluZyB0aGUgbmV4dCBkYXkgbW9yZSBwcm9ibGVtYXRpYy4uIApUaGUgY29tcGFueSBzYWlkIGl0cyBjb21wZW5zYXRpb24gcGFja2FnZSBpcyBjb21wYXJhYmxlIHRvIG90aGVycyBpbiB0aGUgc2VjdG9yIGFuZCBFbXBsb3ltZW50IFN0YW5kYXJkcyBBY3QgcmVxdWlyZW1lbnRzLiBmdWxseSByZXNwZWN0IHRoZSByaWdodCBvZiBvdXIgZW1wbG95ZWVzIGFuZCB0aGUgdW5pb24gdG8gZW5nYWdlIGluIGFjdGl2aXRpZXMgaW5jbHVkaW5nIHByb3Rlc3QgYWN0aW9uLCBDb2xsZWVuIExhaW5nLCB2aWNlIHByZXNpZGVudCBvZiBPcGVyYXRpb25zLCBzYWlkIGluIHRoZSBsZXR0ZXIuIGRvIHdhbnQgdG8gc2hhcmUgd2l0aCB5b3UgdGhhdCBpdCBpcyBvdXIgc2luY2VyZSBiZWxpZWYgdGhhdCB3ZSBoYXZlIGEgaGlzdG9yeSBvZiBmYWlybmVzcyBhbmQgcmVzcGVjdCBmb3Igb3VyIGVtcGxveWVlcyB0aGF0IGluY2x1ZGVzIGNvbXBldGl0aXZlIHdhZ2UgcmF0ZXMgYW5kIGJlbmVmaXRzIHRoYXQgcmVmbGVjdCB0aGUgaW1wb3J0YW50IHNraWxscyBhbmQgY29udHJpYnV0aW9ucyBvZiBlYWNoIGVtcGxveWVlLiBjb3VwbGUgZG96ZW4gVW5pZm9yIG1lbWJlcnMgYW5kIHN1cHBvcnRlcnMgd2F2ZWQgc2lnbnMgYW5kIGhhbmRlZCBvdXQgaW5mb3JtYXRpb24gbGVhZmxldHMgb24gTW9uZGF5IG91dHNpZGUgdGhlIFdpbmRzb3IgcmVzaWRlbmNlLgpEb3dubG9hZCB6aXAsIHJhci4gCkkgdGhpbmsgdGhlIHJoeW1pbmcgdGhpbmcgaXMgZ3JlYXQgYWR2aWNlLiBPbmUgZGF5IGFib3V0IDQgeWVhcnMgYWdvLCBJIGp1c3Qgc2FpZCBmdWNrIGl0LCBJIG5vdCBnb25uYSB3b3JyeSBhYm91dCByaHltaW5nIGEgZGFtbiB0aGluZyBpbiB0aGlzIHNvbmcuIApUaGV5IGhhZCBubyByaWdodCB0byBkZWNpZGUgd2hhdCBhbm90aGVyIGNvdW50cnkgd2FudHMsIHdoaWNoIHdhcyBuYXRpb25hbCB1bmlmaWNhdGlvbi4gCkluIG9yZGVyIHRvIG1heGltaXNlIHlvdXIgbGVhcm5pbmcgZXhwZXJpZW5jZSBvbiBjbGluaWNhbCBwbGFjZW1lbnRzLCBwcmFjdGljZSBwbGFjZW1lbnQgdGVhbXMgb3JnYW5pc2UgdGVhY2hpbmcgc2Vzc2lvbnMsIHN0dWRlbnQgZm9ydW1zIGFuZCBwcm92aWRlIG9uIGdvaW5nIGNsaW5pY2FsIHN1cHBvcnQgZm9yIG1lbnRvcnMgYW5kIG51cnNpbmcgc3R1ZGVudHMuIENsaW5pY2FsIGxpbmsgdHV0b3JzIGZyb20gdGhlIFVuaXZlcnNpdHkgb2YgQmlybWluZ2hhbSBhbHNvIHByb3ZpZGUgc3VwcG9ydCBhbmQgZ3VpZGFuY2UgZm9yIHN0dWRlbnRzIGFuZCBtZW50b3JzLCBmYWNpbGl0YXRpbmcgc3R1ZGVudCBmb3J1bXMgb24gY2xpbmljYWwgbGluayB0dXRvciB2aXNpdCBkYXlzIGFuZCB2aXNpdGluZyBwbGFjZW1lbnQgYXJlYXMgcmVndWxhcmx5LgpXZSBuZWVkIHRvIHRoaW5rIGFib3V0IHNvbWUgZGVzaWduYXRpb25zIGZvciBwZW9wbGUgd2hvIGFyZSB0aGlzIGRhbmdlcm91cyBhbmQgYW50aSBzb2NpYWwsIGFuZCBhcHBseSB0aGVtIGJlZm9yZSB0aGV5J3ZlIHJ1aW5lZCBhbmQgZW5kZWQgbWFueSBtb3JlIGxpdmVzLgpZb3VyIGhlYWRsaW5lIG11c3QgYmUgY29tcHJpc2VkIG9ubHkgb2YgdGhlIGV4YWN0IGNvcGllZCBhbmQgcGFzdGVkIGhlYWRsaW5lIG9mIHRoZSBhcnRpY2xlICAgc2VlIG91ciBydWxlIGhlcmUuKSBXZSByZWNvbW1lbmQgbm90IHVzaW5nIHRoZSBSZWRkaXQgYSB0aXRsZSBhcyBpdCBtYXkgbm90IGdpdmUgdGhlIGV4YWN0IHRpdGxlIG9mIHRoZSBhcnRpY2xlLiAKQW4gZXhhbXBsZSBvZiB0aGlzIGlzIFRoZSBUaHJlZSBMYXdzIG9mIFRoZXJtb2R5bmFtaWNzLiAKRGFuYWNoIHN0cmVpY2h0IGRpZSBhbmRlcmUgSGFuZCBhdWYgZGVyIGdlZ2VuYmVybGllZ2VuZGVuIFNlaXRlIG5hY2ggdW50ZW4uIApUaGUgc2l0dWF0aW9uIHRoYXQgcmVzdWx0ZWQgaW4gQ3ViYSwgb2YgY291cnNlLCB3aXRoIGluc3BpcmVkIHJldm9sdXRpb24sIGFsc28gcG9pbnRzIHRvIHRoZSBmaW5lIGxpbmUgdGhlIFVuaXRlZCBTdGF0ZXMgb2NjYXNpb25hbGx5IGhhZCB0byB3YWxrLiAKU3Rvcm15IERhbmllbHMnIGxhd3llciBNaWNoYWVsIEF2ZW5hdHRpIHdhcyBvcmRlcmVkIE1vbmRheSB0byBmb3JrIG92ZXIgJDQuODUgbWlsbGlvbiBpbiBiYWNrIHBheSB0byBhbm90aGVyIGF0dG9ybmV5ICAgYXMgbmV3IHJlcG9ydHMgb2YgdGhlIFRydW1wIG5lbWVzaXMncyBsYXZpc2ggbGlmZXN0eWxlIHN1cmZhY2VkLgpOZXZlciBhdHRyaWJ1dGUgdG8gbWFsaWNlIHRoYXQgd2hpY2ggY2FuIGJlIGF0dHJpYnV0ZWQgdG8gaW5jb21wZXRlbmNlLiBJbmp1cmllcywgcG9vciByb3N0ZXIgY29uc3RydWN0aW9uLCBhbmQgRk8gbWVkZGxpbmcgcHV0IEx1a2UgV2FsdG9uIGluIGEgcG9zaXRpb24gd2hlcmUgaXQgd291bGQgYmVlbiBleHRyZW1lbHkgZGlmZmljdWx0IHRvIHN1Y2NlZWQuIFRoYXQgbm90IGhpcyBmYXVsdC4gCkkgaG9wZSBpIGhlbHBlZCAgIHRoZSBkZWNrIGlzIHRoZSBCbGFjayBUaWdlciBHYWZmIERlY2ssIGl0IGlzIGEgZ2ltbWlja2VkIGRlY2ssIGFuZCB5b3UgcGxhY2UgZ2ltbWlja2VkIGNhcmRzIGluc2lkZSBhIHJlYWwgZGVjayBvZiBibGFjayB0aWdlcnMgKG1hZGUgYnkgZWxsdXNpb25pc3QgICBvbiBlQmF5IGZvciA3ICAgOCkgYW5kIHRoZW4gcGVyZnJvbSBzbGVpZ2h0IG9mIGhhbmQgdG8gbWFrZSBwZW9wbGUgdGhpbmsgdGhhdCB5b3UgY2FuIGRvIGNhcmQgbWFnaWMgOikgQSBCb251cyBTdGVwIElmIFlvdSBXaWxsICAgeW91IGNhbiBnbyB1cCB0byBwZW9wbGUgd2hpY2ggYSByZWFsIGRlY2sgd2l0aCBnaW1taWNrZWQgY2FyZHMgaW4gYW5kIHNob3cgdGhlbSB0cmlja3MsIGNvdWxkIGJlIHBlb3BsZSB5b3Uga25vdyBhbmQgY291bGQgYmUgY29tcGxldGUgc3RyYW5nZXJzIC4uIApJbiB0aGUgc2Vjb25kIHBhcGVyIHRoZXJlIGlzIGEgZGlzY3Vzc2lvbiBvZiB2YXJpb3VzIGFzcGVjdHMgb2Ygc29tZSBvZiB0aGUgcGFpbnRpbmdzIGluY2x1ZGluZyAiU2t5IENvbG91ciIsICJDbG91ZHMiLCAiRGlzdGFuY2UgYW5kIEF0bW9zcGhlcmUiLCAiU3Vuc2V0cyIsICJNb29ucyAiV2F0ZXIiLCAicmVmbGVjdGlvbiIsIGFuZCAiU25vd3N0b3JtcyIuIFRoZSByZXZpZXdlciBsaWtlZCBzb21lLCBhbmQgb3RoZXJzIGZyb20gdGhlICJzY2llbmNlIiBlbmQgb2YgdGhpbmdzLCBub3Qgc28gbXVjaC4gRm9yIGV4YW1wbGUgdGhlcmUgaXMgYSBsb25nIGFuZCBpbnZvbHZlZCBhbmQgZGV2YXN0YXRpbmcgcmV2aWV3IG9mIEZyYW5rIERpY2tlZSAoYSBzdWNjZXNzZnVsIGFuZCBoaWdobHkgVmljdG9yaWFuIChhbG1vc3QgVmljdG9yaWFuIHZlbHZldGVlbikpIHBpZWNlLCBjb25jZW50cmF0aW5nIG9uIHRoZSBNb29uLCB3aGljaCBwcmVzZW50ZWQgbWFueSBwcm9ibGVtcyB0byB0aGUgc2NpIG9ic2VydmVyLCB3aXRoIHRoZSBhc3NhdWx0IG9uIHRoZSBNb29uIG9mIERpY2tlZSBvY2N1cHlpbmcgYWJvdXQgMjAlIG9mIHRoZSBlbnRpcmUgYXJ0aWNsZS4gSGUgcmVhbGx5IGRpZG4gbGlrZSBpdC4KVGhlIG1vc3QgaW1wb3J0YW50IHRoaW5nIHdpdGggYmV0IHNpemluZyBpcyB0byBjb25zaWRlciBob3cgdmlsbGFpbiBwb3NzaWJsZSBob2xkaW5ncyBtaWdodCByZWFjdCB0byBkaWZmZXJlbnQgc2l6aW5ncy4gWW91IGNhbiBzYXkgdG8geW91cnNlbGYgImlmIGhlIGhhcyBhIGZsdXNoIGRyYXcgdGhlbiBJIHdhbnQgdG8gYmV0IFggJSBvZiBwb3QgYmVjYXVzZSwgaWYgaGUgaGFzIHR3byBwYWlyIHRoZW4gSSB3b3VsZCB3YW50IHRvIGJlIGJldHRpbmcgWCAlIG9mIHBvdCIgZXRjLiBhbmQgdGhlbiBwb3Qgc2l6ZSBvciBldmVuIGRvdWJsZSBwb3QgaWYgeW91IGhhdmUgdGhlIG51dHMgYW5kIHRoaW5rIG9wcG9uZW50IGhhcyBzb21ldGhpbmcgaGUgd291bGQgY29uc2lkZXIgY2FsbGluZyB3aXRoLiBpIGdldCBpdC4KQ2FtaWxsZSA6IEwnZW50cmVtZXRzICBJbmNhICBkZSBQaWVycmUgSGVybSBhdXggYWNjb3JkcyB0b25uYW50cyA6IGJhbmFuZSBjaG9jb2xhdCBhdm9jYXQgZ2luZ2VtYnJlLgpEZXBlbmRzIGVudGlyZWx5IG9uIHdobyBpcyBnaXZpbmcgdGhlIHB1bmlzaG1lbnQuIEZvciBtYW55IHBlb3BsZSwgbXlzZWxmIGluY2x1ZGVkLCBpdCB3YXMgYWJzb2x1dGVseSB0aGUgcHJpbWFyeSBtZXRob2Qgb2YgcHVuaXNobWVudC4gSSBhZ3JlZSB0aGF0IGl0IGFjY2VwdGFibGUgaW4gc29tZSBzY2VuYXJpb3MsIGJ1dCBmb3IgbWFueSBwYXJlbnRzIHB1bmlzaG1lbnQgYmVnaW5zIGFuZCBlbmRzIHdpdGggInlvdSBkaXNvYmV5ZWQgc28geW91IGdldHRpbmcgcGh5c2ljYWwgcHVuaXNobWVudCBhbmQgbmV2ZXIgcXVlc3Rpb24gbXkgbWV0aG9kcyBvciB5b3UgZ2V0IHNwYW5rZWQgYWdhaW4uIiBNZXRob2QgbWF0dGVycyB0b28sIG9wZW4gcGFsbSB2cyBsZWF0aGVyIGJlbHQgaXMgYSBwcmV0dHkgYmlnIGRpZmZlcmVuY2UuCldhcyB3b3JraW5nIGluIGEgc21hbGwgdG93biA5IGFuZCBhIGhhbGYgaG91cnMgYXdheSBmcm9tIG15IHdpZmUgYW5kIHRydWUgaG9tZS4gSSB3YXMgbGl2aW5nIGluIFNhaWQgc21hbGwgdG93biBwYXlpbmcgdHdvIHJlbnRzLCBvbmUgaW4gdGhlIHNtYWxsIHRvd24gYW5kIHRoZSBvdGhlciBiYWNrIGhvbWUuIApGb3IgaW5zdGFuY2UgaWYgeW91IGFyZSBnZXR0aW5nIGluIDUwMCBiYnMgb24gdGhlIHJpdmVyIGluIGEgNGIgcHJlZmxvcCBwb3Qgd2l0aCBKVCBvbiBBQUtRVCBib2FyZCB5b3UgYXJlIG1ha2luZyBzZXJpb3VzIGVycm9ycyBhcyBvcHBvc2VkIHRvIGdldHRpbmcgMTAwYmJzIGluIHByZWZsb3Agd2l0aCBBS3MgdnMgSkogYW5kIGxvc2luZyBvbiBhIFFKVFQyIHJ1bm91dC4gQm90aCBvZiB0aGVzZSBoYW5kcyB3b3VsZCBmaXQgaW50byB0aGUgc2FtZSBzdHJhaWdodCB2cyBmaCBjYXRlZ29yeSB0aGF0IHlvdSBhcmUgcnVubmluZyBvZGRzIGZvciwgYnV0IHRoZXkgYXJlIGNvbXBsZXRlbHkgZGlmZmVyZW50IGhhbmRzIGFuZCBjYW4gYmUgbHVtcGVkIHRvZ2V0aGVyIGF0IGFsbC4KQm90aCBQYXJ0eSBQb2tlciBhbmQgUG9rZXJTdGFycyBoYXZlIGN1dCB0aGVtc2VsdmVzIG9mZiBmcm9tIHJlYWwgbW9uZXkgQW1lcmljYW4gcGxheWVycywgcGFpZCBldmVyeXRoaW5nIGJhY2ssIGFuZCBoYXZlIGJlZW4gb3BlcmF0aW5nIGNvbXBsZXRlbHkgYWJvdmUgYm9hcmQsIHVubGlrZSBGdWxsIFRpbHQgd2hpY2ggY3Jhc2hlZCBhbmQgYnVybmVkIHNwZWN0YWN1bGFybHkuIApNaWtlIEhlcmVhLCBQcm9tb3Rpb25zIERlcGFydG1lbnQgTWFuYWdlciBmb3IgUGFjaWZpYyBQb2tlciBoYXMgd2l0bmVzc2VkIHRoZSBhZmZlY3RzIG9mIHR3byBvZiB0aGUgd29ybGQncyBiaWdnZXN0IHBva2VyIG5hbWVzIGNvbWluZyB0b2dldGhlci4gIlRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgaXMgdW5lcXVhbGxlZCBieSBhbnkgb3RoZXIgcG9rZXIgZXZlbnQgaW4gdGhlIHdvcmxkIHRvZGF5IGFuZCBpcyBhIGdyZWF0IHN0ZXBwaW5nIHN0b25lIGZvciBhbnkgb25saW5lIHBva2VyIHdobyB3aXNoZXMgdG8gbWFrZSBhIG1hcmsgaW4gdGhlIG9mZiBsaW5lIHBva2VyIHdvcmxkLiBUaGF0IGlzIHdoeSBldmVyeW9uZSB3YW50cyB0byBwbGF5IGF0IHRoZSBXb3JsZCBTZXJpZXMuIEluIHdoaWNoIG90aGVyIGZpZWxkIGNvdWxkIGFtYXRldXJzIGJlIHJ1YmJpbmcgc2hvdWxkZXJzIHdpdGggcHJvZmVzc2lvbmFscz8iIEhlcmVhIHNhaWQuClRoZSBzcGVjaWFsIGNvdW5zZWwgYXBwZWFycyB0byBiZSBvcGVuIHRvIHNvbWUgdmVyc2lvbiBvZiB0aGlzLCB0aG91Z2ggdGhlIHNvdXJjZSBkaWQgbm90IGV4cGxhaW4gdG8gd2hhdCBleHRlbnQgc3BlY2lhbCBjb3Vuc2VsIGlzIGFncmVlYWJsZS4KQSBmZXcgcXVpY2sgYW5zd2VyczogVGhlIGtpZHMgdGFsayB0byBhIGdyaWVmIGNvdW5zZWxvciBhdCB0aGVpciBzY2hvb2wuIApUaGUgZXZlbmluZydzIGZlc3Rpdml0aWVzIGNvbmNsdWRlZCB3aXRoIHRoZSBwcmVzZW50YXRpb24gb2YgdGhlIFJvYmVydCBMLiBCcnVubmluZyBNZW1vcmlhbCBBd2FyZCwgYSBwcmVzdGlnaW91cyBhd2FyZCBnaXZlbiB0byBhbiBFTVMgRGlzdHJpY3QgdGhhdCBleGVtcGxpZmllcyBvdXRzdGFuZGluZyBwcm9mZXNzaW9uYWxpc20gYW5kIHNlcnZpY2UgdG8gdGhlIGNvbW11bml0eSBpdCBzZXJ2ZXMuIApGaW5hbGx5LCB0aGUgVVMgZG9sbGFyIGlzIGFuIEFtZXJpY2FuIGhvbGUgY2FyZC4gT2YgdGhlIGZvcmVpZ24gcmVzZXJ2ZXMgaGVsZCBieSB0aGUgd29ybGQgZ292ZXJubWVudHMsIGp1c3QgMS4xIHBlciBjZW50IGFyZSBpbiByZW5taW5iaSwgY29tcGFyZWQgd2l0aCA2NCBwZXIgY2VudCBmb3IgdGhlIGRvbGxhci4gCkJ1dCBJIHdvdWxkIGFkdmlzZSB0aGUgSW5kaWEgRGVubWFyayBjb2FsaXRpb24gdG8gcGVyaGFwcyBsaW1pdCB0aGVpciBpbnZhc2lvbiB0byBJbGxpbm9pcyAgYSBmbGF0IHN0YXRlIGFuZCB0aGVyZWZvcmUgZWFzaWx5IGNvbnRyb2xsZWQuIApUaGUgc2hvdyBraWNrZWQgb2ZmIHdpdGggdHdvIG9mIElGQVAncyBtb3N0IHByb2xpZmljIGdyYWR1YXRlcywgbWFsZSBtb2RlbHMgSmFoYW4gZSBLaGFsaWQgYW5kIEF0aGFyIEFtaW4sIHNhdW50ZXJpbmcgZG93biB0aGUgcmFtcCBpbiBmdW4gcHJpbnRlZCBzaGlydHMgYW5kIHNob3J0cy4gClNsZXZlbWNkaWFjaGVsICAzIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KUGF5aW5nICQ2MCBmb3IgdGhpcyBnYW1lLCBpbiBteSBleWVzLCBpcyBub3Qgd29ydGggaXQuIApJIG5vdCB0cnlpbmcgdG8gaGF0ZSBvbiBoZXIgYnV0IGl0IGp1c3Qgb2RkIHRvIG1lLiAKQW50aHJvcG9sb2dpZSBpcyBhY3R1YWxseSBwcm9iYWJseSBhIHJlYWxseSBnb29kIHN0b3JlIGZvciB5b3UgdG8gc3RhcnQgd2l0aC4gVGhpcyB0dW5pYyBhbmQgdGhpcyBibG91c2Ugd291bGQgd29yay4gT2xkIE5hdnkgaGFzIGxpbmVuIHBhbnRzIHRoYXQgYWxzbyBmaXQgdGhlIHN0eWxlLgpHZXR0aW5nIDIgcGFpcnMgb2YgcXVlZW4gaXMgYSBwcmV0dHkgZGVjZW50IHdheSB0byBzdGFydCBUZXhhcyBIb2xkIEVtLiBUaGV0IGFyZSBjYWxsZWQgbGFkaWVzLgpGYW1pbHkgZmlyc3QgZm9yIGhhbmR5bWFuIEJyeWFuIEJhZXVtbGVyCkFuZCBpbiB0ZXJtcyBvZiBoaXJpbmcsIHRoaXMgbmV3ZXIgZWNvbm9teSByZW1haW5zIGNvbmNlbnRyYXRlZCBpbiB1cmJhbiBjZW50cmVzIHdpdGggZmFtb3VzIHVuaXZlcnNpdGllcy4gU28gcGVvcGxlIHVuY29ubmVjdGVkIHRvIHRoZXNlIHBsYWNlcyB3aWxsIGxvb2sgYXQgTW9ybmVhdSB0d2VldCBhbmQgd29uZGVyIHdoYXQgaGUgaXMgdGFsa2luZyBhYm91dC4uIApIZXJlIEkgYWNjaWRlbnRhbGx5IGdvdCBwcmVnbmFudCB3aGVuIGJpcnRoIGNvbnRyb2wgZmFpbGVkIG1lIGxhc3QgeWVhciBhbmQgSSB0ZXJtaW5hdGVkIHRoZSBwcmVnbmFuY3kgZXZlbiB0aG91Z2ggSSBzdGlsbCBkb24gZmVlbCBnb29kIGFib3V0IGl0LiAKIldlIHdlcmUgcmVhbGx5IGV4Y2l0ZWQgdG8gd29yayB3aXRoIHRoZW0gb24gZmlndXJpbmcgb3V0IGhvdyB3ZSBjYW4gbWFrZSB0aWtpIGludGVyZXN0aW5nIGluIGEgYmFzZW1lbnQgd2l0aG91dCBjdWx0dXJhbCBhcHByb3ByaWF0aW9uLCIgTHluY2ggZXhwbGFpbmVkLiAKRm9vZCBpcyBhIEhVR0UgZW1vdGlvbmFsIGNvcGluZyBtZWNoYW5pc20gZm9yIG1lLCBzbyBJIGJhdHRsaW5nIG1vcmUgdGhhbiBqdXN0IGZvb2QgY2hvaWNlcywgYnV0IGhvdyBJIGNvbnRyb2wgYW5kIGFwcHJvYWNoIG15IGVtb3Rpb25zIHRvby4gVGhpbmsgSSBoYXZlIGEgc3VnYXIgZnJlZSBKZWxsbyB0byBjZWxlYnJhdGUgaGFoYS4gTGl0dGxldmljdG9yaWVzLiAKSSB0b2xkIHRoZXNlIGd1eXMgSSBoYXZlIHN0YWxrZXJzIGFuZCBpdCB3YXMgc3RyZXNzaW5nIG1lIG91dC4gCiJDYXNpbm9zIHRoYXQgZ2l2ZSBsZXNzb25zIGFyZSBsZXNzIGludGltaWRhdGluZywiIHN1Z2dlc3RlZCBTZWhsaW5nZXIuICJPdXIgcmVhZGVycyB0ZWxsIHVzIHRoZXkgdGFrZSBsZXNzb25zIGFuZCBoYXZlIGEgYmFsbC4gUGx1cywgdGhlcmUncyBhIGdyZWF0IHNvY2lhbCBkaW1lbnNpb246IFlvdSdsbCBtZWV0IHBlb3BsZS4iCk15IHRlYWNoZXIgb25jZSBwdXQgaXQgdGhhdCBqdWthaSBpcyBsaWtlIGEgc3R1ZGVudCBtYXJyaWFnZSB0byB0aGUgdW5pdmVyc2UsIGFuZCBJIGxvdmVkIHRoaXMgZGVzY3JpcHRpb24uIEZvciBtZSBpdCB3YXMgYSBxdWl0ZSBqb3lvdXMgcHVibGljIHN0YXRlbWVudCB0aGF0IEkgbm93IGhhdmUgYSByZXNwb25zaWJpbGl0eSB0byBsaXZlIG15IGxpZmUgYWNjb3JkaW5nIHRvIHRoZSB2b3dzLgpIYXZlIGZ1biBpbiBCYW5mZiwgeW91IGZ1Y2tpbmcgd2hvcmVzISEKWW91ciBjYXQgY291bGQgYmUgc2Vuc2l0aXZlIHRvIHN0cmVzcywgb3IgYWxsZXJnaWMgdG8gYSBuZXcgZm9vZCBvciBncm9vbWluZyBwcm9kdWN0LiAKQnV0IHRoZXkga2VlcCBnZXR0aW5nIGludG8gdGhlaXIgY2FyLiAKR3JlYXQgc3R1ZmYuLiAKTWFyeWxhbmQgaW52ZXN0aWdhdG9ycyB3ZXJlIG5vdyBhYmxlIHRvIHNlZSB0aGUgY29ubmVjdGl2ZSBicmlkZ2VzIGluIGRpZ2l0aXplZCBmb3JtLi4gCkRlcmVrIEx1LiBFbmpveSBCZXR0ZXIgTHVjayBUb21vcnJvdyBvbmxpbmUgd2l0aCBYZmluaXR5J3MgaGlnaCBxdWFsaXR5IHN0cmVhbWluZyAuIFN0YXJ0IGJ5IHNlbGVjdGluZyBBZGQgdG8gRmF2b3JpdGVzIG9uIHRoZSBJbmZvIHNjcmVlbiBvZiBhbnkgc2hvdywgbW92aWUgb3IgdGVhbS4gCldhcm5lciBNZWRpYSwgS0tSIGFuZCBXZWxscyBGYXJnbyBTZWN1cml0aWVzIGFyZSBjb21pbmcgdG8gMzAgSHVkc29uIFlhcmRzLiBQb2ludCA3MiBhbmQgbGF3IGZpcm0gTWlsYmFuayBUd2VlZCBoYXZlIHN0YXJ0ZWQgbW92aW5nIGludG8gNTUgSHVkc29uIFlhcmRzLiBHbG9iYWwgZmluYW5jaWFsIGdpYW50IEJsYWNrUm9jayB3aWxsIGFuY2hvciA1MCBZYXJkcyBub3cgaW4gY29uc3RydWN0aW9uLi4gCk5vdyBJIHdvbmRlciBpZiBzaW1wbHkgd2FpdGluZyB1bnRpbCBoZSBzY29yZXMgdGhlIGtpbGwgdG8gZ2l2ZSBoaW0gaGlzIGhlYWxpbmcgd291bGQgYmUgZW5vdWdoLi4gCkl0IGhhcyBiZWVuIGVpZ2h0IG1vbnRocyBzaW5jZSB0aGUgUHJlc2lkZW50IGRlY2xhcmVkIHRoZSBvcGlvaWQgZXBpZGVtaWMgYSBwdWJsaWMgaGVhbHRoIGVtZXJnZW5jeS4gWWV0IGl0IGlzIGZyYW5rbHkgaGFyZCB0byBpbWFnaW5lIGFueXRoaW5nIGJ1dCBoaWdoZXIgb3ZlcmRvc2UgcmF0ZXMgYW5kIG1vcmUgYWRkaWN0aW9uIGluIHRoZSBmb3Jlc2VlYWJsZSBmdXR1cmUsIGlmIGN1cnJlbnQgdHJlbmRzIGNvbnRpbnVlLiBBdCB0aGUgZmVkZXJhbCBsZXZlbCwgdGhlIG1vbmV5IGFsbG9jYXRlZCBzbyBmYXIgdG8gZmlnaHQgdGhlIGVwaWRlbWljIHdhcyBjYWxsZWQgYSBieSB0aGUgTmV3IFlvcmsgVGltZXMgRWRpdG9yaWFsIEJvYXJkIG9uIEFwcmlsIDIxc3QuIFRhbGsgb2Ygbm9uIG9waW9pZCBhbmFsZ2VzaWNzLCB3aGlsZSBwZXJoYXBzIGhlbHBmdWwgZm9yIGN1cnJlbnQgYW5kIGZ1dHVyZSBwYWluIHN1ZmZlcmVycywgaXMgaGFyZGx5IGEgc29sdXRpb24gZm9yIHRoZSBtaWxsaW9ucyBvZiBwZW9wbGUgYWxyZWFkeSBhZGRpY3RlZC4gQ3JpbWluYWwganVzdGljZSBhcHByb2FjaGVzLCBsaWtlIGJvcmRlciBpbnRlcmRpY3Rpb24sIGFycmVzdCBhbmQgbWF4aW1hbGx5IHNlbnRlbmNpbmcgZHJ1ZyBkZWFsZXJzIGV2ZW4gc29tZSBoYXMgbmV2ZXIsIGluIHRoZSBsb25nIGhpc3Rvcnkgb2YgdGhlIFdhciBvbiBEcnVncywgYmVlbiBzdWNjZXNzZnVsLiBNb3Jlb3ZlciwgdGhlc2UgYXBwcm9hY2hlcyB0b3dhcmRzIGRydWcgdXNlIGFyZSBwYXJ0IG9mIHdoeSBvdXIgY291bnRyeSBoYXMgdGhlIGdyZWF0ZXN0IG51bWJlciBvZiBwcmlzb25lcnMgb24gZWFydGgsIGEgZ29vZCBwcm9wb3J0aW9uIGZvciBub24gdmlvbGVudCBkcnVnIG9mZmVuc2VzLiBDbGVhcmx5IGNyaW1pbmFsaXppbmcgYWRkaWN0aW9uIGhhcyBub3Qgd29ya2VkLCBldmVyIGFuZCwgb2YgY291cnNlLCB0aGlzIGFwcHJvYWNoIGFsc28gZGlzcHJvcG9ydGlvbmF0ZWx5IGZhbGxzIG9uIHBlb3BsZSBvZiBjb2xvciBhbmQgdGhvc2UgbGl2aW5nIGluIHBvdmVydHkuCkxpc3RlbiwgdGlwcyBhcmUgZ3JlYXQsIGVzcGVjaWFsbHkgY29uc2lkZXJpbmcgeW91IGRlYWwgYWJvdXQgdGhpcnR5IHRvIHRoaXJ0eSBmaXZlIGhhbmRzIGFuIGhvdXIuIFRoZSBvbmx5IHByb2JsZW0gaXMgcGVvcGxlIGFyZSBnb2luZyB0byBsb3NlLiBJdCBpcyBpbmV2aXRhYmxlIGFuZCB3aGVuIHNvbWUgb2YgdGhlbSBkbywgdGhleSBhcmVuJ3QgdmVyeSBmcmllbmRseS4gV2h5PyBXZWxsLCB0aGUgYmxhbWUgaGFzIHRvIGdvIHNvbWV3aGVyZSBhbmQgaW5zdGVhZCBvZiBzdGF5aW5nIHdpdGhpbiB0aGVpciBtZWFucywgdGhleSBibGFtZSB5b3UgZm9yIHRoZSBiYWQgY2FyZHMuIFNvIGp1c3Qga2VlcCB0aGlzIGluIG1pbmQgYmVmb3JlIHlvdSBnZXQgc3RhcnRlZC4gSWYgeW91IGtub3cgYWxsIGFib3V0IGl0IHVwZnJvbnQsIGl0IHdvbid0IGJlIGFzIGJhZCB3aGVuIGl0IGFjdHVhbGx5IGhhcHBlbnMuCkkgaGF2ZSBhIG1hc3NpdmUgYmFja2xvZyBvZiBTdGVhbSBnYW1lcywgYWxtb3N0IGFsbCBzaW5nbGUgcGxheWVyLiAKRm9yIHRoZSBvdGhlciBvbmVzIHRoYXQgeW91IG5lZWQgdG8gYmUgaW4gQmxhY2t3YXRlciBmb3IgdGhlcmUgYSBnbGl0Y2ggd2l0aCBhIGNlcnRhaW4gbWlzc2lvbiB0aGF0IHRha2VzIHBsYWNlIGluIGEgZ3JhdmV5YXJkIGluIGNoYXB0ZXIgZm91ci4gKE5vdCBnb2luZyB0byBkZXNjcmliZSBpdCBhbnkgZnVydGhlciBjYXVzZSBJIHdhbnQgdG8gYXZvaWQgc3BvaWxlcnMsIHlvdSBrbm93IGl0IHdoZW4geW91IHNlZSBpdCkgaGF2ZSB0aGUgbGF3IHNwb3QgeW91IGFuZCB0aGVuIHJpZGUgdG8gQmxhY2t3YXRlciB3aGlsZSBzdGlsbCBpbiBtaXNzaW9uIGFuZCB0aGUgbGF3IHdvbiBjb21lIGFmdGVyIHlvdSwgc28geW91IGNhbiBmaW5pc2ggdGhlIGNoYWxsZW5nZXMgdGhlbi5JIG5ldmVyIGdvdCB3aHkgeW91IGNvdWxkbiBnZXQgdGhlIGxlZ2VuZCBvZiB0aGUgZWFzdCBvdXRmaXQgd2hpbGUgcGxheWluZyBhcyBBcnRodXIsIGNhdXNlIHN0b3J5IHdpc2UsIEFydGh1ciBpcyB0aGUgbGVnZW5kIG9mIHRoZSBlYXN0LCBhbmQgSm9obiBpcyB0aGUgbGVnZW5kIG9mIHRoZSB3ZXN0LnJpdmVqdSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1BsYXkgYXQgRW1lcmFsZCBTdGF0aW9uLiBCYXNpY2FsbHkgdG8gd2luLCB5b3UganVzdCBoYXZlIHRvIGJlIGZpcnN0IHRvIGdvIG91dC4gCkN1dGxlciBuZWVkcyBhIGhlYXJ0IG9yIGEga2luZyB3aXRoIHRoZSBuZXh0IHR3byBjYXJkcyB0byB3aW4uIApXaGF0IGdvb2QgZG9lcyB0aGF0IGFjdHVhbGx5IGRvIGZvciBhbmltYWxzIGFuZCB0aGUgZW52aXJvbm1lbnQsIHRob3VnaD8gVGhlIHRoaW5ncyB3ZSB0YWxrIGFib3V0IGFuZCBhcmUgZWR1Y2F0ZWQgYWJvdXQganVzdCBhcmVuIGluIGxpbmUgd2l0aCBob3cgd2UgY2FuIGJlc3QgY2FyZSBmb3IgdGhlIHBsYW5ldCBhbmQgdGhlIGxpdmluZyBiZWluZ3MgdGhhdCBpbmhhYml0IGl0LCBhbmQgYnJlYWtpbmcgZG93biB0aGF0IGNvZ25pdGl2ZSBkaXNzb25hbmNlIGlzbiBnb2luZyB0byBiZSBhIGZ1biwgZWFzeSB0YXNrLi4gCkdyYW50ZWQsIHdlIGFyZSBnZXR0aW5nIG9sZCBhbmQgYXMgd2UgYWdlLCBzaHVmZmxpbmcgY2FyZHMgZG9lc24ndCByZWFsbHkgd29yayBhcyB3ZWxsIGFzIGl0IHVzZWQgdG8gZWFjaCBtb250aC4gVGhlIG1ham9yaXR5IG9mIHRoZXNlIGd1eXMgaGF2ZSBiZWVuIHdpdGggdXMgZm9yIGNsb3NlIHRvIHRoaXJ0eSBmaXZlIHllYXJzIGluIG9uZSB3YXkgb3IgYW5vdGhlciwgc28gd2UgaGF2ZSBzZWVuIHRoZWlyIHVwcyBhbmQgZG93bnMgdGhyb3VnaCBsaWZlIGFsb25nIHRoZSB3YXkuIEhvd2V2ZXIsIGZvciBvbmUgbmlnaHQgZWFjaCBtb250aCBpdCBzZWVtcyB0aGF0IHRoZWlyIHRyb3VibGVzIGFyZSBjaGVja2VkIGF0IHRoZSBkb29yIGFuZCB0aGV5IGNhbiBlbmpveSBhIG5pZ2h0IG9mIHBsYXlpbmcgcG9rZXIgYW5kIGVuam95aW5nIGVhY2ggb3RoZXIncyBjb21wYW55LgpObyBvZmZpY2lhbCB3YXJuaW5nIGNhbWUgb3V0IGZvciB0aGUgc2xhbmRlcmVyLiAKUmVwb3J0ZXI6IFNoZSBzYXlzIERhbW9uJ3MgcGFsLCBCZW4gQWZmbGVjaywgd2FzIGEgcmVndWxhciB3aG9zZSBwZWNoYW50IGZvciBnYW1ibGluZyBoYXMgbWFkZSB0aGUgbmV3cy4gU2VjdXJpdHkgYXQgdGhlIGhhcmQgcm9jayBob3RlbCBhbmQgY2FzaW5vIHRvbGQgQWZmbGVjayBxdW90ZSwgIllvdSdyZSB0b28gZ29vZCIgYW5kIHBvbGl0ZWx5IGVzY29ydGVkIGhpbSBhd2F5IGZyb20gdGhlIGJsYWNramFjayB0YWJsZS4gCklyb25zIGFyZSBhIHNhbG9uIHN0YW5kYXJkLgpWdSBsJ29yZG9ubmFuY2UgbiA1OCAxMDY3IGR1IDcgbm92ZW1icmUgMTk1OCBtb2RpZmllIHBvcnRhbnQgbG9pIG9yZ2FuaXF1ZSBzdXIgbGUgQ29uc2VpbCBjb25zdGl0dXRpb25uZWwgOwpUaGVzZSBpbmNsdWRlIHN0YXJ0aW5nIGEgZmlyZSB3aXRob3V0IHJlbHlpbmcgb24gYSBtYXRjaCBvciBsZWFybmluZyBob3cgdG8gZm9yYWdlICAgeW91IGNhbiBmb3JhZ2UgZXZlbiBpZiB5b3UncmUgYSBjaXR5IGR3ZWxsZXIsIGFuZCB3aGF0IHlvdSBjb25zaWRlciBhIHdlZWQgbWlnaHQgYmUgYSB0YXN0eSBncmVlbiB5b3UndmUgYmVlbiBtaXNzaW5nIG91dCBvbi4gCkkgZ28gdG8gYW4gUmVpIHR5cGUgc3RvcmUgYW5kIHRyeSBvbiBoaWtpbmcgYmFja3BhY2tzIHNvIHlvdSBjYW4gc2VlIHdoYXQgYnJhbmQgaXMgdGhlIG1vc3QgY29tZm9ydGFibGUgZm9yIHlvdSwgdGhlIHNpemUgd291bGQgZGVwZW5kIG9uIGlmIHlvdSBhcmUgZ29pbmcgd2l0aCBmcmllbmRzIHRoYXQgY2FuIHNwbGl0IHRoZSB3ZWlnaHQgb2YgZ2VhciBvciBieSB5b3Vyc2VsZiBhbmQgaWYgeW91IG5lZWQgdG8gY2FycnkgZm9vZC4gCkxvbm5pZWxlZTMgIDE0IHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KVXJhbGxpZGlvdHMgIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IHllYXJzIGFnbwpUaGUgR29vc2ViZXJyeSBNb3VudGFpbiBCaWtlIFBva2VyIFJpZGUgaXMgYSBmdW5kcmFpc2luZyBhY3Rpdml0eSBzcG9uc29yZWQgYnkgdGhlIFJvdGFyeSBDbHViIG9mIFppb24gQ2FueW9uLiBUaGUgQ2x1YiBpcyByYWlzaW5nIG1vbmV5IHRvIGZ1bmQgdGhlIGluc3RhbGxhdGlvbiBvZiB3YXRlciBmaWxsaW5nIHN0YXRpb25zIGF0IHRoZSBzaHV0dGxlIHN0b3BzIGluIFNwcmluZ2RhbGUgYW5kIGFsbCB0aGUgcHJvY2VlZHMgZnJvbSB0aGUgcmlkZSB3aWxsIGdvIHRvd2FyZHMgdGhlIHdhdGVyIGZpbGxpbmcgc3RhdGlvbiBwcm9qZWN0LiBUaG91c2FuZHMgb2YgdmlzaXRvcnMgZWFjaCB5ZWFyIHV0aWxpemUgdGhlIHNodXR0bGUgc3lzdGVtIGluIFNwcmluZ2RhbGUgdG8gYWNjZXNzIFppb24gTmF0aW9uYWwgUGFyay4gWmlvbiBhbmQgQnJ5Y2UgQ2FueW9uIE5hdGlvbmFsIFBhcmtzIGhhdmUgcmVjZW50bHkgaW5zdGFsbGVkIHdhdGVyIGZpbGxpbmcgc3RhdGlvbnMgZm9yVGhlIEdvb3NlYmVycnkgTW91bnRhaW4gQmlrZSBQb2tlciBSaWRlIGlzIGEgZnVuZHJhaXNpbmcgYWN0aXZpdHkgc3BvbnNvcmVkIGJ5IHRoZSBSb3RhcnkgQ2x1YiBvZiBaaW9uIENhbnlvbi4gVGhlIENsdWIgaXMgcmFpc2luZyBtb25leSB0byBmdW5kIHRoZSBpbnN0YWxsYXRpb24gb2Ygd2F0ZXIgZmlsbGluZyBzdGF0aW9ucyBhdCB0aGUgc2h1dHRsZSBzdG9wcyBpbiBTcHJpbmdkYWxlIGFuZCBhbGwgdGhlIHByb2NlZWRzIGZyb20gdGhlIHJpZGUgd2lsbCBnbyB0b3dhcmRzIHRoZSB3YXRlciBmaWxsaW5nIHN0YXRpb24gcHJvamVjdC4gVGhvdXNhbmRzIG9mIHZpc2l0b3JzIGVhY2ggeWVhciB1dGlsaXplIHRoZSBzaHV0dGxlIHN5c3RlbSBpbiBTcHJpbmdkYWxlIHRvIGFjY2VzcyBaaW9uIE5hdGlvbmFsIFBhcmsuIFppb24gYW5kIEJyeWNlIENhbnlvbiBOYXRpb25hbCBQYXJrcyBoYXZlIHJlY2VudGx5IGluc3RhbGxlZCB3YXRlciBmaWxsaW5nIHN0YXRpb25zIGZvciBmaWxsaW5nIHJldXNhYmxlIHdhdGVyIGJvdHRsZXMgcmVkdWNpbmcgdGhlIHVzZSBvZiAoYW5kIGRpc3Bvc2FsIG9mKSBib3R0bGVkIHdhdGVyLlRoZSByaWRlIGlzIGEgInBva2VyIHJpZGUiIHdoZXJlIHBhcnRpY2lwYW50cyBhY2N1bXVsYXRlIHBsYXlpbmcgY2FyZHMgYWxvbmcgdGhlIHJpZGUuIEF0IHRoZSBlbmQgb2YgdGhlIHJpZGUsIHRoZSBwZXJzb24gd2l0aCB0aGUgYmVzdCBwb2tlciBoYW5kIHdpbGwgd2luIGEgY2FzaCBwcml6ZS5Hb29zZWJlcnJ5IE1lc2EgaXMgYSBwb3B1bGFyIG1vdW50YWluIGJpa2luZyBhcmVhLiBUaGUgcG9rZXIgcmlkZSB3aWxsIGV4aXN0aW5nIG1vdW50YWluIGJpa2UgdHJhaWxzIG9uIHRoZSBtZXNhLiBUaGUgcmlkZSBpcyBhYm91dCA5IG1pbGVzIGxvbmcgYW5kIHNob3VsZCB0YWtlIGFib3V0IDEgMS8yIHRvIDIgaG91cnMgdG8gY29tcGxldGUuCkFuZCB3aGlsZSBGb3ggaXNuJ3QgZ2V0dGluZyBvdXQgb2YgdGhlIHNjcmlwdGVkIFRWIGJ1c2luZXNzIGFsdG9nZXRoZXIsIGEgbmV3IGNvbXBldGl0aW9uIHNlcmllcyBpcyBwcm92aWRpbmcgYWR2ZXJ0aXNlcnMgd2l0aCBhbiBhZHZhbmNlIGxvb2sgYXQgd2hhdCB0aGUgb3ZlcmhhdWxlZCBuZXR3b3JrIHdpbGwgaGF2ZSB0byBvZmZlciBpbiB0aGUgc3ByaW5nIHVwZnJvbnQgYmF6YWFyLi4gCkl0IHRvb2sgSmVmZiBhbmQgSSBmb3JldmVyIHRvIGFncmVlIG9uIGEgaG91c2UuIFdlIGxvb2tlZCBhdCBvdmVyIDEwMCBob3VzZXMgd2hlbiB3ZSBmaXJzdCBkZWNpZGVkIHRvIGdldCBvdXQgb2YgdGhhdCBsaXR0bGUgc3R1ZGlvLiBPZiBjb3Vyc2Ugd2UgcmVhbGx5IG5lZWRlZCB0byB3aXRoIG9uZSBiYWJ5IGFsbW9zdCAxIGFuZCBhbm90aGVyIG9uIHRoZSB3YXkuLiAKSWYgeW91IHN0aWxsIGluc2lzdCBvbiBzcGVuZGluZyA0MGssIHBsZWFzZSBkbyB5b3VyIGR1ZSBkaWxpZ2VuY2UgYW5kIGFzayBoZXIgd2hhdCBzaXplIHN0b25lIHNoZSBwcmVmZXJzL2xvb2tzIGdvb2Qgb24gaGVyLiBJIGFtIGEgc2l6ZSAzLjUgSSBsb3ZlIHNwcmFrbGUsIGJ1dCBJIGNhbid0IHdlYXIgaXQuIApIb3dldmVyLCBmb3IgYWNjZXNzaW5nIGpvYnMsIHB1YmxpYyB0cmFuc2l0IHNlcnZlcyBkb3dudG93bnMgYmV0dGVyIHRoYW4gb3RoZXIgcGxhY2VzLiBBbmQgYXMgam9icyBoYXZlIHN1YnVyYmFuaXplZCwgcmVhY2hpbmcgdGhlbSBieSB0cmFuc2l0IGlzIGEgZm9ybWlkYWJsZSBjaGFsbGVuZ2UgZm9yIG1vc3Qgd29ya2Vycy4gRXF1YWxseSBpbXBvcnRhbnQgaXMgdGhhdCBjb21tdXRlcyBieSBwdWJsaWMgdHJhbnNpdCBhcmUgbXVjaCBzbG93ZXIgdGhhbiBieSBjYXJzLgpXaGVuIGEgcGVyc29uIGFza3MgdGhlIFRoZW90b2tvcywgb3IgYW55IG90aGVyIHNhaW50LCB0byBwcmF5IGZvciB0aGVtLCBpdCBpcyBqdXN0IGxpa2Ugd2hlbiB3ZSBhc2sgZm9yIGFueW9uZSBlbHNlIHRvIHByYXkgZm9yIHVzLiAKTXkgcGxhbiBhbmQgcmVhc29ucyBhcmUgc28gc2ltaWxhciB0byB5b3VyczsgSSBhbSBhbHNvIGFuIGV4IENocmlzdGlhbiBub24gYmVsaWV2ZXIgd2hvIHN0aWxsIGNvbnNpZGVycyBDaHJpc3RpYW5pdHkgYXMgcGFydCBvZiBteSBpZGVudGl0eSwgYW5kIEkgYW0gYWxzbyB3b3JraW5nIHRvIG1vdmUgdG8gR2VybWFueS4KTmV3YmllIEZyaWVuZGx5OiBhIGxhbmQgcHJpbWFyaWx5IGJhc2VkIGNhc2lubyBjb3VsZCBiZSBhbiBpbnRpbWlkYXRpbmcgcGxhY2UgZm9yIHRoZSBuZXdiaWUgZ2FtYmxlci4gCklmIHRoZXkgYnV5IGEgdGlja2V0LCB0aGV5IHN1cHBvcnRpbmcgaGltLi4gClNpbGVuY2UgaXMgYSBwb3dlcmZ1bCBlZmZlY3QgaW4gbXVzaWMgICBjYXNlIGluIHBvaW50LCBBcnZvIFBydC4gClRoaXMgd2lsbCBiZSBncmVhdGx5IGFwcHJlY2lhdGVkLiAKSSBjYW4gb25seSBzcGVhayBmcm9tIG15IG93biBleHBlcmllbmNlLiBJIHB1dCBhbG1vc3QgYWxsIG15IGJpZHMgYXQgbGVzcyB0aGFuIGEgZG9sbGFyICAgbW9zdGx5IGludGhlICQwLjIwIHRvICQwLjcwIHJhbmdlLiAKSSBoYXZlIGRlZmluaXRlbHkgZmVsdCB0aGlzIHdheSBiZWZvcmUuIApJIGRvbiBiZWxpZXZlIGluIEdvZCwgYnV0IGlmIEkgZGlkLCB3aGF0IGxvdmluZyBHb2Qgd291bGQgc2V0IHVwIHNpbGx5IHJ1bGVzIGxpa2UgdGhhdD8/Py4gCkFsbCBwZW9wbGUgdGhhdCBpc2dvaW5nIHRvIGJ1eSBjaGlwcyBmcm9tIFp5bmdhIHBva2VyIG11c3QgYmUgY2FyZSB0aGF0IGlzIGp1c3RjaGVlcmluZyBtb25leSBhbmQgbm90aGluZyBlbHNlLiBKdXN0IHlvdSBjYW4gYnV5IGNoaXBzIGFuZCBhZnRlcndpbiBjYW5ub3Qgc2VsbCBvdXQgaXQuIApJIGp1c3QgZmluaXNoZWQgYSB0aW1lIHRyYXZlbCBwaWVjZS4gRm9yIG1lLCBJIGhhZCB0d28gaXNzdWVzLiBUaGUgZmlyc3Qgd2FzIHRoYXQgSSB3cm90ZSB0aGUgZmlyc3QgZHJhZnQgd2l0aG91dCBhIHRpbWVsaW5lLiBEbyBpdCBmaXJzdC4gRXNwZWNpYWxseSBpZiB5b3UgaGF2ZSBtdWx0aXBsZSBjaGFyYWN0ZXJzL3N0b3J5bGluZXMganVtcGluZyB0aHJvdWdoIHRpbWUuIEV2ZW4gaWYgaXQganVzdCBhIHJvdWdoIHRpbWVsaW5lIHRoYXQgY2hhbmdlcyB0aHJvdWdob3V0IGRyYWZ0cyBpdCB3aWxsIGtlZXAgdGhlIGNocm9ub2xvZ2ljYWwgb3JkZXIgaW50YWN0IG1ha2UgZXZlcnl0aGluZyBtdWNoIGVhc2llciBmb3IgeW91LiAoTWluZSB3YXMganVzdCBhIGJhc2ljIG9uZSBvbiBNaWNyb3NvZnQgRXhjZWwuKQpGcm9tIHRoZSBiZWdpbm5pbmcgb2Ygb3VyIHJlbGF0aW9uc2hpcCwgSSBrbmV3IHRoYXQgaGUgaGFkIGEgcGFzc2lvbiBmb3IgZ29sZiBhbmQgcGxheWluZyBwb2tlci4gCkdvaW5nIHRvIG1lZXR1cHMsIGNvbmZlcmVuY2VzLCBhbmQganVzdCBnZW5lcmFsbHkgYmVpbmcgaW52b2x2ZWQgaW4gdGhlIGNvbW11bml0eSBoZWxwcy4gSWYgeW91IGNhbiBoYW5kbGUgcHVibGljIHNwZWFraW5nLCB0cnkgc3BlYWtpbmcgYXQgYSBtZWV0IHVwLiBJIGZpbmQgdGhhdCBpdCByZWFsbHkgZ2V0cyB5b3Ugbm90aWNlZCBhbmQga25vd24sIHdoaWNoIGlzIHRoZSBtYWluIGZhY3RvciBmb3IgZ2V0dGluZyBsb2NhbCBidXNpbmVzcy4KV2l0aCA0NTAsMDAwIEF1c3RyYWxpYW5zIHBsYXlpbmcgdGhlIGdhbWUgKG9yIHNwb3J0KSBlYWNoIHdlZWssIGhvd2V2ZXIsIGl0IHByb2JhYmx5IHRpbWUgdG8gZ2l2ZSBwb2tlciBhIHNvbGlkIGRlZmluaXRpb24gaW4gYW4gZXJhIHdoZW4gbmV3c3BhcGVycyBhcmUgYmF0dGxpbmcgdG8gbHVyZSBtb3JlIHJlYWRlcnMuIFRoZSBiYXJyaWVyIHRvIHByb21vdGluZyBwb2tlciByZW1haW5zIHRoZSBpbmNpdGVtZW50IHRvIGdhbWJsZSwgd2hpY2ggaXMgaWxsZWdhbC4gCk11c2hlcnMgYXJlIHJlcXVpcmVkIHRvIHRha2UgYW4gOCBob3VyIHJlc3QgZWl0aGVyIGF0IFNoYWdlbHVrIG9yIG9uZSBvZiB0aGUgWXVrb24gUml2ZXIgY2hlY2twb2ludHMuIApPay4gSSBkb24ndCBiZWxpZXZlIHlvdSd2ZSBhZGVxdWF0ZWx5IGRlZmluZWQgYW55IG9mIHlvdXIgMyBjcml0ZXJpYSAoImFsaXZlIiwgImEgc2VwYXJhdGUgb3JnYW5pc20iLCAicG9zc2VzcyBodW1hbiBETkEiKSwgYW1vbmcgb3RoZXIgcHJvYmxlbXMuIFRoZXJlIGFyZSBhIGJ1bmNoIG9mIGJhY3RlcmlhIHRoYXQgbWVldCB0aGUgbmV3IGRlZmluaXRpb24gZm9yIHBlcnNvbmhvb2QuIEZvciB0aGF0IG1hdHRlciBpdCBhcHBlYXJzIHRvIGFwcGx5IHRvIGEgc3Blcm0gYW5kIGVnZyBwaHlzaWNhbGx5IG5leHQgdG8gb25lIGFub3RoZXIsIGp1c3QgYXMgbXVjaCBhcyBpdCBhcHBsaWVzIHRvIGEgZmVydGlsaXplZCBlZ2cgImF0IGNvbmNlcHRpb24iLiBZb3UgYWxzbyBoYXZlbid0IHRyaWVkIHRvIGRlZmluZSAiY29uY2VwdGlvbiIgYXMgZmFyIGFzIEkgY2FuIHNlZS4KVGhlIHNvbmcgZGlkIHJlYWNoIDEgb24gc29tZSByZWdpb25hbCBjaGFydHMuIApUaGF0IHNlZW1zIHRvIGJlIGEgY2l0eSB0aGluZy4gClRoZXkgd2VyZSBhYmxlIHRvIGRpc2NvdmVyIFNhbCBBZGVlbiBwbGFuLCBraWxsIGhpbSBtb21lbnRzIGJlZm9yZSBoZSB3YXMgYWJsZSB0byByZXR1cm4gaGltc2VsZiB0byBoaXMgaW1tb3J0YWwgZm9ybSwgYW5kIHRoZXkgYXJlIGhlcm9lcyBpbiB0aGUgaGVhcnRzIG9mIHRoaXMgc21hbGwgdG93bi4uIApXb3JraW5nIHRvIGhlbHAgb3VyIHZldGVyYW5zLCBhbmQgcGVvcGxlIGxpdmluZyBhIGxpZmUgb2YgYWRkaWN0aW9uIHRvIGdldCBvZmYgdGhlIHN0cmVldHMgYW5kIGludG8gcmVjb3ZlcnkgcHJvZ3JhbXMsIG9mZmVyaW5nIHByYXllciBhbmQgc29tZXRpbWVzIGxlYWRpbmcgcGVvcGxlIHRvIHRoZSBMb3JkLi4gCkkgZ290IHNvIG1hbnkgcG9zaXRpdmUgbWVzc2FnZXMgYW5kIGNhbGxzIGZyb20gcGVvcGxlIHRoYXQgd2hlcmUganVzdCBnZW51aW5lbHkgaGFwcHkgd2hpY2ggd2FzIHJlYWxseSBuaWNlLiAKSW5pdGlhbGx5IEFtZXJpY2EgbHVja2VkIG91dCBiZWNhdXNlIGFsbCBvZiB0aGUgYXRvbSBib21icyBmaXJlZCBpbnRvIHRoZSBoaWdoIGF0bW9zcGhlcmUgZGlkbid0IHJlYWxseSBkbyBhbnl0aGluZy4gSW5zdGVhZCBvZiBsZWF2aW5nIHdlbGwgZW5vdWdoIGFsb25lLCB0aGUgZGVjaXNpb24gd2FzIG1hZGUgdG8gdXAgdGhlIGNhbGliZXIuIEluc3RlYWQgb2YgV1dJSSBzdHlsZSBhdG9tIGJvbWJzLCBpbiAxOTYyLCBhIGh5ZHJvZ2VuIGJvbWIgd2FzIGRpc3BhdGNoZWQgMjUwIG1pbGVzIGludG8gdGhlIGFpciBmcm9tIHRoZSBQYWNpZmljIE9jZWFuIHRvIHRoZSBTb3V0aGVhc3Qgb2YgSGF3YWlpLiAKVG9wIG15IDI0IHllYXJzIG9sZCBhIG1vbnRoIGFnbyAoMjYgSmFudWFyeSksIGxpZmUgaXMgZXhjZXB0aW9uYWxseSBleHRyYSwgYnV0IEkgdGFraW5nIGEgNiBtb250aHMgYnJlYWsgZnJvbSBzY2hvb2wgc28gSSBjYW4gZ2V0IGludG8gYSB0aGVyYXB5IHdoaWxlIEkgc3RpbGwgeW91bmcuIEkgZmluYWxseSBjb21lIHRvIHJlYWxpc2UgdGhhdCBubywgaGF2aW5nIGRhcmsgdGhvdWdodHMgYWxtb3N0IGV2ZXJ5IGRheSB3aGVuIHlvdSBmYWlsIHNvbWV0aGluZyBpc24gcmlnaHQuClRhaURvbGxXYXZlICA5IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhlIGFnaW5nIGRlbW9ncmFwaGljIHdpbGwgaGVscCBkcml2ZSBkZW1hbmQgYW5kIGV2ZW4gaWYgeW91IGVtcGxveWVkIHdpdGggYSBwbGFuLCBtYXNzYWdlIHRoZXJhcHkgb2Z0ZW4gaXNuIGZ1bGx5IGNvdmVyZWQgYW5kIHRoZXNlIHByaWNlcyBhcmUgdmVyeSBhdHRyYWN0aXZlLiBJIGxpa2UgdGhhdCBzaGUgdGFyZ2V0aW5nIHNtYWxsIHRvd25zIGFuZCBzdWJ1cmJzIGFuZCBsb2NhdGluZyBpbiBzdHJpcCBwbGF6YXMuIApJbiAxOTk3LCBMYWRicm9rZSBmaWxlZCBhIHNlY29uZCBjb21wbGFpbnQgd2hlbiB0aGUgRnJlbmNoIGdvdmVybm1lbnQgcmVkdWNlZCB0aGUgc3RhdGUgYmV0dGluZyBsZXZ5IGJ5IGFwcHJveGltYXRlbHkgMS4xJSB0byBoZWxwIGRldmVsb3AgUE1VIHNvY2lhbCBzY2hlbWUsIGltcGxlbWVudCBhIGNvbXB1dGVyaXplZCBiZXR0aW5nIHN5c3RlbSBhbmQgcmVzdHJ1Y3R1cmUgUE1VIG1ham9yaXR5IHNoYXJlaG9sZGVycy4gCkl0IGNvdWxkbid0IGJlIHNpbXBsZXIgdG8gbGVhcm4gYW5kIHBsYXkgc2luY2UgdGhlcmUgYXJlIG5vIGNvbXBsaWNhdGVkIHJ1bGVzIG9mIHBsYXlpbmcgc3RyYXRlZ2llcyB0aGF0IGNhbiBiZSB1c2VkLiBUaGUgZ2FtZSBpcyBhIGdhbWUgb2YgbHVjayBhbmQgY2hhbmNlLiBUaGUgcGxheWVyIHdobyB3aW5zIGRvZXMgc28gYmVjYXVzZSBvZiBsdWNrLCBub3QgYmVjYXVzZSBvZiBza2lsbC4uIApJIGZvdW5kIGl0IHRvIGJlIGEgbG90IG1vcmUgc3RyZXNzZnVsIGFuZCBwcmVmZXJyZWQgbXkgcmVndWxhciBqb2IuIAoiTGlxdW9yIEdhbWluZyBOU1cgcHJvdmlkZXMgZnJlZSB5ZWFybHkgZGF0YSBvbiBnYW1pbmcgbWFjaGluZSBudW1iZXJzIGFuZCB0dXJub3ZlciBpbiBlYWNoIE5TVyBsb2NhbCBnb3Zlcm5tZW50IGFyZWEsIiB0aGUgc3Bva2VzbWFuIHNhaWQuIlRoaXMgaXMgcHVibGlzaGVkIGluIHRoZSBhbm51YWwgcmVwb3J0IG9mIHRoZSBOU1cgRGVwYXJ0bWVudCBvZiBKdXN0aWNlLiBUaGV5IGFyZSBiZWluZyBtYWRlIHB1YmxpYyBub3cgYWZ0ZXIgR3JlZW5zIE1MQyBKdXN0aW4gRmllbGQgcHVyY2hhc2VkIHRoZW0gZnJvbSB0aGUgZGVwYXJ0bWVudC4gClRoaXMgYXJndW1lbnQgdGhhdCBhIGJldHRlciBjbG9zZXQgd291bGQgcHJvdGVjdCB1cyBhbGwgZnJvbSBkaXNjcmltaW5hdGlvbiBhbmQgdmlvbGVuY2UgaXMgbm90IGV4YWN0bHkgdGhlIGJyaWdodGVzdCBidWxiIG9mIGhvcGUgd2UgaGF2ZSBmb3IgYSBiZXR0ZXIgZnV0dXJlLiBhcHBseWluZyB0aGUgY2xvc2V0IGVsc2V3aGVyZSB0byBpc3N1ZXMgb2YgZGlzY3JpbWluYXRpb24uCiJHcmVhdCBnYW1lLCIgZWNob2VkIER1a2UgY29hY2ggTWlrZSBLcnp5emV3c2tpLiAiSSB0aG91Z2h0IGJvdGggdGVhbXMgcGxheWVkIHRoZWlyIGhlYXJ0cyBvdXQuIFRoZXkgZGljdGF0ZWQgdGhlIGZsb3csIHRoZSBwYWNlLiBUaGV5IHdlcmUgdmVyeSBtdWNoIGluIGNvbnRyb2wgdGhlIHdob2xlIGZpcnN0IGhhbGYuIEkgdGhpbmsgdGhleSdyZSBleHBlcmllbmNlZCwgdGhleSdyZSByZWFsbHkgZ29vZC4gVGhleSBjYW4gYmVhdCBhbnlib2R5LiIKU2NodWx0eiBpcyB0aGUgQXNzaXN0YW50IE1hbmFnaW5nIEVkaXRvciwgTWFya2V0aW5nIGF0IEFkIEFnZSBhbmQgY292ZXJzIGJldmVyYWdlLCBhdXRvbW90aXZlIGFuZCBzcG9ydHMgbWFya2V0aW5nLiBIZSBpcyBhIGZvcm1lciByZXBvcnRlciBmb3IgTWNDbGF0Y2h5IG5ld3NwYXBlcnMsIGluY2x1ZGluZyB0aGUgRnJlc25vIEJlZSwgd2hlcmUgaGUgY292ZXJlZCBidXNpbmVzcyBhbmQgc3RhdGUgZ292ZXJubWVudCBhbmQgcG9saXRpY3MsIGFuZCB0aGUgSXNsYW5kIFBhY2tldCBpbiBTb3V0aCBDYXJvbGluYS4gTmVhbCBBd2FyZHMsIHRoZSBBc3NvY2lhdGlvbiBvZiBDYXBpdG9sIFJlcG9ydGVycyBhbmQgRWRpdG9ycywgdGhlIENhbGlmb3JuaWEgTmV3c3BhcGVyIFB1Ymxpc2hlcnMgQXNzb2NpYXRpb24sIHRoZSBTb3V0aCBDYXJvbGluYSBQcmVzcyBBc3NvY2lhdGlvbiBhbmQgSW52ZXN0aWdhdGl2ZSBSZXBvcnRlcnMgYW5kIEVkaXRvcnMuIApUaGluZ3Mgd2VyZSBkaWZmZXJlbnQgYmFjayB0aGVuLCBvdmVyIDUwIHllYXJzIGFnby4gVGhlIG1vc3QgYmVhdXRpZnVsIGFyZWEgd2FzIERPV05UT1dOIGEgY2FzaW5vIHdpdGggYSBnaWFudCBjb3dib3kgYm9vdCBvbiB0aGUgZmFjYWRlLCBhbmQgbWFueSBzbWFsbCBob3RlbHMgYW5kIGhvdGVsIGNhc2lub3MuIApJbmNvcnJlY3QgVGVjaG5pcXVlICAgVGhlIHVzZSBvZiBhbiBpbmNvcnJlY3QgdGVjaG5pcXVlIGlzIGFuIGluanVyeSByaXNrLiBBcyB3ZWxsIHRlY2huaXF1ZSBpbiBzcG9ydHMsIGluY29ycmVjdCBtZXRob2RzIG9mIHNldHRpbmcgdXAgYW5kIGxpZnRpbmcgYW5kIGhhbmRsaW5nIGVxdWlwbWVudCBjb3VsZCBjYXVzZSByaXNrcyB0byB0aG9zZSBpbnZvbHZlZC4gCkZ1cnRoZXIsIHRoZXJlIGFyZSBzb21lIHBlb3BsZSB3aG8gZ2V0IHR3aXN0ZWQuIFRoZXkgc3BlbmQgdG9vIG11Y2ggdGltZSBpbiB0aGUgd3JvbmcgY29ybmVycyBvZiB0aGUgaW50ZXJuZXQsIGFuZCB0aGV5IGdldCBjb252aW5jZWQgb2YgY3JhenkgdGhpbmdzLi4gCkhvd2V2ZXIsIHdlIGRpZCBoYXZlIHRvIGludmVzdCBtb25leSBpbiB0YWJsZXMsIHBva2VyIGNoaXBzLCBhY2Nlc3NvcmllcyBhbmQgdmFyaW91cyBvdGhlciBjb21wb25lbnRzIHRoYXQgd291bGQgbWFrZSBpdCBhcyBhdXRoZW50aWMgYXMgcG9zc2libGUuIFRoaXMgaXMgYWJvdXQgdGhlIHRpbWUgd2UgY2FtZSBhY3Jvc3MgdGhlIDI0MCBDaGlwIE5leEdlbiBQUk8gQ2xhc3NpYyBTdHlsZSBQb2tlciBTZXQgV2l0aCBXb29kIENhc2UuLiAKQmllbiB2aWRlbW1lbnQsIGonYWkgcGFyZmFpdGVtZW50IGxlIGRyb2l0IGRlIGNpdGVyIGxlIGNvdXJyaWVyIHJldSBhaW5zaSBxdWUgbWVzIHJwb25zZXMgcHJpdmVzLlF1ZWxxdWUgcGFydCBjZWxhIG0nYW11c2UgY2FyIGplIHNhaXMgIHByc2VudCBxdSd1bmUgZm9pcyBkZSBwbHVzIGMnZXN0IHZvdHJlIHNlcnZpdGV1ciBxdWkgYXVyYSBsZSBkZXJuaWVyIG1vdC4gCkkgY2FuIGFkanVzdCBteSBzY2hlZHVsZSB0byBzdWl0IHlvdS4gUGxlYXNlIGNhbGwgYWhlYWQgb3IgdGhlIG5pZ2h0IGJlZm9yZSBpZiBlYXJseSBvciBsYXRlIGhvdXIgdGltZSBpcyBuZWVkZWQuIApPbmUgbmlnaHQgd2UgZGVjaWRlZCB0byBkcmluayBhbmQgb25lIHRoaW5nIGxlYWQgdG8gYW5vdGhlciBhbmQgd2UgYXJlIGJhY2sgYXQgbXkgcGxhY2UuIFdlIHN0YXllZCBGV0IgZm9yIGEgZmV3IG1vbnRocyBidXQgaGUgc3RpbGwgaGFkIGhpcyBnaXJsZnJpZW5kLiAKU3BlbmQgaGFsZiB0aGUgeWVhciBmaXNoaW5nLCB3aGljaCBpcyBhbm90aGVyIHJlYXNvbiB3ZSBsb29raW5nIGZvciBpbnZlc3RtZW50IGNhcGl0YWwuIFdlIHdhbnQgdG8gaGlyZSBzb21lIHJlc291cmNlcyBhbmQgZ2V0IHRoZSBqb2IgZG9uZSBwcm9wZXJseS4gCkxvZ2luVGhpcyBpcyBuZWNlc3NhcnkgdG8gc2lnbiBpbiB0byB0aGUgSHViUGFnZXMgU2VydmljZS4gClJlYWwgZXN0YXRlIHNwZWN1bGF0aW9uIHRheCBhbmQgdmFjYW5jeSB0YXguRGlhbG9nIHJldmlzZWQgZGV2ZWxvcG1lbnQgcGVybWl0IGFwcGxpY2F0aW9uIHNheXMgdGhhdCByaWRpbmcgb24gU2t5VHJhaW4gaXMgb25lIG9mIHRoZSBtYWluIHdheXMgcGVvcGxlIHNlZSBFYXN0IFZhbiBDcm9zcy52aWV3IHN0dWR5IHVuZGVydGFrZW4gZGVtb25zdHJhdGVzIHRoYXQgdGhlIHByb3Bvc2VkIGJ1aWxkaW5nIHdpbGwgbm90IGJsb2NrIHRoZSBleGlzdGluZyB2aWV3cyB0byB0aGUgYXJ0d29yayBmcm9tIHRoZSBFeHBvIExpbmUgZWFzdGJvdW5kLCBEaWFsb2cgc2F5cyBpbiB0aGUgZG9jdW1lbnQuT25jZSB0aGUgYnVpbGRpbmcgaXMgY29tcGxldGUsIE5hdHVyZSBQYXRoIHdpbGwgbW92ZSBpdHMgaGVhZHF1YXJ0ZXJzIGZyb20gUmljaG1vbmQgd2hlcmUgMTUwIHBlb3BsZSB3b3JrLCBhbHRob3VnaCBpdHMgd29ya2ZvcmNlIGNvdWxkIGluY3JlYXNlIHRvIDMwMCB3aXRoaW4gYSBmZXcgeWVhcnMuQSBuZXcgMTAgc3RvcmV5IGJ1aWxkaW5nIGlzIHBsYW5uZWQgZm9yIHRoZSBsb3QgYmVzaWRlIE1vbnVtZW50IGZvciBFYXN0IFZhbmNvdXZlciBieSBLZW4gTHVtIGFuZCB0aGUgVkNDIENsYXJrIE1pbGxlbm5pdW0gTGluZSBTdGF0aW9uLiAKVGhleSBjYW4gZXZlbiBzd2l0Y2ggYW1vbmcgcGVyc3BlY3RpdmVzIGJ5IHNwb3R0aW5nIG90aGVyIGNhbWVyYXMgYW5kIGhpdHRpbmcgYSBidXR0b24uIEl0IGdpdmVzIHBsYXllcnMgYW4gb3Bwb3J0dW5pdHkgdG8gcGxhbiB0aGVpciBhdHRhY2suLiAKSGUga25vd3MgdGhpcyBpcyBnb2luZyB0byBraWxsIGhlci4gRmlyc3QsIGhlciBodXNiYW5kIGFuZCBub3cgdGhlIG9ubHkgcGVyc29uIHNoZSBoYXNsZWZ0LiBJdCBpcyB0aGUgbW9zdCBob3JyaWZpYyBleHBlcmllbmNlIGZvciBhIHBhcmVudCB0byBvdXQgbGl2ZSBhY2hpbGQuIApXaGVuIEl2ZXkgd29uIEV2ZW50IDI1LCBhZG1pcmVycyBhbmQgZmFucyB3ZXJlIDEwIGRlZXAgYXJvdW5kIHRoZSB0YWJsZSBoZSB3YXMgc2VhdGVkIGF0LiBUaGF0IGhhcyBhICQ1MCwwMDAgZW50cnkgZmVlLiAKSSBhZG1pdCB0aGF0IHRoaXMgaXMgYSB2ZXJ5IGVtb3Rpb25hbCB0b3BpYywgZ2l2ZW4gdGhlIGZhY3QgdGhhdCBibGFjayBhbmQgYnJvd24gcGVvcGxlIGFyZSBzdGlsbCBiZWluZyBtdXJkZXJlZCByZWd1bGFybHkgYnkgdGhlIHBvbGljZSBpbiB0aGlzIGNvdW50cnksIGFzIHdlbGwgYXMgZW5zbGF2ZWQgaW4gbWFzc2l2ZSBmb3IgcHJvZml0IHByaXNvbnMgb2Z0ZW4gb24gcmlkaWN1bG91cyBjaGFyZ2VzLCBub3QgdG8gbWVudGlvbiB0aGUgZ2VuZXJhbCBoaWdoIGxldmVsIG9mIGluaGVyZW50IHJhY2lzbSB0aGF0IGdvZXMgb24gaGVyZSBldmVyeSBzaW5nbGUgZGF5LiBHaXZlbiB0aGF0IGVtb3Rpb25hbCBjb250ZW50LCBJIGFncmVlIHRoYXQgbXkgcmVzcG9uc2VzIHRlbmQgdG8gYmUuIApOZWVkbGVzcyB0byBzYXksIGNyb3NzaW5nIHRoZSBDYW5hZGlhbiBib3JkZXIgaGFzIGFsd2F5cyBiZWVuIG11Y2ggZWFzaWVyIHRoYW4gY3Jvc3NpbmcgaW50byBNZXhpY28uIFRoZXJlIGlzIGZhciBsZXNzIHNlY3VyaXR5LCBmYXIgZmV3ZXIgYXJtZWQgYm9yZGVyIGd1YXJkcy4gClRoZSBiZXN0IHlvdSBsaWtlbHkgZ2V0IGhlcmUgaXMgZm9yIGV2ZXJ5Ym9keSB0byBpZ25vcmUgdGhlIHRvcGljLiAKU2hlIGhhcyBhIGNoYW5jZSB0byBzcGVhayBhbmQgcGFzc2VzIG9uIGl0LCBsZWF2aW5nIGhlciBwYXJ0bmVyIGluIHRoZSBiYWNrcm93IGFsbCBmcm93bnkuIFNvIGhlIG11c3QgY29uY2VybmVkLiBXZSBlbnRlciB0aGUgdGVzdGltb255IHBhcnQgb2YgdGhlIGhlYXJpbmcsIGFuZCB0aGUgcGFydG5lciBleHBsYWlucyB3aGF0IGhhcHBlbmVkIHVzaW5nIGEgYmlnIGRyYXdpbmcgb2YgdGhlIHBhcmtpbmcgbG90LiAKVGhpcyBpcyByaWRpY3Vsb3VzLiBUaGUgYW1vdW50IG9mIGdhbWUgYnJlYWtpbmcgYnVncyBpcyByaWRpY3Vsb3VzIGFuZCBJIGhhdmUgbmV2ZXIgc2VlbiB0aGF0IG5ld2x5IGxhdW5jaGVkIGdhbWUuIApHYWJhZTE2OCAgMjMgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvClBva2VyIGluIE9ubGluZSBtb2RlCk1hbnkgaGVyYml2b3JvdXMgbWFtbWFscyBoYXZlIGFkYXB0YXRpb25zIHRvIGNvcGUgd2l0aCBoYXJzaCBwbGFudCBsaWZlIHRha2luZyBpdHMgdG9sbCBvbiB0aGVpciB0ZWV0aCwgcm9kZW50cyBmb3IgaW5zdGFuY2UgaGF2ZSB0ZWV0aCB0aGF0IG5ldmVyIHN0b3AgZ3Jvd2luZywgc29tZSBhbmltYWxzIG9ubHkgaGF2ZSB0ZWV0aCBvbiB0aGVpciBsb3dlciBqYXcsIGdyaW5kaW5nIHBsYW50IG1hdHRlciBvbiBib255IHBsYXRlcyBpbiB0aGUgdG9wcyBvZiB0aGVpciBtb3V0aHMsIG90aGVycyBoYXZlIGVubGFyZ2VkIG1vbGFycyB0aGF0IGRpc3RyaWJ1dGUgdGhlIHdlYXIgYW5kIGJyZWFrIGRvd24gcGxhbnQgbWF0dGVyIG1vcmUgZWZmaWNpZW50bHkuIEtvYWxhcyBhcmUgbm8gZXhjZXB0aW9uLCB3aGVuIHRoZWlyIHRlZXRoIGVyb2RlIGRvd24gdG8gbm90aGluZywgdGhleSByZXNvbHZlIHRoZSBzaXR1YXRpb24gYnkgc3RhcnZpbmcgdG8gZGVhdGgsIGJlY2F1c2UgdGhleSBmdWNraW5nIHRlcnJpYmxlIGFuaW1hbHMuIEJlaW5nIG1hbW1hbHMsIGtvYWxhcyByYWlzZSB0aGVpciBqb2V5cyBvbiBtaWxrIChhZG1pdHRlZGx5LCBvbmUgb2YgdGhlIGxvd2VzdCBtaWxrIHlpZWxkcyB0byBib2R5IHJhdGlvLiAKVElMIHRoYXQgYSBzdXBlcm1hcmtldCB3YXMgY2xvc2VkIGRvd24gc28gdGhhdCBNaWNoYWVsIEphY2tzb24gY291bGQgZnVsZmlsbCBoaXMgZHJlYW0gdG8gZ28gdG8gYSBzdXBlcm1hcmtldCBhbmQgc2hvcCBsaWtlIGV2ZXJ5Ym9keSBlbHNlIGFuZCBleHBlcmllbmNlIHdoYXQgaXQgd2FzIGxpa2UgdG8gInB1dCB0aGluZ3MgaW4gYSBiYXNrZXQuIiBJdCB3YXMgcG9wdWxhdGVkIHdpdGggaGlzIGZyaWVuZHMgYW5kIGZhbWlseSBwcmV0ZW5kaW5nIHRvIGJlIGZlbGxvdyBzaG9wcGVycyBhbmQgZW1wbG95ZWVzLiAKSXQgYnVzaW5lc3MuIERIIHNob3VsZCBjYWxjdWxhdGUgaG93IG11Y2ggbW9uZXkgeW91IGNvdWxkIGhhdmUgbWFkZSBieSByZW50aW5nIHRvIGEgc3RyYW5nZXIuIApUaGlzIHdhc24gaW4gQU5ZIHdheSBhICJvbmNlIGluIGEgbGlmZXRpbWUgdGhpbmcuIiBJdCB3YXMgYSBndWl0YXIsIHN1cmUsIGEgbmljZSBvbmUsIGJ1dCBKZWV6LCB5b3UgZW5jb3VudGVyICJ0aGUgcGVyZmVjdCBndWl0YXIiIG92ZXIgYW5kIG92ZXIgaW4geW91ciBsaWZlLiBBbmQgYXQgdGhlIGVuZCBvZiB0aGUgZGF5LCBpdCB3YXMganVzdCBhIHRoaW5nLCBubyBtYXR0ZXIgaG93IG5pY2UsIHNvbWV0aGluZyB5b3UgZG9uIG5lZWQsIGFuZCB5b3UgY291bGRuIGFmZm9yZC4gClRoZXJlZm9yZSwgY2FsY3VsYXRpbmcgZXF1aXR5IGlzIGN1bWJlcnNvbWUgc2luY2UgeW91IGRvIG5vdCBrbm93IHRoZSBoYW5kIG9mIHRoZSBvcHBvbmVudC4gCkpheU5vdEF0QWxsICAxIHBvaW50ICBzdWJtaXR0ZWQgMSBkYXkgYWdvCldoZW4gQ2xheSBnZXRzIHRvIHRoZSBEZWx0YSBDb3VudHkgU2hlcmlmZiBEZXBhcnRtZW50LCBoZSByYWRpb3MgaGlzIG1lbi4gVGhlbiBoZSB0YWxrcyB0byBoaXMgc2VjcmV0YXJ5LCBSaXRhIEhhbnNvbi4KVG8gbWUgdGhlIHBhc3QgaXMgdGhlIHBhc3QuIEl0IHdhcyB3aGF0IGl0IHdhcy4gCkFuZCBpdCBpcyBub3QgdGhhdCB0aGUgdXNlIG9mIGNhcmQgZ2FtZXMgd2FzIGNvbmZpbmVkIHRvIHRoYXQgcGVyaW9kIG9ubHkgYXMgc3RpbGwgdGhlcmUgYXJlIHBhY2tzIGF2YWlsYWJsZSBpbiBDaGluYSBpbiB3aGljaCB0aGVyZSBpcyBhIHZpb2xlbnQgdXNlIG9mIHN1aXRzIG9mIGNvaW5zIGFuZCBjb3JkcyBvZiBjb2lucyB3aGljaCB0aGUgcGxheWVycyBvZiBNYWggSm9uZyB0ZXJtIGFzIGNpcmNsZXMgYW5kIGJhbWJvb3MgKGtub3duIGJ5IHVzIGFzIHN0aWNrcykuIEluIGR1ZSBjb3Vyc2Ugb2YgdGltZSwgQ2FyZHMgcGF2ZWQgdGhlaXIgd2F5IGludG8gdGhlIGdhdGV3YXlzIG9mIEV1cm9wZSBmcm9tIHRoZSBkeW5hc3R5IG9mIElzbGFtIHdoZXJlIHRoZSBzdWl0ICBjaXBoZXJzIHNoYXBlZCB1cCBhcyBjdXBzIGFuZCBzd29yZHMgYWxvbmcgd2l0aCBub24gcmVwcmVzZW50YXRpb25hbCBjb3VydCBjYXJkcy4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNGYW1pbHkgYW5kIEtpZHNNdXNpYyBhbmQgR2lnc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uUmVnaXN0ZXJlZCBjbHVicyBpbiB0aGUgSWxsYXdhcnJhIGFuZCBTaG9hbGhhdmVuIGFyZSBiYXR0bGluZyB0byBzdXJ2aXZlLCB3aXRoIHNldmVuIGFtYWxnYW1hdGluZyBhbmQgc2l4IGNsb3NpbmcgaW4gdGhlIHBhc3QgZGVjYWRlLiAKMjMgIEFuZCBBYnJhaGFtIGNhbWUgbmVhciBhbmQgc2FpZCwgWW91IGFsc28gZGVzdHJveSB0aGUgcmlnaHRlb3VzIHdpdGggdGhlIHdpY2tlZD8KSG9uZXN0eSBpcyBwb3dlcmZ1bC4gTWFraW5nIGFtbWVuZHMgbWVhbnMgdHVybmluZyBoaW1zZWxmIGluLiBTb3JyeSBJIGRpZG4ndCB3cml0ZSBhIGJvb2sgdG8gbWFrZSB0aGF0IGNsZWFyLiAKRXBzdGVpbiBDby4uIApUaGUgYW5udWFsIFdvcmxkIFNlcmllcyBvZiBIb2xkIEVtJyBmb3IgSGFiaXRhdCwgY29taW5nIHVwIG9uIFNlcHRlbWJlciAyOSwgd2lsbCByYWlzZSB0aGUgc3Rha2VzIGFuZCBldmVuIG1vcmUgZnVuZHMgZm9yIEJlbmQgQXJlYSBIYWJpdGF0ISBEb25hdGlvbnMgZnJvbSB0aGlzIHllYXIncyB0b3VybmFtZW50IHdpbGwgZ28gdG93YXJkIHRoZSAiQmlnIFJpY2hhcmQgQnVpbGQiLCBpbiBob25vciBvZiB0aGUgbGF0ZSBSaWNoYXJkIFNtaXRoLiBUaGlzIEhhYml0YXQgaG9tZSB3aWxsIGJlIHB1cmNoYXNlZCBieSB0aGUgTGVhZCBDb29rIGF0IEpha2UncyBEaW5lciwgQ3J5c3RhbCBXYXJnbywgYW5kIGhlciB0aHJlZSBjaGlsZHJlbiB0aGlzIGZhbGwuIi4gClBva2VyIHByb3RlY3RvcnMgYXJlIHRoZSBiZXN0IHBpY2tzIGluIG1vc3Qgb2YgdGhlIHBva2VyIHN0b3JlcyB0b2RheS4gVGhlc2UgYXJlIGNvbnNpZGVyZWQgYXMgb25lIGtpbmQgb2YgcG9rZXIgY29sbGVjdGlibGVzLiBPbiBUaGUgRGVhbGVyIFBva2VyIENhcmQgUHJvdGVjdG9yIGlzIG9uZSBvZiB0aGUgYmVzdCBzZWxsZXJzIGluIHRoaXMgbGlzdC4gVGhlIG1haW4gcHVycG9zZSBvZiB0aGVzZSBwcm9kdWN0cyB3YXMgdG8gc2F2ZSB0aGUgY2FyZHMgZnJvbSBhbnkga2luZCBvZiBkYW1hZ2UuIEJ1dCBub3cgdGhlIGNhcmQgc2F2ZXJzIGFyZSBiZWluZyB1c2VkIGZvciBtYW55IGRpZmZlcmVudCBwdXJwb3NlcyBsaWtlIHNob3dpbmcgdXAgeW91ciBwcmVzZW5jZSBpbiBmcm9udCBvZiB0aGUgcGVvcGxlIHdoZW4gYmVpbmcgdGVsZWNhc3RlZCBvbiB0aGUgbmF0aW9uYWwgYW5kIGludGVybmF0aW9uYWwgdGVsZXZpc2lvbnMuIEEgcG9rZXIgcGxheWVyIGhhcyBhbHNvIGJlY29tZSBhbiBpbnRlcm5hdGlvbmFsIHN0YXIgdG9kYXkuIFRoZSBwb2tlciBmYW5zIGFyZSBoaWdobHkgaW50ZXJlc3RlZCBpbiB0aG9zZSBwcm9kdWN0cyB0aGF0IGFyZSB1c2VkIGJ5IHRoZSBpbnRlcm5hdGlvbmFsIHBva2VyIHBsYXllcnMgaW4gdGhlIHRvdXJuYW1lbnRzIGFyb3VuZC4gWW91IHdpbGwgZmluZCBtYW55IG9mIHRoZSBwb2tlciBwbGF5ZXJzIHdpdGggT24gVGhlIERlYWxlciBQb2tlciBDYXJkIFByb3RlY3RvciBpbiB0aGUgaGFuZHMuIElmIHlvdSBoYXZlIGdvdCBzb21lIHByb2R1Y3RzIGxpa2UgdGhlc2Ugb24gd2hpY2ggeW91IGNhbiByZWx5IG9uLCB5b3UgY2FuIGZvY3VzIG9uIHlvdXIgcG9rZXIgY2FyZWVyLgpXZSB3ZXJlIG91dCBpbiB0aGUgb3BlbiwgaW4gZXhwb3NlZCBmYXJtbGFuZHMgZ2V0dGluZyBoYW1tZXJlZCBieSBjb2xkIHdpbmRzLiAKVGhlIGVhc2llc3Qgd2F5IHRvIHRoaW5rIGFib3V0IGV4cGVjdGVkIHZhbHVlIGlzIHRocm91Z2ggYW4gZXhhbXBsZSBnaXZlbiBieSBCaWxseSBNdXJwaHkgb2YgRm9yZXZlciBKb2JsZXNzLiBJbWFnaW5lIHlvdSdyZSBwbGF5aW5nIGEgY29pbiBmbGlwcGluZyBnYW1lIHdpdGggYSBmcmllbmQsIGFuZCB5b3Ugd2FnZXIgJDEuIElmIHRoZSBjb2luIGNvbWVzIHVwIGhlYWRzLCB5b3Ugd2luICQyLCBidXQgaWYgdGhlIGNvaW4gY29tZXMgdXAgdGFpbHMsIHlvdSBsb3NlIHlvdXIgb3JpZ2luYWwgJDEgaW52ZXN0bWVudC4gVGhlcmUncyBhIDUwIHBlcmNlbnQgY2hhbmNlIHlvdSdsbCBnYWluICQxIGFuZCBhIDUwIHBlcmNlbnQgY2hhbmNlIHlvdSdsbCBsb3NlICQxLiBUaGUgZXhwZWN0ZWQgdmFsdWUgb2YgdGhlIHNjZW5hcmlvLCB0aGVuLCBpcyAkMCwgbWFraW5nIGl0IGEgbmV1dHJhbCBpbnZlc3RtZW50LgpKc3VzIHJwbGlxdWEgOiAgU2kgamUgbmUgdGUgbGF2ZSBwYXMsIHR1IG5lIHNlcmFzIHBhcyBlbiBjb21tdW5pb24gYXZlYyBtb2kgLiAKIkl0IGNvdWxkIGdldCB0cmlja3kgZm9yIGEgbG90IG9mIGJyYW5kcywiIHNhaWQgQW5keSBMYUZvbmQsIGV4ZWN1dGl2ZSBtZWRpYSBkaXJlY3RvciBhdCBSL0dBIENoaWNhZ28sIHdobyBpcyBub3QgaW52b2x2ZWQgaW4gQW1hem9uJ3MgcGxhbnMsIGJ1dCBpcyBmYW1pbGlhciB3aXRoIHRoZSBwbGF0Zm9ybS4gIkRhdGEgaXMgQW1hem9uJ3MgcG93ZXIgZm9yIHN1cmUgYW5kIGJyYW5kcyBoYXZlIHRvIGJlIHJlYWxseSBjYXJlZnVsIGFib3V0IHdoYXQgZGF0YSB0aGV5J3JlIHdpbGxpbmcgdG8gc2hhcmUgd2l0aCBBbWF6b24uIgpUaGUgZGlzY3Vzc2lvbiBpbiB0aGUgYXJ0aWNsZSBpcyBvbiBjdXJpb3VzIGFwcGxpY2F0aW9ucyBmb3IgbWFjaGluZXMsIGxpa2UgcGVubnkgZm9ydHVuZSB0ZWxsZXIgZG9sbHMsIGF1dG9tYXRlZCBwdWJsaWMgaGFpciBkcnllcnMsIGFuZCAiZHJpbmsgZGlhbGVycyIgKGFmdGVyIHRoZSBkZXBvc2l0IG9mIGEgbmlja2VsIHlvdSB3b3VsZCB1c2UgYSB0ZWxlcGhvbmUgZGlhbGVyIHRvIG9yZGVyIHlvdXIgZmF2b3JpdGUgYmV2ZXJhZ2UpLiAKVGhlIHBlcHB5IGRyeSBydWIgbWF5IHdlbGwgYmUgdGhlIGJlc3Qgc2Vhc29uaW5nIEkndmUgZXZlciBlbmpveWVkIG9uIGZyaWVkIGNoaWNrZW4sIGFuZCBteSBmcmllbmQgZXZlbiBkZXRlY3RlZCB3aGF0IHNoZSB0aG91Z2h0IHdhcyBhIGhpbnQgb2YgY2lubmFtb24uIFdoaWxlIHdlIHdlcmVuJ3QgYWJsZSB0byBkaXNjZXJuIGFsbCBvZiB0aGUgaGVyYnMgYW5kIHNwaWNlcyBpbnZvbHZlZCwgbXkgZGluaW5nIGNvbXBhbmlvbiBjYXB0dXJlZCB0aGUgZXNzZW5jZSBvZiB0aGUgZmxhdm9yIHNheWluZywgIkl0IGhhcyBhbGwgdGhlIGdvb2Qgc3R1ZmYuIi4gCkJ1dCBoZSBuZXZlciBsb3N0IHRoZSBraWxsZXIgaW5zdGluY3QuIFBsYXllZCBteSBuaW5lIHllYXIgb2xkIHNvbiBhdCBwb2tlciBhbmQgYmVhdCBoaW0sIGhlIGFkbWl0dGVkIGluIDIwMDYuIAoiVGhlIGd1eSdzIGRlYWQsIGFuZCB0aGF0J3MgdW5mb3J0dW5hdGUsIiBzYWlkIENyb3Nzbm9lLCB3aG8gd2FzIGluIHRoZSBoYWxsIGF0IHRoZSB0aW1lIG9mIHRoZSBzaG9vdGluZy4gCkx1Z3VhZWRvcyAgMSBwb2ludCAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkJlY2F1c2Ugd2hlbiB5b3UgbWFrZSBhIG1pc3Rha2UsIGl0IGNvc3RzIHlvdSBtb25leS4gCjIwMTgpLiAKVGhlIHByb3BlcnR5IGhhcyBhIHByYWN0aWNhbCBhbmQgbWVhc3VyYWJsZSBncmVlbiBidWlsZGluZyBkZXNpZ24sIGNvbnN0cnVjdGlvbiwgb3BlcmF0aW9ucyBhbmQgbWFpbnRlbmFuY2Ugc29sdXRpb25zIG1ha2luZyBpdCBhIExFRUQgY2VydGlmaWVkIGhvdGVsLiBUaGlzIG1lYW5zIHRoYXQgdGhlcmUgd2lsbCBiZSAxOCUgbW9yZSBlbmVyZ3kgZWZmaWNpZW50LCAzNSUgcmVkdWNlZCB3YXRlciBjb25zdW1wdGlvbiwgMzAlIFVzZSBvZiByZWdpb25hbCBtYXRlcmlhbHMgYW5kIDUlIHJlbmV3YWJsZSBlbmVyZ3kgb24gc2l0ZSAoc29sYXIgcGFuZWxzIHRvIHByZWhlYXQgd2F0ZXIpLi4gCkknbSBub3Qgc3VyZSB3aGF0IHlvdSB3ZXJlIGRvaW5nIGJ1dCBob3cgY2FuIHlvdSBiZSBwbHVnZ2VkIGluIGFuZCBsZXQgeW91ciBhZ2VuY3kgZmFpbD8gWW91IHNob3VsZCd2ZSBiZWVuIGF3YXJlIG9mIHdoYXQgd2FzIGdvaW5nIG9uIHdpdGggdGhlIG51bWJlcnMuIEkgbGVhcm5lZCBob3cgYWN0aW9ucyBvciBpbmFjdGl2aXR5IGltcGFjdHMgbW9yZSB0aGFuIHlvdXJzZWxmLiBHb29kIHBlb3BsZSBsb3N0IGV2ZXJ5dGhpbmcgd2hlbiB0aGUgYWdlbmN5IGNsb3NlZCwgYW5kIGl0IHdhcyBvbiB5b3VyIHdhdGNoLiBJIHJlYWxpemVkIGhvdyBzZXJpb3VzIGl0IGlzIHRvIGxlYWQgYSBncm91cCBvZiBwZW9wbGUuIEkgbGVhcm5lZCBob3cgZGV2YXN0YXRpbmcgaXQgY291bGQgYmUgd2hlbiBsZWFkZXJzaGlwIGlzIG5vdCB3aWxsaW5nIHRvIGxlYWQuIEkgZGlzY292ZXJlZCB0aGF0IGEgZ29vZCBwZXJzb24gZG9lc24ndCBhbHdheXMgbWFrZSBhIGdyZWF0IGJvc3MuIFlvdSBzaG93ZWQgbWUgdGhhdCBiZWluZyB0aGUgYm9zcyBjYXJyaWVzIHNvbWUgaHVnZSByZXNwb25zaWJpbGl0aWVzLCB0aGF0IHRoZSBkZWNpc2lvbnMgaGUgbWFrZXMgY2FuIGhhdmUgYSByZWFsIGFuZCBkZXZhc3RhdGluZyBpbXBhY3Qgb24gcGVvcGxlJ3MgbGl2ZXMuCkkgc2VlIHRoZSBwdXJwb3NlIG9mIHRoaXMgdmlkZW8gYXMgYSB0aXAgZm9yIG5ldyBwbGF5ZXJzLCBwYXJ0aWN1bGFybHkgYmVjYXVzZSBpbiBvdGhlciBCUnMgY2FtcGluZyB0byB0aGUgZW5kIGNhbiByZXN1bHQgaW4gdmljdG9yaWVzLi4gClRoZSBob25leSBjb250ZW50IHdpbGwgaGVscCB5b3VyIHNraW4gcmV0YWluIG1vaXN0dXJlLCB3aGlsZSB0aGUgbWlsayBzaG91bGQgc29vdGhlIGlycml0YXRlZCBza2luLiAKSW4gYWRkaXRpb24gdG8gaXRzIHNlbnN1b3VzIHRleHR1cmUsIHRoZSBhdm9jYWRvIGFsc28gaGFzIGEgc2Vuc3VvdXMgZnVuY3Rpb24uIFRoZSBoaWdoIHF1YWxpdHkgVml0YW1pbiBFIGNvbnRlbnQgb2YgdGhpcyBzdXBlciBmb29kIGNhbiBib29zdCB0aGUgc3RhdGUgb2YgYXJvdXNhbCBhbmQgaW50ZW5zaXR5IG9yZ2FzbS4gSXQncyBhbHNvIGJlbGlldmVkIHRvIGJlIGEgbmF0dXJhbCBzb3VyY2Ugb2YgcGhlbnlsIGV0aHlsYW1pbmUgKFBFQSksIHRoZSBzYW1lIGZlZWwgZ29vZCBjaGVtaWNhbCB0aGF0IHRoZSBib2R5IG5hdHVyYWxseSBwcm9kdWNlcyBkdXJpbmcgdGhvc2UgZmlyc3QgbW9tZW50cyBvZiBmYWxsaW5nIGluIGxvdmUuIApBZHJpYW4gaGFzIGEgZmxhc2hiYWNrIGFuZCByZW1lbWJlcnMgdGhlIG1hbGUgY29wIHdhcyBoaWRpbmcgYmVoaW5kIGEgdHJ1Y2sgaW4gdGhlIHBhcmtpbmcgbG90LCBub3QgcmVhbGx5IGFjdGluZyBhbGwgcHJvcGVybHkgY29wbGlrZS4gClRoZXNlIGZpbmRpbmdzIHJhaXNlIHRoZSBwb3NzaWJpbGl0eSB0aGF0IHRoaXMgYWJub3JtYWwgcGF0dGVybiBvZiBtdXNjbGUgY29udHJvbCwgaW4gdGhlIGFic2VuY2Ugb2YgcGFpbiwgbWF5IGxlYXZlIHRoZSBzcGluZSB2dWxuZXJhYmxlIHRvIHJlIGluanVyeSBwcmVkaXNwb3NlIHRvIHJlY3VycmVudCBlcGlzb2Rlcy4zLiBUaGlzIDIgbWluIHZpZGVvIGlzIG9uIHNwaW5hbCBkZWNvbXByZXNzaW9uLCBidXQgaXQgZ2l2ZXMgeW91IGEgZ29vZCBpZGVhIG9mIHdoYXQgaXMgaGFwcGVuaW5nIGFzIHRoZSBzcGluZSBkZWNvbXByZXNzZXM6IERSWDkwMDAgU3BpbmFsIERlY29tcHJlc3Npb24gVGhlcmFweTo6IERlZ2VuZXJhdGl2ZSBEaXNjIERpc2Vhc2UuIApDaGFuZ2luZyB5b3VyIGltYWdlOiBCeSBjaGFuZ2luZyB5b3VyIGltYWdlIHlvdSB3aWxsIGNvbXBsZXRlbHkgdGhyb3cgeW91ciBvcHBvbmVudHMgb2ZmIGd1YXJkIGFuZCBzZXQgdGhlbSB1cCB0byBsb3NlIGJpZyBwb3RzIGluIHRoZSBmdXR1cmUuIElmIHlvdSBlbnRlciBhIGdhbWUgYW5kIHNob3dkb3duIGEgZmV3IGxvb3NlIGhhbmRzIGFuZCBkbyBhIGZldyBzdHVwaWQgdGhpbmdzIHlvdXIgb3Bwb25lbnRzIHdpbGwgdGhpbmsgeW91IGFyZSBiZWluZyBhIGNvbXBsZXRlIGRvbmsuIEFmdGVyIHRoZXkgdGhpbmsgeW91IGFyZSBwbGF5aW5nIGxvb3NlIGp1c3QgdGlnaHRlbiB1cCBzbGlnaHRseSBhbmQgd2hlbiB5b3UgZ2V0IGEgcHJlbWl1bSBoYW5kIHlvdSB3aWxsIGJlIG11Y2ggbW9yZSBsaWtlbHkgdG8gZ2V0IHBhaWQgb2ZmIGJpZy4KV2UgZXZlbiBzZWUgdGhlbSBpbiB0aGUgY2FzaW5vcyBmcm9tIHRpbWUgdG8gdGltZSB3aGVuIHdlJ3JlIHRyYXZlbGluZyBhcm91bmQsIHdoZXRoZXIgaXQgYmUgaW4gdGhlIHN0YXRlcyBvciBvdmVyIGluIEV1cm9wZS4gCkNoYXJhY3RlcnMuIApEZXIgRXJzYXR6IGtycGVybGljaGVyIEFyYmVpdCBkdXJjaCBNYXNjaGluZW4gc29yZ3QgZGFmciwgZGFzcyBNZW5zY2hlbiB3ZW5pZ2VyIHRpZWYgYXRtZW4sIGRpZSBMdWZ0IHNlbHRlbiBhbmhhbHRlbiwgd2FzIHp1IEh5cG9keW5hbWlrIGZocnQuIApKbW9zZXkgIDEyIHBvaW50cyAgc3VibWl0dGVkIDIzIGhvdXJzIGFnbwpCdXQgY2Fsb3JpZXMgYXJlbiB0aGUgb25seSBwcm9ibGVtLgpEb3JtaXIsIGMnZXN0IGxlIHBpbGllciBmb25kYW1lbnRhbCBldCBzb3V2ZW50IGJlYXVjb3VwIHRyb3AgbmdsaWcuIE9yLCBjJ2VzdCB0ZWxsZW1lbnQgcmducmFudCBkZSBkb3JtaXIgc3VmZmlzYW1tZW50LiBGYWl0ZXMgZW4gbCdleHByaWVuY2UgZXQgdm91cyBqb3VycyBzZSBkcm91bGVyb250IGJpZW4gZGlmZnJlbW1lbnQuIEplIHJlbmNvbnRyZSBzb3V2ZW50IGRlcyBwZXJzb25uZXMgc3RyZXNzZXMsIHRycyBtb3RpdmVzLCBmYXRpZ3Vlcy4gRXQgcXVpLCB0cmFuZ2VtZW50LCBuZSBmb250IHBhcyBmb3JjbWVudCBsZSBsaWVuIGF2ZWMgbGUgbWFucXVlIGRlIHNvbW1laWwuIEplIHN1aXMgdnJhaW1lbnQgdHJpc3RlIHBvdXIgY2V1eCBxdWkgb250IHJlbGxlbWVudCBiZWF1Y291cCBkZSBkaWZmaWN1bHRzICBkb3JtaXIgZXQgamUgbGVzIGluY2l0ZSB2cmFpbWVudCAgZW4gY29tcHJlbmRyZSBsZXMgY2F1c2VzIChuZXJ2b3NpdCwgYW5nb2lzc2VzLCBoYWJpdHVkZXMsIGFsaW1lbnRhdGlvbiwgcnl0aG1lLikgcG91ciBzb3J0aXIgZCd1biB0YXQgZm9yY21lbnQgcGFzIG9wdGltYWwuIE1haXMgamUgdHJvdXZlIGRvbW1hZ2UgcXVlIGQnYXV0cmVzIGRjaWRlbnQgdm9sb250YWlyZW1lbnQgZGUgc2UgcHJpdmVyIGQndW5lIGRvc2UgZGUgc29tbWVpbCBwb3VyIGRhdmFudGFnZSByZW1wbGlyIGxldXJzIGpvdXJuZXMuCk5PIE9ORSB3YXMgc3RhbmRpbmcgYXJvdW5kIG91dHNpZGUgaW4gU3RyZWV0ZXJ2aWxsZSAoYSBuaWNlIHBhcnQgb2YgdG93bikgYXQgMiBhbSwgd2FpdGluZyBhcm91bmQgd2l0aCB3ZWlyZCByYW5kb20gb2JqZWN0cyBsb29raW5nIGZvciBCIGxpc3QgYWN0b3JzLCB3aG8gd291bGQgbGlrZWx5IGJlIGNvbXBsZXRlbHkgY292ZXJlZCBpbiBoYXRzIGdsb3ZlcyBhbmQgc2NhcnZlcyBpZiB0aGV5IHdlcmUgb3V0IS4gCk1ha2UgeW91IHN0dWRlbnQgbG9hbiBwYXltZW50LCBidXQgc2VlIGhvdyBsb3cgeW91IGNhbiByZWR1Y2UgeW91ciBtb250aGx5LiBMb29rIGludG8gYW4gaW5jb21lIGRyaXZlbiBwbGFuLgpGYWNpYWxzIGFuZCBtYXNzYWdlcyBhcmUgZXh0cmEsIGJ1dCBhdCAkODAgYXBpZWNlLCB0aGV5J3JlIGhhcmRseSBidWRnZXQgYnVzdGVycyBhbmQgdGhleSBtYWtlIGZvciB3ZWxsIGRlc2VydmVkIHRyZWF0cyBhZnRlciBhbGwgdGhhdCBkaXNjaXBsaW5lLi4gCkkgYW0gdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgdGhpcyBzZW5zZSBvZiB0aHJlYXQuIApUaGVyZSB3YXMgYSB0b3RhbCBtZWRpYSBibGFja291dCByZWdhcmRpbmcgdGhlIGRldGFpbHMgb24gdGhpcyBvbmUsIHRvIGF2b2lkIHRoZSBlbWJhcmFzc21lbnQgYmVjYXVzZSB0aGVzZSB0d28gYXJlIGZhbW91cyBjZWxlYnJpdGllcy4gQnV0IHRoZSB3aG9sZSBjb3VudHJ5IChQaGlsaXBwaW5lcykga25vd3Mgd2hhdCBoYXBwZW5lZCBiZWNhdXNlIGlmIHlvdSBhc2sgYW55b25lIHdobyB3b3JrcyBpbiB0aGF0IGhvc3BpdGFsLCB0aGV5IHdpbGwgY29uZmlybSB0aGF0IGl0IGRlZmluaXRlbHkgaGFwcGVuZWQuIApFc3BlY2lhbGx5IHRoZSBsYXR0ZXIuIFRoZXJlIGFudGkgdmF4eGVycyBvbiBib3RoIHNpZGVzIHRob3VnaC4gCkhvdyBtYW55IGNoaXBzIGRvIHlvdSBnZXQ/VGhlIHBoeXNpY2FsIG51bWJlciBvZiBjaGlwcyBpcyBnb2luZyB0byBkZXBlbmQgb24gaG93IG1hbnkgY2hpcHMgeW91IG93biBvciBjYW4gYm9ycm93LiBUaGUgY2hpcCB2YWx1ZXMsIGluIHJlYWxpdHkgZG9uJ3QgbWF0dGVyIGVpdGhlciBzaW5jZSBldmVyeWJvZHkgaXMgZ29pbmcgdG8gYmUgc3RhcnRpbmcgd2l0aCB0aGUgc2FtZSB0b3RhbCB2YWx1ZSBpbiBjaGlwcy4gSG93ZXZlciwgdG8gbWFrZSBpdCBlYXNpZXN0IG9uIHlvdXJzZWxmIGFuZCB5b3VyIHBsYXllcnMsIEkgc3VnZ2VzdCBrZWVwaW5nIHRvIGEgcHJldHR5IHNpbXBsZSBmb3JtdWxhLiBTdGFydCBlYWNoIHBsYXllciB3aXRoICQyMDAwIGluIGNoaXBzLiBUaGUgY29uZmlndXJhdGlvbiB0aGF0IEkgc3RhcnQgZWFjaCBwbGF5ZXIgd2l0aCBsb29rcyBsaWtlIHRoaXM6KDEwKSAkNSBjaGlwcygxMCkgJDI1IGNoaXBzKDcpICQxMDAgY2hpcHMoMikgJDUwMCBjaGlwcwpJIGhhdmUgYmVlbiBhIEhvbGlzdGljIFRoZXJhcGlzdCBzaW5jZSAyMDA2IGFuZCB3b3JraW5nIGluIGNvbGxhYm9yYXRpb24gd2l0aCB0aGUgVW5pdmVyc2l0eSwgZGVsaXZlcmluZyBtYXNzYWdlIHNlc3Npb25zLCBzaW5jZSAyMDA5LiAKRWdvbmNhc3RlZWwgIDEgcG9pbnQgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCkl0cyBub3QgcmVhbGx5IGFueXRoaW5nIGxpa2UgdGhlIGdhbWVzIHlvdXZlIG1lbnRpb25lZCwgc28gaW0gbm90IGV4YWN0bHkgc3VyZSBpdHMgdXAgeW91ciBhbGxleSwgYnV0IHRoZXJlIGlzIGEgZ29vZCByZWFzb24gaXRzIGJlZW4gc28gaGlnaGx5IGFjY2xhaW1lZCBhbmQgYXdhcmRlZCwgYW5kIHRoYXQgaXQgaGFzIHN1Y2ggYSBsb3lhbCBmYW4gYmFzZS4gYSBnb29kIHN0b3J5IGdhbWUgaXMgdXN1YWxseSB3aGF0IHBlb3BsZSBuZWVkIHRvIGdldCBvdXQgb2YgYSBzaG9vdGVyIGdhbWUgYnVybm91dCwgYW5kIHRoaXMgb25lIGlzIG9uZSBvZiB0aGUgYmVzdCBzdG9yeSBnYW1lcyBldmVyIG1hZGUuIGlmIGFueSBnYW1lIGNhbiBiZSBhcmd1ZWQgYXMgYW4gYXJ0IHBpZWNlLCB0aGlzIG9uZSBpcyBpdC4KTW9kZXJhdGlvbiBpbiB0aGlzIGdyb3VwIGlzIGFsd2F5cyBiaWFzZWQgRk9SIHRoZSBPUCAodGhlIHBlcnNvbiB3aG8gbWFkZSB0aGUgcG9zdCAgIG5vdCB0aGUgY29tbWVudGVycykuIEZvciBleGFtcGxlLCBpZiBhbiBPUCBkb2VzIG5vdCBhcHByZWNpYXRlIGNvbW1lbnRzIG9mIGEgcmVsaWdpb3VzIG5hdHVyZSwgdGhlIG1vZGVyYXRvcnMgd2lsbCBkZWZlbmQgdGhlIE9QIGJvdW5kYXJpZXMuIApJIGhhdmUgYmVlbiB1c2luZyAzIDQgMiAxIGZvciB0aGUgbWFqb3JpdHkgb2YgdGhpcyBGSUZBIGFuZCBJIHRoaW5rIHRoaXMgaXMgdGhlIG1vc3QgaWRlYWwgYXR0YWNraW5nIGZvcm1hdGlvbi4gSG93ZXZlciwgSSBhbHNvIHRoaW5rIHRoaXMgZm9ybWF0aW9uIHJlbGllcyB0aGUgbW9zdCBvbiBoYXZpbmcgdGhlIHJpZ2h0IHBsYXllcnM6ClRoZSBmYW5zIHVuZGVyc3RhbmQgdGhpcyBzdHVmZjsgdGhleSBoYXZlIHRoZSBpbnRlbGxlY3R1YWwgY2FwYWNpdHkgdG8gdHJ1bHkgYXBwcmVjaWF0ZSB0aGUgZGVwdGhzIG9mIHRoZXNlIGpva2VzLCB0byByZWFsaXplIHRoYXQgdGhleSBub3QganVzdCBmdW5ueSAgdGhleSBzYXkgc29tZXRoaW5nIGRlZXAgYWJvdXQgTElGRS4gClRoZSBtb3N0IHRlbGxpbmcgcGFydCB3YXMgc3VjaCBhIHlvdW5nIG1vbSBoYXZpbmcgZnJhdGVybmFsIHRyaXBsZXRzLiBJdCBhbG1vc3QgdW5oZWFyZCBvZiBmb3IgdHJpcGxldHMgaW4gdGhlIGZpcnN0IHBsYWNlIGJ1dCBmb3Igc29tZW9uZSB0aGF0IHlvdW5nPyBJdCBiYXNpY2FsbHkgbmV2ZXIgaGFwcGVucy4gVHJpcGxldHMgdXN1YWxseSBoYXBwZW4gYmVjYXVzZSBvZiBJVkYgb3Igb3RoZXIgZmVydGlsaXR5IHRyZWF0bWVudHMgb3IgbGF0ZXIgaW4gbGlmZSBiYWJpZXMuIEl0IHdvdWxkIGFjdHVhbGx5IGJlIG1vcmUgYmVsaWV2YWJsZSB0aGF0IHRoZXkgd2VyZSBpZGVudGljYWwgYmVjYXVzZSB0aGF0IGEgZGlmZmVyZW50IHByb2Nlc3MuCkFueSB1c2VyIHdobyB3YW50cyB0byBzZWxmIHByb21vdGUgbXVzdCBoYXZlIGEgcmVhc29uYWJsZSBwb3N0IGFuZCBjb21tZW50IGhpc3RvcnkgaW4gdGhpcyBzdWJyZWRkaXQgdGhhdCBpcyBub3QgcmVsYXRlZCB0byB3aGF0ZXZlciB0aGUgdXNlciBpcyB0cnlpbmcgdG8gcHJvbW90ZS4gUGxheW9mZiBSdWxlczEyLiBObyBhcHByZWNpYXRpb24gdGhyZWFkcywgdW5sZXNzIHRoZXkgY29udHJpYnV0ZSBpbiBzb21lIHdheSB0byB0aGUgZGlzY3Vzc2lvbiB2aWEgYW5hbHlzaXMsIG1lbWVzLCBldGMuLiAKSG93ZXZlciwgaXQgd2FzIGltbWVkaWF0ZWx5IGNsZWFyIHRvIGhpbSB0aGF0IHRoYXQgd2Fzbid0IHRoZSBjYXNlIGF0IExhYmF0dC4gCktpbmdzOiBTYWNyYW1lbnRvIGdvdCBvZmYgdG8gYSBmYXN0IHN0YXJ0LCBtYWtpbmcgMTQgb2YgMjIgc2hvdHMgaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgZm9yIGEgc2l4IHBvaW50IGxlYWQuIAptYWtpbmcgdW5kZXIgcGh5c2ljYWwgcGVyZm9ybWFuY2UgcHJlc3N1cmUgaW4gc3ViZWxpdGUgYXRobGV0ZXMKSGFyYm91cmluZyBCdXMgRW50aHVzaWFzdHNUaGUgd2Vla2VuZCBhdHRyYWN0cyBhIHdpZGUgdmFyaWV0eSBvZiBwYXJ0aWNpcGFudHMsIGZyb20gdGhvc2UgZW5qb3lpbmcgYSBkYXkgb3V0IGF3YXkgZnJvbSB0aGUgY2FyIHRvIGRlZGljYXRlZCBmYW5zIG9mIGNsYXNzaWMgYnVzZXMgYW5kIHJlYWwgYWxlIGRyaW5rZXJzLiBJdCBpcyBjb21tb24gdG8gc2VlIHBhcnRpY2lwYW50cyB3cml0aW5nIGFuZCBjb21wYXJpbmcgbGlzdHMgbm90IG9ubHkgaW5jbHVkaW5nIHRoZSB0eXBlIGFuZCBudW1iZXIgcGxhdGVzIG9mIGJ1c2VzIHRoZXkgdHJhdmVsbGVkIG9uLCBidXQgYWxzbyB0aGUgcHVicyB0aGV5IGhhdmUgdmlzaXRlZCBhbmQgd2hhdCByZWFsIGFsZXMgdGhleSBoYXZlIHNhbXBsZWQuIEEgNTQgcGFnZSBWZWhpY2xlIFN1cHBsZW1lbnQsIHdoaWNoIHByb3ZpZGVzIG1vcmUgaW5mb3JtYXRpb24gYXMgdG8gdGhlIHZlaGljbGVzIHRha2luZyBwYXJ0Li4gCkdhZGdldHMgR2l6bW9zIEdhbG9yZSBBdCBDRVMgMjAxMzIwMTMgQ29uc3VtZXIgRWxlY3Ryb25pY3MgU2hvdyBIaWdobGlnaHRzIE5ld2VzdCBUZWNobm9sb2d5U2Ftc3VuZydzIFNtYXJ0IENhcmUgd2FzaGVyIGFuZCBkcnllciBhcmUgb24gZGlzcGxheSBhdCB0aGUgMjAxMyBJbnRlcm5hdGlvbmFsIENFUyBhdCB0aGUgTGFzIFZlZ2FzIENvbnZlbnRpb24gQ2VudGVyIG9uIEphbnVhcnkgOCwgMjAxMyBpbiBMYXMgVmVnYXMsIE5ldmFkYS4gQ0VTLCB0aGUgd29ybGQncyBsYXJnZXN0IGFubnVhbCBjb25zdW1lciB0ZWNobm9sb2d5IHRyYWRlIHNob3csIHJ1bnMgdGhyb3VnaCBKYW51YXJ5IDExIGFuZCBpcyBleHBlY3RlZCB0byBmZWF0dXJlIDMsMTAwIGV4aGliaXRvcnMgc2hvd2luZyBvZmYgdGhlaXIgbGF0ZXN0IHByb2R1Y3RzIGFuZCBzZXJ2aWNlcyB0byBhYm91dCAxNTAsMDAwIGF0dGVuZGVlcy4gKFBob3RvIGJ5IERhdmlkIEJlY2tlci9HZXR0eSBJbWFnZXMpLiAKU2FpZCBoZSB3YXNuIHN1cnByaXNlZCBDYW51Y2tzIHJvb2tpZSBFbGlhcyBQZXR0ZXJzc29uIGhhcyBoYWQgbm8gdHJvdWJsZSB0cmFuc2l0aW9uaW5nIHRvIHRoZSBOSEwuaXMgaW1wb3NzaWJsZSBmb3IgdGhhdCBndXksIGhlIHNhaWQuIApBbmQgZm9yIHdoYXQgbXVzdCBoYXZlIGJlZW4gdGhlIGZpcnN0IHRpbWUgaW4gdGVuIHllYXJzLCBteSBiYWNrIGZ1bGx5IGNyYWNrZWQuIApQZW9wbGUgYWN0IGxpa2UgY29tcGxldGUgZnVja3dpdHMgZm9yIHRoZSBzYW1lIHJlYXNvbiBwZW9wbGUgYWN0IGxpa2UgY29tcGxldGUgZnVja3dpdHMgb24gdGhlIEludGVybmV0OlRoZXJlIGlzIHRoZSBjaGFuY2UgdGhhdCBzb21lb25lIHdpbGwgdHJhY2sgeW91ciB2ZWhpY2xlIG9yIHlvdXIgbnVtYmVyIHBsYXRlLiBTaW1pbGFybHksIHRoZXJlIGlzIGEgY2hhbmNlIHRoYXQgc29tZW9uZSB3aWxsIGZvbGxvdyB5b3VyIElQIGFkZHJlc3Mgb24gdGhlIEludGVybmV0LiBIb3dldmVyLCBwZW9wbGUgYXJlIHNoaXQgYXQgZXN0aW1hdGluZyByaXNrLCBzbyB0aGF0IGRpc3JlZ2FyZGVkLgpBIGRhdWdodGVyIG9mIGEgaGlnaCBwcm9kdWN0aW9uICBzaXJlLCBmZWQgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBtZXRob2RzIGFkdm9jYXRlZCBieSB0aGUgc3RhdGUgYWdyaWN1bHR1cmFsIGNvbGxlZ2UsIHdpbGwgcHJvZHVjZSBhcm91bmQgc2l4IHRob3UgIHNhbmQgcG91bmRzLCBhbmQgaGVyIG9mZnNwcmluZyB1bmRlciB0aGUgc2FtZSBjb25kaXRpb25zIGluIHR1cm4gc2hvdWxkIG5vdCBmaW5kIGl0IGltcG9zc2libGUgdG8gYnJpbmcgaGVyIHBybyAgZHVjdGlvbiB0byB0aG8gZWlnaHQgdGhvdXNhbmQgcG91bmQgbWFyayBwZXIgeWVhci4gClRoaXMgZXhjbHVkZXMgYSBzdHJhaWdodCB1c2luZyBvZiBhbGwgdGhlIGZhY2UgY2FyZHMgKGEgUm95YWwgRmx1c2guKSBJZiB5b3UgaGF2ZSB0aHJlZSBvciBtb3JlIGNhcmRzIGluIHRoZSBzYW1lIHN1aXQgYW5kIGluIG51bWVyaWNhbCBzZXF1ZW5jZSwgaG9sZCB0aGVtIHRvIHRyeSB0byBnZXQgYSBzdHJhaWdodCBmbHVzaC5bMTJdLiAKQW55d2F5LCB0aGFua3MgZm9yIHRha2luZyB0aGUgdGltZSB0byByZWFkIHRoaXMhIEkgYmVlbiB3YW50aW5nIHRvIHZpc2l0IE1hZGlzb24gZm9yIGEgbG9uZyB0aW1lIGFuZCBhbSBzdXBlciBleGNpdGVkIHRoYXQgdGhlIHRyaXAgaXMgZmluYWxseSBib29rZWQuIEhvcGVmdWxseSB0aGlzIHBvc3Qgd2lsbCBiZSB3ZWxjb21lZCBtb3JlIHRoYW4gaXQgd291bGQgYmUgb24gbXkgaG9tZXRvd24gc3VicmVkZGl0LiBUaGUgTm9ydGggRWFzdCBpcyBuaWNlLCBidXQgbWFuIHNvbWUgb2YgdXMgY2FuIGJlIGRpY2tzLgpHb29kIHRoaW5nIG91ciB0b290aCBlbmFtZWwgaXMgaGFyZGVyIHRoYW4gYm9uZSAgIG9yIGV2ZW4gaXJvbiBvciBzdGVlbC4gCkRpZ2l0YWwgRGVmZW5kZXJzIG9mIENoaWxkcmVuIHdpdGggdGhlIGdvYWwgb2YgZGVzaWduaW5nIHNvZnR3YXJlIHRvIGhlbHAgc2F2ZSBjaGlsZHJlbiBmcm9tIGh1bWFuIHNleCB0cmFmZmlja2luZwpKb2luIGluIHRoZSBXZWVrbHkgIldoYXQgQXJlIFlvdSBSZWFkaW5nPyIgVGhyZWFkIQpJZiBtIUJ5bGV0aCBjYW4gaGF2ZSBhIHJlYXNvbmFibGUgY29zdHVtZSB0aGF0IGJvdGggbWVuIGFuZCB3b21lbiBjYW4gZW5qb3ksIHRoZW4gdGhlcmUgaXMgbm8gcmVhc29uIGYhQnlsZXRoIHNob3VsZCBub3QsIGVzcGVjaWFsbHkgYmVjYXVzZSB0aGV5IHByZXR0eSBtdWNoIHRoZSBzYW1lIGNoYXJhY3Rlci4gMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnby4gCkNvbnNlcXVlbnRseSwgQWJlIHB1c2hlZCB0aGUgQmFuayBvZiBKYXBhbiAoQk9KKSwgZGVzcGl0ZSBpdHMgb3N0ZW5zaWJsZSBhdXRvbm9teSwgdG8gY29tbWl0IHRvIGFjaGlldmluZyBhIDIlIGluZmxhdGlvbiB0YXJnZXQgd2l0aGluIHR3byB5ZWFycy4gCk1vc3QgcmVtb3ZlciBpcyBiYXNlZCBvbiBhY2V0b25lIGFuZCBtb3N0IHBlb3BsZSBoYXRlIGl0cyBzbWVsbC4gCigyIGluIDUyIHRpbWVzIDEgaW4gNTEpIERldGFpbGVkIEV4cGxhbmF0aW9uOiBJbml0aWFsbHksIHlvdSBoYXZlIDUyIGNhcmRzLiAKSGUgd2FzbiBvdmVybHkgbGFyZ2Ugb3IgcGh5c2ljYWxseSBpbnRpbWlkYXRpbmcsIGhlIHdhcyBqdXN0IGEgbWFuIHdpdGggYSBrbmlmZS4gV2FybG9jayBwZXJmb3JtYW5jZSB0dXJucyBoaW0gaW50byBzb21ldGhpbmcgZWxzZSwgc29tZXRoaW5nIHN0cmFuZ2VseSByb2JvdGljIGFuZCBiZWNhdXNlIHRoZSBzZWNvbmQgZmlsbSBmZWF0dXJlcyBhIGxvdCBtb3JlICJjaGFzaW5nIiB0aGFuIHRoZSBvcmlnaW5hbCBkaWQsIHRoZXkgd2F5IGhlIG1vdmVzIG1ha2UgaXQgbG9vayBpbXBvc3NpYmx5IGVhc3ksIGV2ZW4gd2l0aCBhbiBpbmp1cmVkIGFua2xlLCB0byBnZXQgYXdheSBmcm9tIGhpbSwgdGh1cyBtYWtpbmcgaGltIGxlc3MgaW50aW1pZGF0aW5nLi4gCiJXZSdsbCBzZWUsIHdlJ2xsIHNlZS4gClRlc3Qgb3V0IFJUSCwgdGVzdCBvdXQgUGFsbUxhdW5jaCwgZXRjLiAKSW4gMjAwNiwgR2FpbmV5IG1vdmVkIGJhY2sgdG8gUmVubyBhbmQgdG9vayB0aGUgcG9zaXRpb24gb2YgUG9rZXIgUm9vbSBNYW5hZ2VyIGZvciBQZXBwZXJtaWxsIFJlc29ydCBTcGEgQ2FzaW5vLi4gCkluIGZhY3QgR3JpZGxvY2sgaXMgZ2l2ZW4gYW4gYW50aSByb2FtaW5nIGRldmljZSBiZWNhdXNlIGRlZmVuc2l2ZSByb2FtaW5nIGlzIHRoZSBmYXZvcmVkIE1ldGEgYW5kIHRoZXkgdHJ5aW5nIHRvIGNvdW50ZXIgdGhhdCBhIGJpdC4gCk1vc3Qgc3VjY2Vzc2Z1bCBvcGVyYXRpb25zIGhhdmUgYSBzdWNjZXNzaW9uIHBsYW4uIFdoZW4gdGhlIHRpbWUgbmVhcnMgZm9yIGEgbGVhZGVyIHRvIHJldGlyZSwgdGhlIHBlcnNvbiBncm9vbWVkIHRvIHRha2UgaGlzIG9yIGhlciBwbGFjZSBzZWl6ZXMgdGhlIG9wcG9ydHVuaXR5IHRvIGNhcnJ5IHRoZSBmcmFuY2hpc2UgZm9yd2FyZC4gCklmIHlvdSd2ZSBiZWVuIGxvb2tpbmcgZm9yIHNvbWV0aGluZyBvdXQgdGhlcmUgb3IgdGhlIFN1aXRlZCBCbHVlIFBva2VyIFRhYmxlIENsb3RoIGluIHBhcnRpY3VsYXIsIHdlIHJlY29tbWVuZCB0aGUgbGF0dGVyLiBXaGlsZSBibHVlIHdhcyBvdXIgY29sb3Igb2YgY2hvaWNlIHRoZXJlIGFyZSBzZXZlcmFsIG9uIHRoZSBJbnRlcm5ldCB0byBjaG9vc2UuIApJIG1lYW4gbG9vayBhdCBpdCB0aGlzIHdheSwgY2FuIHlvdSBsaXZlIG9mZiBvZiAyNSAzMGsgYSB5ZWFyPyBCZWNhdXNlIEkgY2FuIHRlY2huaWNhbGx5IGxpdmUgb2ZmIGxpa2UgMjBrIGluIG15IGFyZWEuIEFmdGVyIHRheGVzIHlvdSBhcmUgcHJvYmFibHkgd2Fsa2luZyBhd2F5IHdpdGggYSBncm9zcyBpbmNvbWUgb2YgNjBrIGEgeWVhci4gSSBsb3cgYmFsbGluZy4KVGhlIHdheSB0aGUgbGF3eWVyIHRhbGtlZCwgb25seSB0aGUgMyB5ciBvbGRzIG5hbWUgd291bGQgYmUgb24gdGhlIHRydXN0IGZ1bmQsIGJ1dCBzaW5jZSBzaGUgdW5kZXIgMTgsIEkgYmVsaWV2ZSB0aGVyZSBoYXMgdG8gYmUgYW4gYWR1bHQgbmFtZSBvbiBpdCBhcyB3ZWxsLiAoVGhpcyBpcyBvbmUgb2YgdGhlIHF1ZXN0aW9ucyBJIGFsc28gaGF2ZSksIGFuZCBpZiB0aGF0IHNvLCB0aGVuIG9idmlvdXNseSB0aGUgbW9tIEhBUyB0byBiZSB0aGUgb25lIHdob3NlIG5hbWUgaXMgb24gaXQuIERhZCB3aWxsIGJsb3cgdGhydSBpdCBpbiBhIG1vbnRoLCBtYXliZSBldmVuIGxlc3MgdGhhbiBhIG1vbnRoLiAKVGhhdCB0cnVlLiAKQSByZSBlbGVjdGVkIExpYmVyYWwgZ292ZXJubWVudCwgbWVhbndoaWxlLCB3b3VsZCBrZWVwIHRoZSBtYWNoaW5lcyBpbiBwdWJzIGFuZCBjbHVicyB1bnRpbCBhdCBsZWFzdCAyMDQzLiBQcmVtaWVyIFdpbGwgSG9kZ21hbiBkZW5pZWQgIm1pbGxpb25zIiBoYWQgYmVlbiBkb25hdGVkIHRvIHRoZSBMaWJlcmFscyB2aWEgdGhlIGdhbWluZyBpbmR1c3RyeS4gIlRoaXMgaXMgYSBjb252ZW5pZW5jZSB0aGF0IGhhcyBiZWVuIGNvbnRyaXZlZCBieSB0aGUgR3JlZW5zIGF0IHRoZSB2ZXJ5IGxhc3QgbWludXRlLCIgaGUgc2FpZCBhdCBLaW5nc3Rvbiwgc291dGggb2YgSG9iYXJ0LCB3aGlsZSBhbm5vdW5jaW5nIGEgc3VpdGUgb2YgcHJvbWlzZXMgYWltZWQgYXQgYm9vc3Rpbmcgc21hbGwgYnVzaW5lc3MuIApJdCB3YXMgY29tbWlzc2lvbmVkIGluIDE5NDEgYnkgYXZpYXRpb24gcGlvbmVlciBTaGVybWFuIE0uIApNb3Jlb3ZlciwgcG9rZXIgb25saW5lIGdhbWVzIHJ1biBieSB3ZWIgc2l0ZXMgc3VjaCBhcyBGdWxsIFRpbHQsIFBva2VyIFN0YXJzIGFuZCBQYXJ0eSBQb2tlciwgdXNlIGlubm92YXRpdmUgcG9rZXIgc2V0cyBvZiBydWxlcyB0byBtaXggdXAgcG9rZXIgY2FyZHMgYW5kIG9mZmVyIG91dCBwb2tlciBmaW5nZXJzLi4gClBpY3R1cmUgZnJhbWVzIG9uIHRoZSB3YWxsIGNsYXR0ZXIgdG8gdGhlIGZsb29yIGFyb3VuZCB0aGUgbWFuIGFzIGhlIHNsdW1wcyBhZ2FpbnN0IHRoZSB3YWxsLiBUYWtpbmcgbm8gY2hhbmNlcyBhbmQgY29tcGxldGVseSB3b3JraW5nIG9uIHJlZmxleCwgeW91IHN0ZXAgYmFjayBhIGxpdHRsZSB3aGlsZSBzbGlkaW5nIHRoZSBqbyBiYWNrIGZvciBhIHJldmVyc2UgZ3JpcC4gQ29uc2Npb3VzIG9mIGhvdyBuYXJyb3cgdGhlIGhhbGx3YXkgaXMsIHlvdSBicmluZyB0aGUgam8gYXJvdW5kIGhhcmQgaGl0dGluZyB0aGUgbWFuIHNxdWFyZWx5IG9uIHRoZSBzaWRlIG9mIHRoZSBoZWFkIGtub2NraW5nIGhpbSBzZW5zZWxlc3MgdG8gdGhlIGdyb3VuZC4uIApHbyB0byB5b3VyIGFjY291bnQgYW5kIHlvdSB3aWxsIGJlIHByZXNlbnRlZCB3aXRoIHRoZSBwYXltZW50IG1ldGhvZHMgYXZhaWxhYmxlLiAKSW4gYW55IGNhc2Ugd2hhdCBldmVyeW9uZSBzaG91bGQgd2F0Y2ggb3V0IGZvciBpcyBTY2FtIGVtYWlscyBhbmQgbWVzc2FnZXMgaW4gZmFjZWJvb2sgd2hlcmUgeW91IGFyZSBzdXBvc2UgdG8gYmUgYXdhcmRlZCBvciBiYW5lZCBmb3IgYW55IHJlYXNvbiwgYW5kIHlvdSBhcmUgYXNrZWQgdG8gY2xpY2sgYSBsaW5rIHRvIHZlcmlmeSB5b3VyIGFjY291bnQsIHdoZXJlIHlvdSB3b3VsZCBuZWVkIHRvIGxvZ2luIG9mIGNvdXJzZTsgd2hlbiB5b3UgbG9naW4gdG8gdGhhdCBsaW5rIHlvdSBkb24ndCBhY3R1YWxseSB2ZXJpZnkgYW55dGhpbmcgeW91IGp1c3QgZ2l2ZSBvdXQgeW91ciBwYXNzd29yZCBhbmQgYWNjb3VudCB0byBzb21lIGhhY2tlcnMuIApUaGUgbGFzdCBkYXkgSSBwbGF5ZWQgd2FzIHRoZSBzZWNvbmQgYmVzdCBsaXZlIHByb2ZpdCBJIGhhdmUgZXZlciBoYWQuIEkgYWN0dWFsbHkgc3RheWVkIGxvbmdlciB0aGFuIEkgd291bGQgaGF2ZSBub3JtYWxseSB0cnlpbmcgdG8gYnJlYWsgdGhhdCByZWNvcmQsIGJ1dCBqdXN0IGNvdWxkbiBnZXQgZW5vdWdoIGhhbmRzIGFuZCByYW4gb3V0IG9mIHN0ZWFtLiBJIHdhcyB0aXJlZCB3aGVuIEkgY2FzaGVkIG91dCBhbmQgaXQgYSBiaXQgb2YgYSBsb25nIHN0b3J5LCBidXQgdGhlIGNhc2hpZXIgZ2F2ZSBtZSAkOTAwIG1vcmUgbW9uZXkgdGhhbiBzaGUgc2hvdWxkIGhhdmUhIEhvdyB0aGF0IGZvciBhIGNyYXp5IHRyaXA/IERvbiB3b3JyeSwgSSByZWFsaXplZCB0aGUgbWlzdGFrZSBiZWZvcmUgSSBvcmRlcmVkIG15IFViZXIgYW5kIGxlZnQgYW5kIHdhbGtlZCBiYWNrIGFuZCByZXR1cm5lZCB0aGUgbW9uZXkuCklmIHlvdSBhcmUgdW5oYXBweSB3aXRoIHRoZSBpbml0aWFsIFNjcmVlbmluZyBPZmZpY2VyIGRlY2lzaW9uIHlvdSBjYW4gcmVxdWVzdCBhIHNlY29uZCBhbmQgZmluYWwgcmV2aWV3IHdpdGggYW4gQWRtaW5pc3RyYXRpdmUgUGVuYWx0eSBUcmlidW5hbCBIZWFyaW5nIE9mZmljZXIuIFRoaXMgaXMgeW91ciBjaGFuY2UgdG8gaGF2ZSBhIGZ1bGwgaW4gcGVyc29uIGhlYXJpbmcgaWYgdGhhdCBpcyB3aGF0IHlvdSB3YW50LiAKT3IgU2VyZ2UgUmFkZXIgYSBwcm9kdWl0IGRldXggbGl2cmVzLCBpbCBhIGZhbGx1IHF1ZSBqZSBsdWkgdGxwaG9uZSBldCBxdSdpbCB2b3F1ZSBjZXMgbGl2cmVzIHBvdXIgcXUnZW4gY2hlcmNoYW50ICJsaXZyZXMgZGUgU2VyZ2UgUmFkZXIiIGplIGxlcyBkY291dnJlLk1haW50ZW5hbnQgcXVlIGonYWkgbGVzIHJmcmVuY2VzIHNvdXMgbGVzIHlldXgsIGxlIHByZW1pZXIgbWUgcmFwcGVsbGUgcXVlbHF1ZSBjaG9zZSBtYWlzICBuZSBtJ2EgcGFzIG1hcnF1IGNhciBsZSBzdWpldCBlc3QgcG91ciBtb2kgYmF0ZWF1IDogbGEgY2F1c2UgZXN0IGRlcHVpcyBsb25ndGVtcHMgZW50ZW5kdWUuQ2VsdWkgc3VyIGxlcyB2YWNjaW5zIGVuIHJldmFuY2hlIG0nYSBjb21wbHRlbWVudCBjaGFwcCwgb3Igc2kgaidhdmFpcyBzdSBxdSd1biBsaXZyZSBtZXR0YWl0IGwnYWNjZW50IHN1ciBsZXMgc3Vic3RhbmNlcyBjb250ZW51ZXMgZGFucyBsZXMgdmFjY2lucyBhdmVjIGVuIHBsdXMgZGVzIHBob3RvcywgamUgbSd5IHNlcmFpcyBmb3JjbWVudCBpbnRyZXNzIHB1aXNxdWUgY2V0dGUgYXBwcm9jaGUgcHJzYWdlYWl0IGR1IGNvbnRlbnUgZHUgY2UgcXVlIG5vdXMgc29tbWVzIGFtZW4gIGRjb3V2cmlyIGF1am91cmQnaHVpIGF2ZWMgaG9ycmV1ci5GYW9uIGRlIHBhcmxlciwgbCdob3JyZXVyIGVzdCBwb3VyIGxlcyBuYWZzLiAKVGhleSBkaWRuIGZvcmNlIHRoZW0gdG8gZG8gYW55dGhpbmcsIHRoZSBnYW1lIHBsYW4gd2FzIGFsd2F5cyB0byByZWxlYXNlIHRoZSB2YW5pbGxhIGdhbWUgYW5kIHRoZW4gYWRkIHRvIGl0IHdpdGggY29udGVudC4gCllvdSB0aGVuIHRyeSB0byBmaW5kIGEgc2V0IG9mIGZlYXR1cmVzIHRoYXQgdG9nZXRoZXIgdGFrZXMgY2xvc2UgdG8sIGJ1dCBub3Qgb3ZlciwgMTIwIHBvaW50cywgcmFua2VkIGJ5IHRoZWlyIHByaW9yaXR5LiBUaGlzIHdvdWxkIHNpbXBseSBiZSB0byBzdW0gYWNjdW11bGF0aXZlIGZyb20gdGhlIHRvcCBhbmQgZG93bndhcmRzIHVudGlsIHlvdSByZWFjaCBhIHRhc2sgdGhhdCB0aXBzIHRoZSBzdW0gb3Zlciwgb3IgZXF1YWwgdG8sIHRob3NlIDEyMCBwb2ludHMuIElmIGl0IHRpcHBlZCBpdCBvdmVyLCBkb24ndCBpbmNsdWRlIHRoZSB0YXNrLgpJbiBhIHByZXZpb3VzIHBpZWNlIHdlIHVzZWQgdGhlIEdlcm1hbiB3b3JkIGxlYmVuc3JhdW0sIGxpdGVyYWxseSAibGl2aW5nIHNwYWNlLCIgdG8gY2hhcmFjdGVyaXplIHRoZSB1bml2ZXJzaXR5J3MgZGVzaXJlcy4gQSB5b3VuZ2VyIGNvcHkgZWRpdG9yIHdhc24ndCBmYW1pbGlhciB3aXRoIHRoZSB3b3JkLiAKSGV3aXR0IHNhdmVkIHRocmVlIHNldCBwb2ludHMgaW4gdGhlIHNlY29uZCBzZXQgdGllYnJlYWtlciwgYW5kIHB1bXBlZCBoaXMgcmlnaHQgYXJtIGZvdXIgdGltZXMgaW4gY2VsZWJyYXRpb24gYWZ0ZXIgY2xvc2luZyBvdXQgdGhlIHNldC4gTW9uZmlscyBmb3VnaHQgYmFjayB0byBzdGF5IGNsb3NlIGluIHRoZSB0aGlyZCBidXQgZG91YmxlIGZhdWx0ZWQgdG8gZW5kIHRoZSBtYXRjaC4KQWxzbyB0aGUgZ2F0IGJyb3ducyBhcmUgcHJldHR5IG5pY2UsIEkgYWN0dWFsbHkgcXVpdGUgbGlrZSB0aGVtLiBJdmUgb25seSBleHBlcmllbmNlZCBjaGVycnkgYnJvd24gb24gYSBzd2l0Y2ggdGVzdGVyLCBidXQgaXQgc2VlbXMgdGhlIGdhdCBicm93bnMgYXJlIG11Y2ggYmV0dGVyLiAKSWNoIHdhciBiaXNoZXIgaW4gS3ViYSwgS29sdW1iaWVuIHVuZCBWZW5lenVlbGEgKGFsbGVzIGVpbmlnZSBKYWhyZSBoZXIpLiBTZGFtZXJpa2EgaXN0IGRpZSBXZWx0cmVnaW9uIG1pdCBkZXIgZ3J0ZW4gVW5nbGVpY2hoZWl0IHZvbiBWZXJtZ2VuLiBJbiBLb2x1bWJpZW4gaXN0IG1pciBkYXMgYW0gbWVpc3RlbiBhdWZnZWZhbGxlbi4gCkkgaGF2ZSBiZWVuIHVzaW5nIGVtYWNzIHNpbmNlIDE5OTMgYW5kIGEgZmV3IHllYXJzIHN0YXJ0ZWQgdXNpbmcgcHJlbHVkZSBhcyBhIGJhc2UuIEkgYWRkZWQgYWxsIHNvcnRzIG9mIG5ldyBsaXR0bGUgc2tpbGxzIGFsb25nIHRoZSB3YXksIGFuZCBjb250aW51ZSB0byBkbyBzbyBlYWNoIHdlZWsuIEkgZXZlbiBoYXZlIGFuIG9yZyBmaWxlIHRoYXQgSSBrZWVwIHJlY2VudCBkaXNjb3ZlcmllcyBpbiBzbyBJIGNhbiBsb29rIHRoZW0gdXAgZWFzaWx5IHVudGlsIGl0IHR1cm5zIGhhYml0dWFsLiBJIGFsc28gd29ya2VkIGluICJldmVyeW9uZSBydW5zIFN1YmxpbWUgYW5kIHBhaXIgcHJvZ3JhbW1pbmciIHNob3BzIHN1Y2Nlc3NmdWxseSBiZWNhdXNlIEkga25ldyB3aGF0IGFuIGVkaXRvciBzaG91bGQgYmUgYWJsZSB0byBkbyBmb3IgbWUgYW5kIHdlbnQgc3BlbHVua2luZyB0aHJvdWdoIGRvY3MgdW50aWwgSSB3YXMgaW4gY29tbWFuZC4KQXMgc29vbiBhcyBoaXMgZmFjZSBwZWVrcyBhcm91bmQgdGhlIGNvcm5lciwgeW91ciByaWdodCBoYW5kIHRocnVzdHMgdGhlIGpvIGZvcndhcmQgdGhyb3VnaCB5b3VyIGxlZnQgaGFuZCBhaW1pbmcgcmlnaHQgZm9yIHRoZSBwZXJwZXRyYXRvciBmYWNlLiBUaGUgYmxvdyBoaXRzIHNxdWFyZWx5IGJldHdlZW4gdGhlIG1hbidzIGV5ZXMuIFN0dW5uZWQsIGhlIHN0dW1ibGVzIGJhY2t3YXJkcyBoaXR0aW5nIGhpcyBiYWNrIGFnYWluc3QgdGhlIHdhbGwgb2YgdGhlIG5hcnJvdyBoYWxsd2F5IGFuZCB5b3UgYnJpbmcgdGhlIGpvIGRvd24gaGFyZCBvbiB0aGUgaGFuZCBob2xkaW5nIHRoZSBndW4uIApJbiAxOTgwIGFwYXJ0bWVudHMgYXQgNTUwIFBhcmsgQXZlLiAKVG9kYXksIHRob3VnaCwgd2UgaGF2ZSBwcm9ibGVtcyB0aGF0IHdlIGtub3cgZm9yIGEgZmFjdCBhcmUgMTAwJSBnb2luZyB0byBoYXBwZW4uIFRoZXkgbm90IGFzIGJhZCBhcyBudWNsZWFyIHdhciAoaW4gdGhlIHNob3J0L21lZGl1bSB0ZXJtIGF0IGxlYXN0KSwgYnV0IHRoZXkgYXJlIGRlZmluaXRlbHkgY29taW5nIGluIG91ciBsaWZldGltZXMuIEdyYWR1YWxseSwgYnV0IHN1cmVseS4gVGhlcmUgaXMgbm8gIndlIG1pZ2h0IGJlIG9rYXkgYW5kIG5vdGhpbmcgaGFwcGVucyIuIEl0IG9ubHkgYSBtYXR0ZXIgb2YgdGltZS4KVGhlIG1haW4gcHJvYmxlbSB3aXRoIHRoZSB1bml0IGlzIHRoYXQgeW91IGhhdmUgdG8gc3VwcGx5IGFsbCB5b3VyIG93biBjb29raW5nIGdlYXIgZXRjLCBzbyBvZmYgd2UgdG9kZGxlZCB0byB0aGUgaHVnZSB2YXJpZXR5IHN0b3JlIHRvIGJ1eSBzb21lIHVudGVuc2lscywgcG90cywgY3VwcywgcGxhdGVzLCBldGMgICBpdCB3YXMgYSBiaXQgbGlrZSBzZXR0aW5nIHVwIGhvbWUgYWdhaW4uIApCdXQgSSBwZXJzb25hbGx5IGRvbid0IHRoaW5rIHdvbWVuIG15IGFnZSBhcmUgb3BwcmVzc2VkLiAKIlRoZSBDQkEgY29uc3BpcmFjeSB3YXMgYSBwcm9sb25nZWQgZnJhdWQgb2YgYnJlYXRodGFraW5nIHByb3BvcnRpb25zLCIgSnVkZ2UgTGFjYXZhIHNhaWQuIApMaWZlY29hY2ggaXMgY2xlYXJseSBzb21lIGxldmVsIG9mIGdvb2QgYXQgY2FyZCBnYW1lcyBhbmQgc29tZSBsZXZlbCBvZiByaWNoLiBGb3IgdmFyaW91cyByZWFzb25zLCBtb25leSA9PSBza2lsbCBoYXMgbGl0dGxlIHdlaWdodCB3aXRoIG1lLiAKQXVucXVlIGhheSBxdWUgZGVjaXIgcXVlIG5vIHRvZG9zIGxvcyByY29yZHMgY2VsZWJyYW4gbGEgaGFiaWxpZGFkIG8gbGEgZm9ydHVuYSBkZSBsb3MgbXMgZGVzdGFjYWRvcyBkZSBsb3MgY2llbnRvcyBkZSBtaWxlcyBkZSBqdWdhZG9yZXMgcXVlIHNlIGhhbiBzZW50YWRvIGEgbGFzIG1lc2FzIGRlIGxhcyBXU09QIGFsZ3VuYSB2ZXogZHVyYW50ZSBlbCBtZXMgZGUganVuaW8gZW4gbGFzIGx0aW1hcyBkY2FkYXMuIEVuIHBhcnRpY3VsYXIsIGhheSB1bm8gcXVlIHF1aXogc2VhIGVsIG1zIGxsYW1hdGl2byB5IGVsIG1zIHBvbG1pY28gZGUgdG9kb3M6IGVsIGRlIGxhcyA0NiByZWNvbXByYXMgcXVlIGhpem8gRGFuaWVsIE5lZ3JlYW51IGVuIHVuIHNvbG8gdG9ybmVvLgpDYW4geW91IGhlbHAuIFRoYW5rcyBpbiBhbnRpY2lwYXRpb24uIApXaGVuIEkgd2FzIHRlbiwgSSBsaXZlZCB3aXRoIGFuIGF1bnQgYW5kIHVuY2xlIGZvciBmb3VyIG9yIGZpdmUgeWVhcnMsIG9uIG9mZi4gVGhleSBncmVhdCBwZW9wbGUsIGFuZCB0aGV5IHJhaXNlZCB1cyBhbG9uZ3NpZGUgdGhlaXIgb3duIGZvdXIga2lkcyAodXMgaW5jbHVkZWQsIGl0IHRvdGFsZWQgc2V2ZW4ga2lkcyBpbiB0aGUgaG91c2UpLiAKVGh1cywgdGhpcyByZXdhdGNoIGNvbWVzIHRvIGEgY2xvc2UuIFdoYXQgZG9lcyBldmVyeW9uZSBlbHNlIHRoaW5rIGFib3V0IElCTyBvdmVyYWxsPyBQZXJzb25hbGx5LCBpdCBvbmUgb2YgbXkgYWxsIHRpbWUgZmF2b3VyaXRlIEd1bmRhbSBzZXJpZXMgZm9yIHJlYXNvbnMgSSBub3QgZXhhY3RseSBzdXJlIGhvdyB0byBleHByZXNzLiAKMTAwIHZpZXdzIGZvciBhIGRvbGxhci4gCkhvcGVmdWxseSwgZG93biB0aGUgcm9hZCBpbnN0ZWFkIG9mIHVzIGFsbCBidXlpbmcgdGhlIE1ldGFsIDEwIFJvdyBDYXNpbm8gVGFibGUgQ2hpcCBUcmF5IHdpdGggQ292ZXIgYW5kIExvY2ssIHdlIGNhbiBhbGwgZ2V0IHByb2Zlc3Npb25hbCB0YWJsZXMuIFRoaXMga2l0Y2hlbiB0YWJsZSBzdHVmZiBpcyBnZXR0aW5nIGEgbGl0dGxlIG9sZCwgYnV0IGF0IGxlYXN0IHdlIGtub3cgdGhhdCB0aGUgc2FtZSBwbGFjZSB3ZSB3ZW50IHRvIHB1cmNoYXNlIHRoaXMgd2UgY2FuIHB1cmNoYXNlIHRob3NlLiBQbHVzLCB3aG8gY2FuIGNvbXBsYWluIGFib3V0IHRob3NlIHR5cGVzIG9mIGRpc2NvdW50cy4gCkRlc3BpdGUgdGhlIGFpciB0aW1lLCBMYWJvcidzIHBvc2l0aW9uIG1heSBub3QgaGF2ZSByZXNvbmF0ZWQuCkZyZXNoIG9mZiB0aGUgYmFjayBvZiB0aGUgU3Vuc2hpbmUgQ29hc3QgTGlnaHRuaW5nIGdpYW50IGtpbGxpbmcgcnVuIGluIHRoZSBTdW5jb3JwIFN1cGVyIE5ldGJhbGwgYW5kIHRoZSBTdW5zaGluZSBDb2FzdCBGYWxjb25zIEludHJ1c3QgU3VwZXIgQ3VwIGdyYW5kIGZpbmFsIGFwcGVhcmFuY2UgdGhlIHNwb3J0aW5nIGNvbW11bml0eSBuZXh0IGJvb3N0IGlzIGluIHRoZSBzaGFwZSBvZiB0aGUgU3Vuc2hpbmUgQ29hc3QgQ29tbXVuaXR5IGFuZCBTcG9ydHMgQ2x1Yi4KRmF0YWxjaGVtaXN0ICAxMyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KIlVsdGltYXRlbHksIHRoZSBjaGFsbGVuZ2UgaXMgdGhhdCBwZW9wbGUgaGF2ZSBsaXZlZCBpbiB0aGlzIGNvbW11bml0eSBmb3IgMTAgb3IgMjAgb3IgMzAgeWVhcnMsIGFuZCB0aGV5IGhhZCBhIHByaXZhdGUgb3duZXIgYW5kIGxhbmRsb3JkIGZvciB0aGF0IHRpbWUsIiBGaXJuaGFiZXIgc2FpZC4gIk5vdywgdGhleSdyZSBvd25lZCBieSB0aGUgY2l0eSBhbmQgdGhleSBuZXZlciBhc2tlZCB0byBiZSByZWRldmVsb3BlZC4gVGhleSBuZXZlciBhc2tlZCBmb3Igc3RyZWV0cy4gCkFmdGVyIHB1dHRpbmcgYSBsb3Qgb2Ygd29yayBpbnRvIHNoaXBzIEkgd2FzIGNvbnNpc3RlbnRseSBhYmxlIHRvIGJlYXQgdGhlbSB3aXRoIHdhcnJpb3IgYW5kIHRoZXJpb24uIGJ1dCBjbGltYiB0aGUgcmFua2luZ3MgbXVjaCBoaWdoZXIgYW5kIHlvdSBzdGFydCBnZXR0aW5nIHRvIHRoZSBwZW9wbGUgdGhhdCBhY3R1YWxseSBib3VnaHQgdGhlIGRhbW4gdGhpbmcgYW5kIHJlYWxseSBwdW1wZWQgc29tZSB0aW1lIGFuZCBlZmZvcnQgaW50byBpdC4gSSBsZXZlbCAzMiBhdCA3NTAgcmFua2luZywgYW5kIHRoZSBWZWdhcyBJIG5vdyBmYWNpbmcgYXJlIGp1c3QgcmlkaWN1bG91cy4gV3JhaXRoIGFuZCB0aGVyaW9uIGp1c3QgY2Fubm90IG1hdGNoIHRoZSBkYW1uIHRoaW5ncyBpbiBhcm1vciwgZmlyZXBvd2VyLCBvciBtYW5ldXZlcmFiaWxpdHkuIEl0IGJlbG9uZ3MgYXQgbWF5YmUgMzIgb3IgMzMgdG8gYnV5IGl0LCBhbmQgZGVmaW5pdGVseSBzaG91bGQgbm90IGJlIGJlaW5nIGZhY2VkIGJ5IHBlb3BsZSBpbiB0aGUgbG93IDIwcy4KSXNuIHRoYXQgd2hhdCB0aGUgQ2l2aWwgUmlnaHRzIE1vdmVtZW50IHdhcyBhbGwgYWJvdXQgICBnZXR0aW5nIHVzIHBhc3QgcmFjZT8gV2h5IGRvZXMgdGhlIGxlZnQga2VlcCBicmluZ2luZyBpdCB1cCwgYW5kIGJlYXRpbmcgZXZlcnlvbmUgb3ZlciB0aGUgaGVhZCB3aXRoIGl0PyBJdCBtYWtlcyBwZW9wbGUgcXVlc3Rpb24gaWYgYSBwb3N0IHJhY2lhbCBzb2NpZXR5IHJlYWxseSBpcyB5b3VyIHRydWUgaW50ZW50LiBJIGNvbnRlbmQgaXQgbWF5IG5vdCBiZS4uIAoiRGVzcGl0ZSBvdXIgcmVwZWF0ZWQgcmVxdWVzdHMgb3ZlciB0aGUgbGFzdCBmb3VyIHdlZWtzLCB3ZSd2ZSByZWNlaXZlZCBubyBhY3Rpb24gb24gKG91ciBwcm9taXNlcykuIEFsbCB3ZSBnb3QgZnJvbSB0aGUgQ2hpZWYgYW5kIHRoZSBDaGFpciAob2YgdGhlIFRvcm9udG8gUG9saWNlIFNlcnZpY2VzIEJvYXJkKSB3YXMgZW1wdHkgcHJvbWlzZXMsIiBUUEEgcHJlc2lkZW50IE1pa2UgTWNDb3JtYWNrIHNhaWQgaW4gYSB2aWRlbyBkaXN0cmlidXRlZCBvbiBUaHVyc2RheS4KUGFkZG9jayB3YXMgYSByZXRpcmVkIGFjY291bnRhbnQgd2hvIGFtYXNzZWQgYSBtaWxsaW9uYWlyZSdzIGZvcnR1bmUsIG93bmVkIGhvbWVzIGluIFJlbm8gYW5kIE1lc3F1aXRlLCBOZXZhZGEsIGFuZCBlYXJuZWQgY2FzaW5vIHBlcmtzIHdhZ2VyaW5nIHRob3VzYW5kcyBvZiBkb2xsYXJzIG9uIGhpZ2ggc3Rha2VzIHZpZGVvIHBva2VyLgpJdCBpcyBpbXBvcnRhbnQgdG8gYWNrbm93bGVkZ2UgdGhhdCBvdXIgTG9yZCB3aWxsIGNvbWUgdG8gdGFrZSBIaXMgYnJpZGUuIFRoZSBpbXBvcnRhbnQgZmFjdG9yIGlzIHRvIGhhdmUgYW4gaW50aW1hdGUgbG92ZSByZWxhdGlvbnNoaXAgd2l0aCB0aGUgTG9yZCBKZXN1cyBDaHJpc3QgZm9yIG5vdCBiZSBsZWZ0IGJlaGluZC4gV2UgYXJlIGFsbCB3aXRuZXNzaW5nIHRoYXQgdGhlIHNpbmdzIG9mIHRoZSB0aW1lcyBhcmUgZnVsZmlsbGluZyBwZXIgQmlibGUgcHJvcGhlY2llcy4gSGlzIGNvbWluZyBpcyBvbiBoYW5kOyB0aGVyZWZvcmUgbGV0IG5vdCBzbGVlcCBsaWtlIGZpdmUgdW53aXNlIHZpcmdpbnMsIGJ1dCBzdGFuZCBhbGVydHMgdGhhdCBlbmVteSBjYW5ub3QgZGV2b3VyIHVzIGZyb20gb3VyIHdhbGsgd2l0aCB0aGUgTG9yZCBHb2QgQWxtaWdodHkuIAooSSBsZWZ0IG15IGtleXMgaW4gbXkgYXBhcnRtZW50IGRvb3IsIHNvIEkgYXNzdW1lZCBpdCB3YXMgYSBjcmltZSBvZiBvcHBvcnR1bml0eS4gClRoZSBwYWlyIG9mIEtpbmdzIFF1ZWVucyBsb29rcyBsaWtlIEtLUVFYLiAKVGhhdCdzIHdoYXQgSSBmaWd1cmVkLCBidXQgdGhlIGxldHRlciB3YXMgc3RpbGwgcHJldHR5IHNoaXR0eSB3aGVuIGl0IG1lYW50IG5vdGhpbmcuIEJleW9uZCB0aGF0LCBhdCBteSB3b3JrcGxhY2UsIHdlIHNoaXAgZXhwZW5zaXZlIHRhYmxlcyB3aXRoIEZlZEV4LiAKSWYgeW91IHdhbnQgdGhlIGJhcmUgYmFzaWNzLCBoaXJlIHRoZSB0ZWVuYWdlci4gSWYgeW91IHdhbnQgc29tZW9uZSB3aXRoIGV4cGVyaWVuY2UsIGl0IGNvc3QgeW91ICQxNS9oci4KIlRoZSAic29sZSBlc3NlbmNlIG9mIGJ1bGx5aW5nIiBpcyBhYnVzaW5nIG9uZSBwb3dlciBvdmVyIG90aGVycy4gVGhlIGNvbXBhbnkgaXMgbm90IGFidXNpbmcgdGhlaXIgcG93ZXIgYnkgaGF2aW5nIGFuIGVtcGxveWVlIHRha2UgYWRkaXRpb25hbCB0cmFpbmluZy4gCkJlIGF3YXJlIHRoYXQgaWYgeW91ciBzaG9lcyBoYXZlIG1ldGFsIGZhc3RlbmVycyBvciBjbGVhdHMsIHlvdSBtYXkgbWlzdGFrZW5seSBwaWNrIHVwIGEgc2lnbmFsIGZyb20geW91ciBvd24gZmVldCBhbmQgbm90IHRoZSBncm91bmQuLiAKSSBhbSBnbGFkIEkgd2FzIGFibGUgdG8gY2F0Y2ggeW91IG5lYXIgdGhlIGVuZCBvZiB0aGUgcmFjZSBvbiBOZXcgWWVhcnMgZGF5LiAKRWFjaCBvZiB0aGUgbnVtYmVycyAxIHRocm91Z2ggMzYgaXMgc3Vycm91bmRlZCBieSBlaXRoZXIgYSByZWQgb3IgYmxhY2sgb3ZhbCBvciByZWN0YW5nbGUuIFRoZSAwIGFuZCAwMCBoYXZlIGdyZWVuIGJhY2tncm91bmRzLiAKSWYgeW91IGhhdmUgYSBmbGFzaCBkcml2ZSwgeW91IGNhbiBnZXQgV2luZG93cyAxMCBoZXJlOlNlbGVjdCB0aGUgT2N0b2JlciB1cGRhdGUgb3B0aW9uLCA2NCBiaXQsIHRoZW4gd2hhdGV2ZXIgbGFuZ3VhZ2UuIERvd25sb2FkIHRoZSBJU08gZmlsZS4KUGxheWluZ0dvaW5nIGluIHR1cm4sIGVhY2ggcGxheWVyIGhhcyB0byBtZWV0IG9yIGJlYXQgdGhlIGNhcmQgb24gdG9wIG9mIHRoZSBwaWxlLiAKSXQgYSBzaWduaWZpY2FudCBhY2hpZXZlbWVudCwgZXNwZWNpYWxseSBpbiBWZWdhcyB0aGUgbWVjY2Egb2YgcG9rZXIuIApNeSBzaGUgaGF2ZSBldGVybmFsIHJlc3QgaW4gdGhlIGFybXMgb2YgSmVzdXMuIApXaGVuIEkgd2FzIDkgbW9udGhzIHByZWduYW50LCBiaXR0ZXJseSBmYXQgYW5kIHdhZGRsaW5nLCBhbiBvbGQgbWFuIHNuYXBwZWQgYXQgbWUgZm9yIG5vdCBtb3ZpbmcgZmFzdCBlbm91Z2ggdG8gc2VydmUgaGltIGEgYmVlci4gT25lIGd1eSBvbmNlIGRlbWFuZGVkIG1vdmllIHBhc3NlcyBiZWNhdXNlIGhlIGZlbGwgYXNsZWVwIGluIHRoZSBtaWRkbGUgb2YgdGhlIG1vdmllIGFuZCB3YXMgcGlzc2VkIGhlIG1pc3NlZCB0aGUgZW5kaW5nLiBBbiBlbGRlcmx5IGNvdXBsZSB0aHJldyBhIGZpdCB0aGF0IEkgd291bGRuJ3QgYWNjZXB0IGNvdXBvbnMgdGhhdCB3ZXJlIG9sZGVyIHRoYW4gTUUuIApBbHNvIGxpa2UgbWFueSBvdGhlciBpbnRlcm5hdGlvbmFsIHVuaXZlcnNpdGllcywgSUlNIEtvemhpa29kZSBpcyBvZmZlcmluZyBhIGNvdXJzZSBpbiBwb2tlciwgd2hpY2ggZXN0YWJsaXNoZXMgdGhhdCBpdCBpcyBhIGdhbWUgdGhhdCBpcyBwbGF5ZWQgd2l0aCBza2lsbC4KSmVkaVZhdWx0RHdlbGxlciB1CkxFTEFORFlFRSB1CkJ1dCBwYXN0IHRoYXQsIHBlb3BsZSBzYXkgVHJ1bXAgaXMgdGhlIG1vc3QgaGF0ZWQgcHJlc2lkZW50IGluIGhpc3RvcnkuIApJIGFzc3VtZSBtYWpvcml0eSBvZiBzdG9yZXMgdGhhdCBoYXZlIGNvbnNpc3RlbnQgaXNzdWVzIGlzIHBvb3Ivbm8gbWFpbnRlbmFuY2UuIE1hY2NhcyBpcyBsb3cgcGF5aW5nIGpvYiBzbyBnZXR0aW5nIGdvb2QgcGVvcGxlIHdobyBhcmUgcmVsaWFibGUgYW5kIG9udG8gaXQgYW5kIHdhbnQgdG8gc3RheSBsb25ndGVybSBpcyBoYXJkCkRvIHlvdSB3YW50IFRlYSBwYXJ0eSBudXQgY2FzZXMgdG8gYmUgaW4gcG93ZXI/IERvIHlvdSB3YW50IFJlcHVibGljYW5zIHRvIHVuZG8gdGhlIHByb2dyZXNzIHRoYXQgaGFzIGJlZW4gYnJvdWdodCAod2lsbCBiZSBicm91Z2h0KSBpbiBieSBPYmFtYT8gTm8gbWF0dGVyIGhvdyBkaXNhcHBvaW50ZWQgeW91IG1heSBiZSB3aXRoIHRoZSB0aGluZ3MgdGhhdCBPYmFtYSBoYXNuIGRvbmUgYXMgeW91IGhvcGVkIHRoYXQgaXMgbm8gcmVhc29uIHRvIGdpdmUgdXAuIApDYXJsb3MgYmVtZXJrdGUgSGVsZW5zIHpnZXJuLiBFciB3b2xsdGUgbmljaHQsIGRhc3Mgc2llIHNpY2ggaXJnZW5kd2llIGdlbnRpZ3Qgc2FoLCBlciB3b2xsdGUsIGRhc3Mgc2llIGluIGRpZXNlcyBTcGllbCBnZXJuZSB1bmQgZnJlaXdpbGxpZyBlaW53aWxsaWd0ZSwgZGFzcyBzaWUgYXVjaCBha3RpdiBzYWd0ZSwgZGFzcyBzaWUgZGFzIHdpbGwuClRoZSBiZXQgeW91IHBsYWNlIGlzIHN1YnRyYWN0ZWQgZnJvbSB5b3VyIGFjY291bnQgd2hlbiB5b3VyIGNhcmRzIGNvbWVzLCBhbmQgeW91IGNhbiBjaGFuZ2UgeW91ciBiZXQgYW1vdW50IHdpdGggZXZlcnkgbmV3IGhhbmQgaWYgeW91IHdhbnQgdG8uIApUaGVyZSBhcmUgd2F5cyBvZiBzdG9wcGluZyB0aGUgTWNEb25hbGQgd29ya2VyIGZyb20gc3ByZWFkaW5nIGRpc2Vhc2UuIFdlIGNhbiBoYXZlIHJpZ29yb3VzIGhhbmR3YXNoaW5nIGFuZCBnbG92aW5nIHByYWN0aWNlcyBmb3IgZm9vZCBzZXJ2aWNlIHdvcmtlcnMuIE1heWJlIHdlIGNhbiBtYW5kYXRlIHBlb3BsZSB3aG8gYXJlIHNpY2sgdG8gd2VhciBmYWNlIG1hc2tzIHdoaWxlIHdvcmtpbmcgdG8gY292ZXIgY291Z2hzIGFuZCBzbmVlemVzLgpOb25lIG9mIHRoZSByZW5ld2FibGUgc291cmNlcyBjYW4gcHJvdmlkZSBlbm91Z2ggZW5lcmd5IGZvciB0aGF0IG1hbnkgcGVvcGxlIGluIHN1Y2ggY2xvc2UgcXVhcnRlcnMuLiAKWW91IHdpbGwgYmUgbWlzc2VkIGdyZWF0bHkhIEF0IFBldGVyJ3MgcmVxdWVzdCwgdGhlcmUgd2lsbCBiZSBhIHByaXZhdGUgaW1tZWRpYXRlIGZhbWlseSBnYXRoZXJpbmcgb25seS4gTWVtb3JpYWwgZG9uYXRpb25zIG1heSBiZSBtYWRlIHRvIHRoZSBPVkMgUGV0IFRydXN0IG9yIFRoZSBHdWVscGggQXJib3JldHVtIGlmIGRlc2lyZWQuLiAKRXNjb3J0cywgZmVtYWxlIG1vZGVscywgaW5kZXBlbmRlbnQgZXNjb3J0cywgYWR1bHQgc2VydmljZXMsIHN0cmlwcGVycywgc3RyaXAgY2x1YnMsIGV4b3RpYyBkYW5jZXJzLCBhbmQgbnVkZSBkYW5jaW5nIGF0IE5vcnRoIFBsYXR0ZS4gClBsYXVzaWJsZSBkZW5pYWJpbGl0eSBpcyBtb3JlIGRlY2lzaXZlIHRoYW4gZmlyZXBvd2VyIGluIHRoZSBpbmZvcm1hdGlvbiBhZ2UsIGFuZCB0aGlzIGlzIGRyaXZpbmcgd2FyIGludG8gdGhlIHNoYWRvd3MuIApCZSBzdXJlIHlvdSBhcmUgdGFraW5nIGEgUFBJIHN1Y2ggYXMgWmFudGFjLCBQcmlsb3NlYywgb3IgUHJldmFjaWQuIApDZXR0ZSBjYXJlbmNlLCBiaWVuIHZpZGVtbWVudCwgamUgbmUgcGV1eCBwYXMgbGEgcmVwcm9jaGVyICB1bmUgcG9wdWxhdGlvbiBxdWkgc3ViaXQgdW4gZW5mdW1hZ2UgcGVybWFuZW50IG1haXMgcG91ciB1bmUgZm9pcyBxdSdpbCB5IGF2YWl0IHF1ZWxxdWUgY2hvc2UgZCdpbnRyZXNzYW50ICBzaWduYWxlciAgbGEgcnVicmlxdWUgdmFjY2luYXRpb24gb24gZXN0IHBhc3MgIGN0LlF1aSBlc3QgU2VyZ2UgUmFkZXIgP0JpZW4gdmlkZW1tZW50LCBqZSBuZSBwZXV4IHBhcyB0b3V0IHNhdm9pciBldCBzdXJ0b3V0IGplIG4nYWkgcGFzIGwnb2JsaWdhdGlvbiBkZSB0b3V0IHNhdm9pci4gU3VydG91dCBzaSBvbiBuZSBmYWl0IHBhcyBncmFuZCBjaG9zZSBwb3VyIG0nYWlkZXIgIGRjb3V2cmlyIGRlcyBjaG9zZXMgaW50cmVzc2FudGVzIHF1YW5kIGplIGxlcyBpZ25vcmUuRG9uYyBTZXJnZSBSYWRlciBlc3QgdW4gcGhhcm1hY2llbiBxdWkgYSBkaiBmYWl0IHBhcmxlciBkZSBsdWkgZXQgcXVpIGEgZXUgYWNjcyBhdXggbWRpYXMuIApJdCBpcyBqdXN0IGEgcGVyZmVjdCBhbnN3ZXIgdG8geW91ciBxdWVzdGlvbjsgaG93IHRvIGNoZWF0IGluIHBva2VyPyBZZXMsIHlvdSB3aWxsIHN1cmVseSByZWFsaXplIHRoYXQgaXQgaXMgYSBsb25nIHRlcm0gaW52ZXN0bWVudCBmb3IgeW91IGFzIHRoaXMgcmFuZ2Ugb2Ygc3B5IGRldmljZSBjYW4gcmVhZCB0aGUgY2FyZHMgb2YgeW91ciBvcHBvbmVudCB0byBtYWtlIHlvdSBhYmxlIHRvIHRha2UgeW91ciBuZXh0IHN0ZXAgYWNjb3JkaW5nbHkuIEEgcGluaG9sZSBjYW1lcmEgaXMgYWxzbyBjb25uZWN0ZWQgdG8gdGhpcyBkZXZpY2Ugd2hpY2ggY2FuIG1vbml0b3IgeW91ciBlbnRpcmUgcm9vbSBhbmQgeW91IGNhbiBlYXNpbHkgZ2V0IHRoZSBjb21wbGV0ZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY2FyZHMgdG8gYmUgYWxsb3R0ZWQgdG8geW91ciBvcHBvbmVudHMuLiAKVGhpcyBpcyBzb21ldGhpbmcgSSBhc2tlZCBpbiB0aGUgdGhyZWFkIGJ1dCB3aXRoIG5vIGFuc3dlciBhcyBvZiB5ZXQuIEkgYmUgaW50ZXJlc3RlZCB0byBrbm93IGFzIHdoZW4gVEFTRVIgd2FzIGZpcnN0IHJvbGxlZCBvdXQgdG8gbm9uIGZpcmVhcm1zIHRoZSBob2xzdGVycyB3ZXJlIGEgcGxhc3RpYyBmcmFtZSBkZXNpZ25lZCB0byBzaG93IGl0IG9mZiB3aXRoIHRoZSBpZGVhIGl0IHdvdWxkIGJlIGEgZGV0ZXJyZW50LCB3aGlsZSB0aGUgYXJ0aWNsZSBzdWdnZXN0cyBjb25jZWFsbWVudCB3b3VsZCBiZSBiZXR0ZXIuCkkgbG92ZSB0aGUgQlNEIGluIG15IElvbmlxLiBTYW1lIGZvciB0aGUgbGFuZSBrZWVwIGFuZCBhdXRvIGVtZXJnZW5jeSBicmFraW5nLiBUaGUgYmxpbmQgc3BvdCBoYXMgc2F2ZWQgbWUgYSBjb3VwbGUgb2YgdGltZXMgd2hlbiBzb21lb25lIG1hbmV1dmVycyBhdCB0aGUgc2FtZSB0aW1lLiAKU29tZSBvZiB0aGUgb3RoZXIgYXJlYXMgd2hpY2ggaGF2ZSBiZWVuIHN1Z2dlc3RlZCBhcmUgdmVyeSBjZW50cmFsIGJ1dCBhbHNvIHZlcnkgY3Jvd2RlZCBhbmQgdXJiYW4uIFRoZSBhcmVhcyBJIHN1Z2dlc3RlZCBhbGwgb2ZmZXIgbW9yZSBwYXJrcyBhbmQgZ3JlZW4gYXJlYXMsIHBsdXMgd2Fsa2luZyBkaXN0YW5jZSB0byBiZWFjaGVzLi4gCkRpc2NvdW50IGV2ZXJ5dGhpbmcgc2hlIHNheXMgaW4gdGhvc2UgbW9tZW50cyBiZWNhdXNlIHRoZXkgbm90IHJlYWxseSB0aGUgcGVyc29uIHlvdSBsb3ZlLiBJdCBiZWNhdXNlIHRoZXkgdGhlbXNlbHZlcyBhcmUgaHVydGluZyBhbmQgZG9pbmcgaXQgYXMgYW4gaW5kaXJlY3Qgd2F5IG9mIGFza2luZyBmb3IgaGVscC4uIApTaSBjZWxhIHZvdXMgZ25lLCBsJ2VudHJlIGV0IGxhIHNvcnRpZSBzb250IGxpYnJlcy4gRXQgZ3JhdHVpdGUgZGFucyBsZXMgZGV1eCBzZW5zLk1vbiBwc2V1ZG9MZSBoYXNhcmQgIHZvdWx1IHF1J2VuIGNoZXJjaGFudCB1biBwc2V1ZG8gZW4gZHJvdWxhbnQgbGVzIHBhZ2VzIGQndW5lICJiaW9ncmFwaGllIHVuaXZlcnNlbGxlIiwgamUgc29pcyB0b21iIHN1ciBsZSBibGF6ZSBkJ3VuIG1kZWNpbiBhbHNhY2llbiBjbGJyZSBhdSBYVklJSW1lIHNpY2xlLiAKVGhlIHBoeXNpb3RoZXJhcHkgc3R1ZGVudCB1bmlvbiBlYWNoIHllYXIgb3JnYW5pc2UgaG9vZGllcyBhbmQgc3Rhc2ggZm9yIHN0dWRlbnRzIHRvIGJ1eS4gVGhpcyB5ZWFyIGFuIGFkZGl0aW9uYWwgY2hhcmdlIGNvdWxkIGJlIGFkZGVkIGZvciBkZWxpdmVyeSBvZiB0aGUgcHJvZHVjdHMgdG8gaW5kaXZpZHVhbHMgaG9tZXMuIFRoaXMgZXh0cmEgd2FzIGRvbmF0ZWQgdG8gdGhlIENSWSB0b3RhbGxpbmcgYW4gYW1vdW50IG9mCldhcyBtYWluc3RyZWFtIG1lZGlhIHRoYXQgY2lyY3VsYXRlZCBPIHdvcmsgYXMgaWYgaXQgd2VyZSBqb3VybmFsaXNtIHdoZW4gdGhleSB3b3VsZCBuZXZlciBjaXJjdWxhdGUgU2FjaGEgQmFyb24gQ29oZW4gd29yayBhcyBpZiBpdCB3ZXJlIGpvdXJuYWxpc20uIApJIGNhbGxlZCBteSBtYW5hZ2VyIGFuZCBoZSBzYWlkIHRvIGp1c3QgbWFrZSB2aXNpdHMgYW55d2F5LiAKQWRkIGEgdHVtdWx0dW91cyB0cmFpbmluZyBjYW1wIHRoYXQgc2F3IHN0YXIgc3RyaWtlciBTZWJhc3RpYW4gR2lvdmluY28gYW5kIHBsYXltYWtlciBWaWN0b3IgVmF6cXVleiBkZXBhcnQgZm9yIGdyZWVuZXIgcGFzdHVyZXMgKGluIFNhdWRpIEFyYWJpYSBhbmQgUWF0YXIsIHJlc3BlY3RpdmVseSkgYW5kIHRoZSBxdWVzdGlvbnMgYWJvdXQgd2hpY2ggVEZDIHdpbGwgc2hvdyB1cCBpbiAyMDE5IGNvbnRpbnVlIHRvIGdyb3cuCk9uZSBvZiBteSBmYXZvcml0ZSBmb3JtZXIgc3R1ZGVudHMgbGlrZXMgdG8gd2VhciBhIHNoaXJ0IHdpdGggdGhlIHdvcmRzICJRdWVlciBTcGF3biIgb24gaXQuIApJbiBhIHNwYW4gb2YgMiB5ZWFycyBJIHdlbnQgZnJvbSBtYWtpbmcgJDEwIGFuIGhvdXIgd29ya2luZyBpbiB0aGUgZmllbGQsIHRvIG1ha2luZyBhIHN1YnN0YW50aWFsIHNhbGFyeSB3aXRoIG15IG93biBvZmZpY2UgZm9yIHRoZSBzYW1lIGNvbXBhbnkuIApUaGlzIHdhcyB0aGUgU2FicmVzIGZpcnN0IHByb3ZpbmNpYWwgdmljdG9yeSBzaW5jZSAxOTkyIGEgd2luIHRoYXQgaGFzIGl0cyBvd24gc3RvcnkuLiAKSSB0aGluayBpdCB3YXMgYSBzaXR1YXRpb24gd2hlcmUgdGhlcmUgbm90IG11Y2ggZWxzZSBJIGNvdWxkIGhhdmUgZG9uZSwgS2hhaXQgdG9sZCBQb3N0bWVkaWEgTmV0d29yayBmb2xsb3dpbmcgaGVyIHBvc3Qgc3dhcCBlbGltaW5hdGlvbiBlcGlzb2RlIHRoaXMgd2Vlay4gClNoZSBvdmVyIDEwIG1vbnRocyBub3cgYW5kIGEgc3VwZXIgaGVhbHRoeSB3ZWlnaHQsIHZlcnkgaGFwcHksIGFuZCB3ZSBoYXZlIGFuIGF3ZXNvbWUgYm9uZC4gU29tZSBob3NwaXRhbCBkaXJlY3RpdmVzIHRoYXQgYXJlIG1lYW50IHRvIGhlbHAgYmFieSBvZnRlbiBkb24gZmFjdG9yIGluIG1vbS4gCk1lbiBwcm90ZWN0IHdvbWVuIGFuZCBjaGlsZHJlbjsgZmVtaW5pbmUgb25lcyBkcmVzcyB3b21lbiBhbmQgY2hpbGRyZW4gaW4gZmFidWxvdXMgb3V0Zml0cy4gClNlZW4gb24gc3RhZ2UgYXJlIChsZWZ0IHRvIHJpZ2h0KSBDaGVsZW5lIEtuaWdodCwgR3dlbiBCZW5hd2F5LCBKaWxsaWFuIENocmlzdG1hcywgU2lsdmlhIE1vcmVubyBHYXJjaWEgYW5kIElqZW9tYSBPbHVvLiBUaGlzIHllYXIncyBmZXN0aXZhbCBydW5zIE1hcmNoIDggMTcuIChQaG90bzogSm95IEd5YW1maSlhdCB0aGUgdHJhZGl0aW9uYWwgd2F5IG9mIHdvcmRzIG9uIHRoZSBwYWdlIGFuZCBob3cgd2UgYXJlIHNsb3dseSBldm9sdmluZyBmcm9tIHRoYXQuIFNvIHRoZXJlIGlzIG9yYWwgc3Rvcnl0ZWxsaW5nLiAKIkFueW9uZSAgY2FuIGxvZyBvbiB0byBhIHNpdGUgYmFzZWQgb3ZlcnNlYXMsIGRlcG9zaXQgbW9uZXksIGFuZCB0aGV5IGNhbiBzdGFydCBwbGF5aW5nIHBva2VyLCIgUGFwcGFzIHNhaWQuICJUaGV5IGp1c3QgY2FuJ3QgZG8gc28gb24gYSBzaXRlIHRoYXQncyBsaWNlbnNlZCBhbmQgcmVndWxhdGVkIGJ5IHRoZSBzdGF0ZS4iClRoZSBSZWlraSBhdHR1bmVtZW50IHByb2Nlc3MgdGFrZXMgcGxhY2VzIGluIGEgY2VyZW1vbnkgZHVyaW5nIHdoaWNoIGEgUmVpa2kgTWFzdGVyIGluaXRpYXRlcyB0aGUgc3R1ZGVudCBpbnRvIHRoZSB1c2Ugb2YgdGhlIHN5bWJvbHMuIFRoZSBiZWxpZWYgaXMgdGhhdCB0aGUgUmVpa2kgTWFzdGVyIGNyZWF0ZXMgYW4gZW5lcmd5IHBhdHRlcm4gd2hpY2ggZW5hYmxlcyB0aGUgc3R1ZGVudCB0byBub3Qgb25seSByZWNlaXZlIHRoZSBlbmVyZ3kgcmVwcmVzZW50ZWQgYnkgdGhlIHN5bWJvbHMgYnV0IHRvIGJlIGFibGUgdG8gdHJhbnNtaXQgdGhlIFJlaWtpIGVuZXJneSB1bnRvIG90aGVycy4KSGVyIHRocmVlIHBhZ2UgbGV0dGVyIGNpdGVzIHN0dWR5IGFmdGVyIHN0dWR5IHN1cHBvcnRpbmcgdHJhZGl0aW9uYWwgZnVsbCB5ZWFyIGNsYXNzZXMuIApCZW5qYW1pbmJlbjk4NiB1CkFzVmFyYWhhIFlvdSBsaWZ0IHRoZSBlYXJ0aCB3aXRoIFlvdXIgdHVzaywgYW5kIGluIHRoZSBmb3JtIG9mIE5hcmFzaW1oYSBZb3UgdGVhciBvcGVuIHRoZSBjaGVzdCBvZiB0aGVkYWl0eWEgSGlyYW55YWthc2lwdS4gSW4gdGhlIGZvcm0gb2YgVmFtYW5hIFlvdSB0cmljayB0aGUgZGFpdHlhIGtpbmcgQmFsaSBieSBhc2tpbmcgaGltIGZvciBvbmx5IHRocmVlIHN0ZXBzb2YgbGFuZCwgYW5kIHRoZW4gWW91IHRha2UgYXdheSB0aGUgd2hvbGUgdW5pdmVyc2UgZnJvbSBoaW0gYnkgZXhwYW5kaW5nIFlvdXIgc3RlcHMuIApTY2hvb2xzIGhlbHAgeW91IHBhc3MgdGhlIFBBTkNFLCBidXQgaW4gYWxsIGhvbmVzdHkgaXQgY29tZXMgZG93biB0byB5b3UgbGVhcm5pbmcgZXZlcnl0aGluZyB5b3Vyc2VsZiBhbmQgZ28gdG8gc3RhZmYgd2l0aCBhbnkgcXVlc3Rpb25zLiBZb3UgZGV0ZXJtaW5lIHdoZXRoZXIgeW91IHBhc3MsIG5vdCB0aGUgc2Nob29sIChidXQgbGlrZSBJIHNhaWQgdGhlIHNjaG9vbCBoZWxwcykuClByYWN0aXRpb25lcnMgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gbWVldCB0aGUgZWR1Y2F0aW9uIHJlcXVpcmVtZW50IHRocm91Z2ggYSBncmFuZGZhdGhlcmVkIGNsYXVzZSB0aGF0IHJlcXVpcmVzIGluc3RydWN0aW9uIGluIGEgU3RhdGUgYXBwcm92ZWQgcHJvZ3JhbS4gVGhlcmUncyBub3QgbXVjaCB0aW1lIGluIHdoaWNoIHRvIGRvIHRoaXMuIFRoZSBob3VycyBuZWVkIHRvIGJlIGFjaGlldmVkIGJlZm9yZSBBdWd1c3QgMzFzdC4KQUdDcm9zcyAgNiBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ28KQmVzdCBQbGFjZXMgdG8gV29yayAyMDE3ClRoZSBhdmVyYWdlIGlzIHJlcHJlc2VudGVkIGJ5IGEgc2NvcmUgb2YgMTAwLCBhbmQgdGhlIHRvdGFsIGluZGV4IHJhbmdlIGlzIGZyb20gMCB0aHJvdWdoIDIwMC4gCkl0IGRpcmVjdGx5IGF0IG9kZHMgd2l0aCB0aGUgY29uZGl0aW9ucyBjaXR5IGNvdW5jaWwgc2V0IGZvdXIgeWVhcnMgYWdvLCBlYXJsaWVyIGluIHRoaXMgc2FtZSBwcm9jZXNzLiAKVG8gdGhlIG1vZCAvIG1vZGVyYXRvcnMgd2hvIGJhbm5lZCBtZSwgSSBzdGlsbCBoYXZlIG5vIGlkZWEgd2hvIHlvdSBhcmUuIFNlcmlvdXNseS4gSSBoYXZlIG5vIGNsdWUgd2hpY2ggb25lIG9mIHlvdSBpIGhhdmUgdXBzZXQgd2l0aCBhIGxvdyBlZmZvcnQgc2hpdHBvc3QsIG9yIGhvdyB5b3UganVzdGlmeSB0aGUgbG9naWMgaW4gZmxleGluZyB5b3VyIHBvd2VycyB0byBiYW4gbWUuIApJZiB5b3UncmUgc3RpbGwgZmlnaHRpbmcgcHVmZnkgcGxhbmUgZmFjZSBhZnRlciB0aGUgZGVlcCBjbGVhbnNlLCBVcHBlciBFYXN0IFNpZGUgbWVkaWNhbCBhZXN0aGV0aWNpYW4gQ3ludGhpYSBSaXZhcyBzdWdnZXN0cyBhIHNlbGYgbWFzc2FnZS4gCkFub3RoZXIgZmFjdCBpcyB0aGF0IHRoZSB0cmFkaXRpb25hbCBwb2tlciByb29tcyBhcmUgbm90IHJlYWxseSBtdWNoIGluIGZhdm9yIG9mIG9mZmVyaW5nIHBva2VyIGdhbWluZyBhcyBpdCBkb2VzIG5vdCBiZW5lZml0IHRoZW4gb3IgZmV0Y2ggdGhlIHNhbWUgYW1vdW50IG9mIHByb2ZpdHMgbGlrZSB0aGUgb3RoZXIgZ2FtZXMgZG8uIEluIHRoZSBjYXNlIG9mIG9ubGluZSBnYW1pbmcsIHRoZSBhaW0gaXMgdG8gcHJvdmlkZSBhIGdvb2QgZ2FtaW5nIGV4cGVyaWVuY2UgdG8gdGhlIHBsYXllcnMgcmF0aGVyIHRoYW4gdGhlIGNvbnZlbnRpb25hbCBvYmplY3RpdmUgb2YgcHJvZml0IG1heGltaXphdGlvbi4gVGhlIHRpbWUgY2hhcmdlIGFzIGNoYXJnZWQgYnkgdGhlIHRyYWRpdGlvbmFsIHBva2VyIHJvb21zIGFyZSBvZnRlbiB2ZXJ5IGhpZ2hseSBxdW90ZWQuIFN1Y2ggaGlnaCByYWtlcyBhcmUgZmFyIGJleW9uZCB0aGUgcmVhY2ggb2YgYSBjb21tb24gbWFuLiBUaGlzIGlzIGp1c3Qgbm90IGl0LCBUaGUgb3Bwb3J0dW5pdHkgY29zdHMgaW5jdXJyZWQgd2l0aCByZXNwZWN0IHRvIGEgdHJhZGl0aW9uYWwgcG9rZXIgcm9vbSBhcmUgaW4gZmFjdCBtdWNoIGhpZ2hlciB0aGFuIGV2ZW4gdGhlIGFscmVhZHkgdmVyeSBoaWdoIHJha2VzLiBUaGUgdHJhZGl0aW9uYWwgZ2FtaW5nIHJvb21zIGhhdmUgZGV2aXNlZCBhIG5ldyB3YXkgb2YgcHJvZml0IG1heGltaXphdGlvbiB3aGljaCBpcyB0byByZW1vdmUgYWxsIHRoZSBwb2tlciByb29tcyBhbmQgaW4gc3RlYWQgb2YgdGhlbSBnbyBvbiB0byBhZGQgbW9yZSBhbmQgbW9yZSBzbG90IG1hY2hpbmVzIHdoaWNoIGFyZSB1bHRpbWF0ZWx5IGxpa2VseSB0byB5aWVsZCBtb3JlIHByb2ZpdCB0aGFuIHBva2VyIHJvb21zIGRvLgpPbiBhIGxvbmcgaGF1bCBmbGlnaHQsIGhlIGFuZCBhIGNsaWVudCAod2hvIGhlIHNheXMgaGFkIGEgImJhZGFzcyIgcmVwdXRhdGlvbikgd2VyZSBzZWF0ZWQgbmV4dCB0byBlYWNoIG90aGVyLiBUaGUgY2xpZW50IGdvdCBhIHNlcmlvdXMgYm91dCBvZiB0aGUgaGljY3VwcywgYW5kIFNwcmlnZ3MgaGVscGVkIGRvbGUgb3V0IHNvbWUgb2xkIHN0eWxlIHJlbWVkaWVzLiBBdCB0aGUgZW5kIG9mIHRoZSBkYXksIGl0IGxldmVsZWQgdGhlIHBsYXlpbmcgZmllbGQgYSBsaXR0bGUgYml0Li4gClBvbGl0aWNhbCBhbmFseXN0IEpvbmF0aGFuIENoYWl0IGhhcyBjaGFyYWN0ZXJpc2VkIE9iYW1hJ3MgbmVnb3RpYXRpbmcgc3R5bGUgYnkgYSBkaXNtaXNzaXZlIHRlcm0gZnJvbSBwb2tlcjogIlRpZ2h0IHdlYWsuIFRoZSB3b3JzdCBvZiBhbGwgd29ybGRzICAgd2hlbiB5b3UgaGF2ZSBhIHdlYWsgaGFuZCwgeW91IGxvc2UsIGFuZCB3aGVuIHlvdSBoYXZlIGEgc3Ryb25nIGhhbmQgeW91IGZhaWwgdG8gbWF4aW1pc2UgeW91ciBwb3NpdGlvbi4iQ2hhaXQgY2xhaW1zIHRoYXQgZHVyaW5nIHRoZSBmaXNjYWwgbmVnb3RpYXRpb25zIE9iYW1hIG5lZWRsZXNzbHkgc3F1YW5kZXJlZCB0aGUgZ2FpbnMgaGUgaGFkIGFtYXNzZWQgZnJvbSBoaXMgcmUgZWxlY3Rpb24uLiAKU2xvd2x5LCBJIHNwZW50IG1vcmUgYW5kIG1vcmUgdGltZSBzdHVkeWluZy9wbGF5aW5nIHBva2VyIGFuZCBub3Qgc3R1ZHlpbmcgZm9yIHNjaG9vbC4gCkxlYXJuaW5nIHRvIHBsYXkgcG9rZXIgaXMgbm90IGFzIGRpZmZpY3VsdCBhcyBpdCBzZWVtcyBidXQgaXQgZG9lcyB0YWtlIGEgbG90IG9mIHByYWN0aWNlIGlmIG9uZSB3YW50cyB0byBiZWNvbWUgYSBwcm8uIFRoZXJlIGFyZSBzb21lIGdvb2Qgc2l0ZXMgdGhhdCB5b3UgbWF5IHdhbnQgdG8gY2hlY2sgb3V0IGZvciBkZXRhaWxlZCBpbmZvcm1hdGlvbiBzaW5jZSB0aGUgc3BhY2UgYWxsb3dlZCB3b3VsZCBub3QgYmUgZW5vdWdoIHRvIGRpc2N1c3MgYWxsIHRoZSBydWxlcy4gT25lIG9mIHRoZSBzaXRlIHRoYXQgY29tZXMgdG8gbWluZCBpcyAncG9rZXIgbGlzdGluZycgeW91IG1heSB3YW50IHRvIGNoZWNrIGl0IG91dC4gKEZ1bGwgQW5zd2VyKQpJIGRvbiB0aGluayB0aGF0IGF1dG9tYXRpY2FsbHkgbWFrZXMgeW91IG9yIGFueW9uZSBsaWtlIHlvdSBhIG1vbnN0ZXIgb3IgYSBtaXNvZ3luaXN0IG9yIGEgcmFwZSBhcG9sb2dpc3QsIHRob3VnaCBJIGRvIHRoaW5rIHRoYXQgdGhlcmUgYXJlIHBvbGl0aWNhbCBhbmQgc29jaWFsIHVuZGVyY3VycmVudHMgdG8gdGhlIHN0b3J5IHdlIGdldCBpbiBTaGllbGQgSGVybyBFcC4gCkZvcm1lciBwb2tpZXMgYWRkaWN0IFNob25pY2EgR3V5IGFuZCBwcm9taW5lbnQgbGF3IGZpcm0gTWF1cmljZSBCbGFja2J1cm4sIHJlcHJlc2VudGluZyBoZXIgcHJvIGJvbm8sIGhhdmUgbGF1bmNoZWQgdGhlIGxhbmRtYXJrIGFjdGlvbiBhbGxlZ2luZyBEb2xwaGluIFRyZWFzdXJlIGlzICJtaXNsZWFkaW5nIGFuZCBkZWNlcHRpdmUiLCB2aW9sYXRlcyBjb25zdW1lciBsYXcsIGFuZCBlbXBsb3lzIHRyaWNrcyBkZXNpZ25lZCB0byAiZmVlZCBhZGRpY3Rpb24iLgpDYW4gd2UgdGVsbCB0aGUgc3Rvcnkgb2YgdGhlIG5laWdoYm91cmhvb2RzIHRoYXQgd2UgaGF2ZT8gTW9ycmlzIHNhaWQgb2YgaGVyIGtlZW4gaW50ZXJlc3QgaW4gZmluZGluZyB2b2x1bnRlZXIgZ3VpZGVzIGluIHNvdXRoIGFuZCBlYXN0IFdpbmRzb3IsIHRoZSBzdWJ1cmJzIGFuZCB0aGUgY291bnR5LiAKSGVuY2UgaXQgaXMgbm90IGNvbnNpZGVyZWQgbGVnYWwgaW4gdGhlIHN0YXRlLiAKSG93ZXZlciwgZm9yIGFueW9uZSB3aXRoIGEgc29yZSBiYWNrIGZyb20gYW4gb3V0ZG9vciBhY3Rpdml0eSwgdGhpcyBpcyBhIGdyZWF0IG9wdGlvbiB3aGlsZSBzaXR0aW5nIG9uIHRoZSBkZWNrIGluIGEgbG91bmdlIGNoYWlyLiAKVGhpcyBpcyB3aGF0IGZ1Y2tpbmcgZ2V0cyBtZS4gQm9vdGxpY2tlcnMgd2lsbCBtYWtlIGV2ZXJ5IGZ1Y2tpbmcgZXhjdXNlIGZvciBjb3BzLCBsaWtlIHRoZXkgY2FuIGRvIG5vIHdyb25nLiBUaGV5IHBvaW50IG91dCBob3cgbXVjaCBjb3BzIGRvIGZvciB1cyBhbmQgdGhhdCBzb2NpZXR5IHdpbGwgY3J1bWJsZSAocmVhZDogaXQgYWxyZWFkeSBpcykuCldlJ3ZlIGdvdCBwaG90b2dyYXBoeSwgc25hcmssIHF1aXp6ZXMsIHNuYXJrLCBodW1vdXIsIHNuYXJrLCBhbmQgdmlkZW9zICh3aXRoIGFkZGVkIHNuYXJrKS4gV2UgZXZlbiBoYXZlIHdyaXRpbmcgYWR2aWNlIG9uIGhvdyB0byBkbyBzbmFyay5Db250cmlidXRvcnMgaGF2ZSBhY2NlcHRlZCBjaGFsbGVuZ2VzIGxpa2UgeW91IHdvdWxkbid0IGJlbGlldmUuIFdlbGwsIG1heWJlIHlvdSB3b3VsZCwgYnV0IHRoZW4gd2Ugd29ycnkgYWJvdXQgd2hhdCB5b3UgZG8gaW4geW91ciBmcmVlIHRpbWUuIApFaXRoZXIgd2F5LCBhIGxpdHRsZSBjb252b2x1dGVkLi4gClRoYXRBdXRpc3RpY1dvbWFuICAyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KQnV0IHlvdSBoYXZlIHN1Z2dlc3RlZCBpdCB3YXMgdGhlIHRydWNrcyBmYXVsdCwgdGhhdCBsb2FkcyBjb3VsZCBiZSBzcGxpdCBhbmQgc21hbGxlciB2ZWhpY2xlcyB1c2VkLiBEaWZmZXJlbnQgcm91dGUgbWF5YmU/IFRoZSBmYWN0IGlzIG5vbiBvZiB0aGF0IG1hdHRlcnMuIApHcmlmbyBwbGFjZWQgUm9iYmlucyBvbiBhIHllYXIgb2YgcHJvYmF0aW9uIGFuZCBmaW5lZCBoZXIgJDc1MC4gClRoZSBSUlNQIHN0cmF0ZWdpZXMgZXZlcnkgaW52ZXN0b3IgaW4gdGhlaXIgNjBzIHNob3VsZCBrbm93TWlsbGVubmlhbHMgYnJlYWtpbmcgaW52ZXN0aW5nIHN0ZXJlb3R5cGVzIHdpdGggY29uc2VydmF0aXZlIGFwcHJvYWNoZXMgdG8gUlJTUHNUaHJlZSByZWFzb25zIHdoeSBSUlNQcyBzdGlsbCBtYXR0ZXIgICBhbmQgb25lIG9mIHRoZW0geW91IHByb2JhYmx5IGRpZG4ndCBrbm93T2xkIG9yIG5ldz8KQW5kIENsYXIgLiBNci4gVGhlcmUgcydubyBnbG9yeSBsaWtlIHRvIHRoaXMsIHRuZWljIHMgX2YsIHNucG50IFR3byBUYXZlcm5zOyBNci4gCkkgbmVlZCB0byBrbm93IHdoYXQgYWN0aXZpdGllcyB0aGlzIHBhaW4gYWZmZWN0cyBzbyB3ZSBjYW4gYmlsbCB5b3VyIGluc3VyYW5jZSBmb3IgdGhlIG1hc3NhZ2UuIiBJIHVzdWFsbHkganVzdCBnaXZlIHRoZW0gYSBoaW50IG9mIHNvbWV0aGluZyB0byBrZWVwIHRoaW5raW5nIGFib3V0LCBhbmQgYmV0d2VlbiB0aGF0IGFuZCBnZXR0aW5nIHVzZWQgdG8gdGhlIHJoeXRobSBvZiBteSBxdWVzdGlvbnMgKGVnIHRoZSAybmQgdGltZSB0aGV5IGhlYXIgImRlc2NyaWJlIHRoYXQgc2Vuc2F0aW9uIHdpdGggd29yZHMgb3RoZXIgdGhhbiBvciB0aGV5IGRvIGEgbG90IGJldHRlci4gCkFuZCBtYWtlIGV5ZSBjb250YWN0LCB5b3UgcmVtZW1iZXIgdG8gc2F5ICJpdCdzIG9ubHkgZ2F5IGlmIGJhbGxzIHRvdWNoIGFmdGVyIGNyb3NzaW5nIHN3b3JkcyBjYXJkcyIuIApZZXAsIHNvdW5kcyBleGFjdGx5IGxpa2UgdGhhdCB0byBtZSwgdG9vLiBUaG91Z2ggaWYgc28sIEkgaG9wZSB0aGUgTEFPUCB0YWxrcyB0byB0aGVpciBzcG9uc29yIGFib3V0IHRoaXMgKGFuZCB0aGF0IHRoZXkgaGF2ZSBhIGdvb2Qgc3BvbnNvcikuIE1ha2luZyBhbWVuZHMgYW5kIHRha2luZyByZXNwb25zaWJpbGl0eSBkb2VzbiBuZWNlc3NhcmlseSBtZWFuIGFza2luZyBmb3IgYSBoYXJzaGVyIHB1bmlzaG1lbnQsIGFzIHRoZSBMQU9QIHN1Z2dlc3RlZCB0aGV5IHdhbnRlZCB0byBkby4gCkFzIHJlcG9ydGVkIGluIHRoZSBXaW5kc29yIFN0YXIgZWRpdGlvbiBvZiB0aGUgTmF0aW9uYWwgUG9zdCBvbiBGZWIuIDUsIGEgQ2FuYWRpYW4gZGVsZWdhdGlvbiB3aGljaCBvYnNlcnZlZCB0aGUgZWxlY3Rpb24gdG91dGVkIFZlbmV6dWVsYSBhbmQgdmlicmFudCBkZW1vY3JhY3kuIApIb3dldmVyLCB0byBtYWtlIGl0IGVhc2llc3Qgb24geW91cnNlbGYgYW5kIHlvdXIgcGxheWVycywgSSBzdWdnZXN0IGtlZXBpbmcgdG8gYSBwcmV0dHkgc2ltcGxlIGZvcm11bGEuIApCdXQgT2JhbWEgbmVlZHMgdG8gc2FjcmlmaWNlIEJlcm5hbmtlIGFzIGEgc3ltYm9sIG9mIHRoZSBCdXNoIHNjcmV3IHRoZSBhdmVyYWdlIHBlb3BsZSBwb2xpY2llcy4gV2l0aCBPYmFtYSBlc2NhbGF0aW9uIG9mIHRoZSB3YXIgaW4gQWZnaGFuaXN0YW4sIGhlIGNvdWxkIG1ha2UgdGhlIHN5bWJvbGljIG1vdmUgb2Ygc2lkaW5nIHdpdGggdGhlIHBlb3BsZSBhbmQgbm90IHRoZSBiYW5rcyBpbiB0aGUgY2xhc3Mgd2FycyBhdCBob21lLgpNIHByZXZpb3VzbHkgYWlyZWQgYSBjb21tZXJjaWFsIGluIHRoZSAyMDE0IGdhbWUgc3RhcnJpbmcgWWVsbG93IE0gSW4gaXRzIDIwMTMgY29tbWVyY2lhbCwgIkxvdmUgQmFsbGFkLCIgUmVkIHByb2Zlc3NlZCBoaXMgbG92ZSB3aXRoIGEgcm9tYW50aWMgc2VyZW5hZGUuIEFuZCAiSnVzdCBNeSBTaGVsbCIgaW4gMjAxMiBpbnRyb2R1Y2VkIFdpbGxpYW1zIGFzIHRoZSB2b2ljZSBvZiBCcm93biBNIHJlY2VudCB5ZWFycywgTWFycyBoYXMgdXNlZCB0aGUgU3VwZXIgQm93bCB0byBwcm9tb3RlIGl0cyBvdGhlciBicmFuZHMsIFNuaWNrZXJzIGFuZCBTa2l0dGxlcy4gCkkgdGhpbmsgTEEgd291bGQgcHJvYmFibHkgYmUgdGhlIGJlc3QgcGxhY2UgdG8gZ28gc3BlY2lmaWNhbGx5IGZvciBhICQ1IGJpZyBibGluZCwgYW5kIEkgd2FudCB0byBwbGFuIGEgbWluaSB0cmlwIHRoZXJlIHRvIHRlc3QgdGhvc2Ugd2F0ZXJzLi4gCkFoLCB0aGUgbW9tZW50IHdoZW4gdGhhdCBoYXJkIHJlYWxpdHkgZmluYWxseSBoaXRzIGEgcGFyZW50LiAKIkkgaG9wZSB3aGVuIHlvdSB0cnkgdG8gZG8gaGltLCB5b3UgZ2V0IHByZWduYW50IGFuZCBoYXZlIHRvIGZhY2UgaGltIGxlYXZpbmcgeW91LiBUaGVuLCBJIGhvcGUgeW91IHN1ZmZlciB0aGUgdHJhdW1hIG9mIGEgbWlzY2FycmlhZ2UgYW5kIGhhdmUgbm8gY2hvaWNlIGJ1dCB0byByZXNvcnQgdG8ga2lsbGluZyB5b3Vyc2VsZi4gSSBkb24gdGhpbmsgeW91IGRlc2VydmUgdGhpcyBoYXBwaW5lc3MgZm9yIHdoYXQgeW91IGRpZC4gClNvIGluIGEgbnV0IHNoZWxsLCB0aGV5IGRlY2lkZWQgdG8gdXNlIGNoZWFwZXIgbGFib3IgdG8gZ2V0IHRoZSB0ZXN0IG1hcmtlZC4gVG8ganVzdGlmeSB0aGVpciBhY3Rpb25zIHRoZXkgcGFuZGVyIGl0IGl0IG9mZiBhcyBkaXZlcnNpdHk/IGdpdmUgbWUgYSBicmVhay4gdGhpcyBpcyBhbGwgYWJvdXQgbG93ZXJpbmcgY29zdC4gTm90IGRpdmVyc2l0eSB3aGF0IHNvIGV2ZXIuCklmIGl0IGNvbWVzIHRvIHRoYXQgdGFrZSB0aGUgcmlzayBvZiBlbWVyZ2VuY3kgc2hlbHRlci4gSWYgdGhleSBhcmUgZmlyc3QgY29tZSBmaXJzdCBzZXJ2ZSBqdXN0IHNob3cgdXAgZWFybHkuIApTb21lb25lIHdpdGggZGVtZW50aWEgb3IgQWx6aGVpbWVyJ3MgbWF5IGJlIGNvbXBsZXRlbHkgaGVscGxlc3MgYXQgdGltZXMgeWV0IGZ1bGx5IGNvZ25pemFudCBhdCBvdGhlciB0aW1lcy4gCldoZXJlYXMgd2UgZ3VhcmFudGVlIHRoZSByZWxpYWJpbGl0eSBvZiBvdXIgcmVjb21tZW5kYXRpb25zLCB3ZSB3b3VsZCBhbHNvIGxpa2UgeW91IGFzIGEgcGxheWVyIHRvIGJlIGFibGUgdG8gZXZhbHVhdGUgQXVzdHJhbGlhbiBvbmxpbmUgY2FzaW5vcy4gCllldCwgYXJlbiBCZXJuaWUgc3VwcG9ydGVycyBqdXN0IGEgbmFpdmUgYW5kIGd1bGxpYmxlPyBXaHkgZG8gd2UgbW9jayBUcnVtcCBzdXBwb3J0ZXJzLCB5ZXQgZmFpbCB0byBsb29rIGF0IG91cnNlbHZlcyBpbiB0aGUgbWlycm9yPy4gCkNvbXBldGl0aXZlIHJ1bm5lcnMgYXJlIHN0aWxsIGNvbXBldGl0aXZlLCBhbmQgaXQgbm90IGFsbCB0aGF0IGhhcmQgZm9yIHRoZW0gdG8gZmluZCB3aGF0IHRoZXkgbG9va2luZyBmb3IsIGJ1dCB0aGV5IGNhbiBleHBlY3QgZXZlcnkgbG9jYWwgZmFzdCBndXkgdG8gc2hvdyB1cCBhdCBldmVyeSBsb2NhbCA1ayB3aGVuIHRoZXJlIGFyZSBoYWxmIGEgZG96ZW4gcmFjZXMgd2l0aGluIGRyaXZpbmcgZGlzdGFuY2UgZXZlcnkgd2VlayBvZiB0aGUgeWVhci4gCkkgd2FzIHJhcGVkIGFuZCBzb2RvbWl6ZWQgYXQgMTggYnkgYSBzYWlsb3IgaW4gdGhlIE5hdnkuIEkndmUgaGFkIGxhc3RpbmcgZWZmZWN0cywgYm90aCBwc3ljaG9sb2dpY2FsIGFuZCBwaHlzaWNhbCwgYW5kIEkgZGlkbid0IGRlYWwgd2l0aCB0aGVtIGZvciBtYW55IHllYXJzLiBJIHdhcyBhd2FyZSBvZiBob3cgdGhlIG1pbGl0YXJ5IHRyZWF0ZWQgcmFwZSB2aWN0aW1zIHdpdGhpbiB0aGVpciBvd24gcmFua3MsIGFuZCBJIHdhcyBhZnJhaWQgdGhhdCByZXBvcnRpbmcgd291bGQgZGVzdHJveSBteXNlbGYgb3IgbXkgZmFtaWx5IChteSBtb3RoZXIgd2FzIGluIHRoZSBtaWRkbGUgb2YgY2FuY2VyIHRyZWF0bWVudHMgYW5kIEkgZGlkbid0IHdhbnQgdG8gcHV0IGFueSB1bmR1ZSBzdHJlc3Mgb24gaGVyKS4gClNpbGljb24gaXMgYSBjcnlzdGFsbGluZSBzZW1pY29uZHVjdG9yICwgbm90IGFuIGluc3VsYXRvci4gQnkgYWRkaW5nIGltcHVyaXRpZXMgY2FsbGVkIGRvcGFudHMgaXQgY2FuIGJlIG1hZGUgcmVzaXN0aXZlLCBjb25kdWN0aXZlLCBvciBpbnRvIGFjdGl2ZSBkZXZpY2VzIGxpa2UgdHJhbnNpc3RvcnMuIEJ5IG94aWRpemluZyBvciBuaXRyaWRpbmcgaXQgaXQgY2FuIGJlIG1hZGUgaW50byBhbiBpbnN1bGF0b3IuIApESVkgTmF0dXJrb3NtZXRpawpBdWd1c3QgM3JkLCBEb3dudG93biwgNDozMCBwbQpUaGUgRnJhZyBsYXVuY2hlciB3aGVuIGNvbXBhcmVkIHRvIHRoZSBQSUFUIGFuZCBQYW56ZXJmYXVzdCBvbmx5IGhhcyBhIHNvbWV3aGF0IGxhcmdlciBhbnRpIGluZmFudHJ5IHNwbGFzaCBkYW1hZ2UgaW5jcmVhc2UuIFRoYXQgaXQuIE90aGVyIHRoYW4gdGhhdCwgdGhlIG90aGVyIGxhdW5jaGVycyBhcmUgdmFzdGx5IHN1cGVyaW9yLiBDYW4gZGFtYWdlIHZlaGljbGVzIGZhciBiZXR0ZXIsIHRoZXkgYXJlIGZhc3RlciB0byBsb2FkLCB0aGV5IGhhdmUgYW4gaW5jcmVhc2VkIHJhbmdlLCBhbmQgY2FuIGRlc3Ryb3kgZm9ydGlmaWNhdGlvbnMuCkEgZ3JlYXQgcHJvZ3JhbS4gCldoaWxlIHRoZXkgYWRkcmVzc2luZyB0aGlzIHdpdGggYnJpbmdpbmcgaW4gR20gY2FzdGVycyAoVG9kLCBReEMsIE5hdGhhbmlhcyBldGMuKSwgSXQgbWFraW5nIGl0IGEgbG90IGhhcmRlciBmb3IgbmV3ZXIgcGxheWVycyB0byB1bmRlcnN0YW5kIG9yIGZvbGxvdyB3aGF0IGhhcHBlbmluZy4gCkhlIG9uY2UgZGVuaWVkIGV2ZXIgcGxheWluZyBpbiB0aGUgZ2FtZS4gCj4gQW5kIHNvLCB0aGF0IGlzIHdoZXJlIHRoZSBtb25leSBjYW1lIGZyb20uIApZZWFoLCBpdCdzIGEgdmVyeSBkaWZmaWN1bHQgdG9waWMuIEl0IHNvdW5kcyBjb3VudGVyIGludHVpdGl2ZSBidXQgdGhlIGJ1bGxmaWdodGluZyBicmVlZCBvZiBjYXR0bGUgYWN0dWFsbHkgbGl2ZXMgb25lIG9mIHRoZSBtb3N0ICJmcmVlIGluIHRoZSB3aWxkIiBraW5kIG9mIGxpZmUuIApXaGVuIHRyYWRpbmcgZW5kZWQsIHdlIHN5c3RlbWF0aWNhbGx5IGNvbXBhcmVkIGVhY2ggdHJhZGVyJ3MgYW5hbHl0aWNhbCBza2lsbHMgYW5kIHN0cmF0ZWdpYyBpbnRlbGxpZ2VuY2UsIG1lYXN1cmVkIGJlZm9yZSB0cmFkaW5nLCB3aXRoIHRoZWlyIGV2ZW50dWFsIGVhcm5pbmdzLiBBIGNsZWFyIHBhdHRlcm4gZW1lcmdlZDogRGVzcGl0ZSBpbnRlbnNlIGNvbXBldGl0aW9uLCBzb21lIHRyYWRlcnMgdG9vayBob21lIG11Y2ggbW9yZSB0aGFuIG90aGVycy4gClRoZSBraXNzIG9uIHRoZSBuZWNrIHRoYXQgbWFkZSB5b3UgaW5zdGFudGx5IGhvcm55IG5vdyBmZWVscyB3YXJtbHkgYWZmZWN0aW9uYXRlLiAKQ2FtZXJvbiBMb3ZlcG9zdGVkIDkgeWVhcnMgYWdvClBldGVyIHdhcyB0aGUgbmljZXN0IGd1eSBhbW9uZyB0aGUgZ3V5cyBhdCBIZW5uaW5nZXJzIGFuZCBlbm9ybW91c2x5IGtpbmQgYW5kIGNhcmluZyBhbmQgaW5mbHVlbmNlIG15IGxhdGVyIGxpZmUgICB0byBiZSBvcGVuIHRvIGZvcmVpZ25lcnMuLiAKV2hpbGUgc29tZXdoYXQgcGhvdG9zaG9wcGVkLCB0aGUgcGljcyB0ZW5kIHRvIGJlIGFjY3VyYXRlIGFuZCB0aGUgZ2lybHMgaW4gdGhvc2UgZXN0YWJsaXNobWVudHMgdGVuZCB0byBiZSBtdWNoIHlvdW5nZXIgYW5kIG1vcmUgYmVhdXRpZnVsIHRoYW4gdGhlIGF2ZXJhZ2UgZXhwZXJpZW5jZSBJZiB5b3Ugc3BlbmQgYW55IHRpbWUgYnJvd3NpbmcgdGhlIGdpcmxzIG9uIFRoYWkgTWFzc2FnZSBNb2RlbCwgeW91IHdpbGwgYmUgc29yZWx5IHRlbXB0ZWQgdG8gcGF5IHRoZSBwbGFjZXMgbGlzdGVkIHRoZXJlIGEgdmlzaXQuIApHaXZpbmcgYW4gYW5zd2VyIHRvIHRoaXMgcXVlc3Rpb24gaXMgc3ViamVjdGl2ZSBidXQgdGhleSBhcmUgcGxheWluZyBnb29kLiBJbiB0aGUgc3VtbWVyIDIwMDUsIHRoZSBvbmxpbmUgcG9rZXIgcm9vbSBHb2xkZW4gUGFsYWNlIGhvc3RlZCBhIHByb21vdGlvbmFsIHRvdXJuYW1lbnQgaW4gTGFzIFZlZ2FzLCBhdCB0aGUgb2xkIEJpbmlvbnMsIHdpdGggYSAkMTAwayBnaXZlYXdheSBwcml6ZS4gSXQgd2FzIGJpbGxlZCBhcyB0aGUgMjAwNSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgUm9ib3RzLiAKWW91IHdlcmUgc28gZnVsbCBvZiBsaWZlIGFuZCBlbmVyZ3kgc29tZXRpbWVzIGFuZCB5b3UgYWx3YXlzIGZvdW5kIHNvbWUga2luZGEgbWlzY2hpZXZvdXMgd2F5IG9mIG1ha2luZyB1cyBsYXVnaC4gClRoZSBJc2xhbWljIFN0YXRlIGdyb3VwIGNsYWltZWQgcmVzcG9uc2liaWxpdHksIHdpdGhvdXQgb2ZmZXJpbmcgZXZpZGVuY2UsIGJ1dCBBYXJvbiBSb3VzZSwgdGhlIEZCSSBhZ2VudCBpbiBjaGFyZ2UgaW4gTGFzIFZlZ2FzLCBzYWlkIGludmVzdGlnYXRvcnMgc2F3IG5vIGNvbm5lY3Rpb24gdG8gaW50ZXJuYXRpb25hbCB0ZXJyb3Jpc20uCkRhbW4geW91IG5haWxlZCBpdC4gCkFGQUlLIGhlIGhhcyBubyBkZWJ0cyBvciBiaWxscyB0aGF0IHdlIGFyZSBhd2FyZSBvZi4gClRoZXJlIGlzIGFub3RoZXIgY2F0IHdlIGhhdmUgdGhhdCB3ZSBmb3VuZCwgaXQgd2FzIGNsZWFybHkgYWJ1c2VkIGFuZCBpdCBnb3QgdGhyb3duIG91dCBvZiBhIGNhciBzbyBpdCBoYWQgYSBidW5jaCBvZiBpbmp1cmllcyBhbmQgaXQgd2FzIGNsZWFybHkgdmVyeSBmZWFyZnVsIG9mIGFsbCBodW1hbnMuIFNoZSB3YXMgaW5jcmVkaWJseSBhZ2dyZXNzaXZlIHdoZW4gd2UgYnJvdWdodCBoZXIgaW50byB0aGUgaG91c2UgYW5kIGl0IHlvdSB3ZW50IG5lYXIgaGVyIHNoZSB3b3VsZCBhdHRhY2sgb3IgYm9sdC4gCkkgcmVhbGx5IHdhbnQgdG8gbWFrZSBhIHBvc3QgZXhwbGFpbmluZyBob3cgdG8gY29ycmVjdGx5IHNwYW0gYnV0IEkgZmVlbCBsaWtlIGl0IGdvbm5hIGJlIGp1c3QgYSB3YXN0ZSBvZiB0aW1lIHR5cGluZyBhIHBvc3Qgdmlld2VkIGJ5IGEgYnVuY2ggb2YgdW5kZXJhY2hpZXZpbmcgZnVja3MuLiAKUG91ciBpdCBpbiB0aGUgbW9sZHMsIHB1dCBpdCBpbiB0aGUgZnJpZGdlIGZvciBsaWtlIDEwIG1pbnV0ZXMgdG8gc2V0IGFuZCB0aGVuIHBvcCB0aGVtIG91dCEuIApSZWlkJ3MgcmhldG9yaWMgY29udGludWVkIHdoZW4gUm9tbmV5IHNwb2tlIGluIGZyb250IG9mIGEgZ3JvdXAgb2Ygdm90ZXJzIGluIFJlaWQncyBob21lIHN0YXRlIG9mIE5ldmFkYS4gU2VuLiBSZWlkIGNvbnRpbnVlZCB0byBtdWRkeSB0aGUgd2F0ZXJzIGJ5IHJlbGVhc2luZyBhIHN0YXRlbWVudCB3aGljaCBzYWlkIGluIHBhcnQgIlRvZGF5LCB0aGUgbW9zdCBzZWNyZXRpdmUgcHJlc2lkZW50aWFsIGNhbmRpZGF0ZSBzaW5jZSBSaWNoYXJkIE5peG9uIGlzIGNvbWluZyB0byBOZXZhZGEsIGFza2luZyB0byBiZSBlbGVjdGVkIHByZXNpZGVudC4gRm9yZ2V0IGFib3V0IHByZXNpZGVudCAgIE1pdHQgUm9tbmV5IGNvdWxkbiBnZXQgY29uZmlybWVkIGFzIGEgY2FiaW5ldCBzZWNyZXRhcnkuIiAoSSBndWVzcyBTZW4uIFJlaWQgaXMgbm90IHVwIHRvIGRhdGUgd2l0aCB0aGUgbmV3cywgb3IgbWF5YmUgaGUganVzdCBmb3Jnb3QgYWJvdXQgaXNzdWVzIHN1Y2ggYXMgU29seW5kcmEsICJGYXN0IGFuZCBGdXJpb3VzLCIgdGhlIGxlYWtlZCBtaWxpdGFyeSBzZWNyZXRzLCBvciB0aGUgMjAwOCBwcmVzaWRlbnRpYWwgY2FtcGFpZ24uKQpXZSBhcmUgbGlrZSBzbWFsbCB0aW55IGxpa2UgZG90IG9uIHVuaXZlcnNlIHRoZSBmbHllcnMgd2lsbCBnZXQgYmV0dGVyIGhleHRhbGwgaXMgb3VyIHNhdmlvciBoZSB3aWxsIGdldCB1cyBhIHdpbm5pbmcgdGVhbSBzb29uLCBpdHMgbGlrZSBteSBiaWcgc2liZXJpYW4gaHVza3kgc2hlIGFsbCB3aGl0ZSBiZWF1dGlmdWwgYmx1ZSBleWVzIHRoYXRzIGJhc2ljYWxseSBibGFuZCBnaXJsIHdpdGggYmx1ZSBleWVzIHlvdXIgZHJlYW0gbWFuIG15IGh1c2t5IGJhc2ljYWxseSBzaGVzIGEgaG90IGdpcmwgbWFuIGp1c3QgbGlrZSB0aGUgZmx5ZXJzIHRlYW0gaXMgZ29pbmcgdG8gYmxvb20gaW50byBsaWtlIGZsb3dlciBpbiBlYXJ0aCBpdCBoYXMgYWxsIHRoZSBzb2lsIGFuZCBhbmQgaXQgYmxvb20gaW50byBhIGJ1bmNoIG9mIHBlZGFsIGxpa2UgaXQgaXMgc28gYmVhdXRpZnVsIGFuZCBzdHVubmluZy4gVHJ1c3Qgd2hhdCBKaW0gSmFja3NvbiBzYXkgdHJ1c3QgcHJvY2VzcyBpdHMgYmlnIGJhZCBsaW5lbWVuIHdobyBhcmUgZW5lbXkgbXkgaHVza3kgd291bGQgYml0ZSBvbiB0cm91c2VycyBhbmQgbWFrZSB0aGVtIGxlYXZlIHRvIHNpYmVyaWEuIApBdCA0Niwgc2V4eSBzaG91bGQgYmUgYSBzdGF0ZSBvZiBtaW5kIHRoYXQgbWFrZXMgeW91IGZlZWwgZ29vZCBhbmQgY29uZmlkZW50IGFzIGEgd29tYW4uLiAKRGlyZWN0IEJpbGxpbmcgaXMgbm90IGFsd2F5cyBhbGxvd2VkIGJ5IHlvdXIgaW5zdXJhbmNlIHByb3ZpZGVyLiBUaGlzIGlzIGFuIGFncmVlbWVudCBiZXR3ZWVuIHlvdSBhbmQgeW91ciBwcm92aWRlci4gV2UgYXJlIGhhcHB5IHRvIHN1Ym1pdCBjbGFpbXMgb24geW91ciBiZWhhbGYgc2hvdWxkIHlvdXIgaW5zdXJhbmNlIHByb3ZpZGVyIGFsbG93IHVzIHRvIGRvIHNvIGFuZCBhZnRlciB5b3UgaGF2ZSBzaWduZWQgY29uc2VudCBmb3IgdXMgdG8gZG8gc28uUGxlYXNlIG5vdGUgdGhhdCBpZiB5b3UgbmVlZCB0byBjYW5jZWwgYW4gYXBwb2ludG1lbnQsIGNvbnRhY3QgdXMgaW4gYWR2YW5jZSAoMjQgaG91cnMpLiAKVGhhdCBtaWdodCBiZSB0b28gVWx0aW1hdGUgRnJpc2JlZSBmb3IgdGhlIEFtZXJpY2FuIGpvY2tzIHdobyBydW4gdGhpcyBjb3VudHJ5LiAKVGhpcyBpbmZsYW1tYXRpb24gaXMgdGhlIG5hdHVyYWwgcmVzcG9uc2UgdG8gaW50ZW5zZSB0cmFpbmluZywgZXNwZWNpYWxseSBleGVyY2lzZXMgdGhhdCBjYXVzZSBtdXNjbGUgZGFtYWdlIHN1Y2ggYXMgZWNjZW50cmljIGVuaGFuY2VkIGxpZnRpbmcgb3IgcGx5b21ldHJpY3MuCkkgZG8gbm90IGF0IGFsbCBtaW5kIGxlc3MgcGlnbWVudC4gVGJoLCBzbWVsbCBpcyBpbXBvcnRhbnQgYXMgd2VsbCAgIEkgc3Ryb25nbHkgZGlzbGlrZSBvdmVybHkgc2NlbnRlZCBsaXAgcHJvZHVjdHMuIApBbHNvLCBkb24gbGlzdGVuIHRvIHJlZCBwaWxsIGd1eS4gV2hhdCBoYXBwZW5pbmcgbm93IGlzIHRoYXQgdGhlcmUgaXMgYSByZXZvY2F0aW9uIG9mIGxvbmcgc3RhbmRpbmcgcHJpdmlsZWdlIGluIGZhdm9yIG9mIGEgbW9yZSBsZXZlbCBwbGF5aW5nIGZpZWxkLiBJdCBzdGlsbCB1bmV2ZW4sIGFuZCBzdGlsbCBoZWF2aWx5IGZhdm9ycyBjaXMgd2hpdGUgbWFsZXMsIGJ1dCBwZW9wbGUgYXJlIGNvbmNpb3VzbHkgbWFraW5nIGFuIGVmZm9ydCB0byB0cnkgdG8gbWFrZSBpdCBzbyB0aGF0IGV2ZXJ5b25lIGNvbXBldGVzIGVxdWFsbHkuCk5hcm9wYSBoYXMgbm90IHlldCByZW9wZW5lZCB0aGUgY29sbGVnZSBhbmQgd2FzIHVuYWJsZSB0byBwcm92aWRlIGFueSBtb3JlIGluZm9ybWF0aW9uIG9uIHRoZSBmdXR1cmUgb2YgdGhlIHNjaG9vbCwgYWNjb3JkaW5nIHRvIHNwb2tlc21hbiBCaWxsIFJpZ2xlci4KQWxsIHRoaXMgdG8gc2F5LCB1bmxlc3MgeW91ciBtYW5hZ2VyIGZsYXQgb3V0IHRlbGxzIHlvdSB0aGF0IHRoZSBzaWNrIHRpbWUgeW91IHRha2VuIGlzIHVuYWNjZXB0YWJsZSwgb3Igb3RoZXJ3aXNlIHNheXMgdGhhdCB5b3UgYmVlbiBvdXQgdG9vIG11Y2gsIEkgZG9uIHRoaW5rIHlvdSByZWFsbHkgaGF2ZSBhIHByb2JsZW0uIFlvdSBjb3VsZCBhbHdheXMgZm9sbG93IHVwIHdpdGggeW91ciBtYW5hZ2VyIGFuZCBhc2sgaWYgdGhlcmUgYW4gaXNzdWUsIGFuZC9vciB3aGF0IHlvdSBuZWVkIHRvIGtub3cgZm9yIHJlcG9ydGluZyBzaWNrIHRpbWUuCkhpcyB3ZWIgcGFnZSB0b3V0cyB0aGUgYnJvdGhlbHMnICJtYWdhemluZSBxdWFsaXR5IHdvbWVuIiBhbmQgcmVtaW5kcyBwb3RlbnRpYWwgY2xpZW50cyB0aGF0IHRoZSBidXNpbmVzc2VzIGFjY2VwdCBWaXNhIGFuZCBNYXN0ZXIgQ2FyZC4KTm90IGEgZ29vZCBpbmRpY2F0b3IgZWl0aGVyIHdheS4gU3lzdGVtcyBsaWtlIFJ1c3NpYW4gc3BvcnRzL21lZGljYWwgbWFzc2FnZSwgbmV1cm9tdXNjdWxhciB0aGVyYXB5LCBSb2xmaW5nL3N0cnVjdHVyYWwgaW50ZWdyYXRpb24sIG11c2NsZSBlbmVyZ3kgdGVjaG5pcXVlcywgZXRjLiAKUmFqaXYsIFNlbnRoaWwgaGFuZCBmaW5lIHN0YXJ0IHRvIEluZGlhIEhvbmRhIHJhY2luZyB0ZWFtU2VwYW5nIChNYWxheXNpYSksIE1hcmNoIDkgKElBTlMpIEFmdGVyIHNvbGlkIHByYWN0aWNlLCBSYWppdiBTZXRodSBhbmQgU2VudGhpbCBLdW1hciwgcmlkZXJzIG9mIElERU1JVFNVIEhvbmRhIFJhY2luZyBJbmRpYSB0ZWFtLCBzY29yZWQgc2V2ZW4gdml0YWwgcG9pbnRzIGF0IEFzaWFzIHJvYWQgcmFjZSBjaGFtcGlvbnNoaXAgKEFSQ0MpIGhlcmUgb24gU2F0dXJkYXkuIApUaGF0IGdpdmVzIGhpbSByb29tIHRvIG1vdmUgYXJvdW5kIHRoZSBwaWVjZXMgb24gaGlzIGZpbmFuY2lhbCBtYXAuLiAKV2UgcmVxdWVzdCB0aGF0IHlvdSB1c2UgTW9kbWFpbCBhcyBub3Qgb25seSBkbyBhbGwgTW9kZXJhdG9ycyBnZXQgdG8gdmlldyB0aGUgbWVzc2FnZSBubyBtYXR0ZXIgd2hhdCB0aW1lIG9mIGRheSB5b3Ugc2VuZCBpdCwgbm9yIHdoYXQgdGltZSBvZiBkYXkgYW55IHBhcnRpY3VsYXIgbW9kIGhhcHBlbnMgdG8gYmUgb24uIApJZiB5b3UgYXJlIGEga25pdHRpbmcgZmFuLCB5b3UgY2FuIHRyeSBidW1wIHN0aXRjaGluZy4gClRob3NlIG9sZCBzdHlsZSByaWJiZWQgc3RyYWlnaHQgbWFncyBkaWRuIGNvbWUgaW4gNDAgcm91bmQgY2FwYWNpdHkuIFRoZSBNUDVBMiBleHRlbmRlZCBtYWcgb3B0aW9uIHNob3VsZCBqdXN0IHVzZSB0aGUgc2FtZSBtb2RlbCBhcyB0aGUgb25lIGZyb20gdGhlIE1QNUE1LCB3aGljaCBkb2VzIGV4aXN0IGluIHJlYWwgbGlmZS5UaGUgMzAgcm91bmQgRzMgbWFnLCB3aGlsZSBiZWluZyBleHRyZW1lbHkgcmFyZSwgY291bGQgaHlwb3RoZXRpY2FsbHkgd29yay4gSEsgaGFkIGF0IGxlYXN0IG9uZSBvbiB0aGUgSEs4MU92ZXJhbGwsIEkgaG9waW5nIGEgbG90IG9mIHRoZXNlIG1vZGVscyBhcmUgcGxhY2Vob2xkZXJzLiAKRXZlcnlvbmUgd2FzIGhpZGluZyBiZWhpbmQgdGhpbmdzIG9yIHJ1bm5pbmcgZm9yIHRoZSBkb29ycywiIFdlbHNoIHRvbGQgdGhlIENvdXJpZXIuIApObyByZWNlaXB0cyB3ZXJlIHByb3ZpZGVkIGZvciB0aGUgZGVsaXZlcnkgZXhwZW5zZXMgYW5kIHByb2Zlc3Npb25hbCBsaWFiaWxpdHkgaW5zdXJhbmNlIHRoYXQgaGUgY2xhaW1lZC4gVGhlIHJlY2VpcHRzIG9mIGV4cGVuc2VzIHRoYXQgaGUgZGlkIHByb3ZpZGUgYnVsayB3ZXJlIG5vdCBzZWdyZWdhdGVkIGZyb20gdGhlIGV4cGVuc2VzIGhlIGluY3VycmVkIGZvciBoaXMgZW1wbG95bWVudCBqb2Igd2l0aCB0aGUgbXVuaWNpcGFsaXR5LCBmb3Igd2hpY2ggaGUgd2FzIGZ1bGx5IHJlaW1idXJzZWQuIApJIGtub3cgaGUgbGVhdmVzIGFuIGVtcHRpbmVzcyBpbnNpZGUgb2YgeW91IHRoYXQgY2FuJ3QgYmUgZmlsbGVkLiBIZSBsb3ZlZCBoYXZpbmcgYm9uIGZpcmVzLiBTbyBzb3JyeSB0byBoZWFyIG9mIHRoZSBsb3NzIG9mIHlvdXIgZGFkLiBJJ3ZlIGtub3duIEZyZWQgYXMgbG9uZyBhcyBJIGhhdmUga25vd24gYWxsIG9mIHlvdS4gSGUgd2FzIGEgZ29vZCBtYW4gYW5kIEkgbGlrZWQgaGltLiBIZSB3YXMgcXVpdGUgdGhlIHBva2VyIHBsYXllciEhIEkga25vdyB0aGF0IHRoZSBmb3VyIG9mIHlvdSB3aWxsIGJlIHRvZ2V0aGVyIGF0IHRoaXMgdGltZSBhbmQgaGVscCBlYWNoIG90aGVyIHdpdGggdGhlIGhlYWxpbmcgcHJvY2Vzcy4gCkl0IHN0aWxsIGhhcyB0aGUgaGlnaGVyIEJTVCBnaXZlcyBhIGJldHRlciBzY29yZSwgc28gYXJtb3JzIHN0aWxsIGRvbWluYXRlIHRoZSB0b3AgdGllcnMgKGluIHBhcnRpY3VsYXIgdGhlIHRocmVlIHRyYWluZWUgYXJtb3JlZCBkcmFnb25zLCBMIVRpa2ksIEghTXlyaGggYW5kIFchRmFlIHdoaWNoIGhhdmUgMTgzIEJTVCwgdGhlIGhpZ2hlc3QgYW1vdW50KSwgKzEwIHVuaXRzIGtlZXAgZ2l2aW5nIGEgaGlnaGVyIHNjb3JlLCBhbmQgdGhlcmUgdGhlIHdob2xlIExlZ2VuZGFyeSArIGJsZXNzaW5ncyB0aGluZyB0aGF0IHVwcyB0aGUgc2NvcmUgYXMgd2VsbCwgYnV0IHNpbmNlIG5vdyB0aGUga2lsbHMgZG9uZSB3aXRoIGJvbnVzIHVuaXRzIGdpdmUgYm9udXMgcG9pbnRzLCB0aGUgbWV0YSBjaGFuZ2VkIHRvIDMgc3VwcG9ydCB1bml0cyArIHRoZSBib251cyB1bml0cy4gClRoZSBwaHlzaWNhbCB0aGVyYXB5IHRyYWluaW5nIHByb2dyYW0gdGFrZXMgdGhyZWUgeWVhcnMsIGFuZCBjdWxtaW5hdGVzIGluIGEgRG9jdG9yIG9mIFBoeXNpY2FsIFRoZXJhcHkgZGVncmVlIG9yIERQVC4gClBhcnRpY3VsYXJseSBmb3IgY3ljbGluZyBob2JieWlzdHMuIEkgaW1hZ2luZSB0aGlzIHdpbGwgbWFrZSBjeWNsaW5nIGluIFNlb3VsIGEgbXVjaCBtb3JlIGF0dHJhY3RpdmUgcHJvc3BlY3QgdG8gdGhlbSBzZWVpbmcgYXMgdGhleSdsbCBoYXZlIHRvIGludGVyYWN0IGxlc3Mgd2l0aCBjYXJzIGFuZCBzdWJ3YXlzIHRvIGdldCB0aGUgSGFuIHBhdGggb24gdGhlIHdlZWtlbmQuIApIb3dldmVyIEkgbm90aWNlZCBoZXJlIHRoYXQgYSBsb3Qgb2YgcGVvcGxlIGFyZSByZWFsbHkgYmFkIGF0IGV2YWx1YXRpbmcgdGhlaXIgb3duIGJvZGllcyBhbmQgdGh1cyBJIHNlZW4gcGVvcGxlIHJhbmdpbmcgZnJvbSBleHRyZW1lbHkgdW5kZXJ3ZWlnaHRlZCBhbGwgdGhlIHdheSB0byBvYmVzZSBjYWxsIHRoZW1zZWx2ZXMgc2tpbm55IGZhdC4gCkluIE1vbnRyZWFsLCBpZiB0ZWVuYWdlIGdpcmxzIGRvbiBjb3ZlciB0aGVtc2VsdmVzIGZyb20gaGVhZCB0byB0b2UgYW5kIGRpc3BsYXkgYSB3aWxsaW5nbmVzcyB0byBvYmV5IHRoZSBvcmRlcnMgb2YgdGhlIG1lbiBpbiB0aGVpciBmYW1pbGllcywgdGhlbiB0aGV5IG1pZ2h0IGhhdmUgdG8gcGF5IHdpdGggdGhlaXIgbGl2ZXMuIApUaGUgZmFjdCB0aGF0IGhlIGhhZCBvbmUgd2FzIGluc2lzdGVkIHVwb24gd2hlcmV2ZXIgaGUgd2FzIGtub3duLiBIaXMgYWNxdWFpbnRhbmNlcyByZXNlbnRlZCB0aGUgZmFjdCB0aGF0IGhlIHR1cm5lZCB1cCBpbiBwb3B1bGFyIHJlc3RhdXJhbnRzIHdpdGggaGVyIGFuZCwgbGVhdmluZyBoZXIgYXQgYSB0YWJsZSwgc2F1bnRlcmVkIGFib3V0LCBjaGF0dGluZyB3aXRoIHdob21zb2V2ZXIgaGUga25ldy4gCjM1KSBEaXNjbyBIZWF2ZW4gLiBDYW4gYmUgZm91bmQgb24gaVR1bmVzLiAKVGhpcyBmb2N1cyBhbmQgdGhlIHN0aXB1bGF0aW9uIHRoYXQgb2JsaWdhdGlvbnMgZm9yIFQgc3lzdGVtcyAnc2hhbGwgbm90IGJlIHBlcmZvcm1lZCBieSBvciBkZWxlZ2F0ZWQgdG8gdGhlIHRvYmFjY28gaW5kdXN0cnknIHdlcmUgZHJpdmVuIGJ5IG92ZXJ3aGVsbWluZyBldmlkZW5jZSBvZiB0aGUgdHJhbnNuYXRpb25hbCB0b2JhY2NvIGNvbXBhbmllcycgKFRUQ3MpIGhpc3RvcmljYWwgaW52b2x2ZW1lbnQgaW4gY2lnYXJldHRlIHNtdWdnbGluZy4xIDEwLiAKQ2FuYWRpYW4gQ2VudHJlIGZvciBEaXZlcnNpdHkgYW5kIEluY2x1c2lvbiwgT3BlbiBEb29yIEdyb3VwLCBwb3NBYmlsaXRpZXMsIEluZGlnZW5vdXMgV29ya3MsIE5hdGl2ZSBFZHVjYXRpb24gQ29sbGVnZSwgUmVjb25jaWxpYXRpb24gQ2FuYWRhLCBRbW11bml0eSwgUGFjaWZpYyBBdXRpc20gRmFtaWx5IENlbnRyZSAocGFpZCB3b3JrIGV4cGVyaWVuY2UgZm9yIHN0dWRlbnRzKSwgQXVudCBMZWFoJ3MgUGxhY2UgKHdvcmsgZXhwZXJpZW5jZSBwcm9ncmFtIGZvciB5b3V0aCB0cmFuc2l0aW9uaW5nIG91dCBvZiBmb3N0ZXIgY2FyZSkKU3RpbGwsIG9uZSBjb25jbHVzaW9uIGVtZXJnZXMgY2xlYXJseSBmcm9tIHRoZSBuYXJyYXRpdmUuIApBcyB3aXRoIEJhY2t5YXJkIEJlYXN0cywgdGhlIGFydHdvcmsgaXMgYnkgTmVkIEJhcnJhdWQgYW5kIGZvbGxvd3MgdGhlIHNhbWUgYnJpZWYgKHRoZXJlIGlzIGV2ZW4gc29tZSBjcm9zc292ZXIgd2l0aCB0aGUgaW5zZWN0cyBtZW50aW9uZWQgaW4gQmVhc3RzKSBwcm92aWRpbmcgc3VmZmljaWVudCBkZXRhaWwgZm9yIGdlbmVyYWwgYW5pbWFsIGlkZW50aWZpY2F0aW9uLiBUaGUgZGVzaWduIGlzIHByZXR0eSBtdWNoIHRoZSBzYW1lLCBpcyBlYXN5IHRvIGZvbGxvdyBhbmQgcGVyZmVjdCBmb3IgZGlwcGluZyBpbiBhbmQgb3V0IG9mLiBBbG9uZyB3aXRoIGEgc2hvcnQgZ2xvc3NhcnksIHRoZXJlIGlzIGFuIGluZGV4IGF0IHRoZSBiYWNrIHRoYXQgbWFrZXMgc2VhcmNoaW5nIGZvciB5b3VyIGZhdm91cml0ZSBhbmltYWwgZWFzeSwgYWxvbmcgd2l0aCBhIGNvbnRlbnRzIHBhZ2UgYXQgdGhlIGZyb250LiAKSXQncyB0b3VnaCB0byBzYXkgd2hhdCB0byBleHBlY3QgZnJvbSB0aGUgR2xvYmFsIFBva2VyIExlYWd1ZSwgYnV0IHdoZW4gYXNrZWQgYWJvdXQgaGlzIHZpc2lvbiwgTW9uZXltYWtlciBzYWlkIHRoYXQsIGluIGEgcGVyZmVjdCB3b3JsZCwgdGhpcyBsZWFndWUgd2lsbCBzdGlsbCBiZSBnb2luZyBzdHJvbmcgaW4gYSBkZWNhZGUuClR1a2VzMTAyMyAgMTI5IHBvaW50cyAgc3VibWl0dGVkIDI2IGRheXMgYWdvClRoZSBvdGhlciBndXkgZm9sZHMsIGFuZCBJIHJhaXNlLiAKU2UgdGkgZScgcG9zc2liaWxlIHBhcnRlY2lwYSBhbGxlIHZhcmllIGluaXppYXRpdmUgZSBhbGxlIGFzc2VtYmxlZSBkZWxsJ0Fzc29jaWF6aW9uZSBwZXIgcG9ydGFyZSBsZSB0dWUgaWRlZSBlIGxlIHR1ZSBjb3N0cnV0dGl2ZSBjcml0aWNoZS4KU28gYWdhaW5zdCBhbGwgcmVjZWl2ZWQgd2lzZG9tIGFuZCBnb29kIGFkdmljZSwgSSBkZWNpZGVkIHRvIGRvIG9uZSB0aGluZyBJIGNvdWxkIGRvIHRvIHRha2UgY29udHJvbCBvZiBteSBmZWFyIGFuZCBzd2l0Y2hlZCBteSBsYXN0IHRyYWluaW5nIGxvbmcgcnVuIHRvIGEgZnVsbCBoYWxmLCBzbyB0aGF0IHdheSBldmVuIGlmIEkgYmlmZmVkIGl0IG9uIHJhY2UgZGF5LCBJIHdvdWxkIGhhdmUgdGhpcyBleHBlcmllbmNlIHVuZGVyIG15IGJlbHQgYW5kIGtub3cgdGhhdCBJIGNvdWxkIGRvIGl0LiBJdCB3YXMgaGFyZCBidXQgSSB3YXMgcGxlYXNhbnRseSBzdXJwcmlzZWQgYnkgbXkgdGltZSAgIDI6MTkuIApJIHdvcmsgYXQgYSBkb2N0b3Igb2ZmaWNlIGFuZCB0aGlzIG9uZSB0aW1lIGEgcGF0aWVudCBjYW1lIGluIGFuZCBkZW1hbmRlZCB0aGF0IHdlIHN3aXRjaCB0aGUgd2FpdGluZyByb29tIFRWIHRvIEZveCBuZXdzLiBJIHRvbGQgaGltIHdlIG9ubHkgaGFkIGJhc2ljIGNoYW5uZWxzIGFuZCBub3QgdGhlIGNhYmxlcyBhbmQgaGUgd2FzIGZsYWJiZXJnYXN0ZWQsIGxpa2UgaGUgY291bGRuIGNvbXByZWhlbmQgdGhhdCB0aGVyZSB3ZXJlIHBlb3BsZSB3aG8gZGlkbiBnZXQvd2F0Y2ggRm94IE5ld3MuIEhlIHRoZW4gZ290IHVwc2V0IHRoYXQgd2UgaGFkIFBCUyBuZXdzIG9uIHNvIEkgaGFkIHRvIHN3aXRjaCB0aGUgY2hhbm5lbCB0byBzb21lIEp1ZGdlIEp1ZHkga25vY2tvZmYgc2hvdy4gCkJvdGggdGlueSBjb3VudHJpZXMgaGF2ZSBiaWcgUnVzc2lhbiBtaW5vcml0aWVzLCBhbmQgYm90aCBoYXZlIHN0cnVnZ2xlZCB3aXRoIGVtaWdyYXRpb24gYW5kIHNocmlua2luZyBwb3B1bGF0aW9ucy4gWWV0IGluIG1hbnkgd2F5cyB0aGV5IGFyZSBwb2xhciBvcHBvc2l0ZXMuIAoiSSd2ZSBub3QgaGVhcmQgb2YgY2F0YXN0cm9waGljIGRhbWFnZS4gSXQgZG9lc24ndCBtZWFuIGl0IGRvZXNuJ3QgZXhpc3QuIEl0IG1lYW5zIGl0IGhhc24ndCBnb3R0ZW4gdG8gdXMgeWV0LCIgS29vbiBzYWlkLgpVUyQuIEFuZ2VmIHdpcmQgc2llIHZvbiBNYXJ0aW4gSGFuemFsIHVuZCBhdWNoIEpvZSBUaG9ybnRvbi4gTSBlcnNjaGVpbnQgYXVjaCBkZXIgRWluc2F0eiB2b24gTWF0dCBDdWxsZW4gaW4gZGVyIGtvbW1lbmRlbiBTcGllbHplaXQsIHdlbm4gZGllc2VyIHNlaW5lIE5ITCBLYXJyaWVyZSBmb3J0c2V0emVuIHdpbGwgdW5kIG5pY2h0IGluIGRlbiBSdWhlc3RhbmQgZ2VoZW4gbSBzb2xsdGUgbWVpbmVuLCBkYXNzIGVzIGhpbGZ0LCB3ZW5uIG1hbiBkZW4gU3RhbmxleSBDdXAgZ2VyYWRlIGdld29ubmVuIGhhdC4gCkl0J3MgcHJldHR5IG1pbmQgYm9nZ2xpbmcgdG8gbWUuIEkgZ3JldyB1cCBpbiBLZW5uZXNhdywgd2hpY2ggaWYgSSBoYWQgdG8gZ3Vlc3MsIGlzIG9uZSBvZiB0aGUgbW9yZSBjb25zZXJ2YXRpdmUgcGxhY2VzIGluIHRoZSBuYXRpb24uIEF0IGxlYXN0IHdoZW4gSSB3YXMgYSBraWQuIEkgbWVhbiBzaGl0LCBpdCdzIHRoZSBsYXcgdGhhdCBldmVyeSBob3VzZSBvd24gYSBmaXJlYXJtLiBJIGhhZCBvbmx5IE9ORSBsaWJlcmFsIGhpZ2ggc2Nob29sIHRlYWNoZXIsIGFuZCBldmVyeW9uZSBqdXN0IHRob3VnaHQgaGUgd2FzIGFuIGlkaW90LiBXZSBzcGVudCBhIHRvbiBvZiB0aW1lIG9uIGNpdmljcywgdGhlIGNvbnN0aXR1dGlvbiBhbmQgcGhpbG9zb3BoeSBvZiBvdXIgZm91bmRpbmcgZmF0aGVycywgYW5kIEFMTCBteSBmcmllbmRzIGFuZCB0aGVpciBmYW1pbGllcyB3ZXJlIGNvbnNlcnZhdGl2ZS4KSWYgeW91IHRha2UgbmF2eSBzaG93ZXJzICg5MCBzZWNvbmRzIG9mIHdhdGVyIHVzZSksIHRoYXQgYWJvdXQgMTYwIGRheXMgb2Ygc2hvd2VyaW5nLCBvciBhYm91dCBhIGhhbGYgeWVhci5FZGl0OiBQZW9wbGUgYXJlIHJlbWluZGluZyBtZSB0aGF0IG1vc3QgYnVyZ2VycyBhcmVuIGEgcG91bmQsIHRoZXkgYSBxdWFydGVyIHBvdW5kLCB3aGljaCBicmluZ3MgaXQgZG93biB0byAxMTAgZ2FsbG9ucywgb3IgNTUgbWludXRlcy4gU3RpbGwgbW9yZSB0aGFuIE9QLCBidXQgbm90IG5lYXJseSBhcyBtdWNoLi4gCkRvIGEgd2Vla2x5IGNvbXBhcmlzb24gd2l0aCBhIGRpZ2l0YWwgdGhlcm1vbWV0ZXIgb24gdGhlIHJvb2YgW29mIHRoZSBhaXJwb3J0XSBpbiBhIHNoYWRlZCBhcmVhIGFuZCB0aGV5J3JlIGFsd2F5cyBjb21wYXJhYmxlLCBoZSBzYWlkLiAKQXQgb25lIHBvaW50LCBoZSBzYXlzLCBldmVyeW9uZSBncmF2aXRhdGVkIHRvIHRoZSB3aW5kb3cgdG8gbG9uZ2luZ2x5IGxvb2sgb3V0c2lkZS4gIlRoZXJlIHdhcyB0aGlzIGd1eSwgd2UgdGhpbmsgaGUncyBhbiBhZG1hbiwgYnV0IHdlIGRvbid0IGtub3csIGhlIHdhcyBqdXN0IGx5aW5nIGluIGEgZ3JheSBzdWl0IHdpdGggc2hhZGVzIG9uIHRoZSBiZWFjaC4gV2UncmUgbGlrZSwgJ1dvdywgdGhhdCBjb3VsZCBiZSB1cy4nIEl0IHdhcyBqdXN0IGEgc3VycmVhbCB0aGluZywiIGhlIHNheXMuIFNvbWUgb2YgaGlzIGNvbGxlYWd1ZXMgd2VudCBvdXQgdG8gam9pbiB0aGUgc3VpdGVkIG1hbiwgaGUgc2F5cywgd2hvIHRoZXkgaW1hZ2luZWQgaGFkIGp1c3QgZmluaXNoZWQgcGl0Y2hpbmcgdGhlIGNsaWVudC4KT2RkbHkgZW5vdWdoLCBJIGdvdCBteSBiaWdnZXN0IHBheWNoZWNrIHdoZW4gSSBsZWZ0IHRoYW4gd2hlbiBJIHdhcyBhY3R1YWxseSB3b3JraW5nLi4gCkdlZXosIGdvb2QgbHVjay4gClJlbWVtYmVyIHRob3VnaCB0aGF0IGlmIHlvdSBzdGlsbCBoYXZlIHRoZSBvcHRpb24gdG8gY2hlY2sgYWZ0ZXIgc2VlaW5nIHRoZSBmbG9wIHlvdSBzaG91bGQgc3RheSBpbiB0aGUgZ2FtZS4gWW91IGNvdWxkIGdldCB0aHJvdWdoIHRvIHRoZSBUdXJuIG9yIFJpdmVyIHdpdGhvdXQgaGF2aW5nIHRvIHBsYWNlIGFub3RoZXIgYmV0LgpGdXJ0aGVybW9yZSwgYSBmb3J3YXJkIHBvc3R1cmVkIGhlYWQgYWRkcyAxNSAzMCBsYiBvZiBhZGRpdGlvbmFsIHRlbnNpb24vc3RyZXNzIG9uIGl0cyBzdXBwb3J0aW5nIG11c2NsZXMgaW4gdGhlIGJhY2sgb2YgdGhlIG5lY2sgZm9yIGVhY2ggaW5jaCBvZiBmb3J3YXJkIHByb3RydXNpb24gb2YgdGhlIGhlYWQuClcuIFJpbGV5IGFuZCBqIGFuZCBNcnMuIER3cmZnaGZjIFN0cmF1c2JhdWdoIGFuZCBCZWF0cmljZSwgTXIuIGogbGl0dGxlIGRhdWdodGVyIHdlcmUsIHJlY2VudCB2aXNpdG9ycyBhbmQgTXJzLiBFbW9yeSBTaGVsbGVtYW4gYW5kIGkgd2l0aCBNcnMuIEguIEwuIFNwZW5jZS4gQ2hhcmxlcyBMZWF0aGVybWFuIHNwZW50IFN1bmRheSBqIHdpdGggTXIuIGFuZCBNcnMuIEdlb3JnZSBTaGVsbGUgMSBtYW4sIG9mIEhhbXB0b24uIE1yLiBhbmQgTXJzLiBKYW1lcyBEaWNrLiAnTWlzc2VzIFZpcmdpbmlhIGFuZCBIZWxlbi4nIEhhcmQgIG1hbiBzcGVudCB0aGUgd2VlayBlbmQgYXQgdGhlIGhvbWUgb2YgQ2hhcmxlcy4gClRoZSBhbmNpZW50IENoaW5lc2UgcGh5c2ljaWFuIEh1YSBUdW8gaXMgcXVvdGVkIGFzIHNheWluZyAiYSBydW5uaW5nIHN0cmVhbSBuZXZlciBnb2VzIGJhZCwiIG1lYW5pbmcgdGhhdCBxaSBhbmQgYmxvb2Qgd2lsbCBub3QgYmVjb21lIHN0YWduYW50IGlmIHByb3BlciBleGVyY2lzZSBrZWVwcyB0aGVtIGNpcmN1bGF0aW5nLiAKRWxsZSBhIHByaXMgY29uZyBFbGxlIGEgZmFpdCBkZXV4IGhldXJlcyBkZSByb3V0ZSBwb3VyIGFsbGVyIFNoZXJicm9va2UuIFVuZSBmb2lzIHN1ciBwbGFjZSwgb24gbHVpIGEgZGl0IDogQ2UgbiBwYXMgaWNpLCBpbCBmYXV0IGFsbGVyIFJpY2htb25kLiBzIHJlbmR1ZSBSaWNobW9uZC4gTGEgcG9saWNpIHF1aSBtIGFjY3VlaWxsaWUgbSBkaXQgOiBuZSBjb21wcmVuZHMgcGFzIHBvdXJxdW9pIHQgaWNpLiBUIHB1IGFsbGVyIE1hc2NvdWNoZSBsIGRlIGwgbGEgcG9saWNpIGEgcHJvcG9zIGRlIHByZW5kcmUgbGEgZCBkZSBTYXJhaC4gClBsZWFzZSwgZG9uYXRlIGFuZCBzaGFyZS4gClRoZSBhY2NvbW1vZGF0aW9uIGlzIGJlcmVmdCBvZiBjb21mb3J0IGFuZCByaWRlcnMgYXJlIGNvbnN0YW50bHkgZGlzdHVyYmVkIGJ5IGZhbnMgY3JlZXBpbmcgdXAgdG8gdGhlaXIgaG90ZWwgZG9vcnMgZm9yIGEgZ2xpbXBzZSBvZiB0aGVpciBoZXJvZXMuIE9uZSB0YWtlcyBpdCB0b28gZmFyIHRob3VnaCwga25vY2tpbmcgb24gb25lIHJpZGVyJ3MgZG9vciBhbmQgZGlzdHVyYmluZyBoaXMgc2xlZXAuLiAKVGhpcyBkb2VzIG5vdCBtZWFuIHRoYXQgYWxsIGluZm9ybWF0aW9uIG11c3QgYmUgcHJvdmlkZWQgaW4gcmVzcG9uc2UgdG8gYSByZXF1ZXN0LCB0aGVyZSBhcmUgcmVhc29ucyBpbmNsdWRpbmcgRGF0YSBQcm90ZWN0aW9uLCBDb25maWRlbnRpYWxpdHkgYW5kIENvbW1lcmNpYWwgSW50ZXJlc3RzIHRoYXQgbWF5IGV4ZW1wdCB0aGUgaW5mb3JtYXRpb24gZm9yIGJlaW5nIHByb3ZpZGVkLiBJZiB0aGlzIGlzIHRoZSBjYXNlIHRoZSBVbml2ZXJzaXR5IHdpbGwgZXhwbGFpbiBpbiBmdWxsIHdoeSBpbmZvcm1hdGlvbiBpcyBiZWluZyB3aXRoaGVsZCBhbmQgeW91IGhhdmUgdGhlIHJpZ2h0IHRvIGFwcGVhbC4uIApNYWRkb3cgY29udHJpYnV0ZWQgcXVpdGUgYSBiaXQgdG8gdGhhdCBwYXJ0aWN1bGFyIGRlY2VwdGlvbiByZWdhcmRpbmcgdGhlIHJlbGF0aXZlIGltcG9ydGFuY2Ugb2Ygc2VwYXJhdGUgZXZlbnRzLiAKSSBhbSBkZXNwZXJhdGVseSBpbiBuZWVkIG9mIGxvdmUuIApUaGUgd29tYW4gd2hvIGZvdW5kZWQgYSBjaGFpbiBvZiBzZWVkeSBTb3V0aCBGbG9yaWRhIG1hc3NhZ2UgcGFybG9ycyAgIGluY2x1ZGluZyBvbmUgd2hlcmUgUm9iZXJ0IEtyYWZ0IHdhcyBidXN0ZWQgZm9yIHNvbGljaXRhdGlvbiBvZiBwcm9zdGl0dXRpb24gICBhdHRlbmRlZCBQcmVzaWRlbnQgVHJ1bXAncyBTdXBlciBCb3dsIHBhcnR5LCBhbmQgZXZlbiBzbmFwcGVkIGEgc2VsZmllIHdpdGggdGhlIGNvbW1hbmRlciBpbiBjaGllZiB0aGF0IG5pZ2h0LCBhY2NvcmRpbmcgdG8gYSByZXBvcnQgRnJpZGF5LgooRnVsbCBBbnN3ZXIpLiAKVGFjb2xpa2Vzd2VlZCB1CklmIHlvdSB1c2luZyBBcHBsZSBlcXVpcG1lbnQgYmVjYXVzZSB5b3UgdGhpbmsgaXQgZWFzeSB0byB1c2UsIHlvdSBoYXZlIHZhbGlkIHJlYXNvbnMgZm9yIHN0aWNraW5nIHdpdGggdGhlbS4gSG93ZXZlciwgaWYgeW91IGFyZSBsb29raW5nIGZvciBhIGxlc3MgcmVzdHJpY3RpdmUgZW52aXJvbm1lbnQsIGNvbnNpZGVyIHVzaW5nIHZhcmlvdXMgTGludXggYmFzZWQgb2ZmZXJpbmdzIHN1Y2ggYXMgRGViaWFuLCBVYnVudHUsIG9yIEZlZG9yYSwgYW5kIG9mZmljZSBwYWNrYWdlcyBmcm9tIE9wZW5PZmZpY2UuCklMaWtlUmFpc2luc0FNQSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCktlZW4gdG8gaGVhciBhbnlvbmUgaW5wdXQgd2hvIHVzZWQgb25lLk90aGVyd2lzZSBneW0gYW5kIGZpdG5lc3MgKEkgdGhpbmspIHNlbGwgYSBmb3JjZSBVU0EgcG93ZXIgYmFyIGJ1dCBJIGhhdmUgbm8gaWRlYSBpZiBpdCBhbnkgZ29vZC4gClNwZWFraW5nIGFzIGEgdGVjaG5pY2lhbiwgb3duZXJzIGZyZXF1ZW50bHkgdHJlYXQgdXMgbGlrZSBnYXJiYWdlLCByZWZ1c2luZyB0byB0YWxrIHRvIHVzIGJlY2F1c2Ugd2UgbnVyc2VzIFdoaWxlIEkgZG8gYmFzaWMgY2hlY2sgaW5zIGFuZCBoaXN0b3J5LCBJIGFsc28gYSBwaGFybWFjeSB0ZWNoLCBhIGxhYiB0ZWNoLCBhbiBhbmVzdGhlc2lhIG51cnNlLCBhIGRlbnRhbCBoeWdpZW5pc3QsIGEgcGhsZWJvdG9taXN0LCBhbmQgYW4gdW5kZXJ0YWtlci4gSSBmcmVxdWVudGx5IGRvIHRoaXMgZnJvbSA3YW0gdG8gN3BtIGFuZCBhbGwgZm9yICQxMy41MCBhbiBob3VyLiAKVGhlIHdvcnN0IHBhcnQgd2FzIHRoYXQgSSBzdGF0aW9uZWQgb24gYSBzbWFsbCBiYXNlIGluIEdlcm1hbnksIGFuZCB3ZSBkb24gaGF2ZSBhIGhvc3BpdGFsLCBzbyB0aGV5IGhhZCB0byBkbyBpdCBpbiBhIEdlcm1hbiBob3NwaXRhbC4gCiJUaGlzIGlzIGZ1biwgaHVoPyIgaGUgc2FpZCBiZWZvcmUgYSBob3QgY291bnRyeSBibHVlcyBzb25nLCAiU3Rvb3AgT3Zlci4iIHJpZ2h0ICAgVmFzc2FyIHBsYXllZCBjb3VudHJ5LCB0b28uICJNeSBOZXh0IDMwIFllYXJzLCIgd2l0aCBoaW0gc2VhdGVkIGF0IHRoZSBwaWFubywgd2FzIHRoZSB0ZW5kZXIgc2lkZSBvZiB0aGUgZ2VucmUuICJUaGUgTGFzdCBEYXkgb2YgTXkgTGlmZSIgd2FzIHRoZSBkcmFtYXRpYyBzaWRlIChuaWNlbHkgc28pLiAKRm9yIEdyb3VwIFJSU1AgYW5kIERlZmluZWQgQ29udHJpYnV0aW9uIHBsYW5zLCB5b3VyIGZ1bmQgY2hvaWNlcyBzaG91bGQgbWF0Y2ggdXAgd2l0aCB0aGUgZ29hbHMsIHJpc2sgdG9sZXJhbmNlIGFuZCB0aW1lIGZyYW1lIHlvdSB1c2luZyBmb3IgeW91ciBvdGhlciBhY2NvdW50cy4gSWYgeW91ciBlbXBsb3llciBkb2VzbiBoYXZlIGFuIG9wdGlvbiB0aGF0IGZpdHMgeW91ciBzaXR1YXRpb24sIHlvdSBjYW4gbWFrZSBhZGp1c3RtZW50cyB1c2luZyB5b3VyIG90aGVyIGFjY291bnRzLiBGb3IgaW5zdGFuY2UsIGlmIHlvdSBpbiB5b3VyIDMwcyBvciA0MHMgYW5kIGFyZSBvbmx5IG9mZmVyZWQgYSBiYWxhbmNlZCBmdW5kLCB5b3UgY291bGQgdGlsdCB5b3VyIHBlcnNvbmFsIGFzc2V0cyB0b3dhcmRzIHN0b2Nrcy4gCkVyc2F0endlaXNlIGthbm4gbWFuIGRhcyBJbnRlcm5ldGFuZ2Vib3QgS2FydGUgKHNpZWhlIHVudGVuKSBudXR6ZW4uTm9jaCBnbnN0aWdlciB3aXJkIGVzLCBrYXVmdCBtYW4gc2ljaCB1bSAxLCAgYmVpbSBCdXNmYWhyZXIgZWluZSBCdXMgQm9udXNrYXJ0ZSBpbSBTY2hlY2trYXJ0ZW5mb3JtYXQgdW5kIGxkdCBlaW4gR3V0aGFiZW4gdm9uIDEwLCAgLCAyMCwuICBvZGVyIDMwLCAgYXVmLiAKRXZlcnlvbmUgaXMgU08gZGlmZmVyZW50IGluIHByZWZlcmVuY2VzLCB0aGF0IGV2ZW4gaWYgd2UgYXJlIGdpdmluZyBhIGdvZCBsaWtlIG1hc3NhZ2UsIHdlIHdvbiBuZWNlc3NhcmlseSBiZSBkb2luZyBleGFjdGx5IHdoYXQgeW91IG5lZWQgaW4gZXZlcnkgYXJlYS4uIApEYW1uLCBJIHNvcnJ5IGZvciB0aGF0LiAKSW5kdWxnZS4gCklmIHlvdSBjYW4gbWFrZSBpdCB0byBQYXJpcywgRnJhbmNlIFBhcmlzLCBMYXMgVmVnYXMgYm9hc3RzIGFuIGV4Y2VwdGlvbmFsIG1lYWwsIGFzIHdlbGwgYXMgaW1wcmVzc2l2ZSB2aWV3cyBvZiB0aGUgQmVsbGFnaW8gZm91bnRhaW4sIGF0IHRoZWlyIEVpZmZlbCBUb3dlciByZXN0YXVyYW50LiAKRWF0aW5nIHNob3VsZCBiZSBhIHNvY2lhbCBleHBlcmllbmNlLiAKU3BlYWtlcnMgQ29ybmVyIGlzIG9mdGVuIHVzZWQgYXMgYW4gZXhhbXBsZSBvZiBob3cgZnJlZSBzcGVlY2ggd29ya3MgIHJlbGlnaW91cyBzb3J0cyBtaW5nbGUgd2l0aCBob21lbGVzcyBwZW9wbGUgYW5kIHBvbGl0aWNhbCByYWRpY2FscyB0byB5ZWxsIGFuZCBzaG91dCBhbmQgY29udmluY2UgdGhlaXIgYXVkaWVuY2UgdGhhdCB0aGV5IHNob3VsZCBiZSBsaXN0ZW5lZCB0bywgb3IgbGF1Z2hlZCBhdCwgb3IgZXZlbiBzaG91dGVkIGJhY2sgYXQuIFBvaW50IGlzICByZWdhcmRsZXNzIG9mIHRoZSBzcGVlY2ggIGl0IGlzICJwcm90ZWN0ZWQiIGluIHRoZSBzZW5zZSB0aGF0IGl0IGlzIG1vc3RseSBhbGxvd2VkIHRvIG9jY3VyIHdpdGggbGl0dGxlIG9yIG5vIGludGVyZmVyZW5jZSBmcm9tIHRoZSBzdGF0ZSAoaW4gdGhlIGZvcm0gb2YgdGhlIEJvYmJpZXMgd2hvIHBvbGljZSBpdCkuIDE5OTksIExvcmQgSnVzdGljZSBTZWRsZXkgd3JvdGUgYSBkZWNpc2lvbiBjaXRlZCBTcGVha2VycyBDb3JuZXIgYXMgZXZpZGVuY2Ugb2YuIApUaGV5IGtuZXcgZXZlcnl0aGluZywgc2FpZCBHYXJyZXR0LiAKVGhlIHNpbXBsZXN0IHdheSBpcyBmb3IgeW91ciBwYXJ0bmVyIHRvIHNpbXBseSBhbmQgY292ZXJ0bHkgaW5mb3JtIHlvdSBvZiB0aGUgY29udGVudHMgb2YgdGhlaXIgaGFuZCwgYW5kIHRoaXMgc21hbGwgYW1vdW50IG9mIGluZm9ybWF0aW9uIGNhbiBzd2F5IHRoZSBvZGRzIGVub3VnaCB0byBtYWtlIGEgZGlmZmVyZW5jZS4gV2hvbGUgdGVhbXMgbWF5IGJlIGFzc2lnbmVkIHRvIHRoaXMgc29ydCBvZiBwcm9qZWN0LCBhcyB3ZWxsIGFzIHZhcmlvdXMga2luZHMgb2YgZWxlY3Ryb25pYyBzdXJ2ZWlsbGFuY2UgZGV2aWNlcy4gClJpZGljdWxvdXNseSBjb21wZXRpdGl2ZSwgZXhwZW5zaXZlLCBhbmQgdGltZSBjb25zdW1pbmcgKHNpbmNlIHRoZSBvbmx5IHdheSB0byBiZSBnb29kIGlzIHRocm91Z2ggcHJhY3RpY2UpIHdpdGggbWluaW1hbCBwYXlvZmYuIEEgbG90IG9mIHJlcXVpcmVkIG5ldHdvcmtpbmcsIHdoaWNoIHVzdWFsbHkgbWVhbnMgZ29pbmcgdG8gZXZlbnRzLCB0YWxraW5nIHRvIHBlb3BsZSwgZHJlc3NpbmcgbmljZS4gCllvdSBiZSBoYXBweSB0byBrbm93IHRoYXQgL3IvQm9zdG9uIGlzIGZhciBsZWZ0IGZ1bGwgb24gcG9wdWxpc3QgeGVub3Bob2JpYy9yYWNpc3QgYW5kIGJsYW1lcyBhbGwgb2Ygb3VyIHNlbGYgY3JlYXRlZCBwcm9ibGVtcyBvbiBvdGhlcnMgYW5kIGl0IGNvbW1vbiB0byBsaXRlcmFsbHkgZGVueSAic3VwcGx5IGFuZCBkZW1hbmQiIGFzIGEgImJlbGllZiB3aXRob3V0IGFueSBwcm9vZi4iIE91ciAzMDAsMDAwIHVuaXQgc2hvcnRhZ2UgaXMgYmxhbWVkIG9uIDQwMCBBaXJCbkJzIGFuZCAzMCBmb3JlaWduZXJzIHdobyBib3VnaHQgc2Vjb25kcyBob21lcyB3aXRoIGNhbGxzIHRvIHRheC9iYW4gdGhlbS4gVGhlIGZvcmVpZ24gY291bnRyeSB3ZSBibGFtZSBjaGFuZ2VzLCBidXQgaXQgYWx3YXlzIG5vbiB3aGl0ZS4KVGhlIHZhc3QgbWFqb3JpdHkgb2YgcGVvcGxlIHdpdGggYWxjb2hvbCB1c2UgZGlzb3JkZXIgb3IgdG9iYWNjbyB1c2UgZGlzb3JkZXIgaGFkIHRoZWlyIGZpcnN0IGRyaW5rIG9yIGNpZ2FyZXR0ZSB3aGVuIHRoZXkgd2VyZSBpbiB0aGVpciBlYXJseSB0byBtaWQgdGVlbnMsIHdoZW4gdGhlaXIgYnJhaW4gd2FzbiBmdWxseSBmb3JtZWQuIFRoZXJlIHBlb3BsZSB3aG8gYXJlIGF0IGluY3JlZGlibHkgaGlnaCByaXNrIG9mIGRldmVsb3BpbmcgYWRkaWN0aW9ucywgYW5kIGl0IGlzIGEgcGh5c2lvbG9naWNhbCBpbGxuZXNzLiAKTWU/IE5vIHdheSwgdGhhdCBkdWRlIGhhcyBzdGFiYnkgYml0cyBhbmQgSSBqdXN0IGEgd2l6YXJkLiBTbyBJIGdvIGludG8gZXRoZXJlYWwgZm9ybS5XaGlsZSBldmVyeW9uZSBlbHNlIHdhcyByb2xsaW5nIGRhbWFnZSwgSSB3YXMgbWFraW5nIENoYXJpc21hIGNoZWNrcyB0byBjb252aW5jZSBteSBlbmVteSB0byBqb2luIG91ciBzaWRlIGFuZCBwcmFpc2luZyB0aGUgYmVuZWZpdHMgb2YgbGljaGRvbS4gMiBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvVGhhdCBpdCBpcyBoZXIgb3V0Zml0LCBpdCBkb2VzbiBjaGFuZ2UgZ29pbmcgZm9yd2FyZC4gClN0YXJ0IHlvdXIgZ2FtZSBwbGFuLiAKSW4gYSB0YXBlZCBjb252ZXJzYXRpb24gd2l0aCBDb25zdGFuZCdzIG1vdGhlciBhIHllYXIgbGF0ZXIsIENvc2J5IGRlc2NyaWJlZCB0aGUgc2V4IGFjdCBhcyAiZGlnaXRhbCBwZW5ldHJhdGlvbiIgYnV0IHJlZnVzZWQgdG8gc2F5IHdoYXQgcGlsbHMgaGUgaGFkIGdpdmVuIGhlciBkYXVnaHRlci4gCkhlYXZlbiBmb3JiaWQgc29jaWFsIGNyZWF0dXJlcyBtYWtlIGFuIGF0dGVtcHQgdG8gY3JlYXRlIGNvbW11bml0eS4gTGlrZSBJIGdldCBpdC4gSSBwcmVmZXIgdG8gYmUgbGVmdCBhbG9uZSB3aGVuIEkgY2xpbWIgdG9vLCBidXQgdGhlcmUgYXJlIGJldHRlciB0aGluZ3MgdG8gcG9zdCBhYm91dC4gVGFsayB0byB0aGlzIHBlcnNvbiBhbmQgaGVscCB0aGVtIHVuZGVyc3RhbmQgeW91ciBwb2ludCBvZiB2aWV3IGluc3RlYWQgb2YgYnJpbmdpbmcgeW91ciBuZWdhdGl2aXR5IGhlcmUuIFRoZWlyIGFjdGlvbnMgbWF5IGJlIHVubmVjZXNzYXJ5LCBidXQgdGhleSB3ZXJlIGZhciBmcm9tIHJ1ZGUuIEhvdyB3b25kZXJmdWwgeW91ciBsaWZlIG11c3QgYmUgdG8gYmUgYm90aGVyZWQgYnkgc29tZW9uZSBleGNpdGVkIGZvciB5b3UgdG8gc3VjY2VlZC4gUGxlYXNlIGRvbiBzaHV0IGRvd24gb3RoZXJzIHdobyBtaWdodCBiZSByZWFkaW5nIHRoaXMgZnJvbSBldmVyIHJlYWNoaW5nIG91dCBhbmQgdGFsa2luZyB0byBmZWxsb3cgY2xpbWJlcnMuIEl0IGhhcmQgZW5vdWdoIGNvbnZpbmNpbmcgbmV3IGNsaW1iZXJzIHRoYXQgdGhleSBkb24gaGF2ZSB0byBjbGltYiBhIGNlcnRhaW4gZ3JhZGUgdG8gdGFsayB0byBleHBlcmllbmNlZCBjbGltYmVycy4KSXQgYmVpbmcgdG9vIGxhdGUgaW4gdGhlIGRheSB0byBkbyBhbnl0aGluZyBtb3JlLCBhIHBhcnR5IHdpdGggYSBwZXR0eSBvZmZpY2VyIHdhcyBsZWZ0IHRvIGd1YXJkIHRoZSBUZW50LCB3aGlsZSB3ZSB3aXRoIGFub3RoZXIgcGFydHkgdG9vayBhIFdhbGsgaW50byB0aGUgd29vZHMsIGFuZCB3aXRoIHVzIG1vc3Qgb2YgdGhlIG5hdGl2ZXMuIFdlIGhhZCBidXQganVzdCBjcm9zc2VkIHRoZSBSaXZlciB3aGVuIE1yLiAKQXMgYWx3YXlzLCBMbG95ZCBKb25lcyB3cml0ZXMgd29uZGVyZnVsIGV2b2NhdGl2ZSBwcm9zZSwgYW5kIGl0IHdhcyBlYXN5IGZvciBtZSB0byBpZGVudGlmeSB3aXRoIHNvbWUgb2YgaGlzIGV4cGVyaWVuY2VzLiBMaWtlIGhpbSBJIGFtIGFsc28gYW4gJ2F1dHVtbiBsZWFmJywgYm9ybiBtdWNoIGxhdGVyIHRoYW4gbXkgc2libGluZ3MsIGFuZCBicm91Z2h0IHVwIGFsbW9zdCBhcyBhbiBvbmx5IGNoaWxkIGFmdGVyIHRoZSBvbGRlciBvbmVzIGhhdmUgbGVmdCBob21lLiBJIHdvcmsgb25seSBhIGZldyBodW5kcmVkIG1ldHJlcyBhd2F5IGZyb20gMjAgU3RlbGxpbiBTdHJlZXQgd2hlcmUgdGhlIEpvbmVzIGZhbWlseSBsaXZlZCwgYW5kIGtub3cgbWFueSBvZiB0aGUgcGxhY2VzIGhlIGRlc2NyaWJlcyBpbiBMb3dlciBIdXR0LCBXZWxsaW5ndG9uIGFuZCBDaHJpc3RjaHVyY2guIApUaGUgZ2lybHMgYXJlIHZlcnkgZnJhbmsgYW5kIHJlYWxpc3RpYyBhYm91dCB0aGVpciBqb2IgYW5kIGl0cyByaXNrcy9iZW5lZml0cy4gCkFuIGFjY29tcGxpc2hlZCBoaWdoIHNjaG9vbCBzdHVkZW50LCBCZW4gKFBhcnJ5IFNoZW4pIHNlZW1zIHRvIGV4Y2VsIGF0IGFsbW9zdCBldmVyeXRoaW5nIGV4Y2VwdCB3aW5uaW5nIG92ZXIgaGlzIGRyZWFtIGdpcmwsIFN0ZXBoYW5pZSAoS2FyaW4gQW5uYS4gCkkgbWF5IGhhdmUgZ290IHNvbWUgc3R1ZmYgd3JvbmcsIG9yIG5vdCBjb25zaWRlcmVkIHRoYXQgWCBjdWx0dXJlIHNoYXJlcyBZIHdpdGggd2hhdCBJIGZhbWlsaWFyIHdpdGggKFNhbW9hbi9NYW9yaS9OWiksIHNvIEkgY291bnRpbmcgdGhhdCBpZiBJIGFtIHdyb25nIHRoYXQgdGhlcmUgc29tZW9uZSB0aGF0IGtub3dzIG1vcmUgd2hvIGNhbiBjb3JyZWN0IG1lIGZvciBtaW5lIGFuZCBvdGhlciByZWFkZXJzIGJlbmVmaXQuIApKdXN0IGRvbiBleHBlY3QgaXQgdG8gZ2l2ZSB0aGVtIGl0IGV2ZXJ5IHRpbWUuCkR1cmluZyB0aGUgZW50aXJlIG1hbmV1dmVyLCBkbyBub3QgYnJha2UgdW50aWwgeW91ciBjYXIgaXMgdHJhdmVsaW5nIHN0cmFpZ2h0LiAKVGhlIENSQSBhc2tlZCBmb3IgcHJvb2Ygc2hlIGFjdHVhbGx5IHBhaWQgdGhlIGFtb3VudHMgaW4gcXVlc3Rpb24uIAoiRmlyZXdvcmsiIGJ5IEthdHkgUGVycnkgZG9lcyBhIHNpbWlsYXIgdGhpbmcsIGJ1dCBpdCB3b3JrcyBpbiBhIHJlYWxseSwgUkVBTExZIG5pY2UgYnVpbGQgdXAgdG8gdGhlIGNob3J1cyBpbiB0aGUgcHJlIGNob3J1cywgbGlrZSB0aGUgYXNjZW50IG9mIGEgZmlyZXdvcmsgaW50byB0aGUgbmlnaHQgc2t5IHdoaWNoIHRoZW4gImV4cGxvZGVzIiBhdCB0aGUgY2hvcnVzLi4gCiJJbiBvcmRlciB0byBjaGFuZ2UgdGhhdCBiZWhhdmlvciB3ZSB3YW50ZWQgdG8gbGl0ZXJhbGx5IGxldCBwZW9wbGUgZXhwZXJpZW5jZSBob3cgbWFueSBtZXRlcnMgdGhleSBhcmUgYWN0dWFsbHkgZHJpdmluZyBibGluZCwiIEdlb2ZmcmV5IEhhbnRzb24sIGNoaWVmIGNyZWF0aXZlIG9mZmljZXIgb2YgSGFwcGluZXNzIEJydXNzZWxzLCBzYWlkIGluIGEgc3RhdGVtZW50LiAKSGUgaGFzIG5vIGNyaW1pbmFsIHJlY29yZCBhbmQgaGFzbid0IGJlZW4gYXJyZXN0ZWQgZm9yIGFueSBvZiB0aGlzLiBIZSBoYXMgb3RoZXIgcGVvcGxlIGhlJ2QgbGlrZSB0byBmaWdodCBpZiBoZSBldmVyIHNhdyB0aGVtLiBBbiBleCBjb3dvcmtlciB0b2xkIGhpbSBoZSBkaWQgYSBzaGl0dHkgam9iIGFuZCBtaWxkbHkgaGFyYXNzZWQgaGltIGFuZCBoaXMgd29yay4gClJlbWVtYmVyIHRoYXQgdGltZSB3aGVuIGRlbW9jcmF0cyBwYWlkIG1pbGxpb25zIG9mIGRvbGxhcnMgdG8gcnVzc2lhbnMgZm9yICJvcHBvc2l0aW9uIHJlc2VhcmNoIiB0aGF0IHNhaWQgdGhlIFJ1c3NpYW5zIGhhdmUgYmxhY2ttYWlsIG1hdGVyaWFsIG9uIFRydW1wIGFuZCB0aGF0IENvaGVuIHdhcyBtZWV0aW5nIFJ1c3NpYW5zIGluIFByYWd1ZSBhbmQgdGhlbiB0aGUgRkJJIG5ldmVyIGJvdGhlcmVkIHZlcmlmeSBpdCBhbmQgdXNlZCBpdCBpbiBhIEZJU0Egd2FycmFudCB0byBzcHkgb24gbWVtYmVycyBvZiB0aGUgVHJ1bXAgY2FtcGFpZ24gKENhcnRlciBQYWdlKS4gCkNvbmNsdXNpb25zOiBMb3cgdXJpbmFyeSBtYWduZXNpdW0gZXhjcmV0aW9uIHdhcyBpbmRlcGVuZGVudGx5IGFzc29jaWF0ZWQgd2l0aCBhIGhpZ2hlciByaXNrIG9mIElIRCBpbmNpZGVuY2UuIEFuIGluY3JlYXNlZCBkaWV0YXJ5IGludGFrZSBvZiBtYWduZXNpdW0sIHBhcnRpY3VsYXJseSBpbiB0aG9zZSB3aXRoIHRoZSBsb3dlc3QgdXJpbmFyeSBtYWduZXNpdW0sIGNvdWxkIHJlZHVjZSB0aGUgcmlzayBvZiBJSEQuClRoZXJlJ3MgYWxzbyBhIGd5bSwgYSBtYXNzYWdlIHJvb20gYW5kIGEgZ3Vlc3QgaG91c2Ugd2l0aCBpdHMgb3duIHJlY29yZGluZyBzdHVkaW8uIE91dHNpZGUgaXMgYSBwb29sIG1vZGVsZWQgYWZ0ZXIgdGhlIG9uZSBhdCB0aGUgRGVsYW5vIGhvdGVsIGluIFNvdXRoIEJlYWNoIGFuZCBhIGZvb3RicmlkZ2UgdGhhdCBsZWFkcyB0byB0aGUgcHJpdmF0ZSBpc2xhbmQsIHdoaWNoIGlzIGFyb3VuZCBhIHF1YXJ0ZXIgb2YgYW4gYWNyZS4gIlRoaXMgaXMgYSBtYWdpY2FsIHNldHRpbmcgZm9yIGEgbW9kZXJuIGhvbWUgICBpdCdzIGJyZWF0aHRha2luZywiIEtlbmNlbCBzYXlzLi4gCk1heWJlIHRvIHRoZW0gaXQgd2FzIGxpa2UgaGVhcmluZyBJIGxpa2UgYmx1ZSBBTkQgZ3JlZW4uIFdoYXQgZG8geW91IGRvIHdpdGggdGhhdCBpbmZvcm1hdGlvbj8gYWNrbm93bGVkZ2UgaXQgYW5kIG1vdmUgb24gSSBndWVzcy4uIApGb3IgZXhhbXBsZSwgRmlyc3QgRnJpZGF5cyBpcyBhIGJpIG1vbnRobHkgb3BlbiBjbGluaWMgZm9yIGVtZXJpdGkvcmV0aXJlZXMgdG8gZ2V0IG9uZSBvbiBvbmUgaGVscCBvbiBzcGVjaWZpYyB0ZWNobm9sb2d5IHByb2JsZW1zLiBKb2luIEJydWluVGVjaCB0byBtZWV0IGZlbGxvdyB0ZWNobm9sb2dpc3RzIGFuZCBjb250cmlidXRlIHRvIHRoZSBncmVhdGVyIGdvb2Qgb2YgSVQgYXQgVUNMQS4gClNob3VsZCB0ZWxsIHRoZSBDemVjaCBSZXB1YmxpYyBhbmQgdGhvc2UgbGlrZSB0aGVtLCB0byB0YWtlIGEgaGlrZSBpbiB0aGUgQ2FycGF0aGlhbnMuIApQbGF5aW5nIGEgNSBoYW5kZWQgMSAyIGhvbWUgZ2FtZSB3aXRoIHNvbWUgbWFuaWFjIHdoYWxlcy4gCldlIHVzZSBhIHZlcnkgaGlnaCBxdWFsaXR5IHNpbmdsZSBzb3VyY2UgdW5maWx0ZXJlZCBvcmFuZ2UgYmxvc3NvbSBob25leSBiZWNhdXNlIHRoZSBsaWdodCBjaXRydXN5IG5vdGUgcmVhbGx5IGVuaGFuY2VzIHRoZSBvdmVyYWxsIGNvbXBvc3VyZSBvZiB0aGUgZGlzaCB3aXRob3V0IGhhdmluZyB0aGUgb3ZlcnBvd2VyaW5nIGNsb3lpbmcgc3dlZXRuZXNzIG9mIHRoZSAiYmVhciBob25leSIgeW91IGNhbiBmaW5kIGluIHRoZSBiaWcgYm94IHN0b3Jlcy4gCkFsc28gcmVtZW1iZXIgeW91IGRvbid0IGhhdmUgdG8gYmUgc3VwZXJ3b21hbiAyNC83IHlvdSBhcmUgYSBodW1hbiwgc29tZSB3ZWVrZW5kIHdvdWxkIHlvdXIgbW90aGVyIGJlIGFibGUgdG8gbWluZCB0aGUga2lkcyBmb3IgeW91IHNvIHlvdSBjYW4gaGF2ZSBzb21lIHRpbWUgZm9yIHlvdXJzZWxmPyBSZW1lbWJlciB5b3UgY2FuIGRvIGl0LCB5b3UgZW5qb3kgdGhlIGpvYiB3aGljaCBpcyBncmVhdCwgYWxsIHRoYXQncyBvZmYgaXMgdGhlIGJhbGFuY2UgYW5kIHRoYXQgY2FuIGJlIGZpZ3VyZWQgb3V0IHdpdGggY29tcHJvbWlzZSBhbmQgcGxhbm5pbmcuLiAKU3BhIHVubGVhc2hlcyBzbmFrZXMgZm9yIHlvdXIgcGFpbnMKUXVhcnRlcmJhY2sgTWlrZSBSZWlsbHkgcmVwb3J0ZWRseSBnb2luZyB0byBCCldlJ3ZlIGhhZCBvdXIgZnVubnkgbW9tZW50cywgYnV0IHdlJ3ZlIGFsc28gaGFkIHNvbWUgc2VyaW91cyBwcm9ibGVtcy4gSSd2ZSBlbmRlZCB1cCBpbiBob3NwaXRhbCB0d2ljZS4gRGVoeWRyYXRpbmcgaW4gMTEwIGRlZ3JlZSBoZWF0IGlzIG5vIGpva2UuIFBvaXNvbm91cyBzcGlkZXIgYml0ZXMgc3VjayBiYWQuIFdlJ3ZlIGFsc28gZW5jb3VudGVyZWQgbWFsYXJpYSwgbnV0IGpvYnMgd2l0aCBndW5zLCBzbmFrZXMsIGNyYXplZCBlbGVwaGFudHMsIHRpY2sgYml0ZSBmZXZlciBhbmQgbWFzcyBmb29kIHBvaXNvbmluZy4KSSBwYWlyZWQgdGhpcyB3aXRoIGEgc2ltcGxlIHZlcnRpY2FsIHRpbWVsaW5lLiAKRm9yIGV4YW1wbGUsIGZvciBhIG5vcm1hbGx5IGRpc3RyaWJ1dGVkIHJhbmRvbSB2YXJpYWJsZSwgRShYKSA9IDAuIFRoaXMgaXMgYSBzdGF0ZW1lbnQgYWJvdXQgdGhlIG51bWJlciB0aGF0IG1pZ2h0IGJlIGluc2lkZSB0aGUgYm94LCBzbyB0aGUgdmFyaWFibGUgaXMgY2FwaXRhbC4gCkkgaGF0ZSB0byBzZWUgd2hhdCB0aGV5IHdpbGwgZG8gd2hlbiB0aGUgcGFyZW50cyBwYXNzIGF3YXkgYW5kIHRoZXkgaGF2ZSB0byBkZWFsIHdpdGggdGhlIGVzdGF0ZS4uIApWaWVsbGVpY2ggYXVjaCBzaWViZW4gSmFocmUsIHdpZSBlcyBiZWkgVGhvbWFzIE1hbm4gYXVmIGRlbSBCZXJnIHp1Z2luZy4gCkhleSwgYWxsISBJIG5vdGljZWQgYSBsb3Qgb2YgcGVvcGxlIGd1ZXNzaW5nIG9uIHRoaXMgbGFzdCB3ZWVrLiBTb3JyeSBteSBhbm5vdW5jZW1lbnQgZGlkbiBkcm9wIHVudGlsIG5vdyB3ZSBoYWQgdG8gZ2V0IG91ciBkdWNrcyBpbiBhIGxpbmUsIHNvIHRvIHNwZWFrLgpEb2VzIHRoZSBmYWN0IHRoYXQgaGVyIGRyZXNzIGlzIGJsYWNrIG5vdyBsaW1pdCBtZSB0byBibGFjayBhbmQgd2hpdGU/IFdoYXQgYWJvdXQgZ3JleT8gSSBhbHNvIHJlYWxseSBsaWtlIHBpbmsgb3hmb3JkIHNoaXJ0cy4gQWxzbyBsaWtlIHdvb2wgdmVzdHMuIApUaGVyZSB3YXMgYSBnaXJsIHRoYXQgcHJvdmlkZWQgQkJCSi4gCkkgbGlrZSB0byB0YWxrIGFib3V0IGhvdyB0aGlzIGlzIHNpbWlsYXIgdG8gcG9rZXIsIGhvdyB0byBwdWxsIHRoaXMgb2ZmIGluIHRoZSByZWFsIHdvcmxkLCBhbmQgaG93IGxlYXJuaW5nIGRpZmZlcmVudCBpbnZlc3Rpbmcgc3RyYXRlZ2llcyBnaXZlcyB5b3UgdGhlIHRvb2xzIGFuZCBvcHBvcnR1bml0aWVzIHRvIGluY3JlYXNlIHlvdXIgaG9sZGluZ3MhCkEgR1RPIHN0cmF0ZWd5IGluIGEgNCBtYXggdG91cm5hbWVudCB3aWxsIGxvb2sgYSBsb3QgZGlmZmVyZW50IHRvIGEgOW1heCBjYXNoIGdhbWUgR1RPIHN0cmF0ZWd5Li4gCklmIGFwcGxpY2FibGUsIHBsZWFzZSBhZGQgYXBwcm9wcmlhdGUgZmxhaXIuIApJdCBpcyBhIGdyZWF0IHBsYWNlIHRvIGxpdmUgZXZlbiBpZiBpdCBpcyBhIGJpdCBncmltIHVwIG5vcnRoIVNpY2shIEltIGN1cnJlbnRseSBidWlsZGluZyBhIDIvNSByb2xsIHdpdGggdGhlIGFpbSB0byBwbGF5IG1heWJlIG9uY2Ugb3IgdHdpY2UgYSBtb250aC4KU2Vhc29uLCB0byB0YXN0ZSwgd2l0aCBzYWx0LiAKUGllcnJlIFBhbiBpcyBhbiBhcHQgbmFtZSBmb3IgdGhlc2UgTG9zdCBCb3lzIGFuZCBHaXJscy4gQWZ0ZXIgYWxsLCBhdCB0aGlzIHBvaW50IG5vIG9uZSBoYXMgYW55IGlkZWEgd2hlcmUgdGhlaXIgZmFtaWxpZXMgYXJlIGluIHRoZSBwb3N0IGVhcnRocXVha2UgY2hhb3MuClRob3VnaCB0aGVyZSBpcyBkaXNhZ3JlZW1lbnQgYXMgdG8gd2hldGhlciBhbm90aGVyIHNldmVyZSBzaG9jayB0byB0aGUgc3lzdGVtIGlzIGxvb21pbmcgKHBlcmhhcHMgaW4gdGhlIGZvcm0gb2YgZm9yZWNsb3N1cmVzKSwgbW9zdCBpbmR1c3RyeSBpbnNpZGVycyB0aGluayBhIHJlY292ZXJ5IGlzIGEgeWVhciBvciB0d28gYXdheS4gRXZlcnlvbmUgYWdyZWVzIG9uIHRoZSBvbmUgdGhpbmcgdGhhdCB3aWxsIHNwdXIgaXQuICJDb21tZXJjaWFsIHJlYWwgZXN0YXRlIG5lZWRzIHRoZSBsYWJvciBtYXJrZXQgdG8gc3RhYmlsaXplIGdyb3d0aCwiIEd5b3Vya28gc2F5cy4gIlJlYWwgZXN0YXRlIG5lZWRzIGJvZGllcy4iCldoZW4gdGhlIFVuaXRlZCBTdGF0ZXMgaGl0cyBJcmFuLCBhbmQgYWxsIEhlbGwgYnJlYWtzIGxvb3NlIGluIHRoZSBNaWRkbGUgRWFzdCwgUnVzc2lhIGFuZCBDaGluYSB3aWxsIHVuaXRlIGFzIHRoZXkgZGlkIGluIGJlYXRpbmcgdGhlIFVuaXRlZCBTdGF0ZXMgaW4gVmlldG5hbSwgYW5kIFJ1c3NpYSBhbmQgQ2hpbmEgd2lsbCBncmFiIGFsbCBvZiB0aGUgTWlkZGxlIEVhc3QncyBvaWwuIEluIG9yZGVyIHRvIGRvIHRoaXMgUnVzc2lhIHdpbGwgc2hvb3QgdGhvdXNhbmRzIG9mIHRoZWlyIG5ldyB6aWcgemFnZ2luZyAxMDAgbWVnYXRvbiBudWNsZWFyIHJvY2tldHMsIHdoaWNoIHNlcGFyYXRlIGludG8gOCBudWNsZWFyIG1pc3NpbGVzIGluIG1pZGFpciBvdmVyIHRoZSBOb3J0aCBQb2xlIGFuZCB0YWtlIG91dCB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhLi4gCkFuZCwgb2YgY291cnNlLCB0aGUgbGFzdCB1cCBjYXJkIGdpdmVzIHRoZSBJcmFuaWFuIGhpcyB0ZW4sIGFuZCAkMS42IG1pbGxpb24gaW4gY2hpcHMuIEEgY291cGxlIG9mIGhvdXJzIGxhdGVyIGhlIGVyb2RlcyBUdW5hJ3MgbGFzdCByZXNlcnZlcyBhbmQgd2lucyBpdCBhbGwuIApFYXRfZWxlY3RyaWNfZGVhdGggIDIgcG9pbnRzICBzdWJtaXR0ZWQgOSBkYXlzIGFnbwpBbmQgc3VyZSwgaXQgc2hvdWxkbiBoYXZlIGhhcHBlbmVkIGFuZCBpdCBzaG91bGQgaGF2ZSBiZWVuIGNhdWdodCBieSBmYWlsIHNhZmVzLiBCdXQgaW4gdGhlIGVuZCBJIHNlZW4gbG90cyBvZiB3ZWlyZCBzdHVmZiBoYXBwZW4gaW4gZGF0YSBjZW50ZXJzLiBXZWxsIEZhcmdvIGhhZCBvbmUgcGFydGlhbGx5IGdvIGRvd24gcmVjZW50bHksIGFuZCB0aGV5IGFyZSBvbmUgb2YgdGhlIG1vcmUgYW5hbGx5IHJldGVudGl2ZSBJVCBkZXBhcnRtZW50cyBJIHdvcmtlZCB3aXRoLiBJIGJlZW4gaW4gZGVhZCBkYXRhIGNlbnRlcnMgd2hlcmUgYSBwb3dlciBjYWJsZSBtZWx0ZWQgaW4gdGhlaXIgVVBTIGFuZCBkcm9wcGVkIGV2ZXJ5dGhpbmcgY29sZC4gQSBjb21wYW55IEkgd29ya2VkIGZvciBoYWQgbGlnaHRuaW5nIGhpdCB0aGVpciBkYXRhIGNlbnRlciBhbmQgZnJ5IGV2ZXJ5IHBpZWNlIG9mIG5ldHdvcmtpbmcgYW5kIHRlbGVjb20gZ2Vhci4gVGhhdCB0b29rIGEgbG9uZyB0aW1lIHRvIHJlY292ZXIgZnJvbS4KQnV0IHRoaXMgaXMgYW4gYXJlYSBJIHdhbnQgdG8gZ3JvdyBpbiA6KSBJIGFsc28gdHJpZWQgd2F0Y2hpbmcgc29hcCBvcHJlYXMgd2l0aCBteSBtb20gYnV0LiAKSG93IG1hbnkgdGltZXMsIHdoaWxlIHdhdGNoaW5nIGEgZmlnaHQsIGhhdmUgeW91IGhlYXJkIGEgdHJhaW5lciB0ZWxsaW5nIGhpcyBmaWdodGVyIGluIHRoZSBjb3JuZXIgYmV0d2VlbiByb3VuZHMgdG8gZG91YmxlIHVwIGhpcyBqYWIgb3Iga2VlcCBoaXMgaGFuZHMgdXAgb3Igc29tZSBzdWNoLCBvbmx5IHRvIGZpbmQgdGhhdCBpbiB0aGUgZm9sbG93aW5nIHJvdW5kIHRoZSBvYnZpb3VzbHkgZ29vZCBhZHZpY2UgaGFzIGZhbGxlbiBvbiBkZWFmIGVhcnM/IFRoZSBib3hlciBnb2VzIHJpZ2h0IG9uIGRvaW5nIHdoYXQgaGUgc2hvdWxkIG5vdCBiZSBkb2luZy4gTW9yZSB0aGFuIG9uY2Ugb3IgdHdpY2UgSSBoYXZlIGJlZW4gcGxlYXNhbnRseSBzdXJwcmlzZWQgdG8gaGVhciBSb2FjaCB0ZWxsaW5nIFBhY3F1aWFvIHRvIGRvIHNvbWV0aGluZyBkaWZmZXJlbnQgaW4gdGhlIG5leHQgcm91bmQsIGFuZCBsbyBhbmQgYmVob2xkLCBQYWNxdWlhbyBkb2VzIGV4YWN0bHkgd2hhdCBoZSBoYXMgYmVlbiB0b2xkLiAKQmUgbGVzcyBpbiB5b3VyIGZhY2UgYWJvdXQgdGhpbmdzLiAKSW4gdGhlIEVhc3QsIHRoZSBtYW50cmEgaXMgInB1cmlmeSB5b3Vyc2VsZiIgb3IgInB1cmlmeSB5b3VyIHFpIi4gVmVyeSBnb29kIGFkdmljZS4gVGhlIEVhc3Rlcm4gY3VsdHVyZXMgKEkgdGhpbmtpbmcgbGFyZ2VseSBvZiBKYXBhbmVzZSBhbmQgQ2hpbmVzZSkgYXJlIGV4Y2VsbGVudCBhdCBzZWxmIHdpbGwuIFRoZXNlIGFyZSBjdWx0dXJlcyBpbiB3aGljaCBzZWxmIGltcHJvdmVtZW50IGFuZCBzZWxmIGN1bHRpdmF0aW9uIGFyZSBoaWdobHkgdmFsdWVkIGFuZCB0YXVnaHQgdG8gY2hpbGRyZW4gZnJvbSBiaXJ0aC4gSW4gb3RoZXIgd29yZHMsIGl0IGVhc3kgZm9yIHNvbWVvbmUgbGlrZSBNYXN0ZXIgS2ltdXJhIHRvIHNpbXBseSBzYXksICJ5b3UganVzdCBuZWVkIHRvIHB1cmlmeSB5b3Vyc2VsZiIuIEluIHRoZSBXZXN0LCB0aGUgd2F5IHRoYXQgV2VzdGVybmVyIChpbiBwYXJ0IHNvbWV3aGF0IGlycmVnYXJkbGVzcyBvZiBvbmUgYWN0dWFsIGN1bHR1cmFsIGJhY2tncm91bmQpIGFwcHJvYWNoIHNlbGYgd2lsbCBhbmQgc2VsZiBjdWx0aXZhdGlvbiBpcyBkaWZmZXJlbnQuCkJlbG93IGFyZSBzb21lIHN0cmV0Y2hlcyBhbmQgbXVzY2xlIHJlbGVhc2UgdGVjaG5pcXVlcyBmb3IgaGlwLCBhYnMsIGFuZCBsb3cgYmFjayBwYWluIHRoYXQgSSBoYXZlIHBlcnNvbmFsbHkgdXNlZCB3aXRoIGdvb2QgcmVzdWx0cy4gRmVlbCBmcmVlIHRvIHNoYXJlIGFuZCB0cnkgdGhlc2UgdGVjaG5pcXVlcywgYnV0IGtlZXAgaW4gbWluZCB0aGF0IHRoZXkgbWlnaHQgbm90IHdvcmsgZm9yIHlvdSBhbmQgYXJlIG5vdCBhIHN1YnN0aXR1dGUgZm9yIG1lZGljYWwgdHJlYXRtZW50LiAKSG93ZXZlciwgdGhlIHBvd2VyIG9mIG11dHVhbCBzdWdnZXN0aW9uIGlzIHZlcnkgc3Ryb25nLCBhbmQgaXQgaXMgZWFzeSB0byBiZWNvbWUgY29udmluY2VkIHRocm91Z2ggY2FzdWFsIGNvbnZlcnNhdGlvbiB0aGF0IHR3byBzaW1pbGFyIGRyZWFtcyBhcmUgaWRlbnRpY2FsLiAKQW1hbnRlYSBzYXlzIGlzIGNvbXBhcmFibGUgdG8gY29jb251dCB3YXRlciBwcmljaW5nLi4gCkluIG5vIGV2ZW50IHNoYWxsIGFueSB1c2VyIHB1Ymxpc2gsIHJldHJhbnNtaXQsIHJlZGlzdHJpYnV0ZSBvciBvdGhlcndpc2UgcmVwcm9kdWNlIGFueSBJbnRlcmFjdGl2ZSBEYXRhIEluZm9ybWF0aW9uIGluIGFueSBmb3JtYXQgdG8gYW55b25lLCBhbmQgbm8gdXNlciBzaGFsbCB1c2UgYW55IEludGVyYWN0aXZlIERhdGEgSW5mb3JtYXRpb24gaW4gb3IgaW4gY29ubmVjdGlvbiB3aXRoIGFueSBidXNpbmVzcyBvciBjb21tZXJjaWFsIGVudGVycHJpc2UsIGluY2x1ZGluZywgd2l0aG91dCBsaW1pdGF0aW9uLCBhbnkgc2VjdXJpdGllcywgaW52ZXN0bWVudCwgYWNjb3VudGluZywgYmFua2luZywgbGVnYWwgb3IgbWVkaWEgYnVzaW5lc3Mgb3IgZW50ZXJwcmlzZS4uIApOb3Qgd29ydGggaXQuIApCbGFjayBmcnVpdCwgYmxhY2sgY2hlcnJ5IGphbSBhbmQgZnJhZ3JhbnQgZGFyayBmbG9yYWxzIHRoYXQgZG92ZXRhaWwgaW50byBhIHdhcm0sIHJvdW5kIGZpbmlzaC4gUm9hc3QgbGFtYiBhbmQgb3IgdHVya2V5IHdvdWxkIGJlIGEgZmluZSBtYXRjaC4gQ2VydGFpbmx5LCBhIG1vcmUgbW9kZXJhdGUgbG9vayBhdCBSaWJlcm8gZGVsIER1ZXJvIGFuZCBUZW1wcmFuaWxsbywgYW5kIGl0IGxvb2tzIGdvb2Qgb24gZXZlcnlvbmUuIFlvdSBjYW4gZWFzaWx5IGNlbGxhciB0aGlzIHRocm91Z2ggMjAyMy4gCkhlcmUgaW4gbmV3cyBsYW5kLCB3ZSd2ZSBhbHdheXMga25vd24gb3BlbiBvZmZpY2VzIGFyZSBncmVhdCBmb3IgdGhlIHB1cnBvc2VzIG9mIHNoYXJpbmcgaWRlYXMsIGZsdSBnZXJtcyBhbmQgaGlnaGx5IHBlcnNvbmFsIGluZm9ybWF0aW9uIHdpdGggeW91ciBjb3dvcmtlcnMuIApIb3dhcmQsIHdobyBwbGF5cyBtdXNpYyBtb2d1bCBMdWNpb3VzIEx5b24gb24gdGhlIEZveCB0ZWxldmlzaW9uIHNlcmllcywgdG9vayB0byBJbnN0YWdyYW0gYW5kIHBvc3RlZCBhIHZpZGVvIG9mIFNtb2xsZXR0IGhvbGRpbmcgYSBnaWdnbGluZyBiYWJ5IGJveSB3aXRoIHRoZSBtZXNzYWdlOiAiQWxsIHlvdXIgbGlsIGhvbWllcyBnb3QgeW91LiBXZSBsb3ZlIHRoZSBoZWxsIG91dHRhIHlvdS4iCkRvIHlvdSBoYXZlIGEgdGltZSBmcmFtZSBpbiBtaW5kPyBPY3RvYmVyIGluIEtvcmVhIGlzIGZhbnRhc3RpYy4gSWYgeW91IGFyZSB1cCBmb3IgZ2V0dGluZyB3ZXQsIHRoZSBmb3VudGFpbnMgaW4gR3dhbmdod2FtdW4gcGxhemEgY291bGQgYmUgZnVuLiAoRWRpdCBub3BlLCBpZiB5b3UgZ29pbmcgaW4gdHdvIHdlZWtzIGl0IGJlIHRvbyBjb2xkISkgVGhlIG11c2V1bSB1bmRlciB0aGUgcGxhemEgaXMgY29vbCBmb3IgYSBxdWljayB2aXNpdC4gVGhleSBoYXZlIGEgZmV3IGtpZCBmcmllbmRseSB0aGluZ3MuIChFbnRyYW5jZSBvbiB0aGUgYmFjayBzaWRlIG9mIEtpbmcgU2Vqb25nIHN0YXR1ZS4pIFdlIHRvb2sgb3VyIHR3byBraWRzIGEgY291cGxlIG9mIHllYXJzIGFnbyBhbmQgaGFkIGEgYmxhc3QsIGJ1dCB0aGV5IHdlcmUgb2xkZXIgKDggYW5kIDEyKS4KMS4gRWZmbGV1cmFnZSAgIG1ha2luZyBsb25nIGFuZCBnbGlkaW5nIHN0cm9rZXMgYWxvbmcgdGhlIGJvZHkuIApTbyB3ZSBhcmUgb3V0c2lkZSBzbW9raW5nIGNvbmVzIGFuZCBJIHRoaW5rIGl0ZCBiZSBhIGJsYXN0IGlmIEkgbGlnaHQgYSBmYXJ0IGp1c3QgYXMgc29tZW9vbmVzIHJpcHBpbmcgSSBvbiB0aGUgYmlsbHkuIEkgZmVlbCBhIGZhcnQgY29taW5nIHNvIGdldCBteSBhbmtsZXMgYnkgbXkgZWFycywgbGlnaHRlciBuZWFyIG15IGJ1bSBhbmQgcHVzaCByZWFsbHkgaGFyZCB0byBnZXQgdGhlIHRpbWluZyByaWdodC4gSXQgc291bmRlZCBsaWtlIHNvbWVvbmUgc3F1ZWVzemluZyBhIGdpYW50IGVtcHR5IGJvdHRsZSBvZiB0b21hdG9lIHNhdWNlLiAKUGljdHVyZTogTUFSSyBKRVNTRVIuIApBdG9tYnVtICAyMiBwb2ludHMgIHN1Ym1pdHRlZCAyIHllYXJzIGFnbwpBbnl0aGluZyBldmVuIGNsb3NlIHRvIHZpc2l0aW5nIHBsYW5ldHMgd291bGQgYmUgYSBoZWF2aWx5IGJ1dGNoZXJlZCB2ZXJzaW9uIG9mIHdhbGtpbmcgb24gYSBzcGFjZSBzdGF0aW9uLCBidXQgd2l0aCBhIHBsYW5ldGFyeSB0ZXh0dXJlIGFwcGxpZWQuIEkgaGlnaGx5IGRvdWJ0IHlvdSBmaW5kIGl0IHRvIGJlIGEgc2F0aXNmYWN0b3J5IGV4cGVyaWVuY2Ugb2YgYW55dGhpbmcgbW9yZSB0aGFuIHZpc2l0aW5nIGEgc3RhcmJhc2UgYW5kIHRyYWRpbmcgd2l0aCBzb21lIHRyYWRlcnMsIHRoYXQganVzdCBsb29rcyBkaWZmZXJlbnQgdGhhbiB0aGUgc2FtZSB0aGluZyBvbiBhIHNwYWNlIHN0YXRpb24uLiAKTXkgc2Vjb25kIHN0b25lLCBJIGFjdHVhbGx5IGRpZG4gcGFzcy4gSSBoYWQgaXQgYnJva2VuIGRvd24gYnkgYSBsYXNlciwgd2hpY2ggd2FzbiB0aGF0IGJhZC4gVGhlIHdvcnN0IHBhcnQgd2FzIHRoYXQgSSBzdGF0aW9uZWQgb24gYSBzbWFsbCBiYXNlIGluIEdlcm1hbnksIGFuZCB3ZSBkb24gaGF2ZSBhIGhvc3BpdGFsLCBzbyB0aGV5IGhhZCB0byBkbyBpdCBpbiBhIEdlcm1hbiBob3NwaXRhbC4gTm8gcGFpbiBtZWRzLCBubyBiZWRzaWRlIG1hbm5lci4gQW5kIHRoZXkgaW5zZXJ0ZWQgYSBzdGludCBpbnRvIG15IHVyZXRlciB0aGF0IGtlcHQgYW55IGJ1aWxkIHVwIG91dCBvZiBteSBraWRuZXlzLiBVbmZvcnR1bmF0ZWx5LCBpdCBjYXVzZWQgbWUgcXVpdGUgYSBiaXQgb2YgcGFpbiBldmVyeSB0aW1lIEkgdXJpbmF0ZWQsIGFuZCBieSB0aGUgdGltZSB0aGV5IHB1bGxlZCBpdCBvdXQgMiB3ZWVrcyBsYXRlciwgSSB3YXMgcGlzc2luZyBibG9vZC4gSnVzdCBibG9vZC4gTm8gdXJpbmUuIFNvIG1vcmFsIG9mIHRoZSBzdG9yeSBpcyBkb24gZ2V0IGEga2lkbmV5IHN0b25lIGluIEdlcm1hbnkuCkZyZWRlcmljayBOZXdzIFBvc3QgKE5ld3NwYXBlcikgICBKdW5lIDcsIDE5ODQsIEZyZWRlcmljaywgTWFyeWxhbmQKT3IsIHlvdSBjYW4gY29udGFjdCB0aGVtIHRocm91Z2ggdGhlIHJldmlld3Mgd3JpdHRlbiBieSB0aGVtLiAKKFRoZSBGaWVzdGEgb3ZlcnN0ZWVycyBsaWtlIGNyYXp5IGZvciBhIEZXRCBjYXIsIGluIGEgZ29vZCB3YXkuKSBPbGRlciBWZWxvc3RlcnMsIGZyb20gd2hhdCBJIGhlYXIsIGRyaXZlIGxpa2UgYSBiYWQgRldEIHVuZGVyc3RlZXJpbmcgc2hpdGJveCBhbmQgdGhleSBkaWRuIGdldCBpdCByaWdodCB1bnRpbCByZWNlbnRseS4gRm9yZCBmaWd1cmVkIG91dCBob3cgdG8gZG8gZnVuLCBjaGVhcCwgc3BvcnR5IGhhdGNoZXMgbG9uZyBhZ28gKEkgaGFkIGEgcmVndWxhciBaWDMgdGhhdCB3YXMgbW9yZSBmdW4gdG8gYmVhdCBvbiB0aGFuIG15IFdSWCkgYW5kIE1hemRhIGxpa2VzIHRoZWlyIGRyaXZpbmcgZHluYW1pY3MuLiAKVGhlIGVpZ2h0IE1pbGxlbm5pdW0gRGV2ZWxvcG1lbnQgR29hbHMgKE1ER3MpICAgd2hpY2ggcmFuZ2UgZnJvbSBoYWx2aW5nIGV4dHJlbWUgcG92ZXJ0eSByYXRlcyB0byBoYWx0aW5nIHRoZSBzcHJlYWQgb2YgSElWL0FJRFMgYW5kIHByb3ZpZGluZyB1bml2ZXJzYWwgcHJpbWFyeSBlZHVjYXRpb24sIGFsbCBieSB0aGUgdGFyZ2V0IGRhdGUgb2YgMjAxNSAgIGZvcm0gYSBibHVlcHJpbnQgYWdyZWVkIHRvIGJ5IGFsbCB0aGUgd29ybGQncyBjb3VudHJpZXMgYW5kIGFsbCB0aGUgd29ybGQncyBsZWFkaW5nIGRldmVsb3BtZW50IGluc3RpdHV0aW9ucy4gVGhleSBoYXZlIGdhbHZhbml6ZWQgdW5wcmVjZWRlbnRlZCBlZmZvcnRzIHRvIG1lZXQgdGhlIG5lZWRzIG9mIHRoZSB3b3JsZCdzIHBvb3Jlc3QuIFRoZSBVTiBpcyBhbHNvIHdvcmtpbmcgd2l0aCBnb3Zlcm5tZW50cywgY2l2aWwgc29jaWV0eSBhbmQgb3RoZXIgcGFydG5lcnMgdG8gYnVpbGQgb24gdGhlIG1vbWVudHVtIGdlbmVyYXRlZCBieSB0aGUgTURHcyBhbmQgY2Fycnkgb24gd2l0aCBhbiBhbWJpdGlvdXMgcG9zdCAyMDE1IGRldmVsb3BtZW50IGFnZW5kYS4uIApUaGUgZGF5IHdpbGwgZmVhdHVyZSBsaXZlIG11c2ljLCBraWRzIGZ1biwgY29va2luZyBkZW1vcyBhbmQgZXhvdGljIGZvb2QuIEZhcm0gdG91cnMgYW5kIHRha2UgaG9tZSBwcm9kdWNlLiAKSSBmcm96ZSBmb3IgYSBzZWMsIHNhaWQgInllcyBob25leSwgaXNuJ3Qgc2hlIGJlYXV0aWZ1bD8iLiAKQWZpbmFsLCBjcmlhciBhbHRlcmFlcyBkZSBlc3RpbG8gZGUgdmlkYSwgcGFydGljdWxhcm1lbnRlIGEgc2VndWlyIGFsZ28gdG8gcGVydHVyYmFkb3IgY29tbyBpbmZpZGVsaWRhZGUgc2VyIGNvbXBsaWNhZG8gcGFyYSBhbWJhcyBhcyBwYXJ0ZXMuIE5vIGVudGFudG8sIGV4aXN0ZW0gYWxndW1hcyBwZXJndW50YXMgcXVlIHZvYyBwb2RlcmlhIGNvbnNpZGVyYXIgY29tYmluYWRhcyBjb20gb2JzZXJ2YWVzIHF1ZSB2b2MgcG9kZSBmYXplciBwYXJhIHZlciBzZSBzZXUgY2FzYW1lbnRvIGVzdCBmaWNhbmRvIG1lbGhvci4uIApPbmUgY29uY2x1c2lvbiBmcm9tIHRoaXMgYXJlIHRoYXQgcGllY2VzIG9mIGFybW9yIHN1Y2ggYXMgdGhlIER1c3Rjb2F0IG9yIE5pbmphIFJhZ3MgY291bGQgZ2FpbiB2YWx1ZSBpZiB0aGV5IG1ha2UgaXQgbW9yZSBsaWtlbHkgZm9yIHRoZSBwbGF5ZXIgdG8gY29sbGFwc2UgZHVlIHRvIHN0b21hY2ggZGFtYWdlIGluIGV4Y2hhbmdlIGZvciBkaW1pbmlzaGluZyBkYW1hZ2UgdG8gdGhlIGhlYWQsIGFzIGNoYW5naW5nIHRoZSB2YWx1ZXMgc28gdGhhdCB5b3UgY2FuIHRha2UgMTAgaGl0cyB0byB0aGUgaGVhZCBhbmQgMTAgdG8gdGhlIGNoZXN0IG1pZ2h0IGJlIHN1cGVyaW9yIHRvIGJlaW5nIGFibGUgdG8gdGFrZSAyMCBoaXRzIHRvIHRoZSBjaGVzdCBhbmQgNiB0byB0aGUgaGVhZC4gCkFueSB3YXkgSSBvbmx5IHdhdGNoIENoYW5uZWwgNSBmb3IgRmlmdGggR2Vhci5CbG9rZSBUd286V2hhdCdzICdGaWZ0aCBHZWFyJyBsaWtlP0Jsb2tlIE9uZTpEb24ndCBrbm93LCBkb24ndCB3YXRjaCBpdC5Ud28gR2FtZXMgdG8gUGxheSBvbiB5b3VyIEZlbGxvdyBDb21tdXRlcnNUaGUgZm9sbG93aW5nIGxpZ2h0IGhlYXJ0ZWQgZ2FtZXMgY2FuIGxpZ2h0ZW4gdXAgZXZlbiB0aGUgd29yc3Qgb2YgY29tbXV0ZXMuIApUaXBzIGZvciBmcmVlemluZyBhbGwga2luZHMgb2YgZm9vZHMKRXZlbiBGYXdsZXkncyBmcmllbmRzIGRpZCBub3QgY2xhaW0gZm9yIGhpbSB0aGF0IGhlIHdhcyBhIGdvb2QgdGVtcGVyZWQgcGVyc29uLi4gCk1yIEZpZWxkIGNhbGxlZCBvbiB0aGUgR292ZXJubWVudCB0byByZWxlYXNlIHZlbnVlIGJ5IHZlbnVlIHN0YXRpc3RpY3MgbW9udGhseS4uIAoidGhlcmUgd2FzbiBlbm91Z2ggZXZpZGVuY2UgdG8gbGVnYWxseSBjb252aWN0IiBhbmQgImlmIHRoZXJlIHdhcyBlbm91Z2ggZXZpZGVuY2UsIGl0IHN0aWxsIHdhc24gZW5vdWdoIHRvIG1lZXQgdGhlIGJleW9uZCBhIHJlYXNvbmFibGUgZG91YnQgc3RhbmRhcmQiKS4gCkl0cyBib2FyZCB2b3RlZCBpbiBlYXJseSBKdW5lIHRvIHNodXQgZG93biwgYW50aWNpcGF0aW5nIHRoYXQgc3RhdGUgaGlnaGVyIGVkdWNhdGlvbiByZWd1bGF0b3JzICAgY2l0aW5nIGEgbG9uZyBsaXN0IG9mIGZpbmFuY2lhbCBjb25jZXJucyAgIHdvdWxkIHNvb24gc2VuZCBhIG5vdGljZSBvZiBub25jb21wbGlhbmNlIGFuZCBzZWVrIHRvIHJldm9rZSB0aGUgc2Nob29sJ3MgbGljZW5zZS4uIApFdmVuIGlmIGEgbGV2ZWwgb25seSBleGlzdHMgaW4gb25lIGRhdGFwb2ludCAoZXhhbXBsZTogb25seSAxIHJvdyB3aXRoICJHcmVlbmxhbmQiLCB5b3UgY2FuIHN0aWxsIHVzZSBpdC4gCk15IG1lc3NhZ2VzIGFyZSBwcm9iYWJseSB0ZXJyaWJsZSB0b28gICBidXQgeWVhaCwgSSB0aGluayB5b3VycyBhcmUgYmFkLgpHYW1pbmcgZml0IGZvciBhIGtpbmcgYW5kIHF1ZWVuLCBpbmRlZWQhRW5qb3kgb3VyIHN1cGVyIHNlbGVjdGlvbiBvZiBmdW4gYW5kIGdhbWVzIU92ZXIgNTUwIGNhc2lubyBnYW1lcyBvbiBvZmZlckVuam95IG91ciBzdXBlciBzZWxlY3Rpb24gb2YgZnVuIGdhbWVzISAzMlJlZDogb3ZlciA1NTAgY2FzaW5vIGdhbWVzIG9uIG9mZmVyIEdpdmVuIHRoYXQgdmFyaWV0eSBpcyB0aGUgJ3NwaWNlIG9mIGxpZmUnLCBhdCAzMlJlZCwgb3VyIHBsYXllcnMgYXJlIHNwb2lsZWQgZm9yIGNob2ljZS4gT2ZmZXJpbmcgYSBnYW1lcyBsb2JieSB0aGF0IGlzIE1pY3JvZ2FtaW5nIGV4Y2x1c2l2ZSwgdGhlIGZhY3QgdGhhdCB0aGVyZSBhcmUgYXQgbGVhc3QgMzIwIHNsb3RzLCBhcyB3ZWxsIGFzIG92ZXIgMjAwIHZhcmlhbnRzIG9mIHRhYmxlIGdhbWVzIG9uIG9mZmVyLCBtZWFucyB0aGF0IGVhY2ggcGxheWVyIHdpbGwgaGF2ZSBib2F0IGxvYWRzIG9mIGdhbWVwbGF5IGxlZnQgdG8gZXhwbG9yZSBvbiBhbnkgZ2l2ZW4gZGF5LiAKTGltaXQgcG9rZXIgaXMgcmVjb21tZW5kZWQgZm9yIGJlZ2lubmVycyB3aGVyZSBhIHNldCBhbW91bnQgaXMgYmV0LiAKSSBhbSBhIHByb2R1Y3Qgb2YgdGhlIGVhcmx5IHBva2VyIGJvb20uIEFuZCBwbGF5ZWQgYSBsb3Qgb2YgcG9rZXIgc3RhcnMgZnVsbCB0aWx0IGFuZCBhbGwgdGhlIGdvb2Qgb25lcyBwcmlvciB0byBCbGFjayBGcmlkYXkuIEkgZG9uJ3QgdGhpbmsgR2xvYmFsIFBva2VyIGlzIGEgc2NhbS4gCkkgdGhpbmsgeW91ciBiaWdnZXN0IHByb2JsZW0gaGVyZSBpcyB5b3UgYXJlIHZlcnkgcGFzc2l2ZS4gClRvIGJlIGEgZ3JhbmQgcG9rZXIgcGxheWVyLCB0aGUgaGlnaGxpZ2h0ZWQgdGlwcyBiZWxvdyBhcmUgZXNzZW50aWFsIGluIHlvdXIgZ2FtYmxpbmcgbGlmZSBhbmQgd2lsbCBoZWxwIHlvdSB0byBzdXJ2aXZlIGF0IENsdWJXUFQuIApBZ2VuZGFzIGNhbiBiZSBmYXIgcmVhY2hpbmcsIGFuZCBldmVyeSBub3cgYW5kIGFnYWluLCBoYXZlIHNvbWV3aGF0ICJ0YWludGVkIiByZXN1bHRzIHRocm91Z2ggSGlzdG9yeS4gQ2hyaXN0aWFucyBjYW4gYW5kIERPIGluZGVlZCBtYWtlIGdvb2Qgc2NpZW50aXN0cywgcGFydGljdWxhcmx5IHRob3NlIHdobyB3b3VsZCBwdXJwb3J0IHRvIGJlIHBvbGl0aWNhbGx5IGluY2xpbmVkLiAKSXQgbm91cmlzaGVzIHRoZSBoZWFydCBibG9vZCwgbWFraW5nIGl0IGEgZ29vZCBzdXBwbGVtZW50IHRvIGhlcmJhbCB0aGVyYXB5LiAKU3RpZmZuZXNzIGFuZCBmYXRpZ3VlIGR1ZSB0byBvdmVyd29ya2luZyBjYXVzZSB0b3hpYyBzdWJzdGFuY2VzIHRvIGJ1aWxkIHVwIGluIG91ciBtdXNjbGVzLiAKKEkgc2VlbiBtYW55IGV4YW1wbGVzIG9mIHRoaXMgc29ydCBvZiBiaXphcnJlIHRpdGxlL2NvbnRlbnQgY29udGludWl0eSwgc28gSSB0aG91Z2h0IGl0IGEgcG9zc2liaWxpdHkuKSBCdXQgdGhlIHN0b3J5IGhlcmUgaXMgZGVsaXZlcmVkIGJ5IHRoZSBTdGFuZGFyZCBPaWwgQ29tcGFueSBvZiBOZXcgSmVyc2V5IGFuZCBkZXRhaWxzIHRoZWlyIHByb3BlcnRpZXMgYmVpbmcgbmF0aW9uYWxpemVkIHNxdWVlemVkIGJ5IHRoZSBnb3Zlcm5tZW50IG9mIE1leGljbyBpbiAxOTM4LiBJdCBpcyBvbmUgb2YgYSBzZXJpZXMgb2YgcGFtcGhsZXRzLCBhbmQgaXQgZXZpZGVudGx5IHN1Y2tlZCB1cCBldmVyeSBiaXQgb2YgY3JlYXRpdml0eSBhdCBTdGFuZGFyZCBPaWw6IFRoZSBRdWVzdGlvbiBvZiBTdWJzb2lsIFJpZ2h0cyBpbiBNZXhpY28gYW5kIFRoZSBBY2N1c3RvbWVkIFByYWN0aWNlcyBpbiBDYXNlcyBvZiBFeHByb3ByaWF0aW9uIGFuZCBDb25maXNjYXRpb24gYXJlIHR3byB0aXRsZXMgdGhhdCBkZWxpdmVyIHRoZSBjb250ZW50cyBnb29kIGFjY3VyYXRlbHkgYW5kIGRyeWx5LiBUaGlzIHNpbmdsdWFybHkgdGl0bGVkIHdvcmsgYWxzbyBoYXMgY2hhcHRlciBoZWFkaW5ncyB0aGF0IGVxdWFsbHkgbG92ZWx5IGFuZCBiaXphcnJlOiAiVGhlIFJldm9sdXRpb25hcnkgU3F1ZWV6ZSIsICJUaGUgQ29uc3RpdHV0aW9uYWwgU3F1ZWV6ZTosICJUaGUgQ29uY2Vzc2lvbiBTcXVlZXplIiwgIlN0cmFuZ2xpbmcgdGhlIEdvb3NlICJhbmQgb3RoZXIgZm9ydGlmaWVzIHRoZSByZWFkZXIgd2l0aCB0aGUgcG9zc2liaWxpdHkgb2YgYSBzdXJyZWFsIGV4cGVyaWVuY2UuIApTbyB5b3UgZ2V0IHRoZSBlbmpveW1lbnQgb2YgYmVpbmcgaW4gYSBncm91cCBhY3Rpdml0eSwgYnV0IHRoZSBzb2NpYWwgYXNwZWN0IGlzIGxpbWl0ZWQgdG8gdGhlIG9kZCBzdG9wL2NvZmZlZSBicmVhayEuIApUaGUga2lkIGRyaW5raW5nIHNvdXAgc291bmRlZCBsaWtlIGEgZ3V5IHNsdXJwaW5nIHVwIHRoZSBsYXN0IHJlbW5hbnRzIGZyb20gYSBjb2tlIGNhbiB3aXRoIGEgc3RyYXcuUmF2aW5lICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvVGhlcmUgd2FzbiBtdWNoIG5hcnJhdGl2ZSB0byB0aGUgdmlkZW8uIApBIGRvZyBtYWpvcml0eSB3b3VsZCBjaGFuZ2UgZm9vZCBidXlpbmcgaGFiaXRzLCBjcmVhdGluZyBhIHJpc2luZyBkZW1hbmQgZm9yIHJhdyBtZWF0IG1lbnVzIGFuZCBhIHJlZHVjdGlvbiBpbiB0aGUgY3VycmVudCBjb25zdW1wdGlvbiBvZiBzbW9vdGhpZXMgYW5kIHZlZ2dpZXMuIFZldGVyaW5hcnkgc2Nob29scyB3b3VsZCBwcm9saWZlcmF0ZS4gV2UgbWlnaHQgc2VlIGdyb29taW5nIHRha2VuIHRvIGEgbmV3IGxldmVsLiAKQydlc3QgYmllbiB0b21iLCBjJ3RhaXQgdW4gcmVzdGF1cmFudCBkZSB1ZG9uIChwdGVzIGRlIGJsIHBhaXNzZXMpIHRvdXQgIGZhaXQgZGxpY2lldXgsIGF2ZWMgZGVzIHVkb24gY3VpdGVzIGRhbnMgdW5lIHNvdXBlIG1pc28gZXQgc2VydmllcyBkYW5zIHVuZSBzb3J0ZSBkZSBjb2NvdHRlIGVuIHRlcnJlLiAKT3ZlcnZpZXcgZm9yIHJhaW5ib3d0YXN0aWNhbApTbywgdGhlIG51bWJlciBvZiB3YXlzIHRvIGdldCB0aGUgcXVlZW4gaXMgMiBDIDEgMSBvciAyLCBhbmQgdGhlIG51bWJlciBvZiB3YXlzIHRvIGRyYXcgdGhlIHNhbWUgdHdvIGNhcmRzIGlzIDIgQyAyICwgb3IgMS4gT3VyIHRvdGFsIG51bWJlciBvZiB3YXlzIHRvIGRyYXcgMiBjYXJkcyBmcm9tIDQ3IGlzIDQ3IEMgMiAsIG9yIDEwODEuIFNvLCB0aGUgb2RkcyB0aGF0IHdlIGdldCBlaXRoZXIgdGhlIG90aGVyIHF1ZWVuIG9yIHRoZSBvdGhlciB0d28gY2FyZHMgaXMgMy8xMDgxLiAKVW5mb3J0dW5hdGVseSBoZSBzcG9rZSBoYXJkbHkgYW55IEVuZ2xpc2gsIGJ1dCB3aGVuIFdlbmRpIHdlbnQgdG8gdGhlIGJhdGhyb29tLCBJIHdhcyBwcmV0dHkgc3VyZSB0aGF0IGhlIGhhZCBpbnZpdGVkIHVzIHRvIHNsZWVwIGF0IGhpcyBob3VzZS4gSSB3YXMgYSBsaXR0bGUgZW1iYXJyYXNzZWQgdG8gY2xhcmlmeSB0aGlzICh3aGF0IGlmIHRoYXQgaXMgbm90IHdoYXQgaGUgaGFkIGFza2VkIG1lPyEpIGJ1dCBieSBtaW1pbmcgYW5kIHdpdGggaGlzIGxpbWl0ZWQgRW5nbGlzaCBhbmQgb3VyIGxpbWl0ZWQgVHVya2lzaCwgd2UgcmVhbGl6ZWQgdGhhdCBoZSByZWFsbHkgaGFkIGludml0ZWQgdXMuIFdlbGwgdGhlIHNwZWVkaW5nIHRpY2tldCBoYWQgcHV0IGEgZGVudCBpbiBvdXIgcG9ja2V0IHNvIHdlIHRob3VnaHQgIldoeSBub3Q/IiBhbmQgd2UgYWxsIGRyb3ZlIHRvIGhpcyBob3VzZS4uIAooUk5OKSAgIFRoZXJlIGFyZSBubyBncmVhdCBnYW1lcyBsaWtlIHRoZXJlIHdlcmUgbGFzdCB3ZWVrLCBidXQgbWFueSB0aGlzIHdlZWsgYXJlIHByZXR0eSBnb29kLiBBbmQgYWxsIGJ1dCBvbmUgYXJlIGNvbmZlcmVuY2UgZ2FtZXMsIHNvIHRoZXkgbWVhbiBzb21ldGhpbmcuCldldCBncm91bmQgYWxzbyBoYXMgbW9yZSBjb25kdWN0aXZpdHkgYW5kIHlvdSB3aWxsIGJlIGFibGUgdG8gZmluZCBpdGVtcyB0aGF0IGFyZSBkZWVwZXIgdGhhbiBpZiB0aGUgZ3JvdW5kIHdlcmUgZHJ5LiBUaGUgc2FuZHMgb2YgYW4gb2NlYW4gYmVhY2ggYXJlIGRpc3R1cmJlZCBhbmQgcm9sbGVkIG92ZXIgYnkgaGVhdnkgc3Rvcm1zIGFuZCBvZnRlbiB1bmNvdmVycyB0YXJnZXRzIHRoYXQgd2VyZSBwcmV2aW91c2x5IHRvbyBkZWVwIHRvIGxvY2F0ZS4gCkknbSBhIG1vbSBvZiB0d28gaW4gYSBzdGFibGUsIG1hcnJpZWQgcmVsYXRpb25zaGlwLiBMZWF2ZS4gU2F2ZSB5b3Vyc2VsZi4gU2hlIG1heSBiZSBhIGdyZWF0IHBlcnNvbi9zbW9raW5nIGhvdC9vdXQgb2YgeW91ciBsZWFndWUsIGJ1dCBzaGUgaXNuJ3QgbGlrZWx5IGdyZWF0IGVub3VnaCBmb3IgYW55b25lLCBpbmNsdWRpbmcgeW91LCB0byBzYWNyaWZpY2UgdGhlaXIgdHdlbnRpZXMgYW5kIHRoaXJ0aWVzIGZvciAoYXMgd2VsbCBhcyB0aGUgZHJlYW1zIHlvdSBtaWdodCBoYXZlIG9mIGhhdmluZyBzdGFibGUgbWluZGVkIGtpZHMgb2YgeW91ciBvd24pLiBCZSBwcmVwYXJlZCwgdGhvdWdoLCBmb3IgaGVyIHRvIHJhaXNlIGhlbGwgaWYgeW91IHRyeSB0byBiYWNrIG91dC4gU2hlIGlzIHByb2JhYmx5IGZlZWxpbmcgbHVja3kgYXMgaGVsbCB0byBoYXZlIGZvdW5kIHlvdSAoc2luY2Ugbm8gb3RoZXIgZ3V5IHdvdWxkIGxpa2VseSB0b2xlcmF0ZSBldmVuIGEgZnJhY3Rpb24gb2Ygd2hhdCB5b3UgaGF2ZSkgYW5kIHdoZW4gc2hlIGtub3dzIHNoZSdzIGFib3V0IHRvIGxvc2UgeW91LCB0aGVyZSBtYXkgYmUgbm8gbGltaXRzIHRvIHdoYXQgc2hlIHNheXMgb3IgZG9lcyB0byBrZWVwIHlvdSBhcm91bmQuIFNoZSBtYXkgZ3VpbHQgeW91LiBTaGUgbWF5IHRocmVhdGVuIHlvdS4gU2hlIG1heSBzYXkgdGhpbmdzIHRvIHVuZGVyY3V0IHlvdXIgY29uZmlkZW5jZSBhbmQgdHJ5IHRvIG1ha2UgeW91IHRoaW5rIHRoYXQgc2hlJ3MgdGhlIGJlc3QgeW91J2xsIGJlIGFibGUgdG8gZ2V0LiBJdCBtYXkgYmUgc3VidmVyc2l2ZSBhbmQgbWFuaXB1bGF0aXZlLCBvciBpdCBtYXkgYmUgb3ZlcnQgICBidXQganVzdCBiZSBwcmVwYXJlZCEgSSBoYXZlIHNlZW4gc2luZ2xlIG1vbXMgaW4gdGhpcyBzaXR1YXRpb24gYW5kIHNoaXQgY2FuIGdldCBjcmF6eSB3aGVuIHRoZSBCRiB0cmllcyB0byBsZWF2ZS4gU2VyaW91c2x5LCBnZXQgb3V0LCBhbmQgd2F0Y2ggeW91cnNlbGYuIEdvb2QgbHVjay4KWW91ciBtYWluIGNoYWxsZW5nZSB3aWxsIGJlIGdldHRpbmcgb3V0IG9mIFNvY2FsIGJlZm9yZSBpdCBnZXRzIHF1aXRlIGhvdCBpbiBsYXRlIEp1bmUvSnVseSBhbmQgdGhlbiBzdGlsbCBoYXZpbmcgdGltZSB0byBnZXQgdG8gQ2FuYWRhIGJlZm9yZSBPY3RvYmVyLiBZb3Ugd29uIGhhdmUgdGltZSB0byBsb2xsaWdhZyBpbiBTb2NhbCwgYnV0IHlvdSB3aWxsIG5lZWQgdG8gZG8geW91ciB2ZXJ5IGJlc3QgdG8gYXZvaWQgdGltZSBzdWNraW5nIGluanVyaWVzIHdoaWxlIHlvdSBhcmUgc3RpbGwgZmluZGluZyB5b3VyIGxlZ3MuClRoZSB0b3AgdHdvIGNvbnRlc3RhbnRzIHJlY2VpdmUgZnVuZGluZyB0byBzdXBwb3J0IHRoZWlyIHJlc2VhcmNoLiAKRWNob2VzIGFjdCAzIG1ha2VzIHRoZW0gaW1tb2JpbGUuIApFbWlseSdzIE9uIFRoZSBSb2FkIEFnYWluCk5hbnRvbiBwbGF5ZWQgYSBncmVhdCBnYW1lLCB0aGVpciBkZWZlbmNlIG1lbiB3ZXJlIGNoYWxsZW5nZWQgYW5kIHJvc2UgdG8gdGhlIG9jY2FzaW9uLiBTdGFsbGlvbnMgZ29hbHRlbmRlciBwbGF5ZWQgYW4gb3V0c3RhbmRpbmcgZ2FtZSwgbWFraW5nIHNvbWUgYW1hemluZyBzYXZlcy4gCkJlIHJhdGlvbmFsIGFuZCB1bmRlcnN0YW5kaW5nIGFib3V0IHRoZSBjaXJjdW1zdGFuY2UuaSB0aGluayBob3dldmVyIHRoYXQgcGVvcGxlIGFyZSBleHBlY3RpbmcgdG9vIG11Y2ggbm93YWRheXMuIApDYXJsaW4sIHdobyBjb21lcyBmcm9tIGEgZmFtaWx5IG9mIG1lZGljYWwgcHJhY3RpdGlvbmVycywgaGFkIGEgc3VjY2Vzc2Z1bCBjYXJlZXIgYXMgYSBwcm9mZXNzb3Igb2Ygc3VyZ2VyeSBhdCBXYXNoaW5ndG9uIFVuaXZlcnNpdHkgaW4gU3QuIApJbiAxOTU3LCBoZSBlYXJuZWQgYSBkb2N0b3JhdGUgaW4gY2hlbWlzdHJ5IGF0IGFnZSAyNCBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFNvdXRoZXJuIENhbGlmb3JuaWEsIHdoZXJlIGhlIGJyaWVmbHkgdGF1Z2h0Li4gCkFueXdheSByZW1pbmQgbWUgbmV2ZXIgdG8gcG9zdCBhZnRlciB3YWtpbmcgdXAgaW4gdGhlIG1vcm5pbmcuLiAKUmVpZmUgTWV0YXN0YXNlbiByZWllbiBzaWNoIGxvcyB1bmQgdmVydGVpbGVuIHNpY2ggaW0gZ2VzYW10ZW4gS3JwZXIsIHdvIHNpZSBzaWNoIGFuIGVpbmVyIFNjaHdhY2hzdGVsbGUgbmllZGVybGFzc2VuIHVuZCB3ZWl0ZXIgd2FjaHNlbi4gCkZvciB0aGUgZXhwZXJpbWVudCwgcmVzZWFyY2hlcnMgYXQgdGhlIGluc3RpdHV0ZSBnYXRoZXJlZCB0d28gdHlwZXMgb2YgbWFsZSBtaWNlLiBTb21lIHdlcmUgc3Ryb25nIGFuZCBhZ2dyZXNzaXZlOyB0aGUgb3RoZXJzIHdlcmUgbGVzcyBzby4gVGhlIGFscGhhIG1pY2UgZ290IHByaXZhdGUgY2FnZXMuIE1hbGUgbWljZSBpbiB0aGUgd2lsZCBhcmUgdGVycml0b3JpYWwgbG9uZXJzLiBTbyB3aGVuIHRoZW4gdGhlIHB1bmllciBtaWNlIHdlcmUgbGF0ZXIgc2xpcHBlZCBpbnRvIHRoZSBzYW1lIGNhZ2VzIGFzIHRoZSBhZ2dyZXNzaXZlIHJvZGVudHMsIHNlcGFyYXRlZCBvbmx5IGJ5IGEgY2xlYXIgcGFydGl0aW9uLCB0aGUgYmlnIG1pY2UgYWN0ZWQgbGlrZSB0aHVncy4KU2hvcnQgZGF5cywgbG9vb25nIGx1bmNoZXMgYW5kIG91dCB0aGUgZG9vciB0aGUgc2Vjb25kIG9uZSBvZiB1cyBsZWF2ZXMuIApOb3cgd2hlbiB5b3UgZmVlbCBmYWlybHkgYmFsYW5jZWQgd2hpbGUgc3RhbmRpbmcgb24gb25lIGxlZywgdHJ5IGNsb3NpbmcgeW91ciBleWVzLiBTZWUgaG93IGxvbmcgeW91IGNhbiBzdGFuZCB0aGVyZSBvbiBvbmUgbGVnIHdpdGggeW91ciBleWVzIGNsb3NlZC4gWW91IHNob3VsZCBiZSBhYmxlIHRvIGdvIDEgbWludXRlIG9wdGltYWxseS4gU3RhcnQgd2l0aCBzaG9vdGluZyBmb3IgMzAgc2VjIGdvYWxzIGFuZCB3b3JrIHVwLiBZb3Ugd29uJ3QgYmUgYWJsZSB0bywgYnV0IHRoYXQgaXMgb2theS4gSXQgd2lsbCBnZXQgYmV0dGVyLgpFbGxlIGVzdCBsYSBzdGFyIGQnSGlwcG9jcmF0ZSwgbGEgc3JpZSBkZSBUaG9tYXMgTGlsdGkgc3VyIGwndW5pdmVycyBob3NwaXRhbGllci4gRGFucyB1biBsb25nIGVudHJldGllbiAgVGxyYW1hLCBsJ2FjdHJpY2UsIHBldSBjb21wbGV4ZSwgZXhwbGlxdWUgbmFubW9pbnMgcXUnZWxsZSB1biB0b3VybmFnZSBvIGVsbGUgcmlzcXVhaXQgZCd0cmUgdHJvcCBleHBvc2UuIERhbnMgdW4gbG9uZyBlbnRyZXRpZW4gIFRscmFtYSwgbCdhY3RyaWNlLCBwZXUgY29tcGxleGUsIGV4cGxpcXVlIG5hbm1vaW5zIHF1J2VsbGUgdW4gdG91cm5hZ2UgbyBlbGxlIHJpc3F1YWl0IGQndHJlIHRyb3AgZXhwb3NlLiJKZSBtZSBzZXJzIGRlIG1vbiBjb3JwcyBjb21tZSB1biBzY3VscHRldXIgc2Ugc2VydmlyYWl0IGQndW5lIG1hdGlyZS4iIExvdWlzZSBCb3VyZ29pbiwgZXggbWlzcyBtdG8gZGV2ZW51ZSBhY3RyaWNlIHBsdXJpZWxsZSwgYXVzc2kgIGwnYWlzZSBkYW5zIGxlcyBmaWxtcyBkJ2F1dGV1cnMgcXVlIGxlcyBjb21kaWVzIGdyYW5kIHB1YmxpYyB2b3F1ZSBzYSB2aXNpb24gZHUgbXRpZXIgZXQgZGUgbCdhcnQgZGFucyBUbHJhbWEuIApSb2d1ZWtuaXRzICAxNyBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KSSB0aGluayB0aGUgb25seSBjYXNlIHRoYXQgZXZlbiBjb21lcyB0byB0aGF0IGluIEJyYXppbCBpcyB0aGUgbGFuZGxlc3MgbW92ZW1lbnQgICB3aGljaCBJIGFtIHN1cnByaXNlZCB5b3UgZGlkbiB1c2UgaW4geW91ciByZXRvcnQgICBidXQgdGhlbiBhZ2FpbiB3ZSBjb3VsZCBkaXNjdXNzIGZvciBob3VycyB3aGV0aGVyIG9yIG5vdCB1bnByb2R1Y3RpdmUgbGFuZCB3YXMgYSBtZWFucyBvZiBwcm9kdWN0aW9uIHRvIGJlZ2luIHdpdGgsIGFuZCB3aGV0aGVyIG9yIG5vdCBsb3NpbmcgYSBwcm9wZXJ0eSB5b3UgaGF2ZW4gdXNlZCBmb3IgeWVhcnMgcmVhbGx5IGlzIGV4cHJvcHJpYXRpb24uIFJlZ2FyZGxlc3MsIGxhbmQgaGFzIGdvdHRlbiBNT1JFIGNvbmNlbnRyYXRlZCBpbiB0aGlzIHBlcmlvZCwgc28uIG5vIHNvY2lhbGlzbSB0aGVyZSBlaXRoZXIuCkxpc2JldGhoaCAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpZb3Ugc2hvdWxkIG5ldmVyIHRha2UgdGhlIGRydWcgbG9uZyB0ZXJtLiAod2lzaCBJIGtuZXcgdGhpcyBiZWZvcmUpLiAKVGhpcyB3YXMgSnVuaW9yIHllYXIuIApSaWdodCBub3csIEkgYmFjayBob21lIGZvciBhIHdoaWxlIGFuZCBwb2tlciBoYXMgdGFrZW4gb3ZlciBtZSBhZ2Fpbi4uIAonVHJhaW5pbmcgU3dhcCcgd2l0aCBOZXRiYWxsIDE1MC4KUGxlYXNlIGRvbid0IGJlIGFuIGFzc2hhdCB0byBvYnZpb3VzIG5ldyBwbGF5ZXJzCkl0IHdvdWxkIGJlIHRvbyBub3RpY2VhYmxlLiBJbnN0ZWFkLCB0aGlzIHRlbGwgdHlwaWNhbGx5IGluZGljYXRlcyBuZXdlciBwbGF5ZXJzIHdobyBoYXZlIHRyb3VibGUgaG9sZGluZyBpbiB0aGVpciBlbW90aW9ucy4gRXhwZWN0IGFjZXMsIHNldHMsIG9yIG90aGVyIGh1Z2UgaGFuZHMgd2hlbiBzb21lb25lIGJldHMgd2l0aCBzaGFraW5nIGhhbmRzLls3XS4gCklmIHlvdSBzZWxsIENsYXkgUG9rZXIgQ2hpcHMgYW5kIENsYXkgUG9rZXIgQ2hpcHMgU2V0cyBvbmxpbmUsIGl0IGlzIGxpa2VseSB0aGF0IGFsbCBidXNpbmVzcyB3aWxsIGJlIGNvbmR1Y3RlZCBvbiB0aGUgaW50ZXJuZXQsIGFuZCB0aGlzIHdpbGwgbm90IGJlIHBvc3NpYmxlLiAKSGUgaW1wbGVtZW50ZWQgYSBsb3Qgb2YgbGF3cyBhbmQgcmVmb3JtcyB3aGljaCBmYXZvdXJzIHRoZSBhbWVyaWNhbiBwb3B1bGF0aW9uIGludGVyZXN0cy4gVGhlIG5hdGlvbmFsIGRlYnQgYW5kIGJ1ZGdldCBkZWZpY2l0IGlzIGxpa2VseSBhbiBhcmVhIHdoaWNoIHdpbGwgYmUgbW9yZSBmb2N1c2VkIG9uIGluIHRoZSBpbmNvbWluZyBjb3VwbGUgb2YgeWVhcnMsIEkgZ3Vlc3MuIEV2ZXJ5IHBvbGl0aWNhbCBhcmVhIGNhbiBiZSBwcmlvcml0aXplZCBzaW11bHRhbmVvdXNseSwgaXQgYWxsIGFib3V0IHByaW9yaXRpemluZyBwcm9wZXJseSBiYXNlZCBvbiB0aGUgY3VycmVudCBzb2NpZXRhbCBzaXR1YXRpb24uLiAKSSBhbSBvbiB0aGUgYmlnIGJsaW5kLiAKVGhlIFBhdHJpb3RzIGFuZCBCcmFkeSBwZXJtaXR0ZWQgR3VlcnJlcm8gdG8gY29udGludWUgdHJlYXRpbmcgcGxheWVycyBhbmQgVEIxMiBjbGllbnRzIGR1cmluZyBhIDE0IG1vbnRoIHN0YXRlIGludmVzdGlnYXRpb24gaW50byBhbGxlZ2F0aW9ucyBoZSB3YXMgcHJhY3RpY2luZyBwaHlzaWNhbCB0aGVyYXB5IHdpdGhvdXQgYSBsaWNlbnNlLiBIZSB3YXMgY2xlYXJlZCBsYXN0IHllYXIgaW4gYSBsZXR0ZXIgaW5zdHJ1Y3RpbmcgaGltIHRvIGFiaWRlIGJ5IHN0YXRlIHJlZ3VsYXRpb25zIGluIHN1cGVydmlzaW5nIGxpY2Vuc2VkIHRoZXJhcGlzdHMgYXQgdGhlIFRCMTIgY2VudGVyLi4gClJwb25kcmUgIGNlIGNvbW1lbnRhaXJlIExhIHNlbWFpbmUgZCd1bmUgZ291cm1ldHRlClBlb3BsZSBhcmUgcnVkZSBhcyBoZWxsIGluIE5ldyBZb3JrLCBidXQgaXQgaGFzIHNvIG11Y2ggbGlmZSBhbmQgcGVyc29uYWxpdHkgSSBmb3JnaXZlIGZvcmdpdmUgaXQuIE5ldyBKZXJzZXkgaXMgYSBzbm9yZSwgQmFsdGltb3JlIGlzIGJsZWgsIHNhbWUgd2l0aCBtb3N0IG9mIE9oaW8uIEFic29sdXRlbHkgbG92ZWQgdGhlIHVwcGVyIE5vcnRoZWFzdCBjb3JuZXIgdGhvdWdoLgpBdSByZWdhcmQgZGVzIGV4cHJpZW5jZXMgZGogbWVuZXMgZW4gbGEgbWF0aXJlIHN1ciBkaWZmcmVudHMgcG9pbnRzIGR1IGdsb2JlLCBvbiBlc3QgdGVudHMgZGUgZGlyZSBxdSd1bmUgZm9pcyBkZSBwbHVzLCBsYSBGcmFuY2UgYXJyaXZlIGFwcnMgbGEgYmF0YWlsbGUsIG1tZSBzaSBjZWxsZSBkZSBsJ2NvbG9naWUsIGVzcHJvbnMgbGUsIG4nZXN0IHBhcyBwZXJkdWUuIEFsb3JzIHBsdXR0IHF1ZSBsZSB2b2NhYmxlICBpbm5vdmFudCAsIHF1aSBkZXZpZW50IGluZGlnZXN0ZSB0YW50IGlsIGVzdCBtaXMgIHRvdXRlcyBsZXMgc2F1Y2VzLCBhdXNzaSBpbmRpZ2VzdGUgcXVlICBkdXJhYmxlICwgIGJpbyAgb3UgZW5jb3JlICBwcnN1bSAgbG9yc3F1ZSBsZXMgbWRpYXMgcGFybGVudCBkJ3VuIGNvdXBhYmxlLCBvdSBkJ3VuZSB2aWN0aW1lLCBwZXV0IHRyZSBkZXZyaW9ucyBub3VzIG5vdXMgY29udGVudGVyIGQndXRpbGlzZXIgbGUgdGVybWUgIGluZGl0IC4gRW4gZWZmZXQsIG5vdXMgc29tbWVzICBsYSB0cmFuZSwgYWxvcnMgcXUnaWwgeSBhIHRhbnQgIGZhaXJlLiBDZSBxdWkgc2VyYWl0IHZyYWltZW50IGlubm92YW50IHNlcmFpdCBxdWUgbGVzIGRjaWRldXJzIHMnZW5oYXJkaXNzZW50IGV0IGZhc3NlbnQgY29uZmlhbmNlIGF1eCBwb3J0ZXVycyBkZSBwcm9qZXRzIGVuIGFkb3B0YW50IGNldXggcXVpIGF1am91cmQnaHVpIHBhcmFpc3NlbnQgbGVzIHBsdXMgYXVkYWNpZXV4LCB2b2lyZSBsZXMgbW9pbnMgcmFsaXN0ZXMuIFMnaWwgZXN0IHVuIGRvbWFpbmUgbyBsYSBjb21wdGl0aW9uIHNlcmFpdCBibmZpcXVlICBsYSBwb3B1bGF0aW9uIGV0ICBsYSBwbGFudGUsIGMnZXN0IGJpZW4gY2VsdWkgZGUgbCAnY29sb2dpZS4gQWxvcnMgbWVzZGFtZXMgZXQgbWVzc2lldXJzIGxlcyBsdXMsIG9zZXogISBPc2V6IHNvdXRlbmlyIGxhIGNyYXRpdml0IHNhbnMgcnNlcnZlICEgTGFpc3NleiBub3VzIG5vdXMgZW50aG91c2lhc21lciAhIE9uIHZldXQgeSBjcm9pcmUgIGNldHRlIHV0b3BpZSB0b3V0ZSB2ZXJ0ZSBjYXIgaWwgeSBhIHByaWwgZW4gbGEgZGVtZXVyZS4gU291aGFpdG9ucyBxdWUgdm91cyBheWV6IHByaXMgdG91dGUgbGEgbWVzdXJlIGR1IGRhbmdlciBxdWkgbm91cyBndWV0dGUgZXQgcXVlIGNldHRlIGZsb3JhaXNvbiBkZSBwcm9qZXRzIG5lIHNlIHNvbGRlcmEgcGFzIHBhciBsJ2Fkb3B0aW9uIHRpbWlkZSBkJ3VuZSBzdWNjZXNzaW9uIGRlIG1lc3VyZXR0ZXMuIExlcyBQYXJpc2llbnMgbmUgc2Ugc2F0aXNmZXJvbnQgcGFzIGQndW4gcHRhcmQgbW91aWxsLiBDJ2VzdCB1biBmZXUgZCdhcnRpZmljZSBxdSdpbHMgdmV1bGVudCBjYXIsIHF1J29uIHNlIGxlIGRpc2UsIGxlIDIxZSBzaWNsZSBzZXJhIHZlcnQgb3UgbmUgc2VyYSBwYXMuCkZyYW5jZSBhbHNvIGFsbG93cyBvbmxpbmUgZ2FtYmxpbmcgc2l0ZXMgdG8gZXhpc3QgYXMgbG9uZyBhcyB0aGV5IGhvbGQgbGljZW5zZXMsIHdoZXJlYXMgaW4gR2VybWFueSBjZXJ0YWluIHN0YXRlcyBsZWdhbGlzZWQgb25saW5lIGdhbWJsaW5nIGFuZCBpc3N1ZSB0aGVpciBvd24gZ2FtYmxpbmcgbGljZW5zZXMuIAoiVGhlIGZpcnN0IHRpbWUgSSBldmVyIHNhdyBoZXIsIGRyaXZpbmcgaGVyIGdlZXNlIGRvd24gdGhlIGhpbGwgb24gdGhlIGRheSBJIGNhbWUgdG8gRm91ciBXaW5kcywgc2hlIGxvb2tlZCBhdCBtZSB3aXRoIHRoZSBzYW1lIGV4cHJlc3Npb24sIiBwZXJzaXN0ZWQgQW5uZS4gIkkgZmVsdCBpdCwgZXZlbiBpbiB0aGUgbWlkc3Qgb2YgbXkgYWRtaXJhdGlvbiBvZiBoZXIgYmVhdXR5LiBTaGUgbG9va2VkIGF0IG1lIHJlc2VudGZ1bGx5IHNoZSBkaWQsIGluZGVlZCwgQ2FwdGFpbiBKaW0uIgpCdXQgdGhlIGNyaXRlcmlhIGlzIHRoYXQgaXQgaGFzIHRvIGJlIGEgc2VsZiBzdXN0YWluaW5nIGJ1c2luZXNzLCBzbyB0ZWFjaGVycyBzdXBwbGllcyBkb24gcmVhbGx5IHdvcmsgZm9yIHRoYXQuIFRoZXkgYWxzbyBuZWVkIHRvIGJlIG9uIEtpdmEgYWxyZWFkeSB0byBtYWtlIGludmVzdGluZyB2ZXJ5IHNpbXBsZSBhbmQgcmVwZXRpdGl2ZSBlYWNoIG1vbnRoLkFydGFrIHdhcyBjaG9zZW4gZmlyc3QsIGhpcyBuYW1lIGNhbWUgdXAgZmlyc3QgYW5kIGhlIHdhbnRlZCBtb25leSB0byBpbnZlc3Qgb24gaGlzIGZhcm0uIFdoZW4gaGUgd2FzIGZ1bmRlZCBJIGNob3NlIEd1cmdlbiBhcyBhbiBhbHRlcm5hdGl2ZSwgd2hvIGFsc28gd2FudGVkIHRvIGV4cGFuZCBoaXMgZmFybSBhbmQgY2FtZSB1cCB0b3AgMy5kYXpoYW5payAgMSBwb2ludCAgc3VibWl0dGVkIDkgbW9udGhzIGFnb0hlIGlzIGludGVyaW0gUE0gcmlnaHQgbm93LiAKVGhpcyBpcyB0aGUgbG93IGVuZCBmb3IgdGhlIHJhdGUgdGhhdCB0aGUgZ292ZXJubWVudCBwYXlzIGZvciBqdXN0IG91dCBvZiBzY2hvb2wgb3Igb3RoZXJ3aXNlIGluZXhwZXJpZW5jZWQgcG9zaXRpb25zIHJlcXVpcmluZyBhIGNvbGxlZ2UgZWR1Y2F0aW9uLiAKWW91IG11c3QgYmVhdCB0aGUgY2FrZSBtaXh0dXJlIHdlbGwgd2hlbiBtaXhpbmcgbWFyZ2FyaW5lLCBlZ2dzIGFuZCBidXR0ZXIuIApUaGUgQW5jaWVudCBpcyBhIG11c3QgdGFrZSBpbiBhbnkgYmlrZSBoZWF2eSBsaXN0LCBoZSBhbWF6aW5nLiAKIkkgY2FuIHRlbGwgeW91IHJpZ2h0IG5vdyBhbnlib2R5IGluIHRoZWlyIHJpZ2h0IG1pbmQga25vd3MgaGUgZGlkIHNvbWV0aGluZyB0byB0aGF0IGJveSwgdGhlIGJhYnkuIEFuZCBoaXMgcG9vciBtYW1hIGFuZCBkYWRkeSBpcyBpbiBkZW5pYWwsIiBKaW1taWUgQmFydG9uIHNhaWQuICJFYnJvbidzIGZhbWlseSBpcyBpbiBkZW5pYWwsIHRoZXkgdGhpbmsgaGUgZGlkbid0IGRvIGl0LiBBbmQgZm9yIHRoZW0gdG8gdGhpbmsgaGUgZGlkbid0IGRvIGl0LCB3aG8gZWxzZSBjb3VsZCBoYXZlIGRvbmUgaXQ/IgpJIHBsYXkgcG9rZXIgNCB0byA2IGRheXMgYSB3ZWVrLiAKMi4gQ29uc2lkZXIgaG93IHlvdSdyZSBnb2luZyB0byBmaW5hbmNlIHlvdXIgbWFzc2FnZSBidXNpbmVzcy4gV2hpbGUgc3RhcnQgdXAgZXhwZW5zZXMgZm9yIGEgbWFzc2FnZSBlc3RhYmxpc2htZW50IGFyZSBub3QgbGFyZ2UsIHlvdSdsbCBzdGlsbCBuZWVkIGNhcGl0YWwgdG8gcmVtYWluIGFmbG9hdCB3aGlsZSB5b3VyIGJ1c2luZXNzIGlzIGdyb3dpbmcgZm9yIHRoZSBmaXJzdCBmZXcgbW9udGhzLiAKR2lybCBnZXQgeW91cnNlbGYgc29tZSBmaXNoIG9pbHMhISBJIHdhcyBoYXZpbmcgc28gbWFueSBwcm9ibGVtcyB3aXRoIG15IGhhaXI7IGl0IHdhcyBicmVha2luZyBvZmYsIGxvb2tpbmcgZHJ5IGFuZCBmcml6enksIGFuZCB3b3VsZCBOT1QgZ3JvdyBwYXN0IG15IGNvbGxhciBib25lIGZvciBhIHNvbGlkIDYgeWVhcnMuIFRoZW4gSSBzdGFydGVkIHRha2luZyAzIDYgOSBmaXNoIG9pbHMgd2l0aCBldmVyeSBtZWFsIGFuZCBrZWVwaW5nIHVwIHdpdGggbXkgYmlvdGluIChyZW1lbWJlciBub3QgdG8gdGFrZSBpdCBsb25nZXIgdGhhbiAzIHdlZWtzIGFzIGl0IGNhbiByZWFsbHkgbWVzcyB3aXRoIHlvdXIgQjEyIGxldmVscyBpZiB0YWtlbiBmb3IgdG9vIGxvbmcpIGFuZCBteSBtdWx0aXZpdGFtaW5zLiAKRm9yIGV2ZXJ5IHNwb2tlbiB3b3JkLCBpdCBpcyBhY3R1YWxseSBhIGNhc2Ugb2Ygd2hldGhlciB0aGUgZ2xpdHRlciBpbiB0aGUgZXllIGluZGljYXRlcyBhbmQgcmVmbGVjdHMgdGhlIHNwZWVjaCBzaW1pbGFybHkgb3IgZG9lcyBpdCBjb252ZXkgcmVzZW50bWVudC4gClNvIHlvdSB1c2VkIHRvIGJlIGFibGUgdG8gc3RhbmQgaW4gdGhlIG9wZW4gYW5kIGtpbGwgMiBndWFyZGlhbnMgYmFjayB0byBiYWNrIGFzIGxvbmcgYXMgeW91IGtpbGxlZCB0aGUgbWFya2VkIG9uZSBmaXJzdCBiZWNhdXNlIHlvdSBnZXQgYWxsIHlvdXIgaGVhbHRoIGJhY2sgcGx1cyBhbiBvdmVyc2hpZWxkIGFuZCBhIGRhbWFnZSBpbmNyZWFzZSwgc28geW91IGNvdWxkIGVhc2lseSB0YWtlIG91dCB0aGUgc2Vjb25kIEd1YXJkaWFuLiBOb3cgeW91IGhhdmUgdG8gdGFrZSBjb3ZlciBicmllZmx5IGFmdGVyIGtpbGxpbmcgeW91ciBtYXJrZWQgdGFyZ2V0IHRvIGFsbG93IGZvciB0aGUgaGVhbHRoIGFuZCBzaGllbGQgcmVnZW4uIApUaGUgcG9zdGVyIGlzIHRyeWluZyB0byB1c2UgdGhpcyB0byBmb3J0aWZ5IHRoZWlyIHN0YXRlbWVudCwgYnV0IHRoZXJlIGlzIG5vIHJlYWwgY29udGVudCB0byBjb250cmlidXRlLiBTZWUgd2hlcmUgSSdtIGNvbWluZyBmcm9tVGFsbG9uaXVzICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBkYXlzIGFnby4gCkl0IG5vdCByZWFsbHkgbmVjZXNzYXJ5IHRvIG1ha2UgdG9vIG1hbnkgbm90ZXMgYXQgdGhlIG1pY3Jvcy4gQnV0IEkgY29sb3IgY29kZSBhIGxvdC4gQW5kIEkgaGF2ZSBvbmUgY29sb3IganVzdCBmb3IgY3JhenkgU2hvcnRzdGFja2VycyBhbmQgb25lIGZvciBjcmF6aWVzIHdpdGggZnVsbCBzdGFja3MuIAogODczIHBvaW50cyAgc3VibWl0dGVkIDQgeWVhcnMgYWdvIkFsdGhvdWdoIHRoZSBncmFpbnkgdmlkZW8gZGlkIG5vdCBzaG93IHdoYXQgaGFkIGhhcHBlbmVkIGJlaGluZCB0aGUgZWxldmF0b3IgZG9vcnMsIHRoZSBpbWFnZXMgaG9ycmlmaWVkIFJhdmVucyBjb2FjaCBKb2huIEhhcmJhdWdoLCBhY2NvcmRpbmcgdG8gZm91ciBzb3VyY2VzIGluc2lkZSBhbmQgb3V0c2lkZSB0aGUgb3JnYW5pemF0aW9uLiBUaGUgU3VwZXIgQm93bCB3aW5uaW5nIGNvYWNoIHVyZ2VkIGhpcyBib3NzZXMgdG8gcmVsZWFzZSBSaWNlIGltbWVkaWF0ZWx5LCBlc3BlY2lhbGx5IGlmIHRoZSB0ZWFtIGhhZCBldmlkZW5jZSBSaWNlIGhhZCB0aHJvd24gYSBwdW5jaC4gCjEyKSBJdCB0YWtlcyAzIG1vbnRocyBmb3Igb3VyIGJvZGllcyB0byBlbGltaW5hdGUgbWVyY3VyeSwgYW5kIDggeWVhcnMgdG8gZWxpbWluYXRlIFBDQnMuCkV4cGxhaW4gdGhpcyAibG95YWx0eSIgdG8gbWUuIApUaGV5IGhhdmUgZXZlcnl0aGluZyB5b3UgbmVlZCBmb3IgdGhhdCBzcGVjaWFsIGRheSBhbGwgaW4gb25lIGxvY2F0aW9uLiAKU28gaXQgYnVpbGRzIGJvbmUgZm9yIGEgY2VydGFpbiBhbW91bnQgdW50aWwgdGhlIGVuenltZSBkZXN0cm95cyBpdCBhbGwgYW5kIG5vIG1vcmUgYm9uZSB3aWxsIGJlIGJ1aWx0LiAKUGhEIHN0dWRlbnQgaGVyZSwgdGhpcyBzb3VuZHMgdmVyeSB2ZXJ5IHdlaXJkLiBBbnkgUGhEIHN0dWRlbnQgaW4gdGhlIFVLIGlzIGJhY2tlZCB1cCBieSBzZXZlcmFsIHBlb3BsZSBvbiB0b3Agb2YgdGhlIFBJIChwcmluY2lwYWwgaW52ZXN0aWdhdG9yLCBvciBhZHZpc29yKS4gCk5vdCBhbGwgdGhlIHBva2VyIGNhcmRzIGFyZSBhcyBwb3B1bGFyIFBva2VyIEJyYWNlbGV0IFBva2VyIENhcmQgUHJvdGVjdG9yLiAKR29yZG9uIFJhbXNleSBQdWIgR3JpbGwgICBUaGUgYmVzdCBzcG90IGluIEF0bGFudGljIENpdHkgZm9yIGEgdHJ1ZSwgYXV0aGVudGljIEJyaXRpc2ggUHViIGV4cGVyaWVuY2UuCk5vdyB5b3Ugc3dpdGNoIGFsbCB5b3VyIG1haW4gcGxheWVycyB0byBDbGFuIDIgYW5kIG1vdmUgeW91ciBhbHRzIHRvIENsYW4gMS4KSSBjYW4gZmFwIHRvIHRoaXMuIE5vIHRydWUgc2NvdHNtYW4gY291bGQgc2VlIHRoYXQgdGhpcyByZWxldmFudCBYS0NEIHdhcyBiYWQsIGFuZCB5b3Ugc2hvdWxkIGZlZWwgYmFkLiBZb3UgbXVzdCBiZSBuZXcgdG8gcmVkZGl0LCBzbyBJIHNlZSB5b3VyIGNha2VkYXkgYW5kIHJhaXNlIHlvdSBhIGthcm1hIHRyYWluLiBPbmUgZG9lcyBub3Qgc2ltcGx5IHJ1c3RsZSBteSBqaW1taWVzLCBub3QgZXZlbiBvbmNlLiBKZXQgZnVlbCBjYW4gbWVsdCBkYW5rIG1lbWVzLCB0aGF0IHN0YWhwIGdhdmUgbWUgY2FuY2VyIGZvciBzY2llbmNlLCBzbyB0aGF0IGVub3VnaCBpbnRlcm5ldCBmb3IgbWUgdG9kYXkuIApDaG9vc2UgeW91ciBwaWN0dXJlcy4gVGhlc2UgY2FuIGNvbWUgZnJvbSBqdXN0IGFib3V0IGFueSBwcmludGVkIG1hdGVyaWFsLCBmcm9tIG1hZ2F6aW5lcywgbmV3c3BhcGVycywgb2xkIGJvb2tzLCBvciBwb3N0Y2FyZHMuIEV2ZW4gZmFicmljIGNhbiBiZSB1c2VkIGluIGNvbGxhZ2VzLiBJZiB5b3UgYXJlIGRvaW5nIGEgcGhvdG8gY29sbGFnZSwgeW91IHNob3VsZCBzZWxlY3QgdGhlIGJlc3QgcGhvdG9zIHRoYXQgcmVwcmVzZW50IHRoZSBldmVudCBvciBjb252ZXkgdGhlIHRoZW1lIHlvdSdyZSBnb2luZyBmb3IuIERlcGVuZGluZyBvbiBob3cgbGFyZ2UgeW91ciBjb2xsYWdlIGlzLCB5b3UgbWF5IG5lZWQgdG8gY2hvb3NlIGp1c3QgYSBmZXcgcGljdHVyZXMsIG9yIHlvdSBtYXkgbmVlZCAxMCBvciBtb3JlLgpIZSdzIG1ha2UgSFVHRSBsZWFwcyBhbmQgYm91bmRzIGFuZCBJJ20gZ3JhdGVmdWwgZm9yIGhpcyB0aGVyYXB5IGFuZCBwcm9ncmVzcy4gQnV0IHdoZW4geW91ciBvbmx5IHB1bmlzaG1lbnQgdGVjaG5pcXVlIGlzIHNwYW5raW5nIHdpdGggaW5jcmVhc2VzIGFnZ3Jlc3Npb24gaW4gbnVtZXJvdXMgbG9uZ2l0dWRpbmFsIHN0dWRpZXMgSSB3b24ndCBhbGxvdyBpdC4gClRoZSBtZW4ncyB2ZXJzaW9uIGluY2x1ZGVzIGdyYXBlZnJ1aXQgKGNpdHJ1c3kgZnJlc2gpLCBpbmNlbnNlIChvcmllbnRhbCksIG11c2sgKHdvb2QpLCBhbmQgb2FrIG1vc3MgKG1vc3N5IHdvb2QpLi4gCk5vdCBiZWNhdXNlIG9mIGhvdyB0ZXJyaWJsZSBhIHR5cmFubnkgaXQgd2FzLCBidXQgYmVjYXVzZSB0aGUgTmF6aXMgd2VyZSBmaWdodGluZyBhIHdhciBvZiBleHRlcm1pbmF0aW9uLiBJdCBhbiBlYXN5IGNob2ljZSBiZXR3ZWVuIGZpZ2h0aW5nIGFuZCBkeWluZyBhbmQgc3VycmVuZGVyaW5nIGFuZCBkeWluZy4uIApLZWxseSBvbiByZWNlbnQgcG9zdCBiYWlsIE1jRG9uYWxkJ3MgcnVuTWljaGFlbCBKYWNrc29uICJTaW1wc29ucyIgZXBpc29kZSBwdWxsZWQgYWZ0ZXIgIkxlYXZpbmcgTmV2ZXJsYW5kIlBpZSByZWNpcGVzIGZvciAgRGF5IVJldmlldzogIjMgRmFjZXMsIiBhIGh1bWFuaXN0IGRyYW1hIG9mIGZlbWFsZSBwb3dlciBpbiBJcmFuU3BhY2VYIGNyZXcgc2hpcCByZXR1cm5zIHRvIEVhcnRoIGFmdGVyIGhpc3RvcmljIGZsaWdodFNwYWNlWCBjYXBzdWxlIHVuZG9ja3MgZnJvbSBzcGFjZSBzdGF0aW9uIHRvIGhlYWQgYmFjayB0byBFYXJ0aFlvdVR1YmUgYWRkcyBmZWF0dXJlIHRvIGZhY3QgY2hlY2sgY29uc3BpcmFjeSB2aWRlb3NGYWNlYm9vayBwbGFucyB0byBibG9jayBhbnRpIHZhY2NpbmF0aW9uIGNvbnRlbnRNYXJrIFp1Y2tlcmJlcmcgd2FudHMgYSBwcml2YWN5IGZyaWVuZGx5IEZhY2Vib29rLiAKV2hhdEV2ZXJ5MXNUaGlua2luZyB1CkRlbm4gZG9ydCBnZWh0IGVzIGFsbGVtYWwgYXV0aGVudGlzY2hlciB6dSBhbHMgaW0ga29tZm9ydGFibGVuIGVpbmVzIGRldXRzY2hlbiBSZWlzZXZlcmFuc3RhbHRlcnMsIGRlciBhdXNzY2hsaWUgYXVmIHZvbSBQb2xpdGIgZnJlaWdlZ2ViZW5lbiBXZWdlbiB3YW5kZWx0IHVuZCBkZW4gRyB3b2hsZG9zaWVydCBkYXMgcG9saXRpc2NoIGtvcnJla3RlIENoaW5hIHZvcmdhdWtlbHQuLiAKTWF4IG1heSBnZXQgYW4gYW5udWFsIGJvbnVzIG9mICQxMyw1MDAgd2hpY2ggd291bGQgYmUgJDcwMCB0byAkODAwIHBlciBtb250aCBhZnRlciB0YXguIFRoYXQgcHJvdmlkZXMgd2lnZ2xlIHJvb20gaW4gYWRkaXRpb24gdG8gY3VycmVudCB1bmFsbG9jYXRlZCBzYXZpbmdzIG9mIGFzIG11Y2ggYXMgJDEsMDUzIHBlciBtb250aC4gVGhhdCBpbmNvbWUgZmxvdyBjYW4gZ28gdG8gdGhlIGtpZHMgZm9yIHVuaXZlcnNpdHkgZXhwZW5zZXMgb3RoZXIgdGhhbiByb29tIGFuZCBib2FyZCwgZm9yIHRoZXkgbGl2ZSBhdCBob21lLiAKSSB3YWxrZWQgaW50byB0aGlzIGpvaW50IGFuZCBpdCBqdXN0IHRvcCBoZWF2eSB3aXRoIHRoZXNlIGRvdWdoIGV5ZWQsIGxpbXAgd3Jpc3RlZCBma2luZyBkb3VnaG51dCBwdW5jaGVycy4gSSBkb24gdHJ1c3QgdGhvc2UgYnRhcmRzIC4gCklmIHRoZXJlIGFyZW4gYW55IGVhcmx5IHVwc2V0cywgdGhlbiB0aGV5IHdpbGwgaGF2ZSBob21lIGljZSBhZHZhbnRhZ2UgaW4gdGhlIHNlY29uZCByb3VuZCwgdG9vLCBhbmQgYXZvaWQgcGxheWluZyB0ZWFtcyBzdWNoIGFzIE90dGF3YSBhbmQgTG9uZG9uIChpZiBldmVyeXRoaW5nIGhvbGRzIGluIHBsYWNlKSB1bnRpbCB0aGUgY29uZmVyZW5jZSBmaW5hbC4gU28gdGhlcmUgaXMgYSBsb3QgcmlkaW5nIG9uIHRoZXNlIGxhc3QgZmV3IGdhbWVzLiBBbmQgZm9yIHRlYW1zIHN1Y2ggYXMgTmlhZ2FyYSBhbmQgU2FnaW5hdywgd2hpY2ggbWFkZSBhIGxvdCBvZiB0cmFkZXMgdG8gcHV0IHRoZW1zZWx2ZXMgaW4gdGhpcyBwb3NpdGlvbiwgdGhlcmUgYW4gZXZlbiBncmVhdGVyIG5lZWQgdG8gY29tZSBvdXQgb24gdG9wLi4gCkZvcm1lciBEZXZpbHMgZ3JlYXQgS2VuIERhbmV5a28gbWFrZXMgdHJhbnNpdGlvbiB0byBwb2tlcgpUaGVyZSBhcmUgdmVyeSBpbXBvcnRhbnQgdGhpbmdzIHdlIHNob3VsZCBhbGwgYmUgdGhpbmtpbmcgYWJvdXQgbGlrZSB0b3J0dXJlIGFuZCBUQVJQLiAKQnV0IG5vdyBJIGhhdmUgYSBMZXMgUGF1bCBhbmQgYSBKYXp6IENob3J1cyBhbmQgYSBoYW5kZnVsIG9mIHBlZGFscy4gCllvdSBtYXkgbm90IHJlbHkgdG8geW91ciBkZXRyaW1lbnQgdXBvbiBhbnkgcG9zdCBvciBjb21tZW50IGluIHRoaXMgdGhyZWFkLiAKQWRkIGEgdGhpY2sgYmxhbmtldCBvZiBmb2cgdG8gdGhlIG1peCBhbmQgdGhlIG1vcm5pbmcgdmlldyBmcm9tIG91ciBjYWJpbiBpcyBzdXJyZWFsLiAKQmV0dGluZyAxMDAgaW50byAxODAgYW5kIHBpY2tpbmcgdXAgYSBjYWxsZXIgPSB0aGVyZSAzODAgaW4gdGhlIHBvdCBhbmQgaGUgaGFzIDEwNSBiZWhpbmQuIEFueW9uZSB3aG8gaGFzIGEgY2x1ZSBpcyBnb25uYSByZWNvZ25pemUgdGhhdCBoZSBoYXZlIGEgdGlueSBmcmFjdGlvbiBvZiB0aGUgcG90IGJlaGluZCB3aGVuIGNhbGxlZCBhbmQgdGh1cyBjYW4gbmV2ZXIgYmx1ZmYgdHVybnMsIHNpbmNlIGhlIGNhbiBiZSBibHVmZmluZyB0dXJucyBoZSBjYW4gYmUgYmx1ZmZpbmcgZmxvcCBlaXRoZXIsIGFzIGEgZmxvcCBiZXQgd291bGQgYmUgc2l6ZWQgc3VjaCB0aGF0IGlmIGl0IGRvZXNuIHdvcmsgdGhlcmUgd291bGQgYmUgc3VmZmljaWVudCByb29tIHRvIG1hbmV1dmVyIG9uIHRoZSBuZXh0IHN0cmVldCBhbmQgZGVjaWRlIHdoZXRoZXIgb3Igbm90IHRvIGZpcmUgYW4gYWRkaXRpb25hbCBiYXJyZWwuLiAKRmxvcCBjb21lcyBRSlQgcmFpbmJvdy4gSGVybyBjaGVja3MgYW5kIGl0IGNoZWNrcyBhcm91bmQgdG8gdGhlIGJ1dHRvbiwgYSByZWd1bGFyIHdobyBoYXMgYmVlbiBwbGF5aW5nIGZhaXJseSB0aWdodCBhbmQgaGFzIHNob3duIG1lIHRoZSBudXRzIHR3aWNlIGFscmVhZHkgdG9uaWdodC4gCkkgYWx3YXlzIGhhdmUgYSBsaXR0bGUgdm9pY2UgaW4gbXkgaGVhZCBnb2luZyBpZiB5b3UgZGllIGhhdmluZyBhIG5vc2Ugam9iLiBJdCBjb3VsZCBoYXBwZW4gYW5kIGl0IHN1Y2ggYSBzdHVwaWQgd2F5IHRvIGRpZSAoSSBrbm93IG5vc2Ugam9iIGlzIGFuIGV4dHJlbWUgZXhhbXBsZSkgdGhhdCBpdCBzdG9wcyBtZS4KSmUgc3VpcyBhbGwgaW4gYWpvdXRlIHQgaWwgc2Vsb24gbCB1dGlsaXMgYXUgcG9rZXIuIApQb2tlciBpcyBhIHNwb3J0IHRvIG1lIGluIHRoYXQgYXNwZWN0LiAKQnV0IHdoZW4gc2hlIHJldGFsaWF0ZXMsIGl0IGlzIHVuZm9yZ2V0dGFibHkgdXBzZXR0aW5nLiAKRm9yIHRoZSBuZXh0IHBhcnQgSSBtYWRlIGEgc2NyZWVuc2hvdCB0byBiZXR0ZXIgZXhwbGFpbiB3aGF0IHN0cmF0ZWd5IEkgdXNlLiBBcyBzb29uIGFzIHRoZSBTaXJlIHRlbGVwb3J0cyBtZSwgSSBjbGljayBhdCB0aGUgc3BvdCB1bmRlciB0aGUgbnVtYmVyIDEuIE9uY2UgSSByZWFjaGVkIHRoYXQgc3BvdCwgdGhlIFNpcmUgd2lsbCBoYXZlIHNwYXduZWQgYSBwb29sIG9uIHRoZSBsZWZ0IHRoYXQgeW91IGF2b2lkIGJ5IHJ1bm5pbmcgYXdheS4gV2hlbiB5b3UgcnVuIGJhY2sgdG8gdGhlIFNpcmUsIHlvdSB3b24gYmUgaGl0IGJ5IHRoaXMgcG9vbCBlaXRoZXIgYmVjYXVzZSBpdCBpdHMgMiB0aWxlcyBvbiB5b3VyIGxlZnQuIE5vdyB3aGVuIHlvdSBydW4gYmFjayB0byB0aGUgc2lyZSB0byBhdHRhY2sgaXQgYWdhaW4gKG51bWJlciAyKSwgaXQgd2lsbCBzcGF3biBhbm90aGVyIHBvb2wgdGhhdCB5b3UgYXZvaWQgYnkgc2ltcGx5IHJ1bm5pbmcgdG93YXJkcyBpdC4gQnkgZm9sbG93aW5nIGxpbmUgMiB0aGUgdGVudGFjbGUgbmV4dCB0byBTaXJlIHdvbiBiZSBhYmxlIHRvIGhpdCB5b3UuClRpTDogSW4gb25lIHNlYXNvbiBvZiB0aGUgRHV0Y2ggdmVyc2lvbiBvZiAiU3Vydml2b3IsIiB0aGUgbWVuIGFuZCB3b21lbiB3ZXJlIHNwbGl0IGFuZCBnaXZlbiB0aGVpciBvd24gaXNsYW5kcy4gQXQgdGhlIGVuZCBvZiA4IGRheXMsIHRoZSBtZW4gaGFkIGEgIkNhZmUgb24gdGhlIGJlYWNoLCIgd2hpbGUgdGhlIHdvbWVuIHdlcmUgc3RlYWxpbmcgZnJvbSBlYWNoIG90aGVyIGFuZCBoYWQgbm90IHlldCBidWlsdCBhIGh1dDsgdGhlIHdvbWVuIGFwcHJvdmVkIG9mIGEgdHJpYmUgbWVyZ2VyLi4gClRoZXkgYWxsIHdvcmUgc3dlYXQgd2lja2luZyBjbG90aGluZwpJdCBpcyBsaXRlcmFsbHkgaGVyZGluZyBzaGVlcC4gCllvdSBuZXZlciBrbm93ISIuIApNb3N0IGF0aGVyb3NjbGVyb3RpYyBwbGFxdWVzIGFyZSBmaXJtbHkgYm9uZGVkIHRvIHRoZSBhcnRlcnkgd2FsbC4gSXQgaXMgcmFyZSBmb3IgcGxhcXVlIHRvIHN1ZGRlbmx5IGJyZWFrIGZyZWUsIHRyYXZlbCB0aHJvdWdoIHRoZSBjaXJjdWxhdGlvbiwgYW5kIGJsb2NrIGFuIGFydGVyeSBpbiB0aGUgYnJhaW4uIApBbHRob3VnaCB0aGV5IGZsb3cgZGVlcCB3aXRoaW4gdGhlIGJvZHksIGVhY2ggbWVyaWRpYW4gaGFzIHNwZWNpZmljIHBvaW50cyB0aGF0IGNhbiBiZSBhY2Nlc3NlZCBmcm9tIHRoZSBzdXJmYWNlIG9mIHRoZSBib2R5LiBUaGVyZSBhcmUgMzYxIHN1Y2ggYWN1cHVuY3R1cmUgcG9pbnRzIG9uIHRoZSBtZXJpZGlhbnMsIGFzIHdlbGwgYXMgbnVtZXJvdXMgImV4dHJhb3JkaW5hcnkiIHBvaW50cyB0aGF0IG1heSBvciBtYXkgbm90IGJlIGxvY2F0ZWQgb24gYSByZWd1bGFyIGNoYW5uZWwuIApJIHN0aWxsIGtlZXAgYSBsb3Qgb2Ygc3R1ZmYgYm90dGxlZCBpbiB0byBhdm9pZCBhIHBvdGVudGlhbCBuZWdhdGl2ZSByZWFjdGlvbiAoYW5vdGhlciB0aGluZyBJIGxlYXJuZWQgZnJvbSBteSBtb20gYXl5KSBidXQgSSB3b3JraW5nIG9uIGl0Li4gClRoZXNlIG1pZ2h0IHJlbWFpbiBsb25nIGFmdGVyIHRoZSBpbmp1cnkgaXRzZWxmIGhhcyBoZWFsZWQuLiAKRklMRSAgIEluIHRoaXMgRmViLiAKSW4gaXRzIG5hdHVyYWwgc3RhdGUsIG15IG5ld2x5IGRyaWVkIGhhaXIgaXMgYSBiaXQgYmFnIGxhZHk6IGZpbmUsIHdhdnkgYW5kIHByb25lIHRvIHJhbmRvbSBraW5rcy4gV2l0aCB0aW1lIGF0IGEgcHJlbWl1bSwgSSBwbHVnIGluIHRoZSBHbGlkZSwgd2hpY2ggbG9va3MgbGlrZSBhIG5vcm1hbCBoYWlyYnJ1c2ggYnV0IHdpdGggYSBjZXJhbWljIGhvdHBsYXRlIGF0IHRoZSBiYXNlLiBUaGlzIGhlYXRzIHVwIHRvIDE4NWMgICBhcHBhcmVudGx5IHRoZSBvcHRpbWFsIHRlbXBlcmF0dXJlIGZvciBmYWJ1bG91cyBoYWlyLi4gCk5vIG1hdHRlciB3aGF0IG1hdGVyaWFsIHlvdSBsaWtlIHRoZSBiZXN0LCB0aGV5IGFyZSB2ZXJ5IGFmZm9yZGFibGUuIFlvdSBjYW4gYnV5IHByZSBjdXQgc2l6ZXMsIGJ1dCBtb3N0IHBlb3BsZSBwcmVmZXIgdG8gYnV5IHRoaXMgbWF0ZXJpYWwgYnkgdGhlIGxpbmVhciB5YXJkLCB3aGljaCBpcyB0eXBpY2FsbHkgNTUiIHRvIDU5IiB3aWRlLiBTaW5jZSB5b3UgY2FuIGdldCBDb21tb24gR3JlZW4gRmVsdCBmb3IgdW5kZXIgJDEwIHBlciBsaW5lYXIgeWFyZCBvbiB0aGUgSW50ZXJuZXQsIG1hbnkgY2hvb3NlIGl0IGFzIGEgY2hlYXAgb3B0aW9uLgpTbmVha3lHbGVlazUxMiAgMzEgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVGhlIG1vZCB0ZWFtIG9ic2VydmVzIG5vIHNwZWNpYWwgZGlzdGluY3Rpb24gYmV0d2VlbiByYWNpYWwgdGVybXMgb3Igc2V2ZXJpdHkuIApJIHN1cHBvc2UgSSB0dXJuIHBlb3BsZSBvZmYuIApDZWxhIGMnZXN0IGVmZmVjdGl2ZW1lbnQgdHJzIGRhbmdlcmV1eCBwb3VyIGxlcyBsZWN0aW9ucyBldXJvcGVubmVzIiwgYSBleHBsaXF1IFBoaWxpcHBlIEp1dmluLiAKWW91IHNob3VsZCB0YWtlIHRoZSB0aW1lIHRvIGNvbnNpZGVyIGFsbCBvZiB0aGUgdW5pcXVlIGFyZWFzIG9mIGltcG9ydGFuY2UgdGhhdCBoYXZlIGJlZW4gZXN0YWJsaXNoZWQgaW4gdGhpcyByb3VuZCBwb2tlciB0YWJsZSBidXlpbmcgZ3VpZGUuIApNeSB3aWZlIHRvbGQgbWUgSSBjYW50IHNoYXZlIG15IGJlYXJkLCBzbyBJIHBhaW50ZWQgaXQgcHVycGxlIHRvIG1hdGNoIHRoZSB3aWcuIEkgdG9sZCBwZW9wbGUgYXQgdGhlIGNvbnZlbnRpb24gdGhhdCBJIHRob3VnaHQgaXQgd291bGQgbWFrZSBtb3JlIEdlbmVyYWxseS4gVGhlIHN3b3JkIGxvb2tzIGxpa2UgYSBuYWlsIGluIGEgQmljIHBlbiB0dWJlIHNjYWJiYXJkLiBUaGlzIGlzbiBhIGdvb2QgcGljdHVyZSBvZiBpdC4gSSBjYW50IHJlY2FsbCBpZiBUb290IFRvb3QgZXZlciBoYWQgYW4gYXJteSBoZWxtZXQsIGJ1dCBJIGhhZCBvbmUgc2l0dGluZyBpbiBteSBnYXJhZ2UgYW5kIGl0IGZpdCBzbyBkYXJuIHdlbGwgb3ZlciB0aGUgd2lnLCBJIGp1c3QgaGFkIHRvIGJyaW5nIGl0LgpPZiB0aGUgbWFpbiBkcmF3cyB3YXMgdGhhdCBiZWNhdXNlIGl0IGlzIGluc2lkZSBhIGNvbnRyb2xsZWQgZW52aXJvbm1lbnQsIGZhcm1pbmcgY2FuIGJlIGRvbmUgYW55d2hlcmUsIERhbmllbHMgc2F5cy4gc2luY2Ugd2UgZ29pbmcgdmVydGljYWwgd2l0aCB0aGUgcGxhbnRzLCB3ZSBjYW4gZ2V0IG1vcmUgcHJvZHVjdGlvbiBwZXIgc3F1YXJlIGZvb3QuIEl0IG1ha2VzIHNlbnNlIGluIHVyYmFuIGNlbnRyZXMgd2hlcmUgdGhlcmUgaXMgbm90IGEgbG90IG9mIGF2YWlsYWJsZSBzcGFjZS4gdGVybXMgb2YgZnV0dXJlIHBsYW5zLCBEYW5pZWxzIHNheXMgdGhleSBhcmUgc3RpbGwgd29ya2luZyBvbiB0aGF0LiB0aGlzIHBvaW50IHdlIDQwIHBlciBjZW50IG9mIG91ciBjYXBhY2l0eSBoZXJlLiBTbyB0aGlzIHllYXIgaXMgYWxsIGFib3V0IHNjYWxpbmcgdGhpcyBmYWNpbGl0eSBhbmQgbWF4aW1pemluZyBvdXIgcG90ZW50aWFsLiB3aXRob3V0IGEgbG9ja2VkIGluIGV4cGFuc2lvbiBwbGFuLCBEYW5pZWxzIHNheXMgdGhleSBub3QgY29uY2VybmVkLiBpcyBnb2luZyB0byBiZSBhIGh1Z2UgZGVtYW5kIGluIHRoZSBtYXJrZXQgZm9yIHRoaXMga2luZCBvZiBjb25jZXB0LiBXZSBldmVuIGJlZW4gY29udGFjdGVkIGJ5IHBlb3BsZSBpbiB0aGUgTWlkZGxlIEVhc3QgYWJvdXQgdGhpcy4gVGhlcmUgaXMgYmlnIHBvdGVudGlhbCBmb3IgdXMgaW4gYSBsb3Qgb2YgZGlmZmVyZW50IGFyZWFzLgpBbmQgdGhlbiBzZWVpbmcgd2hhdCBoYXBwZW5zIGZyb20gdGhlcmUuLiAKQWxsIGluIGFsbCwgYWJvdXQgMTUga2lkcyBnb3QgYmFwdGl6ZWQgdGhhdCBkYXkuLiAKVGhhdCBhIHdheXMgb2ZmIHRob3VnaCwgYW5kIGhvcGVmdWxseSB5b3Ugd2FudCB0byBwbGF5IHBva2VyIG5vdCBqdXN0IGJlY2F1c2Ugb2YgbW9uZXkgYnV0IGJlY2F1c2UgaXQgZnVuIGFuZCB5b3UgbGlrZSBpdC4gSWYgc28gdGhlbiB5b3Ugc2hvdWxkIGp1c3QgcGxheSBhIHN0YWtlIHlvdSBjYW4gYWZmb3JkLiBQbGF5aW5nIGZvciBhIGxpdmluZyBpcyB2ZXJ5IGNoYWxsZW5naW5nIGJ1dCBwbGF5aW5nIGF0IGJyZWFrIGV2ZW4gdG8gaGF2ZSBhIGZyZWUgaG9iYnkgaXMgaG9uZXN0bHkgbm90IGRpZmZpY3VsdCBhdCBhbGwuCktBVEhZIExBVUVSIFdJTExJQU1TIGVuam95cyBhbGwgdHlwZXMgb2YgbXVzaWMsIGZyb20gcm9vdHMgcm9jayBhbmQgZm9sayB0byBjbGFzc2ljYWwgYW5kIG9wZXJhLiBNdXNpYyBoYXMgYmVlbiBhIGNvbnN0YW50IGJhY2tkcm9wIHRvIGhlciBsaWZlIHNpbmNlIHNoZSBmaXJzdCBzYXQgb24gdGhlIHN0ZXBzIGxpc3RlbmluZyB0byBoZXIgbW90aGVyJ3MgQnJvYWR3YXkgTFBzIHdoZW4gc2hlIHdhcyAyLiBTaW5jZSBiZWNvbWluZyBhIG1vdGhlciBoZXJzZWxmLCBzaGUgaGFzIGJlY29tZSB3ZWxsIHZlcnNlZCBvbiB0aGUgZ3Jvd2luZyBnZW5yZSBvZiBraW5kaWUgcm9jayBhbmQsIHdpdGggaGVyIHNvbiBpbiB0b3csIGNhbiBib2FzdCBzaGUgaGFzIHNlZW4gYSBtYWpvcml0eSBvZiB0aGUgY3VycmVudCBraWQncyBwZXJmb3JtZXJzIGZyb20gRGFuIFphbmVzIHRvIFRoZXkgTWlnaHQgQmUgR2lhbnRzLi4gClRoZXJlIGFyZSBwbGVudHkgb2YgdGltZXMgd2hlbiBteSBuZWlnaGJvdXJzIGhhdmUgbGVmdCBzb21ldGhpbmcgb24gdGhlIHNpZGUgb2YgdGhlIHJvYWQgYW5kIGZvciBkaXNwb3NhbCBhbmQgSSBqdXN0IHRha2VuIGl0IGhvbWUuIApKb2UgY2xhaW1lZCBoZSB3YXMgYSBnb29kIGtpZCwgYXMgaW4gZ29vZCBhdCBjaGVhdGluZyBhbmQgc3RlYWxpbmcgcmF0aGVyIHRoYW4gYmVpbmcgZ29vZCBiZWhhdmVkLiBUaGF0J3Mgd2hhdCB0aGUgbW9iIGd1eXMgd2VyZSBsb29raW5nIGZvciBpbiB0aGUgc3RyZWV0IGtpZHMuCjcuIEJsdWViZXJyeSBNYXJrZXQgYXQgVGFidWxhbTogQXMgeW91IHdvdWxkIGV4cGVjdCBhdCBhIEJsdWViZXJyeSBNYXJrZXQgdGhlcmUgd2lsbCBiZSBwbGVudHkgb2YgYmx1ZWJlcnJpZXMgZm9yIHNhbGUuIE1vdW50YWluIEJsdWUgd2lsbCBzZWxsIGJsdWViZXJyaWVzLCB0aGVyZSB3aWxsIGJlIG11c2ljLCBhIGZyZWUganVtcGluZyBjYXN0bGUsIGZhY2UgcGFpbnRpbmcuIEJpZywgbGlmZSBsaWtlIEJldHR5IEJsdWUgd2lsbCBiZSB0aGVyZS4gU2FtIHRoZSBiYXJpc3RhIGZyb20gQnVzaG1hbnMgQ29mZmVlIHdpbGwgbWVldCBhbGwgY29mZmVlIG5lZWRzLiBUaGUgQ1dBIHJvb21zIHdpbGwgYmUgb3BlbiBmb3IgbHVuY2ggYW5kIHRoZWlyIHVzdWFsIENXQSBjYWtlcyBhbmQgamFtcy4gQXQgdGhlIFRhYnVsYW0gT3ZhbCwgQ2xhcmVuY2UgU3QsIFRhYnVsYW0sIHRoaXMgU3VuZGF5IGZyb20gOWFtIHRvIDJwbSAuClNvIHRoZSBzY2hvb2wgYmVsbCByaW5ncyBhbmQgSSBjYXRjaCB0aGUgYnVzIGFuZCBsaXR0bGUgZml2ZSB5ZWFyIG9sZCBtZSBpcyBqdXN0IHZpYnJhdGluZyBmcm9tIGV4Y2l0ZW1lbnQgZm9yIHRvZGF5IGFmdGVyIHNjaG9vbCBhY3Rpdml0eS4gCldoYXQgaXMgdGhlIGFjdGl2YXRpb24ga2V5IGZvciBnb3Zlcm5vciBvZiBwb2tlciAyIHByZW1pdW0gZWRpdGlvbgpTcGVha2luZyBvZiBmbGF0IGZlbGxlZCBzZWFtcywgZG8gc29tZSBkZW1vcyBvbiB5b3VyIGZhYnJpYyBvZiB3aGV0aGVyIHlvdSB3YW50IHRoZSBmbGF0IGZlbGwgdHlwZSB3aXRoIHR3byByb3dzIG9mIHN0aXRjaGluZywgb3IgdGhyZWUsIG9yIHNlcmdlZCBhbmQgdG9wc3RpdGNoZWQgZmF1eCBmbGF0IGZlbGwsIG9yIHBsYWluIHN0aXRjaGVkIGFuZCBub3QgdG9wc3RpdGNoZWQuIElmIHlvdSBhIGJlZ2lubmVyIHdpdGggdG9wc3RpdGNoaW5nIHRoZW4gSSBoaWdobHkgcmVjb21tZW5kIHlvdSBvbmx5IGRvIGl0IHN0cmF0ZWdpY2FsbHkgYW5kIGRvIGl0IGluIGEgY29sb3IgdGhhdCBtYXRjaGVzIHlvdXIgZmFicmljLiAKSSB3aXNoIEkgaGFkIGRlYWx0IHdpdGggaXQgYSB5ZWFyIGVhcmxpZXIuIApKYWhyaHVuZGVydCB3dXJkZW4gTW9ocmVua3BmZSBhdWZncnVuZCBkZXIgenVuZWhtZW5kZW4gTmFjaGZyYWdlIHVuZCBkZXMgYWJuZWhtZW5kZW4gTW9ocmVuYmVzdGFuZGVzIGtuYXBwIHVuZCB0ZXVlci4gCkhhdGUgdG8gYnJlYWsgdGhpcyBzaGl0IHRvIHlvdSBjaGFtcCBidXQga2lkcyBhcmUgMTAwJSBpbmZsdWVuY2VkIGJ5IHRoZWlyIHJvbGUgbW9kZWxzICAgdGhlaXIgYXNwaXJhdGlvbnMsIGRyZWFtcywgbGlmZSBjaG9pY2VzIGFyZSBhbGwgZGVjaWRlZCBhcm91bmQgdGhlc2UgdGhpbmdzLgpBbmQgaSBrbmV3IGhvdyBtdWNoIGhlIHJlYWxseSB3YW50ZWQgaXQgc28gaSB3YXMgbG9va2luZyBmb3IgaGVscCBhbmQgaSB3b25kZXJlZCB1cG9uIHRoaXMgcGFnZS4gCkkgYWxzbyB3aXNoIHRvIHRoYW5rIHlvdSBmb3IgeW91ciB3b25kZXJmdWwgY29tbWVudHMgcmVnYXJkaW5nIHlvdXIgcmVjZW50IHN0YXkgd2l0aCB1cyBhbmQgdGhlIGV4cGVyaWVuY2UgeW91IGhhZCB3aGlsZSB5b3UgYXJlIGhlcmUuIEkgd2lzaCBpdCB3YXMgd2l0aG91dCBhbnkgaGljY3VwIGJ1dCBpdCBpcyBuaWNlIHRvIGtub3cgaXQgd2FzIHJlc29sdmUgaW1tZWRpYXRlbHkuIAoiTXkgdGVhY2hlciBNciBDbGlwc2hhbSBwbGF5ZWQgYmFzcyBhbmQgdGhlbiBtYXRlcyBvZiBtaW5lIGZyb20gQmF0aHVyc3QgSGlnaCBwbGF5ZWQgZ3VpdGFyIGFuZCBkcnVtcywiIGhlIHNhaWQuIFdoaWxlIFRvbSBzYWlkIHRoZSBhc3Nlc3NvcnMgd2VyZSAicG9rZXIgZmFjZWQiIGR1cmluZyBoaXMgcGVyZm9ybWFuY2UsIGhlIHRob3VnaHQgaGUgaGFkIGRvbmUgYWxsIHJpZ2h0LiAiSSB0aG91Z2h0IEkgZGlkIG9rLCIgaGUgc2FpZC4gQWxsIFNhaW50cycgQ29sbGVnZSBtdXNpYyBjbyBvcmRpbmF0b3IgSm9obiBDbGlwc2hhbSBzYWlkIGhlIHdhcyBwbGVhc2VkIHdpdGggdGhlIHN0dWRlbnRzJyBwZXJmb3JtYW5jZXMgIlRoZXkgZGlkIGJldHRlciB0aGFuIEkgZXhwZWN0ZWQuIApUdXJucyBvdXQgdGhhdCByZWFsbHkgZGlkbiBmdWNraW5nIGhlbHAsIHNvIGZvciB0aGUgcGFzdCBjb3VwbGUgb2YgZGF5cyBhbmQgcHJvYmFibHkgdGhlIG5leHQgd2VlayBvciB0d28gKG9yIHRocmVlKSwgSSBkZWNpZGVkIHRvIGNoaWxsIG91dCBhbmQgZG8gcmVoYWIgYW5kIGJvZHl3ZWlnaHQgd29yayB0byBnZXQgbXkgc2hpdCBzb3J0ZWQgb3V0IChhZ2FpbikuIEhvbmVzdGx5IEkgY291bGQgcHJvYmFibHkga2VlcCBkb2luZyBiYXJiZWxsIGxpZnRzIHdoaWxlIHJlaGFiYmluZyBidXQgSSBkb24gd2FudCB0byByaXNrIGFnZ3JhdmF0aW5nIHRoaW5ncyBldmVuIG1vcmUsIGFuZCBJIGhvbmVzdGx5IGtpbmQgb2YgbG9va2luZyBmb3J3YXJkIHRvIHRoZSB0ZW1wb3JhcnkgY2hhbmdlIG9mIHBhY2UuIApUaGUgTERQLCBpbiBwYXN0IHllYXJzIGZhdWx0ZWQgZm9yIGJ1aWxkaW5nIHRvIG5vd2hlcmUsIGhhcyBsb25nIHJlbGllZCBvbiByb2J1c3QgZmlzY2FsIHBvbGljeSBzdGltdWx1cyBzcGVuZGluZyB0byBzcHVyIGRlbWFuZCB0aHJvdWdoIHB1YmxpYyB3b3JrcyBjb25zdHJ1Y3Rpb24uIEJ1dCBpZiBsYXJkaW5nIHRoZSBlY29ub215IHdpdGggcG9yayBiYXJyZWwgc3BlbmRpbmcgYWxvbmUgd2FzIGdvaW5nIHRvIHdvcmssIEphcGFuIGVjb25vbXkgd291bGQgaGF2ZSBib3VuY2VkIGJhY2sgbG9uZyBhZ28sIHNvbWUgYW5hbHlzdHMgbm90ZS4gClRoZXNlIGZpZWxkcyBhcmUgdGhlIGZ1dHVyZSBvZiB0aGUgdGVjaG5vbG9neSBpbmR1c3RyeSwgc28gbXVjaCBzbyB0aGF0IFZpcmdpbmlhIFRlY2ggcmVjZW50bHkgYW5ub3VuY2VkIGl0cyBwbGFuIHRvIG9wZW4gYW4gSW5ub3ZhdGlvbiBDYW1wdXMgaW4gQWxleGFuZHJpYSwgVmEuICAgdHdvIG1pbGVzIGZyb20gQW1hem9uJ3MgbmV3IGxvY2F0aW9uIGluIEFybGluZ3RvbiAgIGZvY3VzaW5nIG9uIGNvbXB1dGVyIHNjaWVuY2UsIGNvbXB1dGVyIGVuZ2luZWVyaW5nIGFuZCBzb2Z0d2FyZSBlbmdpbmVlcmluZy4gCldvcmxkJ3MgdG9wIGdhbWJsaW5nIGh1YnMKQXMgYW4gYWRvbGVzY2VudCB5b3UgZWl0aGVyIGRvbid0IGNhcmUgb3IgZG9uJ3QgYmVsaWV2ZSB0aGF0IHlvdSBjb3VsZCBnZXQgc2ljayBvciBkaWUgbGF0ZXIgaW4gbGlmZS4gQXMgYW4gYWRvbGVzY2VudCB5b3UgZG9uJ3QgaGF2ZSB0aGUgY2FwYWJpbGl0eSBvZiB1bmRlcnN0YW5kaW5nIHRoZSB0cnVlIGhvcnJvcnMgb2Ygd2hhdCBpdCdzIGxpa2UgdG8gc3VmZmVyIGZyb20gc3VjaCBhIHRlcnJpYmxlIGRpc2Vhc2UgbGlrZSBlbXBoeXNlbWEgb3Igb3RoZXIgc21va2luZyByZWxhdGVkIGNvbmRpdGlvbnMuClNpbmNlIEFDVU0gaGFzIHZvd2VkIHRvIHN0YXkgaW4gb3Bwb3NpdGlvbiwgYSBjb2FsaXRpb24gc2VlbXMgdG8gcmVxdWlyZSB0aGUgUFNSTSBhbmQgUERNLiBCdXQgTXIgUGxhaG90bml1YyBtYXkgaGF2ZSBvdGhlciBwbGFucy4gSW4gTW9sZG92YSwgTVBzIG9mdGVuIHN3aXRjaCBwYXJ0aWVzLCBsdXJlZCBieSByZXdhcmRzIG9yIHRocmVhdHMuIApUaGluayBvZiBMYXMgVmVnYXMgYXMgRGlzbmV5bGFuZCBmb3IgYWR1bHRzLiBFdmVyeSBjb25jZWl2YWJsZSBmb3JtIG9mIGVudGVydGFpbm1lbnQgaXMgbG9jYXRlZCBvbiBvciBvZmYgb2YgdGhlICJzdHJpcCIgaW4gZG93bnRvd24gVmVnYXMuIFRoZXJlIGFyZSBjaXJjdXNlcywgem9vcywgcmlkZXMsIHNob3dzLCBjbHVicyBhbmQgd2F0ZXIgZm91bnRhaW5zLiBJdCdzIGxhdmlzaCwgYnJpZ2h0IGFuZCBmb2N1c2VkIG9uIGNhdGVyaW5nIHRvIHZhY2F0aW9uaW5nIGFkdWx0cywgYW5kIHRvIGEgbGVzc2VyIGV4dGVudCwgY2hpbGRyZW4uCk1yTWNDcmVhZHkgaXMgYW4gYXdhcmQgd2lubmluZyBicmV3ZXIuIEhlIG1vdmVkIGZyb20gaGlzIG5hdGl2ZSBVU0EgdG8gaGVscCBzZXQgdXAgTW9kdXMgT3BlcmFuZGkgQnJld2luZyBDbyBvbiB0aGUgTm9ydGhlcm4gQmVhY2hlcyBzZXZlcmFsIHllYXJzIGFnby4gClRoZXNlIGFkdmFudGFnZXMgYXJlIHZlcnkgaW1wb3J0YW50LiBTb21lIG9mIHRoZSBwbGF5ZXJzIHRoaW5nIHRoYXQgcG9rZXIgaXMgYSBnYW1lIG9mIGx1Y2suIE5vLCBpdCdzIGEgZ2FtZSBvZiBza2lsbCBhbmQgc2tpbGxlZCBwbGF5ZXJzIGhhdmUgbXVjaCBtb3JlIGNoYW5jZXMgdG8gd2luLiAKWWVzLCBuZXR0bGVzIHdlcmUgdXNlZCBhcyBhIGNvdW50ZXIgaXJyaXRhbnQgYnkgdGhlIFJvbWFucy4gVGhleSdkIGZsb2cgdGhlIGFmZmVjdGVkIHBhcnQgd2l0aCBhIGJ1bmNoIG9mIG5ldHRsZXMuIFlvdSBjb3VsZCBzYXkgaXQgd2FzIGEgJ3RoZXJhcGV1dGljIGluZmxhbW1hdGlvbicgaW4gdGhhdCBhcnRocml0aXMgKGZvciBpbnN0YW5jZSkgb2Z0ZW4gb2NjdXJzIGluIGpvaW50cywgc2F5IHRoZSBrbmVlLiBUaGUga25lZSBqb2ludCBoYXMgYSBsYXJnZSBjdXNoaW9uIG9mIGNhcnRpbGFnZSwgd2hpY2ggaGFzIGEgcG9vciBibG9vZCBzdXBwbHkuIENvbGQsIHdldCB3ZWF0aGVyIHdpbGwgbWFrZSBhcnRocml0aXMgaW4gdGhlIGtuZWUgd29yc2UgYXMgdGhlIGJsb29kIHZlc3NlbHMgdGVuZCB0byBjb250cmFjdCwgc28gZnJlc2ggYmxvb2QgZG9lc24ndCBtb3ZlIGludG8gdGhlIGFyZWEgZWZmaWNpZW50bHksIGFuZCBuZWl0aGVyIGFyZSB3YXN0ZXMgcmVtb3ZlZCwgbGVhZGluZyB0byBpbmNyZWFzZWQgcGFpbiBhbmQgc3RpZmZuZXNzLgpJIGRvIGhhdmUgYSBib3lmcmllbmQgbm93IGFuZCB3ZSBiZWVuIHRvZ2V0aGVyIGZvciB0aHJlZSB5ZWFycyBidXQgaW4gdGhlIGVhcmx5IGRheXMgb2Ygb3VyIHJlbGF0aW9uc2hpcCwgSSB3b3VsZCBjb25zdGFudGx5IGNvbXBhcmUgbXlzZWxmIHRvIGhpcyBleGVzIGJlY2F1c2UgSSB3YXMgYWZyYWlkIEkgd2FzbiBwcmV0dHkgZW5vdWdoLiBJdCBpbmNyZWRpYmx5IHN0dXBpZCwgSSBhZ3JlZS4gCldlIGJlIGZvcmV2ZXIgZ3JhdGVmdWwsIGJ1dCBGb2xlcyBpcyB2ZXJ5IHN0cmVha3kuIEhlcyBsaWtlIEZpdHpwYXRyaWNrIGV4Y2VwdCBoZSBwbGF5cyB3ZWxsIHdoZW4gaXQgYWN0dWFsbHkgbWF0dGVycyBidXQgdGhlbiBjYW4gZ2l2ZSB5b3UgdXR0ZXIgZG9nc2hpdC5EZXNwaXRlIHRoZSBuYXJyYXRpdmUgV2VudHogZGlkbiByZWdyZXNzIHRoaXMgeWVhciwgaGUgd2FzIHBsYXlpbmcgaHVydCBhbmQgY29taW5nIG9mZiBhIG1ham9yIGluanVyeS4gClNvLCBZRVMsIEkgZG8gcmVhbGx5IGRvIGZlZWwgZ29vZC4gSSBnZW51aW5lbHkgZ29vZCBpbiB0aGUgcmVnaW9uIG9mIHRoaXMgcHJvZ3JhbSwgYW5kIGJlY2F1c2UgSSBhY3F1aXJlIG1hZGUgYSBwYXJ0aWN1bGFyIHZlcnkgcmlnaHQgYW5kIHByYWN0aWNhbCBmaW5hbmNpYWwgcHVyY2hhc2UuLiAKUkVNRU1CRVIgVEhFIFNUT05FV0FMTCBSSU9UUyEgLgpDZWxlYnJhbyBkYSBQc2NvYTogQXNjZW5zbyBkZSBEZXVzIG5lc3RlIGRpYSBkZSBTYW50bwpIZSBzYWlkIHRoZSBiYW5kaW5nIHN5c3RlbSAgIGluIHdoaWNoIGxvY2FsIGdvdmVybm1lbnQgYXJlYXMgYXJlIGNsYXNzaWZpZWQgYWNjb3JkaW5nIHRvIGZhY3RvcnMgc3VjaCBhcyB0aGUgcGVyIGNhcGl0YSBnYW1pbmcgbWFjaGluZSBleHBlbmRpdHVyZSBhbmQgc29jaW8gZWNvbm9taWMgc3RhdGlzdGljcyAgIHdhcyBhbHJlYWR5IGluIHBsYWNlIHRvIGFzc2VzcyB0aGUgaW1wYWN0IG9mIGFuIGluY3JlYXNlIGluIHBva2VyIG1hY2hpbmVzLgpUb25zIG9mIHN0cmlrZW91dHMsIGxvdHMgb2YgbWlzc2VkIGdyb3VuZGVycywgYW5kIHByb2JhYmx5IGEgZmV3IHRocm93aW5nIGVycm9ycy4gTm90IHRvIG1lbnRpb24gY29tcGxldGVseSBleGhhdXN0ZWQuLiAKSWYgdGhlc2UgbWVkaWNhdGlvbnMgd2VyZSB3aXRob3V0IHNpZGUgZWZmZWN0cywgdGhlbiB5b3UgbWF5IGJlIGFibGUgdG8ganVzdGlmeSB0aGUgcmlzayAgIGJ1dCB0aGV5IGNhdXNlIG11c2NsZSBkYW1hZ2UsIHNleHVhbCBkeXNmdW5jdGlvbiwgbGl2ZXIgYW5kIG5lcnZlIGRhbWFnZSBhbmQgb3RoZXIgcHJvYmxlbXMgaW4gMTAgMTUlIG9mIHBhdGllbnRzIHdobyB0YWtlIHRoZW0uIENlcnRhaW5seSBub3QgYSBmcmVlIHJpZGUuClRoZXNlIGFyZSB0aGUgcGVvcGxlIHdobyBkbyBub3QgaGF2ZSBhbnkgdHJ1c3QgaW4gR29kLiBUaGV5IGFyZSBnb2QgaW4gdGhlaXIgb3duIGV5ZXMuIFRoZXkgZGlkIG5vdCBhY2NlcHQgTG9yZCBKZXN1cyBDaHJpc3QgYXMgdGhlaXIgTG9yZCBhbmQgU2F2aW9yIG5vdyB0aGUgaG91ciBvZiBkZWF0aCBoYXZlIGFycml2ZWQuIApJIGp1c3Qgd2FudCB0byBzaGFyZSBhIG1lc3NhZ2Ugd2l0aCB5b3UgZ3V5cyB0aGF0IGhhdmluZyBhIG1pbGxpb24gZG9sbGFycywgb3IgYmVpbmcgYSBtaWxsaW9uYWlyZSwgaXNuIGFsbCB0aGF0IGdyZWF0LiBJdCdzIG5vdCBhbGwgZmFpcnkgdGFsZXMgYW5kIGJ1dHRlcmZsaWVzLiBJdCBkb2VzIGdpdmUgeW91IG9wdGlvbnMuIAozKSBUaGVyZSBpcyBldmlkZW5jZSB0byBzdXBwb3J0IHRoZSB1c2Ugb2YgZmlzaCBvciBmaXNoIG9pbCBzdXBwbGVtZW50cyBhZnRlciBteW9jYXJkaWFsIGluZmFyY3Rpb24uIE9uZSBzaG91bGQgdGFrZSBhYm91dCAxLjggZyAvIGRheSBvZiBFUEEgcGx1cyBESEEuCldpdGggdGhhdCBiZWluZyBzYWlkIFNhbXN1bmcncyBhbHNvIGhhdmUgYSBodWdlIHByb2JsZW0gd2l0aCB0aGVpciBpY2UgbWFrZXJzIHRoYXQgaXMgYWJvdXQgdG8gZ28gY2xhc3MgYWN0aW9uIHNvb29vIGJhc2ljYWxseSB5b3UncmUgZnVja2VkIHdpdGggYW55IGZyaWRnZS4KQ3JlZGl0IHRvIENhbmFkaWFuIGJ1c2luZXNzZXMgcm9zZSBpbiB0aGUgbGFzdCAxMiBtb250aHMgdGhyb3VnaCBKYW51YXJ5IGJ5IDYuMSBwZXIgY2VudCB0byAkMi4xOCB0cmlsbGlvbiwgd2hpbGUgbGVuZGluZyB0byBob3VzZWhvbGRzIGV4cGFuZGVkIDMuMSBwZXIgY2VudCBhbmQgcmVhY2hlZCAkMi4xNiB0cmlsbGlvbiwgYWNjb3JkaW5nIHRvIEJhbmsgb2YgQ2FuYWRhIGRhdGEuIExlbmRlcnMgYXJlIGV4cGFuZGluZyBjcmVkaXQgdG8gY29tcGFuaWVzIGV2ZW4gYXMgdGhlIGNvdW50cnkgZWNvbm9taWMgZ3Jvd3RoIGFsbW9zdCBzdGFsbGVkIGluIHRoZSBsYXN0IHF1YXJ0ZXIgb2YgMjAxOCBhcyBjb25zdW1wdGlvbiBzcGVuZGluZyBncmV3IGF0IHRoZSBzbG93ZXN0IHBhY2UgaW4gYWxtb3N0IGZvdXIgeWVhcnMsIGhvdXNpbmcgaW52ZXN0bWVudCBmZWxsIGJ5IHRoZSBtb3N0IGluIGEgZGVjYWRlLCBidXNpbmVzcyBzcGVuZGluZyBkcm9wcGVkIHNoYXJwbHkgZm9yIGEgc2Vjb25kIHN0cmFpZ2h0IHF1YXJ0ZXIsIGFuZCBkb21lc3RpYyBkZW1hbmQgcG9zdGVkIGl0cyBsYXJnZXN0IGRlY2xpbmUgc2luY2UgMjAxNS4uIApJIHJlcG9ydGVkIG15IG1pc3Rha2UgdG8gdGhlIGJhbmsgd2l0aGluIGEgaGFsZiBob3VyIG9mIHJlYWxpemluZyB3aGF0IEkgaGFkIGRvbmUsIGxhdGUgb24gYSBGcmlkYXkgYWZ0ZXJub29uLiBUaGUgdGhpZXZlcyBoYWQgYWxyZWFkeSBzcGVudCBhbG1vc3QgJDEsNTAwIGJ5IHRoZSBmb2xsb3dpbmcgTW9uZGF5ISBNeSBiYW5rIHN0b3BwZWQgd2hhdCB0aGV5IGNvdWxkIChhbmQgZGlkbid0IGV2ZW4gY2hhcmdlIG1lIGZvciBkb2luZyBzbyEpIGFuZCBJIGZpbGVkIHRoZSBmaXJzdCBvZiB3aGF0IGhhcyBncm93biB0byBiZSBuaW5lIHBvbGljZSByZXBvcnRzLiAKVGVhY2hpbmcgdGhlIGtpZHMgdGhhdCBsb3NpbmcgaXMgYWNjZXB0YWJsZSBpcyBhIGhvcnJpYmxlIHByZWNlZGVudCBpZiB3ZSB3YW50IHRvIHJldml2ZSB0aGUgZHluYXN0eS4gClRoZSBtYWluIHRoaW5nIHRoYXQgYm90aGVycyBtZSBpcyB0aGF0IHRoZSBhbGJ1bSBpcyBjYWxsZWQgUmFpbmllciBGb2cgc28gdGhhdCBhbHJlYWR5IGdpdmVzIHNvbWUgYmFkYXNzIGltYWdlcnkgYW5kIGEgbG90IG9mIHN0dWZmIHRvIHdvcmsgd2l0aC4gQm90aCBvZiB0aGUgbXVzaWMgdmlkZW9zIGFyZSBwcmFjdGljYWxseSB0aGUgZXhhY3Qgc2FtZS4gUGVyZm9ybWFuY2Ugc2hvdHMgYW5kIHJhbmRvbSBzaG90cyBmcm9tIGEgbW92aWUgdGhhdCBtaWdodCBvciBtaWdodCBub3QgYmUgZ29vZC4gV2hhdCBoYXBwZW5lZCB0byB0aGUgY3JlYXRpdmUgdmlkZW9zIGxpa2UgVGhlIERldmlsIFB1dCBEaW5vc2F1cnMgSGVyZSwgQSBMb29raW5nIEluIFZpZXcsIGV0Yy4KVGhpcyB3YXkgeW91IGFyZSBhYmxlIHRvIHNlZSB0aGUgYWN0aW9uIHVuZm9sZCBhbmQgY2FuIGxlYXJuIGZyb20gd2F0Y2hpbmcgd2hhdCBwbGF5ZXJzIGRvLiBZb3UgbWF5IGV2ZW4gZmluZCB5b3Vyc2VsZiByb290aW5nIGZvciBzb21lb25lIHRvIHRha2UgYSBjZXJ0YWluIGFjdGlvbiwgZm9yZ2V0dGluZyB0aGF0IHRoZXkgY2Fubm90IHNlZSB3aGF0IHlvdSBjYW4hIFRoZSBob3N0cyBvZiB0aGUgc2hvdyB3aWxsIG9mdGVuIGV4cGxhaW4gd2hhdCB0aGV5IGV4cGVjdCB0aGUgcGxheWVycyB0byBkbywgYmFzZWQgb24gd2hhdCB0aGV5IGFyZSBzZWVpbmcgZnJvbSBob3cgdGhlIG90aGVyIHBsYXllciBiZXRzLCBvciByZWFjdHMgdG8gdGhlIGFjdGlvbi4gCkxhcmdlIGJ1c2luZXNzZXMgd2lsbCBwYXkgYSBsaXR0bGUgbW9yZSB1bmRlciBhIGNvbXBsZXgsIHNlcGFyYXRlbHkgYWRtaW5pc3RlcmVkIG91dHB1dCBiYXNlZCBwcmljaW5nIHN5c3RlbSAoT0JQUyksIGJ1dCBvbmx5IGFmdGVyIHJlY2VpdmluZyBleGVtcHRpb25zIG9uIGFib3V0IDgwIHBlciBjZW50IG9uIHRoZSBmdWVscyB0aGV5IGN1cnJlbnRseSB1c2UuLiAKU2V0IGFzaWRlIHVudGlsIGFsbW9zdCByZWFkeSB0byBzZXJ2ZS4uIApFeFBhcnJvdDEzMzcgdQpJIGhhdmUgc2V2ZXJhbCBhdXRvIGltbXVuZSBkaXNlYXNlcyBhbmQgSSBiZWVuIHNpY2sgbW9yZSBvZnRlbiBzaW5jZSBJIGJlZ2FuIHRyYWluaW5nIHdpdGggbXkgdHJhaW5lciBhdCB0aGUgZ3ltIHRoYW4gSSBoYXZlIGJlZW4gaW4gdGhlIHBhc3Qgc2V2ZXJhbCB5ZWFycy4gTm93IEkgZmVlbCBteSBhdXRvIGltbXVuZSBjb25kaXRpb25zIGtpY2tpbmcgdXAgYmVjYXVzZSBvZiBob3cgdGF4ZWQgbXkgc3lzdGVtIGlzIGZpZ2h0aW5nIHRoZXNlIGNvbGRzLiBJIGdvaW5nIHRvIGhhdmUgdG8gYnJlYWsgb3V0IHRoZSBzdGVyb2lkcyBqdXN0IHRvIHRyeSBhbmQgc3RvcCB0aGlzIGZsYXJlLi4gCkhvbGQgdXAuIFdoZW4gdGhpcyBwZXJzb24gc2FpZCAiY2FycnkgdGhlIG1lc3NhZ2UiLCB0aGF0IHRoZSBtZXNzYWdlIG9mIG5hcmNvdGljcyBhbm9ueW1vdXMuIFlvdSBzYXkgdGhhdCB0d2VsdmUgc3RlcHMgYXJlbiBmb3IgeW91IGFuZCB0aGF0IHRvdGFsbHkgZmluZS4gClNldmVyYWwgYXBhcnRtZW50cyBhcmUgYmVsaWV2ZWQgdG8gYmUgYSBwYXJ0IG9mIHRoZSByaW5nLCBvbnt9MTB0aCBzdHJlZXQsIHRoZXkgZm91bmR7fWJ1c2luZXNzIGNhcmRzIGx1YnJpY2FudHMgY29uZG9tcyBpbmZvIG9uIGNsaWVudHMgYW5kIDMwMCBkb2xsYXJzLiBBZ2VudHMgYXJyZXN0ZWQgYSB3b21hbiBvbiBpbW1pZ3JhdGlvbiBvZmZlbnNlcy4gU2hlIHJlcG9ydGVkbHkgdG9sZHt9IHRoZW0gc2hlIGRpZCBwcm9zdGl0dXRpb24gaW4gc2V2ZXJhbCBkaWZmZXJlbnQgVHVsc2EgbG9jYXRpb25zIGFuZCBzZXZlcmFsIHN0YXRlcy4KQXMgc29vbiBhcyBEZW1hdXJvIGhpdCBoZXIgcG9pbnQgbnVtYmVyIChlaWdodCksIHBlb3BsZSBzdGFydGVkIGJldHRpbmcuIFNoZSBzYXlzIHRoZSBnYW1lIG1vdmVkIHNvIGZhc3QgYWZ0ZXIgdGhhdCwgc2hlIGNvdWxkbid0IHJlYWxseSBrZWVwIHVwLiAiVGhlcmUgYXJlIGFsbCB0aGVzZSB0ZXJtcyBJIGRpZG4ndCBrbm93LCIgRGVtYXVybyBzYXlzLiAiUGVvcGxlIHdlcmUgeWVsbGluZyBvdXQgJ1lvLiciIEkgc2FpZCB0byBKb2huLCAnV2hhdCdzICJ5bz8iJyBJIHRoaW5rIHRoYXQncyBhbiAxMS4iCkFsb3JzIHF1ZSBsJ2VtcHJlaW50ZSBnbnRpcXVlIGVzdCB0cnMgbWRpYXRpc2UsIG9uIHNlIHRvdXJuZSBhY3R1ZWxsZW1lbnQgbm9ybW1lbnQgdmVycyBsYSBiaW9tdHJpZS4gUGFyIGV4ZW1wbGUsIGonYWkgYXBwcmlzIHF1J0ludGVycG9sIG1ldHRhaXQgZW4gb2V1dnJlIHVuZSB0ZWNobmlxdWUgZCdpZGVudGlmaWNhdGlvbiBwYXIgbGEgZmFvbiBxdSd1biBpbmRpdmlkdSB1dGlsaXNlIHNvbiBvcmRpbmF0ZXVyLiAKTm91cyB2aXZvbnMgdW4gbW9pcyBkZSBmdnJpZXIgaW5oYWJpdHVlbGxlbWVudCBkb3V4IGV0IGVuc29sZWlsbC4gVW4gYWlyIGRlIHByaW50ZW1wcyBhdmFudCBsJ2hldXJlIGRpcm9udCBjZXJ0YWlucywgbWFpcyBlbiBham91dGFudCBsJ2Fic2VuY2UgZGUgdmVudCwgY2V0IHBpc29kZSBjb25kdWl0IHVuZSBub3V2ZWxsZSBmb2lzICBkZXMgY29uY2VudHJhdGlvbnMgZGUgcGFydGljdWxlcyBmaW5lcyAoUE0gMTApIGFsYXJtYW50ZXMuIERlcHVpcyBsZSBzYW1lZGkgMjMgZnZyaWVyLCBub3VzIGNvbm5haXNzb25zIGRvbmMgdW5lIHByaW9kZSBjcml0aXF1ZSBkZSBwb2xsdXRpb24gZGUgbCdhaXIsIGNlIHF1aSBhIGNvbmR1aXQgbGEgbWFpcmUgZGUgUGFyaXMsIEFubmUgSGlkYWxnbywgIHJjbGFtZXIgbGEgbWlzZSBlbiBwbGFjZSBkdSBkaXNwb3NpdGlmIGRlIHJlc3RyaWN0aW9uIGRlIGxhIGNpcmN1bGF0aW9uIGF1dG9tb2JpbGUuIApUaGlzIG1hZGUgZGF0aW5nIGEgY2hhbGxlbmdlLiAKVGhlIE9zY2FyIE1heWVyIHBsYW50IGFyZWEgaXMgaW4gbmVlZCBvZiBjbGVhbnVwIGFuZCByZWRldmVsb3BtZW50LiBBIGxhcmdlIHBhcmtpbmcgc3RydWN0dXJlIGNvdWxkIGJlIGxvY2F0ZWQgdGhlcmUgYW5kIHRoZSBwcm9wb3NlZCBnb25kb2xhIHN5c3RlbSB3b3VsZCBhbGxvdyBxdWljayBhbmQgZWFzeSB0cmF2ZWwgdG8gZWl0aGVyIHRoZSBjYXBpdGFsIGFyZWEgb3IgVVcgY2FtcHVzLiBUaGlzIHdvdWxkIGFsbG93IHBlb3BsZSB0byBlYXNpbHkgZW50ZXIgTWFkaXNvbiB1c2luZyBIV1kgMzAsIHBhcmssIGFuZCB0aGVuIHRyYXZlbCB0byB0aGUgaXN0aG11cyBhcmVhIHdpdGhvdXQgZGVhbGluZyB3aXRoIHRyYWZmaWMgYW5kIHBhcmtpbmcuCk9uemUga2FtZXIgd2FzIGhlZWwgc2ZlZXJ2b2wgZW4gZ3Jvb3QgbWV0IGdld2VsZmQgcGxhZm9uZCBlbiBhbnRpZWtlIG1ldWJlbHMuIApUaGUgVSBHYSBhcmUgaHVtYW5vaWRzIHdobyB1c2VkIHRvIHJ1bGUgdGhlIE1vb24gdW50aWwgYW4gb3BwcmVzc2l2ZSBwb2xpdGljYWwgbW92ZW1lbnQgY2FsbGVkIHRoZSBLYWxrYXJzIChtZWFuaW5nICdUaGUgVGhpbmtlcnMnKSByZXZvbHRlZC4gVGhlIEthbGthcnMgaGF2ZSBzaW5jZSBjb25xdWVyZWQgbW9zdCBvZiB0aGUgTW9vbiwgdGhvdWdoIGluIHRoZWlyIHVwcmlzaW5nIG11Y2ggb2YgdGhlIE1vb24ncyB0ZWNobm9sb2d5IGFuZCBhcnQgd2FzIGxvc3QuIFRoZSBVIEdhIGFuZCBLYWxrYXJzIGFyZSBkZXNjZW5kZWQgZnJvbSB0aGUgc2FtZSBzcGVjaWVzIHdpdGggdGhlIG9ubHkgZGlmZmVyZW5jZSBiZWluZyBwb2xpdGljYWwgaWRlb2xvZ3k6IHRoZSBVIEdhIGFyZSBtb25hcmNoaXN0cywgdGhlIEthbGthcnMgYXJlIGNvbW11bmlzdHMuIApBbmQgdGhpcyB3YXNuJ3QganVzdCBhbnkgY2x1Yi4gCllvdSBoYXZlIDEzIHNlcm90b25pbiByZWNlcHRvcnMgYW5kIHNvbWUsIHdoZW4gdHJpZ2dlcmVkLCBjYXVzZSBhbnhpZXR5IGFuZCBkZXByZXNzaW9uLiBUaGlzIGlzIG9mdGVuIGJlY2F1c2Ugc29tZSBwZW9wbGUgZ2VuZXRpY2FsbHkgaGF2ZSBtb3JlIG9mIHRoZXNlIGJhZCByZWNlcHRvcnMuIEFudGlkZXByZXNzYW50cyBsaWtlIG1pcnRhemFwaW5lLCBhbmQgdmFsZG94YW4gYmxvY2sgdGhlc2UgcmVjZXB0b3JzIGluc3RlYWQgb2YgY2F1c2luZyB0aGVtIHRvIGFjdGl2YXRlIG1vcmUsIGxpa2UgYW4gU1NSSSB3b3VsZC4gCkh5c3RlcmljYWwgYW5kIGludGVsbGVjdHVhbCwgdGhvc2UgYm9ybiB3aXRoIHRoZWlyIHN1biBpbiBHZW1pbmkgYXJlIG5hdHVyYWwgY29udmVyc2F0aW9uYWxpc3RzIGFuZCBpbmNyZWRpYmxlIHN0b3J5dGVsbGVycy4gClByb3RlY3Rpb24gc3BlY2lhbGlzdHMgd2l0aCB0aGUgU0FTUiBNb2JpbGl0eSBQbGF0b29uLCBHcmlkbG9jayBhbmQgTW96emllIGFyZSBhc3NpZ25lZCBwcm90ZWN0aW9uIGRldGFpbCBmb3IgYSBoaWdoIHZhbHVlIGNvbnZveSBhY3Jvc3Mgc3VuYnVybnQgY291bnRyeS4gCktFTExZLCBEZWFuIFBhdHJpY2sgICBBZnRlciBhIGZpZXJjZSBiYXR0bGUgd2l0aCBMeW1waG9tYSBjYW5jZXIgaXQgaXMgd2l0aCBkZWVwIHNhZG5lc3MgdGhhdCB0aGUgZmFtaWx5IG9mIERlYW4gS2VsbHkgb2YgTG9uZG9uLCBPbnRhcmlvIHNoYXJlIHRoYXQgaGUgaGFkIHN1Y2N1bWJlZCB0byB0aGUgZGlzZWFzZS4gCkEgZm91cnRoIHdvbWFuLCBiZWxpZXZlZCB0byBoYXZlIHJldHVybmVkIHRvIENoaW5hIGluIDIwMTcsIHdhcyBhbHNvIGNoYXJnZWQgYnV0IHJlbWFpbnMgYXQgbGFyZ2UuIApUaGUgcHJvcG9zZWQgY2FyIHBhcmsgZGVhbCB3aXRoIHRoZSBjb3VuY2lsIGlzIG1lbnRpb25lZCBpbiB0aGUgc3BvcnRzIGNsdWIncyBhbm51YWwgcmVwb3J0IG9mIE9jdG9iZXIgbGFzdCB5ZWFyLiBNZW1iZXJzIHZvdGVkIHRvIG1ha2UgdGhlIGNhciBwYXJrIGEgIm5vbiBjb3JlIiBhc3NldCB3aGljaCBjbGVhcmVkIHRoZSB3YXkgZm9yIGl0cyBzZWxsIG9mZi4gVGhlIGNsdWIgaG9wZWQgdG8gcmFpc2UgJDI1MCwwMDAgZnJvbSB0aGUgc2FsZSwgYnV0IG5vIGJ1eWVyIGhhcyBiZWVuIGZvcnRoY29taW5nLiAKTG90cyBvZiBoZWF2eSBkdXR5IGNvbXBvbmVudHMgc3RhcnRpbmcgd2l0aCB0aGUgZnJhbWUgdGhhdCBpcyB0eXBpY2FsbHkgMSAzIGMgY2hhbm5lbHMuIExvdHMgb2YgZW5naW5lZXJpbmcgdGltZSBnb2VzIGludG8gZXZlbiBiYXNpYyBjYWJpbmV0cyBiZWNhdXNlIHRoZXkncmUgYWxsIHNvIGN1c3RvbS4gQWRkaW5nIHRoZSBhZXJpYWwgKGxhZGRlcikgY29uc2lzdHMgb2YgYSBiaWcgaGVhdnkgaGlnaCBzdHJlbmd0aCB0b3JxdWUgYm94ICh0aGF0IHlvdSBuZXZlciBzZWUpLCB0aGUgb3V0cmlnZ2VycywgZXRjLiAKQW5kIHdoZW50aGV5IGFyZSwuIApBbHNvLCB3aHkgZG8gQW1lcmljYW5zIGNvbnRpbnVlIHRvIGNhcmUgYWJvdXQgdGhlIHNleCBsaXZlcyBvZiBvdXIgcG9saXRpY2FsIGxlYWRlcnM/IGRvZXMgQWwgR29yZSBiZWluZyAiaGFwcGlseSBtYXJyaWVkIiB0byBUaXBwZXIgZm9yIGZvcnR5IHllYXJzIG1hcmsgaGltIGFzIGEgZ29vZCBwZXJzb24gd2hpbGUgQmlsbCBDbGludG9uLCB3aG8gaXMgbWFycmllZCBidXQgaGFzIGEgY2xlYXJseSBjb21wbGV4IHJlbGF0aW9uc2hpcCB3aXRoIFNlY3JldGFyeSBvZiBTdGF0ZSBDbGludG9uLCBpcyBjb25zaWRlcmVkIGxhY2tpbmcgaW4gbW9yYWwgbGVhZGVyc2hpcD8KQnV0IGlmIGFueXRoaW5nIGlzIGdvaW5nIHRvIHRydWx5IGNoYW5nZSBpbiByZWdhcmQgdG8gaGlnaCBmcmVxdWVuY3kgdHJhZGluZywgTGV3aXMgc2FpZCwgaXQnbGwgcHJvYmFibHkgYmUgdGhlIG1hcmtldCBpdHNlbGYuIApTb3V0aGVyblpvcnJvIHUKV2Ugd29ya2VkIG91dCB0aGUgZGV0YWlscyBvdmVyIHBvbWVncmFuYXRlIG1hcmdhcml0YXMsIGFuZCB3aGVuIHRoZSB0ZXN0IGNhbWUgYmFjayBwb3NpdGl2ZSwgc2hlIHdhcyB0aGUgZmlyc3QgcGVyc29uIEkgY2FsbGVkLi4gCkp1c3QgYmVjYXVzZSBzb21lb25lIHdobyB3YXMgYWxyZWFkeSBvbiBlZGdlIGZlZWxzIG9uZSB3YXkgYWJvdXQgc29tZXRoaW5nIGRvZXMgbm90IGNoYW5nZSB3aGF0IG9iamVjdGl2ZWx5IGhhcHBlbmVkIGFuZCB3aGF0IG9iamVjdGl2ZWx5IGhhcHBlbmVkIHdhcyBub3Qgc2V4aXN0IG9yIGNvbmRlc2NlbmRpbmcuIApUaGVyZSBhcmUgYWxzbyByZWQgbGlnaHQgZGlzdHJpY3RzIGJ1dCB0aG9zZSBhcmUgZXhwZW5zaXZlIGFuZCBkZXByZXNzaW5nLiAKR3JlYXQgZm9yIHN0cmVzcyByZWxpZWYuIApFbWJlcmNhdDEzICAyIHBvaW50cyAgc3VibWl0dGVkIDggbW9udGhzIGFnbwpJY2ggaG9mZmUgaWNoIGtvbm50ZSBoZWxmZW4gPSkKIllvdSBkb24ndCBrbm93IHdoYXQncyBnb2luZyB0byBoYXBwZW4gdG9tb3Jyb3cuIFlvdSBkb24ndCBrbm93IHdoYXQncyBnb2luZyB0byBoYXBwZW4gaW4gdGhlIG5leHQgdHdvIG1vbnRocywiIEhlYWRhY2hlLCB3aG8ga2VlcHMgaGlzIGlkZW50aXR5IGhpZGRlbiwgdG9sZCBBRlAgYXQgdGhlIFdURiBjYWZlIGFuZCBnYWxsZXJ5LgpQbGF5ZXJzIGhhdmUgc3R1Y2sgdG9nZXRoZXIuIApJIGV4ZXJjaXNlZCBhbmQgbWVkaXRhdGVkIGV2ZXJ5IGRheSBhbmQgdGhvdWdodCBhYm91dCBub3RoaW5nIGJ1dCBwb2tlci4gClRoaXMgY2FyZCBpcyBjYWxsZWQgInRoZSBLaWNrZXIiLCBpdCBjYW4gYmUgYSBzZWNvbmQgdG8gZmlmdGgga2lja2VyCkNlIHF1J2lsIGVzdCBhdXNzaSwgc295b25zIGx1Y2lkZXMsIG1haXMgcGFzIHNldWxlbWVudC4gRXQgYydlc3QgdG91dGUgbGEgY29tcGxleGl0IGRlIGNlIGRzaXIgZGUgc3VwcGxtZW50IGRlIGZtaW5pdCwgY2VsbGUgY2kgbmUgc2UgcmR1aXNhbnQgaGV1cmV1c2VtZW50IHBhcyAgbGEgc2R1Y3Rpb24gc2V4dWVsbGUuICBBdWpvdXJkJ2h1aSwgdW5lIGZlbW1lIGZtaW5pbmUgc2R1aXQgcG91ciBjcmVyIGRlIGxhIHJlbGF0aW9uIGF2ZWMgbCdhdXRyZSwgZXQgbm9uIGRhbnMgbGUgc2V1bCBidXQgZGUgc2Ugc2VudGlyIGRzaXJhYmxlIGRhbnMgbGVzIHlldXggZGVzIGhvbW1lcywgYXZhbmNlIGxhIHBzeWNoYW5hbHlzdGUgSXNhYmVsIEtvcm9saXRza2kuIAowIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29Zb3UgY2FuIGdldCBhIGdyZWF0IG1hbmFnZXIgZm9yIGxlc3MgbW9uZXkgYW5kIHBheSB5b3VyIG9mZmVuc2l2ZSBsaW5lIGluc3RlYWQuIFZpa2luZ3MgcHJvYmFibHkgaGF2ZSBhIGJldHRlciBzZWFzb24gdGhpcyB5ZWFyIHdpdGggS2VlbnVtIGF0IDE3IGFuZCBhIGJldHRlciBPIGxpbmVtYW4gb3IgdHdvLkJpZyBjb250cmFjdCBzb21ld2hlcmUgbWVhbnMgc29tZXRoaW5nIGVsc2UgaXMgZ29pbmcgdG8gYmUgbGFja2luZy4gKE9yIGxvdHMgb2YgcGxhY2VzIGlmIHlvdSBHcmVlbiBCYXkgYW5kIGFsc28gZHJhZnQgcG9vcmx5IG9uIHRvcCBvZiB0aGUgYmlnIFFCIGNvbnRyYWN0KS4gClRoZWlyIHJlYXNvbmluZyB3YXMgZ2l2ZW4gaW4gYSBob3JyaWJseSBhbnN3ZXJlZCBRIG9uIHRoZSBhdGhsZXRpYy4gCkp1c3QgaGF2ZSBmdW4gYW5kIGxldCBpbnRlcmFjdGlvbnMgaGFwcGVuIG9yZ2FuaWNhbGx5LiAKQ2VydGFpbiBkZXRhaWxzIHdpbGwgc3RhcnQgdG8gbWF0dGVyLiAKVGhhdCBzYWlkLCB3aGVuIG1vc3QgcG9rZXIgcGxheWVycyB0YWxrIGFib3V0IHZhcmlhbmNlLCB3aGF0IHRoZXkgYXJlIHJlYWxseSByZWZlcnJpbmcgdG8gaXMgdmFyaWFuY2UgcmVsYXRpdmUgdG8gZXYgKHdoaWNoIGlzIHJlYWxseSBjb2VmZmljaWVudCBvZiB2YXJpYXRpb24pLCBzaW5jZSBtb3N0IHBsYXllcnMgYXJlIGxvb2tpbmcgdG8gaW52ZXN0IHRoZWlyIGJhbmtyb2xsIGluIHdoYXRldmVyIHRoZSBtYXhpbWFsIHJldHVybiBpcyBmb3IgdGhlIGxlYXN0IHJpc2suIEZvciBsaW1pdCwgYSB3aW5uaW5nIHBsYXllciBldiBpcyBNVUNIIGxvd2VyIHRoYW4gaW4gTkwgc2luY2UgaGUgaXMgbGltaXRlZCBpbiBob3cgbWFueSBjaGlwcyBoZSBjYW4gZ2V0IGludG8gdGhlIG1pZGRsZSB3aGVuIGhlIGlzIGFoZWFkIGluIGxpbWl0LCBtYWtpbmcgQ1YgbXVjaCBoaWdoZXIuLiAKSXQgbWF5IGJlIHN1YnZlcnNpdmUgYW5kIG1hbmlwdWxhdGl2ZSwgb3IgaXQgbWF5IGJlIG92ZXJ0ICAgYnV0IGp1c3QgYmUgcHJlcGFyZWQhIEkgaGF2ZSBzZWVuIHNpbmdsZSBtb21zIGluIHRoaXMgc2l0dWF0aW9uIGFuZCBzaGl0IGNhbiBnZXQgY3Jhenkgd2hlbiB0aGUgQkYgdHJpZXMgdG8gbGVhdmUuIFNlcmlvdXNseSwgZ2V0IG91dCwgYW5kIHdhdGNoIHlvdXJzZWxmLiBHb29kIGx1Y2suLiAKQXMgdGhlIG5hbWUgc3VnZ2VzdHMsIGZvdXIgb2YgYSBraW5kIGlzIHdoZW4gZm91ciBvZiB0aGUgZml2ZSBjYXJkcyBpbiB0aGUgcG9rZXIgaGFuZHMgYXJlIG9mIHRoZSBzYW1lIHZhbHVlIGFuZCBpdCBpcyBhbHNvIHJhbmtlZCBieSB0aGUgdmFsdWUgb2YgdGhlIDQgY2FyZHMuIFRoZSBuZXh0IHR5cGUgb2YgcmFua2luZyBvciBjbGFzc2lmaWNhdGlvbiBvZiBwb2tlciBoYW5kcyBpcyBjYWxsZWQgYSBzdHJhaWdodCBmbHVzaC4gCkV2ZW4gRXRoZXJlYWwgQWJzb2x1dGlvbiB3b24gaGVscCB5b3UgbXVjaCB0aGVuLiAKSXQgZ29pbmcgdG8gZGVwZW5kIG9uIHdoZXJlIHlvdSBsaXZlLiBJIGhhZCBhIHNpbWlsYXIgaXNzdWUgd2l0aCBteSBkYWQgdHJ1Y2suIApJbnRlbnRpb25hbCBhdCBsZWFzdC4gVGhlIHJlZ3VsYXIga2luZCBvZiBzYWQsIHRlZW4gc3VpY2lkZS4uIApUaGVyZSBpcyByZWdhcmQgYW1vbmcgZm9vdGJhbGwgcGVvcGxlIGZvciB0aGUgd29yayBvZiBNYXJ0aW4gUnVzc2VsbCBhdCBVQ0QsIGFuZCBjYWxpYnJlIHBsYXllcnMgc3VjaCBhcyBHZXIgQmFycm9uLCBQYXVsIENvcnJ5LCBSb2JiaWUgQmVuc29uIGFuZCBEYW1pZW4gTW9ycmlzb24gaGF2ZSB0aGUgbG9vayBvZiBmb290YmFsbGVycyBzZXQgdG8gbWFrZSBhbiBpbnZhbHVhYmxlIGNvbnRyaWJ1dGlvbiB0byB0aGUgQmVsZmllbGQgc29jY2VyIGFubmFscy4KSW4gSm9lJ3MgZGF5cyB0aGV5IHVzZWQgdG8gY2FsbCB0aGVtIGdhbmdzdGVycyBhbmQgdGhleSBhbGwgbGl2ZWQgYnkgdGhlIHNhbWUgY29kZTogTWluZCB5b3VyIGJ1c2luZXNzLiBDbG9zZSB5b3VyIGV5ZXMuIFNlZSBub3RoaW5nLiBIZWFyIG5vdGhpbmcuClN1cnZpdmVkIGJ5IGhpcyBzaXN0ZXIgVGhlbG1hIE11cnBoeSBhbmQgc2lzdGVyIGluIGxhdyBWaW9sZXQgR3JhdmVsbGUgYW5kIE5vcm1hIFdpbHNoaXJlLiAKTWF5YmUgdGhlcmUgd291bGQgYmUgZnJlZWxvYWRlcnMsIHllcywgc29tZSBmb3IgYSB3aGlsZSwgYnV0IGxlc3MgYW5kIGxlc3Mgd2l0aCB0aW1lLiBZb3UgY2FuIGV2ZW4gZ2V0IGJvcmVkIG9mIGRvaW5nIG5vdGhpbmcuIEFuZCB3b3JrIHBvc2l0aW9ucyB3b3VsZG4gaGF2ZSB0byBnbyB0byBwZW9wbGUgd2hvIHdvdWxkIHJhdGhlciBiZSBkb2luZyBzb21ldGhpbmcgZWxzZSwgc28gbW9zdCBqb2JzIHdvdWxkIGluY3JlYXNlIGluIGVmZmljaWVuY3kgYW5kIHByb2R1Y3Rpdml0eS4gClRoZSBjb2RlIGlzIGFwcGxlYmVlczEyLiBBbmQgaWYgaXQgZG9lcyBub3Qgd29yayB0aGFuIHRyeSB3YXRlcm1lbG9uMTYuIFNvIGhlIGRpZCB0aGUgc2Vjb25kIG9uZS4gQW5kIGlmIHRoZXkgZG9uJ3Qgd29yayB0aGVuIHRyeSBhbmQgZ28gb24gZ29vZ2xlIGFuZCBmaW5kIG9uZSB0aGF0IGRvZXMgd29yay4gU28gaWYgeW91IGxpa2UgcG9wdHJvcGljYSB0aGVuIHRoZXJlIHlvdSBnby4gTm93IEkgcGxheWggY2FydG9vbiBuZXR3b3JrIGJlY2F1c2UgSSBiZWF0IGFsbCBvZiB0aGUgaXNsYW5kcyBvbiBwb3B0cm9waWNhLiAoRnVsbCBBbnN3ZXIpCjIwIE5vdiAyMDAwIC4gCkhlaW4sIHZvdXMgdm95ZXogYyBwYXMgY2hvdWV0dGUgcXVhbmQgbW1lLiBTYW5zIGNvbXB0ZXIgcXUgcyBkIGJhaXNzZSBkdSB0b251cywgY2UgcXVpIGEgcG91ciBjb25zcXVlbmNlIHVuZSBkZ3JpbmdvbGFkZSBkZSBsIGNyYXRpZiwgdW4gZW5jb21icmVtZW50IHBlcm1hbmVudCBlbnRyYXZhbnQgbm9zIGdlc3RlcyAocGFyY2UgcXVlLCBkZ2FpbmVyIGxlIG1vdWNob2lyIHRvdXRlcyBsZXMgdHJvaXMgbWludXRlcywgYSBkZXZpZW50IGxvdXJkLCAgbGEgbG9uZ3VlKS4gCkluIHJlYWxpdHkgeW91IGFuZCBJIHdpbGwgYm90aCBuZWVkIHRvIHVzZSB0aGVtIGFuZCBSb3RoIElSQXMgdG8gcmV0aXJlLiAKWW91IG1pZ2h0IGZpbmQgeW91cnNlbGYgb3ZlcndoZWxtZWQgYnkgdGhlIGV4cGVyaWVuY2UgaWYgeW91IHRha2UgdXAgYSBjaGFsbGVuZ2UganVzdCBiZWNhdXNlIHlvdSBjb3VsZG4ndCBzYXkgbm8gb3IgeW91IGFyZSB1cGhvbGRpbmcgeW91ciBwcmlkZS4gClRyeSB0aGlzLiBJdCBvZGQsIGJ1dCBpdCB3b3Jrcy4gV2F4IGFjdHVhbGx5IGRpc3NvbHZlcyBpbiBvaWwuIApNb3N0IG9mIHRoZW0gZG8gY29tZSB0byBjbGFzcyBvbmNlIGEgd2VlayB3aGVyZSB3ZSB3YXRjaCBzb21ldGhpbmcgdG9nZXRoZXIgYW5kIGRpc2N1c3MgaXQuIApTaGFoIHByZXZpb3VzbHkgdG9sZCBUaGUgV2FzaGluZ3RvbiBQb3N0IHRoYXQgS2F2YW5hdWdoIHdhcyByZWltYnVyc2VkIGZvciB0aG9zZSB0aWNrZXRzIGFuZCBwYWlkIG9mZiBoaXMgZGVidCBhdCB0aGUgZW5kIG9mIDIwMTYuIFdoaXRlaG91c2Ugd2FudHMgdG8ga25vdyB3aGljaCBvZiBoaXMgZnJpZW5kcyByZWltYnVyc2VkIEthdmFuYXVnaCBmb3IgYmFzZWJhbGwgdGlja2V0cywgd2hlbiBhbmQgYXQgd2hhdCBwcmljZS4gSGUgYWxzbyB3YW50cyB0byBrbm93IGhvdyBLYXZhbmF1Z2ggcGFpZCBvZmYgdGhlIHJlc3Qgb2YgaGlzIGRlYnQgdGhhdCB3YXMgbm90IGluY3VycmVkIGZyb20gcHVyY2hhc2luZyBiYXNlYmFsbCB0aWNrZXRzLgpQYXkgYXR0ZW50aW9uIHRvIHlvdXIgaGFpci4gVGhlIGhhaXIgY2FuIHRydWx5IG1ha2Ugb3IgYnJlYWsgYSB3b21hbidzIG92ZXJhbGwgbG9vay4gVHJlYXQgZ3JheSBoYWlyIHdpdGggaGlnaGxpZ2h0cy4gSGF2ZSBhIHlvdXRoZnVsIG5ldyBsb29rIHRoYXQgaXMgYm90aCByZWZyZXNoaW5nIGFuZCBzZXh5LgpJIG1lYW4gbXkgZmF2b3JpdGUgSFAgY2hhcmFjdGVyIHdhcyBTbmFwZSBldmVuIGJlZm9yZSBKSyBtYWRlIGhpbSBpbiBsb3ZlIHdpdGggTGlseS4gCkF1dG8gU3ByaW50OiBJIGtub3cgeW91IGNhbiB0YXAgaXQgb25jZSBhbmQga2VlcCBydW5uaW5nLCBidXQgaXQgd291bGQgYmUgbmljZSB0byBoYXZlIHRoZSBvcHRpb24gdG8gYXV0b3J1bi4gSSBjYW4gbWFudWFsbHkgd2FsayB3aXRoIG90aGVyIGhvdGtleXMgaWYgbmVlZGVkLgpIZSBmbGV3IGEgdG90YWwgb2YgMiw1MzAgY29tYmF0IG1pc3Npb25zIGFuZCB3YXMgc2hvdCBkb3duIG9yIGZvcmNlZCB0byBsYW5kIDMyIHRpbWVzLiAKSSB3b3VsZCBjYWxsIHRoZSBQdW5pc2hlciBhbiBlZGdlIGNhc2UgdGhhdCBmYWxscyBiZXR3ZWVuIExOIGFuZCBMRSwgd2l0aCBhIGZvY3VzIG9uIGhpcyBvd24gcGVyc29uYWwgY29kZSBCRUNBVVNFIHRoZSBsYXcgb2YgdGhlIGxhbmQgaXMgaW5zdWZmaWNpZW50LiBJIHRoaW5rIHRoYXQgYW4gaW1wb3J0YW50IGRpc3RpbmN0aW9uIHdoZW4gd2UgdGFsayBhYm91dCBMYXdmdWwgY2hhcmFjdGVycyBiZWluZyBzbyBiZWNhdXNlIHRoZXkgaGF2ZSBhIHBlcnNvbmFsIGNvZGUgIElNTyB0aGF0IG9ubHkgcmVhbGx5IGFwcGxpZXMgaWYgdGhhdCBwZXJzb25hbCBjb2RlIGVpdGhlciBpcyBhbGlnbmVkIHdpdGggdGhlIGxhdyBvZiB0aGVpciBjdWx0dXJlIChib3JuIG9yIGFkb3B0ZWQsKSBvciBpZiB0aGUgY2hhcmFjdGVyIGlzIGludm9sdmVkIGluIHNvbWUgc29ydCBvZiBjb25mbGljdCByZWdhcmRpbmcgd2hhdCB0aGUgInJpZ2h0IiBsYXcgaXMuCkZ1Y2sgdGhvc2UgcGFyZW50cy4gSSBnZXQgbGFyeW5nZWFsIHNwYXNtcy4gSSBhbiBhZHVsdCwgSSBrbm93IHdoYXQgdGhleSBhcmUsIGFuZCB0aGV5IGFyZSBzdGlsbCBmdWNraW5nIHRlcnJpZnlpbmcuIChFc3NlbnRpYWxseSwgeW91ciBsYXJ5bnggYmxvY2tzIHlvdXIgdHJhY2hlYSBhbmQgeW91IGNhbiBicmVhdGguIEp1c3Qgc29ydCBvZiBzcXVlYWsgdW50aWwgaXQgY2xlYXJzIHVwLiBVbmRlciBub3JtYWwgY2lyY3Vtc3RhbmNlcywgbWluZSBsYXN0IHR3byBtaW51dGVzLiBUd28gbWludXRlcyBvZiBub3QgYmVpbmcgYWJsZSB0byBicmVhdGhlLCBqdXN0IG1ha2Ugc3F1YXdraW5nIG5vaXNlcyBhcyB5b3Ugc3RydWdnbGUgdG8gZ2V0IGFpciBpbiB5b3VyIGJvZHkuIEp1c3QgYmVmb3JlIEkgYWN0dWFsbHkgbG9zZSBjb25zY2lvdXNuZXNzLCBpdCBjbGVhcnMgdXAgYW5kIEkgY2FuIGJyZWF0aGUgYWdhaW4uIGJ1dCBpdCBhbHdheXMgaGFwcGVucyBhdCBuaWdodCwgYW5kIEkgZG9uIHNsZWVwIHRoZSByZXN0IG9mIHRoZSBuaWdodCBiZWNhdXNlIG15IHRocm9hdCBodXJ0cyBhbmQgdGhlIGFkcmVuYWxpbmUgZnJvbSB0aGUgcGFuaWNraW5nIHByZXZlbnRzIG1lIGZyb20gZ29pbmcgYmFjayB0byBzbGVlcC4pCkl0J3MgYmVlbiBhIHdoaXJsd2luZCBjb3VwbGUgb2Ygd2Vla3MgZm9yIFNlbnRpIHNpbmNlIEp1bHkgMTgsIHdoZW4gdGhlIG1haW4gZXZlbnQgc3RvcHBlZCB3aXRoIG5pbmUgcGxheWVycyBsZWZ0LiBUaG9zZSBuaW5lIHdpbGwgY29udGludWUgcGxheSBOb3YuIDYuCkl0IHdvdWxkIGhhdmUgaGVscGVkIGlmIHNoZSB0b2xkIG1lIGhlIHdyaXR0ZW4gdGhlIGFydGljbGUuLiAKVXBkYXRlZCAyMDE5IFByaWNlcyBIb3RlbCBSZXZpZXdzIFNpZXN0YSBLZXkKR3JlZW5zIE1QIGFuZCBHYW1ibGluZyBIYXJtIHNwb2tlc21hbiwgSnVzdGluIEZpZWxkLCBzYWlkIHRoZSBCYWxsaW5hIGNvbW11bml0eSBsb3N0ICQxOSBtaWxsaW9uIG92ZXIgdGhlIHBhc3QgeWVhciwgb3IgJDM3NSw4NjYgYSB3ZWVrLCBvbiBwb2tpZXMuCkFuZCB0byB0cnkgYW5kIGd1ZXNzIHdoYXQgeW91ciBvcHBvbmVudCBkb2VzbiBoYXZlLCByZW1lbWJlciB0aGF0IHRoZXJlIGFyZSA3IG9mIGVhY2ggbnVtYmVyLCB3aXRoIGRvdWJsZXMgY291bnRpbmcgYXMgMS4gCldvbWVuIGFjdHVhbGx5IGRvIHRoZSBsaW9ucyBzaGFyZSBvZiBjaGlsZGNhcmUgYW5kIGhvdXNld29yay4gClNoZSBzb21laG93IHRob3VnaHQgc2hlIGNvdWxkIHJldHVybiBpdCBhbmQgZXhjaGFuZ2UgaXQgZm9yIGEgbmV3IG9uZSBhbGwgYmVjYXVzZSBzaGUgYnJva2UgaXQuLiAKU21vbGxldHQgdHJpZWQgdG8gZXhwbG9pdCB0aGUgdHJhZ2ljYWxseSBoaWdoIGxldmVsIG9mIG1pc3RydXN0IGFuZCBpbGwgd2lsbCB3ZSBhbGwgc2VlbSB0byBiZWFyIGVhY2ggb3RoZXIgYW5kIGFkZGVkIHF1aXRlIGEgYml0IHRvIHRoZSBsZXZlbCBvZiBmcmljdGlvbiBoZWF0IGluIG91ciBuYXRpb25hbCBkaXNjb3Vyc2UuIEhpcyBvcmlnaW5hbCBhY3Qgd2FzIGludGVuZGVkIHRvIGJlLCBpbiBzY29wZSBvZiBlZmZlY3QsIHRoZSBlcXVpdmFsZW50IG9mIHllbGxpbmcgIkZpcmUhIiBpbiBhIGNyb3dkZWQgdGhlYXRyZSBqdXN0IGZvciB0aGUgc2FrZSBvZiBwdWJsaWNpdHkuIEJlc2lkZXMgd2hhdGV2ZXIgamFpbCBvciBmaW5lIGhlIHBheXMsIEplc3NlIFNtb2xsZXQgc2hvdWxkIGJlIHBlcm1hbmVudGx5IGJhcnJlZCBmcm9tIFNBRyBBRlRSQSBBRUEsIGJhcnJlZCBmcm9tIHBlcmZvcm1pbmcgaW4gYW55IHByb2R1Y3Rpb24gYXNzb2NpYXRlZCB3aXRoIFdHQSBvciBER0EsIGFuZCBiYXIgYWdlbnRzL2FnZW5jaWVzIHBhcnQgb2YgQVRBIGZyb20gcmVwcmVzZW50aW5nIGhpbS4KQXMgb2YgMjAwOCwgdGhlIHNjaG9vbCBob3VzZSB3YXMgc3RpbGwgb3BlcmF0aW5nIGFuZCB0aGVyZSB3ZXJlIG5pbmUgc3R1ZGVudHMgdGhlcmUgYW5kIHRocmVlIHN0YWZmIG1lbWJlcnMuIEFuZCBpdCB3YXMgc2FpZCB0aGF0IHRoZSBzY2hvb2wgYm9hc3RlZCBoaWdoIHRlc3Qgc2NvcmVzLi4gCihUaGUgbGVucyBpcyBtb3JlIGltcG9ydGFudCBhbnl3YXkpLiAKQW5kIHRoaW5rLCB5b3Uga2VlcCBzYXlpbmcsIHlvdSB3aXNoIHlvdSB3ZXJlIGJldHRlciBpbiBYIHdheXMuIApXaGF0IGRvIHlvdSBndXlzIHRoaW5rPy4gCkdlc3RhdGlvbmFsIHZpdGFtaW4gRCBkZWZpY2llbmN5IGlzIGFzc29jaWF0ZWQgd2l0aCBhIHNpZ25pZmljYW50bHkgaW5jcmVhc2VkIHJpc2sgb2YgbmVvbmF0YWwgcG5ldW1vbmlhLCBhIGRvdWJsZWQgcmlzayBmb3IgcHJlZWNsYW1wc2lhLCBhIHRyaXBsZWQgcmlzayBmb3IgZ2VzdGF0aW9uYWwgZGlhYmV0ZXMsIGFuZCBhIHF1YWRydXBsZWQgcmlzayBmb3IgcHJpbWFyeSBjZXNhcmVhbiBzZWN0aW9uLiBUb2xkIHRoZW0gdGhhdCBJIGtuZXcgdGhhdCBhcmUgYWxyZWFkeSBiZWluZyBkcml2ZW4gb3V0IG9mIHByYWN0aWNlIGJ5IG1hbHByYWN0aWNlIHN1aXRzLiAKQWxzbyBzb21ld2hlcmUgdG8gY2VsZWJyYXRlIGZyaWVuZHNoaXAsIG9uZSBvZiB0aGUgcGlsbGFycyBvZiBvdXIgYnVzaW5lc3MuIApCYXJvbWV0cmljIHByZXNzdXJlIHdhcyB0aGUgb25seSB3ZWF0aGVyIHByZWRpY3RvciB0aGF0IHdhcyBjb25zaXN0ZW50bHkgc2lnbmlmaWNhbnQuClRvbnkgYWRkcmVzc2VkIHRoZSBnYXRoZXJpbmcgZm9yIGFib3V0IGZpdmUgbWludXRlcy4gIlRoZSBtb25leSB3aWxsIGJlIHVzZWQgdG8gYXNzaXN0IFRvbnkgd2l0aCB0aGUgdmFyaW91cyBob21lIG1vZGlmaWNhdGlvbiB0aGF0IHdpbGwgbmVlZCBhdHRlbmRpbmcgdG8gcHJpb3IgdG8gcmV0dXJuaW5nIGhvbWUuICJPbiBiZWhhbGYgb2YgZXZlcnlib2R5IHRoYXQgYXR0ZW5kZWQgdGhlIGV2ZW5pbmcsIHRoZSBjb21taXR0ZWUgd291bGQgbGlrZSB0byBleHByZXNzIHRoZWlyIHNpbmNlcmUgYXBwcmVjaWF0aW9uLiIgVGhlIG9yZ2FuaXNpbmcgY29tbWl0dGVlIGluY2x1ZGVkIE1pY2hhZWwgUmVpZCwgUmljayBSb2xmLCBNYXJrIFN0cmFjaGFuIGFuZCBNciBIYXJkaW5nLiAKSnVzdCB0byBnZXQgYSBnZW5lcmFsIHBpY3R1cmUgb2YgeW91ciBvdmVyYWxsIGhlYWx0aCwgd2hpY2ggc291bmRzIHByZXR0eSBnb29kLiAKIkl0J3MgYSB0b3VnaCBzaXR1YXRpb24gZm9yIFJ5YW4sIiBDdXRsZXIgc2FpZC4gIkhlIGhhcyBiZWVuIGdyZWF0IGFuZCBzdXBwb3J0aXZlLiBIZSBqdXN0IHdhbnRzIHRvIGhlbHAgdGhpcyB0ZWFtIHdpbiBnYW1lcy4iCkZvciBleGFtcGxlLCBwb3QgaGFzICQxMDAgZG9sbGFycyBhbmQgb3Bwb25lbnRzIGJldCdzICQyMCBkb2xsYXJzLCBvcHRpbWFsIGdhbWUgdGhlb3J5IHdvdWxkIHN1Z2dlc3QgYmVjYXVzZSB5b3UgYXJlIGdldHRpbmcgcG90dCBvZGRzIG9mIDYvMSBvbiB5b3VyIG1vbmV5IHlvdSBzaG91bGQgY2FsbCAxIHRpbWVzIGFuZCBmb2xkIDYuIApIZSBsYW5kZWQgYSBqb2IgYXQgdGhlIGxpdmluZyBtdXNldW0gbmVhcmx5IDIwIHllYXJzIGFnbyBhbmQgdHJhaW5lZCBhcyBhIGJsYWNrc21pdGggc28gdGhhdCBoZSBjb3VsZCBldmVudHVhbGx5IHRha2Ugb3ZlciB0aGUgam9iLiAKVmlldyBpbWFnZSBvZiAoR2V0dHkgSW1hZ2VzKSAoQ3JlZGl0OiBHZXR0eSBJbWFnZXMpClRoaXMgc2VxdWVuY2Ugb2YgdHJhbnNmZXIgb2YgZW5lcmd5IGluIHRoZSBib2R5IGR1cmluZyBhIGdvbGYgc3dpbmcgaXMgY2FsbGVkIHRoZSBLaW5lbWF0aWMgU2VxdWVuY2UuIAo=|<---