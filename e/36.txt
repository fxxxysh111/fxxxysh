<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.33.0-wmf.6" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/thumb/2/2e/Meyer_lemon_chiffon_cake%2C_chocolate.jpg/1200px-Meyer_lemon_chiffon_cake%2C_chocolate.jpg" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-시폰_케이크 rootpage-시폰_케이크 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [search]
   
   <div class="mw-body-content" id="siteNotice">
    <div id="mw-dismissablenotice-anonplace">
    </div>
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키백과, 우리 모두의 백과사전.
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [link]
    
    [ahref]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <div class="thumb tright">
       <div class="thumbinner" style="width:322px;">
        [link]
        
        <div class="thumbcaption">
         <div class="magnify">
          [link]
          
         </div>
         레몬으로 장식 후, 초콜릿으로 위를 덮은 시폰 케이크
        </div>
       </div>
      </div>
      <div class="thumb tright">
       <div class="thumbinner" style="width:322px;">
        [link]
        
        <div class="thumbcaption">
         <div class="magnify">
          [link]
          
         </div>
         초콜릿 시폰 케이크, 2006년.
         [link]
         
        </div>
       </div>
      </div>
      <div class="thumb tright">
       <div class="thumbinner" style="width:322px;">
        [ahref]
        
        <div class="thumbcaption">
         <div class="magnify">
          [link]
          
         </div>
         레몬 시폰 케이크
        </div>
       </div>
      </div>
      <div class="thumb tright">
       <div class="thumbinner" style="width:202px;">
        [ahref]
        
        <div class="thumbcaption">
         <div class="magnify">
          [ahref]
          
         </div>
         장식된 시폰 케이크. 2007년. 일본.
        </div>
       </div>
      </div>
      <p>
       <li>[ahref]</li>[ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[ahref]</li>[search]
      </p>
      <p>
       [link][search][search]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </p>
      <p>
       시폰 케이크는
       [ahref]
       
       보험 판매원이었던 해리 베이커(Harry Baker)가
       <a href="/wiki/1927%EB%85%84" title="1927년">
        1927년
       </a>
       에 개발한 것으로 기록되어 있다. 그는 보험 판매원을 주직업으로 하고, 파트 타임으로 케이크 조달업(출장 연회업)을 했었다. 그는 그의 사업에 시폰 케이크를 활용했으나, 요리법을
       [link]
       
       에
       [link]
       
       에게 양도할 때까지 일반인에게 공개하지 않았다. 베티 크록커는 시폰 케이크를 "케이크 계의 세기의 발견"이라고 칭송하였다.
      </p>
      <h2>
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <ul>
       <li>
        [ahref]
        
        게임 〈호텔 더스크 : 룸 215〉에서, 게임 등장 인물인 하이드(Hyde)는 후식으로 차 시폰 케이크(Tea Chiffon Cake)를 제공받는다.
       </li>
      </ul>
      <h2>
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <ul>
       <li>
        <b>
         <span style="color: #555; font-size: smaller;" title="언어: 영어">
          (영어)
         </span>
        </b>
        [link]
        
       </li>
       <li>
        <b>
         <span style="color: #555; font-size: smaller;" title="언어: 영어">
          (영어)
         </span>
        </b>
        <a class="external text" href="/web/20070928012147/.www.rakemag.com/stories/section_detail.aspx?itemID=25850&amp;catID=146&amp;SelectCatID=146" rel="nofollow">
         "When Harry Met Betty"
        </a>
        ,
        <i>
         The Rake Magazine
        </i>
        —an article about Harry Baker and the chiffon cake
       </li>
       <li>
        <b>
         <span style="color: #555; font-size: smaller;" title="언어: 영어">
          (영어)[search][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li><li>[search]</li><li>[link]</li>[search][ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li>[ahref]<li>[link]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link][search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
         </span>
        </b>
        [link]
        
        - Rose's Kitchenette 제공
       </li>
      </ul>
      <div aria-labelledby="케이크" class="navbox" role="navigation" style="padding:3px">
       <table class="nowraplinks hlist collapsible collapsed navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
        <tbody>
         <tr>
          <th class="navbox-title" colspan="3" scope="col">
           <div class="plainlinks hlist navbar mini">
            <ul>
             <li class="nv-view">
              [ahref]
              
             </li>
             <li class="nv-talk">
              [ahref]
              
             </li>
             <li class="nv-edit">
              [link]
              
             </li>
            </ul>
           </div>
           <div id="케이크" style="font-size:114%;margin:0 4em">
            [link]
            
           </div>
          </th>
         </tr>
         <tr>
          <td class="navbox-abovebelow" colspan="3">
           <div>
            <b>
             [link]
             
            </b>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           [link]
           
          </th>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
            </ul>
           </div>
          </td>
          <td class="navbox-image" rowspan="11" style="width:1px;padding:0px 0px 0px 2px">
           <div>
            [ahref]
            
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           [ahref]
           
          </th>
          <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              <a class="new" href="/w/index.php?title=%ED%94%BC%EC%95%84%EB%8F%88&amp;action=edit&amp;redlink=1" title="피아돈 (없는 문서)">
               피아돈
              </a>
             </li>
             <li>
              [link]
              
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           [ahref]
           
          </th>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/wiki/%ED%86%A0%EB%A5%B4%ED%83%80_%EC%B9%B4%ED%94%84%EB%A0%88%EC%A0%9C" title="토르타 카프레제">
               토르타 카프레제
              </a>
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           [link]
           
          </th>
          <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/wiki/%EB%B0%94%EB%82%98%EB%82%98_%EC%BC%80%EC%9D%B4%ED%81%AC" title="바나나 케이크">
               바나나 케이크
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              <a href="/wiki/%ED%8C%90%ED%8F%AC%EB%A5%B4%ED%85%8C" title="판포르테">
               판포르테
              </a>
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           <a href="/wiki/%EB%A0%88%EC%9D%B4%EC%96%B4_%EC%BC%80%EC%9D%B4%ED%81%AC" title="레이어 케이크">
            레이어 케이크
           </a>
          </th>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              <a href="/wiki/%EB%B0%80%ED%91%80%EC%9C%A0" title="밀푀유">
               밀푀유
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/wiki/%ED%86%A0%EB%A5%B4%ED%85%8C" title="토르테">
               토르테
              </a>
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           [link]
           
          </th>
          <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           <a href="/wiki/%EC%8A%A4%ED%8E%80%EC%A7%80_%EC%BC%80%EC%9D%B4%ED%81%AC" title="스펀지 케이크">
            스펀지 케이크
           </a>
          </th>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              <a href="/wiki/%EB%B3%B4%EC%8A%A4%ED%84%B4_%ED%81%AC%EB%A6%BC_%ED%8C%8C%EC%9D%B4" title="보스턴 크림 파이">
               보스턴 크림 파이
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              <a href="/wiki/%EB%A1%A4%EC%BC%80%EC%9D%B4%ED%81%AC" title="롤케이크">
               롤케이크
              </a>
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           [ahref]
           
           및
           [link]
           
          </th>
          <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           이스트 케이크
          </th>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           특별한 시기
          </th>
          <td class="navbox-list navbox-even" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%">
           기타
          </th>
          <td class="navbox-list navbox-odd" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
              <ul>
               <li>
                [ahref]
                
               </li>
              </ul>
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
           </div>
          </td>
         </tr>
        </tbody>
       </table>
      </div>
      <table class="notice metadata plainlinks stub" style="clear: both; font-size: smaller;">
       <tbody>
        <tr>
         <td style="width: 40px;">
          [link]
          
         </td>
         <td>
          이 글은 후식에 관한
          [ahref]
          
          입니다. 서로의 지식을 모아 알차게
          [link]
          
          갑시다.
         </td>
        </tr>
       </tbody>
      </table>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     [ahref]
     
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [link]
      
      :
      <ul>
       <li>
        [link]
        
       </li>
      </ul>
     </div>
     <div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">
      숨은 분류:
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       [link]
       
      </li>
      <li id="pt-anoncontribs">
       [link]
       
      </li>
      <li id="pt-createaccount">
       [ahref]
       
      </li>
      <li id="pt-login">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][search][link][link][search][ahref][search]<li>[link]</li><li>[ahref]</li>[search][ahref]<li>[search]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]
        </span>
       </li>
       <li id="ca-talk">
        <span>
         [link]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         <a href="/wiki/%EC%8B%9C%ED%8F%B0_%EC%BC%80%EC%9D%B4%ED%81%AC">
          읽기
         </a>
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         <li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         [link]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [ahref]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        [link]
        
       </li>
       <li id="n-portal">
        [ahref]
        
       </li>
       <li id="n-currentevents">
        [link]
        
       </li>
       <li id="n-recentchanges">
        [ahref]
        
       </li>
       <li id="n-index">
        [link]
        
       </li>
       <li id="n-randompage">
        [ahref]
        
       </li>
       <li id="n-help">
        [link]
        
       </li>
       <li id="n-sitesupport">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [link]
        
       </li>
       <li id="t-recentchangeslinked">
        [ahref]
        
       </li>
       <li id="t-upload">
        [link]
        
       </li>
       <li id="t-specialpages">
        [link]
        
       </li>
       <li id="t-permalink">
        [link]
        
       </li>
       <li id="t-info">
        [link]
        
       </li>
       <li id="t-wikibase">
        [ahref]
        
       </li>
       <li id="t-cite">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        [link]
        
       </li>
       <li id="coll-download-as-rdf2latex">
        [link]
        
       </li>
       <li id="t-print">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-wikibase-otherprojects-label" class="portal" id="p-wikibase-otherprojects" role="navigation">
     <h3 id="p-wikibase-otherprojects-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="wb-otherproject-link wb-otherproject-commons">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-da">
        [link]
        
       </li>
       <li class="interlanguage-link interwiki-en">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-es">
        [link]
        
       </li>
       <li class="interlanguage-link interwiki-fa">
        [link]
        
       </li>
       <li class="interlanguage-link interwiki-fi">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ja">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-pt">
        [link]
        
       </li>
       <li class="interlanguage-link interwiki-ru">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-simple">
        [link]
        
       </li>
       <li class="interlanguage-link interwiki-uk">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-zh">
        [link]
        
       </li>
       <li class="interlanguage-link interwiki-zh-yue">
        [link]
        
       </li>
      </ul>
      <div class="after-portlet after-portlet-lang">
       <span class="wb-langlinks-edit wb-langlinks-link">
        [link][link][link]<li>[search]</li><li>[ahref]</li>[link]<li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 11월 25일 (일) 12:54에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     모든 문서는
     [link]
     
     에 따라 사용할 수 있으며, 추가적인 조건이 적용될 수 있습니다. 자세한 내용은
     [ahref]
     
     을 참고하십시오.
     <br/>
     Wikipedia®는 미국 및 다른 국가에 등록되어 있는
     [ahref]
     
     소유의 등록 상표입니다.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [link]
     
    </li>
    <li id="footer-places-about">
     [ahref]
     
    </li>
    <li id="footer-places-disclaimer">
     [ahref]
     
    </li>
    <li id="footer-places-developers">
     [link]
     
    </li>
    <li id="footer-places-cookiestatement">
     [link]
     
    </li>
    <li id="footer-places-mobileview">
     [link]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     [ahref]
     
    </li>
    <li id="footer-poweredbyico">
     [link]
     
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0037
  </b>
 </body>
</html>
