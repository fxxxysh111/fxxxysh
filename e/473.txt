--->|Tm93IHN1cmUgdGhlIGNvbXBhbnkgcHJvYmFibHkgY2xhaW1zIHRoZXkgZGlkIGV4dHJhIHdvcmsgYW5kIGhhdmUgZXh0cmEgZmFuY3kgcnViYmVyIHN0cmlwIHRvIG1ha2UgdGhlIHdvbWFuIG9uZSBzbyBtdWNoIGJldHRlciBjb250b3VyaW5nIGFuZCBzaGF2aW5nIHdvbWVuJ3MgYm9kaWVzIGJ1dC4gClRoZSBxdWVzdGlvbiBlc3NlbnRpYWxseSBtZWFucyB0aGUgc2FtZSBhcyAiV2hhdCBpcyB0aGUgY2hhbmNlIHRvIGdldCBhIGZsdXNoIGlmIGRlYWx0IDcgY2FyZHM/IiBUaGlzIGlzIGJlY2F1c2UgZnJvbSB0aGUgdmlldyBvZiBvbmUgcGxheWVyIGluIGhvbGQnZW0gdGhleSB3aWxsIHNpbXBseSBnZXQgNyBjYXJkcywgMiBwb2NrZXQgY2FyZHMgcGx1cyA1IGNvbW11bml0eS4gSWYgSSB0cnVzdCBteSBzYW1wbGluZyBwcm9ncmFtIGl0IHNheXMgYSBmbHVzaCBvY2N1cnMgMy4wMiUgb2YgdGhlIHRpbWUuIFdoYXQgd2UncmUgbG9va2luZyBmb3IgYXJlIHRoZSBudW1iZXIgb2YgcGVybXV0YXRpb25zIHdoaWNoIGNyZWF0ZSBhIGZsdXNoLiBUaGUgZmlyc3QgY2FyZCBjYW4gYmUgYW55dGhpbmcsIHRodXMgNTIgb3B0aW9ucywgdGhlbiB0aGUgbmV4dCBmb3VyIGNhcmRzIG11c3QgYmUgb2YgdGhlIHNhbWUgc3VpdCwgc28gMTIsIDExLCAxMCwgYW5kIDkgb3B0aW9ucy4gVGhlIGxhc3QgdHdvIGNhcmRzIGNhbiBhZ2FpbiBiZSBhbnl0aGluZywgc28gNDcgYW5kIDQ2IG9wdGlvbnMuIFRoZXNlIGlzIGp1c3Qgb25lIHBlcm11dGF0aW9uLCB0aGUgb3JkZXJpbmcgY2FuIGJlIGRvbmUgKDZjMikgPSAxNSB3YXlzLiBUaGVuIGRpdmlkZSB0aGVzZSBwZXJtdXRhdGlvbnMgYnkgdGhlIHRvdGFsIG51bWJlciBvZiA3IGNhcmQgcGVybXV0YXRpb25zIHRvIGdldCBvdXIgYW5zd2VyOiA1MjEyMTExMDk0NzQ2ICAoNmMyKSAvICg1MjUxNTA0OTQ4NDc0NikgPSAwLjI5NyAuCiJFdXJvcGUgaXMgZG9pbmcgYmV0dGVyIG9uIHRoaXMgZm9yIHN1cmUgd2l0aCB2YWx1aW5nIHZhY2F0aW9uLCByZXNwaXRlLCB3ZWVrZW5kcywiIHNheXMgQmVsYW5nZXIsIGEgcG9zdCBkb2MgcmVzZWFyY2hlciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBDYWxnYXJ5IHdob3NlIHdvcmsgaW5jbHVkZXMgbG9va2luZyBhdCBlZmZlY3RpdmUgYnJlYWsgc3RyYXRlZ2llcy4KVGhleSdkIGZsb2cgdGhlIGFmZmVjdGVkIHBhcnQgd2l0aCBhIGJ1bmNoIG9mIG5ldHRsZXMuIApIZSB0aGVuIHByb2NlZWRlZCB0byBtYXNzYWdlIGFyb3VuZCBteSBicmVhc3RzLCBkb3duIHRvd2FyZHMgbXkgc3RvbWFjaCBhbmQgdG93YXJkcyBteSBjcm90Y2gsIGF0IHRpbWVzIG1vdmluZyBoaXMgaGFuZHMgdmVyeSBzbGlnaHRseSBpbnRvIG15IHBhbnRpZXMuIEhlIHRoZW4gYXNrZWQgaWYgSSB3YW50ZWQgbXkgaW50ZXJjb3N0YWwgbXVzY2xlcyBtYXNzYWdlZCBhbmQgSSBzYWlkIHllcyAoSSBoYXZlIG5vIGlkZWEgd2h5IEkganVzdCB3ZW50IGFsb25nIHdpdGggZXZlcnl0aGluZyBoZSBvZmZlcmVkLCBJIHJlYWxseSBub24gY29uZnJvbnRhdGlvbmFsIGFuZCBraW5kIG9mIGZyb3plIHVwLCBhbmQgd2FzIGFscmVhZHkgdmVyeSBhbnhpb3VzKS4gSGUgdHVybmVkIG1lIHRvIHRoZSBzaWRlIGFuZCBoYWxmIGFzc2VkbHkgZHJhcGVkIG15IGJyZWFzdHMsIGFuZCB0aGVuIGhlIG1hc3NhZ2VkIG15IGludGVyY29zdGFscyBhbmQgbW92ZWQgdG93YXJkcyB0aGUgbG93ZXIgYmFjayBhbmQgdGhlIHN0YXJ0IG9mIG15IGJ1dHQgY3JhY2suIApUaGUgaGlnaCBwb3RlbnRjeSBtdWx0aXZpdGFtaW5zIHdlcmVuJ3QgZW5vdWdoLiBJJ3ZlIGFsc28gaGFkIHRvIHJvdW5kcyBvZiBEIHZpdGFtaW5zLCBCMTIsIGZvbGF0ZSwgZXRjIHRvIGJyaW5nIGNlcnRhaW4gb3RoZXIgbGV2ZWxzIGJhY2sgaW4gbGluZS4gCkJ1dCBhdCB0aGUgbWlkIGxldmVsLCB3aGVyZSBTaW5nYXBvcmVhbnMgYW5kIGZvcmVpZ25lcnMgbGl2ZSBhbmQgd29yayBjaGVlayBieSBqb3dsLCBpcyBpbXBvcnRhbnQgdGhlIFNpbmdhcG9yZWFucyBvdXRudW1iZXIgdGhlIG1pZ3JhbnRzCis1NWsgb3ZlciAyLjUgeWVhcnMgKHNpbmNlIEkgc3RhcnRlZCB0cmFja2luZyBpbiB0aGUgYXBwKSBpcyBnb29kIHNpZGUgJC4gRGVhbGluZyB3aXRoIHRoZSBkb3duc3dpbmdzIGFyZSB0b3VnaC4uIApNeSB1bmNsZSB3YXMgYSBjb3AgYW5kIHdoaWxlIGhlIGRpZG4ndCBoYXZlIHRoYXQgbXVjaCBleHBvc3VyZSB0byBnYW5ncywgaGUgc2FpZCB0d28gb2YgdGhlIG1haW4gcmVhc29ucyBmb3IgcGVvcGxlIGpvaW5pbmcgYXJlIG1vbmV5IGFuZCBzZW5zZSBvZiBwcmlkZS9iZWxvbmdpbmcuIApUaGV5IGFjdHVhbGx5IHJlc2VhcmNoIHdoYXQgdGhleSB0YWtpbmcgYW5kIHNvIGZhciwgYXJlIHVzaW5nIHBpbGxzLCBjb2tlLCBhbmQgb3RoZXIgZGFuZ2Vyb3VzIHNoaXQgYXQgYSBtdWNoIGxvd2VyIHJhdGUuLiAKUHJvZmVzc2lvbmFscyBvciBldmVuIHRoZSBhbWF0ZXVycyBhcmUgYmVjb21pbmcgY2F1dGlvdXMgYWJvdXQgdGhlaXIgY2FyZHMgYW5kIGNoaXAgc2lnbmFsaW5nIG5vd2FkYXlzLi4gCkkgZGF0ZWQgYSBndXkgZm9yIDMgeWVhcnMuIEFib3V0IGEgeWVhciBhbmQgYSBoYWxmIGludG8gaXQgKGFuZCB1cyBsaXZpbmcgdG9nZXRoZXIgYXQgdGhlIHRpbWUpLCBoZSBsb3N0IGhpcyBqb2IgYXQgSG9tZSBEZXBvdC4gSGUgbmV2ZXIgZ290IHVuZW1wbG95bWVudCwgc28gbm8gaW5jb21lIGF0IGFsbC4gCltkZWxldGVkXSAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ28KKFByaXZhY3kgUG9saWN5KUdvb2dsZSBZb3VUdWJlU29tZSBhcnRpY2xlcyBoYXZlIFlvdVR1YmUgdmlkZW9zIGVtYmVkZGVkIGluIHRoZW0uIChQcml2YWN5IFBvbGljeSlWaW1lb1NvbWUgYXJ0aWNsZXMgaGF2ZSBWaW1lbyB2aWRlb3MgZW1iZWRkZWQgaW4gdGhlbS4gCkZvciBzdGFuZGluZywgcGxhY2UgeW91ciBjaGlwcyBvbiB0b3Agb2YgeW91ciBjYXJkcywgZmFjZSBkb3duIG9yIHdhdmUgeW91ciBoYW5kIHBhbG0gZG93biBob3Jpem9udGFsbHkgb3ZlciB5b3VyIGNhcmRzLiAKRm9yIERyeSBhbmQgbWF0dXJlIHNraW4uIFRoaXMgc2VydW0gaXMgY29uY29jdGVkIHdpdGggZGVsaWNhdGUsIG9yZ2FuaWMgb2lscyB0byBoeWRyYXRlIGFuZCBmZWVkIHRoZSBza2luLiBDb21iaW5lZCB3aXRoIHRoZSBlc3NlbnRpYWwgb2lscyBvZiByb3NlIGFuZCBwYXRjaG91bGksIHRoZSBiYXNlIG9pbHMgb2YgV2hlYXRnZXJtIGFuZCBKb2pvYmEgb2lscyBhcmUgcmVhZGlseSBhYnNvcmJlZCBieSB5b3VyIHNraW4uIFRoaXMgZmFjaWFsIHNlcnVtIGRlbGl2ZXJzIGEgaGVhbHRoeSBpbmZ1c2lvbiBvZiB2aXRhbWluIEEsIHZpdGFtaW4gRCwgQiB2aXRhbWlucywgYW50aW94aWRhbnRzIGFuZCBlc3NlbnRpYWwgZmF0dHkgYWNpZHMuCkJ1dCB0aGVzZSBzYW1lIHRyYXZlbGVycyBtaWdodCBub3QgcmVhbGl6ZSB0aGF0IHRoaXMgZmFzY2luYXRpbmcgY2l0eSBpbiB0aGUgd2VzdGVybiBJYmVyaWFuIFBlbmluc3VsYSB3YXMgbm90IGFsd2F5cyB0aGUgdG9wIHRvdXJpc3QgZGVzdGluYXRpb24gaW4gdGhlIHdlc3Rlcm5tb3N0IGNvdW50cnkgb2YgbWFpbmxhbmQgRXVyb3BlLiAKSGUgaXNvbGF0ZWQgbWUgZnJvbSBteSBmcmllbmRzIGFuZCBmYW1pbHkgYW5kIG1hZGUgbWUgc2NhcmVkIGFuZCBtaXNlcmFibGUgYWxsIHRoZSB0aW1lLiAKTG9jYXRlZCBvZmYgb2YgSGlnaHdheSAxIGFib3V0IGhhbGZ3YXkgYmV0d2VlbiBTYW4gRnJhbmNpc2NvIGFuZCBMb3MgQW5nZWxlcyBuZWFyIHRoZSBjaXR5IG9mIFNhbiBTaW1lb24sIHRoZSBtYWpvcml0eSBvZiB2aXNpdG9ycyBtdXN0IHRha2UgSGlnaHdheSAxIChQYWNpZmljIENvYXN0IEhpZ2h3YXkpLCB0aGVuIEhpZ2h3YXkgNDYgdG93YXJkcyBDYW1icmlhIHRvIEhlYXJzdCBDYXN0bGUgUm9hZCwgYXMgYSBzaWduaWZpY2FudCBwb3J0aW9uIG9mIEhpZ2h3YXkgMSBmcm9tIHRoZSBub3J0aCBpcyBjdXJyZW50bHkgaW5hY2Nlc3NpYmxlLiAKQW5hbCBzZXggaXMgb25lIG9mIHRoZSBtb3N0IGVyb3RpYyBhbmQgc2F0aXNmeWluZyBzZXh1YWwgcHJhY3RpY2VzIGEgd29tYW4gYW5kIGhlciBwYXJ0bmVyIGNhbiBlbmpveS4gCk9mdG1hbHMga2FubiBkaWVzIGRlbiBVbnRlcnNjaGllZCBhdXNtYWNoZW4gendpc2NoZW4gU3BpZWxlcm4gZGllIGFtIEVuZGUgZGVzIFRhZ2VzIG1pdCAwIEV1cm8gdm9tIFRpc2NoIGF1ZnN0ZWhlbiBvZGVyIGVpbmVyIGRlciBncnRlbiBHZXdpbm5lciBkZXMgVGFnZXMgenUgc2VpbiBCdWNoIGFuYWx5c2llcnQgZGllIHZlcnNjaGllZGVuZW4gS3JwZXJoYWx0dW5nZW4gdW5kIFBzeWNob2xnaWUgZGVzIFBva2Vyc3BpZWxlbnMuIApQYWNob3duICAyIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KQW1lcmljYW4gaXNuIG1ha2luZyB0aGF0IGludmVzdG1lbnQgYnV0IGlzIGFkZGluZyB0dXJuZG93biBzZXJ2aWNlIG9uIHNvbWUgcm91dGVzOyBhdCBiZWR0aW1lLCBwYXNzZW5nZXJzIGFyZSBnaXZlbiBwYWphbWFzIGFuZCBzbGlwcGVycyB3aGlsZSBmbGlnaHQgYXR0ZW5kYW50cyBsYXkgZG93biBhIHF1aWx0ZWQgc2VhdCBjb3ZlciwgZHV2ZXQgYW5kIHBpbGxvdy4uIApTYWJvb3RoZTMyMSAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCkhlIHNob3dlZCBKIDEwIGFuZCB0aGUgY2FyZHMgY2FtZSBkb3duIFEgNCAyIEsgQS4gQW5vdGhlciBhY2Ugb24gdGhlIHJpdmVyIHRvIGJlYXQgbWUuIFVsdGltYXRlbHksIEkgd2FzIGVsaW1pbmF0ZWQgaW4gMzB0aCBwbGFjZS4gCkxpc3Qgb2YgVG9wIFJhdGVkIFBva2VyIFNpdGVzCiJUaGF0J3Mgd2hhdCBpcyBmdW5ueSBhYm91dCBtZW4gd2hvIGJvb2sgbWUuIFRoZXkgb2Z0ZW4gc2F5IHRoZXkgaG9wZSB0aGV5J3JlIGFzIGdvb2QgYXMgdGhlIGd1eXMgaW4gdGhlIG1vdmllcywgYnV0IGFsbCB0aGUgbWVuIGluIHBvcm4gYXJlIG9uIFZpYWdyYS4iCkkgbm90IHNheWluZyBoZSB3YXMgcGVyZmVjdCwgbm90IGJ5IGEgbG9uZyBzaG90LCBoZSBhYnNvbHV0ZWx5IG1hZGUgYSBwb3RlbnRpYWxseSBodWdlIG1pc3Rha2UuIApBcyBhIHJlc3VsdCBvZiB0aGUgcG93ZXIgb2YgdGhlIGluc3VyYW5jZSBhbmQgcGhhcm1hY2V1dGljYWwgaW5kdXN0cmllcywgdGhpcyBhbWVuZG1lbnQgd2lsbCBub3QgcGFzcyBvciBldmVuIGdldCB2ZXJ5IG1hbnkgdm90ZXMuIE5vbmV0aGVsZXNzLCBnaXZlbiB0aGUgdmlldyBvZiBtaWxsaW9ucyBvZiB1cyB0aGF0IGEgc2luZ2xlIHBheWVyIGFwcHJvYWNoIGlzIHRoZSBPTkxZIFdBWSB0aGlzIGNvdW50cnkgd2lsbCBldmVyIHByb3ZpZGUgY29tcHJlaGVuc2l2ZSwgY29zdCBlZmZlY3RpdmUgaGVhbHRoIGNhcmUgdG8gYWxsIGl0cyBjaXRpemVucywgdGhpcyBpcyBhbiBpbXBvcnRhbnQgc3RlcCBmb3J3YXJkLgpUaGUgY29sbGVnZSwgYXMgb2YgbGFzdCBmYWxsLCBoYWQgYSByZWNvcmQgMTIsODA1IHN0dWRlbnRzLCBpbmNsdWRpbmcgbW9yZSB0aGFuIDEwLDAwMCBhdCBpdHMgZG93bnRvd24gYW5kIFNvdXRoIFdpbmRzb3IgY2FtcHVzZXMsIG5lYXJseSAxLDIwMCBpbiBDaGF0aGFtIGFuZCBhbm90aGVyIDEsMjAwIGF0IGEgVG9yb250byBjYW1wdXMgZm9yIGludGVybmF0aW9uYWwgc3R1ZGVudHMgcnVuIGJ5IGEgcHJpdmF0ZSBzZWN0b3IgcGFydG5lci4KVGhlIHByb2plY3QgaXMganVzdCBvZmYgTm8uMiBSb2FkIGluIFJpY2htb25kLCB3aXRoIG1hbnkgYW1lbml0aWVzIG5lYXJieSwgaW5jbHVkaW5nIE1pbm9ydSBQYXJrIGFuZCBSaWNobW9uZCBDZW50cmUuIFRoaXMgY29ybmVyIHVuaXQgaGFzIGEgbm9ydGggc291dGh3ZXN0IGFzcGVjdCwgYWlyIGNvbmRpdGlvbmluZywgYSBidWlsdCBpbiB2YWN1dW0gYW5kIHJlbm92YXRpb25zIHRoYXQgd2VyZSBjYXJyaWVkIG91dCBsYXN0IHllYXIgdGhhdCBpbmNsdWRlIG5ldyBmbG9vcmluZywgZGVzaWduZXIgYmF0aHJvb21zIGFuZCBhIG1vZGVybiBraXRjaGVuIHdpdGggd2hpdGUgdXBwZXIgYW5kIGJhc2UgY2FiaW5ldHMgYW5kIHByZW1pdW0gYXBwbGlhbmNlcy4gVGhlIGxpdmluZyByb29tIGhhcyBhIGZpcmVwbGFjZSwgYSBiYXkgd2luZG93IHdpdGggdHJlZWQgdmlld3MsIGFuZCBhY2Nlc3MgdG8gYSBkZWNrLCB3aGlsZSBhbGwgdGhyZWUgYmVkcm9vbXMgYXJlIHVwc3RhaXJzLiAKVGhlIGFjdHVhbCBzdG9yeSBvZiBob3cgQmxvb20gY2FtZSB0byBwb3dlciBpbiB0aGUgcG9rZXIgcmluZyBpcyBzb21ldGhpbmcgdGhhdCB0cnVseSBjYW5ub3QgYmUgbWFkZSB1cC4gU2hlIGJlZ2FuIGFzIGEgY29ja3RhaWwgd2FpdHJlc3MgYW5kIGhhZCBiZWVuIGhpcmVkIGJ5IGEgd2VhbHRoeSByZWFsIGVzdGF0ZSBpbnZlc3RvciB0byBwbGF5IGhvc3Rlc3MgYXQgYSBnYW1ibGluZyB0b3VybmFtZW50IGhlIHdhcyB0aHJvd2luZyBhdCBIb2xseXdvb2QncyBpbmZhbW91cyBjbHViIFRoZSBWaXBlciBSb29tLiAKSSB0ZW5kIHRvIHNlZSBhIGxvdCBvZiBtZW1lcyBmcm9tIGVkZ3kgaW50ZXJuZXQgam9rZXN0ZXJzIGFib3V0IHBlb3BsZSB3aXRoIGRpc2FiaWxpdGllcyBhIGxvdC4gCkkgam9pbmVkIG9uZSBpbiAyMDE2IHdoZW4gSSBmb3VuZCBvdXQgSSB3YXMgZXhwZWN0aW5nIG15IGZpcnN0LiBXZSB3ZXJlIGFsbCBkdWUgaW4gdGhlIHNhbWUgbW9udGgsIGFuZCBzbyBtb3N0IG9mIHRoZSB0aW1lIEkgZGlkbiBoYXZlIHRvIGFzayBhbnkgcXVlc3Rpb25zIGJlY2F1c2UgdGhlcmUgd2VyZSB3b21lbiBqdXN0IGEgZmV3IHdlZWtzIGFoZWFkIG9mIG1lIHdobyB3ZXJlIHNoYXJpbmcgdGhlaXIgZXhwZXJpZW5jZXMgYW5kIGl0IHJlYWxseSBtYWRlIHRoaW5ncyBhIGxvdCBsZXNzIHN0cmVzc2Z1bCBhbmQgSSBzb3J0IG9mIGtuZXcgd2hhdCB0byBleHBlY3QgYXQgbXkgZG9jdG9ycyBhcHBvaW50bWVudHMgYmFzZWQgb24gZXZlcnlvbmUgZWxzZSBleHBlcmllbmNlcy4gSSB0aGluayB3aGVuIG91ciBiYWJpZXMgd2VyZSBhbGwgYXJvdW5kIDZpc2ggbW9udGhzIHRoZSBncm91cCBpbXBsb2RlZC4gCkEgcmVhc29uIGJsYWNrIG1lbiBhcmUgbW9yZSBsaWtlbHkgdG8gZ28gdG8gcHJpc29uIHRoYW4gY29sbGVnZSBhbmQgaXQgc3VyZSBpc24gYXMgc2ltcGxlIGFzICJjcmltZSBhbmQgcHVuaXNobWVudC4iIHdlIGFja25vd2xlZGdlIHRoZSBzeXN0ZW1zIG9mIHJhY2lhbCBwcml2aWxlZ2UgdGhhdCBzdHJ1Y3R1cmUgd2hpdGUgbGl2ZXMsIHVudGlsIHdlIHRha2UgYSBjcml0aWNhbCBleWUgdG8gdGhlIG15cmlhZCB3YXlzIGluIHdoaWNoIHNvbWUgb2YgdXMgYmVuZWZpdCBmcm9tIHRoZSBjb2xvciBsaW5lIGFuZCBzb21lIG9mIHVzIGRvbiB3ZSB3aWxsIGNvbnRpbnVlIHRvIHJlbHkgb24gdGhlIGV4aXN0ZW5jZSBvZiB0aGUgY29sb3IgbGluZSwgbm8gbWF0dGVyIGhvdyBtdWNoIHdlIGFja25vd2xlZGdlIHRoYXQgaXQgY29tcGxldGVseSBtYWRlIHVwLiAKQW5kIHRocmVlIHRlYW1zIGxhdGVyLCB3aXRoIG9ubHkgYSB3ZWVrIGxlZnQgaW4gaGlzIGp1bmlvciBjYXJlZXIsIHRoZSBvdmVyIGFnZSBGbGludCBnb2FsdGVuZGVyIGRlcGFydGVkIHRoZSBCdWR3ZWlzZXIgR2FyZGVucyBpY2UgZm9yIHRoZSBmaW5hbCB0aW1lIEZyaWRheSB0byBhIHN0aXJyaW5nIHN0YW5kaW5nIG92YXRpb24uIEl0IHdhcyBhIGZpdHRpbmcgc2FsdXRlIGZyb20gOSwwMzYgZmFucyB0byBoaXMgNTQgc2F2ZSBwZXJmb3JtYW5jZSBpbiBMb25kb24ncyAzIDIgb3ZlcnRpbWUgdmljdG9yeSBhZ2FpbnN0IGhpcyBGaXJlYmlyZHMuClRoZSBTUyBDbHViIGlzIGluIHRoZSBmaXJpbmcgbGluZSB0byBzdXJyZW5kZXIgaXRzIDQwIGxpY2VuY2VzIHVuZGVyIGEgInVzZSBpdCBvciBsb3NlIGl0IiBjbGF1c2UuIFRoZSBnb3Zlcm5tZW50IHNhaWQgaXQgbmVlZGVkIHJldmVudWUgZnJvbSB0aGUgcG9raWUgbGljZW5jZXMgdG8gYmFua3JvbGwgY29tbXVuaXR5IGluZnJhc3RydWN0dXJlIGluY2x1ZGluZyBob3NwaXRhbHMsIHNjaG9vbHMgYW5kIHJvYWRzLiAKVEhBVFMgdGhlIGhhcmQgcGFydC4gCkFncmVlIHRvIGRpc2FncmVlLiBTb3JyeSB5b3UgZ290IGZydXN0cmF0ZWQgYnkgdHJhdmVsaW5nIHdlbGNvbWUgdG8gdGhlIGh1bWFuIHBlcnNwZWN0aXZlLCBzZWxkb20gdHJhdmxlaW5nIGdvZXMgYWNjb3JkaW5nIHRvIHBsYW4uIApMb3dlciBsZXZlbHMgb2YgcGFyZW50IGludm9sdmVtZW50IG1lZGlhdGVzIHRoaXMgYXNzb2NpYXRpb24sIGFzIGRvZXMgcHJlc2VuY2Ugb2YgYWR2ZXJzaXR5OyB3aXRoIGNoaWxkcmVuIGV4cG9zZWQgdG8gYWR2ZXJzaXR5IGFuZCB0aG9zZSB3aXRoIGxlc3MgaW52b2x2ZWQgcGFyZW50cyBiZWluZyBhdCBhbiBpbmNyZWFzZWQgcmlzayBvZiBoYXZpbmcgQURIRC4gClNob3cgaGVyIHdoYXQgYmVpbmcgbG92ZWQgZmVlbHMgbGlrZS4gTmV2ZXIgZ290IHRoZSBodWdzIGFuZCBraXNzZXMgZnJvbSBteSBtb20gYW5kIGRhZCBhbmQgdGhleSBoYXZlIG5ldmVyIHNhaWQgIkkgbG92ZSB5b3UiLgpIZSB3YXMgZGV2YXN0YXRlZCB3aGVuIGhlIGxlYXJuZWQgTGFuZSBoYWQgY29uY2VhbGVkIHNvIG11Y2ggZnJvbSBoaW0sIGhlIHRlbGxzIEJlY3JvZnQuICJJIGhhZCBubyBjb21wcmVoZW5zaW9uIHdoYXRzb2V2ZXIgdGhhdCBzaGUgaGFkIHR3byBiYWJpZXMgaW4gdGhlIGZvdXIgeWVhcnMgSSB3YXMgZ29pbmcgb3V0IHdpdGggaGVyLiIgR2lsbGllcyBrbm93cyB0aGlzIHNvdW5kcyBpbXBsYXVzaWJsZS4gCkdlbmRlciBuZXV0cmFsIGJpcnRoIGNlcnRpZmljYXRlcyBhcmUgY3VycmVudGx5IGFsc28gYXZhaWxhYmxlIGluIE5ld2ZvdW5kbGFuZCBhbmQgTGFicmFkb3IgYW5kIGluIHRoZSBOb3J0aHdlc3QgVGVycml0b3JpZXMsIGFuZCBGZXJndXNvbiBob3BlcyBtb3JlIHByb3ZpbmNlcyB3aWxsIGZvbGxvdyBzdWl0LgpTbyB0ZWxsIG1lLCB3aGF0IGtpbmQgb2YgbG9zZXIgaGF2ZSB5b3UgZGF0ZWQ/IEkgdGhpbmsgSSBvd2UgdGhlIHdvcmxkIHNvbWV0aGluZyBmb3IgdGhhdC4gCkkgd2FzaCBteSBmYWNlIHdpdGgganVzdCB3YXRlciBpbiB0aGUgbW9ybmluZy4gCklsIHJlcHJzZW50ZSB1biBhYnJpLCB1biBuaWNob2lyIGV0IHVuIHBlcmNob2lyIHBhciBsYSBtbWUgb2NjYXNpb24uIFJhcHBlbG9ucyBub3VzIGQgbGUgZnJuZSBBeGlzIG11bmRpIGRlcyBTY2FuZGluYXZlcywgc291dmVudCBwcnNlbnQgY29tbWUgdW5lIHZvbGlyZSwgdW5lIGFuaW1hbGVyaWUuIApOZXh0IG1vcm5pbmcgbXkgbW9tIGFza2VkICJoZXkgZGlkIHlvdSBzZWUgYW55dGhpbmcgbGFzdCBuaWdodCB3aGVuIHlvdSB3YWxrZWQgaW50byBvdXIgcm9vbSIgYW5kIEkgc2FpZCAiSSB3YWxrZWQgaW50byB5b3VyIHJvb20gbGFzdCBuaWdodD8iIGFuZCBzaGUgc2lnaGVkIGluIHJlbGllZiBzYXlpbmcgIm9oIHRoYW5rIGdvZC4iIEkgd2FzIDggYW5kIGRpZG4ndCBrbm93IHdoYXQgc2V4IHdhcyBzbyBJIGJydXNoZWQgaXQgb2ZmLiAKSSB0aGluayBjb21wdXRlciBzY3JlZW5zIGNvdWxkIGJlIGEgdXNlZnVsIHRvb2wgdGhhdCBhbHNvIHNlbnNpY2FsIGluIHVuaXZlcnNlIGZvciBkeW5hbWljIHF1ZXN0cy4gClRoaXMgY29tbWVudCBoYXMgYmVlbiByZW1vdmVkIGZvciBwcm9tb3RpbmcgYSBjb21tb24gbXl0aCB0aGF0IG5hcmNzIGRvbiBjb21taXQgc3VpY2lkZS4KVGhlIGJyYW5kIGlzIGRlZmluaXRpdmUgYW5kIGljb25pYywgeWV0IGNvbnRpbnVlcyB0byBwdXNoIGFuZCBldm9sdmUgd2l0aCB0aGUgdGltZXMuIApRdWl0ZSBhIGZldyB3ZWJzaXRlcyBvZmZlciBQb2tlciBHYW1lcyBhbmQgZG9uJ3QgY2hhcmdlIGZvciB0aGlzIHNlcnZpY2UuIApUaGVzZSBnYW1lcyBhcmUgcmVsYXRpdmVseSBlYXN5IHRvIHBpY2sgdXAgYW5kIGhhdmUgd29uIG1hbnkgaW50ZXJuYXRpb25hbCBhd2FyZHMuIFRoZXNlIGFyZSB3b25kZXJmdWwgZ2FtZXMgZm9yIGZhbWlsaWVzIG9yIGdyb3VwcyBvZiBob2JieSBnYW1lcnMuIFRoZXkgYXJlIHNpbXBsaXN0aWMsIHlldCBkZWVwLi4gCkl0IGEgeWVhciBvZiB5b3VyIGxpZmUuIFRyeSBpdCBvdXQuIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGRheXMgYWdvLiAKSG93IGNvdWxkIHRoZXkgbWFuYWdlIGFnYWluc3QgR2lhY2Npby4gClNoZSdzIDMgbW9udGhzLiAKU2hha2luZyBoYW5kcy4gVGhpcyBpcyBhIHRlbGwgZm9yIGEgcGxheWVyIGhvbGRpbmcgYSBtYWpvciBoYW5kLiBPZnRlbiwgcGxheWVycyBuZXJ2b3VzIGVub3VnaCB0byBzaGFrZSBrbm93IHRoYXQgdGhleSBhcmUgbm90IGluIGFueSBjb25kaXRpb24gdG8gYmx1ZmYuIEl0IHdvdWxkIGJlIHRvbyBub3RpY2VhYmxlLiBJbnN0ZWFkLCB0aGlzIHRlbGwgdHlwaWNhbGx5IGluZGljYXRlcyBuZXdlciBwbGF5ZXJzIHdobyBoYXZlIHRyb3VibGUgaG9sZGluZyBpbiB0aGVpciBlbW90aW9ucy4gRXhwZWN0IGFjZXMsIHNldHMsIG9yIG90aGVyIGh1Z2UgaGFuZHMgd2hlbiBzb21lb25lIGJldHMgd2l0aCBzaGFraW5nIGhhbmRzLls3XQpLbGJlciBkcmZlbiBkdXJjaCBkaWUgTXV0dGVyZ2VidW5kZW5lIEtsYmVyYXVmenVjaHQgaWhyZW4gTWlsY2hiZWRhcmYgaW4gZGVuIGVyc3RlbiB2aWVyIE1vbmF0ZW4gZGlyZWt0IGJlaSBpaHJlbiBNdHRlcm4gZGVja2VuLiAKSSBkb24ndCBob3cgU21pdGggY291bGQgc2VlIGhpbXNlbGYgd2lubmluZyBmaXZlIHJvdW5kcy4gSSBzYXcgdGhlIHNhbWUgZmlnaHRlciBhbmQgSSBvbmx5IGhhZCBTbWl0aCB3aW5uaW5nIHR3byByb3VuZHMgb2YgdGhlIGZpZ2h0LiBJIHRob3VnaHQgaGUgZm91Z2h0IHdlbGwgZW5vdWdoIHRvIHdpbiB0aGUgNnRoIGFuZCAxMXRoIHJvdW5kcywgYnV0IGRlZmluaXRlbHkgbm9uZSBvZiB0aGUgb3RoZXJzLiAKU28gSSB3YXMgdmVyeSBoYXBweSB5ZXN0ZXJkYXkgYXMgd2UgdHJhdmVyc2VkIHRoZSBzdHJlZXRzIG9mIG91ciBuZWlnaGJvcmhvb2QgdG8gaGF2ZSBhICJ0ZWFjaGFibGUgbW9tZW50IiBhcyB3ZSBkaXNjdXNzZWQgd2h5LCBvbiBhIGJsYXppbmcgaG90IGRheSwgc28gbWFueSB3b21lbiB3ZXJlIHdlYXJpbmcgaGlqYWIuIE15IGdpcmxzIGFjdHVhbGx5IGF0dGVuZCBzY2hvb2wgaW4gQnVybGluZ3RvbiwgVlQgd2l0aCBhIGZhaXIgbnVtYmVyIG9mIE11c2xpbSBnaXJscywgYnV0IHNvbWVob3cgdGhlIHNoZWVyIG51bWJlciBvZiB3b21lbiBjb3ZlcmVkIGZyb20gaGVhZCB0byB0b2UgaW4gdGhlIGJsYXppbmcgc3VuIGNhdWdodCB0aGVpciBleWUuLiAKRXNwZWNpYWxseSBkdXJpbmcgdGhlIGxhc3QgMTggZGF5cyBvZiBwcmVnbmFuY3ksIGEgc29vbiB0byBiZSBtb3RoZXIncyBwYWluIHRocmVzaG9sZCBlbGV2YXRlcyBhcyBwYWluIG1pdGlnYXRpbmcgb3Bpb2lkIHJlY2VwdG9ycyBnbyBvbiByZWQgYWxlcnQgYW5kIGxldmVscyBvZiBwYWluIHJlZHVjaW5nIGhvcm1vbmVzIHNwaWtlIFtzb3VyY2U6IFRvb21leV0uIApNSDogU2Vjb25kIHBlcmlvZCB1bmRlcndheS4gSHVnaHNvbiB0ZWxscyB1cyBSeWFuIEtlc2xlciBoYXMgYmVlbiB0aGUgYmVzdCBDYW51Y2sgZm9yd2FyZCB0aGlzIHNlYXNvbi4gSWYgdGhhdCBkb2VzbiBhZGVxdWF0ZWx5IHN1bSB0aGluZ3MgdXAsIEkgZG9uIGtub3cgd2hhdCBkb2VzLiBRdWVzdGlvbjogc2hvdWxkIEplZmYgRmluZ2VyIG5vdCBiZSB0aGUgbmFtZXNha2UgZm9yIHdoYXRldmVyIGRlZmVuc2l2ZSB1bml0IGhlIHBsYXlzIG9uPyBGaW5nZXIgcGFpcmluZyBoYXMgc3VjaCBhIG5pY2UgcmluZyB0byBpdC4gSSBjYWxsaW5nIENCQy4KVGhlIGJ1cmdlcnMgb24gdGhlIGRvbGxhciBtZW51IGFyZSBhbHNvIHByZXR0eSBzbWFsbCwgYXJvdW5kIDI1MCAzMDAgY2Fsb3JpZXMgZWFjaC4gClRoZSBzb3VyY2UgYXJndWVkIHRoYXQgTW51Y2hpbiB3YXMgImZyZWVsYW5jaW5nIiB3aXRoIGhpcyBjb21tZW50cyBvbiBTdW5kYXkgYW5kIHNhaWQgTW51Y2hpbiB3YXMgaW4gZGFuZ2VyIG9mIGJlY29taW5nICJSZXggVGlsbGVyc29uIDIuMCwiIHJlZmVycmluZyB0byB0aGUgZm9ybWVyIHNlY3JldGFyeSBvZiBzdGF0ZSB3aG9tIHRoZSBQcmVzaWRlbnQgcmVidWtlZCBmb3IgZ2V0dGluZyBhaGVhZCBvZiBoaXMgcG9zaXRpb25zLiBBIE1udWNoaW4gc3Bva2VzbWFuIGRpZCBub3QgaW1tZWRpYXRlbHkgcmVzcG9uZCB0byBhIHJlcXVlc3QgZm9yIGNvbW1lbnQuClRoaXMgaXMgdHJ1ZSBldmVuIGZvciBwZW9wbGUgd2hvIGhhdmUgcGFydGljaXBhdGVkIGluIG90aGVyIHRvdXJuYW1lbnRzIGJlZm9yZS4gCkVtZXJnZW5jeSBjcmV3cyBhcnJpdmVkIHRvIGZpbmQgdGhlIG1vdGhlciAgIEJpZWggSGEgUGFuICAgd2l0aG91dCB2aXRhbCBzaWducyBhbmQgaGVyIGh1c2JhbmQgICBIdWVpIEhhbm4gUGFuICAgd2l0aCBndW5zaG90IHdvdW5kcy4gVGhlaXIgZGF1Z2h0ZXIgd2FzIG5vdCBodXJ0IGFuZCB0aGUgZmF0aGVyIHdhcyB0YWtlbiB0byBob3NwaXRhbCB3aGVyZSBoZSByZW1haW5zIGluIHNlcmlvdXMgY29uZGl0aW9uLgpJdCB3b24gcHJvdGVjdCB0aGVtIGlmIHRoZXkgY29tbWl0IGNyaW1lcywgYnV0IGl0IHdpbGwgcHJldmVudCB0aGVtIGZyb20gYmVpbmcgdGhlIGZhbGwgZ3V5IGZvciBhbnkgd3Jvbmdkb2luZy4gVGhlIGNsZWFyYW5jZSB0aGluZyBpcyBhIGdyZWF0IGV4YW1wbGUuIFdoYXQgVHJ1bXAgZGlkIHdhcyB0ZWNobmljYWxseSBsZWdhbCwgYnV0IG5vdCBva2F5IGF0IGFsbC4gSWYgeW91IGRvbiB3cml0ZSBhIG1lbW8gYW5kIGp1c3QgZm9sbG93IFRydW1wIHRlY2huaWNhbGx5IGxlZ2FsIG9yZGVycyBhbmQgdGhlIG5ld3MgYmVjb21lcyBwdWJsaWMsIFRydW1wIHdpbGwgYmxhbWUgeW91LiBJZiB5b3Ugd3JpdGUgYSBtZW1vLCBUcnVtcCB3aWxsIHN0aWxsIHByb2JhYmx5IHRyeSB0byBibGFtZSB5b3UgYXQgc29tZSBwb2ludCwgYnV0IGhlIGxvb2sgbGlrZSBhbiBpZGlvdCB3aGVuIHRoZSBtZW1vIGJlY29tZXMgcHVibGljLgpXaGVyZTogVmVudWVUaWZmYW55IFlvdW5nIChib3JuIFN0ZXBoYW5pZSBZb3VuZyBId2FuZykgaXMgYW4gQW1lcmljYW4gc2luZ2VyIHdobyB3YXMgdGFrZW4gaW50byB0aGUgU291dGggS29yZWFuIEsgcG9wIGZhY3RvcnkgU00gRW50ZXJ0YWlubWVudCBhdCBhZ2UgMTUgYW5kIGZpcnN0IG1hZGUgYW4gYXBwZWFyYW5jZSBhcyBhIG1lbWJlciBvZiB0aGUgZ2lybCBncm91cCBHaXJscyBHZW5lcmF0aW9uLiBTaGUgaXMgc3RpbGwgYSBtZW1iZXIgb2YgdGhlIGdyb3VwLCBidXQgbGF1bmNoZWQgaGVyIHNvbG8gY2FyZWVyIGluIDIwMTYgdG8gc29saWQgc3VjY2Vzcy4gUG9wIGlUdW5lcyBjaGFydCBqdXN0IGJlbG93IEFyaWFuYSBHcmFuZGUgdGhhbmsgdSwgc2hlIGlzIG9uIGEgbWluaSB0b3VyLiAKV2hhdCB0byBwcmVwYXJlOiBXZWlnaHRzLCBlcXVpcG1lbnQgZm9yIGVhY2ggd29ya291dCwgYW5kIHlvZ2EgbWF0cyBhcmUgYWxsIHByb3ZpZGVkIGJ5IHRoZSBneW0uIFdlYXIgY29tZm9ydGFibGUgd29ya291dCBjbG90aGVzIGFuZCBzaG9lcyB0byBtb3ZlIGFyb3VuZCBpbiwgYW5kIGJyaW5nIGEgd2F0ZXIgYm90dGxlIHRoZXJlIGFyZSBvY2Nhc2lvbmFsIGJyZWFrcyBiZXR3ZWVuIGNpcmN1aXRzIGFuZCBoeWRyYXRpb24gaXMgZW5jb3VyYWdlZC4KSXQncyBhIGdvb2QgcG9pbnQsIGJ1dCB5b3UgbmVlZCB0byB1bmRlcnN0YW5kIHRoZSBtaW5kIHNldCBvZiB0aGUgYXZlcmFnZSBkcnVnIGRlYWxlciwgdGhpcyBpcyB0aGUgd2F5IHRoZXkgbWFrZSB0aGVpciBsaXZpbmcsIHN1cHBvcnQgdGhlaXIgZmFtaWxpZXMsIHRoZXkgaGF2ZSBubyBvdGhlciBjYXJlZXIsIGFuZCBpZiB0aGV5IGRvbid0IHNlbGwgdGhlIER1ZGUgZG9wZSwgbmV4dCBndXkgZG93biB0aGUgYmxvY2sgd2lsbCwgYW5kIG5vIG9uZSB0b2xkIHRoZSBEdWRlIHRvIGdldCBob29rZWQgb24gaXQgaW4gdGhlIGZpcnN0IHBsYWNlLiAKRGlub3NhdXJwdW5jaGVyIHUKSSBlbmRlZCB1cCBqdXN0IGRvaW5nIGxpZ2h0IGpvZ3MgdW50aWwgSSBsb3N0IGEgZ29vZCBwb3J0aW9uIG9mIHRoZSB3ZWlnaHQuIFdoZW4gSSBzdGFydGVkIHJ1bm5pbmcvdHJhaW5pbmcgaGFyZGVyIGFnYWluLCB5b3UgYmV0dGVyIGJlbGlldmUgdGhlIHNwZWVkIHdvcmsgd2FzIHdheSBXQVkgZWFzaWVyLiBJIGdvaW5nIHRocm91Z2ggdGhhdCBwcm9jZXNzIGFnYWluIG5vdyBhcyBJIHRyeSB0byBsb3NlIGFub3RoZXIgZmV3IHBvdW5kcyB0byBtaW5pbWl6ZSBwcmVzc3VyZSBvbiBteSBrbmVlcy4uIApLdXJza29zdGVuOiA1MiAvVGFnIGlua2wuIGtvbWZvcnRhYmxlciBVbnRlcmt1bmZ0IHVuZCBWb2xscGVuc2lvbiAoU2Fpc29uZ2VyZWNodGUsIHZvbGx3ZXJ0aWdlLCB2ZWdldGFyaXNjaGUgLyB2ZWdhbiBIb2ZrY2hlKS4gQWxsZSBEZXRhaWwgSW5mb3JtYXRpb25lbiBpbSBLdXJzcHJvZ3JhbW0KVGhlIGNydWVsdHkgaW1wdWxzZSBjb21lcyBmcm9tIG5vdCBoYXZpbmcgYmVlbiBoaXQgYmFjayB3aXRoIGFueXRoaW5nLCBhbmQgdGhleSBsaWtlIGtpdHRlbnMgd2hvIGRvbiB1bmRlcnN0YW5kIHRoZSBwb3dlciBvZiB0aGVpciBiaXRlIHVudGlsIHRoZXkgZ2V0IGJpdHRlbiBieSBvdGhlciBjYXRzLiAKJDMwMCBpc2ggaXMgdG9vIGhpZ2ggZm9yIGEgTW9ub2xvZ3VlLCBwcmV0dHkgc3VyZSAkMzAwIHdpbGwgZ3JhYiBhIGJyYW5kIG5ldyBvbmUgaWYgSSByZW1lbWJlciBjb3JyZWN0bHkuIApLYXJsIFZvZ2VsLCBXYXluZSBIdXJkLCBOb3JtYW4gQWxmZiwgRG9uYWxkIEdvZWhsLCBKb2huIE1hdGhlc29uLCBEb25hbGQgVXBzb24sIEphbWVzIEtlc3RvbCwgRC4gSC4gTWFjQ3VsbG9jaCwgR3V5IE11cnBoeSwgRXJ2aW4gSm9obnNvbiwgUmF5IENsYXJrLCBNYXJ2aW4gU3BlZXIsIFBhbG1lciBHaWxiZXJ0c29uLCBDLiAKSW4gYSAkNS8xMCBnYW1lIGl0IG1heSBiZSAkMi4gSXQgaXMgYWR2aXNhYmxlIHRvIGFzayBhYm91dCB0aGUgc2l6ZSBvZiB0aGUgYW50ZXMgYW5kIGJyaW5nIGluIGJldHMgYmVmb3JlIHlvdSBzaXQgZG93biBpbiBhIGdhbWUuIApXaXRoIHJpc2luZyBibGluZHMsIHNob3J0IHN0YWNrcyB3aWxsIGJlIGdvaW5nIGluIHdpdGggYSB3aWRlIHZhcmlldHkgb2YgaGFuZHMgc28gZXhjZXB0IGZvciBkb21pbmF0ZWQgQWNlIFggaG9sZSBjYXJkcywgeW91IHNob3VsZCBiZSBsb29raW5nIHRvIGdldCB0aGVtIGFsbCBpbi4gWW91IHdvbid0IHdpbiB0aGVtIGFsbCwgYnV0IGlmIHlvdSB3aW4gb25lIG9mIHRocmVlIHNpdHVhdGlvbnMgeW91IGFyZSBzdGlsbCB0aGUgdGFibGUgY2FwdGFpbi4uIApTYW50YSBDcnV6IGRlIExhIFBhbG1hLCBtaXQgZGVtIGdydGVuIEhhZmVuIGRlciBJbnNlbCwgaXN0IGVpbmUga2xlaW5lIHZlcnNjaGxhZmVuZSBTdGFkdCwgaW4gZGVyIGJlcmVpdHMgdW0gMjE6MDAgVWhyIGRpZSBGdWduZ2Vyem9uZSBsZWVyZ2VmZWd0IGlzdC4gCk9uIHRvcCBvZiB0aGUgZW50ZXJ0YWlubWVudCBhbWVuaXRpZXMsIHNoZSBzYWlkIFdpbm5pY2tpIGVhc2VkIGhlciBhbnhpZXR5IGJ5IGJlaW5nIHZlcnkgb3BlbiBhYm91dCB3aGF0IGhlIHdhcyBnb2luZyB0byBiZSBkb2luZyBhbmQgd2hhdCBoZXIgZXhwZXJpZW5jZSB3b3VsZCBiZSBsaWtlLiBBZnRlciBhdm9pZGluZyB0aGUgZGVudGlzdCBmb3IgeWVhcnMsIE5vdmVsbGEgc2FpZCBzaGUgaXMgbm8gbG9uZ2VyIGFmcmFpZCBhbmQgd2VudCBiYWNrIHRvIFdpbm5pY2tpIGZvciBtb3JlIGRlbnRhbCB3b3JrLCB3aGljaCBhbGxvd2VkIGhlciB0byBjYXRjaCB0aGUgc2Vjb25kIGluc3RhbGxtZW50IG9mICJQaXJhdGVzIG9mIHRoZSBDYXJpYmJlYW4uIgpUaGUgY2hhcmFjdGVyIGRldmVsb3BtZW50IHdhc24gZ3JlYXQsIGJ1dCBzdGlsbCBiZXR0ZXIgdGhhbiB0aGUgYm9vay4gSXQgZGVmaW5pdGVseSBnb3QgdGhlIFNwaWVsYmVyZyB0cmVhdG1lbnQsIGJ1dCBub3QgaW4gYSBiYWQgd2F5LiAKTm8uIEF0IHRoZSB2ZXJ5IGxlYXN0IHlvdSBuZWVkIHdhdGVyIHRvIGNvbWJhdCB0aGUgZGVoeWRyYXRpbmcgZWZmZWN0IG9mIHBlcnNwaXJhdGlvbi4gWW91IGFsc28gbmVlZCBwcm90ZWlucyB0byBtYWludGFpbiB5b3VyIGJvZHkuIFRoZW4geW91IG5lZWQgY2FyYm9oeWRyYXRlcywgZmF0LCB2aXRhbWlucyBhbmQgc3BvcmUgZWxlbWVudHMgdG8gZ2V0IHRoZSBwcm9jZXNzIG9mIG1haW50ZW5hbmNlIChhbmQgZ3Jvd3RoKSBnb2luZy4gQW5kIHlvdSBuZWVkIHRvIGJyZWF0aGUgZ29vZCBhaXIuIEl0IGRyaXZlcyB0aGUgcGhvdG9zeW50aGVzaXMgaW4gcGxhbnRzIHdoaWNoIHlvdSBlYXQgb3IgZWF0IGFuaW1hbHMgdGhhdCBlYXQgdGhlIHBsYW50cywgcG93ZXJzIHRoZSBoeWRvbG9naWMgY3ljbGUgd2hpY2ggbWFrZXMgcmFpbiBhbmQgcml2ZXJzLCBvY2VhbnMgYW5kIGxha2VzLCB3YXJtcyB0aGUgb2NlYW4gZm9yIGN1cnJlbnRzIHRvIGJyaW5nIGZvb2QgdG8gZmlzaCwgY3JlYXRlZCB0aGUgb2lsIGdhcyBhbmQgY29hbCB3aGljaCBmdWVscyBvdXIgZWNvbm9teSBhbmQgaGVhdHMgb3VyIGhvbWVzLiBFdmVuIHRoZSBzdW4ncyBncmF2aXRhdGlvbmFsIGVuZXJneSBjcmVhdGVzIHRpZGVzIGluIHRoZSBlYXJ0aHMgY29yZSB3aGljaCAoYWxvbmcgd2l0aCB0aGUgZGVjYXkgb2YgcmFkaW9hY3RpdmUgZWxlbWVudHMgZm9ybWVkIGluIHRoZSBkZXN0cnVjdGlvbiBvZiBwcmV2aW91cyBzdW5zKSBrZWVwIHRoZSBjb3JlIHdhcm0uIEFuc3dlcjogVGhlIHRlcm0gJ2JyZWF0aGFyaWFuaXNtJyBpcyB1c2VkIGJ5IHNvbWUgdG8gbWVhbiB0aGUgcHJhY3RpY2Ugb2YgbGl2aW5nIG9mZiB0aGUgcHJhbmEgKGxpZmUgZW5lcmd5KSBvZiBsaWdodCBmcm9tIHRoZSBzdW4uIFRoZSBzYWdlcyBvZiBJbmRpYSBpbiBhbmNpZW50IHRpbWVzIHdlcmUgc2FpZCB0byBoYXZlIHBlcmZlY3RlZCB0aGUgYWJpbGl0eSB0byBrZWVwIHRoZSBib2R5IGFsaXZlIGZvciB5ZWFycyBieSBkaXJlY3RseSBhYnNvcmJpbmcgdGhlIGVuZXJneSBvZiB0aGUgc3VuLCB0aHJvdWdoIHN1cGVybmF0dXJhbCB0YW50cmljIGFuZCB5b2dpYyBwcmFjdGljZXMgbGVhcm5lZCB1bmRlciB0aGUgZ3VpZGFuY2Ugb2YgYW4gYWNjb21wbGlzaGVkIGd1cnUuIFRoZW9yZXRpY2FsbHkgdGhpcyBjb3VsZCBzdGlsbCBiZSBkb25lLCBidXQgYW4gb3JkaW5hcnkgcGVyc29uIHdvdWxkIG5ldmVyIGJlIGFibGUgdG8gYWNoaWV2ZSB0aGlzLiAoRnVsbCBBbnN3ZXIpCklzIGFsbCBjaGlwcyBnbHV0aW4gZnJlZQpUaGUgYmVzdCBwYXJ0IGlzIHRoYXQgdGhlc2UgbWV0aG9kcyBhcmUgcmlzayBmcmVlIGJ1dCB3aGVuIHVzZWQgY29ycmVjdGx5LCB0aGV5IHdpbGwgZXZlbiBoZWxwIHlvdSBpbiB3aW5uaW5nIG1hc3NpdmUgamFja3BvdHMuIApPdXIgZ2FsYXh5IGhhcyB0aGUgbWFzcyBvZiAxMDAgYmlsbGlvbiBvZiBvdXIgc3VucywgYnV0IHByb2JhYmx5IGhhcyBjbG9zZXIgdG8gdGhlIHJhbmdlIG9mIDIwMCA0MDAgYmlsbGlvbiBzdGFycyBvZiB2YXJ5aW5nIHNpemVzLiAKRm9yIG1lLCBJIHdhcyB0cmVhdGVkIGZvciBhYm91dCB0d28gbW9udGhzLCBkZWNsYXJlZCBjdXJlZCwgYW5kIHllYXJzIGxhdGVyIEkgU1RJTEwgY2FuJ3Qgd2FsayB3aXRob3V0IGEgY2FuZSBhbmQgZXZlbiB0aGVuIEkgZ2V0IGFib3V0IDUwIHN0ZXBzIGluIGJlZm9yZSBJIGNhbid0IGRvIGFueW1vcmUuIEkgcmVseSBvbiB2b2ljZSB0byB0ZXh0IHRvIHR5cGUgYmVjYXVzZSBteSBoYW5kcyBhcmUgZnVja2VkLiAKIlRoZSBhcHBlYWwgbXVzdCBiZSBhbGxvd2VkIGFuZCBhIG5ldyB0cmlhbCBvcmRlcmVkIGJlY2F1c2UgdGhlIGFwcGxpY2F0aW9uIGp1ZGdlJ3MgZmFpbHVyZSB0byBwcm92aWRlIHJlYXNvbnMgZm9yIHJlZnVzaW5nIHNldmVyYW5jZSBmcnVzdHJhdGVzIG1lYW5pbmdmdWwgYXBwZWxsYXRlIHJldmlldywiIHRoZSBDb3VydCBvZiBBcHBlYWwgc2FpZCBpbiBpdHMgZGVjaXNpb24gb24gVGh1cnNkYXkuICJJdCBpcyBub3QgYXBwYXJlbnQgZnJvbSB0aGUgcmVjb3JkIHdoeSB0aGUgYXBwbGljYXRpb24ganVkZ2UgZGVjaWRlZCB0aGUgaXNzdWUgaW4gdGhlIG1hbm5lciB0aGF0IGhlIGRpZC4iCkkgaGFkIG5vIG1vbmV5LCBubyBmb29kIGhlIHdhcyBubyBoZWxwIGNhdXNlIGhlIHdhcyBwYXJ0eWluZyB3aXRoIGZyaWVuZHMgd2hpbGUgaSB3YXMgbWFsbm91cmlzaGVkIGFuZCBjb3VsZG50IGV2ZW4gcnVuIG1lIHRvIGEgaG9zcGl0YWwuIApGb3IgZXhhbXBsZSwgaW4gdGhlIGFib3ZlIGV4YW1wbGUgd2hlbiB0aGUgb3Bwb25lbnQgbWFkZSBhICQyMCBkb2xsYXIgYmV0IGludG8gYSBwb3Qgb2YgJDEwMCBvcHRpbWFsIHRoZW9yeSBzYXkgZm9sZCA2IG91dCBvZiB0aGUgb25lIHRpbWUsIGJ1dCBpZiB5b3UgaGF2ZSBiZWVuIG5vdGljaW5nIHRoZSBndXkgaGFzIGJlZW4gYmx1ZmZpbmcgYSBsb3QgbW9yZSB0aW1lcyB0aGFuIGlzIG9wdGltYWwgZ2FtZSB0aGVvcnksIHRoZW4gdGhlIG9ubHkgd2F5IHRvIG1ha2UgbW9uZXkgaXMgdG8gY2FsbCBoaW0gbW9yZSB0aGFuIGlzIG9wdGltYWwgYWNjb3JkaW5nIHRvIGdhbWUgdGhlb3J5IGFuZCB0cnkgdG8gb3V0IHBsYXkgeW91ciBvcHBvbmVudCBvciBpbXByb3ZlIHlvdXIgaGFuZC4gSWYgeW91IG5vdGljZSBhIHRpZ2h0IHBsYXllciBmb2xkaW5nIG1vcmUgdGhhbiBpcyBvcHRpbWFsLCB0aGFuIGJsdWZmaW5nIG1vcmUgdGhhbiBvcHRpbWFsIGlzIGdvaW5nIHRvIGJlIHRoZSBiZXN0IHN0cmF0ZWd5IHRvIG1ha2UgYSBwcm9maXQuIApQbGF5ZXJzIHdpbGwgaGF2ZSBhIGNoYW5jZSB0byBwbGF5IGFnYWluc3QgR2Fsd2F5IHR3byBncmVhdGVzdCBwb2tlciBwbGF5ZXJzIGFzIEp1ZGUgQWluc3dvcnRoIGFuZCBGaW50YW4gR2F2aW4gd2lsbCBiZSB0YWtpbmcgcGFydC4gQWluc3dvcnRoIGlzIGEgZm9ybWVyIHdpbm5lciBvZiB0aGUgSXJpc2ggUG9rZXIgQ2hhbXBpb25zaGlwIGFuZCBoYXMgd29uIG1vcmUgdGhhbiBpbiB0b3VybmFtZW50cy4gRmludGFuIHJlY2VudGx5IHdvbiB0aGUgVUsgYW5kIElyZWxhbmQgUG9rZXIgVG91ciBNYWluIEV2ZW50IGluIEVkaW5idXJnaCBhbmQgd2FzIHJ1bm5lciB1cCBpbiB0aGUgRXVyb3BlYW4gUG9rZXIgVG91ciBCYXJjZWxvbmEgQ2hhbXBpb25zaGlwIHdoaWNoIGVhcm5lZCBoaW0gcHJldmlvdXMgeWVhcnMsIHRoZXNlIFNpbW9uIHBva2VyIG5pZ2h0cyBoYXZlIHByb3ZlbiB0byBiZSBhIGdyZWF0IG5pZ2h0IHdpdGggZXZlcnlvbmUgaGF2aW5nIGZ1biwgcGxheWluZyBzb21lIHNlcmlvdXMgcG9rZXIsIGFuZCByYWlzaW5nIG1vbmV5IGZvciBhIGZhbnRhc3RpYyBjYXVzZS4uIApBbGwgdGhlIHBsYXllcnMgc3RhcnQgd2l0aCB0aGUgc2FtZSBudW1iZXIgb2YgY2hpcHMgYW5kIHRoZSB3aW5uZXIgY29sbGVjdHMgdGhlbSBhbGwuLiAKVGhlIGZpcnN0IHRoaW5nIHRoYXQgeW91IG11c3QgdW5kZXJzdGFuZCB3aGVuIGl0IGNvbWVzIHRvIGNsZWFuaW5nIHBva2VyIGNoaXBzIGlzIHRoYXQgY2VydGFpbiB0eXBlcyBhcmUgbW9yZSBwcm9uZSB0byBhY2N1bXVsYXRpbmcgZGlydCwgYW5kIGdyaW1lIHRoYW4gb3RoZXIgdHlwZXMuIFRoZSBpbmdyZWRpZW50cyBpbiBwb2tlciBjaGlwcyBwbGF5IGEgbGFyZ2Ugcm9sZSBpbiB0aGlzLiBQb2tlciBjaGlwcyB0aGF0IGFyZSBjb21wb3NlZCBvZiBjbGF5LCBmb3IgaW5zdGFuY2UsIGFyZSBtdWNoIG1vcmUgbGlrZWx5IHRvIGFjY3VtdWxhdGUgZGVicmlzIGFuZCBldmVuIGZhZGUgYXMgdGltZSBwcm9ncmVzc2VzLiAKUGV0cmllICgxODIxIDE5MDQpIHdlcmUgcGlvbmVlcnMgb2YgZWxlY3RyaWMgbGlnaHRpbmcgd2hvIHJlY2VpdmVkIGxpdHRsZSByZWNvZ25pdGlvbiBmb3IgdGhlaXIgd29yay4gQWx0aG91Z2ggYSBzYXRpc2ZhY3Rvcnkgc2VsZiByZWd1bGF0aW5nIGFyYyBsYW1wIHdhcyBkZXZlbG9wZWQsIGNvbW1lcmNpYWwgc3VjY2VzcyB3YXMgbm90IGFjaGlldmVkIG93aW5nIHRvIHRoZWlyIHJlbGlhbmNlIG9uIHByaW1hcnkgYmF0dGVyaWVzIGFzIHRoZSBvbmx5IHNvdXJjZSBvZiBwb3dlci4gICJTdGFpdGUgYW5kIFBldHJpZTogcGlvbmVlcnMgb2YgZWxlY3RyaWMgbGlnaHRpbmciLCBHLiAKQnV0IGlmIHlvdSBsaXRlcmFsbHkgc3RhbmQgYXJvdW5kIGRvaW5nIHRoZSBIYXJkZW4gc3RhdHVlIGltcHJlc3Npb24sIHlvdSBnb25uYSBnZXQgc2hpdCBmb3IgaXQuIApGb3Igb3VyIGZpcnN0IGFubml2ZXJzYXJ5LCBteSBodXNiYW5kIGFuZCBJIHdlbnQgdG8gYSAoc2VtaSkgZmFtb3VzIGxvY2FsIGxhbmRtYXJrLCBhIHdoaW1zaWNhbCBidXQgbWlnaHR5IHVzZWQgYm9vayBlbXBpcmUgY2FsbGVkICJUaGUgQm9vayBCYXJuLCIgYW5kIG92ZXIgdGhlIGNvdXJzZSBvZiBvdXIgZGF5IGJvdWdodCBhIGNvdXBsZSBodW5kcmVkIGRvbGxhcnMgb2YgcmFuZG9tIGJ1dCBpbnRlcmVzdGluZyB1c2VkIGJvb2tzLiAKIkRlcm1hdG9sb2dpc3RzIGxvdmUgdG8gdGFrZSBjYXJlIG9mIGFjbmUsIiBzYXlzIE1hcmlhbm5lIE8nRG9uYWdodWUsIGEgQ2hpY2FnbyBkZXJtYXRvbG9naXN0IGFuZCB2aWNlIHByZXNpZGVudCBvZiB0aGUgQW1lcmljYW4gQWNhZGVteSBvZiBEZXJtYXRvbG9neSwgImJlY2F1c2Ugd2UgZG8gaXQgd2VsbCBhbmQgY2FuIGdldCBwZW9wbGUgYmFjayBpbnRvIHRoZSBjb21tdW5pdHkgd2l0aCB0aGVpciBzZWxmIGVzdGVlbSByZXN0b3JlZC4iLiAKTm93IHRoZSB0d28gY29tcGFuaWVzICAgb25lIHRyYWRpdGlvbmFsbHkgYW5hbG9nIGFuZCBvbmUgZGVjaWRlZGx5IGRpZ2l0YWwgICBhcmUgam9pbmluZyBmb3JjZXMgdG8gcHJvbW90ZSBib3RoIEFkb2JlJyBQaG90b3Nob3AgYW5kIGEgbmV3IGdhbWUgZnJvbSBXaXphcmRzIG9mIHRoZSBDb2FzdC4uIApJIGF0IGEgcG9pbnQgbm93IHdoZXJlIEkgZmluZSBvbiBib3RoIGJvYXJkIHR5cGVzLCB0aG91Z2ggc29tZXRpbWVzIEkgc3dpdGNoIHRvIGZuIG1vZGUgd2hlbiBub3Qgb24gYSBmbiBrZXlib2FyZCwgd2hpY2guIEkgZmVlbCBpcyBteSBib2R5IHN1YmNvbnNjaW91c2x5IHRlbGxpbmcgbWUgdGhhdCBmbiBtb2RlIGlzIG1vcmUgbmF0dXJhbCB0aGFuIGhhdmluZyBhbiBlbnRpcmUgZXh0cmEgcm93IG9mIGtleXMuClRoZXkgc3RpbGwgZG8gdGhpcy4gClR3byBvdGhlciBzZWdtZW50cyBlYWNoIG1hZGUgdXAgbW9yZSB0aGFuIDIwIHBlcmNlbnQgb2Ygcm9vbXMgaW4gdGhlIHRvdGFsIGFjdGl2ZSBwaXBlbGluZTogdGhlIFVwcGVyIFVwc2NhbGUgc2VnbWVudCAoMjMuOSBwZXJjZW50IHdpdGggNSwwNjcgcm9vbXMpIGFuZCB0aGUgRWNvbm9teSBzZWdtZW50ICgyMi40IHBlcmNlbnQgd2l0aCA0LDc0OCByb29tcykuIApNeSBhY3Rpb24gc3RhdGlvbiB3YXMgb24gdGhlIGRlcHRoIGNoYXJnZSBzdG9yZS4gSWYgeW91IGhhcHBlbmVkIHRvIGJlIGRvd24gb24gd2F0Y2gsIGlmIEkgd2FzIGluIHRoZSBzdG9rZSBob2xkLCBhbmQgeW91IHdlcmUgZG93biB0aGVyZSBhbGwgYWxvbmUgYmVjYXVzZSB5b3UgaGFkIHR3byBkaWZmZXJlbnQgc3Rva2UgaG9sZHMgdG8gbG9vayBhZnRlciwgYW4gYWN0aW9uIHN0YXRpb24gYmVsbCB3ZW50LCB3ZWxsLCBJIGJlIHRoZXJlIHVudGlsIHRoZSBhbGwgY2xlYXIgd2VudC4gSWYgSSB3YXNuIG9uIHdhdGNoLCB0aGVuIGV2ZXJ5Ym9keSBoYWQgYSBwbGFjZSB0aGV5IGhhZCB0byBnbyBhbmQgbWluZSB3YXMgb24gdGhlIHN0YXJib2FyZCBzaWRlIGRlcHRoIGNoYXJnZSBzdG9yZS4gQW5kIEkgYmUgdGhlcmUgdW50aWwgd2UgZ290IHRoZSBhbGwgY2xlYXIuIFdlIGJlIHRocm93aW5nIGNoYXJnZXMuCk1pYW1pIERhZGUgRmlyZSBJbnNwZWN0b3JzIENoZWNrIFN0YW5kcyBGb3IgSWxsZWdhbCBGaXJld29ya3MgVGhhdCBGbHkgT3IgQmxvdyBVcEV2ZXJ5b25lIGVuam95cyBhIGdvb2QgZmlyZXdvcmsgc2hvdywgYnV0IHRob3NlIHB5cm90ZWNobmljcyBhcmUgcHJldHR5IHBvd2VyZnVsLgpCYWQ/IEFzIHNvb24gYXMgSSBnb3QgaG9tZSBmcm9tIE1hc3MsIEkgbGVhcm5lZCBteSBjb3VzaW4gcGFzc2VkIGF3YXkgb2YgYSBkcnVnIG92ZXJkb3NlLiBTdGlsbCBpbiBzaG9jay4gUHJheWVycyBmb3IgaGlzIHNvdWwsIHBsZWFzZQpUaGUgZmVkZXJhbCBhZ2VuY3kgc2FpZCBUaHVyc2RheSB0aGF0IHRoaXMgaXMgdGhlIHRlbnRoIHF1YXJ0ZXIgaW4gYSByb3cgd2hlcmUgaXQgaGFzIGdpdmVuIHRoZSBuYXRpb25hbCBob3VzaW5nIG1hcmtldCBhIGFzc2Vzc21lbnQuClRoZSBuZXh0IHRpbWUgc2hlIHdhbnRzIHRvIHZpc2l0LCAiSSdtIHNvcnJ5IGJ1dCB3ZSBhcmVuJ3QgZ29pbmcgdG8gZ2l2ZSB5b3UgdGhlIG9wcG9ydHVuaXR5IGVuZGFuZ2VyIG15IGh1c2JhbmQgYWdhaW4uIFlvdSBhcmUgd2VsY29tZSB0byB2aXNpdCBpZiB5b3Ugc3RheSBpbiBhIGhvdGVsIGFuZCByZW50IGEgY2FyIGJ1dCB5b3UgYXJlIG5vIGxvbmdlciB3ZWxjb21lIGluIG91ciBob3VzZS4iIEV2ZW4gYmV0dGVyIGlmIHlvdSBsaXZlIGluIGFuIGFyZWEgd2l0aCBhIGxvdCBvZiBzbm93LCB5b3UgY2FuIGZsYXQgb3V0IHJlZnVzZSBkdXJpbmcgYW55IG1vbnRoIGluIHdoaWNoIGl0IG1pZ2h0IHNub3cgKHdoZXJlIEkgbGl2ZSB0aGF0J3MgT2N0b2JlciAgIEFwcmlsKS4gCllvdSBtYXkgbm90IEdFVCBpbnN1cmFuY2UsIGFmdGVyIHlvdXIgY29udmljdGlvbiBhbmQgc3VzcGVuc2lvbi4KU28sIGFzIG1lbnRpb25lZCBhYm92ZSwgdGhlIGRldGVjdGlvbiBsaW1pdHMgYXJlbiBmaW5lIGVub3VnaCB0byBlbnN1cmUgYWJzb2x1dGVseSBubyBwcmVzZW5jZSBvZiBjYW5jZXIuLiAKSSBrbm93IGV2ZXJ5b25lJ3MgbWFkIGFib3V0IHRoZSBubyBjYWxsIGF0IHRoZSBlbmQgYnV0IHRoYXQncyBub3QgdGhlIGZpcnN0IHRpbWUgaXQncyBoYXBwZW5lZCBhdCB0aGUgZW5kIG9mIGFueSBnYW1lLiBIb3cgbWFueSB0aW1lcyBoYXZlIHdlIHNlZW4gb2ZmaWNpYWxzIHN3YWxsb3cgdGhlaXIgd2hpc3RsZXMgaW4gdGhlIGxhc3Qgc2Vjb25kcyBvZiBOQkEgZ2FtZXM/IEkndmUgc2VlbiBMaWxsYXJkIGdvIGZvciB0aGlzIHNhbWUgcGxheSBtYW55IHRpbWVzIGJlZm9yZSBhbmQgbm90IGdldCBjYWxsZWQgYXQgdGhlIHJpbSwgaGUncyBnb3R0YSBzdGFydCByZWFkaW5nIHRoZSBkZWZlbnNlIGFmdGVyIHRob3NlIGJyZWFrZG93bnMgYW5kIGhpdCB0aGUgb3BlbiBtYW4sIEhvb2Qgd2FzIG9wZW4gaW4gdGhlIGNvcm5lciB3aXRoIGxpa2UgNCBzZWNvbmRzIGxlZnQuIApBIGhpZ2hsaWdodCBvbiB0aGUgbG9uZyB0cmVhdG1lbnQgbWVudSBpcyB0aGUgVGhhaSBib2R5IHdyYXAgKCQ2NSksIHdoaWNoIHVzZXMgd2hpdGUgbXVkLCBtaWxrLCBob25leSwgdHVybWVyaWMsIG1pbnQsIGFuZCB0YW1hcmluZC4gCkJlIGxlc3MgbGlrZWx5IHRvIGJsdWZmLiAKSW4gMjAwOSwgRGFuaWVsIFNoYXJrZXkgd2FzIGxhaWQgb2ZmIGFzIGEgcGxhbnQgbWFuYWdlciBvZiBhIHRvb2wgYW5kIGRpZSBmYWN0b3J5LCBhZnRlciBuZWFybHkgMzAgeWVhcnMgd2l0aCB0aGUgY29tcGFueS4gQSBnYXJhZ2UgdGlua2VyZXIsIE1yLiBTaGFya2V5IGhhZCBkZXNpZ25lZCBoaXMgb3duIGFkanVzdGFibGUgZGVzayBmb3Igc3RhbmRpbmcuCkhlIGhhcyBiZWVuIGludm9sdmVkIGluIHRyYWRpbmcsIHJpc2sgbWFuYWdlbWVudCwgYW5kIHBvcnRmb2xpbyBtYW5hZ2VtZW50IGZvciBQcnVkZW50aWFsIEluc3VyYW5jZSwgSlBNb3JnYW4sIFJhYm9iYW5rLCBhbmQgQ2l0aWdyb3VwLiAKWW91IGNhbiBjaGFuZ2UgdGhlIHBhc3QuIApGcmVuY2ggcHJlc2lkZW50IE5pY29sYXMgU2Fya296eSBpbnNpc3RzIHRoYXQgc3VjaCByZWxpZ2lvdXMgZ2FyYiBoYXMgbm8gcGxhY2UgaW4gc2VjdWxhciBGcmFuY2UgYW5kIHRoYXQgaXQgb3BwcmVzc2l2ZSB0byB3b21lbi4gClNoZSBjYW1lIGZyb20gU2hlbnpoZW4gKGxhc3Qgd2Vlaykgd2hlcmUgc2hlIHdvbiB0aGUgdG91cm5hbWVudCBzbyBJIGtuZXcgaXQgd291bGQgYmUgYSB0b3VnaCBtYXRjaCwiIHNhaWQgS3ZpdG92YS4iVW5mb3J0dW5hdGVseSBJIGxvc3QgKHRvIGhlcikgYXQgdGhlIFVTIE9wZW4gYnV0IEknbSBoYXBweSB3aXRoIG15IHBlcmZvcm1hbmNlIGhlcmUgaW4gdGhlIGZpcnN0IHJvdW5kLiJJdCdzIGFsd2F5cyB0b3VnaCB0byBwbGF5IGhlciwgc2hlJ3MgYSBiaWcgc2VydmVyLCBiaWcgaGl0dGVyLi4gClRoZSBwb2xpY2UgaXNzdWUgdGhlbSB3aXRoIHVuanVzdGlmaWFibGUgdGlja2xldHMuIApDaGluZXNlIFR1aW5hICggbWFzc2FnZSBwcmFjdGl0aW9uZXJzIGlkZW50aWZ5IHBhdGh3YXlzIHdpdGggbGltaXRlZCBmbG93IGFuZCB1c2UgaGFuZCBwcmVzc3VyZSB0byByZXN0b3JlIGhhcm1vbnkgYW5kIGVuZXJneSBjaXJjdWxhdGlvbi5UaGlzIHNlbWluYXIgYWltcyB0byBpbnRyb2R1Y2UgdGhlIHRoZXJhcGV1dGljIGJlbmVmaXRzIG9mIFR1aW5hIG1hc3NhZ2UgYW5kIGV4cGxhaW4gaG93IGl0IGhlbHBzIGJhbGFuY2Ugb3VyIGhlYWx0aCBob2xpc3RpY2FsbHkuIApUaGlzIHNjaG9vbCBpc3N1ZSwgdG8gbWUsIHN1Z2dlc3RzIHRoZSBvcHBvc2l0ZS4gCkRvbmtpbkFyb3VuZCB1CkhvdyB0byBUcmVhdCBhIFBpbmNoZWQgTmVydmUKVGhlcmUgYXJlIGV4dGVybmFsIGJvZHkgcGFydHMsIHJlcHJvZHVjdGl2ZSBvcmdhbnMsIHNlY29uZGFyeSBzZXggY2hhcmFjdGVyaXN0aWNzLCBhbmQgY2hyb21vc29tZXMgKG5vdCB0byBtZW50aW9uIGdlbmRlciBwcmVzZW50YXRpb24sIGN1bHR1cmFsIG5vcm1zLCBhbmQgYSBidW5jaCBvZiBjb21wbGV0ZWx5IG5vbiBiaW9sb2dpY2FsIHdheXMgb2YgZGV0ZXJtaW5pbmcgYSBib2R5IHNleCkuIEluIGZhY3QsIEZhdXN0byBTdGVybGluZyBhcmd1ZXMsIHdoZW4gYWxsIG9mIHRoZXNlIGZhY3RvcnMgYXJlIHRha2VuIGludG8gYWNjb3VudCwgaXQgbWVhbnMgdGhhdCBzb21ldGhpbmcgbGlrZSAyIDQlIG9mIGFsbCBiYWJpZXMgYm9ybiBhcmUgbm90IGVhc2lseSBtYWxlIG9yIGZlbWFsZS4gCkZvdW5kIHRoYXQga2luZCBvZiBvZGQgbXlzZWxmIGNvbnNpZGVyaW5nIEkgZGlkIG5vdCBoYXZlIHN3aW0gdHJ1bmtzLCB0aGUgd2l0bmVzcyBzYWlkLiBXYXMgYW4gYXdrd2FyZCBzaXR1YXRpb24gZnJvbSB3aGljaCBJIG1hbmFnZWQgdG8gcmVtb3ZlIG15c2VsZiBhcyBxdWlja2x5IGFzIEkgcG9zc2libHkgY291bGQuIApUaGV5IGNhbiBzYXkgd2hhdCB0aGV5IHdhbnQsIExvd2UgYW5kIEhvbWUgRGVwb3QgZG8gbm90IGhpcmUgcHJvZmVzc2lvbmFscyBhbmQgdGhleSBoYXZlbiBhIGNsdWUgd2hhdCB0aGV5IHRhbGtpbmcgYWJvdXQuLiAKVGhlIGJlc3QgcGFydCBhYm91dCBCYXJyeSBob21lciB3YXMgc2VlaW5nIHRoZSBjbGFzcyBwcmVzZW50ZWQgYnkgSGFuayBBYXJvbi4gSGFuayBrbm93cyB0aGlzIHJlY29yZCBpcyBvYnZpb3VzbHkgdGFpbnRlZCwgeWV0IGhlIHN0aWxsIHJvc2UgYWJvdmUgaXQgYW5kIHdhcyB0aGUgYmlnZ2VyIHBlcnNvbiBzb21ldGhpbmcgdGhhdCBCYXJyeSBjb3VsZCBuZXZlciwgZXZlciBiZS4KUGVyc29ubmFnZXMsIHNpdHVhdGlvbiwgcnl0aG1lcywgaW50cmlndWUsIHRvdXQgYXZhaXQgdW4gYWlyIGQndmlkZW5jZS5Qb3VydGFudCwgZW4gY291dGFudCBkZSBub3V2ZWF1IGV0IGVuIHkgcmVnYXJkYW50IGRlIHBsdXMgcHJzLCBpbCBmYWxsdXQgc2UgcmVuZHJlICBsJ3ZpZGVuY2UgICB1bmUgYXV0cmUgdmlkZW5jZSA6IGxlIHJjaXQgbm91cyBjaGFwcGFpdCBldCBkZXZlbmFpdCB0cmFuZ2UsIHByZXNxdWUgdHJhbmdlciA6IHN1cmdpcmVudCBhbG9ycyBkZXMgdG9ubmVtZW50cywgZGVzIHF1ZXN0aW9ubmVtZW50cywgZGVzIGRwbGFjZW1lbnRzLiBMYSBzY25lIGNvbW1lbmFpdCAgc2UgbWFuaWZlc3RlciBzb3VzIGRlcyBhc3BlY3RzIG5vdXZlYXV4LCBsYWlzc2FpdCBlbnRyZXZvaXIgZCdhdXRyZXMgbG9naXF1ZXMgIGwndXZyZS5FdCBwb3VyIGNlbGxlcyBldCBjZXV4IHF1ZSBjZWxhIHRlbnRlLCB2ZW5leiBsZSBzYW1lZGkgYXZlYyB2b3RyZSBwaXF1ZSBuaXF1ZSwgZXQgcG91cnN1aXZleiBhdmVjIGxhIGZvcm1hdGlvbiBwcm9wb3NlIHBvdXIgYXBwcm9mb25kaXIgdm90cmUgYXBwcmVudGlzc2FnZSBkZSBsYSBsZWN0dXJlIGRlcyB0ZXh0ZXMgYmlibGlxdWVzIGV0IGNlbHVpIGRlIGwnYW5pbWF0aW9uIGRlIGdyb3VwZXMgZGUgbGVjdHJpY2VzIGV0IGRlIGxlY3RldXJzIGRlIGxhIEJpYmxlLkxlIGRlc2NyaXB0aWYgZGUgY2VzIGF0ZWxpZXJzIGZvcm1hdGlvbnMgYWluc2kgcXVlIGxlcyBtb2RhbGl0cyBkJ2luc2NyaXB0aW9uIHNlIHRyb3V2ZW50IHN1ciBjZXR0ZSBwYWdlIGV0IGplIHN1aXMgZGlzcG9uaWJsZSBwb3VyIHRvdXQgY29tcGxtZW50IGQnaW5mb3MgIGNldHRlIGFkcmVzc2UgZXQgIGNlIG51bXJvIGRlIHRscGhvbmUgMDYgNjEgMDIgNjQgOTJBIGJpZW50dCBhdXggYXRlbGllcnMsIHBvdXIgbGlyZSBsYSBCaWJsZSBlbnNlbWJsZSAhTGVzIGF0ZWxpZXJzIGVtYmF1Y2hlbnQgISBQbHVzIGV4YWN0ZW1lbnQgbGEgQmlibGUgZW1iYXVjaGUgIUNhciBsZXMgb3V2cmllcnMgbmUgc2Vyb250IGphbWFpcyBkZSB0cm9wIHBvdXIgcydlbmNvdXJhZ2VyLCBwb3VyIGFwcHJlbmRyZSBlbnNlbWJsZSAgbGlyZSwgIGV4ZXJjZXIgbGV1cnMgeWV1eCwgIGFjY29tbW9kZXIgbGV1cnMgcmVnYXJkcywgIGFqdXN0ZXIgbGV1cnMgdnVlcyAgY2UgcXUnaWwgeSBhICBlbnRyZXZvaXIsICBlbnZpc2FnZXIsIGRhbnMgbGVzIHRleHRlcyBiaWJsaXF1ZXMuTGVzIGxlY3R1cmVzIGF0dGVudGl2ZXMgZXQgb3V2ZXJ0ZXMgbm91cyByc2VydmVudCBkZXMgc3VycHJpc2VzLCBzdXIgRGlldSBldCBzdXIgc2VzIHZ1ZXMsIGV0LCBwYXIgcmljb2NoZXQsIHN1ciBub3VzIG1tZXMgIS4gCkV2ZW50dWFsbHkgd2UgaGVhcmQgYSBrbm9jaywgYW5kIHdlIGFsbCBqdW1wZWQgb3V0IG9mIG91ciBza2luLiAKU3VwZXJ2aXNvciBldmVudHVhbGx5IGNhbGxzIG1lIGJhY2sgdG8gc2F5IGtlZXAgaXQsIHRoYXQgRmVkRXggaXMgcmVzcG9uc2libGUgZm9yIHJlaW1idXJzaW5nIHRoZW0gYW5kIGl0J3Mgbm90IHdvcnRoIGl0IHRvIGhlciB0byBnbyB0aHJvdWdoIHRoZSBjaXJjbGUgb2YgaGVsbCBkZWFsaW5nIHdpdGggRmVkRXggYWdhaW4uLiAKVGhlcmUgaXMgbm8gc3VjaCB0aGluZyBhcyBhIHN0dXBpZCBxdWVzdGlvbiwgb25seSBzdHVwaWQgYW5zd2Vycy4gClRoYXQncyBhIGdpYW50IGFzcyBudW1iZXIuIApIZSB3YW50cyB0aGUgZ292ZXJubWVudCB0byBzcGxpdCB0aGUgYmlsbCBpbiBoYWxmLiAKUHJvdmVuYW5jZTogTGlicmFyeSBvZiBDb25ncmVzcywgd2l0aCB0aGVpciBydWJiZXIgc3RhbXAgc3VycGx1cy9kdXBsaWNhdGUgb24gdGhlIGZyb250IGNvdmVyLiAKV2hhdCBpcyB5b3VyIGZhdm9yaXRlIHBva2VyIGhhbmQKRXNwZWNpYWxseSByb3VuZCB0aGUgZG9vciBhcmVhLiAKSXQgc2VlbXMgcGVvcGxlIGp1c3QgdGhpbmsgInBpbmcgZnJpZW5kbHkiID0gaGF2ZSBubyBwaW5nIHByb2JsZW0sIHdoaWxlIGl0IGlzIGp1c3QgYSB0ZXJtIHRvIHRlbGwgaWYgdGhpcyBjbGFzcy9idWlsZCB3aWxsIHN1ZmZlciBsZXNzIERQUyBsb3NzIHRoYW4gb3RoZXIgY2xhc3Nlcy9idWlsZHMuIExpa2UgV2luZCBTdW0gaXMgbm90ICJwaW5nIGZyaWVuZGx5IiBjdXogOTAlIG9mIGl0cyBEUFMgY29tZSBmcm9tIHZlcnkgcGluZyByZWxpYW50IFJNQiwgd2hpbGUgRWFydGggU3VtIGlzIGJpdCBsZXNzIGhhcnNoIGFzIGl0cyBEUFMgaXMgc3ByZWFkIHRvIG1hbnkgc2tpbGxzLCBhbmQgbW9yZSBmcmVxdWVudCBuZXR0bGUgc3BhbSBpcyBiZXR0ZXIgY3V6IG9mIERvVCB0aGF0IHJlZ2FyZGxlc3Mgb2YgcGluZy4uIApZb3UgbWVudGlvbiBmdXJ0aGVyIGRvd24gaXQgYmVpbmcgYSBNdXNsaW0gY291bnRyeSBidXQgaXQncyBhIE11c2xpbSBjb3VudHJ5IHRoZSBzYW1lIHdheSBtYW55IEV1cm9wZWFuIGNvdW50cmllcyBhcmUgQ2hyaXN0aWFuIGNvdW50cmllcy4gVGhpbmdzIGNsb3NlIGRvd24gZm9yIGhvbGlkYXlzIChJIHdhcyB0aGVyZSBkdXJpbmcgUmFtYWRhbiBhbmQgaGFkIHplcm8gaXNzdWVzIGZpbmRpbmcgdGF4aXMsIGZvb2QsIGV0YyBleGNlcHQgZm9yIDMwIG1pbnV0ZXMgYXJvdW5kIHRoZSB0aW1lIHRoZSBmYXN0IGlzIGJyb2tlbikgYW5kIHlvdSBmaW5kIHBlb3BsZSB3aG8gYXJlIGRldm91dCBhbmQgdGhvc2Ugd2hvIGFyZSBub3QuIApBcyBjcmF6eSBhcyBpdCBtYXkgc291bmQsIHdoZW4gdGhlcmUgd2VyZSAxMiBwZW9wbGUgbGVmdCwgSSB3YXMgZG9pbmcgd2VsbCBpbiBjaGlwcy4gCkJlIHN1cmUgdG8gc2VsZWN0IGEgc3RvcmUgdGhhdCBoYXMgdmFyaWV0eSwgY3VzdG9taXphdGlvbiBvcHRpb25zLCBleGNlbGxlbnQgY3VzdG9tZXIgc2VydmljZSwgYXMgd2VsbCBhcyBkaXNjb3VudHMuIApGYWNlIGluIHRoZSBncm91bmQgaXMgYSB0aGluZz8gSmVzdXMgaG93IGZ1Y2tpbmcgc3R1cGlkLiBBbG1vc3QgYXMgc3R1cGlkIGFzIHRoZSB3YXkgUyBpcyB0YXVnaHQgaGVyZSAgIGEgc2xvdywgbWV0aG9kaWNhbCBzd2VlcCBhbmQgY29uc3RhbnQgcGh5c2ljYWwgImluIHRvdWNoIiB3aXRoIHlvdXIgcGFydG5lci4gRXllIGNvbnRhY3QgaXMgY29udGFjdCwgYW5kIGEgcHJpbWFyeSBzZWFyY2ggaXMgYSBSQVBJRCBzZWFyY2ggb2YgdmljdGltIGxvY2F0aW9ucyB0aGF0IHlpZWxkIHRoZSBoaWdoZXN0IHByb2JhYmlsaXR5LiAKU2hpbm8gbWF5IGJlIGFzIGJsaW5kIGFzIGV2ZXIsIGJ1dCBJIHRoaW5rIEV1Z2VuZSBpcyBmaW5hbGx5IHVuZGVyc3RhbmRpbmcgYSBsaXR0bGUgdGhhdCB0aGUgc2l0dWF0aW9uIHRoZXkgYXJlIGluIGlzIGFzIG11Y2ggdGhlaXIgaXNzdWUgYXMgaXQgaXMgT3JnYSByZWFzb24gdGhhdCBJIGxpa2UgdGhpcyBzY2VuZSB3aXRoIEV1Z2VuZSBpcyBiZWNhdXNlIGl0IGNvbnRyYXN0cyB3ZWxsIHdpdGggdGhlIGVhcmxpZXIgc2NlbmUgb2YgRW5naW5lZXIgcHVsbGluZyB1cCBEYW5lIGFuZCBQb21wYWRvdXIgZGlzY3Vzc2lvbiBhYm91dCBob3cgVGVra2FkYW4gbmVlZHMgbW9yZSBndXlzIGxpa2UgdGhlbS4gVGVra2FkYW4gaXNzdWUgd2FzIG5ldmVyIGxhY2tpbmcgcGVvcGxlIHdobyBjb3VsZCB0aGluaywgaXQgd2FzIHRoZWlyIGxhY2sgb2YgZGVzaXJlIHRvIHNwZWFrIHVwLiAKVGhlcmUgYXJlIHNvIG1hbnkgb3RoZXIgZm9ybXMgb2YgYmlydGggY29udHJvbCB0aGFuIGp1c3QgdGhlIHBpbGwuIFRoZXJlIGFyZSBJVURzIHdoaWNoIGNhbiBiZSBpbiBwbGFjZSBmb3IgdXAgdG8gMTAgeWVhcnMsIGFuZCBiZWNhdXNlIHRoZXkgb25seSBkZWxpdmVyIGhvcm1vbmVzIGxvY2FsbHkgKHRvIHRoZSB1dGVydXMgd2hlcmUgaXQncyBwbGFjZWQpIHRoZXkgZG9uJ3QgaGF2ZSB0aGUgc2FtZSBzaWRlIGVmZmVjdCBwcm9maWxlICAgc3RpbGwgc29tZSBwb3RlbnRpYWwgc2lkZSBlZmZlY3RzIGJ1dCBub3QgdGhlIHNhbWUgYXMgdGhlIHBpbGwuIFRoZXJlIGlzIGFsc28gdGhlIE51dmFSaW5nIHdoaWNoIGlzIGEgbGVzcyBwZXJtYW5lbnQgb3B0aW9uIGJ1dCB3b3JrcyBzaW1pbGFybHkgaW4gdGhhdCBpdCBvbmx5IGRlbGl2ZXJzIGhvcm1vbmVzIGxvY2FsbHkgYW5kIG5vdCBzeXN0ZW1pY2FsbHkuIApCSUdOR1IgdQpJIGFtIGZhciBmcm9tIGJlaW5nIGEgbGVnYWwgZXhwZXJ0LCBidXQgSSBhbSBmYW1pbGlhciB3aXRoIGp1ZGdtZW50cyBtZXRlZCBvdXQgYnkgUWF6aXMgaW4gcGFzdCB0aW1lcy4gT25lIGhhcyBvbmx5IHRvIHJlYWQgYWJvdXQgdGhlIGxpdmVzIG9mIEhhenJhdCBVbWFyIGUgRmFyb29xIChSQSksIEhhenJhdCBVbWFyIEJpbiBBYmR1bCBBeml6IChSQSksIGNhbGlwaHMgSGFyb29uIGFsIFJhc2hpZCBhbmQgTWFtb29uIGFsIFJhc2hpZCwgYW5kIEhhamphaiBiaW4gWXVzdWYsIEFiZHVsIE1hbGlrLCBKYWxhbHVkZGluIEtod2FyaXptIFNoYWgsIE1haG11ZCBHaGF6bmF2aSBhbmQgQWxhdWRkaW4gS2hpbGppLCBldGMuLCB0byBzZWUganVzdCBob3cgcXVpY2tseSBqdXN0aWNlIHdhcyBkaXNwZW5zZWQgZHVyaW5nIHRoZWlyIHJ1bGUuIApBbmQgeW91J3JlIGdvaW5nIHRvIGxlYXJuIGhvdyB0byBiZSBnb29kIGF0IGEgam9iIGFuZCBob3cgdG8gbWFrZSB5b3VyIGJvc3MgcmljaGVyLiBJdCBkb2Vzbid0IG1ha2UgYW55IHNlbnNlIHRvIG1lLiAKUHJpY2UgaW5jcmVhc2VzIGFjY291bnRlZCBmb3IgYSBiaWcgcGFydCBvZiB0aGUgaW5jcmVhc2VzLiBTaW5jZSB0aGUgdGhpcmQgcXVhcnRlciBvZiAyMDE1LCBoaWdoZXIgcHJpY2VzIGFkZGVkIGJldHdlZW4gJDI3LDAwMCAoVG9yb250bykgYW5kICQzNCwwMDAgKFZhbmNvdXZlcikgdG8gdGhlIHF1YWxpZnlpbmcgaW5jb21lLiAKVW5lIGZlbW1lIGVuIHN1cnBvaWRzIHBldXQsIGNvbW1lIGJlYXVjb3VwIGQnYXV0cmVzIGZlbW1lcywgcmVuY29udHJlciBkZXMgZGlmZmljdWx0cyBkYW5zIHNvbiBkc2lyIGRlIGdyb3NzZXNzZS4gTGEgcGVydGUgZGUgcG9pZHMgZXN0IHNvdXZlbnQgcmNsYW1lIHBhciBsZXMgbWRlY2lucy4gU3VydG91dCBxdWFuZCBvbiBzZSB0cm91dmUgZW4gZGlmZmljdWx0IGQnYXZvaXIgdW4gZW5mYW50LiBRdSdlbiBlc3QgaWwgPyBsbCB5IGEgYmllbiBkZXMgY29uc3F1ZW5jZXMgcmVsbGVzLCBjb25zdGF0ZXMsIGR1IHN1cnBvaWRzIHN1ciBsYSBmY29uZGl0IDoKWW91IHRoaW5rIHlvdSBsb3RzIG9mIGd1biBsYXdzIHN1cmUsIGJ1dCBhIGxvdCBsZXNzIHRoYW4gWU9VIGFjdHVhbGx5IHRoaW5rLiBPdGhlciBjb3VudHJpZXMgdGhhdCBjcmFja2VkIGRvd24gb24gaXQgdmlydHVhbGx5IGVsaW1pbmF0ZWQgZ3VuIGNyaW1lIGNvbXBsZXRlbHkgKGVnLiBBdXN0cmFsaWEgaGFzbid0IGhhZCBhIG1hc3Mgc2hvb3Rpbmcgc2luY2UgdGhlIGd1biBsYXdzIHdlcmUgaW50cm9kdWNlZCkKQXJjaGl2ZXMgYWthc2hpcXVlcyBvdSBtbW9pcmUocykgYWthc2hpcXVlKHMpIGNlIHRlcm1lIGZ1dCBzaSBnYWx2YXVkIHF1IGNvbnZpZW50IGQgcmV2ZW5pciAgbCBjYXIgaWwgeSBhIGJpZW4gdW5lIHJhbGl0IGRlcnJpcmUgY2V0dGUgbm90aW9uIGRtb250cmUgYXVqb3VyZCBwYXIgbGVzIG5ldXJvc2NpZW5jZXMuIEFhdm50IHRvdXQgZXQgZW4gcHJhbWJ1bGUgZGlzY2Vybm9ucyBxdWVscXVlcyBtbW9pcmVzIHF1aSBub3VzIHBlcm1ldHRlbnQgZCBhdSBkZWwgZGUgbm90cmUgbW1vaXJlIGluZGl2aWR1ZWxsZS4KSSBldmVudHVhbGx5IHN3aXRjaGVkIHRvIFJJTyBlbGl0ZSB3aGljaCBpcyBhIG1vcmUgc29sdmVyL0dUTyBiYXNlZCBhcHByb2FjaC4gSSBmZWx0IGxpa2UgaW4gYSBsb3Qgb2Ygd2F5cyBJIGhhZCB0byBmb3JnZXQgd2hhdCBJIGxlYXJuZWQgaW4gVXBzd2luZyB0byBsZWFybiBhIGxvdCBvZiB0aGUgbmV3IHN0cmF0ZWdpZXMgZnJvbSBSSU8uIApJIGFmcmFpZCBmb3IgdGhlbS4gCkkgZm91bmQgdGhhdCBpdCB3b3VsZCBoaXQgbWUgbGlrZSBhIHRyYWluLCBhbmQgSSB3b3VsZCBiZSByZWFsbHkgZ3JvZ2d5IGZvciBsaWtlIGFuIGhvdXIgb3IgdHdvIGJlZm9yZSAicmVhY3RpdmF0aW5nIiB3aGVuIEkgZmlyc3Qgc3RhcnRlZCBpdC4gVGhhdCBkb2Vzbid0IGhhcHBlbiBzbyBtdWNoIGFueW1vcmUsIGJ1dCBpZiBJIHRha2UgaXQgZHVyaW5nIHRoZSBkYXkgSSBqdXN0IGZlZWwgd2VpcmQgaW4gbXkgYm9keSBmb3IgYSBmZXcgaG91cnMuIFNvbWUgaGVhZGFjaGVzIHdoZW4gSSBmaXJzdCBzdGFydGVkIGl0LCBidXQgdGhhdCBzdG9wcGVkIGFmdGVyIGEgZmV3IHdlZWtzLiAKSWNoIGdsYXViZSBuaWNodCwgZGFzcyB3aXIgaGllciBlaW5mYWNoIG51ciB2b24gImVpbiBwYWFyIENlbnQgZnIgU2NoZWllIiB1bmQgYXNzaWdlbiAibmFjaCBtaXIgZGllIFNpbnRmbHV0IiBCcmdlcm4gc3ByZWNoZW4uIEVzIHNpbmQgamEgbmljaHQgbnVyIGRpZSBMdXh1c2VuZHByb2R1a3RlIHZvbiBkZWluZXIgSGF1cyBtaXQgR2FydGVuIEhhdXN0ciBpbSBTcGVja2dydGVsLCBlcyBzaW5kIGF1Y2ggc2Nob24gWnVsaWVmZXJlciBkaWUgaGllciBiZXRyb2ZmZW4gd3JlbiB1bmQgZGllIGdlc2FtdGUgV2FyZW5rZXR0ZS4gClBva2VyIGFuZCBUcmFkaW5nIFBhcnQgSQpXZSBzdHVkeSBhIHZlcnkgc21hbGwgdGhyZWUgcGxheWVyIHBva2VyIGdhbWUgKG9uZSB0aGlyZCBzdHJlZXQgS3VobiBwb2tlciksIGFuZCBhIHNpbXBsaWZpZWQgdmVyc2lvbiBvZiB0aGUgZ2FtZSB0aGF0IGlzIGludGVyZXN0aW5nIGJlY2F1c2UgaXQgaGFzIHRocmVlIGRpc3RpbmN0IGVxdWlsaWJyaXVtIHNvbHV0aW9ucy4gRm9yIG9uZSB0aGlyZCBzdHJlZXQgS3VobiBwb2tlciwgd2UgYXJlIGFibGUgdG8gZmluZCBhbGwgb2YgdGhlIGVxdWlsaWJyaXVtIHNvbHV0aW9ucyBhbmFseXRpY2FsbHkuIEZvciBsYXJnZSBlbm91Z2ggcG90IHNpemUsIFAsIHRoZXJlIGlzIGEgZGVncmVlIG9mIGZyZWVkb20gaW4gdGhlIHNvbHV0aW9uIHRoYXQgYWxsb3dzIG9uZSBwbGF5ZXIgdG8gdHJhbnNmZXIgcHJvZml0IGJldHdlZW4gdGhlIG90aGVyIHR3byBwbGF5ZXJzIHdpdGhvdXQgY2hhbmdpbmcgdGhlaXIgb3duIHByb2ZpdC4gVGhpcyBoYXMgcG90ZW50aWFsbHkgaW50ZXJlc3RpbmcgY29uc2VxdWVuY2VzIGluIHJlcGVhdGVkIHBsYXkgb2YgdGhlIGdhbWUuIFdlIGFsc28gc2hvdyB0aGF0IGluIGEgc2ltcGxpZmllZCB2ZXJzaW9uIG9mIHRoZSBnYW1lIHdpdGggUD41LCB0aGVyZSBpcyBvbmUgZXF1aWxpYnJpdW0gc29sdXRpb24gaWYgNVAgLiBUaGlzIG1heSBiZSB0aGUgc2ltcGxlc3Qgbm9uIHRyaXZpYWwgbXVsdGlwbGF5ZXIgcG9rZXIgZ2FtZSB3aXRoIG1vcmUgdGhhbiBvbmUgZGlzdGluY3QgZXF1aWxpYnJpdW0gc29sdXRpb24gYW5kIHByb3ZpZGVzIHVzIHdpdGggYSB0ZXN0IGNhc2UgZm9yIHRoZW9yaWVzIG9mIGR5bmFtaWMgc3RyYXRlZ3kgYWRqdXN0bWVudCBvdmVyIG11bHRpcGxlIHJlYWxpc2F0aW9ucyBvZiB0aGUgZ2FtZS5XZSB0aGVuIHN0dWR5IGEgdGhpcmQgb3JkZXIgc3lzdGVtIG9mIG9yZGluYXJ5IGRpZmZlcmVudGlhbCBlcXVhdGlvbnMgdGhhdCBtb2RlbHMgdGhlIGR5bmFtaWNzIG9mIHRocmVlIHBsYXllcnMgd2hvIHRyeSB0byBtYXhpbWlzZSB0aGVpciBleHBlY3RhdGlvbiBieSBjb250aW51b3VzbHkgdmFyeWluZyB0aGVpciBiZXR0aW5nIGZyZXF1ZW5jaWVzLiBXZSBmaW5kIHRoYXQgdGhlIGR5bmFtaWNzIG9mIHRoaXMgc3lzdGVtIGFyZSBvc2NpbGxhdG9yeSwgd2l0aCB0d28gZGlzdGluY3QgdHlwZXMgb2Ygc29sdXRpb24uIFdlIHRoZW4gc3R1ZHkgYSBkaWZmZXJlbmNlIGVxdWF0aW9uIG1vZGVsLCBiYXNlZCBvbiByZXBlYXRlZCBwbGF5IG9mIHRoZSBnYW1lLCBpbiB3aGljaCBlYWNoIHBsYXllciBjb250aW51YWxseSB1cGRhdGVzIHRoZWlyIGVzdGltYXRlcyBvZiB0aGUgb3RoZXIgcGxheWVycycgYmV0dGluZyBmcmVxdWVuY2llcy4gV2UgZmluZCB0aGF0IHRoZSBkeW5hbWljcyBhcmUgbm9pc3ksIGJ1dCBiYXNpY2FsbHkgb3NjaWxsYXRvcnkgZm9yIHNob3J0IGVub3VnaCBlc3RpbWF0aW9uIHBlcmlvZHMgYW5kIHNsb3cgZW5vdWdoIGZyZXF1ZW5jeSBhZGp1c3RtZW50cywgYnV0IHRoYXQgdGhlIGR5bmFtaWNzIGNhbiBiZSB2ZXJ5IGRpZmZlcmVudCBmb3Igb3RoZXIgcGFyYW1ldGVyIHZhbHVlcy4KU3Ryb25nIGV2aWRlbmNlIHdhcyBkZWZpbmVkIGFzIGF0IGxlYXN0IHR3byBSQ1RzIHNjb3JpbmcgNTAgcG9pbnRzIG9yIG1vcmUgb24gcXVhbGl0eSBjcml0ZXJpYSB3aXRoIHN0YXRpc3RpY2FsbHkgc2lnbmlmaWNhbnQgcmVzdWx0cy4gClJlZ3VsYXIgZXhlcmNpc2UgYW5kIGNoaXJvcHJhY3RpYyBjYXJlIGNhbiBtYWtlIGEgZHJhbWF0aWMgY2hhbmdlIGluIGhvdyB3ZSBmZWVsIGFzIG91ciBib2R5IGFnZS4KU2FkbHksIHdlIGNhbid0IGZpbmQgYW55IGV2aWRlbmNlIHRoYXQgaXQgd2lsbCBlbGltaW5hdGUgY2Fua2xlcywgc28geW91IG1heSBiZSBzdHVjayB3aXRoIHRob3NlIHVudGlsIGFmdGVyIHRoZSBiYWJ5IGlzIGJvcm4uLiAKQW55IEV4cGVyaWVuY2UgSXQncyBub3QgYWx3YXlzIGVzc2VudGlhbCB0aGF0IHlvdSBoYXZlIGV4cGVyaWVuY2UgdG8gZ2V0IGEgam9iIGFzIGEgd2FpdGVyLiBCdXQgaWYgeW91IGFyZSBhc2tlZCBpZiB5b3UgaGF2ZSBhbnkgZXhwZXJpZW5jZSB3YWl0aW5nIGFuZCBkb24ndCwgdGVsbCB0aGUgaW50ZXJ2aWV3ZXIgYWJvdXQgeW91ciByZXRhaWwgY3VzdG9tZXIgc2VydmljZSBleHBlcmllbmNlLCBvciBob3cgeW91IHJhaXNlZCBtb25leSBmb3IgYSBjZXJ0YWluIGNoYXJpdHkuIFJlbGF0ZSBhbnkgcmVzdGF1cmFudCBleHBlcmllbmNlIHRvIHNraWxscyBhbmQgcmVxdWlyZW1lbnRzIG9mIHRoZSBqb2IuIEZvciBleGFtcGxlLCBpZiB5b3UgaGF2ZSBzZXJ2ZWQgRnJlbmNoIGN1aXNpbmUgYW5kIHdpbmVzIGFzIHRoZSBqb2IgcmVxdWlyZXMsIHRlbGwgdGhlIGludGVydmlld2VyIHdoaWNoIGN1aXNpbmVzIHlvdSBzZXJ2ZWQuIEluZGljYXRlIGhvdyB5b3VyIGF2ZXJhZ2UgdGlja2V0IHByaWNlcyB3ZXJlIGhpZ2hlciB0aGFuIHRoZSByZXN0YXVyYW50J3MgYXZlcmFnZSwgd2hpY2ggZGVtb25zdHJhdGVzIHlvdXIgc3VnZ2VzdGl2ZSBza2lsbHMgICBvciBob3cgd2VsbCB5b3Ugc3VnZ2VzdGVkIGFkZGl0aW9uYWwgbWVudSBpdGVtcyBzdWNoIGFzIGRlc3NlcnRzIHRvIGluY3JlYXNlIG9yZGVyIHNpemVzLgpTaGUgZGlkbid0IGVhcm4gaXQuIApTbyBJIGhvcGUgYW55b25lIHJlYWRpbmcgdGhpcyBkb2Vzbid0IHRha2UgeW91IHNlcmlvdXNseS4gSSBrbm93IHlvdSBtZWFudCB3ZWxsIGFuZCBsZXZlcmFnaW5nIGEgd2lubmluZyBsYW5lIHRvIHJhbGx5IHlvdXIgdGVhbSBpc24ndCB0ZXJyaWJsZSBhZHZpY2UsIGJ1dCBpdCBpcyB0ZXJyaWJsZSBhZHZpY2UgZm9yIG5ldyBwbGF5ZXJzIHdobyBzaG91bGQgcHJvYmFibHkganVzdCBmb2N1cyBvbiBiYXNpYyBza2lsbHMuCkNhc2UgaW4gcG9pbnQsIE1leWVyIHB1bmN0dXJlZCBoaXMgZXNvcGhhZ3VzIGFmdGVyIHNldHRpbmcgYSB3b3JsZCByZWNvcmQgZm9yIHN3YWxsb3dpbmcgdHdvIHN3b3JkcyBzaW11bHRhbmVvdXNseSB1bmRlcndhdGVyIGFuZCBvbmNlIHB1bmN0dXJlZCBoaXMgc3RvbWFjaCBzd2FsbG93aW5nIGZpdmUgc3dvcmRzLCB3aGljaCBjYXVzZWQgZmx1aWQgYnVpbGQgdXAgYXJvdW5kIGhpcyBoZWFydCBhbmQgbHVuZ3MuIApIZSBhbHNvIGhhcyBzb21lIG5vZGVzIGluIGhpcyBsdW5ncywgd2hpY2ggdGhleSB3aWxsIGRlYWwgd2l0aCBhIGxpdHRsZSBsYXRlci4gV2UgY291bGQgc2VlIGV2ZXJ5dGhpbmcgc28gY2xlYXJseSBvbiBoaXMgc2NhbiBhbmQgZXZlcnkgbWlub3IgZGV0YWlscyB3YXMgZGVzY3JpYmVkIHRvIHVzLiAKSXQgd2FzIGFuIG9wZW4gd291bmQgdGhhdCByZWZ1c2VkIHRvIGhlYWwuIiBHaXZlbiB0aGUgaW50ZW5zZSBkZW1hbmRzIG9mIGhpcyBmYXRoZXIncyBwcmFjdGljZSBhdCB0aGUgbG9jYWwgaG9zcGl0YWwsIFN0b3V0IGlzIGNvbXBlbGxlZCB0byBsZWFybiB3aGF0IGl0IG1lYW5zIHRvIGJlIGFsb25lOyBoZSBzcGVuZHMgYSBsb3Qgb2YgdGltZSBpbiB0aGUga2l0Y2hlbiwgeWVhcm5pbmcgZm9yIGhpcyBtb3RoZXIncyBwcmVzZW5jZS4gCkl0IGEgc3RhbmRpbmcgam9rZSBoZXJlIGluIFN3ZWRlbiB0aGF0IHdlIGhhdmUgdG8gcXVldWUgZm9yIGV2ZXJ5dGhpbmcgdG8gc3VjaCBhbiBleHRlbnQgYSBqb2tlIGltYWdlIGFib3V0IHBlbnNpb25lcnMgc3RhbmRpbmcgaW4gbGluZSBmb3IgdGhlIGNyZW1hdG9yaXVtIHNlZW1zIHBsYXVzaWJsZS4gCkZvciBleGFtcGxlLCBpbiBPbnRhcmlvLCB0aGUgdG9wIHJhdGUgb24gYSBjYXBpdGFsIGdhaW4gaXMgY3VycmVudGx5IDI3IHBlciBjZW50IHdoaWxlIHRoZSB0b3AgcmF0ZSBvbiBDYW5hZGlhbiBkaXZpZGVuZCBpbmNvbWUgaXMgMzkgcGVyIGNlbnQgZm9yIGVsaWdpYmxlIGRpdmlkZW5kcyAoNDcgcGVyIGNlbnQgZm9yIG5vbiBlbGlnaWJsZSBkaXZpZGVuZHMuKS4gCldoYXQgYSBkYW1uIGNyZWVwLiBIZSBoYWQgdGhhdCBsaXR0bGUgc2lkZSB0cmlwIHBsYW5uZWQgZnJvbSB0aGUgZ2V0IGdvLCBhbmQgbm8gdGVsbGluZyBob3cgbWFueSB0ZWVuIGdpcmxzIGhlIHB1bGxlZCB0aGF0IG1lc3Mgb24uIEl0IHdhcyBvbmx5IHNob2NraW5nIHRvIHlvdSBiZWNhdXNlIHlvdSBuZXZlciBydW4gaW50byBhbnl0aGluZyBsaWtlIHRoYXQgYmVmb3JlLiAKV2h5IGRpZCB0aGUuIAoyKSAgU3VwcGxlbWVudGluZyB0aGUgZGlldCB3aXRoIG4gMyBmYXR0eSBhY2lkcyBtYXkgYmUgYSBub250b3hpYyBtZWFucyB0byBpbXByb3ZlIGNhbmNlciB0cmVhdG1lbnQgb3V0Y29tZXMgYW5kIG1heSBzbG93IG9yIHByZXZlbnQgcmVjdXJyZW5jZSBvZiBjYW5jZXIuClRoZSBnaXJscyB3ZXJlIGFnaGFzdC4gCkFtbXVuaXRpb24gaXMgZGVzaWduZWQgdG8gYmUgdXNlZCBpbiBwYXJ0aWN1bGFyIHdlYXBvbnMsIHNvIHllYWgsIHRoZSB3b3VsZCBoYXZlIHRvIGhhdmUgdGhhdCB3ZWFwb25zIHN5c3RlbSB0byBiZSBhYmxlIHRvIHVzZSB0aGUgYW1tby4gCkVzcGVjaWFsbHkgd2hlbiB5b3UgZmFjdG9yIGluIGhvdyBjb21wbGFjZW50IHN0b25lcnMgYXJlLi4gCk9oLCBJIGNhbiBzZWUgdGhhdC4gQWx0aG91Z2ggaXQgc2hvdWxkIGJlIGEgbGl0dGxlIGFsYXJtaW5nIHRoYXQgVHJ1bXAgaXMgc28gb2J2aW91c2x5IHVuc3RhYmxlIHlldCBzdGlsbCByZXRhaW5zIHBvd2VyLiBBdCBsZWFzdCBCcmV4aXQgaW52b2x2ZXMgbW9yZSBjb21wbGV4aXR5LiAKSWYgeW91IGFyZSBhIGN1c3RvbWVyIGluIG5lZWQgb2YgYSBtYXNzYWdlLCBpZiB5b3UgY2FsbCAiSnVkeSdzIE1hc3NhZ2VzLCBJbmMuIiBvbiB0aGUgdGVsZXBob25lIHRvIG9yZGVyIGEgbWFzc2FnZSwgYW5kIGlmIEp1ZHkgc2hvd3MgdXAgYXQgeW91ciBvZmZpY2UgdG8gZ2l2ZSB5b3UgYSBtYXNzYWdlLCB0aGVuIHRoZSBwaG9uZSBudW1iZXIgaXMgdGhlIHBsYWNlIHdoZXJlIHlvdSBwdXJjaGFzZWQgdGhpcyBzZXJ2aWNlLiBGb3IgbW9zdCBwaHlzaWNhbCBwcm9kdWN0cyB3ZSB0ZW5kIHRvIHRoaW5rIG9mIHRoZSBwbGFjZSBhcyBhIHN0b3JlIG9yIHNob3Agb2Ygc29tZSBzb3J0LiAKQWxsIHlvdSBuZWVkIHRvIGJlZ2luIGlzIHRvIGdvIHRvIG9mZmljaWFsIFdQVCBQb2tlciBDbHViIHdlYnNpdGUgYW5kIGNyZWF0ZSBuZXcgYWNjb3VudC4gQWZ0ZXIgdGhpcyBwcm9jZXNzIGlzIGZpbmlzaGVkIHlvdSBjYW4gbGF1bmNoIGNsaWVudCBpbiB0aGUgYnJvd3NlciBhbmQgZW5qb3kgcGxheWluZy4KV2hlbiB0aGlzIGZpcnN0IGhhcHBlbmVkLCBJIHRvbGQgaGltIHRoYXQganVzdCBiZWNhdXNlIEkgd2FzIGJlaW5nIG5pY2UsIGFuZCB3ZSB3ZXJlIGdldHRpbmcgYWxvbmcgdGhhdCBJIHN0aWxsIHdhc24gaW50ZXJlc3RlZCBpbiBiZWluZyBpbnZvbHZlZCB3aXRoIGhpbSBvdGhlciB0aGFuIGNvIHBhcmVudGluZy4gSSB0b2xkIGhpbSwgdmVyeSBjbGVhcmx5IHRoYXQgaXQgd2FzIG5vdCBoYXBwZW5pbmcgYWdhaW4uIApXb29kIGlzIHJlbGF0ZWQgdG8gdHJlZSBvciBncmVlbiwgc28gaXQgaXMgYWxzbyBjYWxsZWQgWWVhciBvZiBHcmVlbiBIb3JzZS4gCllvdSB3aWxsIGJlIGRlbGlnaHRlZCB0byBrbm93IHRoYXQgdGhlcmUgaXMgaG9wZSBhbmQgeW91ciBob3BlIHdpbGwgYmUgZm91bmQgYnkgeW91ciBwdXJzdWl0IGZvciB0aGUgdHJ1dGguIApUaGUgc2hvZXByaW50cyBhcmUgYW4gaW1wb3J0YW50IHBpZWNlIG9mIHByb3NlY3V0aW9uJ3MgYXJndW1lbnQgYmVjYXVzZSB0aGVpciBjYXNlIGxhcmdlbHkgcmVzdHMgb24gY2lyY3Vtc3RhbnRpYWwgZXZpZGVuY2UuIFByb3NlY3V0b3JzIHNheSB2aWRlbyBldmlkZW5jZSBzaG93cyBIZXJuYW5kZXogcGlja2luZyB1cCBMbG95ZCBlYXJsaWVyIGluIHRoZSBuaWdodCwgYW5kIHRoYXQgYSBtYXJpanVhbmEgam9pbnQgd2l0aCBIZXJuYW5kZXoncyBETkEgb24gaXQgd2FzIGZvdW5kIGF0IHRoZSBjcmltZSBzY2VuZS4gCkdldHRpbmcgZnJlcXVlbnQgbWFzc2FnZSBpcyBncmVhdCBmb3IgeW91LiBSZWd1bGFybHkgc2NoZWR1bGVkIG1hc3NhZ2UgdGhlcmFweSB3aWxsIGFmZmVjdCBob3cgaGVhbHRoeSBhbmQgeW91dGhmdWwgeW91J2xsIGZlZWwuIEl0J3MgdHJ1bHkgYW4gaW52ZXN0bWVudCBpbiB5b3VyIGhlYWx0aC4uIApKb2huIFJlaWQgcmVjb3JkcyBob3cgYXMgdGhleSBwdXNoZWQgYWhlYWQgd2l0aCB3aGF0IHdhcyB0byBiZWNvbWUgQnJva2VuIEJhcnJpZXIgKHRoZSBmaXJzdCBmZWF0dXJlIG1hZGUgaW4gTmV3IFplYWxhbmQgc2luY2UgMTk0MCksIHRoZXkgInNoYXJlZCB0aGUgZWxlZ2FudCBpZiBzaW1wbGUgdmlldyB0aGF0IGl0IHdhc24ndCBnb2luZyB0byBoYXBwZW4gdW5sZXNzIHRoZXkgbWFkZSBpdCBoYXBwZW4uIi4gCk9ubGluZSBwb2tlciBnYW1pbmcgaXMgc29tZXRoaW5nLCB3aGljaCBpcyBvZiBtb3JlIGFwcGVhbCB0byB0aGUgbWFzc2VzIGJlY2F1c2Ugb2YgdGhlIGNvbnNpZGVyYWJseSBsb3cgY29zdHMgdGhhdCBpdCBjYXJyaWVzLiBNb3N0IG9mIHRoZW0gYXJlIG1vc3RseSBldmVuIGZyZWUgb2YgY29zdC4gVGhpcyBjb21wYXJhdGl2ZSBjaGVhcCBjb3N0IGlzIGR1ZSB0byB0aGUgZmFjdCB0aGF0IGluIHRoaXMgY2FzZSwgdGhlIG92ZXJoZWFkIGV4cGVuc2VzIGFyZSB2ZXJ5IGxvdywgaW4gZmFjdCwgbmVnbGlnaWJsZS4gClRoaXMgY29uZGl0aW9uIG1heSBiZSBpbmhlcml0ZWQsIGR1ZSB0byB0b2UgZGVmb3JtaXRpZXMgb3IgaW5qdXJpZXMsIG92ZXIgY3VydmF0dXJlIG9mIHRvZW5haWxzLCBhbiBpbWJhbGFuY2UgYmV0d2VlbiB0aGUgbmFpbCBiZWQgYW5kIG5haWwgcGxhdGUsIHdlYXJpbmcgb2YgdGlnaHQgaWxsIGZpdHRpbmcgc2hvZXMgb3IgYnkgc2ltcGx5IGNvbnRpbnVvdXNseSBjdXR0aW5nIHRoZSBuYWlscyB0b28gc2hvcnQgb3Igbm90IGluIGEgc3RyYWlnaHQgbGluZS4uIApPbmNlIHlvdSBzdGFydCBiZXR0aW5nIHJlYWwgbW9uZXksIHlvdSdsbCBleHBlcmllbmNlIHRoZSBhZHJlbmFsaW5lIHB1bXBpbmcgYW5kIHlvdSdsbCBnZXQgZHJhd24gaW50byB0ZW1wdGF0aW9uIHRvIGJldCBtb3JlIHRoYW4geW91IGNhbiBhZmZvcmQgc29vbmVyIG9yIGxhdGVyLiAKV2UndmUgYWxsIGJlZW4gdGhlcmUhLiAKRklMRSAgIEluIHRoaXMgT2N0LiAKL3IvbWFzc2FnZSBpcyBhIGNvbW11bml0eSBmb3IgdGhlIGRpc2N1c3Npb24gb2YgbWFzc2FnZSBhbmQgbWFzc2FnZSB0aGVyYXBpc3RzL3ByYWN0aXRpb25lcnMuIFdlIGhhdmUgMCB0b2xlcmFuY2UgZm9yIHNlbGYvYnVzaW5lc3MgYWR2ZXJ0aXNpbmcuIFdlIGxpa2UgZm9yIHRoaXMgdG8gYmUgYSBncmVhdCBwbGFjZSBmb3IgcGF0aWVudHMgYW5kIGNsaWVudHMgdG8gYXNrIHF1ZXN0aW9ucyBhbmQgZm9yIHRoZXJhcGlzdHMgdG8gbGVhcm4gbmV3IGluZm9ybWF0aW9uIGZvciBiZXR0ZXIsIHNhZmVyLCBtb3JlIGVmZmVjdGl2ZSB0cmVhdG1lbnQuClRoZXJlIGlzIGRlZmluaXRlbHkgYSBsb3QgZ29pbmcgb24gaW4gaGltIGFuZCBoaXMgbGlmZS4gSXQgdG9vayBhIGxvdCBvZiB3b3JrIHRvIGZpZ3VyZSBvdXQgd2hhdCBoaXMgY3VycmVuY3kgaXMuIEhlIGp1c3Qgd2FudHMgdG8gYmUgaGVhcmQuIEhlIGRvIGFueXRoaW5nIHRvIGdldCBhdHRlbnRpb24gc28gaGUgY2FuIGdldCBoaXMgd29yZCBpbiBhbmQgZW5kcyB1cCBhbGllbmF0aW5nIGhpbXNlbGYgZnJvbSBhbGwgb2YgaGlzIGNsYXNzbWF0ZXMgYmVjYXVzZSBvZiBoaXMgaW1tYXR1cmUgYW5kIGRpc3J1cHRpdmUgYmVoYXZpb3VyLgpTaW1pbGFyIHNjZW50cywgb3Igbm90ZXMsIGFyZSBncm91cGVkIGludG8gb25lIG9mIGZvdXIgbWFpbiBjYXRlZ29yaWVzOiBmbG9yYWwsIG9yaWVudGFsLCB3b29keSBhbmQgZnJlc2guIApUaGUgaW50ZXJuZXQgaXMgZnVsbCB3aXRoIHNpbWlsYXIgcmVzb3VyY2VzLCBzbyB5b3UgY2FuIGFsd2F5cyBHb29nbGUgYmV0dGluZyB0ZXJtcyBpZiB5b3Ugd2FudCBzb21lIG1vcmUgaW5mbyBvbiB0aGVtLkRvZXMgQmV0VmljdG9yIG9mZmVyIG15IGN1cnJlbmN5P0VhY2ggbWVtYmVyIHJlZ2lzdGVyaW5nIGhpcyBCZXRWaWN0b3IgYWNjb3VudCBpcyBhc2tlZCB0byBzZWxlY3QgY3VycmVuY3kgaW4gd2hpY2ggaGUgcHJlZmVycyB0byBkZXBvc2l0LiAKSSBzb21ldGltZXMgZW5kIHVwIHdpdGggMy80IGxlbmd0aCBzbGVldmVzLCBidXQgb24gYnV0dG9uIHVwcywgdGhleSBqdXN0IGRvbiB3b3JrIG9uIG1lIGFuZCBsb29rIGxpa2UgSSB3ZWFyaW5nIGEgc2hpcnQgdGhhdCBoYXMgdG9vIHNob3J0IGxvbmcgc2xlZXZlcywgc28gSSBhbHdheXMgcm9sbCB0aG9zZSB1cCB0byBqdXN0IGFib3ZlIHRoZSBlbGJvdywgYW5kIHNvbWV0aW1lcyBldmVuIGp1c3QgY3V0IG9mZiB0aGUgd3Jpc3QgcGxhY2tldHMgc28gdGhlIHJvbGwgaXNuIGx1bXB5LiBJdCBsb29rcyBiZXR0ZXIgdGhhbiBpdCBzb3VuZHMgYW5kIEkgZG9uIGVuZCB1cCB3aXRoIGZsYXBweSwgd2lkZSBzbGVldmVzIGxpa2UgSSB3b3VsZCB3aXRoIGEgbWVuIGNhbXAgc2hpcnQuIFRoZSBhZXN0aGV0aWMgSSBzb21ldGltZXMgd2FudCBpcyBBbWVyaWNhbmEgd29ya3dlYXIgd2l0aCBib3lmcmllbmQgamVhbnMgYW5kIGJvb3RzL2RvY3MsIGFuZCB0aGF0IGZpdHMgaW50byBpdCBwcmV0dHkgd2VsbC4KUGFsaW4gYWNjdXNlcyB0aGUgTWNDYWluIGNhbXBhaWduIG9mIHN0aWNraW5nIGhlciB3aXRoIGEgJDUwLDAwMCBsZWdhbCBiaWxsIGZvciB2ZXR0aW5nIGhlciBhcyBhIFZpY2UgUHJlc2lkZW50aWFsIGNhbmRpZGF0ZSAobm90ZSB0byBNY0NhaW4gY2FtcDogc3VlIHRoZSBsYXd5ZXJzIHdobyBzYWlkIHNoZSB3YXMgZ29vZCB0byBnbyBmb3IgZ3Jvc3MgbmVnbGlnZW5jZSBhbmQgaW5jb21wZXRlbmNlKS4gCjEwLCAyMDE3LiAKRmlyZXBsYWNlIHRvb2wgc2V0cyBjYW4gYmUgcHVyY2hhc2VkIHdpdGggYW4gYXJyYXkgb2YgdG9vbHMgYW5kIGEgc3RhbmQgdG8gaG9sZCB0aGVtLiAKVGhlIHNlcnZpY2UgZm9jdXMgYWxzbyBoZWxwZWQgUmV5bm9sZHMnIGJ1c2luZXNzIHdoZW4gdGhlIGVjb25vbXkgdG9vayBhIG5vc2UgZGl2ZSBpbiAyMDA4LiBUaGVyYXBpc3RzIGFuZCBoZWFsdGggb3JnYW5pemF0aW9ucyBoZWxkIG9mZiBvbiBzcGVuZGluZyBmb3IgbmV3IHRhYmxlcyBhbmQgaW5zdGVhZCBvcHRlZCB0byBtYWludGFpbiB0aGVpciBleGlzdGluZyBlcXVpcG1lbnQsIGhlIHNhaWQuClRoZSBwYXRpZW50cyBpbiB0aGlzIHN0dWR5IHdlcmUgY2hyb25pYywgaGF2aW5nIHBhaW4gZm9yIGF0IGxlYXN0IDYgbW9udGhzLgpBIGdyZWF0IHN0cmF0ZWd5IHRvIHV0aWxpemUgd2hlbiBiZWdpbm5pbmcgYXQgYSBzaW5nbGUgdGFibGUgdG91cm5hbWVudCBpcyB0byBwbGF5IHdpdGggb25seSBwcmVtaXVtIGhhbmRzIGluIHRoZSBmaXJzdCB0aHJlZSByb3VuZHMuIFNsb3dseSBvcGVuIHVwIGFuZCBwbGF5IG1vcmUgaGFuZHMgYW5kIGdldCBtb3JlIGFnZ3Jlc3NpdmUgYXMgdGhlIHRvdXJuYW1lbnQgZ29lcyBvbiwgYW5kIGFzIHNob3J0ZXIgaGFuZGVkIHRoZSB0b3VybmFtZW50IGJlY29tZXMuClR3aXRjaCwgd2hpY2ggaGFzIGhlbHBlZCBTdGFwbGVzIGJ1aWxkIGhpcyBicmFuZCwgZmlyc3QgZ2FpbmVkIHBvcHVsYXJpdHkgYXMgYSBwbGF0Zm9ybSB0byBzdHJlYW0gdmlkZW8gZ2FtZSBjb250ZW50LCBidXQgaXQgYmVlbiB1c2VkIGluIGRpZmZlcmVudCB3YXlzIHJlY2VudGx5LCBzdWNoIGFzIHdoZW4gZGFuY2UgbXVzaWMgc3RhciBTdGV2ZSBBb2tpIGJyb2FkY2FzdGVkIGEgc2V0IGZyb20gSWJpemEgbGFzdCBzdW1tZXIuIFN0YXBsZXMgc2F5cyB0aGF0IFR3aXRjaCBjYW4gaGVscCBpbnRyb2R1Y2UgcG9rZXIgdG8gYSBuZXcgYXVkaWVuY2UuCkkgbm90IHRyeWluZyB0byBjaGFuZ2UgdGhlIHdvcmxkLCBJIG9uIG15IGx1bmNoIGJyZWFrIHNjcm9sbGluZyB0aHJvdWdoIHJlZGRpdCA6UC4gCkhvdyBjYW4gYnJhbmRzIGZ1dHVyZSBwcm9vZiBhbmQgYmVzdCBpbnRlcnZlbmUsIHJpZGluZyBvbiBkYXRhLCB0ZWNoLCBjdWx0dXJlIGFuZCBjcmVhdGl2ZSBzb2x1dGlvbnMgdG8gY3JlYXRlIGFuIG9wdGltYWwgY29uc3VtZXIgb3IgdXNlciBleHBlcmllbmNlPyBBIGNoYWxsZW5nZSwgYW5kLCBpbiB0aGF0LCBhIHN0cm9uZyBvcHBvcnR1bml0eS4uIApNeSBsaWZlIGhhcyBjaGFuZ2VkIGNvbXBsZXRlbHkuIApIb3dldmVyLCBJIHdvdWxkIHByb3Bvc2UgdGhhdCB0byB0aGUgZXh0ZW50IHRoYXQgSm91cm5hbGlzbSBkb2VzIGluIGZhY3QgaGF2ZSBhIHByb2JsZW0sIHRoYXQgcHJvYmxlbSBpcyBzaW1wbHkgYW4gZXh0ZW5zaW9uIG9mIHRoZSBtYXJrZXQgZmFpbHVyZXMgb2YgQ2FwaXRhbGlzbS4gCkxhc3QgSSBjaGVja2VkLCBtb3N0IGNvbW11bml0aWVzIGluIFZlcm1vbnQgZGlkIG5vdCBuZWVkIFhNMzEyIG1hY2hpbmUgZ3Vucy4gQnV0IHRoYXQgaG93IHN1cHBvc2VkbHkgcHJvZ3Jlc3NpdmUgcG9saXRpY3MgaGFwcGVuIGluIFZUIGFuZCB0aGUgcmVzdCBvZiB0aGUgY291bnRyeS4gCkJ1dCB5b3UgY291bGQgaGF2ZSAxMCwwMDAgbmV3IGNhbmNlciBwYXRpZW50cyB0aGF0IHJlY2VpdmUgdGhlIGN1cmUgb3IgMTAsMDAwIG5ldyBwYXRpZW50cyB0aGF0IHJlY2VpdmUgY2hlbW8gZm9yIHllYXJzLCB0aGUgbnVtYmVyIG9mIG5ldyBwYXRpZW50IGRvZXNuIGNoYW5nZSB3ZXRoZXIgeW91IHVzZSBvbmUgdHJlYXRtZW50IG9yIHRoZSBvdGhlci4gT2YgY291cnNlIHRoZSBjb21wYW55IHRoYXQgZmlyc3QgZmluZHMgYSBjdXJlIHdpbGwgbWFrZSBhIGxvdCBvZiBtb25leSB3aGlsZSBpdCBoYXMgdGhlIG1vbm9wb2xlLCBidXQgb25jZSB0aGUgcGF0ZW50IGlzIG92ZXIgb3Igc29tZSBvdGhlciBjb21wYW55IGNyZWF0ZXMgYW5vdGhlciBzaW1pbGFyIGN1cmUgdGhlbiB0aGV5IHdvdWxkIHByb2JhYmx5IG1ha2UgbGVzcyBtb25leSBwZXIgcGF0aWVudC4KVGhlIHByb2JsZW0gaXMsIHRoYXQgbW9kZSBpcyBpbGxlZ2FsLCBzYWlkIFJ5YW4gQ3Jvdywgb25lIG9mIHRoZSBvd25lcnMgb2YgVGV4YXMgQ2FyZCBIb3VzZS4gSGUgc2FpZCB0aGUgQXVzdGluIGNsdWIgcmV2aXNlZCBpdHMgYnVzaW5lc3MgbW9kZWwgZm91ciBtb250aHMgYWdvIGFmdGVyIHRhbGtpbmcgd2l0aCBhdHRvcm5leXMuIE5vIGxvbmdlciBpcyB0aGUgY2x1YidzIHJldmVudWUgdGllZCB0byB0aGUgYW1vdW50IG9mIHRpbWUgcGxheWVycyBzcGVuZCBzZWF0ZWQgYXQgdGhlIHBva2VyIHRhYmxlLiBNZW1iZXJzIG5vdyBnZXQgY2hhcmdlZCB1cG9uIGVudGVyaW5nIHRoZSBjbHViLCB3aGV0aGVyIHRoZXkgcGxheSBwb2tlciBvciBub3QsIENyb3cgc2FpZC4KVGhhdCBpcyB0aGUgeSB3YXkgdGhpbmdzIHdvcmsuIElmIHlvdSBzYXkgeW91IHdvbiBkbyBpdCwgd2VsbCwgdGhhdCBpcyBub3QgdGhlIHdheSB0aGluZ3Mgd29yaywgc28gbWF5YmUsIGZyb20gdGhlaXIgcG9pbnQgb2YgdmlldywgdGhlcmUgaXMgc29tZXRoaW5nIHdyb25nIHdpdGggeW91Li4gClllcC4gCidUaGUgTWFza2VkIFNpbmdlcicgb2ZmZXJzIGEgZ2xpbXBzZSBhdCB0aGUgZnV0dXJlIG9mIEZveApJIGp1c3QgY29weSBhbmQgcGFzdGUgbXkgY29tbWVudCBmcm9tIGFib3ZlLCBhcyBJIGFscmVhZHkgZ29uZSB0aHJvdWdoIHRoZSBudW1iZXJzIG9uY2UgYW5kIGl0IG9idmlvdXMgeW91IGp1c3Qgc3RhcnRlZCByZWFkaW5nIGZyb20geW91ciBzY3JpcHQgd2l0aG91dCBjcnVuY2hpbmcgYW55IG9mIHRoZSBmYWN0dWFsIG51bWJlcnMgSSBnYXZlIHlvdS4gCkxvbC4gSSBtYWtlIHN1cmUgdGhleSBkb24ndCBzbW90aGVyIGhlciwgYW5kIEkgY2FsbCB0aGVtIG91dCBvbiB3ZWlyZCBiZWhhdmlvciBpbiBmcm9udCBvZiBldmVyeW9uZS4gCkl0IG5pY2UgdG8gc2VlIHNvbWUgZGlmZmVyZW50IGxvb2tzIGFzaWRlIGZyb20gdGhlIHR5cGljYWwgZHJlc3MgcGFudC9ibG91c2UvYmxhemVyIG9yIHBlbmNpbCBza2lydC9ibGF6ZXIgbG9va3Mgb2Z0ZW4gc2hvd2Nhc2VkIGZvciB5b3VuZ2VyIHdvbWVuIGluIHRoZSBvZmZpY2UuIEkgZGVmaW5pdGVseSBiZSB0YWtpbmcgc29tZSBpbnNwbyBmcm9tIHRoZXNlLi4gCkVzIGdpYnQgZWluIEJ1Y2ggR2VuaWNrIHZvbSBLb3BwIFZlcmxhZywgZGFzIHN0ZWxsdCBkaWUgVXJzYWNoZW4gdW5kIFdpcmt1bmdlbiBlaW5lcyBnZXNjaGRpZ3RlbiBOYWNrZW5zIHZlcnN0bmRsaWNoIGRhciB1bmQgemVpZ3QgZGVuIFdlZyBhdXMgZGVyIEtyYW5raGVpdHNmYWxsZSBiZXIgZGllIG5ldWUgRHJlaSBTdWxlbiBUaGVyYXBpZS4gQXVjaCB3ZW5uIGRpZSBTY2h1bG1lZGl6aW4gZXR3YXMgYW5kZXJlcyBlcnpobHQsIGRpZSBFcmZvbGdlIGRpZXNlciBUaGVyYXBpZSBzcHJlY2hlbiBmciBzaWNoLiBFaW5lIGdyb2UgSG9mZm51bmcgZnIgdmllbGUsIGRlbmVuIGtlaW4gQXJ6dCB1bmQga2VpbmUgVGhlcmFwaWUgYmlzaGVyIHdpcmtsaWNoIGhlbGZlbiBrb25udGUhCkJvcmRlciBwb2tpZSBwdW50ZXJzIHNwZW5kIGxlc3MKQ2V0IHRhdCBwZXV0IHJhcGlkZW1lbnQgZGJvdWNoZXIgc3VyIGxhIHBybW9uaXRpb24gZCd1biB0ZXJyaXRvaXJlIGltcHJjaXMsIGlnbm9yLCBpbmR0ZXJtaW4sIHZhcG9yZXV4IHF1aSBhZHZpZW50IGF1IGRldmFudCBkZSBub3VzIGV0IG5lIGRlbWFuZGUgcXVlIGxhIGZpYnJlIGNvdXJhZ2V1c2UgZXQgcG9zc2RlIGQndW4gZXhwbG9yYXRldXIuIApUaGV5IGhhdmUgc3Ryb25nIGFudGkgaW5mbGFtbWF0b3J5IGVmZmVjdHMgYW5kIGFsc28gc3VwcG9ydCB0aGUgaW1tdW5lIHN5c3RlbS4gTG93IGxldmVscyBvZiBvbWVnYSAzcyBvciBhIHNrZXdlZCByYXRpbyBvZiBvbWVnYSA2cyBmYXR0eSBhY2lkcyB0byBvbWVnYSAzcyAocmVhZCBtb3JlIGFib3V0IHRoaXMgaW4gNCkgYXJlIGRpcmVjdGx5IGxpbmtlZCB0byBpbmZsYW1tYXRvcnkgZGlzZWFzZSByaXNrIGluY2x1ZGluZyBjYW5jZXIsIGFydGhyaXRpcywgaGVhcnQgZGlzZWFzZSwgaW5mbGFtbWF0b3J5IGJvd2VsIGRpc2Vhc2UsIGFuZCBwc3ljaGlhdHJpYyBkaXNvcmRlcnMuCkl0IGFsbCBhY2h5IGFuZCB0aWdodCwgYW5kIG5vIGFtb3VudCBvZiBoZWF0L21hc3NhZ2UgaXMgaGVscGluZy4gTXkgaHVzYmFuZCBzd2VhcnMgaXQgZnJvbSBydW5uaW5nIGluIHRoZSBjb2xkIGFuZCBub3Qgd2FybWluZyB1cCBzdWZmaWNpZW50bHksIGJ1dCBpdCBub3QgbGlrZSB0aGF0IHdhcyB0aGUgZmlyc3QgdGltZSB0aGlzIHllYXIgSSBydW4gaW4gY29sZCB3ZWF0aGVyLCBhbmQgSSBkaWRuIGRvIGFueXRoaW5nIGRpZmZlcmVudGx5LiAKQSBsb3VkIHBpbmcgZWNob2VzIGludG8gdGhlIHJvb20sIHNpbGVudCBwcmV2aW91c2x5IHNhdmUgZm9yIHRoZSBjcnVuY2hpbmcgb2YgY2hpcHMgYW5kIHRoZSBzbHVycHBpbmcgb2YgYSBjdXAgbyBqb2UuIApTaSBsIGVzc2FpZSBkZSBzZSByYXBwcm9jaGVyIGRlIGxhIHBoeXNpcXVlIG9uIHBvdXJyYWl0IGRpcmUgcXVlIGwgYWdpdCBlbiB0YW50IHF1IGRlIHRvdXRlIGF1dHJlIGZvcm1lIHBlbnNlIHF1aSBzIHJhcHByb2NoZS4gTCBwZXV0IGFsb3JzIHNlIGNvbmNldm9pciBjb21tZSByZWNvdXZyYW50IGxlIG1jYW5pc21lIGVuY29yZSBpbmNvbm51IHF1aSB0ZW5kICBzeW5jaHJvbmlzZXIgZGVzIHZuZW1lbnRzIHJlbGlzIHBhciBsZSBzZW5zIChzaW1pbGFyaXQgYXJjaHR5cGFsZSkgZXQgbm9uIHBhciBsYSBjYXVzZS4uIApCdXQgeW91J3ZlIGdvdCB0byBkbyBpdC4iQSBMYXMgVmVnYXMgb2ZmaWNpYWwgYW5kIGEgcmVwcmVzZW50YXRpdmUgb2YgdGhlIEFtZXJpY2FuIE1hc3NhZ2UgVGhlcmFweSBBc3NvY2lhdGlvbiBzYXkgdGhhdCB0aGUgY2hhbGxlbmdlcyBvZiByZWd1bGF0aW5nIHRoZSBtYXNzYWdlIGluZHVzdHJ5IGluIHRoZSBMYXMgVmVnYXMgYXJlYSBhcmUgdW5pcXVlLCBhbmQgd2lsbCBub3QgbGlrZWx5IHByb3ZlIGVhc3kuIllvdSBhbGwgaGF2ZSBhIGRpZmZpY3VsdCBjbGltYXRlIHdpdGggdGhlIHByb3N0aXR1dGlvbi4gCkkgcmVhbGx5IGRvbiB3YW50IE5OIHRvIGJlIGtpbGxlZCwgYnV0IGlmIGl0IGlzIEkgZGVmaW5pdGVseSBzaG93IG15IElTUCwgTmV0ZmxpeCwgSHVsdSwgU3RlYW0sIGFuZCBBbWF6b24gaG93IEkgZmVlbCBhYm91dCBpdC4gVGhleSBtaWdodCBub3QgaHVydCBhIGJ1bmNoIGluIHRoZSBmaXJzdCBmZXcgbW9udGhzLCBidXQgSSBzdXJlIHRoZXJlIGFyZSBvdGhlcnMgbGlrZSBtZS4gQWZ0ZXIgc29tZSB0aW1lIElTUCB3aWxsIHNlZSBob3cgYmFkbHkgdGhleSBmdWNrZWQgdXAuCldlIHRyaWVkIHRvIGV4cGxhaW4gdG8gaGltIHRoYXQgd2UgdW5kZXJzdGFuZCwgYnV0IHRoYXQgYSBtb3ZlIGlzbiB2aWFibGUgaW4gc28gbWFueSB3YXlzLiAKVGhpcyB1bmRhdGVkIHBob3RvIHByb3ZpZGVkIGJ5IEVyaWMgUGFkZG9jayBzaG93cyBoaXMgYnJvdGhlciwgTGFzIFZlZ2FzIGd1bm1hbiBTdGVwaGVuIFBhZGRvY2suIE9uIFN1bmRheSwgT2N0LiAxLCAyMDE3LCBTdGVwaGVuIFBhZGRvY2sgb3BlbmVkIGZpcmUgb24gdGhlIFJvdXRlIDkxIEhhcnZlc3QgRmVzdGl2YWwga2lsbGluZyBkb3plbnMgYW5kIHdvdW5kaW5nIGh1bmRyZWRzLiAoQ291cnRlc3kgb2YgRXJpYyBQYWRkb2NrIHZpYSBBUCkKUG9zc2libGUgcHJlZHJhdyBoYW5kcyBhcmUgbGlzdGVkIGluIG9yZGVyLiBGaW5kIHRoZSBoaWdoZXN0IGxpc3RpbmcgdGhhdCBmaXRzIHlvdXIgcHJlZHJhdyBoYW5kLCBhbmQgZGlzY2FyZCBhbnkgY2FyZHMgdGhhdCBkbyBub3QgZml0IHRoZSBoYW5kLiAKSWYgaXQgZ2V0cyB0byB0aGF0IHBvaW50LCB5b3UgbG9zdC4gQmlnIHRpbWUhIElmIGV2ZXJ5b25lIGZyb20gdGhlIGJpZyBicmFzcyBkb3duIHRvIHRoZSBpbmZhbnRyeSBhcmUgdHJ1bHkgd2lsbGluZyB0byBnbyAiZnVsbCBvbiBtaWxpdGFyeSBqdW50YSIgKHRoYXQgdGhlIHBhcnQgdGhhdCB1bmxpa2xleSBhdCBwcmVzZW50KS4gdGhlbiB5b3UgZnVja2VkLiBHb29kIGx1Y2sgZmVuZGluZyBvZmYgdGhlIG1vc3QgcG93ZXJmdWwgdHJhaW5lZCBhbmQgY29vcmRpbmF0ZWQgbWlsbGl0YXJ5IGluIHRoZSB3b3JsZDsgdGhlaXIgYmF0dGxlIHJlZGluZXNzLCBzdXBwbHkgbGluZXMsIHRyYWluaW5nLCBNMTYgZ3JlbmFkZXMsIG1hY2hpbmUgZ3VuIGVuY2FtcG1lbnRzLCB0YW5rcywgTVJBUHMsIHByZWRhdG9yIGRyb25lcywgd2UgY291bGQgZ28gb24gYnV0IEkgZXhwZWN0IHlvdSBnZXR0aW5nIHRoZSBwb2ludC4gd2l0aCB5b3VyIGhhcGhhemFyZCBtaWxpdGlhcyBhbmQgSmVycnkgYWxsIGFsb25lIHdpdGggaGlzIHNob3RndW4uIElmIHRoZSBwZW50YWdvbnMgaW4gdGhlIGZvbGQgdGhlbiBzbyBpcyB0aGUgTlNBIGFuZCBDSUEgICB0aGF0IG1pbGl0aWEgaGFzIGFscmVhZHkgYmVlbiBwcmUgaWRlbnRpZmllZCBhbmQgaXMgMzAgc2Vjb25kcyBhd2F5IGZyb20gYmVpbmcgcGlucG9pbnRlZCBhbmQgbmV1dHJhbGl6ZWQgcmVtb3RlbHkgZnJvbSBhbiBhaXIgY29uZGl0aW9uZWQgYmFzZSBpbiBMYXMgVmVnYXMgYnkgYSBSZWFwZXIgbm8gb25lIGV2ZW4gaGVhcmQgY29taW5nLgpJIHBlcnNvbmFsbHkgYmVsaWV2ZSBhIG1ham9yaXR5IG9mIGNsdWJzIHdpbGwgZ28gdGhyb3VnaCB3aGF0IEpva2VyS2luZ3ogd2VudCB0aHJvdWdoIGJlZm9yZSBhIGdvb2Qgb3duZXIgYW5kIGxlYWRlciBidXlzIHRoZW0gb3V0LiAKQWZ0ZXIgYSBoYXJkIGRheSBmaWdodGluZyBzdHJlc3NlZCBvdXQgZXhlY3V0aXZlcywgc291bGxlc3MgY28gd29ya2VycyBhbmQgYnJhaW4gZGVhZCBib3NzZXMsIG5vdGhpbmcgZmVlbHMgYmV0dGVyIHRoYW4gYSBuaWNlLCBzb290aGluZyBtYXNzYWdlLiAKSGUgd2FzIGFuIGF2aWQgZG93bmhpbGwgc2tpZXIgYW5kIG9ubHkgc3RvcHBlZCBza2lpbmcgYXQgODEgeWVhcnMgb2xkIGFmdGVyIGhlIGJyb2tlIGhpcyBmb290IG9uIHRoZSBzbG9wZXMuIApBbmQgd2hlbiBoZSBzZWVzIE1pa2FzYSBoZSBldmVuIGFza3MgaGVyIHdoeSBoZXIgaGFpciBpcyBzbyBsb25nLiAKSSB3b3VsZCBuZXZlciBkbyBpdC4gCkNhZGVsIEV2YW5zOiBBdXN0cmFsaWEgMzcgeWVhciBvbGQgQ2FkZWwgRXZhbnMgd2lsbCBiZSB0YWtpbmcgcGFydCwgYnV0IGZlbGxvdyBBdXNzaWUgY3ljbGlzdCBSaXRjaGllIFBvcnQgaXMgb3V0IGR1ZSB0byBpbGxuZXNzLiBObyBBdXN0cmFsaWFuIGhhcyB3b24gdGhlR2lybywgd2l0aCBFdmFucycgdGhpcmQgbGFzdCB5ZWFyIHRoZSBiZXN0IG92ZXJhbGwgcmVzdWx0LiBIZSB3b24gdGhlIFRvdXIgZGUgRnJhbmNlIGluIDIwMTEgYW5kIHBsYWNlZCBzZWNvbmQgb3ZlcmFsbCBpbiB0aGUgVG91ciBEb3duIFVuZGVyIGluIDIwMTQuIEV2YW5zIGNvbnRpbnVlcyB0byBwcm92ZSBhZ2UgaXMgbm90IHN0b3BwaW5nIGhpbS4KSGV5ISBVcCB0byB5b3UsIGJ1dCBJIHdvdWxkIHBlcnNvbmFsbHkgbm90IHJlY29tbWVuZCBtYWlsaW5nIGEgcGFja2FnZSB0byBBZ3VhIER1bGNlIG9yIFZWUi4gSSBjYW4gdW5kZXJzdGFuZCBJbmRlcGVuZGVuY2UsIHRob3VnaCB0aGVyZSBpcyBhIGJ1cyB0aGF0IHJ1bnMgdG8gQmlzaG9wIHdoaWNoIGhhcyBhIGhvc3RlbCBhbmQgYSBmdWxsIHNpemVkIGdyb2Nlcnkgc3RvcmUsIGFuZCBpZiB5b3UgYXJlIHdpdGggYSBncm91cCBhdCB0aGF0IHBvaW50IG1vc3QgZXZlcnlvbmUgd2lsbCBiZSBkb2luZyB0aGF0Li4gCldoZW4gYWxsIGJvbHRzIGFyZSBpbiwgc3RhcnQgdGlnaHRlbmluZyB0aGVtIGFsbCwgYnV0IG5vdCBtb3JlIHRoYW4gaGFuZCB0aWdodC4gKG5vdCB0aGF0IHlvdSBjYW50IHVzZSBhIHJhdGNoZXQsIGJ1dCBvbmNlIHNlYXRlZCBkbyBub3QgdGlnaHRlbiB0aGUgYm9sdCBtb3JlIHRoYW4geW91IGNvdWxkIGJ5IGhhbmQpLiBXaGVuIGJvbHRzIGFyZSBhbGwgJ2hhbmQgdGlnaHQnLCB5b3UgY2FuIHN0YXJ0IHRpZ2h0ZW5pbmcgdGhlbSBvbmUgYnkgb25lIGFmdGVyIHlvdSBjYW4gc2VlIHRoZSBnYXNrZXQgaXMgY29ycmVjdGx5IGluIHBsYWNlLiAKUHVyZSBwb2tlciBza2lsbCB3aXNlLCBhbG90IG9mIHRoZSB0aW1lcyBoZSBkb2Vzbid0IHNlZW0gdG8gaGF2ZSBhIGNsZWFyIHJhdGlvbmFsZSBmb3IgaGlzIGRlY2lzaW9ucywgb3IgYXQgbGVhc3QgaXNuJ3Qgd2lsbGluZyB0byBhcnRpY3VsYXRlIGl0LiAKSG93ZXZlciwgdGhlcmUgYXJlIG1hbnkgdGhpbmdzIHlvdSBjYW4gZG8gYWZ0ZXIgdGhlIGNhcmRzIGFyZSBkZWFsdCwgc28gdGhhdCB5b3Ugd2lsbCBoYXZlIGJldHRlciBjaGFuY2VzIGF0IHdpbm5pbmcuIApQb3N0aW5nIG9uIGhlcmUgaGFzIHJlYWxseSBlYXNlZCBteSBlbW90aW9uYWwgYW5kIGludGVsbGVjdHVhbCBkaXNjb21mb3J0IGluIHdheXMgdGhhdCBJIGRpZG4gZXhwZWN0LiBUaGVyZSB3YXMgdGhpcyBzZW5zZSBvZiB1cmdlbmN5IHRoYXQgaGFzIGJlZW4gZGlzc2lwYXRlZCBieSB0aGUgY29tcGFzc2lvbiBJIGhhdmUgcmVjaWV2ZWQuIApXaGF0IEkgd2lzaCBmb3IgaGltIGlzIHRvIGV4cGVyaWVuY2UgdGhlIGZ1bGwgcmF2YWdlcyBvZiBoaXMgQWx6aGVpbWVyIHdoaWxlIGxvY2tlZCBhd2F5IGluIGEgZmVkZXJhbCBwcmlzb24uIEkgd2FudCBoaW0gdG8gd2FrZSB1cCBldmVyeSBtb3JuaW5nLCBhbG9uZSwgZW5jbG9zZWQgaW4gYSBjb25jcmV0ZSBib3ggYW5kIG5vdCBmdWxseSB1bmRlcnN0YW5kIHdoeSBoZSBpcyB0aGVyZS4gSSBleHBlY3QgdGhhdCwgd2l0aG91dCBoaXMgaGFpciBjYXJlLCBleHBlbnNpdmUgc3VpdHMsIHNwcmF5IHRhbnMsIGFuZCBjb3NtZXRpYyBzdXJnZXJ5IGhlIHdpbGwgbG9vayBpbnRvIHRoZSBtaXJyb3IgYW5kIHNlZSBhIGZhdCwgYmFsZCwgcGFsZSBtYW4gd2hvIGhlIGRvZXMgbm90IGV2ZW4gcmVjb2duaXplLiAKRGFtbiwgSSBnbGFkIHRoZSBSZWRkaXQgYWRtaW5zIGFjdHVhbGx5IGxpc3RlbiBhbmQgYWN0IG9uIHJlcG9ydHMgeW91IGd1eXMgcGFzcyB1cCB0byB0aGVtLiBBIHN1YiBJIG1vZCBvbiBhbm90aGVyIGFjY291bnQgaGFzIGhhZCBjb25zaXN0ZW50IGlzc3VlcyB3aXRoIHBlb3BsZSBQTWluZyBtZW1iZXJzIGFuZCBzZXh1YWxseSBoYXJhc3NpbmcgdGhlbSBhbmQgYWRtaW5zIGp1c3Qgc2FpZCB0aGV5IGNvdWxkbiBzZWUgYW55IG5lZ2F0aXZlIGludGVudCwgd2UgaGFkIHRvIGNvdWNoIGl0IGFzIHRoZSBoYXJhc3NlcnMgc3BhbW1pbmcgbWVtYmVycyB0byBnZXQgdGhlbSB0byBkbyBhbnl0aGluZy4gSSB3b25kZXIgaWYgc3ViIHNpemUgaGFzIGFueXRoaW5nIHRvIGRvIHdpdGggaXQuCkJhc2ljYWxseSwgQ2FzaW5vIFdhciBpcyBhIGNhc2lubyBjYXJkIGdhbWUgd2hpY2ggaXMgYmFzZWQgb24gV2FyICAgYSBwb3B1bGFyIGNhcmQgZ2FtZSBwbGF5ZWQgYnkgY2hpbGRyZW4uIEZpcnN0LCBoZXJlJ3MgYSBxdWljayBsb29rIGF0IHRoZSBydWxlcyBvZiB0aGUgV2FyIGNhcmQgZ2FtZS4gClRoZSBNZXRyb3BvbGl0YW4gICBhIDI0IGhvdXIgY2FmZSBvZmZlcmluZyBhbiBveXN0ZXIgYmFyIGFuZCBnZWxhdG8gYmFyLgpBbGwgYXQgUml2ZXJzaWRlIFBhcmsgdW5sZXNzIG90aGVyd2lzZSBzdGF0ZWQuLiAKRXZlcnkgZGF5IHdlIG1ha2UgdGhlbSwgYW5kIGV2ZXJ5ZGF5IHdlIGNhbiBicmVhayB0aGVtLi4gClRoaXMgaXMgbm90IGV2ZW4gY2xvc2UgdG8gY29ycmVjdCwgd2hvZXZlciB0eXBlZCB0aGlzIGlzIG5vdCBzbWFydCBvciBzaW1wbHkgZG9lcyBub3Qga25vdyBwb2tlciBydWxlcy4gClRoZSBsYXR0ZXIgb2Ygd2hpY2ggYnkgZGVzaWduLlRoZWlyIHByb3BvcnRpb25zIGFyZSBzbyByYWRpY2FsbHkgZGlmZmVyZW50IHRoYXQgb2YgYSBodW1hbiB0aGF0IHRoZXJlIGlzbiBhIHNpbmdsZSBib25lIHRoYXQgd291bGRuIG5lZWQgdG8gYmUgY2hhbmdlZCBpbiBzaGFwZSwgc2l6ZSwgYW5kIGRlbnNpdHkgZnJvbSB0aGUgb3JpZ2luYWwsIGFuZCB5b3UgYmV0dGVyIGJlbGlldmUgdGhhdCB0aGUgaG9ybW9uYWwgY2hhbmdlcyBuZWVkZWQgdG8gaW50cm9kdWNlIGVudGlyZWx5IG5ldyBvcmdhbnMgaW50byB0aGVpciBwaHlzaW9sb2d5IGFyZSBsaXRlcmFsbHkgZW50aXJlIG9yZGVycyBvZiBtYWduaXR1ZGUgbGFyZ2VyIHRoYW4gdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBodW1hbiBtYWxlcyBhbmQgZmVtYWxlcy4uIApJZiB0aGUgaW5mb3JtYXRpb24geW91IHJlcXVpcmUgaXMgbm90IGxpc3RlZCBpbiBvdXIgUHVibGljYXRpb24gU2NoZW1lLCBHdWlkZSB0byBJbmZvcm1hdGlvbiBvciB3ZWJzaXRlIHBsZWFzZSBjb250YWN0IHRoZSBVbml2ZXJzaXR5IGluIHdyaXRpbmcuIFRvIGhlbHAgdXMgbWFuYWdlIHlvdXIgcmVxdWVzdCBwbGVhc2UgZW5zdXJlIHRoYXQgeW91IGluY2x1ZGUgYSBkZXNjcmlwdGlvbiBvZiB0aGUgaW5mb3JtYXRpb24geW91IHJlcXVpcmUgYW5kIGFuIGFkZHJlc3MgdG8gd2hpY2ggd2UgY2FuIHByb3ZpZGUgdGhlIGluZm9ybWF0aW9uLgpBbHNvIEFMU08gICBpdCBnaXZlcyB5b3UgYSBjaGFuY2UvZXhjdXNlIHRvIHNuZWFrIGluIHdoZXJlIHBlb3BsZSBhcmUgc2lwcGluZyBvbiBmdWxsIGRyaW5rcyBBVCB0aGUgYmFyIHRvIGdldCB0byB0aGUgZnJvbnQuIApDYW4gZ2V0IHRoZXNlIGRlbHV4ZSBhbGJ1bSBzb25ncyBmcm9tIGlUdW5lcyEgMTAwKSBZb3UgYW5kIEkuIEhlcmUsIHRoZSAxMDFzdCwgMTAzcmQgMTA0dGhzb25ncyBjYW4gYmUgZm91bmQgb24gaVR1bmVzLCB3aGlsZSB0aGUgMTAybmQgY2FuIGJlIGZvdW5kIG9ueW91dHViZS4gCkFsb3JzIGplIGwgVG91am91cnMgZGVycmkgbGEgdm9pdHVyZSBkZSBzIGplIG1lIHBsYSBjIGRlIGx1aSwgamUgZG9ubmFpcyBkZXMgY291cHMgZGUgZnJlaW5zLCBwdWlzIGRlcyBjb3VwcyBkIFB1aXMsIGplIGwgdnUgcGFydGlyIGNvbW1lIHVuZSBiYWxsZSwgZXQgaWwgYSBkb3VibCBsYSB2b2l0dXJlIGRlIHMgSiBkb25jIHNhdXQgc3VyIGxlcyBmcmVpbnMuIEplIG1lIHN1aXMgZGl0IHIgZXN0IGNsYWlyLiAKV2l0aCAyMGJicywgeW91IHNob3VsZCBiZSBvcGVuIHNob3Zpbmcgd2l0aCBoYW5kcyB0aGF0IGhhdmUgZXF1aXR5IGJ1dCBwbGF5IHBvb3JseSBwb3N0ZmxvcCwgbGlrZSBBIHggYW5kIHNtYWxsIHBhaXJzLiAKSSBiZWhpbmQgaW4gYSBjbGFzczogIkl0IG15IGZhdWx0LCB0aGV5IGp1c3QgdGVsbCBtZSB0byBrbnVja2xlIGRvd24gYW5kIGRvIHRoZSB3b3JrIgpIZXJlIHRoZXkgYXJlOi4gCllvdSBsb29rIGZvciB0aGUgZ3VuIGJ1dCBpdCdzIGRhcmsgc28gaXQncyBoYXJkIHRvIHNlZS4gClRoZSBtYXRlcmlhbCBjb3ZlcnMgdGhlIG9yaWdpbmFsIHBhaW50IGFuZCBpcyByZW1vdmFibGUsIHRoZXJlZm9yIHByb3RlY3RpbmcgdGhlIHBhaW50IGpvYiBhbmQgY2xlYXIgY29hdC4gUGVlbCBvZmYgdGhlIHdyYXAgYW5kIHlvdSBoYXZlIGEgcGVyZmVjdCBwYWludCBqb2IgdW5kZXJuZWF0aCBvZiBpdCB0ZW4geWVhcnMgbGF0ZXIsIGhlbHBzIGhvbGQgdGhlIHZhbHVlIG9mIGEgY2FyLiAKSXQncyBhIHBva2VyIGdhbWUgd2hlcmUgcGxheWVycyBwbGF5IGFnYWluc3QgdGhlIGRlYWxlci4gRXZlcnlvbmUgKGluY2x1ZGluZyB0aGUgZGVhbGVyKSBnZXRzIDcgY2FyZHMgYW5kIG5lZWRzIHRvIG1ha2UgdGhlaXIgYmVzdCA1IGNhcmQgcG9rZXIgaGFuZCBhbmQgYmVzdCAyIGNhcmQgcG9rZXIgaGFuZCAodGhlcmUgYXJlIHNvbWUgZGV0YWlscyB0byBidWlsZGluZyB5b3VyIGhhbmRzLCBidXQgdGhleSBhcmVuJ3QgaW1wb3J0YW50KS4gSWYgYm90aCBvZiB5b3VyIGhhbmRzIGJlYXQgYm90aCBvZiB0aGUgZGVhbGVycycgY29ycmVzcG9uZGluZyA1IGFuZCAyIGNhcmQgaGFuZHMsIHRoZW4geW91IHdpbi4gCkkgZ2l2ZSB5b3UgYSB0YXN0ZSBvZiBtaW5lIG1hdGUuIEkgd2FzIHJhaXNlZCBDYXRob2xpYywgYnV0IHN0b3BwZWQgZ29pbmcgdG8gbWFzcyBhdCBhZ2UgMTQuIERpZG4gcmVhbGx5IGdpdmUgdXAgZW50aXJlbHkgb24gQ2F0aG9saWNpc20gYXQgdGhlIHRpbWUsIGJ1dCB3YXMgZ2V0dGluZyBtb3JlIGFuZCBtb3JlIGFnbm9zdGljIGFuZCBmZWx0IGl0IHdhc24gZm9yIG1lIGF0IHRoZSB0aW1lLiBHb2luZyBmb3J3YXJkIHRvIHdoZW4gSSB3YXMgMTgsIEkgZGVjaWRlZCB0byBnaXZlIENhdGhvbGljaXNtIGEgZ28gYWdhaW4uIFdlbnQgdG8gbWFzcyB3aXRoIG15IHBhcmVudHMsIG5vdGhpbmcgdG9vIGluc3BpcmluZyB0aGUgc2VydmljZSwgYnV0IGRlY2lkZWQgYXQgZmlyc3QgdG8ga2VlcCBnb2luZyBhIGZldyBtb3JlIHdlZWtzIGF0IGxlYXN0LgpBZ2FpbiwgaWYgIm5vdCBwYXlpbmcgdGF4ZXMiIGlzIHlvdXIgY29tcGxhaW50IHdlIHNob3VsZCB3b3JrIG9uIG1ha2luZyBpdCBlYXNpZXIgZm9yIHRoZW0gdG8gcGF5IHRheGVzIGxlZ2FsbHkuIApFbGV4YSBoYXMgc3VjY2VlZGVkIGluIGVzY2FwaW5nIGxpZ2h0bHkgdHJhZmZpY2tlZCBjb25kb20gZGlzcGxheXMgaW4gZmF2b3Igb2YgZmVtaW5pbmUgY2FyZSBhaXNsZXMsIE1yLiBEYW5pZWxzIHNhaWQuICJXZSBmb3VuZCB3b21lbiB3YW50IHRvIHNob3AgZm9yIHNleHVhbCBoZWFsdGggcHJvZHVjdHMsIGJ1dCBpbiB0aGVpciBzZWN0aW9uIG9mIHRoZSBzdG9yZS4iCjE1MzYgS2Jwcy4gCkxlcyBob21tZXMgbmFpc3NlbnQgZXQgZGVtZXVyZW50IGxpYnJlcyBldCBnYXV4IGVuIGRyb2l0cy4gTGVzIGRpc3RpbmN0aW9ucyBzb2NpYWxlcyBuZSBwZXV2ZW50IHRyZSBmb25kZXMgcXVlIHN1ciBsJ3V0aWxpdCBjb21tdW5lLgpJdCBpcyB2ZXJ5IHVzZWZ1bCB0byBrbm93LCB0aGVyZWZvcmUsIHRoYXQgdGhlcmUgYXJlIGEgbG90IG9mIHBlb3BsZSBwbGF5aW5nIHBva2VyIG9ubGluZSB3aG8gd2F0Y2ggdGhlc2UgdGVsbHMgdmVyeSBjbG9zZWx5IGR1cmluZyB0aGUgZ2FtZS4gCklmIHRoZXkgaGFkbiBoYXZlIHNhaWQgYW55dGhpbmcgdGhleSB3ZXJlIGdvaW5nIHRvIGJlIGxldCBnby4gClRoZXkgcHVzaGVkIEZhbWlseSBQbGFubmluZyBhbmQgYmlydGggY29udHJvbCBwaWxscy4gTm93IHRoZXkgY2FsbCB0aGUgc2FtZSBwcm9ncmFtcywgIlNhZmUgU2V4IiBidXQgdGhlIHJlc3VsdHMgYXJlIHRoZSBzYW1lLiAKVGhlIG1ham9yaXR5IG9mIHRoZW0gYXJlICJvbiBsb2FuIiB0byB0aGUgb3duZXJzIGZyb20gQ2hpbmEgKGllLiBUcmFmZmlja2VkKSBmb3IgYW55d2hlcmUgZnJvbSAkNTAwMCAgJDEwIDAwMCBmb3IgMyBtb250aHMgb2Ygc2VydmljZSB0byB1cHdhcmRzIG9mIGEgeWVhci4uIApJZiB5b3UgYXJlIGFwYXJ0IG9mIGFueSBtZWRpdW0gb3IgbGFyZ2Ugc2NhbGUgbWFudWZhY3R1cmluZyBvcGVyYXRpb24geW91IGFyZSBwcm9iYWJseSBmYW1pbGlhciB3aXRoIHRoZSBjb25jZXB0IG9mIEp1c3QgSW4gVGltZSBNYW51ZmFjdHVyaW5nLiBUaGUgZ2VuZXJhbCBjb25jZXB0IGJlaW5nIHRoYXQgaW52ZW50b3J5IGlzIG1vbmV5IHNpdHRpbmcgaWRsZSBhbmQgYSBtYW51ZmFjdHVyZXIgc2hvdWxkIHN0cml2ZSB0byBsaW1pdCB0aGUgYW1vdW50IG9mIHRpbWUgYW55IGRlbWFuZGVkIGNvbXBvbmVudCBpcyB3YWl0aW5nIHRvIGJlIG1hZGUgaW50byBhIGZpbmFsIHByb2R1Y3QuIFRoaXMgY29uY2VwdCB3YXMgcmV2b2x1dGlvbml6ZWQgYnkgdGhlIFRveW90YSBjb3Jwb3JhdGlvbiBhbmQgaXMgbm93IHRoZSBzdGFuZGFyZCBnb2FsIG9mIGFueSBjb21wYW55IHN0cml2aW5nIGZvciBwcm9jZXNzIGV4Y2VsbGVuY2UuIApZb3UgcHJldmlvdXNseSBzZXJ2ZWQgYXMgYW4gYXNzaXN0YW50IGFuZCBhc3NvY2lhdGUgcmFiYmkuIEhvdyBpcyBpdCBkaWZmZXJlbnQgYmVpbmcgYSBzZW5pb3IgcmFiYmk/CklmIG5vdCwgSSB3b3VsZCByZWNvbW1lbmQgeW91IHRvIGhhdmUgYSBsb29rIGludG8gaXQsIGJlY2F1c2UgSSBmb3IgZXhhbXBsZSBzdHVkaWVkICdidXNpbmVzcyBpbmZvcm1hdGljcycgYW5kIGkgd29uJ3QgdG91Y2ggY29kZSBpbiBteSBsaWZlIGFnYWluLiBCdXV1dCwgaWYgeW91J3JlIGFibGUgdG8gY29kZSAvIGVzcGVjaWFsbHkgaW4gdGhlIGN1cnJlbnQgbWFya2V0LCBlc3BlY2lhbGx5IGluIGFiYXAgKGF0IGxlYXN0IHRoYXQnYSBteSBvY2N1cGF0aW9uKSBidXQgSSB0aGluayBhbHNvIGluIGFueSBvdGhlciBsYW5ndWFnZSwgeW91IHdpbGwgbmV2ZXIgYm90aGVyIGFib3V0IGEgam9iIG9yIG1vbmV5IGFnYWluLiAKQWN0dWFsbHksIEZlcmd1c29uJ3MgY2FyZCB0aHJvd2luZyBza2lsbHMgYXJlIHNvIHNoYXJwLCBoZSBjYW4gc2xpY2UgdmVnZXRhYmxlcyBmcm9tIGFjcm9zcyB0aGUgcm9vbS4KVGhlcmUgYXJlIG1pbGxpb25zIG9mIGluZGl2aWR1YWxzIHdobyBsb3ZlIHRvIHBsYXkgcG9rZXIgaW4gdGhlIHdvcmxkIHRvZGF5LiBVbmZvcnR1bmF0ZWx5LCBtb3N0IG9mIHVzIGFyZSBzZWNsdWRlZCB0byBoYXZpbmcgYSB3ZWVrZW5kIGdldCB0b2dldGhlciBhbW9uZ3N0IGZyaWVuZHMgYW5kIGZhbWlseS4gU28gaW4gbW9zdCBwYXJ0IHlvdSB3b24ndCBmaW5kIGFueSBoaWdoIHByb2ZpbGUgcGxheWVycyBhdCBvdXIgdGFibGVzLiAKSW5kaXJlY3Qgc3BlbGxzIGRvIEZvcmNlIGRhbWFnZSBiYXNlIHBsdXMgbmV0IGhpdHMgKHdpdGggYW4gQVAgZXF1YWwgdG8gRm9yY2UpIHNvIG9uIHBhcGVyIHRoZXkgbG9vayBsaWtlIHRoZXkgZG8gYSBsb3QgYnV0IHNpbmNlIHRoZXJlIGlzIHRoZSBSYW5nZWQgRGVmZW5zZSBUZXN0IGZvbGxvd2VkIGJ5IGEgU29hayAoQm9keSBwbHVzIEFybW9yKSB5b3UgY2FuIHN0YWdlIHRoZSBkYW1hZ2UgZG93biBxdWl0ZSBhIGJpdCAoanVzdCBsaWtlIHdpdGggZmlyZWFybXMpLgpKJ2F2YWlzIHQgbG9uZ3VlbWVudCBpbnRlcnZpZXdlIGlsIHkgYSBxdWVscXVlcyBzZW1haW5lcyBwYXIgSnVzdGluZSwgdW5lIGpldW5lIGZlbW1lIHF1aSBhIGxhbmMgdW4gc2l0ZSwgWWVzIFNoZSBDYW4sIHBvdXIgdmFsb3Jpc2VyIGRlcyBwYXJjb3VycyBkZSBmZW1tZXMgdmFyaXMgZXQgcG9zc2libGVtZW50IGluc3BpcmFudHMuIApNZWluZW0gZXJzdGVuIGJlc3VjaCBhdWYgZGVyIHd1bmRlcnNjaG5lbiBncm5lbiBpbnNlbCBsYSBwYWxtYSBhdWYgZGVyIGltIGpubmVyIGRpZSBtYW5kZWxidW1lIHVuZCBkZXIgZ2luc3RlciBibGhlbiB1bmQgbWFuZ29zLCBvcmFuZ2VuLCBwYXBheWFzIHVuZCBtYXJhY3VqYSBhdWYgZGVuIGJ1bWVuIHJlaWZlbiwgc2luZCBtaXIgYXVjaCBkaWUgdmllbGVuIGtyZXV6ZSBhbiB3bmRlbiB1bmQgZmFzc2FkZW4gZGVyIGh1c2VyIGF1ZmdlZmFsbGVuLiBJY2ggZGFjaHRlLCBkYXNzIGF1ZmdydW5kIGlocmVyIGdsZWljaGJsZWliZW5kZW4gc2NobGljaHRoZWl0IHVuZCBpaHJlcyB6YWhscmVpY2hlbiB2b3Jrb21tZW5zIGVpbmUgYmVzb25kZXJlIGJlZGV1dHVuZyBkYW1pdCB2ZXJidW5kZW4gc2VpbiBtdGUuIApTbyB3aGF0IGlzIGl0IGFib3V0IHRoZSBzaGFkZXMgb2YgcnVieSwgY3JpbXNvbiwgYW5kIHNjYXJsZXQgdGhhdCBtYWtlcyB0aGVtIHNvIHBvdGVudD8uIApEdW5jb21iZSwgTHV2ZXJuZS4gClRoYXQgc2FtZSBwZXJzb24gd291bGQgbmVlZCB0byBlYXJuICQ3MSw0NzQgaW4gTG9zIEFuZ2VsZXMuIApNYXNzYWdlIHcgZGVyIEdlYnVydApPbmx5IGluIGJldHdlZW4gZGVhbHMgbWF5IGEgcGxheWVyIGNvbnRyaWJ1dGUgbW9yZSBtb25leSB0byB0aGVpciBzdGFjay4gCklQICAgSW1hZ2UgUHJvbXB0OiBBIHN0cmlraW5nIGltYWdlIG9yIGFsYnVtCk1lZGljYXJlIG9ubHkgY292ZXJzIGJyZWFzdCBpbXBsYW50cyBpbiB0aGUgY2FzZSBvZiBtYXN0ZWN0b215LCBnZW5kZXIgcmVhc3NpZ25tZW50LCBvciBpbiB0aGUgY2FzZSBvZiBzb21ldGhpbmcgbGlrZSBhIHRlcnJpYmxlIGRpc2ZpZ3VyaW5nIGFjY2lkZW50LiAKRmFpciBlbm91Z2guIEluIG15IG93biBleHBlcmllbmNlIHRob3VnaCwgSSBuZXZlciBmb3VuZCB0aGVyZSB0byBiZSBhbnkgY29ycmVsYXRpb24gYmV0d2VlbiB0ZW1wIGNoYW5nZXMgYW5kIGV2aWRlbmNlIGNhcHR1cmVkLiBJdCBjZXJ0YWlubHkgd291bGRuIGh1cnQgdG8gZG8geW91ciBvd24gdGVzdGluZyB0aG91Z2gsIGFuZCBzZWUgaWYgeW91ciByZXN1bHRzIGRpZmZlciBmcm9tIG1pbmUuCkZvciB5b3VyIGJyb2FkZXIgcXVlc3Rpb24sIHRoZSBzb2NpYWwgbGVnaXRpbWl6YXRpb24gb2YgdGhlIGR1ZWwgY2FtZSBmcm9tIGNvbXBsaWFuY2Ugd2l0aCB0aGUgY29kZSwgYW5kIGVncmVnaW91cyB2aW9sYXRpb25zIG9mIGl0LCBzdWNoIGFzIGZpcmluZyBiZWZvcmUgdGhlIGNvbW1hbmQgd2FzIGdpdmVuIGxvc3QgeW91IG5vdCBvbmx5IHRoZSBwcm90ZWN0aW9uIGZyb20gdGhlIGp1ZGdlbWVudCBvZiBzb2NpZXR5LCBidXQgYWxzbyBsZWdhbCBwcm90ZWN0aW9uLiBPbiB0aGUgZmllbGQgaXRzZWxmLCB0aGUgb3RoZXIgbWFuIHNlY29uZCB3b3VsZCBiZSBlbXBvd2VyZWQgdW5kZXIgdGhlIGNvZGUgdG8gc2hvb3QgZG93biB0aGUgdmlvbGF0b3Igd2hlcmUgaGUgc3Rvb2QsIGJ1dCBvZmYgaGFuZCwgd2hpbGUgSSBrb3cgb2YgZXhhbXBsZXMgd2hlcmUgdGhlIHRocmVhdCB3YXMgbWFkZSwgc3VjaCBhcyBKYWNrc29uIERpY2tpbnNvbiwgSSBjYW4gcmVjYWxsIGl0IGV2ZXIgYmVpbmcgY2FycmllZCBvdXQuLiAKQmVpbmcgYWJsZSB0byByZWx5IG9uIGtub3dsZWRnZWFibGUgc3RhZmYgYW5kIGN1dHRpbmcgZWRnZSBzb2Z0d2FyZSBpcyBlc3NlbnRpYWwsIGVzcGVjaWFsbHkgaWYgeW91IGRvIG5vdCBoYXZlIHRvbyBtdWNoIGtub3dsZWRnZSBhYm91dCBnYW1ibGluZy4gSGVuY2UsIHlvdSBzaG91bGQgaGlyZSBhIHJlcHV0ZWQgcHJvdmlkZXIgb2YgcG9rZXIgYW5kIGJsYWNramFjayB0YWJsZSByZW50YWxzLCB3aG8gd2lsbCBwdXQgYXQgeW91ciBkaXNwb3NhbCB3ZWxsIHRyYWluZWQgYW5kIGNvbXBldGVudCBzdGFmZi4gSW4gYWRkaXRpb24sIHlvdSBtYXkgd2FudCB0byBvcmRlciB5b3VyIGJsYWNramFjayBhbmQgcG9rZXIgdGFibGUgcmVudGFscyBmcm9tIGEgcHJvdmlkZXIgdGhhdCBjYW4gZGVsaXZlciB0aGUgdGFibGVzIG9mIHlvdXIgY2hvaWNlIGluIGEgcHJvbXB0IGFuZCBwcm9mZXNzaW9uYWwgbWFubmVyIGFuZCB0aGF0IHBsYWNlcyBncmVhdCB2YWx1ZSBvbiBjdXN0b21lciBzYXRpc2ZhY3Rpb24uIEFmdGVyIGFsbCwgeW91IG5lZWQgdG8ga25vdyB0aGF0IGV2ZXJ5dGhpbmcgd2lsbCBiZSBhZGVxdWF0ZWx5IG9yZ2FuaXplZCBhdCB5b3VyIGV2ZW50IGFuZCB0aGF0IHlvdSB3aWxsIG5vdCBoYXZlIHVubmVjZXNzYXJ5IHdvcnJpZXMuCkV4Y2VsbGVudCBhbnN3ZXIuIEFzIHNvbWVvbmUgaW4gcmVsaWdpb3VzIHN0dWRpZXMsIEkgd291bGQgYWRkIHRoYXQgbW9zdCBpbiB0aGUgZmllbGQgd291bGQgYXJndWUgdGhhdCB0aGF0IHRoZSBpZGVhIHRoYXQgdGhlcmUgaXMgc29tZXRoaW5nIGNhbGxlZCAicmVsaWdpb24sIiBzZXBhcmFibGUgZnJvbSBvdGhlciBhc3BlY3RzIG9mIGN1bHR1cmUsIGlzIGEgbW9kZXJuIGNvbnN0cnVjdC4gUGxhdG8gb3IgQXF1aW5hcyBkaWQgbm90IHRoaW5rIG9mIHdoYXQgdGhleSB3ZXJlIGRvaW5nIGFzIGVpdGhlciBwaGlsb3NvcGh5IG9yIHRoZW9sb2d5LiAKQSB0b3BsZXNzIHdvbWVuIHdpbGwgZ2l2ZSB5b3VyIHByaXZhdGVzIGEgc3BvbmdlIGRvd24gYmVmb3JlIGdpdmluZyB5b3UgYSBibG93am9iLiBJbnRlcmVzdGVkIGluIHJlYWNoaW5nIG91dCB0byBsb2NhbCBjb3VwbGVzIGluIFNvdXRoIEtvcmVhLCB3ZWxsIHlvdSBjYW4hIEFtb25nIHRoZSBtYWpvciBjaXRpZXMgb2YgS29yZWEsIEJ1c2FuIGlzIHRoZSBuZWFyZXN0IHRvIEphcGFuLiBZb3UgbWF5IGFsc28gd2FudCB0byB1c2UgY2FsbCBnaXJsIHNlcnZpY2VzICAgdGhlc2UgZXNjb3J0IGdpcmxzIGNhbiBlaXRoZXIgd29yayBpbmNhbGwgb3Igb3V0Y2FsbC4gVGhlIHNlY29uZCBtb3N0IHBvcHVsb3VzIGNpdHkgaW4gU291dGggS29yZWEsIEJ1c2FuIGlzIGhvbWUgdG8gb3ZlciAzLiBXZSBhcmUgbm90IGFzc29jaWF0ZWQgd2l0aCBhbnlvbmUgcmV2aWV3ZWQgb24gdGhpcyBzaXRlLiBCdXNhbiBFc2NvcnQgU2VydmljZSAgIEJ1c2FuIElmIHlvdSBhcmUgbG9uZWx5IGluIEJ1c2FuICAgU291dGggS29yZWEgYW5kIHlvdSByZWFsbHkgd2FudCBzb21lb25lIHRvIGJlIHlvdXIgbG92ZXIgZHVyaW5nIHRoZSBkYXl0aW1lLCBuaWdodCBvciBmb3IgdGhlIG9jY2FzaW9uIHlvdSB3YW50IHRvLCB0aGVuIHdpdGhvdXQgbXVjaCBhZG8gbWFrZSBzdXJlIHRvIGhpcmUgZXNjb3J0IGdpcmxzIGZyb20gQnVzYW4uClNvbWUgc2NpZW50aXN0cyBoYXZlIHNwZWN1bGF0ZWQgdGhhdCB3aGVuIHRoZXkgZG8gdGhhdCwgdGhleSBhcmUgYWJzb3JiaW5nIGVuZXJneSBmcm9tIHRoZSBzdW4gYmVjYXVzZSBubyBvbmUgZnVja2luZyBrbm93cyBob3cgdGhleSBtYW5hZ2UgdG8gZ2V0IGFueSByZWFsIGVuZXJneSB0byBiZWdpbiB3aXRoLiBTbyB0aGV5IG5lZWQgdGhlIHN1biBJIGd1ZXNzLiAKSG93IHRvIFRyZWF0IENvbW1vbiBDYXQgRGlzZWFzZXMKSSBjdXJyZW50bHkgcHJlZ25hbnQgYW5kIGluIG15IGZpcnN0IHRyaW1lc3RlciBhbmQgc29tZWhvdyBteSBtb3RoZXIgd2hvIGlzIGluIGhlciA2MCBpcyBhbHNvICJwcmVnbmFudCIgYW5kIGluIGhlciBmaXJzdCB0cmltZXN0ZXIgaW4gdGhhdCBzaGUgaXMgc29tZWhvdyBleHBlcmllbmNpbmcgdGhlIHNhbWUgc3ltcHRvbXMuIEkgYW0gbmF1c2VvdXMsIHNoZSBpcyBuYXVzZW91cy4gSSBhbSBkaXp6eSBhbmQgaGF2ZSBvcnRob3N0YXRpYyBoeXBvdGVuc2lvbiwgc2hlIGlzIGRpenp5LiAKSW5kaWdvIFNoaXJlIHJlaW5mb3JjZXMgaXRzIG9wcG9zaXRpb24gdG8gcG9rZXIgbWFjaGluZXMgYnkgam9pbmluZyBuYXRpb25hbCBhbGxpYW5jZS4KRm9vZCBpcyBzYWNyZWQgYW5kIHNob3VsZCBiZSBjaGVyaXNoZWQgYXMgbXVjaCBhcyBpcyBwcmFjdGljYWwuIEl0IGlzIHN1Y2ggYSBmdW5kYW1lbnRhbCBwYXJ0IG9mIG91ciBleGlzdGVuY2UgdGhhdCBpdCBjYW4gYmUgdXNlZCBhcyBhIG1ldGFwaG9yIGZvciBldmVyeXRoaW5nLiBTb3JyeSwgSSBiYWJibGluZyBub3csIGJ1dCBpdCB0cnVlIHRoYXQgdGhlIHRoZSBjb21tb25wZXJzb24gaW4gdGhlIFVTIChJIG9ubHkgYmVlbiB0byBDYW5hZGEgb24gaG9saWRheSkgaXMgZ3Jvc3NseSB1bnNvcGhpc3RpY2F0ZWQgd2hlbiBpdCBjb21lcyB0byBmb29kLiBXZSBrbm93IGhvdyBpdCB0YXN0ZXMsIGJ1dCB3ZSB1bmFibGUgdG8gaWRlbnRpZnkgaG93IGl0IG1ha2VzIHVzIGZlZWwuCkkgZG9uJ3QgZ2V0IGl0LiAKUmVhbGx5IGludGVyZXN0aW5nIHRoYXQgdGhlIHNwaXJpdCB3b3JsZCBhbHdheXMgbmVlZHMgZHJ1Z3MsIGVtb3Rpb25hbCBicmVha2Rvd25zIGFuZCBzaW1pbGlhciBtZWFucyB0byBpbnRyb2R1Y2UgaXRzZWxmLgpCZXNpZGVzLCBhbGwgSSBkaWQgd2FzIGtpY2sgdGhpcyBob2JvICQyMCwgc21va2Ugc29tZSBjcmFjayB3aXRoIGhpbSwgYW5kIHBsYXkgY2hlc3MgaW4gYSBwYXJraW5nIGxvdCBhdCAzIGluIHRoZSBtb3JuaW5nLiBNeSBvbmx5IHJlZ3JldCBpcyB0aGF0IGhlIHdhcyBiZXR0ZXIgYXQgY2hlc3MgdGhhbiBtZS4KSSByZWNlbnRseSB3ZW50IGJhY2sgYW5kIGFmdGVyIHRyeWluZyB0byBvdXRwbGF5IG15IG9wcG9uZW50cyBsaWtlIHNvbWUgb2YgdGhlIHlvdXR1YmVycyBJJ3ZlIGJlZW4gd2F0Y2hpbmcsIEkgbGVhcm5lZCB0aGF0IGZvciBtZSBhdCAxIDIgQUJDIHBva2VyIGlzIGEgc29saWQgbG93IHZhcmlhbmNlIGFwcHJvYWNoIGZvciBtZS4gCkkgd2FzbiB0aGVyZS4gClRha2Ugc29tZSB0aW1lIGFuZCBtYWtlIHN1cmUgdGhhdCB5b3UgdGhpbmsgYWJvdXQgd2hhdCB5b3VyIG9wdGlvbnMgYXJlIGdvaW5nIHRvIGJlIHdoZW4geW91IHdhbnQgdG8gcmVkbyBhIGZlbHQgdGFibGUuLiAKSXQgcG9zc2libGUgdGhhdCB0aGlzIGZpbmFsIGRlbGF5IGlzIGp1c3QgYSBnYW1iaXQgdG8gd2luIHNvbWUgY29tcHJvbWlzZSBhbmQgYWxsb3cgTWNDYWluIHRvIGRlY2xhcmUgYSBncmVhdGVyIGxlYWRlcnNoaXAgYW5kIGV4cGVyaWVuY2UgdmljdG9yeS4gClRoZW4gSSBib3VnaHQgYSBodWdlIGJvb2sgd2l0aCB0aGUgd2hvbGUgTG9yZCBvZiB0aGUgUmluZ3MgaW4gaXQgYW5kIHRyaWVkIHJlYWRpbmcgaXQsIHdoaWNoIGdvdCBtZSBhbGwgdGhlIHdheSB0byB0aGUgZW5kIG9mIHRoZSBUd28gVG93ZXJzLCBidXQgc2luY2UgSSB3YXMgYSBjaGlsZCBJIHNvbWVob3cgbG9zdCBpbnRlcmVzdC4gU2tpcCB0byBub3cgd2hlbiBJJ20gbmluZXRlZW4gYW5kIEkgc3RhcnRlZCByZSByZWFkaW5nIGxvdHIgKGJ1dCBzbWFsbGVyIHBvY2tldCB2ZXJzaW9ucyEpIGF0IHdvcmssIHNvIG5vdyBJJ20gZmluYWxseSBmaW5pc2hlZCB3aXRoIGl0LiAKU3RhcnRlZCB3aXRoIGFsd2F5cyBiZWluZyB0aXJlZC4gU29tZXRpbWVzIGZvcmdldHRpbmcgd2hlcmUgdGhlIGtleXMgYXJlLCBldGMuIENocm9uaWMgZmF0aWd1ZSB3YXMgdGhlIHdvcnN0IGFuZCBqb2ludHMgYW5kIGJhY2sgcGFpbi4gClNveWx1NDREZXZsZXQgaSBlYmVkIGJpIG1kZGV0CkRyZXNzZWQgaW4gaGlzIHBhdGNod29yayBzaGlydCBhbmQgd2VhcmluZyBoaXMgbHVja3kgaGF0IHBsYXN0ZXJlZCBpbiB0aGUgc3BvbnNvcidzIGxpdmVyeSwgSSBmb3VuZCBoaW0gc2l0dGluZyBhdCB0aGUgdG9wIHRhYmxlIGluIEFzcGVycyBsYXN0IE9jdG9iZXIgd2hpbGUgaGlzIGdhbWUgd2FzIGJlaW5nIHN0cmVhbWVkIHdvcmxkd2lkZSBvbmxpbmUuLiAKU2VlbXMgbGlrZSBTZW5lY2EgTmlhZ2FyYShVU0EgY2FzaW5vKSBzdGlsbCBydW5zIDEvMiBhbmQgc28gZm9ydGggYW5kIGhhcyB3YXkgYmV0dGVyIHJha2UgYmFjaygkMSAyL2ggY29tcGFyZWQgdG8gMC4xNS9ob3VyIGZyb20gQ2FuYWRpYW4gY2FzaW5vcykgUGVyc29uYWxseSBJIGJlIHRhbGtpbmcgdGhlIGV4dHJhIDI1IG1pbnV0ZSB3YWxrIHRvIHRoZSBhbWVyaWNhbiBzaWRlLiBUaGV5IGFsc28gc2VlbSB0byBiZSBydW5uaW5nIDEvMyBQTE8gb24gdGhlIHJlZy4KSSBjb3VsZCBzdGlsbCBzb21ldGltZXMgaGl0IDQwMC4gCk5vIGNvbnNpZGVyYXRpb24gZm9yIHRoZSBwb3NzaWJpbGl0eSBvZiBzaW5jZXJlbHkgaGVsZCBiZWxpZWZzLiAKSG93ZXZlciwgSSBsaWtlIGdpdmluZyBhbmQgcmVjZWl2aW5nIHRob3VnaHRmdWwgZ2lmdHMgKHdoZXRoZXIgaXQgbGl0dGxlIHRoaW5ncywgaGFuZG1hZGUgc3R1ZmYsIG9yIGJvdWdodCBnaWZ0cyAgIGlmIHlvdSBmYW1pbGlhciB3aXRoIGxvdmUgbGFuZ3VhZ2VzLCBnaWZ0IGdpdmluZyBpcyBkZWZpbml0ZWx5IG9uZSBvZiBtaW5lKS4gCldhbnQgZWxrZSBkYWcgdGVsdC4gR2VsZCBzcGVlbHQgZ2VlbiByb2wuIApUaGVyZSBhIGJhbGFuY2UgaW4gdGhlcmUgSSBnb3R0YSBmaW5kLlRoZSBzZWNvbmQgb25lLiAKS2VlcCBpbiBtaW5kIHRoYXQgdGhlIGNoaWxkIGFkdm9jYXRlIG1pZ2h0IGFjdHVhbGx5IHRoaW5rIGl0J3MgYmVzdCBpZiB0aGUgY2hpbGQgc2VlcyBEYWQgZXZlcnkgd2Vla2VuZC4gSSBkb24ndCBzZWUgd2h5IGJ1dCBJJ3ZlIHNlZW4gc2V2ZXJhbCBjdXN0b2R5IG9yZGVycyB0aGF0IG1ha2Ugbm8gc2Vuc2UgdG8gbWUuIApBIGxvdCBvZiBjb21tZW50cyBhcmUgc2F5aW5nIGZvcm0gZm9sbG93cyBmdW5jdGlvbiBhbmQgdGhpcyBpcyB0b3RhbGx5IHRydWUuIFlvdSBjYW4gaGVscCBidXQgYmUgaW52b2x2ZWQgaW4gc29tZSBzb3J0IG9mIG91dGRvb3IgYWN0aXZpdHkgaW4gYm91bGRlci4gSXRzIGEgbWFqb3Igc3BvdCBmb3IgbW91bnRhaW5iaWtpbmcsIGNsaW1iaW5nLCBoaWtpbmcgYW5kIGxpa2UgbW9zdCBvZiBDb2xvcmFkbyBldmVyeW9uZSBhbmQgdGhlcmUgbW9tIHNraSBUaGF0IG1lYW5zIGlmIHlvdSBzZWUgc29tZW9uZSByb2NraW5nIHRlY2ggd2VhciBpdHMgbm90IGJlY2F1c2UgaXRzIGl0cyBiZWNhdXNlIGl0cyBnb29kIHNoaXQgdGhhdCB3b3JrcyB3ZWxsLi4gCkl0IGlzIGFsc28gYW4gY29uY2Vzc2lvbiBmcm9tIHlvdSB0aGF0IHRoZXkgc2VlayB0byBoYXJtIEdST1VQUyBvZiBhbmltYWxzIG9uIGEgc3BlY2llcyB3aWRlIHNjYWxlLgpJbiBhIHJldmVyc2FsIGZyb20gMjAxMSwgdGhlIGRlcGFydG1lbnQgaXNzdWVkIGFuIG9waW5pb24gaW4gTm92ZW1iZXIgcmUgaW50ZXJwcmV0aW5nIHRoZSBmZWRlcmFsIFdpcmUgQWN0LCB3aGljaCB3YXMgZW5hY3RlZCBpbiAxOTYxIHRvIHRhcmdldCB0aGUgbW9iIGFuZCBwcm9oaWJpdHMgaW50ZXJzdGF0ZSB3YWdlcmluZy4gClBva2VyIEdhbWUKVGhlIGxvd2VyIHRoZSBjb3VudCB0aGUgYmV0dGVyIGluIG15IG9waW5pb24uIApUaGUgZmlyc3QgaXMgdGhhdCB3aGlsZSB5b3UgdGhpbmsgeW91IG1pZ2h0IGhhdmUgYW4gZWRnZSwgeW91IHByb2JhYmx5IGRvbiBUaGF0IGZpbmUuIFdlIGFsbCBzdGFydGVkIG91dCBsb3NpbmcgYXQgcG9rZXIuIEl0IHRha2VzIHByYWN0aWNlLCBhbmQgaXQgYmV0dGVyIHRvIHByYWN0aWNlIGF0IG1pY3Jvc3Rha2VzLiBTbyB5b3Ugc2hvdWxkIGJlIGxvb2tpbmcgYXQgcG9rZXIgYXMgYSBmdW4gYWN0aXZpdHkgdGhhdCBjb3N0cyBtb25leS4gSWYgaXQgbm90IGZ1biwgd2h5IGFyZSB5b3Ugc3BlbmRpbmcgbW9uZXkgb24gaXQ/IEkgYSB3aW5uaW5nIHBsYXllciBteXNlbGYsIGJ1dCBJIHdpbGwgYWRtaXQgdHdvIHRoaW5nczogSSBwbGF5IGJlY2F1c2UgaXQgZnVuLCBhbmQgaWYgaXQgbm90IGZ1biwgSSBkb24gcGxheS4KIkl0IGNhbWUgZG93biB0byB0aHJlZSBwbGF5ZXJzIGFuZCB3ZSBjaG9wcGVkIHVwIHRoZSB3aW5uaW5ncy4gV2hlbiBJIGRpZCB0aGUgc2FtZSB0b3VybmFtZW50IG9uIG15IDIybmQgYmlydGhkYXksIEkgd29uIGV2ZXJ5dGhpbmcuIE15IG1vbSBhbmQgZGFkIGNvdWxkbid0IGJlbGlldmUgaXQuIi4gCkhlcmUgdGhlIHNlbmRlciBjb252ZXJ0cyB0aGUgbWVzc2FnZSB0byBoaXMgb3duIGlkZWFzIHRvIHVuZGVyc3RhbmQgcHJvcGVybHkuIEF0IHRoaXMgc3RhZ2UgdGhlIGNoYW5jZXMgb2YgbWlzdW5kZXJzdGFuZGluZyBpcyB0YWtlIHBsYWNlLiAKIkl0IGlzIGFuIGluZ3JhaW5lZCBlcXVhbGl0YXJpYW4gdGVtcGVyIHdoaWNoIGRvbWluYXRlcyBhbmQgcmVndWxhdGVzIGV2ZXJ5dGhpbmcgdGhhdCBoYXBwZW5zIGluIHRoZSBjb21tdW5pdHksIiBMaXBzb24gd3JvdGUuICJQb3ZlcnR5IGlzIHdlbGwgbmlnaCBlcmFkaWNhdGVkIGZyb20gdGhlIERvbWluaW9uIGFuZCBpbiBpdHMgd29yc3QgZm9ybXMgZG9lcyBub3QgZXhpc3QgYXQgYWxsLiAKQnV0IGluIGFsbCB0aGVzZSB5ZWFycywgSSBuZXZlciBzYXcgYSBzaW5nbGUgYXR0YWNrIG5ld3MgcmVsYXRlZCB0byBBYm90dGFiYWQgd2hpbGUgYXJlYXMgYWJvdmUgYW5kIGJlbG93IGl0IHdlcmUgZ2V0dGluZyBib21iZWQgbGlrZSBoZWxsLiBTbyBpdCB3YXMgb2J2aW91cyB0aGF0IHNvbWV0aGluZyBmaXNoeSBleGlzdHMgaW4gQWJvdHRhYmFkIGFuZCB0aGF0IGVudGl0eSBpcyBwcm90ZWN0ZWQgYnkgZXZlcnkgcGxheWVyIGluIHRoZSByZWdpb24gYXMgY291bnRyeSBwcmVtaWVyIG1pbGl0YXJ5IHRyYWluaW5nIGFjYWRlbXkgaXMgaW4gdGhlIHNhbWUgY2l0eSAoZm9yIHRob3NlIHdobyB0aGluayBvZiBhY2FkZW15IGFzIGEgcmVhc29uIG9mIG5vIG5ld3MsIHRlcnJvcmlzdHMgZXZlbiBhdHRhY2tlZCBBcm15IEhRcyBpbiBjYXBpdGFsIGNpdHksIGFuIGFjYWRlbXkgd2FzIGFuIGVhc3kgdGFyZ2V0KS4uIApGb3IgdGhlIHN0dWR5LCBzdWJqZWN0cyBhbHNvIGVsZXZhdGVkIHRoZWlyIHJpYnMgc28gdGhlIGN1cnZlZCBzaWRlIG9mIHRoZWlyIHVwcGVyIGJvZHkgd2FzIGZhY2luZyBvdXQuIFNsaWdodCB2YXJpYXRpb25zIG9mIHRoZSBwb3NlIHdlcmUgdXNlZCB0byBhY2NvbW1vZGF0ZSBwYXJ0aWNpcGFudHMnIHBoeXNpY2FsIGFiaWxpdGllcy4KWW91IGFyZSBwb3NpdGlvbmluZyBpdCBzbyB0aGF0IGFueSBwZXJzb24gd2hvIGhhcyBzb21lIG5vdCB1bnJlYXNvbmFibGUgcXVlc3Rpb25zIGJlIGxhYmVsZWQgYXMgYSAidHJpZ2dlcmVkIiBwb3N0ZXIuSWYgeW91IGZlZWwgdGhhdCBJdmFua2Egd2lsbCBub3QgdXNlIHRoZSBtb25leSBwcm9wZXJseSBhbmQgbm90IHRyeSB0byBoZWxwIHdvbWVuLCBqdXN0IHNheSBzby5JIGRvbid0IHRoaW5rIHNoZSBzaG91bGQgYmUgaGF2aW5nIGFueSBzYXkgaW4gYW55IG1vbmV5IHRvIGJlZ2luIHdpdGguIEknbSBzdXJlIHRoZXJlIGFyZSBwZW9wbGUgdGhhdCBhcmUgY2xlYXJseSBtb3JlIHF1YWxpZmllZCB0byBydW4gd2hhdGV2ZXIgYWR2aXNlbWVudCBzaGUncyBkb2luZy4gCkV2ZXJ5IGdhbWUgY29tcGFueSBoYXMgdG8gY2hvb3NlIHdoYXQgdG8gcHJpb3JpdGl6ZSwgYnV0IHRoZWlyIGFuaW1hdGlvbnMgYXJlIGEgYml0IHJvdWdoIChldmVuIGZvciBmaXJzdCBwZXJzb24sIHdoaWNoIGlzIHZlcnkgbXVjaCBjbGVhcmx5IHRoZWlyIGZvY3VzKS4KQSBnYXJsaWMgc2VzYW1lIGNyZXBlIGlzIG92ZXJzdHVmZmVkIHdpdGggdGVuZGVyLCBzdWNjdWxlbnQgc2hyZWRzIG9mIGJhcmJlcXVlIHBvcmsgYW5kIEtvcmVhbiBraW1jaGksIHRoZW4gdG9wcGVkIHdpdGggZWdnIHNjcmFtYmxlcyBhbmQgYSBsaWdodCBkcml6emxlIG9mIGNoaWxpIG9pbC4gSXQncyBub3RoaW5nIHNob3J0IG9mIGRlbGljaW91cy5BIHJlc2V0IG9mIHNpbHZlcndhcmUgYW5kIGEgY29uc3VsdCB3aXRoIHRoZSBmcmllbmRseSBzZXJ2ZXIgYW5kIHdlIHdlcmUgcmVhZHkgdG8gc2lwIGNvZmZlZSBhbmQgc2VsZWN0IG91ciBzd2VldCBjcmVwZS4gCk1heWJlIHlvdXIgdGVhbW1hdGVzIGFyZSBoYXZpbmcgdGhlIGJlc3Qgcm91bmQgb2YgdGhlaXIgbGlmZSwgYW5kIGFsbCBpdCB3b3VsZCB0YWtlIGlzIG9uZSBtb3JlIHRlYW1tYXRlIHRvIHRha2UgYSBmZXcgYnVsbGV0cyB0byB0aGUgY2hlc3QgdG8gaGVscCBnZXQgdGhlIHdpbi4gCkltIGV4Y2l0ZWQgdGhhdCBJJ20gZ2V0dGluZyBtb3JlIGRlZmluaXRpb24hCk9yaWdpbmFsbHkgdGhlIHRlcm0gZ3JpbWUgYmVhcmluZyBhIHBlam9yYXRpdmUgY29ubm90YXRpb24gKGdyaW1lKSBkZW5vdGVkIGEgbmV3IHdhdmUgb2YgbG93IHF1YWxpdHkgZ2VyaWphIGZyb20gcHJvZHVjZXJzIGZyb20gbG93IGluY29tZSBhcmVhcyB3aG8gd3JpdGUgdGhlaXIgbXVzaWMgdXNpbmcgdGhlICJiYXNpYyBwYWNrYWdlcyIgb2Ygc3VjaCBwcm9ncmFtcyBmb3IgcGVyc29uYWwgY29tcHV0ZXJzIGxpa2UgRnJ1aXR5TG9vcHMgYW5kIFJlYXNvbiwgYXMgd2VsbCBhcyBvbiBjaGVhcCBncm91YnMgb3IgYXQgYWxsIG9uIHRoZSBnYW1lIGNvbnNvbGVzLiAKVGhlQmxpbmRCZWF1dGljaWFuICA0IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpJJ20gc3VyZSB5b3UnbGwgaGF2ZSBoZWFyZCBwb2tlciBzdG9yaWVzIGxpa2UgdGhpcyBiZWZvcmUuClRoZXkgdXN1YWxseSBoYXZlIHdlYnNpdGVzIHNob3dpbmcgd2hpY2ggZ2lybHMgYXJlIGN1cnJlbnRseSB0aGVyZSBhbmQgdGhlbiB5b3UgZWl0aGVyIG1ha2UgYW4gYXBwb2ludG1lbnQgaW4gYWR2YW5jZSBvdmVyIHRoZSBwaG9uZSwgb3IganVzdCBnbyB0aGVyZS4gWW91IGJlIGdyZWV0ZWQgYnkgdGhlIHNvIGNhbGxlZCAiSGF1c2RhbWUiIChzaGUgdGFrZXMgY2FyZSBvZiBib3RoIHRoZSBsYWRpZXMgYW5kIHRoZSBjdXN0b21lcnMsIHNvIHRoYXQgZXZlcnlvbmUgaGFwcHkpIGFuZCBsZWQgdG8gYSBzZXBhcmF0ZSByb29tLiAKSSBub3Qgc3VnZ2VzdGluZyBhbnkgZml4IGF0IGFsbCBob25lc3RseS4gSSBub3QgYSBkZXZlbG9wZXIgYW5kIEkga25vdyB0aGVzZSBpc3N1ZXMgYXJlbiBpbiB0aGUgbGVhc3QgYml0IHNpbXBsZSB0byBmaXguIApUaGFua3MgdG8gdGVsZXBob25lIHN1cnZlaWxsYW5jZSwgdGhleSB3b3JrZWQgb3V0IHRoYXQgc3RhZmYgbWVtYmVycyBoYWQgaGFuZGVkIGNhcmRzIG92ZXIgdG8gdGhlIEl0YWxpYW5zIHdobyBoYWQgbWFya2VkIHRoZW0gd2l0aCBpbnZpc2libGUgaW5rLgpBbmQgc28gaXQgYmVjYW1lLiBHb29kYnllIExhdyBTY2hvb2wsIEhlbGxvIFBva2VyLi4gCk91dHJlIGxlIGZhaXQgcXUnaWxzIHNvbnQgZXh0YXRpcXVlbWVudCBkbWFnb2dpcXVlcywgY2VzIHNpbmlzdHJlcyBwaWdub3VmcyBxdWUgbCdvbiBub3VzIHByc2VudGUgY29tbWUgImxlcyByZXByc2VudGFudHMgZHUgcGV1cGxlIiBuZSByZXByc2VudGVudCwgdG91dCBhdSBwbHVzLCBxdWUgbGV1cnMgb21icmVzIGV0IGxlcyBxdWVscXVlcyBkZW1ldXJzIHF1aSBtaWxpdGVudCBhdSBzZWluIGRlIGxldXJzIGdyb3VwdXNjdWxlcyBzY3RhaXJlcy4gRGV1eCBuYWJvdHMgcXVpIHNlIG1vcXVlbnQgZHUgcGF5cyByZWwgY29tbWUgZGUgbGV1ciBwcmVtaXJlIGRlbnQsIHF1aSBzJ3kgY29ubmFpc3NlbnQgbW9pbnMgZW4gY29ub21pZSBxdWUgbGVzIGRlYWxlcnMgYmFzaXF1ZXMgcXVpIHN2aXNzZW50IGRhbnMgbGVzIHF1YXJ0aWVycyBkZSBtYSBjaXQgKHF1aSBvbnQsIHBvdXJ0YW50LCB1biBRSSBkZSBtb3VsZSkgZXQgcXVpIHBlcm9pdmVudCBsZXMgcGV0aXRzIHBhdHJvbnMgY29tbWUgZGVzIGV4cGxvaXRldXJzIGFsb3JzIHF1J3VuZSBsYXJnZSBwYXJ0IGQnZW50cmUgZXV4IGdhZ25lbnQgbW9pbnMgcXVlIFBvdXRvdSBldCBBcnRoYXVkIGVuIHByZW5hbnQgbGVzIHJpc3F1ZXMgZGUgbCdlbnRyZXByZXVuYXJpYXQsIHZvaXJlIG5lIHBhcnZpZW5uZW50IG1tZSBwYXMgIHNlIHNhbGFyaWVyIGF1IHNlaW4gZGUgbGV1ciBwcm9wcmUgZW50cmVwcmlzZS4uIApTb21lIHRyaWJhbCBlbGRlcnMgZnJvbSBCYWxvY2hpc3RhbiBhbHNvIGF0dGVuZGVkIHRoZSBtZWV0aW5nIGluIHdoaWNoIHRoZSBnaXJsIGZhbWlseSB3YXMgdG9sZCB0byBnaXZlIGhlciBhcyBwZXIgdGhlaXIgY3VzdG9tcy4gVGhpcyB0cmFkaW5nLCB3aGljaCBpbiBtYW55IGNhc2VzIGlzIGRvbmUgdW5kZXIgdGhlIG5hbWUgb2YgbG9hbiBzZXR0bGluZywgaXMgY29udGluZ2VudCB1cG9uIHRoZSBwb3dlciwgbWlnaHQgYW5kIG1vbmV5IG9mIHRoZSBsZW5kZXJzLCB3aG8gcHJvdmlkZSBsb2FucyB0byB0aGUgbmVlZHkgYW5kIGxhdGVyIGltcG9zZSBoZWF2eSBpbnRlcmVzdCBpbiBvcmRlciB0byBnZXQgYXdheSB3aXRoIHRoZWlyIGlubm9jZW50IG1pbm9yIGRhdWdodGVycy4gdHJhZmZpY2tpbmcgY2FuIGJlIGZhY2lsaXRhdGVkIGJ5IGxvY2FsIHByYWN0aWNlcyBhbmQgY3VzdG9tcyBiZWNhdXNlIG9mIHRoZSBlY29ub21pYyBwcm9ibGVtcyBhIGZhbWlseSBmYWNlcyB0aGF0IGZvcmNlcyB0aGVtIHRvIHNlbGwgdGhlaXIgZGF1Z2h0ZXJzIHRvIG1hcnJpYWdlLgpIZSBoYXMgYWR2b2NhdGVkIGxvb3NlbmluZyBndW4gb3duZXJzaGlwIGxhd3Mgc28gaW5kaXZpZHVhbHMgY2FuIGZpZ2h0IG9mZiBjcmltaW5hbHMsIGdpdmluZyBwb2xpY2UgYSBmcmVlciBoYW5kIHRvIHVzZSBmb3JjZSBhbmQgcmVzdG9yaW5nICJ0cmFkaXRpb25hbCIgQnJhemlsaWFuIHZhbHVlcyAgIHRob3VnaCBzb21lIHRha2UgaXNzdWUgd2l0aCBoaXMgZGVmaW5pdGlvbiBvZiB0aG9zZSB2YWx1ZXMgaW4gbGlnaHQgb2YgaGlzIGFwcHJvdmluZyBhbGx1c2lvbnMgdG8gdGhlIDE5NjQgMTk4NSBkaWN0YXRvcnNoaXAgYW5kIGhpcyBkZXJpc2l2ZSBjb21tZW50cyBhYm91dCB3b21lbiwgYmxhY2tzIGFuZCBnYXkgcGVvcGxlLi4gCklzIGZpbGxlZCB3aXRoIHBsZW50eSBvZiBkZXN0aW5hdGlvbnMgdGhhdCBhcmUgcGVyZmVjdCBmb3IgeW91LiAKSXQgYWxzbyBoYWQgYW4gYXJlYSB3aGVyZSBzYXVzYWdlcyBjb3VsZCBiZSBzZWVuIGhhbmdpbmcgYWxvbmcgd2l0aCBjdXJlZCBoYW1zIGFuZCBhIHN1c3BlbmRlZCBzaGVsZiBjb3ZlcmVkIHdpdGggbG9hdmVzIG9mIGJyZWFkLiBFdmVyeSBub3cgYW5kIHRoZW4gYSBjaGlja2VuIHdvdWxkIGdldCBpbnRvIHRoZSBob3VzZSBhbmQgYXQgbmlnaHQgSSdkIGhlYXIgaXQgc3F1YXdraW5nIHRyeWluZyB0byBnZXQgb3V0LiBXaGF0IEkgbG92ZWQgbW9zdCB0aG91Z2ggd2FzIHRoZSBmaXNoIG1hcmtldCwgd2hlcmUgc2hlbHZlcyBhbmQgY29udGFpbmVycyBvZiBzaGlueSBmaXNoIHdvdWxkIHNwYXJrbGUgaW4gdGhlIHN1bmxpZ2h0LCBibGFjayBlZWxzIG1vdmVkIGFyb3VuZCBpbiBtZXRhbCBwYWlscyBhbmQgc25haWxzIHRyaWVkIHRvIGNyYXdsIG91dCBvZiB0aGUgYmFzaW5zIGhvbGRpbmcgdGhlbS4uIApTYXVkaSBBcmFiaWEgSXMgU2FpZCB0byBIYXZlIFRvcnR1cmVkIGFuIEFtZXJpY2FuIENpdGl6ZW4KV2UgaGFkIGEgc3VtbWVyIGpvYiBwYWludGluZyBhbmQgcmVwYWlyaW5nIGRvcm0gcm9vbXMuIApQbGFuIHlvdXIgY2VsZWJyYXRpb24uIEEgZmV3IHdlZWtzIG9yIGRheXMgYmVmb3JlIHlvdXIgYW5uaXZlcnNhcnksIGl0IHdpbGwgcmVhbGx5IGJlIGhlbHBmdWwgZm9yIHlvdSBpZiB5b3UgZ28gYW5kIHBsYW4gd2hhdCB5b3UgYXJlIGdvaW5nIHRvIGRvIGFoZWFkIG9mIHRpbWUuIFJlc2VydmUgc29tZSB0aWNrZXRzIHRvIHRoZSBldmVudHMgdGhhdCB5b3Ugd291bGQgbGlrZSB0byBhdHRlbmQsIGNhbGwgaW4gYW5kIHJlc2VydmUgc2VhdHMgYXQgeW91ciBmYXZvcml0ZSByZXN0YXVyYW50LCBldGMuIE1ha2UgYSBkcmFmdCBvZiB0aGUgdGhpbmdzIHRoYXQgeW91IHBsYW4gdG8gZG8gd2hlbiB0aGUgZGF5IGNvbWVzLgpUbyBwYXJhcGhyYXNlIHRoZSBvbGQgc2F3IGFib3V0IHN1Y2tlcnMgYXQgYSBwb2tlciB0YWJsZTogSWYgeW91IGNhbiBzcG90IHRoZSBzbmVha3kgZ29zc2lwIGF0IHRoZSBvZmZpY2UsIGl0IHByb2JhYmx5IHlvdS4gQnV0IHlvdSBwcm9iYWJseSBzaG91bGRuIGJlIGxvb2tpbmcgZm9yIGhpbSBvciBoZXIgYXQgYWxsLiBUaGF0IGlzLCBwZW9wbGUgd2hvIHRyeSB0byBmZXJyZXQgb3V0IHdvcmtwbGFjZSBlbmVtaWVzIGFyZSBsaWtlbHkgdG8gY3JlYXRlIHNvbWUgdGhhdCBkaWRuIGV4aXN0IGJlZm9yZSwgYXQgbGVhc3QgaW4gcGFydCBiZWNhdXNlIHRoZWlyIG93biBlYXZlc2Ryb3BwaW5nLCBzbm9vcGluZyBhbmQgZ29zc2lwaW5nIHNldHMgY29sbGVhZ3VlcyB0byB0YWxraW5nIGFib3V0IHRoZW0uIApCdXQgcHJlc2lkaW5nIGp1ZGdlIEFuZHJldyBDb2xlZmF4LCB3aG8gaGFkIHByZXZpb3VzbHkgb25seSBzcG9rZW4gb2YgamFpbCB0aW1lIGZvciBIYXJyb2QsIHNhaWQgcHV0dGluZyB0aGUgNTEgeWVhciBvbGQgYmVoaW5kIGJhcnMgd291bGQgYmUgYSBtaXN0YWtlIHdoZW4gY29uc2lkZXJpbmcgdGhhdCBoZXIgZ2FtYmxpbmcgYWRkaWN0aW9uIHdhcyBhIGRpcmVjdCByZXN1bHQgb2YgdGhlIHVudHJlYXRlZCBwc3ljaG9sb2dpY2FsIHRyYXVtYSBmcm9tIGVhcmxpZXIgaW4gaGVyIGxpZmUsIGZvciB3aGljaCBzaGUgd2FzIG5vdyBnZXR0aW5nIHByb2Zlc3Npb25hbCBoZWxwLgpJIGRvbid0IHVuZGVyc3RhbmQgdGhlIFNXRVJGIHRoaW5nIHRob3VnaC4gClBlcm8gZW4gZ2VuZXJhbCBlc3RveSBkZSBhY3VlcmRvLiAKRGl2ZXJzZSwgY2FzdWFsaXNoIGJvYXJkIGdhbWluZyBpbiBBdXN0aW4gb3IgTmV3IFlvcmsKVml0YW1pbiBEIGlzIGtub3duIHRvIGhlbHAgdGhlIGJvZHkgYWJzb3JiIGNhbGNpdW0sIGFuZCBpdCBwbGF5cyBhIHJvbGUgaW4gYm9uZSBoZWFsdGguIEFsc28sIHZpdGFtaW4gRCByZWNlcHRvcnMgYXJlIGxvY2F0ZWQgb24gdGhlIGZhc3QgdHdpdGNoIG11c2NsZSBmaWJlcnMsIHdoaWNoIGFyZSB0aGUgZmlyc3QgdG8gcmVzcG9uZCBpbiBhIGZhbGwuWzE4XSBJdCBpcyB0aGVvcml6ZWQgdGhhdCB2aXRhbWluIEQgbWF5IGluY3JlYXNlIG11c2NsZSBzdHJlbmd0aCwgdGhlcmVieSBwcmV2ZW50aW5nIGZhbGxzLls1XSBNYW55IHN0dWRpZXMgaGF2ZSBzaG93biBhbiBhc3NvY2lhdGlvbiBiZXR3ZWVuIGxvdyB2aXRhbWluIEQgY29uY2VudHJhdGlvbnMgYW5kIGFuIGluY3JlYXNlZCByaXNrIG9mIGZyYWN0dXJlcyBhbmQgZmFsbHMgaW4gb2xkZXIgYWR1bHRzLi4gClRoZSBtb3N0IGltcG9ydGFudCBjcml0ZXJpb24gaXMgdGhlIGVudGl0eSB0aGF0IG9wZXJhdGVzIHRoZSBBdXN0cmlhbiBvbmxpbmUgY2FzaW5vLiBJZiB0aGUgb3duZXIgaXMgYWJvdmUgYm9hcmQgdGhlbiBldmVyeXRoaW5nIGVsc2Ugc2hvdWxkIGZvbGxvdy4gSWYgeW91IGhhdmUgbGlrZWQgb25lIG9ubGluZSBjYXNpbm8sIHRoZW4gdGhlIG90aGVyIGJyYW5kcyBmcm9tIHRoZSBzYW1lIGdyb3VwIHdpbGwgYmUgd29ydGggbG9va2luZyBhdC4gClRoYXQgc2hvd3MgdGhhdCB5b3Ugd2FudCB0byBzdGlsbCBhY2NvbXBsaXNoIHRoaW5ncy4gCkhvd2V2ZXIsIGl0IHdhcyB0aGUgNS4wIHZlcnNpb24gdGhhdCBwaXF1ZWQgSmltIFRyZWxpdmluZyBpbnRlcmVzdC4uIApXZSBjYW4gYWxsICJjZWxlYnJhdGUiIHdpdGggYSBiaWcgd2hpdGUgd2VkZGluZyAoYW5kIHRoZSBjeW5pY2FsIHVuZGVyc3RhbmRpbmcgdGhhdCB5b3UgY2FuIGdldCBhIGxvdCBmdXJ0aGVyIGluIHRoZSBBbWVyaWNhbiBwb2xpdGljYWwgc3lzdGVtIGJ5IHB1c2hpbmcgYSBuYXJyb3csIHNwZWNpYWwgaW50ZXJlc3QgYWdlbmRhIHRoYW4gYW55dGhpbmcgYXMgdHJ1bHkgcmV2b2x1dGlvbmFyeSBhcyBnYXkgbGliZXJhdGlvbikuLiAKSXQgZmVlbHMgbGlrZSBwbGF5aW5nIGEgdmlkZW8gZ2FtZSBhbGwgZGF5IHdoaWNoIGlzIGdyZWF0LiBGb3IgbWUgbGl2ZSBwb2tlciBmZWVscyBsaWtlIHdvcmsgdW5sZXNzIEkgdHJhdmVsaW5nIGFuZCBwbGF5aW5nIGluIGEgbmV3IHBsYWNlLi4gClRoZW4gQ292ZW4gd2lsbCBob3N0IGEgc2VyaWVzIG9mIHdvcmtzaG9wcyBhbmQgZmVlZGJhY2sgc2Vzc2lvbnMgd2hlcmUgcGVvcGxlIHdpbGwgc2hhcmUgZXhwZXJpZW5jZXMgYW5kIHJlc291cmNlcywgYW5kIGdpdmUgYWR2aWNlLiAKSGlzIHJlZnVzYWwgdG8gcmVsZWFzZSBoaXMgdGF4ZXMuICAgTm8sIGhlIGRpZG4gSGUgcmVsZWFzZWQgYSBzdW1tYXJ5IHBhZ2UgZm9yIGhpcyAyMDE0IHJldHVybi4gSGUgbmVlZHMgdG8gcmVsZWFzZSB0aGUgbGFzdCAxMCB5ZWFycywgcGVyaW9kLiBPbmNlIGFnYWluLCBzaG91bGRuIGhlIGJlIGhlbGQgdG8gdGhlIHNhbWUgc3RhbmRhcmRzIHRoYXQgd2UgZGVtYW5kIGZyb20gVHJ1bXA/CllvdSBzaG91bGQgc3RhcnQgb2ZmIHdpdGggc29tZSBvbmxpbmUgcG9rZXIgYW5kIHNlZSBpZiB5b3UgY2FuIHdpbiBzb21lIG1vbmV5IG9uIHRoZXJlIGFsc28gZW50ZXIgYSBsb3Qgb2Ygc2F0ZWxsaXRlcy4gSWYgeW91ciBnb29kIGVub3VnaCB0byB3aW4gYW5kIGdldCBhY2NlcHRlZCBpbnRvIGEgcmVhbCB0b3VybmFtZW50IHRoZW4geW91IHNob3VsZCBiZSB3ZWxsIG9uIHlvdXIgd2F5LiAKUHJvZmVzc2lvbmFsIFBva2VyIFBsYXllciBTa2lsbHMKTWFyeSBidHcgLCBubyBlbGVjdHJpY2l0eSAoa2Vyb3NlbmUgbGFtcHMpIG9yIHJ1bm5pbmcgd2F0ZXIgKHNwcmluZ3MpIGFuZCBuZXZlciBvbmNlIGhhdGVkIG15IGxpZmUgKG9mIGNvdXJzZSBub3cgaXQgY2hhbmdlZCBhIHNtaWRnZSBhbmQgdGhleSBjYW4gaGF2ZSB0aG9zZSBpZiB0aGF0IHdhc24gdG8gcGF5IGJ1dCBhIGxvdCBvZiBwZW9wbGUgc3RpbGwgZG9uIGFuZCBsaXZlIG9rKS4gTXkgQW1lcmljYW4gYW5kIEJyaXRpc2ggZmFtaWx5IGFsd2F5cyBzYXkgdGhleSBoYXZlIHRoZSBncmVhdGVzdCB0aW1lIGJlaW5nIGFibGUgdG8gZG8gYm90aCB0aGUgcmVzb3J0IHN0dWZmIHdoZW4gdGhleSBmZWVsIGxpa2UgaXQgYnV0IGFsc28gZ2V0dGluZyB0aGUgcmVhbC4gV2hlbiBJIGhhZCBhIGtpZCBJIG1hZGUgc3VyZSBoZSBleHBlcmllbmNlZCB0aGF0IGV2ZXJ5IHN1bW1lciBob2xpZGF5LiAKQXMgYSBtYXR0ZXIgb2YgZmFjdCB0aGF0cyBwcmV0dHkgbXVjaCB3aGF0IHBwbCBlbmQgdXAgZG9pbmcgaGFsZiB0aGUgdGltZSBhbnl3YXkuIFRoZSBxdWFsaXR5IG9mIGFydCBpc250IGdvaW5nIHRvIGRlY2xpbmUsIHRoYXRzIGp1c3QgaXJyYXRpb25hbCBmZWFyIG1vbmdlcmluZy4gRmlyc3QsIHF1YWxpdHkgYW5kIHdoYXQgYXJ0IGlzIGdvb2QgdnMgYmFkIGlzIGNvbXBsZXRlbHkgc3ViamVjdGl2ZS4gCk9uZSB0ZWNobmlxdWUgZm9yIGRvaW5nIHRoaXMgdXNlcyBhbWluZSBnYXMgdHJlYXRpbmcuIFRoaXMgcHVyaWZpZWQgYmlvZ2FzIGlzIGFsc28gY2FsbGVkIGJpb21ldGhhbmUuIApJIHNheSB0aGlzLCBhZ2FpbiwgYXMgc29tZW9uZSB3aG8gY2Fubm90IHBheSBhdHRlbnRpb24gdG8gYW55IG9uZSBpc3N1ZSBmb3IgbW9yZSB0aGFuIDUgbWludXRlcyBteXNlbGY6Ckkga2VlcCBmZWVsaW5nIG1vcmUgYW5kIG1vcmUgbGlrZSBFX1NfUyBoYWQgdG8gYmUgcGFydCBvZiBhIGxlc3MgdGhhbiBzdWNjZXNzZnVsIFJ1c3NpYW4gcHN5b3AgdG8gZGl2aWRlIHRoZSBsZWZ0LiBUaGV5IHVzZSBkZWJ1bmtlZCBSZXB1YmxpY2FuIHNtZWFycyBsaWtlIHRoZSByZWQgQXVkaSBsaWUgb3IgY3Jvd2luZyBhYm91dCBCZXJuaWUgb3duaW5nIDMgYXZlcmFnZSBob21lcy4gVGhleSB0YWxrIGxpa2UgUmVwdWJsaWNhbiBtZWF0aGVhZHMgd2l0aCBzaW1pbGFyIHZvY2FidWxhcnkgYW5kIHRvbmUuIApUaHVzIG9uZSBtYXkgYmUgcmVmZXJyZWQgdG8gYXMgYSBtYWxlIGVzY29ydCwgZ2lnb2xvIChpbXBseWluZyBmZW1hbGUgY3VzdG9tZXJzKSwgcmVudCBib3ksIGh1c3RsZXIgKG1vcmUgY29tbW9uIGZvciB0aG9zZSBzb2xpY2l0aW5nIGluIHB1YmxpYyBwbGFjZXMpLCBtb2RlbCwgb3IgbWFzc2V1ci5bM10gQSBtYW4gd2hvIGRvZXMgbm90IHJlZ2FyZCBoaW1zZWxmIGFzIGdheSwgYnV0IHdobyBoYXMgc2V4IHdpdGggbWFsZSBjbGllbnRzIGZvciBtb25leSwgaXMgc29tZXRpbWVzIGNhbGxlZCBnYXkgZm9yIHBheSBvciB0cmFkZS4gCkJhc2luZyByZXF1aXJlcyB0aGUgaW5kaXZpZHVhbCB0byAic3RhY2siIGhpcyBvciBoZXIgYm9uZXMgYW5kIHJlbWFpbiBzdGVhZHkgdG8gc3VwcG9ydCB0aGUgZmx5ZXIuMy4gCkZvciB0aG9zZSB3aG8gaGF2ZW4ndCBiZWVuIHBheWluZyBhdHRlbnRpb24sIHRoZSBhaXJwb3J0J3MgcGxlbnRpZnVsIFNvbWFsaSBjYWIgZHJpdmluZyBmbGVldCBpcyBhc2tpbmcgZm9yIHRoZSByaWdodCB0byByZWZ1c2UgY3VzdG9tZXJzIHdobyB3YW50IHRvIGJyaW5nIGFsY29ob2wgYWxvbmcgZm9yIHRoZSByaWRlLiBUaGUgTXVzbGltcywgbW9zdCBvZiB3aG9tIGFyZSBTb21hbGksIHNheSBpdCB2aW9sYXRlcyB0aGVpciByZWxpZ2lvbiwgd2hpY2ggZXhwbGljaXRseSBmb3JiaWRzIEphbWVzb24sIEphY2sgRGFuaWVscywgYW5kIG90aGVyIHRhc3R5IGxpcXVvciBwcm9kdWN0cy4KSSBtb3N0bHkgZ3Jvd24gb3V0IG9mIHRoZSBoZWF2eSBtZXRhbCBwaGFzZSwgYnV0IHRoYXQgdHlwZSBvZiBsaW1pdGxlc3MgZHJ1bW1pbmcgaXMgYWx3YXlzIGdvaW5nIHRvIGJlIGNvb2wgdG8gbWUuIFBlcmN1c3Npb24gaXMgdGhlIGZvdW5kYXRpb24gb2YgYWxsIG11c2ljLiBJdHMgcHJpbWFsIGFuZCByYXcgYW5kIGJlYXV0aWZ1bC4gSGl0IHNvbWV0aGluZyB3aXRoIHNvbWV0aGluZyBlbHNlLiBTbGlwa25vdCBiYXNoaW5nIHRoaW5ncyB3aXRoIGJhdHMgaXMgbm8gbW9yZSBzdHVwaWQgdGhhbiB0cmliYWwgZHJ1bXMgYW5kIGZvb3Qgc3RvbXBpbmcsIHdoaWNoIGlzIHRvIHNheSwgbm90IHN0dXBpZCBhdCBhbGwuClllcyBhbmQgSSBhbHdheXMgZG8gbXkgYmVzdCBwcmFjdGljZSB0aGVzZSB0aGluZ3Mgb2ZmbGluZSwgSSBqdXN0IHBvaW50aW5nIG91dCB0aGF0IHRoZSBjb21tdW5pdHkgaGVyZSBpcyBwYXJ0IG9mIHRoZSBwcm9ibGVtIG9mIHJpZ2h0IHdpbmcgcmFkaWNhbGlzbS4gClZhY2NpbmVzIGluIHRoZSBVUyBhcmUgYWxsIGFjZWxsdWxhciBvciBhdHRlbnVhdGVkLCBtZWFuaW5nIHRoZXkgYXJlIGluY2FwYWJsZSBvZiByZXBsaWNhdGlvbiBvZiBhbnkgc29ydC4gClBsdXMsIHdlIHdpbGwgYmUgZG9pbmcgZXZlbnRzLCBkaXJlY3QgbWFya2V0aW5nLCBhbmQgdGhlIEludGVybmV0IGFzIHdlbGwuIi4gCkNob29zZSBhIGNvdXBsZSBvZiBwbGFjZXMsIHN1Y2ggYXMgeW91ciBjaGVzdCBhbmQgbmVjayBhbmQgd2hlbiBhcHBseWluZywgaG9sZCB0aGUgYm90dGxlIGEgZ29vZCAxMCBpbmNoZXMgKDI1LjQgY2VudGltZXRlcnMpIGF3YXkgZnJvbSB5b3VyIGJvZHkgd2hlbiB5b3Ugc3ByYXkuIApKYW1lcyBEaWNrLCBTYXR1cmRheSBldmVuaW5nLiAKRWluZSBBbmdhYmUgcHJvIFBlcnNvbiwgd2llIHZpZWwgUHJvemVudCBkZXMgRHVyY2hzY2huaXR0c2dlaGFsdHMgc2llIGZyIGlocmVuIEJlcnVmIGluIGlocmVtIEJldHJpZWIgYmVrb21tZW4/IElzdCBkYW5uIGFub255bWlzaWVydGVyLCBhYmVyIGV2dGwuIApUaGlzIGlzIGxpa2VseSBiZWNhdXNlIGluIGEgaGVhbHRoeSBib2R5LCB2aXRhbWluIEQgd2lsbCBpbnRlcmFjdCB3aXRoIGV2ZXJ5IGNlbGwsIHN1cHBvcnRpbmcgZW5lcmd5IHVzZSBpbiB0aGUgY2VsbHMuCiJHZW9yZ2UgQnVzaCBvZiB0aGUgc3RhdGUgb2YgVGV4YXMsIiBzYWlkIEdlb3JnZSBCdXNoIG9mIHRoZSBzdGF0ZSBvZiBUZXhhcywgcHJvYmFibHkgdGhpbmtpbmcsIFdobz8gTWU/CkFsc28sIGZyZXF1ZW5jeSBpcyBpbXBvcnRhbnQuIElmIG9uZSBvZiBvdXIgYXRobGV0ZXMgaXMgc3dpbW1pbmcgMTBrIHBlciB3ZWVrIEkgd291bGQgcmF0aGVyIGhhdmUgdGhlbSBpbiB0aGUgcG9vbCA0IG9yIDV4IGhpdHRpbmcgc2hvcnRlciBkaXN0YW5jZXMgd2l0aCBvbmUgbG9uZyBkYXkgdGhhbiB0d2ljZSBhdCA1ayB5YXJkcyBlYWNoIGRheS4uIApVbmZvcnR1bmF0ZWx5IGhpcyB0ZXJtcyBhcmVuIHZlcnkgd2VsbCBkZWZpbmVkIHdhcyBoZSBhZGRyZXNzaW5nIHRoZSBjb2FsIHByb2R1Y3Rpb24gb2YgUHJ1c3NpYSBvciBFdXJvcGUgb3IgdGhlIHdvcmxkIHdoZW4gZGlzY3Vzc2luZyAidGhlIHF1YW50aXR5IG9mIGNvYWwgZHVnIGluIDE4NTciPyBXaGVuIHN0YXRpbmcgInRoZSBsYW5kcyBmcm9tIHdoaWNoIHRoZSBjb2FsIGlzIHByb2N1cmVkIiBtYXkgYmUgOCwwMDAgc3F1YXJlIG1pbGVzLCBkaWQgdGhhdCBtZWFuIGFuIDgsMDAwIHNxdWFyZSBtaWxlIHN3YXRoIG9mIEdlcm1hbnksIG9yIDgsMDAwIHNxdWFyZSBtaWxlcyBvZiBtaW5lZCBjb2FsIGluIEV1cm9wZSwgb3IgZXRjLj8gTmV3IEhhbXBzaGlyZSBpcyBhYm91dCA4LDAwMCBzcXVhcmUgbWlsZXMsIGFuZCB0aGUgZW50aXJlIFBydXNzaWFuIE1vbmFyY2h5IHdhcyBhYm91dCAxMTAsMDAwIHNxdWFyZSBtaWxlcywgc28gbWF5YmUgdGhhdCBtZWFudCBwYWNrZXRzIG9mIG1pbmluZyBzdXJmYWNlcyBoZXJlIGFuZCB0aGVyZT8gZG9uIGtub3cuIApJZiB5b3UgbWlzbWFuYWdlIGRlZ2VuZXJhdGl2ZSB0ZW5kaW5vcGF0aHkgaW4gYW4gTkJBIGF0aGxldGUsIGVzcGVjaWFsbHkgcXVhZHJpY2VwcyB0ZW5kaW5vc2lzLCB5b3UgY2FuIGhhdmUgdmVyeSBiYWQgdGhpbmdzIGhhcHBlbi4gQW4gZXhhbXBsZSBvZiB0aGlzIGlzIEJsYWtlIEdyaWZmaW4uIFRoZSBxdWFkIGluanVyeSB0aGF0IGtlcHQgQmxha2Ugc2lkZWxpbmVkIHRoZSBtYWpvcml0eSBvZiB0aGUgMjAxNSAyMDE2IHNlYXNvbiBhbmQgcGxheW9mZnMgd2FzIGRlZ2VuZXJhdGl2ZSB0ZW5kaW5vcGF0aHkgb2YgdGhlIHF1YWRyaWNlcHMgdGhhdCB3YXMgbWlzbWFuYWdlZCBhbmQgbGVkIHRvIGEgcGFydGlhbCBydXB0dXJlIG9mIHRoZSBxdWFkcmljZXBzIHRlbmRvbi4gCk15IHNpc3RlciBpcyAyIHllYXJzIG9sZGVyIHRoYW4gbWUgc28gN2lzaC4gCkNyIE1vcmFuIHNhaWQgdGhlIGNvdW5jaWwgd2FzICcnZGVzcGVyYXRlJycuCkl0J3Mgc29tZXRoaW5nIHRoYXQgYW55b25lIGNhbiBlYXNpbHkgYnVpbGQgaW50byBoaXMgb3IgaGVyIGRhaWx5IGxpZmUuIApUaGUgbGVhZGVycyBpbiB0aGlzIGZpZWxkIGFyZSBhbHdheXMgdGhpbmtpbmcgYWJvdXQgcG9rZXIgYW5kIHJlbGF0ZWQgcG9rZXIgY29sbGVjdGlibGVzIG5vd2FkYXlzLiBQb2tlciBmYW5zIGhhdmUgYWxzbyB0dXJuZWQgaW50byBncmVhdCBjb2xsZWN0b3JzIG9mIHBva2VyIHJlbGF0ZWQgcGllY2VzLiAKQ2FuIGdpdmUgYXdheSBhIDEyJSByb3lhbHR5IHNvIHdlIGtuZXcgd2UgY291bGRuIGRvIGEgZGVhbCB3aXRoIGFsbCBvZiB0aGVtLiBUaGV5IGFyZSBjbG9zZSB0byBzaWduaW5nIHdpdGggSmltIFRyZWxpdmluZyBhbmQgcmUgZW5nYWdlZCBNci4gYW5kIHRoYXQgd2hlcmUgd2Ugd2FudCB0byBnby4gQWNhZGVteSBsYXVuY2hlZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhIGZldyBtb250aHMgYWdvIGFuZCByZXNwb25zZSBoYXMgYmVlbiBzdHJvbmcuIEl0IHByb29mIHRoZSBhcHBldGl0ZSBmb3Igd2hhdCB3ZSBkb2luZyBpcyB0aGVyZS4gRGVzcGl0ZSB0aGUgcGFydG5lcnMgd29ya2luZyBvbmx5IHBhcnQgdGltZSBvbiB0aGUgY29tcGFueSwgc2FsZXMgZm9yIDIwMTIgd2VyZSBhYm91dCAkNTAwLDAwMC4gcHJvamVjdCB0aHJlZSB0aW1lcyB0aGF0IHRoaXMgeWVhciwgTXIuIENvY2hyYW4gc2F5cy4KUGVvcGxlIGRlY2lkZSB0aGV5IHdhbnQgdG8gYmVsaWV2ZSBzb21ldGhpbmcgYmVjYXVzZSBpdCBzZWR1Y3RpdmUgdG8gdGhlbSAocGVyaGFwcyB0aGV5IGZlZWwgcG93ZXJsZXNzKSwgb3Igc3VwcG9ydCBhIHBlcnNvbiBiZWNhdXNlIHRoZXkgbGlrZSBoaW0sIGFuZCB3aGVuIGNvbmZyb250ZWQgd2l0aCBjbGVhciBldmlkZW5jZSB0aGF0IHRob3NlIGJlbGllZnMgYXJlIGFic29sdXRlbHkgbm90IHRydWUsIG9yIHRoYXQgdGhhdCBwZXJzb24gaXMgYSBwaWVjZSBvZiBzaGl0LCB0aGV5IGNob29zZSB0byBzdGF5IHRoZSBjb3Vyc2UgYmVjYXVzZSB0aGF0IHdoYXQgdGhleSB3YW50LiAKSGUgZW5yaWNoZWQgb3VyIGxpdmVzIGV2ZXJ5ZGF5LiBUb255LCB0aGF0IHNtaWxlIG9mIHlvdXJzIHdpbGwgYWx3YXlzIGJlIHdpdGggdXMuIEhhbGxlanRuYSBsYW1wYSBzdGFtcGEhLiAKVGhhdCBwYXJ0IG9mIGl0LiBBbHRob3VnaCB3YWl0aW5nIHVudGlsIHRoZSBQcmVzaWRlbnRpYWwgZWxlY3Rpb24gdG8gdm90ZSBpcyBqdXN0IGFib3V0IGFzIHVzZWxlc3MgYXMgbm90IHZvdGluZyBhdCBhbGwgaW4gbWFueSBjYXNlcy4gWW91IGhhdmUgdG8gZm9sbG93IHRoZSB3aG9sZSBjYW1wYWlnbiwgZnJvbSBiZWdpbm5pbmcgdG8gZW5kLCBhbHNvIHBheWluZyBhdHRlbnRpb24gdG8gY29uZ3Jlc3Npb25hbCBhbmQgbG9jYWwgZWxlY3Rpb25zLiAKV2UgbGVmdCBoaW0gd2l0aCBubyBpbmNpZGVudCwgYnV0IGl0IGdvdCBtZSB0aGlua2luZy4gVGhhdCdzIGhhcHBlbmVkIGFsbCBvZiB0d28gdGltZXMgdG8gbWUsIGJ1dCBiZWluZyBhIHdvbWFuIGlzIHByb2JhYmx5IGVxdWl2YWxlbnQgdG8gaGF2aW5nIHNvbWVvbmUgdHJ5IHRoYXQgc2hpdCBldmVyeSBkYXkuIApUaGUgdmlsbGFnZXJzIGdhbmdlZCB1cCBvbiBoaW0gYW5kIHN0b25lZCBoaW0gaW4gdGhlIHN0cmVldC4gTWVuLCB3b21lbiBhbmQgY2hpbGRyZW4gYWxsIHBhcnRpY2lwYXRlZC4uIApPbiB0aGUgb3RoZXIgaGFuZCwgc29tZSBkZW50aXN0cyBvZmZlciBibGVhY2hpbmcgbWV0aG9kcyBmb3IgdGVldGggd2hpdGVuaW5nLiBZb3UgY2FuIGFjdHVhbGx5IHJlc3RvcmUgeW91ciB0ZWV0aCB3aGl0ZSBjb2xvciB0aHJvdWdoIGxhc2VyIHdoaXRlbmluZyBhbmQgYXBwbGljYXRpb24gb2YgY29zbWV0aWMgdGVldGggY29sb3JpbmcuIApCdXQgSmFja3NvbiBoYWQgYSBjb21wbGV0ZWx5IG5ldyB2aXNpb24gZm9yIHRoaXMgc3RlcDogd2FzIGdvaW5nIHRvIHdhbGsgYmFja3dhcmQgYW5kIGZvcndhcmQgYXQgdGhlIHNhbWUgdGltZSwgbGlrZSB3YWxraW5nIG9uIHRoZSBtb29uLCBoZSB3cm90ZS4gVGhlIG5pZ2h0IGJlZm9yZSB0aGUgMjUgcGVyZm9ybWFuY2UsIEphY2tzb24gd29ya2VkIHRoZSBtb3ZlIGVuZGxlc3NseSBpbiB0aGUga2l0Y2hlbiBvZiBoaXMgcGFyZW50cyBob3VzZS4ga2luZCBvZiBsZXQgdGhlIGRhbmNlIGNyZWF0ZSBpdHNlbGYsIGhlIHdyb3RlLiBIZSBjb21iaW5lZCBhIG51bWJlciBvZiBkaWZmZXJlbnQgZWxlbWVudHMgdG8gZm9ybSBzb21ldGhpbmcgbm9ib2R5IGhhZCBldmVyIHNlZW4gYmVmb3JlIGEgY29oZXNpdmUgZGFuY2UgdGhhdCB3YXMgYWxsIGhpcyBvd24sIGFuZCB3aXRoIHdoaWNoIGhlIHdpbGwgZm9yZXZlciBiZSBpZGVudGlmaWVkLgo2N3RoIFN0LjsgMiBFLiAKWW91IGFyZSBnaXZpbmcgdGhlIGltcHJlc3Npb24gdGhhdCB5b3Ugd291bGQgcmF0aGVyIGJlIGVsc2V3aGVyZS4gRG8gbm90IGxlYW4gb24gZGVza3MsIHdhbGxzLCBvciBjaGFpcnMuIFlvdSBzaG91bGQgYXBwZWFyIHN0cm9uZyBlbm91Z2ggdG8gc3RhbmQgYWxvbmUgb24gdHdvIGZlZXQgICB1bnN1cHBvcnRlZC4uIApJIHVzZWQgdG8gYmUgdGhlIGJpZ2dlc3QgY29sbGVnZSBzcG9ydHMgZmFuIGFzIGEgYm95LCB0aGF0IHNoaXQgZW5kZWQgcmlnaHQgdGhlbiBhbmQgdGhlcmUuIEknbSBzdGlsbCBhIG1hc3NpdmUgZmFuIG9mIHRoZSBhdGhsZXRlcyB0aG91Z2guIApNb250aHMgYWdvIDMgd2hpdGUgY2hpY2tzIGF0IHdvcmsgc3RhcnRlZCByYW5kb21seSB0YWxraW5nIGFib3V0IGEgd2hpdGUgY2VsZWIgd2hvIGhhZCAoeWV0IGFnYWluKSBtYWRlIHJhY2lzdCBjb21tZW50cyBpbiB0aGUgbWVkaWEgYWdhaW5zdCBibGFja3MgYW5kIHRoZSBiYWNrbGFzaCB3YXMgZWZmZWN0aW5nIGhpcyBidXNpbmVzcyAoYSBodWdlIG5hdGlvbmFsIGZyYW5jaGlzZSB5b3UgZGVmaW5pdGVseSByZWNvZ25pemUgdGhlIG5hbWUgb2YpLiAKQmVzdCBQbGFjZXMgdG8gV29yayAyMDE3ClRoZXknZCBwcmVmZXIgbm90IHRvIGtub3cuIApFeGlzdC4gVGhleSByZWFjdCB0byBoaXN0b3JpY2FsIHByb2Nlc3NlcyBhbmQgYWRhcHQgdG8gdGhlbSBvdmVyIHRpbWUuIApBbmQgYWdhaW5zdCBzdW1tZXIsIGluIHNwcmluZ2luZyB0aW1lLCB3aGVuIGhpcyBmZWF0aGVycyBzcHJpbmcgYWdhaW4sIGhlIGNvbWV0aCBvdXQgb2YgaGlzIGhvbGUgaW4gdGhlIHdoaWNoIGhlIHdhcyBoaWQsIGFuZCBzZWVrZXRoIGNvbnZlbmFibGUgcGxhY2UgYW5kIHN0ZWFkIGZvciB0byBicmVlZCBpbi4gVGhlIFR1cnRsZSBsYXlldGggZWdncyB0d2ljZSBpbiBzcHJpbmdpbmcgdGltZSwgYW5kIG5vdCB0aGUgdGhpcmQgdGltZSwgYnV0IGlmIHRoZSBmaXJzdCBlZ2dzIGJlIGNvcnJ1cHQuIApUaGF0IGhlciBsb3ZlZCBvbmVzIGhhdmUgdG8gZmVlbCB0aGUgcGFpbiBvZiBoZXIgcGFzc2luZy4gCkkgaGF2ZSBiZWVuIG9uIHlvdSB0dWJlIGxlYXJuaW5nIGZyb20gcGVvcGxlIGFzIHdlbGwuIEFzIHlvdSBhbGwgcmVjYWxsIG15IHNjYXJ5IGNoaWNrZW4gZnJvbSBqdXN0IGxvb2tpbmcgYXQgdmFyaW91cyBwaWN0dXJlcy4gCkFjY29yZGluZyB0byBhYm92ZSBkZWZpbml0aW9ucyBpdCBpcyBjbGVhciB0aGF0IGluIGV2ZXJ5IGluc3RhbmNlIG9mIGNvbW11bmljYXRpb24gdGhlcmUgc2hvdWxkIGJlIGEgbWVzc2FnZSB3aGljaCBiZWluZyB0cmFuc2ZlcnJlZCB0byB0aGUgcmVjZWl2ZXIuIFdoZW4gY29tZXMgdG8gbWVzc2FnZSBpdCBuZWVkIG5vdCBiZSBhIHdvcmRzIGhhdmluZyBhIHBhcnRpY3VsYXIgbGFuZ3VhZ2UuIFNvIG1heSBiZSBpbiB0aGUgZm9ybSBvZiBzaWduIHdoaWNoIGNhbiBiZSB1bmRlcnN0b29kIGJ5IHRoZSByZWNlaXZlci4gVGhlIG1lc3NhZ2UgaXMgbm90IG1lYW50IGZvciBvbmUgcGVyc29uLiBTbyB0aGVyZSBzaG91bGQgYmUgdHdvIHBhcnRpZXMgd2hlcmUgb25lIHBhcnR5IGFjdCBhcyBhIHNlbmRlciBhbmQgb3RoZXIgcGFydHkgYWN0IGFzIGEgcmVjZWl2ZXIuCkl0J3MgaW4gZGVjbGluZSBhbmQgaXQgaGFzIHZlcnkgbGl0dGxlIGNoYW5jZSBvZiBnZXR0aW5nIHJlIGVsZWN0ZWQuIApHYXMgbWlsZWFnZT8gRWgsIHdobyBjYXJlcywgc2luZ2xlIGRpZ2l0cyBpbiB0b3duLCBidXQgdGhlICQzMDAgb2YgbWFpbnRlbmFuY2UgaW4gOCBtb250aHMgd2FzIG5vdGhpbmcuIEkgbG92ZSB0aGUgOTBzIHN0dWZmLi4gClRoZW4gSSBzYXkgb25jZSB5b3Ugc2VlIG5ldyBncm93dGggb24gaGltLCB5b3UgY2FuIGN1dCB0aGUgc3RlbXMgd2hlcmUgaXQgbG9zdCBhIGxvdCBvZiBsZWF2ZXMgYW5kIHB1dCB0aGUgdGlwcyBiYWNrIGluIHRoZSBwb3QgdG8gZmlsbCBvdXQgdGhlIHBvdC4gCkkgYWN0dWFsbHkgY2hlY2tlZCBvdXQgYSBiaXQgb25saW5lIGFuZCBhcHBhcmVudGx5IHRoZSA3OTAwIHNlcmllcyBpcyAod2FzKSByZWFsbHkgYmFkIHdpdGggdGhpcy4gQXBwYXJlbnRseSB3aGF0IHdhcyBoYXBwZW5pbmcgd2FzIHRoYXQgNzkwMCBjYXJkcyB3b3VsZCB0dXJuIG9mZiB0aGUgbW9uaXRvciBsaWtlIG5vcm1hbCBhbmQgdGhlbiBhZnRlciB0aGV5IGRpZCBpdCwgdGhlIGNhcmQgd2VudCBpbnRvIGEgcmVhbGx5IGxvdyBwb3dlciBzdGF0ZSB3aXRoIHBvd2VycGxheS4gCldpdGggdGhyZWUgcm9vZnRvcCBzaXRlcyB1cCBhbmQgcnVubmluZywgTGF1cmVuIFJhdGhtZWxsLCBncmVlbmhvdXNlIGRpcmVjdG9yIGFuZCBjbyBmb3VuZGVyLCBzYXlzIHRoZXkgc29vbiBiZSByZWFkeSB0byB0YWtlIHRoZWlyIGNvbmNlcHQgb24gdGhlIHJvYWQgdG8gb3RoZXIgbWFqb3IgY2l0aWVzIGFjcm9zcyBDYW5hZGEuIHVyYmFuIGFncmljdWx0dXJlIGF0IGl0cyBiZXN0LiBHcm93aW5nIGluIGEgY29udHJvbGxlZCBlbnZpcm9ubWVudCBhbGxvd3MgdXMgdG8gcHJvZHVjZSBjcm9wcyBhbGwgeWVhciByb3VuZCwgY2xvc2VyIHRvIHdoZXJlIHBlb3BsZSBsaXZlLCBpbiBhIHN1c3RhaW5hYmxlIHdheS4gVGhlIGJlYXV0eSBvZiBtb3ZpbmcgdG8gcm9vZnRvcHMgaXMgdGhhdCBubyBuZXcgbGFuZCBpcyByZXF1aXJlZC4KV2hlbiBpdCBjb21lcyB0aW1lIHRvIGxlYXZlLCByZW1lbWJlciB0aGF0IHRoZSBkZWFsZXIgZG9lcyBub3QgaGF2ZSBhY2Nlc3MgdG8gY2FzaCBhdCB0aGUgdGFibGVzLiBUbyBjaGFuZ2UgeW91ciBjaGlwcyBmb3IgY2FzaCwgeW91IG11c3QgZ28gdG8gdGhlIGNhc2lubyBjYXNoaWVyJ3MgYm9vdGguIElmIHlvdSBoYXZlIGEgbG90IG9mIHNtYWxsZXIgZGVub21pbmF0aW9uIGNoaXBzIGFuZCB3aXNoIHRvIGNoYW5nZSBmb3IgbGFyZ2VyIGRlbm9taW5hdGlvbiBjaGlwcyB0byBtYWtlIGl0IGVhc2llciB0byBjYXJyeSB0aGVtIHRvIHRoZSBjYXNoaWVyJ3MgYm9vdGgsIGFzayB0aGUgZGVhbGVyIHRvICJjb2xvciB1cC4iIEhlIG9yIHNoZSB0aGVuIHdpbGwgZ2l2ZSB5b3Ugb25lIGdyZWVuICQyNSBjaGlwIGZvciBmaXZlIHJlZCAkNSBjaGlwcywgb3IgYSBibGFjayAkMTAwIGNoaXAgZm9yIHR3ZW50eSAkNSBjaGlwcywgZm9yIGV4YW1wbGUuClZpc2l0ZWRMYXRlIEphbnVhcnkgMjAxMywgd2Vla2VuZCBuaWdodC4KSXQgd2FzIGZ1bi4gSSBkaWRuIHNrYXRlIG91dGRvb3JzIHZlcnkgbXVjaCwgdGhvdWdoLiBJIHRoaW5rIHRoYXQgc29tZXRoaW5nIEkgbWlzc2VkIG91dCBvbiwgcGxheWluZyB3aXRoIGJ1ZGRpZXMgb24gdGhlIG91dGRvb3Igcmluay4gClRoZXJlIGFsc28gcnVwYSwgYW5vdGhlciBmcnVpdCBvZiBjaXR0YSwgd2hpY2ggaXMgdGhlIGJvdW5kYXJ5IG9mIHRoZSBjb2duaXplZCBvYmplY3QuIFdlIHNheSBhIGNoYWlyIGlzIHNlcGFyYXRlIGZyb20gdGhlIGZsb29yLiAKSSBrbmV3IGV4YWN0bHkgd2hlbiBJIHBpc3NlZCBpdCBvdXQuIApJbiB0aG9zZSBzdXJyZWFsIG1vbWVudHMsIHRoZXkgY2xpbWJlZCB1cCBhIGxhZGRlciB0b3dhcmRzIG15c3RpcXVlIGFuZCBpbW1vcnRhbGl0eS5JbiBhIG11dHVhbCB0cmFkZSBvZmYsIG91ciB0d2lzdGVkIHRoaXJzdCAgY3JhdmluZyBmb3IgYnJ1dGFsIHB1bmNoZXMgYW5kIGFzc2VydGl2ZSBrbm9ja291dHMsIGNvdXBsZWQgd2l0aCB1bnRhbWFibGUgd2FycmlvciBzcGlyaXRzIGxlZnQgZm9yIGdyb3Rlc3F1ZSBzaWdodHMgYXQgdGhlIGVuZCBvZiBnbG9yaW91cyBjYXJlZXJzLCB0aGUgcHJpY2UgdGhleSBwYWlkIGZvciBhIHRyYW5zY2VuZGVudGFsIHN0YXR1cy4gSG93IG1hbnkgbGlrZSBBbGkgY2FuIGNsYWltIEkgZW1ib2RpZWQgY291cmFnZSBhbmQgaW50ZWdyaXR5IFRoZSBlc3NlbmNlIG9mIHRob3NlIHdvcmRzIHBlcm1lYXRlZCBoaXMgcGh5c2ljYWwgZnJhbWUuIApOdW4gbGFzc3QgaWhyIGFsbGVzIGV0d2EgZWluZSBTdHVuZGUgbGFuZyBiZWkgUmF1bXRlbXBlcmF0dXIgZmVzdCB3ZXJkZW4gdW5kIGxlZ3QgZGllIEZvcm1lbiBkYW5hY2ggZnIgZWluZSBoYWxiZSBTdHVuZGUgaW5zIEdlZnJpZXJmYWNoLiAKU2Vjb25kbHksIG5vIG9uZSBoYXMgdGhlIHJpZ2h0IHRvIGEgc3VjY2Vzc2Z1bCBidXNpbmVzcy4gClRoZSBCb3V0aXF1ZSBNYXNzYWdlIFN0b3JlIGluIExvbmdtb250IGlzIGV4cGVjdGVkIHRvIGhhdmUgYSBzb2Z0IG9wZW5pbmcgTWF5IDEwIHdpdGggYSBncmFuZCBvcGVuaW5nIHBsYW5uZWQgZm9yIG1pZCBKdW5lLCBQb3J0ZXIgc2FpZC4KW01dICBbc2NvcmUgaGlkZGVuXSAgc3VibWl0dGVkIDEgbW9udGggYWdvSW5pdGlhbGx5IHRoaXMgcG9zdCB3YXMgbm90IGFwcHJvdmVkLCBidXQgYWZ0ZXIgbW9kIGRpc2N1c3Npb24sIHNpbmNlIGFub3RoZXIgc2ltaWxhciBwb3N0IHdhcyBhcHByb3ZlZCwgd2UgZGVjaWRlZCB0byBhcHByb3ZlIHBvc3RzIHRoYXQgYWltIHRvIHRyeSBhbmQgaGVscCBvdXIgZmVsbG93IG1hc3NhZ2UgdGhlcmFwaXN0cy5TZWxmIGFkdmVydGlzaW5nLCBidXNpbmVzcyBhZHZlcnRpc2luZyBwb3N0cyBhcmVuIGFsbG93ZWQsIHNvIGlmIHlvdSBndXlzIHRoaW5rIGlmIHRoZXJlIGFyZSBzaW1pbGFyIHBvc3RzIHRoYXQgaGF2ZSB2ZXJ5IGhpZ2ggYWdlbmRhIGluIGFkdmVydGlzaW5nIGluc3RlYWQgb2YgdHJ5aW5nIHRvIGdpdmUgYWR2aWNlIGFuZCBoZWxwLCBwbGVhc2UgbGV0IHVzIGtub3cgdGhyb3VnaCB0aGUgcmVwb3J0IGJ1dHRvbiBvciBtZXNzYWdlIHRoZSBtb2RzLltNXSAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb3RoZSBvdGhlciBwb3N0IHdhc24gcHVzaGluZyBwcm9kdWN0cyBidXQgaXQgd2FzIGEgc2VsZiBhZHZlcnRpc2luZyBmb3IgdGhlaXIgb3duIHlvdXR1YmUgY2hhbm5lbC5ib3RoIGFyZSBzaW1pbGFyIGluIGFkdmVydGlzaW5nIHBvc3QsIGhvd2V2ZXIgd2Ugc2VlIHRoYXQgdGhlcmUgaXMgYSBwb3NzaWJpbGl0eSBpdCBjb3VsZCBiZSBiZW5lZmljaWFsIHRvIHZpZXdlcnMuaXQgZG9lcyBoYXZlIDEwIHVwdm90ZXMsIHNvIHNvbWUgcGVvcGxlIGRvIHRoaW5rIGl0IGJlbmVmaWNpYWwud2Ugd2lsbCBrZWVwIGEgZGlzY3Vzc2lvbiBiZXR3ZWVuIHRoZSBtb2RzIGFuZCBkZWNpZGUgaG93IHdlIHNob3VsZCBlbmZvcmNlIHRoaXMgcnVsZSwgaWYgYW4gYWR2ZXJ0aXNpbmcgcG9zdCBpcyBiZW5lZmljaWFsLCB0aGF0IHdlIHNob3VsZCByZW1vdmUgb3Igbm90LjggQml0QmFrZXIgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29JIGhhdmUgYWN0dWFsbHkgZm91bmQgaW4gdGhlIGxhc3QgeWVhciB0aGF0IHNhbHQgcmVhbGx5IGRvZXMgaGF2ZSBhIGRpZmZlcmVudCB0YXN0ZSB0byBpdCB2ZXJzdXMgcGxhaW4gb2xkIHRhYmxlIHNhbHQuIApPbiBhbnkgZmxvcCB5b3UgY29ubmVjdCBiaWcsIGxldCB0aGVtIHNwZXcgaW50byB5b3UuIFByb2JhYmx5IHRoZSBtb3N0IHByb2ZpdGFibGUgc2NlbmFyaW8geW91IGNhbiBmaW5kIHlvdXJzZWxmIGluLCBqdXN0IHdhaXQgZm9yIHRoZSBjYXJkcy4KQmV0aCBpcyBhYmxlIHRvIGFnZSBhdCB3aWxsLCBidXQgc2hlIGNhbid0IGdldCBhbnkgeW91bmdlci4gCkluIDIwMDMsIHdvcnJpZWQgYSB0aGlyZCBMYXMgVmVnYXMgQ2lycXVlIHNob3cgbWlnaHQgY2FubmliYWxpemUgdGlja2V0IHNhbGVzIGZyb20gaGlzIHR3byBvdGhlciBwcm9kdWN0aW9ucywgaGUgaW50cm9kdWNlZCBadW1hbml0eSwgYW4gZXJvdGljIHNob3cgdGhhdCB2ZWVyZWQgYXdheSBmcm9tIHRoZSB0cm91cGUncyB0eXBpY2FsIGZhbWlseSBmYXJlLk90aGVyIHJhZGljYWwgZGVwYXJ0dXJlcyBmb3IgdGhlIGFuaW1hbCBmcmVlIGNpcmN1cyB0cm91cGUgaW5jbHVkZSB0aGUgY3JpdGljYWxseSBhY2NsYWltZWQgTE9WRSwgYW4gaG9tYWdlIHRvIHRoZSBCZWF0bGVzLCBhbmQgVml2YSBFbHZpcywgYSB0cmlidXRlIHRvICJ0aGUgS2luZywiIHdoaWNoIG9wZW5lZCBsYXN0IG1vbnRoIGluIFZlZ2FzIHRvIG1peGVkIHJldmlld3MuQ2lycXVlIGhhcyBhIHJlcHV0YXRpb24gZm9yIGhhdmluZyBhIGNoYW90aWMgY3JlYXRpb24gcHJvY2Vzcy4gQnV0IHRoZSBjb21wYW55IHNlZW1zIHRvIGJlIGhhdmluZyBwYXJ0aWN1bGFyIHN0cnVnZ2xlcyB3aXRoIEJhbmFuYSBTaHBlZWwsIHdyaXR0ZW4gYW5kIGRpcmVjdGVkIGJ5IERhdmlkIFNoaW5lciwgYSBjbG93biBhbmQgY28gY3JlYXRvciBvZiB0aGUgcG9wdWxhciAiRm9vbCBNb29uLiIgSGUgYWxzbyBpcyB0aGUgY3JlYXRpdmUgZm9yY2UgYmVoaW5kIENpcnF1ZSdzIHN1Y2Nlc3NmdWwgS29vemEsIHdoaWNoIHdhcyBzdGFnZWQgbGFzdCB5ZWFyIG9uIE5ldyBZb3JrIENpdHkncyBSYW5kYWxsJ3MgSXNsYW5kLldpdGggQmFuYW5hIFNocGVlbCwgQ2lycXVlIGlzIHRyeWluZyB0byBtZXNoIGl0cyBvd24gc3R5bGUgd2l0aCB0cmFkaXRpb25hbCBCcm9hZHdheSBlbGVtZW50cyBhbmQgYW4gZW1waGFzaXMgb24gdmF1ZGV2aWxsZSwgd2hpY2ggaXMgbm90IHRvIGV2ZXJ5b25lJ3MgdGFzdGUuQmVmb3JlIHRoZSBDaGljYWdvIHJ1biwgQ2lycXVlIGhpcmVkIHR3byBCcm9hZHdheSBtdXNpY2FsIHN0YXJzIGZyb20gSmVyc2V5IEJveXMgYW5kIFdpY2tlZCBhbmQgYSBwcm9taW5lbnQgY29tcG9zZXIsIGJ1dCBlbmRlZCB1cCBmaXJpbmcgYWxsIHRocmVlIGFuZCBzY3JhcHBpbmcgdGhlIG11c2ljYWwgc2NvcmUuV2hhdCBkaWQgZW5kIHVwIG9uIHN0YWdlIHdhcyAiY29sZCwgY2hhb3RpYywgY2xpcHBlZCBhbmQgY2Fjb3Bob25vdXMiIHdpdGggY2xvd25zIG9uIHN0YWdlIHRoYXQgc2VlbWVkIHRoZXkgIndvdWxkIGtpbGwgdGhlbXNlbHZlcyBsYXVnaGluZyBhdCB5b3VyIGV4cGVuc2UsIiBhY2NvcmRpbmcgdG8gdGhlIENoaWNhZ28gVHJpYnVuZS4gCkkgaGF2ZSB5ZXQgdG8gYnV5IGEgc2Vjb25kIHBlbmRhbnQgc2xvdCwgb3IgdXBncmFkZSBteSBvdGhlciAzIHJpbmdzIHRvIGdvbGx1eC4gSSBzdGlsbCBhYmxlIHRvIHByb2dyZXNzIGEgZGVjZW50IGFtb3VudCB2ZXJ5IG9mdGVuLiAKSVQgV0lMTCBMQVkgMzAwIE1JTExJT04gRUdHUyBBVCBPTkUgVElNRS4gCjYuIFJlbGF4IHlvdXIgamF3LiAKVGhlIGNvbXBhbnkgb2ZmZXJzIGJldHRpbmcgYW5kIGdhbWluZyBwcm9kdWN0cyB0byBjdXN0b21lcnMgdGhyb3VnaCBmb3VyIHByaW5jaXBhbCBjaGFubmVscywgd2hpY2ggaW5jbHVkZXMgUmV0YWlsIGNvbXByaXNpbmcgYSBuZXR3b3JrIG9mIG5lYXJseSAyLDMwMCBvdXRsZXRzIHRocm91Z2hvdXQgdGhlIFVuaXRlZCBLaW5nZG9tIGFuZCBJcmVsYW5kLiBJbnRlcmFjdGl2ZSBiZXR0aW5nIGluY2x1ZGVzIGFuIG9ubGluZSBzcG9ydHNib29rLCBhcmNhZGUgZ2FtZXMsIGFuIG9ubGluZSBjYXNpbm8sIG9ubGluZSBwb2tlciBzaXRlLCBvbmxpbmUgYmluZ28gYW5kIG9ubGluZSBza2lsbHMgZ2FtZXMuIEl0IGFsc28gaW5jbHVkZXMgdGVsZXBob25lIGJldHRpbmcgYW5kIGludGVybmF0aW9uYWwgYnVzaW5lc3Nlcywgd2hpY2ggY29tcHJpc2Ugam9pbnQgdmVudHVyZXMgZXN0YWJsaXNoZWQgaW4gU3BhaW4gYW5kIEl0YWx5Li4gClNoZSBkaWRuJ3QgaGF2ZSBteSBETkEsIGJ1dCB3aGVuIHNoZSBzcXVpcm1lZCBpbnNpZGUgbXkgYmVsbHksIEkga25ldyBzaGUgd2FzIG1pbmUuLiAKVVMgUHJlc2lkZW50IEJhcmFjayBPYmFtYSByZWNlbnRseSB3YXJuZWQgUmVwdWJsaWNhbnMgdGhhdCBoZSB3aWxsIG5vdCBuZWdvdGlhdGUgb24gcmFpc2luZyB0aGUgZGVidCBjZWlsaW5nIFtBRlBdRm9yIGdlbmVyYXRpb25zLCBBbWVyaWNhbiBwb2xpdGljYWwgbGVhZGVycyBoYXZlIHByb2NsYWltZWQgdGhlIGV4Y2VwdGlvbmFsIHZpcnR1ZXMgb2YgdGhlIGNvdW50cnkncyBwb2xpdGljYWwgc3lzdGVtLiAKU29tZXRpbWVzIHRoaW5ncyBhcmUganVzdCBiYWQgbWF0Y2hlcy4gVHJ5IG91dCBvdGhlciBjaHVyY2hlcyBpbiB0aGUgYXJlYSwgaWYgdGhhdCBhbiBvcHRpb24uIApJdCB3YXMgdGhpcyBhbm51YWwgZGlubmVyIGZvciBhIGxlZ2FsIGFzc29jaWF0aW9uIGFuZCB0aGF0IGZpcm0gd2FzIHNhdCBuZXh0IHRvIHVzLiAKSW4gYSBoaXN0b3JpYyBkZWNpc2lvbiwgdG9kYXkgdGhlIFVuaXRlZCBTdGF0ZXMgU3VwcmVtZSBDb3VydCBkZWNpZGVkIDcgMSB0byBvdmVydHVybiB0aGUgSW50ZXJuYXRpb25hbCBGaW5hbmNlIENvcnBvcmF0aW9uIChJRkMpJ3MgY2xhaW0gdG8gYWJzb2x1dGUgaW1tdW5pdHkgZnJvbSBsYXdzdWl0cy4gVW5kZXIgdGhlIEphbSB2LiBJRkMgZGVjaXNpb24sIGludGVybmF0aW9uYWwgb3JnYW5pemF0aW9ucyBsaWtlIHRoZSBJRkMgYW5kIHRoZSBXb3JsZCBCYW5rIGNhbiBub3cgYmUgc3VlZCBpbiBVUyBjb3VydHMsIGluY2x1ZGluZyBpbiByZWxhdGlvbiB0byB0aGVpciBjb21tZXJjaWFsIGFjdGl2aXRpZXMuLiAKRXQgcGFzIG4naW1wb3J0ZSBsYXF1ZWxsZSBwdWlzcXUnaWwgcydhZ2l0IGR1IDIyIGp1aW4gMjAxOSwgam91ciBvIGxlIGxlYWRlciBldCBmb25kYXRldXIgZCdJbmRvY2hpbmUgZnRlcmEgc29uIGFubml2ZXJzYWlyZS4gCldhcyB0aGUgZmVhciBhbmQgYXBwcmVoZW5zaW9uIG9mIHBvc3NpYmx5IGhhdmluZyB0byB1c2UgdGhlIGJhdGhyb29tIGR1cmluZyB0aGUgc2Nob29sIGRheSB0aGF0IGNhdXNlZCBtZSB0aGUgbW9zdCBoYXJtLCBoZSBzYWlkLiBlaWdodGggZ3JhZGUgSSBoYWQgYWxtb3N0IG1hZGUgYSBnYW1lIG91dCBvZiB3YWl0aW5nIGZvciB0aGUgZW5kIG9mIHRoZSBkYXkgc28gSSBjb3VsZCB1c2UgdGhlIGJhdGhyb29tIGF0IG15IG93biBob21lLiBwcm9jZWR1cmUgb2YgaXQgY2F1c2VkIG1lIHRvIHBheSBsZXNzIGF0dGVudGlvbiBpbiBjbGFzcywgbmVnbGVjdCBteSBzdHVkaWVzLCBhbmQgZmVhciBnb2luZyB0byBzY2hvb2wgaW4gdGhlIG1vcm5pbmcsIGhlIHNhaWQuClBpY3R1cmUgaXQ6IGEgY29sbGVjdGlvbiBvZiBmbGFtaW5nIGFjdG9ycyBhbG9uZ3NpZGUgc29tZSBvZiB0aGUgbW9zdCBzaW5jZXJlIGFuZCB3aG9sZXNvbWUgb2YgYWN0b3JzLiBQZXJoYXBzIGV2ZXJ5b25lIGNvdWxkIGJlIHdlYXJpbmcgbWF0Y2hpbmcgb3V0Zml0cz8gRWFybHkgRWx0b24gSm9obiBvciBqdXN0IEFiZXJjcm9tYmllPyBBIHN0b3JtIGNvdWxkIGdhdGhlci4gCkN1cmlvdXMgZXIgYW5kIEN1cmlvdXMgZXIgVGFsa2luZyBmb3IgQXdoaWxlIERpc2N1c3Npb24gQWJvdXQgQXJyZXN0ZWQgTWlkd2lmZSAoYW5kIHNob3VsZGVyIGR5c3RvY2lhKSBQb3N0cGFydHVtIEFiYW5kb25tZW50IGJ5IE1pZHdpdmVzIEFwcHJlbnRpY2VzaGlwICAgdGhlIG5vdCBzbyBnbGFtb3JvdXMgdmlldyAodW4gcHVibGlzaGVkIGFydGljbGUpIEJsb2dnaW5nIEFib3V0IENsaWVudHMgU28gTXVjaC4gTWVkaWNhbCBCb2FyZCBQaWN0dXJlcyBXaGVyZSBXYXMgST8gU2F2aW5nIEJhYmllcywgU2F2aW5nIERvbGxhcnM6IFdoeSBNaWR3aXZlcyBTaG91bGQgQmUgYSBMYXJnZXIgUGFydCBvZiBPdXIgSGVhbHRoIENhcmUgU3lzdGVtIE1vcmUgQWJvcnRpb24gVGFsayBNeSBBYnN0aW5lbmNlIE9ubHkgUGFwZXIgRGlkIHlvdSBrbm93LiAKSlRHIHRvbGQgbWUgYWJvdXQgdGhpcy4gSSBOT1QgSU5UTyBUSElTLiBTT01FQk9EWSBIRUxQISEuIApUaGF0IHNhaWQsIHdoZW4gd29ya2luZyBvbiBhIHBpZWNlIG9mIHBlcmZvcm1hbmNlIGNyaXRpY2FsIGNvZGUsIHdlIGNhbiBnaXZlIHVwIG9uIG1vc3Qgb2YgdGhlIHN0YW5kYXJkIGxpYnJhcnksIChieWUgTGlucSwgU3RyaW5nRm9ybWF0dGVyLCBMaXN0LCBEaWN0aW9uYXJ5KSwgZGlzYWxsb3cgYWxsb2NhdGlvbnMgKD1ubyBjbGFzc2VzLCBvbmx5IHN0cnVjdHMpLCByZWZsZWN0aW9uLCB0aGUgZ2FyYmFnZSBjb2xsZWN0b3IgYW5kIHZpcnR1YWwgY2FsbHMsIGFuZCBhZGQgYSBmZXcgbmV3IGNvbnRhaW5lcnMgdGhhdCB5b3UgYXJlIGFsbG93ZWQgdG8gdXNlIChOYXRpdmVBcnJheSBhbmQgZnJpZW5kcykuIFRoZW4sIHRoZSByZW1haW5pbmcgcGllY2VzIG9mIHRoZSBDIGxhbmd1YWdlIGFyZSBsb29raW5nIHJlYWxseSBnb29kLgpUaGV5IHByb2JhYmx5IHZhbHVlZCBoaXMgZXhwZXJpZW5jZSwgd2hpY2ggaGUgd291bGQgaGF2ZSBzaGFyZWQgdGhyb3VnaCBsYW5ndWFnZSwgYW5kIHRoZXkgaGFkIGVub3VnaCBtYXN0ZXJ5IG9mIHRoZWlyIGVudmlyb25tZW50IHRvIHNlY3VyZSBmb29kIGZvciB5ZWFycyBmb3IgYSBtYW4gd2hvIGNvdWxkbiBodW50ICBkdXJpbmcgYSBoYXJzaCBpY2UgYWdlIGNsaW1hdGUuLiAKRXZlcnl0aGluZyB3YXMgZ29pbmcgZmluZSwgdW50aWwgSSBnb3QgcG9ja2V0IDggSSBjaGVja2VkLiAKVGhlbiBJJ2Qgbm90IGFsbG93IGhlciB0byBiZWhhdmUgaW4gdGhpcyBtYW5uZXIgdG8geW91LiAKUHVibGljIEFkZHJlc3M6ICJJIGhvbmVzdGx5IGNhbid0IHVuZGVyc3RhbmQgaG93IHRoaXMgaGFzIGhhcHBlbmVkLCIgc2FpZCBhIGZsYWJiZXJnYXN0ZWQgUHVibGljIEFkZHJlc3Mgb3duZXIgUnVzc2VsbCBCcm93bi4gIkJ1dCBkaXJ0eXBvbGl0aWNzIHdvbiB0aGlzIHllYXIncyByZWFkZXIgdm90ZSBieSBhIGNvdW50cnkgbWlsZS4gSSBtZWFuLCBKYXNvbiBFZGUgYW5kIFBoaWwgZGUgSm91eCBoYXZlIG5ldyBqb2JzLCAgQ29sbGlucyBoYXMgYSBuZXdzcGFwZXIgY29sdW1uLCBEYXZpZCBGYXJyYXIgaGFzIHJldHVybmVkIHRvIGhpcyBmYW1pbGlhciByb2xlIG9mIHByb3ZpZGluZyBhbiBpbnRlcm5ldCBwbGF0Zm9ybSBmb3Igc2NhcnkgcmFjaXN0cyBhbmQgYmlnb3RzICAgYW5kIGNvbmZ1c2VkLCBtZW5kYWNpb3VzIFRheHBheWVycycgVW5pb24gcHJlc3MgcmVsZWFzZXMgYXJlIGJlaW5nIHBhc3RlZCBpbnRvIG5ld3NwYXBlciBzdG9yaWVzIGFnYWluLkluc3BlY3RvciBHZW5lcmFsIG9mIEludGVsbGlnZW5jZSBhbmQgU2VjdXJpdHkgICBJbnNwZWN0b3IgR2VuZXJhbCBhY2NlcHRzIEdvZmYgYXBvbG9neSBmb3IgbGVhayBvZiByZXBvcnRPdXQgTGluayAgIFdvcmQgb2YgdGhlIFllYXIgMjAxNDogZGlydHlwb2xpdGljcyAgSGFyZCBOZXdzICBQdWJsaWMgQWRkcmVzc091dCBMaW5rICAgQmF0LCBCZWFuLCBCZWFtOiBUZW5kaW5nIGZhc2Npc3RPdXQgTGluayAgIFRvYnkgTWFuaGlyZTogQSBmZXN0aXZlIHZlcnNlIGZvciBOWiAgIE9waW5pb24gICBOWiBIZXJhbGQgTmV3c09uIENhbWVyb24gU2xhdGVyOiAiS2V5IHNob3VsZCBjbG9zZSBkb3duIEJsYWNrIE9wcyIgICBHcmVlbnNKb2huIEtleSBtdXN0IGFzc3VyZSBOZXcgWmVhbGFuZCB0aGF0IGhlIGhhcyBjbG9zZWQgZG93biB0aGUgQmxhY2sgT3BzIGF0dGFjayB1bml0IGluIGhpcyBvZmZpY2UsIGFuZCBwcm9taXNlIHRvIHNldmVyIGFsbCBjb250YWN0IHdpdGggYmxvZ2dlciBDYW1lcm9uIFNsYXRlciwgdGhlIEdyZWVuIFBhcnR5IHNhaWQgdG9kYXkuIApIb3cgY291bGQgSSBoYXZlIGJlZW4gc28gYmxpbmQgdG8gaXQ/IEhvdyBjb3VsZCBJIGhhdmUgdHVybmVkIGF3YXkgZnJvbSBpdD8uIAoiQXMgYSBtb3RoZXIgb2YgdGhyZWUsIEkgY2FuJ3QgYmVhciB0byBpbWFnaW5lIHdoYXQgUml5YSdzIG1vdGhlciBtdXN0IGJlIGZlZWxpbmcgYW5kIGdvaW5nIHRocm91Z2ggYXQgdGhpcyB2ZXJ5IG1vbWVudC4iLiAKSSBpbWFnaW5lIHRlY2huaXF1ZSB3aWxsIGJlIGFtb25nIHRoZSBmaXJzdCB0aGluZ3MgaGUgd2FudHMgdG8gYWRkcmVzcywgYnV0IG5vIGlkZWEuIEhlJ3MgdGhlIGV4cGVydC4gSSdtIGp1c3QgYSBiaWcgdWdseSBTT0IgZnJvbSB0aGUgT3phcmtzLlRoYW5rcyBmb3IgdGhlIGNyaXRpY2lzbSAoc2VyaW91c2x5KS4gQ2FuJ3QgZ2V0IGJldHRlciBpZiBvdGhlcnMgYW5kIG15c2VsZiBhcmVuJ3QgaG9uZXN0LiAxIHBvaW50ICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvLiAKSSBzdGFydGVkIGxpa2luZyB0aGVtIGluIERhd24gb2YgV2FyIHdhYWFheSBiYWNrIHdoZW4gdGhleSBzdGlsbCB3ZXJlIE9sZGNyb25zLiBXaGF0IHNob2NrZWQgdXMgYmFjayB0aGVuIHdhcyBob3cgbXVjaCBvZiB0aGlzIGNpbmVtYXRpYyB3YXMgZXhhY3RseSBsaWtlIHRoYXQgaW4gdGhlIGdhbWUsIHRvIHRoZSBwb2ludCB0aGF0IGluIG91dCBMQU4gcGFydGllcyB3aGVuIHdlIHdlcmUgcGxheWluZyBpZiBhbnkgb2YgdXMgZGlzY292ZXJlZCB0aGF0IG9uZSBvZiB0aGUgQ1BVIG9wb25lbnRzIHdhcyBOZWNyb24gdGhlIGNyeSB3b3VsZCBnbyBvdXQgIlNoaXQhIE5lY3Jvb29vbnMhIiBhbmQgYWxsIG9mIHVzIHdvdWxkIGJhbmQgdG9nZXRoZXIgdG8ga2lsbCB0aGVtICh0cnVseSBraWxsIHRoZW0sIHdlIHRvb2sgbm8gY2hhbmNlcyB3aXRoIHRoYXQgZGFtbiBMb3JkIHJ1bm5pbmcgYXJvdW5kIHJlc3VycmVjdGluZyB0aGVtKSBiZWZvcmUgd2UgZ290IGtpbGxlZCwgdGhlbiBnbyBiYWNrIHRvIHdhaWwgb24gZWFjaCBvdGhlci4KQXJlIHdlIGFjdHVhbGx5IGdvaW5nIHRvIG5lZWQgYSBydWxlIG9uIHNjYXJ2ZXMKTm8sIHRoZSAibm8gZGlmZmVyZW5jZSIgbGluZSBvZiBhdHRhY2sgaXMgb25lIGZvciB0aGUgRE5DLiBBIGxpbmUgb2YgYXR0YWNrIHRoYXQgd2lsbCBmYWxsIGFwYXJ0IGxpa2UgYSBjYWtlIGluIHRoZSByYWluIHdoZW4gdGhlIGNhbmRpZGF0ZXMgaGF2ZSB0byBleHBsYWluIGV4YWN0bHkgd2hhdCB0aGV5IG1lYW4gYnkgIk1lZGljYXJlIGZvciBBbGwiLyJVbml2ZXJzYWwgSGVhbHRoY2FyZSIvIlVuaXZlcnNhbCBBY2Nlc3MiLiAKSWYgeW91IG5lZWQgYSBtaW51dGUgdG8gZmVlZCB5b3Vyc2VsZiwgZ28gdG8gdGhlIGJhdGhyb29tLCB0YWtlIGEgZmV3IGRlZXAgYnJlYXRocywgb3IgZXZlbiBzaG93ZXIsIHB1dCB0aGUgYmFieSBzb21ld2hlcmUgc2FmZSwgYW5kIGxldCB5b3Vyc2VsZiBoYXZlIDUgMTAgbWludXRlcy4gSGF2aW5nIGEgYmFieSBjcnkgb3IgZnVzcyBmb3IgdGhhdCBwZXJpb2Qgb2YgdGltZSBpcyB3YXkgbGVzcyBkYW5nZXJvdXMgdGhhbiBoYXZpbmcgYSBwYXJlbnQgY29uc3RhbnRseSBvbiB0aGUgYnJpbmsgb2YgaHlzdGVyaWEuLiAKRmVsbG93cnVnYnlmYW4gIDIsMjE0IHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvCkkgaGF2ZW50IHN0YXJ0ZWQgb24gdGhlIGhhcmQgY2xhc3NlcyB5ZXQsIGltIGp1c3QgZG9pbmcgbXkgZ2VuZXJhbCBjb3Vyc2VzIHJpZ2h0IG5vdy5IYWhhIEkgZGVmaW5pdGVseSBub3QgZ29pbmcgdG8gYmUgbWFzc2FnaW5nIHBlb3BsZSBmb3IgZnJlZSEgTXkgZmFtaWx5IGNhbiBmb3JrIHVwIHRoZSBkb2UgOilBdCBNY0Nhbm4gdGhleSBoYXZlIGJ1c2luZXNzIGNsYXNzZXMgYW5kIHRlYWNoIHlvdSBqdXN0IGFib3V0IGV2ZXJ5dGhpbmcgaW4gdGhlIGJ1c2luZXNzLiBBbmQgZXZlcnkgZW5kIG9mIE1hc3NhZ2UgdGhlcmFweS4gClRoZXkgYXJlIG1hZGUgb3V0IG9mIHRoZSBzb3VsL2ZpZ2h0aW5nIHNwaXJpdCBvZiB0aGUgc3RhbmQgdXNlci4gU28gSSBhbSBhc3N1bWluZyB0aGV5IHdpbGwgbm90IGJlIGFibGUgdG8gYWJzb3JiIGl0LiBUaGluayBob3cgZWFzeSB0aGUgZmlnaHQgd291bGQgYmUgaWYgSm9zZXBoIGludmlzaWJseSB3cmFwcGVkIGhlcm1pdCBwdXJwbGUgYXJvdW5kIHRoZWlyIGJvZHksIHRoZW4gYWN0aXZhdGVkIGhhbW9uLiAKV2VsbCBpdCBoYXJkIHdoZW4gZXZlcnlvbmUgYXJvdW5kIHlvdSBoYXMgYnVzaW5lc3NlcyBhdCBsZWFzdCB0aGF0IHN1Y2Nlc3NmdWwuIFN1Y2Nlc3NmdWwgcG9rZXIgcGxheWVycyBwbGF5IHdpdGggc3VjY2Vzc2Z1bCBidXNpbmVzcyBwZW9wbGUuIFdlIGRvbiBjb21lIGFjcm9zcyBtYW55IGZhaWxlZCBidXNpbmVzcyBwZW9wbGUgYmVjYXVzZSB0aGV5IG91dCBvZiBtb25leSB0byBwbGF5IG1pZCBoaWdoIHN0YWtlcy4gSXQgZWFzeSB0byBiZWNvbWUgZGlzaWxsdXNpb25lZCBhbmQgZXhwZWN0IHN1Y2Nlc3Mgd2hlbiBldmVyeW9uZSBhcm91bmQgeW91IGlzIHN1Y2Nlc3NmdWwuCkl0IGV2ZW4gbWFrZXMgbXkgb2JsaXZpb3VzIGJyb3RoZXIgdW5jb21mb3J0YWJsZSAoaGUncyBkZWZpbml0ZWx5IG5vdCBqdXN0IG5vLiBPYmxpdmlvdXMgb3IgYXZvaWRhbnQgaXMgbW9yZSBhY2N1cmF0ZSwgaGUga25vd3Mgc2hlIGZhdm9ycyBoaW0gYW5kIGhlIGRvZXNuJ3QgbGlrZSBpdCkuIApTbyBiYXNpY2FsbHksIEkgZG9uIHRoaW5rIHRoZXNlIHBhaW50aW5ncyBnbG9yaWZ5IHRoaW5ncyBhcyB0aGV5IGFyZSBvciBhcyB0aGV5IHNob3VsZCBiZSwgYnV0IHJhdGhlciB0aGV5IGdsb3JpZnkgdGhlIGRpY3RhdG9yaWFsIG1pbmRzZXQgb2YgbG9uZyBkZWFkIHJlbGlnaW91cyBvcHByZXNzb3JzIHdobyBzZXJ2ZWQgYSBkZW1pdXJnZS9lbnRpdHkvZm9yY2UgdGhhdCBpcyBjZXJ0YWlubHkgbm90IGNlbnRlcmVkIGluIGRpdmluZSBPbmVuZXNzIGFuZC9vciAiR29kIiAob3IgYXMgSSBwZXJzb25hbGx5IHByZWZlciB0byBjYWxsIGl0LCAiU291cmNlIikuClRoZSBjaGFuZ2Ugd2FzIHRoZSBsYXRlc3QgaW4gYSBzZXJpZXMgb2Ygd2F5cyB0aGF0IE1yLiBUcnVtcCBoYXMgZGlzbWFudGxlZCB0aGUgYXJjaGl0ZWN0dXJlIHRoYXQgTXIuIApJbiByZWdhcmRzIHRvIGl0IGJlaW5nIGFibGUgdG8gImNvbnRyb2wgd29tZW4iIGlzIGEgYml0IG5vbmUgc2Vuc2ljYWwuIFllcywgeW91IG5lZWQgdGhlIG1hbGUgImd1YXJkaWFuIiBzaWduYXR1cmUgYXMgd2VsbCBhcyB5b3VyIG93biB0byBnZXQgYW4gInVubG9ja2VkIiBwYXNzcG9ydC4gCiJJIGFsd2F5cyB3YW50ZWQgdG8gcGxheSB2b2xsZXliYWxsIGluIGNvbGxlZ2UsIiBHbHlubiBhZG1pdHMuICJBZnRlciB0aGF0IGNvbnZlcnNhdGlvbiwgSSBkaWRuJ3QgdGhpbmsgaGUgd2FzIHJpZ2h0LiBJIGtlcHQgbG9va2luZyBhdCBvdGhlciBjb2xsZWdlcywgYW5kIHRoZW4gdGhlcmUgd2VyZSB0aW1lcyB3aGVyZSBJIGZlbHQgaGUgd2FzIHJpZ2h0LiIKTCdvcmRyZSBkZXMgY2hvc2VzIGVzdCBvcHRpbWlzIGF1c3NpLCBkJ2Fib3JkIGxlcyBjcmV2ZXR0ZXMgZXQgbGVzIHZpYW5kZXMgKHBvdWxldCwgbGFwaW4sIHBvcmMgaWNpKSwgcHVpcyBsZXMgbGd1bWVzLCBsZSByaXogZXQgc29uIGJvdWlsbG9uLCBsZSBwaW1lbnQsIGxlcyBtb3VsZXMsIC4gCkxlcyBmZXV4IGRlIGxhIFNhaW50IEplYW4gbmUgc29udCBwYXMgZGVzIGxnZW5kZXMuIElscyBzIGRhbnMgdW5lIGZhY3R1YWxpdCB0ZW1wb3JlbGxlIGV0IHNwYXRpYWxlIG1vdXZhbnRlLiAKVGhlIGNlbnN1cyBzYWlkIHRoYXQgaW4gMjAxMSwgNjEuNyBwZXIgY2VudCBvZiB0aGUgaW5kdXN0cnkgcmV2ZW51ZXMgY2FtZSBmcm9tIGdhbWluZyBtYWNoaW5lcyAgIGEgc291cmNlIG9mIHJldmVudWUgY2x1YnMgYXJlIHN0YXJ0aW5nIHRvIGJlY29tZSBsZXNzIHJlbGlhbnQgb24gYXMgdGhleSBzd2l0Y2ggdGhlIGZvY3VzIHRvIGNhdGVyaW5nIGFuZCBmb29kIG9mZmVyaW5ncy4gSVBBUlQgYWxzbyBmb3VuZCB0aGF0IHRoZXJlIHdhcyBhIGNvcnJlbGF0aW9uIGJldHdlZW4gYSBjbHViIG9uZ29pbmcgbGV2ZWwgb2YgaW52ZXN0bWVudCBhbmQgaXRzIGxvbmcgdGVybSBmaW5hbmNpYWwgdmlhYmlsaXR5LiAKQmVnaW5uZXJzIHdpbGwgYmUgZ3VpZGVkIGluIHRoZWlyIGNsYXNzZXMuIApZPSBZb3VuZyAgIEFyZSB5b3UgdXAgdG8gZGF0ZSBpbiBob3cgeW91IHJ1biB5b3VyIGJ1c2luZXNzPyBNYW55IGFzc3VtcHRpb25zIGEgY3VzdG9tZXIgbWFrZXMgYWJvdXQgYSBidXNpbmVzcyBoYXZlIHRvIGRvIHdpdGggZmlyc3QgaW1wcmVzc2lvbnMuIFRob3NlIGZpcnN0IGltcHJlc3Npb25zIGNhbiBiZSBiYXNlZCBvbiBhZHZlcnRpc2luZywgYSBwaHlzaWNhbCBidWlsZGluZywgYSB3ZWJzaXRlLCBhIGNvbXBhbnkncyBpbnZlbnRvcnksIGFuZCBldmVuIHRoZSBsb29rIGFuZCBkcmVzcyBvZiB0aGUgZW1wbG95ZWVzLiAKSSBoYXZlIGhhZCB0byBjb21lIHRvIHdvcmsgd2hpbGUgZmVlbGluZyBkZXByZXNzZWQsIHdoaWxlIGdvaW5nIHRocm91Z2ggYSBob3JyaWJsZSBkaXZvcmNlLCBldGMuIFRoZSBjb21wYW55IGRvZXNuIGNhcmUuIFRoZXkgcGF5IG1lIHRvIGRvIGEgam9iLCBhbmQgSSBkbyBpdC4KSXQgdG9vayB0aGVtIDMgYXR0ZW1wdHMgdG8gd29ybSB0aGVpciB3YXkgaW50byBBbWVyaWNhbiBmaW5hbmNlLCB0aGUgZmlyc3QgdHdvIHRod2FydGVkIGJ5IG1lbiBsaWtlIEphY2tzb24gd2hvIGtuZXcgZnVsbCB3ZWxsIHdoYXQgdGhleSB3ZXJlIHRyeWluZyB0byBkby4gClRoaXMgd2FzIGEgUEMgb25saW5lIHRoYXQgdXNlZCB0byBiZSBtYWMsIHdpdGggUEMgcGFydHMuIApJIHdvdWxkIGNhbGwgc3RyaXAgY2x1YnMgZG9pbmcgbXkgInRydWNrZXIgdm9pY2UiIChpdCB3YXMgY29udmluY2luZykgYW5kIGFzayBob3cgdG8gYXBwbHkgdG8gYmUgYSBkYW5jZXIuIApEZWFsL2RyYXcgYnV0dG9uOiBPbiB0aGUgcmlnaHQgc2lkZSBvZiB0aGUga2V5Ym9hcmQgaXMgdGhlIGRlYWwgZHJhdyBidXR0b24uIEFmdGVyIGVhY2ggaGFuZCwgaGl0IHRoZSBidXR0b24gdG8gZ2V0IHRoZSBuZXh0IGhhbmQgZGVhbHQgdG8geW91LiAKSSBzdGFuZCBjb3JyZWN0ZWQsIHRob3VnaC4gVGhpcyBuZXcgaW5mb3JtYXRpb24gd2lsbCBhbHNvIG1ha2UgdGhpbmdzIG11Y2ggZWFzaWVyLiAKQ2FuIGRlZmluaXRlbHkgc2VlIGhvdyB0aGlzIGF0dGl0dWRlIGNvdWxkIGJlIHNjb3JlZCBhcyBsZXNzIGNvbnNjaWVudGlvdXMuIEJ1dCBpbiBhIGRlZXBlciBzZW5zZSwgSSB0aGluayBpdCBqdXN0IGluZGljYXRlcyB0aGF0IG15IHZhbHVlcyBkaXZlcmdlZCBmcm9tIHRob3NlIGJlaW5nIG1lYXN1cmVkIGJ5IHRoaW5ncyBsaWtlIGEgQmlnIEZpdmUgUGVyc29uYWxpdHkgVGVzdC4gQSBob2xpc3RpYyB1bmRlcnN0YW5kaW5nIG9mIGNvbXBhc3Npb24gY2FuIGJlIGZhaXJseSBzdWJ0bGUsIGFuZCBtZWFzdXJlcyBvZiB3b3JrcGxhY2UgInBlcmZvcm1hbmNlIiBhcmUgb2Z0ZW4gcHJldHR5IGNydWRlLgpUaGVyZSBpcyBubyB0eXBpY2FsIGR1cmF0aW9uIG9mIHRyZWF0bWVudCBpbiB0cmFkaXRpb25hbCBDaGluZXNlIG1lZGljaW5lLCBzaW5jZSBlYWNoIGNhc2UgaXMgdHJlYXRlZCBpbmRpdmlkdWFsbHkuIEEgcGVyc29uIHdpdGggYW4gYWN1dGUsIGJ1dCBzaW1wbGUsIGNvbmRpdGlvbiBtaWdodCBmZWVsIGNvbXBsZXRlbHkgZnJlZSBvZiBpbGxuZXNzIGFuZCBwYWluIGFmdGVyIGp1c3Qgb25lIGFjdXB1bmN0dXJlIHRyZWF0bWVudCwgd2hpbGUgYW5vdGhlciBwZXJzb24gd2l0aCBhIGNocm9uaWMgZGlzb3JkZXIgbWlnaHQgcmVxdWlyZSB3ZWVrbHkgYWN1cHVuY3R1cmUgYW5kIGRhaWx5IGhlcmJhbCBtZWRpY2luZSBmb3IgYSBmZXcgbW9udGhzIGJlZm9yZSB0aGUgY29uZGl0aW9uIGlzIHJlY3RpZmllZC4gSW4gYWxsIGNhc2VzLCBob3dldmVyLCB0aGUgcHJhY3RpdGlvbmVyIGNob29zZXMgdGhlIHRyZWF0bWVudCBtb2RhbGl0eSBoZSBvciBzaGUgYmVsaWV2ZXMgd2lsbCBiZSBtb3N0IGVmZmVjdGl2ZSBpbiB2aWV3IG9mIHRoZSBwcmFjdGl0aW9uZXIncyBleHBlcmllbmNlIGFuZCB0aGUgaW5kaXZpZHVhbCByZWNlaXZpbmcgdHJlYXRtZW50LgpKdWx5IDI5LCBLaGxvZSBLYXJkYXNoaWFuIGFuZCBLZW5kYWxsIEplbm5lcidzIGFwcHJhaXNhbCBvZiBLaW0gS2FyZGFzaGlhbidzIDUgZm9vdCAzIGZpZ3VyZSB3YXMgc28gZWZmdXNpdmUgdGhhdCB0aGUgc29jaWFsIG1lZGlhIGxvdmluZyBzdGFyIHNpbXBseSBoYWQgdG8gZG9jdW1lbnQgaXQgZm9yIGhlciBJbnN0YWdyYW0gc3RvcmllcywgZWF0aW5nIHVwIHRoZWlyIHJlbWFya3Mgd2hpbGUgaGFsZiBoZWFydGVkbHkgcHJvdGVzdGluZyB0aGF0IDExOSBwb3VuZCB3YXMgIm5vdCB0aGF0IHNraW5ueS4iIE5vLCBvZiBjb3Vyc2UgaGVyIGFybXMgd2VyZSBub3QgdGhlIHNpemUgb2YgS2hsb2UncyBwaW5reSwgc2hlIGRlbXVycmVkLCBhbmQgaXQncyBzaW1wbHkgcmlkaWN1bG91cyB0byBzdWdnZXN0IHNoZSB3YXMgdGhlIHNhbWUgc2l6ZSBhcyBLZW5kYWxsJ3MgY2FuIG9ubHkgZml0IGEgcGhvbmUgYW5kIGxpcHN0aWNrIHB1cnNlLi4gCkNvbmNlcm4gYWJvdXQgb3ZlcnBvcHVsYXRpb24gaXMgYW4gYW5jaWVudCB0b3BpYy4gVGVydHVsbGlhbiB3YXMgYSByZXNpZGVudCBvZiB0aGUgY2l0eSBvZiBDYXJ0aGFnZSBpbiB0aGUgc2Vjb25kIGNlbnR1cnkgQ0UsIHdoZW4gdGhlIHBvcHVsYXRpb24gb2YgdGhlIHdvcmxkIHdhcyBhYm91dCAxOTAgbWlsbGlvbiAgIG9ubHkgMyB0byA0JSBvZiB3aGF0IGl0IGlzIHRvZGF5LiBIZSBub3RhYmx5IHNhaWQ6ICJPdXIgbnVtYmVycyBhcmUgYnVyZGVuc29tZSB0byB0aGUgd29ybGQsIHdoaWNoIGNhbiBoYXJkbHkgc3VwcG9ydCB1cy4gSW4gdmVyeSBkZWVkLCBwZXN0aWxlbmNlLCBhbmQgZmFtaW5lLCBhbmQgd2FycywgYW5kIGVhcnRocXVha2VzIGhhdmUgdG8gYmUgcmVnYXJkZWQgYXMgYSByZW1lZHkgZm9yIG5hdGlvbnMsIGFzIHRoZSBtZWFucyBvZiBwcnVuaW5nIHRoZSBsdXh1cmlhbmNlIG9mIHRoZSBodW1hbiByYWNlLiIgQmVmb3JlIHRoYXQsIFBsYXRvLCBBcmlzdG90bGUgYW5kIG90aGVycyBicm9hY2hlZCB0aGUgdG9waWMgYXMgd2VsbC4KSSBub3QganVzdCB0YWxraW5nIGFib3V0IHNob290aW5nLCBlaXRoZXIuIEkgdGFsa2luZyBhYm91dCBldmVyeXRoaW5nIHlvdSBwcm9iYWJseSBkb24gZXhwZXJpZW5jZSBpbiB5b3VyIGxpZmUsIG9yIHRlbGwgdGhvc2Ugd2hvIGRvIHRoYXQgdGhleSBleGFnZ2VyYXRpbmcgb3IgbHlpbmcuIApEZWxoaSBiYXNlZCBMdXRoZXIsIHdob3NlIGZhdGhlciB3YXMgaW4gdGhlIEluZGlhbiBBaXIgRm9yY2UsIGNoYW5jZWQgdXBvbiBwb2tlciBxdWl0ZSBhY2NpZGVudGFsbHkgc2hlIHdhcyB2aXNpdGluZyBhIGZyaWVuZHMgaG91c2UgYW5kIHNhdyBhIGdhbWUgYmVpbmcgcGxheWVkLiAKIkhlcmUgaXQgaXMhIiBzYWlkIExldmluLCBwb2ludGluZyB0byBMYXNrYSwgd2hvIHdpdGggb25lIGVhciByYWlzZWQsIHdhZ2dpbmcgdGhlIGVuZCBvZiBoZXIgc2hhZ2d5IHRhaWwsIGNhbWUgc2xvd2x5IGJhY2sgYXMgdGhvdWdoIHNoZSB3b3VsZCBwcm9sb25nIHRoZSBwbGVhc3VyZSwgYW5kIGFzIGl0IHdlcmUgc21pbGluZywgYnJvdWdodCB0aGUgZGVhZCBiaXJkIHRvIGhlciBtYXN0ZXIuICJXZWxsLCBJJ20gZ2xhZCB5b3Ugd2VyZSBzdWNjZXNzZnVsLCIgc2FpZCBMZXZpbiwgd2hvLCBhdCB0aGUgc2FtZSB0aW1lLCBoYWQgYSBzZW5zZSBvZiBlbnZ5IHRoYXQgaGUgaGFkIG5vdCBzdWNjZWVkZWQgaW4gc2hvb3RpbmcgdGhlIHNuaXBlLi4gCkhvdyBzaGUgcmVhY3RlZCB3aGVuIHlvdSBkaXNhZ3JlZWQgb24gdGhpcyBpc3N1ZSB3b3VsZCBiZSBoYXJkIHRvIGRlYWwgd2l0aCBhbmQgY291bGQgYmUgZGlzY3Vzc2VkIHdpdGggdGhlIG1hbWEgaXNzdWUgaWYgeW91IGNhbiBkbyBpdCBjaXZpbGx5Li4gCkFsc28gdGhpcyBraWQgc2hvdCBhbm90aGVyIGtpZCBpbiBicm9hZCBkYXlsaWdodCBhZnRlciBoZSBsb3N0IGEgZmlnaHQuIAoyLCBwcC4gMjAxMi4gClJldGlyZWQgdHJvb3BlciBzZW50ZW5jZWQgaW4gZ2FtYmxpbmcgaW52ZXN0aWdhdGlvbgpZb3UgbGVhcm4gYnkgbWFraW5nIG1pc3Rha2VzIHNvLCBjb25zaWRlciBpdCB0aGF0IGV2ZXJ5IG1pc3Rha2UgeW91IG1hZGUgaXMgYW4gb3Bwb3J0dW5pdHkgdG8gbG9vayBhdCB5b3Vyc2VsZiBhbmQgZ28gZG9uIG5lZWQgdG8gYmUgbGlrZSB0aGF0IE9mIGNvdXJzZSwgdGhlIG1vcmUgY3JpdGljYWwgeW91IGFyZSwgdGhlIGhhcmRlciBpdCBnb2luZyB0byBiZSB0byBkbyB0aGF0LiBUaGUgbWlzdGFrZSBwZW9wbGUgbWFrZSBpcyB0aGF0LCBpdCBodXJ0cyB0byBjb25zaWRlciB3aGF0IGEgZm9vbCB5b3UgbWlnaHQgaGF2ZSBtYWRlIHRoZW4uIEJ1dCB0aGUgZXhhY3Qgb3Bwb3NpdGUgb2YgZml4aW5nIHRoZSBwcm9ibGVtIGlzIHRvIGlnbm9yZSB0aGUgdmVyeSBleHBlcmllbmNlIHRoYXQgaXMgYSB3aW5kb3cgaW50byBob3cgeW91IHdvcmsuIApCdXQgbW9zdCBvZiB0aGVzZSB0aGluZ3Mgc2VlbWVkIGxpa2UgdGhleSByZXF1aXJlIGVpdGhlciBqdXN0IGphY2twb3Qgb2RkcyBhbmQgYmVpbmcgYm9ybiB0aGF0IHdheSwgb3IgQSBMT1Qgb2Ygd29yay4gU28gSSBnb3Qgb2xkZXIsIGFuZCB3YXMgc3RpbGwgZW5qb3lpbmcgZG9pbmcgeW91bmcga2lkIHN0dWZmIHRoYXQgd2FzbiBhYm91dCBzZXR0aW5nIHdvcmxkIHJlY29yZHMuIApSZW1vdmUgdGhlIHJhY2sgZnJvbSB0aGUgcm9hc3RpbmcgcGFuLiBQbGFjZSB0aGUgcm9hc3RpbmcgcGFuIG92ZXIgbWVkaXVtIGhlYXQgb24gdGhlIHN0b3ZldG9wICh5b3UgbWF5IG5lZWQgdHdvIGJ1cm5lcnMpIGFuZCBicmluZyB0aGUganVpY2VzIHRvIGEgc2ltbWVyLiAKWWVhaCwgYWxtb3N0IGFzIGlmIGEgbGljZW5zZWQgZG9jdG9yL3BoYXJtYWNpc3Qga25vd3MgbW9yZSB0aGVuIGEgcmFuZG9tIHJlZGRpdCBjb21tZW50b3IsIHNvY2NlciBtb20gb3IgaGlnaCBzY2hvb2wga2lkLiBBbG1vc3QgYXMgaWYgdmlhZ3JhIGNvdWxkIGJlIGRhbmdlcm91cyBpZiBjb21iaW5lZCB3aXRoIHRoZSB3cm9uZyBtZWRpY2luZSBvciBqdXN0IHVzZWQgYnkgYSBwZXJzb24gd2hvIGhhdmUgY2VydGFpbiBjb25kaXRpb25zIGxpa2UgaGlnaCBibG9vZCBwcmVzc3VyZSAod2hpY2ggdGhleSBvdWdodCBub3Qga25vdykuLiAKV2hvIHdhcyB0aGUgZ3JlYXRlc3QgYmFza2V0YmFsbCBwbGF5ZXIgZXZlcj8KUFJFVFNFTEwsIEpvaG4gU3Rld2FydCBha2EgIlByZXRzIiBNaXNzaXNzYXVnYSwgT250YXJpbyAoSGFtaWx0b24gYm9ybikgQXByaWwgMjMsIDE5NTYgICBPY3RvYmVyIDIzLCAyMDEyIEluIGhpcyAiQmVkZGlhbiIgQmlydGhkYXkgWWVhciBQZWFjZWZ1bGx5LCBzdXJyb3VuZGVkIGJ5IGhpcyBmYW1pbHkgYW5kIGxvdmVkIG9uZXMsIGFmdGVyIGFuIGluY3JlZGlibGUgYmF0dGxlIHdpdGggY2FuY2VyLCB3aGljaCBoZSBhY2NlcHRlZCBhbmQgaGFuZGxlZCBqdXN0IGFzIGhlIGhhbmRsZWQgaGlzIHdob2xlIGxpZmUsICJzdHJhaWdodCB1cCIuIApTb21lIGludGVycHJldGVycyBjb25zaWRlciB0aGF0IGluIG9uZSBvZiB0aGUgUGF1bGluZSB2aWNlIGxpc3RzLCAxIENvcmludGhpYW5zIDY6OSAxMCwgb25lIG9mIHRoZSB3b3JkcyBtYWxha29pICgic29mdCIpIG9yIGFyc2Vub2tvaXRhaSAoYSBjb21wb3VuZCBvZiAibWFsZSIgYW5kICJiZWQiKSByZWZlciB0byBtYWxlIHByb3N0aXR1dGlvbiAob3IgbWFsZSB0ZW1wbGUgcHJvc3RpdHV0aW9uKTogdGhpcyBpbnRlcnByZXRhdGlvbiBvZiBhcnNlbm9rb2l0YWkgaXMgZm9sbG93ZWQgaW4gdGhlIE5ldyBSZXZpc2VkIFN0YW5kYXJkIFZlcnNpb24uVGhlIEVuY3ljbG9wZWRpYSBvZiBIb21vc2V4dWFsaXR5IHN0YXRlcyB0aGF0IHByb3N0aXR1dGVzIGluIGFuY2llbnQgR3JlZWNlIHdlcmUgZ2VuZXJhbGx5IHNsYXZlcy5bNV0gQSB3ZWxsIGtub3duIGNhc2UgaXMgUGhhZWRvIG9mIEVsaXMgd2hvIHdhcyBjYXB0dXJlZCBpbiB3YXIgYW5kIGZvcmNlZCBpbnRvIHNsYXZlcnkgYW5kIHByb3N0aXR1dGlvbiwgYnV0IHdhcyBldmVudHVhbGx5IHJhbnNvbWVkIHRvIGJlY29tZSBhIHB1cGlsIG9mIFNvY3JhdGVzOyBQbGF0bydzIFBoYWVkbyBpcyB0b2xkIGZyb20gaGlzIHBlcnNwZWN0aXZlLiAKRXZlbnR1YWxseSBubyBsaW1pdCBwb2tlciBpcyBnb2luZyB0byBiZSBzb2x2ZWQgb3IgbmVhciBzb2x2ZWQgYnkgY29tcHV0ZXJzIChoZWFkcyB1cCBsaW1pdCBpcyBhbHJlYWR5IHNvbHZlZCkuIFRoaXMgd2lsbCBodXJ0IG9ubGluZSBhIGxvdCB1bmxlc3MgcG9rZXIgc2l0ZXMgY2FuIGdldCBhbiBpcm9uIGNsYWQgd2F5IHRvIGRldGVjdCBib3RzLiAKSGVyIGFydGljbGVzIGhhdmUgYXBwZWFyZWQgaW4gc3VjaCBtYWdhemluZXMgYXMgSW1hcmEsIENvcnBvcmF0ZSBDb2xvcnMgRSB6aW5lIGFuZCBFbnRlcnByaXNlIFZpcmdpbmlhLiBTaGUgaG9sZHMgYSBKdXJpcyBEb2N0b3IgZGVncmVlIGZyb20gUmVnZW50IFVuaXZlcnNpdHkgYW5kIGEgTWFzdGVycyBpbiBwdWJsaWMgcG9saWN5IGZyb20gTmV3IEVuZ2xhbmQgQ29sbGVnZS4uIApBbmQgd2hpbGUgaXQgc2VlbXMgInNtYXJ0IiB0aGF0IGhlIHdvdWxkIHN1cnByaXNlIGV2ZXJ5b25lIGxpa2UgdGhhdCwgZm9yIGFueW9uZSB3aG8ga25vd3MgaG93IHRvIHBsYXkgcG9rZXIsIHRoZSByZWFsIHJlYXNvbiBpdCdzIHNob2NraW5nIGlzIGJlY2F1c2Ugbm8gaWRpb3Qgd291bGQgaG9sZCBvbiB0byB0aG9zZSBjYXJkcyBpbiB0aGUgZmlyc3QgcGxhY2UuLiAKSSBoYXZlIGNvbnNpc3RlbnRseSByYWlzZWQgdG8gMTUgZG9sbGFycyBwcmVmbG9wIHdpdGggQWNlcyBhbmQgZ290dGVuIGF0IGxlYXN0IG9uZSBjYWxsZXIgc29tZXRpbWVzIDIuIApJdCBpcyBPSyEgSXQgb2sgdG8gYmUgcGlzc2VkLCB0byBmZWVsIGhlbHBsZXNzLCB0byBmZWVsIGRlc3BhaXIuIApCdXQgb2YgY291cnNlIHRoZSBvbGRlciBJIGdvdCBhbmQgbW9yZSBpbmRlcGVuZGVudCBJIGdvdCB0aGUgU2ltcyB3YXMgc3RpbGwgdGhlIG9uZSB0aGluZyB3ZSBjb3VsZCBzaGFyZS4gClRoYXQgd2FzIEhpdGxlciBpbiAxOTM5LiBQcmlvciB0byB0aGF0LCBTdGFsaW4gc291Z2h0IGFuIGFsbGlhbmNlIHdpdGggRnJhbmNlIGFuZCBCcml0YWluLCBhaW1lZCBhZ2FpbnN0IEdlcm1hbnkuIEJvdGggb2YgdGhlbSBzYXcgdGhlIE1vbG90b3YgUmliYmVudHJvcCBwYWN0IGFzIGEgd2F5IHRvIGJpZGUgdGhlIHRpbWUgd2hpbGUgZGVhbGluZyB3aXRoIG90aGVyIGlzc3VlcyAoRnJhbmNlIGFuZCBCcml0YWluIGZvciBHZXJtYW55LCBGaW5sYW5kIGFuZCB0aGUgQmFsdGljcyBmb3IgVVNTUiksIGJ1dCBub2JvZHkgY29uc2lkZXJlZCBldmVuIGZvciBhIHNlY29uZCB0aGF0IGl0IHdvdWxkIGNvbXBsZXRlbHkgYXZlcnQgdGhlIHdhci4gCkZvciBleGFtcGxlLCB0aGUgRm91ciBTZWFzb25zIFJlc29ydCBpbiBQdW50YSBNaXRhLCBNZXhpY28sIG9mZmVycyBhIHRlcXVpbGEgYW5kIHNhZ2Ugb2lsIG1hc3NhZ2UsIGJ1dCBpZiB0aGF0IHNvdW5kcyBhIGxpdHRsZSB0b28gcm93ZHkgZm9yIHlvdXIgdGFzdGUsIHRyeSB0aGUgaGFrYWxpIG1hc3NhZ2UgaW5zdGVhZC4gCkFzIG9mIHRoaXMgY29tbWVudCwgcmVtb3ZlZGRpdCBpcyBvbmx5IHNob3dpbmcgMSByZW1vdmVkIGNvbW1lbnQgZm9yIG1lLCBhbmQgaXQgc2hvd2luZyBhcyAiW3JlbW92ZWQgdG9vIHF1aWNrbHkgdG8gYmUgYXJjaGl2ZWRdIiB3aGljaCBtZWFucyBhdXRvbW9kZXJhdG9yIG9yIGEgc3BhbSBmaWx0ZXIgcHJvYmFibHkgZ290IHRvIGl0Li4gCkFzIGxvbmcgYXMgd2UgZW5zdXJlIHRoYXQgbm9ib2R5IGNhbiBldmVyIGVudGVyIG9yIGV4aXQsIHRoZW4gd2Ugd2lsbCBhbHdheXMgYmUgdGhlIG1vc3QgcG93ZXJmdWwgYmVpbmdzIG9uIHRoZSBwbGFuZXQuIApNb250aGx5IG9wZW4gc3R1ZGlvIEJyaW5nIHlvdXIgcHJvamVjdCB0byB0aGUgc3R1ZGlvIGFuZCB3b3JrIGFsb25nc2lkZSB5b3VyIGZlbGxvdyBtZXRhbHNtaXRocy4gVGhlcmUncyBub3RoaW5nIHF1aXRlIGFzIHdvbmRlcmZ1bCBhcyBhIGdyb3VwIG9mIHBlb3BsZSBtYWtpbmcgdGhpbmdzIHRvZ2V0aGVyLiAKT25lIHNpbXBsZSBpbnZlbnRpb24gY2hhbmdlZCBldmVyeXRoaW5nIGluIHRoZSBuaW5ldGllcywgd2hlbiAgIHRoYW5rcyB0byB0ZWNobm9sb2dpY2FsIGFkdmFuY2VzIG1hZGUgYXJvdW5kIHRoYXQgcGVyaW9kICAgaXQgaGFzIGJlY29tZSBwb3NzaWJsZSB0byB1c2Ugc21hbGwgc2l6ZWQgdW5vYnRydXNpdmUgY2FtZXJhcyB0byBzaG93IHZpZXdlcnMgdGhlIGhvbGUgY2FyZHMgb2YgdGhlIGNvbnRlc3RhbnRzIHdoaWxlIHRoZSBoYW5kcyB3ZXJlIGJlaW5nIHBsYXllZCBvdXQuLiAKSSBoYXZlIDMgeWVhcnMgb2YgZXhwZXJpZW5jZSBhbmQgYSBzbWFsbCBidXQgcG9zaXRpdmUgcmVwdXRhdGlvbiBoZXJlIHdoZXJlIEkgYW0sIHBsdXMgYSBjb3VwbGUgZ29vZCByZWZlcmVuY2VzLgpIZXIgd3JpdGluZyBmb2N1c2VzIG9uIGJ1c2luZXNzLCBjYXJlZXIgYW5kIHBlcnNvbmFsIGZpbmFuY2UgaXNzdWVzLiAKU2xpbSB3YXMgaW5kdWN0ZWQgaW50byB0aGUgUG9rZXIgSGFsbCBvZiBGYW1lIGluIDE5OTIgYW5kLCBhbG9uZyB3aXRoIERveWxlIEJydW5zb24sIHdhcyBvbmUgb2YgdGhlIGZldyBzdXJ2aXZpbmcgcGxheWVycyB0byBoYXZlIHBsYXllZCBpbiB0aGUgaW5hdWd1cmFsIFdTT1AgaW4gMTk3MC4KVGhlIHdlYXRoZXIsIHRoZSBhY3Rpdml0aWVzLCB0aGUgYWJpbGl0eSB0byBnZXQgdG8gYW55d2hlcmUgZWxzZSBpbiB0aGUgY291bnRyeSB3aXRoIGEgcmVsYXRpdmVseSBzaG9ydCBmbGlnaHQuIApUaGUgMTkxMyBsb2NvbW90aXZlIGFjcXVpcmVkIGJ5IHRoZSBBbGJlcnRhIFJhaWx3YXkgTXVzZXVtIGluIDE5NzEsIHdoaWNoIHNlcnZlZCBpbiB0aGUgRWRtb250b24gYXJlYSBpbiB0aGUgMTk1MHMgb24gd29yayBhbmQgd2VlZCB0cmFpbnMsIHdpbGwgYmUgYmFjayBpbiBhY3Rpb24gYXMgcGFydCBvZiB0aGUgUmFpbHMgYW5kIFRhbGVzIENhbmFkYSAxNTAgY2VsZWJyYXRpb25zLkFsb25nIHdpdGggdGhlIDE5MjAgQmFsZHdpbiA0MSBvd25lZCBieSBBbGJlcnRhIFByYWlyaWUgUmFpbHdheSwgdGhlIHN0ZWFtIGxvY29tb3RpdmUgd2lsbCBvcGVyYXRlIHNldmVyYWwgcGFzc2VuZ2VyIHRyaXBzIEp1bmUgMjggSnVseSA1IGZyb20gU3RldHRsZXIgdG8gQmlnIFZhbGxleSwgaW5jbHVkaW5nIGx1bmNoIGFuZCBkaW5uZXIgdHJpcHMsIGEgbW9ybmluZyBjcnVpc2UgYW5kIGEgaGlzdG9yaWNhbCBzaXRlIHZpZXdpbmcgdHJpcC5CdXQgZmlyc3QsIGl0IGhhcyB0byBtYWtlIHRoZSB0d28gaG91ciB0cmlwIGRvd24gdG8gU3RldHRsZXIgYW5kIHRoZSBmaXJzdCBwYXJ0IG9mIHRoYXQgcHJvY2VzcyBoYXBwZW5lZCBXZWRuZXNkYXksIHdoZW4gaXQgd2FzIGxvYWRlZCBvbnRvIHR3byBsb3dib3kgdHJhaWxlcnMsIG9uZSBmb3IgdGhlIGxvY29tb3RpdmUgaXRzZWxmIGFuZCB0aGUgb3RoZXIgZm9yIHRoZSB0ZW5kZXIgd2hpY2ggY29udGFpbnMgdGhlIGZ1ZWwgYW5kIHdhdGVyIG5lZWRlZCB0byBydW4uQWZ0ZXIgZm91ciBob3VycywgdGhlIDU1IHRvbm5lIGxvY29tb3RpdmUgd2FzIGhvaXN0ZWQgc2VjdXJlbHkgb24gdGhlIHRyYWlsZXIgd2l0aCBhIGZldyBidW1wcyBhbG9uZyB0aGUgcm9hZC5XaGVuIG1vdmluZyB0aGUgbG9jb21vdGl2ZSBvdXQgb2YgaXRzIHN0b3JhZ2UgYXQgdGhlIG11c2V1bSB5YXJkIGluIHRoZSBjaXR5IG5vcnRoZWFzdCBhdCAyNDIxNSAzNCBTdHJlZXQsIGl0IHRvb2sgc2V2ZXJhbCBhdHRlbXB0cyB0byBrZWVwIGl0IG9uIHRoZSB0cmFjayBhdCBhIHN3aXRjaC4gQWZ0ZXIgc2V2ZXJhbCBkaWZmZXJlbnQgdGFjdGljcywgYSBiYWNraG9lIGhhZCB0byBwaHlzaWNhbGx5IG1vdmUgdGhlIHRyYWNrIHRvIG1ha2UgaXQgbGVzcyBzaGFycCBvZiBhIGN1cnZlLkJ1dCBUZXJyeSBXb2xmZSwgaW4gY2hhcmdlIG9mIHRoZSBzdGVhbSBsb2NvbW90aXZlcyBmb3IgdGhlIG11c2V1bSwgc2FpZCB0aGlzIHdhc24gc29tZXRoaW5nIHRoZXkgY291bGRuIG92ZXJjb21lLCBldmVuIGlmIGl0IHdhcyBhIGxhcmdlciBjaGFsbGVuZ2UgdGhhbiB0aGV5IHdlcmUgZXhwZWN0aW5nLnRoZSB0aGluZyBhY3R1YWxseSBhYm91dCByYWlscm9hZGVycywgaGUgc2FpZC4gCk9uIGFueSBmbG9wIHlvdSBjb25uZWN0IGJpZywgbGV0IHRoZW0gc3BldyBpbnRvIHlvdS4gUHJvYmFibHkgdGhlIG1vc3QgcHJvZml0YWJsZSBzY2VuYXJpbyB5b3UgY2FuIGZpbmQgeW91cnNlbGYgaW4sIGp1c3Qgd2FpdCBmb3IgdGhlIGNhcmRzLgpUaGVpciB0cmVtZW5kb3VzIGxpdmUgaW4gcGxheSBiZXR0aW5nIGlzIHdoZXJlIHRoZXkgZXhjZWwgd2l0aCB0aGUgZXhvdGljcyBvbiBzZWxlY3RlZCBldmVudHMuVW5pYmV0IGFsc28gZmVhdHVyZXMgU3VwZXJUb3RvIGJldHRpbmcgd2hlcmUgcHVudGVycyBoYXZlIHRvIHByZWRpY3QgdGhlIHJlc3VsdCBvZiAxMCBzZWxlY3RlZCBldmVudHMuIApEaW5vc2F1cnB1bmNoZXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpJZiB5b3VyIGltbXVuZSBzeXN0ZW0ganVzdCBpZ25vcmVkIHRob3NlIHZpcnVzZXMgYW5kIGxldCB0aGVtIHRha2UgdGhlaXIgYmVzdCBzaG90IGF0IHlvdSwgeW91J2QgYmUgZmluZS4gCkkgYnV5IHlvdSBhIGRyaW5rLiBZZWFoPyIgU2hlIGVpdGhlciBhZ3JlZSAoWUVTISksIG1pZ2h0IGNoYW5nZSB0aGUgZGF5L3RpbWUgKFlFUyEpLCBvciB3aWxsIG1ha2UgYW55IG90aGVyIGV4Y3VzZSAoTk8pLiAKV1NPUCBvZmZpY2lhbHMgYW5ub3VuY2VkIE1vbmRheSBuaWdodCB0aGF0IDYsNDk0IHBsYXllcnMgd2lsbCBjb21wZXRlIGZvciAkNjEgbWlsbGlvbiBpbiBwcml6ZSBtb25leSwgd2l0aCB0aGUgY2hhbXBpb24gd2lubmluZyAkOC41NSBtaWxsaW9uLgpCYWNrcGFnZSBoYXMgYXJndWVkIHRoYXQgaXQgbWVyZWx5IHB1Ymxpc2hlcyBhZHZlcnRpc2VtZW50cyB0aGF0IGFyZSBjcmVhdGVkIGFuZCBwcm92aWRlZCBieSBvdGhlcnMsIGJ1dCB0aGUgV2FzaGluZ3RvbiBTdXByZW1lIENvdXJ0IHJ1bGVkIGxhc3QgeWVhciB0aGF0IHRoZSBjb21wYW55IGRpZG4ndCBqdXN0IGhvc3QgdGhlIGFkcywgYnV0IGhlbHBlZCBkZXZlbG9wIHRoZSBjb250ZW50LgpJIGdvaW5nIHRvIGFzc3VtZSB0aGF0IGV2ZXJ5IHBhcnRuZXIgeW91IGV2ZXIgaGFkIGFuZCBldmVyeSBzaW5nbGUgZ3V5IHlvdSB3ZXJlIGF0dHJhY3RlZCB0byB3YXMgdGFsbGVyIHRoYW4geW91LiAKSXQgdGFrZXMgZW5lcmd5IGVhY2ggZGF5IHRvIGtlZXAgdGhlIGFybSBhY3R1YXRvcnMgYWJvdmUgdGhlaXIgc3Vydml2YWwgdGVtcGVyYXR1cmVzLiBSaWdodCBub3csIEluU2lnaHQgaXMgcG93ZXIgcmljaCwgYnV0IGxhdGVyIG9uIGFmdGVyIG11Y2ggZHVzdCBhY2N1bXVsYXRpb24gdGhlcmUgbWF5IG5vdCBiZSBlbm91Z2ggcG93ZXIgdG8gaGVhdCB0aGUgYXJtIGFuZCBydW4gdGhlIHNjaWVuY2UgaW5zdHJ1bWVudHMuIFdoZW4gdGhhdCBoYXBwZW5zLCB0aGUgYXJtIHdpbGwgYmUgYWxsb3dlZCB0byBzbyB0aGUgaW5zdHJ1bWVudHMgY2FuIGtlZXAgbW9uaXRvcmluZy4uIApUaGlzIGlzIGFub3RoZXIgaW5zdGFsbG1lbnQgaW4gYSBzZXJpZXMgb24gcHV0dGluZyBjb2xvciBpbnRvIHdoYXQgd2Ugbm9ybWFsbHkgd291bGQgdGhpbmsgb2YgaW4gdGVybXMgb2YgYmxhY2sgYW5kIHdoaXRlIHBob3RvcyAoYW5kIG1vdmllcykgdGhlIHJlc3VsdHMgYXJlIHNvbWV0aW1lcyBzdXJwcmlzaW5nIGFuZCB1bnVzdWFsLiAKRXZlbnR1YWxseSB0aGUgaW5zdXJhbmNlIGNvbXBhbnkgd2lsbCBwdXNoIGZvciBhIGZpbmFsIHNldHRsZW1lbnQgaWYgdGhlIHJlY292ZXJ5IHByb2Nlc3MgaXMgdGFraW5nIHRvIGxvbmcuIApQb2xpY2UgbGF5IGFkZGl0aW9uYWwgc2V4dWFsIGFzc2F1bHQgY2hhcmdlcyBhZ2FpbnN0IG1hc3NhZ2UgdGhlcmFwaXN0CkJlY2F1c2UgYnVyZWF1Y3JhdHMgZGVjaWRlZCBpdCB3b3VsZCBiZSB1bnJlYXNvbmFibGUgdG8gZGVzdHJveSBldmVyeW9uZSBiYW1ib28gdGhpbmdzIGZvciBubyByZWFzb24ganVzdCBpbiBjYXNlIHRoZXkgaGFkIHNvbWUgaW52aXNpYmxlIGRpc2Vhc2Ugb24gaXQsIHRoZXkgZmlndXJlZCB0aGV5IHdvdWxkIGNyZWF0ZSBhIHN5c3RlbSB0aGF0IHRyYXZlbGxlcnMgY291bGQgdXNlIHRvIGdldCBhcHByb3ZhbCBhbmQgZ2V0IHRoZWlyIHN0dWZmIGxhYmVsZWQgYXMgc2FmZSB0byBlbnRlciB0aGUgY291bnRyeSB3aXRob3V0IHJlbHlpbmcgb24gdGhlIGN1c3RvbXMgcGVvcGxlIHRvIGd1ZXNzIGlmIGl0IG9rYXkgb3Igbm90IChJbXBvcnQgcGVybWl0cykuIElmIHlvdSBkb24gZ2V0IGFuIGltcG9ydCBwZXJtaXQsIHlvdSByZWx5aW5nIG9uIHRoZSBDQlAgZ3V5LCB3aG8gaGFzIG5vIHNwZWNpYWxpc3QgdHJhaW5pbmcgd2hhdHNvZXZlciBiZWNhdXNlIGhlIG5lZWRzIHRvIHJlZ3VsYXRlIGFib3V0IGEgbWlsbGlvbiB0aGluZ3MsIHRvIG1ha2UgdGhlIHJpZ2h0IGRlY2lzaW9uLiAKQW5kIHRoZW4gSSB0aGluayBJIGNvdWxkIGhhdmUgaW1hZ2luZWQgaXQgYnV0IHRoZW4gYW5vdGhlciBwYXJ0IHNlZXMgaG93IG9idmlvdXMgaXQgd2FzIHdoYXQgaGUgZGlkLiBJIGdvb2dsZWQgaXQgYW5kIHRoaXMgZG9lcyBub3Qgc2VlbSBjb21tb24gYmVpbmcgZWphY3VsYXRlZCBvbiBkdXJpbmcgYSBtYXNzYWdlLi4gCihsaWtlIHRoZSB3YXkgdGhlcmVzIGEgcG9wZSBpbiBjYXRob2xpY2lzbSkgU28gaWYgYSBSYW5kb20gSW1hbSBzdGFydHMgcmVmZXJlbmNpbmcgYW4gb2xkIGFuZCBvYnNjdXJlIGhhZGl0aCBhbmQgdGVhY2hlcyBvdXRkYXRlZCBsZXNzb25zIG9uIGl0LCB0aGVyZSBubyBwb3BlIGZpZ3VyZSB0byBzYXkgIkxpc3RlbiB0aGlzIGd1eSBpcyB3cm9uZywgdGhpcyBpcyBob3cgZ29kIHdhbnRzIHVzIHRvIGludGVycHJldGUgdGhpcyBsaW5lLiIgV2hpY2ggYWxsb3dzIGZvciB2aXJ0dWFsbHkgYW55IGludGVycHJldGF0aW9uIG9mIHRoZSBtYXRlcmlhbC4gCkJlY2F1c2UgdGhlIGRldmljZSBvcGVucyB3aWRlbHkgYW5kIGJlbmRzIHNvbWV3aGF0IGluIHRoZSBtaWRkbGUsIEkndmUgZXZlbiBnb3R0ZW4gaXQgYWxsIHRoZSB3YXkgdXAgdG8gbXkgaGlwIGZsZXhvcnMuIFRoZSByb2xsaW5nIGl0c2VsZiBodXJ0LCBidXQgZWFjaCBhcmVhIGNhbWUgYXdheSBmZWVsaW5nIHJlZnJlc2hlZCBhbmQgbGltYmVyLCByZWFkeSB0byBwZXJmb3JtIGFnYWluLiBJIHN1cHBvc2UgaXQgd291bGQgYWxzbyB3b3JrIG9uIGNlcnRhaW4gbXVzY2xlcyBpbiB0aGUgYXJtcy4KNiBQZW9wbGUgU2VudGVuY2VkIGluIEh1bWFuIFRyYWZmaWNraW5nIENhc2UKVG9kYXkgYW5ub3VuY2VtZW50IGlzIGRpc2FwcG9pbnRpbmcuIE1vcmUgdGhhbiAyMDAsMDAwIEFya2Fuc2FucyBzaWduZWQgb3VyIHBldGl0aW9uIGFuZCB0aG91c2FuZHMgbW9yZSB1bmRlcnN0YW5kIHRoaXMgaXMgYWJvdXQga2VlcGluZyBvdXIgbW9uZXkgaW4gQXJrYW5zYXMgYW5kIGNyZWF0aW5nIG1vcmUgdGhhbiA2LDAwMCBnb29kIHBheWluZyBqb2JzIGluIHRoZSBzdGF0ZS4gQSB0cmFjayBmdWxsIG9mIG1vbmV5ZWQgaW5zaWRlcnMgZm91Z2h0IG1lIGV2ZXJ5IGluY2ggb2YgdGhlIHdheSBhbmQgd2hpbGUgdGhleSBtYXkgaGF2ZSB0b2RheSwgaXQgdGhlIHBlb3BsZSBvZiBBcmthbnNhcyB3aG8gaGF2ZSBsb3N0IGluIHRoZSBsb25nIHJ1bi4KSG9va2VyIGFuZCB0aGUgZ2FuZyBtZWV0IHVwIGF0IHRoZSBwb2xpY2Ugc3RhdGlvbiBhbmQgZXhjaGFuZ2Ugd29yZHMgb3V0c2lkZSBvZiB0aGUgcm9hY2ggY29hY2ggSG9va2VyIGFuZCBBZHJpYW4gd2VyZSBqdXN0IGV4YW1pbmluZyBhIHBhcnQgb2YuIEhlIGFuZCBBZHJpYW4gZ2V0IGluIHRoZWlyIGNhciBhbmQgQWRyaWFuIHNheXMgc29tZXRoaW5nIGFsbCBwdXBweSBkb2cgaG9wZWZ1bCBhYm91dCB3aGF0IGp1c3Qgd2VudCBkb3duLCB3aGlsZSBIb29rZXIgZ2l2ZXMgaGltIGEgbG9uZyBsb29rIG9mICJkb24ndCBnZXQgeW91ciBob3BlcyB1cCwga2lkLiIgVGhlIGdhbmcgbWVldHMgdXAgYXQgdGhlIHdhcmVob3VzZSB3aGVyZSB0aGUgYmFkIGd1eSBnb3QgaGlzIGZha2UgSUQgYW5kIGRldG9uYXRvciBjb3JkIGVhcmxpZXIsIGFuZCB0aGUgSzkgZmluZHMgZGV0b25hdG9yIGNvcmQgaGlkZGVuIGluIGEgdmlkZW8gZ2FtZSBtYWNoaW5lLiAKSXQgZmVhdHVyZXMgYSBjaGVycnkgZmluaXNoIGFuZCBpdCdzIG1hZGUgb3V0IG9mIG9hay4gRXNzZXggcG9rZXIgZGluaW5nIHRhYmxlcyB3aWxsIHNlYXQgZm91ciBwbGF5ZXJzLiBDdXAgaG9sZGVycyBhbmQgY2hpcCB0cmF5cyBhcmUgaW5jbHVkZWQuIApJIGxpa2UgdGhlIHRob25nIHBhbnRpZXMgYXMgY2FsbGluZyBjYXJkcy4gCkZXSVcsIEkgaGFkIGEgcG9zaXRpdmUgZXhwZXJpZW5jZSByZW50aW5nIGEgMUJSIGluIHNoYWR5c2lkZSBmcm9tIEdyZXZlLiBJIGRpZG4ndCBsaWtlIHNvbWUgb2YgdGhlIGxhbmd1YWdlIGluIG15IGxlYXNlIHRoYXQgd291bGQgYXV0b21hdGljYWxseSBmb3JmZWl0IHNvbWUgb2YgbXkgcmlnaHRzIGlmIGhlIHNhaWQgSSBkZWZhdWx0ZWQgb24gcGF5bWVudCwgYW5kIERhdmlkIHRoZSBtYW5hZ2VyIHRvb2sgb3V0IHRoYXQgcGFyYWdyYXBoIHdpdGggbm8gaXNzdWVzLiAKRXQgZGVwdWlzIGxlIHRlbXBzIHF1ZSBhIGR1cmUgICAxODUyICAgb24gbmUgcyBwYXMgZGUgY2V0dGUgcHJtaW5lbmNlLikuIApUaGUgZGV2cyBkaWQgdGhpcyB0byB0aGVtc2VsdmVzLiBUaGV5IGNyZWF0ZWQgYSBkaXZpZGUgYmV0d2VlbiBoYXJkY29yZSBhbmQgY2FzdWFsIGJ5IGplb3BhcmRpemluZyBnYW1lcGxheSBpbnRlZ3JpdHkgZm9yIG1hc3MgYXBwZWFsIGFuZCBiZWluZyBzbXVnIGFib3V0IGl0LiBZb3UgY2FuIGFwb2xvZ2l6ZSBhbGwgeW91IHdhbnQgYnV0IHVudGlsIHRoZXkgZnVuZGFtZW50YWxseSBjaGFuZ2UgcmV0YWlsIHRoZXkgd2lsbCBjb250aW51ZSB0byBzZWUgcHVzaGJhY2suIApCdXQgdGhpcyBvbmUganVzdGhhZCBtZS4gClRlYW0gYXQgRmFjZWJvb2sgd2lsbCB1c2UgZ3VpZGVsaW5lcyBiYXNlZCBvbiB0aGUgbW9zdCB3aWRlbHkgZGVidW5rZWQgdmFjY2luZSBob2F4ZXMgcHVibGlzaGVkIGJ5IGhlYWx0aCBleHBlcnRzLCBpdCBzYWlkLiBmcm9tIHZpb2xhdGluZyBncm91cHMgYW5kIHBhZ2VzIGNvbnRhaW5pbmcgdGhlc2UgaG9heGVzIHdpbGwgYXBwZWFyIGxvd2VyIGluIE5ld3MgRmVlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGZyb20gc2VhcmNoIHJlc3VsdHMgYW5kIGdyb3VwIHJlY29tbWVuZGF0aW9ucy4gYW50aSB2YXh4ZXJzIGhhdmUgdXNlZCBzb2NpYWwgbWVkaWEgdG8gc3ByZWFkIG1pc2luZm9ybWF0aW9uIGFib3V0IHRoZSBoaWdobHkgY29udGFnaW91cyBkaXNlYXNlLCBzb21lIG1haW50YWluaW5nIHRoZSBtZWFzbGVzLCBtdW1wcyBhbmQgcnViZWxsYSBvciBNTVIgdmFjY2luZSBjYXVzZXMgYXV0aXNtIGRlc3BpdGUgdGhhdCBiZWxpZWYgYmVpbmcgcmVwZWF0ZWRseSBkZWJ1bmtlZCB0aHJvdWdoIHNjaWVudGlmaWMgcmVzZWFyY2guCkkgdG9vayB0byBjb2xsZWdlIGJlY2F1c2UgSSB3YXMgYSBtZXNzLiAKU28gYXJlIHRoZSBHZXJtYW4gcmVzZWFyY2hlcnMgY29ycmVjdCB0aGF0IHBva2VyIHNob3VsZCB0aHVzIGJlIGNsYXNzaWZpZWQgYXMgZ2FtYmxpbmc/IE5vdCBuZWNlc3NhcmlseS4gQSAyMDA4IHN0dWR5IGNvbmNsdWRlZCB0aGF0IHBva2VyIGlzIGEgc2tpbGwgICBzdHVkZW50cyB3aG8gcmVjZWl2ZWQgc29tZSBiYXNpYyBwb2ludGVycyBwZXJmb3JtZWQgYmV0dGVyIHdoaWxlIHBsYXlpbmcgMTAwMCBoYW5kcyBvZiBwb2tlciB0aGFuIHRob3NlIHdobyByZWNlaXZlZCBubyB0cmFpbmluZyBhdCBhbGwuIApIZXJlJ3MgdGhlIHRhYmxlLCBuZXdzcGFwZXIsIGN1cCBvZiBjb2ZmZWUsIHBhY2tldCBvZiBjb29raWVzLiBUaGVyZSdzIGEgZ3V5IHNpdHRpbmcgb3Bwb3NpdGUgbWUsIHBlcmZlY3RseSBvcmRpbmFyeSBsb29raW5nIGd1eSB3ZWFyaW5nIGEgYnVzaW5lc3Mgc3VpdCwgY2FycnlpbmcgYSBicmllZmNhc2UuIApDYW4gYmUgc28gbXVjaCBoeXBlLCBidXQgcGVvcGxlIG5lZWQgdG8gYmUgYXdhcmUgYWxsIHRoZSBpbmZvcm1hdGlvbiBvbiB0aGUgaW50ZXJuZXQgaXMgbm90IGNvbWluZyBmcm9tIGV4cGVydHMuIEFydGh1ciBzaGFyZXMgaGlzIHBhc3Npb24gZm9yIGhlaXJsb29tIHRvbWF0b2VzIGFuZCBob3cgaGUgY2FtZSB0byBoYXZlIDQwIGphcnMgb2YgY3VjdW1iZXIgcGlja2xlcywgQWxleCBBdWd1c3R5bmlhaywgZ2VuZXJhbCBtYW5hZ2VyIG9mIFdlc3Rjb2FzdCBTZWVkcywgd2lsbCB0YWtlIHRvIHRoZSBHYXJkZW4gU3RhZ2Ugd2l0aCBpbnNpZGVyIHRpcHMgb24gaG93IHRvIGNob29zZSB0aGUgcmlnaHQgc2VlZHMgZm9yIHRoZSByaWdodCBwbGFjZSBpbiB5b3VyIGdhcmRlbiB3aGV0aGVyIGl0IGEgYmFsY29ueSBpbiBhIGhpZ2ggcmlzZSBvciBhIGJhY2t5YXJkIGluIHRoZSBzdWJ1cmJzLmlzIGEgZ29vZCB0aW1lIHRvIGRlY2lkZSB3aGF0IHRvIHBsYW50LiAKQSBNb3JlIGRldGFpbGVkIGRlc2NyaXB0aW9uIG9mIHRoZSB0YWJsZSBiZWxvdwpBZnRlciBJIHdva2UgdXAgSSB3YXMgaW4gYSBjYXIgbGF5aW5nIGluIHRoZSBiYWNrIHNlYXQgbXkgbW9tIHdhcyBzaXR0aW5nIHdpdGggbWUgaG9sZGluZyBteSBoZWFkIGFuZCBteSB1bmNsZSB3YXMgaG9sZGluZyBteSBmZWV0IHdpdGggYSBsYXJnZSBibHVlIGJlYWNoIHRvd2VsIHdyYXBwZWQgYXJvdW5kIG15IGZvb3QgSSB3b2tlIGJlY2F1c2Ugb2YgdGhlIGludGVuc2UgcHJlc3N1cmUgaGUgd2FzIGFwcGx5aW5nIHRvIG15IGZvb3QgbXkgZmlyc3Qgd29yZHMgd2VyZSBhIHNjcmVhbSB0aGVuIEkgdG9sZCBoaW0gaGUgd2FzIGNydXNoaW5nIG15IGZvb3QuIFRoZSB0b3dlbCBhdCB0aGlzIHBvaW50IHdhcyBkcmVuY2hlZCB3aXRoIGJsb29kLiBJIGxvb2tlZCB1cCBhdCBteSBtb20gc2hlIHRvbGQgbWUgdG9vIGJlIGNhbG0gYW5kIHNvIEkgd2FzIHN0aWxsIGluIHNvbWUgc3RhdGUgb2Ygc2hvY2sgSSBhc3N1bWUgSSBhc2tlZCBoZXIgaWYgSSB3YXMgZ29pbmcgdG8gZGllLiAKV2hlbiBpdCBleHBsb2RlZCBpdCB0aHJldyBnYXMgYWxsIG92ZXIgbXkgbGVnLiAKT2ggeWVhaCBtYW4uIFdlbGwsIHNob3VsZCBiZSBzaW5jZSB0aGV5IGFyZSB3YXkgbW9yZSBsYXggdGhhbiBVUy4gCkFtb25nIHRoZSBudW1lcm91cyBkaWZmZXJlbnQgdmFyaWV0aWVzIG9mIGNoaXBzLCB0aGUgb25lcyB1c2VkIGluIGhvbWUgc2V0dGluZ3MgYXJlIG1hc3MgY3JlYXRlZCwgcGxhc3RpYyB2ZXJzaW9ucy4gCkkgYW0gZ2xhZCB0aGF0IEkgd2Fzbid0IHByZWduYW50IGJlZm9yZSBJIGdvdCB0aGlzIGZsdSwgdGhvdWdoLCBiZWNhdXNlIG15IGZldmVycyBnb3Qgc28gaGlnaCBpdCB3b3VsZCBoYXZlIGNhdXNlZCBiYWJ5IGJyYWluIGRhbWFnZS9jYXVzZWQgYSBtaXNjYXJyaWFnZSBJIHRoaW5rLiAKRG8gSSBhZ3JlZSB3aXRoIGl0PyBJIG1lYW4sIHNvcnQgb2YuIEZlbWluaXNtIGlzIGFib3V0IHNvY2lhbCBhbmQgZWNvbm9taWMgaW5lcXVhbGl0eSwgd2hpY2ggZG9lc24gaW5jbHVkZSBkZW5pYWwgb2YgdGhlIG9iamVjdGl2ZSBmYWN0IHRoYXQgaHVtYW5zIGFyZSBzZXh1YWxseSBkaW1vcnBoaWMgYW5kIG1lbiBhbmQgd29tZW4gYm9kaWVzIGRvIGhhdmUgc29tZSBpbmhlcmVudCBkaWZmZXJlbmNlcy4gSSBub3QgYSBtaWxpdGFyeSBleHBlcnQgaGVyZSBhbmQgZG9uIGtub3cgZW5vdWdoIGFib3V0IGNvbWJhdCB0byBjb21tZW50LCBidXQgSSBkb24gdGhpbmsgaXQgbWFrZXMgc2Vuc2UgdG8gaGF2ZSAiZXF1YWxpdHkiIGluIHBvc2l0aW9ucyB0aGF0IGdyZWF0bHkgZGVwZW5kIG9uIHB1cmUgcGh5c2ljYWwgc3RyZW5ndGgsIGNvbnNpZGVyaW5nIHRoYXQgYWxtb3N0IGFsbCBtZW4gYXJlIHN0cm9uZ2VyIHRoYW4gYWxtb3N0IGFsbCB3b21lbi4gQnV0IGlmIHRoZXJlIHdlcmUgYSB0aW1lIHdoZW4gdGhlIGRyYWZ0IHdhcyByZWluc3RhdGVkLCBJIGd1ZXNzIGl0IG1ha2VzIHNlbnNlIHRoYXQgZXZlcnlvbmUgd291bGQgaGF2ZSB0byBjb250cmlidXRlIGluIHNvbWUgd2F5LiA0NiBwb2ludHMgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnbwpUaGUgZmFjaWxpdHkgaXRzZWxmIGlzIGh1bWJsZSwgaW4gYSByZWxhdGl2ZWx5IHNtYWxsIHR3byBzdG9yeSBvZmZpY2UgcGFyayBpbiBHdW5iYXJyZWwuIEJ1dCBpdCdzIGludGVudGlvbmFsIGFuZCBkZXRhaWxlZCwgYWNjZW50ZWQgYnkgc2hlbHZlcyBvZiBzaWx2ZXIgamFycyBmaWxsZWQgd2l0aCBoZXJicywgYW5jaWVudCBsb29raW5nIGJvd2xzIGFuZCBoYW5naW5nIGJ1Y2tldHMgZnVsbCBvZiBob3Qgb2lscyBhbmQgd2FybSBoZXJiYWxpemVkIHBhc3RlcywgYW5kIGEgZGltLCBxdWlldCByZWxheGF0aW9uIHJvb20gd2l0aCBjb3VjaGVzIGFuZCB0ZWEgY3VwcyBsaW5pbmcgdGhlIHRhYmxlLiBUaGUgcm9vbXMgYXJlIGtlcHQgd2FybSAgIHRoZSBzZXBhcmF0ZSBzcGEgYXJlYSB1cHN0YWlycywgYW5kIERvdWlsbGFyZCdzIG9mZmljZSBhbmQgcmVjZXB0aW9uIGFyZWEgKHdoZXJlIHlvdSBjYW4gYnV5IHNwZWNpYWwgZGV0b3ggZm9vZHMsIGhlcmJzIGFuZCBib29rcykgZG93bnN0YWlycy4uIApHYXdkemlsbGVycyAgNyBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClNoYXJlIHlvdXIgZGlldHMsIG1lYWxzLCBneW0gcm91dGluZXMsIGZhbWlseSBwcm9ibGVtcywgTlNWL1NWcywgZXhwZXJpZW5jZXMgd2l0aCBXTFMsIHRoZXJhcHksIGV0Yy4gQW55dGhpbmcgaW4geW91ciBsaWZlIHRoYXQgeW91IHdhbnQgdG8gc2hhcmUuCkkgZG8gdGhpbmsgdGhhdCB5b3Ugc2hvdWxkIHJlYWxseSBjb25zaWRlciBzdGlsbCBnaXZpbmcgMTAlLiBVc3VhbGx5IGluIHRoZSBjaHVyY2gsIHRoZXkgdGVhY2ggdGhhdCAxMCUgaXMgYSByZWFzb25hYmxlL2FwcHJvcHJpYXRlIGFtb3VudCB0byBnaXZlIGFuZCB5b3UgZGlkIHNheSB0aGF0IHRoZSBjaHVyY2ggaGFzIGRvbmUgYSBsb3QgZm9yIHlvdS4gClR5cGVzIG9mIE1hc3NhZ2UgZm9yIFRyaWF0aGxldGVzCkVudGVydGFpbm1lbnQgYnkgVGhlIERvbid0IExhdWdoIEF0IE1lIFBsYXllcnMgYW5kIHRoZSBiYW5kICJDbG9zdXJlIiB3aWxsIGJlIHByb3ZpZGVkLiBBIGRyYXdpbmcgZm9yIGEgYnJhbmQgbmV3IHRlbGV2aXNpb24gc3BvbnNvcmVkIGJ5IEZhcm1lcnMgSW5zdXJhbmNlIENvbXBhbnkgYW5kIGx1bmNoIGNhdGVyZWQgYnkgQnJpY2sgT3ZlbiBQaXp6YSB3aWxsIGJlIGFtb25nIHRoZSBoYXBwZW5pbmdzIGF0IFppb24gSGFybGV5IERhdmlkc29uLgpMYXN0bHkgaXQganVzdCBhIHdlbGwgd3JpdHRlbiBmdW4gcmlkZSBmaWxsZWQgd2l0aCBsZXZpdHkoZXNwZWNpYWxseSB0aGUgZWFybHkgY2hhcHRlcnMpIHdoaWNoIGluZGVhcnMgdXMgdG8gdGhlIGNoYXJhY3RlcnMgYW5kIGludGVuc2UvZGFyayBhY3Rpb24gd2hlbiB0aGluZ3MgZ2V0IHNlcmlvdXMgcGxvdCB3aXNlLiBCb3RoIHRoZXNlIHRvbmVzIHBlcmZlY3RseSBtaXggdHJ1bHkgY3JlYXRpbmcgYSB3b3JsZCB3aGljaCBmZWVscyBhbGl2ZS4KSSB2ZXJ5IHJhcmVseSB3ZWFyIG1ha2V1cC4gSSB3YXNoIG15IGZhY2Ugd2l0aCBqdXN0IHdhdGVyIGluIHRoZSBtb3JuaW5nLiAKQmUgd2FyeSBvZiAiZG91YmxlIG9yIG5vdGhpbmciIHN0YWtlcy4gV2hpbGUgeW91IGNvdWxkIGVuZCB1cCBtdWx0aXBseWluZyB5b3VyIHdpbm5pbmdzLCB5b3UncmUgbW9yZSBsaWtlbHkgdG8gbG9zZSBhIGJpZyBwb3J0aW9uIG9mIHlvdXIgYmFua3JvbGwgYW5kIHdhbGsgYXdheSB3aXRoIG5vdGhpbmcgdG8gc2hvdyBmb3IgeW91ciBlZmZvcnRzLgoiSSBhbSBzdGlsbCB3b3JyaWVkIHRoYXQgdGhleSBoYXZlIGEgYmlnIHJlc29ydCBkZXZlbG9wbWVudCBpbiB0aGUgYmFjayBvZiB0aGVpciBtaW5kcy4iU29tZW9uZSBpbiB0aGUgbWVldGluZyBhc2tlZCB3aHkgdGhlIFBhaXV0ZXMgZG9uIGNvbWUgYmFjayB0byB0aGUgdG93biB3aXRoIGEgbW9yZSBkaXN0aW5jdCBwbGFuIGJlY2F1c2UgdGhlIHRvd24gd291bGQgYmUgd2lsbGluZyB0byBsaXN0ZW4sIGJ1dCB0aGV5IHNhaWQgbm8uIFdoZW4gaXQgYWxsIGJvaWxzIGRvd24gdG8gaXQsIHRoZXkgZG9uIHdhbnQgdG8gaGF2ZSB0byBwYXkgdGF4ZXMsIENsdWZmIHNhaWQuQW1lcmljYW5zIHdlcmUgbmV2ZXIgc3VwcG9zZWQgdG8gcGF5IGZvciBwcm9wZXJ0eSB0YXhlcywgUm9iYiBzYWlkLiAKQXQgdGhhdCBwb2ludCwgSSBjaGVjayBiYWNrLCBhbmQgYXQgbGVhc3Qgc2F2ZSBteXNlbGYgZnJvbSBzcGVjdWxhdGluZyB3aGV0aGVyIG9yIG5vdCBpdCB3YXMgYSBibHVmZi4gTW9zdCBvZiB0aGUgdGltZSwgSSBoYXZlIHRvIGNhbGwgdGhlIHR1cm4gd2l0aCBteSBjaGVjay9jYWxsIGhhbmQsIHNvIHdoeSBub3QganVzdCB3YXN0ZSBteSBiZXQgb24gdGhlIGZsb3AgYW5kIGF0IGxlYXN0IGdldCBzb21lIGluZm9ybWF0aW9uIG91dCBvZiBpdD8uIApFaWdlbnRsaWNoIG11c3MgaWNoIG5vY2ggZnJvaCBzZWluLCBkYXNzIGljaCBub2NoIG5pY2h0IHBsZWl0ZSBiaW4sIGRlbm4gZGllc2UgTWVuZ2UgYW4gQmFkIEJlYXRzIGRpZSBpY2ggaW4gZGVuIGxldHp0ZW4gVGFnZW4gZWluc3RlY2tlbiBtdXNzdGUsIHZlcmtyYWZ0ZXQgbm9ybWFsZXJ3ZWlzZSBlaW5lIHNvIGtsZWluZSBCYW5rcm9sbCB3aWUgZGllIG1laW5pZ2UgbmljaHQgbGVpY2h0LiAKQnV0IHRoZSB0aXBwaW5nIHBvaW50IGZvciBsYXJnZSBzdXBwbGllcnMgbWF5IGJlIG11Y2ggc2ltcGxlcjogSXQncyBhYm91dCBwcm9maXRhYmlsaXR5LgpQcmFjdGl0aW9uZXJzIGJlbGlldmUgdGhhdCBwcmVzc3VyZSBvbiByZWZsZXggcG9pbnRzIG9uIHRoZSBmb290IG9yIGhhbmQgd2lsbCBhZmZlY3QgYm9keSBvcmdhbnMgaW4gdGhlIHNhbWUgem9uZS4uIAoiSSBmZWVsIGxpa2UgdGhhdCdzIHdoYXQgbWFrZXMgdGhlIGdyZWF0ZXN0IGltcGFjdCwiIEluZ3JhbSBzYWlkIGFmdGVyIHByYWN0aWNlIG91dHNpZGUgTG9uZG9uLiAiQW5kIHRoYXQncyB3aGF0IHdlJ3JlIHRyeWluZyB0byBicmluZywgaXMgdW5pdHksIGFuZCB0byBicmluZyB0aGlzIHdvcmxkIHRvZ2V0aGVyLiBXaGVuIHRoZSBlbnRpcmUgdGVhbSBkb2VzIHNvbWV0aGluZywgdGhlIHNhbWUsIEkgdGhpbmsgaXQncyBqdXN0IG1vcmUgcG93ZXJmdWwgdGhhdCB3YXkuIgpJdCBub3QgYWJvdXQgdGhlIG5hdGlvbmFsIGludGVyZXN0IGF0IGFsbC4gVW5saWtlIFNoYXVrYXQgQXppeiB3aG8gd2lsbCBwcm9iYWJseSBsYW5kIHVwIGluIE5ldyBZb3JrIHRvIHNldCB1cCBhIHByaXZhdGUgZXF1aXR5IGZ1bmQgb3Igd29yayBmb3IgdGhlIENhcmx5bGUgR3JvdXAgaWYgdGhpcyBkb2VzbiBnbyB3ZWxsLCBHZW5lcmFsIE11c2hhcnJhZiBoYXMgbm8gcmVhbCBtYXJrZXRhYmxlIHNraWxscyBpbiB0aGUgcmVhbCB3b3JsZC4gVGhlIHNwZWN0cmUgb2YgcmV0aXJlbWVudCBjb3VsZG4gYmUgdGVycmlibHkgZXhjaXRpbmcgZm9yIGEgbWFuIHdobyBoYXMgcnVsZWQgYSBjb3VudHJ5IG9mIDE2MCBtaWxsaW9uIGFzIGhpcyBwZXJzb25hbCBlc3RhdGUgZm9yIHRoZSBsYXN0IG5pbmUgeWVhcnMuLiAKQ291cGxlZCB3aXRoIHRoaXMgaXMgYSBjb3NtZXRpYyBzdXJnZXJ5IGluZHVzdHJ5IHRoYXQgcHJvbWlzZXMgdG8gcmVzaGFwZSBvdXIgcmVhbCBib2RpZXMgdG8gbWFrZSB0aGVtIGxvb2sgbW9yZSBsaWtlIHRoZSB0d28gZGltZW5zaW9uYWwgb25lcyB3ZSBzZWUgb24gc2NyZWVuIGFuZCBvbiBiaWxsYm9hcmRzLiAKVGFsayB0byBtZSBpbiBhZHZhbmNlOiBZb3Uga25vdyBteSB0cmF2ZWwgcGF0dGVybnMsIHNvIGdpdmUgbWUgc29tZSB0aW1lIHRvIHJlYWN0IHRvIGFuIGFkLiBUZWxsIG1lIGFib3V0IGEgZ29vZCBzdXNoaSBkZWFsIChvciBkaWFwZXIgc2FsZSkgYSBmZXcgZGF5cyBiZWZvcmUgSSBtYXkgd2FudCB0byBhY3QuIEFuZCBnaXZlIG1lIGFuIGVhc3kgd2F5IHRvIHNhdmUgdGhlIGRlYWwgYmUgcmVtaW5kZWQgYWJvdXQgaXQuIApPbmNlIHlvdSBoYXZlIHRoYXQgZG9uZSwgbm93IHlvdSBjYW4gdG9wIGNvYXQuIElmIHlvdSBzdGF0ZSBzaWRlLCB5b3Ugc3RpbGwgaGF2ZSB0aGUgb3B0aW9uIG9mIG9pbCBiYXNlZCBwYWludHMgZm9yIHJlZ3VsYXIgaW50ZXJpb3IgdXNlLCBnbyBmb3Igd2hpY2ggZXZlciBzaGVlbiB5b3Ugd2FudCwgY3VwYm9hcmRzIGFyZSB0eXBpY2FsbHkgYXQgbGVhc3Qgc2VtaWdsb3NzLCBtb3N0bHkgZm9yIGxvb2tzIGFuZCBlYXNlIG9mIGNsZWFuaW5nLiBCZSB3YXJlIHRoYXQgdGhlIGhpZ2hlciB0aGUgZ2xvc3MgdGhlIGVhc2llciBpdCBpcyB0byBzcG90IGFuZCBtaXN0YWtlcy4gClBva2VyIGlzbid0IGxpa2UgaXQgdXNlZCB0byBiZQpBcyBhIGRlZmVuZGVyIHlvdSBmZWVsIGhlbHBsZXNzIHdoZW4geW91IGtub3cgdGhhdCB5b3UgY2FuIGxldCBoaW0gc2hvb3QgdGhlIHRocmVlIGFuZCBpZiB5b3UgZ2V0IGNsb3NlIHRvIGhpbSBoZSBnb25uYSBnbyBieSB5b3UuIApBcHBsZSBoYXMgbG9zdCBDaGluYS4gVGhleSBjYW4ndCBsb3dlciB0aGUgaVBob25lIG91dCB0aGVyZSB0byBjb21wZXRlIHdpdGggdGhlIGNoZWFwZXIgZGV2aWNlcyB0aGF0IGFyZSBiZWluZyBzb2xkIGF0IHRoZSBidWNrZXRsb2FkLCBub3Igd2lsbCB0aGV5IG9wZW4gdXAgYW55IG9mIHRoZWlyIGFwcHMgbGlrZSBjcm9zcyBjb21wYXRpYmlsaXR5IHdpdGggaU1lc3NhZ2UuIApQZW9wbGUgd2hvIGFyZSBkZXNwZXJhdGUgYW5kIGluIGRpcmUgc3RyYWlnaHRzIHdpbGwgb2Z0ZW4gZG8gd2hhdCB0aGUgbm9ybWFsIHBlcnNvbiB3aWxsIGNvbnNpZGVyIHN0dXBpZC4gTG9vayBhdCB0aGUgcGxhY2VzIHdoZXJlIHRoZXkgY2xhaW0gdGhlIHNwZWNpYWwgd2F0ZXJzIGN1cmUgbWVkaWNhbCBhbGltZW50cy4gCkNsaWNrIFRVVE9SSUFMLC4gVGhlbi4gCkhlIGRpZCB0aGlzIHZvbHVudGFyaWx5LCBkZXNwaXRlIHRoZSBmYWN0IHRoYXQgaGUgbXVzdCd2ZSBrbm93biB0aGUgcG9saWNlIGhhZCBETkEgdHJhY2VzIG9mIHRoZSBraWxsZXIgYmVjYXVzZSBoZSB3YXMgdGhlIG9uZSB3aG8gbGVmdCB0aGVtIHRoZXJlLi4gCldvbWVuIGluIFRpYmV0IGNhbGxlZCBkYWlueWFscyBoZWxkIGNsb3RocyBvdmVyIHRoZWlyIGhlYWRzIHRvIGNhcHR1cmUgY2VkYXIgc21va2UsIHdoaWNoIHdvdWxkIHNlbmQgdGhlbSBpbnRvIHByb3BoZXRpYyBjaGFudGluZy4gClNwZWFraW5nIG9mIGZsYXQgZmVsbGVkIHNlYW1zLCBkbyBzb21lIGRlbW9zIG9uIHlvdXIgZmFicmljIG9mIHdoZXRoZXIgeW91IHdhbnQgdGhlIGZsYXQgZmVsbCB0eXBlIHdpdGggdHdvIHJvd3Mgb2Ygc3RpdGNoaW5nLCBvciB0aHJlZSwgb3Igc2VyZ2VkIGFuZCB0b3BzdGl0Y2hlZCBmYXV4IGZsYXQgZmVsbCwgb3IgcGxhaW4gc3RpdGNoZWQgYW5kIG5vdCB0b3BzdGl0Y2hlZC4gSWYgeW91IGEgYmVnaW5uZXIgd2l0aCB0b3BzdGl0Y2hpbmcgdGhlbiBJIGhpZ2hseSByZWNvbW1lbmQgeW91IG9ubHkgZG8gaXQgc3RyYXRlZ2ljYWxseSBhbmQgZG8gaXQgaW4gYSBjb2xvciB0aGF0IG1hdGNoZXMgeW91ciBmYWJyaWMuIApTdWNjZXNzZnVsIGJ1c2luZXNzIHBlb3BsZSBhcmUgbm90IHRoZSBvbmVzIHdobyBhY3QgaXJyYXRpb25hbGx5IGF0IHRoZSBwb2tlciB0YWJsZSwgcGxheWluZyBvbiB0aWx0LiAKUXVheWxpbWU6IGl0J3MgYWxzbyB0aW1lIHRvIGdvIHJldHJvIGFzIHRoZSBmb29kIGFuZCBiZXZlcmFnZXMgZmxvdyBmcm9tIDhwbSB1bnRpbCBsYXRlLiBUaGVyZSBpcyBhIHR3byBob3VyIGRyaW5rIHBhY2thZ2UsIGNhbmFwcyBhbGwgbmlnaHQsIGEgcmV0cm8gREogYW5kIGxpdmUgYmFuZCwgYW5kIGEgcGVyZmVjdCB2aWV3IG9mIHRoZSBmaXJld29ya3MgZnJvbSB0aGUgZGVjay4gUmV0cm8gZHJlc3MgaXMgb3B0aW9uYWwgZm9yIHRoZSAkMTI1IGV2ZW50IGFuZCByZXNlcnZhdGlvbnMgY2FuIGJlIG1hZGUgb24gNjU4NCA0MDM5LiAKU3Bva2Vzd29tYW4gRG9ubmEgU2VsbGVycyBzYWlkIFNjYWxpYSBoYWQgcmV0aXJlZCB0aGUgcHJldmlvdXMgZXZlbmluZyBhbmQgd2FzIGZvdW5kIGRlYWQgU2F0dXJkYXkgbW9ybmluZyBhZnRlciBoZSBkaWQgbm90IGFwcGVhciBmb3IgYnJlYWtmYXN0Li4gCkkgcGVyc29uYWxseSBjYXJlIGxlc3MgYWJvdXQgd2hhdCB0ZWNobm9sb2dpZXMgeW91IGhhdmUgYmVlbiBleHBvc2VkIHRvIGFzIGxvbmcgYXMgeW91IGhhdmUgYSBncmFzcCBvZiBjb3JlIGNvbmNlcHRzICAgYW5kIHRoYXQgc29tZXRoaW5nIHRoYXQgY2FuIGNvbWUgZnJvbSBvbiB0aGUgam9iIGV4cGVyaWVuY2UgaW4gb3RoZXIgZmllbGRzIG9yIGJ5IGZvcm1hbCB0cmFpbmluZy4KQXNzdW1pbmcgaXQgaXMgdGhlIGZvcm1lciBhbmQgbm90IHRoZSBsYXRlciwgdGhyb3dpbmcgaGltIGluIHByaXNvbiBtYXkgbWFrZSBoaW0gdG8gd2FrZSB1cCBhbmQgcmVhbGl6ZSB0aGF0IHdoYXQgaGUgZGlkIHdhcyBpbGxlZ2FsIGFuZCBpbW1vcmFsIGFuZCBzaG91bGQgbm90IGJlIGRvbmUgaW4gdGhlIGZ1dHVyZSBvciBpdCBjb3VsZCBhbHNvIGdpdmUgaGltIGFjY2VzcyB0byAidGhlIGNyaW1pbmFsIG5ldHdvcmsiIGFuZCBoZSBjb21lIG91dCBvZiBwcmlzb24gd29yc2UgdGhhbiBiZWZvcmUuIEJlY2F1c2Ugb2YgdGhpcyBmZWFyLCBtYW55IG9mIHRoZSBvdGhlciBjb21tZW50ZXJzIGFyZSBhcmd1aW5nIHRoYXQgdGhlIGp1c3RpY2Ugc3lzdGVtIHVzZSBzb21lIG9mIHRoZSBvdGhlciB0b29scyBpbiBpdHMgYXJzZW5hbCB0byBjb21tdW5pY2F0ZSB0aGF0IHdoYXQgdGhlIGd1eSBkaWQgd2FzIHdyb25nIGFuZCB0aGF0IGl0IHNob3VsZCBub3QgYmUgZG9uZSBpbiB0aGUgZnV0dXJlLgpJIGRvbid0IHdhbnQgZnVja2luZyBtaW5vcml0aWVzIGJlaW5nIHNob3ZlZCBpbnRvIG15IGdhbWUgdW5sZXNzIHRoZXJlJ3MgYSBjYW5vbmljYWwgcmVhc29uIHRoZXkncmUgYSBtaW5vcml0eS4gClN0ZXAgMjogWW91IGVudGVyIHRoaXMgdG91cm5hbWVudCBieSBlaXRoZXIgY29taW5nIGluIGZpcnN0IG9yIHNlY29uZCBpbiBzdGVwIDEgb3IgYnkgZGlyZWN0bHkgYnV5aW5nIGluIGZvciAkNSArICQwLjUwLiBDb21lIGluIGZpcnN0IG9yIHNlY29uZCBhbmQgeW91IG1vdmUgb24gdG8gc3RlcCB0aHJlZS4gQ29tZSBpbiB0aGlyZCBhbmQgeW91IGdldCB0byBwbGF5IGxldmVsIDIgYWdhaW4gZnJlZS4KQXQgdGhhdCB0aW1lLCB0aGUgYXBwIGhhZCAxMCwwMDAgdXNlcnMuIApNYXliZSBJJ20gdG9vIG9wdGltaXN0aWMgYnV0IEkgaGF2ZSB0byB3b25kZXIgd2h5IHNoZSB3b3VsZCB0YWtlIHRoaXMgcG9zaXRpb24uIApZb3UgYXJlIGdpdmluZyB0aGUgaW1wcmVzc2lvbiB0aGF0IHlvdSB3b3VsZCByYXRoZXIgYmUgZWxzZXdoZXJlLiBEbyBub3QgbGVhbiBvbiBkZXNrcywgd2FsbHMsIG9yIGNoYWlycy4gWW91IHNob3VsZCBhcHBlYXIgc3Ryb25nIGVub3VnaCB0byBzdGFuZCBhbG9uZSBvbiB0d28gZmVldCAgIHVuc3VwcG9ydGVkLi4gCkZvbGtzIGFyZSBlbmNvdXJhZ2VkIHRvIHB1c2ggdGhlaXIgY2hpcHMgImFsbCBpbiIgZm9yIGEgZ29vZCBjYXVzZSBkdXJpbmcgVGV4YXMgSG9sZCAnRW0gb24gRnJpZGF5IGFuZCBTYXR1cmRheSBpbiBGcmFua2VubXV0aC4gU2F0dXJkYXkgYXQgU3VsbGl2YW4ncyBGb3Jlc3QgQnJldyBIYXVzLCAyODEgSGVpbmxlaW4gU3RyYXNzZS4gRm9ybWVkIGluIDE5OTYgYnkgQ29keSBXZWxjaCwgYSByZXRpcmVkIE5vcnRod2VzdCBBaXJsaW5lcyBwaWxvdCwgdGhlIGdyb3VwIG9mZmVycyBubyBjb3N0IGZsaWdodHMgZm9yIHBhdGllbnRzIHdpdGggZmluYW5jaWFsIG5lZWRzIHRvIG1lZGljYWwgdHJlYXRtZW50IGNlbnRlcnMuIFRoZSBncm91cCBpcyBhbiBvZmZzaG9vdCBvZiB0aGUgV2VzdGVybiBNaWNoaWdhbiBXaW5ncyBvZiBNZXJjeSBjaGFwdGVyIHN0YXJ0ZWQgaW4gSG9sbGFuZCBpbiBKdW5lIDE5OTEuIEEgV2luZ3Mgb2YgTWVyY3kgTWlubmVzb3RhIGdyb3VwIHN0YXJ0ZWQgaW4gMTk5NSBpbiBTdC4gVGhlIHByb2NlZWRzIGZyb20gdGhlIHdlZWtlbmQgZXZlbnRzLCBpbmNsdWRpbmcgcG9rZXIsIHJvdWxldHRlIGFuZCBibGFja2phY2ssIHdpbGwgaGVscCBmdW5kIHRoZSB2b2x1bnRlZXIgcnVuLCBub25wcm9maXQgZ3JvdXAuIFRpY2tldHMgY29zdCAkMTAwLCB3aGlsZSBzcGVjdGF0b3JzIGNhbiB3YXRjaCBmb3IgJDUwLiBBIExhcyBWZWdhcyBzdHlsZSBidWZmZXQgaXMgaW5jbHVkZWQuIEZhaXJncm92ZSByZXNpZGVudCBEb24gTGluZGVuYmVyZywgYSB2b2x1bnRlZXIgcGlsb3QsIHNhaWQgaGUgZXhwZWN0cyB0byBhdHRlbmQgdGhlIGV2ZW50LiBMaW5kZW5iZXJnLCA2NywgaGFzIGZsb3duIGFib3V0IDYwIHRvIDcwIGZsaWdodHMgaW4gaGlzIHNpeCBzZWF0IENlc3NuYSAyMTAuICJFdmVyeWJvZHkgaGFzIHRvIGdpdmUgc29tZXRoaW5nIGJhY2sgdG8gdGhlIGNvbW11bml0eSwiIHRoZSByZXRpcmVkIHNhbGVzbWFuIGZvciBMaW5keSdzIFNhbGVzIFNlcnZpY2UgaW4gRmFpcmdyb3ZlIHNhaWQuICJXaXRoIHRoaXMsIEkgY2FuIGZseSBteSBwbGFuZSBhbmQgZG8gc29tZXRoaW5nIGZvciB0aGUgY29tbXVuaXR5LiIgTGluZGVuYmVyZyBzdGFydHMgaGlzIGpvdXJuZXlzIGZyb20gQmF5IENpdHkncyBKYW1lcyBDbGVtZW50cyBNdW5pY2lwYWwgQWlycG9ydCBhbmQgaGFzIGRlbGl2ZXJlZCBwYXRpZW50cyB0byBjYXJlIGNlbnRlcnMgaW4gRmxpbnQsIE1pZGxhbmQgYW5kIHRoZSBEZXRyb2l0IGFyZWEuIFdpbmdzIG9mIE1lcmN5IEVhc3QgTWljaGlnYW4gc2VydmljZXMgYSA2MDAgbWlsZSByYWRpdXMuICJPbmNlIHlvdSBnZXQgc3RhcnRlZCBhbmQgc2VlIHRoZSBwZW9wbGUgd2UgYXJlIGhhdWxpbmcsIGl0J3Mga2luZCBvZiBjYXRjaHksIiBoZSBzYWlkLiAiSXQgYnVpbGRzIG9uIHlvdS4gIkkndmUgc2VlbiBwZW9wbGUgd2hvIGhhdmUgbWFzc2l2ZSBwcm9ibGVtcywgKHlldCkgdGhlaXIgb3V0bG9vayBvbiBsaWZlIGlzIGdlbmVyYWxseSBnb29kLgpGb2xsb3cgYW4gZXh0cmVtZWx5IHNpbXBsZSBlYXRpbmcgcmVnaW1lbiB3aGljaCB3aWxsIHN0YXJ0IHNob3dpbmcgeW91IG5vdGljZWFibGUgcmVzdWx0IGluIHlvdXIganVzdCAyIDMgZGF5cy4gClRoaXMgZ2FtZSBjYW4gZ2V0IGV4Y2VlZGluZ2x5IGV4cGVuc2l2ZSBhbmQgaXMgZXZlbiBiZXR0ZXIgd2hlbiBwbGF5ZWQgYXMgYSBoaSBsbyBnYW1lLi4gClRoZXJlIGFyZSBzbyBtYW55IHRvcCBub3RjaCBzaXRlcyB0aGF0IGFsbG93IHBsYXllcnMgdG8gZW5qb3kgdGhlaXIgZmF2b3JhYmxlIGdhbWVzLiBQbGF5ZXJzIGNhbiBjaG9vc2UgZnJvbSBhIHBvb2wgb2YgdGhlbSBvbmxpbmUgYW5kIGdvIGZvciB0aG9zZSB0aGF0IG1lZXQgdGhlaXIgbmVlZHMgZWZmZWN0aXZlbHkuIFRoaXMgaXMgYSBiaWcgcGx1cyBhcyBjb21wYXJlZCB0byBwbGF5aW5nIGZyb20gdGhlIG5laWdoYm9yaG9vZCBjYXNpbm8uIApBQ0UgY3VycmVudGx5IGRlbGl2ZXJzIHR3byBwcm9ncmFtcyBvbiBvdmVyIDUwIHVuaXZlcnNpdHkgYW5kIGNvbGxlZ2UgY2FtcHVzZXMgYWNyb3NzIENhbmFkYSB3aXRoIHRoZSBpbnZvbHZlbWVudCBvZiBvdmVyIDEsNzAwIHN0dWRlbnQgbGVhZGVycyBhbmQgc3R1ZGVudCBlbnRyZXByZW5ldXJzLiBQUk9HUkFNIDEgICBTVFVERU5UUyBJTiBGUkVFIEVOVEVSUFJJU0UgKFNJRkUpIE91ciAidGVhbSIgYmFzZWQgcHJvZ3JhbSBlbXBvd2VycyBzdHVkZW50cyB0byBjcmVhdGUgZWNvbm9taWMgb3Bwb3J0dW5pdHkgaW4gdGhlaXIgY29tbXVuaXRpZXMgYnkgdGVhY2hpbmcgb3RoZXJzIGFib3V0IG1hcmtldCBlY29ub21pY3MsIGVudHJlcHJlbmV1cnNoaXAsIHN1Y2Nlc3Mgc2tpbGxzLCBmaW5hbmNpYWwgbGl0ZXJhY3kgYW5kIGJ1c2luZXNzIGV0aGljcy4gClRoZXkgZG9udCBoYXZlIGl0LiAKQWxzbyBjb25zZXJ2YXRpc20gaXMgdGhlIG5ldyBwdW5rIHJvY2sgYmVjYXVzZSB0aGUgbWFpbnN0cmVhbSBsaWJ0YXJkcyB3YW50IHRvIGhhdmUgcG9saXRpY2FsIHByb2dyZXNzIGFuZCB3ZXJlIHRoZSBwb2xpdGljYWwgbWlub3JpdHkuIApIb3cgZG8geW91IGNoZWF0IG9uIE1hdGhsZXRpY3MgQXVzdHJhbGlhIHdpdGhvdXQgQ2hlYXQgRW5naW5lPwpOb3csIGFjY29yZGluZyB0byB0aGUgQ2hyaXN0aWFuIENpdmlsIExlYWd1ZSBvZiBNYWluZSwgdGhvc2UgY3JhenkgImhvbW9zZXh1YWxzIiBhbmQgdGhlaXIgImhvbW9zZXh1YWwgYWdlbmRhIiBhcmUgdHJ5aW5nIHRvIGRlc3Ryb3kgdGhpcyBiYXNpYyBmb3VuZGF0aW9uIG9mIGdlbmRlciBkaWZmZXJlbmNlLiB0byBhIHN0YXRlbWVudCBpbiB0aGUgQmFuZ29yIERhaWx5IE5ld3MsCkFsdGhvdWdoIGl0IGlzIGRpZmZpY3VsdCwgd2hlbiB5b3Uga25vdyB0aGUgcnVsZXMsIHlvdSBhcmUgZ29vZCB0byBnby4gCkFuZCBoYXBweSBGcmlkYXkuLiAKVGhlIHRyb3VibGUgaXMgdGhhdCBDQ1AgbWFkZSBpdCBzbyB0aGF0IGFueW9uZSBjYW4gYnV5IHRoZSBCUE8sIGFuZCB0aGV5IGFyZSB1bmxpbWl0ZWQgaW4gcnVucy4gVGhleSBjYW4gYmUgY29waWVkIGluZmluaXRlbHkgYXMgd2VsbC4gCkkgaGFwcHkgdG8gYW5zd2VyIGFueSBvdGhlciBxdWVzdGlvbnMgYWJvdXQgaGF2aW5nIGEgZG9nIGluIGdyYWQgc2Nob29sIHlvdSBtaWdodCBoYXZlLCBpZiB0aGF0IGhlbHBzIS4gCkkgYXNrZWQgdGhlIHF1ZXN0aW9uIGluIHRpdGxlIHRvIGEgcHJvZmVzc2lvbmFsIE1UVCBwbGF5aW5nIGZyaWVuZCBvZiBtaW5lLiAKUHVzaCB0aGUgcmVsYXhhdGlvbiBkb3duIHlvdXIgbmVjaywgc2hvdWxkZXJzLCBhcm1zLCB1bnRpbCB5b3UndmUgZG9uZSB5b3VyIHdob2xlIGJvZHkuIENvbmNlbnRyYXRlIG9uIHRoZSBoZWF0IGFuZCBoZWF2aW5lc3MgeW91IGZlZWwuCkkgcGlja2VkIHVwIHNvbWUgdGhpbmdzIGJ1dCBJIHdhcyBvbmx5IGJyZWFraW5nIGV2ZW4uIEkgam9pbmVkIHVwc3dpbmcgaW4gMjAxNyBiZWNhdXNlIEkgcmVhbGx5IGVuam95ZWQgRG91ZyB0YWtlIG9uIHRoZSBnYW1lLiAKVGhlcmUgYSBGb3Vyc3F1YXJlIHR5cGUgYXBwIG9uIEFpZGVuIHBob25lIHRoYXQgZ2l2ZXMgaW5mbyBvbiBsYW5kbWFya3MgYW5kIGFsbG93cyBwbGF5ZXJzIHRvIGFwcGFyZW50bHkgbGVhdmUgZ2lmdHMgZm9yIGVhY2ggb3RoZXIuIApbZXhjZXJwdF0uIApBcyBmb3IgeW91ciBzZWNvbmQgcXVlc3Rpb24sIEkgaG9uZXN0bHkgZG9uIGtub3csIHRob3VnaCBteSBpbnR1aXRpb24gc2F5cyBuby4gSWYgdGhhdCB3ZXJlIHRoZSBjYXNlLCB0aGVuIHdlIHNob3VsZCBoYXZlIGZvdW5kIHNvbWUgZXZpZGVuY2UgdG8gc3VwcG9ydCBpdC4gVGhvdWdoLCBteSBpbnR1aXRpb24gbWF5IGJlIGVudGlyZWx5IHdyb25nLCBhcyB0aGV5IG9mdGVuIGFyZSBpbiBzY2llbmNlLiBXZSB3aWxsIHNpbXBseSBoYXZlIHRvIGNvbnRpbnVlIHNlYXJjaGluZyBmb3IgYW5zd2Vycy4KU2Vjb25kIHRpcCBpcyBkb24gbGV0IHRoZSB3ZWFyaW5nIHRvdWdobmVzcyBvZiBkZW5pbSBsdXJlIHlvdSBpbnRvIHRoaW5raW5nIGl0IHN1cGVyIHJpZ2lkIGFuZCBoYXMgbm8gZHJhcGUgb3IgYmlhcyBzdHJldGNoLiBZb3Ugc3RpbGwgZ29pbmcgdG8gd2FudCB0byBtaW5pbWl6ZSBoYW5kbGluZyBvZiBjdXQgcGllY2VzLCBzdGF5IHN0aXRjaCBjdXJ2ZXMsIGZpbmlzaCBzZWFtIGFsbG93YW5jZXMsIGFuZCBhbGwgdGhhdCBvdGhlciBzdHVmZiB5b3UgZG8gd2l0aCBvdGhlciB0aGluZ3MgdGhhdCBmcmF5IGxpa2Ugc2F5IHJheW9uIGNoYWxsaXMuIFRoZXJlIHR3byByZWFzb25zIHRoZSBmbGF0IGZlbGxlZCBzZWFtIGlzIHBvcHVsYXIgaW4gZGVuaW0uIApUaXBzIG9uIFdvcmtpbmcgdGhlIExvYmJ5CldoYXQgSXQgSXM6IEFkb3JhYmxlLiBGb3VyIHR3ZW50eXNvbWV0aGluZyBvbmxpbmUgcG9rZXIgY2hhbXBzIChCcmlhbiwgRW1pbCwgSmF5IGFuZCBEYW5pKSBtb3ZlIHRvIFZlZ2FzIGZvciBzb21lIHRpbWUgYXQgdGhlIHRhYmxlcy4gVGhlc2Uga2lkcyBhcHBhcmVudGx5IG1ha2UgYmVhdWNvdXAgYnVja3MgZG9pbmcgdGhpcywgYW5kIHRoZWlyIGFkdmVudHVyZXMgaW4gdGhlIGJpZyBjaXR5IGxvb2sgbGlrZSBhIGxvdCBvZiBmdW4uCklmIHRoZXkgZG8gbm90IHRoaW5rIGltcGxlbWVudGluZyBTZWdXaXQgaXMgaW4gdGhlaXIgYmVuZWZpdCwgdGhleSB3b24gZG8gaXQuIApOb3Qgc3VyZSB3aGF0IGVsc2UgYnV0IEkgaGFwcHkgdG8gYWRkcmVzcyBhbnl0aGluZyBlbHNlIGluIHRoaXMgcGljdHVyZSB5b3UgbWF5IGJlIGludGVycHJldGluZyBhcyAicG92ZXJ0eSBhbmQgZGVzcGFpciIuCkx1Y2tpbHksIFNhbSBpcyBzaG93aW5nIHNpZ25zIG9mIGRldmVsb3BpbmcgZXZpbCBzdXBlcnBvd2VycyBvciBzb21ldGhpbmcsIHdoaWNoIGFkZHMgZm9yIHNvbWUgZ3Jvd2luZyB0ZW5zaW9uLiAKQmVjYXVzZSBJIG9mdGVuIHN0YXkgYmVoaW5kLCBub3QgZ29pbmcgZm9yIHNob3RzIHdoZXJlIG5vIG9uZSBpcyBjb250ZXN0aW5nIGJlY2F1c2UgZm9yIG1vc3Qgb2YgdGhlbSwgSSBub3Qgc3VyZSBJIGNhbiBldmVuIHJlYWNoIG9yIGhpdCB0aGVtLCBhbmQgd2hlbiBJIGRvLCBzb21lb25lIGlzIG9uIGl0IGFscmVhZHksIG9yIGdvdCB0aGVyZSBzaG9ydGx5IGJlZm9yZSBtZS4uIApNYW55IHBlb3BsZSBoYXZlIHdhdGNoZWQgVGV4YXMgSG9sZGVtIHRvdXJuYW1lbnRzIG9uIHRlbGV2aXNpb24gYW5kIGl0IGxvb2tzIGVhc3kgdG8gcGxheS4gSG93ZXZlciBiZWZvcmUgeW91IHJhY2UgZG93biB0byB0aGUgY2FzaW5vIGFuZCBzaWduIHVwIGZvciBhIGhpZ2ggc3Rha2VzIHRvdXJuYW1lbnQgeW91IG5lZWQgdG8gbGVhcm4gdGhlIGJhc2ljcyBvZiB0aGUgZ2FtZSBhbmQgZ2V0IHNvbWUgcGxheWluZyBleHBlcmllbmNlIGluIGxvdyBsaW1pdCBnYW1lcy4gVGhhdCBtZWFucyB0aGF0IGF0IGFueSB0aW1lIGEgcGxheWVyIGNhbiBiZXQgYWxsIG9mIGhpcyBjaGlwcy4gVGhpcyBpcyBhIGdyZWF0IGZvcm1hdCBmb3IgdG91cm5hbWVudHMgYnV0IGFzIGEgYmVnaW5uaW5nIHBsYXllciB5b3Ugd2lsbCB3YW50IHRvIGZpcnN0IGxlYXJuIHRvIHBsYXkgTGltaXQgVGV4YXMgSG9sZCdlbS4gTGltaXQgZ2FtZXMgaGF2ZSBzdHJ1Y3R1cmVkIGJldHRpbmcgcm91bmRzIGFuZCB5b3UgYXJlIGxpbWl0ZWQgdG8gdGhlIGFtb3VudCBvZiBtb25leSB5b3UgY2FuIGJldCBkdXJpbmcgZWFjaCByb3VuZC4gTW9yZSBwcmVjaXNlbHkgeW91IHdpbGwgd2FudCB0byBwbGF5IExvdyBMaW1pdCBUZXhhcyBIb2xkJ2VtIGFzIHlvdSBsZWFybiB0aGUgZ2FtZS4gU29tZSBvZiB0aGUgbG93IGxpbWl0IGdhbWVzIHlvdSB3aWxsIGZpbmQgaW4gdGhlIGNhcmRyb29tIGFyZSBoYXZlIGEgYmV0dGluZyBzdHJ1Y3R1cmUgb2YgJDIvNCwgJDMvNiAkNC84LiBBZnRlciB5b3UgZ2FpbiBleHBlcmllbmNlIHlvdSBjYW4gbW92ZSB1cCB0aGUgaGlnaGVyIGxpbWl0cyBvciBObyBMaW1pdCBpZiB5b3UgZGVzaXJlLCBidXQgeW91IG11c3QgbGVhcm4gdG8gd2FsayBiZWZvcmUgeW91IGNhbiBydW4uIExldCBtZSBleHBsYWluIHRoZSBnYW1lIGFuZCB0aGVuIGdpdmUgeW91IHNvbWUgd2lubmluZyB0aXBzIHRvIGdldCBzdGFydGVkLgpBY3R1YWxseSwgdGhlIHRlc3Qgd2FzIG5ldmVyIHBlcmZlY3QuIEhvdywgYWZ0ZXIgYWxsLCBpcyB0aGUgc2V4IG9mIGEgcnVubmVyIHRvIGJlIGRldGVybWluZWQ/IFRoaXMgaGFzIGJlZW4gYSBwcm9ibGVtIHNpbmNlIHRoZSBpbnRyb2R1Y3Rpb24gb2Ygd29tZW4gaW50byBvcmdhbml6ZWQgc3BvcnRpbmcgY29tcGV0aXRpb25zLiBBcyBiaW9sb2dpc3QgQW5uZSBGYXVzdG8gU3RlcmxpbmcgaGFzIGRlbW9uc3RyYXRlZCwgZGV0ZXJtaW5pbmcgYSBwZXJzb24gc2V4IGlzIGEgdmVyeSBtZXNzeSBidXNpbmVzcyB0aGF0IGlzIG5vdCBlYXNpbHkgY29uZmluZWQgaW4gdGhlIG5lYXQgbGl0dGxlIGNhdGVnb3JpZXMgb2YgYm95IG9yIGdpcmwuLiAKSXQncyBjbGVhciB0aGF0IGh1bWFucyBhbmQgb3RoZXIgYW5pbWFsIGFuZCBwbGFudCBzcGVjaWVzLCBieSBOYXR1cmUncyBkZXNpZ24sIGhhdmUgYmVlbiBwcm9ncmFtbWVkIHRvIHV0aWxpemUgbmVhciBpbmZyYXJlZCBsaWdodCB0byBvdXIgYmVuZWZpdC4uIApBZnRlciBoZSBpbnN0YW50bHkgMyBiZXQgbWUsIEkgcHJldHR5IG11Y2ggdGFua2VkIGZvciBsaWtlIDMgbWludXRlcy4gClRoaXMgY2FzaCBpbiBhbiBlbnZlbG9wZS4gCkhhZCB0byBnb29nbGUgYXJvdW5kIGEgYml0LCBhbmQgZm91bmQgc29tZXRoaW5nIHRoYXQgSSBub3Qgc2VlbiBpbiBGaW5sYW5kLCBzcGVjaWZpY2FsbHkgc3RhdGluZyB0aGF0IGJhciBjbG9zZXMgYmVmb3JlIHRoZSBtYWluIGV2ZW50OiBUaGUgSGVsc2lua2kgQ2FzaW5vIFNwb3J0cyBQdWIgd291bGQgc2hvdyBVRkMgbWF0Y2hlcywgYnV0IHRoZXkgYXJlIG9wZW4gb25seSB1cCB0byA0IEFNLCBvcGVuIGFnYWluIGF0IG5vb24uIApPbmUgc3VnZ2VzdGlvbiB3b3VsZCBiZSB0byBnbyB3aXRoIFBva2VyIFRhYmxlIEZlbHRzIG9mIGEgZGFya2VyIGNvbG9yLiBUaGlzIHdheSwgeW91IGNhbiBzcGlsbCBhIGJldmVyYWdlIGFuZCBkdW1wIENoZWV0b3Mgb24gdGhlIGZlbHQgYW5kIHlvdSBzaG91bGQgYmUgYWJsZSB0byBjbGVhbiBpdCB1cCwgbm8gcHJvYmxlbSBhdCBhbGwuIApNeSBsYXN0IHBvc3QgaGVyZSBleHByZXNzZWQgbXkgYWNjZXNzaWJpbGl0eSB0byBTZWJhbWVkIENGIEdlbCBhbmQgd2hhdCBJIHBsYW4gdG8gZG8uIApEdXRpZXMgUGFzdG9ycyBnZW5lcmFsbHkgb3ZlcnNlZSBvciBzdXBlcnZpc2UgdGhlIGFjdGl2aXRpZXMgb2YgYSBjaHVyY2guIFRoZXkgYXJlIGVzc2VudGlhbGx5ICJzaGVwaGVyZHMiIHdobyBtaW5pc3RlciB0byB0aGVpciAiZmxvY2ssIiB0aGF0IGlzLCB0aGUgY2h1cmNoZ29lcnMgd2hvIGF0dGVuZCBzZXJ2aWNlcyBhbmQgYWN0aXZpdGllcy4gVXN1YWxseSB0aGV5IHByZWFjaCBzZXJtb25zIHRvIHRoZSBjb25ncmVnYXRpb24gICBtb3N0IGxpa2VseSBvbiBTdW5kYXlzICAgdGVhY2hpbmcgdGhlbSBob3cgdG8gYXBwbHkgU2NyaXB0dXJlIHRvIHRoZWlyIGxpdmVzLCBhbmQgbGVhZGluZyB0aGVtIGluIHByYXllci4gClJlbW92ZSBvbmUgb2YgdGhvc2UgcGFydHMgWzEvM10gYW5kIG1peCB0aGUgcmVtYWluaW5nIHBlbm5pZXMgWzIvM10gdXAuIApHcmF2ZXNlbiBvbmNlIGRhdGVkIHBvcm5zdGFyIEtpcmEgRWdnZXJzIGJ1dCBpcyBub3cgYmVsaWV2ZWQgdG8gYmUgd2l0aEthbWlsYSBQZXJzc2UgKHBpYykKR2FtZSA5ICAgTG9zdApUaGVuIGF0IHRoZWVuZCBvZiBhIGNvdXBsZSBvZiBtaW51dGVzLGNoaXBzIGVpdGhlciB0cmFuc2ZlcnJlZCBmcm9tIG1lIHRvIHlvdW9yIGZyb20geW91IHRvIG1lLiBZb3UgbGlrZXlvdSBtYXJraW5nIGluIHRoaXMgdmVyeSBpbiB0aGVtb21lbnQgd2F5IHdoYXQgeW91ciBQIGxvb2tzIGxpa2UscmlnaHQgYXQgdGhhdCBtb21lbnQsIHJpZ2h0Py4gCklmIHRoYXQgaXNuIGhhcHBlbmluZyBldmVyeSBtb21lbnQgdGhlaXIgaGVhbHRoIG5lZWRzIHRvIGdvIHVwLCB0aGUgaGVhbGVyIGlzIGJhZC4gCkhlcmUncyBob3cgdG8gcHJvY2VlZC4gZm9sbG93IGFuIGV4dHJlbWVseSBzaW1wbGUgZWF0aW5nIHJlZ2ltZW4gd2hpY2ggd2lsbCBzdGFydCBzaG93aW5nIHlvdSBub3RpY2VhYmxlIHJlc3VsdCBpbiB5b3VyIGp1c3QgMiAzIGRheXMuIE9uY2UgeW91IHN0aWNrIGJ5IHVzaW5nIGZvciB0aGF0IGxvbmcsIG1heSBuZXZlciBiZSBzbyBtb3RpdmF0ZWQgdG8gZGV0ZXJtaW5lIGl0IHRocm91Z2guIDUgd2hvbGUgZGF5cy4gVGhlIGJlc3QgcGFydCBpcyBiZWNhdXNlIGl0IGNhbiBnbyB1cCB0aGUgd2F5IHlvdSBsb29rIGF0IGZvb2QgZm9yZXZlciBhbmQgeW91IHdpbGwgd2FudCB0byBjaG9vc2UgaGVhbHRoeSBmb29kcyB0aGF0IGFsbG93IGZlZWwgZmFudGFzdGljLCBFbmhhbmNlIEZvY3VzIGFuZCBDbGFyaXR5IGFuZCBoZWxwIHlvdSBrZWVwIGJ1aWxkaW5nIGxlYW4gbWFzcy4gTm90IHRvIG1lbnRpb24sIHlvdXIgbWV0YWJvbGlzbSB3aWxsIHNwZWVkIHVwIHNpbXBseSBiZWNhdXNlIHlvdXIgYm9keSBoYXMgdG8gYnVybiBtb3JlIGVuZXJneSBqdXN0IHRvIGRpZ2VzdCB5b3VyIGRpZXQuIEFXRVNPTUUhClRvIHNheSwgaXQgaXMgbG9uZyBiZWZvcmUgTW9sbHkgZmluZHMgaGVyc2VsZiBpbiBob3Qgd2F0ZXIuIFByaW1hcmlseSBkdWUgdG8gYmVpbmcgdG9vIGNsZXZlciBmb3IgaGVyIG93biBnb29kIGFuZCB0b28gYnJva2UgdG8gdGhpbmsgY2xlYXJseSwgTW9sbHkgbGFuZHMgaW4gdGhlIHJpZ2h0IHBsYWNlIGF0IHRoZSB3cm9uZyB0aW1lIHRvIGJlY29tZSB0aGUgaG9zdCBvZiB0aGUgYmlnZ2VzdCBzZWNyZXQgcG9rZXIgZ2FtZSBpbiB0aGUgY291bnRyeS4uIAoiUGxlYXNlIHN0YXkgdHVuZWQgdG8gZnV0dXJlIHVwZGF0ZXMgZm9yIG1vcmUgaW5mb3JtYXRpb24uIi4gCkFzIGZvciB3aHkgZG9lc24gRHIuIFNpeCBkbyB0aGF0LCBpdCB0aGF0IHRoZXkgZG8gbm90IGhhdmUgdGhlIG1vcmFsIGp1c3RpZmljYXRpb246IGJlaW5nIGEgZGVvbnRvbG9naXN0IHRoZXkgY2FuIGtpbGwgYmVjYXVzZSB0aGF0IHVuZXRoaWNhbCwgZXZlbiBpZiBpdCBwcmV2ZW50cyB0aGUgd29yc2UgdGhpbmdzLiBUaGV5IG5vdCBiZWluZyBpbnN0cnVjdGVkIHRvIGJ5IHRoZSBGb3VuZGF0aW9uIHBlciB0aGVpciBjb250cmFjdHVhbCBvYmxpZ2F0aW9uLCB0aGV5IHN3b3JlIHRvIHNlY3VyZSwgY29udGFpbiwgYW5kIHByb3RlY3QsIG5vIGRlc3Ryb3ksIGRlc3Ryb3kgZGVzdHJveS4uIApGaXJzdCBhbmQgZm9yZW1vc3QsIHRoZXkgbmVlZCB0byB0cmVhdCB0aGUgbWFzc2l2ZSB0dW1vciBpbiBoaXMgdGhyb2F0LCBzbyBoZSB3aWxsIGhhdmUgcmFkaW8gc2VlZCB0aGVyYXB5IChicmFjaHkgdGhlcmFweSkgd2hlcmUgdGhleSBpbmplY3QgYSBuZWVkbGUgaW50byB0aGUgdHVtb3IsIHRoZW4gcGxhbnQgc2VlZHMgdGhyb3VnaCB0aGUgbmVlZGxlLCB0b2dldGhlciB3aXRoIGEgY2hlbW8gZHJ1Zy4gVGhleSB3aWxsIGFsc28gZG8gdGhpcyBpbiBoaXMgc3Rlcm51bSBhbmQgaGlzIGFybXBpdHMuIApBY2Nlc3NvcmllczogTWFueSBleGVyY2lzZSBiYWxscyBjb21lIHdpdGggYWNjZXNzb3JpZXMsIHN1Y2ggYXMgcHVtcHMsIGFuIGV4ZXJjaXNlIHNoZWV0IG9yIGEgRFZELiAKVGhlIHNob3cgaW5jbHVkZWQgY29uZnJvbnRhdGlvbmFsIGltYWdlcyBsaWtlIHRoYXQgb2YgYSBoYWlyeSBjaGVzdGVkLCBob2xsZXJpbmcgRG9uYWxkIFRydW1wIGVhdGluZyBhbiBpY2UgY3JlYW0gc3VuZGFlLCBpbiBhIHBpZWNlIHRpdGxlZCAiWW91IFNjcmVhbS4gSSBTY3JlYW0uIApXZSB0YWxrZWQgZm9yIHNvbWUgdGltZSBhYm91dCBjb21taXNzaW9ucyAoZGlkbiBnbyBhbnl3aGVyZSkuIFRoZW4gaGUgc2FpZCwgIlRoZXNlIGFyZSBieSBhIGZhbWlseSBmcmllbmQgYW5kIHRoZXkgYXJlIG5pY2UsIHllcy4gQnV0IGV2ZXJ5b25lIGtub3dzIGFuIGFydGlzdCB3b3JrIGJlY29tZSBtb3JlIHZhbHVhYmxlIGFmdGVyIHRoZXkgZGllLiAKSW4gdGVybXMgb2YgZW1vdGlvbmFsIHBvc2l0aW9uaW5nIG5vLiBTaGUncyBhIHBhcnQgb2YgbWUgYW5kIEkgY2FuJ3QgaW1hZ2luZSBteSBsaWZlIHdpdGhvdXQgaGVyLiBJZiB3ZSBsaXZlZCBjbG9zZXIgYW5kIG5laXRoZXIgb2YgdXMgaGFkIGtpZHMgSSB0aGluayB0aGUgcmVsYXRpb25zaGlwIHdvdWxkIGJlIGRpZmZlcmVudCBidXQgd2l0aGluIGNvbmZpbmVzIG9mIGRpc3RhbmNlIGFuZCBhdmFpbGFiaWxpdHkgSSB0aGluayBzbyB5ZXMuIExpa2V3aXNlIGFsdGhvdWdoIEkgd29uJ3QgbGllIHRoZXJlJ3MgYmVlbiBpbnRlcmVzdCBpbiB0aGUgcGFydCBJIGRvbid0IGxpc3QgYWZ0ZXIgU2FyYWguIEl0J3Mgbm90IGEgc2V4dWFsIHJlbGF0aW9uc2hpcCBldmVuIGlmIGl0IGlzIHJvbWFudGljLgpEZSBwbHVzLCBkZSB0ZWxzIHByb2R1aXRzIHNvbnQgcmFyZXMgZXQgcGx1cyBjaGVycyBxdWUgbGUgcHJvZHVpdCBjbGFzc2lxdWUuIEEgdm91cyBkZSBmYWlyZSB2b3RyZSBjaG9peC4uIApOb3VzIHZpdm9ucyBsYSBmaW4gZGVzIHRlbXBzLiBMZXVycyBwcm1pY2VzIHNvbnQgbCwgaWxzIG5vdXMgZW5jZXJjbGVudCBldCBlbmNhZHJlbnQgY2hhY3VuIGRlIG5vcyBhY3Rlcy4gQydlc3QgdW4gY2FuY2VyIGlubHVjdGFibGUgcXVpIHNlIHByb3BhZ2UgYXZlYyB1bmUgZmVybWUgY2VydGl0dWRlIGV0IG5vdXMgbid5IHBvdXZvbnMgcmllbiwgY2FyIGxlcyBkcyBzb250IGpldHMsIGxlcyBqZXV4IHNvbnQgZmFpdHMuIApUaGVyZSB3YXMgYWxzbyBzdHJvbmcgZGVtYW5kIGZvciBjb25kbyBhcGFydG1lbnRzIGluIENhbmFkYSBsYXJnZXN0IG1hcmtldHMsIGFzIHRoaXMgdHlwZSBvZiBob3VzaW5nIGlzIHVzdWFsbHkgYSBtb3JlIGFmZm9yZGFibGUgY2hvaWNlLiBUaGlzIGNyZWF0ZWQgYSBjYXRjaCAyMiBzaXR1YXRpb24sIGJlY2F1c2Ugc3Ryb25nIGRlbWFuZCByZXN1bHRlZCBpbiBoaWdoZXIgY29uZG8gcHJpY2VzLCB3aGljaCBpbiB0dXJuIGxlZCB0byBzb21lIGVyb3Npb24gb2YgY29uZG8gYWZmb3JkYWJpbGl0eS4uIApGb3J0dW5hdGVseSwgaXQgZG9lc24gYWN0dWFsbHkgbWF0dGVyIHdobyB0aGlzIGNvbW1lbnRlciBpcywgYmVjYXVzZSB0aGUgcHVycG9zZSBvZiB0aGUgY29tbWVudCBpcyB0aGUgc2FtZSwgd2hpY2ggbWFrZXMgdGhlIHJlc3BvbnNlIHZlcnkgc2ltcGxlOiBqdXN0IGlnbm9yZSBpdC4KU29tZSBzdGF0ZXMgaGF2ZSBnb29kIFNhbWFyaXRhbiBEdXR5IHRvIFJlc2N1ZSBsYXdzIHRoYXQgcmVxdWlyZSB5b3UgdG8gYXNzaXN0IGluIGFueSB3YXkgcHJhY3RpY2FsLCBidXQgbW9yZSB0byB0aGUgcG9pbnQsIHBlb3BsZSBjYW4gc3VlIGZvciBqdXN0IGFib3V0IGFueXRoaW5nLiBXaGV0aGVyIHRoZXkgd2luIG9yIG5vdCBpcyBhIGRpZmZlcmVudCBtYXR0ZXIsIGJ1dCB0aGUgcmVhbGl0eSBpcyBpdCB3b3VsZCBjb3N0IHRoZW0gbWlsbGlvbnMgdXBvbiBtaWxsaW9ucyB0byBmaWdodCB0aGUgY2FzZSwgZXNwZWNpYWxseSBpZiB0aGV5IGJyb2tlbiBpdCB1cCBpbnRvIGluZGl2aWR1YWwgc3VpdHMgZnJvbSBldmVyeSB2aWN0aW0gZmFtaWx5IGFuZCBzdXJ2aXZvci4gVGhlIGNoZWFwZXIsIGVhc2llciwgYW5kLCByaWdodCBvciB3cm9uZ2x5LCBiZXR0ZXIgcHVibGljbHkgcGVyY2VpdmVkIG9wdGlvbiBpcyB0byBzaW1wbHkgcGF5IG91dCBvbmUgbGFyZ2UgbHVtcCBzZXR0bGVtZW50IGFuZCBtb3ZlIG9uLi4gCkJlIG9iamVjdGl2ZTogImhtbW0gd2hhdCBkaWQgSSBkbyB3cm9uZyB0aGVyZT8iLiAKU3BlYWtpbmcgdG8gcmVwb3J0ZXJzIG9uIE1vbmRheSBtb3JuaW5nLCBNYXlvciBKb2huIFRvcnkgY29uZmlybWVkIHRoYXQgc2hlbHRlciBjYXBhY2l0eSB3YXMgc2l0dGluZyBhdCBhcm91bmQgOTYgcGVyIGNlbnQgb24gU3VuZGF5IG5pZ2h0LgpPdmVydmlldyBmb3IgYnVnc2N1egpObywgd2hhdCBleGFjdGx5IGhhcHBlbnMgaXMgdGhlIGl0ZW0gdGhhdCB3ZSBwYXkgZm9yIGlzIG1vdmVkIHRvIGEgbmV3IGJpbGwgYW5kIHRoZW4gdGhlIGJpbGwgaXMgY2xvc2VkLiBBdCB0aGUgZW5kIG9mIHRoZSBuaWdodCBpdCByYWlzZXMgb3VyIHNhbGVzIHNvIHdlIHBheSBmb3IgaXQuIEZvciBleGFtcGxlIGlmIHlvdSBwYXkgaW4gY2FzaCAkMjUsIGF0IHRoZSBlbmQgb2YgdGhlIG5pZ2h0IEkgd291bGQgZ2l2ZSBteSBlbXBsb3llciAkMjUgY2FzaCBmb3IgdGhhdCBiaWxsLgpTYW5zIGNldHRlIGFzdHVjZSwgbGVzIG1hc3NhZ2VzIG5lIHNlcmFpZW50IHBhcyByZW1ib3Vyc3MgZW4gT250YXJpby4uIApZb3UgY2FuIGFwcGx5IHRoYXQgY29uY2VwdCB0byByYWtlLCBhcyB3ZWxsLi4gCkJ1dCBub3cgdGhhdCBJJ20gbm90IHVuZGVyIHRoZSB3aW5nIG9mIG15IHBhcmVudHMsIEkgaGF2ZSB0byBtYWtlIGVmZm9ydHMgbm93IHRvIGhlbHAgbWFrZSBpdCBzbyBJIGNhbiBoYXZlIHNvbWUgY2FyZWZyZWUgdGltZSB0byBteXNlbGYgb24gYSBzdW1tZXIgZXZlbmluZy4gSW5zdGVhZCBvZiBhbiBTTkVTLCBpdCBtYXkgYmUgYSBOaW50ZW5kbyBTd2l0Y2gsIGFuZCBpbnN0ZWFkIG9mIGEgYmVnaW5uZXIgdGVsZXNjb3BlLCBpdCBtYXkgYmUgYSBEU0xSIGFuZCBhIHRyaXBvZCBiZWNhdXNlIHRoYXQncyB0aGUgaG9iYnkgSSBnb3QgaW50by4gCkJ1dCBvbmUgbW9ybmluZyBpbiAyMDAzLCBKZXJyeSBoYXBwZW5lZCB0byB3YWxrIGJhY2sgaW50byB0aGUgY29ybmVyIHN0b3JlIGFuZCBzcG90dGVkIGEgYnJvY2h1cmUgZm9yIGEgYnJhbmQgbmV3IGxvdHRlcnkgZ2FtZSBjYWxsZWQgV2luZmFsbC4gSmVycnkgYWx3YXlzIHBvc3Nlc3NlZCB3aGF0IGhlIGNhbGxzLCAiYSBoZWFkIGZvciBtYXRoLiIgSGUgaGFzIGEgYmFjaGVsb3IncyBkZWdyZWUgaW4gdGhlIHN1YmplY3QgZnJvbSBuZWFyYnkgV2VzdGVybiBNaWNoaWdhbiBVbml2ZXJzaXR5LiAKVGhlIE1hbGZveXMgcHJlc3VtYWJseSBzdGlsbCBiZWxpZXZlZCBpbiB0aGUgcHVyZWJsb29kIHN0dWZmIGV2ZW4gaW4gdGhlIG1vbWVudCB3aGVuIE5hcmNpc3NhIHNhaWQgdGhhdCBIYXJyeSB3YXMgZGVhZC4gCllvdSBtdXN0IGJlIG9mIGxlZ2FsIGFnZSB0byB2aWV3IHRoaXMgdHlwZSBvZiBjb250ZW50IGZyb20gd2hlcmUgeW91IGFyZSBhY2Nlc3NpbmcgdGhpcyBzaXRlLiBCdXNhbiBhbmQgZXNjb3J0cyB0byBnaXZlIHlvdSB0aGUgbW9zdCB3b25kZXJmdWwgYW5kIHVuZm9yLiAKT25jZSBwb3B1bGFyIGluIG1hbnkgb25saW5lIGJpbmdvIHNpdGVzIG9ubHkgYXMgbWluaSBnYW1lcywgc2xvdCBnYW1lcyBoYXZlIGNoYW5nZWQgdGhlIHdheSBwZW9wbGUgdmlldyBzdWNoIHNpdGVzLiBUb2RheSwgdGhlc2UgZ2FtZXMgYXJlIG5vdCBtZXJlbHkgYW4gYWRkaXRpb25hbCBhdHRyYWN0aW9uIGJ1dCB2ZXJ5IG11Y2ggYSBwYXJ0IG9mIGFsbCB0aGUgbWFqb3Igb25saW5lIGJpbmdvIHNpdGVzLiBBIGJpbmdvIHNpdGUgd2l0aG91dCB0aGUgcHJlc2VuY2Ugb2YgZXZlbiBhIGNvdXBsZSBvZiBzbG90cyBhbmQgb3RoZXIgaW5zdGFudCBnYW1lcyBpcyBleGNlcHRpb25hbCBpbiB0aGUgcHJlc2VudCB0aW1lcyBhbmQgbm90IGluIGEgZ29vZCB3YXkuIApIb29rZXIgY2FzdHMgYSBjb25jZXJuZWQgZ2xhbmNlIGJhY2sgYXQgaGltIGFuZCB0aGVuIGdvZXMgYmFjayBpbnNpZGUuIE1lYW53aGlsZSwgdGhlIGJhZCBndXkgd2hvIGdvdCBhd2F5IG1lZXRzIHVwIGluIGEgd2FyZWhvdXNlIHdpdGggYW50aGVyIGJhZCBndXkgZm9yIGZha2UgSUQgYW5kIHNvbWUgZGV0b25hdG9yIGNvcmQuIFNlZW1zIGhlIHdhcyB0aGUgZ3V5IHdobyBibGV3IHRoZSBzYWZlIGJhY2sgYXQgdGhlIHN0b3JlLCB3aGljaCB3ZSBjb3VsZG4ndCB0ZWxsIGJlZm9yZSwgb24gYWNjb3VudGEgdGhlIGhvY2tleSBtYXNrIGFuZCBhbGwuIApUaGVyZSBhcmUgdHdvIG1ham9yIGtpbmRzIG9mIGJvbnVzZXMgdGhlIHNpZ24gdXAgYm9udXMgYW5kIHRoZSBkZXBvc2l0IGJvbnVzOyBib3RoIGV4dGVuZHRoZSBudW1iZXIgb2YgY2hhbmNlcyBhIHBsYXllciBoYXMgaW4gd2lubmluZyBhbmQgbWFraW5nIG1vbmV5LiAKU2V0IHRvIG9wZW4gaW4gRGVjZW1iZXIsIHRoZSAzMTIgZ3Vlc3Qgcm9vbSBob3RlbCB3aWxsIGZlYXR1cmUgYW4gaW5kb29yIGluZmluaXR5IHBvb2wsIHNwYSwgZ3ltLCByb29mdG9wIHJlc3RhdXJhbnQgYW5kIHJlc3RhdXJhbnRzIG9uIGxvd2VyIGZsb29ycy4gClVIIERpZXRldGljIEludGVybnNoaXAgUHJvZ3JhbQpUaGUgaG9zdCB3b3VsZCBvZnRlbiB3YW50IHRvIHBsYXkgYW55IG51bWJlciBvZiBwb2tlciBnYW1lcyBvdGhlciB0aGFuIGhvbGQgRnJvbSBSYXp6LCB0byBPbWFoYSBIaS9sbywgdG8gNyBjYXJkIHN0dWQsIHRvIHNvbWUgc3R1ZmYgSSBjYW4gZXZlbiByZW1lbWJlci4gSXQgd2FzIHNvIG11Y2ggZnVuLiBJdCBhbG1vc3QgZ290IHRvIHRoZSBwb2ludCB0aGF0IEkgZGlkbiB3YW50IHRvIHBsYXkgdGhlIHRvdXJuYW1lbnQ7IEkganVzdCB3YW50ZWQgdG8gZ2V0IGluIHRoZSBjYXNoIGdhbWUgYWZ0ZXJ3YXJkcy4KV293LCBJIHdvdWxkIGhhdmUgZ3Vlc3NlZCB0aGlzIHdhcyBiYWNrIEVhc3Qgc29tZXdoZXJlLiBNeSBob21ldG93biBvZiBCZWxsZWZvbnRlIFBBIGhhcyBhIGJ1bmNoIG9mIFZpY3RvcmlhbiBob21lcyBhbHRob3VnaCBhIGZldyB3ZXJlIGxvc3QgdG8gZmlyZXMgaW4gdGhlIHBhc3QgY291cGxlIGRlY2FkZXMuClNvIHdoYXQgaXMgaXQgYWJvdXQgdGhpcyBwYXJ0aWN1bGFyIHBva2VyIGdhbWUgdGhhdCBjcmVhdGVkIHN1Y2ggYSBzZW5zYXRpb24/IFRoZXJlIGFyZSBzZXZlcmFsIHBvaW50cyB0aGF0IHBsYXkgaW50byB0aGUgcG9wdWxhcml0eSBvZiB0aGUgZ2FtZSwgaW5jbHVkaW5nIHRoZSAic3RhciBzdGF0dXMiIGFjaGlldmVkIGJ5IHNvbWUgb2YgdGhlIHByb2Zlc3Npb25hbCBwbGF5ZXJzLiAKSWYgc28sIGJlIGdlbnRsZSBpbiB5b3VyIGNyaXRpY2lzbSAgIGlmIHRoZXkncmUgcmVhbGx5IGdvaW5nIHdyb25nIHlvdSBtYXkgd2lzaCB0byBkaXJlY3QgdGhlbSB0byB0aGUgV3JpdGluZyBHdWlkZWxpbmVzLiBSZW1lbWJlciwgZXZlcnlvbmUgd3JvdGUgdGhlaXIgZmlyc3QgRW50cnkgb25jZSFIYXZlIHlvdSBjaGVja2VkIHRoZSBjb21tZW50cyBvdGhlciBSZXNlYXJjaGVycyBoYXZlIG1hZGU/IElmIHlvdSBoYXZlIHNwb3R0ZWQgYSBtaXN0YWtlIG9yIG9taXNzaW9uLCBpdCBtaWdodCBhbHJlYWR5IGhhdmUgYmVlbiBwb2ludGVkIG91dCBieSBzb21lb25lIGVsc2UuSWYgeW91IGxpa2UgdGhlIEVudHJ5ICAgc2F5IHNvISBFdmVyeW9uZSBsaWtlcyBjb21wbGltZW50cy4gCk51biBoYWJlIGljaCBiZWkgZGVyIFN1Y2hlIHp1IEFESFMgdW5kIFBva2VyIChtZWluZW0gZGVyemVpdGlnZW4gSHlwZXJmb2t1cykgZGVuIFByb2ZpIE1pa2UgTWF0dXNvdyBnZWZ1bmRlbi4gRGVyIGltbWVyaGluIHNpY2ggYWxzIEFESEQsIEJpcG9sYXIgdW5kIFN1Y2h0a3Jhbmsgb3V0ZXRlIHVuZCBlaW4gQnVjaCBkYXJiZXIgZ2VzY2hyaWViZW4gaGF0LiAKVGhpcyBpcyBhIGZhbWlseSBvd25lZCBidXNpbmVzcyB0aGF0IGhhcyBiZWVuIGFyb3VuZCBzaW5jZSB0aGUgODBzLCBzbyB3ZSB0b29rIHRoZWlyIHdvcmQgZm9yIGl0IGFuZCBwdXJjaGFzZWQgYSBNaWVsZSBpbnN0ZWFkLi4gCkhvdCBnbHVlIGd1bgpGaXJzdCwgeW91IGhhdmUgdG8gZmluZCB0aGUgY29tbW9uIGRlbm9taW5hdG9yLiBTbyB5b3Ugd291bGQgdGFrZSA0IGFuZCAzLCBhbmQgbGlzdCBhbGwgdGhlaXIgbXVsdGlwbGVzLiBOb3csIGxvb2sgYXQgeW91ciBsaXN0IG9mIG11bHRpcGxlcy4gRG8gMyBhbmQgNCBoYXZlIGFueSBtdWx0aXBsZXMgaW4gY29tbW9uPyBZZXMsIHRoZXkgZG8uIFRoZW4sIHlvdSBsb29rIGF0IHdoYXQgdGhlIGRlbm9taW5hdG9ycyB3ZXJlIGZpcnN0LiBUaGUgZmlyc3QgZGVub21pbmF0b3Igd2FzIDQuIEFuZCB0byBnZXQgdG8gMTIsIDQgaGFkIHRvIHRpbWVzIGJ5IDMuIFNvIHlvdSBsb29rIGF0IHRoZSBudW1lcmF0b3IsIDMsIGFuZCB5b3UgYWxzbyB0aW1lcyBpdCBieSAzLiBTbyB5b3Ugbm93IGhhdmUgOSBvdmVyIHR3ZWx2ZS4gRG8gdGhlIHNhbWUgdGhpbmcgdG8gdGhlIG90aGVyIGZyYWN0aW9uLiAzIGhhZCB0byB0aW1lcyBieSA0IHRvIGdldCB0byAxMiBzbyBkbyAyIHRpbWVzIDQgYW5kIHlvdSBub3cgaGF2ZSA4IG92ZXIgMTIgYW5kIDkgb3ZlciAxMiwgc28geW91IGtub3cgdGhhdCAzIG92ZXIgNCBpcyBncmVhdGVyIHRoYW4gMiBvdmVyIHRocmVlLiBJIGhvcGUgdGhhdCBoZWxwcyEgKEZ1bGwgQW5zd2VyKQpTdG9wIHdvcnJ5aW5nIGFib3V0IHVzaW5nIHBhcnRpY3VsYXIgdGVjaG5pcXVlcyBvciBnb2luZyBmb3IgYSBjZXJ0YWluICJsb29rIi4gQSBsb3Qgb2YgdGhlIHRyYXZlbCBhbmQgYWR2ZW50dXJlIHRvdXJpc20gdmlkZW9zIG91dCB0aGVyZSBsb29rIHRoZSBzYW1lICAgd29yc2UsIHRoZXkgbG9vayBsaWtlIHRoZXkgdHJ5aW5nIHRvIGxvb2sgdGhlIHNhbWUuIERvbiBsYXllciB0aGUgZWRpdGluZyBzbyBoZWF2aWx5LCBzdG9wIGN1dHRpbmcgc28gZmFzdCwgc3RvcCBpbmplY3RpbmcgdXJnZW5jeSBpbnRvIGV2ZXJ5dGhpbmcuIApIZSBqb2luZWQgdGhlIGxhdyBmaXJtIG9mIENsZW1lbnQgRWFzdG1hbiBhbmQgaW4gMTk2MiBiZWNhbWUgYSBwYXJ0bmVyIHdoaWNoIHByb21wdGVkIGEgbmFtZSBjaGFuZ2UgdG8gQ2xlbWVudCwgRWFzdG1hbiwgRHJlZ2VyLCBNYXJ0aW4gYW5kIE1ldW5pZXIuIAovIC4gMjAwOS4gU3RldmUgV2ViYi4gCkRhbm4gZ2lidCBlcyBub2NoIGRhcyBEcmVpcGNrY2hlbm1pc2NoZW4gdW5kIGRhcyBDaGFybGllciBNaXNjaGVuLiBEYXMgRGVjayB3aXJkIGJlaSBiZWlkZW4gaW4ga2xlaW5lcmUgUGNrY2hlbiBnZWhhbHRlbiB1bmQgZWluIE1pc2Nodm9yZ2FuZyBzaW11bGllcnQuIERhenUgbXVzcyBlciBuYXRybGljaCB6dXZvciBmYWxzY2ggZ2VtaXNjaHQgdW5kIGFiZ2Vob2JlbiBoYWJlbiB1bSBkaWUgTGFnZSBkZXIgS2FydGVuIHp1IGVya2VubmVuLiAKTGVubm9uIHN1cHBvcnRlcnMgYXJlIHRoZSBwb3J0bHkgb25lcyB0aGF0IGdldCBmZWF0dXJlZCBvbiAvci9iZWhvbGR0aGVtYXN0ZXJyYWNlLiBUaGV5IHZlcnkgdGFsZW50ZWQgYXQgc2hvdXRpbmcgdGhpbmdzIHRoYXQgc291bmQgbGlrZSB3b3Jkcy4gL3IvYmFkdWsgaXMgbm90IGRpc2FwcG9pbnRpbmcgaGVyZS4KUmV0YWlsLiBEaXNjIGNoZWNrIChyZXF1aXJlcyB0aGUgQ0QvRFZEIGluIHRoZSBkcml2ZSB0byBwbGF5KSBXaW5kb3dzIC4gRG93bmxvYWQgUENHYW1pbmdXaWtpIFBhdGNoLiAKVGhlIHByb2JsZW0gd2FzIE5hemkgaWRlb2xvZ3kuIENvbW11bmlzbSBhbmQgTmF6aSBpZGVvbG9neSBkbyBub3QgbWVzaCBhdCBhbGwuIENvbW11bmlzdHMgYXJlIHVudGVybWVuc2NoLiAKVGhlcmUgaXMgYnV0IEkgZG9uJ3QgcmVtZW1iZXIuIFN0YXlpbmcgb24gRmFjZWJvb2soc3RheSBvbiB0aGUgd2Vic2l0ZSBJIGRpZG4ndCB3ZW50IGFueXdoZXJlIGVsc2UpIGFuZCBsb29raW5nIGZvciBpdCB3aGlsZSBwbGF5aW5nIHRoZSBnYW1lLCB5b3Ugd291bGQgcHJvYmFibHkgZmluZCB0aGUgc3VydmV5LiBCYXNpY2FsbHkgYWxsIHlvdSB0byBkbyB3YXMgcmVnaXN0ZXIgYW5kIHBsYXkgdHdvIHRyaXZpYSBnYW1lcy4oRGlkbid0IG1hdHRlciBpZiB5b3UgYW5zd2VyZWQgaXQgd3Jvbmcgb3Igbm90KS4gQXQgdGhlIG1vbWVudCBJJ20gc3RpbGwgdHJ5aW5nIHRvIGZpbmQgYSB3YXkgb2YgZ2V0dGluZyBiYWNrIHRvIGl0LiBZb3UgdXNlIHJlYWwgbW9uZXkgdG8gYnV5IHBva2VyIGNoaXBzLCBhbmQgdGhlbiB5b3UgdXNlIHRoZSBjaGlwcyB0byBiZXQgYW5kIGNhbGwgaW4gdGhlIHBva2VyIGdhbWUuIE9uY2UgeW91IGFyZSBkb25lIHBsYXlpbmcsIHlvdSBnbyB0byB0aGUgY2FzaGllciB3aXRoIHRoZSBjaGlwcyB0aGF0IHlvdSBoYXZlIGFuZCBnZXQgcmVhbCBjYXNoIG1vbmV5IGluIHJldHVybiBmb3IgdGhlbS4gSSBhbSB0cnlpbmcgdG8gZ2F1Z2UgeW91ciBvcHBvbmVudCdzIHJlYWN0aW9uLiBJZiBJIGxvb2sgaGltIG9yIGhlciBkZWFkIG9uLCBteSBvcHBvbmVudCBtYXkgYmUgYWJsZSB0byBhZGp1c3QgaGltIG9yIGhlcnNlbGYgYW5kIGtlZXAgZnJvbSBnaXZpbmcgYXdheSBoaXMgb3IgaGVyIHRlbGwuIE5vdywgaWYgaSBhbSBwbGF5aW5nIHdpdGggeW91ciBjaGlwcyBhbmQgY2hlY2tpbmcgb3V0IHlvdXIgb3Bwb25lbnQgb3V0IG9mIHRoZSBjb3JuZXIgb2YgbXkgZXllICh3aGljaCB3b3JrcyBldmVuIGJldHRlciBpZiB5b3UncmUgd2VhcmluZyBzdW5nbGFzc2VzIGxpa2UgbWFueSBvZiB0aGUgcHJvcyBkbyksIGhlIG9yIHNoZSBtYXkgbm90IHBpY2sgdXAgb24gaXQgYW5kIHdpbGwgZ2l2ZSBzb21ldGhpbmcgYXdheS4gSXQgZ29lcyBiYWNrIHRvIHRoZSBkaXN0cmFjdGlvbi9pbnRpbWlkYXRpb24gZmFjdG9yLiAoRnVsbCBBbnN3ZXIpCkl0IGltcG9ydGFudCB0byBiZSBvbiB0aGUgc2FtZSBwYWdlIGFib3V0IGNlcnRhaW4gdGhpbmdzIGJlZm9yZSBydXNoaW5nIGludG8gbWFycmlhZ2UuIEl0IGJldHRlciB0byBmaWd1cmUgaXQgb3V0IGJlZm9yZSB5b3UganVtcCBpbiB0aGUgZGVlcCBlbmQhCkJ1dCBDYWRhIGluY2hlZCBiYWNrIHdpdGggYSBzZXJpZXMgb2YgdW5jaGFsbGVuZ2VkIGJldHMsIHRoZW4gZG91YmxlZCBoaXMgc3RhY2sgd2l0aCBhIGRyYW1hdGljIGFsbCBpbiBzaG93ZG93biBpbiB3aGljaCBoZSBzaG93ZWQgdGhyZWUgdGhyZWVzLCBhbmQgaGUgd2FzIG9uIGhpcyB3YXkuIApOdW1iZXI6IGFyb3VuZCAyMDAsMDAwLiAKSGUgdXNlZCB0byBiZSBzbyBtdWNoIG1vcmUgZnVuLiAKTGV0IGFsc28gbWVudGlvbiB0aGF0IHRoZSBvcmlnaW5hbCBTcGxhdG9vbiBvbiBXaWlVIGhhZCAzMiB0aWNrICgzMiB1cGRhdGVzIHBlciBzZWNvbmQpLiBUaGUgbWFpbiByZWFzb24gYmVoaW5kIFNwbGF0b29uIDIgbm90IGhhdmluZyBjbG91ZCBzYXZlcywgaXMgYmVjYXVzZSBOaW50ZW5kbyBoYXMgbm8gZGVkaWNhdGVkIHNlcnZlcnMsIHlvdXIgcmFuayBhbmQgeW91ciBwbGF5ZXIgZGF0YSBpcyBzdG9yZWQgb24geW91ciBzeXN0ZW0uIFlvdSBjYW4sIGlmIHlvdSBzbyB3YW50ZWQgdG8sIGdldCBpbnRvIHlvdXIgc2F2ZSBkYXRhIHRocm91Z2ggYSBtb2RpZmllZCBzd2l0Y2ggYW5kIGdpdmUgeW91cnNlbGYgYSBoaWdoZXIgcmFuay4uIApTIGNhdXNhIG1haXMgcHJvYmxlbWFzIGUgc2VyIHVzYWRvIGNvbnRyYSB2b2MuLiAKUG9pbnQgYmVpbmcgdGhhdCB0aGUgR0RQUiBpcyBjb21wcmlzZWQgb2YgYSBtaXggb2YgY2xlYXIgcnVsZXMgYW5kIHByaW5jaXBsZXMuIApNY0tuaWdodCBGb3VuZGF0aW9uOiAkMTUgbWlsbGlvbiBmb3IgMTUgbmV3IE1jS25pZ2h0IFByZXNpZGVudGlhbCBFbmRvd2VkIENoYWlycywgdG8gYmUgYXNzaWduZWQgdGhyb3VnaG91dCB0aGUgVW5pdmVyc2l0eSBhdCB0aGUgUHJlc2lkZW50J3MgZGlzY3JldGlvbiwgdG8gYXR0cmFjdCBhbmQgcmV0YWluIHRvcCBmYWN1bHR5LgpXZSB3ZXJlIGxhc3QgNyBwbGF5ZXJzLiBUaGUgYnViYmxlIGFjY29yZGluZyB0byB0aGUgcnVsZSB3YXMgNSBwbGF5ZXJzLiBJIGRpZCBub3Qga25vdyB0aGF0IHRoZSB0YWJsZSBjYW4gZGVjaWRlIHRvIGNoYW5nZSB0aGF0IGlmIHRoZXkgYWxsIGFncmVlLiAKSmFnbWVldCBTaW5naCBoZWxkIGEgcm91bmQgdGFibGUgbWVldGluZyBvbiBGcmlkYXkgYXQgdGhlIFJvb3QgQ2VsbGFyLCB3aGVyZSBoZSBoZWFyZCBmaXJzdCBoYW5kIHN0b3JpZXMgZnJvbSBMb25kb24gcmVzaWRlbnRzIHdobyBhcmUgc3RydWdnbGluZyB3aXRoIGhpZ2ggcmVudHMgYW5kIHN1cmdpbmcgaG9tZSBwcmljZXMuCklmIHlvdSBkb24gaGF2ZSB0aGUgZG93bnRpbWUgdG8gd2F0Y2ggdGhlaXIgc3RyZWFtcywgbWF5YmUganVzdCB3YXRjaCBhIGNvdXBsZSBvZiB0aGVpciBZb3V0dWJlIHZpZGVvcyBoZXJlIGFuZCB0aGVyZS4gSWYgeW91IGRvIHdhdGNoIHRoZWlyIHN0cmVhbXMgdGhvdWdoLCB0cnkgdG8gZ2V0IGFjdGl2ZSBpbiB0aGUgY2hhdC4gQXNrIGJhc2ljIHF1ZXN0aW9ucyBpbiB0aGUgY2hhdCB3aGVuIHlvdSBzZWUgc29tZXRoaW5nIHlvdSBkb24gcXVpdGUgZ2V0LCBhbmQgYmUgcmVjZXB0aXZlIG9mIHRoZSBhbnN3ZXJzIGZyb20gdGhlIHN0cmVhbWVyIGFuZCB0aGUgdmlld2VycyhldmVuIGlmIHNvbWUgcGVvcGxlIG1ha2UgZnVuIG9mIHlvdSBvciBjb25kZXNjZW5kLCBiZWNhdXNlIHRoZSBwb2tlciBjb21tdW5pdHkgaXMgbGFyZ2VseSBpbnN1ZmZlcmFibGUpLiAKIDggcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvUGVkcyB3ZWFyaW5nIGVhcnBob25lcyBpcyBteSBhcmd1bWVudCBhZ2FpbnN0IG1hbmRhdG9yeSBiZWxscyBmb3IgYmlrZXMgYW5kIHNjb290ZXJzLiAKQmFzaWNhbGx5LCBDYXNpbm8gV2FyIGlzIGEgY2FzaW5vIGNhcmQgZ2FtZSB3aGljaCBpcyBiYXNlZCBvbiBXYXIgICBhIHBvcHVsYXIgY2FyZCBnYW1lIHBsYXllZCBieSBjaGlsZHJlbi4gRmlyc3QsIGhlcmUncyBhIHF1aWNrIGxvb2sgYXQgdGhlIHJ1bGVzIG9mIHRoZSBXYXIgY2FyZCBnYW1lLiAKS3d3eGlzICA1IHBvaW50cyAgc3VibWl0dGVkIDkgbW9udGhzIGFnbwpJIGhhdmVuIGZvdW5kIGFueSBnb29kIHJlc291cmNlcyBvbmxpbmUsIGJhc2ljYWxseSBqdXN0IHJ1bm5pbmcgcmVsYXRpdmVseSBzaW1wbGUgc2ltcyBieSBteXNlbGYgc28gZmFyLiBCdXQgSSBzZWVuIHNvbWUgc3VjY2Vzcy4KWW91IGNhbm5vdCBsaWtlIGNvbXBhbmllcy4gCk9mIHRoZSBtYW55IHRoaW5ncyB0aGF0IGNhbiBiZSBzYWlkIGFib3V0IG1hbnVyZSB5b3UgY2FuIHNheSBidXQgY2FuIHNheSBhYm91dCBpdHMgY2hlbWljYWwgcmVwbGFjZW1lbnQgaXMgdGhhdCBpdCBpcyBtYWRlIGZyb20gZm9zc2lsIGZ1ZWxzIGFuZCBzdWNrcyBnb29kIHN0dWZmIGZyb20gdGhlIHNvaWwgYW5kIHVsdGltYXRlbHkgbWFrZXMgdGhlIGZhcm1sYW5kIGl0IGlzIGZlcnRpbGl6aW5nIHVuZmFybWFibGUuIFRoYXQgd2hhdCBwb3BwZWQgaW50byBteSBoZWFkIHdoZW4gSSBidW1wZWQgaW50byB0aGlzIHdvb2RjdXQgb2YgYSBtYW51cmUgc3ByZWFkZXIgd2hpbGUgZmFybWluZyBzb21ldGhpbmcgZWxzZSBpbiB0aGUgMTgyOSB2b2x1bWUgb2YgVGhlIEpvdXJuYWwgb2YgdGhlIEZyYW5rbGluIEluc3RpdHV0ZS4gSXQgYSByZWxhdGl2ZWx5IHNpbXBsZSBpbXByb3ZlbWVudCB0byBhIG5lY2Vzc2FyeSBhbmQgbGFib3Jpb3VzIGpvYiBhZGRpbmcgdGhlIHNwcmVhZGVyIG1hZGUgdGhlIGFwcGxpY2F0aW9uIG9mIG1hbnVyZSBmYXIgZWFzaWVyIHRoYW4gaGF2ZSBpdCBzbGlkZSB0aHJvdWdoIGEgamFtYWJsZSBzbHVpY2UgaW4gdGhlIGJvdHRvbSBvZiBhIHdhZ29uLCBhbmQgY2VydGFpbmx5IGEgbG90IGVhc2llciBhbmQgbW9yZSB0aG9yb3VnaCB0aGFuIHNwcmVhZGluZyBpdCBieSBoYW5kLiAKSSBhbSB0cnVseSBhc2hhbWVkIHRvIGJlIGFuIEFtZXJpY2FuLCB3aXRoIHN1Y2ggYSBnb3Zlcm5tZW50LiAKVGhleSBoYXZlIG5vIGNvbmNlcHQgb2YgdHJpdmlhbCBwdXJzdWl0cyBsaWtlIGpvYnMgYW5kIGJpbGxzLi4gCkluIHRoaXMgd2F5LCB0aGUgYWdpbmcgcHJvY2VzcyBzZWVtcyBub3Qgb25seSB0byBiZSBzbG93ZWQsIGJ1dCBhbHNvIHRvIGJlIHJldmVyc2VkLi4gCiJIdW5kcmVkcyBvZiBmcmllbmRzIG9uIEZhY2Vib29rLCBob3cgbWFueSBjYW4gd2UgdHJ1bHkgY291bnQgb24gdG8gaGVscCB1cyB3aGVuIGluIHRyb3VibGUgYXQgbmlnaHQ/IFdlIGhlbHBlZCBBYmhpIHRvIGtub3cgaGlzIDRhbUZyaWVuZHMsIiBzYXlzIEFpcnRlbCBhYm91dCB0aGUgdmlkZW8uCkdvIG9ubGluZSBmaXJzdCBhbmQgc2V0IHVwIGEgb25saW5lIGFjY291bnQuIElmIHlvdSBoYXZlIHVubGltaXRlZCB0ZXh0IG1lc3NhZ2VzIHRoYXQgaXMgdGhlIHdheSB0byBnbyBhcyBJIGFsd2F5cyBrbm93IG15IGJhbGFuY2UgYXMgc29vbiBhcyBJIHNwZW5kIG1vbmV5IHVzaW5nIG15IGNhcmQgdGhlIHN5c3RlbSBkZWR1Y3RzIHRoZSBtb25leSBpbW1lZGlhdGVseSBhbmQgaXQgc2VuZHMgbXkgcGhvbmUgYSB0ZXh0IG1lc3NhZ2Ugd2l0aCBteSBuZXcgYmFsYW5jZS4gCklmIHlvdSBhcmVuJ3Qgd29ycmllZCBhYm91dCB3ZWlnaHQsIHlvdSBjYW4gZGVmaW5pdGVseSBzcGx1cmdlIHRoZXNlIGNhcmJzLCBsaWtlIGJyZWFkLiBCdXQgZG9uJ3QgZWF0IGZyaWVzLCBjaGlwcywgb3IgYW55dGhpbmcgd2l0aCBubyBudXRyaXRpb25hbCB2YWx1ZS4uIApUIEFwcGx5LiAKSXQgaXMgYWxzbyBwb3NzaWJsZSBhbnl0aGluZyBvbiAiaVR1bmVzIiBjYW4gYmUgZm91bmQgb24gQ0QgZm9yIGhpZ2hlciBxdWFsaXR5LiBBbHNvLCB0aGUgV2FsbWFydCBzb3VuZGNoZWNrIG1heSBiZSBmb3VuZCBvbmx5IHRocm91Z2ggV2FsbWFydHMgbXAzIHNpdGUuIExhc3QsIHRoZXNlIHNvbmdzIGFyZSBsaXN0ZWQgaW4gbm8gcGFydGljdWxhciBvcmRlci4gKGxhc3QgZWRpdDogMDUyMzExKSBJdCdzIGZpbmFsbHkgb3V0ISAxNDggKEZ1bGwgQW5zd2VyKS4gCkF0IHNvbWUgcG9pbnQgaW4gdGhlIG1vdmllIEkgc3RhcnRlZCBmZWVsaW5nIGxpa2UgaXQgd2FzIGxlc3MgdHJ5aW5nIHRvIGJlIGEgd2VsbCBjcmFmdGVkIG1vdmllIGFuZCBtb3JlIGFib3V0IHRlbGxpbmcgYSBtZXNzYWdlLCB3aGV0aGVyIG9yIG5vdCB5b3UgYWdyZWUgd2l0aCB0aGUgbWVzc2FnZS4gSSBhbHNvIHRob3VnaHQgdGhlIGNoYXJhY3RlciBhcmMgb2YgZXRoYW4gaGF3a2UgbmVlZGVkIG1heWJlIDUgMTAgbW9yZSBtaW51dGVzIG9mIHN0ZXdpbmcgYmVmb3JlIEkgY291bGQgcmVhbGx5IGJlbGlldmUgaGlzIGNoYXJhY3Rlci4KICBBY3RlcyBjb2xsZWN0aWZzIDogaWxzIHNlIGNhcmFjdHJpc2VudCBwYXIgdW5lIHBsdXJhbGl0IGRlIGRjbGFyYXRpb25zIGRlIHZvbG9udHMgY29uY29yZGFudGVzIGVuZ2FnZXMgZGFucyBsYSByYWxpc2F0aW9uIGQndW5lIG9wcmF0aW9uIGp1cmlkaXF1ZSBxdWkgZXN0IGducmFsZW1lbnQgZGUgZHJvaXQgcHVibGljIChleC4gClRoZSBmaWxtIGlzIGFib3V0IEFzaWFuIC4gQ3JlYXRlIGEgYm9vayBEb3dubG9hZCBhcyBQREYgUHJpbnRhYmxlIHZlcnNpb24uIApXZSBhcmUgYmxhY2suIFRvIHRyeSBhbmQgc2VwYXJhdGUgb3Vyc2VsdmVzIGZyb20gb3RoZXIgcmFjZXMsIGluIGEgZGl2aXNpdmUgbWFubmVyLCBpcyByYWNpc3QgaW4gaXRzZWxmLiBJIHdhcyBvbmUgb2YgdGhlIGZpcnN0IEluZGlhbiBwZW9wbGUgaW4gbXkgdG93bi4gCkkgc3RhcnQgYnkgZ2V0dGluZyBzb21lIHRhYmxlcyBzZXR1cCwgcmVhZCBhYm91dCBob3cgdG8gbmFtZSBjb2x1bW5zLCBidWlsZCBhIHJlcG9ydCBiYXNlZCBvbiB0aGUgc2luZ3VsYXIgdGFibGUsIGFuZCBidWlsZCBmcm9tIHRoZXJlLCBqb2lucy9hc3NvY2lhdGlvbnMsIGEgcXVlcnkgaW50ZXJmYWNlLCBldGMuCiBOSEwgMjAxOS4uIApOb3QgbGlrZSBJIGFtIGdvaW5nIHRvIHNjaG9vbC4gSSBzbmFwcGVkIGJhY2sgdG8gaGVyLgpJdCdzIGFsc28gdGhlIHRoaXJkIFdyaWdodCBtb3ZpZSB0byBzdGFyIEtlaXJhIEtuaWdodGxleSwgYW4gYWN0cmVzcyB3aG8gaGFzIHJld2FyZGVkIGhpbSBiZWZvcmUgKGluICJQcmlkZScnIGFuZCAyMDA3J3MgIkF0b25lbWVudCcnKSBhbmQgd2hvIGRvZXMgaGVyIGRhbW5lZGVzdCB0byBidXJzdCB0aHJvdWdoIHRoZSBmaWxtJ3MgcGxhdGUgZ2xhc3MgcmVtb3ZlLiBJdCdzIG5vdCBoZXIgZmF1bHQgc2hlIGRvZXNuJ3QgaGF2ZSB0aGUgc291bCBvZiBHcmV0YSBHYXJibyBpbiB0aGUgMTkzNSB2ZXJzaW9uIG9mICJBbm5hIEthcmVuaW5hJycgKG9yIGFuIGVhcmxpZXIgc2lsZW50IGFkYXB0YXRpb24sICJMb3ZlJycpLiBXaG8gZG9lcz8gS25pZ2h0bGV5J3MgQW5uYSBpcyBhIGJlYXV0aWZ1bCwgc2hhbGxvdyBzb25nYmlyZCwgbWFycmllZCB0byBhIHN0b2RneSBidXJlYXVjcmF0IChKdWRlIExhdyBiZWhpbmQgcHJpZ2dpc2ggc3BlY3RhY2xlcyBhcyBLYXJlbmluKSBhbmQgZmxpdHRpbmcgdGhyb3VnaCB0aGUgdXBwZXIgY2xhc3Mgd2hpcmwgb2YgbGF0ZSBJbXBlcmlhbCBSdXNzaWEgYXMgdGhvdWdoIHNoZSBvd25lZCBpdCwgd2hpY2ggc2hlIGRvZXMuLiAKVGhpbmdzIHRoYXQgd29yayBmb3IgbWU6IGhpcCBsZW5ndGggKHNob3J0ZXIgdGhhbiBzb21lIHBlb3BsZSBoaXAgbGVuZ3RoKSBmaXR0ZWQgdGVlcy90b3BzIHdpdGggd2lkZSBsZWdnZWQgcGFudHMsIGxvbmcgY2FyZGlzIHdpdGggc2tpbm55IGplYW5zL3BhbnRzLCBtYXhpIGRyZXNzZXMgd2l0aCBhbiBlbXBpcmUgd2Fpc3QgdGhhdCBhcmUgZml0dGVkIGluIHRoZSBidXN0IGFuZCBmbG93IHVuZGVyIHRoYXQsIGFuZCBzd2luZyB0YW5rcyB0aGF0IGFyZSBmaXR0ZWQgaW4gdGhlIGJ1c3QuIApVbiBqb3VyLCB1biByZXNwb25zYWJsZSBjb21tdW5pc3RlIHZlbnUgIG1hIHJlbmNvbnRyZSBhcHJzIGF2b2lyIGx1IHVuZSBsZXR0cmUgcXVlIGonYXZhaXMgZW52b3llICBsYSBkaXJlY3Rpb24gZHUgUENGIGNvbmNlcm5hbnQgc2Egc3RyYXRnaWUgICBqJ3RhaXMgdHJzIHBydGVudGlldXgsIGNvbW1lIG9uIGwnZXN0IHNvdXZlbnQgIGNldCBnZSAgIG0nYXZhaXQgZGl0IGF2ZWMgdW4gc3JpZXV4IHF1ZSBqZSBqdWdlIGF1am91cmQnaHVpIGNvbWlxdWUsIGVuIHJlZ2FyZGFudCBsYSByc2lkZW5jZSBib3VyZ2VvaXNlIG8gaidoYWJpdGFpcyA6ICJQcm9maXRlcyBlbiBiaWVuIHBhcmNlIHF1ZSBjZWxhIG5lIGR1cmVyYSBwYXMgbG9uZ3RlbXBzIiwgY29tbWUgc2kgbGEgcnZvbHV0aW9uIHRhaXQgaW1taW5lbnRlIGV0IHF1ZSBsYSBtYWlzb24gbyBub3VzIHZpdmlvbnMgYWxsYWl0IG5vdXMgdHJlIGNvbmZpc3F1ZS4gTGEgcnNpZGVuY2UgZGVzIEZsb3JhbGllcywgcXVpIHNlIHRyb3V2ZSB0cmF2ZXJzZSBTYWludCBQaWVycmUsIHRvdXQgcHJzIGR1IHN0YWRlIGQnQWl4IGVuIFByb3ZlbmNlIGVzdCBlbmNvcmUgbCB0YW5kaXMgcXVlIGxlIFBDRiBhLCBsdWksIHF1YXNpbWVudCBkaXNwYXJ1IGR1IHBheXNhZ2UgcG9saXRpcXVlLi4gCkRlYWRIb25vciAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpZb3UgZ28gdG8gYW55IE5ITCB0ZWFtIHdlYnNpdGUsIHRoZXkgYXJlIHN0YW5kYXJkaXplZC4gClRFTVBFUkFUVVJFUyBZRVNURVJEQVkgRnJlZGVyaWNrIDkyIDY4OyBDdW1iZXJsYW5kIDg5IDU4OyBIYWdlcnN0b3duOTIgNjQ7IE9ha2xhbmQ3OSA2NDsgV2VzdG1pbnN0ZXIgOTAgNjguICBEYXZpZExlc2hlciBORVdTIFBBIFBFUiBmbCBSIEMgSDFWIEUgXy4gCklmIHRoYXQgaGFwcGVucywgeW91IG5lZWQgdG8gbW92ZSBET1dOIHN0YWtlcyBJTU1FRElBVEVMWS4gRG8gbm90IHBhc3MgZ28uIApXaXRoIG9ubHkgYSBmZXcgZXhjZXB0aW9ucywgbW9zdCBvZiB0aGVzZSBjaG9pY2VzIGFyZSBjYXJkIGdhbWVzIHdoZXJlIHRoZSBoaWdoZXIgeW91ciBza2lsbCBsZXZlbCwgdGhlIGJldHRlciB5b3VyIG9kZHMgd2lsbCBiZSBvZiB3aW5uaW5nLiBUaGUgdHdvIG1vc3Qgb2J2aW91cyBzZWxlY3Rpb25zIHdvdWxkIGJlIGJsYWNramFjayBhbmQgcG9rZXIsIG1vc3QgY29tbW9ubHkgdGhlIHNlbnNhdGlvbmFsbHkgZW50ZXJ0YWluaW5nIFNsb3RzIGdhbWVzIHZhcmlldHkuIApJZiB0aGUgdHdvIG9mIHRoZW0sIGFuZCB0aGVpciBiYXNlciBpbXB1bHNlcyBzdGFydHMgdG8gd2VhciBvbiB0aGUgdmlld2VyIGFmdGVyIGEgd2hpbGUsIHRoZXJlIGFsd2F5cyBhIHdpbmRvdyB0byBsb29rIG91dCBvZi4gRmxlY2sgYW5kIEJvZGVuIHBhaW50cyBhbiBpbnRlcnN0YXRlIEludGVyc3RhdGUgcG9ydHJhaXQgb2YgdGhlIGhlYXJ0IG9mIEFtZXJpY2EuCkkganVzdCB3YW50IHRvIHNheSB0aGF0IGJvdGggYXJlIGhvcnJpZmljYWxseSB0ZXJyaWJsZSBhdCBtb2RlcmF0aW5nIHRoZWlyIGNvbW11bml0aWVzLiBUaGUgYW1vdW50IG9mIHNoaXRwb3N0aW5nIGFuZCB0cm9sbGluZyBpbiBiYWQgZmFpdGggdGhhdCBJIHNlZSBvbiB0aG9zZSBwbGF0Zm9ybXMgaXMgc3RhZ2dlcmluZy4gSXQgc2VlbXMgdG8gYmUgdGhlIG1haW4gZXhwb3J0IG9mIHNvY2lhbCBtZWRpYSBub3dhZGF5cy4gV2UganVzdCBhcmUgbXVjaCBtb3JlIGF3YXJlIG9mIGl0IG5vdyBiZWNhdXNlIG9mIHRoaW5ncyBsaWtlIGZhY2Vib29rLiBJIHRoaW5rIHBlb3BsZSBnZXQgdG9vIGNhdWdodCB1cCBpbiB0aGUgbmVnYXRpdmUgcGFydHMgYW5kIGRvbiB0YWtlIHRoZSBzdGVwIGJhY2sgdG8gc2VlIGhvdyBjb25uZWN0ZWQgaXQgbWFkZSB0aGUgd29ybGQuClRodXMsIGEgbnVtYmVyIG9mIHJlYXNvbnMgZm9yIG15IG5pY2tuYW1lLiAKSGF2ZSBhIGxvdmVseSBuaWdodC4uIApCaXRjb2luIGhhcyBncm93biBvdXQgb2YgdGhlIGFzaGVzIHdpdGggYSBsb3Qgb2YgY29tcHV0ZXIgc2NpZW50aXN0LCBsaWJlcnRhcmlhbnMgYW5kIGxhdGVyIGVudHJlcHJlbmV1cnMgYWRvcHRpbmcgaXQsIG1pbmluZyBpdCwgaG9kbGluZyBpdC4gCk4nZXNzYXlleiBwYXMgZCdlbmNocmlyIHBvdXIgdm91cyByYXR0cmFwZXIgdW5lIGZvaXMgcXVlIHZvdXMgYXZleiBwZXJkdSB0b3V0IGNlIHF1ZSB2b3VzIGF2aWV6IHBydnUgZGUgbWlzZXIuIEF0dGVuZGV6IGRlIHBvdXZvaXIgcGVyZHJlIGNldHRlIHNvbW1lICBub3V2ZWF1IHNhbnMgcXVlIGNlbGEgc29pdCBwcm9ibG1hdGlxdWUgcG91ciBwb3V2b2lyIGpvdWVyIGVuIHZvdXMgYW11c2FudC4uIApBdCB0aGUgb3Bwb3NpdGUgZW5kIG9mIHRoYXQgdHJlbmQgd2FzIHRoZSBjb21iaW5lZCB3YWdlcmluZyBvbiBncmV5aG91bmRzLCB0aG9yb3VnaGJyZWRzLCBzdGFuZGFyZGJyZWRzLCBxdWFydGVyIGhvcnNlcyBhbmQgamFpIGFsYWkuIEJldHRpbmcgb24gdGhvc2UgZXZlbnRzIGZlbGwgdG8gaXRzIGxvd2VzdCBsZXZlbCBpbiBtb3JlIHRoYW4gYSBkZWNhZGUgdG8gJDc0MCw2MjIsOTQ3LCBhIDQuOTcgcGVyY2VudCBkaXAgb3ZlciB0aGUgcGFzdCAxMiBtb250aHMgYXQgdGhlIDM2IHNpdGVzIHRoYXQgcmVwb3J0ZWQgaGFuZGxlLi4gCkFkZGVkIHRvIHRoaXMsIHRoZSBwbGF5ZXJzIGNhbiBhbHNvIHdpbiBScy4gCkJyb3duIGVuY291cmFnZXMgeW91IHRvIGV4cGxvcmUgbWFueSBhcmVhcy4gTWFrZSBzdXJlIHRvIGRvIHRoYXQuIERvbnQgd29ycnkgYWJvdXQgZmFpbGluZy4gSSBhbSBhbiBhcHBsaWVkIG1hdGggY29uY2VudHJhdG9yIGFuZCBJIHN0cnVnZ2xlZCBhIGxvdCAoc3RpbGwgZG8pIGJhY2sgaW4gZnJlc2htYW4geWVhciB3aGVuIEkgd2FzIG5vdCB1c2VkIHRvIHRoZSBsYW5ndWFnZSBvZiBjb2xsZWdlIGxldmVsIG1hdGhlbWF0aWNzLiBUaGF0IGlzIHRoZSBwYXJ0IG9mIGxlYXJuaW5nLiBZb3UgbWlnaHQgYWxzbyBzZWUgdGhhdCBzb21lIHBlb3BsZSB3aG8gZXhjZWxsIGF0IHdoYXQgdGhleSBkbywgYnV0IHRoZXkgYXJlIGFjdHVhbGx5IHdvcmtpbmcgaGFyZCB0byBrZWVwIGl0IHVwIGFzIHdlbGwuIFNvIG5vIHdvcnJpZXMuIEl0IGhhcyBiZWVuIG9ubHkgYSBjb3VwbGUgb2Ygd2Vla3Mgc2luY2UgdGhlIHNjaG9vbCBzdGFydGVkLiBFbmpveSB5b3VyIGZpcnN0IHllYXIgd2hpbGUgeW91IGNhbiEKWW91IHlvdXJzZWxmIHNhaWQgeW91IG1vdmVkIGF3YXkgMjAgeWVhcnMgYWdvLiBQZW9wbGUgbGlrZSB5b3UgYXJlIHRoZSBvbmVzIHRoYXQgYXJlIHN0cml2aW5nIHRvIG1ha2UgbXkgaG9tZXRvd24gc29tZXRoaW5nIHRvIGJlIHByb3VkIG9mLiAKUG9vU2hhdWNodW4gdQpUaGUgc3R1ZHkgcHVibGlzaGVkIGluIFRoZSBMYW5jZXQsIHdoaWNoIGludm9sdmVkIDE3LDAwMCBnYXkgYW5kIGJpc2V4dWFsIG1lbiBpbiBWaWN0b3JpYSBhbmQgTmV3IFNvdXRoIFdhbGVzIChOU1cpLCBzaG93cyB0aGF0LCBiZXR3ZWVuIDIwMTMgYW5kIDIwMTcsIHRoZSBudW1iZXJzIG9mIEhJViBuZWdhdGl2ZSBtZW4gdGFraW5nIHRoZSBwaWxscyB0byBwcm90ZWN0IHRoZW1zZWx2ZXMgcm9zZSBmcm9tIDIgcGVyY2VudCB0byAyNCBwZXJjZW50LgpMaXZlIGNhc2lubyBvciBsaXZlIGRlYWxlciBjYXNpbm8gaXMgYSBuZXcgYXBwcm9hY2ggdG8gaW50ZXJuZXQgZ2FtYmxpbmcgd2hlcmUgdGhlIGZvY3VzIGxpZXMgaW4gcmVhbGlzbSBhbmQgd2l0bmVzc2luZyBhY3R1YWwgY2FzaW5vIGdhbWVzIGluIHJlYWwgdGltZS4uIApIZSBwbGF5ZWQgY29sbGVnZSBmb290YmFsbCBhdCBDZW50cmFsIE1pY2hpZ2FuLCB3aGVyZSBoZSB3YXMgbmFtZWQgYSBmaXJzdCB0ZWFtIEFsbCBBbWVyaWNhbiBieSBUaGUgU3BvcnRpbmcgTmV3cyBhcyBhIHB1bnQgcmV0dXJuZXIgaW4gMjAwOCBhbmQgMjAwOS4uIApJIG1lYW4gdGhlIG9ubHkgcmVhc29uIHNoZSB3YXMgYWt1bWF0aXplZCBpbiBNYXl1cmEgd2FzIGJlY2F1c2Ugb2YgYSBzbmVhayBhdHRhY2sgYnkgYnkgZGVzcGFpciBiZWFyIGl0IHdhc24gYmVjYXVzZSBvZiBoZXIgcGFyZW50cy4gVGhleSBhcmVuIGhhbmVsaW5nIGhlciBjaGFyYWN0ZXIgd2VsbC4gSSBtZWFuIHdhdGNoIHN0b3JteSB3ZWF0aGVyIDIgYW5kIGl0IHNlZW1zIGxpa2UgaXQgcHJlIGRlc3BhaXIgYmVhciBjaGxvZSBhcyBvcHBvc2VkIHRvIHRoZSBjaGxvZSB3ZSBzYXcgaW4gdGhlIGxhdHRlciBoYWxmIG9mIHNlYXNvbiAyLi4gCkJhbGxzdGVpbiB1CkF0IG1pbGUgMTAsIEkgd2FzIGJlYXQgYnV0IEkga25ldyBJIG5lZWRlZCB0byBwaWNrIHVwIG15IHBhY2UuIEkgc3RhcnRlZCB0byBwdXNoIGFuZCBiZWdhbiB0byBwYXNzIHBlb3BsZSB3aG8gd2VyZSBhaGVhZCBvZiBtZS4gQXQgbWlsZSAxMSwgSSBmZWx0IGxpa2UgSSBoYWQgbm8gZ2FzIGxlZnQgaW4gdGhlIHRhbmsgYnV0IEkgdHJpZWQgdG8gcGljayB1cCBteSBwYWNlIHN0aWxsLCByZW1pbmRpbmcgbXlzZWxmIEkgd2FzIGFsbW9zdCBkb25lLiBNeSBhbnhpZXR5IGNhbWUgYmFjayBhbmQgSSBmZWx0IGxpa2UgdGhlcmUgd2FzIG5vIHdheSBJIGNvdWxkIGRvIHRoaXMgICBJIGp1c3Qgd2FudGVkIHRvIGdpdmUgdXAuIE15IHN0b21hY2ggaHVydCBhIHRvbiBhbmQgSSByZWdyZXR0ZWQgdGhvc2UgZ2Vscy4gQnV0IEkgdGhvdWdodCBob3cgYWJzb2x1dGVseSB3aWxkbHkgcGlzc2VkIEknZCBiZSBpZiBJIG1pc3NlZCBteSBnb2FsIGp1c3QgYmVjYXVzZSBvZiB0aGVzZSBsYXN0IGNydWNpYWwgbWlsZXMsIHNvIEkganVzdCBzdGFnZ2VyZWQgb24uIE1pbGUgMTIsIHRoZXJlIHdlcmUgZm9sa3Mgd2FpdGluZyBvbiB0aGUgc2lkZSB0byBjaGVlciBhbmQgdGVsbCB1cyAianVzdCBrZWVwIGdvaW5nISIgU28gYXBwcmVjaWF0ZWQuCk1hc3NhZ2UgdGhlcmFwaXN0IG1hZGUgbWUgdG91Y2ggaGVyIGluIGFuIGluYXBwcm9wcmlhdGUgcGxhY2UKMjAvaG91ciB3b24gc2V0IG1lIHVwIGZvciBsaWZlPy4gc2VyaW91c2x5IHdoYXQgaXMgdGhlIGNvc3Qgb2YgbGlmZSB3aGVyZSB5b3UgbGl2ZT8gMjAgYW4gaG91ciBpcyBhbHJlYWR5IDIuNSBqdW1wIHdoaWNoIGlzIGdyZWF0IGZvciBzb21lb25lIHdobyBncmV3IHVwIHBvb3IgYW5kIGxlYXJuZWQgdG8gZW5qb3kgdGhlIGZyZWUgc3R1ZmYgaW4gbGlmZSwgbGlrZSBuYXR1cmUuIEkga25vdyBmb3IgdGhlIGF2ZXJhZ2UgcGVyc29uIHdvdWxkbnQgYmUgZW5vdWdoIGJlY2F1c2UgdGhleSBzcGVuZCBlbm9ybW91cyBhbW91bnRzIG9mIG1vbmV5IGluIHNoaXQgdGhleSBkb24gbmVlZCwgYnV0IHVubGVzcyBJIGhhdmUgYSBmYW1pbHkgb2YgMiBraWRzIEkgaG9uZXN0bHkgZG9uIHNlZSBob3cgMjAvaG91ciBpc24gZW5vdWdoIGluIHRoZSBVSy4gSWYgeW91IGtub3cgc29tZXRoaW5nIG1vcmUgcGxlYXNlIHNoYXJlIHRoZSB3aXNkb20KTXkgcmVzcG9uc2UgZnJvbSBtZW4gd2hlbiBJIHNheSB3aGF0IEkgd2FudCBoYXMgYmVlbiBwb3NpdGl2ZSwgYXQgdGhlIGVuZCB0aGV5IGhhdmUgc2FpZCB0aGV5IHRob3VnaHQgaXQgd2FzIGhvdCB0aGF0IEkgdG9vayBjaGFyZ2UuIFdpbGwgdGhhdCBiZSB0aGUgY2FzZSBhbHdheXMgd2l0aCBldmVyeSBtYW4gSSdtIHdpdGg/IE5vIHByb2JhYmx5IG5vdCwgbWF5YmUgc29tZSBtZW4gd2lsbCBmaW5kIGl0IGludGltaWRhdGluZy4gRWl0aGVyIHdheSwgSSdtIGZpbmFsbHkgY2hhc2luZyBteSBPIGFuZCBtYWtpbmcgc3VyZSBJIGdldCBpdC4uIApBcyBzb29uIGFzIHlvdSBjcmVhdGUgaXQsIGNob29zZSAiVHJlZSBTZXR0aW5ncyIgZnJvbSB0aGUgZHJvcCBkb3duIG1lbnUgbmV4dCB0byB5b3VyIHRyZWUgbmFtZSwgdGhlbiBjaG9vc2UgdGhlIHRhYiAiUHJpdmFjeSBzZXR0aW5ncyIuIAozLiBUaWdodCBwYXNzaXZlICAgVGhpcyBzdHlsZSBiYXNpY2FsbHkgY29uc2lzdHMgb2Ygb25seSBwbGF5aW5nIHZlcnkgZmV3IGhhbmRzLCBhbmQgZG9pbmcgdmVyeSBsaXR0bGUgYmV0dGluZyBvciByYWlzaW5nLgpUb3JpYXM0NyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KV2hpbGUgd2Ugd2VyZSBpbiBDdWJhIHdlIGZvdW5kIGl0IGluY3JlZGlibHkgZWFzeSB0byBib29rIG91ciBBaXJibmJzLiAKV2hhdCB3b3JrcyBmb3IgbWUgaXMgcGxhbm5lZCBpbmR1bGdlbmNlcyAgIG5vdCAiY2hlYXQgZGF5cyIgb3IgImNoZWF0IG1lYWxzIiBleGFjdGx5LCBqdXN0IHNvbWV0aGluZyB0byBsb29rIGZvcndhcmQgdG8uIEZvciBleGFtcGxlLCBpZiBJIGdvaW5nIGludG8gdGhlIGNpdHkgdGhpcyB3ZWVrZW5kLCBJIHRlbGwgbXlzZWxmIEkgc3RvcCBhdCB0aGlzIGFtYXppbmcgYmFrZXJ5IGFuZCBhbGxvdyBteXNlbGYgYW55IG9uZSB0cmVhdCBhcyBsb25nIGFzIEkgZG8gd2VsbCB0aHJvdWdob3V0IHRoZSB3ZWVrOyBpdCBiZWNvbWVzIGVhc2llciB0byBkZWxheSBncmF0aWZpY2F0aW9uIGlmIEkga25vdyB0aGF0IGJ5IGhvbGRpbmcgb3V0IEkgZ2V0IHNvbWV0aGluZyBiZXR0ZXIgICBsaWtlIGl0IGVhc3kgdG8gdHVybiBkb3duIHN0b3JlIGJvdWdodCBjb29raWVzIGlmIEkga25vdyBJIGdldCBhIHN1YmxpbWUgc2NyYXRjaCBtYWRlIGNob2NvbGF0ZSBhbG1vbmQgY3JvaXNzYW50IHNvb24uCkZpcnN0LCBjaGVjayB0aGUgcHJpY2UgYW5kIHZlcmlmeSB5b3UgY2FuIGNoZWNrIGJpa2UgKGFsbW9zdCBjZXJ0YWlubHkgY2FuLCB1c3VhbGx5IGNvc3RzIGFueXdoZXJlIGZyb20gMTAwIDI1MCBvbmUgd2F5KS4gSXRzIHByb2JhYmx5IG9ubHkgd29ydGggaXQgaWYgeW91ciBiaWtlIGlzIHdvcnRoIDUwMCsgYW5kIGluIGdvb2QgY29uZGl0aW9uLiBMYXN0IHRpbWUgSSBtb3ZlZCBiZXR3ZWVuIGNvbnRpbmVudHMgSSBqdXN0IHNvbGQgbXkgYmlrZSBhdCBhIHNtYWxsIGxvc3MgYW5kIGJvdWdodCBhIG5ldyBvbmUsIHJhdGhlciB0aGFuIHBheSB0aGUgZmVlcyBhbmQgZGVhbCB3aXRoIGFsbCBvZiBpdCBhbmQgdGhlIHJpc2tzLiBDb21wYXJlZCB0byBzaGlwcGluZywgSSBsb3N0IGFib3V0IDI1MCBldXJvcywgYnV0IEkgYXZvaWRlZCB0aGUgaGFzc2xlIGFuZCByaXNrLCBhbmQgaGF2ZSBhIGJyYW5kIG5ldyBiaWtlIGluc3RlYWQgb2YgYSA1IHllYXIgb2xkIGJpa2UuCkFuZCBzbyB3ZSBhcmUgZnJlZSB0byBhY3QgYXMgd2UgcGxlYXNlIHdlIGp1c3QgY2FuIGhlbHAgb3Vyc2VsdmVzLiAKVW5sZXNzIGhlcm8gb25seSBwdXRzIGhpbSBvbiBhIHdlYWsgYWNlLiBIZSBjYW4gaGF2ZSBhIGxvdCBvZiBvdGhlciBoYW5kcy4gCkxpa2UsIHZpc3VhbGx5IGl0IHdhcyBncmVhdC4gRGVzZXJ2ZXMgYWxsIHNvcnRzIG9mIGF3YXJkcy4gSHVnZSBzZXQgcGllY2VzIHRoYXQgd2VyZSByZWFsbHkgaW1wcmVzc2l2ZSBvbiB0aGUgYmlnIHNjcmVlbi4gClRoaXMgY2FuIGJlIGZ1cnRoZXIgY29tcGxpY2F0ZWQgaW4gdmFyaW91cyB3YXlzLiAKVGhlbiBmb3JlaWduIG1vbmV5IGJlZ2FuIGZsb3dpbmcgaW4gdGhyb3VnaCBCYXlyb2NrIChtZW50aW9uZWQgYWJvdmUpLiBCYXlyb2NrIHdhcyBydW4gYnkgdHdvIGludmVzdG9yczogVGV2ZmlrIEFyaWYsIGEgS2F6YWtoc3RhbiBib3JuIGZvcm1lciBTb3ZpZXQgb2ZmaWNpYWwgd2hvIGRyZXcgb24gYm90dG9tbGVzcyBzb3VyY2VzIG9mIG1vbmV5IGZyb20gdGhlIGZvcm1lciBTb3ZpZXQgcmVwdWJsaWM7IGFuZCBGZWxpeCBTYXRlciwgYSBSdXNzaWFuIGJvcm4gYnVzaW5lc3NtYW4gd2hvIGhhZCBwbGVhZGVkIGd1aWx0eSBpbiB0aGUgMTk5MHMgdG8gYSBodWdlIHN0b2NrIGZyYXVkIHNjaGVtZSBpbnZvbHZpbmcgdGhlIFJ1c3NpYW4gbWFmaWEuIApZb3Ugc2hvdWxkIGhhdmUgZWl0aGVyIE15U1FMIG9yIFBvc3RncmVTUUwgaW5zdGFsbGVkIGJlZm9yZSBydW5uaW5nIHRoZSBpbnN0YWxsZXIuIElmIHlvdSBoYXZlIE15U1FMIGluc3RhbGxlZCBhbmQgcnVubmluZywgdGhlIGluc3RhbGxlciB3aWxsIGNyZWF0ZSBhbiBmcGRiIGRhdGFiYXNlLCBzZXQgcGVybWlzc2lvbnMgZm9yIGl0LCBhbmQgd3JpdGUgdGhlIGNvcnJlY3QgZGF0YWJhc2UgcGFyYW1ldGVycyB0byB0aGUgY29uZmlndXJhdGlvbiBmaWxlLiAKNC4wMCBGcmVkZGllIFdpbGxpYW1zIEZlc3RpdmFsIFBsYXRlClRoYXQgaGVscGVkLCBidXQgbm90IG11Y2guIApUYWtlIEJvZGVnYSBmb3Igb25lIGJsb2NrLCB0aGVuIHR1cm4gcmlnaHQgdG8gZ28gd2VzdCBvbiBLZXJyLgpQZXIgdGhlIGN1cnJlbmN5IGRhdGEsIHRoZSBtdWx0aWdlbmVyYXRpb25hbCBzdWRzZXIgZ2FpbnMgYW5vdGhlciB0aHJlZSB0ZW50aHMgb2YgYSBwb2ludCBpbiBDMyBhbmQgc2l4IHRlbnRocyBpbiBDNy4gSWYgeW91J3JlIGEgYnV5ZXIgd2hvIG5lZ290aWF0ZWQgYSAkNDMzLDg2NiBzcG90IGZvciB5b3VyIGNsaWVudCBpbiB0aGUgU2VwdC4gCllvdSBjYW4gZmluZCBkZXNjcmlwdGlvbnMgb2Ygb3RoZXIgdHlwZXMgb2YgZm9vdCBzdXJnZXJ5IG9ubGluZS4gVGhlcmUgYXJlIGV2ZW4gYWN0dWFsIHZpZGVvcyBvZiBkaWZmZXJlbnQgZm9vdCBvcGVyYXRpb25zIG9uIHRoZSB3ZWIuIElmIHlvdSBoYXZlIGEgZm9vdCBwcm9ibGVtLCBpdCBpcyBiZXN0IHRvIGNvbnN1bHQgYSBwb2RpYXRyaXN0IG9yIGdlbmVyYWwgcHJhY3RpdGlvbmVyLgpUaGUgU1BEJ3Mgc3RhdGUgcHJlbWllciBTdGVwaGFuIFdlaWwgaGFpbGVkIHRoZSBwb2xsIHdpbiBhcyBhICJyb2FyaW5nIHN1Y2Nlc3MiIGFmdGVyIGEgImNhdGNoIHVwIHJhY2UiLgpBbnkgYmlvbG9naWNhbCBpdGVtcyB3aGVuIGZyb3plbiBoYXMgaXQgY2VsbHMgcnVwdHVyZWQuIApGb3JnZXQgdGhlIGJhc2ljcywgc3VjaCBhcyBwYXRjaCBtYW5hZ2VtZW50LiBUaGUgV2FubmFDcnkgYXR0YWNrIHByb3ZlZCB0aGF0IHVwZGF0aW5nIHRoZSBzZWN1cml0eSBwb3N0dXJlIHRocm91Z2ggZnJlZSBwYXRjaGVzIGlzIGVzc2VudGlhbC4uIApGb3IgYSBmaW5kaW5nIHRvIGJlIGNvbnNpZGVyZWQgcm9idXN0LCBzdWZmaWNpZW50IGluZm9ybWF0aW9uIG11c3QgYmUgc3VwcGxpZWQgdG8gZW5hYmxlIGFueSBpbnRlcmVzdGVkIHBhcnR5IHRvIHRyeSB0aGUgc2FtZSBleHBlcmltZW50IGFuZCBnZXQgdGhlIHNhbWUgcmVzdWx0LCBlc3BlY2lhbGx5IHRob3NlIHdobyB3YW50IHRvIHByb3ZlIHRoZSByZXN1bHQgd3JvbmcuIE9yLCBhcyB0aGUgZmFtb3VzIHNheWluZyBnb2VzLCBzY2llbmNlIGlzIHRoZSBzdHVmZiB0aGF0IGtlZXBzIGJlaW5nIHRydWUgZXZlbiB3aGVuIHlvdSBzdG9wIGJlbGlldmluZyBpbiBpdC4uIAoiQXMgb25lIG9mIHRoZSB3b3JsZCdzIGZhc3Rlc3QgZ3Jvd2luZyBvdXRib3VuZCB0cmF2ZWwgbWFya2V0cywgUnVzc2lhIHJlcHJlc2VudHMgYSBncmVhdCBvcHBvcnR1bml0eSBmb3IgdXMsIiBzYWlkIEZyaXRzIHZhbiBQYWFzc2NoZW4sIFByZXNpZGVudCBhbmQgQ0VPLCBTdGFyd29vZCBIb3RlbHMgUmVzb3J0cy4gIldpdGggYSByaXNpbmcgbWlkZGxlIGNsYXNzLCBncm93aW5nIGRpc3Bvc2FibGUgaW5jb21lLCBhbiBhZmZpbml0eSBmb3IgbHV4dXJ5IGJyYW5kcyBhbmQgaHVnZSBwZW50IHVwIGRlbWFuZCBmb3IgZm9yZWlnbiB0cmF2ZWwsIFJ1c3NpYSBpcyBlbWJsZW1hdGljIG9mIHRoZSBncm93dGggd2UgYXJlIHNlZWluZyBpbiByZWdpb25zIGFyb3VuZCB0aGUgd29ybGQgYW5kIGtleSB0byBvdXIgZ2xvYmFsIGdyb3d0aCBwbGFucy4iCkhpcyBtb20sIEplYW5uaWUgU2hhbWF0dCwgd3JvdGUgb24gRmFjZWJvb2sgdGhhdCB0aGV5IHdlcmUgImZlYXJpbmcgdGhlIHdvcnN0IiBhbmQgYXNzdW1lZCB0aGF0IGV2ZXJ5dGhpbmcgd291bGQgYmUgZ29uZS4gQnV0IHRvIHRoZWlyIHN1cnByaXNlLCBoZXIgc29uIHJlY2VpdmVkIGEgcGFja2FnZSBjb250YWluaW5nIGEgbm90ZSBhbmQgaGlzIG1pc3Npbmcgd2FsbGV0LgoiSSBjYW4gZ28gb24gVFYgYW55bW9yZSBhcyBpdCBzbyBibG9vZHkgUEMgLiBvciBkbyB0aGUgU3lkbmV5IENvbWVkeSBmZXN0aXZhbC4gVGhlIGF1ZGllbmNlIGlzIHRvbyBtYWluc3RyZWFtIGFuZCBnZXRzIG9mZmVuZGVkLCIgc2lnaGVkIEtldmluICJCbG9vZHkiIFdpbHNvbi4KVGhpcyBnZW9ncmFwaGljYWwgYXNwZWN0IHJhaXNlcyBhbm90aGVyIHBvc3NpYmlsaXR5IGZvciB0aGUgc2VlbWluZyBsYWNrIG9mIENlbHRpYyBpbmZsdWVuY2Ugb24gRW5nbGlzaCB2b2NhYnVsYXJ5OyBpdCBtYXkgYmUgcG9zc2libGUgdGhhdCBPbGQgRW5nbGlzaCBzcGVha2VycyBmaXJzdCBjYW1lIGludG8gY29udGFjdCB3aXRoIHBlb3BsZSB3aG8gc3Bva2UgYSB2ZXJ5IExhdGluaXplZCAiTG93bGFuZCIgZGlhbGVjdCBvZiBDZWx0aWMgdGhhdCB3YXMgZGlzdGluY3QgZnJvbSB3aGF0IGJlZW4gZGVzY3JpYmVkIGFzICJIaWdobGFuZCIgQnJpdGlzaCBDZWx0aWMsIHRoZSBwYXJlbnQgbGFuZ3VhZ2Ugb2YgbW9kZXJuIFdlbHNoLCBCcmV0b24gQ29ybmlzaCwgaWYgQ2VsdGljIGxhbmd1YWdlcyB3ZXJlIGV2ZW4gcHJlc2VudCBpbiB0aGUgc291dGggZWFzdCBvZiBFbmdsYW5kIGF0IGFsbC4gCkkgYmVsaWV2ZSBib3RoIHNpZGVzLCBleGNlcHQgZm9yIHRoZSBtYXJnaW5zIGluIGJvdGggc29jaWV0aWVzLCBhcmUgdGlyZWQgb2YgdGhlIGNvbmZsaWN0IGFuZCBlYWdlciB0byByZWFjaCBpdHMgZmluYWwgc29sdXRpb24uIApNb3N0IG9mIHRoZW0gYXJlIHJlYWxseSBzdHVwaWQgc28gdGhpcyBndXkgaXNuIGEgY3JpbWluYWwgbWFzdGVybWluZCBidXQgaGVyZSBnb2VzLiBIZSB3YW50ZWQgdG8gcm9iIGEgamV3ZWxsZXJzIG9uIG91ciBjaXR5IG1haW4gc3RyZWV0LiBTbyBoZSBmb3VuZCBvdXQgdGhlIGZsYXQgYmVzaWRlIHRoZSBqZXdlbGxlcnMgd2FzIGVtcHR5IGFuZCBoZSBoaWQgdGhlcmUuIAogNiBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ29UaGF0IHdpZXJkISBJIGhhdmUgbm8gaWRlYSB3aHkgYWxsIG9mIHRoZSBmbGFpciB0ZW1wbGF0ZXMgaGF2ZSBhbGwgZ29uZS4gVGhlIENTUyBoYXNuIGJlZW4gY2hhbmdlZCBpbiBhIHdoaWxlIHNvIEkgZ3Vlc3NpbmcgaXQgYW4gZXJyb3IgYmV0d2VlbiB0aGUgY3VycmVudCB2ZXJzaW9uIG9mIFJlZGRpdCBhbmQgdGhlIG5ldyByZWRlc2lnbiwgc2luY2UgdGhhdCB0aW55IEFkYWNoaSBmbGFpciB3YXMgYSB0ZXN0IGZsYWlyIHdlIHVzZWQgZm9yIHRoZSByZWRlc2lnbi5JIHNlZSBpZiB0aGVyZSBhIHdheSB0byByZWNvdmVyIGFsbCBvZiB0aGUgZmxhaXIgdGVtcGxhdGVzIGZyb20gdGhlIGxpc3QsIGJ1dCBpZiB0aGVyZSBpc24gdGhlbiBpdCBtaWdodCB0YWtlIGEgYml0IHRvIGFkZCB0aGVtIGFsbCBtYW51YWxseS4gVGhlIGFjdHVhbCBmbGFpcnMgYXJlbiBnb25lIHRob3VnaCwgc28gSSBnaXZlbiB5b3UgdGhlIERlbW9uZWUgaG8gZmxhaXIuIElmIHlvdSB3YW5uYSBjaGFuZ2UsIGp1c3QgcmVwbHkgdG8gbWUgb3IgdXNlIG1vZG1haWwuT2xzT2xzICAxIHBvaW50ICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnb0kgbmV2ZXIgc2FpZCB0aGV5IHdlcmUgdXBkYXRlcywgeW91IHRhbGtpbmcgYWJvdXQgYW5vdGhlciB1c2VyLiBJdCBETEMgdGhhdCBhdXRvbWF0aWNhbGx5IGRvd25sb2FkZWQgYW5kIGFkZGVkIHdoZW4geW91IG5leHQgYm9vdCB1cCB5b3VyIFBTNC4gVGhlcmUgbm8gcnVsZSB0aGF0IERMQyBhbHdheXMgaGFzIHRvIGJlIG1hbnVhbGx5IGRvd25sb2FkZWQuIFRoZSBhY3R1YWwgZGlzdGluY3Rpb24gYmV0d2VlbiB0aGlzIGFuZCBhIHByb3BlciB1cGRhdGUgaXMgdGhhdCB0aGlzIGlzIG9ubHkgYSBjb3N0dW1lIHBhY2sgKGFuZCBtb3N0IGxpa2VseSBzb21lIG90aGVyIGdvb2RpZXMpIGFuZCBoYXMgYmVlbiBhZHZlcnRpc2VkIGFzIHN1Y2ggICB0aGV5IGRvbmUgdGhpcyBmb3Igb3RoZXIgZ2FtZXMgdG9vLgpWZW5kb3JjZW50cmFsdXNlciAgMCBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvClRoZSAyNSB5ZWFyIG9sZCBuYXRpdmUgb2YgRWxtaHVyc3QsIElsbC4sIGhhcyBwb3N0ZWQgYSA3IDUgMSByZWNvcmQgd2l0aCBhIDMuMDkgZ29hbHMgYWdhaW5zdCBhdmVyYWdlLCBhIC45MDIgc2F2ZSBwZXJjZW50YWdlIGFuZCBvbmUgc2h1dG91dCBpbiAxNCBhcHBlYXJhbmNlcyB3aXRoIHRoZSBNYXBsZSBMZWFmcyB0aGlzIHNlYXNvbi4KRXNwZWNpYWxseSBiZWFycyA0IGhpdHMgeW91cmUgZGVhZCBUYWNpIEx5biAoRnVsbCBBbnN3ZXIpLiAKQ0FQUyBpcyBsb2NhdGVkIGluIHJvb20gMjI2IG9mIFN0dWRlbnQgU2VydmljZSBDZW50ZXIgMS4uIApUaGF0IHdoYXQgeW91IGRvIGlmIHlvdSBidXkgYWQgc3BhY2UuIApQYW50aGVyWmFsYXlldGEgdQpUb2JhY2NvIENvbnRyb2wgaXMgd2lsbGluZyB0byBjb25zaWRlciBwYXBlcnMgYmFzZWQgd2hvbGx5IG9yIGluIHBhcnQgb24gbWF0ZXJpYWwgcHJldmlvdXNseSBwdWJsaXNoZWQgb25saW5lLiAKSSB3YXMgZXhjaXRlZCBhcyBoZWxsIHRoYXQgaGUgd2FzIGFsbG93aW5nIHRoZW0hIEkgZ290IGEgMyBwcm9uZyBmb2xkZXIgYW5kIGNhcmQgc2xlZXZlcyBhbmQgc3RhcnRlZCBjb2xsZWN0aW5nLiBJIGNvbGxlY3RlZCBhbG1vc3QgZXZlcnkgc2luZ2xlIHBva2Vtb24gb3ZlciB0aGUgbmV4dCBmZXcgbW9udGhzLCAxNDkuIApGbG9yaWRhIG1hbiBhY2N1c2VkIG9mIGNhc2lubyBjYXNoClBsZWFzZSBqdXN0IHdhdGNoIGl0LiBJIHdpbGwgaGFwcGlseSBzaXQgdGhyb3VnaCBmb3VyIGhvdXJzIG9mIHdoYXRldmVyICJNSiBpcyBpbm5vY2VudCEiIHZpZGVvcyB5b3Ugd2FudCBtZSB0byB3YXRjaCBvciB3aGF0ZXZlciBvbiB0aGlzIHdlZWsncyBsdW5jaCBicmVha3MgYXQgd29yayBpbiByZXR1cm4gZXZlbi4KVGhleSBpbmhpYml0IGFzY2VuZGluZyBwYXRod2F5cyBvZiBwYWluIHBlcmNlcHRpb24gYW5kIGFjdGl2YXRlIGRlc2NlbmRpbmcgcGF0aHdheXMuIApTdGF0dCBpaHJlIEFyYmVpdCB6dSBtYWNoZW4sIGxpZSBzaWUgc2ljaCBhbHNvIGVyc3QgZWlubWFsIHNlY2hzIFogemllaGVuLiBHZXcgd2FyIGF1Y2gsIGRhc3Mgc3BvbnRhbiBpcmdlbmR3ZWxjaGUgKHdlaWJsaWNoZW4pIEZhbWlsaWVuYW5nZWggaW4gbWVpbiBaaW1tZXIgZWlucXVhcnRpZXJ0IHd1cmRlbiwgd2VubiBlcyBmIGRpZSBIZWltcmVpc2Ugc2Nob24genUgc3Agd2FyLiAKSW4gY29tcGFyaXNvbiB0byB0aGUgbWFyc2htYWxsb3cgc3BpbmVkIE9iYW1hLCBBcm5vbGQgU2Nod2FyemVuZWdnZXIgZGVjaWRlZCBub3QgdG8gc3VwcG9ydCBQcm9wIDggaW4gY291cnQuIEluIG90aGVyIHdvcmRzLCB0aGUgR3ViZW5hdG9yLCB3aGF0ZXZlciBoaXMgcGVyc29uYWwgb3IgZXZlbiBwb2xpdGljYWwgYmVsaWVmcywgcmVjb2duaXplcyB0aGF0IFByb3AgOCBpcyBwcm9iYWJseSB1bmNvbnN0aXR1dGlvbmFsLiBQcm9wIDggb3ZlcnR1cm5lZCBzYW1lIHNleCBtYXJyaWFnZSBpbiBDYWxpZm9ybmlhLCBidXQgYWxzbyBlc3RhYmxpc2hlZCBhIGRhbmdlcm91cyBwcmVjZWRlbnQgaW4gd2hpY2ggYSBtYWpvcml0eSBvZiB2b3RlcnMgY2FuIGRlY2lkZSB0byBkZW55IHJpZ2h0cyB0byBhIG1pbm9yaXR5LiBXaGF0ZXZlciBJIG1heSB0aGluayBvZiB0aGUgR3ViZW5hdG9yIHBvbGl0aWNzIG9yIGZpbG1zLCBoZSBhdCBsZWFzdCBzZWVtcyB0byBoYXZlIHNvbWUgYmFja2JvbmUuCkkgbW92ZWQgbXkgcGVuIHRvd2FyZHMgdGhlIHBhcGVyIGJ1dCBJIGhlc2l0YXRlZC4KR2luc2VuZyByZXZlcnNlZCBhIHJlZHVjdGlvbiBpbiBMVFAgYXNzb2NpYXRlZCB3aXRoIGNocm9uaWMgbW9ycGhpbmUgdHJlYXRtZW50IFs3MF0uIApNaWRkbGUgbWFuYWdlciBnb2VzIGFuZCBoaXJlcyBhbm90aGVyIGNvbnRyYWN0b3IsIG5ldyBjb250cmFjdG9yIGRvZXNuIGRlbGl2ZXIgYXMgd2VsbC4gVGhpcyB0aW1lIG1pZGRsZSBtYW5hZ2VyIGlzIHdhcm5lZCB0byBiZSBtb3JlIGNhcmVmdWwgaW4gd2hvIHRoZXkgaGlyZSBhcyB0aGUgd29yayBoYXMgdG8gYmUgZG9uZSBhbmQgcmVtYWluIHVuZGVyIGJ1ZGdldC4gCldoeT8gTW9zdCBvZiB0aGUgcGVvcGxlIHdpbGwgY29uc2lkZXIgaXQgYSBuYXR1cmFsIHBoZW5vbWVub24gb2YgbmF0dXJlLiAKRWRpdDogQWxzbywgdGhlcmUgaXMga25vdyB3YXkgb2YgdGVsbGluZyBpZiB0aGVyZSBhcmUgZGFuZ2Vyb3VzIGNvbnRhbWluYXRlcyBpbiB0aGUgd2F0ZXIgZnJvbSBhIHBob3RvLiBZb3Ugd2lsbCBuZWVkIHRvIGhhdmUgdGhlIHdhdGVyIHNhbXBsZWQgYW5kIHRlc3RlZCBieSBhIGxhYi4gRG8gbm90IHVzZSBhIHNlcnZpY2UgdGhhdCBzZWxscyBzb2Z0ZW5lci9maWx0cmF0aW9uIHN5c3RlbXMuIApJIGhhdmVuJ3QgYmVlbiB0byB0aGUgV1NPUCwgYnV0IGlmIHRoZXJlIGFyZSBkdXBsaWNhdGVzIG9mIGhpbSB3aG8gZ28gdGhlcmUsIHRoZW4gSSB1bmRlcnN0YW5kIHdoeSBwZW9wbGUgZ28uIEdhdmUgYWN0aW9uIGFuZCB3YXMgcHJldHR5IHRlcnJpYmxlLi4gClRoZSBSb2NrZXRzIHNob3QgdGhlIGxpZ2h0cyBvdXQgaW4gdGhlIGZvdXJ0aCwgYW5kIHdoZW4gSGFyZGVuIGRyaWxsZWQgYSB0aHJlZSB3aXRoIGp1c3QgdW5kZXIgc2l4IG1pbnV0ZXMgdG8gcGxheSwgdGhlIGxvbmcgYm9tYiB3YXMgSG91c3RvbidzIHNldmVudGggdGhyZWUgcG9pbnRlciBvZiB0aGUgcXVhcnRlciwgYW5kIGdhdmUgdGhlIHZpc2l0b3JzIGEgMTQgcG9pbnQgbGVhZC4gVHdvIGZyZWUgdGhyb3dzIGZyb20gSWJha2Egc2xpY2VkIEhvdXN0b24ncyBsZWFkIHRvIG5pbmUgcG9pbnRzLCBidXQgdGhhdCB3YXMgYXMgY2xvc2UgYXMgVG9yb250byB3b3VsZCBjb21lLiBXaGVuIEhhcmRlbiBjb252ZXJ0ZWQgYSB0aHJlZSBwb2ludCBwbGF5IHdpdGgganVzdCB1bmRlciBhIG1pbnV0ZSB0byBwbGF5LCBodW5kcmVkcyBvZiBkaXNncnVudGxlZCBSYXB0b3JzIGZhbnMgYWxyZWFkeSBoYWQgdGhlaXIgYmFja3MgdHVybmVkLCBoZWFkaW5nIGZvciB0aGUgZXhpdHMuCkF0IDA6MzcgeW91IGNhbiBzZWUgdGhlIGRydWlkIGNhc3RpbmcgY3ljbG9uZSBhdCB5b3VyIGRydWlkLCBhbmQgZm9yIHNvbWUgcmVhc29uIHlvdSB1c2UgcGFpbiBzdXBwcmVzc2lvbiByaWdodCBpbnRvIHRoZSBjbG9uZS4gVGhlbiBiZWNhdXNlIHlvdSB3YXN0ZWQgeW91ciBmZWFyIGp1c3Qgc2Vjb25kcyBlYXJsaWVyIHRoZSBkcnVpZCBpcyBhYmxlIHRvIHB1c2ggaW4gb24geW91IGFuZCBzZXQgdXAgYSBDQyByb3RhdGlvbiwgdGhpcyBlbmRzIHVwIGNvc3RpbmcgYSBtYWpvciBkZWZlbnNpdmUgZnJvbSB5b3VyIGZlcmFsLiBBdCAxOjE0IHlvdSB0aGVuIHJlcGVhdCB5b3VyIHBhc3QgbWlzdGFrZSBhbmQgZmVhciB0aGUgaHVudGVyIGFnYWluLCBhbmQgdGhlIGRydWlkIHJlcGVhdHMgdGhlIGV4YWN0IHNhbWUgdGhpbmcgaGUgZGlkIGJlZm9yZS4gQW5kIGl0IGhhcHBlbnMgYWdhaW4uCkJ1dCBQYWxpbidzIGFwcGVhcmFuY2UgYXQgdGhlIFRlYSBQYXJ0eSBleHRyYXZhZ2FuemEgeWVzdGVyZGF5IHdhcyB1bmRlcm1pbmVkIGJ5IGhlciBoYWlyLiBJbnN0ZWFkIG9mIGhlciB1c3VhbCBhYmlsaXR5IHRvIG1ha2UgZXZlbiB0aGUgZWxpdGVzIHN0b3AgYW5kIGxpc3RlbiB0byBoZXIgbm9uc2Vuc2ljYWwgImNvbW1vbiBzZW5zZSwiIHNoZSBzcG9rZSBvbmx5IHRvIGhlciBiYXNlLCB0aGUgcmFkaWNhbCBjb25zZXJ2YXRpdmUgd2hpdGUgYWN0aXZpc3RzIHdobyBtYWtlIHVwIHRoZSBUZWEgUGFydHkgbW92ZW1lbnQuCkJ1dCBoZSBpcyBub3QgZXh0cmFvcmRpbmFyeSBvdGhlcndpc2UuIEhlcyBub3Qgc29tZSBzdXBlcnN0YXIgdGhhdCBjb21lcyBvdXQgb2Ygbm93aGVyZSBhbmQganVzdCBzaGl0cyBvbiBldmVyeW9uZSBhbmQgZXZlcnl0aGluZyAoMjAxNSBzdW1haWwpIGJ1dCBoZSBpcyBhIGNvbnNpc3RlbnQgdG9wIHRpZXIgcGxheWVyIGFzIGZhciBhcyBtYWludGFpbmluZyBoaXMgb3duIHBlcnNvbmFsIHNraWxsLiAKSSBkb24ndCB3YW50IHRvIGdvIGJyb2tlIGV2ZXIgYWdhaW4uLiAKSSdtIHNlbmRpbmcgeW91IGh1Z2UgaHVncy4gCkkgY2FuJ3Qgc2VlIGl0IGJlaW5nIHBlcm1hbmVudC4gRXZlbiBsaWJlcmFscyB0YXggcGF5ZXJzIG92ZXIgaGVyZSBkb24ndCBsaWtlIHRoZSBpZGVhIG9mIHN1YnNpZGl6aW5nIGZlcnJ5IHJpZGVzIGZvciBhIGhhbmRmdWwgb2YgY29tbXV0ZXJzLiBSZXNlcnZhdGlvbnMgc2VsbCBvdXQgaW4gc2Vjb25kcywgd2hpY2ggSSB3aHkgSSdtIHB1c2hpbmcgdGhlIHRyYW5zaXQgYm9hcmQgdG8gcmFpc2UgdGhlIGZhaXIgdG8gYWJvdXQgJDIwIHBlciBjcm9zc2luZyB1bnRpbCB0aGVyZSBpcyBlbm91Z2ggY2FwYWNpdHkgdGhhdCBzaG11Y2tzIGxpa2UgbWUgY2FuIGFjdHVhbGx5IHVzZSBpdC4uIApEdXJhbnQgdG9sZCBFU1BOIHRoYXQgaGlzIHRpbWUgd2l0aCB0aGUgVGh1bmRlciAid2FzIHNvIHNwZWNpYWwsIHRoYXQgd2hvbGUgZ3JvdXAgZnJvbSAyMDEwIHVudGlsIEkgbGVmdCB0aGVyZSwgaXQgd2FzIHNwZWNpYWwuIEl0J3MgYWJvdXQgdGltZSBmb3IgdXMgdG8gbGV0IGdvIG9mIGFsbCB0aGF0IGV4dHJhIHN0dWZmLCBhbmQganVzdCBjb21lIHRvZ2V0aGVyICAgZXNwZWNpYWxseSBhcm91bmQgdGhpcyB0aW1lLCBiZWNhdXNlIGl0J3MgTmljay4iCkNhbiBzaGlmdCB0aGUgYmxvYiBpbiBvbmUgZGlyZWN0aW9uIG9yIGFub3RoZXIgIHNvbWUgb3V0Y29tZXMgYmVjb21lIHJlbGF0aXZlbHkgbW9yZSBsaWtlbHkgYW5kIG90aGVycyBiZWNvbWUgcmVsYXRpdmVseSBsZXNzIGxpa2VseS4gClRoZXkgb2ZmZXJlZCBmb3IgbWUgdG8gcGF5IGluIGluc3RhbGxtZW50cywgdG9vLiAKU2VsbGluZyB0aGUgbGFuZCB3b3VsZCBoZWxwIGNsZWFyIHRoZSBkZWJ0IGltbWVkaWF0ZWx5LiBNciBXaWxsaWFtcyBzYWlkIG1hbnkgY2x1YnMgaGFkIHNlZW4gYSBkZWNyZWFzZSBpbiBwcm9maXRzIGZyb20gcG9rZXIgbWFjaGluZXMsIGJ1dCBpdCBoYWQgaGl0IE5vcnRoIEFsYnVyeSBoYXJkIGFuZCBoYWQgbGVmdCBhICQ5MCwwMDAgZ2FwIGluIHRoZSBidWRnZXQgYXMgb2YgU2VwdGVtYmVyIDMwLiBGaW5hbmNpYWwgc3RhdGVtZW50cyBzaG93IHRoZSBjbHViIG1hZGUgJDExNiw3OTYgZnJvbSBwb2tpZXMgYmV0d2VlbiBKYW51YXJ5IGFuZCBNYXJjaCB0aGlzIHllYXIuIApQTE8gQ0FTSCBHQU1FUy4gRXZlcnkgc2NvcmUgZW5kcyB1cCBnb2luZyB0byB0aGUgUExPIGNvbW11bml0eSBldmVudHVhbGx5LiBNaWdodCB0YWtlIGRheSBzbyBvciBhIGZldyB3ZWVrcyBidXQgZXZlcnkuIApXZSBhcmUgYmFzZWQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIHdlIHByb2Nlc3MgYW5kIHN0b3JlIGluZm9ybWF0aW9uIG9uIHNlcnZlcnMgbG9jYXRlZCBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gV2UgbWF5IHN0b3JlIGluZm9ybWF0aW9uIG9uIHNlcnZlcnMgYW5kIGVxdWlwbWVudCBpbiBvdGhlciBjb3VudHJpZXMgZGVwZW5kaW5nIG9uIGEgdmFyaWV0eSBvZiBmYWN0b3JzLCBpbmNsdWRpbmcgdGhlIGxvY2F0aW9ucyBvZiBvdXIgdXNlcnMgYW5kIHNlcnZpY2UgcHJvdmlkZXJzLiBhbmQgb3RoZXIgY291bnRyaWVzLCB3aGVyZSB5b3UgbWF5IG5vdCBoYXZlIHRoZSBzYW1lIHJpZ2h0cyBhcyB5b3UgZG8gdW5kZXIgbG9jYWwgbGF3LiBQcml2YWN5IFNoaWVsZCBQcm9ncmFtICgiUHJpdmFjeSBTaGllbGQiKSBhbmQgY29tcGx5IHdpdGggaXRzIGZyYW1ld29yayBhbmQgcHJpbmNpcGxlcy4KWW91IGNsZWFybHkgYXJlbiBmb2N1c2luZyBvbiB0aGF0LCBvdGhlcndpc2UgeW91IHdvdWxkbiBiZSBzbyBkdW1iZm91bmRlZCBhbmQganVzdCAiYmFjayBwZWRkbGluZyIuIApJIHRoaW5rIGJhc2luZyB0aGUgY29udGVudCBkcm9wIGFyb3VuZCBvbmUgZ2FtZSBtb2RlIHRoYXQgaGFkIGEgcmVhbGx5IHJvdWdoIGludHJvZHVjdGlvbiBjb25zaWRlcmluZyBsaW5lYXIgZnVzaW9ucyB3YXMgYSBiYWQgaWRlYS4KVGhlcmUgd2FzIHNvbWUgaW1tZWRpYXRlIHNob2NrIG9mIHJlY29nbml0aW9uMSBpbiBzZWVpbmcgdGhpcyBpbWFnZSwgbm90IGZvciBpdHMgZXhhY3QgZWFybGllciBhcHBlYXJpbmcgdHdpbiwgYnV0IGluIHRoZSBzZW5zZSBvZiB0aGUgc3BoZXJpY2FsIGRlbGl2ZXJ5IG9mIHNvbWV0aGluZy4gSW4gdGhpcyBjYXNlLCBpdCBpcyBhIFZpY3RvcmlhbiB3b21hbiBhbmQgdGhlIGRlcGljdGlvbiBvZiBoZXIgbW92ZW1lbnRzIGluIGV4ZXJjaXNlIGJ1dCB3aGF0IEkgcmVtZW1iZXIgYW5kIGFzc29jaWF0ZSB3aXRoIHRoaXMgaXMgdGhlIFNpZW5lc2UgR2lvdmFubmkgZGkgUGFvbG8sIGFuZCBoaXMgZGVwaWN0aW9uIG9mIHRoZSBtb251bWVudGFsaXN0IGdpdmV0aCBhbmQgdGFrZXRoIGN5Y2xlIHRoZSBjcmVhdGlvbiBvZiBFZGVuIGFuZCB0aGUgZXBpYyBmYWxsIG9mIGh1bWFuaXR5IGFuZCBpdHMgZXhwdWxzaW9uIGZyb20gaXQuIApUaGUgTWFyeWxhbmQgQ291cnQgb2YgQXBwZWFscyAoTWFyeWxhbmQgY291cnQgb2YgbGFzdCByZXNvcnQpIHJldmVyc2VkIFNwZWNpYWwgQXBwZWFscyBncmFudCBvZiBhIG5ldyB0cmlhbCwgaG9sZGluZzoKUG9rZXIgUHJvcGhlY3kgYWxzbyBoYXMgb3RoZXIgc3RhdGlzdGljcyB3aGljaCB5b3Ugc2hvdWxkIHJlYWQgZm9yIGV2ZXJ5IHRhYmxlIHlvdSBqb2luIGJlY2F1c2UgdGhleSBoYXZlIGEgaHVnZSBpbXBhY3Qgb24gYSBwbGF5ZXJzIFRSVUUgd2luIHJhdGUuLiAKTWFnbmVzaXVtIG1heSBmdXJ0aGVyIHByb21vdGUgYSBoZWFsdGh5IGhlYXJ0IGJ5IHN1cHBvcnRpbmcgb3B0aW1hbCBjYXJkaWFjIHJoeXRobS4gQSBzdHVkeSBwdWJsaXNoZWQgaW4gdGhlIEFtZXJpY2FuIEpvdXJuYWwgb2YgQ2xpbmljYWwgTnV0cml0aW9uIHJlcG9ydGVkIHRoYXQgZGVwbGV0aW5nIG1hZ25lc2l1bSBmcm9tIHRoZSBkaWV0IG9mIHBvc3RtZW5vcGF1c2FsIHdvbWVuIGxlZCB0byBhbiBpbmNyZWFzZWQgb2NjdXJyZW5jZSBvZiBhYm5vcm1hbCBoZWFydCByaHl0aG1zIChzdXByYXZlbnRyaWN1bGFyIGVjdG9weSkuMTMKV2UgZGlkIHRhbGsgYWJvdXQga2lkcyBicmllZmx5IGhlIG1lbnRpb25lZCBob3cgaGUgYWx3YXlzIHdhbnRlZCB0byBiZSBhIGRhZCBpdCB3YXNuIGEgc2VyaW91cyBjb252by4gQW5kIHRoZXJlIHdlcmUgdGltZXMgd2hlcmUgd2Ugd291bGQgYmUgbGlrZSAid2hlbiBJIGhhdmUga2lkcyBJIGRvIHgseSx6IiBoZSBoYXMga25vd24gc2hlIHdhcyBwcmVnbmFudCB0aGUgd2hvbGUgdGltZSwgdGhlaXIgcHJlZ25hbmN5IHdhcyBzZW1pIHBsYW5uZWQgaGUgc2F5cy4gSGUga25ldyBoZSB3YW50ZWQga2lkcyBidXQgd2FzbiBzdXJlIGlmIG1hcnJpYWdlIHdvdWxkIGV2ZXIgY29tZSBzbyBoZSBtZXQgc29tZW9uZSBoZSB0aG91Z2h0IGhlIHdhcyBjb21wYXRpYmxlIHdpdGggYW5kIGhlcmUgd2UgYXJlLi4gCjIwMCBMYXMgVmVnYXMgRWRnZXNwb3QgTmV4Z2VuIERpc2NvdW50IFBva2VyIENoaXAgU2V0IHdpdGggQWx1bWludW0gQ2xlYXIgVG9wIENhc2UgUmV2aWV3Ckl0IGFjdHVhbGx5IG5vdCB1bnJlYXNvbmFibGUgdG8gY2xhaW0gYSBkb3NlIHRoYXQgbG93IHdvdWxkIGhhdmUgc29tZSBzb3J0IG9mIGFuIGVmZmVjdCwgbWF5YmUgbm90IHdpdGggTFNEIGJ1dCBjZXJ0YWlubHkgd2l0aCBvdGhlciBkcnVncyB0aGF0IGFjdCBvbiBIVDJhLiBMb29rIGF0IENoYXJsZXMgTmljaG9scyAoeXVwLCBEYXZpZCBOaWNob2xzIHNvbikgc3R1ZGllcyBvbiB0aGUgYW50aSBpbmZsYW1tYXRvcnkgZWZmZWN0cyBvZiBET0kgaW4gdml2by4gCkp1c3QgYmUuIFRoZSBmZWVsaW5nIG9mIG5vdCBiZWluZyBodXJ0IGV2ZXJ5IGRheSBpcyByZWFsbHkgYW1hemluZy4gVGhlIGdyaWVmIGFuZCBwYWluIGFyZSBhbHNvIHJlYWxseSBhbWF6aW5nLCBidXQgdGhleSBzaG9ydGVyIGxpdmVkLiAKSGUgc2hlZCBoaXMgZ2xvdmVzLCByZWFjaGVkIGludG8gaGlzIHBvY2tldCBhbmQgdG9yZSB1cCBhIG1hcCBtYXJrZWQgd2l0aCBhbHRlcm5hdGUgcm91dGVzIGJhY2sgdG8gUGFraXN0YW4gYW5kIFR1cmtleTsgdGhlIHBpZWNlcyBmbHV0dGVyZWQgdG8gdGhlIGdyb3VuZC4uIApZb3UgbWlnaHQgdGhpbmsgYSBIYXdhaWlhbiBvciBiZWFjaCB0aGVtZSB3ZWRkaW5nIGlzIGp1c3QgcGVyZmVjdCBmb3IgYSBzdW1tZXIgd2VkZGluZy4gV2VsbCwgeW91J3JlIHJpZ2h0LiAKQmVjYXVzZSBhIHBva2VyIHBsYXllcnMnIHVuaWZvcm0gbW9zdCBvZnRlbiByZXNlbWJsZXMgdGhlIGhlYXAgb2YgY2xvdGhpbmcgY2xvc2VzdCB0byB0aGVpciBiZWRzIGluIHRoZSBtb3JuaW5nLCBhIHNpbXBsZSBwYXRjaCBvciBzdGlja2VyIHBsYWNlZCBpbiB0aGUgcmlnaHQgc3BvdCBjYW4gbGVhZCB0byB0aG91c2FuZHMgb2YgZG9sbGFycyB3aGVuIGluIGZyb250IG9mIEVTUE4ncyBjYW1lcmFzLgpMZXdpcydzIG1vc3QgcmVjZW50IGJvb2ssICJGbGFzaCBCb3lzLCIgYmVjYW1lIGEgbWFqb3IgbmV3cyBldmVudCBpbiBpdHNlbGYgd2hlbiBpdCB3YXMgcHVibGlzaGVkIGxlc3MgdGhhbiBhIHllYXIgYWdvLiBJbiBMZXdpcydzIHNpZ25hdHVyZSBjcmlzcCBwcm9zZSwgaXQgZXhwb3NlZCB0aGUgcHJhY3RpY2VzIG9mIGhpZ2ggZnJlcXVlbmN5IHRyYWRpbmcgb24gV2FsbCBTdHJlZXQgdGhhdCBoYXZlIHJpZ2dlZCB0aGUgc3lzdGVtIGZvciBhIHNlbGVjdCBmZXcuIApUaGVscmVkIElJIGFsc28gd2FzIGdpdmVuIGEgdGl0bGUgICB0aGUgVW5yZC4gVGhlIG5hbWUgdGhlbHJlZCBpcyBjb25zdHJ1Y3RlZCBmcm9tIHRoZWwgbWVhbmluZyAnbm9ibGUnIGFuZCBSZCBtZWFuaW5nICdjb3Vuc2VsJy4gVGhlIHRpdGxlICd0aGUgVW5yZCcgd2FzIGEgcGxheSBvbiBoaXMgbmFtZSdzIG1lYW5pbmcsIGNhbGxpbmcgdGhlbHJlZCAnd2l0aG91dCBnb29kIGFkdmljZScuIFRoaXMgdGl0bGUgaGFzLCBvdmVyIHRoZSB5ZWFycywgYmVlbiBjb3JydXB0ZWQgaW50byAndGhlIFVucmVhZHknLgpDUjogVGhlcmUgYXJlIHRocmVlIGJhc2ljIHN5c3RlbXMgYXNzb2NpYXRlZCB3aXRoIGZhc2NpYTogdGhlIGFydGljdWxhciwgdGhlIG5ldXJhbCBhbmQgdGhlIG15b2Zhc2NpYWwgbmV0d29yay4gRmFzY2lhIHNob3VsZCBhbHNvIGJlIGxvb2tlZCBhdCBhcyBhIHNlbWljb25kdWN0aXZlIGNvbW11bmljYXRpb24gbmV0d29yayBpbiB0aGF0IGl0IGlzIGNhcGFibGUgb2Ygc2VuZGluZyBuZXJ2ZSBzaWduYWxzIHRoYXQgY29tbXVuaWNhdGUgd2l0aCBlYWNoIG90aGVyIHRocm91Z2hvdXQgaXRzIG5ldHdvcmsuIFdoYXQgdGhpcyBtZWFucyBpcyB0aGF0IHRoZSBmYXNjaWEgY2FuIGFmZmVjdCB0aGUgd2hvbGUgYm9keSwgbm90IGp1c3Qgb25lIGFyZWEgb3Igc3lzdGVtLi4gCk5vdE15SW50ZXJuZXQgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28KQW5kIHBlb3BsZSBoYXZlIHNlZW4gaXQuIFRleSB0b3NzIGEgZmV3IGh1bmRyZWQgcG91bmRzIGluIHRoZSBvcHBvc2l0ZSBkaXJlY3Rpb24gb2YgbW9tZW50dW0gc2FmZWx5LCBiZWNhdXNlIHRoYXQgdGhlaXIgcHJpbWFyeSBkZXNpZ24gcHVycG9zZS4KSSBsb3ZlIHRoZSBib29rcyBLb3NoZXIgU3V0cmEgYW5kIEtvc2hlciBMdXN0IGJ5IFJhYmJpIEJvdGVhY2guIFRvdGFsbHkgYW5kIGNvbXBsZXRlbHkgY2hhbmdlZCBteSB2aWV3IG9mIHNleCBhcyBhIHdvbWFuLiAKUmVtZW1iZXIsIGRvbid0IGV2ZXIgbGV0IHRoZSBwb3NzaWJpbGl0eSBvZiBydW5uZXIgcnVubmVyIGVudGVyIGludG8geW91ciBjYWxjdWxhdGlvbnMgdW50aWwgdGhlIGZpcnN0IHJ1bm5lciBoaXRzLiBXaGVuIHlvdSBuZWVkIHR3byBjYXJkcyB0byBtYWtlIGEgaGFuZCAob2Z0ZW4gY2FsbGVkIGEgdHdvIG91dGVyKSwgeW91IGFyZSBnZXR0aW5nIHRlcnJpYmxlIG9kZHMuLiAKTm8gb25lIHdhbnRzIHRvIGZlZWwgbGlrZSB0aGUgcm9va2llIGF0IHRoZSB0YWJsZSwgc28gbGVhcm5pbmcgc29tZSBiYXNpYyBldGlxdWV0dGUgY2FuIGhlbHAgeW91IHRvIGFwcGVhciBtb3JlIGtub3dsZWRnZWFibGUgYW5kIGZlZWwgbW9yZSBjb21mb3J0YWJsZSBkdXJpbmcgdGhlIGdhbWUuIApIdWZpZyBpc3QgZGFzIGxpbmtlIHBvbGl0aXNjaGUgU3Bla3RydW0gZGF2b24gYmVyemV1Z3QsIGRhc3MgZGllc2UgSGVyYW5nZWhlbnN3ZWlzZSBkZW4gUmVjaHRlbiBudXIgbm9jaCBtZWhyIEhpbGZ0LiBEaWUgUmVjaHRlbiB3ZXJkZW4gZXMgd2FocnNjaGVpbmxpY2ggaG5saWNoIHNlaGVuLCB3ZW5uIGVzIGRhcnVtIGdlaHQgZGFzcyBhdXMgZGVyIE1pdHRlIGlyZ2VuZHdlbGNoZSBJbml0aWF0aXZlbiBnZWdlbiBSYXNzaXNtdXMgdW50ZXJzdHR6dCB3ZXJkZW4uLiAKQnJlYWtpbmcgSW4uIEEgd2VlayBvbiBhIHRvcGxlc3MgYmVhY2ggY2FuIGRvIHdvbmRlcnMgZm9yIHlvdXIgc2VsZiBjb25zY2lvdXNuZXNzIGFib3V0IGdvaW5nIGJyYWxlc3MuIEJ1dCBpZiB5b3UncmUgbm90IHBsYW5uaW5nIGEgdHJpcCB0byB0aGUgTWVkaXRlcnJhbmVhbiBhbnl0aW1lIHNvb24sIHRyeSBzdGFydGluZyBvdXQgaW4gdGhlIHdpbnRlciB3aGVuIHlvdSdsbCBiZSB3ZWFyaW5nIGxheWVycyBhbnl3YXkuIAoiTmVkZXJsYW5kIGlzIHN0cm9uZ2x5IHJvb3RlZCBpbiBjb21tdW5pdHksIiBzYWlkIE1hY0RvbmFsZC4gIlRoZSB0b3duIGlzIHJlYWxseSBhIG1pY3JvY29zbSBvZiBjcm9zcyBzZWN0aW9ucyBvZiBzb2NpZXR5LiBUaGVyZSdzIGFuIG9kZCBtYWdpYyB0aGF0IGdvZXMgb24gd2hlbiB5b3UgbmVlZCBoZWxwIHdpdGggc29tZXRoaW5nIGFuZCBhbGwgb2YgYSBzdWRkZW4gc29tZW9uZSBhcHBlYXJzLiIuCkJyZWFrIEhlYXIgSW4gVGVsZXBob25lIFdhZ2UgVGFsa3MgV0FTSElOR1RPTiwgQXByLiAKSSBkb24gd2FudCBhIHdlZGRpbmcgY2VyZW1vbnkgdGhhdCB3b3VsZCBjb3N0IG11Y2gsIGlmIGFueXRoaW5nIGF0IGFsbC4gSSB3YXMgdG8gc2tpcCB0aGUgcmluZ3MsIHRoZSB3aG9sZSBwYXJ0eSwgYW5kIGV2ZXJ5IGNvbm5vdGF0aW9uIHdpdGguIEkgbXVjaCByYXRoZXIgaW52aXRlIDUgMTAgY2xvc2UgZnJpZW5kcyArIGZhbWlseSB0byBhIHZlcnkgc21hbGwgYW5kIHBlcnNvbmFsIHZlbnVlLCBhbmQgc2hhcmUgdGhlIGV4cGVyaWVuY2Ugd2l0aCB0aGVtIGFuZCBrZWVwIGV2ZXJ5dGhpbmcgc2ltcGxlLi4gClRoZSBlbmQgb2YgcHJvY2VzcyBvZiBjb21tdW5pY2F0aW9uIGlzIGRlcGVuZHMgb24gdGhlIHJlY2VpdmVyIGJlY2F1c2UgaW4gY2FzZSBpZiByZWNlaXZlciBpcyBub3Qgc2F0aXNmaWVkIHdpdGggbWVzc2FnZSwgaGUgbWF5IGtlZXAgb24gYXJndWluZyBvbiB0aGF0IHBhcnRpY3VsYXIgaXNzdWUgd2l0aCBzZW5kZXIuIApIZSBpbnNpc3RlZCBwZW9wbGUgd2VyZSB0cnlpbmcgdG8gcnVpbiBoaXMgMzAgeWVhciBjYXJlZXIsIGJ1dCB0aGVuIHNhaWQgaGlzIGZpZ2h0IHdhcyAibm90IGFib3V0IG11c2ljLiIKQWxzbyBuZ2wgd2hlbmV2ZXIgSSBoZWFyL3JlYWQgYWJvdXQgRnJhbmNpcyBCYWNvbiBJIHRoaW5rIG9mIHRoYXQgcmVkZGl0b3Igd2hvIGdyZXcgdXAgd29uZGVyaW5nIHd0ZiB5b3UgdGFjayBpcyBiYWNvbiBvbnRvIHRoZSB3aXNlIHBocmFzZSBpcyBwb3dlci4gTGlrZSwgSSBjb3VsZCBpbWFnaW5lIHRoZSAxN3RoIGNlbnR1cnkgcGhpbG9zb3BoZXIvc2NpZW50aXN0IGNvdWxkIGhhdmUgZG9uZSBzb21lIHBhaW50aW5nIHRvbywgYnV0IHRoZSBzdHlsZSBzZWVtZWQgcmVhbGx5IGFoZWFkIG9mIGhpcyB0aW1lLiBJdCBtYWtlcyBtb3JlIHNlbnNlIHRoYXQgaXQgd2FzIGFjdHVhbGx5IGEgMjB0aCBjZW50dXJ5IGR1ZGUuCktvbnRyb2xsZXJhIGRpbiBtYWtlcyBkYXRvcmFudm5kbmluZy4gClllcyB5b3UgY2FuIGFjdHVhbGx5IHdhdGNoIGFuIEFubmEgYW5kIEtyaXN0aW5hIHNob3cgYW5kIG5vdCBjb21lIGF3YXkgZmVlbGluZyBiYWQgYWJvdXQgeW91ciB0dXJrZXkgb3ZlcmNvb2tpbmcsIHVub3JnYW5pemVkLCBsaW5lbiBjbG9zZXQgc2VsZi4iV2UndmUgYWx3YXlzIGNlbGVicmF0ZWQgdGhlIHJvYWQgbGVzcyB0cmF2ZWxlZCBpbiBsaWZlIGFuZCB0aGlzIGlzIGEgcGxhY2UgdG8gZGlzY3VzcyB0aG9zZSBleHBlcmllbmNlcywiIHNhaWQgV2FsbG5lci4gIkl0J3MgYWxzbyBzb21ld2hlcmUgdG8gY2VsZWJyYXRlIGZyaWVuZHNoaXAsIG9uZSBvZiB0aGUgcGlsbGFycyBvZiBvdXIgYnVzaW5lc3MuIApUbyB1bmxvY2sgTEZTLCB5b3UgbmVlZCBhbiBTMSwgUzIgb3IgUzMgbGljZW5zZSAoaW5mbyAvIHNob3ApLCBhbmQgeW91ciBjb21wdXRlciAuIERvd25sb2FkIHRoZSBMaXZlIGZvciBTcGVlZCB0b3JyZW50IGZpbGUuIExhdGVzdCB2ZXJzaW9uLiBTMiBaMjguIDEwLjExLjEwLiAyNTIuOWsuIFJhdGUgdGhpcyBBcHAuIExpdmUgZm9yIFNwZWVkIHNjcmVlbnNob3QgLiB0aGV5IHdlcmUgcmVhbGx5IGdvb2QgYW5kIHdlIGltbWVkaWF0ZWx5IGRvd25sb2FkZWQgdGhlIGdhbWUgdG8gdGVzdCBpdC4gClRoZXJlIGFyZSBtYW55IHdheXMgdG8gZm9ybSB5b3VyIGhhbmRzIGZvciB0aGUgZHJ1bW1pbmcuIApNYXR0aGV3IFBhdGVsLCB0aGUgZmlyc3QgZXZpbCBleCwgaGFzIG9ubHkgb25lIGV5ZSAob3IgYXQgbGVhc3QgaXQgYXBwZWFycyB0aGF0IHdheSwgYmVjYXVzZSBvZiBoaXMgaGFpcmN1dCwgd2hpY2ggd2UnbGwgY2FsbCB0aGUgRW1vIENvbWJvdmVyKS4gSGUgcG9zZXMgYnkgcG9pbnRpbmcgaW4gdGhlIGFpciAod2l0aCBvbmUgaGFuZCkgYW5kIGdldHMgY2FsbGVkICIuIiBMdWNhcyBMZWUsIHRoZSBzZWNvbmQsIHN0YXlzIGluIHRyYWlsZXIgMiBhbmQgc2F5cyBpdCdsbCB0YWtlICJ0d28gbWludXRlcyB0byBraWNrIHlvdXIgYXNzIiBhbmQgdGhhdCB0aGUgc3RhaXJjYXNlIGhlIGdyaW5kcyBkb3duIGhhcyAibGlrZSAyMDAgc3RlcHMuIiBUb2RkIEluZ3JhbSBpcyBpbiBhIHRocmVlIHBpZWNlIGJhbmQgYW5kLCBsaWtlIFNjb3R0LCBhbHNvIHdlYXJzIGhpcyBudW1iZXIgb24gaGlzIHNoaXJ0Li4gCkluc3BlY3RvciBGcmFuIE5pY2hvbHNvbiBwdXQgaXQgdG8gdGhlIHdpdG5lc3MgdGhhdCBoZSBoYWQgY29tZSBpbnRvIGNvdXJ0IGFuZCB0b2xkIGEgb2YgbGllcyB0byBzdWl0IGEgY2VydGFpbiBzdG9yeSBkZWZlbmRhbnQgdG9sZCB0aGUgY291cnQgdGhhdCBhZnRlciBhdHRlbmRpbmcgYSBwb2tlciBnYW1lIGluIEJhbGxhIGhlIHdlbnQgdG8gYSBmcmllbmQgaG91c2UgaW4gVGhlIEdyb3ZlIGFuZCBvYnNlcnZlZCBzb21lb25lIHJ1biBhd2F5IGZyb20gMjIgVGhlIEdyb3ZlLiBNYXVnaGFuIHNhaWQgaGUgd2VudCB0byB0aGUgaG91c2UsIGtub2NrZWQgb24gdGhlIGRvb3IgYW5kIHRoZW4gc2F3IGJyb2tlbiBnbGFzcyBmcm9tIGEgd2luZG93LiAKVGhlIGpveSBvZiBhcmVuYSBpcyBiZWluZyBhYmxlIHRvIHBsYXkgcXVpY2sgZ2FtZXMgd2l0aCBhIGRlY2sgbGlrZSBtaWxsLCB0aXRoZSwgcmFpbmJvdyBsaWNoLCB3aGF0ZXZlciwgaW4gYSB3YXkgdGhhdCBJIGNhbiBpbnN0YW50bHkgbW92ZSBvbiB0byB0aGUgbmV4dCBnYW1lLiBTaWRlYm9hcmRpbmcgaW4gdGhlc2UgY2FzZXMgc3Vja3MgdGhlIGpveSBvdXQgb2YgcGxheWluZyB0aGUgZGVjayBJIHdhbnQgdG8gcGxheS4gV2h5IGRvIEkgbmVlZCB0byBwcm92ZSB0aGF0IEkga2lsbGVkIG15IGNvbWJvIGFuZCBzaWRlYm9hcmRlZCBpbiB1bm1vb3JlZCBlZ28gc28gSSBjYW4gdGFrZSBvdXQgbmV4dXMsIG9yIGhvc3RhZ2UgdGFrZXJzIGZvciBrcmFzaXM/IElzIHRoZXJlIHNvbWUgc2tpbGwgaW4gdGhhdD8uIApFZGl0OiBJIGd1ZXNzIGl0J3MgdW5jbGVhciwgYnV0IEkgd2FzIHJlZmVycmluZyB0byB0aGUgZ2VuZXJhbCBhY3Qgb2YgYSByYW5kb20gcGVyc29uIGNvbWluZyB1cCBhbmQgaGFyYXNzaW5nIHlvdSwgbm90IG5lY2Vzc2FyaWx5IGxvb2tpbmcgZm9yIGEgZmlnaHQuCkV2ZW4gdGhvdWdoIE5OVCBpcyBhbiBpbXBvcnRhbnQgbWVhc3VyZSBpbiBhIGNsaW5pY2FsIHRyaWFsLCBpdCBpcyBpbmZyZXF1ZW50bHkgaW5jbHVkZWQgaW4gbWVkaWNhbCBqb3VybmFsIGFydGljbGVzIHJlcG9ydGluZyB0aGUgcmVzdWx0cyBvZiBjbGluaWNhbCB0cmlhbHMuCkV0IGQnYXBycyBTdGVpbmVyLCBpbCBzZW1ibGVyYWl0IHF1ZSBncmNlIGF1IGZldSBldCAgbGEgY3Vpc3NvbiBjZXR0ZSBmb3JjZSB1dGlsaXNlIGF2YW50IHBvdXIgbGEgZGlnZXN0aW9uIGFpdCBwZXJtaXMgZGUgZHZlbG9wcGVyIG5vdHJlIGNlcnZlYXUuQm9ubmUgam91cm5lIGV0IG1lcmNpLkwnZXJyZXVyIGRlIHRpdHJhZ2UgZHUgRHIgU2VpZ25hbGV0SmUgbidhaSBwYXMgZ3JhbmQgY2hvc2UgIGFqb3V0ZXIgIHRvdXQgY2VsYSBzaSBjZSBuJ2VzdCBxdWUgbGEgZGl0dGlxdWUgdnVlIHNvdXMgbCdhbmdsZSBwdXJlbWVudCBhbGltZW50YWlyZSBlc3Qgc2FucyBkb3V0ZSBwbHVzIGNvbXBsaXF1ZSBlbmNvcmUgcXVlIGxhIG1kZWNpbmUgcXUnZWxsZSBzb2l0IGFjYWRtaXF1ZSBvdSBhdWdtZW50ZSBkZXMgYXBwb3J0cyBkZXMgbWRlY2luZXMgZGVtZXVyZXMgIm5hdHVyZWxsZXMiLiBKZSByYXBwZWxsZSBlbiBwYXNzYW50IHF1ZSBsZSBEciBTZWlnbmFsZXQgYSBmb2lyIGRhbnMgc29uIHRpdHJlLCBpbCBhdXJhaXQgZHUgcGFybGVyIGRlIEwnQWxpbWVudGF0aW9uIG91ICJwcmVtaXJlIG1kZWNpbmUiLiAKMjAwOCBpbiBkZXIgU2Nod2FuZ2Vyc2NoYWZ0LCBZb2dhIFZpZHlhIEF1c3RyaWEsIEVLSVosIEdyYXosCkl0IGlzIGFsc28gYW4gY29uY2Vzc2lvbiBmcm9tIHlvdSB0aGF0IHRoZXkgc2VlayB0byBoYXJtIEdST1VQUyBvZiBhbmltYWxzIG9uIGEgc3BlY2llcyB3aWRlIHNjYWxlLgpTbyBOT1cgY2FuIHdlIHRhbGsgYWJvdXQgZW5kaW5nIGxpZmUgdGltZSBqdWRpY2lhcnkgcG9zaXRpb25zPyBFdmVyeW9uZSBmcmVha3Mgb3V0IHdoZW4gSSBzYXkgd2Ugc2hvdWxkIHZvdGUgb24ganVkZ2VzIGJvdGggbG9jYWxseSBhbmQgbmF0aW9uYWxseSBidXQgaGV5IGlmIGhhdmluZyBvbmUgc21hbGwgZ3JvdXAgb2YgYXNzaG9sZSB3aG8gY2hlYXQgdG8gd2luIGZpbGwgb3VyIGNvdXJ0cyB3aXRoIGFzc2hvbGVzIGxpa2UgdGhpcyBpcyB0aGUgd2F5IHlvdSB0aGluayBpdCBzaG91bGQgcmVtYWluIHRoZW4gaGF2ZSBmdW4gd2l0aCB0aGF0LiBGdWNrIHRoaXMgbm9pc2UuIApNcyBCZXN0bWFuIHNhaWQ6ICcnVGhlIGhhcm1mdWwgYWZmZWN0cyBvZiBnYW1ibGluZyBhZHZlcnRpc2luZyBhcmUgd2VsbCBrbm93biBidXQgdGhpcyB3YXMgdGhlIGZpcnN0IHN0dWR5IHRvIGxvb2sgYXQgdGhlIGltcGFjdCBvZiBnYW1ibGluZyB2ZW51ZXMgb24gY2hpbGRyZW4uIApBZ2FpbiBldmVyeWJvZHkgaXMgZ29pbmcgdG8gZ2V0IGEgY3V0IGJlZm9yZSB0aGUgcGVyc29uIGRvZXMuIE1hbnkgRG9EIGNvbnRyYWN0aW5nIGNvbXBhbmllcyB3aWxsIGNoYXJnZSB0aGUgZ292ZXJubWVudCB1cHdhcmRzIG9mIHR3aWNlIHdoYXQgdGhleSBhcmUgcGF5aW5nIHRoZWlyIGVuZ2luZWVycy4gCllvdSdyZSBzY2FyZWQgdGhhdCB5b3VyIGNoaWxkcmVuJ3Mgam9icyB3aWxsIGJlIHRha2VuIGJ5IGlsbGVnYWxzIHRoYXQgbWFrZSB1cCBhIHRvdGFsIG9mIDMlIG9mIHRoZSB0b3RhbCBwb3B1bGF0aW9uLiBJZiB5b3VyIGtpZHMgY2FuJ3QgZ2V0IGEgam9iIGJlY2F1c2Ugb2YgYSByZWFsbHkgc21hbGwgcG9ydGlvbiBvZiB0aGUgY291bnRyeSB3b3JrcyBoYXJkZXIgdGhhbiB0aGV5IGRvLCB0aGFuIHlvdSBmYWlsZWQgYXMgYSBwYXJlbnQgYW5kIGhhdmUgbm90IGVxdWlwcGVkIHRoZW0gd2l0aCB0aGUgd29yayBldGhpYyBvciBlZHVjYXRpb24gdG8gYmUgc3VjY2Vzc2Z1bCBpbiBsaWZlLiAKTm9uZSBvZiBpdCBsb29rcyByZWFsaXN0aWMgYXQgYWxsLiAKUHV6emxlIHRpbWUuIEtlZXAgeW91ciBtaW5kIGFjdGl2ZSBieSB3b3JraW5nIG9uIGppZ3NhdyBwdXp6bGVzLCBjcm9zc3dvcmQgcHV6emxlcywgYW5kIDMgZGltZW5zaW9uYWwgcHV6emxlcy4gUGxheSBib2FyZCBnYW1lcyBhbmQgY2FyZCBnYW1lcyB3aXRoIHlvdXIgdmlzaXRvcnMuIE9yIHBsYXkgY29tcHV0ZXIgZ2FtZXMgb24gYSBub3RlYm9vayBjb21wdXRlci4gVGFrZSBhbiBvbmxpbmUgY2xhc3MsIHZpZGVvIHR1dG9yaWFsLCBvciBob21lIGNvcnJlc3BvbmRlbmNlIGNvdXJzZS4gVGhlc2UgYWxsb3cgeW91IHRvIGdvIGF0IHlvdXIgb3duIHBhY2UsIGFuZCB5b3UgZG9uJ3QgaGF2ZSB0byBnZXQgb3V0IG9mIGJlZCB0byBnbyB0byBjbGFzcy4gWW91ciBicmFpbiB3aWxsIGJlbmVmaXQgZnJvbSB0aGUgc3RpbXVsYXRpb24gb2YgbGVhcm5pbmcuIElmIHlvdSB3ZXJlIGVtcGxveWVkIGJlZm9yZSwgYW5kIGNhbiBkbyBhbnkgd29yayBmcm9tIGhvbWUsIGFycmFuZ2UgdG8gZG8gc28gKGFzIGxvbmcgYXMgeW91ciBwaHlzaWNpYW4gYXBwcm92ZXMpLiBJZiB0aGF0J3Mgbm90IHBvc3NpYmxlLCBzdGF5IGN1cnJlbnQgb24gd2hhdCdzIGhhcHBlbmluZyBpbiB5b3VyIGZpZWxkIGJ5IHJlYWRpbmcgbmV3c2xldHRlcnMsIG1hZ2F6aW5lcywgYW5kIGFydGljbGVzIG9uIHRoZSBJbnRlcm5ldC4KSW4gaW50ZXJ2aWV3cyB3aXRoIGRldGVjdGl2ZXMsIHNvbWUgb2YgdGhlIHdvbWVuIHJlbW92ZWQgZnJvbSB0aGUgbWFzc2FnZSBwYXJsb3JzIHNhaWQgdGhleSB3ZXJlIGVhY2ggY2hhcmdlZCAkMzYwIHRvICQ2MDAgYSBtb250aCBpbiByZW50LiBUaGUgd29tZW4sIGluIHRoZWlyIGxhdGUgMjBzIHRvIGVhcmx5IDYwcywgd29ya2VkIHNpeCBvciBzZXZlbiBkYXlzIGEgd2Vlaywgb2Z0ZW4gZm9yIDE0IG9yIG1vcmUgaG91cnMgYSBkYXksIGFjY29yZGluZyB0byBwb2xpY2UgYW5kIGNoYXJnaW5nIHBhcGVycy4KUmVsYXRlZDogNSBSZWFsIEVzdGF0ZSBJbnZlc3RpbmcgTGVzc29ucyBMZWFybmVkIEZyb20gQnVpbGRpbmcgYSBDYW1wZmlyZQpTdGFnZSAgIElJIDogTmF0aW9uYWwgbGV2ZWwgZXhhbWluYXRpb24gQ2FuZGlkYXRlcyBhY3F1aXJpbmcgbW9yZSB0aGFuIHRoZSByZXF1aXJlZCBwZXJjZW50YWdlIGluIHRoZSBzdGF0ZSBsZXZlbCBleGFtaW5hdGlvbiBhbmQgc3RhbmRpbmcgd2l0aGluIGEgc3BlY2lmaWVkIG51bWJlciBvZiB0b3AgcmFua3MgKHN0YXRlIHF1b3RhKSBhcmUgZWxpZ2libGUgdG8gYXBwZWFyIGZvciB0aGUgbmF0aW9uYWwgbGV2ZWwgZXhhbWluYXRpb24gKGFib3V0IHRvcCA0MDAwIHN0dWRlbnRzIGZyb20gdGhlIGVudGlyZSBjb3VudHJ5KS4gCihXaHkgbm90IGRyaW5rIDk1IHBlcmNlbnQgbmV1dHJhbCBncmFpbiBzcGlyaXQsIHRoZSBjaGVhcGVzdCB3YXkgdG8gZ2V0IGRydW5rPylCZXNpZGVzLCB0aGF0IGFyZ3VtZW50LCBldmVuIGlmIHdlIGFsbCBuZWVkZWQgdG8gZ2FpbiB3ZWlnaHQsIGlzIG5vdCBhbHdheXMgdHJ1ZS5BIG1lYWwgb2YgcmVhbCBmb29kIGNvb2tlZCBhdCBob21lIGNhbiBlYXNpbHkgY29udGFpbiBtb3JlIGNhbG9yaWVzLCBtb3N0IG9mIHRoZW0gb2YgdGhlICJoZWFsdGh5IiB2YXJpZXR5LiAoT2xpdmUgb2lsIGFjY291bnRzIGZvciBtYW55IG9mIHRoZSBjYWxvcmllcyBpbiB0aGUgcm9hc3QgY2hpY2tlbiBtZWFsLCBmb3IgZXhhbXBsZS4pSW4gY29tcGFyaW5nIHByaWNlcyBvZiByZWFsIGZvb2QgYW5kIGp1bmsgZm9vZCwgSSB1c2VkIHN1cGVybWFya2V0IGluZ3JlZGllbnRzLCBub3QgdGhlIHByaWNpZXIgb3JnYW5pYyBvciBsb2NhbCBmb29kIHRoYXQgbWFueSBwZW9wbGUgd291bGQgY29uc2lkZXIgaWRlYWwuQnV0IGZvb2QgY2hvaWNlcyBhcmUgbm90IGJsYWNrIGFuZCB3aGl0ZTsgdGhlIGFsdGVybmF0aXZlIHRvIGZhc3QgZm9vZCBpcyBub3QgbmVjZXNzYXJpbHkgb3JnYW5pYyBmb29kLCBhbnkgbW9yZSB0aGFuIHRoZSBhbHRlcm5hdGl2ZSB0byBzb2RhIGlzIEJvcmRlYXV4LlRoZSBhbHRlcm5hdGl2ZSB0byBzb2RhIGlzIHdhdGVyLCBhbmQgdGhlIGFsdGVybmF0aXZlIHRvIGp1bmsgZm9vZCBpcyBub3QgZ3Jhc3MgZmVkIGJlZWYgYW5kIGdyZWVucyBmcm9tIGEgdHJlbmR5IGZhcm1lcnMnIG1hcmtldCwgYnV0IGFueXRoaW5nIG90aGVyIHRoYW4ganVuayBmb29kOiByaWNlLCBncmFpbnMsIHBhc3RhLCBiZWFucywgZnJlc2ggdmVnZXRhYmxlcywgY2FubmVkIHZlZ2V0YWJsZXMsIGZyb3plbiB2ZWdldGFibGVzLCBtZWF0LCBmaXNoLCBwb3VsdHJ5LCBkYWlyeSBwcm9kdWN0cywgYnJlYWQsIHBlYW51dCBidXR0ZXIsIGEgdGhvdXNhbmQgb3RoZXIgdGhpbmdzIGNvb2tlZCBhdCBob21lICAgaW4gYWxtb3N0IGV2ZXJ5IGNhc2UgYSBmYXIgc3VwZXJpb3IgYWx0ZXJuYXRpdmUuW1NpZGUgbm90ZSBmcm9tIG1lSSB0aGluayB5b3Ugc2hvdWxkIGJ1eSBHcmFzcyBmZWQgYmVlZiBhbmQgbG9jYWwgb3JnYW5pYyBmYXJtZXJzIHdoZW4gcG9zc2libGVhbmQgbm8gZ3JhaW5zIHRvIG1pbmltYWwgZ3JhaW5zLkV2ZW4gdGhlIG5lYXJseSA1MCBtaWxsaW9uIEFtZXJpY2FucyB3aG8gYXJlIGVucm9sbGVkIGluIHRoZSBTdXBwbGVtZW50YWwgTnV0cml0aW9uIEFzc2lzdGFuY2UgUHJvZ3JhbSAoZm9ybWVybHkga25vd24gYXMgZm9vZCBzdGFtcHMpIHJlY2VpdmUgYWJvdXQgJDUgcGVyIHBlcnNvbiBwZXIgZGF5LCB3aGljaCBpcyBmYXIgZnJvbSBpZGVhbCBidXQgZW5vdWdoIHRvIHN1cnZpdmUuU28gd2UgaGF2ZSB0byBhc3N1bWUgdGhhdCBtb25leSBhbG9uZSBkb2Vzbid0IGd1aWRlIGRlY2lzaW9ucyBhYm91dCB3aGF0IHRvIGVhdC5UaGVyZSBhcmUsIG9mIGNvdXJzZSwgdGhlIHNvIGNhbGxlZCBmb29kIGRlc2VydHMsIHBsYWNlcyB3aGVyZSBpdCdzIGhhcmQgdG8gZmluZCBmb29kOiB0aGUgRGVwYXJ0bWVudCBvZiBBZ3JpY3VsdHVyZSBzYXlzIHRoYXQgbW9yZSB0aGFuIHR3byBtaWxsaW9uIEFtZXJpY2FucyBpbiBsb3cgaW5jb21lIHJ1cmFsIGFyZWFzIGxpdmUgMTAgbWlsZXMgb3IgbW9yZSBmcm9tIGEgc3VwZXJtYXJrZXQsIGFuZCBtb3JlIHRoYW4gZml2ZSBtaWxsaW9uIGhvdXNlaG9sZHMgd2l0aG91dCBhY2Nlc3MgdG8gY2FycyBsaXZlIG1vcmUgdGhhbiBhIGhhbGYgbWlsZSBmcm9tIGEgc3VwZXJtYXJrZXQuU3RpbGwsIDkzIHBlcmNlbnQgb2YgdGhvc2Ugd2l0aCBsaW1pdGVkIGFjY2VzcyB0byBzdXBlcm1hcmtldHMgZG8gaGF2ZSBhY2Nlc3MgdG8gdmVoaWNsZXMsIHRob3VnaCBpdCB0YWtlcyB0aGVtIDIwIG1vcmUgbWludXRlcyB0byB0cmF2ZWwgdG8gdGhlIHN0b3JlIHRoYW4gdGhlIG5hdGlvbmFsIGF2ZXJhZ2UuQW5kIGFmdGVyIGEgbG9uZyBkYXkgb2Ygd29yayBhdCBvbmUgb3IgZXZlbiB0d28gam9icywgMjAgZXh0cmEgbWludXRlcyAgIHBsdXMgY29va2luZyB0aW1lICAgbXVzdCBzZWVtIGxpa2UgYW4gZXRlcm5pdHkuVGFraW5nIHRoZSBsb25nIHJvdXRlIHRvIHB1dHRpbmcgZm9vZCBvbiB0aGUgdGFibGUgbWF5IG5vdCBiZSBlYXN5LCBidXQgZm9yIGFsbW9zdCBhbGwgQW1lcmljYW5zIGl0IHJlbWFpbnMgYSBjaG9pY2UsIGFuZCBpZiB5b3UgY2FuIGRyaXZlIHRvIE1jRG9uYWxkJ3MgeW91IGNhbiBkcml2ZSB0byBTYWZld2F5Lkl0J3MgY29va2luZyB0aGF0J3MgdGhlIHJlYWwgY2hhbGxlbmdlLihUaGUgcmVhbCBjaGFsbGVuZ2UgaXMgbm90ICJJJ20gdG9vIGJ1c3kgdG8gY29vay4iIEluIDIwMTAgdGhlIGF2ZXJhZ2UgQW1lcmljYW4sIHJlZ2FyZGxlc3Mgb2Ygd2Vla2x5IGVhcm5pbmdzLCB3YXRjaGVkIG5vIGxlc3MgdGhhbiBhbiBob3VyIGFuZCBhIGhhbGYgb2YgdGVsZXZpc2lvbiBwZXIgZGF5LiBUaGUgdGltZSBpcyB0aGVyZS4pVGhlIGNvcmUgcHJvYmxlbSBpcyB0aGF0IGNvb2tpbmcgaXMgZGVmaW5lZCBhcyB3b3JrLCBhbmQgZmFzdCBmb29kIGlzIGJvdGggYSBwbGVhc3VyZSBhbmQgYSBjcnV0Y2guLiAKV2hpbGUgaXQgbWF5IGJlIHNvbWV0aGluZyBvZiBhIHN3ZWVwaW5nIHN0YXRlbWVudCwgSSBkaWQgcHV0IHRoZSBwYXJlbnRoZXNpcyBhZGRpdGlvbiB0aGVyZSBmb3IgZ3JvdXBzIGl0IG1heSBub3QgYXBwbHkgdG8gICBidXQgbW9yZSBvZnRlbiB0aGFuIG5vdCBpdCBzZWVtcyBwZW9wbGUgaGF2ZSBqdXN0IGV4cGFuZGVkIG9uIHRoZSBkcmF3IDIgd2l0aCBhZHZhbnRhZ2UgYnkgYWRkaW5nIHJvbGxpbmcgY2FyZHMgdG8gdGhlIGVxdWF0aW9uLiAKSXQgaXMgbm90IGFuIGVmZm9ydCB0byBpbXByb3ZlIHNpdHVhdGlvbnMuIApNeSBkYWQgYWxzbyBoYXMgaXQgYW5kIEkgaGF2ZSBncm93biB1cCB3YXRjaGluZyBoaW0gc3RydWdnbGUuIApJIGtub3cgdGhhdCBCbGl6emFyZCBsaWtlcyB0byByb2xsIG91dCB0aGUgImJ1dCB0aGUgY3VycmVudCBzdWJzY3JpcHRpb25zIiBhcmd1bWVudCwgYnV0IHRob3NlIG51bWJlcnMgYXJlIGhlYXZpbHkgcGFkZGVkIHdpdGggbnVtYmVycyBmcm9tIEFzaWEgd2hlcmUgcGxheWVycyBhcmVuIHBheWluZyBhIG1vbnRobHkgZmVlLiAKMjBrIHBhcnQgdGltZSB3b3VsZCBiZSAkMjUvaHIuIEF0IGxlYXN0IDk5LjklIG9mIHBlb3BsZSB0aGF0IHN0YXJ0IHRha2luZyBwb2tlciBzZXJpb3VzbHkgaW4gMjAxOSB3aWxsIG5ldmVyIHJlYWNoIHRoYXQgaG91cmx5LiBUaGVyZSBhcmUgdGhvdXNhbmRzIG9mIHRoaXJkIHdvcmxkIHByb3MgZ3JpbmRpbmcgb3V0IHRoZSBtaWNyb3MgZm9yICQxay9tb250aCBwbGF5aW5nIGZ1bGwgdGltZS4gCk9uZSBndXkgSSBrbm93IG1hZGUgaXQgdG8gdGhlIHRvcCBvbiBhIGphbmt5IGxhcHRvcCBhbmQgMTBtYnBzIGludGVybmV0LiBPdGhlcnMgaGF2ZSBlaXRoZXIgc2F2ZWQgdXAgbW9uZXkgZm9yIHRoZWlyIG93biBnZWFyIG9yIHdvbiB0aGVtIGluIHRvdXJuYW1lbnRzLiAKQ2FuIHN0cmFuZ2UgYW5kIGFuZCBzY2FybGV0IHdpdGNoIGhhbmRsZSBhbGwgb2YgdGhhdCBhdCB0aGUgc2FtZSB0aW1lPyBNYXliZSB3aXRoIHRoZSByZXN0IG9mIHRoZSBNQ1UsIHRoZXkgY2FuLCBidXQgbm90IGZvciBtb3JlIHRoYW4gMjQgaG91cnMgc3RyYWlnaHQuIApJIHN0YXllZCB1bnRpbCBJIHNuYXBwZWQgYW5kIGl0IGZlbHQgbGlrZSBsZWF2aW5nIGFuIGFidXNpdmUgcmVsYXRpb25zaGlwIHRvIGEgZGVncmVlLiBJIHdvdWxkIHJlY29tbWVuZCBub3Qgd2FpdGluZyB0byB0aGF0IHBvaW50IGFuZCBrbm93IHRoYXQgaXQgaXMgb2theSB0byBwdXQgeW91cnNlbGYgZmlyc3QuIEl0IGZlZWxzIHdyb25nIHRvIGxlYXZlIGEgc2ljayBwZXJzb24gYnV0IHRoZWlyIGlsbG5lc3MgY2FuIGJlIGEgdG9vbCBvciBhIHdlYXBvbi4gCk1vcmUgdGhhbiAzMCBob3RlbCBhbmQgcmVzaWRlbnRpYWwgcHJvamVjdHMgYXJlIHVuZGVyIGRldmVsb3BtZW50IGFyb3VuZCB0aGUgZ2xvYmUgd2l0aCBmdXR1cmUgb3BlbmluZ3Mgd2hpY2ggaW5jbHVkZSBUaGUgUml0eiBDYXJsdG9uLCBIb25nIEtvbmcgd2hpY2ggd2lsbCBvcGVuIGFzIHRoZSBoaWdoZXN0IGhvdGVsIGluIHRoZSB3b3JsZC4gClRoZSBSb3lhbHMgd2VyZSBvbiB0aGUgV2VzdCBDb2FzdCB3aXRoIGFuIG9mZiBkYXkuIApPdGggIGVyd2lzZSB0aGUgcG93ZXIgYW5kIGxpZ2h0IHN5cyAgZW0gY2FtZSB0aHJvdWdoIHRoZSBzdG9ybSBpbiAhaXJzdCBjbGFzcyBzaGFwZS4gVkFMVUUgT0YgUFJPUEVSVFkgT04gVFdPIFJPQURTIFN1bmRheSBhbmQgTW9uZGF5IG5pZ2h0cyBTaXQgIGthIHdhcyB0cmVhdGVkIHRvIGEgcmVhbCBibG93LCB3aGVuIHRoZSB3aW5kIHJlYWNoZWQgYSB2ZWxvY2l0eSBvZiBmaWZ0eSBmaXZlIG1pbGVzIGFuIGhvdXIuIFRoZSBoaWdoIHNwZWVkIHdhcyByZWFjaGVkIGluIGd1c3RzLiAKVGhlIGNvbGQgc3R1ZmYgaXMgdGhyb3duIG9uIHRvcCwgZ2VuZXJhbGx5LCBzbyBpdCBzaG91bGQgYmUgcmVhbGx5IGVhc3kgdG8gcGVlayBkb3duIGFuZCBzZWUgaWYgeW91IGhhdmUgZXZlcnl0aGluZy4gCkxlcyAiYmFyYmVjaGFzIiwgY2hpZmZvbm5pZXJzIGRlIFR1bmlzLCB2aXZlbnQgZHUgcmFtYXNzYWdlIGRlcyBwbGFzdGlxdWVzIGV0IGF1dHJlcyBwcm9kdWl0cyByZWN5Y2xhYmxlcy4gCkJ1dCB0aG9zZSBmYWN0b3JzIGFzaWRlLCBDIHNlY3Rpb24gZGVsaXZlcmllcyBhcmUgb24gdGhlIHJpc2Ugd29ybGR3aWRlLiBUaGUgbWVkaWNhbGl6YXRpb24gb2YgYmlydGggaXMgYSBmYWN0IG9mIG1vZGVybiBtZWRpY2luZS4KWW91IGdpdmUgdGhlIGJvb2sgc2lnbmlmaWNhbnRseSBtb3JlIHdlaWdodCwgYW5kIEkgaGF2ZSBpbmNvcnJlY3RseSBkaXNjcmVkaXRlZCBpdCBieSBteSBnZW5lcmFsaXphdGlvbnMgYW5kIG1pc2ludGVycHJldGF0aW9ucy4gV2hpbGUgSSBkb24gdGhpbmsgSSB3aWxsIGdldCBhcm91bmQgdG8gcmVhZGluZyBpdCBhZ2FpbiwgaXQgZ29vZCB0byBrbm93IHRoYXQgdGhlcmUgdmFsdWUgdG8gaXQgYmVpbmcgaGlnaGx5IHJlZ2FyZGVkIGFuZCByZWNvbW1lbmRlZCBmZXJ2ZW50bHkuClRvIHRyYXZlbCBpbiBwcm9jZXNzaW9uLiAKR2F0ZXdheSBIZWFsdGggZ2FtYmxlcnMgaGVscCBjbyBvcmRpbmF0b3IgRGF2aWQgUm9zZXdhcm5lIHNhaWQgdGhlIG9yZ2FuaXNhdGlvbiB3b3JrZWQgY2xvc2VseSB3aXRoIHB1YnMgYW5kIGNsdWJzIHRvIG1pbmltaXNlIHRoZSBoYXJtIGNhdXNlZCBieSBwb2tpZXMuIApObywgaGUgY291bGRuIGhhdmUuIFdNRCB3YXMganVzdCBhIGNvbnZlbmllbnQgZXhjdXNlLCBvbmUgdGhhdCB3b3VsZG4gaGF2ZSBtYWdpY2FsbHkgZGlzYXBwZWFyZWQganVzdCBiZWNhdXNlIGluc3BlY3RvcnMgc3RvcHBlZCBsb29raW5nIGZvciB3ZWFwb25zLgpOb3Qgb25seSB0aGF0LCB0aGV5IGJlbGlldmVkIE9XIHdhcyBkZXN0cm95ZWQgZHVlIHRvIGluZmlnaHRpbmcsIGJ1dCBKYWNrIGtub3dzIHRoYXQgdGhlcmUgc29tZSBvdGhlciBvdXRzaWRlIGZhY3RvciBhdCBwbGF5LkthbHJhbnlhR0VUIEJFSElORCBNRSAxLDUyNiBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvVGhlIHRoaW5nIGlzLiBJdCBub3QganVzdCBUcmFjZXIuIApJIGEgbGF3eWVyLCBhbGJlaXQgbm90IGluIHRoZSBVU0EsIHNvIG1heWJlIG15IGV4cGVyaWVuY2UgaXMgZGlmZmVyZW50LiAKVGhpcyBtZXRob2Qgd2lsbCB3b3JrIG9uIE9TIFgsIFdpbmRvd3MgYW5kIExpbnV4IHdpdGhvdXQgaXNzdWUuIFdpdGggQmx1ZVN0YWNrcyB0aGUgdXNlciBoYXMgdGhlIGFiaWxpdHkgdG8gZG93bmxvYWQgQW5kcm9pZCBhcHBzIGZyb20gdGhlIFBsYXkgU3RvcmUgYW5kIC4gQ29ybmVyIGFuZCBzZWxlY3QgTGludXggaW4gdGhlIGZpcnN0IGRyb3AgYm94IGFuZCBPdGhlciBMaW51eCAoNjQgYml0KSBpbiB0aGUgc2Vjb25kLiAKQmVnaW4gYSB3YWxraW5nIHJvdXRpbmUgdmVyeSBtb2Rlc3RseSBhbmQsIG92ZXIgd2Vla3MgYW5kIG1vbnRocywgc2xvd2x5IGluY3JlYXNlIGl0cyBpbnRlbnNpdHkuIFlvdSBtaWdodCBzdGFydCBvdXQgYnkgd2Fsa2luZyBmb3IgMjAgbWludXRlcyBhIGRheSwgdGhyZWUgZGF5cyBhIHdlZWssIGFuZCBncmFkdWFsbHkgYWRkIHRvIGJvdGggdGhlIGxlbmd0aCBhbmQgZnJlcXVlbmN5IG9mIHlvdXIgd2Fsa3Mgc28gdGhhdCwgYWZ0ZXIgdGhlIGZpcnN0IHRocmVlIG9yIGZvdXIgbW9udGhzLCB5b3UgYXJlIHdhbGtpbmcgZm9yIDQ1IG1pbnV0ZXMgYSBkYXksIGZpdmUgZGF5cyBhIHdlZWsuIFRoZSBsYXR0ZXIgc2NoZWR1bGUgICBpZiB5b3Ugd2FsayBhdCBhIHBhY2Ugb2YgYXQgbGVhc3QgdGhyZWUgbWlsZXMgYW4gaG91ciAgIHNob3VsZCBwcm9kdWNlIGFsbCB0aGUgYWVyb2JpYyBiZW5lZml0cyBtZW50aW9uZWQgaW4gdGhlIGZpcnN0IHBhcnQgb2YgdGhpcyBwYWdlLiAKQ29zdGEgUmljYSdzIHN1cmYgcmVhZHkgd2F2ZXMsIHRoaWNrIHJhaW5mb3Jlc3RzLCBhbmQgc3RlYW15IHZvbGNhbm9lcyBhcmUgbm90IGZvciB0aGUgdGltaWQuIFRoYW5rZnVsbHksIHdpdGggdGhlIHNvbG9jYXRpb25zIG9uIG9mZmVyIGZyb20gTyBTb2xvIE1pbyBUb3VycywgYWR2ZW50dXJvdXMgc291bHMgY2FuIGVtYmFyayBvbiBhbiBlaWdodCBuaWdodCBqb3VybmV5IHRocm91Z2ggdGhlIGNvdW50cnkncyBqdW5nbGUgY2xvYWtlZCBvdXRiYWNrIHdpdGggZmVsbG93IHNvbG8gdHJhdmVsZXJzLiBUaGUgYWN0aW9uIHBhY2tlZCBOYXR1cmUgYXQgaXRzIEJlc3QgcGFja2FnZSBoaWdobGlnaHRzIHNvbWUgb2YgdGhlIGNvdW50cnkncyBpbW1hY3VsYXRlIG5hdHVyYWwgc3BsZW5kb3JzIHRoaXMgU2VwdGVtYmVyIDI3IE9jdG9iZXIgNSwgaW5jbHVkaW5nIGNhbmFsIHJpZGVzIHRocm91Z2ggVG9ydHVndWVybyBOYXRpb25hbCBwYXJrLCBoaWtlcyBhcm91bmQgVm9sY24gQXJlbmFsIChDb3N0YSBSaWNhJ3MgbW9zdCBhY3RpdmUgdm9sY2FubyB3aGljaCBzcG91dHMgYW5kIHNwZXdzIHJlZ3VsYXJseSksIGNhbm9weSB0b3VycyBpbiBNb250ZXZlcmRlLCBhbmQgbmF0dXJlIHdhbGtzIGFuZCBiZWFjaCB0aW1lIGluIE1hbnVlbCBBbnRvbmlvIE5hdGlvbmFsIFBhcmsuIFRoZSB0cmlwIGNvdmVycyB5b3VyIGhvdGVsICh3aXRoIGFuIGFmZm9yZGFibGUgc3VwcGxlbWVudCBpZiB5b3Ugd2FudCBhIHNpbmdsZSByb29tKSwgZ3JvdW5kIHRyYW5zZmVycywgcHJpdmF0ZSBjb2FjaCBmb3IgZ3JvdXAgdG91cmluZywgc2lnaHRzZWVpbmcsIGFuZCBtb3N0IG1lYWxzLCBpbmNsdWRpbmcgYSBmYXJld2VsbCBkaW5uZXIuClJlc2VhcmNoZXJzIExpbmsgTWF0ZXJuYWwgRGlhYmV0ZXMgYW5kIE9iZXNpdHkgdG8gQXV0aXNtIGluIEtpZHMKRXZlcnkgdGltZSBJIHN0YXJ0IGEgZ2FtZSB0aGVyZSBzZWVtcyB0byBoYXZlIGJlZW4gYW4gdXBkYXRlIGFuZCBhIG1ham9yIGdhbWUgcGxheSBjaGFuZ2UgYnV0IFNPTUVIT1cgbXkgZmluZ2VycyBzdGlsbCBrbm93IGhvdyB0byBnZXQgdGhyb3VnaCB0aGUgbWVudXMgZXZlbiBpZiBteSBicmFpbiBkb2VzbiBJIGNhbiBhbHNvIHJlbWVtYmVyIGV2ZXJ5IGhlYXJ0YnJlYWtpbmcgcmVhc29uIEkgc3RvcHBlZCBwbGF5aW5nLi4gCkFsdGhvdWdoIEkgaGFkIHNvbWUgbWlzc2VzLCBJIG1vc3RseSBidXkgb25jZSBjcnkgb25jZS4gCkkgZG8gbGltaXQgY2xpZW50IGJvb2tpbmdzIGVhY2ggZGF5LiAKTXkgd29yc3QgZXBpc29kZSB3YXMgd2hlbiB0aGUgd2F0ZXIgZ290IG1peGVkIHdpdGggdGhlIG11Y29zIGluIG15IHRocm9hdC4gSSB0cmllZCB0byByZWd1cmdpdGF0ZSB0aGUgZm9vZCBvbmx5IHRvIGhhdmUgdGhlIHRoaWNrIG11Y29zIGltcGVkZSBteSBhaXJ3YXkuIEkgdGhvdWdodCBJIHdhcyBnb2luZyB0byBhc3BpcmF0ZSBteSBvd24gbXVjb3MgaW50byBteSBsdW5ncyBhbmQgZGllIG9mIGFzcGh5eGlhdGlvbi4gQXQgdGhlIHRpbWUgSSB3YXMgd2F0Y2hpbmcgbXkgdHdvIHlvdW5nIGNoaWxkcmVuLiBJIGNhbGxlZCB0aGUgZmlyZSBkZXBhcnRtZW50LiBXaGVuIHRoZXkgZ290IHRvIHRoZSBkb29yLCBJIGFuc3dlcmVkIHdpdGggYmxvb2RzaG90IHdhdGVyeSBleWVzIGZyb20gd3JldGNoaW5nIHNvIGhhcmQuIEkgdG9sZCB0aGVtIHdoYXQgd2FzIGdvaW5nIG9uLiBJIHdhcyBjb21wbGV0ZWx5IGJsdW50IGFuZCBzYWlkIHlvdSBhcmUgaGVyZSBmb3IgbXkgY2hpbGRyZW4gaW4gY2FzZSBteSBhaXJ3YXkgZ2V0cyBibG9ja2VkIGFuZCBpZiBpdCBkb2VzLCB5b3UgZ2V0IHByYWN0aWNlIG9uIGludHViYXRpbmcgaW4gdGhlIGZpZWxkLiBUaGV5IHdlcmUgcGlzc2VkLgpNeSBoeXBvdGhlc2lzIGlzIHRoYXQgaXQncyBkdWUgdG8gbGFjayBvZiBjb21wZXRpdGlvbiB3aXRoIG90aGVyIGNvbGxlY3RvcnMuIExpa2UsIEkgc2VhcmNoZWQgaGlnaCBhbmQgbG93IGZvciBhbiBPUDM5IGluIHdoaXRlLCBnb2luZyB0byBUb2t5byBhbmQgU2luZ2Fwb3JlIGV2ZW4gaW4gdmFpbiwgYW5kIGxvIGFuZCBiZWhvbGQgSSBmaW5kIGl0IGluIGEgbm9uZGVzY3JpcHQgQUQgYXQgYSBtYWxsIHN0cmlwIGluIHNvbWUgc21hbGwgY2l0eSBpbiBkZXZlbG9waW5nIFNvdXRoZWFzdCBBc2lhLi4gClVzdWFsbHkgeW91ciBpbnN0cnVjdG9yIHdpbGwgbGV0IHlvdSBrbm93IG9mIGFueSBtaXN0YWtlcyB5b3UgYXJlIG1ha2luZy4gCkFuZCBJIG9ubHkga25vdyBvbmUgb2YgbXkgbmVpZ2hib3JzIGRlc3BpdGUgbGl2aW5nIGluIHRoZSBzYW1lIGhvdXNlIGZvciBvdmVyIDQgeWVhcnMuIEkgbmV2ZXIgaW50cm9kdWNlZCBteXNlbGYgdG8gdGhlbSBhbmQgdGhleSBuZXZlciBpbnRyb2R1Y2VkIHRoZW1zZWx2ZXMgdG8gbWUuIApNeSBjbG9zaW5nIGF0dG9ybmV5IHNhaWQgZG9uJ3Qgc3BlbmQgdGhlIHNlY3VyaXR5IGRlcG9zaXQgYnV0IHRoZSByZXN0IGlzIHlvdXJzLiBBIHdob3BwaW5nICQzNTAgd2FzIG1pbmUgZm9yIGNsb3Npbmcgb24gYSBob3VzZS4gCldoYXQgdGhlIGRpZmZlcmVuY2U/IEl0IGFsc28ga2luZCBvZiBidWdzIG1lIHRoYXQgZXZlcnlvbmUgY2F0ZWdvcml6ZXMgQWx3YXlzIE9wZW4gYXMgInRoZSBzZXggcG9kY2FzdCIgd2hlbiBpdCBtdWNoIG1vcmUgaW50ZXJwZXJzb25hbCBzdHVmZiBpbiBnZW5lcmFsIGFuZCB0aGVyZSBoYXZlIGJlZW4gbG90cyBvZiBlcGlzb2RlcyB3aGVyZSB0aGUgZ3Vlc3Qgc2V4IGxpZmUgZG9lc24gZ2V0IGJyb3VnaHQgdXAgYXQgYWxsLCBpbmNsdWRpbmcsIHRvIHRoZSBiZXN0IG9mIHdoYXQgSSBjYW4gcmVtZW1iZXIsIGJvdGggb2YgR2F2aW4gZXBpc29kZXMgYW5kIHBvc3NpYmx5IFJ5YW4gSnVzdCBzZWVtcyBsaWtlIGEgd2VpcmQgZG91YmxlIHN0YW5kYXJkIHRvIG1lLi4gClRoaXMgaXMgdGhlIG9uZSBwYXJ0IG9mIHRoZSBzdG9yeSB0aGF0IEkgZmVlbCBsaWtlIHRoZSBzaG93IGdvdCBhIGxpdHRsZSB3cm9uZy4gClNXUiBNYXNzYWdlIHRyYWlucyB5b3VyIG1pbmQgdG8gcmVsYXguIApTaW5jZSB0aGVuLCBJJ3ZlIGhhZCBtdWx0aXBsZSBtZW50YWwgZGlzb3JkZXJzICAgYW54aWV0eSwgZmVhciBvZiBhYmFuZG9ubWVudCwgYW4gZWF0aW5nIGRpc29yZGVyIGFuZCBkZXByZXNzaW9uICAgYW5kIGZvciB5ZWFycyBhZnRlciBoaWdoIHNjaG9vbCwgSSB3ZW50IHRvIHRoZXJhcHkgdGhyZWUgdGltZXMgYSB3ZWVrLiBJIGhhdmVuJ3QgYmVlbiBhYmxlIHRvIGhvbGQgb250byBzZXJpb3VzIHJlbGF0aW9uc2hpcHMuIE15IGVkdWNhdGlvbiBhbHNvIHRvb2sgYSBoaXQ6IEkgYmFyZWx5IGdyYWR1YXRlZCBjb2xsZWdlLCBwYXJ0bHkgYmVjYXVzZSBvZiB0aGUgdHJhdW1hIEkgd2FzIGRlYWxpbmcgd2l0aCBhbmQgcGFydGx5IGJlY2F1c2UganVzdCBnb2luZyB0byBjbGFzcyB3YXMgdHJpZ2dlcmluZy4KTWljcm9zb2Z0IGFubm91bmNlZCB0aGUgZ2FtZSB3b3VsZCBiZSB0aGUgbGF0ZXN0IHRvIGFycml2ZSBvbiBpdHMgTmV0ZmxpeCBsaWtlIHNlcnZpY2UgdG9kYXkgYWxvbmdzaWRlIDIwMTIncyBMZWdvIEJhdG1hbiAyLiBNZWFud2hpbGUsIEYxIDIwMTggYW5kIEZhbGxvdXQgNCB3aWxsIGdldCBhZGRlZCBvbiBNYXJjaCAxNCwgdGhlIGxhdHRlciBvZiB3aGljaCB3YXMgcHJldmlvdXNseSBhdmFpbGFibGUgb24gR2FtZSBQYXNzIGxhc3QgeWVhciBidXQgd2FzIHJlbW92ZWQganVzdCBwcmlvciB0byB0aGUgcmVsZWFzZSBvZiBGYWxsb3V0IDc2LiAKU2V2ZXJhbCBwZW9wbGUgbmFtZWQgQ2hyaXMgV2FsbGFjZSAgIGFzIHdlbGwgYXMgQ2hyaXN0aW5lIGFuZCBDaHJpc3RpbmEgV2FsbGFjZXMgICBkbyBoYXZlIFR3aXR0ZXIgYWNjb3VudHMsIGJ1dCBvbmx5IG9uZSBoYXMgdXNlZCBpdCB0byBwcmVzZXJ2ZSBwdWJsaWMgY29uZmlkZW5jZSBpbiBvdXIgZWxlY3RvcmFsIHByb2Nlc3MuIApJIHJpZGUgbXkgYmlrZSBvbiB0aGUgc2lkZXdhbGtzIGluIHNvbWUgYXJlYXMgdG9vLCBzaG91bGQgd2Ugb3V0bGF3IGJpa2VzIG5vdz9EZW1va2lyYnkgIDQzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29DaHVyY2hpbGwgYXJndW1lbnQgdGhhdCB0aGUgZGlzYXN0ZXIgYXQgR2FsbGlwb2xpIHdhcyBkdWUgdG8gaGlzIHBsYW4gbm90IGJlaW5nIGZvbGxvd2VkLCBzaW5jZSB0aGUgd2hvbGUgcG9pbnQgd2FzIHRvIHRha2UgdGhlaXIgbWFzc2l2ZSBmbGVldCBvZiBub3cgZGF0ZWQgc2hpcHMgdGhhdCBjb3VsZCBub3QgY29tcGV0ZSBhZ2FpbnN0IHRoZSB0aGVuIG1vZGVybiBEcmVhZG5vdWdodCBjbGFzcyBzaGlwcyBhbmQgdXNlIHRoZW0gdG8gaW4gYSBleHBlbmRhYmxlIG1hbm5lciBhZ2FpbnN0IHRoZSBUdXJrcyB3aG8gZGlkIG5vdCBoYXZlIERyZWFkbm91Z2h0cyBvZiB0aGVpciBvd24uIEhlIHdhbnRlZCB0aGVtIHRvIGxldmVyYWdlIHRoaXMgdG8gYmFycmVsIHRocm91Z2ggdG8gYXZvaWQgYmVpbmcgYm9nZ2VkIGRvd24gaW4gYW5vdGhlciBsYW5kIHdhciBmcm9udCwgYnV0IG90aGVyIGNvbW1hbmQgZ290IHNraXR0aXNoIGFib3V0IHdhc3RpbmcgdGhlaXIgb2xkIG1hbmEgcG90aW9ucyBzaGlwcy5Ob3Qgc2F5aW5nIHRoYXQgcGxhbiB3b3VsZCBvciB3b3VsZCBub3Qgd29yaywgYnV0IGRvIHdhbnQgdG8gcG9pbnQgb3V0IHRoZSBsYW5kIHdhciBpbiBHYWxsaXBvbGkgd2FzIG5vdCBDaHVyY2hpbGwgbW92ZSwgYnV0IG90aGVyIGNvbW1hbmQgYW5kIHBvbGl0aWNpYW5zIGludGVyZmVyaW5nLm9yYW5nZWp1bGl1cyAgMjEgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0kgdGhpbmsgdGhpcyBjb250ZXh0IGlzIGltcG9ydGFudC4gCldlIHdhbnQgYSBodXNiYW5kIGFuZCB3aWZlIHVuaXQsIGJvdGggaW50ZWxsaWdlbnQsIHdobyBwbGF5IHRvIGVhY2ggb3RoZXIgc3RyZW5ndGhzIGFuZCBjaGFsbGVuZ2UgZWFjaCBvdGhlciB0byBiZSBjb25zdGFudGx5IGltcHJvdmluZy5UaGF0IGJlaW5nIHNhaWQ7IHdlIGdvIGFib3V0IHRoaW5ncyBhIGxpdHRsZSBkaWZmZXJlbnRseS5SZWdhcmRsZXNzIG9mIGhvdyBJIGZlZWwgYWJvdXQgeW91ciBsaW5lIGFib3V0IGhpcyB3aWxsaW5nbmVzcyB0byBjb21taXQsIGhlcmUgc29tZSBvZiBteSB0aG91Z2h0czpBcyBmb3IgdGhlc2Ugc2lsbHkgZ2lybHMgdHJ5aW5nIHRvIGdldCBpbiBoaXMgcG9ja2V0OiB3aGVuZXZlciB5b3UgYXJlIGZlZWxpbmcgamVhbG91c3ksIHJlbWluZCB5b3Vyc2VsZiB0aGF0IGhlIGlzIHdpdGggeW91IGZvciBhIHJlYXNvbi4gCkxhdGUgaW4gYSBzYXRlbGxpdGUsIGZpcnN0IGhhbmQgYWZ0ZXIgYSBicmVhayBhbmQgb25lIHBsYXllciBoYWRuIG1hZGUgaXQgYmFjayB0byBoaXMgc2VhdCB5ZXQgc28gaGlzIGhhbmQgd2FzIG11Y2tlZCB3aGljaCBpcyBzdGFuZGFyZC4gCkV2ZW4gaW4gc29tZSBvZiB0aGUgcG9vcmVzdCBhcmVhcyBvbiB0aGUgZW50aXJlIGdsb2JlLCB3ZSBhcmUgc2VlaW5nIGEgbW92ZSB0b3dhcmQgYSBjYXNobGVzcyBzb2NpZXR5LiBJbiAyMDE1LCBiYW5rcyBpbiBJbmRpYSBtYWRlIG1ham9yIHByb2dyZXNzIG9uIHRoaXMgZnJvbnQsIGFuZCBpbmNvbWUgdGF4IHJlYmF0ZXMgYXJlIGJlaW5nIGNvbnNpZGVyZWQgYnkgdGhlIGdvdmVybm1lbnQgYXMgYW4gaW5jZW50aXZlICJ0byBlbmNvdXJhZ2UgcGVvcGxlIHRvIG1vdmUgYXdheSBmcm9tIGNhc2ggdHJhbnNhY3Rpb25zLiIKVGhlIGxvdyBzdGFrZXMga2VlcCB0aGUgc2hhcmtzIGF3YXkuIEkgbmV2ZXIgb25jZSB0aG91Z2h0IG9mIGl0IGFzIGdhbWJsaW5nLCBpdCdzIGEgZ2FtZSB3aXRoIGEgc2xpZ2h0IGJvbnVzIGZpbmFuY2lhbCBlbGVtZW50Li4gClRoZXJlIGFyZSBubyByZWFzb25zIHRvIGlnbm9yZSBzdWNoIGFtYXppbmcgb2ZmZXIuIEV2ZXJ5dGhpbmcgaXMgZm9yIGZyZWUuIApKdXN0IHRvIGNvbmZpcm0sIGRvIHlvdSBnZXQgdGhhdCBub3RpZmljYXRpb24gd2hlbiBzdWJtaXR0aW5nIHRoZSBpbml0aWFsIGFwcGxpY2F0aW9uIGZvciB0aGUgZXhhbT8gSSBoYXZlIGEgY29sbGVhZ3VlIHdobyBhdHRlbmRlZCBhIHByZXAgY291cnNlLCBhbmQgaGUgd2FzIHRvbGQgdGhhdCB5b3Ugd291bGQgZmluZCBvdXQgaWYgeW91IGJlaW5nIGF1ZGl0ZWQgd2hlbiB5b3Ugc3VibWl0dGVkIHRoZSBwYXltZW50ICAgYWZ0ZXIgdGhlIGFwcGxpY2F0aW9uIGhhcyBiZWVuIGFwcHJvdmVkLgpFZHVjYXRpb24gaXMgc29tZXRoaW5nIG5vIHNhbmUgcGVyc29uIHNob3VsZCBldmVyIHRydXN0IHRvIHRoZSBnb3Zlcm5tZW50LiAKQWRyaWFuIFNvbG9tb24gYW5kIEVybmllIFNjaGVyZXIgSW4gMjAwNiwgQWRyaWFuIFNvbG9tb24gd2FzIGxpdmluZyBpbiBOb3J0aCBDYXJvbGluYSB3aGVuIGEgYnVzaW5lc3MgdHJpcCBsZWQgaGVyIHRvIGEgY2hhbmNlIGVuY291bnRlciB3aXRoIEVybmllIFNjaGVyZXIuIApUb3V0ZSBjZXR0ZSBpbnRveCBuZSBzdXJ2aXQgcXVlIGdyY2UgIGRlcyBtaWxsaWVycyBkZSBjb3BpL2NvbGwuTm90ZXogZW4gcGFzc2FudCBxdWUgc2kgbGUgcm9pIEZheWFsIGEgY29uZmkgc29uIHNvcnQgIHVuIG1kZWNpbiBmcmFuYWlzIGMnZXN0IG91IHF1J2lsIG5lIGNyb3lhaXQgcGFzICBsYSBtZGVjaW5lIHByb3BodGlxdWUgb3UgcGx1cyB2cmFpc2VtYmxhYmxlbWVudCBlbmNvcmUgcXUnaWwgZW4gYWRtZXR0YWl0IGxlcyBsaW1pdGVzLkplIG4nYWkgcmllbiBjb250cmUgbGVzIG11c3VsbWFucyBxdWkgcmVzcGVjdGVudCBsZXMgcmdsZXMgbW9yYWxlcyBxdWkgcydpbXBvc2VudCAgdG91dCB0cmUgY2l2aWxpcy4gCkhpcyBzdWNjZXNzIGlzIGR1ZSB0byB0aGVpciBzdHJvbmcgcGFydG5lcnNoaXAsIGFuZCBzaGUgaXMgdGhlIGhlYWQgb2YgdGhlaXIgcGhpbGFudGhyb3BpYyBmb3VuZGF0aW9ucy4uIApJdCByZXF1aXJlcyBjb25zdGFudCBncm93dGggaW4gYSBzeXN0ZW0gY29tcHJpc2VkIG9mIGxpbWl0ZWQgcmVzb3VyY2VzLCBtZWFuaW5nIHRoYXQgZ3Jvd3RoIHdpbGwgZW5kLiAKU3RhckZydWl0SWNlQ3JlYW0gIDQgcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ28KMSB3ZWVrIGFnbyArIEJ5IEFuZHJlYSBTaW1ha2lzLCBUaGUgUGxhaW4gRGVhbGVyClNvIEkgZ2l2ZSB0aGUgZ2lybCBhbiBlbmVtYSwgYXNrIGhlciB0byB0cnkgdG8gaG9sZCBpdCBmb3IgMjAgbWlucyBpZiBwb3NzaWJsZSwgdGhlbiBJIGxlYXZlIHRoZSBiZWRzaWRlIHRvIGNoZWNrIG9uIGFub3RoZXIgcGF0aWVudC4gT3V0IG9mIHRoZSBjb3JuZXIgb2YgbXkgZXllLCBJIHNlZSB0aGUgZ2lybCBkb2luZyB0aGUgYnV0dCBjaGVla3MgY2xlbmNoZWQgc3ByaW50IGZvciB0aGUgYmF0aHJvb20sIG1vbSB0cmFpbGluZyBiZWhpbmQuIFRoZW4gSSBoZWFyIHNvbWUgc2hyaWVraW5nIGNvbWluZyBmcm9tIHRoZSBiYXRocm9vbS4gYXMgaXQgdHVybmVkIG91dCwgdGhlIGVuZW1hIHdhcyBlbm9ybW91c2x5IHN1Y2Nlc3NmdWwsIHRoaXMgcGV0aXRlIDEyIHlyIG9sZCBnaXJsIGhhZCBwcm9kdWNlZCBhIHNoaXQgYXMgYmlnIGFzIG15IGFybSwgYW5kIHRoZSBtb20gZnJlYWtlZCBvdXQsIGZpc2hlZCB0aGUgbW9uc3RlciB0dXJkIG91dCBvZiB0aGUgdG9pbGV0IGNoYXNlZCB0aGUgZG9jdG9yIHRocm91Z2ggdGhlIGRlcGFydG1lbnQgaW5zaXN0aW5nIHRoZSBkb2N0b3IgbG9vayBhdCB0aGUgc2l6ZSBvZiBpdCBhbmQgc2NyZWFtaW5nIHRoYXQgdGhpcyBhbmFjb25kYSBsaWtlIHNoaXQgbXVzdCBoYXZlIGNhdXNlZCBpbnRlcm5hbCBkYW1hZ2Ugb3Igc29tZXRoaW5nLiBUaGUgcG9vciBkYXVnaHRlciB3YXMgc29iYmluZyBpbiB0aGUgYmF0aHJvb20gKG5vIHBhaW4sIG1vc3RseSBmcm9tIGVtYmFycmFzc21lbnQpIHRoZSBkb2N0b3IgdHJ5aW5nIHRvIGdldCBhd2F5IGZyb20gbW9tIHRoZSBnaWFudCBzaGl0LCBhbmQgbWUgY2hhc2luZyBtb20gd2l0aCBhbiBlbXB0eSBiZWRwYW4gaW5zaXN0aW5nIHNoZSBwdXQgdGhlIHR1cmQgaW4gdGhlcmUgaW5zdGVhZCBvZiBoZXIgaGFuZHMuCldvdWxkIGJlIGJlc3QgdG8gdHJ5IGFuZCBpbnRlZ3JhdGUgaW4gbXkgcm91dGluZSBmaXJzdCwgYW5kIHdoYXQgd291bGQgYmUgdGhlICJjb3JyZWN0IiBvcmRlcj8KRm9ybSBTYWJhbGVua2EgaW4gU3lkbmV5ClF1YW50IGF1eCBzZWNzLCB0cnMgcmV2aXRhbGlzYW50cywgRGlvc2NvcmlkZSBsZXMgcHJjb25pc2FpdCBlbiBjYXMgZCdobW9wdHlzaWUsIGRlIG1hdXggZGUgZ29yZ2UsIGRlIHZvbWlzc2VtZW50LCBkZSBkeXNlbnRlcmllIGV0IGRlIGRvdWxldXJzIHZzaWNhbGVzLi4gClNpbWlsYXJseSBpbiB0aGUgVVNBLCB0aGUgb2ZmaWNpYWwgY29tbXVuaXN0IHBhcnR5IHdhcyBpbmZhbW91c2x5IHJpZGRsZWQgd2l0aCBDSUEuLiAKTWFueSBnZW5pdXNlcyB3ZXJlIG5vdCBhbHBoYSBodW1hbnMsIHRoZXkgaGFkIG9mdGVuIG1lbnRhbCBhbmQvb3IgcGh5c2ljYWwgaXNzdWVzLi4gCkl0IGJlZW4gYSByZWd1bGFyIHRoZW1lIGV2ZXIgc2luY2UuLiAKSSBtZWFuLCB5b3UncmUgZnJlZSB0byBkbyB3aGF0ZXZlciB5b3Ugd2FudCwgdGhhdCdzIHlvdXIgcmlnaHQuIEJ1dCBHb2QgZm9yYmlkLCBpbWFnaW5lIHlvdSBkaWUgdG9tb3Jyb3cgYW5kIHNvbWVvbmUgaGFzIHRvIGdvIHRocm91Z2ggYWxsIG9mIHlvdXIgcG9zc2Vzc2lvbnMgYXMgcGFydCBvZiB0aGUgZXN0YXRlLiAKU2FsdmFnaW5nIHlvdXIgcmVsYXRpb25zaGlwIGlzIDEgc28gaWYgeW91ciBodXNiYW5kIGNhbm5vdCB1bmRlcnN0YW5kIHdoeSB5b3UgZmVlbCB0aGlzIHdheSAoSSBiZWxpZXZlIHlvdXIgZW1vdGlvbnMgYXJlIGNvbXBsZXRlbHkgdmFsaWQsIGV2ZW4gd2l0aG91dCAicHJvb2YiIHRoYXQgdGhleSBhcmUgbW9yZSB0aGFuIGZyaWVuZHMpIHlvdSByZWFsbHkgaGF2ZSB0byBldmFsdWF0ZSB0aGUgZnV0dXJlIG9mIHlvdXIgcmVsYXRpb25zaGlwLiAKVGhlIGNvdW50cnkgcmV2b2x2ZXMgYXJvdW5kIHdvcmtpbmcgeW91cnNlbGYgdG8gZGVhdGgsIG5vIG9uZSBldmVyIHRhbGtzIGFib3V0IHNpbXBseSBsaXZpbmcgYW5kIGVuam95aW5nIGxpZmUuIElmIHlvdSdyZSBub3Qgd29ya2luZyAxMDAgaG91cnMgYSB3ZWVrIHlvdSdyZSBhIGxhenkgc2FjayBvZiBzaGl0LiAKQm9iYSBoYXRyZWQgZm9yIHRoZSBKZWRpIHdhcyBoaXMgd2Vha25lc3MuIEhlIGJ1aWx0IGEgbGlmZSBhcm91bmQgYmVpbmcgYSBib3VudHkgaHVudGVyIGFuZCB1c2VkIGhpcyBoYXRlIG9mIEplZGkgYXMgdGhlIGZ1ZWwgZm9yIHRoZSBmaXJlIGluIGhpcyBzb3VsLiBCdXQgd2hlbiBoZSBmaW5hbGx5IGdldHMgaGlzIGNoYW5jZSB0byBraWxsIGEgSmVkaSwgQm9iYSBjYW4gYXNzZXNzIHRoZSBtb21lbnQgZGlzcGFzc2lvbmF0ZWx5LiAKSGUgZW5qb3llZCBnb2xmaW5nIGFuZCB3aWxsIGJlIG1pc3NlZCBhdCBwb2tlciBuaWdodHMuIApKdXN0IG9uZSBwcm9ibGVtIHdpdGggdGhpcyBsb2dpYzogVGhlIGdvdmVybm1lbnQgZ2FtZXMgYXJlIGNvbXBsZXRlbHkgdW5mYWlyIHRvIHRoZSBwbGF5ZXIsIGFjY29yZGluZyB0byBnYW1ibGluZyBleHBlcnQgQ2hhcmxlcyBSLiBNb3Vzc2VhdSwgd2hvIHByb3ZpZGVkIG1lIHdpdGggYW4gYW5hbHlzaXMgb2YgdGhlIFBsYXlOb3cgc2l0ZS4KIlNhcmthYXIgd2lsbCB0YWtlIG92ZXIgYWxsIHRoZSBSYWRpbyBNaXJjaGkgc3RhdGlvbnMsIHRha2UgdGhlIHJhZGlvIGpvY2tleXMgaG9zdGFnZSBhbmQgZ2l2ZSB0aGVtIHRhc2tzLCIgc2F5cyBCaGFuZGFyeS4gIlRoaXMgZXhlcmNpc2Ugd2lsbCBpbmNyZWFzZSBpbnRlcmFjdGl2aXR5LCBlc3RhYmxpc2ggU2Fya2FhciBhbmQgdGhlIGNvbmNlcHQgb2YgdGhlIHNob3cuIgpTb2dneWJsb3R0ZXIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnbwpJdCdzIHByZXN1bXB0aXZlIGV2aWRlbmNlIG9mIHZhbGlkIHNlcnZpY2UgKG1lYW5pbmcgaXQncyBub3cgb24gdGhlIGRlZmVuZGFudCB0byBwcm92ZSB0aGF0IHRoZXkgZGlkbid0IHJlY2VpdmUgaXQsIHdoaWNoIGlzIGhhcmQpLiBCdXQgc2VydmljZSBpc3N1ZXMgcmFyZWx5IHJlc3VsdCBpbiBhbnl0aGluZyBhcyBkcmFzdGljIGFzIGEgZGlzbWlzc2FsLCBiZWNhdXNlIGEgbG90IG9mIHRoZSB0aW1lIHlvdSBlbmQgdXAgY29taW5nIHRvIGNvdXJ0IHdoZW4gdGhleSB0cnkgdG8gZW5mb3JjZSB0aGUganVkZ21lbnQgYW5kIGlmIHlvdSBjYW4gcHJvdmUgdGhleSBzaG91bGQgdmFjYXRlIHRoZSBkZWZhdWx0IGp1ZGdtZW50ICh3aGljaCB1c3VhbGx5IHJlcXVpcmVzIHlvdSB0byBzaG93IHRoYXQgeW91IGhhdmUgYSB3aW5uaW5nIGRlZmVuc2Ugb24gdGhlIG1lcml0cyBvZiB0aGUgdW5kZXJseWluZyBsYXdzdWl0KSB0aGVuIHRoZXkganVzdCBzZXJ2ZSB5b3UgdGhlbiBhbmQgdGhlIHdob2xlIHRoaW5nIHN0YXJ0cyBvdmVyLi4gCkhlciBpbWFnZSByZXBsYWNlcyBTaXIgSm9obiBBLiAKSGUgd3JpdHRlbiBmb3IgbnVtZXJvdXMgcHVibGljYXRpb25zIGF0IHRoZSBuYXRpb25hbCwgc3RhdGUgYW5kIGxvY2FsIGxldmVsLCBpbmNsdWRpbmcgbmV3c3BhcGVycywgbWFnYXppbmVzIGFuZCB3ZWJzaXRlcy4gUnVzaCBob2xkcyBhIEJhY2hlbG9yIG9mIEFydHMgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBDYWxpZm9ybmlhLCBTYW4gRGllZ28uLiAKSSBtZWFuLCBob3cgZGFyZSB0aGV5LCBoYXZlbiB0aGV5IGhlYXJkIHNjaG9vbCBpcyBzdXBwb3NlZCB0byBzdWNrPz8uIApCdXQgSSBsb3ZlIHRoZSBzb3VyY2UuIApDb25jbHVzaW9uOiBQb2NrZXQgNidzIGFyZSBtYXRoZW1hdGljYWxseSBzcGVha2luZyBhbHdheXMgYSBiZXR0ZXIgc3RhcnRpbmcgaGFuZC4gKEZ1bGwgQW5zd2VyKS4gClRoZXkgZGVtYW5kZWQsIHZpYSBlbWFpbCwgdGhhdCBoZSBjYWxsIG9mZiBQSXMgdGhhdCBoZSBoYWQgaGlyZWQgdG8gaW52ZXN0aWdhdGUgdGhlIEVucXVpcmVyICh0byBmaW5kIG91dCBob3cgdGhlIEVucXVpcmVyIGhhZCBnb3R0ZW4gaGlzIHRleHQgbWVzc2FnZXMpIGFuZCBzYWlkIHRoYXQgdGhleSBoYWQgYSBudW1iZXIgb2YgcGhvdG9ncmFwaHMgaW4gdGhlaXIgcG9zc2Vzc2lvbiBmcm9tIEJlem9zIHRleHQgbWVzc2FnZXMgd2l0aCBoaXMgbWlzdHJlc3MsIGluY2x1ZGluZyBkaWNrIHBpY3MsIGFuZCBpbnNpbnVhdGVkIHRoYXQgdGhleSB3b3VsZCBvbmx5IHByb21pc2Ugbm90IHRvIHB1Ymxpc2ggdGhvc2UgcGhvdG9zIGlmIGhlIGNvbXBsaWVkIHdpdGggdGhlaXIgZGVtYW5kcy4gCkhpISBUaGF0IGlzIHNvIGV4Y2l0aW5nIGFuZCB5b3Ugd2lsbCBkbyBncmVhdCEgWW91IGRvIG5vdCBuZWVkIHRvIHJ1biBhIGZ1bGwgbWFyYXRob24gYmVmb3JlIHlvdXIgcmFjZS4gMzJLIHNvdW5kcyBwZXJmZWN0IGF0IHR3byB3ZWVrcyBvdXQuIApEZXQgZXIgZW4gaW50ZXJlc3NhbnQgc2FtdGFsZS4gTWl0dCBza3JibGlrayBlciBzZWx2ZmxnZWxpZyBmYXJnZXQgYXYgamVnIHNlbHYgZXIgbWFubiBvZyBmYXIsIG9nIGplZyBtZXJrZXIgbWVnIGF0IGt2aW5uZXIgcnVuZHQgZGV0dGUgdGVtYWV0IGZha3Rpc2sgZnIgbG92IHRpbCAgdnJlIHNraWtrZWxpZyBldGlzayB0dmlsc29tbWUuIElra2UgYWxsZSwgbWVuIGRlIGJsaXIgaWtrZSB1dGZvcmRyZXQgcCBldCBncnVubnN5biBzb20gamVnIG1lbmVyIGVyIGh5a2xlcnNrIG9nIHVldGlzay4gCiJqZmEiIG93bnMgaGlzIGVuY3J5cHRpb24ga2V5cyB0aGF0IGNvcnJlc3BvbmQgdG8gY2FyZHMgNSBhbmQgNiwgYnV0IG5lZWRzIGVhY2ggb3RoZXIgcGxheWVycyBlbmNyeXB0aW9uIGtleXMgYXQgdGhlIHRhYmxlIHRoYXQgY29ycmVzcG9uZCB0byB0aG9zZSBjYXJkcyBzbyBoZSBjYW4gdmlldyBoaXMgcHJpdmF0ZSBjYXJkcywgYnV0IG5vIG9uZSBlbHNlIChhbmQgdmlzYSB2ZXJzYSBmb3IgZWFjaCBwbGF5ZXIpLiAKR29vZCBsdWNrIHdpdGggZGlubmVyLCBoYXZlIGZ1biAoeW91IHdpbGwgZXZlbnR1YWxseSBnZXQgdG8gdGhlIHBvaW50IHdoZXJlIHlvdSByZWFsaXplIGFsY29ob2wgZGlkbid0IG1ha2UgdGhpbmdzIGFzIGZ1biBhcyBpdCBhcHBlYXJlZCB0bykuIApJIGhhdGVkIHRoZSB3YXkgeW91IGZvcmNlZCBtZSB0byBzdGVwIG91dCBvZiBteSBjb21mb3J0IHpvbmUgYW5kIHRha2Ugb24gbW9yZSByZXNwb25zaWJpbGl0eS4gWW91IG1hZGUgbWUgbGVhZCwgd2hlbiBJIHdhcyBjb250ZW50IHRvIGZvbGxvdy4gWW91IHNob3dlZCBtZSB0aGF0IEkgaGF2ZSBhbiBvYmxpZ2F0aW9uIHRvIHNoYXJlIHdoYXQgSSBoYXZlIGxlYXJuZWQgd2l0aCBvdGhlcnMuIApBbHNvLCB0aGlzIGxpc3QgdXNlcyB0aGUgdGVybSAiaVR1bmVzIiB0byByZXByZXNlbnRkaWdpdGFsIHN0b3Jlcy4gCkhvdyBkbyB5b3UgYmVhdCBkYXJrIGhvbGxvdyA5IDI/Ckkgd2lzaCBwcm9zL2dyaW5kZXJzIHRoZXJlIHVuZGVyc3Rvb2QsIHRoYXQgcGVvcGxlIG9uIHZhY2F0aW9uIHdhbnQgdG8gaGF2ZSBmdW4sIGFuZCBkb24ndCB3YW50IHRvIHNpdCBpbiBmdWNraW5nIHNpbGVuY2UuIAogQWxiZXJ0IEVpbnN0ZWluICgxODc5IDE5NTUpV2hhdCBpcyB0aGUgcHVycG9zZSBvZiBsaWZlPyBUbyBiZSB0aGUgZXllcyBhbmQgZWFycyBhbmQgY29uc2NpZW5jZSBvZiB0aGUgY3JlYXRvciBvZiB0aGUgdW5pdmVyc2UuLiAKSWYgYSBtZW1iZXIgaXMgZGlzcnVwdGl2ZSB0byBvdXIgY29tbXVuaXR5IG9yIGRvZXMgbm90IGFiaWRlIHRoZSBydWxlcywgdGhleSB3aWxsIGJlIGJhbm5lZCBmb3IgMzAgZGF5cywgb3IgbG9uZ2VyLiBJZiB0aGUgZGVjaXNpb24gZmVlbHMgdW5qdXN0aWZpZWQgcGxlYXNlIHRhbGsgd2l0aCB0aGUgbW9kcyBhYm91dCBjb250aW51aW5nIHRvIGJlIGFwYXJ0IG9mIG91ciBjb21tdW5pdHkuIAonRXhjcnVjaWF0aW5nJyB0cmlhbCBpbiBjYXNlIHRoYXQgbGFzdGVkIDE3IHllYXJzIGVtYmxlbWF0aWMgb2YgdHJvdWJsZXMgcGxhZ3VpbmcgZmFtaWx5IGNvdXJ0c1doYXQgeW91IG5lZWQgdG8ga25vdyBpZiB5b3UgYXJlIGNvbnNpZGVyaW5nIGdldHRpbmcgYSBkaXZvcmNlIGluIDIwMTknSSd2ZSBzZWVuIHBlb3BsZSBjbGVhbmVkIG91dCc6IERpdm9yY2UgbGF0ZXIgaW4gbGlmZSBjb21lcyB3aXRoIGl0cyBvd24gc3BlY2lhbCBzZXQgb2YgcHJvYmxlbXNEaXZvcmNlIGlzIG5ldmVyIGVhc3kgYW5kIHlvdXIgaGVhcnQgbWF5IGJlIGJyb2tlbiwgYnV0IHRoYXQgZG9lc24gbWVhbiB5b3VyIHdhbGxldCBuZWVkcyB0byBiZSB0b29UaGF0IGlzIHByZWNpc2VseSB3aGF0IGhhcHBlbmVkIGluIGEgcmVjZW50IE9udGFyaW8gY2FzZSwgaW4gd2hpY2ggdGhlIGlzc3VlcyBhcmlzaW5nIGZyb20gdGhlIHNlcGFyYXRpb24gb2YgYSBjb3VwbGUgd2VyZSByZXNvbHZlZCBhZnRlciAxNyB5ZWFycyBvZiBsaXRpZ2F0aW9uLiBJbiB0aGF0IGNhc2UsIHRoZSB3aWZlIHJlcHJlc2VudGVkIGhlcnNlbGYuCidTb25nIG9mIHRoZSBTZWEnIFNlY3VyZXMgVUsgSXJlbGFuZCBEaXN0cmlidXRpb24gRGVhbApBcyBhIHJlc3VsdCwgcGFyZW50cyBzb21ldGltZXMgcmVhY3Qgc3Ryb25nbHkgdG8gc3R1ZGllcywgYXJ0aWNsZXMsIGV0Yy4gCkFsc28gaXMgdGhlcmUgSW5kaWFuL3ZlZ2V0YXJpYW4gZm9vZCBhdmFpbGFibGUgaW4gdGhlIHJlc29ydCBvciBuZWFyYnlNYXIgNCBUaGlzIHBsYWNlIGlzIG9uIHRoZSBiZWFjaCBzbyBqdXN0IGZldyBzdGVwcyBhbmQgdGhlcmUgeW91IGFyZSAgb24gdGhlIGJlYWNoLiAKUm95IEhhcnBlciB1CkknbSBzb3JyeSB5b3UncmUgZ29pbmcgdGhyb3VnaCB0aGlzLCBidXQgaXQgYWN0dWFsbHkgc291bmRzIGV4YWN0bHkgbGlrZSBvbmUgb2YgbXkgcGFzdCByZWxhdGlvbnNoaXBzLiAKQSBzcGVjaWFsIHdvcmQgYWJvdXQgYWR2ZXJ0aXNpbmc6IEFzIHRoZSBudW1iZXIgb2Ygc3Vic2NyaWJlcnMgcmlzZSwgdGhlcmUgd2lsbCBpbmV2aXRhYmx5IGJlIHRoZSB1cmdlIGZvciBzb21lIHRvIGFkdmVydGlzZSB0aGVpciBzZXJ2aWNlcy4gV2hpbGUgYSBtZWFuaW5nZnVsIGFuZCB2ZXJpZmllZCByZWZlcnJhbCBuZXR3b3JrIChmb3IgYm90aCBhdHRvcm5leXMgYW5kIGxpdGlnYXRpb24vYnVzaW5lc3Mgc2VydmljZXMpIHdpbGwgaG9wZWZ1bGx5IGJlIGRldmVsb3BlZCBpbiB0aGUgZnV0dXJlLCBkaXJlY3RseSBvciB0YWNpdGx5IGFkdmVydGlzaW5nIHlvdXIgc2VydmljZXMgaW4gcG9zdHMgaXMgbm90IGFsbG93ZWQuIFRoYW5rcyBmb3IgaGVscGluZyB0byBrZWVwIC9yL2xhd2Zpcm0gYXMgcmVsZXZhbnQsIHVzZWZ1bCBhbmQgc3BhbSBmcmVlIGFzIHBvc3NpYmxlLgpEaWNrIGhhZCBhIGhpZ2hseSBzdWNjZXNzZnVsIHByYWN0aWNlLCBkaXN0aW5ndWlzaGVkIGNhcmVlciBhbmQgaGFkIG1hbnkgb3V0c3RhbmRpbmcgcGVyc29uYWwgYWNjb21wbGlzaG1lbnRzLiBIZSBwcm92aWRlZCBsZWdhbCBjb3Vuc2VsIHRvIExhenlib3ksIENLQ08gVFYsIENhbmFkYSBQb3N0LCBFbGVjdHJvaG9tZSBhbmQgQ1RWLiBIZSBzcGVjaWFsaXplZCBpbiBidXNpbmVzcywgc2VjdXJpdHkgYW5kIGxhYm91ciBsYXcuIApEcmFnZ2VyIGhpcmVkIEtlbiBLYXdhc2hpbWEgdG8gcGxheSBoYXJtb25pY2EgZm9yIGhpbSwgZXhwbGFpbnMgSGFycGRvZyBCcm93bi4gU2FpZCBrbm93LCBJIGNhbiBwcm9ub3VuY2UgeW91ciBsYXN0IG5hbWUgc28gSSBnb25uYSBnaXZlIHlvdSBhIG5pY2tuYW1lLiAKU3RhZmYgaGF2ZSBiZWVuIGNvb3JkaW5hdGluZyB3aXRoIGEgcmVzaWRlbnQgbGVhZGVyc2hpcCBjb21taXR0ZWUsIHRoZSBtZW1iZXJzIG9mIHdoaWNoIHJlcHJlc2VudCBkaXN0cmljdHMgd2l0aGluIHRoZSBjb21tdW5pdHkgYW5kIHBhc3MgYWxvbmcgaW5mb3JtYXRpb24gZnJvbSByZWd1bGFyIG1lZXRpbmdzIHdpdGggY2l0eSBzdGFmZi4KIkhlIGlzIHZlcnkgc21hcnQgYW5kIGluc2lnaHRmdWwgLi4gYnV0IHRoZSBtZWRpYSBvdXRsZXQgdGhhdCBtYXkgaGlyZSBoaW0gaGFzIHRvIG1ha2Ugc3VyZSB0aGVyZSBhcmUgbm8gbW9yZSBlbWJhcnJhc3NpbmcgbW9tZW50cywiIHNhaWQgRGVtb2NyYXRpYyBjb25zdWx0YW50IEdlb3JnZSBBcnp0LiAiQ2FuIHlvdSB0cnVzdCBoaXMgd29yZCB0aGF0IGhlJ3MgT0sgYW5kIGhhcyBub3QgZG9uZSBhbnl0aGluZyBlbHNlPyIKVGhpcyBpcyBhIGxpdHRsZSBiaXQgbW9yZSBpbiBkZXB0aCBpbmZvIGFuZCBJIGhhdmVuIHByZXNlbnRlZCBpdCB2ZXJ5IHdlbGwsIGJ1dCBJIGp1c3Qgd2FudGVkIHRvIG1ha2UgeW91IHRoaW5rIGEgbGl0dGxlIG1vcmUgYWJvdXQgdGhlIHZhbHVlIG9mIFExMCB2cyAzMy4gCk1vYmIgaXMgdXN1YWxseSA4MC4wMCBDYWQgZm9yIGJvdHRvbS90b3AgY29tYm8uIApTYW1zdW5nIEc2MDAgcmV2aWV3CkhlYXJ0bGVzcyBjeWNsaXN0IHNob290cyBpbm5vY2VudCBiYWJ5IGJveSB0byB0YWtlIGhpcyBwYXJraW5nIHNwYWNlIGFuZCB0dXJuIGl0IGludG8gYW5vdGhlciBkYW5nZXJvdXMsIGNvbmZ1c2luZyBiaWtlIGxhbmUuIFBvbGljZSBzb3VyY2VzIGNvbmZpcm0gaXQgd2lsbCBkZXN0cm95IHNtYWxsIGJ1c2luZXNzZXMgYW5kIGNyZWF0ZSB0cmFmZmljIGphbXMuClJlY2VudGx5LCB0aGUgY2FzaW5vcyBzdGFydGVkIGlzc3VpbmcgY29tbWVtb3JhdGl2ZSBjaGlwcyBmb3IgY2VydGFpbiBldmVudHMuIFRoZSBNR00gR3JhbmQgcHV0IG91dCBhIGNoaXAgZm9yIHRoZSBHZW9yZ2UgRm9yZW1hbiBmaWdodCwgdGhlIFRyb3BpY2FuYSBpc3N1ZWQgb25lIGZvciB0aGUgS2VudHVja3kgRGVyYnksIGFuZCBDYWVzYXJzIFBhbGFjZSBjZWxlYnJhdGVkIEdlb3JnZSBCdXJucyBodW5kcmVkdGggYmlydGhkYXkgd2l0aCBvbmUuIApFRElUOiBJbW1hIGdpdmUgdGhpcyBhIHJlc3QsIHlvdSB0aGUgbW9kLCBkbyB3aGF0IHlvdSB0aGluayBpcyBiZXN0IGZvciB0aGlzIHN1YnJlZGRpdC4gSSB3YXMganVzdCBhIGJpdCBjb25jZXJuZWQgYnV0IGl0IGZpbmUsIG5vdCByZWFsbHkgYW55b25lIGZhdWx0LgpUaGlzIGFydGljbGUgaGFzIGFsc28gYmVlbiB2aWV3ZWQgMzg2LDU5OSB0aW1lcy4uIApObyBidXQgd2hhdCBpIHNheWluZyBpcyB0aGF0IHRoZXJlIGFyZSBodW1hbmUgd2F5cyB0byBraWxsLCBhbmltYWxzLgpBcXVhIHJlZ2lhIChMYXRpbiwgbGl0LiAicm95YWwgd2F0ZXIiKSwgYXF1YSByZWdpcyAoTGF0aW4sIGxpdC4gCldoZXJlYXMgRXJuaWUgR3J1bmZlbGQgaGFzIGJlZW4gdGhlIEdNIG9mIHRoZSBXaXphcmRzIGZvciAxNSB5ZWFycyBub3cgYW5kIGRvZXNuIGhhdmUgYW55dGhpbmcgdG8gc2hvdyBmb3IgaXQuSSwgYW5kIG1hbnkgcGVvcGxlIG9uIHRoaXMgc3ViLCBmaXJtbHkgYmVsaWV2ZSB0aGF0IG1lYW5pbmdmdWwgYW5kIGxhc3RpbmcgY2hhbmdlIGlzIG5vdCBnb2luZyB0byBjb21lIGZvciB0aGUgdGVhbSB1bnRpbCBMZW9uc2lzIG11c3RlcnMgdXAgdGhlIGNvdXJhZ2UgdG8gbGV0IEdydW5mZWxkIGdvOyBidXQgaXQgZG9lc24gc2VlbSBsaWtlIHRoYXQgZ29pbmcgdG8gaGFwcGVuIGFueXRpbWUgc29vbi4gSXQgbm90IHNvbWV0aGluZyB3ZSBwYXJ0aWN1bGFybHkgd2FudCBidXQgbW9yZSBvZiBhIHNlcnZpY2UgdG8gdGhlIHZhbHVlcyB3ZSBob2xkIGRlYXIgdG8gdXMuV2h5IGRvZXMgQ2hpbmEgaGF2ZSBzbyBtYW55IFdhcnJpb3JzIGFuZC9vciBMZWJyb24gZmFucz8gQmVjYXVzZSB0aGV5IGFyZSBjb25zaXN0ZW50bHkgc3VjY2Vzc2Z1bC4gCldlbm4gd2lyIGRpZXNlIG9kZXIgamVuZSBBcnpuZWltaXR0ZWwgenVyIEhlaWx1bmcgdW5zZXJlciBLcmFua2hlaXRlbiBlaW5uZWhtZW4sIG1hY2hlbiB3aXIgdW5zIHJlY2h0IHNlbHRlbiBHZWRhbmtlbiBkYXJiZXIsIHdvcmF1cyBzaWUgYmVzdGVoZW4sIHdhcyBzaWUgZW50aGFsdGVuLCB3aWUgc2llIGhlcmdlc3RlbGx0IHdlcmRlbi4gRGllIHBoYXJtYXpldXRpc2NoZSBJbmR1c3RyaWUgaXN0IGVpbiByaWVzaWdlcywgYXVmIFVtc2F0eiBhdXNnZXJpY2h0ZXRlcyBHZXNjaGZ0LiBJaHJlIGdlc2FtdGUgVHRpZ2tlaXQgaXN0IGF1ZiBkaWUgRW50d2lja2x1bmcgbmV1ZXIgTWVkaWthbWVudGUgYXVzZ2VyaWNodGV0ICh1bmQgZGVtenVmb2xnZSBhdWYgaW1tZXIgZ3JlcmUgR2V3aW5uZSksIGFscyBhdWYgZGllIEhlaWx1bmcgdm9uIE1lbnNjaGVuLiAKSXZlIGdvdCBteSBkeW5hbWljcyB0aGlzIHdlZWsgc3RpbGwsIGJ1dCBpIG1heSBlbmQgdXAgZG9nZ2luZyBvbmUgb2YgdGhlbSBiZWNhdXNlIGkgY2FuIG9ubHkgZ2V0IGluIHRvbW9ycm93IGFuZCB0aHVycyBmb3IgdGhlIHJlc3Qgb2YgdGhlIHdlZWsuIFRoZW4gaW0gZGVsb2FkaW5nLCB3aGljaCBpIGFtIGFic29sdXRlbHkgc3Rva2VkIGZvci4KVGhlIHByb2JsZW0gaXMgSSByZWNlbnRseSBsb3N0IGEgY29uc2lkZXJhYmxlIGFtb3VudCBvZiB3ZWlnaHQgYW5kIGFueXRoaW5nIG5pY2UgdGhhdCBJIGhhdmUgaXMgdG9vIGJpZyBmb3IgbWUgbm93LiBNeSBjb25jZXJuIGhhcyBiZWVuIG1hdGNoaW5nIHdoYXQgbXkgd2lmZSBpcyB3ZWFyaW5nLiBEb2VzIHRoZSBmYWN0IHRoYXQgaGVyIGRyZXNzIGlzIGJsYWNrIG5vdyBsaW1pdCBtZSB0byBibGFjayBhbmQgd2hpdGU/IFdoYXQgYWJvdXQgZ3JleT8gSSBhbHNvIHJlYWxseSBsaWtlIHBpbmsgb3hmb3JkIHNoaXJ0cy4gQWxzbyBsaWtlIHdvb2wgdmVzdHMuIEJ1dCBwdXR0aW5nIGFsbCB0aGlzIHRvZ2V0aGVyIGFuZCBtYWtpbmcgaXQgbG9vayBnb29kIGlzIGEgcHV6emxlIEkgbm90IGFibGUgdG8gc29sdmUuClNXIGhhZCBldmVuIHRleHRlZCBmcmllbmRzIHRoYXQgQ1cgaGFkIGNoYW5nZWQuIApJIGRpZG4gd2F0Y2ggdGhlIGVudGlyZSBoYW5kIHBsYXkgYnV0LCBpbSBhc3N1bWluZyBoZXJlIHdoYXQgaGFwcGVuZWQgcHJlIGZsb3AuIApBYm91dCBtYXRzLCBzb21lIGl0ZW1zIGxpa2UgZ2hvc3QgaXJvbiBvcmUgdG9vayBtZSBhcm91bmQgMiB3ZWVrcyB0byBzZWxsIGFyb3VuZCBhIGZ1bGwgc3RhY2sgKGluIHNtYWxsIHNpemVzKSBvZiB0aGVtIGJlaW5nIHRoZSBvbmx5IG9uZSBzZWxsaW5nIGl0IGFuZCB0aGlzIGJlaGF2aW9yIG1ha2UgYSB2aWNpb3VzIGNpcmNsZSwgbm9ib2R5IHNlbGwgb2xkIG1hdHMgYmVjYXVzZSBub2JvZHkgYnV5IHRoZW0uIEkgcG9zdCBzb21lIG1hdHMgYW5kIGdldCBkZWNlbnQgcHJvZml0IGJlY2F1c2UgYWdhaW4sIEkgdGhlIG9ubHkgb25lIHNlbGxpbmcgc28gaXQgaGFyZCB0byBsb3NlIGhlcmUsIGlzbiBtdWNoIGJ1dCA1MGcgaGVyZSBhbmQgdGhlcmUgYWRkIHVwLgpXaGVuIGl0IGNvbWVzIGRvd24gdG8gTkwgSG9sZCdlbSwgcGVvcGxlIGFyZSBzbyB0ZW50YXRpdmUgYWJvdXQgZ29pbmcgYWxsIGluIGZvciB0aGUgZ2FtZS4gVW5mb3J0dW5hdGVseSwgdGhpcyBpcyBkdWUgdG8gbGFjayBvZiBleHBlcmllbmNlLCBsYWNrIG9mIGtub3dsZWRnZSwgYW5kIGxhY2sgb2YgY29uZmlkZW5jZS4gCkhhbGlzdGVyIGhhcyBtb21lbnRzIG9mIGx1Y2lkaXR5IHdoZXJlIGhlIGNhbiBzZWUgaXRzIHBsYW4gdG8gYmFzaWNhbGx5IHR1cm4gZXZlcnl0aGluZyBpbnRvIHVuZGVybW91bnRhaW4gYW5kIGhlIHVuZGVyc3RhbmRzIHRoYXQgdG8gc3RvcCBpdCBoZSBuZWVkcyB0byBkaWUgcGVybWFuZW50bHkgc28gdGhlIGtub3QgY2FuIGJlIHNoZWFyZWQgb2ZmIGhpcyBkZXBhcnRpbmcgc291bCBhbmQgZGVzdHJveWVkLi4gClNpdHRpbmcgYXQgYSB0YWJsZSBmb3IgYW55d2hlcmUgZnJvbSBhIGNvdXBsZSBob3VycyB0byAzMSBob3VycyAobXkgbG9uZ2VzdCBzZXNzaW9uKSBpc24ndCBncmVhdCBleGVyY2lzZSwgc28gaWYgSSBhdGUgdGhhdCBzdHVmZiwgSSB3b3VsZCBnZXQgaml0dGVyeSwgc2xlZXB5LCBvciBsb3NlIGZvY3VzLiBNeSBtYWluIHNuYWNrcyBvZiBjaG9pY2UgZHVyaW5nIGdhbWUgdGltZSB3ZXJlIHNhbGFkcy4iIEFuZCwgb2YgY291cnNlLCBhbGNvaG9sIHdhcyBjb21wbGV0ZWx5IG9mZiBsaW1pdHMuLiAKSG9wZSB0aGlzIGhlbHBzIS4gCkkgZG9uIHRoaW5rIHRoaXMgdGhyZWFkIHdhcyBtZWFudCBqdXN0IGFzIGEgInNoaXQgb24gQmF5bG9yIiB0aHJlYWQsIGJ1dCBpbnN0ZWFkIGNvbXBhcmUgQmF5bG9yIHRvIG90aGVyIHBsYXlvZmYgY29udGVuZGVycy4gWWVzLCB0aGUgdGVhbXMgeW91IG1lbnRpb25lZCBhbGwgb25seSBwbGF5IDggUDUgdGVhbXMsIGJ1dCBub25lIG9mIHRoZW0gd2lsbCBjb21lIGNsb3NlIHRvIHBsYXlvZmYgdGFsa3MuIFRoZSBvbmx5IHRlYW0gdGhhdCB5b3UgbWVudGlvbmVkIHRoYXQgY291bGQgYmUgaW4gdGhlIHBsYXlvZmZzIGlzIEFsYWJhbWEgd2l0aCA5IFA1IGdhbWVzIGFuZCB0aGV5IG9uIHRoZSBvdXRzaWRlIGxvb2tpbmcgaW4gYW5kIGhvcGluZyBmb3IgdGVhbXMgdG8gZmFsbCBoYXJkLgpTbyB0aGUgZW5naW5lcyBbYmVjYW1lXSB3YXkgbGVzcyBkZXRhaWxlZCwgeW91IGdvdCBtYXliZSBhIGRvemVuIHBhcnRzIHRvdGFsLiAKU28gaXMgZXZlcnkgb3RoZXIgaW52ZXN0bWVudCBpbiB0aGUgd29ybGQgaXRzIGZvciBldmVyeW9uZSB0byBpbnZlc3QgaW4uIEJ1dCBiaXRjb2luIHdhcyBtYWRlIGZvciBwZW9wbGUgdGhhdCBkaWRuIHdhbnQgdG8gZGVhbCB3aXRoIGJhbmtlcnMgYW5kIGNvcnJ1cHQgcGVvcGxlLiBOb3cgaWYgdGhleSBkbyBtYWtlIGFuIGV0ZiB0aGUgY29ycnVwdCBhcmUgZ29pbmcgdG8gaGF2ZSBpdCBhbmQgdGhleSBjYW4gcHVtcCBhbmQgZHVtcCBpdCBhbmQgY29udHJvbCB0aGUgcHJpY2UgY2F1c2UgdGhleSB3aWxsIGhhdmUgYSBtYWpvciBzaGFyZSBvZiBpdCBpbiB0aGUgZXRmLiBUaGF0IGlzIHRoZSBwcm9ibGVtIHdpdGggYml0Y29pbiBub3QgbXVjaCBvZiBpdCB3YXMgbWFkZSBzbyBpdHMgZWFzeSB0byBtYW5pcHVsYXRlIHRoZSBwcmljZSBvZiBpdCBmcm9tIDIwayBkb3duIHRvIDE1MCBkb2xsYXJzIGEgY29pbi4gVGhpcyBpcyBwYXJ0IG9mIHdoeSBiaXRjb2luIGRvZXNuIHdvcmsuIEFuZCBpdHMgaGlnaCB0cmFuc2FjdGlvbiBmZWVzIGlzIGEgZmFpbGVkIHdheSB0byBkbyB0cmFuc2FjdGlvbnMuCk9uIHRoZSBvdGhlciBoYW5kLiBJIG1ha2UgJDEyIGFuIGhvdXIgZm9yIGEgZnVsbCB0aW1lIGpvYiBtYW51ZmFjdHVyaW5nIDNEIHByaW50ZXJzLiAKSXQgbGl0ZXJhbGx5IG9ubHkgd2hlbiB3ZSBnbyBvdXQgc29tZXdoZXJlLiBJZiBzb21ldGhpbmcgc2NhbnMgYXMgYmVpbmcgJDAuMDUgbW9yZSB0aGFuIGl0IHNob3VsZCwgb3IgaWYgdGhlIGZvb2QgaXMgc2xpZ2h0bHkgd3JvbmcgKGFuZCBvZiBjb3Vyc2Ugc2hlIGdpdmVzIHRoZSBtb3N0IGltcG9zc2libGUgb3JkZXJzKSwgc2hlIHN0YXJ0cyBzY3JlYW1pbmcgYXQgdGhlIHBvb3IgY2FzaGllcnMgYW5kIHdhaXRlcnMuIFNoZSBhbHNvIGJlbGlldmVzIHRoYXQgInRpcHMgaGF2ZSB0byBiZSBlYXJuZWQiIGFuZCB3aWxsIGdvIG91dCBvZiBoZXIgd2F5IHRvIGZpbmQgYSByZWFzb24gdG8gbm90IHRpcCBzb21lb25lLi4gClBsZWFzZSByZWdpc3RlciB5b3VyIGludGVyZXN0IGJ5IGNvbnRhY3RpbmcgRnJleWEgTHVpY2sgb24gNjU4NCA2NzY1LiAKU29tZSB3ZWVrcyBJIHdvcmsgMTAwKyBob3VycyBpbiBhIHdlZWsuIFNvbWUgd2Vla3MgSSBkaWQgbm90aGluZyBidXQgcGxheSBFdmUgT25saW5lLiAKQWx0aG91Z2ggSSBkaWRuJ3QgaGF2ZSBhIHByb2JsZW0gd2l0aCBzcGVlZCBvciBhY2N1cmFjeSwgbXkgdG9uZSBqdXN0IHN1Y2tlZC4gU28gSSBiZWdhbiB0byBwbGF5IHNheG9waG9uZSBpbnN0ZWFkLCBhbmQgcGlja2VkIGl0IHVwIHByZXR0eSBxdWlja2x5LiAKIlJ1bGVzIGZvciBXaW5uZXJzIChIb3cgdG8gd2luIG1vcmUpIiB3aXRoIGFkdmljZSBzdWNoIGFzICJHZXQgaW4gZmlyc3QgYmxvdyBvbiBhcnJpdmluZyBob21lIGJ5IGFkdmlzaW5nIHdpZmUgb2YgdGhlIHByZSBjYXJpb3VzIGNvbmRpdGlvbiBvZiB0aGUgU0lDSyBGUklFTkQiCkJ1dCBJIGZlZWwgYmV0dGVyIGFuZCBzdHJvbmdlciBhbHJlYWR5LCBub3cgdGhhdCBJIGFja25vd2xlZGdlZCB0aGF0IEkgYSBzdXJ2aXZvciB0b28uCkl0IGNvdWxkLCBob3dldmVyLCBjb21lIGludG8gcGxheSBhdCBzb21lIGZ1dHVyZSBwb2ludCBpbiB0aW1lLCBwb3RlbnRpYWxseSB0aHJvd2luZyBTTkMgYSBsaWZlbGluZS4gCkFuZCBwZW9wbGUgc3RpbGwgbGlrZSBpdCEgSXQncyByZWFsbHkgYmVhdXRpZnVsLCBhbmQgaXQncyB2ZXJ5IGhlYWxpbmcuIApOciBkZXIgYW52ZW5kZXMgaSBya2tlZmxnZSwgcHJvZmZlciBob3ZlZCwgYW5zaWd0IG9nIGpuZSBrbGFyZXN0ZSBhbmdpdmVsc2UgYWYgaG9sZG5pbmdlcm5lIHRpbCBhbmRyZSBtZW5uZXNrZXIuIApXaGF0IGRvZXMgdGhpcyBtZWFuIGZvciBQaGlsIEl2ZXk/QW5hbHlzaXMgYnkgSm9obiBIYW5kLCBCQkMgTmV3cwpUaGUgYmV0dGVyIHBsYXllciBpbiBIUyB3aW5zIG9ubHkgYWJvdXQgNjUlIG9mIHRoZSB0aW1lLiBUaGUgZ2FtZSBpcyBpbmZsdWVuY2VkIGJ5IGN1cnZlL3JuZyBtb3JlIHRoYW4gaW5kaXZpZHVhbCBza2lsbC4KTm90aGluZyB0byBkbyB3aXRoICJ3YW50aW5nIHRvIHNlcnZlIHlvdSIgcHNldWRvc2NpZW5jZSBidWxsc2hpdC4gV2hlbiBkb2dzIGRvIHdoYXQgeW91IGFzaywgdGhleSBnZXQgc29tZXRoaW5nIG91dCBvZiBpdCwgZXZlbiBpZiB0aGF0J3MgYWZmZWN0aW9uLiBUaGUgYWZmZWN0aW9uIGlzIHJlaW5mb3JjaW5nIHRoZSBiZWhhdmlvciBzbyB0aGV5IGRvIHRoZSByZXF1ZXN0ZWQgYmVoYXZpb3IgbW9yZS4gCklmIHlvdSB3YW50IHRvIGxlYXJuIGFueSBvdGhlciBuZXcgc2tpbGwgbGlrZSBmb290YmFsbCwgY29va2luZyBvciBjcmFmdGluZywgeW91IGJlZ2luIGJ5IG9ic2VydmluZyBvdGhlcnMuIApGb3IgbW9yZSBpbmZvcm1hdGlvbiBhYm91dCBwb2tlciB0b3VybmFtZW50cyBhbmQgb3RoZXIgdmVudWVzIHRvIHBsYXkgcG9rZXIsIHRyeSB0aGUgZm9sbG93aW5nIGxpbmtzOgpUaGlzIGlzIGZ1Y2tpbmcgaGlsYXJpb3VzIHRvIG1lLiBTbyB0aGUgTUFJTiB0aGluZyB0aGF0IEFMTCBvZ3JhbmlzbXMgb24gdGhpcyBhbmQgYW55IG90aGVyIHBsYW5ldCBhcmUgc3VwcG9zZWQgdG8gZG8sIHdoaWNoIGlzIHJlcHJvZHVjdGlvbiwgaXMgc29tZWhvdyAiYmFkIiBvciAidW5uZWNlc3NhcnkiIHRvIHlvdSBwZW9wbGU/IExpdGVyYWxseSB0aGUgb25seSByZWFzb24geW91IGFsaXZlIHJpZ2h0IG5vdyBpcyBiZWNhdXNlIGdlbmVyYXRpb25zIG9mIHlvdXIgYW5jZXN0b3JzIGRpZCB0aGF0ICJtb3N0IGJhc2ljIiB0aGluZy4gCldoeT8gU2ltcGx5IGJlY2F1c2UgTGEgVGVuZSBzdHVmZiB3YXMgY29vbC4gVGhlIG1ham9yaXR5IG9mIExhIFRlbmUgb2JqZWN0cyBkaXNjb3ZlcmVkIGFyZW4geW91ciBldmVyeWRheSBncnVlbCBib3dscyBvciB0YWJsZXdhcmU7IHRoZXkgbXVjaCBtb3JlIG9mdGVuIG9iamVjdHMgb2YgaGlnaCBzdGF0dXMgc3VjaCBhcyBzd29yZHMsIHNoaWVsZHMsIGNhdWxkcm9ucywgamV3ZWxyeSwgZmxlc2ggaG9va3MgKGFzc29jaWF0ZWQgd2l0aCBmZWFzdGluZykgb3IgbWlycm9ycy4gCkRvbnQgbGlzdGVuIHRvIG1lIHRob3VnaCBwZW9wbGUgSSBqdXN0IGJhcmxleSBoYW5naW5nIG9uIGF0IDIwME5MLiBJIGp1c3QgdHJ5aW5nIG15IGJlc3QgdG8gcmVhc29uLyByZWNhbGwgbGVzc29ucyBmcm9tIGJldHRlciBwbGF5ZXJzLiBJIHByb2JhYmx5IGdvaW5nIGEgbGl0dGxlIHdpZGVyLCBidXQgbm90IG11Y2guIEkgdGhpbmsgYXQgbGVhc3QgdGhlIHN1aXRlZCBicm9hZHdheXMgbGlrZSBLVCwgUVQsIGFuZCBKVCxzaG91bGQgYmUgaW4gdGhlcmUuIE1heWJlIGFzIGxvdyBhcyA4OCBvbiB0aGUgUFAgc3BlY3RydW0uIEkgbWFraW5nIG15IHJhaXNlIHByZXR0eSBiaWcgdG9vLiBJZiB0aGlzIGlzIDEvMiBsaXZlIGFuZCB0aGVyZXMgMyBsaW1wcyBhbmQgSSBpbiB0aGUgQkIgSSBnb2luZyB0byAxOCAyMC4gUG9zdGZsb3AgSSBkb250IHRoaW5rIHRoaXMgaXMgYSBzaXR1YXRpb24gd2hlcmUgeW91IGRvbnQgQ2JldCBldmVyLiBJIHdvdWxkIG9ubHkgYmV0IHJlYWxseSBoaWdoIGVxdWl0eSBoYW5kcy4gQmFzaWNhbGx5IEkgd291bGQgYmV0IHRvcCBwYWlyIHNlY29uZCBraWNrZXIgb3IgYmV0dGVyIGFuZCA4IG91dCBkcmF3cyBvciBiZXR0ZXIgYXMgYmx1ZmZzLiBIYW5kcyBsaWtlIGd1dCBzaG90cyB0aGF0IEkgd291bGQgYmx1ZmYgd2l0aCBhIGxvdCBoZWFkcyB1cCB3b3VsZCBubyBsb25nZXIgbWFrZSB0aGUgY3V0IG11bHRpd2F5KHVubGVzcyBtYXliZSBpdCB3YXMgYSBndXRzaG90IGFuZCB0d28gb3ZlcmNhcmRzIGxpa2UgS1Egb24gVDkycikuClNlZSB0aGVtIGFzIGhpZ2hseSBjb21wZXRlbnQgYmVjYXVzZSB0aGV5IHNlZSBtZSB0aGF0IHdheS4gCkFzIHRoZSBmaXJlIGJ1cm5lZCBvdXQgb2YgY29udHJvbCwgZmxhbWVzIHNob3Qgb3V0IG9mIHdpbmRvd3MgYW5kIGEgaHVnZSBwbHVtZSBvZiBzbW9rZSBkcmlmdGVkIGludG8gdGhlIHNreS4KQWxzbyBtYWtlIHN1cmUgeW91IHNwZWNpZnkgd2hvIGdldHMgdG8gY2xhaW0gdGhlIGtpZCBvbiB0aGUgdGF4ZXMsIGlmIGl0IGlzbid0IGFscmVhZHkgaW4geW91ciBDTy4gSWYgeW91J3JlIHBheWluZyBhIGxvdCBtb3JlIGluIHN1cHBvcnQsIHlvdSBzaG91bGQgYXQgbGVhc3QgZ2V0IGEgbGl0dGxlIGhlbHAuLiAKSSBjYW4gdG90YWxseSBzZWUgOSB0cmF2ZWxsaW5nIGFyb3VuZCBmb3IgaHVuZHJlZHMgb2YgeWVhcnMgcmVmdXNpbmcgdG8gc2VlIGhpbXNlbGYsIHVudGlsIGZpbmFsbHkgZmVlbGluZyBjb25maWRlbnQgdGhhdCBtYXliZSBoZSBzYXZlZCBlbm91Z2ggcGVvcGxlIHRvIG1ha2UgdXAgZm9yIHRoZSBsaXZlcyBoZSB0b29rIHRoYXQgZGF5IGFuZCBlYXJuZWQgaGlzIG9sZCBsaWZlIGJhY2suIApJdCByaXNreSwgYnV0IHRoYXQgU05LIDMgY29tYm8gaXMgcGltcC4gClNvbSBqYWcgbGFuc2VyYXIgZW4gZ3JhdGlzIHRpZG5pbmcgaSBlbiBsaXRlbiBzdGFkIGkgRmxvcmlkYSwgdmlsbGUgamFnIHZhcmEgcyBwaGl0dGlnIHNvbSBtamxpZ3Qgc2FtdGlkaWd0IHNvbSBkZSBrYW4gZ2Ugdmlzc2EgaW5uZWhsbCBzb20gciBpbnRyZXNzYW50IG9jaCB2bHNrcml2ZW4uIERpbiB3ZWJicGxhdHMgaGFyIGFsbGEgdmFyaWFibGVyIGkgbWl4ZW4uIApJIGxvb2tlZCBhdCB0aGUgY29udHJvbCBwYW5lbCwgYW5kIHdhcyB2ZXJ5IGNvbmZ1c2VkLiBJdCB3YXMgY2x1dHRlcmVkIHdpdGggY29uZnVzaW5nIHN0dWZmLiBJIGhhZCBubyBpZGVhIHdoYXQgdGhlIGxpa2UsIHRlbXBvcmFyeSBtb29kIHRoaW5nIHdhcywgYW5kIEkgc3BlbnQgbG9hZHMgb2YgdGltZSB0cnlpbmcgdG8gZmluZCB0aGUgYmFzaWMgbmVlZHMuIApMaWtlIHJveWFsIHNpYmxpbmdzIHdhcnJpbmcgb3ZlciBhIGJpcnRocmlnaHQsIExvbmdtb250IGFuZCBMZXdpcyBQYWxtZXIgYm90aCByb3NlIHVuYmVhdGVuIHRvIHRoZSB0b3Agb2YgdGhlIDRBIGNsYXNzaWZpY2F0aW9uIGFuZCB0aHJldyBldmVyeXRoaW5nIHRoZXkgaGFkIGF0IGV2ZXJ5b25lIHdoaWxlIHByZXAgYmFza2V0YmFsbCBmYW5zIHdhdGNoZWQgZnJvbSBhYm92ZSBpbiB0aGUgRGVudmVyIENvbGlzZXVtIHN0YW5kcywgYXMgd2VsbCBhcyBmcm9tIGFsbCBjb3JuZXJzIG9mIENvbG9yYWRvLiBGdWxsIFN0b3J5LiAKSSB3aWxsIGJlIGF0IHRoZSB0b3VybmFtZW50IHRvIGdldCBteSAxMCUgaWYgaGUgZG9lcyBjYXNoIHRob3VnaCBmb3Igc3VyZSBhbmQgSSBkb24gdGhpbmsgSSB3aWxsIGJlIG1ha2luZyBhbnkgbW9yZSBkZWFscyB3aXRoIGhpbSBiYXNlZCBvbiB0aGUgZmVlZGJhY2sgaGVyZS4gCkkgZ290IGhvbWUgZnJvbSB3b3JrIGxhc3QgbmlnaHQgYW5kIGltbWVkaWF0ZWx5IHJpcHBlZCBvZmYgbXkgZmFuY3kgd29yayBjbG90aGVzIGFuZCBjcmF3bGVkIGludG8gYmVkIHRvIGZpbmlzaCAuIFRoZSBib29rIGRpc2N1c3NlcyB0aGUgc2VjcmV0IENoaW5lc2Ugd29tZW4gcyB3cml0aW5nIG9mClBlcmV6IHNhaWQgaGUgd2FzIHNvYmVyIGFuZCBpbnRlcnZpZXdpbmcgR2FnYSB3aGVuIHNoZSBiZWNhbWUgdXBzZXQgb3ZlciBhIHF1ZXN0aW9uIGFib3V0IGhlciBzaW5nbGUgSnVkYXMuCk11c3QgRmlnaHQgZm9yIEl0cyBMaWZlIikgbXVzdCBoYXZlIHNvcmVseSBzb2JlcmVkIHNvbWUgb2YgaXRzIHJlYWRlcnMsIGl0IHN0YXJ0ZWQgb24gcGFnZSAxNSwgZm9sbG93aW5nIGJpZyBhZHMgZm9yIExpc3RlcmluZSwgTWF0cml4ICh3b21lbidzIHNob2VzLCBCZWxsIFRlbGVwaG9uZSwgTW9kZXNzLCBDbGFwcCdzIEJhYnkgRm9vZCwgRG90IFNuYXAgRmFzdGVuZXJzLCBHb29kcmljaCBUaXJlcywgV2hpdGUgSG9yc2UgU2NvdGNoLCBQb21wZWlhbiBNYXNzYWdlIHNoYXZpbmcpLCBKYWNrIEJlbm55L0Nhcm9sZSBMb21iYXJkJ3MgIlRvIEJlIG9yIE5vdCBUbyBCZSIsIENvbGdhdGUsIFlhcmRsZXkgcG93ZGVyIGFuZCBhbmQgYSBmZXcgaW50ZXJzcGVyc2VkIHB1ZmYgcGllY2VzIGFuZCBhIEdpbmdlciBSb2dlcnMgY292ZXIgcGhvdG8uIApPdmVydmlldyBmb3IgaXJpc2hwcml2YXRlZXIKVGhlIEtuaWNrcyBhcmUgZ29pbmcgdG8gdHJ5IHRvIHNwZW5kLiAKRGVtaWJvbHQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpBbHNvLCBJIGFtIHRyeWluZyB0byBmaW5kIGEgY291bnNlbG9yIEkgY2FuIGFmZm9yZC4gClRoZSBzdG9yZSB3aWxsIGJlIHVuZGVyIHRoZSBtYW5hZ2VtZW50IG9mIGFuIGFzc29jaWF0ZSBvZiBEUklWRSBTQUZFTFlSWSBDc3QgTVRUIFBpCkd1eSBqdXN0IHRoaXMgcGFzdCB5ZWFyIGtpbGxlZCBoaXMgZ3JhbmRtb3RoZXIgYW5kIGR1bXBlZCBoZXIgYm9keSBpbiB0aGUgbGFrZSAobm90IGV2ZW4gdHJ5aW5nIHRvIGJlIHNlY3JldGl2ZSkgYW5kIGl0IHdhcyBkaXNjb3ZlcmVkIGJ5IGEgZGl2ZXIgYSB3ZWVrIG9yIHR3byBsYXRlci4gQW5vdGhlciBzdG9yeSBJIGNhbiB0aGluayBvZiBpcyBhIGd1eSB0aGF0IGdvdCB0b28gZHJ1bmsgYW5kIHRpcHBlZCBoaXMgY2hhaXIgYmFja3dhcmRzIG9mZiB0aGUgZGVjayBvZiB0aGUgZmxvYXQgY2FiaW4uIApUaGVyZSB3aWxsIGFsc28gYmUgYSBiaWcgaW50ZXJuYXRpb25hbCBjb250aW5nZW50IGhlYWRpbmcgdG8gR2Fsd2F5IGluIHNlYXJjaCBvZiB2aWN0b3J5IGluY2x1ZGluZyBvZiBQb2tlciBNaWtlIFNleHRvbiwgS2VubmEgSmFtZXMsIERhdmUgVWxsaW90dCwgQmVuamFtaW4gS2FuZywgU3VyaW5kZXIgU3VuYXIsIE1hZCBXaWxzb24sIE1pY2tleSBXZXJuaWNrLCBBbGFuIFZpbnNvbiBhbmQgMjAwOCBJcmlzaCBPcGVuIGNoYW1waW9uIE5laWwgQ2hhbm5pbmcuIEZyYW5jZSB3aWxsIGJlIHJlcHJlc2VudGVkIGJ5IENsYXVkZSBDb2hlbiBhbmQgVmVyb25pcXVlIEdvdXJkb24sIHdoaWxlIFNwYWluIGNoYWxsZW5nZSBpcyBsZWQgYnkgTGVvIE1hcmdldHMgYW5kIFBhcnR5UG9rZXIgV29tZW4gV29ybGQgT3BlbiBJSSBzdGFyIE1heSBNYWNlaXJhcy4KUmlzZSwgbGlmdCBhbmQgc2hpbmUgZm9yIHRoaXMgQnJvb21maWVsZCBib290IGNhbXAgd29ya291dApUaGVzZSBwZW9wbGUgYWxsIGtub3cgZWFjaCBvdGhlciBhbmQgYXJlIGluIHRoZSBzYW1lIHNjZW5lIGRvd24gdGhlcmUgaW4gRkwuIFRoaXMgaXMgYW4gdW5iZWxpZXZhYmxlIGFtb3VudCBvZiBjb25uZWN0aW9ucyB0byBUV08gc2V4IHRyYWZmaWNraW5nIG9wZXJhdGlvbnMgdGhhdCBkaXJlY3RseSBjb25uZWN0IGludG8gRG9uYWxkIFRydW1wIHRocm91Z2ggaGlzIGZyaWVuZHMgZG93biBpbiBGbG9yaWRhICAgYW5kIGluIHRoYXQgY2FzZSwgaGlzIG93biBjbHViLi4gCklmIEkgbG9zZSBhIGdhbWUsIEkgZG9uIGJsYW1lIHNjYXBlZ29hdHMgbGlrZSBhcnJvdyBybmcuIApBIHN1bW1hcnkgc2VudCB0byBKb2huIFBhcm1ldGVyIGFuZCBoaXMgdHdpbiBicm90aGVyIFBhdWwgc2hvd3MgdGhlIHByaWVzdCB3YXMgY2VsZWJyYXRlZCBieSB0aGUgQ2h1cmNoIGluIHB1YmxpYywgZGVzcGl0ZSBpdHMga25vd2xlZGdlIG9mIHRoZSB1Z2x5IHRydXRoLiAnJ0JldHdlZW4gYXBwcm94aW1hdGVseSAxOTY4IGFuZCAxOTc1IHdoaWxzdCBGYXRoZXIgQnJvY2sgd2FzIGFuIGFzc2lzdGFudCBwcmllc3QgYW5kIHByaWVzdCB3aXRoaW4gdGhlIGRpb2Nlc2Ugb2YgTWFpdGxhbmQgTmV3Y2FzdGxlLCBoZSBlbmdhZ2VkIGluIGEgcmFuZ2UgYW5kIHBhdHRlcm4gb2YgYmVoYXZpb3VycyB3aXRoIGFuZC9vciB0b3dhcmRzIEpvaG4gYW5kIFBhdWwgUGFybWV0ZXIgd2hvIHdlcmUgY2hpbGRyZW4gYXQgdGhlIHRpbWUsJycgdGhlIENodXJjaCBpbnZlc3RpZ2F0aW9uIGZvdW5kLiAnJ1RoYXQgcmFuZ2UgYW5kIHBhdHRlcm4gb2YgYmVoYXZpb3VyIGNvbnN0aXR1dGVkIHNleHVhbCBtaXNjb25kdWN0IGFzIGRlZmluZWQgYnkgdGhlIE5TVyBPbWJ1ZHNtYW4gQWN0IDE5NzQuJycgVGhlIGRlZmluaXRpb24gb2YgJydzZXh1YWwgbWlzY29uZHVjdCcnIGluY2x1ZGVzICcnYW55IHNleHVhbCByZWxhdGlvbnNoaXAgd2l0aCBhIGNoaWxkJycuIApJIHdhcyBhIHN0YXJ0dXAgZm91bmRlciBhbmQgZmxvYXRlZCBwYXlyb2xsIGZvciBtb250aHMgb24gbXkgb3duIGNyZWRpdCBjYXJkcyB0byBrZWVwIG15IGNvbXBhbnkgYWxpdmUuIEJ5IGhhcmR3b3JrLCBsdWNrLCBhbmQgbWlyYWNsZXMgd2UgbWFkZSBpdCB0aHJvdWdoIGJ1dCB0aGF0IGlzIG5vdCBub3JtYWwuIE5vIHBheSBlcXVhbHMgbm8gd29yayBwdXJlIGFuZCBzaW1wbGUuIApUaGV5IGFyZSBsaXZpbmcgaW4gdGhlaXIgb3duIGxvbmVseSBoZWxsIGJ1dCBiZWluZyBhbG9uZSBuZWFybHkgZGVzdHJveXMgdGhlbS4gCldpbGJ1ciBFLiAKQW5kIG1vcmUgcmVhc29ucyB0b28gdGhhdCBJIGNhbiByZW1lbWJlciByaWdodCBub3cuCkZvciBzdXJlIEkgd2lzaCBpIHdvdWxkIGhhdmUgaW52ZXN0ZWQgaW4gYSBiZXR0ZXIgY2FtZXJhIGluc3RlYWQgb2YgYnJpbmdpbmcgYSBsb3VzeSBkaWdpdGFsIGNhbWVyYS4gCkFyZSByZWFsbHkgaGl0IGFuZCBtaXNzIHdpdGggc29tZSB0aGVyYXBpc3RzIGtpY2tpbmcgYXNzIGFuZCBvdGhlcnMga25vd2luZyBiYXJlbHkgZW5vdWdoIGFuYXRvbXkgdG8gZ2V0IGxpY2Vuc2VkLiBUaGV5IGdlbmVyYWwgYXBwcm9hY2hlcyBhbmQgZG9uIHVzdWFsbHkgbGVuZCB0aGVtc2VsdmVzIHRvIGRldGFpbCB3b3JrIGJlbG93IHRoZSBhZHZhbmNlZCBsZXZlbHMuIApJIGRpZCByZWFkIGEgY3V0ZSBhcnRpY2xlIGEgd2hpbGUgYWdvIGFib3V0IGhvdyB0byBkZWFsIHdpdGggeW91ciBraWQgbGVhcm5pbmcgU2FudGEgaXMgYWN0dWFsbHkgeW91ciBwYXJlbnRzIHdoaWxlIHN0aWxsIGtlZXBpbmcgdGhlIG1hZ2ljLiAKSSBzYWlkIHlvdSBtaXNndWlkZWQsIGl0cyBub3QgYW4gYXR0YWNrLCBpdCB0aGUgdHJ1dGgsIGlmIHlvdSB0YWtlIGxvb2sgYXQgdGhlIGZyb250cGFnZSBvZiByL1R1cmtleSB5b3Ugc2VlIHdlIGNvbGxlY3RpdmUgb2YgdGlyZWQgb2YgbGlmZSBzYWx0eSBwZW9wbGUgYml0Y2hpbmcgYWJvdXQgZXZlcnl0aGluZyBnb3Zlcm5tZW50IHJlbGF0ZWQgYWJvdXQgOTAlIG9mIHRoZSB0aW1lLiBBbmQgaWYgYSBwZXJzb24gY2FuIG1ha2Ugc3VjaCBhIGNsYWltIGFzICJlYXJ0aCBpcyBmbGF0IiBpbiBhIHN0ZWxsYXIgb2JzZXJ2YXRvcnkgZmlsbGVkIHdpdGggYXN0cm9waHlzaWNpc3RzIGFuZCBiZWxpZXZlIGluIHRoZSBzYWlkIGNsYWltIGRlc3BpdGUgdGhlIGV2aWRlbmNlLCBub2JvZHkgd2lsbCBhdHRlbXB0IHRvIGNoYW5nZSBhbnlvbmUgbWluZCBhbmQganVzdCBzaGFrZSB0aGVpciBoZWFkIGF0IHRoZSBjbGFpbWFudC4uIAoiSnVzdCB0b2RheSBteSBkZW50aXN0IGV4cHJlc3NlZCBoZXIgZGVsaWdodCBpbiBoZWFyaW5nIHRoaXMgZ29vZCBuZXdzIGxhc3Qgc3VtbWVyLiAoU2hlIGdyZXcgdXAgaW4gdGhlIEx1dGhlcmFuIENodXJjaCBNaXNzb3VyaSBTeW5vZCBidXQgbGVmdCBsb25nIGFnbyBhZnRlciBoZXIgU3VuZGF5IFNjaG9vbCB0ZWFjaGVyIHNhaWQgaGVyIEpld2lzaCBmYXRoZXIgd291bGQgZ28gdG8gaGVsbC4pIFdoYXQgd2UgdGVhY2ggYW5kIHByb2NsYWltIG1hdHRlcnMuIEluZGVlZCwgaXQncyBhIG1hdHRlciBvZiBsaWZlIGFuZCBkZWF0aC4gSWYgb25lIHlvdW5nIHBlcnNvbiBoZWFycyB0aGlzIG5ld3MgYW5kIGJlbGlldmVzIEdvZCBhY2NlcHRzIGhlciBvciBoaW0gdGhhdCBpcyBlbm91Z2ggb2YgYSByZWFzb24gZm9yIGxhc3QgeWVhcidzIHZvdGUuIgpJdCBtZWFucyBzb21lb25lIHdobyBpcyBpbiBhIHN0YXRlIG9mIGNvbmZ1c2lvbiBvciBmcnVzdHJhdGlvbiwgaW4gd2hpY2ggdGhleSBhZG9wdCBhbiBvdmVyIGFnZ3Jlc3NpdmUgc3RyYXRlZ3kuIApJIGRlY2lkZSB0byBtYWtlIGEgcGl0IHN0b3AgYXQgdGhlIGJhciBkb3duIHRoZSBibG9jayB0byB3YXRjaCB0aGUgQ2FwcyBnYW1lLCBoYXZlIGEgYmVlciwgYW5kIHN0aXRjaCB0b2dldGhlciBzb21lIHNlbWJsYW5jZSBvZiBzZWxmIGVzdGVlbS4uIAoiSXQgaXMgYSBsYXRlIG5pZ2h0IHZlbnVlLCIgc2FpZCBKYXJlZCBBZGtpbnMgb2YgQmx1ZWJpcmQsIHRoZSBQaG9lbml4dmlsbGUgZGlzdGlsbGVyeSB3aG9zZSBzdWJ3YXkgdGlsZWQgc3BhY2UgYW5jaG9ycyB0aGUgY2VudGVyIG9mIHRoZSBzcGVjdGFjdWxhcmx5IHJlbm92YXRlZCBiZWF1eCBhcnRzIGJ1aWxkaW5nIHRoYXQgb25jZSBob3VzZWQgYSBsYW5kbWFyayBjb21tb2RpdGllcyBleGNoYW5nZS4gTm93LCBoZSBqdXN0IGhhcyB0byBjb252aW5jZSBtb3JlIGN1c3RvbWVycywgd2hvIHdpbGwgaW4gdHVybiBjb252aW5jZSBtb3JlIHZlbmRvcnMgaXQncyB3b3J0aCBzdGF5aW5nIG9wZW4gbGF0ZSB0byBzZXJ2ZSB0aGVtLgpUaG9zZSB0aGluZ3Mgb25seSB0aWUgdGhlIHdob2xlIHBhY2thZ2UgdG9nZXRoZXIuIEhlIGlzbiBhIGRlZmVuc2l2ZSBmaWdodGVyIG9yIGFuIG9mZmVuc2l2ZSBmaWdodGVyLCBoZSBhIGNvbXBsZXRlIGJveGVyLiBIaXMgb2ZmZW5zZSBpcyBhcyBpbXBvcnRhbnQgdG8gaGlzIHdob2xlIGNyYWZ0IGFzIGhpcyBkZWZlbnNlLiAKQSBncmFkdWF0ZSBvZiBNaWNoaWdhbiBTdGF0ZSBVbml2ZXJzaXR5LCBIZWFyc2hlbiwgMzQsIHJlY2VpdmVkIGhpcyBtYXN0ZXIncyBpbiByYWJiaW5pYyBzdHVkaWVzIGluIDIwMDcsIGJlZ2FuIGhpcyBjYXJlZXIgYXMgYW4gYXNzaXN0YW50IHJhYmJpIGluIFdhc2hpbmd0b24gc3RhdGUgYW5kIGxhdGVyIHNlcnZlZCBpbiBOZXcgWW9yay4gSW4gSnVseSwgaGUgYWNjZXB0ZWQgaGlzIGZpcnN0IHBvc2l0aW9uIGFzIGEgc2VuaW9yIHJhYmJpIGF0IENvbmdyZWdhdGlvbiBSb2RlcGggU2hvbG9tIGluIFRhbXBhLgpOb3cgdG8gYWxsIHkgc2hvdXRpbmcgIlNjcmV3IHRoZSBTYWludHMsIiB5b3Uga25vdyBhcyB3ZWxsIGFzIEkgZG8gdGhhdCBpZiB0aGUgU2FpbnRzIHdlcmUgaW4gdGhlIFN1cGVyIEJvd2wgZXZlcnkgZHJ1bmsgQXVudCB5b3UgaGF2ZSB0aGF0IGV2ZXIgc3RlcHBlZCBhIGZvb3QgaW4gTmV3IE9ybGVhbnMgd291bGQgYmUgcm9ja2luZyBzb21lIEJsYWNrIGFuZCBHb2xkIGxpa2UgbGlmZWxvbmcgY3Jlb2xlcy4gSSBkb24gY2FyZSBpZiB5b3UgYXJlIEZhbGNvbnMgb3IgRG9scGhpbnMsIFBhbnRoZXJzIG9yIFRleGFucywgdGhvc2UgU2FpbnRzIGZhbnMgYXJlIGxpa2UgZ25hdHMuIFlvdSBtaWdodCBub3QgYWx3YXlzIHNlZSB0aGVtLCBidXQgdGhleSBhcmUgaW5mZXN0aW5nIHRoZSBzb3V0aC4uIApZb3Ugd2FudCB5b3VyIHBsYWNlIHRvIGZlZWwgY2FsbSBhbmQgdHJhbnF1aWwsIHNoZSBzYXlzLCB0aGUgYmxpbmcgb24geW91ciBjYWJpbmV0cnk7IGV2ZW4gYmV0dGVyLCBnbyB3aXRoIGhhbmRsZXMuIFRoZSB2aXN1YWwgaXMgc29tZXRoaW5nIE1jTGVhbiByZWNvbW1lbmRzLCBub3Rpbmcgd2UgYXJlIGFsbCBhIGJpdCB2aXN1YWxseSBmb2N1c2VkLCB2aWV3aW5nIGV2ZXJ5dGhpbmcgZGlnaXRhbGx5IGFuZCBmb3JnZXR0aW5nIGFib3V0IHRoZSBzY2VudCBhbmQgdG91Y2ggbWF0ZXJpYWxzIGNhbiBicmluZyB0byB5b3VyIGRhaWx5IGxpZmUuLiAKTWluYWdpViAgMSBwb2ludCAgc3VibWl0dGVkIDUgZGF5cyBhZ28KV2hlbiBJIGNvbW1pc2VyYXRlZCBhbmQgcG9pbnRlZCBvdXQgdGhhdCB0YWtpbmcgYSBicmVhayB3YXMgcHJvYmFibHkgYSBnb29kIGlkZWEgYWZ0ZXIgc3VjaCBhIGJpZyBsb3NzLCBNYXR0IHJlcGxpZWQgdGhhdCBpdCB3YXNuJ3QgYWJvdXQgdGhlIG1vbmV5LiBIZSBkaWRuJ3QgZ2l2ZSBhIHNoaXQgdGhhdCBoZSBsb3N0ICQ3MEsuIApEZXNzdXRvbSwgdmVuIG9tIG4gc3RhbiBhbGxhIG0ga2xhcmZpcm1vciBpbmYgcmEgaCBncmUgaiBtZiByYW5kZSBwcmlzZXIgb2NoIGF2Z2lmdGVyIHAga2xpZW50ZXIgc29tIGludmVzdGVyYXIgaSBtaW5kcmUgbSBuZ2RlciA/IHNvbSByZWR1Y2VyYXMgc3RlZ3ZpcyBzdCBsbGVuIHMgZGVuIHRhbGFuZyBlbGxlciBwcm9kdWNlbnRlbiBrYW4gbmRyYSBwbGF0cyByYXN0ZXIgcCBmbHVnYSBvY2ggcyBnYSwgIkwgdCBvc3MgZyBkZW4gc2lzdGEgcGxhdHNlbiBpIG4gc3RhIGF2YnJvdHQgZWZ0ZXJzb20gdmkgaGFyIGYgdHQgZ3V2ZXJuIHJlbiBwIHJhZGVuIiwgdmVuIG1lZGFuIGRldCBwbGF0cyBhdmJyb3R0ZXQgaGFyIHJlZGFuIGIgcmphdC4gCkZ1bGwgVGlsdCBQb2tlciBtIGZvaSBsYW4gZW0gdW1hIHZlcnMgYmV0YSBkbyBzb2Z0d2FyZSBkbyB0ZWxlZm9uZSBtIEVzcGVyZW1vcyBxdWUgZWxlIGVzdGFyIGRpc3BvbiAuCkluIHRoZSBUaHVyc2RheSwgTm92ZW1iZXIgOSBlcGlzb2RlLCAiUG9rZXIsIEZhaXRoIGFuZCBFZ2dzLCIgU2hlbGRvbiBhdHRlbmRzIGNodXJjaCB3aXRoIGhpcyBmYW1pbHkgYW5kIGlzIGJvdGhlcmVkIHNvIG11Y2ggYnkgdGhlIG9idmlvdXNseSBub3Qgc28gYnJpZ2h0IHBhc3RvcidzIG1lc3NhZ2UsIHRoYXQgaGUgZmVlbHMgdGhlIG5lZWQgdG8gc3BlYWsgdXAgaW4gdGhlIG1pZGRsZSBvZiB0aGUgc2VydmljZS4K|<---