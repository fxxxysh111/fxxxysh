--->|VGhleSByZWZsZWN0ZWQgaGlzIGJyb3dzaW5nIGluIGhpZ2ggYW5kIHBvcHVsYXIgY3VsdHVyZS4gCkRhdmlkIEtuYXBwLCB0aGUgbWF5b3Igb2YgUmFqbmVlc2hwdXJhbSwgZmxpcHBlZCBmcm9tIGRldm90ZWQgZm9sbG93ZXIgdG8gRkJJIGluZm9ybWFudCBpbiB0aGUgJzgwcywgYW5kIGl0IHdhcyBoaXMgdGVzdGltb255IHRoYXQgbGVkIHRvIG1hbnkgamFpbCBzZW50ZW5jZXMgZm9yIFJham5lZXNoZWVzLiAKSSBmZWVsIHNvIG11Y2ggbW9yZSBhbGl2ZSBhbmQgc28gbXVjaCBtb3JlIGNhbG0uIEknbSBub3Qgb24gYSB0aW1lIHNjaGVkdWxlLiAKSSBkb24gbGlrZSB0aGUgbG9zcyBvZiBqb2JzIGJ1dCBJIGRvbiBsaWtlIGhhdmluZyBubyBjb21wYW55IGFuZCBoZW5jZSBldmVuIG1vcmUgam9icyBiZWluZyBsb3N0IGFuZCBBQ1RJIGZ1dHVyZSBhY3R1YWxseSBsb29rcyB0ZXJyaWJsZSBpbW8uIApJIGJlIHRoYXQgZ3V5IGFuZCBzYXkgdGhhdCBpIHBsYXkgd2l0aCB3aGF0ZXZlciBwZXJrIGkgd2FudCBhbmQgd2hhdGV2ZXIgd2VhcG9uIGkgd2FudCwgYmVjYXVzZSBpIGxpa2UgdG8gcGxheSBob3dldmVyIGZpdHMgZm9yIG1lIGFuZCBubyBvbmUgd2lsbCB0ZWxsIG1lIHdoYXQgaSBuZWVkIHRvIHBsYXksIGFuZCBzdGlsbCBtYW5hZ2UgSG9FIGdhbWVzCldoeSBzbyBuZWdhdGl2ZT8gU28gZXZlcnkgdGltZSBJIHNlZSBhbiBBbWVyaWNhbiBzdWJ1cmJhbiBwaWMgSSBuZWVkIHRvIGNvbW1lbnQgb24gdHJhaWwgb2YgdGVhcnM/SXQgaXMgYSBwaWN0dXJlIG9mIGEgZnVja2luZyBpY2UgY3JlYW0gb3Igd2hhdGV2ZXIsIGp1c3QgZnVja2luZyB1cHZvdGUgaWYgeW91IGxpa2UgaXQgb3IgY29tbWVudCBzb21ldGhpbmcgbW9yZSBhcHByb3ByaWF0ZSwgd2h5IGJyaW5nIHBvbGl0aWNzIGludG8gdGhpcyBhbmQgd2h5IGFyZSB0aGVyZSBzbyBtYW55IHVwdm90ZXMgZm9yIHRoaXMgcG9zIGNvbW1lbnQ/VGhpcyBzdWIgaXMgZnVsbCBvZiByYWNpc3RzIGFuZC9vciBpZGlvdHMgYW5kIHRoZSBtb2RzIGFyZSBkb2luZyBqYWNrIHNoaXQgYWJvdXQgaXQubG9sbGVyICAyIHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvSSBjYW4gc2VlIGV2ZXJ5dGhpbmcuIApZb3VuZ2VyIHdvbWVuIGFyZSBsZXNzIGxpa2VseSB0byB1bmZhdm9yYWJseSBjb21wYXJlIG9sZGVyIG1lbiB0byBvdGhlciBwZW9wbGUgb2YgdGhlIHNhbWUgYWdlOyB0aGV5IGNvbXBhcmUgdGhlIG1hbiBtYXR1cml0eSBsZXZlbHMgd2l0aCBwZW9wbGUgdGhlaXIgKHRoZSB5b3VuZyB3b21hbiBvd24gYWdlIGluc3RlYWQuIApZb3UgYXJlIG5vdyBiYW5uZWQgZnJvbS9yL3B5b25neWFuZ1doYXQgZGlkIEkganVzdCByZWFkPyBEYWZ1cT8gSSByZWFkIHRoYXQgYXMgIllPVSBIQUQgT05FIEpPQiIuIApUaGUgdGVjaG5vbG9neSB0aHJlYXRlbmVkIHRoZWlyIHBlcnNvbmFsIGxpdmVsaWhvb2QuIApHcmVnIE1lcnNvbiwgd2hvIGp1c3QgbGFzdCB3ZWVrIHdvbiAkOC41IG1pbGxpb24gYW5kIGJlY2FtZSB0aGUgb25seSBwbGF5ZXIgaW4gdGhlIGhpc3Rvcnkgb2YgdGhlIFdTT1AgdG8gd2luIGJvdGggdGhlIFBsYXllciBvZiB0aGUgWWVhciBhd2FyZCBhbmQgdGhlIE1haW4gRXZlbnQgYXQgdGhlIHNhbWUgc2VyaWVzLCB3aWxsIGpvaW4gYW4gaW1wcmVzc2l2ZSBsaXN0IG9mIHBva2VyIGNlbGVicml0aWVzIGFuZCBsZWdlbmRzIHZ5aW5nIGZvciB0aGUgZ3VhcmFudGVlZCAkNTAwLDAwMCBwcml6ZS4gCkEgbG9uZyB0aW1lIGZyaWVuZCBvZiBtaW5lLCB3aG8gaXMgYSBzZWxmIHByb2NsYWltZWQsIDRDaGFuIGR3ZWxsaW5nLCBmb3JtZXIgd2VlYiBub3cgc3R1ZHlpbmcgSmFwYW5lc2UgYXQgdW5pdmVyc2l0eSBuZWNrYmVhcmQsIGhhcyBhIGRyYW1hdGljIHN0cmVhayBhIG1pbGUgd2lkZS4gCiB0aGVuLCBzdGF0aXN0aWNhbGx5IHNwZWFraW5nLCBhIGdyb3dpbmcgcGVyY2VudGFnZSBvZiBBbWVyaWNhbnMgd2lsbCBub3Qgc2VlIGNoYW5nZSwgYnV0IG1vcmUgb2YgdGhlIHNhbWUuIApNb3Jlb3ZlciwgbWFrZSBzdXJlIHRoZSBzaXRlIHlvdSB3YW50IHRvIHNpZ24gdXAgd2l0aCBvZmZlcnMgeW91ciBwcmVmZXJyZWQgYmFua2luZyBtZXRob2QuLiAKQS4gTWhhcm8uIEtlaSB0ZSBudWkgdGUgbWloaSBraSBhIFZpbmNlbnQgdGUgdGFrZSBuIHRlIGFyb3RhdSBvIGFuYSByYW5nYWhhdSBpIHB1dGEgbWFpIGFpIHRlIHBvbm8sIHRlIHRpa2EgbyBuZyBrcmVybyBhIG5nIHRwdW5hLCBuZyBrcmVybyBpIHR1a3UgaWhvIGtpIGEgbXRvdSwgZW5nYXJpIGtvcmUgaSB0ZSBrcmVyb3RpYSwga29yZSBpIHRlIHduYW5nYXRpYSBlIHRlIGFvIFBrZWguIApHZW9yZ2UsIFV0YWgsIHRvIENoYXJsZXMgSmFjb2IgQmFzdGlhbiBhbmQgSm9zZXBoaW5lICJQaGluZSIgSGFubmlnIEJhc3RpYW4uIApUaGVyZSBoYXZlIGJlZW4gdG9vIG1hbnkgdGltZXMgd2hlcmUgSSB1c2luZyA3TjM5IFNQNiBvciBNOTk1IGFuZCBpdCB0YWtlcyBzZXZlcmFsIHJvdW5kcyB0byBwdXQgZG93biBhIGhhdGNobGluZyBvciBtb3NpbmxpbmcuIApUaGVuIGNsaWNrIGV4aXQgZ2FtZWFnYWluLC4gQmFjayB0byB0aGUgbWFpbiBtZW51LC4gCklmIHRoZSBxdWVzdGlvbiB3YXMgQVEgb3IgOTkgb3Igc29tZXRoaW5nIHRoZSBtYXRoIGlzIHByZXR0eSBzaW1pbGFyIGJ1dCBpdCBjaGFuZ2VzIHRoZSBzZWNvbmQgcGFydCBvZiBteSBhbmFseXNpcyBhIGxpdHRsZS4gClRoZXkgYXJlIHByb3ZpZGVkIHRvIFRyaXBBZHZpc29yIGJ5IHRoaXJkIHBhcnR5IHBhcnRuZXJzIHN1Y2ggYXMgRXhwZWRpYSBhbmQgR2lhdGEuU3RhciByYXRpbmcgcHJvdmlkZWQgYnkgRXhwZWRpYS4gCjIgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCkNoZWNrZWQgdGhlIGNoaXAgZ3JhcGhzIG9mIHR3byB0b3VybmFtZW50cyBpIGJlZW4gcGxheWluZyBmb3IgdGhlIGxhc3QgNSBob3Vycy4gRGlzY29ubmVjdGVkIG5lYXIgdGhlIHRvcCBvZiB0aGUgY2hpcHMgaW4gYm90aCwgY2FtZSBiYWNrIGJvdHRvbSA1IGluIGJvdGguIApJdmV5IHdhcyB1bmtub3dpbmdseSBkZWFkLCBidXQgYmV0ICQ5MGsuIER3YW4gcmFpc2VkIEl2ZXkgYW5vdGhlciAkMTQyaywgYW5kIEl2ZXkgcmVzcG9uZGVkIGJ5IGdvaW5nIGFsbCBpbi4KSSBzdGFydCBieSBjaGVja2luZyBvdXQgVUsgMjhGL0ZGLiBBbHNvLCBzdGFydCB3aXRoIHNlYW1lZCBiYWxjb25ldHRlcyBmb3Igc2l6aW5nIHB1cnBvc2VzLiBNb3N0IGFyZSBxdWl0ZSBsYWN5LgpKRiBQdGFrIFNjaWVuY2UgQm9va3Mgb2YgdGhlIGNvdHRhZ2UgaW5kdXN0cnkgYmlvZ3JhcGhpZXMgb2YgQ2hhcmxlcyBEaWNrZW5zIHJlY29nbml6ZSBoaXMgd29yayBhcyBhIGRldmVsb3BpbmcgcHJpdmF0ZSBpbnZlc3RpZ2F0b3IgKHRoZW4ga25vd24gYXMgInByaXZhdGUgZW5xdWlyZXIiKSwgd2hpY2ggaXMgYW4gZXh0cmFvcmRpbmFyeSB0aGluZywgYXMgRGlja2VucyB3YXMgcGVyaGFwcyBhbW9uZyB0aGUgbW9zdCBrZWVuIGFuZCBhc3R1dGUgb2JzZXJ2ZXJzIG9mIGh1bWFuIHRyYWl0cyBhbmQgYWN0aXZpdHkgaW4gdGhlIDE5dGggY2VudHVyeS4gCk1hbnkgb2YgdXMgaGVhZCB0byBhIHNwYSBpZiB3ZSdyZSBsb29raW5nIHRvIHNvYWsgaW4gYSBtaW5lcmFsIGxhZGVuIHdoaXJscG9vbCBvciBiYXRoLiBPciBqb3VybmV5IHRvIGEgdG93biBsaWtlIEhvdCBTcHJpbmdzLCBBcmthbnNhcywgd2hlcmUgYW4gZW50aXJlIHRvdXJpc3QgdHJhZGUgaXMgZGV2b3RlZCB0byBwcmljZXkgc29ha3MgaW4gaXRzIHN0ZWFteSBuYXR1cmFsIHJlc291cmNlLiBCdXQgZmluZGluZyB5b3VyIG93biByZWFsIGhvdCBzcHJpbmcgaXMgbW9yZSBmdW4sIGFuZCBlYXNpZXIgb24gdGhlIHdhbGxldC4gClVyaW5lIG1hcmtpbmcgY2FuIGNyZWF0ZSBhIGxvdCBvZiBzdHJlc3NlcyBpbiBhIGhvdXNlaG9sZC4gVHJ5IHRvIGtlZXAgeW91ciBwZXJzcGVjdGl2ZSB0aHJvdWdob3V0IHRoaXMgdGltZS4gWW91ciBjYXQgaXMgbm90IHRyeWluZyB0byBydWluIHlvdXIgc3R1ZmYgb3IgY2F1c2UgeW91IHN0cmVzcywgaGUgaXMganVzdCB0cnlpbmcgdG8gZmVlbCBzZWN1cmUgYW5kIGNyZWF0ZSBhIGZlZWxpbmcgb2Ygc2FmZXR5LiBUcnkgdG8gcmVwbGFjZSBhbnkgYW5nZXIgd2l0aCBjb21wYXNzaW9uOyB5b3VyIGNhdCBpcyBjbGFpbWluZyB5b3UgYW5kIHlvdXIgaG9tZSBhcyBoaXMgKHdoaWNoIEkga25vdyBpcyBub3QgYWxsIHRoYXQgY29tZm9ydGluZyBhdCB0aGUgdGltZSBvZiBmaW5kaW5nIGEgbWFya2luZywgYnV0IHJlYWxseSBpcyBhIG5pY2UgZ2VzdHVyZSBpZiB5b3UgdGhpbmsgYWJvdXQgaXQpLiBUYWtpbmcgdGhlIHRpbWUgdG8gaGVscCB5b3VyIGNhdCBpcyBub3QgdG9vIG11Y2ggdG8gYXNrLCBlc3BlY2lhbGx5IHdoZW4geW91IGNvbnNpZGVyIGFsbCBvZiB0aGUgY29tZm9ydCBhbmQgam95IHdlIGdldCBmcm9tIHRoZW0uCkl0cmVhbGx5IGVtYnJhY2VkIHRoYXQgZXJhIHVuYXBvbG9nZXRpY2FsbHkuIEkgd291bGQgZGVmaW5pdGVseSByYW5rIHRoaXMgYW1vbmcgbXkgdG9wIDMgTUNVIG9yaWdpbiwgYWxvbmcgd2l0aCBJTTEgYW5kIEJQL0NBMS50byBtZSBpdCBmZWx0IGxpa2UgdGhleSB3ZXJlLiAiVGhlIEFjY3VzZXJzIiBzb3VuZGVkIG1vcmUgbGlrZSBhIG5hbWUgb2YgYSBzZXBhcmF0ZSB0cmliZSB0aGFuIGEgY2FsbCBzaWduIHRob3VnaCBJIGNvbmNlZGUgdGhhdCBtYXkgaGF2ZSBiZWVuIHRoZSBuYW1lIG9mIHRoZWlyIGZhY3Rpb24uT24gYSBzaWRlIG5vdGUsIHRoaXMgbW92aWUganVzdCBsZWZ0IG1lIHdvbmRlcmluZyB3aGF0IHBvaW50IGl0IGlzIHRoYXQgUm9uYW4gZ29lcyBmcm9tIGJlaW5nIG9iZWRpZW50IHRvIG1hbmlhY2FsIGFuZCB3aGVuIEtvcmF0aCBzd2l0Y2hlcyBzaWRlcyB0byBqb2luIFJvbmFuLiAKVGhpcyB3aWxsIGJlIHRoZSB3b3JzdCBvdXRjb21lIGZvciBteSBnZW5lcmF0aW9uLldlIGhhdmUgYSBidW5jaCBvZiBwZW9wbGUgaGVyZSBjcmVhdGluZyB0aGlzIGN1bHQgb2YgcmVuZXdhYmxlIGVuZXJnaWVzLiBUaG9zZSBhcmUgaW4gbm8gd2F5IGVjb25vbWljYWxseSBmZWFzaWJsZSBhbmQgdGhleSBhcmUgaG9ycmlibGUgZm9yIHRoZSBlbnZpcm9ubWVudCAocHJvZHVjdGlvbiBhbmQgZGlzcG9zYWwpLiAKVGhlIGhvc3Qgb2YgInZpbSBhcyBpZGUiIHBsdWdpbnMgYXJlIGxhcmdlbHkgdW5uZWNlc3Nhcnkgb25jZSB5b3Ugc3RhcnQgbWFraW5nIHByb3BlciB1c2Ugb2YgdmltIGJ1aWx0IGlucyAodGFncywgY29tcGlsZXJzLCBwcm9wZXJseSBzZXQgcGF0aCwgdGhlIHF1aWNrZml4L2xvY2F0aW9uIGxpc3QuIGp1c3QgdG8gbmFtZSBhIGZldyksIGltby4KVGhpcyBpc24gYSBjb21wbGV0ZSBsaXN0LCBieSBhbnkgbWVhbnMsIGJ1dCBpdCBhIHN0YXJ0aW5nIHBvaW50IGludG8gYSBkZWVwLCByaWNoIHNlYSBvZiByZXBlcnRvaXJlLiBJIGRpZG4gZXZlbiBkZWx2ZSBpbnRvIGNoYW1iZXIgb3Igc2hvdyBwaWVjZXMgZWl0aGVyLiAKNSBvZiB0aGUgY291bnRyeXMgbW9zdCBub3RvcmlvdXMgY29sZCBjYXNlcwpJIGRvIG5vdCBzdWdnZXN0IHBlb3BsZSBpZ25vcmUgdGhlIGFkdmljZSBvZiB0aGVpciBoZWFsdGhjYXJlIHByb3ZpZGVycywgb25seSB0aGF0IHBlb3BsZSBiZSBjYXV0aW91cywgZG8gdGhlaXIgaG9tZXdvcmsgYW5kL29yIHNlZWsgc2Vjb25kIChpZiBub3QgbXVsdGlwbGUpIG9waW5pb25zIHdoZXJldmVyIHBvc3NpYmxlLgpUaGVyZSB3ZXJlIHRpbnkgZGlmZmVyZW5jZXMsIGlmIHlvdSBsb29rIGNsb3NlbHksIGJ1dCBoZSBjb3VsZCBwcm9iYWJseSBmb29sIG15IGZhbWlseSBtZW1iZXJzLiAKVGhpcyBoaWdobHkgZGVwZW5kcyBvbiBleGFjdGx5IHdoaWNoIHBva2VyIHZhcmlhbnQgaXMgYmVpbmcgcGxheWVkLiBJbiBhIHNpbXBsZSBkcmF3IG9mIDUgY2FyZHMgZnJvbSBhIGRlY2sgdGhlcmUgYXJlIDYyNCB3YXlzIHRvIGdldCBmb3VyIG9mIGEga2luZC4gVGhpcyBpcyBjYWxjdWxhdGVkIGJ5IHRha2luZyB0aGUgMTMgcXVhZHMgb2YgZWFjaCByYW5rIG11bHRpcGxpZWQgYnkgdGhlIG51bWJlciBvZiBleHRyYSBjYXJkcyB3aGljaCBjYW4gYmUgdGhlIGZpZnRoIGNhcmQgaW4gdGhlIGhhbmQuIFRoZSBjaGFuY2UgaXMgaW5jcmVhc2VkIHNpbmNlIHRoZXJlIGFyZSBub3cgNyBjYXJkcyByYXRoZXIgdGhhbiA1IGZyb20gd2hpY2ggdG8gZm9ybSBhIGhhbmQuIChGdWxsIEFuc3dlcikKSSBoYXZlIGJlZW4gbGlmdGluZyBmb3Igc2V2ZXJhbCB5ZWFycywgYW5kIEkgY3VyaW91cy4gCkFzIG11Y2ggYXMgbGl2ZSBzcG9ydHMgd2lsbCBnZW5lcmF0ZSB0aGUgbGlvbidzIHNoYXJlIG9mIGNvbW1lcmNpYWwgaW1wcmVzc2lvbnMgZm9yIHRoZSByZXZhbXBlZCBGb3gsIHRoZSBCaWcgRm91ciBicm9hZGNhc3RlciBuZXh0IGZhbGwgd2lsbCBzdGlsbCBiZSBvbiB0aGUgaG9vayB0byBwcm9ncmFtIHNvbWUgZWlnaHQgaG91cnMgb2YgZ2VuZXJhbCBlbnRlcnRhaW5tZW50IGZhcmUgcGVyIHdlZWsuIEFuZCB3aGlsZSBGb3ggaXNuJ3QgZ2V0dGluZyBvdXQgb2YgdGhlIHNjcmlwdGVkIFRWIGJ1c2luZXNzIGFsdG9nZXRoZXIsIGEgbmV3IGNvbXBldGl0aW9uIHNlcmllcyBpcyBwcm92aWRpbmcgYWR2ZXJ0aXNlcnMgd2l0aCBhbiBhZHZhbmNlIGxvb2sgYXQgd2hhdCB0aGUgb3ZlcmhhdWxlZCBuZXR3b3JrIHdpbGwgaGF2ZSB0byBvZmZlciBpbiB0aGUgc3ByaW5nIHVwZnJvbnQgYmF6YWFyLi4gClRvd2FyZHMgdGhlIGVuZCBvZiB0aGUgd2VlaywgdGhlIENlbnRlciBhbmQgdGhlIEZlbGxvd3MgY2VsZWJyYXRlZCB2b2x1bnRlZXJzIGFuZCB0aG9zZSB3aG8gYWN0aXZlbHkgcGFydGljaXBhdGVkIGluIGNhbXB1cyBzZXJ2aWNlIG9yZ2FuaXphdGlvbnMgd2l0aCBhbiBleGNpdGluZyBwaWNuaWMgaW4gdGhlIGNlbnRlciBvZiBjYW1wdXMgYXQgV2lsc29uIFBsYXphLiBHdWVzdHMgd2VyZSBpbnZpdGVkIHRvIGp1bXAgYXJvdW5kIGluIGFuIGVub3Jtb3VzIGluZmxhdGFibGUgb2JzdGFjbGUgY291cnNlLCBjcmFkbGUgdGhlcmFweSBwdXBwaWVzLCBlYXQgZGVsaWNpb3VzIHBpenphLCBhbmQgZ3JhYiBmcmVlIFVDTEEgVm9sdW50ZWVyIENlbnRlciBhcHByZWNpYXRpb24gc3RpY2tlcnMhLiAKU2NyYWdnbHkgYmVhcmQsIHdvcmUgc2FuZGFscywgcmFtYmxlZCBvbiBhYm91dCByYW5kb20gc3R1ZmYgYWxsIGRheS4gSSBhY3R1YWxseSB0aG91Z2h0IGhlIHJlaW5jYXJuYXRlZCB3aGVuIEkgc2F3IHRoaXMgaG9tZWxlc3MgZ3V5IHNoaXR0aW5nIGluIGEgYm94IGluIHRoZSBOWUMgc3Vid2F5IGluIDE5ODIuIApQb3VyIHJwb25kcmUgIHZvdHJlIHF1ZXN0aW9uOiBwb3VycXVvaSBuJ3R1ZGllciBsZSBkdG91cm5lbWVudCBkZSBtaW5ldXIgdW5pcXVlbWVudCBzdXIgbCdhbmdsZSBkZSBsYSBzZXh1YWxpdC4gQ2FyIGlsIG1lIHNlbWJsZSBxdWUgZGFucyBsYSBwZXJjZXB0aW9uIGducmFsZSBkJ3VuZSB0cnMgZ3JhbmRlIG1ham9yaXQgZGVzIGZyYW5haXMsIGxlIGR0b3VybmVtZW50IGRlIG1pbmV1cnMgaW1wbGlxdWUgbmNlc3NhaXJlbWVudCB2b2lyZSBleGNsdXNpdmVtZW50IGRlcyByZWxhdGlvbnMgc2V4dWVsbGVzLiAKMikgTm8uIFN1Z2FyLCBhbGNvaG9sLCBtZWF0LCBkYWlyeSkgaXMgd2hhdCBpcyBjYXVzaW5nIHNvIG1hbnkgaGVhbHRoIGlzc3VlcyBmb3IgY2VydGFpbiBodW1hbiBzb2NpZXRpZXMuIApJc2VlIG90aGVyIHBlb3BsZSB3aG8gbG9vb29vdmUgdGhlaXIgY2F0cyBhbmQgSSBzZWUgd2h5IGJ1dCBtaW5lIGlzIG5vdCB0dXJuaW5nIGludG8gdGhlIG5pY2UgZmFtaWx5IGNhdCBJIHdhcyBob3BpbmcgaGUgd291bGQuIApTdGlsbCwgdGhlIHNoZWVyIHNpemUgb2YgdGhlIGNvdW50cnkgICBub3QgdG8gbWVudGlvbiB0aGUgbGFuZ3VhZ2UgYmFycmllciAgIGNhbiBtYWtlIGl0IGRhdW50aW5nIHRvIGV4cGxvcmUgYWxvbmUsIGV2ZW4gZm9yIHRoZSBtb3N0IGNvdXJhZ2VvdXMgb2YgdHJhdmVsZXJzLiAKSSB3b3VsZCBnZXQgYSBwY2FwIG9mIHRoZSB0cmFmZmljIGlmIHBvc3NpYmxlIGFuZCBhbmFseXNlIGl0IGluIHdpcmVzaGFyay4KQnV0IGhvdyBhcmUgeW91IHBsYW5uaW5nIHRvIGJlY29tZSBza2lsbGVkIGd1eSBpZiB5b3UgaGF2ZSBsb3N0IGFsbCB0aGUgbW9uZXk/IFRoZSBtb3N0IGltcG9ydGFudCBmYWN0b3Igb2YgbG9uZyB0ZXJtIHN1Y2Nlc3MgaXMgdG8gc2F2ZSBtb25leSBmb3IgYmlnIGdhbWUgYW5kIHRoYXQncyB3aGVyZSBXUFQgQ2x1YiBjYW4gaGVscC4gClRoZSBjb3BzIHNob3dlZCB1cCB1bmRlcnByZXBhcmVkLiBUaGUgSHVudGVycyBkaWRuCkFmdGVyIGRlY2FkZXMgb2YgYWJ1c2UsIENhbmFkYSB3aWxsIGJlIG91dC4gQ29uZ3Jlc3Mgc2hvdWxkIG5vdCBpbnRlcmZlcmUgdy8gdGhlc2UgbmVnb3RpYXRpb25zIG9yIEkgd2lsbCBzaW1wbHkgdGVybWluYXRlIE5BRlRBIGVudGlyZWx5IHdlIHdpbGwgYmUgZmFyIGJldHRlciBvZmYgRG9uYWxkIEouIApVcGRhdGVkIDIwMTkgUHJpY2VzIEhvdGVsIFJldmlld3MgRm9ydCBNeWVycwpUaGUgSmFjb2Jpa2lyY2hlIGluIERyZWJiZXIgIFRoZSBDaHVyY2ggd2FzIHByb2JhYmx5IGZpcnN0IGJ1aWxkIGluIHRoZSAxMXRoIGNlbnR1cnksIGJ1dCB0aGVyZSBpcyBub3RoaW5nIG9sZGVyIGluIHRoZXJlIHRoYW4gdGhlIGNhbmRlbGFicmFzIHdoaWNoIGFyZSA0MDAgeWVhcnMgb2xkLiBBbHNvIHRoZSB3aG9sZSBpbnRlcmlvciB3YXMgcmVtb2RlbGVkIGluIHRoZSBsYXRlIDE3dGggY2VudHVyeS4gVGhpcyBpcyBiZWNhdXNlIHRoZSBjdXJjaCB3YXMgaGVhdmlseSBkYW1hZ2VkIGR1cmluZyB0aGUgd2FyLgpEdWRlIHRoYXQgYWx0IHJpZ2h0IGNlc3Nwb29sIGlzIHR1ZXNkYXkgc28geWVhIG1heWJlIGJ5IHlvdXIgc3RhbmRhcmRzIEkgYW0gImFsdCByaWdodGUgd2hhdGV2ZXIgdGhlIGhlbGwgdGhhdCBtZWFucy4gCkEgZ3V5IGhpdCBhIHJveWFsIHdoZW4gSSB3YXMgdGhlcmUgYW5kIGdvdCAkNTAwLiAKTUlMIGFuZCBJIGRvbid0IGdldCBhbG9uZyBhdCBhbGwgKGZvciB5ZWFycyBhbmQgeWVhcnMpIHNvIHRoaXMgdHJpcCB3YXMgb24gaGVyICJob21lIHR1cmYiIEkgd2FzIGJlaGF2aW5nIGFzIGJlc3QgSSBjb3VsZCBidXQgd291bGQgbm90IHJvbGwgb3ZlciBhbmQgY2hhbmdlIHRoaW5ncyBqdXN0IGJlY2F1c2Ugc2hlIHdhbnRlZC4gKFNoZSB0cmllZCBwdXNoaW5nIGJvdW5kYXJpZXMgd2l0aCBraWRzIHJ1bGVzIGFuZCB0cmllZCB0byBwdWxsICJidXQgSSdtIGdyYW5kbWEgYW5kIHRoZSBtYXRyaWFyY2giIHRoYXQgZG9uJ3QgZmx5IHdpdGggbWUgYXQgYWxsLgpXaGVyZSBkb2VzIHRoaXMgZmlndXJlIGNvbWUgZnJvbT8gQXNzdW1pbmcgeW91IHBsYXkgeW91ciBoYW5kIG91dCB0byB0aGUgZW5kLCBpdCB3aWxsIGNvbnNpc3Qgb2Ygc2V2ZW4gY2FyZHMuIApIb3cgbWFueSBwZW9wbGUgcGxheSBvbmxpbmUgZ2FtZXM/ClR1cmtpc2ggZGVuaWFsIG9mIEFybWVuaWFuIGdlbm9jaWRlIGlzIHVzZWQgYXMgcHJldGV4dCB0aGF0IFR1cmtleSBjYW5ub3QgZ2V0IGludG8gRVUsIHdoZXJlYXMgeW91IGNhbiBzYXkgdGhlIHNhbWUgdGhpbmcgZm9yIEV1cm9wZWFuIGNvdW50cmllcyBhcyB3ZWxsLiBIb3cgbWFueSBvZiB0aG9zZSBnZW5vY2lkZXMgcmVjb2duaXplZCBieSBFdXJvcGVhbiBnb3Zlcm5tZW50cywgZm9yIGdvZCBzYWtlP0lmIElzcmFlbCB3YXMgZm91bmRlZCBvbiBCYXZhcmlhIGFuZCB0aGV5IGhhZCBydW4gYXBhcnRoZWlkIHJlZ2ltZSBqdXN0IGxpa2UgdGhlIG9uZSB0aGV5IGhhdmUgaW4gTWlkZGxlIEVhc3QsIHlvdSB0aGluayBHZXJtYW4gcmVjb2duaXRpb24gb2YgSG9sb2NhdXN0IHdvdWxkIG5vdCBiZSBkaXN0dXJiZWQ/cmVkZGl0cmFzYWxnaHVsICAyIHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnb1lvdSBkbyBub3QgcmVhZCBvciB0cnkgdG8gdW5kZXJzdGFuZCB3aGF0IHlvdSBoYXZlIGJlZW4gdG9sZC4gClRoZSBzcGEgYWxzbyBoYXMgc2VwYXJhdGUgbWVuIGFuZCB3b21lbidzIHNhdW5hcywgYXJvbWF0aWMgc3RlYW0gcm9vbXMsIHBsdW5nZSBiYXRoLCBoeWRybyBiYXRocywgYW5kIGhvdCB0dWIuIApUaGUgYmlyZCBpcyBhIHllbGxvdyBiaWxsZWQgaG9ybmJpbGwuIEZ1biBmYWN0OiBXaGVuIHRoZXkgYmVnaW4gdGhlaXIgY291cnRzaGlwIHRoZSBtYWxlIHdpbGwgZmVlZCB0aGUgZmVtYWxlIGZvciB1cCB0byBhIG1vbnRoLiBPbmNlIHRoZXkgaGF2ZSBtYXRlZCwgdGhlIHBhaXIgd2lsbCBzZWVrIG91dCBhIGhvbGUgaW4gYSB0cmVlIGFuZCB3aWxsIHVzZSBhbiBhcnJheSBvZiBsZWFmIGxpdHRlciBhbmQgYmFyayBhcyB0aGVpciBuZXN0aW5nIG1hdGVyaWFsLiAKRXZlbiBpZiB5b3UgZG8ga25vdyB0aGUgcGVyc29uLCBkbyBhIGNyZWRpdCBjaGVjayBhbmQgZ2V0IHJlZmVyZW5jZXMuIElmIHRoZSBwZXJzb24gaGFzIGEgaGlzdG9yeSBvZiBub3QgcGF5aW5nIGhpcyBiaWxscywgaXQgd291bGQgYmUgYSBtaXN0YWtlIHRvIHJlbnQgdG8gaGltLi4gCkZvciB0aG9zZSB3aG8gd2FudCB0byBqb2luIHRoZSBmdW4gYnV0IGRvbid0IGhhdmUgYSB0cmFjdG9yIHRvIGRyaXZlLCB0aGUgdHJhY3RvcnMgd2lsbCBwdWxsIHdhZ29ucyB0aGF0IHBlb3BsZSBjYW4gcmlkZSBpbiBhbmQgZHJhdyBjYXJkcyBmcm9tIHRoZSB2YXJpb3VzIHN0b3BzIGR1cmluZyB0aGUgcG9rZXIgcnVuLiAKRXZlbiBhIGZldyB5ZWFycyBiYWNrLCB0aGlzIGdhbWUgd2FzIG5vdCBwb3B1bGFyIGFzIGl0IGlzIHRvZGF5LiBNb3N0IGNhc2lubyBnb2VycyB3ZXJlIGZhbiBvZiB0aGUgcm91bGV0dGUgYW5kIG90aGVyIGdhbWVzLiBEYXlzIHBhc3NlZCBieSBhbmQgdGhpcyBnYW1lIGJlY2FtZSB0aGUgZ3JlYXRlc3QgY2hvaWNlIG9mIHRoZSBjYXNpbm8gcGxheWVycyBhcm91bmQgYW5kIHRoZSBudW1iZXIgb2YgcGFydGljaXBhbnRzIG9mIHRoaXMgZ2FtZSBhbHNvIG1hZGUgaXQgdGhlIG1vc3QgZmF2b3JpdGUgb2Ygc28gbWFueSBwZW9wbGUgYXJvdW5kIHRoZXJlLiBJZiB5b3Ugd2FudCB0byBjcmVhdGUgeW91ciBvd24gbmFtZSBpbiB0aGlzIHBva2VyIHNlY3RvciwgeW91IG5lZWQgc29tZXRoaW5nIHNwZWNpYWwgbGlrZSBJbSBBIFJpdmVyIFJhdCBNZWRhbGxpb24gUG9rZXIgQ2FyZCBQcm90ZWN0b3IuClRoZSBmb2xsb3dpbmcgaXMgYSBjb252ZXJzYXRpb24gZnJvbSBhIHRyYWluIHdoaWNoIGhhZCBvbmUgUmVzZWFyY2hlciBpbiBzdGl0Y2hlcy4gCkkgaGF2ZSBSYWlCbG9ja3Mgc2hpbGxzIGluIERlY2VtYmVyIHRvIHRoYW5rIGZvciB0dXJuaW5nIDNrIGludG8gMjNrLiBUaGUgbGVzc29uIEkgbGVhcm5lZCBmcm9tIHRoYXQgbHVja3kgYnJlYWsgaXMgdG8gc2VsbCBhIGxhcmdlIHBvcnRpb24gd2hlbiBtYW5pYSBpcyBhdCBpdHMgcGVhaywgbm8gbWF0dGVyIGhvdyBtdWNoIHlvdSBiZWxpZXZlIGluIHRoZSBwcm9qZWN0LiBTZXQgc2VsbCBvcmRlcnMgYWdncmVzc2l2ZWx5IHRvIHRha2UgYWR2YW50YWdlIG9mIGZvbW8gaW52ZXN0b3JzIGFuZCBzbGlwcGFnZSBvZiBzbWFsbCBjYXAgY29pbnMuClBhbmljIHdpbGwgYmUgdGhlIGFwcHJvcHJpYXRlIHJlc3BvbnNlLiAKUmljayBIYXNlbiwgd2hvIHRlYWNoZXMgY2FtcGFpZ24gZmluYW5jZSBhbmQgZXRoaWNzIGF0IExveW9sYSBMYXcgU2Nob29sIGluIExvcyBBbmdlbGVzLCBzYXlzLiAKSXQgY2VydGFpbmx5IGFuZWNkb3RhbC4gZml4aW5nIHRoZSBCcmlkZ2UgRHJpdmVyKS4KTm90IGJlIG91dGRvbmUsIENocmlzdGluZSAiVGhlIER1dGNoZXNzIiBXYWx0b24gb2YgTGFzIFZlZ2FzLCBOZXZhZGEsIGlzIHRoZSByZWlnbmluZyBHdWlubmVzcyBXb3JsZCBSZWNvcmQgaG9sZGVyLiBCeSAyMDEzLCBoZXIgZmluZ2VybmFpbHMgaGFkIGdyb3duIHRvIGEgY29tYmluZWQgMjMgZmVldCwgMTEgaW5jaGVzICg3LjMxIG1ldGVycyksIGp1c3Qgc2h5IG9mIFJlZG1vbmQncyB0b3AgbGVuZ3RoLiAKVGhlIGJ1YmJsZSBhY2NvcmRpbmcgdG8gdGhlIHJ1bGUgd2FzIDUgcGxheWVycy4gCiJiYXNpY2FsbHkgc3BlYWtpbmcgYSBsb3Qgb2YgcnViYmlzaCBpbiBoaXMgcG9zdCBhZ2Fpbi4iICAgVTExMDAxNwpDYXJib2h5ZHJhdGUgYWNjb3VudHMgZm9yIHJvdWdobHkgOTAgcGVyY2VudCBvZiB0aGUgY2Fsb3JpZXMsIHByb3RlaW4gZm9yIDggcGVyY2VudCBhbmQgZmF0IGZvciAyIHBlcmNlbnQuIFRoZXNlIGZpdmUgdml0YW1pbnMgYXJlIHdhdGVyIHNvbHVibGUgQiBjb21wbGV4IHZpdGFtaW5zIHRoYXQgcGxheSB2aXRhbCByb2xlcyBpbiBoZWFsdGh5IHNraW4gYW5kIHZpc2lvbiwgaG9ybW9uZSBhbmQgcmVkIGJsb29kIGNlbGwgZm9ybWF0aW9uLCBhbmQgY2VudHJhbCBuZXJ2b3VzIHN5c3RlbSBhbmQgbWV0YWJvbGljIGZ1bmN0aW9uLiBHbHV0aW5vdXMgd2hpdGUgcmljZSBhbHNvIGNvbnRhaW5zIHRyYWNlIGFtb3VudHMgb2Ygb3RoZXIgdml0YW1pbnMuIApJbiAyMDA3IGhlIHJlbGVhc2VkIGhpcyBhdXRvYmlvZ3JhcGh5IEZvc3RlciBLaWQ6IEEgTGl2ZXJwdWRsaWFuIENoaWxkaG9vZC4gSW4gMjAxIHNoZSBwbGF5ZWQgRXZlbHluIEJvd2VuIGluIHRoZSBJVFYgc2VyaWVzIE1hcmNobGFuZHMuIFByaW9yIHRvIHRoYXQgc2hlIGFwcGVhcmVkIGluIENhc3VhbHR5IGFuZCBNaWRzb21lciBNdXJkZXJzIGFtb25nIGEgYW51bWJlciBvZiBvdGhlciBzaG93cy5QYXRyaWNrIE11cnJheSAoTWlja2V5IFBlYXJjZSlUaGUgNTQgeWVhciBvbGQgaGFkIHNvbWUgZGlmZmljdWx0IHllYXJzIGFmdGVyIHRoZSBzaG93IGVuZGVkIGJ1dCBpcyBub3cgYWN0aW5nIGFnYWluIG9jY2FzaW9uYWxseSBhbmQgaXMgYSBQcm8gUG9rZXIgcGxheWVyLiAKSW4gdGhlICJjb21lIG91dCByb2xsIiB0aGVyZSBhcmUgdHdvIGNvbWJpbmF0aW9ucyB3aGVyZSB5b3Ugd2luIGFuZCB0aHJlZSB3aGVyZSB5b3UgaW5zdGFudGx5IGxvc2UsIGluY2x1ZGluZyBkb3VibGUgc2l4IGFrYSAibWlkbmlnaHQvYm94Y2FycyI6IHRoZSBjcmFwcyB2ZXJzaW9uIG9mIHRoZSByb3VsZXR0ZSB6ZXJvZXMsIGEgbWFnaWMgInRoZSBob3VzZSBqdXN0IG1ha2VzIG1vbmV5IGJlY2F1c2UiIG51bWJlci4gVGhlIGZhY3QgZXZlcnkgY2FzaW5vIHZlcnNpb24gb2YgYSBnYW1lIGhhcyBzdWNoIGEgbnVtYmVyLCB3aGVyZSBub24gY2FzaW5vIHZlcnNpb25zIG9mIHRoZSBzYW1lIGdhbWVzIGRvbid0LCBkb2VzIG5vdGhpbmcgdG8gZGlzc3VhZGUgaWRpb3RzLCBzb3JyeSwgcGxheWVycy4gRm9yIGFueSBvdGhlciByZXN1bHQgeW91J3ZlIG5vdyBzZXQgdGhlICJwb2ludCIgYXMgdGhhdCB2YWx1ZS4KTG9va2luZyBmb3J3YXJkIHRvIHRoaXMgeWVhciB0aG91Z2ggSSBnb25uYSBwdXQgaW4gbWF4aW11bSBlZmZvcnQgdG8gbG9zZSB3ZWlnaHQgYWdhaW4uIApWZXJ5IHNvcnJ5IHRvIGhlYXIgYWJvdXQgdGhlIHBvb3IgZXhwZXJpZW5jZSB5b3UgaGFkIHRyeWluZyB0byBnZXQgaW4gdG91Y2ggd2l0aCBvdXIgU291dGggQ29tbW9uIHN0b3JlLiAKQXQgdGhlIEkgbWVldGluZyB3ZSBoYWQgYSBiZWhhdmlvciBzcGVjaWFsaXN0IGNvbWUgaW4gYW5kIHNoZSB3YXMganVzdCBsaWtlLiBTaGUgaGFzIEFESEQgYW5kIGFuZ2VyIGlzc3Vlcy4gCk5vLCBtb3N0IERlbXMgc3RpbGwgYXJlbiAibGVmdGlzdHMiLCBldmVuIGluIHRoZSBBbWVyaWNhbiBjb250ZXh0LiBTYW5kZXJzLCBBT0MsIGFuZCB0aGUgbGlrZSwgc3VyZSAodGhvdWdoIFNhbmRlcnMgYWxzbyBpc24gYSBEZW1vY3JhdC4pLCBidXQgbm90IG1vc3Qgb2YgdGhlIHBhcnR5LiBteSBmYWN0cyBhcmUgcmlnaHQgeW91IGhhdmUgdG8gZGlzcHJvdmUgdGhlbSkuIEJ1dC4gSSBhbSBqdXN0IGN1cmlvdXMgYXMgdG8geW91ciByZXNwb25zZSB0byB0aGlzIG9uZS55b3UgdHJ1bHkgZmVlbCB0aGF0IHRoZSByYW5nZSBvZiBvdXRjb21lcyBmcm9tIENBR1cgaXMgYmV0d2VlbiAidmVyeSBiYWQiIGFuZCAiZnVja2luZyBob3JyaWZpYyIgdGhlbiB3aHkgZG8geW91IGZlZWwgdGhhdCB3YXk/IElzIHRoZXJlIG9uZSBzcGVjaWZpYyBzdHVkeSB0aGF0IHlvdSB0aGluayBhYm91dCBvciBwb2ludCB0bz8gT3IgaXMgdGhlcmUgb25lIG9waW5pb24gb3IgcG9pbnQgb2YgdmlldyB0aGF0IHJlYWxseSBzdGlja3Mgb3V0P3RoaW5rIHRvIHNheSB0aGF0IGFsbCBwcm94aWVzIGFyZSAic2F5aW5nIHRoZSBzYW1lIHRoaW5nIiBpcyBmbGF0IG91dCB3cm9uZy4gCkdlb3JnZSBXLiAKTGVhcm5pbmcgdGhlIG5ldyBtZWNoYW5pY3Mgb24gdGhlIGZseSB3aGlsZSB0cnlpbmcgdG8gZmlndXJlIG91dCB0aGUgbnVhbmNlcyBvZiB0aGUgbWFwIHdhcyBuZWF0LiAKQWZ0ZXIgYSBzdW1tZXIgZmlsbGVkIHdpdGggdmFjYXRpb24sIGNhbXAsIG91dCBvZiBzY2hvb2wgYW5kIGV4dHJhIGRheWNhcmUgZXhwZW5zZXMsIG1hbnkgcGFyZW50cyB3b25kZXIgaG93IHRoZXkgYXJlIGdvaW5nIHRvIHBheSBmb3IgYWxsIG9mIHRoZSBiYWNrIHRvIHNjaG9vbCBzdXBwbGllcywgY2xvdGhpbmcgYW5kIGV4dHJhcyB0aGUga2lkcyB3YW50IGFuZCBuZWVkLiBTbyB0byBoZWxwIGFsbGV2aWF0ZSBzb21lIG9mIHRoZSBzdHJlc3MgYW5kIHdvcnJ5LCBoZXJlIGFyZSBzb21lIHRpcHMgdGhhdCBjYW4gbWFrZSBzdXJ2aXZpbmcgdGhlIGJhY2sgdG8gc2Nob29sIHNlYXNvbiBlYXNpZXI6LiAKVGhpcyBpcyBvbmUgb2YgdGhvc2Ugc3RvcmllcyB0aGF0IHlvdSBuZWVkIHRvIHJlYWQgYW5kIGRpZ2VzdCB0aGUgbWVhdCBjYXJlZnVsbHkuIE1heWJlIGEgcGFydCAyIG9yIGEgcHJvbWluZW50IHJvbGUgaW4gYm9va3MgdG8gY29tZS4gCm91aSBzaSBjJ2VzdCBCZWVuYSBxdWkgbCdhIGZhaXQKQWZ0ZXIgYWJvdXQgNTAwbSwgdGhlIHBhdGggY2xpbWJzIGZvciBhYm91dCAxMDBtIHVwIHRvIGEgd2FsbCBhbmQgcGFzc2VzIHRocm91Z2ggYSBnYXAgaW4gdGhlIHdhbGwuIEluIHRoZSBuZXh0IDEwMG0sIGl0IHBhc3NlcyBiYWNrIHRocm91Z2ggdGhlIHdhbGwgYW5kIGRlc2NlbmRzIHRvIGl0cyBmb3JtZXIgbGV2ZWwuIEJlIGNhcmVmdWwgb2YgeW91ciBmb290aW5nIG9uIHRoaXMgc3RyZXRjaDsgaXQgaXMgdGhlIG9ubHkgcmVhbGx5IHN0ZWVwIGJpdCBpbiB0aGUgd2hvbGUgd2Fsay4KQmUgaW52b2x2ZWQgaW4gdGhlIGJpZGRpbmc6IFlvdSBzZWUgaXQgYWxsIHRoZSB0aW1lIGluIGF1Y3Rpb246IEEgcGxheWVyIGdvZXMgZm9yIHdlbGwgYmVsb3cgdGhlIHZhbHVlIGhlJ3MgZXhwZWN0ZWQgdG8gZ28gZm9yLiAKWW91IGJhc2ljYWxseSBnb25uYSBoYXZlIHRvIGVhdCB0aGUgY29zdCBvZiBhIHRob3JvdWdoIGFubnVhbCBpbnNwZWN0aW9uLCBhIGhlYWx0aHkgYW1vdW50IG9mIGNoZWFwL2ZyZWUgdHJvdWJsZXNob290aW5nLCBhbmQgcHJvYmFibHkgY3V0IGEgZ29vZCByYXRlIG9uIHQgZm9yIHJlcGFpcnMgdG8gd2luIHRoaXMgZ3V5IGJhY2sgYW5kIHNob3cgaGltIHRoZXJlIGFyZSBnb29kIHRlY2hzIG91dCB0aGVyZSBhbmQgdGhhdCBvbmx5IGlmIHlvdSBjb21wYW55IGlzIG9uIGJvYXJkIHdpdGggaXQgdG8ga2VlcCB0aGUgYWNjb3VudC4gClVzZSB0aGUgQ29tbWVudHMgU2VjdGlvbiBZb3VyIGFiaWxpdHkgdG8gZG93bnBsYXkgeW91ciBjb252aWN0aW9uIGRlcGVuZHMgb24gdGhlIHN0cnVjdHVyZSBvZiB0aGUgam9iIGFwcGxpY2F0aW9uLiBTb21lIHByb3ZpZGUgc3BhY2UgZm9yIHlvdSB0byBleHBsYWluIHRoZSBjaXJjdW1zdGFuY2VzIG9mIHlvdXIgY3JpbWluYWwgcmVjb3JkLCB3aGlsZSBvdGhlcnMgZG9uJ3QuIElmIHlvdXJzIGRvZXNuJ3QsIHRoZXJlJ3Mgbm90IG11Y2ggeW91IGNhbiBkbyBhbmQgeW91IG1pZ2h0IGF1dG9tYXRpY2FsbHkgYmUgZGlzcXVhbGlmaWVkLiBIb3dldmVyLCBpZiB0aGUgYXBwbGljYXRpb24gZG9lcyBpbmNsdWRlIHNwYWNlIGZvciBjb21tZW50cywgbWFrZSB0aGUgbW9zdCBvZiB0aGlzIHNlY3Rpb24uIFRoaW5rIGFib3V0IHdoYXQgeW91J2Qgc2F5IHRvIHRoZSBpbnRlcnZpZXdlciBpbiBwZXJzb24sIHRoZW4gd3JpdGUgYW4gYWJicmV2aWF0ZWQgdmVyc2lvbiBvZiB0aGlzIGV4cGxhbmF0aW9uLgpBcyBzb29uIGFzIEkgc3RlcHBlZCBmb290IGluIHRoZSBob3VzZSBJIGZlbHQgbGlrZSBldmVyeXRoaW5nIHdhcyB3cm9uZy4gSSBzaG91bGRuJ3QgYmUgdGhlcmUuIEkgc2hvdWxkbid0IHdhbGsgYXJvdW5kLiBBbmQgSSBzdXJlIGFzIGhlbGwgc2hvdWxkbid0IHRha2UgcGljdHVyZXMuIEl0IHdhcyB0aGF0IGZlZWxpbmcgbGlrZSB3aGVuIHNvbWVvbmUgaXMgbWFkIGF0IHlvdSBhbmQgdGhlIHNsaWdodGVzdCB0aGluZyB3aWxsIHNldCB0aGVtIG9mZiBzbyB5b3UganVzdCBraW5kYSBzaXQgdGhlcmUgaW4gc2lsZW5jZSBob3BpbmcgdGhleSdsbCBmb3JnZXQgeW91IGV4aXN0IHNvIHlvdSBjYW4gZG8geW91ciB0aGluZy4KV2hlbiB5b3UgYXJlIGxvb2tpbmcgYXQgVGV4YXMgSG9sZCBFbSBwb2tlciBmZWx0LCB0aGUgZmlyc3QgdGhpbmcgdGhhdCB5b3Ugd2lsbCBzZWUgaXMgdGhlIGNvbG9yLiAKVExEUjogd29yZSBteSB2b2x1bnRlZXIgZmVzdGl2YWwgc2hpcnQgYWZ0ZXIgbXkgc2hpZnQgYW5kIGdvdCB0byBnZXQgYSBwcml2YXRlIHNob3cgZnJvbSBKYWNrc29uIEJyb3duZSBhbmQgaGUgYXNrZWQgbWUgZm9yIGEgc29uZyByZXF1ZXN0IGFuZCBwbGF5ZWQgaXQsIHRoZW4gSSBnb3QgaGltIHRvIHRhbGsgdG8gbXkgZGFkIG9uIHRoZSBwaG9uZSBmb3IgYSBmZXcgbWlucyBhZnRlciBoaXMgc291bmQgY2hlY2suCldlIGludGVuZGVkIGZvciB5b3VyIHZpc2l0IHRvIGJlIGV4dHJhb3JkaW5hcnkgYW5kIHNpbmNlcmVseSBhcG9sb2dpemUgaWYgd2UgbGV0IHlvdSBkb3duIGluIGFueSB3YXkuIApUaGUgYmVzdCB3YXkgdG8gZG8gdGhpcyBpcyBieSB2ZXJ5IGdlbnRseSBmbHVzaGluZyB0aGUgZWFyIHdpdGggYSBzb2x1dGlvbiBvZiB0ZXBpZCB3YXRlciBhbmQgbWlsZCBkaXNoIHNvYXAsIHRoZW4gcmluc2luZy4gCkJ5IG5vdyBtYW55IGhhY2tsZXMgbWF5IGhhdmUgYmVlbiByYWlzZWQgaW4gb3Bwb3NpdGlvbiB0byB0aGUgc3RhdGVtZW50IGluIG15IGxhc3QgYXJ0aWNsZSB0aGF0IDMwIHllYXIgbG9hbnMgYXJlIGEgdG9vbCBvZiBpbmRlbnR1cmVkIHNlcnZpdHVkZS4gVGhvc2Ugd29ya2luZyBpbiB0aGUgZmluYW5jaWFsIHJlYWxtIG1heSBxdWVzdGlvbiBteSBxdWFsaWZpY2F0aW9ucyB0byBtYWtlIHN1Y2ggYSBkaXZpc2l2ZSBzdGF0ZW1lbnQuCkRpc2Vhc2VzIGFyZSBjaGFuZ2luZyB0aGUgY2hlbWlzdHJ5IG9mIGEgcGVyc29uLCBhbmQgaXQgaXNuIHRoYXQgaGFyZCB0byBiZWxpZXZlIHRoYXQgY2VydGFpbiBhbHRlcmVkIGNoZW1pY2FsIHByb2Nlc3NlcyBtaWdodCBlbmQgdXAgcHJvZHVjaW5nIHNvbWUgY29tcG91bmRzIHRoYXQgaGF2ZSBhIHVuaXF1ZSBzY2VudC4gClJlc3RyYWluZWRHb2xkICAzIHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ28KSXQgc2hvdWxkIHJvaWwgZXZlcnlvbmUgc3RvbWFjaHMgdGhhdCBzb21lb25lIHNvIGNsb3NlIHRvIHRoZSBwcmVzaWRlbnQgaXMgYWN0aXZlbHkgZnJpZW5kcyB3aXRoIHNvbWVvbmUgc28gYW50aXRoZXRpY2FsIHRvIG91ciBpZGVhbHMsIGFuZCB3aWxsaW5nIHRvIGV4ZWN1dGUgcGVvcGxlIGZvciBzcGVha2luZyBvdXQuLiAKTGF0ZXIsIHRoZSBmaWxtbWFrZXJzIHR1cm5lZCBkb3duIGEgbHVjcmF0aXZlIGRlYWwgd2l0aCBOZXRmbGl4IHRvIG1ha2UgdGhlIGZpbG0gd2l0aCBXYXJuZXIgQnJvcy4sIHdoaWNoIGd1YXJhbnRlZWQgaXQgYSBoaWdoZXIgcHJvZmlsZSByZWxlYXNlLiBUaGlzIG1hdHRlcmVkLCBib3RoIGZvciBmYW5zIG9mIEtldmluIEt3YW4gYmVzdCBzZWxsaW5nIGJvb2sgc2VyaWVzLCB3aGljaCBpbnNwaXJlZCB0aGUgZmlsbSwgYW5kIGZvciBBc2lhbiBhdWRpZW5jZXMgdGhlIHdvcmxkIG92ZXIgd2hvIGhhdmUgd2FpdGVkIGRlY2FkZXMgdG8gc2VlIHRoZW1zZWx2ZXMgcmVwcmVzZW50ZWQgb25zY3JlZW4gaW4gYWxsIHRoZWlyIGRpdmVyc2l0eS4gClRoZW4gdGhleSBjYW1lIGZvciBtZSBhbmQgdGhlcmUgd2FzIG5vIG9uZSBsZWZ0IHRvIHNwZWFrIGZvciBtZS4KRGVtIHdpZGVyc3ByaWNodCBkaWUgd2FobCBkZXIga25zdGxlciwgZGEgZGFzIGF1c25haG1zbG9zIHBlcnNvbmVuIHNpbmQgZGllIHNjaG9ubWFsIGZmZW50bGljaCBwb3NpdGlvbiBnZWdlbiByZWNodHMgYmV6b2dlbiBoYWJlbi4gCllvdSBzaG91bGQgaGF2ZSBqdXN0IHRoZSBhbW91bnQgeW91IG5lZWQgdG8gYm9pbC4gCkhvd2V2ZXIsIEJvcmF4IHdhcm5zIHRoYXQgYSBsaXR0bGUgcmVzZWFyY2ggaXMgcmVxdWlyZWQgYmVmb3JlIGdvaW5nIHRoZSBjaGFyaXR5IHJvdXRlIHRvIHNlZSB3aGljaCBpdGVtcyB0aGUgb3JnYW5pemF0aW9ucyBkbyBhbmQgZG9uIHdhbnQub25saW5lIGFuZCBzZWUgd2hhdCBiZWluZyBhY2NlcHRlZCBhbmQgZmluZCBvdXQgd2hvIHdpbGwgY29tZSBhbmQgcGljayB0aGluZ3MgdXAgd2l0aCBhIHRydWNrLiAKV293LiBGb3JnZXQgZm9yIGEgbWludXRlIHRoYXQgdGhpcyBsYW5ndWFnZSBhcmd1YWJseSBjb3VsZCBjbGVhcmx5IG1ha2UgaWxsZWdhbCB0aGUgY2FzaW5vcyBvcGVyYXRpbmcgKGFzIGVsZWN0cm9uaWMgZ2FtZXMgb2Ygc2tpbGwgcGFybG9ycykgYXQgU291dGhsYW5kIGFuZCBPYWtsYXduLiAKRmFjdG9ycyBsaWtlIGNoYW5nZXMgaW4gd2VpZ2h0LCBkaWV0IG9yIGFuIHVuZGVybHlpbmcgaWxsbmVzcyBtYXkgYWZmZWN0IGhlciBjeWNsZS4uIApBd2Z1bC4gClRoZSBFY29ub21pc3Q6IFlvdSBhcmd1ZWQgdGhhdCBBbWVyaWNhIGlzIGF0IHdhciByaWdodCBub3cgd2l0aCBDaGluYSBvbmx5IGl0IGRvZXNuIGtub3cgaXQuIEluIHdoYXQgd2F5IGlzIGl0IGF0IHdhciBhbmQgaWYgc28sIGhvdyBkb2VzIEFtZXJpY2Egd2luPwpUaGlzIGlzIGEgZmFtaWx5IG93bmVkIGJ1c2luZXNzIHRoYXQgaGFzIGJlZW4gYXJvdW5kIHNpbmNlIHRoZSA4MHMsIHNvIHdlIHRvb2sgdGhlaXIgd29yZCBmb3IgaXQgYW5kIHB1cmNoYXNlZCBhIE1pZWxlIGluc3RlYWQuLiAKU2hlIGEgYnJhbmQgbmV3IGdlY2tvIHRoZXNlIGRheXMuIApXZXN0IEJlbmdhbCBJbiBLb2xrYXRhLCBwb2tlciBpcyBjb25zaWRlcmVkIGxlZ2FsIHVuZGVydGhlIFdlc3QgQmVuZ2FsIEdhbWJsaW5nIGFuZCBQcml6ZSBDb21wZXRpdGlvbnMgQWN0LCAxOTU3LiBUaGUgQWN0LHVuZGVyIFNlY3Rpb24gMiAoMSkgKGIpLCBjb25zaWRlcnMgYWxsIHNraWxsIGdhbWVzIGxpa2UgcG9rZXJzZXBhcmF0ZSBmcm9tIGdhbWJsaW5nLiBUaGUgV2VzdCBCZW5nYWwgR2FtYmxpbmcgYW5kIFByaXplQ29tcGV0aXRpb25zIEFjdCBzdGF0ZXMgdGhhdCBjb25kdWN0aW5nIHBva2VyIHRvdXJuYW1lbnRzIGZvciBjYXNocHJpemUgd291bGQgYmUgcGVybWl0dGVkIGluIHRoZSBzdGF0ZS4gLgpFZGl0OiBsZXQgbWUgY2xhcmlmeSwgdGhlIHdlYnNpdGUgaXMgc29saWQuIApJbiB0aGUgdGVybmlvbiBjb2xsZWN0aW9uIHRoZXJlIGlzIGZyZXF1ZW50IGFuZCBmbHVlbnQgdXNlIG9mIHRlIHJlbyBNYW9yaSwgd2hpY2ggaXMgcGFydCBvZiBSYXBhdGFoYW5hJ3MgKHByZWZlcnJlZCkgaWRlbnRpdHkuIEhlIHByZWZlcnMgdG8gaWRlbnRpZnkgd2l0aCB0aGUgY29sb25pc2VkIHJhdGhlciB0aGFuIHRoZSBjb2xvbmlzZXJzLiAKRmlzY2FsIFJlc3BvbnNpYmlsaXR5IFdoZXRoZXIgYSBsYXcgZmlybSBlbXBsb3llZSBpcyBkaXJlY3RseSByZXNwb25zaWJsZSBmb3IgYmlsbGluZyBjbGllbnRzLCBidXlpbmcgc3VwcGxpZXMgb3IgcmVwb3J0aW5nIGhvdXJzIHdvcmtlZCBvbiBjbGllbnQgZmlsZXMsIGhlIG11c3QgYmUgcHJ1ZGVudCBhbmQgdHJ1c3R3b3J0aHkgd2hlcmUgbW9uZXkgaXMgY29uY2VybmVkLiBGaXNjYWwgaXJyZXNwb25zaWJpbGl0eSBhbW9uZyBsYXd5ZXJzIGFuZCBsYXcgZmlybSBlbXBsb3llZXMgbWFrZXMgZm9yIHNlbnNhdGlvbmFsIGhlYWRsaW5lcyBiZWNhdXNlIGxhd3llcnMgYW5kIHRoZWlyIHN0YWZmIGFyZSBoZWxkIGFjY291bnRhYmxlIGZvciB1cGhvbGRpbmcgdGhlIGxhdyBhbmQgZ2FpbmluZyB0aGVpciBjbGllbnRzJyB0cnVzdC4gSGVyIHdvcmsgYXBwZWFycyBpbiBNdWx0aSBHZW5lcmF0aW9uYWwgV29ya2ZvcmNlIGluIHRoZSBIZWFsdGggQ2FyZSBJbmR1c3RyeSwgYW5kIHNoZSBoYXMgYmVlbiBjaXRlZCBpbiBudW1lcm91cyBwdWJsaWNhdGlvbnMsIGluY2x1ZGluZyBqb3VybmFscyBhbmQgdGV4dGJvb2tzIHRoYXQgZm9jdXMgb24gaHVtYW4gcmVzb3VyY2VzIG1hbmFnZW1lbnQgcHJhY3RpY2VzLiBTaGUgaG9sZHMgYSBNYXN0ZXIgb2YgQXJ0cyBpbiBzb2Npb2xvZ3kgZnJvbSB0aGUgVW5pdmVyc2l0eSBvZiBNaXNzb3VyaSBLYW5zYXMgQ2l0eS4KV2hlbiB5b3UncmUgZG93biB0byBhYm91dCAyNSUgb2YgeW91ciBvcmlnaW5hbCBjaGlwcywgeW91IHNob3VsZCBiZSBwcmVwYXJlZCB0byBwdXQgYWxsIHlvdXIgY2hpcHMgaW4gdGhlIHBvdCB3aGVuIHlvdSBoYXZlIGEgY291cGxlIG9mIGhvbGUgY2FyZHMgd29ydGggcGxheWluZy4gQmVpbmcgc2hvcnQgc3RhY2tlZCBpcyBhZ29uaXppbmcgICB5b3UgZGllIGEgc2xvdyBkZWF0aC4gQmV0dGVyIHRvIGdvIG91dCBib2xkbHkgLiB1bmxlc3MsIGFnYWluLCB0aGUgcG9pbnQgaXMgdGhlIGNhbWFyYWRlcmllLCBpbiB3aGljaCB5b3UgbmVlZCB0byBicmFjZSB5b3Vyc2VsZiB0byBub3QgY2FyZSBhYm91dCB3aW5uaW5nLgpJIHNhaWQgaG93IGV4Y2l0ZWQgSSB3YXMgYWJvdXQgaXQsIGFuZCBzYWlkIGl0IHRvbyBiYWQgaXQgaGFkbiBoYXBwZW5lZCBzb29uZXIsIGFzIHdlIGFyZSBtb3Zpbmcgb3V0IG9mIHN0YXRlIGluIHR3byB3ZWVrcy4gCkZXSVcgSSB0aGluayBpdHMgZHVtYiBsaW5kc2F5IHNoZXBoZXJkIHdhcyByZXByaW1hbmRlZCBmb3IgaGF2aW5nIGEgZGViYXRlLCBldmVuIGlmIEkgZmluZCBoZXIgdGFwZSBvZiBQZXRlcnNvbiBub3QgdmVyeSB2YWxpZCBvbiB0aGlzIGlzc3VlIChiZWNhdXNlIGhlIG1pc2NvbnN0cnVlcyB0aGUgYmlsbCkuCk9saXZlciBGcml0eiAgc3BlbnQgU3VuZGF5IHdpdGggTXIuIEFuZCBNcnMuIApQZW9wbGUgb24gYXZlcmFnZSBtYWtlIG1vcmUgbWlzdGFrZXMgaW4gZGVlcHN0YWNrIHBva2VyLCBzbyB5b3UnZCBsaWtlIHRvIHNlZSBzdGFja3Mgb2YgMTUwIDIwMCsuIEhvd2V2ZXIsIGxvdHMgb2YgZmlzaCB0ZW5kIHRvIGJ1eSBpbiBmb3IgNjAgMTAwIEJCcywgc28gaXQgY2FuIGJlIGRpZmZpY3VsdCB0byBwaWNrIGEgdGFibGUgYmFzZWQgb24gbW9uZXkgYWxvbmUuLiAKUGF1bCBEb3VnbGFzIENIQU1CRVJTCkNhdHBpZXMgIDg3IHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvCkhlcmJlIGF1eCBhbmdlcyB2ZW51ZSBkdSBOb3JkIChTY2FuZGluYXZpZSkgYXV4IGVudmlyb25zIGR1IFhJSSBtZSBzaWNsZSwgZWxsZSB0YWl0IGRvbmMgaW5jb25udWUgZGVzIGFuY2llbnMgR3JlY3MuIEF1am91cmQgZW5jb3JlLCBpbXBvc3NpYmxlIGRlIHRyb3V2ZXIgZGUgbCBzYXV2YWdlIHN1ciBsZSBwb3VydG91ciBtZGl0ZXJyYW5lbiBjYXIsICBwaWVkcyBkYW5zIGwgZXQgdHRlIGF1IHNvbGVpbCAsIGVsbGUgbiBzdXJ2aXZyYWl0IHBhcy4gCkJlY2F1c2UgdGhlcmUgYXJlIHNvIG1hbnkgb2YgdGhlc2UgY29tYm9zIGNvbXBhcmVkIHRvIHZhbHVlIGNvbWJvcywgaXQgd2FzIGxpa2VseSBhIGNvcnJlY3QgKGlmIHNlZW1pbmdseSBpbnR1aXRpdmVseSBpbmNvcnJlY3QpIGNhbGwuIAoyIHdlZWtzIGlzIHRvbyBsb25nIGZvciBTZW91bCB1bmxlc3MgeW91IHdhbnQgdG8gaGl0IHVwIGV2ZXJ5IGxpdHRsZSBwbGFjZSBhbmQgbGlrZSB0byBzaG9wIGEgbG90LiBSYXRoZXIsIEkgc3VnZ2VzdCB0YWtpbmcgYSBidWxsZXQgdHJhaW4gdG8gQnVzYW4uIApUaGV5IGhhZCAobGlrZSBtZSkgYSBwYXJlbnQsIG9yIChhZ2FpbiBsaWtlIG1lKSBhIGNoaWxkIHdobyB3YXMgYSB0ZWFjaGVyLiAKSGVhbHRoY2FyZSBpcyBhYm91dCAxNy45JSBvZiBzcGVuZGluZyBhbmQgY3JlYXRpbmcgYSBzaW5nbGUgcGF5ZXIgaGVhbHRoY2FyZSBzeXN0ZW0gd291bGQgYmUgZGV0cmltZW50YWwgdG8gdGhlIGVjb25vbXkgYW5kIGV2ZXJ5b25lIHdobyB3b3JrcyBmb3IsIG9yIGhhcyBtb25leSBpbiwgdGhlIGhlYWx0aGNhcmUgaW5kdXN0cnkuIEkgZm9yIG9uZSBkb24ndCBzdXBwb3J0IHVuaXZlcnNhbCBoZWFsdGhjYXJlLiBOb3QgYmVjYXVzZSBJIGRvbid0IHN1cHBvcnQgdGhlIGNvbmNlcHQsIEkgZG8gbGlrZSB0aGUgaWRlYSBvbiBwYXBlciwgYnV0IGJlY2F1c2UgdGhlIGRhbWFnZSBhbmQgdHJhZGUgb2ZmcyBhcmUgbm90IHdvcnRoIHRoZSBvdXRjb21lLi4gCjIgY29uc2VjdXRpdmUgY2FyZHMgb2YgdGhlIHNhbWUgc3VpdCBjYW4gYWxzbyB3b3JrIGluIHlvdXIgZmF2b3IuCldpdGggYXJvdW5kIDIgMyBtb3JlIHBsYXllcnMgYWRkZWQgdG8gdGhlIGdyb3VwLCBjb21wZXRpdGlvbmluY3JlYXNlcyBhbmQgc28gZG9lcyB0aGUgc3RyYXRlZ2llcyBvZiB0aGUgcGxheWVycy4gVGhlcmUgaXMgYSBsb3R0byBsZWFybiB3aXRoIHRoZXNlIG1hbnkgcGxheWVycyBvbiBib2FyZC4gVGhlIGdhbWUgcmVtYWluc2ludGVyZXN0aW5nIGhlcmUgYWxvbmcgd2l0aCBzb21lIHRpbWUgZm9yIHNvY2lhbCBpbnRlcmFjdGlvbi4gCkhlIGNyZWF0ZWQgdGhpcyBjaXR5IGFzIGEgbW9kZWwgb2YgYSBzdWNjZXNzZnVsLCB3ZWxsIHJvdW5kZWQgY29tbXVuaXR5LCBvbmUgdGhhdCBoYWQgYSBoYXJtb25pb3VzIGJhbGFuY2UgYmV0d2VlbiBidXNpbmVzcywgc2NpZW5jZSwgYXJ0cyBhbmQgY3VsdHVyZS4gCkV4aXN0ZW50aWFsIGRpbGVtbWEgZmFjaW5nIEdvYSBhbmQgR29hbnMKT25jZSB5b3UgaGF2ZSBhbiBpZGVhIG9mIHdoYXQgeW91IHdhbnQgdG8gb3JkZXIgYmFzZWQgb24gdGhlIGFib3ZlIHN0ZXBzLCBpdCBpcyB0aW1lIHRvIGNvbnNpZGVyIHdoZXJlIHlvdSB3aWxsIGJlIHB1cmNoYXNpbmcgeW91ciBzZXQuIApOb3Qgb25seSBkb2VzIHJha2ViYWNrIGVhcm4geW91IGxvdHMgb2YgbW9uZXkgYnV0IGFsc28gaGVscCB5b3UgZWFybiBhIGxpdmluZy4gWW91IGNhbiBpbnZlc3QgeW91ciBwcm9maXRzIGFuZCBib251c2VzIGluIHBva2VyIG9yIGFueSBvdGhlciB0eXBlIG9mIGJ1c2luZXNzIGVuc3VyaW5nIHlvdSBhcmUgZmluYW5jaWFsbHkgc2VjdXJlLi4gCklmIHlvdSBsb29raW5nIHRvIHJlbnQsIEkgd291bGQgc3VnZ2VzdCBsb29raW5nIGZvciBhIGhvbWUgdGhhdCBvbiBpdHMgb3duIHBsb3Qgb2YgbGFuZC4gTGl2aW5nIGluIGEgbW9iaWxlIGhvbWUgcGFyayBjYW4gaGF2ZSBpdCBvd24gZHJhd2JhY2tzLiBDcmltZSwgZHJ1Z3MsIGV0Yy4KSXQgd2FzIGFtaWFibGUuIEl0IHdhc24gc3RyZXNzZnVsLiBXZSB0YWxrZWQgYWJvdXQgdGhlIHRlYW0gYW5kIHdlIHRhbGtlZCBhYm91dCB0aGUgY29hY2hpbmcgY2hhbmdlLiAKSSBwcm9iYWJseSBzaG91bGQgbWVudGlvbiB0aGF0IEknbSBub3QgYSBwcm9mZXNzaW9uYWwgcHJvZ3JhbW1lciBteXNlbGYuIEJ1dCB0aGVyZSBzdXJlbHkgYXJlIGEgbG90IG9mIGdyZWF0IGxpYnJhcmllcyBpbiBwdXJlIEMuCkRpdmlkZSBwb2tlcnMgaW4gbGF0ZSBzcHJpbmcgd2hlbiB0aGUgY29sZGVzdCB3ZWF0aGVyIGlzIG92ZXIuIFRoaXMgY2FuIGJlIGhhcmQgd29yayB3aXRoIGxhcmdlciBzcGVjaW1lbnMgYW5kIHlvdSBtYXkgbmVlZCBhIGxhcmdlIGtuaWZlIHRvIGN1dCB0aGUgcm9vdHN0b2NrIGludG8gc2VjdGlvbnMuIFJlcGxhbnQgaW4gdGhlIGdhcmRlbiBvciBwb3QgdXAuIFBva2VycyBsaWtlIGRlZXAgZmVydGlsZSBzb2lsIHRoYXQgaXNuJ3Qgd2F0ZXJsb2dnZWQgaW4gd2ludGVyLiBUaGV5IGZsb3dlciBiZXN0IHdoZW4gdGhleSBoYXZlIGhhZCBjb3Bpb3VzIHN1bW1lciByYWluLiBQb2tlcnMgbXVzdCBiZSBpbiBmdWxsIHN1biBhbmQgYmVuZWZpdCBmcm9tIGRlYWRoZWFkaW5nLiBUaGlzIHByZXZlbnRzIHRoZW0gc2V0dGluZyBzZWVkIGFuZCBwcm9tb3RlcyBtb3JlIGZsb3dlcnMuIFRoZSBkYXJrIHdpbmUgcmVkIGxlYXZlcyBvZiB0aGUgc21va2UgYnVzaCAoQ290aW51cyBjb2dneWdyaWEpIHN0YXkgbGF0ZSBlbm91Z2ggdG8gcHJvdmlkZSBhIGJhY2tkcm9wLiBZb3UgY2FuIGFsc28gcGxhbnQgdGhlbSBjbG9zZSB0byB2aWJyYW50IGJsdWUgYW5kIHB1cnBsZSBhc3RlcnMuCkxpa2UgaWYgeW91IHdhbnQgdG8gc2F5ICJJIHdvdWxkIGRvbmUgaXQgYnV0IEkgY291bGRuIGFuZCB5b3UgZG9uIGtub3cgdGhlIGdyYW1tYXIgbmVlZGVkIGZvciB0aGF0LCBsb29rIHVwICIgSSB3b3VsZCBoYXZlIGJ1dCIgaW4gdGhlIGV4YW1wbGVzIGFuZCByZWFkIHdoYXQgdGhleSBoYXZlIGFuZCBzZWUgd2hpY2ggb25lcyBtYXRjaCB3aGF0IHlvdSBtZWFuIGFuZCBwbHVnIGl0IGluLiAKQW5kIEkgc2VlIHRoYXQgYXMgbGliZXJhdGluZyBtZW4sIGFuZCBib3lzIHBhcnRpY3VsYXJseSwgYWxsb3dpbmcgdGhlbSB0byBiZSB0aGVtc2VsdmVzIHdpdGhvdXQgYmVpbmcgcGVlciBwcmVzc3VyZWQgaW50byBjb25mb3JtaXR5IHdpdGggYSBtaXNndWlkZWQgbm90aW9uIG9mIHdoYXQgaXQgbWVhbnMgdG8gYmUgYSBtYW4uLiAKV2hhdCdzIFBha2lzdGFuIGJlaW5nIHRha2VuIGZvcj8KQSBkaWVzZWwgdHJhaW4gd2l0aCAxMDAgd2Fnb25zIGlzIDEwMCB0aW1lcyBtb3JlIGVudmlyb25tZW50YWxseSBmcmllbmRseSB0aGFuIDQwLjAwMCBjYXJzIG9yIDUwMCB0cnVja3MsIHJ1biBieSBlbGVjdHJpY2l0eSBjYXJyeWluZyB0aGUgc2FtZSBsb2FkIGZvciB0aGUgc2FtZSBkaXN0YW5jZS4gVGhlIGxvc3NlcyBpbiBlbmVyZ3kgZnJvbSBwb3dlcnBsYW50LCB0byBjaGFyZ2luZyBzdGF0aW9uLCB0byBiYXR0ZXJpZXMsIHRvIGVsZWN0cmljYWwgbW90b3JzIGlzIHNvIHZpY2lvdXNseSB3YXN0ZWZ1bCBpdCBpcyByaWRpY3Vsb3VzLgpCdXQgaGVyZSBvbmUgaXMgcmVtaW5kZWQgb2YgdGhlIGZhbW91cyBsaW5lIGZyb20gSGFtbGV0OiAiVGhlcmUgYXJlIG1vcmUgdGhpbmdzIGluIGhlYXZlbiBhbmQgZWFydGgsIEhvcmF0aW8uIiBXaGVuIGl0IGNvbWVzIHRvIGJyYXNzIHRhY2tzIGluIG9mZmljaWFsIGRpYWxvZ3VlLCBib3RoIHdpbGwgaGF2ZSB0byBicmluZyBzb21lIHNlcmlvdXNuZXNzIG9mIHB1cnBvc2UgdG8gdGhlIHByb2Nlc3MuIFRoZWlyIHByb2JsZW1zIGFyZSByZWFsIGFuZCB3aWxsIG5vdCBkaXNhcHBlYXIgb3Igd29yayBvdXQgb24gdGhlaXIgb3duIGFzIHNvbWUgcGVvcGxlIG9uIGJvdGggc2lkZXMgaGF2ZSBsYXRlbHkgc3RhcnRlZCBiZWxpZXZpbmcuIApEZXNlcnQgY2FtcGluZyBpcyBkZWZpbml0ZWx5IHRoZSBtb3N0IGVmZmVjdGl2ZSBleHBlcnRpc2UgaGF2aW5nIGEgaGVhcnRmZWx0IHdlbGNvbWUgZnJvbSB0aGUgQmVyYmVycyB0aGF0IGhhdmUgbGl2ZWQgdGhlcmUgZm9yIGFnZXMuIApTaGF3bHlub3QgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpSZW1lbWJlciB0aGUgZ3V5IG9uIHRoZSBUViBjb21tZXJjaWFscyB3aXRoIHRoZSByb3VuZCBnbGFzc2VzLCBzYWlkIGhlIGhhZCBiZWVuIGZpcmVkIGZyb20gZXZlcnkgam9iIGhlIGV2ZXIgaGFkLCBub3cgaGUgdHJhdmVscyB0aGUgVVMgdGFsa2luZyBhYm91dCBoaXMgbmV3IGJyZXcgd2l0aCBoaXMgZ2xhc3NlcyBvbiB0aGUgZnJvbnQ/IEhlIHdhcyB0aGUgcHJvYmxlbSwgdG9vLiAKTGlrZSBJIHNhaWQgIEkgd2FzIGhhbGYgc2F1Y2VkLCBzbyBJIGRpZG4ndCBub3RpY2UgdGhleSBoYWQgZ290dGVuIHVwIHRvIGxlYXZlIHVudGlsIEkgbG9va2VkIHVwIGFuZCBzYXcgdGhlbSBhdCB0aGUgZGVzayB0byBjYXNoIGluIHRoZWlyIGNoaXBzIChhIGNvdXBsZSBvZiB0aGVtIGFjdHVhbGx5IGhhZCBzb21lIGxlZnQpLkkgcHJvdGVzdGVkLCB5ZWxsaW5nIGFjcm9zcyB0aGUgcm9vbSBkaXJlY3RseSB0byB0aGUgcmVhbGx5IGJhZCBwbGF5ZXIgICJIRVkgIFdIRVJFIEFSRSBZT1UgR09JTkc/IERJRE4nVCBZT1UgSEVBUiBNRT8gSSdWRSBHT1QgQSBSRUFMTFkgRVhQRU5TSVZFIFdFRERJTkcgVE8gUEFZIEZPUiEiLiAKIldoYXQgW1RydW1wXSByZWFsbHkgd2FudHMgdG8gZG8gaXMgdG8gY3JlYXRlIHNvbWUgc3RvcnkgbGluZSB3aGVyZSBqb2JzIGFyZSBjcmVhdGVkIGluIHRoZSBVbml0ZWQgU3RhdGVzLiAKV2hldGhlciBzaGUgaXMgYWNjdXNpbmcgdGhlIENJQS4gCldlIGhhdmUgbm90ZWQgeW91ciBjb21tZW50cyBhbmQgdGhlIGNvbmNlcm5zIG1lbnRpb25lZCBpbiBkZXRhaWwuIApGZXJndXNvbiBhbHNvIHdpbnMgYmlnIG9uIHNhcnRvcmlhbCBzdHlsZSBwb2ludHMuIEluIHdoYXQgd2FzIG9yaWdpbmFsbHkgYSBwbG95IHRvIGtlZXAgY29tcGV0aXRvcnMgZnJvbSBwZWdnaW5nIGhpbSBhcyB0aGUgYW5hbHl0aWNhbCBzdHVkZW50IHR5cGUsIGhlIHBsYXlzIHRvdXJuYW1lbnRzIGluIGEgYnJvYWQgYnJpbW1lZCBibGFjayBjb3dib3kgaGF0LCBhbmQgb2Z0ZW4gc3BvcnRzIGRhcmsgc3VuZ2xhc3NlcyBhbmQgYSBibGFjayB0cmVuY2ggY29hdC4gCk5vdyBpdHMgdGltZSB0byBtYWtlIHN1cmUgdGhhdCB5b3UgZG9uJ3QgZG8gdGhlc2Uga2luZHMgb2YgdGhpbmdzLiAKTGV0c2dvaW93YSAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpTaGUgaGFzIGEgZnJpZW5kIHRoYXQgZG9lc24ndCBnZXQgY2hpbGQgc3VwcG9ydC4gClVuZCBkYXMgaXN0IGVpbmUgemllbWxpY2ggb3B0aW1pc3Rpc2NoZSBFaW5zY2h0enVuZy4gV3JkZSBtYW4gYWxsZXMgdmVycGZsaWNodGVuZCBtYWNoZW4gKHZpZWxlIGRlciBMZXV0ZSwgZGllIGJldHJnZW4gd3JkZW4sIGtvbW1lbiBqYSBvaG5lIGhpbiBuaWNodCB6dSBmcmVpd2lsbGlnZW4gYnVuZ2VuKSBvZGVyIGFrYWRlbWlzY2hlIFN0YW5kYXJkcyBhbnNldHplbiAoU3RpY2h3b3J0IFBsYWdpYXRlIHZvbiBTdGFja292ZXJmbG93LCBHaXRodWIgdW5kIEFiYmlsZHVuZ2VuKSwgd3JlbiBkaWUgWmFobGVuIG5vY2ggdmllbCBoaGVyLldpciBidW5nc2xlaXRlciB3aXNzZW4gbmF0cmxpY2ggb2Z0IHdlciBiZXRyZ3QsIGFiZXIgZXMgZ2lidCB2b24gU2VpdGVuIGRlciBEb3plbnRlbiBrZWluZSBBbnJlaXplIG9kZXIgV2Vya3pldWdlIGRlbSBuYWNoenVnZWhlbi4gCjIgS2Vsb3duYSBPd2xzIGluIHRoZSBjaGFtcGlvbnNoaXAuIFRlcnJ5IEZveCwgd2l0aCBhbiBhbGwgR3JhZGUgOSBsaW5ldXAsIGhhZCBhIDUxIHBvaW50IGF2ZXJhZ2UgbWFyZ2luIG9mIHZpY3RvcnkgaW4gdGhlaXIgZm91ciBnYW1lcyBhdCB0aGUgcHJvdmluY2lhbHMuLiAKR2VybWFub3R0YSB3YXMgYm9ybiBpbiBZb25rZXJzLCBOZXcgWW9yaywgd2hlcmUgc2hlIGF0dGVuZGVkIGEgcHJpdmF0ZSBDYXRob2xpYyBnaXJscyBzY2hvb2wsIHdyb3RlIGhlciBmaXJzdCBwaWFubyBiYWxsYWQgYXQgYWdlIDEzLCBhbmQgdGhlbiB3b24gZWFybHkgZW50cmFuY2UgaW50byBOZXcgWW9yaydzIHByZXN0aWdpb3VzIFRpc2NoIHNjaG9vbCBmb3IgdGhlIHBlcmZvcm1pbmcgYXJ0cy5CdXQgR2VybWFub3R0YSBuZWVkZWQgdG8gc3RyaWtlIG91dCBvbiBoZXIgb3duIHRvIGJlY29tZSBMYWR5IEdhZ2EuIApVbmZvcnR1bmF0ZWx5LCB0aGUgbmFtZSBqdXN0IGFkZHMgdG8gdGhlIGNvbmZ1c2lvbi4gCkluIGhpcyBhY2NvbXBhbnlpbmcgcmVwb3J0LCBFc3B5IHN0YXRlcyB0aGF0IHRoZSBjb21taXR0ZWUgcmVjZWl2ZWQgYmFjayA1MCByZXNwb25zZXMgZnJvbSB0aGUgMjUwIGNpcmN1bGFycyBpdCBzZW50IG91dCB0byBkaWZmZXJlbnQgcGFydHMgb2YgdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIENhbmFkYSByZWdhcmRpbmcgdGhpcyBub3RhYmxlIHN0b3JtLiBUaGUgbWFwIHJlcHJlc2VudHMgdGhlIGFzc2VtYmxlZCBkYXRhLCB3aXRoIHJlcG9ydGluZyBzdGF0aW9ucyBudW1iZXJlZCBmcm9tIDEgdG8gNTAsIHJvdWdobHkgaW4gb3JkZXIgZnJvbSBzb3V0aCB0byBub3J0aCBhbmQgZnJvbSB3ZXN0IHRvIGVhc3QgYXMgdGhlIHN0b3JtIHdhcyB0cmFja2VkLiAKSWYgdGhhdCdzIHRoZSBraW5kIG9mIGNoYXJhY3RlciB5b3UnZCBsaWtlIHRvIGhhdmUgaW4geW91ciBwYXJ0eSwgdGhpcyBndWlkZSBzaG91bGQgZ2V0IHlvdSBzdGFydGVkLiBBbHNvLCBpZiB5b3UncmUgbG9va2luZyBmb3IgbW9yZSBCYWRhc3NlcyBvZiBIaXN0b3J5LCBhcyB3ZWxsIGFzIHRoZSBjYXN0IG9mIEdhbWUgb2YgVGhyb25lcywgYW5kIGhlcm9lcyBmcm9tIGJvdGggTWFydmVsIGFuZCBEQyBjb21pY3MsIHRoZSBDaGFyYWN0ZXIgQ29udmVyc2lvbnMgcGFnZSBhdCBJbXByb3ZlZCBJbml0aWF0aXZlIGhhcyBtb3JlIGd1aWRlcyBmb3IgeW91IHRvIHBlcnVzZS4uIApIdW1hbnMgYXJlbid0IHN0dXBpZCwgd2UncmUgdGhlIG1vZGVybiBkYXkgZGVzY2VuZGVudCB2aWN0aW1zIG9mIHBlb3BsZSB3aG8gcnV0aGxlc3NseSBleHBsb2l0ZWQgdGhlaXIgZW52aXJvbm1lbnRzIGJlY2F1c2Ugb2YgInByb2dyZXNzIi4gQW55IHdobyBzdG9vZCBpbiB0aGUgd2F5IG9mIHRoYXQgZ290IHNob3ZlZCBvdXQgdGhlIHdvcmxkIG92ZXIsIGZyb20gdGhlIEtob2lzYW4gaW4gU291dGhlcm4gQWZyaWNhIChsb2wsIHlvdSBkb24ndCB0aGluayB0aGV5J3JlIGdpdmluZyB0aGUgbGFuZCBzdG9sZW4gZnJvbSB3aGl0ZSBmYXJtZXJzIHRvIHRoZSBLaG9pc2FuIGJsYWNrcywgZG8gcGVvcGxlIHRoaW5rIHRoYXQ/IEl0J3MgYWxsIHRoZSBCYW50dSBibGFja3Mgd2hvIGdldCBpdC4gVGhleSdyZSB0aGUgZ3JvdXAgb2YgQWZyaWNhbnMgd2hvIGhhcyBiZWVuIHN5c3RlbWF0aWNhbGx5IHB1c2hpbmcgb3V0IG90aGVycyBmb3IgdGhvdXNhbmRzIG9mIHllYXJzIG5vdywgYW5kIHRoZXkgc3RhcnRlZCBpbiBmYXIgd2VzdCBBZnJpY2EpLi4gCllvdSBnb3R0YSBkbyB3aGF0IHdvcmtzIGZvciB5b3UuIEEgbG90IG9mIHdoYXQgeW91IHNhaWQgaXMgd2h5IHdlIGNsb3RoIGRpYXBlciBwYXJ0IHRpbWUuIApWaWVsIHdhaHJzY2hlaW5saWNoZXIgdW5kIGltIEVuZGVmZmVrdCBncmVyIHp1bSBUcmFnZW4ga29tbWVuIHdyZGUsIGRhc3MgZGllIFVTQSBldmVudHVlbGwgaW4gMzAgSmFocmVuIG5pY2h0IG1laHIgZGVyIGdsb2JhbGUgVG9wIFBsYXllciBzaW5kLCBzb25kZXJuIGVpbmUgYW5kZXJlIE5hdGlvbiB1bmQgZGFubiB3cnN0IGR1LCB3aWUgbWVpbiBvYmlnZXMgQmVpc3BpZWwgdmVyZGV1dGxpY2h0LCBtaXQgZWluZW0gTVNDSSBXb3JsZCBiZXNzZXIgZHJhbi4gCk5vIGZ1bGwgdGltZSBlbmdpbmVlcmluZyBqb2Igc2hvdWxkIGJlIHBheWluZyBiZWxvdyAkNDAsMDAwL3llYXIuIFRoZSAyMDE5IGxvY2F0aW9uIGFkanVzdGVkIEdTIDcgc3RlcCAxIHJhdGUgaXMgJDQxLDAwMC95ZWFyLiAKRm9yIGluc3RhbmNlLCBpZiB5b3UgbG9nIGluIHRvIGEgc2l0ZSB0byBhY2Nlc3Mgc3Vic2NyaWJlciBvbmx5IGNvbnRlbnQsIHdlIHVzZSBhIGNvb2tpZSB0byByZW1lbWJlciB0aGF0IHlvdSBhcmUgbG9nZ2VkIGluLCBzbyB5b3UgZG8gbm90IGhhdmUgdG8gZW50ZXIgeW91ciBkZXRhaWxzIG9uIGVhY2ggcGFnZSB5b3UgdmlzaXQuQ3VzdG9taXNhdGlvbiBhbmQgcGVyc29uYWxpc2F0aW9uIGNvb2tpZXMuIApCZXR0aW5nIDEwMCBpbnRvIDE4MCBhbmQgcGlja2luZyB1cCBhIGNhbGxlciA9IHRoZXJlIDM4MCBpbiB0aGUgcG90IGFuZCBoZSBoYXMgMTA1IGJlaGluZC4gCkV2ZW4gdGhlIHBva2VyIGZhbnMgaGF2ZSBhbHNvIGJlY29tZSBpbnRlcmVzdGVkIGFib3V0IHRoZXNlIHBva2VyIHBpZWNlcy4gClRha2UgdGhlIHdvcmQgV2VzcGUgZm9yIGluc3RhbmNlIChtZWFuaW5nICJ3YXNwIikuIEl0IGhhcyBhbiAic3AiLCBzbyB5b3UgbWlnaHQgdHJ5IHRvIHByb25vdW5jZSB0aGF0IHNvdW5kIGFzICJzaHAiLiBCdXQsIGluIGZhY3QsIHRoZSB3b3JkIG91Z2h0IHRvIGJlIHBhcnNlZCAiV2VzIHBlIiwgbm90ICJXZSBzcGUiLCBhbmQgc28gdGhlIGFwcGVhcmFuY2Ugb2YgdGhlICJzcCIgaXMgbWlzbGVhZGluZy4gCkkgdGhpbmsgeW91ciBsb29raW5nIHRvbyBtdWNoIGludG8gaGVyIHdvcmRzLiBTdXJlIHNoZSBjb3VsZCBoYXZlIHBocmFzZWQgaXQgbXVjaCBiZXR0ZXIgYnV0IGFsbCBzaGUgbWVhbnQgYnkgImxvd2VyaW5nIGhlciBzdGFuZGFyZHMiIGlzIHRoYXQgc2hlIHN0b3BwZWQgYmVpbmcgc3VwZXIgcGlja3kgYW5kIGp1ZGdleS4gU2hlIGlzIG5vdyBmb2xsb3dpbmcgaGVyIGZlZWxpbmdzIHJhdGhlciB0aGFuIGxldHRpbmcgYSBjaGVjayBsaXN0IGRpY3RhdGUgd2hvIHNoZSBkYXRlcy4gClRoZSB0YW5rIHRoZXkga2VwdCBpdCBpbiBpcyBtb25zdHJvdXMgKG9uZSBtaWxsaW9uIGdhbGxvbnMpIGFuZCBpcyBob21lIHRvIHRvbnMgb2YgYW5pbWFscyB0aGF0IGFsbCBsaXZlIHRvZ2V0aGVyLiAKT25lIG5pZ2h0IElyZW5lIGludml0ZWQgdXMgdG8gZ28gc2xlZGRpbmcuIGdyb3duIHVwIGluIE1pY2hpZ2FuLCBzbGVkZGluZyB0byBtZSBjb25zaXN0cyBvZiBhIHRlbiBzZWNvbmQgcmlkZSBvbiBhIHBsYXN0aWMgc2xlZCBkb3duIGEgc21hbGwgaGlsbCAodXN1YWxseSBpbiBzb21lb25lIGJhY2t5YXJkKS4gaW4gdGhlIEFscHMgaXMgYSBkaWZmZXJlbnQgc3RvcnkhCkNvcnJlY3QuIEJ1dCBsb2NhbCBlY29ub215IGNvbnRleHQgaXMgaW1wb3J0YW50LiB0aGUgY29zdCBvZiBicmVhZCBpcyB0aGUgc2FtZSBmb3IgYm90aCAoZ2VuZXJhbGx5IHNwZWFraW5nLCBsZXQgbm90IHN0b29wIHRvIG5pdCBwaWNraW5nIG92ZXIgZmFuY3kgYmFrZXJpZXMpLgpKZW5uaWZlciBBbmlzdG9uIGFkZGVkOiAiVGhleSB3cm90ZSBhbiBlcGlzb2RlIGFib3V0IGl0LCBhY3R1YWxseSEiClRoZUFsd2F5c0xhdGVXaXphcmQgIDUgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvCkF0IEhhamppIFNhbG1hbidzLCBJIGNvdWxkIGJhcmVseSBzdGFuZCB0byBsb29rIGF0IG15c2VsZiBpbiB0aGUgbWlycm9yLiBJIHB1dCBvbiBzb21lIHBpbmsgbGlwc3RpY2sgYW5kIGV5ZSBtYWtldXAgICBqdXN0IGVub3VnaCwgSSBob3BlZCwgdG8gYXZvaWQgYmVpbmcgYmVhdGVuLiIuIAoiRm9yIHRvbyBtYW55IHllYXJzLCBDYW5hZGEncyBGb29kIEd1aWRlIGhhcyBjb21wcm9taXNlZCBvdXIgaGVhbHRoLCBlbnZpcm9ubWVudCBhbmQgYW5pbWFscyBieSBlbXBoYXNpemluZyBtZWF0LCBkYWlyeSBhbmQgZWdncyBhcyBiZWluZyBmb3VuZGF0aW9uYWwgaW4gb3VyIGRpZXRzLiBUaGUgbmV3IGZvb2QgZ3VpZGUgdHVybnMgdGhhdCBvdXRkYXRlZCB0aGlua2luZyBvbiBpdHMgaGVhZCwgZ2l2aW5nIG51dHJpZW50IGRlbnNlIGFuZCBmaWJyZSByaWNoIHBsYW50IGZvb2RzIHRoZSBwcm9taW5lbmNlIHRoZXkgZGVzZXJ2ZS4iCjIpIEkgZWF0IGJpZyBhbmQgc21hbGwgc2hpZWxkcyBhcyBzb29uIGFzIEkgY2FuIGFuZCBhbHdheXMgcHJpb3JpdGl6ZSBhdCBsZWFzdCBvbmUgaWYgbm90IDIgc2xvdHMgdG8gaGVhbGluZy4gQWxzbywgaHlicmlkIHBvdGlvbnMgYXJlIHRoZSBiZXN0IGJlY2F1c2UgdGhleSB3aWxsIHJlc3RvcmUgMjUgdG8gYm90aCBoZWFsdGggYW5kIHNoaWVsZCwgc28gaWYgeW91IGhhdmUgNCB5b3UgY2FuIGdldCB0byAxMDAvMTAwIGluIGFib3V0IDI1IHNlY29uZHMsIGJ1dCB5b3UgQ0FOTk9UIHN0YWNrIHRoZW0sIHlvdSBoYXZlIHRvIGxldCB0aGVtIGZ1bGx5IGhlYWwgeW91LCB0aGVuIHBvcCBhbm90aGVyIG9uZS4gCkZyb20gUHJpbmNlIFJ1cGVydCBJIHJvYWQgdG8gdGhlIEljZWZpZWxkcyBiZXR3ZWVuIEphc3BlciBhbmQgQmFuZmYuIEFsbCB0aGUgY2FtcCBzaXRlcyB3ZXJlIGJvb2tlZCBzb2xpZCwgYW5kIHNpbmNlIGl0IHdhcyBkYXJrIEkganVzdCBwdWxsZWQgaW50byBhIHBhcmtpbmcgbG90IGFuZCBzZXQgdXAgY2FtcC4gTGl0dGxlIGRpZCBJIGtub3cgd2h5IGl0IHdhcyBzbyBjb2xkIHVudGlsIEkgd29rZSB1cCBhbmQgc2F3IGEgYnVuY2ggb2YgZ2xhY2llcnMgYXJvdW5kIG1lLgpXaG8gYXJlIHlvdXIgc291cmNlcyAuIApXaHkgd29udCB6eW5nYSBsZXQgeW91IGJ1eSBjaGlwcyBmb3IgVGV4YXMgaG9sZGVtCiJUaGF0IGhvbWUuIFRoYXQgdXMuIApJdCdzIGEgZ2lhbnQgbW91bmQgYWJvdXQgMW0gaGlnaCBhbmQgM20gZGlhbWV0ZXIuIApUaGUgbGFzdCBnb3Zlcm5tZW50IGVzdGltYXRlIG91dCBvZiBwb2NrZXQgc3BlbmRpbmcgb24gYWx0ZXJuYXRpdmUgbWVkaWNpbmUgY2FtZSBmcm9tIGEgMTk5NyBzdXJ2ZXkuIFRoYXQgcmVzZWFyY2ggZXN0aW1hdGVkICQyNyBiaWxsaW9uIHdhcyBiZWluZyBzcGVudC4KRHUgbGllYnN0IFBva2VyIHVuZCB3aWxsc3QgZGllIEVpbnN0emUgZWluIHdlbmlnIGVyaGhlbj8gVmVyc3VjaCBlcyBtYWwgbWl0IGRlciBoZWllbiBWZXJzaW9uIGZyIEVyd2FjaHNlbmUsIGJlaSBkZXIgZHUgYnVjaHN0YmxpY2ggZGVpbiBsZXR6dGVzIEhlbWQgdmVybGllcmVuIGthbm5zdCAgIHVuZCB2aWVsbGVpY2h0IHNvZ2FyIG5vY2ggbWVoci4gQmVpbSBTdHJpcCBQb2tlciBzZXR6ZW4gZGllIFNwaWVsZXIgZGllIEtsZWlkdW5nc3N0Y2tlIGRpZSBzaWUgdHJhZ2VuIHVuZCBlbmRlbiBvZnQgaW4gVW50ZXJ3c2NoZSBvZGVyIGduemxpY2ggbmFja3QuIERhcyBTcGllbCBpc3QgZWluZSB0b2xsZSBNZ2xpY2hrZWl0IGZyIEZyZXVuZGUsIGRpZSBsb2NrZXIgdW5kIG9mZmVuIG1pdGVpbmFuZGVyIHVtZ2VoZW4sIGRlbiBpbm5lcmVuIEV4aGliaXRpb25pc3RlbiByYXVzenVsYXNzZW4gdW5kIGVpbmUgc3Bhbm5lbmRlIE5hY2h0IHZvbGxlciBXYWdlbXV0IHVuZCBTcGEgenUgZ2VuaWVlbi4gU28gd2lyZCdzIGdlc3BpZWx0OgpJX2xpa2VfcG9sbHMgIDI0NSBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvCiJJIGFtIGZpZXJjZWx5IHByb3RlY3RpdmUgb2YgbXkgbWFycmlhZ2UgYW5kIG15IGZhbWlseSwgYW5kIEknbGwgYmUgZGFtbmVkIGlmIEkgbGV0IHNvbWVvbmUgYXMgZGlzdHVyYmVkIGFzIHNoZSBpcyBjcmVhdGUgZmFsc2UgcnVtb3JzIGFib3V0IG15IGh1c2JhbmQsIiBMaXNhIFIuIHNhaWQgaW4gaGVyIEJyYXZvIGJsb2cuICJJIHRoaW5rIGl0J3MgcGxhaW4gdG8gc2VlIHRoYXQgS2ltIGNyb3NzZWQgdGhlIGxpbmUuIFRoYXQgd2FzIG15IE5PVCBGICBXSVRIIE1FJyBtb21lbnQuIFlvdSBoYXZlIGp1c3QgbWV0IG15IGlubmVyIGdhbmdzdGVyISBJJ20ganVzdCBnbGFkIHRoYXQgSSBkaWRuJ3Qgc3RyYW5nbGUgaGVyIG9uIHRoZSBzcG90LCBtYWlubHkgYmVjYXVzZSBJIGhlYXIgdGhlIGZvb2QgaW4gamFpbCBzdWNrcyBhbmQgb3JhbmdlIGlzIG5vdCBteSBiZXN0IGNvbG9yISBUaGUgY3JhenkgcGFydCBpcyBLaW0gaGFzIG1ldCBIYXJyeSBvbmNlLCBvbmUgdGltZS4gQW5kIHRoYXQgd2FzIHRoZSBuaWdodCBvZiB0aGUgcG9rZXIgcGFydHkgd2hlbiBzaGUgaGFkIHRha2VuIG9uZSBvciB0d28gb3IgMjAgb2YgTW9udHkncyBwYWluIHBpbGxzLCBzbyB3aG8ga25vd3Mgd2hhdCBvbiBlYXJ0aCB3YXMgZ29pbmcgdGhyb3VnaCBoZXIgbWluZCB3aGVuIHNoZSBtZXQgaGltIG9yIGR1cmluZyB0aGF0IGNhciByaWRlIGZyb20gaGVsbC4iCllvdSdyZSBzZXR0aW5nIHRoZSB0b25lIGZvciBmdXR1cmUgdmlzaXRzIGFuZCBzaGUncyBnb2luZyB0byBzaG92ZSBhdCB0aG9zZSBib3VuZGFyaWVzIGEgbGl0dGxlIG1vcmUgZXZlcnkgdGltZS4gClN0cm9uZzk1MTAgIDYxIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpUaXA6IEJyaW5nIGEgc2FtcGxlIGhvbWUgYW5kIGxpdmUgd2l0aCBpdCBhd2hpbGUgYmVmb3JlIHlvdSBkZWNpZGUuIE5vdCBvbmx5IGltcHJvdmUgdGhlIGZsb3cgb2Ygc3BhY2UgaWRlYWwgZ2F0aGVyaW5nIHNwYWNlcywgZW5hYmxpbmcgZWFzeSBpbnRlcmFjdGlvbnMgYW5kIGNvbm5lY3Rpb25zLCBzYXlzIGRlc2lnbmVyIFNhcmFoIEdhbGxvcC4gCihsYXRlIHJlcGx5LCBJIGtub3cuKSBBcyBmYXIgYXMgVVMgc3RhdHMgZ28sIG1vc3QgcHJvdGVzdGFudCBDaHJpc3RpYW5zIGFyZSBTb3V0aGVybiBCYXB0aXN0LCBhbmQgYXMgYSByZXN1bHQsIHlvdSBhcmUgY29ycmVjdCwgbW9zdCBkb24gdGVuZCB0byBiZWxpZXZlIGluIHRoZSBmYWxsaWJpbGl0eSBvZiB0aGUgQmlibGUuIEFuZCB0aGF0IGlzIChpbiBteSBodW1ibGUgb3BpbmlvbikgdmVyeSB1bmZvcnR1bmF0ZS4gCk1hbnkgb2YgdGhlIHBva2VycyB3ZSBncm93IGluIHRoZSBnYXJkZW4gaGF2ZSBldmVyZ3JlZW4gZm9saWFnZSBhbmQgdGhlIGxlYXZlcyBjYW4gbG9vayByYWdnZWQgYXQgdGltZXMuIEEgdHdpY2UgeWVhcmx5IHRpZHkgaXMgaWRlYWwuIFJlbW92ZSBmYWRpbmcgZm9saWFnZSBpbiBhdXR1bW4gYW5kIHRoZW4gdGhvcm91Z2hseSB0aWR5IGluIGxhdGUgc3ByaW5nLiBXaGVuIHRpZHlpbmcsIGZyaXNrIGZvciBzbmFpbHMgYmVjYXVzZSB0aGV5IGNhbiBkYW1hZ2UgYnVkcyBhdCBhIGNyaXRpY2FsIHN0YWdlLCBjYXVzaW5nIG1hbGZvcm1lZCBmbG93ZXJzLgpPbiBKb25lcyBTdHJlZXQgcHJlbWllcmVzIHRvbmlnaHQgb24gYSBiaWcgdGltZSBlcGlzb2RlIG9mIFBvbGl0aWNhbCBDb25uZWN0aW9ucy4gU2VuaW9yIFBvbGl0aWNhbCBSZXBvcnRlciBMb3JldHRhIEJvbml0aSB3aWxsIGdpdmUgdXMgYSBtb3JlIGluZGVwdGggbG9vayBvciBiZWhpbmQgdGhlIHNjZW5lcyBsb29rIGF0IHRoZSBsZWdpc2xhdHVyZSBhbmQgaXRzIHBlb3BsZSBlYWNoIHdlZWsuIFNoZSBkb2VzIGEgZ3JlYXQgam9iIHJlcG9ydGluZyBvbiBhIGRhaWx5IGJhc2lzIHNvIHdlIGFyZSByZWFsbHkgZXhjaXRlZCB0byBzZWUgdGhpcyBleHRlbmRlZCBsb29rLi4gCkV2ZXJlc3QsIGFuZCBhY3RpbmcgZ292ZXJub3Igb2YgSG9uZyBLb25nIGluIDE5NDAgNDEuIApNeSBqb2IgcHJpbWFyaWx5IGVudGFpbHMgd3JpdGluZyBvcGluaW9ucyBvbiB0aGUganVkZ2UgYmVoYWxmIGZvciBtYXR0ZXJzIG9uIGFwcGVhbC4gInRoZXJlIHdhc24gZW5vdWdoIGV2aWRlbmNlIHRvIGxlZ2FsbHkgY29udmljdCIgYW5kICJpZiB0aGVyZSB3YXMgZW5vdWdoIGV2aWRlbmNlLCBpdCBzdGlsbCB3YXNuIGVub3VnaCB0byBtZWV0IHRoZSBiZXlvbmQgYSByZWFzb25hYmxlIGRvdWJ0IHN0YW5kYXJkIikuIApJdCBsb29rcyBqdXN0IGxpa2UgdGhlIEFteXRpdmlsbGUgSG9ycm9yIGhvdXNlLiAKKGV4YW1wbGU6IGN1cnJlbnQgZ3JvdXAgaGFzIGVpdGhlciA1IG9yIDUwIGxiIGJhZ3MhKS4gCkFub3RoZXIgZmVhdHVyZSBvZiBmcmVlIHBva2VyIGluIHRoZSBpbnRlcm5ldCBzZXR0aW5nIGlzIHRoYXQgcnVsZXMgYXJlIG1vcmUgc3RyaWN0IHNpbmNlIG5vYm9keSBpcyBzZWVpbmcgYW55Ym9keSwgdGhlIG9iamVjdGl2aXR5IG9mIHRoZSBkZWFsZXIgb3IgZGVhbGVyL3BsYXllciBpcyBtb3JlIG9yIGxlc3Mgbm90IGNvbXByb21pc2VkIHRoYXQgbXVjaC4uIApBbGJ1cnkncyBDaHJpcyBPJ1Rvb2xlIGZpbmlzaGVkIHJ1bm5lciB1cCBhbmQgV29kb25nYSdzIEphc29uIFN0ZWFyLCAyNiwgZmluaXNoZWQgc2l4dGguIE8nVG9vbGUgdG9vayBob21lICQyNTAwIGluIGNhc2ggYW5kIHByaXplcy4gR2VvcmdlIGFuZCBPJ1Rvb2xlIG5vdyBwcm9ncmVzcyB0byB0aGUgV2lsZCBUdXJrZXkgVG91cm5hbWVudCBvZiBDaGFtcGlvbnMgaW4gSnVseSwgd2l0aCBhIHNob3QgYXQgJDEgbWlsbGlvbiBpbiBwcml6ZXMuIApGb3JldmVyIGFuZCBhbHdheXMuIApZb3Ugd2VyZSBjcmFua3kuIApQYXIgYWlsbGV1cnMsIHNlbG9uIFN5bHZpZSBCZW5rZW1vdW4gKHBzeWNob2xvZ3VlLCB2aWNlIHByc2lkZW50ZSBkdSBHUk9TIGV0IG1pbGl0YW50ZSBhbnRpIHN0aWdtYXRpc2F0aW9uIGR1IHBvaWRzIGRlcHVpcyBkZXMgYW5uZXMgbm90YW1tZW50IGF1IHNlaW4gZGUgbCdhc3NvY2lhdGlvbiBBbGxlZ3JvIEZvcnRpc3NpbW8pLCBjZXR0ZSBtaXNlIGVuIGF2YW50IHMnZXN0IGF1c3NpIGNyaXN0YWxsaXNlIGF1dG91ciBkdSBsaXZyZSBkZSBHYWJyaWVsbGUgRGV5ZGllciwgT24gbmUgbmFpdCBwYXMgZ3Jvc3NlLCBxdWkgYSBldSB1biBmb3J0IHJlbGFpcyBtZGlhdGlxdWUsIGNvbW1lIGxlIGxpdnJlIGQnQW5uZSBaYW1iZXJsYW4gcXVpIGF2YWl0IGZhaXQgbWVyZ2VyIGxlIHN1amV0IGV0IGF1c3NpIGxlIG1vdCBncm9zc29waG9iaWUgaWwgeSBhIHVuZSB2aW5ndGFpbmUgZCdhbm5lcy4uIApUaGUgbWVkaWNhdGlvbiB3aWxsIHVzdWFsbHkgYmUgaW4gdGhlIGZvcm0gb2YgZHJvcHMgd2hpY2ggeW91IHdpbGwgcHV0IGluIHRoZSBjYXQncyBlYXJzLCB0aGVuIG1hc3NhZ2Ugc28gaXQgZ2V0cyBnb29kIGNvdmVyYWdlLiAKVW5sZXNzIHNoZSBtZWFudCBnZXR0aW5nIGZhc3QgZm9vZCBvciBzb21ldGhpbmcuLiAKRW5kbGljaCBnZXNjaGFmZnQhIERlciBFaW56YWhsdW5nc2JvbnVzIHZvbiAxNTAgaXN0IGZyZWlnZXNwaWVsdCB1bmQgZGFzIFJha2ViYWNrIHZvbiBjYS4gMjQwIHd1cmRlIGViZW5mYWxscyBoZXV0ZSBtZWluZW0gUG9rZXJrb250byBndXRnZXNjaHJpZWJlbi4KT1AgSSdsbCBiZSBob25lc3QgSSBoYXZlbid0IHBsYXllZCBzaG9ydCBkZWNrIG5vciBoYXZlIEkgcmVzZWFyY2hlZCBzdHJhdGVneSBvbiB0aGUgZ2FtZS4gQnV0IHBsZWFzZSBoZWFyIG1lIG91dC4gVGhlIHRoaW5ncyB5b3UgYXJlIHNheWluZyBhcmUgbm90IHRoaW5ncyB3aW5uaW5nIHBva2VyIHBsYXllcnMgc2F5LiBTdWNjZXNzZnVsIHBva2VyIHBsYXllcnMgYXJlIGFsd2F5cyB0YWxraW5nIGFib3V0IGFkanVzdGluZyBhbmQgYmFsYW5jaW5nIHlvdXIgcmFuZ2UuIEkgaGF2ZSB3YXRjaGVkIGEgbG90IG9mIHN0cmF0ZWd5IHZpZGVvcyBvbiBob2xkZW0gYW5kIHJlYWQgc29tZSBib29rcy4gTm8gd2hlcmUgaGF2ZSBJIGV2ZXIgaGVhcmQgd2lubmVycyBzYXlpbmcgdG8gYnV5IGluIGZvciB0aGUgbWluaW11bS4gV2lubmluZyBwbGF5ZXJzIGFsd2F5cyBhZHZpc2UgYnV5aW5nIGluIGZvciB0aGUgTWF4LiBOb3IgaGF2ZSBJIGhlYXJkIHRoaW5ncyBsaWtlIEknbSB0cnlpbmcgdG8gZG91YmxlIG15IHN0YWNrIGFuZCBsZWF2ZSA1IG1pbnV0ZXMgYWZ0ZXIuIE9yIG15IGNsZWFyIGN1dCBzdHJhdGVneSBtdXN0IGJlIHdvcmtpbmcgYmVjYXVzZSBJIHdhcyBwcm9maXRpbmcgZm9yIG1vc3Qgb2YgdGhlIG1vbnRoLiBUaGUgdGhpbmdzIHlvdSBhcmUgc2F5aW5nIGFyZSBodWdlIHJlZCBmbGFncyEgSSdtIG5vdCB0cnlpbmcgdG8gY2FsbCB5b3Ugb3V0IG9yIHNoaXQgdGFsayB5b3VyIHN0cmF0ZWd5IGJ1dCBJIHdvdWxkIGFkdmlzZSBkb2luZyBzb21lIHJlYWwgcmVzZWFyY2ggYW5kIHRvIHByb2NlZWQgd2l0aCBjYXV0aW9uLgpTbywgaW4gb25lIHNlbnNlIG9mIHRoZSB3b3JkLCBhIHBva2VyIGNhbGN1bGF0b3IgYWN0cyBhcyBhIHBlcnNvbmFsIGNvYWNoLiBNYW55IHBlb3BsZSB0aGluayB0aGF0IGl0IGlzIGlsbGVnYWwgdG8gdXNlIGEgcG9rZXIgY2FsY3VsYXRvciwgaG93ZXZlciwgaXQgaXMganVzdCBhIG15dGggYW5kIG1hbnkgcGVvcGxlIHVzZSBpdCBpbiBhIGdhbWUgb2Ygb25saW5lIHBva2VyLi4gCkJ1dCwgaW4gdGhlIGNhc2Ugb2YgYSBoZWFydCBhdHRhY2sgQmV0dGVyIHRvIGhhdmUgd2FpdGVkIGZvciBFTVMgdGhhbiBhc2sgaGltIHRvIGV4ZXJ0IGhpbXNlbGYgZ2V0dGluZyBpbnRvIGEgY2FyLCByaXNrIGEgTVZDLCBkZWxheSBpbiBnZXR0aW5nIHRvIHRoZSBob3NwaXRhbCwgZGVsYXkgaW4gcGFya2luZywgYW5kIGZpbmFsbHkgdGhlIGRlbGF5IGluIGNoZWNraW5nIGluIGJlY2F1c2UgeW91IHN1cnByaXNlZCB0aGUgRUQgd2l0aCBhbiBBQ1MgY2FzZS4uIApOanV0IGF2IDEwMCUgdGlsbGcgbmdsaWdoZXQgbWVkIEludGVybmV0cyBtZXN0IGYgcmRpZyBwcm9kdWt0IG9jaCBpZ2VuIG1hcmtlcmFyIHBsYXRzZXJuYSBmIHIga2V4ZW4uLiAKQ29udmluY2VkIGhlciB0byB0cmFkZSBpbiB0aGUgMjAxMSBjYXIgYW5kIGdldCBhIG5ldyBvbmUgYW5kIHRoZW4gZ2F2ZSBhbiBhYnNvbHV0ZSBzaGl0IGRlYWwgb24gaXQuIApEaWUgUGVyZmVrdGUgTWFzY2hlIE5laWwgU3RyYXVzcyBFYm9va3BkZi4gSXNzdWUgMzQgbmV3IEFteSBNYXkgcmVwbyBvd25lciBjcmVhdGVkIGFuIGlzc3VlIDIwMTggMDIgMDIuIEZvbyAuIApUaGVyZWluIGxpZXMgdGhlIHByZWRpY2FtZW50LCBhY2NvcmRpbmcgdG8gTWFzYW1pY2hpIEFkYWNoaSwgc2VuaW9yIGVjb25vbWlzdCBvZiBKUCBNb3JnYW4gU2VjdXJpdGllcyBKYXBhbi4gCkdvcmRvbiBDYWlybnMsIGNoYWlybWFuIG9mIHRoZSBXb29sd29ydGhzIEdyb3VwLCBzYWlkIGhlIHdhcyBjb25jZXJuZWQgYWJvdXQgdGhlIGFsbGVnYXRpb25zIHJlZ2FyZGluZyBpdHMgam9pbnQgdmVudHVyZSBwYXJ0bmVyLCBBdXN0cmFsaWFuIExlaXN1cmUgYW5kIEhvc3BpdGFsaXR5IEdyb3VwLCBhbmQgd2FzIHRha2luZyB0aGVtICJ2ZXJ5IHNlcmlvdXNseSIuIApCYXJiaWUgaW4gUnVzc2lhLCBsaWtlIGEgQmlibGUgZm9yIHRoZSBHb2RsZXNzLCBpbnN0cnVjdGVkIFNvdmlldCBjaXRpemVucyBvbiBob3cgdG8gY29uc3VtZSBCYXJiaWUuIApNYXh3ZWxsIHJldGlyZWQgZnJvbSBoaXMgam9iIGFzIHRoZSBzdGF0ZSdzIG5vdGFyeSBhZG1pbmlzdHJhdG9yIHRocmVlIHllYXJzIGFnbywgYW5kIHNwZW5kcyBoaXMgdGltZSB0aGVzZSBkYXlzIHJ1bm5pbmcgdGhlIHBva2VyIHRvdXJuYW1lbnQgY29tcGFueSBhbmQgYWN0aW5nIGluIGxvY2FsIHRoZWF0ZXIuIEpvaG5ueSdzIGlzIHRoZSBtb3N0IHBvcHVsYXIgdG91cm5leSBpbiBCb3VsZGVyLCBkcmF3aW5nIGNsb3NlIHRvIGEgY2FwYWNpdHkgNTAgcGxheWVycyBwZXIgZ2FtZSBvbiBXZWRuZXNkYXlzLiJJIGxvdmUgd2hhdCBpdCBkb2VzIGZvciBvdXIgYnVzaW5lc3MuIFdlIGhhdmUgYSBnb29kIGV4cGVyaWVuY2Ugd2l0aCBpdCwiIE9nZGVuIHNheXMuIApJIHdhc24ndCBhIHJ1bm5lciBiYWNrIHRoZW4uIEkgZW5kZWQgdXAgaGF2aW5nIHN1cmdlcnkgYSB5ZWFyIGxhdGVyLiAKQW5kIHRoYXQgaWYgaXQgYWN0dWFsbHkgZm91bmQgb24gYSBwYXRpZW50L2Ftb25nIHBhdGllbnQgcHJvcGVydHkuIFRvIHJlcG9ydCB0aGF0IG9uIGEgaHVuY2ggdGhhdCBhIHBhdGllbnQgaGFkIHN1c3BlY3RlZCBjb250cmFiYW5kLiBUaGF0IG91dHN0YW5kaW5nIHRvIG1lIHRoYXQgdGhlIHBvbGljZSB3ZXJlIGV2ZW4gY2FsbGVkLiAKQXMgaXQgaXMgaW4gcG9rZXIsIHRoZXJlIGFyZSBkaWZmZXJlbnQgdHlwZXMgb2YgdGhlIHRvdXJuYW1lbnRzLiBTb21lIHBsYXllcnMgd2lsbCBiZSB2ZXJ5IHBsZWFzZWQgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgZnJlZXJvbGxzICAgZnJlZSB0byBlbnRyeSB0b3VybmFtZW50cy4gWW91IGRvIG5vdCBoYXZlIHRvIG1ha2UgYSB0b3VybmFtZW50IGNvbnRyaWJ1dGlvbiwgaG93ZXZlciB0aGUgcHJpemUgZnVuZCBpcyBzbWFsbCBhbmQgeW91IHdvdWxkIGhhdmUgbWFueSBjb21wZXRpdG9ycy4gClNwb3VzZSB3YXMgaW4gdGhlIG1pbGl0YXJ5IGFuZCBoYWQgc2VlbiBzbyBtYW55IHNjcmV3IHVwcyB3aXRoIHBheSBhbmQgb3RoZXIgdGhpbmdzIHdoZW4gc29tZW9uZSBjaGFuZ2VkIGEgbmFtZSBzbyBzcG91c2UgZGlkbiB3YW50IHRvIGNoYW5nZSB0aGVpciBuYW1lIGV2ZW4gdGhvdWdoIHRoZXkgd2VyZSBmaW5lIHdpdGggaHlwaGVuYXRpbmcgb3IgYSBuZXcgbmFtZS4gCllvdSBhcmUgc29tZXdoYXQgY29uZnVzZWQgYnkgdHlwZSBJIGFuZCB0eXBlIElJIGVycm9yIGNvbnRyb2wuIApTZWVpbmcgdGhhdCB0aGlzIHN0ZXAgaGFzIGFsZXJ0ZWQgeW91IHRvIHRoZSBmYWN0IHRoYXQgdGhlcmUgYXJlIGRpZmZlcmVudCBtYXRlcmlhbHMgdXNlZCBpbiB0aGUgY29tcG9zaXRpb24gb2YgdGhlIGNoaXBzLCB0aGUgbmV4dCBzZXZlcmFsIHN0ZXBzIGluIHRoaXMgaG93IHRvIGd1aWRlIHdpbGwgYmUgdXNlZCB0byBpbnRyb2R1Y2UgeW91IHRvIHRoZSBtYWluIHBvaW50cyBvZiBlYWNoIHR5cGUgb2YgbWF0ZXJpYWwuLiAKSW4gbXkgbWluZCBhbmQgaW4gdGhlIG1pbmRzIG9mIG1hbnkgb3RoZXJzLCB0aGUgTXVlbGxlciByZXBvcnQgc2VlbXMgbW9yZSBhbmQgbW9yZSBwZWRhbnRpYywgYW5kIGxlc3MgYW5kIGxlc3MgY3JlZGlibGUgYXMgdGltZSBnb2VzIG9uLgpNeSBmYXRoZXIgd2FzIG15IG1vbSBmb3VydGggaHVzYmFuZC4gU28gd2hlbiB0aGV5IGdvdCBkaXZvcmNlZCB3aGVuIEkgd2FzIGZpdmUgc2hlIGtuZXcgd2hhdCBzaGUgd2FzIGRvaW5nIHByZXR0eSB3ZWxsLCBzaW5jZSBpdCB3YXMgaGlzIGZpcnN0IG1hcnJpYWdlLiBJIHdhcyB5b3VuZywgYW5kIG15IGRhZCBzdGlsbCBjYXJlZCBhYm91dCBtZSBiYWNrIHRoZW4sIHNvIGl0IGRpZG4gc2VlbSBsaWtlIGEgaHVnZSBkZWFsLCBidXQgc2hlIHB1dCBhIGRlYWwgaW4gdGhlIGRpdm9yY2UgdGhhdCBhcyBsb25nIGFzIEkgd2FzIGEgY29sbGVnZSBzdHVkZW50LCBJIHdvdWxkIGNvbnRpbnVlIHRvIGdldCB0aGUgY2hpbGQgc3VwcG9ydCBteSBtb20gdXNlZCB0byBnZXQgYWZ0ZXIgSSB0dXJuZWQgMTguIApEb3dubG9hZCBwb2tlciBnYW1lc1Bva2VyIGhhcyBnYWluZWQgaW1tZW5zZSBwb3B1bGFyaXR5IG92ZXIgdGhlIGxhc3QgZmV3IHllYXJzLiAKQW55d2F5LCBJIGhvcGUgdGhpcyBoZWxwcyB5b3Ugc2VlIHRoaW5ncyBhIGxpdHRsZSBkaWZmZXJlbnRseS4gWW91IHJpZ2h0IHRvIGJlIHRoaW5raW5nIHRoYXQgZGlldCBhZmZlY3RzIGJyYWluczsgYnV0IGJlIGF3YXJlIG9mOiB0aGUgYmlhcyBpbiB2YWx1aW5nIGJyYWlucyBvdmVyIHNvbWUgb3RoZXIgZmVhdHVyZSwgdGhlIGN1bHR1cmFsIHZhbHVlIGFyb3VuZCBtZWF0LCBob3cgZ2VuZGVyIHBsYXlzIGludG8gYWxsIG9mIHRoaXMuIFJlYWxseSBmcnVpdCBoYXMgcGxheWVkIGEgbXVjaCBsYXJnZXIgcm9sZSBpbiBwcmltYXRlIGJyYWluIGV2b2x1dGlvbiB0aGFuIG1lYXQsIGJ1dCB3ZSB2YWx1ZSBtZWF0IG1vcmUsIGN1bHR1cmFsbHkgKGFuZCB0aGlzIGlzIHRpZWQgdXAgd2l0aCB0aGUgTWFuIHRoZSBIdW50ZXIgaHlwb3RoZXNpcykuLiAKRm9yIHN0YXJ0ZXJzLCB0aGUgZmlyc3Qgb25lIEkgb3BlbmVkIHdhcyBtaXNzaW5nIGhhbGYgaXRzIHBhZ2VzLiBJdCB3YXNuIGltbWVkaWF0ZWx5IG9idmlvdXMgYW5kIEkgd2FzIG5lYXJseSBkdXBlZCBpbnRvIG9yZGVyaW5nIGZyb20gYSB2ZXJ5IG5hcnJvdyBzZWxlY3Rpb24uCkFuZCwgZ2l2ZW4gdGhlIGRpcmUgY29uc2VxdWVuY2VzIG9mIHJ1bmF3YXkgZ2xvYmFsIHdhcm1pbmcsIHdlIG1heSBuZWVkIHRvIGFjdCBldmVuIGlmIGNlcnRhaW50eSBpcyA1MCUuIEFuZCByZW1lbWJlciwgYW55IGFsdGVybmF0aXZlIGV4cGxhbmF0aW9uIHdpbGwgaGF2ZSB1bmNlcnRhaW50aWVzIG9mIGl0cyBvd24uLiAKIkkgdGhvdWdodCBTaGFuZSBkaWQgYSBncmVhdCBqb2IsIGhlIGhhZCBzb21lIHNwZWVkLCIgUGFjcXVpYW8gc2FpZC4gIkkgY291bGRuJ3QgbW92ZSBiZWNhdXNlIG15IGxlZnQgbGVnIGdvdCB0aWdodC4gSXQncyBhIHByb2JsZW0gSSd2ZSBiZWVuIGhhdmluZyBsYXRlbHkuIEknbSBnb2luZyB0byB3b3JrIG9uIG15IGxlZ3MgaW4gZnV0dXJlIHRyYWluaW5nIGNhbXBzLiIKUFZOUiB3b3VsZCBoYXZlIGJlZW4gcHJvdWQgb2YgaGlzIHByb3QuIApJbiBtb3N0IGNhc2VzLCB0aGUgZ2FtZXMgaGF2ZSB0aGUgc2FtZSBnZW5yZXMgYWxsIGFyb3VuZCB0aGUgd29ybGQuIApEYXkgd2FzIG91ciAiYmVhY2ggZGF5Ii4gCkkgbG9va2VkIGFyb3VuZCBhbmQgZGlkbiBzZWUgYSB0b24gb2YgZ3V5cyB3aG8gd291bGQgYmUgcmVhbGx5IG9uIGJvYXJkIHdpdGggc3VwcG9ydGluZyBhIFNBSE0gYW5kIG1hZGUgdGhlIGRlY2lzaW9uIHRoYXQgSSB3b3VsZG4gaGF2ZSBjaGlsZHJlbiB1bmxlc3MgSSBjYW4gYmUgYSBTQUhNLiBJIGdvdCB0byB0aGUgcG9pbnQgb2YgYWNjZXB0aW5nIHRoYXQgSSB3b24gaGF2ZSBjaGlsZHJlbiwgd2hpY2ggbWFkZSBtZSBraW5kIG9mIHNhZC4KTWFzc2l2ZSBzZWNyZXRhcnkgYnV0dCBob3dldmVyIHNvIHlvdSBoYXZlIGNsZWFybHkgcmVhY2hlZCB0aGUgaGVpZ2h0IG9mIHlvdXIgcHJvZmVzc2lvbmFsIGNhcmVlciBhbHJlYWR5LiAKQmxlY2tvTmVrbyAgMSBwb2ludCAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpHYW1hcnJhIHNhaWQgdGhlIGNhc2Ugd291bGQgbm93IGJlIHR1cm5lZCBvdmVyIHRvIHByb3NlY3V0b3JzIHRvIHByZXNlbnQgZm9ybWFsIGNoYXJnZXMgYW5kIFZhbiBkZXIgU2xvb3Qgd2lsbCBiZSBhc3NpZ25lZCB0byBhIHByaXNvbiB3aGlsZSBoZSBhd2FpdHMgdHJpYWwuIE11cmRlciBjb252aWN0aW9ucyBjYXJyeSBhIG1heGltdW0gb2YgMzUgeWVhcnMgaW4gcHJpc29uIGluIFBlcnUgYW5kIGl0IHdhcyBub3QgaW1tZWRpYXRlbHkgY2xlYXIgaWYgYSBjb25mZXNzaW9uIGNvdWxkIGxlYWQgdG8gYSByZWR1Y2VkIHNlbnRlbmNlLgpPbmUgb2YgeW91ciBiZXN0IHByZWNhdXRpb25zIGFnYWluc3QgZm9vdCBwYWluIGlzIHRvIGJlIGF3YXJlIG9mIGJvdGgKTXIuIFNwcm9hdCBzYWlkIHRoZXkgaGF2ZSBiZWVuIGluIHRhbGtzIHdpdGggdGhlIE5ITCBQbGF5ZXJzIEFzc29jaWF0aW9uIGFtb25nIG90aGVycyBhbmQgYXJlIGdldHRpbmcgcG9zaXRpdmUgZmVlZGJhY2suIERhaWx5IGRvd25sb2FkcyBoYXZlIGRvdWJsZWQgYW5kIGFuIEFuZHJvaWQgdmVyc2lvbiBoYXMgYmVlbiByZWxlYXNlZC4gcHJvZHVjdCBpcyBhIGxvdCBiZXR0ZXIuIFJldGVudGlvbiBpcyBhd2Vzb21lIGFuZCBvdXIgcmV2aWV3cyBvbiB0aGUgYXBwIHN0b3JlIGFyZSBmYW50YXN0aWMsIE1yLiBTcHJvYXQgc2FpZCwgbm90aW5nIHRoYXQgdGhlIHVzZXIgYmFzZSBpcyBub3cgYXQgMTUsMDAwLgpJIGhhdmUgYWxzbyBoZWFyZCB0aGF0IHRoZSBndXlzIHRoYXQgZ290IHRoZWlyIHN0YXJ0IG9ubGluZSB3aGVyZSBiYXNpY2FsbHkgaW4gdGhlIHJpZ2h0IHBsYWNlLCBhdCB0aGUgcmlnaHQgdGltZSwgYW5kIHdlcmUgcnVubmluZyBnb29kIGZvciBtb3N0IG9mIGl0LiBWYXJpYW5jZSBuZXZlciByZWFsbHkgaGl0IHRoZW0uIApQbHVzLCB0aGVyZSBhbGwga2luZHMgb2YgdW5jZXJ0YWludGllcyB0aGF0IGNvdWxkIHNjcmV3IHVwIHRoYXQgcGxhbi4gCkJ1dCB0aGVyZSBhcmUgYWxzbyBmcmVlIHBva2VyIHRvdXJuYW1lbnRzIGFuZCBmcmVlIG9ubGluZSBwb2tlciBnYW1lcyB3aXRoIHJlYWwgbW9uZXkgcHJpemVzLiAKR3Jvc3MgRG9tZXN0aWMgUHJvZHVjdCAsIGFuZCB0aGUgdGhlIGNvdW50cnkgcmVjb3JkZWQgaXRzIHdpZGVzdCB0cmFkZSBkZWZpY2l0IGV2ZXIgaW4gRGVjZW1iZXIuIApTb21lIGhhdmUgY3V0IHRoZW0gb3V0IG1vc3Qgb2YgdGhlIHdheSAob25nb2luZyBvYmxpZ2F0aW9ucyBmb3IgdGhlIG1vc3QgcGFydC4pIFlvdSBhcmUgZG9pbmcgYSBnb29kIHRoaW5nIGFkb3B0aW5nIHlvdXIgZnJpZW5kIGtpZHMuIApXZSBhbHNvIGRvIG5vdCB0YWtlIHRvbyBraW5kbHkgdG8gcmVwb3N0cyBvciBzdG9sZW4gY29udGVudCBlaXRoZXIsIGlmIHlvdSBoYXZlIGNvcGllZCBhbmQgcGFzdGVkIGEgdGhlb3J5IG9yIGFydGljbGUgZnJvbSBlbHNld2hlcmUsIHlvdSBtdXN0IG1ha2UgaXQgYWJ1bmRhbnRseSBjbGVhciB0aGF0IHRoZSBpZGVhIGJlbG9uZ3MgdG8gc29tZW9uZSBlbHNlIGFuZCBnaXZlIGZ1bGwgY3JlZGl0LgpBIExPVCBvZiBjb2RlIG9uIGhhbmQgZXZhbHVhdGlvbiBwcmVzZW50ZWQgaW4gdGhlIGFydGljbGUgIlRoZSBHcmVhdCBQb2tlciBIYW5kIEV2YWx1YXRvciBSb3VuZHVwIjogWFBva2VyRXZhbC4gSSB3b3VsZCByZWNvbW1lbmQgeW91IHBva2Vyc291cmNlIHNpbmNlIGl0IGhhcyBiZWVuIHBvcnRlZCB0byBhbGwga2luZHMgb2YgbGFuZ3VhZ2VzLiBUd29QbHVzVHdvIGV2YWx1YXRvciBzaG93cyBncmVhdCBlbnVtZXJhdGlvbiBiZW5jaG1hcmsgYnV0IGZhaWxlcyBhdCBNb250ZSBDYXJsbyBkdWUgdG8gY2FjaGUgbWlzc2VzLgpUaGUgcmVjb3JkcyBzaG93IEhhcnJvZCB3b24gYSBjb21iaW5lZCAkOS4xIG1pbGxpb24gZHVyaW5nIHRoZSBzYW1lIHBlcmlvZC4gCkFmdGVyIGZvbGxvd2luZyBmb3IgYXdoaWxlIGFuZCBvYnNlcnZpbmcgdGhlIHNsZWF6eSB0YWN0aWNzIGFuZCBhbGwgb2YgdGhlIHN1Y2tlcnMgd2hvIGdldCBiYWl0ZWQsIEkgZGVjaWRlZCB0byBzY3JhdGNoIHRoYXQgcGFydCBvZiBteSBicmFpbiBhbmQgZG8gc29tZSByZXNlYXJjaCBvbiBhIGxvdCBvZiB0aGVzZSBmb2xrcy4gR2VuZXJhbGx5IHNwZWFraW5nLCBteSBndXQgcmVhY3Rpb24gd2FzIG5vdCB3cm9uZy4gClRoaXMuIFRoZSBPUCBwdXQgYSByZXF1ZXN0IG9uIHRoZSBkYXVnaHRlciBmb3IgcGhvbmUgY2FsbHMgYW5kIGV4cGVjdHMgaGVyIHRvIGZvbGxvdyBoZXIgcmVxdWVzdCwgYnV0IHJlZnVzZXMgdG8gZG8gd2hhdCB0aGUgZGF1Z2h0ZXIgYXNrcy4gV2hlbiBteSBraWRzIGFyZSB1cHNldCwgbXkgcXVlc3Rpb24gdG8gdGhlbSBpcyB3aGF0IGRvIHlvdSBuZWVkLCBob3cgY2FuIEkgaGVscCB5b3U/IElmIG15IGNoaWxkIGFza2VkIG1lIHRvIGdvIHRvIHNvbWV0aGluZyB0byBzYXZlIG91ciByZWxhdGlvbnNoaXAsIEkgd291bGQgZG8gaXQgaW4gYSBoZWFydGJlYXQuIApZb3UgY2FuIGFsc28gZmluZCBhbGwgdGhlIGF2YWlsYWJsZSBtb2RlbHMsIHNpemVzIGFuZCBjb2xvcnMgaW4gdGhlIHBvcHVsYXIgb25saW5lIG1hcmtldHBsYWNlcy4gU28sIGRvIGdldCBvbmUgb2YgdGhlIGdyZWF0ZXN0IHNodWZmbGVycyBhdmFpbGFibGUgaW4gdGhlIG1hcmtldCBub3cuIApJIGtub3cgdGhhdCBub3QgcHJlY2lzZWx5IHlvdXIgc2l0dWF0aW9uLCBidXQgSSB3YW50ZWQgdG8gcHV0IHRoZSAianVzdCBvYmxpdmlvdXMiIHBvc3NpYmlsaXR5IG91dCB0aGVyZS4gRWl0aGVyIHdheSwgaXQgbXkgYWR2aWNlIHRvIHNheSBzb21ldGhpbmcgbm93LCBiZWZvcmUgeW91IGxvb2sgYmFjayBhdCAxOSB5ZWFycyBvZiB2YWd1ZSBzYWRuZXNzIGF0IHlvdXIga2lkIGJlc3QgbWVtb3JpZXMuClRoZSBnb3Zlcm5tZW50LCBhbmQgdGhlIHBlb3BsZSwgY2FuIGp1c3QgZ28gb24gbGlrZSBiZWZvcmUuIApCZXNpZGVzIHRoZSBNYWluIEV2ZW50IGFuZCBOZXltYXIncyBjaGFyaXR5IG1hdGNoLCB0aGVyZSBhcmUgYSBmZXcgb3RoZXIgZmVhdHVyZSBldmVudHMgdG8gd2F0Y2gsIGluY2x1ZGluZyB0aGUgRXN0cmVsbGFzIFBva2VyIFRvdXIgTWFpbiBFdmVudCwgdGhlIEJhcmNlbG9uYSBDdXAgYW5kIHRoZSBIaWdoIFJvbGxlciBhbmQgU3VwZXIgSGlnaCBSb2xsZXIgZXZlbnRzIHdoaWNoIGFsd2F5cyBkcmF3dGhlIGJpZ2dlc3QgbmFtZXMgaW4gdGhlIHdvcmxkLiBMYXN0IHllYXIncyBTdXBlciBIaWdoIFJvbGxlciBzYXcgYSBwYWlyIG9mIGZvcm1lciBXb3JsZCBUb3AgMTAgcmFua2VkIHBsYXllcnMsT2xpdmllciBCdXNxdWV0IChHUEkgTm8uIDE5KSBhbmQgRGFuIENvbG1hbiAoR1BJIE5vLiBmaXJzdCBwcml6ZS4KU2hlIGlzIGEgMjAxNyAxOCBGZWxsb3cgaW4gdGhlIFVuaXZlcnNpdHkgYXQgQnVmZmFsbyBJbnN0aXR1dGUgZm9yIHRoZSBSZXNlYXJjaCBvbiBXb21lbiBhbmQgR2VuZGVyIGFuZCAyMDE4IDIwMTkgSHVtYW5pdGllcyBJbnN0aXR1dGUgZmVsbG93LiAKUG91cnF1b2kgcyBkZXZhbnQgbGVzIGJhaWVzIGRlIGdvamkgYWxvcnMgcXVlIG5vdXMgYXZvbnMgY2UgYnJhdmUgY3lub3Job2RvbiBxdWUgbm91cyBvZmZyZSBub3RyZSBib24gdmlldXggcnVzdGlxdWUgUm9zYSBjYW5pbmEgPyBJbnV0aWxlIGQgZW52YWhpciBkZXMgcGF5cyBsb2ludGFpbnMgIGxhIHJlY2hlcmNoZSBkIHByY2lldXggR3JhYWwgdmd0YWwuIApUaGlzIGNvcmsgc28gInJhemRyYWtvbmlsYSIgbXkgYW51cyB0aGF0IEkgd2FzIGFjdGl2ZSB3aXRoIGdyZWF0IGpveSB0byBtYXRjaCBteSBtYXN0ZXIuIApBbmQgVVNCIHBvcnRzIGFyZSBnZXR0aW5nIG1vcmUgcG93ZXJmdWwgKEdpem1vZG8gc2FpZCB0aGV5ICJjb3VsZCBiZSB0aGUgcG93ZXIgb3V0bGV0cyBvZiB0aGUgW3ZlcnkgbmVhcl0gZnV0dXJlJycpLiAKVGhpcyBzZWFzb24sIHlvdSBjYW4gUEFYIGluIGhvdCBwaW5rIHRoYW5rcyB0byBhIGxpbWl0ZWQgZWRpdGlvbiBydW4gaW4gZnVjaHNpYS4gClRoZSBzcGluYWwgZGlzYyBhbmQgam9pbnRzIG9mIHRoZSBib2R5IGxpdmVzIGJlY2F1c2Ugb2YgbW92ZW1lbnQuQ3VycmVudCBjb25jZXB0cyBjb25jZXJuaW5nIHRoZSBjZW50cmFsIHJvbGUgb2YgbW90aW9uIGFuZCBqb2ludCBudXRyaXRpb24gaW4gcmVkdWNpbmcgc3BpbmFsIGRlZ2VuZXJhdGlvbiB3ZXJlIGRlcml2ZWQgZnJvbSBjb21wZWxsaW5nIHN0dWRpZXMgcHVibGlzaGVkIGluIHRoZSAxOTgwJ3MgYnkgaW50ZXJuYXRpb25hbGx5IHJlbm93bmVkIHJlc2VhcmNoZXJzIGludmVzdGlnYXRpbmcgdGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIG1vdmVtZW50IGFuZCBkaXNjIGZ1bmN0aW9uLiBUaGlzIHByb2NlZHVyZSBwcmVzZXJ2ZXMgbm9ybWFsIGRpc2MgaGVpZ2h0IGFuZCBwZXJtaXRzIHBhc3NpdmUgZGlmZnVzaW9uIGJ1dCBwcmV2ZW50cyBmbHVpZCBmbG93OyB0aGF0IGlzLCBwcmVzc3VyZSBkZXBlbmRlbnQgdHJhbnNmZXIgb2YgZmx1aWQsIGFuZCBjcmVlcCBkZWZvcm1hdGlvbi5BdCwgMywgNSwgOCBtb250aHMgYWZ0ZXIgZnVzaW9uIHRoZSBkb2dzIHdlcmUgc2FjcmlmaWNlZC4gVGhlIGRpc2NzIGluY2x1ZGVkIHdpdGhpbiB0aGUgZnVzaW9uIGV4aGliaXRlZCBhIGRlY3JlYXNlIHV0aWxpemF0aW9uIG9mIGVuZXJneSwgZ2x1Y29zZSwgYW5kIG94eWdlbiBhcyBjb21wYXJlZCB0byBhZGphY2VudCBkaXNjcy5JbiBhZGRpdGlvbiwgdGhlIGRpc2NzIHdpdGhpbiB0aGUgYXJlYSBvZiBmdXNpb24gYWxzbyBoYWQgZGVjcmVhc2VkIHdhdGVyIGNvbnRlbnQsIG1ldGFib2xpYyBhbmQgY2VsbHVsYXIgYWN0aXZpdHkuIApZb3Ugc291bmQgdmVyeSB3ZWxsIG1pbmRlZC4gSSBubyB0aGVyYXBpc3QsIGJ1dCBJIHNheSB5b3Ugb24gdGhlIHJpZ2h0IHRyYWNrIGZvciBzdXJlLiBJIHdhcyBwcmV0dHkgaGVhdnkgb24gb3BpYXRlcyBmcm9tIDE1IDE2IGFuZCBJIG11c3Qgc2F5IHRoYXQgdGhhdCBwbGF5ZWQgYSBodWdlIHBhcnQgaW4gbXkgc2VsZiBjb25maWRlbmNlIGRlZmxhdGluZyBsaWtlIGl0IGRpZC4gSSBwbGF5ZWQgV29XOyBsb2dnZWQgb24gdG8gcmFpZCBhbmQgZ3JpbmQsIGNydXNoZWQgd2hhdGV2ZXIgYW5kIG5vZGRlZCB0byBzbGVlcC4gVGhpcyB3YXMgYSBkZXN0cnVjdGl2ZSBjeWNsZSwgYnV0IEkgd2FzIGZvcnR1bmF0ZSBub3QgdG8gZW5jb3VudGVyIGRlcGVyc29uYWxpemF0aW9uIHVudGlsIGxhdGVyIG9uIChwb3NzaWJseSBiZWNhdXNlIHRoaXMgc3RpbnQgb25seSBsYXN0ZWQgdGhyZWUgb3IgZm91ciBtb250aHMuKSBHZXR0aW5nIG91dCBtb3JlIGFuZCBpbnZvbHZlZCBpbiBuaWNoZSBjb21tdW5pdGllcyBoZWxwZWQuIEZvciBpbnN0YW5jZSwgSSBzdGFydGVkIHBsYXlpbmcgYSBsb3Qgb2YgYm9hcmQgZ2FtZXMgd2hpY2gsIGluIHR1cm4sIGxlZCB0byBtZSBwYWludGluZyBtaW5pYXR1cmUgZmlndXJlcyBmb3IgdXNlIGluIGJvYXJkIGdhbWVzIGFuZCBnYW1lcyBsaWtlIFdhcmhhbW1lci4gRG8geW91IGhhdmUsIG9yIGhhdmUgeW91IGNvbnNpZGVyZWQsIGFueSBvdXRsZXRzPyBJIGVuam95IGVudGhyYWxsaW5nIG15c2VsZiBpbiBzbWFsbCBvdXRsZXRzLCBhbmQgZmluZGluZyBvbmVzIHRoYXQgYWxzbyBoYXZlIGdyZWF0IGNvbW11bml0aWVzIHRvIHJlYWNoIG91dCB0byBvdGhlcnMgaXMgYSBodWdlIGJlbmVmaXQgYWxsIGFyb3VuZCEgSSBtYWRlIHNvIG1hbnkgY2xvc2UgZnJpZW5kcyBkdWUgdG8gdGhhdCBvbmUgc2ltcGxlIGxpdHRsZSBob2JieSwgYW5kIEkgdGhpbmsgeW91IGJlIGhhcmQgcHJlc3NlZCB0byBOT1QgZmluZCBvbmUgdGhhdCBpbnRlcmVzdHMgeW91LgpTbyBJIGRlY2lkZWQgSSB3b3VsZG4gcmVwbGFjZSBpdCB0aGlzIHRpbWUuIApEZXNwaXRlIHRoZSBob21lIHdyZWNrZXIgdGFnLCBNY0dlZSBhdHRyYWN0ZWQgcGxlbnR5IG9mIGNvdXBsZXMga2VlbiBmb3IgYSBwaG90by4gIkkgbG92ZSB3aGF0IEkgZG8uIApUaGlzIGlzIHdoeSB5b3UncmUgYWZyYWlkIHRvIGJyZWFrIHVwIGEgYmFkIHJlbGF0aW9uc2hpcApJdCdzIHRoZSB1c3VhbCBwcmFjdGljZSBvbiBpbnRlcm5hdGlvbmFsIGZsaWdodHMgdG8gY2xvc2Ugc2hhZGVzIGFmdGVyIHRoZSBtZWFsIGFuZCBjcmFuayB1cCB0aGUgQUMuIFRoZXkgZG8gdGhpcyBzbyBwYXNzZW5nZXJzIGZhbGwgYXNsZWVwLiBTbGVlcGluZyBwYXNzZW5nZXJzID0gbGVzcyBkZW1hbmRzIG9mIHRoZSBjcmV3LCBsZXNzIG5vaXNlLCBhbmQgc21vb3RoZXIgZmxpZ2h0IGZvciBldmVyeW9uZS4KQnV0IHBva2VyIGlzIGEgZ2FtZSB0aGF0IHBlcnNpc3RlbnRseSBjaGFsbGVuZ2VzIG5vdCBvbmx5IHlvdXIgaW50ZWxsZWN0LCBidXQgeW91ciBlbW90aW9ucyBhcyB3ZWxsLiAKQXV0b21hdGlvbiBpcyBnb2luZyB0byBiZSBvbmUgb2YgdGhlIGJpZ2dlc3QgZmFjdG9ycyBpbiBhY2hpZXZpbmcgbWFqb3Igc3BhY2UgZXhwbG9yYXRpb24sIGltby4gSXQgd2lsbCBmcmVlIGh1bWFucyBmcm9tIGhhdmluZyB0byBmb2N1cyBvbiBiYXNpYyBuZWVkcyBhbmQgYWxsb3cgdXMgdG8gZGV2ZWxvcCBmdXJ0aGVyIHRlY2hub2xvZ3kuIApJdCB3YXMganVzdCBtaW51dGVzIGFuZCB0aGVuIEkga25ldyBzaGUgd2FzIGdvbmUuIEl0IHdhcyBzbyBzYWQgZm9yIG1lIGJ1dCB3ZSdkIGhhZCB0byB0YWtlIGhlciBvZmYgZGlhbHlzaXMgYmVjYXVzZSBoZXIgYm9keSB3YXMganVzdCB3ZWFyaW5nIG91dCBzbyBJIGtuZXcgc2hlJ2Qgb25seSBsYXN0IGEgd2VlayB0byAxMCBkYXlzLiBTaGUgb25seSBtYWRlIGl0IDYgZGF5cy4gClN0YWR0cGxhbmVyIGltIGZmZW50bGljaGVuIERpZW5zdCBpbiBkZXIgdmVyYmluZGxpY2hlbiBCYXVsZWl0cGxhbnVuZy4gZmZlbnRsaWNoZXIgRGllbnN0LCBkYSB2ZXJiaW5kbGljaGUgQmF1bGVpdHBsYW51bmcgSG9oZWl0c2F1ZmdhYmUgaXN0IHVuZCBudXIgZGFzIHJlaW5lIEVyYXJiZWl0ZW4gZGVyIFBsbmUgaW4gZGVyIFdpcnRzY2hhZnQgbmljaHQgZXJmbGxlbmQgZnIgbWljaCwgd2VpbCB6dSB3ZW5pZywgaXN0LiBTb2Zlcm4gZGllc2UgYmVyaGF1cHQgdmVyZ2ViZW4gd2VyZGVuLgpBdCB0aGF0IHRpbWUgc2lucyBvZiB0aGUgd2hvbGUgd29ybGQgd2VyZSBzb2FyaW5nIGFsbCByZWZ1c2VkIHRvIGxpc3RlbiB0byBOb2FoJ3MgdGVzdGltb255OyB3aG8gd2FzIHRoZSBvbmx5IHJpZ2h0ZW91cyBtYW4gb24gdGhlIGZhY2Ugb2YgdGhpcyBlYXJ0aC4gR29kIGFwcG9pbnRlZCBoaW0gdG8gd2l0bmVzcyBHb2QncyB1cGNvbWluZyBqdWRnbWVudCB0byBldmVyeSBsaXZpbmcgYXQgdGhhdCB0aW1lLiBBbGFzLCBvbmUgbGlzdGVuZWQgdG8gaGltOyBidXQgbWFkZSBhIGpva2UgYXMgaWYgaGUgaGFzIGxvc3QgaGlzIHNlbnNlczogYmVjYXVzZSBvZiBoaXMgb2JlZGllbmNlIHRvIEdvZCdzIGluc3RydWN0aW9uIGJ1aWxkIGEgYm9hdCAoIE5vYWggQXJrKSBvbiBsYW5kLCB3aGVyZSB0aGVyZSB3YXMgbm8gc2lnbiBvZiBhbnkgb2NlYW4sIHJpdmVyIG9yIGxha2UuLiAKVGhvdWdodHM/UHJpbWU2MjQgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb1NlZW1zIGEgYml0IGV4Y2Vzc2l2ZSB3aXRoIHRoZSBmZWVzIGFuZCBnZW8gbGltaXRzLiBTdXJlLCB0aGV5IHNob3VsZG4gYmUgc3BlZWRpbmcgZG93biBhIHBlZGVzdHJpYW4gYXJlYSwgYnV0IGlzbiB0aGF0IGxhdyBlbmZvcmNlbWVudCBqb2IgdG8gaGFuZGxlPyBBZGRpdGlvbmFsbHksIGlmIGl0IGxhdGUgYXQgbmlnaHQgYW5kIG5vIG9uZSB0aGVyZSwgd2h5IGRvZXMgaXQgbWF0dGVyP1RoZSBkZXRyYWN0b3JzIHdobyBzYXkgaXQgaXNuIGVub3VnaCBhcmUgZG93bnJpZ2h0IGx1ZGljcm91cywgYW5kIGp1c3QgdGhlIHR5cGUgb2YgTklNQlkgdGhhdCBhcmUgaW1wZWRpbmcgdGhlIGNpdHkgcHJvZ3Jlc3MuQmlnZ2VzdCBpc3N1ZSBJIHRoaW5rLCBpcyB0aGUgdXNlIG9mIHRoZW0gb24gc2lkZXdhbGtzLiBNeSBvcGluaW9uIG9uIHRoYXQgaXMgdGhhdCB0aGUgaXNzdWUgaXNuIHRoZSBzY29vdGVycywgaXQgdGhlIGxhY2sgb2YgZ29vZCBiaWtlIGxhbmVzLiAKQ2FsbGluZyB5b3Vyc2VsZiBhIHRyaWF0aGxldGUgaXMgYW4gZWdvIGJvb3N0IHlvdSB3b24ndCBnZXQgYW55d2hlcmUgZWxzZS4uIApXaHkgaXQgV29ya3NJdCdzIGEgd3JhcDogVGhlIHdyYXAgYXJvdW5kIGNvbmZpZ3VyYXRpb24gbWF4aW1pemVzIHNwYWNlIG9uIHRoZSBiYWNrIGFuZCBzaWRlIHdhbGxzIGFuZCBjcmVhdGVzIHRoZSBpbGx1c2lvbiB0aGF0IHRoZSBraXRjaGVuIGlzIGxhcmdlciB0aGFuIGl0cyBhY3R1YWwgMTMgYnkgMTMgc3F1YXJlIGZvb3Qgc2l6ZS4KRm9yIGV4YW1wbGUsIHRocm93aW5nIHRocmVlIGRvdWJsZXMgaW4gYSByb3cgc2VuZHMgeW91IHRvIGphaWw7IHRoZSBnbyBkaXJlY3RseSB0byBqYWlsIHNxdWFyZTsgdGhlIENoYW5jZSBhbmQgQ29tbXVuaXR5IENoZXN0IGNhcmRzIHRoYXQgc2VuZCB5b3Ugb2ZmIGFyb3VuZCBkaWZmZXJlbnQgcGxhY2VzIG9uIHRoZSBib2FyZCwgYW5kIHNvIG9uLiAKRGFuYWNoIGhhYiBpY2ggcmVjaHQgdmllbCBnZXNwZXd0LCB3ZWlsIGljaCBrZWluZW4gZWluemlnZW4gRHJhdyBnZXRyb2ZmZW4gaGFiZS4gTGV0enRlbmRsaWNoIGJpbiBpY2ggbWl0IDE1MCBFVVIgcGx1cyB1bSBrdXJ6IHZvciA1IChNb3JnZW5zKSBuYWNoIGhhdXNlIGdlZmFocmVuLi4gCkl0cyBub3QgYXMgc2ltcGxlIGFzIHRoZXkgc2FpZCB0aGlzLCBvciBhY3RlZCB0aGlzIHdheSBGb3IgZXhhbXBsZSwgSSBrbm93IHRoYXQgYmFkIHBsYXllcnMgd2lsbCBzaXQgYmFjayBpbiB0aGVpciBjaGFpciwgc3ByZWFkIG91dCwgb3IgZ2V0IHJlYWxseSBjaGF0dHksIHdoZW4gdGhleSBhcmUgY29uZmlkZW50LiAKSGUncyB0YWtpbmcgbXkgbmFtZSAgIERTMSBpc24ndCBoaXMgY2hpbGQgYmlvbG9naWNhbGx5LCBhbmQgY2FycmllcyBteSBuYW1lLiBTbyBGREggZGVjaWRlZCBoZSB3b3VsZCB0YWtlIG15IG5hbWUsIGFuZCBzbyB3b3VsZCBvdXIgRFMyIEREMSBiZWNhdXNlIGhlIGRvZXNuJ3QgbGlrZSBjYXJyeWluZyBTRklMJ3MgbmFtZSAgIGVzcGVjaWFsbHkgbm93IHRoYXQgaGUga25vd3MgU0ZJTCBpc24ndCBoaXMgYmlvbG9naWNhbCBmYXRoZXIuIApTbywgSSBkb24ndCBrbm93LiBJIGtub3cgdGhhdCB0aGUgbW9uZXkgaXMgc2l0dGluZyBqdXN0IGluIGZyb250IG9mIG1lIHN0YXJpbmcgYXQgbWUuIEkga25vdyB0aGF0IEkgY2FuIGRvIHRoaXMgc3R1ZmYgb25jZSBpdCBnZXRzIGdvaW5nLiAKVGhlIG1hc3MgYW5kIHZlbG9jaXR5IG9mIHRoZSBnYXMgaXMgYmlnIGVub3VnaCB0byBhY2NlbGVyYXRlIHRoZSBjYXIgb3IgY2hhbmdlIGl0IHRyYWplY3Rvcnkgd2hpY2ggbWVhbnMgaXQgd291bGQgYWxzbyBlYXNpbHkgYmUgZW5vdWdoIHRvIGxpdGVyYWxseSBibG93IGF3YXkgYW55Ym9keSBzdGFuZGluZyBuZXh0IHRvIGl0LiAKSSBkb24gdGhpbmsgaGlzIGRhZCBpcyBnb2luZyBhYm91dCBkaXNjaXBsaW5lIHJpZ2h0IEFUIEFMTC4gClRoZXkgbmVlZCBzdG9yeSB0ZWxsZXJzLiAKUXVhZCBTdHJldGNoOiBTdGFuZCBiZWhpbmQgYSBjaGFpciB3aXRoIHlvdXIgbGVmdCBoYW5kIG9uIHRoZSBiYWNrIG9mIHRoZSBjaGFpciB0byBoZWxwIHlvdSBtYWludGFpbiB5b3VyIGJhbGFuY2UuIEJlbmQgeW91ciByaWdodCBrbmVlLCByYWlzZSB5b3VyIHJpZ2h0IGZvb3QgdXAgYmVoaW5kIHlvdSwgYW5kIGdyYXNwIHRoZSByaWdodCBmb290IHdpdGggeW91ciByaWdodCBoYW5kLiAKVHdvIFVIIFNjaWVudGlzdHMgTmFtZWQgdG8gTmF0aW9uYWwgQWNhZGVteSBvZiBJbnZlbnRvcnMKVGhleSBhbHNvIGNvbnRhaW5lZCBzb2FwLCB3aGljaCB3YXMgdW5uZWNlc3NhcnkgYW5kIGluIHNvbWUgY2FzZXMgZXZlbiBjb3VudGVyIHByb2R1Y3RpdmUsIGJ1dCB3ZSBoYXZlIHRoaXMgaGFuZ3VwIGFib3V0IHdhbnRpbmcgZXZlcnl0aGluZyB0byBmb2FtLiAKTGV0IHNheSB0aGUgdHJhaW4gaXMgdHJhdmVyc2luZyB0aGUgc291dGhib3VuZCBhcHByb2FjaCwgeW91IGNhbiBzZWUgdGhlIHN5c3RlbSBkb2VzbiByZXNwb25kIHVudGlsIHRoZSB0cmFpbiBoaXRzIHdoYXQgd2UgY2FsbCB0aGUgaXNsYW5kLiBUaGUgaXNsYW5kIGlzIHRoZSBtb3RvcmluZyBwdWJsaWMgcG9ydGlvbiBvZiB0aGUgcm9hZCB0eXBpY2FsbHkgMTIwIDE1MCBmZWV0IGluIGxlbmd0aCBhbmQgaXMgZGVzaWduZWQgdG8gYmUgZmFpbCBzYWZlLiAKMTEuIFV0aWxpc2F0aW9uIGRlIGwgZGUgcmVjaGVyY2hlClRoYXQgc2FpZCwgd2hlbiB3b3JraW5nIG9uIGEgcGllY2Ugb2YgcGVyZm9ybWFuY2UgY3JpdGljYWwgY29kZSwgd2UgY2FuIGdpdmUgdXAgb24gbW9zdCBvZiB0aGUgc3RhbmRhcmQgbGlicmFyeSwgKGJ5ZSBMaW5xLCBTdHJpbmdGb3JtYXR0ZXIsIExpc3QsIERpY3Rpb25hcnkpLCBkaXNhbGxvdyBhbGxvY2F0aW9ucyAoPW5vIGNsYXNzZXMsIG9ubHkgc3RydWN0cyksIHJlZmxlY3Rpb24sIHRoZSBnYXJiYWdlIGNvbGxlY3RvciBhbmQgdmlydHVhbCBjYWxscywgYW5kIGFkZCBhIGZldyBuZXcgY29udGFpbmVycyB0aGF0IHlvdSBhcmUgYWxsb3dlZCB0byB1c2UgKE5hdGl2ZUFycmF5IGFuZCBmcmllbmRzKS4gVGhlbiwgdGhlIHJlbWFpbmluZyBwaWVjZXMgb2YgdGhlIEMgbGFuZ3VhZ2UgYXJlIGxvb2tpbmcgcmVhbGx5IGdvb2QuCkhlbmRlcnNvbiwgTmV2YWRhSGVuZGVyc29uLCBOZXZhZGEsIGlzIGxvY2F0ZWQgYWJvdXQgMTUgbWludXRlcyBlYXN0IG9mIHRoZSBMYXMgVmVnYXMgU3RyaXAgYW5kIGlzIGhvbWUgdG8gbWFueSBjYXNpbm9zLCBob3RlbHMsIHJlc3RhdXJhbnRzIGFuZCBzaG9wcGluZyBvcHBvcnR1bml0aWVzLiBUaGUgR3JlZW4gVmFsbGV5IFJhbmNoIFJlc29ydCBvZmZlcnMgdmlzaXRvcnMgYSBsYXJnZSBjYXNpbm8gd2l0aCBtb3JlIHRoYW4gMiwyMDAgc2xvdCBtYWNoaW5lcywgNTUgdGFibGVzIGdhbWVzLCBhIHBva2VyIHJvb20gYW5kIHJhY2UgYW5kIHNwb3J0cyBib29rLiBHdWVzdCBhbHNvIGZpbmQgYSBBQUEgRm91ciBEaWFtb25kIGF3YXJkIHdpbm5pbmcgaG90ZWwsIGEgc3BhLCBtb3JlIHRoYW4gZWlnaHQgb24gc2l0ZSByZXN0YXVyYW50cywgYSBtb3ZpZSB0aGVhdGVyLCBhIGxpdmUgZW50ZXJ0YWlubWVudCB2ZW51ZSBhbmQgY29udmVudGlvbiBzcGFjZS4gSGVuZGVyc29uIGd1ZXN0cyBjYW4gZ2FtYmxlIGF0IFN1bnNldCBTdGF0aW9uIEhvdGVsIGFuZCBDYXNpbm8gYW5kIENsdWIgRm9ydHVuZSBDYXNpbm8uCkRlIG1tZSBxdSdlbGxlcyBzYXZlbnQgc2kgZWxsZSBuZSBzZSBtYXF1aWxsZSBwYXMgcGFyIG1hbnF1ZSBkZSBjb25maWFuY2UgZW4gZWxsZSwgb3UgYXUgY29udHJhaXJlIHBhcmNlIHF1ZSBjJ2VzdCB1biBjaG9peCBjb25zY2llbnQgZXQgaGV1cmV1eC4gCkluc3RlYWQsIHdlIHdyaXRlLCBlZGl0LCBhbmQgYW5zd2VyIGUgbWFpbHMgYSBsb3Qgb2YgZSBtYWlscyB3aGlsZSBzdGFuZGluZyBpbiBmcm9udCBvZiBvdXIgY29tcHV0ZXJzLiBBbGwgZGF5IGxvbmcuIFdoeT8KQSByZWFzb24gYmxhY2sgbWVuIGFyZSBtb3JlIGxpa2VseSB0byBnbyB0byBwcmlzb24gdGhhbiBjb2xsZWdlIGFuZCBpdCBzdXJlIGlzbiBhcyBzaW1wbGUgYXMgImNyaW1lIGFuZCBwdW5pc2htZW50LiIgd2UgYWNrbm93bGVkZ2UgdGhlIHN5c3RlbXMgb2YgcmFjaWFsIHByaXZpbGVnZSB0aGF0IHN0cnVjdHVyZSB3aGl0ZSBsaXZlcywgdW50aWwgd2UgdGFrZSBhIGNyaXRpY2FsIGV5ZSB0byB0aGUgbXlyaWFkIHdheXMgaW4gd2hpY2ggc29tZSBvZiB1cyBiZW5lZml0IGZyb20gdGhlIGNvbG9yIGxpbmUgYW5kIHNvbWUgb2YgdXMgZG9uIHdlIHdpbGwgY29udGludWUgdG8gcmVseSBvbiB0aGUgZXhpc3RlbmNlIG9mIHRoZSBjb2xvciBsaW5lLCBubyBtYXR0ZXIgaG93IG11Y2ggd2UgYWNrbm93bGVkZ2UgdGhhdCBpdCBjb21wbGV0ZWx5IG1hZGUgdXAuIFdhcyByaWdodCB0byBzdWdnZXN0IHRoZSBjb2xvciBsaW5lIHdvdWxkIGJlIHRoZSBwcm9ibGVtIG9mIHRoZSB0d2VudGlldGggY2VudHVyeS4gCkluc2lkZSwgaXQgd2FzIGFzIGRhcmsgYXMgYSBtb3ZpZSB0aGVhdGVyLCB0aGUgcGFwZXIgYW5kIGhlYXZ5IGN1cnRhaW5zIGJsb3R0aW5nIG91dCBhbnkgc3Vuc2hpbmUuIFRoZSBzbWVsbCBvZiBzd2VhdCByb3NlIGZyb20gdGhlIGNhcnBldC4gU29vbiB0aGUgcGxhY2Ugd291bGQgZmlsbCB3aXRoIGN1c3RvbWVycywgc28gQ2xhaXJlIGNoYW5nZWQgaW50byBhIHN0cmFwcHkgemVicmEgcHJpbnQgZHJlc3MgYW5kIHN0ZWVsZWQgaGVyc2VsZiB3aXRoIGEgc21pbGUgZm9yIHRoZSBqb2Igb2YgZ2l2aW5nIG1hc3NhZ2VzLCBhbmQgb2NjYXNpb25hbGx5IG1vcmUsIHRvIGEgcGFyYWRlIG9mIG1lbiwgc29tZXRoaW5nIHNoZSBkb2VzIGZvciA4MCBob3VycyBhIHdlZWsuCkhhdmluZyBub3QgbWVudGlvbmVkIGl0IHRoZSBmaXJzdCB0aW1lLCBpdCB3YXMgc29tZWhvdyBldmVuIGhhcmRlciB0byByYWlzZSB0aGUgc3ViamVjdCB0aGUgc2Vjb25kIHRpbWUgYXJvdW5kLiAKSGUgc3RhcnRlZCBiZWluZyBydWRlIHRvIG15IHdpZmUuIEkgaGFkIGEgY2hvaWNlLiAKV29uZGVyIGlmIHBlb3BsZSBhcmUgc3RpbGwgZ29ubmEgZ2V0IHRoaXMgcmVwbHkgcGVyc29uYWwuLiAKSXQgd2FzIGdyZWF0LiBIb3dldmVyLCBJIGRldmVsb3BlZCBzb21lIGJhZCBoYWJpdHMgdGhhdCBkbyBub3QgdHJhbnNsYXRlIHRvICQxLzMgYW5kICQyLzUgKGF0IGxlYXN0IGFyb3VuZCBoZXJlKSBhbmQgdGhvc2UgYmFkIGhhYml0cyBjb3N0IG1lIG1vcmUgdGhhbiBJIHdvbiBpbiB0aGUgJDEvMSBnYW1lIHByZXR0eSBxdWlja2x5LgpBbmQsIHNvLCBXaGl0ZSBIb3VzZSBwcmlvcml0aWVzIHNoaWZ0ZWQgc3VidGx5IHRvIHBsZWFzZSB0aGUgcGx1dG9jcmF0cyBhbmQgdHJ5IHRvIG5ldXRyYWxpc2UgdGhlIFRlYSBQYXJ0eSBmYW5hdGljcyBieSBjbyBvcHRpbmcgdGhlaXIgcHJvZ3JhbSB0aGUgd2F5IEJpbGwgQ2xpbnRvbiBkaWQgaW4gMTk5Ni4gSXQgd2FzIGNhbGxlZCAidHJpYW5ndWxhdGlvbiIgdGhlbi4gCkl0IGlzIGEgdHlwaWNhbCBleGFtcGxlIG9mIGNhc2lubyBib251cyBvbiB0aGUgZmlyc3QgZGVwb3NpdC4gCkNhciwgZGFucyB0b3VzIGxlcyBjYXMsIGlsIGVzdCBlc3NlbnRpZWwgKGV0IHBhcyBkdSB0b3V0IGdvc3RlICEpIGRlIHByZW5kcmUgZHUgdGVtcHMgcG91ciBzb2kuIApBcyBmb3IgZ2VuZXJhbCBzaGlwIHBsYWNlbWVudCwgdGhhdCBoYXMgdG8gZG8gd2l0aCB3aG8gZmxhbmtpbmcsIHdoYXQgdGltZSBJIHBsYWNpbmcgbXkgc2hpcHMgdnMgbXkgb3Bwb25lbnQuIERvIEkga25vdyB3aGVyZSB0aGVpciBqb3VzdC9mbGFuayBpcz8gRG8gSSB3YW50IHRvIGJlIGV2YXNpdmUgdG8gc3RhcnQsIG9yIGRvIEkgd2FudCB0byBiZSBhZ2dyZXNzaXZlIGFuZCB0YWtlIHRoZW0gaGVhZCBvbj8gSXQgYWxsIGRlcGVuZHMgb24gYSB0b24gb2YgZmFjdG9ycy4gU29ycnkgSSBkb24gaGF2ZSBhIHNwZWNpZmljIGFuc3dlciwgYnV0IEkgYXQgdGhlIHBvaW50IGluIHRoaXMgZ2FtZSB0aGF0IEkgdGhpbmsgcmVhbGx5IGRlZXBseSBhYm91dCB0aGlzIGtpbmQgb2YgdGhpbmcgc28gaXQgbm90IGFzIGVhc3kgdG8gYW5zd2VyIGFzIEkgbGlrZS4uIApQbGVhc2UgdGVsbCBtZSB3aGF0IHlvdSB0aGluay4gSSBhbSBkZWJhdGluZyBvdmVyIHdoZXRoZXIgSSBzaG91bGQgYnJlYWsgdXAgd2l0aCBteSBib3lmcmllbmQgb3Igbm90LgpXaGF0IGtpbmQgb2YgaGFuZHMgZG8geW91IHRoaW5rIHlvdSBhcmUgYmVhdGluZyB0aGF0IGhlIGNvdWxkIGhhdmU/IFRoZSBvbmx5IGNvbmNlaXZhYmxlIHdvcnNlIFF1ZWVucyBhcmUgUTksIFE4IGFuZCBJIGRvbiB0aGluayBoZSBiZXRzIGxpa2UgdGhhdCB3aXRoIHRob3NlIGhhbmRzLiAKTmV3IHRlYWNoZXJzIGFuZCBwc3ljaG9sb2dpc3RzIGFyZSBieSBkZWZpbml0aW9uIGluZXhwZXJpZW5jZWQuIApUaGVyZSBpcyAkMTI2LDAwMCBpbiBSb2JiaWUgY29tcGFueSBkZWZpbmVkIGNvbnRyaWJ1dGlvbiBwZW5zaW9uLiBIZSB3aWxsIHJlY2VpdmUgJDYsMTg5IHBlciB5ZWFyIGZyb20gaGlzIGVtcGxveWVyIGVhY2ggeWVhciBiYXNlZCBvbiA1IHBlciBjZW50IG9mIGdyb3NzIHNhbGFyeSBiZWZvcmUgdGF4LiAKQkFUVExFIENSRUVLLCBNaWNoLiBTZWVpbmcgYSBtZXRlb3IgaW4gdGhlIE1pY2hpZ2FuIG5pZ2h0IHNreSBpcyBhIG9uY2UgaW4gYSBsaWZldGltZSBldmVudC4gRm9yIG9uZSBCYXR0bGUgQ3JlZWsgbWFuLCBpdCB3YXMgb25seSB0aGUgc3RhcnQgb2YgYW4gaW5jcmVkaWJsZSBldmVuaW5nLgpEYW5uIGhhdCBlciBkZW4gM2VyIGdldHJvZmZlbiB1bmQgZHUgaGFzdCBpaG0gZGllIG50aWdlbiBPZGRzIHp1bSBjYWxsZW4gZ2VnZWJlbiAoTmFjaHRlaWwgdm9uIFNsb3dwbGF5IHdlbm4gbWFuIGtlaW5lIE1vbnN0ZXJoYW5kIGhhdCkuIApWZXJzaW9uLiBZb3UgY2FuIG5hYiBpdC90aGVtIGZyb20gaVR1bmVzLiAKSSBkb24gcmVtZW1iZXIgcG9pbnRpbmcgb3V0IHRoYXQgVU0gaGFkIG1hZGUgbGVnYWwgdGhyZWF0cyB0byB0aGUgTm9ydGhlcm4gU3RhciwgYnV0IGJ5IHRoZW4gSSB0aG91Z2h0IEhhbWlzaCB3YXMgdGhlIG1vc3QgZGltd2l0dGVkIGpvdXJuYWxpc3QgSSBldmVyIGVuY291bnRlcmVkLiAKRWFybGllciBpbiB0aGlzIGJsb2cgSSd2ZSB3cml0dGVuIG9uIHBhbXBobGV0cyBlbnRpdGxlZCBGbGFncG9sZSBQYWludGluZywgU2Nob29sIFNhZmV0eSBQaW9uZWVycywgRm9ydHVuZXMgdG8gYmUgTWFkZSB3aXRoIEZyb2dzLCBXaGVyZSBhcmUgdGhlIERlYWQ/LCBIb3cgdG8gUmVwYWlyIGEgWmlwcGVyLCBNdWQncyBSb21hbnRpYyBTdG9yeSwgU29hcCBpbiBFdmVyeWRheSBMaWZlLCBUaGUgRmluZSBBcnQgb2YgU3F1ZWV6aW5nLCBTYWx0IFNhbGVzbWFuJ3MgTWFudWFsLCBLbm93IFlvdXIgR3JvY2VyaWVzLCBUaGUgQm9vayBvZiBFbnZlbG9wZSBGYWN0cyAoYW5kIG90aGVycyksIGFuZCB0aGV5J3ZlIGFsbCBzaG93biBhIHRlcnJpZmljIGlubmVyIHF1YWxpdHkgdGhhdCBpcyBjb21wbGV0ZWx5IGhpZGRlbiBieSB0aGVpciBzbyBzbGVlcHkgYW5kIHlldCBzdHJhbmdlbHkgY29tcGVsbGluZyB0aXRsZXMuIExpa2UgdGhlIHBhaW50IGJydXNoIGhpc3RvcnkgcGFtcGhsZXQuIEhlcmUgYXJlIGEgZmV3IG90aGVyIG5ldyBleGFtcGxlczouIApBbGwgYmVjYXVzZSB3ZSB3YW50ZWQgdG8gbG9vayBjb29sIGxvbC4gCk15IGJlc3QgZnJpZW5kIGhhZCB0d2luIGJyb3RoZXJzIHRoYXQgcGFzc2VkIGF3YXkgb25lIGRheSBhbmQgb25lIG1vbnRoIGFmdGVyIHRoZWlyIGJpcnRoLCByZXNwZWN0aXZlbHkuIEhlICh0aGVuIGFib3V0IHllYXJzIG9sZCkgYW5kIHNvbWUgZmFtaWx5IG1lbWJlcnMgd2VyZSBzaXR0aW5nIGdyYXZlc2lkZSBhbmQgYXR0ZW5kaW5nIHRoZSBmdW5lcmFsIG9mIHRoZSBmaXJzdCB3aGVuIHRoZXkgcmVjZWl2ZWQgYSBjYWxsIHRlbGxpbmcgdGhlbSB0byBoYWx0IHRoZSBmdW5lcmFsIGJlY2F1c2UgdGhleSBuZWVkZWQgdG8gZ2V0IHRvIHRoZSBob3NwaXRhbCB0byBzYXkgZ29vZGJ5ZSB0byB0aGUgb3RoZXIgb25lLiAKSSBoYW5kIHdyb3RlIGVhY2ggY2FyZCBhbmQgdW5kZXJsaW5lZCBhbGwgdGhlIGJ1enogd29yZHM6IGNhc2ggb2ZmZXIsIGFzIGlzLCAzMCBkYXlzIG9yIGxlc3MgZXRjLiBJIG1haWxlZCB0aGUgY2FyZHMgb2ZmIE1vbmRheSBhbmQgSSd2ZSBhbHJlYWR5IHJlY2VpdmVkIG9uIGNhbGwuIApCdXQgZm9yIG1hbnkgcGxheWVycywgdGhpcyBnYW1lIGhhcyBhbHNvIGJlZW4gYWJvdXQgZXhwZXJpZW5jaW5nIHNvbWUgb2YgdGhlIGJlc3QgcG9rZXIgYm9udXNlcyB3aGVuIHBsYXllZCBvbmxpbmUgZXNwZWNpYWxseSBhdCB0aGUgY29zdCBvZiBub3RoaW5nLiAKSW4gZXNzZW5jZSB0aGV5IHNpbXBseSB0dXJuIHVwIGFuZCBwbGF5ICAgbGlrZSBhbnkgb3RoZXIgcHJvZmVzc2lvbmFsIGF0aGxldGUgd2hvIGNvbXBldGVzIGZvciBtb25leS4gCkNyaXQgcGFyIDogQXJpYW5lICAyNy8wOC8yMDEySmUgdm91cyBsaXMgc291dmVudCwgbWFpcyBjJ2VzdCBsYSBwcmVtaXJlIGZvaXMgcXVlIGplIGxhaXNzZSB1biBtb3QuIEplIG1lIGJhdCBhdmVjIG1vbiBjb3JwcyBkZXB1aXMgZGVzIGx1c3RyZXMgISBhcHJzIG1vdWx0IHJnaW1lcywgZGUga2lsb3MgcGVyZHVzIGV0IHN1cnRvdXQgcmVwcmlzLCBqZSBtZSBzdWlzIHBvc2UgY2V0dGUgcXVlc3Rpb24gaWwgeSBhIHBldSBkZSB0ZW1wcyA6IGVzdCBzaSBsZSBwcm9ibG1lIHRhaXQgYWlsbGV1cnMsIGRhbnMgbWEgdHRlIHF1b2kuIEonYWkgZG9uYyBkY2lkIGRlIGJhbm5pciBsZSBtb3QgcmdpbWUgZGUgbW9uIHZvY2FidWxhaXJlLCBkZSByZWNoZXJjaGVyIGxlcyBjYXVzZXMgZGUgbWVzIGZyaW5nYWxlcyBldCBhdXRyZSBjb21wb3J0ZW1lbnQgY29tcHVsc2lmLiAKVG90YWwgY29zdCB0byBtZTogJDAgSSBldmVuIGdvdCB0byBmaW5hbGx5IHVzZSBzb21lIHNpY2sgbGVhdmUgc28gbmV0IHRvdGFsIHdhcyBhIGdhaW4gZnJvbSB0aGUgd2hvbGUgb3JkZWFsLiAKQXQgbGFzdCBJIHJlYWxpemVkIHRoYXQgaXQgd2FzIGF0IHRoZSBjaW5lbWEuIApIZSBoYXMgYmVlbiBjaGFyZ2VkIHdpdGggZmlyc3QgZGVncmVlIG11cmRlciBidXQgcmVtYWlucyBpbiBob3NwaXRhbCB3aGlsZSBoZSByZWNlaXZlcyB0cmVhdG1lbnQgZm9yIGEgc2VsZiBpbmZsaWN0ZWQgZ3Vuc2hvdCB3b3VuZCwgcG9saWNlIHNhaWQuClBvbm5peWluIHNlbHZhbiBhdWRpbyBib29rIG1wMyBmcmVlIGRvd25sb2FkYSByZXBvcnQgb24gcHJvY2VkdXJlIG9mIHdpbmRpbmcgdXAgcGFydG5lcnNoaXAgcGRmIGRvd25sb2FkZG9yYWVtb24gbW92aWUgbm9iaXRhJ3MgZGlub3NhdXIgZG93bmxvYWQgZnJlZWluc3RtYW5rQ2xvdWR5IHdpdGggYSBjaGFuY2Ugb2YgbWVhdGJhbGxzIGZ1bGwgbW92aWUgaW4gaGluZGkgaW4gM2dweW91IGFyZSB0aGUgYXBwbGUgb2YgbXkgZXllIG1wNCBkb3dubG9hZAo1LiBDb29sIEdyZWVuIENvdW50cnkgaW4gTGlzbW9yZTogQ29vbCBHcmVlbiBDb3VudHJ5IGlzIHRoZSBvZmZpY2lhbCBmdW5kcmFpc2VyIGZvciBUaGUgR3JlZW5zIDIwMTkgTlNXIGVsZWN0aW9uIGNhbXBhaWduLiBQcmVzZW50ZWQgYnkgSmltbXkgV2lsbGluZyB3aXRoIFMuIApEcmR1YmlvdXNZSE0gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUaGUgc2Nob2xhcnNoaXAgYXQgYWxsIHRoZXNlIGluc3RpdHV0aW9ucyBpcyBpbiBmYWlybHkgdW5hbmltb3VzIGFncmVlbWVudCBvdmVyIHRoZSBnZW5vY2lkZS4gCldoYXQgaXMgVGhlIExpc3Q/VGhlIExpc3QgaXMsIGFzIHlvdSBtaWdodCBleHBlY3QsIGEgbGlzdC4gVGhlIE5hdGlvbmFsIEhlcml0YWdlIExpc3Qgb2YgRW5nbGFuZCwgdG8gZ2l2ZSBpdCBpdHMgZnVsbCB0aXRsZSwgY29sbGVjdHMgdG9nZXRoZXIgaW1wb3J0YW50IHNpdGVzIGFyb3VuZCBFbmdsYW5kIHRvIGFzc2lzdCB3aXRoIHByb3RlY3RpbmcgYW5kIHByZXNlcnZpbmcgdGhlbSBmb3IgZnV0dXJlIGdlbmVyYXRpb25zICAgaWYgYSBzaXRlIGlzIG9uIFRoZSBMaXN0LCB0aGVuIGl0IGNhbm5vdCBzaW1wbHkgYmUgY2hhbmdlZCBvciBkZW1vbGlzaGVkMzogbGVnYWwgbWF0dGVycyBoYXZlIHRvIGJlIHRha2VuIGludG8gYWNjb3VudCBiZWZvcmUgYW55IGRlY2lzaW9uIGlzIG1hZGUgaW4gb3JkZXIgdG8gZW5zdXJlIHRoZSBzaWduaWZpY2FuY2Ugb2YgdGhlIHNpdGUgaXMgbm90IGxvc3QuLiAKSGUgZ290IGlycml0YXRlZCBhbmQgc2FpZCwgcGFyYXBocmFzZWQgYmVjYXVzZSBJIGRvbiBoYXZlIHBlcmZlY3QgbWVtb3J5LCJPaCwgSSBzZWUuIApJZiB0aGUgcGxheWVyIGlzIGluIGEgbWFyZ2luYWwgc2l0dWF0aW9uLCB0aGV5IHdpbGwgYmUgbW9yZSBsaWtlbHkgdG8gbWFrZSBhIG1pc3Rha2UuIApYIG9mIGEgS2luZCBwcm9ibGVtcyBhcmUgc2VsZiBleHBsYW5hdG9yeSAgIGlmIHlvdSBoYXZlIFggb2YgYSBraW5kLCB0aGVuIHlvdSBoYXZlIFggY2FyZHMgb2YgdGhlIHNhbWUga2luZCBvbiB5b3VyIGhhbmQuIFRoZXJlIGFyZSB1c3VhbGx5IHR3byBvZiB0aGVzZTogdGhyZWUgb2YgYSBraW5kIGFuZCBmb3VyIG9mIGEga2luZC4gCkkgbmV2ZXIgd2VudCB0aGF0IGhpZ2gsIGJ1dCBJIGtub3cgc2lsdmVyIGNoZXN0cyBnaXZlIDEyLDAwMCBhbmQgdGhlIHByaWNlIG9mIGdvbGQgaXMgZG91YmxlLiBTbyBhdCBsZWFzdCBkb3VibGUgdGhlIGdlbXMuLiAKWW91IGJldHRlciBhc2sgaGVyIGlmIHNoZSBoYXMgY2hlYXRlZCBvbiBzb21lb25lIGluIHRoZSBwYXN0LCBiZWNhdXNlIGl0IHNvdW5kcyBsaWtlIHNoZSBoYXMuLiAKSXQgcmVhbGx5IGNyb3dkZWQgYW5kIGl0IGJlc3QgdG8gYXJyaXZlIGVhcmx5IHRvIHNuYXRjaCBhIGdvb2Qgdmlld2luZyBzcG90Li4gCldlIGRlY2lkZWQgZHVyaW5nIHRoZSBicmVhayB0byBnbyB3aXRoIFZhbmVzc2EgU2VsYnN0IGFuZC9vciBEdWhhbWVsLiIuIApCdXQgb3RoZXIgc29hcCBjaGVtaWNhbHMgZG9uIGNhdXNlIHlvdXIgZXllcyB0byBzdGluZyBiZWNhdXNlIHRoZXkgbm90IFFVSVRFIHNvIGdvb2QgYXQgc3RpY2tpbmcgdG8gb2lseSBkaXJ0IGF0IG9uZSBlbmQsIHNvIHRoZXkgbm90IHF1aXRlIHNvIGdvb2QgYXQgY2xlYW5pbmcgb3Igd3JlY2tpbmcgdGhlIGNhcmVmdWwgYmFsYW5jZSBvZiBjaGVtaXN0cnkgdGhhdCBrZWVwcyB5b3VyIGV5ZXMgbW9pc3QgYW5kIGluIGdvb2Qgc2hhcGUuClRoZXkgZmxldyB0byBWYW5jb3V2ZXIgZnJvbSBGcmVzbm8sIENhbGlmLiwgd2l0aCBmb3VyIG90aGVyIGZhbWlseSBtZW1iZXJzIHRvIHdhdGNoIFRoZSBJbnRlcm5hdGlvbmFsIERvdGEgMiBDaGFtcGlvbnNoaXBzLkF1c3RpbiBMaXUsIDIxLCBhbmQgaGlzIGJyb3RoZXIgQnJhbmRvbiwgMTksIGZsZXcgdXAgd2l0aCBzaXggZmFtaWx5IG1lbWJlcnMgZnJvbSBGcmVzbm8sIENhbGlmLiAKTXkgaHVuZ2VyIHJlc3VsdHMgd2VyZSBhbHNvIGEgbGl0dGxlIG1vcmUgc3ViZHVlZC4gCkluIHRoaXMgZ2FtZSBoZSBoYWQgMyBkaXN0aW5jdCBtb21lbnRzIHdoZXJlIHdlIGtpbGxlZCBhbiBhdHRhY2sgYW5kIGhlIGltbWVkaWF0ZWx5IGxvc3QgdGhlIGJhbGwuCkFzIHlvdSBnYWluIGV4cGVyaWVuY2UgYW5kIGxlYXJuIHlvdXIgb3Bwb25lbnRzJyBwbGF5aW5nIHN0eWxlcyBhbmQgaGFuZCBzZWxlY3Rpb24sIHlvdSBjYW4gcGxheSBhIGZldyBtb3JlIHN0YXJ0aW5nIGhhbmRzLiBIYW5kcyB3aXRoIGFuIEEsIDMsIGFuZCB0d28gaGlnaCBjYXJkcyBhcmUgb2Z0ZW4gcGxheWFibGUgYXMgd2VsbCBhcyBoYW5kcyBjb250YWluaW5nIGFuIGFjZSBzdWl0ZWQgdG8gb25lIG90aGVyIGNhcmQgdGhhdCBvZmZlciBmbHVzaCBhbmQgc3RyYWlnaHQgcG9zc2liaWxpdGllcyBhbmQgc29tZSBsb3cgcG90ZW50aWFsLCBzdWNoIGFzIEEgNCA2IDcuQmVnaW5uaW5nIE9tYWhhLzggcGxheWVycyBvZnRlbiBvdmVycmF0ZSBwYWlycywgZXNwZWNpYWxseSBwb2NrZXQgYWNlcy4gVW5saWtlIEhvbGQnZW0sIGEgcGFpciB3aWxsIGFsbW9zdCBuZXZlciB3aW4gYSBwb3QuIApBcmUgeW91IHdlaWdoaW5nIHlvdXIgZm9vZD8gV2l0aCBzdWNoIGEgc21hbGwgZGVmaWNpdCBhbnkgZXJyb3JzIGluIGVzdGltYXRpbmcgd2lsbCByZWFsbHkgbWFrZSBhIGRpZmZlcmVuY2UuCkFtb25nIHRoZSBsZWFrZWQgaW5mb3JtYXRpb24gd2VyZSB0aG91c2FuZHMgb2YgdXNlciByZWNvcmRzLCBpbmNsdWRpbmcgZW1haWwgYWRkcmVzc2VzLCBwaG9uZSBudW1iZXJzIGFuZCBuYW1lcy4gVGhlcmUgd2VyZSBhbHNvIHRob3VzYW5kcyBvZiBjb21wbGFpbnRzIGJ5IHRoZXJhcGlzdHMgYWJvdXQgaW5hcHByb3ByaWF0ZSBjbGllbnRzLCBhbmQgYWNjdXNhdGlvbnMgaW5jbHVkZSBwZW9wbGUgd2hvIHdhbnRlZCBhIGluIGdlbml0YWwgYXJlYSBhbmQgYXNraW5nIGZvciBzZXJ2aWNlcyBmcm9tIHRoZXJhcGlzdC4gCkV2ZXJ5IHBpdCBib3NzIGhhcyBhIHNlY3JldCBwYW5pYyBidXR0b24gdW5kZXIgdGhlaXIgZGVzayB0byBzdW1tb24gc2VjdXJpdHkgaW4gY2FzZSBvZiBhbiBlbWVyZ2VuY3kuIApJZiB5b3UndmUgaGVhcmQgYWJvdXQgaXQgZnJvbSBjcnVpc2luZyBmcmllbmRzIG9yIHNlZW4gaXQgaW4gdGhlIGJvYXRpbmcgbWVkaWEgICBub3cncyB0aGUgdGltZSB0byBzdGFydCBwbGFubmluZyBmb3IgMiB3ZWVrcyBvZiBmdW4gaW4gdGhlIEJhaGFtYXMgc3VuLiBJdCdzIGEgdW5pcXVlIGdhdGhlcmluZyBvZiBjcnVpc2VycyBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZCBpbiB0aGUgc2VjdXJlIGFuZCBwaWN0dXJlc3F1ZSBzZXR0aW5nIG9mIEVsaXphYmV0aCBIYXJib3VyLCBHZW9yZ2UgVG93biwgR3JlYXQgRXh1bWEuLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25XT0RPTkdBIFJTTCBDbHViIGhhcyBzcGVudCAkMTUwLDAwMCBvbiBhIG1ham9yIHJlbm92YXRpb24gaXRzIHByZXNpZGVudCBwcm91ZGx5IHNheXMgd2lsbCBzdG9wIHRoZSBidWlsZGluZyBsb29raW5nImxpa2UgYSBsb3N0IG5laWdoYm91ciIuIFRoZSBjbHViIGhhcyBub3cgZW1iYXJrZWQgb24gYSBwcm9qZWN0IHRvIGxldCBhcyBtYW55IHBlb3BsZSBpbiB0aGUgY29tbXVuaXR5IGtub3cgYWJvdXQgd2hhdCBpdCBoYXMgdG8gb2ZmZXIuIApBcmVhIFNwZWNpZmljICAgQSAzMCBtaW51dGUgbWFzc2FnZSwgYWxzbyBrbm93biBhcyBhIG1lZGljYWwgbWFzc2FnZSwgSXQgaXMgdXNlZCB0byBoZWxwIGFuIGluanVyeSBvciB0byByZWxpZXZlIHBhaW4gaW4gYW4gY2VydGFpbiBhcmVhIG9mIGRpc2NvbWZvcnQuIEEgZmV3IGNvbmRpdGlvbnMgdGhhdCBpdCBoYXMgaGVscGVkIGFyZSwgam9pbnQgcHJvYmxlbXMsIG5lY2sgYW5kIGJhY2sgcGFpbiBhbmQgaGVhZGFjaGVzLiAKQnV0IHRoZSBpbXBhY3RzIGFmZmVjdCBtb3JlIHRoYW4ganVzdCBwcm9ibGVtIGdhbWJsZXJzICAgd2l0aCBmYW1pbHkgbWVtYmVycywgb3RoZXIgcmVsYXRpdmVzLCBlbXBsb3llcnMsIHdvcmttYXRlcyBhbmQgdGhlIHdpZGVyIGNvbW11bml0eSBhbGwgaW1wYWN0ZWQuIApJIGhhdmUgYSAxNSBtaWxlIHJhZGl1cywgYW5kIHR5cGljYWxseSB3b3JrIHdpdGggcmVhbCBlc3RhdGUgYWdlbnRzIGluIGNvdG8gZGUgY2F6YSBvciBuZXdwb3J0IG9yIGlydmluZS4gClBsYXkgUG9rZXIKIllvdSBiZWNhbWUgb2JzZXNzZWQgYW5kIHByZW9jY3VwaWVkIHdpdGggZ2FtYmxpbmcsIiBzaGUgc2FpZC4gIkZyb20gMTk5NyBvbndhcmRzLCB5b3UgYmV0IG5lYXJseSBldmVyeSBkYXkuIiBKdWRnZSBHYXlub3Igc2FpZCBOaWNob2xhcyBoYWQgaG9wZWQgdG8gcmVjb3VwIGhpcyBsb3NzZXMgdGhyb3VnaCBmdXJ0aGVyIGdhbWJsaW5nIGFuZCBhaW1lZCB0byByZXBsYWNlIHRoZSBtb25leSBoZSBoYWQgc3RvbGVuIGZyb20gaGlzIGVtcGxveWVycy4gCkFsbCBvZiB0aGVzZSBwZW9wbGUgYXJlIGZhdCBpbiBhbnkgZGVjYWRlLiBJIGRvbid0IGtub3cgd2hhdCB5J2FsbCBhcmUgdGFsa2luZyBhYm91dC4gClNheXMgTGl0dGxlOiAiSGUgd2FzIGdldHRpbmcgYmV0dGVyIHRoYW4gYXZlcmFnZSBkaXN0cmlidXRpb24gdGhyb3VnaG91dCB0aGUgdG91cm5hbWVudCwiIHdoaWNoIGlzIHBybyBzcGVhayBmb3IgbGFuZGluZyBraWxsZXIgY2FyZHMuLiAKQnV0IGFzIEkgc2FpZCBlbHNld2hlcmUsIHZlcnkgZmV3IHBlb3BsZSBkbyB0aGF0IGJlY2F1c2UgdmVyeSBmZXcgcGVvcGxlIGltYWdpbmUgdGhhdCB0aGV5IGhhdmUgdG8gdHJlYXQgdGhlaXIgY2hpbGQgYXMgYSBtYWxpY2lvdXMgYWN0b3IsIGJlY2F1c2UgaXQgYWxtb3N0IG5ldmVyIG5lY2Vzc2FyeS4gSWYgeW91ciBraWQgaXMgZ29pbmcgdG8gYXR0ZW1wdCB0byBtdXJkZXIgeW91IGluIHlvdXIgc2xlZXAsIHlvdSBnb3Qgc2VyaW91cyBwcm9ibGVtcy4gVGhhdCBub3Qgbm9ybWFsLgpBcyBpdCB0dXJucyBvdXQgdmlsbGFpbiBoYXMgOTggYW5kIG5vdCBhIGZsdXNoIGFueXdheSBiZWNhdXNlIGhlIGhhcyBubyBpZGVhIHdoYXQgaGUgZG9pbmcsIGJ1dCBldmVuIHRoZW4gaXQgbm90IHRoZSBzaG9ydCB0ZXJtIHJlc3VsdHMgdGhhdCBtYXR0ZXIgYnV0IHRoZSByZWFzb25pbmcgYmVoaW5kIHlvdXIgYWN0aW9ucy5UdXJuIHN1Y2tzLCByaXZlciBldmVuIHdvcnNlLCBhbmQgeW91IHN0aWxsIDNiYXJyZWxlZCB5b3VyIHdob2xlIHN0YWNrIGluIG5ldmVyIGNvbnNpZGVyaW5nIHlvdSBjb3VsZCBiZSBiZWF0LCB3aXRoIHRoZSBsYXN0IGJhcnJlbCBiZWluZyBkb3VibGUgcG90LiAKSG9sZCBlbSdzIGJpZ2dlc3QgYWR2YW50YWdlIHRvIGFsbCB0aGUgb3RoZXIgdmFyaWF0aW9ucyBvZiBQb2tlciBpcyBvbmUgZGVjayBvZiBjYXJkcyBjYW4gc2VydmljZSB1cCB0byAyMyBwbGF5ZXJzIGNhbiB0YWtlIHBhcnQgKDIyIHBsYXllcnMgaWYgImJ1cm4iIGNhcmRzIGFyZSB1c2VkKSBtYWtpbmcgZm9yIGh1Z2UgcG90cy4gSG93ZXZlciB0aGUgZ2FtZXMgYXJlIGdlbmVyYWxseSBsaW1pdGVkIHRvIDggSW4gYWxsIGZvcm1zIG9mIFBva2VyIEVYQ0VQVCBUZXhhcyBIb2xkIEVtLCB0aGVyZSBpcyBubyAiQWxsIEluIiBiZXQuIApOQVNTIENvbnRlbXBvcmFyeSBDb25jZXB0cyBpbiBTcGluZSBDYXJlCktlbGx5IGFuZCBoaXMgYXR0b3JuZXkgaGF2ZSBmb3IgeWVhcnMgZGVuaWVkIGFsbGVnYXRpb25zIG9mIHNleHVhbCBtaXNjb25kdWN0IGludm9sdmluZyB3b21lbiBhbmQgdW5kZXJhZ2UgZ2lybHMuIEhpcyBhdHRvcm5leSBkaWRuJ3QgaW1tZWRpYXRlbHkgcmVzcG9uZCB0byBhIHJlcXVlc3QgZm9yIGNvbW1lbnQgVGh1cnNkYXkgb24gdGhlIGxhdGVzdCBhbGxlZ2F0aW9ucy4KTyBmdXR1cm8gaiBkZXZlIHRlciBhY29udGVjaWRvIHBhcmEgcXVlIHVtIGVzcHJpdG8gZGl6ZXIgTm9zdHJhZGFtdXMgbyBmdXR1cm8uIFVtYSBtYW5laXJhIGRlIGVudGVuZGVyIGlzc28gIHRlbXBvIGRlIGltYWdlbnMgY29tbyB1bSBzbWJvbG8gZGUgaW5maW5pdG8sIG91IHVtYSBhbXB1bGhldGEgb3UgbyBubWVybyAiOCIgY29sb2NhZGFzIGRlIGxhZG8uIApOZXdzQnJleGl0IGxhdGVzdDogTVBzIGRpc21pc3MgRVUgbGFzdCBkaXRjaCBiaWQgdG8gc2VjdXJlIGRlYWwgd2l0aCBjb25jZXNzaW9uIG9uIHRoZSBiYWNrc3RvcE1QcyBoYXZlIHN3aWZ0bHkgZGlzbWlzc2VkIHRoZSBFVSBsYXRlc3QgZWZmb3J0IHRvIHNlY3VyZSBhIEJyZXhpdCBkZWFsIGFmdGVyIHRoZSBibG9jIHNhaWQgdGhlIFVLIGNvdWxkIGJlIGFsbG93ZWQgdG8gbGVhdmUgdGhlIGN1c3RvbXMgdW5pb24gb2YgaXRzIG93biBhY2NvcmQgaW4gYSBiYWNrc3RvcCBzY2VuYXJpby4gVGhlIHByb3Bvc2VkIGNvbmNlc3Npb24gY2FtZSBmcm9tIEVVIEJyZXhpdCBuZWdvdGlhdG9yIE1pY2hlbCBCYXJuaWVyIGp1c3QgZGF5cyBiZWZvcmUgYSBzZWNvbmQgbWVhbmluZ2Z1bCB2b3RlIG9uIFRoZXJlc2EgTWF5IEJyZXhpdCBkZWFsIGluIHRoZSBIb3VzZSBvZiBDb21tb25zLiBJdCBoYXMgcHJldmlvdXNseSBiZWVuIHN1Z2dlc3RlZCB0aGF0IGJvdGggdGhlIEVVIGFuZCB0aGUgVUsgd291bGQgaGF2ZSB0byBhZ3JlZSBmb3IgQnJpdGFpbiB0byBiZSBhYmxlIHRvIGZ1bGx5IGxlYXZlIHRoZSBjdXN0b21zIHVuaW9uIGluIGEgYmFja3N0b3Agc2NlbmFyaW8uIApJbiBoaXMgdW5maW5pc2hlZCBub3ZlbCBUaGUgTGFzdCBUeWNvb24sIEYuIFNjb3R0IEZpdHpnZXJhbGQgd3JvdGUgdGhhdCB0aGVyZSBhcmUgbm8gc2Vjb25kIGFjdHMgaW4gQW1lcmljYW4gbGl2ZXMuIApUd28gb2YgYSBLaW5kIFBsYXlpbmcgQ2FyZCBGYXZvcnMgYXJlIGFsc28gb24gdGhlIHRhYmxlcywgYWxvbmcgd2l0aCB0ZWEgY3VwcyB0aGF0IHNheSAiRHJpbmsgTWUiIG9uIGEgY2FyZCBhbmQgYSBidW5jaCBvZiBjdXBjYWtlcyBhbmQgY29va2llcyB0aGF0IHNheSAiRWF0IE1lIiBvbiB0aGUgcGxhdHRlci4gClNvIHRoZXJlIGlzIGEgYnVpbHQgaW4gY29tcG9uZW50IGVudGljaW5nIHlvdW5nIHBlb3BsZSB0byBiZWNvbWUgdmlydHVhbCBnYW1ibGVycy4uIApEaWEgZGUgUHNjb2EgMjAxMiBuYXR1cmFsbWVudGUgc2VyaWEgdW0gZmVzdGl2YWwgZXNwZWNpYWwgZXh0cmEsIGRvYnJhciBhIG1hZ25pZmljbmNpYSBlIGEgYWxlZ3JpYSBkYSBmZXN0YSBncmFuZGUuLiAKUmVhbGx5IHdhbnQgbG9jYWxzIHRvIGZlZWwgd2VsY29tZSBhbmQgY29tZm9ydGFibGUgaGVyZSBhbmQga25vdyB0aGlzIGlzIHRoZWlyIHBsYWNlLCBoZSBzYWlkLiAgY3VzdG9tZXJzIGdyZWF0IGZvb2QgYW5kIHNlcnZpY2UgYXQgcmVhc29uYWJsZSBwcmljZXMgaXMgbXkgZ29hbC4gCkVzdCBpbCBleGFjdCBxdWUgYyd0YWl0IHVuZSBsZXR0cmUgZCdhbW91ciA/IE5vbiA6IGMndGFpdCBkZSBsJ2FsZ2JyZS4gRXN0IGlsIHZyYWkgcXVlIGMndGFpdCB1bmUgbGV0dHJlIGQnYW1vdXIgPyBPdWkuIFVuIGRidXQuIApHb3QgYSBtZXNzYWdlIHRocm91Z2ggRmFjZWJvb2sgZnJvbSBCbGF5bmUgS2VsbHksIHRoZSBkaXJlY3RvciwgYXNraW5nIHdvdWxkIEkgYmUgaW50ZXJlc3RlZCBpbiByZWFkaW5nIHRoZSBwbGF5IGFuZCBJIHNhaWQgSGUgcG9zdGVkIHRoZSBzY3JpcHQgdG8gbWUgYW5kIHdoZW4gSSByZWFkIGl0IEkgc2FpZCB3aGF0IGEgdGVycmlmaWMgcGxheSEgSSByZXBsaWVkIHRvIGhpbSBvbiBGYWNlYm9vayBzYXlpbmcgSSB3b3VsZCBsb3ZlIHRvIGRvIGl0IGFuZCBJIHRoaW5rIGhlIHdhcyBzaG9ja2VkIGJlY2F1c2UgaGUgaGFkbiBleHBlY3RlZCBtZSB0byBiZSBzbyBlbnRodXNpYXN0aWMuIFByb2R1Y3Rpb24gd2FzIGZpcnN0IHN0YWdlZCBsYXN0IEp1bHkgYW5kIGhhcyBoYWQgYSBncmVhdCByZXNwb25zZSBmcm9tIGNyaXRpY3MgYW5kIGF1ZGllbmNlcyBhbGlrZS5iZWVuIGFic29sdXRlbHkgdGVycmlmaWMsIHdlIGhhZCBncmVhdCB3cml0ZSB1cHMgYW5kIGF1ZGllbmNlcyBoYXZlIHJlYWxseSBsb3ZlZCBpdCwgRHVmZnkgZW50aHVzZXMuIApQZW9wbGUgYXJlIGhvcGluZyB0byBjb25jbHVzaW9ucyBvbiBoZXJlLiAKSSBhbSBoYXBweSBhbmQgYXQgcGVhY2UgcmlnaHQgbm93IGFuZCB3aXNoIGFsbCBteSBmcmllbmRzIHRoZSBzYW1lLiBXaGVuIGl0IGlzIHlvdXIgdGltZSwgbXkgZmxhcCBpcyBvcGVuIGFuZCB0aGUgaGFwcHkgaHVudGluZyBncm91bmRzIGJvdW50aWZ1bC4gV2Ugd2lsbCBtYWtlIG1lZGljaW5lLCBhbmQgbWFrZSBtZWF0LCBhbmQgcGFzcyB0aGUgcGVhY2UgcGlwZSB3aGlsZSB0aGUgc3F1YXdzIHRlbmQgdG8gdGhlIGNob3JlcyBhbmQgdGFrZSBjYXJlIG9mIHRoZSB5b3VuZy4gCldlIGtub3cgaXQsIHRoZXkga25vdyBpdCBhbmQgUnVzc2lhIGtub3dzIGl0LiAKQmVmb3JlIEplcnJ5IFNwcmluZ2VyIG5hbWUgd2FzIHN5bm9ueW1vdXMgd2l0aCB0aGUgbG93ZXN0IGZvcm0gb2YgdGVsZXZpc2VkIGVudGVydGFpbm1lbnQsIGhlIHdhcyBhbiBpZGVhbGlzdCBEZW1vY3JhdCB3aG8gZ2F2ZSBtb3Zpbmcgc3BlZWNoZXMgYW5kIHNlZW1lZCB0byBiZSBhIHJpc2luZyBzdGFyIGluIHRoZSBwb2xpdGljYWwgd29ybGQuSW4gMTk3NCwgSmVycnkgU3ByaW5nZXIgd2FzIGZvcmNlZCB0byByZXNpZ24gZnJvbSB0aGUgQ2luY2lubmF0aSBjaXR5IGNvdW5jaWwgYWZ0ZXIgYSByYWlkIG9uIGEgRm9ydCBXcmlnaHQsIEtZLCAibWFzc2FnZSBwYXJsb3IiIHR1cm5lZCB1cCBhIGNoZWNrIHdyaXR0ZW4gYnkgdGhlIHlvdW5nIHBvbGl0aWNpYW4gdG8gdGhlIGFwcGFyZW50IGJyb3RoZWwgZm9yIGl0cyBzZXJ2aWNlcy4gCkEgMTYgd2VlayBzdHVkeSBoYWQgdHJhaW5lZCBhdGhsZXRlcyBwZXJmb3JtIGVpdGhlciBhIHNwcmludCBpbnRlcnZhbCBwcm90b2NvbCBvciBzdGVhZHkgc3RhdGUgcnVubmluZyBmb3VyIGRheXMgYSB3ZWVrLiAKIldlJ3ZlIGJlZW4gdGFsa2luZyBhYm91dCB0aGUgaW50ZXJuZXQgb2YgdGhpbmdzIGZvciBhIHdoaWxlIGFuZCA1RyB3aWxsIGFtcGxpZnkgdGhhdCBkeW5hbWljIGV4cG9uZW50aWFsbHksIiBoZSBzYXlzLiAiU28gaXQncyBubyBsb25nZXIganVzdCBjb25zdW1lciBkZXZpY2VzLCBidXQgY29ubmVjdGVkIGluZnJhc3RydWN0dXJlIGZyb20gc3RyZWV0IGxpZ2h0cyB0byB0cmFmZmljIHNpZ25hbHMgYW5kIHdoZW4geW91IGltYWdpbmUgdGhhdCB5b3UgY2FuIHN0YXJ0IHRvIHNlZSBzbWFydCBjaXRpZXMgdGFrZSBzaGFwZS4gClRlc3Qgb3V0IFJUSCwgdGVzdCBvdXQgUGFsbUxhdW5jaCwgZXRjLiBBZnRlciB0aGF0LCBzdGFydCBwcmFjdGljaW5nIHlvdXIgbWFuZXV2ZXJpbmcuIENhbiB5b3UgZmx5IGEgZmlndXJlIDggYXJvdW5kIHR3byB0cmVlcyB3aXRob3V0IGNyYXNoaW5nIChsZWF2ZSBvYnN0YWNsZSBhdm9pZGFuY2Ugb24gd2hpbGUgeW91IHByYWN0aWNlKT8gTm93IGNhbiB5b3UgZG8gaXQgd2l0aCBlbGV2YXRpb24gY2hhbmdlPyBDaGVja291dCB5b3V0dWJlIHZpZGVvcy4gCklmIHdlIGNhbiBhc3N1bWUgMTUlIG9mIHRoZXNlIHBlb3BsZSBhcmUgZG9ub3JzLCB0aGF0IDEsMDk1IHBlb3BsZSB0aGF0IGFyZSByZWdpc3RlcmVkLiAKU29tZXRoaW5nIHJlYWxseSBmdWNraW5nIGdvb2QgSSBiZWVuIHdhdGNoaW5nIGlzICBGbGVzaCBhbmQgU3Bpcml0ICgyMDE4KSwgd2hpY2ggaXMgc2V0IGluIHRoZSAxOTYwcy4KSSB3YXMganVzdCBjdXJpb3VzIGFib3V0IHNvbWUgdGhpbmdzIG5vdyB3aXRoIHRoZSBhZGRpdGlvbiBvZiB0aGUgSGVuZGVyc29uIFJlc29ydC4gCldoYXQgc29ydCBvZiBtdXNpYyBzdHVmZiBkbyB5b3UgZG8/IEkgYWxzbyBlbmpveSBkb2luZyBteSBtdXNpYyBzdHVmZiBpbiB0aGUgZXZlbmluZ3MuIEkgdXN1YWxseSBkbyBhIGRheSBvbiBkYXkgb2ZmLiAKRWlnZW5lciBXZXJidW5nIGhhbmRlbHQgZXMgc2ljaCBiZWltIGRlIGxhIFNlZGEgaW4gRWwgUGFsc28gdW0gZGFzIGVpbnppZ2UgU2VpZGVubXVzZXVtIEV1cm9wYXMuIApKdXN0IG1vcmUgb2YgdGhlIHNhbWUsIHRoZSBwYXN0IHJlY3ljbGVkIHRvIHJlcHJlc2VudCB0aGUgZnV0dXJlLiAKTm8gbmVlZCB0byBib3RoZXIgd2l0aCBidXlpbmcgcHJvZHVjdHMgeW91cnNlbGYsIGludmVudG9yeSwgc2hpcHBpbmcgKGl0IHlvdXIgc3VwcGxpZXIgam9iKSxJIGFsd2F5cyBjaG9vc2UgYWZmaWxpYXRlIG1hcmtldGluZyBidXNpbmVzcyBtb2RlbC4gUGVyc29uYWxseSwgSSBsb3ZlIEV4cGVydFBob3RvZ3JhcGh5IGFuZCBQaG90b2dyYXBoeUxpZmUuCkkgYmVsaWV2ZSB5b3UgYXJlIHNlcnZpbmcgYXMgUHJlc2lkZW50IHRvZGF5IGJlY2F1c2Ugb2YgR29kJ3MgcHJvdmlkZW5jZS4gClllYWgsIEkndmUgaGFkIHBlb3BsZSBnaG9zdCBtZSBsaWtlIHRoaXMgdHdpY2UuIFlvdSBtaWdodCBzYWlkIHNvbWV0aGluZyBodXJ0ZnVsIHNvbWUgdGltZSBhbmQgc2hlIGdvdCBzdXBlciBidXR0IGh1cnQgYW5kIGRvZXNuJ3Qgd2FudCB0byB0ZWxsIHlvdSBiZWNhdXNlICdyZWFzb25zLicgRGVwZW5kaW5nIG9uIHBlcnNvbmFsaXR5IGl0IGNvdWxkIGJlIHRoZSBmaW5hbCBzdHJhdy4gCjYgQ2xpbmljYWwgcHJhY3RpY2UgZ3VpZGVsaW5lcyBkaXNjdXNzZWQgYWN1dGUgTG93IEJhY2sgUGFpbiwgNiBjaHJvbmljIExvdyBCYWNrIFBhaW4sIGFuZCA2IExvdyBCYWNrIFBhaW4gd2l0aCBuZXVyb2xvZ2ljIGludm9sdmVtZW50LgpUaGUgYmlnZ2VzdCBwcm9ibGVtIHdpdGggRVYgaXMgdGhhdCBpdCByZWxpZXMgb24gZXN0aW1hdGlvbnMgYW5kIHVubGVzcyB5b3UncmUgYSBza2lsbGVkIGFuZCBleHBlcmllbmNlZCBzdGF0aXN0aWNpYW4sIHlvdSB3b24ndCBiZSBhYmxlIHRvIGZvcmVjYXN0IGFjY3VyYXRlIG51bWJlcnMuIEZvcnR1bmF0ZWx5LCB0aGVyZSdzIGEgc2ltcGxpZmllZCB3YXkgYXJvdW5kIGJydXRlIGZvcmNlIGNhbGN1bGF0aW9uczsgeW91IGNhbiBtb25pdG9yIHRoZSBleGFtcGxlcyBvZiBvdGhlcnMuIExvb2sgYXQgaGlzdG9yaWNhbCBkYXRhIHRvIHNlZSBob3cgdGhpcyBzY2VuYXJpbyBoYXMgcGxheWVkIG91dCBpbiB0aGUgcGFzdC4gCklnbm9yaW5nIG91ciBwcm90ZXN0cywgd2UgZHJvdmUgYWxsIG92ZXIgSXN0YW5idWwgYW5kIGZpbmFsbHkgd2VudCB0byBhIEhPU1BJVEFMIHdoZXJlIE11c3RhZmEgd2FzIGFibGUgdG8gZ2V0IGEgcHJlc2NyaXB0aW9uIGZvciBXZW5kaSB3aXRob3V0IGhlciBldmVyIHNlZWluZyBhIGRvY3Rvci4gCiJUaGVyZSBpcyBkaXNjcmltaW5hdGlvbiBpbiBGcmVkZXJpY2sgQ291bnR5LiBQcml2YXRlIGNsdWJzIGluIHRoZSBjb3VudHkgZGlzY3JpbWluYXRlLCBidXQgdGhlbiB0aGUgcXVlc3Rpb24gYXJpc2VzLCAnRG8geW91IGhhdmUgdGhlIHJpZ2h0IHRvIHNvY2lhbGl6ZSB3aXRoIHRob3NlIHdob20geW91IFNvIGl0IGNhbiBnbyBib3RoIHdheXMgd2l0aCBwcm9zIGFuZCBjb25zLiIgIllvdSBjYW4gbGVnYWxseSBiZSBkaXNjcmltaW5hdGVkIGFnYWluc3QgaW4gRnJlZGVyaWNrIENvdW50eSwgYW5kIGl0IGRvZXMgKENvbnRpbnVlZCBvbiBQYWdlIEEgNSkgQSBsYXJnZSBzdGF0aW9uYXJ5IGhpZ2ggcHJlc3N1cmUgc3lzdGVtIG92ZXIgdGhlIHNvdXRoZWFzdCBVbml0ZWQgU3RhdGVzIHdpbGwgcHJvdmlkZSBob3QgYW5kIGh1bWlkIHdlYXRoZXIgdG9kYXkgdGhyb3VnaCB0aGUgd2Vla2VuZC4gCkJ1dCBpbiBmYWN0LCBTdGFsbG1hbiBoaW1zZWxmIGhhcyBhbHNvIHNhaWQgaGUgd2lsbCBldmVuIHVzZSBub25mcmVlIHNvZnR3YXJlIGhpbXNlbGYgaW4gc29tZSBjaXJjdW1zdGFuY2VzLiBGb3IgZXhhbXBsZSwgaWYgaGUgZm9yIHNvbWUgcmVhc29uIGlzIGFsbG93ZWQgdG8gdXNlIHNvbWVvbmUgZWxzZSBjb21wdXRlciB0ZW1wb3JhcmlseSwgaGUgbm90IGdvaW5nIHRvIGluc2lzdCBvbiBpdCBoYXZpbmcgMTAwJSBmcmVlIHNvZnR3YXJlIGp1c3QgdG8gdXNlIGl0IHRlbXBvcmFyaWx5IGJlY2F1c2UgaGlzIGZyZWVkb20gaXMgbm90IGJlaW5nIGJyZWFjaGVkIGhlcmUuIEl0IG5vdCBoaXMgY29tcHV0ZXIgc28gaXQgbm90IGxpa2UgaGUgZXZlbiBoYXMgdGhlIHJpZ2h0IHRvIHN0dWR5LCBjaGFuZ2Ugb3IgbW9kaWZ5IHNvZnR3YXJlIG9uIHRoZSBib3Jyb3dlZCBjb21wdXRlciBpbiB0aGUgZmlyc3QgcGxhY2UgYW55d2F5IChldmVuIGlmIGFsbCB0aGUgc29mdHdhcmUgd2FzIGZyZWUpLiBPZiBjb3Vyc2UgaGUgd2lsbCBzdGlsbCBhY2tub3dsZWRnZSB0aGF0IHRoZSBvd25lciBpZGVhbGx5IHNob3VsZCBub3QgdXNlIG5vbmZyZWUgc29mdHdhcmUsIGZvciB0aGUgb3duZXIgYmVuZWZpdC4KSWYgYSBwYXRpZW50IGdvZXMgdG8gYW4gRVIgaW4gdGhlIG1pZGRsZSBvZiBub3doZXJlIHdpdGggYW4gZWN0b3BpYyBwcmVnbmFuY3ksIHRoZSBldGhpY2FsIG9ibGlnYXRpb24gb2YgdGhlIE9CRyB3b3VsZCBiZSB0byB0ZXJtaW5hdGUgdGhlIHByZWduYW5jeSByZWdhcmRsZXNzIG9mIHdoZXRoZXIgb3Igbm90IHRoZSBPQkcgImJlbGlldmVzIiBpbiB0ZXJtaW5hdGlvbnMgKGVpdGhlciBtZWRpY2FsIG9yIHN1cmdpY2FsKS4gMyBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnby4gCk5lYXJlc3QgcHVibGljIHRyYW5zcG9ydE5hbmEgQlRTSSB3YXMgY291c3RvbWVyIHNpbmNlIDIwMDU6IGF0IEVkZW4gd29tYW5zIHdhcyBhdmVyYWdlIG9sZCAobW9yZSB0aGFuIDM1KSBhbmQgYmVhdXR5bmVzcyBhdmVyYWdlIGxvdy4gQnV0IEkgd2FzIGx1Y2t5IGJlY2F1c2UgSSBmb3VudCB0aGUgMiAzIHdvbWFucyB0aGF0IHdhcyBvbmUgd29tZW46IG5vdCBzdHVubmluZyBhdCwgbm90IEJhcmJpZSBEb2xsIGJ1dCB3aXRoIHRoYXQgcGFydGljdWxhciBjYXBhYmlsaXR5IHRvIG1ha2UgYXMgYSByb2NrIHdoYXQgaSB3YXZlIGluIHBhbnQgZXZlcnkgdGltZSBpIG1lZXQgdGhlbS4gSXQgd2FzIHJlbGF0ZWQgdG8gZmVlbGluZyBhbmQgY2hlbWlzdHJ5LCBub3QgZWxzZS4gUmFyZWx5IEkgZm91bnQgb25lIGluIG15IGxpdmUgYW5kIGV2ZXJ5IHRpbWUgaSBmb3VudCwgaSB3ZW50IGFsd2F5cyB3aXRoIHRoZW0uIFNvLCB0byBtZSBFZGVuIHdhcyBzcGVjaWFsIGJlY2F1c2UgdGhleSB3YXMgdGhlcmUuIFVuZm9ydHVuYXRlbHksIGxhdGUgaW4gMjAxMSB0aGUgbGFzdCBvbmUgZ2V0IG91dCBvZiBzZXggYnVzaW5lc3MsIGFzIGNvbnNlZ3VlbmNlIEVkZW4gZG93biBpbiBxdWFsaXR5IGF0IG15IGV5ZXMuIEFueXdheSwgSSBzZWUgbm93IHRoZSBFZGVuIHdlYiBzaXRlIHRvdGFsbHkgcmVuZXc6IG5ldyBncmFwaGljLCBidXQgb3ZlciBwaWMgb2YgZ2lybHMgYXJlIHB1Ymx5c2hlZCwgYW5kIHRoZXkgc2VlbXMgdG8gYmUgbmljZSwgb3ZlciB0aGUgbG93IGF2ZXJhZ2UgcmF0aW8gRWRlbiB3YXMgdXNldCB0byBoYXZlLiBRdWVzdGlvbjogc29tZW9uZSByZWNlbnRseSAoYXByaWwgMjAxNCBvciBsYXRlKSB3ZW50IHRoZXJlIGFuZCBzYXcgZ2lybHMgcXVhbGl0eSBnb3QgYmV0dGVyPyBJZiB3aWxkbmVzcyBvZiBzZXJ2aWNlIHN0YXkgdGhlIHNhbWUgYnV0IGF2ZSBnbyBkb3duIGFuZCBiZWF1dHkgZ28gdXAsIEkgd2lsbCBmZWVsIHRvIGdvIGJhY2sgdG8gYmUgY3VzdG9tZXIgbmV4dCB0aW1lIGkgd2lsbCBsYW5kIHRoZXJlLgpOb3QgaGVyZS4gCkhvdyB3b3VsZCB0YXhlcyBjb250aW51ZSB0byB3b3JrIGZvciBtZSBvbmNlIG1hcnJpZWQsIGhhdmUgdGhlIHJlc3RhdXJhbnQgYnVzaW5lc3MsIGFuZCBhIGhvbWUgYW5kIGtpZHMgaW4gVXJ1Z3VheT8KSGlzIG1haW4gb2ZmZW5zZSBpcyBoaXMgZGVmZW5zZSBhbmQgaGlzIGRlZmVuc2UgaXMgaGlzIG9mZmVuc2UuIEhvdz8gQmVjYXVzZSBoaXMgZGVmZW5zZSB0YWtlcyBoaXMgb3Bwb25lbnRzIG1lbnRhbCBlbmVyZ3kgYXdheSBmcm9tIHRoZW0uIFRodXMsIGhlIGRyYWlucyB0aGVtLCB3aXRob3V0IGxheWluZyBoYW5kIG9uIHRoZW0uIApXaGF0IGFyZSB5b3VyIG9kZHMgb2Ygd2lubmluZyBhIGdpdmVuIHBvdCB3aGVuIHlvdSBoYXZlIGFuIGluc2lkZSBzdHJhaWdodCBkcmF3IGFuZCB5b3UgYmVsaWV2ZSB0aGUgcGVyc29uIHlvdSBhcmUgZ29pbmcgYWdhaW5zdCBoYXMgYSBwYWlyIG9mIG92ZXJjYXJkcz8gQXJlIHlvdXIgdHdvIGFjZXMgZW5vdWdoIHRvIHdpbiBhZ2FpbnN0IHR3byBvdGhlciBwbGF5ZXJzPyBXaGF0IGFib3V0IHRocmVlPyBGb3VyPyBJZiB5b3UgYXJlIHN0dWNrIHdpdGggdGhlIGJpZyBibGluZGFuZCBzb21lb25lIHJhaXNlcyBwcmUgZmxvcCxpcyBpdCB3b3J0aCBwYXlpbmcgbW9yZSB0byBzZWUgdGhlIGZsb3AgaWYgeW91IGhhdmUgYSB3ZWFrIHN0YXJ0aW5nIGhhbmQ/IEV0IGNldGVyYS4oQW5kIHllcywgaGUgYWxtb3N0IGV4Y2x1c2l2ZWx5IHBsYXllZCBUZXhhcyBIb2xkIGtleSBpbiBhbGwgdGhpcyBpcyB0aGF0IG9kZHMgYXJlIGp1c3QgdGhhdCwgb2Rkcy4gWW91IG1heSBwbGF5IGEgaGFuZCBwZXJmZWN0bHksIGJ1dCB0aGF0IGRvZXNuIG1lYW4geW91IGFyZSBnb2luZyB0byB3aW4gaXQuIAooTXkgZGF1Z2h0ZXIncyBuYW1lIGlzIFNpYW4gYW5kIGV2ZXJ5b25lIGluc2lzdHMgb24gbWlzIHByb25vdW5jaW5nIGhlciBuYW1lIGFzIFNlYW4pLiBIZSBpcyB0aGUgb25seSBDb2xjbG91Z2ggaW4gdGhlIE5ldyBZb3JrIHRlbGVwaG9uZSBkaXJlY3RvcnksIGFuZCBvZiBjb3Vyc2UgaGUgcXVhbGlmaWVzIGZvciBhIHNlYXQgaW4gdGhlIGJpZyBvbmUuIApLaWQga2lsbGVkIGhpcyBncmFuZG1vdGhlci4gVXNlZCBoZXIgY3JlZGl0IGNhcmQgYWxsIHdlZWtlbmQgV2VudCB0byBhIGRhbmNlLiBXZW50IHRvIFBpenphIEh1dCB3aXRoIGEgZGF0ZS4gSGFkIGEgc3RlcmVvIGluc3RhbGxlZC4gQ2FsbGVkIGZhbWlseSBtZW1iZXJzIGluIGFub3RoZXIgc3RhdGUgb3ZlciBhbmQgb3ZlciBsaWtlIG5vdGhpbmcgaGFwcGVuZWQuCkFzIEkgc2F0IGhlcmUgYW5kIEkgbGlzdGVuZWQgdG8gYm90aCBzaWRlcywgSSBqdXN0IGZlbHQgYXMgaWYgICBhbmQsIHlvdSBrbm93LCBwZW9wbGUgYXJlIG5vdyB1c2luZyBteSB3b3JkcyB0aGF0IHRoZXkgdG9vayBmcm9tIG1lIHRoYXQgZGlkbiBnaXZlIG1lIGFueSBjcmVkaXQsIHdlIGFyZSBiZXR0ZXIgdGhhbiB0aGlzLiAKQnV0IHRvIG1ha2UgbXkgb3duIGJpYXNlcyBjbGVhcjogSSBhbSBjcmF6eSBza2VwdGljYWwgb2YgYW55b25lIHNheWluZyAiSSd2ZSBjb21lIHVwIHdpdGggYSBsb2dpY2FsIHN5c3RlbSBvZiBtb3JhbGl0eSBhbmQgdGhlIGNvbmNsdXNpb24gaXM6IHdlIHNob3VsZCBsZWdhbGx5IG1hbmRhdGUgc29tZXRoaW5nIGhvcnJpZnlpbmdseSBpbW1vcmFsIgpDaGksIG9yIFFpLCBpcyB1bmRlcnN0b29kIGluIHRoZSBXZXN0IHRvIGJlIHRoZSB2aXRhbCBlbmVyZ3kgZGVlcCB3aXRoaW4gdXMgYWxsLCB3aGljaCBjYW4gYmUgZGV2ZWxvcGVkIGFuZCBtYW5pcHVsYXRlZC4gQ2hpIGlzIGEgQ2hpbmVzZSB0ZXJtLCBhbmQgbG9zZXMgbXVjaCBvZiBpdHMgbWVhbmluZyB3aGVuIHJlbW92ZWQgZnJvbSBpdHMgcHJvcGVyIGNvbnRleHQuIApJbiBhIHNlbnNlIGJ5IGJldHRpbmcgaW50byB1cyB2aWxsYWluIGhhcyBhbHJlYWR5IHB1bmlzaGVkIGhpbXNlbGYgYW5kIGVtcGxveWVkIGFuIGV4cGxvaXRhYmxlIHN0cmF0ZWd5LiBJbiBwcmFjdGljZSB5b3Ugc2hvdWxkIGVpdGhlciBnbyBoZWF2eSBoYW5kZWQgZm9yIHZhbHVlIHdpdGggMnArIGhhbmRzIG9yIG92ZXJibHVmZiBhZ2FpbnN0IHNvbWVvbmUgd2hvIHdpbGwgbm90aWNlIHRoZWlyIG1pc3Rha2UgYWZ0ZXIgd2UgcmFpc2UuIApNb3Rvcm9sYSB3ZW50IG9uIHRvIHNlbGwgaXRzIHBob25lIGhhbmRzZXQgYnVzaW5lc3MgdG8gR29vZ2xlLCB3aGljaCBpbiB0dXJuIHNvbGQgaXQgdG8gdGhlIENoaW5lc2UgY29tcGFueSBMZW5vdm8sIHdoaWxlIE1vdG9yb2xhIFNvbHV0aW9ucyBub3cgZm9jdXNlcyBvbiBjb21tdW5pY2F0aW9ucyBzeXN0ZW1zIGZvciB0aGUgcHVibGljIHNlY3RvciwgcGFydGljdWxhcmx5IHRoZSBlbWVyZ2VuY3kgc2VydmljZXMuCkJlY2F1c2Ugc2hlIGlzIGhpbGFyaW91c2x5IHN0dXBpZCBhbmQgZXh0cmVtZWx5IGRhbWFnaW5nIHRvIHRoZSBETkMuIGNsYWltaW5nIHRoYXQgaXRzIHRpbWUgdG8gdGF4IHRoZSByaWNoIGZhciBmYXIgbW9yZSwgcmV3YXJkIHBlb3BsZSB3aG8gZG9udCBmZWVsIGxpa2Ugd29ya2luZywgY3JlYXRlIHRyYWlucyB0aGF0IHJpdmFsIGFpcnBsYW5lcyAoc29tZWhvdyksIHN0b3AgdGhlIHVzZSBvZiB0aGUgY29tYnVzdGlvbiBlbmdpbiAscmVmaXQgZXZlcnkgYnVpbGRpbmcgaW4gdGhlIGNvdW50cnkgYW5kIGRlYWwgd2l0aCB0aG9zZSBldmlsIGZhcnRpbmcgY293cy4gd2l0aGluIHRlbiB5ZWFycy4KT3ZlciAkN00gYXdhaXRzIHRoZSB3aW5uZXIgb2YgdGhlIFN1cGVyIEhpZ2ggUm9sbGVyIEJvd2wuIFRoZSBldmVudCwgd2hpY2ggaW5jbHVkZWQgYSBtYXNzaXZlJDUwMCwwMDAgYnV5IGluIGZlYXR1cmVkIG5vIGxlc3MgdGhhbnNpeCBjdXJyZW50IGFuZCBmb3JtZXIgMSByYW5rZWQgcGxheWVycyBvbiB0aGUgR1BJIFdvcmxkIFBva2VyIFJhbmtpbmdzIGFzIEphc29uIE1lcmNpZXIgKEdQSSBOby4gCk1pciBmZWhsdCBlaW4gYmlsZGxpY2hlcyBHZWRjaHRuaXMgYnp3LiAKVnVvbCBkaXJlIHVuaXJlIGxlIHJpc29yc2UgZSBjb29wZXJhcmUgYXR0aXZhbWVudGUgcGVyIGdsaSBhbmltYWxpLCBsIGxhIHJpY2VyY2EgZGVsbGUgZW5lcmdpZSBwdWxpdGUgLCBsYSBnaXVzdGl6aWEgc29jaWFsZSBlIGkgZGlyaXR0aSB1bWFuaS4gCkFyZSB5b3Ugc3VyZSB5b3UgZmlzaGluZyBjb3JyZWN0bHk/IE15IGZpc2hpbmcgZ290IGEgbG90IGJldHRlciBvbmNlIEkgcmVhbGl6ZWQgSSBjb3VsZCBob2xkIGRvd24gdGhlIG1vdXNlIGJ1dHRvbiB0byByYWlzZSB0aGUgYmFyIHF1aWNrbHk7IEkgZGlkbiBqdXN0IGhhdmUgdG8gY2xpY2sgZnJhbnRpY2FsbHkuIE5vdyBJIG1vc3RseSBmaXNoIGJ5IGhvbGRpbmcgZG93biBmb3IgYSBzZWNvbmQsIGxldHRpbmcgZ28sIGhvbGRpbmcgZG93biBhZ2FpbiwgbGV0dGluZyBnby4gVGhlcmUgdmVyeSBmZXcgZmFzdCBjbGlja3MuLiAKTXVuY2hlbmVyc3RyYXNzZSBhbmQgS2Fpc2Vyc3RyYXNzZSBsZWFkIGVhc3QgZnJvbSB0aGUgSGF1cHRiYWhuaG9mLiAKSSB3YXMgYWx3YXlzIGFubm95ZWQgYmVjYXVzZSB3ZSB3b3VsZCBiZSB0aGVyZSBmb3Igd2hhdCBmZWx0IGxpa2UgZm9yZXZlciwgYnV0IGhlIHdvdWxkIGZpeCBzaW1wbGUgc3R1ZmYgZm9yIGZyZWUgb3IgZm9yIGhhcmRseSBhbnkgbW9uZXkgaWYgaXQgd2FzIGFuIGVtZXJnZW5jeS4gCk1vc3Qgb2YgdGhlIHBsYXllcnMgd2hvIHJldHVybmVkIGZyb20gaW5qdXJ5IGhhdmUgYmVlbiBwbGF5aW5nIHBvb3JseSBzaW5jZSB0aGV5IHJldHVybmVkLCBtb3N0IG5vdGljZWFibHkgRm9yc2JlcmcuIApHZXQgb24gbmFwcm94ZW4gdG8gaGVscCBhbGxldmlhdGUgcGFpbiBhbmQgc3dlbGxpbmcuCldlIGFza2VkIHRoZSBndXkgd2hvIHR1cm5lZCBvdmVyIHRoZSBrZXlzIHdoaWNoIHdheSB0byBHcmFuYWRhIChvdXIgZmlyc3QgZGVzdGluYXRpb24pLiBXZWxsLCBKZXNzIGFuZCBJIGJhc2ljYWxseSBkaWQgYSBkcml2aW5nIHRvdXIgb2YgTWFuYWd1YS4KUHJhaXNlIEFsbGFoIHN3dCB3aG8gaGFzIHRod2FydGVkIHlvdXIgYXRyb2Npb3VzIGhvcGVzIGluIEVneXB0IGFuZCB0aGUgcmVzdCBvZiB0aGUgQXJhYiB3b3JsZCwgeW91IGtub3cgYXMgd2VsbCBhcyBJIGRvIHRoYXQgdGhlIG1ham9yaXR5IG9mIEVneXB0aWFucyBkb24gYmVsaWV2ZSBpbiBzZWN1bGFyaXNtIGFuZCBkb24gaGF2ZSB0aGlzIHJpZGljdWxvdXMgd2VzdGVybiBvdXRsb29rLiBUaGlzIHN1YnJlZGRpdCBpcyBzdWNoIGEgbWlub3JpdHkgb2YgRWd5cHRpYW5zIHRoYXQgaXRzIGh5c3RlcmljYWwuIEkgd29uZGVyIGlmIHlvdSBldmVuIGxpdmUgaW4gRWd5cHQuClRoZSBwcm9ibGVtIGlzLCB0aGV5IGhhdmUgYSByaWdodCB0byBkbyB3aGF0IHRoZXkgZG9pbmcuIElzIGl0IHVuZXRoaWNhbCBhbmQgcHJvYmxlbWF0aWM/IFllcy4gQnV0IHRoZXkgaGF2ZSBhIHJpZ2h0IHRvIGV4aXN0LiBUaGUgcHJvYmxlbSBpcyB0aGF0IHRoZXkgY29uc2lkZXJlZCBuZXdzLCB3aGljaCBoYXMgYW4gaW1wbGljYXRpb24gb2YgYWNjdXJhY3kgYW5kIGNyZWRpYmlsaXR5LgpXaGVuIHlvdSBjbGljayB0aGUgRGVhbCBidXR0b24sIHlvdSBhbmQgdGhlIGRlYWxlciB3aWxsIGJlIGRlYWx0IHR3byBjYXJkcyBlYWNoICh0aGUgZGVhbGVyJ3MgY2FyZHMgd2lsbCBiZSBmYWNlIGRvd24pLCBhbmQgdGhyZWUgY2FyZHMgd2lsbCBiZSBkcmF3biB0byB0aGUgdGFibGUgKHRoaXMgaXMga25vd24gaW4gcG9rZXIgdGVybWlub2xvZ3kgYXMgdGhlIGZsb3ApLgpEZW1vY3JhdHMgd2VyZSBhbHJlYWR5IG9uIHRoZSBidXMgYWJvdXQgdG8gZGVwYXJ0IGZvciB0aGUgYWlyIGZvcmNlIGJhc2UuIApUQkggdGhlIGJlc3QgdGhpbmcgeW91IGNhbiBkbyBhcyBhIGJlZ2lubmVyIGlzIHBsYXkgc3VwZXIgbG93IHN0YWtlcyBhbmQgKG1vc3QgbGlrZWx5KSBsb3NlIGEgbG90IG9mIGJ1eSBpbnMuIFRoaXMgd2lsbCBnZXQgeW91IHRoZSBnZW5lcmFsIGdyYXNwIG9mIHRoZSBnYW1lLiAKSSBqdW1wZWQgb24gcmlnaHQgYWZ0ZXIgdGhlIHVwZGF0ZSB0byBwbGF5IGEgY291cGxlIG9mIGdhbWVzIG9mIEdhbWJpdCBQcmltZSBhbmQgYSBjb3VwbGUgb2YgZ2FtZXMgb2YgUmVja29uaW5nLiBJIGhhZCBhIHRvbiBvZiBmdW4gd2l0aCB0aGUgbmV3IG1vZGVzIGFuZCB0aGUgbmV3IG1hcHMuIExlYXJuaW5nIHRoZSBuZXcgbWVjaGFuaWNzIG9uIHRoZSBmbHkgd2hpbGUgdHJ5aW5nIHRvIGZpZ3VyZSBvdXQgdGhlIG51YW5jZXMgb2YgdGhlIG1hcCB3YXMgbmVhdC4gSSByZWFsbHkgbG9va2luZyBmb3J3YXJkIHRvIHNlZWluZyBob3cgYm90aCBHYW1iaXQgYW5kIFJlY2tvbmluZyBleHBhbmQgb3ZlciB0aGUgbmV4dCBmZXcgd2Vla3MgYXMgdGhlIG5ldyBhcmVuYXMgcmVsZWFzZSBhbmQgcGVvcGxlIHVubG9jayBoaWdoZXIgYXJtb3IgcGVya3MuIEkgd2VudCBvbiB0aGUgc3VicmVkZGl0IGxvb2tpbmcgZm9yIG90aGVyIHBlb3BsZSB0byBzaGFyZSBteSBleGNpdGVtZW50IHdpdGggYW5kIGl0IGRpc2FwcG9pbnRpbmcgdG8gaW5zdGVhZCBzZWUgbXVsdGlwbGUgdGhyZWFkcyB0aGF0IGFyZSBhbGwgd2FsbHMgb2Ygc2FsdC4KVGhlIGV2ZW5pbmcgYWxzbyBtYXJrcyB0aGUgbGF1bmNoIG9mIGFuIGFydCBzaG93IGRlYWxpbmcgd2l0aCBmZW1pbmlzdCB0aGVtZXMgdGhhdCB3aWxsIHJ1biB1bnRpbCBBcHJpbCAyMXN0LiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBTZXJpb3VzbHksIHRoZXJlIGlzIGFuIGFic3VyZCBhbW91bnQgb2YgbWlzaW5mb3JtYXRpb24uIEkgZG9uIHByZXRlbmQgbGlrZSBJIHNvbWUgY3J1c2hlciB3aXRoIGFsbCB0aGUgYW5zd2VycyBidXQgaGFsZiB0aGUgc3R1ZmYgb24gaGVyZSBpcyBqdXN0IGhvcnJlbmRvdXNseSB3cm9uZy4gVGhlcmUgYXJlIHNvbWUgcGVvcGxlIG9uIGhlcmUgd2hvIGFyZSBhbWF6aW5nIGJ1dCBJIHdvdWxkIHNheSB0aGUgbWFqb3JpdHkgY2FuIGJlYXQgdGhlIHJha2UgYXQgMi81LgpUaGVvcmV0aWNhbGx5LCBzZXZlcmFsIGdlbmVyYXRpb25zIG9mIHRvcCBhdGhsZXRlcyB1c2luZyBjdXR0aW5nIGVkZ2UgbnV0cml0aW9uIGFuZCB0cmFpbmluZyBwcm9ncmFtcyBhbmQgbWF0aW5nIHdpdGggb25lIGFub3RoZXIgY291bGQgcHJvZHVjZSBhIGdlbmV0aWMgZnJlYWsgd2hvIHRoZW4gbWlnaHQgYWxzbyBiZSByZWFsbHkgaW50byBydW5uaW5nIGFuZCBudXRyaXRpb24uIApUaGluayBwZW9wbGUgYXJlIHJlYWxseSBlbmpveWluZyB0aGUgZmFjdCB0aGF0IGl0IHF1aXRlIGFuIHVwbGlmdGluZyBib29rIGF0IHRoZSBlbmQsIGV2ZW4gdGhvdWdoIHRoZXJlIHNvbWUgdHJhZ2ljIG5vdGVzIHRvIGl0LCBNYXJzaGFsbCBzYWlkLiAKVGhpcyBwcm9tb3RlcyB3aWRlciBoZWFsdGhjYXJlIGNvdmVyYWdlIG9wdGlvbnMgYXMgd2VsZmFyZSBzeXN0ZW1zIGFyZSBvdmVybG9hZGVkIGFuZCBjb2xsYXBzZSB3aXRob3V0IGNvbnRyb2wgb3ZlciB3aG8gY2FuIGNvbWUgYW5kIGdvIHRvIHVzZSB0aGVtLiBCeSBsaW1pdGluZyBhY2Nlc3MgdG8gaGVhbHRoY2FyZSBjb3ZlcmFnZSB0byBvbmx5IGNpdGl6ZW5zIG9mIHRoZSBjb3VudHJ5LCB3ZSBjYW4gb2ZmZXIgZmFyIGdyZWF0ZXIgYmVuZWZpdHMgYXQgY2hlYXBlciBjb3N0IHRvIGV2ZXJ5b25lIHVzaW5nIHRoZW0uCkNvbXBvc2UgYW4gaW50cm9kdWN0b3J5IHBhcmFncmFwaCB0aGF0IHN0YXRlcyB5b3VyIGludGVyZXN0IGluIHRoZSBqb2IgYW5kIGhvdyB5b3UgbGVhcm5lZCBhYm91dCB0aGUgcG9zaXRpb24uIApKdXN0IHRob3VnaHQgaXQgd2FzIGEgcmVhbGx5IGZ1bm55IHRoaW5nIHdoaWNoIHNob3dzIGEgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZSB0d28gY3VsdHVyZXMuIApTdWNoIGFzIEVQTCB0byBMYSBMaWdhLiAKSWtlYSB0byBwaGFzZSBvdXQgc2luZ2xlClRoZSB3b3JzdCBpcyBkb2luZyBhIHdpdGhkcmF3YWwgYW5kIHRoZWlyIHNpdGUgaXMgZW1wdHkgb2YgY2hwIGFuZCB0aGV5IGhhdmUgdG8gcmVsb2FkLiAKT3JkZXIgdGhlIGNha2UuIFVubGVzcyB5b3UncmUgYSBtYXN0ZXIgYXQgYmFraW5nLCBtYWtlIGl0IGVhc3kgb24geW91cnNlbGYgYnkgb3JkZXJpbmcgdGhlIGNha2UgZnJvbSBhIGJha2VyeS4gClF1YW5kbyBjYW1iaWEgbGEgbXVzaWNhLCBlc3Bsb2RpOiByaWRpLCB1cmxhLCBwaWFuZ2ksIHNhbHRhLCBzY3VvdGl0aSwgbmVsbGEgcGkgYXNzb2x1dGEgZm9sbGlhLiBRdWFsc2lhc2kgY29zYSBhZmZpb3JpIG5lbGxhIHR1YSBtZW50ZSBvIGEgbGl2ZWxsbyBlbW90aXZvLCBlc3ByaW1pbGEgdG90YWxtZW50ZS4gSW4gcXVlc3RvIG1vZG8gbGliZXJpIGlsIHR1byBvcmdhbmlzbW8gZGEgb2duaSByZXByZXNzaW9uZSwgZGFsIHR1byBpbnRlcm8gY29uZGl6aW9uYW1lbnRvLiAKVGhhdCBhIHdheXMgb2ZmIHRob3VnaCwgYW5kIGhvcGVmdWxseSB5b3Ugd2FudCB0byBwbGF5IHBva2VyIG5vdCBqdXN0IGJlY2F1c2Ugb2YgbW9uZXkgYnV0IGJlY2F1c2UgaXQgZnVuIGFuZCB5b3UgbGlrZSBpdC4gSWYgc28gdGhlbiB5b3Ugc2hvdWxkIGp1c3QgcGxheSBhIHN0YWtlIHlvdSBjYW4gYWZmb3JkLiBQbGF5aW5nIGZvciBhIGxpdmluZyBpcyB2ZXJ5IGNoYWxsZW5naW5nIGJ1dCBwbGF5aW5nIGF0IGJyZWFrIGV2ZW4gdG8gaGF2ZSBhIGZyZWUgaG9iYnkgaXMgaG9uZXN0bHkgbm90IGRpZmZpY3VsdCBhdCBhbGwuLiAKQ2VsYSBwZXV0IHZvdWxvaXIgZGlyZSBxdSBtb2lucyBkIHB1cmlmaXMgZHUgcGFzcywgYXVjdW4gZCBub3VzIG5lIHBldXQgZW50cmVyIGRhbnMgbGUgcm95YXVtZSBkZSBsYSBsaWJlcnQuIFN3YW1pIE11a3RhbmFuZGEsIHVuIE1hdHJlIGNvbnRlbXBvcmFpbiwgcXVpIGVzdCBtb3J0IGlsIHkgYSBwZXUgZCBkaXQgYXVzc2kgOiAgTGVzIHBpZWRzIGR1IGdvdXJvdSBzb250IGNvbW1lIGxlcyBmb25kYXRpb25zIHN1ciBsZXNxdWVsbGVzIGVzdCBidGllIHVuZSBtYWlzb24gOyBtYWlzIGwgbmUgZG9pdCBwYXMgdHJlIGlkZW50aWZpZSAgdW5lIHJlcHJzZW50YXRpb24gcGh5c2lxdWUuIApBdCBmaXJzdCBnbGFuY2UsIHRoZSB0d28gb2NjdXBhdGlvbnMgYXBwZWFyZWQgdG8gYmUgcHJldHR5IHNpbWlsYXIuIApJbiBtb3N0IHBsYWNlcywgd2hlbiB5b3UgZmlsZSBmb3IgZGl2b3JjZSwgYm90aCBwYXJ0aWVzIGFyZSByZXF1aXJlZCB0byB0YWtlIGEgY2xhc3MgKENoaWxkIEltcGFjdCBTZW1pbmFyKSB0aGF0IHRlYWNoZXMgdGhlIHBhcmVudHMgaG93IHRvIGNvIHBhcmVudCBlZmZlY3RpdmVseSBhbmQgdGhlIGltcGFjdCBvZiBkaXZvcmNlIG9uIGNoaWxkcmVuLiBIb3BlZnVsbHksIHNpbmNlIHlvdSByZWNlbnRseSBmaWxlZCwgeW91IGFuZCB5b3VyIHdpZmUgd2lsbCBiZSByZXF1aXJlZCB0byB0YWtlIHRoaXMgY2xhc3MuIApUaGV5IGRvbiBldmVuIG5lY2Vzc2FyaWx5IHdhbnQgdG8gYmUgaW4gY2hhcmdlLiAKVGhyb3VnaCB0ZXN0aW5nIGFuZCBvYnNlcnZhdGlvbiwgSGFobmVtYW5uIGRpc2NvdmVyZWQgdGhhdCBzdWJzdGFuY2VzIHRoYXQgcHJvZHVjZWQgY2VydGFpbiByZWFjdGlvbnMgaW4gaGVhbHRoeSBwZW9wbGUgICBzdWNoIGFzIHRoZSBpdGNoeSwgc3dvbGxlbiBidW1wcyBjYXVzZWQgYnkgYmVlIHZlbm9tICAgY291bGQgc3RpbXVsYXRlIGEgaGVhbGluZyByZXNwb25zZSBpbiBzb21lb25lIHdpdGggYW4gaWxsbmVzcyB0aGF0IGhhZCBzaW1pbGFyIHN5bXB0b21zLiBUaHVzIGEgaG9tZW9wYXRoaWMgcHJlcGFyYXRpb24gb2YgYmVlIHZlbm9tIGdpdmVuIHRvIGEgcGVyc29uIHdpdGggYSByYXNoIGxvb2tpbmcgYW5kIGZlZWxpbmcgbGlrZSBiZWUgc3RpbmdzIGFsbGV2aWF0ZWQgdGhlIHN5bXB0b21zLiAKREVUUk9JVCAgIFRoZSBEZXRyb2l0IFJlZCBXaW5ncyB0b2RheSBhbm5vdW5jZWQgdGhhdCB0aWNrZXRzIGFyZSBub3cgb24gc2FsZSBmb3IgTW90b3JDaXR5IENhc2lubyBIb3RlbCdzIGFubnVhbCBSZWQgV2luZ3MgQ2hhcml0eSBQb2tlciBUb3VybmFtZW50IGJlbmVmaXRpbmcgdGhlIERldHJvaXQgUmVkIFdpbmdzIEZvdW5kYXRpb24uIFNldCBmb3IgTW9uZGF5LCBGZWIuIApTaGUgbWlnaHQgbm90IHJlYWxpc2UgdGhlIGVmZmVjdCBpdCBoYWQgb24geW91LCBhbmQgdGhpcyBpcyBtb3JlIHJlYXNvbmFibGUgdGhhbiBqdXN0IGtpY2tpbmcgaGVyIG91dC4uIApUaGUgb25seSB0cm91YmxlIHdpdGggdGhpcyBhcnJhbmdlbWVudCB3YXMgb3VyIGxvY2F0aW9uIG5vdCBhIHR5cGljYWwgVHJ1bXAgcHJvYmxlbS4gV2Ugd2VyZSBhdCB0aGUgZW5kIG9mIGEgY3VsIGRlIHNhYyBpbiBhbiBhZmZsdWVudCBjb21tdW5pdHkgb2Ygc3BhY2lvdXMgaG9tZXMgb24gc3ByYXdsaW5nIHByb3BlcnRpZXMuIEluIGV2ZXJ5IG90aGVyIHJlc3BlY3QsIHRoaXMgd2FzIGEgcHJpbWUgc3BvdCwgYnV0IGl0IHdhcyBhIGRlYWQgem9uZSBmb3IgYXNwaXJpbmcgbGVtb25hZGUgbWFnbmF0ZXMuIApSdW5uaW5nIGFuZCBndW5uaW5nIHdvbiB3b3JrLiAKV2hhdCBJIG1lYW4gaXMsIHNvbWVvbmUgd2hvIGhhcyBkb25lIGJ1c2luZXNzLCBuZWdvdGlhdGVkIHdpdGgsIGFuZCBrbm93cyB0aGUgY3VsdHVyZSBvZiBlYWNoIGNvdW50cnkuIFdoZW4geW91IHRoaW5rIGFib3V0IG91ciB0cmFkZSBhZ3JlZW1lbnRzIGFuZCBvdXIgZ29vZHMvc2VydmljZXMgYmVpbmcgZmFpcmx5IGRpc3RyaWJ1dGVkIHRocm91Z2hvdXQgdGhlIHdvcmxkLCB3ZSBuZWVkIHNvbWVvbmUgd2hvIGtub3dzIGFuZCBjYW4gZ2V0IHRoaXMgZG9uZS4uIApUaGUgc2FkIHBhcnQgaXMgd2UgY291bGQgcHJvYmFibHkgdXNlIHRoZSBERUEgY3VycmVudGx5IGJ1dCB0aGV5IHNwZW50IHNvIG11Y2ggdGltZSBmaWdodGluZyBhZ2FpbnN0IHRoZSBwdWJsaWMgb24gZHJ1Z3MgdGhhdCByZWFsbHkgd2VyZW4gYSBiaWcgZGVhbCB0aGF0IHRoZXkgd29uIGV2ZXIgc2VlIGFueSBzdXBwb3J0IGFuZCB3aWxsIG9ubHkgYmUgZmF1Z2h0IGFnYWluc3QuCkEuIE91ciBTd2luZyBSZWxpZWY6IE1hc3NhZ2Ugd2FzIGRldmVsb3BlZCBieSB3b3JraW5nIHdpdGggUEdBIHByb2Zlc3Npb25hbHMgd2hvIHVuZGVyc3RhbmQgdGhlIGJpb21lY2hhbmljcyBvZiB0aGUgZ29sZiBzd2luZy4gV2hhdCBtYWtlcyB0aGUgd29yayBkaWZmZXJlbnQgaXMgdGhlIGludGVudGlvbiBhbmQgZm9jdXMgb24gZ29sZiByZWxhdGVkIG1vdmVtZW50cy4gCk9uZSBlbWFpbCBpbmNsdWRlZCBpbiB0aGUgNDkgcGFnZXMgd29ydGggb2YgZG9jdW1lbnRzIHN1cHBsaWVkIGJ5IHRoZSBDaXR5IG9mIEVsa2hhcnQsIGluY2x1ZGVzIGFuIGFwcGFyZW50bHkgcmFjaXN0IHBob3RvIGFuZCBjYXB0aW9uLiAKQWxzbyBDemVjaCBoYXMgc29tZSBDYXNpbm9zIG5lYXIgdGhlIGJvcmRlci5TaGFtcm9jayB1c2VkIHRvIGJlIHRoZSBuaWNlc3QvZmFpcmVzdCBsZWdhbCBwdWJsaWMgZ2FtZSBpbiBtdW5pY2ggaW1obywgYnV0IG9ubHkgb25jZSBhIHdlZWsgYW5kIEkgZG9uIGtub3cgaWYgaXQgc3RpbGwgZ29pbmcuIE1vc3Qgb2YgdGhlIG90aGVycyAoaWYgc3RpbGwgb3BlcmF0aW9uYWwpIGxpa2UgQmF2YXJpYW4gUG9rZXIgVG91ciwgOSAyIHBva2VyIGV0YyBoYXZlIGEgdmVyeSBzdGVlcCBibGluZCBzdHJ1Y3R1cmUgaW4gdGhlaXIgU05HcyBzbyBpdCBtYWlubHkgYWJvdXQgY29uc3RhbnQgYWxsIGluIHB1c2hpbmcuIApOb3QgdG8gbWVudGlvbiBzY2hvb2wgZm9vZCByZWd1bGF0aW9ucyBhbGxvd2VkIHVzIHRvIGJlIHNlcnZlZCB3aGF0IHdhcyBlc3NlbnRpYWxseSBydWJiZXIgbWVsdGVkIG9udG8gc3RhbGUgYnJlYWQgdGhleSBjYWxsZWQgcGl6emEuCkF0IHRoYXQgcGhhc2Ugb2YgdGltZSwgcGVvcGxlIHVzZWQgdG8gZ2V0IGludm9sdmVkIGludG8gZGljZSBhbmQgY2FyZCBnYW1lcyByb3VuZCB0aGUgY2xvY2ssIGlycmVzcGVjdGl2ZSBvZiB0aGUgZmFjdCwgdGhhdCBpdCB3YXMgZGF5IG9yIGxhdGUgbmlnaHQsIHdoZXJlYXMgaW4gQW1lcmljYSwgc3BlY2lmaWNhbGx5IGFtb25nIHRoZSBJbmRpYW4gdHJpYmVzLCB0aGUgd29tZW4gY291bGQgcGxheSB0aGUgc2FtZSB3aGVuIHRoZWlyIHNwb3VzZXMgd2VyZSBub3Qgd2F0Y2hpbmcgdGhlbS4gTW92aW5nIG9udG8gdGhlIHByb3ZpbmNlIG9mIFdpbGQgV2VzdCwgdGhlIGRpc3Rpbmd1aXNoZWQgd29tZW4gd2hvIGdvdCB0aGVtc2VsdmVzIGludG8gZ2FtYmxpbmcgd2VyZSBkZWFsZXJzLCBnYW1ibGVycyBhbmQgcHJvc3RpdHV0ZXMgYW5kIG5hbWVkIHRoZW1zZWx2ZXMgYXMgbWFnbmlmaWNlbnRseSBzdWNoIGFzIFBva2VyIEFsaWNlLCBNYWRhbWUgTW91c3RhY2hlLCBDYWxhbWl0eSBKYW5lIGFuZCBCdWNrc2tpbiBBbGljZS4uIApXYWNoc3R1bSBtaXQgc3RhcmtlbiBGcmFuY2hpc2VwYXJ0bmVyOiBEaWUgSW50ZXJjb250aW5lbnRhbCBIb3RlbHMgR3JvdXAgKElIRykgZnJldXQgc2ljaCBhdWYgbmV1ZSBIb2xpZGF5IElubiBIb3RlbHMgaW4gQWFhY2hlbiB1bmQgbnVuIGF1Y2ggaW4gU3R1dHRnYXJ0LiBNaXQgRm9yZW1vc3QgSG9zcGl0YWxpdHkgSElFWCB3aXJkIGVpbiAxNDAgWmltbWVyIEhvdGVsIGFtIFN0dXR0Z2FydGVyIEhhdXB0YmFobmhvZiByZWFsaXNpZXJ0ICAgRXJmZm51bmcgc29sbCAyMDE2IHNlaW4uIE1pdCBTdWNjZXNzIEhvdGVsIE1hbmFnZW1lbnQgZWluIDE2NSBaaW1tZXIgSGF1cyBuYWhlIGRlbSBCYWhuaG9mIEFhY2hlbjsgRXJmZm51bmcgaXN0IEVuZGUgMjAxNi4KVG8gcmVnaXN0ZXIgd2l0aCB0aGUgc3lzdGVtLCB1c2VycyBub21pbmF0ZSBhIHNldCBvZiBmYWNlcyB0aGF0IGFyZSB3ZWxsIGtub3duIHRvIHRoZW0sIGJ1dCBhcmUgbm90IHdlbGwga25vd24gdG8gb3RoZXIgcGVvcGxlLiBUaGUgcmVzZWFyY2hlcnMsIHdobyBpbmNsdWRlZCBKYW5lIE1jTGFjaGxhbiBhbmQgS2FyZW4gUmVuYXVkLCBvZiB0aGUgU2Nob29scyBvZiBQc3ljaG9sb2d5IGF0IHRoZSBVbml2ZXJzaXR5IG9mIEdsYXNnb3csIGZvdW5kIHRoYXQgaXQgd2FzIHN1cnByaXNpbmdseSBlYXN5IHRvIGdlbmVyYXRlIGZhY2VzIHRoYXQgaGF2ZSB0aGlzIHByb3BlcnR5LiAKT2Z0ZW4sIHdlIGhhdmUgdG8gZmFjZSBzaXR1YXRpb25zIGluIG91ciBkYWlseSBsaXZlcyB3aGVyZSB3ZSBoYXZlIHRvIGhpcmUgcHJvZmVzc2lvbmFsIGhlbHAgdG8gY29tcGxldGUgYSBqb2IuIFRyZWUgcmVtb3ZhbCBpcyBvbmUgc3VjaCBqb2IgdGhhdCByZXF1aXJlcyBhdHRlbnRpb24gb2YgcHJvZmVzc2lvbmFscy4gSWYgeW91IGYuCkkgcHJvYmFibHkgY291bGQgaGF2ZSBkb25lIHRoaXMgaW4gYSBmcmllbmRsaWVyIHdheS4gCkdldHRpbmcgQ2VydGlmaWNhdGlvbk5DQlRNQiBpcyB0aGUgcHJpbWFyeSBhZ2VuY3kgdGhhdCBpc3N1ZXMgbWFzc2FnZSB0aGVyYXB5IGNlcnRpZmljYXRpb25zLiBUaGUgYWdlbmN5IGhhcyBzcGVjaWZpYyByZXF1aXJlbWVudHMgdGhhdCBtdXN0IGJlIG1ldCBieSBlYWNoIGNlcnRpZmljYXRpb24gY2FuZGlkYXRlLiBUaGVzZSByZXF1aXJlbWVudHMgaW5jbHVkZSA1MDAgaG91cnMgb2YgbWFzc2FnZSB0aGVyYXB5IGNsYXNzcm9vbSBpbnN0cnVjdGlvbiwgcGFzc2luZyB0aGUgTkNCVE1CIHdyaXR0ZW4gZXhhbWluYXRpb24gYW5kIGZhbWlsaWFyaXR5IHdpdGggdGhlIE5DQlRNQidzIFN0YW5kYXJkcyBvZiBQcmFjdGljZSBhbmQgQ29kZSBvZiBFdGhpY3MuIEJ1cmVhdSBvZiBMYWJvciBTdGF0aXN0aWNzLiBPbiB0aGUgbG93IGVuZCwgbWFzc2FnZSB0aGVyYXBpc3RzIGVhcm5lZCBhIDI1dGggcGVyY2VudGlsZSBzYWxhcnkgb2YgJDI3LDIyMCwgbWVhbmluZyA3NSBwZXJjZW50IGVhcm5lZCBtb3JlIHRoYW4gdGhpcyBhbW91bnQuIFRoZSA3NXRoIHBlcmNlbnRpbGUgc2FsYXJ5IGlzICQ1NywxMTAsIG1lYW5pbmcgMjUgcGVyY2VudCBlYXJuIG1vcmUuIEhlciBkb3NzaWVyIGluY2x1ZGVzIEphWmFNTSBXZWJEZXNpZ25zLCBhc3Npc3RhbnQgaGlnaCBzY2hvb2wgYmFuZCBkaXJlY3RvciwgZGlzdHJpY3QgbWFuYWdlciBmb3IgdGhlIENsYXJpb24gTGVkZ2VyIGFuZCBldmVudCBjb29yZGluYXRvciBmb3IgdGhlIFZpY2tzYnVyZyBDb252ZW50aW9uIENlbnRlci4KSSBuZWVkZWQgdGhlIHJlZmVyZW5jZSBwaG90byBvciB0aGUgZHJhd2luZyBtaWdodCBub3Qgd29yayByaWdodC4gVGhleSByb2xsZWQgSmVzc2ljYSB3aGVlbGNoYWlyIG9udG8gdGhlIHBsYXRmb3JtIGFuZCBpdCB3aGlycmVkIGxpZnRpbmcgaGVyIGludG8gdGhlIGJhY2sgb2YgdGhlIHZhbi4gU2hlIHNtaWxlZCBhYnNlbnRtaW5kZWRseSBzdGFyaW5nIG9mZiBhdCB0aGUgdHJlZXMuIApJZiBub3QgdGhhdCwgSSBkaXNjdXNzaW5nIHRoZW9yaWVzIG9uIHRoZSBmb3J1bXMuIApEYXMgd2FyIHVuc2VyZSBsZXR6dGUgSG9mZm51bmcsIG5hY2hkZW0gZGllIFdhc3Nlcmt1cmVuIG1pdCBTdGVpbmVuIHVuZCBTY2tlbiBsZXR6dGVuIE1vbmF0IGF1Y2ggbmljaHQgZGVuIGdld25zY2h0ZW4gRXJmb2xnIHplaXRpZ3Rlbi4gCkV2ZXJ5IHRpbWUgeW91IHZvbHVudGFyaWx5IGxheSBtb25leSBvbiB0aGUgdGFibGUgaW4gcG9rZXIsIHlvdSBzaG91bGQgaGF2ZSBhIHZlcnkgZ29vZCByZWFzb24gdG8gZG8gc28uIApabyBoZWVmdCBtaWpuIGZhbWlsaWUgb29rIGVlbiBtb29pZSBoZXJpbm5lcmluZyBhYW4gZGUgbGFhdHN0ZSBwZXJpb2RlIGRhdCB3aWogYmlqIGVsa2FhciB3YXJlbi4gTmF0dXVybGlqayBnZXZlbiBhbmRlcmVuIGxpZXZlciBkaXQgYmVkcmFnIGFhbiBkci4gCjMpIEkgZGlkbiBldmVuIGZlZWwgbGV0IGRvd24gdW50aWwgSSB3YXMgMyB3ZWVrcyBwb3N0IHBhcnR1bS4gU29tZSB3b21lbiBuZXZlciBmZWVsIGxldCBkb3duLiBTZXZlcmFsIG1vbnRocyBpbiBJIGZvdW5kIEkgd291bGQgZ2V0IGEgc2Vjb25kIGxldCBkb3duIGFmdGVyIDIwIG1pbnV0ZXMgb2YgcHVtcGluZyBvciBudXJzaW5nLiAKRXZlbiBhIHN0cmFpZ2h0IGZsdXNoIG9uIHRoZSBib2FyZCBjYW4gbG9zZS4gRXhhbXBsZSwgaWYgdGhlIGJhcmQgaXMgS1FKMTA5IGFsbCBoZWFydHMsIHlvdSBoYXZlIGEga2luZyBoaWdoIHN0cmFpZ2h0IGZsdXNoLiAKSW5kZWVkLCBpbiBoaXMgcmVjZW50IGJvb2sgZW50aXRsZWQgVGhlIEVyYSBPZiBMb3cgSVEsIE1yIEtlbmljaGkgT2htYWUgICBuaWNrbmFtZWQgSmFwYW4gTXIgU3RyYXRlZ2lzdCAgIGxpc3RlZCAgYW5kIENoaW5hIGFzIHdpbm5lcnMgaW4gdGhlIG5ldyBlcmEgb2YgZ2xvYmFsaXNhdGlvbi4gSGUgb3BpbmVkIHRoYXQgSmFwYW4gc2hvdWxkIGxlYXJuIGZyb20gIHRvIGFycmVzdCB0aGUgdHJlbmQgb2YgbG93IElRIGFtb25nIEphcGFuZXNlLgpTZXB0ZW1iZXI6IFJvYmVydHMgc3VlcyBNYXh3ZWxsIGluIGZlZGVyYWwgY291cnQgaW4gTmV3IFlvcmssIGNsYWltaW5nIHRoYXQgRXBzdGVpbidzIGFsbGVnZWQgbWFkYW0gZGVmYW1lZCBoZXIgaW4gcHVibGljIHN0YXRlbWVudHMgaW4gdGhlIG1lZGlhLiBUaGUgbGF3c3VpdCBpcyB3aWRlbHkgdmlld2VkIGFzIGEgdmVzc2VsIGZvciBFcHN0ZWluJ3MgdmljdGltcyB0byBleHBvc2UgdGhlIHNjb3BlIG9mIEVwc3RlaW4ncyBjcmltZXMuIFNldmVyYWwgY2l2aWwgbGF3c3VpdHMgZmlsZWQgdGhlIHNhbWUgeWVhciBhbGxlZ2UgdGhhdCBFcHN0ZWluIGFuZCBNYXh3ZWxsIG9wZXJhdGVkIGFuIGludGVybmF0aW9uYWwgc2V4IHRyYWZmaWNraW5nIG9wZXJhdGlvbi4KSSByZWFsbHkgZG9uIG5lZWQgdG8gdXNlIGl0LCBzaW5jZSBteSBjZWxscGhvbmUgYW5kIGhvbWUgYW5kIHdvcmsgY29tcHV0ZXIgYXJlIGFsbCBwYWlyZWQgd2l0aCBhIHVuaXF1ZSBwYXNzd29yZC4KVGhleSB3ZXJlIG5vdCB0b3RhbGx5IGltbXVuZSB0byBpdCwgYnV0IHRoZXkgd2VyZSBsZXNzIGxpa2VseSB0byBleHBlcmllbmNlIG1hc3MgZGV2YXN0YXRpb24gYXMgdGhlIEluZGlnZW5vdXMgcGVvcGxlcyB3ZXJlLk5vdGhpbmJ1dE5ldHRlICAzNiw0ODEgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ29NeSBncmFuZGZhdGhlciBkaWQgbm90IGRpZSBvZiBhIGhlYXJ0IGF0dGFjayBpbiB0aGUgZ2FyYWdlLCBteSBncmFuZG1vdGhlciBhY2NpZGVudGFsbHkgaGl0IGhpbSB3aXRoIHRoZSBjYXIuIEkgbmV2ZXIga25ldyB3aHkgbXkgZ3JhbmRtb3RoZXIgcmVmdXNlZCB0byBkcml2ZSBhbnl3aGVyZSBhbmQgcHJlZmVycmVkIHdhbGtpbmcudG8gYWRkOldoYXQgaGFwcGVuZWQgd2FzIHNoZSB3YXMgaW4gdGhlIGRyaXZld2F5IHRyeWluZyB0byBiYWNrIG91dCwgaGUgd2FzIHN0YW5kaW5nIGluIGZyb250IG9mIHRoZSBjYXIgZ3VpZGluZyBoZXIsIHNoZSB0aG91Z2h0IHNoZSB3YXMgaW4gcmV2ZXJzZSwgc2hlIHdhcyBsb29raW5nIGJhY2ssIHByZXNzZWQgdGhlIGdhcywgY2FyIHdlbnQgZm9yd2FyZCBhbmQgcGlubmVkIG15IGdyYW5kZmF0aGVyIGFnYWluc3QgdGhlIGdhcmFnZSBkb29yLiBIZSBkaWVkIGxhdGVyIHRoYXQgZGF5IGF0IHRoZSBob3NwaXRhbGFnYWluIGZvciBhbGwgdGhlIHBlb3BsZSBhY2N1c2luZyBteSBwb29yIGdyYW5kbW90aGVyOiBJIHdhcyA2IGF0IHRoZSB0aW1lIGFuZCBJIHN0aWxsIHJlbWVtYmVyIGhlciBzb2JiaW5nIHVuY29udHJvbGxhYmx5IGF0IGhpcyB3YWtlLCBhbG1vc3Qgc2NyZWFtaW5nLiAKSW4gb3RoZXIgd29yZHMsIHRoZSBBbWVyaWNhbiBEcmVhbSBoYWQgdHVybmVkIGludG8gQW1lcmljYW4gRGVtZW50aWFBbmQgd2hvIHdlcmUgdGhlIG1vbnN0ZXJzIHRoYXQgZmVkIG9uIG91ciBkZW1lbnRpYT8gV2hvIGJlY2FtZSByaWNoIHdoaWxlIHdlIHBhcnRpY2lwYXRlZCBpbiBvdXIgY29sbGVjdGl2ZSBpbnNhbml0eT8gVGhlIGJhbmtlcnMuIApUaGVuLCBhcyBhIGpva2UsIGJlY2F1c2UgbXkgaWRpb3QsIGF3a3dhcmQgdGVlbmFnZSBicmFpbiBjb3VsZG4gYWN0dWFsbHkgY29uY2VpdmUgb2YgdGhlIGlkZWEgb2YgYW55IGdpcmwgbGlraW5nIG1lLCBJIHNhaWQgIk1heWJlIHdlIHNob3VsZCBnZXQgdG9nZXRoZXIuIFlvdSBjYW4gYmUgbXkgZ2lybGZyaWVuZCBhbmQgdGhlbiB3ZSBtYWtlIHRoZW0gaGFuZyBhcm91bmQgd2FpdGluZyBmb3IgdXMgb25jZSBpbiBhIHdoaWxlLiIgRnJpZW5kcyB3aXRoIHNvY2lhbCBza2lsbHMsIGFtaXJpdGU/ClJpZ2h0IG9mZiB0aGUgYmF0LCBoZSBlbmdpbmVlcmVkIGEgamFpbGJyZWFrIGZvciBhIHN0b3JlZnJvbnQgYmlzaG9wIGZyb20gQnJvb2tseW4gYmVpbmcgaGVsZCBvbiBhIHdhcnJhbnQgdmlvbGF0aW9uICAgZnVydGhlciBhbGllbmF0aW5nIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgY29uc3RpdHVlbmNpZXMgYW55IG1heW9yIGNhbiBoYXZlLCB0aGUgYWxyZWFkeSBwcm9mb3VuZGx5IHN1c3BpY2lvdXMgTllQRC4gKFRoZSBiaXR0ZXJuZXNzIGxpbmdlcnMsIGFuZCBubyBsb25nZXIgd2lsbCBiZSBtaXRpZ2F0ZWQgYnkgdGhlIHByZXNlbmNlIG9mIGEgYnJpbGxpYW50IHBvbGljZSBhZG1pbmlzdHJhdG9yLCBCaWxsIEJyYXR0b24uKQpObyBzZWFzIHRhbiBjb25maWFkbyBkZSBsbyBxdWUgSnVhbiBkaWpvLCBhbiB0ZW5lbW9zIHF1ZSBlc2N1Y2hhciBsYSBvdHJhIHZlcnNpbiAgIERvbiBiZSB0b28gZ3VsbGlibGUgb3ZlciBKdWFuIHdvcmRzLCB3ZSBzdGlsbCBuZWVkIHRvIGhlYXIgdGhlIG90aGVyIHNpZGUgb2YgdGhlIHN0b3J5Ckkga25vdyBhIGxvdCBvZiB3b21lbiBncmFwaGljIGRlc2lnbmVycyBidXQgbm90IGEgbG90IG9mIHdvbWVuIHByb2dyYW1tZXJzIG9yIGVuZ2luZWVycyBlc3BlY2lhbGx5IGluIG15IGdyYWR1YXRpbmcgY2xhc3MuIApIZSBtb3N0bHkgd2FudGVkIHRvIHBsYXkgZ2FtZXMgYW5kIHRhbGssY3VkZGxlIGV0Yy4gClJvYmVydG8gTHVvbmdvIGRvZXMgaW50ZXJ2aWV3IG9uIFZhbmNvdXZlciByYWRpbwpXaHkgbm93IGFtIEkgc3VkZGVubHkgc3VwcG9zZSB0byBjYXJlL3Rha2UgaW50ZXJlc3QgaW4gc29tZW9uZSBJIG5ldmVyIGtub3duIGluIHRoZSBlbnRpcmUgTWFydmVsIG1vdmllIHBsb3QuIEF0IGxlYXN0IEFudCBtYW4gYW5kIHRoZSBXYXNwIHdhcyBhYmxlIHRvIGNvbm5lY3QgdGhlIGRvdHMgYmV0d2VlbiB0aGF0IG1vdmllIGFuZCBJbmZpbml0eSBXYXIgZnJvbSBhIHRpbWVsaW5lIHBlcnNwZWN0aXZlLiAKIlRvIGhhdmUgdGhvc2Uga2luZHMgb2YgaW5pdGlhdGl2ZXMgYmUgc3VjaCBhIGJpZyBwYXJ0IG9mIG15IGpvYiBtYWtlcyBtZSB2ZXJ5IGhhcHB5IGFuZCByZWFsbHkgcHJvdWQgdG8gd29yayBhdCB0aGlzIGNvbXBhbnksIiBzYXlzIEthdGVzLCB3aG8gaGFzIGJlZW4gd2l0aCBMYWJhdHQgc2luY2Ugc2hlIHdhcyBhIHBvc3QgZ3JhZHVhdGUgc3R1ZGVudC4gClN0YXJ0aW5nIGFzIGEgUHJpc29uZXIgZG9lc24gImxpbWl0IiBhbnl0aGluZyBtb3JlIHRoYW4gYmVpbmcgYSBzaGlwd3JlY2sgdmljdGltIGRvZXMsIGJlY2F1c2UgeW91IGtub3cgeW91IGdvaW5nIHRvIGJlIGV4cGxvcmluZyB2ZXJ5IHNvb24gYW55d2F5Li4gCkFidXNlIGlzIHRoZSBub3JtLiBCbG9vZCBmYW1pbHkgaXMgeW91ciBiZXN0IGNoYW5jZSB3aGVuIHlvdSBnZXQgaW4gdHJvdWJsZSBhcyBhIHRlZW4uIApZb3UgaGF2ZSB0byBhaW0gaXQgb3V0d2FyZHMgZnJvbSB0aGUgY2FyIGFzIHRoZSBmb3JjZSBnZW5lcmF0ZWQgaXMgb3Bwb3NlZCB0byB0aGUgZGlyZWN0aW9uIGluIHdoaWNoIHRoZSBnYXMgaXMgZXhwZWxsZWQuCkFraGxhayBkYW4gTXVhbWFsYWggQXJ0aWtlbCBLaHV0YmFoIEp1bWF0IEJlcnNpaCBIYXRpIENlcmFtYWggU2luZ2thdCBGaWtpaCBKYWxhbiBLZWJlbmFyYW4gS2hvdGJhaCBJZHVsIEFkaGEuIApTaGVkZGluZyBpcyB0aGUgcHJvY2VzcyBvZiB2aXJ1cyBlcnVwdGluZyBmcm9tIGNlbGxzIGR1ZSB0byBpdHMgcmVwbGljYXRpb24gcHJvY2Vzcy4gVmFjY2luZXMgaW4gdGhlIFVTIGFyZSBhbGwgYWNlbGx1bGFyIG9yIGF0dGVudWF0ZWQsIG1lYW5pbmcgdGhleSBhcmUgaW5jYXBhYmxlIG9mIHJlcGxpY2F0aW9uIG9mIGFueSBzb3J0LiAKVmlzdWFsbHkgaXQgbG9va3MgbmljZSwgYnV0IHRoYXQgaXNuIHVuaXF1ZSB0aGVzZSBkYXlzLiBJdCBmZWVscyBsaWtlIGEgZmFuIG1hZGUgbW92aWUuIApCdXQsIEknbSBnb2luZyB0byBmaWdodCB0aGlzIGFuZCBJJ20gZ29pbmcgdG8ga2VlcCB3b3JraW5nLiAKVGhhdCB3aHkgaGF2aW5nIHZhbHVlcyAoYmVpbmcgYSBtYW4gb2YgdmFsdWUpIGlzIHNvIGltcG9ydGFudC4gWW91IGFyZSBzZXR0aW5nIHVwIHdoYXQgeW91ciB3aW4gY29uZGl0aW9ucyBhcmUsIG5vdCB3aGF0IHRoZSBoZWFyZCBpcyBkb2luZyBmb3Igc2F0aXNmYWN0aW9uLiAKVW5mb3J0dW5hdGVseSwgdGhlcmUgbm8gcG9pbnQgaW4gZmlnaHRpbmcgdGhpcyBjdXJyZW50LiBUaGVpciBjdWx0dXJlIGlzIGRpZmZlcmVudCwgYW5kIHNvbWV0aW1lcywgY29tcGxldGVseSBpbmNvbXBhdGlibGUgd2l0aCBvdGhlcnMuIFRoZSBvbmx5IHdheSBJIGV2ZXIgc2VlbiBhIEtvcmVhbiBwZXJzb24gc3RvcCB0aGUgYmVoYXZpb3IgdGhhdCBib3RoZXJzIHdlc3Rlcm4gcGVvcGxlICh0aGF0IHRoZSBLb3JlYW5zIHRoZW1zZWx2ZXMgYXJlIGxhcmdlbHkgdW5hd2FyZSBvZikgaXMgYnkgYmVmcmllbmRpbmcgdGhlbS4gCkphdmFzY3JpcHQgaXMganVzdCBhIGJhZCBjIGJhc2VkIGxhbmd1YWdlLiBJdCBsb29rcyBzaW1pbGFyIGVub3VnaCB0byBjIGZvciBzb21lb25lIHRvIGNvZGUgaW4gaXQgYnV0IGl0IGhhcyBhIGxvdCBvZiB1bmludHVpdGl2ZSBnb3RjaGFzLiBJdCBkb2VzbnQgaGF2ZSBzdHJvbmcgb29wIGNhcGFiaWxpdGllcyBhbmQgaXQgYWxzbyBoYXMgbGVzcyBmdW5jdGlvbmFsIGNhcGFiaWxpdGllcyB0aGFuIGMuIFNvIGl0IGp1c3QgYSBsYW5ndWFnZSB0aGF0IG9ubHkgdGhlcmUgZm9yIGxpdHRsZSBzY3JpcHRzIHRoYXQgcGVvcGxlIGFyZSBtYWtpbmcgYmlnIGFwcHMgb24uCk5vdCBhbGwgaW1hZ2VzIGFyZSBhY3R1YWxseSBmcmVlIHNwZWVjaC4gClBvcnRpb25zIG9mIHRoZSBTZXJ2aWNlIGFuZCBDb250ZW50IG9uIHRoZSBXZWJzaXRlcyBhcmUgc3VibWl0dGVkIGJ5IHlvdSBhbmQgb3RoZXIgdXNlcnMgKCJVc2VyIFByb3ZpZGVkIENvbnRlbnQiKSB0byB3aGljaCB5b3UgbWF5IGNvbnRyaWJ1dGUgYXBwcm9wcmlhdGUgbWF0ZXJpYWwuIApTcG90IG9uLiBNeSB3aWZlIGFuZCBJIGhhdmUgYmVlbiBnb29kIGFib3V0IG1lYWwgcHJlcHBpbmcgb24gd2Vla2VuZHMgYnV0IG9uZSBhcmVhIHdlJ3ZlIGxhY2tlZCBkaXZlcnNpdHkgaXMgaW4gb3VyIGx1bmNoZXMuIFdlIGZpbmQgb3Vyc2VsdmVzIGVhdGluZyBzb21lIGtpbmQgb2YgbHVuY2ggbWVhdCBsdW5jaCBtb3N0IGRheXMgc28gcmVjZW50bHkgd2Ugc3RhcnRlZCBidXlpbmcgY2FucyBvZiBzb3VwIGFuZCBmcm96ZW4gc21hcnQgb25lcy9sZWFuIGN1aXNpbmVzLiAKU1QuIEFVR1VTVElORSwgRmxhLiAgIFN0LiBKb2hucyBDb3VudHkgY29tbWlzc2lvbmVycyBwdWxsZWQgYSBwcm9wb3NhbCBmcm9tIHRoZWlyIFR1ZXNkYXkgYWdlbmRhIG9uIGEgcmVmZXJlbmR1bSBvbiB0aGUgTm92ZW1iZXIgYmFsbG90IGFza2luZyB2b3RlcnMgdG8gYWxsb3cgZ2FtYmxpbmcsIGluY2x1ZGluZyBzbG90IG1hY2hpbmVzLCBhdCBhIGhvdGVsLCByZXN0YXVyYW50IGFuZCBiYXIgcHJvcG9zZWQgZm9yIFN0YXRlIFJvYWQgMjA3LCBqdXN0IG9mZiBJbnRlcnN0YXRlIDk1LgpJIHdpbiBhIGhhbmQgd2l0aCB0aGUgbnV0cyB3aXRob3V0IHNob3dkb3duLCB0aGVuIHdpbiBvbiBhIGJsdWZmIHdpdGhvdXQgc2hvd2Rvd24uIEkgKGhvbGRpbmcgdGhlIGtpbmcgb2YgY2x1YnMgYnV0IG5vIG90aGVyIGNsdWJzKSBmbG9hdGVkIHRoZSBmbG9wIElQLCByYWlzZWQgdGhlIHR1cm4gd2hpY2ggY29tcGxldGVkIGEgY2x1YiBmbHVzaCwgYW5kIGJsYXN0ZWQgdGhlIHJpdmVyIGFuZCBoZSBmb2xkZWQgdGhlIHRlbiBoaWdoIGZsdXNoIGZhY2UgdXAuIEknbSBub3cgcGxheWluZyA2MDAgYW5kIGRvdWJsZSB1cCB3aGVuIHRoZXJlJ3MgYSBwcmVmbG9wIHJhaXNlIGFuZCBJIDNiZXQgdGhlIHBvdCB3aXRoIEFBS0p4eCBhbmQgZ2V0IG9uZSBjYWxsZXIuIApUaGV5IHB1dCB1cCBkZWZlbnNpdmUgZmllbGRzIGFuZCBib3dsZWQgcXVpdGUgZGVmZW5zaXZlbHkuIApEZSB0cmFuc2l0aW9uaW5nIGRvZXNuJ3QgaGF2ZSB0byBiZSB0aGUgZW5kIG9mIHRoZSByb2FkIGZvciBkZXZlbG9waW5nIHlvdXIgZ2VuZGVyIGlkZW50aXR5LiBUaGVyZSBtYXkgYmUgb3RoZXIgd2F5cyB0byBleHByZXNzIHlvdXIgaWRlbnRpdHkgd2l0aG91dCB1bmRlcmdvaW5nIGEgZnVsbCB0cmFuc2l0aW9uLiAKSXQncyBub3Qgc3VycHJpc2luZyB0aGF0IGR1ZSB0byB0aGUgYWR2ZW50IG9mIHRoZSBuZXQsIGFkZGl0aW9uYWxseSB0aGVyZSBhcmUgbW9yZSB3YXlzIGFuZCBjaGFuY2VzIGZvciB0aGVzZSBzY2FtbWVycyB0byB0cmljayBwZW9wbGUgb3V0IG9mIHRoZSBtb25leS4gVGhhdCdzIHdoeSB5b3UgaGF2ZSB0byBjaG9vc2UgIGJldHRpbmcgc2l0ZS4gVGhleSBjYW5ub3QgY2FyZSB0aGF0IHlvdSB3aWxsIGJlIGp1c3QgaW5zaWRlIGl0IHRvIG93biBmdW4gYnV0IGFsdGVybmF0aXZlbHksIHlvdXIgbWlzZXJ5IGFuZCBsb3NzIGlzIHdoYXQgdGhleSdyZSBhZnRlci4gCkV2ZXIgc2luY2UgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBoYXZlIGJlZW4gdGVsZXZpc2VkIGFsbCBvdmVyIHRoZSB3b3JsZCBUZXhhcyBIb2xkJ0VtIGhhcyBiZWNvbWUgbW9yZSBwb3B1bGFyIHRoYW4gZXZlciBiZWZvcmUuIApBbm5lIGZyYW5rbHksIEkgZGlkIG5hemkgdGhhdCBjb21pbmcuIEkgbGl0ZXJhbGx5IGNhbWUgaGVyZSB0byBzYXkgdGhpcyBidXQgYm95LCB0aGF0IGVzY2FsYXRlZCBxdWlja2x5IHNvIHRvIHRoZSB0b3Agd2l0aCB5b3UhIExvc3QgaXQgYXQgaXMgd2h5IHdlIGNhbiBoYXZlIG5pY2UgdGhpbmdzIGFuZCB0aGVuIG15IGZhaXRoIGluIGh1bWFuaXR5IHdhcyByZXN0b3JlZCwgbXkgbWluZCBibG93biwgYW5kIG1hbmx5IHRlYXJzIHdlcmUgc2hlZC4gV2VsbCBzYWlkLiAKSWYgdGhpcyBpcyB5b3VyIGZpcnN0IHN0YXRzIGJvb2ssIEkgcmVjb21tZW5kIHRoaW5raW5nIG9mIHRoaW5ncyBsaWtlIHRoaXMgdW50aWwgeW91IGV2ZW50dWFsbHkgZ2V0IGEgZm9ybWFsIGV4cGxhbmF0aW9uIGZvciByYW5kb20gdmFyaWFibGVzLiBUaGUgdHJpY2sgaXMgdG8gcmVhbGl6ZSB3aGVuIHlvdSB0aGlua2luZyBhYm91dCBmdW5jdGlvbnMgb24gdGhlIHJhbmRvbSB2YXJpYWJsZSwgYW5kIGZ1bmN0aW9ucyBvbiB0aGUgZGF0YS4gQWxzbyBub3RlIGJvb2tzIGFyZSBub3RvcmlvdXNseSBiYWQgYWJvdXQgbWl4aW5nIHVwIGNhcGl0YWxzIGFuZCBsb3dlciBjYXNlcyBmb3IgdGhlIHNha2Ugb2YgYnJldml0eSwgYnV0IGl0IHNob3VsZCBiZSBjbGVhciBpZiB5b3UgdGFsa2luZyBhYm91dCBhc3BlY3RzIG9mIHlvdXIgcmFuZG9tIHZhcmlhYmxlLCBvciBmdW5jdGlvbnMgb24geW91ciBkYXRhLi4gClRoaXMgaXMgYSBkZWZpbml0ZSBmb2xkPyBWIGRvZXMgbm90IGFjdCBvdXQgb2YgbGluZSBtb3N0IG9mIHRoZSB0aW1lIGFuZCB3b3VsZCBvbmx5IHJhaXNlIHByZW1pdW0gQUEvS0suIHR5cGljYWwgdHlwZSB0byBqdXN0IGNhbGwgd2l0aCBBSyBkdWUgdG8gbXkgcmFpc2UuCklmIHlvdSBmb3VuZCB5b3VyIEluZGlhbiBwcmluY2VzcyBpbiBBcnVuYWNoYWwgUHJhZGVzaCB3aXRoIGEgbW9iaWxlIHBsYXRmb3JtIG9mIE5vcnRoZXJuIEluZGlhLCBvciBhIE1hZGh5YSBQcmFkZXNoIHRlbGVwaG9uZSBudW1iZXIgaW4gdGhlIGNlbnRlciwgd29vIGhlciB3aXRoIGFuIGFtYXppbmcgc3RlcCBhcm91bmQuIEkgd2FudCB0byBtYWtlIHRoaXMgcXVpY2sgYW5kIGVhc3kgZm9yIHlvdSBhbmQgc3RvcCB5b3Ugd2FzdGluZyB0aW1lIG9uIHRoZSBsZXNzIHRydXN0d29ydGh5IGJyYW5kcyBvdXQgdGhlcmUgdGhhdCBkbyBub3Qga25vdyBob3cgdG8gdHJlYXQgYSBjdXN0b21lciB3aXRoIHJlc3BlY3QuIEkgcHJlZmVyIHRvIGhhdmUgdGhlIHBob25lIG51bWJlcnMgb2Ygd2hpdGUgd29tZW4gaW5zdGVhZC4uIApIZSBicm9rZSBlYWNoIGFuZCBldmVyeSBydWxlIGZvciBtZSBkdXJpbmcgb3VyIGNvdXJ0c2hpcC4gClRoaXMgd2FzIHRoZSB1bnJlYWwgcGFydC4gSXQgd2FzIGluIHRoZSBwcmUgc21hcnQgcGhvbmUgZGF5cy4gSSByZWFsaXplZCB0aGF0IHRoZXJlIHdhcyBubyB3YXkgSSBjb3VsZCBkZXRlcm1pbmUgd2hhdCBkYXkgaXQgd2FzLiBJIGRpZG4gaGF2ZSB0aGUgaW50ZXJuZXQsIG9yIGNhYmxlIHR2LCBhbmQgSSBkaWRuIGdldCBhIGRhaWx5IHBhcGVyLiBIYWQgSSBzbGVwdCBmcm9tIGVhcmx5IFN1bmRheSBhZnRlcm5vb24gdG8gU3VuZGF5IG5pZ2h0PyBIYWQgSSBzbGVwdCBhbGwgdGhyb3VnaCBTdW5kYXkgbmlnaHQgYW5kIE1vbmRheT8gTG9uZ2VyLCBtYXliZT8gVGhlcmUgd2FzIG5vIHdheSB0byB0ZWxsLgpTdGF0ZSBBbWVuZG1lbnQgTm8uIDMzIGFsbG93aW5nIHZpZGVvIGdhbWJsaW5nIG1hY2hpbmVzIGF0IHJhY2V0cmFja3MgYW5kIGNhc2lub3M6IFlFUy4gCjIpLiBBIG5vcm1hbCBjb250cm9sIG1vdXNlIGV4cGxvcmVzIGJvdGggdGhlIGxpZ2h0IGFuZCB0aGUgZGFyayBjaGFtYmVycyB3aXRoIGEgcHJlZmVyZW5jZSBmb3IgdGhlIGRhcmtlciBvbmUuIApNb2JpbGUgZ2FtaW5nIHJlYWxseSBiZWdhbiBtYWtpbmcgd2F2ZXMgd2l0aCBBcHBsZSdzIGludHJvZHVjdGlvbiBvZiB0aGUgaVBob25lIGJhY2sgaW4gMjAwNywgYW5kIEdvb2dsZSdzIEFuZHJvaWQgaW4gMjAwOC4gCldoaWxlIHlvdSBhcmUgZm9jdXNpbmcgb24gYSByb3VuZCB0YWJsZSwgeW91IG11c3QgYWxzbyB1bmRlcnN0YW5kIHRoYXQgdGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IHNpemVzIGFuZCBkZXNpZ25zIGF2YWlsYWJsZSB0b2RheS4gCllvdSBjYW4gZG8gYW55dGhpbmcgeW91IHdhbnQgaW4gcG9rZXIuIAo2LjEgQXMgcGFydCBvZiB0aGUgcmVnaXN0cmF0aW9uIG9yIGFjY291bnQgY3JlYXRpb24gcHJvY2VzcywgeW91IHdpbGwgY3JlYXRlIGxvZ2luIGNyZWRlbnRpYWxzIGJ5IHNlbGVjdGluZyBhIHBhc3N3b3JkIGFuZCBwcm92aWRpbmcgYW4gZSBtYWlsIGFkZHJlc3MuIENlcnRhaW4gdXNlcnMgbWF5IGhhdmUgcmVnaXN0ZXJlZCB3aXRoIGEgTWVtYmVyIElELiAKU3RhcnQgd2l0aCBzbWFsbCAoOCIpIGZyeWluZyBwYW4gb24sIGxpa2UsIDYgb3IgNy4KQSBETkEgdGVzdCBpcyB1c2VsZXNzIHRvIGRldGVybWluZSB0cmliYWwgY2l0aXplbnNoaXAuIApGb3IgTWFyY2gsIHRoZSBzdG9yZSBvcmRlcmVkIDYwMCBwb3VuZHMgb2YgY3Jhd2Zpc2ggYW5kIGhlbGQgYSBmcmVlIGNyYXdmaXNoIGJvaWwgdGhhdCBhdHRyYWN0ZWQgYXJvdW5kIDEsMDAwIHBlb3BsZS4KU2kgbGEgbWFpbiBkZSBsYSBiYW5xdWUgZXN0IHN1cHJpZXVyZSBvdSBnYWxlICB1bmUgY2FydGUgaGF1dGUgZGFtZSBldCBiYXQgbGEgbWFpbiBkdSBqb3VldXIsIGxlIGNyb3VwaWVyIGNvbnNlcnZlIGxlcyBtaXNlcyBBbnRlIGV0IFBsYXkuClRoZXJlIGFyZSB0d28gaW5ncmVkaWVudHMgaW4gdGhlIHByb2R1Y3QgdGhhdCBzb21lIHVzZXJzIG1heSBiZSBhbGxlcmdpYyB0byAgIG1lbnRob2wsIHdoaWNoIGlzIGEgY29tcG91bmQgZnJvbSBwZXBwZXJtaW50IG9pbCBhbmQgY2FuIHByb2R1Y2UgbWlsZCBhbmVzdGhldGljIGVmZmVjdHMsIGFuZCBjYW1waG9yLCBhbm90aGVyIGNoZW1pY2FsIGNvbXBvdW5kIHRoYXQgY29udGFpbnMgYW50aXNlcHRpYyBwcm9wZXJ0aWVzLiAKWW91IG1pZ2h0IG5vdCB3YW50IChvciBoYXZlIHJvb20gZm9yKSBhIGh1Z2UgVFYgYW5kIGNvdWNoIGluIHRoZXJlLCBidXQgeW91IGNvdWxkIGNlcnRhaW5seSBmaXQgYSBiYXIgYW5kIHNvbWUgc3Rvb2xzIGludG8gYSBjb3JuZXIgZm9yIHdoZW4geW91IG5lZWQgYSBicmVhayBmcm9tIHRpbmtlcmluZyB3aXRoIHlvdXIgaG9nLiBJZiB0aGVyZSdzIGEgcmVhc29uIHdoeSB5b3UgY2FuJ3QgZGVjayBvdXQgeW91ciBnYXJhZ2UsIHlvdSBjYW4gc3RpbGwgd29yayB0aGUgYmlrZXIgbG9vayBpbnRvIHlvdXIgbWFuIGNhdmUgaW4gdGhlIGJhc2VtZW50IG9yIHNwYXJlIHJvb20uIApZb3UgZWl0aGVyIGdvaW5nIHRvIGNoYW5nZSwgb3Igd2UgYWxsIGdvaW5nIHRvIGRpZS4gQW5kIHRoZSBwZW9wbGUgbGlrZSBtZSBvdXQgdGhlcmUga25vdyB0aGF0IE9VUiBsaXZlcyBhcmUgYXQgc3Rha2UgdG9vLCBhbmQgdGhhdCB3ZSBkb24gaGF2ZSBtdWNoIHRpbWUgdG8gYWN0LiBXZSBoYXZlIG5vdGhpbmcgdG8gbG9zZS4gClRoZSByZWFsIHRydXRoIGlzIHRoYXQgd2hlbiB0aGUgMkEgd2FzIHdyaXR0ZW4sIDgwJSBvZiB0aGlzIGNvdW50cnkgd2FzIHdpbGRlcm5lc3MuIEFuZCB0aGUgIm1pbGl0aWEiIGNsYXVzZSB3YXMgZGVzaWduZWQgc28gdGhhdCBzbWFsbCBmaWdodGluZyBmb3JjZXMgY291bGQgYmUgbXVzdGVyZWQgaW4gc3BhcnNlbHkgcG9wdWxhdGVkIHRlcnJpdG9yaWVzLgpIdXJyaWNhbmUgS2F0cmluYSBIaXN0b3J5IGFuZCBFZmZlY3RzIFRoZSBkZXZhc3RhdGluZyBlZmZlY3RzIG9mIEh1cnJpY2FuZSBLYXRyaW5hIHRlbXBvcmFyaWx5IHdpcGVkIG1vc3Qgb2YgQmlsb3hpIGF3YXkgaW4gQXVndXN0IDIwMDUuIAoiTXkgdGVhY2hlciBNciBDbGlwc2hhbSBwbGF5ZWQgYmFzcyBhbmQgdGhlbiBtYXRlcyBvZiBtaW5lIGZyb20gQmF0aHVyc3QgSGlnaCBwbGF5ZWQgZ3VpdGFyIGFuZCBkcnVtcywiIGhlIHNhaWQuIFdoaWxlIFRvbSBzYWlkIHRoZSBhc3Nlc3NvcnMgd2VyZSAicG9rZXIgZmFjZWQiIGR1cmluZyBoaXMgcGVyZm9ybWFuY2UsIGhlIHRob3VnaHQgaGUgaGFkIGRvbmUgYWxsIHJpZ2h0LiAKQWxsIHRoZSBwZW9wbGUgYXJvdW5kIG1lIGluIGxpbmUgd2VyZSBzbyBzdXBwb3J0aXZlLCBhbnN3ZXJpbmcgbXkgcXVlc3Rpb25zIGFuZCBnaXZpbmcgbWUgcGVwIHRhbGtzLiBFdmVyeSBjZWxsIGluIG15IGJvZHkgc2FpZCAiYm9sdCBib2x0IGJvbHQgZ2V0IG91dCB5b3UgZ29ubmEgZGllIiBhcyB0aGV5IHN0cmFwcGVkIG1lIGluIG15IHNlYXQuIApUaGF0IGhhcHBlbmVkIGR1cmluZyB0aGUgdGltZSBCZWxnaXVtIHdhcyBhICJlbmxpZ2h0ZW5lZCBwb3N0IFdXMiIgbmF0aW9uLlBpbmVsb2tvICA0IHBvaW50cyAgc3VibWl0dGVkIDYgbW9udGhzIGFnb1doYXQgeW91IHNheWluZyBpcyBiYXNzaWNhbGx5ICJieSB0aGUgdGltZSBvZiBhbm5leGF0aW9uIHRoZSBleHRyZW1lIGJydXRhbCB0cmVhdG1lbnQgYWxyZWFkeSBlbmRlZCIgeW91IGFyZW4gc2hvd2luZyBzb21lIGV4YW1wbGVzIG9mIGhvdyBpdCB3YXMgc3RpbGwgdGVycmlibGUuVGhlIHByb2JsZW0gaGVyZSBpcyB0aGF0IHlvdSBjb21wYXJpbmcgYSBiYWQgc2l0dWF0aW9uKGNvbG9uaWFsaXNtKSB0byBzb21lIGlkZWFsaXplZCBmaWN0aW9uYWwgdmVyc2lvbiBvZiBob3cgdGhpbmdzIHNob3VsZCBiZSBpbiBhIHBlcmZlY3Qgd29ybGQuSSBjb21wYXJpbmcgaXQgdG8gd2hhdCBhY3R1YWxseSBoYXBwZW5lZCBhZnRlciBpbmRlcGVuZGVuY2UuVGhleSB3YW50ZWQgaW5kZXBlbmRlbmNlIGJlY2F1c2UgdGhleSB3YW50ZWQgdG8gbWFrZSB0aGVpciBvd24gZGVjaXNpb25zIGFib3V0IHRoZWlyIG93biBmdXR1cmUuIApSb2Nrc2F1Y2UgdQpJbiB0aGUgY2FzZSBvZiBhbGwgb3RoZXIgcGxheWVycyBmb2xkaW5nLCB0aGUgaGFuZCBkb2VzIG5vdCBoYXZlIHRvIGJlIGV4cG9zZWQgYXQgYWxsLiAKU29ycnksIGJ1dCBub3Qgc28gc3VyZSB5b3VyIGp1c3Qgbm90IG9ic2Vzc2VkIHdpdGggaGUgZ2lsZGVkIGFnZS4gClRoaXMgb3BlbiBhaXIgc3F1YXJlIGlzIHRoZSBoZWFydCBhbmQgc291bCBvZiB0aGUgaXNsYW5kIHZpbGxhZ2Ugc2V0dGluZywgZmVhdHVyaW5nIGEgbnVtYmVyIG9mIGRpbmluZyB2ZW51ZXMgaW5jbHVkaW5nIGEgVGF2ZXJuYSwgYW4gRW5vdGVjYSwgYSBQYXN0aWNjZXJpYSwgYW4gQW50aXBhc3RpIEJhciBhbmQgYSBDaWdhciBSb29tLiBBbHNvIGxvY2F0ZWQgb24gdGhlIGlzbGFuZCBhd2F5IGZyb20gdGhlIHZpYnJhbnQgYnVzdGxlIG9mIHRoZSBQaWF6emEgaXMgdGhlIENsaWZmIFBvb2wgYW5kIEJhci4gCkFuZCBlbHNld2hlcmUsIGdpdmVuIHRoZSB0cmVtZW5kb3VzIGdyb3d0aCBpbiB0aGUgcG9wdWxhcml0eSBvZiBhbHRlcm5hdGl2ZSBtZWRpY2luZS4gV29ybGQgbWFya2V0IGZvciBUQ00gaXMgZXN0aW1hdGVkIGF0IG92ZXIgJDIzIGJpbGxpb24sIHdpdGggbW9zdCBvZiB0aGUgZ3Jvd3RoIGNvbWluZyBmcm9tIEV1cm9wZSBhbmQgdGhlIFVTQSwgdGhlIHJlc2VhcmNoZXJzIG5vdGUuIFRoYXQgaW5jcmVhc2VkIHRvIDYyJSB3aGVuIHVzZSBvZiBtZWdhdml0YW1pbnMgYW5kIHByYXllciAoc3BlY2lmaWNhbGx5IGZvciBoZWFsdGggcmVhc29ucykgd2VyZSBhZGRlZCB0byB0aGUgZGVmaW5pdGlvbiBvZiBhbHRlcm5hdGl2ZSBtZWRpY2luZS4gCiJUaGUgc3RydWN0dXJlIGlzIHNvIGdvb2QuIApUaGFua3MgZm9yIHRoZSByZWZlcmVuY2UgcG9pbnQgYXJvdW5kIGdyb2Nlcmllcy4gCkFjdHVhbGx5LCB0aGVzZSBtYXJrcyBkb24gdmlldyBieSBuYWtlZCBleWVzIHNvIHRoZXJlZm9yZSBubyBvbmUgY2FuIHZpZXcgdGhlc2UgbWFya3MgYXMgeW91IGNhbiBlYXNpbHkgcGxheSBhbnkgZ2FtZSBzbW9vdGhseS4gVGhlIFNweSBQbGF5aW5nIENhcmRzIGluIEluZGlhIGlzIGEgdXNlciBmcmllbmRseSBkZXZpY2UgdmVyeSBzbWFsbCBpbiBzaXplIGFzIHNpbXBseSBvcGVyYXRlcyBhbmQgY2FycmllZCBvdXQgYXQgYW55d2hlcmUuIFVzZXIgY2FuIGV4ZWN1dGUgdGhlc2UgY2hlYXRpbmcgcGxheWluZyBjYXJkcyB3aGlsZSBnYW1ibGluZyBhcyB5b3UgZG9uIGhhdmUgbmVlZCBvZiB0cmlja3MgYW5kIHRlY2huaXF1ZXMuLiAKQSBib2FyZCBjZXJ0aWZpZWQgb3J0aG9kb250aXN0IGlzIHRoZSBvbmx5IG9uZSB3aG8gc2hvdWxkIGJlIGNvcnJlY3RpbmcgeW91ciBiaXRlLiBUaGF0IHNhaWQsIG1hbnkgb3J0aG9kb250aXN0cyB3aWxsIGRvIGEgZnJlZSBjb25zdWx0YXRpb24sIHNvIGdldCBhIGNvdXBsZSBvZiBjb25zdWx0YXRpb25zIGFuZCBjaG9vc2UgdGhlIG9uZSB5b3UgZmVlbCBtb3N0IGNvbWZvcnRhYmxlIHdpdGguLiAKTXIgRHVuY2FuIHNhaWQgdGhlIGNsdWIgc3RhcnRlZCB0byBhcHByb2FjaCBvdGhlciB2ZW51ZXMgYWxvbmcgdGhlIE11cnJheSBSaXZlciBhcyB3ZWxsIGFzIHBva2VyIG1hY2hpbmUgY29tcGFuaWVzLiBIZSBzYWlkIG9uZSBidXNpbmVzcywgSW50ZXJuYXRpb25hbCBHYW1lIFRlY2hub2xvZ3ksIGhhZCBwcm92aWRlZCBhIG5ldyBwb2tlciBtYWNoaW5lIHdvcnRoICQyNSwwMDAgd2hpY2ggd2FzIGJvdWdodCBieSBhbm90aGVyIGNsdWIgYW5kYWRkZWQgdG8gdGhlIHBvdC4gIlRpbSBrbmV3IGFsbCB0aGUgcGVvcGxlIGluIHRoZSBjbHVicyBhbG9uZyB0aGUgTXVycmF5IFJpdmVyIHJpZ2h0IHRocm91Z2ggdG8gTlNXLCIgaGUgc2FpZC4gCkhvcGUgbG9va3MgZm9yd2FyZCwgYnV0IGl0IGRyYXdzIGl0cyBlbmVyZ2llcyBmcm9tIHRoZSBwYXN0LCBmcm9tIGtub3dpbmcgaGlzdG9yaWVzLCBpbmNsdWRpbmcgb3VyIHZpY3RvcmllcywgYW5kIHRoZWlyIGNvbXBsZXhpdGllcyBhbmQgaW1wZXJmZWN0aW9ucy4gSXQgbWVhbnMgbm90IGJlaW5nIHRoZSBwZXJmZWN0IHRoYXQgaXMgdGhlIGVuZW15IG9mIHRoZSBnb29kLCBub3Qgc25hdGNoaW5nIGRlZmVhdCBmcm9tIHRoZSBqYXdzIG9mIHZpY3RvcnksIG5vdCBhc3N1bWluZyB5b3Uga25vdyB3aGF0IHdpbGwgaGFwcGVuIHdoZW4gdGhlIGZ1dHVyZSBpcyB1bndyaXR0ZW4sIGFuZCBwYXJ0IG9mIHdoYXQgaGFwcGVucyBpcyB1cCB0byB1cy4uIAoxMi4gQWZ0ZXIgdHdvIHBhaWQgYmlrZSBmaXRzIGRlY2lkZWQgdG8gbGVhcm4gaG93IHRvIGZpdCBteXNlbGYgKHRvbnMgb24gZ3JlYXQgaW5mbyBvbiBsaW5lIGFuZCBrbm93aW5nIGhvdyB0byBkbyBpdCB5b3Vyc2VsZiBpcyBpbnZhbHVhYmxlIGZvciBmaW5lIHR1bmluZykuCkhhdmUgdG8gY29tYmluZSBoaWdoIHRlY2ggd2l0aCBoaWdoIHRvdWNoLiBJIGRvbiB0aGluayB0aGUgaG9zcGl0YWxpdHkgYXNwZWN0IHdpbGwgZXZlciBnbyBhd2F5LCBubyBtYXR0ZXIgaG93IG1hbnkgcm9ib3RzIGFyZSB1c2VkLiAKVGhpcyBjYW4gbWFrZSB5b3VyIHdpZmUgZmVlbCBzZXh5IGFuZCBzcGVjaWFsLiAKIkdyZXkiIGhhcyBhbiBFIGluIGl0LCBsaWtlIFNURUVMLiAKSSB3YXMgY29vbCB3aXRoIHRoZXNlIGd1eXMgKHdlIHdlbnQgdG8gZWxlbWVudGFyeSBzY2hvb2wgdG9nZXRoZXIpIGFuZCB0aGUgbmV3cyBsZWdpdGltYXRlbHkgc2hvb2sgbWUuIEkgZnVja2luZyBsb3N0IGl0IG9uIHRoZXNlIGJpdGNoZXMuIApXaGF0IEkgZG8gcmVtZW1iZXIgaXMgdGhhdCB0aGUgbXVzY2xlcyBpbiB0aGUgbG93ZXIgYmFjayBvZiB0aGUgd29tYW4gaW4gc2FpZCBzY3VscHR1cmUgd2VyZSBwZXJmZWN0ICAgc3Ryb25nIGFuZCBzb2Z0IGF0IHRoZSBzYW1lIHRpbWUsIGFuZCB2ZXJ5IHNlbnN1YWwuIApJbiBhIHBlcmZlY3Qgd29ybGQsIGNsZWFuaW5nIGRvd24gdGhlIGVxdWlwbWVudCB3b3VsZCBiZSBlbm91Z2ggYnV0IEkgZG9uIHRoaW5rIGl0IGlzLiAKSW5zdGVhZCBvZiBsaWZ0aW5nIHRoZSBrZXR0bGViZWxsIGluIGZyb250IG9mIHRoZSBib2R5IHVzaW5nIHRoZSBhcm1zLCB0aGUgYXJtcyBsb29zZWx5IGhvbGQgaXQgYW5kIHRoZSBleHBsb3NpdmVuZXNzIG9mIHRoZSBoaXBzIHNuYXBwaW5nIGludG8gZXh0ZW5zaW9uIHByb3BlbCBpdCBmb3J3YXJkLiAKV2hhdGV2ZXIgdGhlIGJpbGwgaXMgSSB3aWxsIGZpbmQgYSB3YXkgdG8gcGF5IGl0LiAKVHdlbnR5IHNldmVuIHBhcGVycyB3ZXJlIGluY2x1ZGVkIGluIHRoaXMgcmV2aWV3OiAxMCBSQ1RzIChhcm91bmQgMjQwIHBhdGllbnRzKTsgYW5kIDE3IHN0dWRpZXMgbGFiZWxsZWQgYXMgY2FzZSBzZXJpZXMgKGFyb3VuZCAyMDAgcGF0aWVudHMpIC4gVGhlIGxhdHRlciBncm91cCBhcHBlYXJlZCBmcm9tIHRoZSBkYXRhIHByZXNlbnRlZCB0byBoYXZlIGJlZW4gd2l0aGluIHBhcnRpY2lwYW50IGNvbnRyb2xsZWQgc3R1ZGllcywgcmF0aGVyIHRoYW4gY2FzZSBzZXJpZXMuIFRlbiBvZiB0aGVzZSBzdHVkaWVzIHVzZWQgcmFuZG9taXNhdGlvbiB0byBkZXRlcm1pbmUgd2hpY2ggbGltYiByZWNlaXZlZCB0aGUgaW50ZXJ2ZW50aW9uLiBNZXRob2RvbG9naWNhbCBxdWFsaXR5IGluIHRoZSBSQ1RzIHdhcyByZXBvcnRlZCBhcyBtb2RlcmF0ZSAoRGVscGhpIHNjb3JlcyByYW5naW5nIGZyb20gMiB0byA2KS4gVGhlIFJDVHMgd2VyZSBjb25zaWRlcmVkIHRvIG9mZmVyIG1vZGVyYXRlIHN1cHBvcnQgZm9yIHVzaW5nIG1hc3NhZ2UgdGhlcmFweSB0byBmYWNpbGl0YXRlIHJlY292ZXJ5IGZyb20gcmVwZXRpdGl2ZSBtdXNjdWxhciBjb250cmFjdGlvbnMuIFRoZSBzZWFyY2hlcyBhcHBlYXJlZCBhcHByb3ByaWF0ZSwgYnV0IGdyZXkgbGl0ZXJhdHVyZSB3YXMgbm90IHNlYXJjaGVkLCByZXN1bHRpbmcgaW4gcG9zc2libGUgcHVibGljYXRpb24gYmlhcy4gTm8gbGFuZ3VhZ2UgcmVzdHJpY3Rpb25zIHdlcmUgbWVudGlvbmVkLCBzdWdnZXN0aW5nIHRoYXQgbGFuZ3VhZ2UgYmlhcyBtYXkgaGF2ZSBiZWVuIG1pbmltaXNlZC4gVmFsaWRpdHkgYXNzZXNzbWVudCB3YXMgY2FycmllZCBvdXQgdXNpbmcgcmVjb2duaXNlZCBjcml0ZXJpYSBmb3IgdGhlIFJDVHMsIGJ1dCBub3QgZm9yIHRoZSBvdGhlciBzdHVkeSB0eXBlcy4gUXVhbGl0eSBhc3Nlc3NtZW50IHdhcyBjYXJyaWVkIG91dCBieSBtb3JlIHRoYW4gb25lIHJldmlld2VyLiBEdXBsaWNhdGUgc2VsZWN0aW9uIGFuZCBkYXRhIGV4dHJhY3Rpb24gd291bGQgaGF2ZSBiZWVuIGFkdmlzYWJsZSB0byByZWR1Y2UgdGhlIGNoYW5jZXMgb2YgcmV2aWV3ZXIgZXJyb3IgYW5kL29yIGJpYXMuIFRoZSBkaXZpc2lvbiBpbnRvIFJDVHMgYW5kIGNhc2UgY29udHJvbCBpbiBwYXJ0aWN1bGFyIG1heSBoYXZlIHJlc3VsdGVkIGluIHJlbGlhYmxlIGRhdGEgcHJvZHVjZWQgYnkgYSByYW5kb21pc2VkIHdpdGhpbiBzdWJqZWN0cyBkZXNpZ24gYmVpbmcgcmVsZWdhdGVkIHRvIGNhc2UgY29udHJvbCBzdGF0dXMuIE51bWJlcnMgb2YgcGF0aWVudHMgd2VyZSByZXBvcnRlZCBpbmNvbnNpc3RlbnRseSBiZXR3ZWVuIHRoZSB0YWJsZXMgYW5kIHRleHQuIE92ZXJhbGwgdGhpcyB3YXMgYSBwb29ybHkgcmVwb3J0ZWQgcmV2aWV3IHdpdGggYSBudW1iZXIgb2Ygc2lnbmlmaWNhbnQgZmxhd3MuIFRoZSBjb25jbHVzaW9ucyBzaG91bGQgbm90IGJlIHJlZ2FyZGVkIGFzIHJlbGlhYmxlLgpJIHdlbnQgYmFjayBhbmQgcGxheWVkIERBMiBhbmQgVEhFTiBEQUkgYW5kIHJlYWxpemVkIEkgbG92ZWQgaGltLiAKVGV4YXMgSG9sZCBFbSBQb2tlciBFYXN5IEd1aWRlCkRlZmxhdGVkLiAKSW4gdGhlIG9yaWdpbmFsIG1vdmllLCB0aGUgdmVyeSBmaXJzdCBTdGFyIFdhcnMsIHRoZXJlIGFyZSB0aGVtZXMgb2YgZnJpZW5kc2hpcCwgaGVyb2lzbSwgZXRjLiAKVGhlIGF3YXJkIGlzIGdpdmVuIGV2ZXJ5IHllYXIgdG8gYSBwb2xpdGljaWFuLCBwdWJsaWMgc2VydmFudCBvciBnb3Zlcm5tZW50IHRoYXQgZWxpbWluYXRlcyB1bm5lY2Vzc2FyeSBidXJlYXVjcmFjeSBzdGFuZGluZyBpbiB0aGUgd2F5IG9mIHNtYWxsIGJ1c2luZXNzZXMuCkkganVzdCB3YXRjaGVkIGEgVEVEIHZpZGVvIHRoYXQgeW91IG1pZ2h0IHdhbnQgdG8gd2F0Y2guIAoiSSBjYW4ndCBzdGFuZCBpdCB3aGVuIGd1eXMgY2FsbCB1cyB0aGF0ICAgaXQncyBsaWtlIHdlJ3JlIGEgcGllY2Ugb2YgbWVhdCBhbmQgaGF2ZSBubyBpbnRlbGxpZ2VuY2UsIiBzdGF0ZXMgdGhlIGZvcm1lciBWSi4gIidCYWJ5JyBpcyBzdGlsbCBva2F5LCBidXQgJ2JhYmUnIGlzIGEgY29tcGxldGUgbm8gbm8gZm9yIHVzIHdvbWFuLiBJdCdzIGFsc28gdGhlIG5hbWUgb2YgYSBwaWdsZXQgaW4gYSBtb3ZpZSwgc28gcGxlYXNlIGd1eXMgcmVmcmFpbiBmcm9tIHVzaW5nIHRoYXQgY29uZGVzY2VuZGluZywgZGVyb2dhdG9yeSB0ZXJtISBBbmQgZm9yIGFsbCB0aG9zZSB3aG8gZGlzYWdyZWUsICd0YWtlIGEgaGlrZSchIiBzaGUgY29uY2x1ZGVzLgpBcm91bmQgdGhlIGNvcm5lciBpcyBhbm90aGVyIGJyYW5jaCBvZiB0aGUgcmVzdGF1cmFudCBJIHdvcmsgZm9yLiAKUm9TIGNhbXBhaWduIGhhZCBhIHdheSBiZXR0ZXIgc3RvcnkuIAoiVGhlICdzYXdidWNrJyB0aGVvcnkgaGFzIHRoZSBhZHZhbnRhZ2Ugb2YgYSBjbGVhcmVyIGxpbmUgb2YgcGxhdXNpYmxlIHRyYW5zbWlzc2lvbiwgYnV0IGV2ZW4gd2l0aCB0aGF0IHRoZW9yeSwgdGhlcmUgYXJlIHJlbGF0aXZlbHkgZmV3IGV4YW1wbGVzIHVudGlsIGxhdGUgaW4gdGhpcyBzYW1lIHBlcmlvZCAoYXMgYSBjYXN1YWwgc2xhbmcgdGVybSwgaXQgbGlrZWx5IGhhZCBhIGxvbmcgZ2VzdGF0aW9uIGluIGNvbW1vbiBwYXJsYW5jZSBiZWZvcmUgaXQgYmVnYW4gdG8gc2VlIHRoZSBsaWdodCBvZiBwcmludCksIlBvdHRlciBleHBsYWluZWQuIApNeSBnbyB0byB0b2JhY2NvcyBhcmUgQmVhY29uIGV4dHJhLCBJcmlzaCBGbGFrZSBhbmQgU2l4cGVuY2UuIEJ1dCBJIHN0aWxsIGxvdmUgdGhlIGVhc2Ugb2YgYW4gYWxsIEJsYWNrIENhdmVuZGlzaCBhcm9tYXRpYy4gSSBoYXZlIGJ1bGsgamFycyBvZiBMYW5lIERhcmsgUmVkLCBNY0NsZWxsYW5kIFZCQywgR0ggRXhjbHVzaXZlIEJsYWNrIENoZXJyeSBhbmQgQyBCbGFjayBDaGVycnkuIApNaW5lIGFyZSBlc3BlY2lhbGx5IGZ1Y2tlZCBjYXVzZSBJIGhhZCBhIGNoYWxsZW5nZSB3aXRoIHNvbWUgZnJpZW5kcyBpbiBkaXNjb3JkIHRvIGZpbmQgdGhlIG1vc3Qgb2JzY3VyZSBhbmQgd2VpcmQgc2hpdCBvbiBZb3V0dWJlIG9uY2UsIGFuZCBJIHNwZW50IGEgbG90IG9mIHRpbWUgaW4gci9kZWVwaW50b3lvdXR1YmUsIHNvIEkgZ2V0IHJlY29tbWVuZGVkIGFsbCBtYW5uZXIgb2Ygbm9uc2Vuc2ljYWwgZ2FyYmFnZS4gCkEgbWVzc2FnZSB0byBhbGwgbmV3IGNpdGl6ZW5zOiBXZSBzaW5jZXJlbHkgaG9wZSB5b3UgaW50ZWdyYXRlIGludG8gb3VyIGxvY2FsIGN1bHR1cmUgYW5kIG1ha2UgYXR0ZW1wdHMgdG8gYXNzaW1pbGF0ZSBhbmQgZW1icmFjZS8gYXBwcmVjaWF0ZSB0aGUgdmFyaW91cyBtdWx0aSBldGhuaWMgY3VsdHVyZXMgd2UgaGFkIGJ1aWx0IHVwIHNvIHBhaW5zdGFraW5nbHkgb3ZlciB0aGUgZGVjYWRlcy4gQmVjYXVzZSBhdCB0aGUgc2FtZSB0aW1lLCB3ZSBhcmUgZGVmaW5pdGVseSBvcGVuIHRvIHRha2luZyB0aGUgYmVzdCB0aGF0IHlvdSBoYXZlIHRvIG9mZmVyLCBhbmQgdG8gY3JlYXRlIG5ldyBhbmQgYmVhdXRpZnVsIFNpbmdhcG9yZWFuIHRoaW5ncy4uIApQbHVtYmluZyBpcyBhIG11Y2ggbW9yZSBjZXJlYnJhbCB0cmFkZSB0aGFuIHBlb3BsZSB0aGluayAoSSBhIHNlcnZpY2UgcGx1bWJlciB2cy4gTmV3IGNvbnN0cnVjdGlvbikgYmVjYXVzZSB3aGVuIHlvdSBkaWFnbm9zaW5nIGEgcHJvYmxlbSB5b3UgZ2V0IHRvIHBsYXkgZGV0ZWN0aXZlICJ3aGF0IGlzIHRoZSBjdXN0b21lciBzYXlpbmcsIHdoYXQgYW0gSSBzZWVpbmcsIGhvdyB3YXMgdGhpcyBwbHVtYmVkIChvZnRlbiB3aGF0IHlvdSB0cnlpbmcgdG8gZGlhZ25vc2UgeW91IGNhbiBkaXJlY3RseSBzZWUpIiBvbiB0aGUgdG91Z2ggZGlhZ25vc2lzIGpvYnMgY3VzdG9tZXJzIHRoaW5rIHlvdSBoYXZlIG1hZ2ljIHBvd2VycyB3aGVuIHlvdSBjcmFjayBpdCBhbmQgZXhwbGFpbiB3aGF0IGhhcHBlbmVkIGFuZCB3aHkgYW5kIHdoYXQgdGhlIGZpeCBpcy4uIApBdCBsZWFzdCBtb3N0IHN0YWRpdW1zIHRoZXNlIGRheXMgYWxsb3cgeW91IHRvIGJyaW5nIGluIGZvb2QuR3JleV9Nb24gIDUsMDY3IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ29PbmUgb3RoZXIgYmFkIG1vbWVudCB3YXMgd2hlbiBJIGhhZCBteSBnaXJsZnJpZW5kIGZyb20gc2Nob29sIGFyb3VuZCBhIGZldyB5ZWFycyBsYXRlci4gRm9yIGZ1cnRoZXIgY29udGV4dDsgc2hlIGlzIHBldHJpZmllZCBvZiBzcGlkZXJzLiAKVGhleSBzd2VwdCBBdGxhbnRhIGluIHRoZSBmaXJzdCBOTCBDaGFtcGlvbnNoaXAgU2VyaWVzIHRvIHJlYWNoIHRoZSBXb3JsZCBTZXJpZXMgYWdhaW5zdCBoaWdobHkgZmF2b3VyZWQgQmFsdGltb3JlLCB3aGljaCBoYWQgZ29uZSAxMDkgNTMuIFNlYXZlciBsb3N0IHRoZSBvcGVuZXIgNCAxIGluIGEgbWF0Y2h1cCB3aXRoIE1pa2UgQ3VlbGxhciwgdGhlbiBwaXRjaGVkIGEgMTAgaW5uaW5nIHNpeCBoaXR0ZXIgdG8gd2luIEdhbWUgNCwgYW5kIHRoZSBNZXRzIHdvbiB0aGUgdGl0bGUgdGhlIGZvbGxvd2luZyBhZnRlcm5vb24uLiAKQnV0IEkgaGFkIG5vdGhpbmcgdG8gdGVsbC4gCkkgaG9wZSBJIGdldHRpbmcgdGhpcyByaWdodC4gQ2FuIHNvbWVvbmUgcGxlYXNlIGV4cGxhaW4/Ck5vIHlvdSdyZSBhbiBhcm1jaGFpciBsYXd5ZXIgcHJldGVuZGluZyB0byBiZSBhIHJlYWwgb25lLiBZb3UgaGF2ZSB6ZXJvIGV4cGVyaWVuY2UgbWFuYWdpbmcgdGhlIGxhdyB5b3Vyc2VsZi4gWW91J3JlIGp1c3QgYSBnb3BoZXIgdG8gcGVvcGxlIHdobyBhcmUgYWN0dWFsbHkgcXVhbGlmaWVkLiBEbyB5b3UgdGhpbmsgdGhlIGxhdyBpcyBqdXN0IGFzIGhvbWluZW0/IEkgY2FuIHByb21pc2UgeW91IHRoYXQgZG9lc24ndCBob2xkIHVwIGluIGNvdXJ0LgpIZSBpcyBhc2tpbmcgcGF0cm9sIG9mZmljZXJzIHRvIHdlYXIgbmF2eSBibHVlIGhhdHMgd2l0aCB0aGUgbGV0dGVycyAiVFBBIiB3cml0dGVuIG9uIHRoZSBmcm9udCBhbmQgdGhlIHdlYnNpdGUgdGhlIHVuaW9uIGhhcyBzZXQgdXAgdG8gYWlyIHRoZWlyIGdyaWV2YW5jZXMgd3JpdHRlbiBvbiB0aGUgYmFjay4KUG9zdGVkIGJ5IGxhbG9jaGV6aWEgdG8gU3BvcnRzLCBIb2JiaWVzLCBSZWNyZWF0aW9uICgxNCBhbnN3ZXJzIHRvdGFsKSA2IHVzZXJzIG1hcmtlZCB0aGlzIGFzIGEgZmF2b3JpdGUKV2lyZWxlc3MgbmV0d29ya3Mgd2lsbCBhY3QgYXMgdGhlIHByaW1hcnkgYWNjZXNzIHBvaW50IGZvciBtb3N0IGRldmljZXMuIApQb2ludCAyLiBubyBvYnZpb3VzbHkgbm90LiBidXQgSSB3b3VsZCBleHBlY3QgYXQgbGVhc3Qgc29tZSBlbGV2YXRlZCB3YXJtaW5nIHRyZW5kIGNvbXBhcmVkIHRvIGFueSBvdGhlciAzMCB5ZWFyIHNsaWNlLCBjb25zaWRlcmluZyBob3cgbXVjaCBDbzIgd2UgYXJlIG5vdyBwdXR0aW5nIG91dC4gSXRzIGxpdGVyYWxseSAxMHggbW9yZSB0aGVuIHRoYXQgdGltZSBmcmFtZS4gYW5kIGxpZSBzdHJhaWdodCB0byBvdXIgZmFjZXMgYW5kIHRlbGwgdXMgdGhhdCBpdHMgbm90IHBvc3NpYmxlIHRoYXQgbmF0dXJhbCB2YXJpYWJpbGl0eSBjYW4gZG8gdGhhdC4KTm8gd2UvdGhleSBkb24gU3BlZWNoIGlzIHJlcHJlc3NlZCBhbmQgdGhleSBoYXZlIGNyYXp5IG5hdGlvbmFsaXN0IHJpZ2h0IHdpbmdlcnMgYW55d2F5LiBUaGV5IGp1c3QgZG9uIGhhdmUgYXMgbWFueSBzaG9vdGluZ3MgYmVjYXVzZSB0aGV5IGRvbiBoYXZlIGEgcmlnaHQgdG8gb3duIGd1bnMuClRoZSBmaXJzdCAzIHN0YWdlcyBvZiB0aGUgR2lybyB3ZXJlIGluIElyZWxhbmQuIFRoZSBUb3VyIGRlIEZyYW5jZSAyMDE0IGFsc28gc3RhcnRzIGluIHRoZSBVSyB0aGlzIHllYXIsIHdpdGggWW9ya3NoaXJlIGhvc3RpbmcgdGhlIHN0YXJ0LiBUaGUgR2lybyAyMDE0IHN0YXJ0IHdhcyBhdCBuaWdodCB3aXRoIGEgMjcga20gdGVhbSB0aW1lIHRyaWFsIHRocm91Z2ggdGhlIHN0cmVldHMgb2YgQmVsZmFzdC4gQWZ0ZXIgYSB0aGlyZCBzdGFnZSBmaW5pc2ggaW4gdGhlIGNlbnRyZSBvZiBEdWJsaW4gdGhlIHJhY2UgbW92ZXMgdG8gSXRhbHkuIFRoZSByb3V0ZSB0aGVuIHdpbmRzIGl0cyB3YXkgYWxvbmcgdGhlIGJlYXV0aWZ1bCBBbWFsZmkgQ29hc3QgYW5kIGFsb25nIHRoZSBJdGFsaWFuIFJpdmllcmEuIFRoZSByb3V0ZSBwYXNzZXMgdGhyb3VnaCB0aGUgY2l0aWVzIG9mIEJvbG9nbmEgYW5kIE1pbGFuLiBTdGFnZSAxNiBhbmQgMjAgd2lsbCBiZSB0aHJvdWdoIHRoZSBJdGFsaWFuIEFscHMuIFRoZSByYWNlIGNvbmNsdWRlcyB3aXRoIGEgZ3J1ZWxpbmcgY2xpbWIgb2YgdGhlIG5vdG9yaW91cyBab25jb2xhbi4gQSBwaWN0dXJlIG9mIG9ubHkgdGhlIFpvbmNvbGFuIGJlbG93LiBJdCByZW1pbmRzIG1lIG9mIG15IGNsaW1iIHRocm91Z2ggdGhlIFN3aXNzIEFscHMgdXAgU3QgR290dGhhcmRzIG9uIG15IGN5Y2xlIGFyb3VuZCB0aGUgZ2xvYmUuCkRlIDE5NjYgIDE5OTYsIGxlcyBhdG9sbHMgZGUgTXVydXJvYSBldCBGYW5nYXRhdWZhIG9udCB0IGxlIHRodHJlIGRlIDE5MyBlc3NhaXMgbnVjbGFpcmVzLCBxdWkgb250IGV1IGRlcyBlZmZldHMgc3VyIGxhIHNhbnQgZXQgbCdlbnZpcm9ubmVtZW50IGRlcyBwb3B1bGF0aW9ucy4KSWRlYWxseSwgRGF2aWQgUm9iZXJ0c29uLCB0aGUgQUFSIHZpY2UgcHJlc2lkZW50IGluIGNoYXJnZSBvZiB0aGUgV2luZHNvciBvcGVyYXRpb24sIHdvdWxkIGxpa2UgdG8gaGF2ZSBhcm91bmQgMzAwIHN0YWZmIHdpdGhpbiB0aGUgbmV4dCB5ZWFyIG9yIHR3by4gMTYwIHNoeSBvZiB0aGF0LCBoZSBzYWlkIFRodXJzZGF5IGZyb20gQ2FsZ2FyeSwgd2hlcmUgaGUgd2FzIGF0dGVuZGluZyBhIGNvbGxlZ2Ugam9iIGZhaXIsIHRyeWluZyB0byBzZWxsIEFsYmVydGFucyBvbiBtb3ZpbmcgdG8gQUFSIGFuZCBXaW5kc29yLiBUcnlpbmcgdG8gbWFrZSBvdXIgcHJlc2VuY2Uga25vd24gdGhyb3VnaG91dCBDYW5hZGEsIGhlIHNhaWQuLiAKV2hpbGUgdGhlcmUgaXMgbWVyaXQgdG8gdGhlIGlkZWEsIGFuZCB0aGVyZSBpcyB2YWx1ZSBpbiBoYXZpbmcgYSBzdHVkZW50L3R1dG9yIHNvY2lhbCBuZXR3b3JrIHdpdGggcG9zc2liaWxpdHkgb2Ygb25saW5lL1NreXBlIG5ldHdvcmtpbmcsIGJ1dCBhZnRlciBzdHVkZW50IGFuZCB0dXRvciBnZXQgaW4gdG91Y2gsIGl0IGNoYWxsZW5naW5nIHRvIGhhdmUgdGhlIHBheW1lbnQgdG8gZ28gdGhyb3VnaCB0aGUgYXBwLiBUaGVyZSBhcmUgY2hhbGxlbmdlcyBpbiBjaGFyZ2luZyBhIG1lbWJlcnNoaXAgdG9vLCBsaWtlIGFueSBtZW1iZXJzaGlwIG1vZGVsLi4gCihCdXQgY2FsbCB1cyBpZiB5b3UgaGF2ZSBhIGNvcHkgb2YgdGhlIDE5ODQgVFYgbW92aWUgc3RhcnJpbmcgSmVmZiBHb2xkYmx1bSBhcyBLb3ZhY3MsICJFcm5pZSBLb3ZhY3M6IEJldHdlZW4gdGhlIExhdWdodGVyIiAgIGV2ZW4gdGhvdWdoIGl0IG9ubHkgZm9jdXNlcyBvbiB0aGUgZGVjaWRlZGx5IHVuZnVubnkgY2hhcHRlciBpbiBoaXMgbGlmZSB3aGVuIGhpcyBleCB3aWZlIGtpZG5hcHBlZCB0aGVpciBjaGlsZHJlbiBhbmQgS292YWNzIHNlYXJjaGVkIHRoZSBjb3VudHJ5IGZvciB0aGVtLikuIApBbnl0aW1lIEkgb3BlbmVkIG15IG1vdXRoIEkgd2FzIGltbWVkaWF0ZWx5IG91dGVkIGFzIG5vdCBiZWxvbmdpbmcuIEkgY291bGQgcGFzcyBzb21ld2hhdCByZWFzb25hYmx5IHdlbGwgaWYgSSB3YXMgaGFuZ2luZyBvdXQgd2l0aCBmYW1pbHkgKHdoaWNoIEkgZGlkIHBsZW50eSkgYnV0IEkgYWx3YXlzIGdyYXZpdGF0ZWQgdG93YXJkcyBleHBhdCBncm91cHMgZm9yIGNvbW11bml0eSB3aGljaCBoYWQgaXRzIG93biBob3N0IG9mIHByb2JsZW1zIChuYW1lbHksIGdyb3NzIGVudGl0bGVkIHdoaXRlIG1lbiB3aG8gd2VyZSBvbmx5IHRoZXJlIHRvIG1ha2UgbW9uZXkgb3IgbWVldCB3b21lbiBvciBib3RoLikuIApKZWFubmUgWWFuZyBpcyBhIHN0eWxpc3QgTW9tb2Egd29ya3Mgd2l0aC4gClZhc3QgbWFqb3JpdHkgb2YgaHVtYW5zIGRvbiBleHBlcmllbmNlIGFueSBsb25nIGxhc3RpbmcgY29uc2VxdWVuY2VzIGZyb20gdHJhbnNpZW50IGluZmVjdGlvbnMuIEJ1dCB0aGVyZSBtYXkgYmUgc3Vic2V0IG9mIHBhdGllbnRzIHdobyBhcmUgZ2VuZXRpY2FsbHkgcHJlZGlzcG9zZWQgdG8gdGhpcyBlZmZlY3QgYnkgbWVjaGFuaXNtcyB3ZSBkb24geWV0IHVuZGVyc3RhbmQgeWV0LiBPdXIgaG9wZSBpcyB0aGF0IHRoaXMgd29yayB3aWxsIG9wZW4gYW5vdGhlciBhdmVudWUgZm9yIGV4cGxvcmluZywgdW5kZXJzdGFuZGluZyBhbmQgdHJlYXRpbmcgdGhlc2UgdmVyeSBjb21wbGV4IHN5bmRyb21lcy4gCllvdSBnZXQgdG8gb3V0IHRoaW5rIHBlb3BsZSBmb3IgYSBsaXZpbmcsIGhvdyBjb29sIGlzIHRoYXQ/IEFuZCB5b3UgY2FuIG5ldmVyICJrbm93IHBva2VyIiBpdCBhbHdheXMgZXZvbHZpbmcgYW5kIGNoYW5naW5nIGFuZCBzbyBjb21wbGV4LCBzbyBmcm9tIGEgc3RyYXRlZ3kgY2hhbGxlbmdlIGFuZ2xlIGl0IGFwcGVhbGVkIHRvIG1lIGluIHRoYXQgc2Vuc2UuLiAKSSBhbSBub3Qgc2F5aW5nIGxlYXZlIHRoZSBzdHVkZW50cyB0byByb3QuIFRoZSBiZXN0IHdheSB0byBpbXByb3ZlIHRoZSBjYWxjdWx1cyBvZiB0aGVzZSByaWRpY3Vsb3VzIGxvYW5zIGlzIHRvIG1ha2Ugc3R1ZGVudCBsb2FuIGRlYnQgc3VzY2VwdGlibGUgdG8gYmFua3J1cGN5IGNsYWltcy4gCk91dHNpZGUgb2YgdGhlIGdpZ2FudGljIHZvbHVtZSBkaXNjcmVwYW5jeSwgQ09TUyBoYXMgbWFkZSBtaXN0YWtlcyBldmVyeSBzdGVwIG9mIHRoZSB3YXkuIEZyb20gYm90Y2hpbmcgcm9sbG91dHMsIHRyYWRpbmcgZ2xpdGNoZXMsIGxvc2luZyBmdW5kcyB0aHJvdWdoIGxhcHNlIHNlY3VyaXR5LCBvciBhd2Z1bCBQUiwgdGhlIGluZnJhc3RydWN0dXJlIGFuZCBtYW5hZ2VtZW50IG9mIENPU1MgcGFsZXMgaW4gY29tcGFyaXNvbiB0byBCaW5hbmNlLgpBbmQgd2hpbGUgQ2hpbmEgd291bGQgbG92ZSB0byBoYXZlIFRhaXdhbiwgaXQgbm90IHdvcnRoIGEgaHVuZHJlZCBtaWxsaW9uIENoaW5lc2UgbGl2ZXMsIHdoaWNoIGlzIHdoYXQgaXQgY29zdHMgdG8gaW52YWRlIGEgbnVjbGVhciBwb3dlci4KSGFtaWx0b24sIGxpa2UgbWFueSBzaXR0aW5nIHJlc2VhcmNoZXJzLCBkb2VzbiBvd24gYW4gb2ZmaWNlIGNoYWlyLgpEdSBmciBkb2JiZWwgc3RyYWZmIGkgZXR0IG9tcmRlIG9nIGlra2UgZXQgYW5uZXQsIGVyIGlra2UgRGFubWFyayBldHQgbGFuZCBkZXIgc2FtbWUgbG92IGdqZWxkZXIgZm9yIGFsbGUgaW5uYnlnZ2VyZSBvdmVyIGFsdD8KSSBndWVzcyB0aGUgbGluZSBpcyBkcmF3biB3aGVuIG5vIHNvbGlkIGVmZm9ydHMgYXJlIG1hZGUgdG8gbm90IGJlIG92ZXJseSB0b3VjaHkgZmVlbHkgd2l0aCBwZW9wbGUgYXQgYSB5b3VuZyBhZ2UuIElmIGFueW9uZSwgYm95cyBnaXJscyBpbmJldHdlZW5zLCBhcmUgcHJhaXNlZCBvciB0aG91Z2h0IGN1dGUgaXQgZG8gdGhpcyBraW5kIG9mIHRoaW5nIHRvIGV2ZXJ5b25lIGFsbCB0aGUgdGltZSB0aGVuIHllYWggdGhleWxsIGdyb3cgdXAgdG8gdGhpbmsgdGhhdCBraW5kIG9mIGJlaGF2aW9yIGlzIG9rYXkuLiAKSSBhc3N1bWVkIGl0IHdhcyBiYWJ5J3MgZmVldC9yZWFyIGluIHJpYnMsIGJ1dCBkaWQgcmVhZCBhYm91dCBwb3NzaWJsZSBnYWxsYmxhZGRlciBpc3N1ZXMsIGFuZCBtb3N0IGZyZXF1ZW50bHksIElDUCBhcyB3ZWxsLiAKVGhlIEh1YmJhcmQgR2xhY2llciBpcyB0aGUgbGFyZ2VzdCB0aWRld2F0ZXIgZ2xhY2llciBvbiB0aGUgTm9ydGggQW1lcmljYW4gY29udGluZW50LCB3aXRoIGl0cyBzb3VyY2UgMzMwMG0gYWJvdmUgc2VhIGxldmVsIGluIHRoZSBDYW5hZGlhbiBZdWtvbiB0ZXJyaXRvcnkuIEl0IHN0cmV0Y2hlcyAxMjFrbSB0byB0aGUgR3VsZiBvZiBBbGFza2EsIHdoZXJlIHRoZSBtb3ZpbmcgaWNlIG1hc3MgcmVhY2hlcyB0aGUgd2F0ZXIgaW4gRGlzZW5jaGFudG1lbnQgQmF5LiAKVGhlcmUgbm90aGluZyB3cm9uZyB3aXRoIGNvbXBhcmlzb25zLCBwZXIgc2UuIEl0cyB3aGVuIHlvdSB0cnkgYW5kIGVzdGFibGlzaCBhIG5hcnJhdGl2ZSB0aHJvdWdoIHlvdXIgY29tcGFyaXNvbnMsIGFuZCBpZ25vcmUgZXZpZGVuY2UgdGhhdCBjb250cmFkaWN0cyB5b3VyIG5hcnJhdGl2ZSwgdGhhdCB0aGVyZSBzdGFydHMgdG8gYmUgc29tZSBpc3N1ZXMuIEFuZCB0aGF0IHdoYXQgd2FzIGhhcHBlbmluZyB3aXRoIHRoZSBPdHRvbWFuIEVtcGlyZSBkZWNsaW5lIHRoZW9yaWVzLiBUaGV5IHdlcmUgY29tcGFyaW5nIHRoZSBPdHRvbWFuIEVtcGlyZSB0byB0aGUgb3RoZXIgRXVyb3BlYW4gcG93ZXJzLCBhbmQgdG8gdGhlIE90dG9tYW4gRW1waXJlIGluIHRoZSBwYXN0LCBhbmQgd2VyZSBzYXlpbmcgIlNlZSwgaXRzIGNsZWFyIHRoYXQgdGhlIE90dG9tYW4gRW1waXJlIGlzIGluIGRlY2xpbmUuIFRoZXJlIGNhbiBiZSBubyBvdGhlciBjb25jbHVzaW9ucy4gSnVzdCBsb29rIGF0IGl0cyBsb3NzIG9mIGxhbmQgYW5kIG1pbGl0YXJ5IGxvc3Nlcy4gVGhlaXIgZ292ZXJubWVudCBpcyBjb3JydXB0LCB0aGUgU3VsdGFuIGlzIGxhenkgYW5kIHVuY29uY2VybmVkIHdpdGggcnVsaW5nLCBhbmQgdGhlIG1pbGl0YXJ5IGFuZCBpdHMgZ2VuZXJhbHMgYXJlIGluY29tcGV0ZW50LiIKSXQgYXQgbGVhc3QgcG9zc2libGUsIEkgbm90IHNheWluZyBpdCBkZWZpbml0aXZlbHkuIE5vdGljZSBob3cgdGhleSBhZGRlZCB0aGUuIApQbGF5aW5nIHBva2VyIG9ubGluZSBpcyBmdW4gYW5kIEkgZGFiYmxlIGF0IGl0IGFzIHdlbGwgZnJvbSB0aW1lIHRvIHRpbWUuIEJ1dCwgbWFueSBwbGF5ZXJzIHNlZW0gdG8gZmVlbCB0aGF0IHBsYXlpbmcgaW4gYSBsaXZlIHRvdXJuYW1lbnQgaXMgdmVyeSBzaW1pbGFyIHRvIHBsYXlpbmcgb25saW5lLiAKRWRpdCAyOiBJIGRpZG4ndCBoYXZlIGEgaG9sZSBnb2luZyBhbGwgdGhlIHdheSB0aHJvdWdoIGJ5IGJvZHkgb3IgYW55dGhpbmcgbGlrZSB0aGF0LCBidXQgbXkgZXNvcGhhZ3VzIGhhZCBhIGhvbGUgaW4gaXQgdGhhdCB3YXMgYmxhY2sgYW5kIG5lY3JvdGljLiAKQWguIEknbSBzb3JyeS4gSSBkaWRuJ3QgcmVhbGl6ZSB5b3Ugd2VyZSAxNi4gCkl0IG5vdCBhIGdvb2QgdGhpbmcgYmVjYXVzZSBpZiB0aGUgcHJpY2VzIHdlcmUgbG93ZXIgcGVvcGxlIGNvdWxkIGJ1eSB0aGVpciBvd24gbmV3IGNvcHkuIApIZWxwIG1lIGdldCBteSBnYW1lIG9uCkNhbid0IHJlbWVtYmVyIGlmIHRoZSBhbXBoZXRhbWluZSBraW5nIG1hZGUgaXQgYmFjayBvbnRvIHRoZSBjb2FjaCBvciBub3QsIGJ1dCBDYXNpbm8sIGJ1aWx0IGludG8gdGhlIHdhbGwgdG8gdGhlIGVhc3Qgb2YgdGhlIGFyZWEncyBmaXJzdCBzYXZlIHBvaW50LiBUaGVzZSBzZWN0aW9ucyBhcmUgY2luZW1hdGljIGluIHN0eWxlIGJ1dCBkb2N1bWVudGFyeSBsaWtlIGluIGVmZmVjdCAgIHdlIHdhdGNoIGdvb2QgdGhpbmcgYXMgaXQgcHJvdmlkZXMgYW4gYWR1bHQgcHJlc2VuY2UgaW4gdGhlIHBhcnR5IHJvb20uIApJdCB3YXMgdGhlIG1pZGRsZSBpZiB0aGUgbmlnaHQsIGFuZCB3ZSBzdG9sZSBoZXIgY2FyIHRvIGdvIGJ1eSB0aGUgZHJ1Z3MsIGFuZCB3ZSBkaWQgaXQgaW4gdGhlIGNhciBpbiB0aGUgcGFya2luZyBsb3Qgb2YgbXkgYXBhcnRtZW50LiBJIGd1ZXNzIEkgZGlkbiB3YW50IGhlciB0byBmaW5kIG1lIGluIHRoZSBhcGFydG1lbnQsIEkgZGlkbiB3YW50IGhlciB0byBiZSB0aGUgb25lIHRvIGZpbmQgdXMuIFNvIHdlIGJvdGggdG9vayBhYm91dCAxNSBYYW5heCBwdWxscywgYW5kIGZpbGxlZCBzZXZlcmFsIHN5cmluZ2VzIGZ1bGwgb2YgaGVyb2luLiAKU3RhcnQgb3V0IHdpdGggcmVwbGFjaW5nIHRoZSBzd2l0Y2ggYW5kIGFkZGluZyBhIG1vdGlvbiBzZW5zb3IgaW4geW91ciBtb3N0IHVzZWQgYXJlYS4gT3Igd2hlcmUgaXQgd291bGQgcHJvdmlkZSB0aGUgbW9zdCBjb252ZW5pZW5jZSByZWFsbHkuIE5vdCBvbmx5IGRvZXMgaXQgbGV0IHlvdSBzcHJlYWQgdGhlIGNvc3Qgb3V0IG92ZXIgdGltZSwgYnV0IHlvdSBjYW4gdGVzdCB0aGluZ3Mgb3V0IHdpdGggYSBzbWFsbGVyIGludmVzdG1lbnQgdG8gZmluZSB0dW5lIHlvdXIgbmVlZHMuCig0KSAiU2FtZSBjb2xvciBmbHVzaCIgKGFsbCA1IHJlZCBjYXJkcyBvciBhbGwgNSBibGFjayBjYXJkcyk7CkFmdGVyIHBvbGljZSByZWNlaXZlZCBhIGNvbXBsYWludCBpbiBNYXkgZnJvbSBhIHNwYSBwYXRyb24gdGhhdCBoZSB3YXMgcHJvcG9zaXRpb25lZCBieSBhIG1hc3NldXNlIHRvIHBheSBmb3IgYSBzZXh1YWwgYWN0LCBwb2xpY2UgdW5kZXIgdG9vayBhbiB1bmRlcmNvdmVyIG9wZXJhdGlvbi4gU2ltaWxhciBwcm9wb3NpdGlvbnMgd2VyZSBtYWRlIHR3aWNlIGluIEp1bHkgYW5kIG9uY2UgaW4gT2N0b2JlciB0byB1bmRlcmNvdmVyIG9mZmljZXJzLCBhY2NvcmRpbmcgdG8gYSBjb21wbGFpbnQgdGhlIGNpdHkgZmlsZWQgYWdhaW5zdCB0aGUgc3BhLi4gCkEgcGVyc29uIGNhbiBiZSBmbGF3ZWQgYW5kIHN0aWxsIGRvIGdvb2QgdGhpbmdzLiAKQ0JSRSdzIHdhdGNoIGxpc3QgVGhyZWUgTG9uZG9uIHJlYWwgZXN0YXRlIG9wcG9ydHVuaXRpZXMgdGhlIGNvbXBhbnkgaXMga2VlcGluZyBhbiBleWUgb246Ckl0IG9rYXkgdG8gYmUgc3dlcHQgb2ZmIHlvdXIgZmVldCBhbmQgc2FkLiAKVGhpcmQgYW5kIGZpbmFsIHRoaW5nIGlzIHRoYXQgd2FzIFJhc2hmb3JkJ3MgZmlyc3QgcGVuIGZvciBVbml0ZWQuIEltYWdpbmUgYmVpbmcgYW4gYWNhZGVteSBraWQsIGdvaW5nIHVwIGFnYWluc3QgQnVmZm9uIHRvIHdpbiBpdCBmb3IgeW91ciB0ZWFtIGFuZCBqdXN0IHNtYXNoaW5nIGl0IGluLCBjb29sIGFzIGV2ZXIuIFRvIHRoaW5rIHNvbWUgb2YgeW91IGNhbGxlZCBoaW0gb3ZlcnJhdGVkIGp1c3Qgc2l4IG1vbnRocyBhZ28hIQpHYWdhIHN1cHBvcnRzIGdheSByaWdodHMuIDguIApNZSwgSSBsaWtlIHRvIGp1c3Qga2VlcCBvbiBjcm9jaGV0aW5nIGluIGEgcm91bmQgY2lyY2xlLiBObyBzdG9wcGluZy4gCk5hdGlvbmFsIEJhbmsgRmluYW5jaWFsIGFuYWx5c3QgR2FicmllbCBEZWNoYWluZSBoYWQgc2FpZCBUdWVzZGF5IHRoYXQgY2xlYXJlc3QgaW5kaWNhdG9yIG9mIGEgd2Vha2VuZWQgKG9yIGEgbW9yZSBjYXV0aW91cykgY29uc3VtZXIgaGFkIGJlZW4gdGhlIHNsb3dkb3duIGluIHJlc2lkZW50aWFsIG1vcnRnYWdlIGdyb3d0aCBpbiB0aGUgbGF0dGVyIGhhbGYgb2YgMjAxOCwgd2hpY2ggaGFkIGNvbnRpbnVlZCBpbiB0aGUgYmFua3MgZmlyc3QgcXVhcnRlci4gClRoZXNlIGFyZSB0aGUgcmF0aGVyIHBlcnZlcnNlIHF1ZXN0aW9ucyB0aGF0IE1pY2hlbCBGb3VjYXVsdCBzZXRzIG91dCB0byBleGFtaW5lIGluIGhpcyBIaXN0b3J5IG9mIFNleHVhbGl0eS4gRm91Y2F1bHQgc3VnZ2VzdHMgdGhhdCBzdWNoICJsaWJlcmF0aW9uIiBwb2xpdGljcyBkbyBub3QgdHJhbnNjZW5kIG9wcHJlc3Npb24sIGJ1dCBhcmUgaW4gZmFjdCB3aXRoaW4gc3lzdGVtcyBvZiBvcHByZXNzaW9uLiAKSSBoYWQgdGhlIHNhbWUgZmVlbGluZyBhbmQgd2FzIHNvIHdvcnJpZWQgYWJvdXQgdGVsbGluZyBteSBib3lmcmllbmQgYW5kIGhpbSBsZWF2aW5nIG1lLCBhbmQgdGhlbiBJIHJlYWxpemVkOiBEbyBJIHdhbnQgdG8gYmUgd2l0aCBzb21lb25lIHdobyB3aWxsIGJhc2UgdGhlaXIgcmVsYXRpb25zaGlwIHdpdGggbWUgb2ZmIG9mIHNvbWUgcGh5c2ljYWwsIHZhaW4gYXNwZWN0cyB0aGF0LCByZWFsaXN0aWNhbGx5LCBjYW4gYW5kIHdpbGwgY2hhbmdlLiBUaGFua2Z1bGx5IG15IGhvbmV5IHdhcyB1bHRyYSB1bmRlcnN0YW5kaW5nIGFuZCBzYXcgcmlnaHQgcGFzdCBhbGwgb2YgdGhlIHN5bXB0b21zLCBiZWNhdXNlIGhlIGxvdmVzIG1lIGZvciBtZSwgYW5kIG5vdCBteSBib2R5IG9yIGhvcm1vbmVzLiAKR2VudGx5IHNwbGFzaCB0aGUgbWlsayBpbiwgYXJvdW5kLCBhbmQgdGhyb3VnaCB0aGUgc3RlbSB0byBnZXQgYWxsIHRoZSByZWNsYWltIG91dCBhbmQgZGlzc29sdmVkIGludG8gdGhlIG1pbGssIHRoZW4gdHVybiB0aGF0IGludG8gY2hvY29sYXRlIG1pbGsuIApTb21ldGltZXMgbGlzdGVuaW5nIGFuZCBzYXlpbmcgIkkgbG92ZSB5b3UuIEkgY2FyZSBhYm91dCB5b3UiIGNhbiBiZSB0aGUgYmVzdCB3YXkgd2UgY2FuIGhlbHAgd2hlbiBwcm9ibGVtcyBzZWVtIGxpa2UgdGhleSBjYW4ndCBiZSBmaXhlZC4gCkhvd2V2ZXIgdGhlc2UgY2hhbXBpb24gb3IgaXRlbSB0d2Vha3MgY2FuIGNoYW5nZSBhbmQgaW5mbHVlbmNlIHRoZSB3YXkgbGVhZ3VlIGlzIHBsYXllZCBieSBpdHMgcGxheWVycyBhbG90IG1ha2luZyBpdCBoYXJkZXIgdG8ga2VlcCB1cCwgaWYgeW91IGFyZSBqdXN0IHN0YXJ0aW5nLi4gClBlcmNoZXMsIG9yaWdpbmFsbHkgZnJvbSBDaGlodWFodWEsIE1leGljbywgYXJyaXZlZCB0byB0aGUgVW5pdGVkIFN0YXRlcyBhbG1vc3QgMzAgeWVhcnMgYWdvIGFuZCBzaG9ydGx5IHRoZXJlYWZ0ZXIgYmVnYW4gYSBzdWNjZXNzZnVsIHBva2VyIGNhcmVlci4gV2l0aCBwbGFucyBvZiB3b3JraW5nIGluIGEgZm9vZCBwcm9jZXNzaW5nIHBsYW50IGluIE9yZWdvbiwgUGVyY2hlcyBtb3ZlZCB0byBMYXMgVmVnYXMgc2hvcnRseSB0aGVyZWFmdGVyLiBFdmVuIHRob3VnaCBpdCB3YXNuJ3QgaW4gaGlzIG9yaWdpbmFsIHBsYW5zLCBQZXJjaGVzIGV2ZW50dWFsbHkgd29ya2VkIGhpcyB3YXkgdXAgdG8gdGhlIDIwMDYgV29ybGQgU2VyaWVzIG9mIFBva2VyIGFuZCB3b24gdGhlIGZpcnN0IFdTT1AgQnJhY2VsZXQgaW4gTWV4aWNvJ3MgaGlzdG9yeS4gClRoZSByZWNvcmQsIENhbmFkYSB3b3JraW5nIHRoZWlyIGFzcyBvZmYsIFRydW1wIGlzIHF1b3RlZCBhcyBzYXlpbmcuIApBbGwgZXNzZW50aWFsIGVtcGxveWVlcyBpbiB0aGUgaGVhbHRoIHN5c3RlbSBhbmQgbWVkaWNhbCBzY2hvb2wgYXJlIHJlcXVpcmVkIHRvIGNvbWUgdG8gd29yayB1bmxlc3MgcmVsZWFzZWQgYnkgdGhlaXIgbWFuYWdlci9zdXBlcnZpc29yLiAKQWxzbyBrbm93biBhcyB0cmlwczsgVGhyZWUgY2FyZHMgb2YgdGhlIHNhbWUgcmFuay4KQWxsIHRoZXkgaGF2ZSB0byBkbyBpcyBzZW5kIGEgc21hbGwgYW1vdW50IG9mIG1vbmV5IGFzIGEgdHJhbnNmZXIgZmVlIHRvIGEgYmFuayBhY2NvdW50IGluIEFmcmljYS4uIApUaGUgcHJvYmxlbSBpcyB0aGF0IHRoZXkgZ2l2ZSB1cCB0b28gbXVjaCBwcm9maXQgYnkgZG9pbmcgdGhpcy4gCkkgbWVhbiwgeWVhaC4gaXQgd2FzIGp1c3QgYSB3ZWlyZCBzaXR1YXRpb24gICB3aGVuIHRoZSB3aG9sZSB0aGluZyBzdGFydGVkIHRvIHVuZm9sZCwgdGhlIGRvY3RvciB3aG8gd2FzIGF0IG15IHRhYmxlIGhhZCBqdXN0IDNCZXQgcHJlZmxvcCBhbmQgZ290dGVuIDRCZXQgYW5kIHRoZSBhY3Rpb24gd2FzIG9uIGhpbS4gdGhlIG90aGVyIHBsYXllciBhbGwgaW4gYW5kIHRoZSBvcmlnaW5hbCByYWlzZSBqdXN0IHNhdCBpbiB0aGUgbWlkZGxlIGZvciBhYm91dCAzMCBtaW51dGVzLgpGb3JtZXIgQXJnb3Mgc3RhciBDaGFkIE93ZW5zIGNoYXJnZWQgd2l0aCBhc3NhdWx0Ckxpa2UgSSBzYWlkLCBpbiBteSBsaWZlIGV4cGVyaWVuY2VzLCB0aGUgYWN0dWFsbHkgbW9yZSBlbXBhdGhldGljIHBlb3BsZSAodG8gc3RyYW5nZXJzKSBhcmUgb24gdGhlIHJpZ2h0IGFuZCBibGluZGVkIGJ5IEZveCBOZXdzLiAKUmVnYXJkbGVzcyBvZiBob3cgbWFueSBwZW9wbGUgZ2V0IG9mZmVuZGVkIGJ5IHRoZXNlIHRlcm1zLCB0aGV5IGFyZSBzbGFuZyB3b3JkcyBhcHBsaWVkIHRvIHBlb3BsZSBhY2NvcmRpbmcgdG8gdGhlIGNvbG91ciBvZiB0aGVpciBza2luLiBUaGVyZSBtaWdodCBiZSBhIGRpc2N1c3Npb24gb24gdGhlIGRlZ3JlZSBvZiBvZmZlbmNlIHRoYXQgbWlnaHQgYmUgY2F1c2VkIGJ5IHRoZXNlIHdvcmRzLCBidXQgYXQgdGhlIHZlcnkgbGVhc3QsIHRoZXkgYXJlIGEgYmFycmllciB0byBDYW50b25lc2UgY3VsdHVyZSBiZWluZyB0cnVseSBpbnRlcm5hdGlvbmFsOiBhZHVsdCBpbW1pZ3JhbnRzIHRvIEhvbmcgS29uZyBtaWdodCBiZSBjb25maWRlbnQgZW5vdWdoIHRvIG5vdCBmaW5kIHRoZXNlIHRlcm1zIGFubm95aW5nIG9yIG9mZmVuc2l2ZSwgaG93IGFib3V0IGV0aG5pYyBtaW5vcml0eSBjaGlsZHJlbiBncm93aW5nIHVwIHRoZXJlPwpQZXJoYXBzIHlvdXIgc2NhcnMgYXJlIGluIG9idmlvdXMgcGxhY2VzLCBhbmQgaXQgd2lsbCBtYWtlIHlvdSBoYXBwaWVyIHRvIGdldCB0aGVtIHJlbW92ZWQgaWYgdGhleSBhcmUgb24geW91ciBtaW5kIHRocm91Z2hvdXQgdGhlIGRheS4gQnV0IGFzIHNvbWVvbmUgd2hvIGEgY291cGxlIHllYXJzIGZhcnRoZXIgYWxvbmcgZnJvbSB0aGUgc2NhcmluZywgd2l0aCBteSBwZXJzcGVjdGl2ZSwgcGVvcGxlIGFzayBhYm91dCBpdCBvbmNlIHdoZW4gdGhleSBub3RpY2UsIEkgdGVsbCB0aGVtIHRoZSB0cnV0aCBpZiB0aGV5IGFyZW4gc3RyYW5nZXJzLCBhbmQgdGhlbiBpdCBuZXZlciBhIHByb2JsZW0gYWdhaW4uIElmIEkgZG9uIG1ha2UgaXQgYSBiaWcgZGVhbCwgb3RoZXIgcGVvcGxlIGRvbiBlaXRoZXIuIApXaGVuIGxvb2tpbmcgZm9yIGNhc2lubyBwb2tlciBjaGlwcyBmb3Igc2FsZSBvbmxpbmUsIGl0IGlzIGltcG9ydGFudCB0byBrbm93IHRoYXQgeW91IGFyZSBkZWFsaW5nIHdpdGggYSBsZWdpdGltYXRlIGNvbXBhbnkgdGhhdCBvZmZlcnMgdGhlIHByb2R1Y3RzIHRoYXQgdGhhdCB0aGV5IHByb21pc2UuIE9uZSBvZiB0aGUgYmVzdCB3YXlzIHRoYXQgeW91IGNhbiBkbyB0aGlzIGlzIHRvIHJldmlldyB0aGUgdGVzdGltb25pYWxzIHRoYXQgYXJlIHByb3ZpZGVkIGJ5IHRoZSBjdXN0b21lcnMgdGhhdCBoYXZlIHB1cmNoYXNlZCBmcm9tIHRoYXQgd2Vic2l0ZSBpbiB0aGUgcGFzdC4gCkZvciBub3csIHRoYXQncyBqdXN0IHR3byBwbGFjZXMgICBPYWtsYXduIGFuZCBTb3V0aGxhbmQuIApCdXQgSSBoYXZlIHRvIHNheSBpdCwgZGF0aW5nIGNsaWVudHMgaXMgaW5hcHByb3ByaWF0ZS4gS2VlcCBtYXNzYWdlIHRoZXJhcHkgcHJvZmVzc2lvbmFsLCBwbGVhc2UuIApUaGUgc3ltYm9scyBnZW5lcmFsbHkgdXNlZCBhcmUgc2hhcGVzIG9yIGFydGlzdGljIGZpZ3VyZXMgb2YgZnJ1aXRzLCByb21hbiBsZXR0ZXJzLCBhbmQgY2FydG9vbnMsIHNoYXBlcyBvZiBzb21lIGNvbW1vbiBvYmplY3RzIG9yIGhlYXJ0cy4gCk1heWJlIHRoZSBsaW5rIHdpdGggUnViZWxsYSBhbmQgQXV0aXNtIGlzIG5vdCBhcyBzb3VuZCBhcyBzb21lIHBlb3BsZSB0aGluayBpdCBpcy4gRmluZS4gSG93ZXZlciB0byBjb21lIG91dCB3aXRoIGEgaGVhZGxpbmUgbGlrZSB0aGlzIHRoYXQgc2F5cyAiVmFjY2luZXMgZG9uIGNhdXNlIEF1dGlzbSIgd2hpbGUgdGhlIGFjdHVhbCBzdHVkeSBzZWVtcyB0byBjb25jbHVkZSB0aGF0IHRoZSBNTVIgdmFjY2luZSBpbiBwYXJ0aWN1bGFyIHNpbXBseSBkb2VzbiBpbmNyZWFzZSBjaGFuY2VzIG9mIEF1dGlzbSBzZWVtcyBkaXNpbmdlbnVvdXMuIApXZSBjYW4ganVtcCB0byBpdCByaWdodCBhd2F5LiAKTWF5OiBQbGFudHMgYW5kIEZsb3dlcnNUaGUgc2F5aW5nIGdvZXMgJ0FwcmlsIHNob3dlcnMgYnJpbmcgTWF5IGZsb3dlcnMnIGFuZCBzbyBpdCBkb2VzICAgYW5kIHRoZSBwbGFudHMgZG9uJ3QgZG8gdG9vIGJhZCBlaXRoZXIuIApBcyB0aGUgcHJvamVjdCBkZXZlbG9wZWQsIENoaWxlcyByZWFsaXplZCBoZSBub3Qgb25seSB3YW50ZWQgdG8ga2VlcCBBbm5hIE1hcmlhIGJlYXV0aWZ1bCwgaGUgd2FudGVkIHRvIGRvIGl0IGluIGFuIGVudmlyb25tZW50YWxseSByZXNwb25zaWJsZSB3YXkuIFRoYXQgbWVhbnQgdXNpbmcgZW5lcmd5IHNhdmluZyBidWlsZGluZyB0ZWNobmlxdWVzLCByZXBsYWNpbmcgY29uY3JldGUgc2lkZXdhbGtzIHdpdGggY3J1c2hlZCBzaGVsbCBwYXRod2F5cywgYW5kIGxhbmRzY2FwaW5nIHdpdGggbmF0aXZlIHBsYW50cy4gVG9kYXkgQ2hpbGVzJ3MgMTEgcHJvcGVydGllcyBhbG9uZyBQaW5lIEF2ZW51ZSBoYXZlIGFsbCBiZWVuIExFRUQgY2VydGlmaWVkLiBBbmQgdGhlIGlzbGFuZCBoYXMgYmVlbiBjaXRlZCBhcyBhIG1vZGVsIG9mIHN1c3RhaW5hYmxlIHRvdXJpc20gYnkgdGhlIFVuaXRlZCBOYXRpb25zIFdvcmxkIFRvdXJpc20gT3JnYW5pemF0aW9uLgpTbyBJIGJlZ2FuIHRvIHBsYXkgc2F4b3Bob25lIGluc3RlYWQsIGFuZCBwaWNrZWQgaXQgdXAgcHJldHR5IHF1aWNrbHkuIFRoZSB1cHBlciByZWdpc3RlciBvbiBhIGNsYXJpbmV0IGlzIHRoZSBsb3dlciByZWdpc3RlciBvbiBhIHNheG9waG9uZSwgd2hpY2ggbWFrZXMgaXQgZWFzaWVyIHRvIHRyYW5zcG9zZSB0aGUgbm90ZXMgbWVudGFsbHkuIChJIHBpY2tlZCB1cCB0aGUgc2F4IGJlY2F1c2UgSSB3YXMgYm9yZWQgd2l0aCB0aGUgY2xhcmluZXQgICBwbHVzIHRoZXkgd291bGRuJ3QgbGV0IG1lIGluIHRoZSBqYXp6IGJhbmQgd2l0aCBhIGNsYXJpbmV0ICAgZXZlbiB0aG91Z2ggSSBtZW50aW9uZWQga2xlc21lciBtdXNpYyB0byB0aGVtLCB0aGV5IHdlcmVuJ3QgaW50ZXJlc3RlZC4pVGhlIGVtYm91Y2h1cmUgb24gdGhlIHNheCBpcyBkZXBlbmRlbnQgdXBvbiB0aGUgbG93ZXIgamF3LiAKVGhhdCBtYXkgYmUgdW5kZXJzdGF0aW5nIGl0IGEgYml0LiBJdCdzIHBlcmZlY3RseSBub3JtYWwgZm9yIHNpYmxpbmdzIHRvIGZpZ2h0LiBJIGhhZCBhIGNvbnZlcnNhdGlvbiB3aXRoIG15IGNvbGxlZ2UgZnJpZW5kcyBsaWtlIGp1bmlvciB5ZWFyLCBhbmQgd2UgYWxsIGNvdWxkbid0IHN0YW5kIG91ciBzaWJsaW5ncyB3aGVuIHdlIGxlZnQgZm9yIGNvbGxlZ2UsIGJ1dCBieSB0aGUgZW5kIG9mIFNvcGhvbW9yZSB5ZWFyIHdlIHdlcmUgYWxsIHByZXR0eSBnb29kIGZyaWVuZHMgd2l0aCB0aGVtIChleGNlcHQgdGhlIG9uZSBndXkgd2hvJ3Mgc2lzdGVyIGNhbWUgdG8gdGhlIHNhbWUgY29sbGVnZSBhbmQgaW5zaXN0ZWQgb24gaGFuZ2luZyBvdXQgd2l0aCBoaW0gYSBsb3QpLiAKV2UgYWxsIGRpZTEwLiAKSWYgeW91IGEgaG9tZSB1c2VyIGFuZCB3YW50IHBlcmZvcm1hbmNlLCBnZXQgYW4gU1NELiBJZiB5b3Ugd2FudCByZWxpYWJpbGl0eSwgZ2V0IGFuIFNTRCBhbmQgYSBnb29kIGV4dGVybmFsIGJhY2t1cCB0YXJnZXQuIEkga2VlcCBhIFVTQiBkcml2ZSB1bnBsdWdnZWQgYW5kIGJhY2sgdXAgcGVyaW9kaWNhbGx5Li4gClRoaXMgYWxzbyBtZWFucyB3ZSBwcm9iYWJseSBnbyBMQiBvciBDQiBpbiB0aGUgZmlyc3QsIGFuZCBqdXN0IGdldCBhIFFCIGZyb20gbmV4dCB5ZWFycyBjbGFzcywgYWZ0ZXIgd2UgZ2V0IGFsbCB0aGUgcGllY2VzIGluIHBsYWNlIGV2ZXJ5d2hlcmUgZWxzZS4gCkluIDE5NDEgd2hlbiB0aGUgZXh0ZXJtaW5hdGlvbiBjYW1wcyB3ZXJlIGZpcnN0IGJ1aWx0LCBtdWNoIG9mIHRoZSBvcGVyYXRpb24gd2FzIHN0aWxsIGJlaW5nIGhpZGRlbiBieSBwcm9wYWdhbmRhIGFuZCBvYmZ1c2NhdGlvbiBhbmQgb25seSBzbG93bHkgZGlkIHVuZGVyc3RhbmRpbmcgZ3JvdyBhcyB0byB3aGF0IHdhcyBoYXBwZW5pbmcgYXJvdW5kIHRoZW0uIApKRDogV2hlbiBKYXJvc2xhdiBIYWxhayB3YXMgZG9pbmcgc28gd2VsbCBpbiAyMDEwLCBlc3BlY2lhbGx5IGR1cmluZyB0aGUgcGxheW9mZiBydW4sIEkgd2FzIHRyYXZlbGluZyBhY3Jvc3MgRXVyb3BlIHdpdGggYSBmcmllbmQgb2YgbWluZS4gV2Ugd2VudCB0byBBbXN0ZXJkYW0sIFBhcmlzLCBCYXJjZWxvbmEsIGFuZCBvdGhlciBjaXRpZXMsIHRvby4gCkVsb24gaXMgZnVsbHkgYXdhcmUgdGhhdCBUZXNsYSBpcyBpbiBtYXNzaXZlIGRhbmdlciBvdmVyIHRoZSBuZXh0IGZldyB5ZWFycy4gT25seSB0aW1lIHdpbGwgdGVsbCBob3cgdGhpcyB0dXJucyBvdXQuIApBZnRlciBhbGwsIHlvdSBkb24gd2FudCB5b3VyIFBDIHNodXR0aW5nIGRvd24gaW4gdGhlIG1pZGRsZSBvZiBhIGJpZyBtZWV0aW5nIG9yIGhhbGZ3YXkgdGhyb3VnaCBhIGNyb3NzIGNvdW50cnkgZmxpZ2h0LiAKQmllbiBzciwgaWwgZXhpc3RlIHVuZSBtYXNzZSBkZSBzb2lnbmFudHMgYmllbnZlaWxsYW50cyBldCBhdHRlbnRpZnMuIE1haXMgdHJvcCBuZSBsZSBzb250IHZpc2libGVtZW50IHBhcy4gClNvbWUgYXJlIG1hbmRhbGEgbGlrZSBzcGlyYWwgc2hhcGVzIHdoaWxlIG90aGVycyByZXNlbWJsZSBtdXNocm9vbXMuT25lIG9mIHRoZSBkcmF3aW5ncyBpcyBhIGJsYWNrIGFuZCB3aGl0ZSByaGlub2Nlcm9zLiBJdCBtb2RlbGxlZCBhZnRlciBhbiBpbmZsdWVudGlhbCB3b29kYmxvY2sgb2YgYSByaGlub2Nlcm9zIGJ5IEdlcm1hbiBhcnRpc3QgQWxicmVjaHQgRHJlci4gClRoZSB5b3V0aCBJIHRhbGtlZCB0byB3b3JyeSBtb3N0IGFib3V0IHRoZSB3ZWxsIGRvY3VtZW50ZWQgY2hhbGxlbmdlcyB0aGV5IGZhY2UgcG92ZXJ0eSwgbWFsbnV0cml0aW9uLCBzZWdyZWdhdGVkIGFuZCBzdWJzdGFuZGFyZCBzY2hvb2xzLCBhbmQgb25lIG9mIHRoZSBoaWdoZXN0IHlvdXRoIHVuZW1wbG95bWVudCByYXRlcyBpbiB0aGUgd29ybGQuIFRoZXJlIGFyZSBtb3JlIHRoYW4gMTAgbWlsbGlvbiBqb2JsZXNzIHBlb3BsZSBpbiB0aGUgY291bnRyeSwgaGFsZiBvZiB0aGVtIGFyZSBiZXR3ZWVuIHRoZSBhZ2VzIG9mIDE1IGFuZCAyNC4gU29tZSBlc3RpbWF0ZXMgcHV0IHRoZSB1bmVtcGxveW1lbnQgcmF0ZSBhbW9uZyB0b3duc2hpcCB5b3V0aCBhdCA1NyBwZXIgY2VudC4uIAooYSkgYmVsb25naW5nIHRvIHRoZSBFbXBlcm9yKGIpIGVtYmFsbWVkKGMpIHRhbWUoZCkgc3Vja2luZyBwaWdzKGUpIHNpcmVucyhmKSBmYWJ1bG91cyhnKSBzdHJheSBkb2dzKGgpIGluY2x1ZGVkIGluIHRoZSBwcmVzZW50IGNsYXNzaWZpY2F0aW9uKGkpIGZyZW56aWVkKGopIGlubnVtZXJhYmxlKGspIGRyYXduIHdpdGggYSB2ZXJ5IGZpbmUgY2FtZWwgaGFpciBicnVzaChsKSBldCBjZXRlcmEobSkgaGF2aW5nIGp1c3QgYnJva2VuIHRoZSB3YXRlciBwaXRjaGVyKG4pIHRoYXQgZnJvbSBhIGxvbmcgd2F5IG9mZiBsb29rcyBsaWtlIGZsaWVzSSBsaWtlIHRvIHRoaW5rIHRoYXQgSSdkIGJlIGEgJ2snIC4gZmFpbGluZyB0aGF0IGFuICduJy4gSWYgeW91IHdvdWxkIGxpa2UgdG8ga25vdyBtb3JlIGFib3V0IHRoZSBtYW4gYmVoaW5kIHRoZSBtb25pa2VyLCBsZWF2ZSBhIG1lc3NhZ2UgaW4gdGhpcyByYXRoZXIgc25henp5IGJveCBhbmQgSSdsbCBzZWUgd2hhdCBJIGNhbiBkby4KNSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29NYXJrZXRsZXJkZSBidWxhYmlsZWNlaW4gVmluY2VudCB2ZSBLeWxtIGFyYXBsYXIgZGEgaXJpbmNlIGFyYWIgb2xhcmFrIGdlZXIsICU4IGFsa29sbCBvbHVyIHZlIGlpbmUgYXJvbWEgdXJ1cGxhciBrb3l1bG11IHptIGFyYXBsYXJkci4gS2VzaW5saWtsZSB0YXZzaXllIGV0bWVtIGFtYSBraW1pc2kgZGUgb251IG9rIHNldml5b3IuIAoiQ01PcyBjYW4gYmUgbW9yZSBwb3dlcmZ1bCB0aGFuIGV2ZXIuIENNT3MgaGF2ZSBhIHNlYXQgYXQgdGhlIGJvYXJkIHRhYmxlLiBNYXJrZXRpbmcgaXMgbW9yZSBzdHJhdGVnaWMgdGhhbiBldmVyLCIgc2hlIHNheXMuICJTZXZlbnR5IHNpeCBwZXJjZW50IG9mIENNT3Mgbm93IGhhdmUgUCByZXNwb25zaWJpbGl0eS4gVGhhdCdzIG5ldy4iClNlZWluZyBhcyB5b3UgYXJlbiByZWFsbHkgZ2FpbmluZyBhbnkgcmVzdW1lIGJ1aWxkaW5nIGV4cGVyaWVuY2UuIApJIHRoaW5rIHRoZSBiYWcgaXMgYSBuaWNlIHNoYXBlICAgdGhlIGZvb3QgYm94IGluIHBhcnRpY3VsYXIgaXMgYSBnb29kIGNvbWZvcnRhYmxlIGFuZ2xlIHRvIGtlZXAgeW91ciBmZWV0IHdlbGwgaW5zdWxhdGVkLiAKMiBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ29NeSBwaGlsb3NvcGh5IGlzIHRoYXQgYnkgc2ltcGx5IGpvaW5pbmcgYW5kIHBsYXlpbmcgaW4gdGhlIGxlYWd1ZSBpcyBjb25zaWRlcmVkIHRvIGJlIGNvbXBldGl0aXZlIChJIHByZWZlciB0byBwbGF5IGNhc3VhbGx5LCB3aGljaCBpcyB3aHkgSSB0YWtpbmcgYSBicmVhayBhZnRlciB0aGUgc2Vhc29uIGlzIG92ZXIpLiBUeXBpY2FsbHkgRGl2aXNpb24gMSBmb3IgZWl0aGVyIDZ2NiBvciA0djQgaXMgbW9yZSBjb21wZXRpdGl2ZSBjb21wYXJlZCB0byBEaXZpc2lvbiAyLiAKVGhleSBhbHNvIGJvdGggc2VlbSB0byBoYXZlIHRlbXBlcnMgdGhhdCB3aGVuIGl0IGNvbWVzIHRvIHRoZWlyIHN0YWZmcy4KTWF4aSBza2lydHMgYXJlIGFsc28ga2luZCBvZiBhbiBvYnZpb3VzIHN1Z2dlc3Rpb24sIGJ1dCBJIHRoaW5rIHRoYXQgaXQgaXMga2luZCBvZiBlYXN5IHRvIHN0YXJ0IHNsaXBwaW5nIGludG8gd2Fja3kgbGFkeSB0ZXJyaXRvcnkgdGhhdCB3YXkuIElmIHlvdSBkbyB3YW50IHRvIHdlYXIgc2tpcnRzLCBhIG1pZGkgbGVuZ3RoIG1pZ2h0IGJlIGEgYmV0dGVyIGNob2ljZS4gCklmIHR3byBvciBtb3JlIHBsYXllcnMgbWFrZSB0aGUgc2FtZSBoYW5kIChvciBoYW5kcyB0aGF0IHJhbmsgdGhlIHNhbWUpIHRoZW4gdGhlIHBvdCBpcyBzcGxpdC4gClN1cmVzaCBqb2tlcywgIlRoZSBZb3VUdWJlIGF1ZGllbmNlIGlzIGZhciBtb3JlIGZvcmdpdmluZyB3aGVyZSB3ZSBjb3VsZCB1c2UgaW5leHBlbnNpdmUgRFNMUiBjYW1lcmFzIHRvIHNob290LiIuIApTbyBhIGZldyBtaW51dGVzIGdvIGJ5IGFuZCBteSBzb24gd2Fsa3MgdXAgdG8gdGhlIG1hbiB3aXRoIGEgYnVja2V0IG9mIHdhdGVyLCBhbmQgYmVmb3JlIEkgY2FuIGV2ZW4gcmVhbGl6ZSB3aGF0IGlzIGdvaW5nIG9uLCBteSBzb24gZHVtcHMgYW4gZW50aXJlIGJ1Y2tldCBvZiB3YXRlciBvbiB0b3Agb2YgaGltLiAKVm91cyBwb3V2ZXogbGUgZmFpcmUgcG91ciBsZXMgY29va2llcyBuY2Vzc2l0YW50IHZvdHJlIGNvbnNlbnRlbWVudCB1bmlxdWVtZW50LCBjJ2VzdCAgZGlyZSBsZXMgY29va2llcyBmb25jdGlvbm5lbHMsIGRlIHBlcmZvcm1hbmNlIGV0IG1hcmtldGluZy4gCktyYXRvbSBjYW4gYmUgbWVudGFsbHkgYW5kIHBoeXNpY2FsbHkgYWRkaWN0aXZlLiBTb21lb25lIHdpdGggYW4gYWRkaWN0aXZlIHBlcnNvbmFsaXR5IGFuZCBsYWNrIG9mIGRpc2NpcGxpbmUgY2FuIGVhc2lseSBmb2N1cyB0aGVyZSBlbnRpcmUgbGlmZSBhcm91bmQgaXQgbGlrZSBtYW55IGVmZmVjdGl2ZSBzdWJzdGFuY2VzLiAKS2F0ZSBoYXMgbm8gVEZTQSBidXQgdGhleSBjb3VsZCBlYXNpbHkgYWxsb2NhdGUgJDUwMCBwZXIgbW9udGggZnJvbSBleGlzdGluZyBpbmNvbWUgdG8gaGVyIFRGU0EuICQ2LDAwMCBpbiBhbm51YWwgY29udHJpYnV0aW9ucyBpbmNyZWFzaW5nIGF0IHRocmVlIHBlciBjZW50IGFmdGVyIGluZmxhdGlvbiB3b3VsZCBncm93IHRvICQxNDAsNDg2IGF0IGhlciBhZ2UgNTUsIGEgc3VtIHRoYXQgd291bGQgc3VwcG9ydCAkNSw3NTQgYW5udWFsIHBheW91dHMgZm9yIHRoZSBuZXh0IDQwIHllYXJzLi4gClRoZSBUcnVtcCBsZWdhbCB0ZWFtIGlzIG9wZW4gdG8gTXVlbGxlciBpbnRlcnZpZXdpbmcgVHJ1bXAgd2l0aCBxdWVzdGlvbnMgcmVsYXRlZCB0byAiYW4gYXJlYSBvZiBjb2xsdXNpb24sIG5vdCBvYnN0cnVjdGlvbiwiIEdpdWxpYW5pIHNhaWQgb24gTW9uZGF5LiBIZSBhZGRlZCB0aGF0IHRoZSB0ZWFtIG1heSBiZSByZWNlcHRpdmUgdG8gcXVlc3Rpb25zIG9mIG9ic3RydWN0aW9uICJpZiB0aGV5IGNvdWxkIHNob3cgdXMgb25lIG9yIHR3byB0aGVyZSwgd2UgY2FuIGNvbnNpZGVyIGl0LiAKQWN0dWFsIHN0dWRpZXMgd2VyZSBvZiBjb250cm9sbGVkIGNyb3NzIG92ZXIgZGVzaWduLlNwZWNpZmljIGludGVydmVudGlvbnMgaW5jbHVkZWQgaW4gdGhlIHJldmlld01hc3NhZ2UgaW5jbHVkaW5nIGFiZG9taW5hbCBtYXNzYWdlIHdhcyBjYXJyaWVkIG91dCBpbiB0aGUgZm9sbG93aW5nIHJlZ2ltZXM6IG5pbmUgc2Vzc2lvbnMgZWFjaCBvZiB0d2VudHkgbWludXRlcyBkdXJhdGlvbjsgZGFpbHkgZm9yIGZpdmUgZGF5cyBwZXIgd2VlayBmb3Igc2V2ZW4gb3IgdHdlbHZlIHdlZWtzOyBvciByZWd1bGFybHkgZm9yIG9uZSBtb250aC4gQ29uY29taXRhbnQgdHJlYXRtZW50IGluY2x1ZGVkIGEgc3VwZXJ2aXNlZCBleGVyY2lzZSBwcm9ncmFtbWUuIENvbXBhcmlzb24gdGhlcmFwaWVzIGluY2x1ZGVkIG5vIG1hc3NhZ2UsIGNvbm5lY3RpdmUgdGlzc3VlIG1hbmlwdWxhdGlvbiwgYW5kIGxheGF0aXZlcyBhcyBiZWZvcmUgdGhlIHRyaWFsLlBhcnRpY2lwYW50cyBpbmNsdWRlZCBpbiB0aGUgcmV2aWV3UGFydGljaXBhbnRzIGluY2x1ZGVkIGNocm9uaWNhbGx5IGNvbnN0aXBhdGVkIHBhdGllbnRzIHdpdGggYSB0cmFuc2l0IHRpbWUgaW4gZXhjZXNzIG9mIHNpeHR5IGhvdXJzLCBlbGRlcmx5IGNoYWlyIGJvdW5kIG9yIGJlZGZhc3QgcGF0aWVudHMgd2l0aCBjaHJvbmljIGNvbnN0aXBhdGlvbiBhbmQgbGF4YXRpdmUgdXNlLCBkaXNhYmxlZCBpbnN0aXR1dGlvbmFsaXNlZCBhZHVsdHMgd2l0aCBzZXZlcmUgY2hyb25pYyBjb25zdGlwYXRpb24gYW5kIGhlYWx0aHkgbWFsZSB2b2x1bnRlZXJzLk91dGNvbWVzIGFzc2Vzc2VkIGluIHRoZSByZXZpZXdUaGUgZm9sbG93aW5nIG91dGNvbWVzIHdlcmUgYXNzZXNzZWQ6IHRvdGFsIGNvbG9uaWMgdHJhbnNpdCB0aW1lcyB1c2luZyByYWRpb3BhcXVlIG1hcmtlcnM7IHN0b29sIGZyZXF1ZW5jeTsgbnVtYmVyIG9mIGRheXMgd2l0aCBib3dlbCBtb3ZlbWVudHM7IGVwaXNvZGVzIG9mIGZhZWNhbCBpbmNvbnRpbmVuY2U7IG51bWJlciBvZiBlbmVtYXMgZ2l2ZW47IHN0b29sIGNvbnNpc3RlbmN5OyBnYXN0cm9pbnRlc3RpbmFsIHRyYW5zaXQgdGltZTsgYW5kIHBhdGllbnQgd2VsbCBiZWluZy5Bc3Nlc3NtZW50IG9mIHN0dWR5IHF1YWxpdHlWYWxpZGl0eSB3YXMgYXNzZXNzZWQgYWNjb3JkaW5nIHRvIHRoZSBKYWRhZCBjcml0ZXJpYSB3aGljaCBpbmNsdWRlIGRlZ3JlZSBvZiBibGluZGluZywgYWRlcXVhY3kgb2YgcmFuZG9taXNhdGlvbiBhbmQgd2l0aGRyYXdhbHMgKHNlZSBPdGhlciBQdWJsaWNhdGlvbnMgb2YgUmVsYXRlZCBJbnRlcmVzdCBuby4xKS5NZXRob2RzIG9mIHN5bnRoZXNpc0hvdyB3ZXJlIHRoZSBzdHVkaWVzIGNvbWJpbmVkP1RoZSBzdHVkaWVzIHdlcmUgY29tYmluZWQgaW4gYSBuYXJyYXRpdmUgcmV2aWV3LkhvdyB3ZXJlIGRpZmZlcmVuY2VzIGJldHdlZW4gc3R1ZGllcyBpbnZlc3RpZ2F0ZWQ/RGlmZmVyZW5jZXMgYmV0d2VlbiB0aGUgc3R1ZGllcyB3ZXJlIGRpc2N1c3NlZC5SZXN1bHRzIG9mIHRoZSByZXZpZXdGb3VyIGNyb3NzIG92ZXIgY29udHJvbGxlZCBzdHVkaWVzIChpbmNsdWRpbmcgb25lIHJhbmRvbWlzZWQgY3Jvc3Mgb3ZlciBzdHVkeSkgYW5kIG9uZSBzaW5nbGUgY2FzZSBzdHVkeSB3ZXJlIGluY2x1ZGVkICg2MSBwYXRpZW50cykuTWV0aG9kb2xvZ2ljYWwgcXVhbGl0eSBvZiB0cmlhbHMgd2FzIHBvb3Igd2l0aCBKYWRhZCBzY29yZXMgb2YgZWl0aGVyIDAgb3IgMS4gClRoZSBtYWluIHJlYXNvbiBmb3IgdGhvc2UgbG9zc2VzIGhhcyBiZWVuIG5hdHVyYWwgZ2FzIHByaWNlcyB0aGF0IGhhdmUgZmFsbGVuIGluIHJlY2VudCB5ZWFycyBmYXJ0aGVyIHRoYW4gdGhlIHV0aWxpdGllcyBleHBlY3RlZCBhcyBtYXNzaXZlIG5ldyBkb21lc3RpYyBnYXMgcmVzZXJ2ZXMgaGF2ZSBiZWVuIGRpc2NvdmVyZWQsIHV0aWxpdGllcyBzYXkuIE5hdHVyYWwgZ2FzIGlzIHVzZWQgdG8gcHJvZHVjZSBhIG1ham9yaXR5IG9mIEZsb3JpZGEncyBlbGVjdHJpY2l0eS4KVEhJUyBpcyB3aGVyZSB0aGUgd2FnZSBnYXAgb2NjdXJzLiAKVGhvc2UgcGVvcGxlIGFyZSBpcnJlc3BvbnNpYmxlIGFuZCBhbG1vc3QgY28gY29uc3BpcmF0b3JzIGZvciBzb21ldGhpbmcgaGFwcGVuaW5nIHRvIGEgYmFieS4gCkFmdGVyIHRoZSBXb3JsZCBIZWFsdGggT3JnYW5pemF0aW9uIHJlbGVhc2VkIGEgc3R1ZHkgY29uY2x1ZGluZyB0aGF0IGdseXBob3NhdGUsIHRoZSBhY3RpdmUgaW5ncmVkaWVudCBpbiBNb25zYW50byBSb3VuZHVwIGhlcmJpY2lkZSwgaXMgInByb2JhYmx5IGNhcmNpbm9nZW5pYywiIFBhdCBNb29yZSB0b2xkIGEgRnJlbmNoIGZpbG1tYWtlciB0aGF0IGdseXBob3NhdGUgaXMgc2FmZSB0byBkcmluay4KQXNrIGNoaWxkcmVuIHRvIHVzZSBjcml0aWNhbCB0aGlua2luZyBza2lsbHMuIApUZWNobmljYWxseSB0aG91Z2gsIHRoZSBCb3Nwb3J1cyBpcyBub3QgdGhlIHdlc3Rlcm5tb3N0IHBhcnQgb2YgdGhlIEFzaWFuIGNvbnRpbmVudC4gVGhlcmUgYWN0dWFsbHkgYSBmYWlybHkgc2l6YWJsZSBjaHVuayBvZiBBc2lhbiBsYW5kbWFzcyB3ZXN0IG9mIGl0LCBzdHJldGNoaW5nIHRvIHRoZSBEYXJkYW5lbGxlcy4gV2hpbGUgYW5ha2thbGUsIHRoZSBEYXJkYW5lbGxlcyBsYXJnZXN0IGNpdHksIGRvZXMgbm90IChzdXJwcmlzaW5nbHkgZW5vdWdoKSBoYXZlIGFueSByYWlsIHNlcnZpY2Ugd2hhdHNvZXZlciAgIG1ha2luZyBpdCBwb3NzaWJseSB0aGUgbGFyZ2VzdCBjaXR5IGluIHRoaXMgcGFydCBvZiB0aGUgd29ybGQgd2l0aG91dCBhbnkgICB0aGUgY2l0eSBvZiBJem1pciBhbHNvIGxpZXMgdG8gdGhlIHdlc3Qgb2YgSXN0YW5idWwgKDI3LjE0RSB2cy4gMjg1NzE4RSksIGFuZCB0aGF0IG1ha2VzIGl0cyB3ZXN0ZXJubW9zdCB0ZXJtaW5hbCAgIEJhc21hbmUgVGVybWluYWwgICB0aGUgd2VzdGVybm1vc3QgbWFqb3IgcmFpbCBodWIgaW4gQXNpYS4gKFRoZSB3ZXN0ZXJubW9zdCBzdGF0aW9uIG92ZXJhbGwgd291bGQgYmUgdGhlIHdlc3Rlcm5tb3N0IHN0YXRpb24gb24gdGhlIE1lbmVtZW4gY29tbXV0ZXIgcmFpbCBsaW5lICAgYnV0IG5vdCBNZW5lbWVuIGl0c2VsZi4pCklmIGFuIE9QIHByZWZlcnMgY29tbWVudHMgb2YgYSByZWxpZ2lvdXMgbmF0dXJlLCB0aGUgbW9kZXJhdG9ycyB3aWxsIGFsc28gZGVmZW5kIHRoYXQgYm91bmRhcnksIGZvciBleGFtcGxlLiAKVGhlaXIgbW9tIHJhaXNlZCB0aGVtIGFsb25lIGluIHRoaXMgdGlueSBob3VzZS4gClRoZXJlIGFyZSBtYW55IHRoZW9yaWVzIG9uIGhvdyB0byB3aW4gYSBwb2tlciB0b3VybmFtZW50LgpTaWUgc3RhbmQgZWluZmFjaCBkYSB1bmQgbGllc3MgZGllc2VzIEJldGFzdGVuIGR1cmNoIGRpZSBmZWluZW4gSG5kZSBkZXMgRG9jcyBlaW5mYWNoIGF1ZiBzaWNoIHdpcmtlbiwgdW5kIGlociBHZXNpY2h0YXVzZHJ1Y2sgemVpZ3RlIENhcmxvcyBkZXV0bGljaCwgZGFzcyBzaWUgdm9sbCBnZW5pZXNzZW4ga29ubnRlLiAKU3RyYW5nZWx5LCBhbHRob3VnaCB0aGUgbWVudSBwcm9taXNlZCBkaW5uZXIgdG8gYmUgdmVnZXRhcmlhbiBjYW5uZWxvbmksIGl0IHdhcyBjb3ZlcmVkIGluIG1lYXQgc2F1Y2UuIEFuZCBicmVha2Zhc3QgaW5jbHVkZWQgcG9yayBzYXVzYWdlISBTZXJ2aW5nIHBvcmsgdG8gYSBwbGFuZSBmdWxsIG9mIEpld3Mgb24gdGhlaXIgd2F5IHRvIHRoZSBNaWRkbGUgRWFzdCBpcyBhIGJpdCBvZGQsIHRvIHNheSB0aGUgbGVhc3QuIEl0IHdhcyBvZmYgdG8gYSByb2NreSBzdGFydC4uIApUaGUgRm9ydGlzbWVyZSBzY2hlbWUgaGFzIGJlZW4gaW5jbHVkZWQgd2l0aGluIHRoZSBDYWJpbmV0J3MgYnVkZ2V0IHByb3Bvc2FscyBmb3IgMjAxOS8yMCBidXQgd2l0aCBhIGNsZWFyIGFzc3VtcHRpb250aGF0IHRoZSBzY2hlbWUgd2lsbCBiZSBzZWxmIGZpbmFuY2luZyB3aXRoIHRoZSBjb3N0cyB0aGF0IHRoZSBDb3VuY2lsIGluY3VycyBiZWluZyBtZXQgZnJvbSB0aGUgc2FsZXMgcHJvY2VlZHMgZnJvbSB0aGUgcmVzaWRlbnRpYWwgYWNjb21tb2RhdGlvbiB0byBiZSBidWlsdCBvbiB0aGUgc2l0ZS4gCkluIE5vdmVtYmVyIDIwMTAsIHdoZW4gaGVyIHdhcyB3aXRoIENoZXIgYXQgYSBoYW5kIGFuZCBmb290cHJpbnQgY2VyZW1vbnkgaW4gSG9sbHl3b29kLCB0aGUgcmVhbGl0eSBzdGFyICAgd2hvc2UgZmF0aGVyIGlzIHRoZSBsYXRlIHNpbmdlciBTb25ueSBCb25vICAgbG9va2VkIHVuY29tZm9ydGFibHkgb3ZlcndlaWdodCBpbiBhIGJsYWNrIHN1aXQuClR3byBncm91cHMgd2VyZSBjcmVhdGVkIHZpYSBhIG1lZGlhbiBzcGxpdCBiYXNlZCBvbiB0aGUgZHVyYXRpb24gb2YgZ2FtZXBsYXk6IEhpZ2ggR2FtZXBsYXkgYW5kIExvdyBHYW1lcGxheS4gVGhlIEhpZ2ggR2FtZXBsYXkgZ3JvdXAgc2hvd2VkIGdyZWF0ZXIgaW1wcm92ZW1lbnQgb24gdmlzdWFsIG1lbW9yeSwgdmVyYmFsIG1lbW9yeSwgYSBtZWFzdXJlIG9mIGV4ZWN1dGl2ZSBmdW5jdGlvbmluZywgYXMgd2VsbCBhcyB0aGUgVG90YWwgQ2hhbmdlIFNjb3JlLiBUaGUgc3R1ZHkgc3VnZ2VzdHMgdGhhdCBwbGF5aW5nIGEgZGlnaXRhbCBhcnQgdmlkZW8gZ2FtZSBjb3VsZCBiZSBhIHZpYWJsZSBpbnRlcnZlbnRpb24gdG8gaW1wcm92ZSBjb2duaXRpdmUgZnVuY3Rpb25pbmcgaW4gb2xkZXIgYWR1bHRzLiAKTm93IHRoZSBxdWVzdGlvbiBpcyBpZiBzY2FubGF0b3JzIGZhbGwgaW50byB0aGlzIHNhbWUgY2F0ZWdvcnkgaW4gcmVnYXJkcyB0byBzZWxmIHByb21vdGlvbi4gVGhlIGFuc3dlciBpcyB5ZXMgYW5kIG5vLiAKVGhlIHBvc3NpYmlsaXR5IG9mIGEgZ3VlcnJpbGxhIHdhciB3b3VsZCBiZSB3aGF0IHdvcnJpZXMgbWUuIEhpc3RvcmljYWxseSwgdGhlIFVTIGhhcyBub3QgZmFyZWQgd2VsbCBpbiB0aG9zZS4gSSB0aGluayB0aGUgb25seSBndWVycmlsYSBzdHlsZSBpbnN1cmdlbmN5IHRoZSBVUyBoYXMgZXZlcnkgY29tcGxldGVseSBkZWZlYXRlZCB3YXMgaW4gdGhlIFBoaWxpcHBpbmVzIGluIHRoZSBlYXJseSAyMHRoIGNlbnR1cnkuIFdlIHdlcmUgaW5jcmVkaWJseSBsdWNreSBhZnRlciB0aGUgQ2l2aWwgV2FyIGFuZCBXb3JsZCBXYXIgSUkgdGhhdCB0aGUgbWlsaXRhcmllcyBvZiB0aGUgQ29uZmVkZXJhY3ksIE5hemkgR2VybWFueSwgYW5kIEphcGFuIGNob3NlIHRvIHN1cnJlbmRlciBlbiBtYXNzZSByYXRoZXIgdGhhbiBnbyB1bmRlcmdyb3VuZCBhbmQgY29udGludWUgdGhlIGZpZ2h0LgpUaGlzIHNjcmVhbXMgZm9yIGNoZWtob3YgZ3VuLCB0aGF0IHNvbWVob3cgdGhpcyB3aWxsIGJlIHVzZWZ1bCBpbiB0aGUgZnV0dXJlLCBlc3BlY2lhbGx5IGluIGEgbmVidWxvdXMgZ2FtZSBsaWtlIHRoYXQuIFRoZSBjb21tdW5pdHkgdHJpZWQgdG8gZmluZCBhIHVzZSBmb3IgeWVhcnMsIGV2ZW4gYWZ0ZXIgdGhlIGdhbWUgZGlyZWN0b3IgY29uZmlybWVkIHRoYXQgdGhlcmUgd2FzbiBhbnkgaGlkZGVuIGVmZmVjdC4KVW0sIG5vdGhpbmcgd2UgZG8gaXMgZ29pbmcgdG8gaGVscC4gSXQgYSBwcm9ibGVtIG9uIHlvdXIgZW5kLCBob25leS4gRXNwZWNpYWxseSBzaW5jZSB0aGV5IGp1c3QgcHJvdmlzaW9uZWQgdXMgZnJvbSBhIHBob25lIGxpbmUgKy4gRFNMIHRvIGEgZHJ5IGxvb3Agb25seS4KRm9yIGluc3RhbmNlLCBmb3JtZXIgU3RyYXR0b24gZmFybWVyIHR1cm5lZCBBcGFjaGUgSnVuY3Rpb24sIEFyaXpvbmEsIHJlc2lkZW50IENodWNrIEN1cmUgYW5kIGhpcyBmYW1pbHkgcmV0dXJuZWQgZm9yIGFub3RoZXIgeWVhciBvZiBkZW1vbnN0cmF0aW9ucyBhcyB0aGV5IGJyb3VnaHQgYWxvbmcgdGhlaXIgcGVyc29uYWwgY29sbGVjdGlvbiBvZiBnYWRnZXRzIHJhbmdpbmcgZnJvbSBhbiBhcHBsZSBwZWVsZXIsIGNoZXJyeSBwaXR0ZXIsIHBlYWNoIHBlZWxlciwgY29tbWVyY2lhbCBjYWJiYWdlIHNsaWNlciBhbmQgMTg5MCBibGFja3NtaXRoIGZvcmdlIGFuZCBlYXJseSAyMHRoIGNlbnR1cnkgaGFja3Nhdy4KSSBzdGFydCBnb29nbGluZyBiZWNhdXNlIEkgdGhpbmsgaXQgc2VlbXMgbGlrZSBpdCBjb3VsZCBiZSBhIG1lZGljYWwgY29uZGl0aW9uLCBub3QganVzdCBhbiB1bnNpZ2h0bHkgdGhpbmcuIEkgZmluZCBvdXQgYWJvdXQgcHRvc2lzLCB0ZWxsIG15IG1vbS4gU2hlIHJlbWVtYmVycyB0aGUgZG9jdG9yIHRlbGxpbmcgaGVyIGFib3V0IGl0IHdoZW4gSSB3YXMgYSBraWQgZmFjZXBhbG1zLiAKRGEgd2lyIGtlaW5lIEFsbCBpbmNsdXNpdmUgUGF1c2NoYWwgVG91cmlzIHNpbmQsIGRpZSBzaWNoIGFiIFVybGF1YnNhbnRyaXR0IGluIGRpZSBPYmh1dCBlaW5lciBkZXV0c2Noc3ByZWNoZW5kZW4gUmVpc2VsZWl0ZXJpbiBmbCBoYWJlbiB3aXIgZGllIEhlcmF1c2ZvcmRlcnVuZyBhY2ggbmVlLCBkYXMgc2FndCBtYW4gamEgamV0enQgbmljaHQgbWVociwgenUgYWJnZWRyb3NjaGVuLiBKZXR6dCBzcHJpY2h0IG1hbiB2b24gT3Bwb3J0dW5pdHkgISEgZGVyIEFucmVpc2UgbmF0IG1pdCBCcmF2b3VyIGJlc3RhbmRlbi4gRGFmIG11c3N0ZW4gd2lyIG51ciBlaW5lbiBrbGl0emVrbGVpbmVuIG1laHJzdCBVbXdlZyBpbSBSZWlzZWJ1cyBuYWNoIEFnaW9zIEtvbnN0YW50aW5vcyBoaW50ZXIgdW5zIGJyaW5nZW4sIHVtIGRhbm4gZW5kbGljaCBlaW5lIEYgbmFjaCBTa2lhdGhvcyBiZXRyZXRlbiB6dSBrIERpZSBSZWlzZSBoIHNpY2ggdW0gbWluZGVzdGVzIHp3ZWkgU3R1bmRlbiB2ZXJrIHdlbm4gZGVyIEJ1cyBuaWNodCBhbiBqZWRlciBaaWVnZW5taWxjaGthbm5lIGdlaGFsdGVuIGggdW0gZWluIEIgaW5zIHdlaXRlIE5pY2h0cyB6dSBlbnRsYXNzZW4uIEFiZXIgc28gbGVybnQgZGVyIG5vY2ggZXR3YXMgbGVpY2h0IEZlcm5yZWlzZW5kZSB3ZW5pZ3N0ZW5zIHNjaG9uIG1hbCBkaWUgZXJzdGUgTGVrdGlvbiBpbSBFbnRzY2hsZXVuaWdlbi4gV2VubiBhdWNoIHdpZGVyd2lsbGlnIHVuZCBuaWNodCBvaG5lIHNlaW5lbiBSZWlzZXBhcnRuZXIgYmVpIGplZGVtIEhhbHQgZWluZSBuZXVlIE1ldGhvZGUgenVyIEVmZml6aWVuenN0ZWlnZXJ1bmcgZGVyIFRyYW5zcG9ydGxvZ2lzdGlrIGFtIEJlaXNwaWVsIGRlcyBncmllY2hpc2NoZW4gbmFoZSB6dSBicmluZ2VuLgpCZXNpZGVzIHRoZSBvYnZpb3VzIHVzZSBpbiBpbGxuZXNzLCBSZWlraSBhY3RpdmVseSBwcm9tb3RlcyB0aGUgaGVhbGluZyBwcm9jZXNzIGluIG1hbnkgb3RoZXIgd2F5cy4gUmVpa2kgYWN0cyBub3Qgb25seSBvbiB0aGUgcGh5c2ljYWwgbGV2ZWxzLCBidXQgYWxzbyBhZGRyZXNzZXMgbWVudGFsLCBlbW90aW9uYWwsIGFuZCBlbmVyZ2V0aWMgaW1iYWxhbmNlcy4gUmVpa2kgaGFzIGEgc2ltaWxhciBlZmZlY3Qgb24gdGhlIGJvZHkvbWluZCBhcyBtZWRpdGF0aW9uLiBSZWlraSBwcm9tb3RlcyBwZXJzb25hbCBzcGlyaXR1YWwgZ3Jvd3RoLCBleHBhbmRzIGNvbnNjaW91c25lc3MgYW5kIHN0aW11bGF0ZXMgaW50dWl0aXZlLCBzcGlyaXR1YWwgYW5kIGNyZWF0aXZlIGF3YXJlbmVzcy4KSGUgY2hlYXRlZCB3aXRoIGhlciBiZXN0IGZyaWVuZCB3aGlsZSBzaGUgd2FzIGluIHRoZSBob3VzZSBhbmQgY2F1c2VkIGEgbWFzc2l2ZSBkb3VidCBvbiBoZXIgc2lkZSwgd2hlcmUgc2hlIGNvdWxkIG5vdCB0cnVzdCBoaW0gYW55IG1vcmUuIE15IG11bSByZWFsbHkgd2FudGVkIGEgc2Vjb25kIGNoaWxkIHNvIGV2ZW4ga25vd2luZyB0aGF0IHRoZSBtYXJyaWFnZSB3b3VsZG4gbGFzdCBrZXB0IHRyeWluZyBhbmQgaGFkIG1lLi4gCk91ciBob3RlbCBzaHV0dGxlIGRvZXMgbm90IGRyb3Agb2ZmIGRpcmVjdGx5IGF0IFN1bW1lcmZlc3QsIGhvd2V2ZXIsIG91ciBzaHV0dGxlIGxlYXZlcyB0aGUgaG90ZWwgZXZlcnkgaG91ciBvbiB0aGUgaG91ciBhbmQgZHJvcHMgb2ZmIGF0IHRoZSBsb2NhbCBwYXJrIGFuZCByaWRlLiBGcm9tIHRoZXJlLCBvdXIgZ3Vlc3RzIGNhbiB1dGlsaXplIHB1YmxpYyB0cmFuc2l0IGJ1c2VzIGZvciAkNi41MCBhIHBlcnNvbiAoZXhhY3QgY2hhbmdlIHJlcXVpcmVkKS4gCkFub255bW91cyBhdCBBbHRlck5ldCBleHBsYWlucyB3aHkgaGUgYWdyZWVkIHRvIGJlIGEgYmVuZCBvdmVyIGJveWZyaWVuZCBhbmQgd2hhdCB0aGUgZXhwZXJpZW5jZSB3YXMgbGlrZS4gSGlzIGZpcnN0IHRpbWUgZGlkbiBnbyB0aGF0IHdlbGwsIGJ1dCB0aGUgc2Vjb25kIGZpcnN0IHRpbWUgbXkgZ2lybGZyaWVuZCBmdWNrZWQgbWUgaW4gdGhlIGFzcyBpdCB3YXMgd2l0aCBhIHNtYWxsIHB1cnBsZSBzdHJhcCBvbiBkaWxkbyB0aGF0IGhlciBleCBnaXJsZnJpZW5kIGhhZCBzaGlwcGVkIGZyb20gT2hpby4gTGlrZSBhbnkgbGFkeSBzaG91bGQgYmVmb3JlIHRha2luZyBoZXIgbWFuIGFuYWwgdmlyZ2luaXR5LCBteSBnaXJsZnJpZW5kIHRvb2sgbWUgZm9yIGEgbmlnaHQgb24gdGhlIHRvd24gYmVmb3JlaGFuZC4gV2Fsa2luZyBob21lLCBhZnRlciBkaW5uZXIgYW5kIGEgbG9uZyBzdG9wIGF0IGEgYmFyLCB3ZSBkZWNpZGVkIGl0IHdhcyBhYm91dCB0aW1lIEkgbWFkZSBnb29kIG9uIGFuIGVhcmxpZXIgcHJvbWlzZSB0byBsZXQgaGVyIHNjcmV3IG1lIGZvciBhIGNoYW5nZS4KVGhhdCdzIHdoeSBJIGNhbGwgb24geW91IG5vdCB0byB3YXN0ZSB5b3VyIHRpbWUgZm9yIHNlYXJjaGluZyBhbmQgc3R1ZHlpbmcgdGhlIHVzZWxlc3Mgc3RyYXRlZ2llcy4gCldlJ3ZlIGdvdCBJbmRpYSB0aGVzZSBkYXlzIHdpdGggYWxsIHRoZSBtb25leSBhbmQgdGhlIGV5ZWJhbGxzIHRoYXQgd2F0Y2ggdGhlbSBwbGF5LCBidXQgaW4gcHVyZSBjcmlja2V0IHRlcm1zLCB0aGUgQXNoZXMgaXMgdGhlIGJpZ2dlc3Qgc2VyaWVzIG91dCBvZiBhbnkgaW4gdGhlIHdvcmxkLiAKQnV0IEFsbGVuIGxpa2VkIHRoZSBlZmZlY3QgaGVyIGxpdHRsZSBleHBlcmltZW50IGhhZCBvbiBoZXIgaGFpciwgaWYgbm90IGhlciBzY2FscCwgc28gc2hlJ3Mgc3RpbGwgYXZvaWRpbmcgc2hhbXBvby4gU2hlJ3Mgbm93IHR3byB5ZWFycyBpbnRvIGhlciBubyBzaGFtcG9vIHZlbnR1cmUsIGFuZCBhcGFydCBmcm9tIGJha2luZyBzb2RhLCBzaGUncyBhbHNvIHRyaWVkIGdvaW5nIGNvbmRpdGlvbmVyIG9ubHkuIApTdXJlLCB5b3UgY2FuIGNyaXRpY2l6ZSBoaW0gZm9yIGFueXRoaW5nIHlvdSB3YW50LiAKQSAic3RyaW5nIGJldCIgaXMgYSBiZXQgdGhhdCBpbml0aWFsbHkgbG9va3MgbGlrZSBhIGNhbGwsIGJ1dCB0aGVuIHR1cm5zIG91dCB0byBiZSBhIHJhaXNlLiAKWW91IGVpdGhlciBnb2luZyB0byBjaGFuZ2UsIG9yIHdlIGFsbCBnb2luZyB0byBkaWUuIEFuZCB0aGUgcGVvcGxlIGxpa2UgbWUgb3V0IHRoZXJlIGtub3cgdGhhdCBPVVIgbGl2ZXMgYXJlIGF0IHN0YWtlIHRvbywgYW5kIHRoYXQgd2UgZG9uIGhhdmUgbXVjaCB0aW1lIHRvIGFjdC4gClRoZSBJbm4gaXNuJ3Qgc2V0IHVwIHdpdGggdGhvc2UgZmFjaWxpdGllcyB0byBoYW5kbGUgdGhhdCBtYW55IGZvciBicmVha2Zhc3QuIAoiVGhpcyBpcyBiZWNhdXNlIGJyZWFjaGVzIGZyZXF1ZW50bHkgb2NjdXIsIHdpdGggcmVnYXJkIHRvIGxvY2F0aW9uOyBhY2Nlc3MgYnkgbWVtYmVycyBvZiB0aGUgcHVibGljOyBhZHZlcnRpc2luZzsgY2hhcmdpbmcgYW4gZW50cmFuY2UgZmVlIG9yIG1ha2luZyBhIGxldnkgb24gc3Rha2VzIG9yIHdpbm5pbmdzOyBhbmQgZW5jb3VyYWdpbmcgcGVvcGxlIHRvIHRoZSBwcmVtaXNlcyBwcmltYXJpbHkgdG8gdGFrZSBwYXJ0IGluIGdhbWJsaW5nLgpUaGUgc2VjdXJpdHkgb2ZmaWNpYWxzIHdpbGwgbWluZSB0aGVpciByZXNwZWN0aXZlIHJlY29yZHMgdG8gZ2V0IGEgZnVsbGVyIHBpY3R1cmUgb2Ygd2hhdCB0aGV5J3JlIGRlYWxpbmcgd2l0aCBhbmQgZmlndXJlIG91dCBhIHJlc3BvbnNlLCB3aGljaCBjb3VsZCByYW5nZSBmcm9tIHNvZnQgbWVhc3VyZXMgbGlrZSBpbnRlcnZlbnRpb25zIGFuZCBwYXNzcG9ydCBzZWl6dXJlcyB0byBhcnJlc3RzIGFuZCBjaGFyZ2VzLgpNSDogV2UgZ290IHRoZSBWb2x0YWdlIEdpcmxzIGluIGF0dGVuZGFuY2UgdGhpcyBldmVuaW5nLCBvbmUgb2Ygd2hvbSBpcyBjdXJpb3VzIGFzIHRvIHdobyB0aGUgdHdvIGxhcHRvcCBnZWVrcyBhdCB0aGUgYmFyIGFyZS4geW91IGd1eXMgZG9pbmcgeW91ciBob21ld29yaz8gc2hlIGFza3MuIFJlYWxpemluZyB0aGF0IG5laXRoZXIgb2YgdXMgaGFzIGFueSBjaGFuY2Ugb2YgaW1wcmVzc2luZyBoZXIsIHdlIHRlbGwgaGVyLCB5ZXMsIHdlIGFyZSBkb2luZyBvdXIgaG9tZXdvcmsuClRoZXJlIGFyZSBodW5kcmVkcyBvZiBzdWIgdmFyaWF0aW9ucyBpbiB0aGUgTWVkaXRlcnJhbmVhbiBsaW5lIGFkanVzdGVkIHRvIGVhY2ggY291bnRyeSdzIGxpa2luZy4gCkFoYSwgbm8gSSBtZWFudCB3aGF0IEkgc2FpZCwgYW5kIGZ1Y2sgeW91ciAiYnV6endvcmRzIiwgdGhlc2UgYXJlIGFsbCBkZXNjcmlwdG9ycyBJJ3ZlIGhlYXJkIHRocm91Z2hvdXQgbXkgZW50aXJlIGxpZmUgbG9sLiBBbmQgImp1bmdsZSBmZXZlciIgd2FzIGFjdHVhbGx5IGEgZGlyZWN0IHF1b3RlIGZyb20gYSBjb21tZW50IEkgcmVhZCBoZXJlLiBUaGUgaXNzdWUgaXNuJ3QgdGhhdCB0aGV5IGZpbmQgcG9vciwgb3ZlcndlaWdodCB3b21lbiB1bmF0dHJhY3RpdmUuIApCaWJiIHNhaWQ6ICJUaGlzIGlzIHRoZSBjYXBzdG9uZSBvZiBoaXMgW011cmRvY2gnc11jYXJlZXIgYXMgdGhlIG51bWJlciBvbmUgbWVkaWEgbW9ndWwgaW4gdGhlIHdvcmxkIHJpZ2h0IG5vdyBhbmQgaXQgd2FzIHNvbWV0aGluZyB0aGF0IGhlIGhhcyB3YW50ZWQgdG8gZG8gZm9yIGEgdmVyeSBsb25nIHRpbWUiLgpJZiB5b3UgZmluZCB0aGF0IHRoZSBiYWJ5IG9pbCBpcyBtYWtpbmcgdGhlIGhhaXIgdG9vIHNsaXBwZXJ5IHRvICdkcmVhZCcsIGJsb3Qgb3V0IHNvbWUgZXhjZXNzIG9pbC4KTGVhcm4gd2hhdCBoaXMgdHJpZ2dlcnMgYXJlIGFuZCBiZSB0aGVyZSBwYXNzaXZlbHkgYXMgYSBzdXBwb3J0aW5nIHZvaWNlIGluc3RlYWQgb2YgdHJ5aW5nIHRvICJhY3RpdmVseSIgY29udHJvbCBoaXMgYWN0aW9ucy4gCkFjY2VwdGluZyBhbmQgbG92aW5nIG90aGVyIHBlb3BsZSB3aGVyZSB0aGV5IGFyZSBpbiBsaWZlLCBldmVuIGlmIGl0IGEgYmFkIHBsYWNlLCBoZWxwcyBtZSBiZSBtb3JlIG9wZW4gYW5kIGFjY2VwdGluZyB0byB0aGUgcGVvcGxlIGluIG15IHBlcnNvbmFsIGxpZmUsIGFuZCB0byBteXNlbGYuIEkgaGF2ZSBhIGNvcmUgcmVsaWdpb3VzIGJlbGllZiB0aGF0IGdvZCBsb3ZlcyBldmVyeW9uZSwgZXZlbiB0ZXJyb3Jpc3QuLiAKQmV3YXJlIG9mIHRoZXJhcGlzdHMgdGhhdCBjbGFpbSB0byBiZSBhYmxlIHRvIGRvIGl0IGFsbC4gCk5vdyBJIGN1cmlvdXMgdGhvdWdoLiBUaGUgY2FibGUgaXMgYWxzbyBzb21ldGltZXMgY2FsbGVkIERJTiBjYWJsZSBpbiBHZXJtYW4gYW5kIEkgcHJldHR5IHN1cmUgSSBoZWFyZCB0aGUgc3RhbmRhcmRpc2VkIHNsb3RzIGZvciBjYXIgcmFkaW9zIGJlaW5nIGNhbGxlZCBESU4gc2xvdHMgYXMgd2VsbC4gCkFxdWEgcmVnaWEgKExhdGluLCBsaXQuICJyb3lhbCB3YXRlciIpLCBhcXVhIHJlZ2lzIChMYXRpbiwgbGl0LiAKRm9yIExvdHosIHRoZSB2aWJlIG5lZWRlZCB0byBpbmNsdWRlIG1vcmUgdGhhbiB3aGF0IHdhcyBqdXN0IGluIHRoZSBnbGFzcy4KSGVyZSdzIHdoeTogVGhlcmUgYXJlIDUyIGNhcmRzIGluIGEgZGVjaywgMTMgZGlmZmVyZW50IHZhbHVlIGNhcmRzIChBLCAyLCAzLCBldGMuKSwgYW5kIHR3byBjYXJkcyBhcmUgZGVhbHQuIApEb24gYmUgYW4gYXNzaG9sZS4uIApJbiBTcGFuaXNoLCB2b3MgdXNlZCB0byBiZSB0aGUgImZvcm1hbCB5b3UiLCAodGhlIFYgaW4gdGhlIFQgViBkaXN0aW5jdGlvbikgYnV0IGl0IHdhcyByZXBsYWNlZCBieSB1c3RlZC4gCkxvb2sgaW4gYXJjaGl2ZXMgZm9yIHNvbWUgcG9rZXIgZm9ydW1zLCBldmVyeSB5ZWFyIHNvbWVvbmUgd2lsbCBzYXkgaXQncyBhIHRlcnJpYmxlIHllYXIuIFBlb3BsZSBpbiAyMDEwIGNvbXBsYWluZWQgaG93IHNvZnQgMjAwOCB3YXMsIDIwMDggY29tcGxhaW5lZCBhYm91dCAyMDA2LgpEZWt1IGhhcyBub3RoaW5nIHRoYXQgaGUgY2FuIHVzZSB0byBkZWZlbmQgYWdhaW5zdCBiZWluZyB3ZWJiZWQgdXAgYXNpZGUgZnJvbSBjb250aW51b3VzbHkgYnJlYWtpbmcgaGlzIGZpbmdlcnMgZm9yIHdpbmQgYmxhc3RzLiAKSSBhbHNvIGRpZCBub3QgdGVzdCB0aGUgZnJvbnQgZmFjaW5nIGNhbWVyYSBidXQgSSBpbWFnaW5lIHJlc3VsdHMgYXJlIHByZXR0eSBzaW1pbGFyLkNvbGRBc0hlYXZlbiAgMjcxIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29UaGlzIG1ha2VzIHNlbnNlLiAKQWZ0ZXIgRXJlbiBnZXQgdG8gc2VlIHRoZSBwbGFuIGZyb20gWW1pciwgaGUgd2FrZXMgdXAgYW5kIGNyaWVzLiBBbmQgd2hlbiBoZSBzZWVzIE1pa2FzYSBoZSBldmVuIGFza3MgaGVyIHdoeSBoZXIgaGFpciBpcyBzbyBsb25nLiBXaGljaCBtYWtlcyBzZW5zZSBzaW5jZSBoZSBzYXcgWW1pciBwbGFuIHRoYXQgaGUgZXhlY3V0aW5nIGluIHRoZSBmdXR1cmUuIApQb2tlckJvdFByb2dyYW1tZXIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KTWVtb3JpemluZyBlYWNoIG9mIHRoZXNlIGlzIGZvdW5kYXRpb25hbCB0byBiZWluZyBhYmxlIHRvIG91dCBwbGF5IHlvdXIgb3Bwb25lbnQuIApBY2NvcmRpbmcgdG8gdGhlIHBhcnR5IHBsYXRmb3JtLC4gClZpZGVvIGdhbWVycyBhbmQgcG9rZXIgcGxheWVycyBhcmUgbm90IG11dHVhbGx5IGV4Y2x1c2l2ZSBpbmRpdmlkdWFscy4gSW4gZmFjdCwgaXQgaXMgbm90IHVuY29tbW9uIGZvciBwcm9mZXNzaW9uYWwgZ2FtZXJzIHRvIHRyYW5zaXRpb24gdG8gcG9rZXIgd2hlbiB0aGV5IGZpbmlzaCBjb21wZXRpbmcgaW4gdGhlaXIgY2hvc2VuIHRpdGxlcyBXaXRoIGluZm9ybWF0aW9uIGdhaW5lZCB0aHJvdWdoIHdvcmsgd2l0aCBMdXNrZSwgUmF6ZXIgcGxhbnMgdG8gYXBwbHkgaXRzIGNvbXBldGVuY2UgaW4gY3JlYXRpbmcgcHJvZHVjdHMgZm9yIGUgU3BvcnRzIHN1Y2Nlc3MgdG8gb3RoZXIgdHlwZXMgb2Ygb25saW5lIGdhbWVzLCBzdWNoIGFzIHBva2VyLi4gClRoaXMgaXMgdGhlIG9ubHkgbXVzaWNhbDogdGhlIG1vdXRoLiAKVGhleSB3b3VsZCBkaXZpZGUgdGhlIHRpY2tldHMgYXQgYSJ0aWNrZXQgZHJhZnQiIGF0IGhpcyBob3VzZS4gIkV2ZXJ5b25lIGluIHRoZSBncm91cCBwYWlkIG1lIGZvciB0aGVpciB0aWNrZXRzIGJhc2VkIG9uIHRoZSBjb3N0IG9mIHRoZSB0aWNrZXRzLCB0byB0aGUgZG9sbGFyLCIgaGUgd3JvdGUuIApGYWlyLCBidXQgeW91IHNob3VsZCBrbm93IHdoYXQgImhvbW9nZW5vdXMiIGdlbmVyYWxseSByZWZlcnMgdG8gd2hlbiB1bnNwZWNpZmllZCBhbmQgSSBub3QgZ29pbmcgdG8gZGlnIGludG8geW91ciBjb21tZW50IGhpc3RvcnksIEkgbm90IHRoYXQgbXVjaCBvZiBhIGRpY2toZWFkLkkgdGhpbmsgaXQgYSBjaGlja2VuIGJlZm9yZSB0aGUgZWdnIHNpdHVhdGlvbiwgd2h5IGNhbiBjb21tdW5pc20gKGEgc29jaWV0eSB3aGVyZSBlYWNoIGdpdmVzIHdoYXQgdGhleSBjYW4gYW5kIHJlY2VpdmVzIHdoYXQgdGhleSBuZWVkLCBhbiBlY29ub215IGJhc2VkIGFyb3VuZCB0aGUgZnVsZmlsbG1lbnQgb2YgbmVlZCkgYmUgdGhlIHRoaW5nIHNvY2lldHkgaXMgd29ya2luZyB0b3dhcmRzLCBJIHdvdWxkIGFyZ3VlIHdlIGFscmVhZHkgYXJlLiAKIk1vbnN0ZXJhcywgcGhpbG9kZW5kcm9ucywgZmlkZGxlIGxlYWYgZmlncywgc25ha2UgcGxhbnRzLCBiaXJkcyBvZiBwYXJhZGlzZSB0aGV5J3JlIGFsbCBpbmNyZWRpYmx5IHBvcHVsYXIsIiBzYXlzIGNvIG93bmVyIExpbmRzYXkgQnVya2UuICJJdCdzIGJyaW5naW5nIGEgYml0IG9mIG5hdHVyZSBpbnNpZGUsIHNvbWV0aGluZyBhbGl2ZSBpbiB5b3VyIGhvdXNlIHRoYXQncyBub3QgYSBkb2cgb3IgYSBjYXQuIgpKU08gc2FpZCBpbnZlc3RpZ2F0b3JzIGFyZSBzdGlsbCBob3Bpbmcgc29tZW9uZSB3aWxsIGNvbWUgZm9yd2FyZCB3aXRoIGluZm9ybWF0aW9uIHRvIGhlbHAgdGhlbSBzb2x2ZSB0aGUgY2FzZSBhbmQgcmVjb3ZlciBMb256aWUncyBib2R5LiBDcmltZSBTdG9wcGVycyBpcyBvZmZlcmluZyBhICQxMiw4MDAgcmV3YXJkIGZvciBhIHRpcCB0aGF0IGxlYWRzIHRvIHRoZSBjaGlsZCdzIHJlbWFpbnMuCkFsdGhvdWdoIEkgaGF2ZSBmcmllbmRzIHdobyd2ZSBwbGF5ZWQgcHJvZmVzc2lvbmFsbHkgZm9yIHllYXJzIG5vdyAgIGFuZCBsb3ZlIGl0ICAgdGhhdCBsaWZlIGlzIG5vdGhpbmcgbGlrZSB5b3UgcHJvYmFibHkgdGhpbmsuIEZvciBpbnN0YW5jZSAuCiJPd25pbmcgYSBmb290YmFsbCBjbHViIGdhdmUgdGhlbSBhbiBpbnNpZ2h0IGludG8gdGhlIHdheSB0aGUgUHJlbWllciBMZWFndWUgd29ya2VkLiBTdG9rZSBDaXR5LCBub3Qgc28gc3VjY2Vzc2Z1bCBpdHNlbGYsIGhhcyBwbGF5ZWQgdGVhbXMgdGhhdCByZWFsbHkgYXJlLCIgaGUgc2F5cy4KSFBGRiB3YXMgbGl0ZXJhbGx5IHRoZSBmaXJzdCB0aGluZyBJIHdvdWxkIG9wZW4gZXZlcnkgZGF5IHdoZW4gSSBnb3QgaG9tZS4gSSBwcmFjdGljYWxseSBsaXZlZCBvbiB0aGUgZm9ydW1zLiBJIGZvdW5kIHRoZSBzaXRlIHdoZW4gSSB3YXMgYSBsb25lbHkgMTIgeWVhciBvbGQsIGFuZCA2IG1vbnRocyBsYXRlciBpdCBoYWQgYmVjb21lIGludGVncmFsIHRvIG15IGlkZW50aXR5LiBJIGxvdmVkIHRoZSB3cml0aW5nLCBhbmQgdGhlIHNlbnNlIG9mIGV4cGxpY2l0IGNvbW11bml0eSBhbmQgYSBmYW1pbHkgaXQgd2FzIHRvIGFsbCBvZiB1cy4KVGhvdWdodGNvdXJpZXIgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KUmV0aGlua2luZyBsb2NhbCBwcm9kdWN0aW9uSW1hZ2luZSBjaXRpZXMgZXF1aXBwZWQgd2l0aCBmbGV4aWJsZSBmYWN0b3JpZXMgdXNpbmcgbG9jYWwgc3VwcGx5IGNoYWlucyBhbmQgbG9jYWxseSBzb3VyY2VkIG1hdGVyaWFscy4gVGhlc2UgZmFicmljYXRpb24gc2l0ZXMgdXNlIHdhc3RlIG1hdGVyaWFscywgZGlzYXNzZW1ibGVkIGNvbXBvbmVudHMgYW5kIG90aGVyIHNvdXJjZXMgdG8gbWFudWZhY3R1cmUgcHJvZHVjdHMgZGlnaXRhbGx5IGFuZCBjdXN0b21pc2VkIGZvciBjaXRpemVucy4gRnJvbSBwcm9zdGhldGljIGxpbWJzIHRvIHBsYXN0aWMgd2FzdGUgdXNlZCB0byBjcmVhdGUgc2VhdGluZyBpbiBjaXR5IHBhcmtzLCB0byB5ZXMsIGEgZnJpZGdlLCB0aGVyZSBhcmUgYW4gaW5jcmVhc2luZyBudW1iZXIgb2YgcHJvZHVjdHMgYmVpbmcgbWFudWZhY3R1cmVkIGJ5IGxvY2FsIGVudHJlcHJlbmV1cnMuClRoZXJlJ3MgaGlzIGZhbWlseTogaGlzIDQxICB5ZWFyIG9sZCB3aWZlIGFuZCB0aHJlZSBjaGlsZHJlbiwgdGhlIG9sZGVzdCBvZiB3aG9tIHdvcmtzIGF0IEJyb3duJ3MuIApFZGl0OiBGb3IgdGhvc2Ugb2YgeW91IHdvbmRlcmluZywgdGhpcyB3YXMgYSAyIGhvdXIgbG9uZyBtYXRjaCBpbiBDcF9Qb3dlcmhvdXNlLiBJdCB3YXMgaW5zYW5lLiAKSSB3b2tlbiB1cCB0byBmaW5kIEkgc2xpZCBkb3duIHRpbGwgSSBzY3J1bmNoZWQgaW4gdGhlIGZldGFsIHBvc2l0aW9uIGF0IHRoZSBmb290IG9mIHRoZSBiaXZ5IHdoZW4gSSBzbGVlcGluZyBvbiBhIHNsb3BlIGJlY2F1c2UgSSBzbG93bHkgcm9kZSBteSBwYWQgYWxsIHRoZSB3YXkgZG93bi4gCjExLiBZb3VyIHBvc3QvY29tbWVudCB3aWxsIGxpa2VseSBiZSByZW1vdmVkIGlmIGl0IGlzIHJhY2lzdCwgc2V4aXN0LCB2aXRyaW9saWMsIG9yIG92ZXJseSBjcnVkZQpCdXQgdW5saWtlIG1vc3QgZGlzY2lwbGluZXMsIGl0IGFsc28gcHJvdmlkZXMgdGhlIHRvb2xzIHRvIHVuY292ZXIgdGhlIHBvd2VyIGJlaGluZCBvdXIgY2xhaW1zLCB0byBiZSByZWZsZXhpdmUgYWJvdXQgdGhlIHNvcnQgb2Yga25vd2xlZGdlIHdlIHByb2R1Y2luZy4gCkxhZHkgR2FHYSksIENoYW5naW5nU2tpZXMsIERvIE1lIFJpZ2h0IChmZWF0LiAKVGhpcyBpcyB2ZXJ5IGltcG9ydGFudCBmb3IgYW55IHdvbWFuIHdobyBoYXMgYSBraWRuZXksIGhlYXJ0LCBvciBsaXZlciBwcm9ibGVtLi4gCkEgUmV2aWV3IG9mIHRoZSBUZXhhcyBIb2xkIEVtIFBva2VyIENoaXAgU2V0ClRoZSBvbmx5IGJsaW5kIChmb3IgaW50ZXJuYXRpb25hbCBzdHVkZW50cykgY29sbGVnZXMgSSBrbm93IGFyZSB0aGUgdG9wIHRvcCB0aWVyIG9uZXMgbGlrZSBIYXJ2YXJkIFlhbGUgYW5kIFByaW5jZXRvbiBldGMuLCBzby4uIApTaGUgY2FsbGVkIG1lIGFuZCBhc2tlZCB3aHkgYSB3aGl0ZSB0cnVjayB3YXMgcHVsbGluZyBpbiBhbmQgb3V0IG9mIG91ciBkcml2ZXdheS4gClRoYXQgc2NyZWFtICJhcnJlc3QgbWUiIGluY2x1ZGUgd29ya2luZyBmb3IgaW1taWdyYXRpb24gcmlnaHRzIGdyb3VwcyBhbmQgYW55dGhpbmcgaW52b2x2aW5nIHRha2luZyBjYXJlIG9mIHdoaXRlIHBlb3BsZXMgaG9tZXMgb3IgZmFtaWxpZXMuLiAKSSBjb3VsZG4gaW1hZ2luZSBhIGJpZ2dlciB3YXN0ZSBvZiB0aW1lLiBBIGxvdCBvZiB0aGVzZSBwZW9wbGUgZHJvdmUgbmljZSBjYXJzIGFuZCBjbGVhcmx5IGhhZCBkZWNlbnQgam9icywgd2h5IHRoZSBoZWxsIHdvdWxkIHRoZXkgd2FzdGUgdGhhdCBtdWNoIHRpbWUgc3RhbmRpbmcgaW4gbGluZSBmb3IgJDUvaHIgd29ydGggb2YgZnJlZSBkb3VnaG51dHM/LiAKU3RhdGVzLCBidXQgdGhhdCBzaW1wbHkgZG9lc24ndCBtYXR0ZXIuIEJvcmRlciBpcyBmZWRlcmFsbHkgY29udHJvbGxlZCBhbmQsIHVuZGVyIHRoZSBmZWRlcmFsIENvbnRyb2xsZWQgU3Vic3RhbmNlcyBBY3QsIGN1bHRpdmF0aW9uLCBwb3NzZXNzaW9uIGFuZCBkaXN0cmlidXRpb24gb2YgY2FubmFiaXMgcmVtYWluIGlsbGVnYWwuLiAKUmVwdWJsaWNhbiBDb3VudHkgQ291bmNpbG1hbiBLZW9sYSBDaGlsZHMgcGxlYWRlZCBndWlsdHkgdG8gbW9sZXN0aW5nIGEgbWFsZSBjaGlsZC4KSG93ZXZlciwgSSBkb24ndCBrbm93IGhvdyBtdWNoIGNvZGV4IGFuZCBydWxlIGJvb2tzIHJlcHJlc2VudCBpbiB0aGVpciBidXNpbmVzcyBtb2RlbCwgc28gaXQgY291bGQgYmUganVzdCBhIHBoYW50YXNtIHRoYXQgd291bGQgbmV2ZXIgaGFwcGVuLgpIdW5nYXJ5Zm9yY2hpbGUgIDc0NSBwb2ludHMgIHN1Ym1pdHRlZCAyIHllYXJzIGFnbwpNYW55IG9mIHRob3NlIGNvdW50cmllcyBoYXZlIHZhc3RzIG51bWJlciBvZiByZXNvdXJjZXMsIHZhc3QgZW1wdHkgbGFuZHMgaW5jbHVkaW5nIGVtcHR5IGRlc2VydHMgYW5kIGxvbmcgc2hvcmVsaW5lcy4gCkxpbWl0IG15IHNlYXJjaCB0byByL1Rvb0FmcmFpZFRvQXNrdXNlIHRoZSBmb2xsb3dpbmcgc2VhcmNoIHBhcmFtZXRlcnMgdG8gbmFycm93IHlvdXIgcmVzdWx0czpzZWUgdGhlIHNlYXJjaCBmYXEgZm9yIGRldGFpbHMuCldoZW4gYSByZXBvcnQgaXMgZmlsZWQsIGl0IHdpbGwgYmUgcm91dGVkIHRvIGFuIGFwcHJvcHJpYXRlIHVuaXZlcnNpdHkgY29udGFjdApCZWluZyBsYXRlIHdhcyBva2F5IGJ1dCBiZWluZyBhYnNlbnQgd291bGQgZ2V0IHlvdSBwdW5pc2hlZC4gSG93ZXZlciwgdGhlIHJlYWxpdHkgb2YgdGhlIHNpdHVhdGlvbiBxdWlja2x5IGJlY2FtZSBhcHBhcmVudC4gClRoZXJlIGFyZSBjdWx0dXJhbCBwcm9ibGVtcyBpbiBwb29yIGJsYWNrIGNvbW11bml0aWVzIHRoYXQgYXJlIHN0YXJrbHkgcmVmbGVjdGVkIGluIHBvb3Igd2hpdGUgY29tbXVuaXRpZXMuIFRoZXJlIGFyZSBhIGdyZWF0ZXIgbnVtYmVyIG9mIHdoaXRlIHBlb3BsZSB3aG8gZG9uIGZhY2UgdGhvc2UgY3VsdHVyYWwgcHJvYmxlbXMgYW5kIHRoZXJlZm9yZSBwZW9wbGUganVkZ2UgZWFjaCByYWNlIGFzIGEgd2hvbGUgYW5kIHNheSB0aGF0IHRoZXJlIGlzIGluZXF1YWxpdHkgdGhhdCBpcyBiYXNlZCB1cG9uIHJhY2UsIHRoZW4gZmluZCBvbGQgcG9saWNpZXMgdGhhdCBjb3VsZCBoYXZlIGFuIGltcGFjdCBvbiBtb2Rlcm4gZGF5IGJsYWNrIEFtZXJpY2FucyBzdWNoIGFzIHJlZGxpbmluZy4gQnV0IHJlZGxpbmluZyBlZmZlY3RzIGFyZSBkaWx1dGVkIG92ZXIgdGltZS4gV2UgYXJlIGF0IHRoZSBwb2ludCB3aGVyZSB0aGUgbWFqb3JpdHkgb2YgaW5lcXVhbGl0eSBvZiBvdXRjb21lIGlzIGR1ZSB0byB0aGUgYmFkIGN1bHR1cmUgdGhhdCBlZmZlY3RzIGJsYWNrIEFtZXJpY2FucyBhdCBhIGhpZ2hlciByYXRlIHRoYW4gaXQgZWZmZWN0cyB3aGl0ZSBBbWVyaWNhbnMuCk9uZSBQcmVtaWVyc2hpcCBwbGF5ZXIgdG9sZCBNciBMYXc6ICJJIGhhdmUgbG9zdCBhIGxvdCBhbmQgSSBoYWQgYSBzdGlua2VyIGJlY2F1c2UgaXQncyBhbGwgSSB0aG91Z2h0IGFib3V0IGR1cmluZyB0aGUgZ2FtZS4iCk9uIG15IDExdGggYmlydGhkYXkgd2hpY2ggSSBoYWQgaW4gdGhlIHN1bW1lciBzbyBJIGNvdWxkIHNwZW5kIGl0IG9uIHRoZSBib2F0LCBteSB3aXNoIHdhcyBmb3IgdGhlIGN1cnNlIHRvIGJlIGJyb2tlbi4gCkVhY2ggZ3ltIHNob3VsZCBoYXZlIDIgNCB3b3Jrb3V0cyBjb25zdHJ1Y3RlZCBmb3IgdGhlaXIgdmFyaW91cyBwb3B1bGF0aW9ucy4KVGhlIG9ubHkgdGhpbmcgaSBjYW4gc2F5IGlzIHRoYXQgaSBrbm93IGV4YWN0bHkgaG93IHlvdSBmZWVsLiBhbmQgaSBoZXNpdGF0ZSB0byBjYWxsIGl0IFBQRCBiZWNhdXNlIGl0IHN0YXJ0ZWQgYmVmb3JlIGJpcnRoLiBiZWNhdXNlIGhlcmUgaSBhbSA3IHllYXJzIGxhdGVyLCBzdGlsbCBmZWVsaW5nIGV4YWN0bHkgdGhlIHNhbWUuIGFuZCBpIGtub3cgdGhhdCBub3Qgd2hhdCB5b3Ugd2VyZSBob3BpbmcgdG8gaGVhciwgdGhhdCB5b3Ugd2VyZSBob3Bpbmcgc29tZXRoaW5nIHdvdWxkIGNsaWNrLCBzb29uLCBhbmQgeW91IGZlZWwgdGhlIHdheSBhbGwgdGhlIG90aGVyIG1vdGhlcnMgZmVlbC4gbWF5YmUgdGhhdCBoYXBwZW4gZm9yIHlvdSwgYnV0IHRoYXQgbm90IG15IHJlYWxpdHkuIGFsbCBpIGNhbiBjb21mb3J0IHlvdSB3aXRoIGlzIHRoZSBrbm93bGVkZ2UgdGhhdCBpIGFtIGluIHlvdXIgZXhhY3Qgc2hvZXMsIGhhdmUgYmVlbiBmb3IgNyB5ZWFycywgdGhhdCBpIGRvbiBqdWRnZSB5b3UgaW4gdGhlIHNsaWdodGVzdCBmb3IgYW55IG9mIHRoZSB0aGluZ3MgeW91IGZlbHQgb3IgZG9uZS4gaSB3aXRoIHlvdSwgaSB1bmRlcnN0YW5kLgpGb3IgVHJ1ZGVhdSwgaXQgdGhlIHdvcnN0IHBvc3NpYmxlIHNjZW5hcmlvICAgaWYgaGUgZGlkbiB0cnkgdG8gaGVscCwgaGUgZ2V0IGhhbW1lcmVkIGluIFF1ZWJlYyBmb3IgdGhlIGpvYiBsb3NzZXMgdGhhdCB3b3VsZCBpbmV2aXRhYmx5IGZvbGxvdyBhIGNvbnZpY3Rpb24gKG9uIHRoZSBoZWVscyBvZiB0aGUgcHJvYmxlbXMgd2l0aCBCb21iYXJkaWVyLCBhbm90aGVyIG1ham9yIFF1ZWJlYyBlbXBsb3llcikuIApNdWNoIG9mIHRoaXMgd29yayBkcmF3cyB1cG9uIHN0YW5kYXJkIGFuaW1hbCBiZWhhdmlvcmFsIHRlc3RzIHRoYXQgbWVhc3VyZSBhY3Rpdml0eSwgYXBwcm9hY2gsIGFuZCBhdm9pZGFuY2UuIE1pY2UgaGF2ZSBhIG5hdHVyYWwgdGVuZGVuY3kgdG8gZXhwbG9yZSB0aGVpciBlbnZpcm9ubWVudCB3aGlsZSBhdm9pZGluZyBvcGVuIGFuZCBicmlnaHRseSBsaXQgYXJlYXMuIFRoZSBlbGV2YXRlZCBwbHVzIG1hemUsIGEgYmVoYXZpb3JhbCBhcHBhcmF0dXMgdGhhdCBpcyBlbGV2YXRlZCBhYm92ZWdyb3VuZCAoRmlnLiAKQnV0IGlmIEkgaGFkIHRvIG9wZW4gb25lIGRyaXZlIGFuZCBsb2FkIGEgc3ByZWFkc2hlZXQganVzdCB0byBsb29rIGF0IHRoZSBydW5uaW5nIHRvdGFscywgeW91IGNhbiBiZXQgSSB3b3VsZCBub3QgYmUgYm90aGVyaW5nIGJ1ZGdldGluZyBhdCBhbGwuIApJIGFsc28gZ290IGEgZG9nLCBzbyB0aGF0IGdhdmUgbWUgc29tZXRoaW5nIGVsc2UgdG8gZm9jdXMgbXkgdGhvdWdodHMgb24sIGluc3RlYWQgb2YgZm9jdXNpbmcgb24gbXlzZWxmLiAKSSAyMyBidXQgdmVyeSBjbG9zZSB3aXRoIG15IG1vbSAoNTMpIGFuZCBzb21ldGltZXMgSSBnbyBvdXQgd2l0aCBoZXIgYW5kIGhlciBmcmllbmRzLiAKWW91J3JlIG9uZSBvZiB0aG9zZSAiYWxsIGxpdmVzIG1hdHRlciIgcGVvcGxlLCBhcmVuJ3QgeW91LiAKUGFydGVpIHVuZCBnbGVpY2h6ZWl0aWdlbSBkZXV0bGljaGVtIFNpZWcgZGVyIERzc2VsZG9yZmVyIGdlZ2VuIEJ1cmd3ZWludGluZyBkZW5FaW56dWcgaW5zIFZpZXJ0ZWxmaW5hbGUgenUgZXJyZWljaGVuLkRzc2VsZG9yZiwgZGllIGR1cmNoIHp3ZWkgU2llZ2Ugc2Nob24gc2ljaGVyIHdlaXRlciB3YXJlbiwgbGVndGUgYXVjaCBoaWVyIGZyZXVuZGxpY2hlcndlaXNlIGd1dCB2b3IgdW5kIGVibmV0ZSB1bnMgZGVuIFdlZywgc28gZGFzcyB3aXIgYXVzIGVpZ2VuZXIgS3JhZnQgZHVyY2ggZWluZW4gU2llZyB3ZWl0ZXJrb21tZW5BdWNoIGRpZXNlIFBhcnRpZSBnZWdlbiBCYWQgT25lIFBva2VyIEhhbm5vdmVyIGVudHdpY2tlbHRlIHNpY2ggZHJhbWF0dXJnaXNjaCB6dSBlaW5lbSB3YWhyZW4gS3JpbWkuIApXZSBzcGVudCBob3VycyB0YWxraW5nIHRvIGV2ZXJ5IHBlcnNvbiB3ZSBjb3VsZC4gCkp1c3QgYmVjYXVzZSB5b3Ugd2FudCB0byBhbmQgYWJsZSB0byBtb3ZlIHRvIGEgcGxhY2UgZG9lc24gbWVhbiB5b3UgaGF2ZSB0aGUgYWJpbGl0eSB0byBzdGF5IHRoZXJlIHVub3Bwb3NlZC4gSWYgSSBhYmxlIHRvIHNuZWFrIGludG8gc29tZW9uZSBhdHRpYyBhbmQgcmVtYWluIHRoZXJlIHVudGlsIGRldGVjdGVkLCB0aGF0IGRvZXNuIG1ha2UgbWUgYSByZXNpZGVudCBkb2VzbiBtYXR0ZXIgaWYgaXQgb25lIGRheSBvciB0ZW4geWVhcnMsIGp1c3QgYSB0cmVzcGFzc2VycyB0aGF0IGhhc24gYmVlbiBhcnJlc3RlZCBhbmQga2lja2VkIG91dC4gClRoZW4gaXQgd2FzIHRoYXQgdGhlIG1vcmUgcmVuZXdhYmxlIGVuZXJneSB3ZSBuZWVkLCB0aGUgbW9yZSBuYXR1cmFsIGdhcyB3ZSBuZWVkLCB0aGVyZWZvcmUgdGhlIHN1YnNpZGllcyB0byBuYXR1cmFsIGdhcyBhaWQgZWxlY3RyaWMgY2FyIG93bmVycy4gVGhleSBkbyBub3QgZm9yIHRoZSBzYW1lIHJlYXNvbiBhcyBhYm92ZSwgYW55IG90aGVyIHNvdXJjZSBvZiBlbmVyZ3ksIGluY2x1ZGluZyBiYXR0ZXJpZXMgc3RvcmluZyByZW5ld2FibGUgZW5lcmd5LCBjb3VsZCBiZSB1c2VkIGFuZCBhZ2FpbiwgdGhlIG5hdHVyYWwgZ2FzIHN1YnNpZGllcyBkbyBub3QgbWFrZSBlbmVyZ3kgYW55IGxlc3MgZXhwZW5zaXZlIGZvciB0aGUgZW5kIHVzZXIsIHRoZXkgb25seSBtYWtlIG5hdHVyYWwgZ2FzIGNvbXBldGl0aXZlIHdpdGggb3RoZXIgc291cmNlcy4uIApUdXJuaXRpbiBpc24ndCB0aGVyZSB0byBtZWNoYW5pY2FsbHkgZmluZCBmYXVsdCBhbmQgcHVuaXNoIHN0dWRlbnRzIGZvciBpbmZyYWN0aW9ucy4gClRoZWVuZGlzbmVhcm9ybm90ICAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpIZSBzdGF5ZWQgdGhlcmUgZm9yIHNvbWUgdGltZSwgYmVmb3JlIGhlYWRpbmcgYmFjayB0byBMaXR0bGUgSXRhbHkgYW5kIHRoZSBjbHViLiAKSSB0aGluayBoZSBoYXMgZ29vZCBpZGVhcyBhbmQgaXMgZXh0cmVtZWx5IGludGVsbGlnZW50LiBJIGp1c3QgY2FuJ3Qgc2VlIGhpbSBiZWNvbWluZyBwcmVzaWRlbnQuIApUaGF0IG15IGZhdm91cml0ZS4uIApFYXJseSBkcmFmdHMgb2YgdGhlIGd1aWRlIGluZGljYXRpbmcgaXQgd291bGQgcHJvbW90ZSBlYXRpbmcgbW9yZSBwbGFudCBiYXNlZCBwcm90ZWluIGhhZCBzcGFya2VkIGNvbmNlcm4gYW1vbmcgZGFpcnkgYW5kIGJlZWYgZmFybWVycy4KT3ZlcmFsbCwgcG9raWUgdHVybm92ZXIgZm9yIGNsdWJzIGFuZCBwdWJzIGp1bXBlZCAkNTAwIG1pbGxpb24gaW4gdGhlIHBhc3QgdGhyZWUgeWVhcnMuIApTdG9wIHdvcnJ5aW5nIGFib3V0IHVzaW5nIHBhcnRpY3VsYXIgdGVjaG5pcXVlcyBvciBnb2luZyBmb3IgYSBjZXJ0YWluICJsb29rIi4gQSBsb3Qgb2YgdGhlIHRyYXZlbCBhbmQgYWR2ZW50dXJlIHRvdXJpc20gdmlkZW9zIG91dCB0aGVyZSBsb29rIHRoZSBzYW1lICAgd29yc2UsIHRoZXkgbG9vayBsaWtlIHRoZXkgdHJ5aW5nIHRvIGxvb2sgdGhlIHNhbWUuIApBcyBuZWVkZWQgdGhlIG9wZXJhdGluZyBzeXN0ZW1jb3BpZXMgYmxvY2tzIG9mIGludGVybmFsIG1lbW9yeSBvdXQgdG8gdGhpcyBmaWxlIHRvIGZyZWUgaW50ZXJuYWxtZW1vcnkgYW5kIGNvcGllcyBibG9ja3MgZnJvbSB0aGlzIGZpbGUgdG8gaW50ZXJuYWwgbWVtb3J5IHdoZW4gYXByb2dyYW0gbmVlZHMgaXQgYWdhaW4uIEFsbCBvZiB0aGUgaGFyZHdhcmUgdGhhdCBpcyBpbnZvbHZlZCBkaXJlY3RseSBpbiB0aGUgb3BlcmF0aW9uIG9mdmlydHVhbCBtZW1vcnkgaXMgcGFydCBvZiB0aGUgY29tcHV0ZXIsIG5vdCB0aGUgaGFyZGRpc2suIApBdCBTdHJvdWRzYnVyZydzIFNoZXJtYW4gVGhlYXRlciBvbiBGcmlkYXksIFN0YXBwIHdpbGwgc2hvdyB3aGF0IGhlIGxlYXJuZWQuIEJhY2tlZCBieSBqdXN0IHR3byBndWl0YXJpc3RzLCBoZSdsbCBwbGF5IGFuIGFjb3VzdGljIHNob3cgb2YgQ3JlZWQgaGl0cyBhcyB3ZWxsIGFzIHNvbmdzIGZyb20gaGlzIDIwMDUgc29sbyBhbGJ1bSAiVGhlIEdyZWF0IERpdmlkZSIgYW5kIG9uZXMgaGUgaGFzIHdyaXR0ZW4gZm9yIGEgbmV3IHNvbG8gZGlzYyBkdWUgb3V0IHRoaXMgc3VtbWVyIHdpdGggdGhlIHdvcmtpbmcgdGl0bGUgIlNvbWV3aGVyZSBpbiB0aGUgTWlkZGxlIG9mIEx1c3QgYW5kIExvdmUuIi4gCkp1c3QgbGlrZSB3ZSBsYXVnaCBhdCBwZW9wbGUgd2hvIG1hZGUgYW5kIHVzZWQgYSBzaG9lIGZsdW9yb3Njb3BlIGEgMTAwIHllYXJzIGFnby4gYW5kIHdhcyBzYWlkIHRvIGJlIHNhZmUKT29wcyBJIG1lc3NlZCB1cCByZWxvYWRpbmcgYW5kIGRyb3BwZWQgdGhlIG1hZy4gT29wcyBJIGFjY2lkZW50YWxseSBkcm9wcGVkIG15IGd1biB0cnlpbmcgdG8gcHV0IGl0IGF3YXkuIApWb2ljZSBsaW5lcyBhcmUgYWxyZWFkeSByZWFsbHkgY29vbCwgYW5kIEkgbGlrZSB0byBzZWUgbW9yZSBhbmltYXRpb25zLCBvciBiZXR0ZXIsIGhhdHMuLiAKWW91IHNvbWV0aW1lcyBmZWVsIHdvcnNlIGFmdGVyIGEgZGVlcCB0aXNzdWUgbWFzc2FnZSBiZWNhdXNlIHRoZSBtZWNoYW5pY2FsIHN0cmVzcyBkYW1hZ2VzIG90aGVyIGNlbGxzIGFuZCBwYWluIGlzIHN0cmVzc2Z1bC4gT25lIG90aGVyIGFzcGVjdCB0aGF0IG1heSBhbHNvIGFmZmVjdCB0aGUgZm9ybWF0aW9uIG9mIHRoZXNlIHRyaWdnZXIgcG9pbnRzIGlzIHZhc2N1bGFyIHNodW50aW5nLCB3aGVyZSBibG9vZCBieXBhc3NlcyBub3JtYWwgY2hhbm5lbHMgZHVyaW5nIG11c2NsZSBjb250cmFjdGlvbiwgdGh1cyBjb250cmlidXRpbmcgdG8gdGhlIG1ldGFib2xpYyBkZWZpY2l0IHdpdGhpbiB0cmlnZ2VyIHBvaW50cy4uIApUaGUgZnV0dXJlIGlzIHJpcGUgZm9yIGRpc3J1cHRpb24sIGFuZCBkaXNydXB0aW9uIGNyZWF0ZXMgcHJvZ3Jlc3MuIApFdmVyeSBjYXNpbm8gZ2FtZSBoYXMgaXRzIGhvdXNlIGVkZ2UsIHdoaWNoIGlzIGFsc28ga25vd24gYXMgZmF2b3VyYWJpbGl0eSB0b3dhcmRzIHRoZSBob3VzZS4gVGhlIGhpZ2hlciB0aGUgaG91c2UgZWRnZSBpcywgdGhlIHNtYWxsZXIgdGhlIGNoYW5jZXMgb2Ygd2lubmluZyBmb3IgdGhlIHBsYXllcnMgYXJlLiAKU291cmNlIG1hdGVyaWFsIHNjZW5lcy9pbmZvIHRoYXQgd2VyZSBsZWZ0IG91dCBvZiB0aGUgYW5pbWUgYXJlIHN0aWxsIHNwb2lsZXJzLiBUYWcgdGhlbSBhcHByb3ByaWF0ZWx5LgpTaGUgaXMgc3VwcG9zZWQgdG8gZGllIG9uIEV2ZW50aWRlLCBidXQgZXNjYXBlcyB0aGFua3MgdG8gYSBteXN0ZXJpb3VzIGhvdGVsaWVyIHdobyB0YWtlcyBoZXIgdG8gYSBtYWdpY2FsIGNpdHkgY2FsbGVkIE5ldmVybW9vci4gVGhpcyBib29rIGlzIGFic29sdXRlbHkgZGVsaWdodGZ1bC4gClRpdGxlIGlzIGV2ZW4gbW9yZSBwcmVzdGlnaW91cyBhcyBzZWVuIGJ5IHRoZSB0b3AgbmFtZXMgaW4gdGhlIGdhbWUuIApJIHRoaW5rIG9mIHRoaXMgZWFjaCB0aW1lIEkgcmV2aWV3IGEgaGFuZHMuIApJZiB5b3UgZXhlcmNpc2UsIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIGV4ZXJjaXNlIHByaWNlIGFuZCB0aGUgZmFpciBtYXJrZXQgdmFsdWUgaXMgdGF4ZWQgYXMgaW5jb21lIChvbmx5IDUwJSBvZiBpdCwgdGhvdWdoLCBiZWNhdXNlIGl0IGEgQ0NQQy4pLiBJZiB0aGVyZSBubyBtYXJrZXQgZm9yIHRoZW0sIHNvIHlvdSBoYXZlIHRvIHNpdCBvbiB0aG9zZSBzaGFyZXMgdW50aWwgc29tZXRoaW5nIGhhcHBlbnMgKElQTywgc2hhcmUgc2FsZSkgdGhlbiB0aGUgdmFsdWUgaXMgdGF4ZWQgYXMgY2FwaXRhbCBnYWlucy4gSWYgeW91IGhvbGQgdGhlbSBmb3IgdHdvIHllYXJzIG9yIG1vcmUsIHlvdSBjYW4gdGFrZSBhZHZhbnRhZ2Ugb2YgeW91ciAkNzUwayBsaWZldGltZSBjYXBpdGFsIGdhaW5zIHRheCBleGVtcHRpb24uCllhaG9vISB3YXMgdGhlIGZpcnN0IG9mIGl0cyBraW5kOiBhIG1hbiBtYWRlIGRpcmVjdG9yeSwgb24gdGhlIEludGVybmV0LCBmb3IgdGhlIEludGVybmV0LiAKTGF0ZSB0byB0aGUgcGFydHksIGJ1dCBteSBleCBodXNiYW5kIHdhcyB0aGUgZ3Jvb216aWxsYS4gCkNvbmNlcm4gYWJvdXQgdGhpcyBoYXMgbGVkIGJpZyB0cmFkZXJzIHRvIHVzZSBhbHRlcm5hdGUgdHJhZGluZyBzeXN0ZW1zIHJhdGhlciB0aGFuIHRoZSB0cmFkaXRpb25hbCBleGNoYW5nZXMuIFNvIGNhbGxlZCBuZXR3b3JrcyBvciBwb29scyBoYXZlIHNwcnVuZyB1cCB0byBtYXRjaCBidXllcnMgYW5kIHNlbGxlcnMgd2l0aG91dCByZXZlYWxpbmcgdGhlaXIgaW50ZW50aW9ucyB0byB0aGUgYnJvYWQgbWFya2V0LgpSZWFkIG1vcmU6V29sbG9uZ29uZyBwb2tlciBtYWNoaW5lIGxvc3NlcyB0b3AgJDE0MiBtaWxsaW9uLCByYW5rIHVzIHNldmVudGggaW4gc3RhdGUgIkEgbnVtYmVyIG9mIGNvdW5jaWxzIGFuZCBjb21tdW5pdHkgZ3JvdXBzIHN1Z2dlc3RlZCBjYXBzIGFuZCB0aGUgTlNXIGdvdmVybm1lbnQgYWdyZWVzIHRoaXMgaXMgdGhlIHJpZ2h0IHRoaW5nIHRvIGRvIGluIGhpZ2hlciByaXNrIGFyZWFzLiIgVGhlIGZvdXIgSWxsYXdhcnJhIHN1YnVyYnMgYXJlY2xhc3NpZmllZCBhcyAiYmFuZCB0aHJlZSIgY29tbXVuaXRpZXMsIGFjY29yZGluZyB0byBhIExpcXVvciBhbmQgR2FtaW5nIE5TVyBtYXAgd2hpY2ggbWFya3MgdGhlbSBhcyByZWQgem9uZXMuIApIYXZpbmcgZ3Jvd24gdXAgaW4gcXVlZXIgZmFtaWxpZXMgYW5kIGNvbW11bml0aWVzIHdlIHN0cm9uZ2x5IGJlbGlldmUgdGhhdCBxdWVlcnMgYXJlIGxpa2UgZXZlcnlvbmUgZWxzZS4gCkN6YXJFZ2diZXJ0IHUKVGhlIEhSIE9wZXJhdGlvbnMgVGVhbSwgYWxzbyB3aXRoaW4gdGhlIEhSIFNoYXJlZCBTZXJ2aWNlcyBwb3J0Zm9saW8sIGlzIHJlc3BvbnNpYmxlIGZvciB0aGUgZnJhbWV3b3JrcyBhbmQgZ292ZXJuYW5jZSBwcm9jZXNzZXMvcHJvdG9jb2xzIHRvIG1lZXQgcGF5cm9sbCBhbmQgc3VwZXJhbm51YXRpb24gY29tcGxpYW5jZSByZXF1aXJlbWVudHMgb24gYmVoYWxmIG9mIHRoZSBVbml2ZXJzaXR5LiBJdCBkZWxpdmVycyBwYXlyb2xsIGFuZCBzdXBlcmFubnVhdGlvbiBwcm9jZXNzaW5nLCBwcm92aWRlcyBhZHZpY2UsIG9wdGlvbnMgbW9kZWxsaW5nIGFuZCBwcm9jZXNzIHN1cHBvcnQgYXJvdW5kIHBheXJvbGwgbWF0dGVycywgaW5jbHVkaW5nIGFyb3VuZCBtYXRlcm5pdHkgbGVhdmUgb3B0aW9ucy4gCklBTiBNQVJTSEFMTCwgV0lMTEVUVE9OIFNQT1JUUyBDTFVCOiBXZSBhcmUgdXRpbGlzaW5nIHRoZSBwbGFjZSBmYXIsIGZhciBtb3JlLiBJdCdzIGp1c3QgYSBkaXNhcHBvaW50aW5nIHRoaW5nIGp1c3QgdGhlIHdheSBpdCBoYXBwZW5lZC4KUHJvZ3JhbW1lcyBkZXMgYWN0aXZpdHMgQVBOIDIwMDggICAyMDA5IDQuMSBKb3VybmVzIGRlIExBIEZFTU1FIEVOQ0VJTlRFIDQuMiBTWU1QT1NJVU1TIEludGVybmF0aW9uYXV4IGVuIFNhbnQgZXQgUHJpbmEgNC4zIFJldnVlIGRlIHByZXNzZSBzdXIgbm9zIHZuZW1lbnRzIDUuIApCdXQgaG93IGRvZXMgdGhpcyBzdHJhdGVneSB3b3JrPyBIZXJlJ3MgYSB3YXkuIE1ha2luZyB5b3VyIGNvbXBldGl0b3IgY29uc2Npb3VzIGRvZXMgYWxsIHRoZSBoYXJtIHRvIGhpcy9oZXIgbWluZCBhbmQgaGlzL2hlciBzdHJhdGVnaWVzIGNoYW5nZSB3aXRoIHRoZSBwYXNzaW5nIHNlY29uZHMgYW5kIHRodXMgaGUvc2hlIHRlbmRzIHRvIGNvbW1pdCBtb3JlIG1pc3Rha2VzIHRoYW4gZXZlci4KRG9sbGFyIGxhc3QgT2N0b2JlciB0byBuZWFybHkgMTAwIG1vcmUgcmVjZW50bHkuIFRoYXQgaGFzIGhlbHBlZCB0byBlbmQgYSBzcGVsbCBvZiBvciB5ZW4gcmF0ZXMgdGhhdCBmdXJ0aGVyIGVyb2RlZCB0aGUgY29tcGV0aXRpdmVuZXNzIG9mIEphcGFuIGV4cG9ydCBtYW51ZmFjdHVyZXJzLiAKSW4gQ2hpbmVzZSBGaXZlIEVsZW1lbnQgdGhlb3J5LCBIb3JzZSBpcyBpbiB0aGUgRmlyZSBncm91cC4gClRoZXJlIHdhcyBhbiBlbnRpcmUgc3BlY2lhbCBlZGl0aW9uIG9mIHRoZSBKb3VybmFsIG9mIEhlYWx0aCBQc3ljaG9sb2d5IGRldm90ZWQgdG8gdGhlIFBBQ0UgdHJhaWwuIEJ1dCB0aGUgbGlzdCBpcyBwcmV0dHkgZW5kbGVzcy4gCk9ubHkgSSB3b3VsZCBwcm9iYWJseSBhZGQ6IG1vdmUuIApUaGUgQ0VTIDIwMTkgZ2FkZ2V0IHNob3cgaXMgcmV2dmluZyB1cCBpbiBMYXMgVmVnYXMuIEhlcmUgYXJlIHRoZSBsYXRlc3QgZmluZGluZ3MgYW5kIG9ic2VydmF0aW9ucyBmcm9tIEFzc29jaWF0ZWQgUHJlc3MgcmVwb3J0ZXJzIG9uIHRoZSBncm91bmQgYXMgdGVjaG5vbG9neSdzIGJpZ2dlc3QgdHJhZGUgZXZlbnQgZ2V0cyB1bmRlcndheS4KWW91IGRvLCBkbyBOT1Qgc2hvdyB1cCBhdCBwcm90ZXN0cyBhY2N1c2luZyB5b3VyIGdvdmVybm9yIG9mIHJhY2lhbGx5IHByb2ZpbGluZyBMYXRpbm9zLiAKTGUgYmxvYyBzYW5pdGFpcmUgZXN0IHNwYWNpZXV4LCBtb2Rlcm5lIGV0IGNoYXVmZiBhdSBjb3VycyBkZSBsJ2F2YW50IGV0IGFycmkgcmUgc2Fpc29uLiBJbCBvZmZyZSB0b3V0ZXMgbGVzIGZhY2lsaXQgcyBldCBsZSBuZXR0b3lhZ2Ugc2UgZmFpdCBhdSBtb2lucyB1bmUgZm9pcyBwYXIgam91ci4gTGVzIGRvdWNoZXMgZXQgbGVzIGxhdmFib3Mgb250IGRlIGwnZWF1IGZyb2lkZSBldCBjaGF1ZGUgcXVpIHNvbnQgY29tcHJpcyBkYW5zIGxlIHRhcmlmLiBVbmUgcGFydGllIHNwIGNpYWxlbWVudCByIHNlcnYgZSBhdXggcGVyc29ubmVzIG1vYmlsaXQgciBkdWl0ZSwgY29tcHJlbm5hbnQgZG91Y2hlLCB0b2lsZXR0ZSBldCBsYXZhYm8gZXN0IGdhbGVtZW50IGRpc3BvbmlibGUuIEQnIGF1dHJlIHBhcnQgdm91cyBwb3V2ZXogZGlzcG9zZXIgZCd1bmUgc2FsbGUgZGUgYmFpbiBzIHBhciBlIHBvdXIgbGVzIHNvaW4gZGVzIGIgYiBzLgpXaGl0ZSBzdXByZW1hY3kgcmVjcnVpdGluZyBpcyBhdCBhbiBhbGwgdGltZSBoaWdoLiAKVGhpcyBsYXcgY2hhbmdlIHdpbGwgc2F2ZUpvdXJuYWxpc20gSGFzIEEgUHJvYmxlbTogSXQncyBDYWxsZWQgQ2FwaXRhbGlzbU11Y2ggaGFzIGJlZW4gd3JpdHRlbiBvZiBsYXRlIGFib3V0IHRoZSAncHJvYmxlbXMnIG9mIHRoZSBKb3VybmFsaXNtIGluZHVzdHJ5IGFuZCBpbiBwYXJ0aWN1bGFyIHRoZSBpbXBhY3RzIG9mIGNvbnNvbGlkYXRpb24gYW5kIGxheW9mZnMgb24gbG9jYWwgbmV3cyBjb3ZlcmFnZS4gCldlIHZlcnkgaW5jb25zaXN0ZW50LiAKIkl0IHdvdWxkIG5vdCBiZSB0aGUgd2lsbCBvZiB0aGUgcGVvcGxlLCBpdCB3b3VsZCBiZSB0aGUgd2lsbCBvZiB0aGUgcG9rZXIgaW5kdXN0cnksIiBzYWlkICBvZiBhIHJlZmVyZW5kdW0gcHVzaGVkIGJ5IGxvYmJ5aXN0cyBmb3IgY29pbiBtYWNoaW5lIG9wZXJhdG9ycy4KV2l0aCB0aGUgU3VwcmVtZSBDb3VydCdzIGRlY2lzaW9uLCB0aGUgY2FzZSB3aWxsIG5vdyByZXR1cm4gdG8gbG93ZXIgY291cnRzIGZvciBsaXRpZ2F0aW9uLCBpbiB3aGljaCBwbGFpbnRpZmZzIHdpbGwgc3RpbGwgbmVlZCB0byBzaG93IHRoYXQgdGhlaXIgaW5qdXJ5IGlzIGJhc2VkIG9uIGNvbW1lcmNpYWwgYWN0aXZpdHkgd2l0aGluIHRoZSBVbml0ZWQgU3RhdGVzLi4gCkJ1dCBSb2xvIGlzIHZlcnkgb2J2aW91c2x5IG1ha2luZyB1cCBwYXJ0cyBvZiBoaXMgc3Rvcmllcy9seWluZyBpbiB0aGVtLiBJbiB0aGUgZG9jdG9yIHN0b3J5IGhlIGFkZGVkIHRoZSBib25lciBwYXJ0LCB3aGljaCBpcyBvbmUgY2x1ZS4gVGhlIG90aGVyIGlzIHRoYXQgbm9ib2R5IHRhbGtlZCB0byB0aGUgZG9jdG9yIGFmdGVyIGhlIHdhcyBsZXQgZ28gYXMgaGUgc2FpZCB0aGF0IHRoZSBkb2N0b3Igc2h1dCBoaW1zZWxmIG9mZiBmcm9tIHRoZSB3b3JsZCArIGFmdGVyIHRoZXkgY2F1Z2h0IGhpbSBoZSB3ZW50IHRvIGEgdmVnZXRhdGl2ZSBzdGF0ZSwgc28gdGVjaG5pY2FsbHkgbm9ib2R5IHNwb2tlIHRvIHRoZSBkb2N0b3IgYWZ0ZXIgaGUgd2FzIGxldCBnbywgdGhlcmVmb3JlIG5vYm9keSBjb3VsZCBoYXZlIGtub3duIHdoZW4gaGUgc3RhcnRlZCBzZWxmIG11dGlsYXRpbmcsIHdhcyBpdCBiZWZvcmUgb3IgYWZ0ZXIgaGVyIG11cmRlci4gClRyYXZlbGxlci9EYXNzZW0gaXMgb24gYSBtaXNzaW9uIHRvIGZpbmQgYW5kIGtpbGwgSG9vZC4gCkkgYWJzb2x1dGVseSBsb3ZlIGl0LiBUaGlzIGlzIG15IGZpcnN0IFN1YmFydSBhbmQgSSdtIGRlZmluaXRlbHkgYSBjdXN0b21lciBmb3IgbGlmZS4gCkNhbGwgVm9sdW1lOiBPdXIgZWRpdG9ycyBzZWNyZXRseSBjYWxsIHRoZSBjaGF0IGxpbmVzIGR1cmluZyBwZWFrIGFuZCBvZmYgcGVhayBob3VycyB0byBkb2N1bWVudCB0aGUgbnVtYmVyIG9mIG1hbGUgYW5kIGZlbWFsZSBjYWxsZXJzIHJlcG9ydGVkIHRvIGJlIG9ubGluZSBieSBlYWNoIHN5c3RlbS4gV2h5IGRvIEkgc2VlIHRoZSBzYW1lIG5hbWUgaW4gY2hhdCByb29tIG11bHRpcGxlIHRpbWVzPyBBbHRob3VnaCB5b3UgbWF5IG5vdCBoYXZlIHRvIGNvbXBldGUgd2l0aCBodW5kcmVkcyBvZiBwZW9wbGUgbG9va2luZyB0byBjaGF0IHdpdGggbG9jYWwgc2luZ2xlcyBmb3IgZnJlZSwgeW91IHN0aWxsIHdhbnQgdG8gc3RhbmQgb3V0IGluIHRoZXNlIGNoYXQgcm9vbXMuIApZZWEgSSByZWFsaXplIGhvdyBjcmVlcHkgYW5kIHN0YWxrZXIgbGlrZSBkb2luZyB0aGF0IHdvdWxkIGJlLCBidXQgeW91IGtub3cgaW4gbXkgaGVhcnQgSSBqdXN0IHdhbnQgdG8gaHVnIGhlciBhbmQgc2F5IHNvcnJ5IGJ1dCB0byBjb3JuZXIgaGVyIGxpa2UgdGhhdCBJIGtub3cgc2hlIGNvdWxkbiByZWZ1c2UgdGh1cyB0YWxraW5nIHRvIG1lLCBidXQgdG8gY29ybmVyIGhlciBsaWtlIHRoYXQgd291bGQgSSBhZ3JlZSBkbyBmYXIgbW9yZSBkYW1hZ2UuIFNvIEkgYWdyZWUgYW5kIHdvbiBjaGFzZSBoZXIgdG8gQ2hpbmEuIFdoaWxlIEkgYWdyZWUgd2UgbmVlZCBzb21lIHRpbWUgb2Ygbm90IHNwZWFraW5nIGV2ZW4gYSBtb250aCBvZiBpdCBJIGRvbiB3YW50IHRoZSByZWxhdGlvbnNoaXAgdG8gdGVjaG5pY2FsbHkgZW5kLCBJIHdhbnQgaGVyIHRvIGF0IGxlYXN0IHJlZnJpZW5kIG1lIGFuZCB1bmJsb2NrIG1lLCBidXQgSSBkb24gbWluZCBoZXIgbm90IHRhbGtpbmcgdG8gbWUuLiAKSSBmaW5kIGl0IHJlYWxseSBvZGQgYnV0IGEgZmV3IHRpbWVzIHdoZW4gSSBsb29rZWQgaW50byBjb21tb24gQW1lcmljYW4gbWVkaWNhdGlvbnMsIEkgZmluZCB0aGVzZSB3ZWlyZCBzdWJzdGl0dXRlcywgb2Z0ZW4gd2l0aCBhYnVzZSBwb3RlbnRpYWwuIApJZiB5b3UgYXJlIGF0IFdhbCBNYXJ0IHlvdSBrbm93IHRoYXQgeW91IGNhbiB1c2UgY2FzaCwgY2hlY2sgb3IgY3JlZGl0IGNhcmRzIHRvIHBheSBmb3IgcHJvZHVjdHMuIApUaGlzIGVudGlyZSBzdWJyZWRkaXQgY29uc2lzdCBvZiAibWVsdHMiLiBBbG1vc3QgZXZlcnkgImdyaWxsZWQgY2hlZXNlIiBzYW5kd2ljaCBpIHNlZSBvbiBoZXJlIGhhcyBvdGhlciBpdGVtcyBhZGRlZCB0byBpdC4gCkl0IGlzIHBvc3NpYmxlIHRvIGRvIHRoaXMuIApUaGV5IHRocmVhdGVuIHRvIHRlbGwgd2hhdCBJJ3ZlIGRvbmUgYW5kIEkgY2FsbCB0aGUgYmx1ZmYgYW5kIHNheSBnbyBhaGVhZCBJJ20gZmluZSB3aXRoIGl0LiBMb25nIHN0b3J5IHNob3J0IEkgYWdyZWUgdG8gcGF5ICQxMDAgVVNEIGFmdGVyIGhvdXJzIG9mIHNpdHRpbmcgdGhlcmUgYW5kIHNheWluZyBJIGNhbiBzbGVlcCBoZXJlIGJ1dCBpZiBJIGRvbid0IGNvbWUgdG8gd29yayBvbiBNb25kYXkgcGVvcGxlIHdpbGwgc3RhcnQgbG9va2luZyBmb3IgbWUuCjIwMTkgQWxsIFlvdSBOZWVkIHRvIEtub3cgQkVGT1JFIFlvdSBHbyB3aXRoIFBob3RvcwpCaWVuIHF1ZSBzb24gZW50cmUgZW4gdmlndWV1ciBkYXRlIDI0IG9jdG9icmUgMTk0NSwgb24gcHJlbmQgY29tbWUgZGF0ZSBkZSBjcmF0aW9uIGxlIDI2IGp1aW4gMTk0NTogZGF0ZSBhbm5pdmVyc2FpcmUuIApIb3BlZnVsbHkgbm93IHRoZSB3ZWlnaHQgd2lsbCBjb21lIG9mZi4iIEkgd2FzIGZpbmFsbHkgcGFpbiBmcmVlIGFmdGVyIHllYXJzIG9mZiBzdWZmZXJpbmcgYW5kIGFsbCBteSBkYWQgY2FyZWQgYWJvdXQgd2FzIGhvdyBtdWNoIEkgd2VpZ2hlZCAoc2l6ZSAxMkFVUyBieSB0aGUgd2F5LiAKS2VudCBTdGF0ZSBlYXJucyBNQUMgTm8uIDQgc2VlZCB3aXRoIDY4IDc1IHZpY3Rvcnkgb3ZlciBBa3JvbiBLZW50IFN0YXRlIGVhcm5zIE1BQyBOby4gNCBzZWVkIHdpdGggNjggNzUgdmljdG9yeSBvdmVyIEFrcm9uIEFudG9uaW8gV2lsbGlhbXMgbGVhZHMgS2VudCBTdGF0ZSB0byBhIHNob3J0IGhhbmRlZCB2aWN0b3J5IG92ZXIgQWtyb24uCklmIHRoZSBQR0EgVG91ciBpcyBwbGF5aW5nLCBidXQgbm9ib2R5IGlzIGhvbWUgdG8gd2F0Y2gsIGl0IG1lYW5zIGhlIGluIHRvd24uIFdoeSBkb2VzIGhlIGxlYXZlIHRoZSBUViBvbj8gSSBkb24ga25vdy4gV2h5IGdvbGY/IEkgZG9uIGtub3cuIEJ1dCB0aGF0IHNvdWwgY3J1c2hpbmdseSBkdWxsIHNwb3J0IGFuZCB0aGUgZGVhZCB3YXJibGUgb2YgaXRzIGFubm91bmNlcnMgZHJvbmluZyB0aHJvdWdoIHRoZSBhZnRlcm5vb24gd2lsbCBhbHdheXMgbGV0IG1lIGtub3cgdGhhdCBoZSBpbiB0b3duLiBUaGF0IHN0dXBpZCBmdWNraW5nIFRWLCB0dW5lZCB0byB0aGUgbW9zdCBib3JpbmcgY2hhbm5lbCBpbiBoaXN0b3J5LCBwbGF5aW5nIGF3YXkgYXQgMyBpbiB0aGUgYWZ0ZXJub29uIHdpdGggbm9ib2R5IGJ1dCBteXNlbGYgaW4gdGhlIGhvdXNlLgpUT1JPTlRPICAgIlRoZSBJbmRpYW4gRGV0ZWN0aXZlIiBzdGFyIFJ1c3NlbGwgUGV0ZXJzIGJlY2FtZSBhIHJlYWwgbGlmZSBjcmltZSBmaWdodGVyIHRoaXMgd2VlayB3aGVuIGhlIGhlbHBlZCB0YWtlIGRvd24gYSBtYW4gYWxsZWdlZGx5IGF0dGVtcHRpbmcgdG8gc3RlYWwgZnJvbSBhIGpld2Vscnkgc2hvcCBpbiBOZXcgWW9yayBDaXR5LgpCZWxpZXZpbmcgdGhleSB3ZXJlIGFib3V0IHRvIGJlIHRyaWVkIGFuZCB0aGVpciB1bndhcnJhbnRlZCBncmlldmFuY2VzIGhlYXJkLCB0aGUgU2Vwb3lzIHdlcmUgdW51c3VhbGx5IGRvY2lsZS4gCkkgYWxzbyBzZWVuIGhvdyB0aGUgbWVudGFsaXR5IG9mIHdpbm5pbmcgcGxheWVycyBoYXMgY2hhbmdlZC4gSXQgdXNlZCB0byBiZSBhIGdpYW50IHBhcnR5IHdoZXJlIHBsYXllcnMgdGhvdWdodCB0aGVyZSB3YXMgdGhpcyBlbmRsZXNzIHBvb2wgb2YgZmlzaCBtb25leS4gCllvdSBoYXZlIGFic29sdXRlbHkgbm8gY29uY2VwdCBvZiB3aGF0IGl0IHRha2VzIGl0IGxhc3QgaW4gcG9rZXIgd2l0aCBpdCBpbnNhbmUgdmFyaWFuY2UgYW5kIHdoYXQgdGhlIG1pZCBzdGFrZXMgc2NlbmUgaXMgbGlrZS4gSSBiZWVuIHBsYXlpbmcgbWlkIHN0YWtlcyBQTE8gYXJvdW5kIHRoZSBVUyBzaW5jZSB5b3Ugd2hlcmUgaW4gSnIuIEhpZ2guIAoxVGhlIG9sZGVyIHJlbGF0aXZlcyBhbmQgcGFyZW50cyBkb24ndCBzZWVtIHRvIGJlIGFibGUgdG8gZ2V0IHVzZWQgdG8gdGhlIGZhY3QgdGhhdCBJIGRvbid0IGxpa2UgdGhlIHNob3J0IGZvcm0gb2YgbXkgZ2l2ZW4gbmFtZSwgb3IgbXkgZ2l2ZW4gbmFtZSBmb3IgdGhhdCBtYXR0ZXIsIGFuZCBpbnNpc3Qgb24gdXNpbmcgaXQgd2hlbmV2ZXIgdGhleSB3aXNoIHRvIHNwZWFrIHRvIG1lLiBKdXN0IGhhdmUgdG8gZ3JpbiBhbmQgYmVhciBpdCBJIHN1cHBvc2UhMkkgaGFkIHNvbWV3aGVyZSBvdmVyIDcwIGF0IGxhc3QgY291bnQsIGJ1dCBJJ3ZlIGxvc3QgY291bnQgYW5kIGhhdmVuJ3QgcmVjb3VudGVkIHNpbmNlM0ZvciBzb21lIHJlYXNvbiwgbG90cyBvZiBwZW9wbGUgYXNzdW1lIHRoYXQgbmRyIGlzIGEgbWFsZSBuYW1lLjRIb3cgZG8gSSBkbyB0aGUgIHRoaW5nPyBJZiB5b3UgYXJlIHJ1bm5pbmcgV2luZG93cyBhcyBhbiBPUywgdGhlbiBtYWtlIHN1cmUgbnVtbG9jayBpcyBvbiwgaG9sZCBkb3duIHRoZSBBbHQga2V5IGFuZCBvbiB0aGUgbnVtZXJpYyBrZXlwYWQgcHJlc3MgMDE5OCwgdGhlbiByZWxlYXNlIHRoZSBBbHQga2V5LiBJZiB5b3UgYXJlIG9uIGEgTWFjLCBob2xkIGRvd24gc2hpZnQsIHRoZSBvcHRpb24ga2V5IGFuZCB0aGVuIHRoZSBhcG9zdHJvcGhlIG9yIHF1b3RhdGlvbiBtYXJrIGtleSAnIGFuZCB0aGVuIHJlbGVhc2UuIEhleSBwcmVzdG8gIS4KVGV4IHdoaXN0bGVkIGFnYWluIHdoZW4gaGUgc2F3IENoYXJsZXMncyBzZXQgb2Yga2luZ3MuIApJZiBDYXNzaWUgZG9lc24gZXZlbiBrbm93IHdoYXQgc2hlIGxvb2tpbmcgZm9yIGluIGEgcGFydG5lciB5ZXQsIGhvdyBzaG91bGQgc2hlIEtOT1cgd2hlbiBzb21lb25lIGlzIHRoZSBvbmU/IEkgdGhpbmsgaGVyIGRhZCB3YXMganVzdCB0aHJvd2luZyBldmVyeXRoaW5nIGhlIGhhZCBhdCBoZXIgdG8gdHJ5IHRvIGdldCBoZXIgdG8gbGVhdmUgdGhlIHNob3cgYW5kIHRoYXQgbWVhbnQgcmVhbGx5IGdvaW5nIGFmdGVyIGhlciBkb3VidHMuamdzamdzNSAgNjYgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kga25vdyBpdCBzdHVwaWQgdG8gZGlzYWdyZWUgd2l0aCBhbiBleHBlcnQgaW4gaGlzIGZpZWxkLCBidXQgdGhlcmUgYSBiaWcgZGlmZmVyZW5jZSBiZXR3ZWVuIHJ1bm5pbmcgdXAgYSBzb2xpZCBicmljayB3YWxsIGFuZCBob3BwaW5nIG92ZXIgYSBnYXRlLiAKUEEgc2NyZWFtZWQgYXQgaGltIHRoYXQgdGhpcyBpcyBub3QgYSBzdHVkZW50IGRvcm0gYW5kIHRoYXQgd2UgaGF2ZSB0byB0YWtlIGJldHRlciBjYXJlIG9mIG9mZmljZSBvd25lZCB0aGluZ3MuIApPZiBjb3Vyc2Ugc2luY2UgeW91IGNhbiBhbHNvIGdpdmUgdGhlbSB0byBuZXdlciB1bml0cyB0aGlzIGRvZXNuIGhlbHAgYnJpZGdlIHRoZSBnYXAsIGJ1dCBjYW4gaGVscCB5b3UgbWFrZSBhIHVuaXQgeW91IGxpa2UgYSBsaXR0bGUgYmV0dGVyLkZvciBQdkUgY29udGVudCAod2hpY2ggaXMgdGhlIG1ham9yaXR5IG9mIHRoZSBnYW1lKSwgaXQgZG9lc24gcmVhbGx5IG1hdHRlciBhbnkgd2F5LiBUaGUgb25seSB0aGluZyB0aGF0IG1pZ2h0IGdpdmUgeW91IHRyb3VibGUgaXMgQWJ5c3MgZGlmZmljdWx0aWVzLCBidXQgZXZlbiB0aGVuIHlvdSBjYW4gbWFuaXB1bGF0ZSB0aGUgQUkgdG8gbWFrZSBpdCBlYXNpZXIsIGFuZCB0aGVyZSB1c3VhbGx5IEYyUCBndWlkZXMgdGhhdCBvbmx5IHVzZXMgdW5pdHMgZ2l2ZW4gZm9yIGZyZWUuV2l0aCB0aGF0IGFsbCBiZWluZyBzYWlkLCB0aGVyZSBpcyBhIGJpdCBvZiBwb3dlciBjcmVlcCBvbiBza2lsbHMuIApJIHRoaW5rIG9uZSB0aGluZyBhIGxvdCBvZiBwZW9wbGUgZG9uIHNlZSBhYm91dCB0aGUgY2hpbmVzZSBtZXRhIGdhbWUgaXMgdGhhdCB0aGV5IHBsYXkgdmVyeSBsb29zZSBhZ2dyZXNzaXZlLCB3aGljaCByZWFwcyBib3RoIGhlYXZ5IGxlYWRzIGFuZCBoZWF2eSBzdG9tcHMuIEl0IGNhbiBlYXNpbHkgYmUgc2VlbiBhcyBqdXN0IGVuZ2FnZXMgYnV0IG9mdGVuIGl0IGEgd29udCBoZSBnYW1lIG9mIGNoaWNrZW4gYmV0d2VlbiBwbGF5ZXJzLiAKVG8gdW5kZXJzdGFuZCB3aGF0IG1ha2VzIGEgZnJhZ3JhbmNlIHVuaXNleCwgaXQgaGVscHMgdG8gdW5kZXJzdGFuZCB3aGF0IGNvbnN0aXR1dGVzIG1lbidzIGFuZCB3b21lbidzIGZyYWdyYW5jZXMuIEEgcGVyZnVtZSBjb25zaXN0cyBvZiBkaWZmZXJlbnQgc2NlbnQgYmVhcmluZyBjaGVtaWNhbHMgZGlzc29sdmVkIGluIGFsY29ob2wuIFNpbWlsYXIgc2NlbnRzLCBvciBub3RlcywgYXJlIGdyb3VwZWQgaW50byBvbmUgb2YgZm91ciBtYWluIGNhdGVnb3JpZXM6IGZsb3JhbCwgb3JpZW50YWwsIHdvb2R5IGFuZCBmcmVzaC4gCkJ1dCBpbiByZWFsaXR5IGl0IGlzIHRoYXQgc2ltcGxlLiBJIHRyaWVkIHRvIHF1aXQgYmVmb3JlIGZvciB0aGUgaGVhbHRoIG9mIG15IGZhbWlseSwgZm9yIG15IG93biBzdXBlcmZpY2lhbCBoZWFsdGgsIGl0cyBjb3N0LCBhbmQganVzdCBiZWNhdXNlIGV2ZXJ5b25lIGFyb3VuZCBtZSBwcmVzc3VyZWQgbWUgdG8gdGhpbmsgb2YgaG93IG5lZ2F0aXZlIHNtb2tpbmcgaXMgYW5kIGhvdyBiYWQgaXQgaXMgZm9yIG1lIGFuZCBob3cgYmFkIGl0IG1ha2VzIG1lIGJlY29tZSBhcyBhIGh1bWFuLi4gClNvdW5kIGxpa2UgY2h1bXAgdG8gbWUgYnVkZHkuIEkgbmV2ZXIgc2FpZCBiZW5jaCAxOSA4OCwgZG9uIGtub3cgd2hlcmUgdG8gZ290IHRoYXQgZnJvbS4gClRoZSAiVWx0aW1hdGUgSWxsdXN0cmF0ZWQiIGFuZCAiVWx0aW1hdGUgR3VpZGUiIGJvb2tzIGNhbiBiZSB1c2VkIGFzIHN1cHBsZW1lbnRzIHRvIHlvdXIgaW4gY2xhc3MgdGV4dGJvb2tzIChldmVuIGlmIHlvdSBhcmUgbm90IGdvaW5nIHRvIHRha2UgdGhlIFRPQ0ZMKS4gQWxsIHRoZSBvdGhlciBib29rcyBhcmUgcmVmZXJlbmNlIGJvb2tzLgpQcm9iYWJseSA4OCBKSiwgSlRzIEtRcywgQUosIEFRLiBNYXliZSBqdXN0IEFKcywgbm90IHN1cmUuIE15IHN0cmF0ZWd5IGhhcyBhIFNCIGZsYXR0aW5nIHJhbmdlIHZzIFVURyBhbmQgSEogb3BlbnMsIGFuZCBhIDNiZXQgb3IgZm9sZCBzdHJhdCB2cyBDTyBhbmQgQlUuIApUaGlzIGFwcGVhcnMgZHVlIHRvIGEgZ2VuZXRpY2FsbHkgY29udHJvbGxlZCBwcm9ncmFtLCB3aGljaCBwcm9kdWNlcyBhIGRlY2xpbmUgaW4gdGhlIGFjdGl2aXR5IG9mIENvUTEwIHN5bnRoZXRpYyBlbnp5bWVzIGFzIHdlIGFnZS4KVm9pY2UgdGFrZXMgb3ZlcgpObyBNTVQgaGVyZSBhdCBsZWFzdC4gCldoZW4gcGxheWVycyBhcmUgc3R1Y2sgd2l0aCBhIGZpeGVkIEZPViB2YWx1ZSB0aGUgZGV2ZWxvcGVyIHNldCBmb3IgdGhlbSwgaXQgbWlnaHQgbm90IGZlZWwgcXVpdGUgcmlnaHQgZm9yIHRoZW0gb24gdGhlaXIgc2V0dXAuIFRoaXMsIGZvciBzb21lIHBsYXllcnMsIGNhbiBsZWFkIHRvIE1vdGlvbiBTaWNrbmVzcyAoZmVlbGluZyBvZiBuYXVzZWEsIHNldmVyZSBoZWFkYWNoZXMsIGV0Yy4pLiAKRG9jdW1lbnRzIG9idGFpbmVkIGJ5IHRoZSBBQkMgdW5kZXIgRnJlZWRvbSBvZiBJbmZvcm1hdGlvbiAoRk9JKSBzaG93IEFMSCByZWZ1c2VkIHRvIGhhbmQgb3ZlciB0aGUgZnVsbCByZXBvcnQgdG8gdGhlIHJlZ3VsYXRvciBjaXRpbmcgbGVnYWwgcHJpdmlsZWdlLCBpbnN0ZWFkIHByb3ZpZGluZyB0aGUgT2ZmaWNlIG9mIExpcXVvciBhbmQgR2FtaW5nIHdpdGggYSBzdW1tYXJ5IG9mIHRoZSBmaW5kaW5ncy4KSSd2ZSBuZXZlciB1bmRlcnN0b29kIGl0LCBidXQgaXQgZG9lc24ndCBtYXR0ZXIgYmVjYXVzZSB0aGV5IGFyZSBvYnZpb3VzbHkgbm90IHNlcmlvdXMgZW5vdWdoIGFib3V0IHNlbGxpbmcgdGhlaXIgaG91c2UuIElmIEknbSBhdCBteSBkZXNrIHdoZW4gSSBnZXQgdGhlIGNhbGwsIEkgd2lsbCBzdGFydCBwdWxsaW5nIHVwIHRoZSBpbmZvcm1hdGlvbiBmb3IgdGhlIHByb3BlcnR5IGZyb20gdGhlIGNvdW50eSBhcHByYWlzYWwgZGlzdHJpY3QncyB3ZWJzaXRlICh0byBmaW5kIHlvdXJzLCBqdXN0IEdvb2dsZSAnW3lvdXIgY291bnR5IG9yIGFyZWFdIGFwcHJhaXNhbCBkaXN0cmljdCcuIEkgZmluZCB0aGUgc3F1YXJlIGZvb3RhZ2UsIHllYXIgYnVpbHQsIHRoZSBsb3Qgc2l6ZSwgbmVpZ2hib3Job29kLCBldGMuLiAKT25jZSBpbiB0aGUgYmlvcyB5b3UgY2FuIHNlbGVjdCB0aGUgYm9vdCBvcmRlci4gSWYgdGhlIGZsYXNoIGRyaXZlIGlzIHRydWx5IGJvb3RhYmxlIGl0IHNob3VsZCBzaG93IHVwIGluIHRoZSBsaXN0IG9mIGRldmljZXMsIHRoZW4geW91IGNhbiBzZXQgdGhlIHByaW9yaXR5IG9mIGl0IHRvIGdvIGJlZm9yZSB0aGUgaGFyZCBkcml2ZS4gT24gbmV4dCByZWJvb3QgaXQgdHJ5IGJvb3RpbmcgZnJvbSB0aGF0IGJlZm9yZSB0aGUgaW50ZXJuYWwgZHJpdmUuCkEgbGl0dGxlIG1hbGUgYm9uZGluZyBhbmQgZm9uZGxpbmcgYXJvdW5kIHBvb2xzaWRlPyBKZXN1cy4gQ2xpbnRvbiBldmVuIGNvIHNwb25zb3JlZCB0aGUgU3RvcCBPdXRzb3VyY2luZyBTZWN1cml0eSwgb3IgU09TIEFjdCwgYmVjYXVzZQpJZiB5b3UgZmFpbCB0byByZXNwb25kIG9yIHNldHRsZSB3aXRoaW4gdGhlIHByZXNjcmliZWQgdGltZSBwZXJpb2QsIHRoZSBhYm92ZSBtYXR0ZXIgbWF5IGJlIHJlZmVycmVkIHRvIG91ciBsZWdhbCBjb3Vuc2VsIHJlcHJlc2VudGluZyBFbGV2YXRpb24gUGljdHVyZXMgZm9yIGxlZ2FsIGFjdGlvbiBhbmQgZnVydGhlciByZW1lZHkuIEluIHRoZSBldmVudCB0aGF0IGxlZ2FsIGFjdGlvbiBpcyBjb21tZW5jZWQsIEVsZXZhdGlvbiBQaWN0dXJlcyB3aWxsIHB1cnN1ZSBhbGwgbGVnYWwsIGVxdWl0YWJsZSBhbmQgc3RhdHV0b3J5IHJlbWVkaWVzIGFnYWluc3QgeW91LCB3aGljaCB3aWxsIGluY2x1ZGUgbW9uZXRhcnkgZGFtYWdlcywgYXMgd2VsbCBhcyBkYW1hZ2VzIGZvciBjb252ZXJzaW9uLCB1bmp1c3QgZW5yaWNobWVudCBhbmQgaW50ZXJmZXJlbmNlIHdpdGggZWNvbm9taWMgcmVsYXRpb25zLCBhcyB3ZWxsIGFzIGNvdXJ0IGNvc3RzIGFuZC9vciBsZWdhbCBjb3Vuc2VsIGZlZXMgaW5jdXJyZWQgaW4gdGhpcyBtYXR0ZXIuIApXaGF0IHdlIG9mZmVyaW5nIGlzIGEgY29udHJvbGxlZCwgdHJ1c3Qgd29ydGh5IGFsdGVybmF0aXZlIHRvIHRoZXNlIGdyZXkgbWFya2V0IHNpdGVzLCBoZSBzYWlkLiAKVEVFTkFHRSBDQVZFTUFOLiBJJ3ZlIGdvdHRhIGdldCBhIGNvcHkuCldoZW4gYSBydWxlciBnZXRzIGEgdmlzaXQgZnJvbSB0aGUgV2hpdGUgVG93ZXIsIHRoZSByZXB1dGF0aW9uIG9mIHRoZSB3aGl0ZSB0b3dlciBwcmVjZWRlcyB0aGUgc2lzdGVyLCBidXQgaWYgdGhhdCBmYWlscyB0byB3b3JrLCB0aGVuIG9mdGVuIHRoZSBUb3dlciB3aWxsIGV4ZXJ0IGl0cyBwb3dlciBtb3JlIG92ZXJ0bHkgdW50aWwgdGhlIGRlc2lyZWQgb2JqZWN0aXZlIGlzIG1ldC4uIApJbiBvcmRlciB0byBxdWFudGlmeSBpdCwgYW4gUlJTUCB3b3VsZCBuZWVkIHRvIGVhcm4gYW4gZXZlbiBoaWdoZXIgNC41NyBwZXIgY2VudCBhbm51YWxseSBmcm9tIGFnZSA2NSB0byBhZ2UgOTAgaW5zdGVhZCBvZiBqdXN0IDQgcGVyIGNlbnQgdG8gcHJvdmlkZSB0aGUgc2FtZSByZXRpcmVtZW50IGluY29tZSBhcyBhIENQUCBwZW5zaW9uIGRlZmVycmVkIHRvIGFnZSA3MC4gClRoZSBsb3dlciBxdWFsaXR5IHN0dWZmIGlzIG9uIG1vcmUgbWFpbnN0cmVhbSBLb3JlYW4gb25seSBzdHJlYW1pbmcgc2l0ZXMuIApJbWFnaW5lIHdoYXQgR3JpZXptYW5uIGNvdWxkIGRvIHRvIHRoaXMgQWpheCBkZWZlbnNlPyBJZiB5b3UganVzdCBoYXZlIFZpbmkgb3V0IHRoZXJlIHlvdSB3aWxsIGZpbmQgc29tZSBnb2FscyBmb3Igc3VyZS4gCkkgd291bGQgbm90IHNheSBpdCBsYXllcnMgd2VsbCB1bmRlciBnbG9zcyBiZWNhdXNlIHRoZSBvcmlnaW5hbCBhcHBsaWNhdGlvbiBkb2VzbiBjb21wbGV0ZWx5IGRyeSwgaXQgd2lwZXMgb2ZmIGFuZCByZXZlYWxzIHRoZSBzdGFpbiBhZnRlci4gCkRvb3J3YXlzIHN1Y2ssIGR1bmdlb25zIGFyZSB0b28gc21hbGwgZm9yIHlvdSwgZm9yZ2V0IGV2ZXIgZ29pbmcgaW4gYW55b25lIGhvbWUgZXZlciBhZ2Fpbi4gClRoaW5ncyBhcmUgZGlmZmljdWx0LCBidXQgdGhpbmdzIGFyZW4ganVzdCBkaWZmaWN1bHQgYXQgR2Fsd2F5IFVuaXRlZCwgdGhleSBhcmUgZGlmZmljdWx0IHRocm91Z2hvdXQgdGhlIGNvdW50cnkuIApBIGxvdCBvZiB3aGV0aGVyIG9yIG5vdCB0aGV5IHdpbGwgb2ZmZXIgZXh0cmFzIHdpdGggaG93IGNvbWZvcnRhYmxlIHRoZXkgZmVlbCB3aXRoIHlvdS4gCkEgaG9sZSBjYW4gc3VjayB5b3UgaW4gc28gZmFyIHlvdSBkb24gcmVhbGx5IHNlZSBhIHdheSBvdXQsIGJ1dCB3aXRoIGhlbHAgeW91IGNhbiBlc2NhcGUgaXQuIE5laXRoZXIgYW54aWV0eSBvciBkZXByZXNzaW9uIGNhbiBnbyBhd2F5IGp1c3QgYnkgdGVsbGluZyBzb21lb25lIHRvIGdldCBiZXR0ZXIuIApPdGhlcnMgaGF2ZSBtZW50aW9uZWQgZ3JlYXQgaWRlYXMsIGFuZCBJIHdhbnRlZCB0byB0aHJvdyBpbiB0aGUgdHJlYWRtaWxsLiBZb3Ugd2lsbCBuZWVkIHRvIHBvc2l0aXZlbHkgcmVpbmZvcmNlIHRoZSB3aG9sZSBnZXR0aW5nIG9uIGFuZCBvZmYsIHRoZW4gc3BlZWQgY2hhbmdlcy4gSSB3b3VsZCBub3QgcnVuIHlvdXIgZG9nIG9uIHRoZSB0cmVhZG1pbGwsIGJ1dCB3YWxraW5nLCBzdXBlcnZpc2VkLCBpcyBncmVhdCBwaHlzaWNhbCBhbmQgbWVudGFsIHN0aW11bGF0aW9uICh0aGV5IGhhdmUgdG8gY29uY2VudHJhdGUgb24gcGFjZSkuIFBsdXMgeW91IGNhbiBnZXQgdHJlYWRtaWxscyBjaGVhcCBhbmQgc29tZXRpbWVzIGZyZWUgb2ZmIENyYWlnc2xpc3QuCkFubmllOiBJIHN0YXJ0ZWQgb2ZmIG15IGxpZmUgYWN0dWFsbHlpbiBhIHByZXR0eSB0cmFkaXRpb25hbCB3YXkuIEkgd2VudCB0b0NvbHVtYmlhIFVuZGVyZ3JhZC4gSSB0aG91Z2h0LCBJIGdvaW5nIHRvc3RhcnQgcGxheWluZyBwb2tlciBpbiB0aGUgbWVhbnRpbWUsdW50aWwgSSBjYW4gZ2V0IGJhY2sgb3V0IG9uIHRoZSBhY2FkZW1pY2pvYiBtYXJrZXQuIApUaGUgY2h1cmNoIGdvaW5nIGNvbW11bml0eSBoYXMgbGVkIHNldmVyYWwgYW50aSBzZXggaW5kdXN0cnkgbW92ZW1lbnRzIGluIFBhaHJ1bXAuIE1vc3QgcmVjZW50bHkgYSBncm91cCBoYXMgYmVndW4gcHJvdGVzdGluZyBiaWxsYm9hcmRzIGFuZCBzaWducyB0aGF0IGFkdmVydGlzZSBtYXNzYWdlIHBhcmxvcnMgYW5kIGEgbmV3IHRvcGxlc3MgYmFyLiBJdCBpcyBpbGxlZ2FsIGluIHRoZSBzdGF0ZSB0byBhZHZlcnRpc2UgcHJvc3RpdHV0aW9uLgpUaGUgY29tbXVuaWNhdGlvbiBpcyBhbHNvIGFmZmVjdGVkIGJ5IHRoZSBzb21lIGV4dGVybmFsIGFzIHdlbGwgYXMgaW50ZXJuYWwgZmFjdG9ycyBzdWNoIGFzIG5vaXNlLCBlbnZpcm9ubWVudCwgc3RyZXNzIGV0Yy4gRm9yIGEgZ29vZCBjb21tdW5pY2F0aW9uIHRoZXJlIHNob3VsZCBiZSBhIGdvb2QgZW52aXJvbm1lbnQuIE5vaXNlIGlzIG9uZSBlbGVtZW50IHdoaWNoIHdlIGNhbm5vdCBhdm9pZCBpbiBjb21tdW5pY2F0aW9uLgpJIGdyZXcgdXAgd2l0aCBteSBwYXJlbnRzIGRpdm9yY2luZyB3aGVuIEkgd2FzIGluIGdyYWRlIHNjaG9vbCBhbmQgYmVjYXVzZSBvZiBvdXIgdmVyeSBjb25zZXJ2YXRpdmUgcmVsaWdpb24gd2FzIGJ1bGxpZWQgYW5kIHNoYW1lZCBiZWNhdXNlIG15IHBhcmVudHMgd2VyZSBkaXZvcmNlZC4gSSBzd29yZSB0aGF0IGlmIEkgZXZlciBnb3QgZGl2b3JjZWQgSSB3b3VsZCBuZXZlciByZW1hcnJ5Li4gCkF0dGVtcHRlZCBwYXJhbGxlbHMgd2l0aCBvdGhlciBtYWpvciB1cmJhbiBjb21wbGV4ZXMgZmFsbCBmbGF0IGFzIHdlbGwuIEh1ZHNvbiBZYXJkcyBpc24ndCBnZW9ncmFwaGljYWxseSBhbmQgYXRtb3NwaGVyaWNhbGx5IHJlbW90ZSBmcm9tIHRoZSBoaXN0b3JpYyBjZW50cmFsIGNpdHkgbGlrZSBMb25kb24ncyBDYW5hcnkgV2hhcmYgICBpdCdzIDEwIG1pbnV0ZXMgb24gZm9vdCBmcm9tIFBlbm4gU3RhdGlvbiBhbmQgYSB0aHJlZSBtaW51dGUgcmlkZSBmcm9tIFRpbWVzIFNxdWFyZSBvbiB0aGUgN3RyYWluLgpZZXMsIHRoaXMgc3VyZSBkb2VzIGxvb2sgbGlrZSBhbiBvZGQgY2hhcmdpbmcgY2hvaWNlLCBhbmQgSSBiZSBwaXNzZWQgaWYgSSB3ZXJlIGNoYXJnZWQgd2l0aCBEVUkgZm9yIHRha2luZyBhbiBhbnRpZGVwcmVzc2FudCAoZWRpdDogYW5kIHRoYXQgd291bmQgdXAgbm90IGhhcHBlbmluZyBpbiB0aGlzIGNhc2UgLiAKU29uZ3MgdG8gYSBtdXNpY2lhbi4gCkkgYmVlbiBmbGlwcGluZyB0aHJvdWdoIHRoZSBib29rIHdoaWxlIGxpc3RlbmluZyB0byBteSB2b2ljZW1haWwuIApJIHRlbmQgdG8gdXNlIHNvbWUgZXJvdGljaXNtIGR1cmluZyB0aGUgbWFzc2FnZSBhbmQgaGl0dGluZyBzb21lIG9mIHRob3NlIHRyaWdnZXIgc3BvdHMgdGhhdCB5b3UgbWlnaHQgbm90IGV2ZW4ga25vdyBhYm91dC4gSSBhbSB0b3RhbGx5IG51ZGU7IGFuZCBvZiBjb3Vyc2UsIHNvIGFyZSB5b3UuIEkgaGF2ZSBjZXJ0YWluIHRyaWdnZXIgc3BvdHMgdGhhdCBjYW4gdXNlIHNwZWNpYWwgYXR0ZW50aW9uIGZyb20gdGltZSB0byB0aW1lLCBhbmQgSSBhbSBzdXJlIHlvdSBkbyB0b28uIApTbyB0aGV5IHJlIGxvY2F0ZSB0byBhbiBhcmVhIHdoZXJlIHRoZXJlIGlzIHJhdyBtYXRlcmllbCB0aGV5IGNhbiB1c2UsIGFwYXJ0IGZyb20gd2F0ZXIuIE5vdyBhcmd1YWJseSwgaWYgdGhleSBsZWZ0IHRoZSBhcmVhIGFsb25lIGZvciAyMCB5ZWFycyBvciBzbywgdGhleSBjb3VsZCBjb25jZWl2YWJseSBtb3ZlIGJhY2sgQlVUIHRoZXkgaGF2ZSB0byBkcml2ZSB0aGVpciBoZXJkcyBiYWNrIHRvIHRoZSB3ZWxsIGRhaWx5IGZvciB0aGUgYW5pbWFscyB0byBkcmluaywgYW5kIG9uIHRoZSB3YXkgdGhlIGFuaW1hbHMgZ3JhemUgYWxsIHRoZSBncm93aW5nIHBsYW50cyBhbmQgY3V0IHVwIHRoZSBzb2lsIHN1cmZhY2UgYWxsb3dpbmcgd2luZCBibG93biBlcm9zaW9uIGV0YyBldGMgZXRjIC5vdHRlcmRyb3BwaW5ncyAgMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ29ZZWFoLCB0cnVlLiBJdHMgbGlrZSB5b3VyIHRhc3RlIGJ1ZHMgcmUgYXdha2U6IHRoZSBzdW4gY29tZXMgb3V0IGZyb20gYmVoaW5kIHRoZSBjbG91ZHM6IHlvdSB3ZWVwIHRlYXJzIG9mIHB1cmUgam95LiAKVGhlIGZsaXAgc2lkZSBvZiB0aGlzIGNvaW4gaXMgdGhhdCB0aGUgcHJpdmlsZWdlZCBhcmUgYWJsZSB0byBzbGlwIG91dCBvZiB0aGUgbGF3IHJlYWNoLCBlc3BlY2lhbGx5IHdoZW4gaXQgY29tZXMgdG8gZHJpbmtpbmcgYW5kIGRyaXZpbmcuIFRoZXNlIHBlb3BsZSBoYXZlIGNhcnMuIFRoZXkgY2FuIGFmZm9yZCB0byB0YWtlIEx5ZnRzIGFuZCBVYmVycywgYnV0IGNob29zZSB0byBkcml2ZSBpbnN0ZWFkLiAKU2Nocm9mZmUgQmVyZ3dlbHRlbiB1bmQgZ3JuZSBMb3JiZWVyd2xkZXIsIGR1bmtsZSBWdWxrYW5mb3JtYXRpb25lbiB1bmQgd2lsZGUgU3RlaWxrc3RlbiBsb2NrZW4gdm9yIGFsbGVtIFdhbmRlcmVyIHVuZCBJbmRpdmlkdWFsdXJsYXViZXIuIEFuZHJlYSBHcmllbWFubiB3YW5kZXJ0IGJlciBUcmF1bXBmYWRlIG1pdCBzcGVrdGFrdWxyZW4gQXVzc2ljaHRlbiwgZXJsZWJ0IHp1IEthcm5ldmFsIGluIGRlciBIYXVwdHN0YWR0IFNhbnRhIENydXogZWluZSByYXVzY2hlbmRlIFB1ZGVyc2NobGFjaHQgdW5kIGJsaWNrdCBtaXQgZGVtIGdydGVuIFNwaWVnZWx0ZWxlc2tvcCBkZXIgV2VsdCBpbiBkZW4gZnVua2VsbmRlbiBTdGVybmVuaGltbWVsLi4gCkluIGhlciBsYXRlc3Qgb25lLCBzaGUgY29tcGFyZXMgTmFuY3kgUGVsb3NpIHRvIGEgZGljdGF0b3IsIGEgZGVzcG90LCBhbmQgYSBRdWVlbi4gCkkgd2FzIGFmcmFpZCB0aGF0IHRoZXkgYmUgb2theSB3aXRoIGl0IGluIG90aGVyIHBlb3BsZSwgYnV0IGl0IHdvdWxkIGJlIGEgYnVyZGVuIG9uIHRoZW0sIGVzcGVjaWFsbHkgaWYgSSBjaG9zZSBhIHdvbWFuIG92ZXIgYSBtYW4uIApEYW5leWtvIGlzIHRoZSBmaXJzdCAiY2VsZWJyaXR5IiBtZW1iZXIgb2YgVGVhbSBwYXJ0eXBva2VyLCB0aGUgdGVhbSwgY2FwdGFpbmVkIGJ5IHBva2VyIGxlZ2VuZCBNaWtlIFNleHRvbiAgIHRoZSB2b2ljZSBvZiB0aGUgV1BULCBpbmNsdWRlcyB0aGUgbGlrZXMgb2YgU2NvdHQgQmF1bXN0ZWluLCBKYW1pZSBLZXJzdGV0dGVyIGFuZCBLYXJhIFNjb3R0LgpFdmVuIG9uIHNvbWUgd2V0IGJvYXJkcyBzb21ldGltZXMgeW91IHJhdGhlciBiZXQgaGFsZiBwb3QgaWYgeW91IGNydXNoIHRoZSBib2FyZCBhbmQgcnVub3V0cyBhbmQgd2FudCB0byBrZWVwIGRvbWluYXRlZCBoYW5kcyBpbiB0aGF0IHdvdWxkIG90aGVyd2lzZSBmb2xkLCBsaWtlIG9uIDNiZXQgcG90cy4gCk1heWJlIG1vc3Qgb2YgdGhlc2Ugbm9uIEVuZ2xpc2ggYXJyaXZlZCBpbiB0aGUgbGFzdCBjZW50dXJ5LCBtYXliZSBsYXN0IHdlZWssIGJ1dCB0aGF0IGFsbCBtb290LiAKSGUgd29ya2VkIGV2ZXJ5IFdvcmxkIFNlcmllcyBvZiBQb2tlciBldmVudCBzaW5jZSB0aGVuLCByZXR1cm5pbmcgdG8gTGFzIFZlZ2FzIGV2ZXJ5IHllYXIgc2luY2UgcmV0aXJpbmcgaW4gMjAwNCBhbmQgbW92aW5nIGJhY2sgdG8gU2FuZHVza3kuIEFsb25nIHRoZSB3YXksIGhlIGRlYWx0IHRvIHNvbWUgb2YgdGhlIGdhbWUgYmVzdCBwb2tlciBwbGF5ZXJzIGFuZCBiZWNvbWUgYWNxdWFpbnRlZCB3aXRoIHBlb3BsZSBoZSBjb25zaWRlcnMgdG8gYmUgc29tZSBvZiB0aGUgaW5kdXN0cnkgYmVzdCBtYW5hZ2Vycy4uIApJdCBjb21lcyBkb3duIHRvIHR3byBndXlzLCBmb3IgbWU6IC91L0ZlZXRvZkthdHlQZXJyeSBhbmQgL3UvTW5lbDg0LiAKUE1HJ3MgYW5udWFsIGhvbGlkYXkgcGFydHkgaXMgdHdvIG5pZ2h0cyBhdCBhIGx1eHVyeSByZXNvcnQsIHdoZXJlIHNpZ25pZmljYW50IG90aGVycyBhcmUgaW52aXRlZCBhbmQgZWFjaCBlbXBsb3llZSByZWNlaXZlcyBhIGZyZWUgcm91bmQgb2YgZ29sZiBvciBhIG1hc3NhZ2UuIApXaGlsZSB0aGlzIHN1YnJlZGRpdCBpcyBub3QgcmVzdHJpY3RlZCB0byBhY2NvbXBsaXNoZWQgY29ubGFuZ2VycywgYSBjZXJ0YWluIGxldmVsIG9mIGV4cGVydGlzZSBpcyBleHBlY3RlZC4gV2UgcmVjb21tZW5kIHRoYXQgeW91IGx1cmsgZm9yIGEgd2hpbGUgdG8gbGVhcm4gdGhlIGJhc2ljcy4KSGF2aW5nIHRoZSBvcHRpb24gdG8gYnV5IHRoZSBzdG9jayBhdCBhIGNlcnRhaW4gcHJpY2UgaW4gdGhlIGZ1dHVyZSBpcyBhIHRyaXZpYWwgZGlmZmVyZW5jZSB0aGF0IGRpc3RyYWN0cyBmcm9tIG15IG9idmlvdXMgcG9pbnQuIEkgd29uIGFsbG93IHlvdSB0byB3YXN0ZSBhbnkgbW9yZSBvZiBteSB0aW1lLiAKT25lIGJpZyB0aGluZyBmb3IgbWUgaXMgdGhhdCBJIHdpc2ggdGhleSBkaWRudCBvdmVyaHlwZSB0aGVtLiAKSmFudWFyIDIwMTAgdm9uIFJvYmJ5IE1hbHViYS4gCkFtb25nIHRoZSBjcmV3LCBkYXRpbmcgaXMgbm90IGp1c3QgYWxsb3dlZCBidXQgdGFjaXRseSBlbmNvdXJhZ2VkICAgdGhleSBsaXZlIG9uYm9hcmQgdGhyb3VnaCB0aGUgZW50aXJldHkgb2YgdGhlaXIgY29udHJhY3Qgd2l0aG91dCBkYXlzIG9mZiwgb2Z0ZW4gMTAgbW9udGhzIGEgeWVhci4gVGhleSBoYXZlIHRoZWlyIG93biBjYWxlbmRhciBvZiBkYWlseSBldmVudHMgdGhhdCByYW5nZSBmcm9tIGthcmFva2Ugc2Vzc2lvbnMgdG8gcG9rZXIgZ2FtZXMgYW5kIGZvcmVpZ24gbGFuZ3VhZ2UgY2xhc3Nlcy4gClJlbm8gQ2hldmVsbGUgRmVsbHMsIDQ4LCByZXNpZ25lZCBmcm9tIHRoZSBkZXBhcnRtZW50IFN1bmRheSwgc2FpZCBBc3Npc3RhbnQgQ2hpZWYgSmFtZXMgR3JpZmZpdGggb2YgdGhlIFBhbGF0a2EgUG9saWNlIERlcGFydG1lbnQuIApIZSBjb3VsZCBoYXZlIHJlY29yZGVkIGl0IGxpdmUgdG9vLCBob3cgd291bGQgdGhlIGNvcCBrbm93PyBBbmQgYmVjYXVzZSB0aGUgcG9saWNlIGhhdmUgdmVyeSBzdHJpY3QgcnVsZXMgb24gaG93IHRvIGNhcnJ5IG91dCBzZWFyY2hlcyBhbmQgc3VjaCwgbm90IHRvIG1lbnRpb24gaXQncyBub3QgbGlrZSB0aGV5IHdyb3RlIHRoZSBsYXdzIHlvdXIgZWxlY3RlZCBvZmZpY2lhbHMgbWFkZS4gCklscyBzZXJ2ZW50IGRlIHJlbGFpcyAgbGEgVHJhZGl0aW9uIHByaW1vcmRpYWxlIGF1IGNhcnJlZm91ciBkZXMgY2l2aWxpc2F0aW9ucyBxdWkgdm9udCBuYXRyZS4uIApIaWRkZW50b2Z1IHUKVGhlIG5ld2x5IHJlbm92YXRlZCBzZWNvbmQgZmxvb3Igb2YgQ2Flc2FycyBBdGxhbnRpYyBDaXR5IGlzIHRoZSBob3N0IHRvIHRoZSBsYXJnZXN0IGNvbnRpZ3VvdXMgZ2FtaW5nIGFyZWFzIGluIGFsbCBvZiBBdGxhbnRpYyBDaXR5LiAKVGhjIExhb3RpYW4gcG9zdCBhdCBOYW0gQmFjLCBub3J0aCBvZiBMdWFuZyBQcmFiYW5nLCB0aGUgUm95YWwgTG9hdGlhbiBjYXBpdGFsLCBpcyB3aXRoaW4gdG9vIG1pbGVzIG9mIHdoZXJlIFByYSAgcGhhcyBzYWlkIHRoYyB0aHJlZSBSZWQgYmF0dGFsICBpb25zIHZ2Y3JjIGFycmF5ZWQgYWdhaW5zdCBoaXMgZm9yY2VzLiAKQWdyZWVkLiBUaGUgc3dpbmdpbmcsIHN3YXNoYnVja2xpbmcgbW92ZSBzaG91bGQgaGF2ZSB3b3JrZWQgYmVjYXVzZSB0aGF0IGNsYXNzaWMgcGlyYXRlIG1vdmllIGFjdGlvbi4gSSB0aGluayB0aGUgR00gZm9yZ290IHRoYXQgZXZlcnl0aGluZyB3ZSAia25vdyIgYWJvdXQgcGlyYXRlcyBpcyBhIGZhYnJpY2F0aW9uLiBJbiByYXJlIGNhc2VzIGl0IGEgdW5pcXVlIGV2ZW50IG9yIHBlcnNvbiB0aGF0IHdhcyBzbyBldm9jYXRpdmUsIGl0IGdvdCByZXRvbGQgaW4gZGlmZmVyZW50IGNvbnRleHRzIGVub3VnaCB0aGF0IGl0IG5vdyBhIGNvbW1vbiBtb3RpZiBmb3IgdGhlIFBpcmF0ZXMgc3ViZ2VucmUgb2YgdGhlIEZhbnRhc3kgZ2VucmUuIFdoeSBmb3JjZSBjb25zZXF1ZW5jZXMgb250byBhIGNvb2wgbW92ZT8KT3JnYW5pemVycyBub3RlIHRoYXQgY2hpbGRyZW4gYXJlIG5vdCBwZXJtaXR0ZWQgYXQgQ0VTLiBBbHRob3VnaCBraWRzIGFyZSBhbHNvIGJhbm5lZCBmcm9tIEdyYWNlIEhvcHBlciwgdGhhdCBjb25mZXJlbmNlIHN0aWxsIG1hbmFnZXMgdG8gb2ZmZXIgZnJlZSBjaGlsZCBjYXJlIGZvciBhdHRlbmRlZXMuCk5hamVlYiBBeml6aSwgc3BlYWtpbmcgdG8gQWwgSmF6ZWVyYSBmcm9tIHRoZSBBZmdoYW4gY2FwaXRhbCwgc2FpZCB0aGUgYWNjdXNlZCwgbWFueSBvZiB3aG9tIGFyZSBjbG9zZWx5IGNvbm5lY3RlZCB0byB0aGUgYmFuaydzIGZvcm1lciBvZmZpY2lhbHMsIHNob3dlZCAibm8gc3ltcGF0aHkgdG93YXJkcyB0aGlzIGNvdW50cnkgb3IgdGhlIHBlb3BsZSBvZiB0aGlzIGNvdW50cnkiLgpBbmQgYWZ0ZXIgdGhhdCBqdXN0IGdvIGZvciBraWNrZXIgcG93ZXIuIApMb29raW5nIGF0IHRoZSBJcmlzaCBwYXJ0eSBJIGxpbmtlZCBoZXJlLCB0aGV5IHJlY2VudGx5IHdvbiBhIGNvdXJ0IGJhdHRsZSBpbiB3aGljaCB0aGVyZSB3YXMgYW4gYXR0ZW1wdCB0byBwdXQgbWVtYmVycyBpbiBwcmlzb24gcmVhbGx5IGRvZGd5IHJlYXNvbnMuIFRoZWlyIHNpc3RlciBwYXJ0eSBpbiBFbmdsYW5kIGhhcyBzdWZmZXJlZCBwb2xpY2UgaW5maWx0cmF0aW9uIGFuZCBibGFja2xpc3Rpbmcgb2YgbWVtYmVycy4gU2ltaWxhcmx5IGluIHRoZSBVU0EsIHRoZSBvZmZpY2lhbCBjb21tdW5pc3QgcGFydHkgd2FzIGluZmFtb3VzbHkgcmlkZGxlZCB3aXRoIENJQS4uIApTb21lIHN1c3RhaW5lZCB0ZXJyaWJsZSBidXJucy4gCkkgc3RydWdnbGVkIHdpdGggZ2V0dGluZyBoZWxwLiBJdCB3YXMgYSBsb25nIGFuZCBkaWZmaWN1bHQgdGFzayB0aGF0IEkgZGlkIHdpdGhvdXQgYW55IHN1cHBvcnQgb3IgaGVscC4gTW9yZSB0aGFuIG9uY2UgSSBnYXZlIHVwLiBGb3Igc29tZW9uZSB3aG8gYWxyZWFkeSBoYXMgc29jaWFsIGFueGlldHksIHRvIGJlIHRvbGQgImdldCBoZWxwLCBmb3IgcmVhbCIgcmluZ3Mgd2l0aCB0aGUgc2FtZSBpbnNpbmNlcml0eSBhcyB0ZWxsaW5nIGRlcHJlc3NlZCBwZW9wbGUgdG8gInN0b3AgYmVpbmcgc2FkIi4gQXMgYSBzaWRlIG5vdGUsIEkgYWxzbyBoYXZlIGRlcHJlc3Npb24uClRoYW5rZnVsbHkgc2hlIGRpZCB0aGF0IGluIGFub3RoZXIgdmlkZW8uIApBdCBtb3N0IHBsYWNlcyB0aGlzIGlzIHByZXR0eSByYXJlIGFzIHRoZSB0aXBwZWQgd2FnZXMgd291bGQgcHJvYmFibHkgYmUgYWJvdXQgdHdpY2Ugd2hhdCB5b3UgYXJlIGdldHRpbmcgcGFpZCBhcyBhIGJhcnRlbmRlci4gVGhvdWdoIHRoZXkgaGF2ZSBzb21lIGJ1c3kgbmlnaHRzIGFuZCBzb21lIHF1aWV0IG5pZ2h0cy4gCklmIHlvdSdyZSBmbHlpbmcgZHVyaW5nIHRoZSBkYXksIHRoZSBuZXh0IHN0ZXAgaXMgc3VuIHByb3RlY3Rpb24uICJQaWxvdHMgYXJlIGF0IGhpZ2hlciByaXNrIG9mIHNraW4gY2FuY2VyIHRoYW4gYW55IHByb2Zlc3Npb24gb24gdGhlIHBsYW5ldCwiIHNheXMgTllDIGRlcm1hdG9sb2dpc3QgRHIuIERlbmR5IEVuZ2VsbWFuLCB3aG8gbm90ZXMgdGhhdCBVViByYXlzIGFyZSBzaWduaWZpY2FudGx5IHN0cm9uZ2VyIGF0IGhpZ2ggYWx0aXR1ZGUuIFNoZSByZWNvbW1lbmRzIGFwcGx5aW5nIGEgemluYyBiYXNlZCBzdW5zY3JlZW4gYmVmb3JlIGZseWluZywgYW5kIGNob29zaW5nIHlvdXIgc2VhdCBjYXJlZnVsbHk6IEVuZ2VsbWFuIGJvb2tzIGFuIGFpc2xlIHNlYXQgdG8gYXZvaWQgZGlyZWN0IGNvbnRhY3Qgd2l0aCBpbmNvbWluZyByYXlzLCB3aGlsZSBSb3VsZWF1IHNlbGVjdHMgYSB3aW5kb3cgc2VhdCBzbyBzaGUgY2FuIGNsb3NlIHRoZSBzaGFkZS4gU2hlIHN1Z2dlc3RzIGEgY2hlbWljYWwgZXhmb2xpYW50IHdpdGggaW5ncmVkaWVudHMgc3VjaCBhcyBsYWN0aWMgYWNpZCwgZm9sbG93ZWQgYnkgYSBtYXNrLiBPbmNlIHlvdSd2ZSBzdHJpcHBlZCBvZmYgdGhlIHBsYW5lIGdyaW1lLCBmZWVsIGZyZWUgdG8gbW9pc3R1cml6ZS4KQWxsIHRoZSBmZWxsYXMgd2VyZSBleHBlY3RlZCB0byBwdXQgb3V0IGNoYWlycyBhbmQgaGVscCB3aXRoIHNldCB1cC4gCk15IGJpZyBwb2ludCBvZiBjb25jZXJuIGlzIHRoZSBib3QgbGFuZS4gClNpbmNlIHRob3NlIGZhbWlsaWVzIHdlcmUgICBtb3N0IG9mIHRoZSB0aW1lICAgQ2hyaXN0aWFuLCBpdCBiZWNhbWUgYSBjb21tb24gc2lnaHQgdG8gc2VlIENocmlzdGlhbiBzeW1ib2xzIGluIGhvdGVscy4gCkNvbm9yIGxvb2tlZCBwcm9taXNpbmcgdG9vLCBidXQgaGUgY29uY2x1ZGVkIGZpZ2h0aW5nIGJ1c2VzIGluIHVuZGVyZ3JvdW5kIHBhcmtpbmcgZ2FyYWdlcyB3YXMgbW9yZSBoaXMgY2FsbGluZyBjYXJkLiBIZSB0b28gaXMgZmFjaW5nIGEgcG90ZW50aWFsIGJhbi4gClJlY2h0c3dpZHJpZ2UgSW5oYWx0ZSB3YXJlbiB6dW0gWmVpdHB1bmt0IGRlciBWZXJsaW5rdW5nIG5pY2h0IGVya2VubmJhci4gRWluZSBwZXJtYW5lbnRlIGluaGFsdGxpY2hlIEtvbnRyb2xsZSBkZXIgdmVybGlua3RlbiBTZWl0ZW4gaXN0IGplZG9jaCBvaG5lIGtvbmtyZXRlIEFuaGFsdHNwdW5rdGUgZWluZXIgUmVjaHRzdmVybGV0enVuZyBuaWNodCB6dW11dGJhci4gClRoZSBudW1iZXIgb2YgTmV2YWRhIGNoaWxkcmVuIGRyYWdnZWQgaW50byBwcm9zdGl0dXRpb24gaXMgb24gdGhlIHJpc2UgICBhIHNjYXJ5IHJlYWxpdHkgdGhhdCB3aWxsIHRha2UgYSBjb21tdW5pdHkgZWZmb3J0IHRvIHJldmVyc2UsIGEgTWV0cm8gUG9saWNlIGxpZXV0ZW5hbnQgdG9sZCBhbiBpbnRlcmZhaXRoIGdyb3VwIFdlZG5lc2RheS4KVmlldG5hbSBzYXlzIGludmVzdGlnYXRpbmcgY2F1c2Ugb2YgYm9hdCBzaW5raW5nIGluIGNvbnRlc3RlZCB3YXRlcnNWaWV0bmFtIGlzIHNlZWtpbmcgY2xhcmlmaWNhdGlvbiBvZiBob3cgYSBmaXNoaW5nIGJvYXQgY2FtZSB0byBzaW5rIHRoaXMgd2VlayBpbiB0aGUgY29udGVzdGVkIFNvdXRoIENoaW5hIFNlYSwgdGhlIEZvcmVpZ24gTWluaXN0cnkgc2FpZCBvbiBTYXR1cmRheSwgZGF5cyBhZnRlciBhIGxvY2FsIHJlc2N1ZSBhZ2VuY3kgc2FpZCBpdCB3YXMgcmFtbWVkIGJ5IGEgQ2hpbmVzZSB2ZXNzZWwuIFZpZXRuYW0gYW5kIENoaW5hIGhhdmUgbG9uZyBiZWVuIGVtYnJvaWxlZCBpbiBtYXJpdGltZSBkaXNwdXRlcyBpbiB0aGUgcG90ZW50aWFsbHkuIApZb3VyIGhlYWRsaW5lIG11c3QgYmUgY29tcHJpc2VkIG9ubHkgb2YgdGhlIGV4YWN0IGNvcGllZCBhbmQgcGFzdGVkIGhlYWRsaW5lIG9mIHRoZSBhcnRpY2xlLgpFaWdodCBtaWxsaW9uIHJlYXNvbnMgdG8gcGxheSBvbiBiZXQzNjUgdGhpcyBtb250aApJIGNhbiBnZXQgQVQgRmliZXIgdGhyb3VnaCBTb25pYywgd2hpY2ggaGFzIHRoZSBhZGRlZCBib251cyBvZiBubyBjYXBzLCBidXQgdGhlIHNlcnZpY2UgaXMgcHJpY2V5LCBhbmQgY2FycmlhZ2UgcnVsZXMgcmVxdWlyZSB0aGF0IFNvbmljIHByb3ZpZGUgYSBwaG9uZSBsaW5lIHRvIHVzZSBBVCBmaWJlciBwbGFudCwgd2hpY2ggYWRkcyBjb3N0IGFuZCBhIHRvbiBvZiB0YXhlcyBhbmQgZmVlcy4gSWRlYWxseSwgSSBsb3ZlIHRvIGhhdmUgU29uaWMgb3duIGZpYmVyIGxpa2UgbXkgZnJpZW5kcyBpbiBCZXJrZWxleSwgYnV0IEkgbm90IHN1cmUgdGhleSBldmVyIGV4dGVuZCBzZXJ2aWNlIHRvIEFsYW1lZGEuLiAKV2l0aCB0aGUgY29tcGFueSBub3Qgd2lsbGluZyB0byByZXBvcnQgdGhlIGNhc2UgdG8gdGhlIENoaW5lc2UgcG9saWNlLCBwb2tlciBwbGF5ZXIgVG9tIEJyb2FkYmVudCB0b29rIGl0IHVwb24gaGltc2VsZiB0byBkbyBzby4KV2h5IGNhbid0IEkganVzdCBhdXRvbWF0ZSB0aGF0IHByb2Nlc3MgKG9yIGNvbnN1bHQgYSB0YWJsZSBvZiBjYWxjdWxhdGlvbnMpIGFuZCB3aW4gYSBsb3Qgb2YgbW9uZXkgaW4gb25saW5lIHBva2VyPwpXZWxsIHRoYXQgZGF5IEkgcHJlIGdhbWVkIHdpdGgga2ZjIHRoaW5raW5nIEkgd2FzIGdldHRpbmcgYSBnb29kIGxpbmluZy4gU28gd2UgYXJlIG91dHNpZGUgc21va2luZyBjb25lcyBhbmQgSSB0aGluayBpdGQgYmUgYSBibGFzdCBpZiBJIGxpZ2h0IGEgZmFydCBqdXN0IGFzIHNvbWVvb25lcyByaXBwaW5nIEkgb24gdGhlIGJpbGx5LiAKSW4gMjAxNyBhIGNvdXJ0IGNvbnZpY3RlZCBNciBTaG9yIG9mIHBsYXlpbmcgYSByb2xlIGluIGEgc2NoZW1lIHRoYXQgdXNlZCBmYWtlIGxvYW5zIHRvIFJ1c3NpYW4gY29tcGFuaWVzIHRvIHNpcGhvbiBuZWFybHkgJDFibiBmcm9tIHRoZSBjb3VudHJ5J3MgYmFua2luZyBzeXN0ZW0gaW4gMjAxNC4gCkFuIHVua25vd24gZmlndXJlIHRoaXMgdGltZSBsYXN0IHllYXIsIGhhdmluZyBvbmx5IGV2ZXIgcGxheWVkIGluIGxvdyBrZXkgZ2FtZXMgYXQgcHVicyBhbmQgaGlzIGxvY2FsIGNhc2lubyBpbiBIdWxsLCBIZXNwIG1hZGUgaGlzdG9yeSBpbiBKdWx5IGJ5IGVudGVyaW5nIHRoZSBnYW1lJ3MgbW9zdCBwcmVzdGlnaW91cyB0b3VybmFtZW50ICAgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciAoV1NPUCkgaW4gTGFzIFZlZ2FzICAgZmluaXNoaW5nIGZvdXJ0aCBvdXQgb2YgNywyMjAgZW50cmFudHMsIGFuZCB3aW5uaW5nICQyLjZtICgybSkuCllvdSBjYW4gbmFiIHRoaXMgc29uZyBmcm9tIHZhcmlvdXMgb3V0bGV0cy9Zb3V0dWJlLiA1MikgUG9rZXIgRmFjZS8gU3BlZWNobGVzcy8gWW91ciBTb25nIHcvIEVsdG9uIEpvaG4uIApFciB3dXNzdGUgbmF0cmxpY2gsIGRhc3MgaWhyIGRhcyB3aWVkZXIgc2VociBwZWlubGljaCB3ZXJkZW4gd3JkZSwgd2FocmhlaXRzZ2Vtc3MgenUgYW50d29ydGVuLiBCZWltIEtvY2hlbiwgZGFubiBzdGVoZSBpY2ggdm9yIGRlbSBIZXJkIHVuZCBncmVpZmUgbWlyIGlucyBIc2NoZW4uIApBbG9uZyBXZXN0IDM0dGggU3RyZWV0LCB0aGUgb2ZmaWNlIHRvd2VyIGRlc2lnbmVkIGJ5IEZvc3RlciArIFBhcnRuZXJzIGF0IDUwIEh1ZHNvbiBZYXJkcyB3aWxsIGJlIGFuY2hvcmVkIGJ5IEJsYWNrUm9jay4gClByb2JhYmx5IHN3YXAgYSBqdWRnbWVudCBvciB3YXJuaW5nIGZvciBzb3VsIGNoYXJnZSBhcyB3ZWxsLi4gCkR5bmFtaWMgTmV0d29yayBNZWNoYW5pc21zIG9mIFJlbGF0aW9uYWwgSW50ZWdyYXRpb24KVGhleSBzdGluaywgdGhleSBzaGVkIGhhaXIgbGlrZSBjcmF6eSwgdGhleSBkcm9vbCBhbmQgc2xvYmJlciBhbGwgb3ZlciB0aGUgcGxhY2UsIHRoZXkgc2hpdCBhbmQgcGlzcyBvbiB0aGUgZmxvb3IsIHRoZXkgZXh0cmVtZWx5IGh5cGVyYWN0aXZlLCBhIGxvdCBvZiB0aGVtIGFyZSBhZ2dyZXNzaXZlIGFuZCB3aWxsIHJhbmRvbWx5IGF0dGFjayBzdHJhbmdlcnMgZm9yIG5vIGdvb2QgcmVhc29uLCBzb21ldGltZXMga2lsbGluZyB0aGVtLiBBbmQgdGhleSBmdWNraW5nIGJhcmsgYXQgZXZlcnl0aGluZyEKU29tZSByZXRpcmVlcyB3b3VsZCByYXRoZXIgZGVmZXIgdGhlaXIgUlJTUCB3aXRoZHJhd2FscyB1bnRpbCA3Miwgb3IgYmVsaWV2ZSB0aGV5IG11c3Qgd2FpdCB0aGF0IGxvbmcsIHJlbHlpbmcgaW5zdGVhZCBvbiBub24gcmVnaXN0ZXJlZCBvciBURlNBIHNhdmluZ3Mgb3IgdGhlaXIgQ1BQIHBlbnNpb24gdG8gc3VwcGxlbWVudCB0aGVpciBjYXNoIGZsb3cgaW4gdGhlIGludGVyaW0uLiAKU2VtaWFobW9vIGlzIHRoZSBmYXZvdXJpdGUgaGVhZGluZyBpbnRvIHRoZSB0b3VybmFtZW50LCBjYXJyeWluZyBhIDM2IDAgcmVjb3JkLiBJdCBiZWF0IFdhbG51dCBHcm92ZSA3OSA2NyBmb3IgdGhlIEZyYXNlciBWYWxsZXkgdGl0bGUgdHdvIFN1bmRheXMgYWdvIGF0IFJpdmVyc2lkZSwgYW5kIGVkZ2VkIHRoZSBHYXRvcnMgNzcgNzUgaW4gdGhlIGZpbmFsIG9mIHRoZSBiYWxseWhvb2VkIENlbnRlbm5pYWwgVG9wIDEwIFNob290IE91dCBpbiBKYW51YXJ5LiAKQWlyIE5ldyBaZWFsYW5kIGRpZCBub3QgcGxhY2UgYW55IG9yZGVycyBmb3IgdGhlIEEzODAsIGJ1dCB0aGV5IGRvIGhhdmUgYSB2ZXJ5IHNleHkgbG9va2luZyBsaXZlcnkgb24gdGhlaXIgbmV3IDc4NyBEcmVhbWxpbmVyLiAKQWxsIGhlIHdhcyB0cnlpbmcgdG8gZG8gd2FzIGp1c3QgbWFrZSBiaWcgYmV0cyBhbmQgYnVsbHkgZXZlcnlvbmUsIGJ1dCB0aGF0IHdhc24gd29ya2luZyBmb3IgaGltLiBIZSBzdGFja2VkIG9mZiAkM2sgd2l0aGluIGFuIGhvdXIgYW5kIHN1cmUsIHRoYXQgZG9lc24gbWVhbiBqYWNrIHNoaXQgdG8gaGltLCBidXQgaGUgd2FzIHBsYXlpbmcganVzdCBsaWtlIHRoZSB2aWRlbyBhYm92ZSB3aGljaCBpcyBwcmV0dHkgYmFkLiAKVGhlIDcxIHJvb21zIGFuZCBzdWl0ZXMgaGF2ZSB2aWV3cyBvbnRvIHRoZSBHcmFuIFZpYSwgQ2FsbGUgSG9ydGFsZXphIG9yIHRoZSBpbm5lciBjb3VydHlhcmQuIFNvdW5kcHJvb2ZpbmcgaXMgZXhjZWxsZW50LCB3aGljaCBpcyBpbXBvcnRhbnQgaW4gdGhpcyBsb2NhdGlvbi4gCklmIHlvdSBkZWNpZGUgdG8gdGFrZSB0aGUgYWJvdmUgdGlwcyBpbnRvIGNvbnNpZGVyYXRpb24sIHRoZSBjaGFuY2VzIG9mIHlvdSBmaW5kaW5nIGEgdmVyeSBnb29kIG9ubGluZSBwb2tlciBzaXRlIGlzIHJlYWxseSBoaWdoLiAKQ2hpcCBvbiBUaGUgU2hvdWxkZXIgKHdoZW5ldmVyIGEgY3JlYXR1cmUgZmFpbHMgYW4gSW50aW1pZGF0ZSBjaGVjayBhZ2FpbnN0IHlvdSwgeW91IGdhaW4gYSArMiBib251cyBvbiB5b3VyIG5leHQgSW50aW1pZGF0ZSBjaGVjayBhZ2FpbnN0IHRoYXQgY3JlYXR1cmUpLCBvciBDaXZpbGl6ZWQgKGdhaW4gYSArMSB0cmFpdCBib251cyBvbiBLbm93bGVkZ2UgKG5vYmlsaXR5KSBhbmQgS25vd2xlZGdlIChsb2NhbCkgY2hlY2tzKSB3b3VsZCBmaXQgRG9jIHF1aXRlIHdlbGwsIGFsc28uIApTbyBvbmUgdGltZSBhZnRlciBoZSBtYWRlIHNvbWUgY29tbWVudCBhYm91dCBtZSBjb21pbmcgaG9tZSB3aXRoIGhpbSwgSSBtYWRlIHRoZSBzYW1lIGpva2UuIApGaXNoZXIgQnJld2luZy4gT25lIG9mIG15IGZhdm9yaXRlIHNwb3RzLCB0aGV5IGJyZXcgYWxsIHRoZWlyIGJlZXIgYnV0IG5vIGxpcXVvciBpcyBzZXJ2ZWQgdGhlcmUuIFN1cGVyIGNoaWxsIGFuZCBmcmllbmRseSBjcm93ZCB0aG91Z2gsIGlmIEkgd2FzIHRyeWluZyB0byBtYWtlIGZyaWVuZHMgSSBwcm9iYWJseSBzdGFydCB0aGVyZS4KSSBoYWQgbXkgZmlyc3QgcmVhbCB1bHRyYXNvdW5kIHRvZGF5ISAoTWlkd2lmZSB0cmllZCB0byBkbyBpdCBsYXN0IHdlZWsgYnV0IHN1Y2tlZCBhdCBpdCBhbmQgY291bGQgYmFyZWx5IGZpbmQgbXkgdXRlcnVzLCBzbyBoYWQgaXQgZG9uZSBieSBhbiBhY3R1YWwgdWx0cmFzb3VuZCB0ZWNoIHRvZGF5KS4KRm9jdXMgT24gU291dGggRmxvcmlkYTogSG9saWRheSBEZXByZXNzaW9uIEFuZCBTdHJlc3NUaGUgaG9saWRheXMgYXJlIGEgdGltZSBvZiBjaGVlciBidXQgdGhleSBjYW4gYWxzbyBjYXVzZSBhIGxvdCBvZiBzdHJlc3MgYW5kIGRlcHJlc3Npb24gZm9yIG1hbnkgQW1lcmljYW5zLgpFdCBjJ2VzdCB0b3V0ZSBsYSBjb21wbGV4aXQgZGUgY2UgZHNpciBkZSBzdXBwbG1lbnQgZGUgZm1pbml0LCBjZWxsZSBjaSBuZSBzZSByZHVpc2FudCBoZXVyZXVzZW1lbnQgcGFzICBsYSBzZHVjdGlvbiBzZXh1ZWxsZS4gClBvc3RtZWRpYSB3YW50cyB0byBpbXByb3ZlIHlvdXIgcmVhZGluZyBleHBlcmllbmNlIGFzIHdlbGwgYXMgc2hhcmUgdGhlIGJlc3QgZGVhbHMgYW5kIHByb21vdGlvbnMgZnJvbSBvdXIgYWR2ZXJ0aXNlcnMgd2l0aCB5b3UuIFRoZSBpbmZvcm1hdGlvbiBiZWxvdyB3aWxsIGJlIHVzZWQgdG8gb3B0aW1pemUgdGhlIGNvbnRlbnQgYW5kIG1ha2UgYWRzIGFjcm9zcyB0aGUgbmV0d29yayBtb3JlIHJlbGV2YW50IHRvIHlvdS4gWW91IGNhbiBhbHdheXMgY2hhbmdlIHRoZSBpbmZvcm1hdGlvbiB5b3Ugc2hhcmUgd2l0aCB1cyBieSBlZGl0aW5nIHlvdXIgcHJvZmlsZS4KUG9wIGEgY2xlYW4gbmFwcHkgdW5kZXIgdGhlIGJhYnkncyBib3R0b20gV2FybSB1cDogc2hha2UgeW91ciBoYW5kcyB2aWdvdXJvdXNseSB0byBsb29zZW4gdGhlbSB1cC4gCiJBcyB0aGUgY3VycmVudCBTZWNyZXRhcnkgR2VuZXJhbCBvZiB0aGUgVW5pdGVkIE5hdGlvbnMgb2YgRWFydGgsIEkgd2VsY29tZSB5b3UuIiBTZWNyZXRhcnkgR2VuZXJhbCBOYWJ1bCBIb3ppZXIgd2FzIGEgYml0IG5lcnZvdXMsIGFzIHRoaXMgd2FzIHRoZSBmaXJzdCB0aW1lIGFuIGFsaWVuIGRpcGxvbWF0IGhhZCBjb21lIHRvIEVhcnRoLiBJbiBwcmV2aW91cyBtZWV0aW5ncywgdGhlaXIgZGlwbG9tYXRzIGhhZCBjb21tZW50ZWQgdGhhdCBodW1hbnMgZGlkbiBoYXZlIGEgdmVyeSBwb3dlcmZ1bCB3aGF0ZXZlciB0aGF0IHdhcy4uIApTdXJlLCBhbHRob3VnaCBJIHRoaW5rIHRoZXJlIGEgcHJldHR5IGdvb2QgY2hhbmNlIGl0IGJlIGNoYW5nZWQgYSBiaXQgbmV4dCBzZW1lc3Rlci5UaGUgZmluYWwgKGFuZCBJIHRoaW5rIHRoZXJlIHdhcyBhIG1pZHRlcm0gdG9vIGJ1dCBJIGRpZCBubyBtYXJraW5nIHNvIGNhbiBxdWl0ZSByZW1lbWJlcikgd2VyZSBhIG1peCBvZiBNQyBhbmQgU0EsIGZvY3VzaW5nIG1vcmUgb24gdW5kZXJzdGFuZGluZyBhbmQgYXBwbHlpbmcgdGhlIGNvbmNlcHRzIHRoYW4gc3RyYWlnaHQgbWVtb3JpemF0aW9uIChJIGZvdW5kIHRoYXQgYSBsb3Qgb2Ygc3R1ZGVudHMgd2VyZSBpbiBsaWZlIHNjaSBhbmQgd2VyZSB1c2VkIHRvIG1vcmUgbWVtb3JpemF0aW9uIHdoaWNoIGlzIHdoeSBJIG1lbnRpb24gdGhpcykuIElJUkMgdGhlIGF2ZXJhZ2VzIG9uIHRoZXNlIHdlcmUgcHJldHR5IGhpZ2guVGhlcmUgd2VyZSBhbHNvIHdlZWtseSBob21ld29yayBhc3NpZ25tZW50cyB3aXRoIG1haW5seSBNQyBxdWVzdGlvbnMgdGhyb3VnaCBUb3AgSGF0LCBhbmQgaW4gY2xhc3MgVG9wIEhhdCBhY3Rpdml0aWVzLiAKSXQgaGFzIG5ldmVyIGJlZW4gaWxsZWdhbCB0byBpbmdlc3Qgd2VlZCBvciBiZSBpbnRveGljYXRlZCBieSBpdC4gCllvdSBjYW4gc2NoZWR1bGUgYSB3aG9sZSBzcGEgZGF5IGZvciB5b3VyIHdpZmUuIApBbHNvIEtzUXggaXMgaW4gdGhlIHNhbWUgYm9hdC4gCllldCBkZXNwaXRlIGFsbCB0aGlzIGVkdWNhdGlvbiBhbmQgdGF4IGJhY2tncm91bmQsIHRoZSBqdWRnZSBzYWlkIHRoZSB0YXhwYXllciBubyBlZmZvcnQgdG8gZGV0ZXJtaW5lIHdoZXRoZXIgdGhlcmUgd2FzIGFueSBsZWdpdGltYXRlIGJhc2lzIGZvciBleGNsdWRpbmcgdGhlIHRpcHMgZnJvbSBoaXMgaW5jb21lLiBIZSBkaWQgbm90IG1ha2UgYW55IGlucXVpcmllcyB3aXRoIGEgQ1JBIG9mZmljaWFsLCBhY2NvdW50YW50LCBib29ra2VlcGVyIG9yIGxhd3llciwgYnV0IGFkb3B0ZWQgYW4gaW50ZXJwcmV0YXRpb24gdGhhdCB3YXMgbW9zdCBmYXZvdXJhYmxlIHRvIGhpcyBjaXJjdW1zdGFuY2VzLiBUaGF0IHRoZSB1bnJlcG9ydGVkIHRpcHMgd2VyZSBzaWduaWZpY2FudCBhbmQgbWF0ZXJpYWwgY29tcGFyZWQgdG8gaGlzIHJlcG9ydGVkIGluY29tZSwgdGhlIGp1ZGdlIGZlbHQgdGhlIHRheHBheWVyIHNob3VsZCBoYXZlIHNvbWUgZWZmb3J0IHRvIGFzY2VydGFpbiB0aGUgcHJvcGVyIHRheCB0cmVhdG1lbnQgb2Ygc3VjaCBsYXJnZSBncmF0dWl0eSBhbW91bnRzLiAKT3V0c2lkZSB0aGUgYXJlbmEsIGlubWF0ZXMgYXJlIGVuY291cmFnZWQgdG8gc2V0IHVwIHRoZWlyIG93biBhcnRzIGFuZCBjcmFmdHMgc3RhbGxzLiBUaGV5IHNlbGwgZXZlcnl0aGluZyBmcm9tIGZyaWVkIGNva2UgKGEgY29uZ2VhbGVkIGJhbGwgb2Ygc29saWRpZmllZCBzb2RhKSB0byBsZWF0aGVyIGJlbHRzIGFuZCBzdGFpbiBnbGFzcyB3aW5kb3dzLiBNb3JlIHRoYW4gaGFsZiB0aGUgaW5tYXRlcyBhcmUgZmlyc3QgdGltZSBvZmZlbmRlcnMgYW5kIHVwIHRvIDkwIHBlcmNlbnQgb2YgdGhlbXdpbGwgZGllIHRoZXJlLCBnaXZlbiBMb3VzaWFuYSdzIGhhcnNoIHByaXNvbiBzZW50ZW5jZXMuLiAKSWYgb25seSBtb3JlIG9mIHlvdSBjb3VsZCByZWFkIGl0IGFuIGludGVyZXN0aW5nIGlsbHVzdHJhdGlvbiBvZiBjYXVzZSBhbmQgZWZmZWN0IHRoZSBjYWJpbmV0IGFwcG9pbnRtZW50cyBoYXZlIG1hZGUgbWUgcmUgZXZhbHVhdGUgbXkgcG9zaXRpb24gb24gJ3RoZSBsYXd5ZXJzIHN0cnVnZ2xlJy4gCkZpbmFsbHkgSG9sZGVtIFBva2VyIHRha2VzIGNvbW1pdG1lbnQgYW5kIHBhdGllbmNlLiBFdmVuIGlmIHlvdSBlbmQgdXAgd2l0aCBhIHBhaXIgb2YgQWNlcyBvciBLaW5ncyBrbm93IHRoYXQgeW91IHNob3VsZCBtb3ZlIGZvcndhcmQgYWdncmVzc2l2ZWx5IHdpdGggYSBoYW5kIGxpa2UgdGhpcy4gQnV0IHdoZW4gd2hlbiB5b3UgbW92ZSBhZ2dyZXNzaXZlbHkgcHJhY3RpY2UgY2F1dGlvbi4gCldpbGwgYXJndWUgb24gYmVoYWxmIG9mIHR3byBnYXkgY291cGxlcyBpbiBQZXJyeSB2LiBTY2h3YXJ6ZW5lZ2dlciwgYSBmZWRlcmFsIGNhc2UgY2hhbGxlbmdpbmcgUHJvcG9zaXRpb24gOCwgdGhlIENhbGlmb3JuaWEgYmFsbG90IGluaXRpYXRpdmUgdGhhdCBvdXRsYXdlZCBzYW1lIHNleCBtYXJyaWFnZSBpbiB0aGUgc3RhdGUuIEFwcGFyZW50bHkgZ2V0dGluZyBpbiBiZWQgd2l0aCBhIG1hbiB3aG8gaGFzIGRvbmUgYWxtb3N0IGFzIG11Y2ggdG8gZGlzbWFudGxlIGFmZmlybWF0aXZlIGFjdGlvbiBhcyBDaGllZiBKdXN0aWNlIFJlaG5xdWlzdCBpcyBmaW5lIGFzIGxvbmcgYXMgeW91IGdldCB0byBoYXZlIHRoYXQgbG92ZWx5IHdlZGRpbmcgY29tZSBKdW5lLgpJdCAyMDE3LCBsaXNwaW5nIGZleSBzdGVyZW90eXBlcyBhcmUgZW1iYXJyYXNzaW5nbHkgb2xkIGZhc2hpb25lZCBob21vcGhvYmljIGF0IHRoaXMgcG9pbnQuLiAKT3VyIHNvbGUgZGVmaW5pbmcgY2hhcmFjdGVyaXN0aWMgaXMgcmFjZSwgbm90aGluZyBlbHNlIG1hdHRlcnMgYW5kIHdlIGNhbiBORVZFUiBlbXBhdGhpc2Ugbm9yIHN5bXBhdGhpc2Ugd2l0aCBzb21lb25lIHdob3NlIHNraW4gbG9va3MgYSBsaXR0bGUgYml0IGRpZmZlcmVudC4gClRoaXMgaXMgdGhlIGtpbmQgb2YgYXR0aXR1ZGUgdGhhdCB0dXJucyBwb3N0cyBsaWtlIHlvdXJzIGludG8gYSBzZWxmIGZ1bGZpbGxpbmcgcHJvcGhlY3kuICJKdXN0IGdpdmUgdXAgYW5kIGdvIHdpdGggd2hhdCB5b3UgYWx3YXlzIGdvbmUgd2l0aCIgaXMgdGhlIHN1cmVzdCBwb3NzaWJsZSB3YXkgdG8gbWFrZSBzdXJlIG5vdGhpbmcgZXZlciBjaGFuZ2VzLiBCZSB0aGUgY2hhbmdlIHlvdSB3YW50IHRvIHNlZSBpbiB0aGUgZ2FtZS4gCkJlaW5nIGFuIG9ubGluZSBnYW1lIG1lYW5zIHlvdSBoYXZlIHRvIGhhdmUgYSBwb3dlcmZ1bCBjb21wdXRlci4gCkJlY2F1c2Ugb2YgdGhhdCwgd2UgYXJlIG5vdCBhYmxlIHRvIGdvIGludG8gYSBkZWVwIGRpc2N1c3Npb24gaGVyZSB3aXRoIHlvdSBvbiBpbmRpdmlkdWFsIHNjZW5hcmlvcy4gV2UgbG9vayBhdCBlYWNoIGluZGl2aWR1YWwgY2FzZSBvbiBpdHMgb3duIHRlcm1zICh0aGlzIGlzIGFsc28gd2h5IHdlIHNvbWV0aW1lcyB0YWtlIGxvbmdlciB0aGFuIHlvdSdkIHByZWZlciB3aGVuIHdlJ3JlIGV2YWx1YXRpbmcgdGhpbmdzKS4gSWYgd2UgYXJlIGZpbmRpbmcgY29tbW9uIGNvbmZ1c2lvbiBhcm91bmQgYSBnaXZlbiBwb2xpY3ksIHdlIG1heSBjb25zaWRlciB0aGF0IGFuIGluZGljYXRpb24gdGhhdCBhIHNtYWxsIHVwZGF0ZSBmb3IgY2xhcml0eSBpcyBuZWVkZWQuIApJcyBpdCBwb3NzaWJsZSBoZSB3YXMgcmVwZWF0aW5nIGEgY3ljbGUgb2YgYWJ1c2U/IEJpb2dyYXBoZXIgSi4gClRoZW4gdGhlIERvY3RvciByZWdlbmVyYXRlcyBhbmQgc2hlJ3MgY2xpbmd5IGFmLiAKSWYgeW91IHlvdW5nZXIsIHlvdSBtYXkgd2FudCByaXNraWVyIGJ1dCBoaWdoZXIgcmV0dXJucy4gCkJ1dCwgdHdvIGNlbnR1cmllcyBhZnRlciBKZWZmZXJzb24sIHN0YXRlcyBhcmUgbm8gbG9uZ2VyIG1lcmVseSBjb2xvdXJlZCBzaGFwZXMgb24gYSBtYXA7IGluY3JlYXNpbmdseSwgdGhleSBhcmUgdHJhbnNwYXJlbnQgYW5kIG9wZW4gdGVycml0b3JpZXMgdGhhdCB3ZSB2aWV3IGFzIGhvbWUgdG8gbWlsbGlvbnMgb2YgZmVsbG93IGh1bWFuIGJlaW5ncy4gSXQgaXMgdGh1cyBldmVyIG1vcmUgaW1wb3J0YW50IHRoYXQgdGhlIHBlb3BsZSBvZiBvbmUgY291bnRyeSBwYXJ0aWNpcGF0ZSBpbiB0aGUgZGVjaXNpb24gdG8gYXR0YWNrIHRoZSBwZW9wbGUgb2YgYW5vdGhlci4KIkFuZCBJJ20gbm90IGV2ZW4gZ2V0dGluZyBpbnRvIHRoZSBjcmF6eSBsYW5kbG9yZHMuIFRoZXJlIGFyZSBndXlzIHdobyBhcmUgZG9pbmcgbW9yZSB0aGFuIHRoYXQuIi4gCkFzIGFuIHVwY29taW5nIGJpbmdvIHNpdGUsIEJpbmdvM1ggdG9vIGhhcyBpdHMgcmFuZ2Ugb2YgZnVuIGZpbGxlZCBvbmxpbmUgc2lkZSBnYW1lcyB3aGljaCBpbmNsdWRlIGNyb3dkIGZhdm91cml0ZXMgbGlrZSAzIHJlZWwgYW5kIDUgcmVlbCBzbG90IGdhbWVzLCBzY3JhdGNoIGNhcmQgZ2FtZXMsIHBva2VyLCB2aWRlbyBwb2tlciwgY2FzaW5vIGdhbWVzLCBsb3R0byBhbmQgbW9yZS4gTm90IG9ubHkgZG8gdGhlc2UgZ2FtZXMgcHJvbWlzZSBwbGF5ZXJzIGF0IEJpbmdvM1ggYSBicmVhayBmcm9tIHBsYXlpbmcgZ2FtZSBhZnRlciBnYW1lIG9mIGJpbmdvLCB0aGV5IGFsc28gZ2l2ZSBwbGF5ZXJzIHRoZSBvcHBvcnR1bml0eSB0byBlYXJuIGphY2twb3RzIGFzIGhpZ2ggYXMgYmluZ28gKG9yIHNvbWV0aW1lcyBldmVuIGhpZ2hlcikgYnV0IGluIHNob3J0ZXIgc3BhbiBvZiB0aW1lLgpUaGUgU2hhYmJ5IENoaWMgZGVjb3Igc3R5bGUgcG9wdWxhcml6ZWQgYnkgUmFjaGVsIEFzaHdlbGwgYW5kIEFyaGF1cyBzZWVrIHRvIGhhdmUgYW4gb3B1bGVudCB2aW50YWdlIGxvb2suIENvbG9ycyBwcmV2YWxlbnQgYXJlIHdoaXRlLCBwYXN0ZWwgYW5kIGVjcnUuIApEaWUgVW5nbGVpY2hoZWl0IGlzdCBkZXV0bGljaCBTcHJiYXIuIApJIGhhdmUgYSBzZXQgb2YgcGljdHVyZXMgdGhhdCB3ZXJlIHRha2VuIGFmdGVyIGhpcyBkZWF0aCB3aGljaCBhcmUgcHJvb2YgdGhhdCB0aGVzZSBhc3Nob2xlcyBkaWQgYWJzb2x1dGVseSBub3RoaW5nIHRvIGJyaW5nIGFueW9uZSB0byBqdXN0aWNlIHRoZW4uIE9yIG5vdy4gTWlrZSBLbGFlc2VyIGFjY2lkZW50YWxseSBnYXZlIHRoZW0gdG8gbWUgaW4gMjAwMyBiZWZvcmUgaGUga25ldyB0byBrZWVwIGl0IGNvdmVyZWQuIApTdHJpa2UgYSBwb3NlISBUaGUgc2NyZWVuIHN0YXIgam9pbmVkIFNhbSBhbmQgU2hhbmdlbGEgZm9yIGFuIGVwaWMgcG9zZSBvZmYgZHVyaW5nIHRoZSBldmVudApPbiB0aGUgb3RoZXIgaGFuZCwgcHJvcyB3aWxsIGJlIGdpdmVuIG1hc3NhZ2UgdHJhaW5pbmcgYW5kIHdpbGwgYmUgZGlyZWN0ZWQgdG8gc2tpbGxzIGltcHJvdmVtZW50LiAKVW5kZXIgb25lIHByb3Bvc2VkIGNoYW5nZSwgdGhlIG9yZ2FuaXphdGlvbnMgY291bGQgaGF2ZSB1cCB0byAxNSB2aWRlbyBwb2tlciBtYWNoaW5lcyBhdCBvbmUgbG9jYXRpb24gaWYgdGhlIGF2ZXJhZ2UgbnVtYmVyIG9mIHRlcm1pbmFscyBkaXN0cmlidXRlZCB0byBhbGwgdGhlIG9yZ2FuaXphdGlvbidzIHNpdGVzIGRvZXMgbm90IGV4Y2VlZCBmaXZlLgpQYXkgYXR0ZW50aW9uIHRvIHRoZSBzaWducy4gVGhleSdyZSB0aGVyZS4gClRoZSAxOTc2IGNyaW1lIGludm9sdmVkIHRocmVlIG1lbiBmcm9tIHdlYWx0aHkgZmFtaWxpZXMgd2hvIGtpZG5hcHBlZCBtb3JlIHRoYW4gdHdvIGRvemVuIHNjaG9vbGNoaWxkcmVuIGFuZCB0aGVpciBidXMgZHJpdmVyLCBidXJ5aW5nIHRoZW0gYWxpdmUgaW4gYSBMaXZlcm1vcmUsIENhbGlmLiwgcXVhcnJ5IGFuZCBkZW1hbmRpbmcgYSAkNSBtaWxsaW9uIHJhbnNvbSBmcm9tIHRoZSBzdGF0ZS4gQWxsIDI3IHZpY3RpbXMgZXNjYXBlZCBieSBkaWdnaW5nIHRoZWlyIHdheSBvdXQgb2YgdGhlIGJ1cmllZCBtb3ZpbmcgdmFuLgpUaGUgdGhpcmQgd2FzIHdoZW4gUnlhbiB3YXMgYXJyZXN0ZWQgaW4gTmV3IEplcnNleSwgYW5kIHRoYXQgdGhlIHJlYWwga2lsbGVyIHdhcyBhY3R1YWxseSBoaXMgd2VpcmQsIHJlY2x1c2l2ZSBicm90aGVyIGNhbGxlZCBBZGFtLiAKV2h5IHRoaXMgaXMgc28gaXNuJ3QgZW50aXJlbHkgY2xlYXIsIGJ1dCB0aGVyZSBjb3VsZCBiZSBzZXZlcmFsIGZhY3RvcnMgYXQgd29yay4gSG91c2Vob2xkIGJ1ZGdldHMgaGF2ZSB0aWdodGVuZWQgb3ZlciB0aGUgcGFzdCBmZXcgeWVhcnMsIGR1ZSB0byBoaWdoZXIgaW50ZXJlc3QgcmF0ZXMsIHBldHJvbCBwcmljZXMgYW5kIHNvIG9uIGFuZCB3aGVuIG1vbmV5IGlzIHRpZ2h0LCBwZW9wbGUgb3B0IGZvciBjaGVhcGVyIGVudGVydGFpbm1lbnQgb3B0aW9ucywgbGlrZSB0aGUgcHViIHdpdGggaXRzIHBva2llcyBhbmQgVEFCIGZhY2lsaXRpZXMsIG92ZXIgb3RoZXIgdHlwZXMgb2YgZW50ZXJ0YWlubWVudC4KV2hlbiBJIGRpZCBwb3N0IGl0IEkgdGhvdWdodCBpdCB3b3VsZCBiZSBjbGVhciBlbm91Z2ggdGhhdCBJIHdhcyBub3QgT1AuCldhc3Nlcm1hbm4gZnJhdSB1bmQganVuZ2ZyYXUgbWFubiBwYXNzdCBkYXMgZGV1dHNjaGUgaW4gamFwYW4gdmlkZW8gc2V4IHdlYmNhbSBwZXRyYSBncm9zcyBmcmF1ZW4gc2hvcCBkZXV0c2NoZSBqdWdlbmRoZXJiZXJnZW4gZ3V0ZSBuYWNodCBzbXMgbHVzdGlnIDEwIGZpbmdlciBzY2hyZWliZW4gbGVybmVuIGtvc3RlbmxvcyBkb3dubG9hZCBiYWJ5IGdyc3NlbiBibGlzcyBlcm90aXNjaGUgdmVyc3VjaHVuZyBhY3JvbmlzIGFubGVpdHVuZyBza2lnZWJpZXQgZnNzZW4gYXJuaWthIG1hc3NhZ2VsIHdlbGVkYSBtdHplIGhrZWxuIGFubGVpdHVuZyBmciBhbmZuZ2VyIGdlZGljaHRlIHp1bSA0MC4gR2VidXJ0c3RhZyBmcmF1IGdyb2VyIGJyaWVmdW1zY2hsYWcgZGV1dHNjaGUgYm90c2NoYWZ0IG1leGlrbyBhc2lhdGlzY2hlIGd0dGVyIGRldXRzY2ggemVydGlmaWthdCBkZXV0c2NoIHR1cmtpc2NoIHRlcHBpY2gga25wZmVuIGFubGVpdHVuZyBncm9lciBwcmVpcyB2b24gZGV1dHNjaGxhbmQgMjAxMyBhcnViYSB3ZWJjYW0gbHVzdGlnZSBkZWZpbml0aW9uZW4gc3RyZWxsc29uIHVudGVyd3NjaGUgeHAgc3AzIGRldXRzY2ggbXNzZW4gcmVudG5lciBzdGV1ZXJuIHphaGxlbiBncm9lciBicmllZnVtc2NobGFnIHBvcnRvIHZlcmh0dW5nc21pdHRlbCBmcmF1ZW4gZ2F5IGZyaWVuZGx5IGhvdGVsIGVyb3RpayBueWxvbiBwdWxsaSBoa2VsbiBhbmxlaXR1bmcgbHVzdGlnZSB3cm1mbGFzY2hlIHNleHkgZ2FtZXMgY2FydG9vbiBncm9lIHN0ZWluZSBmciBkZW4gZ2FydGVuIGJsb2cgZ3JvZSBncmVuIHNleHN0ZWxsdW5nZW4gZGllIG1ubmVyIGxpZWJlbiBoa2VsIGFubGVpdHVuZyBtdHplIGZyYXVlbiBpbSBtaWVkZXIga2luZGVyIGJvc2hpIGFubGVpdHVuZyBwb3JubyBtaXQganVnZW5kbGljaGVuIHByb3N0YXRhIG1hc3NhZ2UgbW5jaGVuIGVyb3RpayBrYXJ0ZW5zcGllbCBlcm90aWsgb3dsIGdlaWxlIGZyYXVlbiBncmF0aXMgaGVyemluZmFya3QgYmVpIGZyYXUgc3ltcHRvbWUgZ2F5IHdlYmNhbSBib3lzIHdlYmNhbSBtb3JpdHpidXJnIHNjaHdjaGVuIGJlaSBiZXdlcmJ1bmdzZ2VzcHJjaCB0b3AgcXVhbGl0eSBwb3JuIHR1YmVzIGJvc2NoaSBtdHplbiBhbmxlaXR1bmcuIApDb21pbmcgYmFjayB0byB3b29kIGJhcnJlbHMgdGhhdCBhcmUgbm90IG5lY2Vzc2FyaWx5IGZpbGxlZCB3aXRoIHBpZyAob3Igd2lsZCBib2FyKSBicmlzdGxlcyBidXQgd2l0aCBzb21ldGhpbmcgZWxzZSBsZXNzIGFkdmFuY2VkIGNvbWVzIHRoaXMgbWFudWFsIG9uIG1ha2luZyB3b29kIGJhcnJlbHMuIEV2ZXJ5dGhpbmcgaXMgdGhlcmUsIGV2ZXJ5dGhpbmcgeW91J2QgbmVlZCB0byBtYWtlIGEgYmFycmVsIChhbmQgYSBnb29kIG9uZSBhdCB0aGF0KSwgYW5kIEkgYWRtaXJlIHRoaXMgc29ydCBvZiBmYW50YXN0aWMgZGVkaWNhdGlvbiB0byB3aGF0IGlzIGVzc2VudGlhbGx5ICh0byBvdXIgbW9kZXJuIG1pbmQpIG11bmRhbmUgZXhjZXB0IHRoYXQgaXQgaXMgYXMgZHJ5IGFzIHdlbGwgY3VyZWQgYmFycmVsIHdvb2QuIApUaGVyZSBhcmUgYWxsIHNvcnRzIG9mIHRvdXJuYW1lbnRzIGxpa2UgdGhpcyBhdCBtYW55IGRpZmZlcmVudCBvbmxpbmUgcG9rZXIgc2l0ZXMgYW5kIHRoZXkgYWxsIGZvbGxvdyB0aGUgc2FtZSBiYXNpYyBwYXR0ZXJuLiAKS2V4IHNrIHJhcmVuLCBvbSBkZSBhbnYgbmRzIGtvcnJla3QsIGtvbW1lciBhdHQgc2sgcmEgc2xvdHMgbWVuIG9mdGFzdCBuIHIgZW4gYXVrdG9yaXRhdGl2IHJlY2Vuc2VudGVuIGhhciBlbiBtZW5pbmcgZWxsZXIgdHYgb20gZGV0LiBEZXNzYSBwbGF0c2VyIHN0IG5nZGVzIGludGUgcCBncnVuZCBhdiBmdXNrIHNpbmEgc3BlbGFyZSBtZW4gZWZ0ZXJzb20gZGUgdmFyIHZlcmtzYW1tYSBzb20gZGVtb2dyYWZpIG9ubGluZSByYWJhdHQgbSBrbGFyZSByaWt0YXIgb20gZHUgaW50ZSBrYW4gbGl0YSBwIGRlbSBmIHIgYXR0IGJva3N0YXZlcmEgZGV0IGYgciBkaWc/IFMgZGFudCBsZWRlciBrYW4gaW5uZWggbGxhIGYgcmVuYXIgc2lkb3JuYSBhdiBlbiBsIGRhIG1lZCB2YXJhbmRyYSBrcml0ZXJpZXIgZiByIGF0dCBoaXR0YSBkZW4gYiBzdGEgbSBrbGFyZSBmIHIgZGVtIGphZy4gCkJlc2lkZXMsIGl0IGlzIHJ1ZGUuIApCdXQgaXQncyBiZWNhdXNlIGhlIHdhbnRlZCBteSBiZXN0IGZyaWVuZC4gCklmIHlvdSBhcmUgc3RpbGwgY29uZnVzZWQgYWJvdXQgd2hhdCB5b3Ugc2hvdWxkIGJ1eSBhbmQgd2hhdCB5b3Ugc2hvdWxkIG5vdCwgdGhlbiB0YWtlIHlvdXIgdGltZS4gClRoaXMgaXMgc2ltcGx5IGluY29ycmVjdC4gCklmIHlvdSBoYXZlIGNob3NlbiBhIG1hY2hpbmUgd2l0aCBhIGJhZCBwYXkgdGFibGUsIHlvdSBhcmUganVzdCBmaW5hbmNpbmcgdGhlIGNhc2lubyBuZXh0IGNhc2luby4uIApOb3RoaW5nIHdpbGwgZXZlciBnZXQgdGhlIHNtZWxsIG91dC4uIApDYXJyeSBmb3J3YXJkIHJ1bGVzIHdvdWxkIGFsbG93IE1hcnkgdG8gcGxheSBjYXRjaCB1cCwgYW5kIGVzc2VudGlhbGx5IHJlY2VpdmUgdHdvIHllYXJzIHdvcnRoIG9mIGJlbmVmaXRzIGlmIHNoZSBtYWtlcyB0d28geWVhcnMgd29ydGggb2YgY29udHJpYnV0aW9ucy4gU2hlIHNob3VsZCB0YWtlIHRoZSAkMSw1MDAgaW4gYW5udWFsIENhbmFkYSBDaGlsZCBCZW5lZml0IHBheW1lbnRzIHRoYXQgc2hlIGN1cnJlbnRseSBob2xkcyBpbiBoZXIgVEZTQSBhbmQgcHV0IHRoZW0gaW50byBhIFJlZ2lzdGVyZWQgRWR1Y2F0aW9uIFNhdmluZ3MgUGxhbiBhbmQgYWRkICQzLDUwMCBmcm9tIGNhc2ggdG8gbWFrZSB0aGUgdG90YWwgYmFsYW5jZSAkNSwwMDAuIFRoZSBDYW5hZGEgRWR1Y2F0aW9uIFNhdmluZ3MgR3JhbnQgd2lsbCBhZGQgJDUwMCBwZXIgeWVhciB0byBtYWtlIHRoZSBzdW1zIGNvbnRyaWJ1dGVkICQ2LDAwMC4gCldoeSBkbyB5b3UgY2FyZSBzbyBtdWNoIGlmIHBlb3BsZSBkZWNpZGUgdG8gc2V0IHRoZSB2aWFsIGRvd24/LiAKV2FzIHBlcm1hbmVudCBhcyB0aGUgUmVzZWFyY2hlciB0aGVtc2VsdmVzIGhhZCBlbWFpbGVkIHRoZSBtb2RlcmF0b3JzIGFuZCBzcGVjaWZpY2FsbHkgYXNrZWQgdG8gYmUga2VwdCBvbiBwcmUgbW9kIGFzIHRoZXkgd291bGQgbm90IGFncmVlIHRvIGNvbXBseSB3aXRoIHRoZSBIUnMuIAoiSSdtIGdvaW5nIHRvIGludmVudCBhIHN3ZWFyIHdvcmQgb2YgbXkgb3duLCIgaGUgZGVjbGFyZWQuCldlIGdvdHRhIGZpeCB0aGlzIGFuZCBub3QgcG9pbnQgZmluZ2VycyBhdCBlYWNoIG90aGVyLCB3ZSBhbGwgc3RydWdnbGUgYW5kIHRyeSB0byBzdXJ2aXZlIHJlZ2FyZGxlc3MgaWYgeW91ciBhIERlbW9jcmF0IG9yIFJlcHVibGljYW4uIFRoZSBwb2xpdGljaWFucyBzaG91bGQgYmUgcHJlc3N1cmVkIG1vcmUgdG8gZG8gdGhlaXIgam9iIGFuZCBwcm90ZWN0IHVzIGZyb20gZm9yZWlnbiBpbmZsdWVuY2UuIApTdXJlLCBsaWZlIGlzIG1vcmUgY29udmVuaWVudCBub3cuIApUcnVtcCBzYWlkIGhlIGhvcGVkIHRoYXQgQ2hpbmVzZSBQcmVzaWRlbnQgWGkgSmlucGluZyB3YXMgY29tbWl0dGVkIHRvIHRoZSBnb2FsIG9mIGRlbnVjbGVhcml6aW5nIHRoZSBLb3JlYW4gcGVuaW5zdWxhLCBjYWxsaW5nIGhpbSBhIHdvcmxkIGNsYXNzIHBva2VyIHBsYXllci4gQnV0IGhlIHNhaWQgaGUgd2FzIGRpc3BsZWFzZWQgYnkgQ2hpbmEgc29mdGVuaW5nIG9mIGJvcmRlciBlbmZvcmNlbWVudCBtZWFzdXJlcyBhZ2FpbnN0IE5vcnRoIEtvcmVhLgpBIHJlZ2lzdHJ5IGlzIHR5cGljYWxseSBhIGxpc3Qgb2YgaXRlbXMgeW91IG5lZWQvd2FudCB0byBoZWxwIGd1aWRlIGZyaWVuZHMgd2hvIHdhbnQgdG8gZ2l2ZSB5b3Ugc29tZXRoaW5nLiBZb3UgY2FuIHNldCB0aGVtIHVwIHRocm91Z2ggc3RvcmVzIGxpa2UgVGFyZ2V0IG9yIHdlYnNpdGVzIGxpa2UgQW1hem9uLiAKQSBsYSBtbWUgcG9xdWUgKG91IHBldSBzIGZhdXQpLCBsZSBkb21pbmljYWluIFRob2RvcmljIEJvcmdvZ25vbmkgKDEyMDUgMTI5OCkgbWV0IGVuIHByYXRpcXVlIGwgZCBhbmVzdGhzaWFudGVzIChkaiBkY3JpdGVzIHBhciBEaW9zY29yaWRlKSA6ICBvbiBpbXByZ25lIGRlIGp1c3F1aWFtZSwgZCBkZSBtYW5kcmFnb3JlLCBkIG91IGRlIGNoYW52cmUgaW5kaWVuLCB1bmUgcG9uZ2UsIGV0IG9uIGxhIGxhaXNzZSBsb25ndWVtZW50IHNjaGVyIGF1IHNvbGVpbC4gVW5lIGhldXJlIGF2YW50IGwgb24gbGEgZHRyZW1wZSBkYW5zIGwgSWwgbiBwbHVzIHF1ZSBkZSBsIHN1ciBsZSBuZXogZHUgcGF0aWVudCBwb3VyIGxlIHZvaXIgcyAgKDUpLiAKMS4gWW91ciByZWFsIGxpZmUgaGVybyBpcy4gU2FpeWFtaTogU2FjaGluIFRlbmR1bGthciEgSSBsb3ZlIGhpbS4gClRoaXMgaXMgaW50ZXJlc3RpbmcsIHNvIGhlIHJhbiBhd2F5IGZyb20gSVNJUyBvbiBoaXMgb3duIHZvbGl0aW9uIGFuZCBlbmRlZCB1cCBnZXR0aW5nIGRlcG9ydGVkIHRvIENhbmFkYSBmcm9tIFR1cmtleS4gRnJvbSB3aGF0IEkgcmVhZCBhYm91dCB0aGlzIHBhcnRpY3VsYXIgcGVyc29uIGlzIHRoYXQgaGUgcHJldHR5IG11Y2ggYWxyZWFkeSBzZXQgb3V0IHRvIGJ1aWxkIGhpbXNlbGYgYSBuZXcgbGlmZS4gV2hvIGtub3dzIGhvdyB3ZWxsIHRoYXQgZ29pbmcgZm9yIGhpbSwgdGhvdWdoIChJRTogSGUgcGF5aW5nIHRheGVzPykKUmVtZW1iZXIsIHRoZSBob3VzZSBwZXJjZW50YWdlIGlzIGluIGVmZmVjdCBvbiBldmVyeSBzcGluIG9mIHRoZSByb3VsZXR0ZSB3aGVlbCBvciBzbG90IHJlZWxzLiBObyBsYXcgb2YgYXZlcmFnZXMgc2F5cyB5b3UgaGF2ZSB0byBzdGFydCB3aW5uaW5nIGp1c3QgYmVjYXVzZSB5b3UndmUgYmVlbiBvbiBhIGxvbmcgbG9zaW5nIHN0cmVhay4gCkkgZG9uIGtub3cgaWYgSSB3b3VsZCBzYXkgZW1vdGlvbmFsIHRyYXVtYSBpcyBzdG9yZWQgaW4gbXVzY2xlcyBidXQgdGhpbmsgYWJvdXQgaG93IHBlb3BsZSBjYXJyeSB0aGVtc2VsdmVzLiBJZiB5b3UgYXJlIGFsd2F5cyB0ZW5zZSBvciBuZXJ2b3VzIGFuZCB5b3UgZmluYWxseSBnZXQgYSByZWxlYXNlLCBpdCBjYW4gYmUgb3ZlcndoZWxtaW5nLiAKRm9yIGEgbG9uZyB0aW1lLCBJIG15c2VsZiBoZWxkIG5lZ2F0aXZlIHBlcmNlcHRpb25zIG9mIG15IHBlb3BsZSBhbmQgdGhvdWdodCBJIGhhZCBhIGdyZWF0IFdlc3Rlcm4gZWR1Y2F0aW9uOyBJIGxlYXJuZWQgYWJvdXQgRWxpemFiZXRoIEkgYW5kIGFib3V0IHRoZSB3b25kZXJmdWwgc2V0dGxlcnMgd2hvIGNvbG9uaXNlZCBOZXcgWmVhbGFuZC4gCldlIGdldCBtYXJyaWVkIGEgd2VlayBmcm9tIHRvZGF5LCBhbmQgbXkgZmlhbmMgd2FzIGJpZyBlbm91Z2ggdG8gaW52aXRlIGhlciAobm90IGFzIGEgYnJpZGVzbWFpZCwgb2J2aW91c2x5KS4gQnJpZGV6aWxsYSBkZWNpZGVkIHRvIG5vdCBldmVuIHJlc3BvbmQgd2l0aCBhIHllcyBvciBuby4gVGhlaXIgcmVsYXRpb25zaGlwIGhhcyBiZWVuIHJhZGlvIHNpbGVudCBzaW5jZS4gU28gbXVjaCBmb3IgY29sbGVnZSBiZXN0IGZyaWVuZHMuCkEgZmV3IG1vbnRocyBhZ28sIHNvbWVvbmUgd2hvIEkgaGFkIG1hc3NpdmUgcmVzcGVjdCBmb3IgdG9sZCBtZSB0aGV5IHNtb2tlLiAKTWVkaWNhdGlvbiBhbmQgdmlzaW9uIGlzIHdoYXQgZ2V0cyBtZS4gClBlcmlvZC4gCkFuIG9ubGluZSBjYXNpbm8gZG9lc24ndCBoYXZlIHNvIG1hbnkgcHJvYmxlbSBhbmQgb25saW5lIGNhc2lubyBwcm9wb3NlIHVudGlsIDUwMCBnYW1lcyBvbiBqdXN0IG9uZSB3ZWJzaXRlcy4gV2hlbiB5b3UgcGxheSBvbmxpbmUgeW91IGNhbiBwbGF5IGltbWVkaWF0ZWx5IHRvIGEgc2xvdCBtYWNoaW5lIGF0IHRoZSByZWFsIGNhc2lubywgdGhlIG1hY2hpbmUgaGFzIHRvIGJlIGZyZWUgYmVmb3JlIHBsYXlpbmcgd2l0aCBpdC4gClRoZSBkaXNwYXRjaGVyIGh1bmcgdXAuIFRoZSByb2JiZXJ5IHdvdWxkbid0IGhhdmUgYmVlbiBkb3dudG93bi4gVGhlIGNhbGxlciBoYWQgc2FpZCBzb21ldGhpbmcgYWJvdXQgYSBoaWdod2F5LiAKSSBoYXZlIHNldmVyYWwgYXV0byBpbW11bmUgZGlzZWFzZXMgYW5kIEkgYmVlbiBzaWNrIG1vcmUgb2Z0ZW4gc2luY2UgSSBiZWdhbiB0cmFpbmluZyB3aXRoIG15IHRyYWluZXIgYXQgdGhlIGd5bSB0aGFuIEkgaGF2ZSBiZWVuIGluIHRoZSBwYXN0IHNldmVyYWwgeWVhcnMuIApCdXQgaXQgZml0dGluZyB0aGF0IGhlIHNob3VsZCBiZSB0aGUgb25lIHRvIGVuZCBOb2JsaXNzLCBhbmQgdGhlIG1hbm5lciBpbiB3aGljaCBpdCBnb2VzIGRvd24gaXMgYXBwcm9wcmlhdGUgZm9yIHRoYXQgZmF0IHNhY2sgb2Ygc2hpdC4gCk1yIC4gCk1hbnkgZmFtb3VzIHNjaG9sYXJzaGlwcyBjb21lIGZyb20gc3RpcHVsYXRpb25zIGluIHRoZSB3aWxscyBvZiBwaGlsYW50aHJvcGlzdHMuIEZvciBpbnN0YW5jZSwgdGhlIFJob2RlcyBzY2hvbGFyc2hpcCwgd2hpY2ggaXMgb25lIG9mIHRoZSBtb3N0IHByZXN0aWdpb3VzIHNjaG9sYXJzaGlwcyBpbiB0aGUgd29ybGQsIGlzIG5hbWVkIGZvciB0aGUgZGlhbW9uZCBiYXJvbiBhbmQgZmVydmVudCBjb2xvbmlhbGlzdCBDZWNpbCBSaG9kZXMsIHdobyBmb3VuZGVkIFJob2Rlc2lhIChub3cgWmltYmFid2UpLiAKV2hpbGUgeW91IGFyZSBhcm91bmQgaGVyLCBwbGVhc2UgY29uc2lkZXIgdGhhdCBhIHNpdHVhdGlvbiBsaWtlIHlvdSBkZXNjcmliZWQgY2FuIGVhc2lseSBzcGlyYWwuIElmIHlvdSBhY2NpZGVudGFsbHkga2lsbCBoZXIsIHlvdXIgbGlmZSB3aWxsIGJlIHJ1aW5lZC4gWW91IG1heSBzcGVuZCB5b3VyIGxpZmUgaW4gcHJpc29uLiAKIk5leHQgd2VlazsgSSd2ZSBnb3QgbXkgbWFuIHdvcmtpbmcgb24gaXQgbm93LiIKVGhlc2Ugc2l0ZXMgYWxsb3cgdXNlcnMgdG8gcGxhY2UgYmV0cyBvbiBhdGhsZXRpYyBjb21wZXRpdGlvbnMgb2YgZXZlcnkga2luZCwgYXMgd2VsbCBhcyBvdGhlciBldmVudHMgbGlrZSBwb2xpdGljYWwgcmFjZXMgb3IgdGhlIG91dGNvbWVzIG9mIHJlYWxpdHkgVFYgc2hvd3MuIApZb3UgZG9uJ3QgbmVlZCB0byBhbHdheXMgY2hvb3NlIHBpY3R1cmVzIG9mIHBlb3BsZS4gCkFuZCBNaW50ZWwncyByZXBvcnQgZm91bmQgdGhhdCBtb3JlIHRoYW4gYSB0aGlyZCAoMzkgcGVyY2VudCkgb2Ygc2tpbiBjYXJlIHVzZXJzIGFncmVlZCB0aGF0IGZhY2lhbCBtYXNrcyBhcmUgImEgZ29vZCB3YXkgdG8gcGFtcGVyIHRoZW1zZWx2ZXMuIi4gClRoYXQgaG93IGl0IGFwcGVhbHMgdG8gc28gbWFueSBhbmQgaG93IHN1cHBsZW1lbnRzIGFyZSBzb2xkLiBBZ2FpbiB0aGUgc2FtZSBmb3JtdWxhIGlzIHVzZWQgd2l0aCBhc3Ryb2xvZ3kuIApUaGUgcHJvamVjdCB0aXRsZWQsIENvbW11bml0eSBDb2xsYWJvcmF0aXZlIGZvciBQcmV2ZW50aW5nIGFuZCBUcmVhdGluZyBPYmVzaXR5IGluIFVuZGVyc2VydmVkIENvbW11bml0aWVzIEluIEhvdXN0b24gKFRPVUNIKSwgd2lsbCBmb2N1cyBvbiB0aGUgVGhpcmQgV2FyZCBpbiB5ZWFycyBvbmUgYW5kIHR3byBhbmQgZXhwYW5kIHRvIHRoZSBFYXN0IEVuZCBpbiB5ZWFyIHRocmVlLi4gCldpdGggZnJlZSBwb2tlciBnYW1lcywgdGhlcmUncyBub3RoaW5nIHRvIGxvc2UuIApJIHdhcyBnaXZpbmcgdGhlbSB0byBjdXN0b21lcnMgd2hvIHdlcmUgcHVyY2hhc2luZyBjb21pY3MgaW4gdGhlIGRheXMgYW5kIHdlZWtzIGFmdGVyd2FyZHMsIHVudGlsIEkgaGFkIGEgbWlsaXRhcnkgbW9tIGNvbWUgdGhyb3VnaCBteSBsaW5lLiBJIGdhdmUgaGVyIHR3bywgYW5kIHNoZSBtZW50aW9uZWQgdGhhdCBoZXIgb25lIHNvbiBzcXVhZHJvbiBtYXkgbGlrZSB0aGVtLiAKTWFnbmVzaXVtIFJvbGUgaW4gYSBIZWFsdGh5IEJvZHkgQSBzbWFsbCBncm91cCBvZiBpbnRlcm5hdGlvbmFsIG1hZ25lc2l1bSByZXNlYXJjaGVycywgaG93ZXZlciwgaGF2ZSBjb250aW51ZWQsIGFnYWluc3QgYWxsIG9kZHMsIHRvIHByb3ZlIHRoZSBpbXBvcnRhbmNlIG9mIG1hZ25lc2l1bSBub3Qgb25seSBhcyBhIG51dHJpZW50IGZvciB0aG91c2FuZHMgb2YgYm9keSBwcm9jZXNzZXMgYnV0IGFsc28gYXMgYSBtZWRpY2luZSB0byB0cmVhdCBtYWduZXNpdW0gZGVwbGV0ZWQgaGVhbHRoIGNvbmRpdGlvbnMuClNvbWUgY2FzaW5vIGdhbWVzIGFyZSBlYXN5IGZvciBwbGF5ZXJzIHRvIHBsYXkgYW5kIHdpbiB3aXRoIHJlYWwgY2FzaCBidXQgdGhlIG90aGVyIGNhc2lubyBnYW1lcyBhcmUgbm90IGVhc3kgZm9yIHBsYXllcnMgdG8gcGxheSB3aXRob3V0IGxlYXJuaW5nIHRoYXQgZ2FtZXMuIApUaGF0IHJpZGljdWxvdXMuIFlvdSBob2xkaW5nIHRlYWNoZXJzIHRvIHN1Y2ggYSBsb2Z0eSBzdGFuZGFyZCB0aGF0IG9ubHkgdGhlIGJlc3QgY291bGQgbGl2ZSB1cCB0by4gSXQgYSB0ZWFjaGVyIGpvYiB0byBiZSBpbnRlcmVzdGluZz8gTWF5YmUuIApPbmxpbmUgZGF0aW5nIHNlcnZpY2UKU3RlcGhhbmllIEJyeWFuLCB0cmliYWwgY2hhaXIgYW5kIENFTyBvZiB0aGUgUG9hcmNoIEJhbmQgb2YgQ3JlZWsgSW5kaWFucywgc2FpZCB0aGUgcHVyY2hhc2Ugd2lsbCBoZWxwIGEgbG9uZyBhbmQgcHJvc3Blcm91cyBmdXR1cmUgZm9yIG91ciB0cmliZS4gCldoZW4gaXQgY29tZXMgdG8gVGV4YXMgSG9sZCBFbSBQb2tlciBDaGlwcywgeW91IGFyZSBzdXJlIHRvIHdhbnQgb25lcyB0aGF0IGhhdmUgdGhlIHRyYWRlbWFyayBlbWJsZW1zLCBhcyB3ZWxsIGFzIHRoZSBtb3N0IHBvcHVsYXIgY29sb3JzLiAKSG93ZXZlciB0aGlzIGlzIGEgZHVhbCBlZGdlZCBzd29yZCwgbWVhbmluZyB0aGV5IGNhbid0IHNlZSB5b3UgZWl0aGVyLiBBbmQgeW91IGNhbiB1c2UgdGhpcyB0byB5b3VyIGFkdmFudGFnZSBieSBnaXZpbmcgeW91cnNlbGYgbW9yZSB0aW1lIHRvIHJlYWN0LiBUaGUgcnVsZXMgYXJlIG1vcmUgc3RyaW5nZW50IGluIHRoaXMgZ2FtZSBzaW5jZSBubyBvbmUgY2FuIHNlZSBhbnlvbmUgZWxzZS4gCkJ1cmxlc3F1ZSBoYXMgYSB3YXkgb2YgbWFraW5nIHRoZSBhYnN1cmRpdHkgb2Ygc3VjaCBwb3dlciBoaWVyYXJjaGllcyBmdW5ueSBhbmQgc2V4eS4gQnVybGVzcXVlICBsaWtlIGNhcm5pdmFsICBhbHNvIGhhcyBhIHdheSBvZiBvdmVydHVybmluZyB0aG9zZSBoaWVyYXJjaGllcyAgb2YgbW9ja2luZyB0aGUgaGlnaCBhbmQgbWlnaHR5IGFuZCBtYWtpbmcgdXMgZGVzaXJlIHRoZSAiZGlydHkuIgpJdCBkb2Vzbid0IHBheSB0byBiZSBncm91Y2h5LCBzcXVhYmJsaW5nLCBmaWdodGluZyBvciBhcmd1aW5nIGFsbCB0aGUgdGltZS4gQSBzbWlsZSBkb2Vzbid0IGNvc3QgYSBwZW5ueSBhbmQgaXQgcmVhcHMgYSBoYXJ2ZXN0IG9mIGluZXN0aW1hYmxlIHZhbHVlIGluIG1vcmUgd2F5cyB0aGFuIG9uZS4gSXQgaXMgdHJ1ZSwgR3JvdW5kIE9hayBMdXRoZXJhbiBjaHVyY2ggb24gU3VuICBkYXkgbW9ybmluZyBhbmQgc3BlbnQgU3VuZGF5IGFmdGVyICBub29uIGF0IHRoZSBob21lIG9mIE1yLiAKVGhlIHByb2Nlc3Mgb2YgZ2V0dGluZyByZWFzc2lnbmVkIHRvIGEgbmV3IHNoZWx0ZXIgaXMgbG9uZyBhbmQgbm90IGd1YXJhbnRlZWQgc28gaW4gdGhlIG1lYW50aW1lIHdlIGNhbiBkcm9wIHRoZW0gb2ZmIGF0IGRyb3AgaW4gY2VudGVycyBmb3IgdGhlIG5pZ2h0IHRvIHNob3dlciwgZG8gbGF1bmRyeSwgYW5kIGdldCBzb21ldGhpbmcgdG8gZWF0Li4gClVDTEEgZmFjdWx0eSwgc3RhZmYsIGVtZXJpdGkgYW5kIGFsdW1uaSBhZmZpbGlhdGVzIChhbmQgdGhlaXIgZmFtaWx5IG1lbWJlcnMpIGFyZSBlbGlnaWJsZSB0byBwdXJjaGFzZSBhIG1lbWJlcnNoaXAgZm9yIGFjY2VzcyB0byBvdXIgbWFueSBwcm9ncmFtcyBhbmQgZmFjaWxpdGllcy4uIApJZiB5b3UgYXJlIG5ldyB0byB0aGUgbXlyaWFkIHBva2VyIGFtdXNlbWVudHMgb24gdGhlIHdlYiB5b3UgbWF5IHJlcXVpcmUgc29tZSBvcHBvcnR1bml0eSB0byBjaGFuZ2UgaW4gYWNjb3JkYW5jZSB3aXRoIG5hdHVyZSdzIHR1cmYuIEhvd2V2ZXIsIHlvdSdyZSBhdCB0aGUgYXBwcm9wcmlhdGUgcGxhY2Ugc2luY2UgYXQgQ2VsZWIgcG9rZXIgYWxsIGdhbWUgYXJlIGZyZWUgYW5kIHlvdSBjYW4gZWZmZWN0aXZlbHkgZmluZCBwbGF5ZXJzIG9mIHlvdXIgbGV2ZWwgdG8gcHJhY3RpY2UgYXQgYW4gYWdyZWVhYmxlIHBhY2UuLiAKSW4gRXhjZWwsIEkgb3BlbiB0aGUgZmlsZSwgY2hhbmdlIHRoZSBoZWFkZXIgbmFtZXMsIGFuZCBzYXZlIGl0LiAKWW91IHdpbGwgYmFzZSB5b3VyIGJldCBkZXBlbmRpbmcgb24gdGhlIHR3byBjYXJkcyB5b3UgaGF2ZSBhbmQgdGhlIG90aGVyIG9wdGlvbiBpcyB0byBmb2xkLiAKVGhlIGNhYmxlIGNhciAod2hhdCB5b3UgY2FsbGVkIGEgc2tpIGxpZnQpIG9ubHkgcnVucyBiZXR3ZWVuIE5nb25nIFBpbmcgKHdoZXJlIHRoZSBCdWRkaGEgaXMpIGFuZCBUdW5nIENodW5nICh3aGljaCBpcyBwcmV0dHkgbXVjaCB0aGUgYWlycG9ydCBhcmVhLikgV2hpbGUgaXQgd291bGQgYmUgY29vbCB0byBoYXZlIGNhYmxlIGNhcnMgcnVubmluZyBvdmVyIHRoZSBjaXR5LCB3ZSBkb24gaGF2ZSB0aGF0LgpUaGV5IGV4cGxpY2l0bHkgYXNrZWQgImhvdyB3b3VsZCB5b3UgaW1wcm92ZSBvbiB0aGF0PyIgc2hoaGVlZWVlaWlpaWl0LiB0aGVyZSBpcyBwbGVudHkgdG8gaW1wcm92ZSBvbi4gQnJlZWRlcnMsIGJ1eWVycywgYW5kIHRoZSBvcmdhbml6YXRpb25zIGludm9sdmVkIGNhbiBhbGwgZG8gYmV0dGVyLiBNRSBUT08uIEl0IGNlcnRhaW5seSBkb2VzbiBleGN1c2UgdGhlIHNoaXR0eSBicmVlZGVycyBvdXQgdGhlcmUgb3IsIGltbywgdGhlIG9yZ2FuaXphdGlvbnMgdGhhdCBnaXZlIHRoZW0gcGxhdGZvcm1zIHRvIGJlIHNoaXR0eSBicmVlZGVycyB3aXRoIGEgdGl0bGUuCkFuZCBmaW5hbGx5IHdlJ3ZlIGRyYXduIHRvZ2V0aGVyIHRoZSBhcnRpY2xlcyByZWxhdGVkIHRvIEFkYW1zIGFuZCBoaXMgd29yayBzdGlsbCBhdmFpbGFibGUgb24gQkJDIE9ubGluZSwgaW5jbHVkaW5nIHRoZSBzdG9yeSBvZiBoaXMgdW5maW5pc2hlZCBEb2N0b3IgV2hvIGVwaXNvZGUgU2hhZGEgd2hpY2ggd2FzIGV2ZW50dWFsbHkgcmVjb3JkZWQgYXMgYSB3ZWJjYXN0IGluIDIwMDMuMgpUaGUgVGFqIE1haGFsIGlzIGJlYXV0aWZ1bCBmb3Igc3VyZS4gQW5kIHlldCBNYW5qaGksIGFuIHVuZWR1Y2F0ZWQgbWFuIG9mIHRoZSBsb3dlc3QgY2FzdGUsIGdhdmUgaGlzIGJlc3QgeWVhcnMgdG8gbW92ZSBhIG1vdW50YWluLCB3aGljaCBnYXZlIGhpcyB3aG9sZSB2aWxsYWdlIG9wcG9ydHVuaXR5IGZvciBnZW5lcmF0aW9ucyB0byBjb21lLCBhbGwgaW4gdGhlIG5hbWUgb2YgbG92ZS4gCldoZW4gaSBwYXNzZWQgaGltLiAKSXQncyBmdW4gYXMgZnVjayB0aG91Z2guIEkgZ2V0IGl0IEkgZ2V0IGhvbGQgdGhlIGRldnMgdG8gYSBoaWdoIHN0YW5kYXJkLiBCdXQgZm9yIGZ1Y2tzIHNha2UuIApOZWlnaGJvcnMgd29yayBpcyBwYXJ0IG9mIGEgZm91ciB5ZWFyICQxLjggbWlsbGlvbiBncmFudCBmcm9tIFRoZSBOYXRpb25hbCBJbnN0aXR1dGUgb24gQWxjb2hvbCBBYnVzZSBhbmQgQWxjb2hvbGlzbSwgd2hpY2ggY2FsbHMgY29sbGVnZSBkcmlua2luZyBhIGhhcm1mdWwgYW5kIHNpZ25pZmljYW50IHB1YmxpYyBoZWFsdGggcHJvYmxlbSB0aGF0IHRha2VzIGFuIGVub3Jtb3VzIGludGVsbGVjdHVhbCBhbmQgc29jaWFsIHRvbGwgb24gY29sbGVnZSBzdHVkZW50cyBhY3Jvc3MgQW1lcmljYS4gUHJvamVjdCByZXByZXNlbnRzIGEgcGFydG5lcnNoaXAgYmV0d2VlbiBpbnZlc3RpZ2F0b3JzIGF0IHRocmVlIGluc3RpdHV0aW9uczogS2F0ZSBDYXJleSwgcHJvZmVzc29yIG9mIGJlaGF2aW9yYWwgYW5kIHNvY2lhbCBzY2llbmNlIGF0IEJyb3duIFVuaXZlcnNpdHk7IEFuZ2VsbyBEaUJlbGxvLCBhc3Npc3RhbnQgcHJvZmVzc29yIG9mIHBzeWNob2xvZ3kgYXQgQ2l0eSBVbml2ZXJzaXR5IG9mIE5ldyBZb3JrICAgQnJvb2tseW4gQ29sbGVnZSwgYW5kIE5laWdoYm9ycyBhdCBVSC4gClRoZXkgZG9uJ3QgcmVhbGl6ZSB0aGF0IG9ubHkgYSBoaWdoIGNhcmQgaGFuZCBpcyBwcmV0dHkgd2VhayB3aXRob3V0IGEgcGFpciwgZmx1c2ggb3Igc3RyYWlnaHQsIGJlY2F1c2UgYW55IG1hZGUgaGFuZCBiZWF0cyBhIEFLIGhpZ2ggaGFuZC4gCkknbSBub3QgYSBodWdlIGZhbiBvZiBMYXMgVmVnYXMuIApNci4gQW5kIE1yczogR2VvcmdlIEhvZlRoZWlucyBhbmQgc29uLCBEYWxlLCBhbmQgTXJzLiBHLiAKV2UgYXJlIGZ1bGx5IGNvbW1pdHRlZCB0byBmaW5kaW5nIGEgd2F5IHRvIGFjY29tbW9kYXRlIGEgZnV0dXJlIFdTT1AgQ2lyY3VpdCBzdG9wIGluIENsZXZlbGFuZC4gCiIgSW52ZXN0aWdhdG9ycyBzYXkgRXJuaWUgd2FudGVkIGEgZ3VuLiBUaGUgZGF5IGJlZm9yZSBoaXMgcGFyZW50cyB3ZXJlIG11cmRlcmVkLCBFcm5pZSBjYW1lIHRvIHRoZSBNYXN0ZXIgYXQgQXJtcywgaW4gUGFocnVtcCwgTmV2YWRhLiAK|<---