<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="XpressEngine 1.4.3" name="Generator"/>
  <meta content="board" name="module"/>
  <meta content="dormunion" name="module_skin"/>
  <meta content="기숙사자치회 레이아웃 (dormunion_main)" name="layout"/>
  <meta content="기숙사자치회 (http://dorm.postech.ac.kr)" name="layout_maker"/>
  <meta content="no" http-equiv="imagetoolbar"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body>
  <div id="dorm-layout-wrapper">
   <div id="dorm-layout-top">
    <div id="dorm-layout-toolbar">
     [link]
     
     <form action="/dormunion/" id="isSearch" method="post">
     </form>
    </div>
    <div id="dorm-layout-banner">
     [link]
     
    </div>
    <div id="dorm-layout-menubar">
     <ul>
      <li class="dorm-menu" id="menu59">
       [ahref]
       
      </li>
      <li class="dorm-menu" id="menu61">
       [ahref]
       
      </li>
      <li class="dorm-menu" id="menu62">
       [ahref]
       
      </li>
      <li class="dorm-menu" id="menu63">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div id="dorm-layout-submenubar">
     <div class="dorm-submenu" id="submenu59">
      <ul>
       <li class="dorm-menu" id="menu56">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu57">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu83175">
        <h1>
         <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
        </h1>
        [link]
        
       </li>
       <li class="dorm-menu" id="menu83710">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu58">
        [link]
        
       </li>
      </ul>
     </div>
     <div class="dorm-submenu" id="submenu61">
      <ul>
       <li class="dorm-menu" id="menu64">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu65">
        [link]
        
       </li>
       <li class="dorm-menu" id="menu67">
        [link]
        
       </li>
       <li class="dorm-menu" id="menu68">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="dorm-submenu" id="submenu62">
      <ul>
       <li class="dorm-menu" id="menu69">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu72">
        [link]
        
       </li>
       <li class="dorm-menu" id="menu71">
        [link]
        
       </li>
       <li class="dorm-menu" id="menu70">
        <a href="f">
         사감교수 게시판
        </a>
       </li>
      </ul>
     </div>
     <div class="dorm-submenu" id="submenu63">
      <ul>
       <li class="dorm-menu" id="menu75">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu76">
        [link]
        
       </li>
       <li class="dorm-menu" id="menu77">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu80">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu81">
        [ahref]
        
       </li>
       <li class="dorm-menu" id="menu82">
        [link]
        
       </li>
       <li class="dorm-menu" id="menu83">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
   <div id="dorm-layout-center">
    <div id="dorm-contents">
     <div class="board">
      <div class="boardHeader">
       <div class="boardTitle">
        <h2 class="boardTitleText">
         <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
        </h2>
       </div>
      </div>
      <div class="boardInformation">
       <div class="infoSum">
        글 수
        <strong>
         36
        </strong>
       </div>
       <div class="infoView">
        <ul>
         <li class="listTypeClassic icon">
          [link]
          
         </li>
         <li class="listTypeZine icon">
          [link]
          
         </li>
         <li class="listTypeGallery icon active">
          [ahref]
          
         </li>
        </ul>
       </div>
      </div>
      <form action="/" class="boardListForm" method="get">
       <fieldset>
        <legend>
         List of Articles
        </legend>
        <table border="1" cellspacing="0" class="boardList" summary="List of Articles">
         <thead>
          <tr>
           <th scope="col">
            번호
           </th>
           <th class="title" scope="col">
            제목
           </th>
           <th scope="col">
            글쓴이
           </th>
           <th scope="col">
            [link]
            
           </th>
           <th scope="col">
            [ahref]
            
           </th>
          </tr>
         </thead>
         <tbody>
         </tbody>
        </table>
        <ul class="boardList thumbList">
         <li style="width:118px;height:208px;">
          <p class="num">
           36
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [link]
           
          </div>
          <ul class="meta">
           <li class="author">
            [link]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 8194
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           35
          </p>
          <div class="thumb">
           <a href="/dormunion/?mid=dotori&amp;document_srl=342774">
           </a>
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [link]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 7311
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           34
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [link]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 7744
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           33[link]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link][search]<li>[search]</li><li>[ahref]</li>[search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [link]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 6854
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           32
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 6921
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           31[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [link]
           
          </div>
          <ul class="meta">
           <li class="author">
            [link]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 4799
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           30<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[ahref]</li>
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 4976
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           29
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [link]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 4886
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           28<li>[search]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [link]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 4837
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           27<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
          <div class="thumb">
           [link]
           
          </div>
          <div class="title">
           [link]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2015-03-06
           </li>
           <li class="reading">
            조회 수 4816
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <h3>
           [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          <p class="num">
           26
          </p>
          <div class="thumb">
           <a href="/dormunion/?mid=dotori&amp;document_srl=200647">
            <span class="noPhoto" style="width:100px; height:100px; line-height:100px;">
             No Image
            </span>
           </a>
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            <a class="member_5754" href="a" onclick="return false">
             제26대기숙사자치회장
            </a>
           </li>
           <li class="date">
            2012-09-11
           </li>
           <li class="reading">
            조회 수 19018
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           25
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           <a href="/dormunion/?mid=dotori&amp;document_srl=117146">
            도토리 5월호
           </a>
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2012-05-08
           </li>
           <li class="reading">
            조회 수 19244
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           24<li>[link]</li><li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link][link][search][ahref]<li>[ahref]</li>
          </p>
          <div class="thumb">
           [link]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            <a class="member_5754" href="a" onclick="return false">
             제26대기숙사자치회장
            </a>
           </li>
           <li class="date">
            2012-03-15
           </li>
           <li class="reading">
            조회 수 15033
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           23
          </p>
          <div class="thumb">
           [link]
           
          </div>
          <div class="title">
           [link]
           
          </div>
          <ul class="meta">
           <li class="author">
            [link]
            
           </li>
           <li class="date">
            2012-02-11
           </li>
           <li class="reading">
            조회 수 14677
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           22
          </p>
          <div class="thumb">
           <a href="/dormunion/?mid=dotori&amp;document_srl=15264">
            <span class="noPhoto" style="width:100px; height:100px; line-height:100px;">
             No Image<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link]
            </span>
           </a>
          </div>
          <div class="title">
           [link]
           
          </div>
          <ul class="meta">
           <li class="author">
            <a class="member_5487" href="a" onclick="return false">
             제25대 기숙사자치회장
            </a>
           </li>
           <li class="date">
            2011-03-13
           </li>
           <li class="reading">
            조회 수 20449
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           21
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [link]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2010-12-10
           </li>
           <li class="reading">
            조회 수 19454
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           20<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<li>[ahref]</li>
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2010-10-10
           </li>
           <li class="reading">
            조회 수 19494
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           19<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search]
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2010-09-04
           </li>
           <li class="reading">
            조회 수 15654
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           18<li>[search]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[ahref]</li>
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2010-09-04
           </li>
           <li class="reading">
            조회 수 15377
           </li>
          </ul>
         </li>
         <li style="width:118px;height:208px;">
          <p class="num">
           17
          </p>
          <div class="thumb">
           [ahref]
           
          </div>
          <div class="title">
           [ahref]
           
          </div>
          <ul class="meta">
           <li class="author">
            [ahref]
            
           </li>
           <li class="date">
            2010-09-04
           </li>
           <li class="reading">
            조회 수 17166
           </li>
          </ul>
         </li>
        </ul>
       </fieldset>
      </form>
      <div class="boardNavigation">
       <div class="buttonLeft">
        [link]
        
       </div>
       <div class="buttonRight">
        [link]
        
       </div>
       <div class="pagination">
        [link]
        
        <strong>
         1
        </strong>
        [ahref]
        
        <a class="nextEnd" href="/dormunion/?mid=dotori&amp;page=2">
         끝 페이지
        </a>
       </div>
      </div>
      <form action="/dormunion/" class="boardSearchForm" id="fo_search" method="get" onsubmit="return procFilter(this, search)">
       <fieldset>
        <legend>
         Board Search
        </legend>
        <select name="search_target">
         <option value="title">
          제목
         </option>
         <option value="content">
          내용
         </option>
         <option value="title_content">
          제목+내용
         </option>
         <option value="comment">
          댓글
         </option>
         <option value="user_name">
          이름
         </option>
         <option value="nick_name">
          닉네임
         </option>
         <option value="user_id">
          아이디
         </option>
         <option value="tag">
          태그
         </option>
        </select>
        <span class="buttonOfficial">
         <button onclick="xGetElementById('fo_search').submit();return false;" type="submit">
          검색
         </button>
        </span>
        <ul class="infoEtc">
         <li class="contributors">
          [ahref]
          
         </li>
         <li class="tag">
          [link]
          
         </li>
        </ul>
       </fieldset>
      </form>
     </div>
    </div>
    <div id="dorm-contact">
    </div>
   </div>
   <div id="dorm-layout-bottom">
   </div>
  </div>
  <div id="waitingforserverresponse">
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0014
  </b>
 </body>
</html>