<!DOCTYPE html>
<html lang="en-US" prefix="og: http://ogp.me/ns#">
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <meta content="https://www.followupboss.com/wp-content/themes/fub/images/favicons/browserconfig.xml" name="msapplication-config"/>
  <meta content="#ffffff" name="theme-color"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="page page-id-2867 page-template-default group-blog">
  <nav id="mobile-navigation-menu" role="navigation">
   <div class="inner-container">
    <div class="scroller">
     <ul class="nav nav-stacked" id="primary-mobile">
      <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-2867 current_page_item menu-item-2897" id="menu-item-2897">
       [link]
       
      </li>
      <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2896" id="menu-item-2896">
       [ahref]
       
      </li>
      <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2963" id="menu-item-2963">
       [link]
       
      </li>
      <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4237" id="menu-item-4237">
       [ahref]
       
      </li>
      <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2928" id="menu-item-2928">
       [ahref]
       
      </li>
      <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2895" id="menu-item-2895">
       [ahref]
       
      </li>
     </ul>
     <ul class="nav nav-stacked login-actions">
      <li class="menu-item login-link">
       [link]
       
      </li>
      <li class="menu-item">
       [link]
       
      </li>
     </ul>
    </div>
   </div>
  </nav>
  <div class="site" id="page">
   [ahref]
   
   <header id="masthead" role="banner">
    <div class="we-are-hiring mobile">
     We are hiring!
     [ahref]
     
    </div>
    <div class="container">
     [link]
     
     <div class="we-are-hiring">
      [link]
      
     </div>
     [ahref]
     
     <div class="mobile-navigation-close">
     </div>
     <nav class="main-navigation" id="site-navigation" role="navigation">
      <div class="menu-main-nav-container">
       <ul class="nav navbar-nav" id="primary-menu-full">
        <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-2867 current_page_item current-menu-ancestor current-menu-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-2877" id="menu-item-2877">
         [ahref]
         
         <ul class="sub-menu">
          <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-2867 current_page_item menu-item-3491" id="menu-item-3491">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3488" id="menu-item-3488">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3489" id="menu-item-3489">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3490" id="menu-item-3490">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4103" id="menu-item-4103">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3589" id="menu-item-3589">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3723" id="menu-item-3723">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3387" id="menu-item-3387">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3543" id="menu-item-3543">
           <a href="/idx-website-integrations/">
            IDX Integrations
           </a>
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3023" id="menu-item-3023">
           [link]
           
          </li>
         </ul>
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2357" id="menu-item-2357">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-4284" id="menu-item-4284">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-has-children menu-item-3701" id="menu-item-3701">
         [link]
         
         <ul class="sub-menu">
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3702" id="menu-item-3702">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3733" id="menu-item-3733">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3700" id="menu-item-3700">
           [link]
           
          </li>
         </ul>
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3412" id="menu-item-3412">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-2878" id="menu-item-2878">
         [link]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-2924" id="menu-item-2924">
         [link]
         
        </li>
       </ul>
      </div>
     </nav>
     <ul class="nav navbar-nav login-actions">
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
     </ul>
     <div class="phone-numbers">
      [link]
      
     </div>
    </div>
   </header>
   <div class="site-content " id="content">
    <div class="content-area" id="primary">
     <main class="site-main" id="main" role="main">
      <div class="page" id="features-page">
       <div class="header-hero">
        <div class="container">
         <div class="row">
          <div class="col-md-6">
          </div>
          <div class="col-md-6">
           <h1>
            <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
           </h1>
           <p class="header-hero-desc">
            We optimize your workflow so you can focus on making more sales.
           </p>
           <div class="row trial-demo">
            <div class="col-md-6 col-md-push-6 col-lg-7 col-lg-push-5">
             [link]
             
            </div>
            <div class="col-md-6 col-md-pull-6 col-lg-5 col-lg-pull-7">
             <div class="free-trial">
              [link]
              
              No credit card required
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="focusing-on-matters">
        <div class="container">
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <div class="row sync-leads">
          <div class="col-md-6">
           <div class="text">
            Connect directly to your email inbox to automatically sync and log all emails exchanged in Follow Up Boss.
           </div>
          </div>
          <div class="col-md-6">
           <div class="text">
            Completely eliminate data entry when it comes to communicating with prospects by calling and texting through Follow Up Boss.
           </div>
          </div>
         </div>
         <i class="dash">
         </i>
         <div class="row core-features">
          <div class="col-md-5 core-features-menu">
           <div class="expanded" data-tab="core-features-texting">
            <h2>
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <div class="text">
             Text your leads and contacts back and forth, and have them logged
                            automatically from the contact's profile, inbox, and the mobile app.
             [ahref]
             
            </div>
           </div>
           <div data-tab="core-features-calling">
            <h2>
             [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
            </h2>
            <div class="text">
             Make and receive calls and have all conversations automatically logged
                            for future review. In addition missed calls and voicemails show in your
                            inbox so you’ll never miss a thing!
             [link]
             
            </div>
           </div>
           <div data-tab="core-features-email">
            <h2>
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <div class="text">
             Quickly respond to emails and also quickly send one-off, repetitive
                            emails using templates.
             [link]
             
            </div>
           </div>
          </div>
          <div class="col-md-7 core-features-images">
           <i class="core-features-texting expanded" data-tab="core-features-texting">
           </i>
           <i class="core-features-calling" data-tab="core-features-calling">
           </i>
           <i class="core-features-email" data-tab="core-features-email">
           </i>
          </div>
         </div>
         <div class="core-features mobile">
          <div class="swiper-container swiper-slider">
           <div class="swiper-wrapper">
            <div class="swiper-slide">
             <h2 class="core-features-texting">
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="text">
              Text your leads and contacts back and forth, and have them logged
                                automatically from the contact's profile, inbox, and the mobile app.
             </div>
            </div>
            <div class="swiper-slide">
             <h2 class="core-features-calling">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="text">
              Make and receive calls and have all conversations automatically logged
                                for future review. In addition missed calls and voicemails show in your
                                inbox so you’ll never miss a thing!
             </div>
            </div>
            <div class="swiper-slide">
             <h2 class="core-features-email">
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="text">
              Quickly respond to emails and also quickly send one-off, repetitive
                                emails using templates.
             </div>
            </div>
           </div>
           <div class="swiper-pagination">
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="core-follow-up">
        <div class="container">
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <div class="text">
          Working with thousands of top producing agents, we wove the following activities to be the 4 core types of follow up you need to do in order to be successful
         </div>
         <div class="menu-wrap">
          <div class="swiper-container swiper-mobile-menu">
           <ul class="swiper-wrapper nav menu-horizontal nav-pills nav-justified" data-toggle="pill">
            <li class="swiper-slide" role="presentation">
             [ahref]
             
            </li>
            <li class="swiper-slide" role="presentation">
             [ahref]
             
            </li>
            <li class="swiper-slide" role="presentation">
             [ahref]
             
            </li>
            <li class="swiper-slide" role="presentation">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="tab-content">
          <div class="tab-pane fade in active" id="new-leads" role="tabpanel">
           <div class="row">
            <div class="new-leads">
            </div>
            <div>
             <h2>
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="text">
              Manage your leads quickly, sorting them by if they're brand new or by last
                                activity to easily see which contacts are actively engaging with your
                                website so you can follow up with them.
             </div>
            </div>
           </div>
          </div>
          <div class="tab-pane" id="active-leads" role="tabpanel">
           <div class="row">
            <div class="active-leads">
            </div>
            <div>
             <h2>
              [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
             </h2>
             <div class="text">
              Be laser focused while using Follow Up Boss Inbox by only viewing
                                emails from leads and contacts, free of unwanted emails.
              <br/>
              <br>
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </br>
              Integrate seamlessly with your Gmail inbox, so when you read,
                                respond and archive messages, it happens on both sides.
             </div>
            </div>
           </div>
          </div>
          <div class="tab-pane" id="schedule-appointments" role="tabpanel">
           <div class="row">
            <div class="schedule-appointments">
            </div>
            <div>
             <h2>
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="text">
              With Calendar you have the ability to view apointments, showings,
                                etc. that have been scheduled for a future date and tasks set by
                                yourself or assigned to you.
             </div>
             <div class="google">
              Integrated with Google Calendar
             </div>
            </div>
           </div>
          </div>
          <div class="tab-pane" id="reengage" role="tabpanel">
           <div class="row">
            <div class="reengage">
            </div>
            <div>
             <h2>
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <div class="text">
              Filters lets you see what you want to see easily by segmenting your
                                databse by stage and how long it’s been since you communicated with
                                contacts. Lists let you find high priority follow ups, ensuring
                                you’re getting the most from your contacts and nothing slips through
                                the cracks.
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="notifications">
        <div class="container">
         <div class="row vertical-align">
          <div class="col-md-6">
           <h2>
            <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
           </h2>
           <div class="text">
            Receive texts, emails, or notifications through our app to stay on top of
                        what's happening in your sales pipeline.
           </div>
          </div>
          <div class="col-md-6">
          </div>
         </div>
        </div>
       </div>
       <div class="sales-management">
        <div class="container">
         <h2>
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         <div class="text main-text">
          As sales team leaders, you need a clear window into exactly what your team is doing
                with the leads they're being assigned and how they're performing overall.
         </div>
         <i class="mobile dash">
         </i>
         <div class="row follow-up-automation vertical-align">
          <div class="col-md-6">
           <h2>
            <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
           </h2>
           <div class="sales-management-mobile-img">
           </div>
           <p class="text">
            Action plans let you create automated follow up activity for each lead,
                        ensuring consistency and accuracy for them. Send texts, emails, and
                        assign
                        tasks for the agent to perform as well.
                    [ahref][link][link]<li>[ahref]</li>[link]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
           </p>
          </div>
          <div class="col-md-6 follow-up-automation-img">
          </div>
         </div>
         <i class="mobile dash">
         </i>
         <div class="row accountability vertical-align">
          <div class="col-md-6">
           <h2>
            [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
           </h2>
           <div class="accountability-mobile-img">
           </div>
           <p class="text">
            View each agent's activity and how they follow up with leads, allowing you to
                        focus your lead flow on agents closing deals, and coaching those who aren't.
           </p>
          </div>
          <div class="col-md-6 accountability-img">
          </div>
         </div>
        </div>
       </div>
       <div class="agent-and-lead-report">
        <div class="container">
         <h2>
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         <div class="text">
          See who's putting the work in, how many leads each source gives, how they progress,
                and what their conversion rate is. Making looking at your business quick and simple.
         </div>
        </div>
        <div class="agent-report">
         <div class="hint hint-1">
          Emails
         </div>
         <div class="hint hint-2">
          Calls
         </div>
         <div class="hint hint-3">
          New Leads
         </div>
        </div>
        <div class="agent-report mobile">
         <div class="hint hint-1">
          Emails
         </div>
         <div class="hint hint-2">
          Calls
         </div>
         <div class="hint hint-3">
          New Leads
         </div>
        </div>
       </div>
       <div class="import-and-distribute-leads">
        <div class="container">
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <div class="text">
          Automatically import your leads from over 200 different providers. Leads will get automatically distributed to agents based on rules you define.
         </div>
         <div class="scheme">
         </div>
         <div class="scheme mobile">
          <svg class="bracket-top" height="73px" version="1.1" viewbox="0 0 155 73" width="155px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
           <defs>
            <lineargradient id="linearGradient-1" x1="0%" x2="100%" y1="0%" y2="105.013717%">
             <stop offset="0%" stop-color="#C7CFD4" stop-opacity="0">
             </stop>
             <stop offset="100%" stop-color="#C7CFD4">
             </stop>
            </lineargradient>
           </defs>
           <g fill="none" fill-rule="evenodd" id="Mobile_Features" stroke="none" stroke-width="1">
            <g id="Features" stroke-width="2" transform="translate(-82.000000, -6327.000000)">
             <g id="Automatically-import-leads" transform="translate(0.000000, 5921.000000)">
              <g id="Illustration_Bracket_Top" transform="translate(83.000000, 406.000000)">
               <path d="M77,0.5 C102.391026,36.3786239 138.120356,47.5378124 153.5,68" id="Path-800-Copy-11" stroke="url(#linearGradient-1)" stroke-linecap="round" stroke-linejoin="round" transform="translate(115.250000, 34.250000) scale(-1, 1) translate(-115.250000, -34.250000) ">
               </path>
               <path d="M0,0.5 C25.3910262,36.3786239 61.1203558,47.5378124 76.5,68" id="Path-800-Copy-12" stroke="url(#linearGradient-1)" stroke-linecap="round" stroke-linejoin="round">
               </path>
               <circle cx="77" cy="68" fill="#BBC8D2" id="top-circle" r="4" stroke="#BBC8D2">
               </circle>
              </g>
             </g>
            </g>
           </g>
          </svg>
          <svg class="fub" height="61px" version="1.1" viewbox="0 0 64 61" width="64px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
           <defs>
            <lineargradient id="linearGradient-2" x1="0%" x2="100%" y1="-1.4296875%" y2="100%">
             <stop offset="0%" stop-color="#54C1E8">
             </stop>
             <stop offset="100%" stop-color="#385FA9">
             </stop>
            </lineargradient>
           </defs>
           <g fill="none" fill-rule="evenodd" id="Mobile_Features" stroke="none" stroke-width="1">
            <g fill="url(#linearGradient-2)" id="Features" transform="translate(-128.000000, -6407.000000)">
             <g id="Automatically-import-leads" transform="translate(0.000000, 5921.000000)">
              <path d="M187.711613,547 C187.052933,547 186.300155,546.816915 185.641475,546.450746 L159.952951,532.810945 L134.264428,546.450746 C132.19429,547.549254 129.653667,546.816915 128.524501,544.802985 C127.395335,542.789055 128.148112,540.317413 130.21825,539.218905 L157.976911,524.480597 C159.200174,523.839801 160.799826,523.839801 162.023089,524.480597 L189.78175,539.218905 C191.851888,540.317413 192.604665,542.789055 191.475499,544.802985 C190.628625,546.267662 189.217167,547 187.711613,547 Z M187.711613,528 C187.052933,528 186.300155,527.816915 185.641475,527.450746 L159.952951,513.810945 L134.264428,527.450746 C132.19429,528.549254 129.653667,527.816915 128.524501,525.802985 C127.395335,523.789055 128.148112,521.317413 130.21825,520.218905 L157.976911,505.480597 C159.200174,504.839801 160.799826,504.839801 162.023089,505.480597 L189.78175,520.218905 C191.851888,521.317413 192.604665,523.789055 191.475499,525.802985 C190.628625,527.176119 189.217167,528 187.711613,528 Z M187.711613,509 C187.052933,509 186.300155,508.816915 185.641475,508.450746 L159.952951,494.810945 L134.264428,508.450746 C132.19429,509.549254 129.653667,508.816915 128.524501,506.802985 C127.395335,504.789055 128.148112,502.317413 130.21825,501.218905 L157.976911,486.480597 C159.200174,485.839801 160.799826,485.839801 162.023089,486.480597 L189.78175,501.218905 C191.851888,502.317413 192.604665,504.789055 191.475499,506.802985 C190.628625,508.267662 189.217167,509 187.711613,509 Z" id="Logo_FuB_ImportLeads">
              </path>
             </g>
            </g>
           </g>
          </svg>
          <svg class="bracket-bottom" height="125px" version="1.1" viewbox="0 0 119 125" width="119px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
           <defs>
            <lineargradient id="linearGradient-3" x1="0%" x2="100%" y1="0%" y2="105.013717%">
             <stop offset="0%" stop-color="#81D2FF" stop-opacity="0">
             </stop>
             <stop offset="100%" stop-color="#81D2FF">
             </stop>
            </lineargradient>
            <lineargradient id="linearGradient-4" x1="96.7793367%" x2="0%" y1="101.631579%" y2="0%">
             <stop offset="0%" stop-color="#81D2FF" stop-opacity="0">
             </stop>
             <stop offset="100%" stop-color="#81D2FF">
             </stop>
            </lineargradient>
           </defs>
           <g fill="none" fill-rule="evenodd" id="Mobile_Features" stroke="none" stroke-width="1">
            <g id="Features" stroke-width="2" transform="translate(-91.000000, -6471.000000)">
             <g id="Automatically-import-leads" transform="translate(0.000000, 5921.000000)">
              <g id="Illustration_Bracket_Bottom" transform="translate(151.000000, 612.500000) scale(-1, -1) translate(-151.000000, -612.500000) translate(92.000000, 551.000000)">
               <path d="M50.0031594,30 C49.5031594,85 108.503159,76 117.503159,119" id="Path-800-Copy-11" stroke="url(#linearGradient-3)" stroke-linecap="round" stroke-linejoin="round" transform="translate(83.751580, 74.500000) scale(-1, 1) translate(-83.751580, -74.500000) ">
               </path>
               <path d="M0.982434339,-1.42108547e-14 C8.48243434,45 50.4824343,29 49.4824343,119" id="Path-800-Copy-13" stroke="url(#linearGradient-4)" stroke-linecap="round" stroke-linejoin="round" transform="translate(25.241217, 59.500000) scale(-1, -1) translate(-25.241217, -59.500000) ">
               </path>
               <circle cx="50" cy="119" fill="#81D2FF" id="top-circle" r="4" stroke="#81D2FF">
               </circle>
              </g>
             </g>
            </g>
           </g>
          </svg>
          <div class="agents">
           <div>
            <i class="icon">
            </i>
            Ruth Lambert
           </div>
           <div>
            <i class="icon">
            </i>
            Amanda McKenzie
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="text-and-email-leads">
        <div class="container">
         <div class="row">
          <div class="col-md-5 col-md-push-7">
           <h2>
            <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
           </h2>
           <div class="text">
            Follow Up Boss automatically and instantly sends personalized texts and a
                        series of follow up emails, giving every lead a high impact and consistent
                        follow up.
           </div>
          </div>
          <div class="col-md-7 col-md-pull-5">
           <i class="text-and-email-leads-img">
           </i>
          </div>
         </div>
        </div>
       </div>
       <div class="notify-agents">
        <div class="container">
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <div class="text">
          Agents are automatically notified when they've been assigned or reassigned a lead,
                or when a note is added to one of them.
         </div>
         <div class="menu-wrap">
          <div class="swiper-container swiper-mobile-menu">
           <ul class="swiper-wrapper nav menu-horizontal nav-pills nav-justified" data-toggle="pill">
            <li class="swiper-slide" role="presentation">
             [link]
             
            </li>
            <li class="swiper-slide" role="presentation">
             [link]
             
            </li>
            <li class="swiper-slide" role="presentation">
             [link]
             
            </li>
            <li class="swiper-slide" role="presentation">
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="tab-content">
          <div class="tab-pane fade in active" id="notify-new-leads" role="tabpanel">
           <ul class="nav-tab">
            <li class="text-message" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              You've got a new lead!
             </div>
            </li>
            <li class="follow-up-boss" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              You've got a new lead!
             </div>
            </li>
            <li class="email" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              You've got a new lead!
             </div>
            </li>
           </ul>
          </div>
          <div class="tab-pane fade" id="notify-reassigned-lead" role="tabpanel">
           <ul class="nav-tab">
            <li class="text-message" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              Lead reassigned to you!
             </div>
            </li>
            <li class="follow-up-boss" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              Lead reassigned to you!
             </div>
            </li>
            <li class="email" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              Lead reassigned to you!
             </div>
            </li>
           </ul>
          </div>
          <div class="tab-pane fade" id="notify-note" role="tabpanel">
           <ul class="nav-tab">
            <li class="email" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              Note added to your lead!
             </div>
            </li>
           </ul>
          </div>
          <div class="tab-pane fade" id="notify-lead-responds" role="tabpanel">
           <ul class="nav-tab">
            <li class="text-message" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              Lead has replied to you!
             </div>
            </li>
            <li class="follow-up-boss" role="presentation">
             <i>
             </i>
             <div>
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              Lead has replied to you!
             </div>
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
       <div class="green-block" id="signup-for-free">
        <div class="container">
         <div class="row">
          <div class="col-md-7">
           Signup for your free trial now
          </div>
          <div class="col-md-5">
           <div>
            [search]
            
            No credit card required
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </main>
    </div>
   </div>
   <footer class="site-footer" id="colophon" role="contentinfo">
    <div class="container">
     <div class="row" id="bottom-menu">
      <div class="col-md-8 col-md-push-4">
       <ul class="nav navbar-nav" id="footer">
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3411" id="menu-item-3411">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3248" id="menu-item-3248">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-3452" id="menu-item-3452">
         [link]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3991" id="menu-item-3991">
         [link]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3247" id="menu-item-3247">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-3246" id="menu-item-3246">
         [ahref]
         
        </li>
       </ul>
       <ul class="nav navbar-nav social-nav">
        <li class="social">
         [link]
         
         [link]
         
         <a href="/channel/UC9NuZfZ95v5fZPEW477O1WA">
          <i aria-hidden="true" class="fa fa-youtube-play">
          </i>
         </a>
        </li>
       </ul>
      </div>
      <div class="col-md-4 col-md-pull-8">
       [link]
       
      </div>
     </div>
    </div>
   </footer>
  </div>
  <div class="modal fade" id="demo-modal" role="dialog" tabindex="-1">
   <div class="modal-dialog modal-lg" role="document">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
      </button>
     </div>
     <div class="modal-body">
      <iframe allowfullscreen="" allowtransparency="true" class="wistia_embed" frameborder="0" height="394" mozallowfullscreen="" msallowfullscreen="" name="wistia_embed" oallowfullscreen="" scrolling="no" src="//fast.wistia.net/embed/iframe/6u96st376f" webkitallowfullscreen="" width="700">
      </iframe>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0299
  </b>
 </body>
</html>
