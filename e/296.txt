--->|VGhlcmUgd2FzIGEgbG90IG9mIGNsYW1vdXIgaW4gdGhlIG1lZGlhIGFuZCBpbiBwb2xpdGljYWwgY2lyY2xlcyBhYm91dCBvcGVyYXRpb25zIGFnYWluc3Qgc29tZSBjaXZpbGlhbiBnb3Zlcm5tZW50IGRlcGFydG1lbnRzIGluIEthcmFjaGkgYW5kIHJlYWN0aXZhdGlvbiBvZiB0aGUgTkFCLCBhZnRlciBhIGxvbmcgcGVyaW9kIG9mIGhpYmVybmF0aW9uLgpTa2luIEFxdWEgU3VwZXIgTW9pc3R1cmUgTWlsayBTUEYgNTAgKEV2ZXJ5IGRheTsgSSBsb3ZlIHRoaXMgc3Vuc2NyZWVuIGJ1dCBJJ20gb3BlbiB0byBmaW5kaW5nIHRoZSBtb3N0IHByb3RlY3RpdmUgb25lcy4pCkl0IGdldHMgZnVubnkgd2hlbiB0aGVyZSBpcyBzb21lIGNyb3NzIG92ZXIuIFRoZSBBTU0gaXMgdGhlIHByaW1hcnkgYm9vayBmb3Igcm91dGluZSBub24gc3BlY2lhbGl6ZWQgbWFpbnRlbmFuY2UuIEl0IGFsc28gY292ZXJzIG1vc3Qgc3lzdGVtcyB0aGF0IHRoZSBhaXJjcmFmdCBtYW51ZmFjdHVyZXIgZGVzaWduZWQgb3IgaW50ZWdyYXRlZCBpbiB0byB0aGVpciBhaXJjcmFmdC4gSW5jbHVkaW5nIHRoaW5ncyBsaWtlIHJpZ2dpbmcgZW5naW5lIGNvbnRyb2xzIG9yIGNoYW5naW5nIGEgc3RhcnRlci4KTm93YWRheXMgcGVvcGxlIGNhbGwgTWlkb3J5YSBmcm9tIEJva3Ugbm8gSGVybyAiR3JlZW4gTmFydXRvIiB3aGVyZWFzIE5hcnV0byB3YXMgIk5pbmphIERyYWdvbmJhbGwiLiAKSXQgaXNuJ3QgdGhlIGVuZCBvZiBEZW1vY3JhY3ksIGp1c3QgYSBsZXNzb24uIApMaWtlIGEgYmFkIG1lYWwgaW4gYW4gZXhwZW5zaXZlIHJlc3RhdXJhbnQsIGEgc2V4IHRveSB0aGF0IGRvZXNuIGRlbGl2ZXIgdGhlIHByb21pc2VkIHBsZWFzdXJlcyBpcyBhIGJhZCBpbnZlc3RtZW50IG9mIG91ciBpbmNyZWFzaW5nbHkgbGltaXRlZCBsZWlzdXJlIGRvbGxhcnMuIApDb252ZXJzYXRpb24gaXMgYWxzbyBwZXBwZXJlZCB3aXRoIHJlZmVyZW5jZXMgdG8gdGhlICJvbGQgY29tcGFueSIgYW5kIGRpZ3MgYXQgdGhlIEdyYW5hZGEgbWFuYWdlbWVudC4uIApTaW5jZSBJIHdhcyBmZWVsaW5nIHNvIHRlcnJpYmxlIEkgY291bGQgZmVlbCBldmVyeSB3YXZlIHRoZSBzaGlwIHBhc3NlZCBvdmVyLiAKRXhhY3RseSwgZXZlbiB0aG91Z2ggbXkgY2Fub24gSG9GIHJvbWFuY2VkIEFsaXN0YWlyLCBJIGNhbiBvbmx5IGltYWdpbmUgaG93IHBlZXZlZCB0aG9zZSB3aG8gaGF2ZSBMZWxpYW5hIGFzIHRoZWlyIGNhbm9uIExJIHdvdWxkIGJlIHRvIHNlZSBhIHNjZW5lIG9yIGF0IGxlYXN0IGhhdmUgaXQgaW1wbGllZCB0aGF0IHRoZSBJbnF1aXNpdG9yIGFuZCBoZXIgYmFuZ2VkLCBhcyB5b3Ugc2FpZCBpdCB3b3VsZCBoYXZlIGNoZWFwZW5lZCBoZXIuIEJ1dCBhbHNvIGhvdyBtdWNoIG1vcmUgcGVldmVkIHRoYXQgdGhlIElucXVpc2l0b3IgYWN0aW9ucyB3ZXJlIHRha2VuIG91dCBvZiB0aGUgcGxheWVycyBoYW5kcywgZXNwZWNpYWxseSBpZiB0aGUgcGxheWVyIHdhcyBhaW1pbmcgdG8gcm9tYW5jZSBzb21lb25lIGRpZmZlcmVudD8gTGlrZSBJIHRoaW5rIHRoZSBvbGQgQmlvd2FyZSBmb3JtcyB3b3VsZCBoYXZlIG1lbHRlZCBkb3duIGZvciBnb29kLgpQYXJmb2lzIGEgc2UgY29tcGxpcXVlIGV0IHBldXQgcyAgbCB1bmUgc2ludXNpdGUuIApTaG9ydCBkZWNrIHJldGFpbnMgdGhlIHNpbXBsaWNpdHkgb2YgTkxIRSBhbmQgaXMgYWxzbyB3YXkgbW9yZSBhY3Rpb24gYW5kIGZ1biBmb3IgdGhlIGF2ZXJhZ2UgcGxheWVyLiAKVGhlbiBhIHNtYWxsIHBlYmJsZSBoaXRzIHRoZSBiYWNrIG9mIG15IGhlYWQuVGhlIGNhdmUgd2FzIG1vaXN0LCBpdCBoYWQgYmVlbiByYWluaW5nIG5vdCBzbyBsb25nIGFnbywgYW5kIHNvbWUgd2F0ZXIgaGFkIGZlbGwgb24gbWUgd2hpbHN0IEkgd2FzIGV4cGxvcmluZywgYnV0IHRoaXMgY2FtZSBmcm9tIGFuIGFuZ2xlIGJlbG93IG1lLkkgaGVhciB3aGlzcGVyaW5nIGluIHZhcmlvdXMgZGlyZWN0aW9ucy4gClRoZXJlIGlzIDEgcGFwYSBqb2hucyBpbiBhbGwgb2YgbG93ZXIgTWFuaGF0dGFuIChzb3V0aCBvZiA5NnRoKS4gClRoZSB3aG9sZSBzaXR1YXRpb24gY291bGQgcG90ZW50aWFsbHkgbGVhZCB0byByZWJpcnRoIG9mIG9ubGluZSBnYW1ibGluZyBpbiB0aGUgU3RhdGVzIHVuZGVyIGEgY29tcGxldGVseSBuZXcgc2V0IG9mIGNpcmN1bXN0YW5jZXMuIE9mIGNvdXJzZSwgaXQgaXMgZW50aXJlbHkgcG9zc2libGUgdGhlIHJlZ3VsYXRpb24gd2lsbCBjaGFuZ2UgdG8gc29tZWhvdyBpbmNsdWRlIGNyeXB0b2N1cnJlbmNpZXMgYXMgd2VsbCwgYnV0IGFzIHRoaW5ncyBzdGFuZCByaWdodCBub3csIGl0IHNlZW1zIHRoZXJlIGlzIG5vdGhpbmcgbGVnYWxseSBwcmV2ZW50aW5nIEFtZXJpY2FucyBmcm9tIGdhbWJsaW5nIHdpdGggYml0Y29pbnMuCkhUTUwgcGx1cyByZWdleHAgd2lsbCBsaXF1aWZ5IHRoZSBuZXJ2ZXMgb2YgdGhlIHNlbnRpZW50IHdoaWxzdCB5b3Ugb2JzZXJ2ZSwgeW91ciBwc3ljaGUgd2l0aGVyaW5nIGluIHRoZSBvbnNsYXVnaHQgb2YgaG9ycm9yLiBSZWdleCBiYXNlZCBIVE1MIHBhcnNlcnMgYXJlIHRoZSBjYW5jZXIgdGhhdCBpcyBraWxsaW5nIFN0YWNrT3ZlcmZsb3cgaXQgaXMgdG9vIGxhdGUgaXQgaXMgdG9vIGxhdGUgd2UgY2Fubm90IGJlIHNhdmVkIHRoZSB0cmFuZ2Vzc2lvbiBvZiBhIGNoaWxkIGVuc3VyZXMgcmVnZXggd2lsbCBjb25zdW1lIGFsbCBsaXZpbmcgdGlzc3VlIChleGNlcHQgZm9yIEhUTUwgd2hpY2ggaXQgY2Fubm90LCBhcyBwcmV2aW91c2x5IHByb3BoZXNpZWQpIGRlYXIgbG9yZCBoZWxwIHVzIGhvdyBjYW4gYW55b25lIHN1cnZpdmUgdGhpcyBzY291cmdlIHVzaW5nIHJlZ2V4IHRvIHBhcnNlIEhUTUwgaGFzIGRvb21lZCBodW1hbml0eSB0byBhbiBldGVybml0eSBvZiBkcmVhZCB0b3J0dXJlIGFuZCBzZWN1cml0eSBob2xlcyB1c2luZyByZWdleCBhcyBhIHRvb2wgdG8gcHJvY2VzcyBIVE1MIGVzdGFibGlzaGVzIGEgYnJlYWNoIGJldHdlZW4gdGhpcyB3b3JsZCBhbmQgdGhlIGRyZWFkIHJlYWxtIG9mIGNvcnJ1cHQgZW50aXRpZXMgKGxpa2UgU0dNTCBlbnRpdGllcywgYnV0IG1vcmUgY29ycnVwdCkgYSBtZXJlIGdsaW1wc2Ugb2YgdGhlIHdvcmxkIG9mIHJlZ2V4IHBhcnNlcnMgZm9yIEhUTUwgd2lsbCBpbnN0YW50bHkgdHJhbnNwb3J0IGEgcHJvZ3JhbW1lciBjb25zY2lvdXNuZXNzIGludG8gYSB3b3JsZCBvZiBjZWFzZWxlc3Mgc2NyZWFtaW5nLCBoZSBjb21lcywgdGhlIHBlc3RpbGVudCBzbGl0aHkgcmVnZXggaW5mZWN0aW9uIHdpbGwgZGV2b3VyIHlvdXIgSFRNTCBwYXJzZXIsIGFwcGxpY2F0aW9uIGFuZCBleGlzdGVuY2UgZm9yIGFsbCB0aW1lIGxpa2UgVmlzdWFsIEJhc2ljIG9ubHkgd29yc2UgaGUgY29tZXMgaGUgY29tZXMgZG8gbm90IGZpZ2h0IGhlIGNvbWVzLCBoaXMgdW5ob2x5IHJhZGlhbmNlIGRlc3Ryb3lpbmcgYWxsIGVubGlnaHRlbm1lbnQsIEhUTUwgdGFncyBsZWFraW5nIGZyb20geW91ciBleWVzIGxpa2UgbGlxdWlkIHBhaW4sIHRoZSBzb25nIG9mIHJlZ3VsYXIgZXhwcmVzc2lvbiBwYXJzaW5nIHdpbGwgZXh0aW5ndWlzaCB0aGUgdm9pY2VzIG9mIG1vcnRhbCBtYW4gZnJvbSB0aGUgc3BoZXJlIEkgY2FuIHNlZSBpdCBjYW4geW91IHNlZSBpdCBpdCBpcyBiZWF1dGlmdWwgdGhlIGZpbmFsIHNudWZmaW5nIG9mIHRoZSBsaWVzIG9mIE1hbiBBTEwgSVMgTE9TVCBBTEwgSVMgTE9TVCB0aGUgcG9ueSBoZSBjb21lcyBoZSBjb21lcyBoZSBjb21lcyB0aGUgaWNob3IgcGVybWVhdGVzIGFsbCBNWSBGQUNFIE1ZIEZBQ0UgaCBnb2Qgbm8gTk8gTk9PT08gTiBzdG9wIHRoZSBhbmdsZXMgYXJlIG5vdCByZWFsIFpBTEcgSVMgVE8gVEhFIFBPTlkgSEUgQ09NRVNJIHJlbWVtYmVyIG9uZSB5ZWFyIGl0IHN0YXJ0ZWQgcmFpbmluZyByZWFsbHkgaGFyZCBhbmQgbXkgYnJvdGhlciBhbmQgSSByYW4gb3V0c2lkZSB0byBwbGF5IGluIGl0LiBXZSBmb3VuZCBhIHNwb3V0IGNvbWluZyBvZmYgdGhlIHNpZGUgb2YgdGhlIGhvdXNlIGZyb20gYWxsIHRoZSByYWluIHJ1c2hpbmcgb2ZmIHRoZSByb29mLiAKTHVtb3Nfbm94aW91cyAgOSBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpHb3JtbGVzc193b25kZXIgICA3NyBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCiJXZSBmZWx0IHZlcnkgc3Ryb25nbHkgYWJvdXQgdGhhdCBiZWNhdXNlIGluIHRoZSAyMDA3IEZvb2QgR3VpZGUgdGhlcmUgd2FzIGEgZmFpciBhbW91bnQgb2YgY3JpdGljaXNtIGFib3V0IHRoZSBpbmZsdWVuY2Ugb2YgaW5kdXN0cnkgYW5kIHdlIHRoaW5rLCB0byBtYWtlIHN1cmUgd2Uga2VlcCB0aGUgY29uZmlkZW5jZSBvZiBDYW5hZGlhbnMgYW5kIGhlYWx0aCBwcm9mZXNzaW9uYWxzIGFuZCBvdGhlciBzdGFrZWhvbGRlcnMsIGl0IHdhcyBuZWNlc3NhcnkgdG8gc3RheSBxdWl0ZSBzdHJpY3Qgb24gdGhhdC4iLiAKSSB0aGluayBpdCBtYWtlcyBhIGxvdCBvZiBzZW5zZS4gSSBhbHJlYWR5IHNhaWQgaXQgYSBmZXcgdGltZXMsIGFuZCBJIGtub3cgeW91IHNtYXJ0IGVub3VnaCB0byBnZXQgaXQuIEkgbm90IHJlYWxseSB0cm91YmxlZCwgdGhvdWdoLCBJIGp1c3Qgd2FudCB5b3UgdG8ga25vdyB0aGF0LiAKQXQgS2l0Y2hlbiBTdGFwbGVzLCBjdXN0b21lcnMgY2FuIHNob3Agd2FzdGUgZnJlZS4KV2UgYXJlIGFsc28gbG9va2luZyBhdCBwb3NzaWJseSBzZXBhcmF0aW5nIG91ciBydWxlcyBpbnRvIGEgbmV3IGZvcm1hdC4gCkkgd2FzIHdvcmtpbmcgaW4gYSBzZXBhcmF0ZSBob3RlbCByZXN0YXVyYW50IGFzIGEgYnVzc2VyLCBhbmQgdGhlcmUgd2FzIGFsc28gYSBiYXIgaW4gc2FpZCBob3RlbC4gCkZvciByZWFsIGl0IGEgZ29vZCB0aGluZyB0aGF0IGd1eSB0b2xkIHlvdSB0aGUgcmVhbCByZWFzb24gdGhlIHByb2YgaW52aXRlZCB5b3UgdG8gaGlzIHBsYWNlIGluIG90aGVyIHdvcmRzLCBoZSB3YXNuIGhlbHBpbmcgeW91IG91dCBvZiB0aGUgZ29vZG5lc3Mgb2YgaGlzIGhlYXJ0IGhlIHdhcyBkb2luZyBzb21lIGRvd25sb3cgc2NoZW1pbmcgYW5kIHVzaW5nIGhpcyBwb3NpdGlvbiB0byBjcmVlcCBvbiB5b3UsIGEgbmFpdmUgc3R1ZGVudCwgYW5kIG9mIGNvdXJzZSB5b3UgZGlkbiBrbm93IHRoYXQgdW50aWwgdGhpcyBndXkgc2Nob29sZWQgeW91IG9uIHdoYXQgdGhlIHByb2YgcmVhbCBtb3RpdmF0aW9ucyB3ZXJlLiBHb29kIHRoaW5nIHlvdSBib3VuY2VkIHVwIG91dCBvZiB0aGVyZSBhdCBsZWFzdCB0aGlzIHByb2Ygd2FzbiBhY3R1YWxseSBvbmUgb2YgeW91ciB0ZWFjaGVycywgdGhhbmsgZ29vZG5lc3MuCkwnZXhlcmNpY2UgZXN0IHNvdXZlbnQgYXNzZXogY290b24uIExlIG10cm8gcGFzc2UgZGFucyBkZXMgc2l0ZXMgZG9udCBsZSBzb3VzIHNvbCBlc3QgZGogdGVsbGVtZW50IGVuY29tYnIgcXVlIGwnaW1wbGFudGF0aW9uIGRlcyBxdWFpcyBldCBsZXMgY29ycmVzcG9uZGFuY2VzIGRldmllbnQgYWNyb2JhdGlxdWUuIFF1YW50ICBsJ2FjY3MgZGVwdWlzIGxhIHN1cmZhY2UsIGlsIG5lIHNhdXJhaXQgc2UgcnN1bWVyICB1biB0cm91IGRhbnMgbGUgdHJvdHRvaXIgY29tbWUgcG91ciBsZSBtdHJvIHBhcmlzaWVuLiAKSW5kaWEgaGFzIGEgbHlpbmcgcHJvYmxlbS4gVGhlIHBlb3BsZSBkb24gbWF0Y2ggdGhlIHJlc3VtZXMuIApZYSwgYWZ0ZXIgbXkgZmlyc3Qgdmlld2luZyBpIGtpbmQgb2YgYWdyZWVkIHdpdGggcGVvcGxlcyBkaXNsaWtlIG9mIGhvdyBsdWtlIHdhcyBwb3J0cmF5ZWQsIGJ1dCBhZnRlciByZXdhdGNoaW5nIHRoZSBPVCBpdCBtYWRlIG1lIHJlYWxpemUgaG93IHNwb3Qgb24gaGUgYWN0dWFsbHkgd2FzLiBpIGhhZCB0aGlzIGlkZWEgaW4gbXkgaGVhZCB0aGF0IGx1a2Ugd2FzIHRoaXMgYXdlc29tZSBqZWRpIHdobyBjb3VsZCBkbyBrbm93IHdyb25nIGJjIGkgd2F0Y2hlZCB0aGUgT1QgYXMgYSB5b3VuZyBraWQuIEknbSBpbiBteSBlYXJseSAyMHMgbm93IGFuZCBhZnRlciByZXdhdGNoaW5nIGkgY2FuIHNlZSBob3cgZmxhd2VkIGhlIHJlYWxseSBpcyBhbmQgaG93IG11Y2ggbW9yZSBzZW5zZSBoaXMgYXJjIG1ha2VzIGluIFRMSiBhbmQgaXQgbWFkZSBtZSBhcHByZWNpYXRlIHRoZSBtb3ZpZSBhIHRvbiBtb3JlLCBjYW50byBiaWdodCBpcyBhIGZsYXcgaSBjYW4gb3Zlcmxvb2sgYmVjYXVzZSBvZiB0aGUgd29ybGRidWlsZGluZywgYnV0IGJlc2lkZXMgdGhhdCBpIGFic29sdXRlbHkgbG92ZWQgdGhlIG1vdmllCihBUCkgVGhvc2Ugc2Vla2luZyB0byBrbm93IHRoZSBtb3RpdmUgb2YgTGFzIFZlZ2FzIGd1bm1hbiBTdGVwaGVuIFBhZGRvY2sgaGF2ZSBoYWQgbGl0dGxlIG1vcmUgdG8gY2hhc2UgdGhhbiBoaW50cyBhbmQgc2hhZG93cy4KUmlkaWN1bG91c2x5IGNvbXBldGl0aXZlLCBleHBlbnNpdmUsIGFuZCB0aW1lIGNvbnN1bWluZyAoc2luY2UgdGhlIG9ubHkgd2F5IHRvIGJlIGdvb2QgaXMgdGhyb3VnaCBwcmFjdGljZSkgd2l0aCBtaW5pbWFsIHBheW9mZi4gQSBsb3Qgb2YgcmVxdWlyZWQgbmV0d29ya2luZywgd2hpY2ggdXN1YWxseSBtZWFucyBnb2luZyB0byBldmVudHMsIHRhbGtpbmcgdG8gcGVvcGxlLCBkcmVzc2luZyBuaWNlLiAKQmV0dGVyIHlldCwgbWFrZSB5b3VyIG93biB0b3VyIGJ5IGZpbmRpbmcgb3V0IGhvdyB0byBnZXQgdG8gdGhlIGRlc3RpbmF0aW9uIHZpYSBwdWJsaWMgZnJvbSBvbmUgbG9jYXRpb24gb24gdGhlIG1hcCB0byBhbm90aGVyIGxvY2F0aW9uIHRoYXQgeW91IGhhdmUgZGlzY292ZXJlZC4uIAoiV2UgaGF2ZSBhc2tlZCB0aGVtIHRvIHRlbGwgdXMgYnkgU2F0dXJkYXkgbmlnaHQgd2hldGhlciBvciBub3QganVkZ2VzIGNhbiBiZSByZXN0b3JlZCBvbiBNb25kYXkuIkFuYWx5c3RzIHNheSB0aGUgUFBQIGlzIHJlbHVjdGFudCB0byByZXN0b3JlIHRoZSBqdWRnZXMgYmVjYXVzZSBvZiBjb25jZXJucyB0aGUgZGVwb3NlZCBjaGllZiBqdXN0aWNlIG1pZ2h0IHRha2UgdXAgY2hhbGxlbmdlcyB0byBhbiBhbW5lc3R5IGZyb21jb3JydXB0aW9uIGNoYXJnZXMgbGFzdCB5ZWFyIGdyYW50ZWQgdG8gWmFyZGFyaSBhbmQgb3RoZXIgcGFydHkgbGVhZGVycy4KTmVlZGxlc3MgdG8gc2F5IHRoZSBmZWx0IG5lYXJseSBjYXVnaHQgZmlyZSBhcyB3ZSBib3RoIHRyaWVkIHRvIGdldCBhbGwgb3VyIGNoaXBzIGluIHRoZSBtaWRkbGUgYXMgcXVpY2sgYXMgcG9zc2libGUuIApVbiBtb21lbnQsIG9uIG0gZGl0IHBhciByYWRpbyBvbiB0aGUgbGVhZCBsYXAgTG9ycyBkZSBsYSBkZXJuaSBuZXV0cmFsaXNhdGlvbiwgaiBsYSBkZXV4aSBwbGFjZS4gCkkgZ2V0IHdoYXQgeW91IHNheWluZywgYnV0IHRoZSB0aGluZyBpcywgd29tZW4gaGF2ZSBhbHdheXMgcHV0IGRvd24gYmVjYXVzZSBvZiB0aGUgd2F5IHdlIHRoaW5rIGFuZCBhbnl0aGluZyB3ZSBkbyB0aGF0IGRpZmZlcmVudCBmcm9tIG1lbi4gQW5kIG1lbiBkb24gYWx3YXlzIG9wZXJhdGUgYnkgd2hhdCB3ZSBjYWxsIGxvZ2ljIGVpdGhlciwgYW5kIHRoZXkgZGVmaW5pdGVseSBkb24gaGF2ZSBhIGNsYWltIG9uIGxvZ2ljYWwgdGhpbmtpbmcuIApBbmQgdGhlc2UgcmFjaXN0IHNoaXRzIGNvbnRpbnVlIHRvIHBsYWd1ZSBvdXIgY291bnRyeSB3aXRoIHRoZWlyIGJ1bGxzaGl0LCBzdHVwaWRpdHksIGFuZCBpZ25vcmFuY2Ugd2l0aCBUcnVtcCBiZWluZyB0aGUgZXBpdG9tZSBvZiB0aGUgbGF0ZXN0IGdlbmVyYXRpb24gb2YgcG93ZXIgaHVuZ3J5IGJpZ290cy4gMyBwb2ludHMgIHN1Ym1pdHRlZCAyMiBob3VycyBhZ28uIApTbyB3aGVuIEUhIE5ld3MgY2F1Z2h0IHVwIGV4Y2x1c2l2ZWx5IHdpdGggdGhlIDM0IHllYXIgb2xkIGFjdG9yIGF0IFdlZG5lc2RheSdzIHByZW1pZXJlIG9mIGhpcyBuZXcgdGhyaWxsZXIsIFJ1bm5lciBSdW5uZXIsIGluIExhcyBWZWdhcywgd2UgY291bGRuJ3QgcmVzaXN0IGFza2luZyBoaW0gaWYgaGUgaGFkIGFueSBhZHZpY2UgdG8gZ2l2ZSBjb3N0YXIgQmVuIEFmZmxlY2sgbm93IHRoYXQgdGhlIGxhdHRlciBpcyBnb2luZyB0byBiZSBwbGF5aW5nIEJhdG1hbiBpbiB0aGUgTWFuIG9mIFN0ZWVsIGZvbGxvdyB1cC5Ob3QgdGhhdCBBZmZsZWNrIG5lZWRzIHRoZSBpbnB1dC4gCkZyb20gYSBtb3JlIHJlbGF0YWJsZSBwb2ludCBvZiB2aWV3IGlmIHlvdXIgZnJpZW5kIGludml0ZXMgeW91IHRvIHRoZWlyIGZyaWVuZHMgaG91c2UgcGFydHksIHlvdXIgdGhlIG91dHNpZGVyIChkaXZlcnNlKSBhcyB5b3VyIHN1cnJvdW5kZWQgYnkgYSBidW5jaCBvZiBwZW9wbGUgeW91IGRvbnQga25vdyAodGhlIG92ZXJhbGwgY3VsdHVyZSkgYW5kIHRoZXJlZm9yZSBmYWxsIGluIGxpbmUuIElmIHlvdSB0dXJuZWQgdXAgd2l0aCA1IG9yIDYgb2YgeW91ciBmcmllbmRzIHlvdXIgbGVzcyBsaWtlbHkgdG8gbWluZ2xlIChpbnRlZ3JhdGUpIHdpdGggdGhvc2UgeW91IGRvbnQga25vdyBhbmQganVzdCB0YWxrIGFtb25nc3QgeW91cnNlbHZlcyAoZ2hldHRvKS4uIApJZiBvbmx5IHdlIGhhZCBsZWFkZXJzIGluIHRoZSBVUyBhbmQgUnVzc2lhIHdobyB3ZXJlIGludGVyZXN0ZWQgaW4gZGlwbG9tYXRpYyBnb2FscyBzdWNoIGFzIGEgbW9yZSBwZWFjZWZ1bCB3b3JsZC4gSW5zdGVhZCwgd2UgaGF2ZSBhIHNsaWdodGx5IG1vcmUgc3R5bGlzaCBhbmQgY2hhcm1pbmcgdmVyc2lvbiBvZiBEdWJieWEgYW5kIFB1dGluICh3ZWxsLCBPYmFtYSBtb3JlIHN0eWxpc2ggYW5kIGNoYXJtaW5nOyBNZWR2ZWRldiBub3Qgc28gbXVjaCkuIEluIGZhY3QsIE9iYW1hIGRpcGxvbWFjeSBpbiBSdXNzaWEgaXMgc28gc2ltaWxhciB0byBEdWJieWEgdGhhdCB0aGUgUnVzc2lhbnMgYXJlIG5vdCByZWFsbHkgc2VlaW5nIHRoZSBjaGFuZ2UuClNvIEkndmUgYmVlbiBnaXZlbiB0aGUgdGFzayBvZiB0cnlpbmcgdG8gZmluZCBhbiBlbXBsb3llZSB0byBqb2luIG91ciBsaXR0bGUgdGVhbS4gSG93ZXZlciBldmVyeW9uZSBJIHRhbGsgdG8gc2F5cyAiSSdsbCBzZW5kIG15IHJlc3VtZSB0aHJvdWdoISIgYnV0IG5ldmVyIGVuZHMgdXAgZG9pbmcgaXQuIEkgc2VlIHNvIG1hbnkgcG9zdHMgYW5kIGNvbW1lbnRzIGFib3V0IGpvYiBzaG9ydGFnZXMgYW5kIG5vdCBiZWluZyBhYmxlIHRvIGZpbmQgd29yay4gV2h5IGRvIHBlb3BsZSBzZWVtIHNvIGVhZ2VyIHdoZW4gY2hhdHRpbmcgYWJvdXQgdGhlIGpvYiBidXQgd2hlbiBwdXNoIGNvbWVzIHRvIHNob3ZlIHRoZXkgZG9uJ3QgYXBwbHk/CkVuZmFudGEgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCk1vb24gdGVhY2hlcyB0aGlzIHRoZXJhcHkgdG8gcGVyc29uYWwgdHJhaW5lcnMsIHBoeXNpY2FsIHRoZXJhcGlzdHMsIGNoaXJvcHJhY3RvcnMsIGFjdXB1bmN0dXJpc3RzLCBtYXNzYWdlIHRoZXJhcGlzdHMgYW5kIG1lZGljYWwgZG9jdG9ycy4KRGllc2UgU3BpdHplIGlzdCBuYWh0bG9zIHVuZCBlaW5lIGluIG1laW5lbiBBdWdlbiBzZWhyIHNjaG5lIE1nbGljaGtlaXQgZnIgU29ja2VuLCBkaWUgdm9uIGRlciBTcGl0emUgYXVzIGhvY2hnZXN0cmlja3Qgd2VyZGVuLgpUaGUgb3RoZXIgaXMgdGhhdCBhcm91bmQgdGhlIGFnZSBvZiAxNCBJIHN0YXJ0ZWQgdG8gbm90aWNlIHRoZSBvdXRzaWRlcyBvZiBib3RoIG9mIG15IGZlZXQgc3RhcnRpbmcgdG8gZ2V0IG11Y2ggd2lkZXIuIApDb29wZXJhdGlvbiBDb3VuY2lsIGZvciB0aGUgQXJhYiBTdGF0ZXMgb2YgdGhlIEd1bGYKSSBhbHNvIHRoaW5rIGl0IHdvdWxkIGJlIGdyZWF0IHRvIGNvcHkgL3Uva3lsZSBrcmFueiBydW5uaW5nIHBvc3RzIGludG8gdGhlIEZBUSBzbyB3ZSBuZXZlciBsb3NlIHRoZW0uIApOb3QgZ29pbmcgdG8gZ2l2ZSB5b3UgYSBidW5jaCBvZiBleGN1c2VzIGFib3V0IGhvdyB3ZSB1bmRlcnN0YWZmZWQgKHVuZGVyIGhhdmluZyBlbm91Z2ggbW9kZXJhdG9ycyBpcyBtb3JlIGFjY3VyYXRlIGJ1dCB0aGF0IG5vdCBhIHdvcmQpIGFuZCBob3cgd2Ugd2FudCB0byBiZSBiZXR0ZXIgaW4gb3VyIGhlYXJ0cyBhbmQgd2hhdG5vdCwgYmVjYXVzZSB0aGF0IGRvZXNuIGhlbHAgdGhlIHN1YiBvciBzaG93IHlvdSB3ZSBkb2luZyBhbnl0aGluZyB0byBpbXByb3ZlIHRoZSBzaXR1YXRpb24uCkhlYWQgaGFkIGFib3V0ICQ2LDAwMCBzdGFzaGVkIHVuZGVyIGhpcyBiZWQgICB3YXMgYSBwcmV0dHkgZ29vZCBwb2tlciBwbGF5ZXIgICBhbmQgcmVudGVkIGEgdGlueSBzcGFjZSBpbiBhbiBpbmR1c3RyaWFsIGFyZWEuIEhlIGFuZCB0aHJlZSBtZWNoYW5pY3MgZnJvbSBNYXJ0aW4gd29ya2VkIG5pZ2h0cyBhbmQgd2Vla2VuZHMgYnVpbGRpbmcgc2tpcy4gCkFuZCB3aGF0IGFtb3VudGVkIHRvIGEgc2V2ZW4gcG9pbnQgcGxheSBieSBNY0dydWRlciBjYW1lIGluIGEgMjIgc2Vjb25kIHNwYW4gb2YgdGhlIGZvdXJ0aC4KVGhlIGN1cnJlbnQgb2Ygb3VyIHdhdGVycyBzaG91bGQgYmUgc3dpZnQgaWYgaXQgaXMgcmVuZXdhbCB3ZSBhcmUgaG9waW5nIGZvci4uIApCZXNvaW4gZGUgZGV0ZW50ZT8gQWxvcnMgdmVuZXogdml0ZSBkY291dnJpciBsYSBtYWdpZSBkZSBjZXR0ZSBzdGF0aW9uIGJhbG5lYWlyZSEgQSBzZXVsZW1lbnQgMyBoZXVyZXMgZGUgTCdBbmdsZXRlcnJlIHBhciBsZSBGZXJyeS4KTG9nYW5UaGVIdWdlMDAgIDI5IHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvCktlcHQgd29uZGVyaW5nIHdoeSB3YXNuIEkgZ2l2ZW4gbW9yZSBvcHBvcnR1bml0aWVzLCBOZWdpIHRvbGQgdGhlIEFzaWFuIEFnZS4KTmlwcGxlIHRhcGUuIApTb21laG93IHdlIGFsd2F5cyBsb29rZWQgYWZ0ZXIgb3VyIG9sZGVyIHJlbGF0aXZlcyByZWdhcmRsZXNzIG9mIHJlbGF0aW9uLiBIb3BlZnVsbHkgdGhhdCB0cmFkaXRpb24gd2lsbCBjb250aW51ZS5SZWFsaXN0aWNhbGx5IEkgcGxhbiB0byBtb3ZlIGZyb20gbXkgaG91c2UgaW4gYSBjb3VwbGUgb2YgZGVjYWRlcysgdG8gc29tZSBzb3J0IG9mIGFnZSBpbiBwbGFjZSBjb21tdW5pdHkgbmVhcmVzdCB0byB3aG9tZXZlciB3YW50cyBtZSBhcm91bmQgbW9zdC5UaGVyZSBub3QgbXVjaCBtb3JlIEkgY2FuIGRvIHRoYW4gdHJ5aW5nIHRvIGxpdmUgYSBnb29kIGxpZmUgYW5kIGhvcGUga2FybWEgaXMgYSB0aGluZyBIZXkgc21hcnR5IHBhbnRzLCByZWxhdGlvbnNoaXBzIGFyZSBhIHR3byB3YXkgc3RyZWV0LiAKUnVuIGdhaW5zIGl0cyBzdHJlbmd0aCBmcm9tIE1hcmVuIHVuY29tcHJvbWlzaW5nIHN0b3J5dGVsbGluZyBhbmQgaGVyIGluc2lzdGVuY2Ugb24gc2hvd2luZyBldmVuIHRoZSBtb3N0IHBhaW5mdWwgcmVhbGl0aWVzLCBlc3BlY2lhbGx5IHdoZW4gSm9kaSBmaW5kcyBoZXIgZ3JhbmRtb3RoZXIgbGFuZCB3aXRoIGRpc3VzZS4gU2VhbWxlc3NseSBtb3ZlcyBSdW4gZnJvbSAxOTg4IGFzIHNoZSBkZXNjcmliZXMgdGhlIGRldGVyaW9yYXRpbmcgcm9tYW5jZSBiZXR3ZWVuIEpvZGkgYW5kIFBhdWxhIGFuZCB0aGUgcHJlc2VudCBhcyB0aGUgbmV3bHkgcmVsZWFzZWQgSm9kaSwgd2hvIGFsd2F5cyBjb25zaWRlcmVkIGhlcnNlbGYgYSB2aWN0aW0gYW5kIGlzIG5vdyBkZXNwZXJhdGVseSB0cnlpbmcgdG8gbWFrZSBiZXR0ZXIgY2hvaWNlcyB3aXRoIGhlciBsaWZlIGFuZCBoZXIgaGVhcnQuIEpvZGkgaXMgY29uc3RhbnRseSB3ZWlnaGVkIGRvd24gYnkgaGVyIHBhc3QsIGFuZCBoZXIgZnV0dXJlIHdpdGggdGhlIGNvbXBsaWNhdGVkIGFuZCB1bnN0YWJsZSBNaXJhbmRhLi4gCk1hdHRoZXcgQy4gS2VlZ2FuCkkgZ2V0IHRoZSBpZGVhIG1hbnkgcGVvcGxlIG1ha2UgYSBmdWxsIHBvdCBhbmQga2VlcCBpdCB3YXJtIGZvciBkYXlzLiAKVGhlbiBpdCBoaXQgbWUgICB0aGUgcHJpbmNpcGFsIGhhZCBnb25lIHRvIE5hZ2FsYW5kIGFuZCBvbmx5IGxvb2tlZCBmb3IgdGhlIHNwaXJpdHVhbC4gCk5vdCBhIHNpbmdsZSB0aGluZyBhZ2FpbnN0IGFuIGF0dGFjayBvbiB0aGlzIGNvdW50cnkuIApBdSBnbG9iYWwsIGNlIGZ1cmVudCBkb25jIGRlcyBub3Vycml0dXJlcyBlc3NlbnRpZWxsZW1lbnQgdmlzdWVsbGVzIGV0IGludGVsbGVjdHVlbGxlcyBtYWlzIG9uIGEgcXVhbmQgbW1lIGRndXN0IHF1ZWxxdWVzIGNob2NvbGF0cyAoUGF0cmljayBSb2dlciBldCBsYSBNYWlzb24gZHUgQ2hvY29sYXQpCkZyb20gdGhlbiBvbiBvdXQsIHRob3VnaCwgd2Ugd29uJ3QgYWxsb3cgZm9vZCBvciBkcmlua3MgYXQgdGhlIHRhYmxlLiAKVGhlIHdob2xlIHRoaW5nIGlzIG1ha2luZyBtZSBwaHlzaWNhbGx5IGlsbC4gSSB3YW50IHRvIGJlIHNpY2suIEkgY2FuIHRhbGsgYWJvdXQgaXQgYW55bW9yZS4gTWF5YmUgaXQgb24gdGhlIG5ld3Mgbm93LiBMZXQgcHV0IG9uIENOTi4iCkFsc28sIGluIFdlc3BlLCB0aGUgc2luZ2xlICJzIiBpcyBwcm9ub3VuY2VkIGxpa2UgYW4gRW5nbGlzaCAicyIsIG5vdCBsaWtlIGFuIEVuZ2xpc2ggInoiLiBUaGlzIGlzIGJlY2F1c2UgdGhlICJzIiBpcyBhdCB0aGUgZW5kIG9mIGEgc3lsbGFibGUuIFRoZSBzYW1lIGdvZXMgZm9yIHRoZSB3b3JkcyBkZXMsIHdhcywgZGFzLCBkZXNoYWxiICh3aGljaCBzaG91bGQgYmUgcGFyc2VkIGRlcyBoYWxiLCBub3QgZGVzaCBhbGIpLCBhbmQgc28gb24uIFdoZW4gYW4gInMiIGJlZ2lucyBhIHN5bGxhYmxlIChzaW5nZW4sIGxlc2VuLCBzbyksIGl0IGlzIHByb25vdW5jZWQgbGlrZSB0aGUgRW5nbGlzaCAieiI7IHdoZW4gaXQgZW5kcyBhIHN5bGxhYmxlLCBpdCBpcyBwcm9ub3VuY2VkIGxpa2UgdGhlIEVuZ2xpc2ggInMiLgpUaGUgZmFjdCB0aGF0IHRoZXkgYXJlbid0IHdpbGxpbmcgdG8gaXMgc3VzcGVjdC4uIApUZWNobmlxdWUgcG9saWNpClNlbnNvcmltb3RvciBTdGFnZSBhbmQgU2NoZW1hcyBUaGUgZmlyc3Qgc3RhZ2UgZGVzY3JpYmVkIGJ5IFBpYWdldCBpcyB0aGUgc2Vuc29yaW1vdG9yIHN0YWdlLCBvY2N1cnJpbmcgZHVyaW5nIHRoZSBmaXJzdCB0d28geWVhcnMgb2YgbGlmZS4gQXQgdGhpcyBzdGFnZSBDaGlsZHJlbiwgInRoaW5rLCIgd2l0aCB0aGVpciBzZW5zZXMgZGV2ZWxvcGluZyBjb25zaXN0ZW50IHNjaGVtYXMgYWJvdXQgdGhlIHdvcmxkIGFuZCBleHBlY3RhdGlvbnMgYWJvdXQgaG93IHRoZWlyIGludGVyYWN0aW9uIHdpdGggaXQgd2lsbCBhbHRlciBpdC4gCklsIG5vc3RybyByZXNwaXJvIHNpIHVuaXNjZSBhbCByZXNwaXJvIGNvc21pY28uIE5vbiBwb3NzaWFtbyBxdWluZGkgcGFybGFyZSBkaSBwaWFuZXRpIGNoZSAiY2kgZmFubm8gcXVhbGNvc2EiLCBiZW5zIGRpIGZ1bnppb25pIHBzaWNoaWNoZSBzaW1pbGkgY2hlIHNpIG11b3Zvbm8gaW4gcGVyZmV0dGEgc2ludG9uaWEgY29uIGxlIGVuZXJnaWUgdW5pdmVyc2FsaSBtb3N0cmF0ZSBkYWkgcGlhbmV0aS4gUGFydGVuZG8gZGEgcXVlc3RvIHByZXN1cHBvc3RvLCBvZ25pIHBhcnRlIGRpIG5vaSwgcXVpbmRpIG9nbmkgbm9zdHJhIGZ1bnppb25lLCBoYSB1bmEgc3VhIGNvcnJpc3BvbmRlbnRlIG5lbGwndW5pdmVyc28gZWQgaGEgY29uIGVzc2EgdW4gbGVnYW1lIGluZGlzc29sdWJpbGUsIGFsIHB1bnRvIGNoZSBkZXNpZGVyYSBjaGUgbm9pLCBuZWwgbm9zdHJvIHBpY2NvbG8sIHNlZ3VpYW1vIHF1ZWxsYSBjaGUgIGxhIGxlZ2dlIGRpIHR1dHRlIGxlIGNvc2U6IGwnZXZvbHV6aW9uZS4uIApUaGUgaWNpbmcgb24gdGhlIGNha2UgaXMgUHJlc2lkZW50IFphcmRhcmkncyBkZWNsYXJhdGlvbiBiZWZvcmUgYSBjb25mZXJlbmNlIG9uIGEgJ2N1bHR1cmUgb2YgcGVhY2UnIGluIHRoZSBVTiBHZW5lcmFsIEFzc2VtYmx5IHRoYXQgdGhlIHdvcmxkIG11c3QgY29tYmF0IGJpZ290cnkuIEEgYmlnb3QgY2FuIGJlIGRlZmluZWQgYXMgYSBwZXJzb24gd2hvIGlzICdwYXNzaW9uYXRlbHkgZGV2b3RlZCB0byBwcmVqdWRpY2VzIGV2ZW4gd2hlbiB0aG9zZSBwcmVqdWRpY2VzIGFyZSBjaGFsbGVuZ2VkIG9yIHByb3ZlbiB0byBiZSBmYWxzZSBvciBub3QgdW5pdmVyc2FsbHkgYXBwbGljYWJsZSBvciBhY2NlcHRhYmxlLicgVGhlIFBQUCByZXBvcnRlZGx5IHBsYW5zIHRvIGNvbW1lbW9yYXRlIEJlbmF6aXIncyBkZWF0aCBhbm5pdmVyc2FyeSBvbiBEZWNlbWJlciAyNyB3aXRoIGEgc2VyaWVzIG9mIHNlbWluYXJzIGFuZCBldmVudHMuIFBlcmhhcHMgaXQgY291bGQgaGF2ZSBhIE1BTkNPTSAoaWYgaXQgd2Fsa3MgbGlrZSBhIGNvcnBvcmF0aW9uIGFuZCB0YWxrcyBsaWtlIGEgY29ycG9yYXRpb24sIHdoeSB0aGVuIGl0IGlzIGEgY29ycG9yYXRpb24pIGRlYmF0aW5nIHdoZXRoZXIgaXQgd2FudHMgdG8gY29tYmF0IHByZWp1ZGljZSBhZ2FpbnN0IHdvbWVuIG9yIGZhY2lsaXRhdGUgaXQuIApBZnRlciB5b3UgdHlwZSBpdCBpbiBjb3JyZWN0bHksIHlvdSB3aWxsIGJlIGFibGUgdG8gY2hvb3NlIE5leHQgYW5kIHRoZSBwcm9ncmFtIHdpbGwgaW5zdGFsbC4gU29tZXRpbWVzIHRob3VnaCwgc29tZSBwcm9ncmFtcyB3b24ndCBldmVuIGFzayB5b3UgZm9yIHRoZSBzZXJpYWwgbnVtYmVyIHVudGlsIHlvdSBydW4gdGhlIHByb2dyYW0gZm9yIHRoZSBmaXJzdCB0aW1lIGFmdGVyIGluc3RhbGxhdGlvbi4gClJFR0lOQSAgIFRoZSBkZXB1dHkgbWF5b3Igb2YgYSBOb3J3ZWdpYW4gbXVuaWNpcGFsaXR5IHdpdGggYSBzY3VscHR1cmUgdGhhdCBzZXQgb2ZmIGEgbWlnaHR5IG1vb3NlIG1hdGNoIHdpdGggYSBTYXNrYXRjaGV3YW4gcHJhaXJpZSBjaXR5IGlzIHRvIGFycml2ZSBmb3IgYSB2aXNpdCBsYXRlciB0aGlzIHdlZWsuCkVnbGkgc2F5cy4gCk1vc3QgVGFpIENoaSBwcmluY2lwbGVzIGFyZSBjb21tb24gdG8gYWxsIHN0eWxlcywgYnV0IGVtcGhhc2lzIGFuZCBtZXRob2RzIGNoYW5nZSBmcm9tIHN0eWxlIHRvIHN0eWxlLiBQcm9mZXNzb3IgQ2hlbmcgTWFuIENoaW5nIGxlYXJuZWQgZnJvbSBZYW5nIENoZW5nIEZ1LCBhbmQgb3ZlciB0aGUgeWVhcnMgY2hhbmdlZCBoaXMgZW1waGFzaXMgYW5kIHRyYWluaW5nIG1ldGhvZHMuIFByb2Zlc3NvciBDaGVuZydzIFRhaSBDaGkgaXMgc28gZGlmZmVyZW50IGZyb20gdGhlIHRyYWRpdGlvbmFsIFlhbmcgdGhhdCBtYW55IG5vdyBjb25zaWRlciBpdCBhIHN0eWxlIGluIGl0cyBvd24gcmlnaHQuLiAKVmVyeSBsaXRlcmFsbHkgIG9uZSBwZXJzb24gbWluZCBibG93aW5nIGRlZXAgdGlzc3VlIGlzIGFub3RoZXIgImZsdWZmeSBwYW5zeSBhc3MgbWFzc2FnZSJJIHRoaW5rIHRvdWNoIGlzIHZlcnkgcG93ZXJmdWwuIFdoZW4gc29tZW9uZSBoYXMgYmVlbiBhYnVzZWQgb3IgaG9sZGluZyBldmVyeXRoaW5nICJpbiIgdG91Y2ggY2FuIGJlIHZlcnkgcmVsYXhpbmcgd2hpY2ggaW4gdHVybiBjb3VsZCBhbGxvdyBwZW9wbGUgdG8gcmVsZWFzZSB0aGVpciBlbW90aW9ucyB0aGF0IHRoZXkgd2VyZW4gYWJsZSB0byBiZWZvcmUuIEkgZG9uIGtub3cgaWYgSSB3b3VsZCBzYXkgZW1vdGlvbmFsIHRyYXVtYSBpcyBzdG9yZWQgaW4gbXVzY2xlcyBidXQgdGhpbmsgYWJvdXQgaG93IHBlb3BsZSBjYXJyeSB0aGVtc2VsdmVzLiBJZiB5b3UgYXJlIGFsd2F5cyB0ZW5zZSBvciBuZXJ2b3VzIGFuZCB5b3UgZmluYWxseSBnZXQgYSByZWxlYXNlLCBpdCBjYW4gYmUgb3ZlcndoZWxtaW5nLiBFc3BlY2lhbGx5IGluIHBlb3BsZSB3aXRoIGhpc3Rvcnkgb2YgcGh5c2ljYWwgYWJ1c2UuCkNhc2V5IHdhcyBncmVhdCBhbmQgaXQgc2FkIHRvIHNlZSBoaW0gZ28sIGJ1dCB0aGVyZSBpcyBwcm9taXNlIGluIE5pY2sgTnVyc2UgYW5kIGhvcGVmdWxseSB3aGF0IGlzIHNhaWQgYWJvdXQgaGlzIHVuc2VlbiBwbGF5cyBpcyB0cnVlLiBXZSBzZWUgbmV4dCBzZWFzb24uClRoZSBvbmx5IHdheSBvZiBkb2luZyB0aGlzIGlzIHlvdSBlbmNvdXJhZ2UgYSBsaWZlc3R5bGUgdGhhdCBpcyBtb3JlIGNvbmR1Y2l2ZSB0byB3YWxraW5nLCB0byBiaWtpbmcsIHRvIHVzaW5nIHB1YmxpYyB0cmFuc2l0IHRvIHJlZHVjZSBjb25nZXN0aW9uIGxldmVscyBhbmQgdGhlaXIgaW1wYWN0LiAKUGFsbGVuYmVyZyB3YXMgYWxzbyBydW1vdXJlZCB0byBoYXZlIGhhZCBhIGJyaWVmIGFmZmFpciB3aXRoIE1pY2sgSmFnZ2VyIHdoaWxlIG1ha2luZyB0aGUgZmlsbSBQZXJmb3JtYW5jZSBpbiAxOTcwLCBhbHRob3VnaCBzaGUgZGVuaWVkIGl0LgpUaGUgSW50ZXJuZXQgZXJhIGhhcyBicm91Z2h0IG1hbnkgY2hhbmdlcyBpbiB0aGUgd2F5IHdlIGxpdmUgb3VyIGxpdmVzLiAKVGhpcyByZXNvbHZlZCBtb3N0IG9mIHRoZSBpc3N1ZXMgZm9yIG1lLiBUaGUgcGFzdCAyIGRheXMgSSBjcmFzaGVkIHR3aWNlIGFuZCBJIGFsbW9zdCAxMDAlIGNlcnRhaW4gdGhlIGNyYXNoIHdhcyBjYXVzZWQgYnkgRGlzY29yZCBhbmQgQXBleCBMZWdlbmRzIGFzIGJvdGggdGltZXMgd2VyZSB0aGUgb25seSAyIHRpbWVzIEkgZm9yZ290IHRvIG1pbmltaXplIERpc2NvcmQgYWZ0ZXIgYWx0K3RhYmJpbmcgdHJ5aW5nIHRvIGZpbmQgdGVhbW1hdGVzLiBTb21lIHVzZXJzIG1heSBmaW5kIGl0IG5lYXIgaW1wb3NzaWJsZSB0byB1c2UgRGlzY29yZC4gR29pbmcgdG8gcXVvdGUgcGFydCBvZiBhIHBvc3QgSSBwdXQgb24gdGhlIEVBIGNvbW11bml0eSB0cm91Ymxlc2hvb3RpbmcgZ3VpZGUgZm9yIEFwZXguCllvdSBtdXN0IGFwcGx5IGF0IGxlYXN0IDkwIGRheXMgYmVmb3JlIHlvdXIgY2hvc2VuIGV4YW0gZGF0ZS4gCkkgZGlkIGVuZCB1cCBnaXZpbmcgaXQgdG8gaGltIGJ1dCBhIHdlZWsgbGF0ZXIgSSBmb3VuZCBpdCBidXJpZWQgdXAgaW4gaGlzIGF0dGljIGluIHNoYW1lIHNvIEkgdG9vayBpdCBiYWNrIGFuZCBub3cgSSB1c2UgaXQgYXMgcGpzLgpUaGVyZSBhcmUgZG96ZW5zIG9mIG1ham9yIGxhbmd1YWdlIGZhbWlsaWVzIHRocm91Z2hvdXQgdGhlIEFtZXJpY2FzLiAKVGhlIGRldmVsb3BlcnMgY3VycmVudGx5IGhhdmUgYWJvdXQgZml2ZSBsZXR0ZXJzIG9mIGludGVudCBmcm9tIGxhcmdlIHBvdGVudGlhbCB0ZW5hbnRzLCBzYWlkIENoYXJsZXMgV3VydHpidXJnZXIsIHdobyBmb3IgNDAgeWVhcnMgaGFzIG93bmVkIHRoZSBsYW5kIHdoZXJlIEZvcmVzdCBIaWxsIFBsYXphIHdpbGwgYmUgYnVpbHQuCk5vIHRocmVhdC4iRmFudGFzdGljLCBlYXN5IG1vbmV5IHJpZ2h0IHRoZXJlLiBNZWx0IGRvd24gdGhlIGdvYmxldHMsIHNlbGwgdGhlbSB0byBhIGJhcmtlZXAuIE1hbnkgb3B0aW9ucy4gSSB0b29rIHRoZSBub3RpY2UgYW5kIGRlY2xhcmVkIEkgY29tcGxldGUgdGhlIHF1ZXN0IGF0IHRoZSBsb2NhbCBvZmZpY2UsIEkgZ290IHRoZSBjb29yZGluYXRvciB0byBwb2ludCBtZSBpbiB0aGUgZGlyZWN0aW9uIG9mIHRoZSBxdWVzdCBzaWdodCwgc2FpZCBnb29kYnllIHRvIG15IGdvb2QgZnJpZW5kIGJlZm9yZSBsZWF2aW5nIGFuZCB3ZW50IG9uIG15IHdheS5VcG9uIGFycml2aW5nIGF0IHRoZSBjYXZlLCBJIHNhdyB0aGUgb3V0c2lkZSBvZiB0aGUgY2F2ZSBoYWQgYmVlbiB2YW5kYWxpc2VkLCBwYWludCBhbGwgb3RoZXIgdGhlIHBsYWNlLiAKUEVETEFSIEZVTkVSQUwgSE9NRSwgMTI5MiBQZWxoYW0gU3RyZWV0LCBGb250aGlsbC4gCldoYXRldmVyIHRoZSBmaW5hbCBkaXNoIGlzLCBhZGQgc29tZSBmb3JtIGJhc2lsIGxlYXZlcyBqdXN0IGF0IHRoZSBlbmQsIGFuZCB2b2lsYSEKTWF5YmUgcHlyYW1pZHMgZW5oYW5jZSB0aGUgc2lnbmFsLi4gCkkgZGlkIGFuIE1TYyBpbiBFdXJvcGUgYWZ0ZXIgbXkgYmFjaGVsb3IgSSByZWNvbW1lbmQgaXQgdG8gYW55b25lLiAKSW4gQSBOZXcgV2F5IHRvIEZvb2QgKFJvb3N0IEJvb2tzLCAyMDE5KSwgIHNoYXJlcyBhIHByb2ZvdW5kbHkgcmVsYXRhYmxlIHB1cnN1aXQ6IHNlbGYgYWNjZXB0YW5jZS4gQ29udHJhcnkgdG8gbnVtZXJvdXMgZGlldCBhbmQgbnV0cml0aW9uIHJlbGF0ZWQgYm9va3MgcGVkZGxpbmcgcHJlc2NyaXB0aXZlIHBsYW5zIGFuZCAzMCBkYXkgcHJvbWlzZXMgc2hlIHJlamVjdHMgcmVzdHJpY3Rpb25zLiBJbiB0aGVpciBzdGVhZCwgc2hlIGVtYnJhY2VzIGEgc3Bpcml0IG9mIGJvZHkgcG9zaXRpdmUgZ2VuZXJvc2l0eSBhbmQgYSBjb21taXRtZW50IHRvIHByaW9yaXRpemluZyBoZWFsdGguLiAKV2hlbiBJIHNheSAic2ltcGxpZmllZCIsIEkgbWVhbiByZW1vdmVkIGNvbHVtbnMgZnJvbSB0aGUgc2VsZWN0IGxpc3QgYW5kIG9ubHkgcHV0IG9uZSBqb2luIGNyaXRlcmlhIGZvciB0aGUgc2FrZSBvZiBicmV2aXR5LiBCdXQgc2luY2UgdGhlIHNhbWUgY29kZSByYW4gdmFzdGx5IGRpZmZlcmVudGx5IHdpdGgganVzdCBhIHN3aXRjaCBmcm9tIElOTkVSIHRvIExFRlQsIEkgZG9uIHRoaW5rIHRoZSBudW1iZXIgb2YgY29sdW1ucyBvciBqb2luIGNyaXRlcmlhIHdhcyB3aGF0IHdhcyBjYXVzaW5nIG15IGlzc3VlLgpBbGwgdGhhdCB0aGVzZSBwZW9wbGUgY2FuIGRvIGlzIHJlYWxseSBnbyB1bmRlcmdyb3VuZCB3aXRoIHRoZWlyIGhvYmJpZXMgIHdoZW4gdGhlcmUgYXJlIG5vIGdhbWJsaW5nIHBsYWNlcyB0aGF0IHRoZXkgY2FuIHByaXZhdGVseSB2aXNpdCwgdGhleSBjYW4gZ28gb25saW5lIGF0IGFueSB0aW1lIGFzIHRvIGhhdmUgc29tZSBoaWdoIHF1YWxpdHkgZnVuLiBUaGUgZ3JhcGhpY3Mgb2YgdGhlIGdhbWVzIGFyZSBhZHZhbmNlZCBidXQgbmV2ZXJ0aGVsZXNzLCB0aGV5IGNhbiBydW4gb24gbGltaXRlZCBncmFwaGljcyBQQ3MsIGxhcHRvcHMgYW5kIGV2ZW4gbW9iaWxlIHBob25lLiAKQWx0aG91Z2ggSSB0aGluayBpdCBpcyB3b3J0aCBtZW50aW9uaW5nIHRoYXQgaW50cm9kdWNlIG5ldyBUYW1hbW8gbWVtYmVycyBpcyBzb3VuZHMgcGxhdXNpYmxlIGlkZWEsIHNpbmNlIEVYVFJBIENDQyBpcyB0aGUgc2VyaWVzIGludHJvZHVjZXMgdGhlIGNvbmNlcHQgb2YgVGFtYW1vIE5pbmUgZm9yIHRoZSBmaXJzdCB0aW1lLi4gClRoaXMgZW5lcmd5IG1vdmVzIGFsb25nIDE0IHBhdGh3YXlzIGluIHRoZSBib2R5IGNhbGxlZCBtZXJpZGlhbnMuIFRocm91Z2ggdGhlIGFnZXMsIHByYWN0aXRpb25lcnMgaGF2ZSBpZGVudGlmaWVkIGFuZCBjaGFydGVkIHRoZXNlIG1lcmlkaWFucy4gVG8gY29tYmF0IGluc29tbmlhLCB0cnkgbWFzc2FnaW5nIHRoZSBmb2xsb3dpbmcgcHJlc3N1cmUgcG9pbnRzOi4gCkl0IHdhcyB0aGUgb25nb2luZyBpZ25vcmFuY2UgYWJvdXQgdGhpcyBjbGluaWNhbCBlbnRpdHkgdGhhdCBtb3RpdmF0ZWQgdGhlIGZvdW5kZXJzIG9mIHRoaXMgc29jaWV0eSB0byBlc3RhYmxpc2ggYSBmb3JtYWwgb3JnYW5pemF0aW9uLiBPbmUgb2Ygb3VyIGdvYWxzIGlzIGZvciB0aGlzIGVudGl0eSB0byBiZSBhY2NlcHRlZCBpbnRvIHRoZSBnZW5lcmFsIGhlYWRhY2hlIGNsYXNzaWZpY2F0aW9uLCBhbmQgdW50aWwgdGhpcyBoYXBwZW5zLCBsYXJnZSBudW1iZXJzIG9mIHBhdGllbnRzIHdpbGwgY29udGludWUgdG8gc3VmZmVyIHVubmVjZXNzYXJpbHkuIFNlY29uZCBOb3J0aCBBbWVyaWNhbiBDZXJ2aWNvZ2VuaWMgSGVhZGFjaGUgQ29uZmVyZW5jZSB3aWxsIGJlIGhlbGQgaW4gTGFzIFZlZ2FzLCBNYXJjaCAyMiAyMy4gClN0cmV0Y2ggaXQgb3V0LiAKVGhlcmUgYW5vdGhlciBsb2NhbCBzZWFmb29kIHBsYWNlIG15IHBhcmVudHMgbG92ZSBidXQgaSBoYWQgdG8gdGVsbCB0aGVtIGkgY2FuIGdvIGJhY2sgdGhlcmUuIEkgc2FpZCBpIGdvIGFsb25nIGFuZCBnbyB0byB0aGUgaGFwcHkgY29sbGVnZSBtZXhpY2FuIHBsYWNlIHdpdGggdGhlIGJpZyBtYXJnYXJpdGFzIG5leHQgZG9vciBsb2wgYnV0IHRoZSBzZWFmb29kIHBsYWNlIGp1c3QgcmVla3Mgb2YgZmlzaCBhbmQgeW91IGNvbWUgb3V0IHNtZWxsaW5nIGxpa2UgeW91IHJvbGxlZCBpbiBhbGwgdGhvc2UgZGVhZCBmaXNoIGxvbC4uIApEb24gYmUgZGlzYXBwb2ludGVkIHdpdGggeW91cnNlbGY7IHRoYXQgZXhwZXJpZW5jZSB3aWxsIGJlIGluIHRoZSB0b3AgNSBob3R0ZXN0IGV4cGVyaWVuY2VzIGZvciB0aGUgcmVzdCBvZiB5b3VyIGxpZmUsIGluIGFsbCBsaWtlbGlob29kLiAKQXMgZm9yIGJlc3Qgc3dpbSBzcG90LCB0aGVyZSBpcyBhbiBhcmVhIGFib3V0IDEwIG1pbnV0ZXMgd2FsayBub3J0aCBvZiB0aGUgbGFzdCBwYXJraW5nIGFyZWEuIFRoZXJlIGlzIGEgY2xlYXIsIGNvbGQsIHdpZGUgc2hhbGxvdyBwb29sLCB0aGF0IG9wZW5zIHVwIGZyb20gc29tZSBvZiB0aGUgcG90aG9sZXMgdGhlbXNlbHZlcywgd2hlcmUgdGhlIGNsaWZmcyByaXNlIHVwIGFuZCBuYXJyb3csIGFuZCB0aGUgd2F0ZXIgYmVjb21lcyB2ZXJ5IGRlZXAuIFRoZXJlIGlzIGEgd2lkZSwgZmxhdCByb2NrIHRoZXJlIHlvdSBjYW4gZWFzaWx5IHNldHVwIGEgYmVhY2ggYmxhbmtldCBvciB0d28gZm9yIGEgcGljbmljIChpZiBzb21lb25lIGRvZXNuIHNuYWcgaXQgZmlyc3QpLi4gClJpY2sgSm9uZXMsIFIgR3JhbmQgTGVkZ2UsIHdoaWNoIHNvbWUgdmlldyBhcyBhIGNvbXByb21pc2Ugb24gaG93IGNoYXJpdGFibGUgZ2FtaW5nIGlzIHJlZ3VsYXRlZC4gSXQgcGFzc2VkIHRoZSBTZW5hdGUgMzcgMCAxIGJ1dCBoYXMgc3RhbGxlZCBpbiB0aGUgSG91c2UgUmVndWxhdG9yeSBSZWZvcm0gQ29tbWl0dGVlIHNpbmNlIEFwcmlsLiAKTG92ZSAzIFREcyBsZWFkIFN0YW5mb3JkIHBhc3QgTm8uIApJbWFnaW5lIHRoZSBpbnRlbGxlY3R1YWwgYmFua3J1cHRjeSwgdHJ5IHRvIGZhdGhvbSB0aGUgbW9yYWwgZGVwcmF2aXR5LCBvZiBjb25zaWRlcmluZyB3aGF0IE1vaGFtbWFkIGJpbiBTYWxtYW4gYW5kIEphcmVkIEt1c2huZXIgYXJlIGRvaW5nIGluIFNhdWRpIEFyYWJpYSBhbmQgYmV5b25kIGFuICJBcmFiIFNwcmluZyEiIFdoaWNoIG9uZSBpcyBtb3JlIGlnbm9yYW50OiB0aGF0IHlvdSBoYXZlIG5vIGJsYXN0ZWQgY2x1ZSB3aGF0IHRoZSBBcmFiIFNwcmluZyB3YXMsIG9yIHlvdXIgY2FsbGluZyB0aGUgdHJlYWNoZXJvdXMgYXRyb2NpdGllcyBvZiBNb2hhbW1hZCBiaW4gU2FsbWFuIHRoZSBTYXVkaSB2ZXJzaW9uIG9mIEFyYWIgU3ByaW5nPyBDb3VudGxlc3MgYm9va3MsIHBpbGVzIG9mIGxlYXJuZWQgZXNzYXlzIGJ5IEFyYWIgYW5kIG5vbiBBcmFiIHNjaG9sYXJzIGFuZCBjcml0aWNhbCB0aGlua2VycyBoYXZlIGJlZW4gcHJvZHVjZWQgYWJvdXQgdGhlIG1pbnV0ZXN0IGFzcGVjdHMgb2YgdGhlIEFyYWIgcmV2b2x1dGlvbnMuIEluIGFydCwgbGl0ZXJhdHVyZSwgcG9ldHJ5LCBhbmQgc2Nob2xhcnNoaXAgICBpbiBzY2hvbGFybHkgY29uZmVyZW5jZXMsIGFjYWRlbWljIHNlbWluYXJzLCBhbmQgbGVhcm5lZCB2b2x1bWVzIHlvdW5nIGFuZCBvbGRlciBzY2hvbGFycyBoYXZlIGRvbmUgdGhlaXIgYmVzdCB0byBmaWd1cmUgb3V0IHRoZSBzaWduaWZpY2FuY2Ugb2YgdGhlIEFyYWIgU3ByaW5nIGFuZCB0aGVuIGluIGNvbWVzIHRoaXMgcHJvcGFnYW5kYSBvZmZpY2VyIGFuZCBpc3N1ZXMgcGFnZSBhZnRlciBwYWdlIG9mIGEgbm9uc2Vuc2ljYWwgZ2liYmVyaXNoIHRoZSBsaWtlcyBvZiB3aGljaCBzY2FyY2UgYW55b25lIGNhbiBmYXRob20gZXZlbiBpbiB0aGUgInBvc3QgdHJ1dGgiIGFnZSBvZiAiYWx0ZXJuYXRpdmUgZmFjdHMiLgpPdmVydmlldyBmb3IgaWxpa2VjYWtlbW9yCiIzKSAiUmVzaWRlbnRzIGluIGxlc3MgcG9wdWxhdGVkIHBhcnRzIG9mIHRoZSBjb3VudHJ5IGNvbXBsYWluIGFib3V0IHBvd2VyIHBsYW50cyAgIGFuZCBzbW9nICAgYmVpbmcgc2hpZnRlZCB0byB0aGVtLiBUaGUgdHdvIG1vc3QgcG9sbHV0ZWQgY2l0aWVzIGluIENoaW5hIGluIDIwMTggd2VyZSBpbiB0aGUgd2VzdGVybiBYaW5qaWFuZyByZWdpb24sIHdoZXJlIGV0aG5pYyBVaWdodXJzLCBhIG1pbm9yaXR5IGdyb3VwLCBwcmVkb21pbmF0ZS4gClRoZXkgZmluZCBpdCBlYXN5IHRvIGJvbmQgd2l0aCBvdGhlciBndXlzIG92ZXIgZHJpbmtzIG9yIHdhdGNoIGEgbWF0Y2ggdG9nZXRoZXIgd2hpbGUgd29tZW4gYXJlIGxpbWl0ZWQgdG8gc2hvcHBpbmcgb3IgaGF2aW5nIGdvc3NpcCBzZXNzaW9ucyB0b2dldGhlci4gClZpcmdpbmlhIERlbW9jcmF0aWMgU2VuLiBNYXJrIFdhcm5lciBjYWxsZWQgVHJ1bXAncyBjb21tZW50cyAib3V0cmFnZW91cy4iIEluIGhpcyB0d2VldCwgaGUgYWRkZWQ6ICJGZWRlcmFsIGVtcGxveWVlcyBkb24ndCBnbyB0byB3b3JrIHdlYXJpbmcgcmVkIG9yIGJsdWUgamVyc2V5cy4gVGhleSdyZSBwdWJsaWMgc2VydmFudHMuIEFuZCB0aGUgUHJlc2lkZW50IGlzIHRyZWF0aW5nIHRoZW0gbGlrZSBwb2tlciBjaGlwcyBhdCBvbmUgb2YgaGlzIGZhaWxlZCBjYXNpbm9zLiIKVGhlbiB5b3UgbGV0IHRoYXQgbGl0dGxlIHRoaW5nIGRlZmluZSB5b3UgYW5kIHdoZW4gdGhhdCBsaXR0bGUgdGhpbmcgaXMgbW9ja2VkLCB5b3UgZ2V0IG9mZmVuZGVkL2FuZ3J5IGJlY2F1c2UgaXQgZmVlbHMgbGlrZSBhIHBlcnNvbmFsIGF0dGFjay4gClRoZW4sIGluIHRoZSBlYXJseSAxOTAwcywgYSBGcmVuY2ggY291cGxlIHB1cmNoYXNlZCB0aGUgaGVhZCBmcm9tIGFuIGF1Y3Rpb24gaG91c2UuIApIZSBqdXN0IGhhcHBlbmVkIHRvIGhhdmUgdGhlIGJpZ2dlc3QgcG90ZW50aWFsIHZvdGVyIGJhc2UgYW5kIHRoZSBiZXN0IGNhcGFiaWxpdHkgdG8gbWF4aW1pemUgaXQuSSBwZXJzb25hbGx5IHRoaW5rIHRoZSAkMTBtIHByaWNldGFnIGFuZCB0aGUgc2xldyBvZiBjb3VudGVyc3VpdHMgY29uZmlybXMgVExGIGlzIGp1c3QgdHJ5aW5nIHRvIGludGltaWRhdGUgSGFyaXRoIGludG8gYmFja2luZyBkb3duLiBUaGV5IGtub3cgdGhleSBub3QgZ29pbmcgdG8gaG9sZCB3YXRlciBpbiBjb3VydCwgYnV0IHRoZXkgbGlrZWx5IGhvcGluZyB0aGUgbGVnYWwgaG9vcHMgSGFyaXRoIG5vdyBoYXMgdG8gZ28gdGhyb3VnaCBhbmQgdGhlIGJhZCBwcmVzcyBoZSBnb2luZyB0byBnZXQgaW4gdGhlIHByb2Nlc3MgKGEgTmFqaWIgbmFtZWRyb3AgaXNuIGV4YWN0bHkgcHJldHR5IGhvdCByaWdodCBub3cpIGlzIGVub3VnaCB0byBnZXQgaGltIHRvIHNpdCBkb3duLiAKU29tZXRpbWVzIGhlIGRvZXMgYW5kIHlvdSBoYXZlIG5vIHByb2JsZW1zIGZvciB5ZWFycyBjcm9zc2luZyB0aGUgYm9yZGVyIHdpdGggeW91IGJhbWJvbyBmbHV0ZXMsIGFuZCB0aGVuIHNvbWV0aW1lcyBoZSBndWVzc2VzIGluY29ycmVjdGx5LCBhbmQgdGhpbmtzIHRoZSBiYW1ib28gbG9va2VkIGZyZXNobHkgaGFydmVzdGVkIGZvciB3aGF0ZXZlciByZWFzb24sIGFuZCB5b3UgbG9zZSB5b3VyIGJhbWJvbyBmbHV0ZXMuLiAKRG9uIG92ZXIgaW50ZWxsZWN0dWFsaXplIG1lZGl0YXRpb24uIFRoZSBzaW1wbGUgYWN0IG9mIGRlZXAgYnJlYXRoaW5nIChsb25nIGRlZXAgaW5oYWxlIHRocm91Z2ggdGhlIG5vc2UsIGxvbmcgZXhoYWxlIHRocm91Z2ggdGhlIG1vdXRoLCByZXBlYXQpIGhhcyBhIG1lZGljYWxseSBwcm92ZW4gcGh5c2lvbG9naWNhbCBlZmZlY3Qgb24geW91ciBwYXJhc3ltcGF0aGV0aWMgc3lzdGVtLiAKRGV0c2FtbWEgZ2xsZXIgZnIgZW4gR1BTIHRyYWNraW5nIGVuaGV0IHNvbSB2ZXJhbGx0IHNwcmFyIGRpbiBtYWtlcyBiaWwgZ3IuIApEb2VzIGl0IGhhdmUgdG8gZG8gd2l0aCBub3QgaGF2aW5nIGVub3VnaCBoaWdoIGVxdWl0eSBibHVmZnMgaWYgViB0dXJuZWQgYW4gQT8gSSdtIGtpbmQgb2YgbG9zdC4uIApEdXJpbmcgdGhlIEFyY2hhaWMgUGVyaW9kIHRoZSBmaXJzdCBrbm93biBtdXJhbHMgd2VyZSBhbHNvIGNyZWF0ZWQsIHByb2JhYmx5IGluZmx1ZW5jZWQgYnkgdHJhZGl0aW9ucyBvZiB0aGUgR3JlZWtzJyBuZWlnaGJvdXJzIGluIEFuYXRvbGlhLiAKTWFyZ2FyZXQgd2lsbCBhbHNvIGJlIGdyZWF0bHkgbWlzc2VkIGJ5IGhlciBsb25nIHRpbWUgcG9rZXIgYnVkZGllcy4gClRoZSBkb2cgdHJhY2sgaXMgbGVzcyB3ZWxsIGxvdmVkLiBUaGUgcmFpbCB0aGF0IHRoZSBsdXJlIGEgYmlnLCB3aGl0ZSBzdHVmZmVkIGJvbmUgc2hvb3RzIGFyb3VuZCBvbiBpcyBhYm91dCAzNSB5ZWFycyBvbGQsIHBhcmsgcGVvcGxlIHNheSwgYW5kIHRoZSBkYXkgYSByZXBvcnRlciB2aXNpdGVkIGEgV2VkbmVzZGF5LCB0aGUgb25seSBkYXkgYWZ0ZXJub29uIHJhY2VzIGFyZSBydW4gYSBjcmV3IHdhcyBhdCB3b3JrIHdlbGRpbmcgYW5kIGhhbW1lcmluZyBvbiBhIHByb2JsZW0gc3BvdC4gCldoZW4geW91IGFyZSByZWFkeSB0byBwbGF5LCBqdXN0IHBsYWNlIHRoZSBwb3J0YWJsZSBwb2tlciB0YWJsZSB0b3Agb250byB0aGUgZGluaW5nIHRhYmxlIGFuZCBpdCdzIHRpbWUgdG8gcGxheS4uIApHbyBhdCA0QU0gd2hlbiBzdHJhZ2dsZXJzIGNvbWUgdGhydSBmcm9tIGJyb2tlbiBob21lIGdhbWVzIHdobyBzdGlsbCB3YW5uYSBrZWVwIHRoZSBwYXJ0eSBhaW4ndCBvdmVyIGdyaW5kLiAKU2hlIGFza2VkIGZvciBwYXltZW50LCBhbmQgaGUgaGFuZGVkIG92ZXIgJDUwIGZvciBhbiBob3VyIG1hc3NhZ2UuIApUaGUgZGF5IHRvIGRheSBhY2hpZXZlbWVudHMgdGhlIGtpbmQgdGhhdCBGaW5hbmNlIE1pbmlzdGVyIFByYW5hYiBNdWtoZXJqZWUgc3BlY2lhbGlzZXMgaW4gZG8gbm90IGhvbGQgb3ZlcnJpZGluZyBpbnRlcmVzdC4gCiJBbmQgSSBzYWlkLCAnV2VsbCwgd2hlbiBhbSBJIGdvbm5hIHNlZSB5b3UgYWdhaW4/JyBBbmQgaGUgc2FpZCwgJ0kgZG9uJ3Qga25vdy4gSSdsbCBiZSBpbiB0b3VjaC4nICJTaG9lIHByaW50cyBzZWNyZXRzLiAKQWxtb3N0IGFzIGlmIHZpYWdyYSBjb3VsZCBiZSBkYW5nZXJvdXMgaWYgY29tYmluZWQgd2l0aCB0aGUgd3JvbmcgbWVkaWNpbmUgb3IganVzdCB1c2VkIGJ5IGEgcGVyc29uIHdobyBoYXZlIGNlcnRhaW4gY29uZGl0aW9ucyBsaWtlIGhpZ2ggYmxvb2QgcHJlc3N1cmUgKHdoaWNoIHRoZXkgb3VnaHQgbm90IGtub3cpLi4gCldhcyBvbiB0aGUgd2F5IHRvIGEgc3RvcmUgbWFuYWdlciBqb2IgaW4gcmV0YWlsLCB3aGljaCB3b3VsZCBoYXZlIHBhaWQgdmVyeSB3ZWxsLCBidXQgdGhlIGhvdXJzIHdlcmUga2lsbGluZyBtZS4gCkQgYW5kIFRlc3Rvc3Rlcm9uZSBMZXZlbHMgaW4gTWVuCiJJZiBvbmUgbXkgZnJpZW5kcyB3ZXJlIGF0IG15IGV4ZXMgaG91c2UsIHRoZSBmYXRoZXIgb2YgbXkgY2hpbGRyZW4iIGFuZCBoZXIgc2F5aW5nICJJIGtub3cgZm9yIGEgZmFjdCBJJ20gbm90IHRoZSByZWFzb24gdGhlaXIgZmFtaWx5IGlzIGJyb2tlbiB1cCIuIFNlZW1zIGxpa2UgS2hsb2UgaXMganVzdCByZWFsbHkgdXBzZXQgYW5kIGVtYmFycmFzc2VkIGJlY2F1c2UgZXZlcnl0aGluZyBpcyBzbyBwdWJsaWMgd2hlbiB0aGUgcmVsYXRpb25zaGlwIHdhcyBkb29tZWQuIE5vdCB0byBtZW50aW9uIHRoZSBmYWN0IHRoYXQgVHJpc3RhbiBoYXMgaGlzIG93biBwbGFjZSBpbiBMQT8gV291bGRuJ3QgdGhleSBiZSBsaXZpbmcgdG9nZXRoZXIgdGhlcmUgaWYgdGhleSBhbHNvIGhhdmUgYSBwbGFjZSBpbiBDbGV2ZWxhbmQgdG9nZXRoZXIgYWxyZWFkeT8gSG9uZXN0bHkgaGUgaGFzIHplcm8gcmVzcGVjdCBmb3IgdGhlaXIgZmFtaWx5IHRoZWlyIGRhdWdodGVyIGFuZCB0aGVpciByZWxhdGlvbnNoaXAuCkkgYWJzb2x1dGVseSByZWdyZXR0ZWQgbm90IDMgYmV0dGluZyBmbG9wIHRoZSBzZWNvbmQgSSBjaG9zZSB0byBmbGF0LCBpZiBub3RoaW5nIGVsc2UgdG8gZ2V0IGEgYmV0dGVyIGlkZWEgd2hlcmUgSSB3YXMuIEkga25ldyBpdCB3YXMgYSBtaXN0YWtlIHRoZSBzZWNvbmQgSSBkaWQuIEkgZmlndXJlZCBhdCBiZXN0IEknbSBjaG9wcGluZywgYXQgd29yc3QgaGUgaGFzIFE4LCBLUSAoYXMgYWdncmVzc2l2ZSBhcyBoZSB3YXMgS1EgY291bGQvc2hvdWxkIGhhdmUgYmVlbiBhIDNiZXQgcHJlPykgb3Igc29tZSBjb21ibyBvZiBhIHBhaXIvdHdvIHBhaXIgdGhhdCBiYWNrZWQgaW50byB0aGUgZmx1c2guIApJZiBhbiBvcHBvbmVudCBwbGF5cyBldmVyeSBoYW5kIG9yIGFsbW9zdCBldmVyeSBoYW5kIHRoZXkgaGF2ZSBhIHZlcnkgd2lkZSByYW5nZSwgd2hpY2ggbWVhbnMgdGhleSBjYW4gaG9sZCBhbG1vc3QgYW55IHR3byBjYXJkcy4uIApQcm9tb3Rpb25zIGFyZSBhdmFpbGVkIHRvIHBsYXllcnMgb24gYSB3ZWVrbHkgYmFzaXMuIApEREIgTmV3IFlvcmsgaXMgd29ya2luZyB3aXRoIENvdHRvbiBJbmNvcnBvcmF0ZWQgYW5kIGNsb3RoaW5nIGJyYW5kIGFuZCByZXRhaWxlciBPcGVuaW5nIENlcmVtb255IG9uIGEgbmV3IHZpZGVvIGNlbGVicmF0aW5nIGNvdHRvbiBUIHNoaXJ0cyBhcyB0aGUgImNhbnZhcyBvZiBzZWxmIGV4cHJlc3Npb24uIiBUaGUgY290dG9uIGJyYW5kIGFuZCBjbG90aGluZyBzdG9yZSBhbHNvIGNvbGxhYm9yYXRlZCBvbiBhIGxpbWl0ZWQgZWRpdGlvbiBzaGlydCB3aXRoIGEgYmxhY2sgYm94IG9uIHRoZSBmcm9udCB0byBhbGxvdyBmb3IgY3VzdG9taXphdGlvbi4gCkEga2lkIHJhaXNlZCB3aXRoIHRoZSBtZW50YWxpdHkgdGhhdCBhbmltYWxzIGRvbiBoYXZlIHZhbHVlIG9yIGhhcyBzZWVuIGV4YW1wbGVzIG9mIHZpb2xlbmNlIHRvd2FyZHMgYW5pbWFscyBtaWdodCBub3QgaGF2ZSB0aGUgc2FtZSB0aHJlc2hvbGQgZm9yIHRoZSBhbmltYWwgcmVhY3Rpb24gYXMgdGhlIGZpcnN0IGtpZC4gCjAwMTBBbm9uICAzIHBvaW50cyAgc3VibWl0dGVkIDExIG1vbnRocyBhZ28KQXByaWw6IEEgZmVkZXJhbCBqdWRnZSBydWxlcyB0aGF0IFJvYmVydHMgY2Fubm90IGpvaW4gdGhlIGZlZGVyYWwgQ3JpbWUgVmljdGltcycgUmlnaHRzIEFjdCBsYXdzdWl0IGFuZCB0aGF0IGhlciBhZmZpZGF2aXQgICBhY2N1c2luZyBQcmluY2UgQW5kcmV3IGFuZCBEZXJzaG93aXR6IG9mIGhhdmluZyBzZXggd2l0aCBoZXIgd2hlbiBzaGUgd2FzIHVuZGVyYWdlICAgYmUgc3RyaWNrZW4gZnJvbSB0aGUgY2FzZS4gCkkgZ3Vlc3MgYnkgaXRzZWxmIGl0J3Mgd2hhdGV2ZXIsIHlvdSBkbyB5b3UgYXMgbG9uZyBhcyBub2JvZHkgZ2V0cyBodXJ0IChsaWtlIHlvdXIgaHVzYmFuZCwgbWF5YmUpLiAKT2gsIGFuZCB0aHJvd3MgZnVybml0dXJlIG9mZiBoaXMgYmFsY29ueS4gSGUgZGlkIGEgZ3JlYXQgam9iIGxhc3QgeWVhciBmb3IgdXMsIGFuZCBJIGRvbiBibGFtZSBoaW0gZm9yIHdhbnRpbmcgdG8gY2FzaCBpbiBvbmUgbGFzdCB0aW1lLiAKQ2FuIG5lZ290aWF0ZSB3aXRoIHNjaWVuY2UsIHNhaWQgRHIuIFNpdmFuIEthcnRoYSwgc2VuaW9yIHNjaWVudGlzdCBhdCB0aGUgU3RvY2tob2xtIEVudmlyb25tZW50IEluc3RpdHV0ZS4gY2FuIG5lZ290aWF0ZSB3aXRoIHRoZSBFYXJ0aCBuYXR1cmFsIGxpbWl0cy4gQXQgdGhlIG1vbWVudCBlbWlzc2lvbiByZWR1Y3Rpb24gcGxlZGdlcyB0YWtlIHVzIGZhciBvdmVyIHRob3NlIGxpbWl0cy4gVGhpcyBkYXRhIHNob3dzIHRoYXQgdGhlcmUgaXMgYSBodWdlIGdhcCBiZXR3ZWVuIHdoYXQgaXMgbmVlZGVkIHRvIGJlIGRvbmUgYW5kIHdoYXQgaXMgYmVpbmcgZG9uZS4KVGhlIHByb3Bvc2FsIHdvdWxkIHJlcXVpcmUgYSBsZXR0ZXIgZnJvbSBsb2NhbCBnb3Zlcm5tZW50cyBwcm9taXNpbmcgdGhhdCB6b25pbmcgZm9yIHBhcmkgbXV0dWVsIGFjdGl2aXRpZXMgIndvdWxkIGJlIHZpZXdlZCBmYXZvcmFibHkuIiBSZWd1bGF0b3JzLCB3aG8gb25jZSByZXF1aXJlZCBvbmx5IGEgbGV0dGVyIGZyb20gYSBsYW5kIHVzZSBhdHRvcm5leSBzYXlpbmcgem9uaW5nIHdhcyBhdmFpbGFibGUsIGxhdGVyIGludGVycHJldGVkIHRoZSBzdGF0dXRlcyB0byBtZWFuIHRoYXQgcHJpb3Igem9uaW5nIGlzIHJlcXVpcmVkIGJlZm9yZSBhIHBlcm1pdCBpcyBpc3N1ZWQuLiAKS2FzdWtvc3U0ICAgNSB5ZWFycyBhY2NvdW50IGFnZS4gMjUwICAgNTAwIGNvbW1lbnQga2FybWEuCjMuICJTdXBwbGVtZW50YXRpb24gd2l0aCBuIDMgUFVGQXMgZm9yIDMgNCBtb250aHMgcmVkdWNlcyBwYXRpZW50IHJlcG9ydGVkIGpvaW50IHBhaW4gaW50ZW5zaXR5LCBtaW51dGVzIG9mIG1vcm5pbmcgc3RpZmZuZXNzLCBudW1iZXIgb2YgcGFpbmZ1bCBhbmQvb3IgdGVuZGVyIGpvaW50cywgYW5kIE5TQUlEIGNvbnN1bXB0aW9uLiIKRm91bmRlZCBpbiAyMDAyLCBNYXNzYWdlIEVudnkgaGFzIG1vcmUgdGhhbiA4ODAgbG9jYXRpb25zIGluIDQ3IHN0YXRlcy4gVGhyb3VnaCBpdHMgbmF0aW9uYWwgcGFydG5lcnNoaXAgd2l0aCB0aGUgQXJ0aHJpdGlzIEZvdW5kYXRpb24sIE1hc3NhZ2UgRW52eSBoYXMgcmFpc2VkIG1vcmUgdGhhbiAkMSBtaWxsaW9uIGluIHR3bywgb25lIGRheSBIZWFsaW5nIEhhbmRzIGZvciBBcnRocml0aXMgZXZlbnRzLiAKU2hpem54ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KVGhlIGN1cmUgcmF0ZXMgYXJlIG5vdCBiYXNlZCBvZmYgb2Ygc3ltcHRvbSBpbXByb3ZlbWVudC4gVGhleSBhcmUgYmFzZWQgb2ZmIG9mIG5lZ2F0aXZlIHBhdGhvZ2VuIHRlc3RpbmcuIApJIHdpbGwgc2hvdyBZb3UgMiB3YXlzIHRvIGdldCBmcmVlIHBva2VyIG1vbmV5IG9ubGluZS4gCiAzIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvSXQgYmVzdCBub3QgdG8gdmlldyBoaW0gYXMgYSB0YW5rLCBob25lc3RseS4gVGhlIGphdmVsaW5zIHNlZW0gdG8gYmUgaW5zcGlyZWQgYnkgY2VydGFpbiBhcmNoZXR5cGVzIGJ1dCBub3QgZW50aXJlbHkgYnVpbHQgdG8gZW11bGF0ZSB0aGVtLiBUaGluayBvZiB0aGUgY29sb3NzdXMgKGF0IGxlYXN0IGluIHRoaXMgZGVtbywgd2hvIGtub3dzIGFib3V0IHRoZSBmdWxsIGdhbWUpIGFzIG1vcmUgb2YgYSBoaXQgYW5kIHJ1bi4gCk1vbGx5IE9seW1waWMgaG9wZXMgYXJlIHN3aWZ0bHkgZGFzaGVkIGluIHRoZSBwcmUgY3JlZGl0cyBzZXF1ZW5jZSB3aGVuLCBpbiBhIGNydWVsIHR3aXN0IG9mIGZhdGUsIHNoZSBsb3NlcyBvbmUgb2YgaGVyIHNraXMgaW4gbWlkIGZsaWdodC4gQnV0IHRoZSBmaWxtIGlzIG1vcmUgY29uY2VybmVkIHdpdGggQmxvb20gc2Vjb25kLCBtb3JlIGZhbW91cyBmYWxsLCB3aGVuIHNoZSBhcnJlc3RlZCAxMiB5ZWFycyBsYXRlciBieSB0aGUgRkJJLgpUaGUgcGF5b3V0IGZvciBibGFja2phY2sgZGVwZW5kcyBvbiBtYW55IHNtYWxsIHZhcmlhdGlvbnMgb2YgdGhlIHJ1bGUuIFNvbWUgb2YgdGhlc2UgcnVsZXMgdGhhdCBzaG91bGQgYmUgZ2l2ZW4gY29uY2VybiBhcmU6IGhvdyBtYW55IGRlY2tzIG9mIGNhcmRzIGFyZSBiZWluZyB1c2VkPyBDYW4gYSBwbGF5ZXIgZG91YmxlIGFuZCBzcGxpdCBiZXRzIG9uIGZldyBoYW5kcz8gRG9lcyB0aGUgZGVhbGVyIHBlYWsgZm9yIGJsYWNramFjayBiZWZvcmUgdGhlIHBsYXllcnM/IENhbiB0aGUgcGxheWVyIHN0aWxsIHN1cnJlbmRlciB3aGVuIHRoZSBkZWFsZXIgaGFzIGFuIGFjZSBmb3IgYW4gdXAgY2FyZD8uIApCb2JhaW4gYW5kIEphc29uIEQuIApJIHNob3VsZCBhbHNvIGFkZCB0aGF0IG1hbnkgb2YgdGhlc2UgQm9vbWVycyBhY3RlZCBpbiB3YXlzIHRoYXQgYXJlIHByZXR0eSB1bmRlcnN0YW5kYWJsZSwgZ2l2ZW4gdGhlIGNvbnRleHQuIApWZWdhcyBsb2NhbCBoZXJlLiBJIHdvdWxkbiBjYXJyeSB0aGF0IG11Y2ggb24gYSBmbGlnaHQsIGJ1dCBwZW9wbGUgZG8uIEp1c3Qgd2l0aGRyYXcgZnJvbSBhIGJhbmsgd2hlbiB5b3UgZ2V0IGhlcmUgb3Igd2lyZSBpdCB0byB0aGUgY2FzaW5vIGFoZWFkIG9mIHRpbWUuIEkgZG9uIGNhcnJ5IGxhcmdlIHN1bXMgb2YgY2FzaCBvdmVyICQ1ayBpbiBteSBwb2NrZXQuIElmIHlvdSBhcmUgZ29pbmcgdG8gYmUgcGxheWluZyBjYXNoIGdhbWVzLCB0aGVuIGp1c3Qga2VlcCB0aGUgY2hpcHMgdW50aWwgeW91IGxlYXZlIHRvd24uIEVhc3kgdG8gY29uY2VhbCBhbmQgY2FycnkgYSAkMWsgb3IgJDVrIGNhc2ggY2hpcHMgb24geW91IHRoYW4gY2FzaC4gUGVvcGxlIGRvIGdldCByb2JiZWQsIERveWxlIEJydW5zb24gaGFzIGJlZW4gcm9iYmVkIG51bWVyb3VzIHRpbWVzIG92ZXIgdGhlIHllYXJzLiBKdXN0IGRvbiBiZSBzdHVwaWQuIEZvciBleGFtcGxlLCBJIHR5cGljYWxseSBwbGF5IGF0IHRoZSBCZWxsYWdpbyBkdXJpbmcgdGhlIFdTT1AuIExhc3QgeWVhciB3ZSB3ZXJlIHBsYXlpbmcgNS8xMCBhbmQgYSBraWQgc2l0cyBkb3duIG5leHQgdG8gbWUgd2l0aCBhIGJhY2twYWNrIGFuZCBwdWxscyBvdXQgJDE1MDAgd2hpY2ggaXMgdGhlIG1heCBidXkgaW4gYXQgNS8xMCBpbiB0aGUgQmVsbGFnaW8uIEkgY291bGRuIHNlZSBob3cgbXVjaCBjYXNoIGhlIGhhZCBpbiB0aGVyZSBhdCB0aGUgdGltZSwgYnV0IGFmdGVyIGF3aGlsZSBoZSBkb25rcyBvZmYgaGlzIGZpcnN0IGJ1eSBpbiBhbmQgdGhlbiByZWJ1eXMuIFRoaXMgdGltZSBoZSBvcGVucyB0aGUgYmFjayBwYWNrIGFuZCBJIGNhbiBjbGVhcmx5IHNlZSBoZSBoYXMgYSBzaGl0IGxvYWQgb2YgY2FzaCBpbiB0aGVyZS4gQWZ0ZXIgdGFsa2luZyB3aXRoIGhpbSBmb3IgYXdoaWxlLCBoZSBhcHBhcmVudGx5IGdvdCBrbm9ja2VkIG91dCBvZiB0aGUgV1NPUCBhbmQgd29uIGxpa2UgJDgwayB3aGljaCBoZSBoYXMgYWxsIGluIHRoaXMgYmFjayBwYWNrLiBOZXZlciBkbyB0aGF0LiBVYmVyIGlzIGdyZWF0IGFuZCB5b3UgYmUgZmluZSB3aXRoIGp1c3QgdWJlcmluZy4gQWxsIHBva2VyIHJvb21zIHdpbGwgYmUgYnVzeSBkdXJpbmcgV1NPUC4gSXQgcmVhbGx5IGRlcGVuZHMgb24gdGhlIHN0YWtlcyB5b3Ugd2FudCB0byBwbGF5LiBGb3IgJDEvJDIgdG8gJDIvJDUgdGhlbiBhbnl3aGVyZSBpcyBvay4gRm9yICQ1LyQxMCBhbmQgYWJvdmUsIEJlbGxhZ2lvLCBBcmlhIGFuZCBXeW5uIHJvb21zIGhhdmUgdGhlIGJlc3QgZ2FtZXMuIE1vc3Qgb3RoZXIgcGxhY2VzIGFyZSBsdWNreSBpZiB0aGV5IGhhdmUgZ2FtZXMgaGlnaGVyIHRoYW4gJDIvJDUgcnVubmluZy4KUGxhY2UgYWxsIGJldHMgaW4gZnJvbnQgb2YgeW91LCBhbmQgbGV0IHRoZSBkZWFsZXIgcHVsbCB0aGVtIGludG8gdGhlIHBvdC4uIApJbCBmYXV0IGRvbmMgZmFpcmUgYXR0ZW50aW9uIGRhbnMgbCd1dGlsaXNhdGlvbiBkZXMgdGVybWVzIHV0aWxpc3MuIApEZXNwaXRlIHJlY29yZCBsZXZlbHMgb2Ygc3RpbXVsYXRpb24gdGhhdCBleHBsb2RlZCBnb3Zlcm5tZW50IHNwZW5kaW5nIHRvIDI1IHBlcmNlbnQgb2YgR0RQICh1cCBmcm9tIGEgNjAgeWVhciAxOCBwZXJjZW50IGF2ZXJhZ2UpIGFuZCBmb3VyIGNvbnNlY3V0aXZlIHllYXJzIG9mIHRyaWxsaW9uIGRvbGxhciBkZWZpY2l0cywgYW4gQXNzb2NpYXRlZCBQcmVzcyBzdHVkeSBjb25jbHVkZWQgdGhhdCB0aGlzIGlzIGZlZWJsZXN0IGVjb25vbWljIHJlY292ZXJ5IHNpbmNlIHRoZSBHcmVhdCBEZXByZXNzaW9uLiBQZW9wbGUgd2hvIGhhdmUgam9icyBhcmUgaHVydGluZzogVGhlaXIgcGF5Y2hlY2tzIGhhdmUgZmFsbGVuIGJlaGluZCBpbmZsYXRpb24uIENvbnNlcXVlbnRseSwgaW5jb21lIGluZXF1YWxpdHkgaGFzIG1hdGVyaWFsbHkgd29yc2VuZWQsIGFuZCBhcyBWaWNlIFByZXNpZGVudCBKb2UgQmlkZW4gbm90ZWQgcmVjZW50bHksIG1pZGRsZSBjbGFzcyBoYXMgYmVlbiBidXJpZWQgdGhlIGxhc3QgZm91ciB5ZWFycy4gTmV2ZXIgYmVmb3JlIGhhdmUgQW1lcmljYW5zIHN1ZmZlcmVkIHN1Y2ggcG9vciBwcm9zcGVjdHMgbm9yIHNvdWdodCBzdWNoIHJlZnVnZSBpbiBzYWZldHkgbmV0IHByb2dyYW1zLiBXaGVuIGNvdW50aW5nIHRoZSBtaWxsaW9ucyBvZiBkaXNjb3VyYWdlZCBBbWVyaWNhbnMgbm8gbG9uZ2VyIGluIHRoZSBsYWJvciBmb3JjZSwgdHJ1ZSB1bmVtcGxveW1lbnQgaXMgMTQuNyBwZXJjZW50LiBNZWFud2hpbGUsIG1lZGlhbiBob3VzZWhvbGQgaW5jb21lIGhhcyBkcm9wcGVkIG5lYXJseSA1IHBlcmNlbnQgYW1pZCBleHBsb2RpbmcgZ2FzIGFuZCBmb29kIHByaWNlcy4gTm90IHN1cnByaXNpbmdseSwgYSByZWNvcmQgbnVtYmVyIG9mIEFtZXJpY2FucyBub3cgY2xhaW0gZmVkZXJhbCBkaXNhYmlsaXR5IGNoZWNrcyBhbmQgZm9vZCBzdGFtcHMsIHVwIG5lYXJseSAyMCBhbmQgNDQgcGVyY2VudCwgcmVzcGVjdGl2ZWx5LgpUaGlzIGdvZXMgaGFuZCBpbiBoYW5kIHdpdGggdGhlIHByZXZpb3VzIGNvbW1lbnQ6IHJlY29nbml6ZSB0aGF0IGJlaW5nIGhpZ2hseSBzZW5zaXRpdmUgaXMgYSBzcGVjaWFsIHRyYWl0IGFuZCBjYW4gYmUgYSBzdXBlcnBvd2VyISBXZSBoYXZlIHRoZSBhYmlsaXR5IHRvIG1ha2UgZ3JlYXQgY2hhbmdlcyBpbiB0aGUgd29ybGQuClVuZGVyIGFuIGlkZWFsaXN0aWMgc2l0dWF0aW9uIHRoZSB3b3JrZXJzIHdvdWxkIHVuaXZlcnNhbGx5IGRvIGFsbCBvZiB0aGF0IHRoZW1zZWx2ZXMuIApJIGhhdGUgY2x1dHRlciBhbmQgSSdtIG5vdCBjb25jZXJuZWQgYWJvdXQgbXkgcHJpdmFjeSBiZWNhdXNlIGFsbCBteSBiaWxscy9zdGF0ZW1lbnRzIGFyZSBlbGVjdHJvbmljIGFueXdheS4gQXQgdGhpcyBwb2ludCBpdCdzIG1haW5seSBub25wcm9maXRzL05HT3MgYmVnZ2luZyBmb3IgbW9yZSBtb25leS4gQnV0IEkgYWxzbyB1c2UgaXQgZm9yIG15IHByb2Zlc3Npb25hbCBzdHVmZi4uIApJIGFsc28gdGhpbmsgdGhlaXIgc3RyYXRlZ3kgb2YgcHJlIG9yZGVyLCByZWxlYXNlLCBvdXQgb2Ygc3RvY2ssIHJlcGVhdCBoYXMgYWRkZWQgdG8gdGhlaXIgc3VjY2Vzcy4gS25vd2luZyB0aGF0IEkgY2FuIG9ubHkgZ2V0IGFuIEV4cGVyaW1lbnQgZGVzaWduIHN3ZWF0c2hpcnQgYXQgY2VydGFpbiB0aW1lcyBhZGRzIGFuIGluY2VudGl2ZSB0byBnZXR0aW5nIGluIG9uIHRoZSBkZWFsLCBjcmVhdGluZyBhIGZlYXIgb2YgbWlzc2luZyBvdXQgdGhzdCBmdWVscyBteSBydXNoIHRvIHB1cmNoYXNlLiBJdCBvYnZpb3VzbHkgaW4gcGFydCBhIHNpbXBsZSBwcm9kdWN0IG9mIHRoZSB3YXkgdGhleSBmdWxmaWxsIG9yZGVycywgYnV0IGl0IHdvcmtzIG91dCB0byBiZWluZyBhIGNsZXZlciBtYXJrZXRpbmcgc3RyYXRlZ3kgYXMgd2VsbC4uIApBbmQgcnVuIDUgbWlsZXMuIApUaGUgb3RoZXIgdmljdGltcyBvZiB0aGUgc2NoZW1lIHdlcmUgaWRlbnRpZmllZCBpbiBjb3VydCBkb2N1bWVudHMgb25seSBieSB0aGVpciBpbml0aWFscy4gTm9uZSBvZiB0aGUgdmljdGltcyBtYWRlIHRoZSBwYXltZW50cyB0byB0aGUgZXh0b3J0aW9uaXN0cywgcHJvc2VjdXRvcnMgc2FpZC4gCkRhcyBrbGVpbmUgV2VibWFnYXppbgpDQkMgaXNuIHlldCByZWFkeSB0byBzYXkgd2hvIHdpbGwgYmUgdGFraW5nIHRoZSBkcmFnb25zIGNoYWlycyBpbiBTZWFzb24gMTAsIGFsdGhvdWdoIHRhcGluZyBiZWdpbnMgaW4gYSBmZXcgd2Vla3MuIApJIGNvdWxkbiB1bmRlcnN0YW5kIHdoeSBldmVyeSBjb3VuY2lsbG9yIHdobyBvcHBvc2VkIHRoZSBwbGFuIG9mZmVyZWQgbm8gYWx0ZXJuYXRpdmVzLiAKRGVjaWRlZCB0byB0YWtlIG15IHNwYXJlIGNhc2ggYW5kIHBsYXkgc29tZSBsaXZlIDEvMiB0aGlzIHdlZWtlbmQuIFdlbnQgVGh1cnNkYXksIEZyaWRheSwgYW5kIFNhdHVyZGF5LCBib29rZWQgdGhyZWUgd2lubmluZyBzZXNzaW9ucy4gSSBoYWQgYSBjb3VwbGUgbHVja3kgcnVub3V0cyBhbmQgc2ljayBoZXJvIGNhbGxzLCBidXQgaXQgd2FzIG1vc3RseSBqdXN0IHZhbHVlIGJldHRpbmcgc3Ryb25nIGhhbmRzIGFuZCBnZXR0aW5nIHBhaWQgb2ZmIGJ5IGZpc2guIEkga25vdyB0aGlzIGlzIGp1c3QgdmFyaWFuY2UgYnV0IEkgc3RhcnRpbmcgdG8gbGlrZSBsaXZlIHBva2VyIGEgbG90IG1vcmUgdGhhbiBvbmxpbmUuIChOb3QgYmVpbmcgYWxsb3dlZCB0byBnZXQgc3RvbmVkIHdoaWxlIHBsYXlpbmcgaXMgYXBwYXJlbnRseSBtYXNzaXZlbHkgK0VWKQpMYXN0IHBlcnNvbiBJIHNhdyBkb2luZyB0aGUgMjQgYmVlciBjaGFsbGVuZ2Ugd2FzIHRocm93aW5nIGxpdCBjaWdhcmV0dGUgYnV0dHMgb24gdGhlIHRyYWlsLiBCbGFja2VkIG91dC4gRmFsbGluZyBpbnRvIHJvY2tzLiBXaGVuIGkgcGFzc2VkIGhpbS4gSGUgZ290IGFsbCBjb21wZXRpdGl2ZSBhbmQgdGhlbiBJIGhhZCB0byBkZWFsIHdpdGggaGlzIGRydW5rIGFzcyBmb3IgYW4gaG91ci4gSXRzIGtpbmRhIGhhcmQgdG8gZ2V0IGF3YXkgZnJvbSBzb21lb25lIHdoZW4geW91ciBvbiBhIHRyYWlsIGFuZCB0aGV5cmUgc28gZHJ1bmsgdGhleXJlIHN0dW1ibGluZyB0byBrZWVwIHVwIHNvIHlvdSBkb250ICJvdXRoaWtlIiB0aGVtLgpBbGwgdGhlIGNvbnRyb2xsZWQgc3R1ZGllcyBpbiBuZW9uYXRlcyBjb21wYXJlZCBNVCB0byBzdGFuZGFyZCBudXJzaW5nIGFuZCBtZWRpY2FsIGNhcmUuUGFydGljaXBhbnRzIGluY2x1ZGVkIGluIHRoZSByZXZpZXdBbGwgc3R1ZGllcyBpbiBjaGlsZHJlbiB3ZXJlIGVsaWdpYmxlIGZvciBpbmNsdXNpb24uIApBbHNvIGlmIHlvdSBldmVyIGJlZW4gdG8gQmVybGluLCB0aGF0IG5vdCBjb3VudCBhcyBydWRlLCBidXQgYXMgYSBoZWxwZnVsIHBpZWNlIG9mIGluZm9ybWF0aW9uLiBOb3JtYWwgYW5zd2VyIHdvdWxkIGhhdmUgYmVlbiBzb21ldGhpbmcgbGlrZSAiYXJlIHlhIGhlcmUgdG8gZHJpbmsgb3IgdG8gd2FzaCB5b3VyIGhhbmRzL2Fyc2UvW2luc2VydCBib2R5cGFydF0/IgpUaGUgYmFsbCBpcyBpbiB0aGUgVHJ1bXAgdGVhbSdzIGNvdXJ0LCB0d28gYWRkaXRpb25hbCBzb3VyY2VzIHRvbGQgQ05OLiBUaG9zZSBzb3VyY2VzIHdvdWxkIG5vdCBzYXkgaG93IGxvbmcgdGhlIFRydW1wIHRlYW0ncyBsYXd5ZXJzIHdvdWxkIHRha2UgdG8gcmVzcG9uZC4KQSBtb3JlIGludGVyZXN0aW5nIHF1ZXN0aW9uIHdvdWxkIGJlICJ3aGF0IHdvdWxkIHRoZSBwcm9iYWJpbGl0eSBiZSBvZiBBTlkgb2YgdGhvc2UgMTMgY2FyZHMgYmVpbmcgYW4gQWNlPyIgQW55IHRha2Vycz8gKEZ1bGwgQW5zd2VyKS4gCkJpZyBwb2NrZXQgcGFpcnMgZ2V0IGhhcmRlciB0byBwbGF5LiAKU2hlZmZpZWxkIGFzIGEgcHJldHR5IGNvb2wgbGl0dGxlIHNjZW5lIHdpdGggMyBwbGFjZXMgdG8gZ3JpbmQgY2FzaC4gR2VudGluZ3MgZ2FtZXMgY2FuIGdldCBkZWVwIGFuZCBzcGxhc2h5IGJpZyB2ZW51ZSBmb3Igc3RhZmYgbmlnaHQgb3V0cyBhbmQgSSB3aXRuZXNzZWQgc29tZSBoYW5kcwpUcnkgdHdvIGVkaXRzIC4gb25lIHdoZXJlIHRoZSByb2FkIGlzIGZhZGVkLCBhbmQgbGVhZHMgeW91IHRvIGEgYmVhdXRpZnVsIGxhbmRzY2FwZSAuIHRoZSBvdGhlciBiZWluZyBhIHZlcnkgc2hhcnAgYW5kIGVkZ3kgcm9hZCB0aGF0IGhhcyBhIGRlc3RpbmF0aW9uIHRvIGJlIHllYXJuZWQgZm9yIGluIHRoZSBiYWNrZ3JvdW5kLgpJIGdldCBpdCwgaGFyZGx5IG5vYm9keSBnb2VzIHRvIHRob3NlIGR1bWIgYXNzIEhPQSBtZWV0aW5ncyB0byBjaG9rZSBkb3duIHN0YWxlIGRvdWdobnV0cyBhbmQgY29sZCBjb2ZmZWUgYW5kIEkga25vdyB0aGF0IGdldHRpbmcgMi8zIG9mIHVzIHRvZ2V0aGVyIHRvIHZvdGUgd291bGQgYmUgbGlrZSB3cmFuZ2xpbmcgc3RyYXkgY2F0cy4gSXQgc2VlbXMgYXMgaWYgdGhlcmUgaXMgYSBMT1Qgb2Ygb3V0ZGF0ZWQgc3R1ZmYgaW4gdGhlcmUsIGFuZCBpZiB3ZSdyZSBmb3JjZWQgdG8gcmVuZXcsIHRoZW4gd2Ugc2hvdWxkIHJld3JpdGUgYW5kIHJlbmV3LiAKUEdSIHdvdWxkIGp1c3QgZmFsbCBzaG9ydCB3aGVuIHNvbWVvbmUgYXNrcyAiU28gY291bGQgeW91IGN1c3RvbWl6ZT8gTm8/IE9oLCB3ZWxsIHRoZW4uIiBJdHMgYSBDdWx0IENsYXNzaWMuIApJdCBjYW4gaGFwcGVuIHRvIFBhY3F1aWFvIGluIDIwMTIuLiAKSSBub3Qgc2F5aW5nIGRvbiBnZXQgYSBkb2cgaW4gZ3JhZCBzY2hvb2wuIApNb3N0IHdlc3Rlcm4gc3RhdGVzIHByb3ZpZGUgc2FsYXJpZXMgaW4gdGhlIG1pZCAgdG8gdXBwZXIgJDQwLDAwMHMgd2hpbGUgdGhvc2UgaW4gdGhlIE1pZHdlc3QgZmFsbCBqdXN0IGJlbG93IHRoYXQgaW4gdGhlIGxvdyAkNDAsMDAwcyBvciB1cHBlciAkMzAsMDAwcy4gCkl0IHdvdWxkIGJlIGhhcmQgdG8gYXJyZXN0IHRoZSBwb2tlciBzaXRlIG9wZXJhdG9ycyBpbiBDb3N0YSBSaWNhLCBBcnViYSwgYW5kIG90aGVyIG9mZnNob3JlIG9wZXJhdGlvbnMsIGJ1dCBtYW55IGFyZ3VlIHRoYXQgcG9rZXIgdG91cm5hbWVudHMgb25saW5lIHRlY2huaWNhbGx5IGFyZSBub3QgZ2FtYmxpbmcuIApJbnRlcm5hdGlvbmFsIGVsZWN0aXZlcyBjYW4gYmUgaW4gaGVhbHRoIGNhcmUgc2V0dGluZ3MgaW4gYW55IGNvbnRpbmVudCBvZiB0aGUgd29ybGQuIApGb3IgZXhhbXBsZSwgbGV0J3MgbG9vayBhdCB0d28gaGFuZHMsIG9uZSB3aXRoIEEgMiAzIDUgYW5kIG9uZSB3aXRoIEEgMiBRIEsuIApMb3ZlZCBDYXJvIHRvIE5pY2tpLCBQZXRlciBhbmQgQ2hyaXMuIApUaGVyZSBpcyBzb21ldGhpbmcgSSBsaWtlIHRvIHBvaW50IG91dCB3aGljaCBJIGZpbmQgZnVubnkuLiAKVGVsbCB0aGUgZ2lybHMnIHNjaG9vbCB0byBjYWxsIHRoZSBwb2xpY2UgaWYgc2hlIHNob3dzIHVwLCBub3QganVzdCB0byBub3QgcmVsZWFzZSB0aGUgZ2lybHMgdG8gaGVyLiBUaGV5IHdpbGwgaGF2ZSBhIGRpZmZlcmVudCBwcm90b2NvbCBmb3IgYSBwZXJzb24gdGhleSBzaG91bGQgY2FsbCB0aGUgcG9saWNlIG9uLCB2cyBzb21lb25lIGp1c3Qgbm90IG9uIHRoZSBsaXN0LiBUZWxsIHRoZSBzY2hvb2wgc2hlJ3MgYSBraWRuYXBwaW5nIHJpc2suIEhhdmUgYSBwaG90byBoYW5keSwgaWYgeW91IGNhbiBmaW5kIG9uZS4KRG8geW91ciBwYXJlbnRzIGhhdmUgaXNzdWUgd2l0aCB5b3Ugc3RheWluZyBzb21ld2hlcmUgb3Zlcm5pZ2h0PyBEbyB5b3UgaGFwcGVuIHRvIGhhdmUgYSBzbWFsbGVyIG9yIGNyZWFreSBob3VzZSBsaWtlIEkgZGlkPyBJZiB0aGV5IGFyZSB3b3JyaWVkLCB5b3UgY2FuIHByb2JhYmx5IHRhY2tsZSB0aGF0IHdpdGggYW4gYWR1bHQgY29udmVyc2F0aW9uLiAKIDM1IHBvaW50cyAgc3VibWl0dGVkIDExIGhvdXJzIGFnb29tZyBwcm9mZXNzb3IgUmVpY2gsIEkgc3VjaCBhIGZhbi4gV2hhdCBkbyB5b3UgdGhpbmsgYWJvdXQgS2FtYWxhIHByb3Bvc2FsIG9mIGEgJDUwMCB0YXggY3JlZGl0IGZvciBmYW1pbGllcyBtYWtpbmcgJDEwMGsgYW5kIHVuZGVyPyBJIGZlbHQgbGlrZSB0aGlzIHdhcyBzb21ldGhpbmcgYWxvbmcgdGhlIGxpbmVzIG9mIHdoYXQgeW91IHByb3Bvc2VkIHRvIGhlbHAgd2l0aCBpbmNvbWUgaW5lcXVhbGl0eS4gCk1vcmUgYnJvYWRseSwgdGhleSdyZSBhbGwgRk9ETUFQcywgc28gSSBlYXQgYSBsb3cgRk9ETUFQIGRpZXQuIAooSW50ZXJlc3RpbmdseSwgdGhlIHNhbWUgZXhwZXJpbWVudCBjYW5ub3QgYmUgY29uZHVjdGVkIG9uIGZlbWFsZSBtaWNlLCB3aG8gbGlrZSBiZWluZyBob3VzZWQgdG9nZXRoZXIsIERyLiAKSXQncyBhbHdheXMgbmljZSB0byBrbm93IHRoYXQgd2hlbiB5b3UgcHVyY2hhc2Ugc29tZXRoaW5nIG9uY2UsIHlvdSB3b24ndCBoYXZlIHRvIHRocm93IGl0IGFueXdheSBhZnRlciAyIHllYXJzIGFuZCBzcGVuZCBtb3JlIG1vbmV5LiAKQ29uZ3JhdHMgb24gYW5vdGhlciBnb29kIHllYXIhdi4gVG8gZ3JhZHVhdGU7IHRvIGVudGVyIGEgbmV3IGNsYXNzL2dyYWRlQ29tcG91bmQgb2YgKGtub3dsZWRnZSkgYW5kIGdyYXQgKG5ldylUaGlzIHllYXIsIEkgZ3JhZHVhdGVkIGZyb20gZ3JhZGUgOCB0byBncmFkZSA5LiAKUmVhZCB0aHJvdWdoIHRoZSB3aG9sZSBib29rIGJlZm9yZSB5b3UgZ2V0IGluIHRvbyBkZWVwLiBUaGVyZSBhcmUgbG90cyBvZiBkZXRhaWxzIHNwcmVhZCB0aHJvdWdoIHRoZSB3aG9sZSB0aGluZyB0aGF0IGxpbmsgcGxhY2VzIGFuZCBwZW9wbGUgYW5kIGlkZWFzIHRvZ2V0aGVyIGFuZCBoZWxwcyB5b3UgZmxlc2ggb3V0IHRoZSB3b3JsZC4gCkluIGhlciBsYXRlc3QgcG9zdCAoMTAvMjMvMTgpIHNoZSBmYWxzZWx5IGFjY3VzZXMgS2F2YW5hdWdoIG9mIHNleHVhbCBtaXNjb25kdWN0IGFuZCB0aGVuIGVtYnJhY2VzIHRoaXMgaWdub3JhbmNlIHRoYXQgcmV2ZXJzaW5nIFJvZSB2LiBXYWRlIHdpbGwgbWVhbiB0aGF0IGFib3J0aW9uIHdpbGwgYmUgaWxsZWdhbCBldmVyeXdoZXJlLiBZZXAsIGV2ZW4gdGhvdWdoIE5vcm1hIGxhY2tzIGhvbmVzdHksIG1lbnRhbCBzdGFiaWxpdHksIGFuZCBodW1pbGl0eSwgSSBzdGlsbCBtaXNzIHRoZSBsaXR0bGUgc3RpbmtlciEuIApBIG1hbiB0cmllZCBDUFIgYXMgYnVsbGV0cyBjYW1lIGRvd24gYnV0IHRoZSB2aWN0aW0gcmVtYWluZWQgdW5yZXNwb25zaXZlLiAKIlRoZSBqb2hucyBhYnVzZSB0aGVtLCB0aGUgcGltcHMgdmljdGltaXplIHRoZW0sIHRoZSBkcnVnIGRlYWxlcnMgdmljdGltaXplIHRoZW0sIGFuZCB0aGUgbm9ybWFsIHBlb3BsZSBsb29rIGRvd24gb24gdGhlbS4gCk9uIG4nZXN0IHBhcyBhZGVwdGVzIG5vbiBwbHVzIGRlcyAia2l0cyAgY3Vpc2luZXIiLCBzdXJ0b3V0IHF1YW5kLCB0b25uYW50LCBpbCB5IGEgcXVhc2ltZW50IGF1dGFudCBkJ2luZ3JkaWVudHMgIGFqb3V0ZXIgcXVlIGNldXggZGogcHJzZW50cy4uIApJIGhhdmUgbmV2ZXIgaGVhcmQgaGVyIGNvbXBsYWluIGFib3V0IGhhdmluZyB0byBzcGVuZCBlbnRpcmUgZGF5cyBwbGF5aW5nLCBvciByZWNvcmRpbmcgdmlkZW9zLCBvciB5ZWxsaW5nIEJBWkFNIGluIGhlciBnZW5lcmFsIHZpY2luaXR5LiAKWWVzdGVyZGF5IG15IG5lc3QgY2FtZXJhcyBkcm9wcGVkIG9mZiBteSB3aXJlbGVzcyBzbyBJIHJlYm9vdGVkIG9yYmkgYW5kIHNlYXJjaGVkIHRoZSBmb3J1bSBhbmQgZm91bmQgYSBuZXcgZmlybXdhcmUuIEkgZGlkIHRoaXMgdXBkYXRlIGxhc3QgbmlnaHQgd2l0aG91dCBpc3N1ZS4gRmlyc3QgdXBkYXRlZCBlYWNoIHNhdGVsbGl0ZSB1c2luZyAyLjMuMC4zMiB3aXRob3V0IHRoZSBpbnRlcmltIHN0ZXAuIFRoZW4gdXBkYXRlZCB0aGUgcm91dGVyIHRvIDIuMi4xLjIxMi4gVGhlbiB1cGRhdGVkIHRoZSByb3V0ZXIgdG8gMi4zLjAuMzIuIEkgd2FpdGVkIGFib3V0IDUgMTAgbWluIGJldHdlZW4gc3RlcHMgdG8gbGV0IHRoZSBuZXR3b3JrIHN0YWJpbGl6ZSAocm91dGVyIGNvdWxkIHNlZSBzYXRzIGFuZCBhbGwgZGV2aWNlcyBoYWQgY2xpZW50cykuIFNvIGZhciBpdHMgd29ya2luZyBhcyB3ZWxsIGFzIDIuMi4xLjIxMC4gSGF2ZW4gbm90aWNlZCBhbnkgbmV3IGlzc3VlcyBvciBpbXByb3ZlbWVudHMuIEhhdmUgYWJvdXQgNjAgZGV2aWNlcyBjb25uZWN0ZWQgdXNpbmcgQVAgbW9kZS4KSXQgYSBwcm9ibGVtLCBhbmQgaXQgY2FuIGJlIGlnbm9yZWQuIEJ1dCB0aGUgZGlzY3Vzc2lvbiBuZWVkcyB0byBiZSBhYm91dCBzbnVmZmluZyBvdXQgYWJ1c2UsIGF0dGFja2luZyB0aGUgcHJvYmxlbXMgYW5kIGRvZ21hIG9mIENhdGhvbGljaXNtIHdpdGhvdXQgYXR0YWNraW5nIENhdGhvbGljcyBhbmQgYnJhbmRpbmcgYWxsIHByaWVzdHMgYXMgcGVkb3BoaWxlcywgYW5kIGNoYW5naW5nIHRoZSBtZW50YWxpdHkgb2YgQ2F0aG9saWMgcGFyZW50cyB0byBleHByZXNzIG91dHJhZ2UgYW5kIGRlbWFuZCBhY2NvdW50YWJpbGl0eSBmcm9tIHRoZSBDaHVyY2ggd2hlbiBwcmllc3RzIGFyZSBhY2N1c2VkLi4gClBvcCBxdWl6OiBXaGF0IGNocm9uaWMgZGlzZWFzZSBzdHJpa2VzIGFib3V0IDgwIHBlcmNlbnQgb2YgdGhlIHBvcHVsYXRpb24sIGluY2x1ZGluZyBhbG1vc3QgYWxsIDE1ICB0byAxNyB5ZWFyIG9sZHMsIGJ1dCBoYXMgbm8ga25vd24gY2F1c2Ugb3IgY3VyZSBbc291cmNlczogTklBTVMsIFdpbGxpYW1zXT8gWW91J2QgdGhpbmsgdGhhdCBhbiBhaWxtZW50IHRoYXQgYWZmZWN0cyBzbyBtYW55IHBlb3BsZSB3b3VsZCBoYXZlIGRvY3RvcnMgc2NyYW1ibGluZyBmb3IgYSBjdXJlLCBvciBhdCBsZWFzdCBwdWJsaXNoaW5nIHN0dWR5IGFmdGVyIHN0dWR5IGFib3V0IGl0LiBUaGVyZSdzIG5vdCBhbGwgdGhhdCBtdWNoIHJlc2VhcmNoIGhhcHBlbmluZyBvbiB0aGlzIG9uZSwgdGhvdWdoLiBJbiBmYWN0LCB0aGVyZSdzIGFjdHVhbGx5IGEgc3R1ZHkgb24gdGhpcyBjb25kaXRpb24gdGhhdCByZXBvcnRzIHRoZSBkaXJlIG5lZWQgZm9yIG1vcmUgc3R1ZGllcy4gVGhlIHNhbWUgcmVwb3J0IHN0YXRlcyB0aGF0IHRoZSBkaXNlYXNlIGhhcyAibm8gaWRlYWwgdHJlYXRtZW50IiBbc291cmNlOiBXaWxsaWFtc10uIFNvLCB3aGF0IGlzIHRoaXMgaWxsbmVzcyB0aGF0J3MgYXBwYXJlbnRseSBzd2VlcGluZyB0aHJvdWdoIHRoZSB3b3JsZCB1bnN0dWRpZWQgYW5kIGJhc2ljYWxseSB1bnRyZWF0ZWQ/IFN0dW1wZWQ/IEl0J3MgYWNuZS4KT2gsIHllcywgYW5kIHRoaXMgaXMgYWxzbyBhIGdyZWF0IHN0YWluIGFuZCBsaXF1aWQgcmVzaXN0YW50IG1hdGVyaWFsISBJZiB5b3Ugd2FudCB0byBiZSB0aGUgdG9hc3Qgb2YgdGhlIHRvd24gd2hlbiB5b3UgaG9zdCB5b3VyIGluIGhvbWUgRnJpZGF5IG9yIFNhdHVyZGF5IG5pZ2h0IGdhbWVzIG9yIHdoZW4gcGVvcGxlIGNvbWUgdG8geW91ciB0YXZlcm4gYW5kIHN0YXJ0IHVwIGEgZ2FtZSwgc2VsZWN0IHNvbWUgInNwZWVkIGNsb3RoIiAodHlwaWNhbGx5IDcwJSBwb2x5ZXN0ZXIgYW5kIDMwJSBvbGVmaW4pLgpJbiBhbm90aGVyLCBpdCBtYWRlIHRoZW0gYnJpbGxpYW50bHkgc3RyYXRlZ2ljIGxpa2Ugb3ZlciB0aGUgbWlsbGVubmlhIHdvbWVuIGhhdmUgZXhwZXJ0bHkgaGFybmVzc2VkIHRoZWlyIHZvY2FsIGNob3JkcyBhbmQgdHVybmVkIHRoZW0gaW50byBhIHR5cGUgb2Ygc3VwZXJwb3dlci4gClRoYW5rcyBmb3IgcG9zdGluZyB0aGlzISBJIGJlZW4gZGFpbHkgZm9yIG1lZGl0YXRpbmcgZm9yIGxlc3MgdGhhbiBhIHllYXIsIGJ1dCBJIGNhbiByZXBvcnQgYW5lY2RvdGFsbHkgdGhhdCBJIGZlZWwgbGVzcyBhbWJpdGlvbiB0aGFuIGJlZm9yZSBJIHN0YXJ0ZWQuIAoyNSBBdWcgMjAxMyAuIE9uIEVkaXNvbiBCIHNlcmlhbCBudW1iZXIgQTEyNDMwIEVkaXNvbiB1c2VkIGEgRGlhbW9uZCBDIC4gQW1iZXJvbGEgNzUgc2VyaWFsIG51bWJlcnMgPiA+ID4gVGhlIGhpZ2hlc3QgQW1iZXJvbGEgMzAgSSAuIEFsc28sIGFueSBpZGVhIHdoZW4gdGhlID4gRGlhbW9uZCBDIHdlbnQgZnJvbSBuaWNrZWwgdG8gYmxhY2sgcGFpbnQgKHllYXIgYW5kIHNlcmlhbCBudW1iZXIsLiBFZGlzb24gU3RhbmRhcmQgTW9kZWwgQSwgRWFybHkgU3F1YXJlIFRvcCAuIApHbG9yaW91c19mYWlsdXJlICA2IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KUHJldmlldyBNZXNzYWdlIFR1cm5pbmcgb24gdGhlICJQcmV2aWV3IE1lc3NhZ2UiIGZlYXR1cmUgZGlzcGxheXMgYXMgbXVjaCBvZiB5b3VyIGluY29taW5nIG1lc3NhZ2UgYXMgd2lsbCBmaXQgaW4gZWl0aGVyIHRoZSBiYW5uZXIgb3IgYWxlcnQgbWVzc2FnZSBib3guIElmIHRoaXMgZmVhdHVyZSBpcyB0dXJuZWQgb2ZmLCB5b3UnbGwgc3RpbGwgc2VlIGFuIGFsZXJ0IGJveCBvciBiYW5uZXIgd2l0aCB0aGUgbmFtZSBvZiB0aGUgY29udGFjdCB3aG8gc2VudCB5b3UgdGhlIHRleHQgYW5kIGVpdGhlciB0aGUgdGV4dCAiaU1lc3NhZ2UiIG9yICJUZXh0IE1lc3NhZ2UuIiBZb3UgY2FuIGFkanVzdCB3aGV0aGVyIHlvdXIgaVBob25lIGRpc3BsYXlzIGEgcHJldmlldyBvZiB0ZXh0IG1lc3NhZ2VzIGJ5IHRhcHBpbmcgIlNldHRpbmdzIiBhbmQgdGhlbiAiTm90aWZpY2F0aW9ucy4iIFRhcCAiTWVzc2FnZXMiIGFuZCB0aGVuIHRhcCB0aGUgT04vT0ZGIHRvZ2dsZSB0byB0aGUgcmlnaHQgb2YgIlNob3cgUHJldmlldyIgdW50aWwgT04gYXBwZWFycyBpZiB5b3Ugd2FudCB0byBkaXNwbGF5IGEgc25pcHBldCBvZiB5b3VyIHRleHQgbWVzc2FnZXMuIFByZXNzIHRoZSAiSG9tZSIgYnV0dG9uIHRvIHNhdmUgeW91ciBjaGFuZ2VzIGFuZCBjbG9zZSB0aGUgU2V0dGluZ3MgYXBwLi4gCkRlciBXZWcgZHVyY2hzIE11c2V1bSBmaHJ0IHdlaXRlciBhbiBncm9lbiBTY2hhdXRhZmVsbiB2b3JiZWksIGRpZSBkaWUgSGFuZGVsc3dlZ2UgZGVyIFNlaWRlbnN0cmFlIHZvbiBDaGluYSBiaXMgRXVyb3BhIGF1ZnplaWdlbi4gCkZyYXBwcyBkIGluZm9kcyBhdXggcHJlc3Npb25zIHJlbGlnaWV1c2VzIG91IGF1dHJlcywgaWNpIGNvbW1lIGFpbGxldXJzLCBsZXMgcml0ZXMgcyBDIGNlbGEgcXVpIGEgcGVybWlzIGxhIHN1cnZpdmFuY2UgZGUgY2Ugcml0ZSBzaSBwYXJ0aWN1bGllci4gRXQgYyB0cnMgYmllbi4gQyBjZSBxdWkgcmVuZCBjZSB0eXBlIGRlIG1hbmlmZXN0YXRpb25zIHNpIHZpdmFjZXMgYWxvcnMgcXUgc2VyYWllbnQgY29uZGFtbmVzICBsYSBkc2hyZW5jZSBldCAgbCBzaSBvbiBzb3VoYWl0YWl0IGxlcyByZXByb2R1aXJlICBsICBsLiAKVGhpcyBhc3BlY3Qgb2YgVGFpIENoaSBpcyBieSBmYXIgdGhlIG1vc3QgcG9wdWxhci4gCldoYXQgZG8geW91IHRoaW5rIGlzIHRoZSBjYXNlIGZvciBnaXZpbmcgdG8gRlJJIGluc3RlYWQgb2YgKG9yIGluIGFkZGl0aW9uIHRvKSBhIHRvcCBHaXZlV2VsbCByZWNvbW1lbmRhdGlvbj8uIApBdXRvZGVzayBUIFNwbGluZXMgUGx1ZyBpbiBmb3IgUmhpbm8gaGVscHMgZGVzaWduZXJzIGNyZWF0ZSBzbW9vdGgsIC4gClRoaXMgd2lsbCBiZSBhcmNoaXZlZCBhcyBhIHJlY29yZCBvZiB0aGUgd29yayB3aGljaCBoYXMgYmVlbiBleGFtaW5lZCBhbmQgbXVzdCByZWZsZWN0IHRoZSB2ZXJzaW9uIHN1Ym1pdHRlZCB0byB0aGUgZXhhbWluZXJzIHdpdGggYW55IHJlcXVpcmVkIGNvcnJlY3Rpb25zIG1hZGUuIFRoaXMgd2lsbCBiZSB2ZXJpZmllZCBieSB0aGUgZXhhbWluZXJzIGFuZCB0aGUgZGVncmVlIHdpbGwgdGhlbiBiZSBmb3JtYWxseSBjb25mZXJyZWQsIGVpdGhlciBhdCBhIGRlZ3JlZSBjZXJlbW9ueSBvciB0aHJvdWdoIHRoZSBpbnRlciBjZXJlbW9ueSBwcm9jZXNzLiBJbiB0aGlzIGNhc2UgYmlibGlvZ3JhcGhpYyBkZXRhaWxzIHdvdWxkIGJlIHNlYXJjaGFibGUgYnV0IHRoZSBmdWxsIHRleHQgd291bGQgb25seSBiZSB2aXNpYmxlIHRvIHJlcG9zaXRvcnkgc3RhZmYuLiAKTXkgaHVzYmFuZHMgZnJpZW5kIHNlbnQgbWUgYW4gZW1haWwgbGFzdCBuaWdodCBhc2tpbmcgaWYgaGUgY2FuIHN1cnByaXNlIG15IGh1c2JhbmQgd2l0aCBhIHBhbXBlcnMgYW5kIHBva2VyIHBhcnR5LiBUaGV5IHBsYXkgcG9rZXIgb25jZSBhIG1vbnRoIHdpdGggYSBidW5jaCBvZiBndXlzLiAKVGhlIEhvbWV3b29kIFN1aXRlcyBieSBIaWx0b24gRWRnZXdhdGVyIE5ZQyBBcmVhIGlzIGlkZWFsbHkgc2l0dWF0ZWQgb24gdGhlIHdlc3Rlcm4gYmFua3Mgb2YgdGhlIEh1ZHNvbiBSaXZlciwgcHJvdmlkaW5nIHNwZWN0YWN1bGFyIHZpZXdzIG9mIGFuZCBjb252ZW5pZW50IGFjY2VzcyB0byBNYW5oYXR0YW4uIApUaGV5IGRvbiBzcGVsbCBtYW55IHRoaW5ncyBvdXQgZm9yIGVhY2ggb3RoZXIuIApZZWFoIGJ1dCBOb2JsZXMgYmFuZ2luZyBzZXJ2ZW50cyB3YXMgcHJldHR5IGNvbW1vbiBpcmwsIHdoZXRoZXIgb3Igbm90IGl0IHdhcyBwdXJlbHkgY29uc2Vuc3VhbCBpcyBhbm90aGVyIG1hdHRlciB0b28uIFRoZXJlIGFsc28gdGhlIHBvc3NpYmlsaXR5IHRoYXQgR29sZGFuYSBtb3RoZXIgd2FzIGFsc28gYSBnb2xkIGRpZ2dpbmcgaGFybG90IGFuZCB3YXMgcHVyZWx5IHRyeWluZyB0byBnZXQgaW50byBNYXJpYyBwYW50cyB0byBiZWNvbWUgaGlzIG1pc3RyZXNzIGZvciBtb25leSBvciBzb21ldGhpbmcsIGhlciBnZXR0aW5nIGtub2NrZWQgdXAgd2l0aCB0aGUga2luZyBiYXN0YXJkIHdoaWxlIHByb2JhYmx5IG5vdCBwbGFubmVkIHdvdWxkIGhhdmUgYmVlbiBoYW5keSBpbiBhICJoZSB5b3VyIGNoaWxkIHlvdSBzaG91bGQgbG9vayBhZnRlciBoaW0iIG9yIGF0IGxlYXN0IGEgd2F5IGZvciBoZXIgdG8gYmxhY2ttYWlsIHRoZSBraW5nIGlmIHRoZSBuZWVkIGFyb3NlLi4gClRoZSB3ZWJzaXRlIGFkdmVydGlzZWQgb24gdGhlIG1haWxlciB0YWtlcyB5b3UgdG8gYSBzaWduIGluIGZvciBhIHByaXZhdGUgYmxvZy4gVGhlIHBob25lIG51bWJlciBsaXN0ZWQgdG8gY2FsbCBpbiBwZW9wbGUgZ2F0aGVyaW5nIHNpZ25hdHVyZXMgd2FzIG5vdCB3b3JraW5nIHdoZW4gSSB0cmllZCBpdC4gCihTZWNvbmQgdGhlIGRlcm1hdG9sb2dpc3QgYWR2aWNlLCBidXQgY2FtZSBoZXJlIHRvIHNheSB5b3UgYWN0dWFsbHkgc2hvdWxkIGJlIHVzaW5nIHNvbWUgb2lsIGJhc2VkIG1vaXN0dXJpemVyLiBTb21lIG9pbHMsIGxpa2UgU2hlYSBCdXR0ZXIgYW5kIGNvY29udXQgb2lsLCBhcmUgdG9vIGJpZyBhbmQgd2lsbCBuaWNlbHkgc2l0IGluIG91ciBwb3JlcyBhbmQgY2xvZyB0aGVtLCBzb21lIGFyZSBzbyBzbWFsbCB0aGF0IHRoZXkgd29uIGNsb2cgdGhlbSBhbmQgaW5zdGVhZCBoZWxwIHVzIGh5ZHJhdGUuIFJvc2VoaXAgc2VlZCBhbmQgbWFydWxhIG9pbCBhcmUgdHdvIG9mIHRob3NlLiBJZiB5b3Ugc2NydWIgYW5kIGV4Zm9saWF0ZSB0aGF0IG11Y2gsIHlvdXIgc2tpbiBpcyBhbG1vc3QgZGVmaW5pdGVseSBkZWh5ZHJhdGVkISBMb29rIGF0IFRoZSBPcmRpbmFyeSBuYXR1cmFsIG1vaXN0dXJpemluZyBmYWN0b3JzIG9yIGFub3RoZXIgcG9zdCBvbiB0aGlzIHRocmVhZCBmb3IgbW9pc3R1cml6ZXIgcmVjb21tZW5kYXRpb25zKQpIZWFydHMgbWFrZSByZWFsbHkgYmFkIGJsdWZmcyBiZWNhdXNlIHRoZXkgYmxvY2sgZm9sZHMsIGFuZCBhbGwgb3VyIHByZW1pdW0gYmx1ZmZzIGp1c3QgbWFkZSBhIHN0cmFpZ2h0IG9yIGEgcGFpci4gCiJJZiBUaGUgU3RhciB3YW50cyB0byBwdXQgZm9yd2FyZCBhbiBpbnRlZ3JhdGVkIHJlc29ydCBhbmQgY2FuIGJ1aWxkIHRoZSBjYXNlIHRoZXkgc2hvdWxkIGJlIHRoZSBvbmx5IHByb3BvbmVudCAob24gdGhlIEdvbGQgQ29hc3QpIHRoZW4gd2UgYXJlIHdlbGNvbWUgdG8gdGhhdCwgYnV0IHdlIHdhbnQgYSB0cnVlIGludGVncmF0ZWQgcmVzb3J0IHRoYXQgZGVsaXZlcnMgaW5jcmVhc2VkIHB1YmxpYyBpbmZyYXN0cnVjdHVyZSBmb3IgR29sZCBDb2FzdCByZXNpZGVudHMsIiB0aGUgTWluaXN0ZXIgc2FpZC4KVGhlIHBva2VyIGZhbnMgYXJlIGFsc28gZW50aWNpbmcgdGhlIHBva2VyIG1lcmNoYW50cyB0byBzZWxsIHRoZXNlIHByb2R1Y3RzIGJleW9uZCB0aGVpciBsb2NhbCBtYXJrZXQuIApBIHNlc3Npb24gb2YgbWFzc2FnZSBpbiBTeWRuZXkgd2lsbCBwcm92ZSB0byBiZSB2ZXJ5IHVzZWZ1bCBmb3IgaGVscGluZyBwYXRpZW50cyB3aXRoIGNocm9uaWMgbmVjayBwYWluIGFuZCBwYWluIGR1ZSB0byBvc3Rlb2FydGhyaXRpcyBvZiB0aGUga25lZS4gCkluIGFsbCBob25lc3R5LCBJIHRoaW5rIHRoYXQgbmljZSBjbG90aGVzIGFzIGF0IGNodXJjaCBoYXMgYmVjb21lIGEgYmFycmllciB0byBjb25uZWN0aW9uIHdpdGggR29kLiBJZiB5b3Ugc2hvdyB1cCB0byBjaHVyY2ggaW4gc2hvcnRzIGFuZCBhIHQgc2hpcnQsIHRoZSBwZW9wbGUgY2FuIGJlIGFzIHdlbGNvbWluZyBhcyBodW1hbmx5IHBvc3NpYmxlLCBidXQgdGhlcmUgc3RpbGwgYSBiYXJyaWVyIG9mICJJIG5vdCBkcmVzc2VkIG5pY2UgZW5vdWdoIGZvciB0aGVzZSBwZW9wbGUuIgoxIDNOIGhhcyBvbmx5IHVuYXJtb3JlZCBlbmVtaWVzLCBhbmQgZXZlcnlvbmUgaGFzIGF0IGxlYXN0IHNvbWUgZXZhc2lvbi4gClRoZSBwcm9iYWJpbGl0eSBvZiByb2xsaW5nIHRoZSBvdGhlciB2YWx1ZXMgbWFrZXMgYSBweXJhbWlkLiA2IGFuZCA4IGFyZSB0aGUgbmV4dCBtb3N0IGxpa2VseSByb2xscywgd2l0aCBmaXZlIGRpZmZlcmVudCB3YXlzIHRvIGdldCBlYWNoIHZhbHVlLCBtYWtpbmcgdGhlbSAxNCUgbGlrZWx5LiA1IGFuZCA5IGFyZSB0aGUgbmV4dCBtb3N0IGxpa2VseSB2YWx1ZXMsIGFuZCBzbyBvbi4gClByb3Rlc3RlcnMgbGluZWQgdGhlIHN0cmVldHMgYXJvdW5kIHRoZSBDb2xpc2V1bSBpbiBSaWNobW9uZCBsYXN0IHllYXIsIGNhbGxpbmcgZm9yIHRoZSByZWxlYXNlIG9mIHRoZSBlbGVwaGFudHMuIFRoZSBzaG93IGNob3NlIG5vdCB0byBiYXR0bGUgYSBuYXRpb253aWRlIHB1c2ggZm9yIGxvY2FsIGxhd3MgdGhhdCB3b3VsZCBtYWtlIGl0IGhhcmRlciBmb3IgZWxlcGhhbnRzIHRvIHBlcmZvcm0sIGxpa2UgYmFubmluZyBjZXJ0YWluIHRyYWluaW5nIHRvb2xzIGFuZCBwcmFjdGljZXMgd2l0aGluIGNpdHkgbGltaXRzLgpUaGUgdm9jYWxpc3QgdHVybmVkIGFjdG9yJ3MgYmFza2V0YmFsbCBsZWFndWUsIEJpZzMsIGhhcyBhZGRlZCB0d28gbmV3IGJpZyBtb25leSBwbGF5ZXJzIHRvIGl0cyBiaWQgZm9yIDIxIG9mIHRoZSAyMiBGb3ggY2hhbm5lbHMsIFRoZSBQb3N0IGhhcyBsZWFybmVkIGV4Y2x1c2l2ZWx5LgpZb3UncmUgc2NhcmVkIHRoYXQgeW91ciBjaGlsZHJlbidzIGpvYnMgd2lsbCBiZSB0YWtlbiBieSBpbGxlZ2FscyB0aGF0IG1ha2UgdXAgYSB0b3RhbCBvZiAzJSBvZiB0aGUgdG90YWwgcG9wdWxhdGlvbi4gSWYgeW91ciBraWRzIGNhbid0IGdldCBhIGpvYiBiZWNhdXNlIG9mIGEgcmVhbGx5IHNtYWxsIHBvcnRpb24gb2YgdGhlIGNvdW50cnkgd29ya3MgaGFyZGVyIHRoYW4gdGhleSBkbywgdGhhbiB5b3UgZmFpbGVkIGFzIGEgcGFyZW50IGFuZCBoYXZlIG5vdCBlcXVpcHBlZCB0aGVtIHdpdGggdGhlIHdvcmsgZXRoaWMgb3IgZWR1Y2F0aW9uIHRvIGJlIHN1Y2Nlc3NmdWwgaW4gbGlmZS4gClNpZ2hCdXQgSSBoYXZlIGp1c3QgZmlndXJlZCBvdXQgaG93IHRvIHJhaXNlICQzMCBiaWxsaW9uIGRvbGxhcnMgaW4gdGF4IGRvbGxhcnMgbm90IHNsYXRlZCBmb3Igd2FyIGFuZCBzdHVwaWRpdHkuIApXaXJkIGR1cmNoIGRhcyBaZWljaG5lbiBlaW5lcyBGcmFnZXplaWNoZW5zIGluIGRpZSBMdWZ0IGRhcmdlc3RlbGx0KSwgZGllIGJlaSBpbnRlcm5hdGlvbmFsZW4gS29uZmVyZW56ZW4vVGFndW5nZW4gZWluZ2VzZXR6dCB3aXJkLi4gCkNsZXZlbGFuZCBEcmlua3MgYW5kIEJlZXIKVGhlcmUncyBhZGRlZCBpbmNlbnRpdmUsIHRvbywgc2luY2UgdGhlIE9zaGF3YSBHZW5lcmFscyBjb3VsZCBsZWFwZnJvZyBvbmUgb2YgdGhlbSBmb3IgdGhpcmQgcGxhY2UuIApOZXR0bGUgcmFzaCBvciB1cnRpY2FyaWEgaXMgY2hhcmFjdGVyaXplZCBieSBpbmZsYW1tYXRpb24gYXR0ZXIgY29udGFjdCB3aXRoIGZyZXNoIG5ldHRsZSBsZWFmLiBUaGUgZHJpZWQgbGVhZiBvZiBtb3N0IHNwZWNpZXMgd2lsbCBub3Qgc3RpbmcsIGJ1dCBzb21lIHNwZWNpZXMgc3RpbGwgaGF2ZSBhIGtpY2sgZXZlbiBhZnRlciBkcnlpbmcuIFRlY2huaWNhbGx5LCB1cnRpY2FyaWEgaXMgYWNjb21wYW5pZWQgYnkgYSBzdGluZ2luZyBzZW5zYXRpb24gZm9yIG92ZXIgMTIgaG91cnMuIHNvbWV0aW1lcyBmYXRhbCBicm9uY2hpYWwgY29uc3RyaWN0aW9uIGFzIHdlbGwgYXMgb3RoZXIgYWxsZXJnaWMgcmVhY3Rpb25zLikKVGhlcmUgb25lIG1ham9yIGRvd25zaWRlIG9mIGl0IHRob3VnaC4gU29tZXRpbWVzLCB0aGUgdGl0bGViYXIgb2YgZGlhbG9ncyB3aWxsIGJlIHVuZGVyIHRoZSB0YXNrYmFyLCBhbmQgeW91IG5lZWQgdG8gbW92ZSB0aGUgdGFza2JhciBzbyB5b3UgY2FuIGRyYWcgaXQgYWdhaW4uClRoaXMgc3RpbXVsYXRpb24gaW5jcmVhc2VzIHRoZSBlbmVyZ3kgYXZhaWxhYmxlIHRvIHRoZXNlIGNlbGxzIGNhdXNpbmcgdGhlbSB0byBhYnNvcmIgbnV0cmllbnRzIGFuZCBleHBlbCB3YXN0ZSBwcm9kdWN0cyBtb3JlIHJhcGlkbHkuIFRoaXMgZHJhbWF0aWNhbGx5IGFjY2VsZXJhdGVzIHRoZSByZXBhaXIgb2YgaW5qdXJlZCB0aXNzdWUgbGVhZGluZyB0byBmYXN0ZXIgdGVuZG9uLCBsaWdhbWVudCBhbmQgbXVzY2xlIGhlYWxpbmcuCk1vbnRobHkgb3BlbiBzdHVkaW8gQnJpbmcgeW91ciBwcm9qZWN0IHRvIHRoZSBzdHVkaW8gYW5kIHdvcmsgYWxvbmdzaWRlIHlvdXIgZmVsbG93IG1ldGFsc21pdGhzLiAKTGV0IG1lIGp1c3Qgc2F5IG9uZSBtb3JlIHRoaW5nIGFib3V0IHRoZSBkaXJlY3Rvci4gVGhlcmUgaGF2ZSBiZWVuIGEgbG90IG9mIGNvbnZlcnNhdGlvbnMgYWJvdXQgd29tZW4sIGFuZCB3ZSBzZWUgdGhhdCB0aGlzIHllYXIgdGhlcmUgYXJlIG5vIHdvbWVuIGRpcmVjdG9ycyBub21pbmF0ZWQuIFdlIGhhdmUgYW4gb25nb2luZyByZXNlYXJjaCBhZ2VuZGEgZGVhbGluZyB3aXRoIHRoaXMgaXNzdWUsIHRyeWluZyB0byBzZWUgaWYgdGhlcmUgaXMgYW55IGRpc2NyaW1pbmF0aW9uIGluIEhvbGx5d29vZC4gClRoYW5rcyBmb3IgdGhlIHF1aWNrIHJlcGx5ISBUaGF0IGdyZWF0IHRvIGhlYXIuIApLbm93aW5nIHRoZSBvZGRzIHdhcyBtYXliZSBnb29kIGVub3VnaCB0byB3aW4gYXQgb25saW5lIHBva2VyIGEgZmV3IHllYXJzIGFnbywgYnV0IHByb2JhYmx5IG5vdCBhbnltb3JlLgpOb3RNeUludGVybmV0ICA2MiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpPdXIgUHJlc2lkZW50IHdhcyB0cnlpbmcgdG8gbWFrZSBhIGNyaXRpcXVlIGFib3V0IGhvdyBvZnRlbiwgZHVyaW5nIHRoZSBjYXJuaXZhbCBmZXN0aXZpdGllcywgZXhwbGljaXQgYW5kIHB1YmxpYyBzZXh1YWwgY29uZHVjdHMgb2NjdXIsIGFuZCBob3cgY29uZGVtbmFibGUgdGhleSBhcmUuIFRoYXQgd2h5IGhlIHBvc3RlZCB0aGUgdmlkZW8sIHdoaWNoIHN1cHBvc2VkbHkgaGFwcGVuZWQgZHVyaW5nIG9uZSBvZiB0aGUgY2Fybml2YWwgY29tZW1vcmF0aW9uIGh1YnMsIHRob3VnaCBubyBvbmUgaXMgMTAwJSBjZXJ0YWluIGFib3V0IGl0LiAKSXQgZG9lc24ndCBjYXJyeSBzaWduYWxzIGZyb20gb25lIG5ldXJvbiB0byBhbm90aGVyLCBhbHRob3VnaCBvdGhlcnMgYXJlIHdvcmtpbmcgb24gbmV3IHRlY2hub2xvZ3kgdG8gZG8gdGhhdCAocGFydGljdWxhcmx5IGZvciBtZW1vcnkgZW5oYW5jZW1lbnQpLi4gCktpZHMgaGF2ZSBzdWNoIGxvdyBzZWxmIGVzdGVlbSB0aGVzZSBkYXlzIGFuZCBkZXByZXNzaW9uIGlzIGhvcnJpZmljIGFuZCByZWFsbHkgZHJhZ3MgeW91IGRvd24uIE1vcmUgcGVvcGxlIG5lZWQgdG8gc2VlIHRoZW1zZWx2ZXMgYXMgdGhlaXIgb3duIGhlcm8uIEl0J3Mgb25lIG9mIHRoZSB0aGluZ3Mgd2UgZW5jb3VyYWdlIGluIGtpZHMgYXQgbXkgam9iLCBhcyB0aGV5IGZlZWwgc28gcG93ZXJsZXNzIGluIHRvZGF5J3Mgc29jaWV0eS4gVGhleSBuZWVkIHRvIGZlZWwgZW1wb3dlcmVkIGFuZCBiZSBwcm91ZCBvZiB0aGVpciBhY2hpZXZlbWVudHMuCkFuZCBoZSBiZWVuIHN0YXlpbmcgd2l0aCB1cyBzaW5jZSwgc2FpZCB0aGUgaGFpcmRyZXNzZXIuU2hlIGlzIG1hcnJpZWQgdG8gTXIgSGFuIEtpYW4gVGVuZywgMzgsIGZvdW5kZXIgb2YgSGFucyBBcnQgR2FsbGVyZSwgd2hpY2ggb3BlcmF0ZXMgMjIgY2VudHJlcyBhbGwgb3ZlciBTaW5nYXBvcmUgb2ZmZXJpbmcgYXJ0IGxlc3NvbnMgYW5kIHdvcmtzaG9wcyBvbiB3b29kY3JhZnQuVG8gQmFuZ2xhZGVzaGkgUHJvc2VuamlkIEdvbGFiIEdvbmJhciwgMjMsIGhpcyBib3NzIG9mIHR3byBtb250aHMgaXMgYSB2ZXJ5LCB2ZXJ5IGtpbmQgbWFuIHdobyBoYXMgZ2l2ZW4gaGltLCBhbmQgaGlzIGZhbWlseSBiYWNrIGhvbWUsIGEgbGlmZWxpbmUgZHVyaW5nIHRoaXMgcmVjZXNzaW9uLkxpa2UgbWFueSBvdGhlciBCYW5nbGFkZXNoaXMsIE1yIEdvbmJhciBoYWQgYm9ycm93ZWQgaGVhdmlseSB0byBjb21lIHRvIHdvcmsgaW4gU2luZ2Fwb3JlLiBIZSBhcnJpdmVkIGluIE1hcmNoIGxhc3QgeWVhciBhbmQgZWFybmVkICQxOCBhIGRheSBhcyBhIGdlbmVyYWwgd29ya2VyIGluIGEgY29uc3RydWN0aW9uIGNvbXBhbnkuQnV0IHdoZW4gY29udHJhY3RzIHN0YXJ0ZWQgZHJ5aW5nIHVwIGJlY2F1c2Ugb2YgdGhlIGRvd250dXJuLCBoaXMgZW1wbG95ZXJzIHRvbGQgaGltIGhlIGhhZCB0byBnby5NciBHb25iYXIgZmFjZWQgdGhlIGJsZWFrIHByb3NwZWN0IG9mIHJldHVybmluZyBob21lIHdpdGggaGlzIGRlYnQgc3RpbGwgdW5wYWlkLkRlc3BlcmF0ZSwgaGUgdHVybmVkIHRvIE1yIEhhbiwgd2hvbSBoZSBoYWQgZ290IHRvIGtub3cgd2hlbiBoZSB3b3JrZWQgb24gdGhlIHBhaW50aW5nIGFuZCByZW5vdmF0aW9uIG9mIHNvbWUgb2YgdGhlIGZpcm0gb3V0bGV0cy5NciBIYW4gcmVtZW1iZXJlZCBoaW0sIGFzIHRoZSB5b3VuZyBtYW4gaW5kdXN0cnkgYW5kIGh1bWlsaXR5IGhhZCBtYWRlIGFuIGltcHJlc3Npb24uIApNeSBkYWQgd2FzIGhpdCBieSBhIGRydW5rIGRyaXZlciBhbmQgd2FzIGluIGEgY29tYSBmb3Igc2V2ZXJhbCBtb250aHMuIFRoZXkgdG9sZCB1cyByZXBlYXRlZGx5IGhlIHdvdWxkIGRpZSB0b2RheS4gQnV0IGhlIG5ldmVyIGRpZC4gCkxvb2ssIGFnYWluLCBJJ20gb25lIG9mIHRoZSBwZW9wbGUgYWN0aXZlbHkgZmlnaHRpbmcgYWdhaW5zdCBzcGFtIG9uIHRoZSBzaXRlLiBJdCdzIGRlZmluaXRlbHkgYW4gaXNzdWUsIGJ1dCBpdCBkb2VzIG5vdCBtYW5pZmVzdCBpbiB0aGUgd2F5IHRoYXQgcGVvcGxlIHRoaW5rLiAKVXN1YWxseSB3aGVuIHlvdSBzZW5kIGEgbWVzc2FnZSB0aGVyZSBpcyBhIHNwZWNpYWwgaGlkZGVuIGNvZGUgdGhhdCBpcyBhdHRhY2hlZCB0byB0aGUgbWVzc2FnZSwgdGhhdCB0aGUgcmVjZWl2aW5nIGRldmljZSBrbm93cyB3aGF0IGl0IG1lYW5zIGFuZCBwdXQgdGhlIHRleHRzIHRvZ2V0aGVyLiBCdXQgc2luY2UgaXQgYW4gaVBob25lIHRvIFNhbXN1bmcsIHRleHRzIGdldHMgc3BsaXQgdXAgYmVmb3JlIGdldHRpbmcgc2VudCBmcm9tIHRoZSBpUGhvbmUgd2l0aCBubyBzcGVjaWFsIG1lc3NhZ2UuLiAKU28gYXMgZmFyIGFzIEkgdW5kZXJzdGFuZCBpdCwgaWYgSSBoYXZlIGEgbWVkaWEgcXVlcnkgc2V0IHVwIHdpdGggbWF4IHdpZHRoOiA0MDBweCBhbmQgSSBvcGVuIHRoYXQgcGFnZSBvbiBhbiBpUGhvbmUgNiwgdGhhdCBtZWRpYSBxdWVyeSBzaG91bGQgZmlyZSwgcmlnaHQ/IChJIGRvbmUgc2ltcGxlciBjb2RlcGVuIHRlc3RzIGFscmVhZHkgYW5kIHZlcmlmaWVkIHRoYXQgdGhpcyBpcyBub3JtYWxseSB0aGUgY2FzZSkuIEJ1dCBzb21ldGhpbmcgYWJvdXQgdGhpcyBjb2RlIGlzIG1ha2luZyB0aGUgc2NyZWVuIHdpZHRoIGNvbWUgb3V0IGFzIDU2OSBpbnN0ZWFkIG9mIDM3NSBhbmQgbXkgbWF4IHdpZHRoOiA0MDBweCBtZWRpYSBxdWVyaWVzIGFyZW4gZmlyaW5nLiBJIHN1cmUgaXQgc29tZXRoaW5nIEkgZGlkIHdyb25nIHdpdGggYWxsIHRoZSBmbGV4Ym94IHN0dWZmIEkgdXNpbmcsIGJ1dCBJIGNhbiBmaWd1cmUgb3V0IHdoYXQuLiAKVmlkZW9zIHN1Z2dlc3QgdGhhdCBlbXBsb3llZXMgaGFkIG5vIGluZGljYXRpb24gd2hhdCB3YXMgaW4gdGhlIHN1aXRjYXNlcy4KQkVTVCBEQVkgWUVUICAgVGVycmlmaWMgc2NlbmVyeSwgZ3JlYXQgd2VhdGhlciBhbmQgaXQgYWxtb3N0IGZlZWxzIGxpa2UgbXkgY2xpbWJpbmcgaXMgZ2V0dGluZyBiZXR0ZXIhIE15IG93biB0cmlwbGUgY3Jvd24gd2hpY2ggY29tcGFyZXMgZmF2b3VyYWJseSB0byBQZXRlciBTYWdhbidzIHRoaXJkIHN0YWdlIHdpbi4KUmVtZW1iZXIgaG93IHRoaXMgYWxsIHN0YXJ0ZWQ6IGEgU291dGggS29yZWFuIGRlbGVnYXRpb24gd2FzIGF0IHRoZSBXaGl0ZSBIb3VzZSBkdXJpbmcgYSB3ZWVrIG9mIGJhZCBSdXNzaWFuIGNvbGx1c2lvbiBuZXdzLiBUaGUgU291dGggS29yZWFuIHByZXNlbnRlZCBhIGxldHRlciBmcm9tIEtpbSB0aGF0IHNhaWQgaGUgd2FudGVkIHRvIG1lZXQgKG5vdGhpbmcgbmV3LCBidXQgbm8gb3RoZXIgcHJlc2lkZW50IHdvdWxkIG1lZXQgd2l0aG91dCBmaXJzdCBzZXR0aW5nIHByZWxpbWluYXJ5IGFncmVlbWVudHMpLgpJZiB5b3Ugd2FudCBjb21wYXJlIGEgTm9ydGggQW1lcmljYW4gY291bnRyeSwgdGhlbiBjb21wYXJlIENhbmFkYSB3aGljaCBsaW5ndWlzdGljYWxseSBoYXMgMjYlIEZyYW5jbyBDYW5hZGlhbnMuIEFuZCB0aGVuIGl0IGhhcyAxOCUgRWFzdC9Tb3V0aC9DZW50cmFsIEFzaWFucywgMiUgQXJhYnMvUGVyc2lhbnMsIDMuNSUgQmxhY2sgcGVvcGxlLCAyJSBIaXNwYW5pY3MgYW5kIDUlIEluZGlnZW5vdXMuIChGb3IgdGhlIHNha2Ugb2YgYWNjdXJhY3ksIFF1ZWJlYyBpcyBhYm91dCAxMCUgbm9uIHdoaXRlIHNvIHRoZXJlIHNvbWUgb3ZlcmxhcCB0aGVyZSBiZXR3ZWVuIEZyZW5jaCBzcGVha2VycyBhbmQgb3RoZXIgbWlub3JpdGllcykuCkluY3JlYXNlIHRoZSBhbmdsZSBvZiB5b3VyIGhlYWRib2FyZCB0byBwcmV2ZW50IHN0b21hY2ggYWNpZCBmcm9tIGZsb3dpbmcgdXB3YXJkIGludG8gdGhlIHRocm9hdCBhbmQgcHJvdGVjdCB5b3VyIGVzb3BoYWd1cy4gCiJJdCBhbW91bnRzIHRvIHRoYXQsIiBGYXdsZXkgYWRtaXR0ZWQuICJPdXIgcHJlc2VudCBkYXkgcG9saXRpY2lhbnMgYmVsaWV2ZSB0aGF0IGFsbCBpbmZvcm1hdGlvbiBhY3F1aXJlZCB0aHJvdWdoIFNlY3JldCBTZXJ2aWNlIHdvcmsgaXMgdW50cnVzdHdvcnRoeSBhbmQgZGFuZ2Vyb3VzLiBUaGV5IGhhdmUgYWRvcHRlZCBuZXcgbWV0aG9kcy4iCklsIGZhdXQgc2UgbGFpc3NlciBwb3J0ZXIgLiAKU28uIApPbmUgb2YgdGhlIG1haW4gdGhpbmdzIHdlIG5lZWQgd2hlbiB3ZSBzZXQgbWluZSBpcyBpbXBsaWVkIG9kZHMsIHdlIHdhbnQgdG8gYmUgRkxBVFRJTkcgYSB2aWxsYWlucyAzYmV0IHdpdGggdGhlc2UgbWlkZGxpbmcgbG93IHBhaXJzIHdoZW4gdGhlIHZpbGxhaW4gaGFzIGEgbGFyZ2UgZW5vdWdoIHN0YWNrIHRvIG1ha2UgaXQgcHJvZml0YWJsZSBpbiB0aGUgbG9uZyBydW4gKDc1IDEwMCBCQiBpZiB5b3UgYXJlIHBsYXlpbmcgb25saW5lKSB5b3UgY2FuIGp1c3QgZm9sZCB0byAzYmV0cyBpZiB0aGV5IGFyZSBzdXBlciBzaG9ydC4KSSBzdGlsbCBoYXZlIHNvbWUgc3R1ZGVudHMgd2hvIGFyZSBkZWZpbml0ZWx5IG5vdCBva2F5IHdpdGggaXQgKGFsbW9zdCBhbHdheXMgZWl0aGVyIGJhc2VkIG9uIHJlbGlnaW9uIG9yIG1hY2hpc21vKSwgYnV0IGV2ZW4gdGhleSBhcmUgYWJsZSB0byBzdGF5IHJlc3BlY3RmdWwgaW4gdGhlIGNsYXNzcm9vbS4gClRoaXMgY3JlYXRlcyBhY3R1YWwgZHJhbWF0aWMgdGVuc2lvbiBhbmQgZ2l2ZXMgdXMgZ2VudWluZSBlbXBhdGh5IGZvciB0aGUgY2hhcmFjdGVyLiAKRXZlbiB0aG91Z2ggSSBwbGF5ZWQgZmFpcmx5IGxpZ2h0bHksIEkgY2FuIHNvbG8gR1I4NSwgYWxiZWl0IHdpdGggc29tZSBzcGVlZGJ1bXBzLCBidXQgaGF2ZSBkb25lIGdyb3VwcyBvZiB1cCB0byBHUjEwNS4gS2FkYWxhIG1ha2VzIGl0IHNvIGVhc3kgdG8gZ2V0IHdoYXQgeW91IGFyZSBtaXNzaW5nLCBzb21ldGltZXMgWEQsIGFuZCB3aGVuIHlvdSBmaW5hbGx5IGdldCBpdCBhbmQgaXQgaGFzIDMgYXdmdWwgc2Vjb25kYXJ5IHN0YXRzLCBLYW5haSBjdWJlIGNhbiBmaXggaXQgdXAgZm9yIHlvdSwgc29tZXRpbWVzIFhELiAKVGhlIFppb25pc3QgT3JnYW5pemF0aW9uIG9mIEFtZXJpY2EgKFpPQSkgKEhlYnJldzogICApLCBmb3VuZGVkIGluIDE4OTcsIHdhcyB0aGUgZmlyc3Qgb2ZmaWNpYWwgWmlvbmlzdCBvcmdhbml6YXRpb24gaW4gdGhlIFVuaXRlZCBTdGF0ZXMsIGFuZCwgZXNwZWNpYWxseSBlYXJseSBpbiB0aGUgMjB0aCBjZW50dXJ5LCB0aGUgcHJpbWFyeSByZXByZXNlbnRhdGl2ZSBvZiBBbWVyaWNhbiBKZXdzIHRvIHRoZSBXb3JsZCBaaW9uaXN0IE9yZ2FuaXphdGlvbiwgZXNwb3VzaW5nIHByaW1hcmlseSBQb2xpdGljYWwgWmlvbmlzbS4gVG9kYXksIHRoZSBaT0EgY2xhaW1zIHRvIGhhdmUgMjUsMDAwIG1lbWJlcnMuLiAKVXNlIGEgY29vbCBlZ2cuIEFmdGVyIHR3byBkYXlzLCBvciBpZiB0aGUgYnJ1aXNlIGlzIG5vdCBzd29sbGVuLCBhIGNvb2wgZWdnIGhlbHBzIGltcHJvdmUgdGhlIHNraW4ncyBjb25kaXRpb24uIFJlZnJpZ2VyYXRlIGFuIGVnZyBmb3IgYSB3aGlsZS4gCkNvdW1hZGluIHJlcXVpcmVzIHdlZWtseSBJTlIgY2hlY2tzLCB3aGljaCBtZWFucyBsYWIgZHJhd3MgKG91Y2gpIGFuZCBhbHNvIHdhc3RlZCBwaHlzaWNpYW4gdGltZSAobm90IHJlaW1idXJzZWQpLiBQYXRpZW50cyBhbHNvIG5lZWQgdG8gd2F0Y2ggdGhlaXIgZGlldCAoSU5SIHN1YnRoZXJhcGV1dGljPyB0b28gbXVjaCB2aXQgSyAgIHN0b3AgZWF0aW5nIGJyb2Njb2xpIGFuZCBncmVlbiBsZWFmeSB2ZWdldGFibGVzKS4KSSBsb3ZlZCBGYWxsb3V0IDMsIEZhbGxvdXQgTlYsIGFuZCBldmVuIEZhbGxvdXQgNCwgYnV0IEkgZGlkIG5vdCBwbGF5IHRoZW0gYXMgbXVjaCBhcyBJIGRpZCBPYmxpdmlvbiBvciBTa3lyaW0uIApJIGFscmVhZHkgYmVhdCB0aGlzIHN1YmplY3QgdG8gZGVhdGggd2l0aCBhbm90aGVyIGtpbmQgRHV0Y2h5IHRoaXMgbW9ybmluZywgYnV0IHJlYWxseSwgSSBkb24gZ2V0IGl0LiAKSSB3b3VsZCBrbm93LiAKV2hlcmUgYXMgaW4gdmVyYmFsIGNvbW11bmljYXRpb24gd2lsbCBub3QgdGFrZSBtdWNoIHRpbWUgZm9yIGZlZWRiYWNrLi4gCihBciAuIDIxIEphbiAyMDE3IC4gTVAzIENlcmFtYWggVGVudGFuZyBLZW1hdGlhbi4gCkkgYWN0dWFsbHkgdGhpbmsgdGhpcyBjb3VsZCBiZSBhIHVzZWZ1bCB0b29sIGluIGlkZW50aWZ5aW5nIGxlZ2l0aW1hdGUgY29uc3BpcmFjaWVzLiBKdXN0IGxpa2UgU05PUEVTIG1ha2VzIGZpbmRpbmcgY29uc3BpcmFjaWVzIGVhc2llciB3aGVuIHRoZXkgaWRlbnRpZnkgc29tZXRoaW5nIGFzIG1vc3RseSBmYWxzZS4gSWYgc29tZW9uZSBpcyBzbyBpbnRlbnQgb24gZGVidW5raW5nIGEgWW91VHViZSB2aWRlbyB0aGF0IHRoZXkgZ28gdGhyb3VnaCB0aGUgdHJvdWJsZSBvZiBjb250YWN0aW5nIFlvdVR1YmUgYW5kIGhhdmluZyB0aGVtIHB1dCBhIGJhbm5lciBieSBhIHZpZGVvLCB0aGV5IGRvbiB3YW50IHRoYXQgaW5mb3JtYXRpb24gdG8gYmUgYmVsaWV2ZWQsIGEgbG90IG9mIHRoZSB0aW1lcyBpdCBpcyBwcm9iYWJseSBsZWdpdC4gCjEuIEZpcnN0IGFuZCBmb3JlbW9zdCwgd2UgbXVzdCBkZW1hbmQgdGhhdCBvdXIgZ292ZXJubWVudCBiZSBvZiB0aGUgcGVvcGxlIGFuZCBmb3IgdGhlIHBlb3BsZTsgbm90IG9mIGFuZCBmb3IgYmlnIGJhbmtzIGFuZCBiaWcgZ3Vucy4gb25seSB3YXkgdG8gbWFrZSB0aGlzIGhhcHBlbiBpcyB0byBnZXQgY2FtcGFpZ24gZmluYW5jZSByZWZvcm0gdGhyb3VnaC4gdGhhdCwgbm8gbWF0dGVyIGhvdyBicmlsbGlhbnQgYW5kIGV2ZW4gZXRoaWNhbCBhIGNhbmRpZGF0ZSwgdGhleSB3aWxsIGJlIHN1Y2tlZCBpbnRvIHRoZSBpbmV2aXRhYmxlIGRlc2lyZSB0byBnZXQgcmUgZWxlY3RlZCBhbmQgdGhlIGNvbnN0YW50IHByb3N0aXR1dGlvbiBvZiB0aGVtc2VsdmVzIGZvciBjb250cmlidXRpb25zIHRvIHRoZWlyIGNhbXBhaWducy4KSXQgbWFzcyBwcm9kdWNlZApFdmVyeSByb3VuZCBvZiBzdHJhdGVnaWMgZGlhbG9ndWUgY29zdHMgdGltZSBhbmQgbW9uZXkuIERvemVucyBvZiBVUyBhbmQgUGFraXN0YW5pIG9mZmljaWFscyBzcGVuZCBzZXZlcmFsIGRheXMgcG9yaW5nIG92ZXIgdGhlIG1pbnV0aWFlIG9mIHRoZSBkaWZmZXJlbnQgd2F5cyBpbiB3aGljaCB0aGUgUGFraXN0YW5pIGdvdmVybm1lbnQgY2FuIGdldCBwcm9qZWN0cyBvbiBpdHMgd2lzaGxpc3QgZmluYW5jZWQsIHdpdGhvdXQgdGhlIFVTIGhhdmluZyB0byBwdXQgdGF4cGF5ZXIgbW9uZXkgaW50byB0aGUgc3VwZXJtYXNzaXZlIGJsYWNrIGhvbGUgdGhhdCBpcyB0aGUgUGFraXN0YW5pIGZlZGVyYWwgY29uc29saWRhdGVkIGZ1bmQuIFRoZSBQYWtpc3RhbmkgZmVkZXJhbCBjb25zb2xpZGF0ZWQgZnVuZCBpcyBvZiBjb3Vyc2Ugd2hlcmUgZ29vZCBtb25leSwgdGhlIGhhcmQgZWFybmVkIGhhbGFsIG1vbmV5IG9mIHRheHBheWVycyBQYWtpc3RhbmksIEJyaXRpc2gsIEFtZXJpY2FuLCBKYXBhbmVzZSwgYW5kIFR1cmtpc2ggYW1vbmdzdCBvdGhlcnMgZ29lcyB0byBnZXQgc3BvaWx0LCBpbiBhIGZpc2NhbCBvcmd5IHdob3NlIGRpbWVuc2lvbnMgYXJlIGFsd2F5cyBzcG9rZW4gb2YgYnV0IG5ldmVyIHF1YW50aWZpZWQuLiAKMiBlbnRyaWVzIGZyb20gQXVndXN0IDIwMTgKVGhlIGVsZXZhdG9yIHN0b3BzIGhhcmQgbWFraW5nIE1vbGx5IGFsbW9zdCBkcm9wIHRoZSBjdXBjYWtlcy4gCkluIGh1bWFucywgdGhlIGZvdXIgcGFpcnMgb2YgcGFyYW5hc2FsIHNpbnVzZXMgYW5kIHRoZWlyIGxvY2F0aW9ucyBhcmUgYXMgZm9sbG93czogLgpUaGV5J3JlIHNtZWxseSwgdGFzdGUgbGlrZSBzd2VhdHkgYXNzIGNyYWNrIHNtZWxscyBtYWtlIG1lIGdhZy4gClRoZSB5ZWxsb3cgY29sb3IgaXMgZnJvbSB0dW1lcmljLiAKVGhlIHRoaW5nIHRvIHVuZGVyc3RhbmQgd2l0aCByZWdhcmRzIHRvIHRoZSBJbmRlcGVuZGVuY2UgV2FycyBvZiBTb3V0aCBBbWVyaWNhIGlzIHRoZSBmYWN0IHRoYXQgbW9zdCBjb2xvbmllcyBoYWQgdmVyeSBzdHJvbmcgcmVnaW9uYWwgaWRlbnRpdGllcy4gVGhlIGRpZmZpY3VsdCB0ZXJyYWluIGFuZCBkaXN0YW5jZXMgbWFkZSBpdCBpbXByYWN0aWNhbCB0byBlc3RhYmxpc2ggY29tcGxldGUgY2VudHJhbCBjb250cm9sIGV2ZW4gZnJvbSB0aGUgVmljZXJlZ2FsIGNhcGl0YWxzLiBUaHVzLCBldmVuIHRob3VnaCBDb2xvbWJpYSwgVmVuZXp1ZWxhIGFuZCBFY3VhZG9yIHdlcmUgYWxsIG5vbWluYWxseSBwYXJ0IG9mIHRoZSBWaWNlcm95YWx0eSBvZiBOZXcgR3JhbmFkYSwgaW4gcHJhY3RpY2EgVmVuZXp1ZWxhIHJ1bGVkIGl0c2VsZiwgYW5kIHNvIGRpZCBFY3VhZG9yLCBhbmQgc28gZGlkIENvbG9tYmlhLiAKSSBhbSBzaXR0aW5nIGF0IHRoZSB0YWJsZSBmb3IgMTQgaG91cnMgYSBkYXksIHNvIHdoZW4gSSBhbSBub3QgYXQgdGhlIHRhYmxlLCBJIHdvcmsgb3V0IGFuZCBlYXQgaGVhbHRoeSB0aHJvdWdob3V0IHRoZSBkYXkuIApMZXQgZmFjZSBpdC4gVGhlIFVTIGxvc2VzIGluIG1vc3QgY29tcGV0aXRpb25zIHdpdGggSW5kaWEgYXQgdGhpcyBwb2ludC4gU3VyZSB0aGUgVVMgaGFzIHRoZSBiaWdnZXN0IG1pbGl0YXJ5IGV2ZXIgYXNzZW1ibGVkLCBidXQgd2Uga2luZGEgc3VjayBhdCB0aGUgd2hvbGUgbWF0aCBhbmQgc2NpZW5jZSBlZHVjYXRpb24gdGhpbmcsIHdlIGRvbiByZWFsbHkgcHJvZHVjZSBtdWNoIHdvcnRoIGJ1eWluZyAoYWx0aG91Z2ggd2UgYXJlIG51bWJlciBvbmUgYXQgY29uc3VtcHRpb24pIGFuZCBldmVuIEhvbGx5d29vZCBpcyBpbmNyZWFzaW5nbHkgbG9zaW5nIG91dCB0byBCb2xseXdvb2QgZm9yIHB1cmUgZW50ZXJ0YWlubWVudCB2YWx1ZSwgc2V0IGRlc2lnbnMsIG11c2ljLCBhbmQgZXZlbiBoaXBuZXNzLi4gCk9seW1waWEgU3RhZGlvbiBpc3Qgdm9uIGdyb2VyIFd1bmRlcmhlaXQsIGRlciBpbnRlbGxpZ2VudGVuIEtvbnplcHRpb24gICBlcyBpc3QgZGVyIEF1ZmJhdSB2b24gdmllbGVuIFN0YXVuZW4sIGVyc2NoZWluZW4gd2llIGtzdGxpY2ggTmVzdCBkZXIgSGhsZW5zY2h3YWxiZSEgR2ViYXV0IHZvbiBjaGluZXNpc2NoZW4gRWluZmFsbHNyZWljaHR1bSwgQXJiZWl0c2tyYWZ0IHVuZCBibGVpaGFsdGlnZSBGYXJiZSwgbWFjaHQgZXMgZXJzdGF1bmxpY2ggU3RhbmRvcnQgenUgQmVnaW5uIE9seW1waWEgVmVyYW5zdGFsdHVuZ2VuIUltIEFuc2NobHVzcyB3ZXJkZW4gMTYgVGFnZSB2b24gZWluZXIgZXJzdGF1bmxpY2hlbiBzcG9ydGxpY2hlbiBXZXR0a2FtcGYsIHplaWdlbiBkaWUgYmVzdGVuIGRlciBtZW5zY2hsaWNoZW4gS3JhZnQsIEJld2VnbGljaGtlaXQgdW5kIG1lbnNjaGxpY2hlbiBXYWNoc3R1bXNob3Jtb24hLiAKSW1hZ2luZSBhbGwgdGhlIHBvb3IgcmVkbmVja3MgaW4gdGhlIFVTIGJhY2sgaW4gdGhlIDE5MzBzIHN1ZGRlbmx5IG1vdmluZyBpbnRvIHRoZSBjaXRpZXMgYW5kIGV4cGVyaWVuY2luZyBjaXR5IGxpZmUgZm9yIHRoZSBmaXJzdCB0aW1lLiAKR3Jvd2luZyB1cCBpbiBteSBzbGljZSBvZiBDYWxpZm9ybmlhLCBzY2hvb2xzIHNwZW50IGEgbG90IG9mIG91ciBlbGVtZW50YXJ5IHllYXJzIHRlYWNoaW5nIHVzIGFib3V0IHRoZSBsb2NhbCBOYXRpdmUgQW1lcmljYW4gcG9wdWxhdGlvbi4gCk1lcmlkaWFuIHRoZXJhcGV1dGljIGFwcGFyYXR1cyBpbWl0YXRlcyBtYXNzYWdlLCBhY3VwdW5jdHVyZSwgc2NyYXBpbmcgLGN1cHBpbmcsIGhhbW1lciBraW5kcyBvZiBza2lsbHMgd2l0aCBtYWduZXRpYyB0aGVyYXBldXRpY3MsIGVsZWN0cm90aGVyYXBldXRpY3MgYW5kIGZhciBpbmZyYXJlZCByYXkuIEl0IGFwcGxpZXMgdG8gZmFjaWFsLCBpbXByb3Zpbmcgc2tpbiwgbG9zaW5nIHdlaWdodCwgcmVsYXhhdGlvbiwgcmVwYWlyaW5nIHNjYXIsIG5ldXJhbGdpYSwgbmV1cmFzdGhlbmljLCBtdXNjbGUgcGFpbiwgdGFraW5nIGdvb2QgY2FyZSBvZiBraWRuZXkgYW5kIG92YXJ5LCBhbmQgc28gb24uIFRvIGJlYXV0eSBhbmQgc2xpbSBib2R5IHdlIHVzZSBhY3VwdW5jdHVyZSwgbW94aWJ1c3Rpb24sIG1hc3NhZ2Ugb3IgYXBwYXJhdHVzLiAKQW5kIHRvIHRoZSBleHRlbnQgdGhhdCBzb2x1dGlvbnMgZXhpc3QsIHRoZXkgbXVzdCBiZSBzb2x1dGlvbnMgdGhhdCBhbGxvdyBqb3VybmFsaXNtIHRvIG1vdmUgb3V0c2lkZSBvZiB0aGUgYnJva2VuIHN5c3RlbSB0aGF0IGhhcyBjYXVzZWQgdGhpcyBzaXR1YXRpb24uIFRoaXMgaXMgYSBnbG9iYWwgcHJvYmxlbS4gClRoZSBmaXJzdCBvcHRpb24gd2lsbCBoYXZlIG11Y2ggbW9yZSBmbGV4aWJpbGl0eSBvdmVyYWxsIGFuZCBsZXNzIHJpc2ssIGVzcGVjaWFsbHkgaW4gdGhlIHNob3J0IHRlcm0uIApTbyBnaXZlbiB5b3VyIHJlZ3VsYXIgbWlzdW5kZXJzdGFuZGluZyBvZiB0aGUgZXhhbXBsZSBzY2VuYXJpb3MgYW5kIHlvdXIgYXBwYXJlbnQgZGVzaXJlIHRvIG1ha2UgZWFjaCBvZiB0aGVtIGFzIGNvbXBsaWNhdGVkIGFuZCBsb25nIHdpbmRlZCBhcyBwb3NzaWJsZSAoa2luZGEgZGVmZWF0cyB0aGUgcG9pbnQgb2YgYW4gZXhhbXBsZSkgSSBnb2luZyB0byBoYXZlIHRvIHB1bGwgYmFjayBmcm9tIHRoZW0gYW5kIGp1c3QgdHJ5IGFuZCBmaWd1cmUgb3V0IGV4YWN0bHkgd2hhdCB5b3UgYXJlIHRyeWluZyB0byBzYXksIGJlY2F1c2UgaXQga2VlcHMgY2hhbmdpbmcuIApBcyB5b3UgcmVhY2ggdGhlIHRpcCBvZiBlYWNoIGZpbmdlciwgZ2l2ZSBpdCBhIGxpdHRsZSByb2xsIGJldHdlZW4geW91ciBmaW5nZXJzLiAKSSB0aGluayBvbmUgb3IgdHdvIG1lYWxzIGEgd2VlayBvZiBlYXRpbmcgb3V0IGlzIGEgcmVhc29uYWJsZSB0aGluZyB0byBhaW0gZm9yIHRob3NlIG9mIHVzIHdobyBhcmUgd2VhbmluZyBvZmYuLiAKVGhlIG1hc3NhZ2UgaGVscHMgdG8gc3RpbXVsYXRlIGEgY2hlbWljYWwgcmVzcG9uc2UgaW4gdGhlIGJvZHkgdGhhdCByZWR1Y2VzIHRoZSBjaGFuY2UgZm9yIHRoZSBib2R5IHN1c2NlcHRpYmlsaXR5IHRvIGNvbGRzIGFuZCBzbG93ZXIgcmVjb3ZlcnkgdGltZS4gT25lIG9mIHRoZSBjcnVjaWFsIHdpZGVzcHJlYWQgcmVhc29ucyB0byBzY2hlZHVsZSBhIG1hc3NhZ2UgaXMgdG8gYWxsZXZpYXRlIHRoZSBxdWFudGl0eSBvZiB0ZW5zaW9uIGFuZCBzdHJlc3MgdGhhdCBvbmUgbWlnaHQgZmVlbC4gCiJBcyBwYXJ0bmVycyBpbiBlbnN1cmluZyB0aGUgaGVhbHRoIGFuZCBzYWZldHkgb2YgQ2FuYWRpYW5zLCByZXRhaWxlcnMgYW5kIHJlc3RhdXJhbnRzIHNob3VsZCB0YWtlIGFwcHJvcHJpYXRlIGFjdGlvbiBhcyBwZXIgdGhlIGFkdmljZSBwcm92aWRlZCB0byBDYW5hZGlhbnMgaW4gdGhlIHB1YmxpYyBoZWFsdGggbm90aWNlLCIgYWdlbmN5IHNwb2tlc3dvbWFuIE1hcnlzZSBEdXJldHRlIHNhaWQgaW4gYW4gZW1haWwgc3RhdGVtZW50IFdlZG5lc2RheSBldmVuaW5nLgpMZSAxMiBqYW52aWVyIDIwMTEsIGxhIFByc2lkZW5jZSBkdSBTbmF0IGEgZW5yZWdpc3RyIHVuZSBwcm9wb3NpdGlvbiBkZSBsb2kgcmVsYXRpdmUsIHNlbG9uIHNvbiBpbnRpdHVsLCAgbCdhdHRudWF0aW9uIGRlIHJlc3BvbnNhYmlsaXQgYXBwbGljYWJsZSBhdXggcGVyc29ubmVzIGF0dGVpbnRlcyBkJ3VuIHRyb3VibGUgbWVudGFsIGF5YW50IGFsdHIgbGV1ciBkaXNjZXJuZW1lbnQgYXUgbW9tZW50IGRlcyBmYWl0cyAoUHJvcG9zaXRpb24gZGUgbG9pIG4gMjE3IHNlc3Npb24gMjAxMCAyMDExKS4gCk9vb29oLCBlaW4gaG9jaHdpc3NlbnNjaGFmdGxpY2hlciBWZXJsYWcgbmFtZW5zIEtvcHAgYmVoYXVwdGV0IGV0d2FzISBEYW5uIE1VU1MgZGFzIGphIHN0aW1tZW4uIERhbm4gZGFyZiBtYW4gbmF0cmxpY2gga2VpbmUga3JpdGlzY2hlbiB1ZXJ1bmdlbiBtZWhyIHRyZWZmZW4uIApFYWNoIGRlYWwgaGFzIHNvbWUgcXVhbGl0eSBvZiBzdHJhbmdlbmVzcywgcHJvdmlkaW5nIGNoYWxsZW5nZSwgZW5qb3ltZW50LCBsYXVnaHRlciwgYW5kIHNoZWVyIGVudGVydGFpbm1lbnQuIFNpbmNlIHRoZSAxOTMwcywgYnJpZGdlIGhhcyBiZWVuIHRoZSBtb3N0IHBvcHVsYXIgY2FyZCBnYW1lIGluIHRoZSB3b3JsZC4uIApEZW5zaXR5LCBpdCBtYXkgYWxzbyBiZSByZXF1aXJlZCB0byBwdXNoIG90aGVycyBhd2F5IGluIG9yZGVyIHRvIGJlIGFibGUgdG9JbnRlcmVzdGluZyB0byByZWR1Y2UgaXQgZG93biB0byBhIG1hbnkgcGFydGljbGUgc3lzdGVtIHdoZXJlIHRoZSBwYXJ0aWNsZXMgYXJlIHJhdGlvbmFsIHNlbGYgaW50ZXJlc3RlZCBpbmRpdmlkdWFscyBhY3Rpbmcgb24gbGltaXRlZCBpbmZvcm1hdGlvbgpUaGUgMTh0aCBjZW50dXJ5IEJyaXRpc2ggc3RhdGVzbWFuIEVkbXVuZCBCdXJrZSBbMTcyOSAxNzk3XSB3cm90ZXRoYXQgImdhbWluZyBpcyBhIHByaW5jaXBsZSBpbmhlcmVudCBpbiBodW1hbiBuYXR1cmUiIHlldCB0aGVyZSBhcmV0aG9zZSB3aG8gbWlnaHQgc3RhdGUgdGhhdCB0aGUgd29ybGQgY2FuIGJlIGRpdmlkZWQgaW50byB0d28gdHlwZXMgb2ZwZW9wbGU6IHRob3NlIHdobyBnYW1ibGUgYW5kIHRob3NlIHdobyBkbyBub3QuIApCZWdhbiB3aGF0IHRoZSBVTiByYXBwb3J0ZXVyIGZvciBWZW5lenVlbGEgY2FsbGVkIHNpZWdlcy4gVGhlIEJyaXRpc2ggZ292ZXJubWVudCBoYXMgc2VpemVkIFZlbmV6dWVsYW4gZ29sZCBhc3NldHMuIApXaGF0IC91L211bHRpIG1vZCBhbmQgL3UvWW9zYXJpYW4yIGhhdmUgaXRlcmF0ZWQgYWJvdXQgRGlzY29yZCBkZWNpc2lvbnMgaG9sZCB0cnVlICBubyBsYXJnZSBkZWNpc2lvbnMgd2lsbCBiZSBtYWRlIGluIERpc2NvcmQgdW5sZXNzIHRoaXMgaXMgZGVtb2NyYXRpY2FsbHkgY2hhbmdlZCBpbiB0aGUgL3IvZnV0dXJvbG9neW1vZGVyYXRvcnMgc3ViLiBIb3dldmVyLCB0aGUgaW5zaWdodHMgL3UvY2xlcm90aCBhbmQgL3UvbXZlYSBtYWtlIG11c3QgYmUgY29tbWVuZGVkICB0aGF0IGFjdGlvbnMgd2VyZSB0YWtlbiBmb3IgdGhlIGdvb2Qgb2YgdGhlIHRlYW0sIGluIHRoZSBxdWlja2VzdCBwbGFjZSBwb3NzaWJsZSwgYW5kIG1hZGUgdmlhIHRoZSBjb25zZW5zdXMgb2YgdGhlIG9ubGluZSBtaW5kcyBhdCB0aGUgdGltZSAoNCB2b3RlcyArMSwgdW5hbmltb3VzKS4gVGhlc2UgYWN0aW9ucyBtYWRlIGluIERpc2NvcmQgbXVzdCBhbHNvIGJlIHRha2VuIHdpdGggdGhlIG5vdGUgdGhhdCBubyBzaW5nbGUgbW9kIGZyb20gdGhlIERpc2NvcmQgdm90ZSBwb3N0ZWQgb24gL3IvZnV0dXJvbG9neW1vZGVyYXRvcnMgYWJvdXQgdGhlIGtpY2suLiAKT25lMzBlaWdodCAgNjMgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvCkkgc3RhcnQgYnkgc3RhdGluZyB0aGF0IEkgdGVuZCB0byBlc2NhbGF0ZSBzaXR1YXRpb25zLiBJdCBpbiBteSBhZ2dyZXNzaXZlIG5hdHVyZS4gCkFsc28gZmFsc2UuIEkgY2FyZSBhYm91dCBhbmltYWwgd2VsYmVpbmcuIApZIG5lZWQgdG8gc3RhcnQgYnV5aW5nIGZyb3plbiBwb3JrIGF0IENvc3RjbyBvciBFbWFydCBUcmFkZXJzLiBJdCBsaWtlIGhhbGYgdGhlIHByaWNlIG9mIGZyZXNoLiBBYm91dCA1MDAgNTUwIHdvbi8xMDBnIGZvciBzaG91bGRlci9uZWNrIGFuZCBsaWtlIDY1MCA3MDAgd29uLzEwMCBnIG9mIGJlbGx5LgpUaGV5IGFyZSBpbiBjaGFyZ2UsIHRocm91Z2ggdGhlaXIgZWxlY3RlZCByZXByZXNlbnRhdGl2ZXMgaW4gdGhlIG5hdGlvbmFsIGNvbmdyZXNzLCBvciBhdCBsZWFzdCB0aGF0IHRoZSB0aGVvcnkuIApJIHVzZWQgdG8gd29yayBhdCBhIHB1YiB0aGF0IHdhcyAyIG1pbGVzIGZyb20gbXkgaG91c2UuIE15IHNoaWZ0IGVuZGVkIGF0IGFib3V0IDExIG9uZSBuaWdodC4gSSBzdGF5ZWQgdGhlcmUgZm9yIGEgY291cGxlIG9mIGRyaW5rcywgdGhlbiBzdGFydGVkIHdhbGtpbmcgaG9tZS4gTm93IHRoaXMgaGFkIGJlZW4gYW4gZXhjZXB0aW9uYWwgbmlnaHQgZm9yIG1lIHRpcCB3aXNlLCBhbmQgSSBoYWQgY2xvc2UgdG8gJDQwMCBpbiBjYXNoIG9uIG1lIGF0IHRoZSB0aW1lLiBCZXR3ZWVuIHRoZSBwdWIgYW5kIG15IGhvdXNlIHdhcyBleGFjdGx5IDEgc3RyZWV0IGxpZ2h0IGFib3V0IGEgcXVhcnRlciBtaWxlIGZyb20gdGhlIHB1Yi4gVGhlIHJlc3Qgb2YgdGhlIHdhbGsgd2FzIGluIGNvbXBsZXRlIGRhcmtuZXNzLgpUaGUgc3BhcmtzIHdlcmUgZmx5aW5nIG9uIGhpcyBmaXJzdCBkYXkgdGhyZWUgeWVhcnMgYWdvLiAKUG9vbmNob3cgIDAgcG9pbnRzICBzdWJtaXR0ZWQgNCBob3VycyBhZ28KQnV0IHNoZSBzYWlkIHRoZSBvZmZlbmRlcnMgZWl0aGVyIG9wZW4gdXAgYSBuZXcgYnVzaW5lc3MgdW5kZXIgYSBkaWZmZXJlbnQgbmFtZSBvciBtb3ZlIG91dCBvZiB0b3duLi4gCldlIGRvbiBoYXZlIGV2ZXJ5dGhpbmcgbG9ja2VkIHVwIGJ5IGFueSBtZWFucywgYnV0IHRoZXkgY2FuIGp1c3QgcnVuIHJvdWdoc2hvZCBvdmVyIHVzIGxpa2UgdGhleSBkaWQgaW4gMjAxNi4gVGhlaXIgZGF5IGlzIGRvbmUuLiAKVGhlbiwgcGVvcGxlIHdpbGwgYmUgYWJsZSB0byBnaXZlIHlvdSBtdWNoIG1vcmUgYWNjdXJhdGUgYWR2aWNlLiBSaWdodCBub3cgeW91ciBwb3N0IGNvbWVzIGFjcm9zcyBhcyBhIGJpdCBzaWxseSwgYmVjYXVzZSBpdCBzZWVtcyBsaWtlIHlvdSBhcmUgYW5ncnkgYnV0IG5vdCBnaXZpbmcgYW55b25lIHRoZSBpbmZvcm1hdGlvbiBuZWVkZWQgdG8gaGVscCB5b3UuIE5vdCB0cnlpbmcgdG8gYmUgbWVhbiwganVzdCBsZXR0aW5nIHlvdSBrbm93IHdoeSB5b3UgaGF2ZW4gZ290dGVuIHRoZSB3YXJtZXN0IG9mIHJlcGxpZXMuLiAKSGUgY2FsbHMgQmVnbGVpdGVyICJhIGxvb3NlIGNhbm5vbiIgd2hvIGNvdWxkIGxvc2UgYWxsIG9mIGhpcyBjaGlwcyB0byBTaHVsbWFuIGluIGEgc2luZ2xlIGhhbmQuICJBdCBzb21lIHBvaW50IGhlJ3MgZ29pbmcgdG8gbWFrZSBhIG1pc3Rha2UuIi4gCkJlbG92ZWQgaHVzYmFuZCBvZiB0aGUgbGF0ZSBHbG9yaWEgSmFtaWVzb24gKDIwMDIpLiAKVmVuZG9yY2VudHJhbHVzZXIgIDAgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpUaGlzIHllYXIsIHRoZSBjb21wYW55IGlzIG9wZW5pbmcgYSBuZXcgc3RvcmUgaW4gU2FuIE1hcmNvcywgQ2FsaWYuLCBhbmQgcmVsb2NhdGluZyBhbm90aGVyIHN0b3JlIGluIENhbm9nYSBQYXJrLCBDYWxpZi4KSSB0cnkgdG8gc2NvdXQgYWhlYWQgd2l0aCBhIG1lZGl2YWMgb3IgdmlraW5nIGFuZCBvbmNlIGkgc3BvdCB0aGUgZWRnZSBvZiB0aGUgb3Bwb3NpbmcgdGFuayBsaW5lIHB1dCBpdCBvbiBob2xkIHBvc2l0aW9uLiBBcyBvdGhlcnMgaGF2ZSBzYWlkLCBpZiB5b3UgY2xpY2sgb24gdGhlIGVuZW15IHRhbmtzIHlvdSBjYW4gc2VlIHRoZWlyIHJhbmdlLiBBcyBmb3IgeW91ciBvd24gdGFua3MgcmFuZ2UsIGtlZXAgcGxheWluZyBhbmQgcGF5IGF0dGVudGlvbiB0byBpdCBlYWNoIGdhbWUsIG92ZXIgdGltZSB5b3UgZ2V0IGEgYmV0dGVyIGZlZWwgZm9yIHRoZSBkaXN0YW5jZS4uIApJIHVzZWQgdG8gdGVhY2ggSGVicmV3IHNjaG9vbC4gCkkgc2F3IHRoZSBwYXR0ZXJucyBpbiB0aGlzLiAKU2FpbnQgSmVhbiwgbGVzIHlldXggZW1wbGlzIGQnYW5nb2lzc2UgZmFjZSAgc2VzIHZpc2lvbnMsIGxhIGdvcmdlIGdvbmZsZSBkZSBmb2ksIGxlIGN1ciBhZmZlcm1pIGQnYWJhbmRvbiAgbGEgVm9sb250LCBsJ21lIGJhbGFmcmUgcGFyIGxlIHNvdXJpcmUgRGl2aW4uIE1vbGlyZSwgZ2FudCBkYW5zYW50IGF1IG1pbGlldSBkZXMgbmFpbnMuIApTcGVha2luZyBvZiBmbGF0IGZlbGxlZCBzZWFtcywgZG8gc29tZSBkZW1vcyBvbiB5b3VyIGZhYnJpYyBvZiB3aGV0aGVyIHlvdSB3YW50IHRoZSBmbGF0IGZlbGwgdHlwZSB3aXRoIHR3byByb3dzIG9mIHN0aXRjaGluZywgb3IgdGhyZWUsIG9yIHNlcmdlZCBhbmQgdG9wc3RpdGNoZWQgZmF1eCBmbGF0IGZlbGwsIG9yIHBsYWluIHN0aXRjaGVkIGFuZCBub3QgdG9wc3RpdGNoZWQuIElmIHlvdSBhIGJlZ2lubmVyIHdpdGggdG9wc3RpdGNoaW5nIHRoZW4gSSBoaWdobHkgcmVjb21tZW5kIHlvdSBvbmx5IGRvIGl0IHN0cmF0ZWdpY2FsbHkgYW5kIGRvIGl0IGluIGEgY29sb3IgdGhhdCBtYXRjaGVzIHlvdXIgZmFicmljLiAKSnVzdCBhcyBkZWZpbml0aW9ucyBvZiBoYXBwaW5lc3MgY2hhbmdlLCBzbyB0b28gZG9lcyBvdXIgYWJpbGl0eSB0byBoYW5kbGUgYWR2ZXJzaXR5LiAKSGFkIGp1c3Qgc2VjdXJlZCBhIGRlYWwgd2l0aCBUaGUgQmVlciBTdG9yZSBmb3IgNTAsMDAwIHVuaXRzLCByZXRhaWxpbmcgYXQgJDkuOTkgYXBpZWNlLiAKQnV0IHdoYXQgdGhleSBkb250IGZ1Y2tpbmcgdGVsbCB5b3UuIEkgbGl2ZSBhbG9uZSwgc28gc3dlZXQuIEkgbGV0IHRoZSBob25rIGxvb3NlIGFuZCBpdHMgd3JvbmcuIApUaGlzIHJpZ2h0bHkgbWFkZSBwZW9wbGUgZnVyaW91cywgaXQgd2FzIG9uZSBvZiB0aGUgbWFpbiByZWFzb25zIHRoYXQgd2FyIHZldGVyYW5zIHB1YmxpY2x5IHByb3Rlc3RlZCBhZ2FpbnN0IHRoZSB3YXIuIApXaHkgc2hlIHdhcyBzbyBnb2RkYW1uIG1lYW4uIFdoeSBzaGUgaGFkIGFsbCB0aG9zZSBob3JyaWJsZSBlcGlzb2Rlcy4gCiJJcyB0aGF0IGNhbmR5PyIgLCAiTm8/IiAiV2hhdCBpcyBpdD8iICJFcmFzZXI/IiwgIk9oLCBmb3IgbWU/IiAsIGV0Yy4uIApQbGVhc2UgdHJ5IG5vdCB0byBjbGFpbSB5b3UgZG8gd2hlbiB5b3UgZG8gbm90IGFzIGl0IG9ubHkgaHVydHMgdGhlIGJyZWVkKHMpIG9mIGRvZyB0aGF0IGNlcnRhaW4gcGVvcGxlLCBjZXJ0YWluIGxhdyBlbmZvcmNlbWVudCBtZW1iZXJzIGFuZCBtZWRpYSBhZ2VuY2llcyBtaXNyZXByZXNlbnQgb24gdGhlIGRhaWx5LiBJdCBpcyBhYnNvbHV0ZWx5IGhlYXJ0YnJlYWtpbmcgYW5kIGJleW9uZCB1bmZhaXIgdG8gYWxsb3cgdGhpcyB0byBoYXBwZW4gYmVjYXVzZSBpdCBvbmx5IGxlYWRzIHRvIHRoZSBoYXRlLCBmZWFyIG1vbmdlcmluZywgYmlhcyBhbmQga2lsbGluZyBvZiB0aGVzZSBiZWF1dGlmdWwgYW5pbWFscywgYW5kIHRoYXQncyBORVZFUiBvay4gCk9uY2UgdGhhdCBpcyB1bmRlcnN0b29kLCB0aGUgc2FtZSBtb2RpZmljYXRpb25zIGNhbiBwb3RlbnRpYWxseSBiZSBhcHBsaWVkIHRvIG1hbnkgZGlmZmVyZW50IHN0cmFpbnMgb3IgZXZlbiBzcGVjaWVzLCBtZWFuaW5nIHRoZXJlIGNvdWxkIGJlIGdyZWF0ZXIgZGl2ZXJzaXR5IHRoYW4gd2hlbiBhIHN0cmFpbiBoYXMgYmVlbiB0cmFkaXRpb25hbGx5IGJyZWQuIApTZXJ2aWNlIFByb3ZpZGVycy4gClRoZSBkYW5jZXJzIHdlcmUgZGVmaW5pdGVseSB0aGUgd29yc3QgcGFydCBvZiBpdC4gClRydW1wIHBhcmRvbnMgc29tZSBjcm9vayBvciBhbm90aGVyCkFzIG91ciBzdGF5IGF0IHRoaXMgcGxhY2Ugd2FzIG5vdCBsaWtlbHkgdG8gYmUgdmVyeSBzaG9ydCwgSSB0aG91Z2h0IGl0IHZlcnkgbmVjZXNzYXJ5IHRoYXQgc29tZSBvcmRlciBzaG91bGQgYmUgb2JzZXJ2ZWQgaW4gVHJhZmlja2luZyB3aXRoIHRoZSBOYXRpdmVzLCB0aGF0IHN1Y2ggTWVyY2hhbmRpemUgYXMgd2UgaGFkIG9uIGJvYXJkIGZvciB0aGF0IHB1cnBvc2UgbWlnaHQgY29udGludWUgdG8gYmVhciBhIHByb3BlciB2YWx1ZSwgYW5kIG5vdCBsZWF2ZSBpdCB0byBldmVyeW9uZSdzIG93biBwYXJ0aWN1bGFyIGZhbmN5LCB3aGljaCBjb3VsZCBub3QgZmFpbCB0byBicmluZyBvbiBDb25mdXNpb24gYW5kIFF1YXJyZWxzIGJldHdlZW4gdXMgYW5kIHRoZSBOYXRpdmVzLCBhbmQgd291bGQgaW5mYWxsaWJseSBsZXNzZW4gdGhlIHZhbHVlIG9mIHN1Y2ggQXJ0aWNsZXMgYXMgd2UgaGFkIHRvIHRyYWZpY2sgd2l0aC4gClRoZXJlIGFyZSBzbyBtYW55IHRoaW5ncyBhYm91dCB0aGF0IGxpdHRsZSBzY3JlZWQgdGhhdCBhcmUgZGVyYW5nZWQgYW5kIHdyb25nIHRoYXQgSSBjYW4gb25seSBtdXN0ZXIgYSBkZWVwIHNlbnNlIG9mIHBpdHkgZm9yIHRoZSBwZXJzb24gd2hvIHdyb3RlIGl0LiBJIHdvdWxkIHN1Z2dlc3QgcHN5Y2hpYXRyaWMgaGVscCwgcGVyaGFwcyBhIGxvYm90b215OyBoZXJlLCBsZXQgbWUgcGVyZm9ybSBpdCBteXNlbGYsIEkgd29uIGZvcmdldCB0byBzdGVyaWxpemUgdGhlIGJhc2ViYWxsIGJhdC4KU29sbHRlbiB3aXIgRnJhdWVuIG5pY2h0IGVpZ2VudGxpY2ggdmVyc3VjaGVuLCB1bnMgZ2VnZW5zZWl0aWcgenUgdW50ZXJzdHR6ZW4sIGFuc3RhdHQgdW5zIHdlZ2VuIHNvbGNoZXIgT2JlcmZsY2hsaWNoa2VpdGVuIGdlZ2Vuc2VpdGlnIGZlcnRpZyB6dSBtYWNoZW4/IEljaCBociBkYXMgaW1tZXIgd2llZGVyLCBhdWNoIGJlaSBhbmRlcmVuIFRoZW1lbiAoIldvdywgd2llIGthbm4gc2llIG51ciBpbiBkZXIgZmZlbnRsaWNoa2VpdCBlaW5lIEpvZ2dpbmdob3NlIHRyYWdlbj8iIE9kZXIgInNpZSBnaWJ0IHNpY2ggamEgZ2Fya2VpbmUgbWhlLCBhdWYgZGVyIHZlcmFuc3RhbHR1bmcgbGV0enRlcyBXb2NoZW5lbmRlIHdhciBzaWUgbmljaHRtYWwgZ2VzY2htaW5rdCEiIFNpbmQgbnVyIGVpbmlnZSBiZWlzcGllbGUpLiBNYWNodCBtaWNoIGlyZ2VuZHdpZSB0cmF1cmlnLCBkYXNzIHNjaGVpbmJhciB2aWVsZSBzbyBkZW5rZW4uIDY5IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KSSBzaGFyZWQgdGhlIHBvc3QgdG8gbXkgRmFjZWJvb2sgcGFnZS4gSSBob3BlIGhlIGlzIGZvdW5kLCBzb29uLiAKRmxpY2sgdGhlIHRpcCBvZiB5b3VyIHRvbmd1ZSByYXBpZGx5IG92ZXIgdGhlIG9wZW5pbmcsIG9yIHRyeSBpbnNlcnRpbmcgeW91ciB0b25ndWUgYXMgZmFyIGFzIGl0IHdpbGwgZ28gcHVzaGluZyBhbmQgc3Ryb2tpbmcgaXQgYmFjayBhbmQgZm9ydGguIFRyeSBicnVzaGluZyB5b3VyIGxpcHMgb3ZlciB0aGUgc3BvdCBvciBzdWNraW5nIGhhcmQgb24gdGhlIGFudXMuLiAKRXZlbiB3aXRoIEhpbGxhcnksIG5vYm9keSBkb3VidGVkIGlmIGl0IGNhbWUgZG93biB0byBpdCBzaGUgY291bGQgKGFuZCBtb3N0IGxpa2VseSB3b3VsZCkgbWFrZXMgaGF3a2lzaCBkZWNpc2lvbi5JIGRvbid0IHRoaW5rIHdlIGNhbiBoYW5kbGUgYW5vdGhlciBwcmVzaWRlbmN5IHdoZXJlIHRoZSBVUyBpcyBjb25zdGFudGx5IGdpdmluZyB1cCBpbmZsdWVuY2UgYW5kIHBvd2VyIGluIG11bHRpcGxlIGdsb2JhbCBzcGhlcmVzIG9mIGluZmx1ZW5jZS4gVGhhdCdzIHdoeSBJJ20gbmVydm91cyBhYm91dCBCZXJuaWUgdG9vLiBCdXQgSSd2ZSBiZWVuIHdyb25nIGJlZm9yZSwgYW5kIEknbGwgYmUgd3JvbmcgYWdhaW4uIAoiRXZlbiBpZiB0aGVyZSBpcyB0cnV0aCB0byAieW91IHdpbGwgZmFpbCBhdCB3aGF0ZXZlciB5b3UgZG8geW91IGEgdHJhaW53cmVjayIgd2hpY2ggaXMgbm90IHRydWUgQXMgZm9yIHdobyBoZSBzYWlkIGl0IHRvLCBJIHRoaW5rIGlmIHNvbWVvbmUgYXR0ZW1wdGVkIHN1aWNpZGUsIGl0IGV2ZW4gbW9yZSBpbXBvcnRhbnQgdG8gc2F5IGl0IHRvIHRoZW0uIFdhbGtpbmcgYXJvdW5kIHRoaW5raW5nIHRoZXkgd291bGQgYmUgaGFwcHkgaWYgdGhleSBoYWQganVzdCBuZXZlciBwbGF5ZWQgcG9rZXIsIGNhbiBtYWtlIHRoZW0gZmVlbCByZWFsIHNoaXR0eSwgYW5kIHRyeWluZyB0byBjb3BlIHdpdGggdGhvc2UgZmVlbGluZ3MgY2FuIGxlYWQgdG8gbmV3IGFkZGljdGlvbiBwcm9ibGVtcy4KRWFjaCBjb3VudHJ5J3MgZmlyc3QgZm91ciBwbGF5ZXJzIGhhdmUgYmVlbiByZWxlYXNlZCwgd2l0aCBhIGZpZnRoICJ3aWxkY2FyZCIgc3BvdCB0byBiZSBmaWxsZWQgaW4gdGhlIG5lYXIgZnV0dXJlLiBBbW9uZ3N0IHRob3NlIHdobyB3aWxsIGxlYWQgdGhlaXIgbmF0aW9ucyB0aGlzIE1hcmNoIGFyZSAyMDEwIFdvcmxkIFNlcmllcyBvZiBQb2tlciBNYWluIEV2ZW50IENoYW1waW9uIEpvbmF0aGFuIER1aGFtZWwgKENBTiksIGZvcm1lciBXb3JsZCAxJ3MgRGFuIFNtaXRoIChVU0EpIGFuZCBNYXJ2aW4gUmV0dGVubWFpZXIgKEdFUiksIFVTIHZldGVyYW4gYW5kIFdvcmxkIFBva2VyIFRvdXIgQWxwaGE4IGFuYWx5c3QgT2xpdmllciBCdXNxdWV0IChVU0EpIGFuZCBPbGUgU2NoZW1pb24gKEdFUiksIGN1cnJlbnRseSByYW5rZWQgMSBvbiB0aGUgR1BJIFdvcmxkIFBva2VyIFJhbmtpbmdzLi4gCkFuZCBubywgSSBkaXNhZ3JlZS4gY2l0aXplbnMgKGluY2x1ZGluZyBhIG1pbm9yKSB3aXRob3V0IHRyaWFsIGFuZCBEb25uaWUgc2hvdWxkIGdldCB0aGUgc2FtZSBmb3Igd2hlbiBoZSBkaWQgaXQuIGNpdGl6ZW4sIHlvdSBoYXZlIGEgQ29uc3RpdHV0aW9uYWwgcmlnaHQgdG8gYSB0cmlhbC4gSXQgZG9lc24ndCBtYXR0ZXIgaG93IGhlaW5vdXMgdGhlIGNyaW1lcyB5b3UndmUgYmVlbiBhY2N1c2VkIG9mLCB5b3UgZ2V0IGEgdHJpYWwuIFRoZXJlJ3Mgbm8gIm91ciBnb3Zlcm5tZW50IGNsYWltcyB5b3UgaGFuZyB3aXRoIGEgYmFkIGNyb3dkICh3aXRob3V0IHByb3ZpbmcgaXQpIiBleGNlcHRpb24gaW4gdGhlIEJpbGwgb2YgUmlnaHRzLgpTaW1pbGFyIHN0b3J5LiBBIGJ1ZGR5J3MgZ3JhbmRwYSB3YXMgYSB0cnVlIGdvb2Qgb2wgYm95IGhlcmUgaW4gdGhlIERlZXAgU291dGguIFNvbWUgaGlnaCBzY2hvb2wga2lkcyB0aG91Z2h0IGl0IHdvdWxkIGJlIGZ1biB0byBkcml2ZSB0aGVpciB0cnVjayBkb3duIHRoZSBzdHJlZXQgdGFraW5nIHR1cm5zIHdpdGggb25lIHN0YW5kaW5nIGluIHRoZSBiYWNrIG9mIHRoZSB0cnVjayBhbmQgd291bGQgc3dpbmcgYSBtZXRhbCBiYXQgYXQgbWFpbGJveGVzIChpdCB0b29rIHNvbWUgY29vcmRpbmF0aW9uKS4uIApJbnN0ZWFkIG9mIGxvbmcgc3RpbnRzIGluIHRoZSBneW0gYW5kIG1pbGVzIG9mIHJ1bm5pbmcgaW4gdGhlIGNvbGQsIHRoZSBzYW1lIHJlc3VsdHMgY291bGQgYmUgYWNoaWV2ZWQgaW4gbGVzcyB0aGFuIGEgdGhpcmQgb2YgdGhlIHRpbWUsIGFjY29yZGluZyB0byBuZXcgcmVzZWFyY2ggcHVibGlzaGVkIEZlYnJ1YXJ5IDEgaW4gVGhlIEpvdXJuYWwgb2YgUGh5c2lvbG9neS4KSSB0aGluayBtYW55IGdhbWVycyBhcmUgdG9vIHlvdW5nIHRvIHJlbWVtYmVyIG9yIHRvIGJlIGF3YXJlLiBPZnRlbiBpdCB3YXMgZXZlbiBhbm90aGVyIGZldyB3ZWVrcyBvciBtb250aHMgYmV0d2VlbiB0aGUgVVMgYW5kIEVVIHJlbGVhc2UuTW9zdCBjb25zb2xlcyBhbmQgaGFuZGhlbGRzIHdlcmUgYWxzbyByZWdpb24gbG9ja2VkLCBzbyB5b3UgY291bGRuIGV2ZW4gZ28gYWhlYWQgYW5kIGltcG9ydCBhbnkgb3RoZXIgcmVnaW9uIHZlcnNpb24gdW5sZXNzIHlvdSBoYWQgYSBtb2RpZmllZC91bmxvY2tlZCBjb25zb2xlIG9yIHNvbWUgd29ua3kgcHJlIGxvYWRlciBzb2Z0d2FyZSB0aGF0IGRpZG4gYWx3YXlzIHdvcmsuSXQgbXVjaCBlYXNpZXIgbm93YWRheXMgKGV4Y2VwdCBjdXJyZW50IE5pbnRlbmRvIHByb2R1Y3RzLikgYW5kIEkgc3RpbGwgZmVlbCBzbyBzcG9pbGVkIGJ5IHNpbXVsdGFuZW91cyB3b3JsZHdpZGUgcmVsZWFzZXMuIExvdmUgaXQhIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ29JIGRvbiB0aGluayBpdCBlbnRpcmVseSB2YWxpZCBjb21wYXJpbmcgaXQgdG8gdmFuaWxsYSBLSDIgYmVjYXVzZSB0aGUgRk0gZXhpc3RzIGFuZCB0aGV5IGNvdWxkIHVzZWQgdGhlc2UgaWRlYXMgZnJvbSB0aGUgZ2V0IGdvIGluIEtIMy4gCklmIHlvdSBkbyBjaG9vc2UgdG8gcGxheSBGYWxsb3V0IGFuZCBoYXZlbiBwbGF5ZWQgYW55IG9mIHRoZSBwcmV2aW91cyBnYW1lcywgSSB3b3VsZCByZWNvbW1lbmQganVzdCBqdW1waW5nIGludG8gRmFsbG91dCA0LiBJIGtub3cgaXQgYSBoaWdobHkgZGViYXRlZCBob3QgdG9waWMgYW5kIGJvdGggYXJlIGEgbG90IG9mIGZ1biwgYnV0IDQgd29ybGQgaGFzIG11Y2ggbW9yZSB0byBleHBsb3JlIGFuZCBpcyBtb3JlIGRlbnNlbHkgcG9wdWxhdGVkIHdpdGggc29tZSB2ZXJ5IGZ1biBxdWVzdHMuIFRoZSBtYWluIHN0b3J5IGNvdWxkIGhhdmUgYmVlbiBiZXR0ZXIsIGJ1dCBJIHRoaW5rIGl0IGhhZCBhIGNvdXBsZSBvZiB0d2lzdHMgdGhhdCBzdXJwcmlzZWQgbWUgdGhlIGZpcnN0IHRpbWUgdGhyb3VnaC4gClRoaXMgaXMgdGhlIGdlbmVyYWxseSBhIHNvbGlkIHN0cmF0ZWd5IHRvIGJlYXQgbWljcm9zLiBKdXN0IGtlZXAgcHV0dGluZyBpbiB0aGUgaG91cnMgdGlsIDEwMEsgaGFuZHMsIGFuZCB5b3Uga25vdyB3aGVyZSB5b3Ugc3RhbmQuIApHdWl0ZSBsb3ZlZCByZXRpcmVtZW50LCB0aGUgRHVrZSBCbHVlIERldmlscywgdGhlIFlhbmtlZXMsIGhlbHBpbmcgd2l0aCB0aGUgSHVjayBGaW5uIFRlbm5pcyBUb3VybmFtZW50IGFuZCBwbGF5aW5nIHdpdGggaGlzIG1lbidzIG1vbnRobHkgcG9rZXIgZ3JvdXAuIApJIHdhcyBleHRyZW1lbHkgdW5jb21mb3J0YWJsZSBhbmQgaGF2aW5nIGEgc2xpZ2h0IHBhbmljIGF0dGFjayBzaW5jZSBJIHdhcyB3b3JyaWVkIHRoaXMgd291bGQgZXNjYWxhdGUgZnVydGhlciwgYW5kIGRpZG4ga25vdyBob3cgdG8gZ2V0IG91dCBvZiB0aGlzLiAKSnVkZ2luZyBieSB0aGVpciAyMDE2IHJ1biByZWNvcmRzLCB0aGUgZ2FtZSBoYXNuJ3QgZWl0aGVyIGFueSBoYXJtLi4gCkNvbmNyZXRlIGlzIG5vdCBhIGZvcmdpdmluZyBzdXJmYWNlLiAKTXVjaCBvZiB0aGlzIHdvcmsgZHJhd3MgdXBvbiBzdGFuZGFyZCBhbmltYWwgYmVoYXZpb3JhbCB0ZXN0cyB0aGF0IG1lYXN1cmUgYWN0aXZpdHksIGFwcHJvYWNoLCBhbmQgYXZvaWRhbmNlLiAKVGhlIFBTQSBhbmQgS2lhIHBsYW50cyBjYW1lIGFmdGVyIFNsb3Zha2lhIChhbmQgbmluZSBvdGhlciBjZW50cmFsIG9yIE1lZGl0ZXJyYW5lYW4gY291bnRyaWVzKSBqb2luZWQgdGhlIEVVIGluIDIwMDQuIExpa2UgUG9sYW5kLCBIdW5nYXJ5IGFuZCB0aGUgQ3plY2ggUmVwdWJsaWMsIFNsb3Zha2lhIGVhcm5zIGF1dG9tb3RpdmUgaW52ZXN0bWVudCB3aXRoIGdlb2dyYXBoaWNhbGx5IHByb3hpbWl0eSB0byBXZXN0ZXJuIEV1cm9wZSwgcmVhbGx5IGxvdyB3YWdlIHJhdGVzLCBwYXlpbmcgbWFudWZhY3R1cmVycyB0aGUgYmlnZ2VzdCBpbmNlbnRpdmVzIHRoZSBFVSB3aWxsIGFsbG93IHRvIHJlbG9jYXRlLCBhbmQgYnVpbGRpbmcgcm9hZHMsIHJhaWx3YXlzIGFuZCBwb3dlciBncmlkcyBsaWtlIG1hZC4gQW5kIHRoZSBmb3JtdWxhIHN0aWxsIG9ubHkgd29ya3MgYmVjYXVzZSBldmVyeXRoaW5nIFNsb3Zha2lhIGRvZXMgaXMgZXVybyBkZW5vbWluYXRlZC4uIApJbiByZWFsIHRpbWUsIGl0IHRha2VzIGFib3V0IGFuIGhvdXIgZm9yIHRocmVlIGRheXMgaW4gdGhlIGdhbWUgdG8gcGFzcy4gCkNpcmNsZWplcmsgbXVzdCBiZSBsZWFraW5nLiAKUGlsb3Qgc3R1ZHkgb2YgbWFzc2FnZSBpbiB2ZXRlcmFucyB3aXRoIGtuZWUgb3N0ZW9hcnRocml0aXMuIEogQWx0ZXJuIENvbXBsZW1lbnQgTWVkLCAyMSg2KSwgMzMzIDMzOC4gClVuZm9ydHVuYXRlbHksIHRoZSBmcmVlZG9tIHRoYXQgbW9zdCBvZiB1cyBlbmpveWVkIGFzIGtpZHMgICBmcmVlZG9tIHRvIGV4cGxvcmUsIGltcHJvdmlzZSwgc2N1ZmZsZSBhbmQgc2NyYXBlIG91ciBrbmVlcyAgIG5vIGxvbmdlciBleGlzdHMuIEZvciBteXJpYWQgcmVhc29ucywgdG9kYXkncyBwYXJlbnRzIGFyZSB0b28gd29ycmllZCB0byBsZXQgY2hpbGRyZW4gaGF2ZSB0aGUga2luZHMgb2YgZXhwZXJpZW5jZXMgdGhhdCBtb3N0IG9mIHVzIHRvb2sgZm9yIGdyYW50ZWQuIApUaGVyZSdzIGEgbXl0aCB0aGF0IGFueSByZWd1bGF0aW9uIG9yIHB1bmlzaG1lbnQgb2YgdGhlIGZyZWUgbWFya2V0IGlzIGV2aWwgY29tbXVuaXNtIHdoaWNoIGRlc3Ryb3lzIGpvYnMsIGFuZCB0aGF0IGZyZWUgbWFya2V0cyBhcmUgdGhlIGJlc3QgdGhpbmcgdGhhdCBjb3VsZCBoYXBwZW4gdG8geW91ciBldmVyeWRheSBwZXJzb24uIEkgbWVhbiwgaXQncyB0cnVlIHRoYXQgYWJzb2x1dGUgc3RpZmxpbmcgcmVndWxhdGlvbnMgY2FuIGN1cmIgYnVzaW5lc3MgcHJvZml0cywgYnV0IHdlIGRvbid0IG5lZWQgc3RpZmxpbmcgcmVndWxhdGlvbnMsIHdlIG5lZWQgY29tbW9uIHNlbnNlICJpZiB5b3UgZG8gdGhpbmdzIHRoYXQgYWJzb2x1dGVseSBkZXN0cm95IHRoZSBlbnZpcm9ubWVudCB3aXRoIG5vIHJlZ2FyZCB0byBkZWNlbmN5LCB5b3Ugd2lsbCBiZSB0cmVhdGVkIGFjY29yZGluZ2x5IiByZWd1bGF0aW9ucy4uIApTaGUgbG9va2VkIGEgbG90IGJldHRlciBpbiB0aGUgZmlzaGJvd2wgdGhhbiB1cCBjbG9zZSwgYnV0IHRoYXQgbm90IHRvIHNheSBzaGUgd2FzIGF0IGFsbCB1bmF0dHJhY3RpdmUuIApOb3QgdGhlIGFsbWlnaHR5IHJ1cGVlLCBidXQgdGhlIGFsbWlnaHR5IGRvbGxhci4gCkFuZCBJIHdhcyBvdmVyIGl0LiIuIApJIHRoaW5rIGV2ZXJ5b25lIGNhbiBhZ3JlZSB0aGF0IG1hc3NhZ2UgdGhlcmFweSBkb2VzIHRoYXQuIE1vc3Qgb2YgeW91ciBjbGllbnRzIHdvbiB3YW50IHRvIGNoYXQgd2l0aCB5b3UgYWJvdXQgd2hhdCB5b3UgZG9pbmcsIHRoZXkganVzdCB3YW50IHRvIHJlbGF4LiAKKEZ1bGwgQW5zd2VyKS4gCiJJIGRvbid0IHdhbnQgdG8gbWFrZSBhbiBhc3N1bXB0aW9uIGJlY2F1c2UgYW4gaW52ZXN0aWdhdGlvbiBpcyBvbmdvaW5nLiJDb3VuY2lsbWFuIEFhcm9uIEJyb2NrZXR0IGFza2VkIGFib3V0IHRoZSBzdGF0dXMgb2YgZGF0YSB0aGUgZGVwYXJ0bWVudCBpcyBjb2xsZWN0aW5nIGluIGEgcmV2aWV3IG9mIGJpYXMgaXNzdWVzLlRlc3RhIHNhaWQgYSByZXBvcnQsIGJhc2VkIG9uIHRoZSBwYXN0IDEyIG1vbnRocyB3b3J0aCBvZiBkYXRhIGNvbGxlY3Rpb24sIGlzIGR1ZSB0byBiZSBwdWJsaXNoZWQgbmV4dCBtb250aC5UaGUgaW5jaWRlbnQgYWxzbyB3YXMgdGhlIHN1YmplY3QgZGlzY3Vzc2lvbiBkdXJpbmcgdGhlIG9wZW4gY29tbWVudCBwZXJpb2QuIApJIHBvaW50ZWQgb3V0IEVsaXphYmV0aCBEYWx0b24gaXMgb25lIG9mIHRoZSBncnViYnkgRXNvdGVyaWMgQnJlYXN0IE1hc3NhZ2Vycy4gSGFtaXNoIEJyb29tZSBhc2tlZCBtZSBuYW1lcyBhbmQgY29udGFjdCBkZXRhaWxzIG9mIG90aGVyIHZpY3RpbXMuIApJIGxpZnQgYSBiaXQgb2Ygd2VpZ2h0IGJ1dCBtb3N0bHkgc3RpY2sgdG8gYm9keSB3ZWlnaHQgc3R1ZmYsIEkgZG8gY2FyZGlvIGJ1dCBtYXliZSBJIHNob3VsZCBkbyBtb3JlIG9mIHRoYXQ/IChJIHJ1biBvbiB0aGUgZWxsaXB0aWNhbCBmb3IgYWJvdXQgMTAgMTUgbWludXRlcykgZWF0aW5nIHJpZ2h0IGhhcyBiZWVuIGEgc3RydWdnbGUgYnV0IEkgY2FuIHNhZmVseSBzYXkgSSBlYXRpbmcgcHJldHR5IGhlYWx0aHkhIEkgY2FuIHNheSB0aGF0IEkgaGF2ZW4gbG9zdCB3ZWlnaHQgYnV0IEkgY2FuIGFsc28gc2F5IEkgaGF2ZW4gZ2FpbmVkIHdlaWdodCBlaXRoZXIuIApCdW5kbGUgdXAgaWYgeW91IHBsYW4gb24gcmlkaW5nIGFzIHRlbXBlcmF0dXJlcy93aW5kIGNoaWxscyBhcmUgc3VwcG9zZWQgdG8gYmUgYmVsb3cgemVyby4gRG9uIGZvcmdldCB0byBzdG9wIGFuZCBzaGFyZSBhIGhvdCBkb2cgb24gdGhlIHRyYWlsIHdpdGggdXMgU2F0dXJkYXkgd2hpbGUgdGhlIHBva2VyIHJ1biBpcyBnb2luZyBvbi4gCkkgd2FudCB0byBncm93IHVwIHRvIGJlIGFuIG9sZCB3b21hbiB3aG8gZHJlc3NlcyBqdXN0IGxpa2UgaGVyIGFuZCBkb2VzIHRoYXQgc3RpZmYgd2F2ZSBvZiB0aGUgaGFuZCB0byBteSBhZG9yaW5nIHN1YmplY3RzLiAKT3IgcGVyaGFwcyBwYXJ0IG9mIHRoZSBraW5rIGlzIHRoZSBtYXNzYWdlIHBhcmxvciBwcmV0ZW5zZS4gCkV2ZW4gd2l0aCBiZWluZyBmdWxsIHRpbWUsIGl0IHRha2VuIGhpbSBxdWl0ZSBhIGJpdCBvZiB0aW1lIGFuZCBvdXIgdGVhbSBzdGlsbCBoYXMgdG8gY3JlYXRlIHRoZSB0aWNrZXRzIHVzaW5nIHRoZSBzY3JpcHRzIEkgd3JvdGUgYSB3aGlsZSBhZ28uLiAKVGhlIGlkZWFsIHNpdHVhdGlvbiBpcyB0byBmaW5kIHNvbWVvbmUgeW91IG9yIHlvdXIgZnJpZW5kcyBrbm93IGFuZCBjYW4gdm91Y2ggZm9yLiAKSXQncyBXZWRuZXNkYXkgbmlnaHQsIGFuZCBJIGNhbid0IGhlbHAgYnV0IGZpZGRsZSB3aXRoIG15IGdyb3dpbmcgaG9hcmQgb2YgY2hpcHMuIEl0J3Mgb25lIG9mIHRoZSBtb3N0IGJhc2ljIHBva2VyIHJpdHVhbHMgICB0YWtlIHR3byBldmVuIHN0YWNrcyBvZiBhYm91dCBmaXZlIGNoaXBzLCB1c2UgdHdvIGZpbmdlcnMgdG8gbGlmdCB1cCBvbmUgc3RhY2sgYW5kIG5lYXRseSBzbGlkZSB0aGUgb3RoZXIgaW50byBpdC4gCklmIHlvdSdyZSBmbHlpbmcgZHVyaW5nIHRoZSBkYXksIHRoZSBuZXh0IHN0ZXAgaXMgc3VuIHByb3RlY3Rpb24uICJQaWxvdHMgYXJlIGF0IGhpZ2hlciByaXNrIG9mIHNraW4gY2FuY2VyIHRoYW4gYW55IHByb2Zlc3Npb24gb24gdGhlIHBsYW5ldCwiIHNheXMgTllDIGRlcm1hdG9sb2dpc3QgRHIuIERlbmR5IEVuZ2VsbWFuLCB3aG8gbm90ZXMgdGhhdCBVViByYXlzIGFyZSBzaWduaWZpY2FudGx5IHN0cm9uZ2VyIGF0IGhpZ2ggYWx0aXR1ZGUuIFNoZSByZWNvbW1lbmRzIGFwcGx5aW5nIGEgemluYyBiYXNlZCBzdW5zY3JlZW4gYmVmb3JlIGZseWluZywgYW5kIGNob29zaW5nIHlvdXIgc2VhdCBjYXJlZnVsbHk6IEVuZ2VsbWFuIGJvb2tzIGFuIGFpc2xlIHNlYXQgdG8gYXZvaWQgZGlyZWN0IGNvbnRhY3Qgd2l0aCBpbmNvbWluZyByYXlzLCB3aGlsZSBSb3VsZWF1IHNlbGVjdHMgYSB3aW5kb3cgc2VhdCBzbyBzaGUgY2FuIGNsb3NlIHRoZSBzaGFkZS4gU2hlIHN1Z2dlc3RzIGEgY2hlbWljYWwgZXhmb2xpYW50IHdpdGggaW5ncmVkaWVudHMgc3VjaCBhcyBsYWN0aWMgYWNpZCwgZm9sbG93ZWQgYnkgYSBtYXNrLiBPbmNlIHlvdSd2ZSBzdHJpcHBlZCBvZmYgdGhlIHBsYW5lIGdyaW1lLCBmZWVsIGZyZWUgdG8gbW9pc3R1cml6ZS4KVG9tcGtpbnNlZGl0aW9uICA5IHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkkga25vdyBmb3IgbXkgc2lzdGVyLCBhbmQgcHJvYmFibHkgZm9yIHRoZSB3b21hbiBpbiB0aGUgdmlkZW8gdGhlcmUgaXMgdXN1YWxseSBhIGxvbmcgYnVpbGQgdXAgb2YgZnJ1c3RyYXRpb24gdGhhdCBnb2VzIHVucmVjb2duaXplZCBiZWZvcmUgeW91IHNlZSBzb21ldGhpbmcgbGlrZSB0aGlzLiBIZXIgZ2FyYmFnZSBoYXMgbm90IGJlZW4gcGlja2VkIHVwIGFzIHNoZSBleHBlY3RlZCBmb3Igd2Vla3MsIGEgbWlub3IgYW5ub3lhbmNlIGZvciB1cywgYnV0IHF1aWNrbHkgYmVjb21pbmcgdGhlIGVudGlyZSBmb2N1cyBvZiBoZXIgbGlmZS4gCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gS1EsIHBhaXJzLCBzdWl0ZWQgY29ubmVjdG9ycykuIFNvIHRoZW4gd2hhdCBoYXBwZW5zIHdoZW4gdGhlIGZsb3AgY29tZXMgQTkzLCBvciBBSjcgKHRoZXNlIGtpbmRzIG9mIGZsb3BzIGhhcHBlbiBmYWlybHkgb2Z0ZW4sIGFuZCBhcmUgcHJldHR5IGNsb3NlIHRvIHlvdXIgYmVzdCBjYXNlIGZsb3Agd2l0aCBhIGhhbmQgbGlrZSBBOG8pPyBZb3UgaGF2ZSB0b3AgcGFpciBidXQgeW91ciBoYW5kIHJlYWxseSBpc24gdGhhdCBzdHJvbmcuIFlvdXIgb3Bwb25lbnQgbGlrZWx5IHdvbiBwdXQgYW55IG1vcmUgbW9uZXkgaW50byB0aGUgcG90IHVubGVzcyB0aGV5IGhhdmUgYW4gYWNlIHRoYXQgYmVhdHMgeW91LCBzbyB5b3UgcmlzayBsb3NpbmcgbW9yZSB0aGFuIHlvdSBleHBlY3QgdG8gZ2FpbiB3aGVuIHlvdSBwbGF5IGEgaGFuZCBsaWtlIEE4LiBLNyBpcyBhbHdheXMgYSBmb2xkLCBmb3IgdGhlIHNhbWUgcmVhc29uLiBvbmVzIHRoYXQgYXJlIGxpa2VseSB0byBoYXZlIGEgaGlnaGVyIGtpY2tlciB0aGFuIHdoYXQgeW91ciBvcHBvbmVudCBsaWtlbHkgaGFzLCBvciBhcmUgYWltaW5nIHRvIGhpdCBkaWZmZXJlbnQgdHlwZXMgb2YgYm9hcmRzIGFzIHlvdXIgb3Bwb25lbnQpLgpJdCBhcHBlYXJzLiBJdCBjb21lcyBiYXJyZWxpbmcgdG93YXJkIHRoZW0gYmVmb3JlIHN0b3BwaW5nIGRpcmVjdGx5IGluIGZyb250IG9mIGhlci4gSXQgaXMgYSA0MGZ0IGxvbmcgY3JvY29kaWxlIHRoYXQgaGFzIGxpdmVkIGluIHRoZSBzd2FtcCBmb3IgYWdlcy4gCkkgaGF2ZSBub3RpY2VkIGl0IGJlaW5nIHZlcnkgZ2xpdGNoeSBsYXRlbHkuIApJIGp1c3QgbmVlZGVkIHRvIGtub3cgdGhhdCBoZSBkaWQgY2FyZSwgYW5kIGRpZCB2YWx1ZSBtZSBpbiBoaXMgbGlmZSwgZXZlbiBqdXN0IGFzIGEgZnJpZW5kLiBXaGVuIGkgZmlyc3Qgam9pbmVkIHRoZSB0ZWFtIGhlIHdhcyByZWFsbHkgamVhbG91cyBvZiBtZSBiZWNhdXNlIGkgd2FzIHZlcnkgY29uZmlkZW50LCB2ZXJ5IG91dHNwb2tlbiwgaGFkIGEgbG90IG9mIGlkZWFzIGFuZCBldmVyeWJvZHkgbG92ZWQgbXkgaWRlYXMuLiAKTGV0IG1lIGFkZCBzb21lIGFzIHdlbGwuClRPUk9OVE8gICBTYWxlcyBvZiBsdXh1cnkgcHJvcGVydGllcyBmZWxsIGluIHRocmVlIG9mIENhbmFkYSdzIGJpZ2dlc3QgY2l0aWVzIGxhc3QgeWVhciBhcyBob21lYnV5ZXJzIHJldHJlYXRlZCBhbWlkIHRpZ2h0ZW5lZCBtb3J0Z2FnZSBndWlkZWxpbmVzIGFuZCBoaWdoZXIgaW50ZXJlc3QgcmF0ZXMsIGFjY29yZGluZyB0byBhIHJlcG9ydCBieSBTb3RoZWJ5J3MgSW50ZXJuYXRpb25hbCBSZWFsdHkgQ2FuYWRhLgpFdmVuIGlmIGZ1ZWwgY2VsbHMgZmFpbCB0byBiZWNvbWUgYSBzaWduaWZpY2FudCBhbHRlcm5hdGl2ZSB0byB0aGUgaW50ZXJuYWwgY29tYnVzdGlvbiBlbmdpbmUsIFRveW90YSB3aWxsIGJlIHdlbGwgcG9zaXRpb25lZCBpbiBhIHByb3ZlbiBhbHRlcm5hdGl2ZSB0byBzYXZlIGZ1ZWw6IGh5YnJpZHMuIFRoZXkgYXJlIHVuc3VyZSBob3cgbWFueSBwZW9wbGUgd2lsbCBwYXkgYSBwcmVtaXVtIGZvciBoeWJyaWQgdGVjaG5vbG9neSwgZXN0aW1hdGVkIGJ5IGFuYWx5c3QgRHVsZWVwIGF0ICQzLDUwMCBwZXIgdmVoaWNsZSAoc2VlIGJveCBhYm92ZSkuIFNvbWUgZXZlbiBoYXZlIGtub2NrZWQgVG95b3RhIGJ5IGNhbGxpbmcgdGhlIFByaXVzIGh5YnJpZCBhIG1hc3NpdmUgUFIgY2FtcGFpZ24gdG8gZGVmbGVjdCBhdHRlbnRpb24gZnJvbSBUb3lvdGEncyBiaWcgcGlja3VwcyBhbmQgU1VWcy4uIApUaGUgcHJldmVydGVicmFsIGxvbmd1cyBjb2xsaSBhbmQgcG9zdHZlcnRlYnJhbCBtdWx0aWZpZHVzIG11c2NsZSBwYWlycyBmcm9tIG9uZSBzaWRlIGluIGVhY2ggaW5kaXZpZHVhbCB3ZXJlIHJhbmRvbWx5IHNlbGVjdGVkIGZvciB0aGlzIHN0dWR5IG9mIG11c2NsZSBzcGluZGxlcy4KRGllIEluc2VsIExhIFBhbG1hIGhhdCBrZWluIFRpZXJoZWltLCBkaWUgWmFobCBkZXIgYXVzZ2VzZXR6dGVuIFRpZXJlIHdjaHN0IG5vY2ggaW1tZXIgdW5kIGRpZSBtZWlzdGVuIHZvbiBpaG5lbiBsZWlkZW4gdW50ZXIgSHVuZ2VyLCBLcmFua2hlaXQsIE1pc3NoYW5kbHVuZ2VuIHVuZCB3ZXJkZW4gbmljaHQgc2VsdGVuIE9wZmVyIHZvbiB2ZXJnaWZ0ZXRlbiBLZGVybiAgRW5nYWdpZXJ0ZSBCcmdlcmdydXBwZW4gdW5kIEVpbnplbHBlcnNvbmVuIGF1ZiBMYSBQYWxtYSBJbnNlbCB0dW4gaWhyIEJlc3RlcyB1bSBkZW4gVGllcmVuIHp1IGhlbGZlbi4gTGVpZGVyIHNpbmQgc2llIG9mdCB2bGxpZyBiZXJsYXN0ZXQuIERpZSBTdGVyaWxpc2F0aW9uIGRlciBTdHJhZW50aWVyZSBpc3QgZWluZSBkZXIgYmVzdGVuIE1nbGljaGtlaXRlbiB1bSBkaWUgdW5rb250cm9sbGllcnRlIFZlcm1laHJ1bmcgenUgYmVncmVuemVuIHVuZCBzbyBkYXMgdW5udGlnZSBMZWlkZW4gZGVyIFRpZXJlIHVuZCBkaWUgQW56YWhsIGRlciBhdXNnZXNldHp0ZW4gVGllcmUgYXVmIGRlciBJbnNlbCB6dSByZWR1emllcmVuLi4gCldlIGhhZCBhbiBhcmd1bWVudCBhbmQgSSBhc2tlZCBoaW0gdG8gbGVhdmUuIApUaGUgQ3ViYW4gZ292ZXJubWVudCBoYXMgYmVlbiBjb29wZXJhdGluZyB3aXRoIGEgQ2FuYWRpYW4gaW52ZXN0aWdhdGlvbiBpbnRvIHRoZSBjYXVzZSBvZiB0aGUgaWxsbmVzc2VzLCB3aGljaCBoYXMgbm90IGJlZW4gZGV0ZXJtaW5lZC4KU3R1ZGVudHMgYXJlIGFsc28gdGF1Z2h0IGFib3V0IGpvaW50cyBhbmQgdGhlaXIgY29udHJpYnV0aW9uIHRvIGJvZHkgbW92ZW1lbnQuIApJIHdhcyB3b3JraW5nIGluIGEgc2VwYXJhdGUgaG90ZWwgcmVzdGF1cmFudCBhcyBhIGJ1c3NlciwgYW5kIHRoZXJlIHdhcyBhbHNvIGEgYmFyIGluIHNhaWQgaG90ZWwuIFRoZSBtYW5hZ2VtZW50IHdhcyB0aGUgc2FtZSBmb3IgdGhlIHdob2xlIHBsYWNlLiAKVGhleSdyZSBwcmV0dHkgY29vbCBndXlzLCBwcmV0dHkgZ29vZCBndXlzLiIuIApJUCBhbmQgQm9vbXRvd24gYXJlIG9uIHRoZSBiYWNrIGJheSBvbiBCYXl2aWV3IEF2ZW51ZS4gCkluIERpcGxvbWF0J3MgU29uLCB0aGUgY2VudHJhbCBseXJpY3MgYXJlIHRoZSBsaW5lIHRoYXQgUm9zdGFtIHNpbmdzICAgIkkga25vdyB5b3UnbGwgc2F5IEknbSBub3QgZG9pbmcgaXQgcmlnaHQsIGJ1dCB0aGlzIGlzIGhvdyBJIHdhbnQgaXQvSSBjYW4ndCBnbyBiYWNrIHRvIGhvdyBJIGZlbHQgYmVmb3JlIi4gTm8gcmVmZXJlbmNlcywganVzdCBSb3N0YW0gY29taW5nIHRvIHRlcm1zIHdpdGggaGlzIHNleHVhbGl0eS4gCkJlbmphbWluIGFuZCBGcmFuY2VzIE0uIApCdXJtYW4gaGFzIHdvcmtlZCBvdXQgYW4gb2ZmIGJlYXQgZm9ybWF0IG5vdCBzZWVuIGluIGFueSBvZiB0aGUgb3RoZXIgbGVhZ3Vlcywgd2hldGhlciBpdCBpcyB0aGUgSW5kaWFuIFByZW1pZXIgTGVhZ3VlLCB0aGUgUHJvIEthYmFkZGkgTGVhZ3VlIG9yIHRoZSBJbmRpYW4gU3VwZXIgTGVhZ3VlLgpCZWNhdXNlIHNoZSBpcyBoaWxhcmlvdXNseSBzdHVwaWQgYW5kIGV4dHJlbWVseSBkYW1hZ2luZyB0byB0aGUgRE5DLiBDbGFpbWluZyB0aGF0IGl0cyB0aW1lIHRvIHRheCB0aGUgcmljaCBmYXIgZmFyIG1vcmUsIHJld2FyZCBwZW9wbGUgd2hvIGRvbnQgZmVlbCBsaWtlIHdvcmtpbmcsIGNyZWF0ZSB0cmFpbnMgdGhhdCByaXZhbCBhaXJwbGFuZXMgKHNvbWVob3cpLCBzdG9wIHRoZSB1c2Ugb2YgdGhlIGNvbWJ1c3Rpb24gZW5naW4gLHJlZml0IGV2ZXJ5IGJ1aWxkaW5nIGluIHRoZSBjb3VudHJ5IGFuZCBkZWFsIHdpdGggdGhvc2UgZXZpbCBmYXJ0aW5nIGNvd3MuIApPbmUgd2ludGVyIHRoaXMgbGFkeSBoYWQgYSBkZWFkIGJhdHRlcnkgaW4gdGhlIGdyb2Nlcnkgc3RvcmUgcGFya2luZyBsb3QgYW5kIGhlIHB1dCBtZSBhbmQgbXkgYnJvdGhlciBpbiB0aGUgdHJ1Y2sgKHRoaXMgcGllY2Ugb2Ygc2hpdCBicm93biA4MCBDaGV2eSB3aXRoIGFmdGVyYnVybmVyIGxldmVsIGhlYXQpIGFuZCBwcm9jZWVkZWQgdG8gaGVscCBmaXggaGVyIGNhci4gSGUgdG9sZCBoZXIgdG8gcHV0IGhlciB0d28ga2lkcyBpbiBoaXMgdHJ1Y2sgdG9vIHRvIGtlZXAgdGhlbSB3YXJtLiAKQ29uc2lkZXJpbmcgdGhlIHRyYXNoIGhlYXAgd2hvIGJyb3VnaHQgdmFjY2luZXMgY2F1c2UgYXV0aXNtIGludG8gcHVibGljIGNvbnNjaW91c25lc3MgaXNuIGV2ZW4gdGhlIG1vdGhlciBvZiBhbiBhdXRpc3RpYyBjaGlsZCwgSSBpbWFnaW5lIHRoaXMgY29tbWVudGVyIGFzIGEgbm90IHNoaXQgcGFyZW50IGlzIGNvbmNlcm5lZCBvbiB0d28gZnJvbnRzLiAKSSBjYWxsZWQgR29vZ2xlIHRvIHNlZSBpZiB0aGV5IGNvdWxkIGhvbm9yIHRoZSAkMjAwIGNyZWRpdCwgdGhleSBzYWlkIHRoZXkgY291bGRuIFNvIHRoZXkgdHJpZWQgY2FuY2VsbGluZyBteSBvcmRlciBidXQgaXQgaGFkIGFscmVhZHkgc2hpcHBlZCBhbmQgYWR2aXNlZCBJIHJlZnVzZSB0aGUgZGVsaXZlcnkgYW5kIHJlb3JkZXIgdGhlIHBob25lIHRvIGdldCB0aGUgYWRkaXRpb25hbCBjcmVkaXQuIApIYXBwaWx5IGVub3VnaCwgdGhleSB3aWxsIGZvbGQgZG93biB0byBhIGdvb2Qgc2hhcGUgZm9yIHN0b3JhZ2UsIGJ1dCBpZiB5b3UgaGF2ZSB0aGUgc3BhY2UgdG8gcHVsbCB0aGVtIG91dCBmcm9tIHRpbWUgdG8gdGltZSwgcmVtZW1iZXIgdGhhdCB0aGVyZSBhcmUgbWFueSBkaWZmZXJlbnQgYWR2YW50YWdlcyB0aGF0IHlvdSBjYW4gaGF2ZS4gCkJhc2ljYWxseSBJIHdvdWxkIGJldCB0b3AgcGFpciBzZWNvbmQga2lja2VyIG9yIGJldHRlciBhbmQgOCBvdXQgZHJhd3Mgb3IgYmV0dGVyIGFzIGJsdWZmcy4gCihOb3RlIHRvIEZyYW5rIE1jTnVsdHk6IFlvdSd2ZSBnb3QgdG8gZ2V0IGEgY2h1Y2tsZSBvdXQgb2YgdGhhdCBvbmUuKSBCZWZvcmUgRGVsR3Jvc3NvIHNpZ25lZCBvbiwgUmVwdWJsaWNhbnMgaGFkIHNvbWUga2luZCBvZiBwbGF1c2libGUgZGVuaWFiaWxpdHkuIE5vdCBhbnltb3JlLiAKRGVsIEJhbHNvLCA0OCwgZmVsdCBhIHJlcG9ydCBieSBTZ3VpbiBpbiBtaWQgU2VwdGVtYmVyIHJldmVhbGVkIHRvbyBtdWNoIGFib3V0IHdoZXJlIGhpcyBmYW1pbHkgbGl2ZWQgYW5kIGhhZCBwbGFjZWQgdGhlaXIgbGl2ZXMgaW4gZGFuZ2VyLiBTIHJlcG9ydGVkIG9uIGEgc3RvcnkgYWxsZWdpbmcgdGhhdCBEZWwgQmFsc28gd2FzIHRyeWluZyB0byBlc3RhYmxpc2ggaGltc2VsZiBieSBzaGFraW5nIGRvd24gdGhlIG93bmVycyBvZiBJdGFsaWFuIHJlc3RhdXJhbnRzIGluIFF1ZWJlYyBDaXR5LiBTIHF1b3RlZCBhbiBhbm9ueW1vdXMgcG9saWNlIHNvdXJjZSB3aG8gc2FpZCBpdCB3YXMgcmFyZSB0byBzZWUgYSBNYWZpb3NvIG9wZXJhdGluZyBpbiBRdWViZWMgQ2l0eS4gQW4gYXJ0aWNsZSBieSBTIHRoYXQgd2FzIHB1Ymxpc2hlZCBpbiBMZSBKb3VybmFsIGRlIE1vbnRyIGFsc28gaW5jbHVkZWQgYSBwaG90byBvZiB0aGUgTGF2YWwgaG91c2Ugd2hlcmUgRGVsIEJhbHNvIHdpZmUgYW5kIHNvbnMgd2VyZSB2aWN0aW1zIG9mIGEgaG9tZSBpbnZhc2lvbiBpbiAyMDE3LgpXaGVuIEkgb2xkZXIsIHdpbGwgSSBiZSBtb3JlIHNldCBpbiBteSB3YXlzIGFuZCBub3Qgd2FudGluZyB0aGluZ3MgdG8gY2hhbmdlPyBTdXJlLCBpdCBhIG5hdHVyYWwgdGhpbmcsIGJ1dCBJIGZpbmlzaCB0aGlzIHdhbGwgb2YgdGV4dCBvbiBhbiBhZGFwdGVkIHByb3ZlcmI6LiAKQWxsZWdlZGx5LiBNeSBob21lIHN0YXRlLCBWaWN0b3JpYSBpcyBiZWluZyBlYXRlbiBhbGl2ZSBieSBidXNoZmlyZXMgKHdpbGRmaXJlcyB0byBvdXIgVVNBIGJyZXRocmVuKSBhbmQgaXMgcGFydCBvZiBvbmUgb2YgdGhlIG1vc3QgZmxhbW1hYmxlIGFyZWFzIGtub3duIGluIHRoZSB3b3JsZC4gKE9uZSBvZiB0aGUgb3RoZXJzIGlzIFNvQ2FsKQpBZnRlciB0aGUgS3Jpc3RhbGxuYWNodCBwb2dyb20gb2YgTm92ZW1iZXIgMTkzOCwgdGhlIE5hemlzIGxlZ2FsaXplZCBmb3JjZWQgQXJ5YW5pemF0aW9uIGFsbG93aW5nIHRoZSBmb3JjaWJsZSBjb25maXNjYXRpb24gb2YgSmV3aXNoIHByb3BlcnR5LiAKSSBnb3QgdGlyZWQgb2YgdGhlIHVuY2VydGFpbnR5IG9mIHJldGFpbCBhbmQgZGVjaWRlZCBpdCB3YXMgdGltZSB0byBtYWtlIGEgY2hhbmdlLiBJZiwgYWxsIHRoaW5ncyBiZWluZyBlcXVhbCwgSSBjYW4gbWFrZSB0aGUganVtcCBmcm9tIHRoZSBwb3QgaW5kdXN0cnkgdG8gYmFua2luZywgSSdtIHN1cmUgb3RoZXJzIGNhbiBtYWtlIHNpbWlsYXIganVtcHMuIApUaGUgdmVyeSBuZXh0IGRheSwgdGhlIGNhc2lubyBlbXBsb3llZXMgaGF2ZSBhbiBhZnRlcm5vb24gZXZlbnQgb2YgTm8gTGltaXQgSG9sZCAnZW0sIGxhc3RpbmcgMiBkYXlzLiBPbiB0aGUgc2FtZSBkYXlzLCBzdGFydGluZyBhdCA1IHBtLCB0aGUgUG9rZXIgUGxheWVyJ3MgQ2hhbXBpb25zaGlwIGJlZ2lucy4gVGhpcyBpcyBhIGZpdmUgZGF5IGV4dHJhdmFnYW56YSBvZiBhIG51bWJlciBvZiBnYW1lcyB0b2dldGhlcjpMaW1pdCBIb2xkJ2VtT21haGEgSGkgTG93IFNwbGl0IDggb3IgQmV0dGVyU2V2ZW4gQ2FyZCBSYXp6U2V2ZW4gQ2FyZCBTdHVkU2V2ZW4gQ2FyZCBTdHVkIEhpIExvdyBTcGxpdCA4IG9yIEJldHRlck5vIGxpbWl0IGhvbGQnZW1Qb3QgbGltaXQgT21haGEyIDcgVHJpcGxlIERyYXcgTG93YmFsbFRoZXJlIGFyZSB0d28gNCBkYXkgZXZlbnRzIG9mIE5vIExpbWl0IEhvbGQnZW0sIGJlZ2lubmluZyBvbiBNYXkgMjl0aCBhbmQgTWF5IDMwLCB3aXRoIG1vcmUgZ29pbmcgb24gdGhyb3VnaG91dCBKdW5lLiAKSW5zdGVhZCwgdGhleSBoYXZlIGFjY2VzcyB0byBhbGwgb2YgdGhlIHNwZWxscyBmb3Igd2hpY2ggdGhleSBhcmUgY2FwYWJsZSBvZiBjYXN0aW5nLCBhbmQgbWF5IHByZXBhcmUgc3BlbGxzIGZyb20gdGhlIGVudGlyZSBsaXN0IHByb3ZpZGVkIHRoZXkgaGF2ZSB0aGUgYXBwcm9wcmlhdGUgc3BlbGwgc2xvdC4gCkZyb20gdGhlIFdpc2NvbnNpbiBDcmltaW5hbCBKdXJ5IEluc3RydWN0aW9ucyAoVW5pdmVyc2l0eSBvZiBXaXNjb25zaW4gTGF3IFNjaG9vbCksIEkgc2hhcmUgaW5mb3JtYXRpb24gb24gVGhpcmQgRGVncmVlIFNleHVhbCBBc3NhdWx0OiBTZXh1YWwgSW50ZXJjb3Vyc2UgV2l0aG91dCBDb25zZW50LiBJZiB5b3Ugd2VyZSBzaXR0aW5nIG9uIGFuIGVtcGFuZWxlZCBqdXJ5LCB0aGVzZSBhcmUgdGhlIGluc3RydWN0aW9ucywgd2l0aG91dCBhbGwgb2YgdGhlIGNvbXBsZXggImxlZ2FsZXNlIiB0aGF0IHRoZSBKdWRnZSB3b3VsZCByZWFkIHByaW9yIHRvIGdvaW5nIGludG8ganVyeSBkZWxpYmVyYXRpb25zLgpJIGFtIGEgbW9zdCB1bmhhcHB5IG1hbi4gSSBoYXZlIHVud2l0dGluZ2x5IHJ1aW5lZCBteSBjb3VudHJ5LiBBIGdyZWF0IGluZHVzdHJpYWwgbmF0aW9uIGlzIGNvbnRyb2xsZWQgYnkgaXRzIHN5c3RlbSBvZiBjcmVkaXQuIE91ciBzeXN0ZW0gb2YgY3JlZGl0IGlzIGNvbmNlbnRyYXRlZC4gVGhlIGdyb3d0aCBvZiB0aGUgbmF0aW9uLCB0aGVyZWZvcmUsIGFuZCBhbGwgb3VyIGFjdGl2aXRpZXMgYXJlIGluIHRoZSBoYW5kcyBvZiBhIGZldyBtZW4uIFdlIGhhdmUgY29tZSB0byBiZSBvbmUgb2YgdGhlIHdvcnN0IHJ1bGVkLCBvbmUgb2YgdGhlIG1vc3QgY29tcGxldGVseSBjb250cm9sbGVkIGFuZCBkb21pbmF0ZWQgR292ZXJubWVudHMgaW4gdGhlIGNpdmlsaXplZCB3b3JsZCBubyBsb25nZXIgYSBHb3Zlcm5tZW50IGJ5IGZyZWUgb3Bpbmlvbiwgbm8gbG9uZ2VyIGEgR292ZXJubWVudCBieSBjb252aWN0aW9uIGFuZCB0aGUgdm90ZSBvZiB0aGUgbWFqb3JpdHksIGJ1dCBhIEdvdmVybm1lbnQgYnkgdGhlIG9waW5pb24gYW5kIGR1cmVzcyBvZiBhIHNtYWxsIGdyb3VwIG9mIGRvbWluYW50IG1lbi4KV2hhdCBoYXBwZW5zIGlzIHRoZSB3YXRlciBpcyBjb21pbmcgb3V0IHdpdGggc3VjaCBmb3JjZSB0aGF0IGl0IGV4Y2F2YXRlcyB0aGUgc29pbCBhbmQgcHVzaGVzIGl0IG91dCBvbiB0byB0aGUgc3VyZmFjZS4gCldoZW4gSSB3YXMgYWJvdXQgOCB5ZWFycyBvbGQgSSB3YXMgYXQgYSBmcmllbmQgaG91c2UgcGxheWluZyB2aWRlbyBnYW1lcyBhbmQgc3VjaC4gCkJlYW4gQnJlYWQgICBWaXNpdCBCZWFuIEJyZWFkIGluIHRoZSByZXRhaWwgY29ycmlkb3IgZm9yIGZyZXNobHkgYnJld2VkIGNvZmZlZSwgcGFuaW5pcywgc2FsYWRzIGFuZCBmcmVzaCBmcnVpdC4KQnV0IHRoaW5ncyB3ZXJlbid0IHNvIGNvbmdlbmlhbCBiZXR3ZWVuIFJvZG1hbiBhbmQgZm9ybWVyIHBhbCBhbmQgQXBwcmVudGljZSBjb250ZXN0YW50IEplc3NlIEphbWVzLiBBbmdyeSBhYm91dCBiZWluZyBjYWxsZWQgb3V0IGJ5IEphbWVzIG92ZXIgYWRkaWN0aW9uIGlzc3VlcywgUm9kbWFuIHNhaWQsICJPZiBjb3Vyc2UgSSBoYXZlIGEgcHJvYmxlbS4gSSBoYWQgYSBwcm9ibGVtIHllYXJzIGFnby4gSSBmaXhlZCB0aGF0LCBJIGNhbWUgYmFjay4iClJhdGhlciwgaXQgaXMgYWJvdXQgYXBwbHlpbmcgdGhlIHJpZ2h0IHRyYWluaW5nIHN0aW11bHVzIGFuZCBwcm92aWRpbmcgdGhlIGJvZHkgd2l0aCBhZGVxdWF0ZSBudXRyaWVudHMgdG8gc3VwcG9ydCB0aGUgZm9sbG93aW5nIHByb2Nlc3NlczouIApBcyBmb3IgUFBBIGluIGxlZnRpZXMsIHllcywgaWYgdGhlIHN5bXB0b20gY3JpdGVyaWEgYXJlIG1ldCBmb3IgUFBBLCB0aGVuIHRoZSBuZXVyb25hbCBkZWdyZWRhdGlvbiBpcyBmb3VuZCB3aGVyZXZlciB0aGUgbGFuZ3VhZ2UgaXMgbG9jYXRlZCBpbiB0aGF0IHBlcnNvbiBicmFpbiwgZXZlbiBpZiBpdCBvbiB0aGUgcmlnaHQuIFRoZSBtZXRhbCBjb2lscyBydXN0ZWQgb3V0IGxhc3Qgd2ludGVyLCBidXQgdG8gYmUgZmFpciBJIHdhcyBsZWF2aW5nIHRoZW0gaW4gdGhlIGdhcmFnZSBsYXN0IHllYXIgd2hlbiBiZWZvcmUgSSB3b3VsZCBicmluZyB0aGVtIGJhY2sgaW4gdGhlIGhvdXNlIHdpdGggbWUuIEkgdGhvdWdodCB0aGV5IGRlZmluaXRlbHkgbWFkZSBhIHByZXR0eSBiaWcgZGlmZmVyZW5jZSBpbiBwYWNrZWQgc25vdyBhbmQgaWNlLCBhbHRob3VnaCBJIHN0aWxsIGZlbHQgSSBuZWVkZWQgdG8gYWRqdXN0IG15IHN0cmlkZSBhIGJpdCBpbiBjZXJ0YWluIGNvbmRpdGlvbnMuIFRoZXkgZGlkIG5vdGhpbmcgaW4gZmx1ZmZ5IG9yIGZyZXNoIHNub3csIGFuZCBvbiBhbnkgc2lnbmlmaWNhbnQgaW5jbGluZXMvZGVjbGluZXMgdGhleSB3ZXJlIGp1c3Qgb2theS4gVGhlcmUgYXJlIHNvbWUgaHVnZSBzaWx2ZXIgbWFwbGUgdHJlZXMgd2l0aCBzdXJmYWNlIHJvb3RzIHRoYXQgYXJlIGNhdXNpbmcgbmlnaHRtYXJlcy4gSSBoYXZlIHRvIGltYWdpbmUgbm90IG9ubHkgaXMgdGhlIHBvb2wgcGFydGlhbGx5IHRvIGJsYW1lIGZvciB0aG9zZSBleHBvc2VkIHJvb3RzLCBidXQgdGhlIHJvb3RzIHdvdWxkIGhhdmUgaGFkIHRvIGRvIHNvbWUgc2lnbmlmaWNhbnQgZGFtYWdlIHRvIHdoYXRldmVyIGlzIGxlZnQgb2YgdGhlIHBvb2wuIFNvdW5kcyBsaWtlIGEgbG90IG9mIGV4cGVuc2VzIHdpdGggY29udHJhY3RvcnMsIHBlcm1pdHMsIGluc3BlY3Rpb25zLCByZSBpbnNwZWN0aW9ucywgbW9yZSBpbnNwZWN0aW9ucywgcmVwYWlycyBhbmQgZmluYWwgaW5zcGVjdGlvbnMuIEkgbGlrZSB0byB0aGluayBvZiBteXNlbGYgYXMgcHJldHR5IGhhbmR5LCBidXQgdGhpcyBpcyBvbmUgdGhhdCB3YXkgb3V0c2lkZSBvZiBteSB3aGVlbGhvdXNlLgpKYW1lcycgYmlnZ2VzdCBhY2NvbXBsaXNobWVudCBob3dldmVyIHdhcyB0aGUgbG92ZSBhbmQgcmVzcGVjdCBoZSBlbmdlbmRlcmVkIGluIHRob3NlIHdobyBrbmV3IGhpbS4gVGhleSBhcHByZWNpYXRlZCBoaW0gZm9yIGhpcyB0cnVseSBmaW5lIGludGVsbGVjdCwgaGlzIGh1bWFuaXR5LCBoaXMgdG91Z2huZXNzIGluIGFkdmVyc2l0eSwgYW5kIGhpcyBkcnkgaHVtb3VyLiBKYW1lcyB3aWxsIGJlIGVzcGVjaWFsbHkgbWlzc2VkIGJ5IGhpcyB3aWZlLCBmb3VyIGNoaWxkcmVuLCBhbmQgdGVuIGdyYW5kY2hpbGRyZW4uIApPdXIgeW91bmdlc3QgbWVtYmVyIHdobyB3YXMgYWxzbyBvbmUgb2YgdGhlIGNvcmUgZGllZCBhdCAxOSBhbmQgd2Ugbm90IGV2ZW4gc3VyZSBvZiB3aGF0LiBTb21ldGhpbmcgd2l0aCB0aGUgYnJhaW4gaXMgYWxsIHdlIGhlYXJkLgpLaW1saWsgTnVtYXJhcy4gCkhvd2V2ZXIsIGlzbiBpdCBzdHJhbmdlIHRoYXQgbWFueSBwZW9wbGUgaGF2ZSByZXBvcnRlZCBVRk9zIGFuZCBzYWlkIHRoYXQgdGhleSBzYXcgYSBjcmVhdGUgc2Vjb25kYXJpbHksIGFsbW9zdCBhcyBpZiBpdCB3ZXJlIGFuIGFmdGVydGhvdWdodD8gSXQgbm90IGxpa2UgVUZPIHJlc2VhcmNoZXJzIGdvIG91dCBhc2tpbmcgZXZlcnkgc2luZ2xlIHdpdG5lc3M6ICJPaCwgYW5kIGRpZCB5b3UgaGFwcGVuIHRvIHNlZSBhIEJpZ2Zvb3Q/Ii4gCkEgc3BlY2lhbCB3b3JkIGFib3V0IGFkdmVydGlzaW5nOiBBcyB0aGUgbnVtYmVyIG9mIHN1YnNjcmliZXJzIHJpc2UsIHRoZXJlIHdpbGwgaW5ldml0YWJseSBiZSB0aGUgdXJnZSBmb3Igc29tZSB0byBhZHZlcnRpc2UgdGhlaXIgc2VydmljZXMuIFdoaWxlIGEgbWVhbmluZ2Z1bCBhbmQgdmVyaWZpZWQgcmVmZXJyYWwgbmV0d29yayAoZm9yIGJvdGggYXR0b3JuZXlzIGFuZCBsaXRpZ2F0aW9uL2J1c2luZXNzIHNlcnZpY2VzKSB3aWxsIGhvcGVmdWxseSBiZSBkZXZlbG9wZWQgaW4gdGhlIGZ1dHVyZSwgZGlyZWN0bHkgb3IgdGFjaXRseSBhZHZlcnRpc2luZyB5b3VyIHNlcnZpY2VzIGluIHBvc3RzIGlzIG5vdCBhbGxvd2VkLiAKQW5kIHRoYXQganVzdCBhIGJpZyBkb3duc2lkZSB0byB0aGlzIGF3ZXNvbWVseSBjb29sIHNhbmRib3ggZ2FtZS4uIApUaGF0IGRhdGEgcGFpbnRzIGEgc29tZXdoYXQgcm9zeSBvdXRsb29rLCBidXQgSmFzb24gQnJlbW5lciwgdmljZSBwcmVzaWRlbnQgb2YgSURDIENhbmFkYSBpbmR1c3RyeSBhbmQgYnVzaW5lc3Mgc29sdXRpb25zIHByYWN0aWNlLCBoYXMgdGFrZW4gYSBkZWVwZXIgZGl2ZSBpbnRvIHRoZSBmaW5kaW5ncywgYW5kIHNhdyB0aGF0IHRoZSBkZWZpbml0aW9uIGJlaW5nIHVzZWQgaW5jbHVkZXMgZGlnaXRhbCBzZXJ2aWNlcyB3aGljaCB3b3VsZCBjb25zaXN0IG9mIGFuIGluc3VyYW5jZSB3b3JrZXIsIGZvciBleGFtcGxlLCB3aG8gY29sbGFib3JhdGVkIHdpdGggYW4gSVQgcGVyc29uIG9uIGEgcHJvamVjdC4gaXMgZ3Jvd2luZyBmYXN0ZXIgdGhhbiBwdXJlIElDVCBzZXJ2aWNlcywgaGUgc2F5cywgbm90aW5nIHRoYXQgSURDIENhbmFkYSBmb3JlY2FzdHMgcHVyZSBJQ1Qgc2VydmljZXMgZ3Jvd3RoIGF0IGp1c3QgdGhyZWUgcGVyIGNlbnQuIFRoZSB0YWtlYXdheTogbmVlZCBtb3JlIHRhbGVudCBpbiBJQ1QgdG8gZG8gYm90aCwgQnJlbW5lciBhZGRzLgpEZXIgU2NoYWZmbmVyIGlzdCBpbiBkZXIgVW50ZXJ6YWhsIChsb2dpc2NoKS4gCiJTcGVjdWxhdGlvbnMgb2Ygc3VjaCBhIGNoYXJhY3RlciB3ZXJlIGVhZ2VybHkgZW1icmFjZWQgYnkgTS4gWWV0IGl0IGlzIHRvIGJlIHJlZ3JldHRlZCB0aGF0IHRoZSBvcmlnaW5hdG9yIG9mIHRoaXMgYXJ0aWZpY2lhbCB0aGVvcnksIGFuZCBoaXMgaW1pdGF0b3JlIGZhaWxlZCB0byBkbyB0aGUgdXRtb3N0IHdpdGggdGhlaXIgY2hlcmlzaGVkIGlkZWEuIApOb3QgZXZlcnlvbmUgY2hvb3NlcyB0byBoYXZlIHNleCBhbmQgdGhleSBlbmQgdXAgcHJlZ25hbnQ7IHdoYXQgYWJvdXQgaW5jZXN0IGFuZCByYXBlIHNpdHVhdGlvbnM/IFdoYXQgYWJvdXQgYSB2ZXJ5IHlvdW5nIGdpcmwgd2hvc2UgbGlmZSB3b3VsZCBiZSBhdCByaXNrPyBPciBhbnkgcHJlZ25hbnQgd29tYW4gd2hvc2UgbGlmZSB3b3VsZCBiZSBhdCByaXNrIGlmIHNoZSBjYXJyaWVkIHRoZSBiYWJ5IHRvIHRlcm0/IEp1c3QgYmVjYXVzZSBwZW9wbGUgYWJ1c2UgdGhlIHN5c3RlbSAod2hhdCBzeXN0ZW0gaXMgdXNlZCBwZXJmZWN0bHk/KSBkb2VzIHRoYXQgbWVhbiB0aGF0IHRoZXJlIGlzIG5vIGdyYXkgYXJlYXM/IEFsc28sIGFjY2lkZW50cyBoYXBwZW4gd2l0aCByZWdhcmRzIHRvIHNleC4gCiJBcyBtdWNoIGFzIHdlIGNhbiByZWxlYXNlIHRoYXQgbXVzY2xlLCB0aGUgYmV0dGVyLCIgc2hlIHNheXMuICJJdCdzIHRoZSBvbmUgdGhhdCBnaXZlcyB1cyBoZWFkYWNoZXMgYW5kIG1ha2VzIHVzIGZlZWwgbW9yZSBjb25nZXN0ZWQuIi4gCkJlZ2xlaXRlcidzIGxvbmd0aW1lIGVtcGxveWVyLCB0aGUgaW52ZXN0bWVudCBob3VzZSBCZWFyIFN0ZWFybnMsIGNvbGxhcHNlZCBpbiB0aGUgZmluYW5jaWFsIHBhbmljIGxhc3QgeWVhci4gClBVVFRIQVRJTk1ZTU9VVEggIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCjYuIEhpZ2hlciBlZHVjYXRpb24gdG8gYmVjb21lIG1vcmUgZmFpciwgd2UgaGF2ZSB0byBtYWtlIG91ciBlbGVtZW50YXJ5IGFuZCBoaWdoIHNjaG9vbCBlZHVjYXRpb24gbW9yZSBmYWlyLiBMb25nZXIgY2FuIHdlIGZ1bmQgc2Nob29scyBvbiBwcm9wZXJ0eSB0YXhlcyAgYSB3YXkgb2YgZW5zdXJpbmcgcmljaCBuZWlnaGJvcmhvb2RzIHdpdGggaGlnaCBwcm9wZXJ0eSB2YWx1ZXMgaGF2ZSBmYXIgbW9yZSBtb25leSBmb3IgdGhlaXIgc2Nob29scyB0aGFuIHBvb3IgbmVpZ2hib3Job29kcyB3aXRoIGxvdyBwcm9wZXJ0eSB2YWx1ZXMuIApMZXMgbW90cyBvbnQgdW5lIGhpc3RvaXJlIGV0IGZvbnQgaGlzdG9pcmUuIFVuIG1vdCBlc3QgY29tbWUgdW4gcGVyc29ubmFnZS4gCkEgbG90IG9mIHBlb3BsZSB0dXJuIGRvd24gQk1XcyBvbiBoZXJlICAgaWYgeW91IHJlYWxseSB3YW50IHRvIGRlcGVuZCBvbiB0aGVtIGFzIGEgZGFpbHkgSSB0ZW5kIHRvIGFncmVlLiBIb3dldmVyIGhhdmluZyB0YWtlbiBpbiBhbiBFNDYgZnJvbSBteSBncmFuZGZhdGhlciwgSSBmaW5kIHRoZW0gRVhUUkVNRUxZIGVhc3kgdG8gd29yayBvbiBhbmQgd2VsbCBkb2N1bWVudGVkLiBDb25zaWRlcmluZyB0aGV5IGEgbmljZSBtaXggb2YgY29tZnksIGhhbmRsaW5nLCBwb3dlciwgYW5kIG1pbGVhZ2UsIEkgdGhpbmsgdGhleSBmaXQgd2hhdCB5b3UgbG9va2luZyBmb3IgZmFpcmx5IHdlbGwuIAozLiBJcyBub3QgYSBzaWNrbmVzcyBidXQgYSBzaWduIG9mIGhlYWx0aCBpZiB5b3UgYXJlIG5vdCB3b3JyaWVkLCB5b3UgYXJlIG5vdCByaXNraW5nIGVub3VnaC4gQnV5IGEgaG91c2UsIGZpbmQgYSBwcm9wZXJ0eSBtYW5hZ2VyLCBhbmQgb2ZmIHRvIHRoZSBiZWFjaCBmb3IgbWFyZ2FyaXRhcy4gCldlIGVhY2ggaGF2ZSBhIGNob2ljZSB0byBhY3QgdXBvbiB0aGF0IG5hdHVyZSBvciBhY2NlcHQgdGhlIGZvcmdpdmVuZXNzIG9mZmVyZWQgYnkgZ3JhY2UgdGhyb3VnaCBmYWl0aCBpbiBKZXN1cyBDaHJpc3QgYW5kIGRvIG91ciBiZXN0IHRvIGVuc3VyZSBvdXIgYWN0aW9ucywgYm90aCBwdWJsaWMgYW5kIHByaXZhdGUgbWF0Y2ggb3VyIHByb2Zlc3NlZCBwb3NpdGlvbnMuIi4gCkFsb3JzLCByZXZlbm9ucyB5ICBsYSByYWxpdCBkdSBxdW90aWRpZW4sIGF1eCBwcm9jY3VwYXRpb25zIGRlcyBQYXJpc2llbnMuLiAKVGhlIG92ZXJ0IG92ZXIgcmVhY3Rpb24gc2hvdWxkIGRyaXZlIHRoZSBwb2ludCBob21lIHRoYXQgeW91IGRvbiB0cnVzdCBoZXIgdG8ga2VlcCBoZXIgbW91dGggc2h1dC4uIApBIFJldmlldyBvZiAzMDAgUG9rZXIgQ2hpcCBTZXRzCkkgd2FzIGF3YXJlIHRoYXQgb3h5Z2VuIHRveGljaXR5IHdhcyBhIHRoaW5nIGJ1dCBub3QgdGhhdCB3ZSB3b3VsZCBleHBlcmllbmNlIGl0IHNvIGVhc2lseSwgd2l0aCB0aGUgdGVjaCBsZXZlbCBvZiB0aGUgMjh0aCBjZW50dXJ5IHRoZXkgd291bGQgcHJvYmFibHkgYmUgYWJsZSB0byBtb2RpZnkgdGhlbXNlbHZlcyB0byB0b2xlcmF0ZSB0aG9zZSBjb25kaXRpb25zIGxvbmcgdGVybSBidXQgdGhhdCBwcm9iYWJseSB3b3VsZG4gaGF2ZSBiZWVuIGF2YWlsYWJsZSBiYWNrIHdoZW4gdGhlIGNvbG9ueSB3YXMgZmlyc3QgZXN0YWJsaXNoZWQgc28gdGhhdCBhIGxpdHRsZSBhd2t3YXJkLiBJIGhhZCBjb25zaWRlcmVkLCBhdCBmaXJzdCwgdGhhdCBhbGwgdGhlIHBsYW5ldCBjaXRpZXMvdG93bnMgYW5kIHBlcm1hbmVudCBodW1hbiByZXNpZGVuY2VzIHdlcmUgZG9tZWQgb3Igc2VhbGVkIGVudmlyb25tZW50cywgdGhvdWdoIHRoYXQgd2FzIHRvIGRvIHdpdGggY3Jvc3MgY29udGFtaW5hdGlvbiBvZiB0aGUgZXhwZXJpbWVudGFsIGVudmlyb25tZW50cyBieSBtb2Rlcm4gdGVycmVzdHJpYWwgcGxhbnRzLiAKTW9yZW92ZXIsIHdoZW4gTWljcm9zb2Z0IHN0YXJ0ZWQgd3JhcHBpbmcgdXAgRmxhc2ggYXMgYW4gaW5pdGlhbGx5IG1vdW50ZWQgbW9kdWxlIG9mIElFLCB0aGUgaW50ZXJuZXQgc3RhcnRlZCBidWRnaW5nIHVwIGZyb20gZGF0YSBvciBpbmZvcm1hdGlvbiBnYW11dCB0byBwcm92aWRlIGEgZGVtYW5kZWQgYW11c2VtZW50LiBUaGlzIHJlYmVsbGlvbiBjZW1lbnRlZCB1cCBhIG5ldyBlbnRyYW5jZSBmb3IgZGl2ZXJzZSB3ZWJzaXRlcyB0byBwcm92aWRlIGdhbWVzIHRvIHRoZSBwZW9wbGUgd2hvIHVzZWQgdG8gc3VyZiB0aGUgaW50ZXJuZXQgcXVpdGUgZnJlcXVlbnRseS4gCkZvciBhIHF1aWNrIEFuZHJvaWQgdG8gaU9TIGNvbnZlcnNpb24sIGp1c3Qga25vdyB0aGF0IEFuZHJvaWQgYWN0aXZpdGllcyBhcmUgYW5hbG9nb3VzIHRvIFZpZXcgQ29udHJvbGxlcnMgaW4gaU9TLiAKSG93IGRvZXMgdGhlIG5ldyBhcmVuYSBpbmNyZWFzZSB0b3VyaXNtPyBSZXhhbGwgcGxhY2Ugd2FzIG9uZSBvZiB0aGUgdG9wIGNvbmNlcnQgdmVudWVzIGZvciBhbGwgb2Ygbm9ydGggYW1lcmljYSByaWdodCB1cCB1bnRpbCBpdCBjbG9zaW5nLiAKQWxzbywgd2hlbiBpdCBjb21lcyB0aW1lIHRvIHB1bGwgdGhlIE9FTSBtaXJyb3Igb2ZmLCB0aWUgYSBzdHJpbmcgdG8gdGhlIHdpcmluZyEgVGhlbiB3aGVuIGl0IG91dCwgdGllIHRoYXQgc3RyaW5nIHRvIHRoZSBuZXcgd2lyaW5nIG9uIHRoZSByZXBsYWNlbWVudCBtaXJyb3IgYW5kIGp1c3QgcHVsbCBpdCB0aHJvdWdoISBUaGV5IGRvbiBleHBsYWluIHRoYXQgaW4gdGhlIHZpZGVvIGxpbmtlZCBhYm92ZSwgdGhleSBqdXN0IHVzZSBhIHdpcmUgZ3JhYmJlciwgd2hpY2ggaXMgYW5vdGhlciBvcHRpb24gYnV0IEkgc3RpbGwgcmVjb21tZW5kIHN0cmluZy4gCkhlIHRoaW5rcyB0aGUgbmVpZ2hib3JzIGFyZSBnb2luZyB0byBoYXRlIGhpbSBmb3JldmVyLCBzbyBoZSB0YWtlcyB0aGUgZGlydHksIGNoZXdlZCB1cCByYWJiaXQgaW50byB0aGUgaG91c2UsIGdpdmVzIGl0IGEgYmF0aCwgYmxvdyBkcmllcyBpdHMgZnVyLCBhbmQgcHV0cyB0aGUgcmFiYml0IGJhY2sgaW50byB0aGUgY2FnZSBhdCB0aGUgbmVpZ2hib3IgaG91c2UsIGhvcGluZyB0aGF0IHRoZXkgd2lsbCB0aGluayBpdCBkaWVkIG9mIG5hdHVyYWwgY2F1c2VzLgpZb3UgbmVlZCB0byBtYWtlIHN1cmUgdGhhdCB5b3VyIFBva2VyIGNoaXAgU2V0cyBhcmUgbm90IHNpbXBseSBib3JpbmcgZmxhdCBzbW9vdGggZGlzY3MuIApOb3VzIHR1ZGlvbnMgYWN0dWVsbGVtZW50IGwnYWNxdWlzaXRpb24gZCd1biBoYW1lYXUgYXZlYyBwbHVzaWV1cnMgYnRpbWVudHMsIHRlcnJhaW5zIGNvbnN0cnVjdGlibGVzLCByaXZpcmVzLCBwcnMsIGZvcnRzLgpUaGUgc2NoZWR1bGUgb2YgZXZlcnkgd2Vla2VuZCBkb2Vzbid0IGFsbG93IGZvciB0aGUgbGF0dGVyIHRvIGhhcHBlbi4gCk9uZSBuaWdodCwgQWxpdGEgZm9sbG93cyBoZXIgImZhdGhlciIgd2hlbiBoZSBnb2VzIG91dC4gT24gdGhpcyBleGN1cnNpb24sIHNoZSBsZWFybnMgYSBzZWNyZXQgYWJvdXQgaGltIGJ1dCBkaXNjb3ZlcnMgbW9yZSBhYm91dCBoZXJzZWxmIGFuZCBldmVuIHJlY292ZXJzIGEgbG9zdCBtZW1vcnkuIFdoZW4gcGxhY2VkIGluIGEgZGFuZ2Vyb3VzIHNpdHVhdGlvbiwgaGVyIHN1YmNvbnNjaW91cyBpbnN0aW5jdHMgdGFrZSBvdmVyIGFuZCBzaGUgYmVjb21lcyBhIGRlYWRseSBmaWdodGluZyBtYWNoaW5lLCBkZWZlYXRpbmcgZXhwZXJpZW5jZWQgYXNzYXNzaW5zIHVzaW5nIGNvbWJhdCB0ZWNobmlxdWVzIGZyb20gYSAibG9zdCBhZ2UuIiBBbGl0YSdzIHByb3dlc3MgYXR0cmFjdHMgdGhlIGF0dGVudGlvbiBvZiBWZWN0b3IgKE1haGVyc2hhbGEgQWxpKSwgdGhlIGNyaW1pbmFsIG1vZ3VsIHdobyBydW5zIHRoZSBsb2NhbCBnbGFkaWF0b3JpYWwgY29udGVzdCBvZiBNb3RvcmJhbGwsIGFuZCBOb3ZhIChFZHdhcmQgTm9ydG9uIGluIGFuIHVuY3JlZGl0ZWQgY2FtZW8pLCB0aGUgZ29kbGlrZSBydWxlciBvZiB0aGUgbGFzdCBncmVhdCBza3kgY2l0eSwgWmFsZW0uIApZb3UgcmVhbGx5IHRyeWluZyBoYXJkIHRvIGp1c3RpZnkgeW91ciBvcGluaW9uIHRoYXQgc2F2aW5nICQ4MDAgYWZ0ZXIgMTggbW9udGhzIHNob3VsZCBiZSBlYXN5IGZvciBFVkVSWU9ORSwgd2hlbiB0aGF0IG5vdCB0aGUgY2FzZSBmb3IgRVZFUllPTkUsIGZvciByZWFzb25zIHRoYXQgdW5mb3JnaXZlbjkxIGdhdmUgeW91LgpTb21ldGltZXMgdGhlcmUgcmVhbGx5IGlzIG5vIGdvb2Qgb3V0Y29tZSwgYnV0IHdlIGZvcmNlZCB0byBhY3QgYW55d2F5IGJlY2F1c2Ugbm90IGRvaW5nIHNvbWV0aGluZyB3b3VsZCBiZSBtb3JhbGx5IHdvcnNlIHRoYW4gZG9pbmcgc29tZXRoaW5nIHJlYWxseSBiYWRseS4gSHVtYW5zIGFyZSB3ZWlyZC4uIApUaGF0IG1ha2VzIGl0IHBhcnQgb2YgYSBmcmVlIGFuZCBzb3ZlcmVpZ24gbmF0aW9uLiAKUmVjb2duaXNlIHRoZSBsaW1pdGF0aW9ucyB5b3UgaGF2ZSBhbmQgZmluZCBzb21ldGhpbmcgd2l0aGluIHRoZW0uIApIZSB3YXMgbm90IGdvb2QgYXQgcG9rZXIuIApNYW55IHByb2Zlc3Npb25hbHMgYW5kIGxlaXN1cmUgcGxheWVycyBhbGlrZSBhZ3JlZSB0aGF0IHRoZXNlIGFyZSBhbW9uZyB0aGUgImZhbmNpZXN0IiB0aGF0IG9uZSBjYW4gY2hvb3NlIGZyb20uIApLbm93aW5nIEkgY2FuIHRydXN0IGhpbSwgSSBmaW5pc2hlZCBraWxsaW5nIGhpbSBhbmQgdGhhdCB3aGF0IEkgc2F3IHRoaXMgZ29yZ2VvdXMgbG9vdCBwaWxlIGFuZCByZWFsaXplZCBpdCB3YXMgYW4gdWx0aW1hdGUuLiAKVWx0aW1hdGVseSwgSSB3YXMgZWxpbWluYXRlZCBpbiAzMHRoIHBsYWNlLiAKQ3Jvbm9Ecm9pZDEuIFNvc2hpIDIuIEFwaW5rIDMuIGYoeCkgNC4gUmVkIFZlbHZldCA1LiBMT08gNi4gZnJvbUlaT05FCkhhdmVuIHRvdWNoZWQgV2l0Y2hlciAzLCBBUkssIEZhbGxvdXQgNCwgb3IgVG9yY2hsaWdodCAyIHlldC4gCkkgYmV0IGhlIHdhcyByZWFsbHkgZXhjaXRlZCBmb3IgdGhhdCBkZWFsLiBGcm9tIE9UQzpNaWNoYWVsIEJlbm5ldHQgc2lnbmVkIGEgdGhyZWUgeWVhciBjb250cmFjdCBleHRlbnNpb24gd2l0aCB0aGUgU2VhdHRsZSBTZWFoYXdrcyB3b3J0aCAkMjkuNSBtaWxsaW9uLiAKT3VyIGNhc2lubyBmZWF0dXJlcyBhIGxhcmdlIHNlbGVjdGlvbiBvZiB0YWJsZSBnYW1lcyBhbmQgdGhlIGxhdGVzdCBzbG90IGFuZCB2aWRlbyBwb2tlciBtYWNoaW5lcy4gCldpdGggYSBzdG9yeSBzdHJhaWdodCBvdXQgb2YgYSBIb2xseXdvb2Qgc2NyaXB0LCBDaHJpcyBNb25leW1ha2VyIChoaXMgcmVhbCBuYW1lKSBlYXJuZWQgYSBwbGFjZSBpbiB0aGUgdG91cm5hbWVudCBieSBlbnRlcmluZyBhICQ0MCBvbmxpbmUgcG9rZXIgdG91cm5hbWVudC4gCkFmdGVyIEphY2tzb24gZGVhdGgsIGEgUm9sbGluZyBTdG9uZSBzdG9yeSBkZWNsYXJlZCBvZiBoaXMgYm9keTogcHJvc3RoZXNpcyBoZSBub3JtYWxseSBhdHRhY2hlZCB0byBoaXMgZGFtYWdlZCBub3NlIHdhcyBtaXNzaW5nLCByZXZlYWxpbmcgYml0cyBvZiBjYXJ0aWxhZ2Ugc3Vycm91bmRpbmcgYSBzbWFsbCwgZGFyayBob2xlLiBBbiBBbGx1cmUgYW5hbHlzaXMgb2YgaGlzIGZhY2lhbCBzdXJnZXJ5IG92ZXIgdGhlIHllYXJzIHJlY2FsbGVkIHRoYXQgYnkgMjAwMiwgcGVvcGxlIHRoaW5rIEphY2tzb24gbm9zZSBpcyBmYWxsaW5nIG9mZiwgb3IgdGhhdCBoZSBpcyB3ZWFyaW5nIGEgcHJvc3RoZXRpYy4gClRoaW5rIG9mIHRoZSBvbmxpbmUgc2hvcHBpbmcgY2FydCBwYXRlbnQuIApXaXRoIHRoYXQgYWR2aWNlIEkgb3V0d29ya2VkLCBvdXRtYW5ldXZlcmVkIGFuZCB0b29rIGV2ZXJ5IHNoaXR0eSBhc3NpZ25tZW50IHdvcmsgaGFkIG91dCB0aGVyZSwgYWxtb3N0IGJ1cm50IG15c2VsZiBvdXQuIEkgY2hhbmdlZCBqb2JzIGEgZmV3IHRpbWVzIGJ1dCBhbHdheXMgbWFpbnRhaW5lZCBhIGhhcmQgd29yayBldGhpYywgSSBiZWNhbWUga25vd24gYXMgYSBmaXhlci4uIApBbmQgdGhlc2UgZWlnaHQgbW9udGhzIHdlcmUgbm8gb3JkaW5hcnkgdGltZXMgbm90IGZvciBvdXIgZm9yZWlnbiByZWxhdGlvbnMgdGhhdCBzYXcgdGhlIHdvcmxkIGFyb3VuZCB1cyB0dXJuaW5nIHVwc2lkZSBkb3duLiAKSW4gYWRkaXRpb24sIHRoZSBwYXRpZW50IHNob3VsZCBwcmFjdGljZSBhYmRvbWluYWwgYnJhY2luZyBpbiBhIHZhcmlldHkgb2YgcG9zaXRpb25zLgpUaGVyZSBhcmUgcHJvcyBhbmQgY29ucyB0byBldmVyeSBjaXR5LCBEZW52ZXIgZG9lcyBub3QgZXhpc3Qgd2l0aGluIGEgc3RyaWN0IGJsYWNrIGFuZCB3aGl0ZSBiaW5hcnkgb2YgImFsbCBnb29kIiBvciAiYWxsIGJhZC4iIERlbnZlciBpcyBhbiBhbWF6aW5nIGNpdHkgdG8gbGl2ZSBpbiwgZGVzcGl0ZSBpdHMgbWFueSBpc3N1ZXMuLiAKRmlyc3Qgb2YgYWxsIGl0IHNvdW5kcyBsaWtlIHlvdSBhcmUgaGF2aW5nIGFuIGltbXVuZSByZXNwb25zZSB0byB0aGUgd29yaywgYm9keSBpcyB3b3JraW5nIHRvIHJlcGFpciwgYnV0IGFsc28gdG8gZmx1c2ggb3V0IHdoYXRldmVyIHdhcyBzdGlycmVkIHVwLiBUaGVzZSB0b3hpbnMsIGRlYWQgY2VsbHMsIGNyYXAgaW4geW91ciBzeXN0ZW0gYmUgaXQgaGVhdnkgbWV0YWxzLCB2aXJ1c2VzLCBjaGVtaWNhbHMsIGFsbGVnZW5zLCB3aGF0ZXZlciBhcmUgbm93IGZsdXNoaW5nIHRocm91Z2ggeW91ciBseW1waGF0aWMgc3lzdGVtLCB5b3VyIGtpZG5leXMsIHlvdXIgbGl2ZXIuIApJIHB1dCAkMTgwIGludG8gbW91bnRhaW4gcG9rZXIgYW5kIHdhcyBvd2VkICQ2MDAsIHdoaWNoIEkgZG91YnQgSSBldmVyIHNlZS4gSSBmaWd1cmVkIGhpbSBiZWluZyBhIG1vZGVyYXRvciBvZiB0aGlzIHN1YnJlZGRpdCB3b3VsZCBrZWVwIGhpbSBhY2NvdW50YWJsZSwgYnV0IGluIHJldHJvc3BlY3QgdGhhdCB3YXMgYSBzaWxseSBhc3N1bXB0aW9uLiAKU2VpdCBrbmFwcCBkcmVpIEphaHJlbiBsdWZ0IERpc25leXMgTXVzaWNhbCBUQVJaQU4gZXJmb2xncmVpY2ggaW0gU3RhZ2UgVGhlYXRlciBOZXVlIEZsb3JhIGluIEhhbWJ1cmcuIFdlaXQgYmVyIGVpbmUgTWlsbGlvbiBCZXN1Y2hlciBsaWVlbiBzaWNoIGJlcmVpdHMgdm9uIGRpZXNlciBTaG93IGluIGRlbiBCYW5uIHppZWhlbi4gCllvdXIgc3RvcnkgaGl0cyBjbG9zZSB0byBob21lIHRvby4gTXkgeW91bmdlc3QgYnJvdGhlciBpcyBzdGlsbCBpbiBjb2xsZWdlLCBzbyBldmVuIHRob3VnaCBoZSBjYW4gY29udHJpYnV0ZSBmaW5hbmNpYWxseSwgaW4gbWFueSB3YXlzLCBJIHNheSBoZSBwcm92aWRlcyB0aGUgbW9zdCAoaW4gdGVybXMgb2YgZW1vdGlvbmFsIHN1cHBvcnQsIHNpbmNlIGhlIHN0YXlzIHdpdGggbXkgbW9tIG92ZXIgYWxsIG9mIGhpcyBicmVha3MuKSBNYXliZSB0aGlzIGlzIHRoZSBzYW1lIGZvciB0aGUgYnJvdGhlciB3aG8gbGl2ZXMgd2l0aCB0aGUgbW9tLiBIZSBtaWdodCBub3QgInByb3ZpZGUiIGJ1dCBoZSBpcyB0aGUgb25lIHdobyBpcyB0aGVyZSBkZWFsaW5nIHdpdGggdGhlIGRhaWx5IEJTLiBJIGhvcGUgdGhleSBtYWtlIGl0IHdvcmsgZm9yIGFsbCBvZiB0aGVtLiBFdmVyeW9uZSBuZWVkcyBzaGVsdGVyLCBhbmQgZXZlcnlvbmUgbmVlZHMgY2FyZWQgZm9yLCBhdCBvbmUgdGltZSBvciBhbm90aGVyLgpUYWtlIGhpbSBhbmQgU3R5eGhleGVuaGFtbWVyNjY2IG9uIFlvdVR1YmUgYW5kIHlvdSBoYXZlIHByZXR0eSBtdWNoIGEgc3VwZXJpb3IgcmVwbGFjZW1lbnQgZm9yIGFsbCB0aGUgdGFsa2luZyBoZWFkIGRyb25lcyBvbiBUViBjb21iaW5lZC4gSXNuIHRoYXQgYW1hemluZyBhbmQgYXQgdGhlIHNhbWUgdGltZSwgZXh0cmVtZWx5IGZ1Y2tpbmcgc2FkIGZvciBtb2Rlcm4gam91cm5hbGlzbT8gV2hhdCBhIGRpc2FzdGVyLgoiT24gZXN0IGVuIGNhdmFsZSwgZXQgb24gdmEgcHJlbmRyZSBsZSByaXNxdWUgZGUgcGFydGlyICBsYSBjaGFzc2UsIGludGVyZGl0ZSwgZXQgZGUgc2UgZmFpcmUgY29udHJsZXIgPyBWb3Mgc2FuZ2xpZXJzLCBpbHMgdGFpZW50IHBhcyBmaWNocyBhdSBncmFuZCBiYW5kaXRpc21lIHBldXQgdHJlID8iLCBhIGlyb25pcyBsYSBwcm9jdXJldXIuCkhlIG1vZmZhdCBpcyAiY29tcGxpY2F0ZWQiIGZvciBtZS4gc29tZSBvZiBoaXMgc3R1ZmYgaXMgZmxhdCBvdXQgYW1hemluZywgYnV0IHRoZW4gdGhlcmUgd2FzIGFsc28gdGltZXMgd2VyZSBoZSB0b3RhbGx5IGRyb3ZlIG1lIG1hZCBhbmQga2lsbGVkIG9mZiBzb21lIG9mIG15IGxvdmUgZm9yIHRoZSBzaG93IHRoYXQgaSBkZXZlbG9wZWQgZHVyaW5nIHRoZSBmaXJzdCA2IHNlYXNvbnMuIFM3IHdhcyBtb3N0bHkgZ29vZCwgYnV0IHRoZSBnZW5lcmFsIHZpYmUgb2YgUzggbGVmdCBtZSB2ZXJ5IHVuc2F0aXNmaWVkLCB3aGljaCBpcyB3ZWlyZCBiZWNhdXNlIGkgYWJzb2x1dGx5IGxvdmVkIGNhcGFsZGkgYW5kIGdvbWV6LiBidXQgY2xhcmEgYW5kIGRhbm55IHN1Y2tlZCBzbyBtdWNoIGxpZmUgb3V0IG9mIG1lLCBpdCB3YXMgZnJ1c3RyYXRpbmcuCkJhbmFuYXMgYXJlIHJpY2ggaW4gVml0YW1pbnMuIFZpdGFtaW4gQSBpbiBiYW5hbmEgaXMgdmVyeSBpbXBvcnRhbnQgZm9yIHRoZSBkZXZlbG9wbWVudCBvZiB0aXNzdWUgaW4gZXllcyBhbmQgaGVhbHRoeSBncm93dGggb2YgdGhlIHNraW4uIFZpdGFtaW4gQiBwcmVzZW50IGluIGJhbmFuYSBoZWxwcyBpbiBjYWxtaW5nIG91ciBuZXJ2b3VzIHN5c3RlbS4KV2hhdCBpZiB5b3UgY291bGQgdXNlIHRoYXQgc2FtZSBwYWlyIG9mIGdsYXNzZXMgYW5kIEludGVybmV0IGNvbm5lY3Rpb24gdG8gbG9vayB1cCBpbmZvcm1hdGlvbiBhYm91dCBzb21lb25lIHN0YW5kaW5nIG5lYXIgeW91PyBJbWFnaW5lIG1lZXRpbmcgc29tZW9uZSB5b3UnZCBsaWtlIHRvIGRhdGUuIApIZSBiZWdhbiBoaXMgY2FyZWVyIGFzIGEgY2xhc3Nyb29tIHRlYWNoZXIgYXQgSm9obiBNYWhvb2QgaW4gRWxtaXJhLCBhbmQgcmV0aXJlZCBhcyBwcmluY2lwYWwgb2YgQ291cnRsYW5kIEF2ZW51ZSBpbiBLaXRjaGVuZXIuIApJIGhhdGUgY3J5aW5nLiAKQnVpbGRpbmcgb24gaXRzIGV4aXN0aW5nIGNvbW1pdG1lbnRzIGFzIHBhcnQgb2YgdGhlIFN1c3RhaW5hYmxlIFN0b2NrIEV4Y2hhbmdlIEluaXRpYXRpdmUsIE5FTyBhbm5vdW5jZWQgdHdvIG5ldyBjb21taXRtZW50cyB0aGF0IGFmZmlybSBpdHMgZGVkaWNhdGlvbiB0byBnZW5kZXIgZXF1YWxpdHkgaW4gQ2FuYWRpYW4gY2FwaXRhbCBtYXJrZXRzLiBJbiBKYW51YXJ5LCBORU8gYmVjYW1lIHRoZSBmaXJzdCBDYW5hZGlhbiBzdG9jayBleGNoYW5nZSB0byBzaWduIGEgQ0VPIFN0YXRlbWVudCBvZiBTdXBwb3J0IGZvciB0aGUgLCBhbiBpbml0aWF0aXZlIHNwZWFyaGVhZGVkIGJ5IHRoZSBFdXJvcGVhbiBVbmlvbiBpbiBwYXJ0bmVyc2hpcCB3aXRoIFVOIFdvbWVuIGFuZCBVTiBHbG9iYWwgQ29tcGFjdC4gTkVPIGhhcyBhbHNvIHRvIGl0cyBsaXN0aW5ncyBtYW51YWwgdG8gZW5jb3VyYWdlIG5vbWluYXRpbmcgYW5kIGNvcnBvcmF0ZSBnb3Zlcm5hbmNlIGNvbW1pdHRlZXMgb2YgTkVPIGxpc3RlZCBjb21wYW5pZXMgdG8gY29uc2lkZXIgdGhlIGRpdmVyc2l0eSBvZiB0aGUgYm9hcmQgY29tcG9zaXRpb24gd2hlbiBtYWtpbmcgcmVjb21tZW5kYXRpb25zIGZvciBuZXcgYm9hcmQgbWVtYmVycyBvciBleGVjdXRpdmUgb2ZmaWNlcnMuIENvbnNpZGVyYXRpb25zIGZvciBkaXZlcnNpdHkgb2YgdGhlIGJvYXJkIGluY2x1ZGVzIHdoZXRoZXIgdGFyZ2V0cyBoYXZlIGJlZW4gYWRvcHRlZCBmb3Igd29tZW4sIHZpc2libGUgbWlub3JpdGllcywgQWJvcmlnaW5hbCBwZW9wbGUgYW5kIHBlb3BsZSB3aXRoIGRpc2FiaWxpdGllcy4KVGhlIEJlc3QgVGFjdGljIGluIE9ubGluZSBQb2tlcgpTaGUgbGF1bmNoZWQgYW4gYXBwZWFsIGhlbHBlZCBieSB0aGUgTm92YSBTY290aWEgQXNzb2NpYXRpb24gZm9yIHRoZSBBZHZhbmNlbWVudCBvZiBDb2xvdXJlZCBQZW9wbGUuIFZpb2xhIGNhc2Ugc2hvbmUgbGlnaHQgb24gQ2FuYWRhIGdyb3dpbmcgY2l2aWwgcmlnaHRzIG1vdmVtZW50IGFuZCBDYW5hZGEgdWdseSByYWNpc20uIFRoaXMgaW5jaWRlbnQgYmVjYW1lIG9uZSBvZiB0aGUgbW9zdCBoaWdoIHByb2ZpbGUgY2FzZXMgb2YgZGlzY3JpbWluYXRpb24gaW4gQ2FuYWRpYW4gaGlzdG9yeS4uIApCdXQgdGhleSBiZSBiZXR0ZXIgb2ZmIGFiYW5kb25pbmcgdGhlaXIgZG9vbWVkIGhvbWVzIGFuZCBmaW5kaW5nIHNoZWx0ZXIgZWxzZXdoZXJlLi4gCkkgd2FzIHdvcnNoaXBpbmcgcHJhaXNpbmcgTG9yZCBBbG1pZ2h0eSBHb2Qgb24gU2F0dXJkYXkgbmlnaHQsIERlY2VtYmVyIDE5dGggMjAxMC4gQW0sIHdoZW4gSSB3YXMgY29tcGxldGVseSBzb2FrZWQgaW4gdGhlIHByYWlzZXMgdG8gSmVob3ZhaCBzYXcgYSB2aXNpb24gZnV0dXJlIGNhdGFzdHJvcGhlIGRldmFzdGF0aW9uIHRoYXQgb3VyIHdpbGwgZmFjZS4gSSBsaWZ0ZWQgdGhlIHRvcCBoYWxmIG9mIHRoZSBicmVhZCwgaXQgaXMgd2l0aCBibGFjayBzcG90cyBmdW5ndXMuIApNeSBodXNiYW5kIGNvdWxkbiBjb21lIHRvIHRoYXQgYXBwdCBzbyBJIHN1ZGRlbmx5IGZlbHQgc28gYWxvbmUgZXZlbiB0aG91Z2ggdGhlIGRvY3RvciB3YXMgaW5jcmVkaWJseSBuaWNlIGFuZCB1bmRlcnN0YW5kaW5nLiAKVHJ5IHRvIHJlc2VydmUgYSBjYW1wc2l0ZS4gWW91IHByb2JhYmx5IHdvbnQgYmUgYWJsZSB0by4gU2VlIGlmIGFueW9uZSB3aWxsIHNoYXJlIHdpdGggeW91LiBPdGhlcndpc2Ugc2xlZXAgaW4geW91ciBjYXIgaGlkZGVuIHNvbWV3aGVyZSAobm90IGp1c3Qgb24gdGhlIHNpZGUgb2YgdGhlIGhpZ2h3YXksIGV2ZW4gaWYgeW91IHNlZSBvdGhlciBjYXJzIGRvaW5nIGl0LiB0aGV5IGFyZSBjcmFja2luZyBkb3duIGFuZCB0aWNrZXRpbmcgcGVvcGxlKS4KRWVuIGhvZXN0ZHJhbmsgb2YgYW50aXR1c3NpdnVtIGlzIGVlbiB2bG9laWJhYXIgZ2VuZWVzbWlkZGVsLCB3YWFydmFuIHZlcm9uZGVyc3RlbGQgd29yZHQsIGRhdCBoZXQgZWZmZWN0IGhlZWZ0IG9wIGhvZXN0ZW4uClRoZSBjbGFzc2ljIHBvc2Ugb2YgYW4gYXNjZXRpYyBseWluZyBjb21mb3J0YWJseSBvbiBhIGJlZCBvZiBuYWlscyBpcyBpbiBmYWN0LCBhIHJlZmVyZW5jZSB0byBhbiBBc2lhbiBwcmFjdGljZSBmb3IgaGVhbGluZyAgIGFjdXB1bmN0dXJlICAgd2hlcmUgbmVlZGxlcyBhcmUgaW5zZXJ0ZWQgaW4gc2VsZWN0IHBvaW50cyBpbiB0aGUgYm9keSB0byByZWxpZXZlIHBhaW4gb3Igc3RyZXNzIGluIGFub3RoZXIgcGFydCBvZiB0aGUgYm9keS4gQWN1cHJlc3N1cmUgZGlmZmVycyBzbGlnaHRseSBmcm9tIGFjdXB1bmN0dXJlLCBpbiB0aGF0IGZpbmdlcnMgYXJlIHVzZWQgaW5zdGVhZCBvZiBuZWVkbGVzLCB3aGljaCBtdXN0IGRlZmluaXRlbHkgYmUgYSByZWxpZWYgdG8gbW9zdCBwZW9wbGUhIEFjdXByZXNzdXJlIGZpcnN0IG9yaWdpbmF0ZWQgaW4gQ2hpbmEgYW5kIGlzIHRvZGF5IG9uZSBvZiBzZXZlcmFsIHBvcHVsYXIgYW5kIGVmZmVjdGl2ZSBhbHRlcm5hdGl2ZSBtZXRob2RzIG9mIGhlYWxpbmcsIHByZWZlcnJlZCBvdmVyIGNvbnZlbnRpb25hbCBtZWRpY2luZSBieSBhIGxvdCBvZiBwZW9wbGUgd2l0aGluIHRoZSBVUy4gCiJUcmFuc3BvcnQgc2hvdWxkIGJlIHBsYW5uZWQsIGJ1dCB3aXRoIGVudGlyZWx5IGRpZmZlcmVudCBhaW1zOiB0byBtYXhpbWlzZSBpdHMgc29jaWFsIGJlbmVmaXRzLCB3aGlsZSBtaW5pbWlzaW5nIGhhcm0uIFRoaXMgbWVhbnMgYSB3aG9sZXNhbGUgc3dpdGNoIHRvd2FyZHMgZWxlY3RyaWMgbWFzcyB0cmFuc2l0LCBzYWZlIGFuZCBzZXBhcmF0ZSBiaWtlIGxhbmVzIGFuZCBicm9hZCBwYXZlbWVudHMsIGFjY29tcGFuaWVkIGJ5IGEgc3RlYWR5IGNsb3N1cmUgb2YgdGhlIGNvbmRpdGlvbnMgdGhhdCBhbGxvdyBjYXJzIHRvIHJhbXBhZ2UgdGhyb3VnaCBvdXIgbGl2ZXMuIEluIHNvbWUgcGxhY2VzLCBhbmQgZm9yIHNvbWUgcHVycG9zZXMsIHVzaW5nIGNhcnMgaXMgdW5hdm9pZGFibGUuIApIaXMgb25lIHRocmVlIGZpZ3VyZSBUZXN0IGlubmluZ3MgYWdhaW5zdCBBdXN0cmFsaWEgd2FzIDE0NCBhdCBUaGUgT3ZhbCBpbiAxOTA1LCB3aGVuIHRoZSBydWJiZXIgaGFkIGFscmVhZHkgYmVlbiBkZWNpZGVkLiBUd28geWVhcnMgbGF0ZXIgaGUgbWFkZSBoaXMgb25seSBvdGhlciBodW5kcmVkIGZvciBFbmdsYW5kLCAxMjkgYWdhaW5zdCB0aGUgU291dGggQWZyaWNhbnMsIGFsc28gYXQgVGhlIE92YWwuIApJbCBuJ2VzdCBxdWUgZGUgdm9pciBsZXMgZGxpcmVzIHF1ZSBzdXNjaXRlbnQgbGVzIHNvdXBvbiBkZSAicmFjaXNtZSIuIEplIHBlbnNlIGdhbGVtZW50IGF1eCByZW1vdXMgZW5nZW5kciBwYXIgdW5lIHJlbWFycXVlIGQndW5lIGFuY2llbm5lIHBvcm5vZ3JhcGhlLCB1bmUgY291cmdlIG5vbW1lIFNjaGlhcHBhIHF1aSBhIHBhcmwgZCd1bmUgY29udmVyZ2VuY2UgaWRvbG9naXF1ZSBlbnRyZSBsJ2lkb2xvZ2llIHNvdXMgamFjZW50ZSAgbGEgTWFuaWYgcG91ciB0b3VzIGV0IGxlcyBtdXN1bG1hbnMuIEplIG5lIHZvaXMgcGFzIGNlIHF1ZSB2aWVubmVudCBmYWlyZSBsZXMgInRlcnJvcmlzdGVzIiBsIGRlZGFucyBldCBhdWN1bmUgZGVzIHZpZG9zIHF1ZSBqJ2FpIGNvbnN1bHQgbmUgbCdleHBsaXF1ZS4gCkluIGZhY3QsIHNvbWV0aW1lcyB5b3UgaGF2ZSB0byBsb3NlIGEgZmV3IGhhbmRzIHRvIHdpbiB0aGUgZ2FtZS4gVW5mb3J0dW5hdGVseSwgeW91IGNhbm5vdCBhbHdheXMga25vdyB3aGVuIHRvIHN0YXkgaW4gYW5kIHdoZW4gdG8gY2xvc2Ugb3V0LiAKSW4gdGhlIGVuZCwgb3VyIG1haW4gZ29hbCB0b2RheSBpcyB0byBoZWxwIHlvdSBmaWd1cmUgb3V0IHdoZXRoZXIgb3Igbm90IHRoaXMgcGFydGljdWxhciBwcm9kdWN0IGlzIGZvciB5b3UuIApJIGdvaW5nIHRvIG1pc3MgaGltLiBNYXkgaGUgUmVzdCBJbiBQZWFjZS4uIApNb3N0IHdoaXRlIHBlb3BsZSBJIGtub3cgd291bGQgbmV2ZXIgZXZlciBjb25zaWRlciBzdWNoIGEgdGhpbmcuIEl0IHdvdWxkIHNhdmUgc28gbXVjaCBtb25leSBhbmQgYnJpbmcgc28gbWFueSBvdGhlciBiZW5lZml0cyB0byBldmVyeWJvZHkuIEpvaW50IGZhbWlseSBsaXZpbmcgaXMgb25lIG9mIHRoZSBtb3N0IGdyZWVuIGFuZCBzdXN0YWluYWJsZSB3YXlzIHRvIGxpdmUgICBtb3JlIHBlb3BsZSBzaG91bGQgYmUgb3BlbiB0byBpdC4gClRoZSBGQkkgYmVnYW4gbGlzdGVuaW5nIHRvIERvdWdoZXJ0eSdzIGNhbGxzIG9uIEFwcmlsIDI5LCAyMDE1LiAKTG9vayBmb3IgbWFjaGluZXMgdGhhdCBkb24ndCBoYXZlIG11Y2ggb2YgYSBkaXNjcmVwYW5jeSBiZXR3ZWVuIHRoZSBjb2lucyBpZiB5b3UncmUgbG9va2luZyB0byBzYXZlIHlvdXIgbW9uZXkuIElmIG9uZSBjb2luIGdldHMgeW91IDIwMDAgb24gdGhlIGphY2twb3QsIGFuZCAyIGNvaW5zIGdldHMgeW91IDUwMDAsIGJ1dCB0aHJlZSBjb2lucyBnZXRzIHlvdSA0NTAwMCwgeW91IG1heSB3YW50IHRvIHdhbGsgYXdheS4gSW1hZ2luZSB3aGF0IHdvdWxkIGhhcHBlbiBpZiB5b3UgYmV0IG9uZSBjb2luIGFuZCBoaXQgaXQgYmlnISBZb3UnZCBiZSBzdWxraW5nIGFsbCB0aGUgd2F5IHRvIHRoZSBidWZmZXQuLiAKRWRpdDogSSBoYWQgYSAyMDE4IEVFIFJldiAyMCBhbmQgbm93IGhhdmUgYSBGRiBGbGlja2VyIDIwIFVMLCBhbmQgYWx0aG91Z2ggdGhlIEZGIHdlaWdocyBhYm91dCA0IG9yIDUgb3VuY2VzIG1vcmUsIHRoZSBxdWFsaXR5LCBtYXRlcmlhbHMsIGRvd24gZmlsbGluZywgZXRjIGlzIGFsbCByZW1hcmthYmx5IGJldHRlciB0aGFuIG15IEVFIHdhcy4KSFIgY3JlYXRlcyBpbmVmZmljaWVuY2llcyBieSBpbnZvbHZpbmcgdGhlbXNlbHZlcyBpbiBhIGRlY2lzaW9uIG1ha2luZyBwcm9jZXNzIHRoYXQgdGhleSBvZmZlciBubyB2YWx1ZSB0byBhbmQgd2hpY2ggdGhleSBoYXZlIG5vIHBvd2VyIGluLiBXaGF0IHRoZSBtYW5hZ2VycyBhdCB5b3VyIGNvbXBhbnkgYXJlIHNheWluZyBoZXJlIGlzIGVxdWl2YWxlbnQgdG8gbWUgZ2V0dGluZyB1cHNldCB0aGF0IEkgaGF2ZSB0byBkcml2ZSB0aGUgY2FyIHRvIE1jRG9uYWxkcyBiZWNhdXNlIHRoZSBnb3Zlcm5tZW50IHdvbiBsZXQgbXkgOCB5ZWFyIG9sZCBzb24gZG8gaXQuIExpa2UgY21vbiBUcnVtcCBoZSBkb2VzIGdyZWF0IG9uIHRoZSBidW1wZXIgY2FycywganVzdCBsZXQgaGltIGRvIHRoZSBkcml2aW5nIEkgdG9vIGJ1c3khCkkgaGF2ZSBtYW5hZ2VkIHRvIGdldCB0aHJvdWdoIHRvIG9uZSBzdHVkZW50IHdobyB3YXMgZ2V0dGluZyBpbnRvIGEgbG90IG9mIHRyb3VibGUgYnkgdGVsbGluZyBoaW0gb3VyIHdvcmxkIGRpZG4ndCBuZWVkIGFueSBtb3JlIHRodWdzLCB0aGVyZSB3YXMgZW5vdWdoIHZpb2xlbmNlIGFuZCBoYXJtIHRvIGZpbGwgbWFueSB3b3JsZHMgYWxyZWFkeSwgYW5kIHdoYXQgd2UgbmVlZGVkIHdlcmUgcGVvcGxlIHRvIGRvIGdvb2QgZm9yIG90aGVycywgYW5kIGhlIGhhZCB0aGUgc21hcnRzIHRvIGRvIGl0LiBIZSB3YXMgYWJvdXQgdG8gYmUgcmVmZXJyZWQgdG8gb3VyIGFsdGVybmF0aXZlIHByb2dyYW0gYW5kIGF0IGxlYXN0IHR1cm5lZCBhcm91bmQgaGlzIGJlaGF2aW9yIGVub3VnaCBub3QgdG8gZ28gZG93biB0aGF0IHBhdGgsIEkgZG9uJ3Qga25vdyB3aGVyZSBoZSBlbmRlZCB1cCB0aG91Z2guLiAKV2hlbiBzaGUgZG9lcywgc2hlIGZyZXF1ZW50bHkgd2lwZXMgb2ZmIGhlciBmaW5nZXJzIChsdWJyaWNhdGVkIHdpdGggam9qb2JhIG9pbCkgc28geW91J3JlIG5vdCBjb2F0ZWQgaW4gc2FsaXZhIGR1cmluZyB0aGUgMjAgb3Igc28gbWludXRlcyBzaGUncyBpbiB0aGVyZS4gCiJJIGp1c3Qgd2FudGVkIHRvIGRvIHNvbWV0aGluZyBteXNlbGYgYW5kIHdyaXRlIHNvbWV0aGluZyB0aGF0IHdhcyBoZWFydGZlbHQgZm9yIG1lLCIgc2hlIHNhaWQuICJJJ3ZlIHdhbnRlZCB0byBoYXZlIGEgYmFieSBmb3Igc28gbG9uZyBhbmQgaXQncyBqdXN0IHRoZSBwZXJmZWN0IHRpbWluZyBpbiBteSBleWVzLiAKSXQgYmV5b25kIGVtYmFycmFzc2luZywgbm90IHRvIG1lbnRpb24gcGFpbmZ1bCwgdG8gYmUgc3R1Y2sgcmVwZWF0aW5nIHRoaXMgcGF0dGVybiBvZiBnZXR0aW5nIGF0dGFjaGVkIHRvIGEgTW9tIDIuMCB3aG9tIEkgc3RpbGwgZmFpbCB0byBtYWtlIGEgZ2VudWluZSBjb25uZWN0aW9uIHdpdGggYW5kIGdldCBsZWZ0IGJlaGluZC4gCkkndmUgYmVlbiBwcmV0dHkgY2hlYXAgYWJvdXQgaXQsIHVzdWFsbHkgaGl0dGluZyB0YXJnZXQgc2FsZXMgcmFja3MuIEJ1dCBjb21pbmcgaW50byBzaG9ydHMgc2Vhc29uLCBJIG5lZWQgZ29vZCBydW5uaW5nIHNob3J0cy4gCldoYXQganVyb3JzIHdvbid0IHNlZTogSGVybmFuZGV6IHRvb2sgYSBwaG90byBvZiBoaW1zZWxmIGluIHRoZSBtaXJyb3IgaG9sZGluZyB3aGF0IGxvb2tzIGxpa2UgYSAuNDUgY2FsaWJlciBwaXN0b2wgaW4gMjAwOSwgd2hpY2ggd2FzIGxhdGVyIHBvc3RlZCBieSBUTVouCkNlbGluZSBEaW9ucyBzb24gY2FwdHVyZWQgdGhlIGhlYXJ0IG9mIENhbmFkYSB3aXRoIGV1bG9neSB0byBSZW4KWW91IGFsc28gc3BlbmQgQSBTSElUTE9BRCBNT1JFIGJ1eWluZyBwcmUgcHJlcGFyZWQgZm9vZHMgYW5kIHNuYWNrcyB0aGFuIHlvdSBkbyBidXlpbmcgcmF3L3VuY29va2VkIGl0ZW1zLi4gCkJhYmllcyBjcnlpbmcgaW4gdGhlIGxvYmJ5LiAKVGhyZWUgb2YgdGhvc2Ugc3RvcmVzIHdpbGwgYmUgaW4gQ2FuYWRhLiAKV2l0aCByZWdhcmQgdG8gbWVyZ2VycywgV2FycmVuIGJsYXN0ZWQgcmVndWxhdG9ycyB3aG8gYXBwcm92ZWQgcHVyY2hhc2VzIHN1Y2ggYXMgV2hvbGUgRm9vZHMgYW5kIFphcHBvcyBmb3IgQW1hem9uLCBhcyB3ZWxsIGFzIHRoZSBhZm9yZW1lbnRpb25lZCBGYWNlYm9vayBhbmQgR29vZ2xlIHB1cmNoYXNlcyAoaW4gYWRkaXRpb24gdG8gR29vZ2xlIGFjcXVpc2l0aW9uIG9mIHNtYXJ0IGhvbWUgY29tcGFueSBOZXN0KS4KRG9uIHdvcnJ5IHRvbyBtdWNoLCBhbmQgZW5qb3kgeW91ciBzdGF5ISBJdCBhIGdyZWF0IGNpdHksIGVzcGVjaWFsbHkgaW4gdGhlIHN1bW1lci4gSSB3ZW50IHRvIGEgbGFuZ3VhZ2Ugc2Nob29sIChEaWUgTmV1ZSBTY2h1bGUgaW4gQ2hhcmxvdHRlbmJ1cmcpIHdoZXJlIEkgYWxzbyBnb3QgbXkgQzEgR29ldGhlIFplcnRpZmlrYXQgaW4gR2VybWFuLi4gClJvYmJpZSBhbmQgRW1pbHkgaGF2ZSBtYWRlIGEgYmlnIGJldCBvbiBBbGJlcnRhIHJlYWwgZXN0YXRlLCBhbGwgb2YgaXQgaW4gdGhlaXIgb3duIHRvd24uIFRoZWlyIGhvdXNlIHBsdXMgbG9jYWwgcmVhbCBlc3RhdGUgaW52ZXN0bWVudHMgaW4gdGhlaXIgUlJTUHMgYW5kIFRGU0EgcG9ydGZvbGlvcyBhbW91bnQgdG8gNzAgcGVyIGNlbnQgb2YgdGhlaXIgYXNzZXRzLiAKSXQgSXMgSGlnaGx5IENvbXByZXNzZWQuIApGbHlieW1lMDMgIDE0IHBvaW50cyAgc3VibWl0dGVkIDkgbW9udGhzIGFnbwoiV2VyZW4ndCB5b3UgbGlzdGVuaW5nIHRvIENhcHRhaW4gSmltIGFuZCB5b3VycyB0cnVseSB0aGUgb3RoZXIgbmlnaHQgd2hlbiB3ZSBkaXNjdXNzZWQgdGhhdCBzdWJqZWN0IGdlbmVyYWxseT8gV2UgY2FtZSB0byB0aGUgY29tZm9ydGluZyBjb25jbHVzaW9uIHRoYXQgdGhlIENyZWF0b3IgcHJvYmFibHkga25ldyBob3cgdG8gcnVuIEhpcyB1bml2ZXJzZSBxdWl0ZSBhcyB3ZWxsIGFzIHdlIGRvLCBhbmQgdGhhdCwgYWZ0ZXIgYWxsLCB0aGVyZSBhcmUgbm8gc3VjaCB0aGluZ3MgYXMgd2FzdGVkJyBsaXZlcywgc2F2aW5nIGFuZCBleGNlcHQgd2hlbiBhbiBpbmRpdmlkdWFsIHdpbGZ1bGx5IHNxdWFuZGVycyBhbmQgd2FzdGVzIGhpcyBvd24gbGlmZSB3aGljaCBMZXNsaWUgTW9vcmUgY2VydGFpbmx5IGhhc24ndCBkb25lLiBJIE5FVkVSIHdhcyBpbiBsb3ZlIHdpdGggaGltLiBJIG9ubHkgaW1hZ2luZWQgSSB3YXMuIApJcyBwbGF5ZWQgZXhhY3RseSBsaWtlIFRleGFzIEhvbGQnZW0gZXhjZXB0IHRoYXQgZWFjaCBwbGF5ZXIgcmVjZWl2ZXMKWWVzLCBJIHVuZGVyc3RhbmQgdGhhdCwgSSBqdXN0IHNhaWQgdGhhdC4gSSBzYXlpbmcgdGhhdCBpcyBhbiB1bmV0aGljYWwgc2l0dWF0aW9uLiBTb21lb25lIHNob3VsZG4gYmUgdGFraW5nIG9uIGEgcmlzayB0aGF0IGVuZGFuZ2VycyB0aGVpciBsaWZlIGFuZCBoZWFsdGggYmVjYXVzZSB0aGUgYWx0ZXJuYXRpdmUgaXMgaGF2aW5nIGEgam9iIHRoYXQgZG9lc24gY29tZSB3aXRoIGFzIG11Y2ggcmlzayBidXQgYW4gaW5jb21lIHRoYXQgcHJvdmlkZXMgc2ltaWxhciBvciB3b3JzZSByaXNrcy4gCkhhdmUgeW91IGV2ZXIgc2VlbiBhIGNoaXAgc2V0IGFzIHN0cmlraW5nIGFzIHRoZSAxMDAgUGF1bHNvbiBQaGFyb2FocyBDbHViIFBva2VyIENoaXAgU2V0PyBJdCBpcyBkb3VidGZ1bCB0aGF0IHlvdSBoYXZlIGNvbnNpZGVyaW5nIGFsbCB0aGUgdW5pcXVlIGNyYWZ0c21hbnNoaXAgdGhhdCBoYXMgZ29uZSBpbnRvIHRoZSBkZXZlbG9wbWVudCBvZiB0aGVzZSBjaGlwcy4gVGhlc2UgYXJlIG5vdCBnZW5lcmljIHBva2VyIGNoaXBzIHRoYXQgeW91IGNhbiBwdXJjaGFzZSBpbiBhIGNvbnZlbmllbmNlIHN0b3JlLiBUaGV5IGFyZSBhcnRmdWxseSBjcmFmdGVkIGl0ZW1zIHRoYXQgZGVsaXZlciBhIHVuaXF1ZSBsb29rIGFuZCBhcHBlYWwgdGhhdCBsb25nIHRpbWUgcGxheWVycyB3aWxsIGJlIGF0dHJhY3RlZCB0byBhbmQgbmV3IHBsYXllcnMgd2lsbCBvdXRyaWdodCBtYXJ2ZWwgYXQuClN5bHZlc3RlciBTdGFsbG9uZSBza2lwcGVkIHNvbWUgcHJvbW90aW9ucyBmb3IgaGlzIGxhdGVzdCBmaWxtLCAiVGhlIEV4cGVuZGFibGVzIDIsIiBhZnRlciBoaXMgc29uJ3MgdW5leHBlY3RlZCBkZWF0aCBsYXN0IG1vbnRoLiAKVGhlIGxhdHRlciBzY2hlZHVsZSAgIGlmIHlvdSB3YWxrIGF0IGEgcGFjZSBvZiBhdCBsZWFzdCB0aHJlZSBtaWxlcyBhbiBob3VyICAgc2hvdWxkIHByb2R1Y2UgYWxsIHRoZSBhZXJvYmljIGJlbmVmaXRzIG1lbnRpb25lZCBpbiB0aGUgZmlyc3QgcGFydCBvZiB0aGlzIHBhZ2UuIEJ1dCBldmVuIGlmIHlvdSBjYW4gbmV2ZXIgd2FsayB0aGlzIGZhciBvciB0aGlzIGZhc3QsIHlvdSB3aWxsIHN0aWxsIGltcHJvdmUgdGhlIHN0cmVuZ3RoIG9mIGZvb3QgbXVzY2xlcyBhbmQgYm9uZXMgKGFuZCB5b3VyIG92ZXJhbGwgaGVhbHRoKSBieSB3YWxraW5nLi4gCkluIG91ciB3b3JrIHdpdGggcmV0aXJlZXMsIHdlIHNlZSB1cCB0byBlaWdodCBkaWZmZXJlbnQgc291cmNlcyBvZiBmdW5kcyB0aGF0IHRoZXkgY2FuIHB1bGwgZnJvbSB0byBtZWV0IHRoZWlyIG1vbnRobHkgb3IgYW5udWFsIGV4cGVuc2VzLiBTb21lIGFyZSBub3QgdGhvdWdodCBvZiB0aGF0IG9mdGVuLCBidXQgY2FuIGJlY29tZSBpbXBvcnRhbnQuIE5vdCBhbGwgd2lsbCBhcHBseSB0byBldmVyeW9uZSwgYnV0IGVhY2ggb25lIHdpbGwgYmUgaW1wb3J0YW50IHRvIGEgc2VnbWVudCBvZiByZXRpcmVlcy4KQ291bGQgeW91IGltYWdpbmUgdGhlIGVkZ2UgeW91IHdvdWxkIGhhdmUgb3ZlciB5b3VyIG9wcG9uZW50cyBpZiB5b3UgYWxyZWFkeSBrbmV3IGhvdyB0aGV5IHBsYXllZCBvbmxpbmUgcG9rZXI/IFRoZSBiZW5lZml0cyB3b3VsZCBiZSBlbmRsZXNzLiBBY2NvcmRpbmcgdG8gdGhlIFBva2VyIEVkZ2UgUG9rZXIgU29mdHdhcmUgcHJvZHVjdCwgeW91IGNhbiByZWNlaXZlIGFjY2VzcyB0byB0aGVpciBkYXRhYmFzZSBjb250YWluaW5nIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBwbGF5ZXJzIGZyb20gYXJvdW5kIHRoZSB3b3JsZC4gVGhpcyB3aWxsIGFsbG93IHlvdSB0byB0cmFjayB0aGVpciBwbGF5IHRvIHBlcmZlY3Rpb24gYW5kIHdoZW4gdGhleSBtZWV0IHlvdSBhdCB0aGUgZmluYWwgdGFibGUsIHlvdSBjYW4gdGFrZSB0aGVtIGRvd24gaW4gYSBoZWFydGJlYXQuCkNvbmNsdXNpb246IFRoZXNlIGRhdGEgc3VnZ2VzdCB0aGF0IGltbWVyc2lvbiBhdCBib3RoIHRlbXBlcmF0dXJlcyByZXN1bHRlZCBpbiBzaW1pbGFyIHdob2xlIGxpbWIgYmxvb2QgZmxvdyBidXQsIHBhcmFkb3hpY2FsbHksIG1vcmUgYmxvb2Qgd2FzIGRpc3RyaWJ1dGVkIHRvIHRoZSBza2luIGluIHRoZSBjb2xkZXIgd2F0ZXIuIFRoaXMgc3VnZ2VzdHMgdGhhdCBjb2xkZXIgdGVtcGVyYXR1cmVzIG1heSBiZSBhc3NvY2lhdGVkIHdpdGggcmVkdWNlZCBtdXNjbGUgYmxvb2QgZmxvdywgd2hpY2ggY291bGQgcHJvdmlkZSBhbiBleHBsYW5hdGlvbiBmb3IgdGhlIGJlbmVmaXRzIG9mIGNvbGQgd2F0ZXIgaW1tZXJzaW9uIGluIGFsbGV2aWF0aW5nIGV4ZXJjaXNlIGluZHVjZWQgbXVzY2xlIGRhbWFnZSBpbiBzcG9ydHMgYW5kIGF0aGxldGljIGNvbnRleHRzLi4gCkVhcmx5IGluIHRoZSBkcmFmdCBpZiB5b3UgYXJlIGJpZGRpbmcgb24gYSBndXkgdGhhdCBpcyBsaWtlbHkgdG8gZ28gYXQgJDMwIGFuZCB0aGUgYmlkZGluZyBpcyAkMTUgb3IgJDE2LCBiYW5nIGl0IHRvICQyNS4gCllvdSBzdGF5IHdpdGggZnJpZW5kcyBpbiBsb25nZXIgcHJvZ3JhbXMsIG5ldHdvcmssIGFuZCAiZ2l2ZSBiYWNrIiBpbiBhIHdheSBtb3N0IGFsdW1uaSAob2YgYm90aCBjaGFwdGVyIGFuZCBzY2hvb2wpIG5ldmVyIGNvdWxkLiAKSSBoYXZlIGFuIGlzc3VlIHdpdGggdGhlIHRlcm0gYXMgaXQgdGVuZHMgdG8gZGVzY3JpYmUgdGhpbmdzIG9uZSBjb25zaWRlcnMgdG8gYmUgaW1tb3JhbCBvciB1bndlbGNvbWUuCkRpZCB5b3UgdGFrZSBhIGxvb2sgYXQgYWxsIHRoZSBvdGhlciByZXN1bHRzIHRoYXQgcG9wcGVkIHVwIHdoZW4gSSBzZWFyY2hlZCB1bmRlciBpbnN0ZWFkIG9mIFdoeSBqdXN0IG5lZ2F0aXZlIG9waW5pb24gcGllY2VzPyBXaGVyZSB0aGUgYmFsYW5jZT8KWW91IGRvbid0IG5lZWQgYW55IHNwZWNpYWwgcHJpdmlsZWdlcyBpbiBvcmRlciB0byBhY2Nlc3MgcG9rZXIgZ2FtZXMgYXZhaWxhYmxlIG9ubGluZS4gQWxsIHlvdSBoYXZlIHRvIGRvIGlzIGZpbmQgYSBnb29kLCByZWxpYWJsZSBvbmxpbmUgcG9rZXIgc2l0ZSwgcmVnaXN0ZXIgYW4gYWNjb3VudCBhdCB0aGUgd2Vic2l0ZSwgZGVwb3NpdCBzb21lIGZ1bmRzLCBsb2FkIHRoZSBnYW1lIGFuZCBwbGF5IHdoZW5ldmVyIHlvdSBsaWtlIGZvciBhcyBsb25nIGFzIHlvdSBsaWtlLiBCZWZvcmVoYW5kLCB5b3Ugc2hvdWxkIGNoZWNrIGlmIHRoZSBjYXNpbm8gdmVudWUgZmVhdHVyZXMgYSBzb2xpZCBzZWxlY3Rpb24gb2YgY2FzaW5vIHBva2VyIGdhbWVzLCBhbmQgbm90IGp1c3QgdmlkZW8gcG9rZXIgbWFjaGluZXMuIEFsc28sIHBheSBhdHRlbnRpb24gdG8gdGhlIGdhbWUgc3VwcGxpZXIgICB5b3Ugd291bGRuJ3Qgd2FudCBhbnl0aGluZyBsb3cgaW4gcXVhbGl0eSBhbmQgcGVyZm9ybWFuY2UuCk90aGVyIEFydGljbGVzICBKdW5lIDI3LCAyMDA1Ckluc3RlYWQgb2YgaW5jcmVhc2luZyBtYW5hZ2Vycycgd2FnZXMsIExldnkgc2FpZCwgdGhlIGRlYWxlcnMnIHN1cnBsdXMgdGlwcyB3ZXJlIHVzZWQgdG8gcGF5IG1hbmFnZXJzLCBldmVuIHRob3VnaCBkZWFsZXJzIGRpZCBhbGwgdGhlIHdvcmsuIApBbmQgdGhlc2UgZWlnaHQgbW9udGhzIHdlcmUgbm8gb3JkaW5hcnkgdGltZXMgbm90IGZvciBvdXIgZm9yZWlnbiByZWxhdGlvbnMgdGhhdCBzYXcgdGhlIHdvcmxkIGFyb3VuZCB1cyB0dXJuaW5nIHVwc2lkZSBkb3duLiAKUmVkZGl0IGNhbiBkZXRlY3Qgd2hlcmUgcGVvcGxlIGNvbWUgZnJvbSAobGlrZSBpZiB0aGV5IGFycml2ZSB2aWEgZXh0ZXJuYWwgbGlua3MpLCBhbmQgc3VkZGVuIGluZmx1eGVzIHRocm93IHVwIGFsbCBzb3J0cyBvZiByZWQgZmxhZ3MuLiAKRWxsZXMgc29udCB0b3V0ZXMgbGVzIGRldXggamV1bmVzICgyNSBldCAyNyBhbnMpLCBwYXJpc2llbm5lcywgZGlwbG1lcywgcGFzc2lvbm5lcyBwYXIgbGEgYm9ubmUgbm91cnJpdHVyZS4gCkFpZGVzIHNheSBzZXZlcmFsIHN1Ymdyb3VwcyBvZiBzZW5hdG9ycyBoYXZlIGJlZW4gaW4gY29udGFjdCB0byB0cnkgYW5kIGdhbWUgb3V0IG5leHQgc3RlcHMsIGJ1dCBub3RoaW5nIGhhcyBiZWVuIGxvY2tlZCBpbiB5ZXQuIApTZXZlcmFsIG90aGVyIGludGVybnMgYW5kIEkgbWFkZSBzdXJlIHRvIGJlIG9uIHRoZSB0ZWFtIG9wcG9zaXRlIGZyb20gdGhlIHByb2dyYW0gbGVhZGVyLiAKUG9saWNlIHNheSB0aGUgYnVzaW5lc3MgaGFzIHRpZXMgdG8gYW4gaW50ZXJuYXRpb25hbCBodW1hbiB0cmFmZmlja2luZyBhbmQgcHJvc3RpdHV0aW9uIHJpbmcsIGFuZCBzb21lIG9mIHRoZSB3b21lbiBhdCB0aGUgQXNpYW4gc3BhIGFuZCBmaXZlIG90aGVyIGFmZmlsaWF0ZWQgRmxvcmlkYSBwcm9wZXJ0aWVzIGFyZSBzZXggc2xhdmVzIGZyb20gQ2hpbmEuLiAKVmlsbGFpbiBoYXMgdG8gY2FsbCAxMTAwMCB0byB3aW4gdGhlIDI5MDAwIGluIHRoZSBwb3QsIHBsdXMgdGhlIHBvc3NpYmlsaXR5IG9mIHVwIHRvIDgyMDAwIG1vcmUgKHRoZSByZXN0IG9mIGhpcyBzdGFjaykgaWYgaGUgY2FsbHMuIFNpbmNlIHdlIGFscmVhZHkgYWNrbm93bGVkZ2VkIHlvdXIgZmxvcCBsZWFkIG1ha2VzIHlvdSBsb29rIGluY3JlZGlibHkgc3Ryb25nLCB3aGljaCBtZWFucyB5b3UgcHJvYmFibHkgYXJlIGdvaW5nIHRvIGJldCBhZ2FpbiBvciBjaGVjayBjYWxsIG1vc3Qgcml2ZXJzLCBJIGFtIG5ldmVyIGNhbGxpbmcgd2l0aCBhbiBvdmVycGFpciBhbmQgYWxtb3N0IGFsbCB0d28gcGFpcnMgaGVyZSwgd2hpbGUgSSBhbSBhbHNvIG5ldmVyIGZvbGRpbmcgYSBnb29kIGZsdXNoIGRyYXcuIApGcm9tIG15IGRhdGEgc3RydWN0dXJlcyBjbGFzcyBhdCBjb2xsZWdlLCBJIGtub3cgYmFzaWMgYnVpbGRpbmcgYmxvY2tzIGxpa2UgQkZTIGFuZCBERlMsIGJhY2t0cmFja2luZywgRFAsIHRyZWVzLCBncmFwaHMsIGV0Yy4gSSdtIGxlYXJuaW5nIHJlZ2V4LCBzdHVkeWluZyBmb3IgdGhlIFNDSlAgYW5kIHRoZSBTQ0pEIGFuZCBJJ2xsIHNob3J0bHkgdGFrZSBhIChkZW5zZSkgc3RhdGlzdGljcyBjb3Vyc2UuLiAKQm9wQm9wQVdheU9oIHUKR2VkIEZseW5uLCB3aG8gcnVucyBzdWljaWRlIHByZXZlbnRpb24gY2hhcml0eSBQYXB5cnVzLCBhcmd1ZXMgaW4gdGhlIHZpZGVvIHRoYXQsIGluIGFsbG93aW5nIGFsZ29yaXRobXMgdG8gYWdncmVnYXRlIGltYWdlcyBhcm91bmQgaGFzaHRhZ3MgbGlrZSAic3VpY2lkZSwiIHRoZSBwbGF0Zm9ybSBpcyBwb3RlbnRpYWxseSBjb21wbGljaXQuCklmIGNlbGwgZGVhdGggb2NjdXJzIGl0IGlzIGNhbGxlZCBpbmZhcmN0aW9uLiAKRXZlbiBpbiBsaWdodCBvZiB0aGlzIHBvd2VyZnVsIGV2aWRlbmNlIHRvIHRoZSBjb250cmFyeSwgQ2xldmVsYW5kIHdhcyBhY3R1YWxseSB0aGUgbGVhc3QgaW5zYW5lIHBlcnNvbiBpbiByZWdhcmQgdG8gZXhlY3V0aW9ucyBpbiBFcmllIENvdW50eS4gQmVmb3JlIGhlIHRvb2sgb2ZmaWNlLCB0aGUgQnVmZmFsbyBkZWF0aCBwZW5hbHR5IHNjZW5lIGhhZCBlbmpveWVkIGEgImNpcmN1cyBhdG1vc3BoZXJlLCIgd2l0aCBwZW9wbGUgZ2F0aGVyaW5nIHRvZ2V0aGVyIG9uIG5lYXJieSByb29mdG9wcyB0byBlbmpveSB0aGUgc3BlY3RhY2xlIG9mIGEgZmVsbG93IGh1bWFuIGJlaW5nIHNwYXNtaW5nIG91dCBoaXMgbGFzdCBob3JyaWZ5aW5nIG1vbWVudHMgb2YgbGlmZSB3aGlsZSBkYW5nbGluZyBmcm9tIHRoZSBlbmQgb2YgYSByb3BlIGxpa2UgYSBjYXQgdG95LiBPdGhlciB0aGFuIENsZXZlbGFuZCwgdGhlIGx1Y2t5IHNvbiBvZiBhIGd1bi4uIApQRCByZXN1bHRzIGZyb20gdGhlIHByb2dyZXNzaXZlIGxvc3Mgb2YgZG9wYW1pbmVyZ2ljIG5ldXJvbnMuIFRoaXMgcmVzdWx0cyBpbiBwb29yIG11c2NsZSBjb250cm9sLCBhbW9uZyBvdGhlciBzeW1wdG9tcy5DQkQgYWN0cyBhcyBhbiBpbnZlcnNlIGFnb25pc3QgYXQgdGhlIEdQUjYgcHJvdGVpbiByZWNlcHRvcnMgb2YgdGhlIGJyYWluLCB3aGljaCBib29zdHMgZG9wYW1pbmUgbGV2ZWxzIHNpbmNlIGEgZGVwbGV0aW9uIG9mIEdQUjYgaXMgY29ycmVsYXRlZCB3aXRoIHRoaXMgZWZmZWN0IGluIHdheXMgd2UgZG9uIGZ1bGx5IHVuZGVyc3RhbmQgYXMgb2YgeWV0LlNvIG5vLCB0aGUgQ0JEIG9pbCBpcyBub3Qgc2xvd2luZyBkb3duIGhpcyBicmFpbiBmdW5jdGlvbiB0aGF0IHByZWNpc2VseSB0aGUgaXNzdWUgd2l0aCBQRC4gCkEgQ29udmVyc2F0aW9uIGZvciBLaXNzaW5nCkZyZWQgUlJTUCwgd2l0aCBhIHByZXNlbnQgYmFsYW5jZSBvZiAkOTIsMDAwIGFuZCBhZGRpdGlvbnMgb2YgJDIsNDAwIHBlciB5ZWFyIGdyb3dpbmcgYXQgMyBwZXIgY2VudCBwZXIgeWVhciBhZnRlciBpbmZsYXRpb24gd291bGQgcmlzZSB0byAkMTE5LDQwMCBieSBhZ2UgNjAgYW5kIHN1cHBvcnQgcGF5b3V0cyBvZiAkNTA4IHBlciBtb250aCBpbiAyMDE5IGRvbGxhcnMgZm9yIDMwIHllYXJzIHRvIGhpcyBhZ2UgOTAuCkkgYWx3YXlzIHVzZSB3aG9sZXdoZWF0IGZsb3VyLiAKVGhlaXIgcmFjaW5nIGRheXMgYXJlIG92ZXIgYnkgYWdlIDQuIEl0J3Mgd2hhdCBoYXBwZW5zIHRoZW4gdGhhdCBoYXMgY3JlYXRlZCBhIHdpZGVzcHJlYWQgYmFja2xhc2ggYWdhaW5zdCBncmV5aG91bmQgcmFjaW5nOiBVcCB1bnRpbCB0aGUgbGF0ZSAxOTgwcywgdGhlIGRvZ3Mgd2VyZSByb3V0aW5lbHkgZXV0aGFuaXplZCBvbmNlIHRoZXkgd2VyZSBubyBsb25nZXIgdXNlZnVsLiBUaGVyZSBhcmUgaG9ycm9yIHN0b3JpZXMgb2YgZG9ncyBiZWluZyBsZWZ0IGJlaGluZCBieSB0aGVpciBvd25lcnMgYXQgRmxvcmlkYSB0cmFjayBrZW5uZWxzIHRvIHNpY2tlbiBvciBzdGFydmUgdG8gZGVhdGguIApGdW5kcmFpc2luZzogTm8gZnVuZHJhaXNpbmcsIHBsZWFzZS4gClRoZSB0d28gcm91dGVzIHRoYXQgcmVjZWl2ZXJzIGNhbiBlbGFib3JhdGUgb24gYXJlIHRoZSBjZW50cmFsIGFuZCB0aGUgcGVyaXBoZXJhbCByb3V0ZXMuLiAKSGUgY2F1Z2h0IHRoZSBtZXJlc3QgZmxpY2tlciBvZiByZWNvZ25pdGlvbiBmcm9tIHRoZSBhcHBhcmVudCBkcnVuayAgIGluIHJlYWxpdHkgYSBtYW4gQmxvY2ggaGFkIHRyYWluZWQgd2l0aCBmb3IgbW9udGhzLiAKVGhhdCBzdW0sIGdyb3dpbmcgYXQgMiBwZXIgY2VudCBwZXIgeWVhciBhZnRlciBpbmZsYXRpb24gYW5kIHRheCwgd291bGQgc3VwcG9ydCBwYXlvdXRzIG9mICQxNCw1MzIgcGVyIHllYXIgZm9yIDQwIHllYXJzIHRvIFJvYmJpZSBhZ2UgOTAuLiAKU3VibWl0IGxpbmtzIGFuZCBkaXNjdXNzaW9uIHBvc3RzIHRoYXQgYXJlIHdpdGhpbiB0aGUgY29udGV4dCBvZiB2aXJ0dWFsIHJlYWxpdHkgYW5kIG9mIGludGVyZXN0IHRvIHRoZSAvci9WaXZlIGNvbW11bml0eS4gQXMgd2VsbCBhcyB0aGUgZXhwZXJpZW5jZXMgb2ZmZXJlZCBieSBTdGVhbVZSLCBWYWx2ZSBhbmQgdGhlIEhUQyBWaXZlLCBtb3JlIGdlbmVyYWwgZGlzY3Vzc2lvbiBvZiB2aXJ0dWFsIHJlYWxpdHkgaW5jbHVkaW5nIG90aGVyIHBsYXRmb3JtcyBhbmQgaW5kdXN0cnkgbmV3cyBpcyByZWxldmFudCB0byB0aGlzIGNvbW11bml0eS4gCldpdGggdGhhdCBpbmZvcm1hdGlvbiBpbiBtaW5kLCB0aGUgdHJhbnNhY3Rpb24gY2FuIGJlIHByb3Blcmx5IHN0cnVjdHVyZWQgYW5kIHJlY29yZGVkIHRvIGF2b2lkIGFueSBmdXR1cmUgdW5jZXJ0YWludHkuIEFuZCB0aGUgbmVlZCBmb3IgYSBuZXcgdHJpYWwuLiAKWWFuZyBjb21lcyBvbiB0aGUgc2hvdyBvbmUgdGltZSBhbmQgZXZlcnlvbmUncyBpbW1lZGlhdGVseSBqZXJraW5nIGhpcyBzb2NpYWxpc3QgZGljayBvZmYgaW50byB0aGUgc3Vuc2V0IHdpdGhvdXQgYSBiYWNrd2FyZCBnbGFuY2UgYXMgdG8gaG93IG90aGVyIGZhY3RvcnMgbWlnaHQgcGxheSBpbnRvIHdoZXRoZXIgYSBiYXNpYyBsaXZpbmcgd2FnZSBpcyBhY3R1YWxseSBhIGdvb2QgaWRlYSBpbiB0aGUgbG9uZyB0ZXJtLCBvciB3aGV0aGVyIGl0IG1pZ2h0IGFjdHVhbGx5IGp1c3QgZnVydGhlciBjb250cmlidXRlIHRvIHRoZSBkdW1iaW5nIGRvd24gYW5kIGV2ZW50dWFsIG9wZW5pbmcgdXAgZm9yIGVuc2xhdmVtZW50IG9mIHRoZSBBbWVyaWNhbiBwZW9wbGUuIE5vdCBzYXlpbmcgWWFuZyBpcyBhIGEgYmFkIGd1eSBvciB0aGF0IGhpcyBwcm9wb3NlZCBwb2xpY2llcyBoYXZlIHplcm8gcG90ZW50aWFsIG1lcml0LCBpdCdzIGp1c3QgaW50ZXJlc3RpbmcgdG8gd2F0Y2ggdGhpcyBncm91cCBjb2xsZWN0aXZlbHkganVtcCBvbiB0aGUgYmFuZHdhZ29uIGZvciBhIHBvbGljeSBhcyByYWRpY2FsIGFzIFVCSSwgd2l0aG91dCBjb25zaWRlcmluZyBob3cgY2xvc2UgdG8gY29tbXVuaXNtIGFuZCBpdCdzIGFzc29jaWF0ZWQgZXZpbHMgdGhhdCBpdCBicmluZ3MgdGhlbS4uIAoiVGhlcmUgYXJlIGZld2VyIHBlb3BsZSBpbiBvdXIgb2ZmaWNlIHdoZW4gdGhlcmUgYXJlIHBvd2RlciBkYXlzLiAKQXQgdGhlIHRvcCBvZiBEaWFibG8gd2UgcmVncm91cGVkIHdpdGggdG9ucyBvZiBvdGhlciByaWRlcnMgYWxsIGhhdmluZyBsaXR0bGUgY2VsZWJyYXRpb25zIGZvciBoYXZpbmcgY29ucXVlcmVkIHRoZSBtb3VudGFpbi4uIApHbyBvdXQgd2l0aCBnaXJsZnJpZW5kcywgZ2V0IGEgcGVkaSwgb3IganVzdCBkbyB3aGF0ZXZlciB5b3Ugd2FudC4gTGV0IGhpbSBzZWUgd2hhdCBoYXZpbmcgYSBiYWJ5IGhvbWUgYWxvbmUgaXMgbGlrZS4gCkNhbmFkYSBpcyBhbHNvIGFtb25nIEN1YmEncyAxMCB0b3AgdHJhZGUgcGFydG5lcnMsIHdpdGggQ2FuYWRhIEN1YmEgdHJhZGUgdG90YWxpbmcgJDc5MCBtaWxsaW9uIGluIDIwMTcuIFRoaXMgaXMgQ3ViYSdzIG9ubHkgdHJhZGUgcGFydG5lcnNoaXAgd2hlcmUgdGhlIHRyYWRlIGJhbGFuY2UgaXMgaW4gdGhlIGNvdW50cnkncyBmYXZvciwgYWNjb3JkaW5nIHRvIHRoZSBsYXRlc3QgQ3ViYW4gdHJhZGUgZmlndXJlcy4KSSdtIHN1cmUgaWYgdGhleSBoYWQsIHRoZXkgd291bGQgaGF2ZSBhbGVydGVkIHVzLiByZWl0ZXJhdGUsIGl0IHJlYWxseSB3YXMgYSBzZXJpb3VzIHByb2JsZW0gZm9yIHVzIG92ZXIgYSBsb25nIHBlcmlvZCBvZiB0aW1lIGFuZCBJIHdhbnQgdG8gc3RyZXNzIGFnYWluLCBmb3IgYSBzaWduaWZpY2FudCBwcm9wb3J0aW9uIG9mIHRoYXQgcGVyaW9kIG9mIHRpbWUgd2UgaGFkIG5vIHdheSBvZiBrbm93aW5nIHRoYXQgd2Ugd2VyZSBub3QgdW5kZXIgaG9zdGlsZSBhbmQgc3VzdGFpbmVkIGF0dGFjay4gCkRpZmZlcmVudCBwYXJ0cyBvZiB3ZWFwb25zIHJlc3BvbmQgZGlmZmVyZW50bHkgdG8gZ3JleSB2YWx1ZXMgb2YgdGhlIGFscGhhIGNoYW5uZWxzLiBUaGUgbWFnYXppbmUgb24gdGhlIFVNUCBmb3IgZXhhbXBsZSBhbHJlYWR5IHdlYXJzIGF0IDAuMDAwMDAwMDAgKHNvIGFic29sdXRlIGZhY3RvcnkgbmV3KSBhdCBhIGdyZXl2YWx1ZSBvZiBhcm91bmQgMTk1LiBUaGlzIG1lYW5zIHRoYXQgdGhlIGNyZWF0b3JzIGNhbiBvbmx5IGFkanVzdCB0aGUgd2VhciBiZXR3ZWVuIDE5NSBhbmQgMjU1IHdoaWNoIGlzIGxlc3MgdGhhbiB0aGUgZ2VuZXJhbCAxMjcuNSBhbmQgMjU1LiAKSXMgVGhhdCBDcmF6eSBFbWFpbCBBYm91dCBUaWdlciBXb29kcyBUcnVlCkRvbid0IGJlIGRlY2VpdmVkIGJ5IHZhbHVlcy4gQSAkMjUsMDAwIGRlY2sgcmVwYWlyIGNhbiBlYXNpbHkgc3BpcmFsIG91dCBvZiBjb250cm9sIGludG8gYSAkMTAwLDAwMCBuaWdodG1hcmUuIEdldCB0aGUgcmlnaHQgY29uc3VsdGFudHMgb24gdGhlIGpvYiBhbmQgZG8gaXQgb25seSBvbmNlLiBBIGNvbW1vbiB3YXJuaW5nIGFsYXJtIGZyb20gYSBjb250cmFjdG9yIGlzOiAiSWYgeW91IGFyZSBnb2luZyB0byBzZWVrIGNvbXBldGl0aXZlIGJpZHMgb24gdGhpcyBwcm9qZWN0LCBJIGFtIG5vdCBpbnRlcmVzdGVkIGJlY2F1c2UgaXQgd2lsbCB0aGUgbWFrZSB0aGUgcHJvamVjdCB0b28gZXhwZW5zaXZlLiIgV2hhdCB0aGV5IGFyZSByZWFsbHkgc2F5aW5nIGlzOiAiSWYgeW91IHdhbnQgbWUgdG8gY29tcGV0ZSBvbiBhIGxldmVsIHBsYXlpbmcgZmllbGQgd2l0aCBldmVyeW9uZSBlbHNlLCBJIHdvbid0IHBsYXkuIgpJZiBJIGRvbiAzLzQgYmV0IGEgbG90LCBwb3RzIGVhc2lseSBnbyA1IG9yIDYgd2F5cyB0byBhIGZsb3AuIApUaGFua3MsIERpc25leS4gVGhpcyBpcyBhZHZpY2UgdGhhdCB5b3UgZG9uIG5lZWQsIHBlcnNvbmFsbHksIGJ1dCB0cnkgdG8gc3RlcCBvdXQgb2YgeW91ciBvd24gYmlnIGJyYWluIGFuZCBpbnRvIGFuIGVtcGF0aGV0aWMgcGxhY2Ugd2hlcmUgeW91IG1pZ2h0IHVuZGVyc3RhbmQgdGhhdCBub3QgZXZlcnlvbmUgaGFzIGFscmVhZHkgY29tZSB0byB0aGUgc2FtZSByZWFsaXphdGlvbnMgYXMgeW91Li4gCkV0aGFuIEphbWVzClR5cGVzIG9mIE1hc3NhZ2UgZm9yIFRyaWF0aGxldGVzCkRpZmZlcmVudCBkcnVncyBnbyB0aHJvdWdoIHRoaXMgY3ljbGUgb24gYSBkaWZmZXJlbnQgdGltZWxpbmUuIFRoZXJlIGFyZSBzb21lIHRoYXQgbGFzdCBob3VycyBpbiB0aGUgYm9keSwgYW5kIHNvbWUgdGhhdCBsYXN0IHdlZWtzLiBUaGVyZSBpcyBldmVuIG9uZSB0aGF0IGlzIGdpdmVuIG9uY2UgYSB5ZWFyLiAKRmFyIGFzIFBlbGwgR3JhbnRzIGdvLCBob3dldmVyLCB0aGV5IGRldGVybWluZSB5b3VyIGF3YXJkIGJhc2VkIG9uIHRoZSBjb3N0IG9mIHlvdXIgdHVpdGlvbiwgYW5kIHdoZXRoZXIgeW91IGdvIHRvIHNjaG9vbCBmdWxsIHRpbWUsIHRocmVlIHF1YXJ0ZXIgdGltZSwgaGFsZiB0aW1lLCBvciBsZXNzIHRoYW4gaGFsZiB0aW1lLiBJdCB1cCB0byB5b3VyIHNjaG9vbCB0byBkZXRlcm1pbmUgeW91ciBzdGF0dXMsIGFuZCBjYWxjdWxhdGUgaG93IG11Y2ggdGhleSBnb2luZyB0byBnaXZlIHlvdS4gU28gaWYgeW91ciBzY2hvb2wgdHVpdGlvbiBpcyBleHBlbnNpdmUsIHRoZW4geW91IGdldCBtb3JlLiBJZiBpdCBjaGVhcCwgeW91IGdldCBsZXNzLgpTb2FrIHlvdXIgbmFpbHMuIEdldCBhIHNtYWxsIGJhc2luIGFuZCBmaWxsIHdpdGggd2FybSB3YXRlci4gClRoZXkgY2FuIGFmZm9yZCB0byB0YWtlIEx5ZnRzIGFuZCBVYmVycywgYnV0IGNob29zZSB0byBkcml2ZSBpbnN0ZWFkLiBBbmQgd2hlbiB0aGV5IHNsYW0gaW50byBzdHJlZXQgc2lnbnMgYW5kIHN1cnZpdmUsIHRoZXkgaGF2ZSB0aGUgY2FzaCBhbmQgY29sbGF0ZXJhbCB0byBwb3N0ICQyNTAsMDAwIGJhaWwuLiAKQWwgdXNhciBhY2VpdGUgc29icmUgbGEgcGllbCBlc3RhbW9zIGx1YnJpY2FuZG8sIGhpZHJhdGFuZG8sIHByb3RlZ2llbmRvIHkgYXl1ZGFuZG8gYSBkZXNpbnRveGljYXIgeSBhIHJlanV2ZW5lY2VyIGxhIHBpZWwsIGVsIHNpc3RlbWEgbmVydmlvc28geSBjYWxtYW5kbyBlbCBzaXN0ZW1hIGdsYW5kdWxhci4uIApBbmQgdGhhdCB3YXMgZm9yIDIgbW9udGhzIG9mIGNhcmUgV0lUSCBtZWRpY2F0aW9ucy4gCkJ1dCwgSSBkaWdyZXNzLiAKVGhlIGd1eSB0aGF0IHdlbnQgaG9tZSBoYXMgaGlzIHdpZmUgYXMgYW4gYWxpYmkuIApCdXQgb25lIGludmVudGlvbiBjaGFuZ2VkIGFsbCB0aGF0IG92ZXJuaWdodCBhbmQgbWFkZSBzbGF2ZXJ5IHN1ZGRlbmx5IHJlYWxseSBwcm9maXRhYmxlLCBpdCB3YXMgdGhlIENvdHRvbiBHaW4uIFByaW9yIHRvIHRoZSBDb3R0b24gR2luIGl0IHdhcyBhIGdpYW50IHBhaW4gdG8gaGFydmVzdCBjb3R0b24uIFRoZSBjb3R0b24gd2FzIGhlYXZpbHkgcHJvdGVjdGVkIGJ5IHRoZSBwbGFudCwgZ2V0dGluZyB0aGUgY290dG9uIG91dCBvZnRlbiBsZWZ0IG9uZSBoYW5kcyBibGVlZGluZywgY290dG9uIHdhcyBjb25zaWRlcmVkIG1vcmUgdHJvdWJsZSB0aGVuIGl0IHdhcyB3b3J0aCB0byBncm93LiBCdXQgdGhlbiB0aGFua3MgdG8gdGhlIGNvdHRvbiBnaW4geW91IGNvdWxkIGR1bXAgYWxsIHlvdXIgZnJlc2hseSBoYXJ2ZXN0ZWQgY290dG9uIGludG8gYSBtYWNoaW5lLCBhbmQgaGF2ZSAxIHNsYXZlIHNwaW4gYSBsZXZlciB0byBicmVhayB0aGUgY290dG9uIG91dCBwYWluIGZyZWUuIDEgc2xhdmUgY291bGQgZG8gdGhlIHdvcmsgb2YgZG96ZW5zIGFsbCBvZiBhIHN1ZGRlbi4gVGhpcyBpcyB3aHkgY290dG9uIHdhcyBraW5nIGluIHRoZSBzb3V0aC4KVGhpcyBwaWVjZSB3b3JrcyB0byBwcm92aWRlIGEgaGlnaGVyIGxldmVsIG9mIHdlaWdodCB0byB0aGUgY2hpcCB0aGF0IGl0IGlzIGluc2VydGVkIGluLiAKV2UgaGFkIGEgcHJldHR5IGdvb2QgZXhwZXJpZW5jZSB3aXRoIERpbGF3cmkgQmFuayBTdHJlZXQgTWF6ZGEuIFdlIGRlYWx0IHdpdGggU3VubnksIGFuZCBoZSB3YXMgdmVyeSBpbmZvcm1lZCBvbiB0aGUgcHJvZHVjdCwgYW5kIGNsZWFybHkgc3Rvb2QgYmVoaW5kIGl0ICh1bmxpa2Ugb3RoZXIgZGVhbGVyc2hpcHMgd2Ugd2VudCB0bywgaGUgd2FzIGhhcHB5IHRvIGhhdmUgdXMgbGVhdmUgYW5kIHRyeSBvdGhlciB2ZWhpY2xlcywgYmVjYXVzZSBoZSB3YXMgY29uZmlkZW50IHdlIGNvbWUgYmFjayB0byBNYXpkYSAgIGhlIHdhcyByaWdodCwgZXZlbiB0aG91Z2ggd2hlbiB3ZSBzdGFydGVkIHJlc2VhcmNoaW5nLCB0aGF0IHdhc24gdGhlIG9uZSB3ZSB0aG91Z2h0IHdlIGVuZCB1cCB3aXRoISkuIE1hemRhIGRvZXNuIG5lZ290aWF0ZSBhcyBtdWNoIGFzIHNvbWUgYnJhbmRzIG9uIGZpbmFsIHByaWNlLCBidXQgd2UgZGlkIGdldCBhIG51bWJlciBvZiBhZGQgaW5zIChpbmNsdWRpbmcgcmVjb21tZW5kYXRpb25zIG9uIHN0dWZmIHRoYXQgYWN0dWFsbHkgd2VyZW4gTWF6ZGEgYnJhbmQgYmVjYXVzZSBoZSB0aG91Z2h0IHRoZXkgd2VyZSBzdXBlcmlvciBhbmQgY29zdCBsZXNzLCB3aGljaCB3ZSBhcHByZWNpYXRlZCkuIApUaGVyZSBpcyBubyBldmlkZW5jZSB0byBzaG93IHRoYXQgdGhleSBjb250cmlidXRlIHRvIHRoZSBmaWxtLiAKU2ltaWxhcmx5LCB0aGUgd29yZCBtYXJpanVhbmEgZXhpc3RlZCBiZWZvcmUgSGVucnkgSi4gClRvZGF5IEkgZ29pbmcgdG8gdGVsbCB5b3UgYWJvdXQgaG93IEkgZGVhbCB3aXRoIHRoZSBkYWlseSBncmluZCBvZiBXVEYgQU0gSSBNQUtJTkcgRk9SIERJTk5FUiBUT05JR0hUIHRoYXQgbWFrZXMgZXZlbiB0aGUgbW9zdCBlYWdlciBjb29rIGEgbGl0dGxlLCBzaGFsbCB3ZSBzYXksIGl0Y2h5LiBJIGRvbiBrbm93IGhvdyBtYW55IG9mIHlvdSBoZXJlIGFyZSBhbHNvIGZvbGxvd2luZyBtZSBvbiBJbnN0YWdyYW0sIHdoZXJlIEkgbWVudGlvbmVkIHRoaXMgbmV3IHdheSBvZiBtZWFsIHBsYW5uaW5nIGJhY2sgaW4gSmFudWFyeSwgc28gZm9yZ2l2ZSBtZSBpZiB0aGlzIGlzIGEgbGl0dGxlIHJlcGV0aXRpdmUsIGJ1dCBJIHJlYWxseSBkbyBmaW5kIGl0IHN1Y2ggYSBoZWxwZnVsIHdheSBvZiB3b3JraW5nIHRocm91Z2ggdGhlIGNvbnN0YW50IGFuZCB1bnJlbGVudGluZyBjaG9yZSBvZiBoYXZpbmcgZGlubmVyIG9uIHRoZSB0YWJsZSBldmVyeSBldmVuaW5nIHRoYXQgcGVyaGFwcyBpdCBjYW4gYmUgdXNlZnVsIHRvIGEgZmV3IG9mIHlvdSB0b28uIApFdGVybmFsbHkgd2FpdGluZyBmb3IgQW96YWtpIFRvdWtvCkhlcmUgYXJlIHNvbWUgb2YgdGhlbTpJIGFsc28gaGF2ZSBwYXJ0IHNoYXJlcyBpbiAuIApJIGp1c3QgdGhvdWdodCB0aGlzIHdhcyBvbmUgb2YgdGhlIGNvb2xlciBOYXJ1dG8gc3RhdHVlcyBJIHNlZW4uIEkgYmVlbiBkeWluZyB0byBnZXQgbXkgaGFuZHMgb24gYW4gYXJ0IHBpZWNlIHRvIGNvbW1lbW9yYXRlIG15IGZhdm9yaXRlIGFuaW1lIGFuZCBhbHdheXMgd2FudGVkIHNvbWV0aGluZyB3aXRoIHRoZSB5b3VuZ2VyIE5hcnV0byAod2hpY2ggSSByZXNvbmF0ZSBtb3JlIHdpdGgpLiAKQWVvbm9yaXMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCldoYXQgdGhlIG1vc3QgcHJvZml0IC8gZ3JlYXRlc3QgbG9zcyB5b3UgbWFkZSBhdCBhdWN0aW9uPwpXaGF0IGRvZXMgdGhhdCB0ZWxsIHlvdT8gQmFzaWNhbGx5IHRoYXQgeW91IG5lZWQgdG8gaGF2ZSBhIGJldHRlciB0aGF0IDEwJSBjaGFuY2Ugb2Ygd2lubmluZyB0aGUgaGFuZCB0byBtYWtlIGl0IHdvcnRoIHBsYXlpbmcuIElmIHlvdSdyZSA0IGNhcmRzIHRvIGEgZmx1c2gsIHlvdSBoYXZlIGEgMzYlIGNoYW5jZSwgc28gdGhhdCdzIGRlZmluaXRlbHkgYSBiZXQgeW91IHdhbnQgdG8gbWFrZS4gT1RPSCwgaWYgdGhlIGd1eSBiZXRzICQyMDAgaW50byBhICQxMDAgcG90LCB5b3UnbGwgZW5kIHVwIGhhdmluZyB0byBiZXQgJDEwMCBvbiBhIDQgMSBwYXkgb2ZmLCB3aGljaCBtZWFucyB0aGF0IHlvdSdkIGxvc2UgbW9uZXkgdGFraW5nIHRoYXQgYmV0Li4gCkhvdyB0byBQbGF5IEJpZyBUd28gQ2FyZCBHYW1lIEFLQSBDaGluZXNlIFBva2VyCk1vdmVtZW50IG9mIGJsb29kIGFuZCBseW1waCAgIEJsb29kIGNpcmN1bGF0aW9uIGNhbiBiZSBpbXByb3ZlZCB0aHJvdWdoIHNwb3J0IG1hc3NhZ2UuIFRoZSBwcmVzc3VyZSBleGVydGVkIGJ5IHRoZSBtYXNzYWdlIHRlY2huaXF1ZSBjb21wcmVzc2VzIGFuZCByZWxlYXNlcyBibG9vZCB2ZXNzZWxzIHdoaWNoIHN1cHBsZW1lbnRzIHRoZWlyIG5vcm1hbCBwdW1waW5nIGFjdGlvbi4gQnkgaW5jcmVhc2luZyBwcmVzc3VyZSBhIHZhY3V1bSBpcyBjcmVhdGVkIHdoaWNoIHN1Y2tzIGZsdWlkIHRocm91Z2ggdGhlIGJsb29kIGFuZCBseW1waCB2ZXNzZWxzLiBUaGlzIGlzIGltcG9ydGFudCBpbiB0aWdodCBvciBkYW1hZ2VkIG11c2NsZSB0aXNzdWUgYXMgYSB0aWdodCBtdXNjbGUgd2lsbCBhY3QgYXMgYSBzcG9uZ2UgYW5kIHdvbid0IHByb3ZpZGUgdGhlIHZpdGFsIG51dHJpZW50cyB0aGF0IG11c2NsZXMgbmVlZCB0byByZXBhaXIuIEluY3JlYXNlZCBjaXJjdWxhdGlvbiBoYXMgdGhlIGJlbmVmaXQgb2YgaW5jcmVhc2luZyB0aGUgc3VwcGx5IG9mIG94eWdlbiBhbmQgbnV0cmllbnRzIHRvIHRoZSBhZmZlY3RlZCBhcmVhIGFuZCBhaWRzIGx5bXBoYXRpYyBkcmFpbmFnZS4KU29mdCBOYW1lIE1vam9zb2Z0IFBob3RvIEZyYW1lIFN0dWRpbyBWZXJzaW9uIDIuOTYgREMgMDYuMTEuMjAxNCBTaXplIFBhcnQxIDEwMCBNQiBQYXJ0MiA5MiBNQiBTaW5nbGUgMTkyLjEuIApCdXQgQ2FuYWRpYW5zIHVuZGVyc3RhbmQgb3VyIHNpdHVhdGlvbi4gCkkgdGhvdWdodCB0aGF0IGNvbnRhaW5lciBob21lIGJ1aWxkaW5nIG9yaWdpbmFsbHkgY2FtZSBmcm9tIGEgZGVzaXJlIHRvIHJlIHVzZSBtYXRlcmlhbHMgaW4gYW4gZWNvIGZyaWVuZGx5IHdheSBieSB0dXJuaW5nIDEgdGhpbmcgaW50byBhbm90aGVyIHRoaW5nIHdpdGggbWluaW1hbCBhbW91bnRzIG9mIGVuZXJneSBzcGVudCB0byByZWN5Y2xlIHRoZSBzdGVlbC4gU3VyZSB0aGVyZSBhcmUgaW5zdWxhdGlvbiBuZWVkcywgd2hpY2ggdGhlc2UgYnVpbGRlcnMgYWRkcmVzc2VkLCBhbmQgeWVzIHRoZXJlIGFyZSBjb25zdHJhaW50cyAoY29udGFpbmVycyBhcmUgbm90IHRoZSBtb3N0IHNwYWNpb3VzKSwgYnV0IG5vbmUgb2YgdGhlc2UgdGhpbmdzIGFyZSBkZWFsIGJyZWFrZXJzLgpUaGUgb2ZmaWNlciB0aGVuIG1hZGUgYSByZXF1ZXN0IG92ZXIgdGhlIHJhZGlvIGZvciBhZGRpdGlvbmFsIGFzc2lzdGFuY2UgdG8gcmVzcG9uZCwgc2F5aW5nIHRoZSBtYW4gd2FzIHVuY29vcGVyYXRpdmUgYW5kIHVud2lsbGluZyB0byBwdXQgZG93biBhIGJsdW50IG9iamVjdC4gCiQzMCAkNDUuIAoiWW91IHdhbnQgSSBzaG91bGQgbGVhdmUgdGlwPyIgSGUgYXNrcyBhbmQgcmFpc2VzIGFuIGV5ZWJyb3cgYXQgbWUuIApJIHdhbnQgeW91IHRvIGFsc28gcmVjb2duaXplIHRoYXQgbWFueSBvZiB0aGUgaHVyZGxlcyBiZWZvcmUgeW91IGhhdmUgYmVlbiBibG93biB1cCBpbiB5b3VyIG1pbmQgdG8gYmUgZmFyIG1vcmUgZGlmZmljdWx0IHRoYW4gdGhleSByZWFsbHkgYXJlLiBJbiBvcmRlciB0byBnZXQgYSBkcml2ZXIgbGljZW5jZSwgeW91IG5lZWQgdG8gcHV0IGluIHRoZSB3b3JrIHN0dWR5aW5nIGZvciB0aGUgdGVzdCwgYW5kIHByYWN0aWNpbmcgZHJpdmluZy4gVGhhdCBpdC4gCkJhc2ljYWxseSBteSBib3NzIGRpZG4ndCB0cnVzdCB0aGF0IEkgbG9va2VkIGV2ZXJ5d2hlcmUgSSBjb3VsZCBmb3IgaW5mb3JtYXRpb24gb24gYSBwcm9qZWN0IEkgd2FzIGRvaW5nIGFuZCBoaXMgaWRlYSB3YXMgdG8gbG9vayBhdCBXaWtpcGVkaWEgZm9yIGluZm9ybWF0aW9uLiAKSXQgaXMgYSBzbWFsbCBwaWVjZSBvZiBhIHZlcnkgbGFyZ2UgcHV6emxlLiBBbnkgbWFuIHdobyBpcyBvYnN1cmRseSBqdWRnZW1lbnRhbCB0aGF0IHlvdSBhcmUgYSBodW1hbiB3aG8gaGFzIGFuZCB3aG8gd2lsbCBtYWtlIG1pc3Rha2VzIGlzbiBzb21lb25lIHdobyB3b3VsZCBtYWtlIGdvb2QgY2FwdGFpbiBtYXRlcmlhbC4gCkFtZXJpY2FuIGNhc2lub3MgdG9vayBvbmUgbG9vayBhdCB0aGVpciBjdXN0b21lcnMgYW5kIHB1dCB0aGF0IGRvdWJsZSB6ZXJvIHJpZ2h0IGJhY2sgb24gdGhlcmUuIEFuZCB0aGVuIGFkZGVkIGEgdHJpcGxlIHplcm8uIApJIGZpbmQgaXQgdXR0ZXJseSBiYWZmbGluZyB0aGF0IHRoZXNlIGFyZSBwYWlkIHByb2Zlc3Npb25hbHMuIApBZ2FpbiwgeW91ciBwb2tlciBjYWxjdWxhdG9yIGlzIGp1c3Qgbm90IGdvaW5nIHRvIGFncmVlIHdpdGggdGhpcyBzdHJhdGVneSBoZXJlLiAKVGhpcyBoYWQgdG8gYmUgdGhlIHRvdWdoZXN0IGNsaW1iIGkgaGF2ZSBmYWNlZC4gCkNlcyBjbGFpcnMuLiAKIlRvIHN0YXJ0IHdpdGggaXQgd2FzIGp1c3QgaW5ub2NlbnQgc3R1ZmYgbGlrZSwgJ0hvdyBhcmUgeW91IGRvaW5nJyBhbmQgc2lsbHkgc2VsZmllcywgU2VtaWNoaSBzYWlkLiAiQnV0IHRoZW4gaGUgc3RhcnRlZCBhc2tpbmcgbW9yZSBhbmQgbW9yZSBwZXJzb25hbCBxdWVzdGlvbnMuIEhlIHNlZW1lZCByZWFsbHkgaW50byBtZS4gCkN1cnJlbnRseSAvNSBTdGFycy4gCkkgYW0gYSBiaWcgZmFuIG9mIHRoZSBtYWxlIEcgc3BvdCBtYXNzYWdlIG9yIHByb3N0YXRlIG1hc3NhZ2UuIFZlcnkgZmV3IHByb3ZpZGVycyBhY3R1YWxseSBrbm93IHdoYXQgdGhlcmUgZG9pbmcgaW4gdGhlIGFyZWEuIApJIHdyb3RlIG9uZSBvZiB0aG9zZSBsb25nIGxldHRlcnMgdG8gbXkgbW9tIG9uY2UuIEl0IHdhcyBhZnRlciAyMiB5ZWFycyBvZiBhcmd1bWVudHMsIGJlaGF2aW9yIHRoYXQgaHVydCBtZSwgYXdmdWwgYmxvd3MgdXBzLCBldGMuIApOb3csIEkga25vdyBhIGJhZCByZWxhdGlvbnNoaXAgY2FuIGhhdmUgYSB0b24gb2YgcG9zc2libGUgY2lyY3Vtc3RhbmNlcywgYnV0IGl0IGxpa2Ugb25lIGJhZCByZWxhdGlvbnNoaXAgY29sbGFwc2VkIHRoZWlyIHdob2xlIHZpZXdwb2ludCBhbmQgdGhleSBjYW4gYmVsaWV2ZSBhbnlvbmUgY2FuIGJlIGhhcHB5IGJlY2F1c2Ugb2Ygd2hhdCBoYXBwZW5lZCB0byB0aGVtLiBJIGRvbiBkZWFsIHdpdGggaXQgYW55bW9yZSwgYnV0IEkgZmVlbCBpdCBhbiBleGhhdXN0aW5nIHdheSB0byBsaXZlLi4gCkhlIHdhcyBxdWl0ZSB0aGUgY2hhcm1lciBpbiB0aG9zZSBkYXlzLiAKV2hhdCB0aGlzIGRvZXMgaXMgdHdlYWsgdGhlIHByb2JhYmlsaXR5IG9mIGxhbmRpbmcgb24gZGlmZmVyZW50IHBsYWNlcyBhY3Jvc3MgdGhlIGJvYXJkLiAKRGlhZ29uYWwgbGF5ZXJpbmcgbWF5IHByb3ZpZGUgdGhlIGJlc3QgY29tcHJvbWlzZSwgYnV0IGl0IHRlbmRzIHRvIGJlIGEgYmlnIHBhaW4gaW4gdGhlIGFzcyBhbmQgYSB3YXN0ZSBvZiBwbHl3b29kLiBJIHN1Z2dlc3QgcHV0dGluZyB0aGUgc3VyZmFjZSBvbiBzbyB0aGF0IHRoZSBncmFpbiBydW5zIGxlbmd0aHdpc2Ugb24gdGhlIHJhbXAuIApJbiB0aGUgdGVybmlvbiBjb2xsZWN0aW9uIHRoZXJlIGlzIGZyZXF1ZW50IGFuZCBmbHVlbnQgdXNlIG9mIHRlIHJlbyBNYW9yaSwgd2hpY2ggaXMgcGFydCBvZiBSYXBhdGFoYW5hJ3MgKHByZWZlcnJlZCkgaWRlbnRpdHkuIEhlIHByZWZlcnMgdG8gaWRlbnRpZnkgd2l0aCB0aGUgY29sb25pc2VkIHJhdGhlciB0aGFuIHRoZSBjb2xvbmlzZXJzLiAKSG9uZXN0bHkgbm90IHJlYWxseSwgaWYgaXQgd2FzIGVhc2llciB0aGFuIGl0IHdvdWxkIGJlIG92ZXIgcXVpY2tlci4gSSBndWVzcyBldmVyeW9uZSBlbmpveXMgdGhpbmdzIGRpZmZlcmVudGx5IGJ1dCBmb3IgbWUgdGhlIGpvdXJuZXkgaXMganVzdCBtb3JlIGZ1biB0aGFuIHRoZSBkZXN0aW5hdGlvbi4KVGhlIGRyYWluIGp1c3QgaGFkIGEgY292ZXIgYmVjYXVzZSB0aGUgcGFydCB0aGF0IGFjdHVhbGx5IHBsdWdzIHRoZSBkcmFpbiBpcyBpbnNpZGUgdGhlIHBpcGUsIGtpbmQgb2Ygd2hlcmUgdGhhdCBzcHJpbmcgdGhpbmd5IGlzIGluIHRoZSBwaWN0dXJlcyBhYm92ZS4gV2hlbiBJIHdvdWxkIHRha2UgYSBiYXRoICh3aGljaCBpcyB0b3RhbGx5IG15IHRoaW5nKSwgdGhlIHdhdGVyIGluIHRoZSBob3Jpem9udGFsIHBpcGUgd291bGQgYWN0dWFsbHkgZmxvYXQgYmFjayB1cCBpbnRvIHRoZSB0dWIuIFdobyB3YW50cyBwaXBlIGJhY2t3YXNoIGluIHRoZWlyIHR1Yj8uIAoiSSBvZmZlcmVkIEdlbm5hZHkgR29sb3ZraW4gYSBmaWdodCBhdCAxNzIgYnV0IGhlIGRpZG4gZmFuY3kgaXQgYmVjYXVzZSBJIHRvbyBiaWcgYW5kIHN0cm9uZyBmb3IgaGltIGFuZCBJIGNhbiBtYWtlIG1pZGRsZXdlaWdodCwiIHNhaWQgRnJvY2ggdG8gdGhlIERhaWx5bWFpbC4gIklmIEkgZGlkIGJveCBhZ2FpbiwgaXQgd291bGQgYmUgYXQgMTcyLCBhdCBhIGNhdGNod2VpZ2h0LiAKVHdvIHllYXJzIGFnbyBJIHdhcyBhIGNvdWNoIHBvdGF0byB3aG8gbG9hdGhlZCBydW5uaW5nLiAKVGhlIGNhYmxlIGlzIGFsc28gc29tZXRpbWVzIGNhbGxlZCBESU4gY2FibGUgaW4gR2VybWFuIGFuZCBJIHByZXR0eSBzdXJlIEkgaGVhcmQgdGhlIHN0YW5kYXJkaXNlZCBzbG90cyBmb3IgY2FyIHJhZGlvcyBiZWluZyBjYWxsZWQgRElOIHNsb3RzIGFzIHdlbGwuIApJIHNhdCBkb3duIGluIG15IGdvZCBhd2Z1bCBleGN1c2Ugb2YgYSBkb3JtIHJvb20gKHdlIHdlcmUgdGhlIHBpbG90IHByb2dyYW0gZm9yIHRoZSBtb3N0IGNhdGFzdHJvcGhpYyBmdWNraW5nIGZhaWx1cmUgb2YgYW4gYXR0ZW1wdCBhdCBtYXhpbWl6aW5nIGRvcm0gcm9vbSBzcGFjZSAgIHRoZXkgYmFzaWNhbGx5IGhvaXN0ZWQgdGhlIGJlZCB0b3dhcmQgdGhlIGNlaWxpbmcgYW5kIHNob3ZlZCBhIGRlc2sgYW5kIGRyYXdlcnMgYW5kIHNwYWNlIHVuZGVybmVhdGggaXQuIFdoYXQgaXQgYW1vdW50ZWQgdG8gd2FzIHlvdSBicmVhayB5b3VyIHNob3VsZGVyIGEgZmV3IHRpbWVzIGR1cmluZyB0aGUgZGF5IGZvcmdldHRpbmcgdGhhdCB5b3UgY2FuIGp1c3Qgc3RhbmQgdXAgZnJvbSBhIGNoYWlyIGxpa2UgYSBub3JtYWwgcGVyc29uLCBhbmQgeW91IHNtYXNoIHlvdXIgaGVhZCBpbnRvIHRoZSBjZWlsaW5nIGlmIHNvbWV0aGluZyBldmVyeSB3b2tlIHlvdSB3aXRoIGEgc3RhcnQgZHVyaW5nIHRoZSBuaWdodCkuLiAKRXZlbiB0aGlzIHBhY2sgZG9lc24gYWNjb3VudCBmb3IgZGlmZmVyZW50IG9wZW5pbmcgc2l6ZXMgb3IgZGlmZmVyZW50IDNiLzRiIHNpemVzLiAKV2hhdCB3YXMgdGhlcmUgdG8gc2hvdyBmb3IgYWxsIHRoYXQ/IE5vdGhpbmcuIE5vIHByb2dyZXNzIG9uIFBhbGVzdGluaWFuIHN0YXRlaG9vZCwgbm8gcHJvZ3Jlc3Mgb24gcmV2ZXJzaW5nIElzcmFlbGkgcG9saWNpZXMgdGhhdCB0aGUgVVMgZGlzYWdyZWVzIHdpdGgsIHN1Y2ggYXMgY29uc3RydWN0aW9uIG9mIHNldHRsZW1lbnRzLi4gCkFjdGl2YXRpb24gZG9lcyBub3QgcmVxdWlyZSB1c2VyIGludGVydmVudGlvbiwgdGhlIGVudGlyZSBhY3RpdmF0aW9uIC4gSXQgaXMgYSBjb21wcmVoZW5zaXZlIGF1dG8gYWN0aXZhdG9yIGZvciB3aW5kIDcgaXQgYWN0dWFsbHkgcmVjb2duaXplZCAuIApIb2JiaWVzIEFydGljbGVzICBKdW5lIDExLCAyMDA3ClNvIGl0IGlzIG5vdCBsaWtlIGEgZG8gYSBidW5jaCBvZiBlYWNoIG1vdmVtZW50LiBKdXN0IGVub3VnaCB0byBsb29zZW4gdXAuIFVzdWFsbHkgOCAxMCByZXBzIG9mIGVhY2ggcGVyIG1vdmVtZW50IHBlciBzaWRlIHdpdGhvdXQgdGFraW5nIGEgYnJlYWsuQmVlbiBkb2luZyB0aGF0IGZvciBvdmVyIGEgeWVhciBub3cgYW5kIGhhdmUgYmVlbiBhbG1vc3QgaW5qdXJ5IGZyZWUgZXhjZXB0IGZvciBteSBsb25nIHRlcm0gc2hvdWxkZXIgcHJvYmxlbXMgKGhlbmNlIHdoeSBJIGRvIHNvIG11Y2ggc2hvdWxkZXIgc3R1ZmYpLiAKVmFzZXMgd2VyZSBub3cgcGFpbnRlZCBieSBjb3ZlcmluZyB0aGUgd2hvbGUgdmFzZSBpbiBibGFjayB3aGlsZSBsZWF2aW5nIG91dCBzaWxob3VldHRlcyBvZiBmaWd1cmVzLCB3aGljaCB0aGVuIGFwcGVhciBpbiB0aGUgY29sb3VyIG9mIHRoZSBjbGF5LiBEZXRhaWxzIHdlcmUgcGFpbnRlZCBpbiBibGFjayByYXRoZXIgdGhhbiBiZWluZyBpbmNpc2VkIGludG8gdGhlIGNsYXksIHdoaWNoIGFsbG93ZWQgbW9yZSBkZXRhaWxlZCBwaWN0dXJlcyBpbiB0aGUgc28gY2FsbGVkICdSZWQgRmlndXJlIFBhaW50aW5ncycuIApTaGUgYXNrZWQgbWUgdG8gdGFrZSBhIHNlYXQgYW5kIGxldCBtZSBrbm93IHNoZSB3b3VsZCBjYWxsIG1lIGJhY2sgdXAgdG8gdGhlIGNvdW50ZXIgd2hlbiBzaGUgcmV0dXJuZWQuIFdoZW4gc2hlIGNhbWUgYmFjayBzaGUgaW5mb3JtZWQgbWUgdGhhdCBzaGUgY291bGRuIGZpbmQgYW55dGhpbmcgYWJvdXQgYSBib3kgbmFtZWQgIk1pY2tleSIsIGJ1dCB0aGF0IHNoZSBoYWQgZm91bmQgcmVjb3JkcyBwZXJ0YWluaW5nIHRvIGEgYm95IHRoYXQgZHJvd25lZCBpbiB0aGUgQWxhZmlhIG5hbWVkICJNaWNoYWVsIi4gSSBwdXJjaGFzZWQgdGhlIHB1YmxpYyByZWNvcmQgaW1tZWRpYXRlbHkgYW5kIGxlZnQgd2l0aCBkb2N1bWVudGF0aW9uIHRoYXQgaW5jbHVkZWQgYSBwb2xpY2UgcmVwb3J0IGFuZCBmdWxsIG5hbWVzIG9mIGhpcyBwYXJlbnRzLiAKVmFsaWRpdHkgd2FzIGFzc2Vzc2VkIHVzaW5nIHB1Ymxpc2hlZCBjcml0ZXJpYSBhbmQgcmVzdWx0cyBvZiB0aGUgYXNzZXNzbWVudCB3ZXJlIHJlcG9ydGVkLiAKVGhhdCdzIHdoeSB0aGUgY29tcGxlbWVudGFyeSBzeXN0ZW0gaGFzIGFsbG93ZWQgdGhlIHVzZXJzIGFsbCB0aGUgd2F5IG91dCB0byBtYWtlIHRoZSBwb3B1bGFyIHB1cmNoYXNlcyBhbmQgc29tZSBwcm9kdWN0cyBsaWtlIFRoZSBRdWVlbiBGYWNlcyBQb2tlciBDYXJkIFByb3RlY3RvciBoYXZlIGJlY29tZSB0aGUgaG90IGZhdm9yaXRlcyBhdmFpbGFibGUgaW4gdGhlIG1hcmtldC4uIApJJ20gaW50ZXJlc3RlZCBpbiBidWlsZGluZyBhIFRleGFzIEhvbGQgJ0VtIEFJIGVuZ2luZSBpbiBKYXZhLiAKU2VlIHlhIHNvb24hLiAKTWFueSBjb3VwbGVzIHByZWZlciBhIHRoaWNrZXIgbHViZSAoYSByYXRoZXIgdGhhbiBhICJsaXF1aWQgZm9yIGFuYWwgc2V4LiBVc2UgYXMgbXVjaCBsdWJyaWNhbnQgYXMgcG9zc2libGUuIFlvdSByZWFsbHkgY2FuJ3QgdXNlIHRvbyBtdWNoLi4gClRoYXQgZmVhdHVyZSB3YXMgY2FsbGVkIGEgIlJvbGxkb3duIiwgYW5kIHRoZSBsb3R0ZXJ5IGFubm91bmNlZCB3aGVuIGl0IHdhcyBjb21pbmcuIFVubGlrZSB0aGUgTWVnYSBNaWxsaW9ucyBnYW1lcyB5b3UndmUgcHJvYmFibHkgaGVhcmQgb2Ygd2hlcmUgdGhlIGphY2twb3Qga2VlcHMgYnVpbGRpbmcgdW50aWwgc29tZW9uZSBoaXRzIGFsbCBzaXggbnVtYmVycyBhbmQgd2lucyB0aGUgYmlnIHByaXplLCBpbiBXaW5mYWxsLCBpZiB0aGUgamFja3BvdCByZWFjaGVkICQ1IG1pbGxpb24sIGFuZCBubyBvbmUgbWF0Y2hlZCBhbGwgc2l4IG51bWJlcnMsIGFsbCB0aGUgbW9uZXkgJ3JvbGxlZCBkb3duJyB0byB0aGUgbG93ZXIgdGllciBwcml6ZSB3aW5uZXJzLCBkcmFtYXRpY2FsbHkgYm9vc3RpbmcgdGhlIHBheW91dHMgb2YgdGhvc2Ugd2hvIG1hdGNoZWQgZml2ZSwgZm91ciBvciB0aHJlZSBudW1iZXJzLi4gCkNvcnBvcmF0aW9ucywgYnVyZWF1Y3JhdHMsIGdlbmVyYWxzLCBhbmQgcHJldHR5IG11Y2ggYW55b25lIHdobyBoYXMgZ290dGVuIHVzZWQgdG8gdGhlIGdvb2QgbGlmZSB3aXRob3V0IGhhdmluZyByZWFsbHkgZWFybmVkIGl0LCBPS0IgaGFzIGJlZW4gaW1wbGVtZW50ZWQgYWNyb3NzIHRoZSBib2FyZCBpbiBQYWtpc3RhbidzIDYwIHllYXIgb2xkIGhpc3RvcnkuIFNvIGZvciB0aGUgR2VuZXJhbCB0byBnbyBhaGVhZCBhbmQgZG8gaXQgaXMgbmVpdGhlciBzdXJwcmlzaW5nIG5vciBpcyBpdCB1bnVzdWFsLiAKTXkgZ28gdG8gdG9iYWNjb3MgYXJlIEJlYWNvbiBleHRyYSwgSXJpc2ggRmxha2UgYW5kIFNpeHBlbmNlLiBCdXQgSSBzdGlsbCBsb3ZlIHRoZSBlYXNlIG9mIGFuIGFsbCBCbGFjayBDYXZlbmRpc2ggYXJvbWF0aWMuIEkgaGF2ZSBidWxrIGphcnMgb2YgTGFuZSBEYXJrIFJlZCwgTWNDbGVsbGFuZCBWQkMsIEdIIEV4Y2x1c2l2ZSBCbGFjayBDaGVycnkgYW5kIEMgQmxhY2sgQ2hlcnJ5LiBJIGRvbiBzbW9rZSB0aGVtIGV2ZXJ5IGRheSBidXQgb25jZSBhIG1vbnRoIEkgZmlsbCBteSBwb3VjaCB3aXRoIG9uZSBvZiB0aGVtIGZvciBteSBkcml2ZSBob21lIHNtb2tlLiBJdCBhIG5pY2UgY2hhbmdlIG9mIHBhY2Ugd2hlbiBJIGRvbiB3YW50IHNvbWV0aGluZyBzbyBoZWF2eS4KQ2FuIG1hc3NhZ2UgaGVscCBub3JtYWxpc2UgYmxvb2QgZ2x1Y29zZSBsZXZlbHM/NC5TcGVjaWZpYyBpbnRlcnZlbnRpb25zIGluY2x1ZGVkIGluIHRoZSByZXZpZXdUcmlhbHMgdGhhdCBpbnZvbHZlZCBlaXRoZXIgdGhlIG1hbnVhbCBvciBtZWNoYW5pY2FsIGFkbWluaXN0cmF0aW9uIG9mIG1hc3NhZ2Ugd2VyZSBpbmNsdWRlZCBpbiB0aGUgcmV2aWV3LiAKV2UgZWl0aGVyIGRpc3Bvc2Ugb2YgaXQsIG9yIHdlJ2xsIGNhbGwgbG9jYWwgbGF3IGVuZm9yY2VtZW50IHRvIHNlZSBpZiB0aGV5IHdhbnQgdG8gcGljayBpdCB1cCBhbmQgcmVsZWFzZSB0byB0aGVtLCBidXQgbmV2ZXIgcHJvdmlkZSBmcm9tIHdob20gdGhlIGNvbnRyYWJhbmQgd2FzIGNvbmZpc2NhdGVkLiBUaGF0IHdvdWxkIGJlIGEgSElQQUEgdmlvbGF0aW9uIG9uIHRoZSBzZWN1cml0eSBkZXBhcnRtZW50LnNvIEkgYXNrIGFnYWluLCB3aHkgdGhlIGhlbGwgaXMgUEQgZXZlbiBpbiBhIHBhdGllbnQgcm9vbSBmb3IgYSBzdXNwZWN0ZWQgY29udHJhYmFuZCBjYWxsPyBTb21lb25lIGluIHRoZSBob3NwaXRhbCBmdWNrZWQgdXAgcm95YWxseSBhbmQgdmlvbGF0ZWQgdGhhdCBwYXRpZW50J3MgSElQQUEgcmlnaHRzLi4gCkxpdGVyYWxseSB0aGUgb25seSB0aW1lIGFuIEFmcmljYW4gbmF0aXZlIHBlcnNvbiB3YXMgcmVmZXJyZWQgdG8gYXMgYmxhY2sgd2FzIHdoZW4gdGhhdCBiZWNhbWUgYSBwb2ludCBvZiBkaWZmZXJlbnRpYXRpb24gaW4gc29tZSBjb252ZXJzYXRpb24uIApTb21ldGltZXMgeW91IGNhbiBsb29rIHVwIGdyYW1tYXIgdG9vLiAKU21hcnQgY29uc2lkZXJzIGhpbXNlbGYgdGhlIENlbHRpY3MnIGJlc3QgVW5vIHBsYXllci4gV2hlbiBhc2tlZCBmb3IgYSByZWFzb24sIGhlIHNhaWQgaGUgY2FuIHJlYWQgZXZlcnlvbmUncyBwb2tlciBmYWNlIGFuZCBrbm93cyBob3cgdG8gYWN0IGFjY29yZGluZ2x5LiBBcyBtb3JlIHByb29mLCBoZSBzYWlkLCB0aGUgcmVzdCBvZiB0aGUgQ2VsdGljcyB3b3VsZCBuZXZlciBnaXZlIGhpbSBjcmVkaXQgZm9yIGhpcyBza2lsbHMuClNhcmFoIGEgYXBwZWwgYXUgcG9zdGUgZGUgbGEgU1EgbGUgcGx1cyBwciBkZSBjaGV6IGVsbGUuIApGZWRlcmFsIGFuZCBzdGF0ZSBwcm9zZWN1dG9ycywgbWVhbndoaWxlLCBoYXZlIGdvbmUgYWZ0ZXIgdGhlIGpvaG5zIHdobyBwb3N0IFllbHAgc3R5bGUgcmV2aWV3cyBhYm91dCB0aGVpciBtYXNzYWdlIHBhcmxvciBleHBlcmllbmNlcyBvbiBvbmxpbmUgbWVzc2FnZSBib2FyZHMuCldoZXJlIHRvIG1hbnkgZG9sbGFycyB3aWxsIGNoYXNlIGFzc2V0cyBkcml2aW5nIHByaWNlcyB1cCB5ZXQgYXQgdGhlIHNhbWUgdGltZSBpbmZsYXRpb24gd2lsbCBkcml2ZSBpbnRlcmVzdCByYXRlcyB1cCBsaW1pdGluZyB0aGUgYnV5ZXIgcG9vbC4gCjQuIENhc2lubyBSb3lhbGUgZnVuZHJhaXNlciBpbiBCYW5nYWxvdzogU2hhcnBlbiB1cCB5b3VyIHBva2VyIGZhY2VzIGFuZCBnZXQgYWxvbmcgdG8gQ2FzaW5vIFJveWFsZSwgdGhlIGFubnVhbCBmdW5kcmFpc2luZyBldmVudCB0byBzdXBwb3J0IHJlbm92YXRpb25zIGF0IHRoZSB0aGUgQmFuZ2Fsb3cgQ29tbXVuaXR5IENoaWxkcmVuIENlbnRyZS4gU2VlIHRoZSBBIEhhbGwgdHJhbnNmb3JtZWQgaW50byBhIHJldHJvIHN0eWxlIGNhc2lubyB3aXRoIGxpdmUgYW5kIHNpbGVudCBhdWN0aW9ucywgbWFydGluaSBiYXIsIGxpdmUgZW50ZXJ0YWlubWVudCBhbmQgREosIGNoaWxkcmVuIGFydCBzaG93LCBkZWxpY2lvdXMgcGxhdGVzIGJ5IENyYWJiZXMgQ3JlZWsgQ2F0ZXJpbmcgYW5kIHRhYmxlcyB3aXRoICJwbGF5IG1vbmV5IiB0byBidXJuLiBPbmx5IDIwMCB0aWNrZXRzIGF2YWlsYWJsZS4gQXQgQmFuZ2Fsb3cgQSBJIEhhbGwgb24gRnJpZGF5LCBPY3RvYmVyIDE5LiBTdGFydHMgN3BtLgpEZXNwaXRlIHRoZSBDYW51Y2tzIG9wZW5seSBjb3VydGluZyBIdWdoZXMgYW5kIGV4cHJlc3NpbmcgZGVzaXJlIHRvIHNpZ24gaGltLCBoZSBoYXMgaW5zdGVhZCBvcHRlZCBmb3IgdGhlIFVuaXZlcnNpdHkgb2YgTWljaGlnYW4uIEhpcyBhbm5vdW5jZW1lbnQgY29tZXMganVzdCBkYXlzIGFmdGVyIHRoZSBDYW51Y2tzIHNwdW4gaW50byB0dXJtb2lsIHdoZW4gZm9ybWVyIHRlYW0gcHJlc2lkZW50IFRyZXZvciBMaW5kZW4gc3BsaXQgZnJvbSB0aGUgZnJhbmNoaXNlLgpJIG5vdCB3ZWFsdGh5IHBlcnNheSwgYnV0IEkgZGlkIHNlbGwgYSBzb2Z0d2FyZSBwcm9kdWN0IGZvciBhIGdvb2QgYW1vdW50IG9mIG1vbmV5IGFuZCBldmVyeSBmYW1pbGlhbCB3aWVyZG8gY2FtZSBvdXQgdGhlIHdvb2R3b3JrLi4gCk1pY2tleSBpcyBqb2luaW5nIGZvcmNlcyB3aXRoIGEgZ2FsYXh5IGZhciwgZmFyIGF3YXkuCkV2ZW4gdGhvdWdoIGl0IG1heSBub3QgdGhlIGVudGlyZSBlbmpveWVkIHN0YXksIEkgaG9wZSB5b3Ugd2lsbCBjb25zaWRlciBzdGF5aW5nIGFnYWluIGFuZCB0aGF0IHdpbGwgYWxsb3cgdXMgdG8gZGVtb25zdHJhdGUgaW1wcm92ZW1lbnRzLiBKdXN0IG5vdGUgdGhhdCBvbiB5b3VyIGRlcGFydHVyZSB0aGV5IHdpbGwgc2VuZCBzb21lb25lIHRvIHlvdXIgcm9vbSB0byBjaGVjayBldmVyeXRoaW5nIGlzIGFzIGl0IHNob3VsZCBiZSBzbyB5b3UgbWlnaHQgd2FudCB0byBiZSBwcmVzZW50IHdoZW4gdGhpcyBoYXBwZW5zLiAKVGhlbiwgZGVzY3JpYmUgeW91ciBjb25jZXJucy4gQWxzbyBpbmNsdWRlIHlvdXIgbmFtZSwgYWRkcmVzcyBhbmQgYSBkYXl0aW1lIHRlbGVwaG9uZSBudW1iZXIgc28gdGhlIGJvYXJkIGNhbiByZWFjaCB5b3UgaWYgaXQgbmVlZHMgYWRkaXRpb25hbCBpbmZvcm1hdGlvbi4gTGFzdCB5ZWFyLCA0LDQ2OSBuZXcgY29tcGxhaW50cyB3ZXJlIGZpbGVkIHdpdGggdGhlIGJvYXJkLiAKQXQgdGhlIE1vdG9yIENpdHkgQ2FzaW5vLCBpbiBUZXhhcyBIb2xkICdlbSBwb2tlciwgaWYgYSBwbGF5ZXIgaGl0cyBhbnkgZm91ciBvZiBhIGtpbmQgYW5kIGlzIGJlYXRlbiBieSBhbm90aGVyIHBsYXllcidzIGZvdXIgb2YgYSBraW5kLCB0aGV5IGhpdCB0aGUgYmFkIGJlYXQgamFja3BvdC4gQm90aCBwbGF5ZXJzIG11c3QgaGF2ZSBwb2NrZXQgcGFpcnMuIFRoZSBmb3VyIG9mIGEga2luZCBtdXN0IG9ubHkgYmUgYmVhdGVuIGJ5IGFub3RoZXIgZm91ciBvZiBhIGtpbmQuIApUZXRhcGkgZGVuZ2FuIGx1bHVyYW4sIGRhcGF0IG1lbWJhbnR1IHBvcmkgcG9yaSBhZ2FyIHRldGFwIG1lbmRhcGF0a2FuIHJhbmdzYW5nYW4gcG9zaXRpZiwgc2VoaW5nZ2Ega3VsaXQgZGFwYXQgYmVybmFmYXMgaGluZ2dhIGtlIGxhcGlzYW4ga3VsaXQgdGVyZGFsYW0uIEppa2Ega2FtdSB0ZXJtYXN1ayB3YW5pdGEgeWFuZyBzZXJpbmcgYmVybWFpbiBkaWx1YXIgcnVtYWggYXRhdSBsaW5na3VuZ2FuIHlhbmcgYmVyZGVidSwgamFuZ2FuIHJhZ3UgdW50dWsgbWVsYWt1a2FuIGx1bHVyYW4gYmViZXJhcGEga2FsaSBkYWxhbSBzZWJ1bGFuIGFnYXIga3VsaXQgdGVyYXNhIHNlZ2FyLkx1bHVyIGRlbmdhbiBwaWphdGFuIGxlbWJ1dCBkYXBhdCBtZWxhbmNhcmthbiBhbGlyYW4gZGFyYWggc2VoaW5nZ2EgYWthbiBtZW5ndXJhbmdpIHRpbmdrYXRhbiBzdHJlc3MuIEx1bHVyYW4ganVnYSB0ZXJtYXN1ayBzYWxhaCBzYXR1IHNhcmFuYSByaWxla3Nhc2ksIHNlbGFpbiBoYXJnYSB0ZXJqYW5na2F1IGFuZGEgZGFwYXQgbWVuZGFwYXRrYW4ga3VsaXQgeWFuZyBwdXRpaCwgaGFsdXMgZGFuIHNlZ2FyLkpVQUwgSkFOVVIgS1VOSU5HIE1VUkFIIFVOVFVLIEFDQVJBIFBFUk5JS0FIQU4uIApUaGUgcGxhY2UgaXMgYmVhdXRpZnVsLCBhbmQgdGhlIEdlcm1hbiBTd2lzcyBib3JkZXIgaXMgbmV4dCB0byB0aGUgY2l0eS4gQSBsb3Qgb2YgdGhlIHBlb3BsZSBsaXZpbmcgaW4ga29uc3RhbnogY29tcGxhaW4gYWJvdXQgdGhlIGZvZyB0aGF0IGFub3RoZXIgcmVkZGl0b3IgbWVudGlvbmVkLCBidXQgaXQganVzdCB0aGUgZG93bnNpZGUgb2YgbGl2aW5nIG5leHQgdG8gdGhlIGxha2UsIGxpa2UgbW9zcXVpdG9lcy4gQnV0IHRoZSBzdW1tZXIgaXMgd29ydGggaXQsIGFuZCBJIGRvbiB0aGluayBpdCB0aGF0IGJhZC4gClRoZSBhdmVyYWdlIHBhaXIgb2YgZmVldCB0YWtlcyBhbiBlc3RpbWF0ZWQgOCwwMDAgdG8gMTAsMDAwIHN0ZXBzIGVhY2ggZGF5IGFuZCB0cmF2ZWxzIHVwIHRvIDgwLDAwMCBtaWxlcyBpbiBhIGxpZmV0aW1lLCBhY2NvcmRpbmcgdG8gdGhlIEFtZXJpY2FuIENvbGxlZ2Ugb2YgRm9vdCBBbmtsZSBPcnRob3BlZGljcyBNZWRpY2luZS4gV2Fsa2luZyBwdXRzIHRoZSBwcmVzc3VyZSBvZiBhYm91dCBvbmUgYW5kIGEgaGFsZiB0aW1lcyB5b3VyIGJvZHkgd2VpZ2h0IG9uIHlvdXIgZm9vdDsgcnVubmluZyBpbmNyZWFzZXMgdGhpcyBwcmVzc3VyZSB0byBhYm91dCB0aHJlZSBvciBmb3VyIHRpbWVzIHlvdXIgd2VpZ2h0LiBBY2NvcmRpbmcgdG8gdGhlIEFtZXJpY2FuIEFjYWRlbXkgb2YgT3J0aG9wZWRpYyBTdXJnZW9ucyAoQUFPUyksIHlvdXIgZmVldCBhYnNvcmIgdXAgdG8gb25lIG1pbGxpb24gcG91bmRzIG9mIHByZXNzdXJlIGR1cmluZyBhIHN0cmVudW91cywgaG91ciBsb25nIHdvcmtvdXQhCkFubmEgRmFyaXMgaXMgZmFjaW5nIGEgJDUsMDAwIGZpbmUgZnJvbSB0aGUgYW5pbWFsIHNoZWx0ZXIgd2hlcmUgc2hlIGFkb3B0ZWQgYSBDaGlodWFodWEgbmFtZWQgUGV0ZS4gU29tZWhvdywgdGhlIGxpdHRsZSBkb2cgZW5kZWQgdXAgaG9tZWxlc3MgYW5kIGh1bmdyeSB1bnRpbCBhIGdvb2QgU2FtYXJpdGFuIGZvdW5kIGhpbSB3YW5kZXJpbmcgYXJvdW5kIG9uIHRoZSBzdHJlZXQuIFRoZSBkb2cgd2FzIHJlcG9ydGVkbHkgdGhpbiBhbmQgbm90IGluIHZlcnkgZ29vZCBzaGFwZSwgc28gaXQncyBwb3NzaWJsZSB0aGF0IGhlIGhhZCBiZWVuIG91dCBvbiBoaXMgb3duIGZvciBxdWl0ZSBzb21lIHRpbWUuCldpdGhvdXQga25vd2luZyB5b3VyIGRvZyBhbmQgZnJvbSB3aGF0IHlvdSBkZXNjcmliZSBpdCBzb3VuZHMgbGlrZSB0aGUgZGVsaXZlcnkgZ3V5IGVuY291bnRlcmVkIGEgZG9nIHRoYXQgd2FzIGF0IGZpcnN0IGFwcHJlaGVuc2l2ZSBvZiBhcHByb2FjaGluZyBhbmQgdGhlbiBieSBydW5uaW5nIGF3YXkgYXV0b21hdGljYWxseSBsZWFkIHRoZSBkb2cgdG8gZGVjaWRlIHRvIGdvIGFmdGVyLiBJZiB0aGVyZSB3YXMgbm8gZ3Jvd2xpbmcsIHJhaXNlZCBoYWNrbGVzLCBzdGFyaW5nIGV0Yy4gb3IgcHJpb3IgaW5jaWRlbnRzIHdpdGggYWdncmVzc2l2ZSBiZWhhdmlvciwgSSB3b3VsZCBub3QgcmVhZCB0b28gbXVjaCBpbnRvIGl0LgoiSSB3YXMgc28gY2xvc2UgdG8gYSBicmFjZWxldCB0aGF0IHllYXIsIiBSYWNlbmVyLiAiV2UgaGFkIGEgdGhyZWUgbW9udGggbGF5b2ZmIGR1cmluZyB0aGF0IHRvdXJuYW1lbnQgYW5kIGl0IHdhcyBkdXJpbmcgdGhlIGxheW9mZiB0aGF0IG15IG1vbSB3YXMgZGlhZ25vc2VkIHdpdGggbGl2ZXIgY2FuY2VyLiBCdXQsIHNoZSBuZXZlciB0b2xkIG1lIGR1cmluZyB0aGUgbGF5b2ZmIGJlY2F1c2Ugc2hlIHdhbnRlZCBtZSB0byBzdGF5IGZvY3VzZWQuIApIZSBhbmQgTmd1eWVuLCBhbiBvY2N1cGF0aW9uYWwgdGhlcmFwaXN0LCBsZWFkIGJ1c3kgbGl2ZXMsIHlldCB0aGV5IGFsd2F5cyBtYWtlIHRpbWUgZm9yIGVudGVydGFpbmluZyBmcmllbmRzIGFuZCBmYW1pbHkgYXQgaG9tZS4gVGhlaXIgbG9mdCBpcyBpZGVhbCBmb3IgaXQuIFN1bmxpZ2h0IGZyb20gc291dGggZmFjaW5nIHdpbmRvd3MgZmxvb2RzIGluIGFuZCBtYWtlcyB0aGUgc3BhY2UgZXh0cmFvcmRpbmFyaWx5IGJyaWdodCwgc28gaXQgZmVlbHMgbGFyZ2VyIHRoYW4gaXQgcmVhbGx5IGlzLgoiSSB0aGluayBoZSBoYWQgYSBiaXQgb2YgYSBuaWdnbGUgdG93YXJkcyB0aGUgZW5kIG9mIGhpcyBiYXR0aW5nLCIgUGV0ZXJzb24gc2FpZCwgcmVmZXJyaW5nIHRvIHRoZSB0cmVhdG1lbnQgS2FsbGlzIHJlY2VpdmVkIGR1cmluZyB0aGUgZHJpbmtzIGJyZWFrLiAiV2UgYXJlIHByb2JhYmx5IGdvaW5nIHRvIGhhdmUgdG8gY2FycnkgaGltIHRocm91Z2ggaGlzIGxhc3QgVGVzdC4gCklmIFZhbHZlIGNhbiBtYWtlIGEgZ2FtZXBsYXkgZW52aXJvbm1lbnQgdGhhdCBpcyBmdW4gZm9yIHBsYXllcnMgd2hvIGp1c3Qgd2FudCBhIGZ1biBzb2NpYWwgZXhwZXJpZW5jZSwgYW5kIGFsc28gZnVuIGZvciBib3RoIHNtYWxsIHN0YWtlcyBzZW1pIGNvbXBldGl0aXZlIHBsYXllcnMgYW5kIHBybyBwbGF5ZXJzIC4gVGhhdCBib2RlcyB2ZXJ5IHdpbGwgZm9yIHRoZSBmdXR1cmUgb2YgdGhlIGdhbWUuClRlbmR1bGthciwgd2hvIG9mZmVycyBhIHNvZnRseSBzcG9rZW4gYm9va2lzaCBjb3VudGVycGFydCB0byBXYXJuZSdzIHRlbGwgaXQgaG93IGl0IGlzIGRyaXZlLCBzYWlkIHRoZWlyIGRyZWFtIHdhcyB0byBvbmUgZGF5IHNlZSBhbiBBbWVyaWNhbiB0ZWFtIGluIHRoZSBXb3JsZCBDdXAuCkJlY2F1c2Ugb2YgdGhhdCwgYSAyMSB5ZWFyIG9sZCBjb3VsZCBnYWluIG1vcmUgZXhwZXJpZW5jZSBpbiBvbmUgeWVhciB0aGFuIHNvbWVvbmUgd2hvIGhhcyBiZWVuIHBsYXlpbmcgbGl2ZSBmb3IgMjUgeWVhcnMuIFlvdSBhbHNvIGRvbid0IG5lZWQgdG8gZ28gdG8gYSBwaHlzaWNhbCBwbGFjZSB0byBwbGF5IHlvdSBjYW4gd2FrZSB1cCBhbmQgb3BlbiB1cCB5b3VyIGxhcHRvcC4gKFdhdGNoIFRJTUUicyB2aWRlbyAiUG9rZXIgQ29tZXMgdG8gQ2hpbmEuIikuIApUaGUgd2lubmVyIHdpbGwgZ28gaG9tZSB3aXRoIGFib3V0IDFtIGluIGNhc2guCkluIGZhY3QsIGEgcmVwb3J0IGNvbXBhcmluZyB0aGUgb3duZXJzaGlwIGFuZCByZW50YWwgY29zdHMgYnkgdmV0ZXJhbiBob3VzaW5nIGVjb25vbWlzdCBXaWxsIER1bm5pbmcgcmV2ZWFsZWQgdGhhdCB3aGVuIHRoZSBwcmluY2lwYWwgcmVwYXltZW50IGlzIG5ldHRlZCBvdXQsIHRoZSBjb3N0IG9mIG93bmVyc2hpcCBpcyBsZXNzIHRoYW4gcmVudGluZyBpbiBtb3N0IGNvbWJpbmF0aW9ucyBvZiBob3VzaW5nIHR5cGVzIGFuZCBsb2NhdGlvbnMuIEFmdGVyIHRoZSBwcmluY2lwYWwgaXMgc3VidHJhY3RlZCwgaG93ZXZlciwgdGhlIG5ldCBvd25lcnNoaXAgY29zdCBpcyAkNDQ5IGxlc3MgdGhhbiB0aGF0IG9mIHJlbnRpbmcuLiAKSSB3YXMgY3J1c2hlZCwgc2NhcmVkLCBhbmQgcGlzc2VkIHRoYXQgSSBmb2xsb3dlZCB0aGUgaW5zdHJ1Y3Rpb25zIGZvciB0aGUgcGlsbCB0byBhICJUIiBidXQgc3RpbGwgZ290IHByZWduYW50LiBJIHdhcyBnb2luZyB0byBjb21tdW5pdHkgY29sbGVnZSB0byBiZSBhIFZldCBUZWNoIGF0IHRoZSB0aW1lIGFuZCBhbGwgSSBjb3VsZCB0aGluayBhYm91dCB3YXMgaG93IEkgd291bGRuIGJlIGFibGUgdG8gcmFpc2UgYSBjaGlsZCBhbG9uZS4uIApZb3VyIGlkZWEgb2YgYnV5aW5nIGEgU0ZIIHRvIGxpdmUgaW4gYW5kIGZpeCB1cCBpcyBhIGdvb2QgaWRlYS4gSWYgeW91IHdvcmsgd2l0aCBhIFJlYWx0b3IgeW91IHdpbGwgcHJvYmFibHkgZmluZCBhIGZldyBob21lcyBpbiB0aGUgYXJlYSBvZiB5b3VyIGNob2ljZSB0aGF0IGhhdmUgYmVlbiBzaXR0aW5nIGEgd2hpbGUgYmVjYXVzZSB0aGV5IGFyZSBvdXRkYXRlZCBhbmQgY291bGQgdXNlIHlvdXIgbW9kZXJuIHZpc2lvbi4gCkFsbG1hbiBUd2l0dGVyIGFjY291bnQgd2FzIHNob3J0bHkgYWZ0ZXIgaGUgc2VudCB0aGUgdHdlZXQsIHJlc3RyaWN0aW5nIGFjY2VzcyB0byBoaXMgYWNjb3VudCwgYnV0IGEgc2NyZWVuc2hvdCBvZiBpdCBoYXMgYmVlbiB3aWRlbHkgY2lyY3VsYXRlZCBvbiBzb2NpYWwgbWVkaWEuIEZveCBOZXdzIENoYW5uZWwgTGF1cmEgSW5ncmFoYW0gYXBvbG9naXplZCB2aWEgc29jaWFsIG1lZGlhIGZvciBoZXIgdHdlZXQgdGhhdCBIb2dnIGhhZCBhYm91dCBub3QgZ2V0dGluZyBpbiB0byBzb21lIGNvbGxlZ2VzLiBTaGUgcmV0dXJuZWQgTW9uZGF5IG5pZ2h0IGFmdGVyIGEgd2Vla2xvbmcgdmFjYXRpb24gYW5kIGRlbm91bmNlZCBhIGVmZm9ydCBieSBsaWJlcmFscyB0byBzdGlmbGUgdGhlIGZyZWUgc3BlZWNoIG9mIGNvbnNlcnZhdGl2ZXMuLiAKSXQgb25lIHRoaW5nIHRvIGhhdmUgYSBsb2NhdGlvbiB0aGF0IGdvaW5nIHdlbGwgYnV0IHRvIGJlIGFibGUgdG8gZHVwbGljYXRlIGl0IGFnYWluIGFuZCBhZ2FpbiB5b3UgbmVlZCB0byBncm93IHRoZSBzdXBwb3J0IGluIHRlcm1zIG9mIHBlb3BsZSwgcG9pbnQgb2Ygc2FsZSwgSVQgYW5kIG1hcmtldGluZy4gCkZvciBCcmFkeSwgR3VlcnJlcm8gcHJvdmVkIGhpcyB3b3J0aCBhcyBhbiBhZHZpc2VyIHNvb24gYWZ0ZXIgdGhleSBtZXQgbmVhcmx5IGEgZGVjYWRlIGFnby4gSW4gaGlzIGVhcmx5IGRheXMgYXMgYSBQYXRyaW90LCBCcmFkeSB3YXMgaGFyZGx5IHRoZSBlcGl0b21lIG9mIGEgaGVhbHRoIGNvbnNjaW91cyBlYXRlci4gSGUgb2Z0ZW4gc3RvcHBlZCBhdCBhIHBpenphIGhvdXNlIG5vdCBmYXIgZnJvbSBHaWxsZXR0ZSwgd2hlcmUgaGlzIGhhcHB5IG1lYWwgd2FzIGEgaGFtIGFuZCBjaGVlc2UgZ3JpbmRlciB3aXRoIG9uaW9uIHJpbmdzLCB3YXNoZWQgZG93biB3aXRoIG9yYW5nZSBzb2RhLgpNeSBodXNiYW5kIG9mIHNpeCB5ZWFycyBhc2tlZCBmb3IgYSBkaXZvcmNlIHR3byB3ZWVrcyBhZ28gYW5kIEknbSB0cnlpbmcgdG8gY29uc2lkZXIgbXkgbmV3IG9wdGlvbnMuIEkgcmVsb2NhdGVkIGZyb20gTmFzaHZpbGxlIHRvIEF1c3RpbiBmb3IgaGlzIGdyYWQgcHJvZ3JhbSAgIGhlJ3MgMi8zIG9mIHRoZSB3YXkgdGhyb3VnaCAgIGJ1dCBJIGtub3cgbm8gb25lIGluIHRoaXMgY2l0eSBhcGFydCBmcm9tIG15IGNvd29ya2VycyBhbmQgaGF2ZSBubyByZWFzb24gdG8gc3RheSBoZXJlLi4gCkJ1dCB0aGF0IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gYSBmb3JnZXR0YWJsZSBsb3cgYnVkZ2V0IGV4cGVyaWVuY2UgaW4gdGhlIHdvb2RzLCBhbmQgYSBwcm9iYWJseSBvbmNlIGluIGEgbGlmZXRpbWUgdHJlayB0aHJvdWdoIHRoZSBTYWhhcmEgZGVzZXJ0LiBPciBoYXZpbmcgYSBwaXJhdGUgYWR2ZW50dXJlIG9uIDMgc2FpbGluZyBzaGlwcy4gT3IgcGxheWluZyBCYXR0bGVzdGFyIEdhbGN0aWNhIGluIHRoZSBpbnNpZGUgb2YgYW4gb2xkIGRlc3Ryb3llci4KVGhlIERlbW9jcmF0aWMgUGFydHkgd2FzIGNvbXBsZXRlbHkgcmFjaXN0IGFuZCB0aGF0IGRvZXNuIGp1c3Qgd2FzaCBhd2F5LiAKQ29tbW9uIHNlbnNlIHRlbGxzIHVzIHRoYXQgdGhlIGtleSB0byBzdWNjZWVkaW5nIGluIGEgdHJpYXRobG9uIGlzIHN3aW1taW5nLCByaWRpbmcgb3IgcnVubmluZyBhcyBmYXN0IGFzIHBvc3NpYmxlICAgYnV0IG9ubHkgdXAgdG8gYSBjZXJ0YWluIHBvaW50LiBVbmxlc3MgeW91J3JlIGNvbXBldGluZyBpbiBhIHNwcmludCB0cmlhdGhsb24gKGEgZnJhY3Rpb24gb2YgdGhlIGxlbmd0aCBvZiBhbiBJcm9ubWFuIHRyaWF0aGxvbiksIHlvdSBjYW4ndCBwb3NzaWJseSBnbyBmdWxsIHRpbHQgZm9yIHRoZSBlbnRpcmUgcmFjZS4gTGVhcm5pbmcgdG8gcGFjZSB5b3Vyc2VsZiBpcyB0aGVyZWZvcmUgYSBjcml0aWNhbCBlbGVtZW50IG9mIHRyaWF0aGxvbiB0cmFpbmluZy4gClRoZSBzdWJzY3JpcHRpb24gYWxsb3dzIHBsYXllcnMgdG8gcmVzZXJ2ZSBzZWF0cyBpbiB0b3VybmFtZW50cyBvbiBsaW5lIGFuZCB0byB1c2UgYSBjb21wdXRlcml6ZWQgc3RhdGlzdGljYWwgdHJhY2tpbmcgc2VydmljZSwgYnV0IGhlIHNheXMgaXQgaXMgbm90IHJlcXVpcmVkIHRvIHBsYXkgaWYgc2VhdHMgYXJlIG9wZW4uIApBbGwgb2YgdGhpcyBhbmQgbW9yZSB3aWxsIGJlIGZvdW5kIGluIHRoZSBzb3BoaXN0aWNhdGVkIHNhbG9uIGFuZCB0aGUgYWN0aW9uIHBhY2tlZCBnYW1pbmcgZmxvb3IuIEhvd2V2ZXIsIGlmIHlvdSBwcmVmZXIgYSBtb3JlIHByaXZhdGUgc2V0dGluZywgdGhlIEZvcnR1bmUgSGlnaCBMaW1pdCBTbG90IExvdW5nZSB3aWxsIGJlIGF2YWlsYWJsZSwgYnV0IG9ubHkgZm9yIFZJUHMgYW5kIGhpZ2ggcm9sbGVycy4gClRoZXJlIGFyZSBkaWZmZXJlbnQgYXBwcm9hY2hlcyB0byBjbGFzc2lmeWluZyByZWxpZ2lvbiwgd2l0aCB0aGUgcmVjb2duaXRpb24gdGhhdCB0aGVyZSBhcmUgY3VsdHVyYWwgcGhlbm9tZW5hIChsaWtlIENvbmZ1Y2lhbmlzbSBvciBuYXRpb25hbGlzbSkgdGhhdCB3ZSBtaWdodCBhcmd1ZSBhYm91dC4gCkl0IGluY2x1ZGVzIHNsb3QgbWFjaGluZXMsIHZpZGVvIHBva2VyLCBiYWNjYXJhdCwgY3JhcHMsIGJsYWNramFjaywgcG9rZXIgZ2FtZXMsIHNjcmF0Y2ggY2FyZHMsIGxvdHRvIGdhbWVzLCBzcG9ydHMgYmV0dGluZywgYW5kIG1vcmUuLiAKWW91IHdpbGwgaGF2ZSB0byBjdXQgY29udGFjdC4gClBvd2VyIHNoaWZ0cywgYW5kIHBvd2VyIHZhY2N1bXMgYmVjb21lIHRoZSBuZXcgbm9ybS4gCk5vdCBsaWtlIHRoZSBiYXJiZXJzaG9wLiBQZW9wbGUgdHJ5IHRvIGJlIHRvdWdoIGluIHRoZSBiYXJiZXJzaG9wIFtidXRdLCB3aGVuIHlvdSBnbyB0byB0aGUgbmFpbCBzYWxvbiwgSSBmZWVsIGxpa2UgeW91IGp1c3QgZ290IHRvIGxldCBpdCBhbGwgb3V0LiAKRmluYWxseSwgdGhlIFVTIGRvbGxhciBpcyBhbiBBbWVyaWNhbiBob2xlIGNhcmQuIApZb3UgYXJlIGxpbWl0ZWQgdG8gc3VjaCBhIHNwZWVkIGJ5IHRoZSBjYXJzIGluIGZyb250IG9mIHlvdSBzdWNoIHRoYXQgY2FycyBiZWhpbmQgeW91IGNhdGNoIHVwLiBCeSB5b3VyIGxvZ2ljLCBhIGxpbmUgb2YgY2FycyBjb21pbmcgYmVoaW5kLCBhbmQgdGhlbiBoYXZpbmcgdG8gc2xvdyBkb3duLCB3aWxsIGFsbCBpbnN0YW50bHkgbW92ZSBvdmVyIChiZWNhdXNlIHRoZXkgYXJlIG5vdyBob2xkaW5nIHVwIHRoZSB0cmFmZmljIGJlaGluZCB0aGVtKSBzdWNoIHRoYXQgdGhlIGJhY2sgY2FyIHBhc3NlcyBldmVyeW9uZSAoaGUncyB0aGUgb25seSBvbmUgbm93IG5vdCBob2xkaW5nIHVwIHRyYWZmaWMpLiAKSSBub3Qgc2F5aW5nIGJpZ290ZWQgdmlld3Mgb24gdGhpcyBpc3N1ZSBhcmUgdW5wb3B1bGFyLiBCdXQgZm9yIG9uZSB0byBpbnNpc3QgdGhhdCB3aGF0IElzbGFtICJob25lc3RbbHldIiBhbmQgZnVsbHkgc2F5cyBhYm91dCBob21vc2V4dWFsaXR5IGFpbXMgdG8gdW5kZXJtaW5lcyB0aGluZ3MgbGlrZTogc3VwcG9ydCBmb3IgTEdCVCBieSBJU05BICh0aGUgYmlnZ2VzdCBXZXN0ZXJuIE11c2xpbSBvcmdhbml6YXRpb24pLCB0aGUgcmVjb25jaWxlZCBleHBlcmllbmNlcyBvZiBhY3R1YWwgTEdCVCBNdXNsaW1zLCBhbmQgYSBzdWJjdWx0dXJhbCBoaXN0b3J5IGluIElzbGFtaWMgY2l2aWxpemF0aW9ucyB3aGljaCBpbnZvbHZlIHBvc2l0aXZlIGludGVncmF0aW9uIG9mIGhvbW9zZXh1YWwgYW5kIHRyYW5zIHBlb3BsZXMuIE5ldmVyIGFsbG93IHRoZSBoYXRyZWQgb2YgcGVvcGxlIHRvIHByZXZlbnQgeW91IGZyb20gYmVpbmcganVzdC4gQmUganVzdCwgZm9yIHRoaXMgaXMgY2xvc2VzdCB0byByaWdodGVvdXNuZXNzIChRdXJhbiA1OjgpLgpBZnRlciBhbGwsIHlvdSBjYW4gd2luIGF0IHRoZSBjYXNpbm9zIHRvbywgYXQgbGVhc3QgZm9yIGEgd2hpbGUuIApJbCBlbiBlc3QgcXVpIGFmZmlybWVudCBtbWUgcXVlIGNlIG1vbmRlLCBmaW5hbGVtZW50LCBsZXVyIGNvbnZpZW50LCAgbGEgY29uZGl0aW9uIHF1J2lscyBwdWlzc2VudCB0b3VjaGVyIHVuZSBtb2Rlc3RlIHBhcnQgZGVzIG1pZXR0ZXMgZHUgZ3RlYXUgcXVpIGxldXIgZmFpdCBhY2NlcHRlciBsZXVyIGZ1bmVzdGUgY29uZGl0aW9uLiAKSWYgeW91ciBpbW11bmUgc3lzdGVtIGp1c3QgaWdub3JlZCB0aG9zZSB2aXJ1c2VzIGFuZCBsZXQgdGhlbSB0YWtlIHRoZWlyIGJlc3Qgc2hvdCBhdCB5b3UsIHlvdSdkIGJlIGZpbmUuIFdlIGtub3cgdGhpcyBiZWNhdXNlIGFwcHJveGltYXRlbHkgYSBxdWFydGVyIG9mIHRoZSBwb3B1bGF0aW9uIGFyZSBlZmZlY3RpdmVseSAiaW1tdW5lIiB0byB0aGUgY29sZC4gVGhleSBuZXZlciBjYXRjaCBjb2xkcyBiZWNhdXNlIHRoZWlyIGJvZGllcyBkb24ndCBmcmVhayB0aGUgaGVsbCBvdXQgd2hlbmV2ZXIgb25lIG9mIHRob3NlIDIwMCB2aXJ1c2VzIHNuZWFrcyBpbi4gClRoZXNlIHN0YXRlbWVudHMgaXMgc28gcG93ZXJmdWwhIElmIHlvdSBhcmUgbWFycmllZCB0byBzb21lb25lIHdobyBpcyBlbW90aW9uYWxseSBpbW1hdHVyZSB5b3UgcHJvYmFibHkgZmFjZSBncmVhdCBjaGFsbGVuZ2VzIGluIGRlYWxpbmcgd2l0aCB0aGVpciBtb29kcyBhbmQgYmVoYXZpb3JzLiBZb3UgaGFkIHBsYW5zIGZvciBhIG5pY2Ugd2Vla2VuZCB0b2dldGhlcj8gQnV0LCB0aGVuIGFnYWluLCBhIGxvdCBvZiB0aGUgdGhpbmdzIHRoZXkgZG8gd29yay4gV2l0aCBtYXR1cml0eSB3ZSBkaXNjb3ZlciB3ZSBhcmUgbm90IGFibGUgdG8gY29udHJvbCBvZiBhcyBtYW55IHRoaW5ncyBhcyB3ZSB0aG91Z2h0IHdlIGNvdWxkIGFuZCBzbyB3ZSBsZWFybiBob3cgdG8gY29wZS4gSGUgaGFkIGFsc28gdHJpZWQgY29jYWluZSBvbmNlLiBCZXlvbmQgaW50dWl0aW9uLCB0aGVyZSBhcmUgYSBmZXcgc3BlY2lmaWMgdGhpbmdzIHlvdSBjYW4gbG9vayBmb3IgdG8gaGVscCB5b3UgZGV0ZXJtaW5lIHdoZXRoZXIgYSBndXkgaXMgZW1vdGlvbmFsbHkgbWF0dXJlIGVub3VnaCBmb3IgYSBjb21taXR0ZWQgcmVsYXRpb25zaGlwLiBCeSBzdGF5aW5nIHBvc2l0aXZlIGl0IGNhbiBoZWxwIG90aGVycyBhcm91bmQgeW91LCBhbmQgaG9wZWZ1bGx5IGl0IGNhbiBoZWxwIGFueSBlbW90aW9uYWwgaW1tYXR1cmUgcGVyc29uIG9yIHBlb3BsZSB3ZSBoYXZlIGVuY291bnRlcmVkIGluIG91ciBsaXZlcy4KQmVpbSBMdW5hIFlvZ2EgYmVuIGxlaHJlbiBtaWNoIGRpZSBNeW9tZSBtZWluZSBHcmVuemVuIGltbWVyIHdpZWRlciBuZXUgenUgZXJrZW5uZW4uIApFdmVuIGlmIHRoZXkganVzdCBoYWRuIHNob3duIHB1YmxpYyBvcGluaW9uIHdoZW4geW91IGFyZSBjaG9vc2luZyBiZXR3ZWVuIHJldm9sdXRpb24gYW5kIGRlbW9uc3RyYXRpb24gaW4gdGhlIGNodXJjaCBhdCB0aGUgZW5kLCBpdCB3b3VsZCBmZWVsIHZlcnkgZGlmZmVyZW50LgpIYXZlIHlvdSBub3QgYmVlbiBwYXlpbmcgYXR0ZW50aW9uIHRvIHRoZSB3aWRlbmluZyBpbmNvbWUgaW5lcXVhbGl0eSBnYXAgb3ZlciB0aGUgbGFzdCBoYWxmIGNlbnR1cnk/IEluIHRoZSBtaWQgIGV4ZWN1dGl2ZSBjb21wZW5zYXRpb24gd2FzIGFyb3VuZCAyMHggdGhhdCBvZiB0aGUgYXZlcmFnZSB3b3JrZXI7IGl0IG5vdyBvdmVyIDMwMHguIFNpbmNlIHRoZSBtaWQgdG8gbGF0ZSB3b3JrZXIgY29tcGVuc2F0aW9uIGhhcyBsYXJnZWx5IHN0YWduYXRlZC4gVGhlbiB0aGVyZSB0aGUgZmFjdCB0aGF0IHRoZSB3ZWFsdGhpZXN0IHRvcCAxIHBlcmNlbnQgaW4gdGhlIFVTIGNvbnRyb2xzIG92ZXIgNDAgcGVyY2VudCBvZiB0aGUgd2VhbHRoLiAKV2h5IHRoaXM/IExldCBzYXkgZm9yIHRoZSBzYWtlIG9mIHRoZSBhcmd1bWVudCB0aGF0IGl0IGlzIHByb3ZlbiB0aGF0IFRydW1wIGRpZCBjb25zcGlyZSB0aGlzIHdheTsgaG93ZXZlciwgZm9yIG9uZSByZWFzb24gb3Igb3RoZXIgc3VjaCBhY3RzIGRpZCBub3QgY2hhbmdlIHNpZ25pZmljYW50bHkgdGhlIG91dGNvbWUgb2YgdGhlIGVsZWN0aW9ucywgbWVhbmluZyB0aGF0IGhlIHdvbiBsZWdpdGltYXRlbHkgaW4gc3BpdGUgb2YgaXQgYWxsLiBXaHkgd291bGQgeW91IGJlIG9rIHdpdGggdGhpcz8gRXZlbiBpZiBoZSB3YXMgZWxlY3RlZCBsZWdpdGltYXRlbHksIGhlIHN0aWxsIGJlIGEgbW9uc3Ryb3VzbHkgdW5ldGhpY2FsIGZlbG9uIHdobyBwdXQgaW4gamVvcGFyZHkgQW1lcmljYSBpbnRlcmVzdHMgYnkgcG90ZW50aWFsbHkgZ2l2aW5nIGxldmVyYWdlIHRvIGEgZm9yZWlnbiwgbW9zdGx5IGhvc3RpbGUgc3VwZXJwb3dlciB0byBpbnN0YWxsIGEgcHJlc2lkZW50IGZyaWVuZGx5IHRvIHRoZW0uIElmIHRoZSBhY3Rpb24gY29tbWl0dGVkIHdhcyBub3Qgc2V2ZXJlIGVub3VnaCB0byBhY3R1YWxseSBpbmZsdWVuY2UgdGhlIGVsZWN0aW9uIHJlc3VsdHMsIHRoZW4gdGhlcmUgaXMgYSBnb29kIGNoYW5jZSAoYWx0aG91Z2ggbm90IGNlcnRhaW4pIHRoYXQgd2hhdGV2ZXIgd2FzIGRvbmUgd2FzIG1pbm9yIG9yIGNvbW1vbnBsYWNlLgpBc2lkZSBmcm9tIHRoYXQsIHRoZSBzcXVpc2h5IGZlZWwgb2YgdGhlIG1pY3JvYmVhZCBwaWxsb3cgYWxsb3dzIGl0cyB1c2VyIHRvIGZlZWwgcmVsYXhlZCBqdXN0IGJ5IHRvdWNoaW5nIGFuZCBmZWVsaW5nIHRoZSBiZWFkcyB1bmRlcm5lYXRoIHRoZSBjb3ZlcmluZywgd2hpY2ggaXMgdXN1YWxseSBtYWRlIG9mIHNvbWV0aGluZyBzbW9vdGggYW5kIHNpbGt5IGxpa2Ugc2F0aW4uIAoiTm9ib2R5IGNvdWxkIGJlYXQgbXkgbW90aGVyIGF0IGNhcmRzLCIgc2FpZCBoZXIgZGF1Z2h0ZXIgTWFyamllIG9mIFNvbWVydmlsbGUuICJJdCB3YXMgcG9pbnRsZXNzOyBNb20ganVzdCB3b24uIFRoYXQncyB3aGF0IHNoZSBkaWQgd2hlbiBzaGUgcGxheWVkIGNhcmRzLiBBbmQgc2hlIGd1YXJkZWQgaXQgd2VsbC4gU2hlIGRpZG4ndCB0ZWFjaCB1cyBob3cgdG8gd2luLiBUaGF0J3Mgbm90IG9uZSBvZiB0aGUgdGhpbmdzIHNoZSBoYW5kZWQgZG93bi4iClJlZ2V4IHF1ZXJpZXMgYXJlIG5vdCBlcXVpcHBlZCB0byBicmVhayBkb3duIEhUTUwgaW50byBpdHMgbWVhbmluZ2Z1bCBwYXJ0cy4gU28gbWFueSB0aW1lcyBidXQgaXQgaXMgbm90IGdldHRpbmcgdG8gbWUuIEV2ZW4gZW5oYW5jZWQgaXJyZWd1bGFyIHJlZ3VsYXIgZXhwcmVzc2lvbnMgYXMgdXNlZCBieSBQZXJsIGFyZSBub3QgdXAgdG8gdGhlIHRhc2sgb2YgcGFyc2luZyBIVE1MLiAKVGhlIGV4aGliaXRpb24gaXMgaW5jbHVkZWQgd2l0aCBtdXNldW0gYWRtaXNzaW9uOyAkMzAgJDM1IHBlciBzYXVuYSBzZXNzaW9uOyAkMTAgJDE3IGZvciB0aGUgb3BlbmluZyBuaWdodCBwYXJ0eS4gMjYwMCBQYXJrIEF2ZS4gCkljaCBoYWJlIG1pY2ggZW50c2NoaWVkZW4gd2llZGVyIGJlaSBTdW5Qb2tlciB6dSBzcGllbGVuLCB3ZWlsIHNpZSBtZWluZXMgRXJhY2h0ZW5zIGRlbiBlaW5lbiBzZWhyIGd1dGVuIFN1cHBvcnQgdW5kIGVpbiB1bnNjaGxhZ2JhcmVzIExveWFsaXR0c3Byb2dyYW1tIGhhYmVuLi4gCk1ycy4gSGFycnkgWWluZ2xpbmcgYW5kIE1hcnkgRGljayB2aXNpdGVkIE1ycy4gQWxsZW4gU2Vib2xkLCBTdW4gIGRheSBhZnRlcm5vb24uIApTb21ldGltZXMgbXkga25lZXMgd291bGQgaHVydCwgYnV0IEkgY291bGQgcnVuLiAKUGxlbnR5IG9mIGdyZWF0IGZvb2Qgb3B0aW9ucywgYnV0IGlmIHlvdSB3YW50IGdvb2QgQ2hpbmVzZSBmb29kIG15IGZhdm9yaXRlcyBhcmUgWWUgU2hhbmdoYWkgaW4gWGludGlhbmRpICh5b3UgcHJvYmFibHkgbmVlZCBhIHJlc2VydmF0aW9uKSBhbmQgU2ljaHVhbiBDaXRpemVuIG9uIFd1a2FuZyBSb2FkLi4gCkFsbGlzb24gWmVsbCwgd2hvIHdvcmtzIGluIGNvbW1zIGF0IHRoZSBHaWFudHMsIG5vdGVkIHRvIG1lIG9uIFR3aXR0ZXIgdGhhdCB0aGVpciBzdHJlbmd0aCBhbmQgY29uZGl0aW9uaW5nIGNvYWNoIHdvcmtzIGFjcm9zcyBib3RoIHRoZWlyIEFGTFcgYW5kIG5ldGJhbGwgdGVhbXMsIGFuZCBpbmNsdWRlcyBzcGVjaWZpYyBBQ0wgZXhlcmNpc2VzLCBhbmQgdGhhdCB0aGV5IHNlZW0gdG8gaGF2ZSBiZWVuIHJlYXNvbmFibHkgc3VjY2Vzc2Z1bCBhdCBtaW5pbWlzaW5nIEFDTHMgdGhlcmUuIApJIGhhdmUgYmVlbiBleHRyZWFtbHkgcGxlYXNlZCB3aXRoIGhvdyBhZnRlciBhYm91dCBhIHllYXIgb2Ygbm90IGJlaW5nIHN0YXJ0ZWQgYWZ0ZXIgYSBiaXQgb2YgdGxjIGFuZCBwZXRyb2wgaXQgZmlyZWQgYWZ0ZXIgYSBmZXcgdHVybnMuIApJIHdva2UgdXAgb25lIG5pZ2h0IGluIHNvIG11Y2ggcGFpbiBJIGNvdWxkbiBtb3ZlIG15IGxlZ3MuIApJIGFza2VkIEphbWVzIEhpZ2hhbSwgYW4gYW50aHJvcG9sb2d5IHByb2Zlc3NvciBhdCBOZXcgWW9yayBVbml2ZXJzaXR5IHdobyBzcGVjaWFsaXplcyBpbiBjb21tdW5pY2F0aW9uLCB3aHkgd2UgcmV2ZXJ0IHRvIGFtb3JwaG91cyBtb2FuaW5nIGluIHRoZXNlIHNpdHVhdGlvbnMgdmVyc3VzIHVzaW5nIHRoZSBnaWZ0IG9mIGFydGljdWxhdGUgbGFuZ3VhZ2UsIHdoaWNoIHdlIGRldmVsb3BlZCBhbG1vc3QgbWlyYWN1bG91c2x5IG92ZXIgbWFueSBtaWxsZW5uaWEgb2YgcGFpbnN0YWtpbmcgZXZvbHV0aW9uLiBJbiBvdGhlciB3b3Jkcywgd2h5IGRvIHBsZWFzdXJhYmxlIHNlbnNhdGlvbnMgbWFrZSB1cyBnbyBsZXhpY2FsbHkgTmVhbmRlcnRoYWw/CkV2ZW4gdGhvdWdoIHRoZSAxIG1pbnV0ZSB0aHJlc2hvbGQgd291bGQgYWRkcmVzcyB3aGF0IERyLiBXYWxkaW5nZXIgc2F5cyBhcmUgdGhlIGRpc3RvcnRlZCBwZXJjZXB0aW9ucyBvZiBtZW4gbGlrZSBNYXR0LCBzb21lIGRvY3RvcnMgYXJndWUgdGhhdCB0aGlzIGRlZmluaXRpb24gdGFrZXMgdGhlIGRpc2N1c3Npb24gaW4gdGhlIHdyb25nIGRpcmVjdGlvbi4gSW4gdGhlaXIgbWluZHMsIFBFIHNob3VsZCBuZXZlciBiZSBkaWFnbm9zZWQgd2l0aCBhIHdhdGNoLiAKSWYgSSBoYWQgbW9yZSBzdXBwb3J0IHRoaW5ncyBtaWdodCBiZSBiZXR0ZXIsIGJ1dCBvaCB3ZWxsLkVkaXQyOiBIb3cgd2Uga25vdyB0aGF0IGl0IHdhcyBub3QgYSBsZWFrLiBXZSBoYXZlIGRldGFpbHMgcmVsZWFzZWQgcHVibGljbHkgb24gdGhlIGhhY2sgYW5kIGhvdyBpdCB3YXMgY29tbWl0dGVkLiBWZXJ5IGludGVyZXN0aW5nIGlmIHlvdSBhcmUgYXQgYWxsIGludG8gY3liZXIgc2VjdXJpdHlGaXJzdCBvZmYsIENyb3dkU3RyaWtlLCB0aGUgY29tcGFueSB0aGUgRE5DIGJyb3VnaHQgaW4gdG8gaW5pdGlhbGx5IGludmVzdGlnYXRlIGFuZCByZW1lZGlhdGUgdGhlIGhhY2ssIGFjdHVhbGx5IHNoYXJlZCBpbWFnZXMgb2YgdGhlIEROQyBzZXJ2ZXJzIHdpdGggdGhlIEZCSS4gCkFueW9uZSBldmVyIGdvdHRlbiBhIG1hc3NhZ2UKR3Jvd2luZyB1cCwgaGUgc2F5cyBoZSB3YXMgc2h5IGFuZCBkaWRuJ3QgZ2V0IGEgbG90IG9mIHRvdWNoLiBBZnRlciBoaXMgZGl2b3JjZSwgaGUgc2F5cyBoZSBiZWdhbiBkb2luZyBoZWFsaW5nIHdvcmsgYXJvdW5kIGludGltYWN5LCBhbmQgaGUgcmVhbGl6ZWQgaG93IG11Y2ggdG91Y2ggaGVhbGVkIGFuZCB0cmFuc2Zvcm1lZCBoaW0uCldhcyBhIHNtYWxsIGZhbWlseS4gCk9idmlvdXNseSBoZSBjb3VsZCBoYXZlIHNvbWV0aGluZyBsaWtlIDg4IHRoYXQgbWlnaHQgbm90IGJlIGFibGUgdG8gZmFkZSBwb3QgcG90IGJ1dCBzdGlsbCB0aGUgZ2VuZXJhbCBwcmluY2lwbGUgYXBwbGllcy4gCkkgbmV2ZXIgcmVjZWl2ZWQgYW55ICJhZGRpdGlvbmFsIiBzZXJ2aWNlIGFuZCB0aGUgd2F5IEkgZ290IGFyb3VuZCB0aGlzIHdhcyB0aGF0IEkgcGFpZCB0aGVtIGV4dHJhICJ0aXBzIiB0byBqdXN0IGNoYXR0aW5nIGRpcnR5IHdpdGggbWUgaW5zdGVhZCB3aGlsZSBtYXNzYWdpbmcgbWUuIEkgdG9sZCB0aGVtIChpbiB0aGVpciBuYXRpdmUgbGFuZ3VhZ2UsIEkgc3BlYWsgYm90aCBDYW50b25lc2UgYW5kIE1hbmRhcmluKSB0aGF0IEkgZG9uIGRvIGV4dHJhIHNlcnZpY2VzICJhbnltb3JlIiBkdWUgdG8gYSBtZWRpY2FsIHJlYXNvbiBidXQgdGhhdCBJIHN0aWxsIGVuam95IHNleHVhbCB0YWxrIGR1cmluZyB0aGUgbWFzc2FnZSAoaWUuIFRlYXNpbmcpLiAKSm9obm55IE1vc3M6IEFzIGEgY2hhbGxlbmdlIHRvIGNhcmQgbGVnZW5kIEpvaG5ueSBNb3NzIGJ5IHdlbGwga25vd24gZ2FtYmxlciBOaWNob2xhcyAiTmljayB0aGUgR3JlZWsiIERhbmRhbG9zIHRvIGEgaGlnaCByaXNrIHBva2VyIG1hcmF0aG9uLiBUaGUgYWZmYWlyIHRvb2sgYSBwZXJpb2Qgb2YgZml2ZSBtb250aHMgdG8gYWNjb21wbGlzaCB3aXRoIGJyZWFrcyBvbmx5IGZvciBzbGVlcGluZy4gRmluYWxseSwgTW9zcyB3YXMgdGhlIG9uZSB3aG8gd29uIGFuIGFudGljaXBhdGVkIGFtb3VudCBvZiAkMm1pbGxpb24gYXMgcmV3YXJkLi4gCklmIGEgbmF0aW9uYWwgcmVzcG9uc2UgaGFkIGJlZW4gb3JnYW5pc2VkIHNvb25lciwgYmVmb3JlIHRoZSBWaWtpbmcgZm9yY2VzIGhhZCB3ZWFrZW5lZCBFbmdsYW5kLCBpdCBpcyBwb3NzaWJsZSB0aGF0IHRoZWxyZWQncyBraW5nZG9tIHdvdWxkIG5vdCBoYXZlIGJlZW4gY29ucXVlcmVkLCBvciBhdCBsZWFzdCwgbm90IGFzIGVhc2lseSBjb25xdWVyZWQuLiAKQnV0IHdoYXQgaWYgQ2hyaXN0aWFuIG1pc3Npb25zIGFuZCBVUyBBbnRpIEFJRFMgZnVuZGluZyBoYXZlIGhlbHBlZCBmb21lbnQgdGhlIGlkZWEgdGhhdCBob21vc2V4dWFsaXR5IGlzIGEgImZvcmVpZ24gZGlzZWFzZSwiIGEgZm9ybSBvZiBJbXBlcmlhbGlzbSBicm91Z2h0IHRvIHRoZSBBZnJpY2FuIGNvbnRpbmVudCBieSB0aGUgZGVjYWRlbnQgTm9ydGggYW5kIHNvIGEgc29ydCBvZiBmb3JlaWduIGludmFzaW9uPwpNYW55IHdobyB3ZXJlIGNoZWVyaW5nIEphc29uIEFsZGVhbiBoZWFkbGluZSBzZXQgb24gdGhlIExhcyBWZWdhcyBTdHJpcCBsYXRlIE9jdC4gMSwgMjAxNywgc2FpZCBsYXRlciB0aGV5IHRob3VnaHQgdGhlIHJhcGlkIGNyYWNrIGNyYWNrIGNyYWNrIHRoZXkgaGVhcmQgd2FzIGZpcmV3b3JrcyB1bnRpbCBwZW9wbGUgZmVsbCBkZWFkLCB3b3VuZGVkLCBibGVlZGluZy4KSXQgd2FzIHBvc3RlZCBvbmxpbmUgYnkgYW4gYW50aSBzZWNyZWN5IGdyb3VwLi4gCldlJ3JlIG5vdCBvbiB0aGUgc2FtZSB0ZWFtIGFueW1vcmUsIGJ1dCB3ZSdyZSBzdGlsbCBmcmllbmRzIGFuZCBvbiB0b3Agb2YgdGhhdCB0aGVyZSBhcmUgc3RpbGwgYmlnZ2VyIHRoaW5ncyBpbiBsaWZlLCIgTWFydGluIHNhaWQuICJSYWlzaW5nIG1vbmV5IGZvciBhIGxvdCBvZiBkaWZmZXJlbnQgY2F1c2VzIGlzIGltcG9ydGFudC4gQWxsIG9mIHRoZXNlIGd1eXMgd2hvIGFyZSBoZXJlIHRvbmlnaHQgZXhwcmVzc2VkIHRoYXQgdGhleSB3YW50ZWQgdG8gY29tZSBhbmQgd2FudGVkIHRvIGJlIGEgcGFydCBvZiBpdC4gCkthbG9vbnp1IHUKT24gdGhlIG90aGVyIGhhbmQsIHlvdSBjb3VsZCBnbyB3aXRoIHRoZSBoYXJkZXN0IG1ham9yIHlvdSBjYW4gdW5kZXJzdGFuZCAobWF0aGVtYXRpY3MsIHZhcmlvdXMgZW5naW5lZXJpbmcpLCBwZXJoYXBzIG5vdCBnZXQgYXMgaGlnaCBhIGdyYWRlLCBidXQgY29uY2x1c2l2ZWx5IHByb3ZlIHRoYXQgeW91IGEgbWFzc2l2ZSBicmFpbi4gCkVuIHBhcnRpY3VsaWVyIGVuIEZyYW5jZSwgbyBsJ29uIGluZGlxdWUgcXVlIGRlIGJpZW5zIG1laWxsZXVycyBtZGljYW1lbnRzIHNvbnQgZGogc3VyIGxlIG1hcmNoLCBzYW5zIHF1J29uIGFpdCBiZXNvaW4gZGUgcydlbmNvbWJyZXIgZCd1bmUgcGxhbnRlIHF1aSBwb3J0ZSBlbiBlbGxlIGF1dGFudCBkZSBkYW5nZXJzIHF1ZSBkZSBiaWVuZmFpdHMuIApXaXRoIENhbGN1bGF0aW5nIFRleGFzIEhvbGRlbSBQb2tlciBPZGRzIE1hZGUgRWFzeSwgeW91IGRvbid0IGhhdmUgdG8gd2luIGV2ZXJ5IGhhbmQgdG8gUGxheSBUZXhhcyBIb2xkZW0gYW5kIGJlIHN1Y2Nlc3NmdWwuIEFzIGxvbmcgYXMgeW91IHB1dCB5b3VyIG1vbmV5IGluIHdoZW4gdGhlIG9kZHMgYXJlIGluIHlvdXIgZmF2b3IsIG92ZXIgdGhlIGxvbmcgaGF1bCwgeW91IHdpbGwgY29tZSBvdXQgYWhlYWQuCkVpbmUgZXR3YXMgdW5nbGNrbGljaGUgWmVpdCwgaXN0IG1hbiBkb2NoIGdlcmFkZSBqZXR6dCBhbSB2ZXJoYW5kZWxuIGVpbmVzIGJlc3NlcmVuIFRhcmlmcyBmciBkaWUgQ2hpcm9wcmF4aXMgZGVyIHNlaXQgMTk5NiBuaWUga29ycmlnaWVydCB3dXJkZS5aaWVsIGRlciBIU0sgd2lyZCBlcyB3b2hsIGFiZXIgc2VpbiBkZW4gVGFyaWYgdm9uIDQuMjAgYmlzIDQuNDAgbmFjaCB1bnRlbiB6dSBkcmNrZW4uIFNvIHdpcmQgZXMgd29obCBiYWxkIGF1Y2ggaW4gZGVyIENoaXJvcHJha3RpayBlaW4gWndlaWtsYXNzZW4gU3lzdGVtIGdlYmVuLiAKRG8gdGhpcyBieSBpbmNyZWFzaW5nIHRoZSBiZXRzIHRvIGEgaGlnaCBldmVuIGJlZm9yZSB0aGUgZmxvcCBkcm9wcy4gV2hhdCB3aWxsIGhhcHBlbiBpcyBwbGF5ZXJzIHdobyBoYXZlIGdvb2QgcG9ja2V0IGNhcmRzIGJ1dCBnZXQgYSBmb3J0dW5hdGUgZmxvcCB3aWxsIGJlIGVsYm93ZWQgb3V0IGludG8gYSBmb2xkLi4gCldpdGggaGlzIGRvZSBleWVzIGFuZCBwZXJveGlkZSBwZXJtLCBUYXlsb3IgSm9obnNvbidzIFZyb25za3kgbWF5IGJlIHRvbyBtdWNoIHRoZSBwcmVlbmluZyBib3kgdG95IGZvciBzb21lIHZpZXdlcnMsIGJ1dCBpdCdzIGFuIGFjY2VwdGFibGUgaW50ZXJwcmV0YXRpb24uIApXYW50IHRvIE1ha2UgaXQgUmlnaHQKS2VuIGlzIGdvaW5nIHVwIHRoZXJlIGFzIGEgY29tZWRpYW4uIFBlb3BsZSBrbm93IGhlIG1ha2luZyBqb2tlcy4gSGUgbm90IGRvaW5nIHRoaXMgaW4gYSBjcmltZSBteXN0ZXJ5IHRocmlsbGVyIG1vdmllLgpBIG5vbiBhY2FkZW1pYyBleGFtcGxlIG1pZ2h0IGJlIHRoYXQgeW91IGJlY29tZSBhd2FyZS9sZWFybiB5b3UgaGF2ZSBhbmdlciBpc3N1ZXMgKHBlcmNlaXZpbmcvaW5mZXJyaW5nIGluZm9ybWF0aW9uKSwgeW91IHJlbWluZCB5b3Vyc2VsZiB0aGF0IHlvdSBoYXZlIGFuZ2VyIGlzc3VlcyAocmV0YWluIGFzIGtub3dsZWRnZSksIGFuZCB5b3UgYWN0aXZlbHkgYXZvaWQgc2l0dWF0aW9ucyB0aGF0IHRyaWdnZXIgdGhpcyBpc3N1ZSwgYW5kIHNlZWsgYWRkaXRpb25hbCBoZWxwIChhcHBseWluZyBpdCB0b3dhcmRzIGFkYXB0aXZlIGJlaGF2aW91cnMpLiAKMTAwIHBsYXN0aWMgcGxheWluZyBjYXJkcyBhcmUgdXNlZCBvbiB0aGUgd29ybGQgcG9rZXIgdG91ciB5b3Ugd2F0Y2ggb24gdGVsZXZpc2lvbi4gUHJvIHBva2VyIHBsYXllcnMgbGlrZSB0aGUgY3Jpc3AgZmVlbCBvZiB0aGVzZSBjYXJkcyBhbmQgdGhleSBhcmUgZ3JlYXQgZm9yIHRoZXNlIGhpZ2ggc3Rha2VzIGdhbWVzIHdoZXJlIG5lcnZvdXMgcGxheWVycyBjYW4gZGFtYWdlIGEgY2FyZC4gVGhlc2UgY2FyZHMgd2lsbCBub3QgZGFtYWdlIGVhc2lseSBhbmQgdGh1cyBjYW4gYmUgdXNlZCBvdmVyIGFuZCBvdmVyIGFnYWluLgpUaGlzIGRlbWFuZHMgdGhhdCB0aGV5IGhhdmUgYW4gZWZmZWN0aXZlIHdheSB0byBjYXJ2ZSB0aGUgd29yayBpbnRvIHNtYWxsIHBpZWNlcyB0aGF0IGNhbiBiZSBidWlsdCBhbmQgdGVzdGVkIGluY3JlbWVudGFsbHkuIApEZXBlbmRzIG9uIHdoYXQgcGFydCBvZiAiYnVzaW5lc3MiIHNoZSBnb2VzIGludG8uIApNYWpvciBvbmxpbmUgcG9rZXIgc2l0ZXMgc2hvdWxkIGhhdmUgYWxsIHRoZSBpbmZvcm1hdGlvbiB0aGF0IHBsYXllcnMgbmVlZCBvbnRoZWlyIGxvYmJ5LiBBIGdyZWF0IGxvYmJ5IG1lYW5zIGl0IGlzIGEgZ3JlYXQgc2l0ZS4uIApOZXcgeWVhciBldmUgYWJvdXQgNSB5ZWFycyBhZ28uIGkgd2FzIHVwIGFib3V0IDE2MDAgZnJvbSBwbGF5aW5nIHBva2VyIHNvIGFib3V0IDUgbWludXRlcyBiZWZvcmUgbWlkbmlnaHQgaSBkZWNpZGUgaSBnb2luZyB0byBwdXQgMTAwIG9uIGJhbmtlciBvbiB0aGUgYmFjY2FyYXQgdGFibGUgYXQgbWlkbmlnaHQuIHNvIGkgZ28gZG93biB0byB0aGUgZmlyc3QgZmxvb3IgYW5kIGV2ZXJ5Ym9keSBpcyBwdXR0aW5nIG9uIHRoZSBwYXJ0eSBoYXRzIGFuZCBibG93aW5nIG5vaXNlIG1ha2VycyBhbmQgc3VjaC4gMiBtaW51dGVzIHRvIG1pZG5pZ2h0LiB0aGUgYmFjY2FyYXQgdGFibGUgaXMgZnVsbC4gYWxsIGFzaWFucy4gdGhleSBhcmUgdGFraW5nIHRoZWlyIHRpbWUgYWJvdXQgZGVjaWRpbmcgYmFua2VyIG9yIHBsYXllci4gaSBhc2sgb25lIG9mIHRoZW0gaWYgaSBjYW4gcGxheSBhbG9uZyB3aXRoIGhpbSBvbiBoaXMgc3BvdC4gaGUgc2F5IHllcy4gaSBzbGFtIG15IGJsYWNrIGNoaXAgb24gYmFua2VyLiBiZWluZyB0aGUgc3VwZXJzdGl0aW91cyBidW5jaCB0aGF0IHRoZXkgYXJlLCB0aGV5IGFsbCBwdXQgbWF4IGJldCBvbiBiYW5rZXIuIDIwMDAgZWFjaCBzcG90IHNvIHRoZXJlIDE0ayBvbiB0aGUgdGFibGUgb24gYmFua2VyIGJlY2F1c2Ugb2YgbWUuIHRoZSAxMCBzZWNvbmQgY291bnRkb3duIHN0YXJ0cyBhbmQgdGhlIGRlYWxlciBzdGFydHMgZGVhbGluZyB0aGUgaGFuZC4gcGxheWVyIHNob3dzIDQgYmFua2VyIHNob3dzIDcgYW5kIHN0YW5kcy4gcGxheWVyIGRyYXdzIGEgY2FyZC4gZXZlcnlib2R5IGlzIHllbGxpbmcgMy4yLjEuIGhhcHB5IG5ldyB5ZWFyLiB0aGUgZGVhbGVyIGRyYXdzIGEgNCBiaWdnZXIgdGhhbiBzaGl0IGdpdmluZyBwbGF5ZXIgYW4gOCBvdmVyIGJhbmtlciA3LiBhbmQgYXMgdGhlIG5vaXNlIG1ha2VycyBhcmUgZ29pbmcgb2ZmLiBwZW9wbGUgYXJlIGtpc3NpbmcuIGRyaW5raW5nIGNoYW1wYWduZS4gdGhlIGRlYWxlcnMgcG91bmRzIHRoZSB0YWJsZSB3aXRoIDIgZmlzdHMgYW5kIHNheXMgIlRJRSIgISEhISBJdCB0b29rIC4yIG1pbGxpc2Vjb25kcyBmb3IgZXZlcnlvbmUgdG8gc25hdGNoIHRoZWlyIG1vbmV5IGJhY2sgYW5kIGhhcHB5IG5ldyB5ZWFycyB0byBhbGwgYW5kIHRvIGFsbCBhIGdvb2QgbmlnaHQuCkkgaGF2ZSBhIHJhcmUgY2FzZSB3aGVyZSBJIHRoaW5rIHRoaXMgY291bGQgYmUgYSBnb29kIHRoaW5nLiBXaGVuIEkgd2FzIHlvdW5nZXIgSSB3b3JrZWQgYXQgYSBmYWN0b3J5IHBpZyBmYXJtLiBPYnZpb3VzbHkgdGhlIHRyZWF0bWVudCBvZiBhbmltYWxzIHdhc24gcHJldHR5IGFuZCBJIGZvdW5kIG15c2VsZiBnZXR0aW5nIHN1Y2tlZCBpbnRvIHRoYXQgc29tZXRpbWVzLCBzdGlsbCB0aGUgd29yc3Qgam9iIEkgZXZlciBoYWQuCkkgdGhpbmsgd2hlbiBvdXIgYmFiaWVzIHdlcmUgYWxsIGFyb3VuZCA2aXNoIG1vbnRocyB0aGUgZ3JvdXAgaW1wbG9kZWQuIApJZiB5b3UndmUgZ290IGEgZmV3IG1pbGxpb24gZG9sbGFycyBsYXlpbmcgYXJvdW5kLCBpdCdzIG5vdCB0b28gbGF0ZSB0byBidXkgYWlydGltZSBmb3IgYSBTdXBlciBCb3dsIGFkLiBDQlMgc2F5cyBpdCBhbHJlYWR5IHNvbGQgYWJvdXQgOTAgcGVyY2VudCBvZiB0aGUgaW4gZ2FtZSBpbnZlbnRvcnksIGFzIEFudGhvbnkgQ3J1cGkgd3JpdGVzLiAKWW91IGdvdCB0byBiZSBjYXJlZnVsIHRob3VnaCBiZWNhdXNlIG5vdCBhbGwgb2xkIGd1eXMgYXJlIE9NQyBuaXQgdHlwZXMuIFlvdSBzdGlsbCBoYXZlIHRvIHR5cGUgdGhlbSBiZWZvcmUgeW91IHRyeSB0byBleHBsb2l0IGFzIEkgaGF2ZSBzZWVuIG9sZCBtYW5pYWNzIGFzIHdlbGwgYXMgdGhlIHJhcmUgZGVjZW50IHJlZy4KVGhpcyB3YXMgYmVjYXVzZSBJIGhhZCBhIHRlcnJpYmxlIGVwaXNvZGUgb2YgaHlwb2dseWNhZW1pYSBhbmQgd2FzIGZhaW50aW5nIGNvbnN0YW50bHkgZm9yIDQgaG91cnMgc3RyYWlnaHQgYmVmb3JlIEkgc2hvdmVkIHNvbWUgc3VnYXJ5IHRvYXN0IGRvd24gbXkgdGhyb2F0LiAKU2hlIHNlZW1zIHN3ZWV0IHRvIG91dHNpZGVycyBhbmQgSSBoYXZlIGJlZW4gYXNrZWQgYnkgZG96ZW5zIG9mIHBlb3BsZSB3aHkgd2UgZG9uJ3QgaGF2ZSBhIGNsb3NlciByZWxhdGlvbnNoaXAsIGJ1dCBldmVudHVhbGx5IG15IG1vbSBsZXRzIGRvd24gaGVyIGd1YXJkLiBJIGRvbid0IGhhdmUgYW55IGFkdmljZSBidXQgSSBjYW4gZW1wYXRoaXplIDEwMCUuLiAKTWlsaXRhcnkgYmFzZXMgaW4gdGhlIFBoaWxpcHBpbmVzLiBOdW1iZXIgb2YgQW1lcmFzaWFuIGtpZHM6IG1vcmUgdGhhbiA1MCwwMDAuIApCcmVuZGEgd2FzIGEgc2VyaW91cyBQbGF5ZXIgd2VhdGhlciBpdCBiZSBCaW5nbyBvciBQb2tlci4gSSB3aWxsIG5ldmVyIGZvcmdldCB0aG9zZSB5ZWFycyB3aXRoIHlvdXIgZmFtaWx5LCBCZXYgYW5kIERlbCBIYXJ0ZSAoIG15IHBhcmVudHMpIGFuZCBKYWNrIGFuZCBOb2xhIExhbmUuIApDb25ub2xseSBXaWxsIFJldGlyZSBXQVNISU5HVE9OLCBBcHIuIApUaGlzIGluY2x1ZGVkIHRoZSBwaWNrcywgd2l0aCB0aGUgQ3Jvd24gQ2FzaW5vIGxvZ28gb24gdGhlbSwgd2hpY2ggd2VyZSBhbGxlZ2VkbHkgc3F1ZWV6ZWQgZG93biBiZXNpZGUgdmFyaW91cyBwb2tlciBtYWNoaW5lIGJ1dHRvbnMgdG8ga2VlcCB0aGVtIHBsYXlpbmcuIApJdCdzIGVhc3kgdG8gZm9yZ2V0IHRoYXQgYXNwZWN0IG9mIHBva2VyLCBiZWNhdXNlIHRoZSB3aG9sZSBwb2ludCBvZiBnYW1ibGluZyBpcyB0aGF0IHN1cHBvc2VkbHkgYW55Ym9keSBjYW4gaGl0IGEgbHVja3kgc3RyZWFrIGF0IGFueSB0aW1lIGFuZCB3aW4gYmlnLiBUaGF0J3Mgd2hhdCBkcmF3cyBjcm93ZHMgb2YgdG91cmlzdHMgdG8gVmVnYXMgZXZlcnkgeWVhci4gSGVsbCwgbWF5YmUgeW91J3JlIHNlY3JldGx5IGEgZ2VuaXVzIGF0IGl0LCBsaWtlIFJhaW4gTWFuIGF0IHRoZSBibGFja2phY2sgdGFibGUuLiAKRm9yIG15IGZpcnN0IG1hcmF0aG9uIGkgZGlkIDIgeCAyMG1pbGUsIDEgeCAyMm1pbGUgYW5kIDEgeCAyMyBtaWxlLiBUbyBzdGF2ZSBvZmYgYm9yZWRvbSB5b3UgbmVlZCBib3RoIGdvb2QgcG9kY2FzdHMgKyBtdXNpYyBhbmQgc29tZXdoZXJlIHNvZnQgYW5kIGludGVyZXN0aW5nIHRvIHJ1bi4gCkFuZCB3aGVudGhleSBhcmUsLiBJdCBzaG93cyBhbGwgdGhlIHBsYXllcnMgaGFuZHMuIFRoZW4gY2xpY2sgZXhpdCBnYW1lYWdhaW4sLiAKSSBwZXJzb25hbGx5IHRoaW5rIGJ1eWluZyBhIHByZSBzYWxlIGlzIGEgZmFpcmx5IGxvdXN5IHdheSBmb3IgYSBmaXJzdCB0aW1lIGJ1eWVyIHRvIGdldCBpbnRvIHRoZSBtYXJrZXQuIApSb2JlcnQgUGF0dGluc29uIHJldHVybnMgdG8gdGhlIHNwb3RsaWdodApBc2lkZSBmcm9tIHRoZXNlIGZlYXR1cmVzLCBmcmVlIG9ubGluZSBwb2tlciBhbHNvIG9mZmVycyBkaWZmZXJlbnQgdHlwZXMgb2YgZ2FtZXMuIApUaGUgcmVhc29uIEkgZGVjaWRlZCB0aGlzIHdhcyBiZWNhdXNlIEkgbG9va2VkIGF0IEggcmV0dXJuIHBvbGljeSwgYW5kIGl0IG5vIGhhc3NsZSByZXR1cm4gd2l0aGluIDMwICA5MCBkYXlzLCBzb21ldGhpbmcgbGlrZSB0aGF0LiBJdCBhIHJlYXNvbmFibGUgdGltZSBmb3IgbWUgdG8gZGVjaWRlIGlmIHRoZSBjaGFpciBpcyBub3QgZ29pbmcgdG8gd29yay4gU2ltcGx5IHJldHVybiB0aGUgbWVyY2hhbmRpc2UuIApEdWRlLCB5b3Ugc3VtbWVkIHVwIG15IHRob3VnaHRzIHNvIG11Y2ggYmV0dGVyIHRoYW4gSSBjb3VsZC4gTXkgbW90aGVyIGhvYXJkaW5nIGhhYml0cyBhcmUgYSBIVUdFIGFyZWEgb2YgY29udGVudGlvbiBmb3IgbXkgd2hvbGUgZmFtaWx5LCBhbmQgbm8gb25lIGlzIGV2ZXIgYWxsb3dlZCB0byBzYXkgYW55dGhpbmcgZm9yIGZlYXIgb2YgdXBzZXR0aW5nIGhlci4gQW5kIG9mIGNvdXJzZSwgaWYgd2UgdXBzZXQgaGVyLCBzaGVsbCBvbmx5IGdldCB3b3JzZS4gSSBoYXRlIHRoYXQgbXkgZGFkIGhhcyBqdXN0IGdpdmVuIHVwIGZpZ2h0aW5nIGl0LCBidXQgaGUgc28gb3ZlciBpdCBhdCB0aGlzIHBvaW50IGl0IG5vdCB3b3J0aCBmaWdodGluZyBmb3IgaGltLiBIZSBqdXN0IGtlZXBzIGhpcyBwZXJzb25hbCBhcmVhcyBjbGVhbiBhbmQgbGV0IG15IG1vbSBoYXZlIHJ1biBvZiA5MCUgb2YgdGhlIGhvdXNlLiBJdCBnZXR0aW5nIHRvIHRoZSBwb2ludCBJIGhhdGUgZ29pbmcgaG9tZSB0byB2aXNpdC4KT3ZlciB0aGUgbmV4dCBtaW51dGUsIGhlIHRha2VzIHNldmVyYWwgZ2xhbmNlcyBhdCBoZXIgYm9keSwgdGhlbiBzdGFydHMgdG8gaW5jaCBjbG9zZXIuIApZb3Ugd2FudCBhIGNlcnRhaW4gYW1vdW50IG9mIHRheGFibGUgY2FwaXRhbCBnYWlucyB0byBmaWxsIHlvdXIgeWVhcmx5IHRheCBhbGxvd2FuY2Ugb24gdXAgdG8gODAxIG9uIGNhcGl0YWwgZ2FpbnMuIFRoaXMgYmFzaWNhbGx5IGdpdmVzIHlvdSBhbiBleHRyYSBwcm9maXQgKGZyb20gdGF4ZXMgeW91IGRvbiBoYXZlIHRvIHBheSkgb2YgdXAgdG8gYXJvdW5kIDIwMCBwZXIgeWVhci4KSG91c2luZyBpcyBleHBlbnNpdmUgaW4gdGhlIGNpdHkgYW5kIHRyYWZmaWMgaXMgcmVhbGx5IGJhZC4gT3VyIHB1YmxpYyB0cmFuc2l0IHN5c3RlbSBpc24ndCBncmVhdCBzbyBlaXRoZXIgeW91IHN1Y2sgaXQgdXAgYW5kIGJ5IGFuIGFwYXJ0bWVudCBkb3dudG93biBvciB5b3Ugc3BlbmQgYWJvdXQgYW4gaG91ciBjb21tdXRpbmcgZWFjaCB3YXkuIElmIHlvdSdyZSBhYmxlIHRvIHdvcmsgZnJvbSBob21lIHRoZW4geW91J3JlIHNldCEKVGhlIHdob2xlIHR1cmJpbmUgc2lkZSBhbmQgaGVhdCBleGNoYW5nZXJzIGFuZCBjYW5hbHMgd2hpY2ggdXN1YWxseSBoYXZlIHRvIGZlZWQgb3V0IHRvIGFuIG9jZWFuIG9yIGxha2UgY291bGQgc3RpbGwgYWxsIGJlIHJldXNlZC4KVGhlcmUgaXMgYSBwYXJ0IG9mIG5ldXJvbGluZ3Vpc3RpY3MgdGhhdCBpcyByZWZlcnJlZCB0byBhcyAid29yZCBjYXRhbG9ncyIuIEluIHRoaXMsIGl0IGlzIGJlbGlldmVkIHRoYXQgb25lIG11c3QgZGVzY3JpYmUgYW4gaXRlbSBvciBtdWx0aXBsZSBpdGVtcyBpbiB0aHJlZSB2YXJpb3VzIG1hbm5lcnMuIFRoZSBmaXJzdCBpcyBpbiBhIHZpc3VhbCBtYW5uZXIuIFRoaXMgaW5jbHVkZXMgdGhlICJwaWN0dXJlcyIgdGhhdCB0aGUgbWluZCBhY3R1YWxseSBzZWVzIGluIHlvdXIgUHJvZmVzc2lvbmFsIENsYXkgUG9rZXIgQ2hpcHMgbWFya2V0IGVuZGVhdm9yLgpTaW5jZSB0aGUgZmlsbSdzIGJyb2FkY2FzdCwgb3RoZXIgY29ybmVycyBvZiB0aGUgbXVzaWMgY29tbXVuaXR5IGhhdmUgcmVtb3ZlZCBKYWNrc29uIGZyb20gdGhlaXIgcm90YXRpb24uIFRocmVlIG1ham9yIE1vbnRyZWFsIHJhZGlvIHN0YXRpb25zIHNhaWQgdGhleSdkIHN0b3AgcGxheWluZyBoaXMgbXVzaWMgYWZ0ZXIgY29uc2lkZXJpbmcgbGlzdGVuZXIgZmVlZGJhY2ssIHdoaWxlIFRvcm9udG8gbXVzaWMgc3RvcmUgVGlueSBSZWNvcmQgU2hvcCBhbm5vdW5jZWQgb24gc29jaWFsIG1lZGlhIHRoZXkgd291bGQgbm8gbG9uZ2VyIHN0b2NrIGhpcyByZWNvcmRzLgozMCBlYXJ0aHF1YWtlIGhhcyBiZWVuIHJldmlzZWQgdG8gNy4xIGZyb20gdGhlIGVhcmxpZXIgbWFnbml0dWRlIDcuMC4gQWxhc2thIEVhcnRocXVha2UgQ2VudGVyIG9mZmljaWFscyBzYXkgaW4gYSBuZXdzIHJlbGVhc2UgdGhhdCB0aGUgY2hhbmdlIGNvbWVzIGFmdGVyIHF1YWtlIGRhdGEgd2FzIHJldmlld2VkIGJ5IG11bHRpcGxlIGFnZW5jaWVzIGFuZCBhY2FkZW1pYyBncm91cHMuIEdlb2xvZ2ljYWwgU3VydmV5IHNwb2tlc21hbiBQYXVsIExhdXN0c2VuIFtUaGlzIHdlZWsncyBwYXNzYWdlc1NBTEVNLCBPcmUuIChBUCkgICBPcmVnb24gZWxlY3Rpb25zIGRpcmVjdG9yIGFuZCBhIHBvbGl0aWNhbCBhY3Rpb24gY29tbWl0dGVlIHRoYXQgZGlzZW5mcmFuY2hpc2VkIG5lYXJseSAxMDAgdm90ZXJzIGJ5IHR1cm5pbmcgdGhlaXIgYmFsbG90cyBpbiBsYXRlIGhhdmUgY29tZSB0byBhbiBhZ3JlZW1lbnQgaW4gd2hpY2ggbW9zdCBvZiBpdHMgZmluZSB3aWxsIGJlIHN1c3BlbmRlZCBhbmQgdGhlIGdyb3VwIHdpbGwgZGV0YWlsIGl0cyBwcm9jZWR1cmVzLCBvZmZpY2lhbHMgc2FpZCBGcmlkYXkuIApMZXVyIGZvbmN0aW9ubmVtZW50IGV0IGxldXIgY29udGVudGlldXggZW1wcnVudGVudCAgbGEgZm9pcyBhdSBkcm9pdCBwdWJsaWMgZXQgYXUgZHJvaXQgcHJpdi4gCkluc3RlYWQgb2YgYW4gU05FUywgaXQgbWF5IGJlIGEgTmludGVuZG8gU3dpdGNoLCBhbmQgaW5zdGVhZCBvZiBhIGJlZ2lubmVyIHRlbGVzY29wZSwgaXQgbWF5IGJlIGEgRFNMUiBhbmQgYSB0cmlwb2QgYmVjYXVzZSB0aGF0J3MgdGhlIGhvYmJ5IEkgZ290IGludG8uIAooUlNTIEZlZWQpIEplcnJ5IFRhcmthbmlhbjogS2VudHVja3kgdGhlIGNsYXNzIG9mIHRoZSBOQ0FBIFRvdXJuYW1lbnQgKFBvc3RlZCA2IHllYXJzLCAxMSBtb250aHMgYWdvKSBKZXJyeSBUYXJrYW5pYW46IFRoZSBvbmx5IHRvdXJuZXkgY2VydGFpbnR5OiBBbnl0aGluZyBjYW4gaGFwcGVuIChQb3N0ZWQgNiB5ZWFycywgMTIgbW9udGhzIGFnbykgSmVycnkgVGFya2FuaWFuOiBNaWtlIE1vc2VyIGltcHJlc3NlcyB5ZXQgYWdhaW4gb24gYSBkYXkgdG8gcmVtZW1iZXIgZm9ybWVyIFJlYmVsIGdyZWF0cyAoUG9zdGVkIDcgeWVhcnMgYWdvKS4gClRoZSBtYXRlcmlhbCB1c2VkIGluIHRoZXNlIGNoaXBzIGlzIHRoZSBzYW1lIHlvdSB3b3VsZCBmaW5kIGluIG1hbnkgb2YgdGhlIG1vc3QgZmFtb3VzIGNhc2lub3MgdGhyb3VnaG91dCB0aGUgd29ybGQuLiAKQXMgTW9sbHkgd2Fsa3MgdG93YXJkIHRoZSBlbGV2YXRvciwgc2hlIHRha2VzIGEgcGVlayBhdCBTYW0gcGFya2luZyBzcGFjZS4gIk9oIGdvb2QuIApEbyBub3QgbGluayB0by9sZWFkIHBlb3BsZSB0b3dhcmRzIHRvcnJlbnRzLCBwcm94aWVzLCBvciB1bm9mZmljaWFsIHN0cmVhbXMvZG93bmxvYWRzLgpVUERBVEU6IFRoaXMgaXMgbXkgbmV3IGZhdm9yaXRlIGNpdHkuIEV2ZXJ5b25lIGhlcmUgaXMgc28gbmljZSBhbmQgaGVscGZ1bCEhIENoZWVzZSBjdXJkcyBhcmUgbXkgbmV3IGZhdm9yaXRlIGZvb2QgKGZyaWVkIG9uZXMgZXNwZWNpYWxseSwgdGhvdWdoIEkgaGF2ZSB5ZXQgdG8gdHJ5IGZyZXNoLCBub3QgZnJpZWQgY3VyZHMpLiAKSSBnaXZlIHRoZW0gcHJvamVjdHMgdGhhdCBhcmUgdG9vIGJpZyBmb3IgdGhlbSwgbGV0IHRoZW0gZmFpbCwgYW5kIGhlbHAgdGhlbSB0aHJvdWdoIGl0LiBJIGdpdmUgdGhlbSBhbHNvIHNtYWxsIGVhc3kgdG8gY2hldyBvbiBwcm9qZWN0cy4gCiJPdXRzaWRlIHRheCwgd2Uga25vdyB0aGF0IGNsdWJzIGhhdmUgYSBzb2NpYWwgaW1wYWN0IG9mIGFib3V0ICQ4NTAgbWlsbGlvbiBwZXIgYW5udW0gb2Ygd2hhdCB0aGV5IHB1dCBiYWNrIGludG8gdGhlIGNvbW11bml0eS4gVGhhdCBpbmNsdWRlcyBtYWludGFpbmluZyBmb290YmFsbCBmaWVsZHMsIGFzc2lzdGluZyB2ZXRlcmFucywgcHV0dGluZyBlcXVpcG1lbnQgdG8gc3VyZiBsaWZlc2F2ZXJzLiBCb3Mgc2FpZCBjbHVicycgbWVtYmVyc2hpcCByZXF1aXJlbWVudCBwdXQgdGhlbSBpbiBhIHVuaXF1ZSBwb3NpdGlvbiB0byBtb25pdG9yIGhvdyBtdWNoIHBlb3BsZSB3ZXJlIHNwZW5kaW5nIG9uIHBva2VyIG1hY2hpbmVzIGFuZCBpZGVudGlmeSBwb3RlbnRpYWwgcHJvYmxlbSBnYW1ibGVycy4uIApNeSBncmVhdCBncmFuZG1vdGhlciB3YXMgYXJvdW5kIHRoaXMgYWdlIHRvbyB3aGVuIHNoZSBkaWVkIGluIHRoZSA5MHMuIApPciBpZiBub3QsIHlvdSBhcmUgYWJsZSB0byBzYWZlbHkgbWFrZSBpdCB0byBzaG9yZS4gWW91IG11c3QgZmluZCB0aGF0IGJyYW5jaCwgc29tZXRoaW5nIHRoYXQgeW91IGNhbiBob2xkIG9udG8sIGEgZ29hbCB5b3UgbWlnaHQgc2V0IGZvciB5b3Vyc2VsZiwgbWF5YmUgYSBtZW1vcnkgdGhhdCBicmluZ3MgeW91IHB1cnBvc2UuIApNZW1hc2FrIHBlcm1haW5hbiBzYXJhIGdyYXRpcyBtZW1hc2FrIHNwb25nZWJvYiB1bnR1ayBzaWxhaGthbiBrb250cm9sIHNlbXVhIGhpZGFuZ2FuIGRpIGthbWkgc2FyYSBzcG9uZ2Vib2Igc2VkZXJoYW5hIGtlbGFzIHBlcm1haW5hbm9ubGluZSBrYXRlZ29yaSBnYW1lcyBtZWxhaGFwIGtlbGFzIGNvb2tpbmcgc2VuZGlyaSBkYXJpIGthbWkgbWVuaWttYXRpIGtlcmVuIG1lbWFzYWsgcmlzb3R0byBrdWUgc2FyYSBtZW1hc2FrIHBlcm1haW5hbiB0ZXJiYXJ1IHNwb25nZWJvYiBzYXJhIHNwb25nZWJvYiBtZW1hc2FrIGRhbGFtIGZvciBnYW1lcyBzYXJhIGdhbWVzIG1lbWFzYWsgamlrYSBwZXJtYWluYW4gcGVybWFpbmFuIGtlcmVuIG1lbWFzYWsga2VsYXMgbWVueWVkaWFrYW4gZm9yIGtvbGVrc2kgc2VtdWEgcmlzb3R0by4KVyBuaWNodCBkYXMgdCBNZWVyLCBkYXMgZGllIEluc2VsbiB1bWdpYnQsIG1hbiBrIHNpY2ggZmFzdCBpbSBTY2h3YXJ6d2FsZCB3LiAKUmFudCBvdmVyLiAyIHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvSSBhbSBsdWNreSB0byBnZXQgYSByZXNwYXduLCBtdWNoIGxlc3MgYSByZXZpdmUgd2l0aCBtb3N0IG9mIHRoZSByYW5kb21zIEkgd2luZCB1cCB3aXRoIG9uIFBTNC4gCkFueW9uZSB3aG8gaXMgZmFtaWxpYXIgd2l0aCBTb3V0aGVhc3QgRmxvcmlkYSBrbm93cyB0aGUgc3RvcmllcyBvZiByYW1wYW50IGFidXNlIG9mIHJlaGFiaWxpdGF0aW9uIGZhY2lsaXRpZXMuIEkgaGFkIGxvZnR5IGFzcGlyYXRpb25zLiAKSSBkaXNjb3ZlcmVkIEhvbGRlbSBNYW5hZ2VyIGFuZCByZWFsaXplZCB0aGF0IEkgd2FzIGp1c3QgY2xpY2tpbmcgYnV0dG9ucyBhaW1sZXNzbHkuIEJ5IDIwMTAgSSB3YXMgbWFraW5nIHNvbWUgcmVhc29uYWJsZSBtb25leSBvbmxpbmUuIApNb3N0IGltcG9ydGFudGx5LCBSZWFnYW4gd29yayB3aXRoIERlbW9jcmF0aWMgSG91c2UgbGVhZGVyIFRpcCBPIHRvIGltcGxlbWVudCBoaXN0b3JpYyB0YXgsIFNvY2lhbCBTZWN1cml0eSBhbmQgaW1taWdyYXRpb24gcmVmb3JtcyBhbmQgQ2xpbnRvbiBjb2xsYWJvcmF0aW9uIHdpdGggUmVwdWJsaWNhbiBIb3VzZSBsZWFkZXIgTmV3dCBHaW5ncmljaCB0byByZWR1Y2UgZ292ZXJubWVudCBzcGVuZGluZywgbG93ZXIgdGF4ZXMgb24gaW52ZXN0bWVudCwgaW1wbGVtZW50IGRlcmVndWxhdGlvbiBhbmQgcmVmb3JtIHdlbGZhcmUgZnVlbGVkIHRoZSBncmVhdGVzdCBlY29ub21pYyBib29tIGluIHdvcmxkIGhpc3RvcnksIGZyb20gMTk4MiB0byAyMDA3LiAKUmVhbGx5IHRoZXNlIChDYW5hZGlhbikgY29tcGFuaWVzIHRoYXQgYXJlIGdvaW5nIHRvIGJlIHRoZSBjZW50cmUgb2YgdGhlIGVjb25vbXksIHNhaWQgQmVuamFtaW4gQmVyZ2VuLCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgdGhlIENvdW5jaWwgZm9yIENhbmFkaWFuIElubm92YXRvcnMgKENDSSkuIFdlIGRvbiBoYXZlIGJpZywgc3VjY2Vzc2Z1bCB0ZWNoIGNvbXBhbmllcywgd2UgZ29pbmcgdG8gZmluZCBpdCBoYXJkIHRvIHBheSBmb3IgdGhlIHNvY2lhbCBwcm9ncmFtcyB0aGF0IHdlIGFzIENhbmFkaWFucyBjYXJlIGFib3V0LiAKQ09ERSBoYXMgaXRzIHByb3MgYW5kIGl0cyBjb25zIChsaWtlIGV2ZXJ5IG90aGVyIHVuaXZlcnNpdHkgSSBldmVyIGJlZW4gdG8pIGFuZCwgZ3JhbnRlZCwgbm90IGFsbCBzdHVkZW50cyB3b3VsZCB0aHJpdmUgYXQgc3VjaCBlbnZpcm9ubWVudCwgYXMgaXQgZG9lcyByZXF1aXJlIGEgbG90IG9mIGRpc2NpcGxpbmUgYW5kIGF1dG9kaWRhY3RpY2lzbS4gCkhleSBzYXkgd2hhdCB5b3Ugd2FudCBidXQgU3RhbGxvbmUgaGFzIHRoZSBzYWRkZXN0IHN0b3J5IGFib3V0IGhvdyBoZSBzb2xkIGhpcyBkb2cgZm9yIGZvb2QgdG8gZWF0IHdoaWxlIHdyaXRpbmcgUm9ja3kuIEFmdGVyIGhlIGZpbmFsbHkgZ290IHRoZSBzdHVkaW8gdG8gYnV5IGl0IChhIHN0b3J5IGluIGl0c2VsZiwgdGhleSBkaWRuJ3Qgd2FudCB0byBzdGFyIGhpbSBhbmQgaGUgcmVmdXNlZCB0byBzZWxsIHRoZSBzY3JpcHQgdW5sZXNzIGhlIHN0YXJyZWQgaW4gaXQpIGhlIHdlbnQgYmFjayB0byB0aGUgZ3V5IHdobyBoZSBzb2xkIGhpcyBkb2cgdG8sIGFuZCByZSBib3VnaHQgaGltIGZvciAkMTAsMDAwLgpBbnlvbmUgd2hvIHZvdGVzIGZvciBKb2huc29uIG9yIFN0ZWluIGNsYWltaW5nICJjb25zY2llbmNlIiBjYW5ub3QgcG9zc2libHkgc2F5IHRoZWlyIGNvbnNjaWVuY2UgaXMgY2xlYXIgaWYgdGhlIFN1cHJlbWUgQ291cnQgaXMgZmlsbGVkIHdpdGggdWx0cmFjb25zZXJ2YXRpdmVzIGJlY2F1c2UgeW91IHN0b29kIGJ5IGFuZCBsZXQgaXQgaGFwcGVuLCBwYXQgeW91ciBzZWxmIHJpZ2h0ZW91cyBzZWxmIG9uIHRoZSBiYWNrLCBsb29rIGRvd24gb24gdGhvc2Ugd2hvIGNvdWxkIGhhdmUgc3RvcHBlZCBpdCwgYW5kIGRlbnkgcmVzcG9uc2liaWxpdHkgc28geW91IGNhbiB0cmFzaCB0YWxrIHdob2V2ZXIgZ2V0cyBlbGVjdGVkLiAKRmFsbHMgZXIgdW5kIHNlaW4gVmVyZWluIHNpY2ggbmljaHQgYXVmIGVpbmVuIG5ldWVuIEtvbnRyYWt0IHZlcnN0IGQgc2ljaCBDYW1wYmVsbCBhdWZncnVuZCBzZWluZXMgQWx0ZXJzIGVpbmVuIFZlcmVpbiBzdWNoZW4sIG1pdCBkZW0gZXIgbm9jaCBlaW5tYWwgZGllIENoYW5jZSBhdWYgZGVuIEdld2lubiBkZXMgU3RhbmxleSBDdXBzIGJlc2l0enQuIERhcyB6dW1pbmRlc3QgaXN0IGRpZSBnIE1laW51bmcgaW4gSW5zaWRlcmtyZWlzZW4uLiAKRW5kZWQgdXAgZWF0aW5nIGEgbG90IG9mIGRhbWFnZSBsYXRlciBvbiBhbmQgYWN0dWFsbHkgY3V0IHByZXR0eSBjbG9zZSB1bnRpbCBJIFcrbTEgdGhlIGxpY2ggYW5kIGNydXNoZWQgaGltLi4gCkEgbG90IG9mIHlvdW5nZXIgcGVvcGxlIGhhdmUgbmV2ZXIgbGVmdCBBcm1lbmlhIGFuZCB0aGUgb25seSB0aGluZyB0aGV5IGhhdmUgdG8gZ28gb2ZmIGlzIGVpdGhlciBkZWh1bWFuaXNpbmcgcHJvcGFnYW5kYSBhYm91dCB0aGUgd2FyLiBUaGV5IHByb2JhYmx5IGEgbG90IG1vcmUgaW5jbGluZWQgdG8gYmVsaWV2ZSBubyBBemVyaXMgY2FuIGJlIHNlZW4gb24gYSBodW1hbiBsZXZlbC4uIApUaGUgcHJvYmxlbSBoYXMgYmVlbiBBdCBhc2tpbmcgZm9yIGEgbWluaW11bSBwcmljZSBwYWlkIGVhY2ggbW9udGgsIHdoaWNoIGlzIGRvdWJsZSB0aGUgSEJPIHN1YnNjcmliZXIgYmFzZSBEaXNoIGhhcy4gU28gZWl0aGVyIERpc2ggYXNrcyBmb3IgJDMwL21vIGZyb20gY3VzdG9tZXJzIHRoYXQgd2FudCBpdCBvciBlYXRzICQxNS9tbyBwZXIgY3VzdG9tZXIgdGhhdCBzdWJzY3JpYmVzLgpZb3UgbWF5IGV2ZW4gZ2V0IGhpcyBhdXRvZ3JhcGgsIHRvbywgaWYgeW91IGFyZSB2ZXJ5IGx1Y2t5LiBCdXQgd2hhdGV2ZXIgeW91IGRvLCBkb24ndCBzaXQgYXQgYSBQb2tlciB0YWJsZSB3aXRoIGhpbSwgYXMgaGUnbGwgY2xlYW4geW91IG91dCwgbm90aGluZyBpcyBtb3JlIGNlcnRhaW4uIApJZiBpdCBjYW4sIGhlIGdvdCBhIHNsaWdodCBjaGFuY2Ugb2YgdGhhbm9zIHVuZGVyZXN0aW1hdGluZyBoaW0gYW5kIGdldHRpbmcgaGlzIGdhdW50bGV0IGFybSBzbGljZWQsIGJ1dCBpbiBtb3N0IGNhc2UgaGUgc3RvbXAuLiAKQ2xhc3Mgd2FyZmFyZSBpcyBidWxsc2hpdC4gCkFkb3JpbmcgZmF0aGVyIHRvIExpc2EgV2lsc29uIChCZXJuaWUgU2NodXR0ZW4pLCBMaXNhIFdhbGtlciAodGhlIGxhdGUgU3RldmUpLCB0aGUgbGF0ZSBNaWNoZWxsZSBDbGVsbGFuZCAoQmlsbCkgYW5kIFNhcmEgTWFsb25leSAoRGFuKS4gCkwnQW5nbGV0ZXJyZSwgdGVycmUgZCdhc2lsZSBkdSBtYXNzYWdlICBsJ2NvbGUuClRoYXQgaGUncyBhbGxpZWQgd2l0aCBhbm90aGVyIGFkdWx0IHRvIGVzc2VudGlhbGx5IHRlcnJvcml6ZSBvbmUgb2YgaGlzIG93biBvZmZzcHJpbmcuIApXYXRlciByZWNyZWF0aW9uIGlzLCB3aXRob3V0IHF1ZXN0aW9uLCBvbmUgb2YgdGhlIHRvcCBkcmF3cyB0byBzb3V0aGVybiBQb3J0dWdhbC4gV2l0aCB0b3AgcmF0ZWQgdG91ciBvcGVyYXRvcnMgbGlrZSBUcmlnYW5hIEJvYXQgVHJpcHMsIENhcGUgQ3J1aXNlciBhbmQgRG9scGhpbnMgRHJpdmVuIGFuZCBlcXVpcG1lbnQgcmVudGFsIGJ1c2luZXNzIGxpa2UgQW1hZG8gU3VyZmNhbXAgYW5kIEV4dHJlbWUgQWxnYXJ2ZSwgdGhlcmUgaXMgbm8gc2hvcnRhZ2Ugb2YgdGhpbmdzIHRvIGRvLiAKT25jZSB0aGUgcGxhbiBpcyBmdWxseSBpbXBsZW1lbnRlZCwgdGhlIG1heGltdW0gYW5udWFsIGJlbmVmaXRzIHdpbGwgaW5jcmVhc2UgYnkgYWJvdXQgb25lIHRoaXJkIHRvICQxNyw0NzggZnJvbSAkMTMsMTEwLi4gCkJsYWNramFjayB0b3VybmFtZW50cyBmb3IgdGhlIG1vc3QgY29tcGV0aXRpdmUgZ2FtYmxlcnMgZXhpc3Qgb24gYWxsIHNoaXBzLCB3aGlsZSBUZXhhcyBIb2xkICdFbSBpcyBvZmZlcmVkIG9uIG1vc3QuIApUaGUgbW9zdCBkaWZmaWN1bHQgcHJvYmxlbSwgaG93ZXZlciwgd2l0aCB0aGUgZmljdGlvbiBvZiBtYXNjdWxpbml0eSBhcyBhbHdheXMgc3RyYWlnaHQgYW5kIGFsd2F5cyBnb29kIGNvbWVzIGFsb25nIHdpdGggd2FyIGluIHRoZSBmaXJzdCBwbGFjZS4gQ2FuIHdlIG1ha2Ugb2YgdGhlIGZhY3QgdGhhdCBpdCB3YXMgbWFubHkgU2VyYiBtZW4sIHN0cmFpZ2h0IGluIHRoZSBleWVzIG9mIEdvZCBhbmQgTmF0aW9uLCBzeXN0ZW1hdGljYWxseSBraWxsZWQgNjAwMCBNdXNsaW0gbWVuPyB0aGUgcmVhbCBjYXVzZSBvZiBnZW5vY2lkZSBpbiBTcmVicmVuaWNhIGh5cGVyIGFncmVzc2l2ZSBtYXNjdWxpbml0eSBlbGltaW5hdGluZyBhIHBlcmNlaXZlZCB0aHJlYXQgdG8gaXRzZWxmPy4gCkJ1dCBJIGhvbmVzdGx5IGJlbGlldmUgd2Ugc2hvdWxkIGxlYXZlIFNPTUUgT0YgVEhFTSB1cC4gCkhlIHNhaWQgU2luZ2Fwb3JlIHdhcyBtdWNoIG1vcmUgZGVwZW5kZW50IG9uIG11bHRpbmF0aW9uYWwgY29tcGFuaWVzIGluIDE5OTguIGJlY2F1c2Ugd2UgaGF2ZSBvdXIgb3duIFNNRXMgcHJvdmlkaW5nIGdyb3d0aCBhbmQgZHJpdmVycyB0byB0aGUgZWNvbm9teSwgdGhpcyBnaXZlcyB1cyBhIGNlcnRhaW4gZGVncmVlIG9mIGJ1ZmZlciBiZWNhdXNlIHRoZXNlIGd1eXMgYXJlIGFjdHVhbGx5IHF1aXRlIGRpdmVyc2lmaWVkLCBoZSBhZGRlZC4KSW4gYSBKdW5lIDE5ODUgZXNzYXkgZm9yIEVzcXVpcmUncyAiU291bCBvZiBBbWVyaWNhIGlzc3VlLCIgVG9tIFdvbGZlIHNwZWxsZWQgb3V0IGp1c3Qgd2hpY2ggcmVzaWRlbnRpYWwgYnVpbGRpbmdzIGluIE1hbmhhdHRhbiB3ZXJlIGNvbnNpZGVyZWQgImdvb2QiIGJ5IHRoZSBzb3J0IG9mIHBlb3BsZSB3aG9zZSBvcGluaW9ucyBtYXR0ZXJlZC4gCkRpZmZlcmVudCByb3V0ZSBtYXliZT8gVGhlIGZhY3QgaXMgbm9uIG9mIHRoYXQgbWF0dGVycy4gVGhlIHRydWNrIGlzIHRoZSB0cnVjayBhbmQgeW91IGNhbiBjaGFuZ2UgdGhhdC4gSWYgeW91IHRha2UgYW55dGhpbmcgYXdheSBmcm9tIGFsbCBvZiB0aGlzLCBpdCBzaG91bGRuIGJlIHRoYXQgcGVvcGxlIGRvd252b3RlZCB5b3UuIApJdCdzIG1lYW5pbmdsZXNzLiAKVGhlIGNvdXBsZSBoZWxkIHRoZWlyIE1hcmNoIGVuZ2FnZW1lbnQgcGFydHkgaW4gV2VsbGluZ3Rvbiwgd2hlcmUgdGhleSBib3RoIGxpdmUgYmVjYXVzZSBvZiBCYXJyZXR0J3MgSHVycmljYW5lcycgY29tbWl0bWVudHMsIGF0IHRoZSBSb3lhbCBQb3J0IE5pY2hvbHNvbiBZYWNodCBDbHViLCBPcmllbnRhbCBCYXkuIFRoZSBiYXNoIHdhcyBsYXZpc2ggYW5kIHN1cHBsaWVycyBmcm9tIEF1Y2tsYW5kIHdlcmUgbmVlZGVkIHRvIG1hdGNoIHRoZSBjb3VwbGUncyBuZWVkcy4KSWYgeW91IGludGVyZXN0ZWQgaW4gb3duaW5nIG9uZSwgdmlzaXQgdGhlIGJsb2cgYm9va3N0b3JlLgooQ3Jvb2sgaGFzIHNpbmNlIGxlZnQgdGhlIGNodXJjaC4pIEluIExhcyBWZWdhcywgQ3Jvb2sgZmlndXJlZCBoZSBtaWdodCBjYXRjaCBzb21lIGd1eXMgaGUga25ldyBmcm9tIHNjaG9vbCwgYW5kIHNvIGhlIGJlY2FtZSBhbiAxOCB5ZWFyIG9sZCBVTkxWIGNvIGVkIHdpdGggYnJvd24gZXllcyBhbmQgImF2ZXJhZ2Ugc2l6ZWQgYnJlYXN0cyIgbG9va2luZyBmb3IgIkp1c3Qgc2FmZSAodGhhdCdzIHRoZSBrZXkpLCBmdW4gc2V4LiIgSGUgZW5kZWQgaGlzIGFkIHdpdGggYSBwcm9taXNlOiAiTnVkZSBwaWNzIGdldCBudWRlIHBpY3MgaW4gcmV0dXJuLiIuIApUaGF0IGlzIGEgc2lnbiB0aGF0IHlvdSBhcmUgc3RpbGwgYWxpdmUsIHN0aWxsIGh1bWFuLCBzdGlsbCBvbiB0aGUgcmlnaHQgc2lkZS4gCldoZW4gSSBmb3VuZCBhIGRvY3RvciB3aG8gd2FzIGZpbmFsbHkgYWJsZSB0byBnaXZlIG1lIGEgZGlhZ25vc2lzIHRoZSBvbmx5IHRoaW5nIG15IGRhZCBjb3VsZCBzYXkgdG8gbWUgd2FzICJnb29kLiBIb3BlZnVsbHkgbm93IHRoZSB3ZWlnaHQgd2lsbCBjb21lIG9mZi4iIEkgd2FzIGZpbmFsbHkgcGFpbiBmcmVlIGFmdGVyIHllYXJzIG9mZiBzdWZmZXJpbmcgYW5kIGFsbCBteSBkYWQgY2FyZWQgYWJvdXQgd2FzIGhvdyBtdWNoIEkgd2VpZ2hlZCAoc2l6ZSAxMkFVUyBieSB0aGUgd2F5LiBUaGF0J3MgYSBwcmV0dHkgYXZlcmFnZSBzaXplKS4gCllvdSBoYWQgYSBidWRnZXQgYW5kIHdoYXQgeW91IHBlcmNlaXZlZCBhcyB0aGUgY29zdCBvZiBkaW5uZXIgd2FzIGFib3ZlIHRoYXQuIFJhdGhlciB0aGFuIGNhbGxpbmcgdGhlIHByaWNlIG9mIHNvbWV0aGluZyBzaGUgd2FzIHJlYWxseSBsb29raW5nIGZvcndhcmQgdG8gInJpZGljdWxvdXMiIChsZXQgYmUgcmVhbCAgIHRoZSBjb3N0IG9mIGRpbm5lciBhdCBldmVyeSBuaWNlIHJlc3RhdXJhbnQgaXMgcmlkaWN1bG91cyBvbiBWYWxlbnRpbmUgRGF5KSwgeW91IGNvdWxkIGhhdmUgc2FpZCBzb21ldGhpbmcgYWxvbmcgdGhlIGxpbmVzIG9mLCAiQmFiZSwgeW91IGxvb2sgc21va2luIGFuZCB5b3UgYmVlbiBzbyBnb29kIHRvIG1lLiBJIHJlYWxseSB3YW50IHRvIHNwb2lsIHlvdSB0b25pZ2h0LCBidXQgJDMwMCBpcyBvdXQgb2YgbXkgYnVkZ2V0LiIgQWxsIG9mIHRoZSBtZW4gaGVyZSB0ZWxsaW5nIHlvdSB0aGF0IGNvc3Qgc2hvdWxkIGJlIG5vIGlzc3VlIGlmIHlvdSByZWFsbHkgbG92ZSBoZXIgYXJlIGZ1bGwgb2YgY3JhcC4gCkVya2VubnQgbWFuIG5hY2ggZWluaWdlbiBudGlnZW4gRHVyY2hsdWZlbiBkZW4ga29tcGxleGVuIHVuZCB2aWVsc2NoaWNodGVuIFBlcmZla3Rpb25pc211cyB2b24gIkdhbWUgT24iLCBnaWJ0IGVzIGFic29sdXQKQW5lY2RvdGFsIHJlcG9ydHMgYW5kIHJlY2VudCBzdHVkaWVzIHN1Z2dlc3QgdGhhdCBhIHNpbmdsZSBhZG1pbmlzdHJhdGlvbiBvZiBwc2lsb2N5YmluIGNhbiBlbmhhbmNlIHN1Y2ggcHJvY2Vzc2VzIGFuZCBjb3VsZCB0aGVyZWZvcmUgYmUgYSBwb3RlbnRpYWwgdHJlYXRtZW50LiBIb3dldmVyLCBpdCBoYXMgeWV0IHRvIGJlIGFzc2Vzc2VkIHdoZXRoZXIgZWZmZWN0cyBvdXRsYXN0IGFjdXRlIGludG94aWNhdGlvbi4gVGhlIHByZXNlbnQgc3R1ZHkgYWltZWQgdG8gYXNzZXNzIHRoZSBzdWIgYWN1dGUgZWZmZWN0cyBvZiBwc2lsb2N5YmluIG9uIGNyZWF0aXZlIHRoaW5raW5nLCBlbXBhdGh5LCBhbmQgd2VsbCBiZWluZy4gCiJXaGVuIEkgc2F3IGFsbCB0aGVzZSBoZWFkbGluZXMgYWJvdXQgaG93IHRlcnJpYmxlIG91ciB3b3JsZCBoYWQgYmVjb21lLCBJIHN0YXJ0ZWQgZG9pbmcgYSBsb3Qgb2YgcmVhZGluZy4gSSByZWFkIGFib3V0IHRoZSBGcmVuY2ggcmV2b2x1dGlvbiwgdGhlIEFtZXJpY2FuIFJldm9sdXRpb24sIHRoZSBDaXZpbCBXYXIsIGFuZCBJIHN0YXJ0ZWQgdG8gcmVjb2duaXplIHRoYXQgdGhpcyBpcyBhIHBhdHRlcm4gb2YgaGlzdG9yeSBhbmQgc29tZXRoaW5nIHdlIHNob3VsZCBuZXZlciB2ZW50dXJlIGludG8uIFRoZXJlIGFyZSBhbXBsZSB3YXJuaW5ncyBhZ2FpbnN0IGl0LiBFdmVyeSBzY2hvb2wgY2hpbGQgc2hvdWxkIGtub3cgdGhpcyBidXQgaXQncyBoYXJkIHRvIGdldCBwZW9wbGUgdG8gcmVhZCBhYm91dCB0aGVzZSB0aGluZ3MuIE1heWJlIHRoaXMgYWxidW0gY2FuIGhlbHAuIEJlY2F1c2UgcmlnaHQgbm93LCB3aXRoIHNvY2lhbCBtZWRpYSwgd2UgYXJlIGp1c3QgcGxheWluZyBhIHZlcnNpb24gb2Yga2lsbCB0aGUgZ3V5IHdpdGggdGhlIGJhbGwuIgpEaWQgbm90IHBhaWQgYXR0ZW50aW9uIEdvZCdzIHNlcnZhbnRzIGFsbCB0aGVzZSB5ZWFycyBhbGxvdGVkIEdvZCBmb3IgZ29zcGVsIG9mIHNhbHZhdGlvbiAgIFRoZXkgd2lsbCBHb2QncyBKdWRnZW1lbnQgb2YgZGVhdGguLiAKSGVyZSdzIGhvdyAnWCBGYWN0b3InIGF1ZGl0aW9ucyB3ZXJlIHNhbWUgYXMKVHdvIERyYWdvbnMnIERlbiBzdGFycyBhbmQgb25lIG11Y2ggbWlzc2VkIGZvcm1lciBkcmFnb24gYnV0dGVkIGhlYWRzIGluIGEgbGl2ZSBwYW5lbCBsYXN0IHdlZWsgYXQgdGhlIEdlbnRsZW1lbiBFeHBvIGluIFRvcm9udG8sIG9mZmVyaW5nIHBvaW50ZWQgYnVzaW5lc3MgYWR2aWNlIHRoYXQgd2FzIGp1c3QgYXMgZ3JpcHBpbmcgYXMgdGhlaXIgcXVpcHMgYW5kIGluc3VsdHMuLiAKQXNpZGUgZnJvbSB0aGUgcXVhbGl0eSBzZXJ2aWNlIG9mIFBva2VyIHN0YXIsIHRoZSBmaXJtIGlzIGFsc28ga25vd24gYmVjYXVzZSBvZiB0aGUgZGlmZmVyZW50IHNwZWNpYWwgZmVhdHVyZXMgdGhhdCB0aGUgZmlybSBvZmZlcnMuIE9uZSBvZiBpdHMgZmVhdHVyZXMgaXMgY2FsbGVkIHBsYXllciBpbWFnZXMgd2hpY2ggYWxsb3cgYWxsIHBsYXllcnMgdG8gc2VsZWN0IGEgcGVyc29uYWxpemVkIGltYWdlIHRvIHJlcHJlc2VudCB5b3UgaW4gdGhlIGdhbWluZyB0YWJsZS4gSW5zdGVhZCBvZiBhIHRleHQgYW5kIGFuIGluZmVybmFsIGJsaW5raW5nIGxpZ2h0IHdoZW4gcGxheWluZywgdGhpcyBpbWFnZSB3b3VsZCBiZSB0aGUgb25lIHRoYXQgdGhlIG90aGVyIHBsYXllcnMgd291bGQgc2VlLiBBbm90aGVyIG9uZSBvZiB0aGUgc3BlY2lhbCBmZWF0dXJlcyBpbiBQb2tlciBzdGFyIGlzIHRoZSBwbGF5ZXIgc3RhdGlzdGljcy4gVGhlIFBsYXllciBTdGF0aXN0aWNzIHNob3dzIHlvdXIgcGVyZm9ybWFuY2UgaW4gYWxsIG9mIHRoZSBnYW1lcyB0aGF0IHlvdSBwbGF5ZWQuIElmIGEgcGxheWVyIHdhbnRzIHRvIHJlcXVlc3QgdGhlaXIgc3RhdGlzdGljYWwgZGF0YSwgaXQgd291bGQgYmUgZGVsaXZlcmVkIGluIHRoZWlyIGUgbWFpbC4gVGhlIFBsYXllciBzdGF0aXN0aWNzIGlzIGN1c3RvbWl6ZWQgYW5kIG9ubHkgYXZhaWxhYmxlIGZvciBwcml2YXRlIHZpZXdpbmcgd2hpY2ggbWVhbnMgdGhhdCBvbmx5IHRoYXQgcGVyc29uIGNvdWxkIGhhdmUgYWNjZXNzIG9uIGl0LiBBbm90aGVyIHNwZWNpYWwgZmVhdHVyZSBvZiBQb2tlciBTdGFyIHdvdWxkIGJlIGhhbmQgaGlzdG9yaWVzIHdoaWNoIGVuYWJsZSBhIHBsYXllciB0byByZWNhbGwgYWxsIHRoZSB2YWx1ZXMgYW5kIGFjdGlvbiB0YWtlbiBmcm9tIHRoZSBwYXN0IHBsYXkuIFRodXMsIHlvdSBjb3VsZCBhY3R1YWxseSBzZWUgaWYgc29tZW9uZSBjYWxsZWQgeW91IG5hbWVzIGZyb20gdGhlIHByZXZpb3VzIGhhbmQuIE5leHQgZmVhdHVyZSBpcyB0aGUgYWJpbGl0eSBvZiBoYXZpbmcgb3Bwb25lbnQgbm90ZXMgd2hpY2ggZW5hYmxlcyBhIHBsYXllciB0byBqb3Qgbm90ZXMgYW5kIHdyaXRlIHVzZWZ1bCB0aXBzIHJlZ2FyZGluZyB0aGUgcGxheWVyIHRoYXQgdGhleSBhcmUgY29tcGV0aW5nIHdpdGguIFRoZXNlIG5vdGVzIGFyZSBzYXZlZCBpbiB5b3VyIHN5c3RlbSBhbmQgb25seSBmb3IgcHJpdmF0ZSB2aWV3aW5nLiBBc2lkZSBmcm9tIHRoZXNlIGZlYXR1cmVzLCB0cmFkaXRpb25hbCBvcHRpb25zIGluIGFuIG9ubGluZSBwb2tlciBnYW1lIHN1Y2ggYXMgdG91cm5hbWVudCBhcmUgYWxzbyBvZmZlcmVkIGluIFBva2VyIFN0YXIuIFBva2VyIHN0YXIgbWFkZSBzdXJlIHRoYXQgcGxheWVycyB3b3VsZCBiZSBhYmxlIHRvIGVuam95IGFuZCBtYXhpbWl6ZSB0aGUgYmVuZWZpdHMgb2YgdGhlIHRvdXJuYW1lbnQgaW4gUG9rZXIgc3Rhci4KRWR1Y2F0aW5nIHRoZSB0ZWFtIGFuZCBiZWluZyBhd2FyZSBvZiBvdXIgcm9sZSBhaWRzIGluIHNvbGlkaWZ5aW5nIG91ciBwbGFjZSBhdCB0aGUgdHJhaW5pbmcgdGFibGUuVGhlIG90aGVyIGhhbGYgb2YgdGhlIHBhcnQgb2YgdGhlIG1pc3Npb24gaXMgdG8gZWR1Y2F0ZSBvdGhlciBjaGlyb3ByYWN0b3JzLkVhcmx5IGluIGl0cyBleGlzdGVuY2UsIHRoZSBQRkNTIHJlYWxpemVkIHRoYXQgdGVhbSBjaGlyb3ByYWN0b3JzIGFyZSBwcml2eSB0byBhIHdlYWx0aCBvZiBrbm93bGVkZ2UgYW5kIGluZm9ybWF0aW9uIHRoYXQgcmFyZWx5IHRyaWNrbGVzIGRvd24gdG8gdGhlIHByb2Zlc3Npb24uIAo0MCBob3VycyBhdCBtaW5pbXVtIHdhZ2UgaXNuJ3QgZXZlbiAkMTI1NyBhIG1vbnRoLCB5b3Ugd291bGRuJ3QgZXZlbiBiZSBtYWtpbmcgdHdpY2UgcmVudCwgYW5kIHRoYXQncyBiZWZvcmUgdGF4ZXMuIApUaGF0IHdpbGwgY292ZXIgeW91IGZvciB3ZWFyIGFuZCB0ZWFyIGluIHRoZSB5ZWFycyB0byBjb21lLnBlb3BsZSB0aGluayB0aGV5IGNhbiByZSBzZWxsIHRvb2xzIG9yIHVudXNlZCBtYXRlcmlhbHMsIHRoZXkgY2FuLCBidXQgdGhleSBoYXZlIHRvIHJlYWxpemUgdGhhdCB0aGUgbWFya2V0IGZvciB1c2VkIGl0ZW1zIGlzbiB3aGF0IGl0IHVzZWQgdG8gYmUsIHNoZSBwb2ludHMgb3V0LiBJdCBqdXN0IGJldHRlciB0byBkb25hdGUgb3IgZGlzY2FyZCB0aGVtLCBhbmQgbW92ZSBvbi4uIApBbm90aGVyIHR5cGUgb2YgcmFua2luZyBpcyBjYWxsZWQgYSBzdHJhaWdodCB3aGVyZWluIHRoZSBjYXJkcyBpbiB0aGUgcG9rZXIgaGFuZHMgY29udGFpbiA1IGNvbnNlY3V0aXZlIHZhbHVlcyB3aGljaCBpcyByYW5rZWQgYWNjb3JkaW5nIHRvIHRoZSBydWxlIG9mIHRoZSBoaWdoZXN0IGNhcmQuIFRoZSBuZXh0IGtpbmQgb2YgcmFua2luZyBvciBjbGFzc2lmaWNhdGlvbiBvZiBwb2tlciBoYW5kcyBpcyBjYWxsZWQgZmx1c2guIApOZXZlciBsZXQgYW55IG9uZSBvdmVycmlkZSB5b3VyIG93biBjaG9pY2VzLiBUaGlzIGxpZmUgaXMgeW91cnMgdG8gbGl2ZS4gSWYgeW91IHN0YXJ0IGxldHRpbmcgb3RoZXIgbWFrZSB0aGVzZSBkZWNpc2lvbnMgZm9yIHlvdSwgeW91IG1heSBlbmQgdXAgc3R1Y2sgaW4gYSBsaWZlIHlvdSBub3QgZ29pbmcgdG8gYmUgaGFwcHkgbGl2aW5nLi4gCkRvbiBzdG9wIGZvciBhIG1pbm9yIGZlbmRlciBiZW5kZXIgbGlrZSBpZiBzb21lYm9keSBoYXBwZW5zIHRvIHRhcCB5b3UgZnJvbSBiZWhpbmQgYXQgYSBzdG9wIGxpZ2h0Li4gCkhvdyB3YXMgdGhhdCBwb3NzaWJsZT8gQWRtaXR0ZWRseSwgTGFuZSBoYXMgYnJvYWQgc2hvdWxkZXJzIGFuZCBhIHN0b2NreSBidWlsZC4gClRCSCwgSSBjYW1lIHRvIHRoaXMgc3VicmVkZGl0IHRvIGdldCBhbiBleHBsYW5hdGlvbiBvZiB3aGF0IHRoZSBmdWNrIHRoYXQgbGFzdCBzY2VuZSBoYXMgdG8gZG8gd2l0aCB0aGUgcmVzdCBvZiB0aGUgc2hvdywgYmVjYXVzZSBvdGhlciB0aGFuIGhlciBiZWluZyBhIGxpdHRsZSBmdWNraW5nIHNvY2lvcGF0aCwgdGhlcmUgcmVhbGx5IG5vdCBtdWNoIGV2aWRlbmNlIGluIHRoZSBzaG93IHRoYXQgc2hlIGEgc2VyaWFsIGtpbGxlciB3aXRoIG11bHRpcGxlIGFjY29tcGxpY2VzLi4gCkhlIHN0ZXBwZWQgZG93biBhcyBtb2QgZHVlIHRvIGEgY29uZmxpY3Qgb2YgaW50ZXJlc3QuKSBOZXZlciBoYXMgYW55b25lIGJlZW4gYXNrZWQgdG8gcmVtb3ZlIGNvbnRlbnQgYnkgYW55b25lIGF0IEJldGhlc2RhIChldmVuIGR1cmluZyBsZWFrcyksIG5vciBoYXZlIGFueSBvZiB0aGUgRmFsbG91dCBOZXR3b3JrIG1vZGVyYXRvcnMgcmVjZWl2ZWQgYW55IHNvcnQgb2YgY29tcGVuc2F0aW9uLCBldmVyLiAKQSBodWdlIGhvbGUgaGFzIGJlZW4gbGVmdCBpbiB0aGUgTG9ja2hhcnQgRm9vdGJhbGwgQ2x1YiBieSB0aGUgZGVhdGggb2YgdGhlIGNvbW11bml0eSdzICJnbyB0byBtYW4iIGZvbGxvd2luZyBhIGNyYXNoIG9uIEZyaWRheSBuaWdodC4KU3RheSBhd2F5IGZyb20gS2lsbHosIGFzIGl0IGhvdCBnYXJiYWdlLiAKSSB3YXNudCB0b28gc3VyZSB0aGF0IHNoZSB3YXMgcmlnaHQgc28gYXMgaXQgd2FzIGluIHRoZSBtaWRkbGUgb2Ygd2ludGVyIGFuZCBpIHdvdWxkbnQgY29sZCBob3NlLCBpIGtlcHQgZGFiYmluZyBpdCB3aXRoIGEgY29sZCB3ZXQgY2xvdGguCk5hb2Z1bWkgYWxzbyBzYWlkIHNldmVyYWwgdGltZXMgdGhhdCB0aG9zZSBndXlzIGFyZSBwbGFubmluZyBpdCBhbGwgdG9nZXRoZXIgYmNzIHRoZXkgd2FudCBoaW0gdG8gZGlzYXBwZWFyCldoYXQgd2UgZW5kIHVwIHdpdGggaXMgYSBwb3J0cmF5YWwgb2YgYSBkeXNmdW5jdGlvbmFsIGZhbWlseSB0aGF0J3MgbW9yZSBiZWxpZXZhYmxlLCBhbmQgZmVlbHMgbW9yZSByZWFsLCB0aGFuIDk5IHBlcmNlbnQgb2Ygb3RoZXIgZmlsbXMgZGVhbGluZyB3aXRoIHRoYXQgc3ViamVjdC4gIlRoZSBHcmFuZCIgaXNuJ3QgYXMgZnVubnkgYXMgdGhlIGJlc3QgbW9ja3VtZW50YXJpZXMgb3V0IHRoZXJlLiBUaGVyZSBhcmUgYSBmZXcgYmFkIGpva2VzOyB0aGUgdHdvIGNvbW1lbnRhdG9ycyBmb3IgdGhlIHBva2VyIHRvdXJuYW1lbnQgc2hvdyBlZmZlY3RpdmVseSB0aGF0IG5vIGZha2UgY29tbWVudGF0b3JzIGluIGEgZmlsbSB3aWxsIGV2ZXIgYXBwcm9hY2ggdGhlIGhpbGFyaXR5IG9mIEZyZWQgV2lsbGFyZCBpbiAiQmVzdCBpbiBTaG93LCIgYWx0aG91Z2ggaXQncyBuaWNlIHRoYXQgc29tZW9uZSdzIHRyeWluZy4gClE6IFdoeSBoYXZlIHlvdSBtb3ZlZCB0byBhIEZhY2Vib29rIGNvbW1lbnRpbmcgc3lzdGVtPwpUaGF0IGlzIHRoZXJlIGZhdWx0IGFuZCB5b3UgbWlnaHQgYmUgYWJsZSB0byBnZXQgdGhlbSB0byBqdXN0IGhhbmRsZSBpdCBpZiB5b3UgbWFrZSBzb21lIHR5cGUgb2YgY2xhaW0gdGhhdCB5b3UgaGFkIGEgYmV0dGVyIG9mZmVyIGRvd24gdGhlIHN0cmVldCB3aXRoIHJhdGUgYW5kIHlvdSB0b29rIHRoZWlyIG9mZmVyIGJlY2F1c2Ugb2YgY3JlZGl0L2Nhc2ggYmFjay4gSSB0aGluayB5b3UgZ2V0IHRoZSBpZGVhLi4gClRoZXJlIHdhcyBhIHBvcHVsYXIgQkJTIGdhbWUgY2FsbGVkIFJlZCBEcmFnb24gSW5uLiBJdCB3YXMgbGlrZSBhIGNhc3VhbCBtZW51IGRyaXZlbiBSUEcuIFlvdSBjb3VsZCBsZWF2ZSBtZXNzYWdlcyB0byBvdGhlciBwbGF5ZXJzLCBhbmQgeW91IHdvdWxkIGtub3cgdGhleSBoYWQgYmVlbiBhY3RpdmUgYmVjYXVzZSB0aGUgZ2FtZSBzaG93ZWQgbWVzc2FnZXMgYWJvdXQgd2hhdCB0aGV5IGRpZC4KVGhhdCBpcyBwcmV0dHkgZ29kZGFtbiBydWRlLiBJdCBwcm9iYWJseSB3b3VsZCBoYXZlIGJlZW4gd2F5IGxlc3Mgd2VpcmQgaWYgc2hlIG9mZmVyZWQgcGF5LCBldmVuIGlmIHNoZSBoYWQgc3RpbGwgc2FpZCBpdCB3aXRoIHRoYXQgZW50aXRsZWQgdG9uZSwgYnV0IFpFUk8gb2ZmZXIgb2YgcGF5PyBZIGhhdmUga25vd24gZWFjaCBvdGhlciA2IG1vbnRocy4gClRoZSBQcmVzaWRlbnQgc3VnZ2VzdGVkIG9uIFR3aXR0ZXIgb24gTW9uZGF5IHRoYXQgdGhlIG1lZXRpbmcgY291bGQgYmUgaGVsZCBhdCB0aGUgUGVhY2UgVmlsbGFnZSBpbiB0aGUgZGVtaWxpdGFyaXplZCB6b25lIGJldHdlZW4gdGhlIEtvcmVhcy4gVGhlcmUgaXMgYSB3b3JyeSBpbiBXYXNoaW5ndG9uIHRoYXQgc3VjaCBhIHZlbnVlIGNvdWxkIGJlIHNlZW4gYXMgYSBjb25jZXNzaW9uIHRvIEtpbSBnaXZlbiB0aGF0IHRoZSBQcmVzaWRlbnQgd291bGQgaGF2ZSB0byBmbHkgaGFsZndheSBhY3Jvc3MgdGhlIHdvcmxkIHRvIG1ha2UgdGhlIG1lZXRpbmcuClZhcmlldHkgaXMgdGhlIHNwaWNlIG9mICh5b3VyIHNleCkgbGlmZS4gWW91IG5lZWQgdG8gc2VlIGVhY2ggc2l0dWF0aW9uIHRoYXQgcG9wcyB1cCBhbmQgYXNrIHlvdXJzZWxmLCBpcyB0aGVyZSBhbiBvcHBvcnR1bml0eSB0byBtYWtlIHNvbWV0aGluZyBvdXQgb2YgdGhpcz8gQW5kIHlvdSBjYW4gc3RhcnQgU3VwZXJib3dsIFN1bmRheSEgWW91IGtub3cgdGhlIG9sZCBzYXlpbmcsIHdoZW4gbGlmZSBoYW5kcyB5b3UgbGVtb25zLCB5b3UgbWFrZSBsZW1vbmFkZT8gV2VsbCwgc2FtZSBpZGVhIGhlcmUsIGJ1dCBpdCdzIHdoZW4gbGlmZSBoYW5kcyB5b3UgdGhlIFN1cGVyYm93bCwgeW91IG1ha2UgU1VQRVJTRVguIFRoZSBpZGVhIGlzIHlvdSBhbmQgeW91ciBtYW4gYXJlIGdvaW5nIHRvIG1ha2UgbGl0dGxlIHdhZ2VycyBvbiB0aGUgZ2FtZSBvciB0aGluZ3Mgc3Vycm91bmRpbmcgdGhlIGdhbWUuIApUaGVyZSBhcmUgc29tZSBwbGF5ZXJzIGZyb20gRmlubGFuZCBhbmQgU3dlZGVuLiBCdXQsIGFzIGZhciBhcyBDYW5hZGlhbnMgZ28sIHRoZXJlIGEgYmlnIHJpdmFscnkgd2l0aCB0aGUgZ3V5cyBmcm9tIFRvcm9udG8uIApJIGRvbiB0aGluayB5b3UgY2FuIGdvIHdyb25nIHdpdGggRHIuIFdpZW5zIGZyb20gSW1hZ2UgUGx1cyBvciBEci4gR2RpaCBmcm9tIEFxdWEgaUxhc2VyLiBNeSBicm90aGVyIHdlbnQgd2l0aCBEci4gR2RpaCAoUFJLIHByb2NlZHVyZSkgYW5kIG5vdyBoYXMgYmV0dGVyIHRoYW4gMjAvMjAgdmlzaW9uIHdoZW4gcHJldmlvdXMgY29uZGl0aW9ucyB3ZXJlICAxMmlzaCBpbiBlYWNoIGV5ZSBhbmQgbW9kZXJhdGUgdG8gc2V2ZXJlIGFzdGlnbWF0aXNtLiBJIHRoaW5raW5nIG9mIHB1bGxpbmcgdGhlIHRyaWdnZXIgYnV0IEkgd2lsbCBsb29rIGF0IGEgc2Vjb25kIG9waW5pb24gZnJvbSBteSBvcHRvbWV0cmlzdC4gQXQgdGhlIGVuZCBvZiB0aGUgZGF5IHRoZXNlIGFyZSBzdGlsbCBwZW9wbGUgd2hvIGFyZSB0YWtpbmcgeW91ciBtb25leSBhbmQgNWsgaXMgYSBiaWcgaW52ZXN0bWVudCBmb3IgbWFueSwgZXNwZWNpYWxseSBjb25zaWRlcmluZyB0aGUgcmlza3MuClNheWluZyBwZW9wbGUgYXJlbnQgcGVyZmVjdCBub3cgc28gd2UgY2FuIGZpeCBhbnl0aGluZyBpcyBwcmV0dHkgZHVtYiBpbW8uIApCcmluZyB0byBhIGJvaWwsIHJlZHVjZSBoZWF0IGFuZCBzaW1tZXIgZm9yIGEgbWluaW11bSBvZiA1IG1pbnV0ZXMuIApPciBlbHNlIHdoYXQ/IFNvbWUgcGVvcGxlIHdpbGwgZ2l2ZSBoZXIgbWVhbiBsb29rcz8gT3Igc29tZSBhc3Nob2xlIHdpbGwgc2hvdXQgYXQgaGVyIGFuZCBoZXIgYmFieSBhbmQgc2hlIHdpbmQgdXAgb24gYSBZb3VUdWJlIHJhZ2UgY29tcGlsYXRpb24/IEJhYmllcyBjcnkuIApGaXJzdCBvZmYgYSBiYXNpYyBiYWNrZ3JvdW5kIG9uIG9ubGluZSBwb2tlciByb3VsZXR0ZToKTGV0IGhhdmUgc29tZSBvZiB0aGF0LiAKU2VlLCB0aGlzIGlzIHRoZSBraW5kIG9mIG1hdGggdGhhdCBJIHN0YXJ0aW5nIHRvIGdldCB2ZXJ5IHN1c3BpY2lvdXMgb2YuIApUaGV5IG1pZ2h0IGhhdmUgYWxzbyByZW1lbWJlcmVkIHRoYXQgdGhpcyBzYW1lIHdvbWFuIHdhcyBzZWVuIG9uIG5hdGlvbmFsIHRlbGV2aXNpb24gY29va2luZyBmb3IgR3JldGEgdmFuIFN1c3RlcmVuIGFuZCBNYXR0IExhdWVyLk9rYXksIFBhbGluIGNvb2tlZCBvbiBUViB3aXRoIE1hdHQgTGF1ZXIuIApIZXIgaHVzYmFuZCB3YXMgYXdheSBwZXJmZWN0IHRpbWUgdG8gc2NoZWR1bGUgaXQsIHNoZSB3YWxrZWQgaGVyIGRhdWdodGVyIGFuZCBmcmllbmQgdG8gdGhlIG5laWdoYm9ycyBzbyB0aGV5IHdvdWxkbiB3aXRuZXNzIGJ1dCBrZXB0IHRoZSBiYWJ5IHNpbmNlIGhlIHdvdWxkbiBrbm93IHdoYXQgd2FzIGdvaW5nIG9uIGFuZCBub3QgdG8gYXJvdXNlIG5laWdoYm9yIG9mIHNvbWV0aGluZyBnb2luZyB3cm9uZyBhbmQgaGVyIG5lZWRpbmcgdG8gZ2V0IGJvdGgga2lkcyBvdXQgb2YgdGhlIGhvdXNlLiAKSG93IHRvIENvbGxlY3QgVmludGFnZSBDYXNpbm8gUG9rZXIgQ2hpcHMgb24gYSBCdWRnZXQKU3RlcHBpbmcgYmV5b25kIHdoZXRoZXIgb3Igbm90IHdlIGFzIG1vZHMgc2hvdWxkIGJhbiBzdXNwZWN0IGFjY291bnRzIGxpa2UgdGhpcyBmcm9tIGNvbW1lbnRpbmcgb24gb3VyIHN1YiBJIHdvdWxkIGZlZWwgYmV0dGVyIGlmIEkga25ldyB0aGVyZSB3YXMgc29tZW9uZSBhdCByZWRkaXQgYWN0aXZlbHkgbG9va2luZyBpbnRvIGFjY291bnRzIGxpa2UgdGhpcyBvbmUgdG8gc2VlIGlmIHRoZXkgYXJlIGFjdHVhbGx5IGp1c3QgbnV0YmFycyB3aXRoIGNyYXp5IGlkZWFzIG9yIHBhcnQgb2YgYSBsYXJnZXIgY29uc3BpcmFjeSB0byBzcHJlYWQgbWlzaW5mb3JtYXRpb24gb24gdGhlIHNpdGUuIFRob3VnaHRzP1ByaW1lNjI0ICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29TZWVtcyBhIGJpdCBleGNlc3NpdmUgd2l0aCB0aGUgZmVlcyBhbmQgZ2VvIGxpbWl0cy4gU3VyZSwgdGhleSBzaG91bGRuIGJlIHNwZWVkaW5nIGRvd24gYSBwZWRlc3RyaWFuIGFyZWEsIGJ1dCBpc24gdGhhdCBsYXcgZW5mb3JjZW1lbnQgam9iIHRvIGhhbmRsZT8gQWRkaXRpb25hbGx5LCBpZiBpdCBsYXRlIGF0IG5pZ2h0IGFuZCBubyBvbmUgdGhlcmUsIHdoeSBkb2VzIGl0IG1hdHRlcj9UaGUgZGV0cmFjdG9ycyB3aG8gc2F5IGl0IGlzbiBlbm91Z2ggYXJlIGRvd25yaWdodCBsdWRpY3JvdXMsIGFuZCBqdXN0IHRoZSB0eXBlIG9mIE5JTUJZIHRoYXQgYXJlIGltcGVkaW5nIHRoZSBjaXR5IHByb2dyZXNzLkJpZ2dlc3QgaXNzdWUgSSB0aGluaywgaXMgdGhlIHVzZSBvZiB0aGVtIG9uIHNpZGV3YWxrcy4gCk11cnJheSBpcyBHcmVhdCBBbWVyaWNhbiBCYWNrcnViJ3MgY2VvLldpdGggdGhlIGhlbHAgb2YgdGhvc2UgdHdvLCB3aG8gaGVscGVkIFN1cGVyQ3V0cyBncm93IGludG8gYSA5MDAgc3RvcmUgb3BlcmF0aW9uLCBNci4gClN1cmUsIGlmIHlvdSBsaXN0ZW4gdG8gY3JhenksIGlkZW9sb2dpY2FsbHkgZHJpdmVuIHN0dWRpZXMgeW91IGNhbiBmaW5kIGV2aWRlbmNlIGZvciBhbnl0aGluZyB5b3Ugd2FudC4gR2FzcCwgaGV0ZXJvc2V4dWFsaXR5IGFzIHRoZSBjYXVzZSBvZiBjaGlsZCBhYnVzZS4gCkhvd2V2ZXIsIEkgb2NjYXNpb25hbGx5IGZlZWwgdGhhdCB0aGV5IGFyZW4gd29ya2luZyBvbiBhIHBhcnRpY3VsYXIgc3BvdCBzb21ldGltZXMgYW5kIGhhdmUgdG8gZ2V0IGEgbWFudWFsIGFkanVzdG1lbnQgdG8gcmVhbGx5IGtpY2sgaXQgYmFjayBpbnRvIHBsYWNlLiAKT3RoZXIgcGVvcGxlIGFyZSByZWRkaXQgc29jaW9wYXRocy4gCkV2ZXJ5IHRpbWUgeW91IHRyaXAsIHlvdSBoYXZlIHRvIG1ha2Ugc3VyZSB5b3UgZGlkbiBicmVhayBhIGJvbmUuIEV2ZXJ5IHRpbWUgeW91IGNvb2ssIHlvdSBoYXZlIHRvIGNoZWNrIHRoYXQgeW91IGRpZG4gYnVybiB5b3Vyc2VsZiAgIGFuZCBpZiB5b3UgZGlkLCBpdCBwcm9iYWJseSB0aGlyZCBkZWdyZWUgYmVjYXVzZSB5b3UgZGlkbiByZWNvaWwgZnJvbSBpdC4gWW91ciBlbnRpcmUgbGlmZSBiZWNvbWVzIGJhc2VkIGFyb3VuZCBjb25zdGFudCBzZWxmIGNoZWNraW5nLiAKVGhlIERCUyBpcyBhIHdob2xlIGRpZmZlcmVudCBsZXZlbCBvZiBjb21wbGV4aXR5IGZyb20gYW55IGFnIGdyb3VuZCBtYXBwaW5nLCBnaXZlbiB0aGUgd2F5IHRoZSBpbWFnZSBpbiBnZW5lcmF0ZWQgYW5kIGRlcGVuZGVudCBvbiBtdWx0aXBsZSByZXR1cm5zIGF0IGRpZmZlcmVudCBhbmdsZXMgcmVsYXRpdmUgdG8gdGggc2FtZSBmaXhlZCAxIHNxIG1pbGUgYXJlYSBvZiBsYW5kLCBhbmQgdGhhdCBpcyBhY2N1cmF0ZSBlbm91Z2ggZm9yIHBpeGVsIG1hdGNoaW5nIHRlcm1pbmFsIGd1aWRhbmNlIG9mIHN0YW5kb2ZmIChJIGZvcmdldCB3aGljaCBvbmUsIHRoZSBvbmUgd2l0aCB0aGUgdG9tb2hhd2sgbGlrZSB0ZXJtaW5hbCBndWlkYW5jZSksIG9yIGZyb20gZGFtIHRhcmdldGluZy4gCkJpZyBzbGF0ZSBvZiBjb25mZXJlbmNlIGdhbWVzIGFwcGVhcnMgYW11c2luZwpTdXJlLCBhbiBBc2lhbiBndXkgd2lsbCB0aGluayBidWJibGUgdGVhIGlzIGEgcGVyZmVjdGx5IGFjY2VwdGFibGUgdmVudWUgZm9yIGEgZmlyc3QgZGF0ZS4gCkFzIEkgc3R1ZGllZCBtb3JlIGFuZCBtb3JlLCBJIHJlYWxpemVkIGhvdyBhd2Vzb21lIHRoaXMgZ2FtZSB3YXMgYW5kIGtlcHQgZnVsbHkgY29tbWl0dGluZyB0byBpdC4gCkdyYXBoaWNzIGNhcmQ6IFRoaXMgaXMgd2hlcmUgd2UgYmUgZ29pbmcgaW4gYSBiaXQgb2YgYSBkaWZmZXJlbnQgZGlyZWN0aW9uLiBUaGUgVmVnYSA2NCBhbmQgdGhlIFJUWCAyMDcwIHBlcmZvcm1zIHByZXR0eSBtdWNoIGlkZW50aWNhbCwgYnV0IHJpZ2h0IG5vdyB0aGUgVmVnYSBpcyBhIGZhaXIgYml0IGNoZWFwZXIgKGl0IGFjdHVhbGx5IG9ubHkgNDQxIG9uIEFtYXpvbiBVSykuIEl0IHdpbGwgcnVuIGEgYml0IGhvdHRlciwgYnV0IGl0IHNob3VsZG4gYmUgYW4gaXNzdWUgaW4geW91ciBjYXNlLiAKSW0gTWFpIDIwMTggd3VyZGUgZGllIDE1IGpocmlnZSBUaHVuYmVyZyBQcmVpc3RyZ2VyaW4gZWluZXMgU2NocmVpYndldHRiZXdlcmJzIHp1ciBVbXdlbHRwb2xpdGlrLCBkZXIgdm9tIFN2ZW5za2EgRGFnYmxhZGV0IGluaXRpaWVydCB3b3JkZW4gd2FyLiBEdXJjaCBkaWUgVmVyZmZlbnRsaWNodW5nIGlocmVzIEJlaXRyYWdzIGVudHN0YW5kZW4gZ2VtIEFuZ2FiZW4gVGh1bmJlcmdzIEtvbnRha3RlIHp1IHZlcnNjaGllZGVuZW4gUGVyc29uZW4sIGRpZSBzaWUgenUgaWhyZW0gRW5nYWdlbWVudCBpbnNwaXJpZXJ0ZW4uIApHZXQgdGhpcyBuZXdlc3QgYWxidW1mcm9tIGlUdW5lcyEgMTUpIFJldHJvIERhbmNlRnJlYWsgLiAKWW91ciBuYWlscyBhbHNvIG5lZWQgdG8gImJyZWF0aGUiLiBUYWtlIGEgbmFpbCBwb2xpc2ggYnJlYWsgb25jZSBpbiBhIHdoaWxlIGFuZCBsZXQgeW91ciBmaW5nZXJzIG5hdHVyYWxseSBncm93IGFuZCByZXRhaW4gaXRzIG9yaWdpbmFsIGNvbG9yIGJhY2suCkRvbiB0b3VjaCwgbGV0IGl0IHNpdCB1bnRpbCBpdCBoYXMganVzdCB0dXJuZWQgZ29sZGVuIGJyb3duIG9uIHRoZSBib3R0b20sIHRoZW4gc3RhcnQgc3RpcnJpbmcsIGdldHRpbmcgY29sb3IgYWNyb3NzIGFzIG11Y2ggb2YgdGhlIHJpY2UgYXMgcG9zc2libGUuIFRoaXMgcHJvZHVjZXMgc29tZSBwYXJ0cyB0aGF0IGFyZSBjcnVuY2h5IGFuZCB3ZWxsIHRleHR1cmVkIGxpa2UgdGhlIGJvdHRvbSBvZiBhIGJpYmltYmFwLCBhcyB3ZWxsIGFzIGtlZXBpbmcgbGFyZ2UsIHNvZnQgYml0cyBwZXJmZWN0IGZvciBzY29vcGluZyB1cCB3aXRoIHNvbWUgY2hpY2tlbi4uIApCdXQgeW91IG5lZWQgdG8gbWFrZSBzdXJlIGl0IHdvcmtzLCBvdGhlcndpc2UgYWxsIHlvdSB3aWxsIHNob3cgeW91ciB2aXNpdG9ycyBpcyBhIHNob3J0IGNvZGUgbWFya2luZyB0aGUgcGxhY2Ugd2hlcmUgYSBjb250YWN0IGZvcm0gc2hvdWxkIGJlIHNob3dpbmcuIApNb3JlIEFydGljbGVzIFRoZSBUb3AgNSBGYW1pbHkgRnJpZW5kbHkgQ3J1aXNlIFNoaXBzIEZhbWlseSBQYW5hbWEgQ2FuYWwgQ3J1aXNlcyBEaXNuZXkgdnMuIFJveWFsIENhcmliYmVhbiBDcnVpc2UgVGhpbmdzIHRvIERvIGZvciBLaWRzIG9uIGEgQ3J1aXNlIFNoaXAgQ2hhcnRlciBCdXMgR2FtZXMgZm9yIFBhc3NlbmdlcnMgVGhlIEJlc3QgQ3J1aXNlIGZvciBhbiBFeHRlbmRlZCBGYW1pbHkgb2YgMTUKSGVyZSBpcyB0aGUgYW5zd2VyIGZvcjogTWlzc291cmkgQ29tcHJvbWlzZSBzdWJqZWN0IGNyb3Nzd29yZCBjbHVlLiAKU2V0IG1ldHJpY3MgZm9yIHlvdXJzZWxmOiBJIHdhbnQgdG8gcmVhZCAxMCBwYWdlcyB3aXRob3V0IGxvb2tpbmcgdXAgS2FuamksIEkgd2FudCB0byB3YXRjaCBhIHdob2xlIGVwaXNvZGUgd2l0aG91dCBzdWJ0aXRsZXMuIFNpbWlsYXJseSwgbWFrZSBhIGNvbmNyZXRlIHNjaGVkdWxlIGZvciB5b3Vyc2VsZjogZml2ZSBwYWdlcyBhIGRheSwgbm8gbWF0dGVyIGhvdyBoYXJkIGl0IGlzLCAxMDAgS2FuamkgZmxhc2hjYXJkcyBhIGRheSwgZXRjLi4gClRoaXMgaXMgYW4gaW5jcmVkaWJseSBpbXBvcnRhbnQgcG9pbnQsIHRoYW5rIHlvdSEgQSB0aW1lbGluZSBpcyBmYWxsaW5nIGludG8gcGxhY2UuIFVuZm9ydHVuYXRlbHkgSSBoaXQgdGhlIGNoYXJhY3RlciBsaW1pdCBzbyBJIGFwcHJlY2lhdGUgdGhhdCB5b3UgcG9pbnRlZCBvdXQgdGhlIG1lZXRpbmcgYmV0d2VlbiBhIGZvcm1lciBSdXNzaWFuIGludGVsbGlnZW5jZSBhZ2VudCBhbmQgdGhlIFRydW1wIENhbXBhaWduIE1hbmFnZXIgYW5kIERlcHV0eSBDYW1wYWlnbiBNYW5hZ2VyIHdoaWNoIHRvb2sgcGxhY2UgaW4gYSBidWlsZGluZyBvd25lZCBieSBKYXJlZCBLdXNobmVyLiBFYXJsaWVyIHRvZGF5IE11ZWxsZXIgcmVjb21tZW5kZWQgYSAyNCB5ZWFyIGphaWwgc2VudGVuY2UgZm9yIGNvbnZpY3RlZCBmZWxvbiBhbmQgZm9ybWVyIFRydW1wIENhbXBhaWduIG1hbmFnZXIgUGF1bCBNYW5hZm9ydC5bMV0uIApHYWxsYWdoZXIgKEFKRykuIApZb3UgYXJlIGdldHRpbmcgb2xkZXIgYW5kIHRoYXRzIHRoZSBjb25zZXF1ZW5jZS4gQnV0IHRoZXJlIGlzIHByb2JhYmx5IHN0aWxsIHN0dWZmIHlvdSBoYXZlbnQgc2Vlbi4gSnVzdCBnbyB0byBNQUwgYW5kIGJyb3dzZSB0aGUgU2VpbmVuIENhdGVnb3J5IG9yIGxvb2sgYXQgdGhlIHRvcCBhbmltZSBsaXN0LiAKTGluZHNheSBhbmQgZmVsbG93IGxlZ2VuZHMgR29yZGllIEhvd2UgYW5kIFNpZCBBYmVsIGJlY2FtZSBrbm93biBhcyB0aGUgUHJvZHVjdGlvbiBMaW5lLCBvbmUgb2YgdGhlIG1vc3QgZmFtb3VzIHNjb3JpbmcgbGluZXMgaW4gTkhMIGhpc3RvcnkuCkl0IHdvdWxkIHdvcmtlZCBmb3Igc29tZSBXYXJkZW5zLkdhc3BhcmQuIFdoeSBjb3VsZG4gbXkgZmVtYWxlIElucXVpc2l0b3JzIGRhbmNlIHdpdGggaGltIGluc3RlYWQgb2YgRmxvcmlhbm5lPyBOb3QgYSByZWFsIHJvbWFuY2UgYnV0IG1vcmUgbGlrZSBhIGZsaW5nIC8gb25lIG5pZ2h0IHN0YW5kLkRBSSFMZWxpYW5hLiBJIGRpc2xpa2UgREFPIUxlbGlhbmEgYW5kIHRoZSByb21hbmNlLCBidXQgREFJIUxlbGlhbmEgaXMgYW5vdGhlciBzdG9yeS4gClNvdWwgY2FuIG9ubHkgYmUgdGVuYWJsZSBhcyBhIGNvbmNlcHQgYW5kIHVzZWZ1bCBhYm92ZSB0aGUgbWF0ZXJpYWwgaWYgaXQgaXMgYXMgaXJyZXBsYWNlYWJsZSBhcyBHb2QgaXMgKG5vdCBuZWNlc3NhcmlseSBlcXVhbCwgYnV0IHN0aWxsIGlycmVwbGFjZWFibGUpLiBJIGNhbiBidXkgdGhlIGlkZWEgb2YgdGhlIHNvdWwgaWYgdGhpcyBpcyB0aGUgY2FzZS4KQTogVG8gc3Vic2NyaWJlLCBsb29rIGZvciB0aGUgb3JhbmdlIFhNTCBncmFwaGljIG9uIHRoaXMgcGFnZSBhbmQgZWxzZXdoZXJlIG9uIHRoZSBzaXRlLiAKSGUgY2FuIGV2ZW4gdGhyb3cgNjAgeWFyZHMgb24ga25lZS4gSW4gMjAwOSwgaGUgbGVhZCBoaXMgdGVhbShUaGUgT2FrbGFuZCBSYWlkZXJzKSB0byBhIHZpY3Rvcnkgb3ZlciB0aGUgZGVmZW5kaW5nIHdvcmxkIGNoYW1waW9uIFBpdHRzYnVyZ2ggU3RlZWxlcnMuIApUaGV5IGhhdmUgbGVzcyBmb3JtYWwgdHJhaW5pbmcgdGhhbiBkb2N0b3JhdGUgbGV2ZWwgY2xpbmljaWFucyBidXQgYXJlIGxvd2VyIGNvc3QgYW5kIG1vcmUgYWJ1bmRhbnQuSXQgY29tZXMgZG93biB0byB5b3VyIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSB0aGVyYXBpc3QuIElmIHlvdSBkb24gY2xpY2sgYWZ0ZXIgMy80IHNlc3Npb25zOiBpdCBub3QgYSBnb29kIGZpdC4gTW92ZSBvbi4gClRoZSBOUkEgaXMsIGFuZCBoYXMgYmVlbiwgdGhlaXIgc3Rvb2dlIGRlY2FkZXMuIFlvdXIgZW50aXJlIHdvcmxkIHZpZXcgaXMgY29sb3JlZCBieSB3aGF0IHRoZSBndW4gbG9iYnkgYW5kIGd1biBtYW51ZmFjdHVyZXJzIHdhbnQgeW91IHRvIHRoaW5rLiAKQ29uZmxhdGlvbiBvZiBwZWRvcGhpbGlhIGFuZCBjaGlsZCBtb2xlc3RhdGlvbiBpcyBsb25nIHN0YW5kaW5nIG91ciBjdWx0dXJlIGFuZCBoYXMgcmVzdWx0ZWQgaW4gYSB2YXJpZXR5IG9mIG1lYW4gc3Bpcml0ZWQgbGF3cywgZnJvbSBiYXJyaW5nIGdheSBtZW4gYW5kIGxlc2JpYW5zIGZyb20gdGVhY2hpbmcgeW91bmcgY2hpbGRyZW4gYW5kIGFkb3B0aW9uIHRvIGJhcnJpbmcgZ2F5IG1lbiBmcm9tIHRoZSBCb3kgU2NvdXRzLi4gCk9uY2Ugd29yZCBnZXRzIG91dCBwZW9wbGUgd2lsbCBtb3N0IGxpa2VseSB0aGluayBpdCBhIGJ1ZyB0aGF0IGlzIG9ubHkgaGFwcGVuaW5nIHRvIGEgc21hbGwgYW1vdW50IG9mIHBlb3BsZSB3aXRoIHNlZW1pbmdseSBubyBjb21tb25hbGl0eSBiZXR3ZWVuIHRoZSB2aWN0aW1zLiAKQnkgZmFyIGJlc3QgbHVuY2ggSSBoYXZlIGV2ZXIgaGFkISBvciBteSBvdGhlciBmYXZvcml0ZSB3YXMgdGhlIGNyaXNwaXRvcz8ga2luZGEgbGlrZSB0YXF1aXRvcyBidXQgdGhlIHRvcnRpbGxhIHdhcyB2ZXJ5IHRoaW4gYW5kIHRoZXkgd2VyZSBmcmllZCBhbmQgaGFkIGdyZWVuIGNoaWxpIHBvdXJlZCBvdmVyIGl0IGFuZCBhIHNwcmlua2xlIG9mIHNocmVkZGVkIGNoZWRkYXIuIApJIGp1c3QgZmVlbCBsaWtlIHNvbWUgZGV0YWlsIGlzIG1pc3NpbmcgaGVyZS4gQmVjYXVzZSBzZXR0aW5nIHVwIGFjY291bnRzIGluIEhLIGhhcyBiZWNvbWUgbm90b3Jpb3VzbHkgaGFyZCBhbmQgeW91IHNheWluZyB5b3UganVzdCB3YWxrZWQgaW4gb2ZmIHRoZSBzdHJlZXQgYW5kIHRoZXkgZ2F2ZSB5b3UgYSBiYW5rIGFjY291bnQgYW5kIGNyZWRpdCBjYXJkLCBubyBxdWVzdGlvbnMgYXNrZWQuIFdoYXQgZXhhY3RseSB3b3VsZCBwcmV2ZW50IHlvdSBmcm9tIG1heGluZyBvdXQgdGhhdCBjcmVkaXQgY2FyZCBhbmQganVzdCBub3QgZ29pbmcgYmFjayB0byBISz8KSWYgSSBrbmV3IG5vdGhpbmcgZWxzZSBhYm91dCB5b3UgKGFuZCBJIGRvbiBJIGp1c3QgYW4gaW50ZXJuZXQgc3RyYW5nZXIpIHRoaXMgd291bGQgYmUgZW5vdWdoIHRvIG1ha2UgbWUgcHJvdWQgb2YgeW91LiAKTW9yZW92ZXIsIGEgbW9yYWwgYm9vc3QgYXMgYW4gYXdha2VuaW5nIGRvZXNuIG1ha2Ugc2Vuc2UgYXMgdGhlIHRlcm0gaW1wbGllcyB0aGF0IHRoZXkgYXJlIHVwZ3JhZGluZyBwZXJtYW5lbnRseS4gTW9yYWwgYm9vc3RzICh3aGlsZSBzdHJvbmcgYW5kIHJlYXNvbmFibGUpIGFyZSB0ZW1wb3JhcnkuIDAgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvCkF0IHRoZSBlbmQgb2YgdGhlIHJvdW5kLCBhbGwgcGxheWVycyB0dXJuIG92ZXIgdGhlaXIgcmVtYWluaW5nIGZhY2UgZG93biBjYXJkcy4gCkFzIHNoZSB3YWxrcyBkb3duIFdhc2hpbmd0b24gQXZlbnVlLCBzaGUgc3RvcHMgYXMgdGhlIGNhciBhcHByb2FjaGVzLiBIZXIgZmVsbG93IGNsYXNzbWF0ZXMgYXJlIGluIGEgY2FyIGFuZCBzdGFydCB0aHJvd2luZyBhcHBsZXMgYXQgaGVyIGhlYWQuIApTb3VyYXYgR2FuZ3VseTogQmFzZWQgb24gdGhlIHJlY2VudCBhdGhsZXRpY2lzbSBoZSBoYXMgc2hvd24sIGZvciB0aGUgZmlyc3QgdGltZSBpbiBoaXMgY2FyZWVyLCBHYW5ndWx5IHdpbGwgYmUgYXNrZWQgdG8gcGVyZm9ybSBzb21lIGFjcm9iYXRpYyBmZWF0cyBzbyB3ZSBjYW4gYWxsIGJlIGNvbnZpbmNlZCB0aGUgb24gZmllbGQgZGlzcGxheXMgd2VyZW4ndCBjYW1lcmEgdHJpY2tzLiBUaGVzZSB3aWxsIGluY2x1ZGUgc3RhbmRhcmQgbW92ZXMgbGlrZSBzdGFuZGluZyBvbiBoaXMgaGFuZHMgd2hpbGUgcmVjaXRpbmcgdGhlIElQTCdzIGNvbmZpZGVudGlhbGl0eSBjbGF1c2UsIHNvbWVyc2F1bHRpbmcgb3ZlciBhIHRhYmxlLCBhbmQgcGxheWluZyBmZXRjaCB3aXRoIFNoYWhydWtoIEtoYW4uClRob21hcyBIaWNrZXkgLCBKb2hubnkgQm95Y2h1ayAsIEpvc2ggQmFpbGV5ICwgQ2FzZXkgQ2l6aWthcyBhbmQgbW9yZSB3ZXJlIHNwZWNpYWwgZ3Vlc3RzIGF0IHRoZSBwb2tlciBuaWdodCwgcGFydCBvZiB0aGUgZHJhdyB0aGF0IGhlbHBlZCByYWlzZSAkNzVLIGZvciB0aGUgTWF0dCBNYXJ0aW4gRm91bmRhdGlvbiwgd2hpY2ggc3VwcG9ydHMgdGhlIElzbGFuZGVycyBDaGlsZHJlbidzIEZvdW5kYXRpb24uIkhlJ3MgYSBnb29kIGZyaWVuZCBvZiBhbGwgb2Ygb3Vycywgc28gaXQncyBpbXBvcnRhbnQgdG8gY29tZSB0byB0aGlzIGV2ZW50LCBidXQgbW9zdCBvZiBhbGwgdGhlIGNhdXNlIGlzIGltcG9ydGFudCwgdHJ5aW5nIHRvIGdldCBpbnZvbHZlZCBpbiB0aGUgY29tbXVuaXR5IGFuZCByYWlzZSBzb21lIG1vbmV5LCIgSGlja2V5IHNhaWQuVGhlIGV2ZW50IGRyZXcgMzMwIHBlb3BsZSAgIGRvdWJsaW5nIGxhc3QgeWVhcidzIHBva2VyIG5pZ2h0ICAgaW5jbHVkaW5nIGEgaG9zdCBvZiBsb2NhbCBjZWxlYnJpdGllcyBhbmQgSXNsYW5kZXJzIGFsdW1uaS4gQ2xhcmsgR2lsbGllcyB3YXMgb24gaGFuZCwgYXMgd2VyZSBCb2JieSBOeXN0cm9tLCBQYXQgTGFGb250YWluZSBhbmQgUmljayBEaVBpZXRyby5MYUZvbnRhaW5lLCB3aG8gaGFzIGhpcyBvd24gZm91bmRhdGlvbiAiQ2hhbXBpb25zIGluIENvdXJhZ2UiIGFuZCBpcyBjdXJyZW50bHkgcmVwcmVzZW50aW5nIHRoZSBOSEwgb24gYSBwYXBhbCB2aXNpdCwgc2FpZCBzZWVpbmcgTWFydGluJ3MgRm91bmRhdGlvbiBhbmQgdGhlIElzbGFuZGVycyBzdXBwb3J0IHRoZSBjb21tdW5pdHkgbWFkZSBoaW0gcHJvdWQgYXMgYW4gYWx1bW51cy4iSXQncyBvbmUgdGhpbmcgdG8gcGxheSB0aGUgZ2FtZSBhbmQgYmUgYW4gSXNsYW5kZXIsIGJ1dCB0byBiZSBhIHRydWUgSXNsYW5kZXIgeW91IGhhdmUgdG8gZ2V0IGludm9sdmVkIGluIHRoZSBjb21tdW5pdHkgYW5kIGdpdmUgYmFjaywiIGhlIHNhaWQuICJUbyBzZWUgTWF0dCwgSm9zaCwgVGhvbWFzIGFuZCBhbGwgdGhlIHBsYXllcnMgY29tZSBoZXJlIGFuZCBzdXBwb3J0IHRoZSBldmVudCBpbiB0aGUgY29tbXVuaXR5IGFuZCBmb3IgYSBncmVhdCBjYXVzZSwgaXQgYnJpbmdzIGJhY2sgZm9uZCBtZW1vcmllcy4gCk5pY2hvbGUgU3R1dHptYW4sIGNyZWF0aXZlIG1hbmFnZXIgZm9yIHRoZSBlcmdvbm9taWMgZnVybml0dXJlIGNvbXBhbnkgQW50aHJvLCB3aGljaCBtYWtlcyBhIHdpZGUgdmFyaWV0eSBvZiBhZGp1c3RhYmxlIGhlaWdodCBkZXNrcywgc3BvdHRlZCBhIHNpbWlsYXIgcGF0dGVybiBhdCBoZXIgb2ZmaWNlOyBwZW9wbGUgdGVuZCB0byBzdGFuZCB3aGVuIHRoZXkgd2FudCB0byBnZXQgc29tZXRoaW5nIGRvbmUuClRhbGxNaWxscyAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvClNPIG1hbnkgY3VzdG9tZXJzIGdvb2dsZSBvdXIgbnVtYmVyIGFuZCBjYWxsIHVzIHRvIHNlZSB3aGF0IHRpbWUgd2UgY2xvc2UgZXZlbiB0aG91Z2ggdGhlIG9wZW5pbmcgaG91cnMgYXJlIGRpc3BsYXllZCB1bmRlcm5lYXRoIHRoZSBwaG9uZSBudW1iZXIgb24gZ29vZ2xlLgpBcyBzb21lb25lIHdobyBub3cgbGl2ZXMvd29ya3MgaW4gRXVyb3BlIHRoaXMgc2VudGltZW50IGJ1bXMgbWUgb3V0IGJlY2F1c2UgKGF0IGxlYXN0IG9uIG15IHBhcnQpIGl0IGhvbmVzdGx5IG5vdCAiZmFrZSIuIEkgZ2VudWluZWx5IHdhbnQgdG8gbG9vayBhZnRlciB5b3VyIHdlbGwgYmVpbmcgaW4gYW5kIG91dHNpZGUgdGhlIHdvcmtwbGFjZSBidXQgaXQgYSB0d28gd2F5IHN0cmVldC4gTWFqb3JpdHkgb2YgbXkgY293b3JrZXJzIGFyZSBGcmVuY2ggYW5kIHRoZWlyIGFwcHJvYWNoIHRvIHdvcmsgaXMgc28gZGFtbiBjeW5pY2FsIGF0IHRpbWVzIHRoYXQgaXQgZHJpdmVzIG1lIGNyYXp5Li4gCkFydGljbGVzIE9jdG9iZXIgNApUaGlzIHBlcnNvbiBpcyBub3QgaGVhbHRoeSBmb3IgeW91LiBJdCB0aW1lIHRvIGJyZWFrIHVwIHdpdGggaGltLiBIZSBzaG91bGQgYmUgMTEwJSBzdXBwb3J0aXZlIG9mIHlvdXIgcmVjb3ZlcnkgYW5kIHlvdXIgbWVudGFsIGhlYWx0aC4gClRocm93IGhpbSBvdXQgb2YgdGhlIG5lc3QuIEJlIHNpbmdsZSBmb3IgYSB3aGlsZS4gCkFuZCB3aHkgZG8geW91IGFzc29jaWF0ZSBtZSB3aXRoIG90aGVyIGNyaW1pbmFsIGFjdHM/IEkgaGF2ZSBuZXZlciByb2JiZWQsIGtpbGxlZCwgYnJva2VuIGluIHRvLCBvciBkZWZhY2VkLiBNeSBvbmx5IGNyaW1lIGlzIGRydWcgdXNlIHRoYXQgc3RlbXMgZnJvbSBncm93aW5nIHVwIGluIGEgY29tbXVuaXR5IHdoZXJlIGNvY2FpbmUgd2FzIGVhc3kgdG8gZ2V0LiBJJ3ZlIHdvcmtlZCBldmVyeSBkYXkgc2luY2UgSSB0dXJuZWQgMTggdG8gcGF5IG15IHdheSwgYW5kIHRvIHBheSBteSB0YXhlcy4gSSBoYXZlIG5ldmVyIGRvbmUgc2FpZCBkcnVncyBpbiBhIHB1YmxpYyBwbGFjZSB0aGF0IHdvdWxkIGNhdXNlIHRoZSBwb2xpY2UgdG8gYmUgaW52b2x2ZWQgYXBhcnQgZnJvbSBteSBjYXIsIGFuZCBJIGhhdmUgbmV2ZXIgYmVlbiBzbyBtdWNoIGFzIGRldGFpbmVkLiBNeSBvbmx5IHRocmVlIGludGVyYWN0aW9ucyB3aXRoIHRoZSBwb2xpY2UgYXJlOgpTaW5jZSB0aGVuIHRoZSBwYWxlbyBsaWZlc3R5bGUgaGFzIGJlY29tZSBhbiBpbmR1c3RyeSB1bnRvIGl0c2VsZi4KSSBkbyBoYXZlIGEgdG9rZW4gdGhhdCBhbGxvd3MgZGVhZCBwbGF5ZXJzIHRvIGNoYXQgd2l0aCBsaXZpbmcgcGxheWVycyBhdCBsZWFzdC4uIApDSEYgMjUgYmV0IGFoZWFkIG9mIG1lIChVVEcgZnJvbSBiZWZvcmUgbm93IGluIGN1dG9mZikgYW5kIEkgcmFpc2UgdG8gJDUwICAgMiBjYWxsZXJzLiBGbG9wIDUgNSA1LiBDSEYgMjUgYmV0IGJ5IHNhbWUgZ3V5LiAKV2hvIHdhcyBub21pbmF0ZWQgYnkgcGV0aXRpb24gdG8gaGF2ZSBoZXIgbmFtZSBvbiB0aGUgYmFsbG90LiAKSW4gdGhlIGNvdXJzZSwgd2UgZGlzY3VzcyBiZWhhdmlvcmFsIHJpc2tzIGFzc29jaWF0ZWQgd2l0aCBwb2tlci4gClJvc3MgaXMgcmlnaHQuIFRoZXJlIGFyZSBCb2R5IFNob3AgYW5kIFNlcGhvcmEgYXMgd2VsbCBhcyBSb2xleCBhbmQgU3R1YXJ0IFdlaXR6bWFuOyBTaGFrZSBTaGFjayBhcyB3ZWxsIGFzIHByaWNleSwgZmlzaCBieSB0aGUgcG91bmQgTWlsb3MuIFRoZSBwbGF6YSBhbmQgdGhlIFZlc3NlbCBhcmUgZnJlZSB0byBhbGwuIApCdXQgbm90IGV2ZXJ5b25lIHJlbGF4ZXMgdGhlIHNhbWUgd2F5LiAKSSBkb24gbG9vayBhdCB0aGVzZSBwb3N0cyBhbmQgdGhpbmsgInlvdSBjYW4gdGVsbCBtZSBJIG5vdCBleGhhdXN0ZWQgaWYgSSBkb24gaGF2ZSBraWRzISEhIi4gSSB0aGluaywgaGF2aW5nIGtpZHMgd291bGQgYmUgYSBwYWluICAgSSBzdGlsbCBoYXZlIHRoZSByaWdodCB0byBiZSBleGhhdXN0ZWQsIGJ1dCBjb21wb3VuZGluZyBteSBjdXJyZW50IHN0YXRlIHdpdGgga2lkcyB3b3VsZCBiZSB0b3VnaCwgSSBjYW4gZW1wYXRoaXplLiBNYW55IHBhcmVudHMgd29yayAxMiBob3VyIHNoaWZ0cywgYXJlIGFjdGl2ZS9kZXBsb3llZCBtaWxpdGFyeSwgd29yayBtdWx0aXBsZSBqb2JzICAgYW5kIHRvIHRoZWlyIGNyZWRpdC4uIApJdHMgbm90IHJlYWxseSBhbnl0aGluZyBsaWtlIHRoZSBnYW1lcyB5b3V2ZSBtZW50aW9uZWQsIHNvIGltIG5vdCBleGFjdGx5IHN1cmUgaXRzIHVwIHlvdXIgYWxsZXksIGJ1dCB0aGVyZSBpcyBhIGdvb2QgcmVhc29uIGl0cyBiZWVuIHNvIGhpZ2hseSBhY2NsYWltZWQgYW5kIGF3YXJkZWQsIGFuZCB0aGF0IGl0IGhhcyBzdWNoIGEgbG95YWwgZmFuIGJhc2UuIEEgZ29vZCBzdG9yeSBnYW1lIGlzIHVzdWFsbHkgd2hhdCBwZW9wbGUgbmVlZCB0byBnZXQgb3V0IG9mIGEgc2hvb3RlciBnYW1lIGJ1cm5vdXQsIGFuZCB0aGlzIG9uZSBpcyBvbmUgb2YgdGhlIGJlc3Qgc3RvcnkgZ2FtZXMgZXZlciBtYWRlLiBJZiBhbnkgZ2FtZSBjYW4gYmUgYXJndWVkIGFzIGFuIGFydCBwaWVjZSwgdGhpcyBvbmUgaXMgaXQuLiAKTm93IHRoZXJlIGxpa2UgMyBzZXBhcmF0ZSBwb3RzIHRvdGFsaW5nIG92ZXIgYSBncmFuZCwgZmxvb3IgYW5kIGRlYWxlciBzb3J0IGl0IGFuZCBnZXQgcmlnaHQgdG8gZGVhbGluZyB0aGUgbWFqZXN0aWMgYm9hcmQgb2YgQUtRIGFuZCBJIGxpdGVyYWxseSBjb3VsZG4gc3RvcCBsYXVnaGluZyBiL2MgaG93IHJpZGljdWxvdXMgdGhpcyBuaWdodCBoYXMgYmVlbiwgdGhlbiB0dXJuIGJyaWNrIGFuZCByaXZlciBKLiAKUG9zdGVkIGJ5IGJsdWVzaGFtbWVyIGF0IDExOjE3IEFNIG9uIERlY2VtYmVyIDMxLCAyMDA0CkEgcmVjZW50IGFydGljbGUgaW4gYW4gYWx0ZXJuYXRpdmUgbmV3c3BhcGVyIGNsZXZlcmx5IGdhdmUgZmFsc2UgaW1wcmVzc2lvbnMgb2YgaW5hcHByb3ByaWF0ZSBiZWhhdmlvciBiZWNhdXNlIG9mIGl0cyBtaXNsZWFkaW5nIGlubnVlbmRvLCBpbmNvcnJlY3RseSBpbXBseWluZyB0aGF0IFByb2Zlc3NvciBHZW9yZ2UgUmVrZXJzIHVzZWQgdGhlIFJlbnRib3kgd2Vic2l0ZSB0byBoaXJlIGEgcHJvc3RpdHV0ZSB0byBhY2NvbXBhbnkgaGltIG9uIGEgcmVjZW50IHRyaXAuIHRvIEludGVybmV0IHN0b3JpZXMgYmFzZWQgb24gdGhpcyBzbGFuZGVyb3VzIGFydGljbGUsIGZvbGxvd2luZyBtZWRpY2FsIGFkdmljZSBQcm9mZXNzb3IgR2VvcmdlIFJla2VycyByZXF1aXJlcyBhbiBhc3Npc3RhbnQgdG8gbGlmdCBoaXMgbHVnZ2FnZSBpbiBoaXMgdHJhdmVscyBiZWNhdXNlIG9mIGFuIG9uZ29pbmcgY29uZGl0aW9uIGZvbGxvd2luZyBzdXJnZXJ5LiAuIGFsc28gZnVubnkgYmVjYXVzZSBEci4gR2VvcmdlIGlzIHN1Y2ggYSBob21vcGhvYmUuIGJlY2F1c2UgVG9ueSBQZXJraW5zLCBwcmVzaWRlbnQgb2YgRmFtaWx5IFJlc2VhcmNoIENvdW5jaWwgaW1tZWRpYXRlbHkgdGhyZXcgaGltIG92ZXIgdGhlIGNsaWZmIGJ5IHNheWluZzoKQWx0aG91Z2ggaGlzIGRpc3RyaWN0IGxpZXMgbW9yZSB0aGFuIDEwMCBtaWxlcyBmcm9tIFJvY2t5IEdhcCwgS3JhbWVyIGJlY2FtZSBpbnZvbHZlZCBhZnRlciBhIGJyaWVmaW5nIHR3byB3ZWVrcyBhZ28gZnJvbSBSb2JlcnQgQy4gQnJlbm5hbiwgZXhlY3V0aXZlIGRpcmVjdG9yIG9mIHRoZSBNYXJ5bGFuZCBFY29ub21pYyBEZXZlbG9wbWVudCBDb3Jwb3JhdGlvbiwgd2hpY2ggb3ducyB0aGUgcmVzb3J0LgpBcyBhIHRoaW5raW5nIGJlaW5nIGFibGUgdG8gY29uY2VpdmUgb2YgbWF0dGVycyBiZXlvbmQgeW91ciBvd24gYm9keSwgdGFrZSBhIHN0ZXAgYmFjayBmb3IgYSBtb21lbnQgYW5kIGxvb2sgZG93biBvbiB5b3Vyc2VsZiBpbiBhIGNyb3dkIG9mIHBlb3BsZSBhbmQgc2VlIHRoaW5ncyBmb3Igd2hhdCB0aGV5IHJlYWxseSBhcmUuIEFsbCBvZiB0aGVzZSBwZW9wbGUsIGFuZCB5b3Vyc2VsZiwgYW5kIEksIGFyZSBub3RoaW5nIG1vcmUgdGhhbiBiaW9sb2dpY2FsIG1hY2hpbmVzLiBFYWNoIG9mIHRoZXNlIG1hY2hpbmVzIGhhcyBhIHNlbnNlIG9mIG9mIGJlaW5nICAgbWVtb3JpZXMsIHRob3VnaHRzLCBlbW90aW9ucyBhbmQgaWRlYXMgICBidXQga25vdyBub3cgdGhhdCB0aGVzZSBhcmUgbWVyZWx5IGRhdGEgcG9pbnRzIHdyYXBwZWQgdXAgaW4gYSBmaWxlIHN5c3RlbSB0aGF0IHdlIHlldCB0byBkZWNvZGUuIFRoZXJlIG5vdGhpbmcgZXh0ZXJuYWwuIEp1c3QgaW5mb3JtYXRpb24gYmVpbmcgcHJvY2Vzc2VkIGJ5IGEgY29tcHV0ZXIgKG5vdCB2ZXJ5IHVubGlrZSB0aGUgb25lIHlvdSBzaXR0aW5nIGF0KSBhdCBlYWNoIGFuZCBldmVyeSBpbnN0YW5jZS4gNSBwb2ludHMgIHN1Ym1pdHRlZCAxNiBob3VycyBhZ28KSWYgYWxsIGdvZXMgdG8gcGxhbiwgdGhhdCAiZXhwZXJpZW5jZSIgd2lsbCBpbmNsdWRlIHNwaW5uaW5nIG9yIGJhc2tldCB3ZWF2aW5nIGNsYXNzZXMgdGF1Z2h0IGJ5IE5vcmZvbGsgY3JhZnRzcGVvcGxlLgpJIHdhcyBhdCBhIGZhaXJseSBsYXJnZSBwYXJ0eSBhcyBjcm93ZCBjb250cm9sLiAKSSBrbm93IGZvciBhIGZhY3QgSSB3b3VsZCBoYXZlIGEgYmV0dGVyIGxpZmUgaWYgSSBsaXZlZCB3aXRoIG15IERhZCwgaGUgaGFzIGRvbmUgdGhlIGJlc3QgaGUgY2FuIGZyb20gdGhlIGRpc3RhbmNlIHNoZSBwdXNoZWQgaGltIGFuZCB0aGUgcnVsZXMgc2hlIHdvbiBpbiBjb3VydCBsaWtlIG9ubHkgY2FsbGluZyB1cyB0d2ljZSBhIHdlZWsgYmV0d2VlbiBhIGNlcnRhaW4gdGltZSBhbmQgb25seSBzZWVpbmcgdXMgZm9yIGhvbGlkYXlzLiBJbiB0aGUgZW5kLCBJIGxpdmUgaW4gdGhlIHNhbWUgc3RhdGUgYXMgbXkgZGFkIG5vdywgYW5kIEkgZG9uIHRhbGsgdG8gbXkgYmlydGggbW9tLiBJIHNlZSBteSBkYWQgYXMgbXVjaCBhcyBJIGNhbiBhbmQgdGFsayB0byBvZnRlbiwgaGUgdXBzZXQgYWJvdXQgd2hhdCBJIHdlbnQgdGhyb3VnaCBhcyBhIGNoaWxkIGJ1dCBpdCBub3QgaGlzIGZhdWx0IGFuZCBoZSBkaWQgdGhlIGJlc3QgaGUgY291bGQgYW5kIEkgbHVja3kgdG8gaGF2ZSBoaW0uCkFmdGVyIHRoYXQgSSBhbSBub3Qgc28gc3VyZS4gCkkgYXNzdW1lIHRoYXQgc2hlIGxpc3RlZCB5b3UgaW4gaGVyIHdpbGwgYXMgTmllY2UgZ3VhcmRpYW4gaWYgc29tZXRoaW5nIHRyYWdpYyBzaG91bGQgaGFwcGVuIHRvIGhlciwgc2luY2UgeW91IHRoZSBwZXJzb24gc2hlIHRydXN0ZWQgTmllY2Ugd2l0aCBmb3IgYSB5ZWFyLiAKVGhlIG9yaWdpbmFsIHBvc3QgaXMgYmFzaWNhbGx5IHNheWluZyB5ZWEgd2UgYWRkZWQgdGhpcyBwYXJhbGxlbCB3YXkgdG8gb2YgZG9pbmcgdGhpbmdzIGFuZCBpdCAiZGVwZW5kcyIsIEkganVzdCB0aGluayB0aGlzIGNhbiBiZSBhIHRyb3VibGluZyBwYXRoIHRvIGdvIGRvd24uIFJlYWN0IGRvY3MgZ28gb3V0IG9mIGRhdGUgc28gZmFzdCBhbHJlYWR5LCBhbmQgbm93IHdlIGdvdCBhIG90aGVyIGZvcmsgdG8gd29ycnkgYWJvdXQuCkl0J3MgY3V0ZS4gCkFuIGFydGljbGUgbXVzdCBiZSBwcmltYXJpbHkgd3JpdHRlbiBpbiBFbmdsaXNoIGZvciB1cyB0byBiZSBhYmxlIHRvIG1vZGVyYXRlIGl0IGFuZCBlbmZvcmNlIG91ciBydWxlcyBpbiBhIGZhaXIgYW5kIHVuYmlhc2VkIG1hbm5lci4gTW9yZSBJbmZvLgpLbmlnaHQgdGhhdCB3YXMgb24gc2FsZS4gCkFyb3VuZCB0aGUgc2Vjb25kIHNlbWVzdGVyIG9mIHNlY29uZCB5ZWFyLCB5b3Ugd2lsbCBiZWdpbiB0byBnZXQgcmVhZHkgZm9yIGJvYXJkcy4gCkkgZ2V0IHRoYXQsIEkganVzdCBkb24gbGlrZSB0aGUgcnVubmluZyBqb2tlIHRoYXQgYWx3YXlzIG9wZW4gaXMgInRoZSBzZXggcG9kY2FzdCIgd2hlbiBzb21lIGVwaXNvZGVzIGFyZW4gdmVyeSBzZXggZm9jdXNlZCBhdCBhbGwuIEkgZG9uIHJlbWVtYmVyIHNleCBjb21pbmcgdXAgYXQgYWxsIG9uIE1pY2hhZWwgZXBpc29kZSwgYW5kIEplcmVteSB3YXMganVzdCBoaW0gZ29pbmcgb24gbW9jayBmaXJzdCBkYXRlcyB3aXRoIGV2ZXJ5b25lIGJlY2F1c2UgaGUgbmV2ZXIgZGF0ZWQgYW55b25lIGJ1dCBoaXMgd2lmZS4gCk5ldmVydGhlbGVzcywgaXQgaXMgd2lzZSBub3QgdG8gbGV0IHRoZSBjb25kaXRpb24gd29yc2VuIHVwIHRvIHRoaXMgcG9pbnQuIApTbyB0aGVyZSB5b3UgaGF2ZSBpdC4gU29tZSBjcmVhdGl2ZSBhbmQgc29tZSBzaWxseSB1c2VzIGZvciBqZWxseSBiZWFucy4gU2hvdWxkIHlvdSBjaG9vc2UgdG8gYW11c2UgeW91cnNlbGYgd2l0aCB0aGUgY29sb3JmdWwgY29uZmVjdGlvbiwgeW91IGNhbiBmaW5kIHRoZW0gYXZhaWxhYmxlIGFsbCB5ZWFyIHJvdW5kIHRocm91Z2ggY2FuZHkgc3RvcmVzIG9uIHRoZSBpbnRlcm5ldC4KT3RoZXIgdGhhbiB0aGlzLCB0aGVyZSBpcyBhIGNvdW50aW5nIHN0cmF0ZWd5IHRvby4gVGhpcyBjYW4gYWxzbyBoZWxwIHlvdSBpbiB3aW5uaW5nLi4gClBlb3BsZSBzZWVtIFJFQUxMWSBoZXNpdGFudCB0byByZWNvZ25pemUgdGhhdCBUcnVtcCBpcyBub3QganVzdCBhbm90aGVyIHBvbGl0aWNpYW4sIHRoYXQgaGUgaXMgdW5pcXVlbHkgdGVycmlibGUsIGNvcnJ1cHQsIGFuZCBpbmNvbXBldGVudC4KVGhlIGRpdm9yY2VkIGZhdGhlciBvZiB0d28sIGEgZmFjdG9yeSB3b3JrZXIncyBzb24sIHdobyBsZWZ0IHNjaG9vbCBhdCAxNSB3aXRoIG5vIHF1YWxpZmljYXRpb25zIGFuZCBiZWdhbiBoaXMgY2FyZHMgY2FyZWVyIGF0IG5pbmUgcGxheWluZyB3aGlzdCB3aXRoIGhpcyBHcmFuZG1hIEZsb3JlbmNlLCByb3NlIGZyb20gbm93aGVyZSB0byBlaWdodGggaW4gdGhlIG92ZXJhbGwgV29ybGQgUG9rZXIgVG91ciByYW5raW5ncy4uIApPbmNlIHNoZSBzdGFydGVkIGdhaW5pbmcgd2VpZ2h0IGFuZCBnZXR0aW5nIGJpZ2dlciwgSSBmZWx0IG1vcmUgY29tZm9ydGFibGUuIAoxOCBjb21wbGV0ZWx5IGJpemFycmUgcmVxdWVzdHMgb24gdGhlIEdvdmVybm1lbnQgcGV0aXRpb25zIHdlYnNpdGUKRG9ncyBvZnRlbiBzZWVtIHRvIGhhdmUgbGltaXRsZXNzIGVuZXJneSBhbmQgcm9idXN0IGNvbnN0aXR1dGlvbnMsIGJ1dCBkb24ndCBsZXQgdGhpcyBmb29sIHlvdTogdGhleSBhcmUgc3VzY2VwdGlibGUgdG8gYWxsIHNvcnRzIG9mIG1hbGFkaWVzLCByYW5naW5nIGZyb20gbWlsZCB0byBsaWZlIHRocmVhdGVuaW5nLiBUaGF0J3Mgd2h5IGl0IHBheXMgdG8gaGF2ZSBhIHJlbGF0aW9uc2hpcCB3aXRoIGEgZGVwZW5kYWJsZSwgcmVhc3N1cmluZyB2ZXRlcmluYXJpYW4gKHRvIGVuc3VyZSBnb29kIHRyZWF0bWVudCBhbmQgcXVpY2sgdHJlYXRtZW50IGluIGFuIGVtZXJnZW5jeSksIGFuZCB0byBmb2xsb3cgd2lzZSBndWlkZWxpbmVzIGZvciBkb2cgb3duZXJzLCB3aGljaCBpbmNsdWRlIHJlZ3VsYXIgY2hlY2t1cHMgZm9yIHlvdXIgcG9vY2ggYW5kIGJ1aWxkaW5nIHlvdXIgb3duIHN0b3JlIG9mIGtub3dsZWRnZSBhYm91dCBjYW5pbmUgbWFsYWRpZXMsIHRvIGNhdGNoIHRyZWF0YWJsZSBkaXNlYXNlcyBlYXJseS4gClNvIHRoZSBHaWFudHMgdG9vayB0d28gb3V0IG9mIHRocmVlIGZyb20gTG9zIEFuZ2VsZXMsIGFuZCBub3cgdGhlIEdpYW50cyAoNzAgODYpIG5lZWQganVzdCB0d28gdmljdG9yaWVzIGluIHRoZSBmaW5hbCBzaXggZ2FtZXMgdG8gc3VycGFzcyBsYXN0IHllYXIgNzEgd2lucy4gV2VsbCwgc28gbXVjaCBmb3IgdGhhdC4gCiJUaGUgcmVhbGl0eSBpcywgYmVjYXVzZSBvZiB0aGUgc3RpZ21hIGFuZCB0aGUgbWFyZ2luYWxpemF0aW9uIHN1cnJvdW5kaW5nIHRoZSBhZHVsdCBpbmR1c3RyeSwgcGVvcGxlIGFyZSB3YXkgbW9yZSBzdXNjZXB0aWJsZSB0byBzZXh1YWwgYXNzYXVsdCBhbmQgYWJ1c2UsIiBIb292ZXIgc2FpZC4gIkRvaW5nIHNvbWV0aGluZyBhcyBzaW1wbGUgYXMgZ2V0dGluZyBhIGJhbmsgYWNjb3VudCBvciBbc2VlaW5nXSBhIGRvY3RvciBvciB0aGVyYXBpc3QgaGFzIHRoZWlyIG93biB1bmlxdWUgY2hhbGxlbmdlcy4iV2hldGhlciBpdCdzIGZpbmRpbmcgYSBzZXggd29ya2VyIGZyaWVuZGx5IGJhbmsgKG1hbnkgYmFua3Mgd2lsbCBjbG9zZSBhY2NvdW50cyBpZiB0aGV5IGZpbmQgb3V0IHRoZSBtb25leSBoYXMgY29tZSBmcm9tIHRoZSBhZHVsdCBpbmR1c3RyeSksIGEganVkZ21lbnQgZnJlZSBkb2N0b3Igb3IgZ3luZWNvbG9naXN0LCBvciBlbWVyZ2VuY3kgaG91c2luZywgRmF5IHNhaWQgdGhlIG5vbnByb2ZpdCBpcyB0aGVyZSB0byBoZWxwLiAKQWRkIEhhcnJ5IFJSSUYgZHJhd2Rvd24gb2YgJDU2MCBwZXIgbW9udGggYW5kIHRoZXkgd291bGQgaGF2ZSBwcmUgdGF4IG1vbnRobHkgaW5jb21lIG9mICQxMCw4ODQgb3IgJDEzMCw2MDggcGVyIHllYXIuIApBIHJlYWRlciBvbmNlIHJlY29tbWVuZGVkIGRpY2luZyBhbmQgY29va2luZyB1cCBhIHdob2xlIHBhY2thZ2Ugb2YgYmFjb24sIHRoZW4gZnJlZXppbmcgaXQgaW4gc21hbGwgcGFyY2VscyB0aGF0IGNhbiBsYXRlciBiZSBhZGRlZCBpbnRvIHJlY2lwZXMgd2l0aG91dCB0ZW1wdGluZyB5b3UgdG8gdXNlIHRoZSB3aG9sZSBwYWNrYWdlLi4gClRoZSBiZXN0IHRoaW5nIHlvdSBjYW4gZG8gbm93IGlzIGVuYWN0IHN3aWZ0LCBoYXJzaCBjb25zZXF1ZW5jZXMsIGJlY2F1c2Ugb3RoZXJ3aXNlIHNoZSB3aWxsIGtlZXAgcHVzaGluZywgdG8gc2VlIHdoYXQgc2hlIGNhbiBnZXQgYXdheSB3aXRoLi4gClNpIHZvdXMgY29ubmFpc3NleiBsZXMgY2xhc3NlbWVudHMgY2xhc3NpcXVlcyBkZSBtYWlucyBhdSBwb2tlciwgbGEgc2V1bGUgZGlmZnJlbmNlIHZpZW50IGR1IGZhaXQgcXVlIGxhIHN1aXRlIGVzdCBkZXZhbnQgbGEgY291bGV1ci4gCklmIHRoZXkgc3RhcnQgdG8gZG91YmxlIGJhcnJlbCB0aGV5IGVpdGhlciBoYXZlIGl0IG9yIGhhdmUgY2F1Z2h0IG9uIHRvIHlvdS4gCkRvbid0IGNvbnRhY3QgbWUgYWdhaW4uIApUaGUgbGF0dGVyIGp1c3QgZGlkbiBjaGFuZ2UgdGhpbmdzIGZvciBtZSBhcyBmYXIgYXMgd2hhdCBJIHRoaW5rLCB3aGljaCBpcyB0aGF0IGhlIG1vc3QgbGlrZWx5IGRpZCBkbyBpdCBidXQgSSBkb24gaGF2ZSB0aGUgZXZpZGVuY2UgYW5kIGNhbiBiZSAxMDAlIHN1cmUuLiAKSSBkaWQgbm90LiBXaGVuIHlvdSB3ZXJlIHRha2luZyB0aXBzLCBwZXJmZWN0bHkgbGVnYWwuIApUaGUgcG9pbnQgSSB0cnlpbmcgdG8gbWFrZSBpcyB0aGF0IGl0IHF1aXRlIGxvZ2ljYWwgZm9yIHBlb3BsZSB0byBoYXRlIHRoZSBnYW1lLiAKTXkgYm9vayBBbmFsIFNleCBTZWNyZXRzIGlzIGEgZ3VpZGUgdG8gZ3JlYXQgYW5hbCBzZXggZm9yIGJvdGggYW5hbCBzZXggYmVnaW5uZXJzIGFuZCBmb3IgY291cGxlcyB3aG8gYXJlIHNlYXJjaGluZyBmb3IgbmV3IHRoaW5ncyB0byB0cnkuIEdlbmVyYWxseSwgZm9yIHdvbWVuLCB0aGUgcGxlYXN1cmUgZGVyaXZlZCBmcm9tIGFuYWwgaW50ZXJjb3Vyc2UgaXMgZHVlIHRvIHRoZSBzaGFyZWQgbmVydmUgZW5kaW5ncyBsb2NhdGVkIGJldHdlZW4gdGhlIHJlY3RhbCB3YWxsIGFuZCB0aGUgdmFnaW5hLCBhbmQvb3IgZnJvbSBpbmRpcmVjdCBzdGltdWxhdGlvbiBvZiB0aGUgRyBzcG90LiAKWW91cmUgbG9va2luZyB0byBnZXQgdmFsdWUgZnJvbSBhIHRlbiB3aGVuIHlvdSBiZXQuIGlkZWFsbHkgeW91IHdvdWxkIHdhbnQgdG8gY2hlY2sgdGhlIGZsb3AgYmVjYXVzZSB5b3Ugc21hc2ggaXQuIGl0cyBsZXNzIGxpa2VseSBmb3Igc29tZW9uZSBlbHNlIHRvIGhhdmUgYW55dGhpbmcgcmVhbGx5IChiZXNpZGVzIGEgMTApLiB3aGVuIHRoZSB0dXJuIGlzIGFuIDgsIGlkIGNoZWNrIGFnYWluLCBiZWNhdXNlIHlvdSBibG9jayBoaW0gZnJvbSBoYXZpbmcgYSB3b3JzZSBmdWxsIGhvdXNlIG5vdyBpZiBoZSBoYWQgYSBoYW5kIGxpa2UgMTA4Snh4LiBpdHMgYSBzaGl0dHkgc3BvdCBhbmQgaWQgcHJvYmFibHkgdGlsdCBjYWxsIG15c2VsZiBhbmQgaW0gc3VyZSBtb3N0IHBlb3BsZSBJVFQgd291bGQsIGJ1dCBiZWNhdXNlIHRoZXkgYXJlIHRyeWluZyB0byBhY3QgbGlrZSBQTE8gc2F2YW50cyBvbmxpbmUgdGhleWxsIHRlbGwgeW91IG90aGVyd2lzZS4KSSBsaXZlIHJpZ2h0IG5lYXIgdGhlcmUgYW5kIGhhdmUgYWxzbyBiZWVuIGJhZmZsZWQgYnkgdGhpcyB0cmVuZCwgZXNwZWNpYWxseSBzaW5jZSBpdCBzZWVtZWQgdG8gaGFwcGVuIG92ZXJuaWdodCwgcmF0aGVyIHRoYW4gYnVpbGQgcG9wdWxhcml0eSBvdmVyIHRpbWUuIApRdWljayBhbnN3ZXJzIGluIHlvdXIgYWRkcmVzcyBiYXIsIG9uZSBjbGljayB0cmFuc2xhdGlvbiwgYW5kIHBlcnNvbmFsaXplZCBhcnRpY2xlcyBmb3IgeW91IG9uIHlvdXIgcGhvbmUuIERvd25sb2FkIEdvb2dsZSBDaHJvbWUgZm9yIFdpbmRvd3Mgbm93IGZyb20gU29mdG9uaWM6IDEwMCUgc2FmZSBhbmQgdmlydXMgZnJlZS4gClNvIHdoYXQgZG8geW91IHRoaW5rPyBTaG91bGQgSSBnbyBwcm8/IFdoYXQgd291bGQgeW91IGRvIGluIG15IHBvc2l0aW9uPy4gCkhhdmluZyB5b3VyIGluZmFudHJ5IGJyaWdhZGVzIGRldGFjaCBza2lybWlzaGVycyBhcmUgdmVyeSB1c2VmdWwgYnV0IHJlYWxseSBkZXRyYWN0IGZyb20gdGhlbS4gClRoZSBkcml2ZSB0byBCZXJsaW4gdG9vayBtb3N0IG9mIHRoZSBkYXksIGJlY2F1c2UgYXBwYXJlbnRseSBldmVyeSBHZXJtYW4gd2FzIGFsc28gdHJhdmVsaW5nLiBWaXNpdGVkIHdoYXQgaXMgbGVmdCBvZiB0aGUgQmVybGluIFdhbGwuIFdlbnQgdG8gQ2hlY2twb2ludCBDaGFybGllIGFuZCB0aGUgbXVzZXVtIHRoYXQgbm93IHN0YW5kcyB0aGVyZSwgc2l0ZSBvZiB0aGUgZm9ybWVyIGNoZWNrcG9pbnQgYmV0d2VlbiBXZXN0IGFuZCBFYXN0IEJlcmxpbi4gCkVpZ2VuZXIgV2VyYnVuZyBoYW5kZWx0IGVzIHNpY2ggYmVpbSBkZSBsYSBTZWRhIGluIEVsIFBhbHNvIHVtIGRhcyBlaW56aWdlIFNlaWRlbm11c2V1bSBFdXJvcGFzLiBFcyBpc3QgYWJlciBuaWNodCBudXIgTXVzZXVtLCBzb25kZXJuIGF1Y2ggV2Vya3N0YXR0IGZyIGt1bnN0aGFuZHdlcmtsaWNoZSBTZWlkZW5oZXJzdGVsbHVuZyB1bmQgIHZlcmFyYmVpdHVuZy4gCk5lYnJhc2thIGhhcyBhYm91dCAyMDAgcHJvZmVzc2lvbnMgdGhhdCByZXF1aXJlIHN0YXRlIGxpY2Vuc2VzLCByYW5naW5nIGZyb20gcG90YXRvIHNoaXBwZXJzIGFuZCBhdGhsZXRpYyB0cmFpbmVycyB0byBlbGV2YXRvciByZXBhaXIgdGVjaG5pY2lhbnMgYW5kIGRvY3RvcnMuIApJbWxhbTMgIDMgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpWQUxFTlRJTiBQT1BPVidzIE9iaXR1YXJ5IGJ5IHRoZSBUaGUgUGxhaW4gRGVhbGVyClBlb3BsZSBzaG91bGQgaGF0ZSBhIGdhbWUgdGhhdCBzZXQgdXAgdG8gdGhlaXIgZGlzYWR2YW50YWdlLiBEYXRpbmcgaXMgb25lIG9mIG1hbnkgb3RoZXIgcG9vcmx5IGFuZCB1bmZhaXJseSBzZXQgdXAgc3lzdGVtcyBiYXNlZCBvbiBzb21lIHByZXR0eSByaWRpY3Vsb3VzLCBhbmQgdmVyeSBvbGQgaWRlYXMgYWJvdXQgZ2VuZGVyIHJvbGVzLiAKVGhhdCBtdWNoIHN0YXR1cyB3b3VsZCBwcmV0dHkgbXVjaCBiZSBhIGRyZWFtIGZvciBtZS4gCkV4Y2VwdCB0aG9zZSB0aW1lbGluZXMgYXJlIHZhc3RseSBkaWZmZXJlbnQuIE9uZSB3ZWVrIGNvbXBhcmVkIHRvIDMgbW9udGhzPyBNb3N0IGJldGFzIGZvciBvbmxpbmUgKGxpa2UgR1RBTykgaGF2ZSBhIHRyaWFsIGJldGEgZm9yIGFyb3VuZCBhIHdlZWsgb3IgdHdvLiBSRFIyTyBoYXMgYmVlbiBpbiAiYmV0YSIgZm9yIG92ZXIgdGhyZWUgbW9udGhzIG5vdyB3aGlsc3Qgc2VsbGluZyBtaWNyb3RyYW5zYWN0aW9ucyB3aXRob3V0IGEgc2Vjb25kIHRob3VnaHQuIExvb2ssIEkgbG92ZSB0aGUgc2luZ2xlIHBsYXllciBnYW1lIGFuZCBpdCdzIG9uZSBvZiBteSBmYXZvcml0ZXMgYnV0IHlvdSBoYXZlIHRvIGJlIGZvb2xpbmcgeW91cnNlbGYgaWYgeW91IGNhbid0IHNlZSB0aGV5J3JlIGRlc2lnbmluZyBtdWx0aXBsYXllciBmb3IgdGhlIG1haW4gZ29hbCBvZiBzZWxsaW5nIG1pY3JvdHJhbnNhY3Rpb25zLgpbTV0gIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMSBtb250aCBhZ29Jbml0aWFsbHkgdGhpcyBwb3N0IHdhcyBub3QgYXBwcm92ZWQsIGJ1dCBhZnRlciBtb2QgZGlzY3Vzc2lvbiwgc2luY2UgYW5vdGhlciBzaW1pbGFyIHBvc3Qgd2FzIGFwcHJvdmVkLCB3ZSBkZWNpZGVkIHRvIGFwcHJvdmUgcG9zdHMgdGhhdCBhaW0gdG8gdHJ5IGFuZCBoZWxwIG91ciBmZWxsb3cgbWFzc2FnZSB0aGVyYXBpc3RzLlNlbGYgYWR2ZXJ0aXNpbmcsIGJ1c2luZXNzIGFkdmVydGlzaW5nIHBvc3RzIGFyZW4gYWxsb3dlZCwgc28gaWYgeW91IGd1eXMgdGhpbmsgaWYgdGhlcmUgYXJlIHNpbWlsYXIgcG9zdHMgdGhhdCBoYXZlIHZlcnkgaGlnaCBhZ2VuZGEgaW4gYWR2ZXJ0aXNpbmcgaW5zdGVhZCBvZiB0cnlpbmcgdG8gZ2l2ZSBhZHZpY2UgYW5kIGhlbHAsIHBsZWFzZSBsZXQgdXMga25vdyB0aHJvdWdoIHRoZSByZXBvcnQgYnV0dG9uIG9yIG1lc3NhZ2UgdGhlIG1vZHMuW01dICAwIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvdGhlIG90aGVyIHBvc3Qgd2FzbiBwdXNoaW5nIHByb2R1Y3RzIGJ1dCBpdCB3YXMgYSBzZWxmIGFkdmVydGlzaW5nIGZvciB0aGVpciBvd24geW91dHViZSBjaGFubmVsLmJvdGggYXJlIHNpbWlsYXIgaW4gYWR2ZXJ0aXNpbmcgcG9zdCwgaG93ZXZlciB3ZSBzZWUgdGhhdCB0aGVyZSBpcyBhIHBvc3NpYmlsaXR5IGl0IGNvdWxkIGJlIGJlbmVmaWNpYWwgdG8gdmlld2Vycy5pdCBkb2VzIGhhdmUgMTAgdXB2b3Rlcywgc28gc29tZSBwZW9wbGUgZG8gdGhpbmsgaXQgYmVuZWZpY2lhbC53ZSB3aWxsIGtlZXAgYSBkaXNjdXNzaW9uIGJldHdlZW4gdGhlIG1vZHMgYW5kIGRlY2lkZSBob3cgd2Ugc2hvdWxkIGVuZm9yY2UgdGhpcyBydWxlLCBpZiBhbiBhZHZlcnRpc2luZyBwb3N0IGlzIGJlbmVmaWNpYWwsIHRoYXQgd2Ugc2hvdWxkIHJlbW92ZSBvciBub3QuOCBCaXRCYWtlciAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb0kgaGF2ZSBhY3R1YWxseSBmb3VuZCBpbiB0aGUgbGFzdCB5ZWFyIHRoYXQgc2FsdCByZWFsbHkgZG9lcyBoYXZlIGEgZGlmZmVyZW50IHRhc3RlIHRvIGl0IHZlcnN1cyBwbGFpbiBvbGQgdGFibGUgc2FsdC4gUmVndWxhciBzYWx0ICh0YWJsZSBzYWx0KSBpcyBpb2RpemVkLCB3aGljaCBnaXZlcyBpdCBhIGRpZmZlcmVudCB0YXN0ZS4gVGhpbmdzIGxpa2Ugc2VhIHNhbHQgb3Iga29zaGVyIHNhbHQgZG8gbm90IGhhdmUgdGhhdCBzYW1lIHRhc3RlIGFuZCBJIHRoaW5rIGFjdHVhbGx5IGFyZSBtdWNoIHN0cm9uZ2VyIGFuZCBoYXZlIGEgYmV0dGVyIGZsYXZvci4gCkJha3RydSB1CkFzIE1vc2NvdyBvcmRlcmVkIGl0cyBzaGlwcyB0byBtb3ZlIGNsb3NlciBvbiBTeXJpYSB0byBtYXJrIGFuIGluY3JlYXNlZCBwcmVzZW5jZSBpbiB0aGUgYWZ0ZXJtYXRoIG9mIHRoZSBUb21haGF3ayBhdHRhY2ssIHRoZSBVUyBtb3ZlZCBhIENhcnJpZXIgR3JvdXAgaW50byBLb3JlYW4gd2F0ZXJzLiBUaGUgdHdvIGNvbXBldGluZyBwb3dlcnMgbW92ZWQgaW4gYSBnYW1lIG9mIG51Y2xlYXIgcG9rZXIsIGNoYWxsZW5naW5nIGVhY2ggb3RoZXIgaW5mbHVlbmNlIGluIHR3byBkaXNwYXJhdGUgc2lkZXMgb2YgdGhlIHdvcmxkLiBSdXNzaWEgYW5ub3VuY2VkIHRvIHRoZSB3b3JsZCBpdHMgcmVhZGluZXNzIHRvIGRlZmVuZCBhbmQgc2VjdXJlIHdoYXQgaGFzIGJlZW4gaXRzIHRyYWRpdGlvbmFsIGFyZWEgb2YgaW5mbHVlbmNlLiBNZWFud2hpbGUsIHRoZSBVUyBjb3VudGVyYWN0ZWQgYnkgY2hhbGxlbmdpbmcgc3VjaCBSdXNzaWFuIGV4Y2x1c2l2ZW5lc3MgZXZlbiBhcyB0aGV5IHNlY3VyZWQgdGhlaXIgb3duIGludGVyZXN0cy4KVGhlIHNhZmV0eSBib2FyZCBoYXMgYmVlbiBjYWxsaW5nIGZvciBvbiBib2FyZCByZWNvcmRlcnMgZm9yIHllYXJzLi4gCidJIHN1cHBvcnQgTXVzbGltIHdvbWVuIHdpdGggb3Igd2l0aG91dCBoaWphYic6IEFtbmEncyBwb3N0IGluIGZ1bGwKSXQgaXMgZ29vZCB5b3UgYXJlIGFuYWx5emluZyBwaGVub21lbmEgICB0aGF0IGlzIGFuIGVzc2VudGlhbCBwYXJ0IG9mIHZpcGFzc2FuYS4gSnVzdCBtYWtlIHN1cmUgdGhhdCB5b3UgbGVhdmUgbG9naWNhbCB0aGlua2luZyBmb3Igd2hlbiB5b3Ugc3R1ZHkgdGhlIHN1dHRhcy4KQnkgVGltIERhaGxiZXJnLApBbiBGQzJJRCBhcHBsaWNhdGlvbiBjb25zdGl0dXRlcyBGQzIgbGVuZGluZyBhIFVzZXIgSUQgYW5kIHBhc3N3b3JkLCBuZWNlc3NhcnkgZm9yIHVzZSBvZiBPdXIgU2VydmljZS4gSG93ZXZlciwgaW4gdGhlIGV2ZW50IHRoYXQgaW5mb3JtYXRpb24gc3VwcGxpZWQgYnkgdGhlIFVzZXIgZHVyaW5nIGFwcGxpY2F0aW9uIGNvbnRhaW5zIGZhbHNlaG9vZHMsIG9yIGluIHRoZSBldmVudCB0aGF0IEZDMiBjb25jbHVkZXMgdGhhdCBhIFVzZXIgdXNlIG9mIEZDMklEIGlzIGluYXBwcm9wcmlhdGUsIEZDMiByZXRhaW5zIHRoZSByaWdodCB0byBjYW5jZWwgYW55IE1lbWJlcnMgRkMySUQuIEZDMiBpcyBub3Qgb2JsaWdhdGVkIHRvIG5vdGlmeSB0aGUgTWVtYmVyIGFib3V0IHRoZSBjYW5jZWxsYXRpb24uLiAKQWxsIHdlIGNhbiByZWFsbHkgZG8gaXMgdGVzdCBmb3IgYSByZWFzb25hYmxlIGFtb3VudCBvZiB0aW1lIGJlZm9yZSBkZWNsYXJpbmcgdGhlIGZvb2Qgc2FmZSBmb3IgaHVtYW4gY29uc3VtcHRpb24uIENvdWxkIGl0IGhhdmUgc2lkZSBlZmZlY3RzIGxhdGVyPyBJdCB1bmxpa2VseSBhZnRlciB0aG9yb3VnaCB0ZXN0aW5nLCBidXQgbWF5YmUuIFNob3VsZCB3ZSBzdGlsbCBtb2RpZnkgZm9vZHMgZm9yIGNvbnZlbmllbmNlPyBJIHNheSB5ZWFoLCB0aGUgcHJvcyBvdXR3ZWlnaCB0aGUgY29ucy4KSXQgd2FzIGF0IHRoaXMgcG9pbnQgdGhhdCBvdXIgc3VwZXJ0aWx0aW5nIGZyaWVuZCBncmFiYmVkIGhpcyByYWNrcyBvZiBjaGlwcyAodGhhdCB3ZXJlIHN0aWxsIGluIGZyb250IG9mIGhpbSkgYW5kIGF0dGVtcHRlZCB0byBzcHJpbnQgb3V0IG9mIHRoZSByb29tLgpUaGVuIHlvdSBqdXN0IGtlZXAgeW91ciBtb3V0aCBzaHV0IGFib3V0IHdhciBhbmQgdGhlbiBzb21lb25lIHNvbWUgZGF5IGFza3MgeW91IGFib3V0IGl0IGxpa2UgdGhleSBhcmUgZ29pbmcgdG8gaGF2ZSBhIGNoYXQuICJIZXkgU2hhbmUgSSBkaWRuIGtub3cgeW91IHdlbnQgdG8gSXJhcSwgd2h5IGRpZG4geW91IHNheSBzb21ldGhpbmcsIG15IGZyaWVuZCBqb2luZWQgYm9vdCBjYW1wIGJ1dCBodXJ0IGhpcyBhbmtsZSBzbyBjYW1lIGhvbWUgZWFybHkuIApMb2NhdGVkIG9uIHRoZSBib2FyZHdhbGsgc2lkZSBvZiB0aGUgY2FzaW5vIGlzIHRoZSBBc2lhbiBnYW1pbmcgYXJlYSBQYWxhY2UgRWFzdC4gSXRzIGRlc2lnbiBpcyBpbmZsdWVuY2VkIGJ5IEljb25vZ3JhcGh5OyB0aGUgZGlyZWN0aW9uLCBhbmQgdGhlIHBsYWNlbWVudCBvZiBlbGVtZW50cywgdG8gaW5mbHVlbmNlIHBsYXllcnMnIGx1Y2sgYW5kIHRvIGNyZWF0ZSB0aGUgbHVja2llc3Qgc2VhdGluZyBpbiB0aGUgZ2FtaW5nIHBpdC4gUGx1cywgY2hlY2sgb3V0IENhZXNhcnMgc3BlY3RhY3VsYXIgbmV3IFBva2VyIEFyZW5hLiBDb21lIGV4cGVyaWVuY2UgdGhlIHVsdGltYXRlIGluIGx1eHVyaWVzLCBvZmZlcmVkIGJ5IHRoZSBtb3N0IGxlZ2VuZGFyeSBuYW1lIGluIGdhbWluZy4gQSAkMTAgbWlsbGlvbiByZW5vdmF0aW9uIGhhcyBnaXZlbiBDYWVzYXJzIENpcmN1cyBNYXhpbXVzIFRoZWF0ZXIgYSBzdHVubmluZyBuZXcgbG9vazsgd2l0aCBtb3JlIHRoYW4gMTUwMCBzdGFkaXVtIHN0eWxlIHNlYXRzLCBhIGZ1bGwgc2VydmljZSBiYXIgYW5kIHRoZSBtb3N0IHVuYmVsaWV2YWJsZSBzb3VuZCBzeXN0ZW0geW91J3ZlIGhlYXJkIHRvIGRhdGUuIEVuam95IHRoZSBiaWdnZXN0IG5hbWVzIGZyb20gdGhlIHdvcmxkIG9mIG11c2ljLCBlbnRlcnRhaW5tZW50LCBhbmQgYXRobGV0aWNzLiBGcm9tIGNsYXNzaWMgYmFsbGFkcyB0byByb2NrIG4gcm9sbCB0byBjb21lZHksIHRvcCBuYW1lIHN0YXJzIGFuZCB3b3JsZCByZW5vd25lZCBoZWFkbGluZXJzIGVudGVydGFpbiBhdCB0aGUgZW1waXJlIHJlZ3VsYXJseSBpbiBvdXIgQ2lyY3VzIE1heGltdXMgVGhlYXRlci4KSXQgc3RhcnRlZCBiZWNhdXNlIG9mIHRoZSBzcGVlZCB3aXRoIHdoaWNoIHRoZSBjb3VudHJ5IG1vZGVybmlzZWQgYW5kIGdvdCByaWNoLCBhbG9uZyB3aXRoIG1hc3NpdmUgYW1vdW50cyBvZiB1cmJhbiBtaWdyYXRpb24gYW5kIHRoZWlyIHN1ZGRlbiBjaGFuZ2VzIHRvIGZhbWlseSBzdHJ1Y3R1cmUgdGhhbmtzIHRvIHRoZSBvbmUgY2hpbGQgcG9saWN5LiBJbWFnaW5lIGFsbCB0aGUgcG9vciByZWRuZWNrcyBpbiB0aGUgVVMgYmFjayBpbiB0aGUgMTkzMHMgc3VkZGVubHkgbW92aW5nIGludG8gdGhlIGNpdGllcyBhbmQgZXhwZXJpZW5jaW5nIGNpdHkgbGlmZSBmb3IgdGhlIGZpcnN0IHRpbWUuIApCZXNvbmRlcnMgd2lyZCBkaWVzZSBOYWNocmljaHQgZGllIFBva2VycnVtZSBmcmV1ZW4sIGRpZSBpaHJlbiBHZXNjaGZ0c3NpdHogaW4gR2licmFsdGFyIG9kZXIgRmxvcmlkYWhhYmVuIHVuZCBkYXp1IGdlaHJlbiBQYWNpZmljIFBva2VyIHVuZCBQYXJ0eSBHYW1pbmcuIApTb21ldGltZXMgaXQgaXMganVzdCBvbmUgdGltZSBhY3Rpb24gZGV2b3RlZCB0byB0aGUgYmlydGhkYXkgb2YgdGhlIGNhc2lubyBvciBzb21lIG90aGVyIGV2ZW50cy4gT3RoZXIgY2FzaW5vcyBwcmFjdGljZSBzdWNoIGV2ZW50cyBhcyB0aGUgbWFpbiBpbmNlbnRpdmUgbWV0aG9kIHRvIGVudGljZSB0aGUgcGxheWVycy4gClRoZXJlIG5vdGhpbmcgc3RvcHBpbmcgU3BpZGV5IGZyb20ganVzdCBhYnVzaW5nIGhpcyB3ZWJzIHVudGlsIERla3UgY2FuIGRvIGFueXRoaW5nLi4gCldlIHNraXBwZWQgbmF0aW9uYWxzIG9uZSB5ZWFyIHRvIGdvIG1hcmNoIGluIGEgYm93bCBnYW1lIHBhcmFkZSBvdXQgd2VzdCAod2UgY291bGQgb25seSBhZmZvcmQgdG8gZG8gb25lIGFuZCB0aGUgdm90ZSBiYXJlbHkgc3F1ZWFrZWQgYnkpIGJ1dCBvdXIgc2hvdyB3YXMgc28gc3Ryb25nIHRoYXQgeWVhciB0aGF0IHRvIHRoaXMgZGF5IEkgb2NjYXNpb25hbGx5IHdvbmRlciBpZiB0aGF0IHdhcyB0aGUgc2hvdyB0aGF0IHdvdWxkIGhhdmUgZ290dGVuIHVzIGludG8gZmluYWxzLiBXZSBjYW1lIGNsb3NlIHRoZSBvdGhlciB5ZWFycywgc29tZXRpbWVzIG1pc3NpbmcgaXQgYnkgYSBmcmFjdGlvbiBvZiBhIHBvaW50LCBidXQgbmV2ZXIgbWFkZSBpdC4gQW5kIHRoZSByZWFsIHNhZCBwYXJ0IGlzIHRoYXQgc2hvcnRseSBhZnRlciBJIGdyYWR1YXRlZCB0aGUgcHJvZ3JhbSB3YXMgYmFzaWNhbGx5IGRpc21hbnRsZWQgd2hlbiB0aGV5IGN1dCBhbGwgYXJ0cyBwcm9ncmFtIGJ1ZGdldHMuIFRoZSBvbmUgZ29vZCB0aGluZyBteSBzY2hvb2wgaGFkIGFuZCB0aGV5IHJ1aW5lZCBpdC4KT25saW5lIEdhbWJsaW5nIEdldHMgU2FmZXIgYW5kIEVhc2llciBXaXRoIEZvYmV0IDg4ClNlbi4gRGVicmEgUGxvd21hbiwgUiBIYW1wZGVuLCBhcG9sb2dpemVkIHRvIHRoZSBvcHBvbmVudHMsIHNheWluZyB0aGUgaW50ZW50IG9mIHRoZSBjb21taXR0ZWUgd2FzIG5vdCB0byBnaXZlIGEgZ3JlZW4gbGlnaHQgdG8gYWxsb3cgSW50ZXJuZXQgc2FsZXMgYnV0IHRvIGFsbG93IHRoZSBkZXZlbG9wbWVudCBvZiBhIHByb3Bvc2FsIGZvciB0aGUgbmV4dCBzZXNzaW9uIG9mIHRoZSBMZWdpc2xhdHVyZSB0byBjb25zaWRlci4KSXNpb25vdXMgdQpIZSBhbHNvIHNheXMgaGUgaGFzIGhpcyBvd24gY3JldyBvZiBjb250cmFjdG9ycyB0byBkbyB3b3JrIG9uIHRoZSBob21lcy4uIApBIExhZmF5ZXR0ZSBtYXNzYWdlIHRoZXJhcGlzdCBoYXMgYmVlbiBhcnJlc3RlZCBhZnRlciBwb2xpY2Ugc2F5IGhlIHNleHVhbGx5IGFzc2F1bHRlZCB0d28gZmVtYWxlIGNsaWVudHMgZWFybGllciB0aGlzIHllYXIuClRoYXQncyBhbHJpZ2h0LCBpdCdzIGEgaGFyZCB0aW1lIHRvIGJlIHBvc2l0aXZlIGZvciBhIGxvdCBvZiBwZW9wbGUuIFdlIGhhdmUgYSBzeXN0ZW0gd2hpY2gsIHRocm91Z2ggaXRzIGZsYXdzLCBvZnRlbiB0YWtlcyBhZHZhbnRhZ2Ugb2YgdGhlIGxpdHRsZSBndXlzIGFuZCBrZWVwcyB0aGVtIHB1c2hlZCBpbnRvIHRoZSBkaXJ0LiAKTVkgVEFLRUFXQVk6IFRha2UgTWFnbmVzaXVtIHRvIGhlbHAgeW91IHNsZWVwIHJlc3RmdWxseSB0aHJvdWdob3V0IHRoZSBuaWdodCBhbmQgZGUgc3RyZXNzLgpUb3Agc3Rha2UgbGltaXQgdGFibGVzIGFyZW4ndCB0aGUgcGxhY2UgdG8gZWFybiBtb25leS4gSXQgaXMgcmF0aGVyIGEgcGxhY2Ugd2hlcmUgeW91IGNhbiBibG93IGxhcmdlIGFtb3VudHMgb2YgbW9uZXkuIFNldHRpbmcgdXAgYSBiZXR0aW5nIGxpbWl0IGV2ZW4gaWYgeW91IGFyZSBwbGF5aW5nIHdpdGggJDEgMiBvciAkMiA0IGJsaW5kcyBhbmQgc3RpY2tpbmcgdG8geW91ciBsaW1pdCBpcyB0aGUgYmVzdCB3YXkgdG8gcGxheS4gWW91IHdpbGwgYmUgYWJsZSB0byBlbmpveSBpdCBiZXR0ZXIgaWYgcGxheSBsb25nZXIgZXZlbiBpZiB5b3UgYXJlIG9uIGEgbG9zaW5nIHN0cmVhay4KQSByb29raWUgbWlzdGFrZSBzb21ldGltZXMgb2NjdXJzIGhlcmUuIApJZiBhIHBva2Vtb24gd2l0aCBzeW5jaHJvbml6ZSBpcyB0aGUgZmlyc3QgcG9rZW1vbiBpbiB5b3VyIHBhcnR5KGZhaW50ZWQgb3Igbm90IGRvZXNuIG1hdHRlcikgdGhlIHdpbGQgcG9rZW1vbiBoYXMgYSA1MCUgY2hhbmNlIHRvIGJlIHRoZSBzYW1lIG5hdHVyZSBhcyB0aGUgcG9rZW1vbiB3aXRoIHN5bmNocm9uaXplLiAKQmxhY2ggaGFkIGEgc2Vhc29uIHdvcnRoIGNoZWVyaW5nIGF0IFRyaXBsZSBBIFNhY3JhbWVudG8uIFRoZSAyNSB5ZWFyIG9sZCBDcmVpZ2h0b24gYWx1bW51cyB3ZW50IDE0IDcgd2l0aCBhIDMuNDMgRVJBLCBhbmQgbGVkIHRoZSBQYWNpZmljIENvYXN0IExlYWd1ZSBpbiBib3RoIHdpbnMgYW5kIGlubmluZ3MgcGl0Y2hlZCAoMTYyIDIvMykuCkF0IHRoaXMgcG9pbnQsIGFueW9uZSBzZXJpb3VzIGFib3V0IGNyZWF0aW5nIFNpbXBsaWNpdHkgcHJvZ3JhbXMgaXMgZ29pbmcgdG8gZmlyc3Qgd2FudCB0byBkZXZlbG9wIHNvbWUgZnJvbnQgZW5kIGxhbmd1YWdlIHRoYXQgZ2VuZXJhdGVzIG9yIGNvbXBpbGVzIHRvIFNpbXBsaWNpdHkuIFRob3NlIHBlb3BsZSBhcmUgZ29pbmcgdG8gY2FyZSBtb3JlIGFib3V0IHRoZSBzZW1hbnRpY3Mgb2YgU2ltcGxpY2l0eSB0aGFuIGFib3V0IGV4YW1wbGUgcHJvZ3JhbXMsIHdoaWNoIGlzIHdoeSB0aGUgdHlwaW5nIHJ1bGVzIGFuZCBmdW5jdGlvbmFsIHNlbWFudGljcyBvZiBTaW1wbGljaXR5IHRha2VzIGNlbnRyZSBzdGFnZS4uIApBIGxvdCBvZiBncmVhdCBUZXhhcyBIb2xkZW0gcGxheWVycyBhbHNvIHRyeSB0aGVpciBoYW5kIGluIHBsYXlpbmcgT21haGEuIEV2ZW4gaWYgdGhlc2UgcGxheWVycyBhcmUgbm90IHNvIGZhbWlsaWFyIHdpdGggT21haGEsIHRoZXkgcGxheSB0aGVpciBoYW5kcyBhdCBoaWdoIGxpbWl0cyBiZWNhdXNlIHRoZXkgYXJlIGdyZWF0IGF0IEhvbGRlbSBwb2tlci4gVGhlIHByb2JsZW0gaXMgdGhlc2UgcGxheWVycyBsb29zZSBhZnRlciBqdXN0IG9uIGZsb3AuIApJIGhhdmluZyBhIGxvdCBvZiB0cm91YmxlIHNvcnRpbmcgb3V0IGFkdmFuY2VkIGNvbmNlcHRzIGxpa2UgJXZhbHVlIGhhbmRzIHZzLiAKQXMgYSBydWxlIG9mIHRodW1iLCB5b3Ugc2hvdWxkIG5vdCB1c2UgYWx0ZXJuYXRpdmUgdHJlYXRtZW50cyBsaWtlIG1hc3NhZ2UgaWYgdGhlcmUgaXMgYW4gYWN0aXZlIGluZmVjdGlvbiBwcmVzZW50IGluIHRoZSBhcmVhIG9mIHRoZSBza2luLi4gCkkgZmVlbCBsaWtlIHRoZXJlIHNvIG11Y2ggbW9yZSBwbGFubmluZyByZXF1aXJlZCBub3cgdGhhbiA1IG9yIDYgeWVhcnMgYWdvLiAKQXJlYSBkZW50aXN0L3Bob3Rvam91cm5hbGlzdCBEci4gTWlrZSBMYW5vIHdhcyBhIGxvbmd0aW1lIEV4YW1pbmVyIHNwb3J0cy9hcnRzIGNvbHVtbmlzdCBhbmQgc3RpbGwgaG9zdHMgaGlzIG5hdGlvbmFsbHkgc3luZGljYXRlZCBDQlMgYW5kIFNpcml1c1hNIFJhZGlvIFNob3dzLiAKU293YXMgbWFjaGVuIG1laHIgTGV1dGUsIGFscyBtYW4gZ2xhdWJ0LiBNYW4ga2FubiBkYSBzY2huZWxsIHJlaW5ydXRzY2hlbi4gCkFjYWRlbWljcyB3aWxsIGRpc2N1c3MgYW5kIHNoYXJlIHRoZWlyIGxhdGVzdCByZXNlYXJjaCBhbmQgZmluZGluZ3MgaW4gdGhlIGluZm9ybWFsIGF0bW9zcGhlcmUgb3V0c2lkZSBvZiB0aGUgdXN1YWwgbGVjdHVyZSB0aGVhdHJlcywgZ2l2aW5nIG91ciBhbHVtbmkgY29tbXVuaXR5IGEgY2hhbmNlIHRvIG1lZXQgc29tZSBvZiB0aGUgcGVvcGxlIGhlbHBpbmcgbGVhZCB0aGUgd2F5IGluIHNjaWVuY2UgYW5kIGFydHMuLiAKV2UgbmVlZCB0aGUgaW5mb3JtYXRpb24gYWJvdXQgYWxsIHRoZSBwcmludHMgaW4gdGhlIFJBViwgd2UgbmVlZCBzZXJpb3VzIEROQSBhbmFseXNpcyBvbiBhbnkgcmVtYWlucyBub3cgdGhhdCB0ZWNobm9sb2d5IGhhcyBhZHZhbmNlZC4gCkVpZ2h0IG1vbnRocyBhZ28sIEkgbWV0IHRoZSBmaXJzdCBndXkgSSd2ZSBoYWQgYSByZWFsIGNvbm5lY3Rpb24gd2l0aCBzaW5jZSBnZXR0aW5nIG91dCBvZiBhIGZvdXIgeWVhciByZWxhdGlvbnNoaXAuIApUaGVuLCBoZSBzdHJhcHBlZCBtZSBpbi4gCkRhcyBQcm9zdGl0dXRpb24gamEgZ3J1bmRzdHpsaWNoIHNleGlzdGlzY2ggc2VpLCB3ZWlsIGRpZSBLdW5kZW4gZmFzdCBhdXNzY2hsaWVsaWNoIE1ubmVyIHNlaWVuIHVuZCBkaWUgU2V4YXJiZWl0ZXJJbm5lbiB6dW0gZ3JvZW4gVGVpbCBGcmF1ZW4gKHVuZCBoYWx0IGVpbiBnZXJpbmdlciBUZWlsIE1ubmVyIGZyIE1ubmVyKS4gCk15IHN0cmlmZSB3aXRoIGEgbG90IG9mIGhvdyBwZW9wbGUgYXJlIGlzIHRoYXQgdGhleSBsb3ZlIHRvIGxhYmVsIHRoaW5ncyBhcyBiYWQgb3IgZ29vZCwgYWNjb3JkaW5nIHRvIGhvdyBnZW5lcyB3b3JrLCB0aGVyZSBpcyBubyBiYWQgb3IgZ29vZC4gCkRpZXNlIENvb2tpZXMgaGVsZmVuIHVucyBiZWlzcGllbHN3ZWlzZSBmZXN0enVzdGVsbGVuLCBvYiB1bmQgd2VsY2hlIFVudGVyc2VpdGVuIHVuc2VyZXIgV2Vic2VpdGUgYmVzdWNodCB3ZXJkZW4gdW5kIGZyIHdlbGNoZSBJbmhhbHRlIHNpY2ggZGllIE51dHplciBiZXNvbmRlcnMgaW50ZXJlc3NpZXJlbi4gCkl0J3MgYSBjdWx0dXJhbCBhY3Rpdml0eSB0aGF0IGlzbid0IGJhc2VkIG9uIGVhdGluZyBvciBidXlpbmcsIHNheXMgRG9yaXMuIFNoZSBmZWVscyBpdCdzIHBhcnQgb2Yga2VlcGluZyBhbGl2ZSAidGhlIGhpc3Rvcnkgb2YgQ2hpbmF0b3duIGFuZCB0aGUgY29udHJpYnV0aW9ucyBtYWRlIGJ5IG1hbnkgQ2hpbmVzZSBDYW5hZGlhbnMgdG8gdGhpcyBjaXR5IGFuZCBjb3VudHJ5LiJJbiBzb21lIHdheXMsIHRoZXkgYXJlIGFsc28gbW90aXZhdGVkIGJ5ICJmaWdodHMgZm9yIENoaW5hdG93biIgb2YgdGhlIHBhc3QsIGdvaW5nIGFsbCB0aGUgd2F5IGJhY2sgdG8gdGhlIHN0cmlrZXMgYWdhaW5zdCByYWNpc20gaW4gMTkwNyB0byB0aGUgcHJvdGVzdHMgb2YgdGhlIDE5NzBzIGFnYWluc3QgYSBmcmVld2F5LCBzYXlzIEthdGhyeW4gTGVubm9uLCBhbm90aGVyIG9yZ2FuaXplci4gCkkgYXBvbG9naXplIGZvciB1c2luZyBzb21lIHRvdWdoIGxvdmUgYnV0IEkgc2F5aW5nIHRoZSBmb2xsb3dpbmcgdG8gdHJ5IHRvIGhlbHA6IFlPVSBhcmUgZG9pbmcgdGhpcyB0byB5b3UuIFRoZSBwZXJzb24gYnJlYWtpbmcgaW50byB5b3VyIGhvdXNlIGRpZCBub3QgdmlvbGF0ZSB5b3UsIHRoZXkganVzdCB0ZW1wb3JhcmlseSBpbmhhYml0ZWQgc29tZSBzcGFjZS4gCkhTUzogV0hBVCBJUyBUSEUgRElGRkVSRU5DRSBCRVRXRUVOIFRIRSBUSFJFRSBNT0RBTElUSUVTIFlPVSBPRkZFUiBQT0xBUklUWSwgTUFTU0FHRSwgUkVJS0k/TWFzc2FnZS4gWW91ciBib2R5IGlzIGFjaHkgYW5kIG5lZWRzIHRvIGZlZWwgYmV0dGVyLiBNdXNjbGVzIGFyZSB0aWdodCBvciB5b3UgbmVlZCBnZW5lcmFsIHJlbGF4YXRpb24uIAo4LiBHbHV0ZW4gYWdncmF2YXRlcyBtZW5vcGF1c2FsIHN5bXB0b21zLiBBbGwgZnVuY3Rpb25hbCBtZWRpY2luZSBwcmFjdGl0aW9uZXJzIHdpbGwgYWdyZWUgdGhhdCByZW1vdmluZyBnbHV0ZW4gZnJvbSB0aGUgZGlldCBsb3dlcnMgZHJhbWF0aWNhbGx5IHRoZSBmcmVxdWVuY3kgYW5kIHNldmVyaXR5IG9mIHRoZSBzeW1wdG9tcyB0cmFkaXRpb25hbGx5IGFzc29jaWF0ZWQgd2l0aCBtZW5vcGF1c2Ugc3VjaCBhcyBuaWdodCBzd2VhdHMsIGhvdCBmbGFzaGVzLCBoZWFkYWNoZXMsIG1vb2Qgc3dpbmdzLCBhbmQgZmF0aWd1ZS4KQXMgc2hlIHR1cm5lZCBhd2F5LCBNb250Z29tZXJ5IHNhaWQsIENvbGxpbnMgaGl0IEt1bHBhIGluIHRoZSBiYWNrIG9mIHRoZSBoZWFkIHdpdGggYSBtZXRhbCB0aXBwZWQgc3RpY2sgdXNlZCBhcyBhICJmaXJlIHBva2VyLCIgYWNjb3JkaW5nIHRvIHRoZSBhZmZpZGF2aXQuTW9udGdvbWVyeSB0b2xkIGRldGVjdGl2ZXMgdGhhdCBoZSBzYXcgQ29sbGlucyAidGFrZSBhIGZ1bGwgc3dpbmcsIG9uZSB3aGVyZSBKZWZmcmV5IHB1dCBhIGxvdCBvZiBmb3JjZSBhbmQgZWZmb3J0IGludG8gdGhlIHN3aW5nLCIgYWNjb3JkaW5nIHRvIHRoZSBhZmZpZGF2aXQuTW9udGdvbWVyeSBhbmQgdGhlIGp1dmVuaWxlIGdpcmwgcmFuIHRvIGEgbmVpZ2hib3IncyBob3VzZSB0byBmaW5kIHNvbWVvbmUgd2hvIGNvdWxkIGNhbGwgOTExLCBhbmQgaGUgcmVwb3J0ZWQgc2VlaW5nIENvbGxpbnMgZ2V0IHBpY2tlZCB1cCBieSBzb21lb25lIGRyaXZpbmcgYSB3aGl0ZSBoYXRjaGJhY2suU2hvcnRseSBhZnRlciBDb2xsaW5zJyBhcnJlc3Qgb24gU2VwdC4gClBlcmZvcm1hbmNlIHByZXNzdXJlcyBvZiBwaHlzaWNhbCBleGhhdXN0aW9uIHdhcyBpbmR1Y2VkIHZpYSBhbiBleGVyY2lzZSBwcm90b2NvbCBjb25zaXN0aW5nIG9mIGludGVydmFscyBvZiBtYXhpbWFsIGV4ZXJ0aW9uIHVuZGVydGFrZW4gb24gYSB3YXR0IGJpa2UuUmVzdWx0czogQXQgYSBncm91cCBsZXZlbCwgdW5kZXIgcGh5c2ljYWwgcHJlc3N1cmUgZWxpdGUgYXRobGV0ZXMgd2VyZSBmYXN0ZXIgdG8gcmVzcG9uZCB0byBjb250cm9sIHRyaWFscyBvbiB0aGUgU3Ryb29wIFRhc2sgYW5kIHRvIHNpbXBsZSBwcm9iYWJpbGlzdGljIGNob2ljZXMgb24gdGhlIENHVC4gUGh5c2ljYWwgcHJlc3N1cmUgd2FzIGFsc28gZm91bmQgdG8gaW5jcmVhc2UgcmlzayB0YWtpbmcgZm9yIGRlY2lzaW9ucyB3aGVyZSBwcm9iYWJpbGl0eSBvdXRjb21lcyB3ZXJlIGV4cGxpY2l0IChvbiB0aGUgQ0dUKSwgYnV0IGRpZCBub3QgYWZmZWN0IHJpc2sgdGFraW5nIHdoZW4gcHJvYmFiaWxpdHkgb3V0Y29tZXMgd2VyZSB1bmtub3duIChvbiB0aGUgQkFSVCkuIFRoZXJlIHdlcmUgbm8gc2lnbmlmaWNhbnQgY29ycmVsYXRpb25zIGluIHRoZSBkZWdyZWUgdG8gd2hpY2ggaW5kaXZpZHVhbHMnIHJlc3BvbnNlcyBjaGFuZ2VkIHVuZGVyIHByZXNzdXJlIGFjcm9zcyB0aGUgdGhyZWUgdGFza3MsIHN1Z2dlc3RpbmcgdGhhdCBlbGl0ZSBhdGhsZXRlcyBkaWQgbm90IHNob3cgY29uc2lzdGVudCByZXNwb25zZXMgdG8gcGh5c2ljYWwgcHJlc3N1cmUgYWNyb3NzIG1lYXN1cmVzIG9mIGRlY2lzaW9uIG1ha2luZy4gClR3byB5ZWFycyBhZ28sIHdoZW4gYSBidW5jaCBvZiB1cyB3ZXJlIGluIGNvbGxlZ2UsIHdlIGhhZCBwdXJjaGFzZWQgcG9rZXIgY2hpcHMuIE5vdCB5b3VyIG9yZGluYXJ5IHBsYXN0aWMgb25lcyB5b3UgY2FuIGZpbmQgYXQgV2FsIE1hcnQsIGJ1dCBhY3R1YWwgQ2FzaW5vIFBva2VyIENoaXBzIHRoYXQgbWFkZSB0aGUgZ2FtZSBmZWVsIG1vcmUgcmVhbC4gTGl2aW5nIG9uIGNhbXB1cyBhdCBPaGlvIFN0YXRlIG91ciBsaWZlIHJldm9sdmVkIGFyb3VuZCBnb2luZyB0byBjbGFzcywgd29ya2luZyBhIHBhcnQgdGltZSBqb2IsIGFuZCBwbGF5aW5nIHBva2VyLiAKUG91ciBjb21tZW5jZXIsIGlsIG1lIGZhdXQgdm91cyBkaXJlIGNvbW1lbnQgaidlbiBzdWlzIHZlbnUgIHZvdXMgcGFybGVyIGRlIGNlbGEuIElsIHNlIHRyb3V2ZSBxdWUgamUgcmVvaXMgYmVhdWNvdXAgZGUgZG9jdW1lbnRzIGNpcmN1bGFudCBwbHVzIG91IG1vaW5zIHNvdXMgbGUgbWFudGVhdSBldCAgY2UgdGl0cmUgaidhaSByZXUgdW4gdGV4dGUgbm9uIHNpZ24gcXVpIGNpcmN1bGUgc3VyIEludGVybmV0IGV0IHF1aSByY2xhbWUgcXVlIGxlcyB0ZXJyb3Jpc3RlcyBzb2llbnQgaW5jaW5ycyBldCBsZXVycyBjZW5kcmVzIGRpc3BlcnNlcyBkYW5zIHVuIGNvdXJzIGQnZWF1LkNlIHRleHRlIHF1aSB2aWVudCBtYW5pZmVzdGVtZW50IGRlIHF1ZWxxdSd1biBkJ2Fzc2V6IHNhdmFudCBlbiBtYXRpcmUgZGUgcmVsaWdpb24gZXhwbGlxdWUgcG91cnF1b2kgbGUgc2ltcGxlIGZhaXQgZCdhZ2l0ZXIgY2V0dGUgbWVuYWNlIGF1cmFpdCBkJ2Fib3JkIHBvdXIgZWZmZXQgZCdpbmNpdGVyIGxlcyB0cmF0cmVzICBzZSBkY291dnJpci4gClRoZXkncmUgYWdlbnQgd2VudCBvdXQgb2YgdGhlIGNvdW50cnkgZm9yIDIgd2Vla3Mgd2l0aG91dCBub3RpZnlpbmcgb3VyIGFnZW50IGFuZCB0aGUgcGVyc29uIGhlbHBpbmcgY292ZXIgZm9yIGhlciBkb2Vzbid0IGtub3cgbXVjaCBhYm91dCB0aGUgc2FsZS4gClNob3J0IEFuaW1hdGlvbiBvbiBUZXh0IE5lY2s6IFtbW1tbW1ZpZGVvXV1dXV1dIEZyZXF1ZW50IGdhbWVycywgdGV4dGVycyBhbmQgY29tcHV0ZXIgdXNlcnMgY2FuIGRldmVsb3AgYSBjb25kaXRpb24ga25vd24gYXMgTmVjayBUaGUgY29uZGl0aW9uIGlzIGEgcmVzdWx0IG9mIGJhZCBwb3N0dXJlIGFkb3B0ZWQgd2hlbiBnYW1pbmcgYW5kIHRleHRpbmcuIFRlbGx0YWxlIHNpZ25zIGluY2x1ZGUgdGhlIGhlYWQgdGlsdGVkIGZvcndhcmQsIHNob3VsZGVycyBjdXJ2ZWQsIGFybXMgYmVudCBkb3duIGJ5IHRoZSBzaWRlLCBhbmQgYSBodW5jaGVkIGJhY2suIFRoaXMgYW5pbWF0aW9uIGlsbHVzdHJhdGVzIHdoYXQgTmVjayBpcywgaXRzIHN5bXB0b21zIGFuZCBob3cgdG8gYXZvaWQgdGhlbS4KRWRpdDogTXkgbnVtYmVyIHdhcyBpbmNvcnJlY3QgSSByZWFkIGl0IGluY29ycmVjdGx5IGluIHRoZSBvcmlnaW5hbCBhcnRpY2xlLiA0NiUgb2YgdGhlIGNvdW50cnkgc3VwcG9ydCBoaXMgaW1wZWFjaG1lbnQgaW4gdGhhdCBjYXNlIGFuZCAzMSUgb3Bwb3NlIGl0LiAxIHBvaW50ICBzdWJtaXR0ZWQgOCBob3VycyBhZ28KVGhpcyB3b3VsZCBlbnN1cmUgdGhhdCB5b3Ugd29uIGJlIHRvbyBib3JlZCBsYXRlciBvbiBhbmQgc2Vjb25kbHksIHlvdSBiZSBhYmxlIHRvIGhvbmUgeW91ciBza2lsbHMgaW4gZGlmZmVyZW50IHBva2VyIHZlcnNpb25zLiAKVG8gYWxsIHRoYXQga25ldyBNYXJ5LCBzaGUgd2FzIGEga2luZCwgZ2VuZXJvdXMsIGFuZCBjb25zaWRlcmF0ZSBmcmllbmQuIApFdmVuIGlmIHlvdSd2ZSBnb3QgYWxyZWFkeSBzZWxlY3RlZCBhIE1vbnRyZWFsIGJlYXV0eSBzYWxvbiwgY29udGVtcGxhdGUgbWFraW5nIGNvbXBhcmlzb25zIG9mIHRoZSBwcmljZXMgd2l0aCBvdGhlciBjbGluaWNzLiBFdmVuIHNvLCBub3JtYWxseSBiZSBzdXJlIHRoYXQgdGhlIHJlbWVkaWVzIHlvdSBtaWdodCBoYXZlIHNlbGVjdGVkIGFyZSBjb21wYXJhYmxlIHRvIG9uZSB5ZXQgYW5vdGhlci4gQXQgYWxsIHRpbWVzLCB5b3UgaGF2ZSB0byB0YWtlIHRoZSB0b3AgcXVhbGl0eSBvZiB5b3VyIHNlcnZpY2VzIHByb3ZpZGVkIGludG8gYWNjb3VudC4gClRoZSBnb29kIG5ld3MgaXM6IG15IGJyb3RoZXIgaXMgb3ZlciAxMiB5ZWFycyBjbGVhbiBhbmQgc29iZXIgZnJvbSBkcnVncyBhbmQgYWxjb2hvbCBhbmQgaGUgaXMgY29tcGxldGVseSBhd2Vzb21lIGFuZCBoaXMgYnJhaW4gc3RpbGwgd29ya3MuIE15IGhlYXJ0IGdvZXMgb3V0IHRvIHlvdS4gSSBzbyBzb3JyeSB5b3UgZGVhbGluZyB3aXRoIHRoaXMgc2FkbmVzcyBhbmQgbG9zcy4gCllvdSByZXBlYXRlZGx5IGNsYWltZWQgaGUgb3dlcyBoaXMgZmFucyBldmVyeXRoaW5nLiBXaGljaCBpcyBzdWNoIGEgYmFja3dhcmRzIHdheSBvZiB0aGlua2luZy4gWW91IHRoaW5raW5nIGhlIG93ZXMgeW91IHRoZSBmYW4gYW55dGhpbmcgaXMgbmFyY2lzc2lzdGljIGJlaGF2aW91ci4gCkhlIHNhaWQgU21vbGxldHQgbWFpbnRhaW5zIGhpcyBpbm5vY2VuY2UuIApUcmFkaXRpb25hbCBDaGluZXNlIE1lZGljaW5lIGZvciBQYWluIFJlbGllZgpBbW9uZyB0aGUgbWFueSBwb3N0IHJldGlyZW1lbnQgb3B0aW9ucyB0aGF0IHdpbGwgdW5kb3VidGVkbHkgYmUgb3BlbiBmb3IgTVMgRGhvbmksIGEgbmV3IG9uZSBoZSBtaWdodCB3YW50IHRvIGNvbnNpZGVyIGlzIHRoYXQgb2YgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyLCBsaWtlIFNoYW5lIFdhcm5lLiAKRXQgcXVlbGxlIGJlbGxlIGNvbmNlcHRpb24gZGUgc29uIHJsZSBkZSBjb2xsZWN0ZXVyIHF1ZSBkZSBwcmVuZHJlIHNvaW4gZGUgc29uIHJzZWF1IGRlIHByb2R1Y3RldXJzIGRlIGxhaXQgZW4gbGV1ciByYXBwZWxhbnQgZGVzIGF1Z21lbnRhdGlvbnMgbmNlc3NhaXJlcyBvdSBlbiBsZXMgYWlkYW50ICBhbWxpb3JlciBsZSBnb3QgZGUgbGV1ciBwcm9kdWl0cywgLiAKV2hhdCBwdXp6bGVzIG1lIGlzIHRoYXQgaGVyZSBpbiBteSBjb3VudHJ5LCBvciBhdCBsZWFzdCB3aGVyZSBJIGxpdmUsIHplYWxvdXMgcGVvcGxlIChldmVuIGlmIHRoZWlyIGJlaGF2aW9yIGlzIG9ubHkgbm90aWNlYWJsZSBieSBqdXN0IGEgZmV3IHF1aXJrcykgYXJlIHF1aWNrbHkgc2VlbiBhcyBvZGQsIGRvdWJseSBjcmVlcHkgd2hlbiB0aGUgYXBwYXJlbnQgcmVhc29uIGlzIHJlbGlnaW9uLiAKSSBsb3ZlZCBoYXZpbmcgYSBmaXNoIHdoaWxlIEkgd2FzIGluIGNvbGxlZ2UuIFNvbWUgdHlwZXMgYXJlIHByZXR0eSBzb2NpYWwsIHNvIHRoZXkgZnVuIHRvIHdhdGNoIGFuZCBpbnRlcmFjdCB3aXRoLiBNaW5lIHdhcyBhIGJldHRhLiAKRnVydGhlcm1vcmUgc3R1ZmYgbGlrZSBtb3NzLCBjbG90aGluZyBhbmQgaW5kZWVkIHdhdGVyYmVkcyB0ZW5kIHRvIGhvbGQgYSBjZXJ0YWluIGtpbmQgb2YgcmFkaWF0aW9uIGZvciBhIGxvbmdlciBwZXJpb2Qgb2YgdGltZS4gCkZvciBleGFtcGxlLCBkbyB5b3UgYmVsaWV2ZSB0aGF0IChhKSBhbGwgcGVvcGxlIGFyZSBpbm5hdGVseSwgZ2VuZXRpY2FsbHkgc3dpbmdlcnMsIHRoZXkganVzdCBuZXZlciB0aGluayB0byB0cnkgaXQgYmVjYXVzZSBvZiBjdWx0dXJhbCBub3Jtcywgb3IgKGIpIHRoYXQgc29tZSBwZW9wbGUgYXJlIGdlbmV0aWNhbGx5IHByZWRpc3Bvc2VkIHRvIHN3aW5nLCBhbmQgb3RoZXJzIGFyZSBnZW5ldGljYWxseSBwcmVkaXNwb3NlZCBOT1QgdG8gc3dpbmcsIGFuZCB0aGF0IG9rPwpJIGFic29sdXRlbHkgaGF0ZSB0byBoZWFyIHRoZSAiZ2FuZ3N0YSIgYWNjZW50LCBlc3BlY2lhbGx5IHdoZW4gaXQgc29tZSAxNSB5ZWFyIG9sZCB3aGl0ZSBib3kgZnJvbSB0aGUgc3VidXJicyBmYWtpbmcgaXQgdG8gc291bmQgY29vbC4gUmVnYXJkbGVzcyBvZiB3aG8gc2F5cyBpdCwgaXQgc291bmRzIGxpa2UgeW91IGFuIHVuZWR1Y2F0ZWQgbW9yb24uIEl0IHNob3VsZG4gYmUgYWxsb3dlZCB0byBzbGlwIGJ5IGFzIGp1c3QgYW5vdGhlciBhY2NlbnQgbGlrZSBzb21lIGFyZSBzYXlpbmcuLiAKVXBzZXQgd2l0aCBDTUNXZSBhcmUgbWFpbmx5IHVwc2V0IHdpdGggdGhlICJDb21tdW5pdHkgTWVkaWF0aW9uIENlbnRyZSBtZWRpYXRpb24gYWN0aW9uIG9mIGFjdHVhbGx5IGZhY2lsaXRhdGluZyBzdWNoIGEgbWVkaWF0aW9uIGFncmVlbWVudC4gSXQgaXMgdGhlIGluYWxpZW5hYmxlIHJpZ2h0IG9mIHRoZSBJbmRpYW4gZmFtaWx5IHRvIGNvb2sgY3VycnkgYXQgYW55IHRpbWUgdGhleSB3aXNoIHRvIHdpdGhpbiB0aGUgZm91ciB3YWxscyBvZiB0aGVpciBob21lLiAoaGF2aW5nIHNhaWQgdGhhdCwgbGV0IHVzIGFsbCAgbmF0aXZlcywgbmV3IGNpdGl6ZW5zIG9yIG90aGVyd2lzZSwgZW1icmFjZSB0aGUgbXVsdGkgY3VsdHVyYWwgYXNwZWN0cyBvZiBvdXIgbmF0aW9uKQpQbGF5IHRoZSBoaWdoZXN0IHN0YWtlcyB5b3UgY2FuLCBidXkgaW4gYXQgdGhlIG1heCwgYW5kIGltbWVkaWF0ZWx5IHB1bnQgeW91ciBzdGFrZSBpbnRvIHlvdXIgZnJpZW5kcy4gCkJtb3Jld2lzZXIgIDExIHBvaW50cyAgc3VibWl0dGVkIDEyIGhvdXJzIGFnbwpUbyBhZGQgdG8gdGhhdCBpZiB0aGUgTEVEIHN0cmlwIGhhcyBleHBvc2VkIG1ldGFsIHRyYWNlcyBvbiB0aGUgYmFjaywgdGhhdCBjYW4gY29uZHVjdCBvbiB0aGUgbXlsYXIgYW5kIHNob3J0IGl0LgpZZWFoIEkgY2FuIHNheSA4OCBpcyBtYXJnaW5hbC4gWW91IG1pZ2h0IGdldCAxIG9yIGV2ZW4gMiBmb2xkcyBieSByYWlzaW5nLiAKU2luaGEgY2xhaW1zIHRoYXQgYXMgcGVyIGluaXRpYWwgcHJvamVjdGlvbnMsIHRoZSBjb21wYW55IHdvdWxkIGVhcm4gYSByZXZlbnVlIG9mIGFyb3VuZCBScy4xIGJpbGxpb24gaW4gdGhlIHZlcnkgZmlyc3QgeWVhciBvZiBpdHMgb3BlcmF0aW9uLiAiVGhlcmVhZnRlciwgdGhlIHNreSBpcyB0aGUgbGltaXQsIiBoZSBzbWlsZWQuCkZyZWRlcmljayBDb3VudHkgaGFzIGEgY291bmNpbC4gSW4gTW9udGdvbWVyeSB0aGV5IGhhdmUgc3VicGVvbmEgcG93ZXI7IHRoZWlyIGdyb3VwIGNhbiBpbXBvc2UgYW5kIGVuZm9yY2UgcGVuYWx0aWVzLiAiVGhlIGRpZmZlcmVuY2UgaXMgdGhhdCBvdXIgY291bmNpbCBoYXMgbm8gZW5mb3JjZW1lbnQgU2hhY2tlbGZvcmQgbm90ZWQuIFRoZSBnYXkgY29tbXVuaXR5IGluIE1vbnRnb21lcnkgQ291bnR5IGlzICJ2b2NhbC4gSW4gRnJlZGVyaWNrIENvdW50eSB3ZSBoYXZlIGEgZ2F5IGNvbW11bml0eSwgYW5kIGl0IGlzIHByb2JhYmx5IGp1c3QgYXMgbGFyZ2UgYXMgaW4gTW9udGdvbWVyeSBDb3VudHksIGJ1dCBoZXJlIGl0IGlzIGFuIGludmlzaWJsZSBnYXkgc2F5cyB0aGUgcHJlc2lkZW50IG9mIFRoZSBMYW1iZGEgQ29tbXVuaXR5LCBhIGdheSBncm91cCBiYXNlZCBpbiBGcmVkZXJpY2suIAo=|<---