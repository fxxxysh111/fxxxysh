--->|R2FkbWFuODUgIDE2IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClVuZm9ydHVuYXRlbHksIHNvbWV0aW1lcywgaW4gc3BpdGUgb2YgdGhlIG1vc3QgcG9saXRlIGludGVyIHNwZWNpZXMgYmVoYXZpb3IsIGRvbWVzdGljIGFuaW1hbHMgKGRvZ3MsIGNhdHMsIGhvcnNlcywgZXRjKSBjYW4gaGF2ZSBhIHBvb3IgcGVyc29uYWxpdHksIGEgYmFkIGRheSwgb3IganVzdCBhIGJhZCBtb21lbnQsIGFuZCB0aGluZ3MgaGFwcGVuLi4gCkkgYWxtb3N0IDUgd2l0aCBhIHZlcnkgc2hvcnQgdG9yc28gKG1heWJlIDEuNSIgYmV0d2VlbiBoaXAgYm9uZSBhbmQgYm90dG9tIG9mIG15IHJpYiB3aGVuIG1lYXN1cmluZyBmcm9tIHRoZSBzaWRlKS4gSSBvcmRlcmVkIG15IGJlbHQgYSBmZXcgd2Vla3MgYWdvLCBzbyBJIGhhdmVuIGdvdHRlbiBpdCB5ZXQuIEkgd2VudCB3aXRoIHRoZSBJbnplciAxMG1tLCB3aGljaCBpcyBhIDQiIGJlbHQuIApGb3IgY2VudHVyaWVzLCBjYXN0IGlyb24gd2FzIHRoZSBvbmx5IG5vbnN0aWNrIHRoZXJlIHdhcy4gQnV0IHRoZW4gdGhlIDIwdGggY2VudHVyeSBzYXcgdGhlIGludHJvZHVjdGlvbiBvZiBjb21tZXJjaWFsbHkgbWFudWZhY3R1cmVkIG5vbnN0aWNrIHNraWxsZXRzLCB3aGljaCByZWx5IG9uIGEgY2hlbWljYWwgYmFzZWQgY29hdGluZy4gTm93LCBhY2NvcmRpbmcgdG8gQ29vayBJbGx1c3RyYXRlZCwgcGVyY2VudCBvZiB0aGUgc2tpbGxldHMgc29sZCBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhcmUgbm9uc3RpY2suIApUaGUgS29yZWFuIFBlbmluc3VsYSBpcyBub3QgYW4gZXh0ZW5zaW9uIG9mIENoaW5hJ3MgbGFuZC4gQW5kIENoaW5hIGhhcyBubyByaWdodCB0byBlbmZvcmNlIEtvcmVhcycgZGVmZW5zZSBwb2xpY3kgYW5kIGludm9sdmUgS29yZWEgaW4gaXRzIGFnZ3Jlc3Npb24gYW5kIGFyZ3VtZW50cyBvdmVyIHRoZSBnbG9iZSBmb3Igd29ybGQvcmVnaW9uYWwgZG9taW5hbmNlTHVkZHl2b24gIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KSSBhbSBub3Qgc2F5aW5nIEFMTCBhbnl0aGluZyBhcmUgYmFkLiBJIG5ldmVyIGhhZCBhbmQgaSBuZXZlciB3b3VsZC4gCkJ1dCB5ZWFoLiBBdCB0aGUgZW5kIG9mIHRoZSBkYXksIGlmIG15IHZhZ2luYSBpcyBvdXQgb2YgY29tbWlzc2lvbiwgSSBzdWNraW4gZGljay4gSSBkbyBpdCBhbnl3YXkgY2F1c2UgSSBkaWcgaXQgYSBsb3QgYnV0LiB5ZWFoLiBTdWNraW4gZGljay4KQ2FtaWxsZSA6IEwnZW50cmVtZXRzICBJbmNhICBkZSBQaWVycmUgSGVybSBhdXggYWNjb3JkcyB0b25uYW50cyA6IGJhbmFuZSBjaG9jb2xhdCBhdm9jYXQgZ2luZ2VtYnJlLgpJIHdvdWxkIGxpa2UgdG8gdGhhbmsgRHJzLiAKQ2FuZXMgZGUgTmF0YWwsIHZlbGFzIGUgaWRpYXMgZGUgdnNwZXJhIGRlIE5hdGFsClRoZSBqdXh0YXBvc2l0aW9uIG9mIHdlaXJkL3NleHVhbCBpbWFnZXMgd2l0aCBwaHJhc2VzIGFib3V0IHByb3BlciBtYW5uZXJzIGFuZCB0eXBpY2FsIGxpZmUgYWx0ZXJzIHRoZSBtZWFuaW5nIG9mIHRoZSBwaHJhc2VzIGFuZCBpcyBnZW5lcmFsbHkgcHJldHR5IGZ1bm55LiAKTWFueSBvZiB0aGUgZGVzaWduIGZlYXR1cmVzIHRoYXQgaW1idWUgYmF0aHJvb21zIHdpdGggYSBjYWxtIGFuZCBsdXh1cmlvdXMgdmliZSBuZXV0cmFsIGNvbG91cnMsIHdvb2QgYWNjZW50cywgbGF5ZXJzIG9mIGxpZ2h0aW5nIHdpdGggc3BhIGluc3BpcmVkIHNwYWNlcy4gSG9tZW93bmVycyBoYXZlIGJlZW4gcXVpY2sgdG8gaW5jbHVkZSB0aGVzZSBmdW5kYW1lbnRhbHMgaW4gdGhlaXIgYmF0aHJvb21zIHRvIGhlbHAgbHVsbCBhd2F5IHRoZSBjYXJlcyBvZiB0aGUgZGF5LgpKYWtlczkwNzAgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpFeHBlY3QgdG8gc2VlIHZlbHZldCBuYXBraW5zIGFuZCByaWJib24gbWFraW5nIHRoZWlyIHdheSB0byBkaW5uZXIgdGFibGVzIGFjcm9zcyB0aGUgZ2xvYmUuIDQ6IExlc3MgaXMgbW9yZSBzZWVuIGEgbG90IG9mIHJ1c3RpYyB3ZWRkaW5ncyBpbiB0aGUgcGFzdCB0d28geWVhcnMuIApDb3VyYWdlOiB3aXNlIG9uZXMgYmV0IGhlYXZpbHkgd2hlbiB0aGUgd29ybGQgb2ZmZXJzIHRoZW0gdGhhdCBvcHBvcnR1bml0eS4gCkl0IGlzIGJlbGlldmVkIHRoYXQgY2FyZCBodXN0bGVycywgd2hvIGVtZXJnZWQgZnJvbSB0aGF0IHNhbWUgdW5kZXJ3b3JsZCB0byBjaGVhdCB1bnN1c3BlY3Rpbmcgb3Bwb25lbnRzLCB1c2VkIHRoZSB3b3JkIGluIHJlbGF0aW9uIHRvIHRoZWlyIGNhcmQgcGxheWluZyB2aWN0aW1zLiAKV2UgZ290IDk3IGNtIGluIEphbnVhcnkgKGFnYWluLCB0aGUgdmFzdCBtYWpvcml0eSBpbiB0aGUgc2Vjb25kIGhhbGYpLCBhbmQgdGhlbiBoYWQgYW5vdGhlciAzMCsgY20gc3Rvcm0gaW4gbWlkIEZlYnJ1YXJ5LiAKRm9ydHVuYXRlbHkgZm9yIG1lLCBJIGFsc28gZXF1aXBwZWQgd2l0aCBlbm91Z2ggY3JpdGljYWwgdGhpbmtpbmcgYWJpbGl0eSB0aGF0IEkgbWlnaHQgdGFrZSAiSGlzdG9yeSIsIChoYXZpbmcgYmVlbiBwZW5uZWQgaW4gbWFueSBpbnN0YW5jZXMgYnkgd2F5IG9mIHRoZSBjdXJyZW50IHJ1bGluZyByZWxpZ2lvdXMgbGVhZGVyc2hpcCBvZiB0aGUgdGltZXMpIGFzIHN1Y2gsIHdpdGggYSBncmFpbiBvZiBzYWx0LiAKVGhlbiBpbiB0aGUgTWlkZGxlIEFnZXMgd2hlbiB0aGVhdGVyIHdhcyBwZXJmb3JtZWQgYnkgdHJhdmVsaW5nIHRyb29wcyBvbiB3YWdvbnMgdGhleSBicm91Z2h0IHdpdGggdGhlbSB0aGV5IG5lZWRlZCBhIHdheSB0byBsaWZ0IHRoZSBhY3RvcnMgYXQgdGhlIGJhY2sgb2YgdGhlIHN0YWdlIGZvciB0aGUgYXVkaWVuY2UgdG8gc2VlLiBFbnRlciB0aGUgcmFrZWQgc3RhZ2UuIEF2IHN0cnVjdHVyZSB0aGF0IGNvdWxkIGJlIHNldCB1cCBhbmQgYnJva2VuIGRvd24gbXVjaCBtb3JlIGVhc2lseSB0aGFuIGEgdGVycmFjZWQgYXVkaWVuY2Ugc2VhdGluZy4KSWYgeW91IHdhbnQgdG8gbW92ZSB0aGUgZ2FyYWdlIGRvb3IgdG8gdGhlIGZyb250LCB0aGVuIEkgd291bGQgc3VnZ2VzdCByZWxvY2F0aW5nIHRoZSB1cHBlciB3YWxscyBhbmQgc3RlZWwgYmVhbXMgc28gdGhhdCB0aGV5IGFyZSBvbiBlaXRoZXIgc2lkZSBvZiB0aGUgMTYgZnQrLyAgZ2FyYWdlIGRvb3IuIApFdmVyeW9uZSBzdWdnZXN0cyBtaXJhbGF4LCBidXQgdGhlIGlzc3VlIHdlIGNvbnNpc3RlbnRseSBoYWQgdGhlcmUgaXMgc2hlIHdvdWxkIGdldCBsaXF1aWQgcG9vcCBhbmQgY29udGludWUgdG8gaG9sZCBpdCBpbi4gClRoZSBraWQgd2FzIGluIHRoZSBzYW1lIGNsYXNzIGFzIG15IG9sZGVyIHNpc3RlciBhbmQgd2UgYXR0ZW5kZWQgdGhlIHNhbWUgY2h1cmNoLCBzbyBvdXIgZmFtaWxpZXMga25ldyBlYWNoIG90aGVyIHJlYXNvbmFibHkgd2VsbC4gCkx1Y2tpbHkgd2UgZ290IGEgZmV3IHRoaW5ncyBpbmNsdWRpbmcgdGhlIGljZSBidWNrZXQuIFRoZXJlIHdhcyBubyBsaW1pdCB0byBob3cgbXVjaCB5b3UgY291bGQgYnV5IG9uY2UgaW5zaWRlIGFuZCB0aGVyZSB3ZXJlIGEgbG90IG9mIHZlbmRvcnMgdGhlcmUgYW5kIHBlb3BsZSB3aG8gcmUgc29sZCBzdHVmZiBvbiBlYmF5LiAKSSBqdXN0IGZvdW5kIG91dCBsZXNzIHRoYW4gMjQgaG91cnMgYWdvLCBJIGFtIGdldHRpbmcgYSBkaXZvcmNlLiBJIHJlYWxseSBkb24gd2FudCBhIG1hbiByaWdodCBub3cuIE1vdGhlciBkZWNpZGVkIHRvIGRvIG9uZSBvZiBoZXIgZHJhbWF0aWMgc2lnaHMgdGhlbiBzYXlzLCBCdXQgZG8gZ28gdG8gdGhhdCBuYXN0eSBqb2IgeW91ciBzbyBjYWxsZWQgaHVzYmFuZCB3YW50ZWQgeW91IHRvIGhhdmUuIApJdCBjYW1lIHVwIGluIGNvbnZlcnNhdGlvbiB3aXRoIGhlciB3aGVuIHNoZSB3YXMgdGVsbGluZyBtZSBhbGwgYWJvdXQgaG93IHBlb3BsZSBjaG9vc2UgdGhlIGxpdmVzIHRoZXkgYm9ybiBpbnRvIHdoZW4gdGhleSBsZWF2ZSB0aGVpciBvbGQgbGl2ZXMsIHVubGVzcyB0aGV5IGhhdmUgdW5maW5pc2hlZCBidXNpbmVzcyBvciBwZW9wbGUgdGhleSBoYXZlIHRvIHN0aWNrIGFyb3VuZCBhbmQgaGVscC4gClRvIGJlIGhvbmVzdCwgbWFueSBwZW9wbGUgc3RpbGwgaGF2ZSBubyBpZGVhIGhvdyB0byByZW1lbWJlciB0aGVpciBvdXRzLiBUaGlzIGlzIHNvIGltcG9ydGFudCB3aGVuIGNhbGxpbmcgYSByYWlzZSwgY2hlY2tpbmcgZG93biwgb3Igc2ltcGx5IGZvbGRpbmcgdGhvc2UgdW5mb3J0dW5hdGUgZ29vZCBoYW5kcyBhdCB0aW1lcy4gV2hlbiB5b3UgdXRpbGl6ZSB0aGUgVGV4YXMgSG9sZGVtIFBpcmF0ZSBQb2tlciBTb2Z0d2FyZSwgaXQga2VlcHMgeW91IHVwIHRvIGRhdGUgd2l0aCBhbGwgeW91ciBzdXJyb3VuZGluZ3MuIApUYWxrIHRvIHlvdXIgcGFydG5lciBhYm91dCB3aGF0IHlvdSBib3RoIHdhbnQgZm9yIHRoZSBiYWJ5LiBEZWNpZGUgd2hlcmUgdGhlIGJhYnkgd2lsbCBzbGVlcCwgYW5kIG1ha2UgdGhhdCBwYXJ0IG9mIHlvdXIgaG9tZSBjb2xvcmZ1bCBhbmQgd2VsY29taW5nIGZvciB0aGUgYmFieS4gCllvdSdsbCBmaW5kIGl0IHByaWNlZCBvdXQgYnkgdGhlIGxpbmVhciB5YXJkLi4gCkZpcnN0LCBieSBsYXRlIEZlYnJ1YXJ5IENvbmdyZXNzIG11c3QgYXBwcm92ZSBhbiBpbmNyZWFzZSBpbiB0aGUgJDE2LjQgdHJpbGxpb24gZGVidCBsaW1pdC4gCk1hbiwgaSBhbSBub3Qgc2F5aW5nIHN0ZXJlb3R5cGVzIGFyZSBjb3JyZWN0LCBidXQgb25lIGhhdmUgdG8gdW5kZXJzdGFuZCBpdCBpcyBhbiB1bmF2b2lkYWJsZSBwaGVub21lbm9uLiAKQW5kIHRoZSBBbWVyaWNhbiBKb3VybmFsIG9mIFBhaW4gTWFuYWdlbWVudCwgVm9sLiAKSXQgYWxzbyBwb3NzaWJsZSB0byBleHBlcmllbmNlIG1lbnRhbCBzdGF0dXMgY2hhbmdlcyBmcm9tIGhpZ2ggbGV2ZWxzIG9mIGFtbW9uaWEgaW4gdGhlIGJsb29kIGR1ZSB0byBsaXZlciBkeXNmdW5jdGlvbiAoaGVwYXRpYyBlbmNlcGhhbG9wYXRoeSksIGJ1dCB0aGlzIHR5cGljYWxseSBjb21lcyBhYm91dCBpbiBsaXZlciBmYWlsdXJlIGFuZCB3aWxsIG1ha2UgcGF0aWVudHMgIm9idHVuZGVkLCIgd2hpY2ggbWVhbnMgc2xvdyB0byByZXNwb25kL3VucmVzcG9uc2l2ZSwgbG9vcHksIGhhbGYgY29uc2Npb3VzLCBldGMuIApNYWxhbGFpIEpveWEKQXMgbWVudGlvbmVkIGFib3ZlLCBtaWdyYWluZXMgaGF2ZSBiZWVuIGhlbHBlZCBieSBkcnVncyB0aGF0IGJsb2NrIHNlcm90b25pbiwgc3VjaCBhcyBzdW1hdHJpcHRhbiAoSW1pdHJleCkuIApUaGUgb3RoZXIgd2lsbCByZXF1aXJlIG1vbmV5IHRvIGF0dGFjayB0aGUgYmlnIGJhY2tsb2cgaW4gdHJlZSB0cmltbWluZyByZXF1ZXN0cy4gCldoZW4geW91IGFjY2VzcyBvciB1c2Ugb3VyIFNlcnZpY2VzLCB3ZSBtYXkgYWxzbyBhdXRvbWF0aWNhbGx5IGNvbGxlY3QgaW5mb3JtYXRpb24gYWJvdXQgeW91LiBUaGlzIGluY2x1ZGVzOgpWYXNxdWV6IHdhcyBib29rZWQgYXQgdGhlIExvdmVsYW5kIFBvbGljZSBEZXBhcnRtZW50IGFuZCB0cmFuc3BvcnRlZCB0byB0aGUgTGFyaW1lciBDb3VudHkgSmFpbCB3aGVyZSBzaGUgaXMgYmVpbmcgaGVsZCBvbjoKQXMgd2VsbC4gQWx0aG91Z2ggaXRzIGhhcmQgdG8gZXhhY3RseSBjb21wYXJlIHRoZSBzY29wZXMgb2YgZGFtYWdlIGFuZCBlZmZlY3Qgb24gdGhlIHBlcnNvbiB0aGUgc3VyZ2VyeSBoYXMgYmV0d2VlbiB0aGUgYm9keSB0eXBlcy4gCkRvaW5nIHRoZXNlIGZ1biB0aGluZ3MgZm9yIHRoZSBhdWRpZW5jZSBpcyB0aGUga2luZCBvZiB0aGluZyB0aGF0IGNhbiBoZWxwIGdyb3cgY2hlc3MgYW5kIGRpc3NpcGF0ZSB0aGUgaWRlYSB0aGF0IHRoZSBlbnRpcmUgY2hlc3MgY29tbXVuaXR5IGNhcnJpZXMgdGhpcyBzb3J0IG9mIHNtdWcgaW50ZWxsZWN0dWFsIHBvbXBvc2l0eSB0aGF0IHNvbWUgb2YgaXRzIG1vcmUgdGFsZW50ZWQgcGxheWVycyB1bmZvcnR1bmF0ZWx5IGV4dWRlLi4gClNvbWUgdGVybXMgdmFyeSBieSBjbGllbnRlbGUgb3IgbWV0aG9kIG9mIGJ1c2luZXNzLiAKVGhpcyB3ZWVrIGhlIHNlbnQgYSBsZXR0ZXIgdG8gdGhlIENJQSBzYXlpbmcgdGhhdCBDb25ncmVzcyB3YXMgYXQgbGVhc3QgcGFydGlhbGx5IHRvIGJsYW1lIGZvciBpbnRlcnJvZ2F0aW9uIHRlY2huaXF1ZXMgc3VjaCBhcyB3YXRlcmJvYXJkaW5nRVhDTFVTSVZFOiBDb25ncmVzcyB0byBvdmVyc2VlIENJQSBtb3JlIGNsb3NlbHkgICBXYXNoaW5ndG9uIFRpbWVzQ29uZ3Jlc3NtYW4gUmV5ZXMgaXMgY29uY2VybmVkIHRoYXQgQ0lBIGVtcGxveWVlcyBhcmUgbm90IGJlaW5nIHRyZWF0ZWQgd2l0aCB0aGUgcmVzcGVjdCB0aGV5IGRlc2VydmUgZ2l2ZW4gdGhlIGRpZmZpY3VsdCBqb2IgdGhleSBkb0luIHJlY2VudCBkYXlzLCBhcyB0aGUgcHVibGljIGRlYmF0ZSByZWdhcmRpbmcgdGhlIENJQSBpbnRlcnJvZ2F0aW9uIHByYWN0aWNlcyBoYXMgcmFnZWQsIHlvdSBoYXZlIGJlZW4gdmVyeSBtdWNoIGluIG15IHRob3VnaHRzLiAKVGhlIGNsZWFyIHNraW4gc3Vycm91bmRpbmcgbXkgYnJlYWtvdXRzIGhhcyBuZXZlciBiZWVuIHRoaXMgc3VwcGxlIG9yIGdsb3d5LiBJIHRoaW5rIGl0IGhhcyBtYWRlIGEgYmlnIGRpZmZlcmVuY2UgaW4gdGFja2xpbmcgbXkgYWNuZSwgSSBsaWtlIHRvIHRoaW5rIG9mIG15IGNsZWFyIHNraW4gbGlrZSBxdWljayBzYW5kIGNvbWluZyBpbiB0byB0YWtlIG92ZXIuLiAKTWFpcyBvbiBuZSBzIHBhcyBMIGEgdHIgZm9ydGUuIEJhcnJ5IEdyZWVuIFtkaXJlY3RldXIgZGUgbCBldCBUb255IENpY2FsZSBbaW5nIHNvbnQgdG91dCBkZSBzdWl0ZSBpbnRlcnZlbnVzIGxhIHJhZGlvIHBvdXIgbWUgcmFwcGVsZXIgcXVlIGMgdW5lIGxvbmd1ZSBjb3Vyc2UuIApWb3hpbmF0aW9uIHUKSGUgc2F5cywgIldoYXQgc2hvdWxkIEkgZXhwZWN0PyIKSXQgdG9vayBtZSBhIHllYXIgdG8gZ2V0IGl0IGltcG9ydGVkLCBidXQgSSBmaW5hbGx5IGRpZC4gCjUwIGJlaSBUaXRhbiBQb2tlciBvZGVyIE1hbnNpb24gUG9rZXIKQWx3YXlzIG5pY2UgcGxheWluZyBhIHJlbGlnaW91cyBwZXJzb24gd2hvIGhhcyBmbGF3cywgc2FpZCBNb3J0b24gaW4gYW4gaW50ZXJ2aWV3IHdpdGggQ0JTIExvY2FsLiBiZWVuIHdvbmRlcmZ1bCB3YXRjaGluZyBoaW0gZmFsbCBpbiBsb3ZlIGFuZCBoYXZpbmcgaGltIHNvbHZlIHRvIHNvbWUgZGVncmVlIGhpcyByZWxhdGlvbnNoaXAgd2l0aCBoaXMgc29uIGFuZCBkYXVnaHRlci4gU3VyYWogU2hhcm1hLCB3aG8gcGxheXMgTWlsZXMgZnJpZW5kIFJha2VzaCwgcHJvbWlzZXMgdGhhdCBwZW9wbGUgd2lsbCBiZSBoYXBweSB3aGVuIHRoZXkgdHVuZSBpbi4KVGhlIE5hdGlvbmFsIEhlYWx0aGNhcmVlciBBc3NvY2lhdGlvbiAoTkhBKSBpcyB0aGUgbmF0aW9uJ3MgbGFyZ2VzdCBoZWFsdGggY2FyZWVyIGNlcnRpZmljYXRpb24gcHJvdmlkZXIuIApOZXcgWmVhbGFuZCB3YXMgYSBzZWxmaXNoIGhvc3QgYXMgdGhlIEFsbCBCbGFja3Mgd29uIHRoZSBSdWdieSBXb3JsZCBDdXAgaW4gdGhlaXIgb3duIGxhbmQsIGJlYXRpbmcgRnJhbmNlIGluIGEgbG93IHNjb3JpbmcgYnV0IHRlbnNlIGZpbmFsLiAKQSBzaW5nbGUgZXhwb3N1cmUgaXMgdW5saWtlbHkgdG8gbGVhZCB0byBhbnkgbWFqb3IgaGVhbHRoIHByb2JsZW1zLiBSZXBvcnQgYW55IGtub3duIG9yIHBvdGVudGlhbCBpbmNpZGVudCwgYXMgdGhpcyB3aWxsIHRoZW4gYmUgaW52ZXN0aWdhdGVkIGFuZCBhbnkgYXNiZXN0b3MgZmlicmVzIGNhbiBiZSBjbGVhbmVkIHVwIHRvIGF2b2lkIHBvdGVudGlhbCBleHBvc3VyZSBvZiBhbnlvbmUgZWxzZS4gQSBwZXJtYW5lbnQgcmVjb3JkIHdpbGwgYmUgY3JlYXRlZCBpbiB0aGUgVW5pdmVyc2l0eSBSZWNvcmRzIE1hbmFnZW1lbnQgT2ZmaWNlIHNvIHRoYXQgc2hvdWxkIGFueSBhc2Jlc3RvcyByZWxhdGVkIGhlYWx0aCBpc3N1ZXMgb2NjdXIgdGhleSBjYW4gYmUgZGVhbHQgd2l0aCB1bmRlciBXb3JrZXJzIENvbXBlbnNhdGlvbiBvciBvdGhlciBhcHByb3ByaWF0ZSBwcm9jZXNzZXMvSW5zdXJhbmNlLiBjZW1lbnQgaW4gYXNiZXN0b3MgY2VtZW50IHNoZWV0aW5nKSBhbmQgYXJlIGxlc3MgbGlrZWx5IHRvIGJlY29tZSBhaXJib3JuZSB1bmxlc3MgdGhlIHByb2R1Y3QgaXMgZGFtYWdlZC4gQXNiZXN0b3MgZmVuY2VzLCByb29mcyBhbmQgYXNiZXN0b3MgY2VtZW50IHNoZWV0aW5nIGFyZSBleGFtcGxlcyBvZiBub24gZnJpYWJsZSBhc2Jlc3RvcyBwcm9kdWN0cy4KRG9uJ3Qgb3ZlciBjYWZmZWluYXRlZCB5b3Vyc2VsZi4gCkxhZHkgR2FnYSBnb2VzIHRvcGxlc3MgZm9yIG1hZ2F6aW5lIHNob290ClBhcmxhcmUgZGkgcXVpbmRpIGVxdWl2YWxlIGEgcGFybGFyZSBkaSBzb2NpZXQgbW9kZXJuYS4gRXNzbyAsaW5mYXR0aSwgaW52ZXN0ZSBvcm1haSBxdWFzaSB0dXR0aSBpIHNldHRvcmkgZGVsbGEgc3Rlc3NhLCBtYSAgcHJvcHJpbyBzb3R0byBhbCBiZW5lc3NlcmUsIGRpZXRybyBsYSBzdWEgc3BsZW5kaWRhIGZhY2NpYXRhLCBjaGUgc2kgbmFzY29uZGUgaWwgbWFyY2lvLiBFIHByb3ByaW8gcXVlc3RvIG5vc3RybyBhdmVyIG51bGxhIGRhIGRlc2lkZXJhcmUgY2hlIGNpIGhhIHJpZG90dGkgYWQgYXV0b21pLCBjaGUgY2kgaGEgc3Z1b3RhdG8gZGkgdHV0dGkgZ2xpIGlkZWFsaSwgY2hlLCBhdmVuZG9jaSBvcm1haSBkYXRvIHR1dHRvIGwgY2kgY29zdHJpbmdlIGEgZGVzaWRlcmFyZSBjb3NlIHV0b3Bpc3RpY2hlLCBzdXBlcmZsdWUsIHNlY29uZG8gbGEgbm90YSBmb3JtdWxhIGRlaSBvY2N1bHRpIGNoZSBpbm5hbHphbm8gbGEgc3VnZ2VzdGlvbmUgZGkgbWFzc2EgYSBsaXZlbGxvIGNvbnN1bWlzdGljbywgYSBudW92byBEaW8uLiAKIDIgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnb0l0IHdhcyBhbiBpc3N1ZSBmcm9tIHRoZSBiZWdpbm5pbmcgYXJvdW5kIHNldHRpbmcgdGFyZ2V0cyBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSB5ZWFyLiBXZSBoYWQgYSBsYXJnZSBwcm9ncmFtIHdpdGggYSBsb3cgY29uZmlkZW5jZSBvZiBjbG9zaW5nLiBUaGV5IHNldCB0YXJnZXRzIGJhc2VkIG9uIGEgcGFydGlhbCByZXZlbnVlIG9mIHRoZSBwcm9ncmFtIGFuZCBjb25maWRlbmNlIGxldmVsIHRoYXQgd2Ugd291bGQgd2luIHRoZSBidXNpbmVzcy4gCkkgYW0gdGhlIHlvdW5nZXN0IG9mIHRoZSBraWRzIGFuZCBldmVyeW9uZSBhbHdheXMgdHJlYXRlZCBtZSBsaWtlIEkgd2FzIGEgd2hpbmVyIGFuZCB3YXMgZmFraW5nIGlsbG5lc3Nlcy4gCkogc2VtaSByZXByaXMgY29uc2NpZW5jZSBhdSBtb21lbnQgbyBbaWxdIG1lIHAgSiBkZSBub3V2ZWF1IHBlcmR1IGNvbnNjaWVuY2UuIApJIGhhdmUgbm8gaWRlYSB3aGF0IHdpbGwgaGFwcGVuIHRoYXQgZGF5LiAKSGF1dCBkIGNlbnRhaW5lIGRlIGNlbnRpbXRyZXMgZW4gbW95ZW5uZSwgaWwgZXN0IGJvbiBkZSBub3RlciBxdWUgbGVzIHN1amV0cyBzYXV2YWdlcyBzb250IHBsdXMgcGV0aXRzIHF1ZSBsZXMgZG9tZXN0aXF1ZXMuIApUaGlzIGdhbWUgaXMgYmFzZWQgb24gdGhlIHNhbWUgcnVsZXMgZXhjZXB0IHRoYXQgaGVyZSB5b3Ugb25seSBwbGF5IGFnYWluc3QgdGhlIGRlYWxlciwgcmF0aGVyIHRoYW4gYWdhaW5zdCBvdGhlciBwbGF5ZXJzLiAKSSB3b3VsZG4gcmVjb21tZW5kIHdhaXRpbmcgdG8gYW55b25lLiAKT3VyIGN1cnJlbnQgYmVsaWVmcyB0aGF0IHRoZXJlIGFyZSBnYXkgcGVvcGxlIGFuZCB0aGVyZSBhcmUgc3RyYWlnaHQgcGVvcGxlIGFuZCB0aGF0IHRoZXJlZm9yZSBzcGFjZXMgYW5kIGJvZGllcyBhcmUgZWFzaWx5IHNlcGFyYXRlZCBpbnRvIG9uZSBvciB0aGUgb3RoZXIgYmVnYW4gd2l0aCB0aGUgVmljdG9yaWFucyAoYXMgbW9zdCBvZiBvdXIgY3VsdHVyZSBkaWQpLiBTZXhvbG9naXN0cyBpbnZlbnRlZCB0aGUgaG9tb3NleHVhbCAoYW5kIHRoZSBoZXRlcm9zZXh1YWwpIGFzIHN0YWJsZSBlbnRpdGllcywgcGVyc29ucyByYXRoZXIgdGhhbiBwcmFjdGljZXMsIG5vdW5zIGluc3RlYWQgb2YgdmVyYnMuLiAKWW91IG11c3QgYWxzbyBhZ3JlZSB0byBvdXIgVGVybXMgb2YgU2VydmljZSBhcyBwYXJ0IG9mIHRoZSByZWdpc3RyYXRpb24gcHJvY2Vzcy5Cb3N0b24gR2xvYmUgbmV3c3BhcGVyIHN1YnNjcmliZXIgaW5mb3JtYXRpb246IFdlIGdlbmVyYWxseSBvYnRhaW4geW91ciBuYW1lLCBhZGRyZXNzLCB0ZWxlcGhvbmUgbnVtYmVyLCBjcmVkaXQgY2FyZCBudW1iZXIgb3Igb3RoZXIgYmlsbGluZyBpbmZvcm1hdGlvbiBpbiBvcmRlciB0byBwcm9jZXNzIHlvdXIgbmV3c3BhcGVyIHN1YnNjcmlwdGlvbiByZXF1ZXN0LiBBcyBhIHN1YnNjcmliZXIsIHdlIHJlcXVlc3QgdGhhdCB5b3UgYWxzbyBwcm92aWRlIHVzIHdpdGggeW91ciBlIG1haWwgYWRkcmVzcy4gSWYgeW91IHVzZSB0aGUgQm9zdG9uIEdsb2JlIFNlcnZpY2VzIFdlYiBzaXRlIHRvIG1hbmFnZSB5b3VyIGhvbWUgZGVsaXZlcnkgc2VydmljZSwgeW91ciBuZXdzcGFwZXIgc3Vic2NyaWJlciBpbmZvcm1hdGlvbiB3aWxsIGJlIHVzZWQgdG8gcHJvY2VzcyBvbmxpbmUgY3VzdG9tZXIgc2VydmljZSByZXF1ZXN0cyByZWxhdGluZyB0byBpc3N1ZXMgc3VjaCBhcyBtaXNzaW5nIG9yIGxhdGUgZGVsaXZlcmllcywgYW5kIHZhY2F0aW9uIHN0b3BzIGFuZCByZXN0YXJ0cy5SZWdpc3RyYXRpb24gZm9yIG91ciBXZWIgU2l0ZXMgdmlhIFRoaXJkIFBhcnR5IFRvb2xzOiBZb3UgY2FuIGxvZyBpbiB0byBvdXIgc2l0ZXMgdXNpbmcgc2lnbiBpbiBzZXJ2aWNlcyBzdWNoIGFzIEZhY2Vib29rIENvbm5lY3Qgb3IgYW4gT3BlbiBJRCBwcm92aWRlci4gCklmIENpdmlsIExhdyBpcyBqdXN0IGEgZm9ybSBvZiBSb21hbi9QYXBhbCBDb21tZXJjaWFsIExhdywgdGhlbiB0aGUgTGF3IGlzIElzc3VlZCBpbiB0aGUgU292ZXJlaWduIE5hbWUgKGllLiAKSWYgeW91IHdhbnQgYSBtb3JlIHJlbGlhYmxlIHNvbHV0aW9uIGxvb2sgaW50byBBcmR1aW5vLiBJIGhhdmUgYW4gQXJkdWlubyBhbmQgYSBzbWFsbCBhcXVhcml1bSBwdW1wLiBJIGFsc28gd2VudCBvdXQgYW5kIGJvdWdodCBhIGNoZWFwIHNvaWwgbW9pc3R1cmUgc2Vuc29yIGZvciBhIGZldyBidWNrcyBvZmYgQW1hem9uLiBUaGUgQXJkdWlubyB1c2VzIGEgZGV2aWNlIGNhbGxlZCB0aGUgIlBvd2Vyc3dpdGNoIFRhaWwiIHRvIGFjdGl2YXRlIHRoZSBwdW1wIGV2ZXJ5IGRheSBvciBzbyBvbiBhIHRpbWVyLiBXYXRlcnMgaXQganVzdCBsaWtlIEkgd291bGQgaWYgSSB3ZXJlIHRoZXJlIHdpdGggdGhlIGNvcnJlY3QgYW1vdW50IG9mIHdhdGVyLgpHb3Jkb246ICJUaGlzIHBpenphIHNob3VsZG4gZXZlbiBiZSBjYWxsZWQgcGl6emEuIEl0IHtjZW5zb3JlZH0uIAoiSSB3YW50ZWQgdG8gaGF2ZSBhIGxpdHRsZSBmdW4sIEkgd2FudGVkIGhpbSB0byBoYXZlIGEgbGl0dGxlIGZ1biwiIGhlIHNhaWQuICJJIGltYWdpbmVkIHdoYXQgaXQgd291bGQgYmUgbGlrZSB0byBnZXQgeW91ciB3YWxsZXQgYmFjaywgc28gSSBhZGRlZCBhIGxpdHRsZSBiaXQgc28gaGUgY291bGQgY2VsZWJyYXRlLiIKSGUncyBpbiB0aGUgc3RhZ2UgYWZ0ZXIgYSBkZWF0aCB3aGVyZSB5b3UgaGF2ZSBzbyBtdWNoIHRvIGRvIHRoYXQgeW91IHNlZW0gc2FkIGJ1dCBva2F5LiAKSGUgYW5kIHRoZSBzYWZldHksIHdlIGVuZGVkIHVwIHdhbGtpbmcgdG8gdGhlIHBsYWNlLCBzYW1lIGNvdXBvbiBhbmQgdGFibGUgZm9yIGZvdXIuIFRoZXkncmUgcHJldHR5IGNvb2wgZ3V5cywgcHJldHR5IGdvb2QgZ3V5cy4iLiAKSW4gdGhlIGV2ZW50IHRoYXQgdGhleSBkaWQgY29tZSB0byBoaW0gd2l0aCBxdWVzdGlvbnMgYWJvdXQgdGhvc2UgYmxvb2R5IHNob2UgcHJpbnRzLCBoZSB3b3VsZCBzaW1wbHkgYmUgYWJsZSB0byBzYXkgJ0kgd2VhciBhIHNpemUgMTAsJyAiIE5pZXRvIGV4cGxhaW5lZC4gClJvb2tpZSBUcmF2aXMgS2VsY2UgaGFzIGFjdHVhbGx5IHRoZSBza2lsbHMsIGJ1dCBpcyBkZWZpY2llbnQgaW4gdGhlIGZlZWwgb2YgZ29sZmluZyBpbiB3aGljaCB0aGUgTkZMLiAKVGhlIG1hc3NhZ2Ugc2Nob29sIEkgd2VudCB0byBkaWQgMyBtb250aHMgb2YgVGhhaSBhbmQgRWFzdGVybiB0cmFkaXRpb25zLCBHdWEgU2hhLCBjdXBwaW5nLCBUb2sgU2VuLCBmbG93ZXIgYWRvcm5tZW50IGFycmFuZ2VtZW50cywgY2hhbnRpbmcsIHNwaXJpdHVhbCBzdHVmZiBldGMgZXRjLiBJIGxlYXJuZWQgdHJhZGl0aW9uYWwgVGhhaSBvbiB0aGUgbWF0IHdpdGggdGhlIHBlcnNvbiBjbG90aGVkLiAKSSBjdXJyZW50bHkgdHJ5aW5nIHRvIHNjYWxlIHRoaXMgY29uY2VwdCB1cCBhIGxpdHRsZSwgYmVjYXVzZSB0aGUgYmFycmlvcyBhcmUgdG9vIHNtYWxsIGFuZCBpdCBhIHBhaW4gdG8gYnVpbGQgb3V0LCBsb3RzIG9mIHJvYWQgb3ZlcmhlYWQsIGV0Yy4gSXQgYmVlbiB0b3VnaCB0byBnZXQgdGhlIGFydGVyeSBoaWdod2F5cyBmbG93aW5nIHdlbGwgbG9uZyB0ZXJtLCBiZWNhdXNlIGluZHVzdHJ5IHRlbmRzIHRvIGNyZWF0ZSBtb3JlIGFuZCBtb3JlIHRydWNrIHRyYWZmaWMgYXMgaXQgbGV2ZWxzIHVwLi4gCk1pa2Ugd2Fsa2VkIG1lIHRvIG15IGNhciBhbmQgYXNrZWQgZm9yIG15IG51bWJlci4gCkFydGljbGVzIE9jdG9iZXIgNApEdWNrRHVja0dvIGdldHMgaXRzIHJlc3VsdHMgZnJvbSBwbGFjZXMgbGlrZSB5YWhvbyBhbmQgQmluZy4gR3Vlc3Mgd2hlcmUgdGhleSBnZXQgdGhlaXIgcmVzdWx0cyBmcm9tPyBUaGUgc2FtZSBwbGFjZSBldmVyeSBvdGhlciAibm9uIGdvb2dsZSIgc2VhcmNoIGVuZ2luZSBpbiB0aGUgVVMgZ2V0cyB0aGVpciByZXN1bHRzLCBnb29nbGUuIE5vIG1hdHRlciB3aG8geW91IHNlYXJjaCB3aXRoIHRoZSByZXN1bHRzIGFyZSBzb21laG93IGxpbmtlZCB0byBnb29nbGUgYW5kIGluZmx1ZW5jZWQgYnkgdGhlaXIgcmVzdWx0cy4gCldoZW4geW91IGdldCBpbnRvIHRoZSBtb3JlIHJhcmVmaWVkIGFpciBvZiBlaWdodHMgdG8gYWNlcywgeW91IG1heSBzdGFydCBsb3NpbmcgcGVyc3BlY3RpdmUgYW5kIHB1dHRpbmcgdXAgbW9yZSBtb25leS4gCkRhbnMgbGEgcGVyc3BlY3RpdmUgZGVzIGxlY3Rpb25zIG11bmljaXBhbGVzIGRlIDIwMjAsIHF1aSBzZSBkcm91bGVyb250IGRhbnMgcHJhdGlxdWVtZW50IHVuIGFuIChsZXMgZGF0ZXMgcHJjaXNlcyBuZSBzb250IHBhcyBlbmNvcmUgY29ubnVlcyksIG5vdXMgdm91cyBwcm9wb3NvbnMgdW4gdGF0IGRlcyBsaWV1eCBkZSBsYSBwciBjYW1wYWduZSBxdWkgYSBkaiBjb21tZW5jLiBJbCBuZSBzJ2FnaXQgcGFzIGRlIHNlIHByb25vbmNlciBzdXIgdGVsbGUgb3UgdGVsbGUgY2FuZGlkYXR1cmUsIG5vdXMgbm91cyBlbiBnYXJkZXJvbnMgYmllbiwgbmkgZGUgZmFpcmUgZGVzIHByZGljdGlvbnMgaW1wcm9iYWJsZXMsIG1haXMgcGx1dHQgZGUgdm9pciBjb21tZW50IHMnYW1vcmNlIGNldHRlIGNhbXBhZ25lIGV0IHF1aSBzb250IGxlcyBjYW5kaWRhdHMgZW4gbGljZSwgcGFybWkgbGVzcXVlbHMgZmlndXJlIHBldXQgdHJlIGxhIG91IGxlIGZ1dHVyIG1haXJlIGRlIFBhcmlzLiBOb3VzIHRyYWl0ZXJvbnMgYXVqb3VyZCdodWkgZGUgbGEgY291cnNlICBsJ2h0ZWwgZGUgdmlsbGUgZXQgZGFucyB1biBwcm9jaGFpbiBhcnRpY2xlIGRlIGxhIHNpdHVhdGlvbiBkYW5zIGxlcyBhcnJvbmRpc3NlbWVudHMgcXVpIG5vdXMgY29uY2VybmVudCBkaXJlY3RlbWVudCwgbGVzIDllLCAxMGUgZXQgMThlIGFycm9uZGlzc2VtZW50cy4KS25vd2luZyB0aGF0IHRoaXMgcGVyc29uIGRvZXNuIHRydWx5IHVuZGVyc3RhbmQgbWUgcmVnYXJkbGVzcyBvZiBob3cgbWFueSB5ZWFycyB3ZSBrbm93biBlYWNoIG90aGVyIGZvciBpcyB3aGF0IGlzIGdyZWF0bHkgZHJhaW5pbmcgZm9yIG1lIGJ1dCBob25lc3RseSB0aGUgYmxhbWUgY291bGQgZ28gdG8gbWUgYXMgaW5zaWRlIG15IGhlYWQgSSBpbiBhIGNvbnN0YW50IGJhdHRsZSB3aXRoIHRoaXMgb25lIHRoaW5nIHRob3NlIGFyb3VuZCBtZSBhZG9yZSBhbmQgY3VmZiB0aGVtc2VsdmVzIHRvbyBzbyBzdHJvbmdseS4KT3IgYW0gSSBqdXN0IG92ZXJseSBuZXVyb3RpYz8gSSBiZWVuIHRoaW5raW5nIGFib3V0IGdldHRpbmcgY2hlYXBlciwgaGVhdmllciBjbG90aGluZyBqdXN0IHNvIHRoYXQgSSBoYXZlIHNvbWUgcGVhY2Ugb2YgbWluZC4uIApIZSdzIG5vdCBnb2luZyB0byBiZSBzb21lIGtpbmQgb2YgcmV2b2x1dGlvbmFyeSBvciBsaWJlcmF0b3IuIEhlIGhhc24ndCBiZWVuIHNvIGZhci4gQW5kIHRoZXJlJ3Mgbm8gcmVhc29uIHRvIHN1c3BlY3QgaGUgd2lsbCBvciB3YW50cyB0byBvciBpcyBldmVuIGFibGUgdG8uIEhlJ3MgQW1lcmljYSwgc28gaGUgc3VwcG9ydHMgQW1lcmljYSB0eXBlIHRoaW5ncywgbGlrZSB0aGUgQ0lBLCBkZWZlbnNlIGNvbnRyYWN0b3JzLCB0aGUgbWVkaWEgKGhlJ3MgdmVyeSBnb29kIGZvciByYXRpbmdzIHJlZ2FyZGxlc3Mgb2YgcGFydGlzYW5zaGlwKSwgdGhlIHByaXNvbiBzdGF0ZSwgdGhlIHBvbGljZSwgQmlnIG9pbCwgZXRjLiBIZSBrbm93cyB0aGUgYnVzaW5lc3Mgb2YgQW1lcmljYSBpcyBidXNpbmVzcywgc28gaGUncyBhbGwgYWJvdXQgc3VwcG9ydGluZyBidXNpbmVzcyBlbnRlcnByaXNlcywgd2hhdGV2ZXIgYnVzaW5lc3NlcyB0aGV5IG1heSBiZS4KU2VhcmNoaW5nIGZvciBldGhpY2FsIGxpbmUgaW4gZ2FtYmxpbmcKRmlndXJlIG91dCBhIHdheSB0byBzdHVkeSB0aGlzIHF1aWNrbHkgYW5kIGVmZmljaWVudGx5IChzcHJlYWRzaGVldHMsIHNjcmlwdHMsIGV0YylJZiBJIGhhZCB0byBnaXZlIGRpcmVjdGlvbiB0byBhbnlvbmUgc3RhcnRpbmcgdG8gaW5jb3Jwb3JhdGUgc29sdmVycyBpbnRvIHRoZWlyIGdhbWUuIApDb21wdXRlciBzY2llbnRpc3RzIGhhdmUgY3JlYXRlZCBwb2tlciBwbGF5aW5nIHNvZnR3YXJlIHdoaWNoIHRoZXkgY2xhaW0gY291bGQgbm90IGJlIGJlYXRlbiBieSBhIGh1bWFuIGV2ZW4gaWYgdGhleSBwbGF5ZWQgMTIgaG91cnMgYSBkYXksIGV2ZXJ5IGRheSwgZm9yIDcwIHllYXJzICAgYW5kIHRoZXkgaGF2ZSBldmVuIGNyZWF0ZWQgYSB3ZWJzaXRlIHNvIHlvdSBjYW4gdHJ5IHlvdXIgbHVjay4KQXMgeW91ciBwb3NpdGlvbiBpbXByb3ZlcyB5b3UgY2FuIHBsYXkgcHJvZ3Jlc3NpdmVseSB3ZWFrZXIgaGFuZHMsIGJ1dCBoYW5kcyB0aGF0IGFtYXRldXJzIGdldCBob3QgZm9yIChzdWNoIGFzIEogMTBzKSBhcmUgYWxtb3N0IHVucGxheWFibGUgZnJvbSBhbnkgcG9zaXRpb24uIApIZWFkcXVhcnRlcnMuIApIZWxsbyBCYW1mbWFzdGVyOTksIHRoYW5rIHlvdSBmb3IgeW91ciBzdWJtaXNzaW9uISBVbmZvcnR1bmF0ZWx5LCB5b3VyIHN1Ym1pc3Npb24gaGFzIGJlZW4gcmVtb3ZlZCBmb3IgdGhlIGZvbGxvd2luZyByZWFzb24ocyk6ClZpdGFtaW4gRCBkZWZpY2llbmN5IGVpdGhlciBkdXJpbmcgcHJlZ25hbmN5IG9yIGVhcmx5IGNoaWxkaG9vZCBtYXkgYmUgYW4gZW52aXJvbm1lbnRhbCB0cmlnZ2VyIGZvciBBU0QgaW4gaW5kaXZpZHVhbHMgZ2VuZXRpY2FsbHkgcHJlZGlzcG9zZWQgZm9yIHRoZSBicm9hZCBwaGVub3R5cGUgb2YgYXV0aXNtLiBPbiB0aGUgYmFzaXMgb2YgdGhlIHJlc3VsdHMgb2YgdGhlIHByZXNlbnQgcmV2aWV3LCB3ZSBhcmd1ZSBmb3IgdGhlIHJlY29nbml0aW9uIG9mIHRoaXMgcG9zc2libHkgaW1wb3J0YW50IHJvbGUgb2Ygdml0YW1pbiBEIGluIEFTRCwgYW5kIGZvciB1cmdlbnQgcmVzZWFyY2ggaW4gdGhlIGZpZWxkLgpFbmpveSB0aGUgRm94eSBhbmQgQnVubnkgcGhvdG9zLiBJIHdpbGwgZ2V0IHNvbWUgcGhvdG9zIG9mIHRoZSB1bmljb3JucyBmb3IgYW5vdGhlciBwb3N0LiBJIHN0aWxsIGhhdmUgdG8gY2hlY2sgdGhlIEZhY2Vib29rIEJldGEgYXBwIGFuZCBzZWUgd2hhdCBpcyBoYXBwZW5pbmcuIEJlZW4gYnVzeSB0b2RheS4gSSB3aWxsIHdyaXRlIGFnYWluIHNvb24hCldoZW4geW91IG1ha2UgYSBkZWNpc2lvbiwgeW91IHRoaW5rIGl0J3MgeW91IGRvaW5nIGl0LCBidXQgaXQncyBub3QuIAoxLiBGZWFzdCBhdCB0aGUgRmFybSAgIEZvb2QgZmVzdGl2YWwgaW4gQWxzdG9udmlsbGU6IE1vYmlsZSBjaGVmcyB3aWxsIGJlIHVzaW5nIHRoZSBmYXJtcyBwcm9kdWNlIGluIHRoZWlyIGRpc2hlcyB0byBzaG93Y2FzZSB0aGUgYW1hemluZyB3b3JrIFN1bW1lcmxhbmQgSG91c2UgRmFybSBkb2VzLiAKIldlJ3ZlIGdvdCBvdmVyIGEgaHVuZHJlZCBzZWVkIHN0YWdlIGV4cGVyaW1lbnRzIHRoYXQgd2UncmUgZG9pbmcsIiBQcml0Y2hhcmQgc2F5cy4gIkl0J3MgdmVyeSBleGNpdGluZywgYmVjYXVzZSBwZW9wbGUgYXJlIGRpc2NvdmVyaW5nIGhvdyBxdWlja2x5IHRoZXkgY2FuIHN0YW5kIHVwIGEgd2Vic2l0ZSwgY3JlYXRlIGFkcywgYnV5IGFkcywgYW5kIHRoZW4gbG9vayBhdCBHb29nbGUgYW5kIEZhY2Vib29rIGFuYWx5dGljcywgZG8gQS9CIHRlc3RpbmcsIGZpZ3VyZSBvdXQgd2hhdCdzIHdvcmtpbmcgYW5kIHRoZW4gZ2V0IG1vcmUgc2FsZXMuIApBIGxhcmdlIG1ham9yaXR5IG9mIHRoaXMgY291bnRyeSwgaW5jbHVkaW5nIFJlcHVibGljYW5zLCBhcmUgaW4gZmF2b3Igb2YgTWVkaWNhcmUgZm9yIGFsbC4gU29tZXdoZXJlIGJldHdlZW4gNzclIDg5JSBvZiBBbWVyaWNhbnMgYmVsaWV2ZSBtb25leSBvbiBwb2xpdGljcyBpcyBhIHByb2JsZW0uIDY2JSBvZiBBbWVyaWNhbnMgd2FudCBhY3Rpb24gb24gY2xpbWF0ZSBjaGFuZ2UuIFlvdSBrZWVwIGJlbGlldmluZyB0aGlzIGNvdW50cnkgaXMgY2VudHJpc3QgYW5kIGxvc2UgYW5vdGhlciBlbGVjdGlvbiB0byBUcnVtcC5Nb2RlcmF0ZXMvY2VudHJpc3RzIGNhbiB2b3RlIGhvd2V2ZXIgdGhleSBsaWtlLiAKR2V0dGluZyByZWFjcXVhaW50ZWQgd2l0aCBoaXMgKG9yIGhlcikgYm9keSBmcm9tIHRoZSBmaW5nZXJzIG91dCBpcyBmdW4sIHRvby4gVGhhdCB0YW50YWxpemluZyBkaW1wbGUgYXQgdGhlIGJhc2Ugb2YgaGlzIHNwaW5lIG9yIHRoZSB0ZW5kZXIgc3BvdCBiZWhpbmQgaGVyIGVhciBjb3VsZCBkZWZpbml0ZWx5IHVzZSBzb21lIGF0dGVudGlvbi4gQSBsaXR0bGUgVExDIGluIHRoZSByaWdodCBzcG90IG1pZ2h0IGV2ZW4gbGVhZCB0byBhbiBhZnRlcm5vb24gd29ydGh5IG9mIGEgIkRlYXIgRGlhcnkiIGVudHJ5Li4gClRoYXQgYmVsdCB3YXMgc3RvbGVuIGFuZCB0aGUgaXNzdWUgbmVlZHMgdG8gYmUgcmVzb2x2ZWQuIE1ham9yaXR5IG9mIEZhbnMgZG9uJ3Qgd2FudCB0aGF0IHJlbWF0Y2ggYnV0IHRoZXJlIGlzIHN0aWxsIGEgcmVsYXRpdmVseSBiaWcgZGVtYW5kIGZvciBpdC4gClRoZW4gSSBiZWdhbiB5YXduaW5nIGFuZCBnZXR0aW5nIGJyYWluIGZvZyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBkYXkgYSBmZXcgaG91cnMgYWZ0ZXIgbXkgcG9zdCB3b3Jrb3V0IG1lYWwgKG15IGJpZ2dlc3QgbWVhbCkuIEkgZWF0IHNvbWUgbWVhdCBhbmQvb3IgY2hlZXNlLCBkcmluayBzb21lIHNhbHQgd2F0ZXIsIGJ1dCBJIHdvdWxkIHN0aWxsIHJlbWFpbiBmYXRpZ3VlZCBmb3IgYW4gaG91ciBvciBzbyB1bnRpbCBJIGF0ZSBtZWFsIDIuIEkgdHJpZWQgZXZlcnl0aGluZyB0byBjb21iYXQgaXQsIGJ1dCB0byBubyBhdmFpbC4uIApUaGUgY3JpbWluYWwgbGlhYmlsaXRpZXMgYWdlbmNpZXMgY291bGQgZmFjZSBpbiBtZWRpYSBwcm9iZQpCdXQgdGhlc2UgZ3V5cyByZWZ1c2luZyB0byAvIHRocmVhdGVuaW5nIG5vdCB0byBwbGF5IHVuZGVyIGV4aXN0aW5nIGRlYWxzIG1ha2UgbWUgbnV0cy4gIDcgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29FaCwgYWdyZWUgdG8gZGlzYWdyZWUuIApGcmlkYXksIDI4dGguIApJIHRoaW5rIHRoYXQgaGVscGVkLiBCdXQgYWxzbywgb25lIG9mIHRoZSB0aGluZ3Mgd2UgZXhwbGFpbmVkIHRvIHRoZSBwZW9wbGUgd2hvIHBhcnRpY2lwYXRlZCB3YXMgdGhhdCB0aGlzIGlzIG5vdCBqdXN0IGJsaW5kbHkgdGVsbGluZyB5b3VyIHN0b3J5LiBUaGlzIGlzIG5vdCBwZXJmb3JtaW5nIHlvdXIgcGFpbiBmb3Igb3RoZXIgcGVvcGxlLiAKVGhlIGRpZmZlcmVuY2UgcmVsaWVzIG9uIHRoZSBibHVmZmluZy4gClNhbXVyZ3V5OTkwIHUKTm90IGEgdHJ1Y2sgbG9hZCBvZiBidWxsc2hpdCBidXQgYW4gZXhjaGFuZ2UgSSByZW1lbWJlciBjcnlzdGFsIGNsZWFyLiBJIHdhcyBsb29raW5nIHRvIGdldCBhIG5ldyBjYXIgYWJvdXQgMiB5ZWFycyBhZ28uIE1vc3RseSBsb29raW5nIGZvciBzcG9ydHkgaGF0Y2hiYWNrcywgYnV0IEkgaGFkIGFsd2F5cyBsaWtlZCB0aGUgbGluZXMgb24gdGhlIEh5dW5kYWkgR2VuZXNpcyBjb3VwZXMsIHNvIEkgd2VudCBkb3duIGZvciBhIHRlc3QgZHJpdmUuIEkgbmV2ZXIgbWV0IGEgbGVzcyBpbnRlcmVzdGVkIHNhbGVwZXJzb24gaW4gbXkgbGlmZSwgaGUgd2FzIHByYWN0aWNhbGx5IHN3aXBpbmcgdGluZGVyIG1hdGNoZXMgd2hpY2ggdGFsa2luZyBtZSB0aHJvdWdoIGZlYXR1cmVzLgpXZSBzYXcgaGltIHNob3Zpbmcgc29tdGJqbmcgZnJvbSBoaXMgd2Fpc3QgdW5kZXIgaGlzIHNlYXQgd2hlbiBoZSBzYXcgdXMuLiAKQWx0aG91Z2ggQ05OIGFuZCB0aGUgQXRsYW50YSBDb25zdGl0dXRpb24gSm91cm5hbCBjb3JyZWN0bHkgcmVwb3J0ZWQgdGhhdCB0aGUgdmlkZW8gd2FzIGEgbWlzcmVwcmVzZW50YXRpb24gb2YgdGhlIGZ1bGwgc3BlZWNoLCBGb3ggTmV3cyBhbmQgdGhlIHJpZ2h0IHdpbmcgR09QIG5vaXNlIG1hY2hpbmUgc3RhcnRlZCB0aGUgZHJ1bSBiZWF0IGFuZCB0aGUgRGVtcyBkaWQgd2hhdCB0aGV5IGFsd2F5cyBkbyAgdGhleSBjYXZlZC4gVG8gWW9zaSBTZXJnYW50LCBpdCBpcyB0aW1lIGZvciBPYmFtYSBhbmQgdGhlIERlbXMgdG8gImdyb3cgYSBwYWlyLiIgU2VyZ2FudCB3b3VsZCBrbm93IHdoYXQgaXQgbGlrZSB0byBiZSB0aHJvd24gdW5kZXIgdGhlIGJ1cyBieSB0aGUgRGVtcyBhbmQgdGhpcyBhZG1pbmlzdHJhdGlvbiwgc2luY2UgaGUgaGltc2VsZiB3YXMgYWxzbyBtaXNyZXByZXNlbnRlZCBieSBCcmVpdGJhcnQgb2YgQmlnIEdvdmVybm1lbnQgd2hlbiBCcmVpdGJhcnQgbWlzcmVwcmVzZW50ZWQgaGlzIHdvcmsgYXMgdHJ5aW5nIHRvIHVzZSB0aGUgTmF0aW9uYWwgRW5kb3dtZW50IGZvciB0aGUgQXJ0cyB0byBzdXBwb3J0IHRoZSBPYmFtYSBBZG1pbmlzdHJhdGlvbkxldCBwcmV0ZW5kIHRoYXQgdGhlIERlbXMgYXJlIGFjdHVhbGx5IGNhcGFibGUgb2YgbGVhcm5pbmcgZnJvbSB0aGVpciBwYXN0IG1pc3Rha2VzIChubyBldmlkZW5jZSB5ZXQpIGFuZCBzYXkgdGhleSBkbyBsZWFybiB0byAiZ3JvdyBhIHBhaXIiIG9yIHBlcmhhcHMgbW9yZSBhY2N1cmF0ZWx5IGFuZCBsZXNzIHNleGlzdCAgZ2V0IGEgc3BpbmUgIGFuZCBiZWdpbiB0byBzdGFuZCB1cCB0byB0aGUgYWJzb2x1dGUgaGF0ZSBhbmQgcHJvcGFnYW5kYSB0aGF0IGlzIEJpZyBHb3Zlcm5tZW50LCBGb3ggIk5ld3MsIiBhbmQgdGhlIHJlc3Qgb2YgdGhlIG5vaXNlIG1hY2hpbmUuIApJdCBvd2VzIG11Y2ggb2YgdGhhdCBjaGFybSB0byBzb21lIGxvdmVseSBpbnN0cnVtZW50YWwgc29sb3MsIG5vdGFibHkgYnkgdHJ1bXBldGVyIExhcnJ5IFdyaWdodCwgb2JvaXN0IE1lZ2FuIE1hcm9sZiwgYW5kIGNsYXJpbmV0aXN0IEpvaG4gU2Nod2FydHouLiAKSWwgbid5IGEgZG9uYyByaWVuIGQndG9ubmFudCAgY2UgcXUnb24gcmV0cm91dmUgZGFucyBsZSBDb3JhbiB1bmUgZGVzY3JpcHRpb24gZGUgbCdlbWJyeW9uIHZlbnUgZW4gZHJvaXRlIGxpZ25lIGRlIEdhbGllbi4gCkhlIHB1bGxzIG91dCB0aGlzIHN3b3JkLCB0YWtlcyB0aGUgc2hlYXRoIG9mZiB0aGUgc3dvcmQsIGFuZCBoZSdzIGxvb2tpbmcgYXQgaXQuIEFuZCBoZSBzYWlkLCAnSXNuJ3QgdGhpcyBhIGJlYXV0aWZ1bCBzd29yZD8nICIgUm9ieW4gc2FpZC4gCk91ciBtYXJrZWQgcGxheWluZyBjYXJkcyBhcmUgY3JlYXRlZCBzcGVjaWFsbHkgd2l0aCB0aGUgbGF0ZXN0IHRlY2hub2xvZ3kgb2YgdGhlIGx1bWlub3VzIG1hcmtzLiBUaGUgbWFya3MgYXJlIHByaW50ZWQgd2l0aCBpbnZpc2libGUgaW5rIGF0IHRoZSBiYWNrIHNpZGUuIApJblNpZ2h0IEhQMyBkZXBsb3lzIGFib3V0IG9uZSB3ZWVrIGFmdGVyIHRoZSBzZWlzbW9tZXRlciBpcyBpbiBwbGFjZS4gSW5TaWdodCBhcm0gd2lsbCBwbGFjZSB0aGUgaGVhdCBwcm9iZSBvbiB0aGUgZ3JvdW5kLCBhbmQgaXQgd2lsbCBiZWdpbiB0byBzbG93bHkgYnVycm93IGRvd24gZnJvbSBpdHMgbG9jYXRpb24uIFRoZSBtb2xlIGF0IHRoZSBlbmQgb2YgdGhlIHByb2JlIHNsb3dseSBidXJyb3dzIGludG8gdGhlIGdyb3VuZCBsaWtlIGEgc2VsZiBoYW1tZXJpbmcgbmFpbC4gSXQgaGFtbWVycyBkb3duIGZvciB1cCB0byBmb3VyIGhvdXJzIGF0IGEgdGltZTsgZWFjaCBmb3VyIGhvdXIgcGVyaW9kIGlzIGtub3duIGFzIG9uZSAiaGFtbWVyaW5nIGN5Y2xlLiIgQXMgaXQgZGVzY2VuZHMsIGl0IHN0b3BzIHJvdWdobHkgZXZlcnkgMTkuNSBpbmNoZXMgKDUwIGNlbnRpbWV0ZXJzKSB0byBnZW5lcmF0ZSBhIHB1bHNlIG9mIGhlYXQuIFRoZSBwcm9iZSB3YXRjaGVzIGhvdyB0aGlzIHB1bHNlIG9mIGhlYXQgdHJhdmVscyB0aHJvdWdoIHRoZSBzdWJzdXJmYWNlIG1hdGVyaWFsIGFyb3VuZCBpdC4gSXQgbW9uaXRvcnMgaG93IHF1aWNrbHkgb3Igc2xvd2x5IHRoZSBtb2xlIGhlYXRzIHVwIHRoZSBzdXJyb3VuZGluZyBzb2lsOyB0aGlzIGlzIGtub3duIGFzIG1lYXN1cmluZyB0aGUgInRoZXJtYWwgY29uZHVjdGl2aXR5IiBvZiB0aGUgc29pbC4KQSBzdWl0Y2FzZSBkZXNpZ25lZCB0byBtb3ZlIGFsb25nc2lkZSB5b3Ugd2hlcmV2ZXIgeW91IGdvLiBUaGUgInNtYXJ0JycgbHVnZ2FnZSwgY2FsbGVkIE92aXMsIGNvbWVzIGVxdWlwcGVkIGl0IHdpdGggZml2ZSBzbWFsbCBjYW1lcmFzIHRoYXQgYXJlIHN1cHBvc2VkIHRvIHVzZSAicmVjb2duaXRpb24nJyB0ZWNobm9sb2d5IHRvIGtlZXAgdGFicyBvbiB5b3UgZXZlbiBpbiBhIGNyb3dkLiAKVGhlIENvbW1pdHRlZSBtYXkgcmVjb21tZW5kIHJlZmVycmFsIG9mIGEgbWF0dGVyIHRvOnRoZQpJIGhhdmUgY29tcGxleCBtZWRpY2FsIGlzc3VlcyBhbmQsIHRvIGJlIGhvbmVzdCwgSSBoYXZlbiBzZWVuIGEgZ2VuZXJhbCBwcmFjdGl0aW9uZXIgb3IgZm91bmQgb25lIHRvIHJlcGxhY2UgaGVyIHNpbmNlIHNoZSBmaXJlZCBtZS4gCkl0IG9uY2UgYWdhaW4gdG9wcGVkIHRoZSBjaGFydHMgd2l0aCBzbWFzaCBoaXRzICJCb3JuIFRoaXMgV2F5IiAiSnVkYXMiICJFZGdlIG9mIEdsb3J5IiBhbmQgIllvdSBhbmQgSSIuIApJdCBhIGZlbG9ueSB0byBrbm93aW5nbHkgc2VsbCBhIGZpcmVhcm0gdG8gYW55b25lIHdobyBjYW4gcGFzcyBhIGJhY2tncm91bmQgY2hlY2suClNvIEkgYmVlbiBmcmllbmRzIHdpdGggdGhpcyBnaXJsIGZvciB5ZWFycy4gU2hlIHN0YXJ0ZWQgZGF0aW5nIHRoaXMgZ2lybCBtYXliZSAyIHllYXJzIGFnbywgYW5kIGhlIGJlZW4gdGhyZWF0ZW5pbmcgbWUgYXQgbGVhc3Qgb25jZSBvciB0d2ljZSBhIHllYXIgZm9yIGF3aGlsZSBub3cuIFRoZSBvdGhlciBkYXkgbWUgYW5kIHR3byBvZiBteSBmcmllbmRzIHdlcmUgd2Fsa2luZyBhcm91bmQgYW5kIGhlIGNhbWUgdXAgdG8gdXMgYW5kIHNhaWQgIkdvb2Qgam9iIG9uIHRleHRpbmcgX19fIHJpZ2h0IGFmdGVyIHdlIGJyb2tlIHVwIiBzbyBJIHNhaWQgIldoYXQ/IiBoZSB0aGVuIHB1dCBoaXMgYXJtIGFyb3VuZCBtZSBhbmQgc2FpZCAiSWYgeW91IGV2ZXIgZG8gdGhhdCBhZ2FpbiwgSSB3aWxsIGZ1Y2sgeW91ciBzaGl0IHVwIiB0aGVuIGhlIHNhaWQgImZ1Y2tpbmcgZ2F5IGFzcyBwdXJwbGUgaGFpciIgYW5kIHJ1ZmZsZWQgaXQuIFRoZW4gdGhlIGxvc2VyIGdvdCBpbiBoaXMgbW9tIGNhci4gSW0gdGlyZWQgb2YgdGhpcyBzaGl0IGFuZCBvYnZpb3VzbHkganVzdCB0cnlpbmcgdG8gbGV0IGl0IGZpenpsZSBvdXQgaXNuIHdvcmtpbmcuIElzIHRoaXMgbGVnYWxseSBhIHRocmVhdD8gSWYgdGhlcmUgYW55dGhpbmcgbW9yZSB0byB0aGlzIEkgY2FuIHRocm93IGF0IGhpbSBwbGVhc2UgbGV0IG1lIGtub3cuIEkgZGVzcGVyYXRlIGFuZCB3YW50IHRvIHRocm93IGFueXRoaW5nIEkgY2FuIGF0IGhpbS4gSSBoYXZlIHR3byB3aXRuZXNzZXMgdGhhdCB3ZXJlIHRoZXJlIHRvIHNlZSBpdCBoYXBwZW4uIEkgYXBwcmVjaWF0ZSBhbnkgaGVscC4gVGhhbmsgeW91CldlbGwsIExPIDIgYXJyaXZlZCBsYXN0IHdlZWshIFN1cGVyIGZhc3QgbGFib3IsIGNvbXBhcmVkIHRvIG15IGZpcnN0LiBUaGUgd2hvbGUgZXhwZXJpZW5jZSB3YXMgYWN0dWFsbHkgcmVhbGx5IGVuam95YWJsZSAobWludXMgdGhlIHN1cGVyIHBhaW5mdWwgY29udHJhY3Rpb25zKS4gTm93IHdlIGp1c3QgdHJ5aW5nIHRvIGFkanVzdCB0byBiZWluZyBhIGZhbWlseSBvZiA0LiAKRmlyc3QgY291cGxlIHllYXJzIHdlcmUgcmVhbGx5IHRvdWdoLiBCb3RoIG15IHdpZmUgYW5kIEkgd29ya2VkIHBhcnQgdGltZSBqb2JzIGF0IGZpcnN0LiAKT3IsIHlvdSBtaWdodCB3YW50IG9ubHkgYmx1ZSB0b25lZCBwaG90b3MgaW4gdGhlIGNvbGxhZ2Ugc28gdGhhdCBpdCBtYXRjaGVzIHRoZSByb29tIGZvciB3aGljaCB5b3UncmUgbWFraW5nIHRoZSBjb2xsYWdlLiBUZXN0IG91dCBkaWZmZXJlbnQgYXJyYW5nZW1lbnRzLCBwYXR0ZXJucywgYW5kIGNvbG9yIHNjaGVtZXMuIApNeWVycyAgIEFpcnBvcnQgSSA3NUJ5IEhvdGVsIFR5cGVGb3J0IE15ZXJzIEZhbWlseSBIb3RlbHNGb3J0IE15ZXJzIEJ1c2luZXNzIEhvdGVsc0ZvcnQgTXllcnMgR3JlZW4gSG90ZWxzUm9tYW50aWMgSG90ZWxzIGluIEZvcnQgTXllcnNGb3J0IE15ZXJzIFNwYSBSZXNvcnRzRm9ydCBNeWVycyBSZXNvcnRzQnkgSG90ZWwgQ2xhc3M0IHN0YXIgSG90ZWxzIGluIEZvcnQgTXllcnMzIHN0YXIgSG90ZWxzIGluIEZvcnQgTXllcnNCeSBIb3RlbCBCcmFuZEJlc3QgV2VzdGVybiBIb3RlbHMgaW4gRm9ydCBNeWVyc1RyYXZlbG9kZ2UgSG90ZWxzIEx0ZCBpbiBGb3J0IE15ZXJzUmVzaWRlbmNlIElubiBIb3RlbHMgaW4gRm9ydCBNeWVyc1dvb2RTcHJpbmcgU3VpdGVzIGluIEZvcnQgTXllcnNJbnRlckNvbnRpbmVudGFsIEhvdGVscyBpbiBGb3J0IE15ZXJzSGlsdG9uIEhvdGVscyBpbiBGb3J0IE15ZXJzRGF5cyBJbm4gSG90ZWxzIGluIEZvcnQgTXllcnNDb21mb3J0IElubiBIb3RlbHMgaW4gRm9ydCBNeWVyc0NvdXJ0eWFyZCBIb3RlbHMgaW4gRm9ydCBNeWVyc0xhIFF1aW50YSBJbm4gU3VpdGVzIGluIEZvcnQgTXllcnNQb3B1bGFyIEFtZW5pdGllc0ZvcnQgTXllcnMgSG90ZWxzIHdpdGggUG9vbHNGb3J0IE15ZXJzIEhvdGVscyB3aXRoIEZyZWUgUGFya2luZ1BldCBGcmllbmRseSBIb3RlbHMgaW4gRm9ydCBNeWVyc1BvcHVsYXIgTmVpZ2hib3Job29kc0hvdGVscyBuZWFyIFZhbGVuY2lhIFRlcnJhY2VIb3RlbHMgbmVhciBTdW5zZXQgUGFya0hvdGVscyBuZWFyIFBhbG1zSG90ZWxzIG5lYXIgQ2FtcGJlbGwgQWNyZXNIb3RlbHMgbmVhciBNYXJhdmlsbGFIb3RlbHMgbmVhciBEdW5iYXJIb3RlbHMgbmVhciBXaW5rbGVyIFNhZmUgTmVpZ2hib3Job29kUG9wdWxhciBGb3J0IE15ZXJzIENhdGVnb3JpZXNGb3J0IE15ZXJzIERvd250b3duIEhvdGVsc0ZvcnQgTXllcnMgQ2hlYXAgSG90ZWxzSG90ZWxzIHdpdGggU2h1dHRsZSBpbiBGb3J0IE15ZXJzRm9ydCBNeWVycyBIb3RlbHMgd2l0aCBLaXRjaGVuZXR0ZUZvcnQgTXllcnMgSG90ZWxzIHdpdGggSmFjdXp6aUZvcnQgTXllcnMgSG90ZWxzIHdpdGggU21va2luZyBSb29tc0ZvcnQgTXllcnMgTW9kZXJuIEhvdGVsc0ZvcnQgTXllcnMgU2FmZSBIb3RlbHNRdWlldCBIb3RlbHMgaW4gRm9ydCBNeWVyc1NwcmluZyBCcmVhayBIb3RlbHMgaW4gRm9ydCBNeWVyc05lYXIgTGFuZG1hcmtzSG90ZWxzIG5lYXIgU3RldmllIFRvbWF0byBTcG9ydHMgUGFnZUhvdGVscyBuZWFyIEdvIEV4cHJlc3MgT25lIExMQ0hvdGVscyBuZWFyIFdoYXQgQSBIYXdnIENoYXJ0ZXJzSG90ZWxzIG5lYXIgR2xvdyBTa2luIENhcmUsIEluY0hvdGVscyBuZWFyIElycmVzaXN0aWJsZSBDb25mZWN0aW9uc0hvdGVscyBuZWFyIE1pY2hhZWwgQS4gCllvdSB3ZXJlIHNvIGZ1bGwgb2YgbGlmZSBhbmQgZW5lcmd5IHNvbWV0aW1lcyBhbmQgeW91IGFsd2F5cyBmb3VuZCBzb21lIGtpbmRhIG1pc2NoaWV2b3VzIHdheSBvZiBtYWtpbmcgdXMgbGF1Z2guIE5vIG1hdHRlciB3aGF0IHlvdSBkaWQsIHlvdSBjb3VsZCBkbyBubyB3cm9uZy4gCllvdSBtaWdodCBhbHNvIGJlIGludGVyZXN0ZWQgaW4gUG9seXZhZ2FsIHRoZW9yeS4gCk5hdHV1cmxpamsgaXMgWmV2ZW5zdGVyIE1hc3NhZ2Ugb29rIHdlZXIgYWFud2V6aWchIEJlem9layBkZSBzdGFuZCB2b29yIGVlbiBoZWVybGlqa2Ugc3RvZWxtYXNzYWdlIHZhbiAxNSBtaW51dGVuIHZvb3Igc2xlY2h0cyA3LDUwIChub3JtYWxpdGVyIDEzLDAwKS4KUGhyYXNlcyBsaWtlICJEb24ndCB0aHJvdyBzdG9uZXMgYXQgZ2xhc3MgaG91c2VzLCBiZWNhdXNlIHlvdSBtaWdodCB3YWxrIGJ5IHRoZXJlIGluIGJhcmUgZmVldCBzb21lZGF5IiwgImRvbid0IGdldCBjYXVnaHQgYmV0d2VlbiBhIHJvY2sgYW5kIGEgc3RvbmUiLCBvciAiQnV5IGhpZ2gsIHNlbGwgbG93LCBhbmQgbWFrZSBpdCB1cCBvbiB2b2x1bWUiIHdpbGwgYWx3YXlzIG1ha2UgdXMgc21pbGUuIFRoZSBBbGV4YW5pYW4gZmFtaWx5IHdpbGwgcmVjZWl2ZSB2aXNpdG9ycyBhdCB0aGUgRXJiIEdvb2QgRmFtaWx5IEZ1bmVyYWwgSG9tZSwgMTcxIEtpbmcgU3QuIApUaGUgIkFzYWhpIiBjaGFyYWN0ZXIsIG9yIGEgInJpdmFsIiBjaGFyYWN0ZXIgZm9yIEVyaW5hIGF0dGVudGlvbiwgc2hvdWxkIGhhdmUgYmVlbiBhIGNvY2t5IGFsdW0gb2YgYSBjb3VudGVycGFydCBjb29raW5nIHNjaG9vbCBpbiB0aGUgVVMgb3IgaW4gRnJhbmNlLiBIZSBjb3VsZCBhbHNvIGJlIHRoZSAiYW50aSBTb21hIiBpbiB0aGF0IGhlIHdhcyB0cmFpbmVkIGJ5IEpvdSB3aGVuIGhlIHdhcyBnb2luZyBhcm91bmQgdGhlIHdvcmxkLCBhbmQgdGhlIGJvbyBob28gZHJhbWEgYmFja3N0b3J5IGNhbiBzdGlsbCBiZSBpbnRlZ3JhdGVkIGludG8gdGhhdCByaXZhbCAiQXNhaGkiIGNoYXJhY3Rlci4gWW91IGNhbiBldmVuIG1ha2UgdGhlIGd1eSBhIGRhbmR5IG9yIGEgInByaW5jZSBjaGFybWluZyIgdG8gY29tcGV0ZSB3aXRoIFNvbWEgInBsYWluIiBjaGFyYWN0ZXIuIEp1c3QgZG9uIHB1dCBpbiB0aGUgTm9pciBzaGl0IGJhY2tzdG9yeSBvZiB0aGF0ICJBc2FoaSIgY2hhcmFjdGVyIGFuZCBJIHRoaW5rIGl0IHNob3VsZCBzdGlsbCB3b3JrLgpUaGVyZSB3YXMgYSBnb29kIHBvZGNhc3QgYSB3aGlsZSBhZ28gdGhhdCBleHBsYWluZWQgdGhlIGNhc2UgdmVyeSB3ZWxsLiAKSSB0YWtlIHBlb3BsZSBhdCB0aGVpciB3b3JkIGFuZCB0aGlzIGhhcyB3b3JrZWQgd2VsbCBmb3IgbWUuIEkgZG9uIHR3aXN0IHRoZSB0cnV0aC4gSSBibHVudCBhbmQgc3RyYWlnaHQgZm9yd2FyZCBhYm91dCB3aGF0IEkgd2FudC4KVGhlIGZpcnN0IG9uZSwgZm9yIGluc3RhbmNlIEEgSyBRIEogMiB3aWxsIGJlYXQgYW5vdGhlciBzdWl0IG9mIEEgSyBRIDEwIDkgYmVjYXVzZSB5b3UgZGlzcmVnYXJkIGhpZ2hlc3QgdGllcyB1bnRpbCB5b3UgZmluZCB3aG9zZSBoaWdoZXN0IHVudGllZCBjYXJkIGlzIGhpZ2hlci4gU2FtZSB0aGluZywgd2l0aCwgZm9yIGluc3RhbmNlLCBzdHJhaWdodHMuIEEgMiAzIDQgNSA2IHN0cmFpZ2h0IGJlYXRzIGFuIEEgMiAzIDQgNSBzdHJhaWdodCBldGMuIApQZW9wbGUgb2Z0ZW4gaGF2ZSBhYnNvbHV0ZWx5IGxlZ2l0IGNvbmNlcm5zIGFib3V0IHZheHhpbmcgYW5kIHdpbGwgZ2V0IGxhYmVsZWQgYSBjcmF6eSBiYWJ5IGtpbGxlciBmb3IgdGhlaXIgcXVlc3Rpb25pbmcgb2YgdGhlIHN0YXR1cyBxdW8uLiAKS2lkcyBhcmUgYXdlc29tZS4gRXZlbiB3aGVuIEkgbWV0IHRoZW0sIHRoZXkgaGFkIHNvbWUgYmVoYXZpb3JhbCBzdHVmZiBJIGtuZXcgSSB3YW50ZWQgdG8gd29yayBvbiwgYnV0IHRoZXkgd2VyZSBhYnNvbHV0ZWx5IG5vdCBzcG9pbGVkLiBUaGV5IHdlcmUgZmFtaWxpYXIgd2l0aCB0aGUgd29yZCAibm8iLiAKTGEgZGNvdXZlcnRlIGRlIHZ0ZW1lbnRzIGNvbmZlY3Rpb25ucyBlbiBmaWxzIGRlIGNoYW52cmUgZW4gQ2hpbmUgZXQgZG9udCBsIHJlbW9udGUgIDYwMCBhbnMgYXZhbnQgSi4gCk9udGJpanRlbiBkZWRlbiB3ZSB0cm91d2VucyBpbiBoZXR6ZWxmZGUgd2VncmVzdGF1cmFudCBhbHMgYmlqIG9uemUgU2xvdmVuaSByZWlzLCBlbiB0b2V2YWxsaWcgd2FzIHZhbiBvbnplIHZvbGdlbmRlIHN0b3BzIGJpaiBkaWUgbW9vaWUgd2VncGFya2luZyB2b2wgcm96ZSBibG9lbWVuIGRpZSB3ZSBvb2sgYWwga2VuZGVuIHZhbiBlZW4gdm9yaWdlIHJlaXMuIFdlIHZvbmRlbiBoaWVyIHRyb3V3ZW5zIGVlbiBsZXVrZSBnZW9jYWNoZSB2ZXJzdG9wdCBpbiBlZW4gbmFnZW1hYWt0IGJvcmRqZSB2YW4gZWVuIHR1aW5hYW5uZW1lciwgaGloaS4gVGlqZGVucyBvbnplIGhlZW5yZWlzIHppam4gd2Ugc293aWVzbyBoZWVsIHZhYWsgZ2VzdG9wdCwgdm9vciBnZW9jYWNoZXMgZW4ga29mZmllIHBhdXplcyBkdXMgd2UgaGViYmVuIGVjaHQgd2VsIGdlbm90ZW4gdmFuIGRlemUgYXV0byBkYWcuIApPdmVydmlldyBmb3IgaGVybWFuCkFuZCBhbGwgb2YgdGhpcyB1bmZvbGRpbmcgaW4gYSByZWFsaXR5IFRWIGxhbmRzY2FwZSB3aXRoIGNhbWVyYXMgaW4gYmVkcm9vbXMgYW5kIGJvYXJkcm9vbXMsIHJlc3VsdGluZyBpbiBhIGN1bHR1cmUgbGVzcyBhYm91dCBhcG9sb2d5IGFuZCByZW1vcnNlIHRoYW4gIm93bmluZyBpdCIgICBiYWQgYmVoYXZpb3IgZXhjdXNhYmxlIG9yIG91dHJpZ2h0IGFjY2VwdGFibGUgc28gbG9uZyBhcyBvbmUgZG91YmxlcyBkb3duLgpCdXQgdGhpcyB0aW1lLCBJIGhhdmUgdG8gZ28gYmFjayB0byBCcmF6aWwuIApJJ2QgcmF0aGVyIHNlZSBhIHJvdXRpbmUgbGlrZSBFbGxpZSBCbGFjayBkb2VzIG9uIGZsb29yLiBTaGUgaXNuJ3QgdGhlIG1vc3QgYW1hemluZyBkYW5jZXIsIGJ1dCBwaWNrcyBtdXNpYyB0aGF0IGlzIGRyYW1hdGljIGFuZCBtYWtlcyBpdCB3b3JrIGFtYXppbmcuIEkgdGhpbmsgRWxsaWUgaGFzIGRvd24gdGhlICJJIGNhbiBkbyBhIGZ1Y2tpbmcgYW1hemluZyBmbG9vciByb3V0aW5lIHdpdGhvdXQgYmVpbmcgdGhlIHN0cm9uZ2VzdCBkYW5jZXIgYW5kIHN0aWxsIG1ha2UgZXZlcnl0aGluZyB3b3JrLiIKQnV0IG5vdyB0aGF0IHlvdSBoYXZlIHR3byBNdXNsaW1zIHRoYXQgYXJlIHNheWluZyAiaGVyZSBpcyBhIGdyb3VwIG9mIHBlb3BsZSB0aGF0IHdlIHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgdGhleSBoYXZlIHRoZSBkaWduaXR5IHRoYXQgeW91IHdhbnQgZXZlcnlvbmUgZWxzZSB0byBoYXZlISIgd2UgZ2V0IHRvIGJlIGNhbGxlZCBuYW1lcywgd2UgZ2V0IHRvIGJlIGxhYmVsZWQgYXMgaGF0ZWZ1bC4gTm8sIHdlIGtub3cgd2hhdCBoYXRlIGxvb2tzIGxpa2UuIFdlIGV4cGVyaWVuY2UgaXQgZXZlcnkgc2luZ2xlIGRheS4gW2FwcGxhdXNlXSBXZSBoYXZlIHRvIGRlYWwgd2l0aCBkZWF0aCB0aHJlYXRzLiBJIGhhdmUgY29sbGVhZ3VlcyB3aG8gdGFsayBhYm91dCBkZWF0aCB0aHJlYXRzLiBBbmQgc29tZXRpbWVzIHRoZXJlIGFyZSBjaXRpZXMgaW4gbXkgc3RhdGUgd2hlcmUgdGhlIGdhcyBzdGF0aW9ucyBoYXZlIHdyaXR0ZW4gb24gdGhlaXIgYmF0aHJvb21zICJhc3Nhc3NpbmF0ZSBJbGhhbiBPbWFyIi4gSSBoYXZlIHBlb3BsZSBkcml2aW5nIGFyb3VuZCBteSBkaXN0cmljdCBsb29raW5nIGZvciBteSBob21lLCBmb3IgbXkgb2ZmaWNlLCBjYXVzaW5nIG1lIGhhcm0uIEkgaGF2ZSBwZW9wbGUgZXZlcnkgc2luZ2xlIGRheSBvbiBGb3ggTmV3cyBhbmQgZXZlcnl3aGVyZSwgcG9zdGluZyB0aGF0IEkgYW0gYSB0aHJlYXQgdG8gdGhpcyBjb3VudHJ5LiBTbyBJIGtub3cgd2hhdCBmZWFyIGxvb2tzIGxpa2UuIFRoZSBtYXNqaWQgSSBwcmF5IGluIGluIE1pbm5lc290YSBnb3QgYm9tYmVkIGJ5IHR3byBkb21lc3RpYyB3aGl0ZSB0ZXJyb3Jpc3RzLiBTbyBJIGtub3cgd2hhdCBpdCBmZWVscyB0byBiZSBzb21lb25lIHdobyBpcyBvZiBhIGZhaXRoIHRoYXQgaXMgdmlsaWZpZWQuIEkga25vdyB3aGF0IGl0IG1lYW5zIHRvIGJlIHNvbWVvbmUgd2hvc2UgZXRobmljaXR5IHRoYXQgaXMgdmlsaWZpZWQuIEkga25vdyB3aGF0IGl0IGZlZWxzIHRvIGJlIG9mIGEgcmFjZSB0aGF0IGlzLCBsaWtlIEkgYW0gYW4gaW1taWdyYW50LCBzbyBJIGRvbid0IGhhdmUgc29tZSBvZiB0aGUgaGlzdG9yaWNhbCBkcmFtYSBvZiBzb21lIG9mIG15IHNpc3RlcnMgYW5kIGJyb3RoZXJzIGhhdmUgaW4gdGhpcyBjb3VudHJ5LCBidXQgSSBrbm93IHdoYXQgaXQgbWVhbnMgZm9yIHBlb3BsZSB0byBqdXN0IHNlZSBtZSBhcyBhIGJsYWNrIHBlcnNvbiwgYW5kIHRvIHRyZWF0IG1lIGFzIGxlc3MgdGhhbiBhIGh1bWFuLgoiVGhlIG5hbm55IHNjcmFwZXMgb3V0IHRoZSBsYXN0IG1vcnNlbHMgZnJvbSBqYW0gamFyczsgc2hlIG1ha2VzIHRoZSBjaGlsZHJlbiBsaWNrIG91dCB0aGVpciBwb3RzIG9mIHlvZ3VydCwiIFNsaW1hbmkgd3JpdGVzLiAKV2UgbG9zdCB0d28gc3RhcnRlcnMgZm9yIHR3byBwbGF5ZXJzIGdvbmUgYWZ0ZXIgdGhlIHNlYXNvbi4gCk5hbm8gZGlhbW9uZHMsIG1lbHQgZ2xhc3MsIGFuZCB0aGluZ3MgdGhhdCBjb21lIGZyb20gaGlnaCBwcmVzc3VyZXMgYW5kIGhlYXQ/IERvbiBrbm93IGlmIEkgaGF2ZSB0aG9zZSB0ZXJtcyBjb3JyZWN0IGZyb20gbWVtb3J5Li4gCkkgcmVhbGx5IGhvcGUgdGhhdCB0aGV5IHdpbGwgYWRkIHNvbWUgd2VhcG9ucyBvciBza2lucyBhcyBETEMgZXZlbiB0byBqdXN0IGhhdmUgZnVuIGluIGJsb29keSBwYWxhY2UuIApJIHdhcyBhbHdheXMgYW5ub3llZCBiZWNhdXNlIHdlIHdvdWxkIGJlIHRoZXJlIGZvciB3aGF0IGZlbHQgbGlrZSBmb3JldmVyLCBidXQgaGUgd291bGQgZml4IHNpbXBsZSBzdHVmZiBmb3IgZnJlZSBvciBmb3IgaGFyZGx5IGFueSBtb25leSBpZiBpdCB3YXMgYW4gZW1lcmdlbmN5LiBJIGRpZG4gYXBwcmVjaWF0ZSB0aGF0IHVudGlsIEkgd2FzIG9sZGVyIGFuZCBvbmUgZGF5IHJlYWxpemVkIHRoYXQgdGhlcmUgYSBnb29kIGNoYW5jZSBoZSBzZXJpb3VzbHkgaGVscGVkIGh1bmRyZWRzIG9mIHBlb3BsZSBieSBqdXN0IGZpeGluZyBsaXR0bGUgdGhpbmdzIGluIHBhcmtpbmcgbG90cyBvciBvbiB0aGUgc2lkZSBvZiB0aGUgcm9hZC4gCkkgaGFkIGEgcHJvYmxlbSB3aXRoIG9uZSBpdGVtIEkgcmVjZWl2ZWQgYmVpbmcgZGVmZWN0aXZlLCBDUyB3ZXJlIHZlcnkgdW5oZWxwZnVsLiAKU2llIHdhciBkaWUgbGV0enRlIFplaXQgc28ga3JpYmJlbGlnIGdld2VzZW4gd2VnZW4gZGllc2VzIFRlcm1pbnMsIHNpZSBoYXR0ZSBlcyBnZXNjaGlja3QgZWluenVyaWNodGVuIGdld3Vzc3QsIGRhc3MgaW1tZXIgZGFubiwgd2VubiBkZXIgTW9tZW50IGRhIGdld2VzZW4gd3JlLCBkYXNzIGlociBNYW5uIGh0dGUgenUgaWhyIGtvbW1lbiBrbm5lbiwgc2llIGdyYWQgbmljaHQgZGEgd2FyLCBpcmdlbmRldHdhcyBkYXp3aXNjaGVuIGthbSwgc2llIGhhdHRlIGVpbmZhY2gga2VpbmUgTHVzdCBhdWYgaWhyZW4gTWFubiBnZWhhYnQuIEFiZXIgYXVmIHNpY2ggc2VsYnN0LCBvaCBqYSwgc2llIGhhdHRlIHNpY2ggdGdsaWNoIG1pdCBkaWVzZXIgRG9rdG9yc3BpZWwgRmFudGFzaWUgYmVzY2hmdGlndCwgd2FyIGRhdWVyZ2VpbCBnZXdlc2VuIHVuZCBoYXR0ZSBzaWNoIHRnbGljaCBiZWZyaWVkaWd0LCBtYW5jaG1hbCAyIE1hbCwgdW5kIGluIGRlbiBsZXR6dGVuIDIgVGFnZW4gc29nYXIgbm9jaCBtZWhyLi4gCldoaWxzdCB3ZSB0YWtlIHN0b2NrIGFuZCByZW1vdmUgd2hhdCB3ZSBubyBsb25nZXIgbmVlZCwgaXQgaXMgc29tZXRpbWVzIHRoZSBlYXNpZXIgcGF0aCB0byB0aGluayBuZWdhdGl2ZWx5IHJhdGhlciB0aGFuIHBvc2l0aXZlbHkuIAonJ0pvaG4gY291bGRuJ3QgYmVhciB0aGUgdGhvdWdodCBvZiB3aGF0IGhhcHBlbmVkIHRvIGhpbSBoYXBwZW5pbmcgdG8gYSBjaGlsZCwgc28gaGUgYWdyZWVkIHRvIHNwZWFrIHRvIHBvbGljZS4gJydJbiBoaXMgZmlyc3QgcGhvbmUgY2FsbCB0byBwb2xpY2UsIGhlIHdhcyB0b2xkIHRoYXQgYmVjYXVzZSB0aGUgZXZlbnRzIG9jY3VycmVkIDMwIHllYXJzIGFnbyB0aGVyZSB3YXMgbm90aGluZyB0aGV5IGNvdWxkIGRvLiBJIHJhbmcgdGhlIHNleCBjcmltZXMgc3F1YWQgaW4gU3lkbmV5IHRoZSBuZXh0IGRheSBhbmQgbG9kZ2VkIGEgY29tcGxhaW50LiAKQSBsb3Qgb2YgZm9sa3Mgd2lsbCB0ZWxsIGluY29taW5nIGNvbGxlZ2Ugc3R1ZGVudHMgdG8gZm9jdXMgb24gZWl0aGVyIHRoZWlyIGdyYWRlcyBvciB0aGVpciBzb2NpYWwgbGl2ZXMsIGRlcGVuZGluZyBvbiB3aGF0IHRob3NlIHNhbWUgZm9sa3Mgb3duIHByaW9yaXRpZXMgYXJlIChvciB3ZXJlKS4gU3RpbGwgb3RoZXJzIHdpbGwgc3VnZ2VzdCBoZWxwZnVsIHN0dWR5aW5nIHByYWN0aWNlcywgbGlrZSBkb2luZyBvbmUgaG9tZXdvcmsgaW4gdGhlIGxpYnJhcnkgcmF0aGVyIHRoYW4gb25lIGRvcm1pdG9yeS4gKFRoYXQgd2F5LCBzdHVkZW50cyBkZXZlbG9wIHRoZSByaWdodCBwc3ljaG9sb2dpY2FsIGFzc29jaWF0aW9ucyB3aXRoIGVhY2ggcGxhY2UuKQpBdCB0aGF0IG1vbWVudCBJIHdhcyBnZW51aW5lbHkgYWZyYWlkIEkgd2FzIGFib3V0IHRvIHdpdG5lc3MgYSBtdXJkZXIgYW5kIHdhcyBzY2FyZWQgYnV0IGZvciBzb21lIHJlYXNvbiBldmVyeSBzaW5nbGUgb25lIG9mIG15IGNsYXNzbWF0ZXMgd2FzIGxhdWdoaW5nIGF0IHRoaXMgc2l0dWF0aW9uLiBJIHN0aWxsIGRvbiB1bmRlcnN0YW5kIHdoeS4gQnV0IHRoYW5rZnVsbHkgdGhlcmUgd2FzIG5vIG11cmRlcjt0aGUga2lkIGp1c3QgcmFuIG9mZiB0byB0aGUgZnJvbnQgb2ZmaWNlIGJjIGhlIHJlYWxpemVkIGhlIGZ1Y2tlZCB1cCBhbmQgY2FtZSBiYWNrIGJlZ2dpbmcgZm9yIGZvcmdpdmVuZXNzLi4gCldpbGwgc3RpbGwgbmVlZCBib3RoLiBIYWxmIG9mIGl0cyByZXZlbnVlcyBnbyBhd2F5IGlmIGl0IGdldHMgaW50byBhIGZpZ2h0IHdpdGggZWl0aGVyLiBEaXN0cmlidXRpb24gZG9lcyBub3QgZGl2ZXJzaWZ5IGFzIGVhc2lseSBhcyBvdGhlciByZXNvdXJjZXMuIApDYW4gSSBkZXBvc2l0IGJpdGNvaW4gaW4gYSBiYW5rPyBUaGV5IGNvdWxkIGNob29zZSB0byBhY2NlcHQgZGVwb3NpdHMsIGNvdWxkbiB0aGV5PyBUaGV5IGFjY2VwdCBhbGwgdGhlIHJpc2sgYXJvdW5kIGJhY2t1cHMsIGN5YmVyc2VjdXJpdHksIHRoZWZ0LCBldGMuLCBhbmQgcGVyaGFwcyBvZmZlciBtZSBpbnRlcmVzdC4gVGhlc2UgYXJlIHRoZSBtYWluIHJlYXNvbnMgSSBwdXQgbXkgbW9uZXkgaW4gYSBiYW5rIHRvZGF5LiBJIG5vdCByaWNoLCBidXQgaWYgSSB3YXMsIEkgY2VydGFpbmx5IHdhbnQgbW9zdCBvZiBteSBtb25leSAgIGZpYXQgb3IgYml0Y29pbiAgIHdpdGggc29tZW9uZSBtb3JlIGRlcGVuZGFibGUgdGhhbiBteXNlbGYuLiAKUkxPcyBhcmUgYXZhaWxhYmxlIGZvciB1c2UgdW5kZXIgdGhlIENyZWF0aXZlIENvbW1vbnMgMi4wIGxpY2VuY2UgKEJZIE5DKSBhbmQgdGhlIGNvbmRpdGlvbnMgYmVsb3dUZXJtcyBvZiBVc2VtYXkgbGluayB0byBhbmQgdXNlIHRoZSBSZXVzYWJsZSBMZWFybmluZyBPYmplY3RzIChSTE9zKSBvbiB0aGlzIHNpdGUgd2l0aG91dGVudGl0eSwgaXMgbm90IHBlcm1pdHRlZCB3aXRob3V0IG91ciBleHByZXNzIHBlcm1pc3Npb24uIApJbiBzbm93Ym9hcmRpbmcsIGl0J3MgdGhlIHNwZWN0YWNsZSBhbmQgbm90IHRoZSBtZWRhbHMgdGhhdCB0cnVseSBtYXR0ZXIuIApIZSBsZXNzIHRoYW4gYSB5ZWFyIG9sZCBhdCB0aGlzIHBvaW50LCBzbyBpdCBub3QgbGlrZSAibWFzc2l2ZSBkZWNhZGVzIGxvbmcgcHJvcGhlY3kiIGxldmVscyBvZiBkaXZpbmF0aW9uLi4gCkkgd291bGRuIHNheSB0aGF0ICJlaWdodHkgZGlmZmVyZW50IHVuaXF1ZSByYWNlcyB3aXRoIHRoZWlyIG93biBvcmlnaW5zIiBtZWFucyBnb29kLCBvciBldmVuIG9yaWdpbmFsLCB3b3JsZGJ1aWxkaW5nLiBJdCBkb2VzbiBtYXR0ZXIgaWYgdGhlIHJhY2VzIGFyZSB1bmlxdWUsIGlmIHlvdXIgYXBwcm9hY2ggaXMgdGhlIHNhbWUgYXMgZXZlcnlvbmUgZWxzZS4gCkEgdmVyeSBnb29kIGhhdXNkYW1lIHdpbGwgcmVzcGVjdCB0aGF0Li4gCk1hbnkgcGVvcGxlIGNvbmZ1c2UgcGVvcGxlIHdobyBhcmUgYW5ncnkgYXQgdGhlIENoaW5lc2UgZ292ZXJubWVudCBmb3IgaW1wcm9wZXIgdmFjY2luZSBkaXN0cmlidXRpb24gYXMgImFudGkgdmF4eGVycyIuIE5vLCB3ZSBub3QgYW50aSB2YXh4ZXJzLiBGYXIgZnJvbSBpdC4gCldlIG1vdmVkIHF1aWNrbHkgb24gdG8gc2V4LiBXZSBzdGFydGVkIHdpdGggaGVyIG9uIHRvcCwgdGhlbiBtb3ZlZCB0byBtaXNzaW9uYXJ5LCBhbmQgZmluaXNoZWQgaW4gc3Bvb25zLiAKVHJhdmVsaW5nIHRvIEtvcmVhIGFsb25lCkJ1dCB0aGUgYmVzdCBwb2tlciBnYW1lcyB0ZW5kIHRvIGhhcHBlbiBhdCBuaWdodC4gCk15IGh1c2JhbmQgaW5zaXN0ZWQgb24gdHJhaW5pbmcgb3VyIGRvZyBpbiBHZXJtYW4uIEkgZGlkbiBrbm93IGEgbGljayBvZiBHZXJtYW4sIGJ1dCBoZSB0b29rIGEgYml0IGluIGhpZ2ggc2Nob29sIGFuZCBsaWtlZCB0aGUgbGFuZ3VhZ2UuIEl0IHdhcyBhIGJpdCBvZiBhIHByb2JsZW0gaW4gb3VyIGRvZyB0cmFpbmluZyBjbGFzcyBiZWNhdXNlIHdlIHdlcmUgdXNpbmcgZGlmZmVyZW50IGNvbW1hbmRzIHRoYW4gdGhlIHJlc3Qgb2YgdGhlIGNsYXNzLgpNeSAiYmFja3lhcmQiICEhIDopCkZlZXMgcmFuZ2UgZnJvbSBhcyBsaXR0bGUgYXMgJDYwIHRvICQxNTAgcGVyIGhvdXIuT2Z0ZW4gYSBjb21wYW55IGFuZCB0aGVpciBlbXBsb3llZXMgd2lsbCBzaGFyZSB0aGUgY29zdCBvZiBicmluZ2luZyBPbiBTaXRlIE1hc3NhZ2UgaW50byB0aGUgb2ZmaWNlLiBJbiB0aGlzIEVtcGxveWVlL0NvcnBvcmF0ZSBzcG9uc29yc2hpcCwgdGhlIGNvbXBhbnkgYW5kIHRoZSBlbXBsb3llZSBhZ3JlZSBvbiBhIHBlcmNlbnRhZ2UgdGhhdCBlYWNoIHdpbGwgY292ZXIuIChGb3IgZXhhbXBsZSwgQ29tcGFueSA2MCUgLyBFbXBsb3llZSA0MCUpT2Z0ZW4gYSBjb21wYW55IHdpbGwgY29udHJpYnV0ZSB0aGUgdGltZSB0byByZWNlaXZlIE9uIFNpdGUgTWFzc2FnZSBhbmQgZW1wbG95ZWVzIHdpbGwgY292ZXIgMTAwJSBvZiB0aGUgY29zdDIuIApTdGlsbCB3b3JraW5nIG91dCBzb21lIGtpbmtzICAgSSBhbSB0cnlpbmcgdG8gbG9zZSBhIHNpZ25pZmljYW50IGFtb3VudCBvZiB3ZWlnaHQgc28gaXQncyBhIGxvbmcgam91cm5leSByZWdhcmRsZXNzLiBJIGp1c3QgZmVlbCBiZXR0ZXIgd2hlbiBJIGN1dCBvdXQgZ3JhaW5zIHNvIGl0J3MgYW4gZWFzeSBkZWNpc2lvbiBmb3IgbWUgbm93Li4gClJlYWxpdHkgaXMgYWxsIHRoZSBzdGFycyB3aWxsIG5ldmVyIGJlIGFsaWduZWQuIFRoZXJlIGFyZSBzb21lIHRoaW5ncyB5b3Ugd29uIGZpZ3VyZSBvdXQgdW50aWwgeW91IGdldCBpbnRvIGl0LiBUaGF0IHRoZSBjaGFuY2UgZXZlcnkgZW50cmVwcmVuZXVyIHRha2VzIGJlbGlldmluZyB5b3Ugd2lsbCBmaWd1cmUgb3V0IHRob3NlIGRldGFpbHMuIGRlYWwgTXIuIFJpYmtvZmYgYXNrZWQgdGhlIGRyYWdvbnMgZm9yICQ1MCwwMDAgZm9yIGEgMjUlIHN0YWtlLCB2YWx1aW5nIHRoZSBjb21wYW55IGF0ICQyMDAsMDAwLiAKUHJhY3RpY2Ugd2l0aCBhIGhvbWUgY29tcHV0ZXIgZ2FtZSBiZWZvcmUgZXZlciBnb2luZyB0byBWZWdhcyBhbmQgdXNpbmcgcmVhbCBtb25leS4KQW1vbmcgcGFydGljaXBhbnRzIHdpdGggZGlhYmV0ZXMsIGhpZ2hlciBhdmVyYWdlIGdsdWNvc2UgbGV2ZWxzIHdlcmUgYWxzbyByZWxhdGVkIHRvIGFuIGluY3JlYXNlZCByaXNrIG9mIGRlbWVudGlhIChQPTAuMDAyKTsgd2l0aCBhIGdsdWNvc2UgbGV2ZWwgb2YgMTkwIG1nIHBlciBkZWNpbGl0ZXIgKDEwLjUgbW1vbCBwZXIgbGl0ZXIpIGFzIGNvbXBhcmVkIHdpdGggMTYwIG1nIHBlciBkZWNpbGl0ZXIgKDguOSBtbW9sIHBlciBsaXRlciksIHRoZSBhZGp1c3RlZCBoYXphcmQgcmF0aW8gd2FzIDEuNDAgKDk1JSBDSSwgMS4xMiB0byAxLjc2KS4uIApBbHNvIEkgY2VydGFpbmx5IGhvcGUgdGhhdCBpZiBzaGUgaGFkIGNlcnRhaW4gZXhwZWN0YXRpb25zLCBzaGUgYWN0dWFsbHkgZ2F2ZSBoaW0gc29tZSBpbnN0cnVjdGlvbnMgaW5zdGVhZCBvZiB0aGlua2luZyBoZSBvdWdodCB0byBmaWd1cmUgaXQgb3V0IGhpbXNlbGYucGFsZXhhbmRlcl82ICA4IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ29JIGdldCB0aGF0IHNoZSBmZWxsIG9mZiBhbmQgd2VudCBhIGxpdHRsZSBudXRzIChkcnVncywgYWxjb2hvbCwgZXRjLikgYnV0IGhlciBlbnRpcmUgcGVyc29uYSBvbiBiZWFjaCBjbHViIGlzIHRyb3VibGluZyB0byBtZS4gCiAzIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvSXQgYmVzdCBub3QgdG8gdmlldyBoaW0gYXMgYSB0YW5rLCBob25lc3RseS4gVGhlIGphdmVsaW5zIHNlZW0gdG8gYmUgaW5zcGlyZWQgYnkgY2VydGFpbiBhcmNoZXR5cGVzIGJ1dCBub3QgZW50aXJlbHkgYnVpbHQgdG8gZW11bGF0ZSB0aGVtLiAKSSBzdGFydGVkIGdldHRpbmcgc29tZSBhbnhpZXR5IGJ5IHRoZSBlbmQgb2YgdGhlIHNlY29uZCBvbmUsIGJ1dCBpdCB3YXMgYWxzbyB0YWtpbmcgYSBsb3QgbG9uZ2VyIGJlY2F1c2UgaXQgd2FzIHNpZGV3YXlzLi4gCjIuIFBlb3BsZSB3aG8gcGxheSBwb2tlciBnYW1lcyBvbiBsaW5lIGFsc28gZ2V0IHRvIGNob29zZSBmcm9tIG11bHRpcGxlIGdhbWVzLiBQbGF5aW5nIGFuZCB0aGVuIHdpbm5pbmcgaW4gbXVsdGlwbGUgZ2FtZXMgd2hlbiB5b3UgcGxheSBvbmxpbmUgcG9rZXIgY2FuIGdpdmUgeW91IGEgbG90IG9mIGVhcm5pbmdzLiAKSSBoYXZlIGEgc2ltaWxhciBzdG9yeS4gClVubGVzcyBzdWJzZXF1ZW50IGV2ZW50cyBtYWtlIHlvdSByZXZpc2UgdGhpcyBmaXJzdCBpbXByZXNzaW9uLCBjYWxsIGxlc3Mgb2Z0ZW4gYW5kIGJsdWZmIG1vcmUgb2Z0ZW4gYWdhaW5zdCB0aGUgcGxheWVyIHdobyBoaWQgaGlzIG1vbmV5OyBjYWxsIG1vcmUgb2Z0ZW4gYW5kIGJsdWZmIGxlc3Mgb2Z0ZW4gYWdhaW5zdCB0aGUgcGxheWVyIHdobyBib3VnaHQgaW4gY29uc3BpY3VvdXNseS4gVGhpcyB0ZWxsIHdvbid0IGJlIDEwMCBwZXJjZW50IGFjY3VyYXRlLCBidXQgaXQncyByaWdodCBtb3N0IG9mIHRoZSB0aW1lLiAKQ2hlY2tpbmcgdGhlIGZsb3AgYWZ0ZXIgMyBiZXR0aW5nIHByZWZsb3AgYmFzaWNhbGx5IG5hcnJvd3MgYSBsb3Qgb2YgaXQgZG93bi4gU2xvdyBBY2VzLCBvciBBUSBvciBBSy4gClRoZSBpbiB1bml2ZXJzZSBib29rIHRoYXQgVG9sa2llbiB0cmFuc2xhdGVkIGlzIHRoZSBSZWQgQm9vaywgd2hpY2ggY29udGFpbmVkIFRoZXJlIGFuZCBCYWNrIEFnYWluIChha2EgVGhlIEhvYmJpdCksIFRoZSBEb3duZmFsbCBvZiB0aGUgTG9yZCBvZiB0aGUgUmluZ3MsIChzZWxmIGV4cGxhbmF0b3J5KSwgYW5kIHNldmVyYWwgd29ya3MgQmlsYm8gaGFkIHRyYW5zbGF0ZWQgZnJvbSBFbHZpc2guIEtpbmcgRWxlbmRpbCAoQXJhZ29ybikgcmVxdWVzdGVkIGEgY29weSB0aGF0IFRoYWluIFBlcmVncmluIFRvb2sgKFBpcHBpbikgZGVsaXZlcmVkLiBUaGUgImNvcHkgdGhhdCBUb2xraWVuIHRyYW5zbGF0ZWQiIHdhcyBhIGNvcHkgb2YgdGhlIFRoYWluIEJvb2sgYW5kIHdhcyBpbmNvbXBsZXRlLi4gClRoZSBjb21wYW55IGlzIG5vdCBhYnVzaW5nIHRoZWlyIHBvd2VyIGJ5IGhhdmluZyBhbiBlbXBsb3llZSB0YWtlIGFkZGl0aW9uYWwgdHJhaW5pbmcuIApJIGZlYXIgdGhhdCB0aGlzIHdpbGwgYmUgYSBsb3QgbW9yZSBnYW1lcGxheSBmb2N1c2VkIGxpa2UgTWV0YWwgR2VhciBTb2xpZCBWIHdhcyBiYXNpY2FsbHkgYWxsIGdhbWVwbGF5LCB2ZXJ5IGZldyBjdXRzY2VuZXMgYnV0IHRoZSB0aGluZyBpcyB0aGF0IGdhbWVwbGF5IGlzIG5vdCBCaW93YXJlIHN0cm9uZyBzdWl0LiAKQWZyaWNhbiBTaGVhIEJ1dHRlciwgYSB1bmNvbW1vbiB0aGVyYXBldXRpYyBhbmQgYW50aSBnZXR0aW5nIG9sZGVyIHByb2R1Y3QgaW5mdXNlZCBpbiBudXRyaXRpb25hbCB2aXRhbWlucy4gCldoeSBkb2VzIHRoZSBnYW1lIGNvc3QgYW4gdXBmcm9udCAkMjA/IEJlY2F1c2UgSWYgIlRoZSBwYXltZW50cyBhcmUgc2tld2VkIHRvIGFuIGV4dHJlbWVseSBzbWFsbCBwb3J0aW9uIG9mIHRoZSBwb3B1bGF0aW9uLCIgdGhhdCBza2lubmVyd2FyZS4gCllvdXIgZ2lybGZyaWVuZCBpcyBhbHNvIG5vdCBkaXJ0eSBvciB0YWludGVkIGJlY2F1c2UgaGUgaGFzIHRvdWNoZWQgaGVyLCBqdXN0IGFzIHlvdSBhcmUgbm90IGRpcnR5IG9yIHRhaW50ZWQgYmVjYXVzZSBoZSBoYXMgdG91Y2hlZCB5b3UuIFlvdXIgZnV0dXJlIGlzIHN0aWxsIHRoZXJlLCBpdCdzIGp1c3QgaGFyZCB0byBzZWUgd2hlbiB5b3UncmUgZmxhc2hpbmcgYmFjayB0byB0aGUgcGFzdC4gCklmIHlvdSBkb24ndCBnaXZlIHVwLCB5b3VyIGFjY291bnQgd2lsbCBiZSBkZXBvc2l0ZWQgaW4geW91ciBhY2NvdW50IGFuZCB0aGVuIHlvdSB3aWxsIGJlIGFibGUgdG8gcGxheSBqdXN0IGxpa2UgdGhlIGZyZWUgbW9uZXkgZ2FtZXMuIApJdCBoYXMgdGhlIDRyMzYgbW92ZW1lbnQgd2hpY2ggbXkgc2FtdXJhaSBhbHNvIGhhcy4gCk5FVyBZT1JLICAgQSBtYW4gcmVjZW50bHkgamFpbGVkIGZvciBicmVha2luZyBpbnRvIFRheWxvciBTd2lmdCdzIE5ldyBZb3JrIENpdHkgdG93bmhvdXNlIHdhcyBhcnJlc3RlZCBlYXJseSBUaHVyc2RheSBhZnRlciwgcG9saWNlIHNheSwgaGUgZGlkIGl0IGFnYWluLgpTb3J0IG9mIGEgVW5pdmVyc2FsIHN0YXJ0IG92ZXIgYnV0dG9uLiBOb3QgY29ycnVwdCBidXQgcmUgY3JlYXRlLiAKRW4gZGNlbWJyZTIwMTYsIG9uemUgam91ZXVycyBkZSBwb2tlciBwcm9mZXNzaW9ubmVscyBvbnQgc3ViaSB1bmUgY3Vpc2FudGUgZGZhaXRlLiBEZWVwU3RhY2sgbGVzIGEgYmF0dHVzIGF1IFRleGFzIGhvbGQgc2FucyBsaW1pdGVzIGRlIG1pc2UuCkkgbG92ZWQgT2JhbWEgYnV0IHdhcyBub3QgYWZyYWlkIHRvIGNyaXRpcXVlIGhpcyBtaXNzdGVwcy4gCkNCIGVuZGVkIHVwIHdpdGggYSBuaWNlIENhcmhhcnR0IGJlYW5pZSBidXQga2VlcHMgbGV0dGluZyBldmVyeW9uZSBrbm93ICJqb2tpbmdseSIgdGhhdCBzaGUgcmVhbGx5IHdhbnRlZCB0aGF0IFN0YXJidWNrcyBnaWZ0IGNhcmQgYmVjYXVzZSBBZGFtIGRvZXNuJ3QgZXZlbiBkcmluayBjb2ZmZWUuIFdpdGggdGVuIHBlb3BsZSBkb2luZyBhIHdoaXRlIGVsZXBoYW50IGl0IGhhZCBiZWVuIGFsbW9zdCA0NSBtaW51dGVzIHdoZW4gdGhlIGZvb2QgZmluYWxseSBjb21lcy4gV2Ugd3JhcCB1cCB3aGl0ZSBlbGVwaGFudCBhbmQgc3RhcnQgdG8gZWF0LiAKV2llIER1IGFiZXIgc2VsYnN0IHdlaXNzdCwgaXN0IFByb3N0aXR1dGlvbiBpbiBLYW1ib2RzY2hhIGFsbGdlZ2Vud2FlcnRpZy4gCklzIHNvbWV3aGF0IGJvdGggaXJvbmljIGFuZCBub3QgdGVycmlibHkgdW5jb21tb24gZm9yIFdpbHNvbiB0byBoYXZlIHJ1biBmb3IgdGhlIHByZXNpZGVuY3kgZm9yIG9uZSB0aGluZyBhbmQgdGhlbiBkb2luZyBleGFjdGx5IHRoZSBvcHBvc2l0ZSwgYXMgaGUgZGlkIHdpdGggaGlzIDE5MTYgcmUgZWxlY3Rpb24gY2FtcGFpZ24gc2xvZ2FuICJIZSBLZXB0IFVzIG91dCBvZiBXYXIiLiBXYXkgdGhhdCBtYW55IG5ld3NwYXBlcnMgb2J0YWluZWQgdGhlIHdhciBpbWFnZXMgdGhhdCB0aGV5IHB1Ymxpc2hlZCBpbiB0aGVpciBwYXBlcnMgd2FzIHZpYSBhIHNlbWkgY2VudHJhbGl6ZWQgcG9vbCBvZiB3YXIgaW1hZ2VzLiAKIDYgcG9pbnRzICBzdWJtaXR0ZWQgMjkgZGF5cyBhZ29WYWxsYSBiaXJhZGVyIGJlbiBiYWhzaSBnZWVuIHZpZGVveXUgaXpsZWRpbSB2ZSBvdXQgb2YgY29udGV4dCBiaXIgZXkgeW9rIG9ydGFkYSwga2VsaW1lIGtycGxwIGFubGFtIHNhcHRybWEgZGEgeW9rLiBEdXJ1cCBkdXJ1cmtlbiBrZW5kaXNpbmRlbiBvayBkYWhhIGJhYXJsIChDZWxhbCBmYW5ib3lsYXIgYnVudSBrYWJ1bCBldG1la3RlIHpvcmxhbmFiaWxpcmxlciBhbWEpIGJpciBpbnNhbmEgaGFrYXJldCBlZGVuIGJpciBDZWxhbCBlbmdyIHZhciBzYWRlY2Ugb3J0YWRhLiBEYWhhIGJhYXJsIG9sbWFzbmRhbiBiYWhzZXRtZW1pbiBzZWJlYmkgZGUgQ2VsYWwgZmFuYm95bGFybm4gYnUgYXJnbWFuIGtlbmRpc2luZSB5YXBsYW4gaGVyIHRybCBlbGV0aXJpeWUga2FyIGt1bGxhbm1hcy4gbmFzbCBidSBhZGFtIGVsZXRpcmlyc2luLCBvIGJpbGltbGVyIGFrYWRlbWlzaW5kZSwgeW9rIGJ1IGthZGFyIGtpdGFiIHZhciB2cy4gRW4gc29uIGRhIGRhaGEgYWRteiB5YXptYXkgYmlsbWl5b3Igb2xtdXV6LCBvIGRhIG5lcmVkZW4ga3R5c2EgYXJ0ay4gWW9rc2EgYmFuYSBrYWxyc2EgemF0ZW4gYWthZGVtaWsgcHJlc3RpamluIHBlayBiaXIgbmVtaSB5b2sgYW1hIHNpemluIGlpbiB2YXIgeWEgaXRlIG9uZGFuIGRlZGltLiBFZXIgQ2VsYWwgaG9jYXkgZWxldGlybWVrIGJpemltIGhhZGRpbWl6ZSBkZWlsc2UgU2FnYW4gZWxldGlybWVrIGRlIG9udW4gaGFkZGluZSBkZWlsIGRlcmltIGJlbiwgYnVudW4gc2ViZXBsZXJpbmRlbiBiYWhzZXR0aW0gZGllciB5b3J1bXVtZGEuIFRhYmkgc2l6aW4gbWFudG56YSBncmUgaGFkZGluZSBkZWlsIHlva3NhIGJlbmNlIGhlcmtlcyBoZXJrZXNpIGVsZXRpcmViaWxtZWxpLiBZYW5pIENlbGFsIGVmZW5kaSBoaWJpciBnZXJla2UgZ3N0ZXJtZWRlbiBpbnNhbmxhcmEgaGFrYXJldCBlZGVjZWssIGFtYSBiZW4gYmlyIG1hbnRrIGVyZXZlc2luZGUgbmVkZW4gYnVudW4geWFubCBiaXIgZGF2cmFuIG9sZHV1bnUgYW5sYXR0bWRhIGJlbiBtYWwgb2xhY2FtLCBuZSBhbGEgbWVtbGVrZXQgYW1rLiBCaWF0IGtsdHIsIG90b3JpdGV5ZSB0YXBtYSBhcnRrIGRhbWFybGFybnphIGthZGFyIGlsZW1pLiAxIHBvaW50ICBzdWJtaXR0ZWQgMjkgZGF5cyBhZ29CaXppbSBtYWxsYXIgZGEgb2sgc2V2aXlvciBidSB0YXJ6IGV5bGVyaS4gIkNlbGFsIGhvY2EgbWFsYSBiYWxhZG4sIENhcmwgc2FnYW4geWxlIGl5aXlkaSBieWxlIGl5aXlkaSBOYXNheWEgaWxoYW0gb2xkdSBtYmVuZGlzbGVyZSBpbGhhbSBvbGR1IHZzIHZzLiJIb2NhbSBhbG5kbSBuayBiZWxsaSBraSBiZW5pbSBjb21tZW50IGthciBzeWxlbWlzaW4gYnUgbGFmLCB0aHJlYWQgdG9wIGNvbW1lbnQgYmVuaW1raSB2ZSBiZW4gZGUgTkFTQSBTYWdhbiBtaGVuZGlzbGVyZSBpbGhhbSB2ZXJtZXNpbmRlbiBmYWxhbiBiYWhzZXR0aW0gbyB5b3J1bWRhLiBIYSBiYW5hIGthciB5YXptYWR5c2FuIGluYW5sbWF6IGJpciB0ZXNhZGYgb2xtdSBvIHphbWFuIG5lIGRpeWltIDopIGhvY2F5IG5hc2wgZWxldGlyaXNpbj8gZGl5ZW5sZXJlIGthciBzaXRlbWltaSBkZSBhbGFrYXN6IGJ1bG11IG9sYWJpbGlyc2luIGFtYSBhZG4geWF6bWF5IGJpbG1leWVuIGFkYW1sYXIgbmFzbCBiaXIgYW5sYW0ga3lvciBzZW5jZT8gU2l6IGtpbXNpbml6IG8ga2ltIGhhZGRpbml6aSBiaWxpbiBnaWJpIGJpciBpZmFkZSBvbGFyYWsgYWxnbGFkbSBiZW4gYnVudS4KQSBzdG9yeSBvZiBzdWZmZXJpbmcgYW5kIHJlZGVtcHRpb24sIHRvbGQgaW4gQ2hlZXZlciBmdWxsZXN0IHJlZ2lzdGVyLiBFemVraWVsIEZhcnJhZ3V0LCB1bml2ZXJzaXR5IHByb2Zlc3NvciwgZmFtaWx5IG1hbiwgZHJ1ZyBhZGRpY3QsIGlzIGluIEZhbGNvbmVyIFN0YXRlIFByaXNvbiBmb3IgaGF2aW5nIGtpbGxlZCBoaXMgYnJvdGhlciB3aXRoIGEgcG9rZXIuIApGdWNrIHlvdSwgd2hlbiB5b3UgZXhwZXJpZW5jZSB0aGUgcHJlc3N1cmUgb2YgYmVpbmcgdGhlIHRvcCAuMDAwMDAxIG9mIHBsYXllcnMgaW4gdGhlIG1vc3QgbWVudGFsbHkgY2hhbGxlbmdpbmcgc3BvcnQgaW4gdGhlIHdvcmxkIHlvdSBjYW4gY29tbWVudC4gVW50aWwgdGhlbiB5b3UgaGF2ZSBubyBpZGVhIG9mIHRoZSBodXJkbGVzIG9uZSBoYXMgdG8gb3ZlcmNvbWUgdG8gYmUgcG9zaXRpdmUsIG9yIGRvIHRoZSByaWdodCB0aGluZywgb3Igd2hhdGV2ZXIuIAonVXNlJyBlbmNvbXBhc3NlcyByZWNlaXZpbmcsIHdpdGhvdXQgYW4gZW5kIHVzZXIgbGljZW5jZSwgYW55IFNjb29wIENvbnRlbnQgZnJvbSBhbnkgdW5saWNlbnNlZCBtZWRpYSB0cmFja2luZyBvciBtb25pdG9yaW5nIHNlcnZpY2UuIApTbGVlcCBzb3VuZHMgbGlrZSBhIGdpdmVuLCByaWdodD8gTm90IHNvIG11Y2guIApJIGp1c3QgYm91Z2h0IGEgYnVuY2ggb2YgLjQ1IExDIGNvd2JveSBhbW1vIGZvciBhIGxpdHRsZSBvdmVyIDQwIGNwci4gCklmIHlvdSBoYXZlIGEgcGFydGljdWxhciBjb25kaXRpb24sIGFzayB0aGVtIGlmIHRoZXkgaGF2ZSBhbnkgZXhwZXJpZW5jZSBpbiB0cmVhdGluZyBpdC4gCkNvbGV0dGUgZ3JldyB1cCBpbiB0aGUgR2V0dHlzYnVyZyBhcmVhIGFuZCBncmFkdWF0ZWQgdGhlcmUuIApXaXRob3V0IHN1Z2dlc3RpbmcgcmFjaWFsIGRpc2NyaW1pbmF0aW9uLCB0aGUgY2hvaWNlIG9mIGNvbG9yIG9mIGNsb3RoZXMgbXVzdCBhbHNvIGJlIGluIHN0ZXAgd2l0aCB0aGUgbmF0dXJhbGx5IGJsZXNzZWQgY29tcGxleGlvbi4gClNvIHRoaXMgd2FzIHNldCB1cCBhcyBhIGdpZnQgYmFzaWNhbGx5LiAKSSBoYWQgdmVyeSBwb29yIHNlbGYgZXN0ZWVtLiBBbGwgb2YgdGhhdCBzdGlsbCBhZmZlY3RzIG1lIHRvIHRoaXMgZGF5LiBJIGxlYXJuaW5nIGhvdyB0byAicmUgbW90aGVyIiBteXNlbGYuIApBbiBlYXJseSBibHVmZiBjYW4gYWxzbyBiZSBhbiBlZmZlY3RpdmUgc3RyYXRlZ3kgaW4geW91ciBnYW1lIGFzIHdoYXQgZWFybHkgZm9sZHMgZG8uIFlvdXIgYWdncmVzc2l2ZSBwbGF5IHNob3VsZCBpbnRlbnNpZnkgZGVlcGVyIGludG8gdGhlIGdhbWUuIEJ1dCBhdCB0aGUgc2FtZSB0aW1lLCB5b3Ugc2hvdWxkIGJlIHBsYXlpbmcgYSBzbWFydCBhbmQgZGlzY2lwbGluZWQgZ2FtZS4gSXQgaXMgYWx3YXlzIGVhc2llciB0byBnZXQgYWdncmVzc2l2ZSB3aGVuIHlvdSBmZWVsIGluIGNvbnRyb2wsIHNvIG9ic2VydmUsIHN0dWR5IGFuZCBwbGF5IGl0IHRpZ2h0IQpTbyB3aGF0PyBJZiB5b3UgZG9uIHdhbnQgdG8gaGVhciBhIGJhYnkgY3J5aW5nLCBwdXQgb24geW91ciBvd24gbm9pc2UgY2FuY2VsbGluZyBoZWFkcGhvbmVzIG9yIGp1c3Qgd2F0Y2ggeW91ciBtb3ZpZS4gClRoZXJlIGFyZSBnb29kIHJlYXNvbnMgZm9yIHdoeSBhbm90aGVyIE1NT1JQRyBtYXkgbm90IGJlIHRoZSByZWFzb24gdG8gZ28uCllvdSBwYXJ0aWNpcGF0ZSBieSBwYXlpbmcgYXR0ZW50aW9uIHRvIHlvdXIgYnJlYXRoaW5nIGZvciBhIGZldyBzZWNvbmRzIG9yIGhvd2V2ZXIgbG9uZy4gCldpdGggc3BlY2lhbCB0aGFua3MgdG8gdGhlIG1vZHMsIHdlJ2QgbG92ZSB0byBzaGFyZSBzb21lIG9mIG91ciBzdHVmZiB3aXRoIHJlZGRpdG9ycyBoZXJlIGJ5IGRvaW5nIGEgZ2l2ZWF3YXkuIFdlJ3JlIGhvb2tpbmcgMyBsdWNreSBmb2xrcyB1cCB0byB3aW4gKHNlcGFyYXRlbHkpIGEgUmF6ZXIgQmxhY2tXaWRvdyBFbGl0ZSwgYSBSYXplciBEZWF0aEFkZGVyIEVsaXRlIGFuZCBhIFJhemVyIEtyYWtlbiBUb3VybmFtZW50IEVkaXRpb24uCldpbGwgYmUgRmVicnVhcnkgYXQgdGhlIGVhcmxpZXN0IGFuZCBtYXliZSBldmVuIGxhdGVyIGJlZm9yZSBJIHJlYWxseSBtYWtlIGEgZGVjaXNpb24uIEFuZCBtYXliZSBpdCB3b24gZ28gdG8ganVzdCBvbmUgcGxhY2UgdGhpcyB0aW1lLCBiZWNhdXNlIGZyYW5rbHkgdGhpcyBpcyBhIHNpZ25pZmljYW50bHkgZ3JlYXRlciBhbW91bnQgb2YgbW9uZXkgdGhhbiBJIGV2ZXIgYmVlbiBhYmxlIHRvIHdpbiBpbiB0aGUgcGFzdC4gCkZsYXZpbiBpc3QgZWluIFN0YW1tIE9ubGluZSAgIGJlaSBkZW0gIHVuZCB3aXJkIG5hY2ggc2VpbmVyIFF1YWxpZml6aWVydW5nIGluIGRlbiB6dSBkZW0gYmV2b3JzdGVoZW5kZW4gSXJpc2ggT3BlbiB0dXJuaWVyIGVyc2NoZWluZW4uCkluIHRydXRoLCB0aGVyZSBpcyBhIGRpbGVtbWEgYXMgdG8gd2hvIGNhbiBsYXkgY2xhaW0gZm9yIHRoZSBiaXJ0aCBvZiB0aGlzIGNhcmQgZ2FtZS4gCkFuZCBub3cgdGhhdCB5b3UgaGF2ZSBicm9rZW4gdXAgaGUgY2FuIGFjdHVhbGx5IGRvIHRoYXQgd2l0aG91dCBoYXZpbmcgdGhpcyB3aG9sZSBlcGlzb2RlIHRvIGRlYWwgd2l0aCBldmVyeSB0aW1lLiBBcyBmYXIgYXMgSSBhbSBjb25jZXJuZWQgeW91IG5lZWQgc29tZSBzZXJpb3VzIGRldmVsb3BtZW50IGluIHRlcm1zIG9mIGJlaW5nIGluZGl2aWR1YWwgYW5kIGluZGVwZW5kZW50LiAKQ2hpbmEgaXMgdmVyeSBncmV5ISBUaGUgc2lnaHRzLCB0aGUgc291bmRzIGFuZCB0aGUgc21lbGxzIG9mIENoaW5hIHRha2UgYSBiaXQgb2YgZ2V0dGluZyB1c2VkIHRvLiBUaGVyZSBpcyBubyBibHVlIHNreSBhbmQgbm8gc3Vuc2hpbmU7IGV2ZXJ5dGhpbmcgbG9va3MgZGlydHkgYW5kIGRyYWIsIGJ1dCB0aGF0J3MgYmVjYXVzZSBvZiB0aGUgc21vZy4gWW91IGNhbiB0YXN0ZSBpdCBpbiB5b3VyIG1vdXRoLCBmZWVsIGl0IGluIHlvdXIgZXllcyBhbmQgdXAgeW91ciBub3NlIGFuZCBpdCdzIG5vdCBwbGVhc2FudC4gCkplIG5lIHNhaXMgc2kgYSBtYXJjaGVyYSBtYWlzIGplIGNvbnRpbnVlIHN1ciBtYSBsYW5jZSAhTWVyY2kgQW5uZSBIaWRhbGdvICEuIApJJ3ZlIGZpZ3VyZWQgb3V0IGhvdyB0byB0dXJuIHdoYXQncyBkaWZmZXJlbnQgYWJvdXQgbWUgYW5kIGxpbWl0YXRpb25zICAgSSdtIG5ldyB0byB0aGlzIHdvcmxkLCBJJ20gYSB3b21hbiwgSSBkb24ndCBoYXZlIGEgbWF0aCBiYWNrZ3JvdW5kICAgYW5kIGhvdyBJIHVzZSB0aGF0IHRvIG15IGFkdmFudGFnZS4gCk9ubHkgYWlyIEkgY2FuIGltbWVkaWF0ZWx5IHRoaW5rIG9mIHRoYXQgbWlnaHQgYmx1ZmYgdGhpcyBzcG90IGlzIEFoSnggb3IgQWhUeCBhbmQgbWF5YmUgSmhUeCB3aGljaCBjb3VsZCByYWlzZSB5b3Ugb24gdGhlIHR1cm4gYnV0IHRoZSBuZmQrR1MgaGF2ZSAxMiBvdXRzIGFuZCBKaFR4IGhhcyAxNi4gClZhbm5HZWF1eCB1ClRoZXkgd2VyZSB2ZXJ5IGRpc2NyZXRlIHVudGlsIHlvdSBhY3R1YWxseSBnb3QgaW50byB0aGUgbWFzc2FnZSBhbmQgdGhleSBjaGFuZ2VkIHdoZW4geW91IGRpZC4gSW50ZXJlc3RpbmdseSwgdGhlIHBsYWNlIGdvdCBidXN0ZWQgb24gbW90aGVycyBkYXksIHdoaWNoIGlzIGFwcGFyZW50bHkgb25lIG9mIHRoZSBxdWlldGVzdCBpbiB0aGUgeWVhci4uIApEYW5zIGxlIGNhcyBvIHZvdXMgZmVyaWV6IGQgZGUgcmVzcGVjdGVyIGxlcyBvYmxpZ2F0aW9ucyBkYW5zIGxlIHByIGFydGljbGUgMywgTGEgUHJlc3NlIG5lIHNlcmEgcGFzIHJlc3BvbnNhYmxlIGRlcyBwZXJ0ZXMgb3UgZGVzIGRvbW1hZ2VzIGVuIGQuIAoyIGluIDI2NTIsIG9yIGFib3V0IDAuMDAwNzU0MS4gKDIgaW4gNTIgdGltZXMgMSBpbiA1MSkgRGV0YWlsZWQgRXhwbGFuYXRpb246IEluaXRpYWxseSwgeW91IGhhdmUgNTIgY2FyZHMuIFRoZSBLaW5nIG9mIFNwYWRlcyBhbmQgdGhlIEFjZSBvZiBIZWFydHMgYXJlIHR3byBvZiB0aGVtLCBzbyB5b3UgaGF2ZSBhIDIgaW4gNTIgY2hhbmNlIG9mIHBpY2tpbmcgdGhlIEtpbmcgb2YgU3BhZGVzIG9yIHRoZSBBY2Ugb2YgSGVhcnRzIG9uIHlvdXIgZmlyc3QgZHJhdy4gU2luY2UgdGhlc2UgYXJlIGluZGVwZW5kZW50LCB0aG91Z2ggc2VxdWVudGlhbGx5IHJlbGF0ZWQgZXZlbnRzLCB0byBjb21wdXRlIHRoZSBwcm9iYWJpbGl0eSB0aGF0IGJvdGggZXZlbnRzIG9jY3VyLCB5b3Ugc2ltcGx5IG11bHRpcGx5IHRoZSB0d28gcHJvYmFiaWxpdGllcyB0b2dldGhlci4gMiBpbiA1MiB0aW1lcyAxIGluIDUxIGlzIDIgaW4gMjY1Miwgb3IgYWJvdXQgMC4wMDA3NTQxLiAoRnVsbCBBbnN3ZXIpClVwb24gbWljcm9hcnJheSBhbmFseXNpcyBvZiBoaXBwb2NhbXBhbCB0aXNzdWUgb2YgbWljZSB0aGF0IGNvbnN1bWVkIHRoaXMgY29tcG91bmQsIGV4cHJlc3Npb24gb2YgZ2VuZXMgYXNzb2NpYXRlZCB3aXRoIG5ldXJpdGUgZXh0ZW5zaW9uIGFuZCBzeW5hcHRpYyBwbGFzdGljaXR5IHdhcyBlbmhhbmNlZCBbMTJdLi4gCldlIHdlcmUgcmVmdXNpbmcgdG8gYmFjayBkb3duIGFuZCBvdXIgYWdlbnQgc2VudCBhbiBhZGRlbmR1bSB0aGF0IHRoZXkgaGFkIHRvIGJlIG91dCBGcmlkYXkgb3IgcmVpbWJ1cnNlIHVzIHRocm91Z2ggTW9uZGF5LiBUaGV5J3JlIGFnZW50IGNsYWltcyBzaGUgaGFkIHRvIHBheSBmb3IgbW92ZXJzIG91dCBvZiBoZXIgb3duIHBvY2tldCB0byBnZXQgdGhlbSBtb3ZlZCBvdXQgYnkgOHBtIEZyaWRheS4gClNldmVyYWwganVzdGljZXMgbWFkZSB0aGUgcG9pbnQgdGhhdCBwcm9zdGl0dXRpb24gaXRzZWxmIGlzIG5vdCBpbiBmYWN0IGlsbGVnYWwsIGFuZCByYWlzZWQgcXVlc3Rpb25zIGFib3V0IGhvdyB0aGF0IHNob3VsZCBhZmZlY3QgbWFueSBvZiB0aGUga2V5IGFjdGl2aXRpZXMgcmVsYXRlZCB0byBpdCB0aGF0IGFyZSBpbiBmYWN0IGJhbm5lZCB1bmRlciBzZWN0aW9ucyBvZiB0aGUgQ3JpbWluYWwgQ29kZS4KUGxheWVycyB3aG8gaGF2ZSBoYWQgdGhlIGV4cGVyaWVuY2Ugb2YgYmVpbmcgb24gYSBydW4uIFlvdSBjYW4gdGVhY2ggdGhhdCBleHBlcmllbmNlLCBzb21ldGltZXMgeW91IGp1c3QgaGF2ZSB0byBsaXZlIGl0IGFuZCBwbGF5IGluIGl0Li4gClNpbmNlIEFQIGlzIG5vdyBsaW1pdGVkIHRoZSAkMmsgbWFrZXMgc2Vuc2UsIGJ1dCBGU0Qgbm93IHdpbGwgaGF2ZSBzdW1tb24sIGF1dG8gbGFuZSBjaGFuZ2UsIE5vQSwgYW5kIGZ1dHVyZSBhZHZhbmNlZCBzdW1tb24sIFN0b3BsaWdodCBhbmQgc3RvcCBzaWduLCBhbmQgYSBoYXJkd2FyZSB1cGdyYWRlLgpCb2JhcnRpZyB1ClRoZW4gdGhlcmUgYSBwb3J0YWwgdHJlZS9jbG9jayB0aGV5IGNhbiB3YWxrIHRocm91Z2ggYmFjayBhbmQgZm9ydGgsIGJ1dCB0aGVuIG1hZ2ljIGlzIHR1cm5lZCBvZmYgYW5kIGl0IGRvZXNuIHdvcmsuIApUaGVyZSBhcmUgc2ltcGx5IG1vcmUgcnVubmVycyBhbmQgbW9yZSBvcmdhbml6ZWQgcmFjZXMgcmVsYXRpdmUgdG8gdGhlIHRvdGFsIHBvcHVsYXRpb24gbm93YWRheXMuIENvbXBldGl0aXZlIHJ1bm5lcnMgYXJlIHN0aWxsIGNvbXBldGl0aXZlLCBhbmQgaXQgbm90IGFsbCB0aGF0IGhhcmQgZm9yIHRoZW0gdG8gZmluZCB3aGF0IHRoZXkgbG9va2luZyBmb3IsIGJ1dCB0aGV5IGNhbiBleHBlY3QgZXZlcnkgbG9jYWwgZmFzdCBndXkgdG8gc2hvdyB1cCBhdCBldmVyeSBsb2NhbCA1ayB3aGVuIHRoZXJlIGFyZSBoYWxmIGEgZG96ZW4gcmFjZXMgd2l0aGluIGRyaXZpbmcgZGlzdGFuY2UgZXZlcnkgd2VlayBvZiB0aGUgeWVhci4gCklmIHlvdSdyZSBzZWVraW5nIGEgcXVhbGlmaWVkIHRyYWRpdGlvbmFsIENoaW5lc2UgaGVyYmFsaXN0LCB0aGUgTkNDQSBhbHNvIHByb3ZpZGVzIGEgbGlzdCBvZiBwcmFjdGl0aW9uZXJzIHdobyBoYXZlIHBhc3NlZCB0aGVpciBleGFtIG9uIGhlcmJhbCBtZWRpY2luZS4gT3RoZXJ3aXNlLCBhIGdvb2QgcGxhY2UgdG8gbG9vayBpcyBDYWxpZm9ybmlhLiBBcyBvZiB0aGlzIHdyaXRpbmcsIGl0IGlzIHRoZSBvbmx5IHN0YXRlIHRoYXQgcmVxdWlyZXMgYSBwcmFjdGl0aW9uZXIgdG8gYmUgcHJvZmljaWVudCBpbiBoZXJiYWwgbWVkaWNpbmUgaW4gb3JkZXIgdG8gcGFzcyB0aGUgc3RhdGUgbGljZW5zaW5nIGV4YW0uIApBbnl3YXksIGNsYXNzaWMgTGFyYSB3YXMgcHJvYmFibHkgc2V2ZXJhbCB5ZWFycyBvbGRlciBpbiBoZXIgZmlyc3QgZ2FtZSB0aGFuIG5ldyBMYXJhIHdhcyBpbiBoZXIgZmlyc3QgZ2FtZS4uIApJIHdvdWxkIGxpa2UgdG8gcGxheSBvdmVyd2F0Y2ggb24gYSAxMDgwcCAxNDRoeiBtb25pdG9yIHdpdGggaGlnaCBGUFMuIEZyb20gc2VhcmNoaW5nIG9ubGluZSwgaXQgc2VlbXMgSSBjYW4gZG8gdGhhdCwgYnV0IEkgbWlnaHQgaGF2ZSB0byBwbGF5IG9uIGxvd2VyIHNldHRpbmdzLiBJIGRvbiBtaW5kLCBidXQgSSBwcmVmZXIgdG8gZ2V0IGhpZ2hlciBzZXR0aW5ncyBpZiBwb3NzaWJsZSB3aGlsZSBzdGF5aW5nIGluIGJ1ZGdldC4gSWYgZWl0aGVyIGNhcmQgd291bGQgYWNjb21wbGlzaCB0aGlzLCB0aGVuIEkgZ3Vlc3Mgd2hhdCB3b3VsZCBiZSBtb3JlICJmdXR1cmUgcHJvb2YuIiBTaG91bGQgSSBnbyBmb3IgbW9yZSBHQiBvciBtb3JlIE1Iej8KVGhlIGZsb3AgY29tZXMgdXAgYW5kIGFub3RoZXIgQWNlIHNob3dzIGl0c2VsZi4gCkhpcyBwbGFubmluZyB3YXMgY3VubmluZywgdGltaW5nIHVuc3VzcGVjdGluZywgcG93ZXIgdW5kZXJyYXRlZCwgcmluZyBnZW5lcmFsc2hpcCBtaXNjYWxjdWxhdGVkLCBzY291dGluZyB1bmRlcnJlcG9ydGVkLCBkZWNlcHRpdmVuZXNzIHVuZXhwZWN0ZWQsIGFuZCBtZW50YWwgZm9ydGl0dWRlIG1pc2p1ZGdlZC4gSXQncyBmb3IgdGhlc2UgcmVhc29ucyBoaXMgb3Bwb25lbnRzIGFsbCBmZWx0IHRoZXkgaGVsZCBzb21lIGFkdmFudGFnZSBvciBhbm90aGVyLCBidXQgYXMgd2UgYWxsIHdlbGwga25vdyA1MCBoYXZlIHRyaWVkIGFuZCA1MCBoYXZlIGZhaWxlZC4gClRoZXkgYW1wbGlmeSB0aGUgc3RyZW5ndGhzIG9mICJvcmRpbmFyeSIgZW1vdGlvbmFsIGVuZ2FnZW1lbnQgICBlc3BlY2lhbGx5IHRoZSBhYmlsaXR5IHRvIHJlZHVjZSBwcmljZSBzZW5zaXRpdml0eSAgIGFuZCBpbiBnZW5lcmFsLCB0aGV5IGFyZSB0aGUgcmVhbCBoaWdoIGZsaWVycyBhbW9uZyB0aGUgSVBBIERhdGFiYW5rIGNhc2VzLiAKUG9rZXJmaW5rIHUKSW4gdGVybXMgb2YgcmF3IGJ1eWlucywgSSBoYWQgYSBwZXJpb2Qgb2YgdGltZSBpbiAyMDA4IHdoZXJlIEkgd2FzIGdlbmVyYWxseSBhIGJyZWFrIGV2ZW4gZnVsbCByaW5nIHBsYXllci4gSSBhbHdheXMganVzdCB0aG91Z2h0IEkgd2FzIHJ1bm5pbmcgdGVycmlibGUgYW5kIHRoYXRzIHdoeSBJIHdhcyBsb3NpbmcuIApJbiB0b3RhbCwgNDEgcGF0aWVudHMgd2l0aCBwc29yaWFzaXMgYW5kIDQxIGhlYWx0aHkgY29udHJvbHMgd2VyZSBlbnJvbGxlZCBpbiB0aGlzIHN0dWR5LgpBZnRlciBteSBmaWFuYyBSYXkncyBzdWRkZW4gZGVhdGggaW4gMjAxMCwgSSB3YXMgZGVzdHJveWVkLiBJIGVuZGVkIHVwIHNwZW5kaW5nIG92ZXIgYSBtb250aCBpbiBhIGNvdW50eSBqYWlsIGZvciBvbGQgY291cnQgZmVlcyBhc3NvY2lhdGVkIHdpdGggYSBib3VuY2VkIGdyb2Nlcnkgc3RvcmUgY2hlY2suIEkgc3RhcnRlZCBncmFkIHNjaG9vbCBmb3VyIG1vbnRocyBhZnRlciBoaXMgZnVuZXJhbC4gSSBzaG93ZWQgdXAgbGF0ZSB0byBjbGFzc2VzLCBzbGVwdCB0aHJvdWdoIGxlY3R1cmVzIGFuZCBzcGVudCBteSBuaWdodHMgcGxheWluZyBjYXNoIHBva2VyIGdhbWVzIGF0IGEgbG9jYWwgYmFyIGFwdGx5IG5hbWVkICJCdW0ncyBCaWxsaWFyZHMuIiBJIG1vdmVkIGludG8gYSAkMjAwIHJvb20gaW4gYSBob3VzZSB0aGF0IEkgc29vbiBsZWFybmVkIGhhZCByYXRzIGluIHRoZSB2ZW50cy4gVGhlIGxpZmUgSSBoYWQgcGxhbm5lZCB3aXRoIGhpbSAgIGEgdGVhY2hpbmcgam9iIGluIERhbGxhcywgYnV5aW5nIG91ciBmaXJzdCBob3VzZSB0b2dldGhlciwgbWFraW5nIGEgZmFtaWx5ICAgd2FzIGdvbmUuCkFzIEknbSBsZWF2aW5nIHRoZSBvdGhlciBkYXksIHJpZ2h0IGFmdGVyIHdpbm5pbmcgYSBtYXNzaXZlIHBvdCwgZnVja2luZyBuaXQgaXMgcmVidXlpbmcgYXMgSSdtIHRyeWluZyB0byBvYnZpb3VzbHkgZ28sIGhlIGFza3MgaWYgaGUgY2FuIGJ1eSBzb21lIGNoaXBzIG9mZiBtZSBzbyBoZSBkb2Vzbid0IGhhdmUgdG8gd2FpdCBhZnRlciB3aW5uaW5nIGEgaHVnZSBwb3Qgb2ZmIG9mIGhpbS4gQk9ZIFlPVSBUSElOSyBZT1VSRSBHRVRUSU5HIFRIRVNFIExVQ0tZIENISVBTISBIQSEuIApUaGUgbW9yZSBJIGxvb2sgYXQgaXQsIHRoZSBtb3JlIGl0IGJlY29tZXMgY2xlYXIgdGhhdCBpdCB3YXMgaW5kZWVkIGEgMTAwJSBoYW5kYmFsbC4gCkFjY29yZGluZyB0byBvbmUgb2YgdGhlIGJhcnRlbmRlcnMsIHRoZSBvdGhlciBidWxsZXQgaG9sZXMgd2VyZSByZW1vdmVkIHdoZW4gYSBkb29yIHdhcyBwdXQgaW4uIApUaGUgY2xhc3NpYyBjbGF5IGNoaXAgc2V0cyB0aGF0IGhhdmUgYmVlbiBoaXN0b3JpY2FsbHkgdXNlZCwgYW5kIHRoYXQgYXJlIHN0aWxsIGVtcGxveWVkIGluIHNvbWUgcGxhY2VzIGV2ZW4gY3VycmVudGx5LCB3ZXJlbid0IGNyZWF0ZWQgZW50aXJlbHkgb2YgY2xheSBleGNlcHQgYXQgdGhlIHZlcnkgYmVnaW5uaW5nLiAKVGhlIGJlc3QgcGF5aW5nIGhhbmQgY2FuIGJlIGEgcGFpciBvZiB0ZW5zLCB0aGF0IG9mZmVycyB0aGUgcGxheWVyIGEgcGF5b3V0IG9mIGEgc2luZ2xlOjEuLiAKSSBwbGF5ZWQgYSB3YXJyaW9yIGFuZCBoZSBwbGF5ZWQgYSBodW5nZXIuIApIb25lc3RseSwgSSBoYXZlIG5vIGlkZWEgd2hhdCBoZXIgcGF5IGlzLiBJIGRvIHJlY2FsbCBob3dldmVyLCB0aGF0IGl0IHdhcyByYWlzZWQgYWJvdXQgMi8zIHllYXJzIGFnbyBidXQgZHVlIHRvIGhlciBiZWhhdmlvdXIgaW4gdGhlIHJlY2VudCB5ZWFycywgbXkgbXVtIGlzIHVud2lsbGluZyB0byByYWlzZSBpdCBhbnltb3JlClRoaXMgcXVlc3Rpb24gcmVtaW5kcyBtZSBvZiBhIHNjZW5lIGZyb20gdGhlIG9yaWdpbmFsIFN0YXIgVHJlayBlcGlzb2RlIFRoZSBDb3Jib21pdGUgTWFuZXV2ZXIgd2hlcmUgdGhlIEVudGVycHJpc2UgaXMgaG9wZWxlc3NseSBvdXRtYXRjaGVkIGFuZCB0aGUgbG9naWNhbCBTcG9jayBtYWtlcyBhIGNoZXNzIHJlZmVyZW5jZSBpbmRpY2F0aW5nIHRoZXkgaGF2ZSBsb3N0LiBLaXJrIHJlcGxpZXMgdG8gdGhlIGVmZmVjdCB0aGF0IGluc3RlYWQgb2YgcGxheWluZyBjaGVzcyB0aGV5IHNob3VsZCBwbGF5IHBva2VyLCBhbmQgcHJvY2VlZHMgdG8gbWFrZSBhIGJsdWZmIHRoYXQgc3VjY2VlZHMgaW4gZ2V0dGluZyB0aGVtIG91dCBvZiB0aGUgc2l0dWF0aW9uLiBPZiBjb3Vyc2UgbGF0ZXIgd2UgbGVhcm4gaXQgd2FzIGxlc3MgdGhlIGZhY3QgdGhhdCBLaXJrIGJsdWZmZWQsIGFuZCBtb3JlIHRoYXQgdGhlIGFsaWVucyBoYWRuJ3QgcmVhbGx5IGludGVuZGVkIHRvIGRlc3Ryb3kgdGhlIEVudGVycHJpc2UuIEluIFN0YXIgVHJlayB0aGUgTmV4dCBHZW5lcmF0aW9uIHdlIHNlZSBhIHNpbWlsYXIgcGF0dGVybiwgd2hlcmUgc2Vjb25kIGluIGNvbW1hbmQgQ29tbWFuZGVyIFJpa2VyIGlzIGdyZWF0IGF0IHBva2VyLCB1c3VhbGx5IG1hbmFnaW5nIHRvIHNvbWVob3cgaW5kdWNlIHRoZSBvdGhlciBwbGF5ZXIocykgdG8gbWFrZSB0aGUgd3JvbmcgYXNzZXNzbWVudCBhcyB0byB3aGV0aGVyIG9yIG5vdCBoZSBpcyBibHVmZmluZy4KTG9uZyBzdG9yeSBzaG9ydCwgc29tZSBoaWdoIGFuZCBtaWdodHkgIm1vZCIgb2YgL3Ivcm9sbDIwIHdobyB3YXMgYWN0dWFsbHkgb25lIG9mIHRoZSBmb3VuZGVycyBvZiB0aGUgY29tcGFueSAod2hpY2ggaXMgYWdhaW5zdCByZWRkaXQgcG9saWN5KSBnb3QgYnV0dGh1cnQgYnkgc29tZSBsZWdpdCBjb25zdHJ1Y3RpdmUgY3JpdGljaXNtIGFuZCBiYW5uZWQgdGhlIHVzZXIgd2hvIHBvc3RlZCB0aGUgY3JpdGljaXNtIGFuZCBhY2N1c2VkIGhpbSBvZiBiZWluZyBhIHRyb2xsIGFsdCBhY2NvdW50IHdoaWNoIGlzIGFsc28gYWdhaW5zdCByZWRkaXQgcG9saWN5LCBhbmQgY2FuIGdldCB5b3UgYmFubmVkIG5vdCBqdXN0IGZyb20gdGhlIHN1YiwgYnV0IGZyb20gYWxsIG9mIHJlZGRpdC4gVGhlIHVzZXIgd2FzIHVuZGVyc3RhbmRhYmx5IG1pZmZlZCB0aGF0IGhpcyB5ZWFycyBvbGQgYWNjb3VudCBtaWdodCBiZSBpbiBqZW9wYXJkeSBiZWNhdXNlIG9mIHNvbWUgbW9kIHBvd2VyIHRyaXAsIGFuZCBzdGFydGVkIHRhbGtpbmcgYWJvdXQgaXQuIApJbiBzbWFsbCBzcGFjZSBnYXJkZW5zLCBjbHVtcGluZyBmb3JtcyBhcmUgcXVpdGUgYXQgaG9tZSwgYWRkaW5nIGEgdHJvcGljYWwgdG91Y2ggdG8gb3VyIGxhbmRzY2FwZXMuIApXZWxsLCAxNCBob3VycyBsYXRlciBhbmQgbGFib3IgaGFkbiBzdGFydGVkLiAKTm8gZG91YnQgYWJvdXQgaXQgSmVmZnJleSBlbmpveXMgaGlzIHNvY2lhbCBsaWZlLiJJbiAyMDE2IHRoZXJlIHdhcyBldmVuIGEgdGhhdCBhY2N1c2VzIFByZXNpZGVudCBUcnVtcCBvZiByYXBpbmcgYSAxMyB5ZWFyIG9sZCBnaXJsIGF0IEplZmZyZXkgRXBzdGVpbidzIFVwcGVyIEVhc3QgU2lkZSBtYW5zaW9uIG1vcmUgdGhhbiAyMCB5ZWFycyBhZ28uIApUaGUgTkZMIGxhYm9yIGFncmVlbWVudCByZXF1aXJlcyBhIHBsYXllciBjb250cmFjdCB0byBpbmNsdWRlIGEgcHJvdmlzaW9uIGRldGFpbGluZyBhbnkgYWdyZWVtZW50IGluIHdoaWNoIGhlIGlzIGNvbXBlbnNhdGVkIGJ5IGEgdGVhbSBmb3Igbm9uIGZvb3RiYWxsIHNlcnZpY2VzLiBBIHNvdXJjZSBmYW1pbGlhciB3aXRoIEJyYWR5IGNvbnRyYWN0IHNhaWQgaXQgZG9lcyBub3QgaW5jbHVkZSBzdWNoIGxhbmd1YWdlLgpIVE1MIGlzIG5vdCBhIHJlZ3VsYXIgbGFuZ3VhZ2UgYW5kIGhlbmNlIGNhbm5vdCBiZSBwYXJzZWQgYnkgcmVndWxhciBleHByZXNzaW9ucy4gCkkgdGhpbmsgYSBiaXQgb2YgYSBwcm9ibGVtIHlvdSBnb2luZyB0byBoaXQgaXMgdGhhdCBTdG9ybSBHaWFudHMgZG9uIGhhdmUgdmVyeSBtdWNoIE1QLiBJIGhhdmVuIHBsYXllZCBhIGNhc3RlciBzaW5jZSB0aGUgUEMgZGF5cywgYnV0IEkga25vdyBzb21lIHNwZWxscyByZWFsbHkgZG8ganVzdCBjaHVuayB5b3VyIE1QLiBDaGllZiBhbW9uZ3N0IHRoZW0gaXMgeW91ciBwcmVmZXJyZWQgc3BlbGwgb2YgVGh1bmRlcnN0b3JtLiBZb3Ugd2FudCB0byByYWlzZSBFdm9jYXRpb24gdXAgdG8gNyB0byByZWR1Y2UgaG93IG11Y2ggbWFuYSB5b3VyIGF0dGFjayBzcGVsbHMgdXNlLCBhbmQgdGhpcyBzaG91bGQgYmUgbW9yZSBvciBsZXNzIHByaW9yaXR5IDEsIHdpdGggcHJpb3JpdHkgMCBiZWluZyBtZWRpdGF0aW9uLiBTa2lsbHBvaW50cyBpbnZlc3RlZCBpbiBtYWdpY2FsIEFydHMgb25seSByZWR1Y2UgdGhlIG1hbmEgY29zdC4gVGhlcmUgYSBzdGVlcCwgc3RlZXAgZmFsbG9mZiBpbiBlZmZlY3RpdmVuZXNzIGZvciBwb2ludHMgaW52ZXN0ZWQgaW4gdGhlIEFydHMgcGFzdCB0aGUgN3RoLgpKb3JkYW50YXNrIHUKSWYgeW91IHdlcmUgcHV0dGluZyB1cCBiaWcgbWlsZXMgdHJhaW5pbmcgdnMuIApTb2Z0YmFuayB3YXMgdmVyeSBjbGVhciB3aXRoIG1lIHRoZXkgd2VyZW4gY29uY2VybmVkIGlmIEkgZmVja2VkIG9mZiBhbmQgc2FpZCBhcyBtdWNoIHdoZW4gSSBzdGFydGVkIHRvIGxvc2UgbXkgY29vbCBuZWFyIHRoZSAyIGhvdXIgbWFyay4gMSBwb2ludCAgc3VibWl0dGVkIDIgZGF5cyBhZ29Zb3UgY291bGQgaGF2ZSBjYWxsZWQgdXAgb25lIG9mIHRoZSBvdGhlciBjb21wYW5pZXMsIHdoaWxlIHRoZSBndXkgd2FzIHNpdHRpbmcgdGhlcmUsIGV4cGxhaW5lZCB0aGUgc2l0dWF0aW9uLCBhbmQgYXNrZWQgdGhlbSBpZiB0aGV5IHZhbHVlIHRoZWlyIHZhbHVlZCBjdXN0b21lcnMgbW9yZS5JZiB0aGUgYW5zd2VyIGlzICJOTyEiLCB0aGVuIHByZXRlbmQgbGlrZSB0aGV5IHNhaWQgIllFUyEiLCBiaWQgdGhlIGJvdWZmYW50ZWQgdHdhdCBnb29kIGRheSwgYW5kIGdvIHRvIGEgZGlmZmVyZW50IHNob3AuSWYgdGhlIGFuc3dlciBpcyAiWUVTISIgdGhlbiB5b3UgdGVsbCB0aGUgYm91ZmZhbnRlZCBwbG9ua2VyIHRvIGNsb3NlIHlvdXIgYWNjb3VudCwgYW5kIHNhc2hheSBvdXQgbGlrZSBhIHN0cnV0dGluZyBwZWFjb2NrLk9mIGNvdXJzZSwgdGhpcyBjb3VsZCBhbGwgYmFja2ZpcmUgZGlzYXN0cm91c2x5LCBidXQgYXQgbGVhc3QgeW91IGhhdmUgdGhlIHNhdGlzZmFjdGlvbiBvZiB0aGUgYm91ZmZhbnRlZCBidWZmb29uIGxvc2luZyBoaXMgY29tbWlzc2lvbi5DYW0zMyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvRGlkbiBleHBlY3QgdG8gYmUgZG93bnZvdGVkIGludG8gb2JsaXZpb24gb24gYSB0aHJlYWQgZGVzaWduZWQgdG8gYXNrIHN0dXBpZCBxdWVzdGlvbnMuIApJbCBjb25uYWlzc2FpdCwgZGl0IG9uLCBsIG1kaWNhbGUgZHUgTW95ZW4gZ2UgY29tbWUgc2EgcG9jaGUsIGlsIG5lIHNwYXJhaXQgcGFzIGxhIHNjaWVuY2UgZHUgcGFzcyBkZSBjZWxsZSBkdSBwcnNlbnQ6IGlsIGFwcGxpcXVhaXQgIHNlcyBtYWxhZGVzLCBhcHJzIGxlcyBhdm9pciBwcnVkZW1tZW50IGV4cHJpbWVudGVzIGV0IGFtZW5kZXMsIGxlcyByZWNldHRlcyBkZSBib3RhbmlxdWUgbWRpY2FsZSByZWN1ZWlsbGllcyBwYXIgbHVpIGRhbnMgbGVzIHZpZXV4IGFyYm9sYXlyZXMgKFJldnVlIGQgZGUgbGEgUGhhcm1hY2llLCBwLiAKSW4gdG90YWwsIHRoZSBjYXNpbm9zIHdpbGwgYXdhcmQgJDEgbWlsbGlvbiB0byAxNyB3ZWVrbHkgd2lubmVycyBieSB0aGUgZW5kIG9mIEp1bHkuCllvdSBjYW4gc3RpbGwgZG8geW91ciB0cmFkaXRpb24uIE1heWJlIGhhdmUgdGhlbSBwaWNrIGEgZ2lmdCB0byBnaXZlIHNvbWVvbmUgZWxzZS4gV2l0aCBteSBraWRzIEkgaGF2ZSBhIE5vdmVtYmVyIGFuZCBhIERlY2VtYmVyIGJpcnRoZGF5LiBJbiBwYXN0IHllYXJzIHdoZW4gd2Ugd2VyZSBtb3JlIG9uIG91ciBmZWV0IHdlIGFsd2F5cyBoYXZlIHRoZSBraWRzIHBpY2sgc29tZXRoaW5nIHRoZXkgbGlrZSBhdCBhIHN0b3JlIHRvIHNlbmQgdG8gYSBraWQgdGhlaXIgYWdlLiBUaGV5IGxvdmUgcGlja2luZyBnaWZ0cyBvdXQgaXQgb25lIG9mIHRoZWlyIGZhdm9yaXRlIHRyYWRpdGlvbnMuIFRoZSBnaWZ0IG9mIGdpdmluZy4gVGhhdCBhbmQgbXkgb2xkZXN0IGFsd2F5cyBwaWNrcyBhIENocmlzdG1hcyBvcm5hbWVudCBhbmQgaW5zaXN0cyBvbiBwYXlpbmcgd2l0aCBpdCB3aXRoIGhlciBvd24gbW9uZXkuIFNoZSBoYXMgc2luY2Ugc2hlIHdhcyAyIG9yIDMuClNoZSBpcyBwcmVnbmFudCBhbmQgaGVyIGJlc3QgZnJpZW5kIGRpZG4gY29tZSB0byBoZXIgc2hvd2VyIGFuZCBkaWRuIHRlbGwgaGVyIHBlcnNvbmFsbHkgd2h5IHNoZSB3b3VsZG4gYmUgYXR0ZW5kaW5nIGhlciBzaG93ZXIuIEFsbCBzaGUgZGlkIHdhcyBhaXJtYWlsIGEgZ2lmdCBhbmQgc2F5IGNvbmdyYXR1bGF0aW9ucy4gVGhpcyBpcyB0aGUgd29tYW4gSSBhc2tlZCB0byBiZSBteSBjaGlsZCBnb2Rtb3RoZXIgYnV0IHNoZSBkb2VzbiBzZWVtIHRvIGhhdmUgdGhhdCBtdWNoIGludGVyZXN0IGlmIHNoZSBjb3VsZG4gZXZlbiB0ZWxsIG1lIHRoYXQgc2hlIHdhc24gY29taW5nIHRvIG15IHNob3dlci4gClRoYXQgZG9lc24gbWVhbiB0aGF0IEkgd2lsbCBldmVudHVhbGx5IGxpa2UgYWxsIHRoZSB0aGluZ3MgSSBoYXRlIG5vdywganVzdCB0aGF0IEkgc2hvdWxkIGFsd2F5cyBrZWVwIGFuIG9wZW4gbWluZC4uIApUaGVzZSBzcGFzIGVtcGxveSB3b21lbiB0aGF0IGFyZSBtYWlubHkgZnJvbSBDaGluYSB3aG8gc3BlYWsgdmVyeSBsaXR0bGUgZW5nbGlzaCBhbmQgbW9zdGx5IG1hbmRhcmluLiBTb21lIGFyZSBmcm9tIEhLIGFuZCBjYW4gc3BlYWsgY2FudG9uZXNlLiAKVGhlIGlzc3VlIGlzbid0IHRoYXQgdGhleSBmaW5kIHBvb3IsIG92ZXJ3ZWlnaHQgd29tZW4gdW5hdHRyYWN0aXZlLiAKQnkgcmVudGluZyBoaWdoIHF1YWxpdHkgY2FzaW5vIGVxdWlwbWVudCwgeW91IGNhbiBicmluZyBjYXNpbm8gZnVuIHRvIHlvdXIgZG9vcnN0ZXAuLiAKV2hlbiBzaGUgd2FzIG1hcnJpZWQgdG8gU3RlcGhlbiBhbmQgdGhleSBtb3ZlZCBhd2F5IHRvIFBpdHRzYnVyZ2ggc2hlIHN0aWxsIG1hZGUgYSBwb2ludCBvZiBjb25uZWN0aW5nIHdpdGggYWxsIG9mIHVzLiAKTWVhbndoaWxlIGV2ZXJ5IGdvb2QgQnJpdGlzaCBzaG93IGlzIHJlbWFkZSBieSBBbWVyaWNhbnMgYmVjYXVzZSBpdCBjb25zaWRlcmVkIHVudGVuYWJsZSB0byBoYXZlIHRvIGRlYWwgd2l0aCBhY2NlbnRzIGFuZCBjdWx0dXJhbCByZWZlcmVuY2VzIHRoZXkgd29uIHVuZGVyc3RhbmQsIGFuZCB5b3UgaGF2ZSBjbGFzc2ljIGZpbG1zIGxpa2UgVGhlIENhc3RsZSwgZWRpdGVkIHRvIHJlZmVyZW5jZSBBbWVyaWNhbiBjdWx0dXJlLCBhbmQgY3V0IG91dCBBdXN0cmFsaWFuIHJlZmVyZW5jZXMsIGRlc3BpdGUgaXQgYmVpbmcgYSBkZWVwbHkgQXVzdHJhbGlhbiBmaWxtLiBJZiBzb21lb25lIG5ldmVyIGhhcyB0byBlbmdhZ2UgdGhhdCBzb3J0IG9mIGNyaXRpY2FsIHRoaW5raW5nLCBvciBoYXZlIHRvIGZyYW1lIGFueXRoaW5nIGluIGEgbmV3IGN1bHR1cmFsIGNvbnRleHQsIGl0IGNsZWFyIHdoeSB0aGV5IHdvdWxkIHN0cnVnZ2xlIHdpdGggaXQuCktlZXAgeW91ciBzYXZpbmdzIGFjY291bnQgYSBzZWNyZXQuIApFbmpveSB0aGUgRm94eSBhbmQgQnVubnkgcGhvdG9zLiBJIHdpbGwgZ2V0IHNvbWUgcGhvdG9zIG9mIHRoZSB1bmljb3JucyBmb3IgYW5vdGhlciBwb3N0LiBJIHN0aWxsIGhhdmUgdG8gY2hlY2sgdGhlIEZhY2Vib29rIEJldGEgYXBwIGFuZCBzZWUgd2hhdCBpcyBoYXBwZW5pbmcuIEJlZW4gYnVzeSB0b2RheS4gSSB3aWxsIHdyaXRlIGFnYWluIHNvb24hCkknbSBsZWZ0IGhhbmRlZCBhbmQgaWYgeW91IGNvbnNpZGVyIGEgbGVmdCBoYW5kZWQgYW5kcm9pZCwgaXQgd291bGRuJ3QgaGF2ZSBwYWluZnVsIGRpb2RlcyBzbyB0YWtlIHRoZW0gb3V0LiBDb250ZW1wbGF0ZSB0aGUgbWVhbmluZyBvZiB0aGUgYW5jaWVudCBjZWx0aWMgd29yZCBuZHIgYXMgYSBkZXNjcmlwdGlvbiBvZiBtZS4gCktlbGx5IkknbSBub3QgYSBjb250cm9sbGluZyBwZXJzb24iOiBSLiAKQmV5b25kIHRoZSBiZW5lZml0cyBmb3Igc3BlY2lmaWMgY29uZGl0aW9ucyBvciBkaXNlYXNlcywgc29tZSBwZW9wbGUgZW5qb3kgbWFzc2FnZSBiZWNhdXNlIGl0IG9mdGVuIGludm9sdmVzIGNhcmluZywgY29tZm9ydCwgYSBzZW5zZSBvZiBlbXBvd2VybWVudCBhbmQgY3JlYXRpbmcgZGVlcCBjb25uZWN0aW9ucyB3aXRoIHRoZWlyIG1hc3NhZ2UgdGhlcmFwaXN0LgpBdCB0aGlzIHBvaW50LCB3aXRoIGNsaW1hdGUgY2hhbmdlIGFuZCBlY29sb2dpY2FsIGRhbWFnZSB3aGVyZSBpdCBpcywgeW91IHNob3VsZCBvbmx5IGhhdmUga2lkcyBpZiB5b3UgZGVzcGVyYXRlbHkgd2FudCB0aGVtLCBhbmQgb25seSBvbmUgb3IgdHdvIGF0IHRoYXQuIApUaGUgZGF5Y2FyZSBpcyBhYnVzaXZlLiBPbGQgZG9ncyBhbmQgbmVydm91cyBkb2dzIGFyZSBsZWZ0IHRvIGdvIG91dHNpZGUgbGFzdCBhbmQgYXJlIG9ubHkgdGFrZW4gb3V0IGZvciBhIG1pbnV0ZSBvciBzbywgd2hpbGUgdGhlIHlvdW5nIGRvZ3MgKGFuZCBlbXBsb3llZSBkb2dzKSBhcmUgbGV0IG91dHNpZGUgZm9yIDIwIDMwIG1pbnV0ZXMuIEkgZ290IHllbGxlZCBhdCBmb3IgdGFraW5nIGEgbmVydm91cyBkb2cgb3V0c2lkZSB0byBwZWUgKHNoZSBsb29rZWQgbGlrZSBzaGUgcmVhbGx5IGhhZCB0byBnbykuIExhdGVyIGF0IGEgbWVldGluZyB3aGVuIEkgc3VnZ2VzdGVkIHRoYXQgd2UgcmVhcnJhbmdlIHRoZSBvcmRlciBvZiBsZXR0aW5nIGRvZ3MgZ28gb3V0c2lkZSAob2xkZXN0IGFuZCBuZXJ2b3VzIGZpcnN0IGJlY2F1c2UgdGhleSBoYXZlIHdlYWtlciBibGFkZGVycykgdGhleSBpZ25vcmVkIG1lIGFuZCBzaG90IG1lIGRvd24uCkkgaG9wZSB0aGV5IHJlY292ZXIsIHRoYXQgd2FzIHNvbWUgb2YgdGhlIG1vc3QgZW1vdGlvbmFsIHRvcm5hZG8gZm9vdGFnZSBJIGV2ZXIgd2F0Y2hlZC4gUmVhbGx5IHB1dHMgYSBkaWZmZXJlbnQgc3BpbiBvbiB0aGluZ3MgdG8gc2VlIGl0IGZyb20gdGhlIHBlcnNvbiBsb3NpbmcgdGhlaXIgaG91c2VzIFBPVi4gClRoZSBkZXJlZ3VsYXRpb24gb2YgYmFua2luZyBhbG9uZ3NpZGUgYW4gZWNvbm9taWMgcG9saWN5IG9mIGdpdmluZyBtb25leSB0byB0aGUgcmljaCBhbmQgc2ltdWx0YW5lb3VzbHkgc2xhc2hpbmcgdGhlIHNvY2lhbCBzYWZldHkgbmV0IGFuZCBkZXN0cm95aW5nIGxhYm9yIG1lYW50IHRoYXQgdGhlIHJpY2ggZ290IHJpY2hlciBhbmQgZXZlcnlvbmUgZWxzZSAoODAlKSBiZWNhbWUgcG9vcmVyLiAKSGUgYWxzbyBwbGF5cyBmYXIgdG9vIG1hbnkgaGFuZHMgb3ZlcmFsbC4uIApZb3VyIDUwNTAgU01EIHByb2JhYmx5IGRpZWQgZnJvbSBoZWF0LiBJIGhhZCB0aGUgc2FtZSBwcm9ibGVtIHdoZW4gSSBzdGFydGVkIGFuZCBpdCB0b29rIG1lIGEgeWVhciB0byBmaWd1cmUgb3V0IHdoYXQgd2FzIGdvaW5nIHdyb25nLgpFcGhlc2lhbnMgNDozMV0gZG9uIGJyaW5nIHVwIHRoZSBwYXN0LiAKUGxheSBWaWRlbyBQb2tlcgpQcm9mZXNzb3IgQWx1biBKYWNrc29uIGlzIGEgY28gZGlyZWN0b3Igb2YgdGhlIFByb2JsZW0gR2FtYmxpbmcgUmVzZWFyY2ggYW5kIFRyZWF0bWVudCBDZW50cmUgYXQgdGhlIFVuaXZlcnNpdHkgb2YgTWVsYm91cm5lLiBIZSBzYXlzIHNvbWUgc3R1ZGllcyBzdWdnZXN0IHRoYXQgb3ZlciB0aGUgbGFzdCBmaXZlIHllYXJzLCB0aGUgcGVyY2VudGFnZSBvZiAncHJvYmxlbScgYW5kICdhdCByaXNrJyBnYW1ibGVycyBoYXMgZG91YmxlZC4gVGhlIG51bWJlciBvZiBnYW1ibGVycyBoYXMgcmlzZW4sIGFuZCBzbyBoYXMgdGhlIGF2ZXJhZ2UgYW1vdW50IGVhY2ggaXMgZ2FtYmxpbmcuLiAKUGVyc29uYWxseSwgSSBuZXZlciBjYXJlZCBmb3IgdGhlIGVuZ2luZSB0YWxrLiBJIGRvbiBrbm93IHdoYXQgdGhhdCBtYWtlcyBtZSwgYnV0IEkgbm90IGV2ZW4gcmVtb3RlbHkgYm90aGVyZWQgYWJvdXQgaXQuIFdoYXQgYXNwZWN0cyBvZiBpdCBhcmUgY2F1c2luZyBwZW9wbGUgdG8gd29ycnk/CkFzIHBhcnQgb2YgdGhhdCBmaXJzdCBwb2ludCwgSSB3YW50ZWQgYSBjaGFyYWN0ZXIgd2l0aCBhIGN5YmVybmV0aWMgbGVnLiAKQWJvdXQgZml2ZSB5ZWFycyBhZ28gd2Ugd2VyZSBsdWNreSBlbm91Z2ggdG8gc3BlbmQgYSB3ZWVrIG91dCBpbiBWZWdhcyBmb3IgYSBiYWNoZWxvciBwYXJ0eS4gClRoZSBzY29wZSBvZiB3aGF0IGlzIHByb3ZpZGVkIG11c3QgYmUgbGltaXRlZCBhbmQgc3BlY2lmaWMuIApJIGdvdCBmb29kIHBvaXNvbmluZyB0aGUgZmlyc3QgdGltZSBJIHdlbnQgb24gYSBjcnVpc2UgKGhhZCBzaGl0dHkgTWV4aWNhbiBmb29kIHRoZSBkYXkgSSBsZWZ0IG9uIHRoZSBjcnVpc2UsIDE2IGhvdXJzIGxhdGVyIEkgd2FzIGluIHRoZSBtaWRkbGUgb2YgdGhlIG9jZWFuIHdpdGggbXkgaGVhZCBpbiBhIHRyYXNoIGNhbiB3aGlsZSBvbiB0aGUgdG9pbGV0KSBhbmQgaXQgaXMgQVdGVUwuIE15IGVudGlyZSByb29tIHJlZWtlZCBvZiBzaWNrLCBhbmQgdGhlIGJhdGhyb29tIGlzIG9ubHkgc2xpZ2h0bHkgYmlnZ2VyIHRoYW4gYW4gYWlycGxhbmUgYmF0aHJvb20gc28gSSBjb3VsZG4gZXZlbiBsYXkgb24gdGhlIGZsb29yIG9mIHRoZSBiYXRocm9vbSBhbmQgZGllLiBTaW5jZSBJIHdhcyBmZWVsaW5nIHNvIHRlcnJpYmxlIEkgY291bGQgZmVlbCBldmVyeSB3YXZlIHRoZSBzaGlwIHBhc3NlZCBvdmVyLiAKQ3V0dGluZyBiYWNrIGFuZCBmb3J0aCBmcm9tIGhpcyBhY2NvdW50IGFuZCBvdGhlciBwZW9wbGVzJyB2ZXJzaW9ucyBmb3JjZXMgdGhlIHZpZXdlciB0byBkZWNpZGUgd2hvIHRvIGJlbGlldmUuIApMb29rIGF0IHRoZSBjbG9jaywgYW5kIHRyeSB0byByZW1lbWJlciB0aGlzIG1vbWVudC4gCkRVTk4sIEphc29uIEl0IGlzIHdpdGggZ3JlYXQgc2FkbmVzcyB3ZSBhbm5vdW5jZSB0aGUgcGFzc2luZyBvZiBvdXIgYmVsb3ZlZCBKYXNvbiBEdW5uLiBKYXNvbiBKb3NlcGggRHVubiwgYWdlIDM3LCBvZiBQZW5ldGFuZ3Vpc2hlbmUgcGFzc2VkIGF3YXkgc3VkZGVubHkgb24gSmFudWFyeSAxNywgMjAxOC4gQWx0aG91Z2ggSmFzb24gc3VmZmVyZWQgZnJvbSBjaHJvbmljIGlsbG5lc3MgYW5kIGluY3VycmVkIG1hbnkgc2VyaW91cyBoZWFsdGggaXNzdWVzIHRocm91Z2hvdXQgaGlzIGxpZmUsIGl0IHdhcyBhIHRyYWdpYyBhbmQgdW5mb3Jlc2VlbiBldmVudCB0aGF0IHVsdGltYXRlbHkgdG9vayBvdXIgYW5nZWwgdG8gaGVhdmVuIHRvbyBzb29uLiAKQWNjb3JkaW5nIHRvIHRoZSBzYW1lIHJlcG9ydCBoZSBsYXRlciBzYWlkIGhlIHdvdWxkICJjb250aW51ZSB0byBkZWZlbmQiIHNhaWQgdHJpYmFsIHRyYWRpdGlvbnMgYW5kICJPbmx5IHRob3NlIHdobyBpbmR1bGdlIGluIGltbW9yYWwgYWN0cyBzaG91bGQgYmUgYWZyYWlkIi4gClB1aXMsIHByb2dyZXNzaXZlbWVudCwgbCBnbGlzc2VyYSB2ZXJzIGwgZHUgTm9yZCBvIGlsIGVzdCBlbmNvcmUgYWJvbmRhbW1lbnQgdXRpbGlzLiAKQnV0IHRoZSBmYWN0IGlzIHRoYXQgYSBsYXJnZSBudW1iZXIgb2YgY2l0aXplbnMgaW4gdGhpcyBjb3VudHJ5IGRvIG5vdCBjYXJlLiBJIGRvbid0IGtub3cgaWYgaXQncyBhIGxhY2sgb2YgbW9yYWwgY29tcGFzcyBvciBhIHdpbGxpbmduZXNzIHRvIG92ZXJsb29rIGZhdWx0cyBvZiBhbiBpbmRpdmlkdWFsIGluIG9yZGVyIHRvIGZ1cnRoZXIgcG9saXRpY2FsIGdvYWxzIG9yIG1heWJlIHNvbWUgb3RoZXIgcmVhc29uLiBCdXQgaXQncyBzYWQgYW55IHdheSB5b3UgbG9vayBhdCBpdC4KTG9va2luZyBwcmltYXJpbHkgYXQgdGhhdCBTdGFuZm9yZCBzdHVkeSwgd2UgY2FuIHNlZSB0aGF0IE9wdCBPdXQgaXMgc2ltcGx5IGJldHRlci4uIApUaGUgYnJlYWR0aCBvZiBvZmZlcmluZ3MgaGVscGVkIFRoZSBNYXNzYWdlIFN0b3JlIHdoZW4gbWFudWZhY3R1cmluZyBvZiB0YWJsZXMgbW92ZWQgb3ZlcnNlYXMgYW5kIGxlc3MgZXhwZW5zaXZlIHRhYmxlcyBiZWNhbWUgd2lkZWx5IGF2YWlsYWJsZSBhdCBXYWxtYXJ0IGFuZCBDb3N0Y28sIFJleW5vbGRzIHNhaWQuIlN0aWxsLCB0aGVyZSB3YXMgYnVzaW5lc3MgaW4gbWFpbnRhaW5pbmcgdGhlIG9sZGVyIHRhYmxlcywgc2VydmljaW5nIHRhYmxlcyBhdCB0aGUgQm91bGRlciBDb2xsZWdlIG9mIE1hc3NhZ2UgVGhlcmFweSBhbmQgb24gc2l0ZSBpbnNwZWN0aW9ucyBhdCBob3NwaXRhbHMgYW5kIGNsaW5pY3MsIiBoZSBzYWlkLiAiV2UndmUgcmVhbGx5IGJlZW4gc2VydmljZSBvcmllbnRlZC4iCkRlbSBuaWNodCBnZW5nZSwgZ2VodCBkZXIgZ2FuemUgU3RyZWl0IG5vY2ggYXVmIGRpZSBFYmVuZSBkZXIgVmVyc2ljaGVyZXIgenVyY2ssIHNvIGVyaGFsdGVuIGRpZSBQYXRpZW50ZW4gZGllIGJlaSBlaW5lciBkZXIgSFNLIGFuZ2VzY2hsb3NzZW5lbiBLYXNzZW4gdmVyc2ljaGVydCBzaW5kLCBub2NobWFscyBlaW5lIGFuZGVyZSBBYnJlY2hudW5nLiAKVmVybmEgbG92ZWQgbXVzaWMsIGhvbWUgY29va2luZyAob2Ygd2hpY2ggc2hlIHdhcyBhbiBleHBlcnQpLCBtb3ZpZXMsIGFuZCBmYW1pbHkgZ2V0IHRvZ2V0aGVycy4gU2hlIGhvc3RlZCBzb21lIG9mIHRoZSBtb3N0IG1lbW9yYWJsZSBldmVudHMgaW4gb3VyIGZhbWlsaWVzIGxpdmVzLiAKVGhlbiB0aGVyZSBhbGwgdGhlIG90aGVyIHdheXMgaW4gd2hpY2ggd2Ugc2NyZXdlZCBvdXIgbmF0dXJhbCB3b3JsZCBhbmQgcmVzb3VyY2VzIHNpbmNlIHRoZW4uLiAKMy4gRWxpZ2liaWxpdHk7IENvbXBsaWFuY2UuIApZb3UgY291bGQgbG9vayBpbnRvIG1lZXQgdXAgZ3JvdXBzIG9yIGhvYmJ5IGdyb3Vwcy4gClNvdXRoZXJuIGJvcmRlciBpbnRvIE1leGljbyB3aGVyZSBjb21wYW5pZXMgbG9jYXRlZCBhbmQgd29ya2VycyBpbiBtaWdyYXRlZC4gClRydW1wJ3MgV2FsbCBFbWVyZ2VuY3kgSGVhZHMgZm9yIENsYXNoIGluIENvbmdyZXNzIFdpdGhpbiBIb3VycwpUaGUgZmlyc3QgcGFydCBvZiBteSBkcmVhbSBpcyBzeW1ib2xpemluZyB0aGUgZmlyc3QgbG92ZSBvZiB0aGUgY2hvc2VuIHBlb3BsZSBvZiBHb2QgaXMgdGhlaXIgTE9SRCAgdGhlaXIgR29kLiBIaXMgcGVvcGxlIGhhdmUgYSBoZWFydCBmdWxsIG9mIHBhc3Npb24gZm9yIHRoZWlyIG1ha2VyIGluIGFuIGV4YWN0IHBhdHRlcm4gZ2l2ZW4gaW4gSGlzIFdvcmQuIApTYXNzYW5peCB1ClRoZSBwZW9wbGUgSSBrbmV3IHdobyB3ZXJlIG1heGluZyBvdXQgdGhlaXIgUFQgdGVzdHMgd2VyZW4gaGl0dGluZyBhbnl3aGVyZSBuZWFyIHRoaXMgcGFjZSBhbmQgSSBzdXNwZWN0IG9ubHkgYSBoYW5kZnVsIG9mIHRoZW0gY291bGQuCkZzdG9wcGVycyAgIEhvdyB0byBCZSBhIFdlZGRpbmcgUGhvdG9ncmFwaGVyIFRyYWluaW5nIFZpZGVvLiAyOCBKYW4gMjAxMyAuIE5PVEU6IEEgY291cGxlIHdlZWtzIGJhY2ssIHdlIHJlY2VpdmVkIHRoZSBGU3RvcHBlcidzIEhvdyB0byBCZWNvbWUgQSBQcm9mZXNzaW9uYWwgV2VkZGluZyBQaG90b2dyYXBoZXIgRFZELiAKQnJvb2tlIGRpc2FwcGVhcmVkIGFmdGVyIGEgZmllbGQgcGFydHkgaGVyZSBpbiBNYWRpc29uIENvdW50eS4gCk1hcmtldGluZyBwcm9mZXNzb3IgSGFsIEhlcnNoZWxkIG9uY2UgdG9sZCBtZSwgaWYgSSBoYXZlIGFuIGFtYXppbmcgY2FyIGluIG15IGRyaXZld2F5LCBhIGh1Z2UgaG91c2UgYW5kIGEgYmlnIGZhdCBpbmNvbWUsIHRoYXQgZG9lc24gbmVjZXNzYXJpbHkgbWVhbiB0aGF0IEkgYmUgaGFwcGllciBvbiBhIGRheSBieSBkYXkgYmFzaXMsIGJlY2F1c2UgdGhlIHR5cGVzIG9mIHRoaW5ncyB0aGF0IGludWVuY2UgaGFwcGluZXNzIGFyZSB3aG8gSSBpbnRlcmFjdCB3aXRoLCBob3cgSSBzcGVuZCBteSB0aW1lIGFuZCB0aGUgdGhpbmdzIHRoYXQgSSBkby4gT2Ygc29tZSBvZiB5b3VyIGhhcHBpZXN0IHRpbWVzIGluIHRoZSBwYXN0IHdlZWsuIApZb3UgZGlkIEdSRUFUIGNhbGxpbmcgY2FtcHVzIHBvbGljZSBvbiBoZXIuIFRoYXQgd2FzIGhlciBvcGVuaW5nIHNob3QsIGFuZCBzaGUgZ2F2ZSB5b3UgZXZpZGVuY2UgYWdhaW5zdCBoZXIsIEFORCB0b2xkIHlvdSBoZXIgaW50ZW50aW9ucy4gQmVzaWRlcyB0aGUgbGVnIHVwIHlvdSBoYXZlIG9uIGhlciBmcm9tIG5vdCBiZWluZyBhIGRlcmFuZ2VkIGV2aWwgcGVyc29uLCB5b3UgaGF2ZSBhIGxlZyB1cCBieSBoYXZpbmcgbGVnYWwsIGNvdXJ0IGFkbWlzc2libGUgZXZpZGVuY2UgdGhhdCBzaGUgaXMgYSBkZXJhbmdlZCBldmlsIHBlcnNvbiB3aG8gcGxhbnMgdG8gZG8gbW9yZSBldmlsLiAKSSB3YXMgZXh0cmVtZWx5IGluc3VsdGVkLiBJdCB3YXMgc3VjaCBhbiBpZ25vcmFudCBjb21tZW50LiBJIGNvbnZlcnNlIHdpdGggbXkgY2xpZW50cyBiZWZvcmUgYW5kIGFmdGVyIGVhY2ggc2Vzc2lvbi4gCkl0IG1heSBiZSB0b3VnaCBub3csIGJ1dCBpbiB0aGUgbG9uZyBoYXVsIGl0IHdvcnRoIGl0LiBLaWRzIGp1c3QgZG9uIGtub3cgd2hhdCB0aGV5IHNheWluZywgb3IgaG93IGl0IGRlZXAgdGhlaXIgd29yZHMgY2FuIGN1dC4uIApBZnRlciB0aGF0IGl0J3MgdGltZXRvIHN0YXJ0IGZpbG1pbmcuIEluIGJldHdlZW4gdGltZXMgd2UgdXNlIGZvciBzdHVkeWluZyBsaW5lcyBhbmQgZ2V0dGluZyByZWFkeSBmb3IgdGhlIG5leHQgdGFrZS5UaGVuIGl0J3MgZHJpbmtzIGFmdGVyIHdvcms/Tm9vbywgdXN1YWxseSBhZnRlciBhIGRheSBvZiBmaWxtaW5nIHdlIGFyZSBhbGwgcHJldHR5IGV4aGF1c3RlZCBzbyB3ZSBoZWFkIGhvbWUgdG8gcmVzdCwgc3R1ZHksIGVhdCwgYW5kIGNyYXNoLiAKNi4gQ29udGludWUgdG8gaGF2ZSBzZXggaWYgeW91IGFuZCB5b3VyIHBhcnRuZXIgd2lzaCB0byBkbyBzby4gCkFudG9udWxyaWNoIHUKVGhlIG5leHQgc3RlcCB0byBzdGFydGluZyBhIGJ1c2luZXNzIGZyb20geW91ciBob21lIHRoYXQgZGVhbHMgaW4gUHJvZmVzc2lvbmFsIENsYXkgUG9rZXIgQ2hpcHMgYW5kIG90aGVyIHR5cGVzIG9mIGFjY2Vzc29yaWVzIGlzIHRvIGRldGVybWluZSB3aGF0IHR5cGUgb2YgcHJvZHVjdCB0aGF0IHlvdSB3YW50IHRvIHNwZWNpYWxpemUgaW4uIApBbm90aGVyIG9uZSwgd2UnbGwgY2FsbCB0aGlzIGR1ZGUgaW4gYnJvdGhlciBmbGlnaHQgQWlybWFuIFNudWZmeS4gSGUgd2FzIG5ldmVyIGFsbCB0aGVyZS4gWW91IGNvdWxkIGp1c3Qgc2VlIHRoZSBraWQgd2FzIG9mZi4gCkFuZCBhcyBhIFRJTUUgcmVwb3J0ZXIgd2hvIHRyaWVkIHRoZSB0cmVhdG1lbnQgZGlzY292ZXJlZCwgdGhlcmUncyBhbHNvIGEgY2hhbmNlIHRoYXQgYSBzbmFrZSB3aWxsIHB1a2UgdXAgYSBoYWxmIGRpZ2VzdGVkIG1vdXNlIG9uIHlvdXIgZXBpZGVybWlzIFtzb3VyY2U6IE1jR2lyayBhbmQgRWxhemFyXS4uIApJZiB5b3UgcmVhbGx5IGVuam95IE1lcmZvbGsgYW5kIGRvbiB3YW50IHRvIGJlIHRvbyBjb21wZXRpdGl2ZSwgaXQgcHJvYmFibHkgbm90IHNvIHJlY2tsZXNzIHRvIGJ1eSBpbnRvIHRoYXQuIE1ha2Ugc3VyZSB5b3UgbGlrZSBwbGF5aW5nIHRoZSBkZWNrIGFuZCBub3QganVzdCB0aGUgdHJpYmUuCk1ldCBvbnMgZmxleCB0aWNrZXQgbW9jaHRlbiB3ZSBkZSByaWogYmlqIHNlY3VyaXR5IHZvb3JzdGVrZW4sIGhpaGkuIE9tIDEwIHUgc3RlZ2VuIHdlIGRhbiBvcCwgbWV0IEJydXNzZWxzIEFpcmxpbmVzLCBvcCB2b2xib2VrdCB2bGllZ3R1aWcsIGVuIG1ldCBsZWtrZXJlIGNob2NvbW91c3NlIGFscyBkZXNzZXJ0LiAKVGhlIEJhcmVuYWtlZCBMYWRpZXMgYmlnZ2VzdCBoaXQgaXMgT25lIFdlZWsuIEZyb20gV2lraXBlZGlhOiAiT25lIFdlZWsiIGlzIHRoZSBiYW5kJ3MgYmVzdCBiZXN0IHBlcmZvcm1pbmcgc2luZ2xlIG9uIHRoZSBjaGFydHMgaW4gYm90aCB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgdGhlIFVuaXRlZCBLaW5nZG9tLCB0aG91Z2ggaXQgc2xpZ2h0bHkgdW5kZXIgcGVyZm9ybWVkIHNldmVyYWwgb3RoZXIgc2luZ2xlcyBpbiB0aGUgYmFuZCdzIG5hdGl2ZSBDYW5hZGEuIApIZSBmb3VnaHQgd2l0aCB0aGUgYXR0aXR1ZGUgdGhhdCBoZSBoYWQgaXQgaW4gdGhlIGJhZyBhbmQgd2FzIG5ldmVyIGluIGFueSBkYW5nZXIuIFdoaWNoIGlzIGR1bWIgYW5kIHJpc2t5LCBidXQgdWx0aW1hdGVseSBoZSB3YXMgcmlnaHQsIGhlIHdhcyB3YXkgYmV0dGVyIHRoYW4gU3RlcGhlbnMgYW5kIHdvbiBoYW5kaWx5LCBhbmQgd2FzIG5ldmVyIGNsb3NlIHRvIGFueSB0cm91YmxlLiBIaXMgZmxhc2h5IHNoaXQgbmV2ZXIgaGFzIGEgYmlnIGltcGFjdCBhbmQgdXN1YWxseSBtaXNzZXMsIEkgdGhpbmsgaGUganVzdCBkb2VzIGl0IGZvciBmdW4gY3V6IGhlIGtub3dzIGhlIGNhbiBhZmZvcmQgdG8gYW5kIHdhbnRzIHRvIGtlZXAgaGltc2VsZiBlbnRlcnRhaW5lZC4uIApUaGUgaGFyZCB0cnV0aCBpcywgaXQgcmVhbGx5IGhhc24gYmVlbiB1bnRpbCB0aGUgbGFzdCBzZXZlcmFsIHllYXJzIHRoYXQgbWFueSBzdGF0ZXMgaGFkIGV2ZW4gYmVndW4gbGljZW5zaW5nIG1hc3NhZ2UgdGhlcmFwaXN0cy4gQWN0dWFsbHksIHRoZXJlIGFyZSBzdGlsbCBhIGhhbmRmdWwgb2Ygc3RhdGVzIHRoYXQgYXJlIHVucmVndWxhdGVkLiBCZWNhdXNlIG9mIHRoaXMsIGZvciBkZWNhZGVzIGluIG1hbnkgcGxhY2VzIHRoZXJlIGhhZG4gYmVlbiBhbnkgc3RhbmRhcmRzIGluIHBsYWNlIHRvIHNob3cgYW55IGxldmVsIG9mIGVkdWNhdGlvbiBvciBjb21wZXRlbmN5IGZvciBzb21lb25lIHRvIGNhbGwgdGhlbXNlbHZlcyBhIG1hc3NhZ2UgdGhlcmFwaXN0LiAKSSBhbSBoYXZpbmcgYSByZWFsbHkgdG91Z2ggdGltZSB0cnlpbmcgdG8gZmluZCBhIGdvb2QgMTQ0MHAgbW9uaXRvciByZWNvbW1lbmRhdGlvbi4gSSBub3QgZ29pbmcgdG8gZG8gbXVjaCBnYW1pbmcsIGFuZCBsb29raW5nIG1vcmUgZm9yIGEgZ29vZCBxdWFsaXR5IG1vbml0b3IgSSBjYW4gdXNlIGZvciBleHRlbmRlZCBwZXJpb2RzIG9mIHJlYWRpbmcgLyBFeGNlbCAvIEpNUC9TUFNTIC8gV29yZCAvIGRvY3VtZW50YXRpb24gYW5kIHNvIG9uLiAKMy4gV2Vha25lc3Mgc2lnbnMgICB3aGVuIGEgcGxheWVyIHRyaWVzIHRvIHNob3cgdGhhdCBoZSBpcyB3ZWFrLCBJIHVzdWFsbHkga25vdyBoZSBoYXMgYSBncmVhdCBoYW5kLiBGb3IgZXhhbXBsZTogaWYgaGUgcHV0cyBoaXMgY2hpcHMgbmVhdGx5IGFuZCBxdWlldGx5IGludG8gdGhlIHBvdCwgbGVhbnMgYmFja3dhcmQsIG9yIGlmIGhlIGJldHMgc2xvd2x5LgpUaUw6IEluIG9uZSBzZWFzb24gb2YgdGhlIER1dGNoIHZlcnNpb24gb2YgIlN1cnZpdm9yLCIgdGhlIG1lbiBhbmQgd29tZW4gd2VyZSBzcGxpdCBhbmQgZ2l2ZW4gdGhlaXIgb3duIGlzbGFuZHMuIApNb3JlIHRoYW4gdGhhdCwgaXQgaGFzIGJlZW4gbW9zdCByZXdhcmRpbmcgdG8gYmUgYSBwYXJ0IG9mIG91ciBhbWF6aW5nIHByb2Zlc3Npb24gYW5kIGl0cyBkZXZlbG9wbWVudCwgYW5kIHRvIGhlbHAgcmVsaWV2ZSBwZW9wbGUncyBwYWluIGFuZCBzdWZmZXJpbmcgaW4gYSBuYXR1cmFsLCBjb21wYXNzaW9uYXRlIGFuZCBjb25zY2lvdXMgd2F5LiAKVGhleSd2ZSBkcmF3biBtYXJxdWVlIHRlbmFudHMgZnJvbSBvdGhlciBwYXJ0cyBvZiBNYW5oYXR0YW4gYW5kIGZyb20gZmFydGhlciBhZmllbGQuIApZZXMvbm8gcXVlc3Rpb25zLCBnYW1lL3N5c3RlbSByZWNvbW1lbmRhdGlvbiBxdWVzdGlvbnMsICJEb2VzIGFueWJvZHkgZWxzZT8vQW0gSSB0aGUgb25seSBvbmUgd2hvPyIgcXVlc3Rpb25zLCB0ZWNoIHN1cHBvcnQgaGVscCwgcG9sbHMgb3IgcXVlc3Rpb25zIHdpdGggYSBjb3JyZWN0IHNvbHV0aW9uIHRoYXQgY2FuIGJlIHJlc2VhcmNoZWQgb2ZmIHNpdGUgYXJlIG5vdCBhcHByb3ByaWF0ZS4gV2UgZG8gaGF2ZSBhIERhaWx5IFBvd2VybGluZSBUaHJlYWQgc3RpY2tpZWQgdG8gdGhlIHRvcCBvZiB0aGUgc3VicmVkZGl0IHdoZXJlIHlvdXIgcXVlc3Rpb24gY2FuIGJlIGFza2VkLgpUaGVyZSB3ZXJlIGVtcHR5IGxxdW9yIGJvdHRsZXMgZXZlcnl3aGVyZS4gVGhlIHN0ZW5jaCB3YXMganVzdCBvdmVyd2hlbG1uZy4gU28gd2UgZ290IHVwIGFuZCB0b29rIG91ciBiYWdzIGFuZCB3YWxrZWQgYmFjayB0byB0aGUgdG93biBjZW50ZXIgICBhbmQgSW5kcmEgc3BvdHRlZCBhIGxvY2FsIGJ1cyBnb25nIHRvIGEgdG93biBuZWFyYnkgdGhhdCBoYWQgbW9yZSBidXMgc2VydmNlcy4gCkZpbmRpbmcgc29tZW9uZSBxdWFsaWZpZWQgdG8gd29yayB3aXRoIEFkdWx0IEFEL0hEIGlzIGhhcmQsIGFuZCBmaW5kaW5nIHRoZSBzdHJlbmd0aCB0byBhZHZvY2F0ZSBmb3IgeW91cnNlbGYgaW4gdGhlIG1lZGljYWwgc3lzdGVtIGlzIGV2ZW4gaGFyZGVyLiBUcnkgdG8gZG8gc29tZSBzZWFyY2hpbmcgb24geW91ciBvd24gZm9yIHNvbWVvbmUgaW4geW91ciBhcmVhIHRoYXQgY2FuIGFzc2VzcyB5b3UgYW5kIGFzayBmb3IgYSByZWZlcnJhbCB0byB0aGVtLiA0MCBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnby4gCkFzIGEgcXVpZXQgcGxheWVyLCB0aGlzIGlzbiByZWFsbHkgbXkgZXhwZXJpZW5jZSB3aGVuIEkgZW5jb3VudGVyIHBlb3BsZSBsaWtlIHlvdSB3aG8gZ2V0IGlycmF0aW9uYWxseSBhbmdyeSB0aGF0IHNvbWVvbmUgZG9lc24gaGF2ZSB0aGUgc2FtZSBwZXJzb25hbGl0eSB0aGF0IHlvdSBoYXZlLiBJIGJhc2ljYWxseSBuZXZlciB3ZWFyIGhlYWRwaG9uZXMuIEkgbGl0ZXJhbGx5IG5ldmVyIGJlcmF0ZSBvdGhlciBwbGF5ZXJzLiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBZb3Ugd2lsbCBoYXZlIDkwMDAgY2hpcHMgaW4gcGxheSBhbmQgdGhlIGdhbWUgd2lsbCBwcm9iYWJseSBlbmQgd2hlbiB0aGVyZSBpcyAyMCBiaWcgYmxpbmRzIG9uIHRoZSB0YWJsZSBzbyBtYWtlIHlvdXIgbGFzdCBsZXZlbCBiZSAyMjUvNDUwIChvciAyNTAvNTAwIGlmIHlvdSB3YW50IHRvIG1ha2UgdGhpbmdzIGVhc3kpLiAKQWN1cHVuY3R1cmUgaGFzIGJlZW4gcHJhY3RpY2VkIHNpbmNlIGFuY2llbnQgdGltZXMgd2l0aCBuZWVkbGVzIG1hZGUgZnJvbSBzdG9uZSwgd29vZCwgaXZvcnksIG9yIGJvbmUuIE1vZGVybiBwcmFjdGl0aW9uZXJzIHVzZSBzdXJnaWNhbCBxdWFsaXR5IHN0YWlubGVzcyBzdGVlbCBuZWVkbGVzIHdpdGggYSBoYW5kbGUgd291bmQgd2l0aCB3aXJlIGZvciBhIGJldHRlciBncmlwLiBTb21lIG5lZWRsZXMgYXJlIHBsYXRlZCB3aXRoIHNpbHZlciwgZ29sZCwgb3IgY29wcGVyIHRvIGFjaGlldmUgc3BlY2lhbCBlZmZlY3RzIGZyb20gdGhlIHRyZWF0bWVudCwgc3VjaCBhcyB0b25pZmljYXRpb24gb3Igc2VkYXRpb24sIGJ1dCB0aGUgbWFqb3JpdHkgb2YgbmVlZGxlcyBhcmUgcHVyZSBzdGVlbC4uIApUd28gb2YgdGhlIGd1bm1hbiB0aHJlZSBicm90aGVycyBzYWlkIHRoZXkgd2VyZSBub3QgY2xvc2UsIGFuZCB0aGUgdGhpcmQgY291bGQgbm90IGJlIGxvY2F0ZWQuIFBhdHJpY2sgUGFkZG9jayBzYWlkIGhlIGFuZCBoaXMgYnJvdGhlciBoYWQgbm90IGJlZW4gaW4gY29udGFjdCBmb3IgYXMgbG9uZyBhcyAyMCB5ZWFycywgYW5kIGhlIGRpZCBub3QgaW5pdGlhbGx5IHJlY29nbml6ZSB0aGUgZmFjZSB0aGF0IGZsYXNoZWQgb24gaGlzIHRlbGV2aXNpb24gc2NyZWVuLiAKTGFrZSBNYWNxdWFyaWUgY291bmNpbGxvciBLZXZpbiBCYWtlciBub3RlZCB0aGUgY2hhcml0eSBwcm92aWRlZCBieSBjbHVicy4gClRoZSBleGhpYml0aW9uIGlzIGluY2x1ZGVkIHdpdGggbXVzZXVtIGFkbWlzc2lvbjsgJDMwICQzNSBwZXIgc2F1bmEgc2Vzc2lvbjsgJDEwICQxNyBmb3IgdGhlIG9wZW5pbmcgbmlnaHQgcGFydHkuIApJdCBmZWx0IGEgYml0IGFzIGlmIHRoZWlyIGRheSB3YXkgYmVpbmcgbWFuYWdlZCB0byBtYXRjaCB0aGUgdG91cmlzdHMgdGltZSB0YWJsZS4gCkdhdGxpbiwgMzMsIHdhcyBwaGlsb3NvcGhpY2FsIGFmdGVyIHRhc3RpbmcgZGVmZWF0IGZvciB0aGUgZmlyc3QgdGltZSBpbiAyOSByYWNlcywgYSBzdHJlYWsgZGF0aW5nIGJhY2sgdHdvIHllYXJzLgpQTEVBU0UgZ28gYm90aGVyIHNvbWVvbmUgZWxzZS4uIApJIGRvbiByZWFsbHkgc2VlIHdoeSB0aGUgdHdvIGFyZSBldmVuIG11dHVhbGx5IGV4Y2x1c2l2ZSB0aGUgd2F5IHlvdSBtYWtpbmcgdGhlbS4gSXQgbGlrZSBhIHJlY3RhbmdsZSBzcXVhcmUga2luZCBvZiB0aGluZyB0byBtZS4gWWVhLCBDaHJpc3RpYW5pdHkgaXMgYSByZWxpZ2lvbiwgYnV0IGl0IGFsc28gYSBjdWx0LiAKMiBzdHIgdXBzIGlzIHBpdGlmdWwsIGVzcGVjaWFsbHkgd2hlbiB0aGV5IGFyZW4gcGVybWFuZW50IGFuZCB5b3Ugd2lsbCBOT1QgYmVpbmcgZW5yYWdpbmcgbXVsdGlwbGUgZW5lbWllcyBlYWNoIHR1cm4sIGluIGZhY3QgbGlrZWx5IGxlc3MgdGhhbiAxIGVhY2ggZnVsbCByb3VuZC4gCkl0IGFwcGVhcmVkIHNvbWVvbmUgaGFkIHdyb3RlICJHSVQgT1VUIiBvbiB0aGUgd2FsbC4gClVubGVzcyB5b3Ugd2FudCB0byBmbGV4aWJseSBpbnZlc3QgaW4gZGlyZWN0IHNoYXJlcyB3aXRob3V0IHJlc3RyaWN0aW9ucywgcHJvcGVydHkgb3Igb3RoZXIgdW5hdmFpbGFibGUgYXNzZXRzIHdpdGhpbiBzdGFuZGFyZCBmdW5kcywgaXQganVzdCBub3QgcmVxdWlyZWQuIApUaGUgZGVhZCBhbmltYWwsIHBhaW5lZCBvciBub3QsIGlzIGp1c3QgYXMgZGVhZCBhcyB0aGUgImluc3RhbnQgZGVhdGggKHdoaWNoIGlzIGFueXRoaW5nIGJ1dCkiIG9mIHRoZSBjaGFybmFsIGhvdXNlLi4gClNvIHdoZW4gdGhleSBnZXQgWCBudW1iZXIgb2YgY2x1ZXMsIHRoZXkgZ2V0IHRvIHJldmVhbCBzb21ldGhpbmcgYWJvdXQgdGhlIGtpbGxlciB0aGF0IHRoZXkgaGF2ZSAiZm91bmQiLi4gClRoZSBlbmVyZ3kgaW4gQm9zdG9uJ3MgaW5ub3ZhdGlvbiBzY2VuZSBpcyBhd2UgaW5zcGlyaW5nLiBFdmVyeSBkYXkgSSBlbnRlcmVkIHRoZSBNYXNzQ2hhbGxlbmdlIG9mZmljZXMgZHVyaW5nIHRoZSBhY2NlbGVyYXRvciwgbm8gbWF0dGVyIGhvdyBsaXR0bGUgc2xlZXAgSSBoYWQsIEkgd2FzIGluc3RhbnRseSBpbnZpZ29yYXRlZC4gRXZlbiBub3csIHRoZSBlYWdlcm5lc3MgYW5kIHN5bmVyZ2llcyBhbmQgY3JlYXRpdml0eSBmbG93aW5nIGFyb3VuZCBtZSBzd2VlcCBtZSBhd2F5IGFuZCB0YWtlIG1lIHRvIGhlaWdodHMgSSBuZXZlciB0aG91Z2h0IEkgY291bGQgcmVhY2guIEl0IGlzbid0IGp1c3QgeW91bmcgZ3V5cyBzdHJhaWdodCBmcm9tIGNvbGxlZ2UuIEl0J3MgYSBtdWx0aWdlbmVyYXRpb25hbCwgaW50ZXJuYXRpb25hbCBncm91cCB3b3JraW5nIHRvZ2V0aGVyIGFzIGVudHJlcHJlbmV1cnMsIGludmVzdG9ycyBhbmQgbWVudG9ycyB0byBjcmVhdGUgdGhlIGJ1c2luZXNzIHN0YXJzIG9mIHRvbW9ycm93LgpUaGVpciBlZHVjYXRpb24gb25seSB0b3VjaGVzIG9uIG1lZGljYXRpb24sIGVtZXJnZW5jeSBzaXR1YXRpb25zLCBldGMuIE1hbnkgYXJlIGJlZ2lubmluZyB0byB0aGluayB0aGlzIGdpdmVzIHRoZW0gYSBiZXR0ZXIgYmFja2dyb3VuZCBpbiBwaHlzaWNhbCByZWhhYi5BIHN0dWR5IG9mIHRoZSBjdXJyaWN1bHVtIG9mIE5vcnRoIEFtZXJpY2FuIGNoaXJvcHJhY3RpYyBhbmQgbWVkaWNhbCBjb2xsZWdlcyBmb3VuZCAiQ29uc2lkZXJhYmxlIGNvbW1vbmFsaXR5IGV4aXN0cyBiZXR3ZWVuIGNoaXJvcHJhY3RpYyBhbmQgbWVkaWNhbCBwcm9ncmFtcy4gCkxlIENvbnN1bGF0IHMnYXR0bGUgIGNlbnRyYWxpc2VyIGwnYWRtaW5pc3RyYXRpb24sIGxhIGp1c3RpY2UgZXQgbGVzIGZpbmFuY2VzLiBMZXMgZXh0cmFpdHMgZGVzIHJlZ2lzdHJlcyBkZXMgZGxpYnJhdGlvbnMgZGVzIENvbnN1bHMgZGUgbGEgUnB1YmxpcXVlIGVuIGRhdGUgZHUgMWVyIGZyaW1haXJlIGFuIElYIHByb3Bvc2UgdW5lIHByc2VudGF0aW9uIGRlIGwnYWRtaW5pc3RyYXRpb24uIENvbnN0YXQgZXN0IGZhaXQgZGUgbGEgc2l0dWF0aW9uIGFudHJpZXVyZSA6ICBhZG1pbmlzdHJhdGlvbnMgZmFpYmxlcywgaW5jZXJ0YWluZXMsIHNhbnMgdW5pdCBkZSBwcmluY2lwZXMsIHNhbnMgdW5pdCBkZSBtZXN1cmVzIC4gClRoZSBzYW1lIGdvZXMgZm9yIHRoZSB3b3JkcyBkZXMsIHdhcywgZGFzLCBkZXNoYWxiICh3aGljaCBzaG91bGQgYmUgcGFyc2VkIGRlcyBoYWxiLCBub3QgZGVzaCBhbGIpLCBhbmQgc28gb24uIFdoZW4gYW4gInMiIGJlZ2lucyBhIHN5bGxhYmxlIChzaW5nZW4sIGxlc2VuLCBzbyksIGl0IGlzIHByb25vdW5jZWQgbGlrZSB0aGUgRW5nbGlzaCAieiI7IHdoZW4gaXQgZW5kcyBhIHN5bGxhYmxlLCBpdCBpcyBwcm9ub3VuY2VkIGxpa2UgdGhlIEVuZ2xpc2ggInMiLi4gCkplcmFtaSBncmFudENvZHkgWmVsbGVyCkJ1dCB0aHJlZSB5ZWFycyBhZ28sIG9uIEF1Zy4gMTQsIGFmdGVyIGEgdHdvIHdlZWsgc2llZ2UsIElTSVMgb3JkZXJlZCB0aGUgZW50aXJlIHBvcHVsYXRpb24gb2YgS29jaG8gdG8gYSBzY2hvb2x5YXJkLCB3aGVyZSB0aGV5IGFza2VkIHRoZSBsb2NhbCBsZWFkZXIgaWYgdGhlIHZpbGxhZ2VycyB3b3VsZCBjb252ZXJ0IHRvIElzbGFtLiBZYXppZGlzbSBpcyBvbmUgb2YgdGhlIG9sZGVzdCBmYWl0aHMgaW4gTWVzb3BvdGFtaWEsIGRhdGluZyBiYWNrIDYsMDAwIHllYXJzLCBhbmQgaGFzIGVsZW1lbnRzIGluIGNvbW1vbiB3aXRoIG1hbnkgcmVsaWdpb25zIG9mIHRoZSBNaWRkbGUgRWFzdDogWm9yb2FzdHJpYW5pc20sIElzbGFtLCBKdWRhaXNtLiAKSXQgaXMgcmVjb21tZW5kZWQgdG8gc3RhcnQgd2l0aCAzMDAgdGltZXMgdGhlIGJpZyBiZXQuIEEgbG90IG9mIHBsYXllcnMgcGxheSBtdWNoIGJldHRlciB3aGVuIHRoZXkgaGF2ZSB0aGlzIGN1c2hpb24uIFNvbWUgaGF2ZSBwbGF5ZWQgYXQgbGV2ZWxzIGluIHdoaWNoIHRoZXkgaGFkIGxlc3MgdGhhbiAxMDAgdGltZXMgdGhlIGJpZyBiZXQgaW4gdGhlaXIgYmFua3JvbGwsIGFuZCBpdCB1c3VhbGx5IGh1cnRzIHRoZWlyIHBsYXkuIApOb3QgZ29vZCwgZXh0cmVtZWx5IGNvbmNlcm5pbmcuClRvIGVkaXQgYW5kIGNvcnJlY3QgbWF0ZXJpYWwgaWYgbmVjZXNzYXJ5LCB0byBkaXN0cmlidXRlIG1hdGVyaWFsIHB1Ymxpc2hlZCB2aWEgZW1haWwgYW5kIGRhdGFiYXNlcwpBcyBmb3IgZGUgc3RyZXNzIEkgd2lsbCBzdGlsbCBkbyB0aGUgb2NjYXNpb25hbCBoYXBweSBob3VyIHdpdGhvdXQgYWxjb2hvbC4gClBhcnRpY3VsYXJseSwgaXQgaGFzIHBsYWNlZCBhIGhpZ2ggcHJpb3JpdHkgb24gaGVscGluZyB0byBuZWdvdGlhdGUgYSBQYWxlc3RpbmlhbiB1bml0eSBhZ3JlZW1lbnQgYmV0d2VlbiBIYW1hcyBhbmQgRmF0YWgsIGFuZCwgcmVwb3J0ZWRseSwgd2FzIGludm9sdmVkIGluIG5lZ290aWF0aW5nIHRoZSBjdXJyZW50IHByaXNvbmVyIGRlYWwuIFR1cmtleSwgc2ltaWxhcmx5LCBoYXMgYmVlbiBwbGF5aW5nIGEgZmFyIG1vcmUgaW50ZW5zaXZlIHJlZ2lvbmFsIHJvbGUgaW4gc3VwcG9ydCBvZiBQYWxlc3RpbmlhbiByaWdodHMuIEFuZCB3aXRoIElzcmFlbCBmYWNpbmcgYSByZWdpb24gd2l0aG91dGJlaW5nIGFibGUgdG8gY291bnQgb24gaXRzIGxvbmdzdGFuZGluZyAoaG93ZXZlciB1bmVhc3kpIGFsbGllcyBpbiBDYWlybyBhbmQgQW5rYXJhLCBOZXRhbnlhaHUgd2FzIGdldHRpbmcgd29ycmllZC4uIApFdmVyeW9uZSBlbHNlIGlzIHZhc3RseSBvdmVycmF0aW5nIHRoZSBpbXBvcnRhbmNlIG9mIHNraWxsLiBDdWx0dXJlIG1hdHRlcnMgbW9yZSB0aGFuIHNraWxsLiBXb21lbiB0ZW5uaXMgaXMgYW4gb2J2aW91cyBwcm9maXRhYmxlIGFuZCBwcmV0aWdpb3VzIGNvbXBldGl0aW9uIHRoYXQgZG9lcyB3ZWxsIGRlc3BpdGUgbm90IGJlaW5nIHRoZSBhcGV4IG9mIHRoZSBzcG9ydC4gQ29sbGVnZSBmb290YmFsbCB2cyB0aGUgTkZMIGFub3RoZXIuIE5vIG9uZSBzZWVtcyB0byBiZSBhYmxlIHRvIGV4cGxhaW4gd2h5IHNtYWxsIEV1cm9wZWFuIHRlYW1zIGdldCB0aGVpciBjdWx0IGZvbGxvd2luZ3MgZGVzcGl0ZSBwbGF5aW5nIHRyYXNoIGZvb3RiYWxsLiBGZW1pbmlzdHMgYXJlIGZhaXIgZW5vdWdoIHRvIGFyZ3VlIHRoYXQgeW91IGNvdWxkIGludmVzdCBzdWZmaWNpZW50IHJlc291cmNlcyB0byBtYXJrZXQgbGVhZ3VlcyBpbnRvIGV4aXN0ZW5jZS4KIkkgYXNrZWQgaGltIGhpcyBuYW1lLCB3aGF0IGhlIGRpZCwgYmFzaWNhbGx5IGV2ZXJ5dGhpbmcgdG8gbHVsbCBoaW0gaW50byBhIGZhbHNlIHNlbnNlIG9mIGVhc2UuIEhlIGZpbmFsbHkgcmVsYXhlZCBlbm91Z2ggdG8gY2FsbCBvbiBhIGJhZCBoYW5kLiAKWW91J2xsIGJlIGFibGUgdG8gdXNlIHRoaXMgdG8geW91ciBhZHZhbnRhZ2UgYW5kIG1heGltaXNlIHlvdXIgcHJvZml0cyBieSBpbnZpdGluZyB0aGVtIHRvIGJldCBhZ2FpbnN0IHlvdXIgc3Ryb25nIGhhbmRzLi4gCkhvbGQgNSAxMCBzZWNvbmRzLCBhbmQgdGhlbiAicHVsbCIgeW91cnNlbGYgYmFjayB1cHJpZ2h0IHVzaW5nIHRoZSBmcm9udCBtdXNjbGVzIGJlbG93IHlvdXIgcmlicy4gCkkgdGFrZSBkcml2aW5nIHZlcnkgc2VyaW91c2x5LiAKU2hlIHdhc24ndCBldmVuIHBheWluZyBvdXQgb2YgcG9ja2V0ICAgc2hlIGp1c3QgaG9wZWQgd2UnZCBxdWl0IGNhbGxpbmcgc28gaGVyIHByZW1pdW0gd291bGRuJ3QgaW5jcmVhc2UuLiAKRWFjaCBzcHJpbmcsIGEgbmV3IGdyb3VwIG9mIHN0dWRlbnRzIGFyZSBjaG9zZW4gdG8gc2VydmUgZm9yIHRoaXJ0ZWVuIG1vbnRocyB0byB3b3JrIHdpdGggdGhlIENlbnRlciB0byBwbGFuIHRoZSB5ZWFyJ3MgYWdlbmRhIGFuZCBhdHRlbmQgcmVndWxhciBtZWV0aW5ncyB3aXRoIHN0YWZmIGFuZCBhZHZpc29ycy4gRmVsbG93cyBjb21lIGZyb20gYSB2YXJpZXR5IG9mIGNvbW11bml0eSBhbmQgbGVhZGVyc2hpcCBwZXJzcGVjdGl2ZXMgYXQgVUNMQSBhbmQgaW4gdGhlIExvcyBBbmdlbGVzIGNvbW11bml0eS4gClRoZSBtYW5hZ2VyIGp1c3QgdGVsbHMgdGhlbSB3aGljaCBwbGF5ZXJzIHRoZXkgd2FudC4gCllvdSdyZSBjb21wbGV0ZWx5IG1pc3NpbmcgdGhlIHBvaW50IG9mIHRoZWlyIGFyZ3VtZW50LiAKU28gSSB0dXJuZWQgYXJvdW5kLCB3ZW50IGRvd24gYSBjb3VwbGUgZmlnaHRzIG9mIHN0YWlycywgd2VudCB0byBteSBtYW5hZ2VyIGFuZCBzYWlkIGhlcmUgaXMgbXkgbm90aWNlLCBteSBsYXN0IGRheSB3aWxsIGJlIHRoZSBkYXkgYmVmb3JlIG15IHZhY2F0aW9uIHJlcXVlc3QuIApTZXJpb3VzbHkgdGhvdWdoLCBJJ3ZlIGJlZW4gcGxheWluZyB2aWRlb2dhbWVzIGZvciBhIGxhcmdlIHBhcnQgb2YgbXkgbGlmZS4gUHJpbWFyaWx5IE5pbnRlbmRvIERTIGdhbWVzLiAKSW4gdGhpcyByZXNwZWN0IHdlIG9uY2UgYWdhaW4gYXBwZWFsIHRvIHRoZSBCcml0aXNoIHB1YmxpYyBhbmQgaW4gcGFydGljdWxhciB0aGUgZmFtaWxpZXMgYW5kIGZyaWVuZHMgb2Ygc29sZGllcnMgd2hvIGhhdmUgZGllZCBvciBhcmUgY3VycmVudGx5IGludm9sdmVkIGluIEFmZ2hhbmlzdGFuIHRvIGVuZ2FnZSB3aXRoIHVzIGluIGFuIGhvbmVzdCBkaWFsb2d1ZS4gVGhlcmUgaXMgY29tbW9uIGdyb3VuZCBiZXR3ZWVuIHVzLiAKV2UgaGF2ZSBvcGVuIGNhcnJ5IGFzc2Fzc2luYXRpb25zIGdvaW5nIG9uIGFuZCBwZW9wbGUgZmlnaHQgZm9yIHRoZSByaWdodCB0byBjYXJyeSBhIHJpZmxlIG9uIHRoZWlyIHNob3VsZGVyIGJ1dCBub3QgZm9yIHRoZSByaWdodHMgb2YgYSB2ZXRlcmFuIHRvIHJpZGUgaGlzIGJpa2Ugb24gaGlzIG93biBjaXR5IHN0cmVldC4gCllvdXIgdmlzaW9uIGZvciB0aGUgYWdlbmN5IHdhcyBiZWF1dGlmdWwgYW5kIGluc3BpcmluZy4gWW91IGhhZCBhc3NlbWJsZWQgYSB0ZWFtIHF1aXRlIGNhcGFibGUgb2YgcmVhbGl6aW5nIHlvdXIgdmlzaW9uLCBhbmQgeW91IGxldCBpdCBhbGwgc2xpcCBhd2F5ICAgeW91IHdlcmUgdG9vIHNtYXJ0IHRvIGxpc3Rlbi4gWW91IHByZXRlbmRlZCB0byBsaXN0ZW4gYnV0IG5vdGhpbmcgZXZlciBjaGFuZ2VkLiBBdCBmaXJzdCwgSSB0aG91Z2h0IGl0IHdhcyBjb29sIHRoYXQgeW91IGFuZCB0aGUgbWFqb3JpdHkgb2YgeW91ciB0ZWFtIGhhZCBuZXZlciB3b3JrZWQgYXQgYW4gYWdlbmN5LCBidXQgdGhlbiByZWFsaXR5IHNldCBpbiAgIGFzIHNtYXJ0IGFzIHlvdSBhcmUsIHlvdSBoYWQgbm8gY2x1ZSBhYm91dCBjdWx0aXZhdGluZyBhbiBhdG1vc3BoZXJlIHdoZXJlIGNyZWF0aXZlIHNvbHV0aW9ucyBjYW4gZmxvdXJpc2guIE5vdCBvbmx5IGRpZCB5b3UgbGFjayBleHBlcmllbmNlLCB5b3UgaGVsZCBhZHZlcnRpc2luZyBpbiBkaXNkYWluIGJlY2F1c2UgeW91IHdlcmUgc21hcnRlciB0aGFuIGFkdmVydGlzaW5nIHBlb3BsZS4gWW91IGFjdHVhbGx5IHRvbGQgeW91ciBwZW9wbGUgdGhpcywgbm90IGNhcmluZyB0aGF0IG1vc3Qgb2YgdGhlbSB3ZXJlIGluIGZhY3QgYWR2ZXJ0aXNpbmcgcGVvcGxlLgpXZSBrbm93IHRoZSBLcmVlIGZvcm0gYSB0cmVhdHkgd2l0aCBYYW5kYXIsIHNvIHRoZWlyIHdhciBtb25nZXIgbmF0dXJlIGRyb3BzIG9mZiBzb21lLiAKV2hlbiB5b3UgZ2V0IHRvIGEgZmxvcCB3aXRoIHNldmVyYWwgY2FsbGVycyBvbiBhIHdldCBib2FyZCwgZXNwZWNpYWxseSBtb25vdG9uZSBsaWtlIHRoYXQsIHlvdSBhcmUgbm90IGZpc3QgcHVtcGluZywgZXZlbiB3aXRoIGEgc2V0IG9mIHF1ZWVucy4KQmUga2luZCBhbmQgY29tcGFzc2lvbmF0ZSB0byBlYWNoIG90aGVyIGZvcmdpdmluZyBlYWNoIG90aGVyIGp1c3QgYXMgQ2hyaXN0IGZvcmdhdmUgeW91LiBFcGhlc2lhbnMgNDozMV0gZG9uIGJyaW5nIHVwIHRoZSBwYXN0LiAKTGVzIGV4dHJhaXRzIGVuIGdyYXMsIHNvdWxpZ25zIG91IHN1cmxpZ25zIGwnb250IHQgcGFyIG5vcyBzb2lucyBwb3VyIG1ldHRyZSBlbiBleGVyZ3VlIGxlcyBsbWVudHMgaW1wb3J0YW50cy4KSW5pdGlhbCB2aXNpdCBkYXRhIGZyb20gMjMgQW1lcmljYW4gY2VudGVycyBwYXJ0aWNpcGF0aW5nIGluIHRoZSBOYXRpb25hbCBTcGluZSBOZXR3b3JrIGluY2x1ZGVkIGRlbW9ncmFwaGljIGluZm9ybWF0aW9uIGFuZCBTRiAzNiBiYXNlZCBoZWFsdGggc3RhdHVzLiBOYXZhbCBPYnNlcnZhdG9yeS4KV293LCBJIGp1c3Qgd2VudCB0byB0aGlzIGx5aW5nIGNvY2tzdWNrZXJzIHN0dXBpZCB3ZWJzaXRlIGFuZCByZWFkIHRoZSBhcnRpY2xlLiAKRHIgV2lsbW90IGNvbWJpbmVkIDE4IG9mIHRoZW0sIGNvdmVyaW5nIGFsbW9zdCA4MDAsMDAwIHBlb3BsZSwgaW4gMjAxMiBhbmQgY29uY2x1ZGVkIHRoYXQgdGhvc2UgaW5kaXZpZHVhbHMgd2hvIGFyZSBsZWFzdCBhY3RpdmUgaW4gdGhlaXIgbm9ybWFsIGRhaWx5IGxpdmVzIGFyZSB0d2ljZSBhcyBsaWtlbHkgdG8gZGV2ZWxvcCBkaWFiZXRlcyBhcyB0aG9zZSB3aG8gYXJlIG1vc3QgYWN0aXZlLgpPbmUgb2YgaGlzIGZpcnN0IGNoYWxsZW5nZXMgd2FzIHRvIGRlY2lkZSB3aGV0aGVyIHRvIGZyYW5jaGlzZSBvciBncm93IHRocm91Z2ggY29ycG9yYXRlIGV4cGFuc2lvbi4gCiJEZXNwaXRlIGJlaW5nIHN1YmplY3RlZCB0byBhbm51YWwgYXVkaXRzLCB0aGlzIGFwcGVhcnMgdG8gYmUgYW4gZWZmb3J0IGJ5IHRoZSBnb3Zlcm5tZW50IHRvIHNjcnV0aW5pemUgZXZlcnkgYXNwZWN0IG9mIExvY2FsIDk4LCIgaGUgc2FpZC4KUG9rZXIgZGV2ZWxvcGVkIGh1bmRyZWRzIG9mIHllYXJzIGFnbywgYW5kIHN0cmlwIHBva2VyIG9yaWdpbmF0ZWQgZnJvbSB0aGUgYmFzaWMgZ2FtZSBvZiBwb2tlci4gQmVjYXVzZSBwb2tlciBlbmFibGVzIG9uZSB0byB3aW4gd2hpbGUgb3RoZXJzIGFyZSBsb3NpbmcsIHRoZSBsb3NlcnMgdGhlbiBjYW4gYmV0IHRoZWlyIGNsb3RoaW5nLiBUaGlzIGlzIHRvIHRha2UgYmFjayB0aGVpciBjYXNoIGZyb20gdGhlIHdpbm5pbmcgb3Bwb25lbnQuIApJbiAyMSAoQmxhY2tqYWNrKSwgdGhlIGhvdXNlIGVkZ2UgaXMgY29uc2lkZXJlZCB0byBiZSAyJSwgYnV0IHRoaXMgbnVtYmVyIHZhcmllcyBncmVhdGx5IGRlcGVuZGluZyBvbiBob3cgeW91IHBsYXkgdGhlIGdhbWUsIGFuZCB1bmRlciB3aGF0IGNvbmRpdGlvbnMgeW91IHBsYXkuIElmIHlvdSBwbGF5IHBlcmZlY3QgYmFzaWMgc3RyYXRlZ3ksIGFuZCB0aGUgY2FzaW5vIG9mZmVycyBydWxlcyB0aGF0IGJlbmVmaXQgdGhlIHBsYXllciwgeW91IGNhbiBicmluZyB0aGUgaG91c2UgZWRnZSBtdWNoIGxvd2VyIChiZXR3ZWVuIC4xOCBhbmQgLjk1ICUpLiBOb25lIG9mIHRoaXMgdGFrZXMgaW50byBhY2NvdW50IGNhcmQgY291bnRpbmcsIHdoaWNoIGlzIHByb2ZpdGFibGUgaWYgeW91IGtub3cgaG93IHRvIGRvIGl0IChwcm9wZXIgY2FyZCBjb3VudGluZyBhY3R1YWxseSBzd2luZ3MgdGhlIGFkdmFudGFnZSB0byB0aGUgcGxheWVyKSwgYnV0IHRoZSBjYXNpbm9zIGFyZSB3YXRjaGluZyBmb3IgaXQsIGFuZCB0aGV5IHdpbGwgYXNrIHlvdSB0byBsZWF2ZSBpZiB5b3UgZG8uLiAKSWYgeW91IGFyZSBuZXcgb24gdGhlIHBva2VyIHRhYmxlIGFuZCB3YW50IHRvIGJlIG1vcmUgcHJvZmVzc2lvbmFsIHRvIGRlZmVhdCBhbGwgeW91ciBjb250ZW5kZXJzLCBhIGJvb2sgb24gcG9rZXIgY2FuIG9ubHkgYmUgeW91ciBiZXN0IGZyaWVuZC4gQSBib29rIHdpbGwgaGVscCB5b3UgbGlrZSBhIG1lbnRvciwgbGlrZSBhIGZyaWVuZC4gClRoZSB0aGlyZCBiZXN0IGhhbmQgaXMgZm91ciBvZiBhIGtpbmQuIApBdCBhIHBhcnR5IGluIDIwMDggb3IgMjAwOSwgYSByYW5kb20gZ3V5IHdobyBhcHBhcmVudGx5IGhhZCBhIGNvdXNpbiB3aG8gd29ya2VkIGluIEhvbGx5d29vZCB0b2xkIG1lIGhlIGtuZXcgYSBsb3Qgb2YgY2VsZWJyaXR5IHNlY3JldHMuIApPdXRjb21lczogUm9sYW5kIE1vcnJpcyBEaXNhYmlsaXR5IFF1ZXN0aW9ubmFpcmUgKFJEUSkgYmFzZWxpbmUgYXQgMTYgd2tzICh0aGUgZW5kIG9mIHRoZSBhY3V0ZSBwaGFzZSksIDggMjQgd2tzLiBTaG9ydCBGb3JtIDM2IGJvZGlseSBwYWluIHNjYWxlIChCUCkgcGh5c2ljYWwgZnVuY3Rpb25pbmcgc2NhbGUgKFBGKSBzY29yZXMgYXQgOCwgMTYsIDI0IHdrcy4KUXVlc3Rpb25zIGxpa2UgdGhpcyByZWFsbHkgY29uZnVzZSBtZSBiZWNhdXNlIG9mIGNvdXJzZSB0aGF0IHdoYXQgSSBkby4gSSBkb24ga25vdyBvZiBhbm90aGVyIHdheSB0byByZWFkLiBHcmFudGVkLCB3aGVuIEkgYW0gbmV3IHRvIGEgbGFuZ3VhZ2UgaXQgY2x1bmt5IGF0IGZpcnN0LiBJIGRvbiB0cmFuc2xhdGUgdW5sZXNzIEkgZG9uIGtub3cgb3IgZG9uIHJlbWVtYmVyIGEgd29yZC4KTW9yZSBBcnRpY2xlcyBDYXNpbm9zIHdpdGggU2xvdCBUb3VybmFtZW50cyBpbiBMYXMgVmVnYXMgQ2FzaW5vIFN0cmlwIFJlc29ydHMgYW5kIFBsYWNlcyB0byBTdGF5IGluIFR1bmljYSwgTVMgSG93IHRvIEdldCBGcmVlIFNob3cgVGlja2V0cyBpbiBMYXMgVmVnYXMgSG93IHRvIEZpbmQgSG90ZWwgUHJvbW90aW9ucyBmb3IgTGFzIFZlZ2FzIEJ1Y2t5J3MgQXJpem9uYSBIb3RlbCBDYXNpbm8gTWFuZGFsYXkgQmF5IENhc2lubyBJbnNpZGVyIFRpcHMKJyBXaGVuIGhlIGlzIHJlbGVhc2VkIGZyb20gc2VydmljZSwgcHJvYmFibHkgaW4gRmVicnVhcnksIEx0LiBTY2hsZWlzbmVyIHBsYW5zIHRvIHJldHVybiB0byB0aGUgdW5pdmVyc2l0eSB0byBjb21wbGV0ZSB0aGUgbGF3IGNvdXJzZSBoZSBzdGFpcnRlZC4gSGlzIGFkZHJlc3MgaXMgMjQxIFBvcnQgQ28uLCBQb3J0IG9mIFdoaXR0aWVyLCBBbGFza2EuIEdyYW5kbW90aGVyIFN1ZXMgQWZ0ZXIgUG9rZXIgR2FtZSBMT1MgQU5HRUxFUy4gVyBBIHBva2VyIHBsYXlpbmcgZ3JhbmRtb3RoZXIgaGFzIGZpbGVkIGEgJDEwMCwwNjAgZGFtYWdlIHN1aXQgYWdhaW5zdCBhbiBhY2NvdW50YW50LCBjaGFyZ2luZyBzaGUgd29uIGEgcG9rZXIgaGFuZCBmcm9tIGhpbSBidWk6IGNhbWUgb3V0IHNlY29uZCBiZXN0IGluIGFuIGFyZ3VtZW50IHRoYXQgZm9sbG93ZWQuIAooRnVsbCBBbnN3ZXIpLiAKQXdmdWwganVzdCBhd2Z1bCwgaSBob3BlIHRoZSBidWxscyBmaWdodCBiYWNrIGFzIGhhcmQgYXMgdGhleSBjb3VsZCBiZWZvcmUgdGhleSBwZXJpc2ggYW5kIGdldCBhcyBtYW55IG9mIHRoZXNlIGR1bWIgYXBlcyBhcyBwb3NzaWJsZSwgbXkgbGFzdCBjb21tZW50IGZyb20gdGhlIEJJRyBwaWN0dXJlIGlzIGEgQklHIG1pZGRsZSBmaW5nZXIgdG8gU3BhaW4uLiAKU2hvdyB5b3Vyc2VsZiBzb21lIHdlbGwgZWFybmVkIGxvdmUgd2l0aCBhIGZ1bGwgb24gcGFtcGVyaW5nIHNlc3Npb24gICBpbmNsdWRpbmcgZmFjaWFscyBhbmQgbWFuaWN1cmVzLgpCb3VnaG5lciB3YWl0cyBhIGJlYXQsIHRoZW4gdHdvLiAKKFdlIGtub3cgaXQncyBwcmljZXksIGJ1dCBsb29rIGF0IHRoZSBxdWFsaXR5ISkiIGFyZSBhd2FyZSB0aGF0IGl0IGlzbid0IGEgY2hlYXAgYm9vay4gCk1hbnkgc3R1ZGVudCBjb2RlcyAoSSBzdXNwZWN0IGV2ZW4gYSBtYWpvcml0eSwgYnV0IEkgY2FuIHNheSB0aGF0IHdpdGhvdXQgaGF2aW5nIHJlYWQgdGhlbSkgbWFrZSBpdCBjbGVhciB0aGF0IGNvbmR1Y3QgdmlvbGF0aW9ucyB3aGlsZSBlbnJvbGxlZCBhcmUgcHVuaXNoYWJsZSBhdCBhbnkgcG9pbnQgaW4gdGhlIGZ1dHVyZSBzdWJqZWN0IHRvIHRoZSB0ZXJtcyBvZiB0aGUgY29kZSBpdHNlbGYuIFRoZXJlIGlzIG5vIHN0YXR1dGUgb2YgbGltaXRhdGlvbnMgb24gU3R1ZGVudCBDb25kdWN0IHZpb2xhdGlvbnMuIElmIGEgdmlvbGF0aW9uIG9jY3VycyB0aGF0IGlzIHB1bmlzaGFibGUgYnkgZXhwdWxzaW9uIG9yIG90aGVyIHJlbW92YWwgZnJvbSB0aGUgdW5pdmVyc2l0eSBvciByZWdpc3RyYXRpb24sIHN1YnNlcXVlbnQgYWNhZGVtaWMgcHJvZ3Jlc3MgYW5kIGNyZWRpdCBob3VycyBhcmUgbm90IHJlY29nbml6ZWQgYnkgdGhvc2UgdW5pdmVyc2l0aWVzLiAKVm9uIGRlbiA1MDAgTWlvLiAKQnV0IEkgZ2xhZCB0aGF0LCB0byB0aGUgcGVvcGxlIGludm9sdmVkIHdpdGhpbiB0aGUgbGVnYWwgZmllbGQgaW4gdGhlIFVTQSwgaXQgbm90IGdvaW5nIHRvIGhvbGQgbXVjaCB3ZWlnaHQuIApUaGUgYmlvbG9naWNhbCBlZmZlY3RzIG9mIG1hZ25lc2l1bSBhcmUgd2lkZXNwcmVhZC4gClBlb3BsZSBsb3ZlIHBva2VyIGFuZCB0aGV5IGxvdmUgdG8gZ2FtYmxlLiAoVGhhdCBkb2VzIG5vdCBpbmNsdWRlIG1lOyBJIGhhdmUgbm8gaW50ZXJlc3QgaW4gZWl0aGVyLCBnaXZlbiB0aGF0IGdhbWJsaW5nIGltcGxpZXMgYSBuZWdhdGl2ZSByZXR1cm4gb24gaW52ZXN0bWVudC4gClNhbWUgZm9yIHVzISBJIGdldCBzaG9ydCB0ZXJtIGRpc2FiaWxpdHkgcGF5IHVudGlsIEknbSBtZWRpY2FsbHkgY2xlYXJlZCB0byByZXR1cm4sIGFuZCBoYXZlIHRvIHVzZSBQVE8gb3IgdGFrZSB0aW1lIHVucGFpZCBmb3IgdGhlIHJlc3Qgb2YgRk1MQS4gTWF4IEkgY2FuIHRha2UgaXMgMTIgd2Vla3MgYnV0IEknbGwgcHJvYmFibHkgZ28gYmFjayBhZnRlciB0aGUgbmV3IHllYXIsIGhvd2V2ZXIgbWFueSB3ZWVrcyB0aGF0IGVuZHMgdXAgYmVpbmcuLiAKVGhlaXIgY29tbWVudCByZWVrcyBvZiBhbHQgcmlnaHQgb3V0cmFnZSB0YWxraW5nIHBvaW50cy4uIApUaGVuIHNoZSBhc2tzIHRvIGJlIHBldHRlZCBzcGVjaWZpY2FsbHkgb24gdGhhdCBzcG90IG9uIGhlciBiYWNrIGNhdHMgbG92ZSBzbyBtdWNoLCBhbmQgdGhlbiBydWJzIGhlciBmYWNlIGFuZCB0YWlsIGFnYWluc3QgaGltLiBTbyBiYXNpY2FsbHkgYWxsIHRoZSBzY2VudCBnbGFuZHMuLiAKIkl0IGNvdWxkIGJlIEJyaW5rcyBvciBzb21lYm9keS4gSSdtIG5vdCBzdXJlIHRoZXkncmUgaW4gdGhhdCBidXNpbmVzcywiIHNoZSBzYWlkLCBzcGFya2luZyBtdXRlZCBsYXVnaHRlciBpbiB0aGUgY291cnQuCkkgc3VnZ2VzdCBsb29raW5nIGZvciBhIGxpc3Qgb2YgcXVlc3Rpb25zIHRvIGFzayB5b3Vyc2VsZiBhYm91dCB5b3VyIHN0b3J5LiBUaGlzIGV4ZXJjaXNlIHdpbGwgaGVscCBwYWludCB0aGUgcGljdHVyZSBhbmQgaGVscCBmaWxsIGluIGFsbCBvZiB0aGUgY3JhY2tzIHlvdSBtYXkgbm90IGhhdmUgY29uc2lkZXJlZCBpbiB5b3VyIGNvbmNlcHQuClRoZSBhbW91bnQgb2YgdGltZSBpdCB0YWtlIHlvdSB0byBraWxsIGNvdmVuIGlzIGhhcmQgdG8gcHJlZGljdC4gQXQgdGhpcyBsZXZlbCBvZiBnZWFyIHlvdXIgY29tcG9zaXRpb24gZG9lc24gcmVhbGx5IG1hdHRlci4gCkl0IGlzIGltcG9ydGFudCB0byByZWFkIGFsbCB0aGUgaW5mb3JtYXRpb24gYWJvdXQgbWFzc2FnZSB0b29scyBzbyB0aGF0IHlvdSBjYW4gbG9jYXRlIHRoZSBvbmVzIHRoYXQgd2lsbCBnaXZlIHlvdSB0aGUgbW9zdCByZWxpZWYuIApZb3VyIGxvY2FsIGxhd3MgbWF5IGRpZmZlci4uIApJbiBteSBmaXJzdCBwbGF5dGhyb3VnaCwgSSBkaWRuIHNlZSBNYXJrdXMgYXMgdmlvbGVudCwgYmVjYXVzZSBvZiBoaXMgcmVsYXRpb25zaGlwIHdpdGggQ2FybC4gSSBwbGF5ZWQgcGVhY2VmdWxseSBhdCBmaXJzdC4gQnV0IGFsb25nIHRoZSB3YXkgSSBsb3N0IGZhaXRoIGluIGh1bWFuaXR5LCBhbmQgSSBsb3N0IGhvcGUsIHNvIGV2ZW50dWFsbHkgSSBjaG9zZSB3YXIuCk5vdGUgdGhhdCB5b3UgY2FuJ3QgbWFrZSBhIHNtYWxsZXIgYmV0IHRoYW4gdGhlIGJpZyBibGluZC4gRnVydGhlcm1vcmUsIGFsbCByYWlzZXMgbXVzdCBiZSBkb25lIGluIGluY3JlbWVudHMgb2YgdGhlIGJldHRpbmcgYW1vdW50cy4KKE1leGljYW4vQXNpYW4gZnVzaW9uLCBkcmVzc2VkIHVwIGJ1cmdlcnMgYW5kIGJvb3p5IG1pbGtzaGFrZXMsIGRlbGljaW91cyBtb2Rlcm4gaXRhbGlhbiBwbGFjZSBjYWxsZWQgU2NhcnBldHRhLCBhbG9uZyB3aXRoIGEgZmV3IG90aGVycykuIApNb3N0IGNoaWxkcmVuIGluIEFtZXJpY2EgZ3JldyB1cCB3aXRoIGRpZmZlcmVudCBraW5kcyBvZiBjb2xvcmVkIGNoaXBzLiBUaGlzIGNvbG9yZWQgY2hpcHMgcmVwcmVzZW50cyBtb25leSBpbiB0aGUgY2FzaW5vcy4gRm9yIGV4YW1wbGUsIGEgcGxheWVyIHdobyB3YW50cyB0byBwbGF5IHBva2VyIGhhcyB0byBidXkgc29tZSBjaGlwcyB0byBiZSB1c2VkIHdoZW4gYmV0dGluZy4gQW5kIGJlY2F1c2UgdGhpcyBpcyB0aGUga2luZCBvZiBtb25leSB0aGF0IGlzIGJlaW5nIHVzZWQgZHVyaW5nIGEgZ2FtZSBpbiB0aGUgY2FzaW5vLCBwYXJ0aWN1bGFybHkgcG9rZXIsIG90aGVycyBldmVudHVhbGx5IGNhbGwgaXQgcG9rZXIgbW9uZXkuCkJ1dCwgdGhlIG1vc3QgcHJldmFsZW50IGFyZSB0aGUgbWFzc2FnZSBwYXJsb3JzLCAiQW5tYSIgd2hpY2ggYXJlIG1hc3NhZ2UgcGFybG9ycyBvbiBzdGVyb2lkcyAocHJpdmF0ZSByb29tcywgamFjdXp6aSwgdmVyeSBhdHRyYWN0aXZlIGdpcmwpLCBhbmQgcmVkIGxpZ2h0IGRpc3RyaWN0cy5JIGhvbmVzdGx5IHdvdWxkbiBtaW5kIGdvaW5nIHRvIHRoZSBtYXNzYWdlIHBhcmxvcnMgYnV0IHRoZSBmYWN0IGlzLCBpdCB1c3VhbGx5IGdvaW5nIHRvIGJlIHNvbWUgd29tYW4gb3ZlciAzNSBhbmQgeW91IEtOT1cgdGhhdCB0aGVyZSBhIHNhZCBzdG9yeSBiZWhpbmQgaXQsIHNvIHRoZSB3aG9sZSB0aGluZyBpcyBqdXN0IGEgdHVybiBvZmYuTXkgbG9uZyB0ZXJtIHBsYW4gaXMgdG8gbGVhcm4gYSB0cmFkZSBhbmQgZ2V0IGFzIGZhciBhd2F5IGZyb20gd29ya2luZyBpbiBhbiBvZmZpY2UgYXMgcG9zc2libGUuIApBbmQgcHVibGljIGRpc2NvdXJzZSwgd2lsbCBldmVudHVhbGx5LCBjYXRjaCB1cCB0byB0aGVtIGFsbC4gSXQganVzdCB0YWtlcyB0aW1lLiBDb21wdWxzb3J5IHZvdGluZyBidXlzIHRpbWUgdG8gd29yayB0aHJvdWdoIHRoZXNlIGlzc3VlcywgYnkgY3VyYmluZyB0aG9zZSB3aG8gd2FudCB0aGVpciBpZGVhcyBlbmFjdGVkIHJpZ2h0IG5vdy4KSGUgb3JpZ2luYWxseSBmYWNlZCBtdWx0aXBsZSBjaGFyZ2VzIG9mIGFzc2F1bHQsIGJyZWFraW5nIGFuZCBlbnRlcmluZywgZHJ1ZyBwb3NzZXNzaW9uIGFuZCBudW1lcm91cyBjb3VudHMgb2YgZGlzcXVhbGlmaWVkIGRyaXZpbmcgYW5kIHBvc3Nlc3Npb24gb2Ygc3RvbGVuIHZlaGljbGVzIGFzIHRoZSBjYXNlIHdlbmRlZCBpdHMgd2F5IHRocm91Z2ggdGhlIGNvdXJ0cy4KVGhlIG9wcG9zaXRpb24gbGFiZWxsZWQgdGhlIGN1dCBhIHNoYW0sIHNheWluZyB0aGUgbnVtYmVyIG9mIG1hY2hpbmVzIGluIG9wZXJhdGlvbiB3YXMgYWJvdXQgOTgsMDAwLiAKSSByZWFsbHkgaGFwcHkgd2l0aCBob3cgdGhpbmdzIGVuZC4gS3VkZWxpYSBkcmVhbXMgY29tZSB0cnVlLCB0aGUgVEsgZ2FuZyBhbGwgZ2V0IHRvIGxlYWQgcmVhbCBsaXZlcywgTm9ibGlzcyBnZXRzIHNtb2tlZCBvbiB0aGUgdG9pbGV0LCBhbmQgS3VkZWxpYSBBdHJhIGdldCB0byBiZSBoYXBweSB0b2dldGhlciByYWlzaW5nIHRoZWlyIGhhcmVtIGxpdmUgY2hpbGQuIEZvciBhbGwgdGhlIHBhaW4gYW5kIHN1ZmZlcmluZyB0aGF0IG9jY3VycmVkIGluIHRoZSBzZXJpZXMsIHRoaW5ncyBlbmRlZCBvbiBhIGZpdHRpbmdseSBwb3NpdGl2ZSBub3RlLiAKSGUgc2FpZCBhYm91dCBvbmUgcGVyIGNlbnQgb2YgdGhlIGFkdWx0IHBvcHVsYXRpb24gaGFkIGEgc2VyaW91cyBnYW1ibGluZyBwcm9ibGVtLCBhbmQgYWJvdXQgMTAgcGVyIGNlbnQgb2YgcGVvcGxlIGV4cGVyaWVuY2VkIGxvdyB0byBtZWRpdW0gbGV2ZWxzIG9mIGhhcm0gZnJvbSBnYW1ibGluZy4gTXIgUm9zZXdhcm5lIHNhaWQgdGhlIGZvY3VzIG9mIEdhdGV3YXkgSGVhbHRoIGluIHJlY2VudCB5ZWFycyBoYWQgc2hpZnRlZCB0byB0aG9zZSB3aG8gZXhwZXJpZW5jZSBzb21lIGhhcm0gZnJvbSBnYW1ibGluZyBpbiBhIGJpZCB0byBtYWtlIHN1cmUgdGhlIGlzc3VlIGRpZG4gYmVjb21lIGEgbWFqb3IgcHJvYmxlbSBmb3IgdGhlbS4gClRoZXkgc2VuZCB0aGUgU2VjcmV0YXJ5IG9mIHRoZSBUcmVhc3VyeSB0byBpbnRlcnZlbmUuIApTaGUncyBoYWQgc29tZSBoYXJkIHRoaW5ncyB0byBkZWFsIHdpdGggd2l0aCBoZXIgcHJlZ25hbmNpZXMuY29uc3RhbnRyZWFkZXI1NSAgMTMgcG9pbnRzICBzdWJtaXR0ZWQgMjYgZGF5cyBhZ29JIHRoaW5rIHRoZW0gaGF2aW5nIGEgbmFubnkgaXMgY29tcGxldGVseSByaWRpY3Vsb3VzLiBUaGV5IGFyZSB0d28gYWR1bHRzIHdobyBkb24gd29yaywgdGhleSBzaG91bGQgYmUgYWJsZSB0byB0YWtlIGNhcmUgb2YgYSBiYWJ5IGJ5IHRoZW1zZWx2ZXMuIEkgYWxsIGZvciB0aGVtIGhpcmluZyBzb21lb25lIGhpZ2ggcXVhbGl0eSBmb3IgZGF0ZSBuaWdodHMsIGJ1dCBtb3JlIG9mdGVuIHRoYW4gbm90IHdlIGFyZSBzZWVpbmcgdGhlbSB3aXRob3V0IEphbWVzIGZvciBubyByZWFzb24gYXQgYWxsLiAKVGhpcyBpc24ndCBteSB3b3JrcGxhY2Ugd2hlcmUgSSBhbSBwYWlkIGZvciBteSBhdHRlbmRhbmNlLCBJIHBhaWQgZm9yIG15IGVkdWNhdGlvbiBhbmQgaWYgSSB3YW50IHRvIG1pc3Mgb3V0IG9uIHRpbWUgSSBwYWlkIGZvciwgdGhhdCBpcyB1cCB0byBtZS4gSWYgSSBmYWlsIHRvIGtlZXAgdXAgaW4gdGhlIGNsYXNzIGFzIGEgcmVzdWx0LCBzbyBiZSBpdCwgYnV0IGlmIEkgYW0gZG9pbmcgdGhlIGhvbWV3b3JrIGFuZCBwYXNzaW5nIHRoZSBxdWl6emVzIGFuZCB0ZXN0cywgaXQncyBteSBvd24gZGFtbmVkIHByZXJvZ2F0aXZlIHRvIHNob3cgdXAgd2hlbmV2ZXIgSSBwbGVhc2UuIElmIHlvdSBwYXkgbWUgdG8gYXR0ZW5kIGNsYXNzIG9yIEkgYW0gYXR0ZW5kaW5nIGZyZWUgY2xhc3NlcywgZmluZSwgcGVuYWxpemUgbWUgZm9yIG15IHRhcmRpbmVzcy4gClRvIHRob3NlIG9mIHlvdSBmb25kIG9mIHJlYWRpbmcgc2lnbnMsIHdlIHdvdWxkIHBvaW50IHRvIHRoZSBzb2xpdGFyeSBnb2xkZW4gY3Jvc3Mgc3RpbGwgZ2xlYW1pbmcgYWxvZnQgb24gdGhlIHN1bW1pdCBvZiB0aGUgQ2hyaXN0aWFuIGNodXJjaCBpbiBEZWxoaSwgd2hvbGUgYW5kIHVudG91Y2hlZDsgdGhvdWdoIHRoZSBiYWxsIG9uIHdoaWNoIGl0IHJlc3RzIGlzIHJpZGRsZWQgd2l0aCBzaG90cyBkZWxpYmVyYXRlbHkgZmlyZWQgYnkgdGhlIG11dGlub3VzIGluZmlkZWxzIG9mIHRoZSB0b3duLiBUaGUgY3Jvc3Mgc3ltYm9saWNhbGx5IHRyaXVtcGhhbnQgb3ZlciBhIHNoYXR0ZXJlZCBnbG9iZSEgSG93IHRoZSB3aXNkb20gYW5kIGhlcm9pc20gb2Ygb3VyIEVuZ2xpc2ggc29sZGllcnMgc2VlbSBsaWtlIG1lcmUgZHJvc3MgYmVmb3JlIHRoZSBtYW5pZmVzdCBhbmQgd29uZHJvdXMgaW50ZXJwb3NpdGlvbiBvZiBBbG1pZ2h0eSBHb2QgaW4gdGhlIGNhdXNlIG9mIENocmlzdGlhbml0eSEgKEFjY291bnQgcHJpbnRlZCBpbiBSZXphIEFzbGFuIE5vIGdvZCBidXQgR29kOiBUaGUgT3JpZ2lucywgRXZvbHV0aW9uLCBhbmQgRnV0dXJlIG9mIElzbGFtLCAyMjYgMjI3KS4uIApPZiBjb3Vyc2UgdGhpcyBhcHByb2FjaCBjYW5ub3QgYmUgZm9sbG93ZWQgYmxpbmRseSBhbmQgcmVxdWlyZXMgdGhlIHVuZGVyc3RhbmRpbmcgdG8ga25vdyB3aGVuIHRvIHJlaWduIGl0IGJhY2sgb3IgYWJhbmRvbiB0aGUgc3lzdGVtIGFsbCB0b2dldGhlci4gVGhlIHNpdHVhdGlvbiBpdHNlbGYgYW5kIHByb2Zlc3Npb25hbCBqdWRnZW1lbnQgYWx3YXlzIHRha2VzIHByZWNlZGVuY2Ugb3ZlciBhIHByZSBzY3JpcHRlZCByb3V0aW5lIGJ1dCBzdGlsbCB0aGUgZXhpc3RlbmNlIG9mIHRoZSByb3V0aW5lIGRvZXMgaXQgam9iIHRvIGVuY291cmFnZSBhIHZhcmllZCBtaW5kc2V0IGFuZCBhIHZhcmllZCBwbGF5IHN0eWxlLi4gCkkgZG9uIGtub3cgd2h5IG9yIGhvdyBidXQgdGhlIHR3byB0b2dldGhlciBnaXZlIGEgZmFudGFzdGljIGFsbW9zdCBtYW5pYyBldXBob3JpYS9lbmVyZ3kgdGhhdCBJIGNvbXBhcmUgSSBndWVzcyB0byBoeWRyb2NvZG9uZSB3aXRob3V0IHRoZSBub2QuIEkgZGlzY292ZXJlZCB0aGlzIHRvdGFsbHkgYnkgYWNjaWRlbnQuIApNb3N0IEZpbGlwaW5hIHByb3N0aXR1dGVzIGFyZSBwbGVhc2FudCwganVzdCB0aGUgc2FtZSBhcyBub3JtYWwgZ2lybHMgaW4gdGVybXMgb2YgYXR0aXR1ZGUgYW5kIGhvdyB0aGV5IGludGVyYWN0IHdpdGggeW91LiBJIGFtIGFuIGVsaXRlLCB5b3VuZywgYmVhdXRpZnVsLCBpbmRlcGVuZGVudCBjb21wYW5pb24sIHdobyBwcm92aWRlcyB1cHNjYWxlIGNvbXBhbmlvbnNoaXAgdG8gYWZmbHVlbnQsIGdlbmVyb3VzIGdlbnRsZW1lbi4gSSBoYXZlIHNldmVyYWwgZXhvdGljIGV0aG5pYyBvcmlnaW5zLiAKVmVnYW5LaWxsYWggIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGhvdXJzIGFnbwpUaGVpciBjZWxsIGJvZGllcyBsaWUgaW4gdGhlIGRvcnNhbCByb290IGdhbmdsaWEgb2YgcGVyaXBoZXJhbCBuZXJ2ZXMganVzdCBpbnNpZGUgdGhlIHNwaW5lLiAKRHJpbmtpbmcgbWlsazogQSBDcmlwIHRlcm0gZm9yIHRhcmdldGluZyBvciBraWxsaW5nIGEgcml2YWwsIHN0b2xlbiBmcm9tIHRoZSBCbG9vZHMgaW4gdGhlIDE5OTBzLCB3aGVuIGphaWxlZCBCbG9vZCBtZW1iZXJzIGRldmlzZWQgYSB3YXkgdG8gZGlzcmVzcGVjdCBvdGhlcnMgaW4gcHJpc29uIGJ5IHN0ZWFsaW5nIGZvb2Qgb2ZmIHRoZWlyIHRyYXkgb3IgZHJpbmtpbmcgdGhlaXIgbWlsay4gSXQncyBub3cgdXNlZCB3aWRlbHkgYnkgdmFyaW91cyBnYW5ncy4KV2l0aCBtb3JlIGNoYW5uZWxzIG9uIGFpciB0aGFuIGFydGljdWxhdGUgYW5jaG9ycyBhbmQgJ3BlcnNvbmFsaXRpZXMnLCB0YWxrIHNob3dzIGFyZSBzY3JhbWJsaW5nIHRvIGdldCBqdXN0IGFib3V0IGFueW9uZSB0byBnaXZlIHRoZWlyIHZpZXdzIG9uIHRoZSBjdXJyZW50IHBvbGl0aWNhbCB0dXJtb2lsLiBTaW5jZSB0aGUgcnVsaW5nIFBNTCBRIHJlcHJlc2VudGF0aXZlcyBoYXZlIGdvbmUgaW50byBwdXJkYWgsIHRoZSBjaGFubmVscyBoYXZlIHRvIG1ha2UgZG8gd2l0aCAnYW5hbHlzdHMnIHdobyBhbGwgc3RhcnQgdGhlaXIgc2VudGVuY2VzIHdpdGggIldlbGwgYWN0dWFsbHkgSSB0aGluayIsIGFuZCB0aGF0J3MgdGhlIGN1ZSB0byBzd2l0Y2ggdGhlIGNoYW5uZWwuIApJIGhhZCBncmFuZHBhcmVudHMgd2l0aCBkZW1lbnRpYSBhbmQgdGhhdCBpcyBub3QgaG93IEkgd2FudCB0byBnby4uIApNaWNoYWVsIFNhYmlhLCBjaGllZiBleGVjdXRpdmUgb2YgdGhlIENhaXNzZSwgaGFzIHZvd2VkIHRvIGEgcm9jayBmb3IgdGhlIGNvbXBhbnkgYW5kIG9ic2VydmVycyB0YWtlIGhpbSBhdCBoaXMgd29yZDogT3ZlciB0aGUgcGFzdCB5ZWFyLCB0aGUgQ2Fpc3NlIGhhcyBib29zdGVkIGl0cyBzdGFrZSBmcm9tIDE0IHBlciBjZW50IHRvIDIwIHBlciBjZW50LiBIaXN0b3J5IGFsc28gZGljdGF0ZXMgdGhhdCBpdCBpcyBwcmVwYXJlZCB0byBzdGVwIGluIHRvIHNob3JlIHVwIFF1ZWJlYyBmaXJtcy4gCkFuZCBpZiB5b3VyIGZsZWV0IGdldHMgZGVzdHJveWVkIG5leHQgUm91bmQgaW0gYSBjb3VudGVyYXR0YWNrLCBJVCBET0VTTiBNQVRURVIuIApUaGVyZSdzIGFsc28gbXVzY3VsYXIgZW5kdXJhbmNlLi4gClNpdHRpbmcgYXQgbXkgc2hpdHR5IGRlc2sgY2hhaXIsIEkgZ3JhYmJlZCBteSBhbmQgaW5zdGVhZCBvZiBwaWNraW5nIHVwIHdoZXJlIEkgbGVmdCBvZmYsIEkgd2FzIGp1c3QgZmxpcHBpbmcgdGhyb3VnaCB0aGUgcGFnZXMuIE1vc3QgYmFiaWVzLiAKUGxheWluZyBDYXJkcyBTb290aCBTYXllciAgSXQgaXMgYSBtYWNoaW5lIHRoYXQgcmVwb3J0cyB0aGUgY29kZSBhbmQgc3VpdCBvZiBldmVyeSBjYXJkIGluIHRoZSBmcmFjdGlvbnMgb2YgdGltZS4sIHRoaXMgd2lsbCBoZWxwIHRoZSB1c2VyIHRvIGtub3cgdGhlIGNvZGUgYW5kIGFjY29yZGluZyB0byBpdCBoZSBjYW4gcGxheSB0aGUgZ2FtZSBpbiBvcmRlciB0byB3aW4gaXQuIApWYW5jb3V2ZXIgQ2FudWNrcyBOZXdzLCBTY29yZXMsIFN0YXR1cywgU2NoZWR1bGUKMjAxOSBzJ2Fubm9uY2UgdW5lIGFubmUgZGUgdHJhdmF1eCBldCBkZSBjaGFuZ2VtZW50cyBwb3VyIG5vcyBxdWFydGllcnMuIEQnYWJvcmQgYXZlYyBsYSAgcXVpIHZhIHByZW5kcmUgZm9ybWUsIGV0IHF1aSBpbGx1bWluZXJhIGRzb3JtYWlzIG5vcyBzb2lyZXMgZ3JjZSAgdW5lIG1pc2UgZW4gdmFsZXVyIGR1IHZpYWR1YyBwYXIgbGEgbHVtaXJlLiBQbHVzaWV1cnMgYXV0cmVzIGNoYW50aWVycyB2b250IGltcGFjdGVyIG5vcyBxdWFydGllcnMuIEN0IDEwZSwgYXZlYyBsJ2F2YW5jZSBkdSBjaGFudGllciBkdSBOb3V2ZWF1IExhcmlib2lzaXJlIGV0IGxlIGNoYW50aWVyIGRlIGxhIEdhcmUgZHUgTm9yZCAyMDIwIHF1aSBzJ2Fubm9uY2UuIEN0IDE4ZSwgY2Ugc29udCBsZXMgcnVlcyBNeXJoYSBldCBMb24gcXVpIHZvbnQgc2Ugdm9pciByaGFiaWxpdGVyLCBtYWlzIGdhbGVtZW50IGxhIHJ1ZSBkZSBsYSBHb3V0dGUgZCdPciwgZXQsIG5vdXMgbCdlc3Byb25zLCBsZSBjb21tZW5jZW1lbnQgZGVzIGNoYW50aWVycyBkZSBydWVzIENhdiBldCBSaWNob21tZSwgZXQgZHUgcG91cnRvdXIgZGUgbCdnbGlzZSBTYWludCBCZXJuYXJkLCBkZXMgcHJvamV0cyBsYXVyYXRzIGR1IEJ1ZGdldCBwYXJ0aWNpcGF0aWYgZGUgbGEgdmlsbGUgZGUgUGFyaXMuIFRvdWpvdXJzIGRhbnMgbGUgMThlLCBldCBzdXIgbGUgcGFyY291cnMgZGUgbGEgLCBsZSBQcm9qZXQgZGUgbCdPYXNpcyB1cmJhaW5lIHZhIGdhbGVtZW50IHRyZSBtaXMgZW4gb2V1dnJlLiBBdXRhbnQgZGUgY2hhbnRpZXJzIHF1aSB2b250IHRyYW5zZm9ybWVyIGR1cmFibGVtZW50IGxhIHBoeXNpb25vbWllIGR1IHNlY3RldXIsIGF1c3NpLCAgc2VyYSB0cnMgYXR0ZW50aXZlIGF1IGRyb3VsIGRlIGNlcyB0cmF2YXV4LgpMdW5jaCBhbmQgZGlubmVyIGFyZSBhIHZhcmllZCBiYW5xdWV0IG9mIGhvbWVtYWRlIHNvdXAsIGdyaWxsZWQgZmlzaCwgY3V0bGV0cywgcGVsbWVuaSBvciBtYW50aSwgZnJlc2ggdmVnIGFuZCBtYWRlIHRvIG9yZGVyIGRlc3NlcnQuIFdlIGFza2VkIGZvciBicm93bmllcywgdGhleSBtYWRlIHRvd2VyaW5nIG9uZXMgd2l0aCBudXRzIGFuZCBjaG9jb2xhdGUgc2F1Y2UuIFRvZGF5IHdlIGhhZCBwYW5uYSBjb3R0YSBpbiBiZXJyeSBzYXVjZS4gCkhlIGNsdWVsZXNzIHRvIGhlciByZWFzb25zLCBoZSBub3QgYW55IG1vcmUgY29uY2VybmVkIGFib3V0IHRoZSBraWRzIHRoYW4gaGUgaXMgaGltc2VsZi4gSWYgaGUgcmVhbGx5IDI2IGFuZCBoYXMgYWxsIHRoZXNlIGtpZHMsIHRoZW4gdGhpcyBpcyBhIHJlYWwgY3Jpc2lzIGZvciBoaW0gYW5kIHRoZSBraWRzLCBidXQgdGhhdCBkb2VzbiBzZWVtIHRvIGJlIHRoZSBjYXNlLiBMaWtlLCBoZSBzaG91bGQgYmUgcGFuaWNraW5nIGFib3V0IGhvdyB0byBzdXBwb3J0IHRoZXNlIGtpZHMgYW5kIHJhaXNlIHRoZW0gYW5kIGhvdyBoaXMgZmFtaWx5IHdpbGwgaGF2ZSB0byBjb250cmlidXRlLiAKV2hpbGUgcGxheWluZyBubyBsaW1pdCBIb2xkJ2VtLCB5b3VyIGZpcnN0IGluc3RpbmN0IHdpbGwgcHJvYmFibHkgYmUgdG8gbW92ZSBhbGwgaW4gd2hlbiB5b3Ugc2VlIHBvY2tldCBhY2VzLiBJbiBhIHR5cGljYWwgZ2FtZSwgdGhpcyB3aWxsIHdpbiB5b3UgdGhlIHBvdCwgYnV0IHlvdSB3aWxsIGxpa2VseSB3aW4gb25seSB0aGUgYmxpbmRzIHNpbmNlIGV2ZXJ5b25lIGVsc2UgcHJvYmFibHkgZm9sZGVkLiBXaGVuIHlvdSBoYXZlIGEgZ3JlYXQgc3RhcnRpbmcgaGFuZCBzdWNoIGFzIEFBLCBLSywgQUssIG9yIFFRLCB5b3VyIGdvYWwgc2hvdWxkIGJlIHRvIHJhaXNlIGVub3VnaCB0byBtYWtlIGFsbCBidXQgb25lIG9yIHR3byBvcHBvbmVudHMgZm9sZC4gVGhlbiwgaWYgeW91IGFyZSByZXJhaXNlZCBiZWZvcmUgdGhlIGZsb3AsIHlvdSBjYW4gbW92ZSBhbGwgaW4uIFdpbm5pbmcgdGhlIG1vc3QgcG90cyBpbiBhIHNlc3Npb24gaXMgbmljZSwgYnV0IHdpbm5pbmcgdGhlIG1vc3QgbW9uZXkgaXMgd2hhdCBjb3VudHMuIEZvciB0aGlzIHJlYXNvbiB5b3UgbXVzdCBjb25zaWRlciBob3cgdG8gbWF4aW1pemUgeW91ciB3aW5uaW5ncyB3aXRoIHlvdXIgYmVzdCBoYW5kcy4gVGhlIHN0cmF0ZWdpZXMgY29uY2VybmluZyBjaGVja2luZywgcmFpc2luZywgYW5kIGNoZWNrIHJhaXNpbmcgYXJlIGFsbCB0b29scyB5b3UgY2FuIHVzZSB0byBtYWtlIG1vbmV5IGF0IHRoZSBwb2tlciB0YWJsZS4KU28gbGFuZ3VhZ2UgcGxheXMgYW4gaW1wb3J0YW50IHJvbGUgaW4gcHJvY2VzcyBvZiBjb21tdW5pY2F0aW9uLiAKVGhlIHJlc3VsdHMgd2VyZSBiZWF1dGlmdWwgIGxpa2UgdGhlIHBlcmZlY3RseSBzY3VscHRlZCBmbGVzaCBtYWRlIHRob3VnaHQgIGEgcm9vbSBmdWxsIG9mIHRlYWNoZXJzIGFuZCBzdHVkZW50cyB0aGlua2luZyBjcml0aWNhbGx5IGFib3V0IHRoZSBwbGFzdGljIGJvZHkuIENyZXNzaWRhIEhleWVzIHRhbGtlZCBhYm91dCBob3cgYWxsIGNvc21ldGljIHN1cmdlcnkgaXMgcGFydCBvZiB0aGUgcmFjaWFsaXplZCBwcm9qZWN0IG9mICJwYXNzaW5nIiBldmVuIHRob3VnaCB3aGVuIHdoaXRlIHBlb3BsZSB0cnkgdG8gbG9vayB3aGl0ZXIsIGl0IG5ldmVyIG5vdGVkIGFzIHN1Y2guIFJhY2hlbCBIdXJzdCB0YWxrZWQgYWJvdXQgaG93IHRoZSBza2luIGhhcyBiZWVuIGluY3JlYXNpbmdseSB0cmVhdGVkIGFzIGEgdGV4dGlsZSwgd2hpY2ggbWFrZXMgT3JsYW4gcmVjZW50IHdvcmsgb2YgY29uc3RydWN0aW5nIGEgY29hdCBvZiBodW1hbiBhbmQgYW5pbWFsIHNraW4gZ3Jvd24gaW4gZGlzaGVzIGFsbCB0aGUgbW9yZSBpbnRlcmVzdGluZy4uIApUaGlzIHdhcyB0aGUgcmVzdWx0IG9mIGNhbGxvdXMgZGVyZWd1bGF0aW9uLiBUaGUgaW50ZXJlc3RpbmcgdGhpbmcgaXMgdGhhdCBubyBvbmUgb2YgdGhlc2UgcmVndWxhdG9yeSBlZmZvcnRzIGJyb3VnaHQgZG93biB0aGUgaG91c2UuIApMb2dpY2FsbHksIEkgYmVnYW4gbXkgMzUwIGNhbG9yaWUgZGlldC4gVGhhbmtzIHRvIHRoZSBhZHZpY2Ugb2YgbXkgZnJpZW5kcywgYW5kIHlvdSBndXlzLCBJIGhhdmUgZGVjaWRlZCB0byByZXN0cnVjdHVyZSBteSBkaWV0IGFuZCBsb3NlIG15IHdlaWdodCBpbiBhIGhlYWx0aHkgbWFubmVyLkkgYW0gbmV3IHRvIHRoaXMgYW5kIHRoaXMgc3VicmVkZGl0IHNlZW1zIGxpa2UgYSBncmVhdCByZXNvdXJjZS4gRXZlcnlvbmUgaXMgZnJpZW5kbHkgYW5kIHVuZGVyc3Rvb2QgSSBhbSBpbmV4cGVyaWVuY2VkIGluIGxvc2luZyB3ZWlnaHQgIEkgbWVhbiwgSSBiZWVuIGdhaW5pbmcgaXQgbXkgd2hvbGUgbGlmZSA7KS4gCkJlY2F1c2UgdGhlIHBlb3BsZSBhcm91bmQgeW91IGFyZSBhbHNvIGJyb2tlbiwgYW5kIGV2ZXJ5b25lIGhhcyBzY2FyY2l0eSBtaW5kc2V0LiAKQSBjb25zZXF1ZW5jZSBvZiB0aGlzIGlzIHRoYXQgc29tZSBwbGF5ZXJzIGFyZSBsaWtlbHkgdG8gdGFrZSB0aGUgZ2FtZSB2ZXJ5IHNlcmlvdXNseSwgb3RoZXJzIGxlc3Mgc28uIApXYXRjaCBoaXMgY2VsbCBwaG9uZS4gCkFzIGEgZmFtaWx5IG1hbiwgaGUgYWRvcmVzIGhpcyBjaGlsZHJlbiBhbmQsIG1vcmUgdHJhZ2ljYWxseSwgaGUgaGFzIG5ldmVyIHNlZW4gdGhlIGFjY3VzZXJzIHdobyBkZW1vbml6ZSBoaW0uIApXaGVuIHRyYW5zbGF0ZWQsIHRoZXkgcmVhbGx5IGFyZSBncmVhdCBseXJpY3MgYW5kIGV4cGxvcmVzIHNvbWUgb2YgdGhlIHNlbGYgZGlzY292ZXJ5IG9mIG9uZXNlbGYgYW5kIGlubmVyIGZlZWxpbmdzIG9uZSBnb2VzIHRocm91Z2ggdGhyb3VnaG91dCBhZG9sZXNjZW5jZSBhbmQgZXZlbiBqdXN0IGdyb3dpbmcgdXAgaW4gZ2VuZXJhbC4gTm90IGxpa2UgZW1vIG9yIGFueXRoaW5nLiBCdXQgdHJ1ZSBzZWxmIGRpc2NvdmVyeSwgYW5kIHRoZXkgZXZlbiBwb3J0cmF5IGl0IHRocm91Z2ggdGhlaXIgaW5zdHJ1bWVudHMuIEl0IG9uZSBvZiB0aGUgZmV3IHJlYXNvbnMgSSBldmVuIHdhbnRlZCB0byBzdGFydCBwaWNraW5nIHVwIGEgZ3VpdGFyIGFuZCBwbGF5aW5nLgpUaGVyZSBhIGxvdCB0byBjaG9vc2UgZnJvbTogbmF0dXJlIHdhbGtzIHRvIHNlYXJjaCBmb3IgYmVhcnMsIHppcGxpbmUgYWR2ZW50dXJlcywga2F5YWtpbmcsIHJhZnRpbmcsIGx1bWJlcmphY2sgc2hvd3MgKHZlcnkgZW50ZXJ0YWluaW5nKSwgY3VsdHVyYWwgc2hvd3MsIGRvZyBzbGVkZGluZyAuCkFsbCBvZiB3aG9tIGhhZCB0aGlzIHByb2JsZW0uIEkgc29tZXRpbWVzIHRoaW5rIGl0IGlzIGEgdmljaW91cyBjaXJjbGUuIApUaGUgZnJ1aXQgaXMgZnJvbSAxNyAgdG8gMzkgeWVhciBvbGQgYnVzaCB2aW5lcyB0aGF0IGdyb3cgbGl0dGxlIG1vcmUgdGhhbiBhIGtpbG9tZXRyZSBmcm9tIHRoZSBNZWRpdGVycmFuZWFuLiAKUG9rZXIgaXMgYSB3b25kZXIgZ2FtZSB0aGF0IGV2ZXJ5b25lIGVuam95cy4gCkNPTEQgQ1VUIENPTUJPOiBUdXJrZXkgQm9sb2duYTogTWVjaGFuaWNhbGx5IHNlcGFyYXRlZCB0dXJrZXksIHdhdGVyLCBjb250YWlucyBsZXNzIHRoYW4gMiUgb2Y6IHNhbHQsIGNvcm4gc3lydXAgc29saWRzLCBwb3Rhc3NpdW0gbGFjdGF0ZSwgZGV4dHJvc2UsIHNvZGl1bSBkaWFjZXRhdGUsIHNvZGl1bSBlcnl0aG9yYmF0ZSwgc29kaXVtIG5pdHJpdGUsIGZsYXZvcmluZ3MuIFR1cmtleSBIYW06IEN1cmVkIHR1cmtleSB0aGlnaCBtZWF0LCBzYWx0LCBjb250YWlucyBsZXNzIHRoYW4gMiUgb2Y6IHBvdGFzc2l1bSBsYWN0YXRlLCBicm93biBzdWdhciwgc29kaXVtIHRyaXBvbHlwaG9zcGhhdGUsIGRleHRyb3NlLCBzb2RpdW0gZGlhY2V0YXRlLCBzb2RpdW0gZXJ5dGhvcmJhdGUsIHNtb2tlIGZsYXZvciwgc29kaXVtIG5pdHJpdGUsIHdhdGVyLiBUdXJrZXkgU2FsYW1pOiBEYXJrIHR1cmtleSwgbWVjaGFuaWNhbGx5IHNlcGFyYXRlZCB0dXJrZXksIHdhdGVyLCBzYWx0LCBjb250YWlucyBsZXNzIHRoYW4gMiUgb2Y6IHBvdGFzc2l1bSBsYWN0YXRlLCBzdWdhciwgc29kaXVtIHRyaXBvbHlwaG9zcGhhdGUsIGRleHRyb3NlLCBzcGljZSBhbmQgZmxhdm9yaW5ncywgc29kaXVtIGRpYWNldGF0ZSwgR3Vlc3MgSSBoYXZlIHRvIGFkbWl0IEkgd2FzIHdyb25nIHRvIG11bHRpcGxlIHBlb3BsZS4gWSB0YWtlIHN1YndheSBzZXJpb3VzbHkuIFRoZSBjb2xkIGN1dCBjb21ibyBoYXMgdHVya2V5IGhhbSwgYnV0IHRoZSBoYW0gc2FuZHdpY2ggaXMgcmVhbCBoYW0uCkRpZG4gd3JpdGUgdGhhdCB1cC4gV2UgaGF2ZSB0byB3b3JrIG9uIHRoYXQgb25lLCBub3Qgc3VyZSB3aGF0IHdlIHdlcmUgZG9pbmcgdGhlcmUsIHNhaWQgQnJvc3NvaXQuIGp1c3Qgb25lIG9mIHRob3NlIG5pZ2h0cyB3aGVyZSB3ZSB3ZXJlIGdldHRpbmcgdGhlIGx1Y2t5IGJvdW5jZXMuIGhlYWQgY29hY2ggUGF1bCBNYXVyaWNlIHdhcyB0aHJpbGxlZCB3aXRoIHRoZSBlZmZvcnQgaGlzIHRlYW0gcHV0IGZvcnRoLCBidXQgd2FzIGxlZnQgc2hha2luZyBoaXMgaGVhZCBhdCB3aGF0IHRyYW5zcGlyZWQgZHVyaW5nIHRoYXQgc2VxdWVuY2Ugb2YgZXZlbnRzLgpXZSBhbHNvIHRhdWdodCBoaW0gInNob3RndW4iIGhlIHdvdWxkIGp1c3Qgc2l0IHdoZXJldmVyIGluIHRoZSBjYXIuIFVudGlsIHlvdSBzYWlkIHNob3RndW4uIFRoZW4gaGUgZ28gYW5kIHNpdCBpbiB0aGUgcGFzc2VuZ2VyIHNlYXQuClRoZXNlIFRlcm1zLCBpbmNsdWRpbmcgYWxsIHRlcm1zLCBjb25kaXRpb25zIGFuZCBwb2xpY2llcyBpbmNvcnBvcmF0ZWQgaGVyZWluIGJ5IHJlZmVyZW5jZSwgdG9nZXRoZXIgd2l0aCBhbnkgbGVnYWwgbm90aWNlcyBwdWJsaXNoZWQgb24gdGhlIFdlYnNpdGVzLCBzaGFsbCBjb25zdGl0dXRlIHRoZSBlbnRpcmUgYWdyZWVtZW50IGJldHdlZW4geW91IGFuZCBXb3JsZCBBcmNoaXZlcyBjb25jZXJuaW5nIHRoZSBXZWJzaXRlcy4gSWYgeW91IGRvbid0IGFncmVlIHdpdGggYW55IG9mIHRoZXNlIFRlcm1zLCBvciBpZiB5b3UgaGF2ZSBhbnkgb2JqZWN0aW9ucyB0byBvdXIgUHJpdmFjeSBQb2xpY3kgeW91IG11c3Qgbm90IHVzZSB0aGUgU2VydmljZXMgb3IgdGhlIFdlYnNpdGVzLi4gCkFuZCBJbnRlcm5hdGlvbmFsIFJlbGF0aW9ucwpSZWdpc3RlcmVkIGFzIGEgbWVkaWNhbCBjbGluaWMsIGl0IG9mZmVycyBhIHdpZGUgcmFuZ2Ugb2Ygc3BhIGFuZCBob2xpc3RpYyBtZWRpY2FsIHRyZWF0bWVudHMsIHN1Y2ggYXMgYWN1cHVuY3R1cmUgYW5kIEF5dXJ2ZWRpYyB0aGVyYXBpZXMsIGFuZCBhY3Rpdml0aWVzIGxpa2UgdGFpIGNoaSBhbmQgUGlsYXRlcyAoaW4gdGhlIGNvdW50cnkncyBvbmx5IFBpbGF0ZXMgc3R1ZGlvKS4gCkFsc28gaW4gbXkgZXhwZXJpZW5jZSwgYmVpbmcgYXQgYSBiaWcgY29tcGFueSBkb2VzIG5vdCBsaW1pdCB5b3VyIGFiaWxpdHkgdG8gd29yayBvbiBtdWx0aXBsZSBwcm9ncmFtcyBvciBwcm9qZWN0cyAgIGl0IGFjdHVhbGx5IGVuaGFuY2VzIGl0LiBJIHdvcmtlZCBmb3IgYSBsYXJnZSBmaXJtIGZvciBzZXZlcmFsIHllYXJzIGFuZCBoYXZlIG1vdmVkIHByb2plY3RzIHJlZ3VsYXJseSBhdCBteSBvd24gZGlzY3JldGlvbiAobm90IGJlY2F1c2UgdGhlIG1hbmFnZXJzIHdhbnRlZCBtZSBnb25lKS4KSWYgeW91IGhhdmUgYSBkcmF3IHRvIHRoZSBiZXN0IGhhbmQsIGNoZWNrIGFuZCBjYWxsIChvbmNlIGFnYWluLCBhc3N1bWluZyB0aGUgcG90IG9kZHMgYXJlIGNvcnJlY3QpLiAKV2FzIHZhY2FudCBzcGFjZSBoYXMgbm93IGJlZW4gdHJhbnNmb3JtZWQgdG8gb25lIG9mIFdlc3Rlcm4gQ2FuYWRhIGxlYWRpbmcgc3BvcnRzIGJhcnMsIEx1ZGxvdyBzYWlkLiByZWFsbHkgYSBjb21wbGVtZW50IHRvIGV2ZXJ5dGhpbmcgZWxzZSB0aGF0IGdvaW5nIG9uIGRvd250b3duLiBUaGlzIGRvZXNuIHN0YW5kIGFsb25lLCBpdCBzdGFuZHMgYXMgcGFydCBvZiBhIGxhcmdlciBwdXp6bGUgcGllY2UgdGhhdCBmaXRzIGludG8gYWxsIG9mIHRoZSBkeW5hbWljIG5ldyBjaGFuZ2VzIHRoYXQgYXJlIGhhcHBlbmluZyBkb3dudG93biBhbmQgdGhhdCBjb250aW51ZSB0byBoYXBwZW4uIGJhciB3aWxsIHRlbGV2aXNlIGFsbCBKZXRzIGhvbWUgYW5kIGF3YXkgZ2FtZXMsIENGTCBhbmQgTkZMIGdhbWVzLCBhbmQgcGF5IHBlciB2aWV3IGV2ZW50cy4gSXQgd2lsbCBiZSBvcGVuIHNldmVuIGRheXMgYSB3ZWVrLgpUaGUgZGlzYWR2YW50YWdlcyB3aXRoIGhpZ2ggdGVtcGVyYXR1cmVzIGlzIHRoYXQgdGhlIEdQVSB3aWxsIHByb2JhYmx5IGdvIGludG8gdGhlcm1hbCB0aHJvdHRsaW5nLCB3aGljaCByZWR1Y2VzIHRoZSBjbG9jayBzcGVlZCBhbmQgcGVyZm9ybWFuY2Ugb2YgdGhlIEdQVSB3aGljaCBvZiBjb3Vyc2UgY2FuIGRyYXN0aWNhbGx5IHJlZHVjZSB0aGUgRlBTIGluIHRoZSBnYW1lIHlvdSBhcmUgcGxheWluZy4uIAoiTm90IGF0IGFsbCwiIER1cmJpbiB0b2xkIENOTiBvZiBhbnkgb3V0cmVhY2guICJIZSBoYXNuJ3QgdG9sZCB1cyB0aGUgYmFzZSB5ZXQuIEFsbCBoZSdzIHRvbGQgdXMgaXMgJ2xldmVsIHBsYXlpbmcgZmllbGQuJyIKU1RWIGFuZCAyNU9IRCBjb25jZW50cmF0aW9uIHdlcmUgYXNzZXNzZWQgaW4gNDExIGNvbW11bml0eSBkd2VsbGluZyBvbGRlciBhZHVsdHMgKG1lYW4gYWdlIDcwLjQgIDEuOCB5ZWFycywgNTcuOSUgd29tZW4pLiAKU2hhdHRlcmVkLCB0aGUgYm95cyB3YW5kZXIgZGVzb2xhdGUgZm9yIGEgZmV3IGVwaXNvZGVzIGFzIHRoZXkgd29uZGVyIHdoYXQgdGhlIGZ1Y2sgdGhlIHBsb3Qgd2lsbCBiZSBmb3IgdGhlIG5leHQgZWlnaHQgc2Vhc29ucy4gTHVja2lseSwgU2FtIGlzIHNob3dpbmcgc2lnbnMgb2YgZGV2ZWxvcGluZyBldmlsIHN1cGVycG93ZXJzIG9yIHNvbWV0aGluZywgd2hpY2ggYWRkcyBmb3Igc29tZSBncm93aW5nIHRlbnNpb24uIEFwcGFyZW50bHkgdGhlIGRlbW9uIGdhdmUgYSBidW5jaCBvZiBraWRzIHNhaWQgc3VwZXJwb3dlcnMsIGFuZCBub3cgU2FtIGFuZCBEZWFuIGhhdmUgdG8gZ28gYXJvdW5kIGtpbGxpbmcgdGhlIG9uZXMgdGhhdCBnbyBiYWQgYW5kIHVzZSB0aGVpciBwb3dlciB0byBmaWdodCBmb3IgdGhlIFNpdGguIFNhbSBhbmdzdHMgYWJvdXQgdGhpcywgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IGhpcyBwb3dlcnMgYXJlIHByZXR0eSBnYXkgYW5kIGhlIGNhbid0IGRvIGFueXRoaW5nIHdpdGggdGhlbS4KTm90IGV2ZXJ5b25lIHdobyBnZXRzIHJlamVjdGVkIGtpbGxzIHNvbWVvbmUsIGxvbC5JbiBmYWN0LCBtb3N0IGFkdWx0cyBhcmUgbWF0dXJlIGVub3VnaCB0byBhY3QgaW4gYSByYXRpb25hbCBhbmQgZGVjZW50IG1hbm5lciBpbiBzaXR1YXRpb25zIHN1Y2ggYXMgdGhlc2UsIEkgaG9wZSBPUCB3aWxsIHRvby5UaGF0IGd1eSBpcyBqdXN0IGF3a3dhcmQgYmVjYXVzZSBoZSBkb2VzbiBrbm93IGhvdyB0byBhcHByb2FjaCBoZXIsIGFuZCBiZWNhdXNlIG9mIHRoYXQgaGUgbGluZ2VycyBsaWtlIGEgd2VpcmRvIGFyb3VuZCBoZXIgZ2l2aW5nIGhlciB0aG9zZSB3ZWlyZCB2aWJlcy4gCkxhc3QgeWVhciwgNDcyIGNsdWJzIHBhcnRpY2lwYXRlZCBpbiB0aGUgc2NoZW1lLiAKVGhpcyB5ZWFyIEkndmUgbGVhcm5lZCB0byBjb250cm9sIHRoZSBhbW91bnQgSSBkcmluayBhbmQgSSB3ZW50IGZyb20gc3VwZXIgZnJlcXVlbnQgYmxhY2tvdXRzIHRvIG1heWJlIHR3aWNlIHRoaXMgZW50aXJlIHllYXIgKGFuZCB3aXRoIGZhciBsZXNzIHNldmVyZSBjb25zZXF1ZW5jZXMpLiBUaGF0IHdhcyB0aHJvdWdoIGhhcmQgd29yayBhbmQsIGZyYW5rbHksIHBpY2tpbmcgdXAgYSBzbGlnaHQgbmljb3RpbmUgaGFiaXQuIEFueXdheXMsIGRyaW5raW5nIGlzIHNvIG11Y2ggbGVzcyBmdW4gdG8gbWUgdGhlc2UgZGF5cy4gCkFuZCBpbiB0aGUgZWFybHkgMTk0MHMsIHRoZSBQaW9uZWVyIFNhbG9vbiB3YXMgZnJlcXVlbnRlZCBieSBub25lIG90aGVyIHRoYW4gdGhlIGZhbW91cyBhY3RvciBDbGFyayBHYWJsZS4gSGUgYW5kIENhcm9sZSBMb21iYXJkIHZpc2l0ZWQgdGhlIHRvd24gbWFueSB0aW1lcy4gSGlzIGZhbW91cyBsaW5rIHRvIHRoZSBQaW9uZWVyIFNhbG9vbiBjYW1lIGFib3V0IHZlcnkgdHJhZ2ljYWxseS4gCkRyLiBJdCBhaW4gd2hlYXQhIDIwIG1pbiBWSURFTyBwYXJ0IDFUaGlzIHdvcmssIHBlcmZvcm1lZCBtb3N0bHkgaW4gdGhlIDE5NzBzLCB5aWVsZGVkIGEgZm9ybSBvZiBnbGlhZGluIHRoYXQgaXMgc2V2ZXJhbCBhbWlubyBhY2lkcyBkaWZmZXJlbnQsIGJ1dCBpbmNyZWFzZWQgdGhlIGFwcGV0aXRlIHN0aW11bGF0aW5nIHByb3BlcnRpZXMgb2Ygd2hlYXQuTW9kZXJuIHdoZWF0LCBhIGhpZ2ggeWllbGQsIHNlbWkgZHdhcmYgc3RyYWluIChub3QgdGhlIDQgMS8yIGZvb3QgdGFsbCAiYW1iZXIgd2F2ZXMgb2YgZ3JhaW4iIGV2ZXJ5b25lIHRoaW5rcyBvZikgaXMgbm93LCBpbiBlZmZlY3QsIGFuIGFwcGV0aXRlIHN0aW11bGFudCB0aGF0IGluY3JlYXNlcyBjYWxvcmllIGludGFrZSA0MDAgY2Fsb3JpZXMgcGVyIGRheS5UaGlzIGZvcm0gb2YgZ2xpYWRpbiBpcyBhbHNvIHRoZSBsaWtlbHkgZXhwbGFuYXRpb24gZm9yIHRoZSBzdXJnZSBpbiBiZWhhdmlvcmFsIHN0cnVnZ2xlcyBpbiBjaGlsZHJlbiB3aXRoIGF1dGlzbSBhbmQgQURIRC4yKSBUaGUgYW15bG9wZWN0aW4gQSBvZiB3aGVhdCBpcyB0aGUgdW5kZXJseWluZyBleHBsYW5hdGlvbiBmb3Igd2h5IHR3byBzbGljZXMgb2Ygd2hvbGUgd2hlYXQgYnJlYWQgcmFpc2UgYmxvb2Qgc3VnYXIgaGlnaGVyIHRoYW4gNiB0ZWFzcG9vbnMgb2YgdGFibGUgc3VnYXIgb3IgbWFueSBjYW5keSBiYXJzLkl0IGlzIHVuaXF1ZSBhbmQgaGlnaGx5IGRpZ2VzdGlibGUgYnkgdGhlIGVuenltZSBhbXlsYXNlLkluY3JlZGlibHksIHRoZSBoaWdoIGdseWNlbWljIGluZGV4IG9mIHdob2xlIHdoZWF0IGlzIHNpbXBseSBpZ25vcmVkLCBkZXNwaXRlIGJlaW5nIGxpc3RlZCBhdCB0aGUgdG9wIG9mIGFsbCB0YWJsZXMgb2YgZ2x5Y2VtaWMgaW5kZXguMykgVGhlIGxlY3RpbnMgb2Ygd2hlYXQgbWF5IHVuZGVybGllIHRoZSBpbmNyZWFzZSBpbiBtdWx0aXBsZSBhdXRvaW1tdW5lIGFuZCBpbmZsYW1tYXRvcnkgZGlzZWFzZXMgaW4gQW1lcmljYW5zLCBlc3BlY2lhbGx5IHJoZXVtYXRvaWQgYXJ0aHJpdGlzIGFuZCBpbmZsYW1tYXRvcnkgYm93ZWwgZGlzZWFzZXMgKHVsY2VyYXRpdmUgY29saXRpcywgQ3JvaG4ncykuSW4gb3RoZXIgd29yZHMsIGlmIHNvbWVvbmUgaXMgbm90IGdsdXRlbiBzZW5zaXRpdmUsIHRoZXkgbWF5IHN0aWxsIHJlbWFpbiBzZW5zaXRpdmUgdG8gdGhlIG1hbnkgbm9uIGdsdXRlbiBhc3BlY3RzIG9mIG1vZGVybiBoaWdoIHlpZWxkIHNlbWkgZHdhcmYgd2hlYXQsIHN1Y2ggYXMgYXBwZXRpdGUgc3RpbXVsYXRpb24gYW5kIG1lbnRhbCAiZm9nLCIgam9pbnQgcGFpbnMgaW4gdGhlIGhhbmRzLCBsZWcgZWRlbWEsIG9yIHRoZSBtYW55IHJhc2hlcyBhbmQgc2tpbiBkaXNvcmRlcnMuIApLaW0gSm9uZyBVbiBoYXMgdGFrZW4gaW50byBhY2NvdW50IFRydW1wIGRvbWVzdGljIHR1cm1vaWwsIGFuZCB0aHVzIGhlIHdlbnQgaW4gd2l0aCBjb25maWRlbmNlIHRoYXQgaGUgaGFkIHRoZSB1cHBlciBoYW5kLiBJdCBpcyBsaWtlbHkgdGhhdCBoZSBwdXNoZWQgZm9yIG1vcmUgc2FuY3Rpb25zIHJlbGllZiB0aGFuIHdoYXQgd2FzIHJlYXNvbmFibGUgY29tcGFyZWQgdG8gd2hhdCBoZSBvZmZlcmVkIGluIHJldHVybi4gVGhpcyBpcyBiZWNhdXNlIGl0IHdhcyBxdWl0ZSBvYnZpb3VzIGZyb20gb2JzZXJ2YXRpb24gdGhhdCBUcnVtcCBuZWVkZWQgYSB3aW4gdG8gY291bnRlciB0aGUgZG9tZXN0aWMgb3Bwb3NpdGlvbi4gSW4gZmFjdCBtb3N0IHdlc3Rlcm4gbWVkaWEgcHJlIHN1bW1pdCB3YXMgZnJldHRpbmcgdGhhdCBUcnVtcCB3aWxsIGFjY2VwdCBhIGJhZCBkZWFsIGluIGRlc3BlcmF0aW9uLiBUcnVtcCBkZWNpc2lvbiB0byB3YWxrIG91dCB3YXMgY2VudGFpbmx5IGEgc3VycHJpc2UgdG8gS2ltLCB3aG8gYXNzdXJlZGx5IHRvb2sgYSA2MCtob3VyIHRyYWluIHJpZGUgYW5kIGh5cGVkIHVwIHRoZSB0cmlwIGluIGl0cyBzdGF0ZSBtZWRpYS4KV2VyZSB5b3Ugc3BlbmRpbmcgaXQgd2l0aCBwZW9wbGU/IFdlcmUgeW91IHRha2luZyB0aW1lIHRvIGVuam95IGFuIGFjdGl2aXR5LCBnb2luZyBmb3IgYSBydW4gb3IgY2F0Y2hpbmcgdXAgd2l0aCBhIGdvb2QgZnJpZW5kPyBXb3VsZCBhIHdhZCBvZiBjYXNoIGhhdmUgbWFkZSB0aG9zZSBtb21lbnRzIHRoYXQgbXVjaCBiZXR0ZXI/LiAKRWFybHkgdGhlIG5leHQgZGF5IEphY2sgcmV0cmlldmVkdGhlIHBhY2thZ2UuIApKdXN0IHVzZSB5b3VyIGJyYWlucyB3aXRoIEZhY2Vib29rLCBzdG9wIGV4Y3VzaW5nIHBvb3Igc2VsZiBkaXNjaXBsaW5lLCBhbmQgaGF2ZSBzb21lIGNvbW1vbiBzZW5zZS4KUG91cnRhbnQgbCdhcnRpY2xlIGR1IFBhcmlzaWVuIGR1IDUgb2N0b2JyZSBub3VzIGEgbGFpc3NzIGR1Yml0YXRpZnMgZXQgZnVyaWV1eC4gCkVkaXQgdG8gYWRkOiBvaCBieSB0aGUgd2F5LCBnaXZlbiB0aGUgYWNjdW11bGF0ZWQgc2NvcmVzIGFmdGVyIHRoZSBERCwgaGFkIEFsZXggd2FnZXJlZCAxMCBoaXMgdGVhbSB3b3VsZCBzdGlsbCBoYXZlIGJlZW4gYWxpdmUgZ2l2ZW4gYW4gaW5jb3JyZWN0IGFuc3dlciwgYW5kIHN0aWxsIHdvdWxkIGhhdmUgbG9ja2VkIGdpdmVuIGEgY29ycmVjdCBhbnN3ZXIuIFRoZSBwb3N0IEREIGFjY3VtdWxhdGVkIHNjb3JlcyB3ZXJlIG5vdCBhbnkgc29ydCBvZiBvdXRsaWVyIGluIHRoZSBkaXN0cmlidXRpb24gb2YgcG9zdCBERCBhY2N1bXVsYXRlZCBzY29yZXM7IG1vc3QgZGlzdHJpYnV0aW9ucyBvZiBwb3N0IGRkIHNjb3JlcyB3aWxsIGJlIHRoaXMgd2F5LiBUaGF0IHZlcnkgc2ltcGxpc3RpYywgYnV0IGl0IGEgcHJldHR5IGVhc3kgaWxsdXN0cmF0aW9uIG9mIHdoeSBJIHRoaW5rIEkgcmlnaHQuLiAKRm91ciB0b3VybmFtZW50cyB3aWxsIGJlIHJ1bm5pbmcgZWFjaCBkYXkgYXQgMTowMFBNLCA0OjAwUE0sIDc6MDBQTSBhbmQgMTA6MDBQTSwgYmV0d2VlbiBGZWJydWFyeSAxNSBhbmQgMTksIDIwMTcuLiAKVGhlIGNvbXBhbnkgZG9lc24gY2FyZSBpZiB5b3UgZG9uIGZlZWwgbGlrZSB0YWtpbmcgYSBjb3Vyc2UgdGhhdCB0aGV5IHBheSBmb3IuIFRoZXkgZ2l2ZSB5b3UgbW9uZXkgaW4gZXhjaGFuZ2UgZm9yIHlvdSBtZWV0aW5nIHlvdXIgb2JsaWdhdGlvbnMuIFBlcmlvZC4gQ2FuIHlvdSBzaG93IG1lIHRoYXQgdGhlIGNvbXBhbnkgd291bGQgbm90IGhhdmUgYW5vdGhlciBlbXBsb3llZSB0YWtlIGEgY291cnNlIGZvciB0aGUgc2FtZSBjb21wbGFpbnQ/IENhbiB5b3UgcHJvdmUgaXQgd2FzIHBlcnNvbmFsPwpOZXBoYXJpcyB1ClRhcmFqaSBQLiAKQmUgd2lzZSwgYW5kIGJlc3Qgb2YgbHVjayB0byB5b3UuCkhlIGlzIGEgZm9ybWVyIHJlcG9ydGVyIGZvciBNY0NsYXRjaHkgbmV3c3BhcGVycywgaW5jbHVkaW5nIHRoZSBGcmVzbm8gQmVlLCB3aGVyZSBoZSBjb3ZlcmVkIGJ1c2luZXNzIGFuZCBzdGF0ZSBnb3Zlcm5tZW50IGFuZCBwb2xpdGljcywgYW5kIHRoZSBJc2xhbmQgUGFja2V0IGluIFNvdXRoIENhcm9saW5hLiBOZWFsIEF3YXJkcywgdGhlIEFzc29jaWF0aW9uIG9mIENhcGl0b2wgUmVwb3J0ZXJzIGFuZCBFZGl0b3JzLCB0aGUgQ2FsaWZvcm5pYSBOZXdzcGFwZXIgUHVibGlzaGVycyBBc3NvY2lhdGlvbiwgdGhlIFNvdXRoIENhcm9saW5hIFByZXNzIEFzc29jaWF0aW9uIGFuZCBJbnZlc3RpZ2F0aXZlIFJlcG9ydGVycyBhbmQgRWRpdG9ycy4gQSBuYXRpdmUgb2YgQ2luY2lubmF0aSwgU2NodWx0eiBoYXMgYW4gZWNvbm9taWNzIGRlZ3JlZSBmcm9tIFhhdmllciBVbml2ZXJzaXR5IGFuZCBhIG1hc3RlcnMgaW4gam91cm5hbGlzbSBmcm9tIE5vcnRod2VzdGVybiBVbml2ZXJzaXR5Li4gCkkgY291bGQgZ28gdG8gYW4gb3JneSBvciBjb25mZXNzIG15IGxvdmUgdG8gdGhlIHdvbWFuIG9mIG15IGRyZWFtcy4gClByZXNzdXJlIHN0ZWFtIHN0ZXJpbGlzZXJzIG9wZXJhdGUgYXQgaGlnaCBwcmVzc3VyZXMgYW5kIHRlbXBlcmF0dXJlcywgYW5kIGFwcHJvcHJpYXRlIG1lYXN1cmVzIG11c3QgYmUgdGFrZW4gZm9yIHRvIGVuc3VyZSB0aGUgc2FmZXR5IG9mIHdvcmtlcnMuLiAKT24gdGhlIG90aGVyIGhhbmQsIHJlY2VudCBldmlkZW5jZSB0aGF0IHNob3dzIHNvbWUgZmFtaWxpZXMgYXJlIGNob29zaW5nIHRvIGhhdmUgYm95cyBvdmVyIGdpcmxzIGhhcyBjYXVzZWQgYSBjZXJ0YWluIGFtb3VudCBvZiBhbmdzdCwgYXQgbGVhc3QgYW1vbmcgdGhlIGNoYXR0ZXJpbmcgY2xhc3Nlcy4gCklmIHlvdSByZWFsbHkgYXJlIGdldHRpbmcgdW5sdWNreSB3aXRoIHRoZSBjYXJkcywgbG9vayBhdCB0aGUgY2FyZHMgY29taW5nIGRvd24sIHNlZSBpZiB5b3UgY2FuIHB1dCBvdGhlcnMgaW4gYmVsaWVmIHlvdSBoYXZlIGEgYmV0dGVyIGhhbmQsIGhpZ2ggcmlzayBjYW4gcGF5IG9mZiwgYnV0IGRvIG5vdCB0cnkgdGhpcyB0b28gbXVjaCBpbiBhIGdhbWUsIGFzIGV2ZXJ5IHRpbWUgeW91IGFyZSBwdXR0aW5nIHlvdXIgdG91cm5hbWVudCBvbiB0aGUgbGluZS4gClBlbm56b2lsIE9pbCA0MDAgYXQgTGFzIFZlZ2FzIDMgMyAxOUFVVE8gVVMgTkFTQ0FSIFBFTk5aT0lMIDQwMEF0dGVuZGVlcyB3YXRjaCB0aGUgUGVubnpvaWwgNDAwIHJhY2UgZnJvbSB0aGUgdG9wcyBvZiB0aGVpciByZWNyZWF0aW9uYWwgdmVoaWNsZXMgYXQgTGFzIFZlZ2FzIE1vdG9yIFNwZWVkd2F5IG9uIE1hcmNoIDMsIDIwMTkgaW4gTGFzIFZlZ2FzLCBOZXZhZGEuIApKZWRlciBTcGllbGVyIGVyaGx0IGRyZWkgdmVyZGVja3RlIEthcnRlbi4gRGFuYWNoIHdobGVuIHNpZSB6d2VpIEthcnRlbiBhdXMsIGRpZSBzaWUgZnIgaWhyZSBCb3R0b20sIE1pZGRsZSBvZGVyIFRvcCBIYW5kIHZlcndlbmRlbiB3b2xsZW4gdW5kIGxlZ2VuIGRpZSBkcml0dGUgS2FydGUgYWIuIERpZXMgd2lyZCBzbyBsYW5nZQpJdCBzYXZlcyB1cyB0aGUgdHJvdWJsZSBvZiBsaXN0ZW5pbmcgdG8gdGhlbS4gQSB3b21hbiBkZW1hbmRpbmcgZXF1YWwgcGF5IGZvciBlcXVhbCB3b3JrIGlzIG1ha2luZyBhIHBvaW50IHlvdSBoYXZlIHRvIGFkZHJlc3MuIAo2IGluIDEgY2FzaW5vIGdhbWluZyB0YWJsZSBmdXJuaXR1cmUgaXMgdGhlIGhvdHRlc3QgaXRlbSBpbiB0aGUgbWFya2V0IGF0IHRoaXMgbW9tZW50LiBUaGlzIHNwZWNpYWwgaXRlbSBhbW9uZyBhbGwgYXZhaWxhYmxlIGJsYWNramFjayBzdXBwbGllcy4gVGhpcyBvbmUgaXMgYSBnYW1pbmcgdGFibGUgdGhhdCBvZmZlcnMgYWxsIHRoZSBhdmFpbGFibGUgZ2FtZXMgc3VjaCBhcyBCbGFja2phY2ssIHJvdWxldHRlIGFuZCBjcmFwcyBhbmQgb3RoZXIgcmVndWxhciBnYW1lcyBsaWtlIGNoZXNzLCBjaGVja2VycyBhbmQgYmFja2dhbW1vbi4gCk5vdyB3aGVyZSBlbHNlIGNhbiB3ZSBkcmF3IHNpbWlsYXJpdGllcz8gV2VsbCwgYW5vdGhlciBiaWcgb25lIEkgYmVsaWV2ZSB3ZSBzaG91bGQgbG9vayBhdCBpcyB0aGUgZnVuZGFtZW50YWwgc3RyYXRlZ2llcyBvZiB0aGUgZ2FtZXMuIEluIGJvdGgsIHBsYXllcnMgYmVuZWZpdCBmcm9tIGtub3dpbmcgd2hlbiB0byBwbGF5IGFnZ3Jlc3NpdmVseSBhbmQgd2hlbiBpdCBpcyBzbWFydGVyIHRvIHNhY3JpZmljZSBub24gY3JpdGljYWwgcmVzb3VyY2VzIGluIG9yZGVyIHRvIGZvY3VzIG9uIGEgbG9uZ2VyIHRlcm0gZ29hbC4gSW4gYm90aCwgYSBjb3JlIHNraWxsIGlzIGxldmVyYWdpbmcgcmFuZG9tIG91dGNvbWVzIHRvIHlvdXIgYWR2YW50YWdlLiBIb3dldmVyLCBJIHRoaW5rIEF1dG8gQ2hlc3MgYWNoaWV2ZXMgYm90aCBvZiB0aG9zZSBmYXIgbW9yZSBlbG9xdWVudGx5IHRoYW4gQXJ0aWZhY3QuClBlb3BsZSBqdXN0IG5lZWQgdG8gYmUgbWluZGZ1bCB0aGV5IGFsbG93ZWQgdG8gc3BlYWsgdXAgYWdhaW5zdCB0aGUgcG9saWNlIGFuZCBhY3Rpb25zIHRoZXJlb2YuIFRoZSBQbGFpbnRpZmYgYXR0b3JuZXkgc3BlY2lmaWNhbGx5IHN0YXRlZCB0aGUgaW50ZW50IG9mIHRoZSBzdWl0IGlzIHRvICJzZXQgdGhlIHJlY29yZCIgc3RyYWlnaHQgYWdhaW5zdCBhIGRvY3VtZW50YXJ5IHJlbGVhc2VkICJhbG1vc3QgdGhyZWUgeWVhcnMiIGFnbyB0aGVyZWJ5IHdoZW4gdGhlIFBsYWludGlmZiB3YXMgYSBwb2xpY2Ugb2ZmaWNlLiBUaHVzLCB0aGUgc3VpdCBpcyBwdW5pc2hpbmcgcGVvcGxlIGZvciBzcGVha2luZyB1cCBhZ2FpbnN0IHRoZSBwb2xpY2UuCk91ciBvYmplY3RpdmUgd2FzIHRvIGRldGVybWluZSB0aGUgcG90ZW50aWFsIGFzc29jaWF0aW9uIGJldHdlZW4gdml0YW1pbiBEIGRlZmljaWVuY3kgYW5kIFBJIGluIG9sZGVyIGZhbGxlcnMuLiAKSWYgeW91IGFyZSBiZWhpbmQgYSBhbGwgaW4gZXYgaW4gYSBtdWx0aSB3YXkgcG90IHdoeSB0aGUgZnVjayBzaG91bGQgaXQgbm90IGNvdW50PyAybmQgcG9pbnQgdGhleSBzaG93IHdpbm5pbmdzIGFuZCBsb3NpbmcgcGxheWVycyBoYW5kcyBhdCBzaG93ZG93bi4gQWxsIHBva2VyIHNpdGVzIEkgY2FuIHRoaW5rIG9mIHNob3cgeW91IGJvdGggaGFuZHMgYXQgc2hvd2Rvd24gYW5kIGFsbCBIVURzIGltcG9ydCB0aG9zZSBoYW5kcy5JbiB0aGUgc2hvcnQgcnVuLCB0aGUgQW1vdW50IFdvbiBhbmQgRVYgc3RhdHMgd2lsbCBkaXZlcmdlIGJ5IGRlZmF1bHQuIApGYXN0IHNjaGllbiBlcyBuYWNoIGVpbmVtIGdld29ubmVuZW4gU2hvd2Rvd25zbywgZGFzcyBkaWVzIGJlc2NobG9zc2VuZSBTYWNoZSB3cmUsIGRhIGRlciBHZWduZXIgZGFubiBudXIgbm9jaCA0MDAgUmVzdCBoYXR0ZSwgZG9jaCBkYXMgQmxhdHQgZHJlaHRlIHNpY2gsIGRyZWkgb2RlciB2aWVyIG1hbCBrb25udGUgZGllc2VyIHNpY2ggd2llZGVyIHZlcmRvcHBlbG4gdW5kIHdhciBmYXN0IHdpZWRlcmdsZWljaCBpbSBTdGFjaywgYmlzIGRhcyBHbGNrIGRhbm4gaW0gZmluYWxlbiBTaG93ZG93biBGcmFueiBob2xkIHdhciwgdHJvdHogc2Nod2NoZXJlciBIYW5kIGtvbm50ZSBlciBzaWNoIGVpbmVuIEZsdXNoIHppZWhlbiB1bmQgZ2V3YW5uIG5hY2ggZGllc2VtIEtyaW1pIGdsY2tsaWNoZXJ3ZWlzZSBkZW4gZXJzdGVuIFB1bmt0ZnIgZGVuIFRIQy5EdXJjaCBkaWUgYmlzaGVyaWdlIEVyZ2Vibmlza29uc3RlbGxhdGlvbiB3YXIgZXMgamVkb2NoIG5vY2ggcmVjaG5lcmlzY2ggbWdsaWNoLCBkdXJjaCBlaW5lbiBTaWVnIGluIGRlciAzLiAKU28gbm8gd29ycmllcy4gSXQgaGFzIGJlZW4gb25seSBhIGNvdXBsZSBvZiB3ZWVrcyBzaW5jZSB0aGUgc2Nob29sIHN0YXJ0ZWQuIEVuam95IHlvdXIgZmlyc3QgeWVhciB3aGlsZSB5b3UgY2FuIS4gCkFuZCB0aGUgcGFya2xhbmQgc2hvb3Rlci4gClNpdGVzIGxpa2UgRnVsbCBUaWx0IFBva2VyIHdlcmUgc3VwcG9zZWQgdG8gYmUgbWFraW5nIG1vbmV5IGJ5IGNoYXJnaW5nIG9ubGluZSB0b3VybmFtZW50IGZlZXMgYW5kIGNvbGxlY3RpbmcgYSBzbWFsbCBwZXJjZW50YWdlICggaW4gcG9rZXIgbGluZ28pIG9mIGVhY2ggcG90LiBCdXQgaXQgYXBwZWFycyBhcyBpZiB0aGUgb3duZXJzIHdlcmUgdGFraW5nIGhvbWUgZmFyIG1vcmUgdGhhbiB0aGUgY29tcGFueSByZWFsaXplZCBpbiBsZWdpdGltYXRlIHByb2ZpdHMuCkVhc2lseSB0aGUgbW9zdCB1c2VsZXNzIGJpdCBvZiBpbmZvIGZyb20gdGhhdCBjbGFzcywgYnV0IEkgc3RpbGwgZW5qb3kgaXQuIApJIHRyeWluZyB0byBwdXQgbXlzZWxmIGluIHRoZWlyIHNob2VzLiBJIENoaW5lc2UsIHNvIGx1bmFyIG5ldyB5ZWFyIGlzIGh1Z2UgZm9yIG1lLiBJIHRoaW5rIG9mIGFub3RoZXIgZ3JvdXAgd2VyZSB0byB0YWtlIG91ciBsaW9uIGRhbmNlIGFuZCB0dXJuIGl0IGludG8gc29tZXRoaW5nIHRoZXkgcHJvZml0IGZyb20sIEkgYmUgcGlzc2VkLiAKQW4gaW5jZW5zZWQgV2FybmUgdXNlZCBoaXMgcm9sZSBhcyBhIENoYW5uZWwgTmluZSBjb21tZW50YXRvciB0byBsYXVuY2ggYSBzcGlyaXRlZCBkZWZlbmNlIG9mIHRoZSBmb3VuZGF0aW9uIGR1cmluZyB0aGUgbHVuY2ggYnJlYWsgb2YgdGhlIEFkZWxhaWRlIFRlc3QgYWdhaW5zdCBOZXcgWmVhbGFuZCBpbiBOb3ZlbWJlci4gIldlIGdvdCBhYnNvbHV0ZWx5IG5vdGhpbmcgdG8gaGlkZSBhdCB0aGUgU2hhbmUgV2FybmUgRm91bmRhdGlvbi4gV2UgbmV2ZXIgZG9uZSBhbnl0aGluZyBpbmFwcHJvcHJpYXRlLiAKTG9jYWwgcGFyZW50aW5nIGdyb3VwcyBtYXkgYWxzbyBiZSBoZWxwZnVsLiBMb2NhbCBvcmdzIG1heSBhbHNvIGV4aXN0IHRoYXQgY2FuIHByb3ZpZGUgZnJlZSBpdGVtcy4gClplcm9zIGNvbWUgaW4gYWxsIHNoYXBlcyBhbmQgc2l6ZXMsIGF0IGFsbCBwbGFjZXMgaW4gdGhlIGRpY3Rpb25hcnksIGZvcm11bGFyeSBhbmQgbGV2ZWxzIG9mIG1pbmQuIFRoZSB6ZXJvIGNhbiBkZW5vdGUgdGhlIGZpbml0ZSwgaW5maW5pdGUgYW5kIHRoZSB0cmFuc2Zpbml0ZSwgYXMgc2ltcGxlIGJlZ2lubmluZ3MgYW5kIGVuZGluZ3MuIEluIHNldCB0aGVvcnkgemVybyBpcyB0aGUgbGVhc3QgY2FyZGluYWwgbnVtYmVyLCBpbiBwcm9wb3NpdGlvbmFsIGxvZ2ljIGl0IGRlbm90ZXMgZmFsc2l0eSwgaW4gYWJzdHJhY3QgYWxnZWJyYSBpdCBpcyBhIG5ldXRyYWwgZWxlbWVudC4gCklmIHlvdSBhc2sgYW55IENSRCBhbmltYWwgYnlsYXcgb3IgU1BDQSBvZmZpY2VyLCB0aGV5IHdpbGwgdGVsbCB5b3UgdGhleSBsZWFybiB0aGlzIGluIHRoZWlyIHRyYWluaW5nLiAKSW4gc2hvdWxkZXIgc2Vhc29ucywgSSBqdXN0IGZpbmQgdGhhdCBhIGJpdnkgd29ya3Mgc28gbXVjaCBiZXR0ZXIgdG8gY3V0IGRvd24gb24gZHJhZnRzIGFyb3VuZCB0aGUgcXVpbHQuIEJ1dCB3aXRoIHRoZSBzaW5nbGUgd2FsbCBkZXNpZ24sIHRoYXQgcGxhbiBnb2VzIG91dCB0aGUgd2luZG93LiAKQ29tYmluZSBpbmdyZWRpZW50cy4gClRoYXQgbWF5IGJlIHVuZGVyc3RhdGluZyBpdCBhIGJpdC4gSXQncyBwZXJmZWN0bHkgbm9ybWFsIGZvciBzaWJsaW5ncyB0byBmaWdodC4gCkkgZG9uIGxpdmUgaW4gYSBzdGF0ZSB3aGVyZSB3ZWVkIGlzIGxlZ2FsLiBMaWtlIG1lZGljaW5hbCBtYXJpanVhbmEgSlVTVCBiZWNhbWUgbGVnYWwgaGVyZSwgYW5kIGRvY3RvcnMgYXJlIHN1cGVyIGhlc2l0YW50IGFib3V0IGl0LiBTbyBpdCB3YXMganVzdCB0aGUgY29tcGFueSBhdHRpdHVkZSwgZGVmaW5pdGVseSBub3QgdGhlIHN0YXRlClRoZSBjb3VwbGUgYXJndWVkIGJlZm9yZSBSaWNoYXJkIHN0cnVjayBoZXIgd2l0aCBoaXMgZmlzdHMsIHRoZSBtYWxsZXQgYW5kIHRoZSBzYXcuV2hlbiBoaXMgc3RlcGRhdWdodGVyIHRyaWVkIHRvIGludGVydmVuZSwgaGUgc3RydWNrIGhlciBhcyB3ZWxsLiAKVExEUjogRnJpZW5kIDEgaW52aXRlZCBmcmllbmQgMiB0byB0aGUgbGVnZW5kYXJ5IEZhbGxvdXQgU2hlbHRlci9GYWxsb3V0IDQgYW5ub3VuY2VtZW50IGNvbmZlcmVuY2UgaW5zdGVhZCBvZiBtZSBkdWUgdG8gbGF6aW5lc3MuIEZyaWVuZCAyIGRpZG50IGV2ZW4gZ28gdG8gY29uZmVyZW5jZSBpbiB0aGUgZW5kClRoZXJlIGFyZSBodW5kcmVkcyBvZiBoYWlyIGxvc3MgcHJvZHVjdHMgb24gdGhlIG1hcmtldCB1c2VkIGFzIHJlbWVkaWVzIGFuZCB0cmVhdG1lbnRzLiBUaGUgc3VyZ2ljYWwgbWV0aG9kcyB1c2VkIGZvciBoYWlyIGxvc3MgaW5jbHVkZSBoYWlyIHRyYW5zcGxhbnRhdGlvbjsgaGFpciBwcm9kdWNpbmcgZm9sbGljbGVzIGFyZSB0YWtlbiBmcm9tIHRoZSBiYWNrIGFuZCBzaWRlcyBvZiB0aGUgaGVhZCBhbmQgaW5qZWN0ZWQgaW50byBiYWxkIG9yIHRoaW5uaW5nIGFyZWFzLiAKQW5vdGhlciBkYXJrIHRoaW5nIHRoYXQgaGFwcGVucyBpcyB3aGVuIHBlb3BsZSBnbyBtaXNzaW5nIGluIHRoZSBtYW55IGxha2VzIGluIHRoZSBiYWNrIGNvdW50cnkuIApOb3QgdG8gbWVudGlvbiBob3cgd2UgaGF2ZSB0cmF2ZWxlZCB0byBhd2F5IGdhbWVzIGxpa2UgT3JlZ29uIGFuZCBPa2xhaG9tYS4gCkhlciBvbmx5IGNsYWltIHRvIGZhbWUgd2FzIHRoYXQgc2hlIHdhcyBhIGRlc2NlbmRhbnQgb2YgQWxpY2UgS2VwcGVsLCB3aG8gYmVjYW1lIEtpbmcgRWR3YXJkIFZJSSdzIG1pc3RyZXNzIHdoZW4gaGUgd2FzIFByaW5jZSBvZiBXYWxlcy4gU28sIHdoYXQgYmV0dGVyIGljZSBicmVha2VyIGNvdWxkIHlvdSB1c2UsIHdoZW4gaW50cm9kdWNlZCB0byB0aGUgY3VycmVudCBQcmluY2Ugb2YgV2FsZXMsIHRoYW4gbWVudGlvbiB0aGUgZmFjdCB0aGF0IHlvdXIgYW5jZXN0b3JzIGdvdCBpdCBvbj8uIApUaGF0IHBhaWQgZm9yIGhlYWx0aCBiZW5lZml0cywgJDExMiwwMDAgd29ydGggb2YgRWFnbGVzIHRpY2tldHMsICQxMSw4MDMgaW4gaG9saWRheSBnaWZ0cyBib3VnaHQgZnJvbSB0aGUgdXBzY2FsZSBDb2FjaCBzdG9yZSBpbiBQaGlsYWRlbHBoaWEsIGV2ZW4gJDgsOTI1IGluIHNwYSBzZXJ2aWNlcy5PbiBGcmlkYXksIGZlZGVyYWwgbGF3IGVuZm9yY2VtZW50IG9mZmljaWFscyBzZWFyY2hlZCBMb2NhbCA5OCBoZWFkcXVhcnRlcnMgYXMgd2VsbCBhcyB0aGUgaG9tZSBvZiB0aGUgdW5pb24ncyBkeW5hbWljIGxlYWRlciwgSm9obiBKLiAKV2hlbiBpdCBjb21lcyB0byBtYXJrZXRpbmcgeW91ciBQcm8gQ2xheSBQb2tlciBDaGlwcyBidXNpbmVzcywgaXQgaXMgaW1wb3J0YW50IHRvIGtub3cgYW5kIHVuZGVyc3RhbmQgd2hhdCBhICJ0YXJnZXQiIG1hcmtldCBpcy4gCkkga25vdyBoZSBsZWF2ZXMgYW4gZW1wdGluZXNzIGluc2lkZSBvZiB5b3UgdGhhdCBjYW4ndCBiZSBmaWxsZWQuIEhlIGxvdmVkIGhhdmluZyBib24gZmlyZXMuIFNvIHNvcnJ5IHRvIGhlYXIgb2YgdGhlIGxvc3Mgb2YgeW91ciBkYWQuIEkndmUga25vd24gRnJlZCBhcyBsb25nIGFzIEkgaGF2ZSBrbm93biBhbGwgb2YgeW91LiBIZSB3YXMgYSBnb29kIG1hbiBhbmQgSSBsaWtlZCBoaW0uIEhlIHdhcyBxdWl0ZSB0aGUgcG9rZXIgcGxheWVyISEgSSBrbm93IHRoYXQgdGhlIGZvdXIgb2YgeW91IHdpbGwgYmUgdG9nZXRoZXIgYXQgdGhpcyB0aW1lIGFuZCBoZWxwIGVhY2ggb3RoZXIgd2l0aCB0aGUgaGVhbGluZyBwcm9jZXNzLiAKVUNMQSBoYXMgb3ZlciAxNTAgc2VydmljZSBtaW5kZWQgb3JnYW5pemF0aW9ucyBhbmQgZGVwYXJ0bWVudHMgdGhyb3VnaCB3aGljaCBzdHVkZW50cyBhbmQgb3RoZXIgaW5kaXZpZHVhbHMgY2FuIHB1cnN1ZSB2b2x1bnRlZXIgb3IgbGVhZGVyc2hpcCBwb3NpdGlvbnMuIFRoaXMgcGFnZSBsaXN0cyBtYW55IHdheXMgdGhlc2Ugb3JnYW5pemF0aW9ucyBwYXJ0bmVyIHdpdGggdGhlIFZvbHVudGVlciBDZW50ZXIgdG8gcHJvbW90ZSBzZXJ2aWNlLCByZWNydWl0IG5ldyB2b2x1bnRlZXJzLCBhbmQgYmUgcmVjb2duaXplZCBmb3IgdGhlaXIgZWZmb3J0cy4gTGV0IHRoZSBDZW50ZXIgaGVscCBzdXBwb3J0IHlvdXIgY2F1c2UhLiAKVGhhdCdzIHRoZSBvbmx5IGxhbmd1YWdlIHRoZXkgd2lsbCB1bmRlcnN0YW5kLi4gCkhvdyBjb3VsZCBpdCBiZSBvdGhlcndpc2Ugd2hlbiB3ZSBoYXZlIGEgZmFpciBhbW91bnQgb2YgZGF0YSBmcm9tIHNvY2lhbCBwc3ljaG9sb2dpc3RzIGxpa2UgQ2xhdWRlIFN0ZWVsZSB0aGF0IHNob3dzIHRoYXQgd2hpdGUgQW1lcmljYW5zIChldmVuIG9uZXMgd2hvIGNvbnNpZGVyIHRoZW1zZWx2ZXMgImxpYmVyYWwiIG9yICJub3QgcmFjaXN0IikgdGVuZCB0byBzZWUgcGVvcGxlIG9mIGNvbG9yIGFzICJsZXNzIHF1YWxpZmllZCIgdGhhbiB3aGl0ZXM/Ckkgd2FudCB0byBlbmQgdGhpcyBieSBzYXlpbmcgSSBkbyBub3QgaGF2ZSBhIGNvbGxlZ2UgZWR1Y2F0aW9uLiBJJ3ZlIHdvcmtlZCBpbiByZXRhaWwgbXkgZW50aXJlIGxpZmUgYW5kIG1vcmUgcmVjZW50bHkgaW4gdGhlIGxlZ2FsIGNhbm5hYmlzIGluZHVzdHJ5LiBJIGdvdCB0aXJlZCBvZiB0aGUgdW5jZXJ0YWludHkgb2YgcmV0YWlsIGFuZCBkZWNpZGVkIGl0IHdhcyB0aW1lIHRvIG1ha2UgYSBjaGFuZ2UuIApTbWFsbCBzdGFrZXMgb25saW5lIHBsYXllcnMgZmFjZSBkaWZmZXJlbnQgY2hhbGxlbmdlcy4gVHJhbnNpdGlvbmluZyBmcm9tIG9ubGluZSBwb2tlciBpbnRvIGxpdmUgY2FzaCBnYW1lcyBwcmFjdGljYWxseSBndWFyYW50ZWVzIHNtYWxsZXIgcHJvZml0cywgc2luY2UgY2FzaCBnYW1lcyBtb3ZlIG1vcmUgc2xvd2x5IGFuZCBwbGF5ZXJzIGNhbiBvbmx5IGJlIGluIG9uZSBwbGFjZSBhdCBhIHRpbWUgKG9ubGluZSwgcGxheWVycyB3ZXJlIGFibGUgdG8gcGxheSBtdWx0aXBsZSB0YWJsZXMgc2ltdWx0YW5lb3VzbHkpLiBXaXRoIGFsbCB0aGlzIGluIG1pbmQsIHBsYXllcnMgYm90aCBsYXJnZSBhbmQgc21hbGwgaGF2ZSBiZWVuIHJldGhpbmtpbmcgdGhlaXIgdm9jYXRpb25zLiBGYXJheiBKYWthLCBhIENoaWNhZ28gYmFzZWQgcHJvIHdobyBoYXMgd29uIG1vcmUgdGhhbiAkNCBtaWxsaW9uIG9ubGluZSBzaW5jZSAyMDA2LCBoYXMgc3BlbnQgbXVjaCBvZiBoaXMgbmV3Zm91bmQgZnJlZSB0aW1lIHByb21vdGluZyBhIHNpZGUgYnVzaW5lc3MgYSBjYXN0ZXIgYm9hcmQgY29tcGFueSBuYW1lZCBBeGlzIENhc3RlcmJvYXJkaW5nLiBFdGhhbiBSdWJ5LCBhIHNtYWxsZXIgc3Rha2VzIHBsYXllciBpbiBOZXcgWW9yayBDaXR5LCBoYXMgcmVkb3VibGVkIGludm9sdmVtZW50IHdpdGggUG9rZXI0TGlmZSwgYW4gb3JnYW5pemF0aW9uIGhlIGNvIGZvdW5kZWQgdG8gaG9zdCBjaGFyaXR5IHBva2VyIHRvdXJuYW1lbnRzIGFzIGZ1bmRyYWlzZXJzIGZvciBvdGhlciBub25wcm9maXRzLiBBbmQgYWZ0ZXIgdHdvIHllYXJzIG9mIHBsYXlpbmcgNDAgaG91cnMgYSB3ZWVrIG9ubGluZSAoYW5kIGVhcm5pbmcgYSByb3VnaCBhdmVyYWdlIG9mICQxLDIwMCBwZXIgd2VlayksIE1hdHQgTGVzc2luZ2VyLCAzNiwgb2YgQWxhbWVkYSwgQ2FsaWYuLCBleHBlY3RzIHRvIHRha2UgYSBmdWxsIHRpbWUgam9iIGFzIGEgZmxvb3IgbWFuYWdlciBmb3IgYSBsb2NhbCBjYXJkIHJvb20uICJPbmxpbmUgcG9rZXIgd2FzIGEgZ3JlYXQgc291cmNlIG9mIGluY29tZSBmb3IgYSB3aGlsZSwgYnV0IEkgYW0gbm90IHByZXBhcmVkIHRvIHJlYXJyYW5nZSBteSBlbnRpcmUgbGlmZSB0byBrZWVwIGl0IGdvaW5nLCIgaGUgc2F5cy4gIldpbGwgSSBnbyBiYWNrIGlmIGFuZCB3aGVuIGl0J3MgbGVnYWxpemVkIGFnYWluPyBQcm9iYWJseS4gQnV0IGlmIEkgZG9uJ3QgcGxheSBpdCBldmVyIGFnYWluLCB0aGF0J2xsIGJlIG9rYXksIHRvbzsgdGhlcmUgYXJlIHBsZW50eSBvZiBvdGhlciBvcHRpb25zIGluIHRoZSBpbmR1c3RyeS4iCjQuIFJhenogVGhpcyBnYW1lIGlzIGEgbG90IGxpa2Ugc2V2ZW4gY2FyZCBzdHVkIGV4Y2VwdCBvZiBjb3Vyc2UgdGhlIGxvdyBoYW5kIHdpbnMuIApUaGUgdHlwZSBvZiBnYW1lcyBvZmZlcmVkIGJ5IGFuIG9ubGluZSBwb2tlciBzaXRlIGlzIGFub3RoZXIgaW1wb3J0YW50IGZhY3RvciB3aGljaCBoYXMgdG8gYmUgY29uc2lkZXJlZC4gTW9zdCBvZiB0aGUgb25saW5lIHBva2VyIHNpdGVzIG9mZmVyIFRleGFzIEhvbGQgd2hpY2ggaXMgdGhlIG1vc3QgcG9wdWxhciBmb3JtIG9mIHBva2VyLiAKIkhhcHB5IGJpcnRoZGF5LCBnaXJsLCB3ZWxjb21lIHRvIHRoZSB3b3JsZCwiIGNvb3MgYSBudXJzZSBhcyBzaGUgcnVicyB0aGUgbmV3IGNoaWxkIHdpdGggYSBjbG90aC4KRmlyc3QsIEkgaGVscGVkIG15IG93biBraWRzIGdldCByZWFkeSBmb3IgdHJpY2sgb3IgdHJlYXRpbmcuIApEdWd1aWQgc3Bva2Ugd2l0aCBHTSBDYW5hZGEgUHJlc2lkZW50IFN0ZXBoZW4gQ2FybGlzbGUgYW5kIFVuaWZvciBQcmVzaWRlbnQgSmVycnkgRGlhcy4gTmVpdGhlciBhc2tlZCBmb3IgZ292ZXJubWVudCBzdXBwb3J0IHRvIGtlZXAgdGhlIEVxdWlub3ggbGluZXMgaW4gT250YXJpbywgRHVndWlkIHNhaWQsIHdoaWxlIHVyZ2luZyBib3RoIHBhcnRpZXMgdG8gcmVhY2ggYW4gYWdyZWVtZW50LgpJIGRvbiBrbm93IG9mIGFueSBtb3RpdmF0aW9uIGZvciBtaWxsaWNoYXJnZWQgZGFyayBtYXR0ZXIgbW9kZWxzLCBidXQgdGhhdCBtYXkganVzdCBiZSBteSBpZ25vcmFuY2Ugb2YgdGhvc2UgbW9kZWxzLiAKSXQncyBhbGwgdGhlIHNhbWUgd2hldGhlciB5b3UnbGwgbG9zZSB5b3VyIG1vbmV5IG9yIGtlZXAgaXQgICBhbnl3YXkgeW91IHdpbGwgcGF5IGZvciBlbnRyeS4gClNvaXQgb24gcHJlbmQgOCBzZW1haW5lcyAgcGFydGlyIGRlIGxhIGNvbmNlcHRpb24sIHNvaXQgb24gcGFybGUgZGUgMTAgc2VtYWluZXMgIHBhcnRpciBkZSBsJ2Ftbm9ycmhlIChhYnNlbmNlIGRlIHJnbGVzIDsgMiBzZW1haW5lcyBlbnRyZSBsZSBwcmVtaWVyIGpvdXIgZGVzIGRlcm5pcmVzIHJnbGVzIGV0IGxhIGZjb25kYXRpb24sIGMnZXN0ICBkaXJlIGR1IHBpYyBkJ292dWxhdGlvbiBmaXggYXUgZGVybmllciBqb3VyIGRlcyByZ2xlcyBxdWkgaW50ZXJ2aWVudCAxNCBqb3VycyBwbHVzIHRhcmQpWzFdLiAKRnVuIGZhY3Q6IEF0IHRoZSBtb21lbnQsIEpha2ltIGlzIG5vdCBhbiBhY2NlcHRhYmxlIG1pZGRsZSBuYW1lIGFjY29yZGluZyB0byBNYW5uYW5hZm5hbmVmbmQgKFRoZSBJY2VsYW5kaWMgQ29tbWl0dGVlIG9mIEh1bWFuIE5hbWVzKS4gSXQgcHJvYmFibHkgYmUgYWNjZXB0ZWQgYXMgYSBtaWRkbGUgbmFtZSBpZiBzb21lb25lIGJvdGhlcmVkIHRvIGFwcGx5IGZvciBpdC4KQWxzbyBQcmVzaWRlbnQgVHJ1bXAgYW5kIGhpcyBmYW1pbHkgcmFuIGEgbXVsdGkgYmlsbGlvbiBkb2xsYXIgT3JnYW5pemF0aW9uIGZvciBvdmVyIGZvcnR5IHllYXJzLiBIZSBpcyBub3QgZmFtb3VzIGZyb20ganVzdCBUaGUgQXBwcmVudGljZSBvciBhbnkgb3RoZXIgVFYgc2hvd3MuIEkgYWxzbyBkbyBub3QgY2FyZSBmb3IgUGFyaXMgSGlsdG9uIG5vciBLaWQgUm9jaywgYW5kIGRvbiBibGluZGx5IHZvdGUgUmVwdWJsaWNhbjsgSSB2b3RlZCBCZXJuaWUgaW4gdGhlIHByaW1hcmllcyBub3QgdGhhdCB5b3UgY2FyZSBvciBsaWtlbHkgYmVsaWV2ZSBtZS4uIApQcm9ibGVtIGlzIHRoYXQgc2hlIGNoYXJnaW5nIHVzIGZvciBoZXIgdGltZSwgcmF0aGVyIHRoYW4gc2VydmljZS9kZWxpdmVyYWJsZXMuIEFnYWluLCBpdCBhbGwgcmVhbGx5IGZhbGxzIGJhY2sgdG8gdGhlIGJpZyBpc3N1ZSB0aGF0IHdlIGRpZG4gY2xlYXJseSBkZWZpbmUgd2hhdCB3ZSBleHBlY3RlZCBmcm9tIGhlciwgYW5kIEkgY29tcGxldGVseSBvd24gdGhhdC4gCkEgY2VzIHZuZW1lbnRzIG1hamV1cnMgcydham91dGVyb250IHVuZSBzb2l4YW50YWluZSBkZSBwcm9qZXRzIG9yaWdpbmF1eCwgcGx1cyBkJ3VuIHBhciBzZW1haW5lLCBsYWJvcnMgcGFyIGRlcyBjcmF0ZXVycyBsb2NhdXggZW4gY29sbGFib3JhdGlvbiBhdmVjIGRlcyBwYXJ0ZW5haXJlcyBkZSB0b3V0ZSBsJ0V1cm9wZS5VbiBzcGVjdGFjbGUgaG9tbWFnZSBhdXggcHJlbWllcnMgcGFzIHN1ciBsYSBMdW5lUGFybWkgbGVzIG5vbWJyZXV4IGludml0cyBkZSBsJ2FubmUsIGxlIGNvbXBvc2l0ZXVyIGJyaXRhbm5pcXVlIEJyaWFuIEVubywgcXVpIHByc2VudGVyYSBsZSAxOCBqdWlsbGV0IGVuIGF2YW50IHByZW1pcmUgbW9uZGlhbGUgc29uIG5vdXZlYXUgc3BlY3RhY2xlLCAiQXBvbGxvIHNvdW5kdHJhY2siLCBjb25zYWNyIGF1IGNpbnF1YW50ZW5haXJlIGRlcyBwcmVtaWVycyBwYXMgZGUgbCdob21tZSBzdXIgbGEgTHVuZS4gIk5vdXMgdm91bG9ucyBxdWUgbGEgcGVyc29ubmUgcXVpIGRjaWRlIGRlIHZlbmlyICBNYXRlcmEgdml2ZSB1bmUgZXhwcmllbmNlIiwgZXhwbGlxdWUgUGFvbG8gVmVycmksIGRpcmVjdGV1ciBhcnRpc3RpcXVlIGRlIE1hdGVyYSAyMDE5LiAiUGVyc29ubmUgIE1hdGVyYSBuZSBzZXJhIHVuIHNpbXBsZSB0b3VyaXN0ZSwgbWFpcyBpbCBhdXJhIGxhIHBvc3NpYmlsaXQgZGUgcydpbnNyZXIgZGFucyBsYSBkaW1lbnNpb24gY29tbXVuYXV0YWlyZSBxdWkgY2FyYWN0cmlzZSBNYXRlcmEgMjAxOSIsIGEgYWpvdXQgY2VsdWkgcXVpIGZ1dCBsb25ndGVtcHMgcmVzcG9uc2FibGUgZGUgbGEgcHJlc3RpZ2lldXNlIEZvaXJlIGR1IGxpdnJlIGRlIFR1cmluLlVuIHBhc3NlcG9ydCAgMTkgZXVyb3MgcG91ciBsZXMgY2l0b3llbnMgZGUgTWF0ZXJhTGVzICJjaXRveWVucyB0ZW1wb3JhaXJlcyIgZGUgTWF0ZXJhIGRldnJvbnQgcGF5ZXIgMTkgZXVyb3MgcG91ciB1biBwYXNzZXBvcnQgdmFsYWJsZSB1biBhbiBxdWkgbGV1ciBwZXJtZXR0cmEgZCdhc3Npc3RlciAgdG91cyBsZXMgdm5lbWVudHMuIApUaGlzIGdhdmUgaXQgYSBraW5kIG9mICJmaXJzdCBtb3ZlciIgc3RhdHVzIGluIHRvd24sIGFuZCBhcyBIYWxldGt5IHNheXMsIHRoZSBjaHVyY2ggZHJldyBuZXcgY29uZ3JlZ2FudHMgd2hvIHdlcmUgbG9va2luZyBmb3IgYSBjaHVyY2ggdGhhdCB3YXMgaW5jbHVzaXZlIGFuZCBmb2N1c2VkIG9uIHNvY2lhbCBqdXN0aWNlLgpUaGVuIEknbGwgcGljayBhIG5ldyBudW1iZXIuIENvbnN0YW50bHkgc3RyaXZpbmcgdG93YXJkIHBlcnNvbmFsIGdyb3d0aCwgSSB0cnkgdG8gZ2V0IHRocm91Z2ggYSBib29rIHBlciB3ZWVrIG9uIGJ1c2luZXNzLCBpbnZlc3RpbmcsIG9yIHNlbGYgZGV2ZWxvcG1lbnQuIApJIHJlYWxseSBlbmpveSBsb29raW5nIGF0IG9sZCBwaG90b3Mgd2l0aCBhIG1hZ25pZnlpbmcgZ2xhc3MsIGZpbmRpbmcgdGhlIHBpY3R1cmVzIHdpdGhpbiB0aGUgcGljdHVyZSwgdW50aWwgaXQgaXMgbWljcm8gaW1hZ2VzIGFsbCB0aGUgd2F5IGRvd24uIEl0IGlzIG9kZCAiY29taW5nIG91dCIgb2YgdGhlbSwgc29tZXRpbWVzLCBhbmQgdGhlbiBsb29raW5nIGF0IHRoZSBmdWxsIGltYWdlLCBhbmQgaW4gc29tZSBzZW5zZSBmZWVsaW5nIHV0dGVybHkgYXQgYSBsb3NzIHRvIHRyeSBhbmQgZmluZCB3aGVyZSB5b3UgaGFkIGp1c3QgYmVlbiBpbiBncmVhdCBkZXRhaWwuIApUaGVuIGV4cGxhaW5lZCwgYXV0aXNtIGlzIG9mdGVuIGZpcnN0IGRpYWdub3NlZCB3aGVuIHRoZSBjaGlsZCBpcyAzIDQgeWVhcnMgb2YgYWdlLCBhIG1hbHByYWN0aWNlIGNsYWltIGNvdWxkIGFyaXNlIDQgNSB5ZWFycyBmcm9tIHRvZGF5LCBhbGxlZ2luZyB0b2RheSBvYnN0ZXRyaWNpYW4gZGlkIG5vdCBmb2xsb3cgdGhlIEFtZXJpY2FuIEFjYWRlbXkgb2YgUGVkaWF0cmljaWFuIGFkdmljZSwgd2FzIHVubWluZGZ1bCBvZiB0aGUgYnJhaW4gZGFtYWdlL3ZpdGFtaW4gRCByaXNrLCBhbmQgZGlkIG5vdCBkbyBhIHByb3BlciByaXNrL2JlbmVmaXQgYXNzZXNzbWVudC4gV2hhdCBzZWVtZWQgb2J2aW91cyB0byBtZSwgSSB3b25kZXJlZCBpZiBpbiAyMDE0IG1heSBhc2sgdGhlbXNlbHZlcyB3aGF0IHRoZSByaXNrIHdhcyBvZiBkaWFnbm9zaW5nIGFuZCB0cmVhdGluZyBnZXN0YXRpb25hbCB2aXRhbWluIEQgZGVmaWNpZW5jeSBpbiBwcmVnbmFudCB3b21lbiBpbiAyMDEwLiAKVXNpbmcgdGhpcyBhcHAsIHlvdSBjYW4gYWxzbyBjaGVlciBhbmQgdGF1bnQgZnJpZW5kcy4gCkkgaG9wZSB0aGF0IHRoaXMgd2FzIGhlbHBmdWwgZm9yIHlvdSwgeW91IGFyZSBub3QgYWxvbmUgaW4gdGhpcy4gClByZXNpZGVudCBEb25hbGQgVHJ1bXAgbGFzdCB3ZWVrIGRlZmVuZGVkIHRoZSBjb21wYW55IGFmdGVyIGEgdmlkZW8gc2hvd2luZyBkb3plbnMgb2YgU2luY2xhaXIgbmV3cyBhbmNob3JzIHJlYWRpbmcgYSBzY3JpcHQgZXhwcmVzc2luZyBjb25jZXJuIGFib3V0IHN0b3JpZXMgYW5kIG5ld3Mgc3RvcmllcyBwbGFndWluZyB0aGUgY291bnRyeSBhcHBlYXJlZCBvbiBUViBuZXdzIHJlcG9ydHMgYW5kIGNpcmN1bGF0ZWQgb25saW5lLiBUcnVtcCBzYWlkIHJpdmFsIFRWIHN0YXRpb25zIHdlcmUgbWVyZWx5IGFib3V0IHRoZSBjb21wZXRpdGlvbiBhbmQgcXVhbGl0eSBvZiBTaW5jbGFpciBCcm9hZGNhc3QuIApFYWNoIHllYXIsIEhvdXNlIG9mIENvbW1vbnMgQWRtaW5pc3RyYXRpb24gc2VsZWN0cyA0MCBzdHVkZW50cyBmcm9tIENFR0VQcyBhbmQgaGlnaCBzY2hvb2xzIGFjcm9zcyBDYW5hZGEgdG8gcGFydGljaXBhdGUgaW4gYSBkZWRpY2F0ZWQgUGFnZSBQcm9ncmFtICAgc3R1ZGVudHMgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gd2l0bmVzcyB0aGUgbGVnaXNsYXRpdmUgcHJvY2VzcyBmaXJzdGhhbmQgYW5kIHdvcmsgb24gYSBwYXJ0IHRpbWUgYmFzaXMgZHVyaW5nIHRoZWlyIGZpcnN0IHllYXIgb2Ygc3R1ZHkgYXQgYSB1bml2ZXJzaXR5IGluIHRoZSBOYXRpb25hbCBDYXBpdGFsIHJlZ2lvbgpBbHNvIGlmIGhlIGhhcyBhIHZhbHVlIGhhbmQgbGlrZSBhIHNldCBvciBtYXliZWUgb3ZlcnBhaXIgaGUgd2lsbCBsaWtlbHkgc2hvdmUgaGltc2VsZi4gQnkgZG9uayBzaG92aW5nIHlvdXIgcmVwcGluZyBhIG1pc3NlZCBmbHVzaCBkcmF3IGFuZCBob3BpbmcgdG8gZ2V0IGNhbGxlZCBieSB3aGF0IGV4YWN0bHk/LiAKU28gaW4gT2N0b2JlciBPYmFtYSBrbmV3IGhlIHdvdWxkIGVzY2FsYXRlIHRoZSB3YXIgaW4gQWZnaGFuaXN0YW4uIE9jdG9iZXIhIEZyb20gdGhlcmUgaXQgd2FzIGp1c3QgYmVhbiBjb3VudGluZyAgMTAsMDAwIG9yIDQwLDAwMCBvciAxMDAsMDAwIHRyb29wcz8KRXZlcnkgY29tbWVudCBvbiBhIHBvc3QgaGFzIHRvIGFzc3VtZSB0aGUgc2VuZGVyIHRvIGJlIGNyZWVweSwgcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHRoZSBPUCBtYXkgYmUgbWlzdGFrZW4uClRoZSBQbGF5ZXIgc3RhdGlzdGljcyBpcyBjdXN0b21pemVkIGFuZCBvbmx5IGF2YWlsYWJsZSBmb3IgcHJpdmF0ZSB2aWV3aW5nIHdoaWNoIG1lYW5zIHRoYXQgb25seSB0aGF0IHBlcnNvbiBjb3VsZCBoYXZlIGFjY2VzcyBvbiBpdC4gQW5vdGhlciBzcGVjaWFsIGZlYXR1cmUgb2YgUG9rZXIgU3RhciB3b3VsZCBiZSBoYW5kIGhpc3RvcmllcyB3aGljaCBlbmFibGUgYSBwbGF5ZXIgdG8gcmVjYWxsIGFsbCB0aGUgdmFsdWVzIGFuZCBhY3Rpb24gdGFrZW4gZnJvbSB0aGUgcGFzdCBwbGF5LiAKSSBkZWNpZGVkIHRvIGRvIHRoZSB0cmlwIGJ5IG15c2VsZiBiZWNhdXNlIGRpZG4gd2FudCB0byBkZXBlbmQgb24gYW5vdGhlciBwZXJzb24gd2FudGluZyB0byBzdGljayB0byBteSBleGFjdCBpdGluZXJhcnkgb3IgY2FsZW5kYXIgKHRoZSBlbnRpcmUgdHJpcCB0b29rIGEgZmV3IG1vbnRocykgYW5kIHBsdXMgSSB0aGUga2luZCBvZiBwZXJzb24gd2hvIGFsd2F5cyBtb3JlIGNvbmNlcm5lZCBvbiB3aGF0IG90aGVycyBhcmUgdGhpbmtpbmcgYW5kL29yIGZlZWxpbmcgc28gaXQgd2FzIGZyZWVpbmcgdG8gYmUgYWJsZSB0byBqdXN0IGNvbmNlbnRyYXRlIG9uIG15c2VsZiBpbnN0ZWFkIG9mIHdvcnJ5aW5nIGlmIHRoZSBwZXJzb24gcmlkaW5nIHNob3RndW4gd2FzIGFjdHVhbGx5IGVuam95aW5nIHRoZW1zZWx2ZXMuIApPcmFuZ2UgYmxvc3NvbSBvaWwgd2FzIGV4dHJhY3RlZCBhbmQgY29tYmluZWQgd2l0aCBwcmVzc2VkIGFsbW9uZCBwdWxwIHRvIG1ha2UgdGhlIHZlcnkgcG9wdWxhciBwZXJmdW1lIG9pbnRtZW50IHBvbWFkZXMuIFBvbW1lIGQgb24gdGhlIG90aGVyIGhhbmQsIHdlcmUgc2NlbnRlZCBiYWxscyBvZiBhbWJlcmdyaXMsIHNwaWNlcywgaG9uZXksIGFuZCB3aW5lIHRoYXQgaHVuZyBmcm9tIHRoZSBiZWx0IGluIGEgc21hbGwsIHBlcmZvcmF0ZWQgY29udGFpbmVyLiBFdmVuIHRoZSBzbGlnaHRlc3QgbW92ZW1lbnQgb2YgYSBza2lydCB3b3VsZCBzdXJyb3VuZCBvbmUgaW4gZnJhZ3JhbmNlLiAKSSBkaWRuIGtub3cgd2hhdCB0byBkbyB0aGVyZSBhbmQgbXkgZXggd2FzIG5lYXIgaGlzIHN0b3AgYW55d2F5IHNvIEkgd29rZSBoaW0gdXAgYW5kIGhlIGhhZCB0byBnZXQgZG93biB0aGUgdmFuLiAKSSB0aGluayBiZWNhdXNlIHRoZXkgZmFyIGZyb20gY29udHJpdmVkLiBJcyBsaXRlcmFsbHkgdGhlIG1vc3Qgb2J2aW91cyB0aXRsZSBmb3IgdGhlIEhhbiBTb2xvIG1vdmllLCBhbmQgT25lIG1ha2VzIHNlbnNlIGJlY2F1c2UgKHVubGVzcyBteSBtZW1vcnkgZmFpbHMgbWUpIHdlIG1lZXQgUm9ndWUgVHdvIGluIEVTQiBidXQgbmV2ZXIgc2F3IFJvZ3VlIE9uZSBpbiBhbnkgb2YgdGhlIG1vdmllcy4gQm90aCBhbmQgT25lIGZlZWwgY29tcGxldGVseSBuYXR1cmFsLiAKSW4gd2hhdCBJIHRoaW5rIHdhcyBoaXMgZmluYWwgaW50ZXJ2aWV3LCBoZSBkaXJlY3RseSBzYWlkIHRoYXQgdGhlIGFkbWluaXN0cmF0aW9uIGhhZCBmYWlsZWQgdmV0ZXJhbnMgaW4gdGhlIGVuZCB3aXRoIHRoZWlyIGhhbmRsaW5nIG9mIFZBIGhlYWx0aCBpc3N1ZXMgKGxpa2UgYWxsIGhhdmUsIGJ1dCBoZSBwcm9taXNlZCB0byBpbXByb3ZlKS4gSGlzIHJldHJvc3BlY3RpdmUgb24gT2JhbWEncyBwcmVzaWRlbmN5IHdhcyB0aGF0IGl0IGNvdWxkIGFuZCBzaG91bGQgaGF2ZSBkb25lIG1vcmUsIGFuZCB0aGF0IHRvbyBtYW55IHBlb3BsZSB3ZXJlIGh1cnQgbmVlZGxlc3NseS4gVGhhdCdzIGp1c3Qgd2hhdCBJIGdlbmVyYWxseSByZW1lbWJlciAgIHRoZXJlJ3MgbW9yZSwgSSdtIHN1cmUuLiAKS2lkIHJlZ2FyZHMgSmVycnkgUnVzc2VsbCBHZW5lcmFsIE1hbmFnZXIua25vdyBiZXR0ZXIgYm9vayBiZXR0ZXIgZ28gYmV0dGVyVHJpcEFkdmlzb3IgTExDIGlzIG5vdCByZXNwb25zaWJsZSBmb3IgY29udGVudCBvbiBleHRlcm5hbCB3ZWIgc2l0ZXMuLiAKUGxhdXNpYmxlIGRlbmlhYmlsaXR5IGlzIG1vcmUgZGVjaXNpdmUgdGhhbiBmaXJlcG93ZXIgaW4gdGhlIGluZm9ybWF0aW9uIGFnZSwgYW5kIHRoaXMgaXMgZHJpdmluZyB3YXIgaW50byB0aGUgc2hhZG93cy4gUnVzc2lhIGNvdWxkIGhhdmUgYmxpdHprcmllZ2VkIHRocm91Z2ggVWtyYWluZSwgYnV0IGluc3RlYWQgdXNlZCBjb3ZlcnQgbWVhbnM6IHNwZWNpYWwgZm9yY2VzLCAibGl0dGxlIGdyZWVuIG1lbiwiIHByb3h5IG1pbGl0aWFzIGFuZCBtZXJjZW5hcmllcyBhbGwgd2hpbGUgd2FnaW5nIGEgZGlzaW5mb3JtYXRpb24gY2FtcGFpZ24uIFRoZSBLcmVtbGluJ3MgImtpbGwgd2l0aCBjb25mdXNpb24iIHN0cmF0ZWd5IHdvcmtlZC4gQnkgdGhlIHRpbWUgdGhlIGludGVybmF0aW9uYWwgY29tbXVuaXR5IGZpZ3VyZWQgaXQgb3V0LCBSdXNzaWEgY29ucXVlc3Qgb2YgQ3JpbWVhIHdhcyBhIGZhaXQgYWNjb21wbGkuIE1vcmVvdmVyIGhvdyBjYW4gdGhlIFdlc3QgcmFsbHkgdGhlIHdvcmxkIHRvIGRlZmVuZCBVa3JhaW5lIHdoZW4gdGhlIGJhc2ljIGZhY3RzIGFyZSBpbiBxdWVzdGlvbj8gSXQgY2FuJ3QuIFdhciBpcyBiZWNvbWluZyBlcGlzdGVtb2xvZ2ljYWw6IHRlbGxpbmcgd2hhdCBpcyByZWFsIGZyb20gZmFrZSB3aWxsIGRlY2lkZSB3aW5uZXJzIGFuZCBsb3NlcnMuClRoZXkgd2VyZSBzbyBuYXR1cmFsLiBOb3QgdGhhdCBpIHdvdWxkIGNhcmUgb25lIHdheSBvciBhbm90aGVyLk15IHBvaW50IGlzLiAKQXMgbGVhZGVyIG9mIHRoZSBsb25nIHJ1bGluZyBMaWJlcmFsIERlbW9jcmF0aWMgUGFydHkgKExEUCksIEFiZSB3YXN0ZWQgbm8gdGltZSBpbiBpbXBsZW1lbnRpbmcgaGlzIHBsYXRmb3JtIG9mIGFnZ3Jlc3NpdmUgbW9uZXRhcnkgZWFzaW5nIGFuZCBzdGltdWx1cyBzcGVuZGluZyBhaW1lZCBhdCBqb2x0aW5nIEphcGFuIG91dCBvZiBpdHMgdHdvIGRlY2FkZXMgbG9uZyBlY29ub21pYyBzbHVtcC4gVGhlIHdlYWtlbmVkIGVjb25vbXkgaGFzIGJlZW4gYWNjb21wYW5pZWQgYnkgY3JpcHBsaW5nIGRlZmxhdGlvbiB0aGF0IGhhcyBkaXNjb3VyYWdlZCBjb25zdW1wdGlvbiBhbmQgaW52ZXN0bWVudCBhbmQgd2VpZ2hlZCBkb3duIHdhZ2VzIGFuZCBncm93dGguIEFiZSBuZWVkcyBmYXN0IHJlc3VsdHMgdG8gZW5zdXJlIGEgc3Ryb25nIHNob3dpbmcgaW4gdXBwZXIgaG91c2UgcGFybGlhbWVudGFyeSBlbGVjdGlvbnMgaW4gSnVseSB0aGF0IHdvdWxkIGdpdmUgdGhlIExEUCB0aGUga2luZCBvZiBlbGVjdG9yYWwgbWFuZGF0ZSBpdCB3YW50cyB0byBwdXNoIGFoZWFkIHdpdGggZWNvbm9taWMgcmVmb3JtcyBhcyB3ZWxsIGFzIG90aGVyIHByaW9yaXRpZXMgb24gaXRzIGNvbnNlcnZhdGl2ZSBhZ2VuZGEuCjUpIFNjYWxwIG1hc3NhZ2UhIEkgbWFzc2FnZSByb3NlbWFyeSBlc3NlbnRpYWwgb2lsIGludG8gbXkgc2NhbHAgMSAyIHRpbWVzIGEgd2Vlay4gVGhpcyBpbmNyZWFzZXMgY2lyY3VsYXRpb24gaW4gdGhlIHNjYWxwIGFuZCBhcHBhcmVudGx5IHN0aW11bGF0ZXMgaGFpciBncm93dGguIFBsdXMsIGl0IGZlZWxzIGdvb2QuCkZhciBmcm9tIG5hdmVsIGdhemluZyBvciBuYXJyb3cgc2VsZiBpbmR1bGdlbmNlLCB0aGUgZXNzZW5jZSBvZiBtaW5kICAuIExpZmUgaW4gYSBtZWFuaW5nZnVsIHdheS4gVGhlIHdpc2RvbSBvZiBhIG1lYW5pbmdmdWwgbGlmZSB0aGUgZXNzZW5jZSBvZiBtaW5kZnVsbmVzcy4gCk1vcmUgdGhhbiBhIFN0YXljYXRpb24sIGEgUGxheWNhdGlvbi4gV2luIGJpZyBhdCB0aGUgYmVzdCBzbG90cyBhbmQgdGFibGVzIGluIHRoZSB2YWxsZXkuIEluZHVsZ2UgaW4gdW5iZWxpZXZhYmxlIGRpbmluZy4gUGFydHkgYWxsIG5pZ2h0IGluIG91ciB1bHRyYSBsb3VuZ2VzLiBSZXNlcnZhdGlvbnMgY2FuIGJlIG1hZGUgYnkgY2FsbGluZyA1MjAgNzk2IDQ5MDAgYW5kIGFza2luZyBmb3IgdGhlIENveW90ZXMgSG93bCByYXRlLgpUaGUgc2Vpa28gc2FyeTA1NyBpcyBsZXNzIHRoYW4gJDMwMC4gCk11c2ljOiBDaGVjayBvdXQgVGhlIERlYXIgSHVudGVyIEFjdHMgYWxidW1zLCBmb3Igb25lIHBsb3Qgc3ByZWFkIG92ZXIgbXVsdGlwbGUgYWxidW1zIHdpdGggc29tZSBvZiB0aGUgYmVzdCBtdXNpYyB5b3UgZXZlciBoZWFyZC4gVGhvdWdoIEkgc3VnZ2VzdCBzdGFydGluZyB3aXRoIEFjdCBJViAoaGVhZHBob25lcyBtYW5kYXRvcnkgSU1PKSB0aGVuIGdvaW5nIGJhY2sgdG8gQWN0IDEgaWYgdGhlaXIgbXVzaWMgaG9va3MgeW91LiBPdGhlciBtdXNpYyB3b3J0aCBjaGVja2luZyBvdXQ6IEF5cmVvbiBpcyBvbmUgYmlnIG1ldGFsIG9wZXJhIHB1dCB0b2dldGhlciBieSBvbmUgZ3V5IGJ1dCBmaWxsZWQgd2l0aCB0b25zIG9mIG11c2ljaWFucyB0YWtpbmcgb24gcm9sZXMgYW5kIHBlcmZvcm1pbmcgYWNyb3NzIHRoZSBhbGJ1bXMuLiAKSSBhbHNvIHN0YXJ0ZWQgd29ya2luZyBvdXQgd2l0aCB3ZWlnaHRzIHRocmVlIHRpbWVzIGEgd2VlayBhcm91bmQgdGhlIHNhbWUgdGltZSwgYW5kIHJlY2VudGx5IHVwcGVkIGl0IHRvIGZvdXIgdGltZXMgYSB3ZWVrLiBNeSBjYXJkaW8gY29uc2lzdHMgb2YgZ29pbmcgb24gMzBtaW4gNjBtaW4gd2Fsa3MgYXQgY291cGxlIG9mIHRpbWVzIGEgd2Vlay4uIApXZSByZXZlbCBpbiBiZWluZyBhYmxlIHRvIHNob3cgb3VyIHBsYXllcnMsIGZpcnN0IGhhbmQsIHdoYXQgdGhlIHJveWFsIHRyZWF0bWVudCBlbnRhaWxzLCBhcyBpdCBnaXZlcyB1cyBpbW1lbnNlIHBsZWFzdXJlIHRvIHNlZSBvdXIgY3VzdG9tZXJzIGVuZ2FnZSBpbiBmdW4gZmlsbGVkIGdhbWVwbGF5IGV2ZXJ5IGRheS4gV2hlbiBhIHBsYXllciBkZWNpZGVzIHRvIHJlZ2lzdGVyIHdpdGggMzJSZWQsIHRoZXkgYXJlIHF1aW50ZXNzZW50aWFsbHkgc2lnbmluZyB1cCBmb3IgZnVsbCBhY2Nlc3MgdG8gYSB3aG9sZSBuZXcgd29ybGQgb2YgdG9wIG5vdGNoIGdhbWVwbGF5LCBmYW50YXN0aWMgcHJvbW90aW9ucyBhbmQgbWluZCBibG93aW5nIGJvbnVzZXMuIApOaWMgUGl6em9sYXR0byBwdXQgdGhlIHNpbmNlcml0eSBhbmQgcXVhbGl0eSBvZiBUcnVlIERldGVjdGl2ZSdzIHN0b3J5IG92ZXIgbXVsdGlwbGUgc2Vhc29ucyBvZiB0aGUgc2hvdywgYXNzZXJ0aW5nIHRoYXQgYSBzdHJpY3QgOCBlcGlzb2RlIGZvcm1hdCB3b3VsZCBiZSBjb25kdXNpdmUgdG8gYSBzdHJvbmcgdGhpcmQgYWN0LiBBbmQganVkZ2luZyBieSB0aGUgY3JpdGljYWwgY2xhaW0gaGUncyByZWNlaXZlZCAgIGhpcyBjcmVhdGlvbiBpcyBiZWluZyB0YWxrZWQgYWJvdXQgaW4gdGhlIHNhbWUgYnJlYXRoIGFzIFRoZSBXaXJlICAgb25lIGlzIGluY2xpbmVkIHRvIHRydXN0IHRoZSBtYW4gd2hvIHJpc2tlZCBldmVyeXRoaW5nIHRvIHdyaXRlIHRoZSBuZXcgSEJPIGFudGhvbG9neSBzZXJpZXMuLiAKVGhlcmFwaXN0cyBjYW4gb25seSBiaWxsIGluc3VyYW5jZSBjb21wYW5pZXMgZm9yIHNlcnZpY2VzIGlmIHRoZXkgaGF2ZSBhIHByZXNjcmlwdGlvbjsgb3RoZXJ3aXNlIHRoZXkgY29sbGVjdCBmZWVzIGRpcmVjdGx5IGZyb20gcGF0aWVudHMuIApXZSB3b3VuZCBvdXIgd2F5IHRocm91Z2ggbmVpZ2hib3Job29kcywgc3RvcHBpbmcgdG8gYXNrIG1lbiBvbiBiaWtlcyB3aXRoIGljZSBjcmVhbSBjYXJ0cywgdGhlIG1hc3MgcXVhbnRpdHkgb2YgcGVvcGxlIGp1c3QgbG9hZmluZyBhbG9uZ3NpZGUgdGhlIHN0cmVldHMuIFVuZW1wbG95bWVudCBpbiBOaWNhcmFndWEgaXMgYXJvdW5kIDUwJSBmcm9tIHdoYXQgSSd2ZSByZWFkLCBhbmQgZnJvbSB3aGF0IEkndmUgc2VlbiwgSSBiZWxpZXZlIGl0LiBXZSBwYXNzZWQgd2hhdCBjYW4gb25seSBiZSBkZXNjcmliZWQgYXMgc2hhbnR5cywgd2l0aCBjb3JydWdhdGVkIHRpbiByb29mcy4gCkRvbmMgcG91cnF1b2kgc29udCBlbGxlcyBsID8gTG9ycyBkJ3VuIGNoYW5nZSBhdmVjIGxlcyBlbXBsb3lzIHByc2VudHMsIG5vdXMgYXBwcmVub25zIHF1J2VsbGVzIGFwcGFydGllbm5lbnQgZW4gZmFpdCAgZCdhdXRyZXMgc29jaXRzIGRlIGdlc3Rpb24gZGUgbWFyY2ggKGNvdWxldXIgZGlmZnJlbnRlLCBub3VzIGF2b25zIHB1IGxlIGNvbnN0YXRlciBzdXIgbGUgY2FtaW9uKS4gQWluc2kgZGVzIGNvbW1lcmFudHMgcHJlbmRyYWllbnQgZGVzIGJhbm5lcyBkZSBjaSBkZSBsLCBldCBmYXV0ZSBkZSBwbGFjZSBkYW5zIGxldXJzIGNhbWlvbnMgY2VydGFpbnMgam91cnMgb3UgcG91ciBjYXVzZSBkZSB0cm9wIG1hdXZhaXMgdGF0LCBpbHMgbGVzIGFiYW5kb25uZXJhaWVudC4gSWwgZmF1ZHJhaXQgZG9uYyBxdWUgY2Ugc29pdCBsZSBib24gZ2VzdGlvbm5haXJlIHF1aSB2aWVubmVudCBsZXMgcmVjaGVyY2hlciAhLiAKRnJvbSBGYWNlYm9vayBUaGUgYmVzdCB3YXkgdG8gZ2V0IGxvYWRzIG9mIHBva2VyIGNoaXBzIG9uIGZhY2Vib29rIGlzIHRvIGFzayBvdGhlciBwbGF5ZXJzIHRvIGRvbmF0ZSB0aGVpciBjaGlwcyB0byB5b3Ugb3IgYnV5IHRoZW0gZnJvbSB2YXJpb3VzIHNpdGVzIHdoaWNoIG1heSBiZSB1bnRydXN0d29ydGh5LiBPbmUgd2F5IHRvIGdldCBmcmVlIGZhY2Vib29rIHBva2VyIGNoaXBzIHdvdWxkIGJlIHRvLiBXSU4gdGhlbSEgWWVzLCB0aGUgZ2FtZSBub3cgZ2l2ZXMgYSBsb3QgbW9yZSBjaGFuY2VzIHRvIHdpbiBwb2tlciBjaGlwcywgYW5kIGEgbG90IG1vcmUgdGhhbiBiZWZvcmUuIApJIGhhdmUgaGVhcmQgbXVsdGlwbGUgc3RvcmllcyBvZiBmb3JlaWduZXJzIGhhdmluZyBpbW1pZ3JhdGlvbiBjb21lIHVwIHRvIHRoZW0gYW5kIGZpbmUgdGhlbSAxMDBrIHRoYi4gSWYgYSBUaGFpIHRha2VzIGEgcGljdHVyZSBvZiB5b3UgZG9pbmcgc29tZSB0eXBlIG9mIGZvcmJpZGRlbiBmb3JlaWduZXIgd29yaywgZXZlbiB3aXRoIGEgd29yayBwZXJtaXQsIHlvdSBtYXkgZ2V0IGNoYXJnZWQuIApJZiB0aGV5IGtlZXAgdGFraW5nIHRoZWlyIGZpbmdlcnMgb3V0c2lkZSB0aGUgYm93bCBvciBhYm92ZSB0aGUgYWNldG9uZSBsaXF1aWQsICh3aGljaCB3aGF0IG1vc3Qgd29tZW4gZG8gdG8gcGVlayBhdCB0aGVpciBmaW5nZXJzLiBMZXQncyBwdXQgaXQgdGhpcyB3YXksIGtlZXAgcGVla2luZyBhdCB0aGUgZmluZ2VycyBkb24ndCBoZWxwIHNwZWVkaW5nIHVwIHRoZSBwcm9jZXNzLikgdGhlIGFjcnlsaWMgd2lsbCBoYXJkZW4gYWdhaW4gdmVyeSBxdWlja2x5LiAKSGUgYm91Z2h0IGEgRm9yZCBkZWFsZXJzaGlwIGluIFNjaGF1bWJ1cmcsIElsbC4sIGZyb20gQXV0b05hdGlvbiBJbmMuIEhpcyBvd24gSG9uZGEgc3RvcmUgYWNyb3NzIHRoZSBzdHJlZXQgd2lsbCBtb3ZlIHRvIGEgbmV3IHNob3dyb29tIG9uIDExIGFjcmVzIG5lYXJieSwgYW5kIGhlIHdpbGwgcmVmdXJiaXNoIHRoZSBjdXJyZW50IGRlYWxlcnNoaXAgZm9yIGFuIGV4aXN0aW5nIEtpYSBmcmFuY2hpc2UuIEFuZCBSb2hybWFuIGhhcyBuZXcgc2hvd3Jvb21zIGFib3V0IHRvIG9wZW4gaW4gSW5kaWFuYSB0aGF0IHdpbGwgY29udmVydCBzb21lIGR1YWwgc3RvcmVzIGludG8gc2luZ2xlIGZyYW5jaGlzZSBvcGVyYXRpb25zLgpOb3RoaW5nIGlzIG1vcmUgZnJ1c3RyYXRpbmcgdGhhbiB3YXRjaGluZyBnb29kIGZvb2QgZ28gYmFkLiBCcm93biB3cml0ZXMgdGhhdCBnZXR0aW5nIHNtYXJ0IGFib3V0IHVzaW5nIHlvdXIgZnJlZXplciBhbGxvd3MgeW91IHRvIG1ha2UgbGFyZ2UgYmF0Y2hlcyBvZiBmb29kIGF0IG9uY2UsIGFuZCBzdHJldGNoIHlvdXIgY29va2luZyBlZmZvcnRzIG91dCBvdmVyIGRheXMgb3Igd2Vla3MuClRoZXkgYmVhdCBoaW0gcmVwZWF0ZWRseSBiZWZvcmUgdGhleSBsZWZ0Li4gClRoZSBLYW1sb29wcyBUYXJnZXQgU3BvcnRzIEFzc29jaWF0aW9uIHJlcXVpcmVzIGFsbCBtZW1iZXJzIHRvIHRha2UgYSBzYWZldHkgb3JpZW50YXRpb24gY291cnNlIGFuZCBhYmlkZSBieSBhIG5pbmUgcGFnZSBzYWZldHkgcG9saWN5LCB0byAiZW5zdXJlIHRoYXQgYWxsIHNob290ZXJzIGJlY29tZSBmYW1pbGlhciB3aXRoIHRoZSBDbHViIHJ1bGVzIG9mIHNhZmUgc2hvb3RpbmcsIiB0aGUgcG9saWN5IHN0YXRlcy4KRHIuIExlaG1hbm4gZG9lcyBub3QgaGF2ZSBhIGNhciBhbmQgd2Fsa3MgZXZlcnl3aGVyZSwgYW5kIGFsdGhvdWdoIGhlIGxpdmVzIGluIFdhc2hpbmd0b24sIGEgY2F1bGRyb24gb2Ygc3RyZXNzIGluZHVjdGlvbiwgaGUgZGVzY3JpYmVzIGhpbXNlbGYgYXMgYSAicHJldHR5IGNhbG0gZ3V5LiIKSWYgdGhleSBhcmUgbm90IGNvbmZpcm1lZCB0ZXJyb3Jpc3RzIHRoZW4geWVzIGl0cyBiYWQgaG93ZXZlciBpZiB5b3Ugc2VuZCBhIGtub3duIHRlcnJvcmlzdCB0byBiZSB0b3J0dXJlZCB0aGVuIGdvb2QgZXNwZWNpYWxseSBpZiBpdCByZXN1bHRzIGluIHRoZSB0ZXJyb3Jpc3QgZ2l2aW5nIG91dCBpbmZvcm1hdGlvbiB0aGF0IGNvdWxkIHNhdmUgaW5ub2NlbnQgbGl2ZXMgYWxzbyB0aGV5IGRlc2VydmUgc3VjaCB0cmVhdG1lbnQuCklmIGV2ZXJ5b25lIGluIGV2ZXJ5IGdhbWUgaXMgc21hc2hpbmcgeW91LCBvciBhdCBsZWFzdCBtb3N0IG9mIHRoZW0gYXJlIGJlYXRpbmcgeW91IGVub3VnaCB0aGF0IGl0IG1ha2VzIGl0IG5vdCBmdW4sIHRoZW4gcGxheSBzb21ldGhpbmcgZWxzZS4gCkJlZm9yZSB0aGlzIEkgd291bGQgd2F0Y2ggbGVzYmlhbiAicG9ybiIgKGdpcmxzIGtpc3Npbmcgb24gWW91VHViZSBsbWFvKS4gCkdvcmRvbiB3aWxsIG1ha2UgJDEyIG1pbGxpb24gdGhpcyBzZWFzb24sICQxNiBtaWxsaW9uIG5leHQgYW5kICQyMCBtaWxsaW9uIGVhY2ggb2YgdGhlIGZvbGxvd2luZyB0d28geWVhcnMuIFRoZSBkZWFsIGluY2x1ZGVzIGEgJDIzIG1pbGxpb24gbXV0dWFsIG9wdGlvbiBmb3IgMjAyMCB3aXRoIGEgJDQgbWlsbGlvbiBidXlvdXQuIElmIGhlIGlzIHRyYWRlZCwgdGhlIG9wdGlvbiB3b3VsZCBiZSB2b2lkZWQgYW5kIHRoZSAkNCBtaWxsaW9uIHdvdWxkIGJlY29tZSBhbiBhc3NpZ25tZW50IGJvbnVzLgpJdCBqdXN0IHByb3Zva2VzIGEgZGVlcCByb290ZWQgYW5nZXIgd2l0aGluIG1lIHdoZW5ldmVyIEkgc2VlIGl0LiAKVGhpcyBhY2NvdW50cyBmb3IgdGhlIGZhaW50IGZlZWxpbmcgb2YgZGVqYSB2dSB0aGF0IGV2ZW4gbm9uICBNYWdyaXR0ZWFucyBzb21ldGltZXMgZ2V0IHdoZW4gbG9va2luZyBhdCBoaXMgd29yay4gCkRlc3BpdGUgdGhlIHN0dWRlbnQgZ2l2aW5nIG1hbnksIG1hbnkgcmVmZXJlbmNlcyBpbmNsdWRpbmcgbGlua3MgZm91bmQgb24gdGhlIFVuaSdzIG93biBsaWJyYXJ5IHRoYXQgQXVzdHJhbGlhIHdhcyBhIGNvdW50cnksIGFuZCBldmVuIHNheWluZyBvayBJIGdldCB5b3UncmUgY29uZnVzZWQsIGJ1dCBpdCdzIGJvdGggICB0aGUgbGVjdHVyZXIgd291bGQgbm90IGJhY2sgZG93biBhbmQgcmVmdXNlZCBpbiB3cml0aW5nIHNldmVyYWwgdGltZXMgdGhhdCBBdXN0cmFsaWEgd2FzIG5vdCBhIGNvdW50cnkuSSB0aGluayBzaGUgY29uZnVzZWQgQWZyaWNhIGFuZCBBdXN0cmFsaWEuQW5kIGFsc28gY291bGRuJ3QgcmVhZCB0aGUgbGlua3MgdGhlIHN0dWRlbnQgZ2F2ZSBoZXIgZm9yIHByb29mLmphbnF1YWRyZW50dmluY2VudCAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnb0l0J3Mgbm90IHRoZSBzdnUgd2Ugc2lnbmVkIHVwIGZvciBidXQgSSBsaWtlZCBpdCBhcyBhIGJyZWFrIHVwIHRvIHRoZSBmb3JtYXQuIApHZW9yZ2UuIFNoZSB3YXMgYm9ybiBKdW5lIDE3LCAxOTIyLCBpbiBTdC4gCkl0J3MgYSBzaGFtZSwgY2F1c2Ugd2hpbGUgd2UncmUgbWVhbnQgdG8gc2VlIEppbSwgUGFtLCBhbmQgT3NjYXIgYXMgdGhlICJDb2FsaXRpb24gb2YgUmVhc29uIiwgUnlhbiBkZWZpbml0ZWx5IGZlbHQgbGlrZSBoZSB3YXMgbWVhbnQgdG8gcmVwcmVzZW50IHVzICAgdGhlIGF1ZGllbmNlLkJlc2lkZXMgaGltIHBvaW50aW5nIGF0IFJvYmVydCB0aG91Z2gsIGhpbSBzYXlpbmcgIm9oIG5vLCBTdGFubGV5LCB5b3UnbGwgbGl2ZSBmb3JldmVyLiIgYXMgd2VsbCBhcyBhc2tpbmcgQm9iIFZhbmNlLCBWYW5jZSBSZWZyaWdlcmF0aW9uIHdoYXQgaGUgZG9lcyBmb3IgYSBsaXZpbmcgYW5kIGhpbSBkaXRjaGluZyBoaXMgc29uIHNheWluZyBoZSdzIGZpbmFsbHkgbWFzdGVyZWQgY29tbWl0bWVudCBhcmUgYWxsIGhpbGFyaW91cyBtb21lbnRzLnB1ZGdpbWVsb24gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29NeSB3aWZlIGhhZCBvbmUgb2YgdGhlc2UgY3VzdG9tIGJ1aWx0IGZvciBtZSwgYnV0IEkgYW0gc3RpbGwgc29ydGluZyBteSBjb2xsZWN0aW9uIGFuZCBoYXZlbiBmaW5pc2hlZCBwdXR0aW5nIGFsbCBteSBjYXJkcyBpbnRvIGl0LiAKWDByc3cxdGNoICAxIHBvaW50ICBzdWJtaXR0ZWQgMjEgZGF5cyBhZ28KVGhlIHJvYWQgdG8gaGVhbGluZyBpc24gbGluZWFyLi4gCkluIGFkZGl0aW9uIHRvIHRoZSBvbmNlIGEgbW9udGggcmVzdHJpY3Rpb24gb24gdG91cm5hbWVudHMsIG9yZ2FuaXphdGlvbnMgd291bGQgaGF2ZSB0byBzdWJtaXQgZGV0YWlsZWQgcmVwb3J0cyBvbiBob3cgbXVjaCBtb25leSBpcyByYWlzZWQgdW5kZXIgdGhlIGJpbGwsIFZhbGRlcnJhbWEgbm90ZWQuCk91ciBSdXNzaWFuIGZsaWdodCBkb2N0b3Igd2lsbCB3aXBlIG91ciB3aG9sZSBib2RpZXMgZG93biB3aXRoIHJ1YmJpbmcgYWxjb2hvbCB0byBlbnN1cmUgbm8gZnVuZ2kgYXJlIGNsaW5naW5nIHRvIHVzIGFzIHdlIGxlYXZlIHRoZSBwbGFuZXQuIApJIG9yaWdpbmFsbHkgZnJvbSBBdGxhbnRhIGFuZCBtb3ZlZCBoZXJlIGFib3V0IDEwIHllYXJzIGFnby4gSXQgYmVlbiBhd2Vzb21lIHdhdGNoaW5nIEFUTCBVbml0ZWQgdGFrZSBvZmYgbGlrZSBhIHJvY2tldC4gSSBzaW5jZXJlbHkgaG9wZSBTYW4gRGllZ28gZ2V0cyBhbiBNTFMgdGVhbSBldmVudHVhbGx5LiAKV2hvIGhhZCBiZWVuIHBsYXlpbmcgZm9yIHNldmVyYWwgeWVhcnMgYW5kIGhhZCBhbHNvIGJlZW4gYSBETSBoZXJzZWxmLi4gClRoYXQsIEkgc2F5IG5vdCBvbmx5IG91dCBvZiBwZXJzb25hbCBleHBlcmllbmNlLCBidXQgYWxzbyBmcm9tIHRoZSBkaXJlY3Qgb2JzZXJ2YXRpb24gdGhhdCBDaHJpc3RpYW5pdHkgaXMgYnkgYW5kIGxhcmdlIHNvIGRldm91dCB0aGF0IHRoZXkgdGVuZCB0byBvdXRyaWdodCBpZ25vcmUgdGhlIHJlYWxpdHkgdGhhdCBpcyByaWdodCBpbiBmcm9udCBvZiB0aGVpciBmYWNlLiAKVGhlIGRpYXBocmFnbSwgYSBsYXJnZSBtdXNjbGUgYmV0d2VlbiB0aGUgY2hlc3QgYW5kIGFiZG9tZW4sIGFpZHMgdGhpcyBhaXJmbG93LiAKIk9mdGVuIHBlb3BsZSB0aGluayB0aGF0IGl0J3MgbGVzcyBsaWtlbHkgdG8gaGFwcGVuIGluIHRoZSBzdWJ1cmJzIGFuZCBpdCdzIHNvbWV0aGluZyB0aGF0IG9ubHkgaGFwcGVucyBpbiB0aGUgY2l0aWVzLCBhbmQgdGhhdCdzIHJlYWxseSBub3QgdGhlIGNhc2UuIApXaGVuIGl0IGNvbWVzIHRvIGhvbWUgdG91cm5hbWVudCBwbGF5LCBpdCBpcyBhIG1hdHRlciBvZiBjaG9pY2UsIHdoZW4gaXQgY29tZXMgdG8gUG9rZXIgRmVsdCBtYXRlcmlhbHMsIHdhdGVyIHByb29mZWQgb3Igbm90IGFuZCB0aGUgc2l6ZSBhbmQgYXJyYW5nZW1lbnQgb2YgdGhlIHRhYmxlLiAKSW4gdGhlIGxvbmcgcnVuIHlvdSB3b3VsZCB3YW50IHRocmVlcyBldmVyeSB0aW1lLCBhbmQgeW91LGQgbWFrZSAuMDIlIHByb2ZpdCwgYnV0IHRoYXQgYW1vdW50IG9mIGhhbmRzIGlzbid0IHBvc3NpYmxlIGFuZCB0aGUgcHJvZml0IGlzIG5lZ2xpZ2libGUuIFRoaXMgb2YgY291cnNlIGRvZXNuJ3QgaW5jbHVkZSBmb2xkIGVxdWl0eSwgYWxvbmcgd2l0aCBtYW55IG90aGVyIGZhY3RvcnMuIApJJ20gYXBwYXJlbnRseSBnb29kIGF0IHRoZSBkZWZlbnNlIG1lY2hhbmlzbSBvZiBsZWFkaW5nIHRoZSBzdWJqZWN0IGF3YXkgZnJvbSB0aGluZ3MgSSBkb24ndCB3YW50IHRvIGFkZHJlc3MsIGFuZCBzaGUgY2FsbHMgbWUgb24gaXQuIApUaGVhdHJlIG9mIGJ1cmVhdWNyYWN5LiBUaGUgRE1WIGhhcyB0byBtYWtlIGl0IGxvb2sgbGlrZSB0aGV5IGtub3cgd2hhdCB0aGV5IGRvaW5nIGFuZCBrZWVwaW5nIGFuIGV5ZSBvbiB0aGluZ3MsIGFuZCB0aGUgaW5kdXN0cnkgaGFzIHRvIHJlc3BlY3QgdGhhdC4gVGhlIERNViByZXBvcnRzIGFyZSBraW5kIG9mIGxpa2UgYSByZWxpZ2lvdXMgaG9saWRheSB0aGF0IG5vIG9uZSBpcyB2ZXJ5IGVudGh1c2lhc3RpYyBhYm91dCBiZWNhdXNlIHdobyB3YW50cyB0byBoYXZlIGEgcGFyYWRlIHdoZXJlIGV2ZXJ5b25lIHdhbmRlcnMgdGhlIHN0cmVldHMgY2hhbnRpbmcgYW5kIHdoaXBwaW5nIHRoZW1zZWx2ZXMgd2l0aCBmbGFpbHMsIGJ1dCB5b3UgZG8gaXQgYW55d2F5Li4gCkl0IG9mZiB0aGUgbWFpbiByb2FkLCBpbiBhIGxpdHRsZSBlbmNsYXZlLCBidXQga2VlcCBhbiBleWUgb3V0IGZvciB0aGUgYmlnIGJpbGxib2FyZCBzaWduIChyaWdodCkuIApUaGlzIGl0ZW0gaXMgaW50ZW5kZWQgdG8gYmUgYSBDbGVyaWMgdmVyc2lvbiBvZiB0aGUgU3RhZmYgb2YgdGhlIE1hZ2kuIEkgdHJhZGVkIG1vc3Qgb2YgdGhlIHNwZWxscyBvdXQgZm9yIGNsZXJpYyBvciBwYWxhZGluIHNwZWxscywgZGVjcmVhc2VkIHRoZSBjaGFyZ2VzLCBhbmQgYWRkZWQgc29tZSBtb3JlIGNsZXJpYyBhcHByb3ByaWF0ZSBmbGFpci4gSSBhbSBsb29raW5nIGZvciBhbnkgc3VnZ2VzdGlvbnMgYW5kIGZlZWRiYWNrLiBJIGFtIG5vdCByZWFsbHkgc29sZCBvbiBteSBzcGVsbCBzZWxlY3Rpb24gZWl0aGVyLgpHbyB0byBXaGl0ZSBSb2NrIGxha2UgYW5kIGtheWFrLiBJIGFsd2F5cyBlbmpveSB0aGUgUGVyb3QgTXVzZXVtLiAKUHV0LCB0aGUgd2hpdGVzIG9mIHRoZSBXaXRjaGVyIHdvcmxkIGhhcmRseSBldmVyIGludGVyYWN0IHdpdGggbm9uIHdoaXRlIGh1bWFucy4gU28gbWF5YmUgdGhlIHF1ZXN0aW9uIHlvdSBzaG91bGQgYmUgYXNraW5nIGlzIHdoeSB0aGF0IGlzLiAKVGhlIGNvdXJ0IGlzc3VlZCBjb250ZW1wdCBvZiBjb3VydCBub3RpY2VzIHRvIGFsbCBvZiB0aGVtLiAKSSBqdXN0IGRvbiB3YW50IHlvdSB0byBmZWVsIHBlcnNvbmFsbHkgYXR0YWNrZWQgYnkgdGhpcy4gSSBkbyBhZ3JlZSB3aXRoIHRoZSBvdGhlciBoYWxmIG9mIHdoYXQgcGVvcGxlIGFyZSBzYXlpbmc7IHlvdSBuZWVkIHRvIGZpbmQgYSBuZXcgZG9jdG9yIGFuZCBwcmFjdGljZS4gWW91IGNhbiBldmVuIHRyeSB0byBnZXQgYSByZWZlcnJhbCB0byBzZWUgYSBzcGVjaWFsaXN0LCBpbiB0aG9zZSB0ZXJtcywgYmVjYXVzZSBpbiBzb21lIGFyZWFzIHlvdXIgR1AgaXNuIGV2ZW4gdGhlIG9uZSB0aGF0IHNob3VsZCBiZSBkb2luZyB0aGUgYXNzZXNzbWVudCBpbiB0aGUgZmlyc3QgcGxhY2UuIEZpbmRpbmcgc29tZW9uZSBxdWFsaWZpZWQgdG8gd29yayB3aXRoIEFkdWx0IEFEL0hEIGlzIGhhcmQsIGFuZCBmaW5kaW5nIHRoZSBzdHJlbmd0aCB0byBhZHZvY2F0ZSBmb3IgeW91cnNlbGYgaW4gdGhlIG1lZGljYWwgc3lzdGVtIGlzIGV2ZW4gaGFyZGVyLiBUcnkgdG8gZG8gc29tZSBzZWFyY2hpbmcgb24geW91ciBvd24gZm9yIHNvbWVvbmUgaW4geW91ciBhcmVhIHRoYXQgY2FuIGFzc2VzcyB5b3UgYW5kIGFzayBmb3IgYSByZWZlcnJhbCB0byB0aGVtLiA0MCBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpUaGUgTnV0eiBGYWNlcyBQb2tlciBDYXJkIFByb3RlY3RvciBSZXZpZXcKUG91ciBjbHR1cmVyIGxhIHByZW1pcmUgcGFydGllIGRlIGNldCBhcnRpY2xlLCB2b2ljaSB1biBleHRyYWl0IGQgbGl2cmUgcXVlIGogYmVhdWNvdXAsIFBsYWlkb3llciBwb3VyIGwgZGFucyBsZXF1ZWwgRnJhbmNpcyBIYWxsIHZvcXVlIGxlIGNhcyBkIGRhdHRpZXIgYmllbiBwYXJ0aWN1bGllcjogQ2hleiBjZSBkYXR0aWVyLCBsb3JzcXUgcGFsbWUgdmllaWxsaXQgb3Ugc2UgZHRhY2hlLCBvdSBsb3JzcXUgZXN0IGxhZ3VlIHBhciBsZXMgZW1wbG95cyBtdW5pY2lwYXV4LCBlbGxlIGxhaXNzZSBzdXIgbGUgdHJvbmMgdW5lIGxhcmdlIGJhc2UgZW5nYWluYW50ZSBlbiBmb3JtZSBkZSB2YXNxdWUgcmV0b3VybmUgdmVycyBsZSBjaWVsLCBkYW5zIGxhcXVlbGxlIHMgZGVzIHBhcnRpY3VsZXMgZCBhcHBvcnRlcyBwYXIgbGUgdmVudCwgZGVzIGZldWlsbGVzIG1vcnRlcyBldCwgYmllbiBlbnRlbmR1LCBkZXMgZ3JhaW5lcyBkZSBwbGFudGVzIGRpdmVyc2VzLiBJbCBzZSBjcmUgYWluc2ksIGVuIGhhdXQgZHUgdHJvbmMsIGp1c3RlIHNvdXMgbGEgY291cm9ubmUgZGVzIHBhbG1lcyB2aXZhbnRlcywgdW4gZXNzYWltIGRlIHBldGl0cyBqYXJkaW5zIHN1c3BlbmR1cywgb21icmFncywgaHVtaWRlcywgZGFucyBsZXNxdWVscyBwb3Vzc2VudCBkZSBub21icmV1c2VzIGhlcmJlcywgbWlzcmVzLCByaWdyb25zLCBiYWxzYW1pbmVzLCBwdHVuaWFzLCBub21icmlscyBkZSBWbnVzLCB2YWxyaWFuZXMsIGV0Yy4gCllvdXIgYnJhaW4gdHJpZXMgaXRzIGhhcmRlc3QgdG8gdHJ5IHRvIHRyaWNrIHlvdSBpbnRvIHRoYXQgc3dlZXQgc3dlZXQgZW5kb3JwaGluIHJlbGVhc2UuRWRpdDogYW55b25lIHdobyBkZWFscyB3aXRoIHRoaXMgbGlrZSBJIGRvIGlzIHdlbGNvbWUgdG8gUE0gbWUgZm9yIHN1cHBvcnQgb3IganVzdCB0byB0YWxrIG9yIHZlbnQgb3IgY2hhdC4gSSBtYW5hZ2VkIHRvIG1ha2UgaXQgdG8gbXkgbWlkIDMwcyBpbiBzcGl0ZSBvZiB0aGlzIGRlc2lyZSB0byBsb3NlIG15c2VsZiB0byBoLiAKV2hhdCBkb2VzIDcgMiBtZWFuIGluIHBva2VyClNoZSBzZW50IGEgbm90ZSBleHBsYWluaW5nIGhlciBwb3NpdGlvbiwgd2hpY2ggSSdsbCBzaGFyZSBvbiB0aGUganVtcC4gSWYgYW5kIHdoZW4gdGhlIG1lYXN1cmUgbW92ZXMgY2xvc2VyIHRvIGEgdm90ZSwgaXQgd2lsbCBiZWFyIGZ1cnRoZXIgZXhhbWluYXRpb24uLiAKUXVlc3Q6IFRoZSBwcm90YWdvbmlzdCBhbmQgY29tcGFuaW9ucyBzZXQgb3V0IHRvIGFjcXVpcmUgYW4gaW1wb3J0YW50IG9iamVjdCBvciB0byBnZXQgdG8gYSBsb2NhdGlvbi4gVGhleSBmYWNlIHRlbXB0YXRpb25zIGFuZCBvdGhlciBvYnN0YWNsZXMgYWxvbmcgdGhlIHdheS4gKExvcmQgb2YgdGhlIFJpbmdzKQpCZSBraW5kLiBHaXZlIGEgaHVnLiAKVGhlIHJvbGUgb2YgYSBjb3JvbmVyIGlzIHVzdWFsbHkgdG8gaW5xdWlyZSBpbnRvIGRlYXRocyAgIHZpb2xlbnQgZGVhdGhzLCBhY2NpZGVudGFsIGRlYXRocyBhbmQgdGhvc2Ugb2YgdW5rbm93biBjYXVzZS4gCkFub3RoZXIgYWNjdXNlciwgYWxzbyAxNiwgbWV0IEtlbGx5IGF0IGhpcyAyMDA4IHRyaWFsLCB3aGVyZSBoZSBnYXZlIGhlciBhbiBhdXRvZ3JhcGguIEhlIGxhdGVyIGludml0ZWQgaGVyIHRvIGhpcyBob21lIGluIHRoZSBDaGljYWdvIHN1YnVyYiBvZiBPbHltcGlhIEZpZWxkcywgd2hlcmUgdGhleSBoYWQgc2V4IG11bHRpcGxlIHRpbWVzLCBhY2NvcmRpbmcgdG8gdGhlIGRvY3VtZW50cywgd2hpY2ggc2FpZCBoZSBhbHNvIHNsYXBwZWQsIGNob2tlZCBhbmQgc3BpdCBvbiBoZXIuClRoZXJlIGNvdWxkbid0IGhhdmUgYmVlbiBhIG1vcmUgcHJvdm9jYXRpdmUgc3RhdGVtZW50IHRodXMgZmFyIGZyb20gYW55IEluZGlhbiBsZWFkZXIuIEFmdGVyIG1vbnRocyBvZiBoYXdraXNoIHBvc3R1cmluZywgaW5jbHVkaW5nIGhlaWdodGVuaW5nIG9mIHRlbnNpb25zIGFsb25nIHRoZSBMaW5lIG9mIENvbnRyb2wgYW5kIHRoZSBXb3JraW5nIEJvdW5kYXJ5LCBNb2RpIHN1ZGRlbmx5IGNoYW5nZWQuIApIb3dldmVyLCBzb21lIHBlb3BsZSBjYW4gZGVhbCB3aXRoIGEgam9rZSB0aGF0IGRvZXNuIHdvcmsgb3IgY3JpdGljaXNtLiAKRW4gZWZmZXQsIGRpbWFuY2hlLCBxdSdpbCBzJ2FnaXNzZSBkZSBQYXRyaWNrIFJvZ2VyIGxlIGNob2NvbGF0aWVyLCBkZXMgY2hlZnMgQWxleGFuZHJlIEdhdXRoaWVyIGxlIG5vcmRpc3RlIG91IEVuZWtvIEF0eGEgbGUgYmFzcXVlIGVzcGFnbm9sLCBkZSBEb21pbmlxdWUgQ3Jlbm4sIGNoZWYgZnJhbmFpc2UgaW5zdGFsbGUgIFNhbiBGcmFuY2lzY28sIGlscyBzZW1ibGVudCBhdm9pciBxdWVscXVlcyBmb25kYW1lbnRhdXggZW4gY29tbXVuLgpEdXJjaCBzZWluZSBqYWhyZWxhbmdlIEZvcnNjaHVuZyBpbSBCZXJlaWNoIGRlciBXZXJzdG9seXRpayB1bmQgcGVrYW56b2FsbGVyZ2lzY2hlbiBWZXJzdWNodW5nIHN0aWUgZXIgMTk4OSBiZWltIEJhdSBkZXIgRXh0cmVtZW50ZW56eXNhbHNjaGxldWRlciBlaGVyIHp1ZmxsaWcgYXVmIGRpZSBQcmFuem9sb2dpc2NoZSBEZXh0cmFseXNlbnpldXNlLCBkYSBpaG0gZWluIHp1ciBLb21wbGV0dGllcnVuZyBkZXIgU2NobGV1ZGVyIG50aWdlcyBCYXV0ZWlsIGZlaGx0ZS4gCkdvdCBhIGh1c2t5IGJ5IGFjY2lkZW50IG9uY2UgIHN0dWRlbnQgZGllZCwgaGFkIG5vYm9keSB0byB0YWtlIGNhcmUgb2YgMTIgd2VlayBvbGQgU2liZS4gU28gSSB0b29rIGhlciBob21lLCBhbmQgZ29vZ2xlZCB1cCBob3cgdG8gdGFrZSBjYXJlIG9mIGhlci4gKEkgb3duZWQgYSBnb2xkZW4gYmVmb3JlIGFuZCB0aG91Z2h0IEkga25ldyBob3cgdG8gdGFrZSBjYXJlIG9mIGRvZ3MsIExPTCkgIHdpdGhpbiA1IG1pbnV0ZXMgb2YgdGhlIGZpcnN0IGdvb2dsZSBzZWFyY2ggSSB0dXJuZWQgdG8gbXkgd2lmZSBhbmQgc2FpZCAid2UgaGF2ZSBtYWRlIGEgdGVycmlibGUgbWlzdGFrZS4iIG9tZywgZmVuY2luZywgd2Fsa2luZywgcnVubmluZywgdHVybmluZyBoZXIgaW50byBhIHNsZWQgZG9nIChiZWNhdXNlIHNoZSBjYW4gZ28gdG8gZG9nIHBhcmtzIGJlY2F1c2Ugc2hlIGVhdHMgbGl0dGxlIGRvZ3MpLCBzaGUgYWxzbyBwdWxscyBtZSBvbiBhIGJpa2UgYW5kIHdlIGFyZSBsZWFybmluZyB0byBkbyBza2lpbmcsIG5vdyAgc2hlIGVzY2FwZXMsIHNoZSBob3dscywgc2hlIGp1bXBzLCBzaGUgcHVsbHMsIHNoZSBpcyB0aGUgd29yc3QgZG9nLiAKTWFrZSBzdHVmZiB1bnRpbCB5b3UgZ29vZCBhdCBtYWtpbmcgc3R1ZmYsIGFuZCBzb21lb25lIHdpbGwgYml0ZS4gCkV4Y2VsbGVudC4gRXhhY3RseSB3aGF0IHlvdSBzaG91bGQgYmUgZG9pbmcuIEVhcmx5IHNhdmluZ3MgbGlrZSB0aGlzIGFyZSB0aGUga2V5LgpXZWQgTWFyIDYsIDU6MzBBTSBDU1QKVGhlIFVTIGFuZCBFdXJvcGUga25vd3MgUGFraXN0YW4gbG93IGtleSBzdXBwb3J0cyB0aGUgQWZnaGFuIFRhbGliYW4gKG5vdCB0byBiZSBjb25mdXNlZCB3aXRoIHRoZSAiUGFraXN0YW5pIFRhbGliYW4iIHRoYXQgaXMgZmlnaHRpbmcgYWdhaW5zdCBQYWtpc3RhbikuIApJdCBpcyB0b3BwZWQgYnkgJDQ0LDY1OSBmb3IgQ29vaW5kYSBGYW1pbHkgU3VwcG9ydCAobm93IEFzcGlyZSksICQyNSwzMDAgZm9yIHRoZSBGaWdodCBDYW5jZXIgRm91bmRhdGlvbidzIGFjY29tbW9kYXRpb24gY2VudHJlIGFuZCAkMjQsMDAwIGZvciBBbGJ1cnkgVGh1bmRlci4KTm8gbWF0dGVyIGhvdyBtdWNoIHBhaW4geW91IG1pZ2h0IGZlZWwsIHRyaWFnZSBpcyBiYXNlZCBvbiB3aG8gaXMgZHlpbmcgZmlyc3QuIApJZiB5b3UgaGF2ZSBzbyBtdWNoIGxvdmUgdG8gc3BhcmUgdGhlbiBnbyBhZG9wdCBhIGNoaWxkLgpJdCB3YXJuZWQgdGhhdCBhbHRob3VnaCB0aGUgaGlnaCBlbmQgcmVhbCBlc3RhdGUgbWFya2V0IG5hdGlvbndpZGUgd2lsbCBjb250aW51ZSB0byBiZSBzdXBwb3J0ZWQgYnkgc3RhYmxlIHBvcHVsYXRpb24gZ3Jvd3RoLCB2b2xhdGlsaXR5IGluIHN0b2NrIG1hcmtldHMgbWF5IHNoYWtlIGNvbnN1bWVyIGNvbmZpZGVuY2UgaW4gdGhlIGNvbWluZyB5ZWFyLgpJZiB5b3UgcGxheSBhIHRvbiBvZiB0YWJsZXMsIHlvdSBtaWdodCB3YW50IGEgbGl0dGxlIG1vcmUgaGVscC4gCkkgbWVhbiwgZXZlciB0cmllZCB0byBnZXQgYW55IGRlY2VudCBjb25uZWN0aW9uIGluIE1hbmF1cywgbGV0IGFsb25lIFBhcmFjYW1hPyBUaG91Z2h0IHNvLi4gCkF0IGEgc2VudGVuY2luZyBoZWFyaW5nIFRodXJzZGF5LCBNaWxsYXIgc3Bva2UgcXVpZXRseSBhbmQgYnJpZWZseSwgYWNrbm93bGVkZ2luZyBJIGRpZCB3YXMgd3JvbmcuIEJ1dCB0aGUganVkZ2Ugb24gRnJpZGF5IHNhaWQgaGUgd2FzIGJ5IHdoYXQgc2hlIGRpZG4gc2F5LiAKVGhlIFZpY3RvciBQb2tlciBDdXAgd2lsbCwgYWNjb3JkaW5nIHRvIENoYWlybWFuLCBWaWN0b3IgQ2hhbmRsZXIsICJiZSBhIHRydWx5IGdyb3VuZCBicmVha2luZyBldmVudCB0aGF0IHdpbGwgZ2l2ZSBFdXJvcGVhbiBwb2tlciBhbiBldmVudCB0byByYW5rIGFsb25nc2lkZSBhbnl0aGluZyBzZWVuIGluIHRoZSBVbml0ZWQgU3RhdGVzLiIgTXIgQ2hhbmRsZXIgZ29lcyBvbiB0byBhZGQgIldlJ3JlIHByb3VkIHRvIGJlIHNwb25zb3JpbmcgYSB0b3VybmFtZW50IHRoYXQgd2lsbCBiZWNvbWUgc3lub255bW91cyB3aXRoIHRoZSBnbGFtb3VyIGFuZCBleGNpdGVtZW50IG9mIGhpZ2ggc3Rha2VzIHBva2VyLiBBdCBldmVyeSBzdGVwIHdlJ2xsIGJlIGVuc3VyaW5nIHRoYXQgVGhlIFZpY3RvciBQb2tlciBDdXAgaXMgdGhlIFJvbGxzIFJveWNlIG9mIHBva2VyIHRvdXJuYW1lbnRzLiIKQSBjb3VwbGUgbW9udGhzIGludG8gcGxheWluZyBJIGJlZ2luIHRvIHJlY29nbml6ZSBhIGxvdCBvZiBzY3JlZW4gbmFtZXMgYXMgYmVpbmcgcmVndWxhcnMgYW5kIHRoZXJlJ3MgMSBzcGVjaWZpYyBndXkgSSdtIGRyYXduIHRvLiAKU3RlcGhlbiBQYWRkb2NrIGJlaGF2aW9yIGRpZCBub3Qgb2ZmZXIgYW55IGluZGljYXRpb24gb2YgdmlvbGVudCB0ZW5kZW5jaWVzLCB0aGUgYnJvdGhlciBzYWlkLi4gCkhlIG9uIGhpcyBwaG9uZSwgd2UgYWxsIGludm9sdmVkIGluIGEgaGFuZC4gCkFzIHlvdSBjYW4gc2VlIGZyb20gdGhpcyBhcnRpY2xlIGFuZCB0aGUgYmVsb3cgbWVkaWNhbCBjaXRhdGlvbnMsIG1hZ25lc2l1bSBzaG91bGQgYmUgcGFydCBvZiBhIHJvdXRpbmUgY2FyZGlvdmFzY3VsYXIgYmxvb2QgdGVzdC4gSG93ZXZlciwgcmVtZW1iZXIsIGRvbiBib3RoZXIgb3JkZXJpbmcgYSBzZXJ1bSBtYWduZXNpdW0uIApEaWUgU3BpZWxlciB2ZXJmZ2VuLCBzbyBzb2xsIGVzIGluIGRpZXNlbSBCZWlzcGllbCBzZWluLCBqZXdlaWxzIGJlciBleGFrdCAzLjAwMCBDaGlwcy4gQmVpIGRlciBoaWVyIHZvcmxpZWdlbmRlbiBTcGllbHNpdHVhdGlvbiBzaW5kIHdpciBpbSBTbWFsbCBCbGluZCwgU3BpZWxlcjEgaW0gQmlnIEJsaW5kLCBTcGllbGVyMiBnZWh0IGFsbCBpbnVuZCBTcGllbGVyMyBlYmVuc28uCkhlIGdvdCBiYWNrIG9uIGhpcyBncm9vdmUgdGhvdWdoIGFuZCBoZSBoYWQgYSBzdHJvbmcgYWR2YW50YWdlLi4gCkdyYW5kbWEgYWx3YXlzIHNhaWQgc2hlIGdvdCBwcmVnbmFudCBiZWNhdXNlIGdyYW5kcGEgZm9sa3MgZGlkbiBjYXJlIGZvciBoZXIsIHNvIHRoZXkgd2VyZSAiZm9yY2VkIiB0byBnZXQgbWFycmllZC4gCjUuMiBCRyBkb2VzIG5vdCByZXByZXNlbnQgb3IgZW5kb3JzZSB0aGUgYWNjdXJhY3kgb3IgcmVsaWFiaWxpdHkgb2YgYW55IGFkdmljZSwgb3Bpbmlvbiwgc3RhdGVtZW50LCBvciBvdGhlciBpbmZvcm1hdGlvbiBkaXNwbGF5ZWQsIHVwbG9hZGVkLCBvciBkaXN0cmlidXRlZCB0aHJvdWdoIHRoZSBTZXJ2aWNlcyBieSBhbnkgdXNlciwgaW5mb3JtYXRpb24gcHJvdmlkZXIgb3IgYW55IG90aGVyIHBlcnNvbiBvciBlbnRpdHkuIApEb24gaGF2ZSB0byBnZXQgaW50byBhIHNpdHVhdGlvbiB3aGVyZSB5b3UgY29udGludWUgdG8gYmUgaG9sZGluZyBhbmQgaG9sZGluZy4gc28gbWFueSBwb3RlbnRpYWwgbW92aW5nIHBpZWNlcywgTGFtb3JpZWxsbyBmaWd1cmVzIHRvIGhhdmUgYSBidXN5IHdlZWsgYXMgdGhlIHRlYW0gY29udGludWVzIHRvIHN0b2NrcGlsZSBkcmFmdCBwaWNrcyBmcm9tIHdhcm0gYm9kaWVzLiBHZXR0aW5nIG9uZSBvZiB0aG9zZSBkZWFscyBvdXQgb2YgdGhlIHdheSBlYXJseSBjYW4gaHVydC4KQ2hhcHN0aWNrYm9tYmVyICAyMCBwb2ludHMgIHN1Ym1pdHRlZCAyOCBkYXlzIGFnbwpJJ3ZlIG5ldmVyIGJlZW4gaW4gYSBwZXJpb2Qgd2hlcmUgSSBoYXRlZCBteXNlbGYgYXMgYSBwZXJzb24gYnV0IEkgcHJlZmVyIHRvIGRpc3RhbmNlIG15c2VsZiBhbmQgc3RheSBkZXRhY2hlZCBmcm9tIG90aGVycy4gVGhhdCBiZWluZyBzYWlkIEkgbm8gbG9uZ2VyIHVzZSB0aGUgdGVybSAiZmVtYWxlIiB1bmxlc3MgaXQncyBpbiBhIHZlcnkgbmVjZXNzYXJ5IGNvbnRleHQgYmVjYXVzZSBJIHdhbnQgdG8gYXZvaWQgcHJvdm9raW5nIHBlb3BsZSB1bm5lY2Vzc2FyaWx5LgpJIGhhdmluZyB0cm91YmxlIGdldHRpbmcgZW5vdWdoIHNhbHQsIGJ1dCBJIGN1cnJlbnRseSBkcmlua2luZyBib25lIGJyb3RoIHNvIHRoYXQgc2hvdWxkIGhlbHAuIEl0IHByb2JhYmx5IGFsbCBpbiBteSBoZWFkIGJlY2F1c2UgaXQgdG9vIGVhcmx5LCBidXQgSSBoYWQgdG8gcnVuIGZvciB0aGUgYnVzIHRoaXMgbW9ybmluZyAoc3RpbGwgbWlzc2VkIHRoZSBmdWNrZXIpLCBhbmQgdGhlIHJ1biBzZWVtZWQgZWFzaWVyIGFuZCB3aXRoIGEgYml0IG9mIGEgYm91bmNlIHRvIG15IHN0ZXAuIE9kZC5JIGRlY2lkZWQgdGhhdCB3aGVuIEkgZ2V0IGRvd24gdG8gbXkgZmlyc3QgZ29hbCBzaGFwZS93ZWlnaHQsIG15IHRyZWF0IHdpbGwgYmUgYSBuZXcgVEZDIGplcnNleS4gClRoaXMgeWVhciwgam9pbiBvdmVyIDUwIGxvY2FsIHdvbWVuIGF0IFBhcmFsbGVsJ3MgSG9sZGVuIFJvb20gZXZlbnQgc3BhY2UgYW5kIHN1cHBvcnQgdGhlc2UgYW1hemluZywgdGFsZW50ZWQgbWFrZXJzLiAKQ2FuIG5vdCBmaW5kIGFuIGFjdGl2ZSBwb2tlciBnYW1lIGFueXdoZXJlClNvLCB5b3VyIHdpZmUgY29tZXMgb2ZmIGFzIGEgYml0IG9mIGFuIGFzc2hvbGUgZm9yIHRlbGxpbmcgeW91IHdobyBub3QgdG8gYmUgZnJpZW5kcyB3aXRoLCBhbmQgeW91IGNvbWUgb2ZmIGFzIHRoZSBhc3Nob2xlIGZvciBhZ3JlZWluZyB0byBpdCwgYnV0IHRoZW4gbHlpbmcgYWJvdXQgaXQuCk1ja2xlZXZlICAxIHBvaW50ICBzdWJtaXR0ZWQgOSBkYXlzIGFnbwpUaGUgdGFibGV0IGdhbWVyIGhhcyB0byBhY3RpdmF0ZSBhbGwgdGhlc2UgdHJhcHMganVzdCBhcyBjb25zb2xlIHBsYXllciBkcml2ZXMgb3ZlciB0aGVtLiAKU2hlIGhhcyBhbiB1bmVhcnRobHkgYXR0YWNobWVudCB0byBoZXIgcGFyZW50cy4gCkluZGVlZCwgaXQgbWFkZSB0b3RhbCBzZW5zZSBmb3IgYSBmYW1vdXMgZXVnZW5pY2lzdCBsaWtlIEFsYmVydCBFLiAKVGhlIHR3byBjaGF0dGVyIGF0IGVhY2ggb3RoZXIgcmlnaHQgYmVmb3JlIHRoZSB0dXJuLCB3aGljaCBpcyBhbiBBY2Ugb2YgaGVhcnRzLiAKSSdtIG9ubHkgMjEgYW5kIEknbSBvdmVyIGl0LiAKVGhlIEJyaWRnZXMgR29sZiBDbHViIGlzIGN1cnJlbnRseSBjbG9zZWQgYW5kIHVuZGVyZ29pbmcgYSBtdWx0aSBtaWxsaW9uIGRvbGxhciByZW5vdmF0aW9uLiBJdCdzIGV4cGVjdGVkIHRvIHJlb3BlbiBpbiBtaWQgU2VwdGVtYmVyLiBUaGUgUlYgUGFyayBpcyBpbiBvcGVyYXRpb24gYW5kIGFjY2VwdGluZyByZXNlcnZhdGlvbnMuClRoZSBtb3N0IGNvbW1vbiB0eXBlIG9mIHBva2VyIHF1ZXN0aW9uIGludm9sdmVzIGNob29zaW5nIGEgZml2ZSBjYXJkcyBmcm9tIHRoZSBwYWNrIGFuZCBhc2tpbmcgdGhlIHN0dWRlbnQgdG8gZmluZCB0aGUgcHJvYmFiaWxpdHkgb2YgYSBjZXJ0YWluIGFycmFuZ2VtZW50LCBjYWxsZWQgYSBwb2tlciBoYW5kLiAKSkYgUHRhayBTY2llbmNlIEJvb2tzIDI3NjIKU3RyaWN0bHkgYSBwb2tlciBtYWNoaW5lIGNhcGFibGUgb2YgaGFuZGxpbmcgMyBtb25pdG9ycyB3aXRoIGF0IGxlYXN0IDEgZHVhbCBsaW5rIGR2aS4gQWJsZSB0byBoYW5kbGUgbGFyZ2UgU1FMIGRhdGFiYXNlcyBhbmQgbXVsdGlwbGUgc2l0ZXMgYW5kIHByb2dyYW1zIHJ1bm5pbmcgc2ltaWx0YW5lb3VzbHkuClBvb2wgRGluaW5nIFRhYmxlcyBmb3IgU2FsZQpJIGxlZnQgbWVzc2FnZXMgdG8gc29tZW9uZSB3aGVuIEkgZm91bmQgb3V0IHNoZSB3YXMgYSBnaXJsLiBJdCB3YXMgdGhlIEJCUyBvd25lciBkYXVnaHRlci4gClN0b2NrLiAKTmljZS4gCiJDYXJlIGFuZCBjb25uZWN0aW9uIGFyZSBhdCB0aGUgaGVhcnQgb2YgZXZlcnl0aGluZyB3ZSBkbyBhdCB0aGUgVmFuY291dmVyIEFxdWFyaXVtLCIgc2FpZCBLYXJlbiBIb3dlLCB0aGUgYXF1YXJpdW0ncyBkaXJlY3RvciBvZiB2aXNpdG9yIGV4cGVyaWVuY2UuIApVbSAkMC4zMCBhdWYgJDAuNTAgZ2VzY2hlaGVuLi4gCkluIGxhdGUgT2N0b2JlciwgVGhlIFN1bmRheSBBZ2Ugd2FzIGdyYW50ZWQgcGFydGlhbCBhY2Nlc3MgdG8gdGhlIGZvdW5kYXRpb24gcmVjb3JkcywgYnV0IHRoZSBhbm51YWwgcmVwb3J0cyBmb3IgbWFueSB5ZWFycyB3ZXJlIG1pc3Npbmcgb3IgaW5jb21wbGV0ZS4gCkFub3RoZXIgcG9wdWxhciBjaG9pY2UgaXMgdGhlIFF1ZWVuIG9mIEhlYXJ0cy4gVGhpcyB0YXR0b28gaXMgcG9wdWxhciBhbW9uZyB3b21lbiBhbmQgY2FuIHJlcHJlc2VudCBhIGZldyBkaWZmZXJlbnQgdGhpbmdzLiAKS2FsbSB3b3VsZG4ndCBjb21tZW50IHNwZWNpZmljYWxseSBvbiB0aGUgc3VpdCwgYnV0IG5vdGVkIHRoYXQgdGhlIGJvYXJkIGlzIHByb2Nlc3NpbmcgMTkgbmV3IHN1cHBsaWVyIGFwcGxpY2F0aW9ucyBhbmQgaGFzIGFwcHJvdmVkIDMwMSBldmVudCBkYXlzIGZyb20gTWF5IDE0IHRvIHRvZGF5IHRvIGJlIGhlbGQgb3ZlciB0aGUgbmV4dCBmZXcgd2Vla3MuCkl0J3MgYmVlbiB1c2VmdWwgdG8gc2VlIGhvdyBwZW9wbGUgcmVhY3QgdG8gbWUgcGVyc29uYWxseS4gClRoZSB0cmlhbHMgd2lsbCBjb21tZW5jZSBhdCA2LjMwcG0uIEZvciBmdXJ0aGVyIGluZm9ybWF0aW9uIGNvbnRhY3QgdGhlIEdhbHdheSBVbml0ZWQgb2ZmaWNlIDA5MSA3NjczMzYsIG9yIFJvbmFuIENvbGVtYW4gMDg3IDY5NzI4MjMuLiAKRXZlbiBpZiB5b3UgZ2V0IGEgbmV3IGdpcmxmcmllbmQsIHRoZXJlIHdpbGwgYmUgZGlmZmVyZW5jZXMgaW4gaG93IHlvdSBkbyB0aGluZ3MuIFRyeSBub3QgdG8gb3ZlcnRoaW5rIHRoaW5ncyB0b28gbXVjaC4gCkl0IGRvZXNuJ3QgYWRkIHVwOiBBLikgSXQncyBicm9hZCBkYXlsaWdodCBvbiBhIG5hcnJvdyBzdHJlZXQgdXAgYSBzdGVlcCBoaWxsLiAKUGxlYXNlIGRvIHlvdXIgYmVzdCB0byBoYW5kIHRoZSBtb25leSB0byB0aGUgY2FzaGllci4gQW5kIGRvbid0IHNsaWRlIGl0IG92ZXIgb3IgdG9zcyBpdCBvbiB0aGUgY291bnRlciwgb3IgcHV0IGl0IGF0IHRoZSBvcHBvc2l0ZSBlbmQgb2YgdGhlIGNvdW50ZXIgKGVzcGVjaWFsbHkgaWYgdGhlIGNvdW50ZXIgaXMgcmF0aGVyIGxvbmcpLiBJdCdzIHRoZSBuaWNlIHRoaW5nIHRvIGRvLgpOSFMgYXQgNzAKTWFzaCBpdCB1cCB0aWwgaXQncyBsaWtlIG1hc2hlZCBwb3RhdG8gY29uc2lzdGVuY3kgYW5kIGl0J2xsIGJlIGEgbGl0dGxlIHN0aWNreS4gSSBhZGp1c3RlZCB0aGUgaW5ncmVkaWVudHMgYmFzZWQgb24gdGFzdGUgYXMgbG9uZyBhcyBpdCBjYW4gaG9sZCBpdHMgc2hhcGUuIApJIGRpc2FncmVlIHdpdGggVHVja2VyIENhcmxzb24gc29sdXRpb24sIGJ1dCBJIGdsYWQgaGUgYXQgbGVhc3QgY2FuIHNlZSB0aGUgcHJvYmxlbS4gVW5saWtlIHRoZSB2YXN0IG1ham9yaXR5IG9mIHBvbGl0aWNpYW5zL3B1bmRpdHMvY29tbWVudGF0b3JzLlR1Y2tlciBDYXJsc29uIHNvbHV0aW9uIHJlbWluZHMgbWUgb2Ygd2hhdCB0aGUgUm9tYW5zIGRpZC4gCkNvbmNlcm5pbmcgdGhlIEx1eG9yLCBJIHdvdWxkIHN0YXkgYXdheS4gCkFsdGhvdWdoIHRoZSBzb3VuZCBvZiBhIGtldHRsZSBpcyB1bmRlcnN0b29kIHRvIGJlIGNhdXNlZCBieSAuIEFnYXJ3YWwgYWxzbyBleHBsYWluIHdoeSB0aGlzIGVmZmVjdCBtYWtlcyBhIHdoaXN0bGUsIHJhdGhlciB0aGFuIGFub3RoZXIgbm9pc2UsLiAKV2UgcHV0IHRoaW5ncyBvbiBwYXVzZSB0byB0cnkgYW5kIHJlc3RvcmUgb3VyIHJlbGF0aW9uc2hpcC4gSGFkIGEgaGFyZCBjb3VwbGUgb2YgeWVhcnMgYnV0IHRoaW5ncyB3ZXJlIGdldHRpbmcgYmV0dGVyLiAKVGhlcmVmb3JlIGdldHRpbmcgYSBmZXcgd29ya2VyIGtpbGxzIG9yIGEgcXVlZW4gYW5kIHByZXZlbnRpbmcgbWluaW5nIGJlZm9yZSBpdCBkaWVzIGdpdmVzIHlvdSBhIGVjb25vbWljIGFkdmFudGFnZSBhcyB3ZWxsIGFzIGZvcmNpbmcgdGhlIGVuZW15IHRvIHVzZSB0aGVpciBtaWNybyBhbmQgYXR0ZW50aW9uIHRvIGRlYWwgd2l0aCBpdC4gCk9mZmljaWFscyBwYWlkIGhvbWFnZSB0byBhbiB1bm5hbWVkIEZCSSBhZ2VudCB3aG8gbW92ZWQgaW50byBhIGJ1c2luZXNzIGluIEhhcnZleSBtb3JlIHRoYW4gYSB5ZWFyIGFnbyBhbmQgc2V0IHVwIHNob3AgYXMgYSBkcnVnIGJyb2tlci4KWW91IHRoZW4gdHJ5IHRvIGZpbmQgYSBzZXQgb2YgZmVhdHVyZXMgdGhhdCB0b2dldGhlciB0YWtlcyBjbG9zZSB0bywgYnV0IG5vdCBvdmVyLCAxMjAgcG9pbnRzLCByYW5rZWQgYnkgdGhlaXIgcHJpb3JpdHkuIFRoaXMgd291bGQgc2ltcGx5IGJlIHRvIHN1bSBhY2N1bXVsYXRpdmUgZnJvbSB0aGUgdG9wIGFuZCBkb3dud2FyZHMgdW50aWwgeW91IHJlYWNoIGEgdGFzayB0aGF0IHRpcHMgdGhlIHN1bSBvdmVyLCBvciBlcXVhbCB0bywgdGhvc2UgMTIwIHBvaW50cy4gCkkgd2FzIGRlc3BlcmF0ZSBhbmQgSSBuZWVkZWQgdG8gZG8gc29tZXRoaW5nLCBhbnl0aGluZyBhdCBhbGwuLiAKKFByaXZhY3kgUG9saWN5KUh1YlBhZ2VzIFRyYWZmaWMgUGl4ZWxUaGlzIGlzIHVzZWQgdG8gY29sbGVjdCBkYXRhIG9uIHRyYWZmaWMgdG8gYXJ0aWNsZXMgYW5kIG90aGVyIHBhZ2VzIG9uIG91ciBzaXRlLiAKVGhlcmVmb3JlIG15IGZvdW5kYXRpb24gZG9lcyBub3QgcmVhbGx5IGNoYW5nZSBzZWFzb24gdG8gc2Vhc29uICAgaXQgcGFsZSBhbmQgSSBwcm91ZCBvZiB0aGF0IGFzIGl0IG1lYW5zIEkgZGlkbiBkYW1hZ2UgbXkgc2tpbiEgQnV0IG15IHN1bnNjcmVlbiBwcm9kdWN0cyBkbyBjaGFuZ2UuIEkgdXNlIHRoZSBTaGlzaGVkbyBzdHVmZiBpbiB0aGUgc3VtbWVyLCBpdCBzb21ldGhpbmcgbGlrZSAxMDAwKyBTUEYgYW5kIHllcyBpdCBsZWF2ZXMgbWUgbG9va2luZyBsaWtlIGEgZ2hvc3Qgb24gdGhlIGJlYWNoLgpUaGUgY29uY2VwdCBpcyBnaXZlbiBmdXJ0aGVyIGZyZWVkb21zIGJ5IHRoZSBmYWN0IHRoYXQgInJlbGlnaW9uIiBpcyBub3QgZGVmaW5lZCBhbnl3aGVyZSBpbiB0aGUgQ29uc3RpdHV0aW9uLiAoOTggVVMgMTQ1IFsxODc4XSkgd2hpY2ggc2FpZCB0aGF0IG1ha2luZyByZWxpZ2lvdXMgcnVsZSBvciBsYXcgc3VwZXJpb3IgdG8gY2l2aWwgbGF3IHdvdWxkIGVuY291cmFnZSBldmVyeXRoaW5nIGFuZCBub3RoaW5nLCBtYWtpbmcgZWFjaCBwZXJzb24gYSAibGF3IHVudG8gaGltc2VsZiIsIG1lYW5pbmcgdGhhdCB0aGVyZSB3b3VsZCBiZSBhbGwgbGF3IGFuZCBubyBsYXcsIHdpdGggZ292ZXJubWVudCBoYXZpbmcgbm8gc2F5IGluIHRoZSBtYXR0ZXIzLiAKSWRlYXMgdGhlbXNlbHZlcyBhcmUgbm90IGEgcHJvYmxlbSBmb3IgYW55b25lIHRob3VnaC4gCiJBbmQgbWVhbmluZyBpdCEiIFRoYXQgdGhlIGtleS4gWW91IG5vdCBwb3V0aW5nLiBZb3Ugbm90IHBsYXlpbmcgdGhlIG1hcnR5ci4gWW91IG5vdCBndWlsdCB0cmlwcGluZyBoZXIuIFlvdSBqdXN0IGdpdmluZyBoZXIgc3BhY2UgYW5kIGJlaW5nIGludGVybmFsbHkgc3RhYmxlLgpUaGlzIFRodXJzZGF5LCBEZWMuIDI3LCBpcyB0aGUgbGFzdCB0cmFkZSBkYXRlIGluIG9yZGVyIGZvciB5b3VyIHRyYW5zYWN0aW9uIHRvIHNldHRsZSBpbiAyMDE4Li4gCkkgd2FzIHdyb25nLiAKQW50ZXMgYXJlIGEgYXJyYW5nZWQgYW1vdW50IG1ha2UgdGhlIGNvbnRhaW5lciBieSBldmVyeSBnYW1lcmhhbmdpbmcgYXJvdW5kIGp1c3QgYmVmb3JlIGNhcmRzIGJlY29taW5nIGRlYWx0LiBUaGlzIHBhcnRpY3VsYXJhbW91bnQgd2lsbCBub3QgY291bnQgdG93YXJkcyB5b3VyIGJldCB3aXRoaW4gdGhlIGZpcnN0IGNpcmN1bGFyIG9md2FnZXJpbmcsIHVubGlrZSBibGluZHMuIApGb3IgaW5zdGFuY2UsIFNhdmFubmFoLCBHZW9yZ2lhIENhdGhvbGljIERpb2Nlc2UgZ2F2ZSAkMjAwMCBhbmQgdGhlIFJvbWFuIENhdGhvbGljIEZvdW5kYXRpb24gaW4gQmFsdGltb3JlIGdhdmUgJDI1MDAgYW5kIHRoZSBBcmNoZGlvY2VzZSBvZiBQaGlsYWRlbHBoaWEgZ2F2ZSBhIHdob3BwaW5nICQ1MCwwMDAuCkNoYWxsZW5nZSA2OiBCZWF0IHRoZSBibGFja2phY2sgZGVhbGVyIGluIHR3byBsb2NhdGlvbnMgKFJob2RlcywgVmFuIEhvcm4gVHJhZGluZyBQb3N0KS4KQW5rYSBlYmxhcyBza3JpYmkgc2lnbm9uLCBrYWogc3VwZXIgaSwgbWFsa3V0aW1hIHByb25vbmNvbiwgcG9yIGVzcHJpbWkgZHVvYmxhbiBzZW5jb24uIE1pIG9mdGUgbWlyYXMgcHJpIHRpYWogZXNwcmltZWJsZWNvaiEuIApNYXliZSB5b3UgcmVhbGx5IGdvb2QgYXQgdGhlYXRlciBidXQgeW91IGJ1cm50IG91dCBhIGxpdHRsZS4gWW91IHdhbnQgdG8gdHJ5IG5ldyB0aGluZ3MuIEkgZ2V0IGl0LiAKSSBsaWtlIHRoZSBib2x0IHNuaXBlciBhbmQgaGF0ZSB0aGUgVlNTICh2ZXJ5IHNoaXR0eSBzbmlwZXIpLiAKU2hhbGwgd2UgYWxsIHdhdGNoIHRoZW0gc3RhcnZlIG9yIHJpb3QgYmVjYXVzZSB0aGV5IGNhbiBubyBsb25nZXIgZmVlZCB0aGVpciBmYW1pbGllcyBvciBzaG91bGQgd2UgY3JlYXRlIGFuIGV0aGljYWwgc2FmZXR5IG5ldCB0byBzYXZlIHVzIGFsbD8uIApXZSByZWNlaXZlZCBhIGNpbmVtYXRpYyBiaWxsIGEgZmV3IG1vbnRocyBhZ28gYXQgbXkgcGFydCB0aW1lIGpvYi4gSSBoYXZlIHRvIGFkbWl0IGl0IExPT0tTIGdvb2QsIGFuZCBpbiB0aGlzIHBob3RvIGlzIGNsZWFybHkgc2VlbXMgdmVyeSBoYXJkIHRvIHRlbGwsIGJ1dCB0aGUgYmlsbCB3ZSByZWNlaXZlZCB3YXMgZXNzZW50aWFsbHkgcHJpbnRlZCBvbiBwbGFpbiBvZmZpY2UgcGFwZXIuIFRoZSB2ZXJ5IHNlY29uZCB5b3VyIGZpbmdlcnMgdG91Y2ggaXQgeW91IGtub3cgaXQgYSBmYWtlLiBIb3dldmVyLCBvdXIgY2FzaGllciwgbXVzdCBoYXZlIGRlYWQgZnVja2luZyBmaW5nZXJzIGJlY2F1c2Ugc2hlIGFjY2VwdGVkIGl0IGFuZCB3ZSBoYWQgdG8gY2FsbCB0aGUgY29wcy4gV2hvIHNhaWQsICJGdWNraW5nIHNlcmlvdXNseT8gVGhpcyBpc24gZXZlbiBjbG9zZSB0byBhIGdvb2QgY291bnRlcmZlaXQuIgpMb3VpIEVyaWtzc29uLCBCb3N0b24gQnJ1aW5zCkJ1dCBJIGRvIHRoaW5rIHRoYXQgdGhlIHdheSB0aGUgY2FyZHMgY29tZSBiYWQgcGxheWVycyBhbmQgZ29vZCBwbGF5ZXJzIGhhdmUgYWJvdXQgdGhlIHNhbWUgYWR2YW50YWdlLiBJIGZpbmQgdGhlIHNldCB1cCBpcyBtb3JlIG9mIGEgZ2FtYmxpbmcgc3R5bGUgZ2FtZSBpbnN0ZWFkIG9mIGEgcmVhbCBwb2tlciBnYW1lLiBJIHRoaW5rIHRoYXQncyB3aHkgbW9zdCBwZW9wbGUgYXJlIGRpdmlkZWQuIApQdWxsIHVwIHlvdXIgc2tpcnRzLCBNYXJnYXJldCwgYW5kIHNob3cgTWlzcyBTeW5nZS4gWW91IGNhbid0IHNheSB0aG9zZSBhcmVuJ3QgYSB2ZXJ5IGZpbmUgcGFpciBvZiBoaWtpbmcgbGVncywgTWlzcyBTeW5nZS4gCllvdSBuZWVkIHRvIGZpZ3VyZSBvdXQgd2hhdCB5b3VyIHZhbHVlIGlzIGJ5IGludGVydmlld2luZyBhdCBvdGhlciBjb21wYW5pZXMsIGFuZCBzZWVpbmcgZm9yIHlvdXJzZWxmIHdoYXQgeW91IHdvcnRoLiBPbmNlIHlvdSBnZXQgd2hhdCB5b3UgdGhpbmsgaXMgYW4gYWNjZXB0YWJsZSBvZmZlciwgdGhlbiB5b3UgbmVnb3RpYXRlIHdpdGggeW91ciBjdXJyZW50IGNvbXBhbnkuCk5vdyB0YWtlIHRob3NlIHBlbm5pZXMgYW5kIGRpdmlkZSBpdCBpbnRvIDMgZXF1YWwgcGFydHMuIFJlbW92ZSBvbmUgcGFydCBbMS8zIG9mIHRob3NlIHBlbm5pZXNdLiAKWW91IGJlIGFibGUgdG8gYW5hbHlzaXMgb2YgaWYgdGhlIGRlYWxpbmcgaXMgZmFpciBvciBub3QsIGJ1dCB0aGF0IGl0Li4gCkluY2x1c2lvbiBjcml0ZXJpYSB3ZXJlIHNwZWNpZmllZCBhZGVxdWF0ZWx5LiBWYXJpb3VzIHJlbGV2YW50IGRhdGEgc291cmNlcyB3ZXJlIGFjY2Vzc2VkLiAKVGhlaXIgYXBwZWFyYW5jZSBhZGRlZCBtb3JlIGxhdWdodGVyIGFuZCBnbGFtb3VyIHRvIHRoZSBwbGF5LCBhcyBjb21wYXJlZCB0byB0aGUgd2hvbGUgY2FzdCBvZiB0aGUgcGxheS4gQW1vbmcgdGhlIG90aGVyIFBva2VyIEJ1ZGRpZXMgb2YgT3NjYXIsIE93YWlzIFphaGlkIGFzIE11cnJheSB0aGUgcG9saWNlbWFuIGFuZCBTaGF5YW4gU2hhaCBHaWxhbmkgYXMgU3BlZWQgdGhlIHNjZXB0aWMgbWFkZSB0aGVpciBwcmVzZW5jZSBmZWx0IHdpdGggZ29vZCBwZXJmb3JtYW5jZS5PbmUgbXVzdCBhbHNvIG1lbnRpb24gdGhlIEN1bHR1cmFsIEFtYmFzc2Fkb3IgZnJvbSBVUyBhbmQgdGhlIERpcmVjdG9yIG9mIHRoZSBwbGF5IEFsbGVuIE5hdXNlIGZvciBnZXR0aW5nIGEgbG9jYWwgdGVhbSBwZXJmb3JtIHRoaXMgQW1lcmljYW4gdGhlbWUuIFRoZSBVUyBhbWJhc3NhZG9yIHJpZ2h0bHkgc2FpZCAnd2l0aCA0MCB5ZWFycyBleHBlcmllbmNlLCBBbGxlbiB3b3JrZWQgaGFyZCB0byBnZXQgYW4gYW1hdGV1ciBsb2NhbCB0ZWFtIHRvIHBlcmZvcm0gdXAgdG8gdGhlIEFtZXJpY2FuIG1hcmsnLiAKT24gYW55IGdpdmVuIGRheSwgTXIuIE1jTnV0dCBzcGVuZHMgYWJvdXQgMjAgdG8gNDAgcGVyY2VudCBvZiBoaXMgdGltZSBzdGFuZGluZyB1cCB0byB3b3JrLi4gCkxlcyBjaW5xIGF1dHJlcyBvbnQgYXVzc2kgc3ViaSBkZXMgcGVydGVzIGp1ZyBhY2NlcHRhYmxlcyBhdSBwb2ludCBkZSB2dWUgbS4gCk1vc3QgcHJlZ25hbnQgd29tZW4gYXJlIHNjcmVlbmVkIGluIHRoZSBzZWNvbmQgdHJpbWVzdGVyIGVhcmxpZXIgaWYgcmlzayBmYWN0b3JzIGFyZSBwcmVzZW50LiAKQnkgbGF3LCB0aGUgTWFuaXRvYmEgZ292ZXJubWVudCBtdXN0IG5vdyBtYWludGFpbiBhIHB1YmxpYyBsaXN0aW5nIG9mIGFsbCByZWd1bGF0b3J5IHJlcXVpcmVtZW50cyBhbmQgd2hlcmUgdG8gZmluZCB0aGVtLiAKRXZlcnlib2R5IHdobyB0YWxrcyBhYm91dCBhdG9taWMgZW5lcmd5IGtub3dzIEFsYmVydCBFaW5zdGVpbiBlcXVhdGlvbiBFPU1jMjogdml6LiwgdGhlIGVuZXJneSByZWxlYXNlIGluIGEgbnVjbGVhciByZWFjdGlvbiBjYW4gYmUgY2FsY3VsYXRlZCBmcm9tIHRoZSBkZWNyZWFzZSBpbiBtYXNzLiBJbiB0aGUgZmlzc2lvbiBvZiB0aGUgdXJhbml1bSBudWNsZXVzLCBvbmUgdGVudGggb2Ygb25lIHBlciBjZW50IG9mIHRoZSBtYXNzIGlzIGNvbnZlcnRlZCBpbnRvIGVuZXJneTsgaW4gdGhlIGZ1c2lvbiBvZiBmb3VyIGh5ZHJvZ2VuIG51Y2xlaSB0byBmb3JtIGhlbGl1bSwgc2V2ZW4gdGVudGhzIG9mIG9uZSBwZXJjZW50IGlzIHNvIGNvbnZlcnRlZC4gV2hlbiB0aGVzZSBzdGF0ZW1lbnRzIGFyZSBtYWRlIGluIG5ld3NwYXBlciByZXBvcnRzLCBpdCBpcyB1c3VhbGx5IGltcGxpZWQgdGhhdCB0aGVyZSBvdWdodCB0byBiZSBzb21lIHdheSBpbiB3aGljaCBhbGwgdGhlIG1hc3Mgb2YgYSBudWNsZXVzIGNvdWxkIGJlIGNvbnZlcnRlZCBpbnRvIGVuZXJneSwgYW5kIHRoYXQgd2UgYXJlIG1lcmVseSB3YWl0aW5nIGZvciB0ZWNobmljYWwgZGV2ZWxvcG1lbnRzIHRvIG1ha2UgdGhpcyBwcmFjdGljYWwuIApGdWxsIHNwZWN0cnVtIGhhbG8gZmx1b3Jlc2NlbnQgYnVsYiBpbmNsdWRlZCBMaWdodHdlaWdodCwgY29tcGFjdCBhbmQgcG9ydGFibGUgU3RvcmFnZSBjb21wYXJ0bWVudCBmb3IgeW91ciBlc3NlbnRpYWxzIEFkanVzdHMgdG8gbWFueSBhbmdsZXMgZm9yIHZpZXdpbmcgY29udmVuaWVuY2UgV2FsbCBtb3VudGFibGUgKGluY2x1ZGVzIG1vdW50aW5nIGhhcmR3YXJlKSBBQy9EQyBvciBiYXR0ZXJ5IHBvd2VyZWQgKGFkYXB0ZXIgYW5kIGJhdHRlcmllcyBpbmNsdWRlZCkgMiB5ZWFyIHdhcnJhbnR5LiAKSSB0aGluayB5b3VyIGNob2ljZSBpcyBhd2Vzb21lLCBhbmQgaW4gbXkgb3BpbmlvbiwgeW91ciBqb2IgbWF0dGVycyBhcyBtdWNoIChvciBldmVuIG1vcmUpIHRvIHRoZSB3b3JsZCBhcyBiZWluZyBhIGRvY3RvciBvciB3aGF0ZXZlci4gTWFraW5nIGEgZGlmZmVyZW5jZSBpbiB0aGUgbGl2ZXMgb2YgbXVsdGlwbGUga2lkcyBjYW4gbGl0ZXJhbGx5IGNoYW5nZSB0aGUgd29ybGQgZnV0dXJlLiAKIk9ubHkgZ2FtYmxlIGZvciBmdW4uIApJIGFsd2F5cyBjYXJyaWVkIGluc3VyYW5jZSwgc28gSSBhZG1pdHRlZGx5IHdhc24gc3VyZSB3aGF0IHRoZSBzaXR1YXRpb24gd2FzIGlmIHlvdSB3ZXJlIGNvbXBsZXRlbHkgdW5pbnN1cmVkLiAKQmVuZWZpdHMgRW1wbG95ZXJzIGJlbmVmaXQgZnJvbSBoYXZpbmcgaGVhbHRoeSBlbXBsb3llZXMuIEVtcGxveWVlcyBiZW5lZml0IGZyb20gYmVpbmcgaGVhbHRoeSBhbmQgaGF2aW5nIHRoZSBhc3Npc3RhbmNlIHRoZXkgbmVlZCB0byBhZGRyZXNzIGFuZCBtYWludGFpbiBwZXJzb25hbCB3ZWxsbmVzcy4gClllcyBhbmQgbm8uIFRydWUsIHRoZSBUVEIgKGZvcm1lcmx5IHRoZSBBVEYpIGRvZXMgYXBwcm92ZSBiZWVyIHJlY2lwZXMsIGJ1dCB0aGV5IGRlZmVyIHRvIHRoZSBGREEgdG8gZGVjaWRlIGlmIGFuIGluZ3JlZGllbnQgaXMgR1JBUyAoZ2VuZXJhbGx5IHJlZ2FyZGVkIGFzIHNhZmUpIGFuZCBhbGxvd2VkIGZvciBjb25zdW1wdGlvbiBhbmQgaW4gd2hhdCBxdWFudGl0aWVzLiBQcm9ibGVtIGlzLCBhcyBzb21lb25lIHdobyBpcyBpbiB0aGUgaW5kdXN0cnkgYW5kIGNyZWF0ZXMgcmVjaXBlcywgdGhlcmUgaXMgbm8gb2ZmaWNpYWwgY29tcHJlaGVuc2l2ZSBHUkFTIGxpc3QuIEEgZmV3IHBhcnRpYWwgbGlzdHMsIHN1cmUsIGFuZCBhIGxpc3Qgb2YgZm9yYmlkZGVuIGluZ3JlZGllbnRzLCBidXQgbm8gZWFzeSB3YXkgZm9yIG1lIHRvIGNoZWNrIGlmIEkgY2FuIHB1dCBhIHRoaW5nIGluIG15IGJlZXIuCkkgZG9uIHJlYWxseSBtaW5kIGxvdyBrZXkgb3IgcGVkZXN0cmlhbiBib29rcyBlaXRoZXIuIEkgdGhpbmsgImJvcmluZyIgc2V0dGluZ3MgbGlrZSB0aGUgbGlicmFyeSBvciB0aGUgY29mZmVlIHNob3Agb3IgYSB5b2dhIGNsYXNzIGNhbiByZWFsbHkgZG8gc29tZSBpbnRlcmVzdGluZyB3b3JrLCBidXQgSSBqdXN0IHJlY2FsbCBBRG9XIGJlaW5nIHRvbyBtdWNoIG9mIGEgc2xvdyBidXJuIGZvciBtZS4gQnV0IGFsc28geW91IGNvbnZpbmNlZCBtZSB0byBnbyBmb3IgYSByb3VuZCB0d28sIHNvIG1heWJlIG15IGV4cGVyaWVuY2Ugd2lsbCBiZSBkaWZmZXJlbnQgdGhpcyB0aW1lLgpUcnVtcCBuZWVkcyB0byBnby4gVGhlIFVTLCBoZWxsIHRoZSBlbnRpcmUgd29ybGQgd2lsbCBiZSBpbiBtdWNoIGJldHRlciBzaGFwZSB3aXRob3V0IHRoYXQgbHlpbmcgd2Vhc2VsLiBXaGljaCBpcyB3aHkgd2UgbmVlZCB0byBtYWtlIHN1cmUgdGhhdCB0aGVyZSBpcyBubyBhdmVudWUgb2YgZXNjYXBlLiBXZSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGUgY291bnRyeSBpcyBvbiBib2FyZCBiZWZvcmUgd2UgcHVsbCB0aGUgdHJpZ2dlci4KSSBtaXNzIG15IGdyYWRlIDggZnJpZW5kcywgdGhleSB0aGUgZnVubmVzdCBwZW9wbGUgSSBldmVyIG1ldCBpbiB0aGUgZW50aXJlIHNjaG9vbG4uIFN0dWR5IGNvbW11bml0eTsgZ3JvdXAgcHJvamVjdHYuIFRvIHN0dWR5IHRvZ2V0aGVyOyB0byBnaXZlIHN1cHBvcnQgb24gc3R1ZHlpbmdDb21wb3VuZCBvZiAoY2lyY2xlKSwgYW5kIEhpbWEgKGh1bWFucylJIGdvdCBtb3JlIHNlcmlvdXMgaW4gdGhlIHN0dWR5Z3JhbSBjb21tdW5pdHkgdGhpcyB5ZWFyLiAKU2luZ2xlIGZhbWlseSBtYXJrZXQgd2lsbCByZW1haW4gc2xvdyBhbmQgY29udGludWUgdG8gZXhwZXJpZW5jZSBmdXJ0aGVyIHByaWNlIGNvcnJlY3Rpb25zLCBhbmQgSSBob25lc3RseSBiZWxpZXZlIHRoaXMgaXMgYSBnb29kIHRoaW5nLCBoZSBhZGRlZC4gClRoZSBjb2xsZWN0aW9uIHNob3djYXNlcyBsb2NhbCBpbW1pZ3JhbnRzIGZyb20gMjIgZGlmZmVyZW50IGNvdW50cmllcywgYW5kIHBhcnRpY2lwYW50cyByYW5nZSBpbiBhZ2UsIHByb2Zlc3Npb24sIGFuZCBob3cgdGhleSBlbmRlZCB1cCBpbiBNaW5uZXNvdGEsIGJlIGl0IHRocm91Z2ggREFDQSwgYXMgcmVmdWdlZXMsIG9yIHRocm91Z2ggZmFtaWx5IGNvbm5lY3Rpb25zLiBFdmVyeW9uZSBoYXMgdGhlaXIgb3duIHN0b3J5LCBidXQgdGhleSBhbGwgaW50ZXJzZWN0IGhlcmUgaW4gb3VyIHN0YXRlLiAKTGl0dGxlSXJpc2hIYXRlQmFsbCAgNyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KSXQgaXMgYWxzbyBtdWNoIG1vcmUgZGlmZmljdWx0IHRvIGdldCBtb25leSBvbmxpbmUsIHRoZXJlZm9yZSB3ZSBzZWVpbmcgYSBtdWNoIGRpZmZlcmVudCBwb3B1bGF0aW9uIG9mIHBsYXllcnMgd2hvIHBsYXkgb25saW5lLiAKQWR2ZXJ0aXNlcnMgYmFzZWQgaW4gRnJhbmNlIGFyZSB1bmFibGUgdG8gY29tcGV0ZSB3aXRoIG11bHRpbmF0aW9uYWxzLCBhcyBpdCBpc24gdmlhYmxlIGZvciB0aGVtIHRvIG9mZnNob3JlIHRoZWlyIHByb2ZpdHMuIApJIHdhcyBhIGJpZyBmYW4gb2YgSm91cm5leSB0byB0aGUgTW91bnRhaW4gb2YgRm9yZXZlciwgYnV0IEkgbGlrZSBBbGl2ZSBpbiB0aGUgRWFzdCBqdXN0IGEgbGl0dGxlIGJpdCBtb3JlLiAKVGhlIGNsaWZmIHdhbGsgcnVucyBjbG9zZSB0byB0aGUgcGF0aCBvZiB0aGUgcmFpbHdheSwgbWFpbmx5IGFib3ZlIGl0LCBzbyB0aGVyZSBhcmUgbWFueSB2aWV3cyBkb3duIG9udG8gdGhlIHRyYWNrLiAKU28gbWFueSBwZW9wbGUgaGVyZSBhcmUgc2F5aW5nIG1vbmV5IGJ1dCB5b3UgZ3V5cyBoYXZlIGl0IGFsbCB3cm9uZy4gSWYgeW91J3JlIHBsYXlpbmcgcG9rZXIgZm9yIG1vbmV5IHRoZW4geW91IHdpbGwgMS4gCkFzIGZvciBsaXZlIHBva2VyLCB0b3VybmFtZW50cyBhcmUgbGVnYWwsIGJ1dCBhcyBmb3IgY2FzaCBnYW1lcyAgIGl0IGRpZmZlcnMgZnJvbSBjb3VudHJ5IHRvIGNvdW50cnkgYXMgd2VsbC4gKEZ1bGwgQW5zd2VyKS4gCkEgbGl0dGxlIHNtYWxsLCBwcmVmZXIgMS8yIHBvdCBzaXppbmcgYnV0IGl0IHN0aWxsIG9rYXkuIEdldHRpbmcgcmFpc2VkIGFsbCBpbiBzdWNrcy4gWW91IGJsdWZmIGNhdGNoaW5nIGhlcmUsIHNvIGl0IHJlYWxseSBqdXN0IGRlcGVuZHMgb24gd2hhdCB5b3UgdGhpbmsgb2YgdGhlaXIgYmx1ZmZpbmcgdGVuZGVuY2llcy4gCldoaWxlIHdlIGhhdmUgc3Vydml2ZWQgZm9yIDYwIHllYXJzIGFtYmxpbmcgYWxvbmcgd2l0aCBhbGwga2luZHMgb2Ygc2hlbmFuaWdhbnMgaW1wb3NlZCBvbiB0aGUgcGVvcGxlIG9mIHRoaXMgY291bnRyeSwgb3VyIGluc3RpdHV0aW9ucyBoYXZlIGRlZ2VuZXJhdGVkIGJleW9uZCByZWNvZ25pdGlvbiAgIGFsbCB0byBzYXZlIHRoZSBrdXJzaSByZXBlYXRlZGx5IGZvciBzY29yZXMgb2YgaW5kaXZpZHVhbHMgd2hvIHJlYWxseSBoYXZlbid0IGRlbGl2ZXJlZCB0aGUgZ29vZHMuIFRoZSBwb2xpdGljYWwgc2NlbmFyaW8gdG9kYXkgaXMgbGlrZSB0aGUgS2FyYWNoaSBTdG9jayBFeGNoYW5nZSAgIG5vYm9keSByZWFsbHkga25vd3Mgd2hhdCdzIGdvaW5nIHRvIGhhcHBlbiwgYW5kIGJ5IHRoZSB0aW1lIHBlb3BsZSBsaWtlIHVzIGJlZ2luIGJ1eWluZyB0aGUgcmVhbCBwbGF5ZXJzIGhhdmUgYWxyZWFkeSBiZWd1biBzZWxsaW5nLgpJdCdzIGZ1biBhcyBoZWxsIGFuZCBpdCdzIGdvcmdlb3VzLiBUaGlzIHNoaXQgaXNuJ3QgRk83NiBvciBEMi4gClRoYXQgYmVpbmcgc2FpZCwgaWYgYSBudW1wdHkgbGlrZSBtZSBjYW4gZmlndXJlIGl0IG91dCwgaXQgdmVyeSBkb2FibGUuIApTZWNvbmQgb2ZmZW5zZXMgd2lsbCByZXN1bHQgaW4gYSBiYW4uIAoiTmV3IHRlY2hub2xvZ3kgbGlrZSBQckVQIHRvIHByZXZlbnQgSElWIG1lYW5zIHRoYXQgc2V4dWFsIGhlYWx0aCBwcmFjdGljZXMgd2lsbCBuZWVkIHRvIGV2b2x2ZSAgIGFuZCB3ZSBhcmUgdmVyeSBjb25maWRlbnQgdGhhdCBjb25kb21zIHdpbGwgcmVtYWluIGEgc2lnbmlmaWNhbnQgcGFydCBvZiBnYXkgbWVuJ3Mgc2FmZSBzZXggcHJhY3RpY2UuIFJlamVjdCB0aGF0IGdheSBtZW4gYXJlIGNvbXBsYWNlbnQgd2hlbiBpdCBjb21lcyB0byBtYW5hZ2luZyB0aGVpciwgYW5kIHRoZWlyIHNleHVhbCBwYXJ0bmVycycsIHNleHVhbCBoZWFsdGguIEp1c3QgbGlrZSBpbiB0aGUgZ2VuZXJhbCBwb3B1bGF0aW9uLCBub3QgZXZlcnkgZ2F5IG1hbiB3aWxsIHVzZSBhIGNvbmRvbSBldmVyeSB0aW1lLiIuIApUaGUgZ2FtZSBpcyBUZXhhcyBIb2xkICdFbSAobm8gbGltaXQpLCBhIGRpYW1vbmRiYWNrIHNwZWNpZXMgb2Ygc2V2ZW4gY2FyZCBzdHVkIGluIHdoaWNoIGVhY2ggcGxheWVyIGdldHMgdHdvIGNhcmRzIGRvd24sIGFuZCB0aGVuIGZpdmUgY2FyZHMgdXNhYmxlIGJ5IGFsbCBwbGF5ZXJzIGFyZSBkZWFsdCBmYWNlIHVwOyB0aGUgZmlyc3QgdGhyZWUgYXQgdGhlIHNhbWUgdGltZSwgdGhlbiB0aGUgZm91cnRoLCB0aGVuIHRoZSBsYXN0LiBZb3UgY2FuJ3QgYnJpbmcgaW4gZnJlc2ggbW9uZXksIHNvIHRoYXQgd2hlbiB5b3UgcnVuIGRyeSwgeW91J3JlIGdvbmUsIGZyb3plbiBvdXQuIApJbnRlcmVzdGluZ2x5LCBJIGRldmVsb3BlZCBhIHBpbXBsZSBhZnRlciBlYXRpbmcgaWNlIGNyZWFtIHRoaXMgcGFzdCB3ZWVrZW5kLiBDb3JyZWxhdGlvbiBpc24gY2F1c2F0aW9uIGJ1dCBJIHByZXR0eSBzdXJlIGl0IGhhcyB3b3JrZWQgZm9yIG1lISBCZXN0IG9mIGx1Y2shIDY4IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnby4gCkxhc3QgeWVhciBJIGhhZCBhbiB1bnBsYW5uZWQgZXhpdCB0byBMb25lIFBpbmUsIGJ1dCBoYWQgcGxhbm5lZCBvbiBnb2luZyBzdHJhaWdodCBmcm9tIEtNIG91dCBLZWFyc2FyZ2UuIApUaGlyZCBob3VyIGlzIGhlciBvcmNoZXN0cmEgY2xhc3MgYW5kIHNoZSBsb3ZlcyBpdC4gSXQgaXMgdGhlIG9ubHkgcGxhY2Ugc2hlIGZlZWxzIGFsaXZlLi4gCkphbm4gV2VubmVyQW5kIGFzIGEgYm9udXMgdG8gdGhpcyBsaXN0LCBhbmQgYmVjYXVzZSBJIHdhbnRlZCB0byB0YWtlIGl0IGFsbCB0aGUgd2F5IHRvIGVsZXZlbiwgSSBnaXZlIHlvdSBNaXN0ZXIgUm9sbGluZyBTdG9uZSBNYWdhemluZSBoaW1zZWxmLiBXaXRoIGFib3V0IHR3byBzZWNvbmRzIG9mIHNjcmVlbiB0aW1lIGFuZCBhYnNvbHV0ZWx5IG5vIHNwZWFraW5nIGxpbmVzLCBKYW5uIFdlbm5lciBpcyBjcmVkaXRlZCBhcyAiTGVnZW5kIGluIENhYi4iIEhlIGlzIHNob3duIGluIHRoZSBiYWNrIG9mIGEgdGF4aSwgYXMgV2lsbGlhbSBydW5zIGRvd24gdGhlIHN0cmVldHMgc2VhcmNoaW5nIGZvciBhIHJlamVjdGVkIFBlbm55IExhbmUuIFdpdGhvdXQgd2hpY2gsIHdlIG1pZ2h0IGhhdmUgbmV2ZXIgYmVlbiBncmFjZWQgd2l0aCB0aGUgYXdlc29tZW5lc3MgdGhhdCBpcyBBbG1vc3QgRmFtb3VzLi4gCkJvdG94LCB0aGUgd29uZGVyIGRydWcgdGhhdCBjYW4gcGFyYWx5emUgeW91ciBmYWNlIGFuZCB0aGVyZWJ5IGVyYXNlIG1vc3Qgb2YgdGhlIGxpbmVzIGNhdXNlZCBieSBleHByZXNzaW5nIGVtb3Rpb24gbWlnaHQgaGF2ZSBhbm90aGVyIHVzZTogaXQgY2FuIGtlZXAgdXMgcGVybWFuZW50bHkgaGFwcHkgc2luY2Ugd2l0aG91dCB0aGUgYmlvZmVlZGJhY2sgb2YgImZyb3duaW5nIiB3ZSBzZWVtIHVuYWJsZSB0byBrbm93IHRoYXQgd2UgYW5ncnkgb3Igc2FkLiAKUGx1cyB0YXJkIGR1cmFudCBsYSBjb3Vyc2UsIGxvcnMgZCBuZXV0cmFsaXNhdGlvbiwgaiBjb25udSB1biBhdXRyZSBtb21lbnQgY2hhdWQuIFVuIHNhYyBkZSBwbGFzdGlxdWUgcyBjb2luYyBsIHNpdHUgc3VyIGxlIGRlc3N1cyBkdSBjaCBqdXN0ZSBkZXZhbnQgbWVzIHlldXgsIGV0IG0gSmUgbiBwYXMgbCBhdmVjIG1lcyBkb2lndHMuIEogZG9uYyBkZXNzZXJyIG1lcyBjZWludHVyZXMgZGUgcyBwb3VyIHBvdXZvaXIgbWUgcGVuY2hlciB2ZXJzIGwgSmUgbWUgc3VpcyBicnVzcXVlbWVudCBzb3V2ZW51IHF1ZSBqIGNvdXAgbGUgYm91dCBkZXMgY2VpbnR1cmVzIHBvdXIgcXUgc29pZW50IHBsdXMgY291cnRlcywgY2FyIGVsbGVzIGF2YWllbnQgdGVuZGFuY2UgYmF0dHJlIGF1IHZlbnQuIEogY2VzcyBkZSB0aXJlciBhbG9ycyBxdSBuZSByZXN0YWl0IHF1IGNlbnRpbSBkZSBjZWludHVyZS4gU2kgbCBzb3J0aWUgZGUgbGEgYm91Y2xlLCBqIG9ibGlnIGRlIG0gYXV4IHB1aXRzLgogMTEgcG9pbnRzICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ29Eb24gd29ycnksIEkgZ29pbmcgaW50byBhbmVzdGhlc2lhIGFuZCBub25lIG9mIHRoaXMgbWFkZSBhbnkgaW50dWl0aXZlIHNlbnNlIHRvIG1lIGZvciBhIHdoaWxlLiBJIHRyeSB0byBleHBsYWluIGl0IHRvIHlvdSBpbiBhIHdheSB0aGF0IGlzIG1vcmUgb3IgbGVzcyBmYWN0dWFsbHkgY29ycmVjdCwgYnV0IGEgdHJ1ZSBibG9vZGVkIHBoYXJtYWNvbG9naXN0IG1pZ2h0IGhhdmUgYW4gYW5ldXJ5c20gcmVhZGluZyBpdC4gCllvdSBjYW4gbGVhdmUgdGhlbSBoZXJlIGFuZCBJIHdpbGwgZG8gbXkgYmVzdCB0byBnZXQgYW4gYW5zd2VyIGZvciB5b3UKVGhlIGZpbG0gd2UnbGwgcXVvdGUgdGhpcyB3ZWVrIGluc3RlYWQgb2YgbWFraW5nIHJhbmNvciBpbmR1Y2luZyBwcmVkaWN0aW9ucyB0aGF0IG1ha2Ugb3Zlcndyb3VnaHQsIHVuZGVyIHNvY2lhbGl6ZWQgdHJvbGwgZmFucyBnbyBvbiBjdXJzZSBzcGl0dGluZyByYW1wYWdlcyB3aWxsIGJlIHRoZSBkZWxpZ2h0ZnVsbHkga2l0c2NoeSB3ZXN0ZXJuIFRvbWJzdG9uZS4gSXQgc3RhcnJlZCBWYWwgS2lsbWVyIGFzIERvYyBIb2xsaWRheSwgd2hvIGNvbXBsZXRlbHkgdXBzdGFnZWQgYSBmaXJzdCBjbGFzcyBjYXN0IGluY2x1ZGluZyBLdXJ0IFJ1c3NlbGwsIFNhbSBFbGxpb3R0LCBCaWxsIFBheHRvbiwgUG93ZXJzIEJvb3RoZSwgQ2hhcmx0b24gSGVzdG9uLCBKYXNvbiBQcmllc3RsZXksIE1pY2hhZWwgUm9va2VyLCBCaWxseSBaYW5lLCBEYW5hIERlbGFuZXkgYW5kICBCaWxseSBCb2IgVGhvcm50b24uIApJbiB0aGlzIGNhc2UsIHRoZSBvd25lciB3b3VsZCByZXF1aXJlIHRoZSBhcHByb3ZhbCBvZiB0aGUgc3RyYXRhIGNvcnBvcmF0aW9uIGJlZm9yZSBtYWtpbmcgYW55IGFsdGVyYXRpb25zIHRvIHRoZSBzdHJ1Y3R1cmUgb2YgdGhlIGJ1aWxkaW5nIG9yIHRoZSBidWlsZGluZyBlbnZlbG9wZSBmb3IgdGhlIGV4aGF1c3QuIApXZSBuZWVkIHRvIGFkdmFuY2UgdGhlc2UgcmVsYXRpb25zaGlwcyBiZWNhdXNlIGdvaW5nIGZvcndhcmQsIHRoZXNlIGFyZSBvdXIgY3VzdG9tZXJzIHRoYXQgd2Ugd2lsbCBnZXQgaW50byBwcm9kdWN0aW9uIHZlaGljbGVzIHdpdGguIFdlIG9mdGVuIHVzZSBob3cgbWFueSBvZiBvdXIgYXV0b21vdGl2ZSBpbnZpdGVlcyBhY3R1YWxseSBzaG93IHVwIHRvIGFuIGV2ZW50IGFzIGEgbWVhc3VyZSBmb3IgZ3Jvd3RoLCBvciBob3cgbWFueSBvZiBvdXIgY2xpZW50cyBhY3R1YWxseSBhdHRlbmQgb3VyIGRlbW9zLiBXZSBhbHNvIGdldCBhIHRyZW1lbmRvdXMgYW1vdW50IG9mIHByZXNzIGFjdGl2aXR5LCBzbyB3ZSByb3V0aW5lbHkgbWVhc3VyZSBvdXIgY292ZXJhZ2UgYW5kIHJlYWNoIG9mIGNvdmVyYWdlLiBUaGVyZSdzIGEgbG90IG1vcmUgYmVpbmcgc3BlbnQgb24gcHJvZHVjdCBtYXJrZXRpbmcgYW5kIG1ha2luZyBzdXJlIHRoYXQgd2UgaGF2ZSBlbm91Z2ggdGVjaG5pY2FsIGNvbnRlbnQgYmVjYXVzZSBtYW55IG9mIHRoZSBhdXRvbW90aXZlIGNvbXBhbmllcyBsb29rIHRvIHVzIGZvciBndWlkYW5jZSBvbiBob3cgdGhpcyB0ZWNobm9sb2d5IGNhbiBiZSBhcHBsaWVkIHRvIGZ1dHVyZSB2ZWhpY2xlcy4gSSdtIHdheSBtb3JlIGZvY3VzZWQgb24gcHJvZHVjdCBtYXJrZXRpbmcgYW5kIGNvbW11bmljYXRpb25zIG1hbmFnZW1lbnQgdGhhbiBvbiBidWlsZGluZyBhIHBpcGVsaW5lIGFuZCBsZWFkIGdlbmVyYXRpb24uCkV2aWRlbmNlIGF0IHRyaWFsIHdhcyB0aGF0IHR3byB3b21lbiBzZXBhcmF0ZWx5IHdlbnQgZm9yIG1hc3NhZ2VzIHRvIFNhaGRldidzIGZhY2lsaXR5LCBTYXZ5IEludGVybmF0aW9uYWwuIFRoZSBmaXJzdCBjb21wbGFpbmFudCwgYWdlZCAyNSwgc2FpZCBoZSB0b3VjaGVkIGhlciBnZW5pdGFscyBpbmFwcHJvcHJpYXRlbHkgZGVzcGl0ZSBoZXIgcmVxdWVzdHMgZm9yIGhpbSB0byBzdG9wLCBhbmQga2lzc2VkIGhlciBvbiB0aGUgbW91dGguIFNoZSB3ZW50IHRvIHBvbGljZSB0aGF0IHNhbWUgbmlnaHQuClRoZXkgd2FudCB0aGUgc2VhdCBJIHBhaWQgZm9yIHRvby4gCk9wdGlvbnM6IERvbWlub3MsIFBpenphIEh1dCwgTWlnIFRoZSBGbHlpbmcgUGllLlRoZSBGb29kIExpb24gaXMgbmljZXIgdGhhbiB0aGUgb25lIGluIEZpdmUgUG9pbnRzLlByZXR0eSBtdWNoIG5vdGhpbmcgaXMgb3BlbiBvbiBTdW5kYXkgKG5vdCBzdXJwcmlzaW5nLilIYXZlIGZ1biBnZXR0aW5nIHlvdXIgaGFpcmN1dCBhdCBXYWxtYXJ0LlRoZXJlIGlzIGEgSmFwYW5lc2UgR2FyZGVuIVRoZXJlIGlzIG5vIG1vdmllIHRoZWF0cmUuWW91IGxlc3MgdGhhbiBhbiBob3VyIGZyb20gVGhlIEJpZyBNby5Bbnl0aW1lIEZpdG5lc3MgaXMgY29taW5nIHRvIE5ld2JlcnJ5LkFzIGZhciBhcyBjb2ZmZWUgc2hvcHMgZ28gdGhlcmUgaXMgSGFsZiBGdWxsIENvZmZlZSBhbmQgV2luZS4gVGhlaXIgZm9vZCBpcyBub3QgdmVyeSBnb29kICh0aGluayByZWhlYXRlZCBTdGFyYnVja3MgZ29vZCwgYnV0IG5vdCBhcyBnb29kLikgVGhlaXIgZXNwcmVzc28gaXMgb2theS4gClNvLCB5b3UgYXJlIGxvb2tpbmcgZm9yIHRoZWJlc3Qgb25saW5lIHBva2VyIGdhbWU/IFdoYXQgaXMgdGhlIGJlc3QgcG9rZXIgb25saW5lIGdhbWUgaWYgbm90IGEgZ2FtZSB0aGF0IGxldHMgeW91IHdpbiBhIGxvdCEgU28sIGhlcmUgYXJlIHNvbWUgdGlwcyBhbmQgdHJpY2tzIHdoaWNoIHdlIGNhbiByZXZlYWwgdG8geW91LiAKQXMgYSBnYW1lLCBwb2tlciBoYXMgYmVjb21lIHBvcHVsYXIgb25seSBvdmVyIHRoZSBwYXN0IGZldyB5ZWFycy4gRXZlbiBhIGRlY2FkZSBiYWNrLCBhIGZldyBwZW9wbGUgdXNlZCB0byBrbm93IGFib3V0IHRoZSBjaGFybSBvZiB0aGlzIGdhbWUgYW5kIHRoZSByaWNoIHBlb3BsZSB1c2VkIHRvIHBsYXkgdGhpcyBnYW1lIHRvIGV4cGxvaXQgdGhlbXNlbHZlcyBhbmQgb3RoZXJzLiBHcmFkdWFsbHksIHRoZXNlIGdhbWVzIGJlY29tZSBwb3B1bGFyIGFtb25nIGFsbCB0aGUgcGVvcGxlIGFuZCBhIHN0YXRzIHNheSB0aGF0IGV2ZXJ5IHRocmVlIHBlb3BsZSBpbiBVUyBoYXMgYXQgbGVhc3Qgb25lIHBva2VyIHBsYXllci4gCk1hcmtldCBzdHJlZXQgYWxvbmUgaGFzIG1vcmUgZ29vZCByZXN0YXVyYW50cyB0aGFuIGp1c3QgYWJvdXQgYW55IG90aGVyIHRvd24gaW4gdGhlIHN0YXRlIGFuZCB0aGVyZSdzIHBsZW50eSBvZiBnb29kIHJlc3RhdXJhbnRzIG9mZiBvZiBtYXJrZXQgc3RyZWV0IGluIEZyZWRlcmljayB0b28uLiAKU28gd2hpbGUgdGhlc2UgdGVzdHMgYXJlIG5vdCAxMDAlIGFjY3VyYXRlLCB0aGV5IGNhbiBiZSBleHRyZW1lbHkgdXNlZnVsIGluIGRldGVybWluaW5nIG5hdGlvbmFsIG9yaWdpbnMuClBsYXlpbmcgcG9rZXIgYnJvdWdodApIZSBsb3ZlZCBpZGVhcyBhbmQgd29yZHMgYW5kIHRoaW5raW5nIGFuZCBkZWJhdGUuIFdvZGVob3VzZSB3aG8gcmV2ZWxsZWQgaW4gdGhlIHVzZSBhbmQgY2hvaWNlIG9mIHdvcmRzLiAKV2hpY2ggaGFzIGEgbWluaW1hbCBhbW91bnQgb2YgYml0IGFtb25nc3Qga25vd2xlZGdlIGFuZCB0aGVuIHByYWN0aWNlLCB5b3Ugc2hvdWxkIGJlIGFibGUgdG8gZ3Jhc3AgaW4gb3Igc28gbWludXRlcyB3aGV0aGVyIHBvdGVudGlhbGx5IG5vdCBhbiBhYnNvbHV0ZSBkZWFsIGNvdWxkIGJlIHJlYWxseSB2YWx1ZWQgYXQgZG9pbmcgcGx1cyBpZiBpdCBpcyBhbHdheXMganVzdCB0aGlzIG1vbmV5IGFieXNzIGluIGhpZGUuLiAKMikgZm9yIG5vbiBlc3RhYmxpc2htZW50IHBvbGl0aWNpYW5zClJlbGF0ZWQgU3RvcmllcyBBdWcuIDI5LCAyMDEyClRoZSBvcGVuaW5nIGlzIGEgc29vdGhpbmcgaW52b2NhdGlvbiBvZiBzcHJpbmd0aW1lLCB3aXRoIGVjaG9pbmcgY3Vja29vIGNhbGxzIGZyb20gdGhlIHdvb2R3aW5kcyBhbmQgZGVsaWNhdGUgZmFuZmFyZXMgZnJvbSB0aGUgYnJhc3MuIApJIGNhbiBoZWxwIGJ1dCBmZWVsIHlvdSBzdGF0aW5nIHRoaW5ncyB0aGF0IHNpbXBseSBhcmVuIHRydWUuZGVlcHRoYXd0ICAxMSBwb2ludHMgIHN1Ym1pdHRlZCAxNSBkYXlzIGFnb1NpYmxpbmcgcmVsYXRpb25zaGlwcyBhcmVuJ3Qgdm9sdW50YXJ5IHNvIGl0J3MgYSBsaXR0bGUgZGlmZmVyZW50LCBidXQgc3R1ZGllcyBoYXZlIHNob3duIGEgY29uc2lzdGVudCBsaW5rIGJldHdlZW4gc21hbGxlciBhZ2UgZ2FwcyBhbmQgY2xvc2VyIHNpYmxpbmcgcmVsYXRpb25zaGlwcyAoaGVyZSdzIG9uZSwgZm9yIGV4YW1wbGUuIFNpYmxpbmcgcmVsYXRpb25zaGlwcyBhcmUgYWxzbyB0aGUgc291cmNlIG9mIGEgbG90IG1vcmUgY29uZmxpY3QgdGhhbiB2b2x1bnRhcnkgZnJpZW5kc2hpcHMgYW5kIG9uZSBvZiB0aGUgYmlnZ2VzdCBzb2NpYWwgZGV2ZWxvcG1lbnQgYmVuZWZpdHMgaXMgdGhhdCBhcyBhIHJlc3VsdCBjaGlsZHJlbiB3aXRoIHNpYmxpbmdzIGJlY29tZSBiZXR0ZXIgYXQgbWFuYWdpbmcgY29uZmxpY3QgdGhhbiBvbmx5IGNoaWxkcmVuLlRoZSB0ZW5kZW5jeSB0byBiZSBmcmllbmRzIHdpdGggcGVvcGxlIGluIHlvdXIgYWdlIGdyb3VwIGdvZXMgYmV5b25kIGNoaWxkcmVuOyBldmVuIGVsZGVybHkgcGVvcGxlIHNob3cgdGhlIHNhbWUgcHJlZmVyZW5jZS4gCkluIHlvdXIgb3BpbmlvbiwgaGFzIHRoYXQgZGVncmFkZWQgcmVhZGluZXNzPy4gCk9wZXJhdGlvbiBFeHRlbmRlZCBDYXBpdGFsIGJlZ2FuIGl0cyBsaWZlIGFzIE9wZXJhdGlvbiBDYXBpdGFsLiAKVGVzdGluZyBpdCBvdXQgYmVmb3JlIGhhdmluZyB0byBsaXZlIGluIGEganVtcHN1aXQ/JyBvbmUgcGVyc29uIHR3ZWV0ZWQuRmFuIGNsdWI6IERlc3BpdGUgdGhlIGpva2VzLCBub3QgZXZlcnlvbmUgd2FzIGFnYWluc3QgdGhlIGxvb2suIApJbiBhZGRpdGlvbiB0byBzZWxsaW5nIHRvIGluZGl2aWR1YWwgY29uc3VtZXJzIGFuZCB0byBob21lIGJ1aWxkZXJzIGFuZCBob3RlbHMsIGhlIHNlZXMgdGhlIHBvdGVudGlhbCB0byBzZWxsIHRvIGhvc3BpdGFscywgc2Nob29scyBhbmQgdGhlIGFpcmxpbmUgaW5kdXN0cnkuIApUaGUgT1JDIHNlcnZlcyBhcyBhbiBhZHZpc29yIGFuZCBpbmZvcm1hdGlvbmFsIHJlc291cmNlIGZvciBpbnN0aXR1dGlvbmFsIHBvbGljeSBhbmQgcmVndWxhdG9yeSByZXF1aXJlbWVudHM7IHByb3ZpZGVzIGVkdWNhdGlvbmFsIG9wcG9ydHVuaXRpZXMsIHRyYWluaW5nLCBhbmQgaW52ZXN0aWdhdG9yIGNvbnN1bHRhdGlvbnM7IGFuZCBzZXJ2ZXMgYXMgdGhlIGFkbWluaXN0cmF0b3Igb2YgdGhlIElSQi4gCkEgZm91ciBkYXkgdG91ciB0byBNYWNhdSB3YXMgbm90aGluZyBsZXNzIHRoYW4gbHV4dXJpb3VzIGFuZCBhbHRob3VnaCBJIHN0YXllZCB3aXRoaW4gdGhlIGNvbmZpbmVzIG9mIHRoZSBwcm9wZXJ0eSBvZiBTYW5kcyBSZXNvcnRzIE1hY2FvLCBzdHJhbmdlbHksIEkgbmV2ZXIgZmVsdCB0aGUgbmVlZCB0byBzdGVwIG91dC4gSXQgZW5zdXJlZCBhIHRpY2sgYWdhaW5zdCBldmVyeSBpdGVtIG9uZSB3b3VsZCBoYXZlIG9uIHRoZWlyIGNoZWNrbGlzdCB3aGlsZSB0cmF2ZWxsaW5nLgpUaGV5IGhhZCB0aGVzZSBzbWFsbCB0YWN0aWNhbCBudWtlcyAoYWJvdXQgODBsYnMgb3Igc28pIGluIGEgYmFja3BhY2sgYW5kIHRoZXkgcGxhbm5lZCB0byBhaXIgZHJvcCB0aGUgQXJteSBndXlzIGluLCB0d28gdG8gYSB0ZWFtLCBhbmQgZGV0b25hdGUgdGhlbSBhdCB0aGUgZGFtbnMgYW5kIGZsb29kIHRoZSBjb3VudHJ5IGluIGhvcGVzIGZvciBhIHF1aWNrIHN1cnJlbmRlci4gClRoZW4gc2F5cyBoZSBqdXN0IGdldCBpdCBmcm9tIG15IGhvb2R5IHBvY2tldC4gCkhlIGxvb2tlZCBzbyBoZWFydGJyb2tlbiBhbmQgZW1iYXJyYXNzZWQsIGJ1dCB3aXRob3V0IGhlc2l0YXRpbmcgdGhlIGd1eSBpbiBmcm9udCBvZiBoaW0gcHV0IGRvd24gaGlzIHN0dWZmIGFuZCBoZWxwZWQgaGltIG91dC4gQ2FycmllZCBoaXMgdHJheSBvdmVyIGFuZCBoZWxwZWQgaGltIGdldCBzZXR0bGVkIGluIGF0IHRoZSB0YWJsZS4gSnVzdCBvbmUgb2YgdGhvc2Ugc21hbGwgdGhpbmdzIHRoYXQgbWFrZXMgeW91IHNtaWxlLiAKVGhpcyBpcyBhIG1hdHRlciBvZiBiYWxhbmNpbmcgcHVibGljIHNhZmV0eSBhbmQgd29ya2VycyByaWdodHMsIExhcG9ydGUgc2FpZC4gSGUgcG9pbnRlZCBvdXQgdGhhdCB2b2ljZSByZWNvcmRlcnMgaGF2ZSBiZWVuIHVzZWQgb24gcGxhbmVzIGFuZCBzaGlwcyBmb3IgeWVhcnMuCk1yLiBBbmQgTXJzLiBKIGFydWkgZGF1Z2h0ZXIsIEFkYSwgb2YgSGFnZXJzdG93biwgU2FtdWVsIFdhcnJlbi4gU3BlbnQgbGFzdCBUaHVyc2RheSB3aXRoIE1yLiAKQ291bGQgYmUgd2VsbCB0aG91Z2h0IG9mIGFzIHRoZSBsZWFkaW5nIGVkZ2UgaW4gdGhlIHNlY29uZCBpbmR1c3RyaWFsIHJldm9sdXRpb247IEVkbW9udG9uIGlzIGEgbGVhZGVyIGluIHRoZSBzY2llbmNlLCBVbml2ZXJzaXR5IG9mIEFsYmVydGEgY29tcHV0ZXIgc2NpZW5jZSBwcm9mZXNzb3IgUmljaGFyZCBTdXR0b24gc2FpZCBUdWVzZGF5LgpMaWtlIGhlciBodXNiYW5kLCBPbGl2aWEgSGFycmlzb24gaGFzIGEgZGVlcGx5IHNwaXJpdHVhbCBuYXR1cmUsIG1vc3Qgc3Ryb25nbHkgaW5mbHVlbmNlZCBieSB0aGUgcmVsaWdpb25zIG9mIHRoZSBFYXN0LiAKSGUgdGhlIHN1YmplY3Qgb2YgdGhlc2UgbWFnbmlmaWNlbnQgZWZmb3J0cyBieSBhbiB1bm5hbWVkIGNoaWxkLiAKSSBkaWQgaXQgYW5kIGRpZG4gZXZlbiBsZWF2ZSBGdWt1b2thIGFpcnBvcnQgb25jZS4gCldldHRlbi4gSmV0enQsIGRhIGplZGVyIFBva2Vyc3BpZWxlciBzZWluZXp3ZWkgUG9ja2V0IEthcnRlbiBlcmhhbHRlbiBoYXQsIGJlZ2lubnQgZWluZSBXZXR0cnVuZGUgbWl0IGRlbSBQb2tlcnNwaWVsZXIsIGRlciBsaW5rcyB2b20gUG9rZXJzcGllbGVyIHNpdHp0LCBkZXIgZGFzIEJpZyBCbGluZCBnZXNldHp0IGhhdC4gClRvIHRvcCBpdCBvZmYsIGhpcyBOby4gMSB0ZWFtIGFubm91bmNlZCBGcmlkYXkgYSBuZXcgc3BvbnNvcnNoaXAgZGVhbCB3aXRoIEdsb2JhbCBQb2tlciwgb25lIG9mIHRoZSB3b3JsZCBsZWFkaW5nIG9ubGluZSBnYW1pbmcgc2l0ZXMgbm8gc21hbGwgbmV3cyB3aGVuIGJhY2tpbmcgaXMgaGFyZCB0byBmaW5kLgoiSSBzZW50IHBpY3R1cmVzIHRvIGhlciBvZmZpY2UgYW5kIHRoZXkgc3F1ZWV6ZWQgbWUgaW4gZm9yIGFuIGFwcG9pbnRtZW50LCIgV29vZHdvcnRoIHNheXMuIApXaGVuIHNoZSBnb3QgYmFjaywgdGhlIGNhdCB3YXMgYmxlZWRpbmcgdG8gZGVhdGggZnJvbSBhbGwgdGhlIHB1bmN0dXJlIHdvdW5kcy4gVGhpcyBwYWNrIGtpbGxlZCAzIGNhdHMgdGhhdCBJIGtub3cgb2YgdGhhdCBzdW1tZXIuLiAKVGhlIHRvcCBtaWxpdGFyeSBjb21tYW5kZXIgaW4gQWZnaGFuaXN0YW4gd2FybnMgaW4gYSBjb25maWRlbnRpYWwgYXNzZXNzbWVudCBvZiB0aGUgd2FyIHRoZXJlIHRoYXQgaGUgbmVlZHMgYWRkaXRpb25hbCB0cm9vcHMgd2l0aGluIHRoZSBuZXh0IHllYXIgb3IgZWxzZSB0aGUgY29uZmxpY3QgIndpbGwgbGlrZWx5IHJlc3VsdCBpbiBmYWlsdXJlLiIKUHV0IGluIGRhaWx5IHdvcmsuIFllcywgeW91IGZhbGwgb2ZmIHRoZSBiYWxhbmNlIGJlYW0gb2NjYXNpb25hbGx5IGJ1dCB5b3UgZ290dGEgcHV0IHlvdXJzZWxmIGJhY2sgb24gaXQgYW5kIGtlZXAgZ29pbmcuIFlvdSBhcmUgdGhlIGxpdHRsZSBlbmdpbmUgdGhhdCBDQU4uIApCYXN0ZSB0aGUgdHVya2V5IGV2ZXJ5IDMwIG1pbnV0ZXMgb3Igc28gYW5kIGFkZCBtb3JlIHN0b2NrIHRvIHRoZSByb2FzdGluZyBwYW4sIGlmIG5lZWRlZC4gQ29vayBhYm91dCAxNyBtaW51dGVzIHBlciBwb3VuZC4gCkJ1dCBzZWVpbmcgaGlzIHBvd2VyIGZhbnRhc3kgcGxheSBvdXQgb3ZlciB0aGUgY291cnNlIG9mIHRoZSBzaG93IHdoaWxlIG92ZXJjb21pbmcgb2JzdGFjbGVzIGxpa2UgaGlzIGNvbXBldGl0aW9uLCB0aGUgbGF3LCBhbmQgU2t5bGFyICh3aG8gcmVwcmVzZW50cyBhY3R1YWwgcmVhbGl0eSB0aGUgbnVtZXJvdXMgcGVvcGxlIHRoYXQgZ2V0IGh1cnQgb3ZlciB0aGUgY291cnNlIG9mIHRoaXMgcG93ZXIgdHJpcCkgd2VyZSB0aGUgYmVzdCBwYXJ0cyBvZiB0aGUgc2hvdy4uIApNeSBqb2IgaXMgbGl2ZSBvbiBzaXRlIHNvIG15IG9mZmljZSBpcyBsaXRlcmFsbHkgYXR0YWNoZWQgdG8gbXkgaG91c2UuIApUaGF0IHNhaWQsIEkgY291bGQgcHJvYmFibHkgc3RpbGwgYmUgY29udmluY2VkIHdlIHNob3VsZCB0aGluayBhYm91dCBzcGxpdHRpbmcgQW1hem9uIHZlcnRpY2Fscy4gU2FtZSB3aXRoIEZhY2Vib29rLCB3aGljaCB3b3VsZCBldmVuIGhhdmUgdmVydGljYWxzIHRoYXQgd291bGQgY29tcGV0ZSAoRmFjZWJvb2sgdnMuIEluc3RhZ3JhbSkuIApDYXNpbm9zIGxpa2UgdGhlbSwgYmVjYXVzZSB0aGV5IG1ha2UgdGhlIGdhbWUgaW50ZXJlc3RpbmcgZm9yIHZpc2l0b3JzLCBhbmQgYSBnb29kIHBybyB3aWxsIGRyYXcgYSBsb3Qgb2YgdHJhZmZpYyB0byBhIHRhYmxlIHNvIHBlb3BsZSBjYW4gdGVzdCB0aGVpciBsdWNrIG9yIHNraWxsIGFnYWluc3QgImEgcHJvLiIuIApKVUdTIEIgaG93ZXZlciB3ZXJlIG1vcmUgc3VjY2Vzc2Z1bCwgbmFycm93bHkgYmVhdGluZyB0aGUgVUJSYWNpbmcgdGVhbSBpbiB0aGVpciBmaXJzdCByb3VuZCBhbmQgcmVjb3JkaW5nIGFub3RoZXIgd2luIGluIHRoZSBzZWNvbmQuIApBbmQsIHlvdSBrbm93IHdoYXQsIHNoZSBkaWRuIHdhbnQgdG8gYmUgYSBzbGF2ZSB0byBvbmUsIGJlY2F1c2UgaW4gbXkgd29yayBhbmQgd2hhdCBJIGRvLCBJIHRoZSBxdWVlbiBvZiB0aGUgdW5pdmVyc2UgZXZlcnkgZGF5LiIuIApBbmF0b215IHRleHRib29rcyB3aWxsIHRlbGwgeW91IHRoYXQgdGhlIG11c2N1bG9za2VsZXRhbCBzeXN0ZW0gY29uc2lzdHMgb2YgdGhvdXNhbmRzIG9mIHNlcGFyYXRlIHBhcnRzOiBhIGNvdXBsZSBodW5kcmVkIGJvbmVzIGhlbGQgdG9nZXRoZXIgYnkgbW9yZSB0aGFuIDYwMCBtdXNjbGVzIGFuZCBhIG5lYXIgY291bnRsZXNzIG51bWJlciBvZiBsaWdhbWVudHMgYW5kIHRlbmRvbnMuIApIZWxsbyB1L2JyaWJzcy4gSSBhbSBhIG13bSwgbmV3IHRvIHRoaXMgc3ViIGJ5IGEgZmV3IGRheXMuIApQZW9wbGUgaW4gdW5pdmVyc2l0aWVzIGhhdmUgc3BlY2lmaWMgYXJlYXMgb2YgZXhwZXJ0aXNlLiBCdXQsIHRoYXQgZG9lc24gbWVhbiB0aGV5IGhhdmUgb3ZlcmFsbCBjb21wZXRlbmNlIGluIGFsbCBmaWVsZHMuIApUaGUgYmlnZ2VzdCBtaXN0YWtlIGEgcGxheWVyIG1ha2VzIGlzIHBsYXlpbmcgdG9vIG1hbnkgaGFuZHMuIEJlaW5nIGF3YXJlIG9mIHlvdXIgUG9zaXRpb24gaW4gcmVsYXRpb25oaXAgdG8gdGhlIGRlYWxlciBpcyBpbXBvcnRhbnQgaW4gVGV4YXMgSG9sZCdlbS4gCiJJdCB3aWxsIGJlIHRvdGFsbHkgZm9yIFRheWxvci4gCkl0IHdhcyBlYXN5LiBBbmQgYWdhaW5zdCB0aGUgdXBicmluZ2luZyBvZiB0aGlzIGRpZmZlciBvZiBlbW90aW9ucyBhbmQgZmVlbGluZ3Mgd2l0aCBtZSByb2xsaW5nIHdhdmUgb2YgaG90LCBncmFuZCwgcXVpY2tseSBzd2VwdCB0aHJvdWdoIHRoZSB1bmRhbWFnZWQgbWFpbiBwYXJ0IGZyb20gbWFuYWdpbmcgZGlyZWN0b3IgdG8gLiwgYmFrZWQgaW4gdGhlIGJhY2suIExldmlhdGhhbiBxdWFsaXR5IHJvYXIgLiAKSSBnYXZlIHRoZW0gbW9yZSBldmlkZW5jZSB0aGF0IEkgY291bGRuJ3QgZmluZCB3aGF0IEkgbmVlZGVkIG9uIHRoZSBpbnRlcm5ldC4gCkkgZG9uIHRoaW5rIEkgZ2F2ZSB1cCBwcm9mZXNzaW9uYWwgZnVsZmlsbG1lbnQsIHJlYWxseS4gClRvdXRlcyBjaG9zZXMgcXVlIG1lcyBjb25kaXRpb25zIGFjdHVlbGxlcyBuZSBmYXZvcmlzZW50IHBhcy4gTWFpcyBqJ2FpIGVzc2F5ICBpbnRlcnZhbGxlcyBwZXUgcmFwcHJvY2hzIGV0IGonYWkgZmluaSBwYXIgY29tbWVuY2VyIGRlIG1hdHJpc2VyIHVuIHBldSBsZSBiaWR1bGUgZXQgIHByb2R1aXJlIGRlcyBzZW5zYXRpb25zIHRycyBhZ3JhYmxlcy4gClRoYXQgd2h5IG5vIG9uZSB0YWxrcyBhYm91dCBmYWlsdXJlcywgYmVjYXVzZSBhdCB0aGUgZW5kIG9mIHRoZSBkYXkgaXRzIGxpdGVyYWxseSBiYWNrIHRvIHRoZSBkcmF3aW5nIGJvYXJkIGJlY2F1c2UgaSBzdGlsbCBoYXZlIG1vbmV5LCBpIHN0aWxsIGhhdmUgaW52ZXN0bWVudHMsIGFuZCBpIHN0aWxsIGhhdmUgcHJvcGVydHkuLiAKRWRpdDogQW5kIGZvciB5b3UgdG8gc2F5IHRoYXQgcGVvcGxlIGdvaW5nIHZlZ2FuIHdvdWxkIGZpeCA3Mi45JSBvZiB0aGUgcHJvYmxlbSBtZWFucyB5b3UgYWJzb2x1dGVseSBmaW5lIHdpdGggdGhlIGVudmlyb25tZW50YWwgZGVzdHJ1Y3Rpb24gdGhlIGluZHVzdHJpYWwgZmFybWluZyBvZiBzb3kgaXMgY2F1c2luZyBhdCB0aGlzIHZlcnkgbW9tZW50LCBhcyBsb25nIGFzIHRoZSBwcm9kdWN0IGdvZXMgdG8gaHVtYW4gbW91dGhzIGluc3RlYWQgb2YgbGl2ZXN0b2NrLiBUaGlzIG9ubHkgc3VwcG9ydHMgbXkgdGhlb3J5IHRoYXQgdmVnYW5zIGRvbiBjYXJlIHNvIG11Y2ggYWJvdXQgc2F2aW5nIGFuaW1hbCBsaXZlcyBhcyB0aGV5IGRvIGxlZ2lzbGF0aW5nIHRoZSBwdWJsaWMgdHVtbWllcy4KTXkgeW91bmdlc3QgYnJvdGhlcnMgbWlkZGxlIG5hbWUgaXMgR3JhZHksIGhlIHdhcyBib3JuIGluIHRoZSB5ZWFyIDIwMDAgYW5kIEkgdGhpbmsgaXQgc3RhcnRlZCBnYWluaW5nIHBvcHVsYXJpdHkgYXJvdW5kIHRoYXQgdGltZS4gVmVyeSBuaWNlIG5hbWUsIGJ1dCB3aG8ga25vd3MgaG93IG1hbnkgR3JhZHkncyB0aGVyZSdzIGdvaW5nIHRvIGJlIGluIHNjaG9vbCB3aXRoIHlvdXIgbGl0dGxlIG9uZS4KQSBKYXBhbmVzZSBnYW1lIHdvdWxkIG9ubHkgaGF2ZSBKYXBhbmVzZSBhcyB0aGUgbGFuZ3VhZ2Ugb3B0aW9uLCBzaW5jZSBKYXBhbmVzZSBzeXN0ZW1zIGRvbiBoYXZlIGFueSBvdGhlciBjb25zb2xlIGxhbmd1YWdlcyBhdmFpbGFibGUgaW4gdGhlIHNldHRpbmdzIG1lbnUuIApJbnRlcmVzdGluZyBwb3N0IE9QLiAKRm9yY2luZyBwZW9wbGUgdG8gcGFzcyBhcyBpZiB0aGV5IHdlcmUgcGFydCBvZiBkb21pbmFudCBjdWx0dXJlIGlzIG5vdCByZWFsbHkgYSBncmVhdCBwbGFuIGZvciBlbmRpbmcgZW1wbG95ZXIgZGlzY3JpbWluYXRpb24uIE5lZWQgYSBwaWVjZSBvZiBsZWdpc2xhdGlvbiwgbGlrZSBFTkRBLCB0aGF0IHdvdWxkIHByb3RlY3QgcGVvcGxlIHdob3NlIHNleHVhbCBvciBnZW5kZXIgZXhwcmVzc2lvbiBpcyBvdGhlciB0aGFuIG5vcm1hdGl2ZS4gVHJhbnNnZW5kZXJlZCBpbmRpdmlkdWFscykgd2lsbCBtYWtlIHRoZW0gdnVsbmVyYWJsZSBpbiB0aGUgbmV4dCBlbGVjdGlvbnMuLiAKU3RhaXRlICgxODA5IDU0KSBhbmQgVy4gCkRhbW9uS2F0emUgIDExIHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvCkkgbW9yZSB0aGFuIHBhaWQgZm9yIG15IHRyaXAgd2l0aCBhIHRpZHkgcHJvZml0IGxlZnRvdmVyLiAKQmFtISBJIHdhcyBpbnN0YW50bHkgaW4gdGhlIHpvbmU6IGdldHRpbmcgaW4gdG91Y2ggd2l0aCB0aXRsZSBjb21wYW5pZXMsIHB1dHRpbmcgdG9nZXRoZXIgdGhlIHBhcGVyd29yaywgZ2V0dGluZyBpdCBzdWJtaXR0ZWQgdG8gdGhlIGNvdW50eSByZWNvcmRlciwgcHJvamVjdCBkb25lIGNvbXBsZXRlZCBzdWNjZXNzZnVsbHkuIFRoZSBzYW1lIHRoaW5nIGlzIHdpdGggbXkgSVQgam9iOiBuZXcgcHJvamVjdCBkcmF3biB1cCwgZ2V0dGluZyB0aGUgc29mdHdhcmUgcHV0IHRvZ2V0aGVyLCBzZXR0aW5nIHRoZSBjb25maWd1cmF0aW9ucywgZGVidWdnaW5nIHRoZSBoaWNjdXBzLCBtYXJraW5nIGl0IGFzIGNvbXBsZXRlLi4gCkdhZG1hbjg1ICAxMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpCdXQuIAoiR3JlZW4gQm9vayIgd2Fzbid0IHRoZSBvbmx5IGF3YXJkIHdpbm5lciBhZGRpbmcgcHJvZml0cyB0aGlzIHdlZWtlbmQuIEJlc3QgQW5pbWF0ZWQgRmVhdHVyZSB3aW5uZXIgIlNwaWRlciBNYW46IEludG8gdGhlIFNwaWRlciBWZXJzZSIgYmFua2VkIGFuIGFkZGl0aW9uYWwgJDIuMSBtaWxsaW9uLCB0aGUgZW5jb3JlIHZlcnNpb24gb2YgIkEgU3RhciBJcyBCb3JuIiB3aXRoIDEyIGFkZGl0aW9uYWwgbWludXRlcyBvZiBmb290YWdlIGFkZGVkICQxLjkgbWlsbGlvbiwgIkJvaGVtaWFuIFJoYXBzb2R5IiBlYXJuZWQgJDk3NSwwMDAgYW5kICJUaGUgRmF2b3VyaXRlIiB0b29rIGluICQ4MjUsMDAwLi4gClNvbWVvbmUganVzdCBzdG9sZSB5b3VyIHNwYWNlPyBUaW1lIHRvIHNtYWNrIGEgYml0Y2ggd2l0aCBzb21ldGhpbmcgdGhhdCB3b250IGFjdHVhbGx5IGhhcm0gdGhlbS4gClllcywgaXQgaXMsIGFzIGl0IGlzIHdpdGggYWxtb3N0IGV2ZXJ5dGhpbmcgaW4gbGlmZS4gSSB0aGluayB5b3Ugc2hvdWxkIGhhdmUgZm9jdXNlZCBhIGxvdCBtb3JlIG9uIFN0YW5kYXJkIGNhcmQgcHJpY2VzIHRoYW4gcmVmZXJyaW5nIGJhY2sgdG8geW91ciBzY2FsZGluZyB0YXJucyBiZWluZyBleHBlbnNpdmUsIGJlY2F1c2UgdGhhdCByZWFsbHkgZGlkIG1ha2UgaXQgc2VlbSBsaWtlIHlvdSB3ZXJlIGp1c3QgZnJ1c3RyYXRlZCB0aGF0IG1hZ2ljIGNvc3RzIG1vbmV5IGFuZCB3YXMga2luZCBvZiBpcnJlbGV2YW50IHRvIHRoZSBzdGFuZGFyZCBwb2ludC4gClRoZSBydWxlcyBhcmUgcHJldHR5IGNydW5jaHksIHRoYXQgYWxzbyB3aGVyZSB0aGUgZ2FtZSBjYW4gYmUgc3Ryb25nLCBidXQgaXQgcHJldHR5LiBjcnVuY2h5LkJ1dCBvbmUgdGhpbmcgaXMgdmVyeSBpbXBvcnRhbnQ6IERvIGhhdmUgY2xlYW4sIHdlbGwgcHJlcGFyZWQgY2hhcmFjdGVyIHNoZWV0cyBmb3IgdGhlIHBsYXllciBjaGFyYWN0ZXJzIGFuZCB0aGVuIGdvIG9uIG9uY2UgeW91IGhhdmUgYSBmZXcgc2Vzc2lvbnMgdW5kZXIgeW91ciBiZWx0LiBVc2UgQ2h1bW1lciB0byBjcmVhdGUgY2hhcmFjdGVycyB5b3Vyc2VsZiAoc2VlIHRoZSBzaWRlYmFyKSBvciBldmVuIGJldHRlciBzb21lIG9mIHRoZSBQcmVnZW5zIEJhbWNlIGlzIGdvaW5nIHRvIHBvc3Qgc29vbi5kdWRsZXlkZXMgIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ290YmggSSBkb24gdW5kZXJzdGFuZCB3aHkgeW91IGFyZSB1c2luZyBhIGtleWJvYXJkIHRvIG5hdmlnYXRlIHRoZSBSR1VJLiAKJ1NoZSBpcyB2ZXJ5IHN0cm9uZywgeW91IGtub3cuIApUaGUgcHJvcG9zZWQgY2hhbmdlcyB3ZXJlIHJlbGVhc2VkIHRvIHRoZSBndW4gbG9iYnkgd2Vla3Mgb3V0IGZyb20gU2F0dXJkYXkgdm90ZSwgYnV0IG5vdCBwdWJsaXNoZWQgb24gdGhlIHBhcnR5IHdlYnNpdGUuIApJcyB0aGVyZSBhIGNoZWF0IHRvIGdldCBtb25leSBvbiBwb2tlciBwYWxhY2UKTGF1dCBBeXVydmVkYSBoYXQgamVkZXIgTWVuc2NoIHNlaW4gZWlnZW5lcyBHbGVpY2hnZXdpY2h0IHZvbiBWYXRhLCBQaXR0YSB1bmQgS2FwaGEuIEluIGRlciBSZWdlbCBkb21pbmllcmVuIGVpbiBvZGVyIHp3ZWkgRG9zaGFzLiBBbmhhbmQgdm9uIENoYXJha3RlcmVpZ2Vuc2NoYWZ0ZW4sIGRlbSB1ZXJlbiBFcnNjaGVpbnVuZ3NiaWxkIHVuZCBkZW4gS3JhbmtoZWl0c2Rpc3Bvc2l0aW9uZW4gZWluZXMgTWVuc2NoZW4gaXN0IGVya2VubmVuLCB3ZWxjaGUgRG9zaGFzIGJlcndpZWdlbi4KWWVzLCB3ZSBtYXkgbG9zZSAkMjUwIHRvZGF5LCBidXQgc2hhbGwgd2luICQzNTAgdG9tb3Jyb3csIGFuZCBvdmVyIGEgeWVhciBwbGF5aW5nIGV2ZXJ5IGRheSwgd2UnbGwgYWNjdW11bGF0ZSBwcmV0dHkgMzY1JDQ0PSQxNiAwMDAuIEhhdmluZyBzb2x2ZWQgYSBzaW1wbGUgZXF1YXRpb24sIHdlJ2xsIGZpbmQgb3V0IHRoYXQgc3Rha2VzIHVwIHRvICQxOTAwIGFyZSBwcm9maXRhYmxlIGZvciB1cyEgT2YgY291cnNlLCBmb3Igc3VjaCBhIGNhc2lubyBnYW1lIHdlIG5lZWQgdG8gaGF2ZSB0aG91c2FuZHMgb2YgZG9sbGFycyBvbiBvdXIgYWNjb3VudCwgYnV0IHdlIGNlcnRhaW5seSBjYW4ndCBibGFtZSBjYXNpbm9zIGZvciBkaXNob25lc3R5IG9yIGdhbWJsZXJzIGZvciBiZWluZyBmb29saXNoLi4gClRoZXNlIGJvb2tzIHNob3VsZCBnaXZlIHlvdSBhbiBpZGVhIG9mIHRoZSBjb3JlIHByaW5jaXBsZXMgaW4gcG9rZXIuIFlvdSBzaG91bGQgYmUgc2VlaW5nIHRlcm1zIGxpa2UgUG90IE9kZHMsIEltcGxpZWQgT2RkcywgQm9hcmQgVGV4dHVyZSwgMyBCZXQsIFNxdWVlemUsIGFuZCBtYW55IG1hbnkgbW9yZS4uIApUaGUgdGVuc2lvbiB2YXJpZXMgICBzb21lIHBlb3BsZSB3aWxsIGhhdmUgaXQgaW4gdGhlaXIgYmFjaywgc29tZSBpbiB0aGVpciBsZWdzLCBvdGhlcnMgaW4gdGhlaXIgaGlwcywgc29tZSB0aGVpciBuZWNrLCBldGMuIApJIG9uZSBvZiB0aG9zZSBjb21wbGV0ZSB2aWN0aW1zIG9mIGFkdmVydGlzaW5nLCBzbyBpbnNlY3VyZSBpbiBteSBvd24gcGVyc29uYWwgImNvb2wiIHRoYXQgSSB3b3VsZCBuZXZlciBldmVuIGNvbnNpZGVyIHVzaW5nIGEgUEMuIApIZWFsdGh5IHJlZ2FyZHMsIFNoYXJvbiBTdHJpY2tlcklzIHRoaXMgc29tZXRoaW5nIHlvdSBjb3VsZCBkbyBvbiB5b3VyIG93biBmb3IgYSB3ZWVrIG9yIGJldHRlciB0byBnbyB3aXRoIGEgc3BvdXNlIG9yIGZyaWVuZChzKT8gTG9va2luZyBmb3IgZml0bmVzcyBhbmQgcmVsYXhhdGlvbiBidXQgd291bGQgSSBmZWVsIHVuY29tZm9ydGFibGUgYWxvbmU/IERvIG1vc3QgY29tZSB3aXRoIHNvbWVvbmUhQXByIDIwMTcgQ2FueW9uIFJhbmNoIGhhcyBhIGxhcmdlIHBlcmNlbnRhZ2Ugb2YgZ3Vlc3RzIHRoYXQgdHJhdmVsIHNvbG8uIApUaGlzIGlzIGEgc3BhY2Ugd2hlcmUgc3Vic2NyaWJlcnMgY2FuIGVuZ2FnZSB3aXRoIGVhY2ggb3RoZXIgYW5kIEdsb2JlIHN0YWZmLiAKT25lIGhhZCBub3RoaW5nIHRvIGRvIHdpdGggdGhlIG90aGVyLiBCdXQgTXVub3ogaXMgc2F2dnkgZW5vdWdoIHRvIGtub3cgdGhhdCB3aGVuIG5ld3MgaXMgYnViYmxpbmcgdGhlIHByZXNzIGxpa2VzIHRvIGFzayBleGVjdXRpdmVzIGFib3V0IHRoZWlyIGNvbXBldGl0b3JzLiBNdW5veiBiZWdhbiB3aXRoIGEgd2l0dHkgZGVmdXNlciAgIHByb2NsYWltaW5nIHdpdGggcmVsaWVmIHRoYXQgaGUgZG9lcyBub3QgaGF2ZSBhIHNpbmdsZSBkaWVzZWwgdmVoaWNsZSB0byB0YWxrIGFib3V0LgpKZSB2ZXV4IGJpZW4gYWRtZXR0cmUgcXVlIGNldCBhdHRlbGFnZSBub24gY29udmVudGlvbm5lbCBlc3QgYmllbiBpbnN1ZmZpc2FudCBwb3VyIGVuIGRkdWlyZSBxdWUgc29uIG1hcmkgcHJmcmVyYWl0IGxlcyBCZW5hbGxhIGV0IENpZS4gSmUgbm90ZSBzaW1wbGVtZW50IHF1J3VuZSB2b3lhbnRlIGEgcHJkaXQgcXVlIGxlIGNvdXBsZSBlbiBxdWVzdGlvbiByaXNxdWUgZGUgc2Ugc29sZGVyIHBhciB1biBuYXVmcmFnZS4gU2kgY2UgZGV2YWl0IHRyZSBsZSBjYXMsIGlsIG4neSBhdXJhaXQgZXUgbCByaWVuIGRlIGJpZW4gc29yY2llciA6IGxhIGRhbWUgZW4gcXVlc3Rpb24gcyd0YW50IGRqIGZvcnQgYnJ1eWFtbWVudCBtdSBkZXMgImNvbm5lcmllcyIgZGUgc29uIGdyYW5kIGdhbWluIGRlIG1hcmkuTGUgcHJvYmxtZSBlc3QgcXVlIGplIHN1aXMgZCd1bmUgYXV0cmUgcG9xdWUgbyBsZXMgcnNlYXV4IHNvY2lhdXgsIGV0IGxlICJjaXJxdWUiIHBsdXMgb3UgbW9pbnMgZXhoaWJpdGlvbm5pc21lIGV0IGFzc2V6IG1vdGlvbm5lbCBxdSdpbHMgZW5jb3VyYWdlbnQsIHRhaXQgY2hvc2UgdG90YWxlbWVudCBpbmNvbm51ZSBldCBtbWUgYXNzZXogaW1wZW5zYWJsZS4gCkV4ZXJjaXNlIE1heSBTbG93IFNvbWUgRWZmZWN0cyBPZiBBZ2luZyBKb3VybmFsIG9mIFNwb3J0cyBNZWRpY2luZSBhbmQgUGh5c2ljYWwgRml0bmVzcyAyMDAwOzQwOjEgMTAKQW5uZXJldmVuYW50IHUKRm9yZ2V0IHRoZSBhbGNvaG9sLCBTcGFuaXNoIEZseSwgVmlhZ3JhLCBhbmQgb3RoZXIgdW5tZW50aW9uYWJsZSBzZXggZW5oYW5jZXJzLCB0aGUgbW9zdCBwYXNzaW9uYXRlIGFwaHJvZGlzaWFjcyBhcmUgb25seSBhIHN1cGVybWFya2V0IGF3YXkuIEFuZCB3ZSBhcmVuJ3QgdGFsa2luZyBhYm91dCBzcGVjaWFsdHkgaXRlbXMgaGlkZGVuIGluIHRoZSBpbnRlcm5hdGlvbmFsIGFpc2xlLCBsaWtlIHNvbWUgYmFyayBvZmYgYSB0cmVlIGluIFNvdXRoIEFmcmljYSwgb3IgYSByZWQgY3J1c3RlZCBhbGdhZSB0aGF0IGdyb3dzIG9uIHRoZSBib3R0b21zIG9mIGEgdG9pbGV0IHNlYXRzIGxvY2F0ZWQgaW4gQW50YXJjdGljYS4gClNoZSB3YXMgYSByZWFsIHZpY3RvcmlhbiwgbGF0ZSB2aWN0b3JpYW4uIEkgb2xkZXIgdGhhbiB0aGUgYXZlcmFnZSByZWRkaXRvciwgYW5kIGkgd2FzIGp1c3QgdGhpbmtpbmcgdGhlIG90aGVyIGRheSBob3cgdGhhdCBlcmEgaGFzIHRob3JvdWdobHkgcGFzc2VkIGludG8gaGlzdG9yeSwgYnV0IHJlYWxseSBoYWRuIHdoZW4gaSB3YXMgYSBjaGlsZC9hZG9sZXNjZW50LCB0aGF0IGkgYSBicmlkZ2UgaW4gc29tZSBzZW5zZS4gRXZlbiB0aGUgd2F5IHdlIGRyZXNzZWQgYXMgeW91bmcgZ2lybHMgb3dlZCBzbyBtdWNoIHRvLCBzYXksIHRoZSBFZHdhcmRpYW4gYWdlLiAKV2hlbiBNYWRlbGFpbmUgTWNDYWxsdW0gd2FzIGJvcm4gc2hlIHdhcyBkZXN0aW5lZCB0byBmYWRlIGF3YXkgYW5kIGRpc2FwcGVhci4gVGhlIGdhdW50bGV0IHdhcyB0aHJvd24gYXQgaGVyIGZlZXQsIGFuZCB3aXRoIHRoZSBpbm5vY2VuY2Ugb2YgYSBjaGlsZCBzaGUgcGlja2VkIGl0IHVwLgpJcyBpdCBMb3ZlLCBMdXN0IG9yIExvc2VyIFJlbGF0aW9uc2hpcCBRdWl6CkFzIGFwcGVhbGluZyBhcyB0aGUgZm9vZCBpcywgZXZlcnlvbmUgdGFrZXMgYSBicmVhayB0byB3YXRjaCB0aGUgZ29yZ2VvdXMgc3Vuc2V0IG9uIHRoZSBiZWFjaC4uIApJIHRocmV3IGhpbSBvdXQgb2YgbXkgaG91c2UgYW5kIGJlYXQgaGltIGluIG15IGRyaXZld2F5LiAKR29vZHMgaW5jbHVkaW5nIG1ldGFscywgc295YmVhbnMgYW5kIGF1dG9tb3RpdmVzICBtYWpvciBpbmR1c3RyaWVzIGNvbmNlbnRyYXRlZCBpbiBzdGF0ZXMgdGhhdCBzdXBwb3J0ZWQgVHJ1bXAgaW4gdGhlIDIwMTYgZWxlY3Rpb24uIFRyYWRlIGRlZmljaXQsIHRoZSBDb21tZXJjZSBEZXBhcnRtZW50IHJlcG9ydGVkIFdlZG5lc2RheSB0aGF0IGl0IHJvY2tldGVkIHBhc3QgdGhlIDIwMDggcmVjb3JkIGF0IDE5IHBlcmNlbnQuIApCdXQgdGhlIHJlZiBkaWRuIGxldCBoaW0uIApJIGFsc28gbm90IHN1cmUgd2hldGhlciB0aGVzZSBwb2tlciBzaXRlcyBjb3VsZCBzdGlsbCBvYnRhaW4gYSBsaWNlbnNlIGJ1dCBuZWVkIHRvIGFncmVlIHRvIGdpdmUgc29tZSBvZiB0aGUgaW5jb21lIHRvIHRoZSBTd2lzcyBzb2NpYWwgc2VjdXJpdHkuCkl0IG1ha2VzIHNlbnNlIGluIHVyYmFuIGNlbnRyZXMgd2hlcmUgdGhlcmUgaXMgbm90IGEgbG90IG9mIGF2YWlsYWJsZSBzcGFjZS4gCkFuZCB3aGlsZSBtYW55IG9mIHVzIG1ha2UgaXQgYSBwcmlvcml0eSB0byByZWd1bGFybHkgY2xlYW4gY2xvc2V0cywgYmFzZWJvYXJkcyBhbmQgYmF0aHJvb21zLCBzaGUgcmVjb21tZW5kcyB0cnVseSBjbGVhbmluZyB0aGUgYWlyIHdpdGggcHJvZHVjdHMgdGhhdCB0cmFwIG9kb3IgbW9sZWN1bGVzIGFuZCBlbGltaW5hdGUgdGhlbSByYXRoZXIgdGhhbiBzaW1wbHkgbWFza2luZyB0aGVtLiAKVGhleSdyZSBvZnRlbiB2ZXJ5IGlycml0YWJsZSBhbmQgYWdpdGF0ZWQuIApCdXQgdGhlIG9sZGVyIHlvdSBnZXQsIHlvdSByZWFsaXNlIHRoYXQgYSBsb3Qgb2YgcGVvcGxlIGFyZSBsaWtlIHlvdSBzbyB5b3UgZ3JhYiBhdCBhbnkgbGl0dGxlIHRoaW5nIHRvIG1ha2UgaXQgeW91ciBvd24uIApJbiBoZXIgYm9vaywgQmxvb2QgTWF0dGVyczogQSBKb3VybmV5IEFsb25nIHRoZSBHZW5ldGljIEZyb250aWVyLCBNYXNoYSBHZXNzZW4gc3VnZ2VzdHMgdGhhdCBpdCBpcyB0aGlzIHRydXRoIGFib3V0IGV1Z2VuaWNzIHRoYXQgd2UgZmVhciB0aGUgbW9zdC4gQW1lcmljYW5zIGFscmVhZHkgYWJvcnQgbmVhcmx5IGFsbCBEb3duIHN5bmRyb21lIGZldHVzZXMsIGJ1dCBBbWVyaWNhbiBwYXJlbnRzIGhhdmUgYmVlbiBhYm9ydGluZyBmZXR1c2VzIGZvciBkZWNhZGVzIGJlY2F1c2Ugb2YgdGhlIGdlbmV0aWMgdGVzdHMgdGhhdCBzYWlkIHRoZXkgd291bGQgZGV2ZWxvcCBpbnRvIGNoaWxkcmVuIG9mIGJlbG93IGF2ZXJhZ2UgaW50ZWxsaWdlbmNlIChhcyBvcHBvc2VkIHRvIHJldGFyZGF0aW9uKSBhcyB3ZWxsIGFzIGZvciBiZWluZyBsaXR0bGUgcGVvcGxlIG9yIGRlYWYuClRpbWUgaXQgZmxhcHMgaXRzIHdpbmdzLCBpdCBtYWtlcyBhIHNvdW5kLiAKSW4gZGVyIGJpemFycmVuIEJlcmd3ZWx0IGRlcyBSb3F1ZSBkZSBsb3MgTXVjaGFjaG9zIHN0ZWh0IGRhcyBiZWRldXRlbmRzdGUgT2JzZXJ2YXRvcml1bSBkZXIgd2VzdGxpY2hlbiBIZW1pc3BocmUgbWl0IGRlbSBncnRlbiBTcGllZ2VsdGVsZXNrb3AgZGVyIFdlbHQuIExhIFBhbG1hIGhhdCBkZW4gc2F1YmVyc3RlbiBMdWZ0cmF1bSBFdXJvcGFzLCBlaW4gR2VzZXR6IHZlcmhpbmRlcnQgc3RyZW5kZSBMaWNodHF1ZWxsZW4uIEVpbiBqdW5nZXIgQXN0cm9waHlzaWtlciBzY2h3cm10IHZvbiBmdW5rZWxuZGVuIFN0ZXJuZW4gdW5kIGZlcm5lbiBHYWxheGllbi4KSG9tZW1hZGUgc2tpbiB0cmVhdG1lbnRzIGFyZW4ndCBhIG5ldyBpZGVhLiBUaG91c2FuZHMgb2YgeWVhcnMgYmVmb3JlIGNvbW1lcmNpYWwgcHJvZHVjdHMgd2VyZSBhdmFpbGFibGUsIGFuY2llbnQgRWd5cHRpYW5zIG1hZGUgcG93ZGVycywgb2ludG1lbnRzIGFuZCBsb3Rpb25zIGJ5IGNvbWJpbmluZyBwbGFudCBleHRyYWN0cyB3aXRoIG5hdHVyYWwgb2lscyBbc291cmNlOiBTbGFwYWtdLiBJbiBDaGluYSwgYSBjb21iaW5hdGlvbiBvZiBncm91bmQgb3JhbmdlIHNlZWRzIGFuZCBob25leSB3YXMgdXNlZCB0byBoZWxwIGtlZXAgc2tpbiBjbGVhciBbc291cmNlOiBOYXRpb25hbCBIb25leSBCb2FyZF0uIApJbiByZWFsaXR5LCB3ZSBuZXZlciBwbGF5IGFuIGluZmluaXRlIG51bWJlciBvZiBoYW5kcyBhbmQgb3VyIGx1Y2sgd2lsbCBkZXRlcm1pbmUgd2hhdCBzaWRlIG9mIDk5LjUlIHdlIHdpbGwgZmFsbC4gCkkgZXNwZWNpYWxseSBsaWtlIHRvIGdpdmUgZ2lmdHMgdGhhdCB3aWxsIGJlIHVzZWZ1bCB0byB0aGUgcmVjaXBpZW50IHNvIGlmIEkga25vdyB0aGV5IGJlZW4ga2VlcGluZyBhbiBleWUgb3V0IGZvciBzb21ldGhpbmcsIEkgZG8gdGhlIHNhbWUuIApUaGUgR3JlYXQgTGVhcCBGb3J3YXJkIGhhZCBob3JyaWJsZSByZXN1bHRzIHllcywgYnV0IHRoZSBmYW1pbmVzIGl0IGNhdXNlZCAod2hlcmUgYSBtYWpvcml0eSBvZiBkZWF0aHMgb2NjdXJyZWQpIHdlcmUgdW5pbnRlbnRpb25hbC4gClRoYXQgb25seSB0b29rIGFib3V0IGEgbWludXRlIHRvIGV4cGxhaW4sIHlldCBpdCB0b29rIGFib3V0IGEgd2VlayBiZWZvcmUgeW91IGRlY2lkZWQgdG8gc2hhcmUgaXQgd2l0aCB1cy4gSSBkb24gdW5kZXJzdGFuZCwgc28gbXVjaCBkcmFtYSBjb3VsZCBiZWVuIGF2b2lkZWQgaWYgeW91IGhhZCBqdXN0IHNhaWQgc29tZXRoaW5nIGxpa2UgdGhpcyBpbiB0aGUgZmlyc3QgcGxhY2UuIEl0IG9uZSB0aGluZyB0byBzYXkgeW91IGJ1c3ksIGJ1dCBub3QgdGFraW5nIGEgZmV3IHNlY29uZHMgdG8gcmVwbHkgdG8gYW55IG9mIHRoZSBjb21tZW50cyBhYm91dCB0aGlzIHN0dWZmIHdhcyBqdXN0IG9kZC4uIApIZXJvIGhhcyAyMjAsIE1QIGhhcyAxNDAgVVRHIGNvdmVycy4gCkkgZm9yIG9uZSBkb24ndCBzdXBwb3J0IHVuaXZlcnNhbCBoZWFsdGhjYXJlLiAKRGlyZXdvbGYgd2FzIG5leHQgdG8gdGFrZSBvbiBPeDEwLCBzYW1lIHJlc3VsdCwgb25lIGhhbmQgbGF0ZXIgVGhlIENoaXAgRGFkZHkgd2FzIG5vdyBsdWZjMTk4MiwgT3gxMCB3YXMgdG9hc3QuCk5vdCBuZWNlc3NhcmlseS4gU29tZXRpbWVzIGl0IGlzIHBvc3NpYmxlLCBzb21ldGltZXMgbm90LiBJIHdpbGwgZ2l2ZSB5b3UgYSBmZXcgZXhhbXBsZXMuIApJbmNyZWRpYmx5IGx1Y2t5CkVzIGhhbmRlbHQgc2ljaCBkYWJlaSBhYmVyIG5pY2h0IHVtIGVpbmVuIEVpbmdyaWZmIHdpZSBIYWFyZXNjaG5laWRlbiwgc29uZGVybiBlcyBnbGVpY2h0IGRlciBBbXB1dGF0aW9uIGVpbmVzIEtycGVydGVpbHMuIApUaHVzLCB0aGUgZGlydHkgbm92ZWx0eSBjYXJkIHdhcyBib3JuLiAKRGVzcGl0ZSBpdHMgZGVzaXJlIHRvIHJlbWFpbiBzbWFsbCBhbmQgcmF0aGVyIGludGltYXRlLCB0aGUgZmVzdCBoYXMgY2F1Z2h0IHRoZSBhdHRlbnRpb24gb2YgbmF0aW9uYWwgYW5kIGludGVybmF0aW9uYWwgbmV3cyBvdXRsZXRzIGxvb2tpbmcgdG8gZ2V0IGEgdGFzdGUgb2YgdGhpcyBxdWlya3kgaGFwcGVuaW5nLiBJbiBwcmV2aW91cyB5ZWFycywgVFYgam91cm5hbGlzdHMgZnJvbSBhcyBmYXIgYXdheSBhcyBJbmRpYSwgSmFwYW4sIEJlbGdpdW0sIFN3ZWRlbiBhbmQgQ2FuYWRhIGhhdmUgbWFkZSB0aGUgam91cm5leSB0byB3aXRuZXNzIHRoZSB6YW55IHNoZW5hbmlnYW5zIHRoYXQgb2NjdXIgZXZlcnkgTWFyY2guIFRoaXMgeWVhciwgdGhlIGZlc3QgaXMgYSBub21pbmVlIGluIFVTQSBUb2RheSdzIHJlYWRlcnMnIGNob2ljZSBhd2FyZHMgZm9yICJCZXN0IEN1bHR1cmFsIEZlc3RpdmFscyBpbiBOb3J0aCBBbWVyaWNhLiIiSXQncyBtb3JlIGxpa2UgYSBob2xpZGF5IGF0IHRoaXMgcG9pbnQsIiBzYWlkIE1hY0RvbmFsZC4gCk15IHJlYXNvbmluZyBpcyB0aGF0IGJldCBzaG91bGQgYmUgaGlnaGVyIEVWIHRoYW4gY2hlY2sgYmFjayBpZiB3ZSBibG9jayBudXQgZmx1c2ggZHJhd3MgYW5kIGhhdmUgdGhlIGJhY2tkb29yLCBpZiBuZWl0aGVyIGlzIHRoZSBjYXNlIHRoZSBFViBkaWZmZXJlbmNlIG9mIGNoZWNraW5nIGFuZCBiZXR0aW5nIHdpbGwgYmUgbXVjaCBzbWFsbGVyLiAKV2hpbGUgb3RoZXIgYXV0b21ha2VycyBhcmUgaGVkZ2luZyB0aGVpciBiZXRzICAgZmVhcmluZyB0aGF0IHN0aWZmIGRldmVsb3BtZW50IGNvc3RzIGFuZCBoaWdoZXIgc3RpY2tlciBwcmljZXMgb2YgaHlicmlkcyB3aWxsIGxpbWl0IHRoZSB0ZWNobm9sb2d5IHRvIGEgbmljaGUgICBUb3lvdGEgc3RhbmRzIHRvIGJlbmVmaXQgaGFuZHNvbWVseSBpZiBpdHMgcml2YWxzIGFyZSB3cm9uZy4uIApUeXRpbGxlYW4gdQpUaGUgY29vbGVzdCBwYXJ0PyBZb3UgYXJlIFJFV0FSREVEIHdpdGggYSB2ZXJ5IHBvd2VyZnVsIHdlYXBvbiBjYWxsZWQgR2FkZXMgQmxhZGUsIHdoaWNoIGhhZCBhIHJlYWxseSBwb3dlcmZ1bCBza2lsbCB0aGF0IGhpdCBsaWtlIDh4LgpCZWluZyB1bmVkdWNhdGVkIGFib3V0IHRoaXMsIEkgaGF2ZSBhIGhhcmQgdGltZSBncmFzcGluZyBleGFjdGx5IGhvdyB0aGlzIGlzIHRoZSBiZXN0IGd1ZXNzIGZvciB3aGF0IGhhcHBlbmluZyBpbiB0aGUgdW5pdmVyc2UuIE1vc3Qgb2Ygd2hhdCB3ZSBrbm93IGlzIGJhc2VkIG9uIHRoZSBsaWdodCB3ZSBjYXB0dXJlIGZyb20gdGhlc2UgZGlzdGFudCBvYmplY3RzIGNvcnJlY3Q/IEJ1dCB0aGUgZGlzdGFuY2UgYmV0d2VlbiB0aGUgdHdvIHBvaW50cyBpcyBzbyBhc3Ryb25vbWljYWwgdGhhdCBiYXNpY2FsbHkgZXZlcnl0aGluZyB3ZSBzZWVpbmcgaXMgb2xkLCBvbGQsIG9sZCBpbmZvcm1hdGlvbi4gSG93IGRvIHdlIGtub3cgdGhhdCB0aGUgbGlnaHQgZGlzYXBwZWFyaW5nIGZyb20gb2JqZWN0cyBiZWluZyBmdXJ0aGVyIGFwYXJ0KGV4cGFuc2lvbiBvZiBzcGFjZSwgbm90IHRoZSBhY3R1YWwgb2JqZWN0cyBtb3ZpbmcgYXMgeW91IHNheSkgaXNuIGp1c3QgbGlnaHQgYmVpbmcgZGlzc2lwYXRlZCBieSBzb21ldGhpbmcgaW4gYmV0d2VlbiBvdmVyIHRpbWU/ClRoZSBkb3duc2lkZXMgb2YgdGhlIHB1YmxpYyBmcmVlcm9sbHMgYXBwbHkgaGVyZS4gTG90cyBvZiBwbGF5ZXJzIGNvbXBldGluZyBmb3IgYSByYXRoZXIgc21hbGwgcHJpemUgcG9vbC4gCllvdSB3aWxsIG5vdCBsaWNlbnNlLCBzZWxsLCBvciB0cmFuc2ZlciB5b3VyIEFjY291bnQgd2l0aG91dCBvdXIgcHJpb3Igd3JpdHRlbiBhcHByb3ZhbC4KT3IgaWwgc2UgdHJvdXZlIHF1ZSBkYW5zIGxhIG1lc3VyZSBvIGwnaHlicmlzIGRvbnQgc2UgcmVuZGVudCBjb3VwYWJsZXMgY2VzIHRlcnJvcmlzdGVzIGxlcyByZXRyYW5jaGVudCBlbiBmYWl0IGRlIGwnaHVtYW5pdCwgaWwgZXN0IGFic29sdW1lbnQgaW1wb3NzaWJsZSBkZSBqdXN0aWZpZXIgbGEgdGhzZSBkJ3VuZSBwcnRlbmR1ZSB2aW9sZW5jZSBzeW1ib2xpcXVlIGltbXJpdGUuVW4gb2RpZXV4IGNydGluIGEgcHJ0ZW5kdSBxdWUgY2Ugc2VyYWl0IHJwb25kcmUgIHVuZSBpbmp1c3RpY2UgcGFyIHVuZSBhdXRyZSBpbmp1c3RpY2UuIApCdXQgeW91IGhhdmUgdG8gdW5kZXJzdGFuZCB0aGF0IHdvcmtpbmcgd2l0aCBjb21wdXRlcnMgaXMgbm90IGEgaGlnaGx5IGRlc2lyZWQgam9iIGluIG1vc3QgY29tcGFuaWVzICBpdCBpcyB3b3JrIHRoYXQgbW9zdCBwZW9wbGUgd291bGQgZHJlYWQsIHNvIHRoYXQgNC4wIGlzIGxlc3MgaW1wb3J0YW50IGFzIHRoZSBlY29ub215IGltcHJvdmVzIGFuZCBpcyB1bmltcG9ydGFudCBhZnRlciB5b3UgZ2V0IHRoYXQgZmlyc3QgMiB5ZWFycyBvciB3b3JrIGV4cGVyaWVuY2UuIE9uIHRoZSBvdGhlciBoYW5kLCB5b3UgY291bGQgZ28gd2l0aCB0aGUgaGFyZGVzdCBtYWpvciB5b3UgY2FuIHVuZGVyc3RhbmQgKG1hdGhlbWF0aWNzLCB2YXJpb3VzIGVuZ2luZWVyaW5nKSwgcGVyaGFwcyBub3QgZ2V0IGFzIGhpZ2ggYSBncmFkZSwgYnV0IGNvbmNsdXNpdmVseSBwcm92ZSB0aGF0IHlvdSBhIG1hc3NpdmUgYnJhaW4uIApIb3dldmVyLCBtb3N0IHByYWN0aXRpb25lcnMgYWdyZWUgdGhhdCBhIGhpZ2hseSBlZmZlY3RpdmUgdHJlYXRtZW50IGNvbnNpc3RzIG9mIGEgY29tYmluYXRpb24gb2YgYWN1cHVuY3R1cmUgYW5kIGhlcmJhbCBtZWRpY2luZS4gQSB0eXBpY2FsIHRyZWF0bWVudCBwbGFuIG1pZ2h0IGNvbnNpc3Qgb2YgYW4gYWN1cHVuY3R1cmUgdHJlYXRtZW50IG9uY2UgYSB3ZWVrIHdpdGggaGVyYnMgdGFrZW4gYmV0d2VlbiB0cmVhdG1lbnRzLgpUaGV5IGNhbiBwb3N0IHdoYXQgdGhleSB3YW50LCBidXQgYXQgdGhlIHNhbWUgdGltZSBhcyBhIGNvbnRlbnQgY3JlYXRvciwgSSBjYW4gYmUgdGhhdCBuYWdnaW5nIHBhcGVyIGN1dCB0byByZW1pbmQgdGhlbSB0aGF0IGl0J3Mgc3RpbGwgbm90IHJpZ2h0LiAKSGFwcHlNYW5zICA2OSBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwpQb2xpY2UgYWNyb3NzIE9udGFyaW8gc3dvb3BlZCBpbiBvbiB0aGUgbWFuYWdlbWVudCBvZiBhbiBhbGxlZ2VkIGdhbWJsaW5nIHJpbmcgVHVlc2RheSBtb3JuaW5nLCBkaXNtYW50bGluZyBhbiBvcmdhbml6YXRpb24gdGhleSBkZXNjcmliZSBhcyBvbmUgb2YgdGhlIGxhcmdlc3QgaWxsZWdhbCBnYW1ibGluZyBvcGVyYXRpb25zIGluIENhbmFkYS4KQnV0IGhlIGFsc28gaGFzIHRoZSBudW1iZXIgZm9yIEFsbCBBbWVyaWNhbiBSZWplY3RzJyBOaWNrIFdoZWVsZXIgb24gaGlzIGNlbGwgcGhvbmUsIHdyb3RlIHRoZSBmaXJzdCBzdG9yeSBldmVyIGRvbmUgb24gSmFjaydzIE1hbm5lcXVpbiBhbmQgaHVuZyBvdXQgaW4gV2l6IEtoYWxpZmEncyBob3RlbCByb29tLi4gClNvIHRoZSBlc3RpbWF0ZSBvZiBhIHN0b3J5IGlzIGRldGVybWluZWQgYnkgdGhlIHRlYW0gbm90IGJ5IGFuIGluZGl2aWR1YWwuIApCb3RoIGhhdmUgc29tZSBiYWQgcmVncyBhbmQgT01DcyBhbmQgYm90aCBhcmUgYmV0dGVyIG9uIHdlZWtlbmRzLiAKSSBkb24ga25vdyBlbm91Z2ggYWJvdXQgRmlzaCBnYW1lIHRvIHNheSB3aGV0aGVyIGhlIHdvdWxkIHR1cm4gYSBoYW5kIGxpa2UgNTUgaW50byBhIGJsdWZmLCBidXQgbG9naWNhbGx5LCA2N3MgaXMgdGhlIG9ubHkgY29tYm8gSSBjYW4gdGhpbmsgb2YgdGhhdCBtYWtlcyBzZW5zZS4uIApUaGUgYmFieSBpcyBkZWFkLiAKQ2hhcmxlbWFnbmVmZnhpdiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnbwpUaGVzZSBhcmUgdGhlIHNvZnRseSBzdWJ2ZXJzaXZlIHRoaW5ncyB0aGF0IGFkZCB1cCBvdmVyIHRoZSBjb3Vyc2Ugb2YgYSBtYXJyaWFnZSwgYW5kIG9mIHBhcmVudGhvb2QsIGludG8gZnJhbmsgY29udGVtcHQgYW5kIGRpc3Jlc3BlY3QuIApJZiB5b3UgdW5oYXBweSB3aXRoIHlvdXIgbWFya2V0IHZhbHVlLCB0aGVuIGRvIHNvbWV0aGluZyB0byBjaGFuZ2UgdGhhdCwgZG9uIGNvbXBsYWluIHRoYXQgdGhlIGdvdmVybm1lbnQgc2hvdWxkIHN0ZXAgaW4gYW5kIHNwZW5kIG1vbmV5IHRoZXkgZG9uIGhhdmUgaW4gb3JkZXIgdG8gZ2V0IHlvdSBpbnRvIGEgbmljZXIgYXBhcnRtZW50LiAKVG91dGVzIGxlcyBpbnRlcnZlbnRpb25zIGRlIGxhIHBvbGljZSBuZSBmb250IHBhcyBsJ29iamV0IGQndW4gY29tbXVuaXF1IGRlIHByZXNzZSwgY2VydGFpbmVzIHNldWxlbWVudCwgZXQgY29tbWUgbGEgWlNQIHJldmllbnQgc291dmVudCAgbGEgdW5lIGRlcyBqb3VybmF1eCwgbGVzIHN1Y2NzIG9idGVudXMgZGFucyBsJ3VuZSBkZXMgdG91dGVzIHByZW1pcmVzIFpTUCBtaXNlcyBlbiBwbGFjZSBzb250IGxpc2libGVzIHN1ciBsZSBzaXRlIGRlIGxhIFByZmVjdHVyZSBhY2Nlc3NpYmxlIGF1eCBqb3VybmFsaXN0ZXMuIApJIGxvdmUgbXkgY3VsdHVyZSwgYnV0IGlmIEkgd2FzIGltbWVyc2VkIGluIGl0IGluIHRoZSBmaXJzdCBwbGFjZSBhbmQgZGlkbiBmZWVsIGludGVybmFsbHkgcHJlc3N1cmVkIGJ5IHRoZSBBQkNEIHNvY2lldHksIG1heWJlIEkgd291bGQgaGF2ZSBiZWVuIG1vcmUgb2YgYSBELiBJIG1heSBiZSBhIDcwQS8zMEQgYnV0IEkgMTAwIGh1bWFuIHRoYXQgc3RpbGwgbGVhcm5pbmcgYW5kIGRpc2NvdmVyaW5nIHdoYXQgSSB3YW50IHRvIGdyb3cgdXAgd2l0aC4KMS4gQmVjYXVzZSB0aGUgamFpbCBzcXVhcmUgaXMgdGhlIG1vc3QgbGlrZWx5IHRvIGJlIGxhbmRlZCBvbiwgdGhhdCBtZWFucyB0aGF0IHRoZXJlIGFyZSBtb3JlIHBlb3BsZSBsZWF2aW5nIHRoZSBqYWlsIHNxdWFyZSB0aGFuIGFueSBvdGhlciBzcXVhcmUgb24gdGhlIGJvYXJkLiBBbmQgYmVjYXVzZSB5b3Ugcm9sbGluZyB0d28gZGljZSwgeW91IG1vc3QgbGlrZWx5IHRvIGdldCBhIHNpeCwgc2V2ZW4gb3IgYW4gZWlnaHQuIFNvIGEgc2l4LCBzZXZlbiBhbmQgZWlnaHQgdGhyb3cgdGFrZXMgeW91IHRvIHRoZSBvcmFuZ2Ugc2V0IGFuZCB0aGVuIHJvdW5kIHRoZSBjb3JuZXIgdG8gdGhlIHJlZCBzZXQuClRoZSBWZW5ldGlhbiBBbHNvIENvbm5lY3RzIFRvIFRoZSBQYWxhenpvIEhvdGVsIEFuZCBDYXNpbm8gU28gWW91IENhbiBFYXNpbHkgV2FsayBCYWNrIEFuZCBGb3J0aCBCZXR3ZWVuIFRoZSBUd28uIFRoZXJlIGFyZSBhIGxvdCBvZiBiZWF1dGlmdWwgaG90ZWxzIGFuZCBhdHRyYWN0aW9ucyBpbiBMYXMgZmluZ2VyIGFuZCB5b3VyIGluZGV4IG9uIGVpdGhlciBzaWRlcyBvZiB0aGUgc3RhY2tzLCBhbmQgeW91ciB0aHVtYiBiZWhpbmQgdGhlIHN0YWNrIHdpdGggeW91ciBpbmRleCBmaW5nZXIuIEEgc2xvdCBtYWNoaW5lIGluIGEgY2FzaW5vIHVuZGVyIHN0YXRlIGxhdywgYWxsIGxlZ2FsIGdhbWJsaW5nIGJlIGFkZGVkIGZyb20gdGhlIGJhbGFuY2UgdGhhdCBpcyBpbiB0aGUgYWNjb3VudC4gCkZPUiBSRVNUIE9GIFdPUkxEIFRIRVJFIElTIDkgTUlMTElNRVRFUlMgT0YgTFVHRVIgV0hJQ0ggSVMgU0FNRSBXT1VORCBGT1IgQ09TVCBMRVNTLgpJdCdzIGhhcmQgdG8gdGhpbmsgYWJvdXQgdGhlIGZ1dHVyZSBvZiBtYW5hZ2VtZW50IGVkdWNhdGlvbiB3aXRob3V0IHRoaW5raW5nIGFib3V0IHRoZSBmdXR1cmUgb2Ygd29yay4gCkl0IGRpZCBub3QgbWFrZSBzZW5zZS4gClRoaXMgaXMgdGhlIGJlc3QgdGhpbmcgSSByZWFkIGluIDIwMTguIE15IHByZWNvbmNlcHRpb25zIGhhdmUgYmVlbiBzaGF0dGVyZWQgYnkgdGhlIHN0b3JpZXMsIGV4cGVydGx5IGRyYXduIG91dCBieSBXaWx0b24gYW5kIHRvbGQgd2l0aG91dCBqdWRnZW1lbnQuIFRoZSBzdWJqZWN0cyBhcmUgbGlrZWFibGUsIGZ1bm55IGFuZCBhdCB0aW1lcyB0cmFnaWMgYnV0IG5ldmVyIGhvcGVsZXNzIG9yIGRlc2VydmluZyBvZiBwaXR5LiBHbyBvbiEgTGV0IHlvdXIgZXllcyBhbmQgeW91ciBoZWFydHMgYmUgb3BlbmVkLiBNaW5lIHdlcmUuIFRuIGtvZSBtIHR1IFsKQWh1bmdyeWxpbHNhbmR3aGljaCAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KTWFyayBTdG9uZSBzaWducyA4IHllYXIsICQ3NiBtaWxsaW9uIGV4dGVuc2lvbiB3aXRoIEdvbGRlbiBLbmlnaHRzIEJ5IEp1c3RpbiBFbWVyc29uIFRoZSBuZXdlc3QgR29sZGVuIEtuaWdodCBpcyBnb2luZyB0byBiZSBhIEdvbGRlbiBLbmlnaHQgZm9yIGEgbG9uZyB0aW1lLiBUaGUgdGVhbSBhbm5vdW5jZWQgdG9kYXkgaXRzIGFudGljaXBhdGVkIGV4dGVuc2lvbiB3aXRoIHdpbmdlciBNYXJrIFN0b25lIGZvciBlaWdodCB5ZWFycywgd2l0aCAuClBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiAKQydlc3QgZW5jb3JlIGxhIGxpYnJhaXJpZSBxdWkgcGFzc2VyYWl0IGxlIHBsdXMgaW5hcGVydS4gTidlbiB2b3lvbnMgbm91cyBwYXMgcXVlbHF1ZXMgdW5lcyBlbmNvcmUgcXVpIHByc2VudGVudCBsZXMgbW1lcyB2aXRyaW5lcywgIGxhIGZvaXMgc29icmVzIGV0IGVmZmljYWNlcywgcHVpc3F1J2VsbGVzIG1vbnRyZW50IGJpZW4gY2UgcXVpIGVzdCBvZmZlcnQgIGxhIGNsaWVudGxlLiBFbiBjZSB0ZW1wcyBsIGVsbGVzIG5lIHN1Ymlzc2FpZW50IHBhcyBsYSBjb25jdXJyZW5jZSBhY2hhcm5lIGRlcyBzaXRlcyBlbiBsaWduZSBxdWkgbWV0dGVudCBlbiBkYW5nZXIganVzcXUnIGxhIHN1cnZpZSBkdSBtdGllciBkZSBsaWJyYWlyZS4gTmUgbGVzIGxhaXNzb25zIHBhcyB0b21iZXIuIFJpZW4gbmUgdmF1dCB1bmUgYm9ubmUgbGlicmFpcmllLCBvZGV1ciBkZSB2aWV1eCBwYXBpZXJzIGNvbXByaXNlLgpUaGV5IHdlcmUgdGhlcmUgZm9yIG9ubHkgYSB3ZWVrIHdoZW4gdGhpcyBoYXBwZW5lZC4gCldpdGggdGhlIGhvbGlkYXlzIGNvbWUgYSBsb3Qgb2YgZmVhc3RpbmcgYW5kIGJ1eWluZyBodWdlIGFtb3VudHMgb2YgZm9vZC4gSWYgeW91IGludm9sdmVkIHdpdGggZm9vZCBwcmVwIGFuZCBjb29raW5nLCB5b3UgY2FuIHRyeSBhbmQgYnV5IHRoaW5ncyBpbiBtaW5pbWFsIHBhY2thZ2luZy4gClRoZXkgd2VyZSBnaXZlbiBhIHZvdWNoZXIgZm9yIDEgZnJlZSBob3QgY2hvY29sYXRlLlNoYWRyYWNoNDUxICAyIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ29BcyBhbiBlbmdpbmVlciwgSSBib3RoIGFncmVlIGFuZCBkaXNhZ3JlZS4gRm9yIHNpbXBsZSBvYmplY3RzLCBsaWtlIGEgc3Bvb24gZm9yIGluc3RhbmNlLCB5ZXMsIGl0IHNob3VsZCBiZSBvYnZpb3VzIHdoYXQgc2lkZSB5b3UgaG9sZCBhbmQgaG93IHlvdSBtYW5ldXZlciBpdC4gQnV0IG5vdCBhbGwgZGVzaWducyBoYXZlIHRvIGJlIHNpbXBsZS4gCldoYXQgbG9va3MgbGlrZSBtb2Rlcm4gYXJ0IGluIHRoZSBwaG90bywgaXMgbm90aGluZyBlbHNlIHRoYW4gcHV0dGluZyB0aGUgZnJlZSBuZWVkbGUgdGhyb3VnaCB0aGUgZmlyc3Qgc3RpdGNoIG9uIHRoZSBmb3VydGggbmVlZGxlIGFuZCB0aGUgZmlyc3Qgc3RpdGNoIG9uIHRoZSBleHRyYSBuZWVkbGUuIEtuaXQgdGhlbSB0b2dldGhlciB3aXRoIHRoZSBjb2xvdXIgb2YgdGhlIHNvY2sgKGhlcmUgZ3JleSkuClRoZXJlJ3MgbW9yZTogQSB3YWxraW5nIHJvdXRpbmUgY2FuIGhlbHAgeW91IHN0b3Agc21va2luZy4gSXQgcmVkdWNlcyB0aGUgY3JhdmluZyBmb3Igbmljb3RpbmUgYW5kIGhlbHBzIHRvIGNvdW50ZXJhY3QgdGhlIHNsdWdnaXNoIGZlZWxpbmcgbWFueSBwZW9wbGUgaGF2ZSB3aGVuIHRoZXkgZmlyc3QgZ2l2ZSB1cCBjaWdhcmV0dGVzLiAKUnVzc2lhbnMgY2FwdHVyZWQgaGltIGFuZCB0b3J0dXJlZCBoaW0uIApDYW4ndCBhIG1hbiBzaGl0IGluIHBlb3BsZSdzIG1vdXRoPz8hIHdlIGhhdmUgdGhlIGJlc3QgcHJlc2lkZW50IGZvbGtzLiAKRGV0dGEgaGogbHBlciBrdW5kZXIgYXR0IHNwZW5kZXJhIG1lciB0aWQgaHlyYSBmIHJzIGtyYXIgZW4gdHVmZiBlbmhldCBzb20ga2xhcmFyIHZlbiBkZSBtZXN0IHV0IGthZGUgYiByYmFyaGV0LiAKSSBuZXZlciBzZWVuIGFueXRoaW5nIGxpa2UgaXQuIFRoZSBjb250cmFjdCBlbmRlZCBidXQgdGhyZWUgeWVhcnMgbGF0ZXIgdGhpcyBwcm9kdWN0IHdhcyBzdGlsbCBvbiBteSBtaW5kLiBiZWxpZXZlZCB0aGV5IHdvdWxkIGJlIHRoZSBmdXR1cmUgb2YgYSBuZXcgc2VnbWVudCBvZiB0aGUgdmVnZXRhYmxlIGNhdGVnb3J5LCBqdXN0IGFzIGZyb3plbiBwZWFzLCBjb3JuIGFuZCBicm9jY29saSBmbG9yZXRzIHdlcmUgaW5ub3ZhdGl2ZSAzMCB5ZWFycyBhZ28uIERhdmlkc29uIHNldCBhYm91dCBtYWtpbmcgZnJvemVuIEthbGUsIGNvbGxhcmRzIGFuZCByYXBpbmkgc2V4eSBpbiBOb3J0aCBBbWVyaWNhLiAKVGhleSBhbHNvIHBsZWRnZWQgdG8gY29uZmlybSBwcm9tb3Rpb25zIGZvciBhbGwgb2ZmaWNlcnMgYW5kIGNpdmlsaWFucyBpbiAiYWN0aW5nIiBzdXBlcnZpc29yeSByb2xlcywgYW5kIG1vcmUgb3ZlcnRpbWUgbW9uZXkgdG8gZW5zdXJlIHBvbGljZSBkaXZpc2lvbnMgbWVldCBtaW5pbXVtIHN0YWZmaW5nIGFuZCBzZXJ2aWNlIGxldmVscy4KVW5lIGljb25vZ3JhcGhpZSB0cnMgcmljaGUgcXVpIG5vdXMgbW9udHJlIE1vbnRtYXJ0cmUgZGVzIGRidXRzIGRlIGxhIHBob3RvICgxODUwLzE4NjApICB1bmUgcG9xdWUgcGx1cyByY2VudGUgKDE5MjAvMTkzMCksIHBhcyBkZSBwaG90b3MgYWN0dWVsbGVzLiAKQW5kIHdlIGFyZSBhbGwgZm9yY2VkIHRvIGxvb2sgYXQgZWFjaCBvdGhlcnMuIApUaGUgd2l0bmVzcyB0b2xkIHBvbGljZSBNb29uZXkgdGhlbiBhc2tlZCBDemFwaWV3c2tpLCAiU28gdGVsbCBtZSwgd2hhdCBwbGFjZSBkaWQgeW91IHRha2UgaW4gdGhlIGxhc3QgSG9sZCAnZW0gdG91cm5hbWVudCB5b3Ugd2VyZSBpbj8iClRoZSBwdWJsaWMgaGVhbHRoIGV4cGVydCBzYWlkIHBva2VyIG1hY2hpbmVzIHdlcmUgYXMgYWRkaWN0aXZlIGFzIGNvY2FpbmUgYW5kIGNvbnRyaWJ1dGVkIHRvIGZhbWlseSBicmVha3VwcywgZG9tZXN0aWMgdmlvbGVuY2UgYW5kIG90aGVyIGhhcm1mdWwgc29jaWFsIGVmZmVjdHMuCk9uZSBzdXJ2ZXkgdGhhdCBlY29ub21pc3RzIGZyb20gdGhlIFdoYXJ0b24gU2Nob29sIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFBlbm5zeWx2YW5pYSBoYXZlIHVzZWQgc2ltcGx5IGFza3MgcmVzcG9uZGVudHMgdG8gcmF0ZSB0aGVtc2VsdmVzIG9uIHdoZXRoZXIgdGhleSBhcmUgInZlcnkgaGFwcHksIiAicHJldHR5IGhhcHB5IiBvciAibm90IGhhcHB5LiIgVGhlIHJlc3VsdGluZyBzdGF0aXN0aWNzIGRvbid0IHRha2UgaW50byBhY2NvdW50IHRoZSBudWFuY2VzIGFuZCBiYWNrZ3JvdW5kIGluZm9ybWF0aW9uIG9mIHdoeSBhbmQgaG93IHBlb3BsZSBzY29yZWQgdGhlbXNlbHZlcy4uIApMIHRhbnQgdW4gY29uY2VwdCBtZXJnZWFudCBkZSBsYSBtY2FuaXF1ZSBxdWFudGlxdWUsIGxhIGNvbGxhYm9yYXRpb24gZW50cmUgSnVuZyBldCBQYXVsaSBsZXMgYSBjb25kdWl0IGEgcmF0dGFjaGVyIGNlIHBobm9tbmUgIHVuIHN5bmNocm9uaXNtZSBhY2F1c2FsIGRhbnMgbGVxdWVsIGxlcyBkZXV4IHZuZW1lbnRzIHNvbnQgbGlzIHBhciB1biBwcmluY2lwZSBkZSBjb3JyZXNwb25kYW5jZSBkbnUgZGUgY2F1c2VzLiAKQSB0ZWFtIG5vdCBqdXN0IGRyaXZlbiBieSBsZWdhY3kgb2Ygd2hlcmUgdGhleSBiZWxvbmcsIGJ1dCB0aGUgbGVnYWN5IHRoZXkgY2FuIGNyZWF0ZSB0b2dldGhlci4gVGVjaG5vbG9neSBpcyBub3QgYXQgY3Jvc3MgcHVycG9zZXMgd2l0aCBjcmVhdGl2aXR5LiAKIlNoZSBwYWlkIHRoZSBpbnN1cmFuY2UgcHJlbWl1bXMgZm9yIDEzIHllYXJzLCBidXQgaGlzIG5ldyBzcG91c2UgZ290IHRoZSBwYXlvdXQgICB1bnRpbCB0aGUgY291cnQgaW50ZXJ2ZW5lZCIgaXMgbG9ja2VkIFNoZSBwYWlkIHRoZSBpbnN1cmFuY2UgcHJlbWl1bXMgZm9yIDEzIHllYXJzLCBidXQgaGlzIG5ldyBzcG91c2UgZ290IHRoZSBwYXlvdXQgICB1bnRpbCB0aGUgY291cnQgaW50ZXJ2ZW5lZEhvdyB5b3VyIGNvbXBhbnkgY2FuIHdpbmQgdXAgb24gdGhlIGhvb2sgZm9yIHlvdXIgc3VwcG9ydCBvYmxpZ2F0aW9uc0luY29tZSBkZWNsYXJlZCBvbiBhIHRheCByZXR1cm4gaXNuJ3QgdGhlIGxhc3Qgd29yZCB3aGVuIGNhbGN1bGF0aW5nIGNoaWxkIHN1cHBvcnRUaXRsZSB0byB0aGUgbmV4dCBkb29yIGhvbWUgd2FzIHBsYWNlZCBpbiBNci4gQmFyeWxhIG5hbWUgYW5kIGhpcyBtb3RoZXIgbmFtZSwgYXMgam9pbnQgdGVuYW50cy4gTXJzLiAKTGUgTG91aXMgU3QgTGF1cmVudCBhIHN1YmkgZGVzIHRyYXZhdXggZGUgcmFkb3ViICB0b3V0ZSB2aXRlc3NlIGRlIDYsNSBtaWxsaW9ucyBkZSBkb2xsYXJzIGxlIHByaW50ZW1wcyBkZXJuaWVyIHN1ciBsZSBjaGFudGllciBuYXZhbCBEYXZpZSBkZSBMdmlzLiBDZSBzZXJhIGxlIHByZW1pZXIgZGUgZGV1eCByZWxldnMgZmFpdHMgZGFucyBsICAgbGUgc2Vjb25kIGVuIDIwMTUgICBwb3VyIHRheWVyIGxhIHNvdW1pc3Npb24gZHUgQ2FuYWRhICBsYSBDb21taXNzaW9uIGRlIGwgc3VyIGxlIHByb2xvbmdlbWVudCBkdSBwbGF0ZWF1IGNvbnRpbmVudGFsIGF1IGRlbCBkZXMgMjAwIG1pbGxlcyBtYXJpbnMuLiAKV2UgaGFkIG5vdGhpbmcuIEhlIGRpZCBoYXZlIHdlcmUgZGVzaWducyBoZSBoYWQgZGV2ZWxvcGVkIGZvciBob21lIHRvb2xzLCBidXQgaGFkIHNoZWx2ZWQgc2l4IG1vbnRocyBlYXJsaWVyIGJlY2F1c2UgaGlzIHN0YWZmIHdhcyB3b3JraW5nIGZ1bGwgb3V0LiBXZSBsb3N0IGFsbCB0aGUgYnVzaW5lc3MsIEkgYnJvdWdodCBvdXQgdGhlc2UgZGVzaWducyBhbmQgc2NyYW1ibGVkIHRvIGZpbmQgYSByZXNpbiBmb3JtdWxhIHRoYXQgd29ya2VkIGFuZCBkaWQgd2hhdCB3ZSB3YW50ZWQgaXQgdG8gZG8uIApJIGRvbiBrbm93IGhvdyB0byBtZWFzdXJlIGl0IGF0IHRoZSBtb21lbnQsIGJ1dCBTaGF1biBXaGl0ZSBpcyBhbHNvIGtub3duIGZvciBnZXR0aW5nIGhpZ2hlciBpbnRvIHRoZSBhaXIgdGhhbiBvdGhlciBjb21wZXRpdG9ycywgc28gdGhhdCBtYXkgaGF2ZSBiZWVuIHRoZSBjYXNlIGhlcmUgYXMgd2VsbC4uIApXZSBzdGFydCBtYWtpbmcgb3V0IG9uIHRoZSBjb3VjaCBhbmQgSSBhbSBIT1JOWS4gClRoZSBQbGVkZ2Ugb2YgQWxsZWdpYW5jZSB3YXMgd3JpdHRlbiBieSBGcmFuY2lzIEJlbGxhbXkxICgxODU1IDE5MzEpIGluIDE4OTIgZm9yIHRoZSA0MDB0aCBhbm5pdmVyc2FyeSBvZiB0aGUgYXJyaXZhbCBvZiBDaHJpc3RvcGhlciBDb2x1bWJ1cyB0byB0aGUgV2VzdGVybiBIZW1pc3BoZXJlLiAKVGhhbmsgeW91IGZvciB0aGUgYWR2aWNlLCBJIHJlYWxseSBhcHByZWNpYXRlIGl0IQpTb2NpZXR5IGlzIHNpbXBseSBhIHN0cnVjdHVyZSB0byBwcmV2ZW50IHRoZSBuYXR1cmFsIGRlc2lyZSB0byBjdWxsIHRoZSBoZXJkIGFuZCBwcm92aWRlIGZvciB0aGUgd2VhayBsaW5rcy4gV2hpY2ggd291bGQgYmUgdGhvc2Ugd2hvIHJvYiBvdGhlcnMgZm9yIGV4YW1wbGUuCldvbWFuIG9mIHRoZSBob3VyOiBWZXJzYWNlJ3MgdmljZSBwcmVzaWRlbnREb25hdGVsbGEgVmVyc2FjZSBhcHBlYXJlZCBpbiBoaWdoIHNwaXJpdHMgYXMgc2hlIHByZXNlbnRlZCBoZXIgY29sbGVjdGlvbiBhdCB0aGUgcHJlc3RpZ2lvdXMgZXZlbnQKU28gcGxhbiBhIGRpZmZlcmVudCB3YXkgb2YgZnVsZmlsbGluZyB5b3VyIHNleHVhbCByZWxhdGlvbnNoaXAuIFRyeSBleHBlcmltZW50aW5nIGFuZCBkaXNjb3ZlcmluZyBuZXcgd2F5cyB0byBhcm91c2Ugb25lIGFub3RoZXIuLiAKSG93ZXZlciwgdGhlIHJlZ3VsYXIgU2hvdGd1biBtYXN0ZXJ5IGZvciBleHBsb3NpdmVzIGlzIGdldCBhIGRpcmVjdCBoaXQgMzAgdGltZXMgb24gYW4gSW1wLiBUaGF0IG5vdCB0aGF0IGFubm95aW5nIG9yIGdyaW5keSByZWFsbHksIGNvbnNpZGVyaW5nIGhvdyBtYW55IGltcHMgdGhlIGdhbWUgaGFzIGluIGVhY2ggZmlnaHQuIApBY3R1YWxseSwgdGhlIHRlc3Qgd2FzIG5ldmVyIHBlcmZlY3QuIEhvdywgYWZ0ZXIgYWxsLCBpcyB0aGUgc2V4IG9mIGEgcnVubmVyIHRvIGJlIGRldGVybWluZWQ/IFRoaXMgaGFzIGJlZW4gYSBwcm9ibGVtIHNpbmNlIHRoZSBpbnRyb2R1Y3Rpb24gb2Ygd29tZW4gaW50byBvcmdhbml6ZWQgc3BvcnRpbmcgY29tcGV0aXRpb25zLiAKSGUgd2FzIHN1cGVyIGhhbmRzb21lIGFuZCBzd2VldC4gCkluIGFkZGl0aW9uLCByZW1lbWJlciB0byBhc2sgeW91ciBjbGllbnQgaWYgaGUgaGFzIGFueSBtZWRpY2FsIGNvbmRpdGlvbnMgdGhhdCB5b3Ugc2hvdWxkIGtub3cgdGhhdCBjYW4gYWZmZWN0IHRoZSBtYXNzYWdlLiAKSSBqdXN0IHRob3VnaHQgSSBkaWRuIGJlbGlldmUgZW5vdWdoLiAKQXQgdGhlIHRpbWUsIHRoZSBob21lb3duZXJzIHJldHVybmVkIHRvIHRoZWlyIGhvdXNlIGFuZCBkaXNjb3ZlcmVkIGl0IGhhZCBiZWVuIGJyb2tlbiBpbnRvIGFuZCByYW5zYWNrZWQuClRoZSB1bmJlbGlldmVycyBhcmUgZGVhZCwgY2FwdGl2ZSwgZXhpbGVkOyB3aXRoIGJsb29kLCBodW1hbiBib2RpZXMsIHdhdGVyIGFuZCByZWQgaGFpbCBjb3ZlcmluZyB0aGUgZWFydGguIiAoQ2VudHVyeSA4LCBRdWF0cmFpbiA3NykuIApBIGNvbWJpbmVkIGFuYWx5c2lzIG9mIDEyIGZyYWN0dXJlIHByZXZlbnRpb24gdHJpYWxzIGZvdW5kIHRoYXQgc3VwcGxlbWVudGF0aW9uIHdpdGggYWJvdXQgODAwIElVIG9mIHZpdGFtaW4gRCBwZXIgZGF5IHJlZHVjZWQgaGlwIGFuZCBub25zcGluYWwgZnJhY3R1cmVzIGJ5IGFib3V0IDIwJSwgYW5kIHRoYXQgc3VwcGxlbWVudGF0aW9uIHdpdGggYWJvdXQgNDAwIElVIHBlciBkYXkgc2hvd2VkIG5vIGJlbmVmaXQuWzE5XSBSZXNlYXJjaGVycyBhdCB0aGUgSmVhbiBNYXllciBVU0RBIEh1bWFuIE51dHJpdGlvbiBSZXNlYXJjaCBDZW50ZXIgb24gQWdpbmcgYXQgVHVmdHMgVW5pdmVyc2l0eSBoYXZlIGV4YW1pbmVkIHRoZSBiZXN0IHRyaWFscyBvZiB2aXRhbWluIEQgdmVyc3VzIHBsYWNlYm8gZm9yIGZhbGxzLiBUaGVpciBjb25jbHVzaW9uIGlzIHRoYXQgcmlzayByZWR1Y3Rpb24gYmVnaW5zIGF0IDcwMCBJVSBhbmQgaW5jcmVhc2VzIHByb2dyZXNzaXZlbHkgd2l0aCBoaWdoZXIgZG9zZXMuIApUaGUgY2F1c2Ugb2YgcHJpbWFyeSBGU0dTIGlzIHVua25vd24sIGFsdGhvdWdoIHNvbWUgY2FzZXMgYXJlIHRoZSByZXN1bHQgb2YgYSBnZW5ldGljIGRlZmVjdCwgYW4gaW5mZWN0aW9uLCBvciBhIHRveGljIHJlc3BvbnNlIHRvIGEgZHJ1Zy4gCkZNUyBpcyBhIHZlcnkgZXh0ZW5zaXZlIHN5bXB0b20gY29tcGxleCB0aGF0IGNhbm5vdCBiZSBleHBsYWluZWQgYnkgYSB2aXRhbWluIEQgZGVmaWNpZW5jeSBhbG9uZS4iSG93ZXZlciwgdml0YW1pbiBEIHN1cHBsZW1lbnRhdGlvbiBtYXkgYmUgcmVnYXJkZWQgYXMgYSByZWxhdGl2ZWx5IHNhZmUgYW5kIGVjb25vbWljYWwgdHJlYXRtZW50IGZvciBGTVMgcGF0aWVudHMgYW5kIGFuIGV4dHJlbWVseSBjb3N0IGVmZmVjdGl2ZSBhbHRlcm5hdGl2ZSBvciBhZGp1bmN0IHRvIGV4cGVuc2l2ZSBwaGFybWFjb2xvZ2ljYWwgdHJlYXRtZW50IGFzIHdlbGwgYXMgcGh5c2ljYWwsIGJlaGF2aW9yYWwsIGFuZCBtdWx0aW1vZGFsIHRoZXJhcGllcywiIHNhaWQgV2VwbmVyLiJWaXRhbWluIEQgbGV2ZWxzIHNob3VsZCBiZSBtb25pdG9yZWQgcmVndWxhcmx5IGluIEZNUyBwYXRpZW50cywgZXNwZWNpYWxseSBpbiB0aGUgd2ludGVyIHNlYXNvbiwgYW5kIHJhaXNlZCBhcHByb3ByaWF0ZWx5LiIuIAozLiBUaGVyZSBpcyBtdWNoIGNvbmNlcm4gYWJvdXQgb3VyIGV2ZXIgaW5jcmVhc2luZyBpbmdlc3Rpb24gb2YgZGFpcnkgcHJvZHVjdHMuIFJlc2VhcmNoIGZyb20gYXJvdW5kIHRoZSB3b3JsZCBzdGF0ZXMgdGhhdCB0aGUgdmFzdCBtYWpvcml0eSBvZiB1cyBsb3NlIG91ciBhYmlsaXR5IHRvIGRpZ2VzdCBtaWxrIHByb2R1Y3RzIGFmdGVyIHRoZSBhZ2Ugb2YgYWJvdXQgMyBvciA0IGFuZCB0aGUgYXNzb2NpYXRpb24gYmV0d2VlbiBjb3VudHJpZXMgdGhhdCBjb25zdW1lIGhpZ2hlciBxdWFudGl0aWVzIG9mIGRhaXJ5IHByb2R1Y3RzIGFuZCBzdWNoIGRpc2Vhc2VzIGFzIGF1dGlzbSwgZGlnZXN0aXZlIGNvbXBsYWludHMsIGFsbGVyZ2llcywgaGVhcnQgZGlzZWFzZSBhbmQgY2FuY2VyLCB0byBuYW1lIGEgZmV3LCBhcmUgbW91bnRpbmcuIApIZSBub3RlcyB0aGF0IGV2ZW4gaW4gY29tbXVuaXRpZXMgd2hlcmUgcHJvc3RpdHV0aW9uIGlzIGZ1bGx5IGxlZ2FsaXplZCwgaWxsZWdhbCBhY3Rpdml0eSBtYXkgc3RpbGwgb2NjdXIuLiAKQnV0IEkgcmVhbGx5IGRvbiBrbm93IHdoYXQgdGhlaXIgcGxhbiB3YXMvaXMgZm9yIGFuIEFuZHJvbWVkYSBzZXJpZXMsIEkgZHVubm8gaWYgdGhleSBldmVyIHRhbGtlZCBhYm91dCB0aGUgYmlnZ2VyIHBsYW4gaW4gaW50ZXJ2aWV3cyBvciBhbnl0aGluZy4KVG8gc2VlIGFsbCBvZiBvdXIgYXJ0aWNsZXMgb24gcG9rZXIgcnVsZXMgYW5kIGFkdmljZSwgZ28gdG8gb3VyIG1haW4gYXJ0aWNsZSBvbiBIb3cgVG8gUGxheSBQb2tlci4gQmVmb3JlIHlvdSBwbGF5IHlvdXIgZmlyc3QgaGFuZCwgbWFrZSBzdXJlIHlvdSdyZSBmYW1pbGlhciB3aXRoIHNvbWUgUG9rZXIgQmFzaWNzLiBGb3IgdGhlIG1vcmUgY29tbW9uIGZvcm0gb2YgSG9sZCAnRW0sIHdoYXQgeW91IHdhbnQgaXMgdG8ga25vdyBIb3cgdG8gUGxheSBUZXhhcyBIb2xkICdFbSBQb2tlci4gRmVlbCBtb3JlIGxpa2UgcGxheWluZyBhbiBvbGQgZmF2b3JpdGUuIEtub3dpbmcgSG93IHRvIFBsYXkgNyBDYXJkIFN0dWQgUG9rZXIgd2lsbCB0YWtlIHlvdSBiYWNrIGEgZmV3IHllYXJzLgpNeSBmaXJzdCBzYXVuYSBleHBlcmllbmNlIGluIEdlcm1hbnkgd2FzIGF0IEZyaWVkcmljaHNiYWQgaW4gQmFkZW4gQmFkZW4gYW5kIEkgd2VudCBiYWNrIGFnYWluIHRoaXMgeWVhciBmb3IgbXkgYmlydGhkYXkuIAoiQnV0IHRoZSBzdGF0cyBhcmUgc3RpbGwgbm90IGdvb2Q7IGRpc3RyYWN0ZWQgZHJpdmluZyBkb2VzIGNhdXNlIGFjY2lkZW50cyBhbmQgZG9lcyBjYXVzZSBkZWF0aC4iCkkgbWVhbiBvdmVyYWxsIEkgbGlrZSBpdCBidXQgaWYgbXkgam9iIHdlcmVuJ3QgaGVyZSBhbmQgSSB3YXNuJ3QgdGllZCB0byB0aGUgYXJlYSBJIHdvdWxkIHByb2JhYmx5IGJlIG1vdmluZyB0byBhIG1pZCBzaXplZCB0b3duLCBtYXliZSBhIGNvbGxlZ2UgdG93biBzb21ld2hlcmUuIE5hc2h2aWxsZSBpcyBiZWNvbWluZyBhIHRydWx5IGJpZyBjaXR5IHdpdGggY29tbW9uIGJpZyBjaXR5IGlzc3VlcwpIb3cgdG8gZ2V0IHRoZSBzdWJjb25zY2lvdXMgcmVzcG9uc2UgdW5kZXIgY29udHJvbD8KU2lkZSBub3RlIGJlZm9yZSB0aGUgYXJ0aWNsZTogU1BNIFNwZWNpYWxpemVkIFBybyBSZXNvbHZpbmcgTWVkaWF0b3JzIEluZmxhbW1hdGlvbiBmaWdodGVycy4gCkJ1dCBvZiBjb3Vyc2UsIGp1c3QgZmVlbGluZyBsaWtlIEJlcnNlcmtlciBDYWxsIGluIERvdEEgaXNuIHRoZSBtb3N0IGltcG9ydGFudCB0aGluZyBJIGd1ZXNzLi4gClRoZSBkZXNjcmlwdGlvbiBvZiBib3RoIGFyZSBhcyBmb2xsb3dzOi4gCkl0IHZlcnkgb2J2aW91cyBteSBodXNiYW5kIHNpc3RlciBpcyB0aGUgZmF2b3JpdGUgY2hpbGQsIGJ1dCBzaGUgZG9lcyBoZXIgYmVzdCB0byBtYWtlIGV2ZXJ5dGhpbmcgZXF1YWwuIFNoZSBnaXZlcyB1cyBjYXJkcyBhbmQgZ2lmdHMgZm9yIGV2ZXJ5IGhvbGlkYXksIGFuZCBqdXN0IHJhbmRvbWx5IGJ1eXMgdXMgdGhpbmdzLiAKSXQgZG9lcyBwbGF5IGEgbGl0dGxlIGRpZmZlcmVudCBiZWNhdXNlIHBlb3BsZSBhcmUgZ2VuZXJhbGx5IGEgbGl0dGxlIGJldHRlciB3aGVuIG1vbmV5IGlzIG9uIHRoZSBsaW5lIChldmVuIHRoZSBzbWFsbCByZWFsIG1vbmV5IHRhYmxlcykgYnV0IGV2ZW4gb24gcmVhbCBtb25leSB0YWJsZXMgdGhlcmUgYXJlIGlkaW90cyB3aG8gdGhyb3cgY2hpcHMgYXJvdW5kIGJlY2F1c2UgdGhleSBoYXZlIG5vIGNvbmNlcHQgb2Ygb2RkcyBhdCBhbGwud2lsbCBzYXkgdGhhdCBJIHBsYXllZCB0aGUgdWx0cmEgaGlnaCBzdGFrZXMgUFMgcGxheSBtb25leSB0YWJsZXMgKHllcywgdGhhdCBhbiBveHltb3JvbmljIHN0YXRlbWVudCkuIFdoZW4geW91IGdldCByZWFsbHkgaGlnaCBpbiBwbGF5IG1vbmV5IG9uIFBTIHRoZXJlIGFyZSBzb21lIHJlYWxseSBnb29kIHBsYXllcnMuIEkgd2FzIGFibGUgdG8gY29udmVydCB0byByZWFsIG1vbmV5IGFuZCBtYWtlIG1vbmV5IHRoZSBmaXJzdCB5ZWFyLiAKVGhlaXIgcG9saXRpY2FsIGNvdXAgdGhyZWF0ZW5zIHRvIHR1cm4gaW50byBhbiBlY29ub21pYyBjb3VwLgpEb2cgSWxsbmVzcyBXYXJuaW5nIFNpZ25zCjJBIEFDIFR3byB0aWVyIDogQWlyIGNvbmRpdGlvbmVkIGNvYWNoZXMgd2l0aCBzbGVlcGluZyBiZXJ0aHMsIGFtcGxlIGxlZyByb29tLCBjdXJ0YWlucyBhbmQgaW5kaXZpZHVhbCByZWFkaW5nIGxhbXBzLiBCZWRkaW5nIGlzIGluY2x1ZGVkIHdpdGggdGhlIGZhcmUuIEEgYnJvYWQgZ2F1Z2UgY29hY2ggY2FuIGNhcnJ5IDQ4IHBhc3NlbmdlcnMuIDNBIEFDIFRocmVlIHRpZXIgOiBBaXIgY29uZGl0aW9uZWQgY29hY2hlcyB3aXRoIHNsZWVwaW5nIGJlcnRocy4gQmVydGhzIGFyZSB1c3VhbGx5IGFycmFuZ2VkIGFzIGluIDJBQyBidXQgd2l0aCB0aHJlZSB0aWVycyBhY3Jvc3MgdGhlIHdpZHRoIGFuZCB0d28gbG9uZ3dheXMgYXMgYmVmb3JlIGdpdmluZyBlaWdodCBiYXlzIG9mIGVpZ2h0LiBUaGV5IGFyZSBzbGlnaHRseSBsZXNzIHdlbGwgYXBwb2ludGVkLCB1c3VhbGx5IG5vIHJlYWRpbmcgbGlnaHRzIG9yIGN1cnRhaW5lZCBvZmYgZ2FuZ3dheXMuIEJlZGRpbmcgaXMgaW5jbHVkZWQgd2l0aCBmYXJlLiBJdCBjYXJyaWVzIDY0IHBhc3NlbmdlcnMgaW4gYnJvYWQgZ2F1Z2UuIChGdWxsIEFuc3dlcikKU28gdGhlIGJlc3Qgd2F5IHRvIG9ic2VydmUgeW91ciBwYXJ0bmVyIGlzIHdhdGNoIHRoZW0gcGxheS4gRG9uJ3QgcGxheSBhZ2FpbnN0IHRoZW0sIG9yIHRlbGwgdGhlbSB3aGF0IHlvdSBhcmUgZG9pbmcsIGp1c3Qgb2JzZXJ2ZSB0aGVtLiBGb3IgZXhhbXBsZSwgaWYgdGhlIHBhcnRuZXIgaXMgcGxheWluZyBwb2tlciB3aXRoIHRoZWlyIGZyaWVuZHMsIHdhdGNoIG92ZXIgeW91ciBwYXJ0bmVyJ3Mgc2hvdWxkZXIuIElmIHlvdSBjYXRjaCB0aGVtIGNoZWF0aW5nLCBpdCBjb3VsZCBiZSBmb3IgZGlmZmVyZW50IHJlYXNvbnMuIApXZSBzdGF5IGluIHRvdWNoLCBSb3dlbGwgZXhwbGFpbmVkLiBBbGwgb24gZGlmZmVyZW50IHRlYW1zLiBJdCBnb2luZyB0byBiZSBzbyBkaWZmZXJlbnQuIApJIGhhdmUgYSBmcmllbmQgd2hvIGhhZCBQUFAsIGx1Y2tpbHkgc2hlIHdhcyBjYXVnaHQgcHJldHR5IGVhcmx5IG9uIGJlY2F1c2UgaGVyIG1pZHdpZmUgbm90aWNlZCBzaGUgd291bGRuJ3QgYWNrbm93bGVkZ2UgaGVyIGJhYnkgYW5kIHJlZmVycmVkIHRvIGhpbSBhcyBhIGRlbW9uLCBzaGUgc3BlbnQgOCBtb250aHMgaW4gYSBzcGVjaWFsaXN0IHVuaXQgd2l0aCBoaW0gdW50aWwgc2hlIGNhbWUgb3V0IG9mIGl0LiBQUFAga2lsbHMsIGFzIGRvZXMgcG9zdCBwYXJ0dW0gZGVwcmVzc2lvbi4gTm90IGEgbGF1Z2hpbmcgbWF0dGVyLi4gClNleCBhbmQgdGhlIFJoaW5lCkFuZCBob3cgZG8geW91IGV2ZW4ga25vdyB0aGV5IGxpdmVkIHRocnUgSmltIGNyb3cgbGF3cz8gVGhvc2UgZW5kZWQgY2xvc2UgdG8gNzAgeWVhcnMgYWdvLiBUbyBldmVuIHJlbWVtYmVyIHRoZXkgd291bGQgaGF2ZSBoYWQgdG8gYmUgcHJldHR5IGRhbW5lZCBvbGQgYW5kIHlvdSBkb24gZXZlbiBrbm93IGV4YWN0bHkgd2hhdCBhZ2UgdGhleSBhcmUgd2l0aG91dCBhc2tpbmcuIApXaWxsaWFtIEtleXNlciBPYml0dWFyeQpOb3cgUHJlc2lkZW50IFRydW1wIHNheXMgaGUgYWNjZXB0cyBLaW0gSm9uZyBVbidzIGFjY291bnQ6IEVkaXRvcmlhbCBCb2FyZCBSb3VuZHRhYmxlIE90dG8gV2FybWJpZXIgZGllZCBkYXlzIGFmdGVyIE5vcnRoIEtvcmVhIHNlbnQgaGltIGhvbWUgdG8gT2hpby4gCkhlIHdhbGtlZCBvdXQgb24gdXMgaW4gT2N0b2JlciBhbmQgcHVsbGVkIGFsbCBmaW5hbmNpYWwgc3VwcG9ydCBmb3IgaGlzIGRhdWdodGVyIHVudGlsIGhlIHdhcyBjb3VydCBvcmRlcmVkIHRvIHBheSBjaGlsZCBzdXBwb3J0IGluIERlY2VtYmVyLiBIZSBkaWRuIGFzayB0byB0YWtlIGhlciBhbnkgbW9yZSB0aGFuIGhlIGhhcyBoZXIgbm93IChpbiBmYWN0IGhlIGFza2VkIGZvciBoZXIgbGVzcykgcHJpb3IgdG8gdGhlIGN1c3RvZHkgYWdyZWVtZW50LiBOb3cgYWxsIG9mIGEgc3VkZGVuIGhlIHdhbnRzIG1vcmUgdGltZSwgd2hlbiBoZSBpcyBub3cgcmVzcG9uc2libGUgZm9yIDIgbW9yZSBwZW9wbGUuIApJIGNhbGwgd2l0aCBRSnNzIGluIHRoZSBDTyBhbmQgZmxvcCBRSjcuIEkgY2FsbCBhIGZsb3AgYmV0IGFuZCBhIHR1cm4gYmV0IGFuZCB0aGUgcml2ZXIgcGFpcnMgdGhlIDcuIApJIHN1ZmZlcmVkIGZvciB5ZWFycyB3aXRoIGFuIHVuZGlhZ25vc2VkIGF1dG9pbW11bmUgZGlzZWFzZS4gCkJlaW5nIGN1bm5pbmcgaXMgYSBncmVhdCB3YXkgdG8gZW5zdXJlIHlvdSBtYW5hZ2UgdGhlIHBlb3BsZSBhbmQgZm9yY2VzIGluIHlvdXIgbGlmZSBzbyB0aGF0IHlvdSBhbHdheXMgZW5kIHVwIG9uIHRvcC4gClNvbWV0aW1lcyB0aGUgcGxhY2UgaXMgZmlsbGVkIHdpdGggcmVncyB0aGF0IGRvbiBnaXZlIGFjdGlvbi4gCkFuZCBLb3JlYSBoYXMgdGhlIGhpZ2hlc3Qgc21hcnRwaG9uZSBwZW5ldHJhdGlvbiBpbiB0aGUgZGV2ZWxvcGVkIHdvcmxkLCBzbyBvZiBjb3Vyc2UgY3JpbWVzIHVzaW5nIHNtYXJ0cGhvbmVzIGNvdWxkIGJlIGEgcHJvYmxlbS4gRnVuZGFtZW50YWxseSB0aGVyZSBpcyBubyBzaWduaWZpY2FudCBkaWZmZXJlbmNlIGJldHdlZW4ga29yZWFuIG1lbiBhbmQgQW1lcmljYW4gbWVuLCBzZWVpbmcgdGhhdCBpbiB0aGUgVVMsIG1lbiBoYXZlIGJlZW4gY2F1Z2h0IHN0b3JpbmcgdXBza2lydCBwaG90b3MsIGJ1dCBydWxlZCBub3QgZ3VpbHR5IGJ5IHRoZSBjb3VydCBiZWNhdXNlIHVubGlrZSBLb3JlYSwgbW9sa2EgaXMgYWN0dWFsbHkgbGVnYWwgaW4gbW9zdCBhcmVhcyBvZiB0aGUgVVMuIFdoYXQgeW91IGFyZSBhZHZvY2F0aW5nIGZvciBpcyBub3QgY29tbXVuYWwgdmFsdWVzLgpJIGFza2VkIGhpbSBhYm91dCB0aGlzIGFuZCBoZSBzYWlkIHRoYXQgdGhlIG90aGVyIGd1eSB3YXMganVzdCBhIGplYWxvdXMgbG9zZXIgYW5kIHJlaXRlcmF0ZWQgdGhlIG51bWJlcnMgc28gSSBkb24gdGhpbmsgSSBhbSBnb2luZyB0byBnZXQgbW9yZSB0aGFuIDEwJS4uIApBdSBsaWV1IGRlIGZhaXJlIHVuZSBjb3Vyc2UgZCB0cmFucXVpbGxlLCBhIHBvdXIgbW9pIHRvdXIgZGUgcXVhbGlmIGFwciB0b3VyIGRlIHF1YWxpZiwgY2UgcXVlIHR1IG5lIGZhaXMgamFtYWlzIEluZGlhbmFwb2xpcy4gdG91cyBsZXMgY2lucSBvdSBkaXggdG91cnMsIGplIHJlZ2FyZGFpcyBsZSBjbGFzc2VtZW50IHN1ciBsYSBncmFuZGUgY29sb25uZSwgZXQgamUgY29uc3RhdGFpcyBxdWUgamUgcmVtb250YWlzLgpUaGV5IHdpbGwgc3RhcnQga2lsbGluZyBmYXJtZXJzIGFuaW1hbHMgZXZlbnR1YWxseSBhbmQgcG9zc2libHkgcGVvcGxlIHBldHMuIApIYW5kbGluZyBDb25mbGljdE9mdGVuLCBzb2NpYWwgd29ya2VycyBlbmNvdW50ZXIgY29uZmxpY3QuIApXaGVuIHRoaXMgY2FyZCBpcyBhbHJlYWR5IGZhY2VkIHVwLCBsYXJnZSBiZXRzIHdpbGwgYmUgcGxhY2VkIG9uIHRoZSBUZXhhcyBob2xkZW0gdGFibGUgYmVjYXVzZSBpdCB3aWxsIGJlIGRvdWJsZWQuIFdoZW4gdGhlIHJpdmVyIGNhcmQgb3IgdGhlIGZpZnRoIGNhcmQgaXMgYWxyZWFkeSBkZWFsdCwgdGhlIHBsYXllcnMgd2lsbCBkZWNpZGUgaWYgdGhleSB3aWxsIHJhaXNlLCBjaGVjaywgY2FsbCBvciBmb2xkLiAKQSBidWRkeSB0b2xkIG1lIGhlIHVzZWQgdG8gd29yayBvbiB0aGUgaGlnaHdheSwgZGFuZ2Vyb3VzIGpvYiwgYW5kIGV2ZXJ5ZGF5IHRoZXJlIHdvdWxkIGJlIG9uZSBhc3Nob2xlIHdobyB0aG91Z2h0IGl0IHdhcyBoaWxhcmlvdXMgdG8ga25vY2sgb3ZlciBhbGwgb2YgdGhlIHNhZmV0eSBjb25lcyBieSBvcGVuaW5nIGhpcyBkb29yLiBIZSBzYWlkIHRoaXMgd2FzIGEgZGFpbHkgb2NjdXJyZW5jZSBmb3IgYSB3aGlsZSB1bnRpbCBoaXMgYm9zcyBkZWNpZGVkIHRvIGNlbWVudCBhIG1ldGFsIHR1YmUgaW50byB0aGUgYXNwaGFsdCB0byBibGVuZCBpbiB3aXRoIHRoZSByZXN0IG9mIHRoZSBjb25lcy4gVGhlIGd1eSBsZWFybmVkIGhpcyBsZXNzb24sIGJ1dCB3YXMgaXQgImJvb2J5IHRyYXBwZWQiIHVuZGVyIHRoZSBsZWdhbCBkZWZpbml0aW9uPyBJIHdvdWxkbiBzYXkgc28sIGJ1dCB0aGVuIGFnYWluLCBJIG5vdCBhIGxhd3llci4KVGhlIHNvb25lciB5b3UgZmlndXJlIHRoaXMgb3V0IHRoZSBiZXR0ZXIuIFRoaXMgZ2lybCBoYXMgYmVlbiB0aHJvdWdoIGhlbGwgdGhlcmUgaXMgbm8gcmVhc29uIHRvIHByb2xvbmcgaXQgb3IgbWFrZSBpdCB3b3JzZSB3aXRoIGNvbmZ1c2luZyBoYWxmIHRydXRocyBhYm91dCBoZXIgcGFyZW50cy4gClRoZSBmaXJzdCBzdGVwIGlzIHRvIHNlcGFyYXRlIHRoZSBteXRocyBmcm9tIHRoZSBmYWN0cyBhYm91dCBnYW1ibGluZyBwcm9ibGVtczpNeXRocyBGYWN0cyBhYm91dCBHYW1ibGluZyBQcm9ibGVtc015dGg6IFlvdSBoYXZlIHRvIGdhbWJsZSBldmVyeSBkYXkgdG8gYmUgYSBwcm9ibGVtIGdhbWJsZXIuRmFjdDogQSBwcm9ibGVtIGdhbWJsZXIgbWF5IGdhbWJsZSBmcmVxdWVudGx5IG9yIGluZnJlcXVlbnRseS5GYWN0OiBQcm9ibGVtcyBjYXVzZWQgYnkgZXhjZXNzaXZlIGdhbWJsaW5nIGFyZSBub3QganVzdCBmaW5hbmNpYWwuRmFjdDogR2FtYmxpbmcgcHJvYmxlbXMgYWZmZWN0IHBlb3BsZSBvZiBhbGwgbGV2ZWxzIG9mIGludGVsbGlnZW5jZSBhbmQgYWxsIGJhY2tncm91bmRzLkZhY3Q6IFByb2JsZW0gZ2FtYmxlcnMgb2Z0ZW4gdHJ5IHRvIHJhdGlvbmFsaXplIHRoZWlyIGJlaGF2aW9yLkZhY3Q6IFF1aWNrIGZpeCBzb2x1dGlvbnMgbWF5IGFwcGVhciB0byBiZSB0aGUgcmlnaHQgdGhpbmcgdG8gZG8uIFByb2JsZW0gZ2FtYmxlcnMgYWxzbyB0eXBpY2FsbHkgZGVueSBvciBtaW5pbWl6ZSB0aGUgcHJvYmxlbSBldmVuIHRvIHRoZW1zZWx2ZXMuIApNYW5nYXJvb2JvbyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClRoYXQncyB0aGUgZXF1aXZhbGVudCBvZiBOZXcgWW9yayB0YXhwYXllcnMgcGF5aW5nIEFtYXpvbiAkMTEyLDAwMCBmb3IgZWFjaCBvZiB0aGUgMjUsMDAwIGpvYnMgdGhlIHRlY2ggZ2lhbnQgaGFkIHByb21pc2VkIHRvIGNyZWF0ZSBhdCBpdHMgTG9uZyBJc2xhbmQgQ2l0eSBoZWFkcXVhcnRlcnMuIApMZXRzIHNheSB5b3UgcHVuY2ggYW4gYW5pdmwgd2l0aCBhIGhhbW1lciwgdGhlIGZpcnN0IHRoaW5nIHRoYXQgZ2V0cyB0byB5b3VyIGVhciBpcyB0aGUgZGlyZWN0IHNvdW5kIG9mIHlvdXIgaGFtbWVyIGhpdHRpbmcgdGhhdCBhbnZpbCAobW9ubykgdGhhbiBsYXRlciBjb21tZSB0aGUgcmVmbGVjdGlvbnMgZnJvbSB0aGUgd2FsbCwgZmxvb3IgZXRjLiAoc3RlcmVvKS4gVGhhdCB3b3VsZCBzb3VuZCByZWFsbHkgc3RyYW5nZSBpZiB0aGVyZSB3YXMganVzdCBzdGVyZW8gOiApCkkgZGlkIGFzayBoaW0gYXQgb25lIHBvaW50IHdoeSB0aGF0IHdhcyBkaWZmZXJlbnQgZnJvbSBvdGhlcnMgKGNvbnNpZGVyaW5nIEkndmUgc2VlbiB0aGlzIG9uIG1hbnkgb2YgdGhlbSk7IFRyb3kgZXhwbGFpbmVkIHRoYXQgYWxsIHlvdSBoYXZlIHRvIGRvIGlzIGFkZCBjYXJkcy4gVGhlIHN5c3RlbSBpdHNlbGYgYWN0dWFsbHkgdGVsbHMgeW91IHdoYXQgdG8gZG8gbmV4dCwgd2hpY2ggbWVhbnMgeW91IGRvbid0IGhhdmUgdG8gcmVhZCBhYm91dCBhIGxhcmdlIGFtb3VudCBvZiBzdHJhdGVnaWVzIG9yIGFueXRoaW5nLiAKRmFjZWJvb2ssIiBsYW1lbnRzIGNvdXBsZXMgd2hvIGxpa2UgdG8gZmlnaHQgb25saW5lLiAKVG9yb250byBoYXMgYSBmb3VyIGdhbWUgd2lubmluZyBzdHJlYWsgaW4gdGhlIHNlcmllcyBhbmQgaXRzIHVuZGVmZWF0ZWQgc3RyZWFrIGFnYWluc3QgdGhlIFVuaW9uIGhhcyByZWFjaCBmb3VyIHllYXJzIHdpdGggaXRzIGxhc3QgbG9zcyBjb21pbmcgb24gU2VwdGVtYmVyIDYsIDIwMTQuCkphY2sgYW5kIEFsYmVydCAodGhlIHdoaXRlIE1hbHRlc2UgYW5kIHVuZGVyYnJpZ2h0IFB1ZykgYXJlLCBvbiB0aGUgd2hvbGUsIHBlcnR1cmJlZC4gCkVkaXQ6IHNvbWUgb3RoZXJzIHNheSBpc2lsZHVyIGlzIGNhcHBlZCBhbmQgdGhpcyBpcyB2ZXJ5IHdyb25nLiBIZSBpcyB1bmNhcHBlZCBhbmQgaGFzIGZhciBtb3JlIGZsdXNoZXMgdGhlbiBjdXRvZmYuIApBdCBsZWFzdCBub3QgdG90YWwgamVya3MuLiAKVHVybnMgb3V0IEROQSBpcyBhIHZlcnkgY29tcGxpY2F0ZWQgdGhpbmcuIEFuZCB0aGF0cyB0aGUgc3Rvcnkgb2YgaG93IEkgYnJva2UgaW50byBjYW1wIERhdmlkIGFuZCBqZXJrZWQgb2ZmIEJhcm5leSBCdXNoLi4gCkkgZmxhdCBvdXQgYXNrZWQgaGVyIGlmIGl0IHdhcyBhIGZldGlzaC4gSXQgaXMgbm90IGEgZmV0aXNoLiBTaGUgY29uZmVzc2VkIHRvIHVzaW5nIHRoZSBzb2NrcyBhZnRlciBnb2luZyB0byB0aGUgYmF0aHJvb20uIEkgZm91bmQgdGhlIHJlYXNvbiBzaGUgYWx3YXlzIGRvZXMgdGhlIGxhdW5kcnkgaXMgYmVjYXVzZSBzaGUgd2FzIGhpZGluZyB0aGUgZmFjdCB0aGF0IHNoZSB1c2VzIHNvY2tzIHRvIHdpcGUgd2l0aCwgcHJpbWFyaWx5IGhlciBvd24uIEkgaGFkIG5vIHJlYXNvbiB0byBxdWVzdGlvbiB0aGUgYW1vdW50IG9mIHNvY2tzIHNoZSBldmVyIGhhcyBiZWNhdXNlIHdobyBwYXlzIGF0dGVudGlvbiB0byB0aGF0IGtpbmQgb2YgdGhpbmc/IFNoZSB0aG91Z2h0IEkgd291bGQgbm90aWNlIGFuZCB0aGluayBpdCB3YXMgd2VpcmQgc2luY2Ugc2hlIGRvZXNuIG93biBtYW55IHNvY2tzLiBTaGUgYWRtaXR0ZWQgc2hlIGhhcyBkb25lIHRoaXMgZm9yIGEgbG9uZyB0aW1lLiBIZXIgcmVhc29uaW5nLCBhcyBiZXN0IGFzIEkgY2FuIHVuZGVyc3RhbmQsIGlzIHRoYXQgYmVjYXVzZSBzaGUgaXMgYSBnZXJtYXBob2JlIChoZXIgd29yZCkgYW5kIHNoZSBpcyBhZnJhaWQgdG9pbGV0IHBhcGVyIHdpbGwgdGVhciBhbmQgaXMgYWZyYWlkIG9mIGdldHRpbmcgaGVyIGhhbmRzIG1lc3N5IGluIEFOWSBXQVkuIFNoZSB1c2VzIHNvY2tzIGJlY2F1c2UgaXQgY292ZXJzIGhlciBlbnRpcmUgaGFuZC4gQWZ0ZXIgc2hlIGRvbmUgd2l0aCB0aGVtLCBzaGUgdGhyb3dzIHRoZW0gYXdheS4gU2hlIHVzZWQgbWluZSBiZWNhdXNlIHNoZSBkaWRuIGhhdmUgb3RoZXIgc29ja3MuClthcHBsYXVzZV0gV2UgaGF2ZSB0byBkZWFsIHdpdGggZGVhdGggdGhyZWF0cy4gCkkgZG9uIGhhdmUgYW4gb3BpbmlvbiBlaXRoZXIgd2F5LiBCdXQgaWYgeW91IHdhbnQgdG8gc3F1YXNoIGl0IHlvdSB3aWxsaW5nIHRvIHN3YWxsb3cgc29tZSBkaXJ0IHRoYXQgeW91IGRlc2VydmUgdGhlbiBteSBhZHZpY2UgaXM6ClRoZSBkaWZmZXJlbmNlIGluIEFtZXJpY2FuIGFuZCBTY2FuZGluYXZpYW4gbnVyc2luZz8gRXZlcnkgZGF5IHRoZSBudXJzZXMgd291bGQgY29tZSBpbiBhbmQgb3BlbiBhbGwgdGhlIHdpbmRvd3MgYW5kIGRvb3JzLCByZWdhcmRsZXNzIG9mIHRlbXBlcmF0dXJlLCBhbmQgbGV0IGZyZXNoIGFpciBhbmQgc3VubGlnaHQgaW4uIApUaGUgd2lmZSBleHBsYWlucyB0aGF0IGhlciBzZXh1YWwgcHJvd2VzcyBpcyBhIEdvZCBnaXZlbiBwb3dlciBhbmQgdGhhdCBzaGUgdXNlcyBpdCB0byBjb250cm9sIGhlciBodXNiYW5kcy4gSGVyIGZpcnN0IHRocmVlIGh1c2JhbmRzIHdlcmUgb2xkIGFuZCBzdWJtaXNzaXZlLCBhbmQgc2hlIHdvdWxkIHNleHVhbGx5IHRvcm1lbnQgdGhlbSwgdGVhc2luZyB0aGVtIGluIGJlZCB1bnRpbCB0aGV5IGdhdmUgaGVyIGxhcmdlIGFtb3VudHMgb2YgbW9uZXkgYmVmb3JlIHNoZSB3b3VsZCBsZXQgdGhlbSBjbGltYXguIFNoZSBhY3R1YWxseSBzcGVuZHMgbW9yZSB0aW1lIHRhbGtpbmcgYWJvdXQgdGhlIHNleCB0aGFuIHNoZSBkb2VzIHRlbGxpbmcgdGhlIHRhbGUgaXRzZWxmICAgd2hpY2gsIGJ5IHRoZSB3YXksIGJlZ2lucyB3aXRoIGEga25pZ2h0IHJhcGluZyBhIG1haWRlbi4gCkFuZCB1bmxpa2UgdGhlIHJpc2tzIGF0IHRoZSBwb2tlciB0YWJsZSwgd2hlcmUgeW91ciBsb3NzZXMgYXJlIGp1c3QgeW91cnMsIGluIHRoZSBsYXJnZXIgd29ybGQsIHlvdSBjYW4gdGFrZSBkb3duIGEgbG90IG9mIG90aGVyIHBlb3BsZSB3aXRoIHlvdS4gIk9yZ2FuaXphdGlvbmFsIG1hbGZlYXNhbmNlIGluIGdlbmVyYWwgZGVwZW5kcyBvbiB0aGlzIGtpbmQgb2YgcmlzayBhbmFseXNpcywiIHNheXMgU2lsZXIuICJMb29rIGF0IGEgcGxhY2UgbGlrZSBFbnJvbi4gClNvIGZpcnN0IHRoaW5nIGZpcnN0LCBvYnZpb3VzbHksIGNsZWFuIHRob3NlIG91dCByZWFsbHkgZ29vZCwgaWYgeW91IHNvbWV3aGVyZSB0aGF0IGl0cyBub3QgbWludXMgYSBtaWxsaW9uIG91dHNpZGUsIHNjcnViIGl0IHdpdGggVFNQIChkaXJlY3Rpb25zIG9uIHRoZSBib3gpLCB0aGVuIHJpc2UgdGhlbSBvdXQgYW5kIGxldCBzaXQgb3V0IHRvIGRyeSBmb3IgYSBkYXkuIApNaXggc3VnYXIgYW5kIGNpbm5hbW9uOyBzcHJpbmtsZSBvbiB0b3Agb2YgYXBwbGVzLiBCZWF0IHRoZSBlZ2cgd2l0aCBhIHdpcmUgd2hpc2suIApDZXNhciBCbGFuY28gaGFzIGVuZG9yc2VkIEFydCBGaWVycm8uIApCeSBkb2luZyByZXNlYXJjaGVzIG9uIGRpZmZlcmVudCB3ZWJzaXRlcywgeW91IHdpbGwgZ2V0IGFuIGlkZWEgb24gc29tZSBvZiB0aGUgYWJvdmUgdGhpbmdzIGFuZCB5b3Ugd2lsbCBiZSBhYmxlIHRvIGRldGVybWluZSB3aGljaCBwb2tlciBzaXRlIHN1aXRzIHlvdSB0aGUgYmVzdC4gCkkgd2FzbiBjb21wYXJpbmcgQXVzdHJhbGlhIHRvIElyZWxhbmQuIE5vciB3YXMgSSBzYXlpbmcgdGhlIElyaXNoIGFyZSBiYWNrd2FyZC4gU2ltcGx5IHNvbWUgbGF3cyBhcmUuIEkgZG9uIHVuZGVyc3RhbmQgd2h5IHlvdSBnb3Qgc28gb2ZmZW5kZWQgd2hlbiBldmVuIE9QIHNhaWQgZXhhY3RseSB0aGUgc2FtZSB0aGluZyBhYm91dCB0aGUgYmFja3dhcmQgbmVzcy4gWW91ciByZXBseSBpcyBmaWxsZWQgd2l0aCB1bm5lY2Vzc2FyeSBoYXRlLgpSZWdhcmRpbmcgYWNjdXJhY3kgb2YgdGhlIG51bWJlcnMsIHRoZXNlIGFyZSB0aGUgZ292ZXJubWVudCBvd24gbnVtYmVycywgc28gaSBkb24gc2VlIHdoeSB0aGV5IGJlIGluZmxhdGVkLiBJZiBhbnl0aGluZywgdGhleSBiZSBrZXB0IGNvbnNlcnZhdGl2ZSAuIApGb3IgbWUsIGkgd2FzIGFib3V0IHRvIGhpdCB5b3Ugd2hlbiBJIHN1ZGRlbmx5IGZvdW5kIG15c2VsZiBpbiBmcm9udCBvZiB5b3UsIGEgZmV3IG1ldGVycyBhd2F5LlNvIG9mIGNvdXJzZSBJIGJlIGRlc29yaWVudGVkIGFuZCB1bmFibGUgdG8gZG9kZ2UgeW91ciBzdHJpa2UsIGdhbWUgb3ZlciBmb3IgbWUuIApJIGNsYWltZWQgdGhlIE1hbmRhdGUgb2YgSGVhdmVuLCBhbmQgT2gsIGJveSwgSSBkaWQgbm90IGV4cGVjdCB0aGF0IHRoZSBtYW5kYXRlIHdpbGwgdHJpY2tsZSBkb3duIHRoYXQgcXVpY2tseS4gU29vbiBlbm91Z2ggcmViZWxzIHBvcHBlZCBhbGwgb3ZlciBteSBwcm92aW5jZXMuIEFwcGFyZW50bHkgdGhlIGxvY2FscyBkaWQgbm90IGNhcmUgdGhhdCBJIHdhcyBwdXR0aW5nIHRoZWlyIHNoaXR0eSBjb3VudHJ5IGJhY2sgdG9nZXRoZXIsIHRoZXkgb25seSBjYXJlZCBhYm91dCBob3cgbWFueSB0cmlidXRhcmllcyBJIGhhZC4gCkpva2VyS2luZ3ogd2FzIHRoZSBmaXJzdCBjbHViIHRvIGdvIHVuZGVyLiAKSW4gdGhpcyBhcnRpY2xlLCB5b3Ugd2lsbCBsZWFybiBzb21lIHRpcHMgb24gaG93IHRvIGlkZW50aWZ5IHdoZW4gaG90IHN0b25lIG1hc3NhZ2UgaXMgY29udHJhaW5kaWNhdGVkIHNvIHRoYXQgeW91IGNhbiBhZHZpc2UgeW91ciBjbGllbnQgbm90IHRvIHVuZGVyZ28gdGhlIHByb2NlZHVyZS4KVG8gY29tYmF0IHRoZSBkb3dudHVybiwgdGhlIGNhc2lubyBpcyBnZWFyaW5nIHVwIGVmZm9ydHMgdG8gZW50aWNlIGdhbWJsZXJzLiBiaWdnZXN0IHByb2plY3Qgd2UgaGF2ZSBjb21pbmcgdXAgd2lsbCBvcGVuIGluIGVhcmx5IHRvIG1pZCBPY3RvYmVyIGFuZCB0aGF0J3MgdGhlIFRBRyBCYXIsIE1vcnRsYW5kIHNhaWQuIHdpbGwgaGF2ZSBlbGVjdHJvbmljIHRhYmxlIGdhbWVzLCB3aGljaCBhcmUgbmV3IHRvIHRoaXMgbWFya2V0LiBUaGUgMiwwMDAgc3F1YXJlIGZvb3QgbG91bmdlIG9uIHRoZSBzZWNvbmQgZmxvb3Igd2lsbCBoYXZlIGF0IGxlYXN0IDM1IGVsZWN0cm9uaWMgdGFibGUgZ2FtZXMgaW5jbHVkaW5nIGJsYWNramFjaywgcm91bGV0dGUgYW5kIGNyYXBzLiAKUGFyYWJvbGljODUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ28KQmV0dGluZyBvbiB0aGUgU3VwZXIgQm93bCwgcm91bGV0dGUsIG9yIGV2ZW4gb25saW5lIHBva2VyIGNhbiBiZSB0aHJpbGxpbmcsIGFuZCB3aXRoIHRoZSBhZHZlbnQgb2Ygb25saW5lIGdhbWJsaW5nLCBpdCdzIGVhc2llciB0aGFuIGV2ZXIgYmVmb3JlLiBZZXQgd2lubmluZyBhbmQgbG9zaW5nIGNhbiBoYXZlIHVuZXhwZWN0ZWQgZWZmZWN0cyBvbiB0aGUgYnJhaW4gdGhhdCBrZWVwIHBlb3BsZSBjb21pbmcgYmFjayBmb3IgbW9yZSwgc2NpZW50aXN0cyBhcmUgZmluZGluZy4KSWYsIGZvciBzb21lIHJlYXNvbiB0aGV5IGRvbiBtZWV0IHlvdXIgZGVtYW5kcywgdGhlbiB5b3Ugc3RhbmQgdXAsIHNoYWtlIHRoZWlyIGhhbmQsIGFuZCBsZXQgdGhlbSBrbm93IHRoYXQgeW91IGFwcHJlY2lhdGUgdGhlIHRpbWUgdGhhdCB5b3Ugd29ya2VkIGZvciB0aGVtIGFuZCBmZWVsIHRoYXQgaXQgdGltZSB0byBtb3ZlIG9uIChhbmQgdGhhdCBpcyB3aGF0IHlvdSBkbykuCkxlZSwgYSBuYXRpdmUgb2YgSG9uZyBLb25nLCBpcyB3ZWxsIGJ1aWx0IGFuZCB3ZWFycyBhIGJsYWNrIHRpZ2h0IGZpdHRpbmcgR2lvcmdpbyBBcm1hbmkgVCBzaGlydC4gCkFuIGludHJvIHRvIGNoaW9zIGVuZXJneSBoZWFsaW5nbGVhcm5pbmcgdG8gY2hhbm5lbCBlbmVyZ3lDYWxsaW5nIGluIHRoZSBlbmVyZ3kgYW5kIHN0b3BwaW5nIHRoZSBmbG93U2Vuc2luZyB0aGUgZW5lcmd5IGZpZWxkSW50cm8gdG8gY2hha3Jhc0hvdyB0byBwZXJmb3JtIGEgc2Vzc2lvbkhhbmQgcG9zaXRpb25zQ2hpb3MgbWVkaXRhdGlvbkNoaW9zIGVuZXJneSBoZWFsaW5nIGlzIGEgcmVsYXRpdmVseSBuZXcgeWV0IHZlcnkgY29tcHJlaGVuc2l2ZSBlbmVyZ3kgaGVhbGluZyBzeXN0ZW0gd2hpY2ggZW1wbG95cyBwb3dlcmZ1bCBhbmQgZWZmZWN0aXZlIGF1cmEgYW5kIGNoYWtyYSBoZWFsaW5nIHRlY2huaXF1ZXMsIG5lYXJseSBhbGwgb2Ygd2hpY2ggYXJlIHVuaXF1ZSB0byBjaGlvcy4gSW4gbGV2ZWwgMSB5b3UgYmVnaW4gdG8gd29yayB3aXRoIGVuZXJneSBhbmQgbGVhcm4gdG8gY2hhbm5lbCBpdCBpbiBhIHNpbXBsZSB3YXkgYnkgdXNpbmcgeW91ciBoYW5kcy4gClZlZ2FuIGRpZXRzIGFyZSB0aGUgd29yc3Qgd2hlbiBpdCBjb21lcyB0byBlbnZpcm9ubWVudGFsIHByb3RlY3Rpb24uIE11Y2ggb2Ygd2hhdCB2ZWdhbiBlYXQgaXMgbWFkZSBpbiBmYWN0b3JpZXMgYW5kIHNoaXBwZWQgZnJvbSBoYWxmIHdheSBhY3Jvc3MgdGhlIHdvcmxkLiBUYWxrIGFib3V0IGEgY2FyYm9uIGZvb3RwcmludC4gClRoZSBpZGVhbCBzdHVkeS9wbGF5IHJhdGlvIHdoZW4geW91IGZpcnN0IHN0YXJ0IHRha2luZyBwb2tlciBzZXJpb3VzbHkgaXMgYXJvdW5kIDUwLzUwIHVudGlsIHlvdSBrbm93IHlvdSB3b24gbG9zZSB5b3VyIGFzcy4gVGhlIG1vcmUgaGFuZHMgeW91IGdldCB1bmRlciB5b3VyIGJlbHQgdGhlIG1vcmUgdGhpcyByYXRpbyB3aWxsIHNoaWZ0IHRvd2FyZHMgMTAvOTAuCkluIGEgc3RhdGVtZW50LCBXYWxtYXJ0IHNhaWQ6ICJXZSByZWNvZ25pemUgdGhhdCBvdXIgYXNzb2NpYXRlcyB3aXRoIHBoeXNpY2FsIGRpc2FiaWxpdGllcyBmYWNlIGEgdW5pcXVlIHNpdHVhdGlvbi4gV2l0aCB0aGF0IGluIG1pbmQgd2Ugd2lsbCBiZSBleHRlbmRpbmcgdGhlIGN1cnJlbnQgNjAgZGF5IGdyZWV0ZXIgdHJhbnNpdGlvbiBwZXJpb2QgZm9yIGFzc29jaWF0ZXMgd2l0aCBkaXNhYmlsaXRpZXMgd2hpbGUgd2UgZXhwbG9yZSB0aGUgY2lyY3Vtc3RhbmNlcyBhbmQgcG90ZW50aWFsIGFjY29tbW9kYXRpb25zLCBmb3IgZWFjaCBpbmRpdmlkdWFsLCB0aGF0IGNhbiBiZSBtYWRlIHdpdGhpbiBlYWNoIHN0b3JlLiBUaGlzIGFsbG93cyB0aGVzZSBhc3NvY2lhdGVzIHRvIGNvbnRpbnVlIHRoZWlyIGVtcGxveW1lbnQgYXQgdGhlIHN0b3JlIGFzIHZhbHVlZCBtZW1iZXJzIG9mIHRoZSB0ZWFtIHdoaWxlIHdlIHNlZWsgYW4gYWNjZXB0YWJsZSwgY3VzdG9taXplZCBzb2x1dGlvbi4iCk4gQXJydCA6IERjaXNpb24gbWFuYW50IGQndW5lIGF1dG9yaXQgYWRtaW5pc3RyYXRpdmUgOiBtaW5pc3RyZSwgcHJmZXQsIG1haXJlLgpCdXQgc3ltYm9saWMgdmlvbGVuY2UgaXNuIGZ1bm55LiBJdCBkYW5nZXJvdXMuIApCZWZvcmUgYmVnaW5uaW5nIHRoZSBtYXNzYWdlLCB0YWxrIHRvIHlvdXIgY2xpZW50IGFuZCBhc2sgaGltL2hlciB0byBkaXNjdXNzIG90aGVyIG1hdHRlcnMgdGhhdCB0aGUgY2xpZW50IG1heSBiZSBjb25jZXJuZWQgYWJvdXQuIApFZGl0OiBKZXN1cyB0aGlzIGlzIG15IG1vc3QgdXB2b3RlZCBhbnl0aGluZy4gVGhhbmtzCk5hcmNpc3Npc3RpYyBtb20gd29uJ3Qgc3RvcCB0ZWFjaCBteSBiYWJ5IHNoZSdzCkFub3RoZXIgcG9wdWxhciB3ZWIgc2l0ZSBmb3IgYW5pbWF0ZWQgc3BvdHMgYW5kIHRhYmxlIGZsYXNoIGdhbWVzIGlzIFNoZXJpZmYgR2FtYmxpbmcuIAogIGhpcyBsYXd5ZXJzIG1hZGUgaGltIHZpcnR1YWxseSBkaXNhcHBlYXIgZm9yIHR3byB3ZWVrcyBmcm9tIEp1bmUgMTAgdG8gSnVuZSAyMywgMjAxMywgYmVmb3JlIGhlIGVtZXJnZWQgb24gYW4gQWVyb2Zsb3QgYWlycGxhbmUgYm91bmQgZm9yIE1vc2Nvdywgd2hlcmUgaGUgcmVtYWlucyBzdHJhbmRlZCB0b2RheSBpbiBzZWxmIGltcG9zZWQgZXhpbGUuIApBc2hsZXksIDEgQXJrLiAKU2hvdWxkIHRoZXkgb2YgY2hhcmdlZCBhIGRlY2sgZ3VuIG9yIDIsIHN1cmUuIENvdWxkIHRoZXkgaGF2ZSBiYWNrIHN0cmV0Y2hlZCBmcm9tIHRoZSBlbmdpbmUgdG8gdGhlIGxhZGRlciwgc3VyZS4gQnV0IHRoZSBlbmQgb2YgdGhlIGRheSB0aGV5IGdvdCB3YXRlciBvbiB0aGUgZmlyZS4uIApNZSBnaXZlIHlvdSBvbmUgZXhhbXBsZS4gSW4gdHJhbnNsYXRpb24uIFRoZSByaWJvc29tZSBhc3NlbWJsZXMgYXMgYSBzbWFsbCBzdWJ1bml0IGFuZCBhIGxhcmdlIHN1YnVuaXQsIGFuZCB0aGUgbWVzc2VuZ2VyIFJOQSBpcyBzYW5kd2ljaGVkIGJldHdlZW4gdGhlbS4gCkkndmUganVzdCByZWFkIHlvdXIgc3BlY2lmaWMgY2FzZSBhbmQgSSB3YW50ZWQgdG8gc2hhcmUgbWluZSBiZWNhdXNlIEkgY2FuIG9ubHkgaW1hZ2luZSwgZm9yIHlvdSB0byBoYXZlIGdvbmUgZmFyIGVub3VnaCB0byBiZSBhYmxlIHRvIHRlc3RpZnkgYW5kIHN0aWxsIGhpdCBhIHdhbGwsIGl0IGJ1cm5zIG1lIHVwIGluc2lkZSBhbmQgSSBhbSBzbyBzbyBzb3JyeS4gSSBzaW5jZXJlbHkgYmVsaWV2ZSB2aWN0aW0gYmxhbWluZyBhbmQgc2x1dCBzaGFtaW5nIGFyZSB3aGF0IG1ha2UgaXQgaGFyZCBmb3IgcGVvcGxlIHRvIHRlc3RpZnksIGFuZCBmb3IgdGhvc2Ugd2hvIHVwaG9sZCB0aGUgbGF3IHRvIGFzayBxdWVzdGlvbnMgZnJvbSB0aGUgcmlnaHQgcGVyc3BlY3RpdmUuIApQbGF5ZXJzIGFyZSBnZXR0aW5nIHN0aWZmZWQgYW5kIHVuaW9uIG93bmVycyBhcmUgZ2V0dGluZyBzdGlmZmVkIG1hc3NpdmVseS4gSGF2ZSB5b3UgcGxheWVkIFBva2VyQnJvcyByZWNlbnRseT8gUmVtZW1iZXIgdGhlIG9sZCBhY3Rpb24gb24gdGhlcmUgd2FzIHVucmVhbC4gTm93IHRoYXQgY2x1YiBpcyBhIGdob3N0IHRvd24uIApXYXQgdmVyZGVyIGRhbiB3ZWVyIGhldCBHcmFmIHZhbiBkZSBPbmJla2VuZGUgc29sZGFhdCwgbWV0IGRlIGVldXdpZ2UgdmxhbS4gCkFQUExFIExvZ2ljIFBybyA5ICAgTG9naWMgU3R1ZGlvIFYyLjEgQWNhZGVtaWMuICQ1MC4wMCAuIFlvdSB3aWxsIGJlIHByb21wdGVkIGZvciB0aGUgc2VyaWFsIG51bWJlciB3aGljaCBpcyBhbHNvIGluc2lkZSB0aGUgc2VhbGVkIGJveC4gCg==|<---