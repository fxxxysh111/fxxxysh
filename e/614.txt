--->|IldlIGZpbmQgb3Vyc2VsdmVzIGluIGEgd29ybGQgd2hlcmUgcGVvcGxlIGNhbiBtYWtlIGFsbGVnYXRpb25zLCByZWdhcmRsZXNzIG9mIHRoZSB0cnV0aCwgYW5kIGEgcGVyc29uIGlzIGxlZnQgd2l0aCB0aGUgY2hvaWNlIG9mIHdlYXRoZXJpbmcgaW5zdWx0aW5nIHB1YmxpY2l0eSBvciBlbmdhZ2luZyBpbiBtdWx0aSB5ZWFyIGxhd3N1aXRzLiBJdCBpcyBkZXBsb3JhYmxlIGZvciBhbnlvbmUgdG8gZmluZCB0aGVtc2VsdmVzIGluIHRoaXMgc2l0dWF0aW9uLiIKTm93IHNvbWVvbmUgc3BlbnQgbmVhcmx5IDEwMDAgdGltZXMgeW91IGFubnVhbCBpbmNvbWUgb24gYSBzaW5nbGUgaXRlbSwgd2l0aCBsZXNzIGltcGFjdCBvbiB0aGVpciBsaWZlIHRoYW4geW91IGJ1eWluZyBhIGZyaWRnZSBvciB3YXNoaW5nIG1hY2hpbmUuIApUaGUgQmVzdCBHdWlkZSB0byBPcmdhbnppbmcgWW91ciBPd24gUG9rZXIgSG9tZSBHYW1lc1RoaXMgYXJ0aWNsZSBpcyBpbnRlbmRlZCBhcyBhICdob3cgdG8nIGd1aWRlIGZvciBhbnlvbmUgaW50ZXJlc3RlZCBpbiBvcmdhbml6aW5nIHBva2VyIGhvbWUgZ2FtZXMuIEl0IHByb21vdGVzIHBva2VyIGFzIGEgc29jaWFibHkgZW5qb3lhYmxlIGdhbWUgb2Ygc2tpbGwuIEluIGFjY29yZGFuY2Ugd2l0aCBIdWJwYWdlcyBwb2xpY3ksIGl0IGRvZXMgbm90IHByb21vdGUgdGhlIGFjdCBvZiBnYW1ibGluZy4KU29tZSA0MCsgeWVhcnMgYWdvIEZsb3lkIE1heXdlYXRoZXIgU3IuIApHb29nbGUgcmVhZHMgeW91ciBlbWFpbCwga25vd3Mgd2hlcmUgeW91IGFyZSBnb2luZyB3aXRoIGdvb2dsZSBtYXBzLCBrbm93cyB3aGF0IHByb2R1Y3RzIHlvdSBidXksIGtub3dzIHdoYXQgd2Vic2l0ZXMgeW91IGFyZSB2aXNpdGluZywgdGhleSBrbm93IGEgc2hpdGxvYWQgTU9SRSBhYm91dCB3aG8geW91IGFyZSBhcyBhIHBlcnNvbiB0aGFuIGFueSBLb3JlYW4gd2Vic2l0ZS4KR3VhcmFudGVlZCB0b3VybmFtZW50cyAgIFRoaXMgaXMgYWxzbyBhIG11bHRpIHRhYmxlIHRvdXJuYW1lbnQsIGJ1dCB3aXRoIG1vcmUgdGhhbiB0ZW4gcGFydGljaXBhbnRzLiBJdCBpcyBjYWxsZWQgYSBndWFyYW50ZWVkIHRvdXJuYW1lbnQgc2luY2UgdGhlcmUgaXMgYSBndWFyYW50ZWVkIHByaXplIHBvb2wgYW5kIGl0IGRvZXNuJ3QgbWF0dGVyIGhvdyBtYW55IHBhcnRpY2lwYW50cyBhcmUgaW4gdGhlIHRvdXJuYW1lbnQuIFRoZXJlIGlzIGEgYnV5IGluIGFuZCBhbiBlbnRyeSBmZWUsIGJ1dCB0aGUgcHJpemUgcG9vbCBpcyBhYnNvbHV0ZWx5IHdvcnRoIGpvaW5pbmcgdGhlIHRvdXJuYW1lbnQuCkF0IHRoZSBlbmQsIGhlIHNheXMsIGhlIHN1ZmZlcmVkIGluIGFsbCB0b28gcmVhbCBsaWZlIHRoZSBraW5kIG9mIGRldmFzdGF0aW9uIGluZmxpY3RlZCBvbiBoaXMgY2luZW1hdGljIGhlcm8sIFN0ZXZlIE1jUXVlZW4sIFRoZSBDaW5jaW5uYXRpIEtpZCwgdGhlIHlvdW5nIGNvbnRlbmRlciB3aG8sIGluIHRoZSAxOTY1IGZpbG0sIGJldCBiaWcgYW5kIGxvc3QgZXZlcnl0aGluZy4gIkl0IHdhcyBhcyBpZiBJIHdhcyBkcm93bmluZy4gSSB3YXMgZ2FzcGluZyBmb3IgYWlyLiAKT3VyIGdhcmFnZSB3YXMgZmFpcmx5IGNsZWFuIGJ1dCB3ZSBoYWQgcmFuZG9tIHN0dWZmIGluIHRoZXJlIGZyb20gd2hlbiBteSBkYWQgbGVmdCwgb25lIG9mIHRoZSB3ZWlyZCBzdHVmZiBiZWluZyBxdWl0ZSBhIGZldyBhcXVhcml1bXMuIApQYXJ0IG9mIHRoZSBqb3kgb2YgdGhlIGV2ZW50IGlzIHNlZWluZyB0aGUgYnVzZXMgZnJvbSBhbGwgYWNyb3NzIHRoZSBjb3VudHJ5LCBwcm91ZGx5IGRpc3BsYXlpbmcgdGhlIGxpdmVyaWVzIGFuZCBsb2dvcyBvZiBidXMgY29tcGFuaWVzIHRoYXQgd291bGQgbmV2ZXIgbm9ybWFsbHkgYmUgc2VlbiBvbiB0aGUgSXNsYW5kLiBBcyB3ZWxsIGFzIFNvdXRoZXJuIFZlY3RpczIsIHRoZSBJc2xlIG9mIFdpZ2h0J3MgYnVzIGNvbXBhbnkgd2l0aCBjcmVhbSBhbmQgZ3JlZW4gbGl2ZXJ5LCBpdCBpcyBwb3NzaWJsZSB0byBzZWUgYnVzZXMgcHJldmlvdXNseSBvcGVyYXRlZCBieSBVbHN0ZXJidXMsIEJyaWdodG9uIEhvdmUsIFdpbHRzIERvcnNldCwgTG9uZG9uIG9yIE1lcnNleWJ1cy4gQSB2ZWhpY2xlIG9yaWdpbmFsbHkgZnJvbSBOZXcgWmVhbGFuZCBoYXMgZXZlbiBwYXJ0aWNpcGF0ZWQuLiAKV2VhdGhlciBjb25kaXRpb25zIHdpbGwgaW1wYWN0IHlvdXIgdHJlYXN1cmUgaHVudGluZy4gCk1pbmlidWRkaGFhICAyIHBvaW50cyAgc3VibWl0dGVkIDUgbW9udGhzIGFnbwpIaXJlIGEgZnVja2xvYWQgbW9yZSBwcm9zZWN1dG9ycyBhbmQganVkZ2VzLCB3aGlsZSBkcmFzdGljYWxseSBpbmNyZWFzaW5nIGxlZ2FsIGFpZCBmdW5kaW5nLiBIb2xkaW5nIHBlb3BsZSBpbiByZW1hbmQgKGhvbGRpbmcgdGFua3MpIHNob3VsZCBiZSBkcmFzdGljYWxseSByZWR1Y2VkIGluIGZhdm91ciBvZiB0aHJvdWdocHV0LiBCdWlsZGluZ3MgYXJlIGV4cGVuc2l2ZSBhbmQgcGVybWFuZW50LiBJdCBtdWNoIGVhc2llciBhZGp1c3Qgc3RhZmZpbmcgbGV2ZWxzIGFzIG5lZWRzIGNoYW5nZQpFdmVyeSBidXNpbmVzcyBmZWVscyB0aGUgY3VycmVudCBjcmVkaXQgY3J1bmNoLiAKQVJFIFRIRVJFIE1PUkUgUFJPU1RJVFVURVMgSU4gTEFTIFZFR0FTIFRIQU4gT1RIRVIgQ0lUSUVTPwpPciB0byBiZSBtb3JlIGNsZWFyLCBob3cgZXhhY3RseSBkb2VzIHRoZSBhbmp1bmFiZWF0cyB0b3VyIHdvcms/IFdobyBwZXJmb3JtcyBvbiB0aGVpciB0b3Vycz8gV2lsbCB0aGUgYWN0dWFsIGxpbmV1cCBjb21lIG91dCBhdCBzb21lIHBvaW50P1J1bGUgSSAgIE5vIHNjcmVlbnNob3RzLiBUaGlzIGluY2x1ZGVzIHBpY3R1cmVzIG9mIHNjcmVlbnMgYW5kIHBob3RvcyB3aGVyZSB0aGUgaW50ZXJlc3QgaXMgdGhlIGNvbnRlbnRzIG9mIGEgc2NyZWVuLiBGb3IgYSBwbGFjZSB0byBwb3N0IHNjcmVlbnNob3RzLCB5b3UgbWF5IHdpc2ggdG8gY2hlY2sgb3V0IC9yL3NjcmVlbnNob3RzLgpOb24gc2VxdWl0dXIgZmFjdG9pZC4gCkdldCByaWQgb2YgUm9iZXJ0cywgS2xlc2tvLCBQcm9iYWJseSBhdXJpbGxpYSwgaGUgY2FuIHN0YXkgaGVhbHRoeSBhbmQgZHVyaGFtIHdobyBjbGVhcmx5IG5lZWRzIGdsYXNzZXMuIApIb3cgaXMgdGhlIGpvYiBoZSBtb3ZlZCBmb3IgZ29pbmc/IElzIGl0IHBvc3NpYmxlIGhlIHN0cnVnZ2xpbmcgd2l0aCBvdGhlciBwYXJ0cyBvZiBoaXMgbGlmZSBhbmQgaG9waW5nIHRoYXQgaGF2aW5nIGEgYmFieSB3aWxsIGdpdmUgaGltIGEgY2hhbmNlIHRvIHN1Y2NlZWQgYXQgc29tZXRoaW5nPwpUaGF0IGlzIHdoeSBJIHdpbGxpbmcgdG8gdGFrZSB0aGlzIHBsdW5nZS4gSSByZWFsbHkgZG9uIHdhbnQgdG8gY29udGludWUgdGhpcyBoYWJpdC4gSSByZWFsbHkgdGhpbmssIGFzIGEgZm9ybWVyIHBvdCBzbW9rZXIsIHRoYXQgbWVkaWNhbCBtYXJpanVhbmEgd291bGQgaGVscCB3aXRoIHRoZXNlIHBhcnRpY3VsYXIgcHJvYmxlbXMuIApEaWQgaXQgdGhyZWUsIGZvdXIgdGltZXMgYW5kIHJlYWxpc2VkIHRoYXQgSSBkaWQgbm90IHJlYWxseSBuZWVkIGl0LCBzbyBJIHN0b3BwZWQgZXZlciBzaW5jZS4gCkJlIHN1cmUgbm90IHRvIG1pc3Mgb3V0IG9uIE1vbmRheSBQb2tlciBOaWdodHMgYW5kIFRyaXZpYSBldmVyeSBXZWRuZXNkYXkgd2l0aCBHZXJyeSBCeXJvbiwgYXMgd2VsbCBhcyB0aGVpciBXZWRuZXNkYXksIEZyaWRheSBhbmQgU3VuZGF5IG1lYXQgcmFmZmxlcy4gCkkgY291bGQgdGVsbCBqdXN0IGZyb20geW91ciBwb3N0IGJlY2F1c2UgZ29vZCBwbGF5ZXJzIGRvbiBsaW1wIGNhbGwgb2Z0ZW4gaW4gdG91cm5hbWVudHMgZXhjZXB0IGluIHNwZWNpYWwgY2FzZXMsIHNvIHdoZW4gaGFsZiB0aGUgdGFibGUgZG9lcyBpdCBpdCBzZWVtcyBwcmV0dHkgbGlrZWx5IHRoZSBmaWVsZCBpcyBtb3N0bHkgZmlzaC5UaGUgYmlnZ2VzdCBhbmQgbW9zdCBpbXBvcnRhbnQgdGhpbmcgaXMgeW91IHNlbGYgYXdhcmUgYW5kIHdhbnQgdG8gZ2V0IGJldHRlci4gCkkgYWRqdXN0ZWQgbXkgYmVsdCB0b2RheSAoc2luY2UgaXQgd2FzIG15IGxhc3QgYW5kIGhlYXZpZXN0IHNlc3Npb24gb2Ygc21vbG92IGpyKSBhbmQgbWFkZSBpdCBsb3dlciBhbmQgaSBkaWRuIGZlZWwgYW55IGRpc2NvbWZvcnQgZHVyaW5nIHRoZSBleGVyY2lzZXMsIHRoZSBwYWluIGlzIHN0aWxsIHRoZXJlIGJ1dCBpdCBkaWRuIGh1cnQgd2hlbiBpIHdhcyBzcXVhdHRpbmcgbGlrZSBob3cgaXQgZGlkIGJlZm9yZS4gVGhlIHBhaW4gaXMgdGhlcmUgZXZlbiB3aGVuIGltIG5vdCBkb2luZyBhbnkgYWN0aXZpdGllcywgd2hlbiBpIG1vdmUgYXJvdW5kIG9yIGNvdWdoL3NuZWV6ZS9sYXVnaCBpIGNhbiBmZWVsIHRoZSBwYWluLiAKWW91IGNhbiBhbHNvIGdldCBmcmVlIG9ubGluZSBwb2tlciBtb25leSBieSBtYWtpbmcgdXNlIG9mIGEgbm8gZGVwb3NpdCBib251cy4gU29tZSB3ZWJzaXRlcyBvZmZlciBZb3UgYSBObyBEZXBvc2l0IFBva2VyIEJvbnVzLCBpZiBZb3Ugam9pbiBhIHBva2VyIHJvb20gdmlhIHRoZWlyIGFmZmlsaWF0ZSBsaW5rLiAKV2hhdCBpcyB5b3VyIGZhdm9yaXRlIHBva2VyIGhhbmQKSWYgeW91IGNvbXBhcmUgd2l0aCBpbnRlcm5ldCwgZG9lc24ndCBtYXR0ZXIgd2hlcmUgeW91ciBjYXNpbm8gaXMsIGV2ZXJ5b25lIGNhbiBoYXZlIGFuIGFjY2VzcyB0byBpdC4gCkkgaGFkIGEgc2VjdGlvbiBhbmQgYW0gaGF2aW5nIGEgc2Vjb25kIGluIGEgZmV3IHdlZWtzLiBXaGVuIHBlb3BsZSBhc2sgbWUgaWYgSSB3b3JyaWVkIGFib3V0IGhhdmluZyBhbm90aGVyIHNlY3Rpb24sIEkgdGVsbCB0aGVtIHRoZSBmaXJzdCB0d28gd2Vla3Mgb2YgYnJlYXN0ZmVlZGluZyB3ZXJlIGluZmluaXRlbHkgd29yc2UgdGhhbiBzZWN0aW9uIHJlY292ZXJ5LiBJdCB3YXMgZnVja2luZyBoZWxsLiBJIHJlbWVtYmVyIGZlZWRpbmcgbXkgZGF1Z2h0ZXIgYW5kIHB1dHRpbmcgaGVyIGRvd24gdG8gbmFwIGFuZCBteSBodXNiYW5kIGZvdW5kIG1lIGNyeWluZyBiZWNhdXNlIEkga25ldyBpbiBhYm91dCB0aHJlZSBob3VycyBJIHdhcyBnb2luZyB0byBoYXZlIHRvIGdvIHRocm91Z2ggaXQgYWdhaW4uIEhlIGltbWVkaWF0ZWx5IHdlbnQgb3V0IGFuZCBib3VnaHQgYSBwdW1wIGFuZCBuaXBwbGUgc2hpZWxkcy4gSXQgd2FzIHN0aWxsIGEgcGFpbmZ1bCBwcm9jZXNzIGJ1dCBJIGF0IGxlYXN0IGdvdCBzb21lIHJlbGllZi4KU29ycnkgZm9yIHRoZSBpbmNvbnZlbmllbmNlIHBsZWFzZSBtZXNzYWdlIHRoZSBtb2RzIGlmIHlvdSBoYXZlIGFueSBxdWVzdGlvbnMhCkluc3RlYWQgb2YgcmVzcG9uZGluZyB0byBteSBjb3VudGVyIHBvaW50cywgeW91IGFwcGFyZW50bHkgZ290IG9mZmVuZGVkIGFuZCBzdGFydGVkIHBlcnNvbmFsbHkgYXR0YWNraW5nIG1lLCB0aHVzIGNvbmNlZGluZyBhbnkgY2hhbmNlIG9mIGhhdmluZyB3aGF0IEkgd291bGQgY2FsbCBhbiBhcmd1bWVudC4gWW91IGRlY2xhcmVkIGxvc3Mgb2YgYW4gYXJndW1lbnQgYmVmb3JlIGl0IGV2ZW4gc3RhcnRlZCBiZWNhdXNlIHlvdSB3ZXJlbiBhYmxlIHRvIGtlZXAgeW91cnNlbGYgZnJvbSBnZXR0aW5nIG9mZmVuZGVkIGFuZCB1c2luZyBhZCBob21pbmVtIGF0dGFja3MuIE9idmlvdXNseSBJIHNhaWQgc29tZXRoaW5nIHRoYXQgdXBzZXQgeW91LiAKTk8uIFNUT1AgSVQuIApUaGUgZmFjdCBpcyB0aGF0IGV4ZWN1dGl2ZSBwYXJkb25zIGFyZSBwYXJ0IG9mIHRoZSBsYXcuIFRoZXJlIGFyZSBlbmRsZXNzIGV4YW1wbGVzIG9mIHdoeSBJIG1heSBhZ3JlZSB3aXRoIHlvdXIgc3RhdGVtZW50ICJTbyBtdWNoIGZvciBoYXZlIHRvIHJlc3BlY3QuICIgSSB3b3VsZCBqdXN0IGhvcGUgeW91IGNob29zZSBhbnkgb2YgdGhlIGxvZ2ljYWwgb25lcyB0byBtYWtlIHlvdXIgcG9pbnQuCldoZW4gVHdvIFBhaXIgZ29lcyBhZ2FpbnN0IGFub3RoZXIgaGFuZCB3aXRoIFR3byBQYWlyLCB0aGUgYmF0dGxlIGlzIHdvbiBieSB0aGUgaGFuZCB3aXRoIHRoZSBoaWdoZXN0IFBhaXIuIApUaGUgb25seSB3YXkgdG8gInJlbW92ZSIgRFIgaXMgdG8gZ28gc29tZXdoZXJlIGVsc2UgZm9yIGEgbGVuZ3RoIG9mIHRpbWUgdGhhdCBpcyBwYXJ0bHkgcmFuZG9tIGFuZCBwYXJ0bHkgZGVwZW5kZW50IG9uIGhvdyBtdWNoIERSIHRoYXQgY2hhcmFjdGVyIGhhcy4gVXN1YWxseSwgaXQgbGFzdHMgbm8gbW9yZSB0aGFuIDE1IDIwIG1pbnV0ZXMgaWYgdGhlIGNoYXJhY3RlciBhY3RpdmVseSBwYXJ0aWNpcGF0ZXMgaW4gb3RoZXIgY29udGVudC4KTmVlZGxpbmcgaXQgb2Z0ZW4gcmVsaWV2ZXMgc3RvbWFjaCBwYWluIGltbWVkaWF0ZWx5LiAKVGhlcmUgYXJlIHNvbWUgZ3JvdXBzIHdobyBzY29yZSBtb3JlIG9yIGxlc3MgaW4gVHVya2V5LiAKSSdtIGEgbW9tIG9mIHR3byBpbiBhIHN0YWJsZSwgbWFycmllZCByZWxhdGlvbnNoaXAuIExlYXZlLiBTYXZlIHlvdXJzZWxmLiAKTGlzdGluZyB0YWtlcyBpbnRvIGFjY291bnQgaGlzdG9yaWNhbCBhbmQgYXJjaGl0ZWN0dXJhbCBpbnRlcmVzdC4gVGh1cyBidWlsZGluZ3MgdGhhdCBhcmUgaHVuZHJlZHMgb2YgeWVhcnMgb2xkIGFyZSBsaWtlbHkgdG8gYmUgcmFyZSBleGFtcGxlcyBvZiB0aGVpciB0eXBlIGFuZCBoZW5jZSBhcmUgdmVyeSBsaWtlbHkgdG8gYmUgTGlzdGVkLCB3aGVyZWFzIHRoZXJlIGFyZSBtYW55IG1vcmUgYnVpbGRpbmdzIHRoYXQgd2VyZSBjb25zdHJ1Y3RlZCBhZnRlciAxOTQ1LCBzbyBvbmx5IHRoZSBtb3N0IGltcG9ydGFudCBhbmQgZGlzdGluY3RpdmUgb2YgdGhlc2UgY2FuIGJlIGNvbnNpZGVyZWQgZm9yIFRoZSBMaXN0Li4gCkkgaGF0ZSB0byB0aGluayBhbnlvbmUgdGhvdWdodCBvZiB0aGVzZSBpbWFnZXMgYXMgcmVhbCBwZW9wbGUgYW55IG1vcmUgdGhhbiB3ZSB0aGluayBCYXJiaWUgcmVwcmVzZW50cyBhIHJlYWxpc3RpYyB2ZXJzaW9uIG9mIGEgZmVtYWxlIGJvZHkuIFBlcmhhcHMgd2UgY291bGQgZXZlbiB0YWtlIGEgbGVzc29uIGZyb20gQ2hyaXN0aWFuIE9ydGhvZG94eSBmb3Igb3VyIHBvc3Rtb2Rlcm4sIHNlY3VsYXIgY3VsdHVyZXMgYW5kIGFwcGx5IGljb25vZ3JhcGh5IHRvIGNvbnRlbXBvcmFyeSBtZWRpYS4gCkl0IGEgcmVhbGx5IGhhcmQgc2l0dWF0aW9uIGZvciBtZSwgSSBrbm93IGhvdyBsb25lbHkgbXkgcGFydG5lciBpcyBub3QgYmVpbmcgaW4gdGhlIFVLIHdpdGggaGlzIGZyaWVuZHMgYW5kIGZhbWlseS4uIApUaGUgZnV0dXJlIG9mIE5ldyBZb3JrIGlzIG9uZSB0YWxsIHRhbGUuCldlIGFsc28gdGFrZSBhZHZhbnRhZ2Ugb2YgYW1wbGlmaWNhdGlvbiBvZiBzaWduYWwuIFNlZWluZyBvbmUgbW9sZWN1bGUgaXMgcG9zc2libGUgYnV0IHJlcXVpcmVzIHNvcGhpc3RpY2F0ZWQgZXF1aXBtZW50IGFuZCB0cmFpbmluZy4gCkknbSBpbiBhIGxvdCBvZiBwYWluIHRoaXMgcGFzdCB5ZWFyLiBBbGwgSSB0aGluayBhYm91dCBhcmUgbXkgY2hpbGRyZW4uIEkgZmVlbCBteSByZWFjdGlvbiB3YXMgbmF0dXJhbC4gCkkgdGhpbmsgNSAyMG1nIGlzIGEgZ29vZCBmaXJzdCB0aW1lIGRvc2UuIElmIEkgY2FsY3VsYXRlZCBjb3JyZWN0bHksIHRoZSBlZGlibGVzIEkgbWFrZSBhcmUgYmV0d2VlbiAzMCA0MG1nIGVhY2ggYW5kIGluaXRpYWxseSBJIHdvdWxkIGhhdmUgaGFsZi4gQSBmdWxsIGJyb3duaWUvY29va2llIHdpbGwgZ2V0IG1lIHByZXR0eSBtdWNoIHdoZXJlIEkgZ29vZCB0aGVzZSBkYXlzLCBidXQgaW4gdGhlIGJlZ2lubmluZywgYSBmdWxsIG9uZSB3YXMgdG9vIG11Y2guLiAKTGFkeSBHYUdhKSAuIDk3IDk5KSAiIEJvcm4gVGhpcyBXYXkgKERlbHV4ZSBBbGJ1bSBCb251cyBTb25ncykiIEJsYWNrIEplc3VzICsgQW1lbiBGYXNoaW9uLCBGYXNoaW9uIG9mIEhpcyBMb3ZlLCBUaGUgUXVlZW4uIApJIGFsc28gaGFkL2hhZCBhIHNlbnNpdGl2ZSBzY2FscC4gCkkgZGlkbid0IHNwZWNpYWxpemUgaW4gYW55dGhpbmcuIApSSUNITU9ORCwgVkEgKFdXQlQpICAgV2UncmUgbGVhcm5pbmcgbW9yZSBhYm91dCB0aGUgY2F1c2Ugb2YgdGhlIGV4cGxvc2lvbnMgdGhhdCBlcnVwdGVkIGluIGRvd250b3duIFJpY2htb25kIFdlZG5lc2RheSBuaWdodCwgY2F1c2luZyBwYW5pYyBhbmQgZW1lcmdlbmN5IHJlcGFpcnMuIENyZXdzIHRvb2sgbXVjaCBvZiB0aGUgZGF5IG1ha2luZyB0aG9zZSBmaXhlcy4gQWxtb3N0IDI0IGhvdXJzIGxhdGVyLCBwZW9wbGUgd2VyZSBzdGlsbCB0YWxraW5nIGFib3V0IHRoZSBleHBsb3Npb25zIHRoYXQgcm9ja2VkIHRoZSBhcmVhLgpUaGFuayB5b3UgZm9yIHN0YXlpbmcgd2l0aCB1cyBhbmQgd2UgbG9vayBmb3J3YXJkIHRvIHdlbGNvbWUgeW91IGJhY2sgd2l0aCB1cyBvbiB5b3VyIG5leHQgdHJpcC4gCkZvciBDYW5hZGEsIHRoZSBCYW5rIHdhcyBwcm9qZWN0aW5nIGEgdGVtcG9yYXJ5IHNsb3dkb3duIGluIGxhdGUgMjAxOCBhbmQgZWFybHkgMjAxOSwgbWFpbmx5IGJlY2F1c2Ugb2YgbGFzdCB5ZWFyIGRyb3AgaW4gb2lsIHByaWNlcy4gVGhlIEJhbmsgaGFkIGZvcmVjYXN0IHdlYWsgZXhwb3J0cyBhbmQgaW52ZXN0bWVudCBpbiB0aGUgZW5lcmd5IHNlY3RvciBhbmQgYSBkZWNsaW5lIGluIGhvdXNlaG9sZCBzcGVuZGluZyBpbiBvaWwgcHJvZHVjaW5nIHByb3ZpbmNlcy4gClJlbWVtYmVyIHRoYXQgeW91J3JlIGZlZWRpbmcgeW91ciBiYWJ5IGF0IHRoZSBzYW1lIGFyZWEgd2hlcmUgeW91IGFwcGx5IHRoZSBsYW5vbGluIHNvIGJlIHN1cmUgdGhhdCBpdCdzIHNhZmUgZm9yIGhpbSBhcyB3ZWxsLiBBZnRlciBicmVhc3RmZWVkaW5nLCB3YXNoIHlvdXIgbmlwcGxlcyBhbmQgd2lwZSBkcnkuIEFwcGx5IGFub3RoZXIgdGhpbiBsYXllciBvZiBsYW5vbGluIHRvIHlvdXIgbmlwcGxlLiAKU29tZSBzdHVkaWVzIGhhdmUgc2hvd24gbGVzcyBwb3NpdGl2ZSByZXN1bHRzLCBob3dldmVyLiBUaGUgV29tZW4gSGVhbHRoIEluaXRpYXRpdmUgZm91bmQgdGhhdCB3b21lbiB0YWtpbmcgNDAwIElVIG9mIHZpdGFtaW4gRDMgKHBsdXMgY2FsY2l1bSkgdmVyc3VzIHBsYWNlYm8gZGlkIG5vdCBoYXZlIGEgbG93ZXIgcmlzayBvZiBicmVhc3QgY2FuY2VyLlsxMl0gTWFueSBjcml0aWNzIGhhdmUgYXJndWVkIHRoYXQgdGhpcyBkb3NhZ2Ugb2Ygdml0YW1pbiBEIGlzIHRvbyBsb3cgdG8gcHJldmVudCBjYW5jZXIuIHN0dWR5IG9mIG1lbiBhbmQgd29tZW4gKG1vc3RseSBub25zbW9rZXJzKSBkaWQgbm90IGNvbmZpcm0gdGhlc2UgcmVzdWx0cywgZmluZGluZyBubyBhc3NvY2lhdGlvbiBiZXR3ZWVuIHZpdGFtaW4gRCBjb25jZW50cmF0aW9ucyBhbmQgcGFuY3JlYXRpYyBjYW5jZXIgb3ZlcmFsbCwgZXhjZXB0IGluIHN1YmplY3RzIHdpdGggbG93IHN1biBleHBvc3VyZS5bMTRdIEluIHRoaXMgc3ViZ3JvdXAsIGhpZ2hlciB2ZXJzdXMgbG93ZXIgdml0YW1pbiBEIGNvbmNlbnRyYXRpb25zIGhhZCBhIHBvc2l0aXZlIGFzc29jaWF0aW9uIHdpdGggcGFuY3JlYXRpYyBjYW5jZXIuWzE0XSBBIGRlZmluaXRpdmUgY29uY2x1c2lvbiBjYW5ub3QgeWV0IGJlIG1hZGUgYWJvdXQgdGhlIGFzc29jaWF0aW9uIGJldHdlZW4gdml0YW1pbiBEIGNvbmNlbnRyYXRpb24gYW5kIGNhbmNlciByaXNrLCBidXQgcmVzdWx0cyBmcm9tIG1hbnkgc3R1ZGllcyBhcmUgcHJvbWlzaW5nLgpBZGRpY3Rpb24gaXMgY29tcGxleCBidXQgaXQgaW52b2x2ZXMgcmV3YXJkaW5nIGJlaGF2aW91ciwgZm9yIHNvbWUgaXQgaGF2aW5nIGEgc21va2UsIGdhbWJsaW5nLCBmYXJtaW5nIGluIGdhbWVzLiAKVGhpcyBvZiBjb3Vyc2UgZW5zdXJlZCB0aGF0IGFsbCBOaWNhcmFndWFucyBiYWNrZWQgdGhlIG1pbGl0YW50IGdyb3VwIG9mIHN0dWRlbnRzIGNhbGxlZCAiU2FuZGFuaXN0YXMiLiBUaGV5IG9mIGNvdXJzZSBpbmhlcml0ZWQgYSBjbHVzdGVyICAgYSBjb3VudHJ5IHdoZXJlIGhvbWVsZXNzbmVzcyBhbmQgcG92ZXJ0eSBhbmQgaWxsaXRlcmFjeSB3ZXJlIHByZXZhbGVudC4gU28gdGhlIG5ldCByZXN1bHQgb2YgdGhpcyB0dXJtb2lsIGlzIHRoYXQgQW1lcmljYW5zIGFyZSBmZWFyZnVsIG9mIHRyYXZlbGluZyB0byBOaWNhcmFndWEsIGFuZCBOaWNhcmFndWEgZG9lc24ndCBoYXZlIGVub3VnaCB0b3VyaXNtIHRvIGp1c3RpZnkgYnVpbGRpbmcgdGhlIHR5cGUgb2YgaW5mcmFzdHJ1Y3R1cmUgdGhhdCBBbWVyaWNhbnMgd291bGQgZGVtYW5kL2Vuam95LiAKVGhlIGd1eSB3aG8gcmFuIHRoZSBnYW1lIGNsYWltZWQgaGUgb25seSB0b29rIGVub3VnaCByYWtlIHNvIGhlIGNvdWxkIHBsYXkgZm9yIGZyZWUgKHNvICQzMCwgYnV0IHdobyBrbm93cyBpZiB0aGF0IGhvdyBoZSBhY3R1YWxseSBkaWQgaXQgIG1heWJlIG9uZSBvZiB5b3Ugc2hhcnBlciByL3Bva2VyIGd1eXMgY2FuIGRvIHRoZSBtYXRoIHJlYWwgcXVpY2sgIDgwIHBsYXllcnMsICQzMCBidXkgaW4sIGZpcnN0IHdhcyBhbHdheXMgJDkwMCwgc2Vjb25kICQ0MDBpc2gsIHRoaXJkIGkgdGhpbmsgJDMwMGlzaCwgZm91cnRoICQxMDBpc2ggYW5kIGZpZnRoIGdvdCB0aGVpciBtb25leSBiYWNrKSBhbmQgd2FzIG5hbWVkICJzdGV2ZSIgYnV0IGV2ZXJ5b25lIGhhZCB0byBjYWxsIGhpbSAiYWxvbnpvLCIgYXMgaWYgdGhhdCB3b3VsZCByZWFsbHkgbWFrZSBhIGRpZmZlcmVuY2UsIHNhZmV0eSB3aXNlICh0aGF0IGFuZCBoYWxmIG9mIGhpcyBmcmllbmRzIHdvdWxkIGZ1Y2sgdXAgYW5kIGNhbGwgaGltIHN0ZXZlIG9uIGFjY2lkZW50IGFueXdheXMpLiBTb21ldGltZXMgdGhlIGNhc2ggZ2FtZXMgd291bGQgZ28gdG8gYmFyIHRpbWUgYW5kIGhhdmUgdG8gbW92ZSB0byB0aGUgYmFyIG5leHQgZG9vci4gCk92ZXJhbGwsIHRvdXJuYW1lbnQgcGxheWVycyBhcmUgZXh0cmVtZWx5IHVuYmFsYW5jZWQgYW5kIHRoZXJlIGFyZSBhIGxvdCBvZiBleHBsb2l0cyB5b3UgY2FuIHRha2UgYWR2YW50YWdlIG9mLiBZb3Ugd2VudCB3aXRoIHlvdSByZWFkIGFuZCByZWFsaXplZCB2aWxsYWluIHJhbmdlIHdhcyBwb2xhcml6ZWQgZW5vdWdoIGFuZCB5b3UgaGFwcGVuZWQgdG8gaGF2ZSB0aGUgcGVyZmVjdCBibG9ja2Vycy4gClRocmVlIG1vbnRocyBsYXRlciB3ZSBjYW1lIGJhY2sgdG8gVmVnYXMgYW5kIGdvdCBtYXJyaWVkLiBGb3IgYSB3ZWRkaW5nIHByZXNlbnQsIEkgYm91Z2h0IGhlciAxMDAwIDExLjVnIFBva2VyIENoaXBzLiAKVGhlIHBvaW50IGlzIHlvdSBuZXZlciBrbm93LiBJIHdvcmsgd2l0aCBhIHZlcnkgYXR0cmFjdGl2ZSBzaW5nbGUgd29tYW4uIE90aGVyIGd1eXMgaW4gdGhlIG9mZmljZSBoYXZlIHdoaXNwZXJlZCBob3cgbXVjaCB0aGV5IHdvdWxkIGxvdmUgdG8gY29ubmVjdCAoaGEhKSB3aXRoIGhlci4gVGhleSBkb24ndCBrbm93IGhlciBsaWtlIEkgZG8uIFNoZSdzIGEgd29ya2Fob2xpYyB3aXRoIG1hc3NpdmUgcGVyc29uYWwgaW5zZWN1cml0aWVzLiBTaGUgZmVlbHMgc2hlIGlzbid0IHdvcnRoeSBvZiBhIG1hbiB0aGF0IHRyZWF0cyBoZXIgd2VsbCBhbmQgcmVzcGVjdHMgaGVyLiBTaGUncyBzbWFydCBlbm91Z2ggdG8gYXZvaWQgZGF0aW5nIGFidXNpdmUgYXNzaG9sZXMsIGJ1dCB0b28gaW5zZWN1cmUgdG8gbG9jayBpbiBhIGxvbmcgdGVybSByZWxhdGlvbnNoaXAgd2l0aCBhIGdvb2QgZ3V5LiBUaGF0IGlzIHdoeSBzaGUgaXMgcGVycGV0dWFsbHkgc2luZ2xlLgpIb3JzZXNob2UgQ2FzaW5vIGlzIHJ1biBsb2NhbGx5IGJ5IFJvY2sgR2FtaW5nLCBMTEMgYW5kIG93bmVkIGNvcnBvcmF0ZWx5IGJ5IENhZXNhcnMgRW50ZXJ0YWlubWVudC4gSGFya2VucmlkZXIgc2FpZCBoZSdzIG5vdCBzdXJlIHdobyBpcyB0byBibGFtZSBmb3Igbm90IGNvbXBseWluZyB3aXRoIHRoZSBzdGF0ZSdzIGNhc2lubyBsYXdzIHRoYXQgbGVkIHRvIHRoZSBjYW5jZWxsYXRpb24sIGJ1dCBzYWlkIGJvdGggb3duZXJzaGlwIGdyb3VwcyBrbmV3IHdoYXQgdGhleSBkaWQgd2l0aCB0aGUgc3VydmVpbGxhbmNlIGNhbWVyYXMgaW4gMjAxMyB3YXNuJ3QgZ29pbmcgdG8gd29yayBpbiAyMDE1LgpMb2NhdGlvbnMgdGhhdCBvZmZlciBsZWdhbGl6ZWQgZ2FtYmxpbmcgdGhlc2UgZGF5cy4gQW5kIHRoZWlyIGFjY29tbW9kYXRpb25zIGRvbid0IGNvc3QgdGhlbSBhIGRpbWUuClBycHNseWRpc3RyYWN0ZWQgIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGhvdXJzIGFnbwpJIHdvcmsgd29yayBpbiBjaXR5L2NvbW11bml0eSBkZXNpZ24uIFRoZSBob3VycyBhcmUgbG9uZyBhbmQgaXQncyBoaWdoIHN0cmVzcyBidXQuIApKYXggTHRkLiBJbmNdLi4gClRoZSBNb3N0IFNhdGlzZnlpbmcgTWVkaW9jcmUgQ291bnRyeQpXZSBtZWFuIG9ubHkgdG9waWNzIGFza2luZyBmb3IgYW4gYW5zd2VyIHRoYXQgd2lsbCBhaWQgc29tZW9uZSBpbiBjb21taXR0aW5nIHN1aWNpZGUgb3IgaGFybWluZyBvdGhlcnMuIFRoZXNlIHF1ZXN0aW9ucyBhcmUgbm90IGFsbG93ZWQuIApZb3UgaGF2ZSBzb21ldGhpbmcgdG8gdGVsbCBtZSwgeW91IGNhbiBzYXkgaXQgaGVyZSBpbiBmcm9udCBvZiBldmVyeW9uZS4gCkJ1dCB1bmxpa2UgdGhvc2UgZGF5cyB3aGVuIGhlIHdhcyAxMyBhbmQgdGhlIGdvYWwgd2FzIHRvIGZpbmlzaCBhcyBxdWlja2x5IGFzIHBvc3NpYmxlIGJlZm9yZSBoaXMgc2lzdGVyIG5lZWRlZCB0aGUgYmF0aHJvb20sIGhlIHNob3VsZCBnbyBzbG93bHkgYW5kIHRyeSB0byByZWFjaCBhIHBlYWsgc28gaGUgZmVlbHMgdGhlIGJlZ2lubmluZ3Mgb2YgdGhlIHRyZW1ibGVzLiBUaGVuIGhlIHNob3VsZCBzdG9wIGltbWVkaWF0ZWx5LCB0aGluayBhYm91dCB0aGUgSmFzb24gR2lhbWJpIHN0ZXJvaWQgc2NhbmRhbCwgYW5kIGNsZW5jaCBoaXMgUEMgbXVzY2xlIGFzIGhhcmQgYXMgaGUgY2FuLiAKSGVyYm9sb2d5LiBIZXJicyBhbmQgZmxvd2VycyB3ZXJlIHByb2JhYmx5IGFtb25nIHRoZSBmaXJzdCB3YXlzIGh1bWFuIGJlaW5ncyB0cmVhdGVkIHNpY2tuZXNzLiBXZSBhbHNvIGtub3cgdGhhdCBhbmltYWxzIHdpbGwgZWF0IHBsYW50cyBpbiByZXNwb25zZSB0byBjZXJ0YWluIGlsbG5lc3Nlcy4gCkxlIGpvdWV1ciBlbiBsaWduZSAgICJwbHV0dCBtYXNjdWxpbiIsIGcgZW4gbW95ZW5uZSBkZSAzOCBhbnMgZXQgZGlwbG0gICBkcGVuc2UgZW4gbW95ZW5uZSAxLjUwMCBldXJvcyBwYXIgYW4uIE1haXMgInVuIGpvdWV1ciBzdXIgZGl4IGRwZW5zZSBwbHVzIGRlIDMuMTAwIGV1cm9zIiwgdW4gYm9uZCBwYXIgcmFwcG9ydCBhdXggMS4yMDAgZXVyb3MgY29uc3RhdHMgZW4gMjAxMiBkYW5zIGxhIGRlcm5pcmUgdHVkZSBjb21wYXJhYmxlLgpUaGUgb3RoZXIgc2lkZSBhcyBpbiAiZ3JlZWQgaXMgZ29vZCwgbGV0IG5vdCByZWd1bGF0ZSBpbmR1c3RyeSIgYnV0IHRoZSBvdGhlciBzaWRlIGFzIGluICJ0aGVyZSBhIGJpZyBzbm93IHN0b3JtIHNvIEkgZ3Vlc3MgdGhlcmUgbm8gc3VjaCB0aGluZyBhcyBnbG9iYWwgd2FybWluZy4iLiAKIkhlIHdhcyBpbnN0cnVtZW50YWwgZm9yIG1lLiAKQ0FWIGhhZCBtYWRlIHNldmVyYWwgcmVxdWVzdHMgZm9yIGluZm9ybWF0aW9uIGJ1dCB3aGF0IGhhZCBiZWVuIHJlY2VpdmVkIHdhcyAibm90IHN1ZmZpY2llbnQiLCBpdCBzYWlkLiBPbiBDaHJpc3RtYXMgRXZlLCB0aGUgcmVndWxhdG9yIG1vdmVkLiBJdCB0b29rIHRoZSBleHRyYW9yZGluYXJ5IHN0ZXAgb2Ygb3JkZXJpbmcgYW4gaW5kZXBlbmRlbnQgYXVkaXQgb2YgdGhlIGZvdW5kYXRpb24gdG8gZGV0ZXJtaW5lIHdoZXRoZXIgbW9uZXkgaGFkIGJlZW4gInByb3Blcmx5IGFjY291bnRlZCBmb3IgYW5kIGFwcGxpZWQiIGluIGNvbXBsaWFuY2Ugd2l0aCBzdGF0ZSBmdW5kcmFpc2luZyBsYXdzLiAKQWNjb3JkaW5nIHRvIHRoZSBzYW1lIHJlcG9ydCBoZSBsYXRlciBzYWlkIGhlIHdvdWxkICJjb250aW51ZSB0byBkZWZlbmQiIHNhaWQgdHJpYmFsIHRyYWRpdGlvbnMgYW5kICJPbmx5IHRob3NlIHdobyBpbmR1bGdlIGluIGltbW9yYWwgYWN0cyBzaG91bGQgYmUgYWZyYWlkIi4gCkNvaW50cnggdQpUaGVyZSBhcmUgc2V2ZXJhbCB3ZWJzaXRlcyB0aGF0IHNlbGwgdGhpcyB0eXBlIG9mLCB1bW0sIHN0dWZmLiAKSSBhZ3JlZSB0aGF0IGl0IGEgdGVhY2hlciBqb2IgdG8gdHJ5LCBhbmQgdG8gbmV2ZXIgZ2l2ZSB1cCBvbiBhIHN0dWRlbnQsIG5vIG1hdHRlciBob3cgZGlmZmljdWx0IHRoZXkgYXJlLCBidXQgdGhhdCBkb2VzbiBtZWFuIGRpdmVydGluZyB5b3VyIGF0dGVudGlvbiBjb25zdGFudGx5IGFuZCBwZW5hbGl6aW5nIHRoZSBzdHVkZW50cyB3aG8gYWN0dWFsbHkgYXJlIHRyeWluZyBieSBzcGVuZGluZyBhbGwgb2YgeW91ciB0aW1lIHRyeWluZyB0byBnZXQgdGhyb3VnaCB0byB0aG9zZSBzdHVkZW50cyB3aG8gYXJlbiB3aWxsaW5nIHRvIGV2ZW4gdHJ5LiAKSXQgc291bmRzIGNsaWNoZSwgYnV0IHNpbmNlIEkgZm91bmQgRklSRSwgSSBiZWVuIHJlYWxseSBtb3RpdmF0ZWQgdG8gc3BlbmQgbGVzcyBiZWNhdXNlIGJ5IG5vdCBidXlpbmcgYSBzbWFsbCBpbmR1bGdlbmNlIG5vdywgSSBnZXQgbW9yZSBwZWFjZSBvZiBtaW5kIGFuIEkgZ2V0IHRvIGdldCBvdXQgb2YgdGhlIHJhdCByYWNlIHNvb25lci4gClRoZSBmYWN0IGlzLCBtYW55IGNydWlzZSBzaGlwcyBoYXZlIG11bHRpcGxlIGRhbmNpbmcgYW1lbml0aWVzLiBZb3UgbWlnaHQgYmUgY2FwYWJsZSB0byBnZXQgZGFuY2UgbGVzc29ucyB3aXRoIGEgZWR1Y2F0ZWQgcHJvZmVzc2lvbmFsIG9yIHNoZWxsIG91dCB0aGUgZXZlbmluZyBkYW5jaW5nIGFic2VudCB3aXRoIHlvdXIgZmFtaWx5IGFuZCBmcmllbmRzLiAKV2hlbiBpdCBjb21lcyB0aW1lIHRvIGxlYXZlLCByZW1lbWJlciB0aGF0IHRoZSBkZWFsZXIgZG9lcyBub3QgaGF2ZSBhY2Nlc3MgdG8gY2FzaCBhdCB0aGUgdGFibGVzLiAKVGhlcmUgaGF2ZSBiZWVuIG5pbmUgbXVyZGVycyBpbiB0aGUgY2l0eSB0aGlzIHllYXIsIGFsbW9zdCBkb3VibGUgdGhlIG51bWJlciBpbiBhbnkgeWVhciBpbiB0aGUgbGFzdCBkZWNhZGUuIEJ1dCBtb3N0IGRpc3R1cmJpbmcgaXMgdGhlIGFnZSBvZiB0aGUgdmljdGltcyBhbmQgYWNjdXNlZC4KVGhleSBsb29rIGF0IGhpbSBhcyBhIGJldGEgcHJvdmlkZXIuIApJdCB3YXMgYmFzZWQgb24gbWUgbWlzcmVhZGluZy4gClRoZSBjb3VydCBoZWFyZCBNciBIYXNzYW4gd2FzICJmbGF0dGVyZWQiIGJ5IHRoZSBhdHRlbnRpb24gYW5kIGhhZCBqb2tlZCB3aXRoIGZyaWVuZHMgdGhhdCBzaGUgd2FzIHdpdGggaGltIHdpdGhvdXQgaGltIGV2ZW4gaGF2aW5nIHRvIHBheSBoZXIuCk15bGVzIHRvb2sgYWR2YW50YWdlIG9mIGhpcyBvd24gd291bmQgdG8gd2VhdmUgYSB0YWxlICAgbGF0ZXIgcHJvdmVuIGZhbHNlICAgdGhhdCBhIHRoaXJkIHBlcnNvbiBhdCBoaXMgUXVlZW5zIGhvbWUgd2FzIHJlc3BvbnNpYmxlIGZvciB0aGUgc2hvb3RpbmcsIGFjY29yZGluZyB0byBwb2xpY2UuIApBIHdlaWdodGVkIGF2ZXJhZ2UgaXMgbGlrZSBhbiBhdmVyYWdlIHdpdGggYW4gZXh0cmEgc3RlcC4gVGFrZSBhIDEwIHBlcnNvbiBzYW1wbGUgd2l0aCB0d28gc3ViZ3JvdXBzLiAKUXVpdGUgYSBmZXcgb2YgdGhlbSBkbyBmaXQgaW4gc29tZWhvdyB3aXRoIG15IGNoYWxsZW5nZXMsIGJ1dCBJIGJlZW4gdGFraW5nIGFkdmFudGFnZSBvZiBhIHdlZWsgb2ZmIHRvIGdvIHRocm91Z2ggc29tZSBvZiBvdXIgbmV3IGZpbmRzLCBvZnRlbiBqdXN0IGZvciBmdW5zaWVzLi4gCkNhbGwgYW5kIGtlZXAgaGlzIHdvcnNlIGhhbmRzIGluLiBXaGVuIHlvdSBjYWxsIHRoZSBwb3Qgd2lsbCBiZSAxNiBhbmQgVjIgb25seSBoYXMgMTIuNSBsZWZ0LiBUaGUgbW9uZXkgaXMgc3RpbGwgZ29pbmcgaW4gdGhlIG1pZGRsZSBvbiB0aGUgdHVybiBzbyB3aHkgbm90IGtlZXAgaGlzIHdvcnNlIGNoZWNrIHJhaXNlcyBpbiB0aGVyZS4gQWxzbywgaWYgaGUgY2hlY2tzIHRoZSB0dXJuIHlvdSBjYW4gZnJlZWx5IGphbSB0aGUgcmVzdCBpbiB3aXRoIHZlcnkgbG93IFNQUi4gSG9wZSB0aGlzIGhlbHBlZCEKU28gSSBzZW50IGhlciBwaG90b3MgYW5kIHZpZGVvcyBvZiBtZSBiYWxscyBkZWVwIGluIGhlciBtYW4sIHdpdGggbXkgZGljayBpbiBoaXMgbW91dGgsIGV2ZXJ5dGhpbmcuIEkgZ290IGEgdmVyeSB1cHNldCBhbmQgYW5ncnkgcGhvbmUgY2FsbCBmcm9tIGhpbSBhYm91dCBhbiBob3VyIGxhdGVyIHNheWluZyB0aGF0IHNoZSB0b29rIHRoZSBwaG90b3MgYW5kIHZpZGVvcyB0byBoaXMgdmVyeSBjb25zZXJ2YXRpdmUgQ2hyaXN0aWFuIHBhcmVudHMgYW5kIHRoYXQgc2hlIHdhcyB0aHJlYXRlbmluZyB0byB0YWtlIHRoZSBraWRzIGFuZCBsZWF2ZS4KQ291bGQgYSBtdXNjbGUgY3JhbXAgY29zdCB5b3UgYSBtaWxsaW9uIGRvbGxhcnM/IElmIHlvdSBhc2sgc3ByaW50ZXIgTWljaGFlbCBKb2huc29uLCB0aGUgYW5zd2VyIGlzIHllcy4KSSBkb24gc2VlIG1hbnkgc3Bld2V5IGJsdWZmcyBoZXJlIHRiaCB0aGF0IHJhaXNlIG9uIHRoZSByaXZlciBpcyB3ZWlnaHRlZCBtb3JlIHRvd2FyZCBwdXJlIHZhbHVlIGltby4gCkluIEdlcm1hbnkgd2UgaGF2ZSBhbm9ueW1vdXMgZXZpZGVuY2UgY29sbGVjdGlvbiBwbGFjZXMgdGhhdCB3aWxsIGNvbGxlY3QgYW5kIHNlY3VyZSB0aGUgZXZpZGVuY2UgZXZlbiBpZiB5b3UgZG9uIHdhbnQgdG8gZ28gdG8gdGhlIHBvbGljZSBkaXJlY3RseSwgbW9zdGx5IGJlY2F1c2UgaXQgaXMgYSBjbG9zZSBmYW1pbHkgbWVtYmVyIG9yIHNvbWVvbmUgaW4gYSBwb3NpdGlvbiBvZiBwb3dlciBvdmVyIHRoZSB2aWN0aW0uLiAKVGhlIGRvd25zaWRlIGlzLCB5b3UgY2FuJ3QgdG91Y2ggb3IgZXZlbiBjbGluayBjaGlwcyB0b2dldGhlci4KQnkgY2FyZWZ1bGx5IGNob29zaW5nIHRoZWlyIHN0cmVuZ3RocyBhbnkgd2Vha25lc3NlcyBjYW4gYmUgY291bnRlcmJhbGFuY2UuIElmIHlvdSBoYXZlIGEgYml0Y2ggdHJpZXMgdG8gZmluZCBhIGFwcHJvcHJpYXRlIHN0dWQgZm9yIGhlciwgYW5kIHZpY2UgdmVyc2EgaWYgeW91IGhhdmUgYSBzdHVkLiAKMyBzZWNvbmRzIGlzbid0IHZlcnkgbG9uZyBhdCBhbGwuIFRoZSB1bHQgaXMgdGVsZXZpc2VkLCBzbyBpZiB5b3UncmUgYW4gSG91cmdsYXNzIHRyeWluZyB0byBiZSBhIGh1bWFuIGJvbWIgYW5kIHRoZW4geW91IGRvbid0IGFic29yYiBhbnkgZGFtYWdlPyBZb3UncmUgbm93IGp1c3QgYSBzaXR0aW5nIGR1Y2sgZm9yIHRoZSBlbmVteSB0ZWFtIHdoZW4gaXQgd2VhcnMgb2ZmLiAKR2V0IG9mZiB5b3VyIGhpZ2ggaG9yc2UgYW5kIHN0b3AgYmVpbmcgc2VsZmlzaC4gCkF1ZGllbmNlcyBleHBlY3RpbmcgbXVjaCBoZWF0IGJldHdlZW4gQmFuYSBhbmQgQmFycnltb3JlIGJvdGggYmVhdXRpZnVsIChqdXN0IGFzayBQZW9wbGUgbWFnYXppbmUhKSBsaWtlbHkgZmVlbCBjYXJkIHNoYXJrZWQuIApXZXJlIHZlcnkgaGFwcHkgdG8gZm9ybWFsbHkgcmVuYW1lIHRoZSBjb21wYW55IGFzIFRoZSBTdGFycyBHcm91cCBsYXN0IHdlZWssIEFzaGtlbmF6aSB0b2xkIGFuYWx5c3RzIG9uIGEgY29uZmVyZW5jZSBjYWxsIFdlZG5lc2RheS4gSXQgZGVtb25zdHJhdGVzIHRoYXQgd2UgdHVybmVkIHRoZSBwYWdlIHRvIG9wZW4gYSBuZXcgY2hhcHRlciBpbiBvdXIgY29tcGFueSBoaXN0b3J5LgpBbmQgbXVzY2xlIGRvZXMgbWF0dGVyIGluIHNvbWUgb3RoZXIgY29udGV4dHM7IHRoZSBPbHltcGljcyBoYXMgYmVlbiBjcml0aWNpemVkIGZvciBoYXZpbmcgYSBiaWFzIHRvd2FyZHMgbWFpbnN0cmVhbSBhZXN0aGV0aWNzIGluIGl0cyBhdGhsZXRlcyB0aGF0IG1ha2VzIGl0IGhhcmQgZm9yIHdvbWVuIHRvIHJlYWNoIHRoZWlyIHBvdGVudGlhbCB0byBwdXQgb24gbXVzY2xlLiAKQXUgY3VyIG1tZSBkIHBsYW50ZSwgbGVzIHNlc3F1aXRlcnBuZXMgam91ZW50IGxlIHJsZSBkIGRlIGRmZW5zZS4gQ2VsYSBuIHBhcyB0b3V0ICBmYWl0IHVuIGhhc2FyZCBzaSBsZXMgaHVpbGVzIGVzc2VudGllbGxlcyBxdWkgZW4gY29udGllbm5lbnQgcHJzZW50ZW50IHBldSBvdSBwcm91IGRlcyBwcm9wcml0cyBhbnRpIGluZmVjdGlldXNlcyAoYmllbiBxdWUgY2UgbmUgc29pdCBwYXMgbCBsZXVyIGRvbWFpbmUgZGUgcHJkaWxlY3Rpb24pLi4gClRoZXkgYXJlIHRoZSBiZXN0IG91dCB0aGVyZSBidXQgYm90aCBhcmUgbm90IHRoZSBmaWdodGVycyB0aGV5IG9uY2Ugd2VyZS4gCkNvbW1lIGludGVydmVuYW50ZSBqJ2FpIGRhdmFudGFnZSBzYWlzaSBsZXMgbGllbnMgZW50cmUgbGEgcHN5Y2ggZXQgbGUgY29ycHMsIGRhbnMgbCdleHByaWVuY2UgZGUgbGEgbmFpc3NhbmNlIGV0IGRhbnMgbCdhbGxhaXRlbWVudC4gCkluIHRoZSBtaWRzdCBvZiBhIGNoYW5naW5nIGNyaW1pbmFsIHVuZGVyd29ybGQsIHdlIGludmVzdGlnYXRlIHRoZSBzcHJlYWQgb2YgbWFmaWEgc3R5bGUgYWN0aXZpdHkgZnJvbSBFYXN0IHRvIFdlc3QuCklmIHRoZXkgZG9uJ3QgZmVlbCB0aGUgY29tcGFueSBpcyBwcm9mZXNzaW9uYWwgZW5vdWdoIHRvIGhhbmRsZSB0aGVpciBpbXBvcnRhbnQgbWF0dGVycywgdGhleSB3aWxsIGdvIGVsc2V3aGVyZS4gCkJ1dCBmaXJpbmcgZXZlcnlvbmUgYW5kIHN0YXJ0aW5nIG92ZXIgZnJlc2ggY29tZXMgd2l0aCBjb3N0cyBhbmQgbm93IGlzbiB0aGUgdGltZSB0byByZWJ1aWxkIGZyb20gc2NyYXRjaCAgIG5vdCBhZnRlciA2KyB5ZWFycyBvZiB0cnlpbmcgdG8gZ2V0IGl0IHJpZ2h0LiAKSW4gZWZmZWN0LCB0aGUgZGVjbGluZSB0aGVzaXMgcGFyYWRpZ20gcGxhY2VkIHRoZSBPdHRvbWFuIEVtcGlyZSBvdXRzaWRlIG9mIG5vcm1hbCBoaXN0b3J5LiBOb3JtYWwgc3RhdGVzIGRvbiAicmlzZSBhbmQgZmFsbCIgaW4gc29tZSBraW5kIG9mIHNldCBwYXR0ZXJuLCB0aGV5IGp1c3QuIApPbiBzb21lIG9mIG15IGhvYmJpZXMsIGVzcGVjaWFsbHkgRmFuZG9tcywgSSB0ZW5kIHRvIGdvIGludG8gd2hhdCBJIGNhbGwgIm1vZGVzIiBmb3IgbW9udGhzIGF0IGEgdGltZS4gCk9oIHdlbGwsIHNvdW5kcyBsaWtlIHlvdSBoYXZlIGEgcGFydGljdWxhciBwb2xpdGljYWwgYmVudCB0aGF0IG1pZ2h0IHdpbHQgaW4gdGhlIGZhY2Ugb2YgZXZpZGVuY2UuLiAKQSBiZXQgb24gdGhpcyByaXZlciBpcyB0byBibHVmZiB5b3VyIG9wcG9uZW50IG9mZiBhIG1lZGl1bSBsb3cgZmx1c2ggd2hldGhlciB5b3UgcmVjb2duaXplIGl0IG9yIG5vdC4KSWYgeW91IHBsYW50aW5nIGluIGxhc3QgeWVhciBwb3RzIGFuZCBjb250YWluZXJzLCByZW1vdmUgdGhlIGRlYWQgcGxhbnRzIGFuZCByZXZpdGFsaXplIHRoZSBzb2lsIHdpdGggYW4gb3JnYW5pYyBjb21wb3N0IGxpa2UgU2VhIFNvaWwgYmVmb3JlIHJlIHBsYW50aW5nLi4gCldoZW4gSSB3YWxrZWQgaW4gYW5kIGhlIGdyZWV0ZWQgbWUsIGl0IHNlZW1lZCBsaWtlIGhlIHdhcyBzdGFyaW5nIGF0IG15IGJyZWFzdHMsIGJ1dCBJIGRpZG4gdGhpbmsgYW55dGhpbmcgb2YgaXQgc2luY2UgSSB3YXNuIHdlYXJpbmcgYW55dGhpbmcgcmV2ZWFsaW5nL2Zvcm0gZml0dGluZy4gCkFzIGhlIGRlc2NyaWJlZCBpbiBkZXRhaWwgdGhlIHN0ZXBzIE1hbmFmb3J0IGFuZCBoaXMgYXNzb2NpYXRlcyB0b29rIHRvIHNldCB1cCB0aGUgQ3lwcmlvdCBhY2NvdW50cywgR2F0ZXMgc3Bva2UgZGlyZWN0bHkgdG8gdGhlIGp1cnkuCk9GRklDSUFMIExlJ1Zlb24gQmVsbCBpcyBub3QgcmVwb3J0aW5nIHRvIHRoZSBTdGVlbGVycyBieSB0aGUgNCBwbSBkZWFkbGluZSB0b2RheSBhbmQgaXMgbm93IGluZWxpZ2libGUgdG8gcGxheSB0aGUgcmVtYWluZGVyIG9mIHRoZSAyMDE4IHNlYXNvbiwgc291cmNlIHRlbGxzIEVTUE4uIApFbGlhc2hiZXJnOiBJZiB5b3UgbG9vayBhdCB0aGUgbm9taW5lZXMsIHRoZSBtb3ZpZSBCb2hlbWlhbiBSaGFwc29keSBoYXMgbWFkZSBxdWl0ZSBhIGJpdCBvZiBtb25leSwgSSBiZWxpZXZlIGFyb3VuZCAkMjAwIG1pbGxpb24uIEEgU3RhciBJcyBCb3JuIGFsc28gbWFkZSBxdWl0ZSBhIGJpdCBvZiBtb25leSwgYWxzbyBhcm91bmQgJDIwMCBtaWxsaW9uLiBJIG5vdCBzdXJlIGhvdyBtdWNoIG9mIGEgZ2FpbiB0aGV5IHdpbGwgaGF2ZSBhcyBhIHJlc3VsdCBvZiB3aW5uaW5nIHRoZSBPc2Nhci4gCkhlbGxvbWlyZWF1eCAgMTYsOTMzIHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvCiJUaGUgZmlyc3QgdGltZSBJIGhlYXJkIGFib3V0IGl0LCBJIHRob3VnaHQgaXQgc291bmRlZCBwcmV0dHkgZ3Jvc3MsIiBzYXlzIEtlbmRyYSBTcGVuY2VyLCB3aG8ncyAzMiBhbmQgbGl2ZXMgaW4gU29ub21hLCBDYWxpZi4gIkkgdGhvdWdodCB5b3VyIGhhaXIgd291bGQgYmUgY29uc3RhbnRseSBncmVhc3kgYW5kIGl0IHdvdWxkIGRyZWFkbG9jayBvciBzb21ldGhpbmcgbGlrZSB0aGF0LiAKRmVkZXJhbCBncmFudHMsIGxvYW5zIGFuZCBwdXJjaGFzZXMgd291bGQgYWxzbyBjZWFzZSBmb3IgdGhlIGFyZWFzIG9mIHRoZSBnb3Zlcm5tZW50IGFmZmVjdGVkLkFzIEhvdXNlIFJlcHVibGljYW5zIHNldHRsZWQgb24gdGhlaXIgcGxhbiB0byBmaWdodCBmb3IgVHJ1bXAncyB3YWxsLCBzb21lIFJlcHVibGljYW4gc2VuYXRvcnMgZXhwcmVzc2VkIGZydXN0cmF0aW9uIG92ZXIgdGhlIGRpc3B1dGUgYW5kIFRydW1wJ3Mgc2hpZnRpbmcgc2lnbmFscyBvdmVyIHdoZXRoZXIgb3Igbm90IGhlIHdvdWxkIHNpZ24gbGVnaXNsYXRpb24gdG8ga2VlcCB0aGUgZ292ZXJubWVudCBvcGVuLkFza2VkIGlmIGhlIGJlbGlldmVzIFRydW1wIG1pZ2h0IHN0aWxsIHNpZ24gYSBzdG9wZ2FwIGJpbGwgd2l0aG91dCB3YWxsIGZ1bmRzLCBSZXB1YmxpY2FuIFNlbmF0b3IgQm9iIENvcmtlciBvZiBUZW5uZXNzZWUgc2FpZCwgIldobyBrbm93cz8iLiAKRmlyc3QsIGhlIGd1aWRlZCB1cyB0b3dhcmQgdGhlIGNsYXNzaWMgQ3JlcGUgTW9uc2lldXIsIHRlbGxpbmcgdXMgd2UgY291bGRuJ3QgcG9zc2libHkgZ28gd3Jvbmcgd2l0aCB0aGUgRnJlbmNoIGhhbSBhbmQgZ3J1eWVyZSBjaGVlc2UgZmF2b3JpdGUuIFRoZW4sIHdpdGggYSBkcmFtYXRpYyBwYXVzZSBhY2NvbXBhbmllZCBieSBhIGxvb2sgb2YgYXBwcmVoZW5zaW9uIGFuZCBhIGNhcmVzcyBvZiBoaXMgaW1hZ2luYXJ5IGNoaW4gYmVhcmQsIGhlIHBvaW50ZWQgaW5zdGVhZCB0byB0aGUgRmxvcmVudGluZSBDaGlja2VuIENyZXBlLCBzdWdnZXN0aW5nIGl0IHdvdWxkIGJlIGFuIGFic29sdXRlIHNoYW1lIHRvIG1pc3MgdGhlIGNoZWYncyBkZWxlY3RhYmxlIGNyZWFtIHNhdWNlLlRob3VnaCBoZSBoYWQgb3VyIG1vdXRocyB3YXRlcmluZyBpbiBhbnRpY2lwYXRpb24sIGhlIHN3aXRjaGVkIGdlYXJzIGFnYWluIGFuZCBzcGVudCB0aGUgbmV4dCBtaW51dGUgd2FmZmxpbmcgYmV0d2VlbiB0aGUgRmxvcmVudGluZSBhbmQgdGhlIE5lbyBTZW91bCwgYW4gZWNsZWN0aWMgY3JlcGUgcGFja2FnZSBmaWxsZWQgd2l0aCBzaHJlZGRlZCBiYXJiZXF1ZSBwb3JrIGFuZCBraW1jaGkuSXQncyBjbGVhciB0aGF0IEEgQ2FmZSBpcyB0cnlpbmcgdG8gcHV0IGEgZnJlc2ggc3BpbiBvbiBhbiBvbGQgbWVudSBmYXZvcml0ZS4gSW52ZW50aXZlIGFuZCB1bmlxdWUgY3JlcGUgZmlsbGluZ3MsIGFsb25nIHdpdGggZW50aWNpbmcgYmFndWV0dGUgc2FuZHdpY2hlcyBhbmQgUGFyaXNpYW4gaW5zcGlyZWQgc3RhcnRlcnMsIHBlcHBlciB0aGUgbmV3IGFuZCBpbXByb3ZlZCBtZW51IGF0IEEgQ2FmZSwgZm9ybWVybHkgQXJsZW5lJ3MgQ3JlcGVyaWUgQmlzdHJvIGFuZCwgYmVmb3JlIHRoYXQsIENyZXBlcyBhIGxhIENhcnRlIG9uIEJyb2Fkd2F5IGluIEJvdWxkZXIuQWxvbmcgd2l0aCB0aGUgbWVudSByZXZhbXAsIHlvdSdsbCBmaW5kIHN3ZWVwaW5nIGNoYW5nZXMgaW5zaWRlIEEgQ2FmZS5BbiBhbWJpdGlvdXMgbWFrZW92ZXIgaGFzIHRyYW5zZm9ybWVkIHRoZSBvbmNlIG5vbmRlc2NyaXB0IGNyZXBlIGpvaW50IGludG8gYSBxdWFpbnQsIGNvenksIFBhcmlzaWFuIHN0eWxlIGNhZmUgY29tcGxldGUgd2l0aCBjaGFuZGVsaWVycywgZXhwb3NlZCBicmljaywgaG9ibmFpbCBmcmFtZWQgbWlycm9ycyBhbmQgd292ZW4gcmF0dGFuIGJpc3RybyBhcm1jaGFpcnMuIApUaGUgd2Vic2l0ZSwgUG9rZXJTY291dCwgYW4gaW5kdXN0cnkgd2Vic2l0ZSB0aGF0IHRyYWNrcyBwbGF5ZXJjb3VudHMgZm9yIHJlYWwgbW9uZXkgY2FzaCBnYW1lcywgYWxzbyB0cmFja3MgcGxheSBtb25leSBnYW1lcyBhdHRoZSB3b3JsZCdzIGxhcmdlc3Qgc2l0ZXMgcGxheSBtb25leSBzaXRlcy4gCkV1Z2VuaWNzIEFtZXJpY2FuIHN0eWxlIHdvcmtlZCBmb3IgdGhlIHJlcHJvZHVjdGlvbiBvZiB0aGUgcGVyZmVjdCBiYWJ5LCBidXQgYWxzbyB0byBjb252aW5jZSBhZHVsdHMgdG8gYWRvcHQgbmV3IHJlZ2ltZXMgb2YgZml0bmVzcywgaGVhbHRoLCBhbmQgYmVhdXR5LiBJbmRlZWQsIGl0IG1hZGUgdG90YWwgc2Vuc2UgZm9yIGEgZmFtb3VzIGV1Z2VuaWNpc3QgbGlrZSBBbGJlcnQgRS4gCkJ1eSBhIG5haWwgaGFyZGVuZXIuIFRoaXMgaXMgYWxzbyBhdmFpbGFibGUgYXQgYmVhdXR5IHN0b3JlcyBhbmQgZHJ1Z3N0b3Jlcy4gQXBwbHlpbmcgdGhpcyBhdCBsZWFzdCB0d28gdGltZXMgd2Vla2x5IHdpbGwgZ2l2ZSBwb3NpdGl2ZSByZXN1bHRzIHRvIHlvdXIgbmFpbHMuCkl0IG5vdCBicyBpcyBqdXN0IHRoYXQgdGhlIGdyYXBoIGlzIGZyb20gdGhlIHBlcnNwZWN0aXZlIG9mIHRoZSBidXNpbmVzcyBob2xkZXIuIApBbGVydCB5b3Vyc2VsZiB0byBtb3JlIHNwZWNpZmljIHN5bXB0b21zLiBBbHRob3VnaCBib3RoIGNvbmRpdGlvbnMgaGF2ZSB0aGUgc2FtZSBzeW1wdG9tcywgYSBZb3JraWUgZXhwZXJpZW5jaW5nIHRyYWNoZWFsIGNvbGxhcHNlIHdpbGwgbWFuaWZlc3QgbW9yZSBkYW5nZXJvdXMgc3ltcHRvbXMgd2hpbGUgb25lIHN1ZmZlcmluZyBmcm9tIHJldmVyc2Ugc25lZXppbmcgd2lsbCBub3QuIApLZWVwIGluIG1pbmQgdGhhdCB0aWNrZXRzIGFyZSBiZWFyZXIgaW5zdHJ1bWVudHM7IHdob2V2ZXIgaG9sZHMgaXQgY2FuIHJlZGVlbSBpdC4gCkVhY2ggbWFjaGluZSBoYXMgYSBsaWdodCBvbiB0b3Agb2YgaXQgY2FsbGVkIGEgJ2NhbmRsZScuIFRoZSBjYW5kbGUgY29udGFpbnMgYSBjb2xvciBpbmRpY2F0aW5nIGl0cyBkZW5vbWluYXRpb24sIGFuZCBhbHNvIHNlcnZlcyB0byBub3RpZnkgdGhlIHNsb3QgYXR0ZW5kYW50IGlmIHNlcnZpY2UgaXMgbmVlZGVkLiBUaGUgY2FuZGxlIGZsYXNoZXMgaW4gc3BlY2lmaWMgcGF0dGVybnMgZm9yIHNlcnZpY2UgbmVlZGVkLCBlbnRyeSBtYWRlIGludG8gdGhlIG1hY2hpbmUsIGphY2twb3QsIGRvb3Igbm90IHNlY3VyZSwgYW5kIG90aGVyIGZ1bmN0aW9ucy4uIApMJ29ic2l0IG4nZXN0IHBhcyB1bmUgaWRlbnRpdCBtYWlzIHVuZSBwYXJ0aWN1bGFyaXQsIGEgdCBvbiBhZmZpcm0uIApJZiBjaGFyYWN0ZXJzIGRvbiBmb2xsb3cgYW55IHNvcnQgb2YgbG9naWMsIHRoZXkgc3RvcCBiZWluZyBpbnRlcmVzdGluZyBiZWNhdXNlIHRoZW4gaXQgRE9FUyBzZWVtIGxpa2UgdGhlIHdyaXRpbmcgdGVhbSBpcyBqdXN0IHB1c2hpbmcgaXQgaW4gYSBkaXJlY3Rpb24gdG8gc2VsbCwgZGVzcGl0ZSBpdCBub3QgbWFraW5nIHNlbnNlLi4gCkhlIHVzZWQgdG8gdGVsbCB0aGVtLCB3ZSBoYXZlIHRvIGJlIG9wZW4gd2l0aCB0aGUgbWVkaWEsIHdlIGNhbiBoaWRlIGJlaGluZCB0aGUgY2FtZXJhcy4gRG9uIHB1dCB5b3VyIGhhbmQgdXAgaW4gZnJvbnQgb2YgYSBjYW1lcmEuIApJIG5vdCB3ZWFsdGh5IHBlcnNheSwgYnV0IEkgZGlkIHNlbGwgYSBzb2Z0d2FyZSBwcm9kdWN0IGZvciBhIGdvb2QgYW1vdW50IG9mIG1vbmV5IGFuZCBldmVyeSBmYW1pbGlhbCB3aWVyZG8gY2FtZSBvdXQgdGhlIHdvb2R3b3JrLi4gCkV2ZXJ5IGV2ZW5pbmcgaXQgZHJpbmsgdW50aWwgbW9tIGNhbiBoYXJkbHkgd2FsayBhbmQgZGFkIGNhbiBrZWVwIGhpcyBleWVzIG9wZW4uIApJZiB5b3UgcmVhY3QgbmVnYXRpdmVseSBhbmQgYmVjb21lIHRpbHRlZCB5b3VyIGdhbWUgYW5kIGZvY3VzIGRyb3BzLiAKV2l0aCB0aGUgc3RhdGUgZmFpbHVyZXMgZXhjdXNlZCwgWW91bmdibG9vZCB3YXMgc2VudGVuY2VkIHRvIDEwLjUgeWVhcnMuIEhlIHdhcyBpbmNhcmNlcmF0ZWQgZnJvbSAxOTg4IDE5OTgsIG9ubHkgdG8gYmUgcmV0dXJuZWQgdG8gcHJpc29uIGluIDE5OTkgaGF2aW5nIHVuaW50ZW50aW9uYWxseSB2aW9sYXRlZCBoaXMgc2V4IG9mZmVuZGVyIHJlZ2lzdHJ5IHJlcXVpcmVtZW50cy4KQSB1bmlxdWUgZmVhdHVyZSB0byB0aGlzIHByb3BlcnR5IGlzIGl0cyBFcXVlc3RyaWFuIENlbnRlciwgd2hpY2ggaXMgdGhlIGZpbmVzdCBob3JzZSBmYWNpbGl0eSBpbiB0aGUgY291bnRyeS4gCkNoaWx5aWx5aWxzbyAgNjYgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSBjYW4gcmVhZCBjb21tZW50cyBleHBsYWluaW5nIChhbHNvIHdpdGggdmVyeSB3ZWFrIHNjaWVudGlmaWMgYmFzaXMsIGxpa2UgY29tbWVudCBuby4gCk9uY2UgaXQgcHJvZHVjZWQsIGlmIHlvdSB0aGVuIGdvIHRoZSBoYW5kbWFkZSBib29rYmluZGluZyBtZXRob2QsIHlvdSBoYXZlIHRvIGZvcm1hdCB0aGUgcHJpbnQgam9iLiBUaGF0IGRlcGVuZHMgZW50aXJlbHkgb24gdGhlIHNpemUgb2YgdGhlIHBhZ2VzIHlvdSB3YW50ICAgYnV0IGZvciBkZXNpZ25pbmcgYm9va2xldCBzdHlsZSBwcmludHMgKHR5cGljYWxseSB1c2VkIGluIGhhcmRjb3ZlciBib29rYmluZGluZyB0ZWNobmlxdWVzKSwgdGhpcyBsaXR0bGUgcHJvZ3JhbS93ZWJzaXRlIGlzIGV4dHJlbWVseSBoZWxwZnVsLCBhcyBpdCB3aWxsIHJlY29uZmlndXJlIGEgcGRmIGZpbGUgaW50byBvbmUgdGhhdCBjYW4gcHJpbnQgYWNjb3JkaW5nIHRvIHRoZSBuZWVkcyBvZiB0aGUgYm9vayBzdHlsZSB5b3UgYXJlIHByaW50aW5nLi4gCkJ1dHRvbi4gCkZpZ2h0ZXJzIHNlcmllcy4gVGhpcyBpbnN0YWxsbWVudCB3YXMgYWR2ZXJ0aXNlZCBieSBTTksgYXMgYSAic3BlY2lhbCBlZGl0aW9uIiBvZiB0aGUuIApaaXBSZWNydWl0ZXIgaGFzbiBleGlzdGVkIHlldCBhdCB0aGUgdGltZSBJIHdhcyB0aGVyZS4gCk5lZWQgdG8geW91IGludmVzdCBpbiB0ZWNobm9sb2d5PyBTaGFyZXMgZnJvbSB0aGlzIGJ1c2luZXNzIGhhdmUgZWxldmF0ZWQgYnkgNyUsIHdoaWNoIGNvdWxkIGJlIGNvbnNpZGVyYWJseSBtdWNoIGxlc3MgdGhhbiB0aGUgbWFya2V0cGxhY2UgYXZlcmFnZS4gSWYgdGhlIGludGVybmF0aW9uYWwgYW5kIG5hdGlvbmFsIGVjb25vbXkgaGFzIHRvIGdldCB1cCBvbiBpdHMgZmVldCwgdGhlIHNlY3RvciBpcyBuZWVkZWQsIGFuZCBpcyBtb3N0IGxpa2VseSB0byBsZWFkIHRoZSB3YXkuIFRoaXMgbWFrZXMgYWNxdWlyaW5nIGludG8gdGVjaG5vbG9naWVzIHNoYXJlcyBhIHByb21pc2luZyBtZXRob2Qgd2hlbiBpdCBjb21lcyB0byBzdG9ja3MuCkJvYmJpbmcgaGVhZCB0byBoaXMgbXVzaWMgd2hpbGUgY2FzdWFsbHkgZmxpcHBpbmcgY2hpcHMgaW50byB0aGUgcG90IG9uIDUwJSBvZiB0aGUgaGFuZHMuIApUaGUgZmFtaWx5IHdvdWxkIGxpa2UgdG8gdGhhbmsgRHIuIApDYW4gYSBjb21wdXRlciBiZWF0IGEgaHVtYW4gYXQgcG9rZXIKSSBkb24gc3VwcG9ydCBlbmZvcmNpbmcgdHdpc3RlZCBpZGVhbHMgb2YgaG93IGEgc29jaWV0eSBpcyBzdXBwb3NlZCB0byBsb29rIGxpa2UuIExldCBwZW9wbGUgbWFrZSB0aGVpciBvd24gY2hvaWNlcy4gRmV3IHBlb3BsZSBhcmUgZHVtYiBlbm91Z2ggdG8gdGhpbmsgIml0IHNheXMgQXJ6dCBhbmQgdGhhdCBtZWFucyBhIG1hbiwgc28gSSBub3QgZ29pbmcgdG8gc3R1ZHkgdGhhdC4iIEF0IHRoZSBlbmQgb2YgdGhlIGRheSwgbW9zdCB5b3VuZyBhZHVsdHMgaW5kZWVkIGRvIGEgbG90IG9mIHJlc2VhcmNoIGJlZm9yZSBkZWNpZGluZyB3aGF0IGtpbmQgb2YgY2FyZWVyIHRvIHZlbnR1cmUgaW50byBhbmQgbGFuZ3VhZ2UgcGxheXMgYSBob21lb3BhdGhpYyBwYXJ0IGluIHRoYXQuLiAKQW5kIGxhdGVyIHRoaXMgc3VtbWVyLCB0aGUgaXNsYW5kIG9mIFN2ZXRpIFN0ZWZhbiBpdHNlbGYgd2lsbCBvZmZlciBkaXZlcnNlIGRpbmluZyBvcHRpb25zIGluIGEgdW5pcXVlbHkgYXRtb3NwaGVyaWMgc2V0dGluZywgcmVtaW5pc2NlbnQgb2YgaXRzIGZhYmxlZCBwYXN0ICAgVGhlIFBpYXp6YS4gCiJNeSB0ZWFjaGVyIE1yIENsaXBzaGFtIHBsYXllZCBiYXNzIGFuZCB0aGVuIG1hdGVzIG9mIG1pbmUgZnJvbSBCYXRodXJzdCBIaWdoIHBsYXllZCBndWl0YXIgYW5kIGRydW1zLCIgaGUgc2FpZC4gCkxpa2UgSSBlYXJsaWVyLCB5b3UgYXJlIGxldHRpbmcgeW91IHBlcnNvbmFsIGJpYXNlcyBjbG91ZCB5b3VyIGp1ZGdlbWVudHMuIFlvdSBhcmUgY2xhaW1pbmcgdG8ga25vdyBwZW9wbGUgbW90aXZlcyBhbmQgcG9zaXRpb25zIHdpdGhvdXQgYWN0dWFsbHkga25vd2luZyBhbnl0aGluZy5ObyBvbmUgaXMgZGVsdWRlZCBoZXJlLiBJIGRhcmUgeW91IHRvIGtlZXAgcmVhZGluZyB0aGUgb3RoZXIgdGhyZWFkcyBpbiB0aGUgc3ViIGFuZCBjb3VudCB0aGUgbnVtYmVyIG9mIGNvbW1lbnRzIHdoZXJlIHBlb3BsZSBzYXkgc3R1ZmYgbGlrZSAibWFuIEkgcmVhbGx5IGhvcGUgdGhpcyB3b3JrcyBvdXQiLCAidGhpcyBpcyBvbmx5IHRoZSBzdGFydCwgd2Ugc3RpbGwgaGF2ZSBhIGxvdCBvZiB3b3JrIHRvIGRvIiBhbmQgIkkgaG9wZSB0aGlzIG5ldyByZWdpbWUgcmVhbGx5IHRoaW5rcyBoYXJkIGFib3V0IHRoZWlyIGRlY2lzaW9ucyBiZWNhdXNlIHRoZXkgaGF2ZSBhIGxvdCBvZiBoYXJkIHdvcmsgdXBjb21pbmciLiAKQmVmb3JlIHlvdSBwbGF5IHlvdXIgZmlyc3QgaGFuZCwgbWFrZSBzdXJlIHlvdSdyZSBmYW1pbGlhciB3aXRoIHNvbWUgUG9rZXIgQmFzaWNzLiAKT25lIG9mIHRoZSB0d28gcmVtYWluaW5nIHBsYXllcnMgY2FuIG9wZXJhdGUgYXMgdGhlICJiYW5rZXIiLCBhbmQgcGxheSBpbiBhIHdheSB0aGF0IGZ1bm5lbHMgbW9uZXkgZnJvbSB0aGVtc2VsdmVzIGFuZCBhbm90aGVyIHBsYXllciB0byB0aGUgdGhpcmQgcGxheWVyLiBUaGUgY29tYmluYXRpb24gb2YgdGhpcywgYW5kIHRoZSBtdWx0aXBsaWNhdGlvbiBlZmZlY3Qgb24gdGhlIGdhbWUgdHJlZSwgbWFrZSBpdCBub3QgdGhhdCBhcHBlYWxpbmcgZm9yIHBlb3BsZSBub3QgcGxheWluZyBmb3IgbW9uZXkgdG8gZ2V0IGludG8gYm90dGluZy4gClRoZW4gbWFrZSBhIGZha2UgY2FsbCwgcHJlc3NpbmcgYXMgbWFueSBidXR0b25zIG9mIGhpcyBjYWxsIGxvZyBhcyBwb3NzaWJsZSB0byBub3RlIGFueSBzdHJhbmdlIGNhbGxzLiBHbyB0byBiYXRocm9vbSB3aXRoIHBob25lIGlmIGF0IGFsbCBwb3NzaWJsZS4gV2F0Y2ggd2hldGhlciBoaXMgY2VsbCBwaG9uZSBpcyBhbHdheXMgdHVybmVkIG9mZiB3aGVuIHdpdGggeW91IG9yIHdoZXRoZXIgaGUgdGFrZXMgdW51c3VhbGx5IGxvbmcgdG8gcGhvbmUgeW91IGJhY2suIApPdXRzIGFyZSB0aGUgbnVtYmVyIG9mIGNhcmRzIHRoYXQgd2lsbCBpbXByb3ZlIHlvdXIgaGFuZC4gVGhleSBjb21wdXRlIGl0IGJ5IG11bHRpcGx5aW5nIGl0IGJ5IHR3byBhbmQgYWRkaW5nIG9uZSBhbmQgdGhhdCB0aGUgcGVyY2VudGFnZSBvZiB0aGVtIGhpdHRpbmcgdGhlIHBvdC4gClNoZSBkb2VzIGFsbW9zdCB0aGUgc2FtZSB0aGluZywganVzdCBub3QgZm9yIHBlb3BsZSBvbiBkZWF0aCByb3cuIEFueXdheSwgdGhleSB3ZXJlIHJlYWxseSBuaWNlIGFuZCB3ZSB0YWxrZWQgdG8gdGhlbSBmb3IgYSB3aGlsZS4uIApTbG93IHN0ZWFkeS4gRG93biA1MSBsYnMgZnJvbSBsYWJvciBkYXkgbGFzdCBtYXkuIApJdCBtb3ZlbWVudCByZWxpZXMgb24gdXMgbWFudWFsbHkgbW92aW5nIGl0IGFyb3VuZCB0aHJvdWdoIHBoeXNpY2FsIG1vdmVtZW50LCBibG9vZCBmbG93LCBhbmQgaW4gdGhpcyBjYXNlIG1hc3NhZ2UuLiAKRGVzZXJ0ZWRuZXNzIG9uIHRoZSBzdHJlZXRzIHRoYXQgY29tcGxldGVseSB2aW9sYXRlZCB0aGUgbm90aW9uIG9mIHRoZSBzdHlsaXNlZCBob3QsIGNyb3dkZWQgYW5kIGZsYXQgS2FyYWNoaSB3ZSBjb21lIHRvIGV4cGVjdC4gV2Ugb25seSBsZWFybnQgdGhhdCB3ZSB3ZXJlIGRlZXAgaW4gdGhlIGhlYXJ0IG9mIEx5YXJpIHVwb24gbm90aWNpbmcgdGhlIHZpc2libGUgYW5kIHByb3VkIFBQUCBwYXJhcGhlcm5hbGlhLCBmcm9tIHNjaG9vbCBidWlsZGluZ3MgdG8gcG9zdGVycyBhbmQgaG9hcmRpbmdzLCBsYXVkaW5nIFNoYWhlZWQgTW9odGFybWEgQmVuYXppciBCaHV0dG8uIFRoZXJlIHdhcywgb2YgY291cnNlLCBvbmUgb3RoZXIsIHJhdGhlciBsYXJnZSwgZ2l2ZWF3YXkuLiAKVGhhdCBwYXJlbnRzIHNjcmVlbiB0aGVpciBmZXR1c2VzIGZvciBoZWFsdGggaXMgd2VsbCBrbm93biBhbmQgdG8gc29tZSBleHRlbnQgd2lkZWx5IGFjY2VwdGVkLiAKRWwgbWFzYWplIGRlbCBjdWVybyBjYWJlbGx1ZG8gZm9ybWEgcGFydGUgZGUgbGFzIHRyYWRpY2lvbmVzIGZhbWlsaWFyZXMgZW4gbGEgSW5kaWEsIHkgc2UgcmVhbGl6YSBhbCBtaXNtbyB0aWVtcG8gcG9yIG1hZHJlcywgaGlqYXMgeSBuaWV0YXMsIHBhcmEgYWxpdmlhciB0ZW5zaW9uZXMgeSBtZWpvcmFyIGxhIHNhbHVkIGRlbCBjYWJlbGxvLgpCeSBTQUxMWSBITyBhbmQgUkVHSU5BIEdBUkNJQSBDQU5PTEFTIFZFR0FTIChBUCkgICBBIGd1bm1hbiBvbiB0aGUgMzJuZCBmbG9vciBvZiBhIExhcyBWZWdhcyBob3RlbCBjYXNpbm8gcmFpbmVkIGhlYXZ5IGZpcmUgZG93biBvbiBhIGNyb3dkIG9mIG92ZXIgMjIsMDAwIGF0IGFuIG91dGRvb3IgY291bnRyeSBtdXNpYyBmZXN0aXZhbCwgdHVybmluZyB0aGUgZXhwYW5zZSBpbnRvIGEga2lsbGluZyBmaWVsZCBmcm9tIHdoaWNoIHRoZXJlIHdhcyBsaXR0bGUgZXNjYXBlLiAKR29vZCB0aW1lcy4uIApEdXJpbmcgaXRzIHRlc3Qgd2l0aCB0aGUgdHdvIENvbHVtYnVzIGxvY2F0aW9ucywgRFNXIHBvc2l0aW9uZWQgZm9vdHdlYXIgbGlrZSBmbGlwIGZsb3BzIGFuZCBzYW5kYWxzIHRvIGZhY2UgdGhlIGN1c3RvbWVycyBpbiB0aGUgbmFpbCBiYXIuIApNb3N0IG9mIHRoZSB0aW1lIEkgbm8gbG9uZ2VyIGdpdmUgYSBzaGl0IGhvdyBtdWNoIHRoZXkgZGlkIHRvIHRoZW1zZWx2ZXMuIApBZ3Jlc3NpdmUgYWJvdXQgd2FudGluZyB0byBqb2luIGFybWVkIGRyaWxsLiAKU08gbWFueSBjdXN0b21lcnMgZ29vZ2xlIG91ciBudW1iZXIgYW5kIGNhbGwgdXMgdG8gc2VlIHdoYXQgdGltZSB3ZSBjbG9zZSBldmVuIHRob3VnaCB0aGUgb3BlbmluZyBob3VycyBhcmUgZGlzcGxheWVkIHVuZGVybmVhdGggdGhlIHBob25lIG51bWJlciBvbiBnb29nbGUuCkkgZW5kZWQgdXAgZ2V0dGluZyBhY2NlcHRlZCBpbnRvIGxhdyBzY2hvb2wgaW4gbXkgaG9tZSBzdGF0ZSBhbmQgaW4gYW5vdGhlciBzY2hvb2wgb3V0IG9mIHN0YXRlLiBUaGUgd2VlayBhZnRlciBJIGdvdCBteSBhY2NlcHRhbmNlIGxldHRlcnMsIHRoZSBjb21wYW55IEkgd2FzIHdvcmtpbmcgYXQgdG9sZCB0aGUgd2hvbGUgZmFjdG9yeSB0aGV5IHdlcmUgb3V0c291cmNpbmcgYW5kIGNsb3NpbmcgdXAgdGhlIGJ1aWxkaW5nLiAKQU5EIG15IGVkYWQgc2ltdWx0YW5lb3VzbHkuIERIIHJlbWFpbmVkIGNhbG0gYnV0IGhlJ3Mgc28gZnVja2luZyBvdmVyIGl0ISEhCkFmdGVyIGEgd2hpbGUgaSBsaWtlLCB5b3UgYWluIHRoYXQgY3V0ZSwgeW91IGRpZG4gZGF0ZSB0aGlzIG1hbnkgZ2lybHMuIApIZSBzYXlzIHRoYXQgaXQgcmVhbGx5IGRvZXNuIG1hdHRlciB3aGljaCBmb3JtYXQgb2YgcG9rZXIgeW91IGRlY2lkZSB0byBwbGF5LCBidXQgeW91ciBzdWNjZXNzIHByaW1hcmlseSBkZXBlbmRzIG9uIHlvdXIgZGVkaWNhdGlvbiB0byB0aGUgZ2FtZSBhbmQgc2VsZiBkaXNjaXBsaW5lLiBIZSBuZXZlciBzcGVjaWZpY2FsbHkgYW5zd2VyZWQgd2hpY2ggb2YgdGhlIHRocmVlIG9wdGlvbnMgd2FzIGVhc2llc3QgdG8gYmVhdCwgYnV0IGhlIGRpZCB0ZWxsIG1lIHRoYXQgc29tZWJvZHkgcGxheWluZyAoYSBzb2xpZCBnYW1lKSBsaXZlIGNhc2ggaW4gVmVnYXMsIEF0bGFudGljIENpdHksIExvcyBBbmdlbGVzLCBvciBGbG9yaWRhIHdvdWxkIHdpbiBtb25leSBjb25zaWRlcmFibHkgZmFzdGVyIChvbiBhdmVyYWdlKSB0aGFuIGEgcGxheWVyIHdobyBwbGF5cyAkNTAwICQxMDAwIHRvdXJuYW1lbnRzLCBsaXZlIG9yIG9ubGluZS4gSGUgZG9lc24gcGxheSBvbmxpbmUgbXVjaCwgb3RoZXIgdGhhbiB0aGUgY291cGxlIFdTT1Agb25saW5lIGJyYWNlbGV0IGV2ZW50cyBldmVyeSB5ZWFyLCBhbmQgdGhpbmtzIHRoYXQgb25saW5lIGlzIG11Y2ggdG9vIGhhcmQgdG8gYmVhdCBub3dhZGF5cy4gClNoZSdzIGJlZW4gb24gQ2hhbm5lbCA0J3MgTGF0ZSBOaWdodCBQb2tlciBhIGZldyB0aW1lcywgYW5kIGhlciBiaWdnZXN0IHdpbiBpcyBNaWNoZWxsZSwgNDEsIHdobyBzdGlsbCB3b3JrcyBpbiBjaGlsZGNhcmUsIHNhaWQ6ICJSaWNoYXJkIGFuZCBCcmFuZG9uIGFyZSBiZXR0ZXIgcGxheWVycywgdG8gYmUgZmFpci4gSSdtIGFsd2F5cyBhc2tlZCBpZiBJJ20gYmV0dGVyIHRoYW4gbXkgaHVzYmFuZCBhbmQgaGUgc2F5cyBJIGFtLCBidXQgSSdtIG5vdCBzdXJlLi4gCkkgcmVhZCBhIGRvY3VtZW50LCBJIGRvbiBqdXN0IHNheSBpcyB3aGF0IEkgd2lsbCBvciB3b24gZG8gYmVjYXVzZSBETlJzIGFyZSBub3QgYmxhY2sgYW5kIHdoaXRlLCBoZSBzYXlzLiB3aWxsIHdyaXRlIHRoaW5ncyBsaWtlIGJlIG9uIGRpYWx5c2lzIGJ1dCBvbmx5IGZvciBhIHdlZWsgc28gdGhleSB0aGluayB0aGV5IHRob3VnaHQgdGhpbmdzIHRocm91Z2gsIGJ1dCBpdCByZWFsbHkgbW9yZSBjb25mdXNpbmcgZm9yIHRoZSBwaHlzaWNpYW4uIGFsc28gc2FpZCB0aGF0IHdoZW4gYSBtZWRpY2FsIHNpdHVhdGlvbiBhY3R1YWxseSBwcmVzZW50cyBpdHNlbGYsIG1hbnkgcGVvcGxlIGNoYW5nZSB0aGVpciBtaW5kcyBhYm91dCBob3cgdG8gcHJvY2VlZC4gUGF1bm92aWMgcmVjb2duaXplcyB0aGF0IGV4cHJlc3NpbmcgeW91ciB3aXNoZXMgaW4gYSBob3NwaXRhbCBzZXR0aW5nIGNhbiBiZSBmcnVzdHJhdGluZywgYnV0IGRvZXNuIHRoaW5rIHRhdHRvb3MgYXJlIHRoZSBhbnN3ZXIuCiJZb3UgY2FuIGJlIGEgbWlsbGlvbmFpcmUsIGJ1dCB3aXRob3V0IGNoYXJpdHJhIGFuZCBpenphdCwgeW91IGhhdmUgbm90aGluZywiIGhlIHNhaWQuIEkgZG8gc29tZXRoaW5nIHRvIGJyaW5nIHNoYW1lIHRvIG15IGZhbWlseSBuYW1lLCBteSBkYXVnaHRlcnMgd291bGQgbm90IGJlIGFibGUgdG8gbWFycnkuIgpJIG1lYW4sIHlvdSBnb3QgaWNlIGFuZCBzbm93IHRoZXJlIGlzIGFsd2F5cyB0aGUgY2hhbmNlIG9mIGdldHRpbmcgaHVydC4uIApXZWxsIG9uZSBvZiB0aGUgdGltZXMgdGhhdCBJIGNhbiByZW1lbWJlciBvZmYgaGFuZCBpcyB3aGVuIG1lIGFuZCAzIG90aGVyIGZyaWVuZHMgaGFkIHRvIGRvIGEgZ3JvdXAgcHJvamVjdCB3aGljaCBjb3VudGVkIGZvciBhIGRlY2VudCBhbW91bnQgb2Ygb3VyIGdyYWRlIGluIHRoZSBjbGFzcywgYW5kIHdlIGFsbCBoYWQgdG8gcHJlc2VudCBpdCB0byB0aGUgY2xhc3MgYW5kIHdlJ2QgYWxsIGJlIGRlZHVjZWQgbWFya3MgaWYgc29tZW9uZSBkb2Vzbid0IHNob3cgKHdpdGhvdXQgZ29vZCByZWFzb24pLiBXZSB3ZXJlIGdyb3VwZWQgdXAgd2l0aCBvbmUgcmFuZG9tIGd1eSB3aG8gbm9uZSBvZiB1cyBrbmV3IGluIHRoZSBzbGlnaHRlc3QuCkRyLiAKSG93IGRvIGkgZ2V0IDEgbWlsbGlvbiBwb2tlciBjaGlwcyBmb3IgZnJlZWJ5IHRhc3RpbiA4IHllYXJzIGFnbwpTbyBiYXNpY2FsbHkgSSBkZWZpbml0ZWx5IGhhZCBjcnVzaGVzIG9uIG90aGVyIGdpcmxzIGJlZm9yZSwgYnV0IEkgaGFkbiBwcm9wZXJseSBhY2tub3dsZWRnZWQgdGhlbSBhcyBjcnVzaGVzLiBJIGp1c3QgcmVhbGx5IHdhbnRlZCB0byBiZSBmcmllbmRzIHdpdGggdGhlbSBJIHdhcyB0aGlydGVlbiwgSSB3YXMgY2FzdCBpbiB0aGUgc2Nob29sIHBsYXksIGFuZCBwYXJ0IG9mIG15IGNvc3R1bWUgaW52b2x2ZWQgb25lIG9mIHRob3NlIENORCBuZWNrbGFjZXMuIEkga25vdyBpdCB3YXMgYSBDTkQgbmVja2xhY2UgYmVjYXVzZSB0aGlzIGdpcmwgaW4gdGhlIHllYXIgYWJvdmUgbWUgdG9sZCBtZSBub3QgYSBwZWFjZSBzaWduLCBpdCBhIHN5bWJvbCBmb3IgTnVjbGVhciBEaXNhcm1hbWVudCBJIHdhcyB2ZXJ5IGltcHJlc3NlZCB3aXRoIHRoaXMgY29vbCBiaXQgb2YgdHJpdmlhLCBhbmQgdGhvdWdodCBzaGUgd2FzIGNsZWFybHkgYSB2ZXJ5IGNvb2wgcGVyc29uLiAKU3RvcCBTdGF0aWMgU3RyZXRjaGluZyBCZWZvcmUgV29ya291dHMKSGVsbCAodGhvdWdoIEkgZG8gbG92ZSBteSBmYW1pbHkgb3ZlcmFsbCksIHRoZXJlIHNvbWUgZnVja2hlYWRzIHdobyBhcmUgb3Bwb3NlZCB0byBhbnkgd2VsZmFyZSBwcm9ncmFtcyBiZWNhdXNlIHRoZXkgc2hvdWxkbiBoYXZlIHRvIHBheSB0YXhlcyB0byBzdXBwb3J0IHBlb3BsZSB3aG8gd29uIHN1cHBvcnQgdGhlbXNlbHZlcy4gVGhhdCBpbmNsdWRlcyBteSBpZGlvdCBhdW50IHdobyBoYXMgbmV2ZXIgc3VwcG9ydGVkIGhlcnNlbGYgaW4gaGVyIGxpZmUgZGVzcGl0ZSBiZWluZyBpbiBoZXIgNTBzLiAKSSB0aGluayB5b3Ugd291bGQgYmUgc3VycHJpc2VkIGF0IHRoZSBvdmVyYWxsIGxhY2sgb2YgcHJvZ3JhbW1pbmcga25vd2xlZGdlIGZyb20gZ2VuZXJhbCBwZW50ZXN0ZXJzLiBIb3dldmVyIGlmIHlvdSB3YW50IHRvIGdvIGZhciwgSSB3b3VsZCBzYXkgY29taW5nIGZyb20gYSBwcm9ncmFtbWluZyBiYWNrZ3JvdW5kIGlzIGVzc2VudGlhbC4gQXQgbGVhc3QgYmVpbmcgYWJsZSB0byBkZWNpcGhlciBjb2RlIGFuZCByZWFkIGl0IGV0Yy4gCk5ldyB0ZWNobm9sb2d5IG1hZGUgaXQgcG9zc2libGUgZm9yIGEgZGV2ZWxvcGVyIHN1Y2ggYXMgU2FsIERlYnVzIHRvIG1ha2UgbGlnaHR3ZWlnaHQgY290dG9uIGxpa2UgZmFicmljcyBvdXQgb2YgcmVjeWNsZWQgcG9wIGJvdHRsZXMuIApHYW1lcyBsaWtlIEpva2VyMTIzIGFsbG93cyB5b3UgdG8gcGxheSBDYXNpbm8gYW5kIG90aGVyIGdhbWJsaW5nIGdhbWUgb24geW91ciBpUGhvbmUuIApIZXJlIGluIG5ld3MgbGFuZCwgd2UndmUgYWx3YXlzIGtub3duIG9wZW4gb2ZmaWNlcyBhcmUgZ3JlYXQgZm9yIHRoZSBwdXJwb3NlcyBvZiBzaGFyaW5nIGlkZWFzLCBmbHUgZ2VybXMgYW5kIGhpZ2hseSBwZXJzb25hbCBpbmZvcm1hdGlvbiB3aXRoIHlvdXIgY293b3JrZXJzLiBJIGNoYXR0ZWQgd2l0aCBhIGZldyBhZ2VuY3kgZm9sa3MgYWJvdXQgdGhlIHRyaWFscyBhbmQgdHJpYnVsYXRpb25zIG9mIHRoZSBvcGVuIG9mZmljZSBsaWZlIGFuZCwgSSBtdXN0IGFkbWl0LCB3YXMgdGhvcm91Z2hseSBlbnRlcnRhaW5lZC4gIlJhdCBzdHVkaWVzIHNpbmNlIHRoZSAxOTYwJ3MgaGF2ZSBzaG93biB0aGF0IHJhdHMgbGl2aW5nIGluIGNyb3dkZWQgb3BlbiBzcGFjZXMgZXhoaWJpdCB1bnVzdWFsIGJlaGF2aW9ycyBpbmNsdWRpbmcgb2NjYXNpb25hbGx5IGF0dGFja2luZyBlYWNoIG90aGVyIGFuZCBwcmVnbmFuY2llcyBub3QgY2FycmllZCB0byB0ZXJtLCIgRXJpY2EgRml0ZSwgRmFuY3kgY28gZm91bmRlciBhbmQgY3JlYXRpdmUgZGlyZWN0b3Igc2FpZCBpbiBhbiBlbWFpbC4gClRoZXkgd2lsbCBzaW1wbHkgbG9zZSB0aGUgbWluaW11bSBhbW91bnQuIFNvbWUgb2YgdGhlc2UgZ3V5cyBhcmUgbWF0aCBnZW5pdXNlcyB3aG8gc3R1ZGllZCB0aGUgc3RhdGlzdGljcyBvZiB0aGUgZ2FtZSBvbiBhIGhpZ2ggbGV2ZWwgZm9yIG1hbnkgeWVhcnMuIFRoZXkgYWxzbyB1bmRlcnN0YW5kIHBsYXllciBhcmNoZXR5cGVzLiAKWW91IG5lZWQgdG8ga25vdyBlYXJseSBlbm91Z2ggdG8gc3RpbGwgaGF2ZSBvcHRpb25zLiAKQ2F0dGxlIHJhbmNoZXIgdGVzdGVkIGFsbCBvZiBoaXMgY2F0dGxlIGZvciBtYWQgY293IGFuZCB3YW50ZWQgdG8gbGFiZWwgaGlzIG1lYXQgYXMgMTAwJSB0ZXN0ZWQuICAgVGhlIFVTREEgbWFkZSB0aGlzIHByYWN0aWNlIElMTEVHQUwuIFRoZXkgZm9yYmFkZSBoaW0gZnJvbSBkb2luZyBpdCwgY2xhaW1pbmcgaXQgd291bGQgY2F1c2UgaGltIHRvIGhhdmUgYW4gdW5mYWlyIGJ1c2luZXNzIGFkdmFudGFnZSBvdmVyIHRob3NlIFVTIHByb2R1Y2VycyB3aG8gRE9OIHJlZ3VsYXJseSB0ZXN0LiAKQnV0IHlvdSBjYW4gb25seSB1c2UgU3BvdGlmeSBvbiB5b3VyIHBob25lIGlmIHlvdSBwYXkgZm9yIGl0IGFuZCB0aGF0IHdoZXJlIEkgbmVlZGVkIGl0IG1vc3QuIApZb3UgaGF2ZSB0byBwdXQgaW4gcmlkaWN1bG91cyB2b2x1bWUgYW5kIGRlYWwgd2l0aCB0aGUgbWVudGFsIGFzcGVjdCBvZiB0aGUgaGFyc2hlc3QgZG93bnN3aW5ncyBpbiBwb2tlci4gCldoZW4gSSBmZWVsIGxpa2UgSSBnb2luZyB0byBzcGVuZCBvbiBzb21ldGhpbmcgSSBkb24gbmVlZCBJIHRyeSB0byByZW1pbmQgbXlzZWxmIHRoYXQgSSBhbSBidXlpbmcgc29tZXRoaW5nIGVsc2Ugd2l0aCB0aGF0IG1vbmV5OiBteSBmdXR1cmUgc2F2aW5ncyBnb2Fscy4gSXQgc291bmRzIGNsaWNoZSwgYnV0IHNpbmNlIEkgZm91bmQgRklSRSwgSSBiZWVuIHJlYWxseSBtb3RpdmF0ZWQgdG8gc3BlbmQgbGVzcyBiZWNhdXNlIGJ5IG5vdCBidXlpbmcgYSBzbWFsbCBpbmR1bGdlbmNlIG5vdywgSSBnZXQgbW9yZSBwZWFjZSBvZiBtaW5kIGFuIEkgZ2V0IHRvIGdldCBvdXQgb2YgdGhlIHJhdCByYWNlIHNvb25lci4gCklmIHNoZSBrZWVwcyBhdHRhY2tpbmcgdGhlIHN0YXRlIHRoYXQgdGhleSBhcmUgZ3VpbHR5IG9mIHNvbWV0aGluZyB0aGV5IHdpbGwga2VlcCBmaWdodGluZyBoZXIuIApUaWRpYW5lIE4nRGlheWUgOiBBcHJzIGxlcyBhYm9saXRpb25zIG9jY2lkZW50YWxlcywgZGVzIHRyYWl0cyBmdXJlbnQgc2lnbnMgcG91ciByYWRpcXVlciBjZXR0ZSBpZ25vbWluaWUuIEF1IGNvbmdycyBkZSBWaWVubmUsIGVuIDE4MTUsIGV0ICBjZWx1aSBkZSBWcm9uZSwgZW4gMTgyMiwgbCdob3JyZXVyIGRlIGxhIHRyYWl0ZSBuZ3JpcmUgZnV0IGRub25jZSBjb21tZSAgdW4gZmxhdSBxdWkgYSBsb25ndGVtcHMgZHNvbCBsJ0FmcmlxdWUsIGRncmFkIGwnRXVyb3BlIGV0IGFmZmxpZyBsJ2h1bWFuaXQgLiAKQW5kIHRoaXMgYWxzbyBleHBsYWluIHdoeSB5b3Ugd291bGRuIGRvIEFOWVRISU5HIGV4Y2VwdCBkb2RnZSBteSBmaXN0LCBsaWtlIGtpbGxpbmcgbWUuIEluIG15IGV4YW1wbGUgSSB3b3VsZCBub3QgYmUgdGlyZWQgYmVjYXVzZSBpbiB0aGlzIG5ldyB0aW1lbGluZSBJIG5ldmVyIHRyaWVkIHRvIHB1bmNoIHlvdS4gU28ga2lsbGluZyBtZSBkdXJpbmcgdGhvc2UgMTBzIHdvdWxkIGJlIHVzZWxlc3MgYmVjYXVzZSBpdCB3b3VsZCBiZSBjYW5jZWxsZWQuSWxLYXBpdGFubyAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ290aGlzICJlbmxpZ2h0ZW5lZCBjZW50cmlzdCIgY291bnRlciBqZXJrIGlzIGJlY29taW5nIG1vcmUgb2YgYSBjaXJjbGUgamVyay4gCkkgZmVsdCBhcm91bmQgd2l0aCBteSBmaW5nZXIgYW5kIGZvdW5kIHRoYXQgb25lIHRlcm1pbmFsIHdhcyB2ZXJ5IGhvdC4gSSBjb3VsZCBhbHNvIGZlZWwgdGhhdCB0aGUgbnV0IHdhcyBsb29zZSwgc28gSSB3ZW50IHRvIGdldCBhIHdyZW5jaCBhbmQgY2FtZSBiYWNrIHRvIHRpZ2h0ZW4gaXQuIEkgaGF2ZSB0byBjaGVjayB0aGVzZSB0aGluZ3MgZXZlcnkgbm93IGFuZCB0aGVuOyB0aGV5IGRvbid0IHVzdWFsbHkgbG9vc2VuIHVwLCBidXQgSSB3YXNuJ3QgY29uY2VybmVkLiBUaGF0IGlzLCB1bnRpbCBJIGZvdW5kIHRoYXQgSSBjb3VsZG4ndCB0aWdodGVuIGl0IGRvd24gd2l0aCB0aGUgd3JlbmNoLiBJdCBqdXN0IHNwdW4sIGJlY2F1c2UgdGhlIHRocmVhZCBpdCB3YXMgYXR0YWNoZWQgdG8gd2FzIHNwaW5uaW5nIGxvb3NlIGluIHRoZSBsZWFkIG9mIHRoZSBiYXR0ZXJ5IGx1Zy4KU2hlIHJhaXNlZCBoZXIgdHdvIGRhdWdodGVycyB3aXRoIGEgY2xlYXIgR29sZGVuIENoaWxkLiAKSW4gaXQgdGhleSByZXZpc2l0IHRoZSBlbmRhbmdlcmVkIGFuaW1hbHMgRG91Z2xhcyBhbmQgTWFyayBzYXcgdGhlIGZpcnN0IHRpbWUgYXJvdW5kIGluY2x1ZGluZyB0aGUga2FrYXBvLkhlcmUgb25lIG1hdGluZyB3aXRoIE1hcmsgQ2Fyd2FyZGluZSBoZWFkLlRoZSB3aG9sZSBzZXJpZXMgaXMgYnJpbGxpYW50bHkgZnVubnkgYW5kIGluc2lnaHRmdWwuIAonVGhlIHNlcXVlbCBpcyBNb2xseSBIYXMgTm8gR2FtZSwnIHNoZSBzYXlzLiAnSSBoYW5nIG91dCB3aXRoIG15IGdyYW5kbWEsIGdvIHRvIHNsZWVwIGF0IDguMzAgYW5kIHRoYXQncyBpdC4nCiJDaHJvbmljIGRpc2Vhc2UiIG1pZ2h0IGJlIGEgc3VycHJpc2luZyB0ZXJtIHRvIGhlYXIgaW4gY29uanVuY3Rpb24gd2l0aCBhY25lICBpdCdzIG5vdCBhIHNlcmlvdXMgaGVhbHRoIHRocmVhdCwgYW5kIGZvciBtYW55LCBpdCdzIGp1c3QgYW4gYW5ub3lpbmcgZmFjdCBvZiBsaWZlIGluIHRoZSB0ZWVuYWdlIHllYXJzLiBCdXQgdGhvc2Ugd2l0aCBzZXZlcmUsIHByb2xvbmdlZCBhY25lIGtub3cgdGhhdCBpdCBjYW4gbGFzdCBmb3IgZGVjYWRlcyBhbmQgaXMgZXh0cmVtZWx5IGRpZmZpY3VsdCB0byB0cmVhdC4gCkRhbGxhcy9Gb3J0IFdvcnRoL0FybGluZ3RvbiBNZXRyb3BsZXggRGFsbGFzIGlzIGEgbGl0dGxlIGJpdCBmdW5reSB3aGVuIGl0IGNvbWVzIHRvIHRyeWluZyB0byBuYWlsIGRvd24gaXRzIHNpemUsIGJlY2F1c2UgaXQgaXMgYSBzcHJhd2xpbmcgYXJlYSBhbmQgZW5jb21wYXNzZXMgMTIgY291bnRpZXMuIFN0aWxsLCB0aGUgbWV0cm9wb2xpdGFuIGFyZWEgaXMgdGhlIGxhcmdlc3QgaW4gVGV4YXMgYW5kIHRoZSBmb3VydGggbGFyZ2VzdCBpbiB0aGUgVVMuIFBvcHVsYXRpb24/IDYgbWlsbGlvbi4KUG9pbnQgYmVpbmcgaW4gYWxsIG9mIHRoaXMgaXMgdGhhdCBlY29ub215IGlzIHdheSBtb3JlIGNvbXBsZXggdGhhbiBpdCBzZWVtcy4gU28geW91IG1pZ2h0IGJlIGV2ZW4gcmlnaHQsIGJ1dCB3ZSBqdXN0IGd1eXMgb24gdGhlIGludGVybmV0IHdobyBkb24gaGF2ZSB0aGUgbnVtYmVycy4gMjQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29JIGtub3cgaGltIGFuZCBoaXMgY29hY2ggc2FpZCB0aGF0IHRoZXkgcmVpbnZlbnRlZCB0aGVtc2VsdmVzIGJlY2F1c2UgZXZlcnlvbmUgZ290IHRoZWlyIGV5ZXMgb24gdGhlIGd1eSBhdCB0aGUgdG9wLCBhbmQgSSBiZWxpZXZlIHRoYXQgdG8gYW4gZXh0ZW50LCBidXQgSSBhbHNvIGltYWdpbmUgQWxkbyBoYXMgc29tZSBwaHlzaWNhbCBpc3N1ZXMga2VlcGluZyBoaW0gZnJvbSBraWNraW5nLkkgbGlrZSBNYXggYnV0IHRoZXJlIGEgd2hvbGUgbG90IG9mIHBlb3BsZSBhcm91bmQgaGVyZSB0aGVzZSBkYXlzIHNheWluZyB0aGF0IEFsZG8gd2FzIHN0aWxsIGluIGhpcyBwcmltZSB3aGVuIGhlIGxvc3QgYW5kIHRoZXkgYXJndWUgdGhhdCBNYXggaXMgYmV0dGVyIHRoYW4gQWxkbyBldmVyIHdhcy5UaGlzIGd1eSB1c2VkIHRvIGJlIGtub3duIGZvciBoaXMgZXhwbG9zaXZlIGxlZyBraWNrcyB3aXRoIGxpdHRsZSB0ZWxsIGFuZCBhIHdob2xlIGxvdCBvZiBzcGVlZCBhbmQgcG93ZXIuIApTb21lIHBsYXllcnMgd2lsbCBjYWxsIGV2ZXJ5IGhhbmQgZG93biB0byB0aGUgcml2ZXIgKGxhc3QgY29tbXVuaXR5IGNhcmQgZGVhbHQgaW4gaG9sZGVtKSwgd2l0aCBoYW5kcyB0aGF0IG1vc3QgZ29vZCBwbGF5ZXJzIHdvdWxkIGZvbGQgd2l0aG91dCBxdWVzdGlvbiBpbiBhIHJlYWwgbW9uZXkgZ2FtZS4uIApUaGUgdG91cmlzdCB0cmFmZmljIGlzIHVuYXZvaWRhYmxlLCBhbmQgdGhlcmUgYXJlIGEgbG90IG9mIGNoYWlucyBzdG9yZXMuIEhvd2V2ZXIsIEkgZG8gZW5qb3kgZ3JhYmJpbmcgYSBiaXRlIHRvIGVhdCB0aGVyZS4gClRoZSBwcm9ibGVtIHdpdGggcnVsaW5nIGVsaXRlcywgaG93ZXZlciwgaXMgdGhhdCB0aGV5IGFyZSBhbHdheXMgYWZyYWlkIG9mIGxvc2luZyB0aGVpciBwb3dlci4gSXMgYXMgdHJ1ZSBvZiBnZW5kZXIgcnVsaW5nIGVsaXRlcyBhcyBpdCBpcyBvZiBlY29ub21pYyBvbmVzIChub3QgdGhhdCB0aGUgdHdvIGFyZSBzZXBhcmF0ZSkuIFdoaXRlLCBtaWRkbGUgY2xhc3MsIGhldGVyb25vcm1hdGl2ZSBtYXNjdWxpbml0eSBpcyBhbHdheXMgbG9va2luZyBvdmVyIGl0cyBzaG91bGRlciwgYWZyYWlkIHNvbWVvbmUgd2lsbCBzZWUgaXRzIHdlYWtuZXNzZXMsIGFmcmFpZCBzb21lb25lIHdpbGwgdGFrZSBpdHMgcG93ZXIgYXdheS4gClNvbWUgc29sdXRpb25zIHdvdWxkIGJlIHRvIGVpdGhlciBpbmNyZWFzZSB0aGUgbnVtYmVyIG9mIHNraW5zIHJlbGVhc2VkIHBlciBldmVudCwgb3IgcmVsZWFzZSBza2lucyBpbnRvIHRoZSB2YW5pbGxhIGxvb3QgcG9vbCBtb3JlIG9mdGVuLiBPcmlzYSBmYW5zIG1pZ2h0IGJlIGEgbGl0dGxlIGxlc3MgdXBzZXQgaWYgc2hlIGdvdCBhIGNvb2wgbmV3IGxlZ2VuZGFyeSBvciBlcGljIGxpa2UgaW4gTm92ZW1iZXIgb3IgU2VwdGVtYmVyLiBPVE9IIHRoZXJlIGEgbG90IGFib3V0IGdhbWUgZGVzaWduIEkgZG9uIGtub3cgYWJvdXQsIGl0IG1pZ2h0IHJlYWxseSBub3QgYmUgdGhhdCBlYXN5LCBtYXliZSB0aGUgdGVhbSB0aGF0IGRlc2lnbnMgYW5kIG1ha2VzIHNraW5zIGlzIHNtYWxsLiBCdXQgSSBkbyBhZ3JlZSB0aGV5IG5lZWQgdG8gc2V0IHVwIGEgc29ydCBvZiBzeXN0ZW0gZGVjaWRpbmcgd2hvIGdldHMgYSBza2luIGFuZCB3aG8gZG9lc24gYmVjYXVzZSByaWdodCBub3cgaXQgbG9va3MgbGlrZSB0aGV5IGdvIGJhc2VkIG9uIHBvcHVsYXJpdHkgYW5kIHdobyB0aGUgYXJ0aXN0cyB0aGVtc2VsdmVzIGxpa2UuCkVkaXQ6IEZvciBjbGFyaXR5IHlvdSBjYW4gbGlzdGVuIHRvIHRoZSBhdWRpbyBvbiBwcmltZSBjbGVyay4gVGhlIGp1ZGdlIHdhbnRzIHRvIG1ha2UgYSBkZWNpc2lvbiB3aXRob3V0IGhhdmluZyB0byB0YWtlIGV2aWRlbmNlL21vcmUgaGVhcmluZ3MsIHdpdGggdGhlIG9mZmVyIHRoZXkgY2FuIHJldmlzaXQgdGhlIGlzc3VlIGlmIG5lZWQgYmUgYXQgYSBsYXRlciBkYXRlLiBIb3dldmVyIGl0IGNvdWxkIGhpbmdlIG9uIHdoYXQgdGhlIHRheCBsYXd5ZXJzIHB1dCB1cCBhdCB0aGUgTWFyIDI3IGhlYXJpbmcuIApJZiB5b3UgZXhwbGFpbiB5b3VyIHNpdHVhdGlvbiB0byB5b3VyIHNjaG9vbCBmaW5hbmNpYWwgYWlkIGRlcGFydG1lbnQgdGhleSBtYXkgYmUgd2lsbGluZyB0byBwcm92aWRlIHNvbWUgZm9ybSBvZiBlbWVyZ2VuY3kgYXNzaXN0YW5jZSwgaG93ZXZlciB0aGF0IGlzIGNvbXBsZXRlbHkgYXQgdGhlaXIgZGlzY3JldGlvbi4KVGhhdCBzYWlkLCBkb24gY29tZSBpbiBoZXJlIGFuZCB0ZWxsIHBlb3BsZSB0byBxdWl0LiAKVGhlIHdheSBMT1RWIGlzIGdvaW5nIGxvb2tzIGFjdHVhbGx5IHByZXR0eSBnb29kIHRvIG1lIGluIGdlbmVyYWwgbW92aW5nIGF3YXkgZnJvbSB0aGlzIGRlZmVuc2l2ZSBzdGFuY2UgYW5kIHJlbGlhbmNlIG9uIGRlZmVuc2l2ZSBtZWNoYW5pc21zIGlzIGEgaHVnZSBzdGVwIGluIG1ha2luZyB0aGUgZ2FtZSBiZXR0ZXIuT29ncmF5SmluIEFpciBHcmVlbiBXaW5ncyAgMSBwb2ludHMgIHN1Ym1pdHRlZCAzIHllYXJzIGFnb09mIGNvdXJzZSBtZWNoYW5pY2FsLiBEbyBJIGhhdmUgdG8gcHJvdmlkZSBsaW5rcyB0byBldmVyeSBzaW5nbGUgS2VzcGEgcGxheWVyIHVzaW5nIGEgMTAga2V5bGVzcz8gb3IgY2FuIHlvdSBnbyBsb29rIGl0IHVwIHlvdXJzZWx2ZXM/IEl0cyBub3QgbWFuZGF0b3J5IGJ1dCBtb3N0IGhpZ2ggcHJvZmlsZSBLZXNwYSBwbGF5ZXJzIHVzZSAxMCBrZXlsZXNzIG1lY2hzLCBsaWtlIGZpbGNvcyBhbmQgbGVhcG9sZHMgaW4gcGFydGljdWxhci4gCkFza2luZyB0aGUgcHJlc2lkZW50IHRvIFNURlUgaXMgbm90IGNlbnNvcmluZyBoaW0gaW4gYW55IHdheSwgYW5kIHRoZSBvbmx5IHdheSB0byBtYWtlIGl0IHNvIGlzIHRvIGV4cGFuZCB0aGUgZGVmaW5pdGlvbiBvZiBjZW5zb3JzaGlwIHRvIGJlIGx1ZGljcm91c2x5IGJyb2FkIHRoYXQgYW55IHBhc3RvciB3b3VsZCBiZSBjZW5zb3JpbmcgbWUgZm9yIG5vdCBsZXR0aW5nIG1lIHN0YW5kIHVwIGFuZCByZWNpdGUgdGhlIG5hbWVzIG9mIHRoZSBmaXJzdCAxNTEgUG9rbW9uIGluIHRoZSBtaWRkbGUgb2YgY2h1cmNoLiAKQ2Fsdmluc1N0dWZmZWRUaWdlciAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KQWRkIG9saXZlIG9pbCwgZ3JvdW5kIGJsYWNrIHBlcHBlciwgc2xpY2VkIGdhcmxpYyBjbG92ZXMsIGZpbmVzIGhlcmJzLCBvcmVnYW5vLCBiYXNpbCwgZGlsbCB3ZWVkLCBiYXkgbGVhdmVzIGFuZCBicmluZyB0byBhIGJvaWwgdW5jb3ZlcmVkLgpUaGF0J3MgZG93biBmcm9tICQxOS4yIG1pbGxpb24gaW4gZmlzY2FsIHllYXIgMjAxMSwgYnV0IHVwIGZyb20gJDMuNiBtaWxsaW9uIGluIGZpc2NhbCB5ZWFyIDIwMDQuIApTdGFnZSAxNiBhbmQgMjAgd2lsbCBiZSB0aHJvdWdoIHRoZSBJdGFsaWFuIEFscHMuIFRoZSByYWNlIGNvbmNsdWRlcyB3aXRoIGEgZ3J1ZWxpbmcgY2xpbWIgb2YgdGhlIG5vdG9yaW91cyBab25jb2xhbi4gQSBwaWN0dXJlIG9mIG9ubHkgdGhlIFpvbmNvbGFuIGJlbG93LiAKTW9udHJlYWwgaXMgZWFzeSBhbmQgYXMgYSBQUiB5b3UgY2FuIHRha2UgRnJlbmNoIGNvdXJzZXMgb24gdGhlIGNoZWFwLiBNeSBodXNiYW5kIHBhaWQgOTAkIGZvciAxIHllYXIgb2YgbGVzc29ucy4gClNvbWV0aGluZyB0aGF0IHF1aWNrbHkgaWRlbnRpZmllcyB3aGljaCBmaWxlIGluIGEgY29tcGxpY2F0ZWQgdGhlbWUgaGFzIHRoZSB3b3JkLCBwaHJhc2Ugb3IgZnVuY3Rpb24gSSBuZWVkIHRvIGZpbmQgc28gSSBjYW4gcXVpY2tseSBjaGFuZ2UgYSB3b3JkIG9yIHR3bywgb3IgYSBmdW5jdGlvbi4gTXkgbm9uIHN0YW5kYXJkIGFuZCBvdXRkYXRlZCB0aGVtZSBpcyBwcmV0dHkgZXh0ZW5zaXZlIGFuZCBJbnNwZWN0IEVsZW1lbnQgaXMgdXNlZnVsIHRvIGEgZGVncmVlLCBidXQgZG9lc24gdGVsbCBtZSAiaXQgaW4gdGhpcyBwYWdlLCBvZiB0aGlzIHNlY3Rpb24sIG9mIHlvdXIgdGhlbWUgZm9sZGVycywgb24geW91ciBjcGFuZWwgZmlsZSBtYW5hZ2VyLiIgVGhlcmUgYXJlIG1hbnkgbGl0dGxlIHR3ZWFrcyBJIG1ha2UgKHllcywgdG8gYSBjaGlsZCB0aGVtZSkgaWYgSSBjb3VsZCBqdXN0IHF1aWNrbHkgZmluZCB0aGF0IGRhbW4gcGFnZS4KQmFya2luZ0Zpc2gyICAzIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpXZXJlIHRoZSBkcmF3aW5ncyByZXByb2R1Y2VkIGluIHRoZSAxOHRoIGNlbnR1cnk/IFJpZ2h0IG5vdywgSSBqdXN0IGRvbiBrbm93LiBJIGRpZCBkbyBhIHNlYXJjaCB1bmRlciAiSmFjcXVldCBEcm96IiBpbiBHYWxsaWNhIG92ZXIgdGhvdXNhbmRzIG9mIHB1YmxpY2F0aW9ucyBhbmQgYXQgZmlyc3QgYmx1c2ggdGhlcmUgKDEpIHNlZW1zIHRvIGJlIG5vdCBtYW55IGhpdHMgYW5kICgyKSBub25lIHRoYXQgSSBoYXZlIHNlZW4gaGF2ZSBhbnkgaWxsdXN0cmF0aW9ucy4gQWxzbyBldmVuIHRob3VnaCB0aGUgbWFjaGluZXMgb2YgSmFjdWV0IERyb3ogYW5kLCBzYXksIE1haWxsYXJkZXQgd3JpdGluZy9kcmF3aW5nIG1hY2hpbmUgKGxlIEpldW5lIGFydGlzdGUiKSB3ZXJlIHBvcHVsYXIgaW4gdGhlIGxhdGUgMTh0aCBhbmQgZWFybHkgMTl0aCBjLCB0aGV5IHNlZW0gdG8gbm90IGhhdmUgYmVlbiBzbyBhZnRlcndhcmRzLiAKTm8gZnJlZSB3aWxsIHdoYXRzb2V2ZXIgc28gdGhhdCBhbGwgZXZpbCB0aG91Z2h0cyBhbmQgYWN0aW9ucyBieSBwZW9wbGUgYXJlIGltbWVkaWF0ZWx5IHN0b3BwZWQgYW5kIHRoZSBwZW9wbGUgYXJlIGZvcmNlZCB0byBkbyBnb29kIHRoaW5ncyBhbmQgZXZlcnkgc2luZ2xlIHBlcnNvbiB3aWxsIGxpdmUgYSBmdWxsLCBoYXBweSBsaWZlIHRvIHRoZSBhZ2Ugb2YgMTAwIG9yIG1heWJlIGV2ZW4gb2xkZXIuIE5vIG9uZSB3aWxsIGV2ZXIgc3RydWdnbGUgb25jZSBpbiB0aGVpciBsaWZlLCBub3QgZXZlbiB3aXRoIG9wZW5pbmcgYSBwaWNrbGUgamFyIGJlY2F1c2Ugd2h5IHdvdWxkIGEgR29kIGFsbG93IHN1Y2ggYSBzdHJlc3NmdWwgdGhpbmcgdG8gaGFwcGVuPyBBbmQgdGhlbiBpbiB0aGUgZW5kIHdoZW4gd2UgZWFjaCBkaWUgd2UgYmUgdGVsZXBvcnRlZCB0byBzb21lIG1hZ2ljYWwgaGVhdmVuIHdoZXJlIGV2ZXJ5b25lIGdldHMgZW50cnkgYmVjYXVzZSB0aGV5IGVhcm5lZCBpdCBmb3Igbm90IGhhdmluZyBjb21taXR0ZWQgYSBzaW5nbGUgc2luIGluIHRoZWlyIGVudGlyZSBsaWZlIGV2ZW4gaWYgaXQgd2FzIGFsbCBmb3JjZWQuIEF0IHRoaXMgcG9pbnQgdGhleSB3aWxsIHRoZW4gbGl2ZSBmb3IgZXRlcm5pdHkgaW4gYW5vdGhlciBwZXJmZWN0IHV0b3BpYSBhbmQgbmV2ZXIgaGF2ZSBhIGZyZWUgdGhvdWdodCBvciBvdmVyY29tZSBhIHN0cnVnZ2xlLi4gClRoZSBtZWV0aW5ncyB3ZXJlIG1hbmRhdG9yeSBhbmQgbm9ib2R5IHdhcyBhbGxvd2VkIG9udG8gdGhlIGpvYnNpdGUgd2l0aG91dCBpdC4gSWYgeW91IGNhbWUgdG8gd29yayBsYXRlLCB0aGUgc3VwZXJ2aXNvciBoYWQgdG8gc3RvcCB3aGF0IGhlIHdhcyBkb2luZyB0byBnaXZlIHlvdSBhIHJ1bmRvd24gb2YgdGhhdCBkYXlzIG1lZXRpbmcgc28geW91IGNvdWxkIGdldCB0byB3b3JrLiBPbmNlIEkgd2FzIHNlbnQgdG8gZmV0Y2ggYSB0b29sIGluIGEgaHVycnkuIApFdCBiaWVuIHNyLCBzaSB2b3VzIGFpbWV6IHF1ZSB2b3MgY2hldmV1eCBhaWVudCB1bmUgYXBwYXJlbmNlIG5hdHVyZWxsZSwgdmFwb3Jpc2V6IGxhIHNvbHV0aW9uIDUwLzUwIHN1ciB2b3MgY2hldmV1eCBtb3VpbGxzIGFwcnMgdW5lIGRvdWNoZSBldCBwZWlnbmV6IGxlcy4gCkVsbGluZ3RvbiwgMzMsIExhcyBWZWdhczsgTWFyaWUgRGVzbWluZSBWYWxlcmlvLCAyMywgTGFzIFZlZ2FzOyBBbnRob255IEh1cnRhZG8sIDMwLCBTYW50YSBQYXVsYSwgQ2FsaWYuOyBEYXJ2ZXIgSmVybWFpbmUgQmFsbGV3LCAzNywgTGFzIFZlZ2FzOyBKZXNzaWNhIERlY2tlciwgMjAsIExhcyBWZWdhczsgSm9obiBBbGxlbiBTb3JnZXQsIDIzLCBMYXMgVmVnYXM7IEphbWVzIEJ1Zm9yZCwgNDQsIEhlbmRlcnNvbjsgYW5kIExlYWggTW9udGVzLCAzMSwgTGFzIFZlZ2FzLi4gCk92ZXIgdGhlIGNvdXJzZSBvZiA2QyBpcyAxMEYuIEl0IGp1c3Qgc2VlbXMgbGlrZSBhIGZldyBkZWdyZWVzIENlbHNpdXMgd291bGQgYmUgbW9yZSBkcmFzdGljIG9mIGEgZmVlbCBmb3IgdXMgdG8gd2FudCB0byBzd2l0Y2ggdG8gICBlc3BlY2lhbGx5IHdoZW4gd2UgYWxyZWFkeSBhcmUgcHJlY2lzZSB3aXRoIEYgbGlrZSBoaWdoIGFuZCBsb3cgb2YgeDAgcmFuZ2UgZGVncmVlcy5NZXRyaWMgZmVlbHMgbW9yZSBvZiBhIHJlYWxpdHkgZm9yIHVzLCBlc3BlY2lhbGx5IHdoZW4gd2UgdXNlIGl0IGFscmVhZHkgaW4gdmFyaW91cyB0aGluZ3MgYXMgaXQgaXMuIApUaGlzIHdhcyBDYWRhJ3MgZmlyc3QgZnVsbCB5ZWFyIGJlaW5nIGFnZSBlbGlnaWJsZSBpbiBWZWdhcywgYW5kIGhlIGVuZGVkIHVwIGJyaW5naW5nIGEgbW91bnRhaW4gb2YgY2hpcHMgdG8gdGhlIGhlYWRzIHVwIGZpbmFsZSBpbiBmcm9udCBvZiBhIGxhcmdlIGFuZCByYXVjb3VzIGNyb3dkIHRoYXQgaGFkIHdhaXRlZCBpbiBsaW5lIHVwIHRvIHNpeCBob3VyczogJDEzNiBtaWxsaW9uIGluIGNoaXBzIHRvIE1vb24ncyAkNTkgbWlsbGlvbi4gSGUgaGFkIHN1cnZpdmVkIG51bWVyb3VzIGZsaW5ncyB3aXRoIGVsaW1pbmF0aW9uIHRvIGdldCB0aGF0IGZhciwgYXQgb25lIHBvaW50IHJ1bm5pbmcgZGVhZCBsYXN0IGF0IHRoZSB0YWJsZSBvZiBuaW5lLiAKSXQgaGFzLCBJIHN1cmUsIHN0b3BwZWQgdGhlIG1lbnRhbCBoZWFsdGggcHJvYmxlbXMgSSB3YXMgZXhwZXJpZW5jaW5nLCB0b28sIGNvbWJpbmVkIHdpdGggU3QgSm9obiBXb3J0LiAKVHVybiBhIEogYW5kIHJpdmVyIGlzIDMuIEkgdHVybiBteSBjYXJkcyBvdmVyIGFuZCBoZSBhbG1vc3QgbXVja3MgYXMgaGUgaXMgc3RhcmluZyBhdCB0aGUgYm9hcmQuIApFdmVuIHRob3VnaCBoZSBzdWZmZXJzIGZyb20gZGVwcmVzc2lvbiBoZSBpcyBkcml2ZW4gYW5kIGhhcyBiZWVuIHN1Y2Nlc3NmdWwuIEhlIGxpa2UgYSBsb3Qgb2YgSXJpc2ggcGVvcGxlIHdobyBoYXZlIGdvbmUgYWJyb2FkIGFuZCBkb25lIHdlbGwgYnV0IGhpcyBsaWZlIGlzIGp1c3Qgbm90IGZ1bGZpbGxlZCBhbmQgaGUgaXMgZHJpbmtpbmcgaGltc2VsZiB0byBkZWF0aCBiZWNhdXNlIG9mIHRoaXMgZ3VpbHQgZWF0aW5nIGF3YXkgYXQgaGlzIHNvdWwuIApDbGFzcyAzIEdhbWluZzogQ2xhc3MgdGhyZWUgZ2FtaW5nIGluY2x1ZGVzIGFsbCB0aGUgZGlmZmVyZW50IGZvcm1zIG9mIGdhbWVzIHdoaWNoIGFyZSBleGNsdWRlZCBmcm9tIHRoZSBsaXN0IG9mIGNsYXNzIDIgYW5kIGNsYXNzIDMgZ2FtaW5nIGZvciBpbnN0YW5jZSBjYXNpbm9zLCBzbG90IG1hY2hpbmVzLCBibGFja2phY2tzLCByb3VsZXR0ZSBhbmQgY3JhcHMuIApUaGUgIk5ld2x5d2VkIEdhbWUiIGFuZCAiTm90IFNvIE5ld2x5d2VkIEdhbWUiIGFyZSBodW1vcm91cyBmYXZvcml0ZXMgdGhhdCBjaGFsbGVuZ2UgYSBjb3VwbGUncyBrbm93bGVkZ2Ugb2Ygb25lIGFub3RoZXIgd2l0aCBwcml6ZXMgdGhhdCBpbmNsdWRlIHdpbmUgYW5kIGRpbm5lciB1cGdyYWRlcy4gCkdldCB0aGVtIHRvIGNsZWFuIGV2ZXJ5dGhpbmcgcmlnaHQgYmVmb3JlIHlvdSBwdXQgeW91ciBmZWV0IGluLCBhbmQgY29uc2lkZXIgYnJpbmdpbmcgeW91IG93biB0b29scyBmb3IgdGhlbSB0byB1c2UuIEFsc28sIGlmIHlvdSBkbyBkZWNpZGUgdG8gZ28gYWhlYWQgYW5kIGdldCBhIHBlZGljdXJlLCB5b3UnbGwgcHJvYmFibHkgd2FudCB0byBza2lwIHRoZSBmb290IGFuZCBjYWxmIG1hc3NhZ2UgYmVjYXVzZSB0aGUgbmFpbCB0ZWNobmljaWFuIHdpbGwgbGlrZWx5IG5vdCBiZSBhIHByZWduYW5jeSB0cmFpbmVkIHJlZmxleG9sb2dpc3Q7IGhpdHRpbmcgY2VydGFpbiBwcmVzc3VyZSBwb2ludHMgY2FuIHRyaWdnZXIgbGFib3IuIApUaGUgb25seSB0aGluZyBpdCBzZWVtcyB0byBiZSBnb29kIGZvciBpcyBkaXNydXB0aW9uLCBzbyBtYXliZSBpdCBiZSBzb2xpZCBpbiBzcXVhZHMuIApUaGVyZSBhcmUgYWxzbyB0aGluZ3MganVzdCBhYm91dCBteXNlbGYgdGhhdCBJIGRvbiB0aGluayBteSBwYXJ0bmVyIG9mIDUgeWVhcnMgcmVhbGx5IG5lZWRzIHRvIGtub3cgYWJvdXQuIE15IGJlc3QgZnJpZW5kIG1pZ2h0IHRoaW5rIGl0IGZ1bm55IHRvIGhlYXIgdGhhdCBJIHBvb3BlZCA1IHRpbWVzIGJlZm9yZSBsdW5jaCBhbmQgYWxsIG9mIHRoZW0gYnVybmVkIGJlY2F1c2UgSSBhc2tlZCBmb3IgZG91YmxlIGphbGFwZW5vcyBvbiBteSBidXJnZXIuIApUaGUgR3JhbnQgU3R1ZHksIGFzIGl0IGJlY2FtZSBrbm93biwgY29udGludWVzIHRvZGF5IGFmdGVyIDcyIHllYXJzLiBSZWFtcyBvZiBkYXRhIGFib3V0IHRoZSBzdHVkeSBwYXJ0aWNpcGFudHMgYXJlIGxpa2UgdW5hYnJpZGdlZCBiaW9ncmFwaGllcywgY2hhcnRpbmcgb3ZlcnNlYXMgY29tYmF0LCBtYXJyaWFnZXMsIGRpdm9yY2VzLCBoaXJpbmdzIGFuZCBmaXJpbmdzLiAKQXMgZm9yIHdoeSBkb2VzbiBEci4gU2l4IGRvIHRoYXQsIGl0IHRoYXQgdGhleSBkbyBub3QgaGF2ZSB0aGUgbW9yYWwganVzdGlmaWNhdGlvbjogYmVpbmcgYSBkZW9udG9sb2dpc3QgdGhleSBjYW4ga2lsbCBiZWNhdXNlIHRoYXQgdW5ldGhpY2FsLCBldmVuIGlmIGl0IHByZXZlbnRzIHRoZSB3b3JzZSB0aGluZ3MuIFRoZXkgbm90IGJlaW5nIGluc3RydWN0ZWQgdG8gYnkgdGhlIEZvdW5kYXRpb24gcGVyIHRoZWlyIGNvbnRyYWN0dWFsIG9ibGlnYXRpb24sIHRoZXkgc3dvcmUgdG8gc2VjdXJlLCBjb250YWluLCBhbmQgcHJvdGVjdCwgbm8gZGVzdHJveSwgZGVzdHJveSBkZXN0cm95Li4gCkkgY2FuJ3QgZXZlbiBzbG91Y2ggYW55bW9yZSEgSSBrbm93IEknbSBzaG9ydCB3YWlzdGVkLCBidXQgSSByZWFsbHkgaG9wZSBJJ20gbm90IGdvaW5nIHRvIGZlZWwgbGlrZSB0aGlzIGZvciAzKyBtb250aHMuIApGZWVsIHRoZSBzcGVlZC4gClRoYW5rcyBmb3IgaGF2aW5nIG1lLiBBbmQgaXQgYWxsIHdlbnQgZnJvbSB0aGVyZS4gSW4gdGhpcyBoaWdoIHN0YWtlcyB3b3JsZCBvZiBwb2tlci4gV2hvIHdhcyB0eXBpY2FsbHkgc2l0dGluZyBhdCB5b3VyIHRhYmxlPyBUaGVyZSB3YXMgdmVyeSByZWNvZ25pemFibGUgZmFjZXMsIHN1Y2ggYXMgVG9ueSBNYWd1aXJlLCBMZW8gRGljYXByaW8sIEJlbiBBZmZsZWNrLiBNYXR0IERhbW9uIG9uY2UuIE1hdHQgRGFtb24gb25jZS4gQW5kIHRoZXJlJ3MgYW4gYXNzb3J0bWVudCBvZiBvdGhlciBwZW9wbGUgd2hvIGdlbmVyYWxseSBoYWQgYSBwcmV0dHkgaGlnaCBuZXQgd29ydGguIApPa2F5LCBub3cgdGhpbmsgYWJvdXQgdGhpcywgaG93IGlzIHdoYXQgeW91IGp1c3Qgc2FpZCBhdCBhbGwgY29uc3RydWN0aXZlIHRvIHRoZSBjb252ZXJzYXRpb24gd2UgaGF2aW5nPyBJIG5vdCB0cnlpbmcgdG8gaGUgYSBkaWNrLCBJIGFza2luZyBhIGxlZ2l0IHF1ZXN0aW9uLiBJIGFscmVhZHkgc3RhdGVkIG15IHBlcnNvbmFsIGJlbGllZnMsIGFuZCB0aGUgY29tcHJvbWlzZSBJIHdpbGxpbmcgdG8gbWFrZS4KWWVzICBpdCBpcy4gCkhvdyBpcyB0aGUgam9iIGhlIG1vdmVkIGZvciBnb2luZz8gSXMgaXQgcG9zc2libGUgaGUgc3RydWdnbGluZyB3aXRoIG90aGVyIHBhcnRzIG9mIGhpcyBsaWZlIGFuZCBob3BpbmcgdGhhdCBoYXZpbmcgYSBiYWJ5IHdpbGwgZ2l2ZSBoaW0gYSBjaGFuY2UgdG8gc3VjY2VlZCBhdCBzb21ldGhpbmc/ClN0b2NrQ2FsYyBSZXBvcnRzIERvd25sb2FkIGEgY29tcHJlaGVuc2l2ZSByZXBvcnQgZGV0YWlsaW5nIHF1YW50aXRhdGl2ZSBhbmFseXRpY3Mgb2YgdGhpcyBlcXVpdHkuIEZvciBzdWJzY3JpYmVycyBvbmx5LgpTbyB0aGUgRkFRIGlzIGluIGEgcHJldHR5IHNvcnJ5IHN0YXRlIGF0IHRoZSBtb21lbnQgYXMgaXMgcG9pbnRlZCBvdXQgdG8gbWUgb24gYSBmYWlybHkgcmVndWxhciBiYXNpcy4gQSBsb3Qgb2YgdGhlIGxpbmtzIGFyZSBkZWFkIG5vdyBhbmQgaXQgd2FzIHdyaXR0ZW4gYXQgYSB0aW1lIHdoZW4gcXVlc3Rpb25zIHdlcmUgZGlzY291cmFnZWQgaW4gdGhpcyBzdWIgYW5kIHNvIHdhcyB0cnlpbmcgdG8gcHJlZW1wdCB0aGUgbW9yZSBjb21tb24gb25lcy4gCkhlIGhhc24gZG9uZSBhbnkgb2YgdGhvc2UsIHNvIHlvdSBtaWdodCBhc3N1bWUgaGUgaGFwcHkgd2l0aCBpdCBvcGVyYXRpbmcgYXMgaXQgaXMuIApUaGlzIHdpbGwgYWxzbyBlbGltaW5hdGUgYW55IHByb2JsZW1zIGFzc29jaWF0ZWQgd2l0aCBwZW9wbGUgdGhpbmtpbmcgdGhhdCBzb21lb25lIHRvb2sgdGhlaXIgY2hpcHMuIApBcyBhIFNEQywgdGhleSBqdXN0IGRvbiBoYXZlIGFzIG5pY2UgYSBib3R0b20gZW5kIHBpY2t1cCBhcyBhbiBMREMuIApQZW9wbGUgZGVzZXJ2ZSBzZWNvbmQgY2hhbmNlcy4gCllvdSBhcmUgZ2l2aW5nIHRoZSBpbXByZXNzaW9uIHRoYXQgeW91IHdvdWxkIHJhdGhlciBiZSBlbHNld2hlcmUuIERvIG5vdCBsZWFuIG9uIGRlc2tzLCB3YWxscywgb3IgY2hhaXJzLiAKT2YgY291cnNlLCB3ZSBub3QgaGVyZSB0byBncmlldmUgZm9yIHlvdXIgbG9zc2VzIGluIHBva2VyIGluIGFkdmFuY2UuIElmIHlvdSBhIGZpcnN0IHRpbWUgcGxheWVyIGFuZCB5b3Ugd2FudCB0byBwbGF5IGFnYWluc3QgbGl2ZSBwbGF5ZXJzLCB0aGVuIGdvb2QgZm9yIHlvdS4gQW5kIHdlIGhlcmUgdG8gaGVscCBieSBwcm92aWRpbmcgeW91IHdpdGggdXNlZnVsIHRpcHMgdGhhdCBqdXN0IG1heSBiZSB0aGUga2V5cyB5b3UgbmVlZCB0byBzdXJ2aXZlIHJvdW5kIGFmdGVyIHJvdW5kIG9mIHBva2VyLgpWb2xjYW5pY0tpcmJ5MiAgNTggcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KQW1vbmcgYnVzaW5lc3NlcyBzdXNwZWN0ZWQgb2YgYmVpbmcgc2V4IHRyYWZmaWNraW5nIGZyb250cywgbWFzc2FnZSBwYXJsb3JzIGFyZSBzZWNvbmQgb25seSB0byBlc2NvcnQgc2VydmljZXMgaW4gY2FsbCB2b2x1bWUgdG8gdGhlIHRyYWZmaWNraW5nIGhvdGxpbmUuIE92ZXIgdGhlIGxhc3Qgc2V2ZXJhbCB5ZWFycywgdGFzayBmb3JjZXMgYW5kIGNvYWxpdGlvbnMgdG8gZmlnaHQgaHVtYW4gdHJhZmZpY2tpbmcgYW5kIHJhaXNlIGF3YXJlbmVzcyBoYXZlIGJlZW4gZm9ybWVkIHRocm91Z2hvdXQgdGhlIHJlZ2lvbiB0byB0YWNrbGUgYSBwcm9ibGVtIHRoYXQgb2Z0ZW4gZ29lcyB1bnJlY29nbml6ZWQgb3IgdW5kZXJyZXBvcnRlZC4uIApUaGUgc3RhdGUgYmFyIHNvY2lldHkgZG9lcyByZWZlcnJhbHMuIFlvdSBhcmUgYW4gdW5hcm1lZCBtYW4gaW4gYW4gYXJ0aWxsZXJ5IGR1ZWwsIGFza2luZyB3aGV0aGVyIGFuIHVtYnJlbGxhIGlzIHRoZSByaWdodCBzb2x1dGlvbi4gCkkgd29yayBhdCBhbiB1cHNjYWxlIDQgc3RhciBzcGEgYW5kIGRpZCBhbiBBTUEgb24gdGhpcyBhIHdoaWxlIGJhY2suCk92ZXJ2aWV3IGZvciBSc3ViczMzCk1pa2UgUGVuY2UsIGNoYWlybWFuIG9mIHRoZSBIb3VzZSBSZXB1YmxpY2FuIENvbmZlcmVuY2UsIHdyb3RlIGluIGEgbGV0dGVyIHRvIG1lbWJlcnMgYWhlYWQgb2YgdGhlIFZldGVyYW5zIERheSBicmVhay4gCk5hdHVyYWxseSwgdGhlIGluY3VtYmVudCBwcm92aWRlcnMgcmVhbGl6ZWQgdGhhdCBvdGhlcnMgY291bGQgZG8gdGhpcyB0b28sIHNvIHRoZXkgYXBwcm9hY2hlZCB0aGUgZ292ZXJuaW5nIGJvZGllcywgcmFuZ2luZyBmcm9tIGZlZGVyYWwgdG8gc3RhdGUgdG8gbG9jYWwsIGFuZCB3aXRoIHZhcnlpbmcgZGVncmVlcyBvZiBzdWNjZXNzIGluIGVhY2gsIGJlZ2FuIHRvIGV4cGxhaW4gaG93IHRoZXkgY291bGQgbXVjaCBtb3JlIGVhc2lseSByZWFjaCB0aGUgaXNvbGF0ZWQgYXJlYXMsIGFuZCBob3cgdGhleSBjb3VsZCBwcm92aWRlIHRoZSBnb3Zlcm5tZW50cyB0aGVtc2VsdmVzIHdpdGggbmV3IGFuZCBiZXR0ZXIvZmFzdGVyIHNlcnZpY2VzIGlmIHRoZXkgd2VyZSBncmFudGVkIGV4Y2x1c2l2aXR5IGluIHRoZSB0ZXJyaXRvcnkuIGxhd3Mgd2VyZSBlbmFjdGVkIGFsbCBvdmVyIHRoaXMgZ3JlYXQgbGFuZCBwcm9oaWJpdGluZyBhbnlvbmUsIGluIG1hbnkgY2FzZXMgaW5jbHVkaW5nIGNpdGllcyBhbmQgY291bnRpZXMgdGhlbXNlbHZlcyBmcm9tIGJ1aWxkaW5nIHNxdWF0IGluIHRoZSB0ZWxlY29tbXVuaWNhdGlvbnMgZmllbGQuCkFzIHlvdSBzYWlkLCB5b3UgZ290dGEgZ3JvdyB1cCBhbmQgZGVjaWRlIGZvciB5b3Vyc2VsZi4gCkxldXIgYnV0IGVzdCBjbGFpciwgbW1lIHNpIHVuZSBzdHJhdGdpZSBnbnJhbGUgZXN0IHBvdXIgbCdpbnN0YW50IGFic2VudGUsIGlscyB2ZXVsZW50IHNlbWVyIGxhIHJ1aW5lIGRhbnMgbGVzIHNwaHJlcyBkZSBjZXMgY29uZGl0aW9ucyBkJ29wcHJlc3Npb24uLiAKQXBvcmlhIGlzIGEgcGVyZm9ybWFuY2Ugc293IGJ1dCBpdCBsb29rcyBhbmQgcGxheXMgd29uZGVyZnVsbHkgICBhIHZlcnkgYXRtb3NwaGVyaWMgYW5kIGFlc3RoZXRpY2FsbHkgcGxlYXNpbmcgZXhwZXJpZW5jZSB0aGF0IHNvbWUgaGF2ZSBjb21wYXJlZCB0byB0aGUgTXlzdCBnYW1lLiBCdXQgaWYgeW91IGNoZWNrIG91dCB0aGUgZ2VucmUgdGFncyBvbiB0aGUgU3RlYW0gc3RvcmUgeW91IG1pZ2h0IGZpbmQgeW91cnNlbGYgY29uZnVzZWQuIFdlbGwsIGl0IHR1cm5zIG91dCB0aGUgdGFncyB3ZXJlbiBleGFjdGx5IGx5aW5nLiBTdGlsbCBhIHdvbmRlcmZ1bCBzdG9yeSwgYW5kIHRvbGQgd29uZGVyZnVsbHkgd2l0aG91dCB3b3JkcywgSSBjYW4gc2FmZWx5IHJlY29tbWVuZCBqdXN0IGNoZWNraW5nIG91dCBhIHlvdXR1YmUgY29tcGlsYXRpb24gb2YgdGhlIGN1dHNjZW5lcyBhcyB3ZWxsLgpPdXIgY3JlZGl0IGZpbGVzIGFyZSBmcm96ZW4uIEkgaGF2ZSBiZWVuIHVzaW5nIHR3byBjcmVkaXQgY2FyZHMgaW4gbXkgbmFtZSBzaW5jZSBKdW5lIDIwMTguIApJZiB0aGlzIHdlcmUgYSBub3JtYWwgcGFyZW50LCBpdCBtaWdodCBiZSBjb25zaWRlcmVkIGp1c3QgYSBtb21lbnQgb2YgaW5zZW5zaXRpdml0eSBmcm9tIGEgbm9ybWFsbHkgbG92aW5nIHBhcmVudC4gQnV0LCBmcm9tIGEgY29udGV4dCBvZiBhYnVzZSwgd2UgYXNzdW1lIGEgY2FtcGFpZ24gb2YgbWluZCBnYW1lcywgZnJlcXVlbnQgYXR0ZW1wdHMgdG8gdGVhciBkb3duIHRoZSBPUCBzZW5zZSBvZiB3b3J0aCBhbmQgc2Vuc2Ugb2Ygc2VsZiwgZnJlcXVlbnQgYXR0YWNrcyBvbiB0aGUgT1AgYm91bmRhcmllcyBhbmQgbWF5YmUgZXZlbiBwaHlzaWNhbCBvciBzZXh1YWwgYWJ1c2UuLiAKVGhlIHNraW4sIGV2ZW4gd2l0aG91dCBhIG1hc3NhZ2UgY3JlYW0sIG1hc3NhZ2UgbG90aW9uIG9yIG90aGVyIHN1cHBsaWVzIG9mZmVyZWQgaW4gbWFzc2FnZSBjbGluaWNzLCBnYWlucyBiZW5lZml0cyBmcm9tIHRoZSBhY3Rpdml0eSBpbmR1Y2VkIGJ5IG1hc3NhZ2UuIFRoaXMgYWN0aXZpdHkgcmVtb3ZlcyB0aGUgZGVhZCBza2luIGNlbGxzIGFsbG93aW5nIHRoZSBwb3JlcyB0byByZW1haW4gb3Blbi4gVGhpcyBlbmNvdXJhZ2VzIHN1cHBsZW5lc3MgYW5kIGVsYXN0aWNpdHkgb2YgdGhlIHNraW4gYXMgd2VsbCBhcyBpbmNyZWFzZXMgc2tpbiByZXNwaXJhdGlvbi4gClN0ZXAgNTogSWYgeW91IGhhcHBlbiB0byBoYXZlICQ0NTAgKyAkNDUgeW91IGNhbiBidXkgaW4gdG8gdGhpcyBsZXZlbC4gSWYgeW91J3ZlIHdlcmUgbHVja3kgZW5vdWdoIHRvIGNvbWUgaW4gMXN0IG9yIDJuZCB0aGUgcHJldmlvdXMgc3RlcCwgaXQgY29zdHMgeW91IG5vdGhpbmcuIFRoZSBmaXJzdCB0d28gZmluaXNoZXJzIGdvIHRvIHRoZSBmaW5hbCBzdGVwLCB0aGlyZCBwbGFjZSBnZXRzIHRvIHBsYXkgc3RlcCA1IGFnYWluLgpJIGRvbiB3YW50IHRvIGxvb2sgbGlrZSBhIHBsYXN0aWMgQmFyYmllIGRvbGwsIGp1c3QgbGlrZSBJIHRha2VuIHZlcnkgZ29vZCBjYXJlIG9mIG15IHNraW4uLiAKV2l0aCB0aGUga25vd2xlZGdlIHRoYXQgeW91IGFyZSBnb2luZyB0byBnYWluIGZyb20gcmVhZGluZyAxMDEgV2lubmluZyBUb3VybmFtZW50IFBva2VyIE1vdmVzIHlvdSB3aWxsIGJlIGFibGUgdG8gaW1wbGVtZW50IGEgZmV3IFBva2VyIFZhcmlhdGlvbnMgYW5kIHdhbGsgaW50byB5b3VyIG5leHQgUG9rZXIgVG91cm5leSB3aXRoIGNvbmZpZGVuY2UgZW5vdWdoIHRvIGRvbWluYXRlIHlvdXIgUG9rZXIgUm9vbS4gCkhvcGVmdWxseSBpbiB0aGUgZnV0dXJlIGluc3RlYWQgb2YgdXNpbmcgYSBtb2RlbCB3aGVyZSBhdCBhbnkgZ2l2ZW4gdGltZSBhIGN1c3RvbWVyIGlzIHVzaW5nIGEgc2luZ2xlIHVwc3RyZWFtIHBhdGh3YXkgd2hpY2ggd2hlbiBhIHByb2JsZW0gb2NjdXJzIHJlcXVpcmVzIGEgNSBtaW51dGUgb3V0YWdlIHRvIHN3aXRjaCB0byBhbm90aGVyIHBhdGh3YXksIHNvbWUgZm9ybSBvZiBsaW5rIGJvbmRpbmcgaXMgdXNlZCBzbyB0aGF0IG11bHRpcGxlIHBhdGh3YXlzIGFyZSB1c2VkIGZyb20gYSBzaW5nbGUgY3VzdG9tZXIgdG8gdXBzdHJlYW0gaG91c2VzIGF0IGFsbCB0aW1lcyBhbmQgYXMgbGF0ZW5jeSBpbmNyZWFzZXMgb3IgcGFja2V0IGxvc3MgaW5jcmVhc2VzLCB0cmFkaXRpb25hbCBwYWNrZXQgYnkgcGFja2V0IHJvdXRpbmcgZGVjaXNpb25zIGFyZSBtYWRlIHRvIHJvdXRlIGFyb3VuZCB0aGUgcG9vciBsaW5rLiAKQnV0LCB0aGUgdGVhY2hpbmdzIGFyZSBzdGlsbCBwYWx0cnkgaW4gbXkgb3Bpbmlvbi4gCkhpcyBtdXNpYyBlc3RhYmxpc2hlcyBhIG1vb2QsIGJ1dCBkb2VzbiBkZW1hbmQgdGhlIGxpc3RlbmVyIGF0dGVudGlvbi4gSXQgY2FuIHBsYXkgaW4gdGhlIGJhY2tncm91bmQgd2l0aG91dCB0b28gbXVjaCBkcmF3aW5nIGF0dGVudGlvbiB0byBpdHNlbGYuIFRoaXMgbWFrZXMgaXQgYXR0cmFjdGl2ZSB0byBhZHZlcnRpc2VycyBhbmQgZmlsbSBkaXJlY3RvcnMuIEFzIGEgcmVzdWx0LCBsaXN0ZW5lcnMgaGVhciBpdCBtb3JlIG9mdGVuLCB3aGljaCBtYWtlcyBpdCBmYW1pbGlhciB0byB0aGVtLCBhbmQgYXVkaWVuY2VzIGFsc28gbGlrZSB3aGF0IGZhbWlsaWFyLgpJIG5lZWQgdG8gYmUgYWJsZSB0byBnaXZlIGFuIG9mZmljaWFsIHR3byB3ZWVrcyBub3RpY2UgYXQgd29yay4gClRoZW9yZXRpY2FsbHksIHdlIGRpdm9yY2UsIGl0IHdvdWxkIHN1Y2ssIGFuZCBhdCB0aGUgZW5kIG9mIHRoZSBkYXkgSSBzdGlsbCBiZSBkb2luZyB0aGUgd29yayBJIGRvIGFuZCBoYW5naW5nIG91dCB3aXRoIEplc3VzCldoZXRoZXIgaXQgd2FzIGxvb2tpbmcgY29tZm9ydGFibGUgd2l0aCB0aGUgVW5pdGVkIFN0YXRlcyBlbnRyeSBhdCB0aGUgd29ybGQgY2hhbXBpb25zaGlwIGFzIHRoZSBldmVudCB5b3VuZ2VzdCBwbGF5ZXIgYXQgYWdlIDE4LCBjb21wZXRpbmcgaW4gdHdvIHdvcmxkIGp1bmlvciB0b3VybmFtZW50cywgdGhlIGZhbWlseSBob2NrZXkgbGluZWFnZSBvciBkb21pbmF0aW5nIGF0IHRoZSBOQ0FBIGxldmVsLCB0aGUgMTkgeWVhciBvbGQgT3JsYW5kbywgRmxhLiwgbmF0aXZlIGhhcyBkcmF3biByYXZlIHJldmlld3MuIE5hdGlvbmFsIERldmVsb3BtZW50IFRlYW0gcHJvZHVjdCBoYXMgYSBjb29sIGhlYWQgZm9yIHRoZSBnYW1lIGFuZCBzcGVlZHkgdHJhbnNpdGlvbiB0aGF0IHdpbGwgYmUgbGlrZSBhIGdldCBvdXQgb2YgamFpbCBjYXJkIGZvciB0aGUgQ2FudWNrcy4KV2FzIGEgdmVyeSBjb2xvcmZ1bCBjaGFyYWN0ZXIsIGJlaW5nIGFuIGFjdG9yLCB0aGVuIGZpbmRpbmcgaGlzIHdheSBvdXQgdG8gdGhlIEFtZXJpY2FuIHdlc3QgYW5kIHJldHVybmluZyB3aXRoIHNldmVyYWwgb2YgdGhlIEluZGlhbnMgaGUgZW5jb3VudGVyZWQgYW5kICJleGhpYml0aW5nIiB0aGVtIGF0IHRoZSBWaWN0b3JpYSBUaGVhdHJlLCBhbmQgdGhlbiBiZWNvbWluZyBhbiBJcmlzaCBibG9ja2FkZSBkZWZlbmRlciBiZWZvcmUgdHVybmluZyB0byBiYWxsb29uaW5nLiAKSXQgZ29ubmEgYmUgYSBzZXJpb3VzIHByb2JsZW0gd2hlbiBteSB3aWZlIGFuZCBJIGhhdmUga2lkcyB0aG91Z2gsIHRoZXJlIG5vIGZ1Y2tpbmcgd2F5IEkgbGVhdmluZyBteSBraWRzIGFsb25lIHdpdGggdGhlbSBpZiB0aGV5IHdvbiBhZ3JlZSB0byBiZSAxMDAlIHNvYmVyIHdoZW4gdGhlIGtpZHMgYXJlIGFyb3VuZC4gCk1heWJlIEknbGwgd3JpdGUgdGhlbSBpbiBhbm90aGVyIGJsb2cuLiAKRHUga2FubnN0IGRpY2ggYXVmIGRlbiBlaW5zdGVsbHVuZ3N0ZXN0IHZvcmJlcmVpdGVuLCBlaW5mYWNoIGdvb2dsZW4gZGEgc29sbHRlIGVpbmlnZXMga29tbWVuLiAKWWVzLCBvZiB0aGUgdHdlbnR5IHBlcmNlbnQgb2YgcGVvcGxlIHdobyB1c2UgaXQsIG9ubHkgYWJvdXQgZml2ZSBwZXJjZW50IG9mIHRoZW0gd2lsbCByZWFkIHRocm91Z2ggZXZlcnl0aGluZyBhbmQgdHJ5IGV2ZXJ5dGhpbmcuIFNvIHJlc3QgYXNzdXJlZCB5b3Ugd2lsbCBiZSBmaW5lIGFuZCB0aGlzIGlzIG5vdCBzb21ldGhpbmcgZXZlcnlvbmUgd2lsbCBiZSB1c2luZyB0byBjdXJic2lkZSB5b3VyIHByb2ZpdHMuIE9uZSB0aGluZyBJIHdpbGwgdGVsbCB5b3UgdGhvdWdoIGlzIGlmIHlvdSBtYWtlIHN1cmUgdG8gZG8gYW55dGhpbmcgd2l0aCB0aGlzIGluZm9ybWF0aW9uYWwgbWF0ZXJpYWwsIG1ha2Ugc3VyZSB0byB3YXRjaCB0aGUgdmlkZW9zLiBUaGV5IGNhbiBkZWZpbml0ZWx5IGJyaW5nIGdyZWF0IGVuam95bWVudCB0byBhIGxvdCBvZiB0ZXh0IGxlYXJuaW5nLiBIb3BlZnVsbHksIHRoZXkgd2lsbCBicmluZyB5b3UgbW9uZXkgYXMgd2VsbC4KVG90YWwgQXZhaWxhYmxlIE1hcmtldC4gV2Ugd2VyZSBpbm5vdmF0b3JzIDEwMCB5ZWFycyBhZ28sIHdlIHdvdWxkIGJlIGluIHRoZSBob3JzZSBidXNpbmVzcy4gClNoZSBoYXMgcGVvcGxlIHdobyBjYXJlIGZvciBoZXIuIApUd28gZGlmZmVyZW50IHR5cGVzIG9mIHZlaGljbGVzIGEgc2VkYW4gYW5kIGEgdGFuay4gSSB3YW50IHRvIGFyZ3VlIHRoYXQgdGhlIHNlZGFuIGhhcyBsZXNzIHBvdGVudGlhbCBmb3IgZGFtYWdlIHRoYW4gdGhlIHRhbmsuIApZIGdvdHRhIHN0b3Agd2l0aCB0aGlzIGJhYnkgYXNzIHJvdXRpbmUgdGhhdCBtZW4gZG9uIGdldCBzaGl0IGluIHRoaXMgd29ybGQuIEhlIHZhY3V1bW1pbmcgdG9vLiBObyBraWRzID0gbm8gY2hpbGRjYXJlLCBub3QgbGl2aW5nIHRvZ2V0aGVyID0gbm8gaG91c2V3b3JrLiAKQSBjb21tb24gcGFydCBvZiBtZWRpdGF0aW9uIGlzIHRvIHJlYWNoIGEgcG9pbnQgd2hlcmUgeW91IGltYWdpbmUgeW91IGFyZSBmbHlpbmcuIFlvdXIgYm9keSBlZmZlY3RpdmVseSBsb3NlcyBhbGwgaXRzIGZlZWxpbmcgYW5kIHlvdSBzZWVtIHRvIHJlY2VpdmUgbm8gaW5wdXQgdG8geW91ciBzZW5zZXMgYW55bW9yZS4gSXQgc2VlbXMgdG8gYmUganVzdCB5b3VyIG1pbmQgaGFuZ2luZyBpbiBtaWQgYWlyLCB3YXRjaGluZyBkb3duIGFzIGl0IGZsb2F0cyB0aHJvdWdoIHlvdXIgcm9vbSwgcG9zc2libHkgdXBzaWRlIGRvd24sIGFzIHlvdSBubyBsb25nZXIgZmVlbCBzdWJqZWN0ZWQgdG8gdGhlIGZvcmNlcyBvZiBncmF2aXR5Li4gCk1ha2luZyB0aGUgTGlzdEhvdyBXZSBQaWNrZWQgdGhlIExpc3RBICAgQlRoZSBBZHZlbnR1cmVzIG9mIEF1Z2llIE1hcmNoQWxsIHRoZSBLaW5nIE1lbkFtZXJpY2FuIFBhc3RvcmFsQW4gQW1lcmljYW4gVHJhZ2VkeUFuaW1hbCBGYXJtQXBwb2ludG1lbnQgaW4gU2FtYXJyYUFyZSBZb3UgVGhlcmUgR29kPyBJdCBNZSwgTWFyZ2FyZXRUaGUgQXNzaXN0YW50QXQgU3dpbSBUd28gQmlyZHNBdG9uZW1lbnRCZWxvdmVkVGhlIEJlcmxpbiBTdG9yaWVzVGhlIEJpZyBTbGVlcFRoZSBCbGluZCBBc3Nhc3NpbkJsb29kIE1lcmlkaWFuQnJpZGVzaGVhZCBSZXZpc2l0ZWRUaGUgQnJpZGdlIG9mIFNhbiBMdWlzIFJleUMgICBEQ2FsbCBJdCBTbGVlcENhdGNoIDIyVGhlIENhdGNoZXIgaW4gdGhlIFJ5ZUEgQ2xvY2t3b3JrIE9yYW5nZVRoZSBDb25mZXNzaW9ucyBvZiBOYXQgVHVybmVyVGhlIENvcnJlY3Rpb25zVGhlIENyeWluZyBvZiBMb3QgNDlBIERhbmNlIHRvIHRoZSBNdXNpYyBvZiBUaW1lVGhlIERheSBvZiB0aGUgTG9jdXN0RGVhdGggQ29tZXMgZm9yIHRoZSBBcmNoYmlzaG9wQSBEZWF0aCBpbiB0aGUgRmFtaWx5VGhlIERlYXRoIG9mIHRoZSBIZWFydERlbGl2ZXJhbmNlRG9nIFNvbGRpZXJzRiAgIEdGYWxjb25lclRoZSBGcmVuY2ggTGlldXRlbmFudCBXb21hblRoZSBHb2xkZW4gTm90ZWJvb2tHbyBUZWxsIGl0IG9uIHRoZSBNb3VudGFpbkdvbmUgV2l0aCB0aGUgV2luZFRoZSBHcmFwZXMgb2YgV3JhdGhHcmF2aXR5IFJhaW5ib3dUaGUgR3JlYXQgR2F0c2J5SCAgIElBIEhhbmRmdWwgb2YgRHVzdFRoZSBIZWFydCBpcyBBIExvbmVseSBIdW50ZXJUaGUgSGVhcnQgb2YgdGhlIE1hdHRlckhlcnpvZ0hvdXNla2VlcGluZ0EgSG91c2UgZm9yIE1yLiBCaXN3YXNJLCBDbGF1ZGl1c0luZmluaXRlIEplc3RJbnZpc2libGUgTWFuTCAgIE5MaWdodCBpbiBBdWd1c3RUaGUgTGlvbiwgVGhlIFdpdGNoIGFuZCB0aGUgV2FyZHJvYmVMb2xpdGFMb3JkIG9mIHRoZSBGbGllc1RoZSBMb3JkIG9mIHRoZSBSaW5nc1RoZSBNb3ZpZWdvZXJMb3ZpbmdMdWNreSBKaW1UaGUgTWFuIFdobyBMb3ZlZCBDaGlsZHJlbk1pZG5pZ2h0IENoaWxkcmVuTW9uZXlNcnMuLiAKQmVjYXVzZSB0aGVyZSBubyBldmFsdWF0aW9uIG9mIHRob3NlIHNraWxscyB3aXRoIGFuIGFzc2Vzc21lbnQgb2YgYXBwbGljYWJsZSBjYXJlZXJzIHdpdGhpbiB0aGUgc2Nob29sLiBZb3UgZ2V0IHN0cmFpZ2h0IEEgaW4gbWF0aCBidXQgc3RyYWlnaHQgQyBpbiBsaXRlcmF0dXJlLCB5b3UgbWF5IGp1c3QgdGhpbmsgeW91IGdvb2QgYXQgbWF0aCB3aXRoIG5vIHJlYWwgaWRlYSB3aGF0IHRoYXQgbWVhbnMgaW4gcmVhbCBsaWZlLiAKU2lsdmVyIEJ1ZHdlaXNlciBTcGlubmVyIFBva2VyIENhcmQgUHJvdGVjdG9yIGhhcyB0dXJuZWQgdGhpcyBidXNpbmVzcyBpbnRvIGEgdmVyeSBsdWNyYXRpdmUgb25lIGluIHRoZSByZWNlbnQgZmV3IHllYXJzLiAKV2hlbiB0aGUgYm9keSBkb2VzIG5lZWQgdGhhdCBwcm9kdWN0LCBpdCBjYW4gYmUgc2lnbmFsZWQgaW4gbWFueSB3YXlzIGJ1dCBvbmUgZm9yIGV4YW1wbGUgY291bGQgYmUgYW4gZW52aXJvbm1lbnRhbCBjaGFuZ2UuIApOb3cgdGhlIGNoYWxsZW5nZSBpcyBzZXBhcmF0aW5nIHRoZSB0d28gYnVzaW5lc3Nlcy4gCkknbSBzb3JyeSB0aG9zZSB0aGluZ3MgaGFwcGVuZWQgdG8geW91LiBCdXQgdGhleSBkb24ndCBoYXZlIHRvIGtlZXAgaGFwcGVuaW5nIHRvIHlvdS4gClBvbGljZSBvZmZpY2VycyBkbyBub3QgaGF2ZSBhICJyZWFzb25hYmxlIGV4cGVjdGF0aW9uIG9mIHByaXZhY3kiIHdoaWxlIHByZWZvcm1pbmcgdGhlaXIgcHVibGljIGR1dGllcy4KQW5kIHNwZWFraW5nIG9mIHRob3NlIHNraW4gY2FyZSBwcm9kdWN0cywgdGhleSBtYXkgY2F1c2UgZXZlbiBtb3JlIHRyb3VibGUgdGhhbiBwaG90b3NlbnNpdGl2aXR5LiAKSS4gTCdpbnRncmF0aW9uIHNvdXMgbCdhbmdsZSBvcmdhbmlxdWUgOiBsJ21lcmdlbmNlIGQnYXNzb2NpYXRpb25zIHRlbXBvcmFpcmVzLiAxODAKVGhlIHJlY2lwaWVudHMgb2YgdGhpcyBhd2FyZCBhcmUgc2VsZWN0ZWQgYnkgYSBwYW5lbCBvZiBzZXJ2aWNlIG1pbmRlZCBVQ0xBIHN0YWZmIG1lbWJlcnMuIApJdCB3aWxsIG5vdCBpbnN0YWxsIGEgZGF0YWJhc2UgbWFuYWdlcjsgcHJldmlvdXMgdmVyc2lvbnMgaW5zdGFsbGVkIE15U1FMLCBidXQgdGhlcmUgd2VyZSByZXBvcnRzIG9mIG1hbnkgaW5zdGFsbGF0aW9uIHByb2JsZW1zIGR1ZSB0byBwcm9ibGVtIE15U1FMIGluc3RhbGxzLiBGdXJ0aGVybW9yZSwgbWFueSB1c2VycyBwcmVmZXIgUG9zdGdlU1FMIG92ZXIgTXlTUUwgb3IgYWxyZWFkeSBoYXZlIFBvc3RncmVTUUwgaW5zdGFsbGVkLiAKVHJhZGluZyBpbiB0aGUgbGFuZSBpcyB0aGUgd2hpY2ggbXVzdCBiZSBleHBhbmRlZCB0byBwb3VyIGZhc3Rlci4uIApMb3JlbmEsIG5vdyB1c2luZyBoZXIgbWFpZGVuIG5hbWUsIEdhbGxvLCBzZWVtcyBmYXIgbW9yZSBzYW5lIHRoYW4gaGUgZG9lcy4gUGVyaGFwcyBiZWNhdXNlIHNoZSBhbHdheXMgd2FzLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c0ZhbWlseSBhbmQgS2lkc011c2ljIGFuZCBHaWdzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25Xb2xsb25nb25nIGNsdWIgZ2FtYmxlcnMgbG9zdCBtb3JlIHRoYW4kMTQzbWlsbGlvbiBvbiBwb2tlciBtYWNoaW5lcyBpbiB0aGUgbGFzdCBmaW5hbmNpYWwgeWVhciwgdGFraW5ndGhlIGNpdHkgdG8gN3RocGxhY2Ugb24gdGhlIGxpc3Qgb2YgYmlnZ2VzdCBsb3NlcnMsIG5ldyBmaWd1cmVzIHNob3cuIFRoZXNlIGxvc3NlcyB3ZXJlIG9uIG1hY2hpbmUgdHVybm92ZXIgb2YgJDEuNTIgYmlsbGlvbiBmb3IgdGhlIFdvbGxvbmdvbmcgbG9jYWwgZ292ZXJubWVudCBhcmVhIChMR0EpLCBhY3Jvc3MgMzggY2x1YnMgdGhhdCBoYXZlIHBva2llcyAgdGhlIG1vc3QgdmVudWVzIG9mIGFueSBMR0EgaW4gTlNXLiAKVGhlIGN1cnJlbnQgb2Ygb3VyIHdhdGVycyBzaG91bGQgYmUgc3dpZnQgaWYgaXQgaXMgcmVuZXdhbCB3ZSBhcmUgaG9waW5nIGZvci4uIApJIGRpZG4gZ2l2ZSBtdWNoIChhbnkpIHRob3VnaHQgdG8gImFjY2VwdGFibGUgZm9ybXMgb2YgbGVhcm5pbmcgZ29hbHMiLkkgZG9uIGhhdmUgYSBndXQgcmVhY3Rpb24gdG8gdGhpcyBzdWJtaXNzaW9uLiBJIHRoaW5rIGl0IG5vdCBzdWNoIGEgYmFkIHBvc3QgYmVjYXVzZSBpdCBleGFjdGx5IHRoZSBzb3J0IG9mIHRoaW5nIEkgZm91bmQgbXlzZWxmIGFza2luZyBpbiBhIGdlbmVyYWwgc2Vuc2Ugd2hlbiBJIHN0YXJ0ZWQgbmV3IHByb2plY3RzLlRoZSBvbmUgdGhpbmcgSSB3b3VsZCBtZW50aW9uIGlzIHRoYXQgaXQgd291bGQgYmUgcHJlZmVyYWJsZSBpZiB0aGUgcXVlc3Rpb24gd2FzIGFza2VkIGluIHRoZSBjb250ZXh0IG9mIGEgc3BlY2lmaWMgZ29hbC4gCkdyZWF0ZXIgdHJvY2hhbnRlcmljIGJ1cnNpdGlzCkl0IGEgZHJ5LCBiaXR0ZXIga2luZCBvZiBjb2xkIHRoYXQgZ29lcyBzdHJhaWdodCB0byB0aGUgYm9uZXMuIApTbyB3aGF0IHdlIGhhdmUgaGVyZSBpcyBadWxmaXFhciBNaXJ6YSwgb3RoZXJ3aXNlIGEgcG9saXRpY2FsIG5vbiBlbnRpdHksIGJlY29tZSBhIG5hdGlvbmFsIGZpZ3VyZSBiYXNlZCBvbiBoaXMgc3BlY2lmaWMgdGFyZ2V0aW5nIG9mIGFuIGV0aG5pYyBncm91cCBhbmQgdGhlIGxhcmdlc3QgcmVwcmVzZW50YXRpdmUgcG9saXRpY2FsIHBhcnR5IGZvciB0aGF0IGdyb3VwLiBXaGF0IHRoZSBwdW5jaGxpbmU/IFRoZSBtb3JlIHRoYXQgTW9oYWppcnMgYXJlIGRlbW9uaXNlZCBpbiB0aGUgcmVzdCBvZiB0aGUgY291bnRyeSwgdGhlIGNsb3NlciB0aGUgZW1icmFjZSBiZXR3ZWVuIHRoZW0gYW5kIHRoZSBNUU0gYmVjb21lcy4gQWZ0ZXIgYWxsLCB3aG8gZWxzZSB3aWxsIG1pZGRsZSAgYW5kIGxvd2VyIG1pZGRsZSBjbGFzcyBVcmR1IHNwZWFraW5nIEthcmFjaGlpdGVzIHR1cm4gdG8/IFRoZSBhcm15IHRoYXQgY29uZHVjdGVkIG9wZXJhdGlvbiBDbGVhbiB1cD8gVGhlIEltcmFuIEtoYW4gdGhhdCB1bmRlcm1pbmVkIEphdmVkIE1pYW5kYWQ/IFRoZSBQUFAgb2YgUHVra2EgUWlsYT8gVGhlIE11bmF3d2FyIEhhc3NhbiB0aGF0IGNhbiBvcGVyYXRlIHdpdGhvdXQgdGhlIGJsZXNzaW5ncyBvZiB0aGUgSlVJPyBBcyBzb21lb25lIGZhbW91c2x5IG9uY2Ugc2FpZCwKRmFybSB2aXNpdHNPdXIgTWFyY2ggY2FsZW5kYXJzIGFyZSBmaWxsaW5nIHVwIHdpdGggZmFybSB2aXNpdHMsIGFzIGFsbCBuZXcgZmFybWVycyBhbmQgcmFuY2hlcnMgcmVjZWl2ZSBhIGZhcm0gdmlzaXQgZnJvbSBCQ0ZNIHN0YWZmIG9uY2UgdGhleSdyZSBhcHByb3ZlZCB0byBiZSBhdCB0aGUgbWFya2V0LiAKSWYgeW91IGZvb3Rsb29zZSBhbmQgZmFuY3kgZnJlZSwgdGhhdCBwZXJmZWN0IHRpbWUgZm9yIHJpc2sgdGFraW5nIGFuZCBhZHZlbnR1cmUuIAozKSBUaGF0IGhlbHBzICAgYSBsaXR0bGUuIEJldHRlciB0aGFuIHNvbWUgcmFuZG9tIGxpc3QsIGJ1dCB5b3UgYXJlIHN0aWxsIGdvaW5nIHRvIGJlIG9uIHRoZSBob29rIGZvciB0aGUgdXNlIG9mIHRoZSBwZXJzb25hbCBkYXRhICAgd2hldGhlciB5b3UgZ2F0aGVyZWQgdGhlIGRhdGEgZGlyZWN0bHkgb3IgYWNxdWlyZWQgZnJvbSBhIHRoaXJkIHBhcnR5LiBZb3VyIGNvbXBhbnkpLiAKVGhleSBsb29rIGZhbmNpZXIgYnV0IEkgYmVsaWV2ZSB0aGV5IGRvIHRoZSBleGFjdCBzYW1lIHRoaW5nLCBhbmQgdGhleSBtdXN0IGJlIG1ha2luZyBhIG1hc3NpdmUgYW1vdW50IG9mIG1vbmV5IG9uIHRoZXNlIHBhbmVscyB3aGljaCBvbmx5IGhhdmUgYSB0d28geWVhciB3YXJyYW50eSBvbiB0aGVtLiBBIGdvb2QgSW5jYW5kZXNjZW50IGxpZ2h0IGlzIHJlYWxseSB0aGUgd2F5IHRvIGdvLCB0aGUgYnVsYnMgY2FuIGVhc2lseSBiZSByZXBsYWNlZCBmb3IgYSBmZXcgZG9sbGFycyBhbmQgc29tZSBtYW51ZmFjdHVyZXJzIG9mZmVyIGEgbGlmZXRpbWUgd2FycmFudHkgb24gdGhlIGJhc2VzLCBlbGVjdHJvbmljIHBvcnRpb24gb2YgdGhlIGxpZ2h0cywgZXRjLi4gCldoaWxlIHRoZSBhbHVtaW51bSBjYXNlIGlzIGFzIHByb2Zlc3Npb25hbCBhcyBjYW4gYmUsIHRoZXJlIGFyZSBzZXZlcmFsIG90aGVyIGJlbmVmaXRzIHRvIHRoaXMgcG9rZXIgY2hpcCBzZXQuIApGaW5hbGx5IHRoZXNlIHR3byBnaXJscyBjb21lIHVwIHdpdGggc2hpdCBhdHRpdHVkZXMuIEkga25ldyB0aGlzIHdvdWxkIGVuZCBwb29ybHkuIFRoZXkgd2UgdHJlYXRpbmcgbWUgbGlrZSBnYXJiYWdlIGFuZCBkZWNpZGVkIHRvIG1ha2UgZnVuIG9mIG15IGhvY2tleSBqZXJzZXkgSSB3YXMgd2VhcmluZyAoVGhlIFdpbm5pcGVnIEpldHMgaGFkIGp1c3QgcmV0dXJuZWQgdG8gdGhlIE5ITCBzbyBJIHdhcyB3ZWFyaW5nIGEgdmludGFnZSBqZXJzZXkgSSBoYWQuIAoiQSBsb3Qgb2YgcG9rZXIgbWFjaGluZXMgYXJlIGluIGNsdWJzIHRoYXQgYXJlIGNvbW11bml0eSBvd25lZC4gCk5vdywgb25jZSB5b3UgaGF2ZSBkZXRlcm1pbmVkIHdoYXQgcGFydCBvZiB5b3VyIEFsbCBDbGF5IFBva2VyIENoaXBzIHdlYnNpdGUgdGhhdCB5b3Ugd2FudCB5b3VyIHJlYWRlcnMgdG8gZm9jdXMgb247IGl0IGlzIHRpbWUgdG8gY3JlYXRlIHJlbGV2YW50IG1hdGVyaWFsIHRoYXQgd2lsbCBwcm9tcHQgdGhlbSB0byBkbyBqdXN0IHRoYXQuIElmIHlvdSB3YW50IHRoZW0gdG8gZm9jdXMgb24gdGhlIFBlcnNvbmFsaXplZCBDbGF5IFBva2VyIENoaXBzIHRoYXQgeW91IGhhdmUsIHRoZW4gZG8gbm90IG1ha2UgdGhlIG1pc3Rha2Ugb2YgdGFsa2luZyBhYm91dCBQb2tlciBKZXdlbHJ5IGluIHRoZSBlbWFpbC4gWW91IHdpbGwgd2FudCB0byBoaWdobGlnaHQgdGhlIGFyZWEgdGhhdCB5b3Ugd2FudCB0aGVpciBmb2N1cyBvbiBzcGVjaWZpY2FsbHkgdGhyb3VnaG91dCB0aGUgZW1haWwuIEl0IGlzIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB0aGUgaW5mb3JtYXRpb24gdGhhdCB5b3UgbGlzdCBpcyBmdW4gYW5kIGVudGVydGFpbmluZyBhbGwgYXQgb25jZS4gUmVtZW1iZXIsIHdoZW4gcGxhY2luZyBpbmZvcm1hdGlvbiBpbiB0aGUgZW1haWwgYmUgc3VyZSB0byBpbnN0aWxsIGEgc2Vuc2Ugb2YgZXhjaXRlbWVudCBpbiB0aGUgcmVhZGVycy4KQWZ0ZXIgSSBjYW1lIGhlcmUgSSBhbHNvIGZvdW5kIHRoYXQgdGhlcmUgd2FzIGp1c3Qgc28gbXVjaCB0aGF0IEkgd2FudGVkIHRvIGRvLiAKUEFOVEhFUlMgUG9ydCBNYWNxdWFyaWUgU3BvcnRzIENsdWIgd2lsbCBiZSBzb2xkIHdpdGggYSBsb2NhbCBlbnRpdHkgZm9ybWVkIHRvIHRha2Ugb3ZlciBpdHMgb3BlcmF0aW9ucy4KNCkgQ2F0YWxpbmE6IDIwMjUgMjEwNSwgMTAwRSA1MEUgZm9yIENJTS4gVGhlIHNlY29uZCBzZXNzaW9uIGluIHRoaXMgbGF0ZSBhdXR1bW4gRktLIHRvdXIuIFdlIG1hZGUgYW4gYWdyZWVtZW50IHllc3RlcmRheSBhYm91dCBoZXIgbWFraW5nIG1lIGN1bSB3aXRoaW4gb25lIGhvdXIuIEluIGFuIGV4IGtpbm8gcm9vbSwgNDAgbWluIEJKIHdpdGggbXkgZmlyc3QgcG9wIGluIHRoaXMgdG91ci4gTXVzdCByZXBlYXQsIGFjdHVhbGx5IEkgbWFkZSBhIHByb21pc2UgdG8gbWFrZSBoZXIgY3VtIGFnYWluIHRvbW9ycm93LiBMZWZ0IDIzMzAsIEknbSBzb3JyeSB0byBmaW5kIFlyYSBhbmQgQ29zbWluYSBzbyBidXN5IHRvbmlnaHQgdG9vLgpTb21lIGlzc3VlcyB3aWxsIGFycml2ZSBvbiBuaWdodGx5IGJ1dCBtb3N0IGFyZSBidWdzIGFuZCB0aGV5IHdpbGwgYmUgZml4ZWQgc29vbi4gSnVzdCBnZXR0aW5nIHJpZCBvZiB0aGUgYmxvYXR3YXJlIGNhbiBzcGVlZCB1cCBhIHN5c3RlbSBsaWtlIGNyYXp5LCBzaW5jZSB0aGVyZSBhcmUgbm8gY3ljbGVzIGFuZCBtZW1vcnkgYmVlbiB3YXN0ZWQgb24gc2hpdC4uIApJZiB5b3UgbmVlZCBoZWxwIGJlY2F1c2UgeW91IGxlYXJuaW5nIGFuZCBuZWVkIGEgbWVudG9yIHRvIGdldCB5b3Ugc3RhcnRlZCwgdGhlcmUgYSBkZWNlbnQgY2hhbmNlIHNvbWVvbmUgbWlnaHQgaGVscCB5b3Ugb3V0IGlmIHlvdSBhc2sgbmljZWx5IGFuZCBzb3VuZCBsaWtlIHlvdSB3aWxsaW5nIHRvIHB1dCBpbiBzb21lIGVmZm9ydCB0byBsZWFybi4gQnV0IHBsZWFzZSwgZG9uIGp1c3QgZ28gYXJvdW5kIGFza2luZyBwcm9mZXNzaW9uYWxzIHRvIGRvIHRoZWlyIGpvYnMgZm9yIGZyZWUuQlRXLCBteSBjb25zdWx0aW5nIHJhdGUgaXMgJDI0MC9oci4gCldlbnQgdG8gYSBtb3ZpZSBhIHdlZWsgYWdvIGFuZCBvdXQgb2YgdGhlIDQwIHBlb3BsZSB0aGVyZSwgbm9ib2R5IGxpZnRlZCBhIGZpbmdlciB3aGVuIHRoZSBzY3JlZW4gd2VudCBibGFjayBmb3IgMTAgbWludXRlcyBidXQgdGhlIGVudGlyZSB0aGVhdGVyIHdhcyBjb21wbGFpbmluZyBhYm91dCAidGltZSB0aGlzIiBhbmQgInRpbWUgdGhhdCIuIApMYSBydW5pb24gZGVzIGRvY3VtZW50cyBkJ3VuZSBoaXN0b2lyZSBkJ2Ftb3VyIGVudHJlIHVuIHBldXBsZSBldCBsdWkgbW1lLCBlbnRyZSB1biBwZXVwbGUgZXQgbGEgdmllLCBldCBzdXJ0b3V0IGVudHJlIHVuIHBldXBsZSBldCBzb24gRGlldS4gCiJPbmNlIHRoZSB3b3JkIGdvdCBvdXQgdGhhdCBpdCB3YXMgbm8gbG9uZ2VyIGJlaW5nIGVuZm9yY2VkIHRvIHRoZSBkZWdyZWUgaXQgd2FzIHByZXZpb3VzbHksIHBlb3BsZSBmZWx0IG1vcmUgY29tZm9ydGFibGUsIiBCdWdnIHNheXMuIEl0IHdhc24ndCB1bmNvbW1vbiB0byBzZWUgMjAgcGVvcGxlIGhhbmdpbmcgb3V0IGluIHRoZSBwbGF6YSBzZWxsaW5nIGJvdGggc2V4IGFuZCBkcnVncy4KSXQgd2FzIGFyb3VuZCAxMCBQTSBhbmQgd2FzIGhvbGRpbmcgaGVyIGhhbmQgdG8gcHJvdmlkZSB0YWN0aWxlIGNvbWZvcnQgYmVjYXVzZSBzaGUgd2FzIHJlc3RsZXNzIGluIHRoYXQgbW9tZW50LCBoZW5jZSB0aGUgdmlzaXQuIApUaGUgQkYgd2lsbCBoYXZlIG1vcmUgam9iIG9wcG9ydHVuaXRpZXMgdGhlcmUuIEhlIGhhcyAiY29ubmVjdGlvbnMiIHRoYXQgaGUgZG9lcyBub3QgaGF2ZSB3aGVyZSB3ZSBhcmUgbm93LiAKMy4yIFRoZSBTZXJ2aWNlcyBzaGFsbCBiZSB1c2VkIG9ubHkgaW4gYSBub25jb21tZXJjaWFsIG1hbm5lci4gWW91IHNoYWxsIG5vdCwgd2l0aG91dCB0aGUgZXhwcmVzcyBhcHByb3ZhbCBvZiBCRywgZGlzdHJpYnV0ZSBvciBvdGhlcndpc2UgcHVibGlzaCBhbnkgbWF0ZXJpYWwgY29udGFpbmluZyBhbnkgc29saWNpdGF0aW9uIG9mIGZ1bmRzLCBhZHZlcnRpc2luZyBvciBzb2xpY2l0YXRpb24gZm9yIGdvb2RzIG9yIHNlcnZpY2VzLiAKSXQgdG9vayB1cyB1bnRpbCAxMToxMCBhbSB0byBmaW5kIHRoZSBwcm9ibGVtLi4gCkhhbnNvbiB3YXMgc2lnbmVkIHVwIHRvIHRoZSB0YXggY3V0cyBhbmQgc2hlIHNob29rIENvcm1hbm4gaGFuZCBvbiBhIGRlYWwsIGJyaW5naW5nIFBldGVyIEdlb3JnaW91IGFuZCBCcmlhbiBCdXJzdG9uIHdpdGggaGVyLiBUaGVuIHRoZSBMb25nbWFuIGJ5IGVsZWN0aW9uIHdhcyBjYWxsZWQgYW5kIExhYm9yIHJlYWxpc2VkIHRoZXkgbmVlZGVkIHRvIHdpbiBvdmVyIE9uZSBOYXRpb24gdm90ZXJzIHdobyBwcmVmZXJlbmNlZCBjYW5kaWRhdGUgU3VzYW4gTGFtYiBpbiAyMDE2LiAKR2l2ZW4gdGhhdCB0aGUgbGFzdCBmZXcgYm9va3Mgb2YgbWluZSBoYXZlIGJlZW4gV2FsbCBTdHJlZXQgcmVsYXRlZCB0aGUgbmV4dCBmZXcgd29uJ3QgYmUsIEknbSBtb3Zpbmcgb24gYnV0IG5ldmVydGhlbGVzcywgdGhlIGxhc3QgZmV3IGhhdmUgYmVlbiwgc28gaGUgc2VlbWVkIGxpa2UgYSByZWFsbHkgZ29vZCBwZXJzb24gdG8gc2l0IGRvd24gYW5kIHRhbGsgdG8uCkkgZG9uJ3QgdGhpbmsgaGUgYmVsaWV2ZXMgaGVyLCBidXQgaGUgZG9lcyBkcm9wIGl0IGV2ZW50dWFsbHkgYmVjYXVzZSB0aGUgdHJ1dGggb2YgdGhlIG1hdHRlciBpcyBoZSBuZXZlciBob25lc3RseSBjYXJlZCBhYm91dCBoZXIuLiAKKEJlc2lkZXMsIHRoZXJlIHdhc24ndCBqdXN0IG9uZSBzZXJ2ZXIsIGJ1dCAxNDAuKUFuIGFkdmFuY2VkIGludmVzdGlnYXRpb24gb2YgYW4gYWR2YW5jZWQgaGFja2luZyBvcGVyYXRpb24gcmVxdWlyZXMgc2lnbmlmaWNhbnRseSBtb3JlIHRoYW4ganVzdCBhY2Nlc3MgdG8gc2VydmVycy4gClRoaXMgd2FzIGZvdXIgbW9udGhzIGZvbGxvd2luZyB0aGUgY29tcGxldGlvbiBvZiBhIHdlZWsgb2YgaW50ZW5zaXZlIHByb2Nlc3Npbmcgb2YgdGhlIFJBVjQgYnkgdGhlIFdpc2NvbnNpbiBTdGF0ZSBDcmltZSBMYWJvcmF0b3J5LiAKQ29tbWVudHMgYW5kIHBvc3RzIHRoYXQgYXJlIGh1cnRmdWwgb3IgbWFkZSB3aXRob3V0IGEgYmFzaWMgdW5kZXJzdGFuZGluZyBvZiB0aGUgcnVsZXMgb3Igc3ViamVjdCBtYXR0ZXIgZGlzY3Vzc2VkIGhlcmUgd2lsbCBiZSByZW1vdmVkLgpJbiBtYW55IGNpcmN1bXN0YW5jZXMsIHRoZSBmYXZvcml0ZSBzdGVyZW90eXBlIG9mIHNlbmlvciBjaXRpemVucyBlbmpveWFibGUgaW4gYSB2ZXJ5IG51cnNpbmcgaG91c2Vob2xkIGlzIHRocm93biByaWdodCBvdXQgdGhlIHdpbmRvdy4gQXMgaGVhbHRoIHJlbGF0ZWQgZGV2ZWxvcG1lbnRzIGhhdmUgaGVscGVkIHRvIGV4dGVuZCBleGlzdGVuY2UgZXhwZWN0YW5jeSwgYSBsb3QgbW9yZSBhbmQgbXVjaCBtb3JlIHNlbmlvciBjaXRpemVucyBhcmUgcHJvZHVjaW5nIHRoZSBkZWNpc2lvbiB0byBvYnRhaW4gb3V0IGFuZCBnZXQgcGxlYXN1cmUgZnJvbSBsaWZlLiAKRXZlcnkgZ2FtZSwgZmVlbHMgU3VyZXNoLCBoYXMgYW4gZWxlbWVudCBvZiBnYW1ibGluZy4gIldoYXQgaGFwcGVucyBpbiB0aGUgZ3lta2hhbmFzIHdoZXJlIHBlb3BsZSBwbGF5IHRlbm5pcyBvciBzcXVhc2g/IGlzIG9uIG1lIGlmIEkgd2luLCB0aGV5IHNheS4gV2hhdCBpcyBpdCBpZiBub3QgYSB3YWdlcj8gRXZlbiBjaGVzcyBoaW5nZXMgb24gYSB0aHJvdyBvZiB0aGUgY29pbiB0aGUgd2lubmVyIGdldHMgdG8gcGxheSB3aGl0ZSwiIGhlIGFza3MuIApZdXAsIHlvdSBoYXZlbiBkaXNjb3ZlcmVkIHdoaWNoIHNpdHVhdGlvbnMgYXJlIGdvb2QgZm9yIGJ1YmJsaW5nIHlldC4gU3RhcnQgdG8gcHJhY3RpY2UgdGhpcyBhIGxvdC4gVHJlYXQgeW91ciBidWJibGVzIGFzIHByZWNpb3VzIHJlc291cmNlcyBhbmQgbG9vayB0byBtYXhpbWl6ZSB0aGVpciB2YWx1ZS4gClNvIEkganVzdCB0b2xkIGhlciBJIGhhdmUgbm8gaWRlYSB3aGF0IHRvIGJ1eSBhdCB3aG9sZSBmb29kcyBiZWNhdXNlIG5vIEFzaWFuIHNob3BzIGZvciBBc2lhbiBzdHVmZiB0aGVyZSBhbmQgSSByYW4gYXdheS4uIAooRXZlbiB0aG91Z2ggSSBkaWRuIGJyaW5nIHJhaW4gcGFudHMgbXlzZWxmIGFuZCBuZXZlciB1c2VkIG15IGhlYWRuZXQgaW4gMTggYnV0IEkgd2FzIHRvbGQgdGhpcyBpcyBub3QgcGFyIGZvciB0aGUgY291cnNlKUJlIHN1cmUgdG8gcGxhbiBzb21lIHBvc3NpYmxlIE11bnJvZSBzdW1taXRzISBJdCBpcyB3b3J0aCBpdCB0byBiYWcgYXQgbGVhc3Qgb25lIGFsb25nIHRoZSB3YXkuU28gZmFyIEkgb24gZGF5IHRocmVlIG9mIGtldG8uIEkgaGF2aW5nIHRyb3VibGUgZ2V0dGluZyBlbm91Z2ggc2FsdCwgYnV0IEkgY3VycmVudGx5IGRyaW5raW5nIGJvbmUgYnJvdGggc28gdGhhdCBzaG91bGQgaGVscC4gCkZhc2hpb24gU3R5bGUKVGhlbiBoZSBtb3ZlZCBvbiB0byBSZW5lZSBaZWxsd2VnZXIgYW5kLCBsYXRlciwgaGlzIG1hc3NhZ2UgdGhlcmFwaXN0LiAKU2hvdWxkbiB5b3UganVzdCBiZSBoYXBweSBzdGFycyBpcyB3aWxsaW5nIHRvIGludmVzdGlnYXRlIHRoZXNlIGtpbmRzIG9mIHRoaW5ncz8gSSBhbSBub3Qgc3VyZSB3aGF0IHlvdXIgYmVlZiBpcyB3aXRoIHRoZSBtb2QgKG15IG9ubHkgYmVlZiBpcyB1c2luZyBtb2QgcG93ZXJzIHRvIHB1c2ggaGlzIHBlcnNvbmFsIGFnZW5kYSksIGJ1dCBpdCBmb3Igc3VyZSBzZWVtcyBsaWtlIHlvdSBoYXZlIHNvbWV0aGluZyB1cCB5b3VyIGFzcyB0b28uCkJlZm9yZSB0aGUgY2FwIGVyYSwgYSBzdWNjZXNzZnVsIGxhcmdlIG1hcmtldCB0ZWFtIHdhcyBhYmxlIHRvIHN0b2NrIHVwIG9uIHBsYXllcnMgaW4gYSB3YXkgdGhhdCBsZXNzIHN1Y2Nlc3NmdWwgLyBzbWFsbCBtYXJrZXQgdGVhbXMgY291bGRuIGFmZm9yZC4gCkV2ZXJ5dGhpbmcgZmVlbHMgc28gYnJpZ2h0IGFuZCBmbGFzaHkuIApJa2FudGJlbGl2ZWl0ICA5MTUgcG9pbnRzICBzdWJtaXR0ZWQgMyBob3VycyBhZ28KSnVzdCBtZXNzaW5nIHdpdGggeW91LiAKQSBiYW5kIGlzIGFscmVhZHkgcGxheWluZyBvbiBhIG1pbmkgc3RhZ2UuIApUaGUgb2xkZXIgREIgc2VyaWVzIGhhcyBuaWNlbHkgbXVzaWNhbCBicmVha3VwIG9uIHRoZSB0dWJlIHByZWFtcHMgYnV0IHdpdGggYSBiaWcgaGVmdHkgcG93ZXIgYW1wLiAKQWZ0ZXIgbXVjaCBsb29raW5nIGFyb3VuZCBvbmxpbmUgYW5kIHRhbGtpbmcgd2l0aCBzb21lIGZvbGtzLCBJIHRoaW5rIEkndmUgZmlndXJlZCB0aGF0IEkndmUgc3RyYWluZWQgbXkgYWRkdWN0b3IgbXVzY2xlLiAKUG9zdHMgc2hvdWxkIGluY2x1ZGUgaW4gZGVwdGggcXVlc3Rpb25zIGFuZCBhbmFseXRpY2FsIG9waW5pb25zLiAKVHdvIHBhY2thZ2VzIGFyZSBhdmFpbGFibGU6IFRoZSBSZWQgUm9jayBNdXNjbGUgRXhwZXJpZW5jZSwgYSBndWlkZWQgNTAga20gdG91ciBvZiB0aGUgZGVzZXJ0IGZvciAkMjk5IHBlciBwZXJzb24uIEFuZCB0aGUgUmVkIFJvY2sgTXVzY2xlIFhMIEV4cGVyaWVuY2UsIGEgODUga20gZXhjdXJzaW9uIHRoYXQgcHV0cyBwYXJ0aWNpcGFudHMgYmVoaW5kIHRoZSB3aGVlbCAoJDM5OSBwZXIgcGVyc29uKS4KV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25JTkRJR08gQ291bmNpbCBoYXMgaGFyZGVuZWQgaXRzIGNhbXBhaWduIGFnYWluc3QgcG9rZXIgbWFjaGluZXMgZW50ZXJpbmcgaXRzIHNoaXJlIGJ5IGpvaW5pbmcgYSBuYXRpb25hbCBnYW1ibGluZyByZWZvcm0gZ3JvdXAuIApCbHVuZGVyIGluIHRvIGEgY2FtcCwgYW5kIHRoZXkgcmFpc2UgdGhlIGFsYXJtIGFuZCByZWluZm9yY2VtZW50cyBrZWVwIHR1cm5pbmcgdXAgbWFraW5nIGxpZmUgYSBuaWdodG1hcmUuIFNuZWFrIGluIGFuZCBkaXNhYmxlIHRoZSBhbGFybSwgYW5kIHlvdSBjYW4gdGFrZSBhbGwgZGF5IGFib3V0IHRoZSByZXN0IG9mIHRoZSBhdHRhY2suClRoZSB0cnVzdCBJIHdhcyByZWZlcnJpbmcgdG8gd2FzIHRvIGRvIHdpdGggdGhlIGZhY3QgdGhhdCBNaWNyb3NvZnQgYXJlIGEgc2N1bW15IGNvbXBhbnkgd2hvIHdpbGwgdHJ5IGFuZCBtaWxrIHRoZWlyIHVzZXJiYXNlIGZvciBldmVyeXRoaW5nIHRoZXkgY2FuIGFuZCBjaGFuZ2VzIHdpbGwgcmFyZWx5IGJlIGluIHlvdXIgYmVzdCBpbnRlcmVzdC4uIApJZiBhIGhvc3BpdGFsIGlzbiBtYWtpbmcgZW5vdWdoIG1vbmV5IGJlY2F1c2UgdGhlIGdvdmVybm1lbnQgY2FuIG9yIHdvbiBwYXkgdGhlbSB3aGF0IHRoZXkgYXJlIHdvcnRoLCB0aGV5IHdoeSB3b3VsZCB0aGV5IGNvbnRpbnVlIGluIHRoYXQgZmllbGQ/IFRoZSBvbmx5IHdheSB0byBjb250cm9sIHRoZSBjb3N0IGF0IHRoYXQgcG9pbnQgaXMgdGhyb3VnaCByYXRpb25pbmcgb3IgYnkgbm90IHBheWluZyBkb2N0b3JzIHN1Y2ggYSBoaWdoIHNhbGFyeS4gClRvbW9oaXJvIElzaGlpIHZzLiBZdWppIE5hZ2F0YSAgIDQuMjUgc3RhcnMgICBGdWNraW5nIGF3ZXNvbWUgbWFpbiBldmVudC4gVGhpcyB3YXMgYWxtb3N0IGEgY2FyYm9uIGNvcHkgb2YgdGhlIElzaGlpIEdvdG8gbWF0Y2ggZnJvbSBsYXN0IHllYXIgRzEsIGp1c3QgdHdvIGd1eXMgYmVhdGluZyB0aGUgc2hpdCBvdXQgb2YgZWFjaCBvdGhlciBmb3IgMjAgbWludXRlcy4gSXQgZGlkbiBibG93IGF3YXkgZXhwZWN0YXRpb25zLCBidXQgaXQgZGlkbiBmYWxsIHNob3J0IG9mIHRoZW0gZWl0aGVyLiBFeGFjdGx5IHdoYXQgSSB3YW50ZWQgZnJvbSB0aGVzZSBndXlzLgpEcm9wcGluZyBpbiBhIGxlc3MgY29udGVzdGVkIGFyZWEgbmVhciBhIHZlcnkgY29udGVzdGVkIGFyZWEgaXMgYSBwcm92ZW4gc3RyYXRlZ3kgdGhhdCBjYW4gaGVscCBzdHJ1Z2dsaW5nIHBsYXllcnMgbGVhcm4gdGhlIGdhbWUgYW5kIGhlbHBzIHRoZW0gYWxzbyBqdXN0IGdldCBtb3JlIHNraWxsZWQgYXQgYWltaW5nIGluIGEgc29tZXdoYXQgc2FmZXIgZW52aXJvbm1lbnQgKDNyZCBwYXJ0eWluZyBpcyBzYWZlciB0aGFuIGVuZ2FnaW5nIGEgZnJlc2ggdGVhbSkuIApSZW1lbWJlciB0aGF0IHdlJ3JlIGV4aXN0aW5nIGluIGEgdGV4dCBiYXNlZCBzcGFjZS4gV2hhdCB5b3VyIGlubmVyIHZvaWNlIHJlYWRzIG9uZSB3YXkgbWF5IHJlYWQgZW50aXJlbHkgZGlmZmVyZW50bHkgdG8gb3RoZXJzLiBUaGlzIGRvZXNuJ3QgbWVhbiB0aGF0IHlvdXIgY29tbWVudCBpcyBuZWNlc3NhcmlseSB3cm9uZywgaG93ZXZlciBpdCBtYXkgZ2V0IHJlbW92ZWQgZnVsbHkgaWYgaXQncyBwcmV0dHkgYmxhdGFudCwgb3IgaXQgbWF5IGJlIHJlbW92ZWQgYW5kIGhhcyBiZWVuIGxpbmtlZCBpbiBvdXIgTW9kIEh1YiwgZm9yIHJldmlldyBieSBhIFNlbmlvciBtb2QuIApUaGVyZSBhcmUgYSBudW1iZXIgb2YgcmVhc29ucyBpdCBpcyBpbmFwcHJvcHJpYXRlLiAKRnVjayBTb21lb25lIFdpZmUgSHVzYmFuZCBSZWNvcmRlZC4gCldlIGdvdHRhIHNheSwgYWxsIHRoaXMgc2VlbXMganVzdCBhIGxpdHRsZSBiaXQgc3VzcGljaW91cyBhbmQgc2xhbnRlZCBhZ2FpbnN0IHRoZSBvbmxpbmUgZ2FtYmxpbmcgaW5kdXN0cnkuIFNvbWVvbmUgbW9yZSBwYXJhbm9pZCBtaWdodCBldmVuIHN1Z2dlc3QgdGhhdCB0aGUgbmV3IGxhd3MgdW5mYWlybHkgZmF2b3IgdGhlIHNwb3J0cyBiZXR0aW5nIGluZHVzdHJ5LgpCb3VyZ2VvaXNDYWVzYXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KQWhhLCBubyBJIG1lYW50IHdoYXQgSSBzYWlkLCBhbmQgZnVjayB5b3VyICJidXp6d29yZHMiLCB0aGVzZSBhcmUgYWxsIGRlc2NyaXB0b3JzIEkndmUgaGVhcmQgdGhyb3VnaG91dCBteSBlbnRpcmUgbGlmZSBsb2wuIEFuZCAianVuZ2xlIGZldmVyIiB3YXMgYWN0dWFsbHkgYSBkaXJlY3QgcXVvdGUgZnJvbSBhIGNvbW1lbnQgSSByZWFkIGhlcmUuIFRoZSBpc3N1ZSBpc24ndCB0aGF0IHRoZXkgZmluZCBwb29yLCBvdmVyd2VpZ2h0IHdvbWVuIHVuYXR0cmFjdGl2ZS4gCkkgd291bGQgbGlrZSBzb21ldGhpbmcgdGhhdCBjYW4gc2hvd2Nhc2UgdGhlIGRpdmVyc2l0eSBhbmQgYmUgbm8gbW9yZSB0aGFuIGFyb3VuZCAyMCBtaW51dGVzLiBJIHRlYWNoIGF0IGEgc2Nob29sIHdoZXJlIHRoZXkgZG8gYWxsIHRoZWlyIHNjaG9vbHdvcmsgd2l0aCBhbiBvbmxpbmUgdGV4dGJvb2sgYW5kIGRvIG1vZHVsZXMgYW5kIGFzc2lnbm1lbnRzIGluIENhbnZhcy4gTW9zdCBvZiB0aGVtIGRvIGNvbWUgdG8gY2xhc3Mgb25jZSBhIHdlZWsgd2hlcmUgd2Ugd2F0Y2ggc29tZXRoaW5nIHRvZ2V0aGVyIGFuZCBkaXNjdXNzIGl0LiAKSGV5LCBzd2VldGllLiAKSXQgc2VlbXMgbGlrZSB0aGUgZmlyc3QgeWVhciBvciBzbyBhcmUgcHJvYmFibHkgdGhlIHdvcnN0IGZvciBmYW1pbGllcy4gCk5vdCBhbHdheXMgZWFzeSwgb2Z0ZW4gdGltZSBjb25zdW1pbmcuLiAKQW5kIHRoYXQncyBob3cgdGhpbmdzIHN0YXJ0ZWQuIFNoZSBjYXNoZWQgaW4gaGVyIGNoaXBzLCBhbmQgd2UgZ290IHRvIGtub3cgZWFjaCBvdGhlci4gVGhyZWUgbW9udGhzIGxhdGVyIHdlIGNhbWUgYmFjayB0byBWZWdhcyBhbmQgZ290IG1hcnJpZWQuIApUaGV5IGZpbmlzaGVkIHRoZWlyIDR0aCAzaHIgc2Vzc2lvbiwgYnV0IEkgbm90IG1ha2luZyB0aGVtIGNsZWFyIGxldmVscyBmb3IgWFAuIApJIHJlbWVtYmVyIHdhdGNoaW5nIEhhcHB5IFRyZWUgRnJpZW5kcyBpbiBlYXJseSBwcmltYXJ5IHNjaG9vbCBhcyB0aGUgdGVhY2hlciBkaWQgbm90IGdyYXNwIHRoYXQgdGhlIGludGVybmV0IGNvdWxkIGJlIHVzZWQgdG8gbG9vayB1cCBpbmFwcHJvcHJpYXRlIG5vbiBwb3JuIHRoaW5ncy4gClllcyBmZWxsYXMgICB5b3UgdG9vY2FuIGJlIEdRISEgQWxsZW4gTG9ldyBoYXMgYSBzdHJvbmcgaW50ZXJlc3RpbiBoaXN0b3J5LCBwYXJ0aWN1bGFybHkgaW4gdGhlIFZpY3RvcmlhbiBhbmRFZHdhcmRpYW4gZXJhLiAKU28sIEknbSBmcmF1Z2h0IHdpdGggY29uZmxpY3Q6IHZpcnR1YWxseSBBTEwgd2lsZCBhbmltYWxzIGRpZSBmcmFua2x5IHJhdGhlciBob3JyaWJsZSAoYnkgdGhlIGVtcGF0aCdzIHdheSBvZiB0aGlua2luZykgZGVhdGhzLCBhbGwgdGhlIHRpbWUuIEtpbGxlZCBieSBvdGhlciBwcmVkYXRvcnMsIHJvdHRlZCBieSB3aWNrZWRseSBwYWluZnVsIGRpc2Vhc2VzLCBicm9rZW4gbGltYnMsIGRyb3duZWQgaW4gcml2ZXJzLCBjb29rZWQgYnkgc3Vuc3Ryb2tlLCBhbmQgeWVzIC4gaHVudGVkIGJ5IG1hbiB0b28uCk5vcm1hbGx5IG91ciByaWdpZCB5ZXQgcGxpYWJsZSBib25lcyB3aGVuIGNvbnN0cmFpbmVkIGJ5IGZsZXhpYmxlIGxpZ2FtZW50cyBhbmQgbW92ZWQgYnkgbXVzY2xlcyB3aXRoIHN1ZmZpY2llbnQgc3RyZW5ndGgsIHByb3ZpZGUgZ29vZCBzdXBwb3J0IGFnYWluc3QgdGhpcyBjb25zdGFudCBzdHJlc3MuCkRvbiBrbm93IGlmIHRoZSBleHRyYSBpbmZvcm1hdGlvbiBoZWxwZWQsIGJ1dCBpdCBkaWQgZ2l2ZSBtZSBhIHBpY3R1cmUgb2Ygd2hhdCB3YXMgZ29pbmcgb24uIE9mIGNvdXJzZSwgeW91IG5lZWQgdG8gbGV0IHRoYXQgcGljdHVyZSBnbyBhbmQganVzdCBmZWVsIHRoZSBzZW5zYXRpb25zLCBidXQgZm9yIG1lIGl0IHdhcyBlYXNpZXIgdG8gbGV0IGdvIG9mIG9uY2UgSSBoYWQgYSBzb21ld2hhdCBjb25jcmV0ZSB1bmRlcnN0YW5kaW5nIG9mIHdoYXQgSSB3YXMgbGV0dGluZyBnbyBvZi4uIApUaG9zZSBhcmUgbW9yZSBsaWtlbHkgdG8gZW5kIHVwIGZlZWxpbmcgbGlrZSB0aGF0LiAKQXMgYSBwYXJ0IHRpbWUgc3R1ZGVudCwgeW91IHdpbGwgYmUgZXhwZWN0ZWQgdG8gZGV2b3RlIHRoZSBlcXVpdmFsZW50IG9mIHR3byBhbmQgYSBoYWxmIGRheXMgcGVyIHdlZWsgdG8gdGhlIE1TYyBjb3Vyc2Ugd2hpY2ggaW5jbHVkZXMgYXR0ZW5kaW5nIHRlYWNoaW5nLCBwcml2YXRlIHN0dWR5LCBwcm9kdWN0aW9uIG9mIHdyaXR0ZW4gcmVwb3J0cyBhbmQgcHJlc2VudGF0aW9ucywgc3BvcnRzIHBsYWNlbWVudHMsIGNsaW5pYyBwbGFjZW1lbnQgYW5kIHJlc2VhcmNoLiAKQ29yYWxpZSBMZXZlciBNYXRyYWphIHF1YW50ICBlbGxlIHJlcHJzZW50YWl0IGxhIERQU1AuLiAKTWFzc2FnZSB0aGVyYXB5IGNhbiBub3Qgb25seSBpbXByb3ZlIGJyZWF0aGluZywgYnV0IGFsc28gcG9zdHVyZS4gVGhpcyBjYW4gbGVhZCB0byBhbiBvcGVuaW5nIG9mIHRoZSBjaGVzdCBhcmVhLCBhcyB3ZWxsIGFzIHRoZSBzdHJ1Y3R1cmFsIGFsaWdubWVudCBhbmQgcmliIGNhZ2UgZXhwYW5zaW9uIG5lZWRlZCBmb3Igb3B0aW1hbCBsdW5nIGZ1bmN0aW9uLCBzaGUgYWRkcy4gUGx1cywgd2hlbiB0aGUgcGFyYXN5bXBhdGhldGljIG5lcnZvdXMgc3lzdGVtIHJlc3BvbmRzIHRvIG1hc3NhZ2UgeW91ciBicmVhdGhpbmcgcmF0ZSBzbG93cyBhbmQgYmVjb21lcyBkZWVwIGFuZCByZWd1bGFyLi4gClBsYXF1ZXMgYW5kIHByaXplcyB3aWxsIGJlIGF3YXJkZWQgdGhlIG5leHQgZGF5LiAKSSBnbGFkIHRoZXkgYSBzb2x1dGlvbiB0aGF0IHdvcmtlZCBmb3IgeW91ciBleCwgYnV0IGl0IHNlZW1zIHRvIGJlIGEgcmFyaXR5LCBldmVuIGluIHRoZSBwZW9wbGUgd2hvIHdvdWxkIGxpa2UgdG8gdHJ5LiAKSG93IFRvIEdpdmUgYSBTd2VkaXNoIEhhbmQgTWFzc2FnZQpNdXNrIGluaXRpYWxseSBjb250ZW5kZWQgdGhhdCBoZSBoYWRuJ3QgZG9uZSBhbnl0aGluZyB3cm9uZyBiZWZvcmUgcmVsdWN0YW50bHkgYWdyZWVpbmcgdG8gaGF2ZSBmdXR1cmUgdHdlZXRzIHRoYXQgY291bGQgYWZmZWN0IFRlc2xhJ3Mgc3RvY2sgYmUgcHJlIGFwcHJvdmVkLgpBbHRlcm5hdGl2ZWx5LCBzdHJpa2UgdGhlIGJhciBhIG51bWJlciBvZiB0aW1lcyBpbiB0aGlzIHBvc2l0aW9uLiAKSSBoYXZlIGZpbmFsbHkganVtcGVkIGJhY2sgb24gdGhlIEFCIHJvdXRpbmUgYmFuZHdhZ29uLCBhcyBzbWFsbCBhcyB0aGlzIGlzLCBhZnRlciBhIHdlZWsgb2YgdHJhdmVsbGluZyBhbmQgZG9pbmcgc29tZSBjbGVhbnNlciB0ZXN0cy4gVGhpbmdzIHNlZW0gcHJvbWlzaW5nIHdpdGggbXkgQ2VyYVZlIFJlbmV3aW5nIFNBIGNsZWFuc2VyIGFuZCBJIHByb2JhYmx5IHN3aXRjaCBvdmVyIHRvIHVzaW5nIGp1c3QgdGhhdCBieSB0aGUgZW5kIG9mIHRoZSB3ZWVrIHNpbmNlIGl0IGxlc3MgZHJ5aW5nIGFuZCBoYXMgYSBiZXR0ZXIgcEguIApUaGVpciBiZWxpZWZzIGhhdmUgY2hhbmdlZCB0aGUgd2hvbGUgd29ybGQuIApOb3cgSSBkb24ga25vdyB0aGUgcnVsZXMgb2YgcG9rZXIgYW5kIHRoYXQgbWVhbnMgSSBjYW4gbGVhcm4gdGhlIGZvdW5kYXRpb25zIGZyb20gdGhlIGJlc3QgYW5kIG1vdmUgZm9yd2FyZCBxdWlja2x5LiAKNCAgT3l1bmEgZ2lyaW4uIEVrbGVubWkgRG9zeWEuIApNb25lbGwgYW5kIE5vcnRod2VzdGVybiAyMDA5IE9sZW9jYW50aGFsIE1heSBIZWxwIFByZXZlbnQsIFRyZWF0IEFsemhlaW1lcidzTmF0dXJhbCBjb21wb3VuZCBpbiBleHRyYSB2aXJnaW4gb2xpdmUgb2lsIHRhcmdldHMgdG94aWMgYmV0YSBhbXlsb2lkIHByb3RlaW5zQUNTIENoZW0uIE5ldXJvc2NpLiwgQXJ0aWNsZSAoV2ViKTogRmVicnVhcnkgMTUsIDIwMTNPbGl2ZSBPaWwgRGVyaXZlZCBPbGVvY2FudGhhbCBFbmhhbmNlcyAgQW15bG9pZCBDbGVhcmFuY2UgYXMgYSBQb3RlbnRpYWwgTmV1cm9wcm90ZWN0aXZlIE1lY2hhbmlzbSBhZ2FpbnN0IEFsemhlaW1lcidzIERpc2Vhc2U6IEluIFZpdHJvIGFuZCBpbiBWaXZvIFN0dWRpZXNBbGFhIEguIApDYXRiZWFyY2Fyc2VhdCAgMywzMDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkRpZmZlcmVudCBzdHJhdGVnaWVzIHdpbGwgcHJvZHVjZSBkaWZmZXJlbnQgcGVyY2VudGFnZXMgb2Ygc3RhcnRpbmcgaGFuZHMgYW5kIGRpZmZlcmVudCBwZXJjZW50YWdlcyBvZiB3aW5uaW5nIGhhbmRzLi4gCk1pc3MgTm9zZSBpcyBhdHRlbmRpbmcgQW4gRXZlbmluZyBBZmZhaXIgd2l0aCBUb2RheSBUb3AgSm91cm5hbGlzdC4gSXQgaXMgYSBibGFjayB0aWUgZnVuZCByYWlzaW5nIGV2ZW50IGZvciB0aGUgbG9jYWwgQXV0aXNtIEF3YXJlbmVzcyBDaGFwdGVyIDI1Ni4gVGhleSBob25vciBqb3VybmFsaXN0IHdpdGggYXdhcmRzIGZvciB0aGVpciBoZWxwIGluIGJyaW5naW5nIGxpZ2h0IHRvIGF1dGlzbS4gVGhlIGNoYXB0ZXIgaGVscHMgbG9jYWwgYXV0aXN0aWMgc3BlY3RydW0gY2l0aXplbnMgd2l0aCBhbnkgc3BlY2lhbCBuZWVkIGFsbG93aW5nIHRoZW0gdG8gd29yayBvciBnbyB0byBzY2hvb2wgaW4gYSBub3JtYWwgY2FwYWNpdHkuIFRvbmlnaHQgZGlubmVyIGlzIHJvYXN0IGJlZWYsIGNoaWNrZW4sIGFuZCBhbGwgdGhlIHNpZGVzIHlvdSBjYW4gdGhpbmsgb2YuIE1pc3MgTm9zZSBmYXZvcml0ZSBpcyBzYWxhZCB3aXRoIHJhbmNoIGRyZXNzaW5nLgpNaWxpdGFyeSBBY2FkZW15IGF0IFdlc3QgUG9pbnQuIFNvbGRpZXJzIHdlcmUgYW5kIGFyZSBlbGl0ZSBtb3VudGFpbiBpbmZhbnRyeSwgdGhlIENoYXNzb25zIEFscGlucywgIkFscGluZSBIdW50ZXJzIiwgYW5kIG5pY2tuYW1lZCAidGhlIEJsdWUgRGV2aWxzIiwgYW5kIHdobyBzYXcgdGhlaXIgZmFpciBzaGFyZSBvZiBjb21iYXQgZHVyaW5nIFdXSS4gCkFsc28sIGl0IGlzIHdpZGVseSByZWdhcmRlZCB0aGF0IEJldFZpY3RvciBoYXMgdGhlIGxvd2VzdCBwcm9maXQgbWFyZ2luIG9uIGZvb3RiYWxsLCBhbmQgdGhlIGZpbmVzdCBsb25nIHRlcm0gb2RkcyBmb3IgRXVyb3BlYW4gZm9vdGJhbGwuSG9yc2UgUmFjaW5nQmV0VmljdG9yIG9mZmVycyBpdHMgY3VzdG9tZXJzIGdyZWF0IGhvcnNlIHJhY2luZyBtYXJrZXRzIGZyb20gVUsgYW5kIFVTLCB3aGlsZSB0aGVpciBob3JzZSByYWNpbmcgYmV0dGluZyBzZXJ2aWNlIGlzIHBhcnRpY3VsYXJseSBzdHJvbmcuIEJlc3QgT2RkcyBHdWFyYW50ZWVkIGlzIGF2YWlsYWJsZSBhdCBCZXRWaWN0b3IgZm9yIGFsbCByYWNlIHRyYWNrcyBpbiB0aGUgVW5pdGVkIEtpbmdkb20gYW5kIE5vcnRoZXJuIElyZWxhbmQuIApBbnkgc29jaWV0eSB0aGF0IHdvdWxkIGdpdmUgdXAgYSBsaXR0bGUgbGliZXJ0eSB0byBnYWluIGEgbGl0dGxlIHNlY3VyaXR5IHdpbGwgZGVzZXJ2ZSBuZWl0aGVyIGFuZCBsb3NlIGJvdGguIApXZXN0ZXJuIEhvbWUgRGVjb3IgaXMgaW4gU3RvcmUKSSdkIGltYWdpbmUgdGhlIG1vbnRobHkgZ2VtIHBhY2sgaXMgbm90IGEgYmFkIGRlYWwgZWl0aGVyLCAxOTAwMCBnZW1zIGZvciB0aGUgbW9udGggSSB0aGluaz8gNjUwIGEgZGF5ICsgMjAwMCBnZW1zIHVwZnJvbnQgd2hlbiB5b3UgcHVyY2hhc2UuCldoYXQgcmV0aXJlZXMgbmVlZCB0byBrbm93IGlmIHRoZXkgcGxhbiB0byBkZWZlciBPbGQgQWdlIFNlY3VyaXR5IGJlbmVmaXRzIHVudGlsIDcwClRoZSBtb2RlbCBjb21tYW5kZWQgYXR0ZW50aW9uIGFzIHNoZSBzdHJ1dHRlZCBhY3Jvc3MgdGhlIHN0cmVldHMgb2YgdGhlIEl0YWxpYW4gY2l0eSBpbiBhIHBhaXIgb2YgYW5pbWFsIHByaW50a25lZSBoaWdoIHN0aWxldHRvIGJvb3RzLgpUdW1ibHIgZG9lcyBoYXZlIGhpZ2ggcXVhbGl0eSBjbGlwcywgYnV0IHRoZXkgYXJlIHNob3J0LiAKVXBvbiBncmFkdWF0aW9uLCBzdHVkZW50cyBhcmUgd2VsbCBlcXVpcHBlZCB0byBoYW5kbGUgYSB2YXJpZXR5IG9mIGNsaW5pY2FsIGNvbXBsYWludHMgYW5kIHRvIHdvcmsgaW4gYSB3aWRlIHZhcmlldHkgb2YgbWFzc2FnZSBzZXR0aW5ncyBmb3IgYSBsaWZldGltZS4gT3VyIHByb2dyYW1zIGFyZSBvZmZlcmVkIG9uIHdlZWtkYXlzLCBldmVuaW5ncywgYW5kIHdlZWtlbmRzLiAKVGhpcyBpcyB1bnRydWUgZm9yIHBva2VyLiBJbiBvcmRlciB0byBjb250aW51ZSBtb3ZpbmcgdXAsIHlvdSBjYW4gcmlzayBtb3JlIG1vbmV5LCBidXQgdGhlIHdpbiByYXRlIG1heSBub3QgbmVjZXNzYXJpbHkgcmVmbGVjdCB5b3VyIGluY3JlYXNlZCByaXNrLiAKSSBoYXZlIGFuIGV4dGVuc2l2ZSBqdXN0bm8gc3RlcCBmYW1pbHkuIE9sZGVzdCBzdGVwIGF1bnQgaXMgc3RhdW5jaGx5IGFudGkgZ292IGFzIHdlbGwsIGJ1dCB0aGF0IGRpZG4ndCBzdG9wIGhlciBmcm9tIHBsb3R0aW5nIHdpdGggc3RlcCBncmFuZG1hIHRvIGhhdmUgQ1BTIGludm9sdmVkIHdpdGggb3RoZXIgKGRlYWYpIHN0ZXAgYXVudCB3aGVuIERTQSdzIGluZmFudCBzb24gZmVsbCBvZmYgdGhlIGJlZC4gSSB3YXMgcmVmZXJlbmNpbmcgdGhpbmdzIEkgd2l0bmVzc2VkIHRoZXNlIHN1cnZpdmFsaXN0L3ByZXBwZXIvWTJLIGJ1bmtlci9ob2FyZGluZyBndW5zIGZvciBBcm1hZ2VkZG9uIGFudGkgZ292ZXJubWVudCBudXRzIHRocmVhdGVuIHdpdGggbXkgb3duIGV5ZXMuIEp1c3QgYmVjYXVzZSBzdGVwIGF1bnQgd2FzIGFudGkgZ292ZXJubWVudCBkaWRuJ3Qgc3RvcCBoZXIgZnJvbSB1c2luZyBnb3YgYWdlbmNpZXMgdG8gYWNjb21wbGlzaCB3aGF0IHNoZSB3YW50ZWQuIEkgY291bGRuJ3QgYmVsaWV2ZSB0aGF0IHNoZSB3b3VsZCBkaXNjdXNzIHRoaXMgaW4gZnJvbnQgb2YgbXkgbW9tIGFuZCBtZSwgaXQgd2FzIHRoZSBmaXJzdCB0aW1lIHdlJ2QgbWV0IGFueSBvZiB0aGVtLiBNeSB0YWtlIGF3YXkgaXMgdGhhdCB3YXJuaW5ncyBsaWtlIHRoYXQgaGF2ZSBhIHRlbmRlbmN5IHRvIGJlIHRoZW0gdmVyYmFsaXppbmcgd2hhdCB0aGV5IHdhbnQgdG8gaGFwcGVuLgpSb3NhIEdsYXRmZWx0ZXIuIAoiSGlzdG9yeSBoYXMgcmVwZWF0ZWRseSBzaG93biB0aGF0IGRldmVsb3BtZW50IGZpbmFuY2UgaW5zdGl0dXRpb25zJyBvd24gaW50ZXJuYWwgYWNjb3VudGFiaWxpdHkgbWVjaGFuaXNtcyBhcmUgZXNzZW50aWFsLCBidXQgbm90IGVub3VnaC4gVG9kYXkncyBkZWNpc2lvbiBpbiBKYW0gdi4gCkl0IGlzIGEgcHVuZ2VudCBjb21tZW50IG9uIHRoZSBzdHJlbmd0aCBvZiB0aGUgcmVzZXJ2ZXMgb2YgRW5nbGlzaCBjcmlja2V0IGhhbGYgYSBjZW50dXJ5IGFnbyB0aGF0IEZyeSBhbmQgUmFuamkgd2VyZSBib3RoIGRyb3BwZWQgZnJvbSB0aGUgRW5nbGFuZCB0ZWFtIGF0IHRoZSBoZWlnaHQgb2YgdGhlaXIgZmFtZS4gSW4gMTkwMSBGcnkgc2NvcmVkIDMsMTQ3IHJ1bnMsIGF2ZXJhZ2UgNzguNjc7IGluIDE5MDMgaGUgc2NvcmVkIDIsNjgzIHJ1bnMsIGF2ZXJhZ2UgODEuMzAuIEluIDE5MDAgUmFuaml0c2luaGppIHNjb3JlZCAzLDA2NSwgYXZlcmFnZSA4Ny41Ny4gWWV0IGJlY2F1c2Ugb2Ygb25lIG9yIHR3byBsYXBzZXMgaW4gMTkwMiwgYm90aCB0aGVzZSBncmVhdCBwbGF5ZXJzIHdlcmUgYXNrZWQgdG8gc3RhbmQgZG93biBhbmQgZ2l2ZSB3YXkgdG8gb3RoZXIgYXNwaXJhbnRzIHRvIFRlc3QgY3JpY2tldC4KV2VkbmVzZGF5OiBtb3ZlIHRoZSBjb2V4IHRvIHRoZXJlLiBUaGVyZSBjb21lIGNvb2wgc3R1ZmYgdG8gZG8gYW5kIGl0cyByaWdodCBuZWFyIHRoZSBiYW5wbyBicmlkZ2UuIEluIGZhY3QgaWYgeW91cmUgbm90IGFnYWluc3QgYSBuaWNlIG5pZ2h0dGltZSB3YWxrIHlvdSBjb3VsZCB3YWxrIGZyb20gdGhlIGNvZXggYWxsIHRoZSB3YXkgdG8gdGhlIGJhbnBvIGJyaWRnZSBhbG9uZyB0aGUgaGFuIHJpdmVyIChtaWdodCB0YWtlIHlvdSBtb3JlIHRoYW4gYW4gaG91cikuIEFsc28sIGlmIHlvdSBhcmUgbG9va2luZyBmb3IgY29vbCB0aGluZ3MgdG8gZG8gbmVhciB0aGUgaGFuIHlvdSBtaWdodCBub3QgZmluZCBtYW55LCBzbyBsZXQgbWUgc3VnZ2VzdCBhIGNvdXBsZSBmb3IgeW91OiAiU3VpY2lkZSBicmlkZ2UgKG1hcG8gYnJpZGdlKSIgdGhlcmUgd2VyZSBzbyBtYW55IHN1aWNpZGVzIHRoZXJlIHRoYXQgdGhleSBwdXQgbmljZSBtZXNzYWdlcyBhbGwgYWxvbmcgaXQgYW5kIHlvdSBjYW4gd2FsayBpdCBhbmQgaXRzIHZlcnkgcGVhY2VmdWwuIFRoZSBzb3V0aHNpZGUgb2YgdGhhdCBicmlkZ2UgdGFrZXMgeW91IHRvIFllb3VpZG8gd2hlcmUgdGhleSBoYXZlIHRoZSBOYXRpb25hbCBBc3NlbWJseSBIYWxsLiBCYW5wbyBicmlkZ2UgaXMgbmljZSBhdCBuaWdodCwgYnV0IGl0IG5vdCBnb25uYSBibG93IHlvdXIgbWluZC4gT2x5bXBpYyBicmlkZ2UsIEtvcmVhIGdvdCB0aGUgb2x5bXBpY3MgaW4gMTk4OCBhbmQgdGhlcmVzIGEgbmljZSBicmlkZ2UgdG8gY29tbWVtb3JhdGUgaXQuIFR0dWtzZW9tIHJlc29ydCwgdGhlcmVzIGEgY29vbCBhcmVhIHRvIGhhbmcgb3V0IGFuZCBqdXN0IGNoaWxsIG5leHQgdG8gYSB3YXRlciBwYXJrLiBBbGwgdGhlc2UgdGhpbmdzIGFyZSB2ZXJ5IGFjY2Vzc2libGUgYnkgc3Vid2F5LgpCcmFkbGV5IGhhcyBzYWlkIHNoZSBtaXNzcG9rZSwgYW5kIHRoYXQgaGVyIGNvbW1lbnRzIHdlcmUgZmFjdHVhbGx5IGluY29ycmVjdCBhbmQgZGlkIG5vdCByZWZsZWN0IGhlciB2aWV3cy4gCkxhIFJ1c3NpZSBldCBsZSBEYW5lbWFyayAodmlhIGxlIEdyb2VubGFuZCkgc291dGllbm5lbnQgZXV4IGF1c3NpIHF1ZSBsYSBkb3JzYWxlIHNvdXMgbWFyaW5lIHMgIGxldXIgcGxhdGVhdSBjb250aW5lbnRhbC4gRGUgZmFpdCwgbGUgcHJzaWRlbnQgVmxhZGltaXIgUG91dGluZSBhIGVudm95IHVuIHNvdXMgbWFyaW4gcm9ib3QgcGxhbnRlciBsZSBkcmFwZWF1IGJsZXUgYmxhbmMgcm91Z2UgcnVzc2Ugc3VyIGxhIGRvcnNhbGUgZGUgTG9tb25vc3NvdiBkcyAyMDA3LgpPdmVydmlldyBmb3IgY2hvaWt3YQpBZ2FpbiwgZG9uIGtlZXAgeW91ciBlZ2dzIGluIG9uZSBiYXNrZXQuIE5vIGxpZ2h0IHNvdXJjZSBpbiB0aGUgc2xlZXBpbmcgcm9vbSksIGdldCB0YWlsb3IgbWFkZSBlYXIgcGx1Z3MsIHNsZWVwIGJldHRlcgpXaGlsZSB3ZSBoYXZlIHZvbHVudGVlciBTdWIgZWRpdG9ycyB3aG8gcG9saXNoIGVudHJpZXMgYmVmb3JlIHB1YmxpY2F0aW9uLCBpdCBuZXZlciBodXJ0cyB0byBnZXQgdGhlIEVudHJ5IGFzICdyaWdodCcgYXMgcG9zc2libGUgZWFybHkgb24uIApDYXBpdGFsaXN0cyBiZW5lZml0IGZyb20gaGF2aW5nIGFzIG1hbnkgcGVvcGxlIG91dCBvZiBwb3ZlcnR5IGFzIHBvc3NpYmxlLiBQb3ZlcnR5IGlzIGEgY29tcGxleCBzb2NpYWwgaXNzdWUgdGhhdCBpc24ndCBmaXhlZCBieSAicmV2b2x1Y2lvbiIuIApMb2NrIGluIHRoZSBYIHdpdGggYSByZXZvbHV0aW9uIG5lYXIgdGhlIHRvcCB0aGVuIHdyYXAgd2hhdGV2ZXIgaXMgbGVmdCBhY3Jvc3MgdGhlIGNlbnRlciBvZiB0aGUga25lZS4gVGllIG9mZiB1c2luZyBhIHBhaXIgb2YgbG9uZyBhcm1lZCBuZWVkbGUgbm9zZSBwbGllcnMgcGxhY2VkIHVuZGVyIHRoZSBsYXN0IHJldm9sdXRpb24gYW5kIHRoZW4gcHVsbGVkIHRocm91Z2guU0dQX01pa2VGTm90IGFjdHVhbGx5IGEgYmVnaW5uZXIsIGp1c3Qgc3R1cGlkIDQgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ29JIGp1c3QgZ290IGFuIGVtYWlsIHRoYXQgbXkgZmlyc3QgbWVldCB3YXMgY2FuY2VsbGVkIGR1ZSB0byB1bmZvcmVzZWVuIGNpcmN1bXN0YW5jZXMuR2l2ZW4gdGhpcywgdGhlIG90aGVyIGZlZGVyYXRpb24gSSBqb2luZWQgaXMgaGF2aW5nIGEgbWVldCBvbiBBcHJpbCAyNywgd2hpY2ggSSBvcmlnaW5hbGx5IGRpZCBub3QgcGxhbiB0byBhdHRlbmQuTXkgb3JpZ2luYWwgcGxhbjogUGVhayBXZWVrIDEgd2FzIHRoaXMgd2VlayB0aGVuIHRoZSBuZXh0IHR3byB3ZWVrcyB3ZXJlIHdlZWsgMiBhbmQgbWVldCB3ZWVrLiAKSSBzcG90dGVkIHRoaXMgIlVuZnVja3dpdGhhYmxlIiBiYW5nbGUgaW4gYSByaWRpY3Vsb3VzbHkgb3ZlcnByaWNlZCBnaWZ0IHNob3AgaW4gVGFtcGEuIEkgZm91bmQgaXQgb25saW5lIGFuZCBib3VnaHQgaXQgZm9yICQxNSBpbnN0ZWFkLgpUaGUgcHJvYmxlbSB3aXRoIE5vdmlrb3YgYXMgYSBzdG9yeXRlbGxpbmcgZGV2aWNlIGlzIHRoYXQgYnkgaXRzIG5hdHVyZSwgaXQgbWFrZXMgdGhlIHBhc3Qgbm90IG9ubHkgZWZmZWN0aXZlbHkgaW1tdXRhYmxlLCBidXQgdGhlIGZ1dHVyZS4gUGVvcGxlIGRvbiBsaWtlIHRoYXQsIGJlY2F1c2UgaXQgaGFzIHVucGxlYXNhbnQgaW1wbGljYXRpb25zIGZvciB0aGUgaWRlYSBvZiBmcmVlIHdpbGwuIFRoZXJlIGFyZSByZWxhdGl2ZWx5IGZldyBzdG9yaWVzIHRoYXQgdXNlIHRoZSBOb3Zpa292IG1vZGVsIHdoZXJlIHRoZSB0d2lzdCBlbmRpbmcgaXNuICJPaCBubywgaXQgd2FzIG15IGZhdWx0IGFsbCBhbG9uZyEhMSEiLiAKQWN0dWFsbHksIFdyaWdodCBnb2VzIGZvciBhIGRpZmZlcmVudCBtZXRhcGhvci4gSGlzIEJpZyBJZGVhIGlzIHRoYXQgQW5uYSBhbmQgaGVyIGNpcmNsZSBpbmhhYml0IGEgd29ybGQgc28gYXJ0aWZpY2lhbCwgc28gY3VlZCB0byBvdXR3YXJkIGFwcGVhcmFuY2UgYW5kIGJlaGF2aW9yLCB0aGF0IGl0IGNvdWxkIGJlIGEgdGhlYXRyaWNhbCBzdGFnZS4gU28gaXQgaXMgYSB0aGVhdHJpY2FsIHN0YWdlLCB3aXRoIGN1cnRhaW5zIHJpc2luZyB0byByZXZlYWwgdGhlIGNoYXJhY3RlcnMgYXQgYnJlYWtmYXN0IGFuZCB0cmFpbiBqb3VybmV5cyBpbiBmcm9udCBvZiBwYXRlbnRseSBmYWtlIGJhY2tkcm9wcy4gCkFnZSBvZiBzZXh1YWwgY29uc2VudCBpcyAxOCB3aXRoIG5vIGNsb3NlIGluIGFnZSBleGNlcHRpb24gICBzbyB0d28gMTcgeWVhciBvbGRzIGhhdmluZyBjb25zZW5zdWFsIHNleCB3aXRoIGVhY2ggb3RoZXIuIApGb3IgcGVvcGxlIG5vdCBmYW1pbGlhciB3aXRoIHRoZSB0ZXJtaW5vbG9neSwgdGhpcyBpcyBjYWxsZWQgYSBjb25zZW5zdXMgYWxnb3JpdGhtLi4gCkluIG9yZGVyIGZvciBHRSB0byBjb21wZXRlLCB0aGV5IGhhdmUgdG8gZGV2ZWxvcCBhIGJyYW5kIG5ldyBsb2NvbW90aXZlLiBUaGUgb3RoZXIgY29tcGFuaWVzIHRoYXQgYmlkIG9uIHRoZSBNdWx0aSBTdGF0ZSBwdXJjaGFzZSBhbGwgaGF2ZSBleGlzdGluZyBkZXNpZ25zIHRoYXQganVzdCBuZWVkIHRvIGJlIHR3ZWFrZWQgdG8gbWVldCB0aGUgYmlkIHJlcXVpcmVtZW50cy5TaWVtZW5zIGhhcyB0aGUgQ2hhcmdlciB3aGljaCBpcyBiYXNlZCBvZmYgZnJvbSBhIEV1cnBSdW5uZXIgc29tZSBTcHJpbnRlci4gTW90aXZlIFBvd2VyIEluZHVzdHJpZXMgaGFzIHRoZWlyIE1QSSBYcHJlc3MgbG9jb21vdGl2ZXMsIEVNRCBoYXMgdGhlIEYxMjUuIApUaGUgc3VycHJpc2Ugd2FzIHRoYXQgdGhlIGVudmlyb25tZW50YWwgZmFjdG9ycyBoYXZlIGJlZW4gdW5kZXJlc3RpbWF0ZWQsIHNhaWQgQ2xhcmEgTGFqb25jaGVyZSwgdmljZSBwcmVzaWRlbnQgb2YgY2xpbmljYWwgcHJvZ3JhbXMgZm9yIEF1dGlzbSBTcGVha3MsIGEgcGF0aWVudCBhZHZvY2FjeSBncm91cCB0aGF0IHBhcnRpY2lwYXRlZCBpbiBhbmQgaGVscGVkIGZ1bmQgdGhlIG5ldyB0d2luIHN0dWR5LmFyZSBnb2luZyB0byByZWFsbHkgaG9sZCByZXNlYXJjaGVycyBtb3JlIGFjY291bnRhYmxlIG5vdywgc2FpZC4gbG90IG9mIHBhcmVudHMgdmlldyBnZW5ldGljcyBhcyBhIGxvbmcgdGVybSBzb2x1dGlvbi5UaGV5IGFyZSBnb2luZyB0byB3YW50IHRvIGtub3cgaG93IHdlIGNhbiBhY2NlbGVyYXRlIHRoZSBwYWNlIG9mIHJlc2VhcmNoIHN1Y2ggdGhhdCB3ZSBjYW4gZmluZCBhbnN3ZXJzIG5vdy4gCkxhZHlHYUdhKS4gClRlcmFtZWxvc2lzY29vbCAgMSBwb2ludCAgc3VibWl0dGVkIDMgZGF5cyBhZ28KSSBub3QgZ29ubmEgcmVhZCB0aGF0ISBJIHNhaWQgZXhwbGFpbiBpdCBsaWtlIGkgZml2ZSEKTXkgZ3V0IGlzIHNvIG1lc3NlZCB1cCBhbmQgd2hlbiBpdCByZWFsbHkgYmFkLCBJIHVuZGVyd2VpZ2h0IGFuZCBJIGZhc3QgdW50aWwgaXQgY2FsbXMgZG93bi4gCkZhc3QgcGxheSB0aW1lLiBUaGUgb25saW5lIHdvcmxkIHdhcyBtYW51ZmFjdHVyZWQgdG8gYmUgZmFzdCwgYW5kIHRoZSBhbW91bnQgb25saW5lIGhvbGRlbSBwb2tlci4gV2l0aCBvbmxpbmUgcG9rZXIsIHlvdSB1c3VhbGx5IHdpbmQgdXAgQmFuZGFyIEp1ZGkgQm9sYSBwbGF5aW5nIG11Y2ggbGVzcyA1MCBwZXJjZW50IG1vcmUgaGFuZHMgdGhhdCB5b3UnbGwgZXZlciBwbGF5IGF0IHJlYWwgY2FzaW5vIGRlc2suCkVyaWMsIExlaWRhLiBQdXQgdGhlIHNob3cgb24gcmVwZWF0LiBUaGUgb25seSBvbmVzIHdobyBkb24gZ2V0IGl0IGFyZSB5b3UgdHdvIHNvcnJ5IGZ1Y2tlcnMuCidHcnViYnknIEpvaG4gSG9wb2F0ZSBnaXZlcyBOUkwgdGhlIGZpbmdlciAgIGFnYWluICdJIHdpbGwga25vY2sgeW91IG91dCc6IEdhbGxlbiByYW50cyBhdCBIb3BvYXRlCkFzaW1vLCB3aGljaCBvZmZpY2lhbGx5IHN0YW5kcyBmb3IgIkFkdmFuY2VkIFN0ZXAgaW4gSW5ub3ZhdGl2ZSBNT2JpbGl0eSwiIHdhcyB0aGUgY3VsbWluYXRpb24gb2YgdHdvIGRlY2FkZXMgb2YgaHVtYW5vaWQgcm9ib3RpY3MgcmVzZWFyY2ggYnkgSG9uZGEgZW5naW5lZXJzLCB3aG8gZmlyc3QgYmVnYW4gcmVzZWFyY2ggb24gdGhlIHByb2plY3QgaW4gdGhlIDE5ODBzIGFuZCB0aGVuIHVudmVpbGVkICJoaW0iIGluIDIwMDAuIApUaGUgbGVmdCBjaGlsZCB3b3VsZCBoYXZlIHRvIGJlIGhvbGRpbmcgdGhhdCBoYW5kIGJlaGluZCBoZXIgYmFjayBpbiBhbiBhd2t3YXJkIGhhbmRob2xkLiAKRGlhYmV0ZXMgVHlwZSAyIFdlaWdodCBUcmFpbmluZyBSZWR1Y2VzIFJpc2sgQXJjaCBJbnRlcm4gTWVkLiAyMDEyQWVyb2JpYyBvciBBbmFlcm9iaWMgVHJhaW5pbmcgQmVzdCBGb3IgR2V0dGluZyBSaWQgb2YgQmVsbHkgRmF0ClNvIGp1c3QgZm9sZC4gCiAgMSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29VbSBuby4gTWF5YmUgZm9yIGEgamVyc2V5IHRoYXQgWmlvbiB3b3JlLCBidXQgYSBzY2hvb2wgbGlrZSBOb3J0aHdlc3Rlcm4/IFdobyBkb2Vzbid0IGhhdmUgYSBodWdlIHNwb3J0cyBmb2xsb3dpbmcsIGxldCBhbG9uZSBhIGJhc2tldGJhbGwgb25lLiBBbmQgdGhlcmUgYXJlIHJ1bGVzIGZvciBzZWxsaW5nIGdhbWUgd29ybiBzdHVmZi4gSWYgSSByZWNhbGwgY29ycmVjdGx5LCBhbnkgcHJvY2VlZHMgbWFkZSBmcm9tIHNlbGxpbmcgZ2FtZSB3b3JuIHN0dWZmIGhhcyB0byBiZSBmb3IgY2hhcml0eSBvciBzb21ldGhpbmcgc2ltaWxhci5BbmQgc2VsbGluZyB0aGVtIGluIHRoZSBnaWZ0IHNob3Agd291bGQgbWFrZSBubyBzZW5zZSB1bmxlc3MgdGhleSB3ZXJlIGd1YXJhbnRlZWQgdG8gbWFrZSBhIGh1Z2UgcHJvZml0LiAKTXkgZmFtaWx5IG1lbWJlciBleHByZXNzZWQgaG93IGl0IHdvdWxkIG1ha2UgaGltIGZlZWwgaWYgSSBhY2NvbXBsaXNoZWQgdGhpcyBvbmUgcGFydGljdWxhciB0aGluZyBkdXJpbmcgbXkgbGlmZXRpbWU7IGFuZCBzaW5jZSB0aGVuLCBJIGhhdmUuIFRoZSBwZWFjZSBhbmQgcHJpZGUgYW5kIGxvdmUgSSBmZWVsIGlzIHVwbGlmdGluZywga25vd2luZyBJIGNvbW1pdHRlZCB0byByZXNwZWN0aW5nIGhpcyB3aXNoZXMuIApDbGlqc3RlcnMgYW5kIEhlbmluIHdpbGwgcGxheSBlYWNoIG90aGVyIGZvciB0aGUgMjV0aCB0aW1lLCBidXQgdGhlIGZpcnN0IHRpbWUgaW4gYSBHcmFuZCBTbGFtIHNpbmNlIDIwMDYuIFRoZWlyIHJpdmFscnkgc3RhbmRzIGF0IDEyIDEyIGFuZCBoYXMgYmVjb21lIGZyaWVuZGxpZXIgb3ZlciB0aGUgeWVhcnMuCjIgREFOSUVMIE5FR1JFQU5VICAkMTAsMjQ3LDE3MQpUaGUgb25seSB3YXkgaXQgY291bGQgd29yayBpcyBpZiBpdCB3b3JrZWQgbGlrZSBEb2trYWViaSBjYWxscy9MaW9uIHNjYW4gKHByZXNzIGJ1dHRvbiwgYWxsIGNhbWVyYXMgYmVjb21lIGxvb3BlZCBmb3IgWCBzZWNvbmRzKS4gClRoZSBiYW5rZXIgd2lsbCBkaXN0cmlidXRlIG9uZSBtb3JlIGNhcmQsIGFuZCB0aGUgc2FtZSBwcm9jZXNzIHN0YXJ0cyBhbGwgb3ZlciBhZ2Fpbi4gClJpZ2h0IG5vdyBJIGp1c3QgdXNpbmcgdGhlc2UgLiBXaGljaCB3b3JrIHdlbGwgb24gc29tZSB0eXBlcyBvZiBpY2UsIGJ1dCBub3Qgb3RoZXJzLiAKVGhlIHBsYXllciB3aXRoIHRoZSBsb3NpbmcgaGFuZCBpbnZvbHZlZCBpbiBhICJiYWQgYmVhdCIgcmVjZWl2ZXMgNDAgcGVyY2VudCBvZiB0aGUgamFja3BvdC4gVGhlIHBsYXllciB3aXRoIHRoZSB3aW5uaW5nIGhhbmQgcmVjZWl2ZXMgMjAgcGVyY2VudCwgYW5kIHRoZSByZW1haW5pbmcgcGxheWVycyBhdCB0aGUgdGFibGUsIHVwIHRvIGVpZ2h0IG9mIHRoZW0sIHNwbGl0IHRoZSByZW1haW5pbmcgNDAgcGVyY2VudC4gVGhlIGphY2twb3QgaXMgc28gaGlnaCwgaXQncyBhY3R1YWxseSBsaWZlIGNoYW5naW5nIG1vbmV5LgpGYW1pbGllcyBpbnRlcmVzdGVkIGluIHN0cmVuZ3RoZW5pbmcgdGhlaXIgZmluYW5jaWFsIHBpY3R1cmUgd291bGQgZG8gd2VsbCB0byBsZWFybiB0aGlzIGxlc3Nvbi4gbWluaW1pemluZyB0aGUgYW1vdW50IG9mIGludGVyZXN0IHRoZXkgcGF5LCBmb2N1c2luZyBvbiBhc3NldCBhY2N1bXVsYXRpb24gdnMuIGxpYWJpbGl0eSBwdXJjaGFzZXMsIGV0Yy4sIGFyZSBncmVhdCB3YXlzIHRvIHN3YXkgdGhlIG9kZHMgZmF2b3JhYmx5IHRvd2FyZCB0aGVpciBzdWNjZXNzLgpTbyBJIG1lYW4gaWYgeW91IHdhbnQgdG8gYWRkIGluIHRoYXQgbWl4IHlvdSBjYW4gYnV0IGRvZXNuJ3Qgc2VlbSB0aGF0IHN1YnN0YW50aWFsIHRvIG1lLiBUdXJuIGlzIGEgbWFuZGF0b3J5IGNhbGwsIHJpdmVyIHNlZW1zIGxpa2UgYSBmb2xkIHRvIG1lLiAKTm90IGluIGEgcHVuaXNoaW5nIHdheSwgYnV0IGluIGEgd2F5IHRoYXQgYnJpbmdzIGhlciBpbnRvIGFkdWx0aG9vZC4gU2hlIGhhcyBwcm9iYWJseSBiZWVuIHNoZWx0ZXJlZCBmcm9tIHRoaW5raW5nIGFib3V0IHJlYWwgY29uc2VxdWVuY2VzLgpRdWFsY29tbSBhbHNvIGhvcGVzIHRvIGdlbmVyYXRlIGF1dG9tb3RpdmUgZGVtYW5kIGZvciBpdHMgU25hcGRyYWdvbiBwcm9jZXNzb3IsIGEgaGlnaCBlbmQgY29tcHV0ZXIgY2hpcCB1c2VkIGluIEFuZHJvaWQgc21hcnRwaG9uZXMuClBsYXkgYSBnb29kIGdhbWUgYW5kIGxvb2sgZm9yIGFuIG9wcG9ydHVuaXR5IHRvIGNvbWUuIFdoaWxlIHlvdSBnZXQgYSBnb29kIHF1YWxpdHkgaGFuZCB0aGVuIGdldCBiZWhpbmQgaXQgY29tcGxldGVseS4gClRoZSBiYXNpYyBmZWF0cyB5b3UncmUgZ29pbmcgdG8gd2FudCB0byBpbnZlc3QgaW4gd2lsbCBiZSBQb2ludCBCbGFuayBTaG90LCBhbmQgUHJlY2lzZSBTaG90LiBTaW5jZSB5b3VyIHByaW1hcnkgd2VhcG9uIGlzIGxpa2VseSB0byBiZSB5b3VyIGd1bnMsIHlvdSBzaG91bGQgYWxzbyB0YWtlIERlYWRseSBBaW0uIApGaXJzdGx5LCB0aGlzIGlzIGNsZWFybHkgYW4gcG9wdWxpc3QgbW92ZSB0aGF0IHRoZSBydWxpbmcgcGFydHkgaGFzIGNhdmVkIHRvLiBJdCBleHRyZW1lbHkgdHJvdWJsaW5nIGJlY2F1c2UgYWxsIHRoZSB3b3JrIGRvbmUgYnkgdGhlIGNpdmlsIHNlcnZpY2UgKElNREEgaW4gdGhpcyBjYXNlKSBpbiBzZXR0aW5nIHJ1bGVzIGFuZCByZWd1bGF0aW9ucyAoYXMgcGVyIHRoZWlyIG93biB3b3JkcywgImNvbnNpc3RlbnQgc2V0IG9mIGd1aWRlbGluZXMiKSBoYXMgYmFzaWNhbGx5IGJlZW4gb3ZlcnJ1bGVkIGJ5IHBvbGl0aWNpYW5zIGxvb2tpbmcgdG8gY29uc29saWRhdGUgcG93ZXIgaW4gYW4gZWxlY3Rpb24geWVhci4uIApIZSB3YXMgYW5kIGlzIGEgY29tcGxldGUgamVyay4gCkFzIHNvbWVvbmUgd2hvIHNpdHMgYXQgYSBkZXNrIGFsbCBkYXksIEkgbmVlZCBtb3JlIG9mIHRoaXMga2luZCBvZiBleGVyY2lzZSBpbiBteSBsaWZlLi4gCiJOb2JvZHkgaXMgZ2V0dGluZyByaWNoIHJpZ2h0IG5vdyBieSBmb2N1c2luZyBvbiBlbGVjdHJpYyB2ZWhpY2xlcywgYnV0IHNvbWUgc3VwcGxpZXJzIHNlZSB0aGUgaGFuZHdyaXRpbmcgb24gdGhlIHdhbGwsIiBPc3Rlcm1hbm4gc2FpZC4gIklmIHlvdSBtYW51ZmFjdHVyZSBlbmdpbmUgYmxvY2tzLCBpdCBkb2Vzbid0IHRha2UgYSBicmFpbiBzdXJnZW9uIHRvIGZpZ3VyZSBvdXQgdGhhdCA1MCB5ZWFycyBmcm9tIG5vdywgd2UncmUgbm90IGdvaW5nIHRvIGhhdmUgYXMgbWFueSBlbmdpbmUgYmxvY2tzLiIKU29vbiwgeW91IHdpbGwgbm90aWNlIHRoZSBkaWZmZXJlbmNlLiAKSSBoYXZlIGZpbmFsbHkganVtcGVkIGJhY2sgb24gdGhlIEFCIHJvdXRpbmUgYmFuZHdhZ29uLCBhcyBzbWFsbCBhcyB0aGlzIGlzLCBhZnRlciBhIHdlZWsgb2YgdHJhdmVsbGluZyBhbmQgZG9pbmcgc29tZSBjbGVhbnNlciB0ZXN0cy4gVGhpbmdzIHNlZW0gcHJvbWlzaW5nIHdpdGggbXkgQ2VyYVZlIFJlbmV3aW5nIFNBIGNsZWFuc2VyIGFuZCBJIHByb2JhYmx5IHN3aXRjaCBvdmVyIHRvIHVzaW5nIGp1c3QgdGhhdCBieSB0aGUgZW5kIG9mIHRoZSB3ZWVrIHNpbmNlIGl0IGxlc3MgZHJ5aW5nIGFuZCBoYXMgYSBiZXR0ZXIgcEguIEkgbGVmdCBvZmYgbXkgT2xheSBtb2lzdHVyaXplciBiZWNhdXNlIEkgbm93IGhhdmUgYSBidW5jaCBvZiBzYW1wbGVzIGFuZCBkZWNhbnRzIHRvIHRlc3QuLiAKSGUgY2xlYXJseSBtZW50YWxseSB1bnN0YWJsZSBhbmQgSSBob25lc3RseSB3b3VsZG4gYmUgc3VycHJpc2VkIGlmIHRoYXQgd2hhdCBoZSBlbmRzIHVwIGNob3NpbmcgZm9yIGhpbXNlbGYuLiAKVGhpcyBlbmRvd2VkIGVtcGxveW1lbnQgd2l0aCBhIHNlbnNlIG9mIG1lYW5pbmcgYW5kIHN0YXR1cyB3aXRoaW4gdGhlIGNvbW11bml0eSB0aGF0IHJlZmxlY3RlZCBpdHMgaW1wb3J0YW5jZS4gCkkgd2FudCB0byBpbnRyb2R1Y2UgcGVvcGxlIHRvIG5vdCBsYWJlbGxpbmcsIGdlbmVyYWxpemluZywgcG9sYXJpemluZyB0aGluZ3MgYmVjYXVzZSBhdHRhY2hpbmcgZW1vdGlvbnMgdG8gdGhpbmdzIG1ha2UgeW91IG1vcmUgYmlhc2VkLCBidXQgSSBzd2VhciBJIGp1c3QgbG9vayBsaWtlIGFuIGlkaW90LiAKSSB0aGluayB0aGF0IHRob3NlIHRoaW5ncyBhcmUgaW1wb3J0YW50OyBob3dldmVyLCBzbyBtYW55IHBlb3BsZSBncm93IHVwIG5vdCBrbm93aW5nIGJhc2ljIGFuZCBzaW1wbGUgdGhpbmdzIHRoYXQgd291bGQgc2F2ZSB0aGVtIHRpbWUgYW5kIG1vbmV5LiBJIG1lYW4sIEkgb25seSAzMCB5ZWFycyBvbGQsIGJ1dCBJIGNvbWUgZnJvbSBhIGxvbmcgbGluZSBvZiBjcmVhdGl2ZSB3b21lbiBhbmQgbWVuIHdobyBjb21iaW5lZCBib3RoIGlubm92YXRpb24gbGVhcm5lZCBza2lsbHMgdG8gc2F2ZSB0aW1lIGFuZCBtb25leS4gCkZhdEFuZEluZXhwZXJpZW5jZWQgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpGZWVsIGxpa2UgQTEwIGlzIGNsb3NlIHRvIHRoZSB0aXAgdG9wIG9mIG91ciByYW5nZSwgYXMgeC9jIHR1cm4gYW5kIHggcml2ZXIgaXMgcHJldHR5IHRyYXBweSBmb3IgYSBsb3dlciBkaWFtb25kIGZsdXNoIGxpa2UgOWQ4ZC4uIApCZSB2ZXJ5IGNhcmVmdWwuIEFzIHlvdSBrbm93IHJlc2VydmVzIGhhdmUgZGlmZmVyZW50IGNvdXJ0cyBhbmQgbGF3cywgaXQgdmVyeSBoYXJkIHRvIGdldCBhIGtpZG5hcHBlZCBjaGlsZCBvZmYgb25lLCBlc3BlY2lhbGx5IGlmIHRoZSBwYXJlbnQgaXMgbmF0aXZlLiBFbGRlcnMgd2lsbCBkbyBhbnkgYW5kIGFsbCBwb3NzaWJsZSB0byBrZWVwIHRoZSBjaGlsZCB3aXRoIHRoZSB0cmliZS4gCkFzIG90aGVycyBzdWdnZXN0ZWQsIHRyeSBjYWxsaW5nIHRoZSBjb21wYW55IGZpcnN0LiBUaGV5IHdhbnQgdG8gcHJvdGVjdCBhZ2FpbnN0IGNoZWF0aW5nLCBidXQgdGhlaXIgcmVjb3JkcyBzaG91bGQgYmUgYWJsZSB0byBzaG93IHlvdSB3ZXJlbid0IHBsYXlpbmcgdHdvIGFjY291bnRzIGF0IG9uY2UgKGFzc3VtaW5nIHlvdSB3ZXJlIG5vdCksIGFuZCBhIGh1bWFuIG1heWJlIGFibGUgdG8gbWFrZSBhIGRldGVybWluYXRpb24gdG8gcmVzdG9yZSB5b3VyIGFjY2VzcyB3aXRob3V0IHdvcmtpbmcgYXJvdW5kIHRoZWlyIHN5c3RlbSAod2hpY2ggY291bGQgZ2V0IHlvdSBtb3JlIHRyb3VibGUpLgpBbHNvLCB0aGlzIGlzIHdlaXJkbHkgc3BlY2lmaWMsIGJ1dCBpbiBoaXN0b3JpY2FsIGRpc2N1c3Npb25zIGl0IHNlZW1zIHRvIGJlIHZlcnkgY29tbW9uIGZvciBEdXRjaCBzcGVha2VycyB0byBzbGlwIHVwIGFuZCB3cml0ZSAiV09JSSIgaW5zdGVhZCBvZiAiV1dJSSIuCldlIGNhbid0IHNheSB3aGV0aGVyIGhlIHBvc3Rwb25lZCB0aGUgcGxhbiBhZnRlciBJbXJhbidzIHRvdWdoIHJlc2lzdGFuY2Ugb3IgdGhlIHBsYW4gZGlkIG5vdCBleGlzdCBpbiB0aGUgZmlyc3QgcGxhY2UuIApQZXJzb25hbGx5IGFuZCBwcm9mZXNzaW9uYWxseSwgQmVsbGV3IHVzZXMgbWVkaXRhdGlvbiwgdmlzdWFsaXphdGlvbiwgZGVlcCBicmVhdGhpbmcgYW5kIHBvc2l0aXZlIHNlbGYgdGFsayBvbiBhIGRhaWx5IGJhc2lzLiAKWW91IGJvdGggY2hlY2sgdGhlIGZsb3AgYW5kIHRoZSB0dXJuIHNob3dzIDhjLiAKQW55d2F5LCB0aGVyZSBpcyBub3RoaW5nIHRvIGZlYXIuIFdvcmxkIFBva2VyIFRvdXIgaXMgYW4gb2xkIGFuZCB3ZWxsIGtub3duIGJyYW5kLiBZb3UgY2FuIHNlZSBpdCBvbiBUViBhbmQgb24gYmlsbGJvYXJkcy4gClRoaXMgaXMgd2hhdCBnaXZlcyBwbGF5ZXJzIG9uZSBjb21wbGljYXRlZCB0YXNrIHdoaWNoIGlzOiBob3cgdG8gZmluZCB0aGUgcGVyZmVjdCBwb2tlciBzaXRlPyBUaGVyZSBhcmUgc28gbWFueSB0aGluZ3MgdGhhdCBtYXR0ZXIgd2hlbiBpdCBjb21lcyB0byBjaG9vc2luZyB3aGljaCBwb2tlciBzaXRlIHRvIGpvaW4gYW5kIHlvdSBjYW4gZmluZCBzb21lIG9mIHRoZW0gaW4gb3VyIG9ubGluZSBwb2tlciBnYW1ibGluZyBzZWN0aW9uLi4gClBvb3IgcGVvcGxlIGFyZW4gZ29pbmcgdG8gcmVhbGl6ZSB5b3UgbmVlZCB0byBidXkgdGhvc2UgJDUwMCsgcXVlc3Rpb24gYmFua3MgdG8gY2h1cm4gdGhyb3VnaCBiZWNhdXNlIG1lZGljYWwgc2Nob29scyBkb24gZXZlbiB0ZWFjaCB5b3Ugd2hhdCB5b3Ugc2hvdWxkIGJlIHN0dWR5aW5nIGZvciB5b3VyIGJvYXJkcy4gCjAyLzEyLzIwMTkgMDc6MjMgUE0gTVNUICAgSXQgaXMgdmVyeSBpbXBvcnRhbnQgdG8gdGFrZSB0aW1lIHRvIHdyaXRlIGRvd24geW91ciBxdWVzdGlvbnMgb3IgY29uY2VybnMgYmVmb3JlaGFuZCBzbyB5b3UgZG9uJ3QgZm9yZ2V0IHRvIG1lbnRpb24gdGhlbS4gCldpbmRzb3IgUG9saWNlIGhhdmUgcGFzc2VkIGEgYnVkZ2V0IGNhbGxpbmcgZm9yIDI0IGFkZGl0aW9uYWwgb2ZmaWNlcnMgdG8gcmVzcG9uZCB0byByaXNpbmcgY3JpbWUgcmF0ZXMsIHdoaWNoIHdpbGwgY29zdCBhbiBleHRyYSAkNCBtaWxsaW9uIHBlciB5ZWFyLiAKS2VlcCBpbiBtaW5kIHRoYXQgYWRkaXRpb25hbCB1c2VycyBtYXkgYmUgaW52aXRlZCB0byBqb2luIGEgcHJpdmF0ZSBjaGF0IGFmdGVyIHlvdSBzZW5kIGEgbWVzc2FnZS4gCkl0IHJlYWxseSBkZXBlbmRzIG9uIHdoYXQgeW91IHdhbnQgdWx0aW1hdGVseS4gSWYgeW91IHNwZW5kICQyMGsgdG8gZmluaXNoIHlvdXIgYmFzZW1lbnQsIGhvdyBtdWNoIG1vcmUgcmVudCBhcmUgeW91IGNoYXJnaW5nIGNvbXBhcmVkIHRvIG5vdCBmaW5pc2hpbmcgaXQ/IFdoYXQncyB5b3VyIHBheWJhY2sgcGVyaW9kPyBIb3cgbXVjaCBtb3JlIHdpbGwgeW91ciBob3VzZSBiZSBhcHByYWlzZWQgZm9yLCBhbmQgd2hhdCBkbyB5b3UgaW50ZW5kIHRvIGRvIHdpdGggdGhhdCBleHRyYSBlcXVpdHk/CkFLQSwgeW91IHNjcmV3IHVwIGxlc3MuIApUaGlzIGFsYnVtJ3MgYmVlbiBraW5kIG9mIGEgbGFib3Igb2YgbG92ZS4gClRoYXQgcmVhbGx5IHdoZXJlIHlvdSBoYXZlIHRoZSB1cHBlciBoYW5kIGluIHRoaXMgYXJndW1lbnQuIFlvdSB3ZW50IGludG8gdGhpcyByZWxhdGlvbnNoaXAgd2l0aCB0aGUgYmVsaWVmIHRoYXQgeW91IHdlcmUgcmFpc2luZyBraWRzIGFzIG9uZSBjb252ZW50aW9uYWxseSBkb2VzLiAKQnV0LCBJIGhhdmUgdG8gZGlzYWdyZWUuIApOb3QgdG8gbWVudGlvbiBJIGFzc3VtaW5nIHlvdSB3YW50IHRvIGdldCBwYWlkIGZvciB0aGlzIHZlbnR1cmUsIHNvIHRoYXQgZXZlbiBtb3JlLiBQZW9wbGUgYXJvdW5kIGhlcmUgYXJlbiBnb2luZyB0byBiZSB3aWxsaW5nIHRvIHNoZWxsIHRoYXQgbXVjaCBvdXQgb2YgcG9ja2V0LiBFc3BlY2lhbGx5IHdoZW4gdGhleSBoYXZlIGluc3VyYW5jZSB3aXRoIGEgbXVjaCBsb3dlciBjb3BheS4uIApJIGhhZCB0byBtYWtlIHRocmVlIGNpcmN1aXRzIG9mIHRoZSByb29tIGJlZm9yZSBJIGNvdWxkIGNob29zZS4gMTAvMTAuIApOb3ZhayBzYXlzIGhlIHdhcyBpbnRyaWd1ZWQgYnkgdGhlIHRoZW9yeSBvZiB0aGUgbWV0YWwgY3lsaW5kZXIgaW4gYSBtaWNyb3dhdmUgc2VydmluZyBhcyB0aGUgaWduaXRpb24gc291cmNlIG9mIHRoZSBleHBsb3Npb24sIGFuZCB3YW50ZWQgdG8gdHJ5IGl0IG91dDogIkkgdGhvdWdodCBpdCB3YXMgcG9zc2libGUuIEkgY2FsbGVkIGFsbCBteSBlbmdpbmVlciBmcmllbmRzIGFuZCBhc2tlZCB0aGVtIHdoYXQgd291bGQgaGFwcGVuIGlmIHlvdSBwdXQgYSBtZXRhbCBjeWxpbmRlciBpbiBhIG1pY3Jvd2F2ZS4gVGhleSBzYWlkIG5vdGhpbmcgd291bGQgaGFwcGVuLiIKSSB1c2UgdGhpbm5lciBtYXRlcmlhbHMgZm9yIHRoZSBpbnRlcm5hbCBsaW5pbmdzIChpdCBnb3QgYSBiaXQgYnVsa3kgYXQgY2VydGFpbiBwb2ludHMpIFNpbWlsYXJseSwgSSB3b3VsZCBtYWtlIGVhY2ggcG9ja2V0IGxpbmluZyB3aXRoIHR3byBpbmRpdmlkdWFsIHBpZWNlcywgYnV0IHJhdGhlciBJIGhhdmUgdGhlbSBzaWRlcyBNYXliZSBwdXQgaW4gc29tZSBraW5kIG9mIHVub2J0cnVzaXZlIGd1c3NldCBidXQgY29uc2lkZXJpbmcgdGhpcyBpcyBhIHByZXR0eSBiYXNpYyBFREMgYmFnLCBJIGRvbiBzZWUgbXVjaCBuZWVkIGZvciBpdC4gTGVzc29ucyBMZWFybmVkOi4gCkJlcm5zdGVpbiBzYWlkIDY5IGVtcGxveWVlcyBhcmUgYWxyZWFkeSBzdGF0aW9uZWQgaW4gYSBOYXNodmlsbGUgV2VXb3JrLCB3aXRoIG1vcmUgam9pbmluZyB0aGVtIG5leHQgeWVhci4gIk15IGN1c3RvbSBjb3dib3kgYm9vdHMgYXJlIG5vdCBmaW5pc2hlZCwiIGhlIHNhaWQuICJUaGV5IHRha2UgdGltZS4iClRoZSBwb3RlbnRpYWwgZm9yIHZhcmlvdXMgZm9ybXMgb2YgY29lcmNpb24gYW5kIHR5cmFubnkgaW4gc3VjaCBhIHNjZW5hcmlvIGlzIG9idmlvdXMuLiAKVGhlIHRydWNrIHNxdWVhbHMgdGlyZXMgYW5kIGxlYXZlcyB0aGVpciBidWRkeSBiZWhpbmQuIApPa2F5LCBsZXRzIHB1dCB0aGlzIHRoZSBlYXN5IHdheSwgeW91IHVzZSBjaGVhdCBlbmdpbmUgdG8gdXN1YWxseSBoYWNrIGhlYWx0aCwgZXhwZXJpZW5jZSBvciBhbW1vLiBEZXBwZW5naW5nIG9uIHdoYXQgZ2FtZSBvdmJpb3VzbHksIGJ1dCBpdCB3aWxsIHRha2UgYSBmZXcgdHJpZXMgYmVmb3JlIHlvdSBjYW4gZmluZCB5b3VyIG93biBoYWNrcy4gClRoZXkgZ3JldyBhIGxvdCB0aGlzIHllYXIsIGltcHJvdmVkLCBidXQgaXQgd2FzIHN0aWxsIHRvdWdoLiBJIHdpbGwgc2F5IHNoZSBsZWFybmVkIGFib3V0IGJlaW5nIGEgbGVhZGVyIGFuZCBiZWluZyB1bnNlbGZpc2ggb24gdGhlIGljZS4gQnV0IGF0IHRoZSBzYW1lIHRpbWUgaXQgd2FzIHRvdWdoIGJlY2F1c2Ugd2UgcGxheWVkIG90aGVyIGdpcmxzIHRlYW1zIHRoYXQgd2VyZSBleHBlcmllbmNlIGFuZCBnb3QgY3J1c2hlZCBtb3N0IG9mIHRoZSB5ZWFyLCB3aGljaCBpc24gZnVuIGZvciBhbnlvbmUuIApVZ2gsIGF1ZGllbmNlcyB3ZXJlIHNvIG11Y2ggY29vbGVyIGluIHRoZSBhbmQgSXQgd2FzIGFuIGVkZ2llciB0aW1lIHdoZXJlIHlvdSBjb3VsZCBzbW9rZSBpbmRvb3JzIHdoaWxlIHByZWduYW50IGFuZCBtYWtlIGFnZ3Jlc3NpdmUgYW5kIGRlcm9nYXRvcnkgcmVtYXJrcyBhYm91dCBnYXlzLCB3b21lbiBhbmQgQXNpYW5zLgoiSSBzYWlkLCAnd2hhdCdzIHVwPycgSSBkaWRuJ3QgcGxheSBhZ2FpbnN0IGhpbSwgSSd2ZSBuZXZlciBzZWVuIGhpbSBiZWZvcmUuIApXcmFwcGluZyBpbiBhbHVtaW51bSBmb2lsIGJ5IGZvbGRpbmcgdGhlIGVkZ2VzIGlzIGJlc3Qgd2F5IHRvIHByb3RlY3QgZnJvbSBhaXIsIHRoZW4gc2ltcGx5IGtlZXBpbmcgY29mZmVlIGF0IGFtYmllbnQgYWlyIHRlbXAgYW5kIG5vdCBhYm92ZSA4MCBkZWdyZWVzIEYsIGhlYXQgaXMgd29yc2UgdGhhbiBjb29sLCBidXQgZnJvemVuIGlzIGJhZCB0b28uIEJ1dCBpZiBzaGUgaXMgdHJhdmVsaW5nIGJ5IGFpciBwbGFuZSBhbnkgdGhpbmcgd3JhcHBlZCBpbiBmb2lsIGlzIGZvciBzdXJlIGdvbm5hIGJlIG9wZW5lZCB1cCBmb3IgaW5zcGVjdGlvbi4gTm93IHRoZSBvcmlnaW5hbCBwcm9kdWN0IGNhbGxlZCBzYXJhbiB3cmFwIHBsYXN0aWMgZmlsbSBpcyBpbXBlcnZpb3VzIHRvIGFpciBmbG93IGFuZCBjbGVhci4gCk1vcnRnYWdlIHN0cmVzcyB0ZXN0IGp1c3Qgb25lIGZhY3RvciBpbiBhIHZvbGF0aWxlIG1hcmtldEFsdGhvdWdoIHRoZSB0ZW1wZXJhdHVyZSBoYXMgZGlhbGxlZCBkb3duIGluIENhbmFkYSBob3R0ZXN0IGhvdXNpbmcgbWFya2V0cywgaXQga2VlcHMgb24gZ2V0dGluZyBsZXNzIGFmZm9yZGFibGUgdG8gb3duIGEgaG9tZS4gSW4gUkJDIGxhdGVzdCBxdWFydGVybHkgSG91c2luZyBBZmZvcmRhYmlsaXR5IFJlcG9ydCwgdGhlIGFmZm9yZGFiaWxpdHkgbWVhc3VyZSBpcyBub3cgYXQgaXRzIHdvcnN0IGxldmVsIGluIENhbmFkYSBzaW5jZSAxOTkwLiBSaXNpbmcgaW50ZXJlc3QgcmF0ZXMgYW5kIHRoZSBtb3J0Z2FnZSBzdHJlc3MgdGVzdCBhcmUgdGhlIG1haW4gY2F1c2VzLi4gClRoZSB5ZWxsb3cgY29sb3IgaXMgZnJvbSB0dW1lcmljLiBTb21lIHJlc3RhdXJhbnRzIHVzZSAnY3VycnkgcG93ZGVyJyB3aGljaCBpbmNsdWRlcyB0dW1lcmljIHBsdXMgb3RoZXIgYmFzZXMgd2hpbGUgb3RoZXJzIG1ha2UgdGhlaXIgb3duLiBTb21lIHByZSBtYWtlIGEgY3VycnkgcGFzdGUgYnV0IHlvdSBjYW4gZmluZCBjb21tZXJjaWFsbHkgbWFkZSBvbmVzIGluIGFueSBBc2lhbiBzdG9yZS4gVGhlIG92ZXJhbGwgZmxhdm91cnMgYXJlIHBhbiBBc2lhbiBidXQgdGhlIHJlY2lwZSBpcyBhbGwgdGhlaXJzLiBPbmUgdGhpbmcgdGhhdCBpcyBhbHNvIGluY2x1ZGVkIGluIHRoaXMgaXMgVGhhaSByZWQgY2hpbGVzLgpCdXQgdGhhdCBkb2VzbiBtZWFuIHlvdSBnb3R0YSBiZSBhIGRlYmJpZSBkb3duZXIuIEkgdGhpbmsgb2YgbXlzZWxmIGFzIGEgbmloaWxpc3QgYnV0IEkgZmluZCBqb3kgaW4gdGhlIHByb3NwZWN0cyBvZiBjb250aW51ZWQgaHVtYW4gZXhpc3RlbmNlLiBXZSBhIHByZXR0eSBjYXBhYmxlIHNwZWNpZXMgaWYgd2UganVzdCBwdXQgb3VyIGJpZyBvbGQgYnJhaW5zIGludG8gYWN0aW9uLiAKVGhlcmUgYXJlIGFsc28gYSBudW1iZXIgb2YgRHVuZ2VvbiBEcmFnb24gZmFucyBhdCBQUiBzaG9wIEVkZWxtYW4sIHdoaWNoIGhlbHBlZCB0aGUgYWdlbmN5IGNvbmNlaXZlIG9mIHRoZSBjb250ZXN0IGlkZWEgZm9yIHRoZWlyIGNsaWVudCwgQWRvYmUsIGFuZCBwaXRjaCBpdCB0byBXb3RDLiAiSXQgd2FzIGJhc2ljYWxseSBhIGNvbGQgY2FsbCwiIHNheXMgRWRlbG1hbiBDaGllZiBDcmVhdGl2ZSBPZmZpY2VyIFRvbSBQYXJrZXIgYWJvdXQgdGhlIGZpcnN0IGNvbnRhY3Qgd2l0aCB0aGUgRCB0ZWFtLiAKSW4gdGVybXMgb2YgY29uY2VhbGluZyBmaXJlYXJtcyBJIG5vdCBzdXJlIGhvdyB3ZSB3b3VsZCBkbyB0aGF0IGluIHVuaWZvcm0sIGhvd2V2ZXIgcGVyc29uYWxseSBJIGZvdW5kIG15IGV4cGVyaWVuY2UgaGFzIGJlZW4gY29tcGxldGVseSB0aGUgb3Bwb3NpdGUgZnJvbSB3aGF0IHRoZSBhcnRpY2xlIGltcGxpZXMuIFBlb3BsZSBzZWVtIHRvIGZpZ2h0IGFuZCBwbGF5IHVwIHdpdGggbWUgYW5kIG15IGNvbGxlYWd1ZXMgYSBsb3QgbGVzcyAuIDE3NyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KR29lcyBvdXQgdGhlIGRvb3IsIGdldHMgaW4gdGhlIGNhciwgc2V2ZXJlZCBwZW5pcyBpbiBoYW5kLCBhbmQgZHJpdmVzIGEgYml0IGFuZCB0aGVuIHRocm93cyBpdCBvdXQgdGhlIHdpbmRvdy4gClBob25lIDY5NiA0MSBTLiAKSXQgbm90IHVuYmVhdGFibGUuIEl0IGlzIHZlcnkgaGlnaC4gWW91IHdvdWxkIGhhdmUgdG8gYmUgcGFydGljdWxhcmx5IGdvb2QgdG8gYmVhdCBhdXN0cmFsaWFuIGxpdmUgZ2FtZSByYWtlIGluIGdlbmVyYWwuCkFsbW9zdCBldmVyeSBwb2tlciByb29tcyBpcyBvZmZlcmluZyBwb2tlciBmcmVlcm9sbHMuIEEgRnJlZXJvbGwgaXMgYSBGcmVlIFBva2VyIFRvdXJuYW1uZXQgd2l0aCBhIHNwb25zb3JlZCBwcml6ZSBwb29sLiAKVGhlIHJpZ2h0IHBvc2UgaGFzIGVuZXJneS4gSXQgY29udmV5cyBtb3ZlbWVudC4gCkdlbmVyYWxseSwgZWFjaCBvbmUgaXMgYnVpbHQgb3V0IG9mIGZpY3Rpb24gZmlyc3QgTW92ZXM7IGNoYXJhY3RlciBTdGF0cyBhbmQgc3BlY2lmaWMgTW92ZSBzdHJ1Y3R1cmVzIGNhbiB2YXJ5IHdpZGVseSBiZXR3ZWVuIGdhbWVzLiAKQSBwcmltYXJ5IGFnZ3Jlc3Nvci9zdXNwZWN0ICgzNCB5ZWFyIG9sZCBBQUYpIHB1bmNoZWQgd2FsbHMsIHRocmV3IGl0ZW1zIGFuZCB0aHJlYXRlbmVkIG90aGVyIHJlc2lkZW50cyB3aXRoIGEgZmlyZXBsYWNlIHBva2VyLiAKVGhlbiB3ZSBnb3QgdGhpcyBhc3NpZ25tZW50IHRvIHB1dCB1cCB0aGVzZSBiaWcgZmxhdm9yZWQgd2F0ZXIgZGlzcGxheXMuIFRoZSBqb2IgaGFkIGEgdGltZSByZXN0cmljdGlvbiB0aGF0IGl0IGhhZCB0byBiZSBkb25lIGJ5IDZwbSBvciBzby4gV2hhdGV2ZXIgZGF5IEkgc2NoZWR1bGVkIGl0LiAKSSBqdXN0IGRvbiB3YW50IHBlb3BsZSB0byBwYW5pYy4gVXAgdG8geW91LCBpZiB5b3Ugd2FubmEga2VlcCB5b3VyIHByb2ZpbGVzIHNlcGVyYXRlIHRoYXQgZmluZSBhbmQgSSBnZXQgdG8geW91IGluIGR1ZSB0aW1lIHJlZ2FyZGxlc3MuIENoZWVycyBtYXRlLi4gCkluc2lzdGVuY2Ugb24gcmFwaWRseSBkZW51Y2xlYXJpemluZyB0aGUgcGVuaW5zdWxhLCBpc3N1aW5nIGEgaGFyc2hseSB3b3JkZWQgc3RhdGVtZW50IHRoYXQgdGhlIFdoaXRlIEhvdXNlIGRpc21pc3NlZCBhcyBhIG5lZ290aWF0aW5nIHBsb3kuLiAKSSBkb24ndCBzZWUgaG93IGVpdGhlciB2aWV3IGNhbiB0YWtlIGEgYnJvYWQgc3dlZXAgdGhhdCBpdCAxMDAgcGVyY2VudCB3aWxsIHdvcmsgb3Igd29uJ3Qgd29yayBmb3IgZXZlcnlvbmUuIApJZiB5b3UgcGFyc2UgSFRNTCB3aXRoIHJlZ2V4IHlvdSBhcmUgZ2l2aW5nIGluIHRvIFRoZW0gYW5kIHRoZWlyIGJsYXNwaGVtb3VzIHdheXMgd2hpY2ggZG9vbSB1cyBhbGwgdG8gaW5odW1hbiB0b2lsIGZvciB0aGUgT25lIHdob3NlIE5hbWUgY2Fubm90IGJlIGV4cHJlc3NlZCBpbiB0aGUgQmFzaWMgTXVsdGlsaW5ndWFsIFBsYW5lLCBoZSBjb21lcy4gSFRNTCBwbHVzIHJlZ2V4cCB3aWxsIGxpcXVpZnkgdGhlIG5lcnZlcyBvZiB0aGUgc2VudGllbnQgd2hpbHN0IHlvdSBvYnNlcnZlLCB5b3VyIHBzeWNoZSB3aXRoZXJpbmcgaW4gdGhlIG9uc2xhdWdodCBvZiBob3Jyb3IuIAo0IG1pbGxpb25zIGRlIHByb3N0aXR1CkJlY2F1c2UgdGhleSBjb3VsZCBub3QgcmVseSBvbiBwb2tlciBmb3JldmVyIGFzIGFsbCBmYWRzIGNyZXN0LCBUcmFkZW1hcmsgR2xvYmFsIGhhcyBtb3ZlZCBpbnRvIHNhbGVzIG9mIG90aGVyIGl0ZW1zLCBmcm9tIHJvY2tpbmcgaG9yc2VzIHRvIHRvb2xzLiBUcmFkZW1hcmsgZXZlbiByZWZ1cmJpc2hlcyBzbG90IGxpa2UgZ2FtaW5nIG1hY2hpbmVzIGl0IGJ1eXMgdXNlZCBpbiBKYXBhbiB0byBzZWxsIHRvIHJldGFpbGVycy4gQWxsIHRvbGQsIHRoZSBjb21wYW55IGhhcyA0LDAwMCBjdXN0b21lcnMgd2hvIHNlbGwgZnJvbSB0d28gaXRlbXMgZGFpbHkgdG8gaHVuZHJlZHMuLiAKRkVNQSBmaXJzdCBwbGFubmVkIGEgbmV3IHN0cnVjdHVyZSBmb3IgJDI2IG1pbGxpb24sIGFuIGVzdGltYXRlIHRoYXQgcm9zZSB0byAkNTcgbWlsbGlvbi4gClllc3RlcmRheSB0aGUgT2JhbWFzIGZsZXcgdG8gT3NsbyBzbyB0aGUgUHJlc2lkZW50IGNvdWxkIGFjY2VwdCB0aGUgTm9iZWwgUGVhY2UgUHJpemUuCkp1c3QgRGFuY2UsIFBva2VyIEZhY2UsIExvdmVHYW1lLCBQYXBhcmF6emkgYW5kIEVoLCBFaCBmcm9tIHRoZSBmaXJzdCBhbGJ1bSwgYW5kIEJhZCBSb21hbmNlLCBUZWxlcGhvbmUgYW5kIEFsZWphbmRybyBmcm9tIHRoZSBzZWNvbmQgYWxidW0uIApEdWRlLCBsaXRlcmFsbHkgbm90aGluZyB0byBzZWUgaGVyZS4gSSBub3QgYXdhcmUgb2YgYW55IGNvbGxlZ2UgdGhhdCB3aWxsIGFsbG93IHBlb3BsZSB3aG8gYXJlIG5vdCBhZmZpbGlhdGVkIHdpdGggdGhlIGNvbGxlZ2UgdG8gdXNlIGEgcm9vbSB1bmxlc3Mgc29tZW9uZSBhZmZpbGlhdGVkIHdpdGggdGhlIGNvbGxlZ2UgYm9va2VkIGl0IGFuZCBhIHJlcHJlc2VudGF0aXZlIGlzIGVpdGhlciBwcmVzZW50IG9yIHRoZXkgY2xlYXJlZCBpdCBmaXJzdC4gVGhlIGdyb3VwIGhlIHNhaWQgZ2F2ZSB0aGVtIHBlcm1pc3Npb24gd2FzIG5vdCBhdmFpbGFibGUgZm9yIGNvbW1lbnQsIGFuZCB0aGUgY29wIHVuZGVyc3RhbmRpbmcgd2FzIHRoZXkgZGlkIG5vdCBzcG9uc29yIHRoZSBldmVudC4uIApIZXJlIG9uZS4gSSBrbmV3IHRoaXMgZ3V5IGJhY2sgaW4gdGhlIGVhcmx5IDgwIGxldCBjYWxsIGhpbSBKaW0uIHdlbGwgaGUgcmVhbGx5IHdhbnRlZCB0aGlzIGhpZ2ggcG93ZXJlZCBzdXBlcmJpa2UgYnV0IGhlIGtuZXcgaGUgY291bGRuIGV2ZXIgYWZmb3JkIGl0LCBzbyB3aGF0IGhlIGRpZCB3YXMgdG8gdGFrZSBkcml2ZSB0byBMb25kb24gYW5kIHNjb3V0ZWQgYWJvdXQgZm9yIGEgZmV3IGRheXMgdW50aWwgaGUgZm91bmQgdGhhdCBwYXJ0aWN1bGFyIG1vZGVsIHBhcmtlZCBvdXRzaWRlIGEgaG91c2UuCkknbSBoaWRpbmcsICIgc2hlIHNhaWQuIApUaGluZ3MgZ2V0IGV2ZW4gbW9yZSBkYW5nZXJvdXMgd2l0aCBOZXRhbnlhaHUgbGl0ZXJhbGx5IGFwcHJvYWNoaW5nIEhvbG9jYXVzdCBkZW5pYWwuIEluIDIwMTUgaGUgY2xhaW1lZCB0aGF0IEhpdGxlciBvbmx5IHdhbnRlZCB0byBleHBlbCB0aGUgSmV3cyBmcm9tIEdlcm1hbnksIGJ1dCB0aGF0IGl0IHdhcyB0aGUgUGFsZXN0aW5pYW4gZ3JhbmQgbXVmdGkgKElzbGFtaWMgbGVhZGVyKSBvZiBKZXJ1c2FsZW0gd2hvLCBkdXJpbmcgYSB0cmlwIHRvIEJlcmxpbiwgY29udmluY2VkIEhpdGxlciB0byBraWxsIHRoZW0uIApQaHJlZXBob3JtUHVydmV5b3Igb2Ygd2VhcG9uaXplZCBtYXNzIHB1a2luZwpNb3N0IFN5cmlhbiB2b3RlcnMga25vdyB0aGF0IEJla2Jhc2ggaGFkIHZpc2l0ZWQgdGhlIFNvdmlldCBVbmlvbiB0aGUgbGFzdCB0aW1lIGluIDE5NTMuIApUaG9zZSBpbnZlc3RpZ2F0aW9ucyBpbnZvbHZlZCBhIG51bWJlciBvZiBzdXNwaWNpb3VzbHkgdW5zb2x2ZWQgbXVyZGVycywgYW5kLCBpbiBhIGNlbGVicmF0ZWQgaW5jaWRlbnQsIHRoZSBteXN0ZXJpb3VzIGRpc2FwcGVhcmFuY2Ugb2YgYSBndW4gcG9saWNlIGhhZCBiZWVuIGhvbGRpbmcgYXMgZXZpZGVuY2UgaW4gb25lIGNhc2UuLiAKSGlzIG1pbmQgaXMgbm8gZG91YnQgc3RpbGwgbG9kZ2VkIGZpcm1seSBpbiB0aGUgMTk3MHMgYW5kIDE5ODBzIGFuZCwgc2luY2UgaGUgaGFzIGFsbW9zdCBjZXJ0YWlubHkgc3BlbnQgbW9zdCBvZiB0aGUgdGltZSBmcm9tIHRoZW4gdW50aWwgbm93IGluZWJyaWF0ZWQgYW5kIGxvY2tlZCBhd2F5IGluIHByaXZhdGUgZ2F0aGVyaW5ncyB3aXRoIG90aGVyIHJpY2ggb2xkIG1lbiBhbmQgdGhlaXIgaGlyZWQgc3ljb3BoYW50cywgdGhlIHNvY2lhbCBhbmQgbGlmZXN0eWxlIGNoYW5nZXMgaW4gSmFwYW4gaGF2ZSBnb25lIGNvbXBsZXRlbHkgb3ZlciBoaXMgaGVhZC4gQWxsIGhlIGtub3dzIGlzIHRoYXQgdGhlcmUgZXhpc3Qgc29tZSBwcm9ibGVtcywgYW5kIHRoYXQgdGhlcmUgYWxzbyBleGlzdCBwZW9wbGUgeW91bmdlciBhbmQgcG9vcmVyIHRoYW4gaGltLiAKV2lubmVycyBhcmUgZW5kdXJpbmc6IFRoZSB0cml1bXBoYW50IHBsYXllcnMgYXJlIHVzdWFsbHkgdG9sZXJhbnQuIEl0IGlzIG9mdGVuIHNlZW4gdGhhdCB0aGUgcGxheWVycyBkbyBnZXQgaW1wYXRpZW50IGFmdGVyIHRoZSBkZWFsaW5nIG9mIGhhbmQgYWZ0ZXIgaGFuZCBvZiBkZWJyaXMgY2FyZHMuIApUaGUgYWxsaWFuY2Ugc2F5cyBwb2tlciBtYWNoaW5lIGxvc3NlcyBpbiBOU1cgbGFzdCB5ZWFyIHdlcmUgJDUuNyBiaWxsaW9uLiAKV2hpY2ggc29uZ3MgaGF2ZSBiZWVuIFVLIG51bWJlciAxIGhpdHMgZm9yIExhZHkgR2FnYQpCdXQganVzdCBqdWRnaW5nIGJ5IHlvdXIgZGVzY3JpcHRpb24sIG1heWJlIGdvIGZvciBzb21ldGhpbmcgbGlrZSB3aGljaCBzaG91bGQgYmUgd2l0aGluIHlvdXIgcHJpY2UgcmFuZ2UuIE1TSSBsYXB0b3BzIGFyZSBnb29kIChoYXZlIG9uZSBteXNlbGYpIGFuZCB0aGUgbGFwdG9wIGhhcyBkZWNlbnQgc3BlY3MgZm9yIHRoZSBwcmljZS4gCkluIGVzc2VudGlhbGx5IEFMTCBvZiBvdXIgaGlzdG9yeSB3aXRoIHRoZSBleGNlcHRpb24gb2YgdGhlIGxhc3QgMTAwIHllYXJzLCBldmVyeSBtYW4sIHdvbWFuIGFuZCBjaGlsZCB3YXMgaW50aW1hdGVseSBkZWFsaW5nIHdpdGggImRlYXRoIiBvbmUgd2F5IG9yIGFub3RoZXIsIHZpcnR1YWxseSBkYWlseS4gVGhhdCBpcyB3aGVyZSBvbmUncyBmb29kIGNhbWUgZnJvbSwgYW5kIG5vIG1vZGVybiB1dG9waWFuIGVtcGF0aHkgZm9yIHRoZSBHcmVhdGVyIEFuaW1hbCB3YXMgaW4gcGxheS4gTm93LCB3ZSd2ZSBjZWxsb3BoYW5lIHdyYXBwZWQgb3VyIG1lYXRzIHRvIGFub255bWl0eS4gYW5kIHdoYXRldmVyICJob3Jyb3JzIiBwYXNzIGF0IHRoZSBjaGFybmFsIGhvdXNlIC4gYXJlIGludmlzaWJsZS4KSGVyZSBhcmUgc29tZSB0cmFuc2xhdGVkIGV4YW1wbGVzIGZyb20gdGhlIHNhbWUgc2l0ZSBJIGxpbmtlZCBhYm92ZS4uIApCaW9jaGVtY2F0IHUKVHdvIHBhaXIgd2lsbCB3aW4sIGluIFRleGFzIEhvbGRlbScgaGFuZHMgcmFua2luZyB0d28gcGFpciBpcyBoaWdoZXIgdGhhbiB0aHJlZSBvZiBhIGtpbmQuIApZb3UgbWF5IGJlIGEgbGl0dGxlIG1peGVkIHVwLiAKQmVja2VyLCBhdWpvdXJkJ2h1aSBnIGRlIDQwIGFucywgYSAiam91IHF1ZWxxdWUgZm9pcyBhdSBwb2tlciIgbG9yc3F1J2lsIHRhaXQgc3VyIGxlIGNpcmN1aXQgQVRQLCAibm90YW1tZW50ICBXaW1ibGVkb24gbG9ycyBkZXMgaW50ZXJydXB0aW9ucyAgY2F1c2UgZGUgbGEgcGx1aWUiLCBhIHQgaWwgZXhwbGlxdS4KTm90IGF0IGFsbC4gVGhpcyBpcyB5b3VyIGZhdWx0LiBNYW55IChyZWFkOiBiYXNpY2FsbHkgYWxsKSBwbGFucyBkbyBub3QgY292ZXIgdGhhdCB0eXBlIG9mIHBoeXNpY2FsIGFuZCB5b3Ugd291bGQga25vdyB0aGF0IGlmIHlvdSBoYWQgY2FsbGVkIHRvIHZlcmlmeSB5b3VyIHBsYW4gYmVuZWZpdHMgd2l0aCB0aGUgaW5zdXJhbmNlLiAKUGFyZW50ZWF1IGFuZCBNaWNoYWVsIEdyYWJuZXIgbWlnaHQgYXR0cmFjdCBtaWQgcm91bmQgcGlja3MgYW5kIEphbWVzIFJlaW1lciBpcyBhbiBpbnRlcmVzdGluZyBwcm9zcGVjdCwgYXMgd2VsbC4uIApFYXJsaWVyLCBpbiBKdW5lLCB0aGUgY29tcGFueSByZWNlaXZlZCBScyAyMTQgY3JvcmUgaW4gYSBmcmVzaCByb3VuZCBvZiBmdW5kaW5nLiAKV2hhdCB3b3VsZCBiZSB0aGUgYWJzb2x1dGUgYmVzdCB0aGluZyBhIGh1bWFuIGNvdWxkIGRvIHdpdGggdGhlaXIgdGltZSBhbGl2ZT8gSU1PIGlmIHlvdSBkb24ga25vdyB0aGUgYW5zd2VyIHRvIHRoYXQgcXVlc3Rpb24gdGhlbiB5b3VyIHRlbXBvcmFyeSBhbnN3ZXIgaXMgdG8gc2VlayB0aGUgYW5zd2VyLgpIYXZpbmcgZ3JlYXRseSByZWR1Y2VkIGhpcyBmb3J0dW5lIGFuZCBmYWNpbmcgcG92ZXJ0eSwgaGUga2lsbGVkIGhpbXNlbGYgYnkgcG9pc29uIHdoaWxlIGluIFBhcmlzLlN1Y2tsaW5nIGxlZ2FjeSwgaG93ZXZlciwgbGl2ZXMgb24uIENyaWJiYWdlIHdhcyBzb29uIGFkb3B0ZWQgYnkgc2VhbWVuIGFuZCBzcHJlYWQgd2l0aCBlbXBpcmUsIGJlY29taW5nIGVzcGVjaWFsbHkgcG9wdWxhciBpbiBOb3J0aCBBbWVyaWNhLiBJbiBmYWN0LCBpdCBpcyBjb25zaWRlcmVkIHRoZSBvZmZpY2lhbCBnYW1lIG9mIEFtZXJpY2FuIHN1Ym1hcmluZXJzIHNpbmNlIGNvbW1hbmRlciBEaWNrIE8gZ290IGEgcGVyZmVjdCBoYW5kIGluIGNyaWJiYWdlIHJpZ2h0IGJlZm9yZSBzdGFydGluZyBhIHBhdHJvbCBpbiB3aGljaCBoZSBzYW5rIGEgcmVjb3JkIG51bWJlciBvZiBlbmVteSBib2F0cy4gClllYWgsIG5vLCBkb24gbGlzdGVuIHRvIHRoaXMsIE9QLiBTaGUgbWVhbnQgdGhhdCBhcyBhIHB1dGRvd24uIFNoZSBpbXBsaWVkIGhhdmluZyBoaWdoZXIgbWFya2V0IHZhbHVlIGFuZCBlYWdlciBjYW5kaWRhdGVzLCBhbmQgdHVybmluZyB0aGVtIGRvd24gZm9yIHRyaXZpYWwgcmVhc29ucywgd2hpY2ggbWVhbnMgdGhleSB3ZXJlIGluIGFidW5kYW5jZS4gCkhhbSBTYW5kd2ljaCBjYW4gZ28gc3VjayBvbiBhIGxlbW9uLiBCdXQgaGFydm8gaXNuIHJlbW90ZWx5IHN5bXBhdGhldGljLCBlaXRoZXIuCkxhZHkgR2FHYSkuIFNlYXJjaCBZb3V0dWJlIGZvciB0aGlzc29uZy4gCkZvciBhYm91dCBhIGRlY2FkZSBpbiB0aGUgMTk4MHMsIFN0dSBsaXZlZCBpbiB0aGUgIkJsdWUgSG91c2UsIiBhIGJsdWUgVmljdG9yaWFuIGF0IDUwMCBXZXN0IEZyYW5jaXMgaW4gQXNwZW4ncyBXZXN0IEVuZC4gT25lIG9mIGhpcyByb29tbWF0ZXMgd2FzIFN0YWNleSBTY2hpbGxlciwgd2hvIGxpdmVkIGluIHRoZSBCbHVlIEhvdXNlIGZvciBmaXZlIHllYXJzIGJlZm9yZSBzaGUgYW5kIFN0dSBiZWdhbiBhIHJvbWFuY2UuIFRoZXkgd2VyZSBtYXJyaWVkIGluIEp1bmUgMTk5NS4gU3RhY2V5IGFuZCBTdHUgaGFkIHR3byBjaGlsZHJlbiwgSGFsbGllLCBub3cgMTggYW5kIEplZmZyZXkgb3IgIkplcywiIG5vdyAxNi4gQm90aCBhcmUgc3R1ZGVudHMgYXQgQXNwZW4gSGlnaCBTY2hvb2wuCkluIGZhY3QsIHRoZSB3aG9sZSBuZWlnaGJvcmhvb2QgbG9va2VkIGVtcHR5LiAKRW5zdXJpbmcgdGhlIGZpbmFuY2lhbCBzdGFiaWxpdHkgb2YgdGhlIG9yZ2FuaXphdGlvbiB0aHJvdWdoIHRoZSBleGVyY2lzZSBvZiBmaWR1Y2lhcnkgcmVzcG9uc2liaWxpdGllcywgYXMgd2VsbCBhcyB0aHJvdWdoIHBlcnNvbmFsIGZpbmFuY2lhbCBzdXBwb3J0IGFuZCBsZWFkZXJzaGlwIGluIGZ1bmRyYWlzaW5nIG9uIGJlaGFsZiBvZiBNUFI7IGFuZCwKWW91IGNhbiBzZWUgdGhhdCBEdWVjZXNDcmF6eTk5IGNhbWUgaW50byA2OCUgb2YgdGhlIHBvdHMsIHJhaXNlZCA0MCUgb2YgdGhvc2UgdGltZXMsIGFuZCBiZXQgb3V0IGF0IHRoZSBmbG9wIDEwMCUgb2YgdGhlIHRpbWUhIEV2ZW4gaWYgeW91IHdlcmUgb24gYW4gZXh0ZW5kZWQgY29mZmVlIGJyZWFrIHNpdHRpbmcgb3V0LCB5b3Ugd2lsbCBrbm93IGZyb20gdGhvc2UgbnVtYmVycyB5b3UgYXJlIGRlYWxpbmcgd2l0aCBhIG1hbmlhYy4gCk9mIHRoZSAxMCBwbGF5ZXJzIGF0IHRoZSB0YWJsZTogMSBpcyBhIHdoYWxlLCAxIGlzIGEgY29sbGVnZSBraWQgcGxheWluZyB3aXRoIGRhZGR5IG1vbmV5LCBhbm90aGVyIGlzIGEgZ2FuZ3N0YSBwbGF5aW5nIHdpdGggaWxsaWNpdCBob29kIG1vbmV5LCB0aGVyZSBpcyBhbiBhc2lhbiB3aXRoIGRlZXAgcG9ja2V0cyB0cnluYSBicmVhayBldmVuIGZyb20gYmFjY2FyYXQgbG9zZXMsIDIgYXJlIHNvY2lhbCBzZWN1cml0eSBPTUMgbml0cy4gVGhpcyBsZWF2ZXMgNCBwbGF5ZXJzIGFjdHVhbGx5IHRyeWluZyB0byB3aW4gbW9uZXkgaW4gdGhlIGxvbmd0ZXJtOiAxIGlzIGEgYmFkIHJlZywgYW5vdGhlciBpcyBhIHNsaWdodGx5IGxvc2luZyBwbGF5ZXIgd29ya2luZyBvbiBoaXMgZ2FtZSwgdGhlcmUgaXMgYSBicmVhayBldmVuIHBsYXllciB0aGF0IGJlYXRzIGFsbCBidXQgb25lIHBsYXllciBhbmQgdGhlbiB0aGVyZSBpcyB0aGUgd2lubmluZyBwbGF5ZXIgd2hvIGNydXNoZXMgYW5kIGFidXNlcyB0aGUgYnJlYWsgZXZlbiBwbGF5ZXIgbGlrZSBoaXMgcGVyc29uYWwKRWRpdDogYWx0aG91Z2ggc2VlaW5nIE9QIDUwLzUwIGNvbW1lbnQgZWxzZXdoZXJlIGluIHRoaXMgdGhyZWFkLCBtYXliZSBJIHdyb25nLiBJIGNhbiB0ZWxsIGlmIGhlIHdhcyBqb2tpbmcuCk1hc3NhZ2UgcHJvdmVzIHRvIGJlIGhlbHBmdWwgZm9yIHdvbWVuIGluIGxhYm91ciwgYmVjYXVzZSBpdCBwcm92aWRlcyB0aGVtIHBhaW4gcmVsaWVmLiAKVGhvbXBzb24sIDMzLCB3YXMgc2VuaW9yIFZQIGZyYW5jaGlzaW5nIGZvciBTdXBlckN1dHMsIHRoZSBTYW4gRnJhbmNpc2NvIGJhc2VkIHF1aWNraWUgaGFpcmN1dCBjaGFpbiwgd2hlbiBoZSBsZWZ0LCBhbG9uZyB3aXRoIGZvcm1lciBTdXBlckN1dHMgQ2hpZWYgT3BlcmF0aW9ucyBPZmZpY2VyIFRlcnJ5IE11cnJheSwgNDIsIHRvIGhlbHAgbGF1bmNoIHRoZSBuZXcgY29tcGFueS4gTXIuIE11cnJheSBpcyBHcmVhdCBBbWVyaWNhbiBCYWNrcnViJ3MgY2VvLldpdGggdGhlIGhlbHAgb2YgdGhvc2UgdHdvLCB3aG8gaGVscGVkIFN1cGVyQ3V0cyBncm93IGludG8gYSA5MDAgc3RvcmUgb3BlcmF0aW9uLCBNci4gCk4gSSBzdXBwb3NlIHlvdSBtZWFuLCBhdCBsZWFzdCBvbmUgb2YgdGhvc2UgbnVtYmVycy4gSnVzdCBjYWxjdWxhdGUgdGhlIHByb2JhYmlsaXR5IG9mIE5PVCBnZXR0aW5nIGFueSBvZiB0aG9zZSwgYW5kIHRha2UgdGhlIGNvbXBsZW1lbnQuIApUaGlzIGlzIGFuIGV4Y2VsbGVudCBwb3R0ZWQgaGlzdG9yeSwgZW1waGFzaXNpbmcgdGhlIHJhbmdlIGRpc2NpcGxpbmVzIHRhdWdodCBpbiB0aGUgdW5pdmVyc2l0eSwgYW5kIGhvdyB0aGUgaW50ZXJlc3QgaW4gc3ViamVjdHMgY2hhbmdlZCBvdmVyIHRoZSBnZW5lcmF0aW9ucy4gCldhbnQgZWxrZSBkYWcgdGVsdC4gR2VsZCBzcGVlbHQgZ2VlbiByb2wuIApCZXR3ZWVuIGNsYXNzZXMsIGhlIHdvdWxkIG1hc3NhZ2UgbXkgc2hvdWxkZXJzLCBvciBwdXQgaGlzIGhhbmQgb24gbXkgdGhpZ2ggd2hlbiBoZSB3YXMgc2l0dGluZyBuZXh0IHRvIG1lIGF0IHRoZSBjb21wdXRlcnMuClRoZSBnb2xkZW4gcnVsZSBpcyBrbm93IHdoZW4geW91J3JlIGJlYXQgYW5kIGZvbGQhIE9mIGNvdXJzZSwgYSBwcm8gaXMgZ29pbmcgdG8gcGxheSBBSywgdG9vICAgYnV0IGhlIGlzIGdvaW5nIHRvIHBvcCBpdCBwcmV0dHkgZ29vZCBwcmUgZmxvcCB0byBnZXQgaGVhZHMgdXAsIHByZWZlcmFibHkgc28gcGVvcGxlIHN1c3BlY3QgaGUgaGFzIGEgcG9ja2V0IHBhaXIsIHRoZW4gbm90aGluZyBoaXRzLCBidXQgaGUgc3RpbGwgaGFzIHRoZSBibHVmZiwgYmVjYXVzZSBoZSBtYWRlIGJlbGlldmVycyBieSBiZXR0aW5nIGhhcmQgcHJlIGZsb3AsIHdpdGggYSBnb29kIHJlcHV0YXRpb24uLiAKSSBvbmx5IGF0dGFja2VkIHRoZSBpZGVhIHRoYXQgdGhpcyBwb3N0IGlzIGltcGx5aW5nIHRoYXQgZXZlcnkgcGVyc29uIGlzIGEgZGlmZmVyZW50IGdlbmRlci4gV2hpY2ggZG9lcyBpbXBseSB0aGF0IHBlb3BsZSB3aG8gZml0IHRoZSBiaW5hcnkgYXJlIGlkZW50aWZ5aW5nIHdpdGggc29tZXRoaW5nICJmYWtlIiBvciAibWFkZSB1cCIuIFNvdW5kIGZhbWlsaWFyP0NsZWFybHkgdGhpcyBwb3N0IGlzbiBtZWFudCBhcyBhbiBhdHRhY2sgb24gcGVvcGxlIHdobyBmaXQgdGhlIGJpbmFyeSBzbyBpIHJlZ3JldCB3cml0aW5nIGl0IGluIGEgZGlzcHJvcG9ydGlvbmF0ZWx5IGFubm95ZWQgdG9uZS4gCiJQcm9iYWJseSBpZiBub3RoaW5nIGlzIGFncmVlZCBvbiB0aGlzIHdlZWssIHdoaWNoIEkgd291bGQgbm90IGJlIG9wdGltaXN0aWMgd2lsbCBoYXBwZW4sIHRoZW4gTWl0Y2gnbGwgY2FsbCB1cCBzb21lIGJpbGwgbmV4dCB3ZWVrIGFuZCBsZXQgZXZlcnlvbmUgZ2V0IHRoZWlyIHZvdGVzIG9uIHRoZWlyIGFtZW5kbWVudHMgYW5kIHNlZSB3aGVyZSBpdCBnb2VzLCIgVGh1bmUgc2FpZC4gClRoZSBNb3N0IERhbmdlcm91cyBUaGluZyBZb3UKSSBraW5kIG9mIHVzZWQgdG8gYmUgdGhhdCBndXkgaW4gc2VjcmV0LiAKSmFzb25raW04NyAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJIGhhZCBhIGZlZWxpbmcgdGhpcyBwbGFjZSB3YXNuIGxlZ2l0IGJlY2F1c2UgaXQgd2FzIGNvbm5lY3RlZCB0byBhIGhvdGVsIGJ1dCBteSB3aWZlIHNhaWQgaXQgaGFkIHRvIGJlIGJlY2F1c2UgaXQgd2FzIGEgcmVhbCBob3RlbC4gCkNvbnRpbmdlbnQgdG8gdGhlIENhbGlzdG9nYSBoaWxsc2lkZSB0byBTZWF2ZXIgVmluZXlhcmRzLiBTZWF2ZXIgbGV0IHRoZSBncm91cCBrbm93IHRoYXQgYSBidXMgd291bGQgbm90IGJlIGFibGUgdG8gbmF2aWdhdGUgdGhlIHR1cm5zIG9mIHRoZSBtb3VudGFpbiwgc28gaW5zdGVhZCwgdGhlIFJveWFscyByZW50ZWQgZm91ciBzdHJldGNoIGxpbW9zIGZvciB0aGUgdHJpcCBmcm9tIGRvd250b3duIFNhbiBGcmFuY2lzY28uIApObyBvbmUgY2FuIGRpc3Byb3ZlIHRoZSBleGlzdGVuY2Ugb2YgdW5pY29ybnMgZWl0aGVyLiBkb24gcmVhbGx5IGNhcmUgZm9yIHN1Y2ggYXJndW1lbnRzLCBpdCBlYXNpZXIgdG8gdGhlIGV4aXN0ZW5jZSBvZiBnb2QgY29tcGFyZWQgdG8gYSB1bmljb3JuLCB0aGUgZmFjdCBhbnl0aGluZyBleGlzdHMgY2FuIGJlIG9mZmVyZWQgYXMgYW4gZXhwbGFuYXRpb24gdG8gdGhlIGV4aXN0ZW5jZSBvZiBhIGdvZCwgYW5kIGEgdW5pY29ybiBleGlzdGluZyBpcyB1bHRpbWF0ZWx5IGluY29uc2VxdWVudGlhbCB0byB0aGUgbmFycmF0aXZlIG9mIHRoZSBhcmd1bWVudC4gVGhlIHVuZGVybHlpbmcgcG9pbnQgb2YgaXRzIHNpbGx5IHRvIGJlbGlldmUgaW4gbWFkZSB1cCB0aGluZ3MgaG9sZHMgdHJ1ZSB0aG91Z2gsIGp1c3QgZG9uIHRoaW5rIGNvbXBhcmluZyB1bmljb3JucyB0byBhIGdvZCByZWFsbHkgYnJpbmdzIG11Y2ggdG8gdGhlIG92ZXJhcmNoaW5nIGRlYmF0ZSBiZXlvbmQgdW5kZXJtaW5pbmcgc29tZW9uZXMgYmVsaWVmIHN0cnVjdHVyZS4KSSBzdHJ1Z2dsZWQgaGVhdmlseSB3aXRoIE9DUEQgd2hlbiBJIHdhcyB5b3VuZ2VyLCBhbmQgbG9va2luZyBiYWNrIGF0IGhvdyBJIHRob3VnaHQgb2YgdGhpbmdzIHRoZW4gdmVyc3VzIGhvdyBJIGRvIG5vdyBpcyByaWRpY3Vsb3VzLiAKSG8gQ2hpIE1pbmggd2FzIGEgZGVkaWNhdGVkIGNvbW11bmlzdCw0IGEgbWVtYmVyIG9mIHRoZSBpbm5lciBjaXJjbGUgb2YgdGhlIFNvdmlldCBDb21pbnRlcm4gYW5kIGEgcHJvdGcgb2YgRG1pdHJ5IE1hbnVpbHNreSwgdGhlIHJpZ2h0IGhhbmQgbWFuIG9mIGJvdGggTGVuaW4gYW5kIFN0YWxpbi4KR3JpdHR5LCBwYXNzaW9uYXRlLCB1bnJlbGVudGluZywgaW50ZW5zZSwgRHJldyBpcyBrbm93biBvbiB0aGUgaGFsZnBpcGUgdGVhbSBmb3IgYmVpbmcgYSBmaWVyeSBjb21wZXRpdG9yIHdobyBvbiBtb3N0IHRyYWluaW5nIGRheXMgcHJlZmVycyB0byBiZSBsZWZ0IGFsb25lIHRvIHdvcmsgb24gaGVyIGNyYWZ0IHdpdGhvdXQgZGlzdHJhY3Rpb24sIHRvIGZ1bGx5IG93biBoZXIgcHJvZ3JhbS4gKE9uIGNvbXBldGl0aW9uIGRheSwgU2lnb3VybmV5IHNhaWQgRHJldyBpcyBtb3JlIG1lbGxvdyBhbmQgbW9yZSBsaWdodCBoZWFydGVkLikgQnV0IGhhbGZwaXBlIGNvYWNoIEJlbiBWZXJnZSBzYWlkIHRob3NlIHF1YWxpdGllcyBhcmUgd2hhdCBhbGxvdyBEcmV3IHRvIHRha2Ugb24gc3VjaCBhIGRpZmZpY3VsdCBydW4sIHdoaWNoIGF0IHRoZXNlIEdhbWVzIHdpbGwgYmUgYSBsZWZ0c2lkZSA5MDAgaW50byBhIGZyb250c2lkZSByb2RlbyA1NDAgaW50byBhIGxlZnRzaWRlIDU0MCwgYSByaWdodHNpZGUgOTAwLCBhIGxlZnRzaWRlIDEsMDgwLCBhbmQgYSBzd2l0Y2ggNTQwLgpUaGVyZSBpcyBhbm90aGVyIG9kZCB0d2lzdCB0byB0aGlzIHN0b3J5LiAKVGhlcmUgaXMgc28gbXVjaCBtb3JlIGZyZWUgaW5mb3JtYXRpb24gb3V0IHRoZXJlIG5vdyBhbmQgcHJvZ3JhbXMgeW91IGNhbiB1c2UgdG8gc3R1ZHkgbm93IGFsc28uLiAKRGllc2VsIGhhcyBhIHNoaXQgdG9uIG9mIGJlbnplbmUuIDIwIHllYXJzIGZyb20gbm93IHRoZXkgYXJlIGdvaW5nIHRvIGZpZ3VyZSBvdXQgdGhhdCBjaGVtaWNhbCBYLFksIG9yIFogaXMgYXMgYmFkIGFzIGFzYmVzdG9zLiAKUE5MIGV0IGNvYWNoaW5nICBNb250cmFsIDguIE5vcyBhY3Rpdml0cyBkYW5zIGxlcyBSb2NoZXVzZXMgY2FuYWRpZW5uZXMgOS4gCk1ha2UgYSBsaXN0IG9mIHlvdXIgY29tcGFueSdzIG92ZXJhbGwgYnVzaW5lc3MgZ29hbHMuIFlvdXIgYnVzaW5lc3MgZ29hbHMgICBtb3JlIHNhbGVzLCBsYXVuY2ggYSBuZXcgcHJvZHVjdCwgZXRjLiBJdCdzIGEgZ29vZCBvdmVydmlldyBvZiBkaWZmZXJlbnQgdHlwZXMgb2YgZGlnaXRhbCBtYXJrZXRpbmcgdGFjdGljcyBmcm9tIFNFTyB0byBzb2NpYWwgbWVkaWEgYW5kIG1vcmUuIApUaGVpciBzb2x1dGlvbiBpcyB0byBoYXZlIGEgY29uZHVjdG9yL2d1YXJkIGtub3duIGFzIGEgUFNBIG9yIFBhc3NlbmdlciBTZXJ2aWNlIEFnZW50IHdobyBjYW4gaGl0IHRoZSBidXR0b24gdG8gc3RvcCB0aGUgdHJhaW4gYW5kIEkgYmVsaWV2ZSwgZHJpdmUgaXQgaW4gZW1lcmdlbmN5LiAKV291bGRuIGhhdGUgYSB0dXJuIGZvbGQuIApNYXR0aGV3IEFyZHJleSBhZ3JlZXMgaXMgbm90IG11Y2ggZWxzZSB0byBkbyBleGNlcHQgdG8gY2FwdHVyZSB0aGUgb25lIHllYXIgeW91IGNhbi4gTWFzdHJhY2NpLCBwb3J0Zm9saW8gbWFuYWdlciB3aXRoIFZhbmNvdXZlciBiYXNlZCBMeWNvcyBBc3NldCBNYW5hZ2VtZW50IEluYy4sIHNheXMgdGhlIHdob2xlIE9BUyBkZWNpc2lvbiBwcm9jZXNzIG5lZWRzIHRvIGJlIHNpbXBsaWZpZWQuIApVbmxpa2UsIHNheSwgIktub2NrZWQgVXAsIiAiVGhlIEdyYW5kIiBkb2Vzbid0IG9uY2UgcHVsbCBhd2F5IHByZW1hdHVyZWx5IGZyb20gYSB0ZW5kZXIgbW9tZW50IHRvIG1ha2UgYSBqb2tlLiAKRGlzYWdyZWVtZW50IGlzIGV4cGVjdGVkIGFuZCBoZWFsdGh5LCBidXQgd2UgY2FuIHN0YXJ0IGF0dGFja2luZyBlYWNoIG90aGVyIG9yIHRhbGtpbmcgYWJvdXQgZWFjaCBvdGhlciBsaWtlIHdlIG5vdCBodW1hbnMuIE90aGVyIGNhc2VzLCBoZSBoYWQgdG8gbm90aWZ5IHRoZSBwb2xpY2UgYWJvdXQgdGhyZWF0cywgSGVsbWVyIHNhaWQuSGUgZGVmZW5kZWQgaGlzIGNob2ljZSB0byB1c2UgdGhlIHR3ZWV0cyBhcyBhIGZ1bmRyYWlzaW5nIG9wcG9ydHVuaXR5Lmp1c3QgbWUgdHJ5aW5nIHRvIHRha2Ugc29tZXRoaW5nIHRoYXQgd2FzIHByZXR0eSBuZWdhdGl2ZSBhbmQgdHJ5IHRvIHR1cm4gaXQgaW50byBhIHBvc2l0aXZlLCBoZSBzYWlkLkFidXNlIGxpa2UgdGhpcyBpcyBhbGwgdG9vIGNvbW1vbiBvbiBzb2NpYWwgbWVkaWEuIApDYW5sIGJhaGlzIGZpcm1hcyB0YXJhZm5kYW4geWVkaSBnbiB5aXJtaSBkcnQgc2FhdCBib3l1bmNhIGJhaGlzIHNlZW5la2xlcmluaW4ga3VsbGFubG1hc24gc2FsYXlhbiB5ZW5pIGdpcmkgYWRyZXNpbmRlIGNhbmwgb3l1bmxhcmRhbiBwYXJhIGthemFubWFueiBzYWxhbnlvci4gSGVzYXAgb2x1dHVybWFrLCBoZXNhYm56IG9uYXlsYW1hayBpaW4geWVkaSBnbiB5aXJtaSBkcnQgc2FhdCBib3l1bmNhIGJhaGlzIG95bmF0bGFuIHNheWZhZGEgYmFoaXMgZWl0bGVyaW5kZSBzYWRlY2Uga2F5dCBzb25yYXNuZGEgaWVyaWtsZXJlIHVsYW1hbnogbW1rbiBvbHV5b3IuIFllbGlrIGlpbiBhcmFsa3N6IG9sYXJhayBoaXptZXQgdmVybWV5ZSBkZXZhbSBlZGVuIHNheWZhbm4gcGl5YXNhZGEgYWRyZXNpIGRlaWl5b3IuLiAKV2l0aG91dCBoaW0sIENMRyB3b3VsZCBub3QgYmUgd2hlcmUgdGhleSBhcmUgcmlnaHQgbm93ICh0b3AgMykuIApXaGF0IElzIE5vdCB0byBMb3ZlIEFib3V0IFRoaXMgVG93biBhbmQgVGhpcyBTYWxvb24/V2hlbmV2ZXIgSSBjYW4gZmluZCBhIGdvb2QgdGFsZSBvZiB0aGUgb2xkIFdpbGQgV2VzdCwgSSBhbSBhbHdheXMgZHJhd24gaW4gd2l0aCBhIHNlbnNlIG9mIGZhc2NpbmF0aW9uLiBUYWxlcyBvZiBvbGQgYW5kIG5vdyBnb25lIEhvbGx5d29vZCBzdGFycyBhbmQgc3RhcmxldHMsIGdhbWJsZXJzLCBzYWxvb25zLCBtaW5lcnMsIHByb3NwZWN0b3JzLCBnaXJscyBvZiB0aGUgbmlnaHQsIGd1bmZpZ2h0cywgYW5kIHByZXNlbnQgZGF5IGdob3N0IHN0b3JpZXMganVzdCBuZXZlciBjZWFzZSB0byBmYXNjaW5hdGUgbWUuIEkgaGFkIGFsd2F5cyBsb3ZlZCB3YXRjaGluZyBXZXN0ZXJucyBvbiBUViBncm93aW5nIHVwLCBhbmQgQ2xpbnQgRWFzdHdvb2Qgd2FzIGEgZGVmaW5pdGUgZmF2b3JpdGUuLiAKWW91IHNwYXp6ZWQgb24gdGhlIGZsb3AuIApNYWludGVuYW50IHZveW9ucyBhdSBwbGFuICJkb2N1bWVudGFpcmUgZXQgc2NpZW50aWZpcXVlIi5DYXNhc25vdmFzIG5lIGNlc3NlLCBpbCBmYXV0IGxlIHJwdGVyLCBkZSByZWN5Y2xlciBkZXMgdmlldXggcGxhbnMgIm5hdHVyb3MiIGFyY2hpIHJlYmF0dHVzLiAKV2UgY2FuIG9wcG9zZSB0aGVpciBoYXRyZWQgd2l0aG91dCBjYXJpbmcgYXQgYWxsIHdoYXQgdGhleSBkbyBpbiB0aGVpciBiZWRyb29tcyBvciBpbiBiYWNrcm9vbXMuIEFmdGVyIGFsbCwga2lsbGluZyBvZmYgRXJuc3QgUm9obSBkaWRuIHN0b3AgdGhlIE5hemlzLiBBbmQgb3V0aW5nIGdheSBjb25zZXJ2YXRpdmVzIHdvbiBzdG9wIGFuIGFudGkgZ2F5IGNvbnNlcnZhdGl2ZSBtb3ZlbWVudC4gClRoZXkncmUgaGFuZCBzdGl0Y2hlZCBtb2NjYXNpbiBjb25zdHJ1Y3Rpb24gYW5kIGFsbCBvZiB0aGUgc3RpdGNoaW5nIGlzIGltcGVjY2FibGUuIApQbGF5aW5nIENhcmQgVGF0dG9vIERlc2lnbnNQbGF5aW5nIGNhcmRzIG1ha2UgZm9yIHNvbWUgZ3JlYXQgdGF0dG9vcyBhbmQgY2FuIGNvbWUgaW4gYSB2YXJpZXR5IG9mIHN0eWxlcy4gVGhleSBjYW4gcmVwcmVzZW50IG9uZSdzIGxvdmUgYW5kIHBhc3Npb24gZm9yIGdhbWJsaW5nIGFuZCBjYW4gYWxzbyBzeW1ib2xpemUgYSBudW1iZXIgb2Ygb3RoZXIgdGhpbmdzLiBDYXJkIHRhdHRvb3MgYXJlIHZlcnkgcG9wdWxhciBhbW9uZyBwcm9mZXNzaW9uYWwgY2FyZCBwbGF5ZXJzIGFuZCBhbnlvbmUgd2hvIGVuam95cyBnYW1lcyBhbmQgZ2FtYmxpbmcuIFdpdGggYWxsIHRoZSBkaWZmZXJlbnQgdGhpbmdzIHlvdSBjYW4gZG8gd2l0aCB0aGVtLCBpdCBpcyBlYXN5IHRvIHNlZSB3aHkgdGhleSBhcmUgYSBwb3B1bGFyIHRhdHRvbyBjaG9pY2UuClllYWgsIEkgYmUgInRoYXQgZ3V5Ii4gVGhpcyBndXkgd2FzIGEgc3VzcGVjdCBpbiB0aGUgYWJkdWN0aW9uLCBoYWRuIGV2ZW4gZ29uZSB0byB0cmlhbCB5ZXQgKHdhcyBiZWluZyBicm91Z2h0IHRvIHRyaWFsIGF0IHRoZSB0aW1lIG9mIGhpcyBtdXJkZXIpLCBhbmQgdGhlcmUgd2VyZSBtZXJlbHkgInJlcG9ydHMiIChyZWFkOiBtZWRpYSBydW1vcnMpIHRoYXQgdGhlIGNoaWxkIGhhZCBiZWVuIHNleHVhbGx5IG1vbGVzdGVkLiBXaGF0IHRoaXMgZ3V5IGRpZCB3YXMgY29sZCBibG9vZGVkIG11cmRlci4gCkJ6Z2wuIApJdCBpcyBpbXBvcnRhbnQgdG8gdW5kZXJzdGFuZCB0aGF0IGF1dGhlbnRpYyBjYXNpbm8gcG9rZXIgY2hpcHMgYXJlIGNyZWF0ZWQgaW4gc3VjaCBhIHdheSB0aGF0IHNlY3VyaXR5IGZlYXR1cmVzIGFyZSBpbmNvcnBvcmF0ZWQgaW50byB0aGUgYWN0dWFsIGNoaXAuIElmIGFydHdvcmsgaXMgaW50ZWdyYXRlZCBpbnRvIHRoZSBkZXNpZ24gb2YgdGhlIGNoaXAsIGl0IHdpbGwgYmUgb2YgdGhlIGhpZ2hlc3QgcXVhbGl0eS4gSW4gYWRkaXRpb24gdG8gdGhpcywgdGhlcmUgYXJlIHVzdWFsbHkgbWFueSBkaWZmZXJlbnQgY29tYmluYXRpb25zIHVzZWQgaW4gdGhlIHdheSBvZiBjb2xvcnMgb24gdGhlIGVkZ2VzIG9mIHRoZSBjaGlwcy4gVGhlc2UgYXJlIHJlZmVycmVkIHRvIGFzICJlZGdlIHNwb3RzIi4gSW4gb3JkZXIgdG8gaWRlbnRpZnkgd2hldGhlciBvciBub3QgcG9rZXIgY2hpcHMgYXJlIGF1dGhlbnRpYyB0byBhIHBhcnRpY3VsYXIgY2FzaW5vLCBpdCBpcyBhYnNvbHV0ZWx5IHZpdGFsIHRvIGVuc3VyZSB0aGF0IHlvdSBrbm93IHRoZSBhcnR3b3JrIGFuZCBlZGdlIHNwb3RzIHRoYXQgYXJlIHVuaXF1ZSB0byB0aGF0IHBhcnRpY3VsYXIgY2FzaW5vLgpXaWxsaWFtICJCaWxsIiBSYXltb25kIEJFQU4KVEhGViBTSE9VTEQgT0ZGRVIgU0VFRFMuIFRIRVknUCBIQVZFIEVWRVJZIEFMTEVZIE9PUCBCRUVUTEUgQkFJTEVZIFRISVMgSVMgQSBUT08gQkFQIDdWVCBXSVpTSiBKT0lOIFVTLiAxTSBWbEVWViBPciBBTScgVnYnRSBPVUdIVEEgS0NFIEZPUnRDQVNULCBBU0sgVEgnICJXRSBIQVZFIElQRUEuIExFVFMgaiBUT08uJyBIRSBXQVMgQSBQbENNQyBMVU5DSCBJTlZmVEggT2xKQyBTTyBIQVBQViBXSVRIIE9SIFMxSk1QSU4nIFRIJyBXRUFUSEsgVE8gSk9JTiBVUycgU1VUIEhFIEhBUCBBIElNUE9SVEFOVCBUJ0RPLiAKVGhpcyB3aWxsIGJlIHRoZSAxMHRoIGFubnVhbCBwb2tlciBydW4gYW5kIGNoaWxpIGRpbm5lci4gVGhlIGV2ZW50IHdhcyBvcmlnaW5hbGx5IGNyZWF0ZWQgYXMgYSBmdW5kcmFpc2VyIGZvciB0aGUgVGhvbWFzdmlsbGUgZmlyZSBkZXBhcnRtZW50LiBGb3IgbW9zdCBvZiB0aGlzIGRlY2FkZSwgcHJvY2VlZHMgaGF2ZSBhbHNvIGdvbmUgdG8gdGhlIFZpbmNlbnQgUGF1bCBUaG9tYXMgTWVtb3JpYWwgRnVuZC4gVGhvbWFzIHdhcyBhIGZvcm1lciBmaXJlZmlnaHRlciBhbmQgZW1lcmdlbmN5IG1lZGljYWwgdGVjaG5pY2lhbiB3aG8gd2FzIHNob3QgdG8gZGVhdGggaW4gMjAwMS4gSGUgd2FzIG9mZiBkdXR5LCBoZWxwaW5nIGEgd29tYW4gaW4gYSBkb21lc3RpYyBkaXNwdXRlLCB3aGVuIGhlIHdhcyBraWxsZWQuClRoYXQgd2FzIG15IGZpcnN0IGludHJvZHVjdGlvbiB0byBkcmFnIGN1bHR1cmUuIEl0IHdhcyBub3JtYWwgZm9yIG1lLiBJIGEgYml0IG9sZGVyIHRoYW4gYSBsb3Qgb2YgdGhlIHBlb3BsZSBvbiBSZWRkaXQgc28gSSBzdGlsbCByZW1lbWJlciBzZWVpbmcgUnVQYXVsIG11c2ljIHZpZGVvcyBpbiB0aGUgZWFybHkgOTBzIHdoZW4gSSB3YXMgaW4gZWxlbWVudGFyeSBzY2hvb2wgYW5kIG15IGRhZCB3YXRjaGVkIFRoZSBSdVBhdWwgc2hvdyBCVVQgSSB3YXMgb25seSBhbGxvd2VkIHRvIHdhdGNoIHRoZSBpbnRyb2R1Y3Rpb24gYW5kIHRoZW4gSSBoYWQgdG8gZ28gdG8gYmVkLiAKQnV0IEkgZG9uIHNlZSB0aGUgImJlbmVmaXQiIHRvIHVzaW5nIG9uZSB0aGF0IG90aGVyIHNwZWNpYWx0eSBiYXIgdHlwZXMgcHJvdmlkZSAoYXNzdW1pbmcgeW91IGFyZW4gdHJhaW5pbmcgdG8gY29tcGV0ZSBvbiBvbmUpLi4gCk1ldGhvZHM6IFB0cyBhc3Nlc3NlZCBieSBhIHNwaW5lIHBoeXNpY2lhbiByYW5kb21pemVkIHRvIEdyb3VwIDEuIENQR0M6IHJlYXNzdXJhbmNlLCBhdm9pZGFuY2Ugb2YgcGFzc2l2ZSBUeCAoYmVkIHJlc3QsIGhlYXQsIGJhY2sgc3VwcG9ydHMvY29yc2V0cy9icmFjZXMpLCBhY2V0YW1pbm9waGVuLCBhIHByb2dyZXNzaXZlIHdhbGtpbmcgcHJvZ3JhbSwgYSBtYXhpbXVtIG9mIDQgd2tzIG9mIGNoaXJvcHJhY3RpYyBkZWxpdmVyZWQgbHVtYmFyIHNwaW5hbCBtYW5pcHVsYXRpb24gKFNNOiAyIDN4L3drIG9mIHNpZGUgcG9zdHVyZSwgaGlnaCB2ZWxvY2l0eSBsb3cgYW1wbGl0dWRlIHRlY2huaXF1ZSksIG5vIGV4ZXJjaXNlIHByb2dyYW0sIHJldHVybiB0byB3b3JrIHdpdGhpbiA4IHdrcy4KVGhlcmUgYXJlIHNldmVyYWwgZmFjdG9ycyB0aGF0IGhhdmUgdG8gYmUgd2VpZ2hlZCwgZXNwZWNpYWxseSBpZiB0aGVyZSBhcmUgbXVsdGlwbGUgcGVvcGxlIGludm9sdmVkLi4gCjIpIEkgd291bGQgbG9vayBhdCBib3RoIFRCSApDb250YWN0IHRoZSBjb21wYW55IGRpcmVjdGx5LiBUaGV5IHdpbGwgaGVscCB5b3UgZmluZCBhbiBhcHByb3ByaWF0ZSB0aGVyYXBpc3QgYmFzZWQgb24geW91ciBuZWVkcyBhbmQgbG9jYXRpb24uRG8gTk9UIGFzayBIUiBlbXBsb3llZXMgYWJvdXQgc3VnZ2VzdGlvbnMgZm9yIGNvdW5zZWxvcnMuIE5FVkVSIGRpc2N1c3MgdGhlIHNwZWNpZmljcyBvZiBhbnkgbWVkaWNhbCBvciBwc3ljaG9sb2dpY2FsIGNvbmRpdGlvbiB3aXRoIGFueSBjb3dvcmtlciwgYWJvdmUgeW91IG9yIGJlbG93IHlvdSwgdW5sZXNzIGFic29sdXRlbHkgbmVjZXNzYXJ5IGFuZCBiZSBhcyB2YWd1ZSBhcyBwb3NzaWJsZSBpZiBpdCBhYnNvbHV0ZWx5IHJlcXVpcmVkLk1hc3RlciB0aGVyYXBpc3RzIGluY2x1ZGUgaW5kaXZpZHVhbCBjb3Vuc2Vsb3JzLCBtYXJyaWFnZSBhbmQgZmFtaWx5IHRoZXJhcGlzdHMsIHNvY2lhbCB3b3JrZXJzIHdpdGggc3BlY2lmaWMgdHJhaW5pbmcsIGFuZCBvdGhlcnMgZGVwZW5kaW5nIG9uIHlvdXIgc3RhdGUuIApNYW55IHdlYXJlcnMgaW5jbHVkaW5nIG15c2VsZiBmb3VuZCB0aGUgc2hvZSBhIGJpdCB0aWdodCBhdCBmaXJzdCBidXQgYSBkZWNlbnQgZml0IHdoZW4gd29ybiBmb3IgYSBsb25nZXIgcGVyaW9kLiAKVGhlIG9ubGluZSBwaGVub21zIHBsYXllZCBsaXRlcmFsbHkgdGhvdXNhbmRzIG9mIGhhbmRzIHBlciBkYXkuIApTb2NpYWwgdi4gRnJlZSBtYXJrZXQpIGlzIG5vdCByZWFsbHkgcmlnaHQuIApIZWxpY29wdGVyIGd1bnNoaXBzIGtpbGxlZCAyMDMgQ29tbXVuaXN0cyBpbiBhIGJpdHRlciBkYXlsb25nIGJhdHRsZSB5ZXN0ZXJkYXknIGp1c3Qgc291dGggIG9mIHRoZSBEZW1pbGl0YXJpemVkIFpvbmUuIApOb3Qgc3VyZSBpZiBoZSBzaG93IGFuIG9mZnN1aXQgY29tYm8gYnV0IEkgdGhpbmtpbmcgbW9zdGx5IHlvdSBzZWUgb25seSA0IGNvbWJvcyBvZiBKSyBpbiBoaXMgcmFuZ2UgaGVyZSB2cyA3IGNvbWJvcyBvZiBvdmVycGFpcnMsIDEgc2V0LCAxIHF1YWRzLCBhbmQgbWF5YmUgNiA4IGNvbWJvcyBvZiBUeC4uIApBbHNvLCBJIHdlbnQgZm9yIGJsYWNrIGJlY2F1c2UgSSBmaWd1cmVkIGl0IHNob3cgdXAgZHVzdCBsZXNzLCBidXQgSSBkbyBzbGlnaHRseSByZWdyZXQgbm90IHN0aWNraW5nIHdpdGggdGhlIHRveGljIG5lb24gZ3JlZW4uLiAKMSAgIGV4cCggMC41cl4yKSA9IDAuNTAgPT09PiByID0gMS4xNzc0IChub3RlICAwLjVyXjIgbWVhbnMgbWludXMgLjUgdGltZXMgciBzcXVhcmVkKSBUaGlzIGlzIHRoZSByYWRpdXMgb2YgYSBjaXJjbGUsIGluIHN0YW5kYXJkIGRldmlhdGlvbiBtZWFzdXJlLCB3aGljaCBpcyBleHBlY3RlZCB0byBjb250YWluIDUwJSBvZiByb2NrZXQgaW1wYWN0IHBvaW50cy4oRnVsbCBBbnN3ZXIpLiAKRGVsZXRlZCB0aGVtIGFsbCB3aXRob3V0IGxpc3RlbmluZyB0byB0aGVtIGFuZCB3ZW50IGFib3V0IG15IGxpZmUuLiAKUGFuemVyc3Rvcm0gaXMgc3RhZ2Ugb2YgYSBsYXJnZSB0YW5rIGJhdHRsZS4gClRoaXMgdXN1YWxseSBjYXVzZXMgYSBzbWFsbCBwYXVzZSBpbiB0aGUgY29udmVyc2F0aW9uLCB3aGljaCBjYW4gc29tZXRpbWVzIG1ha2UgeW91IG1vcmUgbmVydm91cy4uIApIYXZlIGZ1biBkb2luZyB0aGluZ3MgdG9nZXRoZXIsIGJ1dCBkb24ndCBiZSBjb25zY2lvdXMgb2Ygcm91dGluZS4gR28gZm9yIGFuIHVucGxhbm5lZCB0cmlwIHRvIGEgZmxlYSBtYXJrZXQgYW5kIGZpbmQgdGhlIGJlc3QgYmFyZ2FpbnMsIGlmIHlvdSBhcmUgdGhlIHR5cGUgb2Ygc3BvdXNlcyB3aG8gbG92ZSBzaG9wcGluZy4gCiJJIHRoaW5rIERpd2FsaSBhZGRzIHRvIHRoZSBleGNpdGVtZW50IG9mIHRoZSBnYW1lIG9yIHZpY2UgdmVyc2EuIFRoZSBwb2tlciBnYW1lIGF0IE1hbm9yaSBsYXN0ZWQgdGhyb3VnaG91dCB0aGUgbmlnaHQgYW5kIHdpdGggYSBsb3Qgb2YgbW9uZXkgdG8gYmUgd29uLCB0aGUgZnVuIGVsZW1lbnQgaW5jcmVhc2VkLCIgc3RhdGVzIEF0cmV5LgpFeWVzIGFyZSBhIGxpdHRsZSBiaWdnZXIgYW5kIHlvdSB3YWxrIGEgbGl0dGxlIHNsb3dlciwgUGFsYW5za3kgc2FpZCBvZiB0aG9zZSBuZXcgdG8gdGhlIG92ZXJ3aGVsbWluZyBldmVudC4gVGhhdCB3aHkgdGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciBoYXMgYmVlbiBlbmNvdXJhZ2luZyBhZHZhbmNlIHJlZ2lzdHJhdGlvbiB0byBjdXQgZG93biBvbiB0aGUgdGltZSBwbGF5ZXJzIG1pZ2h0IHdhaXQgaW4gbGluZSB0byBwYXkuIFRoZSB0b3VybmFtZW50IGNhbiBmaXQgYWJvdXQgMjQsODAwIHBva2VyIHBsYXllcnMgaW4gdGhlIHNpbmdsZSBldmVudCBpZiBuZWVkIGJlLCBQYWxhbnNreSBzYWlkLi4gCldpdGggYm9keSBvZG9yLCB5b3UgYXJlIGltcGx5aW5nIHRoYXQgdGhlc2UgdGhpbmdzIGFyZSBhYnNvbHV0ZWx5IG5vcm1hbCBhbmQgY2Fubm90IGJlIGNoYW5nZWQuIEV2ZXJ5IG5hdGlvbiBoYXMgaXQgYW5kIHdpbGwgYWx3YXlzIGhhdmUgaXQgYW5kIHRoZXJlIGlzIG5vdGhpbmcgdG8gYmUgY29uY2VybmVkIHdpdGggd2l0aCB0aGF0IGZhY3Qgc2luY2UgdGhhdCBhYnNvbHV0ZWx5IG5vcm1hbCAgIGp1c3QgYXMgZXZlcnkgaHVtYW4gZXZlciBoYXMgaGFkIGJvZHkgb2Rvci4gCkl0IGlzIHVuZGVuaWFibGUgdGhhdCB3aGVuIGEgYmV0dGVyIGZlbmNlIHdhcyBidWlsdCB0aHJvdWdoIEVsIFBhc28gaXQgcmVkdWNlZCBjcmltZS4gQWZ0ZXIgOS8xMSBpbmNyZWFzZWQgc2VjdXJpdHkgYXQgcG9ydHMgb2YgZW50cnkgcmVkdWNlZCBjcmltZS4gCjE4LiAgIkRpc3BsYWNlbWVudCBvZiB2ZXJ0ZWJyYWUgaXMgc2lnbmFsZWQgdG8gdGhlIGNlbnRyYWwgbmVydm91cyBzeXN0ZW0gYnkgYWZmZXJlbnQgbmVydmVzIGFyaXNpbmcgZnJvbSBkZWVwIGludGVydmVydGVicmFsIG11c2NsZXMsIiBhbmQgdGhpcyBpcyBpbXByb3ZlZCB3aXRoIGFkanVzdGluZyB0aGUgYWRqYWNlbnQgZHlzZnVuY3Rpb25hbCBqb2ludC4KNyBhdCB0aGUgUmlvIEhvdGVsLiAKVGhhdCB2aW9sYXRlZCB0aGUgdGVybXMgb2YgaGlzIHByb2JhdGlvbi4gCkFuZCB3aGlsZSBCZWF0b24gZG9lc24gaGF2ZSBhbnkgYnJvdGhlcnMgb3Igc2lzdGVycyAoImhvcGVmdWxseSB5b3UgY2FuIHRlbGwgSSBhbiBvbmx5IGNoaWxkIGp1c3QgYnkgbG9va2luZyBhdCBtZSwiIGhlIHNheXMpIGFuZCBoaXMgbW90aGVyIFBhdWxhIHdhcyB0aGUgc29sZSBwcmltYXJ5IGNhcmVnaXZlciBmb3IgYWxtb3N0IGFsbCBvZiBoaXMgZmlyc3QgZml2ZSB5ZWFycyBhZnRlciBhIGRpdm9yY2UsIHRoZSBob3VzZWhvbGQgd2FzIGFsc28gY3Jvd2RlZCBieSBhIHRoaXJkIGdlbmVyYXRpb24gICBKYW1pZSBncmFuZHBhcmVudHMgICBzaGFyaW5nIHRoZSBob21lLi4gCkhvdyBtYW55IHBlb3BsZSBpbiB0aGUgVVMgcGxheSBvbmxpbmUgcG9rZXIKV2UgaGF2ZSBhbGwgdGhlIGJlc3Qgc2thdGVib2FyZGluZyBnYW1lcyBvbmxpbmUsIEJyb3dzZSB0aHJvdWdoIGFyZSBjb2xsZWN0aW9uIG9mIHRoZSBiZXN0IHNrYXRlYm9hcmQgZ2FtZXMgb24gdGhlIHdlYi4KUmVnYXJkbGVzcywgdGhlIHBvaW50IGlzIG5vdCB0aGF0IHlvdSBoYXZlIHRvIGxpa2UgT29ULCBidXQgbW9yZW92ZXIgdGhhdCB0aGUgZ2FtZSBpcyBzdGlsbCBhIFplbGRhIGdhbWUgZGVzcGl0ZSB0aGUgcmV2aXNpb25pbmcgb2YgbmVhcmx5IGV2ZXJ5IGFzcGVjdCBvZiB2aXN1YWxzLCBzb3VuZCwgYW5kIGdhbWVwbGF5LiAKRGVmaW5pdGlvbiBvZiBXZWxsbmVzcyBXZWxsbmVzcyBpcyAiYW4gYWN0aXZlIHByb2Nlc3Mgb2YgYmVjb21pbmcgYXdhcmUgb2YgYW5kIGxlYXJuaW5nIHRvIG1ha2UgY2hvaWNlcyAoaGVhbHRoeSBjaG9pY2VzKSwiIHNheXMgV2VsbG5lc3MgUHJvcG9zYWxzLCBhbiBpbmRlcGVuZGVudCB3ZWxsbmVzcyBjb25zdWx0YW50LiBXZWxsbmVzcyBtZWFucyBtb3JlIHRoYW4gc2ltcGx5IG5vdCBiZWluZyBpbGw7IGl0IGZvY3VzZXMgb24ga2VlcGluZyB5b3VyIGJvZHkgaW4gZ29vZCBjb25kaXRpb24gc28gaXQgcnVucyBtb3JlIGVmZmljaWVudGx5IGFuZCB5b3Ugc3RheSB3ZWxsIGxvbmdlci4gCkkga25ldyB0aGF0IGlmIEkgZGlkbid0IHdlYXIgYW55IG1ha2V1cCwgSSB3b3VsZCBiZSBwdW5pc2hlZCwgc28gSSBsb29rZWQgdGhyb3VnaCB0aGUgcGlsZSBbbGVmdCBmb3IgbWVdIC4uIApBbGFuIGRpZWQgdW5leHBlY3RlZGx5IEF1Zy4gMTIsIGRlc3BpdGUgbm8gaGlzdG9yeSBvZiBoZWFydCBwcm9ibGVtcy4gSGUgaXMgc3Vydml2ZWQgYnkgaGlzIHdpZmUsIFJhY2hlbCwgYW5kIHRoZWlyIGRhdWdodGVycyBBbWJlciwgMjI7IGFuZCBTaWRuZXksIDE4LgpTaW11bHRhbmVvdXNseSwgVFRDcyBhcmd1ZSB0aGF0IHRoZSBwcmVzZW5jZSBvZiBpbGxpY2l0IHByb2R1Y3RzIHNpZ25hbHMgYSBuZWVkIGZvciB0aGVtIHRvIGludmVzdCBpbiB0aGF0IG1hcmtldCAocmF0aGVyIHRoYW4gcmVzdWx0aW5nIGZyb20gdGhlaXIgaW52b2x2ZW1lbnQgaW4gdGhlIGlsbGVnYWwgdHJhZGUpLjkgMjA4LiAKQ2hhcmdlcjogSSBkaWRuIGhhcm0gVGlsYSBUZXF1aWxhICBQaGlsYWRlbHBoaWEgSW5xdWlyZXIgIDA5LzA4LzIwMDkuCkNvb2xlc3QgdGhpbmcgaGFzIGJlZW4gdGhlIHJlYWN0aW9uIGZyb20gZXZlcnlvbmUsIHNhaWQgSGFsbCBpbiBhbiBpbnRlcnZpZXcgd2l0aCBDQlMgTG9jYWwuIGFyZSBiZWluZyB0b3VjaGVkIGJ5IHRoZSBzaG93IGFuZCBhY3R1YWxseSBnaXZpbmcgaXQgYSBjaGFuY2UgYW5kIHRoYXQgbWVhbnMgdGhlIGFydCB0aGF0IHdlIGFyZSBjcmVhdGluZyBpcyBpbXBhY3RpbmcgcGVvcGxlLiB0aGUgc2hvdyBoYXMgaGVscGVkIEJlYW5lIGFuZCBIYWxsIHNwcmluZyBvbnRvIHRoZSBzY2VuZSwgRnJpZW5kZWQgTWUgaGFzIGFsc28gcmVtaW5kZWQgZXZlcnlvbmUgaG93IHRhbGVudGVkIEpvZSBNb3J0b24gaXMuIFRoZSB2ZXRlcmFuIGFjdG9yIHBsYXlzIE1pbGVzIGZhdGhlciBSZXZlcmVuZCBBcnRodXIgRmluZXIgYW5kIGhlIHNheXMgaXQgYmVlbiBncmVhdCB0byBoYXZlIHRoZSBhYmlsaXR5IHRvIHVucGFjayB0aGlzIGNoYXJhY3RlciB0aHJvdWdob3V0IHRoZSBzZWFzb24uCkkgd29uZGVyIGlmIHRoZSBwZW9wbGUgd2hvIGhhdGUgdGhpcyBlcGlzb2RlIHNlZSB0b28gbXVjaCBvZiB0aGVtc2VsdmVzIGluIGl0LiBJIGtub3cgSSB3YXMgZGVzcGVyYXRlbHkgYWZyYWlkIG9mIGJlaW5nIG9uZSBvZiB0aGVzZSBwZW9wbGUgd2hlbiBJIHdhcyAyMywgYW5kIHdoZW4gbXkgZnJpZW5kIG1vdmVkIGludG8gbXkgcGxhY2UgYW5kIHR1cm5lZCBpbnRvIG9uZSBvZiB0aGVtLCBpdCBtYWRlIG1lIGFjdHVhbGx5IGRlc3Bpc2UgaGVyIGZvciBhIHRpbWUgYWZ0ZXJ3YXJkcy4gQnV0IEkgcmVhbGl6ZWQgcGFydCBvZiB0aGUgcmVhc29uIEkgY291bGRuIGVtcGhhc2l6ZSB3aXRoIGhlciBiZWhhdmlvciwgZXZlbiB0aG91Z2ggaSBrbmV3IHNoZSBoYWQgYSBoaXN0b3J5IG9mIGRlcHJlc3Npb24sIHdhcyBiZWNhdXNlIG9mIHRoZSBmZWFyIHRoYXQgSSB3YXMgYWx3YXlzIG9uZSBiYWQgdHVybiBmcm9tIGJlY29taW5nIGhlci4uIApNaW5pIGdvbGYgYW5kIGdvbGYgc2ltdWxhdG9ycyBhcmUgYXZhaWxhYmxlIG9uIHRoZSBEaWFtb25kLCBDb3JhbCwgR3JhbmQgYW5kIFN1biBmbGVldHMuIFNoZSBhbHNvIGhhcyBhIHZhcmlldHkgb2YgY29weSBwdWJsaXNoZWQgb24gc21hbGwgYnVzaW5lc3MgYmxvZ3MgYW5kIHdlYnNpdGVzLiBKZW5ubiBob2xkcyBhIEJhY2hlbG9yIG9mIEpvdXJuYWxpc20gYW5kIEVuZ2xpc2guLiAKRURJVDogQXQgZmlyc3QgSSBmb3VuZCBpdCBmdW5ueSwgYnV0IG5vdyBJIGEgYml0IHdvcnJpZWQuIApBREhEIHNwZWN0cnVtIHBlb3BsZSBjYW4gYmUgZWl0aGVyIGh5cGVyYWN0aXZlIHRvIGluYXR0ZW50aXZlLiBJIGhhdmUgdGVlbmFnZSBmcmF0ZXJuYWwgdHdpbiBkYXVnaHRlcnMgd2l0aCBBREhELiBPbmUgaXMgaHlwZXJhY3RpdmUuIE9uZSBpcyBpbmF0dGVudGl2ZS4gVGhleSBoYXZlIGRpZmZpY3VsdHkga2VlcGluZyB1cCB3aXRoIG9iamVjdHMgYW5kIG1hbmFnaW5nIHRpbWUgKGZvciBvcHBvc2l0ZSByZWFzb25zKSwgYnV0IHRoYXQgZG9lcyBub3QgbWFrZSB0aGVtIHJ1biByb3VnaCBzaG9kIG92ZXIgb3RoZXJzIGFzIHlvdXIgYnJvdGhlciBkb2VzLiBCb3RoIGhhdmUgZnJpZW5kcywgYXJlIGdlbmVyYWxseSBjb25zaWRlcmF0ZSBvZiBvdGhlcnMsIGFuZCBhcmUgd2VsbCBiZWhhdmVkIGluIHB1YmxpYy4KSW4gdGhlIG1pZGRsZSBvZiBhbGwgdGhpcyBmcmVuenkgc29tZXRoaW5nIHNwZWN0YWN1bGFyIGhhcHBlbmVkLCB3aGljaCBpbiBpdHMgaW50ZW50IGFuZCBpbiBpdHMgY29udGVudCB3YXMgbm90IGp1c3QgdG90YWxseSBicmF6ZW4gYnV0IHdhcyBhbHNvIGJsYXRhbnRseSBpbnNpZGlvdXMuIEEgdmlkZW8gd2FzIHB1dCBvdXQgd2l0aCBhIGRpcmVjdCBhbmQgdW5lcXVpdm9jYWwgbWVzc2FnZSB0byB0aGUgZ292ZXJubWVudC4gV2l0aG91dCBtaW5jaW5nIHdvcmRzLCB0aGUgdmlkZW8gbWFkZSB0aGUgdWx0aW1hdGUgc2xhbmRlciBhZ2FpbnN0IG9uZSBvZiB0aGUgY29udGVuZGVycyBmb3IgdGhlIHBvc3Qgb2YgYXJteSBjaGllZiBhbmQgY3JlYXRlZCBzZW5zYXRpb25hbCBmYWxzZWhvb2QgYWJvdXQgaGlzIGZhbWlseSBmYWl0aC4gVGhlIG1lc3NhZ2UgdGhlbiBtb3ZlZCB0byB3YXJuIHRoZSBnb3Zlcm5tZW50IG5vdCB0byBhcHBvaW50IHRoaXMgc3BlY2lmaWMgcGVyc29uIHRvIHRoaXMgcG9zaXRpb24gdW5sZXNzIGl0IHdhbnRlZCB0byBlYXJuIHRoZSBpcmUgb2YgdGhlIHJlbGlnaW91cyBlc3RhYmxpc2htZW50LgpJZiB5b3UgaGF2ZW4gc2VlbiB0aGlzIGd1eSBUViBzaG93LCB5b3UgcmVhbGx5IGVuam95IGl0IGhlIGhhcyB0aGUgc2FtZSBhcHByZWNpYXRpb24gdGhhdCB5b3UgZG8sIGVzcGVjaWFsbHkgZm9yIERvdWdsYXMgZmlyLCB3aGljaCBoZSBmb25kbHkgY2FsbHMgIkRvdWcgZmlyLiIgSGUgaGFzIGEgYml0IG9mIGEgbWFyYmxlIG1vdXRoIGJ1dCBmb3IgdGhlIG1vc3QgcGFydCBoZSBkb2VzIHJlYWxseSBuaWNlIHJlc3RvcmF0aW9ucy4gTm9wZS4gSSBkb24gbGlrZSB3YWxraW5nIG9uIGl0LCBzaXR0aW5nIG9uIGl0LCBoYXZpbmcgaXQgYnVybiB0aGUgc29sZXMgb2YgbXkgZmVldCwgYW5kIHRoZW4gaGF2aW5nIGl0IHJlYXBwZWFyIGluIGV2ZXJ5IHBvc3NpYmxlIGNyZXZpY2UgYW5kIG9iamVjdCBmb3Igd2Vla3MgYWZ0ZXJ3YXJkcy4uIAonJ1RoZSB2YXN0IG1ham9yaXR5IG9mIHBva2VyIG1hY2hpbmUgcHJvZml0cyBjb21lIGZyb20gcHJvYmxlbSBnYW1ibGVycywnJyBDciBNb3JhbiBzYWlkLiAKSG9wZWZ1bGx5IHRoZWlyIHJlY29uY2lsaWF0aW9uIG1hcmtzIHRoZSBlbmQgb2YgQmV0dHkncyB0aW1lIGFzIGEgY2FtIGdpcmwsIGJlY2F1c2UgdGhlcmUgYXJlIG90aGVyIHN0b3JpZXMgd2UnZCByYXRoZXIgd2F0Y2ggdGhhbiBhbiB1bmRlcmFnZSBnaXJsIGNhdGVyaW5nIHRvIGxvbmVseSBtZW4gb24gdGhlIGludGVybmV0IGFzIGEgd2F5IG9mIGNvcGluZyB3aXRoIGhlciBtZW50YWwgaGVhbHRoIHN0cnVnZ2xlcy4gT25jZSBhZ2FpbiwgY2FuIHlvdSBwbGVhc2UgZ28gc2VlIGEgdGhlcmFwaXN0LCBCZXR0eSBDb29wZXI/LiAKSW4gdGhlIDE5NzBzLCB0aGUgYXZlcmFnZSB3b3JrZXIgcmVtYWluZWQgYXQgYSBidXNpbmVzcyBmb3IgMjQgeWVhcnMuIFRvZGF5LCB0aGF0IG51bWJlciBpcyBiZXR3ZWVuIGZvdXIgdG8gZml2ZSB5ZWFycy4gCkhhbCBpbmkgZGlzZWJ1dCBkZW5nYW4gaXN0aWxhaCAiYmxpbmRzIi5VbnR1ayBtZW1wZWxhamFyaSBpbnN0cnVrc2kgbWVuZGV0YWlsIHRlbnRhbmcgY2FyYSBiZXJtYWluIFRleGFzIEhvbGQnRW0sIGNhcmlsYWggcGFuZHVhbm55YS5QaWxpaCB0aW5kYWthbiBBbmRhLiBTYWF0IHBlcm1haW5hbiBiZXJsYW5qdXQgZGkgc2VwdXRhciBtZWphLCBBbmRhIGFrYW4gbWVsaWhhdCBqdW1sYWggdGFydWhhbiBzZXRpYXAgcGVtYWluIHVudHVrIHJvbmRlIHlhbmcgc2VkYW5nIGJlcmxhbmdzdW5nLiBTYWF0IGdpbGlyYW4gQW5kYSB0aWJhLCBBbmRhIGJpc2EgbWVtaWxpaCBDYWxsIChtZW55YW1ha2FuIHRhcnVoYW4pLCBDaGVjayAobWVsZXdhdGthbiBnaWxpcmFuIGppa2EgdGlkYWsgYWRhIGp1bWxhaCB0YXJ1aGFuIHlhbmcgYmlzYSBkaXNhbWFrYW4pLCBCZXQvUmFpc2UgKG1lbmluZ2thdGthbiBqdW1sYWggdGFydWhhbiksIGF0YXUgRm9sZCAobWVueWVyYWggZGFuIG11bmR1ciBkYXJpIHBlcm1haW5hbikuQW5kYSBiaXNhIG1lbmVudHVrYW4gdGluZGFrYW4gc2ViZWx1bSBnaWxpcmFuIEFuZGEgdGliYSwgamlrYSBBbmRhIHN1ZGFoIHRhaHUgYXBhIHlhbmcgQW5kYSBpbmdpbiBsYWt1a2FuIHNlYmVsdW1ueWEuIApXZSB3b3VsZCBoYXZlIHN0b29kIGluIGZyb250IG9mIHRoZSBiZWRyb29tIG1pcnJvciwgcGFpbnRpbmcgb3VyIGV5ZWxpZHMgZGlmZmVyZW50IGNvbG9ycywgc3Vycm91bmRpbmcgb3VyIGV5ZXMgd2l0aCB0aGljayBsaW5lcyBvZiBrb2hsLCBhbmQgY292ZXJpbmcgb3VyIGZyZWNrbGVzIHdpdGggZm91bmRhdGlvbi4gCkFmdGVyIGFsbCwgUGFyaXMgaXMgYSBzcGFjZSBvZiB0aGUgZGFpbHkgaHVtaWxpYXRpb24gb2Ygd29tZW4gaW4gdGhlIGZvcm0gb2Ygc3RpbGV0dG8gaGVlbHMgYW5kIGJvZGlseSBzdGFydmF0aW9uLiBMaWtlIHRoZSByZXN0IG9mIHRoZSB3b3JsZCwgaXMgYXdhc2ggaW4gY29zbWV0aWNhbGx5IGVuaGFuY2VkIGJvZGllcywgZmFjZXMgdW5yZWNvZ25pemFibGUgYmVjYXVzZSB0aGV5IG5vIGxvbmdlciBtb3ZlIGFuZCBubyBsb25nZXIgbG9vayBsaWtlIHRoZSB3b21lbiB0aGV5IG9uY2Ugd2VyZSBvciBjb3VsZCBoYXZlIGJlZW4uIFRvIG1lbnRpb24gZGlzZ3Vpc2VkIGJvb2JzLCBhbmQgc3RvbWFjaHMsIGFuZCBldmVuIHZhZ2luYXMuLiAKQWxzbyBnb3QgdGVjaCBzYXZ2eSBhdCB0aGUgcmlnaHQgdGltZS4gCkkgaGFwcGVuZWQgdG8gYmUgdmlzaXRpbmcgaGVyIGF0IGhlciB3b3JrIHdoZW4gUm9uIEhvd2FyZCB3YXMgc2hvd2luZyB0ZXN0IGZvb3RhZ2UgdG8gVG9tIEhhbmtzIGFuZCBvdGhlcnMgaW4gdGhlIHByb2R1Y3Rpb24uIApUbyBzdGFydCwgdGhlIGdhbWUgaXMgMS8yIE5MIHdpdGggYSBtYXggYnV5IGluIG9mICQyMDAuIFByZXR0eSBzbWFsbCBnYW1lLCBhbmQgbW9zdCBvZiB0aGUgcGxheWVycyBkbyBub3QgYnV5IGluIGZvciB0aGUgbWF4IChJIGFsd2F5cyBkbykuIFRoZSBwbGF5ZXJzIG9uIGF2ZXJhZ2UgYXJlIG5vdCB2ZXJ5IGdvb2QgYW5kIGxpbXAgcHJlIGZsb3AgYW5kIHJhcmVseSBibHVmZi4gCkFydGljbGVzIGFyZSBwdWJsaXNoZWQgdW5kZXIgYW4gZXhjbHVzaXZlIGxpY2VuY2Ugb3Igbm9uIGV4Y2x1c2l2ZSBsaWNlbmNlIGZvciBVSyBDcm93biBlbXBsb3llZXMgb3Igd2hlcmUgQk1KIGhhcyBhZ3JlZWQgQ0MgQlkgYXBwbGllcy4gCktlbGx5J3MgYXR0b3JuZXksIFN0ZXZlIEdyZWVuYmVyZywgaGFzIHNhaWQgaGlzIGNsaWVudCBkaWQgbm90ICJrbm93aW5nbHkiIGhhdmUgc2V4IHdpdGggdW5kZXJhZ2UgZ2lybHMuCkZvciB3aGF0ZXZlciByZWFzb24sIEkgZW5kZWQgdXAgd2l0aCBhIHBla2luZ2VzZS9wb21lcmFuaWFuIG11dHQuIApSZW1lbWJlciB0aGF0IHRpbWUgd2hlbiBkZW1vY3JhdHMgcGFpZCBtaWxsaW9ucyBvZiBkb2xsYXJzIHRvIHJ1c3NpYW5zIGZvciAib3Bwb3NpdGlvbiByZXNlYXJjaCIgdGhhdCBzYWlkIHRoZSBSdXNzaWFucyBoYXZlIGJsYWNrbWFpbCBtYXRlcmlhbCBvbiBUcnVtcCBhbmQgdGhhdCBDb2hlbiB3YXMgbWVldGluZyBSdXNzaWFucyBpbiBQcmFndWUgYW5kIHRoZW4gdGhlIEZCSSBuZXZlciBib3RoZXJlZCB2ZXJpZnkgaXQgYW5kIHVzZWQgaXQgaW4gYSBGSVNBIHdhcnJhbnQgdG8gc3B5IG9uIG1lbWJlcnMgb2YgdGhlIFRydW1wIGNhbXBhaWduIChDYXJ0ZXIgUGFnZSkuIFRoZW4gYWZ0ZXIgVHJ1bXAgd29uIHRoZSBlbGVjdGlvbiB0aGUgRkJJIHN0YXJ0ZWQgYW4gaW52ZXN0aWdhdGlvbiBpbnRvIFRydW1wICJjb2xsdWRpbmcgd2l0aCBSdXNzaWEiIGJhc2VkIG9uIHRoZSB1bnZlcmlmaWVkIGluZm9ybWF0aW9uLiBTbyBhIG5ld2x5IGVsZWN0ZWQgcHJlc2lkZW50IHdhcyBiZWluZyBpbnZlc3RpZ2F0ZWQgdGhlIGZpcnN0IGhhbGYgb2YgaGlzIHRlcm0gd2hpbGUgd2UgZm91bmQgb3V0IHRoZSB0b3AgRkJJIGFnZW50cyBiZWZvcmUgdGhlIGVsZWN0aW9uIHdlcmUgdGFsa2luZyBhYm91dCBtYWtpbmcgc3VyZSBUcnVtcCBkb2VzbiB3aW4sIGluc3VyYW5jZSBwb2xpY2llcyBpbiBjYXNlIFRydW1wIGRpZCB3aW4gYW5kIHRoZSBkaXNndXN0aW5nIHN0ZW5jaCBvZiBwZW9wbGUgd2hvIHNob3AgYXQgV2FsIE1hcnQgd2hvIHByb2JhYmx5IHN1cHBvcnQgVHJ1bXAuIApEaXZvcmNlIGlzIGEgaHVnZSBzdGVwIGFuZCBzbyB1bm5lY2Vzc2FyeSB1bnRpbCB0aGUgZGVjaXNpb24gaXMgdG90YWxseSBmaW5hbC4gSXQgY2FuIGFsc28gYmUgZXhwZW5zaXZlLiBJIGFtIGluIHRoZSBtaWRzdCBvZiBhIGRpdm9yY2UgbXlzZWxmIHJpZ2h0IG5vdy4gCkNidXJuczY5NzYgdQpSaWdodCBub3cgY29sb3IgY2hhbmdlIG9uIHRoZSB0ZXh0IHZpZXcgYW5kIGljb24gYXJlIG5vdCBhbmltYXRlZC4gCkl0IHdhcyBhcyBpZiBJJ2QgYmVlbiBqZXJrZWQgb3V0IG9mIG15IG93biBzaG9lcywgb3V0IG9mIHRoZSBsaWZlIEkgcmVjb2duaXplZC4gRXZlcnkgc2Vjb25kIHdhcyBhbiBpbXByb2JhYmxlIGdpZnQgYW5kIGFuIGFnb25pemluZyBldGVybml0eS4gCk1vcmUgdGhhbiBvbmNlIEkgaGF2ZSBtaXNqdWRnZWQgdGhlIEhWQUMgb3Igd2luZG93c29yIHJvb2ZvciBtaXNzZWQga25vYiBhbmQgdHViZSB3aXJpbmcgb3Igc3Vic3RhbnRpYWxseSB1bmRlcmVzdGltYXRlZCB0aGUgbmVjZXNzYXJ5IGJ1ZGdldCBvZiBhIHByb2plY3Qgb3IgdXNlZCBiYWQgY29tcHMgd2hlbiBhbmFseXppbmcgdGhlIExUViBvZiBhIHByb3BlcnR5LiAKV2hhdCBpcyBjaGlwcyBudW1iZXIKRXZlcnkgb25jZSBpbiBhIGdyZWF0IHdoaWxlLCB0aGUgc29ydHMgb2YgYXJndW1lbnRzIHRoYXQgbW90aXZhdGUgYWNhZGVtaWMgbGlmZSwgbGlrZSBob3cgd2Uga25vdyB3aGF0IHdlIGtub3csIHdpbGwgc3BpbGwgb3V0IGludG8gdGhlIGV2ZXJ5ZGF5IHdvcmxkIG9mIHBvbGl0aWNzIGFuZCBjdWx0dXJlLiAKQ2FsbCB5b3VyIHByb3ZpZGVyIGFuZCBzdGF0ZSB0aGF0IHlvdSB3aWxsIG5vdCBwYXkgdGhlIGJhbGFuY2UgYXMgaXQgaXMgYmFsYW5jZSBiaWxsaW5nIGFuZCBpZiB0aGV5IHJlZnVzZSB0byBkcm9wIHRoZSBiYWxhbmNlIG5vdGlmeSB0aGVtIHlvdSB3aWxsIGJlIGNvbnRhY3RpbmcgdGhlIGluc3VyYW5jZSBjb21taXNzaW9uLiBNb3N0IG9mIHRoZSB0aW1lIHRoZSBwcm92aWRlciB3aWxsIGRyb3AgdGhlIGJhbGFuY2UuIApGb3IgdGhvc2Ugd2hvIGFyZSB1bmZhbWlsaWFyIHdpdGggYSBQb2tlciBSdW4sIHBhcnRpY2lwYW50cyBtZWV0IGF0IGEgY2VudHJhbCBsb2NhdGlvbiBmb3IgcmVnaXN0cmF0aW9uIG9uIHRoZSBtb3JuaW5nIG9mIHRoZSBldmVudC4gCk5vdyBoZXJlIHdoZXJlIHRoaW5ncyBnZXQgdHJpY2t5LiBTdGVpbiBjYW1lIHRvIFVWTSBsYXN0IHllYXIgYW5kIGdhdmUgYSB2ZXJ5IHdlbGwgYXR0ZW5kZWQgbGVjdHVyZS4gClNvIHlvdSBzaG91bGQgc3RpY2sgdG8gc3VzdGFpbmFibGUgcmVnZW5lcmF0aXZlIHNvdXJjZXMgbGlrZSB0aGUgZGV3IHlvdSBjcmVhdGluZy4gSWYgeW91IGdldCB0byBoaWdoZXIgbGV2ZWxzIG9mIHJlZ3Jvd3RoIHdhbmQgb3IgaGF2ZSB0aGUgbmF0dXJlIGJvb3RzLCB5b3Ugc2hvdWxkIGJlIGdldHRpbmcgbW9yZSBkZXcgdGhhbiB5b3UgY2FuIHVzZSBhbnl3YXkuLiAKVGhlIHNlYXNvbmFsIGFjdGl2YXRpb24gaXMgdHJhZGl0aW9uIGZvciBCZWx0ZXJyYSBDYXNpbm8gUmVzb3J0LCBoYXZpbmcgZGVsaWdodGVkIGd1ZXN0cyBzaW5jZSB0aGUgeWVhciB0aGUgcHJvcGVydHkgb3BlbmVkIGluIDIwMDEuIFRoZSBtYXNzaXZlIHBpZWNlIG9mIGQgaXMgY29tcHJpc2VkIG9mIDcwMCBwb2luc2V0dGlhcyBhbmQgbWVhc3VyZXMgYXBwcm94aW1hdGVseSAyMCBmZWV0IHRhbGwgYW5kIDEyIGZlZXQgd2lkZS4gVGhlIGJlYXV0aWZ1bCB0cmVlIHRha2VzIG5lYXJseSBvbmUgd2VlayB0byBidWlsZCwgZnJvbSB0aGUgZGV2ZWxvcG1lbnQgb2YgdGhlIGZyYW1lIHRvIHRoZSBmaW5hbCBwb2luc2V0dGlhIHBsYWNlbWVudC5vZiBndWVzdHMgaGF2ZSBtYWRlIHZpc2l0aW5nIG91ciBwb2luc2V0dGlhIHRyZWUgYSBob2xpZGF5IHRyYWRpdGlvbiBmb3IgbWFueSB5ZWFycywgc2FpZCBQZXRlciBDaHUsIFZpY2UgUHJlc2lkZW50IGFuZCBHZW5lcmFsIE1hbmFnZXIgb2YgQmVsdGVycmEgQ2FzaW5vIFJlc29ydC4gZXhwZXJpZW5jZSB2aXNpdG9ycyB0aHJvdWdob3V0IHRoZSByZWdpb24gbWFraW5nIGEgdHJpcCB0byBCZWx0ZXJyYSB0byBlbmpveSB0aGUgdHJlZSwgdGFrZSBmYW1pbHkgcGhvdG9zIGFuZCBnZXQgaW4gdGhlIGhvbGlkYXkgc3Bpcml0LiBNYW55IHBlb3BsZSBhbHNvIG1ha2UgYSBmdWxsIGV4cGVyaWVuY2Ugb2YgdGhlaXIgdmlzaXQgYnkgZW5qb3lpbmcgZGlubmVyIGF0IDE5IFN0ZWFrIGFuZCBTZWFmb29kIGFjY29tcGFuaWVkIGJ5IGFuIGV2ZW5pbmcgaW4gb3VyIGhvdGVsLiBCZWx0ZXJyYSB0byBlbmpveSB0aGUgaG9saWRheSBkIGlzIGNvbXBsaW1lbnRhcnkuQmVsdGVycmEgQ2FzaW5vIFJlc29ydCA0MiwwMDAgc3F1YXJlIGZlZXQgb2YgY2FzaW5vIGdhbWluZyBjYW4gYWNjb21tb2RhdGUgbW9yZSB0aGFuIDIsOTAwIHBsYXllcnMgYW5kIGluY2x1ZGVzIG1vcmUgdGhhbiAxLDIwMCBzbG90IGFuZCB2aWRlbyBwb2tlciBtYWNoaW5lcyBhbmQgNDYgdGFibGUgZ2FtZXMgcmFuZ2luZyBmcm9tIENyYXBzIGFuZCBCbGFja2phY2ssIHRvIFJvdWxldHRlIGFuZCBMaXZlIFBva2VyLiBCZWx0ZXJyYSBhbHNvIGZlYXR1cmVzIDYwOCBkZWx1eGUgbmV3bHkgcmVub3ZhdGVkIGd1ZXN0IHJvb21zIGFuZCBzdWl0ZXMsIDU1LDAwMCBzcXVhcmUgZmVldCBvZiBidXNpbmVzcyBtZWV0aW5nIGZhY2lsaXRpZXMsIHNpeCBmb29kIHZlbnVlcywgYSAxLDYwMCBzZWF0IGVudGVydGFpbm1lbnQgc2hvd3Jvb20sIGhlYWx0aCBzcGEsIHNhbG9uLCBmaXZlIHJldGFpbCBzaG9wcGluZyBib3V0aXF1ZXMgYW5kIGFuIDE4IGhvbGUgVG9tIEZhemlvIERlc2lnbmVkIGNoYW1waW9uc2hpcCBnb2xmIGNvdXJzZS4gQmVsdGVycmEgQ2FzaW5vIFJlc29ydCBpcyBhIHByb3BlcnR5IG9mIEJveWQgR2FtaW5nLiBGb3VuZGVkIGluIDE5NzUsIEJveWQgR2FtaW5nIENvcnBvcmF0aW9uIChOWVNFOiBCWUQpIGlzIGEgbGVhZGluZyBnZW9ncmFwaGljYWxseSBkaXZlcnNpZmllZCBvcGVyYXRvciBvZiAyOSBnYW1pbmcgZW50ZXJ0YWlubWVudCBwcm9wZXJ0aWVzIGluIDEwIHN0YXRlcy4gV2l0aCBvbmUgb2YgdGhlIG1vc3QgZXhwZXJpZW5jZWQgbGVhZGVyc2hpcCB0ZWFtcyBpbiB0aGUgY2FzaW5vIGluZHVzdHJ5LCBCb3lkIEdhbWluZyBwcmlkZXMgaXRzZWxmIG9uIG9mZmVyaW5nIGl0cyBndWVzdHMgYW4gb3V0c3RhbmRpbmcgZW50ZXJ0YWlubWVudCBleHBlcmllbmNlLCBkZWxpdmVyZWQgd2l0aCB1bndhdmVyaW5nIGF0dGVudGlvbiB0byBjdXN0b21lciBzZXJ2aWNlLgpJdCB3YXMgZHVyaW5nIHRoYXQgcHJvY2VzcyB0aGF0IEkgZm91bmQgb3V0IHRoZXJlIGFyZSBmZWRlcmFsIGFnZW50cyBpbiBlYWNoIGhvc3BpdGFsIHRoYXQgb3ZlcnNlZSB3aGF0IHRoZSBkb2N0b3JzIHByZXNjcmliZS4gVGhlIGRvY3RvcnMgd2hlcmUgYWZyYWlkIG9mIHRoZXNlIGZlZGVyYWwgYWdlbnRzIGRlY2lkaW5nIHRoZXkgcHJlc2NyaWJlIHRvbyBtYW55IHBhaW4ga2lsbGVycyBhbmQgdGhlbiBydWluaW5nIHRoZWlyIG1lZGljYWwgcHJhY3RpY2UgYmVjYXVzZSB0aGV5IGFsbG93ZWQgYSBjYW5jZXIgcGF0aWVudCB3aG8gd2FzIGdvaW5nIHRvIGJlIGRlYWQgaW4gYSBmZXcgd2Vla3MgdG8gZGllIGEgY29tZm9ydGFibGUgZGVhdGguLiAKVGhlIGFsaWVuIHRhcHBlZCBhIGJ1dHRvbiBvbiBoaXMgZ2xvdmUgYmVmb3JlIHNwZWFraW5nLCAiSSBhY2NlcHQgeW91ciB3ZWxjb21lLiBJIGFtIE5uenV0aSBEcnJ0aWZ5LCBMZWFkZXIgb2YgdGhlIEtkZGlmdG9tYS4gCldlIGFscmVhZHkgc2VlbiB0cnVtcCBzdGVwIG92ZXIgcnVsZXMgYW5kIGxhd3Mgd2l0aG91dCBhIGhpbnQgb2YgY2Vuc3VyZSBvciByZXBlcmN1c3Npb24uIApPZiBjb3Vyc2UsIHlvdSBoYXZlIHRvIHBsYXkgdGhlIGdhbWUgb24gYSBjb21wdXRlciwgYSBkZXZpY2Ugd2hpY2ggaXMgb25lIEdvb2dsZSBzZWFyY2ggYXdheSBmcm9tIGFueSB0eXBlIG9mIGRldmlhbnQgc2V4dWFsIGFjdCB5b3UgY2FyZSB0byB3aXRuZXNzIGluIGdsb3Jpb3VzIGhpZ2ggZGVmIHZpZGVvLiBTbyBpcyBhIHZlcnkgcmVsYXRpdmUgdGVybS4uIApBbmQgaXQgc2VlbXMgdGhhdCB0aGUgY2xhaW0gdGhhdCBtb3JhbHMgYXJlIGFic29sdXRlIHJlcXVpcmVzIHByb29mIHdoaWNoIGlzIG5vdCBmb3J0aGNvbWluZywgc28gaXQgZGVmYXVsdHMgdG8gc3ViamVjdGl2ZSB1bnRpbCBwcm92ZW4gb3RoZXJ3aXNlLi4gClBvc3QgYXJndW1lbnQgY29udmVyc2F0aW9uIHdpdGggcGFzdCBnaXJsZnJpZW5kcyB3ZXJlIGFsd2F5cyBhIG9uZSBzaWRlZCBhcG9sb2d5IGZyb20gbWUganVzdCB0byBhdm9pZCBhbm90aGVyIGZpZ2h0LCBldmVuIGlmIHNoZSB3YXMgY29tcGxldGVseSBpbiB0aGUgd3JvbmcuIFdpdGggbXkgY3VycmVudCBnaXJsLCB1bmxlc3MgSSBhYnNvbHV0ZWx5IHdhcyB0aGUgYXNzaG9sZSBpbiB0aGUgc2l0dWF0aW9uLCBpdCdzIGFsd2F5cyBhbiBhY3R1YWwgZGlzY3Vzc2lvbiBhbmQgYnJlYWsgZG93biBvZiB3aGF0IHdlIGJvdGggZGlkIHdyb25nIGFuZCB3aGF0IHdlIHNob3VsZCB3b3JrIG9uLCBmb2xsb3dlZCBieSBhIGdlbnVpbmUgYXBvbG9neSBmcm9tIGJvdGggc2lkZXMgZm9yIGdldHRpbmcgc28gaGVhdGVkLgpFYWNoIGNvbnRlc3QgY2FuIGhhdmUgdGhleSBvd24gcGFnZSB3aGVuIGNsaWNrZWQgb24gd2l0aCBzdGF0dXMgd2hldGhlciBpdHMgb3BlbiBmb3IgcmVnaXN0cmF0aW9uIG9yIGNhbmNlbGVkIG9yIHBsYW5uZWQuIApPdmVydmlldyBmb3IgYmxhY2thZGEKV2hvIGtub3dzLCByaWdodD9Bc2lkZSBmcm9tIHRoYXQsIGp1c3Qgc3Vycm91bmRlZCBieSBEIG1hdGVyaWFscyBhdCB0aGUgbW9tZW50IGxvbC4gUHJlcHBpbmcgZm9yIHRoaXMgd2Vla2VuZCBzZXNzaW9uLiAKQ1FVbml2ZXJzaXR5IE1hdHRoZXcgUm9ja2xvZmYgaGFzIHNwZW50IG11Y2ggb2YgaGlzIGFjYWRlbWljIGNhcmVlciByZXNlYXJjaGluZyBnYW1ibGluZywgcGFydGljdWxhcmx5IHBva2VyIG1hY2hpbmVzLCBhbmQgaGUgZHJhd3Mgb25lIHNpbXBsZSBjb25jbHVzaW9uICAgaXQgaW1wb3NzaWJsZSB0byBtYWtlIGEgbGl2aW5nIHBsYXlpbmcgdGhlIHBva2llcy4KTG9jYWwgTGl2aW5nc3RvbiwgVGV4YXMgZnJpZW5kcyBhbmQgZmFtaWx5IGVhcmx5IG9uIGlkZW50aWZpZWQgSG9ybiBhcyB0aGUgcGVyc29uIHJlc3BvbnNpYmxlIGZvciB0aGUgc2xhdWdodGVyIG9mIHRoZSBmYW1pbHkuCkEgZmV3IGRheXMgbGF0ZXIsIGhpcyBjYXIgaXMgc2l0dGluZyBiYWNrIGluIGZyb250IG9mIGhpcyBob3VzZS4gV2hlbiBoZSBnZXRzIGluc2lkZSBoZSBmaW5kcyBhIG5vdGUuIApJbiB0aGlzIHNlY3Rpb24sIHdlIHdpbGwgc2hvdyBob3cgeW91IGNhbiByZWR1Y2UgeW91ciBjYXQncyByaXNrIGZvciBjeXN0aXRpcy4gCkRvIHN1cmZlcnMga25vdyB3aGF0IHNoYXBlIGEgY2lyY2xlIGlzPyBCZXN0IG5vdCB0byBhc2sgYXMgQmlnIFNob3RzIHRyYXZlbHMgdGhlIGdsb2JlIHRvIGZpbmQgdGhlIGJlc3Qgc3BvcnRzIHBob3RvZ3JhcGhzIG9mIHRoZSB3ZWVrLiBFbHNld2hlcmUsIGNyaWNrZXRlcnMgYWJhbmRvbiBzaGlwLCBZYW8gTWluZyBhc2tzIHRoZSBTaGFuZ2hhaSBsZWdpc2xhdHVyZSBmb3IgYSBwYWludGVkIGFyZWEsIGFuZCB3ZSBsZWFybiB0aGF0IEVuZ2xpc2ggc29jY2VyIHJlZmVyZWVzIGRvbid0IGNhcmUgdGhhdCBpdCdzIGltcG9saXRlIHRvIHBvaW50LiAoIDM5IHBob3RvcyB0b3RhbCkKSWYgdGhhdCBzdW0gZ3Jvd3MgYXQgMyBwZXIgY2VudCBhZnRlciBpbmZsYXRpb24gZm9yIDEzIHllYXJzLCBpdCB3aWxsIGJlY29tZSAkMjg0LDYwMCBhbmQsIHN0aWxsIGdyb3dpbmcgYXQgMyBwZXIgY2VudCBhZnRlciBpbmZsYXRpb24gc3VwcG9ydCBwYXlvdXRzIG9mICQxMSw5NTMgcGVyIHllYXIgZm9yIHRoZSBuZXh0IDQwIHllYXJzIGluIDIwMTkgZG9sbGFycy4uIAoxM0dhbWVzLCBUb3lzLCBhbmQgSG9iYmllcwpJdCBoYWQgYmVlbiBvdmVyIDMwIHllYXJzIHNpbmNlIHNoZSBsb3N0IGhlciBib3kgdG8gdGhlIHJpdmVyLiBJIGNvdWxkbiByZW1lbWJlciBoZXIgbmFtZSBvciB3aGF0IHNoZSBsb29rZWQgbGlrZS4gCk1vcmUgdGhhbiAyLzMgb2YgdGhlIHNoaXQgd2FzbiBldmVuIHBhY2tlZC4gCkhlIGdldHMgdGhlIHNhbWUgc3RvY2tzIGFzIE1pa2FsLCBidXQgdGFrZXMgMTAgRkdBIGF0IDM5JS4gCk9uIG15IEVSIHJvdGF0aW9uIGEgY291cGxlIG1vbnRocyBiYWNrLCBJIHdhbGtlZCBpbiB0byB0aGUgRUQgYW5kIHdhcyBpbW1lZGlhdGVseSBhc2tlZCB0byBoZWxwIGEgbnVyc2UgYW5kIHJlc2lkZW50IHB1dCBhIGNhdGhldGVyIGluIGEgcGF0aWVudC4gClNvbWUgbWVuIGFyZSBoZXRlcm9zZXh1YWwgYnV0IG5vdCByZWFsbHkgY29tZm9ydGFibGUgd2l0aCB3b21lbiBpbiBnZW5lcmFsIGFuZCBwcm9iYWJseSBvbmUgb2YgdGhlbSBtYWRlIGEgc3RpbmsgYW5kIGJlY2F1c2UgaGUgd2FzIGEgbG9uZyB0ZXJtIGJ1ZGR5IGFuZCB5b3Ugd2VyZW4gdGhleSB3ZW50IHdpdGggd2hhdCB0aGV5IHdhbnRlZC4KRGVidXRpbmcgdGhpcyB5ZWFyIGlzIE1NQSBDYWdlIEZpZ2h0aW5nLiAyNyBhdCB0aGUgTW9yZ2FuIENvdW50eSBGYWlyZ3JvdW5kcy4KVG9tYm9sIGluaSB0ZXJsZXRhayBkaSBzdWR1dCBrYW5hbiBhdGFzIGxheWFyIHBlcm1haW5hbiwgdGVwYXRueWEgZGFsYW0gbWVudSBEaWNlLiBQb2tlciBHZW5pdXMgYWthbiBtZW5ndWppIGtlYWhsaWFuIEFuZGEgZGVuZ2FuIG1lbmFueWFrYW4ga29tYmluYXNpIGthcnR1IGthcnR1IHlhbmcgcGFsaW5nIG11bmdraW4gbWVuYW5nLCBkYW4gcGVydGFueWFhbiB5YW5nIGJlbmFyIGFrYW4gbWVtYmVyaWthbiBzZWp1bWxhaCBrZWNpbCBjaXAgYmFnaSBBbmRhLiAKTGFkeUdhR2EpLiBUaGlzIHNvbmcgaXMgYXZhaWxhYmxlIG9uIHRoZSBzb3VuZHRyYWNrIGNhbGxlZCAiR25vbWVvIGFuZEp1bGlldCIgYW5kIHRodXMgaXMgb24gaVR1bmVzLiA1NCA5MikgQWxsIHRoZSBzb25ncyBsaXN0ZWQgaGVyZSBhcmUiVW5yZWxlYXNlZC4iIFlvdSBjYW4gZmluZCB0aGVtIG9uIFlvdXR1YmU6IEFuaW1hbCwgS2Fib29tIChmZWF0LiAKVGhpcyBsaW1pdCBpcyBpbiB0aGUgbmFtZSBvZiB0aGUgcG9rZXIgZ2FtZSAoJDMvNiwgJDIwLzQwLCBldGMuKS4gCkFwcGFyZW50bHksIHRoZSBEYXRhIENlbnRlciB5b3UgYXJlIHVzaW5nIGNhbiBnZXQgZGVzZWxlY3RlZCBhbmQgdGhhdCBpcyB0aGUgcmVhc29uIHdlIGdldCB0aGF0ICJBIG5ldyBPcmlnaW4gVXBkYXRlIGlzIGF2YWlsYWJsZSAiIG1lc3NhZ2UuIApBbGwgaW4gYWxsLCBpZiBJIGNvdWxkIGdvIGJhY2s7IEkgcHJvYmFibHkgd291bGRuIGJ1eSBpdCBhZ2Fpbi4gQXQgbGVhc3QgaW4gbXkgY2lyY3Vtc3RhbmNlcy4gClBlb3BsZSB3aG8gYXJlIGhhcHB5IGFyZSBtb3JlIG1hbGxlYWJsZSBhbmQgYmV0dGVyIGNvbnN1bWVycy4gCkRlbW9jcmFjeSBjYW4gbm90IGZhaWwuIApMYWNlcmF0aW9ueiAgMTYgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpFdCwgZ25yYWxlbWVudCwgc3VyIGxlIHBhcGllciwgb24gY29ubmF0IGJpZW4gcGx1cyBkIHF1IGVzdCBjYXBhYmxlIGQgZGlzdGluZ3VlciBpbiBzaXR1LCBzYW5zIGwgZHUgZG91dGUgcXVlIGdsaXNzZSBEYW1lIE5hdHVyZSBlbiBub3RyZSBlc3ByaXQgIGNlcyBvY2Nhc2lvbnMuIEVuZmluLCBjIG1vbiBjYXMuIApUaGUgYmFrZXJ5IGlzIHNldCB0byBvcGVuIGF0IHRoZSB1bml0IHRoYXQgd2FzIHByZXZpb3VzbHkgaG9tZSB0byBEZWxpY2UgZGUgRnJhbmNlLgpTbywgZG9uJ3QgbGV0IHlvdXIgc2Vuc2l0aXZlIHNraW4gcHJldmVudCB5b3UgZnJvbSBlbmpveWluZyB3aGF0IHNvbWUgY2FsbCB0aGUgdWx0aW1hdGUgaW4gcmVsYXhhdGlvbi4gVGFsayB0byB5b3VyIGRvY3RvciBvciBkZXJtYXRvbG9naXN0IHRvIGdldCBhbiBpZGVhIG9mIHdoYXQgeW91IHNob3VsZCB1c2UgYW5kIHdoYXQgeW91IHNob3VsZCBhdm9pZC4gCkNhbHZpbnNTdHVmZmVkVGlnZXIgIDQxIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvCkZyZWUgT25saW5lIENhc2lubyBHYW1lcyBmb3IgTGVhcm5pbmcKU2hlIGxvb2tzIHNvIHdob2xlc29tZSBhbmQgb3V0ZG9vcnN5ICAgc28gdW5jb21wbGljYXRlZC4gVGhhdCBmcmVzaCBjb21wbGV4aW9uIGFuZCB1bmxpbmVkIGJyb3cuIEluIHBob3RvZ3JhcGhzIGluIHRoZSBSYXZlbnN3b29kIHllYXIgYm9vaywgc2hlIHNtaWxlcyBicm9hZGx5IGFzIHNoZSBwb3NlcyB3aXRoIHRoZSBqdW5pb3Igc3dpbW1pbmcgYW5kIGNyb3NzIGNvdW50cnkgdGVhbXMuIApFdmVuIG5vdywgdGhlIGVhZ2VybmVzcyBhbmQgc3luZXJnaWVzIGFuZCBjcmVhdGl2aXR5IGZsb3dpbmcgYXJvdW5kIG1lIHN3ZWVwIG1lIGF3YXkgYW5kIHRha2UgbWUgdG8gaGVpZ2h0cyBJIG5ldmVyIHRob3VnaHQgSSBjb3VsZCByZWFjaC4gSXQgaXNuJ3QganVzdCB5b3VuZyBndXlzIHN0cmFpZ2h0IGZyb20gY29sbGVnZS4gCk90aGVyd2lzZSwgd2UgZmFucyB3b3VsZCBiZSBhbmdyeSBldmVyeSB0aW1lIHdlIHNlZSBEYXZlIFJvYmVydHMgc3RhcnQgaW4gbGVmdCBmaWVsZCkuLiAKQnJhZHksIEdyb25rIGFuZCBFZGVsbWFuIGxpbmUgaGlzIHdhbGxzLiBJdCBhIGZ1bGwgYmxvd24gc3BvcnRzIGJhciByZXBsZXRlIHdpdGggUGF0cmlvdHMgbWVtb3JhYmlsaWEsIHBva2VyIGFuZCBwb29sIHRhYmxlcy4gTW9zdCBvZiB0aGUgc3R1ZmYgaGUgYnVpbHQgaGltc2VsZi4KQSBiaXQgZGlzYXBwb2ludGVkIGluIEdyZWcgcmV0dXJuLiBJIGxpa2VkIHRoZSBwaWN0dXJlIE1hcmNvIHBhaW50ZWQgICByZWFsbHkgaGFwcHkgYXQgRW1vcnksIG1hZGx5IGluIGxvdmUuIEkgdGhpbmsgR3JlZyBjb3VsZCBoYXZlIHJldHVybmVkIGEgbGl0dGxlIG1vcmUgbWF0dXJlLCBoYXZpbmcgaGFkIGEgcmVhbGx5IGdyZWF0IHJvbWFuY2UgYXQgRW1vcnkgdGhhdCBoYWQgdG8gZW5kIChtYXliZSB0aGUgZ2lybCB3ZW50IGJhY2sgdG8gRnJhbmNlIG9yIHNvbWV0aGluZykgdGhhdCB0YXVnaHQgaGltIGhlIGNvdWxkIG1vdmUgb24uIFRoYXQgd291bGRuIGVsaW1pbmF0ZSBoaW0gcmVuZXdpbmcgdGhpbmdzIHdpdGggUmViZWNjYS4gVGhlIHNob3cgdG9sZCB1cyBoZSB3YXMgYSBXSE9MRSBORVcgR1VZIGFuZCB0aGUgcmVjYXN0IHdhcyBzdXBwb3NlZCB0byBlbXBoYXNpemUgdGhhdCwgYnV0IGhlIGltbWVkaWF0ZWx5IGJhaWxlZCBvbiB0aGUgcmV1bmlvbiwgdG9sZCB1cyBoaXMgRW1vcnkgcm9tYW5jZSB3YXNuIGFzIHN0cm9uZyBhcyBoaXMgZmVlbGluZ3MgZm9yIFJlYmVjY2EsIGFuZCB3YXMgcmlnaHQgYmFjayB0byBTcXVhcmUgT25lLiBEaXNhcHBvaW50aW5nLCBhbmQgbW92ZWQgdG9vIGZhc3QuIEkgZXhwZWN0ZWQgYSBsaXR0bGUgbW9yZSBmcm9tIGhpbS4KR3BhdCBOaXBlciBEaSwgcGhhcm1hY2lzdC4gTUNRIGJvb2tzIGZvciBHUEFUIC4gCkkgZ28gdG8gYSBXYWwgTWFydCBvciBGYXJtIEtpbmcgb3Igd2hhdGV2ZXIgYW1kIHN0b2NrIHNvbWUgcHJvZHVjdCBvciBwdXQgdXAgc2lnbnMgYW5kIGhhbmdlcnMgZm9yICQxMC9oLiAKVGhleSB3ZXJlIG1hcnJpZWQgaW4gMTk0OSBhbmQgdGVuIHllYXJzIGxhdGVyIG1vdmVkIHRvIFdhdGVybG9vIHdpdGggdGhlaXIgY2hpbGRyZW4sIEx5bm5lIGFuZCBKaW0sIHdoZXJlIEJvYiB0b29rIG9uIHRoZSBwb3NpdGlvbiBvZiB0cmVhc3VyZXIgKGFuZCB0aGVuIFZQIEZpbmFuY2UpIG9mIHRoZSBFcXVpdGFibGUgTGlmZSBJbnN1cmFuY2UgQ29tcGFueS4gClRoaXMgaXMgZ3JlYXQgbmV3cywgYXMgSSBzdGlsbCBsaWtlIHRoZSBzaG93LCBidXQgZG9lcyB0aGlzIHNlYXNvbiBmZWVsIG9mZiB0byBhbnlvbmUgZWxzZT8gSSB3b3JyaWVkIHRoYXQgdGhleSBjYW4ga2VlcCBpdCB1cCBtdWNoIGxvbmdlci4KSmUgbidhaSBqYW1haXMgZXUgbGEgdGx2aXNpb24gIVNlcmdlIFJhZGVyIGVzdCB1biBwaGFybWFjaWVuIHF1aSBkZmVuZCBzYSBwcm9mZXNzaW9uLCBpbCBlc3Qgc3VyIFBhcmlzLCBpbCBlc3QgdHJzIGFjdGlmLiAKVGhhdCBzYW1lIG5pZ2h0LiAKVGhpcyBpcyBpbnRlcmVzdGluZyBiZWNhdXNlIFRydW1wIHN0b3J5IHdpbGwgb2J2aW91c2x5IGJlICJ3ZWxsIHdlIGRpZG4ga25vdyB0aGV5IHdlcmUgaWxsZWdhbCBmb3JlaWduIGNvbnRyaWJ1dGlvbnMiLiBCdXQsIHRoZXJlIG5vIHdheSB0aGVzZSBwZW9wbGUgc2V0IHVwIHNoZWxsIGNvbXBhbmllcyB0byBkaXNndWlzZSB0aGVtc2VsdmVzIGZyb20gVHJ1bXAuIE1ha2VzIG5vIHNlbnNlIHRvIG1ha2UgaWxsZWdhbCBjb250cmlidXRpb25zIHRvIGEgcG9saXRpY2lhbiBjb21taXR0ZWUgaWYgdGhhdCBwb2xpdGljaWFuIGRvZXNuIGtub3cgeW91IGNvbnRyaWJ1dGVkLiBZb3UgY2FuIGNhbGwgaW4gZmF2b3JzIGxhdGVyIGlmIHlvdXIgZG9uYXRpb24gd2FzIGFub255bW91cyB0byB0aGUgUHJlc2lkZW50LiBTbyB0aGV5IGhhZCB0byBrbm93IGF0IHNvbWUgbGV2ZWwgdGhhdCB0aGVzZSB3ZXJlIHN0cmF3bWFuIGRvbmF0aW9ucyBmcm9tIG92ZXJzZWFzLiBJIHdvbmRlciB3aGF0IHRoZSBwYXBlciB0cmFpbCB3aWxsIHNob3cuClRoYXRzIGlmIHRoZXkgdGFrZSBpdCBvdXQgb2YgeW91ciBib25lcywgaWYgeW91IGRvIHRoZSBQZXJpcGhlcmFsIHN0ZW0gY2VsbCB0cmFuc3BsYW50YXRpb24gKHRoZSBvbmUgSSBkaWQpIHlvdSByZWNlaXZlIGEgc2VyaWVzIG9mIGluamVjdGlvbnMgZmlsZ3Jhc3RpbSAoaXQgd2FzIDYgZm9yIG1lICBvbmUgZWFjaCBkYXkpIHRvIGluY3JlYXNlIHRoZSBwcm9kdWN0aW9uIG9mIHRoZSAiZ29vZCBzdHVmZiIgdGhleSB0YWtlIG91dCBmb3IgdGhlIGRvbmF0aW9uLiBIb25lc3RseSwgdGhhdCBwYXJ0IHdhcyB0aGUgd29yc3QuIEkgaGFkIGEgbnVyc2UgY29tZSB0byBteSBvZmZpY2UgdG8gZ2l2ZSBtZSB0aGUgaW5qZWN0aW9ucyBzbyBpIG5ldmVyIGV2ZW4gbWlzc2VkIHdvcmsgZm9yIHRoYXQgcGFydCwgYnV0IGl0IG1hZGUgeW91ciBib25lcyBmZWVsIGEgbGl0dGxlIHNvcmUsIGxpa2UgaWYgeW91IGZlbGwgb24gdGhlIGljZSBvbiBhIGNvbGQgZGF5LCBidXQgYXMgc29vbiBhcyB5b3UgZG9uYXRlLCB0aGF0IHNvcmVuZXNzIGdvZXMgYXdheS4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnb25vdCByZWFsbHkuIFRoZSBBbXRyYWsgd2Vic2l0ZSB3aWxsIGdpdmUgeW91IHRpbWV0YWJsZXMgZm9yIHRoZWlyIHRyYWlucywgYW5kIG1vc3Qgb2YgdGhlIG90aGVyIHBhc3NlbmdlciBvcGVyYXRvcnMgd2lsbCBoYXZlIHRoZW0gb25saW5lIGZvciB0aGVpciB0cmFpbnMuIEJ1dCB0aGVyZSBubyBjb2hlc2l2ZSB0aW1ldGFibGUgZm9yIHRoZSB3aG9sZSBORUMgb3V0IHRoZXJlLCBhbmQgZnJlaWdodCBpc24gZ29pbmcgdG8gYmUgYXZhaWxhYmxlIGF0IGFsbC5UaGF0IGJlaW5nIHNhaWQgdGhlcmUgaXMgbGl2ZSBkZXBhcnR1cmUgaW5mb3JtYXRpb24geW91IGNhbiBhY2Nlc3MgZnJvbSBzZWxlY3Qgc3RhdGlvbnMuWW91IG1heSBiZSBhYmxlIHRvIGdldCBzb21lIGluZm9ybWF0aW9uIGZyb20gYW4gQVRDUyBmZWVkLCBpZiB0aGVyZSBpcyBvbmUgYnJvYWRjYXN0aW5nIGZvciB0aGUgTkVDLiAKIlBhdWwgTWFuYWZvcnQgd29ya2VkIGZvciBSb25hbGQgUmVhZ2FuLCBCb2IgRG9sZSBhbmQgbWFueSBvdGhlciBoaWdobHkgcHJvbWluZW50IGFuZCByZXNwZWN0ZWQgcG9saXRpY2FsIGxlYWRlcnMsIiBUcnVtcCB0d2VldGVkLiAiSGUgd29ya2VkIGZvciBtZSBmb3IgYSB2ZXJ5IHNob3J0IHRpbWUuIFdoeSBkaWRuJ3QgZ292ZXJubWVudCB0ZWxsIG1lIHRoYXQgaGUgd2FzIHVuZGVyIGludmVzdGlnYXRpb24uIFRoZXNlIG9sZCBjaGFyZ2VzIGhhdmUgbm90aGluZyB0byBkbyB3aXRoIENvbGx1c2lvbiAgIGEgSG9heCEiCkFtZXJpY2FuIGZpbmFuY2lhbCBzdXBwb3J0IGlzIGFib3V0IG1haW50YWluaW5nIHRoZSBzdGF0dXMgcXVvLiAKVGhleSBzdGlsbCBkb24gdW5kZXJzdGFuZCBteSBjaG9pY2UgdG8gdGhpcyBkYXkgYnV0IHRoZXkgaGF2ZSBsZWFybmVkIHRvIGFjY2VwdCBpdC4gVGhleSBsb3ZlIG1lIGFuZCB3ZSBoYXZlIGEgZ29vZCByZWxhdGlvbnNoaXAuCkkgc3dlYXIuIApEZXIgQXJjaGl0ZWt0IGF1cyBEIHZlciB2aWVsZSBJbm5lbnN0IG9obmUgZGFzcyBlcyBkZW4gQmV3b2huZXJuIGJld3Vzc3QgaXN0LiAKQnV0IGluIHRoZSBoYW5kcyBvZiBhIHNlbGZpc2ggSk4sIHRoZXkgbW9zdCBjZXJ0YWlubHkgd2lsbC4gVGhlcmUncyBhIGhvcnJpYmxlIHR5cGUgb2YgSk4gbW90aGVyIHdobyBlbmNvdXJhZ2VzIGFsbCBvZiB0aGUgd29yc3QgYmVoYXZpb3JzIGluIGhlciBKTiBzb24sIGFuZCBjb25zdGFudGx5IHNwb2lscyBoaW0gYW5kIHByb3RlY3RzIGhpbSBmcm9tIHRoZSBuYXR1cmFsIGNvbnNlcXVlbmNlcyB0aGF0IHdvdWxkIG5vcm1hbGx5IGhlbHAgaGltIGdyb3cgb3V0IG9mIHN1Y2ggZGFtYWdpbmcgYmVoYXZpb3JhbCB0ZW5kZW5jaWVzLiAKSXMgY2VydGFpbmx5IGEgc2VyaW91cyBpc3N1ZSwgb25lIHdvcnRoIHRoZSBhdHRlbnRpb24gb2YgTWljaGVsbGUgT2JhbWEsIG9yIEJhcmJpZS4uIApPZiBjb3Vyc2UgYW55b25lIG9mIGFueSBhZ2Ugb3IgZ2VuZGVyIGNhbiBub3QgYmUgZ29vZCBhdCB0aGVpciBqb2JzIGFuZCB0aGVyZWZvcmUgbWFrZSBsZXNzIG1vbmV5IGJ1dCBpZiB0aGUgbmF0aW9uYWwgZGlzY3JlcGFuY3kgb2Ygd29tZW4gbWFraW5nIDc1IGNlbnRzIHRvIGV2ZXJ5IDEgZG9sbGFyIGEgbWFuIG1ha2VzLCBob3cgY2FuIGl0IGJlIGZyb20gc29sZWx5IGpvYiBwcmVmb3JtYW5jZT8uIApBbmQgb2YgY291cnNlIHdlZWtzIGdvIGJ5IGFuZCBub3RoaW5nIGNoYW5nZXMuLiAKNS4yNSBMYWNzLiAKU28gSSd2ZSBiZWVuIGdvaW5nIG9uIGRhdGVzIGJ1dCB0aGV5IHdlcmVuJ3QgcmVhbGx5IHdvcnRoIHBvc3RpbmcgYWJvdXQuIE9uZSBndXkgaGVsZCBteSBoYW5kIHdoaWxlIHdlIHdlbnQgdG8gdGhlIHpvbyBhbmQgaXQgd2FzIHN3ZWV0LiAKVGhlbiBJIG1vdmUgYXdheSBhZ2FpbiBhbmQgb3ZlciB0aW1lIHRoYXQgb2xkIHBlcnNvbiBkaWVzIGFuZCBJIGJlY29tZSBhIG5ldyBwZXJzb24uIApTb21lIHdvbWVuIGFyZSBhc3ltcHRvbWF0aWMsIHdoZXJlYXMgb3RoZXJzIGhhdmUgc3VnYXIgaW4gdGhlIHVyaW5lLCBleGNlc3NpdmUgdXJpbmF0aW9uLCBleGNlc3NpdmUgdGhpcnN0LCBhbmQgZXhjZXNzaXZlIGh1bmdlci4gClRoaXMgcGxheWVyIG1heSBwdXQgZG93biBhbnkgbnVtYmVyIG9mIGNhcmRzIG9mIHRoZSBzYW1lIHZhbHVlLiAKSSBhbSBzaWNrIG9mIGhpbSBseWluZyB0byBtZS4gCldlIGNhdWdodCB1cCB3aXRoIENCUyBTcG9ydHMgY29sbGVnZSBiYXNrZXRiYWxsIGFuYWx5c3QgU3dpbiBDYXNoLCB3aG8gdG9sZCB1cyB0aGF0IGV4cGVyaWVuY2UgaXMgYSBiaWcgdGhpbmcgdG8gbGVhbiBvbiBjb21lIHRoaXMgdGltZSBvZiB5ZWFyLiAKIlRoZXNlIGNhc2VzIGhhdmUgcHJvdmlkZWQgYW4gaW50ZXJlc3RpbmcgcmVvcmdhbml6YXRpb24gY29udW5kcnVtLCIgcmVhZCBhIG1vdGlvbiBmaWxlZCBOb3YuIDIgYnkgV2FnbmVyJ3MgYmFua3J1cHRjeSBhdHRvcm5leSBKb2huIFkuIEJvbmQgSUlJLCB3aG8gZGlkbid0IHJldHVybiBhIHRlbGVwaG9uZSBtZXNzYWdlIGZvciB0aGlzIHN0b3J5LiAiSnVzdCBzaXggbW9udGhzIGFnbywgYXQgdGhlIG91dHNldCBvZiB0aGUgY2FzZXMsIHRoZSBwcmljZSBwZXIgYmFycmVsIG9mIG9pbCB3YXMgaG92ZXJpbmcgYXJvdW5kICQ2MCAgIHVwIGZyb20gYSBmaXJzdCBxdWFydGVyIHRyb3VnaCBvZiBsZXNzIHRoYW4gJDQ1IHBlciBiYXJyZWwgICBhbmQgdGhlcmUgd2FzIHN1YnN0YW50aWFsIGJlbGllZiBpbiB0aGUgbWFya2V0IHRoYXQgdGhlIHByaWNlIHdvdWxkIGNvbnRpbnVlIHRvIGluY3JlYXNlLiBOb3cgc2l4IG1vbnRocyBsYXRlciwgdGhlIHByaWNlIHBlciBiYXJyZWwgaGFzIGRpcHBlZCBhcyBsb3cgYXMgJDM4IHBlciBiYXJyZWwgYW5kIGlzIGN1cnJlbnRseSBzaXR0aW5nIGF0IGFyb3VuZCAkNDUgcGVyIGJhcnJlbC4iClRoZSBGbG9wIERlY2lkaW5nIHdoZXRoZXIgdG8gY29udGludWUgcGxheWluZyBhZnRlciBzZWVpbmcgdGhlIGZsb3Agd2lsbCBiZSB5b3VyIHNlY29uZCBiaWdnZXN0IGRlY2lzaW9uLiAKSXQgd2FzIHF1aXRlIGRpZmZlcmVudCBmcm9tIHRoZSBib29rLCBidXQgSSB0aG91Z2h0IGl0IHdvcmtlZCBmb3Igd2hhdCB0aGV5IG5lZWRlZCB0byBkbyB0byBicmluZyBpdCB0byB0aGUgc2NyZWVuLlNvbWUgb2YgdGhlIHN0dWZmIHRoZXkgY2hhbmdlZCB3YXMgbGFtZSAgIGxpa2UgaG93IGVhc3kgaXQgd2FzIGZvciBBcnRlbWlzIHRvIGdldCBvdXQgb2YgSU9JLiBJIGFsc28gbWlzc2VkIGhhdmluZyBPZ2RlbiBpbiB0aGUgZmluYWxlLCBhbmQgdGhlIHNlcXVlbmNlIHdpdGggY2hhc2luZyB0aGUgdmFuIGF0IHRoZSBlbmQgd2FzIG5vdCBwYXJ0aWN1bGFybHkgaW1wcmVzc2l2ZS4gCkNhdHNhbmRzcGFjZWFuZG1hdGggIDEwIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCldoaXRlIEFtZXJpY2EgaXMgYmVpbmcgaGl0IGhhcmQgd2l0aCBoZXJvaW4gYW5kIHRoYXQgaXMgYSBjcmltZS4gQnV0IHRoZSBkaWZmZXJlbmNlIGlzIHdoaXRlIEFtZXJpY2FucyBhcmVuJ3QgYXMgaGVhdmlseSBwb2xpY2VkLiAKVGhlIEVhcmx5IFN0YWdlcyBpcyB0aGUgc3RhcnRpbmcgc3RhZ2VzIG9mIGFueSB0b3VybmFtZW50IGFuZCBpdCBicmluZ3MgaW4gdmFyaWVkIGNoYWxsZW5nZXMgZm9yIGJvdGggZXhwZXJpZW5jZWQgYW5kIG5vdmljZSBwbGF5ZXJzLiBBcyBhIHJlc3VsdCwgb25lIG11c3QgYmUgd2lsbGluZyB0byBwbGF5IHNvbWUgcG90cyBpbiB0aGlzIGVhcmx5IHN0YWdlIHNvIGFzIHRvIGJlIHZpYWJsZSBpbiB0aGUgbGF0ZXIgc3RhZ2VzLiBTdGF5aW5nIG91dCBvZiB0cm91YmxlIGlzIGtleSBpbiB0aGlzIHN0YWdlOyBvbmUgc2hvdWxkIGFsd2F5cyBhdm9pZCBlbnRlcmluZyBtdWx0aSB3YXkgaGFuZHMgdW5sZXNzIGluIHBvc3Nlc3Npb24gb2YgYSBoYW5kIHRoYXQgY2FuIGZsb3AgYSBtb25zdGVyLiBBbHdheXMgYmV0IGJpZyBmb3IgdmFsdWUsIGJ1aWxkIHBvdHMgd2l0aCB5b3VyIGJpZyBoYW5kcyBzaW5jZSBpdCBjYW4gYmUgZGlmZmljdWx0IHRvIGdldCBob2xkIG9mIHRoZXNlIGNoaXBzIGxhdGVyIG9uIHdoZW4gdGhleSBhcmUgaW4gdGhlIHN0YWNrIG9mIGJldHRlciBvcHBvbmVudHMuCkFsdHJpIG1lZGlhICByYWRpbyBlIHR2ICBwb3Nzb25vIGZhcmUgZGEgc290dG9mb25kbywgbWEgbm9uIHB1b2kgbGVnZ2VyZSB1biBsaWJybyBlIGNvbnRlbXBvcmFuZWFtZW50ZSBmYWNlYm9vayAoYW5lZGRvdG8gcGVyc29uYWxlOiBkYSBxdWFuZG8gZHVlIGFubmkgZmEgaG8gZGF0byB1biB0YWdsaW8gYSBmYWNlYm9vayBobyByYWRkb3BwaWF0byBsZSBsZXR0dXJlIGFubnVhbGksIGUgZ2kgbGVnZ2V2byBwYXJlY2NoaW8pLi4gCkluIHRoZSByZXN0YXVyYW50LCBoZSBiZWdhbiB0byBzb2IuCldoZW4gSSBnZXQgaW50byB0cmlnZ2VyIHBvaW50IHJlbGVhc2UgYW5kIHVzZSBtdXNjbGUgc3RyaXBpbmcgYW5kIGlzY2hlbWljIGNvbXByZXNzaW9ucyBvbiB0aGUga25vdHMsIHRoaXMgc3RvcHMgYmxvb2QgZmxvdyB0byB0aGUgYXJlYSBmaXQgYSBzZWNvbmQgYW5kIGVhc2VzIHRoZSBjb250cmFjdGlvbiwgd2hlbiBJIGxldCBnbyBvZiB0aGUgY29tcHJlc3Npb24gdGhlIGJsb29kIHJ1c2hlcyB0byB0aGUgYXJlYSB0byBpbmNyZWFzZSByZWxheGF0aW9uIG9mIHRoZSBtdXNjbGUuVGhlIG1ham9yaXR5IG9mIG15IHdvcmsgaXMgZm9jdXNlZCBvbiByZWxheGluZyBhbmQgbGVuZ3RoZW5pbmcgdGVuc2UgbXVzY2xlcyB0aHJvdWdoIGluY3JlYXNlZCBjaXJjdWxhdGlvbiBhbmQgZGVjcmVhc2VkIGh5cGVyaXJyaXRhYmlsaXR5LlRoZW4gdGhlcmUgYXJlIHRoZSBhcmVhcyBvZiBkZWFsaW5nIHdpdGggdGVuZG9uaXRpcywgbmVydmUgaW1waW5nZW1lbnRzIGFuZCBvdGhlciBpbmp1cmllcy5UaGVzZSB1c3VhbGx5IGludm9sdmUgam9pbnQgbWFuaXB1bGF0aW9uIHRvIHN0cmV0Y2ggbXVzY2xlIGluIHRoZSBhcmVhIGFuZCB3b3JraW5nIHdpdGggdGhlIHRlbmRvbnMgdG8gcmVkdWNlIGluZmxhbW1hdGlvbi4uIApZb3UgY2FuIGRvIHRoaXMsIGFuZCB3ZSBkby4gSXQgY2FsbCBkZXNhbGluYXRpb24uIFRoZSBwcm9jZXNzIHlvdSBkZXNjcmliZSBpcyBjYWxsZWQgZGlzdGlsbGF0aW9uIGRlc2FsaW5hdGlvbiwgYW5kIGhpc3RvcmljYWxseSB3YXMgdGhlIG9ubHkgd2F5IHRvIHR1cm4gc2FsdCB3YXRlciBpbnRvIGRyaW5raW5nIHdhdGVyLiAKVGhlIExvdmUgQWZmYWlyIG9mIFByaW5jZSBDaGFybGVzIGFuZCBDYW1pbGxhIFBhcmtlciBCb3dsZXMKU3RhbmRpbmcgb3V0IGluIHRoZSBjcm93ZCBpcyBiYWQ/IGJlaW5nIGlnbm9yZWQgYXMgb25lIG9mIHRoZSBjcm93ZCBpcyB3b3JzZS4gQXQgbGVhc3QgeW91IGNhbiBwdXQgdW5pcXVlbmVzcyB0byB1c2UuIApUaGUgbmF2aWdhdGlvbiBydW5uaW5nIGlzIHByb2JhYmx5IHJlc3VsdGluZyBpbiB0aGUgZGF0YSBjb25uZWN0aW9uIG5vdCBiZWluZyBpZGxlIGZvciBsb25nIGVub3VnaCBmb3IgdGhlIHBob25lIHRvIGNoZWNrIExURSBhZ2Fpbi4KUEVJIGhhcyBSZWQgU2hvcmVzIGluIENoYXJsb3R0ZXRvd24uIFBva2VyIHJ1bnMgVHVlcywgVGh1cnMsIEZyaSwgU2F0LiBPbmx5IGV2ZXIgZ29pbmcgdG8gZ2V0IDEgb3IgMiB0YWJsZXMgZXhjZXB0IGZvciB0aGUgb2RkIGJ1c3kgd2Vla2VuZC4gR2FtZXMgYXJlIGdvb2QgYW5kIHVzdWFsbHkgcGxheSBiaWcgZm9yIHRoZSBzdGFrZXMuIEV2ZXJ5IHNhdHVyZGF5IHRoZXJlcyBhIDIvMiBwbG8gZ2FtZSB0aGF0IHJ1bnMgaW4gdGhlIGVhcmx5IGFmdGVybm9vbiBhbmQgZ29lcyB1bnRpbCBpdCBicmVha3MuCkNoaW5hIHRha2VzIG5vIHRheGVzIG9yIGFsbG9jYXRlcyBhbnkgYnVkZ2V0IHRvIFRhaXdhbi4gVGFpd2FuIGFsc28gc2lnbnMgcGxlbnR5IG9mIGludGVybmF0aW9uYWwgYWdyZWVtZW50IHRoYXQgYXJlIG5vcm1hbGx5IG9ubHkgbWFkZSB3aXRoIG5hdGlvbiBnb3Zlcm5tZW50cywgc3BlY2lmaWNhbGx5IHRhaWxvcmVkIGZvciB0aGUgc3RhdHVzIHF1bywgYW5kIHRoZXkgaGF2ZSBhYnNvbHV0ZSBubyBjb250cm9sIG92ZXIgb3VyIGxhd3Mgb3V0c2lkZSBwb2xpdGljYWwgbWFjaGluYXRpb25zLCB3aGljaCBpZiB5b3Ugc2F5cyBtYWtlcyBpdCBoYXZlIGNvbnRyb2wsIHRoZW4gYnkgdGhhdCBtZWFucywgdGhlIFVTIGlzIHBhcnQgb2YgUnVzc2lhLi4gCkxhIG5vdXZlbGxlIGV4cHJlc3Npb24gc2VtYmxlIHBsdXMgYWRxdWF0ZSBlbiByZW52b3lhbnQgIGwnaWRlIGRlICBmYWN1bHRzIG1lbnRhbGVzIC4gQ2VsYSBjb25jZXJuZSBsZXMgbWFsYWRpZXMgcXVpIGF0dGVpZ25lbnQgbGUgZHZlbG9wcGVtZW50IGRlcyBmYWN1bHRzIG1lbnRhbGVzIChjcnRpbmlzbWUsIGlkaW90aWUsIGltYmNpbGxpdCwgZGJpbGl0LCBmYWlibGVzc2UgZCdlc3ByaXQpIGNvbW1lIGxlcyBtYWxhZGllcyBxdWkgbGVzIGFmZmFpYmxpc3NlbnQgKGZvbGllKS4gCkxrZSBJIHNhZCwgdHJhdmVsbmcgbiBkZXZlbG9wbmcgY291bnRyZXMgY2FuIGJlIHByZXR0eSByb3VnaCBvbiB5b3UuIEkga2VwdCBmZWVsbmcgbGtlIHQgd291bGQgZ2V0IGJldHRlciBhbmQgd2hlbiB0IGRkbiBJIGZuYWxseSB3YWxrZWQgdGhlIHR3byBibG9ja3MgdG8gdGhlIGhvc3B0YWwuIApTaGUgd291bGRuJ3QgYW5zd2VyIGNhbGxzIGZyb20gb3VyIGluc3VyYW5jZSBjb21wYW55IG9yIGhlcnMgZm9yIHR3byB3ZWVrcy4gV2UgaGFkIHRvIGdvIHRvIHRoZSBoaWdod2F5IHBhdHJvbCBoZWFkcXVhcnRlcnMgKDMwIG1pbiBhd2F5KSB0byBnZXQgYW4gb2ZmaWNpYWwgY29weSBvZiB0aGUgcG9saWNlIHJlcG9ydCBmb3Igb3VyIGluc3VyYW5jZSBjb21wYW55LCBhbmQgd2UgaGFkIHRvIHRocmVhdGVuIGxlZ2FsIGFjdGlvbiBiZWZvcmUgc2hlIHdvdWxkIHRha2UgcmVzcG9uc2liaWxpdHkgYW5kIGFsbG93IGhlciBpbnN1cmFuY2UgY29tcGFueSB0byBwYXkgZm9yIG91ciBkYW1hZ2VzLiAKVGhlcmUgYXJlIG1hbnkgbWFqb3IgcHJvYmxlbXMgaW4gdGhlIHdvcmxkIHRoYXQgY2F1c2Ugc3VmZmVyaW5nLCBidXQgdW5mb3J0dW5hdGVseSBvbmx5IGZpbml0ZSByZXNvdXJjZXMgKHN1Y2ggYXMgdGltZSBhbmQgbW9uZXkpIHRvIHRyeSBhbmQgc29sdmUgdGhlbS4gClJlZ2FyZGluZyBEb2MncyBza2lsbHMsIGhlIGhhZCBxdWl0ZSBhIG51bWJlciBvZiB0aGVtLiBCbHVmZiwgU2Vuc2UgTW90aXZlLCBQZXJjZXB0aW9uLCBTbGVpZ2h0IG9mIEhhbmQsIExpbmd1aXN0aWNzLCBhbmQgUHJvZmVzc2lvbiAoR2FtYmxlcikgYXJlIG5vIGJyYWluZXJzLiBJZiB5b3Ugc3RpbGwgaGF2ZSBwb2ludHMgbGVmdCwgdGhlbiB5b3UgbWlnaHQgZmluZCBJbnRpbWlkYXRlLCBLbm93bGVkZ2UgKExvY2FsKSwgYW5kIEtub3dsZWRnZSAoTm9iaWxpdHkpIHVzZWZ1bC4gRGlzZ3Vpc2UgaXNuJ3Qgb3V0IG9mIHRoZSBxdWVzdGlvbiBlaXRoZXIsIGFzIERvYyB3ZW50IG9uIHRoZSBydW4gZnJvbSB0aGUgbGF3IHNldmVyYWwgdGltZXMsIGFuZCBhc3N1bWVkIGZhbHNlIG5hbWVzIGFuZCBhcHBlYXJhbmNlcyB3aGlsZSBoZSB3YXMgZG9pbmcgc28uCldpdGggdGhlIGdyb3dpbmcgcG9wdWxhcml0eSBvZiBwb2tlciwgaWYgeW91IGNob29zZSB0byBwbGF5IGF0IGEgbGl2ZSBjYXJkcm9vbSB5b3Ugd2lsbCBtb3N0IGxpa2VseSB3YWl0IGhvdXJzIGp1c3QgdG8gZ2V0IHNlYXRlZCBhdCBhIHRhYmxlLiAKTGFzZXIgVGhlcmFweSBFZmZlY3QgMjogSW1wcm92ZWQgTmVydmUgRnVuY3Rpb24KIlllYWgsIHNwcmludGVycyBhbmQgR0MgcmlkZXJzIGhhdmUgZGlmZmVyZW50IHR5cGVzIGJlY2F1c2UgdGhlaXIgbXVzY2xlcyB3b3JrIGRpZmZlcmVudGx5LiBUaGUgYmlnZ2VzdCBkaWZmZXJlbmNlIGlzIHRoZSBtYXNzYWdlLiBJdCdzIHRvdGFsbHkgZGlmZmVyZW50IGJlY2F1c2Ugc3ByaW50ZXJzIG5lZWQgdG8gZ2V0IG91dCB0aGUgbWF4aW11bSB3b3JrIGluIGEgdmVyeSBzaG9ydCB0aW1lLCBhbmQgZm9yIHRoZSBlbmR1cmFuY2Ugd29yayB3aXRoIHRoZSBHQyByaWRlcnMgaXQncyBhIGtpbmQgb2Ygc29mdGVyIG1hc3NhZ2UgaW4gZ2V0dGluZyB0aGUgcmlkZXJzIG92ZXIgdGhlIGRheXMuLiAKU291bmRzIGxpa2UgaGUgbmVlZHMgdG8gc2VuZCBpdCB0byBhIHBhdGhvbG9naXN0LiBXaGF0IGhhcHBlbnMgaWYgaXQgY29tZXMgYmFjayBjYW5jZXJvdXMgb3Igc29tZXRoaW5nIHNlcmlvdXM/IEFyZSB5b3Ugc3RpbGwgZ29pbmcgdG8gIndoYXQgdGhlIGZ1Y2siIHRoZSBkZW50aXN0IHRoYXQgY2F1Z2h0IGl0IGVhcmx5PyBJZiBoZSBkaWRuJ3Qgc2VuZCBpdCB0byBwYXRob2xvZ3kgYW5kIGl0IGVuZGVkIHVwIGJlaW5nIGNhbmNlcm91cyB5b3UnZCBiZSB0aGUgZmlyc3QgdG8gc3VlIGhpbS4gRGVudGFsIHBhdGhvbG9neSBpcyBjaGVhcC4gClN1Y2ggdG91cm5hbWVudHMgY2FzaCBpbiBhIGh1Z2UgYW1vdW50IG9mIEludGVybmV0IHRyYWZmaWMuLiAKVGhlIHNpbXBsZXN0IHdheSBpcyBvZiBjb3Vyc2UgdG8ganVzdCB3YWxrIHVwIHRvIGhpbSBhbmQgYXNrLiBZb3UgY2FuIHNheSwgIk1yLiAKSW4gdGhlIGZpcnN0IGZpdmUgbWludXRlcyBoZSB0b2xkIHVzIHNvbWV0aGluZyBsaWtlIDogImlmIHlvdSBmZWVsIGRlcHJlc3NlZCBvciBzdHJlc3NlZCwgdGhhdCBiZWNhdXNlIHlvdSBlbmVyZ3kgaXMgYmxvY2tlZCBzb21ld2hlcmUuIEl0IGNhbiBiZSBiZWNhdXNlIG9mIGZvb2QsIG9yIHNvbWVvbmUsIG9yIGEgcGxhY2UsIGFueXRoaW5nLiAKVGhleSBmaW5hbGx5IGdvdCB0aGUgY2F0aGV0ZXIgaW4gYW5kIHRvb2sgdGhlIHNwZWN1bHVtIG91dC4gClNvIGl0IGdvZXMgaW4gdGhlc2UgZGFyayAocClhZ2VzLCBmb3IgdGhlIHZlcnkgbmV4dCBzY2hpc20gbWFraW5nIHBvZW0gQnVpbGRpbmcgQ29kZSwgZnVydGhlciByZWZlcmVuY2VzIGNhdml0eSByaWRkbGVkIGh1bWFuIG1vbGFycywgc2tlbGV0b24sIHRpYmlhLCBoYWlyLCBjYXJ0aWxhZ2UsIGRpc2xvY2F0ZWQgaHVtYW4gc3BpbmUsIGNsYW1teSBoYW5kcyAgd2hlcmVieSBodW1hbml0eSBpcyBkZWNvbnN0cnVjdGVkIG1ldGFwaG9yaWNhbGx5IGFuZCBkZXZvbHZlZCBwaHlzaWNhbGx5ICAgYnkgaHVtYW5zLiAKU3BlY3VsYXRpb24gc3Vycm91bmRpbmcgdGhlIExlYWZzIHdpbGwgY29udGludWUgYXJvdW5kIHRoZSBwcmVkaWN0YWJsZSBzdGFydGluZyB3aXRoIHBlbmRpbmcgdW5yZXN0cmljdGVkIGZyZWUgYWdlbnQgZGVmZW5jZW1hbiBSb21hbiBQb2xhay4gCiAgMSBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29VbSBuby4gCihJQU5BTCkgSWYgaGUgaXMgaGVyIFBPQSwgaXQgd2lsbCBkZXBlbmQgb24gd2hlbiAvIHdoeSBpdCB3YXMgc2V0IHVwIGFuZCBob3cgc2hlIHNldCBpdCB1cC4gClRoZSBlbnRpcmUgc3BhY2UgaXMgc2NydXB1bG91c2x5IHRpZHkuIApPbmUgc29sZGllciBhdCBhbiBleGl0IG9mIGEgY2FtcGluZyBncm91bmQgaXMgbG9va2luZyBhdCBtZSB3aXRoIGEgZmF2b3IgYW5kIGFsbG93ZWQgbWUgdG8gbGVhdmUgdGhlIGNhbXBpbmcgZ3JvdW5kIG1vdmUgdG8gYSBiZXR0ZXIgcmVzdGluZyBwbGFjZSBvciBzaGVsdGVyLi4gCkJ1cmVhdSBvZiBMYWJvciBTdGF0aXN0aWNzIHByZWRpY3RzIHRoZSBldmVudCBpbmR1c3RyeSB3aWxsIGdyb3cgYnkgNDQgcGVyY2VudCBmcm9tIDIwMTAgdW50aWwgMjAyMCwgYW5kIGZvciBnb29kIHJlYXNvbjogOTggcGVyY2VudCBvZiBjb25zdW1lcnMgc2F5IHRoZXkncmUgbW9yZSBsaWtlbHkgdG8gYnV5IGEgcHJvZHVjdCBhZnRlciBhdHRlbmRpbmcgYW4gYWN0aXZhdGlvbi4gCkhoaGhoaG1tbW0sIGdvdHRhIGRpc2FncmVlIGhlcmUuIApUaGUgdGhvdWdodCBwcm9jZXNzIGNoYW5nZWQgb25jZSBKYWNraWUgSnIuIApUaGUgdG9wIHBva2VyIGd1eXMgc3R1ZHkgZWFjaCBvdGhlcidzIGdhbWVzLiAKQW5kIHRvIGZ1cnRoZXIgdGhhdCBwb2ludCwgaGUgbmV2ZXIgY2FtZSBiYWNrLiBSZXBvcnRlcjogU2hlIHNheXMgRGFtb24ncyBwYWwsIEJlbiBBZmZsZWNrLCB3YXMgYSByZWd1bGFyIHdob3NlIHBlY2hhbnQgZm9yIGdhbWJsaW5nIGhhcyBtYWRlIHRoZSBuZXdzLiBTZWN1cml0eSBhdCB0aGUgaGFyZCByb2NrIGhvdGVsIGFuZCBjYXNpbm8gdG9sZCBBZmZsZWNrIHF1b3RlLCAiWW91J3JlIHRvbyBnb29kIiBhbmQgcG9saXRlbHkgZXNjb3J0ZWQgaGltIGF3YXkgZnJvbSB0aGUgYmxhY2tqYWNrIHRhYmxlLiAKIkZvcmVpZ24gdHJhc2giIGlzIGEgc2x1ciwgc28gaXQgbm90IHN1cnByaXNpbmcgdGhhdCBpdCBhdHRyYWN0aW5nIGEgbG90IG9mIHJhY2lzdHMuIFNheWluZyB0aGF0IHlvdSBhcmUgb25seSB0YWxraW5nIGFib3V0IGNlcnRhaW4gZm9yZWlnbmVycyB3aG8gYmVoYXZlIGJhZGx5IGlzIHNvcnQgb2YgbGlrZSBhICJ5b3Ugb25lIG9mIHRoZSBnb29kIG9uZXMiIGFyZ3VtZW50LiBJdCByZWFsbHkgYSBsb3cgYnJvdyBkaXNjdXNzaW9uIGFib3V0IGEgbm9uIGlzc3VlIHRoYXQgYXBwZWFscyB0byBYZW5vcGhvYmVzIGFuZCByYWNpc3RzLiBJdCBub3QgbGlrZSBmb3JlaWduZXJzIGFyZSBjb21taXR0aW5nIGNyaW1lcyBhdCBoaWdoIHJhdGVzIGluIENoaW5hLCBhbmQgZXZlbiBpZiB0aGV5IHdlcmUgeW91IGNhbiBkaXNjdXNzIHRoZSBpc3N1ZSB3aXRob3V0IHVzaW5nIHNsdXJzLiBJbWFnaW5lIGEgZGViYXRlIGluIHRoZSBVUyBhYm91dCAiTWV4aWNhbiB0cmFzaCBjb21taXR0aW5nIGNyaW1lcyI7IGl0IHdvdWxkIGJlIHZpZXdlZCBhcyBkZXJvZ2F0b3J5IGFuZCBpbmZsYW1tYXRvcnksIGFuZCByaWdodGx5IHNvLgoiVGhhdCBjZW50cmUgbWV0IGFuIGFic29sdXRlIG5lZWQgaW4gdGhhdCBhcmVhIGFuZCBJIHVuZGVyc3RhbmQgdGhlcmUgYSB3YWl0aW5nIGxpc3Qgb2YgYXJvdW5kIDE4IG1vbnRocyB0byB0d28geWVhcnMuICJOb3QgYWxsIGNsdWJzIGhhdmUgdGhlIGxhbmQgdG8gZG8gaXQsIGFuZCBhbnkgc3VjaCBjZW50cmUgd291bGQgbmVlZCB0byBiZSBpbiBhIGNsZWFybHkgaWRlbnRpZmlhYmxlIGFyZWEuLiAKSWYgbmVjZXNzYXJ5LCB5b3UgY2FuIGF2b2lkIGhvdCBzdGFtcGVkIHBva2VyIGNoaXBzIGFsdG9nZXRoZXIgYW5kIGFpbSBmb3IgdGhvc2UgdGhhdCBoYXZlIGVuZ3JhdmVkIGxldHRlcmluZyBhbmQgbnVtYmVycyBpbiB0aGVtLiBUaGVzZSB0eXBlcyBzZWVtIHRvIGJlIG1vcmUgZHVyYWJsZS4uIApPbiBUdWVzZGF5IG5pZ2h0LCBwcmlvciB0byB0aGVpciB0dXJuIGF0IHRoZSBNb3VudGFpbiBXZXN0IG1lZGlhIHN1bW1pdCwgQ29sb3JhZG8gU3RhdGUgc2VuaW9ycyBOaWNrIFN0ZXZlbnMgYW5kIERlb250ZSBDbHlidXJuIHdlcmUgaGVhZGVkIHRvIGRpbm5lci4gV2Fsa2luZyBiZWhpbmQgdGhlbSB3ZXJlIGEgY291cGxlIG9mIG90aGVyIGZvb3RiYWxsIHBsYXllcnMsIFd5b21pbmcncyBKb3NoIEFsbGVuIGFuZCBBbmRyZXcgV2luZ2FyZC4KVGhlIGZpbmRpbmdzIHdlcmUgaGFyZGx5IHN0YXRpYyBhY3Jvc3MgdGhlIGJvYXJkLCBob3dldmVyLiAiSW4gdGhpcyBzdHVkeSwgd2UgZm91bmQgdGhhdCB0aGUgZ3JvdXBzIG9mIGF0b3BpYyBkZXJtYXRpdGlzIGFsb25lIGFuZCB0aGUgYWxsZXJnaWMgcmhpbml0aXMgKyBhdG9waWMgZGVybWF0aXRpcyB3ZXJlIGFzc29jaWF0ZWQgd2l0aCBhIGxvd2VyIHJpc2sgb2YgcHN5Y2hpYXRyaWMgZGlzb3JkZXJzLCBidXQgYWxsIHRoZSBvdGhlciBmb3VyIGdyb3Vwcywgc3VjaCBhcyBicm9uY2hpYWwgYXN0aG1hIGFsb25lLCBhbGxlcmdpYyByaGluaXRpcyBhbG9uZSwgYnJvbmNoaWFsIGFzdGhtYSArIGFsbGVyZ2ljIHJoaW5pdGlzLCBicm9uY2hpYWwgYXN0aG1hICsgYXRvcGljIGRlcm1hdGl0aXMsIGFuZCB0aGUgY29tYmluYXRpb24gb2YgYWxsIHRoZXNlIHRocmVlIGFsbGVyZ2ljIGRpc2Vhc2VzLCB3ZXJlIGFzc29jaWF0ZWQgd2l0aCBhIGhpZ2hlciByaXNrIG9mIHBzeWNoaWF0cmljIGRpc29yZGVycywiIHRoZSByZXNlYXJjaGVycyB3cml0ZSBpbiB0aGUgc3R1ZHkuCldoYXQgaXMgdGhlIHByb2JhYmlsaXR5IG9mIGdldHRpbmcgYW4gYWNlIGluIGEgcGFjayBvZiA1MiBjYXJkcz8KR290IGhpcy4gClRoZSByZWFzb24gYW5hZXJvYmljIGludGVydmFsIHRyYWluaW5nIHdvcmtzIHNvIG11Y2ggYmV0dGVyIGlzIHRoYXQgaXQgcmVxdWlyZXMgdGhlIGJvZHkgdG8gYWRhcHQgbWV0YWJvbGljYWxseSB5b3VyIGJvZHkgaXMgZm9yY2VkIHRvIGJ1cm4gZmF0IHRvIHN1c3RhaW4gdGhlIGxldmVsIG9mIGludGVuc2l0eSBiZWluZyBhc2tlZCBvZiBpdC4gSXQgYWxzbyBlbGV2YXRlcyBlbmVyZ3kgdXNlIGZvciBtb3JlIHRoYW4gMjQgaG91cnMgcG9zdCB3b3Jrb3V0LCB3aGljaCBoYXMgYSBkcmFtYXRpYyBlZmZlY3Qgb24gYmVsbHkgZmF0IGxvc3MuLiAKQSBwaWN0dXJlIG9mIG9ubHkgdGhlIFpvbmNvbGFuIGJlbG93LiBJdCByZW1pbmRzIG1lIG9mIG15IGNsaW1iIHRocm91Z2ggdGhlIFN3aXNzIEFscHMgdXAgU3QgR290dGhhcmRzIG9uIG15IGN5Y2xlIGFyb3VuZCB0aGUgZ2xvYmUuLiAKSGF2ZSBhbiBvdmVyYWxsIGluc3BlY3Rpb24gb2YgeW91ciBib2R5LiBUaGlzIGlzIGJlc3QgYWNjb21wbGlzaGVkIGJ5IHN0YW5kaW5nIGluIGZyb250IG9mIGEgZnVsbCBsZW5ndGggbWlycm9yLiAKU28gbm93IHRoYXQgd2UgZ29pbmcgdG8gYmUgbWFraW5nICQ4NWsgYSB5ZWFyIHdpdGhvdXQgdXBzaWRlLCBKb2UgTWFpbnN0cmVldCBpcyBnb2luZyB0byBoYXZlIGhpcyByZXZlbmdlLCByaWdodD8gV3JvbmchLiAKUG9zdGVkIGJ5IEVsbGVuQyBhdCA1OjE5IFBNIG9uIEF1Z3VzdCAxNiwgMjAwNgpBcyB3YXMgbW9zdCBvZiB0aGUgcG9wdWxhY2UgYXQgdGhlIHRpbWUuIEFzIGZyZXNoIGltbWlncmFudHMgdGhleSBzYXcgZnVsbCB3ZWxsIGhvdyBFdXJvcGUgd2FzIGJlbnQgdW5kZXIgY2VudHJhbCBiYW5rZXJzIGFuZCB3ZXJlIGFnYWluc3QgY2VudHJhbCBiYW5rcyBpbiBBbWVyaWNhLiBUaGUgY29uY2VwdCB3YXMgdmVyeSBtdWNoIGRlc3Bpc2VkIGJ5IHR1cm4gb2YgdGhlIGNlbnR1cnkgQW1lcmljYW5zLgpNZWxpc3NhIFJ5Y3JvZnQgVGhlcmUgc2hlIGdvZXMgYWdhaW4gb24gaGVyIG93bi4gVGhlIGZvcm1lciBEYWxsYXMgQ293Ym95cyBjaGVlcmxlYWRlciAoV2h5LCB3aGF0IGVsc2UgaXMgc2hlIGZhbW91cyBmb3I/KSBkYXp6bGVkIGFuZCBkZWxpZ2h0ZWQgb25jZSBhZ2FpbiB3aXRoIHRvbmlnaHQncyBmb3ggdHJvdC4gCkJ1dCBteSBiZXN0IGZyaWVuZCBpcyBibGFjayBhbmQgbW9zdCBvZiBoZXIgcmVsYXRpb25zaGlwcyBoYXZlIGJlZW4gd2l0aCB3aGl0ZSBtZW4uIApUd28gb24gZHV0eSBvZmZpY2VycyB3ZXJlIHdvdW5kZWQsIG9uZSBjcml0aWNhbGx5LCBwb2xpY2Ugc2FpZC4uIApJZiB5b3UgcGxheWVkIHBsYXkgbW9uZXkgcG9rZXIsIHlvdSBwcm9iYWJseSBrbm93IHdoYXQgSSBhbSB0YWxraW5nIGFib3V0LiBIb3dldmVyLCBpZiBwb2tlciBpcyBhbnkgaW5kaWNhdGlvbiwgdGhlIGxvd2VzdCBzdGFrZXMgd2lsbCBiZSBzdXBlciBlYXN5IHRvIGJlYXQgYW55d2F5LiBUaG91Z2ggaXQgcmVtYWlucyB0byBiZSBzZWVuIGlmIHRoZXNlIHRyZW5kcyB0cmFuc2l0aW9uIHRvIEFydGlmYWN0IGFzIHRoZXkgYXJlIGluIHBva2VyLiAKVGhpcyBpcyBqdXN0IGhpbGFyaW91c2x5IHdyb25nLiBJZiB5b3VyIHByb3RlaW4gc2hha2UgaXMgZGFtYWdpbmcgeW91ciBsaXZlciB5b3UncmUgdGFraW5nIHNvbWUgaGlsYXJpb3VzbHkgdGFpbnRlZCBib290bGVnIG1peGVkIHdpdGggd29vZCBzaGF2aW5ncyBjcmFwIGZyb20gYSBtYW51ZmFjdHVyZXIgaW4gY2hpbmEuClJhbmxleSBiYWJ5IEkgd2lzaCBJIHdvdWxkIGhhdmUgYmVlbiBhcm91bmQgeW91IG1vcmUuIApZb3UgY2Fubm90IHRydXN0IGNvbXBhbmllcyB0aGUgc2FtZSB3YXkgeW91IHRydXN0IHNpbmdsZSBwZXJzb25zLiBUaGF0cyB3aHkgeW91IG11c3QgbmV2ZXIgcHJlb3JkZXIuIApJIGhhdmUgYSBmcmllbmQgd2hvIHdvcmtlZCBpbiB0aGF0IHByb2plY3QuIApBbHNvIG1ha2Ugc3VyZSB0byBoYXZlIGVxdWFsIHBhcnRzIHdhdGVyIGFmdGVyIHRoZSBqdWljZS4gClNpbGVyJ3Mgc3R1ZHksIHB1Ymxpc2hlZCByZWNlbnRseSBpbiB0aGUgSm91cm5hbCBvZiBHYW1ibGluZyBTdHVkaWVzLCBzaG93ZWQgdGhhdCB0aGUgbW9yZSBoYW5kcyBvZiBwb2tlciBzb21lb25lIHBsYXlzLCB0aGUgaGlnaGVyIHRoZSBjaGFuY2VzIHRoYXQgaGUnbGwgd2FsayBhd2F5IHdpdGggc21hbGxlciBwcm9maXRzLiAKOCkgRXhjZXNzaXZlIFNwYW0uIApPbiB0aGUgbW9zdCBwcm9maXRhYmxlIGludGVybmF0aW9uYWwgcm91dGVzLCBoaWdoIGZsaWVycyBhcmUgYmVpbmcgdHJlYXRlZCB3aXRoIHByZWZsaWdodCBjaGFtcGFnbmUsIGZsYXQgc2NyZWVuIFRWcyBhbmQgc2VhdHMgdGhhdCB0dXJuIGludG8gYmVkcy4gRmxpZ2h0IGF0dGVuZGFudHMgZ3JlZXQgdGhlbSBieSBuYW1lLCBoYW5nIHVwIGphY2tldHMgYW5kIHNlcnZlIG1lYWxzIG9uIGNoaW5hLi4gClRoZXJlIGlzIGEgdmVnZXRhYmxlIHBhdGNoLCB3b3JtIGZhcm0gYW5kIGEgMzYgY2hpY2tlbiBwb3VsdHJ5IHJ1biB0byByZWN5Y2xlIGZvb2Qgd2FzdGUuIApHb29kIGx1Y2sgYW5kIGNvbmdyYXRzIG9uIGdyYWR1YXRpbmcgc29vbiEuIApTbyBvZiB0aGUgbW9tZW50IGhlc2l0YXRlIHBvbGl0aWNvIFplaHJpIG1hZGUgaGVhZGxpbmVzIGVhcmxpZXIgdGhpcyB5ZWFyIHdoZW4gaGUgZGVmZW5kZWQgaW4gcGFybGlhbWVudCB0aGUgJ3RyaWJhbCB0cmFkaXRpb25zJyBiZWhpbmQgdGhlIGJ1cnlpbmcgYWxpdmUgb2YgdGVlbmFnZSBnaXJscyBmb3Igc2Vla2luZyB0byBtYXJyeSBtZW4gb2YgdGhlaXIgb3duIGNob2ljZS4gQWNjb3JkaW5nIHRvIHRoZSBzYW1lIHJlcG9ydCBoZSBsYXRlciBzYWlkIGhlIHdvdWxkICJjb250aW51ZSB0byBkZWZlbmQiIHNhaWQgdHJpYmFsIHRyYWRpdGlvbnMgYW5kICJPbmx5IHRob3NlIHdobyBpbmR1bGdlIGluIGltbW9yYWwgYWN0cyBzaG91bGQgYmUgYWZyYWlkIi4gClRoZSBDaWVsIGlzIHBhcmtlZCBpbiB0aGUgZ2FyYWdlIGFuZCBTYW0gaXMgZHJhZ2dlZCBmcm9tIGhpcyB0cnVuayB1cCB0byB0aGUgZm91cnRoIGZsb29yIG9mIHRoZSBvZmZpY2UgYnVpbGRpbmcuIApIaWVyIHN0b25kIHdlbCBlZW4gbGFuZ2UgcmlqLCBtYWFyIGFsIGJpaiBhbCBzY2hvb3QgaGV0IGdvZWQgb3AuIEluIGdyb2VwZW4gbW9jaHRlbiB3ZSBkb29yLCB6YWsgYWZnZXZlbiBpbiBkZSBsdWdnYWdlIHN0b3JhZ2UsIGVuIGRhbiBkb29yIGRlIG1ldGFhbCBkZXRlY3RvcnMuIApXZSdkIGFsc28gbGlrZSB0byBjbGVhciB1cCBvbmUgdGhpbmcgdGhhdCBhcHBlYXJzIHRvIGJlIGNhdXNpbmcgY29uZnVzaW9uIGFyb3VuZCB0aGlzIHBvbGljeSAgIGl0IGlzIG5vdCBhbHdheXMgYSBxdWVzdGlvbiBvZiB0aGUgaW1hZ2UgaXRzZWxmLiBDb21tZW50cyBhbmQgY29udGV4dHVhbGl6YXRpb24gbWF0dGVyLiAKU2ltbWVyIG9uIGEgbWVkaXVtIGhpZ2ggaGVhdCBmb3IgYWJvdXQgMjAgbWludXRlcyBvciBzby4gClByYyAgcmVnaXN0cmF0aW9uIGlzIG5vdCBhIHJlcXVpcmUgIFRvZGF5J3MgY2h1Y2tsZSBMZWFybmluZyBhYm91dCB3b21lbiBJcyBsaWtlIGJlaW5nIGEgYmVnaW5uZXIgYXQgcG9rZXIsIEl0J2xsIGNvc3QgeW9uIG1vbmV5IHRvIG5uICBkZXJzVW5kIHRoZSBnYW1lLiAKSSB3YXMgbG9va2luZyBmb3IgYSBmZW1hbGUgTWFsaW5vaXMgZm9yIGEgcGxheW1hdGUgZm9yIG15IGZpcnN0IGRvZywgRHJhZ28uIApDaGlsZHJlbiBhcmUgY3VyaW91cy9yZWNlcHRpdmUgYW5kIHdpbGwsIGV2ZW4gd2l0aG91dCBzZWVpbmcgYSBzaW5nbGUgYml0IG9mIFRWLCBwaWNrIHVwIG9uIHRob3NlIHR3byB3b21lbiB3aG8gYXJlIGxpdmluZyB0b2dldGhlciBkb3duIHRoZSByb2FkIG9yIHRoZSB0d28gbWVuIHdlcmUgZ2l2aW5nIGVhY2ggb3RoZXIgYSBraXNzIGF0IHRoZSBidXMgc3RvcCwgb3IgYW55dGhpbmcgZWxzZSBmb3IgdGhhdCBtYXR0ZXIsIG9yIGV2ZW4gd2h5IHRoZXkgdGhlbXNlbHZlcyBmZWVsIHRoZXkgbGlrZSBib3lzL2dpcmxzIGxpa2UgdGhlbXNlbHZlcyBvciB3aGF0ZXZlciAoYSBjb3VwbGUgb2YgZ2F5IHBlb3BsZSBJIG1ldCBrbmV3IGV2ZW4gYXMgeW91bmcga2lkcyB0aGV5IGxpa2VkIG90aGVyIGR1ZGVzL2dpcmwgc28pLiAKVGhpcyBpc24gZ29vZC5UdXJuIFRkLiBUaGlzIGlzIHJlYWxseSByZWFsbHkgZ29vZC5CbGF6ZWxhc2VycyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvQ291bGQgYW55b25lIGhlbHAgYW5hbHl6ZSBteSBoYW5kPyBJbSBhIGJpZyBmaXNoIHRyeWluZyB0byBnZXQgYmV0dGVyLiBBbmQgSW0gc3RpbGwgbm90IGdyZWF0IHdpdGggb2RkcyBhbmQgcmFuZ2VzLkltIFVURyBpbiBhIDUgcGVyc29uIHRhYmxlLiAKQ291bGQgc2hlIGhhdmUgZ29uZSB1cCB0byBoZXIgc29uIHJvb20gdG8gY2hlY2sgb24gaGltIGFmdGVyIHRoZSBhYm9ydGlvbiB3YXMgYXR0ZW1wdGVkIGFuZCBsZWZ0IGJsb29kPyBJIGp1c3QgdGhpbmsgdGhlIGFib3J0aW9uIHRoZW9yeSBtYWtlcyB0aGUgbW9zdCBzZW5zZS4gSGVyIGh1c2JhbmQgd2FzIGF3YXkgcGVyZmVjdCB0aW1lIHRvIHNjaGVkdWxlIGl0LCBzaGUgd2Fsa2VkIGhlciBkYXVnaHRlciBhbmQgZnJpZW5kIHRvIHRoZSBuZWlnaGJvcnMgc28gdGhleSB3b3VsZG4gd2l0bmVzcyBidXQga2VwdCB0aGUgYmFieSBzaW5jZSBoZSB3b3VsZG4ga25vdyB3aGF0IHdhcyBnb2luZyBvbiBhbmQgbm90IHRvIGFyb3VzZSBuZWlnaGJvciBvZiBzb21ldGhpbmcgZ29pbmcgd3JvbmcgYW5kIGhlciBuZWVkaW5nIHRvIGdldCBib3RoIGtpZHMgb3V0IG9mIHRoZSBob3VzZS4gTWF5YmUgc2hlIGRpZG4gd2FsayB0aGUgMyBtaWxlcyB0byB0aGUgaGlnaHdheS4gU2luY2UgdGhlIGJsb29kIHRyYWlsIGVuZHMgYXQgdGhlIGNhciwgdGhlIHBlcnNvbiB3aG8gd2FzIHdpdGggaGVyIGRyb3ZlIGhlciBvdXQgdGhlcmUgdG8gbG9vayBmb3IgYSBwbGFjZSB0byBidXJ5IHRoZSBmZXR1cyBhbmQgcmVhbGl6ZWQgc2hlIHdhcyBkeWluZyB0b28gYW5kIGp1c3QgbGVmdCBoZXI/IEkgY291bGQgYmUgKGFuZCBwcm9iYWJseSBhbSkgY29tcGxldGVseSB3cm9uZyBidXQgdGhlIGFib3J0aW9uIHRoZW9yeSB0byBtZSwgaGFzIHRoZSBsZWFzdCBob2xlcy4KQmV0LCBoZSBjYWxscywgdGhlIGluZm9ybWF0aW9uIGhlcmUgaXMgdGhhdCBoZSBkb2VzIGhhdmUgYSBoYW5kLCBqdXN0IG5vdCBhIGdvb2Qgb25lLiAKKDQpIEkgZmVsdCBJIGhhZCBnb3R0ZW4gd2hhdCBJIHdhbnRlZCBmcm9tIGl0LCBJIGhhZCBnb3R0ZW4gdGhlIGV4cGVyaWVuY2UgSSBnb3QgaW50byBpdCBmb3IsIHdoaWNoIHdhcyB0byBrbm93IHdoYXQgaXQgZmVsdCBsaWtlIHRvIHBlcmZvcm0gbWFnaWMgZm9yIHBlb3BsZSB3aG8gbG92ZWQgaXQgYW5kIHdobyB3ZXJlIGZvb2xlZCBieSBpdC4gQ3JlYXRpbmcgYSBnZW51aW5lIG1hZ2ljYWwgbW9tZW50IGZvciBzb21lb25lIGVsc2UgaXMgYW4gaW5jcmVkaWJseSBnb29kIGZlZWxpbmcuIApJZiB5b3Ugd2FudCB0byByYWlzZSB0byAkNCBvciAkNSwgeW91IG11c3Qgc2F5IHNvIGJlZm9yZSB5b3VyIGNoaXAgaGl0cyB0aGUgZmVsdC4gCkVyIGdldHMgYSB3aWZlLiAKRG9uJ3QgbGV0IHRoaXMgbW9tZW50IGdldCBzdG9sZW4gZnJvbSB5b3UuLiAKQSB3ZWVrIGJlZm9yZSBoZXIgYXJyaXZhbCBodWJieSBhbmQgSSB3ZXJlIHN0dW1wZWQgYXMgdG8gd2hhdCB0byBuYW1lIGhlci4gCkRlc3BpdGUgZ292ZXJubWVudCBjcmFja2Rvd24sIHRoZXkgc3RpbGwgZXhpc3QuIFlvdSBnbyBpbiwgd2FzaCB5b3VyIGp1bmssIGFuZCBhIHRvcGxlc3MgZ2lybCBibG93cyB5b3UgYmFyZWJhY2sgd2hpbGUgeW91IHBsYXkgd2l0aCB0aGVpciB0aXRzLiAKTCdhbmNpZW4gYXJ0aWNsZSAzNTYgcHJjaXNlIHF1ZSAiY2VsdWkgcXVpLCBzYW5zIGZyYXVkZSBuaSB2aW9sZW5jZSwgYXVyYSBlbmxldiBvdSBkdG91cm4sIG91IHRlbnQgZCdlbmxldmVyIG91IGRlIGR0b3VybmVyLCB1biBtaW5ldXIgZGUgZGl4IGh1aXQgYW5zLCBzZXJhIHB1bmkgZCd1biBlbXByaXNvbm5lbWVudCBkZSBkZXV4ICBjaW5xIGFucyBldCBkJ3VuZSBhbWVuZGUgZGUgIjUwMCBGIiAgMTUgMDAwIEYuIApJIGdsYW5jZWQgb3V0IHRoZSB3aW5kb3cgYWdhaW4gdG8gc2VlIHRoZW0gY2xvc2luZyB1cCB0aGUgdmFuIGFuZCBmaW5pc2hpbmcgdGhlaXIgcHJlcGFyYXRpb25zIHRvIGxlYXZlLiBTbyBwcm9mZXNzaW9uYWwuIFNvIGtpbmQuIApBc2sgdGhlbSB0byBnaXZlIHlvdSBmZWVkYmFjayBhcyB0byB3aGF0IGZlZWxzIGdyZWF0LCB3aGF0IGRvZXNuJ3QsIHdoYXQgaHVydHMsIGFuZCBjb25mb3JtIHRvIHRoZWlyIHdpc2hlcy4gUmVtZW1iZXIsIHRoZSBwb2ludCBvZiBhIG1hc3NhZ2UgaXMgdG8gbWFrZSB0aGVtIGZlZWwgZ29vZCwgbm90IHlvdS4uIApUaGUgZGVhbGVyIHdpbGwgbWFrZSBzdXJlIHRoYXQgeW91IGhhdmUgdGhlIHJpZ2h0IG51bWJlciBhbmQgc3dlZXAgdGhlbSBpbnRvIHRoZSBwb3QuLiAKQXMgZmFyIGFzIHRoZSByYWtlIGdvZXMsIGl0IHdpbGwgYmUgdGhlIHNhbWUgYXQgYWxsIGNhc2lub3MgZm9yIHNvbWUgb2YgdGhlIGdhbWVzLCBidXQgd2hlbiB5b3UgZ2V0IGludG8gdGhlIDIgNSBOTCBnYW1lcyB0aGUgTUdNIGFsc28gaGFzIHRoZSBiZXN0IHJha2UuIApJIGRvbid0IGRvIHRoYXQsIGFuZCBJIGFtIG5vdCB0ZWxsaW5nIHlvdSBJIGRvIHRoYXQuIFlvdSdyZSBjbGVhcmx5IHRyeWluZyB0byBwYWludCB0aGlzIHBpY3R1cmUgb2Ygc29tZSBwcmV0ZW50aW91cyBjdW50IHdobyBiYXNlcyB0aGVpciBvcGluaW9ucyBvZiBtdXNpYyBvbiB0aGluZ3Mgb3RoZXIgdGhhbiBob3cgaXQgc291bmRzLCBhbmQgdGhhdCdzIHNpbXBseSBub3QgdGhlIGNhc2UuIFdoYXQgSSB0aGluayBpcyBoYXBwZW5pbmcgaXMgeW91IHRoaW5rIGFueW9uZSB3aG8gaGFzIGFueSBiaXQgb2YgcmVmaW5lZCB0YXN0ZSBpcyB3cm9uZywgYW5kIHlvdSB0aGluayB5b3UncmUgYmV0dGVyIHRoYW4gdGhhdCBraW5kIG9mIHBlcnNvbi4KRm9yIGdyZWF0IG9ubGluZSB0ZWFjaGluZywgdHJ5IHNpdGVzIGxpa2UgQ2FyZFJ1bm5lcnMsIEJsdWVmaXJlIFBva2VyLCBvciBQb2tlciBWVC4gClNwZW5jZXIgTWNHb3dhbiwgcHJlc2lkZW50IG9mIHRoZSBEYWxsYXMgYmFzZWQgTWNHb3dhbiBHcm91cCwgYW4gaW52ZXN0bWVudCBmaXJtLCBoYXMgb2JzZXJ2ZWQgdGhlIGNvdW50cnkgY2x1YiBpbmR1c3RyeSBhcyBhIHByb2Zlc3Npb25hbCBhbmQgYXMgYSBjbHViIG1lbWJlci4gSGUgbm90ZWQgdGhhdCB0aGVyZSBhcmUgZWxpdGUgY2x1YnMgd2l0aCBtZW1iZXJzIG9uIHRoZSBzb2NpYWwgcmVnaXN0ZXIgdGhhdCBhcmUgbm90IGZpbmFuY2lhbGx5IHN0cmVzc2VkLiBUaGVyZSBhcmUgcHJlc3RpZ2UgY2x1YnMgd2hlcmUgbWVtYmVyc2hpcHMgY29zdCB0ZW5zIG9mIHRob3VzYW5kcyBvZiBkb2xsYXJzLCBhbmQgd2hpY2ggbW9yZSBvZnRlbiB0aGFuIG5vdCBoYXZlIHRoZSBiZXN0IGNvbXBldGl0aXZlIGdvbGZlcnMsIE1jR293YW4gc2FpZC4KUmF0aGVyLCB0aGV5IHdlcmUgYSBkaXJlY3QgbWVhc3VyZSBvZiBob3cgZWFjaCBwZXJzb24gcGVyY2VpdmVkIHRoZSBjb21wZXRpdGlvbi4gTmV4dCwgd2UgcHV0IHRoaXMgbWVhc3VyZSBvZiBzdHJhdGVnaWMgc29waGlzdGljYXRpb24gdG8gdGVzdC4uIApSZW1lbWJlciBndXlzLCBEb3VnIG1hZGUgdGhpcyBwb3N0IHdoZW4gaGUgcGxheWVkIG9ubHkgMTVrIGhhbmRzLiBUaGF0IGxpa2UgMiB3ZWVrcyB3b3J0aCBvZiBoYW5kcyBhdCBhIHZlcnkgY2FzdWFsIHBhY2UgZm9yIG1vc3Qgb25saW5lIHBsYXllcnMuIEhlIHdhcyBhdCB0aGUgVkVSWSBzdGFydCBvZiBoaXMgam91cm5leS4gSXQgbm90IGxpa2UgaGUgbG9nZ2VkIGEgbWlsbGlvbiBoYW5kcyBhbmQgY2FuIGV2ZW4gZ2V0IG91dCBvZiB0aGUgbWljcm9zLgpObyB3b3JyaWVzLCBJIGJlIGEgcGVzdCBiZWZvcmUgZGlzaGluZyBvdXQgJDEwMC9tb250aCB0b28uIApJIGFsc28gZG9pbmcgYSBsb3Qgb2YgYW50aSBhZ2luZywgaW5jbHVkaW5nIGNoZW1pY2FsIGV4Zm9saWF0aW9uIGFuZCBhIGxvdCBvZiBhbnRpb3hpZGFudHMuIEFsbCBvZiBpdCB0b2dldGhlciBpcyB2ZXJ5IGlycml0YXRpbmcgZm9yIG15IHNlbnNpdGl2ZSBza2luLiAKWW91IGdvdHRlbiB0aGUgZmVlbCBmb3IgdGhlIG1ldGEgYXQgdGhlIGxvd2VyIGxldmVscywgeW91IGNhbiB0aGVuIGV4cGxvcmUgdGhlIG5ldXRyYWwgZ2FtZSBhbmQgImdhaW5pbmcgYWR2YW50YWdlLiIgVGhpcyBpbnZvbHZlcyBhIGxvdCBvZiBibG9ja3N0cmluZyAgPiBhc3Npc3QgID5taXggdXAgc2VxdWVuY2VzIGFzIHdlbGwgYXMgYWVyaWFsIGZha2Ugb3V0cyBhbmQgYWlyIHRvIGFpciBjb252ZXJzaW9ucy4gClRoZXkgbWlnaHQgaGF2ZSBoYWQgc29tZSBraW5kIG9mIGxvY2FsIHN1cnZpdmFsIGJlbmVmaXQsIG9yIHRoZXkgbWlnaHQgaGF2ZSBqdXN0IGJlZW4gYSByYW5kb20sIGRvbyBkYWggbXV0YXRpb24gdGhhdCBzdHVjay4uIApPbmUgb2YgbXkgZmF2b3VyaXRlIHRoaW5ncyB0byBkbyB3YXMgc2ltcGx5IGhlYWQgdG8gSGVtaXNwaGVyZXMgTG91bmdlLCBhdCB0aGUgYm93IG9mIHRoZSBzaGlwIG9uIHRoZSB0b3AgZGVjay4gCk1heWJlIHlvdSB0aHJvdyBhIGRvbGxhciBpbiB0aGUgcGxhdGUgdG8gcGF5IGl0IGZvcndhcmQgZm9yIHNvbWVvbmUgZWxzZSBtZWFsLiAKUXFpZTY1NDIgIDUgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvCklzIGFuIGlzc3VlIGF0IG90aGVyIHRpbWVzIGFzIHdlbGw7IGxpa2UgZHVyaW5nIHdlZWtkYXlzIG9mdGVuIGJ1cyByb3V0ZXMgZnJvbSB0aGUgc2FtZSBhcmVhIHdpbGwgcnVuIHdpdGhpbiBhIDEwIG1pbnV0ZXMgb2YgZWFjaCBvdGhlciByYXRoZXIgdGhhbiBzcHJlYWRpbmcgb3V0IHRoZSB0aW1lcyBmb3IgbW9yZSB0aW1lIGNvdmVyYWdlLiBTbyBhZ2FpbiwgaWYgeW91IG1pc3Mgb25lLCB5b3UgYmFzaWNhbGx5IG1pc3MgdGhlbSBhbGwgYW5kIGhhdmUgdG8gd2FpdCAzMCBtaW51dGVzIGZvciB0aGUgbmV4dC4KSW52ZXN0IGluIGlubm92YXRpb24gdG8gb2ZmZXIgc29tZXRoaW5nIHVuaXF1ZS4gRnVubmVsIGZ1bmRzIGludG8gUiBzbyB5b3UgaGF2ZSBuZXcgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIHRoYXQgZ2l2ZSB5b3UgbmVnb3RpYXRpbmcgZmxleGliaWxpdHkgd2l0aCBjdXN0b21lcnMgYW5kIHNhbGVzIGdyb3d0aC4gSW5ub3ZhdGlvbiBnaXZlcyB5b3UgYW4gZWRnZSB3aGVuIGN1c3RvbWVycyBhcmUgc2Vla2luZyBzb21ldGhpbmcgbmV3IHRvIGxpZnQgdXAgdGhlaXIgb3duIGZpbmFuY2lhbCBwcm9zcGVjdHMgZHVyaW5nIGFuIGVjb25vbWljIGRvd250dXJuIG9yIHdoZW4gY29taW5nIG91dCBvZiBvbmUuClRoZSBwYWRkaW5nIGFuZCBmZWx0IGFyZSB0YXBlZCwgdGFja2VkIG9yIHN0YXBsZWQgdW5kZXJuZWF0aCB0aGUgdGFibGUgdG9wLiAKWW91IGtuZXcgZGFtbiB3ZWxsIHRoYXQgaWYgc2hlIHdvdWxkbid0IHNhdmUgdXAgdGhhdCBtb25leSB0aGVyZSB3YXMgbm8gd2F5IGluIGhlbGwgc2hlIHdvdWxkIGV2ZXIgYm90aGVyIHRvIHJlcGF5IHRoZSBtb25leSBpZiB5b3UgJ2xlbnQnIGl0IHRvIGhlci4gSSBzdWdnZXN0IHlvdSByZWFkIHNvbWUgZ29vZCBib29rcyBvbiBtb25leSBtYW5hZ2VtZW50IChJIGxpa2VkIFlvdXIgTW9uZXkgb3IgWW91ciBMaWZlKSBhbmQgbmV2ZXIgbGV0IHlvdXIgbW90aGVyIGtub3cgeW91IGFyZSBub3QgYXMgcHJvZmxpZ2F0ZSB3aXRoIG1vbmV5IGFzIHNoZSBpcy4gClRoZXkgdXBwZWQgcmFrZSBpbiBzb21lIG9mIHRoZSBnYW1lcy4gCllvdSBrbm93LiB3aGljaCBjb250cmFzdHMgd2l0aCB0aGVpciBzdWJqZWN0aXZlIGJlbGllZnMgYWJvdXQgdGhlbXNlbHZlcy4KVGhleSBhcmUgb2xkIGJ1dCB0aGUgY29uY2VwdHMgYXJlIHRpbWVsZXNzLCBhbmQgSSBhcmd1ZSB0aGlzIHdhcyB0aGUgbW9zdCBzdWNjZXNzZnVsIHZpZGVvIHNlcmllcyBldmVyIGluIHRlcm1zIG9mIGVkdWNhdGluZyBwb2tlciBwbGF5ZXJzLiAKIkJ1dCB3aGVuIHlvdSBzdGFydCB0YWxraW5nIGFib3V0IEdIUlAgMiwgaXQncyBhbiB1bmFwcHJvdmVkIGRydWcuIEl0J3Mgbm90IEZEQSBhcHByb3ZlZC4gVGhlcmUncyBubyBjaGFuY2UgeW91J3JlIGRvaW5nIGFueSBvZiB0aG9zZSBraW5kcyBvZiBzdHVkaWVzIG9uIEdIUlAgMiBpbiB0aGUgVW5pdGVkIFN0YXRlcy4nJwpXaGljaCBsZWFkcyBtZSB0byBoaXMgYmlnZ2VzdCBpc3N1ZS4gSGUgaGFzIHZlcnkgbGl0dGxlIG1lbW9yeSBvZiBoZXIgYW5kIG5vIG9uZSBkaWQgYW55dGhpbmcgdG8gaGVscCBoaW0gaG9sZCBvbiB0byBoaXMgbWVtb3JpZXMgb3IgdGFsa2VkIGFib3V0IGhvdyBtdWNoIHNoZSBsb3ZlZCBoaW0gYXMgaGUgZ3JldyB1cC4gSW4gdGhlaXIgZ3JpZWYgdGhleSBzaHV0IG9mZiBoaXMgb25seSBhYmlsaXR5IHRvIGxlYXJuIG1vcmUgYWJvdXQgaGlzIG1vbSBvdXRzaWRlIG9mIGhpcyBicm90aGVyZSB3aG8gd2VyZSBvbmx5IDcgYW5kIDEwLi4gCkFzIGEgYmVnaW5uZXIsIHlvdSBtYXkgd2FudCB0byBzaG93IHlvdXIgaGFuZCBhbGwgdGhlIHRpbWUsIHNpbmNlIHlvdSBtYXkgaGF2ZSBvdmVybG9va2VkIGEgd2lubmluZyBoYW5kLiBXaGF0IHlvdSBnYWluIGZyb20gb25lIHN1Y2ggcG90IHdpbGwgZmFyIG91dHdlaWdoIGFueSBsb3NzIGR1ZSB0byByZXZlYWxpbmcgaG93IHlvdSBwbGF5ZWQgYSBwYXJ0aWN1bGFyIGxvc2luZyBoYW5kLiAiQ2FyZHMgc3BlYWsiIGF0IHRoZSBzaG93ZG93biwgbWVhbmluZyB0aGF0IHlvdSBuZWVkIG5vdCBkZWNsYXJlIHRoZSB2YWx1ZSBvZiB5b3VyIGhhbmQuIFRoZSBkZWFsZXIgd2lsbCBsb29rIGF0IHlvdXIgY2FyZHMgYW5kIGRlY2lkZSBpZiB5b3UgaGF2ZSBhIHdpbm5lci4KT25jZSB5b3UgbGVhcm5lZCB0aGUgcnVsZXMsIG15IHBvc3QgMTAgU3RlcHMgdG8gR3JlYXQgRmlyc3QgVGltZSBBbmFsIFNleCB3aWxsIGd1aWRlIHlvdSB0byB0byBhIHBsZWFzdXJhYmxlIGFuYWwgc2V4IGV4cGVyaWVuY2UuLiAKSSdtIHNvIHNvcnJ5IGZvciB5b3VyIGxvc3MuIApBbHNvIHRyaWNreSB0byBkbyAzIGFuZCA0IGluIGFuIGF1dG9tYXRlZCB3YXksIGVzcGVjaWFsbHkgaWYgeW91IGhhdmUgbWFueSB0ZWFtcyAodnVsbmVyYWJpbGl0eSBvd25lcnMsIHNvIHRvIHNwZWFrKSB3aXRoIG1hbnkgdGlja2V0cyBhc3NpZ25lZC4gCkFzIHRvIHRoZSBtb25vcG9seSAuIFdlIGFyZSBnZXR0aW5nIHRoZSBpc3N1ZSBwYXNzZWQgYW5kIGFyZSBhc2tpbmcgdGhlIGxpY2Vuc2VzIGJlIGlzc3VlZCB0byB1cyBzbyB0aGF0IHdlIGNhbiByZWNvbW1lbmQgdG8gd2hvZXZlciB0aGUgdWx0aW1hdGUgcmVndWxhdG9yeSBib2R5IGlzIG1ha2UgdGhlIGJlc3QgZGVjaXNpb25zLiBZb3UndmUgaGFkIHR3byB0cmFja3MgaW4gdGhlIHN0YXRlIGZvciAxMDAgeWVhcnMgd2l0aCB0aGUgdWx0aW1hdGUgbW9ub3BvbHkuIFdlIHdvdWxkIGxpa2UgdG8gYnJlYWsgVEhBVCBtb25vcG9seS4KVGhlIHN0aWNrIHNpdGUgaXMgcGFscGFibHkgZGlmZmVyZW50IGZyb20gdGhlIHJlc3Qgb2YgbXkgZmluZ2VyLCBidXQgSSBkb24ndCBrbm93IGlmIHRoYXQncyBqdXN0IGR1ZSB0byBoZWFsaW5nPy4gCiJJIGRvbid0IGtub3cgd2hhdCBwb3NzZXNzZWQgbWUsIiBzaGUgcmVjYWxsZWQgcmVjZW50bHkuIApOZXcgRWRpdGlvbiBvZiAiTWluZGZ1bG5lc3MgaW4gUGxhaW4gRW5nbGlzaCIgd2hpY2ggY2FuIGJlIGFwcGxpZWQgdG8gYm90aCAuIApDb3VwbGUgdGhpcyB3aXRoIHRoZSBmYWN0IHRoYXQgTmludGVuZG8gaW4gcHJldmlvdXMgeWVhcnMgKGFzIFNreSBtZW50aW9uZWQgaW4gdGhlIHRocmVhZCkgd2FzIGFjdGl2ZWx5IGFnYWluc3QgYnJvYWRjYXN0aW5nIGNvbXBldGl0aXZlIE1lbGVlIGFuZCBkaWQgYWxsIGl0IGNvdWxkIHRvIHByZXZlbnQgaXQgZnJvbSBoYXBwZW5pbmcsIGFuZCByZWNvbnNpZGVyLllvdSBjYW5ub3QgcG9zc2libHkgdGVsbCBtZSBVbHRpbWF0ZSB3b3VsZCBleGlzdCB0aGUgd2F5IGl0IGRvZXMgdG9kYXkuIEl0IGlzIHNvbGVseSBiZWNhdXNlIHRoZSBNZWxlZSBjb21wZXRpdGl2ZSBzY2VuZSBuZXZlciBxdWl0IHRoYXQgU2FrdXJhaSBhbmQgTmludGVuZG8gbm93IGFja25vd2xlZGdlIChhbmQgYXBwcmVjaWF0ZSwgSSBob3BlKSB0aGUgY29tcGV0aXRpdmUgc2NlbmUgZm9yIHRoZWlyIGZyYW5jaGlzZSwgYW5kIGl0IGlzIHByZWNpc2VseSB3aHkgVWx0aW1hdGUgZXhpc3RzIGluIHRoZSBzdGF0ZSBpdCBkb2VzIHRvZGF5LiBJIGFtIGZhaXJseSBjb25maWRlbnQgdGhhdCBpZiB0aGUgTWVsZWUgc2NlbmUgdXAgYW5kIGRpZWQgd2hlbiBOaW50ZW5kbyBzYWlkICJubyIsIFNtYXNoIEJyb3MuIApBaCBoZWNrLCBpdCBhbHNvIGEgbGVzc29uIGF0IE9iYW1hIFdoaXRlaG91c2Ugd2hlcmUgbm90IGEgc2luZ2xlIHRoaW5nIGhhcyBiZWVuIGRvbmUgdG8gc3RvcCBkaXNjcmltaW5hdGlvbiBhZ2FpbnN0IGdheXMgYW5kIGxlc2JpYW5zIGluIHRoZSBtaWxpdGFyeSBvciB0byBzdXBwb3J0IHNhbWUgc2V4IG1hcnJpYWdlIGxlZ2lzbGF0aW9uLi4gCjAgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnby4gCkVzcGVjaWFsbHkgd2l0aCBhIGNyaW1lIHNjZW5lIHRoYXQgd2FzIGNvbXByb21pc2VkIGFzIGJhZGx5IGFzIHRoaXMgb25lIHdhcy4gCkNoZWNrIG91dCBUZWEgS2V0dGxlIFdoaXN0bGUgKFRlYXBvdCBXaGlzdGxpbmcgVGVhIFBvdCBIb3QgV2F0ZXIgQm9pbCBCb2lsaW5nIE5vaXNlIENsaXApIFtTb3VuZCBFZmZlY3RdIGJ5IEZpbm5vbGlhIFNvdW5kIEVmZmVjdHMgb24gQW1hem9uIE11c2ljLiAKVGhlIHJlY2VwdGlvbiBhcmVhIGlzIGEgbGFyZ2UsIGRpbWx5IGxpdCByb29tIHdpdGggZ2lybHMgc2l0dGluZyBpbiBhIG5lYXJseSBjb21wbGV0ZSBjaXJjbGUsIGFuZCBhIGJyaWdodGx5IGxpdCBmaXNoYm93bC4gSW4gdGhlIG1pZGRsZSBvZiB0aGUgcm9vbSBpcyBhIGN1c3RvbWVyIHNlYXRpbmcgYXJlYSwgc2hvdWxkIHlvdSB3aXNoIHRvIHRha2UgeW91ciB0aW1lIGFuZCB0YWtlIGEgZHJpbmsgZmlyc3QuIFRoZXJlIGFyZSB0d28gcGFwYXNhbnMgd2hvIHdpbGwgdGFrZSB5b3UgYXJvdW5kIGFuZCBsaXN0IHRoZSBwcmljZXMgKHRoZXkgdmFyeSkgYW5kIGRldGFpbCBhbnkgcGFydGljdWxhciByZWNvbW1lbmRhdGlvbnMgKGZvciBleGFtcGxlLCB3aG8gaXMgYSBza2lsbGVkIG1hc3NldXNlLCB3aG8gY2FuIHNwZWFrIGdvb2QgRW5nbGlzaCwgZXRjKS4KQWxzbywgYXMgbXVjaCBhcyB3ZSBtYWtlIGZ1biBvZiB0aGUgd2hvbGUgIndhaXQgZm9yIEdva3UiIHRoaW5nLCBpdCBhY3R1YWxseSBhIG11Y2ggYmlnZ2VyIGlzc3VlIGluIERyYWdvbiBCYWxsIHRoYW4gaW4gRHJhZ29uIEJhbGwgWi4gTm90IG9ubHkgZG9lcyBHb2t1IHJlZ3VsYXJseSBsZWF2ZSBiZWhpbmQgaGlzIGZyaWVuZHMgaW4gRHJhZ29uIEJhbGwsIGJ1dCB0aGUgb25seSBvdGhlciBwZXJzb24gd2hvIHJlYWxseSBnZXRzIGFueSBub3Rld29ydGh5IHdpbiBpcyB3aGVuIFRpZW4gYmVhdHMgVGFvICh3aG8gR29rdSBoYWQgYWxyZWFkeSBkZWZlYXRlZC4pIEluIERyYWdvbiBCYWxsIFosIHRoZSBvdGhlciBjaGFyYWN0ZXJzIGdldCBtYWpvciBmaWdodHMgYW5kIG1ham9yIHdpbnMsIG9yIGF0IHRoZSB2ZXJ5IGxlYXN0IHRoZXkgbW9zdGx5IHRlYW0gZWZmb3J0cy4gCkV4cGVjdCB0byBzcGVuZCAkMSwwMDAgdG8gJDUsMDAwIGluIHN1cHBsaWVzLCBmdXJuaXR1cmUgYW5kIGVxdWlwbWVudC4gCkkgd2FzIGEgeW91bmcsIGZvb2xpc2ggZ2lybCBzZXR0aW5nIHVwIHNob3AgaW4gdGhlIFVLIGFuZCBoZSB3YXMgYSB2ZXJ5IGRhc2hpbmcgeW91bmcgbWFuIHdpdGggYSBzbWlyayBhbmQgYSB2ZXJ5IHN0dXBpZCBnb2F0ZWUgdGhhdCBJIGxvdmVkLiBIZSBicm9rZSBlYWNoIGFuZCBldmVyeSBydWxlIGZvciBtZSBkdXJpbmcgb3VyIGNvdXJ0c2hpcC4gVGhlcmUgd2VyZSBjaGFpbnMgc2hhY2tsaW5nIGhpbSB0byBoaXMgbW90aGVyIHRoZW4gYXMgd2VsbCwgYnV0IGhlIHdhcyBzbyB2ZXJ5IGRpZmZlcmVudC4gCk92ZXJ2aWV3IGZvciBjZWRhcmdyb3ZlCldlIHN0aWxsIGRvbiBrbm93IGVub3VnaCBhYm91dCB0aGUgYXNzYXNzaW5hdGlvbiBwbG90LCBidXQgaXQgaXMgaGlnaGx5IHVubGlrZWx5IHRoZSBUYWxpYmFuIGxlYWRlcnNoaXAgaW4gUXVldHRhIHdvdWxkIGhhdmUgYmxvd24gdXAgdGhlIHJlY29uY2lsaWF0aW9uIHByb2Nlc3Mgd2l0aG91dCBhIGdyZWVuIGxpZ2h0IG9yIGF0IGxlYXN0IGFuIGFtYmVyIG9uZSBmcm9tIHRoZSBJU0kgbGVhZGVyc2hpcC4KTm90IGV2ZXJ5b25lIGNob29zZXMgdG8gaGF2ZSBzZXggYW5kIHRoZXkgZW5kIHVwIHByZWduYW50OyB3aGF0IGFib3V0IGluY2VzdCBhbmQgcmFwZSBzaXR1YXRpb25zPyBXaGF0IGFib3V0IGEgdmVyeSB5b3VuZyBnaXJsIHdob3NlIGxpZmUgd291bGQgYmUgYXQgcmlzaz8gT3IgYW55IHByZWduYW50IHdvbWFuIHdob3NlIGxpZmUgd291bGQgYmUgYXQgcmlzayBpZiBzaGUgY2FycmllZCB0aGUgYmFieSB0byB0ZXJtPyBKdXN0IGJlY2F1c2UgcGVvcGxlIGFidXNlIHRoZSBzeXN0ZW0gKHdoYXQgc3lzdGVtIGlzIHVzZWQgcGVyZmVjdGx5PykgZG9lcyB0aGF0IG1lYW4gdGhhdCB0aGVyZSBpcyBubyBncmF5IGFyZWFzPyBBbHNvLCBhY2NpZGVudHMgaGFwcGVuIHdpdGggcmVnYXJkcyB0byBzZXguIApUaGVuIGRvd24gaW50byB0aGUgZXNvcGhhZ3VzLCByZXByZXNzIHRoZSBwZXJpc3RhbHNpcyByZWZsZXgsIFttdXNjdWxhciBjb250cmFjdGlvbnNdIHRoYXQgc3dhbGxvdyB5b3VyIGZvb2QuIApJdCBwcm9iYWJseSBhIHJlYXNvbmFibGUgY2hhbGxlbmdlLiBUaGVyZSBsaXR0bGUgZG91YnQgdGhhdCB0aGUgRE9NQSBoYXMgYWx3YXlzIGJlZW4gb24gc2hha3kgZ3JvdW5kIGluIHRoZSB3aG9sZSBiYWxhbmNlIG9mIHBvd2VyL3N0YXRlcyByaWdodHMgdGhpbmcuClJlcHJlc2VudGF0aXZlIEFsYW4gR3JheXNvbiAoRCAgRkwpIGp1c3QgaW50cm9kdWNlZCAiVGhlIFdhciBpcyBNYWtpbmcgWW91IFBvb3IgQWN0IiAoSFI1MzUzKSBiaWxsIHRoYXQgaXMgYWxyZWFkeSBkaXNtaXNzZWQgYnkgdGhlIHJpZ2h0IGFzIGNyYXp5IGFuZCBieSB0aGUgbGliZXJhbCBtZWRpYSBhcyAiZ29vZCBmb3Igb3BlbmluZyBkaWFsb2d1ZSIgYnV0ICJpbXByYWN0aWNhbC4iIHRvbyBiYWQgc2luY2UgIlRoZSBXYXIgaXMgTWFraW5nIFlvdSBQb29yIEFjdCIgaXMgbm90IGp1c3QgcHJvcGFnYW5kYSwgYnV0IGEgYnJpbGxpYW50IHBpZWNlIG9mIGxlZ2lzbGF0aW9uLgpXZSBhbGwgYXRlIGFuZCB0aGUgZ3V5cyBlbmRlZCB1cCBpbiB0aGUgZ2FyYWdlIGFuZCBkcml2ZSB3aXRoIGJlZXJzIHRhbGtpbmcgZ3V5cyBzdHVmZiB0aGVuIGhlIGNhbWUgaW4gZGlkIHRoZSBzaG93ZXIgcGFydC4uIApUaGV5IGRvbid0IGhhdmUgdG8gZm9sbG93IHJ1bGVzIG9yIGhhdmUgZGVjZW5jeSwgdGhleSd2ZSBnb3QgdGhlIGxlZ2FsIGNsb3V0IGFuZCBiYW5rcm9sbCB0byBtYWtlIHRoZSBzeXN0ZW0gcmVzcG9uZCBpbiB0aGUgd2F5IHRoZXkgd2FudCBpdCB0by4gCklkZWFsbHkgSSBsaWtlIHRvIGJlIHdpdGhpbiAzMG1pbiBvZiBWYW5kZXJiaWx0IGNhbXB1cyBhbmQga2VlcCBteSByZW50IGZvciBhIDJiciBhcm91bmQgJDEyMDAuIEkgZG9uIHJlYWxseSBjYXJlIGFib3V0IHRoaW5ncyBsaWtlIGhpcCBuZWlnaGJvcmhvb2RzLCBiYXJzLCBldGMuIEkgZG9uIG1pbmQgbGl2aW5nIGluIHRoZSBzdGlja3MgZWl0aGVyLiAKVGlwIERvIGEgYmFja2dyb3VuZCBjaGVjayBiZWZvcmUgcmVudGluZyBhIHNlY3Rpb24gb2YgeW91ciBob21lIHRvIGEgc3RyYW5nZXIgb3IgZXZlbiBhbiBhY3F1YWludGFuY2UuIFNoZSB3cml0ZXMgYWJvdXQgZWR1Y2F0aW9uLCBjYXJlZXJzLCBjdWx0dXJlLCBwYXJlbnRpbmcsIGdhcmRlbmluZyBhbmQgc29jaWFsIGp1c3RpY2UgaXNzdWVzLiBDbGFyayBncmFkdWF0ZWQgZnJvbSBCdWVuYSBWaXN0YSBVbml2ZXJzaXR5IHdpdGggYSBkZWdyZWUgaW4gZWR1Y2F0aW9uLiAKVGhlIE11aGxlbmJlcmcgQ29sbGVnZSBQaWFubyBSZWNpdGFsIFNlcmllcyBlbmRlZCBpdHMgc2Vhc29uIEZyaWRheSBldmVuaW5nIHdpdGggYW4gZXh0cmFvcmRpbmFyeSBjb25jZXJ0IGJ5IHRoZSBibGluZCBKYXBhbmVzZSBwaWFuaXN0IE5vYnV5dWtpIFRzdWppaSwgd2hvc2UgdmlydHVhbGx5IG5vdGUgcGVyZmVjdCBwZXJmb3JtYW5jZSBvZiB0aHJlZSBjaGFsbGVuZ2luZyB3b3JrcyBlbnJhcHR1cmVkIGEgc29sZCBvdXQgRW1waWUgVGhlYXRyZSBhdWRpZW5jZS4KSSBhbHdheXMgc3VnZ2VzdCB5b3UgcGxhbnQgd2hhdCB5b3UgbGlrZSB0byBlYXQsIGhlIHNheXMuIApJdCBkZWZpbml0ZWx5IHdvcnRoIGtlZXBpbmcgeW91ciBsYXd5ZXIgaG91cmx5IHJhdGUgaW4gbWluZCwgYnV0IHRoaXMgZGVmaW5pdGVseSBpcyBub3QgYSBvbmUgc2l6ZSBmaXRzIGFsbCBzb2x1dGlvbi4gSW4gZmFjdCwgaWYgeW91IGFuZCB5b3VyIGV4IGNhbiBkaXNjdXNzIGFuZCBhZ3JlZSBvbiB0aGUgbWFqb3IgcG9pbnRzIG9mIHlvdXIgZGl2b3JjZSwgeW91IHByb2JhYmx5IGRvbiBuZWVkIGFuIGF0dG9ybmV5LgpCZWNhdXNlIHRoZSBzdGFydCBvZiB5b3VyIGNvbW11dGUgaXMgYSBwbGFjZSBvZiB5b3VyIGNob29zaW5nLiBUaGlzIHNvdW5kcyBsaWtlIHlvdSBhcmUgYWR2b2NhdGluZyBmb3IgcGF5aW5nIGVtcGxveWVlcyBkaWZmZXJlbnRseSBmb3IgYSBmYWN0b3IgdGhhdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIHRoZWlyIGpvYiBleHBlcmllbmNlIG9yIHBlcmZvcm1hbmNlLCB3aGljaCBpcyBpbmhlcmVudGx5IGRpc2NyaW1pbmF0b3J5LiBXb3VsZG4geW91IGJlIHBpc3NlZCBvZiBhbiBlcXVhbGx5IHF1YWxpZmllZCBlbXBsb3llZSBnb3QgcGFpZCBhbiBleHRyYSAkMjAwIHBlciBtb250aCBmb3IgZG9pbmcgdGhlIHNhbWUgZXhhY3Qgam9iIGFzIHlvdSBhbmQgd29ya2luZyB0aGUgc2FtZSBob3VycyBqdXN0IGJlY2F1c2UgdGhleSBib3VnaHQgYSBob3VzZSBvdXQgYnkgdGhlIGJlYWNoIGluc3RlYWQgb2YgY2xvc2VyIHRvIHRoZSBjaXR5Py4gCkkgbWF5IHNoYXJlIHRoYXQgb25lIGRheSBJIGdldCBicmF2ZSBlbm91Z2guIApXZSBjYW4gYmFyZWx5IHRha2UgY2FyZSBvZiBvdXIgaHVtYW4gY2hpbGRyZW4uIFRoZSBFYXJ0aCBpcyBmYWxsaW5nIGFwYXJ0LgpQbGF5IEJlZm9yZSB0aGUgRmxvcApJIGFtIGFsbCBmb3IgZ2VudGxlbWFucyBhZ3JlZW1lbnQgd2l0aCBhIGZldyBjaGVja3MuIE1hcHMgZXRjLiAKQnV0IEkgdHJ5IHRvIGtlZXAgbXlzZWxmIGZyb20gdGhpbmtpbmcgc2hpdCBsaWtlICJ3ZWxsIHRoaXMgaXMgdGhlIHdvcnN0IGZ1bGwgaG91c2UgSSBjYW4gaGF2ZSBzbyBJIGhhdmUgdG8gY2hlY2siLCBlc3BlY2lhbGx5IGNvbnNpZGVyaW5nIHRoZSBzdGFjayBzaXplLiAKQnkgdGhlIDV0aCBkYXkgSSBidWlsdCBhIHRvbGVyYW5jZSB0byB3aGVyZSBpdCB3YXMgbGlrZSBJIGRpZG4ndCBldmVuIHRha2UgaXQuIApJZiB5b3UgY2FuIGZpZ3VyZSBvdXQgdGhhdCBtb3N0IGNvbnZlcnNhdGlvbnMgZ28gZG93biB0aGVzZSBmYWlybHkgcHJlZGljdGFibGUgcGF0aHMsIHlvdSBjYW4gZmlndXJlIG91dCBhbG1vc3QgYm9pbGVyIHBsYXRlLCBwcmVkZXRlcm1pbmVkIHJlc3BvbnNlcy4gTm8gb25lIHdpbGwgbm90aWNlIGlmIHlvdSBzYXkgdGhlIHNhbWUgdGhpbmdzIGluIGVhY2ggb2YgdGhlc2Ugc2l0dWF0aW9ucyBvciBtYWtlIHRoZSBzYW1lIGpva2VzLiAKVGhleSB1cHBlZCByYWtlIGluIHNvbWUgb2YgdGhlIGdhbWVzLiBJdCB0b29rIHRoZW0gYSBtb250aCBiZWZvcmUgdGhlIHBob25lIHdvcmtlZCBzbyB5b3UgY291bGQgY2FsbCBpbi4gClRoZSBXYXJwIGRvZXNuIGNhcmUgYWJvdXQgInNjaWVuY2UiLiAKSXQgc2hvdWxkIGJlIGNsZWFyIHRvIGV2ZXJ5b25lIG5vdyB0aGF0IGN1dHRpbmcgYmFjayBvbiBncmVlbmhvdXNlIGdhc2VzIGlzIG5vdCBnb2luZyB0byB3b3JrLCB0byBsaXR0bGUgdG8gbGF0ZS4gVGhlIGh1bWFuIHJhY2UgaXMgZ29pbmcgdG8gbmVlZCBiaWcgcHJvamVjdHMgdG8gc2VxdWVzdGVyIGNhcmJvbiwgd2UgbmVlZCB0byB0YWtlIGNhcmJvbiBvdXQgb2YgdGhlIGF0bW9zcGhlcmUgYW5kIHB1dCBpdCBiYWNrIGluIHRoZSBncm91bmQsIGF0IHRoaXMgcG9pbnQgdGhhdCBpcyB0aGUgb25seSBob3BlIGZvciB0aGUgaHVtYW4gcmFjZS4gV2UgbmVlZCBtb25leSB0byBkbyB0aGF0LCBsb3RzIG9mIG1vbmV5LgpJIGRvbiBsaWtlIEJlbiBTdGVpbiAoc2VlIG15IHBvc3QgYWJvdXQgaGlzIGxlY3R1cmluZyBhdmVyYWdlIEFtZXJpY2FucyBmb3IgdGhlIGVjb25vbWljIGNyaXNpczogIkFyZSBBdmVyYWdlIEFtZXJpY2FucyBSZWFsbHkgdG8gQmxhbWUgZm9yIEVjb25vbWljIE1lbHRkb3duPyIpLiBCdXQgSSBkbyBsaWtlIFVWTSwgd2hpY2ggaXMgYSB1bml2ZXJzaXR5IEkgdXNlZCB0byB0ZWFjaCBhdCBhbmQganVzdCBoYXBwZW5zIHRvIGJlIGluIHRoZSBjaXR5IHdoZXJlIEkgbGl2ZSBhbmQgc28gaXQgc2VlbXMgd29ydGh3aGlsZSBkb2luZyBzb21lIGV4cGxhaW5pbmcgbm93IHRvIGF2b2lkIHRoZSBjaG9ydXMgb2YgInBvbGl0aWNhbCBjb3JyZWN0bmVzcyBydW4gYW1vayIgbGF0ZXIuCldhcyBzZWVpbmcgYSBtYXNzYWdlIHRoZXJhcGlzdCBhIGNvdXBsZSBvZiB0aW1lcyBhIG1vbnRoIGFuZCBpdCBiZWNhbWUgdmVyeSBleHBlbnNpdmUuIApNeSBleCB3YXMgbGlrZSAiZG9udCB0cmlwIGdpcmwgSSBraWxsZWQgYSBmZXcgbXlzZWxmIiBteSBidWRkeSBpbW1lZGlhdGVseSBhc2tlZCB1cyB0byBnbyBhbmQgd2UgbGVmdC4gClRocmVlIG9mIGEgS2luZCAuClRvIGtub3cgdGhhdCBmcmllbmRzIGNhcmUgYWJvdXQgb3VyIGtpZHMgbWFrZXMgc2hhcmluZyB0aGVzZSB0aW1lcyBhbGwgdGhlIG1vcmUgc3BlY2lhbC4uIApHYWdhIHZvd2VkIHRoYXQgaWYgc2hlIHdpbnMgdGhlIGxlZ2FsIGJhdHRsZSB3aXRoIE8gc2hlIHdpbGwgZG9uYXRlIHRoZSBtb25leSBoZXIgZm9ybWVyIGFzc2lzdGFudCBkZW1hbmRlZCB0byBoZXIgb3RoZXIgZW1wbG95ZWVzIGJlY2F1c2UgIkkgbm90IGdvaW5nIHRvIGdpdmUgaXQgdG8gaGVyIHNvIHNoZSBjYW4gZ28gdG8gSW50ZXJtaXggKHN0b3JlKSBhbmQgYnV5IGhlcnNlbGYgYSBuZXcgdHViZSB0b3AuIgpEZXNwaXRlIGJlaW5nIHRoZSBjcm93ZCBmYXZvcml0ZSBpbiBoaXMgbmF0aXZlIEJyb29rbHluLCBNYWxpZ25hZ2dpIHdhcyB1bmFibGUgdG8gbGFuZCBtdWx0aXBsZSBwdW5jaGVzIG9uIEdhcmNpYSBhbmQgcHV0IGhpbSBpbiByZWFsIGRhbmdlci4gSW4gdGhlIG5pbnRoIHJvdW5kIEdhcmNpYSBjcmlzcCBibG93cyBmaW5hbGx5IHByb3ZlZCB0byBiZSB0b28gbXVjaCBmb3IgTWFsaWduYWdnaSBhcyB0aGUgcmVmIHN0b3BwZWQgdGhlIGZpZ2h0IGF0IDI6MjIgaW50byB0aGUgcm91bmQuCkNsZXZlbGFuZCB0b29rIGEgaGFuZHMgb24gYXBwcm9hY2ggdG8gaGlzIHRpbWUgYXMgc2hlcmlmZiwgc28gbXVjaCBzbyB0aGF0LCBpbnN0ZWFkIG9mIGhpcmluZyBhIGNvbnRyYWN0IGV4ZWN1dGlvbmVyLCB3aGljaCB3YXMgYXBwYXJlbnRseSBhIGpvYiB0aGF0IHBlb3BsZSBwdXQgdG9nZXRoZXIgYSByZXN1bWUgYW5kIGFwcGxpZWQgZm9yLCBDbGV2ZWxhbmQgcGVyc29uYWxseSBjYXJyaWVkIG91dCB0aGUgaGFuZ2luZ3Mgb2YgdHdvIGNyaW1pbmFscy4gSGUgYmVsaWV2ZWQgaXQgd2FzIGhpcyAiIiB0byBwZXJmb3JtIHRoZSBleGVjdXRpb25zLCByYXRoZXIgdGhhbiBmb3JjaW5nIHNvbWVvbmUgZWxzZSB0byBkbyBpdCBmb3IgaGltLiBJdCBhbHNvIGRpZG4ndCBodXJ0IHRoYXQgc3RyYW5nbGUgYnJlYWtpbmcgcGVvcGxlJ3MgbmVja3MgaGltc2VsZiB3b3VuZCB1cCBzYXZpbmcgaGlzIGRpc3RyaWN0IGEgbGl0dGxlIGJpdCBvZiBtb25leS4uIApJIHdhcyBzb3J0IG9mIGluIHRoZSBzYW1lIGJvYXQuIEkga2lsbGVkIG15IGhhaXIgMiB5ZWFycyBhZ28gd2l0aCBibGVhY2gsIGFuZCBJIGFsc28gYmVsaWV2ZSBteSBzZXZlcmUgYW54aWV0eSBhbmQgZGVwcmVzc2lvbi9iYWQgbnV0cml0aW9uIGFuZCBsaWZlc3R5bGUgY2F1c2VkIHNvbWUgdGhpbm5pbmcsIGxhY2sgb2YgbHVzdGVyLCBhbmQgYnJlYWthZ2UuCkkgc3RpbGwgaGF2ZSB0aGUgYXJ0IHRoZXkgZHJldyBhbmQgZ2lmdHMgdGhleSBnYXZlIG1lLiAKSWYgeW91IGFyZSBwbGF5aW5nIGEgdmlkZW8gc2xvdCB3aXRoIDEwMCBwYXlsaW5lcyBhdCAkMSBwZXIgbGluZSwgeW91ciBtaW5pbXVtIGJldCBpcyAkMTAwIHBlciBwbGF5LiAKVXNlciBBZ3JlZW1lbnQKQWxvbmdzaWRlIHRoZSBvdGhlciB0d28gY29tcG9uZW50cyBvZiB0aGUgYXV0b25vbWljIG5lcnZvdXMgc3lzdGVtLCB0aGUgc3ltcGF0aGV0aWMgbmVydm91cyBzeXN0ZW0gYWlkcyBpbiB0aGUgY29udHJvbCBvZiBtb3N0IG9mIHRoZSBib2R5J3MgaW50ZXJuYWwgb3JnYW5zLiBTdHJlc3MgYXMgaW4gdGhlIGZsaWdodCBvciBmaWdodCByZXNwb25zZSBpcyB0aG91Z2h0IHRvIGNvdW50ZXJhY3QgdGhlIHBhcmFzeW1wYXRoZXRpYyBzeXN0ZW0sIHdoaWNoIGdlbmVyYWxseSB3b3JrcyB0byBwcm9tb3RlIG1haW50ZW5hbmNlIG9mIHRoZSBib2R5IGF0IHJlc3QuIApZb3UgdGhlbiBoaXQgdGhlICJEcmF3IiBidXR0b24gd2l0aCB5b3VyIG1vdXNlIGNsaWNrZXIgYW5kIGZpdmUgY2FyZHMgYXBwZWFyIGJlZm9yZSB5b3UuIE5vdywgaWYgeW91IGRvbid0IGtub3cgaG93IHRvIHBsYXkgZml2ZSBjYXJkIGRyYXcgcG9rZXIsIGl0J3MgcmVhbGx5IHNpbXBsZTogeW91IG5vdyBjaG9vc2UgYW55IG51bWJlciBvZiB0aG9zZSBmaXZlIGNhcmRzIHRvIGRpc2NhcmQuIFlvdSBjYW4ga2VlcCBhbnkgY2FyKHMpIHlvdSB3YW50IHRvOyB0aGUgb3RoZXJzIHRoYXQgeW91IGNob29zZSB0byBkaXNjYXJkIHdpbGwgYmUgcmVwbGFjZWQgd2l0aCBuZXcgb25lcyBvbmUgdGltZSBvbmx5LiBBZnRlciB5b3UgaGF2ZSByZWNlaXZlZCB5b3VyIHNlY29uZCBkZWFsIG9mIHJlcGxhY2VtZW50IGNhcmRzLCB0aGV5IGFuZCB0aGUgY2FyZHMgeW91IGtlcHQgbWFrZSB1cCB5b3VyIGZpbmFsIGhhbmQuCkEgcGFzc2lvbiBtYXJrIGlzIGFjdHVhbGx5IGEgZXVwaGVtaXNtIGZvciB0aGUgc2tpbiBkaXNjb2xvcmF0aW9uIGNhdXNlZCBieSBleHRyZW1lIHN1Y2tpbmcgb24gdGhlIHNraW4sIHVzdWFsbHkgaW4gdGhlIG5lY2sgYW5kIGNoZXN0IGFyZWFzLiBUaGUgbW9yZSBwb3B1bGFyIHRlcm0sIGhvd2V2ZXIsIGlzIG5vdCBwYXNzaW9uIG1hcmsgYnV0IGtpc3MgbWFyayBhbHNvIGluZm9ybWFsbHkgY2FsbGVkIGEgaGlja3kgKGFsdGVybmF0ZWx5IHNwZWxsZWQgaGlja2V5KS4gT2Z0ZW4sIGF0IHRoZSBoZWlnaHQgb2YgZXh0cmVtZSBsdXN0IG9yIHNleHVhbCBwYXNzaW9uLCB0d28gcGVvcGxlIGNhbiBhY2NpZGVudGFsbHkgY2F1c2Uga2lzcyBtYXJrcyBvbiBlYWNoIG90aGVyJ3Mgc2tpbi4KVGhlIHZpY3RpbSBpcyBhbm90aGVyIHR5cGUgb2YgZW5lcmd5IHZhbXBpcmUuICJUaGV5IGFyZSB3b2UgaXMgbWUgYWxsIG9mIHRoZSB0aW1lLCIgc2hlIHNheXMgYW5kIGhhdmUgbG90cyBvZiBwcm9ibGVtcy4gV2hpbGUgeW91IG1pZ2h0IHRoaW5rIGJyYWluc3Rvcm1pbmcgb3IgcHJvYmxlbSBzb2x2aW5nIG1pZ2h0IGhlbHAsICJJdCdzIGEgd2FzdGUgb2YgZW5lcmd5IiBCZWxsZXcgc2F5cy4gCkRhbmEgVGFrZSBPbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgaW52ZXN0bWVudCBpc3N1ZSBpcyB0aGUgZGF5IHRyYWRlci4gQSBsb3Qgb2YgcGVvcGxlIGxpa2UgdG8gdHJhZGUgc3RvY2tzIG9ubGluZSB3aXRoIHNob3J0IHRlcm0gZ29hbHMgaW4gbWluZC4gVGhlcmUgbm90aGluZyB3cm9uZyB3aXRoIHRoYXQsIGFzIGxvbmcgYXMgeW91IGNhbiBhZmZvcmQgdG8gbG9zZSB0aGUgbW9uZXksIGJlY2F1c2UgZGF5IHRyYWRpbmcgYnkgbm9uIHByb2Zlc3Npb25hbHMgaXMgYSB3aG9sZSBsb3QgbGlrZSBnYW1ibGluZy4uIApUdXJucyBvdXQgSSB3YXMgbm90IGZhY3RvcmluZyBpbiBTUyB0YXggYW5kIE1lZGljYXJlIGZvciB0aGVzZSBib251c2VzLgpHT1AgbGF3bWFrZXJzIGFyZSBkZWVwbHkgY29uY2VybmVkIG92ZXIgUHJlc2lkZW50IFRydW1wJ3MgcmVsdWN0YW5jZSB0byBsaXN0ZW4gdG8gaGlzIHNlbmlvciBtaWxpdGFyeSBhbmQgaW50ZWxsaWdlbmNlIGFkdmlzZXJzLCBmZWFyaW5nIGl0IGNvdWxkIGVyb2RlIG5hdGlvbmFsIHNlY3VyaXR5LiBUaGV5IHNheSB0aGUgU2VuYXRlIGhhcyBsb3N0IHRvbyBtdWNoIG9mIGl0cyBjb25zdGl0dXRpb25hbCBwb3dlciBvdmVyIHNoYXBpbmcgdGhlIG5hdGlvbidzIGZvcmVpZ24gcG9saWN5IGFuZCBhcmd1ZSB0aGF0IGl0J3MgdGltZSB0byBiZWdpbiBjbGF3aW5nIHNvbWUgb2YgaXQgYmFjay4uIApJbiB0aGUgMTl0aCBjZW50dXJ5LCBzb21lIHBlb3BsZSBiZWxpZXZlZCBzY2FscCBtYXNzYWdlIGNvdWxkIHByZXZlbnQgYW5kIHRyZWF0IGJhbGRuZXNzLiBJbiB0aGUgZWFybHkgMjB0aCBjZW50dXJ5LCBtYW55IHNhbG9ucyBkZXZlbG9wZWQgbWFjaGluZXMgd2l0aCBydWJiZXIgZmluZ2VycyB0byBkZWxpdmVyIG1hc3NhZ2VzLiAKMjUlIG9mZiBmb2xrcyBoYWQgdG8gZHJvcCBvdXQgZHVlIHRvIGZvb3QgcHJvYmxlbXMgZnJvbSB0aGUgc3dpdGNoIG9mIGZ1bGx5IHNvYWtlZCBmZWV0IHRvIHBlcnNpc3RlbnQgaGVhdC5JIHdvdWxkIGhpZ2hseSByZWNvbW1lbmQgc29tZSBMZXVrbyB0YXBlLCBtdWx0aXBsZSBwYWlycyBvZiBzb2NrcywgYW5kIHJhaW4gcGFudHMuIApGaXJzdCBKYXBhbiwgdGhlbiBLb3JlYSwgVGFpd2FuLCBIb25nIEtvbmcgYW5kIFNpbmdhcG9yZSBibG9zc29tZWQuIEZpbmFsbHksIE1yIEhlbnJ5IEtpc3NpbmdlciBhbmQgUmljaGFyZCBOaXhvbiB3ZW50IHRvIENoaW5hIGFuZCBvcGVuZWQgdGhlIGRvb3IuIApEb2Vzbid0IGp1c3QgYXBwbHkgdG8gZHVkZXMgb3ZlciA2ZnQgYW5kIHZhcmllcyBwcmV0dHkgd2lkZWx5IGRlcGVuZGluZyBvbiB3aGF0IHlvdSBtZWFuIGJ5ICJzdGVyb2lkcywiIGFzIHRoZXJlJ3MgYSB3aWRlIHZhcmlldHkgb2YgY29tcG91bmRzIHVzZWQuClRha2UgYSBsb29rIGF0IG15IE51dHJpdGlvbiBMaWJyYXJ5IGFuZCBUaXBzIG9mIHRoZSBNb250aCBmb3IgYSB2YXJpZXR5IG9mIGFuc3dlcnMgb24gc2VsZWN0ZWQgdG9waWNzLiBCZSBzdXJlIHRvIHNpZ24gdXAgZm9yIG15IG1vbnRobHkgZSBuZXdzbGV0dGVyLCBGb3JhZ2UgZm9yIFRob3VnaHQuCkV2ZW4gdGhlIHByb3Mgd2hvIHN3aW5nIHdpbGRseSBpbiBjYXNoIGdhbWVzIChsaWtlIFRvbSBEd2FuIG9yIFBhdHJpayBBbnRvbml1cywgZm9yIGV4YW1wbGUpIGFyZSB3ZWxsIGF3YXJlIG9mIGhvdyB0aGV5J3JlIGRvaW5nIGFuZCB3aGF0IHRoZSBpbXBsaWNhdGlvbnMgYXJlIGZvciB0aGVpciBiYW5rcm9sbHMuLiAKSXQncyBhbHNvIGFuIG9ubGluZSBwb2tlciBzdHJhdGVneSB3aGljaCBoYXMgYmVlbiB1c2VkIGJ5IGEgbG90IG9mIGdvb2QgcG9rZXIgcGxheWVycyB3aGVuIHRoZXkgZmlyc3Qgc3RhcnRlZCBvdXQuIFBlb3BsZSwgZXNwZWNpYWxseSBwb2tlciBmYW5zIGFuZCByZWNyZWF0aW9uYWwgdXNlcnMsIHNlZSBwbGF5aW5nIHBva2VyIG9ubGluZSBhcyBzb21ldGhpbmcgb2YgYSB3YXkgdG8gZW50ZXJ0YWluIHRoZW1zZWx2ZXMgYW5kIG5vdCByZWFsbHkgdG8gd2luIG1vbmV5LiAKSG93ZXZlciwgaXQgaXMgcXVlc3Rpb25hYmxlIHdoZXRoZXIgdGhpcyBwcmluY2lwbGUgY2FuIGJlIGFwcGxpZWQgdG8gYWxsIGRpc3B1dGVzIGFuZCBpbiBhbGwgc2l0dWF0aW9ucy4gClRoZW4gbXkgb3RoZXIgY291c2lucyBnb3QgcHJlZ25hbnQgYW5kIGl0IHdhc24gYSBiaWcgZGVhbC4gT25lIHdhcyAxNSBhbmQgZW5kZWQgdXAgcHJlZ25hbnQgMTAgbW9udGhzIGxhdGVyLiAKVGhlbiBjaGVjayB0byBzZWUgaWYgdGhlIGNydW1iIGlzIHN0aWxsIGluIHRoZSBzYW1lIHBsYWNlIGFmdGVyIHlvdXIgcmV0dXJuLi4gClRoZSBuZXh0IG1vcm5pbmcsIHRoZXkgcG9zdGVkIHRoZSBydWxlcyBhbmQgb25lIHNhaWQgdGhhdCBpZiBpdCB3YXMgZG93biB0byB0d28gcGVvcGxlLCB0aG9zZSBwZW9wbGUgY291bGQgYWdyZWUgdG8gc3BsaXQgdGhlIHBvdC4gSSBtYWRlIGEgam9rZSBhYm91dCB0aGlzIGJlaW5nICJ0aGUgZmxlZWNpbmcgb2YgQW1lcmljYSIgdGhhdCBJIHdhc24gZ2l2ZW4gdGhhdCBvcHRpb24uIE9uZSBvZiB0aGUgYnJpc3RseSBtZW4gc2FpZCAiWW91IHdlcmUgdG9sZCB0aGUgcnVsZXMgYWhlYWQgb2YgdGltZS4iIEkgbWFkZSBzdXJlIHRvIHNheSBJIHdhcyBqb2tpbmcgYW5kIHRoYXQgdGhlIG90aGVyIGd1eSB3b24gZmFpciBhbmQgc3F1YXJlLCBhbmQgcmVpdGVyYXRlZCB3aGF0IGEgZ3JlYXQgdGltZSBJIGhhZC4KSWYgdGhlIHBlcnNvbiBoYXMgYSBoaXN0b3J5IG9mIG5vdCBwYXlpbmcgaGlzIGJpbGxzLCBpdCB3b3VsZCBiZSBhIG1pc3Rha2UgdG8gcmVudCB0byBoaW0uLiAKQXMgZm9ydHVuZSB3b3VsZCBoYXZlIGl0LCB0aGUgMXN0IG9mIEF1Z3VzdCB3YXMgdGhlIGFubml2ZXJzYXJ5IG9mIHRoZSBncmVhdCBNb2hhbW1lZGFuIGZlc3RpdmFsIG9mIEJ1a3JhIEVpZC4gCjEzLiBXZSBkZW1hbmQgdGhlIG5hdGlvbmFsaXNhdGlvbiBvZiBhbGwgKHByZXZpb3VzKSBhc3NvY2lhdGVkIGluZHVzdHJpZXMgKHRydXN0cykuCklsIG4nZXN0IHBhcyBkYW5zIG5vcyBoYWJpdHVkZXMgZGUgZGlyZSBhdSByZXZvaXIgIGwndW4gZGVzIGhhYml0YW50cyBkZSBub3RyZSBxdWFydGllci4gTWFpcyB1bmUgZm9pcyBuJ3RhbnQgcGFzIGNvdXR1bWUgbm91cyBuJ2hzaXRvbnMgcGFzICBsZSBmYWlyZS4KSXQncyB0aGUgc2Vjb25kIHN1Y2ggYnVnIHRoaXMgeWVhciwgZ2l2aW5nIGRldmVsb3BlcnMgYSBwb3RlbnRpYWwgZ2xpbXBzZSBpbnRvIHBlcnNvbmFsIGNvbnRlbnQgdGhleSBzaG91bGQgbm90IGJlIGFibGUgdG8gYWNjZXNzLiAKQXMgZm9yIFJ1c3NpYW4gb3B0aWNzIEkgaW5pdGlhbGx5IGFzc3VtZWQgdGhlIFBTTyAxIHdhcyBmb3IgYWxsIFJ1c3NpYW4gd2VhcG9ucyBob3dldmVyIGVub3VnaCBzb3VyY2VzIGhhdmUgY29uZmlybWVkIGl0IHdhcyBqdXN0IGZvciB0aGUgU1ZEIHNvIGl0cyBub3QgYW4gQUsgcGxhdGZvcm0gdGhpbmcuIApXLiBNb3JzZSBoYXMgZGV2aXNlZCBhIGJyaWRnZSB3aGljaCBwZXJtaXRzIG9mIGEgbXVjaCBsaWdodGVyIGNvbnN0cnVjdGlvbiB0aGFuIGEgbm9ybWFsIHN1c3BlbnNpb24gYnJpZGdlIGFuZCBpcywgY29uc2VxdWVudGx5LCBtdWNoIGNoZWFwZXIgdG8gYnVpbGQuIApBcyB0aGUgZ3V5IHNhaWQgYmVsb3cgaWYgSSBmbGF0dGVkIHRoZSBQRlIgdGhlIHBvdCB3b3VsZG4gaGF2ZSBiZWVuIGFzIGJsb2F0ZWQgb24gdGhlIGZsb3AgYnV0IEkgc3RpbGwgdGhpbmsgSSB3b3VsZCBoYXZlIGNiZXQgYW5kIGJldCB0aGUgdHVybiBhbmQgcHJvYmFibHkgaGF2ZSBoYWQgYWxsIHRoZSBtb25leSBpbiBieSB0aGUgcml2ZXIgcmVnYXJkbGVzcyBhcyBJIHdvdWxkIGhhdmUgbWFkZSB0d28gcGFpciBhbmQgdGhlIHBvdCB3b3VsZCBoYXZlIGJlZW4gdGhhdCBiaWcgSSBjb3VsZG4gaGF2ZSBmb2xkZWQuLiAKSG93ZXZlciwgdGhlIGFwcGxpY2F0aW9uIGRpZCBub3QgcHJvY2VlZCBhZnRlciBjb21tdW5pdHkgb3Bwb3NpdGlvbiB3aGljaCBpbmNsdWRlZCB0aGUgY291bmNpbCBkZWNsYXJpbmcgaXRzIGRldGVybWluYXRpb24gdG8gcmVtYWluIHBva2llIGZyZWUuICJXZSBiZWxpZXZlIGluIHdoYXQgd2UgYXJlIGRvaW5nLCBhbmQgaXQgaXMgYSBkaWZmZXJlbnQgd2F5IG9mIGxpZmUgaW4gSW5kaWdvIFNoaXJlIGJlY2F1c2Ugd2UgZG9uIGhhdmUgcG9rZXIgbWFjaGluZXMsIiB0aGVuIEluZGlnbyBtYXlvciBKZW5ueSBEYWxlc2FpZC4gIlRoZXJlIGlzIG5vdGhpbmcgYWdhaW5zdCBhbnlvbmUgcGVyc29uYWxseSBidXQgd2UgZG9uIHdhbnQgdG8gbGV0IHBva2VyIG1hY2hpbmVzIGludG8gdGhpcyBzaGlyZS4iIEluZGlnbyBkZWNpc2lvbiB0byBqb2luIHRoZSBhbGxpYW5jZSBmb3IgZ2FtYmxpbmcgcmVmb3JtcyBmb2xsb3dzIG5ldyBkYXRhIGZvciBwb2tlciBtYWNoaW5lIGV4cGVuZGl0dXJlIGFjcm9zcyB0aGUgTm9ydGggRWFzdCBzaG93aW5nIG1vcmUgdGhhbiAkMjAgbWlsbGlvbiB3YXMgbG9zdCBpbiBCZW5hbGxhLCBXYW5nYXJhdHRhIGFuZCBXb2RvbmdhIG92ZXIgdGhlIGxhc3QgZmluYW5jaWFsIHllYXIuIApBbmQgb2YgY291cnNlLCBpZiB5b3UgaGVyZSBmcm9tIC9yL2FsbCBvciAvci9wb3B1bGFyLCBkb24gZm9yZ2V0IHRvIHN1YnNjcmliZSB0byAvci9RdWl0WW91ckJ1bGxzaGl0IQpQb2tlciBtYWNoaW5lIHRheCBicmVha3MgbGFjayB0cmFuc3BhcmVuY3kKSXMgYSBwcmVtaXVtIHBsdWdpbiwgYnV0IHRoZXJlIGFyZSBwbGVudHkgb2YgZXhjZWxsZW50IGZyZWUgb3B0aW9ucywgc3VjaCBhcyBNYWdpYyBBY3Rpb24gW10uIDUgTWFyIDIwMTcgLiAKTGUgZHJvaXQgZCBwb3VyIGpvdWVyIGVzdCBkZSAxMTAwJC4gCkdvb2dsZSBDaHJvbWUgKDY0IGJpdCkgbGF0ZXN0IHZlcnNpb246IFRoZSBxdWlja2VzdCwgc21hcnRlc3QgYnJvd3Nlci4gCjEwMCBwbGFzdGljIHBsYXlpbmcgY2FyZHMgbWFrZSBncmVhdCBnaWZ0cyBmb3IgYW55b25lIG9uIHlvdXIgZ2lmdCBnaXZpbmcgbGlzdCB3aG8gZW5qb3lzIHBsYXlpbmcgY2FyZHMuIApBbnNvbnN0ZW4gd2FzIG1pciBoaWxmdCB6dW1pbmRlc3QgZWluIHBhYXIgVGFnZSB3aWVkZXIgYXVmIFNwdXIgenUga29tbWVuOiBNYWwgZGVuIGdhbnplbiBTb25udGFnICg+NGgpIGFuIGRlciBmcmlzY2hlbiBMdWZ0IHZlcmJyaW5nZW4sIG9wdGltYWxlcndlaXNlIFdhbmRlcm4vUmFkZmFocmVuL1NwYXppZXJlbiBnZWhlbi4gTmF0cmxpY2ggbXVzcyBtYW4gZ2VyYWRlIG1pdCBkZW0gIldvaGVyIHNvbGwgaWNoIGRpZSBaZWl0IG5laG1lbiIgUHJvYmxlbSBkYSBlaW4gYmlzc2NoZW4gcnVtdHJpY2tzZW4sIGFiZXIgZGllIEF1c3NpY2h0IGVpbmVuIGdhbnplbiBUYWcgenUgInZlcnBsYW5lbiIgdnMuIApHcmVlbndlbGwncyBUaGVyYXBldXRpYyBSaWRpbmcgUHJvZ3JhbSBpcyBkZXNpZ25lZCBmb3IgaW5kaXZpZHVhbHMgd2l0aCBkZXZlbG9wbWVudGFsLCBwaHlzaWNhbCBvciBlbW90aW9uYWwgY2hhbGxlbmdlcy4gVGhlIHByb2dyYW0gZm9jdXNlcyBvbiBhYmlsaXR5IHJhdGhlciB0aGFuIGRpc2FiaWxpdHkuIEl0IGJlZ2FuIGluIDE5OTkgd2l0aCBvbmx5IGEgZmV3IHZvbHVudGVlcnMsIGhvcnNlcywgYW5kIHJpZGVycywgYW5kIGhhcyBncm93biBpbnRvIHRoZSBsYXJnZXN0IHN1Y2ggcHJvZ3JhbSBpbiBTb3V0aGVybiBNYXJ5bGFuZC4gU2luY2UgaXRzIGluY2VwdGlvbiB0aGUgcHJvZ3JhbSBoYXMgcmVhY2hlZCBtb3JlIHRoYW4gODAwIHBhcnRpY2lwYW50cy4KTXkgYmxvb2QgcHJlc3N1cmUgaXMgb3V0c3RhbmRpbmcsIGRlc3BpdGUgdGhlIGZhY3QgdGhhdCBJIHRha2UgbWVkaWNhdGlvbiB0aGF0IHdvcmtzIGxpa2UgYW4gYW1waGV0YW1pbmUgYW5kIGNhbiByYWlzZSBpdCwgd2hpY2ggaXMgd2hhdCBtYWtlcyBpdCBzYWZlIGZvciBtZSB0byB0YWtlIGl0IG5vdy4gTXkgYm95ZnJpZW5kIGNhbiBhY3R1YWxseSBwaWNrIG1lIHVwLiAKU29sbCBzaWUgYXVjaCBuaWNodCwgaWhyZSBrb25zdHJ1a3RpdmUgYXVzcmljaHR1bmcgZnIgaG9jaHB1bHNpZ2UgQW5nZWxlZ2VuaGVpdGVuIHNjaGxpZXQgZGVyYXJ0aWdlIEFud2VuZHVuZ2VuIG9obmVoaW4gYXVzLiAKRmxpcG1vMzMzICA1IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJIHN1Y2ggYSBub3ZpY2Ugc28gSSBoYXZlIHRvIGZvY3VzIG9uIHRoZSBmdW5kYW1lbnRhbHMuIApGaWd1cmluZyBvdXQgcGxhY2VtZW50IGZvciB0aGUgcG90IGxpZ2h0cyBhcm91bmQgdGhlIGV4aXN0aW5nIHNreWxpZ2h0cyB3YXMgZWFzeSBjb21wYXJlZCB0byBjYWxjdWxhdGluZyB0aGUgYW5nbGVzIGZvciB0aGUgY3VzdG9tIHN0YWlubGVzcyBzdGVlbCBkdWN0IGFib3ZlIHRoZSBob29kIGZhbiB0aGF0IGhhZCB0byBiZSBtaXRyZWQgdG8gZml0IHRoZSBzbG9wZSBvZiB0aGUgY2VpbGluZywgSmVuc2VuIHNheXMuVG8gZW5zdXJlIGFsbCB0aGUgd29vZCB3YXMgY29tcGxlbWVudGFyeSwgSmVzdCBzYXlzIHRoZXkgY29uc2lkZXJlZCAxNSBkaWZmZXJlbnQgc2hhZGUgb3B0aW9ucyBiZWZvcmUgZGVjaWRpbmcgb24ganVzdCB0aGUgcmlnaHQgY29sb3VyIGZvciB0aGUgd2hpdGUgb2FrIGVuZ2luZWVyZWQgaGFyZHdvb2QgZmxvb3IgdGhhdCBydW5zIHRocm91Z2hvdXQgdGhlIGhvbWUgbGl2aW5nIHNwYWNlcy4gCkJlIGNhdXRpb3VzIHdpdGggcGVyZnVtZSBvaWxzLiBBbHRob3VnaCB0aGV5IHNtZWxsIHdvbmRlcmZ1bCwgaWYgeW91IGFyZSBwbGFubmluZyB0byBhcHBseSB0aGUgc2NydWIgdG8geW91ciBmYWNlLCB0aGUgcGVyZnVtZSBvaWwgbWF5IGJlIHRvbyBzdHJvbmcuIFRoaXMgaXMgZXNwZWNpYWxseSB0cnVlIGZvciBzZW5zaXRpdmUgc2tpbi4KT3ZlcmhlYXRpbmcgaG91c2luZyBtYXJrZXQgd2FzICd0ZXJyaWZ5aW5nLicgV2h5IFJveWFsIExlUGFnZSdzIENFTyBpcyBPSyB3aXRoIHRoZSBtb3J0Z2FnZSBzdHJlc3MgdGVzdFZhbmNvdXZlciBob21lIHNhbGVzIGZhbGwgbmVhcmx5IDQwJSBpbiBzbG93ZXN0IEphbnVhcnkgaW4gMTAgeWVhcnNEaWFuZSBGcmFuY2lzOiBNb25leSBsYXVuZGVyaW5nIGJ5IGZvcmVpZ25lcnMgaXMgd2hhdCByZWFsbHkgZGVzdHJveWluZyBob3VzaW5nIGFmZm9yZGFiaWxpdHkgaW4gQ2FuYWRhTW9udHJlYWwgaXMgdGhlIGJ1c2luZXNzIGNhcGl0YWwgb2YgdGhlIGxhcmdlbHkgRnJlbmNoIHNwZWFraW5nIHByb3ZpbmNlIG9mIFF1ZWJlYyBhbmQgQ2FuYWRhIHNlY29uZCBsYXJnZXN0IGNpdHkgYnkgcG9wdWxhdGlvbi4gCkl0IG5vdCBuZWNlc3NhcmlseSBzaGFkb3diYW5uaW5nLCBjb21tZW50cyByZW1vdmVkIGJ5IG1vZGVyYXRvcnMgd2lsbCBzdGlsbCBjb3VudCB0b3dhcmRzIHRvIHRoZSB0b3RhbCBudW1iZXIgb2YgY29tbWVudHMgaW4gYSB0aHJlYWQgYnV0IHdvbiBiZSBzaG93biB0byBhbnlvbmUgYnV0IHRoZSB1c2VyIG9yIHRoZSBtb2RlcmF0b3JzLiAKU28gaXQgc2VlbXMgeW91IHJ1biBhY3Jvc3MgbGF6eSBzdWIgbWVuIG1vcmUgb2Z0ZW4gdGhhbiBsYXp5IHN1YiB3b21lbi4gSSB3b3VsZCBhbHNvIHF1ZXN0aW9uIGlmIHdlIG5vdGljZSB0aGUgbGF6aW5lc3MgaW4gYSBzdWIgbW9yZSB3aGVuIGl0IGEgbWFuIGJlY2F1c2Ugb2YgbW9yZSB0cmFkaXRpb25hbGx5IGFjY2VwdGVkIHJvbGVzIGluIHNleD8KSGUgcHJpZGVzIGhpbXNlbGYgb24gYmVpbmcgYSBwcmltZSB0aW1lIHBsYXltYWtlciwgYnV0IHRoZSBjZW50cmUgY2FuIHBhc3MgdXAgc2NvcmluZyBjaGFuY2VzIHRvIGxvb2sgZm9yIGEgbGluZW1hdGUuIEhlIG5lZWRzIHRvIHNjb3JlIHRvIHJlc3RvcmUgY29uZmlkZW5jZSBpbiB0aGUgdGlnaHRlciBjaGVja2luZyBzZWNvbmQgaGFsZi4uIApNYWpvckp1c3RpY2VCb25lciB1Ckkgbm90IHRhbGtpbmcgYWJvdXQgcG9vciBwZW9wbGUgd2hvIGNhbiBhZmZvcmQgaG91c2luZyBpbiBDaGFybG90dGUsIGJ1dCBjYW4gYWZmb3JkIGl0IGluIEluZGlhLiBJIHRhbGtpbmcgYWJvdXQgcGVvcGxlIHdobyBjYW4gYWZmb3JkIGhvdXNpbmcgaW4gQ2hhcmxvdHRlIGJ1dCBoYXRlIHRoYXQgdGhleSBjYW4gYWZmb3JkIHRvIGxpdmUgY2xvc2UgdG8gd29yaywgYW5kIGhhdmUgdG8gc3VmZmVyIHRocm91Z2ggdHJhZmZpYy4KQ29uc3VtZXJzIGJvdWdodCBob3VzZWhvbGQgdG9vbHMgYW5kIGFwcGxpYW5jZXMgdGhyb3VnaCBtYWlsIG9yZGVyIGFzIHdlbGwgYXMgdGhlIHNhbWUgaXRlbSBvZiBraWRzIGNsb3RoaW5nIGluIG11bHRpcGxlIHNpemVzLCB3aXRoIGFuIGVhc3kgcmV0dXJuIHBvbGljeSBmb3IgaXRlbXMgdGhhdCBkaWRuIGZpdC4gClRvbSBDcnVpc2UgTGEgR3VlcnJlIGRlcyBNb25kZXMKVGhlIGZhY3QgdGhlIHBvdGF0byBjYWtlcyB3ZXJlIHJlY3Rhbmd1bGFyIGFuZCBoYWQgdGhlIHNsYXNoZXMgaXMgd2hhdCBoYXMgc3RheWVkIGluIG15IG1lbW9yeS4gCkkgcHVsbCBvdmVyIG15IGxhcHRvcCwgZ2FzcGluZyBhcyBteSB0aW1lIHNsb3dseSBkcmF3cyB0byBhbiBlbmQuIApUaGUgd29ybGQgcmVjb3JkIG9mIDE5IGhvdXJzLCA5IG1pbnV0ZXMgd2l0aCA0ODQgaGFuZHMgb2NjdXJyZWQgaW4gdGhlIDIwMDggV1NPUCBFdXJvcGVhbiBDaGFtcGlvbnNoaXAuIkl0IGhhc24ndCBldmVuIHN1bmtlbiBpbiB5ZXQsIiBCYWNoIHNhaWQuIApQbHVzIGhlIGZpcnN0IHRvIG1hcmtldCBhbmQgdGhhdCwgdG8gbWUsIGlzIGltcG9ydGFudC4uIApIYXJyb2Qgd2FzIGNoYXJnZWQgYSB5ZWFyIGxhdGVyIGFuZCBwbGVhZGVkIGd1aWx0eSBvbiBoZXIgZmlyc3QgZGF5IGluIGNvdXJ0LCBidXQgZGlzcHV0ZWQgdGhlIGRlcGFydG1lbnQgc3VnZ2VzdGlvbiBzaGUgbmlja2VkIHNvbWV3aGVyZSBpbiBleGNlc3Mgb2YgJDEuNSBtaWxsaW9uLiAKWW91IGhhdmUgcHJvYmFibHkgdXNlZCAidGhleSIgdG8gcmVmZXIgdG8gYSBzaW5ndWxhciBwZXJzb24gYmVmb3JlIGJ1dCBkaWRuJ3QgcmVhbGl6ZSBpdC4gSXQncyBjb21tb25seSB1c2VkIHdoZW4gdGhlIHBlcmNlaXZlZCBnZW5kZXIgaXMgbm90IGtub3duIGFuZCB0aGUgcGVyc29uIGluIHF1ZXN0aW9uIGlzIG5vdCB2aXNpYmxlLiAKQ2hpbmEgaXMgZm9jdXNlZCBvbiBwZXIgY2VudCBncm93dGggYXQgYW55IGNvc3QsIGhlIHNhaWQuClRoZXkgaGF2ZSBtYWRlIHRoZSBOb3J0aCBTaG9yZSB0aGVpciBob21lIGZvciB0aGUgbGFzdCBkZWNhZGUgb3IgbW9yZSwgaGF2aW5nIGFsc28gbGl2ZWQgaW4gYSB0b3duaG91c2UgaW4gdGhlIG5laWdoYm91cmhvb2QgYmVmb3JlIG1vdmluZyBpbnRvIHRoZWlyIGN1cnJlbnQgaG9tZS4gCldlIG5lZWQgJDMwMCBtb3JlIGJ5IHRoZSAzMXN0IG9mIEphbnVhcnkgZm9yIFNtb2tleSBvcGVyYXRpb24hIFBsZWFzZSwgZG9uYXRlLiBTbW9rZXkgbmVlZHMgaGlzIGxlZyBhbXB1dGF0ZWQuIEhlIGhhcyBjYW5jZXIuIApJZiB0aGVyZSBpcyBhIGR1ZGUgeW91IHdhbnQgb3BlcmF0aW5nIG9uIHlvdXIgYnJhaW4sIGl0cyBwcm9iYWJseSBoaW0uIEJ1dCB0YWtlIGEgbG9vayBhdCB0aGUgUmVwdWJsaWNhbiBwcmltYXJpZXMuIENvbXBsZXRlIGlkaW90LiAKQXJlbid0IHBlb3BsZSBzdXBwb3NlIHRvIGZlZWwgZ29vZCB3aGVuIHRoZXkgaGVscCBzb21lb25lPyBJJ20gc2VsZmlzaCwgSSBoZWxwIHBlb3BsZSBiZWNhdXNlIGl0J2xsIG1ha2UgbWUgaGFwcHkgdG8gbWFrZSB0aGVtIGhhcHB5LgpMdWNpZmVyIHNuYXBzLiAKVGhlcmUgaXMgYSB2ZXJ5IGVhc3kgdHJhcCB0byBmYWxsIGludG8gd2hlbiB0YWxraW5nIGFib3V0IGlubm92YXRpb24gdGhhdCBpbXByb3ZlbWVudCBhcmUgbm90IGludmVudGlvbi4gRGlkIGFueSBjb21wYW55IGluIEphcGFuIGludmVudCB0aGUgY2FyPyBBYnNvbHV0ZWx5IG5vdC4gRGlkIHRoZXkgZm9yZ2UgYSBjb21wZXRpdGl2ZSBhZHZhbnRhZ2UgYWdhaW5zdCBBbWVyaWNhbiBhbmQgRXVyb3BlYW4gY2FyIG1ha2VycyBiYXNlZCBvbiBhIHNlcmllcyBvZiBpbm5vdmF0aW9ucyAoaWUgYnVzaW5lc3MgYW5kIG1hbnVmYWN0dXJpbmcgb3JnYW5pemF0aW9uYWwgaW52ZW50aW9ucykgcmVsYXRlZCB0byB0aGUgY29uc3RydWN0aW9uIG9mIGEgY2FyPyBBYnNvbHV0ZWx5IHllcy4KVGhlbiBJIGhlYXIgc29tZSBzaHJpZWtpbmcgY29taW5nIGZyb20gdGhlIGJhdGhyb29tLiBBcyBpdCB0dXJuZWQgb3V0LCB0aGUgZW5lbWEgd2FzIGVub3Jtb3VzbHkgc3VjY2Vzc2Z1bCwgdGhpcyBwZXRpdGUgMTIgeXIgb2xkIGdpcmwgaGFkIHByb2R1Y2VkIGEgc2hpdCBhcyBiaWcgYXMgbXkgYXJtLCBhbmQgdGhlIG1vbSBmcmVha2VkIG91dCwgZmlzaGVkIHRoZSBtb25zdGVyIHR1cmQgb3V0IG9mIHRoZSB0b2lsZXQgY2hhc2VkIHRoZSBkb2N0b3IgdGhyb3VnaCB0aGUgZGVwYXJ0bWVudCBpbnNpc3RpbmcgdGhlIGRvY3RvciBsb29rIGF0IHRoZSBzaXplIG9mIGl0IGFuZCBzY3JlYW1pbmcgdGhhdCB0aGlzIGFuYWNvbmRhIGxpa2Ugc2hpdCBtdXN0IGhhdmUgY2F1c2VkIGludGVybmFsIGRhbWFnZSBvciBzb21ldGhpbmcuIApJZiB0aGUgQmVldGhvdmVuIHNvdW5kZWQgdGhlYXRyaWNhbCwgIlBpY3R1cmVzIGF0IGFuIEV4aGliaXRpb24iIHdhcyB3aWRlIHNjcmVlbiBjaW5lbWFzY29wZS4gVGhpcyB3YXMgYSBiaWcgYW5kIGJvbGQgcGVyZm9ybWFuY2UsIHdpdGggc3RhcnRsaW5nIGp1bXBzIGFuZCB0aHJlYXRlbmluZyBsdXJjaGVzIGluICJHbm9tdXMsIiBjb250cmFzdGVkIHdpdGggcGxheWZ1bCwgZmxlZXQgZmluZ2VyZWQgZmluZXNzZSBpbiB0aGUgIkJhbGxldCBvZiB0aGUgQ2hpY2tzIGluIFRoZWlyIFNoZWxscy4iIFRoZXJlIHdhcyBhIHRlbmRlbmN5IHRvIHJ1c2ggc29tZSBwaHJhc2VzLCB3aXRoIHNvbWUgYmx1cnJpbmcgb2YgcGFzc2FnZXMgYXMgYSByZXN1bHQuIFRoZSBmaW5hbCBtb3ZlbWVudCwgIlRoZSBHcmVhdCBHYXRlIG9mIEtpZXYsIiB3YXMgd29uZGVyZnVsbHkgb3JjaGVzdHJhbCwgVHN1amlpIHNlZW1pbmdseSBjb25qdXJpbmcgdGhlIHNvdW5kcyBvZiB1bnNlZW4gZ29uZ3MsIGJlbGxzLCBhbmQgY2hpbWVzLiAKU2hlIHBhc3NlZCBhIGxpdHRsZSBvdmVyIGEgeWVhciBhZnRlciBoaW0uLiAKVGhlIHNpbXBsZSBhbnN3ZXIgZm9yIHdoeSB0ZXRhbnVzIGRvZXNuIHJlc3VsdCBpbiBuYXR1cmFsIGltbXVuaXR5IGFmdGVyIGJlaW5nIGNvbnRyYWN0ZWQgaXMgYmVjYXVzZSB0ZXRhbm9zcGFzbWluIChvbmUgb2YgdGhlIHR3byB0ZXRhbnVzIHRveGlucykgaXMgc28gcG90ZW50IGl0J2xsIGtpbGwgeW91IGJlZm9yZSB5b3UgaGF2ZSBhIGNoYW5nZSB0byBkZXZlbG9wIGFueSBhbnRpYm9kaWVzLiBJdCB0aGUgc2Vjb25kIG1vc3QgZGVhZGx5IG5ldXJvdG94aW4gaW4gdGhlIHdvcmxkOyB0aGUgZW50aXJlIGdsb2JhbCBwb3B1bGF0aW9uIGNvdWxkIGJlIHdpcGVkIG91dCB3aXRoIG9ubHkgMjUwIGdyYW1zIG9mIHRldGFub3NwYXNtaW4uIApPbmUgb2YgdGhlIHRoaW5ncyB0aGV5IGNvdWxkIGFsd2F5cyBjb3VudCBvbiB3YXMgdGhlaXIgRGFkJ3MgbG92ZSBhbmQgc3VwcG9ydC4gClVuZm9ydHVuYXRlbHksIG1hbnkgcGVvcGxlIGZvcmdldCB0aGF0IGdhbWJsaW5nIGlzIGEgd2F5IG9mIGhhdmluZyBmdW4gYW5kIGJlZm9yZSB0aGV5IGtub3cgaXQgdGhleSBoYXZlIGEgc2VyaW91cyBnYW1ibGluZyBwcm9ibGVtLiAKQXMgb2YgdGhpcyB3cml0aW5nLCBpdCBpcyB0aGUgb25seSBzdGF0ZSB0aGF0IHJlcXVpcmVzIGEgcHJhY3RpdGlvbmVyIHRvIGJlIHByb2ZpY2llbnQgaW4gaGVyYmFsIG1lZGljaW5lIGluIG9yZGVyIHRvIHBhc3MgdGhlIHN0YXRlIGxpY2Vuc2luZyBleGFtLiAKQSBwbGF5ZXIgd2l0aCAyIHBhaXJzIG1heSBjaG9vc2UgdG8gcGxheSBib3RoIHBhaXJzIGluIHRoZSBoaWdoIGhhbmQgb3IgdGhlIGhpZ2hlciBwYWlyIGluIHRoZSBoaWdoIGhhbmQgYW5kIHRoZSBsb3dlciBwYWlyIGluIHRoZSBsb3cgaGFuZC4gCk9uIHRoZSBvdGhlciBzaWRlIGFsbW9zdCBubyBwbGF5ZXJzIGFyZSBnb2luZyB0byBjaGVjayBiYWNrIHZhbHVlIGhlcmUuIApZb3Uga25vdyB3aGF0IHRvIGV4cGVjdC4gCkdhbGxhZ2hlciwgNTEsIGVhcm5lZCBoaXMgbGF3IGRlZ3JlZSBhdCBuaWdodCB3b3JraW5nIGFzIGEgTmV3IFlvcmsgcG9saWNlIG9mZmljZXIgaW4gdGhlIEJyb254LiAKV2UgbmVlZCB0byBhZHZhbmNlIHRoZXNlIHJlbGF0aW9uc2hpcHMgYmVjYXVzZSBnb2luZyBmb3J3YXJkLCB0aGVzZSBhcmUgb3VyIGN1c3RvbWVycyB0aGF0IHdlIHdpbGwgZ2V0IGludG8gcHJvZHVjdGlvbiB2ZWhpY2xlcyB3aXRoLiAKU3VpdHMgYXJlIG5vdCB1c2VkIHRvIGJyZWFrIHRpZXMuIApZb3UgZXZlbiBiZSBhYmxlIHRvIHBpY2sgYW5kIGNob29zZSB3aGF0IHlvdSB3YW50IGZvciBicmVha2Zhc3QsIGx1bmNoIGFuZCBkaW5uZXIgaWYgeW91IHB1dCBpbiB0aGUgZWZmb3J0IGFuZCBnZXQgdGhlaXIgd2Vla2x5IHNjaGVkdWxlcy4gU2VyaW91c2x5IGZvb2Qgc2hvdWxkIG5vdCBiZSBhbiBpc3N1ZSBpZiB5b3UgaW4gYSBjaXR5LiAKSGUgaW50ZXJwcmV0cyB0aGlzIGFzIGFuIGNvbmZpcm1hdGlvbiBvZiBUYWxhdCBoYXRyZWQgb24gQXJtZW5pYW5zIGFuZCB0aGF0IGhlIHdhbnRzIGRlc3RydWN0aW9uIG9mIHRoZSBBcm1lbmlhbnMuIApUaGlzIGFjY291bnRzIGZvciB0aGUgZmFpbnQgZmVlbGluZyBvZiBkZWphIHZ1IHRoYXQgZXZlbiBub24gIE1hZ3JpdHRlYW5zIHNvbWV0aW1lcyBnZXQgd2hlbiBsb29raW5nIGF0IGhpcyB3b3JrLiBNYWdyaXR0ZSBkaWVkIGluIDE5NjcsIGJ1dCBmb3IgdGhlIGJlc3QgcGFydCBvZiBhIGhhbGYgY2VudHVyeSBoaXMgaW1hZ2VzICAgb3IgdmFyaWFudHMgb24gdGhlbSAgIGhhdmUgYmVlbiB1c2VkIHRvIGFkdmVydGlzZSBldmVyeXRoaW5nIGZyb20gdGhlIEZyZW5jaCBzdGF0ZSByYWlscm9hZCBzeXN0ZW0gYW5kIGNob2NvbGF0ZXMgdG8gd2FsbHBhcGVyLCBjYXJzIGFuZCBwb2xpdGljYWwgY2FuZGlkYXRlcy4uIApZb3UgbWF5IGFsc28gdHJ5IHNvYWtpbmcgdGhlIGFmZmVjdGVkIGFyZWEgaW4gd2F0ZXIgYW5kIGJha2luZyBzb2RhIGZvciBhIGNvdXBsZSBvZiBtaW51dGVzLiBBZ2FpbiwgaWYgdGhlIHJhc2ggcGVyc2lzdHMsIHlvdSB3aWxsIG5lZWQgdG8gc2VlIGEgZG9jdG9yIGZvciBwcm9wZXIgdHJlYXRtZW50Li4gCklmIHlvdSBkb24gYXQgbGVhc3QgYXBwcmVjaWF0ZSB3aGF0IFJFNyBicmluZ3MgdG8gdGhlIHRhYmxlIChhIGZyZXNoIHNldHRpbmcgYW5kIHRvbmUsIHRoZSBiZXN0IHdyaXRpbmcgb2YgdGhlIHNlcmllcywgYW5kIFZSIGNvbnRyb2xzIHdoaWNoIGlzIGEgZ2FtZWNoYW5nZXIgZm9yIHRoZSBob3Jyb3IgZ2VucmUpLCB5b3UgYXJlbiBhIHRydWUgUmVzaWRlbnQgRXZpbCBmYW4gaW1vLiAKUG9saWNlIHNlaXplZCBtb3JlIHRoYW4gJDEyMCwwMDAgaW4gY2FzaCBkdXJpbmcgdGhlIG9uZSBkYXkgb3BlcmF0aW9uLCBpbmNsdWRpbmcgJDE3LDAwMCBoaWRkZW4gaW4gb25lIHN1c3BlY3QncyBuaWdodHN0YW5kLCBjaGFyZ2luZyBwYXBlcnMgc2F5LgpBbHNvLCB5b3UgYmUgc3VycHJpc2VkIGFib3V0IHRoZSBBR0kgdGhpbmcsIDEyMHMgZm9yIEFHSSBkb2VzbiByZWFsbHkgY3V0IGl0IGluIEpQIG5vd2FkYXlzIGZvciB0aGUgbW9zdCBwYXJ0LiBJZGVhbGx5IHlvdSBoYXZlIG1pbmltYWxseSAxNDAgb3IgZmFpbGluZyB0aGF0LCBhIDEzMCBzb21ldGhpbmcuLiAKSXQgZXNwZWNpYWxseSBoZWFydGJyZWFraW5nIHdoZW4geW91IGxvb2sgaW50byB0aGUgbGVhZGluZyB0aGVvcmllcyBvZiB3aGF0IGhhcHBlbmVkIHRvIFRob21hcy4gV2hldGhlciB0aGUgc2hlcmlmZiBhY3R1YWxseSBoYWQgYSBoYW5kIGluIHRoZSBldmVudHMgdGhhdCBsZWFkIHRvIFRob21hcyBkZWF0aCBvciBoZSBpcyBqdXN0IG5vdCBpbnZlc3RpZ2F0aW5nIHRoZSBtYXR0ZXIgYXMgaGFyZCBhcyBoZSBjb3VsZCwgc29tZSBwZW9wbGUgKG15c2VsZiBpbmNsdWRlZCkgdGhpbmsgdGhlIHNoZXJpZmYga25vd3MgbW9yZSBhYm91dCB0aGF0IG5pZ2h0IHRoYW4gaGUgaXMgbGV0dGluZyBvbiBiZWNhdXNlIGhlIHN0aWxsIGhlbGQgYSBncnVkZ2UgYWdhaW5zdCBUaG9tYXMgZm9yIHRoZSBpbnRlcmFjdGlvbiB0aGV5IGhhZCBiZWZvcmUgaGUgd2FzIHNoZXJpZmYuIEFuZCB3aGVuIHlvdSBsb29rIGF0IHRoZSBzaGVyaWZmIGFjdGlvbnMgaW4gaGFuZGxpbmcgdGhlIGludmVzdGlnYXRpb24gaXQgcmVhbGx5IG1ha2VzIHlvdSB3b25kZXIgd2hhdCBoaXMgbW90aXZlcyBhcmUuCldoYXRldmVyIHlvdXIgYWN0aW9uLCB0aGUgZGVhbGVyIHdpbGwgbWFrZSBhbnkgcmVxdWlyZWQgY2hhbmdlIGF0IHRoZSBlbmQgb2YgdGhlIGJldHRpbmcgcm91bmQuIApPdXIgZnJvbnRkZXNrIGhhcyBTdWljaWRlIEhlbHAgcGhvbmUgbnVtYmVycyBhdmFpbGFibGUgdXBvbiByZXF1ZXN0LCBhbmQgd2UgdXJnZWQgdG8gZ2l2ZSB0aGVtIHRvIHBlb3BsZSBpZiB3ZSB0aGluayB0aGV5IGF0IHJpc2suLiAKQ29uc2lkZXJpbmcgYSBwZWRpY3VyZT8gQ2hlY2sgd2l0aCB5b3VyIGRvY3RvciBiZWZvcmUgZ2V0dGluZyBwYW1wZXJlZC4gQmVhdXR5IHRyZWF0bWVudCBjYW4gcG90ZW50aWFsbHkgZXhwb3NlIHlvdSB0byBjaGVtaWNhbHMsIGZ1bWVzIG9yIHVuc2FmZSBjb25kaXRpb25zLiBJZiB5b3UgdmlzaXQgdGhlIHNwYSB3aXRoIGEgYmFieSBvbiBib2FyZCwgYmUgcHJvYWN0aXZlLiBDaGVjayB0aGUgaGVhbHRoIGluc3BlY3Rpb24gc2NvcmVzIG9mIHRoZSBzcGEgeW91J3JlIHZpc2l0aW5nLCBpbnNwZWN0IGZvciBkdXN0IGFuZCBzYW5pdGFyeSBwcmFjdGljZXMgd2hlbiB5b3UgYXJyaXZlLCBhbmQsIGlmIHlvdSdyZSBzdGlsbCBzY2FyZSwgY2FycnkgeW91ciBvd24gbmFpbCBmaWxlcyBhbmQgY2xpcHBlcnMgdG8gbWluaW1pemUgdGhlIHJpc2sgb2YgY29udGFtaW5hdGlvbi4gSWYgeW91IG5vdGljZSBhIGNlcnRhaW4gZWF1IGRlIGNoZW1pY2FsIHdoZW4geW91IGFycml2ZSwgaGVhZCBmb3IgdGhlIGRvb3IuIFRob3NlIGZ1bWVzIGFyZW4ndCBnb29kIGZvciB5b3Ugb3IgdGhlIGJhYnkuClRoaXMgaXMgYSBjb3VudHJ5IHdoaWNoIGJsb2NrcyBhbmQgY2Vuc29ycyB0aGUgSW50ZXJuZXQgYmVjYXVzZSB0aGV5IHdhbnQgdG8gYmFuIHBvcm5vZ3JhcGh5LCBJIGNhbid0IGJ1eSB0aGlzIGV4Y3VzZS4gVGhlIGdvdmVybm1lbnQgYWxyZWFkeSBzaG93ZWQgaW50ZXJlc3QgaW4gY2Vuc29yaW5nIFlvdVR1YmUgZm9yICJmYWtlIG5ld3MiIGNoYW5uZWxzIHdoaWNoIHdlcmUgaGFybWluZyB0byB0aGVpciBicmFuZCwgYW5kIHRoZXkgYXJlIGNpdGluZyBzdHVmZiBsaWtlICAgICwgICAuICAgd2hpY2ggc291bmRzIGZpc2h5IGFzIGZ1Y2suIFdlIGFscmVhZHkgY2FuIHVzZSBHb29nbGUgTWFwcyBhbmQgaGF2ZSB0byByZXNvcnQgdG8gTmF2ZXIgYW5kIEtha2FvLCBmZWVscyBsaWtlIHRoZSBzYW1lIHRyZW5kIHdoZW4gTmV0ZmxpeCBhbmQgS29yZWFuIGJyb2FkY2FzdGluZyBjb3Jwb3JhdGlvbnMgYXJlIG1lbnRpb25lZC4KTm93IHlvdSBzaG91bGQgaGVhciB3aGl0ZSBub2lzZSAoYSBjb25zdGFudCBub2lzZSBsaWtlIHRoZSBmYW4gb2YgeW91ciBjb21wdXRlcikuIEFsbCB0aGF0IGV4aXN0cyBub3cgYXJlIHlvdXIgbWluZCBhbmQgeW91ciBicmVhdGhpbmcgYW5kIHlvdXIgcG9pbnQgb2YgZm9jdXMuIApBbWF6aW5nbHksIGl0IHdhcyAxMyB5ZWFycyBhZ28gbm93IHRoYXQgQ2hyaXMgTW9uZXltYWtlciBjYW1lIG91dCBvZiBub3doZXJlIHRvIHdpbiB0aGUgMjAwMyBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgTWFpbiBFdmVudCwgc3RhcnRpbmcgdXAgdGhlIHBva2VyIGJvb20gdGhhdCBoYXMgZ3Jvd24gdGhlIGdhbWUgdG8gdGhlIGxldmVsIGl0IGlzIHRvZGF5LiBTbyB3aGVuIHRoZSBHUEwgd2FzIGxvb2tpbmcgZm9yIGEgbGlzdCBvZiBtYW5hZ2VycywgTW9uZXltYWtlciBzZWVtZWQgdG8gYmUgYSBuYXR1cmFsIGZpdC4gQ29taW5nIGludG8gdGhlIGRyYWZ0LCBNb25leW1ha2VyIHNhaWQgdGhlcmUgd2VyZSBhIGZldyBkaWZmZXJlbnQgcGF0aHMgaGUgY291bGQgaGF2ZSBnb25lIHdpdGggaGlzIGRyYWZ0Li4gClB1Y2tzcmFnZSB1CkkgY2FuIGZsb29yIHdhbGwgcmFtcCBydXNoLiBJIGNhbiBkb3VibGUgcmFtcCB3YWxsIHJ1c2ggaWYgSSB1c2Ugb3RoZXIgaG90a2V5cyB0aGFuIG15IG5vcm1hbCBvbmVzLCBidXQgSSBjYW4gZG8gYSBzaW5nbGUgZmxvb3J3YWxscmFtcCBhdCBydW5uaW5nIHNwZWVkLiBJIGNvdWxkIGRvIGl0IHdhbGtpbmcgb3Igd2l0aCBwYXVzZXMsIGlmIHRoYXQgd2hhdCB5b3UgaW5jbHVkZSBpbiB5b3VyIGF2ZXJhZ2UgcGxheWVyLCBidXQgYnkgdGhhdCBzdGFuZGFyZCBldmVyeW9uZSBjYW4gZG8gZG91YmxlIGZsb29yd2FsbHJhbXAgaW50byA5MHMgZ2l2ZW4gZW5vdWdoIHRpbWUgYW5kIG1hdHMuCkFzIGFuIGFjYWRlbWljIHdobyBzcGVuZHMgbG9uZyBob3VycyBpbiBmcm9udCBvZiB0aGUgY29tcHV0ZXIsIEkgc3VmZmVyIGZyb20gc2V2ZXJlIHNob3VsZGVyIGFuZCBiYWNrIHByb2JsZW1zLiBUaGUgbWFzc2FnZSBzZXNzaW9ucyB3aXRoIFJlYmVjY2Egb2ZmZXIgaW1tZW5zZSByZWxpZWYgYW5kIGhhdmUgYmVlbiB2aXRhbCBhcyBhIHRvb2wgZm9yIG1hbmFnaW5nIG15IHNob3VsZGVyIHBhaW4uIApTb3JyeSwgYnV0IHdlIGhhdmUgcmVtb3ZlZCB5b3VyIHJlc3BvbnNlLCBhcyB3ZSBleHBlY3QgYW5zd2VycyBpbiB0aGlzIHN1YnJlZGRpdCB0byBiZSBpbiBkZXB0aCBhbmQgY29tcHJlaGVuc2l2ZSwgYW5kIHRvIGRlbW9uc3RyYXRlIGEgZmFtaWxpYXJpdHkgd2l0aCB0aGUgY3VycmVudCwgYWNhZGVtaWMgdW5kZXJzdGFuZGluZy4gUG9zaXRpbmcgd2hhdCBzZWVtcyBvciBvdGhlcndpc2Ugc3BlY3VsYXRpbmcgd2l0aG91dCBhIGZpcm0gZ3JvdW5kaW5nIGluIHRoZSBjdXJyZW50IGFjYWRlbWljIGxpdGVyYXR1cmUgaXMgbm90IHRoZSBiYXNpcyBmb3IgYW4gYW5zd2VyIGhlcmUsIGFzIGFkZHJlc3NlZCBpbiB0aGlzIFJ1bGVzIFJvdW5kdGFibGUuIEJlZm9yZSBjb250cmlidXRpbmcgYWdhaW4sIHBsZWFzZSB0YWtlIHRoZSB0aW1lIHRvIGJldHRlciBmYW1pbGlhcml6ZSB5b3Vyc2VsZiB3aXRoIHRoZSBydWxlcywgYXMgd2VsbCBhcyBvdXIgZXhwZWN0YXRpb25zIGZvciBhbiBhbnN3ZXIgc3VjaCBhcyBmZWF0dXJlZCBvbiBUd2l0dGVyIG9yIGluIHRoZSAuLiAKU2FyYWggRGF2aXMsIFJlYmVjY2EgQXNxdWl0aCBhbmQgSm9uYXRoYW4gQmFsZHdpbiBhcmUgcGFydCBvZiB0aGUgVU0gRmFjdHMgVGVhbSByZXNwb25zaWJsZSBmb3IgdGhvc2UgcHVibGljYXRpb25zLi4gCkl0IG1pZ2h0IGFsc28gYmUgYSBnb29kIGlkZWEgdG8gdHJ5IHNvbWUgbmV3IHRoaW5ncywgYm90aCBzb2xvIGFuZCB0b2dldGhlciwgdGhhdCBmb2N1cyBqdXN0IG9uIHlvdXIgcGxlYXN1cmUgKHdpdGhvdXQgZm9jdXNpbmcgb24gb3JnYXNtLCB0aG91Z2ggdGhhdCBtYXkgYmUgYSBuaWNlIHNpZGUgZWZmZWN0IGhhaGEpLiAKRWxhaW5lIFd5bm4gaXMgaGF2aW5nIG5vIGx1Y2sgc2VjdXJpbmcgYSBtZWV0aW5nIHdpdGggV3lubiBSZXNvcnRzJyBuZXdlc3QgYm9hcmQgbWVtYmVycyBhaGVhZCBvZiBuZXh0IHdlZWsncyBzaGFyZWhvbGRlciBtZWV0aW5nLgpJbiByZXNwb25zZSB0byBvbmUgb2YgdGhlIGNyaXRpY3MsIEhvd2FyZCB3cm90ZTogInNvcnJ5IHlvdSBmZWVsIHRoYXQgd2F5IGJ1dCB0aGF0J3MgdGhlIG9ubHkgSnVzc2llIHRoYXQgSSBrbm93LiAKVnNrdW0gYSBwcmUgcGxub3ZhbmllIHMgcm96aG9kdWpjZS4gQSBzdHJhdGlsIHRlcmxpbmdvdiBwcnN0ZSwgc3RhciBtaW5jZSwgZ29sZCBudWdnZXQgcyBubGV6eSwga3RvciByb2JpYSB0ZW50byBrb25laywgZmFzY2ludWpjZSBhIHZ6cnV1amNlLiAKTXkgZnJpZW5kIEdlcnJ5IGNhbWUgYmFjayB0byBvdXIgbGl0dGxlIG1lZXRpbmcgYW5kIHRhbGtlZCBhYm91dCBob3cgaXQgdG9vayB0aGlzIGd1eSB0d28geWVhcnMgdG8gY29tZSB1cCB3aXRoIHRoZSBCbGFja2phY2sgU25pcGVyIFZpcnR1YWwgQmxhY2tqYWNrIFByb2R1Y3QuIApUaGUgZml2ZSBsYXVuY2hlcyBmcm9tIEFsYXNrYSBhcmUgc3VwcG9ydGVkIHRocm91Z2ggTkFTQSBTb3VuZGluZyBSb2NrZXQgUHJvZ3JhbSBhdCB0aGUgYWdlbmN5IFdhbGxvcHMgRmxpZ2h0IEZhY2lsaXR5IGF0IFdhbGxvcHMgSXNsYW5kLCBWaXJnaW5pYSwgd2hpY2ggaXMgbWFuYWdlZCBieSBOQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlciBpbiBHcmVlbmJlbHQsIE1hcnlsYW5kLiBOQVNBIEhlbGlvcGh5c2ljcyBEaXZpc2lvbiBtYW5hZ2VzIHRoZSBzb3VuZGluZyByb2NrZXQgcHJvZ3JhbSBmb3IgdGhlIGFnZW5jeS4KV2hlbiB5b3Ugd3JpdGUgeW91ciBvd24gcG9zdCBhc2tpbmcgZm9yIHN1cHBvcnQsIHdlIHdpbGwgYWxzbyBiZSBiaWFzZWQgZm9yIHlvdS4uIApUaGUgbmV4dCB0aGluZyB5b3Uga25vdywgaGUgc2F5cyBnbyBvdXRzaWRlLCB1c2VzIHRoZSBOIHdvcmQsIGFuZCBhbGwgdGhpcyBvdGhlciBjcmFwIEhlIGp1c3QgZXhwbG9kZWQuIE5vdGhpbmcuIEhlIGhhZCBiZWVuIG9uIGhpcyBwaG9uZSB0aGUgd2hvbGUgdGltZSwgc28gSSB0b2xkIHRoZSBkZWFsZXIsIGNvbnRyb2wgdGhlIGdhbWUuIApNb3N0IGludGVybmF0aW9uYWwgdHJhdmVsZXJzIHZpc2l0aW5nIFBvcnR1Z2FsIHdpbGwgZmx5IGludG8gTGlzYm9uIFBvcnRlbGEgQWlycG9ydCAoQWVyb3B1ZXJ0byBkZSBMaXNib2EpLCB0aGUgaW50ZXJuYXRpb25hbCBhaXJwb3J0IGp1c3Qgbm9ydGggb2YgTGlzYm9uLCB0aGUgY2FwaXRhbCBvZiBQb3J0dWdhbC4gSG93ZXZlciwgdmlzaXRvcnMgdG8gdGhlIEFsZ2FydmUgQ29hc3QgbWlnaHQgYmUgYmV0dGVyIHNlcnZlZCBieSBmbHlpbmcgaW50byBGYXJvIEFpcnBvcnQsIGFsdGhvdWdoIGFpcmZhcmUgd2lsbCBiZSBoaWdoZXIgYW5kIHdvdWxkIHJlcXVpcmUgYSBjb25uZWN0aW5nIGZsaWdodCBmcm9tIExpc2JvbiBvciBhbm90aGVyIEV1cm9wZWFuIGNpdHksIHN1Y2ggYXMgRnJhbmtmdXJ0LCBMb25kb24sIE1hZHJpZCBvciBQYXJpcy4gCk5vdCBldmVyIGhhdmluZyBib3VnaHQgYSBwcm9wZXJ0eSB0aGF0IHRoZSBzZWxsZXIgd2FudGVkIHRvIHVzZSBhIDEwMzEgZXhjaGFuZ2UsIHRoZXJlIGFyZSB2ZXJ5IGZpbmUgcnVsZXMgYWJvdXQgYSBwcm9wZXJ0aWVzIHRpdGxlIGluIHRoZSB0cmFuc2ZlciBvZiBhIDEwMzEgZXhjaGFuZ2UuIFRoZSBwcm9wZXJ0eSBtdXN0IGJlIGluIHRoZSBzZWxsZXJzIGZ1bGwgbmFtZSwgbm90IGEgYnVzaW5lc3MgbmFtZS4gTEVTU09OIDkgRkVMTE9XIE5FV0JJRVM6IERvbid0IGp1c3Qga25vdyBvZiBmYWNldHMgb2YgdGhpbmdzIGxpa2UgMTAzMSdzLCBsZWFybiBhcyBtdWNoIGFzIHlvdSBjYW4gYWJvdXQgdGhlbSBzbyB5b3UgY2FuIGNhdGNoIHRoaW5ncyBvbiB0aGUgdXAgZnJvbnQgcmF0aGVyIHRoYW4gdGhlIGJhY2tlbmQuIFRoZSBjb250cmFjdCBJIHNpZ25lZCB3YXMgYmV0d2VlbiBtZSBhbmQgdGhlIHNlbGxlciBob3dldmVyLCB0aGUgdGl0bGUgb2YgdGhlIHByb3BlcnR5IHdhcyB1bmRlciBoaXMgYnVzaW5lc3NlcyBuYW1lLiBJdCB0b29rIGFsbW9zdCBhIHdlZWsgZm9yIGhpbSB0byB3b3JrIHdpdGggaGlzIGxhd3llci9jbG9zaW5nIGF0dG9ybmV5IHRvIGdldCBpdCBtYWlsZWQgdG8gbXkgY2xvc2luZyBhdHRvcm5leSBzbyB0aGF0IHRoZXkgY291bGQgcmVjb3JkIHRoZSBuZXcgdGl0bGUgaW4gbXkgY291bnR5IHNvIHRoYXQgdGhlIDEwMzEgd291bGQgYmUgYWJsZSB0byB0YWtlIHBsYWNlLiBBbGwgdGhlIG1lYW4gd2hpbGUgbXkgcmF0ZSBsb2NrIHdhcyBleHBpcmluZyBhZnRlciBhIDIgd2VlayBleHRlbnNpb24gZnJvbSBteSBsZW5kZXIgb24gQXByaWwgMzAuIEhhZCB0byBjbG9zZSBieSB0aGVuLgpOZWVkIDQgNTAwIGJ1eSBpbnMgdG8gcGxheSBzcGlucyBjb21mb3J0YWJseSwgc28ganVzdCB0YWtlIHRoYXQgaW50byBhY2NvdW50IGFzIHdlbGwsIDMwMGJpIGRvd25zd2luZ3MgYXJlbiB1bmhlYXJkIG9mCklsIHMnYWdpdCBkZSBsYSBtb3llbm5lIHN1ciAyMCBhbnMuIApQcm9jZXNzIENhbmRpZGF0ZXMgZm9yIHNwb3J0cyBtYXNzYWdlIGNlcnRpZmljYXRpb24gbXVzdCBzdWJtaXQgYW4gYXBwbGljYXRpb24gYW5kIG9yIHNpbXBsZSByZWdpc3RlciBmb3IgYSBjb3Vyc2UuIFNvbWUgcHJvZ3JhbXMgaGF2ZSBwcmVyZXF1aXNpdGVzLiBUaGUgVWx0cmFTcG9ydHMgU3BvcnRzIE1hc3NhZ2UgQ2VydGlmaWNhdGlvbiwgZm9yIGV4YW1wbGUsIHJlcXVpcmVzIHN0dWRlbnRzIHRvIGhvbGQgYSBjdXJyZW50IG1hc3NhZ2UgdGhlcmFweSBsaWNlbnNlIGFuZCBjb21wbGV0ZSBhIGJhc2ljIGxpZmUgc3VwcG9ydCBjb3Vyc2UgYmVmb3JlIGFwcGx5aW5nLiBNb3N0IGNlcnRpZmljYXRpb24gcHJvZ3JhbXMgYWxzbyBjb3N0IG1vbmV5LiBGb3IgZXhhbXBsZSwgdGhlIGZlZSBmb3IgYSBzcG9ydHMgbWFzc2FnZSBjZXJ0aWZpY2F0aW9uIG9mZmVyZWQgYnkgUGF0aHMgaW4gSGVhbGluZyBpcyAkMSwyNzUuIFNvbWUgcHJvZ3JhbXMgY29tZSB3aXRoIGFkZGl0aW9uYWwgcmVxdWlyZW1lbnRzLCBzdWNoIGFzIHBhcnRpY2lwYXRpb24gaW4gb24gc2l0ZSBtYXNzYWdlIGV2ZW50cyBhbmQgcHJvdmlkaW5nIG1hc3NhZ2VzIHRvIGF0aGxldGVzIGluIHRyYWluaW5nLgpUaGUgd29tYW4gd2FzIGFsc28gZGVzY3JpYmVkIGFzIGJlaW5nIHRoaW4gYW5kIHdoaXRlIHdpdGggbG9uZyBicm93biBoYWlyLiAKVGhhdCBvcHBvbmVudCByZW1haW5zIHlvdSwgeW91cnNlbGYuIFRoZSBnb2FsIGlzIHRvIHVsdGltYXRlbHkgZGVmZWF0IHlvdXJzZWxmLCB5b3VyIGZlYXJzLCB5b3VyIGluc2VjdXJpdGllcyBhbmQgbGltaXRhdGlvbnMuIApJdCBwcmV0dHkgY29tbW9uIHRoYXQgcGFyYW1lZGljcy9FTVRzIHdpbGwgYXNrIGFib3V0IGRydWcgb3IgYWxjb2hvbCB1c2FnZSBiZWNhdXNlIHRoYXQgd291bGQgZGV0ZXJtaW5lIGlmIHRoZXkgY2FuIG9yIGNhbm5vdCBnaXZlIHlvdSBzb21ldGhpbmcsIGJhc2ljYWxseSBkZXRlcm1pbmluZyB3aGF0IHRoZWlyIGNvdXJzZSBvZiBhY3Rpb24gd291bGQgYmUuIEl0IG5vdCBub3JtYWwgdGhhdCB0aGV5IHdvdWxkIGNvbnRpbnVvdXNseSBwcmVzcyB5b3UgYW5kIHRyZWF0IHlvdSBwb29ybHksIHNvIGlmIHlvdSBtYWtlIGEgY29tcGxhaW50IGl0IG1heSBiZSBiZXN0IHRvIGZvY3VzIG9uIHRoYXQgYXNwZWN0IG9mIHRoZSBzaXR1YXRpb24uQWxzbyBub3Rld29ydGh5LCBpZiB5b3UgZmluZCB5b3Vyc2VsZiBpbiB0aGF0IHNpdHVhdGlvbiBhZ2FpbiwgeW91IGNhbiByZWZ1c2UgdGhlaXIgc2VydmljZXMuIApQbGVhc2Ugam9pbiBtZSBpbiBteSBwcm9waGV0aWMgZHJlYW0gdG8gdW5kZXJzdGFuZCB3aGF0IHRoZSBHT0Qgb2YgdGhlIHVuaXZlcnNlIHdhbnRzIEhpcyBwZW9wbGUgdG8ga25vdy4uIAoiV2UnbGwgYmUgeW91bmcgaW4gdGVybXMgb2YgZXhwZXJpZW5jZSBidXQgd2Ugc3RpbGwgaGF2ZSBlaWdodCBzZW5pb3JzLCIgUmVuY2sgc2FpZC4gIkEgbG90IG9mIG91ciBndXlzIGhhdmVuJ3QgcGxheWVkIGluIGEgd2hpbGUgc28gaXQnbGwgYmUgdGhlaXIgZmlyc3QgZnVsbCB2YXJzaXR5IHNlYXNvbi4gCjIgdGVhbXMgaW4gTllDLCAyIGluIExBLCBDaGljYWdvLCBCb3N0b24sIE1pYW1pIGluY29taW5nOyBpbWFnaW5lIGlmIHRoZXkgZGVjaWRlZCB0byBsb3NlIG1vbmV5IGZvciBhIHdoaWxlIGFuZCBoYXZlIE5CQS9ORkwvTUxCIGxpa2UgcGF5cm9sbHMsIGdldHRpbmcgYWxsIHRoZSBiZXN0IHBsYXllcnMgaW4gdGhlIHdvcmxkIHRvIGdvIHRoZXJlLiAyMCB5ZWFycyBsYXRlciwgYm9vbSwgRXVyb3BlYW4gZm9vdGJhbGwgaXMgcHJhY3RpY2FsbHkgdGhlaXIgbWlub3IgbGVhZ3VlLCB3aG8gbmVlZHMgcmVsZWdhdGlvbiBvciBwcm9tb3Rpb24uLiAKVGhlbiBzaGUgd2Fsa3Mgd2l0aCBoaW0gaW4gREMsIGJ1dCBzdGlsbCBsZWF2ZXMgd2l0aCBoZXIgYm95ZnJpZW5kLiBUaGVuIHNoZSBzdGF5cyB3aXRoIGhpbSBpbiBoaXMgaG91c2UgYW5kIGZpbmFsbHkgc2xlZXBzIHdpdGggaGltLCBhZnRlciB0aGF0IG9uZSBjcml0aWNhbCBtb21lbnQuLiAKV2UgZXh0ZW5kIG91ciBzeW1wYXRoaWVzIHRvIEFkYW0gYW5kIGhlciBmYW1pbHkgYW5kIGZyaWVuZHMuLiAKQ2VzIHBlbnNldXJzLiAKVGhhdCBhbGw7IHJlbGlnaW91cyBmcmVlZG9tIGlzIG9ubHkgcGVyaXBoZXJhbGx5IGludm9sdmVkIGluIGEgY2FzZSB3aGVyZSB0aGV5IGFjY2VwdCBtb25leSB0byBkbyBzb21ldGhpbmcsIHRoZW4gZG8gdGhlaXIgYmVzdCB0byB0cmVhdCBjZXJ0YWluIGNhc2VzIGFzICJzZXBhcmF0ZSBidXQgZXF1YWwiIG9yIHNvbWV0aGluZyBhbG9uZyB0aG9zZSBsaW5lcy4gTGlrZSBpbiB0aGUgY2FzZSBvZiBhbGxvd2luZyBvbmx5IGNlcnRhaW4gbWFycmllZCBjb3VwbGVzIHRvIGJvYXJkIHRvZ2V0aGVyIGluIGEgaG9tZWxlc3Mgc2hlbHRlci4KTGUgZmlsbSBkZSBjZXR0ZSB2aWUgZXN0IGRyb3VsIGF1IG1vbWVudCBkZSBub3RyZSBtb3J0LCBsb3JzIGR1IGRwYXJ0IGRlIGxhIFRlcnJlLiAKSGUgZ2V0cyBkZXRlbnRpb24gd2l0aCBVbWJyaWRnZSBvbmNlID4gQW5nZWxpbmEgZ29lcyBhcGUgYWJvdXQgaGltIG1pc3NpbmcgUXVpZGRpdGNoIHRyeW91dHMgPiBoZSBwcm9taXNlcyBpdCB3b24gaGFwcGVuIGFnYWluID4gaXQgaGFwcGVucyBhZ2FpbiA+IEFuZ2VsaW5hIGdvZXMgYXBlIGFib3V0IGhpbSBtaXNzaW5nIGEgUXVpZGRpdGNoIGdhbWUuU2ltaWxhciBzaXR1YXRpb24gaW4gSEJQIHdpdGggU25hcGUgdGhlIGRldGVudGlvbnMuIApWaWRlbyBwb2tlciBpcyBhIGNhc2lubyBnYW1lIGJhc2VkIG9uIGZpdmUgY2FyZCBkcmF3IHBva2VyLiAKVGhleSBzYXkgdGhhdCBJIGEgYmFkIGluZmx1ZW5jZSwgZXNwZWNpYWxseSBzaW5jZSBJIGhhZCBteSBzb24gYXQgMTcuIApEb24ndCBjb21wYXJlIHlvdXJzZWxmIHRvIHRoZSBuZXh0IHBlcnNvbiBvciB0byBhIG1vZGVsIG9yIGFjdHJlc3MuIApBY3R1YWxseSBub3QgdmVyeSBvZnRlbi4gQW5kIGlmIHlvdSBnZXQgYSBwcm9mZXNzaW9uYWwgdGhlcmFwaXN0IGl0IHdvbiBiZSBtZW50aW9uZWQgYXQgYWxsLiBJIGhhZCBpdCBoYXBwZW4gb25seSBhIGZldyB0aW1lcywgYW5kIHJlYWxseSBpdCB3YXNuIHJhZ2luZyBvciBhbnl0aGluZy4gCkxhc3QgdXBkYXRlZDogMzEgMTAgMjAxOFRoZSA4ODggR3JvdXAgbGF1bmNoZWQgdGhlIDg4OCBTcG9ydCBiZXR0aW5nIHNpdGUgaW4gMjAwOCBhbmQgdG9kYXkgaXQgcHJvdmlkZXMgc3BvcnRzIHNlbGVjdGlvbiByYW5nZSB0aGF0IGNhbiBlYXNpbHkgY29tcGV0ZSB3aXRoIG90aGVyIGJpZyBib29rbWFrZXJzLiBBdCA4ODggU3BvcnQgeW91IGNhbiBiZXQgb24gZm9vdGJhbGwsIGJhc2tldGJhbGwsIHRlbm5pcywgaG9yc2UgYW5kIGdyYXlob3VuZCByYWNpbmcsIGNyaWNrZXQsIEFtZXJpY2FuIHNwb3J0cyBhbmQgbXVjaCBtb3JlLiAKSXQgdmVyeSBFZG1vbnRvbiwgc28gaXQgY29vbCB0byBoYXZlIGludGVybmF0aW9uYWwgcmV2aWV3cyByYXZpbmcgYWJvdXQgdGhlIHJlY29yZCBhbmQgaGF2aW5nIGl0IG1hZGUgcmlnaHQgaGVyZSBpbiB0b3duLiAKVGhlIHByZXNzdXJlcyBhc3NvY2lhdGVkIHdpdGggbmF2aWdhdGluZyBnYW5nIHBvbGl0aWNzIGFyZSBkYXVudGluZy4gSWYsIGZvciBleGFtcGxlLCB5b3UgYXJlIGZyb20gYSBjZXJ0YWluIG5laWdoYm9yaG9vZCwgcml2YWwgZ2FuZ3MgbWF5IHNlZSB5b3UgYXMgbGVnaXRpbWF0ZSB0YXJnZXQgZGVzcGl0ZSBhbnkgZ2FuZyBhZmZpbGlhdGlvbiB3aGljaCBvbmx5IGZ1cnRoZXIgcHJlc3N1cmUgeW91IGpvaW4gYSBnYW5nIGZvciBzZWxmIHByZXNlcnZhdGlvbi4uIApHdWFyZHMgYWxzbyBzdXNwZWN0ZWQgRGVsIEJhbHNvIG9mIGhhdmluZyBvcmdhbml6ZWQgcG9rZXIgZ2FtZXMgYW1vbmcgaW5tYXRlcy4gCkVkaXQzOiB0byB0aGUgcGVvcGxlIHJlc3BvbmRpbmcgdGhhdCBHYW1lc3RvcCBoYWQgbm90aGluZyB0byBkbyB3aXRoIHRoaXMgdHJlbmQuIFBsZWFzZSBsZXQgbWUgcmVtaW5kIHlvdSB0aGF0IHRoZSBvcmlnaW5hbCBwbGFuIGZvciBYYm94IE9uZSB3YXMgdG8gbG9jayBwaHlzaWNhbCBtZWRpYSB0byBhbiBhY2NvdW50IHNwZWNpZmljYWxseSB0byBjb21iYXQgdHJhZGUgaW5zLgpUaGUgZGVudGlzdCB0aGVuIHRob3JvdWdobHkgZXhhbWluZXMgeW91ciB0ZWV0aCBhbmQgZ3VtcyB0byBzZWFyY2ggZm9yIGFueSBwcm9ibGVtIGFyZWFzLi4gCkZpcnN0IHBsYXllciBiZXRzICQxMDAuIFRoZSBuZXh0IHBsYXllciBvbmx5IGhhcyAkMjAgdG8gY2FsbC4gVHdvIG1vcmUgcGxheWVycyBjYWxsIHRoZSAkMTAwIGJldC4gVGhlIGVhc2llc3Qgd2F5IHRvIGZpZ3VyZSBvdXQgaG93IG11Y2ggdGhlIFNob3J0IHBsYXllciBjYW4gd2luIGlzIHRvIHNheSB0aGV5IGNhbiB3aW4gJDIwIHRpbWVzIDQgcGxheWVycy4gU28sICQ4MCBnb2VzIGludG8gdGhlIG1haW4gcG90LiBUaGF0IG1lYW5zIHRoYXQgJDI0MCAoJDgwIFggMyBwbGF5ZXJzLCB3aGF0IHRoZXkgYXJlIHNob3J0KXdpbGwgZ28gaW50byB0aGUgU2lkZSBQb3QuIEF0IHRoaXMgdGltZSB0aGUgZGVhbGVyIHNob3VsZCBhbm5vdW5jZSAiSm9obiBpcyBhbGwgaW4gZm9yICQyMC4gSGUgY2FuIHdpbiB0aGUgTWFpbiBQb3QuIiBUaGUgZGVhbGVyIGlzIHRlbGxpbmcgSm9obiwgaGltc2VsZiwgYW5kIGV2ZXJ5b25lIGF0IHRoZSB0YWJsZSB3aGF0IEpvaG4gY2FuIHdpbi4gQmUgc3VyZSB0byBhZGQgaW4gYW55IGJsaW5kcyB0aGF0IGFyZSAkMjAgb3IgbGVzcyBpbnRvIHRoZSBNYWluIFBvdC4gVGhlICdNYWluIFBvdCcgaXMgbm90IG5lY2Vzc2FyaWx5IHRoZSBsYXJnZXN0IHBvdC4gSXQgaXMganVzdCB0aGUgZmlyc3QgcG90LiBJdCBpcyBhbHNvIHRoZSBwb3QgdW5kZXIgd2hpY2ggdGhlIGJ1cm4gY2FyZHMgd2lsbCBiZS4KU2hlaWtoIFJhc2hpZCB3YXMgaGVhcmQgc2F5aW5nIGJlZm9yZSBUViBjYW1lcmFzIHRoYXQgdGhleSB3b3VsZCBub3QgdGFsayB0byB0aGUgZ292ZXJubWVudCB1bnRpbCBkb2cgd2FzIHRha2VuIG91dCBvZiB0aGUgd2VsbC4gSW1yYW4gS2hhbiBjYWxsZWQgS2h1cnNoZWVkIFNoYWgsIHdobyBpcyBrbm93biB0byBiZSB0aGUgbW9zdCBwb2xpdGUgbGVhZGVyIG9mIHRoZSBvcHBvc2l0aW9uIGV2ZXIsIHBlcnNvbmFsIHNlY3JldGFyeSBvZiBOYXdheiBTaGFyaWYuIApUaGUgdmljdGltIHRvbGQgdGhlIGFjY3VzZWQgdGhhdCBzaGUgd2FzIG9ubHkgMTMsIHRvIG5vIGF2YWlsLgpZb3UgaGFkIHRvIGhhdmUgYmVlbiBpbiB0aGF0IHBhcnRpY3VsYXIgdGF4IGJyYWNrZXQgd2hlcmUgaXRlbWl6ZWQgZGVkdWN0aW9ucyB3ZXJlIHZpYWJsZSB0byBiZWdpbiB3aXRoLCB0aG91Z2guIGxvd2VyIG1pZGRsZSBjbGFzcyBlYXJuZXJzKSwgYW5kIG9mIGNvdXJzZSB3ZSBrbm93IGFib3V0IHRoZSB3aG9sZSB1cHBlciBjbGFzcyBmdWNrZXJ5LgpJZiB3ZSBkb24gZmlndXJlIGEgd2F5IG91dCwgYXQgbGVhc3Qgd2UgcGVyaXNoIGtub3dpbmcgdGhhdCB3ZSBpbiB0aGlzIHRvZ2V0aGVyQW5kIGl0IGlzIHRoYXQgaHVtYW4gY29ubmVjdGlvbiwgdGhlIGNsYXNzIGFzIGEgZ3JvdXAgd2l0aCBzb2xpZGFyaXR5IGFuZCBzdXBwb3J0IGZvciBpdHNlbGYsIHRoYXQgY2FuIG1vdmUgdXMgZnJvbSBDbGFzcyBXYXJmYXJlIHRvIGNsYXNzIGFjdGlvbkV2ZXJ5b25lIG5vdyBrbm93cyB0aGF0IERlcGFydG1lbnQgb2YgQWdyaWN1bHR1cmUgZW1wbG95ZWUgU2hlcnlsIFNoZXJyb2Qgd2FzIHVuanVzdGx5IGZvcmNlZCB0byByZXNpZ24gYW5kIHZpbGlmaWVkIGFzIGEgInJldmVyc2UgcmFjaXN0IiBieSB0aGUgT2JhbWEgQWRtaW5pc3RyYXRpb24gYW5kIGV2ZW4gdGhlIE5BQUNQLiBTaGVycm9kLCB3aG8gaXMgQmxhY2ssIGZpbG1lZCBnaXZpbmcgYSBzcGVlY2ggYXQgYW4gTkFBQ1AgYmFucXVldCBpbiBNYXJjaCB3aGVyZSBzaGUgcmVjb3VudGVkIGhvdyBoZXIgd29yayB3aXRoIGEgcG9vciB3aGl0ZSBmYXJtZXIgdGF1Z2h0IGhlciB0byBjYXJlIGFib3V0IHRoZSBoYXZlIG5vdHMgb2YgdGhpcyBjb3VudHJ5LCByZWdhcmRsZXNzIG9mIHJhY2UuIFNwZWVjaCB3YXMgdGhlbiBlZGl0ZWQgaW50byBhIHZlcnNpb24gdGhhdCBsb29rZWQgYXMgaWYgU2hlcnJvZCB3YXMgc2F5aW5nIHNoZSBkaXNjcmltaW5hdGVkIGFnYWluc3QgdGhpcyBmYXJtZXIgYmVjYXVzZSBoZSB3YXMgd2hpdGVBbmQgd2hvIHJhbiB0aGlzIGhpZ2hseSBlZGl0ZWQgYW5kIGNvbXBsZXRlbHkgdW50cnVlIHZlcnNpb24/IG90aGVyIHRoYW4gQW5kcmV3IEJyZWl0YmFydCBhbmQgb3VyIGZyaWVuZHMgYXQgQmlnIEdvdmVybm1lbnQuIApJIGRpc2NvdmVyZWQgbmV3RWFzeSBhbmQgcmVsaWFibGUgd2Vic2l0ZVRoYW5rIHlvdSBXZWJub2RlLCB0cnV0aGZ1bGx5LCBJIHJlYWxseSBkb24ndCBrbm93IHdoYXQgSSB3b3VsZCBkbyB3aXRob3V0IHlvdXIgc2VydmljZXMuIApEQyBDb21pY3NNYWtlcyBzZW5zZSBmb3IgYSBjaGFyYWN0ZXIgd2hvIHJvdXRpbmVseSBnZXRzIGJyYWluZWQgYnkgYSBuaW5lIGluY2ggY2hpY2tlbiBoYXdrLiBUb20gYW5kIEplcnJ5IGFyZSBhIHNsYXBzdGljayBwYWlyIHRoYXQgeW91ciBncmFuZHBhcmVudHMgbWlnaHQgaGF2ZSBvbmNlIGZvdW5kIG1pbGRseSBhbXVzaW5nLiBXaG8gY291bGQgcmVzaXN0IHB1dHRpbmcgdGhlc2UgdHdvIHdvbmRlcmZ1bCB0aGluZ3MgdG9nZXRoZXI/IEEgbG90IG9mIHBlb3BsZSwgYnV0IHVuZm9ydHVuYXRlbHksIG5vbmUgb2YgdGhlbSB3ZXJlIGluIHRoZSBwb3NpdGlvbiB0byBzaHV0IHRoaXMgdHJhZ2VkeSBkb3duLgpUaGlzIG1ha2VzIGl0IGJldHRlciB0byBwbGF5IGluIG9ubGluZSBwb2tlciB0b3VybmFtZW50cyB0aGF0IGFyZSBoZWxkIHByaXZhdGVseS4gVmFyaW91cyBmcmVlIHBva2VyIGNvbW11bml0aWVzIGFuZCB3ZWJzaXRlcyBvZmZlciB0aGVtIG92ZXIgdGhlIG5ldC4gCnplYWwgZm9yIGNhcm5hZ2UgaW5zcGlyZWQgTGFzIFZlZ2FzIHNob290ZXIKVGVhbXMgZGlyZWN0IHBsYXllcnMgdG8gdmFyaW91cyB2b2x1bnRlZXIgaW5pdGlhdGl2ZXMsIGJ1dCB3aXRoIEhvY2tleSBQbGF5ZXJzIGZvciBLaWRzIHRoZSBpbml0aWF0aXZlcyB3ZXJlIHBsYXllciBkcml2ZW4uIApFVUdFTkUsIE9yZS4gCkkgdG9vayBhIGNsYXNzIGluIFVuaXZlcnNpdHkgdGhhdCByZWFsbHkgcHV0IHRoaXMgaW4gcGVyc3BlY3RpdmUuIFdvbWVuIHNleHVhbGl0eSBpcyBtYWRlIHB1YmxpYyB3aGVuIHByZWduYW50LiBBIHByZWduYW50IGJvZHkgaXMgYSBwdWJsaWMgYm9keS4gSXQgc2NyZWFtcyAiSSBoYWQgc2V4ISEhISIgdG8gdGhlIHdvcmxkIGF0IGxhcmdlLiBUaGF0IHdoeSBmb3IgZ2VuZXJhdGlvbnMgd29tZW4gZHJlc3NlZCBpbiBhIHdheSB0byBoaWRlIHRoZWlyIHByZWduYW5jeSBiZWNhdXNlIGl0IHNlZW1lZCBwdWJsaWNseSBpbmRlY2VudCB0byBleHBvc2UgdGhlaXIgc2V4dWFsaXR5Lgo=|<---