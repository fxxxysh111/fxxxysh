<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html lang="ko" xml:lang="ko" xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body>
  <div id="skipnavigation">
   <ul>
    <li>
     [link]
     
    </li>
    <li>
     [ahref]
     
    </li>
   </ul>
  </div>
  <div id="wrap">
   <div id="header-wrap">
    <div id="header">
     <div id="top">
      <h1 id="logo">
       <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
      </h1>
      <div id="location">
       <ul>
        <li class="location1">
         [ahref]
         
        </li>
        <li class="location2">
         [link]
         
        </li>
        <li class="location3">
         [link]
         
        </li>
        <li class="location4">
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div id="gnb-wrap">
      <div id="gnb">
       <p class="gnb-img">
        <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li>[link][link][link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[ahref]</li>[ahref]<li>[link]</li>
       </p>
       <ul>
        <li>
         [ahref]
         
         <ul class="sub01">
          <li class="top">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="">
           <a href="/wpge/m_106/sub0107.do">
           </a>
          </li>
          <li class="">
           [link]
           
          </li>
         </ul>
        </li>
        <li>
         [link]
         
         <ul class="sub02">
          <li class="top">
           [ahref]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           <a href="/wpge/m_172/sub020501.do">
           </a>
          </li>
         </ul>
        </li>
        <li class="lock">
         [link]
         
         <ul class="sub03">
          <li class="top">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class=" lock">
           [ahref]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="h32">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li>
         [link]
         
         <ul class="sub04">
          <li class="top">
           [ahref]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="h32">
           [ahref]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="h32">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="h32">
           [link]
           
          </li>
          <li class="">
           [link]
           
          </li>
          <li class="h32">
           [link]
           
          </li>
         </ul>
        </li>
        <li>
         [link]
         
         <ul class="sub05">
          <li class="top">
           [ahref]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [ahref]
           
          </li>
          <li class="">
           [link]
           
          </li>
         </ul>
        </li>
       </ul>
      </div>
     </div>
    </div>
   </div>
   <hr/>
   <div id="maincontainer">
    <div id="slogan">
    </div>
   </div>
   <div id="subcontainerWrap">
    <div id="subcontainer">
     <div id="left">
      <div id="lnb">
       <div id="lnbtop">
        <h2>
         <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
        </h2>
       </div>
       <div id="lnbMenu">
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
          <ul>
           <li class="on">
            [link]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            [link]
            
           </li>
          </ul>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
       <div id="quickMenu">
        <ul>
         <li>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div id="maincontent">
      <div id="path">
       <span class="mgl20 home">
        Home
       </span>
       <span>
        ><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][ahref]<li>[ahref]</li><li>[search]</li>[search]<li>[search]</li>[ahref]
       </span>
       <span>
        [ahref]
        
       </span>
       <span>
        ><li>[link]</li>[link][ahref][search]<li>[link]</li><li>[link]</li><li>[ahref]</li>
       </span>
       <span>
        [link]
        
       </span>
       <span>
        ><li>[link]</li><li>[ahref]</li>[search][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
       </span>
       <span>
        <strong>
         조사연구
        </strong>
       </span>
      </div>
      <div id="section">
       <div id="subtitle">
        <h3>
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <p>
         <li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][ahref][link][ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][ahref]<li>[link]</li><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][search][ahref][link][link][search]<li>[ahref]</li>
        </p>
       </div>
       <div id="subarea">
        <form action="" method="post" name="mainform" onsubmit="return false;">
         <div class="mgb30" id="contentArea1">
          <table border="0" cellpadding="0" cellspacing="0" class="common1 mgb15" summary="조사연구자료 상세보기 목록으로 제목,첨부,작성일,조회수,내용의 상세내용을 확인할 수 있습니다." width="100%">
           <caption>
            조사연구자료 상세보기
           </caption>
           <colgroup>
            <col width="132px"/>
            <col width="*"/>
            <col width="132px"/>
            <col width="237px"/>
           </colgroup>
           <tbody>
            <tr>
             <th class="first" scope="row">
              제목
             </th>
             <td colspan="3">
              씨티「은행의 미래」보고서 주요내용
             </td>
            </tr>
            <tr>
             <th class="first" scope="row">
              작성일
             </th>
             <td>
              2018-05-09 09:40:27
             </td>
             <th scope="row">
              조회수
             </th>
             <td>
              3821
             </td>
            </tr>
            <tr>
             <th class="first" scope="row">
              첨부1
             </th>
             <td colspan="3">
              [link]
              
             </td>
            </tr>
            <tr>
             <th class="first center" colspan="4" scope="row">
              내용
             </th>
            </tr>
            <tr>
             <td class="first lastline" colspan="4">
              <div class="pt15 pb30" id="write">
               씨티에서 발간한 '은행의 미래*' 보고서 주요 내용입니다.
               <br>
                [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][search]
               </br>
               <br>
                <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>
               </br>
               * Citi, ‘Bank of The Future : The ABCs of Digital Disruption in Finance’(2018.3월)
              </div>
             </td>
            </tr>
           </tbody>
          </table>
          <div id="confirm1">
           <div class="fr">
            [ahref]
            
           </div>
          </div>
         </div>
        </form>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div id="footercontainer">
    <div id="footer">
     <div id="privacy">
      <ul>
       <li class="privacy1">
        [ahref]
        
       </li>
       <li class="privacy2">
        [ahref]
        
       </li>
       <li class="privacy4">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div id="copyright">
      <address>
      </address>
      <p>
      </p>
      <p>
      </p>
     </div>
     <div id="family">
      <label class="hid" for="relationSite">
       관련사이트 이동
      </label>
      <form action="" method="post" name="moveFrm">
       <div style="display:none">
       </div>
      </form>
      <select class="family" id="relationSite" name="url">
       <option value="">
        관련사이트
       </option>
       <option value="http://dart.fss.or.kr">
        DART 전자공시시스템
       </option>
       <option value="http://www.fsc.go.kr">
        금융위원회
       </option>
       <option value="http://www.fss.or.kr">
        금융감독원
       </option>
       <option value="http://www.krx.co.kr">
        한국거래소
       </option>
       <option value="http://www.ksd.or.kr">
        한국예탁결제원
       </option>
       <option value="http://www.ksfc.co.kr">
        한국증권금융
       </option>
       <option value="http://www.koscom.co.kr">
        코스콤
       </option>
      </select>
     </div>
     <p class="waMark">
     </p>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0193
  </b>
 </body>
</html>