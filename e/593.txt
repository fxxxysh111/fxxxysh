--->|RnVuZXJhbCBTZXJ2aWNlIHRvIGNlbGVicmF0ZSBEaWNrJ3MgbGlmZSB3aWxsIGJlIGF0IFN0LiBQcml2YXRlIGludGVybWVudCB3aWxsIHRha2UgcGxhY2UgYXQgV29vZGxhbmQgQ2VtZXRlcnkuIApGYWxrIHRocm93cyAzIFREcywgTm8uIDE5IFdhc2hpbmd0b24gU3RhdGUgYmVhdHMgVXRhaCAzMyAyNVdhc2hpbmd0b24gU3RhdGUgdiBVdGFoU0FMVCBMQUtFIENJVFksIFVUICAgTk9WRU1CRVIgMTE6IFF1YXJ0ZXJiYWNrIFR5bGVyIEh1bnRsZXkgMSBvZiB0aGUgVXRhaCBVdGVzIHNsaWRlcyBmb3IgYSBmb3VydGggcXVhcnRlciBmaXJzdCBkb3duIGluIHRoZWlyIDMzIDI1IGxvc3MgdG8gdGhlIFdhc2hpbmd0b24gU3RhdGUgQ291Z2FycyBhdCBSaWNlIEVjY2xlcyBTdGFkaXVtIG9uIE5vdmVtYmVyIDExLCAyMDE3IGluIFNhbHQgTGFrZSBDaXR5LCBVdGFoLiAKRG8geW91IHRoaW5rIGl0IGlzIHJ1ZGUgdG8gYXNrIGZvciBhIHNpemUgMSBvciBhYm92ZSBkaWFwZXJzPyBPciBzaG91bGQgSSBqdXN0IHJldHVybiB0aGUgc21hbGxlciBzaXplcz8gTXkgaHVicyB3aWxsIHRoaW5rIGl0IGlzIGEgcmVndWxhciBwb2tlciBuaWdodCBidXQgd2hlbiBoZSBnb2VzIGl0IHdpbGwgYmUgZm9yIHBhbXBlcnMgKG9yIHdoYXRldmVyIGRpYXBlcnMgdGhlIGd1eXMgYnJpbmcpIHRoaXMgaXMgb3VyIDR0aCBiYWJ5IGFuZCB0aGV5IGtub3cgd2UgaGF2ZSBldmVyeXRoaW5nLiAKRWlnaHQgbW9udGhzIGFnbywgSSBtZXQgdGhlIGZpcnN0IGd1eSBJJ3ZlIGhhZCBhIHJlYWwgY29ubmVjdGlvbiB3aXRoIHNpbmNlIGdldHRpbmcgb3V0IG9mIGEgZm91ciB5ZWFyIHJlbGF0aW9uc2hpcC4gV2UgcmVhbGx5IGdldCBhbG9uZyBhbmQgaGF2ZSBhIHN0cm9uZyBjb25uZWN0aW9uICAgb3Igc28gSSB0aGluay4gSGUgd2FzIG1vdmluZyBvdXQgb2YgdGhlIGNvdW50cnkgaW4gYSBmZXcgbW9udGhzLCBzbyB3ZSBkZWNpZGVkIHRvIGtlZXAgdGhpbmdzICJjYXN1YWwiIGJlY2F1c2Ugb2YgdGhlIGJhZCB0aW1pbmcgd2l0aCBoaW0gbGVhdmluZyAgIG9yIHNvIEkgdGhvdWdodC4gCldlbmRpIGh5cG90aGVzaXplZCB0aGF0IHRoaXMgaXMgcHJvYmFibHkgd2h5IGZvciBzdWNoIGEgcG9vciBjb3VudHJ5LCBJbmRpYW5zIGFyZSBxdWl0ZSBoYXBweSBhbmQgZGVwcmVzc2lvbiBoZXJlIGlzIGxvdyAoYWx0aG91Z2ggcmlzaW5nIHdpdGggdGhlIG91dHNvdXJjaW5nIG9mIGpvYnMgdG8gSW5kaWEpLiAKUGh5c2ljYWwgYWN0aXZpdHk6IFdoYXQgYXJlIHlvdXIgZGFpbHkgd29ya291dCBuZWVkcz8gQ29uc2lkZXIgaG93IGEgZml0bmVzcyB0cmFja2VyIGNhbiBiZW5lZml0IHlvdXIgZXhlcmNpc2UgcmVnaW1lbi4gSWYgeW91IGVuZ2FnZSBpbiBhY3Rpdml0aWVzIGxpa2UgcGlsYXRlcywgeW9nYSwgb3Igd2Fsa2luZywgb3B0IGZvciBhIGJhc2ljIGZpdG5lc3MgdHJhY2tlciBmb3IgaGVhcnQgcmF0ZSBtb25pdG9yaW5nIGFuZCBzbGVlcCBkYXRhLiAKSW4gdGhlIDIwMDAgcHJlc2lkZW50aWFsIGVsZWN0aW9uLCBBbCBHb3JlIHRvcHBlZCBHZW9yZ2UgVy4gCklUIEZFRURTLCBEUklOS1MsIEFORCBGRUVMUyBGUk9NIElUUyBST09UUy4gCllvdSBwdXQgaGlzIHZhbHVlIHJhbmdlIG9uIHR3byBwYWlyIG9yIHNldHMuIFlvdSBkb250IGV4cGVjdCBoaW0gdG8gY2FsbCBwcmUgd2l0aCBLNyBvciBLNiwgYW5kIHlvdSBleHBlY3QgaGltIHRvIHJlcmFpc2UgS0sgcHJlZmxvcC4gWW91IGV4cGVjdCBoaW0gdG8gaGF2ZSBvbmUgY29tYm8gb2YgNjYgYW5kIG9uZSBjb21ibyBvZiA3NyB0aGF0IGJlYXRzIHlvdS4gCldpdGggdGhlIHR3byBmaWdodGVycyBjYXN0IGFuZCBnYW1lIGZvciBhbnl0aGluZywgdGhlIHByb2R1Y2VycyB0aGVuIGhhZCB0byBzZWxlY3QgdGhlIGNvdW50cmllcyBhbmQgZmlnaHRpbmcgc3R5bGVzIHRoZXkgd2FudGVkIHRvIGV4cGxvcmUuIFRoZSBzZWxlY3Rpb25zIHdlcmUgYmFzZWQgb24gaG93IGludGVyZXN0aW5nIHRoZSBsb2NhbCBmaWdodGluZyBzdHlsZSB3YXMgYW5kIHRoZSBleG90aWNpc20gb2YgdGhlIGNvdW50cnkuIFRoZSBwcm9kdWNlcnMgd2FudGVkIHRvIHN0aWNrIHRvIGEgZm9ybWF0IHdoZXJlIHRoZXkgc3BsaXQgdGhlIHBhaXIgdXAgICBvbmUgdG8gdHJhaW4gaW4gdGhlIGNpdHksIG9uZSBpbiB0aGUgY291bnRyeS4gTm8gY291bnRyeSB0dXJuZWQgZG93biB0aGVpciByZXF1ZXN0IHRvIGZpbG0sIGFsdGhvdWdoIHNvbWUgaGFkIHRvIGJlIGF2b2lkZWQgYmVjYXVzZSBvZiBjaXZpbCB1bnJlc3QuIEFsbCBvZiB0aGUgbWFzdGVyIHRlYWNoZXJzLCBldmVuIHRoZSBsZWdlbmRhcnkgaW5zdHJ1Y3RvcnMgaW4gSmFwYW4sIHdlcmUgb3BlbiB0byB0aGUgc2hvdydzIGNvbmNlcHQuIEl0IHdhcyBhIGNoYW5jZSB0byBzaG93Y2FzZSBhbiBhcnQgZm9ybSB0aGF0J3Mgdml0YWwgdG8gdGhlaXIgY3VsdHVyZS4gVGhlIGxvY2F0aW9ucyBhbmQgZmlnaHRpbmcgc3R5bGVzIHdlcmUgYXMgZm9sbG93czoKQnV0IHNpbmNlIEkgbGl2ZSB3YXkgdXAgbm9ydGgsIEkgbmVlZCBhIHN1cHBsZW1lbnQsIGFuZCBtYW55IG90aGVycyBwcm9iYWJseSBkbyB0b28uIExvdyBWaXRhbWluIEQgZG9lcyBoYXZlIGEgbGluayB0byBkZXByZXNzaW9uIGFuZCBJIHRoaW5rIG1hbnkgcGVvcGxlIGZvcmdldCB0byBzdXBwbGVtZW50Li4gCkl0IGlzIHF1aXRlIGNvbXBsaWNhdGVkLiBGaXJzdCB5b3UgbmVlZCB0byBnZXQgdGhlIGFjY2lkZW50IHJhdGVzIGZvciB0aGUgYWlybGluZSBvbiB3aGljaCB5b3UgYXJlIHBsYW5uaW5nIHRvIGZseS4gT25lIG1lYXN1cmUgaXMgdGhlIG51bWJlciBvZiBjcmFzaGVzIHBlciBtaWxsaW9uIGtpbG9tZXRyZXMgb3IgbWlsbGlvbiBob3VycyBvZiBmbHlpbmcuIE5leHQsIGNhbGN1bGF0ZSB0aGUgZGlzdGFuY2Ugb3IgbnVtYmVyIG9mIGhvdXJzIHlvdSB3aWxsIGJlIGZseWluZy4gWW91IGNvdWxkIHJlZmluZSB0aGUgY2FsY3VsYXRpb24gYnkgYWRqdXN0aW5nIGZvciB0aGUgYWlyY3JhZnQgdHlwZS4gQWxzbywgc2luY2UgbW9zdCBjcmFzaGVzIGhhcHBlbiBhdCB0YWtlIG9mZiBvciBsYW5kaW5nLCB5b3UgbWF5IHdhbnQgdG8gY29uc2lkZXIgd2hpY2ggYWlycG9ydHMgeW91IGFyZSBmbHlpbmcgZnJvbSBhbmQgdG8sIGluY2x1ZGluZyBhbnkgdGhhdCB5b3UgYXJlIHRyYW5zaXRpbmcuIChGdWxsIEFuc3dlcikKQSBxdWljayBHb29nbGluZyBzdWdnZXN0cyB0byBtZSB0aGF0IGluIG1hbnkganVyaXNkaWN0aW9ucyB3aGF0IHlvdSBkZXNjcmliZWQgaXMgZWl0aGVyIGFuIGFzc2F1bHQgb3IgYSBiYXR0ZXJ5LiAKU29tZSA4MCBwZXJjZW50IG9mIER1dGNoIEpld3MgZGllZCBpbiB0aGUgSG9sb2NhdXN0LCBnaXZpbmcgSG9sbGFuZCB0aGUgaGlnaGVzdCBkZWF0aCByYXRlIGluIHdlc3Rlcm4gRXVyb3BlLiBPZiB0aGUgMTA3LDAwMCBEdXRjaCBKZXdzIHNlbnQgdG8gdGhlIGNhbXBzLCBvbmx5IDUsMDAwIGxpdmVkLiAKRXZlbnR1YWxseSBpdCBnZXRzIGEgbGl0dGxlIHF1aWV0IGFuZCBDQiBzYXlzIHNoZSB3YW50cyB0byBkbyB0aGUgZ2lmdCBleGNoYW5nZSBhZ2FpbiBiZWNhdXNlIGl0IGdvdCBpbnRlcnJ1cHRlZCBieSBmb29kLCBhbmQgdGhhdCBzaGUgdGhpbmtzIHBlb3BsZSBnb3QgcnVzaGVkIGFuZCBpdCB3YXNuJ3QgZmFpci4gSmFuZSwgYWxvbmcgd2l0aCBzb21lIG90aGVyIHBlb3BsZSB3aG8gaGF2ZSBraWRzIHBvaW50IG91dCBpdCdzIGdldHRpbmcgcHJldHR5IGxhdGUgc28gbWF5YmUgaXQncyBva2F5IHdpdGggaG93IHRoaW5ncyB0dXJuZWQgb3V0LiAKVGhlbiBKb3NodWEgVHJlZSBjYW1lIG91dCBhbmQganVzdCBibGV3IHRoZSBkb29ycyB3aWRlIG9wZW4uIEV2ZXJ5b25lIGZyb20gaW5kaWUvYWx0ZXJuYXRpdmUgZmFucyB0byByb2NrIGZhbnMgbG92ZWQgdGhlaXIgbXVzaWMuIApFdmVuIHdpdGhpbiB0aGF0IHJlbGF0aXZlbHkgc2hvcnQgcGVyaW9kLCB3ZSd2ZSBnb25lIGZyb20gaGF2aW5nIGEgdHlwaWNhbCAieWVsbG93IGR1c3QiIHBlcmlvZCB3aGVyZSBwb2xsdXRpb24gd2FzIHBhcnRpY3VsYXJseSBiYWQsIHRvIGJhc2ljYWxseSBoYXZpbmcgdGhhdCBiYWQgcGVyaW9kIGZvciB0aGUgZW50aXJlIHllYXIuIApWZW51ZXMgbXVzdCBsb2RnZSBhIHN0YXRlbWVudCBlYWNoIHllYXIgZGV0YWlsaW5nIGNvbW11bml0eSBiZW5lZml0cyBlcXVhbCB0byBhdCBsZWFzdCA4LjMzIHBlciBjZW50IG9mIHRoZWlyIGdhbWluZyBtYWNoaW5lIHJldmVudWUuIApJIGRvbnQgdGhpbmsgaXRzIGEgZ29vZCBoYWJpdCB0byBiZSBzdGFydGluZyB3aXRoLiBJIGNhbiBhcHByZWNpYXRlIHRoZSBkZXNpcmUgdG8gZ28gZmFzdCwgZmVlbCB0aGUgZnJlZWRvbSBhbmQgcG93YWggZXRjLiAKVGVycnkgcGFzc2lvbnMgaW4gbGlmZSB3ZXJlIHdvcmssIGhpcyBjaGlsZHJlbiwgZ3JhbmRjaGlsZHJlbiBhbmQgaGlzIDYgWW9ya2llczsgaGlzIGJlc3QgZnJpZW5kIGJlaW5nIExpbGx5LiBIZSBncmVhdGx5IGxvdmVkIGhpcyBmYW1pbHkgYW5kIHRha2luZyBjYXJlIG9mIGV2ZXJ5b25lIHdpdGggVG9wIFF1YWxpdHkgYW5kIFRoZSBCaWdnZXN0IGFuZCBCZXN0IG9mIGV2ZXJ5dGhpbmcuIEhlIHdhcyBhbiBpbmNyZWRpYmx5IGdlbmVyb3VzIG1hbiB3aXRoIGEgaGVhcnQgb2YgZ29sZC4gVGVycnkgbG92ZWQgdG8gY29vayBmb3IgdGhlIGZhbWlseSwgd2hldGhlciBpdCBiZSB0aGUgYnJlYWtmYXN0IGNhc3Nlcm9sZSBhbmQgZnJpZWQgcG90YXRvZXMgb24gQ2hyaXN0bWFzIG1vcm5pbmcsIGEgc3VtbWVyIGNvb2tvdXQgb3IganVzdCBhIFN1bmRheSBkaW5uZXIuIFRlcnJ5IGxvdmVkIHRvIHBsYXkgY2FyZHMgb24gRnJpZGF5IG5pZ2h0cyB3aXRoIGhpcyBtb3RoZXIgYW5kIHNpYmxpbmdzLCBoZSBhbHNvIGxvdmVkIHRvIGhhdmUgZmFtaWx5IGdhdGhlcmluZ3MgYXQgaGlzIGhvbWUgd2l0aCB0aGUgZW50aXJlIGZhbWlseS4gVGhlc2Ugb2NjYXNpb25zIHVzdWFsbHkgd2VyZSBzdXJyb3VuZGVkIHdpdGggYSBmZXcgdGFibGVzIG9mIHBva2VyLCBjYW5hc3RhIGFuZCBob3JzZSB0aGllZiwgYW5kIFRlcnJ5IGFsd2F5cyBmb3VuZCBhIHdheSB0byB3aW4uCldvbWVuIGFyZW4gY3JhenksIHRoZXkgYXJlIGp1c3Qgb2Z0ZW4gbm90IHRhdWdodCBob3cgdG8gY29tbXVuaWNhdGUgaW4gYW4gaG9uZXN0IGFuZCBoZWFsdGh5IHdheS4gSWYgeW91IGVuY291cmFnZSB5b3VyIGdpcmxmcmllbmQgdG8gYmUgb3BlbiBhbmQgaG9uZXN0IGFuZCB0YWtlIGhlciBpbnB1dCBzZXJpb3VzbHkgcmF0aGVyIHRoYW4gZ2V0dGluZyBkZWZlbnNpdmUsIHlvdSBtYXkgYmUgc3VycHJpc2VkIGF0IGhvdyB0aGluZ3MgY2hhbmdlLi4gCjEgICAyIGZvciBkb21lc3RpYyBiZWVycywgaW1wb3J0ZWQgaXMgb2YgY291cnNlIG1vcmUgZXhwZW5zaXZlLgpGcmFncmFuY2VzIGFyZSBnZW5lcmFsbHkgZWZmZWN0aXZlIGZvciBwZW9wbGUgd2hvIGhhdmUgbWlsZCBmb3JtcyBvZiBkZXByZXNzaW9uIHRoYXQgZG8gbm90IHJlcXVpcmUgZHJ1Z3MuIApFdmVuIHRoZSBjaGVhcCBueWxvbiBjYW1waW5nIG9uZXMgYXJlIGdyZWF0LiAKQnV0IFBBQ3MgYXJlIG5vdCB2ZW5kb3JzIGFuZCBjYW5ub3QgcHJvdmlkZSBtb3JlIHRoYW4gJDUsMDAwIGEgeWVhciB3b3J0aCBvZiBzZXJ2aWNlcyBmb3IgYW55IHNpbmdsZSBjYW5kaWRhdGUsIGFjY29yZGluZyB0byBGRUMgcmVndWxhdGlvbnMuIElmIGNhbmRpZGF0ZXMgZ28gYWJvdmUgdGhpcyBhbW91bnQsIHRoZXkgbmVlZCB0byBzZWVrIGFkdmljZSBkaXJlY3RseSBmcm9tIHRoZSBGRUMuClBvbGljZSBzYWlkIGhlIHRoZW4gcHV0IGEgcGlzdG9sIGluIGhpcyBtb3V0aCBhbmQga2lsbGVkIGhpbXNlbGYuLiAKQWZ0ZXIgQW52aWsgaXMgdGhlIGZhbW91cyBZdWtvbiBSaXZlci4gVGhlIHRyYWlsIGlzIG92ZXIgdGhlIGZyb3plbiByaXZlciBmb3IgYWxtb3N0IDE1MCBtaWxlcyBmcm9tIEFudmlrIHRvIEthbHRhZy4gTXVzaGVycyBhcmUgcmVxdWlyZWQgdG8gdGFrZSBhbiA4IGhvdXIgcmVzdCBlaXRoZXIgYXQgU2hhZ2VsdWsgb3Igb25lIG9mIHRoZSBZdWtvbiBSaXZlciBjaGVja3BvaW50cy4gCkl0IG9mdGVuIGp1c3QgZG9lc24gd29yayBhdCBhbGwuIFRvIGJlIGZhaXIsIEkgaGF2ZW4gdXNlZCBBbmRyb2lkIEF1dG8gYXQgYWxsLiBJIGp1c3QgdXNlIGl0IGFzIGEgdGFibGV0LiAKQnV0IHNvbWVvbmUgd2hvIGRvZXMgbm90IGtub3csIGFuZCB0aGVuIGRvZXMgc29tZXRoaW5nIHdyb25nLCB3aWxsIGJlIHB1bmlzaGVkIG9ubHkgbGlnaHRseS4gClBQIHdhcyBmb3VuZGVkIGJ5IHByaW1hcmlseSBieSBtaW5pc3RlcnMgb2YgRnJhbmNvIGdvdmVybm1lbnQuIEFuZCBpdCBmaXJzdCBsZWFkZXIsIE1hbnVlbCBGcmFnYSwgaGltc2VsZiBhZG1pdHRlZCB0byBvcmRlcmluZyBwb2xpdGljYWwgZXhlY3V0aW9ucyBhbmQgeWV0IGhlbGQgaGlnaCBvZmZpY2UgaW4gUFAgdW50aWwgMjAwNS4gUFAgcmVmdXNlcyB0byBjb25kZW1uIEZyYW5jbyBhbmQgaXQgaGFzIGhvbm91cmVkIGZhc2Npc3QgdG9ydHVyZXJzIGFuZCBOYXppIGNvbGxhYm9yYXRvcnMgc29tZXdoYXQgcmVjZW50bHksIGxpa2UgTWVsaXRvcyBNYW56YW5hcy4gTWF5YmUgZXZlbiBtb3JlIHJlY2VudGx5IGJ1dCB0aGlzIGlzIHRoZSBvbmUgSSBrbm93IG9mLgpFZW4gdm9sZ2VuZGUgc3RvcCB3YXMgR29ya3kgSG91c2U6IGVlbiBnZXZpZXJkZSBzY2hyaWp2ZXIgKHRqYSwgb29rIGRpZSBrZW5uZW4gd2lqIG5hdHV1cmxpamsgbmlldCkgbWFhciBpayB2cm9lZyBtaWogZWVyc3QgYWYgd2F0IHdpaiBpbiBkaXQgaHVpcyBtZXQgd2VsIGVlbiBoZWxlIG1vb2llIHR1aW4ga3dhbWVuIGRvZW4uIEJpbm5lbmluIHdhcyBoZXQgZWNodGVyIHZlcnJhc3NlbmQgbW9vaTogYXJ0IG5vdXZlYXUgdGVuIHRvcCwgbWV0IGdsYXNyYW1lbiAodmFuIHNjaGVscGVuIHBhcmVsbW9lciksIGVlbiBtb29pZSB0cmFwLCBvdWRlIG1ldWJlbGVuLC4gCkFsbCB0aGlzIHRhbGsgYWJvdXQgZGVlcCBhZGFwdGF0aW9uIGlzIGZyYW5rbHkgdGVycmlmeWluZy4gQmFzaWNhbGx5IHNjaWVudGlzdHMgd2hvIHNwZWFrIG9uIHRoaXMgYWxzbyBhbHdheXMgdGFsayBhYm91dCB1cyBiZWluZyBzY3Jld2VkIG92ZXIgYXMgYSBzcGVjaWVzIGFzIGFscmVhZHkgc2V0IGluIHN0b25lLCBhbmQgaXQgZGlzaGVhcnRlbmluZyBhbmQgcGFuaWMgaW5kdWNpbmcsIGxldCBhbG9uZSBlbm91Z2ggdG8gY2F1c2UgYSBkZXByZXNzaW9uLiBFc3BlY2lhbGx5IHdoZW4gaW4gdGhlIG5leHQgYnJlYXRoIHRoZXkgYmFzaWNhbGx5IHNob290IGRvd24gZXZlcnkgcG9zc2libGUgc29sdXRpb24uIApZb3UgbWlnaHQgZHJhdyB0aGUgc3BhZGVzIGZpcnN0LCBvciB0aGUgaGVhcnRzIGZpcnN0LiBUaGVyZSBhcmUgNHgzeDJ4MSBkaWZmZXJlbnQgb3JkZXJzIHRoZSBjYXJkcyBjYW4gY29tZSBpbi4gCkFzIGpvdXJuYWxpc3QgTWljaGFlbCBNYXkgZnJvbSB0aGUgVGV4YXMgT2JzZXJ2ZXIgcG9pbnRzIG91dCwgIlRoZXJlJ3MgYSBsb3Qgb2YgcGVvcGxlIGp1c3RpZnlpbmcgdGhpbmdzIGluIHRoaXMgc3RvcnkuIiBEYXJieSBoaW1zZWxmIGZhY2VzIGRpc3NvbmFuY2Ugd2l0aCBoaXMgaW50ZW50aW9ucywgYWx0aG91Z2ggaXMgbmV2ZXIgcmVtb3JzZWZ1bCwgbWFraW5nIGhpcyBwZXJzb25hbGl0eSBpbXBvc3NpYmxlIHRvIHN1bW1hcml6ZS4gClBsZWFzZSBkb24ndCBzaHkgYXdheSBmcm9tIGl0LiBJdCdsbCBiZSBnb29kIGZvciB5b3UgYW5kIHRob3NlIGFyb3VuZCB5b3Ugd2hvIGxvdmUgYW5kIGFkb3JlIHlvdS4gRXZlbiBpZiBpdCBzZWVtcyBsaWtlIG5vYm9keSdzIG91dCB0aGVyZSBhbnltb3JlLCB5b3UgaGF2ZSB0byB0cnkgZm9yIHlvdXJzZWxmLiAKQnVyZ2VyIEtpbmcgdGhlbiBtYWtlcyBhIGRvbmF0aW9uIGVxdWFsIHRvIHRoZSBhbW91bnQgb2Ygc2hhbXJvY2sgc2FsZXMgdGhleSBtYWRlLCBhbmQgdGhpcyBjb250cmlidXRpb24gaXMgY29uc2lkZXJlZCB0YXggZGVkdWN0aWJsZS4gU28gdGhleSBlbmQgdXAgaW4gdGhlIHNhbWUgdGF4IHNpdHVhdGlvbiBhcyB0aGV5IHdvdWxkIGhhdmUgYmVlbiBpbiBoYWQgdGhleSBub3QgcnVuIHRoZSBwcm9ncmFtIGF0IGFsbC4gClRoZSBwbGFuLCB3aGljaCBwcm9wb25lbnRzIGhvcGUgdG8gcmV2aXZlIGluIHRoZSBzZXNzaW9uIG5leHQgeWVhciwgaXMgc2VlbiBhcyBhbiBleHBhbnNpb24gb2YgZ2FtYmxpbmcgYW5kIGZhY2VzIG9wcG9zaXRpb24gZnJvbSBnYW1ibGluZyBvcHBvbmVudHMgYW5kIG90aGVyIGNvbXBldGl0b3JzLlRoZSAiZGVjb3VwbGluZyIgbW92ZW1lbnQgaGFzIGNyZWF0ZWQgYW4gb2RkIGFsbGlhbmNlIGJldHdlZW4gcmFjZXRyYWNrIGNhc2lubyBvcGVyYXRvcnMsIHdobyBzZWUgdGhlIHJhY2VzIGFzIGEgYnVyZGVuLCBhbmQgYW5pbWFsIHJpZ2h0cyBncm91cHMgb3V0IHRvIGVuZCBncmV5aG91bmQgcmFjaW5nIGFsdG9nZXRoZXIsIG11Y2ggYXMgdGhleSBzdWNjZWVkZWQgaW4gb3V0bGF3aW5nIGNvY2tmaWdodGluZyBzZXZlcmFsIHllYXJzIGFnby4gVGhlIGFuaW1hbCByaWdodHMgZ3JvdXBzIHNheSB0aGUgcmFjZXMgYW5kIHRoZSB0cmFpbmluZyBhcmUgY3J1ZWwgYW5kIHNheSBzb21lIGRvZ3MgdGhhdCB3ZXJlIHBvb3IgcmFjZXJzIGhhdmUgYmVlbiBldXRoYW5pemVkLiJXaGVuIGRlY291cGxpbmcgcGFzc2VzLCBpdCB3aWxsIGxlYWQgdG8gYSBzbG93IGFuZCBncmFkdWFsIGVuZCIgb2YgdGhlIGluZHVzdHJ5LCBzYWlkIENhcmV5IFRoZWlsLCBleGVjdXRpdmUgZGlyZWN0b3Igb2YgdGhlIGFudGkgcmFjaW5nIGdyb3VwIEdyZXkySyBVU0EuRG9nIHJhY2luZydzIHRyb3VibGVzIGFsc28gY291bGQgYmUgYSBwcmV2aWV3IG9mIHRoaW5ncyB0byBjb21lIGZvciB0aGUgaG9yc2UgcmFjaW5nIGluZHVzdHJ5LCB3aGljaCBpbiBzb21lIHN0YXRlcyBoYXMgaWRlbnRpY2FsIGxhd3MgdHlpbmcgaXQgdG8gY2FzaW5vIGdhbWJsaW5nLiAKRGljayB3ZW50IG9uIHRvIHJlY2VpdmUgaGlzIGxhdyBkZWdyZWUgZnJvbSBPc2dvb2RlIEhhbGwgYW5kIHdhcyBjYWxsZWQgdG8gdGhlIEJhciBvbiBKdW5lIDIzLCAxOTU1LiBIZSB3YXMgYXdhcmRlZCBoaXMgRG9jdG9yYXRlIG9mIExhdyBsYXRlciBpbiBoaXMgY2FyZWVyLiAKSSBkb24ga25vdyBpZiB0aGlzIHdpbGwgc3RpbGwgYmUgc2VlbiBidXQgSSBsZWF2ZSBoZXJlIG15IGN1cnJlbnQgaXNzdWUuCkdpdmUgaXQgYSBzaG90LCB5b3UgZ290IG5vdGhpbmcgdG8gbG9zZSBleGNlcHQgdGhlIGNvc3Qgb2YgYSB0YW5rIGFuZCB0aGUga25vd2xlZGdlIG9mIG5vdCBnb2luZyBiYWNrIHRoZXJlIGV2ZXIgYWdhaW4uCldoYXQgSSBncmFkdWFsbHkgbGVhcm5lZCwgdGhlIGhhcmQgd2F5LCB3YXMgdGhhdCBhIHN1Y2Nlc3NmdWwgdHJhZGVyIGJlY29tZXMgdGhlIGNhc2lubywgbm90IG9uZSBvZiB0aGUgcGxheWVycy4gSGUgZmluZHMgYW4gZWRnZSBhbmQgd29ya3MgaXQsIGxvb2tpbmcgZm9yIGNvbnNpc3RlbnQgc21hbGwgaW5jcmVhc2VzIGluIGVxdWl0eS4gCk9uY2UgYWdhaW4sIEkgZmVsdCBhcyBpZiB0aGUgZXhwZXJpZW5jZSBzaW1wbHkgd291bGRuIGV2ZXIgZW5kLiAKSXRzc3RyYW5nZXRvbWUgIDIxIHBvaW50cyAgc3VibWl0dGVkIDEwIG1vbnRocyBhZ28KSWFuIENyb3NieSBvZiB0aGUgQ2FsZ2FyeSBGaXJlIERlcGFydG1lbnQgc2F3IHRoZSBzaGlmdCBmaXJzdCBoYW5kLiBIZSdzIG9uIGEgY29tbWl0dGVlIG9mIHRoZSBJbnRlcm5hdGlvbmFsIEFzc29jaWF0aW9uIG9mIEZpcmUgRmlnaHRlcnMgdGhhdCBlc3RhYmxpc2hlcyBjcml0ZXJpYSBmb3IgdGhlIG1ha2Ugb3IgYnJlYWsgdG5lc3MgdGVzdC4KIkp1c3QgbGlrZSBpbiByZWFsIGxpZmUsIHdoZXJlIHlvdSBjYW4ndCBhbHdheXMganVkZ2Ugd2hvJ3MgYmlzZXh1YWwgYmFzZWQgb24gd2hvIHRoZXkgYXJlIGRhdGluZywiIHNheXMgSGF3a2lucywgIndlIHVuZGVyZXN0aW1hdGUgdGhlIHNpemUgb2YgdGhlIGNvbW11bml0eS4iLiAKV29yc3QgZmFudGFzeSBzdG9yeSBvZiB0aGUgcGFzdCBkZWNhZGUsIGhhbmRzIGRvd24uLiAKVmVyeSBoaWdoIGludGVuc2l0eSBleGVyY2lzZSBydW5zIG9uIGNyZWF0aW5lIHBob3NwaGF0ZSBhbmQgQVRQLiBUaGVzZSBhcmUgdmVyeSBsaW1pdGVkLCBvbmx5IGFsbG93aW5nIHN1cGVyIGludGVuc2UgYWN0aXZpdHkgZm9yIG9ubHkgdXAgdG8gMTAgc2Vjcy4gQW5hZXJvYmljIGdseWNvbHlzaXMgb25seSBnaXZlcyB5b3UgdHdvIG1pbnV0ZXMgb2YgbGVzcywgYnV0IHN0aWxsIHZlcnkgaW50ZW5zZSBhY3Rpdml0eS4gQnV0IHRoYXQgaXMgb25seSBmdWVsLiBUaGVyZSBhcmUgb3RoZXIgbXVzY3VsYXIgYW5kIG5ldXJvbG9naWNhbCBmYWN0b3JzIGluIGZhdGlndWUgYXMgd2VsbC4gCkl0IGEgd29uZGVyZnVsIHBsYXkgYW5kIGl0IGEgZ3JlYXQgcGxlYXN1cmUgdG8gZG8gaXQuIFdoYXQgYnJvdWdodCBoaW0gZnJvbSBDYXJyaWdzdG93biB0byBib2FyZCBGaWVsZCBIb2x5aGVhZCB0cmFpbj9uZXZlciBiZWxpZXZlIGl0LCBpdCB3YXMgdGhyb3VnaCBGYWNlYm9vayEgRHVmZnkgcmVwbGllcy4gCkRvbW9ua2F6dSB1CkFueXRpbWUgeW91J3JlIGRlY29yYXRpbmcgYSBwb2tlciByb29tLCBncmVlbiB1c3VhbGx5IGVuZHMgdXAgYmVpbmcgdGhlIG5vcm1hbCBjb2xvciBtb3N0IHBlb3BsZSB1c2UuIEhvd2V2ZXIsIG1hbnkgcGVvcGxlIG5ldmVyIGNvbWUgYWNyb3NzIGEgU3VpdGVkIEdyZWVuIFBva2VyIFRhYmxlIENsb3RoIHdpdGggYSBncmVhdCBsb29raW5nIHN0eWxlZCBwYXR0ZXJuIHdpdGggaGVhcnRzLCBjbHVicywgc3BhZGVzLCBhbmQgZGlhbW9uZHMuIApJIHdvdWxkIGxpa2UgdG8gc2VlIG1vcmUgYmFsYW5jZSB0aGVyZS4gSSB0ZW5kIHRvIGxpa2UgaGltIGFzIGEgcGVyc29uLCBidXQgZG9uIGFncmVlIGF0IGFsbCB3aXRoIGhpcyBwb3B1bGlzdCBhbnRpIGJ1c2luZXNzIHN0YW5jZS4uIApXZWFyaW5nIGNvbG9nbmUgb3IgYWZ0ZXJzaGF2ZSBjYW4gaGVscCB5b3UgZmVlbCBtb3JlIG1hc2N1bGluZSwgYnV0IHRoZXJlJ3MgYW4gYXJ0IHRvIGFwcGx5aW5nIGl0LiBNYXN0ZXJpbmcgdGhhdCBhcnQgbWVhbnMga25vd2luZyB0aGF0ICJ3ZWFyaW5nIGNvbG9nbmUiIGRvZXNuJ3QgZXF1YWwgImJhdGhpbmcgaW4gaXQuIiBXaGlsZSBsYWRpZXMgYXJlIGF0dHJhY3RlZCB0byBhIGdvb2Qgc21lbGxpbmcgbWFuLCBzb21lb25lIHdobydzIGRvdXNlZCBoaW1zZWxmIGluIGNvbG9nbmUgY2FuIGJlIGEgdHVybiBvZmYsIG5vIG1hdHRlciBob3cgZ29vZCBsb29raW5nIGhlIGlzLiBUb28gbXVjaCBmcmFncmFuY2UgY2FuIGFsc28gYmUgaXJyaXRhdGluZyBpbiBvdGhlciB3YXlzOiBDbyB3b3JrZXJzIHdpbGwgc3RhcnQgYXZvaWRpbmcgdGhlIHBlcnNvbiB0aGV5IGNhbiBzbWVsbCBmcm9tIHRoZSBoYWxsd2F5LCBhbmQgeW91ciBidWRkaWVzIHdvbid0IHdhbnQgdG8gYmUgc3R1Y2sgaW4gYSBjYXIgd2l0aCB5b3Ugb24gcm9hZCB0cmlwcy4gU29tZXRpbWVzIGl0J3MgYWN0dWFsbHkgaGFybWZ1bCB0byBwZW9wbGUncyBoZWFsdGggYXMgd2VsbDogRXhjZXNzaXZlIGFtb3VudHMgb2YgZnJhZ3JhbmNlIGNhbiBldmVuIHRyaWdnZXIgbWlncmFpbmVzIG9yIGNhdXNlIGFzdGhtYSBhdHRhY2tzIGFuZCBhbGxlcmdpYyByZWFjdGlvbnMgaW4gc29tZSBwZW9wbGUuCk9uIHBsYWNlIHNlcyByYWNpbmVzIGRhbnMgbCBzYSBjaW1lIGRhbnMgbCBjZW50cmFsZSBkZSBsYSB5b3VydGUgcGFyIGxhcXVlbGxlIHBhc3NlIGxhIGZ1bWUgZHUgZm95ZXIuIENlIGJvdWxlYXUsIFVkZXNoaSBidXJrYW4sICBsZSBnYXJkaWVuIGRlIGxhIHBvcnRlICwgcmVzdGVyYSBkZmluaXRpdmVtZW50IGRhbnMgbGEgeW91cnRlIGRlIGwgQ2UgYm91bGVhdSBjZW50cmFsIGVzdCByZWxpICB0b3VzIGxlcyBhdXRyZXMgcGFyIHVuIHByZW1pZXIgcnViYW4gYmxldSBldCB1biBhdXRyZSByb3VnZSBxdWkgbWUgcmFwcGVsbGVudCwgYWxsZXogc2F2b2lyIHBvdXJxdW9pLCBsZXMgZGV1eCBjb3VyYW50cyBkZSBzdmUsIGwgZXQgbGEgZGVzY2VuZGFudGUsIGV0IGRvbnQgSmFjcXVlcyBCcm9zc2Ugbm91cyBkaXQgcXUgIHN5bWJvbGlzZW50IGwgdm9pZSBwYXIgbGFxdWVsbGUgbGUgY2hhbWFuIGF0dGVpbmRyYSBsYSByc2lkZW5jZSBzdXByYXRlcnJlc3RyZSBkZXMgZXNwcml0cyAgKDIpLCBjZSBxdWkgZXN0IGZvcnQgcGVydGluZW50IHB1aXNxdWUgbCBuIHBhcyBhdXRyZSBjaG9zZSBxdSBwYXNzZXJlbGxlIGVuIGRmaW5pdGl2ZSAobm90b25zIGF1IHBhc3NhZ2UgcXVlIGxlcyBjb3VsZXVycyBibGV1IGV0IHJvdWdlIHBldXZlbnQgYXVzc2kgdm9xdWVyIGxhIEx1bmUgZXQgbGUgU29sZWlsKS4gCkhlIGRpZCB0aGlzIGJlY2F1c2UgaGUgY291bGRuIHByb3ZpZGUgZm9yIGEgcHJlZ25hbnQgTWFyZ2Ugd2l0aCB3aGF0IGhlIHdhcyBlYXJuaW5nIGF0IGhpcyBjdXJyZW50IGpvYiBvZiBzcGlubmluZyB0aGUgZmFuIG9mIGEgd2luZG1pbGwgYXQgdGhlIGxvY2FsIG1pbmkgcHV0dCBjb3Vyc2UuIApIZSdzIGhvcGluZyB0aGUgZWZmb3J0IGdhaW5zIG1vcmUgdHJhY3Rpb24gdGhpcyB5ZWFyLCBub3cgdGhhdCBvbmxpbmUgcG9rZXIgaXMgdW5kZXIgcmV2aWV3IGJ5IGxhd21ha2VycyBpbiBQZW5uc3lsdmFuaWEsIENhbGlmb3JuaWEsIE5ldyBZb3JrIGFuZCBvdGhlciBzdGF0ZXMuIFBybyBwb2tlciBpbnRlcmVzdHMgaGF2ZSBkb25hdGVkIG1vcmUgdGhhbiAkMjAsMDAwIHRvIEJhcnRvbiBzaW5jZSAyMDEzLiAKVGhlIERlbHRpbiBSb3lhbGUsIGZvciBleGFtcGxlLCBob3N0cyB0aGUgRFIgQ3VwIFRvdXJuYW1lbnQgYXQgaXRzIFBva2VyIFJvb20gZnJvbSBTZXB0ZW1iZXIgMjUgMjgsIHdpdGggYSB0b3RhbCBndWFyYW50ZWVkIHBvdCBvZiBSczI5IGxha2guIFRoZSBoaWdoIHJvbGxlciBldmVudHMgaGF2ZSBhIG1pbmltdW0gcG90IG9mIFJzMTYgbGFraC4gVGhlIFBva2VyIFJvb20gaGFzIDEzIHBva2VyIHRhYmxlcyB3aXRoIHRoZSBkZWFsZXJzIHRyYWluZWQgdG8gaW50ZXJuYXRpb25hbCBzdGFuZGFyZHMgV2l0aCBjYXNpbm9zIG9mdGVuIGluIHRoZSBuZXdzIGZvciB0aGUgd3JvbmcgcmVhc29ucywgY2FzaW5vIG9mZmljaWFscyBhcmUgcmVsdWN0YW50IHRvIHNwZWFrIGFib3V0IHRoZSBoYXBwZW5pbmdzIGluc2lkZSBvciB0aGVpciBjbGllbnRlbGUuIApZb3UgY2FuIHBsYXkgQmxhY2tqYWNrIGFuZCBUZXhhcyBIb2xlbSBvbiB0aGUgc2FtZSB0YWJsZS4gCkRBTExBUyBhbmQgTkVXIFlPUksgQ0lUWSwgT2N0LiAyMiwgMjAxNiAgIEFUIEluYy4gKE5ZU0U6VCkgYW5kIFRpbWUgV2FybmVyIEluYy4gCkhlciBtb3RoZXIsIExvcmVuYSBUcnVxdWksIGxpZXMgYmFjayBxdWlldGx5IGJleW9uZCBhIGRyYXBlLCB1bmFibGUgdG8gd2l0bmVzcyB0aGlzIGJpcnRoLiBCdXQgdGVhcnMgc2xpcCBvdXQgb2YgdGhlIHNpZGVzIG9mIGhlciBleWVzIGFzIHNoZSBsaXN0ZW5zIHRvIGhlciBiYWJ5LgpBIDMwIHllYXIgcHJhY3RpdGlvbmVyIG9mIHlvZ2EgYW5kIGEgdHJhaW5lZCBjaGlyb3ByYWN0b3Igd2l0aCBhIGxvbmcgc3RhbmRpbmcgZm9jdXMgaW5iaW9tZWNoYW5pY3Mgb2YgdGhlIHNwaW5lLCBJIGNhbiBob25lc3RseSBzYXkgdGhhdCBhIDE1IG1pbnV0ZSBmb3VuZGF0aW9uIHRyYWluaW5nIGV4ZXJjaXNlIHByb2dyYW0gd2lsbCBhY3RpdmF0ZSBhbmQgc3RyZW5ndGhlbiBtdXNjbGVzIGxlZnQgY29tcGxldGVseSB1bnRvdWNoZWQgaW4gYSA5MCAgbWludXRlIHlvZ2Egd29ya291dC4gQXJlIGEgZmV3IHF1b3RlcyBmcm9tIERyLiBHb29kbWFuIGhpbXNlbGYsIHRoZSBmaXJzdCBvbmUgcmVnYXJkaW5nIHRoZSBvbmUgb2YgdGhlIHByaW1hcnkgZXhlcmNpc2VzIGZlYXR1cmVkIGluIHRoaXMgdHJhaW5pbmcgc3lzdGVtOi4gClBldGVyIEphY2tzb25zIFRoZSBGZWVibGVzIGlzdCBlaW5lIFNhY2hlLCBlaW5lIGcgYW5kZXJlLiBQb2xhbnNraXMgTWlldGVyIGF1ZnRydWcga3VyemVyaGFuZCBUaWVybWFza2VuIGF1ZnNldHplbiBsaWUgZWhlIGVyIHNpZSBpbiBkaWUgQmFzdGlsbGUgZGVzIDE4LiAKQ29tcGxldGUgcmUgc2V0dGxlbWVudCB0b29rIHBsYWNlIGluIDE5NTUgd2hlbiB0aGUgaXNsYW5kIHdhcyB0b3RhbGx5IHJlbm92YXRlZCBhbmQgY29udmVydGVkIGludG8gdGhlIHdvcmxkIG1vc3QgdW51c3VhbCAidG93biBob3RlbCIuIApLcmlzcHlrcmVtZWRvbnV0cyB1Ckl0IGhhcyBiZWVuIGFuIGhvbm9yIHRvIHNlcnZlIHlvdSBpbiB0aGUgQ2FiaW5ldCBhcyBBZG1pbmlzdHJhdG9yIG9mIHRoZSBFUEEuIFRydWx5LCB5b3VyIGNvbmZpZGVuY2UgaW4gbWUgaGFzIGJsZXNzZWQgbWUgcGVyc29uYWxseSBhbmQgZW5hYmxlZCBtZSB0byBhZHZhbmNlIHlvdXIgYWdlbmRhIGJleW9uZCB3aGF0IGFueW9uZSBhbnRpY2lwYXRlZCBhdCB0aGUgYmVnaW5uaW5nIG9mIHlvdXIgQWRtaW5pc3RyYXRpb24uIFlvdXIgY291cmFnZSwgc3RlYWRmYXN0bmVzcyBhbmQgcmVzb2x1dGUgY29tbWl0bWVudCB0byBnZXQgcmVzdWx0cyBmb3IgdGhlIEFtZXJpY2FuIHBlb3BsZSwgYm90aCB3aXRoIHJlZ2FyZCB0byBpbXByb3ZlZCBlbnZpcm9ubWVudGFsIG91dGNvbWVzIGFzIHdlbGwgYXMgaGlzdG9yaWNhbCByZWd1bGF0b3J5IHJlZm9ybSwgaXMgaW4gZmFjdCBvY2N1cnJpbmcgYXQgYW4gdW5wcmVjZWRlbnRlZCBwYWNlIGFuZCBJIHRoYW5rIHlvdSBmb3IgdGhlIG9wcG9ydHVuaXR5IHRvIHNlcnZlIHlvdSBhbmQgdGhlIEFtZXJpY2FuIHBlb3BsZSBpbiBoZWxwaW5nIGFjaGlldmUgdGhvc2UgZW5kcy4KTm9ib2R5IGNhcmVzLiBUaGV5IGFyZSB0aGVpciBmb3IgdGhlbXNlbHZlcywgbm90IGZvciB5b3UuIApCdXQgQ2FuYWRpYW5zIHVuZGVyc3RhbmQgb3VyIHNpdHVhdGlvbi4gVGhleSB1bmRlcnN0YW5kIHRoYXQgYXMgQW1lcmljYW5zIHdlIHdvdWxkIGhhdmUgdHJvdWJsZSBnZXR0aW5nIHRoZSB2YWNjaW5lIGF0IGhvbWUsIHNpbmNlIHRoZSBVUyBpcyBtb3JlIDNyZCBXb3JsZCB0aGFuIGZpcnN0IHdoZW4gaXQgY29tZXMgdG8gaGVhbHRoIGNhcmUuIApHb29kIGNvbnRyYWN0cyBhcmUganVzdCBhbiBpbXBvcnRhbnQgc3RhcnRpbmcgcG9pbnQgYnV0IHRoZW4geW91IGhhdmUgdG8gcGxheSB5b3VyIGNhcmRzIHByb3Blcmx5LiBDbG9zaW5nIGFueSBvZiB0aGVzZSB0aHJlZSBkZWFscyB3YXMgbm90IGEgd2FsayBpbiB0aGUgcGFyay4KSnVzdCByZWFkIHRoZSBwYXBlciwgZ3JvdW5kYnJlYWtpbmcgd29yay4gCk5ldmVyIGNvbnNpZGVyIGFzIHdhc3RlZCB0aGUgdGltZSB5b3Ugc3BlbmQgaW4gcHJheWVyLiBUYWtlIG91ciAzMSBEYXkgTWFycmlhZ2UgUHJheWVyIENoYWxsZW5nZSBUb2RheSBKb2luIFRoZSBUaG91c2FuZHMgVGhhdCBIYXZlIEFscmVhZHkgRXhwZXJpZW5jZWQgVGhlIERpZmZlcmVuY2UuIElmIHNvLCB3cml0ZSBkb3duIGEgcGxlZGdlIG9mIGNvbW1pdG1lbnQgdG8gcHJheSBmb3IgYW5vdGhlciBtb250aCBhYm91dCB0aG9zZSBwYXJ0aWN1bGFyIHRoaW5ncy4gCkxBWUlORyBUSEVSRSBNT1VUSCBPUEVOIERST09MSU5HIEFTIFNIRSBEUk9PTElORyBBTEwgT1ZFUiBNWSBDT0NLLiBJIEpVU1QgU05PUklORyBUSEVSRSBHSEdIR0hHSEdIRyBBTkQgU0hFIEdFVFMgUElTU0VELiAKSXQgaW5mZWN0ZWQgYWxsIHRoZSBtYWpvciBzcG9ydHMgYW5kIGl0IGR1bWIgY2F1c2UgaXQgb3JnYW5pemF0aW9ucyB0cnlpbmcgbm90IHRvIGdldCBvbiB0aGUgYmFkIHNpZGUgb2Ygb3RoZXIgcG90ZW50aWFsIGZyZWUgYWdlbnRzIGluIHRoZSBmdXR1cmUsIGFuZCBJIGhhdGUgaXQuIFBhcnQgb2YgYmVpbmcgYSBmYW4gaXMgdGhhdCB5b3UgdGVhbSB0aGUgYmVzdCBhbmQgZXZlcnlvbmUgZWxzZSBjYW4gc3VjayBpdCBhbmQgd2hlbiBzb21lb25lIGRvZXNuIHdhbm5hIGJlIG9uIHlvdSB0ZWFtIHRoZW4gdGhleSBjYW4gc3VjayBpdCB0b28gKFByb3ZpZGVkIGEgZmFpciBvZmZlciBpcyBtYWRlIG9mIGNvdXJzZSkuIApJIG5vIGxvbmdlciBnb2luZyB0byBiZSBnb2luZyBmb3IgdmFsdWUgYXMgdGhlIFBGUiB3aXRoIGhhbmRzIGxpa2UgQXggKEFRLCBBSiwgZXRjLikgYnV0IHdpbGwgd2FudCB0byBnZXQgYSBsYXJnZXIgYW1vdW50IG9mIHZhbHVlIGZyb20gdGhlIHJhbmdlIEkgYW0gc3RpbGwgYmV0dGluZyAobGlrZSBBQSwgS0ssIEEyKS4uIApUaGlzIHdhcyBhIGdyZWF0IGJvYXJkIHRvIGRvIGl0IG9uIGJlY2F1c2Ugc29tZW9uZSBpcyBnb2luZyB0byBiZXQgdGhlIGRyYXcgb3IgQSB0aHJlZSBoYW5kZWQgd2hlbiBJIGNvdWxkIGJlIDNiZXR0aW5nIGZhaXJseSBsaWdodCBzb21ldGltZXMgcHJlIChiYWxhbmNlIHlvdXIgcmFuZ2VzKS4gSWYgTVAgcGxheWVyIGhhZCBhIGRlZXBlciBzdGFjayBJIHB1dCBpbiBhIHNtYWxsZXIgcmFpc2UuIEhvd2V2ZXIsIGhlIGRpZG4gaGF2ZSBtdWNoIGZvbGQgZXF1aXR5IGFuZCBJIGZlbHQgSSBjb3VsZCBnZXQgb3RoZXIgcGxheWVyIHRvIGNhbGwgcHJldHR5IHdpZGUuIApZb3UgZG8gdGhpbmdzIG92ZXIgc2VhcyB0byBzdXJ2aXZlLCB0aG9zZSB0aGluZ3Mgc2F2ZSB5b3VyIGxpZmUuIFdoZW4geW91IGdldCBob21lIHlvdSBkb24gbmVlZCB0aG9zZSBza2lsbHMgYnV0IHlvdSBjYW4ganVzdCB0b3NzIHRoZW0gYXNpZGUgYmVjYXVzZSB5b3UgZmxldyBhY3Jvc3MgdGhlIG9jZWFuLiAKTm8geW91IGRvbiB1bmRlcnN0YW5kLiBFYXRpbmcgdGhlIGxlYWYgcmVkdWNlcyB0aGUgbnVtYmVyIG9mIG51dHJpZW50cyB5b3UgYWJzb3JiLiAKVGhlIGFydGljbGUncyBtZXJpdCBpc24ndCBpbiBpdHMgYWJpbGl0eSB0byBtYWtlIHN1cmUgaXQgYmFsYW5jZXMgbWVhbiB0aGluZ3Mgc2FpZCBhYm91dCBTaGFwaXJvIHdpdGggbmljZSB0aGluZ3MuIApJbiB0aGUgbG9uZyBydW4geW91IHdvdWxkIHdhbnQgdGhyZWVzIGV2ZXJ5IHRpbWUsIGFuZCB5b3UsZCBtYWtlIC4wMiUgcHJvZml0LCBidXQgdGhhdCBhbW91bnQgb2YgaGFuZHMgaXNuJ3QgcG9zc2libGUgYW5kIHRoZSBwcm9maXQgaXMgbmVnbGlnaWJsZS4gClBsdXMsIHdoZW4gd2UncmUgZG9uZSB1c2luZyBpdCB3ZSBzaW1wbHkgZm9sZCBldmVyeXRoaW5nIG92ZXIgYW5kIGl0IGxvb2tzIGxpa2UgYSB0YWJsZSB5b3Ugd291bGQgcHV0IG1hZ2F6aW5lcyBvbiBhbmQgcGljdHVyZXMgb2YgeW91ciBmYW1pbHkgb24uIEluIHNob3J0IHdlIGFic29sdXRlbHkgbG92ZSB0aGUgNiBpbiAxIENhc2lubyBHYW1pbmcgVGFibGUgRnVybml0dXJlLiAKV2UgZ290IG9mZmljaWFsbHkgZW5nYWdlZCA5IG1vbnRocyBmcm9tIG91ciBmaXJzdCBkYXRlLiAKU2V0dGluZyBhc2lkZSBpdHMgYWRkaWN0aXZlIHF1YWxpdGllcywgY2hhcml0eSBnYW1ibGluZyBoYXNuJ3QgcHJvdmVuIHRvIGJlIGEgcHJvYmxlbSBmb3IgcG9saWNlIGluIG9uZSBHZW5lc2VlIENvdW50eSBjb21tdW5pdHkuIEx1Y2t5J3MgUG9rZXIgUm9vbSBvcGVyYXRlcyBvbiBOLiBHZW5lc2VlIFJvYWQsIGxlc3MgdGhhbiBhIG1pbGUgZnJvbSB0aGUgR2VuZXNlZSBUb3duc2hpcCBwb2xpY2Ugc3RhdGlvbi4gVG93bnNoaXAgUG9saWNlIENoaWVmIFRvZGpmb3JlbiA3LzMvMDkgY3EgU29yZW5zb24gY2FsbGVkIHRoZSB2ZW51ZSBhICJjb250cm9sbGVkIGVudmlyb25tZW50LiIgIldlIG1pZ2h0IGhhdmUgaGFkIGEgY2FsbCBvciB0d28sIGJ1dCBub3QgYW55dGhpbmcgc2lnbmlmaWNhbnQsIiBoZSBzYWlkLiAKSGUgZXhwZWN0ZWQgdG8gdGVzdGlmeSB0aGF0IGhlIGhlYXJkIGEga25vY2sgb24gaGlzIGJhY2sgZG9vciBhbmQgd2hlbiBoZSBvcGVuZWQgaXQsIGV4cGVjdGluZyBoaXMgZ2lybGZyaWVuZCwgZm91ciBzdHJhbmdlcnMgY2FtZSBpbiBhbmQgZGVtYW5kZWQgbW9uZXksIFRoaWJhdWx0IHNhaWQuIApQcm9kdWN0aW9uIHdhcyBmaXJzdCBzdGFnZWQgbGFzdCBKdWx5IGFuZCBoYXMgaGFkIGEgZ3JlYXQgcmVzcG9uc2UgZnJvbSBjcml0aWNzIGFuZCBhdWRpZW5jZXMgYWxpa2UuYmVlbiBhYnNvbHV0ZWx5IHRlcnJpZmljLCB3ZSBoYWQgZ3JlYXQgd3JpdGUgdXBzIGFuZCBhdWRpZW5jZXMgaGF2ZSByZWFsbHkgbG92ZWQgaXQsIER1ZmZ5IGVudGh1c2VzLiAKSSBvbmx5IHdlaWdoIGFib3V0IDE0NSBwb3VuZHMuIEhlIGtpY2tlZCBtZSBpbiB0aGUgaGVhZCwgYW5kIEkgaW1tZWRpYXRlbHkgd2VudCBibGluZCBpbiBteSByaWdodCBleWUuIApNYWtlcyBzZW5zZSBJIGd1ZXNzLiBCdXQgZ29kIGRhbW4gaWYgaXQgaXNuIGZydXN0cmF0aW5nLiAKWW91IGRvIG5vdCBoYXZlIHRvIG1ha2UgYSB0b3VybmFtZW50IGNvbnRyaWJ1dGlvbiwgaG93ZXZlciB0aGUgcHJpemUgZnVuZCBpcyBzbWFsbCBhbmQgeW91IHdvdWxkIGhhdmUgbWFueSBjb21wZXRpdG9ycy4gVGhlcmUgYXJlIGFsc28gImd1YXJhbnRlZWQiIHRvdXJuYW1lbnRzIHdpdGggZml4ZWQgcHJpemUgcmVnYXJkbGVzcyBvZiB0aGUgbnVtYmVyIG9mIHBsYXllcnMgKHNvIHlvdSBhcmUgc3VyZSB0byBnZXQgbWluaW11bSBwcml6ZSBmdW5kKS4uIApUaGVyZSBhcmUgY3VycmVudGx5IDE4IGxpY2Vuc2VkIG1hc3NhZ2UgZXN0YWJsaXNobWVudHMgaW4gSGVuZGVyc29uLCBzYWlkIE1hcmdhcmV0IEdsYWQsIHRoZSBjaXR5J3Mgc3VwZXJ2aXNpbmcgYnVzaW5lc3MgbGljZW5zZSB0ZWNobmljaWFuLiBSZWZsZXhvbG9neSBpc24ndCBhIHNlcGFyYXRlIGJ1c2luZXNzIGxpY2Vuc2UgY2F0ZWdvcnksIGJ1dCB0aGF0IHdvdWxkIGNoYW5nZSB1bmRlciB0aGUgb3JkaW5hbmNlLCBhcyB3b3VsZCB0aGUgZmVlIHN0cnVjdHVyZXMgZm9yIGJvdGggdHlwZXMgb2YgYnVzaW5lc3Nlcy4KSGUgc2FpZCBoZSB3YXMgc28gaGFwcHkgdGhleSBnb3QgdGhpcyBiZWQgYmVjYXVzZSBoZSB3YXMgc2xlZXBpbmcgb24gdGhlIGZsb29yIGFmdGVyIGhpcyBhaXIgYmVkIHBvcHBlZCBhbmQgaGlzIHBhcmVudHMgc2xlcHQgb24gdGhlIHNvZmEgd2hpY2ggd2FzIGEgZnV0b24uIApCZSBzdXJlIHlvdSBhcmUgcmVzcG9uc2libGUgZW5vdWdoIGZvciBzdWNoIGEgY29tbWl0bWVudCEgT2ggYW5kIGluZm9ybSB5b3Vyc2VsZiBhYm91dCBhbGwgdGhlIG90aGVyIHBheW1lbnRzIHRoYXQgd2lsbCBiZSBtYW5kYXRvcnkgd2hlbiB5b3Ugb3duIHNvbWV0aGluZy4gYnVpbGRpbmcgb3duZXJzIGNhbiBiZSBmb3JjZWQgdG8gcGF5IGZvciBhIHJlbmV3YWwgb2YgdGhlIHN0cmVldCBpbiBmcm9udCBvZiB0aGUgaG91c2UsIHRvIHNvbWUgZGVncmVlLCBJIHRoaW5rLiBPciBiZXR0ZXIgaW5zdWxhdGlvbiBtaWdodCBiZSByZXF1aXJlZCBieSBsYXcgYXQgc29tZSBsYXRlciB0aW1lLCB0aGluZ3MgbGlrZSB0aGF0LgpNZXhpY28ncyBzcGFzIGNvbWJpbmUgZmFtaWxpYXIgYmVhdXR5IHRyZWF0bWVudHMgd2l0aCBpbmRpZ2Vub3VzIHJpdHVhbHMsIHVzaW5nIGxvY2FsIG1hdGVyaWFscyBsaWtlIGNhY3R1cywgdm9sY2FuaWMgYXNoLCBjaG9jb2xhdGUsIHZhbmlsbGEgYW5kIGhvbmV5LiAKU3RhZmYgcGhvdG8gYnkgRXJpZSBESU5PVk9UbyB0YXggb3Igbm90LgpDaGVyaXNoZWQgUGFwYSBvZiBLaWtpIFNpbmdoLiAKRGVubiBpc3QgZGllIEZpZ3VyIGVyc3QgcnVpbmllcnQsIGlzc3QgZXMgc2ljaCB2b3IgYWxsZW0gaWhuIENoaW5hIHYgdW5nZW5pZXJ0IGF1IHp1bSBIYXVwdGdhbmcgd2lyZCBnYW56ZXIgdG90ZXIgRnJvc2NoIGFuIFNhbGF0YmxhdHQga3JlZGVuenQuIApZb3UgbWlnaHQgY2FzdWFsbHkgaW52aXRlIGhpbSBvdmVyIHRvIGhhbmcgb3V0LCBtYWtpbmcgc3VyZSB0aGVyZSdzIGEgdHJheSBvZiB3YXJtIGNvb2tpZXMgb24gdGhlIGNvdW50ZXIgYXMgaGUgd2Fsa3MgaW4uIApXZWxsLCBqdXN0IGFib3V0IGV2ZXJ5dGhpbmcgYW5kIHllcyB3ZSBldmVuIGJvdWdodCBhIFN1aXRlZCBCcm9uemUgVGV4YXMgSG9sZGVtIFBva2VyIFRhYmxlIENsb3RoLiBBY3R1YWxseSBmaXZlIG9mIHRoZW0sIHR3byBmb3IgdGhlIHRhYmxlcyBhbmQgdGhlIHJlc3QgaW4gY2FzZSB0aGVpciBhcmUgYWNjaWRlbnRzIG9yIHRoZXkganVzdCBnZXQgb3ZlciB3b3JuLiAKTm8gc3VpdCBpcyByYW5rZWQgaGlnaGVyIHRoYW4gdGhlIG90aGVyIEZvdXIgb2YgYSBraW5kICAgRm91ciBjYXJkcyBvZiB0aGUgc2FtZSByYW5rLCB3aXRoIGEgZmlmdGggY2FyZCBvZiBkaWZmZXJlbnQgcmFuayBGdWxsIGhvdXNlICAgVGhyZWUgY2FyZHMgb2Ygb25lIHJhbmssIGFuZCB0d28gb2YgYW5vdGhlciByYW5rLiBBIGhhbmQgd2l0aCB0aHJlZSBzZXZlbnMgYW5kIHR3byBmaXZlcywgZm9yIGV4YW1wbGUsIHdpbGwgYmUgZGVzY3JpYmVkIGFzICJTZXZlbnMgZnVsbCBvZiBmaXZlcyIuIFRoaXMgd2lsbCBiZSByYW5rZWQgaGlnaGVyIHRoYW4gImZpdmVzIGZ1bGwgb2Ygc2V2ZW5zIiwgYXMgc2V2ZW5zIGFyZSB2YWx1ZWQgaGlnaGVyIHRoYW4gZml2ZXMuIApUaGUgb3RoZXIgYXNwZWN0IHdoaWNoIHNlZW1zIHRvIGJlIGEgbW9yZSBzeXN0ZW1pYyBlZmZlY3QsIHdoaWNoIEkgYmVsaWV2ZSBwZXJzb25hbGx5IHRvIGJlIHJlbGF0ZWQgdG8gZW5kb3JwaGluIHJlbGVhc2UuIEkgYmVsaWV2ZSB0aGVyZSBhcmUgc3R1ZGllcyB0aGF0IHNob3cgbmFsb3hvbmUgYmxvY2tpbmcgdGhlIGVmZmVjdHMgb2YgYWN1cHVuY3R1cmUgYW5hbGdlc2lhLgpXZWluc3RlaW4ncyBsYXd5ZXJzIHNheSBBc2hsZXkgSnVkZCdzIGFsbGVnYXRpb25zIHRoYXQgaGUgdHJpZWQgdG8gaHVydCBoZXIgY2FyZWVyIGFmdGVyIHNoZSByZWplY3RlZCBoaW0gc2V4dWFsbHkgYXJlIGJhc2VsZXNzLCBhbmQgdGhleSBoYXZlIGFza2VkIGEganVkZ2UgdG8gZGlzbWlzcyBoZXIgbGF3c3VpdCBhZ2FpbnN0IGhpbS4gCkkgZG9uIHJlYWxseSBrbm93Lk15IHVuc29saWNpdGVkIGFkdmljZSAgIDIgdGhpbmdzOk5vdGhpbmcgaGFzIGhlbHBlZCBtZSBtb3JlIHdpdGggYXBwZXRpdGUgcmVndWxhdGlvbiwgcG9ydGlvbiBjb250cm9sLCBlbmVyZ3ksIGFuZCBqdXN0IGZlZWxpbmcgbm9ybWFsIGFuZCBnb29kIHF1aXRlIGxpa2UgZ2V0dGluZyBlbm91Z2ggd2F0ZXIgZXZlcnlkYXkuIApJdCBub3QgYWJvdXQgYWdlLCBpdCBhYm91dCBsaWZlIGV4cGVyaWVuY2UuIApSZW1lbWJlciB0aGF0IHRoZXNlIGFyZSBwZW9wbGUncyBtb3RoZXJzLCBmYXRoZXJzLCBncmFuZHBhcmVudHMuIApMZXQgc2F5IHlvdSBwdXQgaW4gNTAwIGhhbmRzIGluIHlvdXIgbGFzdCBzZXNzaW9uLiAKT3RoZXIgdGhhbiB0aGF0IGhhZCBhIHRyaXAgb3ZlcnNlYXMgYnV0IG5vdGhpbmcgZWxzZS4uIApOb3cgeW91IGZpbmQgeW91cnNlbGYgdGhpbmtpbmcgYWJvdXQgdGhlIHF1ZXN0aW9uLCBidXQgeW91IHNheSBzb21ldGhpbmcgbGlrZSAiSSBoYWQgYmV0dGVyIGRheXMuIiBUaGVuIGxhdWdoIGFzIHlvdSB0cnkgdG8gcHVzaCB0aG9zZSB0aG91Z2h0cyBkZWVwIGRvd24gaW5zaWRlIG9mIHlvdS4gVGhlbiB5b3UgY29udGludWUgeW91ciBkYXkgYW5kIHNvbWUgamVyayBjdXRzIHlvdSBvZmYgb24gdGhlIGZyZWV3YXkgYW5kIG1hbiBoZSByZWFsbHkgcGlzc2VkIHlvdSBvZmYgbGlrZSBoZSBtZWFudCB0byBkbyB0aGF0IHNoaXQsIHNvIHlvdSBmb2xsb3cgaGltIHRvIGhpcyBkZXN0aW5hdGlvbiBhbmQgeW91IGdldCBvdXQgYW5kIHlvdSBmaWdodCB0aGlzIGd1eSBpbiBmcm9udCBvZiBoaXMga2lkcyBhbmQgaXQgY29tcGxldGVseSBqdXN0aWZpZWQgaW4geW91ciBtaW5kIGJlY2F1c2UgaGUgZnVja2luZyBkaWQgdGhhdCBvbiBwdXJwb3NlLgpMYW5lIGZhbWlseSBoYWQgbGl2ZWQgaW4gdGhlIGFyZWEgZm9yIGRlY2FkZXMuIApQaGlsIHdhcyBwcm91ZCB0byBiZSB0aGUgVmljZSBQcmVzaWRlbnQgb2YgTmV3bWFuIEJyb3RoZXJzIExURCBmb3IgbWFueSB5ZWFycyBwcmlvciB0byBoaXMgcmV0aXJlbWVudC4gCldpdGggNyBpbiB0aGUgcmVsZXZhbnQgQXJ0LCB5b3UgbWlnaHQgZXZlbiBiZSBhYmxlIHRvIHVudHJhaW4gc29tZSBNZWRpdGF0aW9uLi4gClVwcGluZyB0aGUgc3R5bGUgYW50ZSwgdGhlIGJsb25kZSBib21ic2hlbGwgYm9vc3RlZCBoZXIgZnJhbWUgaW4gYSBwYWlyIG9mIHBvaW50ZWQgd2hpdGVzdGlsZXR0b3MgYW5kIGFjY2Vzc29yaXNlZCB3aXRoIGFuIGFycmF5IG9mIGdvbGQgamV3ZWxsZXJ5LCBkZWJ1dGluZyBhIG5lY2tsYWNlIGFuZCBlYXJyaW5ncyBmcm9tIHRoZSAyMDE5IFRpZmZhbnkgQmx1ZSBCb29rIGNvbGxlY3Rpb24uCk5vdyBhbGwgdGhpcyBoYXBwZW5zIHNvIGZhc3QgaXRzIHJlYWxseSBkaWZmaWN1bHQgdG8gZm9jdXMgb24gYSBzcGVjaWZpYyBwYXJ0IG9mIHRoZSByZWxlYXNlIGl0IGp1c3QgdGFrZXMgcHJhY3RpY2UuIEhvbmVzdGx5IHJpZ2h0IG5vdyBnaXZlbiB5b3VyIHJlbGVhc2UgdGltaW5nIHdpbGwgYmUgb2ZmIEkgdGhpbmsgdGhlIG1vcmUgZm9yZ2l2aW5nIHlvdXIgdGh1bWIgaG9sZSBpcyB0aGUgYmV0dGVyLCBidXQgdGhhdCBqdXN0IHBlcnNvbmFsIG9waW5pb24uIApTdGVwcGluZyBhc2lkZSBmcm9tIHByaWVzdHMsIHZpcnR1YWxseSBldmVyeW9uZSBpbiBzb2NpZXR5IG91Z2h0IHRvIG1ha2UgYSBwb2ludCBvZiBzYXlpbmcgdGhlaXIgZGFpbHkgcHJheWVycywgYW5kIGF0dGVuZGluZyBhIHdlZWtseSBjaHVyY2ggc2VydmljZS4gVGhhdCBpcyBzb21ldGhpbmcgdGhhdCBpcyBpbmdyYWluZWQgaW4gdGhlIGxpZmUgb2YgcGVvcGxlIGluIHRoYXQgdW5pdmVyc2UsIGJ1dCBwbGF5ZXJzIHJhcmVseSB3YW50IHRvIGVuZ2FnZSBpbiBpdC4KTm90IHN1cmUgaWYgaXQgYSByZWdpb25hbCB0aGluZyBidXQgbW9zdCBvZiB3aGF0IEkgc2VlIGFyZSBNb2JiIGJyYW5kIG9yIGEgdGhpY2sgYW5kIHNsaWdodGx5IGJhZ2d5IGxvb2suIAouQnV0LCBpZiBJIGNhbiB0YWtlIGEgc3RhYiBhdCBhIGxhcmdlciBwb2ludCBpZiBpdCBkaWZmaWN1bHQgdG8gaW1wb3NzaWJsZSB0byBoYXZlIGEgaGVhbHRoeSBkaXNjdXNzaW9uIGFib3V0IG1vZGRpbmcgb3IgcnVsZXMsIHRoZW4gd2Ugbm8gYmV0dGVyIG9mZiB0aGFuIGJlZm9yZSBMb00gd2FzIHNwbGl0IG9mZiBmcm9tIHRoZSBtYWluIHN1YnJlZGRpdC5EbyB5b3UgdGhpbmsgdGhhdCB0aGUgY2FzZT8gSWYgeW91IGhhZCB1bmxpbWl0ZWQgcG93ZXIsIHdoYXQgbWlnaHQgeW91IGNvbnNpZGVyIGRvaW5nIHRvIGltcHJvdmUgdGhlIHNpdHVhdGlvbj9ZZXMgICBNb2RlcmF0b3JzIHNob3VsZCBub3QgY29tZSBpbnRvIHRocmVhZHMgd2l0aCBjYXVzdGljYWxseSBzYXJjYXN0aWMgb3IgdW5oZWxwZnVsIGluZm9ybWF0aW9uICAgVGhhdCBwYXJ0IGlzIGNlcnRhaW5seSB0cnVlLiAKSW4gMTk2MiwgYWxvbmcgd2l0aCBGcmFuY2lzIENyaWNrIGFuZCBNYXVyaWNlIFdpbGthbnMsIGJ1dCBvbmx5IGFmdGVyIFdhdHNvbiBhbmQgQ3JpY2sgMTk1MyBkb3VibGUgaGVsaXggRE5BIG1vZGVsIHdhcyBleHBlcmltZW50YWxseSBwcm92ZW4uIFJvc2FsaW5kIEZyYW5rbGluIGRpZWQgaW4gMTk1OCBhbmQgdGhlIE5vYmVsIGNvbW1pdHRlZSBkbyBub3QgYXdhcmQgcHJpemVzIHBvc3RodW1vdXNseS4gCldpciwgZGllIFRya2VpIFZhdGVybGFuZCwgd29sbGVuIGF1c3JpY2h0ZW4gZGllIG9seW1waXNjaGUgU3BpZWxlIHZvbiBkaWUgU29tbWVyIGluIEFua2FyYS4gV2FydW0/IFdpciBoYWJlbiBub2NoIG5pZSBkaWUgU3BpZWxlIGdlbWFjaHQgdW5kIGltbWVyIHd1cmRlbiB2ZXJzcG90dGV0LCB3aWVzbyBuaWNoIDIwMjA/IEF1ZXJkZW0gd2lyIGhhYmVuIGluIFBva2VyIHZvbGwgdmVyem9ja3QgYW4gQWxiYW5lciwgYWxzbyBtc3NlbiB3aXIgQmV3ZXJidW5nIHNjaHJlaWJlbiB1bmQgZWluc2VuZGVuLiBBbHNvIGlzY2ggZXJ6aGwgZXVjaCBtYWwgdm9uIEFua2FyYS4gVm9sbCBnZWlsLiBEYSBnaWJ0cyBhbGxlcy4gRWluZSBTdGFkaW9uIHZvbiB1bnNlcmUgRnViYWxsLCB6d2VpIEhhbGxlbiBmciBkaWUgU2NoaW1tZWxrZWJhYiwgZ2FueiB2aWVsZSBSZXN0YXVyYW50IHp1bSBFc3NlbiB1bmQgdmllbGUgTW9zY2hlZW4gZnIgZGllIE1vc2xlbS4gV2lyIHNpbmQgZ3V0LCB3aXIgc2luZCB2b2xsIG5ldHQgdW5kIHdpciBzaW5kIGJlc3NlciBhbHMgZGllIFNwaWVlciB2b24gYW5kZXJlIExuZGVyLiBXZW5uIGlociBBbmthcmEgbmltbXQsIGRyZnQgaWhyIGtvc3RlbmxvcyBLZWJhYiBlc3Nlbi4gVW5kIGRhcyB3aXJkIHZvbGwgdG9sbCwgTWFubi4gTnVyIG1pdCBBbmthcmEgYWxsZXMgZ3V0Lm5zZXJlIEFpbWF0bGFuZCBpc2NoIHRvdGFsIGFuIGRpZSBBYmdydW5kIHdlZ2VuIGRpZXNlIGJzZSwgYnNlIEVyZGJlYmVuLiBXaXIgaW4gQWl0aSBzaW5kIHNlaHIgdHJhdXJpZyB1bmQgd29sbGVuIGV0d2FzIEF1Zm1lcmtzYW1rZWl0LiBOdW4sIHdpciB2b24gZGllIGxpZWJlIEluc2VsLCBiaXR0ZW4gZGllIE9seW1waXNjaGUgS29taXRlZSwgZGFzIHdpciB3ZW5pZ3N0ZW5zIGRpZSBPbHltcGlzY2hlIFNwaWVsZSBhdXN0cmFnZW4gZHJmZW4uIFNvbnN0IHNpbmQgd2lyIHdpcmtsaXNjaCwgd2lya2xpc2NoIHRvdC4gQml0dGUsIGJpdHRlLCB3aXIgbGllYmVuIGRpZSBTcG9ydCB1bmQgd2lyIGJyYXVjaGVuIEFuZXJrZW5udW5nIHdlZ2VuIGRpZSBnZWlsZSBJbGZzZ3VldGVyIHVuZCB3ZWlsIHdpciBlaW5lIHZlcnNjaG9udGUgU3RhZGlvbiBhYmVuLCBkYSBrYW5uIG1hbiBQbGFzY2ggbWFjaGVuIHVuZCBhdWNoIEtpY2sgbWFjaGVuIHVuZCBhdWNoIEJ0c2NoIHVuZCBzby4gQml0dGUsIGJpdHRlLCB3aXIgYnJhdWNoZW4gaWhyZSBJbGZlLCBkYW1pdCB3aXIgZGllIDIwMjAgT2x5bXBpYSBhdXN0cmFnZW4gZHJmZW4uIFBvcnQgYXUgUHJpbmNlIGJyYXVjaHQgaWhyZSBTdGltbWUsIEJJVFRFIQpZb3UgbmV2ZXIga25vdyBob3cgeW91ciBjaGlsZGhvb2QgZXhwZXJpZW5jZXMgd2lsbCBlZmZlY3QgeW91ciBhZHVsdCByZWxhdGlvbnNoaXBzISBJdCdzIGFsbCB3cml0dGVuIGluIHN1Y2ggYSB3YXkgbm90IHRvIHdlaWdoIHRoZSByZWFkZXIgZG93biwgaXQgYnVpbGRzIHVwIGFuZCBnaXZlcyBhbm90aGVyIHdheSB0byBzZWUgdGhpbmdzLiAKRmlnaHQgTGlrZSBBIEdpcmwgaXNuIHRoZSBmaXJzdCBvcmdhbml6YXRpb24gdG8gcmFpc2UgbW9uZXkgaW4gc3VwcG9ydCBvZiBwZWRpYXRyaWMgY2FuY2VyIHBhdGllbnRzLiBIb3dldmVyLCBpdCBhcmUgZGlmZmVyZW50IGluIHRoZSBmYWN0IHRoYXQgaXQgcmVjb2duaXplcyBhbmQgc3VwcG9ydCB0aGUgZmFtaWx5IGFzIGEgd2hvbGUuCkFyZSAyMSB5ZWFycyBvZiBhZ2UgaGF2ZSBlYXJuZWQgYSBoaWdoIHNjaG9vbCBkaXBsb21hIG9yIEdFRCBhcmUgYWJsZSB0byB3b3JrIGZsZXhpYmxlIGhvdXJzLCBpbmNsdWRpbmcgbmlnaHRzLCB3ZWVrZW5kcyBhbmQgaG9saWRheXMgYXJlIHdpbGxpbmcgdG8gYXR0ZW5kIHNldmVyYWwgd2Vla3Mgb2YgZnJlZSB0cmFpbmluZyBvbiB0aGVpciBvd24gdGltZSBwcmlvciB0byB0aGUgY2FzaW5vIG9wZW5pbmcgd2lsbCBzdWJtaXQgdG8gSG9yc2VzaG9lJ3MgZHJ1ZyB0ZXN0IGFuZCBiYWNrZ3JvdW5kIGNoZWNrIGZ1bGZpbGwgcmVxdWlyZW1lbnRzIHRvIGJlIGxpY2Vuc2VkIGJ5IHRoZSBPaGlvIENhc2lubyBDb250cm9sIENvbW1pc3Npb24KQSBjb25zdW1lciBwZXJzcGVjdGl2ZSwgZGVjaXNpb25zIGluIHRoZSBoZWFsdGggZG9tYWluIGFyZSBpbXBvcnRhbnQgZm9yIGluZGl2aWR1YWwgaGVhbHRoIGFuZCB0aGUgd2VsZmFyZSBvZiBzb2NpZXR5IGFzIGEgd2hvbGUsIHRoZSByZXNlYXJjaGVycyB3cml0ZS4gTWF5IGJlIGRyaXZlbiBieSBsYXkgdGhlb3JpZXMgdG8gbWFrZSBoZWFsdGggY2FyZSBjaG9pY2VzIHRoYXQgZG8gbm90IG1heGltaXplIGhlYWx0aCBvdXRjb21lIGZvciBleGFtcGxlLCBjaG9vc2luZyBoZWFsdGggcmVtZWRpZXMgb3V0IG9mIHBvdGVudGlhbGx5IGluYWNjdXJhdGUgcGVyY2VwdGlvbnMgb2YgdGhlaXIgYWN0aW9uIHJhcGlkaXR5IG9yIHRyZWF0bWVudCBmb2N1cywgb3IgbmVnbGVjdGluZyBoZWFsdGggcHJvdGVjdGl2ZSBiZWhhdmlvcnMgd2hlbiBjb25zdW1pbmcgV00gKHZzLiAKTGV0IHNlZSBob3cgbXVjaCB0aGUgUmVwdWJsaWNhbnMgbGlrZSB0aGluZ3Mgd2hlbiB0aGUgY291bnRyeSBnZXRzIGFuIGFjdHVhbCBjb21wZXRlbnQgcHJlc2lkZW50LCBIb3VzZSBhbmQgU2VuYXRlIHRoYXQgY2FuIGdldCB0aGluZ3MgZG9uZSwgYW5kIHdoZW4gdGhleSBnZXQgc3VwcmVtZSBjb3VydCBvcGVuaW5nLCBzaG92ZSBpdCB3aXRoIHRoZSBtb3N0IGxlZnQgbGVhbmluZyBqdWRnZSB0aGV5IGNhbiBmaW5kLi4gCkNyZWRpdCBzY29yZXMgaW1wcm92ZSBxdWlja2x5IHdoZW4geW91IHBheSBvZmYgY3JlZGl0IGNhcmQgZGVidDogTW9uZXkgTWF0dGVycyBDcmVkaXQgc2NvcmVzIGltcHJvdmUgcXVpY2tseSB3aGVuIHlvdSBwYXkgb2ZmIGNyZWRpdCBjYXJkIGRlYnQ6IE1vbmV5IE1hdHRlcnMgTXkgd2lmZSBhbmQgSSBoYWQgbW9yZSB0aGFuICQzMCwwMDAgaW4gY3JlZGl0IGNhcmQgZGVidCB0aGF0IHdlJ3ZlIGJlZW4gY2hpcHBpbmcgYXdheSBhdCBmb3IgdGhlIGxhc3QgeWVhci4gV2UgaG9wZSB0byBwYXkgb2ZmIHRoZSByZW1haW5pbmcgJDQsMDAwIG9yIHNvIHRoaXMgc3ByaW5nIHdoZW4gd2UgZ2V0IG91ciBpbmNvbWUgdGF4IHJlZnVuZC4gT3VyIGNyZWRpdCBzY29yZXMgdXNlZCB0byBiZSBwcmV0dHkgbG91c3kgICBpbiB0aGUgbG93IDYwMHMuIApJZiB5b3UgcGxheWVkIHBsYXkgbW9uZXkgcG9rZXIsIHlvdSBwcm9iYWJseSBrbm93IHdoYXQgSSBhbSB0YWxraW5nIGFib3V0LiAKOCBoYXMgYmVlbiBmbG9hdGVkIGFzIGxpa2VseSwgZ2l2ZW4gaXQncyB0aGUgZmVhc3Qgb2YgdGhlIEltbWFjdWxhdGUgQ29uY2VwdGlvbiwgYSBtYWpvciBmZWFzdCBkYXkgZm9yIHRoZSBjaHVyY2ggdGhhdCBob25vdXJzIE1hcnksIHRvIHdob20gYm90aCBzYWludGx5IHBvcGVzIHdlcmUgcGFydGljdWxhcmx5IGRldm90ZWQuIApZb3UgY2FuIHRlbGVwb3J0IGJ1dCBvbmx5IGFzIGZhciBhcyB5b3UgY2FuIHJ1biBob2xkaW5nIHlvdXIgYnJlYXRoLiBDb21pY3Mga2VlcCB1cHBpbmcgdGhlIHBvd2VycywgYnV0IGl0IG1vcmUgaW50ZXJlc3Rpbmcgd2hlbiBwb3dlcnMgaGF2ZSBsaW1pdHMuLiAKVGhlIG1vc3QgYWN0aXZlIGNvbXBvbmVudCBvZiB0aGUgcHJvZHVjdCBpcyBtZW50aG9sLCB3aGljaCBpcyB0b3hpYyBlc3BlY2lhbGx5IHdoZW4gc3dhbGxvd2VkIGluIGxhcmdlIGFtb3VudHMuIApJZiB5b3Ugd2FudCBjYXNpbm8gZ3JhZGUgcG9rZXIgY2hpcHMsIHRoZSBiZXN0IG1hdGVyaWFsIHRvIGZvY3VzIG9uIGlzIGNsYXkgYXMgdGhpcyBzZWVtcyB0byBiZSB0aGUgbW9zdCBzdGFuZGFyZCB0eXBlIG9mIGNoaXAgdXNlZCBpbiBjYXNpbm9zIHRvZGF5Li4gCkluIGZhY3QsIG5lYXJseSBldmVyeXRoaW5nIGluIHRoZSBzcGEgaXMgbWFkZSBvZiBoZW1wLCBmcm9tIHRoZSBjbG90aGVzIHRoYXQgdGhlIHN0YWZmIHdlYXJzIHRvIHJ1Z3Mgb24gdGhlIGZsb29yIHRvIHRoZSB3b29kIG9mIHRoZSBmcm9udCBkZXNrLiBUZWEgaW4gdGhlIHdhaXRpbmcgcm9vbTogaGVtcC4gSGFuZCBzb2FwIGluIHRoZSBiYXRocm9vbT8gT2YgY291cnNlLgpEbyB5b3UgYmFuayBhbG90IG9mIG92ZXJ0aW1lPyBUaGF0IGNvdWxkIGFsc28gYmUgc29tZXRoaW5nIHlvdSBuZWdvdGlhdGUsIHRoYXQgdGhlc2UgZ2V0IHRoaXMgdGltZSByZWNvZ25pemVkL3RyYWNrZWQgYW5kIHRoZW4gYWRkZWQgdG8geW91ciBob2xpZGF5IGNvdW50LgpXZSBoYWQgYSBndXkgdGhhdCB3b3VsZCBqdXN0IHB1dCB0aGUgc2xpcCBpbiBvdXIgZG93bnN0YWlycyBtYWlsYm94IHdpdGhvdXQgZXZlbiB0cnlpbmcgdG8gc2VlIGlmIHdlIHdlcmUgaG9tZS4gCkJ1dCBpZiB5b3UgY29tcGFyZSBpdCB0byB0aG9zZSBvdGhlciBnYW1lcyBJIG1lbnRpb25lZCB3aGljaCBoYWQgc2V2ZXJhbCB5ZWFycyBtb3JlIGRldmVsb3BtZW50IHRpbWUuIApFaXRoZXIgd2F5IHRob3VnaCwgb3VyIHF1aXpib3dsIGxlYWd1ZSBkZWZpbml0ZWx5IGhhZCBtb3JlIHRoYW4gb25lIGluc3RhbmNlIG9mICJ3ZWxsIHlvdSBtaWdodCBub3QgYmUgc2F5aW5nIGl0IGV4YWN0bHkgcmlnaHQgYnV0IHlvdSBjbGVhcmx5IGtub3cgdGhlIGl0ZW0vYW5zd2VyIGluIHF1ZXN0aW9uLCBzbyB5b3UgZ2V0IHRoZSBwb2ludC4iIFNvIHRoZSBsb3NzIG9mIHRoYXQgcG9pbnQgd2FzIHN0aWxsIGZydXN0cmF0aW5nLgpUaGlzIHR3byBOcGMgYXJlIG1lYW50IHRvIGJlIGtpbGxlcnMgdGhhdCBzZWVrIHJldmVuZ2UgZm9yIHRoZSB0b3J0dXJlLCBleHBlcmltZW50cywgYW1wdXRhdGlvbnMuIDMgaGVyZHMgb2YgMjYgMzAgc2hlZXAncywgbGFyZ2UgZmllbGQgb2YgY29ybiBhbmQgbWFueSBzbWFsbGVyIHNvdXJjZXMgbGlrZSBzaHJvb21zIGFuZCB3aWxkIGFuaW1hbHMuIFRoaXMgbWFrZXMgdGhpbmtzIGVhc2llciBmb3Igb3RoZXIgdmlsbGFnZSdzLiBUaGUgdHJhZGUgaXMgYWx3YXlzIG1hZGUgYnkgMiBkb3BwZWxnYW5nZXJzIChQb2xlbSBhbmQgRGFya2VtbykuIFRoZXkgYXJlIHdpbGxpbmcgdG8gdGFrZSBhbnl0aGluZyB0aGF0IHRoZWlyIHZpbGxhZ2UgbmVlZHMgYW5kIGNhbm5vdCBwcm9kdWNlIChsaWtlIHNwaWNlcywgaG9uZXksIGNsb3RoIGV0Yy4pCkdpbmFuZFNjYWxsb3BzICA2IHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwpJdCBnb29kIGFkdmVydGlzaW5nIGZvciB0aGUgY29tcGFuaWVzIGluY2x1ZGVkIGFuZCBvZnRlbiBpbmNsdWRlcyBjb3Vwb25zICh3aGljaCBlbmNvdXJhZ2UgeW91IHRvIGJyaW5nIHlvdXIgYnVzaW5lc3MgdG8gdGhlaXIgc3RvcmUgYmVjYXVzZSB0aGUgY291cG9ucyBvbmx5IHdvcmsgdGhlcmUpLiAKVmVyeSBwbGVhc2VkLiBJJ20gdmVyeSByZWxpZXZlZCB0aGF0IG15IG1hY2hpbmUgaGFuZGxlcyB0aGlzIHN1cGVybGlnaHR3ZWlnaHQgc3R1ZmYgd2l0aG91dCBnZXR0aW5nIGphbW1lZCB1cC4gSSBuZWVkIHRvIHByYWN0aWNlIHVzaW5nIG15IHJvbGxlZCBoZW0gZm9vdCBub3cgdGhhdCdzIGJlZW4gYSBkaXNhc3RlciB0aHVzIGZhci4gSSBxdWlsdGVkIHRoZSBBcGV4IHRvIHRoZSBsaW5pbmcgYW5kIGhhZCBiZXR0ZXIgbHVjayB3aXRoIHRoZSBBcGV4IHNpZGUgZG93bi4gU3VycHJpc2luZ2x5IGl0IGRpZCBub3QgZ2V0IGNhdWdodCBpbiBmZWVkIGRvZy4gSXQgZGlkIHNuYWcgb24gdGhlIHByZXNzZXIgZm9vdCBpZiBJIGhhZCBpdCBBcGV4IHNpZGUgdXAuIFByb2Igd2lsbCBtYWtlIGEgYmVhbmllIG9yIGhvb2Qgd2l0aCBsZWZ0IG92ZXJzLiBGb3IgdGhvc2UgSSB3aWxsIGp1c3QgcXVpbHQgdGhyb3VnaCBib3RoIGxheWVycwpBTlRJIGFsaWFzaW5nICAzIHBvaW50cyAgc3VibWl0dGVkIDE5IGhvdXJzIGFnbwpFeGNlcHQsIG5vLiAKUmVhZCB0aHJvdWdoIHRoZSB3aG9sZSBib29rIGJlZm9yZSB5b3UgZ2V0IGluIHRvbyBkZWVwLiAKSGlzIDE1IENlbnRyYWwgUGFyayBXZXN0ICAgYm9hc3RpbmcgbmV3IGNsYXNzaWNhbCBsaW1lc3RvbmUgc3RydWN0dXJlcyB0aGF0IG1hdGNoIHRoZSBncmFuZGV1ciAoYW5kIG9jY2FzaW9uYWxseSBiZWF1dHkpIG9mIGl0cyBlbGRlcnMgICB3YXMgdGhlIGZpcnN0IG9uZSB0byBhcnJpdmUgMTAgeWVhcnMgYWdvLiBGdXJ0aGVyIGJ1aWxkaW5ncyBieSBTdGVybiwgaW5jbHVkaW5nIDE1IENlbnRyYWwgUGFyayBXZXN0LCAzMCBQYXJrIFBsYWNlLCA3MCBWZXN0cnksIDIwIEVhc3QgRW5kIEF2ZS4gClN1cnZpdm9ycyBpbmNsdWRlIGhlciBkYXVnaHRlcnMsIEJvbkNpZWwgSm9obnNvbiBvZiBHcmFoYW0gYW5kIFNoZXJseW4gS2F5IFN0ZXBsZXIgYW5kIGh1c2JhbmQgRGVubmlzLCBvZiBQZW5uc3lsdmFuaWE7IHNvbiwgRHIuIFNjb3R0IEsuIApJZiB5b3UgZG8gbm90IGhhdmUgYSByZWZlcmVuY2Ugc28gdGhhdCB3ZSBjYW4gdmVyaWZ5IHlvdXIgaG9tZW9wYXRoaWMgc3RhdHVzLCBwbGVhc2Ugc2VuZCBhIGNvcHkgb2YgeW91ciBob21lb3BhdGh5IGRpcGxvbWEgYW5kIGFzc29jaWF0aW9uIGNlcnRpZmljYXRlcyB0byBIV0NtZW1iZXJzIGF0IGdtYWlsIGRvdCBjb20KT3IgYmV0dGVyIHlldCwgeW91IGNvdWxkIHVzZSB0aGUgYmFuayBkcmFmdCBvciBjaGVjayB3aGVyZWluIHlvdXIgcG9rZXIgbW9uZXkgZGVwb3NpdHMgYXJlIGJldHRlciBzZWN1cmVkLiAKSWYgeW91IGxvb2sgYWNyb3NzLCBJUEYgaW5kaXZpZHVhbCBsaWZ0IHJlY29yZHMgYW5kIHJhbmtpbmdzLCBtb3N0IGxpZnRzIGFuZCB0b3AgcmFua3MgYXJlIGhlbGQgYnkgc2hvcnRlci9zaG9ydCBsaW1iZWQgbGlmdGVycy4gQmVpbmcgYSBtYW5sZXQgZG9lc24gbWVhbiB5b3Ugd2lsbCBiZSBndWFyZW50ZWVkIHN1Y2Nlc3MsIGJ1dCB0aGF0IGl0IHdpbGwgYmUgZWFzaWVyIHRvIGFjaGlldmUgdGhhdCBzdWNjZXNzIHRoYW4gaGF2aW5nIG11Y2ggbG9uZ2VyIGxpbWJzLiBMZWF0aGVyIG9uZXMgYXJlIG5pY2UgYnV0IEkgbmV2ZXIgZmVsdCBsaWtlIHRoZXkgcHJvdmlkZWQgYXMgbXVjaCBzdXBwb3J0IGFzIGNvdHRvbi9ueWxvbiBzdHJhcHMgKHRob3VnaCB0aGlzIG1pZ2h0IGJlIGJldHRlciBzbyB5b3UgZG9uIHJlbHkgb24gc3RyYXBzIGZ1bGx5IGZvciBsYWNrIG9mIGdyaXAgc3RyZW5ndGgpLiBUaGV5IGFsc28gdGVuZCB0byBzdHJldGNoIG91dC9nZXQgZGFtYWdlZCBlYXNpZXIuClRoZXJlIGFyZSBzcGVjaWFsbHkgbWFkZSBwbGFzdGljIGNhcmRzIGZvciBwb2tlciwgYnJpZGdlIGFuZCBwaW5vY2xlLiAKU3QgRGF2aWQncyBVbml0aW5nIENhcmUgZ2FtYmxpbmcgY291bnNlbGxvciBCYXJyeSBQcmF0ZXIgc2FpZCBzdG9wcGluZyBtb3JlIHBva2VyIG1hY2hpbmVzIHdhcyB2aXRhbCBmb3IgQWxidXJ5LCB3aGljaCBoYWQgYSBtYWpvciBpc3N1ZSB3aXRoIHByb2JsZW0gZ2FtYmxpbmcuICJJIHRoaW5rIGl0J3MgcXVpdGUgYSBwb3NpdGl2ZSBhcHByb2FjaCwiIGhlIHNhaWQuIApNZSBhbmQgbXkgcGxheWdyb3VwIGFsbCBoYXZlIHRpZXIgMSBtb2Rlcm4gZGVja3MgaW4gdGhlIHRob3VzYW5kcywgYW5kIG5vbmUgb2YgdXMga2VlcCB1cCB3aXRoIGNhcmQgcHJpY2VzIG91dHNpZGUgb2YgdGhlIG9jY2FzaW9uYWwgY2hlY2sgaW4gc3RvcmUgYmVjYXVzZSB3ZSBidWlsdCBvdXJzZWx2ZXMgdXAgb3ZlciB0aGUgeWVhcnMuIApUaGlzIHNwYXJrbGVyIGhhcyBhbG1vc3QgMzAgbW9udGhzIHVuZGVyIGl0cyBiZWx0IGluIHRoZSBib3R0bGUgcG9zdCBkaXNnb3JnZW1lbnQuIEkgbG92ZSB0aGUgZnJlc2huZXNzIG9mIHRoZSBzdWJ0bGUgYXV0b2x5dGljIG5vdGVzIG9mIGV4dGVuZGVkIGxlZXMgYWdpbmcgb24gdGhlIG5vc2UsIGFsb25nIHdpdGggYml0cyBvZiB0b2FzdCwgc2FsdCBhbmQgc2VhIHdhdGVyIGJlZm9yZSB0aGUgY2l0cnVzLCByZWQgYXBwbGUgbmVydm91cyBmcnVpdCBmaWxsIHlvdXIgcGFsYXRlIGFuZCBsaW5nZXIgZm9yIGV2ZXIuIApJdCdzIHVubGlrZWx5IHRoYXQgc29tZW9uZSB3aG8gaGFzIG1hbmFnZWQgdG8gc3RheSBjb21wZXRpdGl2ZSBhcyBhIHByb2Zlc3Npb25hbCBwbGF5ZXIgaXMgYWxzbyBhIGdhbWJsaW5nIGFkZGljdCB3aG8gaXMgY29tcHVsc2l2ZSBhYm91dCB0aGUgZ2FtZSBvZiBwb2tlciAoYXMgeW91ciBxdWVzdGlvbidzIHRpdGxlIGltcGxpZXMpLiAKRGllc2UgU2VsYnN0ZGVmaW5pdGlvbiwgZGllIHNpY2ggenVuY2hzdCB2aWVsbGVpY2h0IGV0d2FzIGhvY2hnZXN0b2NoZW4gYW5ocnQsIHN0ZWxsdCBzaWNoIGltIExhdWYgZGVyIEZocnVuZywgZGllIHNpZSBlaW5tYWwgaW0gTW9uYXQgYW5iaWV0ZW4sIGFscyB2bGxpZyB0cmVmZmVuZCBoZXJhdXMuIApDYXJvbCwgdGhhbmsgeW91IGZvciB0aGUgZm91ciBzdGFyIHJldmlldyBvZiBFeHRlbmRlZCBTdGF5IEFtZXJpY2EuIFdlIGFyZSBnbGFkIHRvIGtub3cgeW91IGZvdW5kIHVzIHRvIGJlIGEgZ3JlYXQgdmFsdWUgYW5kIGhhZCBhIHBsZWFzYW50IHRpbWUgd2l0aCB1cy4gVG8gZW5zdXJlIGNsZWFubGluZXNzIG9mIGtpdGNoZW53YXJlIHVwb24gY2hlY2sgaW4sIGJyYW5kIHN0YW5kYXJkcyByZXF1aXJlIHVzIHRvIG1ha2UgdGhlc2UgaXRlbXMgYXZhaWxhYmxlIGF0IHRoZSBmcm9udCBkZXNrIHJhdGhlciB0aGFuIGxlYXZpbmcgdGhlbSBpbiB0aGUgc3VpdGVzLCBhbmQgd2UgYWxzbyBkZWxpdmVyIHRoZXNlIG9uIHJlcXVlc3QuIFRoYW5rcyBvbmNlIG1vcmUgZm9yIGJlaW5nIG91ciBndWVzdCwgYW5kIHdlIGxvb2sgZm9yd2FyZCB0byBob3N0aW5nIHlvdSBhZ2FpbiBzb29uLiBTaW5jZXJlbHksIEhvdGVsIE1hbmFnZW1lbnQKSXQncyB5b3VyIGluc3VyYW5jZSwgeW91ciByZXNwb25zaWJpbGl0eSB0byBrbm93IHRoZSBjb3ZlcmFnZS4uIApBIGd1eSBjYW1lIHdpdGggaGlzIHdpZmUgYW5kIHdhbnRlZCB0byBkZW1vIHRoZW0uIFdlIGNoYXR0ZWQgZm9yIGEgbG9uZyB0aW1lIGFuZCBsaXN0ZW5lZCB0byBtdXNpYy4gClRoZSBwcm9maXRhYmlsaXR5IG9mIHlvdXIgZGVzY3JpYmVkIE9NQyBwbGF5IHN0eWxlIGRlcGVuZHMgb24gdGhlIHByb21vdGlvbnMgdGhlIGNhc2lubyBpcyBydW5uaW5nLiAKW3BlZGFudHJ5IGVuZ2FnZWRdIFNpbmNlIFZpbmNlbnQgQmFrZXIgb2YgbHVtcGxleSBnYW1lcyBbY2FwaXRhbGl6YXRpb24gaW4gb3JpZ2luYWxdIGlzIGVmZmVjdGl2ZWx5IG15IFJQRyBzcGlyaXR1YWwgbGVhZGVyLCBJIGxpa2UgdG8gZXhwbGFpbiB0aGF0IFBidEEgaXMgYSBicm9hZCBmYW1pbHkgb2YgZ2FtZXMgaW5zcGlyZWQgYnkgdGhlIG1lY2hhbmljcyBvZiBoaXMgMjAxMCBBcG9jYWx5cHNlIFdvcmxkLiBHZW5lcmFsbHksIGVhY2ggb25lIGlzIGJ1aWx0IG91dCBvZiBmaWN0aW9uIGZpcnN0IE1vdmVzOyBjaGFyYWN0ZXIgU3RhdHMgYW5kIHNwZWNpZmljIE1vdmUgc3RydWN0dXJlcyBjYW4gdmFyeSB3aWRlbHkgYmV0d2VlbiBnYW1lcy4gCkJvbnVzZXM6IGV4YWN0bHkgd2hlcmUgZWxzZSBjYW4geW91IGdldCB0b3RhbGx5IGZyZWUgY2FzaCB0byBnYW1ibGUgd2l0aD8gTW9zdCBvbmxpbmUgY2FzaW5vcyBnaXZlIGZyZWUgZG9sbGFycyBib251c2VzIHRvIGJlIGFibGUgdG8gZW50aWNlIG5ldyBidXllcnMgYW5kIHRvIGhlbHAga2VlcCB1cCB0b2dldGhlciB3aXRoIHRoZSBjb21wZXRpdG9ycy4gVGhlIGJvbnVzZXMgY2FuIHN0YXJ0IG9mZiBmcm9tIHRlbiBkb2xsYXJzIGNvc3QgZnJlZSBqdXN0IGZvciBkb3dubG9hZGluZyB0aGUgY2FzaW5vIHNvZnR3YXJlIHByb2dyYW0gdG8gYSBmZXcgdGhvdXNhbmQgZG9sbGFycyBmb3IgZmluaXNoaW5nIGEgcGFydGljdWxhciBuZWNlc3Nhcnkgdm9sdW1lIG9mIHJha2VkIGhhbmRzCkV2ZWx5biBwYXJlbnQgZGllZCBhcyBhbiBpbmRpcmVjdCBhY3Rpb24gb2YgT2xpdmVyLiAKSSBkaWRuIG1ha2UgdGhlIHBsYXkgd2l0aCB0aGlzIGlkZWEgdGhhdCBJIHdhcyBzdXBlciBmYXIgYWhlYWQ7IHRoZSBwbGF5IHdhcyBpbnRlbmRlZCB0byBraWxsIGFueSBhY3Rpb24gZnJvbSBhIGRyYXcgb3IgNzg5Si85MTBLUSB0eXBlIGhhbmQuIEl0IHdhcyBhIHNtYWxsIHJhaXNlIG9uIHRoZSBmbG9wIHRvIHNheSBBKSBIZXksIEkgaGl0IHNvbWUgb2YgdGhpcyBhbmQgQikgU2VlIHdoZXJlIGhlIGlzLiBIZSByZXBvdHMgaXQsIG1laC4gCkxvbmRvblNlb3VsICAyNiBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KT2ssIG1hbiwgSSB0aGluayB5b3UgcmlnaHQsIG1heWJlIEkgd3JvbmcuIEkgc3RpbGwgdHJ5aW5nIHRvIGxpc3Rlbi4gQnV0IHRoYW5rcyBmb3IgcGF5aW5nIGF0dGVudGlvbiBhbmQgdHJ5aW5nIHRvIHVuZGVyc3RhbmQgbXkgaW5jb2hlcmVudCByYW1ibGluZ3MuIEhvd2V2ZXIsIEkgdGhpbmsgeW91IHRvb2sgZXZlcnl0aGluZyBJIHNhaWQgYW5kIHBsYWNlZCBpdCB1cHNpZGUgZG93bi4gSSB0aGluayB3ZSBkb24gY3VsdHVyYWxseSBkaXNtaXNzIHRob3NlIHBlb3BsZSBlbm91Z2guIEkgdGhpbmsgd2UgZW1icmFjZSB0aGVtIHRvbyBtdWNoLiBJIHRoaW5rIHNvY2lldHkgYXQgbGFyZ2UgaGFzIGEgdmVyeSBzaG9ydCBtZW1vcnkuIEkgZG9uIGNhcmUgYWJvdXQgYSBkaWN0YXRvciAiZ29vZCIgYWN0cy4gdGhleSBhcmUgbWVhbmluZ2xlc3MgaW4gdGhlbXNlbHZlcywgd2l0aG91dCB0aGUgY29udGV4dCBvZiBhbGwgdGhlIG90aGVyIGFjdGlvbnMgb2Ygc2FpZCBkaWN0YXRvci4gVGhhdCBpcyB3aGF0IEkgYW0gdHJ5aW5nIHRvIHNheS4gS2lsbGluZyAxMDAgcGVvcGxlIHRvIHNhdmUgMTAwMCBkb2VzbiBtYWtlIHlvdSBhIGJldHRlciBvciB3b3JzZSBwZXJzb24gdGhhbiwgc2F5LCBraWxsaW5nIDEwIHRvIHNhdmUgMTAwLiBPciAxMDAwIHRvIHNhdmUgMTAuIE9yIGtpbGxpbmcgYW5vdGhlciB0byBzYXZlIHlvdXJzZWxmLiBJdCB0aGUgY29udGV4dCBvZiB5b3VyIGFjdGlvbnMsIGFuZCBvdGhlciBhY3Rpb25zIHRoYXQgbGVhZCB0byB0aG9zZSwgdGhhdCBkZWZpbmVzIHlvdSBhcyBtb3JhbGx5IHJlcHJlaGVuc2libGUgb3Igbm90LiBBbmQgaXRzIGFsd2F5cyBtb3JlIGNvbXBsZXggdGhhbiBzaW1wbHkgc2F5aW5nICJ0aGF0IHdhcyBiYWQiLCBldmVuIGlmIGl0IHdhcyByZWFsbHkgYmFkLiBCdXQgdGhlIGZhY3QgdGhhdCBpdCBjb21wbGV4IGRlc24gbWFrZSBpdCBnb29kLCBlaXRoZXIuCkJvdGggbGl2ZWQgaW4gTW9vcmUsIE9rbGFob21hLCBuaW5ldHkgbWlsZXMgYXdheS4gRHJpdmluZyB0aGUgcGlja3VwIHRydWNrIHRoYXQgcHVsbGVkIGluIHdpdGggdGhlbSB3YXMgdGhlaXIgdW5jbGUsIEdlbmUgV2hlbGNoZWwsIHdobyBsaXZlZCBqdXN0IGVhc3Qgb2YgQWRhLCBpbiBhIHZpbGxhZ2UgY2FsbGVkIExvdmUgTGFkeS4gVGhleSB3ZXJlIHBsYW5uaW5nIHRvIHBsYXkgcG9rZXIgdGhhdCBldmVuaW5nLCBhbmQgdGhleSBuZWVkZWQgc29tZSBjaGFuZ2UuLiAKSW4gdGhlIHNhbWUgc3RyYXRvc3BoZXJlIGFzIEplZmYgS29vbnMsIERhbWllbiBIaXJzdCBhbmQgRG91Z2xhcyBDb3VwbGFuZCwgdGhlIEphcGFuZXNlIGFydGlzdCB3b3JrcyBzb21lIDUwIHBpZWNlcyBoYXZlIHRha2VuIG92ZXIgdGhlIGdhbGxlcnkgd2FsbHMgZm9yIGhpcyBmaXJzdCByZXRyb3NwZWN0aXZlIGV4aGliaXRpb24gYW5kIHNvbG8gZXhoaWJpdGlvbiBpbiBDYW5hZGEuClJlbWVtYmVyLCB5b3Ugc2hvdWxkIG9ubHkgYmUgdXNpbmcgeW91ciBjaGVla3MgYW5kIHRvbmd1ZSB0byBwdXNoIHRoZSB3YXRlciBvdXQuLiAKTmV2ZXIgaW4gbXkgbGlmZSBoYXZlIEkgZXZlciB0aG91Z2h0IG9mIGFub3RoZXIgcmFjZSBpbiBhbiBpbGwgbWFubmVyIGJ1dCBub3cgYXQgd29yayBJIGhhdmUgYmVlbiB0b2xkIGJ5IGEgY2xvc2UgZnJpZW5kIHRoYXQgYSBjb3dvcmtlciBpcyBzYXlpbmcgdGhhdCBJIGhhdmUgYmVlbiByYWNpc3QgdG93YXJkcyBwZW9wbGUgdGhhdCBhcmUgYmxhY2sgYW5kIE1leGljYW4sIHNheWluZyB0aGF0IEkgdHJlYXQgdGhlbSB1bmZhaXJseSBpbiBsaW5lIG9yIHdoaWxlIEkgYW0gc2VydmluZyB0aGVtIG9uIHRoZSB3b3JrIHBsYWNlLiBBbGwgaW4gYWxsIEkgZG9uIGtub3cgd2hhdCB0byBkbywgSSBrbm93IHRoaXMgY293b3JrZXIgaGFzIHRyaWVkIHRvIGRlZmFjZSBtZSBpbiBmcm9udCBvZiBvdGhlciBjb3dvcmtlcnMgYW5kIGV2ZW4gbXkgYm9zcyBidXQgbXkgYm9zcyB1bmRlcnN0YW5kcyB0aGF0IHNoZSBpcyBtaXN0YWtlbiBvciBmbGF0IG91dCBseWluZyBidXQgbm90aGluZyBldmVyIGhhcHBlbnMgdG8gdGhpcyBvdGhlciBlbXBsb3llZS4gSSBndWVzcyB3aGF0IEkgd2FudCB0byBrbm93IGlzIHRoYXQgaWYgSSBnZXQgZmlyZWQgZm9yIHRoaXMgZXZlbiB0aG91Z2ggdGhlcmUgaXMgYSBsYWNrIG9mIGV2aWRlbmNlIGNhbiBJIHB1cnN1ZSBzb21ldGhpbmcgYWdhaW5zdCBteSBjb3dvcmtlciBvciB3b3JrcGxhY2UgZm9yIHRoaXMgYWN0IG9mIGRlZmFtYXRpb24gYWdhaW5zdCBtZS4gSSBmaW5kIHRoaXMgd2hvbGUgdGhpbmcgdG8gYmUgcmlkaWN1bG91cyBidXQgSSBhbSBub3cgc2NhcmVkIGJlY2F1c2UgaWYgdGhpcyBoYXBwZW5zIGFuZCBJIGdldCBmaXJlZCBmb3Igc29tZXRoaW5nIGNvbXBsZXRlbHkgZmFsc2UgdGhlbiBpdCBjb3VsZCBodXJ0IGZ1dHVyZSBqb2IgYXBwbGljYXRpb25zIGFuZCB0aGUgc3VjaC4gKEltIHNvcnJ5IGlmIHRoaXMgZGlkbiBjb21lIG91dCBjbGVhcmx5IEkgYW0gZXh0cmVtZWx5IGZsdXN0ZXJlZCwgYW5ncnksIGFuZCB3b3JyaWVkIGFib3V0IHRoaXMgd2hvbGUgc2l0dWF0aW9uKQpQbGVhc2UsIEkgaG9wZSB5b3UgaGF2ZSBhIG1lc2ggc2lkZWQgY2FycmllciB0byBrZWVwIHlvdSBjYXQgaW4hICggY2FuIHRlbGwgZnJvbSB5b3VyIGV4cGxhbmF0aW9uKS4gQ2F0cyBjYW4gcmVhY3QgdmVyeXl5eXkgZGlmZmVyZW50bHkgYW5kIGFibm9ybWFsIGluIG5ldyBjaXJjdW1zdGFuY2VzIGFuZCBoZSBuZWVkcyBzb21ld2hlcmUgaGUgdHJ1c3RzIHRvIGdvIGluc2lkZSAoaGUgY291bGQgbGFzaCBvdXQgYXQgeW91LCBzdGFydCBmcmVha2luZyBvdXQsIGdldCBvdXQgb2YgaGlzIGhhcm5lc3MhKSBZb3UgY2FuIGdldCBoaW0gdXNlZCB0byBpdCBiZWZvcmUgeW91IGdvLCBidXQgaGUgZGVmaW5pdGVseSBuZWVkcyB0byBiZSBpbnNpZGUgc29tZXRoaW5nISBZb3UgY2FuIGp1c3QgY2FycnkgaGltISEhIEl0IHdpbGwgY2F1c2UgeW91IGEgd2hvbGUgc3dhcm0gb2YgcHJvYmxlbXMgaWYgeW91IHRoaW5rIHlvdSBjYW4ganVzdCB0YWtlIGhpbSBvdXQuIEkgbG92ZSBjYXRzLCBidXQgaWYgdGhlIHBlb3BsZSBuZXh0IHRvIG1lIG9uIGEgcGxhbmUgaGFkIGEgY2F0IG9uIHRoZWlyIGxhcCBJIHdvdWxkIGJlIGZyZWFrZWQgb3V0IGFuZCBwaXNzZWQgb2ZmIGF0IHRoZW0gZm9yIG5vdCByZXNwZWN0aW5nIG90aGVyIHBlb3BsZSEgSSBkbyBub3QgdHJ1c3QgYW55b25lIGVsc2UgYW5pbWFsIGFuZCB5b3Ugc2hvdWxkIGNlcnRhaW5seSBub3QgdHJ1c3QgeW91ciBjYXQgdG8gYmVoYXZlIG9rIG9uIGEgcGxhbmUgdGhhdCBoZSBuZXZlciBiZWVuIG9uIGJlZm9yZSAob3IgdGhlIGFpcmxpbmUgdG8gYmUgb2sgd2l0aCBpdCEpIEkgd291bGRuIGV2ZW4gdGFrZSBoaW0gb3V0IHdoaWxlIG9uIHRoZSBwbGFuZS4KT25lIHRoaW5nIHRvIGtlZXAgaW4gbWluZCBpcyB0aGUgcGF5b3V0IHN5c3RlbS4gVGhlcmUgd2lsbCBiZSBzZXZlcmFsIGRpZmZlcmVudCB2YXJpYXRpb25zIHlvdSBjYW4gY2hvb3NlLCBhbmQgbW9zdCBvZiB0aGVtIHdpbGwgZGVwZW5kIG9uIHlvdXIgcG9rZXIgbWFjaGluZSBnYW1lcyB0aGF0IHlvdSBwbGF5LCBidXQgb24gdGhlIG1vdW50ZWQgdmVyc2lvbiB5b3UgY2FuIGdldCA1MGsgZm9yIGdldHRpbmcgYSBSb3lhbCBGbHVzaCEgT2gsIGFuZCBldmVuIHRob3VnaCBpdCBpcyBjb25zaWRlcmVkIGEgdG91Y2ggc2NyZWVuIHdpdGggd2FsbCBtb3VudCBjYXBhYmlsaXRpZXMsIHlvdSBjYW4gdGFrZSB0aGlzIGJhZCBib3kgb24gdGhlIHJvYWQuCkJ1dCBJIGJlIHN1cmUgdG8gbWFrZSBhbm90aGVyIGVkaXQgYW5kIHBvc3QgdXAgaGVyZSBhIGZldyByZWNvbW1lbmRhdGlvbnMgaSB0aGluayBtaWdodCBzdWl0IGEgbG90IG9mIHlvdSEuIAooQmVjYXVzZSBpZiB5b3UgZG8gZXZlcnl0aGluZyB5b3Vyc2VsZiwgb2J2aW91c2x5IHlvdSB3aWxsIGJlIGFsd2F5cyBiZWhpbmQgInNjaGVkdWxlIiBhbmQgeW91IHNvb24gZGllIG9mIGV4aGF1c3Rpb24uIApPbmUgZGF5LCBoZSBzdGFydGVkIHBhY2tpbmcuIE5vdCBpbiBhbnkgc2Vuc2libGUgb3JkZXIsIGJ1dCBzdHVmZiBsaWtlIHBsYXRlcywgc29ja3MsIHNvbWUgYm9va3MsIGEgYml0IG9mIHRyYXNoLiBZb3Uga25vdywgdGhlIGVzc2VudGlhbHMuIFdlIHRyaWVkIHRvIGV4cGxhaW4gdG8gaGltIHRoYXQgd2UgdW5kZXJzdGFuZCwgYnV0IHRoYXQgYSBtb3ZlIGlzbiB2aWFibGUgaW4gc28gbWFueSB3YXlzLiBIZSB3b3VsZG4gaGF2ZSBhbnkgb2YgaXQuIFRoZW4gb25lIGRheSwganVzdCBhcyBzdWRkZW5seSwgaGUgc3RhcnRlZCB1bnBhY2tpbmcuIEhlIGhhZCBtb3ZlZCwgaW4gaGlzIG1pbmQuIEhlIHdvdWxkIHNpdCBvbiB0aGVpciBiYWxjb255IGFuZCBsb29rIG91dCBvdmVyIG91ciB0aW55IGNpdHkvdG93biwgYnV0IHdoYXQgaGUgd2FzIGxvb2tpbmcgYXQgd2FzIHRoZSByaXZlciBhbmQgdmlsbGFnZSB3aGVyZSBoZSBncmV3IHVwLgpLZWVwaW5nIHRoaW5ncyBvcmRlcmVkIGFuZCBjbGVhbiBjYW4gbWFrZSB5b3UgZmVlbCBpbiBjb250cm9sIG9mIHRoZSBzaXR1YXRpb24uIiBFeHRlcm5hbGx5IHNwZWFraW5nLCB3ZSBzdHJlc3Mgb3Vyc2VsdmVzIG91dCBhYm91dCBob3cgb3RoZXJzIHdpbGwgdmlldyBvdXIgc3BhY2UsIGFuZCBmZWFyIHRoYXQgdGhleSdsbCBwYXNzIGp1ZGdlbWVudCBvbiBvdXIgaHlnaWVuZSBhbmQgaG91c2VrZWVwaW5nIHNraWxscy4gU28sIG5vdCBvbmx5IGFyZSB3ZSBvdXIgb3duIGhhcnNoZXN0IGNyaXRpY3MsIHdlIHRoaW5rIGV2ZXJ5b25lIGVsc2UgaXMsIHRvby4uIApTaGUgYWRkZWQ6ICJNYW55IGZhbWlsaWVzIGRvIG5vdCBsb29rIGZvciBjb21wZW5zYXRpb24uIFRoZXkgd2FudCBhbnN3ZXJzIHNvIHRoYXQgZnV0dXJlIGRlYXRocyBjYW4gYmUgcHJldmVudGVkLiJTaGUgc2FpZCB0aGUgZmFtaWxpZXMgaGFkIGhhZCB0byAicGFpbmZ1bGx5IHJlbGl2ZSB0aGUgY2lyY3Vtc3RhbmNlcyBvZiB0aGVpciBsb3ZlZCBvbmUncyBkZWF0aCBhZ2FpbiBhbmQgYWdhaW4iLiAiV2Ugd2lsbCBub3QgbWVldCBoZXIgYW5kIGhhdmUgb25lIHJlcXVlc3QgZm9yIE1ycyBCcmFkbGV5LCBhbmQgdGhhdCBpcyBmb3IgaGVyIHRvIHJlc2lnbiBpbW1lZGlhdGVseSwiIHNhaWQgSm9obiBUZWdnYXJ0LCB3aG9zZSBmYXRoZXIsIERhbm55LCB3YXMgc2hvdCAxNCB0aW1lcyBieSBzb2xkaWVycyBpbiBCYWxseW11cnBoeSwgaW4gd2VzdCBCZWxmYXN0LCBpbiAxOTcxLiAKIml0IGltcG9zc2libGUgdG8gdGVzdCBhIHNpbmdsZSBoeXBvdGhlc2lzIG9uIGl0IG93biwgc2luY2UgZWFjaCBvbmUgY29tZXMgYXMgcGFydCBvZiBhbiBlbnZpcm9ubWVudCBvZiB0aGVvcmllcy4gVGh1cyB3ZSBjYW4gb25seSBzYXkgdGhhdCB0aGUgd2hvbGUgcGFja2FnZSBvZiByZWxldmFudCB0aGVvcmllcyBoYXMgYmVlbiBjb2xsZWN0aXZlbHkgZmFsc2lmaWVkLCBidXQgY2Fubm90IGNvbmNsdXNpdmVseSBzYXkgd2hpY2ggZWxlbWVudCBvZiB0aGUgcGFja2FnZSBtdXN0IGJlIHJlcGxhY2VkLiIgdGhlIFF1aW5lIER1aGVtIHRoZXNpcwpaaGFvIGFncmVlZCB3aXRoIEdvbGQsIGJ1dCBwdXQgYSBoaXN0b3JpY2FsIGFuZCBjdWx0dXJhbCBwZXJzcGVjdGl2ZSB0byB0aGUgcmlza3MgSVAgcmlnaHRzIGZhY2UgaW4gQ2hpbmEuIApUaGlzIGZvb3RhZ2Ugd2FzIHVwbG9hZGVkIHRvIEZhY2Vib29rIGJ5IERldmluIEdyYXksIHdobyBzYWlkIHRoYXQgaGUgZHJvdmUgdHdvIGd1bnNob3QgdmljdGltcyB0byB0aGUgVU1DIFRyYXVtYSBDZW50ZXIuCkkgd2VudCB0byBoZWFyIGEgdmVyeSBzbWFydCBDb25ncmVzc21hbiBpbiBUZXhhcyB3aG8sIGRlc3BpdGUgcmVwZWF0ZWQgYXR0ZW1wdHMgdG8gZ2VycnltYW5kZXIgaGltIG91dCBvZiBoaXMgc2VhdCwgaGFzIG1hbmFnZWQgdG8gd2luIG92ZXIgYW5kIG92ZXIgYWdhaW4gaW4gdGhpcyByZWQgc3RhdGUuIEhpcyBuYW1lIGlzIExsb3lkIERvZ2dldHQuIApUaGV5IGRlY2lkZWQgdG8gY2hhcmdlLCBpbiB3aGljaCB5b3UgYXJlIGdlbmVyYWxseSBhZHZpc2VkIHRvIHBsYXkgZGVhZCBpbiB0aGUgZmV0YWwgcG9zaXRpb24uIApUaGUgbmV4dCB0d28gcGxheXMgY2FuIGJlIHF1ZXN0aW9uZWQganVzdCBhIHNtaWRnZS4gQWdhaW4gaW4gbXkgbWluZCBwcmV2ZW50aW5nIEJyYWR5IGZyb20gaGF2aW5nIDIgb3IgbW9yZSBtaW51dGVzIHdhcyBtaXNzaW9uIGNyaXRpY2FsIHNvIHllcyBJIGFtIG5pdCBwaWNraW5nLgpXZWxsLCB5b3Uga25vdywgaGVyZSdzIGFuIG9wdGltaXN0aWMgMjAgcGVyY2VudC4iLiAKMzAgeWVhcnMgb2YgU2VydmljZSB3ZXJlIGF3YXJkZWQgdG8gSm9zZXBoIENvbndheSBKciwgSmFtZXMgTWNEdWZmaWUsIGFuZCBQZXRlciBSYWdvdHpraWUuLiAKQW5kIGhlcmUgc29tZSBtb3JlIHNob2NraW5nIG5ld3Mgc3R1ZHkgY29tcGFyaW5nIHRoZSBibG9vZCBvZiAxMCwwMDAgcGVvcGxlIGZyb20gNTAgeWVhcnMgYWdvIHRvIDEwLDAwMCBwZW9wbGUgdG9kYXkgZm91bmQgdGhhdCB0aGUgaW5jaWRlbmNlcyBvZiBmdWxsIGJsb3duIGNlbGlhYyBkaXNlYXNlIGluY3JlYXNlZCBieSA0MDAgcGVyY2VudCAoZWxldmF0ZWQgVFRHIGFudGlib2RpZXMpIGR1cmluZyB0aGF0IHRpbWUgcGVyaW9kLiAoaWkpIElmIHdlIHNhdyBhIDQwMCBwZXJjZW50IGluY3JlYXNlIGluIGhlYXJ0IGRpc2Vhc2Ugb3IgY2FuY2VyLCB0aGlzIHdvdWxkIGJlIGhlYWRsaW5lIG5ld3MuIEJ1dCB3ZSBoZWFyIGFsbW9zdCBub3RoaW5nIGFib3V0IHRoaXMuIApZZXMsIG1vbmV5IGRvZXMgcGxheSBhIHJvbGUsIHRvbywgaGUgYWRkZWQ6IGlmIHlvdSBzaWduIGZvciB0b28gbGl0dGxlLCB0aGV5IGNhbiBraWNrIHlvdSBvdXQgbWlkIHNlYXNvbi4uIApFbiAyMDA0LCBWaXYgVG9tYnMsIGFsb3JzIGRpcmVjdHJpY2UgZGUgR2FyZGVuIFByaW1hcnkgU2Nob29sIGRlIE1lcnRvbiAoYXUgc3VkIGRlIExvbmRyZXMpIGRpc2FpdCBkdSBwcm9ncmFtbWU6ICBsb3JzcXVlIG5vdXMgYXZvbnMgY29tbWVuYyAgcHJhdGlxdWVyIGxlIG1hc3NhZ2UgZW4gY2xhc3NlIGRhbnMgbGUgY2FkcmUgZCd1biBwcm9qZXQgcGlsb3RlLCBqJ2F2YWlzIGRlIGxhIGRpZmZpY3VsdCAgY3JvaXJlIGxlcyByc3VsdGF0cy4gClRoZSBTaGVpbHMgZmFtaWx5ICAgdGhhdCdzIG11bSBNaWNoZWxsZSwgZGFkIE1hdHRoZXcgYW5kIHNvbnMgUmljaGFyZCBhbmQgQnJhbmRvbiAgIGFyZSBhbGwgYWNlcyBhdCB0aGUgZ2FtZSwgaG9uaW5nIHRoZWlyIHNraWxscyBhdCB0aGVpciAiaG91c2Ugb2YgY2FyZHMiIGluIEVyZGluZ3Rvbi5Pbmx5IGxhc3Qgd2VlaywgMTkgeWVhciBvbGQgQnJhbmRvbiBzY29vcGVkIGluIHRoZSBJcmVsYW5kIFBva2VyIFRvdXIgdG91cm5hbWVudCwgc3RhZ2VkIGluIExvbmRvbi5CdXQgZm9ybWVyIEJpcm1pbmdoYW0gVW5pdmVyc2l0eSBlY29ub21pY3MgZ3JhZHVhdGUgUmljaGFyZCAgIGhlIGRpZCBoaXMgZGlzc2VydGF0aW9uIG9uIHRoZSBnYW1lICAgaGFzIGdvbmUgb25lIGJldHRlci4gVGhlIDIzIHllYXIgb2xkIHNjb29wZWQgaW4gdGhlIERlZXAgU3RhY2sgY29udGVzdCwgc3RhZ2VkIGF0IE5vdHRpbmdoYW0ncyBEdXNrIFRpbGwgRGF3biBQb2tlciBDbHViLkZvciAyNCBob3VycywgUmljaGFyZCBiYXR0bGVkIHdpdGggMzI4IG9mIHRoZSBiZXN0IHBsYXllcnMgaW4gdGhlIGNvdW50cnksIGFuZCBjYW1lIG91dCBvbiB0b3AuSW4gZmFjdCwgYmV0d2VlbiB0aGVtLCBCcmFuZG9uIGFuZCBSaWNoYXJkIGhhdmUgbWFkZSBhIHdob3BwaW5nIHNpbmNlIE5vdmVtYmVyLkFzIGEgZmFtaWx5LCB0aGUgU2hlaWxzIHRha2UgcGFydCwgb24gYXZlcmFnZSwgaW4gdGhyZWUgY29tcGV0aXRpb25zIGEgd2VlayAgIGFuZCB0aGVyZSdzIGEgcmVhc29uIGZvciB0aGVpciBzdGFnZ2VyaW5nIHN1Y2Nlc3MuR3VpZGVkIGJ5IDQ4IHllYXIgb2xkIE1hdHRoZXcsIGEgZm9ybWVyIGFjY291bnRhbnQsIGFuZCBNaWNoZWxsZSwgd2hvIHNvbGQgaGVyIG51cnNlcnkgYnVzaW5lc3MgdG8gY29uY2VudHJhdGUgb24gcG9rZXIsIHRoZXkndmUgcmVwbGFjZWQgdGhlIGx1Y2ssIGNoYW5jZSBhbmQgcmlzayB3aXRoIGEgbWF0aGVtYXRpY2FsIGZvcm11bGEuUmljaGFyZCwgd2hvIGJlZ2FuIHBsYXlpbmcgaW4gZWFybmVzdCBhZnRlciBsZWF2aW5nIHVuaXZlcnNpdHkgaW4gMjAxMiwgc2FpZDogIkluIG91ciBob3VzZSwgdGhlcmUgaXMgYSBmaW5lIGxpbmUgYmV0d2VlbiBnYW1ibGluZyBhbmQgcG9rZXIuIkkgZGlkIG15IGRpc3NlcnRhdGlvbiBvbiBwb2tlciwgdGhlIHNjaWVuY2UgYW5kIG1hdGhzIGJlaGluZCB0aGUgZ2FtZS4gWW91IGNhbiBzZWUgd2hlcmUgdGhlIGdhbWJsaW5nIGlzLCBhbmQgd2hlcmUgaXQgaXMgbm90LiJJdCB3b3VsZCBiZSBleHRyZW1lbHkgc2lsbHkgdG8gZ28gZG93biB0aGUgZ2FtYmxpbmcgcm91dGUuIApUaGVyZSBjb21lcyBhIHBvaW50IHdoZXJlIGl0J3MganVzdCBhIG51bWJlci4gSSBoYXZlIG5vIGlkZWEgd2hhdCBlYXJseSByZWxlYXNlIGFuZCBwYXJvbGUgbG9vayBsaWtlIGluIE9oaW8sIGJ1dCBpZiBJIGdvdCBhIGRpZSBpbiBwcmlzb24gc2VudGVuY2UgSSBtaWdodCBiZSBpbmNsaW5lZCB0byBqdXN0IGRvIHdoYXQgSSB3YW50IGFuZCBkYW1uIHRoZSBjb25zZXF1ZW5jZXMuIApwcm9tb3RlIGZhdCBsb3NzIGFuZCBnYWluIGdvb2QgbXVzY2xlIGluIHdvbWVuCkFtYmVyIFdpbHNvbkEgZm9ybWVyIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIgd2lsbCBzcGVuZCBhdCBsZWFzdCBuaW5lIHllYXJzIGluIGEgVmljdG9yaWFuIGphaWwgYWZ0ZXIgc2NhbW1pbmcgdGhlIENvbW1vbndlYWx0aCBCYW5rIG9mIG1pbGxpb25zIG9mIGRvbGxhcnMgaW4gYSBmcmF1ZCBvZiAiYnJlYXRodGFraW5nIHByb3BvcnRpb25zIi4KIkRlYWxpbicgZm9yIERvZ3MgaXMgb3VyIGxhcmdlc3QgZnVuZHJhaXNlciwiIHNhaWQgVGltIEhhcnJpbmd0b24sIGV4ZWN1dGl2ZSBkaXJlY3RvciBvZiBUaGUgQWJpbGl0eSBDZW50ZXIuICJUaGlzIHBhcnR5IGhhcyBhIHJlcHV0YXRpb24gZm9yIGJlaW5nIGEgbG90IG9mIGZ1biBhcyB3ZWxsIGFzIGJyaW5naW5nIHRvZ2V0aGVyIG91ciBncmFkdWF0ZXMgYW5kIHRoZWlyIGRvZ3MsIHZvbHVudGVlcnMsIHN1cHBvcnRlcnMsIGFuZCB0aG9zZSBuZXcgdG8gQXNzaXN0YW5jZSBEb2dzIHRvIG1lZXQgZWFjaCBvdGhlciBhbmQgbGVhcm4gbW9yZSBhYm91dCB0aGUgcHJvZ3JhbS4gTWFueSB0aWNrZXQgaG9sZGVycyB3aWxsIGhhdmUgYXR0ZW5kZWQgcGFzdCBEZWFsaW4nIGV2ZW50cywgYnV0IHdlIGhvcGUgdG8gc2VlIGEgbG90IG9mIG5ldyBmYWNlcyB0aGlzIHllYXIgYXMgd2UgbW92ZSB0aGUgZXZlbnQgdG8gZG93bnRvd24gVG9sZWRvIGF0IHRoZSBTZWFHYXRlIENlbnRyZS4iIEFsbCBwcm9jZWVkcyB3aWxsIGJlbmVmaXQgQXNzaXN0YW5jZSBEb2dzIGEgcHJvZ3JhbSBvZiBUaGUgQWJpbGl0eSBDZW50ZXIuLiAKUG91ciB0b3V0ZXMgY2VzIHJhaXNvbnMsIGlsIHNlbWJsZSBkaWZmaWNpbGUgYXUgY2hhbnZyZSBkJ2VudHJlciBlbiBvZGV1ciBkZSBzYWludGV0IGF1cHJzIGR1IGNvcnBzIG1kaWNhbC4gRXQgcG91cnRhbnQgRW4gMTgzOSwgbGUgcHJvZmVzc2V1ciBPJ1NoYXVnaG5lc3NleSBkZSBsYSBmYWN1bHQgZGUgbWRlY2luZSBkZSBDYWxjdXR0YSBtaXQgZW4gdmlkZW5jZSBsJ2VmZmljYWNpdCBkZXMgZXh0cmFpdHMgZGUgY2FubmFiaXMgY29udHJlIGxlcyBkb3VsZXVycyBldCBsZXMgY29udnVsc2lvbnMuIApJdCBhYnNvbHV0ZWx5IGRlcGVuZHMgb24gdGhlIHBlcnNvbiBkb2luZyBpdCBhbmQgdGhlaXIgcmVsYXRpb25zaGlwIHRvIHRoZSBtb3RoZXIuRXhhbXBsZTogTXkgU29uIGlzIG5hbWVkIGFmdGVyIG15IGdyYW5kZmF0aGVyLCBhcyBzdWNoIG15IGdyYW5kbWEgY2FsbHMgaGltIGhlciBiYWJ5LiAKVGhlcmUgaXMgYW1wbGUgZXZpZGVuY2UgdGhhdCwgaW4gdGhlIGhhbmRzIG9mIHJlYWwgcGVvcGxlLCB0aGUgc2hvcnRlciBkcml2ZXIgbWlnaHQgdmVyeSB3ZWxsIGhpdCB0aGUgYmFsbCwgbm90IGp1c3Qgd2l0aCBtb3JlIGFjY3VyYWN5LCBidXQgbW9yZSBkaXN0YW5jZSBhcyB3ZWxsLiBGb3IgZXZlcnkgcXVhcnRlciBpbmNoIHlvdSBtaXNzIHRoZSAic3dlZXQgc3BvdCIgb24geW91ciBkcml2ZXIsIHlvdSBsb29zZSBhYm91dCBmaXZlIHlhcmRzIGluIGRpc3RhbmNlLiBNaXNzIGl0IGJ5IGEgaGFsZiBhbiBpbmNoLCB5b3UgbG9vc2UgYWJvdXQgMTAgeWFyZHMsIGJ5IGFuIGluY2ggMjAgeWFyZHMgYW5kIHNvIG9uLiAKSGUganVzdCBoYWQgYSBVVEkgKGJ1dCBzaG93ZWQgYXMga2lkbmV5IGZhaWx1cmUgZHVlIHRvIHN0cmVzcykuIFRoZSBvdGhlciBwdXAgdGhhdCB3YXMgYnJvdWdodCBpbiB3aXRoIGhpbSB3YXMgb24gdGhlIGV1dGggbGlzdCBmb3IgaGF2aW5nIGNhbmNlci4gClRoZSB2YXN0IG1ham9yaXR5IG9mIGNvbXBldGl0b3JzIGFyZSByYXcgb25seSBsaWZ0ZXJzLCBzbyBJIHN1cmUgdGhleSBjb21wZXRlIHJhdy4gRm9yIHRoZSBmZXcgdGhhdCBhcmUgZXF1aXBwZWQgbGlmdGVycywgSSBoaWdobHkgZG91YnQgdGhleSBiZSB1c2luZyB0aGVpciBmdWxsIGNvbXBldGl0aW9uIHRpZ2h0IGdlYXIuIApDYXNoIGdhbWVzIHlvdSBzaG91bGQgbG9vayBhdCB3aGF0IHNpdGVzIG9mZmVyIHRoZSBiZXN0IHJha2VzdHJ1Y3R1cmUgYXMgd2VsbCBhcyBhIGRlY2VudCByYWtlYmFjay4gUGx1cyB5b3Ugd2FudCBwbGVudHkgb2Ygdm9sdW1lIGZvciB0aGUgc3Rha2VzIHRoYXQgeW91IHBsYXkuIEkgbW9zdGx5IHBsYXkgb24gYSBsb2NhbCBzaXRlIGFzIHdlbGwgYXMgYSBmZXcgUHJpdmF0ZSBQUFBva2VyIGNsdWJzICh3aXRoIEkga25vdyB0aGUgb3duZXJzIG9mKQpCdXQgdGhhdCBjYW4gaGFwcGVuIG5vdy4gU28gZG9lcyBzaGUgZ28gdGhyb3VnaCB0aGUgbW90aW9ucyBhbmQgc2V0IGh1bWFuaXR5IGFnYWluc3QgaXRzZWxmIGFuZCBzbG93bHkgZGVzdHJveSBpdCBiZWNhdXNlIHNoZSBoYXMgbm90aGluZyBiZXR0ZXIgdG8gZG8/IE9yIGRvZXMgc2hlIGhhdmUgbW9yZSBhYmlsaXR5IHRvIGNoYW5nZS9tYWtlIGRpZmZlcmVudCBjaG9pY2VzPyBJZiB5b3Ugc3R1Y2sgb24gZWFydGggZm9yZXZlciwgZG8geW91IGtpbGwgeW91ciBvbmx5IGNvbXBhbnk/CkFmdGVyIGFsbCwgdGhlIGJlc3Qgd29ya291dCBpcyB0aGUgd29ya291dCB5b3UgZG8uTXkgdGhpbmcgaXMgY2xpbWJpbmcuIApCZXR0ZXIgbnV0cml0aW9uIGFuZCwgZGVzcGl0ZSBmYXIgbW9yZSBsaW1pdGVkIGFjY2VzcyBpbiBzb21lIGFyZWFzLCBtb2Rlcm4gbWVkaWNpbmUsIGhhdmUgd29ya2VkIG1pcmFjbGVzIHdvcmxkd2lkZS4uIAo5OCwgNzFpIDc2aSwgMjAwNikuIApBcyBhIHJlc3VsdCwgdGhlIG1hcmtldHBsYWNlIGhhcyByZXNwb25kZWQgd2l0aCBhbiBvcHRpb24gb3IgMTIgZnJvbSBldmVyeSBtYWpvciBjb3NtZXRpY3MgaG91c2UgaW4gdGhlIHdvcmxkLiAKVGhleSBmaW5kIHNvbGFjZSBpbiBhIGdhbWluZyBtYWNoaW5lIGJlY2F1c2UgdGhleSdyZSBub3QgdGhpbmtpbmcgYWJvdXQgYW55dGhpbmcgc28gdGhleSBkb24ndCBoYXZlIHRvIGZhY2UgdGhlIHByb2JsZW0uIiBJbiBXYW5nYXJhdHRhLCBwdW50ZXJzIGxvc3QgbW9yZSB0aGFuICQ4LjIgbWlsbGlvbiBvbiBwb2tpZXMgdGhpcyBmaW5hbmNpYWwgeWVhciwgdXBmcm9tICQ4LjEgbWlsbGlvbiBpbiAyMDE0IDE1LiAKRWgsIEkgd291bGQgaGF2ZSBhZ3JlZWQgd2l0aCB5b3UgbGlrZSAzIHllYXJzIGFnbywgYnV0IEkgbGlzdGVuZWQgdG8gc29tZSBmZW1hbGUgc3RyZWFtZXJzIGJhY2sgdGhlbiBhbmQgdGhleSBhcmd1ZWQgdGhhdCBzdHJlYW1pbmcgb24gdHdpdGNoIGlzIHRoZSBzYW1lIGFzIGJlaW5nIG91dCBpbiBwdWJsaWMuIFRoZSBjb250ZXh0IHdhcyB0aGF0IHNvbWUgcGVvcGxlIHdlcmUgYXNraW5nIGluIGNoYXQgd2h5IHNvbWUgZmVtYWxlIHN0cmVhbWVycyBhcmUgaGVhdmlseSBtYWRlIHVwIC8gd2VhcmluZyByZWFsbHkgbmljZSBjbG90aGVzIGV0YyBmb3IgYmVpbmcgaW5kb29ycyBhbG9uZS4gV2hpY2gga2luZGEgY2hhbmdlZCBteSBtaW5kc2V0IGEgYml0Li4gCkJ1dCBhbGwgaXMgbm90IHdlbGwgaW4gdGhpcyBoYXZlbiBmb3IgYmlyZHMuIFVuYmVrbm93biB0byB0aGUgdG91cmlzdHMgYXJyaXZpbmcgaGVyZSBpbiBzdW1tZXIsIHRoZSBiaXJkcyBvZiBTa29tZXIgaGF2ZSBoYWQgYSByb3VnaCB3aW50ZXIgb3V0IGF0IHNlYS4gSW4gRmVicnVhcnksIHRob3VzYW5kcyBvZiBzZWFiaXJkcyAgIG1haW5seSBBdGxhbnRpYyBwdWZmaW5zLCBidXQgYWxzbyBndWlsbGVtb3RzIGFuZCByYXpvcmJpbGxzICAgd2VyZSBmb3VuZCBkZWFkIG9uIEZyYW5jZSdzIEF0bGFudGljIGNvYXN0LCB0aGUgQ2hhbm5lbCBJc2xhbmRzLCBhbmQgV2FsZXMuLiAKJydCZWZvcmUgdGhlIGVsZWN0aW9uIHRoZSBDb2FsaXRpb24gY29tbWl0dGVkIHRvIHBva2VyIG1hY2hpbmUsIHByZSBjb21taXRtZW50IGJlaW5nIHZvbHVudGFyeSBbYW5kXSB2ZW51ZSBiYXNlZC4gU28gaXQgZm9sbG93cyB0aGF0IHRoZXJlIHNob3VsZCBiZSBubyB0cmlhbCBvZiBtYW5kYXRvcnkgcHJlIGNvbW1pdG1lbnQgaW4gdGhlIEFDVCwnJyBoZSBzYWlkLiAKQXMgaW4gYWR1bHQgdGhlcmFwZXV0aWMgbWFzc2FnZSwgcGVkaWF0cmljIG1hc3NhZ2UgaW52b2x2ZXMgYSB2YXJpZXR5IG9mIG1hbmlwdWxhdGlvbnMsIHN1Y2ggYXMgcHVzaGluZywgc3ByZWFkaW5nLCBrbmVhZGluZywgcGluY2hpbmcsIGFuZCBwcmVzc2luZy4gCkFuZCB1c3VhbGx5IHRoZXkgYXJlIHZlcnkgbWV0aWN1bG91cyBhYm91dCB0aGF0Li4gCkJvdGggYXJlIGhhdmUgYmV0dGVyIHJlYWN0aW9uIGFuZCByb2xsIHRoYW4gdGhlIHN1cHBvc2VkIHN0cm9uZ2VyIGxpbmV1cCBJIHVzZWQgbGFzdCB5ZWFyIGZyb20gRHY4LiAKSG93ZXZlciwgdGhlIGNvbXBhbnkgc2F5cyBjbGFpbXMgZnJvbSB0aGUgZm9ybWVyIGVtcGxveWVlIHRoYXQgdGhlIGF1dG8gYWxlcnQgc3lzdGVtIHdhcyBzd2l0Y2hlZCBvZmYgaXMgdW50cnVlOiAiVGhleSB3ZXJlIG5vdCB0dXJuZWQgb2ZmLiBBdXRvbWF0ZWQgY29sbHVzaW9uIGFsZXJ0cyBhcmUgYWRkcmVzc2VkIGluIG9yZGVyIG9mIHByaW9yaXR5LgpXaHk/IEJlY2F1c2UgdGhlIEdPUCBpcyBtb3JlIGludGVyZXN0ZWQgaW4gdGhlaXIgcGFydGlzYW4gZ2FtZXMgdGhhbiB0aGUgYWN0dWFsIHdlbGZhcmUgb2YgdGhlIFBlb3BsZSBvZiB0aGUgVVMuLiAKRG9lcyBhIHBhaXIgb2Ygc2l4ZXMgYmVhdCBhIHBhaXIgb2YgYWNlcz9JbiBjYXNlIG9mIGEgdGllLCB0aGUgcGFpciBvZiB0aGUgaGlnaGVzdCByYW5rIHdpbnMuIElmIHJhbmtzIGFyZSB0aWVkLCB0aGVuIHRoZSBoYW5kIHdpdGggdGhlIGhpZ2hlc3Qgbm9uIHBhaXJlZCBjYXJkIHdpbnMuIElmIHRoYXQgY2FyZCBpcyBhbHNvIHRpZWQsIHRoZW4gdGhlIGhhbmQgd2l0aCB0aGUgbmV4dCBoaWdoZXN0IG5vbiBwYWlyZWQgY2FyZCB3aW5zLCBhbmQgc28gb24uLiAKc3VsdGF0IHNwZWN0YWN1bGFpcmUgZGFucyBsYSBab25lIGRlIFMKU2VlIGFuIEVOVC4gSSBoYWQgc2ltaWxhciBwcm9ibGVtcyBhbGwgbXkgbGlmZSAoYmxvY2tlZCB1cCBhbGwgdGhlIHRpbWUsIGV0YykgYW5kIEkgd2FzIHNpY2sgZm9yIGFsbW9zdCBhIHllYXIgKGNvbnN0YW50IGNvdWdoIC8gcGhsZWdtLCBub3RoaW5nIHdvcmtlZCkgICBJIHNhdyBhbiBFTlQsIGhlIHRvbGQgbWUgdGhhdCBJIGhhdmUgYSBkZXZpYXRlZCBzZXB0dW0gKG5vdCBhIHdob2xlIGxvdCBJIGNhbiBkbyBhYm91dCBpdCwgc3VyZ2VyeSBkb2VzbiB3b3JrIGFsbCB0aGUgdGltZSAgIGJ1dCBub3cgSSBrbm93IHRoZXJlIGRlZmluaXRlbHkgc29tZXRoaW5nIGRpZmZlcmVudCBhYm91dCBtZSBhbmQgdGhhdCBrbm93bGVkZ2UgaGVscHMgZm9yIHdoYXRldmVyIHJlYXNvbiksIGFuZCBoZSBnYXZlIG1lIHNvbWUgbWVkcyB0aGF0IGFjdHVhbGx5IHdvcmtlZC4gTm93IHdoZW5ldmVyIEkgZmVlbCBzb21ldGhpbmcgbGlrZSB0aGF0IGNvbWluZyBhbG9uZywgSSBkb24gcGFuaWMgYW5kIEkga25vdyB3aGF0IHRvIGRvLgpPcmFuZ2UgYmxvc3NvbSBvaWwgd2FzIGV4dHJhY3RlZCBhbmQgY29tYmluZWQgd2l0aCBwcmVzc2VkIGFsbW9uZCBwdWxwIHRvIG1ha2UgdGhlIHZlcnkgcG9wdWxhciBwZXJmdW1lIG9pbnRtZW50IHBvbWFkZXMuIApUaGUgb3RoZXIgdGltZXMgYmVmb3JlLCB0aGV5IGJlZW4gdmVyeSBwcm9mZXNzaW9uYWwsIGhlIHNhaWQgb2YgdGhlIFZQRC4gCllvdSBtYWtlIGEgbG90IG9mIHJlYWxseSBnb29kIHBvaW50cy4gCldoYXQgSSdtIHNheWluZyBpcywgdGhlIG9ubHkgd2F5IHlvdSB3aW4gdGhpcyBoYW5kIGF0IHRoaXMgcG9pbnQgaXMgaWYgaGUgaGFzIGFuIGFic29sdXRlIHN0b25lIGJsdWZmLCBvciB3ZW50IGNyYXp5IHdpdGggVFQgb3IgOTksIGFuZCB0aGUgcml2ZXIgaXMgY2xlYW4uIEl0J3MgdGltZSB0byBmb2xkLgpUaGUgMyBpbiAxIGNvbnZlcnNpb24gdGFibGVzIGFyZSBob3QgY29tbW9kaXRpZXMgZm9yIHRob3NlIHdobyBlbmpveSBhIGdhbWUgb2YgcG9rZXIsIGFuZCBhIGdhbWUgb2YgcG9vbC4gQnVtcGVyIHBvb2wgZGluaW5nIHRhYmxlcyBhcmUgYWxzbyBhdmFpbGFibGUgZm9yIHNhbGUgb25saW5lIGFuZCB0aGV5J3JlIG11Y2ggY2hlYXBlci4gCkhpcyBzdHVmZiB3b3VsZCBhbHNvIHN1cnZpdmUgZ2VuZXJhdGlvbnMgb2YgY2hpbGRyZW4gYW5kIHRoZSBjaGlsZHJlbiBvZiB0aG9zZSBjaGlsZHJlbiBhbmQgc28gb24uIFdoYXQgdGhlIHByaWNlIG9mIGEgcm9ja2luZyBob3JzZSBmcm9tIGEgbm9ybWFsIHRveXN0b3JlPyBMZXQgc2F5IDMwIDUwLCBhZGQgYSAwIGZvciBoaXMgc3R1ZmYgYW5kIG1heWJlIGRvdWJsZSBvciB0cmlwbGUgdGhhdCBudW1iZXIgdGhlbiwgZGVwZW5kaW5nIG9uIHRoZSB3b29kLCBmZWF0dXJlcywgdGltZSBpbnZvbHZlZCBjcmVhdGluZyBpdC4uIApUaGUgbGFzdCBzdGl0Y2ggaXMgYWdhaW4gYSBsaXR0bGUga25vYmJlZC4gUGljayBpdCB1cCBmb2xsb3dpbmcgdGhlIGFycm93LgpGcm9tIGJlaGluZCBoaW0sIEhhbiBoaXRzIEJvYmEgamV0cGFjaywgc2VuZGluZyBCb2JhIGZseWluZyB0aHJvdWdoIHRoZSBhaXIsIGhpdHRpbmcgSmFiYmEgc2hpcCBhbmQgZmFsbGluZyBoZWxwbGVzc2x5IGludG8gdGhlIFNhcmxhYWMgcGl0LCB0byBiZSBkZXZvdXJlZCBieSB0aGUgYW5jaWVudCBiZWFzdC4KUmVwZWF0IHVwIHRvIDMgNCB0aW1lcyBhIGRheS4uIApQbGVhc2UgUExFQVNFIGV4cGVyaW1lbnQgd2l0aCB0aGlzIHNhdWNlIHRvIHlvdXIgbGlraW5nLiAKT24gU3VuZGF5cyBhbmQgY2hhcmdlZCAkNzAgZm9yIDQwIG1pbnV0ZXMgYW5kICQ5MCBmb3IgYW4gaG91ci4gClRoZSAyMDE4IHNlc3Npb25zIGFyZSBhaW1lZCBhdCB0aGUgd29ya2VycyBidWlsZGluZyB2aXJ0dWFsIHJlYWxpdHksIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIGFuZCBzb2NpYWwgbmV0d29ya3MuLiAKQnVpbGRpbmcgb24gQXVidXJuIFVuaXZlcnNpdHkncyBtaXNzaW9uIHRvIHNlcnZlIHRoZSBjaXRpemVucyBvZiBBbGFiYW1hIGFuZCBiZXlvbmQsIHRoZSBPZmZpY2Ugb2YgUHJvZmVzc2lvbmFsIGFuZCBDb250aW51aW5nIEVkdWNhdGlvbidzIG9ubGluZSBwcm9ncmFtcyBvZmZlciBhIHZhcmlldHkgb2Ygbm9uIGNyZWRpdCB3b3JrZm9yY2UgYW5kIHByb2Zlc3Npb25hbCBkZXZlbG9wbWVudCB0cmFpbmluZyBvcHBvcnR1bml0aWVzIHRoYXQgd2lsbCBlbmFibGUgcGFydGljaXBhbnRzIHRvIG1lZXQgdGhlIGNoYWxsZW5nZXMgb2YgYSByYXBpZGx5IGNoYW5naW5nIGFuZCBoaWdobHkgY29tcGV0aXRpdmUgZ2xvYmFsIGVjb25vbXkuIApJdCBpcyB0aGUgc3RyZXNzIHRoYXQgYmVjb21lcyBhIHRoaWNrIHNsdWRneSBvaWwgdGhhdCBib2dzIHRoZSBwZXJzb24gZG93bi4gTXVzY2xlcyBhY2hlLCBqb2ludHMgYXJlIHJlc3RyaWN0ZWQsIGFuZCBlbmVyZ3kgaXMgZGVwbGV0ZWQuIApOYWNoIDEwMCBlcmZvbGdyZWljaCBhYnNvbHZpZXJ0ZW4gVW50ZXJyaWNodHNzdHVuZGVuLCBjYS4gClRvIHVzZSBpdCBhcyBhIGRpcmVjdGlvbiBmaW5kZXIgeW91IHR1cm4gdGhlIGFudGVubmEgYXNzZW1ibHkgdW50aWwgdGhlIHRvbmUgZGlzYXBwZWFycy4gVGhhdCBoYXBwZW5zIHdoZW4gYm90aCBhbnRlbm5hcyBhcmUgZXhhY3RseSB0aGUgc2FtZSBkaXN0YW5jZSBmcm9tIHRoZSBzaWduYWwgc291cmNlLiBUaGUgc291cmNlIHdpbGwgdGhlbiBiZSBvbiBhIGxpbmUgcGVycGVuZGljdWxhciB0byB0aGUgcGxhbmUgb2YgdGhlIGFudGVubmFzLgpObyBhc2tpbmcgb3Igb2ZmZXJpbmcgb2YgZ2lmdHMsIG1vbmV5LCBkb25hdGlvbnMsIGV0Yy4gTm8gR29GdW5kTWUsIGNyb3dkc291cmNpbmcgb3IgZnVuZHJhaXNpbmcgc2l0ZXMuCldoZW4gcmVhY2hlZCBmb3IgY29tbWVudCBvbiBGcmlkYXkgbW9ybmluZywgQ2FsaG91biBkZWNsaW5lZCB0byB0YWxrIHNwZWNpZmljYWxseSBhYm91dCBhbnkgaW50ZXJlc3QgaW4gdGhlIEJDIGpvYi4gClVzZSBhIHRyZW5keSBtZWRpdW0gaGFpcmN1dCBpbiBzZWR1IGhhaXJzdHlsZSBvciBhIHNoYWcgY3V0LiBDb2xvdXIgeW91ciBoYWlyIHN1aXRhYmx5IGZvciB0aGF0IHBlcmZlY3QgbWFrZW92ZXIuIFVwZG8gc3R5bGVzIGNhbiBhbHNvIGJlIGRvbmUgd2l0aCBtZWRpdW0gaGFpcmN1dHMgc2luY2UgdGhlIGxlbmd0aCBpcyBqdXN0IHJpZ2h0LiBLZWVwIGhhaXIgbG9vc2UgbmVhciB0aGUgZWFybG9iZXMsIGZhbGxpbmcgb3ZlciB0aGUgc2hvdWxkZXJzIHdoaWxlIG1vZGVsbGluZyBhIHBpbm5lZCB1cCBoYWlyc3R5bGUgb24gYSBtZWRpdW0gaGFpciBjdXQuIEdvIGZvciB3YXZ5IGN1cmxzIHdpdGggYSBnb29kIG5vdXJpc2hlciBvbiBqZXQgYmxhY2sgaGFpci4gQ29tcGxldGUgdGhlIGxvb2sgd2l0aCBrb2hsIGxpbmVyIGluIHRoZSBleWVzLgpOb3VzIGJhbGFkYW50IGRhbnMgbGVzIHJ1ZXMgZGUgbGEgdmlsbGUgaW50cmEgbXVyb3MsIG9uIGVzdCB0b21icyBzdXIgdW5lIHN5bXBhdGhpcXVlIGxpYnJhaXJpZSBxdWkgYXZhaXQgdW4gcmF5b24gSmFwb24gbm9uIG5nbGlnZWFibGUuIEoneSBhaSB0cm91diBsJ0Vsb2dlIGR1IFBldSwgZGUgUnl1bm9zdWtlIEtvaWtlLCBjaHJvbmlxdSBxdWVscXVlcyBqb3VycyBwbHVzIHR0IHN1ciBsJ2V4Y2VsbGVudCBibG9nIExpcmUgbGUgSmFwb24uIEonaHNpdGFpcyAgbCdhY2hldGVyLCB0YW50IGRqIGFzc2V6IGxhcmdlbWVudCBzb3J0aWUgZHUgbW9uZGUgZGUgbGEgY29uc29tbWF0aW9uIGV4Y2Vzc2l2ZSwgbWFpcyBqJ3RhaXMgY3VyaWV1c2UgZXQgcHVpcyBqJ3RhaXMgZW4gbWFucXVlIGRlIGxlY3R1cmUgcG91ciBsZSBzam91ciBldCBsZSB0cmFpbiwgYWxvcnMgYWxsb25zIHkuIApBIDIwMTMgcGFwZXIgaW4gYW4gSXRhbGlhbiBwc3ljaGlhdHJpYyBqb3VybmFsIGV4YW1pbmVkIGFsbW9zdCAxLDYwMCBwc3ljaGlhdHJpYyBwYXRpZW50cyBpbiBzb3V0aGVybiBJdGFseSBhbmQgZm91bmQgdGhhdCBjYW5uYWJpcyB1c2Ugd2FzIGFzc29jaWF0ZWQgd2l0aCBhIHRlbiBmb2xkIGluY3JlYXNlIGluIHZpb2xlbmNlLi4gClNvIGhvdyBpcyB0aGlzIGdvaW5nIHRvIHBsYXkgb3V0Py4gCldlIGtub3cgd2hhdCBoYXBwZW5zIGR1cmluZyBhIGhpY2N1cC4gRHVyaW5nIG5vcm1hbCBicmVhdGhpbmcsIHdlIHRha2UgaW4gYWlyIGZyb20gdGhlIG1vdXRoIGFuZCBub3NlLCBhbmQgaXQgZmxvd3MgdGhyb3VnaCB0aGUgcGhhcnlueCwgcGFzdCB0aGUgZ2xvdHRpcyBhbmQgaW50byB0aGUgbGFyeW54IGFuZCB0cmFjaGVhLCBlbmRpbmcgaW4gdGhlIGx1bmdzLiAKQm9sYXMgYSBndXkgYXQgdGhlIG9iZWxpc2sgd2hvIGlzIGdlYXJlZCwgdGhlbiBwbGFjZSBDNCB1bmRlciBoaW0gdG8gb2JsaXRlcmF0ZSBoaW0gYXMgZmFzdCBhcyBwb3NzaWJsZS4gCkZldHVzIG9yIGNoaWxkIHdobyBkaWVkIGJlZm9yZSBCYXB0aXNtIGFuZCB0aGUgZXJhc3VyZSBvZiBvcmlnaW5hbCBzaW4gd2FzIGNvbmRlbW5lZCB0byBIZWxsLiAKSXQganVzdCB0aGUgd2hvbGUgcG9pbnRzIHN5c3RlbSBpcyBraW5kYSBoYXJkIGZvciBhIHRlYW1zIGZpcnN0IHNwbGl0IGFuZCB0cnlpbmcgdG8gZ2V0IHRvIHdvcmxkcy4uIApTb25vdGFkYWxlayB1CkN1cmlvc2l0eSBpcyBraWxsaW5nIG1lLiAKSSBiZWVuIHRvIGEgZG96ZW4gZ3ltcyBpbiBLb3JlYSBhbmQgaXQgdGhlIHNhbWUgYXQgZXZlcnkgb25lLiBUaGVyZSBpcyBubyBzdWNoIHRoaW5nIGFzIGJlaW5nIGNvbnNpZGVyYXRlIG9mIG90aGVycy4gVGhlIGJlbmNoIHByZXNzIGlzIHdoZXJlIGV2ZXJ5b25lIHdhdGVyIGJvdHRsZXMgZ28uIApUaGUgb2ZmZXJpbmcgd2FzIGNvbXBsZXRlZCB0aHJvdWdoIGEgc3luZGljYXRlIG9mIGFnZW50cyBsZWQgYnkgQ2FuYWNjb3JkIEdlbnVpdHkgQ29ycCBhbmQgd2hpY2ggaW5jbHVkZWQgRGVzamFyZGlucyBTZWN1cml0aWVzIEluYy4KIidZb3UgY2FuJ3QgYmUgYSBwcm9mZXNzaW9uYWwgZ2FtYmxlci4gCldoZW4gQW1lcmljYW5zIHNlZSBkZW1vbnN0cmF0aW9ucyBvZiBwZW9wbGUgd2VhcmluZyBjbG90aGluZyB3aXRoIHN3YXRzdGlrYXMsIHdhdmluZyB0aGUgbmF6aSBmbGFnLCBhbmQgYWR2b2NhdGluZyBmb3Igd2hpdGUgc3VwcmVtYWN5L25hemlzbSwgd2UgY29uZGVtbiB0aGVtIGFuZCBzdGFuZCB1cCBmb3Igd2hhdCByaWdodC4gV2UgZG9uIHRyeSB0byBjZW5zb3IgdGhlbSBvciBzaHV0IHRoZW0gdXAgb3IgYmFuIHRoZWlyIGJvb2tzIG9yIGlkZWFzLiAKVGhlIG51bWJlciBvZiBwbGF5ZXJzIHJlZ2lzdGVyZWQgYXQgYW4gb25saW5lIHBva2VyIHNpdGUgaXMgaW1wb3J0YW50LiBDaG9vc2luZyBhbiBvbmxpbmUgcG9rZXIgc2l0ZSB0byByZWdpc3RlciBvbiBpbnZvbHZlcyBrbm93aW5nIGhvdyBtYW55IHBsYXllcnMgYXJlIG1lbWJlcnMuIFdlIGFsbCB3YW50IGFuIG9ubGluZSBwb2tlciBzaXRlIHRvIGhhdmUgYSBsb3Qgb2YgbWVtYmVycyBzaW5jZSBpdCBtZWFucyB0aGF0IHlvdSB3aWxsIGdldCB0byBoYXZlIG9wcG9uZW50cyBhdmFpbGFibGUgdG8gZmFjZSB5b3UgYXQgYW55IHRpbWUgb2YgdGhlIGRheS4gU28gd2hlbmV2ZXIgeW91IGZlZWwgbGlrZSBwbGF5aW5nIHBva2VyLCB5b3UgY2FuIHNpbXBseSBsb2cgb24gYXQgYW55IHRpbWUgb2YgdGhlIGRheSBhbmQgZ2V0IGEgcGxheWVyIGF2YWlsYWJsZSB0byBjaGFsbGVuZ2UuCkFzIHNvbWVvbmUgd29ya2luZyBpbiBkYXRhIHNjaWVuY2UgeW91IHdpbGwgbmVlZCB0byBpbiBtYW55IGNhc2VzIHdyaXRlIHlvdXIgb3duIHRvb2wgdG8gZG8geW91IGFuYWx5c2lzLiAKSnVzdCBhc2sgaGltLCBhbmQgeW91IHNlZS4gSm9lLCB3aGVuIHlvdSB0YWtlIG92ZXIsIHdoYXQgd2lsbCB5b3UgZG8gd2l0aCBEb24gTmVsc29uPwpJZiB5b3VyIGhhbmQgaXMgbWVkaW9jcmUsIHRoZW4gYmV0IGlmIHlvdXIgb3Bwb25lbnQgaXMgbW9yZSBsaWtlbHkgdG8gY2FsbCB0aGFuIGhlIHdvdWxkIGJlIHRvIGJldCBpZiB5b3UgaGFkIGNoZWNrZWQuIApIQU1NT0NLUy4gCkl0IGJlZW4gYSB2ZXJ5IGxvbmcgdGltZSBzaW5jZSBJIGZvbGxvd2VkIGl0LCBidXQgY29tcGV0aXRpdmUgVGVhbSBGb3J0cmVzcyAyIGhhZCB0aGUgc2FtZSB0aGluZyBnb2luZyBvbiB3aXRoIFNvbGRpZXIgYW5kIERlbW9tYW4uIEEgZ29vZCBEZW1vbWFuIGNvdWxkIGJhc2ljYWxseSBzdGF5IGluIHRoZSBhaXIgdGhlIGVudGlyZSBnYW1lIGlmIGhlIHdhbnRlZCB0byBhbmQgdGhlcmUgd2FzIGEgbG90IHRoYXQgd2VudCBpbnRvIGJlaW5nIGEgZ29vZCBTb2xkaWVyLiBGb3IgRlBTLCB0aG91Z2gsIFRyaWJlcyBhbmQgVHJpYmVzIDIgaGF2ZSBldmVyeW9uZSBiZWF0Li4gCk5vIGlkZW50aWZ5aW5nIGluZm9ybWF0aW9uLCBpbmNsdWRpbmcgYW55dGhpbmcgaG9zdGVkIG9uIHBsYXRmb3JtcyBtYWtpbmcgdGhhdCBpbmZvcm1hdGlvbiBwdWJsaWMuIFBvc3RzIGVuY291cmFnaW5nIHRoZSBoYXJhc3NtZW50IG9mIGFueSBpbmRpdmlkdWFsLCBncm91cCwgY29tbXVuaXR5LCBvciBzdWJyZWRkaXQgd2lsbCBiZSByZW1vdmVkLCBhbmQgdGhlIHN1Ym1pdHRpbmcgdXNlciBtYXkgYmUgYmFubmVkLiBJZiBuZWNlc3NhcnksIGEgcmVwb3J0IHdpbGwgYmUgbWFkZSB0byB0aGUgc2l0ZSBhZG1pbmlzdHJhdGlvbi4gSW4gYWNjb3JkYW5jZSB3aXRoIFJlZGRpdCBwb2xpY2llcywgdGhlcmUgaXMgemVybyB0b2xlcmFuY2UgZm9yIHRoaXMuCkkgd2FudCBoaW0gdG8gbGVhcm4gaXQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZSIuU2luZ2xlIGhlciBvdXQgb24gdGhlIG5hbWUgdGhpbmcgYW5kIHRoZW4gc2hlIGZlZWwgcmlnaHRlb3VzIGluIGJlaW5nIG5lZ2F0aXZlIHRvd2FyZHMgeW91LiBCeSBwdXR0aW5nIGl0IG91dCBhcyBhIHN0aXB1bGF0aW9uIGZvciBldmVyeW9uZSB0byBmb2xsb3cgeW91IGRvIHR3byB0aGluZ3M7IHlvdSBmaW5kIG91dCBpZiBzaGUgZ29pbmcgdG8gcmVzcGVjdCBib3VuZGFyaWVzIGFuZCB5b3UgcmVtb3ZlIGEgc291cmNlIG9mIGlycml0YXRpb24gd2hpY2ggYWxsb3cgd2hhdGV2ZXIgd291bmQgc2hlIHJ1YmJpbmcgdG8gc3RhcnQgdG8gZmVlbCBhbmQgbWF5YmUgYWxsb3cgeW91IHRvIGRlc3RyZXNzIGVub3VnaCB0byBmaW5kIGEgImdvb2QiIHJlbGF0aW9uc2hpcCB3aXRoIGhlci4gCkFub3RoZXIgcG9wdWxhciBvcHRpb24gaXMgdGhlIEpva2VyLiBUaGUgSm9rZXIgY2FuIGJlIGRpc3BsYXllZCBpbiBzZXZlcmFsIGRpZmZlcmVudCB3YXlzLiAKQnV5IGhlciBjbG90aGVzLiBQdXJjaGFzZSBhIHNleHkgZHJlc3MgdGhhdCB5b3VyIHdpZmUgd2lsbCBsb3ZlLiAKQ3JpY2tldCBjYW4gc2NhcmNlbHkgaG9wZSBhZ2FpbiB0byB3aXRuZXNzIHR3byBzdHlsZXMgYXMgZmFzY2luYXRpbmdseSBjb250cmFzdGVkIGFuZCBhcyByYWNpYWxseSByZXByZXNlbnRhdGl2ZSBhcyBGcnkncyBhbmQgUmFuaml0c2luaGppJ3MuIEJldHdlZW4gdGhlbSB0aGV5IGV2b2x2ZWQgYSBkb2N0cmluZSB0aGF0IGNhdXNlZCBhIGZ1bmRhbWVudGFsIGNoYW5nZSBpbiB0aGUgdGFjdGljcyBvZiBiYXRzbWFuc2hpcC4gUGxheSBiYWNrIG9yIGRyaXZlLiBXYXRjaCB0aGUgYmFsbCB3ZWxsLCB0aGVuIG1ha2UgYSBzdHJva2UgYXQgdGhlIGJhbGwgaXRzZWxmIGFuZCBub3QgYXQgYSBwb2ludCBpbiBzcGFjZSB3aGVyZSB5b3UgaG9wZSB0aGUgYmFsbCB3aWxsIHByZXNlbnRseSBiZS4gQXQgdGhlIHRpbWUgdGhhdCBGcnkgd2FzIG1ha2luZyBhIG5hbWUgaW4gY3JpY2tldCBtb3N0IGJhdHNtZW4gcGxheWVkIGZvcndhcmQgYWxtb3N0IGF1dG9tYXRpY2FsbHkgb24gZ29vZCBmYXN0IHBpdGNoZXMsIGZyZXF1ZW50bHkgbHVuZ2luZyBvdXQgYXQgZnVsbCBzdHJldGNoLiBJZiBhIGJhbGwgY2FuIGJlIHJlYWNoZWQgb25seSBieSBleGNlc3NpdmUgZWxvbmdhdGlvbiBvZiBhcm1zIGFuZCBib2R5LCBvYnZpb3VzbHkgdGhlIHBpdGNoIG9mIGl0IGhhcyBiZWVuIGJhZGx5IGdhdWdlZC4gRnJ5IGFuZCBSYW5qaXRzaW5oamksIGZvbGxvd2luZyBhZnRlciBBcnRodXIgU2hyZXdzYnVyeSwgZGV2ZWxvcGVkIG1vYmlsZSBmb290d29yay4KWW91IHdpbGwgYWxzbyBmaW5kIHRoYXQgbWFueSBvZiB0aGVzZSBmcmVlIHBva2VyIHRvdXJuYW1lbnRzIGhhdmUgYSBodWdlIGZpZWxkIG9mIHBhcnRpY2lwYW50cy4gCkIuIFppZWxncnVwcGVub3JpZW50aWVydGUgV2VyYnVuZyBmciBkZW4gQmVudXR6ZXIgenUgZXJzdGVsbGVuLi4gCldoZW4geW91IGhhdmUgYSBkcmFmdCB0aGF0IHlvdSBrbm93IGZvciBzdXJlIHRoZSBhdWRpZW5jZSB3aWxsIGxpa2UsIGJyaW5nIGl0IHRvIERyYWZ0cyBhbmQgQ3JpdGlxdWVzIEZvcnVtLiBQbGVhc2Ugbm90ZSB0aGF0IHRoZSBmb3J1bXMgbW92ZSBtdWNoIHNsb3dlciB0aGFuIHRoZSBjaGF0LCBhbmQgdGhlIGRyYWZ0IGZvcnVtIG1vdmVzIHNsb3dlciB0aGFuIHRoZSBpZGVhcyBmb3J1bSFXZWxjb21lIHRvIHRoZSBTQ1AgU2FuZGJveCBXaWtpISBZb3UgY2FuIHVzZSBwYWdlcyBvbiB0aGlzIHNpdGUgdG8gcHJhY3RpY2UgZm9ybWF0dGluZywgc3RvcmUgd29ya3MgaW4gcHJvZ3Jlc3MsIG9yIHNpbXBseSBoYXZlIGEgcGxhY2UgdG8gcHV0IGRyYWZ0cyBzbyB5b3UgY2FuIHNob3cgb3RoZXJzIGFuZCBnZXQgZmVlZGJhY2sgYmVmb3JlIHBvc3RpbmcgdG8gdGhlIG1haW4gc2l0ZS5SRU1FTUJFUjogd2hlbiBtYWtpbmcgZWRpdHMsIGFsd2F5cyB1c2UgdGhlICJTQVZFIiBmdW5jdGlvbiBhbmQgTk9UICJzYXZlIGRyYWZ0Ii4gVXNpbmcgInNhdmUgZHJhZnQiIHdpbGwgcmV0YWluIGEgZGlnaXRhbCBjb3B5IG9mIHRoZSBlZGl0cyB3aXRob3V0IGFjdHVhbGx5IGNoYW5naW5nIHRoZSBwYWdlIGl0c2VsZi4gCiJUaGVyZSBhbGwga2luZHMgb2YgdGhpbmdzIHRoYXQgc3VycHJpc2UgdXMgaW4gZWFjaCBvbmUgb2YgdGhlc2UgZXZlbnRzLiBUaGF0IHRoZSBvbmUgaW4gdGhpcyBvbmUsIGFuZCB3ZSBhcmUgbm90IHRoZXJlIHlldCwiIEZCSSBEZXB1dHkgRGlyZWN0b3IgQW5kcmV3IE1jQ2FiZSBzYWlkLiAiV2UgaGF2ZSBhIGxvdCBvZiB3b3JrIHRvIGRvLiIKQnVpbGQgYSBjYXNlIHNvIHRoYXQgc2hlIGhhcyBhIGZpbGUgb2YgaGVyIGJhZCBiZWhhdmlvci4gCkl0IHN0YXJ0ZWQgd2hlbiBFZHdhcmQsIElzYWJlbGxhIGFuZCB0aGVpciBlbnRvdXJhZ2VzIHdlcmUgbXVja2luZyBhcm91bmQgYWZ0ZXIgYSBmYWlsZWQgYmF0dGxlIGluIFNjb3RsYW5kLCBhbmQgRWR3YXJkIGRlY2lkZWQgdG8gc3BsaXQuIFdpdGggaGlzIGFybXkuIApUaGVzZSBkaXNoZXMgICBhbG9uZyB3aXRoIHRoZSBsaWtlcyBvZiB1YmlxdWl0b3VzIGVnZyByb2xscyBhbmQga3VuZyBwYW8gY2hpY2tlbiAgIGFyZSBDYW5hZGlhbiBjdWxpbmFyeSBjb3JuZXJzdG9uZXMuIFlldCwgYXMgam91cm5hbGlzdCBBbm4gSHVpIGlsbHVzdHJhdGVzIHNvIHBvd2VyZnVsbHkgaW4gQ2hvcCBTdWV5IE5hdGlvbiAoRG91Z2xhcyBNY0ludHlyZSwgMjAxOSksIHRoZXkgICBhbmQgdGhlIGZhbWlsaWVzIHdobyBtYWtlIHRoZW0gICBkb24ndCBhbHdheXMgZ2V0IHRoZSByZXNwZWN0IHRoZXkgZGVzZXJ2ZS4KVGhlIFRydW1wIFRhaiBNYWhhbCwgd2hpY2ggY2xvc2VkIHRoaXMgbW9udGgsIGlzIHRoZSBsYXRlc3QgY2FzdWFsdHkuIApOb3Qgc3VyZSB3aGVyZSBwZW9wbGUgZ2V0IHRoZSBpZGVhIHRoZXJlIHdhcyBtb3JlIGNvbnRlbnQgaW4gRDIgYXQgbGF1bmNoIHdoZW4gaXQgd2FzIGEgc2hlbGwgb2YgaXQgZm9ybWVyIHNlbGYuIEkgdGhpbmsgcGVvcGxlIHRoaW5rIHRoZXJlIHdhcyBtb3JlIGVuZGdhbWUgd2l0aCBEZXN0aW55IDIgYXQgbGF1bmNoIGJlY2F1c2UgaXQgd2FzIHRpbWUgZ2F0ZWQgdGh1cyBoYWx0aW5nIHlvdXIgcHJvZ3Jlc3Npb24gdGlsbCByZXNldC4gU2VyaW91c2x5LCB3aGF0IHdhcyB0aGVyZSB0byBkbyBhZnRlciBkb2luIHlvdXIgbWlsZXN0b25lcz8gRmFybSBwdWJsaWMgZXZlbnRzIGhvcGluIGZvciBhbiBleG90aWMgdG8gaW5mdXNlIGludG8gYSBsZWdlbmRhcnkgcGllY2UgYmVjYXVzZSB0aGF0IHdhcyB0aGUgb25seSB3YXkgdG8gcHJvZ3Jlc3MgeW91ciBwb3dlciBsZXZlbC5qb2FscjAgIDYgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb0R1ZGUsIEkgc2VlbiBwZW9wbGUgY29tcGxhaW5pbmcgYW55d2hlcmUgQ2FwdGFpbiBNYXJ2ZWwgaXMgZGlzY3Vzc2VkIG9uIFJlZGRpdC4gCldoZW4gYSByb2xsIGlzIGNhbGxlZCBmb3IgeW91IHJvbGwgYSBudW1iZXIgb2YgZDYgZXF1YWwgdG8gdGhlIGF0dHJpYnV0ZSwgY291bnQgbnVtYmVyIG9mIHN1Y2Nlc3NlcyAoYW55IDUgb3IgNiBzaG93aW5nKSBhbmQgYWRkIHRoZW0gdG8geW91ciBza2lsbCBsZXZlbC4gRm9yIG1vc3QgY2hlY2tzIHlvdSB0cnlpbmcgZm9yIGEgdGFyZ2V0IG51bWJlciB0byBzdXJwYXNzLCBvdGhlcndpc2UgZm9yIG9wcG9zZWQgY2hlY2tzIHlvdSBqdXN0IG5lZWQgdG8gYmVhdCB0aGUgb3Bwb3NpdGlvbiBzdWNjZXNzZXMuIApZb3UgY291bGQgcHJvYmFibHkgdHJpY2sgaXQgdGhvdWdoIDopLCBub3Qgc3VyZSBpZiB0aGUgb3JhbmdlIDMuM3Ygd2lyZXMgZnJvbSB0aGUgUFNVIHdvdWxkIGJlIGVub3VnaCBidXQgeW91IGNvdWxkIHJ1biBvbmUgb2YgdGhvc2UgaW4gdGhlIGNhYmxlIHRoYXQgZ29lcyB0byB0aGUgbW9kIGFuZCBjb25uZWN0IHRoYXQgdG8gdGhlIGJhbGFuY2UgY2hhcmdpbmcgcGlucyBvbiB0aGUgYm9hcmQsIGl0IHdvdWxkIG5vdyBzZWUgM3ggMy4zdiwgaXQgd291bGQgdGhpbmsgdGhlIGJhdHRlcmllcyBhcmUgbG93IGJ1dCBpdCBzaG91bGQgc3RpbGwgZmlyZS4gT1IsIGNvbm5lY3Qgb25lIG9mIHRoZXNlIHRvIGEgcmVkIDV2IHdpcmUgaW4gdGhlIFBTVSB3aGljaCB3aWxsIHJlZHVjZSB0aGUgdm9sdGFnZSB0byA0LjJ2LCBhbmQgcnVuIHRoYXQgaW50byB0aGUgbW9kIGZvciB0aGUgYmFsYW5jZWQgY2hhcmdpbmcgcGlucyEgVGhlbiBpdCBzaG91bGQgdGhpbmsgdGhlcmUgYXJlIDMgZnVsbHkgY2hhcmdlZCAoNC4ydikgYmF0dGVyaWVzIGF0dGFjaGVkIDopLi4gCkZvciBleGFtcGxlLCB0aGV5IGNvdWxkIHNlbGwgdGhlaXIgaG9tZSBmb3IgJDEuMyBtaWxsaW9uIGFuZCBidXkgYSBTb2xlaWwgYXBhcnRtZW50IGZvciBhYm91dCAkODAwLDAwMCBhbmQgdGhhdCBtYWtlcyBzZW5zZSBmb3IgYSBsb3Qgb2YgcGVvcGxlLiBXZSBoYWQgZXh0cmVtZWx5IGhlYWx0aHkgc2FsZXMgZmlndXJlcyBhcyBhIHJlc3VsdCwgZXZlbiBpbiBhIHNsb3cgbW92aW5nIG1hcmtldCBsaWtlIFdoaXRlIFJvY2ssIHdoZXJlIHBlb3BsZSBoYXZlIHNpbmdsZSBmYW1pbHkgaG9tZXMgYW5kIGEgbG90IG9mIHRpbWUgdG8gZGVjaWRlIG9uIHRoZWlyIG5leHQgbW92ZS4gSXMgYSAyNiBzdG9yZXkgdG93ZXIgdGhhdCB3aWxsIHN0YW5kIGF0IHRoZSBjb3JuZXIgb2YgSm9obnN0b24gUm9hZCBhbmQgTm9ydGggQmx1ZmYgUm9hZCwgcmlnaHQgaW4gdGhlIGhlYXJ0IG9mIFdoaXRlIFJvY2sgZG93bnRvd24gY29yZS4gClRobmtzZnJ0aG1kbG4gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQ2xlYXJseSB0aGlzIGlzIGJlY2F1c2Ugb2YgdGhlIGRlbW8gdmlkZW9zIHRoYXQgd291bGQgaGF2ZSBiZWVuIHBsYXlpbmcuIApJIDMzIHllYXJzIG9sZC4gClRoZSB3b3JsZCBpcyBjaGFuZ2luZyBzbyBmYXN0IHRoYXQgeW91IG1heSBub3QgYmUgYWJsZSB0byBwcmVkaWN0IHRoZSBqb2JzIHRoYXQgZXhpc3QgaW4gZml2ZSB5ZWFycy4gU28gaWYgdGhlcmUncyBzb21ldGhpbmcgeW91IGZpbmQgaW50ZXJlc3RpbmcsIGdvIGRvIGl0LiAKIldlIGNvdWxkIGdvIGZyb20gYSAkMzAwLDAwMCB0byAkNDAwLDAwMCBwcm9maXQgdG8gYSAkMW1pbGxpb24gbG9zcywiIGhlIHNhaWQuIApTaGUgc2FpZCB0aGUgY2l0eSBpcyB3b3JraW5nIHRvIGFkZCBtb3JlIGJlZHMgdG8gdGhlIHNoZWx0ZXIgc3lzdGVtIGFzIHF1aWNrbHkgYXMgcG9zc2libGUuCklzIHRpbWUgb24gU3ByaW5nZmllbGQgc2lkZT8gKEkgZGlkIG5vdCBwZXJzb25hbGx5IHN0aW11bGF0ZSB0aGUgbG9jYWwgZWNvbm9teSBieSBwbGF5aW5nIHRoZSBzbG90cyBvciB0aGUgdGFibGVzIG9uIG15IHZpc2l0LiAKWWVzLCB0b3RhbGx5IGRpZmZlcmVudCBjb21wYW55LCBidXQgQmV0aGVzZGEgc2VlbXMgdG8gYmUgZG9pbmcgdGhlIHNhbWUgdGhpbmcuIFRoZXkgbm90IGludmVzdGluZyBpbiB0aGUgZnV0dXJlLCBub3QgdXBncmFkaW5nIHRoZWlyIHRlY2ggb3IgY2hhbmdpbmcgdGhlaXIgd2F5cy4gVGhleSB0aGluayB0aGV5IGNhbiBqdXN0IGNoZWFwIG91dCBmb3JldmVyIGFuZCBiZSBmaW5lLiBJIG5vdCBzbyBzdXJlLgpXaGVuIG15IHlvdW5nZXN0IHNvbiB3YXMgYWJvdXQgdGhyZWUgbW9udGhzIG9sZCBJIHdhcyB3YWl0aW5nIGluIGxpbmUgaW4gZ3JvY2VyeSBzdG9yZSB3aXRoIGhpbSBpbiBoaXMgc3Ryb2xsZXIuIEluIGZyb250IG9mIG1lIHdhcyBhIHZlcnkgb2Jlc2Ugd29tYW4gaW4gb25lIG9mIHRob3NlIGVsZWN0cmljIHdoZWVsY2hpcnMuIFdpdGhvdXQgZXZlbiBsb29raW5nIHNoZSB0aHJvd3MgdGhlIHRoaW5nIGluIHJldmVyc2UgYW5kIGJhY2tzIGludG8gdGhlIHN0cm9sbGVyIGJlZm9yZSBJIGNhbiBnZXQgaXQgb3V0IG9mIGhlciB3YXkuIFNoZSB1dHRlcmVkIG5vdCBhIHdvcmQgb2YgYXBvbG9neSB3aGlsZSByb2xsaW5nIGhlciBleWVzIGF0IG1lLiBBdCB0aGlzIHBvaW50IEkgYW0gcGlzc2VkIGFuZCBiZWdpbiBzYXlpbmcgdGhpbmdzIGxpa2UgIkV4Y3VzZSBtZSBidXQgeW91IGp1c3QgcmFuIGludG8gbXkgc29ucyBzdHJvbGxlciIgYW5kICJ5b3UgbmVlZCB0byBsb29rIGJlaGluZCB5b3UgYmVmb3JlIHlvdSBiYWNrIHVwIiBUaGlzIGxhc3RlZCB0aGUgZW50aXJlIHRpbWUgc2hlIHdhcyBjaGVja2luZyBvdXQgKGFib3V0IDMgb3IgNCBtaW51dGVzKSBhbGwgdGhlIHdoaWxlIG15IHNvbiBpcyB3YWlsaW5nIGJlY2F1c2UgaGUgaGFzIGJlZW4gc3RhcnRsZWQgZnJvbSBoaXMgbmFwLiBTaGUganVzdCBwcnRlbmRlZCBsaWtlIEkgd2FzIG5vdCB0aGVyZS4gU2hlIHRoZW4gemlwcGVkIGF3YXkgaW4gaGVyIGVsZWN0cmljIHdoZWVsIGNoYWlyIHdpdGhvdXQgc28gbXVjaCBhcyBhbiBleGN1c2UgbWUuIEkgd2FzIHJlYWxseSBiYWZmbGVkIGFzIHRvIHdoeSB0aGlzIHdvbWFuIGp1c3QgZGlkIG5vdCB0dXJuIGFuZCBzYXkgSSBzb3JyeS4gTWF5YmUgaXQgd2FzIHRoZSBlbWJhcnJhc3NtZW50IHRoYXQgc2hlIGhpdCB0aGUgc3Ryb2xsZXIsIGJ1dCB0byBtZSB0aGF0IGlzIG5vIGV4Y3VzZSB0byBub3QgYXQgbGVhc3QgdHVybiBhbmQgc2F5IHNvcnJ5IGFuZCBhc2sgaWYgdGhlIGJhYnkgaXMgT0sKSW4gbXkgb3BpbmlvbiwgaXQgaXMgYmVjYXVzZSBLb3JlYW5zIGhhdmUgbmV2ZXIgZm91Z2h0IGFuZCB3b24gdGhlaXIgb3duIGluZGVwZW5kZW5jZS4gClNUUiBHbG9iYWwgaXMgY29sbGVjdGluZyBtb250aGx5IGhvdGVsIHBlcmZvcm1hbmNlIGRhdGEgZnJvbSBtb3JlIHRoYW4gNDQsMDAwIHJvb21zIGFjcm9zcyBCcmF6aWwuIEhvdGVsIGRldmVsb3BtZW50IHBpcGVsaW5lIGNvbXByaXNlcyAyLDc0NSBwcm9qZWN0cyB0b3RhbGluZyAzMDQsODI1IHJvb21zLCBhY2NvcmRpbmcgdG8gdGhlIEF1Z3VzdCAyMDEyIFNUUi9NY0dyYXcgSGlsbCBDb25zdHJ1Y3Rpb24gRG9kZ2UgUGlwZWxpbmUgUmVwb3J0LiBUaGlzIHJlcHJlc2VudHMgYSAzLjUgcGVyY2VudCBkZWNyZWFzZSBpbiB0aGUgbnVtYmVyIG9mIHJvb21zIGluIHRoZSB0b3RhbCBhY3RpdmUgcGlwZWxpbmUgY29tcGFyZWQgdG8gQXVndXN0IDIwMTEuIApCeSB0aGUgdGltZSBSb2NjbyB3YXMgYm9ybiwgaGUgaGFkIGEgY2hhaW4gb2YgdGhlbSwgYW5kIGFzIGhpcyBzb24gZ3JldyB1cCAodGhlIG9ubHkgYm95IGFtb25nIGZpdmUgc2lzdGVycyksIHNvIHRvbyBkaWQgdGhlIGJ1c2luZXNzLCBpbnRvIGEgcG91bmRzIDFibiBlbXBpcmUuIApKdXN0IGphenogdXAgeW91ciB3YXJkcm9iZS4gCk9uY2UgeW91J3ZlIGVudGVyZWQgeW91ciBpbmZvcm1hdGlvbiwgaGl0IHRoZSBTaWduIE1lIFVwISBidXR0b24gICBhbmQgeW91J3JlIGZpbmlzaGVkLi4gCkhlIGhhc24ndCBzaGF2ZWQgaGlzIGJlYXJkIHRoZSBlbnRpcmUgdGltZSwgSSBhbSBmYW5uaW5nIG15c2VsZiByaWdodCBub3cgZmlndXJhdGl2ZWplc3VzICAxIHBvaW50ICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29TaGUgZ290IG1lIGludG8gdHJvdWJsZSBhdCBvdXIgam9iLCBzaGUgZ290IGZpcmVkIEkgZGlkbid0LCBzaGUgbG9zZSBiYXNlIGFjY2VzcyBhbmQgaGFkIHRvIG1vdmUgaW4gd2l0aCBteSBodXNiYW5kIGFuIEkuIEluIHRoYXQgdGltZSBzaGUgbW92ZWQgaGVyIGJveWZyaWVuZCBpbiB3aXRob3V0IGFza2luZyB1cywgcmFuIG91dCBXaUZpIGJpbGwgdXAgdG8gYWxtb3N0ICQ2MDAsIG5ldmVyIHBhaWQgcmVudCwgZ290IG15IGh1c2JhbmQgaW4gdHJvdWJsZSB3aXRoIGhpcyBib3NzLCB3b3VsZCBsZWF2ZSBoZXIgY2FyIGFuZCBkb2cgZm9yIGRheXMgZm9yIHVzIHRvIHRha2UgY2FyZSBvZiB3aXRob3V0IGFza2luZyB1cywgYW5kIHdvdWxkIGNvbnN0YW50bHkgbWFrZSBqYWJzIGF0IG1lIGFuZCBteSBtYXJyaWFnZS4gClRoZSBkaWZmaWN1bHR5IGFuIGFzc29jaWF0ZSB3aWxsIGZhY2Ugd29ya2luZyBhdCB0aGUgYmlnIG9yYW5nZSBpcyBhZmZlY3RlZCBieSBmb3VyIHRoaW5ncyBpbiB0YW5kZW06IDEuIFRoZSBsZXZlbCBvZiBlZmZvcnQgb25lIHB1dHMgZm9ydGguIDIuIFRoZSBsZXZlbCBvZiBrbm93bGVkZ2Ugb25lIGhhcyBpbiB2YXJpb3VzIGRlcGFydG1lbnRzLiAzLiBPbmUgYWJpbGl0eSB0byBjb3BlIHdpdGggdGhlIGN1c3RvbWVyL2VtcGxveWVlIGR5bmFtaWMuIDQuIFRoZSB0ZW5hY2l0eSBvZiB0aGUgc3RvcmUgbWFuYWdlci4KSW4gaXQsIHRoZSByZXBvcnRlciAobWFsZSkgc3VwcG9zZWRseSB1bmNvdmVyZWQgYSBzZXggc2NhbmRhbCB3aGVyZSAocG9vciwgd2hpdGUpIHZpcmdpbnMgYXJlIGJlaW5nIHByb2N1cmVkIGJ5IG9sZGVyIChyaWNoLCB3aGl0ZSkgbWVuIGZvciBzZXh1YWwgcHVycG9zZXMuIApZZXN0ZXJkYXkgSSB3ZW50IG91ciBmb3IgYSAxNiBtaWxlIHJ1biwgd2FudGVkIHRvIHJ1biBpdCBhdCBhIGJyaXNrIGJ1dCBub3Qgc3VwZXIgZmFzdCBwYWNlIG9mIDggbWludXRlIG1pbGVzLiAKT2YgY291cnNlLCBJIHdhcyBoZWFydGJyb2tlbiwgYW5kIGl0IHdvdWxkIG9ubHkgYmUgbW9yZSBoaWxhcmlvdXMgaWYgdGhhdCB3aXJ5LCBza2lubnksIHZhZ3VlbHkgYW5ncnkgVmlzdWFsIEJhc2ljIHByb2dyYW1tZXIvQkJTIG93bmVyL2ZhdGhlciBvZiAzIGhhZCBwdXQgbWUgaW4gYSBoZWFkbG9jayBvciBhcm1iYXIgb3Igc29tZXRoaW5nLiBJIHdhcyBiaWdnZXIgdGhhbiBoaW0sIGJ1dCwgZGFtbml0LCBoZSBzaG91bGQgaGF2ZS4KSG93IEkgQm91Z2h0LCBSZWhhYmJlZCwgUmVudGVkLCBSZWZpbmFuY2VkLCBhbmQgUmVwZWF0ZWQgZm9yIDE0IFJlbnRhbCBQcm9wZXJ0aWVzCkluIGFuIG9ubGluZSBjYXNpbm8sIHlvdSBjYW4gcGxheSBpdCByaWdodCBpbiB5b3VyIG93biBob21lLiAKTHVjaWFTdC4gTHVjaWEgUmVzdGF1cmFudHNUaGluZ3MgdG8gRG8gaW4gU3QuIApXZSBhcHBhcmVudGx5IGhhdmUgZXZvbHZlZCBpbnRvIGEgc3BlY2llcyB3aGljaCBoYXMgYSByZWxhdGlvbnNoaXBiZXR3ZWVuIGdhbWJsaW5nIGFuZCBndWVzdHM6IGlmIGl0IGlzIGJ1aWx0LCB0aGV5IG1heSBjb21lLiBBcG9pZ25hbnQgc3RhdGVtZW50IGFwcGVhcmVkIG9uIEphbnVhcnkgMTAsIDE5OTQsIGluIFRpbWVtYWdhemluZSAocGFnZSA1MSk6ICJJdCBpcyBub3cgYWNjZXB0YWJsZSBmb3IgdGhlIHdob2xlIGZhbWlseSB0b2NvbWUgYWxvbmcgdG8gTGFzIFZlZ2FzIHRoYXQncyBiZWNhdXNlIHRoZSB2YWx1ZXMgb2YgQW1lcmljYSBoYXZlY2hhbmdlZCwgbm90IHRob3NlIG9mIExhcyBWZWdhcyBbU1RSRVNTIGFkZGVkXS4iIE5vdGUsIElwZXJzb25hbGx5IGZvbGxvdyB0aGUgd29yZHMgb2YgU3RldmUgV3lubiAoQ2hhaXJtYW4gb2YgdGhlIExhcyBWZWdhc01pcmFnZSBSZXNvcnRzLCBJbmMuKTogIklmIHlvdSB3YW5uYSBtYWtlIG1vbmV5IGluIGEgY2FzaW5vLCBvd24gb25lImJ1dCB0aGVyZSBzdGlsbCBhcmUgcHJvYmxlbXMhIEhhcnJhaCdzIGVzdGFibGlzaGVkIGl0c2VsZiBpbk5ldyBaZWFsYW5kLCB5ZXQgaW4gMTk5NSBhIE5ldyBPcmxlYW5zIHZlbnR1cmUgYnkgYSB1bml0IG9mIEhhcnJhaCdzZmFpbGVkIGFuZCB3ZW50IGludG8gQ2hhcHRlciAxMSBiYW5rcnVwdGN5IHByb3RlY3Rpb24uCkluIG90aGVyIHRocmVhZHMgaXQgd2lsbCBzaW1wbHkgYmUgZmlsbGVkIHdpdGggdml0cmlvbCB3aXRoIG5vIHByb2R1Y3RpdmUgY29udmVyc2F0aW9uIHRvIGJlIGhhZC5Mb00gaXMgbm90IG1hbmRhdG9yeSBmb3IgbW9kZXJhdG9ycyB0byBwYXJ0aWNpcGF0ZSBpbi4gSWYgbW9kZXJhdG9ycyBnbyBpbiB0aGVyZSwgdGhleSBhcmUgdGFraW5nIHRpbWUgb3V0IG9mIHRoZWlyIGRheSB0byB0cnkgdG8gaGVscCB1c2VycyBhbmQgZXhwbGFpbiBzb21ldGhpbmcuSWYgYWxsIHRoZXkgYXJlIG1ldCB3aXRoIGlzIGluY29oZXJlbnQgcmFnZSwgcmVwZWF0ZWQgY29tcGxhaW50cyBmcm9tIHRoZSBzYW1lIHVzZXJzLCB0aHJvd2F3YXlzIHdpdGggbm8gL3IvbG9sIHBvc3QgaGlzdG9yeSwgcGVybWFiYW5uZWQgdXNlcnMsIGFuZCB0aGUgbGlrZSwgdGhlcmUgaXMgbm8gcmVhc29uIGZvciB0aGUgbW9kZXJhdG9ycyB0byBwYXJ0aWNpcGF0ZS5JZiBtb2RlcmF0b3JzIGRvIG5vdCBwYXJ0aWNpcGF0ZSwgdGhlIHZhbHVlIG9mIHRoZSBzdWJyZWRkaXQgZ29lcyBkb3duLiAKRmFybGFjayAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpJIGludGVyZXN0ZWQgaW4gaGVhcmluZyBzdG9yaWVzIGFib3V0IEthcm1hIFByb3BlcnRpZXMsIGNhbiBhbnlvbmUgc2hhcmUgdGhlaXIgZXhwZXJpZW5jZXMgd2l0aCB0aGVtPyBUaGVpciByYXRpbmcgaXMgYWJ5c21hbCBvbiBnb29nbGUsIGJ1dCB0aGV5IHNlZW0gdG8gaGF2ZSB0aGUgb25seSBwcm9wZXJ0aWVzIHdpdGggbXVzdCBoYXZlIGZlYXR1cmVzIGZvciBtZSAoY29uY3JldGUgYnVpbGRpbmdzLCBpbiBzdWl0ZSBsYXVuZHJ5LCByZWxhdGl2ZWx5IG1vZGVybiBkZXNpZ25zKS4KR2VuZWxkZSBtZXNsZWluZGUgYmVsaXJsaSBiaXIgeWVyZSBnZWxpbmNlIG8gbWFhIGFseW9yc3VuLiAKV2lsbCBlbnN1cmUgcGVvcGxlIHRha2luZyB0aG9zZSBhc3NpZ25tZW50cyB3aGVuIGNvbmRvIGFzc2lnbm1lbnRzIGFyZSBmbGlwcGVkIGFjdHVhbGx5IHBheSB0aGVpciBmYWlyIHNoYXJlIG9mIHRheGVzLCBzYWlkIEphbWVzLiBub3cgd2UgaGF2ZSBubyBpZGVhLiBUaGVyZSBubyByZWdpc3RyeSwgdGhlcmUgbm8gdHJhY2tpbmcgb2YgdGhvc2Uga2luZCBvZiBmbGlwcy4gcmVnaXN0cnkgd2lsbCByZXF1aXJlIGFsbCBkZXZlbG9wZXJzIGN1cnJlbnRseSBidWlsZGluZyBjb25kb3MgYW5kIG90aGVyIHN0cmF0YSBidWlsZGluZ3MgdG8gcmVnaXN0ZXIgZXZlcnkgZm91ciBtb250aHMgdGhlIHN0YXR1cyBvZiB0aGVpciB1bml0IGNvbnRyYWN0cywgc3RhcnRpbmcgQXByaWwgMzAuIEFmdGVyIGNvbnN0cnVjdGlvbiBpcyBjb21wbGV0ZSBhbmQgYSBzdHJhdGEgcGxhbiBmaWxlZCB3aXRoIGdvdmVybm1lbnQsIHRoZSBkZXZlbG9wZXIgbXVzdCByZXBvcnQgYW5udWFsbHkgZm9yIHRoZSBuZXh0IHNpeCB5ZWFycy4KUGF1bCBXaWxsY29jaywgcHJlc2lkZW50IG9mIHRoZSBjYXNpbm8gb3duZXIgR2VudGluZyBVSywgcHJhaXNlZCB0aGUgY291cnQncyBkZWNpc2lvbiB0byBkaXNtaXNzIEl2ZXkncyBhcmd1bWVudCB0aGF0IGVkZ2Ugc29ydGluZyB3YXMgYSBsZWdpdGltYXRlIHN0cmF0ZWd5LgpTdWNjZXNzaXZlIGdvdmVybm1lbnRzIHR1cm5lZCB0byBXYWxsIFN0cmVldCB0byBzdGF5IGFmbG9hdCwgYW5kIHRoZSBiYW5rZXJzIHdlcmUgb25seSB0b28gaGFwcHkgdG8gb2JsaWdlLiAKQ2hyaXN0aWFucyB0aGluayB5b3UgbmVlZCB0byB3YXRjaCB0aGUgZmlyc3QgdHdvLCBidXQgdGhlIHRoaXJkIG1vdmllIGRvZXNuJ3QgY291bnQuIApJIGFtIFdBWSBiZXR0ZXIuIFRlbiB5ZWFycyBhZ28gSSB3YXMgaW4gaGlnaCBzY2hvb2wuIApMb2cgaW4gU3Vic2NyaWJlIHRvIGNvbW1lbnQgV2h5IGRvIEkgbmVlZCB0byBzdWJzY3JpYmU/CkkgZG8gc2VlIG1lbiBjb21wbGFpbmluZyB0aGF0IGZlbWluaXN0cyB3YW50IHRvIHByb2hpYml0IHRoZW0gZnJvbSBkb2luZyBtYW5seSBzdHVmZiB0aGV5IGxpa2UsIGJ1dCBoYXZlIHlldCB0byBzZWUgYW55b25lIGFjdHVhbGx5IHByb3Bvc2UgYW55dGhpbmcgbGlrZSB0aGF0LiBJbnN0ZWFkLCBJJ3ZlIHNlZW4gY2FsbHMgdG8gYWxsb3cgbWVuLCB0b28sIHRvIGJlIHRoZW1zZWx2ZXMsIHdpdGhvdXQgY29uc3RyaWN0aXZlIHNvY2lhbCBub3JtcyBzYXlpbmcgInlvdSBjYW4ndCBkbyB0aGF0IG9yIHBlb3BsZSB3aWxsIGNhbGwgeW91IGEgZmFnZ290Ii4gWW91IHdhbnQgdG8gZ3JvdyBhIGJlYXJkLCB3ZWFyIHBsYWlkIGFuZCBjaG9wIHdvb2Q/IEJ5IGFsbCBtZWFucy4gCihsZXR0ZXIgSGVhbHRoIC4xNCBDb250cmFjdCBCcmlkZ2UuMTkgRHJhaW5zLCBCaXJ0aHMgMkMgRmluYW5jZSwgU2xvY2tzLjQgUHJvZHVjZS4gTGl2ZXN0b2NrIC4nLjQgU3BvcnRzLiAyMiAyMywgMjQgU3VidXJiYW4gQ2FsZW5kYXIuMTQgVGNjbiAuMjAuIApJdCBvZmYgdGhlIG1haW4gcm9hZCwgaW4gYSBsaXR0bGUgZW5jbGF2ZSwgYnV0IGtlZXAgYW4gZXllIG91dCBmb3IgdGhlIGJpZyBiaWxsYm9hcmQgc2lnbiAocmlnaHQpLiAKTW9yZSBib29rcyBsaWtlIE1vbnRhaWduZSBFc3NhaXMsIHllYWgsIEkgdW5kZXJzdGFuZCB3aGF0IGhlIG1lYW5zIGFuZCB3aGF0IGhlIHRhbGtzIGFib3V0LiBNb3JlIGxpa2UgZm9sbG93aW5nIGEgcGF0aCBhbG9uZyBhIGNsZWFyIHN0cnVjdHVyZS4gTm90IG11Y2ggd2l0aCB2aXN1YWxpc2F0aW9ucywgcmF0aGVyIGxpa2UgaGF2aW5nIGhpbSBleHBsYWluIHRoaW5ncyBpbiBteSBtaW5kIHZpYSB0ZWxlcGF0aHksIGtpbmRhLgpBIHNwZWNpYWwgZmVhdHVyZSBvZiBMQU4hIGlzIHRoZSBTcHJpbmcgb2YgTGF0aW5vIEFydCAoU09MQSksIGFuIG91dGdyb3d0aCBvZiBwYXJ0bmVyc2hpcHMgd2l0aCBhcmVhIGFydHMgb3JnYW5pemF0aW9ucyBhbmQgYXJ0aXN0cy4uIApXZSB3aWxsIHJlbW92ZSBwb3N0cyBzb2xpY2l0aW5nIG9yIGdpdmluZyBhZHZpY2UgYWJvdXQgc3VpY2lkZS4gUG9zdGluZyBhYm91dCBob3cgeW91IGZlZWwgaXMgcXVpdGUgYWxyaWdodCwgYnV0IHBsZWFzZSBkb24gYXNrIGZvciBhZHZpY2UgYWJvdXQgaG93IHRvIGVuZCBpdCBhbGwuIFNvbWV0aW1lcywgc2ltcGx5IHZlbnRpbmcgaGVscHMhCldvcmtpbmcgYXMgYSBoaXN0b3JpYW4sIGN1cmF0b3IgYW5kIHJlc2VhcmNoZXIsIEtsaW5nZWxob2ZlciBoYXMgYmVlbiBoZWxwaW5nIGlkZW50aWZ5IGxvc3QgYXJ0aWZhY3RzIGZyb20gdGhlIHdyZWNrIG9mIHRoZSBSTVMgVGl0YW5pYyBmb3IgbW9yZSB0aGFuIGVpZ2h0IHllYXJzLiBUaGlzIHJlY2VudCBkaXNjb3Zlcnkgd2FzIGVhc3kgdG8gcHV0IHRvZ2V0aGVyLCBnaXZlbiBDbGFyayB1bnVzdWFsIGluaXRpYWxzLCB3aGljaCBhcmUgZW5ncmF2ZWQgb24gdGhlIGxvY2tldC4KRGllRHVuZ2VvbiAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkFsbW9zdCBzYW1lIHRoaW5nIGhhcHBlbmVkIHRvIG1lLiBJIHdlbnQgaW50byB0aGUgRVIgYXQgYXJvdW5kIDQvNSB3ZWVrcyBwcmVnbmFudCBmb3IgVVRJIGFuZCB0aGVpciB1cmluZSB0ZXN0IGNhbWUgdXAgbmVnYXRpdmUsIHRoZXkgc2FpZCBJIHdhc24ndCBwcmVnbmFudC4gTm93IGhlcmUgSSBhbSwgMTEgd2Vla3MgcHJlZ25hbnQgYW5kIGhhdmUgc2VlbiBhIGJvdW5jaW5nLCBhY3RpdmUgYmFieSBvbiB1bHRyYXNvdW5kLgpUaGUgcGl0Y2ggRHlsYW4gUmlia29mZiBjYW4gcmVtZW1iZXIgYSB0aW1lIHdoZW4gaGUgZGlkbiB3YW50IHRvIGJlIGFuIGVudHJlcHJlbmV1ci4gSGUgc3RhcnRlZCBoaXMgZmlyc3QgYnVzaW5lc3Mgd2hlbiBoZSB3YXMgaW4gR3JhZGUgOC4gd291bGQgYnV5IGxvbGxpcG9wcyBpbiBidWxrIGF0IENvc3RjbyBhdCAxMiBhIGxvbGxpcG9wIGFuZCB0aGVuIHNlbGwgdGhlbSBmaXZlIGZvciAkMSBhdCBzY2hvb2wuIFRoZSBmaXJzdCBkYXkgSSBzb2xkIDEwMCwgdGhlIHNlY29uZCBJIHNvbGQgMjAwLCBieSB0aGUgZW5kIG9mIG15IHJ1biwgSSBjb3VsZCBub3Qga2VlcCB1cCB3aXRoIGRlbWFuZC4gSGUgd2FzIGV2ZW50dWFsbHkgc2h1dCBkb3duIGJ5IHRoZSBzY2hvb2wgcHJpbmNpcGFsIGJ1dCB0aGF0IGRpZG4gc3RvcCBoaXMgbG92ZSBvZiBidXNpbmVzcy4KUGFsYWNlIFN0YXRpb24gaXMgb25lIG9mIGl0cyBmbGFnc2hpcCBjYXNpbm9zIHRoYXQgYm9hc3RzICJzdHJpcCBxdWFsaXR5IGFuZCBsb2NhbCB2YWx1ZSIuIApIb3dldmVyLCBpdCBhbG1vc3QgYWx3YXlzIHRha2VzIG92ZXIgYW4gaG91ciBmb3IgaGVyIHRvIHJlYWQgbXkgbWVzc2FnZSBhbmQgcmVwbHkuIApNSDogU2Vjb25kIHBlcmlvZCB1bmRlcndheS4gSHVnaHNvbiB0ZWxscyB1cyBSeWFuIEtlc2xlciBoYXMgYmVlbiB0aGUgYmVzdCBDYW51Y2sgZm9yd2FyZCB0aGlzIHNlYXNvbi4gSWYgdGhhdCBkb2VzbiBhZGVxdWF0ZWx5IHN1bSB0aGluZ3MgdXAsIEkgZG9uIGtub3cgd2hhdCBkb2VzLiBRdWVzdGlvbjogc2hvdWxkIEplZmYgRmluZ2VyIG5vdCBiZSB0aGUgbmFtZXNha2UgZm9yIHdoYXRldmVyIGRlZmVuc2l2ZSB1bml0IGhlIHBsYXlzIG9uPyBGaW5nZXIgcGFpcmluZyBoYXMgc3VjaCBhIG5pY2UgcmluZyB0byBpdC4gSSBjYWxsaW5nIENCQy4KSSBzYXcgdGhlIHN3aWZ0bmVzcyBzdHJlbmd0aCBvZiB0aGVzZSBmb3JjZXMuIFRoZXkgc2VlIGxpa2UgYW4gRWFnbGUsIHN3aWZ0IGxpa2Ugc25ha2UgYXR0YWNrIGxpa2UgZG9ncy4gTm8gb25lIGNhbiBlc2NhcGUgdGhlaXIgZXllcy4gCkZyb20gYWxsIG9mIHRoZSBwYWdlcyEgVGhpcyBpc24ndCBhIHJlYWwgaGFjaywgYnV0LCBNZWthdGVrIGhpbXNlbGYgc2FpZCB0aGVyZSdzIGdsaXRjaGVzIGFuZCBoZSdzIG1ha2luZyBhIGhhY2tpbmcgcHJvZ3JhbSBmb3IgaXQuIApJIG5vdCBzdXJlIHdoYXQgZWxzZSB0byBzYXkgaGVyZSAgIEkgYm90aCBmZWVsIGZvciB5b3UgYW5kIHVuZGVyc3RhbmQgdGhlIG90aGVyIHBlcnNwZWN0aXZlLiAKTWFueSBSZXB1YmxpY2FucyBhcmUgb2Z0ZW4gZWFnZXIgdG8gcmVkdWNlIGdvdmVybm1lbnQgc3BlbmRpbmcsIGJ1dCBDb25ncmVzcyBoYXMgaGFkIHRyb3VibGUgcGFzc2luZyBiaWxscyB0aGF0IHNlcmlvdXNseSBzbGFzaCB0aGUgc2FmZXR5IG5ldCBwcm9ncmFtcyB1c2VkIGJ5IG1hbnkgQW1lcmljYW5zLi4gCkFoaGguIFNvIEkgaW4gYSB1bmlxdWUgcG9zaXRpb24gdGhpcyB3ZWVrIHdoZXJlIEkgdHJhdmVsaW5nIGZvciB3b3JrIGZvciBhIHdlZWsgbG9uZyBldmVudCBhbmQgSSBsZWZ0IG1vc3Qgb2YgbXkgcm91dGluZSBhdCBob21lLiAKVGhlIFVJIG9uIGNyeXB0byBleGNoYW5nZXMgaXMgYWxtb3N0IGFsd2F5cyBiZXR0ZXIgdGhhbiBicm9rZXJhZ2VzLgpCdXQgaXQgaGFzIHRvIGJlIGhhbmRsZWQgY2FyZWZ1bGx5LCBvciB5b3UgcnVuIGludG8gcHJvYmxlbXMgbGlrZSB0aGVyZSB3ZXJlIHdpdGggdGhlIGxhdW5jaCBvZiBXb1cgbGF0ZXN0IGV4cGFuc2lvbiwgd2hlcmUgcGVvcGxlIHdlcmUgdGFraW5nIHRoZWlyIGdlYXIgb2ZmIGVudGlyZWx5IHRvIGRyb3AgdGhlaXIgZ2VhciBzY29yZSBhbmQgZG8gbW9yZSBkYW1hZ2UuLiAKVGhhdCBoYXZpbmcgYmVlbiBzYWlkLCBJIGRpZG4gYWN0dWFsbHkgcGxhbiBvbiAiT1ZFUiBJTkRVTEdJTkcuIiBUaGUgbmljZSB0aGluZyBhYm91dCBmYXN0aW5nIGZvciBtZSBpcyB0aGF0IGl0IGhlbHBlZCBtZSByZWFsaXplIHRoYXQgdGFzdGluZyB0aGUgYW1hemluZyBmb29kIGlzIGp1c3QgYXMsIGlmIG5vdCBtb3JlLCBpbXBvcnRhbnQgdGhhbiBzdHVmZmluZyBpdCBkb3duIHVudGlsIGl0IG1ha2VzIG15IHN0b21hY2ggdGF1dC4gClBva2VyIG5lZWRzIGlzIG5ldyBzdG9yeXRlbGxpbmcsIGhlIHNheXMuIFRoaW5rIFR3aXRjaCBpcyBkZWZpbml0ZWx5IGdvaW5nIHRvIGhlbHAsIGluIHRlcm1zIG9mIHNob3dpbmcgd2hhdCBwb2tlciBpcywgYW5kIHNob3dpbmcgaXQgaW4gYSBkaWZmZXJlbnQgd2F5IHRoYW4geW91IHNlZSBvbiBUViwgd2hpY2ggaXMgbGlrZSB0aGUgZ2lybHMgaW4gYmlraW5pcyBhbmQgbW9uZXkgb24gdGhlIHRhYmxlLiAKSG93IENocmlzIGhhcyBiYWxsb29uZWQgdG8gMzI1IGxicyBhbmQgc2hlIHdvbid0IGhhdmUgc2V4IHdpdGggaGltIGFueW1vcmUuIApVbml2ZXJzaXR5IGxlZ2lzbGF0aW9uIGlzIG1hZGUgdXAgb2YgU3RhdHV0ZXMsIE9yZGluYW5jZXMgYW5kIFJlZ3VsYXRpb25zIGFuZCBDb2RlcyBvZiBQcmFjdGljZS4gVGhlIFVuaXZlcnNpdHkgUmVndWxhdGlvbnMgY29udGFpbiBwcmluY2lwbGVzIGFuZCBzdGFuZGFyZHMgZGVzaWduZWQgdG8gY29udHJvbCBvciBnb3Zlcm4gY29uZHVjdCBvciBwcm92aWRlIGRpcmVjdGlvbi4gVGhlIFJlZ3VsYXRpb25zIGFyZSBjb2hvcnQgc3BlY2lmaWMgYW5kIHBlcnRhaW4gdG8gYWxsIHN0dWRlbnRzIGNvbW1lbmNpbmcgdGhlaXIgc3R1ZGllcyBpbiAyMDE3IDE4LiAKSW5kaWEgc2FpZCBpdHMgYWlyIGZvcmNlIGhpdCBhIHRlcnJvcmlzdCB0cmFpbmluZyBjYW1wIGFuZCBraWxsZWQgImEgdmVyeSBsYXJnZSBudW1iZXIiIG9mIG1pbGl0YW50cy4gUGFraXN0YW4gc2FpZCB0aGUgc3RyaWtlIG9ubHkgZGFtYWdlZCB0aHJlZSB0cmVlcyBpbiBhIGZvcmVzdC4KQW1lcmljYSBpbiBzZXZlcmFsIHN1YmN1bHR1cmVzLiBUaGVyZSBhIGxvdCBvZiBwZXJwZXR1YXRpbmcgdGhhdCBwZW9wbGUgaW4gbmVlZCBzaG91bGQgc29sdmUgdGhlaXIgb3duIHByb2JsZW1zIGJlY2F1c2UgaXQgdGhlaXIgZmF1bHQuIEhlbGwgKHRob3VnaCBJIGRvIGxvdmUgbXkgZmFtaWx5IG92ZXJhbGwpLCB0aGVyZSBzb21lIGZ1Y2toZWFkcyB3aG8gYXJlIG9wcG9zZWQgdG8gYW55IHdlbGZhcmUgcHJvZ3JhbXMgYmVjYXVzZSB0aGV5IHNob3VsZG4gaGF2ZSB0byBwYXkgdGF4ZXMgdG8gc3VwcG9ydCBwZW9wbGUgd2hvIHdvbiBzdXBwb3J0IHRoZW1zZWx2ZXMuIApOb3Qgc3VyZSB3aGF0IHlvdSB0cnlpbmcgdG8gcHJvdmUgaGVyZSwgdGhhdCBKYXBhbiB3YXMgaW5ub2NlbnQgYW5kIHdhcyB2aWN0aW0/LiAKU3RvdXQgc29vbiBwcm92ZXMgaGUga25vd3MgaG93IHRvIHdpbi4gVHdvIHNlYXNvbmVkIHRyYWRlcnMgICBSb25uaWUgRGF2aXMgYW5kIEppbWJvIEJ1cm5zICAgdGFrZSB0aGUgbGFkIHVuZGVyIHRoZWlyIGNhcGFjaW91cyB3aW5ncywgYW5kIG9uZSBldmVuaW5nLCB0aGV5IGludml0ZSBoaW0gdG8gZGlubmVyIHRvIGNlbGVicmF0ZSB0aGUgeWVhcidzIGxhcmdlc3QgdHJhZGUuIEJlZm9yZSBsb25nIHRoZSByZXZlbHMgbW92ZSBhY3Jvc3MgdGhlIE5ld3BvcnQgQnJpZGdlIGludG8gS2VudHVja3kgYW5kIGEgbGl2ZWx5IHBva2VyIGdhbWUgZW5zdWVzLCBkdXJpbmcgd2hpY2ggU3RvdXQgZGVtb25zdHJhdGVzIGhpcyBtYXN0ZXJ5IGFuZCB3aW5zIGEgd2luZGZhbGwgb2YgY2FzaC4gVGhlIHRyYWRlcnMgYXJlIGltcHJlc3NlZC4gVGhleSByZWFsaXplICAgYXMgZG9lcyBTdG91dCAgIHRoYXQgdGhlIHNhbWUgc2tpbGxzIHRoYXQgbWFrZSBoaW0gYW4gZXhjZXB0aW9uYWwgcG9rZXIgcGxheWVyIGNvdWxkIHNlcnZlIGhpbSBhcyB3ZWxsIGluIGEgZmluYW5jaWFsIGNhcmVlci4KRG9uJ3QgZ2l2ZSBidXllcnMgYSB3YXkgdG8gZm9ybSBhbnkgb3BpbmlvbiBhYm91dCB5b3UgYXQgYWxsLiBEb24ndCBsZXQgYnV5ZXJzIGZvcm0gaWRlYXMgYWJvdXQgeW91IGZyb20gdGhlIHR5cGUgb2YgbXVzaWMgeW91IGxpa2Ugb3IgdGhlIGxpdGVyYXR1cmUgeW91IHJlYWQuLiAKQnVudSBub3JtYWxkZSBzZW5pbiB5YXBtYW4gbGF6bSBhbWEgaXRlIHNlbiBiZW5sZSB1cmFtYXkgdGVyY2loIGVkaXlvcnN1bi4gQnVuZGFuIHNvbnJhIGlpbiBrb2xheSwgYnUgYmVuaW0gYnVyYWRha2kgc29uIHlvcnVtdW0gb2xhY2FrLiBCdSBrYWZheWxhIGJ1cmFzIGRhIHlha25kYSBla2l5ZSBkbmVyLnJlZGRpdHJhc2FsZ2h1bCAgMyBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ29ObywgcGVvcGxlIGZvcmdldCBvbmUgc2ltcGxlIGZhY3QuIFlvdSBjYW5ub3Qgc3RvcmUgZWxlY3RyaWNpdHksIHNvIHlvdSBoYXZlIHRvIHByb2R1Y2UgYXMgeW91IGNvbnN1bWUgYW5kIGRpc3RyaWJ1dGUgYWNjb3JkaW5nbHkgc28gdGhhdCB5b3UgZG8gbm90IGxvc2UuIApJIG5vdCBzYXlpbmcgbm90aGluZyBzaG91bGQgYmUgYnVpbHQgb24gcmFuZG9tbmVzcyBoZXJlLCBJIGp1c3QgYmVsaWV2ZSB0aGF0IGl0IGlzIGVhc2llciBmb3IgdGhlIGRldmVsb3BlcnMgYW5kLCBsZXQgYmUgaG9uZXN0LCBiZXR0ZXIgZm9yIE5pYW50aWMgdGhhdCB0aGUgZ2FtZSBiZWhhdmUgbW9zdGx5IHRoaXMgd2F5LCBub3QgYmV0dGVyIGZvciB0aGUgcGxheWVycy4gCkkgYXZvaWQgdGhlIFZlbmV0aWFuLiAKQWxvcnMgYXVqb3VyZCdodWkuIApQcm90ZWN0aW5nIFlvdXIgSG9tZVlvdSBub3cgaGF2ZSBtb3JlIGNob2ljZXMgdGhhbiBldmVyIGZvciBwcm90ZWN0aW5nIHlvdXIgaG9tZS4gQUxMIHNodXR0ZXJzLCBpbXBhY3QgcmVzaXN0YW50IHdpbmRvd3MsIGRvb3JzLCBhbmQgZ2FyYWdlIGRvb3JzIHRoYXQgaGF2ZSBNaWFtaSBEYWRlIENvdW50eSBhcHByb3ZhbCBhZnRlciBTZXB0ZW1iZXIgMTk5NCBhcmUgdmVyeSBzdHJvbmcuIElmIHRoZXkgYXJlIGxlZ2FsLCB0aGV5IGFyZSBzdHJvbmcuClNoZSBwaWNrcyB1cCBhIHBsYXN0aWMgbWlsayBqdWcgKENhbmFkaWFucyBrbm93IHRoZSBvbmVzKSBhbmQgaGl0cyBtZSBpbiB0aGUgaGVhZCB3aXRoIGl0LCBjdXRzIG15IGhlYWQgb3BlbiwgYmxvb2QgcG9vcmluZyBkb3duIG15IGZhY2UuIFNoZSB0cmllcyB0byBhcG9sb2dpemUsIGJ1dCBJIHdvbiBoYXZlIGl0LiAKU29tZSBlbnRlcnRhaW5lcnMgbWF5IGFsc28gb2ZmZXIgZmV0aXNoIHNlcnZpY2VzIHRoYXQgZG8gbm90IGluY2x1ZGUgc2V4dWFsIGludGltYWN5LCBzdWNoIGFzIGxpZ2h0IGJvbmRhZ2Ugb3Igc3BhbmtpbmcuLiAKVGhpcyBpcyBhbiBpbnRlcmVzdGluZyBhZGRpdGlvbiB0byB0aGUgY29sbGVjdGlvbiAodGhvdWdoIG5vdCBkZXNpZ25hdGVkIGFzIGEgY2F0ZWdvcnkpIG9mIHNldmVyYWwgZG96ZW4gY3Jvc3Mgc2VjdGlvbi90b21vZ3JhcGhpYy9jdXRhd2F5IHRlY2huaWNhbCBhbmQgbWVkaWNhbCBpbGx1c3RyYXRpb24gcG9zdHMgdG8gdGhpcyBibG9nLCB0aG91Z2ggdGhpcyBvbmUgaGFzIGEgbW9yZSBjb21wbGljYXRlZCBhbmQgcGVyaGFwcyBtb3JlIHRyYWdpYyBoaXN0b3J5IHRoYW4gbW9zdC4gSXQgZGVwaWN0cyB3b3JrIGJlaW5nIGRvbmUgb24gdGhlIGlsbCBmYXRlZCBIdWRzb24gUml2ZXIgdHViZXMsIHdoaWNoIGJlZ2FuIGxpZmUgYXMgYSBwcm9qZWN0IGluIDE4NzQgd2l0aCBjb25zdHJ1Y3Rpb24gc3RhcnRpbmcgaW4gMTg3ODsgdW5mb3J0dW5hdGVseSB0aGVyZSB3ZXJlIGF0IGxlYXN0IHRocmVlIGRpZmZlcmVudCBjb21wYW5pZXMgdGhhdCB1bmRlcnRvb2sgdGhlIGRpZmZpY3VsdCBwcm9qZWN0IGJlZm9yZSBnb2luZyBidXN0LCBhbmQgdGhlcmUgd2FzIGFsc28gb25lIG1ham9yIGRpc2FzdGVyIGluIDE4ODMgaW4gd2hpY2ggbW9yZSB0aGFuIDIwIHdvcmtlcnMgd2VyZSBraWxsZWQuIHByb2plY3QgZ290IHVuZGVyd2F5IGZvciB0aGUgZmluYWwgdGltZSBpbiAxODk5LCBhbmQgd2FzIG9wZW5lZCB0byB0cmFmZmljIGluIDE5MDguIHRoZSB0b3AgaW1hZ2Ugd29ya21lbiBhcmUgaW5zdGFsbGluZyBhIHNoaWVsZGluZyB0aGF0IHdvdWxkIGxhdGVyIGJlIGFiYW5kb25lZCwgd29ya2luZyBJIHRoaW5rIHZpYSBvbmUgZWxlY3RyaWMgc3BhcmsgbGFtcCBhdCB1cHBlciBsZWZ0OyBiZWxvdyB3ZSBzZWUgYSBjYXNzb24gaW4gd2hpY2ggYSBudW1iZXIgb2YgbGFib3JlcnMgd2VyZSwgdGhhdCBiZWluZyBzdW5rIGxvd2VyIGFuZCBsb3dlciBhcyB0aGUgZXhjYXZhdGlvbnMgcHJvY2VlZC4gdHdvIGltYWdlcyBhcmUgYWJvdXQgbGlmZSBzaXplIGZyb20gd2hlbiB0aGV5IGFwcGVhcmVkIGluIElsbHVzdHJpcnRlIFplaXR1bmcgKExlaXB6aWcpLCBvbiAyOSBKYW51YXJ5IDE4ODEgdGhvdWdoIHRoZXkgbm8gZG91YnQgYXBwZWFyZWQgYSBmZXcgbW9udGhzIGVhcmxpZXIgaW4gSGFycGVyIFdlZWtseSBvciBTY2llbnRpZmljIEFtZXJpY2FuIG9yIHNvbWUgc3VjaC4gLgpUaGlzIGZ1bmN0aW9uIGNhbiBiZSBjYWxsZWQgaW4gYW5vdGhlciBmdW5jdGlvbiBvZiB0eXBlIEFwcCAoSHR0cFNlcnZlckVycm9yICsgZSkgciBtIGEgYmVjYXVzZSB0aGUgdHlwZXMgdW5pZnkgYXMgVmFyaWFudC4gU28gaW4gdGhlIGVuZCwgSSBjYW4gc3BlY2lmeSBleGFjdGx5IHdoaWNoIGtub3duIGVycm9ycyBhIGZ1bmN0aW9uIGNhbiBwcm9kdWNlIChhbmQgbm8gbW9yZSEpIGFuZCBmb3JjZSBhIGNhbGxlciB0byBoYW5kbGUgZXZlcnkgZXJyb3IgdHlwZSBhdCBjb21waWxlIHRpbWUsIGFsbCB3aGlsZSBoYXZpbmcgdmVyeSBmaW5lIGdyYWluZWQsIGNvbXBvc2FibGUgZXJyb3IgdHlwZXMgZm9yIGV2ZXJ5IGZ1bmN0aW9uLi4gCkJjIGEgcGljdHVyZSBhcHBlYXJzIGluc2lkZSB5b3VyIG1pbmQgYXQgZWFjaCBzb3VuZCwgc25kIHlvdSBjYW4gbWFrZSBzZW5zZSBvZiBhbnl0aGluZy4gClRoZWlyIGNyYXppbmVzcyBpcyB0aGVpciByaXNrIGFuZCByZXdhcmQuIApBIGJldCBpbnRvIGFuIGVtcHR5IHBvdCA1MCUuIApQbGVhc2UgdGFrZSBhIGxvb2sgYXQgbXkgYm9va3MhIFJlbW92ZSBoaW0gZnJvbSB0aGUgc2hhbWUgYW5kIGd1aWx0IG9mIGhpcyBwYXN0IGFuZCBnaXZlIGhpbSBjb3VyYWdlIHRvIGxpdmUgaW4gdGhlIHByZXNlbnQgYW5kIHNldCBnb2FscyBmb3IgdGhlIGZ1dHVyZSwgR29kIEkgdm93ZWQgdG8gc3RhbmQgYnkgaGltIGluIHlvdXIgbmFtZSBhbmQgbmVlZCBzdHJlbnRoIGFuZCBwYXRpZW5jZSB0byBnZXQgdGhydSB0aGlzIHRpbWUgaW4gb3VyIGxpdmVzLiAKSSBhY3R1YWxseSB3cml0dGVuIGEgc3BlZWNoIG9uIG9yZ2FuIGRvbmF0aW9uIGFuZCB3aHkgdGhpcyBjb25jZXB0IChrbm93biBhcyBPcHQgT3V0KSBpcyB0aGUgYmV0dGVyIGlkZWEgdGhhbiBBbWVyaWNhIChPcHQgSW4pLiAKTG9uZyBleHBvc3VyZSBsYW5kc2NhcGUgd29yayBkdXJpbmcgbmlnaHQgb3IgYmx1ZSBob3VyCkZ1Y2t5b21hbWEgdQpUaGV5IGRpZCBpdCB3aXRoIGJsYWNrIHBhbnRoZXIgYXMgd2VsbCwgYW5kIHRoZXkgV0lMTCBkbyBpdCB3aGVuIGl0J3MgYSBnYXkgbWFpbiBjaGFyYWN0ZXIuIApIaWdoIG5vdGVzIHVzdWFsbHkgZ28gdmVyeSBzaGFycC4gSW4gZmFjdCwgbW9zdCBvZiB0aGUgbm90ZXMgYXJlIHNoYXJwIHJpZ2h0IG9mZiB0aGUgYmF0LiBJdCB0YWtlcyB0aW1lIGFuZCBwcmFjdGljZSB0byByZWxlYXJuIGFuIGVtYm91Y2h1cmUuLiAKVGhlIENodXJjaCBvZiBHb2QgaXMgc3RyaXZpbmcgZm9yIHB1cmlmaWNhdGlvbiBhbmQgc2FuY3RpZmljYXRpb24gaW4gcHJlcGFyYXRpb24gdG8gbWVldCB0aGVpciBMb3JkLiAKRm9yIHN0YXJ0ZXJzLCB0aGUgMyB0cmFpdHMgZGlkIHN0YXJ0IHdpdGggdGhlaXIgc21hbGwgYm9udXNlcyAgIGFsbW9zdCBldmVyeSBnYW1lIHdpdGggc3RhdHMgbGlrZSB0aGF0IGhhdmUuIApKZSB2b3VsYWlzIG1lIGZhaXJlIGNvbm5hdHJlIGV0IGRmZW5kcmUgbWEgdmlzaW9uIGRlIGxhIGRpdHRpcXVlLCBnb3VybWFuZGUgZXQgYW50aSByZ2ltZS4uIApMYXN0bHksIHdlJ3ZlIHNlZW4gdGhhdCB0aGUgcHJvYmFiaWxpdHkgb2Ygcm9sbGluZyBhIGdpdmVuIG51bWJlciB3aXRoIG9uZSByb2xsIG9mIHRoZSBkaWNlIGlzIHRoZSBudW1iZXIgb2YgdGltZXMgdGhhdCBudW1iZXIgbWlnaHQgYXBwZWFyIGRpdmlkZWQgYnkgdGhlIHRvdGFsIG51bWJlciBvZiBwb3NzaWJpbGl0aWVzIHRoYXQgbWlnaHQgYXBwZWFyLiAKVGhlbiBJIHdlbnQgYmFjayB0byBzY2hvb2wgYW5kIHdhcyBhIGJpdCBtb3JlIG9jY3VwaWVkIGFuZCBwbGF5ZWQgcG9rZXIgYSBmZXcgdGltZXMgaW4gYSB3ZWVrLiBUaGlzIHdhcyB0aGUgbW9zdCBwcm9maXRhYmxlIHRpbWUgYmVjYXVzZSBJIGNvdWxkbiByZWFsbHkgYWZmb3JkIHRoaW5raW5nIGFib3V0IHBva2VyIGFsbCB0aGUgdGltZSBhbmQgdGh1cywgcGxheWVkIHdpdGggYSBtdWNoIGNsZWFyZXIgbWluZC4gUmlnaHQgbm93LCBJIGJhY2sgaG9tZSBmb3IgYSB3aGlsZSBhbmQgcG9rZXIgaGFzIHRha2VuIG92ZXIgbWUgYWdhaW4uLiAKWW91IGRvIG5vdCwgYW5kIHRoYXQgT0suIEkgc3RpbGwgY29udGVuZCB0aGF0IGthbmdhcm9vIGNvdXJ0IGlzIGEgZmV3IHN0ZXBzIHRvbyBmYXIuLiAKTm90IHdoZW4gcGVyZm9ybWVkIHVuZGVyIGJpZyBwaGFybWEgKHRoaW5rIEogUGZpemVyLCBldGMpIGNvbnRyYWN0cy4gVGhleSBrbm93IHRoYXQgdGhlaXIgdGVzdGluZyBpcyB1cCB0byBzY3J1dGlueSBvZiAiQW1lcmljYW4gU3RhbmRhcmRzIiwgYW5kIHNvIG1hbnkgcHJlY2xpbmljYWwgc2l0ZXMgYXJlIGVtcGxveWluZyBtb3JlIGFuZCBtb3JlIFdlc3Rlcm4gdGVjaG5pcXVlcyB0byBhcHBlYWwgdG8gYmlnIHBoYXJtYS4gSWYgaXQgd2FzIG5vdCBwZXJmb3JtZWQgdXAgdG8gYSBjZXJ0YWluIHN0YW5kYXJkIG9mIGV0aGljcyBhbmQgcmVzdWx0cywgdGhlbiBub25lIG9mIHRoZSByZXNlYXJjaCBpcyBhY2NlcHRhYmxlIHRvIHRoZSBGREEgYW5kIG90aGVyIGdvdmVybmluZyBhZ2VuY2llcy4gCklmIGl0cyBub3QsIGRvdWJsZSBjbGljayBvbiBpdCBhbmQgc2V0IGl0cyBTdGFydHVwIHR5cGUgdG8gIkF1dG9tYXRpYyIuIApXaGF0IGFyZSB5b3VyIE11c3QgRG9zIGFuZCBiZXN0IHJlc291cmNlcyBmb3IgYW4gZWZmZWN0aXZlIHN0dWR5IHJvdXRpbmU/IE9idmlvdXNseSwgSSBzaG91bGQgYWxzbyBsb29rIGF0IG15IG93biBwbGF5ZWQgaGFuZHMgYW5kIHRyeSB0byBhbmFseXplIG15IG1pc3Rha2VzLiBCdXQgcmlnaHQgbm93LCBJIHRoaW5rIEkgbWFrZSB3YXkgdG8gbWFueSBtaXN0YWtlcyB0byBnZXQgYW55IGJlbmVmaXQgZnJvbSBzdHVkeWluZyBqdXN0IG9uZSBoYW5kLiBUaGFua3MgIUkgY2FuIHVuZGVyc3RhbmQgYWxsIHRoZSBwb2ludHMgdGhhdCBzcGVhayBmb3IgYW5kIGFnYWluc3QgcGxheWluZyBwb2tlci4gU3VyZSwgbXkgZGVncmVlIGFuZCBzb2NpYWwgbGlmZSBoYXMgcHJpb3JpdHkuIEJ1dCBhZnRlciB0aGF0LCBJIHRoaW5rIHN0dWR5aW5nIHBva2VyIG1ha2VzIG1vcmUgc2Vuc2UgdGhhbiB3YXRjaGluZyBOZXRmbGl4IG9kZXIgZ2FtaW5nLCBldmVuIGlmIHRoZXJlIGlzIG9ubHkgYSBzbGlnaHQgY2hhbmNlIHRoYXQgdGhpcyB3aWxsIHR1cm4gb3V0IHByb2ZpdGFibGUuIEkgZW5qb3kgaXQgKGxpa2UgTmV0ZmxpeCksIGxlYXJuIHRvIHRoaW5rIG1vcmUgb2JqZWN0aXZlbHkgYW5kIG1heWJlIG1ha2Ugc29tZSBtb25leSBmcm9tIGl0IGluIHRoZSBmdXR1cmUuIE9uY2UgeW91IHB1dCBpbiB0aGUgZ3JpbmQgYW5kIHBsYXkgZXhwbG9pdGF0aXZlL3doYXRldmVyIGF0IDEvMiBsaXZlIG9yIDUgMjVOTCBHVE8sIHlvdSdsbCBiZSBmaWdodGluZyBmb3IgcGVubmllcyBhbmQgc2NyYXBzLiBFdmVyeXRoaW5nIGluIHBva2VyIGNvc3RzIG1vbmV5IGFuZCBpcyBzdWJzY3JpcHRpb24gYmFzZWQuIFRoZSBjb21tdXRlL3RyYXZlbCBleHBlbnNlcyBhbmQgbG9zdCBvcHBvcnR1bml0eSBjb3N0cyBmb3IgcGxheWluZyBwb2tlciBpcyBpbW1lbnNlLiBZb3UgYXJlIGFzIGdvb2QgYXMgdGhlIHBsYXllciBtYWtpbmcgYSB3b3JzZSBvZmYgbW92ZSB0aGF0IGluYWR2ZXJ0ZW50bHkgbWFrZXMgeW91ciBwbGF5ICtFViBhbmQgaGlzL2hlciAgRVYuClJlbWVtYmVyLCB0aGlzIGd1eSBpcyBub3QgYSBwcm9wZXJ0eSBtYW5hZ2VyL2Fic2VudGVlIGxhbmRsb3JkLiAKVGhpcyBoZXJhbGRzIDQgZ29sZCBicmFjZWxldHMgdG8gTGlzYW5kcm8ncyBjcmVkaXQuIEJlZm9yZSBoZSB3b24gaGlzIGZpcnN0IFdTT1AgdGl0bGUgaW4gMjAwNywgaGUgd2FzIGF0IHRoZSB0b3Agb2YgbGlzdHMgZXZlcnl3aGVyZSBhcyBvbmUgb2YgdGhlIGJlc3QgcGxheWVycyBuZXZlciB0byBoYXZlIHdvbiBhIGdvbGQgYnJhY2VsZXQuIEJ1dCBoZSBhbHNvIHdvbiB0d28gbW9yZSBicmFjZWxldHMgYnkgY2FwdHVyaW5nIEV2ZW50IDggMiA3IERyYXcgTG93YmFsbCBObyBMaW1pdCBhbmQgRXZlbnQgMjUgT21haGEvU2V2ZW4gQ2FyZCBTdHVkIEhpIExvdyA4IG9yIEJldHRlci4gClBsZWFzZSBzZWUgb3VyIGxpc3RpbmdzIG9mIHdobydzIHdobyBhbmQgY29udGFjdCB0aGUgcHJhY3RpdGlvbmVyIGRpcmVjdGx5LCBlaXRoZXIgYnkgcGhvbmUgb3IgdmlhIHRoZWlyIHdlYnNpdGUsIGFzIHRoZXkgZWFjaCB0YWtlIHRoZWlyIG93biBib29raW5ncy4KVGhpcyBpcyBub3QgYWtpbiB0byBhIHJhY2lhbCBzbHVyLCBldmVuIGluIHRoZSBzbGlnaHRlc3QgYW5kIGNvbXBhcmluZyBpdCB0byBvbmUgaXMgY29tcGxldGVseSBhc2luaW5lLCBhbmQgSSB0aGluayB0aGF0IGFueW9uZSB3aG8gYmVlbiBjYWxsZWQgYSByYWNpYWwgc2x1ciBhdCBhbnkgcG9pbnQgaW4gdGhlaXIgbGl2ZXMgd291bGQgYWdyZWUuIApDcml0aWNhbCB0aGVvcmlzdHMgZnJvbSB0aGUgRnJhbmtmdXJ0IFNjaG9vbCBjb250aW51ZWQgdGhpbmtpbmcgYWJvdXQgZXBpc3RlbW9sb2dpZXMgdGhyb3VnaG91dCB0aGUgbWlkZGxlIG9mIHRoZSBjZW50dXJ5LiBXaHksIGlmIHdvcmtlcnMgdW5kZXJzdG9vZCB0aGUgd29ybGQgYmV0dGVyIHRoYW4gdGhlIGJvdXJnZW9pc2llLCBkaWQgdGhleSBub3QgcmlzZSB1cD8gVGhlIGFuc3dlciwgYWNjb3JkaW5nIHRvIEFudG9uaW8gR3JhbXNjaSwgd2FzIHRoZSAiaGVnZW1vbnkiIG9mIHRoZSBpZGVhcyBvZiB0aGUgcnVsaW5nIGNsYXNzZXMuIEluIG90aGVyIHdvcmRzLCB0aGUgaWRlYXMgb2YgdGhlIHJ1bGluZyBjbGFzcyBhcmUgbm90IGp1c3QgZXZlcnl3aGVyZSB0aGUgcnVsaW5nIGlkZWFzLCBidXQgYWxzbyBzbyB0aG9yb3VnaGx5IGNvbnRyb2wgcHVibGljIGRlYmF0ZSB0aGF0IHdlIGNhbm5vdCBlc2NhcGUgdGhlbS4gCkFzIGZvciBub3QgbW92aW5nIG91dCwgeWVhaC4gSW4gc29tZSBzaXR1YXRpb25zLCBJIGhhdmUgcmVjb21tZW5kZWQgdGhhdC4gVXN1YWxseSB3aGVuIHRoZXJlIGFyZSBtaW5vciBjaGlsZHJlbiBpbnZvbHZlZC4gT3Igd2hlbiB0aGVyZSBpcyBhIHN1YnN0YW50aWFsIGZlYXIgdGhhdCB0aGUgb3RoZXIgcGFydHkgd2lsbCB0cmFzaCB0aGUgaG91c2UuIE1vdmluZyBvdXQgd2lsbCBub3QgZ2l2ZSB1cCB5b3VyIG1vdGhlcnMgaW50ZXJlc3QgaW4gdGhlIGhvbWUuCkxvZ2ljIFN0dWRpbyA4LjAuMiBrZXkgY29kZSBnZW5lcmF0b3IgLiBMb2dpYyBTdHVkaW8gUHJvIDggc2VyaWFsLiAKVGhlIHZhbHVhdGlvbiBpcyBiYXNlZCBvbiB0aGUgbWlkIHBvaW50IG9mIGEgcmFuZ2Ugb2YgMTExcCB0byAxMjdwIHBlciBzaGFyZSwgd2hpY2ggd2FzIHN0cnVjayBhZnRlciBpdHMgYWR2aXNlcnMgY29uc3VsdGVkIG1vcmUgdGhhbiAyMDAgaW5zdGl0dXRpb25zIGFyb3VuZCBFdXJvcGUuQSBzcG9rZXNtYW4gc2FpZDogIldlIGZlZWwgKHRoZSBpbmRpY2F0aXZlIHByaWNlIHJhbmdlKSByZWZsZWN0cyB0aGUgY29uc2lkZXJhYmxlIHN1Y2Nlc3Mgb2YgdGhlIGJ1c2luZXNzIHRvIGRhdGUgYW5kIGlzIHRoZSBiYXNpcyBmb3IgYSByZWFsaXN0aWMgYXNzZXNzbWVudCBvZiBQYXJ0eUdhbWluZyBhcyBhbiBpbnZlc3RtZW50IG9wcG9ydHVuaXR5LiJNZWRpYSByZXBvcnRzIHNhaWQgbWFueSBpbnZlc3RvcnMgd2VyZSBjb25jZXJuZWQgdGhlIEdpYnJhbHRhciBiYXNlZCBmaXJtIHdhcyB0b28gZXhwZW5zaXZlIGFuZCB3b3JyaWVkIGFib3V0IHRoZSBsZWdhbGl0eSBvZiBvbmxpbmUgcG9rZXIgaW4gdGhlIFVuaXRlZCBTdGF0ZXMuQnV0IGV2aWRlbmNlIHRoYXQgdGhlIGludGVybmV0IGdhbWluZyBpbmR1c3RyeSBpcyBhdHRyYWN0aXZlIHdhcyB1bmRlcmxpbmVkIGJ5IHRoZSBmbG90YXRpb24gb2YgRW1waXJlIE9ubGluZSwgd2hpY2ggbWFya2V0cyBtYWlubHkgZ2FtYmxpbmcgd2Vic2l0ZXMuIApUaGlzIHNvIG11Y2guIEkgaGF2ZSBubyBlYXRpbmcgZGlzb3JkZXIgb3RoZXIgdGhhbiBqdXN0IGxvdmluZyBmb29kLiBCdXQgc2V0dGluZyBhIGdvYWwgUkFOR0Ugb2YgY2Fsb3JpZXMgd2FzIHRoZSBnYW1lIGNoYW5nZXIgZm9yIG1lLiBPbmUgb2YgdGhlIHVzZXJzIGlzIGl0IHUvZnVuY2hvcmRzPyBQb3N0cyByYW5nZXMgaW4gdGhlaXIgY29tbWVudHMgYW5kIGl0IG1ha2Ugc28gbXVjaCBzZW5zZS4KSWYgeW91IGJsb2NrIGNvb2tpZXMgb24geW91ciBicm93c2VyLCBjZXJ0YWluIGZlYXR1cmVzIG9uIG91ciBzaXRlcyBtYXkgbm90IHdvcmsuIElmIHlvdSBibG9jayBvciBkZWxldGUgY29va2llcywgbm90IGFsbCBvZiB0aGUgdHJhY2tpbmcgYWN0aXZpdGllcyB3ZSBoYXZlIGRlc2NyaWJlZCBoZXJlIHdpbGwgc3RvcC4gQ2hvaWNlcyB5b3UgbWFrZSBhcmUgYm90aCBicm93c2VyIGFuZCBkZXZpY2Ugc3BlY2lmaWMuClNhc2tpYS4gClRoZW4sIGNvcHkgYW5kIHBhc3RlIHRoYXQgaW5mb3JtYXRpb24gaW50byBhbiBlIG1haWwgdG8gc2VuZCB0byB5b3Vyc2VsZi4gClRoZSBtYWluIHNraSB0cmFpbHMgaW5jbHVkaW5nIGV2ZW50IGxvb3Agd2VyZSByb2xsZWQgb24gVHVlc2RheSBsZWF2aW5nIGEgc29mdCA2IGJhc2UuIEFmdGVyIG1vcmUgbGFrZSBlZmZlY3QgV2VkbmVzZGF5IGFuZCBpbnRvIHRvZGF5LCBtb3JlIGdyb29taW5nIHdpbGwgZm9sbG93IHdpdGggdHJhY2tzIGxpa2VseSB0byBiZSBzZXQgb24gYWxsIG1haW4gc2tpIHRyYWlscyBieSB0aGUgd2Vla2VuZC4gVGhlcmUgYXJlIHN0aWxsIGEgbnVtYmVyIG9mIHdldCBzcG90cyBvdXQgdGhlcmUsIG1vc3RseSBzbWFsbCBvbmVzIHRoYXQgYXJlIGVhc3kgdG8gc2tpIGFyb3VuZC4gClNrZXB0aWMxOTk5ICAxIHBvaW50ICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpUaG9tc29uIG1hbmFnZWQgdG8gcHV0IGFuIHVuZGVyc3RhbmRhYmxlIGFzc2Vzc21lbnQgb24gYSB2ZXJ5IGRpZmZpY3VsdCB2aXN1YWxpemF0aW9uLCB0YWxraW5nIGluIHRlcm1zIG9mIGFuIGF0b20gYmVpbmcgIjEvMTAsMDAwLDAwMCBvciBmcm9tIDEvMTAsMDAwLDAwMCB0byAxLzEwMCwwMDAsMDAwIG9mIGEgY2VudGltZXRyZSBpbiBkaWFtZXRlciIsIG9yIDF4MTAgN21ldGVycywgd2hpY2ggaXMganVzdCBhYm91dCB0aGUgc2l6ZSBvZiBhIGNlbGwgbnVjbGV1cyBvciBETkE7IHRoYXQgaW4gdGhlIG5laWdoYm9yaG9vZCwgZXNwZWNpYWxseSBpZiB5b3UgbG9vayBhdCB0aGUgc21hbGxlciBudW1iZXIgd2hpY2ggaXMgMTAgOCBtZXRlcnMsIHdoaWNoIHN0YXJ0cyB0byBjbG9zZSBpbiBvbiB0aGUgc2l6ZSBvZiB0aGUgbWFzc2l2ZSBjYXJib24gYXRvbSAoMTAgMTApLCBidXQgc29ydGEgbm90IHNvIGNsb3NlIHRvIHRoZSBlbGVjdHJvbiAoMTAgMTIpICwgb3IgY2FyYm9uIGF0b20gbnVjbGV1cyAoMTAgMTQpIG9yIHByb3RvbiAoMTAgMTUpLiBIYXp5IHN0dWZmIGluZGVlZCwgZmlsbGVkIHdpdGggbm90aGluZy4gVGhlIG90aGVyIGhhbmQsIGlmIHlvdSBwcm9jZWVkZWQgaW4gYSBzcGFjZSB2ZWhpY2xlIDEwMTQgbWV0ZXJzIGZyb20gRWFydGggb3VyIFNvbGFyIFN5c3RlbSB3b3VsZCBhcHBlYXIgYXMganVzdCBhbm90aGVyIGZ1enp5IHNwbG90Y2ggaW4gdGhlIHNreS4gCkkgd29yayBtb3JlIGhvdXJzLCBJIHRoZSBvbmx5IG9uZSB3aG8gY29va3Mgb3IgY2xlYW5zLCBhbmQgSSBzdGlsbCBtYWtlIHRpbWUgZm9yIG15IGZhbWlseS4gCkVkIFBhc3RvciAoRCBBWiksIGFuZCBSZXAuIFRyZW50IEZyYW5rcyAoUiBBWikgbG9vayBvbiBpbiBXYXNoaW5ndG9uLCBEQy4gCkF0IGFub3RoZXIgdGltZSwgaXQgd291bGQgYmUgYSBjYW4ndCBwYXNzIGRlYWwuIApBIGdhbWJsZXIgYW5kIGEgcG9rZXIgcGxheWVyIGhlIHdhcywgYWxsIGluIG9yIG5vdGhpbmcuIFRoZXJlIHdhcyBubyBtaWRkbGUgZ3JvdW5kLi4gCkEgbG90IG9mIHRoZSBmZWF0dXJlcyBpbiB0aGUgZ2FtZSAoc3VjaCBhcyBSdlIgY29tYmF0LCBQdWJsaWMgUXVlc3RzLCBldGMpIHdlcmVuIHNlZW4gdW50aWwgbXVjaCBsYXRlciBpbiB0aGVpciBjb250ZW1wb3JhcmllcyAoV29ybGQgUXVlc3RzLCB0aGUgV29XIGVxdWl2YWxlbnQsIGRpZG4gYXBwZWFyIHVudGlsIDIgeWVhcnMgYWdvICAgV2FyaGFtbWVyIGhhZCBQdWJsaWMgcXVlc3RzIDEwIHllYXJzIGFnbyEpLiBJIGFsd2F5cyB0aG91Z2h0IHRoYXQgaXQgYSBzaGFtZSB0aGF0IHRoZSBXYXJoYW1tZXIgSVAgaXMgc28gZ3JlYXQgKGVzcGVjaWFsbHkgRmFudGFzeSBXYXJoYW1tZXIpIHlldCBpcyBzbyBtaXNtYW5hZ2VkIGF0IHRpbWVzIHdpdGggc29tZSBvZiB0aGVzZSBzaG92ZWx3YXJlIHF1YWxpdHkgZ2FtZXMgKG5vdCBzYXlpbmcgdGhpcyBpcyBiYWQgeWV0LCBpdCBqdXN0IHRoYXQgbW9zdCBXYXJoYW1tZXIgZ2FtZXMgYXJlIG9rYXkgYXQgYmVzdCB1c3VhbGx5KS4uIApMZWF2ZSB5b3VyIGVnbyBvdXQgb2YgaXQuIEZlZWxpbmcgbGlrZSB5b3UndmUgZ290IHNvbWV0aGluZyB0byBwcm92ZSB3aWxsIG9ubHkgZ2V0IHlvdSBpbnRvIHRyb3VibGUuClRoZSBzdG9yeSBkaWQgbm90IGJyaW5nIG1lIGFueSBuZXcgcmV2ZWxhdGlvbnMgKGFsdGhvdWdoIG15IHJlYWN0aW9uIHByb2JhYmx5IHNob3VsZCBoYXZlIGhhZCksIGJ1dCB0aGUgZW1vdGlvbnMgSSBmZWx0IHdhcyBzbyBpbnRlbnNlLCBhY3V0ZSwgdGhhdCBJIHRoaW5rIGl0IHF1YWxpZmllcyBhcyAiY2hhbmdpbmcgbXkgbGlmZSIuU28geW91IG1heSBzdGlsbCBtZWV0IGEgYm9vayB0aGF0IHdpbGwgc2hha2UgeW91IDopVGhlIGRlc2lyZSBmb3IgdGhlIGlzb2xhdGlvbiBvZiBoYXlkZWUgYWxzbyBjb21lcyBmcm9tIHRoZSBuZWdhdGl2ZSB2aWV3IHNoZSBoYXMgZGV2ZWxvcGVkIG9mIHBlb3BsZSBiZWNhdXNlIG9mIGhlciBwYXN0LiAKV2hlbiBBZG9sZiBIaXRsZXIgc2V0IGhpcyBzaWdodHMgb24gYWdncmVzc2l2ZSBleHBhbnNpb24gaW4gMTkzMywgaGUgZGlkIHNvIHdpdGgga25vd2xlZGdlIHRoYXQgdGhlIE94Zm9yZCBVbmlvbiwgdGhlIGVsaXRlIG9mIEJyaXRpc2ggc29jaWV0eSwgaGFkIHZvdGVkIGluIEZlYnJ1YXJ5IDE5MzMgdGhhdCB1bmRlciAibm8gY2lyY3Vtc3RhbmNlcyIgd291bGQgdGhleSAiZmlnaHQgZm9yIGtpbmcgYW5kIGNvdW50cnkiLiBJZiB5b3VyIGFkdmVyc2FyaWVzIGtub3cgdGhhdCBhIHNvY2lldHkgZmVhcnMgY29uZnJvbnRhdGlvbiBhbmQgcmVsaWVzIG9ubHkgb24gYmxhbmRpc2htZW50cyBhbmQgZGlwbG9tYWN5LCB0aGUgZGlwbG9tYWN5IGlzIHN1cmUgdG8gZmFpbC4uIApHZW5kZXIgZXF1YWxseSBoYXMgbm90aGluZyB0byBkbyB3aXRoIGFzc3VtaW5nIG1lbiBjYW4gYmUgb3JnYW5pc2VkLgpIb21lb3BhdGhpYyB0aXNzdWUgc2FsdHMgICBhbHNvIGtub3duIGFzIGhvbWVvcGF0aGljIGNlbGwgc2FsdHMgICBhcmUgYSBzaW1wbGUgc3lzdGVtIHdpdGhpbiB0aGUgbGFyZ2VyIGZpZWxkIG9mIGhvbWVvcGF0aGljcy4gCkFub3RoZXIgdmVudHVyZSwgbWFudWZhY3R1cmluZyBhbmQgbWFya2V0aW5nIFZpIEJlYXV0eSBQcm9kdWN0cywgd2FzIGdlbmVyYXRpbmcgaHVnZSBvcmRlcnMuIFNoZSBtYWRlIHBvc2l0aXZlIGlucm9hZHMgYXMgYm90aCBhbiBlbnRyZXByZW5ldXIgYW5kIGEgcm9sZSBtb2RlbC4gRGVzbW9uZCB0YXVnaHQgaGFpciBkcmVzc2luZy9jb3NtZXRvbG9neSBhbGxvd2luZyBoZXIgdG8gbWVudG9yIGJsYWNrIHdvbWVuIGFjcm9zcyB0aGUgY291bnRyeS4gQWRkaXRpb25hbGx5LCBzaGUgd2FzIGEgQ2l2aWwgUmlnaHRzIHBpb25lZXIuCklmIHlvdXIgaW1tdW5lIHN5c3RlbSB3YXMgY29tcHJvbWlzZWQgZW5vdWdoIHRoYXQgdGhpcyB3b3VsZCBiZSBhIHByb2JsZW0sIHNvIHdvdWxkIHJhbmRvbSBpbmZlY3Rpb25zLi4gCiJUaGV5IGNvbWUgYXQgeW91IGFuZCBrZWVwIGNvbWluZyBhdCB5b3UuICBZb3UgZ2V0IHRoZW0gdG8gdGFrZSBzaG90cyB5b3Ugd2FudCB0aGVtIHRvIHRha2UsIGFuZCB0aGVuIHRoZXkgY2xlYW4gdXAgb24gdGhlIGdsYXNzLiBUaGF0J3Mgb25lIHRoaW5nIHdlJ3JlIGdvaW5nIHRvIGhhdmUgdG8gZ2V0IGEgbG90IGJldHRlciBhdCwgaWYgd2UncmUgZ29pbmcgdG8gYWNjb21wbGlzaCB3aGF0IHdlIHdhbnQgdG8gYWNjb21wbGlzaC4iClRoZXkgZGlkIGEgZ29vZCBqb2IsIDUgbWlucyBmb3Igd2F0ZXIgaXMga2luZGEgbG9uZy4gQnV0IGlmIHRoZXJlIHdhcyBubyBsaWZlIGhhemFyZCBpbiB0aGUgc3RydWN0dXJlLCBub25lIG9mIHRoZSBleHBvdXNlcnMgc2VlbSB0aHJlYXRlbmVkLCBpdHMgYWNjZXB0YWJsZS4gV2h5IHJ1biB0aGUgZ3V5cyBjcmF6eSB0byBzZXR1cCBhIHN1cnJvdW5kIGFuZCBkcm93biBhdCBhIGNvbnN0cnVjdGlvbiBzaXRlLiBTaG91bGQgdGhleSBvZiBjaGFyZ2VkIGEgZGVjayBndW4gb3IgMiwgc3VyZS4gQ291bGQgdGhleSBoYXZlIGJhY2sgc3RyZXRjaGVkIGZyb20gdGhlIGVuZ2luZSB0byB0aGUgbGFkZGVyLCBzdXJlLiBCdXQgdGhlIGVuZCBvZiB0aGUgZGF5IHRoZXkgZ290IHdhdGVyIG9uIHRoZSBmaXJlLgpJIGhhdmUgbm8gaW50ZXJlc3QgZ29pbmcgYmFjayB0byBtYXNzYWdlIHRoZXJhcHkgYW5kIGl0IHJlYWxseSBqdXN0IHdvdWxkbiBiZSBkb2FibGUgZm9yIHRoZSBmYWN0IHRoYXQgbXkgaHVzYmFuZCB3b3JrcyBkdXJpbmcgdGhlIGRheSBhbmQgYXMgbXVjaCBPVCBhcyBoZSBjYW4gQU5EIEkgY2FuIG5ldmVyIGFjY3VyYXRlbHkga25vdyB3aGVuIGhlIGJlIHdvcmtpbmcgT1QuLiAKQXJjaGl2ZSBmb3IgRmVicnVhcnkgMjAxMSBQYWdlIDMKVGhleSBhcmUgb2ZmZXJlZCBieSBmcmVlIHBva2VyIHdlYnNpdGVzIGFuZCBwb2tlciBjb21tdW5pdGllcyBvbiB0aGUgbmV0LiBUaGV5IGFyZSBlaXRoZXIgcHJvdGVjdGVkIGJ5IGEgcGFzc3dvcmQgdGhhdCBpcyBvbmx5IGdpdmVuIG91dCB0byBtZW1iZXJzIG9mIHRoZSBmcmVlIHBva2VyIHdlYnNpdGVzIG9yIGFyZSByZXN0cmljdGVkLiBJbiB0aGF0IGNhc2UgWW91IGhhdmUgdG8gZG93bmxvYWQgdGhlIHBva2VyIHNvZnR3YXJlIHZpYSB0aGUgYWZmaWxpYXRlIGxpbmsgb2YgdGhlIGZyZWUgcG9rZXIgd2Vic2l0ZSB0byBiZSBlbGlnaWJsZSB0byBwbGF5IGluIHRoYXQgZnJlZSBwb2tlciB0b3VybmFtZW50LiAKTGEgZGlyZWN0aW9uIGRpdCBhdm9pciByZW5jb250ciB0b3VzIHNlcyBtYXNzb3RocmFwZXV0ZXMgYWZpbiBkZSBsZXVyIHJhcHBlbGVyIGxldXJzIG9ibGlnYXRpb25zLgpQZW9wbGUgZ2V0IGEgbG90IG91dCBvZiBjdXR0aW5nIHRoZSBjb3JkIG9mIGF0dGFjaG1lbnQgdG8gdGhlaXIgcHJlc2VudCBwYXJ0bmVyIG9yIHNwb3VzZS4KWmlwcHlUaGVDaGlja2VuICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvClRoaW5rIGFib3V0IEpvYnMgaW50cm9kdWN0aW9uIG9mIHRoZSBpUGhvbmUgYW5kIGlPUyAgIHNvIG11Y2ggb2Ygd2hhdCBtYWRlIGl0IGFtYXppbmcgd2FzIGhvdyBpdCBtYXBwZWQgb3VyIG91ciBwaHlzaWNhbCB3b3JsZC4gCkNyaXRpY2FsIFJvbGUganVzdCBmZWVscyBsaWtlIHRoZXkgcGxvcHBlZCBhIHJlY29yZGVyIGRvd24gb24gdGhlIGNlbnRlciBvZiB0aGUgdGFibGUgYW5kIGp1c3QgdXBsb2FkZWQgdGhlIHdob2xlIGdhbWUgd2l0aCAwIGVkaXRpbmcuIEkganVzdCBkaWQgbm90IGxpa2UgaXQuCkJvdHMsIGNyYXdsZXJzLCBzcGlkZXJzLCBkYXRhIG1pbmVycywgc2NyYXBpbmcgYW5kIG90aGVyIGF1dG9tYXRpYyBhY2Nlc3MgdG9vbHMgYXJlIGV4cHJlc3NseSBwcm9oaWJpdGVkLiBZb3UgYWdyZWUgbm90IHRvIGNpcmN1bXZlbnQsIGRpc2FibGUgb3Igb3RoZXJ3aXNlIGludGVyZmVyZSB3aXRoIHNlY3VyaXR5IHJlbGF0ZWQgZmVhdHVyZXMgb2YgdGhlIFdlYnNpdGVzIG9yIGZlYXR1cmVzIHRoYXQgcHJldmVudCBvciByZXN0cmljdCB1c2Ugb3IgY29weWluZyBvZiBhbnkgQ29udGVudCBvciBlbmZvcmNlIGxpbWl0YXRpb25zIG9uIHVzZSBvZiB0aGUgV2Vic2l0ZXMgb3IgU2VydmljZXMgb3IgdGhlIENvbnRlbnQgdGhlcmVpbi4gVGhlIGxpY2Vuc2VzIGdyYW50ZWQgYnkgV29ybGQgQXJjaGl2ZXMgdGVybWluYXRlIGlmIHlvdSBkbyBub3QgY29tcGx5IHdpdGggdGhpcyBBZ3JlZW1lbnQuIApBaCwgaGFwcHkgcmVzb2x1dGlvbiB0aW1lLiBIb29rZXIgYW5kIHRoZSBnYW5nIGhhbmcgb3V0IGluIHRoZSBzdGF0aW9uIHdhdGVyaW5nIGhvbGUsIHNoYXJpbmcgZHJpbmtzIGFuZCB0b2FzdGluZyB3aXRoIGNoYW1wYWduZS4gClVtIHNpY2hlciB6dSBzZWluLCBkYXNzIGR1IGRhcyBaZXVnIGRhenUgaGFzdCwgc3BpZWxlLCB3ZW5uIGVzIGhhcnQgYXVmIGhhcnQga29tbXQuIEthbm5zdCBkdSBlaW5lbiBraGxlbiBLb3BmIGJld2FocmVuPy4gCkkgZGlzcmVnYXJkZWQgbXkgb3duIGFkdmljZSB0byBvdGhlcnMgYW5kIGZhaWxlZCB0byBjYWxsIHRoZSBjb3BzLCBiZWNhdXNlIGFkcmVuYWxpbmUgPSAiSSBmaW5lIGFuZCBJIGp1c3QgZ29pbmcgdG8gc3dlYXIgYXQgeW91IGFuZCBsZWF2ZSIuIApBbGlmZWxvbmdyZWFkZXIgdQpUaGUgYXJ0aWNsZSBtZW50aW9ucyB0aGF0IHRoZSBwb3B1bGFyIHZvdGUgaW4gV2lzY29uc2luIGVsZWN0ZWQgQ2xpbnRvbiwgd2hpbGUgdGhlIEVsZWN0b3JhbCBDb2xsZWdlIGVsZWN0ZWQgVHJ1bXAuIFRoaXMgaXMgbm90IHRoZSBmaXJzdCB0aW1lIGluIGhpc3RvcnkgdGhpcyBoYXMgaGFwcGVuZWQsIGFuZCB0aGVyZSBpcyBhIGdvb2QgcmVhc29uIGZvciB0aGUgc3lzdGVtIHRoYXQgYWxsb3dzIGZvciB0aGlzLiBSZWFkIHlvdXIgQ2l2aWNzIHRleHRib29rLgpWZXJkYWNodCBkYXQgZXIgYmlqbmEgZ2VlbiByaWogc3RvbmQsIG1hYXIgdG9lbiB3ZSBuaWV0IGRvb3IgbW9jaHRlbiB2YW4gZGUgcG9saXRpZSB2aWVsIHJvZWJlbCBkYXQgd2UgdmFuYWYgaGV0IE1hbiBwbGVpbiBtb2VzdGVuIGFhbnNjaHVpdmVuLiAKU2hlIGhhcyBhIE1hc3RlcidzIERlZ3JlZSBpbiBIaXN0b3J5IGZyb20gR2VvcmdpYSBTdGF0ZSBVbml2ZXJzaXR5LCBhbmQgYSBCYWNoZWxvcidzIERlZ3JlZSBpbiBIaXN0b3J5IGZyb20gTWVyY2VyIFVuaXZlcnNpdHkuIEhlIGlzIGEgaGlzdG9yaWFuIGludGVyZXN0ZWQgaW4gdGhlIHJlbGF0aW9uc2hpcHMgYmV0d2VlbiBTb3V0aGVhc3Rlcm4gQW1lcmljYW4gSW5kaWFucywgRXVyb3BlYW5zLCBhbmQgQWZyaWNhbnMgaW4gdGhlIDE4dGggYW5kIGVhcmx5IDE5dGggY2VudHVyaWVzLiBIaXMgZGlzc2VydGF0aW9uIGV4YW1pbmVzIHRoZSBzb2NpYWwsIHBvbGl0aWNhbCwgZGVtb2dyYXBoaWMsIGFuZCBlY29sb2dpY2FsIHRyYW5zZm9ybWF0aW9uIG9mIEZsb3JpZGEgZm9sbG93aW5nIHRoZSBpbnRyb2R1Y3Rpb24gb2YgbGl2ZXN0b2NrIGluIHRoZSBzaXh0ZWVudGggY2VudHVyeSB0aHJvdWdoIHRoZSBleHB1bHNpb24gb2YgbXVjaCB0aGUgcmVnaW9uIG5hdGl2ZSBpbmhhYml0YW50cyBpbiB0aGUgbmluZXRlZW50aCBjZW50dXJ5LiAKSWYgdGhlcmUgaXMgbm8gb25lIHRvIHB1c2ggYmFjaywgdGhlbiB3ZSBhcmUgZ29pbmcgdG8gdGFrZSBjYXBpdGFsaXNtIHRvIGEgcGxhY2UgdGhhdCBpcyBub3Qgc3VwcG9ydGl2ZSBvZiBzb2NpZXR5IGFzIGEgd2hvbGUgKGl0IGlzIGFscmVhZHkgdGhlcmUgaW4gbWFueSBwbGFjZXMpLiAKRnVuZHJhaXNpbmc6IE5vIGZ1bmRyYWlzaW5nLCBwbGVhc2UuIApBbHNvIEkgY2VydGFpbmx5IGhvcGUgdGhhdCBpZiBzaGUgaGFkIGNlcnRhaW4gZXhwZWN0YXRpb25zLCBzaGUgYWN0dWFsbHkgZ2F2ZSBoaW0gc29tZSBpbnN0cnVjdGlvbnMgaW5zdGVhZCBvZiB0aGlua2luZyBoZSBvdWdodCB0byBmaWd1cmUgaXQgb3V0IGhpbXNlbGYucGFsZXhhbmRlcl82ICA4IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ29JIGdldCB0aGF0IHNoZSBmZWxsIG9mZiBhbmQgd2VudCBhIGxpdHRsZSBudXRzIChkcnVncywgYWxjb2hvbCwgZXRjLikgYnV0IGhlciBlbnRpcmUgcGVyc29uYSBvbiBiZWFjaCBjbHViIGlzIHRyb3VibGluZyB0byBtZS4gClRoZXJlIGFyZSBvdGhlciBwcmVzZXJ2YXRpb24gdGFjdGljcyBvdXQgdGhlcmUgdGhvdWdoOyB0aGUgU3VtbWVyIElzbGFuZGVycyBwdXQgTWFlc3RlciBBZW1vbiBpbiBhIGNhc2sgb2YgcnVtIHRvIHByZXNlcnZlIGhpbSB1bnRpbCBoZSBjYW4gcmVhY2ggT2xkdG93biB0byBiZSBidXJuZWQgaW4gVGFyZ2FyeWVuIHRyYWRpdGlvbi5UaGUgbWFqb3JpdHkgb2YgU3RhcmtzIGluIHRoZSBjcnlwdHMgbGlrZWx5IGRpZWQgYXQgV2ludGVyZmVsbCwgc2luY2UgdGhleSBhcmUgYWxsIExvcmRzLyBLaW5ncyBwcmlvciB0byBOZWQgaW5jbHVkaW5nIGhpcyBzaWJsaW5ncy4gCkEgbWFzdGVyIG9mIG9sZCBzdHlsZSByZXRhaWwgcG9saXRpY3MsIGhlIGhhZCBub3QgbWFzdGVyZWQgdGhlIG5ldyBZb3VUdWJlIHdvcmxkLiBWaWRlbyBjbGlwcyBvZiBhIHNjYXJsZXQgZmFjZWQgZm9ybWVyIHByZXNpZGVudCB3YWdnaW5nIGhpcyBmaW5nZXIgYXQgcmVwb3J0ZXJzIG9yIG1ha2luZyBhIHByZXBvc3Rlcm91cyByZW1hcmsgcHJvdmlkZSBzb21lIG9mIHRoZSBkZWZpbmluZyBpbWFnZXMgb2YgdGhlIDIwMDggY2FtcGFpZ24uCldlIHJlYWxpemVkIHRoYXQgd2Ugd2VyZSBkb2luZyBldmVyeXRoaW5nIGFuIEFJIGNvbXBhbnkgc2hvdWxkIGJlLiBPdXIgQ0VPIGFuZCBJIGNhbWUgdXAgd2l0aCBFbW90aW9uQUkgaW4gYSBmZXcgbWludXRlcyBiZWZvcmUgYSB0YWxrLCBhbmQgaXQgc3R1Y2sgZm9yIHRoZSBmaXJzdCB0aW1lLiBJdCB3YXMgYW4gImEgaGEhIiBtb21lbnQuIApJIGRvbiBrbm93IHlvdXIgbGFuZ3VhZ2UgbGV2ZWwsIGJ1dCB5b3UgbWlnaHQgZmluZCB0aGF0IHlvdSBjYW4gdW5kZXJzdGFuZCBpdCB3aXRob3V0IHRoZSBzdWJ0aXRsZXMuIApTdGF0aW5nIHRoYXQgb25seSAyIDUlIG9mIGFib3J0aW9ucyBoYXBwZW4gZHVlIHRvIG1lZGljYWwgcmVhc29ucywgYW5kIHRoYXQgdGhlIHJlc3QgYXJlIGRvbmUgZm9yIGNvbnZlbmllbmNlIGlzbiBnb2luZyB0byBtYXR0ZXIgdG8gbWUsIGJlY2F1c2UgbXkgYmVsaWVmIGlzIHRoYXQgYXMgbG9uZyBhcyBpdHMgZWFybHkgaW4gdGhlIHByZWduYW5jeSwgYSB3b21lbiBzaG91bGQgYmUgYWxsb3dlZCB0byBhYm9ydC4gQnV0IHRoYXQgbm90IHRoZSBhcmd1bWVudCBJIG1ha2luZywgYmVjYXVzZSBJIHVuZGVyc3RhbmQgdGhhdCBteSBiZWxpZWZzIGRvIG5vdCBtYXRjaCB0aG9zZSBvZiBldmVyeW9uZSwgaW5zdGVhZCBJIG9wdGVkIHRvIGNvbXByb21pc2UgaW4gYSB3YXkgdGhhdCBldmVyeWJvZHkgY2FuIGJlIGhhcHB5IHdpdGguClNpbmNlIHRoZSB0aW1lciBpcyBiYXNpY2FsbHkgd2hhdCBtYWtlcyBtb29uY3Jhc2ggbW9vbmNyYXNoLCBJIHJlYWxseSBhZ2FpbnN0IHRoZSBpZGVhIG9mIG1ha2luZyBhbnkgbWFqb3IgZ2FtZSBtZWNoYW5pY3Mgb3B0aW9uYWwuIEhvdyBsb25nIGhhdmUgeW91IHBsYXllZCBpdD8gSSBkaWRuIGxpa2UgaXQgYXQgZmlyc3QgYnV0IGl0IGdyZXcgb24gbWUuIFlvdSByZWFsbHkgZG9uIGhhdmUgdG8gd29ycnkgYWJvdXQgdGhlIHRpbWVyLiBPbmNlIHlvdSBnZXQgbW9yZSBwb3dlcmZ1bCwgaXQgZ2V0cyByZWFsbHkgZWFzeSB0byBzdGF2ZSBpdCBvZmYgYXMgd2VsbC4KTG9vayBhdCB0aGUgZmlyc3QgdGhyZWUgY2hvcmRzOiB0aGF0IHBhdHRlcm4gb2YgdGhlIHJvb3QsIGZpZnRoLCBhbmQgdGVudGggcGxhbmluZyBhcm91bmQgY2hyb21hdGljYWxseSBtYWtlcyB1cCA1MCUgb2YgdGhlIHNvbmcuLiAKVXN1YWxseSBhIGhpZ2ggdGVtcGVyYXR1cmUgZXZhcG9yYXRpbmcgb2lsIChJIHVzZSBncmFwZSBzZWVkKSBjb3ZlcmluZyBldmVyeSBzdXJmYWNlLCBpbmNsdWRpbmcgdGhlIGhhbmRsZSwgYm90dG9tIGFuZCBzaWRlcywgdGhlbiBwdXQgaW4gdGhlIG92ZW4gZm9yIGFuIGhvdXIgYXQgYWJvdXQgMzUwIGRlZ3JlZXMuIApTdGF0ZSBmb3JtZWQgYXMgcGFydCBvZiB0aGUgTWlzc291cmkgQ29tcHJvbWlzZSAuIE9uIG91ciB3ZWJzaXRlIHlvdSB3aWxsIGZpbmQgYWxsIHRoZSB0b2RheSdzIGFuc3dlcnMgdG8gTmV3IFlvcmsgVGltZXMgQ3Jvc3N3b3JkLiAKVGhleSBhbGwgc2lnbmVkIGJlZm9yZSBhbmQga25vd2luZyB5b3UgaGFkIGEgcGxhbiBmb3IgYSByb2xsYmFjayBvciBlc2Nyb3cgdG8gY2xhdyBhbGwgdGhpcyBtb25leSBvZmYgcGxheWVycywgdGhhdCBub3QgbmVnb3RpYXRpbmcgaW4gZ29vZCBmYWl0aC4uIApUYW5reWRlZSB1ClRMO0RSOiBJIER1dGNoLiAKQm9va3NoZWx2ZXMgYXJlIGxhYmVsbGVkICJlbmVyZ3kiLCAicGFydHkiIGFuZCAic21va2luZyIuIEFub3RoZXIgaXMgdGFnZ2VkICJTSFkiICAgdGhlIGFjcm9ueW0gZm9yIHJpdmFsIEdyZWVucyBzZW5hdG9yIFNhcmFoIEhhbnNvbiBZb3VuZy4KVGhlIFNlYXR0bGUgZGV0ZWN0aXZlcyBoYXZlIGFscmVhZHkgZG9uZSB0cmFpbmluZyBzZXNzaW9ucyB3aXRoIGEgbnVtYmVyIG9mIHBvbGljZSBhZ2VuY2llcyBpbiB0aGUgY291bnR5LCBhbmQgaGF2ZSBtYWRlIHRyaXBzIHRvIEVhc3Rlcm4gV2FzaGluZ3RvbiB0byBlaXRoZXIgdHJhaW4gb2ZmaWNlcnMgb3IgYXJyZXN0IHBlcnBzIHRoZXJlLiBJbiBhZGRpdGlvbiwgdGhlIEtpbmcgQ291bnR5IFNoZXJpZmYncyBPZmZpY2UgaXMgY29sbGFib3JhdGluZyB3aXRoIFJlbnRvbiBhbmQgU2VhVGFjIGNvcHMgdG8gY29uZHVjdCBzaW1pbGFyIG9ubGluZSBzdGluZ3MsIGFjY29yZGluZyB0byBSaWNoZXkuLiAKSSBoYXZlIG5vdGljZWFibHkgaGlnaGVyIG1lY2hhbmljYWwgc2tpbGwgYXQgYSBQUzQgY29udHJvbGxlciBhbmQgSSBjYW4gd2F0Y2ggd2hhdCBzaGUgZG9pbmcgYW5kIHN0aWxsIHRocm93IGNoaWNrZW4gaW50byBwYW5zIGFjcm9zcyB0cmFmZmljLiAKV2hpY2ggYWxzbyBjYW1lIGJhY2sgdG8gVHJ1bXAuIApUaGVuIGx1bmNodGltZSwgSSBnbyB0byBvdXIgcmVndWxhciBzcG90IGp1c3QgaW4gdGltZSB0byBzZWUgdGhlIHNoaXRmZXN0LiBGYXRpbWEgZGFkICAgd2hvIHR1cm5lZCBvdXQgdG8gYmUgYSBTYWxhZmlzdCBmdWNraW5nIEltYW0gICBpcyBEUkFHR0lORyBGYXRpbWEgdG8gaGlzIGNhciBieSB0aGUgaGFpciBraWNraW5nIGFuZCBzY3JlYW1pbmcuIEJ1bmNoIG9mIHllYXIgMTEgYW5kIDEyIGJveXMgKG91ciBTZW5pb3JzIGZvciB5b3UgQW1lcmljYW5zKSBib3VuY2luZyBiYWNrIGFueW9uZSB3aG8gdHJpZWQgdG8gc3RvcCBoaW0sIGluY2x1ZGluZyBhIGZldyB0ZWFjaGVycy4gTmV2ZXIgc2F3IGhlciBhZ2FpbiBhZnRlciBoZSB0aHJldyBoZXIgaW4gdGhlIGNhci4gU2VtcmEgYXR0ZW5kZWQgZm9yIGFub3RoZXIgd2Vlaywgd2l0aCBoZXIgSGlqYWIgb24sIGJlZm9yZSBzaGUgZGlzYXBwZWFyZWQgdG9vLiBTaGUgc3RpbGwgd291bGRuIHRlbGwgdXMgd2hhdCBoYXBwZW5lZCB0byBGYXRpbWEsIGFuZCB0aGlzIHdhcyBsb25nIGJlZm9yZSBJbnRlcm5ldCB3YXMgcmVhZGlseSBhdmFpbGFibGUuCkluc3RlYWQgb2Ygd3JpdGluZywgIkl0IGRvZXNuJ3QgbG9vayBuaWNlLCIgdHJ5IGpvdHRpbmcgZG93biwgIkNoZXdlZCBuYWlscyBsb29rIEhPUlJJQkxFIGFuZCBtYWtlIHBlb3BsZSB0aGluayB0aGF0IEkgY29tcGxldGVseSBsYWNrIHNlbGYgY29udHJvbC4iIEJlIHN1cmUgdG8gaW5jbHVkZSBpbiB5b3VyIGxpc3QgYWxsIG9mIHRoZSBiZW5lZml0cyB5b3Ugd2lsbCBlbmpveSB1cG9uIHN1Y2NlZWRpbmcsIHN1Y2ggYXMgdGhlIGFiaWxpdHkgdG8gc2hvdyBvZmYgdGhvc2UgYmVhdXRpZnVsIHJpbmdzIG9uIHlvdXIgYmVhdXRpZnVsIGZpbmdlcnMuLiAKSSBzeXN0ZW1hdGljYWxseSBjb3ZlcmVkIHRoZSBmbG9vcnMgaW4gZG91YmxlIHNpZGVkIHRhcGUuIApUaGVzZSBndXlzIGFyZSBzdWNoIGJhc3RhcmRzIHRoYXQgdGhleSB0eXBpY2FsbHkgaGF2ZSBhIGZhdm91cmVkIHR5cGUgb2YgaHVtYW4gdG8gYnVsbHksIHNwZWNpYWxpc2luZyBpbiBlaXRoZXIgcGVkZXN0cmlhbnMgb3IgY3ljbGlzdHMuIFRoZXkgb3N0ZW5zaWJseSBhdHRhY2sgdG8gZGVmZW5kIHRoZWlyIHlvdW5nLCBidXQgZXhwZXJpZW5jZSBwcm92ZXMgdGhlc2UgbW90aGVyZnVja2VycyBhcmUgY29taW5nIGZvciB5b3UsIG5vIG1hdHRlciBpZiB5b3UgZmxlZWluZyBvciBub3QuIElmIHRoZSBnb3Zlcm5tZW50IHRyaWVzIHRvIHJlbW92ZSB0aGVpciBuZXN0cyB0byByZWxvY2F0ZSB0aGVtLCB0aGV5IGp1c3QgY29tZSBiYWNrIGFuZCBiZSBldmVuIG1vcmUgcGlzc2VkIG9mZiBuZXh0IHRpbWUgKG5vdCBldmVuIGpva2luZywgdGhleSBzbWFydCBlbm91Z2ggdG8gaG9sZCBhIGxpdGVyYWwgZ3J1ZGdlKS4uIApDb250aW51ZSBwbGF5aW5nIHVudGlsIHNvbWVvbmUgcnVucyBvdXQgb2YgY2FyZHMuIEdvIGFyb3VuZCB0aGUgdGFibGUsIGVhY2ggcHV0dGluZyBvbmUgY2FyZCBkb3duLCB1bnRpbCBzb21lb25lIHBsYXlzIHRoZWlyIGxhc3QgY2FyZC4gCkhlYXQgdG8gYm9pbGluZyBvdmVyIG1lZGl1bSBoZWF0LCBzdGlycmluZyBjb25zdGFudGx5LiAKVW5saWtlIHRoZWlyIGJyYWlucywgdGhleSBoYXZlIHRoZSBsYXJnZXN0IGhpbmQgZ3V0IHRvIGJvZHkgcmF0aW8gb2YgYW55IG1hbW1hbC4gTWFueSBoZXJiaXZvcm91cyBtYW1tYWxzIGhhdmUgYWRhcHRhdGlvbnMgdG8gY29wZSB3aXRoIGhhcnNoIHBsYW50IGxpZmUgdGFraW5nIGl0cyB0b2xsIG9uIHRoZWlyIHRlZXRoLCByb2RlbnRzIGZvciBpbnN0YW5jZSBoYXZlIHRlZXRoIHRoYXQgbmV2ZXIgc3RvcCBncm93aW5nLCBzb21lIGFuaW1hbHMgb25seSBoYXZlIHRlZXRoIG9uIHRoZWlyIGxvd2VyIGphdywgZ3JpbmRpbmcgcGxhbnQgbWF0dGVyIG9uIGJvbnkgcGxhdGVzIGluIHRoZSB0b3BzIG9mIHRoZWlyIG1vdXRocywgb3RoZXJzIGhhdmUgZW5sYXJnZWQgbW9sYXJzIHRoYXQgZGlzdHJpYnV0ZSB0aGUgd2VhciBhbmQgYnJlYWsgZG93biBwbGFudCBtYXR0ZXIgbW9yZSBlZmZpY2llbnRseS4gCkVkd2luIEouIFBlbW90LCBBcnRodXIgSGFycmlzLCBMb3VpcyBMZWhuaGVyciwgUm95IEFybm9sZCBhbmQgU3R1YXJ0IFBhdWwuIEx1bmNoZW9uIHdhcyBzZXJ2ZWQgYnkgdGhlIGd1aWxkIG9mIHRoZSBjaHVyY2guIFByZXNlbnQgTXVzaWMgTXVzaWNhbCBzZWxlY3Rpb25zIHdlcmUgcHJlc2VudGVkIGR1cmluZyB0aGUgb3BlbmluZyBvZiB0aGUgYWZ0ZXJub29uIHNlc3NpbiBieSBNbWVzLiBFbGxpb3QgVGhvbWFzIGFuZCBNYXVkIERpZWRyaWNoLCBhbmQgdGhlIGxvY2FsIFN3aXNzIFRyaW8sIHRoZSBadWVyY2hlciBzaXN0ZXJzIGFuZCBNcnMuIApTaGUgYXNrZWQgbWUgdG8gcGF5IGJlZm9yZWhhbmQgICBhbmQgbGlrZSBzb21lb25lIGVsc2Ugc2FpZCwgdGhpcyBzaG91bGQgYmVlbiBhIGh1Z2UgcmVkIGZsYWcgYnV0IEkgd2FzIGEgV2FsayBJbiBhbmQgdGhleSB3ZXJlIGFibGUgdG8gZG8gaXQgcmlnaHQgYXdheSAoc2hvdWxkIGJlZW4gYW5vdGhlciBhbGFybSksIHNvIEkgdHJpZWQgdG8gcHV0IG1pbm9yIGlycml0YXRpb25zIGFzaWRlLiBIb3dldmVyLCBhYm91dCAxMCBtaW5zIGludG8gdGhlIG1hc3NhZ2UgdGhlIGRvb3JiZWxsIGtlcHQgcmluZ2luZyBmcm9tIG1haWwgbWVuIG9yIHN0YWZmIGdvaW5nIGluIGFuZCBvdXQuIApBTkNIT1JBR0UsIEFsYXNrYSAoQVApICAgVGhlIEFsYXNrYSBDb3VydCBvZiBBcHBlYWxzIGhhcyBvdmVydHVybmVkIHRoZSBzZWNvbmQgZGVncmVlIG11cmRlciBjb252aWN0aW9uIG9mIGEgbWFuIGFjY3VzZWQgb2YgZmF0YWxseSBzaG9vdGluZyBhbm90aGVyIG1hbiBhdCBhbiBBbmNob3JhZ2UgbWFsbCBpbiAyMDEwLiBBbmNob3JhZ2UgVFYgc3RhdGlvbiBLVFVVIHJlcG9ydHMgRnJpZGF5IHRoYXQgdGhlIGFwcGVhbHMgY291cnQgcnVsZWQgdGhlIGp1cnkgdGhhdCBjb252aWN0ZWQgVGVycmVuY2UgR3JheSBzaG91bGQgaGF2ZSBiZWVuIGdpdmVuIGluc3RydWN0aW9ucyBvbiB0aGUgW0NBTERXRUxMLCBJZGFobyAoQVApICAgQSBzb3V0aHdlc3Rlcm4gSWRhaG8gbWFuIGhhcyBiZWVuIGNoYXJnZWQgd2l0aCB0ZXJyb3Jpc20gYW5kIG90aGVyIGNyaW1lcyBhZnRlciBwb2xpY2Ugc2F5IGhlIGZhbHNlbHkgdGhyZWF0ZW5lZCB0byByZWxlYXNlIGRlYWRseSBuZXJ2ZSBnYXMgaW4gdGhlIGNpdHkgb2YgTmFtcGEuIApFbGV2YXRpb24uIEFub3RoZXIgdGVjaG5pcXVlIHRvIHJlbW92ZSB0aGUgc3dlbGxpbmcgaW4geW91ciBoYW5kcyBpcyBieSBzaXR0aW5nIG9uIGEgY2hhaXIgZmFjaW5nIHRoZSB3YWxsLiAKSW4gdGVybXMgb2YgZmVhdHVyZXMsIGl0IGlzIHdhYWFheSBiZWhpbmQgZXZlcnl0aGluZyBlbHNlLiAKVml0YW1pbiBEIGFzIGFuIEVhcmx5IFByZWRpY3RvciBvZiBNdWx0aXBsZSBTY2xlcm9zaXMgQWN0aXZpdHkgYW5kIFByb2dyZXNzaW9uCk1pYW4gU2FoYWIgYWxzbyBhbGxvd2VkIE11c2hhcnJhZiB0byBsZWF2ZSB0aGUgY291bnRyeS4gSGUgbmV2ZXIgdHJpZWQgdG8gZ2V0IHRvIHRoZSBib3R0b20gb2YgdGhlIG5hc3R5IHJlc3RyaWN0aW9ucyB0aGF0IHdlcmUgcGxhY2VkIG9uIG1lIGJ5IE11c2hhcnJhZi4gSGUgY291bGQgZWFzaWx5IGhhdmUgdXNlZCB0aGUgY291cnQgb3JkZXIgdG8gbXkgcGV0aXRpb24gdG8gcmVtb3ZlIGFsbCByZXN0cmljdGlvbnMgYXMgTXVzaGFycmFmIGhhZCBwcm9taXNlZCBhbmQgSnVzdGljZSBFamF6IEFobWFkIENoYXVkaHJ5IG9mIHRoZSBMSEMgaGFkIGdyYW50ZWQgdG8gbWUuIFlldCwgc29tZSBvZiB0aGUgcmVzdHJpY3Rpb25zIG9uIG15IG1vdmVtZW50IHN0aWxsIHBlcnNpc3QuCk9oLCB5ZXMuIApIb3dldmVyLCBoZSBkaWRuIGhhdmUgbXVjaCBmb2xkIGVxdWl0eSBhbmQgSSBmZWx0IEkgY291bGQgZ2V0IG90aGVyIHBsYXllciB0byBjYWxsIHByZXR0eSB3aWRlLiAKQXQgYmVzdCBpdCBnZXQgeW91IGxhdWdoZWQgYXQuQSBiZXR0ZXIgYXBwcm9hY2gsIGlmIHlvdSB0aGluayB5b3UgZ290IHNvbWV0aGluZyBzb21lb25lIHdvdWxkIHdhbnQgdG8gZG9uYXRlIHRoZWlyIHRpbWUgdG8sIHdvdWxkIGJlIHRvIGV4cGxhaW4gZXhhY3RseSB3aGF0IGl0IGlzIHlvdSBhZnRlciAgIG5vIG9uZSBpcyBnb2luZyB0byBnbyBvdXQgb2YgdGhlaXIgd2F5IHRvIGRvIHRoZSB3b3JrIGZvciB5b3UgQU5EIHRyeSB0byBkcmFnIHRoZSBkZXRhaWxzIG91dCBvZiB5b3UgICBhbmQgYWNrbm93bGVkZ2UgdXAgZnJvbnQgdGhhdCB5b3UgdW5kZXJzdGFuZCB0aGUgdmFsdWUgb2YgdGhlaXIgdGltZSBidXQgZG9uIGhhdmUgbW9uZXkgdG8gb2ZmZXIuIElmIHlvdSBuZWVkIGhlbHAgYmVjYXVzZSB5b3UgbGVhcm5pbmcgYW5kIG5lZWQgYSBtZW50b3IgdG8gZ2V0IHlvdSBzdGFydGVkLCB0aGVyZSBhIGRlY2VudCBjaGFuY2Ugc29tZW9uZSBtaWdodCBoZWxwIHlvdSBvdXQgaWYgeW91IGFzayBuaWNlbHkgYW5kIHNvdW5kIGxpa2UgeW91IHdpbGxpbmcgdG8gcHV0IGluIHNvbWUgZWZmb3J0IHRvIGxlYXJuLiAKVm9pcmUgb24gY3JhcXVlIGF2YW50ICEgRXQgb24gcmVwcmVuZCBsZSBwb2lkcyBwZXJkdSwgc291dmVudCBwbHVzLiBTYW5zIGZvcmNtZW50IGNvbXByZW5kcmUgY2UgcXVpIHNlIHBhc3NlLiAKSG93ZXZlciwga2lkcyBnZXQgTVVDSCBtb3JlIGV4cGVuc2l2ZSBhcyB0aGV5IGFnZS4gCkl0IHdvbiB0YWtlIGEgc3BhcmsgZG9pbmcgdGhhdCBldmVuIGlmIHlvdSBmcmF5IHVwIHRoZSBjaGFycmVkIGVuZCByZWFsIGdvb2QuIFByb2JhYmx5IGJlY2F1c2Ugb25jZSB0aGUgd2F4IGdldHMgd2lja2VkIHVwIGl0IGFjdHVhbGx5IG5lZWRzIGEgZmxhbWUsIG9yIG1heWJlIGEgdmVyeSBzdHJvbmcgc2hvd2VyIGZyb20gYSBmZXJybyByb2QgdG8gZ2V0IGdvaW5nLgpBbGwgd2UgbmVlZCBub3cgaXMgYSBiYW5uZXIgc2F5aW5nICJtaXNzaW9uIGFjY29tcGxpc2hlZCIgdG8gY2FwIHRoaXMgb2ZmLi4gCkFzIHlvdSBjYW4gc2VlLCB0aGVyZSBhcmUgbWFueSBjb25zaWRlcmF0aW9ucyB0byBiZSBtYWRlIHdoZW4gaXQgY29tZXMgdG8gY2FzaW5vIHBva2VyIGNoaXBzIHdlaWdodC4gCkFsc28sIGl0IG9ubHkgdGFrZXMgbGlrZSA1IG1pbiB0byBnZXQgdG8gVmVyb25hIGZyb20gQ29ydGxhbmQgUG9uZC4gCkEgcGV0aXRpb24gZmlsZWQgYXQgdGhlIEJvbWJheSBIaWdoIENvdXJ0IHNvdWdodCB0byBjbGFyaWZ5IGlmIFBva2VyIGlzIGEgZ2FtZSBvZiBza2lsbCBvciBnYW1ibGUuIFRoZSBwZXRpdGlvbiB3YXMgZmlsZWQgYWZ0ZXIgdGhlIHBvbGljZSByYWlkZWQgYW4gYXBhcnRtZW50IGluIEdvcmVnYW9uIGFuZCBib29rZWQgMjkgcGVyc29ucywgZm9yIHBsYXlpbmcgYSBnYW1lIG9mIHBva2VyLCB1bmRlciB2YXJpb3VzIHNlY3Rpb25zIG9mIHRoZSBNYWhhcmFzaHRyYSBQcmV2ZW50aW9uIG9mIEdhbWJsaW5nIEFjdC4KQSBMT09LIEJBQ0sKSG93IHRvIEJldCBpbiBUZXhhcyBIb2xkZW0KVGhlbiBIaWdoIHNjaG9vbCBjYW1lIGFuZCBJIHdhcyBtb3JlIGFib3V0IGN1dHRpbmcgY2xhc3MgdGhhbiBicmVha2luZyBzb21lIHN0dXBpZCB3b3JsZCByZWNvcmQgd2hhdGV2ZXIuIFdoaWxlIEkgcGFja2luZyBteSBzdHVmZiB0byBnbyBvZmYgZm9yIGZyZXNobWFuIHllYXIgb2YgY29sbGVnZSwgSSBmaWd1cmUgSSBzaG91bGQgcGFjayBzb21lIGJvb2tzIHRvIG5vdCBsb29rIGxpa2UgYSB0b3RhbCBkdW1teSAgIGNhbWUgYWNyb3NzIGEgY29weSBvZiBhIDE5ODUgV29ybGQgUmVjb3JkIGNvcHkgYW5kIHRocmV3IGl0IGluIHdpdGggbXkgc3R1ZmYuIApWaWEgYSBjb25uZWN0aW5nIGRvb3IsIHRoZSBsYWIgaW5jbHVkZXMgYSBuZWFyIENsYXNzIDEgYmlvbG9naWNhbCB3ZXQgYXJlYSBmb3Igc2FtcGxlIHByZXBhcmF0aW9uIChpbmNsdWRpbmcgY29sZCBzdG9yYWdlIGZhY2lsaXRpZXMsIGEgRHluYXNhZmUgc3lzdGVtIGZvciBmdW1lIGNvbnRyb2wsIGFuZCBhIGJpb2xvZ2ljYWwgc2FmZXR5IGNhYmluZXQpIG5lY2Vzc2FyeSBmb3IgdGVyYWhlcnR6IGJpb3NlbnNpbmcgZXhwZXJpbWVudHMuLiAKVGhlIHNjZW5lIGF0IEVsIENvcnRleiBpcyBvbmUgeW91IG1pZ2h0IHNlZSBpbiBhbnkgY2x1YiBhY3Jvc3MgQXVzdHJhbGlhLCB0aGVyZSdzIGp1c3QgbW9yZSBvZiBpdCBoZXJlLiAKU2l6ZSBpc24gbmVjZXNzYXJpbHkgYSBmYWN0b3IuIApCdXQgdGhleSBoYWQgYSBwcm9ibGVtLiAKMTQgcG9pbnRzICBzdWJtaXR0ZWQgMjMgZGF5cyBhZ28uIApCdXQgYXMgaGUgc3RhcnRlZCBhY3Rpbmcgb3V0IGFuZCBmbHVua2luZyBvdXQgb2Ygc2Nob29sIEkgaGF2ZSB0byBkaXNjaXBsaW5lIGhpbSAod2hpY2ggaXMgcmVhbGx5IGhhcmQgd2hlbiBhbGwgSSBldmVyIGRvbmUgd2FzIHRha2UgY2FyZSBvZiBoaW0pLiBBdCB0aW1lcyBvZiBhbmdlciBJIGNvdWxkIGZlZWwgbXkgbW90aGVyIGluIG1lLiBIZXIgZnJ1c3RyYXRpb24uIEkgdGhvdWdodCBJIGJlZW4gYSBncmVhdCBwYXJlbnQgYW5kIHdhcyBmcnVzdHJhdGVkIHRoYXQgbXkgc29uIHdhcyBkb2luZyB0aGlzIHRvIGhpbXNlbGYuIApIZSBsaXZlZCBoaXMgbGlmZSBmdWxsIG9mIGNvbXBhc3Npb24gYW5kIGVtcGF0aHkgZm9yIG90aGVycy4gCkdlbmVyYWwgbGltaXRhdGlvbiBvZiB1c2U6IFNjb29wIGlzIGNvbW1pdHRlZCB0byBvcGVuIGFjY2VzcyBhbmQgcHVibGljIGludGVyZXN0IGpvdXJuYWxpc20gYW5kIHRoZXJlZm9yZSB1c2VzIGFuICdpbnZpc2libGUgcGF5d2FsbCBzeXN0ZW0nLjMuMS4gCjEuIApFdXJvcGUgaGFkIHRoZSBnb29kIGZvcnR1bmUgb2YgYmVpbmcgb24gdG9wIGF0IGEgdGltZSB3aGVuIHNoaXBzIG1hZGUgdGhlIHdvcmxkIGEgbG90IHNtYWxsZXIuIApOb3QgYSBzaG93IHN0b3BwZXIgYnV0IHRoZXkgZG9uIGV2ZW4gaGF2ZSB0aGVpciBvbiBJUHY0IHNwYWNlIHdoaWNoIG1lYW5zIHRoYXQgeW91IHNob3cgdXAgdG8gZXZlcnkgc2l0ZSB5b3UgZ28gdG8gYXMgYW4gSVAgb24gdGhlaXIgdXBzdHJlYW0gYmFja2JvbmUgcHJvdmlkZXIuIE5ldmVyIGhlYXJkIG9mIGFuIElTUCB0aGF0IGRvZXNuIGFjdHVhbGx5IHBheSBmb3IgSVBzLgoiSSBrbm93IHRoYXQgdGhlIExhYm9yIFBhcnR5IHBvc2l0aW9uIGlzIG5vdCBnb2luZyB0byBjaGFuZ2Ugb24gdGhpcywgd2UgcmVtYWluIGZpcm0gb24gb3VyIHZpZXcgdGhhdCBwb2tlciBtYWNoaW5lcyBzaG91bGQgYmUgcmVzdHJpY3RlZCB0byBjYXNpbm9zLCIgTXMgV2hpdGUgc2FpZC4gIlRoZSBMaWJlcmFsIFBhcnR5IG5vdyBoYXZlIGEgdmVyeSBiaWcgam9iIGFoZWFkIG9mIHRoZW0gdG8gY29udmluY2UgYm90aCB0aGUgbG93ZXIgYW5kIHRoZSB1cHBlciBob3VzZSB0aGF0IHB1dHRpbmcgdGhpcyBkZWFsIG91dCB0byBhbGwgb2YgdGhlIHB1YmxpY2FucyBhcyBhIGRpcmVjdCBsaWNlbmNlIG1vZGVsIGlzIGluIHRoZSBiZXN0IGludGVyZXN0cyBvZiB0aGUgVGFzbWFuaWFuIHBlb3BsZS4iIE1zIFdoaXRlIGNvcHBlZCBjcml0aWNpc20gZm9yIG5vdCBjb25ncmF0dWxhdGluZyBQcmVtaWVyIFdpbGwgSG9kZ21hbiBpbiBoZXIgY29uY2Vzc2lvbiBzcGVlY2ggb24gU2F0dXJkYXkgbmlnaHQsIGJ1dCBjYWxsZWQgaGltIGxhdGVyIG9uIHRvIGFwb2xvZ2lzZS4gCkJ1dCBIYXFxYW5pIGRpZG4ndCBhbGwgb2YgYSBzdWRkZW4gYmVjb21lIGEgY3JpdGljIG9mIHRoZSBQYWtpc3RhbmkgbWlsaXRhcnkgYW5kIGl0cyBtb2R1cyBvcGVyYW5kaSB2aXMgIEluZGlhLCBzdHJhdGVnaWMgZGVwdGggYW5kIHRoZSB1c2Ugb2YgSXNsYW1pYyBzeW1ib2xpc20uIApBIGRhd25pbmcgY29uc2Npb3VzbmVzcyBlbWVyZ2luZyBpbiBTaWxpY29uIFZhbGxleSBhcyBwZW9wbGUgcmVjb2duaXplIHRoYXQgdGhlaXIgY29udmVudGlvbmFsIHN1Y2Nlc3MgaXNuIG5lY2Vzc2FyaWx5IG1ha2luZyB0aGUgd29ybGQgYSBiZXR0ZXIgcGxhY2UsIHNheXMgVGF1YmVyLCAzNCwgYSBmb3JtZXIgR29vZ2xlIHByb2R1Y3QgbWFuYWdlciBhbmQgc3RhcnR1cCBleGVjdXRpdmUgY29hY2guIENFT3MsIGluc2lkZSB0aGV5IGh1cnRpbmcuIFRoZXkgY2FuIHNsZWVwIGF0IG5pZ2h0LiBBIGZvcm1lciBjaGllZiBleGVjdXRpdmUgb2YgSnVuaXBlciBOZXR3b3JrcywgU2NvdHQgS3JpZW5zLCBvcGVuZWQgaGlzIG93biB0ZWNoIGFuZCBzb3VsIGNlbnRyZSBuZWFyYnkgaW4gTWF5LCB3aXRoIGNvbnN0cnVjdGlvbiBmaW5pc2hpbmcgaW4gRmVicnVhcnkuIFRoZSBnb2FsIG9mIHRoZSBjZW50cmUsIGNhbGxlZCAxNDQwIE11bHRpdmVyc2l0eSwgaXMgdG8gdGhhdCB0aGUgYmxhemluZyBzdWNjZXNzIG9mIHRoZSBpbnRlcm5ldCBjYXRhbHl6ZWQgcG93ZXJmdWwgY29ubmVjdGlvbnMsIHlldCBkaWQgbm90IGhlbHAgcGVvcGxlIGNvbm5lY3QgdG8gdGhlbXNlbHZlcy4gdGhlcmUgaXMgbW9zdCBsaWtlbHkgZW5vdWdoIGNyaXNpcyB0byBnbyBhcm91bmQuCkkgZG9uIGtub3cgaWYgdGhpcyBpcyBjb21pbmcgb2ZmIGFuZ3J5LCBJIG5vdCBtYWQgYW5kIEkgd291bGQgYmUgbW9yZSBva2F5IGZvciBkZWJ0IGZvcmdpdmVuZXNzIG9mIGl0IGNhbWUgd2l0aCB0aGUgcHJvbWlzZSBvZiBmcmVlIGVkdWNhdGlvbiBmb3IgZXZlcnlvbmUgZWxzZS4gClByaW50b3V0b2ZPeXN0ZXIgdQpSZWRuZWNrIHUKSSB3b3VsZG4gYm90aGVyIHdpdGggcHJpb3IgdmlzaXRzLiBKdXN0IG1ha2Ugc3VyZSB0aGUgY2F0IGhhcyBzb21lIHBsYWNlcyB3aGVyZSBpdCBjYW4gZ2V0IGF3YXkgZnJvbSB0aGUgZG9nICAgYSBoaWRpbmcgcGxhY2UsIGEgaGlnaCBzdXJmYWNlLCBldGMuIApJdCBoYXBwZW5lZCBhZ2FpbiB0b25pZ2h0LCB0aGVyZSB3YXMgYSBmaXNoIHRvIG15IHJpZ2h0IGFuZCBoZSBsaW1wZWQgb24gdGhlIEJUTiwgSSB3YXMgaW4gdGhlIFNCIHdpdGggS0sgYW5kIGJldCAkMC4wOCwgZmlzaCBjYWxscywgaXQgd2FzIGEgbG93LCBkcnkgZmxvcCBhbmQgaGUgZmxvYXRzIHVudGlsIHNob3dkb3duIGFuZCB0dXJucyBvdmVyIDc1byB3aXRoIGEgbWFkZSBzdHJhaWdodCBvbiB0aGUgdHVybi4gCkV2ZW4gaWYgYWxsIHlvdSBoYXZlIGlzIHNvbWUgdHdvIHBvd2VyIHV0aWxpdHkgY3JlYXR1cmVzIG9uYm9hcmQgd2hlbiB5b3UgY2FzdCBoZXIsIHlvdSBnb2luZyB0byBnZXQgdGhyZWUgY2FyZHMgZm9yIHlvdXIgdHJvdWJsZS4gQW5kIG1vcmUgb2Z0ZW4gdGhhbiBub3QsIHlvdSBoYXZlIGEgNSsgcG93ZXIgY3JlYXR1cmUgYW5kIHlvdSBqdXN0IGFic29sdXRlbHkgcmVmaWxsIHlvdXIgaGFuZC4gCkRyb3BwaW5nIExTRCBhdCB0aGUgTWFpbiBFdmVudApGb3IgdGhlIHB1cnBvc2VzIG9mIGFueSBhcHBsaWNhYmxlIGRhdGEgcHJvdGVjdGlvbiBsYXdzIGluIEVuZ2xhbmQgYW5kIFdhbGVzLCBpbmNsdWRpbmcgZnJvbSAyNSBNYXkgMjAxOCB0aGUgRVVHZW5lcmFsIERhdGEgUHJvdGVjdGlvbiBSZWd1bGF0aW9uIDIwMTYvNjc5IChHRFBSKSwgQk1KIGlzIHRoZSBkYXRhIGNvbnRyb2xsZXIgb2YgeW91ciBwZXJzb25hbCBkYXRhLiBXZSBhcmVyZWdpc3RlcmVkIHdpdGggdGhlIElDTyBvbiB0aGUgRGF0YSBQcm90ZWN0aW9uIFB1YmxpYyBSZWdpc3RlciB1bmRlciByZWdpc3RyYXRpb24gbnVtYmVyIFo3NjA3NTMzLgoiV2UndmUgYmVlbiBvcGVyYXRpbmcgaW4gQ2FuYWRhIGZvciBvdmVyIDE3MCB5ZWFycyBub3csIiBzYXlzIEFtYW5kYSBMeW5uLCBWaWNlIFByZXNpZGVudCBvZiBQZW9wbGUuIApXZWxsLCB5b3UgbWlnaHQgZG8sIGJ1dCBJIGNlcnRhaW5seSBkb24gY29uc2lkZXIgdGhlIHRyYWRlIG9mZnMgYW5kIG1ha2UgZGVjaXNpb25zIGluIGxpbmUgd2l0aCBteSBwcmlvcml0aWVzLiBNeSBwcmlvcml0eSBpc24gc2FmZWd1YXJkaW5nIGV2ZXJ5IGxhc3Qgam9iLiAKVGhhdCBpcyBoeXBvY3JpdGljYWwuIFlvdSBhcmUgYXNzdW1pbmcgdGhpbmdzIGFib3V0IG1lIGFuZCBpbiB0aGUgbmV4dCBicmVhdGggdGVsbGluZyBtZSBub3QgdG8ganVkZ2Ugb3IgYXNzdW1lIHRoaW5ncyBhYm91dCBhIHBlcnNvbiBiYXNlZCBvbiBzdWNoIGxpdHRsZSBpbmZvcm1hdGlvbi4gCkluIGFkZGl0aW9uIHRvIHRoaXMgb25saW5lIHBva2VyIHJvb21zIGFyZSBtdWNoIGZhc3RlciBiZWNhdXNlIHRoZXJlIGlzIGxlc3MgaW50ZXJydXB0aW9ucyBkdWUgdG8gYXV0b21hdGljIGFuZCBpbnN0YW50YW5lb3VzIGRlYWxpbmcgYW5kIHNodWZmbGluZyBvZiBwYXBlcnMgYW5kIHRoZXJlIGFyZSBubyBkZWxheXMgcmVsYXRpbmcgdG8gY291bnRpbmcgY2hpcHMgb3IuIFRoZXJlZm9yZSBpdCBpcyBub3QgdW5jb21tb24gZm9yIGFuIG9ubGluZSBwb2tlciB0YWJsZSBvbiBhdmVyYWdlIDkwIHBlcmNlbnQgaGFuZHMgcGVyIGhvdXIuIFlvdSBjYW4gcmVhY2ggZmFzdGVyIHRoYW4gcGxheSBpbiByZWFsIGNhc2lub3MsIHJlZ2FyZGxlc3Mgb2YgdGhlIG51bWJlciBvZiBwbGF5ZXJzIHRoYXQgYXJlIHBsYXlpbmcgd2l0aCB0aGUgZmluYWwgdGFibGUuIFlvdSBjYW4gYWxzbyBwbGF5IHRlbiB0b3VybmFtZW50cyBhdCB0aGUgc2FtZSB0aW1lIHdpdGggc29tZSBvbmxpbmUgcG9rZXIgcm9vbXMgdGhhdCBhcmUgZXF1aXBwZWQgd2l0aCBhZHZhbmNlZCBzb2Z0d2FyZSB0aGF0IGNhbm5vdCBiZSBvdGhlcndpc2UgcG9zc2libGUgaW4gcmVhbCBwb2tlciByb29tcy4KQmFybGV5IGJhc2VkIHdoaXNraWVzLCBpbmNsdWRpbmcgaXRzIExhaXJkIG9mIEZpbnRyeSBzaW5nbGUgbWFsdCwgd2hpY2ggaXMgb25seSBhdmFpbGFibGUgZm9yIHB1cmNoYXNlIHRocm91Z2ggYSBsb3R0ZXJ5IHN5c3RlbS4gClByb2JhYmx5LiBCdXQgcHJvc3RpdHV0aW9uIGFuZCBodW1hbiBzbXVnZ2xpbmc/IE5vICB0aGF0IG5vdCBhIGNsYWltIHRoYXQgZXZlbiB0aGUgQUNPUk4gbnV0cyBhcmUgbWFraW5nLi4gCkRJWSBtYXNzYWdlIGJhcnMKNiB5ZWFyIG9sZHM6IDEuIEthdGVseW4gUmVpY2htYW4gKEp1bGVzYnVyZykuCkFuZCB0aGF0IGlzIHdpdGhvdXQgdGFraW5nIGludG8gYWNjb3VudCBhbGwgdGhlIG90aGVyIGRyYXdiYWNrcyBudWNsZWFyIGVuZXJneSBoYXMsIGxpa2UgdGhlIGZhY3QgdGhhdCB0aGUgdXBmcm9udCBjb3N0IGlzIGVub3Jtb3VzIGFuZCB0ZWNoIHVwZ3JhZGVzIHRha2UgZGVjYWRlcyB0byBiZSBhY3R1YWxseSB1c2VkIGluIHByYWN0aWNlIGR1ZSB0byB0aGUgcGxhbm5pbmcgcmVxdWlyZSB0byBpbnN0YWxsIG51Y2xlYXIgcGxhbnRzLi4gCk5vdCBzdXJlIGlmIHRoYXQncyB0cnVlLCBidXQgZnVubnkgaWYgaXQgaXMuLiAKRGlhZ25vc2lzICAgRW5sYXJnZWQgUHJvc3RhdGVUaGUgc3ltcHRvbXMgb2YgQlBIIHdpbGwgb2Z0ZW4gYnJpbmcgcGF0aWVudHMgdG8gdGhlaXIgZG9jdG9yLCBhbHRob3VnaCB0aGUgZW5sYXJnZWQgcHJvc3RhdGUgY2FuIGFsc28gYmUgZGlhZ25vc2VkIGR1cmluZyBhIHJvdXRpbmUgZGlnaXRhbCByZWN0YWwgZXhhbWluYXRpb24uIE90aGVyIGNvbW1vbiB0ZXN0cyB1c2VkIHRvIGRpYWdub3NlIEJQSCBpbmNsdWRlIGEgdXJpbmFseXNpcyAodG8gY2hlY2sgZm9yIGluZmVjdGlvbiBvciBvdGhlciBjYXVzZXMgb2YgQlBIIGxpa2Ugc3ltcHRvbXMpOyBhIHVyaW5lIGZsb3cgc3R1ZHksIHdoaWNoIHVzZXMgYSBkZXZpY2UgdGhhdCBtZWFzdXJlIHRoZSBzcGVlZCBvZiB0aGUgc3RyZWFtOyBhIHRyYW5zcmVjdGFsIHVsdHJhc291bmQsIHdoaWNoIG1lYXN1cmVzIHRoZSBzaXplIG9mIHRoZSBwcm9zdGF0ZSBnbGFuZCBhbmQgY2FuIGhlbHAgdG8gcnVsZSBvdXQgcHJvc3RhdGUgY2FuY2VyOyBhbmQgYSBjeXN0b3Njb3B5LCBpbiB3aGljaCBhIHR1YmUgYXR0YWNoZWQgdG8gYSBtaW5pYXR1cmUgY2FtZXJhIGVuYWJsZXMgdGhlIHVyb2xvZ2lzdCB0byB2aWV3IHRoZSBpbnNpZGUgb2YgdGhlIGJsYWRkZXIgYW5kIHVyZXRocmEgdG8gZGV0ZXJtaW5lIHRoZSBwcm9zdGF0ZSdzIHNpemUgYW5kIHRoZSBsZXZlbCBvZiBvYnN0cnVjdGlvbi4uIApGb3IgZXhhbXBsZSwgYSBwYXRpZW50IG1heSBoYXZlIGNocm9uaWMgbmlnaHQgc3dlYXRzLCBpcnJpdGFiaWxpdHksIGFuZCB0aGlyc3QgICBnZW5lcmFsIHNpZ25zIG9mIHlpbiBkZWZpY2llbmN5ICAgYnV0IHRoZSBwcmFjdGl0aW9uZXIgc3RpbGwgZG9lcyBub3Qga25vdyB3aGljaCBvcmdhbiBzeXN0ZW0gdG8gbm91cmlzaCBhdCB0aGlzIHBvaW50LiBLZWVwaW5nIGluIG1pbmQgdGhlIG5vcm1hbCBmdW5jdGlvbnMgb2YgdGhlIG9yZ2FucywgdGhlIHByYWN0aXRpb25lciBtaWdodCBmaW5kIGZ1cnRoZXIgc3ltcHRvbXMgb2YgcGFscGl0YXRpb25zLCBpbnNvbW5pYSwgYW5kIHBvb3IgbWVtb3J5LCBjb25jbHVkaW5nIHRoYXQgdGhlIHlpbiBkZWZpY2llbmN5IGFmZmVjdHMgbW9zdGx5IHRoZSBoZWFydC4gVGhlIHRyZWF0bWVudCBwbGFuIHdvdWxkIHRoZW4gaW5jbHVkZSBhbiBoZXJiYWwgZm9ybXVsYSB0byBub3VyaXNoIGhlYXJ0IHlpbi4uIApJZiB5b3Ugc2VsZWN0IHRoZSAiQXV0b1JlbmV3IiBvcHRpb24sIHlvdXIgU3Vic2NyaXB0aW9uIHdpbGwgYXV0b21hdGljYWxseSByZW5ldyBhdCB0aGUgZW5kIG9mIHRoZSBwZXJpb2QgaW5kaWNhdGVkIGluIHlvdXIgaW5pdGlhbCBTdWJzY3JpcHRpb24gb3JkZXIgb3IgYW55IHN1YnNlcXVlbnQgU3Vic2NyaXB0aW9uIHJlbmV3YWwgKCJCaWxsaW5nIFBlcmlvZCIpLCB1bmxlc3MgeW91IGNhbmNlbCB5b3VyIFN1YnNjcmlwdGlvbiBvciBpdCBpcyB0ZXJtaW5hdGVkIGJ5IFN1biBUaW1lcy4gWW91IHdpbGwgbm90IHJlY2VpdmUgYSBub3RpZmljYXRpb24gZnJvbSBTdW4gVGltZXMgb2YgYW55IHN1Y2ggU3Vic2NyaXB0aW9uIGF1dG9tYXRpYyByZW5ld2FsLi4gCkFzIGhlIHdhcyBiZWluZyB0YWtlbiB0byB0aGUgY291cnQsIFNhZGRhbSB3YXMgInZpc2libHkgdHJlbWJsaW5nLiBIZSB0aG91Z2h0IHRoaW5ncyB3b3VsZCBnbyBhcyB0aGV5IGhhZCBkb25lIGluIGhpcyB0aW1lIGFuZCB0aGF0IGhlIHdhcyBiZWluZyB0YWtlbiBmb3IgZXhlY3V0aW9uIiwgaGUgc2FpZC4KQm90aCBleHBvcnRzIGFuZCBidXNpbmVzcyBpbnZlc3RtZW50IGFsc28gZmVsbCBzaG9ydCBvZiBleHBlY3RhdGlvbnMuIApBcyBub3RlZCBoZXJlLCB0aGVyZSBhcmUgbWFueSB3YXlzIHRvIGFwcHJvYWNoIGEgbWFya2V0aW5nIHN0cmF0ZWd5IHRvIGlkZW50aWZ5IHlvdXIgdGFyZ2V0IG1hcmtlci4gSWYgeW91IHNlbGwgUHVyZSBDbGF5IFBva2VyIENoaXBzLCBpdCBtYXkgcHJvdmUgdG8gYmUgYSBjaGFsbGVuZ2UuIEhvd2V2ZXIsIGJ5IGtub3dpbmcgd2hvIHlvdSB3YW50IHRvIGF0dHJhY3QsIHlvdSB3aWxsIGFjaGlldmUgaGlnaGVyIHN1Y2Nlc3MgaW4gZGV2ZWxvcGluZyB5b3VyIG1hcmtldGluZyBjYW1wYWlnbi4gCkkgZmluZCB0aGUgb2xkZXIgSSBnZXQgdGhlIGxlc3MgcGF0aWVuY2UgSSBoYXZlLiBJIGRvbid0IGhhdmUgdGltZSB0byBkbyAicmVzZWFyY2giIHRvIGZpbmQgb3V0IHRoZSBiZXN0IGJ1c2luZXNzZXMgdG8gdXNlLiAKQXQgdGhlIGVuZCBvZiBsYXN0IHllYXIgaSBzdGFydGVkIGdldHRpbmcgYmFkIGJyZWFrb3V0cyBvbiB0aGUgc2lkZSBvZiBteSBjaGVla3MuIEkgc3BlbnQgdGhlIG1ham9yaXR5IG9mIHRoaXMgeWVhciB0cnlpbmcgdG8gZmlndXJlIG91dCBob3cgdG8gZ2V0IHJpZCBvZi9sZXNzZW4gdGhlIGJyZWFrb3V0cy4gCkFmdGVyIHRoZXkgaGF2ZSBmaW5pc2hlZCB3cml0aW5nLCBhc2sgZm9yIHZvbHVudGVlcnMgb3IgY2FsbCBvbiBzdHVkZW50cyB0byBzaGFyZSB0aGVpciBpZGVhcy4gVGhpcyBhY3Rpdml0eSBhbHNvIGdpdmVzIHF1aWV0ZXIgc3R1ZGVudHMgdGhlIG9wcG9ydHVuaXR5IHRvIHByZXBhcmUgYW5zd2VycyB0aGV5IGNhbiBzaGFyZSB3aXRoIHRoZSBncm91cC4uIApJIGFsd2F5cyBkb25lIGJldHRlciBpbiBjb21wcyBhdCBGb3h3b29kcywgSSBnZXQgMTAgMjAgcG9pbnRzIGZvciBzaG93aW5nIHVwIHR3aWNlIGEgd2VlayBhbmQgMiBmcmVlIHJvb21zIGEgd2Vlay4gV2Vla25pZ2h0cyBvbmx5LCB3ZWVrZW5kIHJvb21zIGZvcmdldCBpdCwgdGhleSBkb24gd2FubmEga25vdyB5b3UuIEkgYWxzbyBnZXQgYWxsIHRoZSB3ZWlyZCBnaWZ0cyBhbmQgYiBsaXN0IHNob3dzLCBJIHBsYXkgbWF5YmUgMjAgaG91cnMgYSB3ZWVrLiAKVGhhbmsgeW91IHRvIEFyYXZhaXBhIFJ1bm5pbmcgZm9yIGhvc3RpbmcgdGhlIHJhY2UsIGFuZCB0byB0aGUgdm9sdW50ZWVycyBmb3IgeW91ciBoZWxwIG9uIGNvdXJzZSEgSSBoYWQgYSBncmVhdCB0aW1lOyBpdCB3YXMgZGVmaW5pdGVseSB3b3J0aCB0aGUgcXVpY2sgdHJpcCBkb3duLiBPaCBhbmQgYmlnIGNvbmdyYXR1bGF0aW9ucyB0byBDb2R5IG9uIHRoZSB3aW4gYW5kIG5ldyBjb3Vyc2UgQ1IhIEkgaGF2ZSBhIGZlZWxpbmcgdGhpcyB3aWxsIGJlIG15IGJlc3QgeWVhciB5ZXQsIGFuZCBhbSBleGNpdGVkIHRoYXQgaXQgaGFzIHN0YXJ0ZWQgd2l0aCBhIGJhbmcuIFNpbmNlIHRoZSByYWNlIEkndmUgYmVlbiBmb2N1c2VkIG9uIHJlY292ZXJ5LCB0cnlpbmcgdG8gZ2V0IG15IGJvZHkgYmFjayBpbnRvIGdlYXIgaGVyZSBmb3Igb25lIGZpbmFsIGJpZyBwdXNoIGludG8gQmxhY2sgQ2FueW9uIDEwMC4gCkhvbGQgeW91ciBhc3NldHMgYW5kIGlmIHlvdSBmb3VuZCBndWlsdHkgdGhleSBhdWN0aW9uIGl0IG9mZi4gSXQgb2Z0ZW4gYSBjb3Agd2hvIGJ1eXMgdGhlc2UgdGhpbmdzIGFuZCB0aGVuIHR1cm5zIGFyb3VuZCB0byBzZWxsIHRoZW0gZm9yIG1vcmUgbW9uZXkuIApZb3UndmUganVzdCBnb3R0YSBmaWdodCB5b3VyIHdheSB0aHJvdWdoLiIuIApMJ1VESSBlc3QgcGFzcyBhdmVjIGFybWVzIGV0IGJhZ2FnZXMgIExSRU0sIGNvbW1lIGwnYSBtb250ciBsJ2xlY3Rpb24gIGwnQXNzZW1ibGUgbmF0aW9uYWxlIGRlIFN5bHZhaW4gTWFpbGxhcmQsIGNvbnNlaWxsZXIgZCdhcnJvbmRpc3NlbWVudCBldCBleCBhZGpvaW50ICBsYSBtYWlyZSBkdSA5ZSwgbWV0dGFudCBmaW4gYXV4IGxvbmd1ZXMgYW5uZXMgZGUgZG9taW5hdGlvbiBkZXMgZXggUlBSL1VNUCBldCBhdXNzaSBsZSBwb3NpdGlvbm5lbWVudCBhY3R1ZWwgZHUgcHJlbWllciBhZGpvaW50ICBsYSBtYWlyZSBkdSA5ZSwgQWxleGlzIEdvdmNpeWFuLCBsdSBsdWkgYXVzc2kgc291cyBsJ3RpcXVldHRlIFVESS4gClJlc2VhcmNoIGlzIGluIHdvcmsgb24gYWRpcG9zZSB0aXNzdWVzIGVmZmVjdCBvbiBtb2RlcmF0aW5nIGJsb29kIGdsdWNvc2UgZHVlIHRvIGxhcmdlciBzdG9yYWdlIHN5c3RlbXMgZm9yIGV4Y2VzcyBpbmdlc3RlZCBlbmVyZ3kuIApXaGF0IGlzIEN1c3RvbSBQdWJsaXNoaW5nIE5vdD8KTGFtcGphdyB1Ck9ubGluZSBJIGZlZWwgbGlrZSBJIGp1c3QgY2xpY2tpbmcgYnV0dG9ucywgYW5kIGV2ZW4gaWYgSSBwbGF5aW5nIHdlbGwgbWVjaGFuaWNhbGx5LCB0aGVyZSBzb21ldGhpbmcgb2YgYSBkaXNjb25uZWN0IGZvciBtZS4gSSBncmVhdGx5IHByZWZlciBsaXZlIHBva2VyLCB0byB0aGUgcG9pbnQgd2hlcmUgSSBoYXZlbiBwbGF5ZWQgb25saW5lIGluIHllYXJzLi4gCkFwcGFyZW50bHkgcGVvcGxlIGJ1eSB0aGVzZSBmaWxtcyBmb3IgcGxlYXN1cmUuIAo2LiAKIklmIHdlIGNhbiBzYXZlIGEgbGlmZSBhbmQgc2F2ZSBhIGZhbWlseSBmcm9tIGxvc2luZyBhIGxvdmVkIG9uZSB0aHJvdWdoIGFuIGFzdGhtYSBhdHRhY2ssIGl0J3Mgd29ydGggaXQsIiBTdWUgc2FpZC4gCkl0IGhhcyBub3QgYmVlbiBlbWJyb2lkZXJlZCwgYW5kIGl0IGlzIHRyYW5zY3JpYmVkIGhlcmUgd29yZCBmb3Igd29yZDpCbG9rZSBPbmU6IFNvIGhlIHJhbmcgdXAgYW5kIHNhaWQgaGUgYW5kIFNoZWlsYSB3ZXJlIGdvaW5nIHRvIHNlZSB0aGUgbmV3IEhhcnJ5IFBvdHRlci5CbG9rZSBUd286T2ggSSByZWFsbHkgd2FudCB0byBzZWUgdGhhdC5CbG9rZSBPbmU6SSB3b3VsZG4ndCBib3RoZXIgaWYgSSB3YXMgeW91LiAKSG90ZWwgc2VjdXJpdHkgdmlkZW8gYW5kIHBvbGljZSBvZmZpY2VyIGJvZHkgY2FtZXJhIHJlY29yZGluZ3MgbWFkZSBwdWJsaWMgdW5kZXIgY291cnQgb3JkZXIgaW4gYSBwdWJsaWMgcmVjb3JkcyBsYXdzdWl0IGJ5IG1lZGlhIGluY2x1ZGluZyBBUCBzaG93ZWQgcG9saWNlIHVzaW5nIGV4cGxvc2l2ZXMgdG8gYmxhc3QgdGhyb3VnaCB0aGUgZG9vciBvZiB0aGUgMzJuZCBmbG9vciBob3RlbCBzdWl0ZSB3aGVyZSBQYWRkb2NrIHdhcyBmb3VuZCBkZWFkIGZyb20gYSBzZWxmIGluZmxpY3RlZCBndW5zaG90IHdvdW5kLiBUaGUgQ2xhcmsgQ291bnR5IGNvcm9uZXIgcnVsZWQgaGlzIGRlYXRoIGEgc3VpY2lkZS4KSGUgc2FpZCBLZXZpbiBGaXR6Z2VyYWxkIGxveWFsdHkgY2FyZCB3YXMgcmVtb3ZlZCBmcm9tIGEgbWFjaGluZSBhdCB0aGUgQmVlcndhaCBSU0wgYXQgMi4yMHBtIG9uIERlY2VtYmVyIDcsIDIwMDMsIGFmdGVyIGhlIGhhZCAxMyAicGxheXMiLgpUaGUgYnJhbmRlZCBjb250ZW50IHNwYWNlIGlzIGFsd2F5cyBldm9sdmluZywgYW5kIHdpdGggODYgcGVyY2VudCBvZiBidXNpbmVzcyB0byBjb25zdW1lciAoQjJDKSBicmFuZHMgbm93IGVtcGxveWluZyBjb250ZW50IG1hcmtldGluZywgdGhlIHF1YWxpdHkgb2Ygc3RvcmllcyBiZWluZyB0b2xkIGlzIGF0IGFuIGFsbCB0aW1lIGhpZ2guIAoiV2h5IGRvbid0IHlvdSB0cnkgeW91ciBoYW5kIGF0IGl0IHlvdXJzZWxmLCBBbm5lPyIKVHVybiBjb21lcywgaGUgY2hlY2tzIHRoZSBxdWVlbiwgd2hpY2ggbWVhbnMgaGUgZWl0aGVyIGlzIHNsb3cgcGxheWluZyBBUSwgd2hpY2ggZG9lc24ndCByZWFsbHkgbWFrZSBzZW5zZSwgb3IgaGUgcmVhbGx5IHRoaW5rcyBoZSBoYXMgYSB3ZWFrZXIgaGFuZC4gQmV0LCBoZSBjYWxscywgdGhlIGluZm9ybWF0aW9uIGhlcmUgaXMgdGhhdCBoZSBkb2VzIGhhdmUgYSBoYW5kLCBqdXN0IG5vdCBhIGdvb2Qgb25lLiBSaXZlciBjb21lcyBhbiBhY2UsIHNoZSBiZXQsIGNoZWNrIHNob3ZlLiAKU29tZXRoaW5nIGxpa2UgdGhlIFN1cGVyIEJvd2wgdXNlZCB0byBiZSBzb21ldGhpbmcgdGhhdCB0aGUgbWFqb3JpdHkgb2YgcGVvcGxlIHdvdWxkIHR1bmUgaW50by4gQnV0IGhlcmUgdGhlIGJyZWFrZG93biBvZiBteSBjbyB3b3JrZXJzIGluIHRoZWlyIDIwcyBhbmQgMzBzLgpBbmQgdGhhdCBJIHdvdWxkIGF0dHJpYnV0ZSBtb3JlIHRvIGplc3VzIHRoYW4gYW55IG90aGVyLiAKTmVsc29uIGdvdCBhIHBhc3MgZnJvbSBKb3JkYW4gRWJlcmxlIGFuZCBiZWF0IFNwYXJrcyBmcm9tIHRoZSByaWdodCBzaWRlIGZvciBoaXMgMjB0aCBhdCA4OjQxIGZvciBOZXcgWW9yaydzIHNpeHRoIHN0cmFpZ2h0IGdvYWwgYWZ0ZXIgdHJhaWxpbmcgMSAwIGluIHRoZSBmaXJzdC4KQXVkaW8gVGVjaG5pY2EgbmVlZGxlIChqdXN0IHJpZ2h0LCBtaWdodCByZXBsYWNlKSBhbmQgYnVpbHQgaW4gcHJlIGFtcC5PdmVyYWxsLCBmb3Igd2hhdCBJIHNwZW50ICh0ZWNobmljYWxseSBub3RoaW5nKSBpdCBxdWlldCB0aGUgYmVnaW5uZXJzIHNldHVwIChJIGEgbmV3YiwgcGxlYXNlIGdvIGVhc3kgb24gbWUpLiAKU2luY2UgY2lyY3VtY2lzaW9uIGRvZXMgaW1wYWN0IGEgbWFuJ3MgcGxlYXN1cmUgSSBhZ3JlZSB0aGF0IGl0IGlzIGNydWVsIHRvIGJlIGRvbmUgdG8gYmFiaWVzICh0aGV5IGNhbid0IGV2ZXIgcmV2ZXJzZSBpdCksIGJ1dCBJIHRoaW5rIHlvdW5nIG1lbiAobm90IGJhYmllcykgc3RpbGwgc2hvdWxkIGJlIGFibGUgdG8gY2hvb3NlIHRvIGRvIHNvIGlmIHRoZXkgd2FudCwgYWxzbyBpZiB0aGV5IGhhdmUgdGhlIGNvbmRpdGlvbiB0aGF0IG1ha2VzIGl0IHVuYWJsZSB0byByZXRyYWN0LiBJIHRoaW5rIGl0IHNob3VsZCBiZSBhbGxvd2VkIHRoZW4uCkZvbGxvdyB0aGUgc3RlcHMgaW4gc2VkdWNpbmcgeW91ciBodXNiYW5kIGFmdGVyIDIwIHllYXJzIG9mIG1hcnJpYWdlLgpUaGF0IGFsbCBtYWtlcyBtZSB0aGluayB0aGF0IGl0IGEgYml0IHN1cGVyZmljaWFsIGFza2luZyBmb3IgYSB0aXRsZSBjaGFuZ2Ugc2luY2UgbXkgZGF5IHRvIGRheSB3aWxsIHN0aWxsIGJlIHRoYXQgb2YgYSBkYXRhIHNjaWVudGlzdCwgYW5kIG9uIHRoZWlyIHBhcnQgaXQgYmUgc3RyYW5nZSBpZiB0aGVpciBlbnRpcmUgZGVwYXJ0bWVudCBhcmUgYW5hbHlzdHMgYnV0IHRoZSBuZXcgZ3V5IGlzIGNhbGxlZCBhIGRhdGEgc2NpZW50aXN0LiBPbiB0aGUgb3RoZXIgaGFuZCBpdCBwcmV0dHkgcmVhc29uYWJsZSBmb3IgbWUgdG8gd2FudCBteSB0aXRsZSB0byBiZSB0aGUgc2FtZSBhcyB0aGUgam9iIEkgYXBwbGllZCBmb3IgcmlnaHQ/LiAKVGlwcyBBY2NlcHQgY3JlZGl0IGNhcmRzIGlmIHlvdSBjYW4gYWZmb3JkIHRoZSBlcXVpcG1lbnQgY29zdHMgYW5kIGZlZXMgYXNzb2NpYXRlZCB3aXRoIGl0LiBTb21lIGNyZWRpdCBjYXJkIGFjY2VwdGFuY2UgcHJvZ3JhbXMgaGF2ZSB1cGZyb250IGNvc3RzIG9mICQ1MDAgb3IgbW9yZSBpbiBhZGRpdGlvbiB0byB0cmFuc2FjdGlvbiBmZWVzLiAKTWVyZ2luZyB3aXRoIFZNTD8gVGhhdCdzIHByZXR0eSBzYWQuIApNYW4sIHRoYXQgdGhpbmcgICBtYW4sIHRoYXQgdGhpbmcgaHVydCBtZS4gQXMgYSBmYXRoZXIgb2YgdHdvIGRhdWdodGVycywgaXQgaHVydCBtZS4gCkhlIG1heSBsaXZlLCBuZXZlciBoYXZpbmcgc3VmZmVyZWQgdGhlIGNvbnNlcXVlbmNlcyBvZiBoaXMgYWN0aW9ucyBoaW1zZWxmLiBCdXQgaGlzIGFjdGlvbnMgcGVycGV0dWF0ZSBhIHBhdHRlcm4gaW4gdGhlIHdvcmxkIHRoYXQgaW5mbGljdHMgc3VmZmVyaW5nIG9uIG90aGVycywgYW5kIHRoYXQgbWF5IGluY2x1ZGUgaGlzIGNoaWxkcmVuLCBvciBoaXMgZnJpZW5kcywgb3IgaGlzIGNvbW11bml0eS4KU2hlaWtoIFJhc2hpZCB3YXMgaGVhcmQgc2F5aW5nIGJlZm9yZSBUViBjYW1lcmFzIHRoYXQgdGhleSB3b3VsZCBub3QgdGFsayB0byB0aGUgZ292ZXJubWVudCB1bnRpbCBkb2cgd2FzIHRha2VuIG91dCBvZiB0aGUgd2VsbC4gClJlcG9ydGluZyBhIFBoeXNpY2FsIEJhcnJpZXJUaWdlciBEaW5pbmcgT3B0aW9ucyBmb3IgU3R1ZGVudHMgd2l0aCBEaWV0YXJ5IE5lZWRzU3R1ZGVudHMgd2l0aCBzZXJ2aWNlIGFuaW1hbHMgc2hvdWxkIHJlZ2lzdGVyIHRoZWlyIGFuaW1hbCB3aXRoIHRoZSBVbml2ZXJzaXR5IGJ5IHN1Ym1pdHRpbmcgdmV0ZXJpbmFyeSByZWNvcmRzIGFuZCBlbWVyZ2VuY3kgY29udGFjdCBpbmZvcm1hdGlvbiB0byB0aGUgT2ZmaWNlIG9mIEFjY2Vzc2liaWxpdHkuIFBsZWFzZSBjYWxsIDMzNCA4NDQgMjA5NiB0byBzY2hlZHVsZSBhbiBhcHBvaW50bWVudCB3aXRoIGEgZGlzYWJpbGl0eSBzcGVjaWFsaXN0LgpFdmVyeXRoaW5nIGVsc2UgaXMgZG9uZSBhdXRvbWF0aWNhbGx5IHNvIHlvdSBnZXQgdG8gc2l0IGJhY2sgYW5kIHdhdGNoIGl0IGdvIHRocm91Z2ggdGhlIG1vdGlvbnMuLiAKNzA4LCBNYXkgMjQsIHBwIDczIDc2Ll1XZSBkb24ndCByZWFsbHkgZmluZCBvdXQgdGhlIGFuc3dlciB0byB0aGF0IHF1ZXN0aW9uIGluIE9yaWdpbiBhbmQgRGV2ZWxvcG1lbnQgb2YgdGhlIFBhaW50IEJydXNoICgxOTM4KSwgYnV0IHRoYXQgcmVtYXJrYWJsZSwgZmFyIGZyb20gdGhlIG1hZGRlbmluZyBjcm93ZCBxdWVzdGlvbiBkb2VzIHByZXNlbnQgaXRzZWxmIGluIHRoZSB0ZXh0LiAKRmFpdGVzIGVuIGwnZXhwcmllbmNlIGV0IHZvdXMgam91cnMgc2UgZHJvdWxlcm9udCBiaWVuIGRpZmZyZW1tZW50LiAKSXQgbWF5IGhhdmUgYmVlbiBhIHRyZW5kIGJhY2sgdGhlbiBmb3Igc29sZGllcnMgdG8gcHVyY2hhc2UgcGxhcXVlcy9wbGF0ZXMgbGlrZSB0aGlzIGFuZCBjdXN0b21pemUgd2l0aCB0aGVpciBpbmZvcm1hdGlvbiBhcyBnaWZ0cyBvciB0byBoYW5nIG9uIHRoZWlyIG93biB3YWxscy4gTXVjaCBpbiB0aGUgd2F5IHRoYXQgeW91IHNlZSBzaGFkb3cgYm94ZXMgYW5kIEtJQSBicmFjZWxldHMgYW1vbmcgdmV0ZXJhbnMgb2YgbXkgZ2VuZXJhdGlvbiAoR1dPVC9Qb3N0IDkgMTEpLi4gCkJ1dCB3ZSB0ZW5kIGZpZ3VyZSBvdXQgb25lIHBlcnNvbiB3aG8gaXMgdGhlICJpdCIgcGVyc29uIGZvciB0aGUgbW92ZW1lbnQuIApUaGVyZSBhcmUgYWxzbyByZWQgbGlnaHQgZGlzdHJpY3RzIGJ1dCB0aG9zZSBhcmUgZXhwZW5zaXZlIGFuZCBkZXByZXNzaW5nLiAKIkEgbG90IG9mIHVzIGdyZXcgdXAgY29uc3VtaW5nIGludGVybmF0aW9uYWwgY29udGVudCwgZWl0aGVyIGJ5IGRvd25sb2FkaW5nIGZyb20gdG9ycmVudHMgb3Igb3RoZXIgbWVhbnMuIApCdXQgbW9yZSBpbXBvcnRhbnRseSBpdCBraWxscyB0aGUgdW5mcmllbmRseSBvcmFsIGJhY3RlcmlhIGV4YWNlcmJhdGluZyBndW0gZGlzZWFzZS4gSSBwcmVzY3JpYmUgY2hsb3JoZXhpZGluZSBmb3IgcGF0aWVudHMgd2hvIGhhdmUgYWN1dGUgaW5mbGFtbWF0aW9uIGFuZCBnZW5lcmFsbHkgZm9yIHBhdGllbnRzIHdobyBoYXZlIGhvcnJpYmxlIG9yYWwgaHlnaWVuZS4gCicnVGhleSB0ZW5kIHRvIHB1dCB0aGUgbW9zdCBtYWNoaW5lcyBpbiB0aGUgcG9vcmVyIGFyZWFzLicnIEhVTlRFUidTIFRPUCAxMCBDTFVCUyBCWSBSRVZFTlVFIDEuIFdlc3Rlcm4gU3VidXJicyBMZWFndWVzIENsdWIsIE5ldyBMYW1idG9uIDIuIEJlbG1vbnQgMTYgRm9vdCBTYWlsaW5nIENsdWIgMy4gCkRvY2ggZGllIGVpZ2VudGxpY2hlIEdlZmFociBsYXVlcnQgbmljaCBpbiBkZXIgTmF0dXIuIApTbyByZWNlbnRseSBteSBjb21wdXRlciBoYXMgYmVlbiBydW5uaW5nIGdyZWF0LCBidXQgYXMgb2YgbGF0ZSBpdHMgYmVlbiBibGFjayBzY3JlZW5pbmcgKHNvIGZhciB0d2ljZSkuIFRoZSBmaXJzdCB3YXMgYSBmZXcgZGF5cyBhZ28sIEkgc3RlcHBlZCBvdXQgb2YgbXkgcm9vbSB0byBnbyBkb3duc3RhaXJzIGZvciBhIHdoaWxlIGFuZCBkbyBzb21lIHRoaW5ncyBhbmQgd2hlbiBJIGNhbWUgYmFjayBJIG5vdGljZWQgdGhhdCBteSBtb25pdG9yIHdhcyBvZmYgKHBvd2VyIHN0aWxsIG9uLCBidXQgdGhlIHNjcmVlbiB3YXMgYmxhY2spLiBTbyBJIHRob3VnaHQgdG8gbXlzZWxmLCBvaCBpdCBqdXN0IHR1cm5lZCB0aGUgbW9uaXRvciBvZmYgYmVjYXVzZSBpdHMgYmVlbiAyMCBtaW51dGVzICh0aGF0cyB3aGF0IEkgaGF2ZSBpdCBzZXQgdG8pIGFuZCB3aGVuIEkgdHJpZWQgdG8gbWFrZSBpdCBjb21lIGJhY2sgaXQgd291bGRuJ3QuIApJdCB0ZWxscyBhIHN0b3J5IHRoYXQgd2UgZGlkbiBuZWVkIHRvIGtub3cuIFdlIGFscmVhZHkga25ldyB0aGUgcmViZWxzIHdvdWxkIGdldCB0aGUgcGxhbnMuIFdlIGtub3cgZW5vdWdoIGZyb20gQSBOZXcgSG9wZSB3aXRob3V0IGl0IGJlaW5nIHNwZWxsZWQgb3V0IGZvciB1cy4KSWYgeW91IHdpc2ggdG8gcmFpc2UsIGp1c3Qgc2F5ICJyYWlzZSIgdGhlbiBjb3VudCB5b3VyIGNoaXBzIGFuZCBtb3ZlIHRoZW0gYWNyb3NzIHRoZSBiZXR0aW5nIGxpbmUgaW4gYSBzaW5nbGUgc21vb3RoIG1vdGlvbi4gSXQgaXMgaW1wb3J0YW50IHRoYXQgeW91IHNob3cgY29uZmlkZW5jZSB3aGlsZSByYWlzaW5nLi4gCklmIHlvdSB0aW1lIGl0IHJpZ2h0LCB5b3UgY2FuIGF0dGFjayB0aGUgU2lyZSB3aWxsIHlvdSBydW5uaW5nLiAKU2luY2UgT1AgYXNrZWQgd2hlcmUgY291bGQgaGUgaW1wcm92ZSwgSSBnb25uYSBjaGltZSBpbiBzaW5jZSBubyBvbmUgaXMgYW5zd2VyaW5nLCB5b3UgYWxsIGFyZSBtb3N0bHkganVzdCBjaXJjbGUgamVya2luZy4gMyBiZXQgbGFyZ2VyIHByZSBmb3IgdmFsdWUgYXQgdGhlc2UgbG93ZXIgc3Rha2VzLiBNb3N0IHZpbGxhaW5zIHdpbGwgY2FsbCB3aGVuIGRvbWluYXRlZCBsaWtlIHRoaXMgaGFuZC4gCldoeSBkbyBQYWtpc3RhbmkgR3JhZGUgMjIgb2ZmaWNlcnMsIGZlZGVyYWwgbWluaXN0ZXJzIGFuZCBnZW5lcmFscyBzcGVuZCB0aGlzIG11Y2ggdGltZSBhbmQgZWZmb3J0IG9uIHRoZWlyIHNhbGVzJyBwaXRjaGVzIHRvIHRoZWlyIEFtZXJpY2FuIGNvdW50ZXJwYXJ0cz8gU2ltcGx5IHB1dCwgZ2V0dGluZyB0aGUgQW1lcmljYW4gdGF4cGF5ZXIgdG8gZm9vdCB0aGUgYmlsbCBmb3IgdGhlaXIgcHJvamVjdHMgICB3aGV0aGVyIGl0IGlzIGdldHRpbmcgbmV3IGhlbGljb3B0ZXJzIGZvciB0aGUgZmlnaHQgaW4gV2F6aXJpc3RhbiwgbmV3IGJyaWRnZXMgZm9yIFN3YXQsIGEgbmV3IGhvc3BpdGFsIGluIE1pYW53YWxpLCBvciBuZXcgc2Nob29scyBmb3Iga2lkcyBpbiBKYWNvYmFiYWQgICBhbGxvd3MgdGhlIERNRyBvZmZpY2VycywgdGhlIHBvbGl0aWNpYW5zLCBhbmQgdGhlIGdlbmVyYWxzIHRoYXQgcnVuIFBha2lzdGFuIHRvIGhvbGQgZmlybSB0byB0aGVpciBmaWcgbGVhdmVzLiBVUyB0YXhwYXllciBtb25leSwgdGhleSBob3BlLCB3aWxsIGFsbG93IHRoZW0gdG8ga2VlcCB0aGluZ3MgYXMgdGhleSBhcmUsCkkgY2FuJ3QgdGVsbCBpZiB5b3UncmUganVzdCB0cm9sbGluZyBhbmQgcHVycG9zZWZ1bGx5IHBsYXlpbmcgZGV2aWwncyBhZHZvY2F0ZSBieSB0ZWxsaW5nIG1lIHRoYXQgY3Jvc3NpbmcgdGhlIHJvYWQgYW5kIHBva2VyIGFyZSBnYW1ibGluZyB0byBzaW1pbGFyIGRlZ3JlZXMuIFRoaXMgaXNuJ3QgYSBncmV5IGFyZWEuIFBva2VyIGlzIGdhbWJsaW5nLiAKWWVhaCwgaGUgY29uZmlybWVkIHRvIGhhdmUgcGVubmVkIHRoZSBzY3JpcHQgYW5kIGl0IHdhcyBhcHBhcmVudGx5IHNvIGltcHJlc3NpdmUgdGhhdCBXYXJuZXIgaGlyZWQgaGltIGJhc2VkIG9uIGl0IGFsb25lLCBidXQgdGhhdCB3YXMgZm9yIHRoZSBtb3ZpZSB2ZXJzaW9uIHRoYXQgZmVsbCB0aHJvdWdoIGFzIHRoZXkgYWx3YXlzIGRvLiAKQSBsb3Qgb2YgaW5zaWRlcnMgYXJlIHRhbGtpbmcgYWJvdXQgYSBSYXJlIFJlcGxheSBwb3J0IGZvciBTd2l0Y2guIEl0IHdvbnQgYmUgb24gR2FtZXBhc3MgYnV0IGEgbGVnaXRpbWF0ZSBwaHlzaWNhbC9kb3dubG9hZC4gQSBmZXcgb3RoZXJzIGFyZSBhbHNvIHNheWluZyB0aGF0IFJhcmUgUmVwbGF5IFN3aXRjaCBhbmQgYWxsIHRoaXMgYWRkaXRpb25hbCBNaWNyb3NvZnQgY29udGVudCBjYW1lIGFib3V0IGFzIGEgcmVzdWx0IG9mIGEgdmVyeSBmcnVpdGZ1bCBhbmQgYW1iaXRpb3VzIGRpc2N1c3Npb24gZHVyaW5nIEUzIG9mIGxhc3QgeWVhci4gTmludGVuZG8gYW5kIE1pY3Jvc29mdCB3YW50ZWQgdG8gZGlzY3VzcyBTU0IgYW5kIGFsbCBvZiB0aGlzIHN1cHBvcnQgd2FzIGEgZGlyZWN0IHJlc3VsdCBvZiB0aGlzIGluaXRpYWwgZGlzY3Vzc2lvbi4KVGhpcyBpcyBhIGdvb2QgcXVlc3Rpb24uIEhvbmVzdGx5IGltIG5vdCB0b28gaW5mb3JtZWQgb24gdGhlIHByYWN0aWNlIGJ1dCBteSB1bmRlcnN0YW5kaW5nIGlzIHRoYXQgdGhlIHByb2Nlc3MgaXMgcGVyZm9ybWVkIHRvIHJlZHVjZSBsaWtsaW5lc3Mgb2YgbWFzdHVyYmF0aW9uIGFuZCBzZXguIApXZSBmZWVsIHNsaWdodGx5IG1vcmUgb3B0aW1pc3RpYyBmb3IgYSBwb3NpdGl2ZSBvdXRjb21lIGluIER1cmJhbiwgdGhlIHByb2Nlc3MgaXMgc28gdm9sYXRpbGUgdGhhdCBldmVuIHByb2dyZXNzIG9uIHRlY2huaWNhbCBpc3N1ZXMgYXJlIG9mdGVuIGhlbGQgaG9zdGFnZSBieSBmdW5kYW1lbnRhbCBwb2xpdGljYWwgaXNzdWVzIGxpa2UgdGhlIGZ1dHVyZSBvZiB0aGUgS3lvdG8gUHJvdG9jb2wsIGVxdWl0eSBhbmQgb3ZlcmFsbCBhbWJpdGlvbiwgRXNzb3Agc2FpZC4KQ2FwcmEgc2hvdCBuZXh0LCBidXQgc2V2ZW5lZCBvdXQgcXVpY2tseS4gCkRvdWJsaW5nIG9mIHNvdW5kIGludGVuc2l0eSBpcyBpbmRlZWQgKzNkQllvdXIgbWF0aCBpcyByaWdodCBmb3Igc291bmQgaW50ZW5zaXR5IGxldmVsLCB5b3UganVzdCBtZWFzdXJpbmcgdGhlIHdyb25nIHVuaXQuIExvdWRuZXNzIGlzIHdoYXQgcGVvcGxlIGFzc3VtZSB0byBiZSB2b2x1bWUuIEkgZGlkbiBtZWFuIHRvIGNhbGwgeW91IG91dCwgSSBqdXN0IGdvdCBleGNpdGVkIHNvbWV0aGluZyBJIHN0dWRpZWQgaW4gY29sbGVnZSB3YXMgZmluYWxseSBnb2luZyB0byBiZSBhcHBsaWNhYmxlIG9uIHJlZGRpdCAyIHBvaW50cyAgc3VibWl0dGVkIDIzIGRheXMgYWdvSSBtYW5hZ2luZyBhYm91dCAzNTAwIDQ1MDAgY2Fsb3JpZXMgd2l0aCAyNTAgMjcwZyBwcm90ZWluIGEgZGF5IG9uIGFib3V0ICQxMCAkMTUgYSBkYXkgaW4gZm9vZC4gCldBWSAyOiBBbm90aGVyIHdheSB0byBkZWxldGUgYSBTaW0gaXMgdG8gbGl0ZXJhbGx5IGRlbGV0ZSB0aGVtLiAKSXQncyBhIExPVCBtb3JlIHRoYW4geW91J2QgdGhpbmsuIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnb3dlbGwgdG8gYmUgZmFpciBjb2xhIGNhdXNlcyBvYmVzaXR5LCBzbW9raW5nIGNhdXNlcyBjYW5jZXIgYW5kIGEgdmFyaWV0eSBvZiBvdGhlciBjb25zdW1hYmxlcyBhcmUgc3RpbGwgdXNlZCBldmVuIHRob3VnaCB0aGV5IGhhdmUgdGVycmlibGUgc2lkZSBlZmZlY3RzLiBoZWxsIG1vc3QgbWVkaWNpbmUgaGF2ZSBzaWRlIGVmZmVjdHMsIGRlcGVuZGluZyBvbiBob3cgbGFyZ2UgdGhlIHJpc2sgaXQgaXQgY291bGQgYmUgYSBwcmV0dHkgbm9uIGlzc3VlLmF1dGlzbSBpc24gYWN0dWFsbHkgYSBiaWcgZGVhbCwgbWFueSB3aXRoIGl0IGNhbiBsaXZlIHByZXR0eSBub3JtYWwgbGl2ZXMgYW5kIHRob3NlIHdpdGggc2V2ZXJlIGF1dGlzbSBtaWdodCBidXJkZW4gdGhlaXIgcGFyZW50cyBtb3JlIGJ1dCB0aGUgYXV0aXN0cyB0aGVtc2VsdmVzIHRlbmQgdG8gYmUgaGFwcHksIGEga2luZCBvZiBjaGlsZGxpa2UgaW5ub2NlbmNlIG5vcm1hbCBwZW9wbGUgbG9zZSB3aGVuIHRoZXkgZ3JvdyB1cFN1bmR5bmEgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnb3dlbGwgdG8gYmUgZmFpciBjb2xhIGNhdXNlcyBvYmVzaXR5LCBzbW9raW5nIGNhdXNlcyBjYW5jZXIgYW5kIGEgdmFyaWV0eSBvZiBvdGhlciBjb25zdW1hYmxlcyBhcmUgc3RpbGwgdXNlZCBldmVuIHRob3VnaCB0aGV5IGhhdmUgdGVycmlibGUgc2lkZSBlZmZlY3RzLkFuZCByZXNwb25zaWJsZSBwYXJlbnRzIGRpc2NvdXJhZ2UgdGhlaXIgY2hpbGRyZW4gZnJvbSB1c2luZyB0aGVzZSB0aGluZ3MsIG9yIHVzaW5nIHRoZW0gdG8gZXhjZXNzLmJlc2lkZXMgYXV0aXNtIGlzbiBhY3R1YWxseSBhIGJpZyBkZWFsLCBtYW55IHdpdGggaXQgY2FuIGxpdmUgcHJldHR5IG5vcm1hbCBsaXZlcyBhbmQgdGhvc2Ugd2l0aCBzZXZlcmUgYXV0aXNtIG1pZ2h0IGJ1cmRlbiB0aGVpciBwYXJlbnRzIG1vcmUgYnV0IHRoZSBhdXRpc3RzIHRoZW1zZWx2ZXMgdGVuZCB0byBiZSBoYXBweSwgYSBraW5kIG9mIGNoaWxkbGlrZSBpbm5vY2VuY2Ugbm9ybWFsIHBlb3BsZSBsb3NlIHdoZW4gdGhleSBncm93IHVwVGhlIG1haW4gcGFydCBvZiBteSBwb3N0IHdhcyBhZGRyZXNzZWQgc3BlY2lmaWNhbGx5IGF0IHRoaXMgcG9pbnQsIGRpZCB5b3UgcmVhZCBpdD8gMSBwb2ludCAgc3VibWl0dGVkIDEzIGRheXMgYWdveWV0IG1vc3Qgc3RpbGwgYWxsb3cgY2hpbGRyZW4gdG8gY29uc3VtZSB0aGluZ3MgdGhhdCB0aGV5IGtub3cgYXJlIGJhZCBmb3IgdGhlbSwgaXRzIG5vdCBhcyBpZiBwYXJlbnRzIHdlcmUgdHJ5aW5nIHRvIGtlZXAgdGhlIGNoaWxkcmVuIGhlYWx0aHkgYnkgYWxsIG1lYW5zLCBpdHMgb25lIHNwZWNpZmljIHRoaW5nIHRoYXQgaGFzIGEgY2hhbmNlIHRvIGNhdXNlIG9uZSBzcGVjaWZpYyB0aGluZywgYW5kIHdpdGhvdXQgc2FpZCBjb25zdW1hYmxlIHlvdSByaXNrIG90aGVyIHRoaW5ncywgc28gdGhlIHJpc2sgdG8gdGhlIGNoaWxkIGhlYWx0aCBzdGF5LCBvbmx5IHRoZSBzb3VyY2UgY2hhbmdlcy4gCkUuIApDdXJpb3VzIHdoYXQgcG9zaXRpb25zIHRoZXkgaGF2ZSB0aGF0IHdvdWxkIHJlcXVpcmUgbW9yZSB0aGFuIDUyIGhvdXJzIG9mIHdvcmsgYSB3ZWVrIGJ1dCB3aGljaCBjb3VsZG4gYmUgc29sdmVkIGJ5IGhpcmluZyBuZXcgZW1wbG95ZWVzLiBGb3IgYWNjb3VudGFudHMgSSBrbm93IHRoYXQgdGF4IHNlYXNvbiBsZWFkcyB0byBzZXJpb3VzIG92ZXJ0aW1lIGJ1dCBkb24ga25vdyBpZiBiYW5rcyBzZWUgYSBzaW1pbGFyIHNpdHVhdGlvbi4gCk5vYm9keSBrbm93cyB3aGF0IGNhdXNlcyBpdC4gSnVzdCByZW1lbWJlciB0aGF0IHRoaXMgd2lsbCBwYXNzIGV2ZW4gdGhvdWdoIGl0IGRvZXNuIGZlZWwgbGlrZSBpdCB3aWxsLiBNeSBkYXVnaHRlciBvdXRncmV3IGl0IHJhbmRvbWx5IGF0IDQgbW9udGhzIGFuZCBpcyBub3cgYSBoYXBweSwgbGF1Z2hpbmcgdG9kZGxlci4uIApMZW50aWwgRGFsIHdpdGggWW9ndXJ0IGFuZCBDaWxhbnRybyBhbmQgQ3VycmllZCBTaHJpbXAKUGFzIGRlIGJhcnMgZHUgQ2hpbGksIHBhcyBkZSBjcmV2ZXR0ZXMgZGUgVGhhIGRlIGNvdXJzZSBhdSBjb2Nob24gZ3JhaXNzIGRlIHBhaWxsZXMsIHBvZ25lIGRhbnMgbGUgbmV6IGRlcyB0b3J0dWVzLiBFdCBsZSBwbGFzdGlxdWUgY3IgZGVzIG9jIGRlIGQgZGFucyBsZXMgb2MgYyBiaWVuIGNvbm51LgpIYWQgcmFpc2VkIHNvbWUgbW9uZXkgZ29pbmcgaW50byB0aGUgc2hvdywgYW5kIHdlIHJhaXNlZCBzb21lIHNpbmNlLiBXZSB3ZXJlIGNlcnRhaW5seSBvcGVuIHRvIGEgcGFydG5lcnNoaXAgYnV0IHdlIGRpZG4gdGhpbmsgd2UgZ2V0IGEgZGVhbCB0aGF0IHdlIHdlcmUgZ29pbmcgdG8gYmUgY29tZm9ydGFibGUgd2l0aC4gV2VyZSB3cm9uZy4gCkJ1dCBpdCBhbHNvIGdvZXMgZm9yIHRoZSBiYWQgZGVhbHMgdGhhdCBzbGlwIHRocm91Z2ggdGhlIGNyYWNrcy4gRG9uIGxldCB0aGVtIGdldCB5b3UgZG93biBvciBjcnVzaCB5b3VyIGNvbmZpZGVuY2UuIFRoZXkgaGFwcGVuIHRvIGV2ZW4gdGhlIGJlc3QgaW52ZXN0b3JzLiAKUG9rZXJtZXQgdQpUaGF0IGxlYXZlcyAxMzAwIHBhcmtpbmcgc3BhY2VzIGZvciBzdHVkZW50cyB3aXRoIGFuIG92ZXJzZWxsIHBlcmNlbnRhZ2Ugb2YgMTU1JSB5aWVsZGluZyAyMDE1IHBhcmtpbmcgcGVybWl0cyBmb3Igc3R1ZGVudHMuIEFzIHNvbWVvbmUgd2hvIHJvdXRpbmVseSBwYXJrcyBhdCBwZWFrIHRpbWVzIGluIHRoZSBlYXN0IHBhcmtpbmcgZ2FyYWdlIEkgaGF2ZSBuZXZlciBzZWVuIGl0IGZpbGwgdXAgdG8gMTAwJSBjYXBhY2l0eSwgSSBjb3VsZCBzZWUgdGhlIHBhcmtpbmcgZGVwYXJ0bWVudCBpbmNyZWFzaW5nIHRoZSBvdmVyc2VsbCByYXRlIGEgY291cGxlIHBlcmNlbnQgZm9yIGFyb3VuZCAyMDQwIGdhcmFnZSBwZXJtaXRzIGZvciBzdHVkZW50cy4uIApUaGVyZSBhcmUgYSBmZXcgYW5zd2VycyBHYXVkaXlhcyBnaXZlIHRvIHRoaXMgb2JqZWN0aW9uICh0aGlzIGlzIG1vcmUgb2YgYW4gYW5zd2VyIHRvIHRob3NlIHN5bXBhdGhldGljIHRvIHRoZSBHYXVkaXlhIFNhbXByYWRheWEgcmF0aGVyIHRoYW4gYSBzdHJpY3QgcmVmdXRhdGlvbiBvZiB0aGUgY2xhaW1zKTpFdmVyeSBhY2hhcnlhLCB3aGVuIHRoZXkgYXBwZWFyIGluIHRoaXMgd29ybGQsIHByZWFjaCB0aGUgbWVzc2FnZSBhY2NvcmRpbmcgdG8gdGhlIHRpbWUgYW5kIGNpcmN1bXN0YW5jZSBhbmQgdW5kZXJzdGFuZGluZyBvZiB0aGUgcGVvcGxlLiBUaGlzIGlzIGxpa2VuZWQgdG8gYSBidWRkaW5nIGZsb3dlci4gCkFjY29yZGluZyB0byBoaXNvYml0dWFyeSwgS2FtaW8gICBhIFJpY2htb25kLCBDYWxpZi4gTmF0aXZlICAgYXR0ZW5kZWQgdGhlIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSwgQmVya2VsZXksIGFuZCBlbnRlcmVkIHRoZSBiYW5raW5nIGFuZCBmaW5hbmNlIHdvcmxkIGFmdGVyIGdyYWR1YXRpbmcgaW4gMTk3OC4gQWZ0ZXIgbW92aW5nIHRvIEJvc3RvbiwgaGUgb3BlbmVkIHRoZSBmaXJzdCBBbm5hJ3MgbG9jYXRpb24gaW4gQnJvb2tsaW5lIGluIDE5OTUuIApPdmVyIHRoZSBuZXh0IHR3ZW50eSB5ZWFycywgaW50byB0aGUgMTk0MCB0aGUgaW50ZXJlc3Qgc2VlbXMgbGVzcyBpbiBjb21tdW5pY2F0aW9uIHRoYW4gd2l0aCB0aGUgdmlzaXRpbmcgdGhlIHBsYWNlLi4gCkJhZCBHdXkgICJCaXRjaCBJIG9uIG15IHdheS4iIENsaWNrCkJvdGggb3JnYW5pemF0aW9ucyBzaGFyZSBhIGNvbW1pdG1lbnQgdG8gbWVhbmluZ2Z1bCBpbm5vdmF0aW9uIHdoaWNoIGlzIGRlZXBseSBlbWJlZGRlZCBpbiBlYWNoIGNvbXBhbnkncyBjdWx0dXJlLiAKQW1lcmljYSBpcyBub3QgImEgbmF0aW9uIG9mIGltbWlncmFudHMiIGFzIHNvbWUgbGlrZSB0byBzYXkuIFllcyB0aGF0IGlzIHRydWUgbW9zdCBwZW9wbGUgaGVyZSBhcmUgb2YgRXVyb3BlYW4gZGVzY2VudCwgYnV0IHRoYXQgYW4gYXJiaXRyYXJ5IGNoYXJhY3RlcmlzdGljLCBtdWNoIGxpa2UgYmVpbmcgcmlnaHQgaGFuZGVkLiBNb3N0IHBlb3BsZSBoZXJlIGFyZSByaWdodCBoYW5kZWQsIHNvIHRoYXQgbWVhbnMgd2UgbXVzdCBsZXQgZXZlcnkgcmlnaHQgaGFuZGVkIHBlcnNvbiBpbiAoZXZlbiBsZWdhbGx5KSB0aGUgY291bnRyeSwgbm8gcXVlc3Rpb25zIGFza2VkLCBkYW1uIHRoZSBjb25zZXF1ZW5jZXMsIGFuZCBpZiB5b3UgZG9uIGxpa2UgaXQgeW91IGEgcmlnaHQgaGFuZG9waG9iZS4gSXQgc3R1cGlkLgpGciBlaW5lbiBUYWdlc2F1c2ZsdWcgZW1wZmllaGx0IHNpY2ggZGllIEFuZmFocnQgdm9uIE9zdGVuIHVuZCBkaWUgUmNrcmVpc2UgYmVyIGRlbiBXZXN0ZW4uIAo5ICJUaGUgd29ya2VycyB3aG8gd2VyZSBoaXJlZCBhYm91dCBmaXZlIGluIHRoZSBhZnRlcm5vb24gY2FtZSBhbmQgZWFjaCByZWNlaXZlZCBhIGRlbmFyaXVzLiAxMCBTbyB3aGVuIHRob3NlIGNhbWUgd2hvIHdlcmUgaGlyZWQgZmlyc3QsIHRoZXkgZXhwZWN0ZWQgdG8gcmVjZWl2ZSBtb3JlLiBCdXQgZWFjaCBvbmUgb2YgdGhlbSBhbHNvIHJlY2VpdmVkIGEgZGVuYXJpdXMuIApUaGV5IGNhbiBhZmZvcmQgdGhlbSBhbGwuIEF0dGFja2luZyBnaWFudCBjb21wYW5pZXMsIEkgdGhpbmsgd2lsbCBjYXVzZSB0aGUgc3RvY2sgbWFya2V0IHRvIGRyb3AgaHVydGluZyB1cyBmaW5hbmNpYWxseS4gCldoYXQgaWYgd2UgbW92ZSB1cCB0aGUgaW5jb21lIHJhbmdlIHRvIHdoYXQgaXMgcm91Z2hseSB0aGUgMzB0aCBwZXJjZW50aWxlLCBvciAkNjAsNDIwIG9mIGhvdXNlaG9sZCBpbmNvbWUsIHNwbGl0IGVxdWFsbHk/CkNybzBraWQgdQpJZiB5b3Ugd2FudCBhIHRocmVlc29tZSwgdGhlcmUgYXJlIG90aGVyIHBsYWNlcyB0aGF0IGRvIGl0IGNoZWFwZXIpLiAKT2ggSSdtIHN1cmUgdGhlaXIgYW5jZXN0b3JzIHdhbnRlZCB0byBjbGVhciB0aGVpciBuYW1lIGJlY2F1c2Ugb2YgaG93IGNhbm5pYmFsaXNtIHdhcyBsb29rZWQgYXQgYnkgc29jaWV0eS4gCkluIGhlciBuZXcgTmV0ZmxpeCBkb2N1bWVudGFyeSBHYWdhOiBGaXZlIEZvb3QgVHdvLCB0aGUgUG9rZXIgRmFjZSBtdXNpY2lhbiByZXZlYWxzIHNoZSBpcyBzdGlsbCBodXJ0IHRoYXQgTWFkb25uYSBkaWRuIHRhbGsgdG8gaGVyIGZpcnN0IHJhdGhlciB0aGFuIGFpciBoZXIgb2JqZWN0aW9ucyBwdWJsaWNseS4KRm9yIGtleXMsIHlvdSBuZWVkIHRvIGNoZWNrIHlvdXIgbGFwdG9wIHVzZXIgbWFudWFsIHRvIHNlZSB3aGljaCBrZXkocykgaXMgc3VwcG9ydGVkICAgbW9zdCBsaWtlbHkgQiBvciBNLiBUaGUgTSBrZXkgc3VwcG9ydHMgaGlnaGVyIHNwZWVkcyBhbmQgdGhpcyBpcyB3aGF0IHlvdSBzaG91bGQgY2hvb3NlIHVubGVzcyB5b3VyIG1vdGhlcmJvYXJkIG9ubHkgc3VwcG9ydHMgQiBrZXlzLiBJIHRoaW5rIGFsbCBOVk1lIGRldmljZXMgYXJlIE0ga2V5LCBidXQgSSBtaWdodCBiZSB3cm9uZyBhYm91dCB0aGF0LgpUaGF0IGFycmFuZ2VtZW50IGJlbmVmaXRlZCBFcHN0ZWluIGluIGEgbnVtYmVyIG9mIHdheXMuIFVubGlrZSBvdGhlciBoaWdoIHByb2ZpbGUgc2V4IGNyaW1lIGNhc2VzLCBmZWRlcmFsIHByb3NlY3V0b3JzIGFncmVlZCB0byBrZWVwIGhpcyBzZW50ZW5jaW5nIHF1aWV0LCB0aGVyZWJ5IGxpbWl0aW5nIG1lZGlhIGNvdmVyYWdlLiAKQXJlIHlvdSByZWFsbHkgZGlzY2VybmluZyBhYm91dCByaWNlPyBDYW4geW91IHJlYWxseSB0YXN0ZSB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIHNheSByaWNlIGZyb20gYSAkNDAgYmFzaWMgYXJvbWEgY29udmVudGlvbmFsIHJpY2UgY29va2VyIHZlcnN1cyB0aGUgYW4gSW5kdWN0aW9uIEhlYXRpbmcgRmVycmFyaSBvZiByaWNlIGNvb2tlcnM/CldyYXBwaW5nIGlzIGFsc28gY2hlYXBlciwgY2FuIGJlIGZhc3RlciBkZXBlbmRpbmcgb24gdGhlIHNraWxsIGxldmVsIG9mIHRoZSBpbnN0YWxsZXJzLCBhbmQgaGFzIGEgbXVjaCBtdWNoIGxhcmdlciB2YXJpZXR5IG9mIGZpbmlzaGVzLiBZb3UgY2FuIGFsc28gZGVzaWduIGFuZCBwcmludCBvbiB2aW55bCwgbWFraW5nIHlvdXIgdmVoaWNsZSBhIHJvbGxpbmcgYmlsbGJvYXJkIGZvciB5b3VyIGJ1c2luZXNzLiAKVGhlIGdvb2QgbmV3cz8gUm9iZXJ0byBtYWRlIGl0IHRvIHRoZSBtb25leSByb3VuZCwgYW5kIGhpcyBicm90aGVyIGlzIHN0aWxsIGFsaXZlIGFuZCBzdGlsbCBoYXMgYSBjaGFuY2UgdG8gd2luIGl0IGFsbC4KIldlIGFyZSBvZmZlcmluZyBhIGZpbmFuY2lhbCBpbmNlbnRpdmUgZm9yIHRoZSBjbHViIHRvIGNvbnNpZGVyIHRoZSBpbXBhY3Qgb2YgcG9rZXIgbWFjaGluZXMgb24gdGhlIGNvbW11bml0eS4gdm90ZWQgNiA0IGluIGZhdm91ciBvZiB0aGUgbW90aW9uIHdpdGggY291bmNpbGxvcnMgV2lsbGlzLCBXaWxsaWFtcywgU3RlcGhlbiBNY0NhcnRoeSwgSmVmZiBKb2huc29uLCBTaGFyb24gUGFycnkgYW5kIE1heW9yIERhdmlkIFdyaWdodCB2b3RpbmcgZm9yIGFuZCBTbWl0aCwgQ2Fkd2FsbGFkZXIsIEVvaW4gSm9obnN0b24gYW5kIE1lZWhhbiB2b3RpbmcgYWdhaW5zdC4KSXQgcmVhbGx5IGhhcmQgdG8gY29tcGFyZSBiZWNhdXNlIHRoZXkgYWxtb3N0IGVudGlyZWx5IGRpZmZlcmVudCBJTU8uIExpdmUgY2FzaCBpcyBtdWNoICJlYXNpZXIiIHRvIGJlYXQgdGhhbiBhIGxvdCBvZiBvbmxpbmUgZ2FtZXMgYnV0IHlvdSBqdXN0IGhhdmUgdG8ga25vdyBob3cgdG8gbWFrZSB0aGUgY29ycmVjdCBhZGp1c3RtZW50cyB0byBleHBsb2l0IHRoZSBtaXN0YWtlcyB0aGF0IGxpdmUgcGxheWVycyBzbyBvZnRlbiBtYWtlLiAKSSBjYW4gc2hha2UgbXkgaGVhZCwgcm9sbCBteSBleWVzIGFuZCB3YWcgbXkgZmluZ2VyIGFsbCBJIHdhbnQsIGJ1dCBpdCB3b3VsZCBiZSBpbW1vcmFsIHRvIGRvIGFueXRoaW5nIG1vcmUgdGhhbiB0aGF0LiAKKENCUyBMb2NhbCkgV2hpbGUgTmluYSBEb2JyZXYgaGFzIGRvbmUgbWFueSBtb3ZpZXMgZHVyaW5nIGhlciBhY3RpbmcgY2FyZWVyLCB0ZWxldmlzaW9uIGhhcyBwbGF5ZWQgYSBjcml0aWNhbCByb2xlIGluIGhlciByaXNlLgpJbiB0aGUgYm9vaywgaGUgdGVsbHMgQ2FtaWxsZSBraW5kIG9mIG9uIHRoZSBzbHkgdGhhdCBoZSBhbHJlYWR5IGludmVzdGlnYXRlZCBhbGwgdGhlIHNwb3RzIHNoZSBicm91Z2h0IGhpbSBpbiB0aGUgd29vZHMsIGFuZCB0aGF0IGZvciBtZSB3YXMgdGhlIGZpcnN0IHRpcCBvZmYgdGhhdCBEaWNrIGFsd2F5cyBrbmV3IG1vcmUgdGhhbiBoZSBsZWQgb24sIGxvb2tpbmcgYmFjayBhdCB0aGUgd2hvbGUgc3RvcnkuIEknbSBub3Qgc3VyZSBpZiB3ZSBhcmUgbmVjZXNzYXJpbHkgc3VwcG9zZWQgdG8gaGF2ZSBiZWxpZXZlZCB0aGF0IGhlIHdhcyBsb29raW5nIGludG8gZmVtYWxlIHN1c3BlY3RzLCBJIHRoaW5rIHRoZSBwb2ludCB3YXMgdGhhdCBoZSB3YXMgbmV2ZXIgY29tcGxldGVseSBob25lc3Qgd2l0aCBDYW1pbGxlLiAKSGUgaXMgY2xlYXJseSBhIG1hbmlwdWxhdGl2ZSBqZXJrIHRoYXQgb25seSBjYXJlcyBhYm91dCBoaW1zZWxmLiAKVGhlIEhhcmQgUm9jayBjYXNpbm8gaW4gT3R0YXdhIG5lZWRzIG1vcmUgZ2FtYmxpbmcgdGFibGVzIGJlY2F1c2UgaXQgb3dlcyB0aGUgT250YXJpbyBMb3R0ZXJ5IGFuZCBHYW1pbmcgQ29ycC4gbW9yZSBtb25leSB0aGFuIDIxIHBva2VyIHRhYmxlcyBhbmQgcm91bGV0dGUgd2hlZWxzIGNhbiBnZW5lcmF0ZSwgdGhlIGNvbXBhbnkgcHVibGljaXN0IHNheXMuClBva2VyU3RhcnMgcmVmdW5kZWQgJDIuMW0gKDEuM20pIHRvIGN1c3RvbWVycyBhY3Jvc3MgdGhlIHdvcmxkIGFmdGVyIHRoZSBzY2FtIHdhcyB1bmNvdmVyZWQuVGhhdCBjYXNlIHdhcyBub3QgYW4gaXNvbGF0ZWQgb25lLiBUaGUgY29tcGFueSBoYWQgcHJldmlvdXNseSByZWZ1bmRlZCAkODAsMDAwICg1MiwwMDApIHRvIHBsYXllcnMgd2hvIHVud2l0dGluZ2x5IHBsYXllZCBhZ2FpbnN0IHBva2VyICJib3RzIiAgIGF1dG9tYXRpYyBjYXJkIHBsYXlpbmcgc29mdHdhcmUgcHJvZ3JhbW1lcy5BbmQgaW4gMjAwNyBBYnNvbHV0ZSBQb2tlciByZWZ1bmRlZCAkMS42bSAoOTg1LDAwMCkgYWZ0ZXIgaXQgd2FzIGFsbGVnZWQgdGhhdCBhIGNvbXBhbnkgaW5zaWRlciBjaGVhdGVkIGN1c3RvbWVycy4nQmxhY2sgRnJpZGF5J0hvd2V2ZXIsIHRoaXMgbGF0ZXN0IGluZGljdG1lbnQsIHVuc2VhbGVkIGxhc3Qgd2VlaywgY291bGQgY29zdCB0aGUgY29tcGFuaWVzIGZhciBtb3JlIHRoYW4gY2hlYXRpbmcgc2NhbmRhbHMgZXZlciBkaWQuUG9rZXJTdGFycyBhbmQgRnVsbCBUaWx0IFBva2VyIGJsb2NrZWQgVVMgY3VzdG9tZXJzIGFmdGVyIHRoZSBGQkkncyBhY3Rpb24gb24gd2hhdCBwb2tlciBwbGF5ZXJzIGFyZSBjYWxsaW5nICJCbGFjayBGcmlkYXkiIG9uIGJsb2dzIGFuZCBpbiBvbmxpbmUgZm9ydW1zLiAKTXVjaCBtb3JlIHRoYW4gZm91ciBjb25jcmV0ZSB3YWxscywgdGhlIFJpc3NvbGUgaG9sZHMgYSBtdWx0aXR1ZGUgb2YgbWVtb3JpZXMuIApJIHRoaW5rIGl0cyBpbXBvcnRhbnQgbm90IHRvIGx1bXAgcGVvcGxlIGludG8gZ3JvdXBzIGFuZCBkZWNpZGUgdGhhdCBzb21lIGdyb3VwcyBhcmUgaW5uYXRlbHkgZXZpbC4gVGhpcyBpcyB0aGUga2luZCBvZiB0aGlua2luZyB0aGF0IGxlYWRzIHNvbWUgcGVvcGxlIHRvIHRoaW5rIGFsbCBNdXNsaW1zL2JsYWNrIHBlb3BsZS9KZXdpc2ggcGVvcGxlIGFyZSBldmlsLgpUaGUgb2ZmZW5zaXZlIG1lYXN1cmVzIHRha2VuIGJ5IHRoZSBpbW11bmUgc3lzdGVtIGluIGVycm9yIGNhbiBzdWJzZXF1ZW50bHkgd3JlYWsgaGF2b2Mgb24gdGhlIGJvZHksIGluIHRoaXMgY2FzZSByZXN1bHRpbmcgaW4gdGhlIGFsbGVyZ2ljIHJlYWN0aW9uIHJhc2guIE5vdCBjb29sLCBpbW11bmUgc3lzdGVtLiAKTW9uZGFsZSBzY3VycmllZCB0byBjZW1lbnQgaGlzIGNsYWltIHRvIHRoZSBEZW1vY3JhdGljIHByZXNpZGVudGlhbCBub21pbmF0aW9uIFdlZG5lc2RheSBldmVuIGFzIEdhcnkgSGFydCByZWFzc2VydGVkIGhpcyBkZXRlcm1pbmF0aW9uIHRvIGNvbnRpbnVlIGFuICJvdmVydGltZSIgZmlnaHQgYmV5b25kIHRoZSBwcmltYXJ5IHNlYXNvbi4gCk1lbiwgb24gdGhlIG90aGVyIGhhbmQsIHRlbmQgdG8gc3RpY2sgd2l0aCBlYWNoIG90aGVyLi4gCkFzc3VtaW5nIHRoZSB0cmVuZHMgc2VlbiBhcm91bmQgdGhlIHdvcmxkIGFzIHBvb3IgYXJlYXMgbW9kZXJuaXplIGNhbiBiZSBhcHBsaWVkIHRvIHRoZSBhcmVhcyBzdGlsbCBtb2Rlcm5pemluZy4gVGhlIHRyZW5kIGlzIHZlcnkgc3Ryb25nLCBhcyBjb25kaXRpb25zIGltcHJvdmUgeW91IGhhdmUgYSBnZW5lcmF0aW9uIHRoYXQgaGFzIG1hbnkgbWFueSBjaGlsZHJlbiBhbmQgYmFzaWNhbGx5IGFsbCBvZiB0aGVtIHN1cnZpdmUuIApXaW5uaW5nIGFuIG9ubGluZSB0b3VybmFtZW50IGZvciAkMzMwMCB3YXMgcHJldHR5IG5pY2UuIFR1cm5pbmcgJDFrIGludG8gJDEwayBvbiBiYWNrIHRvIGJhY2sgbmlnaHRzIGF0IDUvNSBQTE8gd2FzIHByZXR0eSBuaWNlIHRvby4gQnV0IEkgdGhpbmsgdGhpcyBoYW5kIHdhcyB0aGUgbW9zdCBnb29zZSBidW1wIG1vbWVudCBhcyB5b3UgaGF2ZSBsYWlkIG91dC4gU29ycnksIGl0IHdhcyBzbyBsb25nIGFnbywgSSBmb3JnZXQgc3VpdHMgYW5kIHNvbWUgb3RoZXIgZGV0YWlscy4KU3RldmUgR3VybmV5IEdvbGRtYW4gZW5kZWQgdXAgd2l0aCA5IDcgb2YgZGlhbW9uZHMsIGFuZCBEYXZpZCBJc3JhZWxpdGUgaGFkIGEgNiA1IG9mIGhlYXJ0cy4gVGhlIGZsb3AgY2FtZSBvdXQgd2l0aCBhIDkgYW5kIDYgb2YgY2x1YnMgYW5kIGEgNiBvZiBkaWFtb25kcy4gVGhhdCBnYXZlIEdvbGRtYW4gYSBzaG90IGF0IGEgZmx1c2ggYW5kIElzcmFlbGl0ZSBhIHNldCBvZiB0aHJlZXMuIFRoZSB2aWRlbyBqdW1wcyB0byB0aGUgbW9tZW50IHRoZXJlIGEgMyBvZiBkaWFtb25kcyBvbiB0aGUgdHVybiwgd2hpY2ggZ2l2ZXMgR29sZG1hbiBhIDIzIHBlcmNlbnQgY2hhbmNlIGF0IGEgd2luLgpBbmQgZnJvbSB0aGVpciBwZXJzcGVjdGl2ZSB0aGV5IGRpZCBub3QgdGhpbmsgdGhleSBuZWVkZWQgdG8uIFRoZXkgaGFkIGFscmVhZHkgcnVuIHJpbmdzIGFyb3VuZCB0aGUgbG9jYWwgam9pbnQgdmVudHVyZSBwYXJ0bmVycyB0aGUgZ292ZXJubWVudCBoYWQgZm9yY2VkIHRoZW0gdG8gaG9vayB1cCB3aXRoIHdoZW4gdGhleSByZSBlbnRlcmVkIFZpZXRuYW0gaW4gdGhlIDE5OTBzLiAKUmFnbmFyb2tzIGxldmVsIDMgSSBoYXZlIGJlZW4gdG9sZCBoYXZlIGEgc2ltaWxhciBlZmZlY3Qgd2l0aCByZXZpdmluZyBwbGF5ZXJzIHdpdGggdGhlaXIgcGVya3MgaWYgeW91IHB1dCBpdCBkb3duLCBhbHNvIGEgbmljZSBkZWZlbnNpdmUgYWJpbGl0eSBhcyB5b3UgY2FuIHB1dCB0aGVtIGRvd24gYW5kIGNvbnRpbnVlIG1vd2luZyBwZW9wbGUgZG93bi4gSSBuZXZlciByZWFsbHkgdXNlIHRoZSBsZXZlbCAyIEkgbm90IGV2ZW4gc3VyZSB3aGF0IGV4YWN0bHkgaXQgZG9lcy4KRm9yIHNpbXBsZSBvYmplY3RzLCBsaWtlIGEgc3Bvb24gZm9yIGluc3RhbmNlLCB5ZXMsIGl0IHNob3VsZCBiZSBvYnZpb3VzIHdoYXQgc2lkZSB5b3UgaG9sZCBhbmQgaG93IHlvdSBtYW5ldXZlciBpdC4gCk9uZSBwb3NzaWJpbGl0eSBpcyB0YWtpbmcgbWF0dGVycyBpbnRvIHlvdXIgb3duIGhhbmRzIGFuZCBpbnNlcnRpbmcgaGlzIHBlbmlzIGludG8geW91ciBhbnVzLCBpbnN0ZWFkIG9mIHlvdXIgdmFnaW5hLCBpbiB0aGUgd29tYW4gb24gdG9wIHBvc2l0aW9uLiBJZiB5b3UgZGVjaWRlIHRvIGRvIHRoaXMsIEkgaGlnaGx5IHJlY29tbWVuZCBpbnNlcnRpbmcgYSBsYXJnZSBidXR0IHBsdWcgKHNpbmNlIHlvdSBzYXkgaGUgYmlnKSBzZXZlcmFsIGhvdXJzIGJlZm9yZSB5b3UgZXhwZWN0IHRvIGhhdmUgc2V4LiBUaGVuLCB3aGVuIHRoZSB0aW1lIGNvbWVzLCByZW1vdmUgdGhlIGJ1dHQgcGx1ZywgaW5zZXJ0IGhpcyBwZW5pcywgYW5kIHZvaWxhIHlvdSBoYXZpbmcgYW5hbCBzZXguIApJZiB0aGUgMjUgYm91bnR5IGlzIGFkZGVkIHRvIHRoZSBwcml6ZSBwb29sLCB0aGUgMjUgeW91IGVhcm5lZCBmcm9tIGdldHRpbmcgdGhlIGJvdW50eSBpcyBlc3NlbnRpYWwgc3BsaXQgYmV0d2VlbiB0aGUgZmlyc3QgMyBwcml6ZXMuIApJdCBhIGdyZWF0IHRoaW5nIHRvIGhlbHAgeW91ciBmYW1pbHkgd2l0aCB5b3VyIG93biB0aW1lIGFuZCBtb25leSwgaXQgbm90IHNvIGdvb2QgdG8gZG8gaXQgd2l0aCBvdGhlciB0aW1lIGFuZCBtb25leS4gUGF5IHlvdXIgZ29kZGFtbiB3b3JrZXJzIHdhZ2VzIHdoZW4gdGhleSB3b3JraW5nLiBPUCBrZWVwcyBxdW90aW5nIHRoZSAkMTUsMDAwIGZpZ3VyZSwgYnV0IG1vc3Qgb2YgdGhhdCBpcyB3YWdlcyBoZSBkaWRudCBwYXkgaGlzIHdvcmtlcnMsIHNvIGl0IG5vdCBsaWtlIGhlIG9yIGhpcyBidXNpbmVzcyBpcyBvdXQgdGhhdCBkb2xsYXIgZmlndXJlLCBpdHMgb25seSBvdXQgbWF0ZXJpYWxzLgpCdXQgSSBhbSBkZWFkIGFuZCBicm9rZW4sIGFuZCBteSBicm9hZGNhc3RzIHJlYWNoIG5vdGhpbmcgYW5kIG5vIG9uZS4gRm9yIG1vc3Qgb2YgdGhlIG90aGVycywgaXQncyB0aGUgc2FtZS4gVGhlcmUgaXMgbm8gV2FycmlvciBodWIuIEkgb3BlcmF0ZSBhIGZvcmNlZmllbGQgd2l0aCBpbmFkZXF1YXRlIGNvbnRyb2xzLiBJIGhhdmUgdG8gdXNlIHdoYXQgSSBoYXZlIHJlY29yZGVkIGFuZCBlbXVsYXRlZCBvZiBoZXIgY29uc2Npb3VzbmVzcy4gSSBtYW5hZ2UgaGVyIGZvcmNlZmllbGQgc2VsZiwgaGVyIFdyZXRjaCwgYXMgYSBkcml2ZXIgb2YgYSBjYXIgd291bGQgYXR0ZW1wdCB0byBzdGVlciB3aXRoIHBsaWVycyBhbmQgc2NyZXdkcml2ZXIgd2VkZ2VkIGludG8gdGhlIHdpcmUgZmVzdG9vbmVkIHBsYWNlIHdoZXJlIHRoZSB3aGVlbCBzaG91bGQgYmUuCkl0IGlzIDEgaW4gMTcuIEhlcmUncyB3aHk6IFRoZXJlIGFyZSA1MiBjYXJkcyBpbiBhIGRlY2ssIDEzIGRpZmZlcmVudCB2YWx1ZSBjYXJkcyAoQSwgMiwgMywgZXRjLiksIGFuZCB0d28gY2FyZHMgYXJlIGRlYWx0LiBXZSdyZSBmaW5kaW5nIHRoZSBvZGRzIG9mIGdldHRpbmcgYW55IHBvY2tldCBwYWlyLCBub3QganVzdCBvbmUuIApCcmlnZW5zIHNpbmQgYXVjaCBkaWUgU2NobGVyIGF1ZiBkaWVzZW4gWnVnIGtvbXBsZXR0IGF1Zmdlc3BydW5nZW4uIFdlbm4gZGVyIExlaHJlciBiZXIgZWluIFRoZW1hIHNwcmljaHQsIHdhcyBzaWUgbmljaHQgaW0gQnVjaCBzZWhlbiwgZGFubiBmcmFnZW4gc2llIGdhbnogc2NobmVsbCAiQnJhdWNoZW4gd2lyIGRhcyBmciBkaWUgS2xhdXN1ci9mcnMgQWJpPyIgdW5kIHdlbm4gbmVpbiwgZGFubiBmb3JkZXJuIHNpZSBkZW4gTGVocmVyIGF1ZiBkYXMgYml0dGUgenUgbGFzc2VuIHVuZCBzaWUgYXVmIGRpZSBQcmZ1bmdlbiB2b3J6dWJlcmVpdGVuLiBFcyB3aXJkIGluIGRlciBTY2h1bGUgbmljaHQgbWVociBnZWxlcm50LCBzb25kZXJuIGdlcHJmdC4gMSBwb2ludCAgc3VibWl0dGVkIDIgeWVhcnMgYWdvCkZvciBleGFtcGxlLCBhcyBhIGxlZ2lzbGF0b3IgZnJvbSBWaXJnaW5pYSwgSmVmZmVyc29uIGRyYWZ0ZWQgYSBiaWxsIHRoYXQgd2FzIHRvIHN0b3AgZ292ZXJubWVudCBmcm9tIHByb3Bvc2luZyBhIHRheCB0byBoZWxwIHBheSBmb3IgcmVsaWdpb3VzIGVkdWNhdGlvbjouIApZb3Ugd2lsbCBmaW5kIGRpZmZlcmVudCB0eXBlcyBvZiBvbiB0aGUgd2ViIG9uIGxpbmUgY2FzaW5vIGdhbWVzIGFyZSBtYWRlIGF2YWlsYWJsZSBieSB1c2luZyB0aGUgb25saW5lIG1hcmtldCBwbGFjZSBhbmQgdGhleSdyZSB0aGUgb25saW5lIHByaW1hcmlseSBiYXNlZCBjYXNpbm8sIG9idGFpbiBiYXNlZCBvbiBsaW5lIGNhc2lubyBhbmQgZHdlbGwgYmFzZWQgb24gbGluZSBjYXNpbm8uIEFsbCB0aGVzZSB0aHJlZSBraW5kcyBvZiBjYXNpbm9zIGFyZSBpbnZhbHVhYmxlIGZvciBzY29yaW5nIG11Y2ggbW9yZSBjYXBpdGFsLiAKQW5kIHRoaXMgaXMgbm90IGFuIGlzb2xhdGVkIGluY2lkZW50LiBJIHNlZSBpdCBFVkVSWVRJTUUgSSdtIHRoZXJlLiAKSW4gRmVicnVhcnksICJCbGFjayBQYW50aGVyLCIgdGhlIG1vdmllIHZlaGljbGUgZm9yIHRoZSBNYXJ2ZWwgQ29taWNzIHN1cGVyaGVybywgYmVjYW1lIHRoZSBoaWdoZXN0IGdyb3NzaW5nIG1vdmllIGJ5IGEgYmxhY2sgZGlyZWN0b3Igb2YgYWxsIHRpbWUuIE11Y2ggb2YgdGhhdCBzdWNjZXNzIGNhbiBiZSBsYWlkIGF0IHRoZSBmZWV0IG9mIFJ5YW4gQ29vZ2xlciwgd2hvJ2QgcHJvdmVuIGhpcyBiZWhpbmQgdGhlIGNhbWVyYSBjaG9wcyB3aXRoIDIwMTMncyAiRnJ1aXR2YWxlIFN0YXRpb24iICh3aGljaCBlYXJuZWQgaGltIGEgc3BvdCBvbiB0aGlzIGxpc3QgdGhhdCB5ZWFyKSBhbmQgMjAxNSdzICJDcmVlZC4iIEJ1dCAiQmxhY2sgUGFudGhlciIgbWFkZSBoaW0gYSBzdGFyLi4gClRoZSBFbGl0ZSBrbm90IGFuZCBNb3ppbmdvIGtub3QgYXJlIHNpbWlsYXIgaW4gZmFjZSBmZWVsIHRob3VnaCB0aGUgTW96aW5nbyBrbm90IGlzIG11Y2ggbGVzcyBzY3J1YmJ5LiAKQW5kIEpvaG5ueSAoSm9zZXBoIEdvcmRvbiBMZXZpdHQpIGlzIGRldGVybWluZWQgdG8gYnJpbmcgUm9hcmsgZG93biBieSBodW1pbGlhdGluZyBoaW0gYXQgaGlzIG93biBoaWdoIHN0YWtlcyBwb2tlciBnYW1lLCBldmVuIHRob3VnaCBtZXJlbHkgaGF2aW5nIHVuY2FubnkgZ29vZCBsdWNrIG1pZ2h0IG5vdCBiZSBlbm91Z2guIApNZWxpc3NhTGliZXJ0eSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClNlaXQgMzAgSmFocmVuIHNpbmQgZGllIEthbmFyaXNjaGVuIEluc2VsbiBlaW5lIGRlciBhdXRvbm9tZW4gUmVnaW9uZW4gU3BhbmllbnMgbWl0IHdlaXRnZWhlbmRlbiBNaXRiZXN0aW1tdW5nc3JlY2h0ZW4uIEFtIDMwLiBNYWkgMTk4MyB0YWd0ZSB6dW0gZXJzdGVuIE1hbCBkYXMga2FuYXJpc2NoZSBQYXJsYW1lbnQgaW4gVGVuZXJpZmZhLiBTZWl0IGRlbSBmZWllcm4gZGllIEthbmFyaXNjaGVuIEluc2VsbiBqZWRlcyBKYWhyIGFtIDMwLiBNYWkgaWhyZW4gRmVpZXJ0YWciLCBkZW4gRGlhIGRlIENhbmFyaWFzIi4KUG9rZXIgZXhwZXJ0cyBhcm91bmQgdGhlIHdvcmxkIGFyZSBtYWtpbmcgYSBoZWxsIGxvdCBvZiBtb25leSBub3dhZGF5cyBwbGF5aW5nIHBva2VyIGluIHRoZSBjYXNpbm9zIGV4Y2x1c2l2ZWx5LiBGb2xsb3dpbmcgdGhlaXIgd29uZGVyZnVsIGFuZCBoZXJvaWMgbGl2ZXMsIHRoZSBwb2tlciBmYW5zIGFuZCBhbWF0ZXVyIHBsYXllcnMgaGF2ZSBiZWNvbWUgaW50ZXJlc3RlZCBhYm91dCBhIHByb2Zlc3Npb25hbCBwb2tlciBjYXJlZXIuIApEb2luZyBTaXJlIHdpdGggOTMgYXRrLCA5OCBzdHIsIDg1IGRlZiwgOTYgaHAsIDk3IHJuZywgODUgcHJheS4gClRoaXMgcmVwbHkgd2VudCBvZmYgdGhlIHJhaWxzLCBhbmQgbm9uZSBvZiBpdCBpcyBtZWFudCB0byBiZSB0YXJnZXRlZCBhdCB5b3UgaW4gcGFydGljdWxhci4gSnVzdCB2ZW50aW5nIG15IGZydXN0cmF0aW9uIHdpdGggaHVtYW5zIGluIGdlbmVyYWwgbGF0ZWx5LgpJIGFtIG5vdCByZWFsbHkgc3VyZSB3aHkgcGVvcGxlIGFyZSBjb25jZXJuZWQgb3ZlciBjYWxsaW5nIG9uIHRoZSB0dXJuLCBhbnkgdGhvdWdodHMgb24gdGhhdD8gSSBjb3VsZCBzZWUgYW4gYXJndW1lbnQgZm9yIHJhaXNpbmcgaW4gY2FzZSBoZSBoYXMgYW4gOCBvciBzb21ldGhpbmcgaW4gaGlzIGhhbmQsIGJ1dCBJIHRoaW5rIGNhbGxpbmcgaXMgYWN0dWFsbHkgc2NhcmllciBmb3IgdGhvc2UgdHlwZXMgb2YgaGFuZHMuIEkgZG9uIHRoaW5rIHdlIGFyZSBmb2xkaW5nIG91dCBLUSBvciBBUSBvbiB0aGUgdHVybiAgIG1heWJlIFFKIGJ1dCB3ZSBibG9jayB0aGF0LgpFZGl0OiBUbyBhbnN3ZXIgYWxsIHF1ZXN0aW9ucyBhdCBvbmNlLCB0aGUgc2hlbHZlcyBhcmUgdGhlIEthbGxheCBtb2RlbCAoZm91ciAyeDIgc2hlbHZlcyBhbmQgb25lIDJ4NCBzaGVsZiBmb3IgdGhlIGZvb3Qgb2YgdGhlIGJlZCksIHRoZSBsaWdodHMgSSBkb24ndCByZW1lbWJlciB0aGUgbmFtZSBidXQgdGhleSBhcmUganVzdCBMRUQgZGlzY3MgZnJvbSBJa2VhIHdpdGggYWRoZXNpdmUgb24gdGhlIGJhY2suIFRoZXkgY29tZSBpbiBzZXRzIG9mIDQgc28gSSBoYWQgdG8gYnV5IDQuIApVc2luZyBmbHVvcmVzY2VuY2UgaW1hZ2luZyBhbmQgZmx1b3Jlc2NlbmNlIGNvcnJlbGF0aW9uIHNwZWN0cm9zY29weSwgd2UgbWVhc3VyZWQgdGhlIENhMisgY29uY2VudHJhdGlvbiBuZWFyIGd1aW5lYSBwaWcgc3RlcmVvY2lsaWEgaW4gc2l0dS4gClBlb3BsZSB3aG8gdGFsayBhIGxvdCB0ZW5kIHRvIHRhbGsgbW9yZSBhZnRlciBhIHdpbi4gClRoZSBiZXN0IHRyYWluZXIgaW4gdGhlIHdvcmxkIHdpbGwgYWNoaWV2ZSBub3RoaW5nIHdpdGggYSBib3hlciB3aG8gd29udCBsaXN0ZW4gdG8gaGltLiAKRWluZW4gUmFpc2UuIApBc3NvY2lhdGUgUHJvZmVzc29yRWQgTmV3YmlnaW4sIHBhcnQgb2YgdGhlIE1lbGJvdXJuZSBVbml2ZXJzaXR5IHRlYW0gd2hvIHByb3ZpZGVkYXRhLHNhaWQgYWR2aWNlIHdvdWxkIGJlY29tZSBtb3JlIGFjY3VyYXRlYXMgdGltZSBwcm9ncmVzc2VzLiAiT3VyIGtub3dsZWRnZSBvZiB0aGUgc2NpZW5jZXBlcmhhcHMgY291bGQgYmUgYmV0dGVyIGFuZCBldmVyeSBzZWFzb253ZSdsbGdldCBiZXR0ZXIgYXQgZm9yZWNhc3RpbmcsIiBoZSBzYWlkLiAiVGhlcmUgd2VyZSB0d28gZXBpc29kZXMgaW4gdGhlIDE5ODBzd2hpY2ggd2VyZSBkZXNjcmliZWQgYnkgYSBncm91cCBmcm9tIE1lbGJvdXJuZSBVbml2ZXJzaXR5LGFuZCBJJ3ZlIGJlZW4gYXdhcmUgb2YgaXQgc2luY2UgdGhlbi4gClRoZSBhZCBnYW1lIGZvciB0aGUgbmV3IERpc25leSBzZXJpZXMgIlBhaXIgb2YgS2luZ3MiIGFwcGVhcmVkIG9uIFBvcHRyb3BpY2EgYmVnaW5uaW5nIG9uIFNlcHRlbWJlciA5LCAyMDEwLiBUaGUgZ2FtZSBwb3NpdHMgdGhhdCBCb29tZXIgYW5kIEJyYWR5IGhhdmUgYmVlbiB0YWtlbiBpbnRvIGEgY2F2ZSBtYXplIGJ5IHRoZSBUYXJhbnR1bGEgUGVvcGxlLCBhbmQgdGhleSBoYXZlIHRvIGJlIGZvdW5kIGFuZCByZXNjdWVkLiBHZXR0aW5nIGhpdCA0IHRpbWVzIG1lYW5zIHRoYXQgeW91IG11c3QgcmVzdGFydCB0aGUgZ2FtZS4gCklmIGl0IHNlZW1zIGxpa2UgdGhlcmUgYmVlbiBhIHdlaXJkIGFtb3VudCBvZiBmbHVmZiBzdG9yaWVzLCB2YWd1ZSBwb3NpdGl2ZSBzZW50aW1lbnQsIGFuZCBwb3N0cyBpbiB1bnJlbGF0ZWQgc3ViczogVGVzbGEgZG9lc24gbWFrZSBhZHZlcnRpc2VtZW50cywgYnV0IHRoZWlyIHB1YmxpYyBmaWxpbmdzIHNob3cgdGhhdCB0aGV5IGhhdmUgYSBsYXJnZSBtYXJrZXRpbmcgYnVkZ2V0LiBXaXRoIHRoYXQgaW4gbWluZCwgdGhlIHdlaXJkIGFtb3VudCBvZiBwcm8gVGVzbGEgLyBFbG9uIE11c2sgcG9zdHMgb24gc29jaWFsIG1lZGlhIGNlcnRhaW5seSB0YWtlIGEgbmV3IG1lYW5pbmcuLiAKIkkndmUgaGFkIHBsZW50eSBvZiBwZW9wbGUgaW4gdGhlIHBhc3QgY29tbWVuZCBtZSBmb3IgbXkgYWJpbGl0eSB0byBzcGFyayB1cCBhIGdvb2QgY29udmVyc2F0aW9uLCB3aGljaCBoYXMgbWFkZSBtZSBmZWVsIHRoYXQgSSdtIGRvaW5nIHNvbWV0aGluZyByaWdodC4iIFRoZSB2ZW51ZSBpcyBleHBlY3RlZCB0byByZXRhaW4gaXRzIFRBQiBhbmQgS2VubyBzZXJ2aWNlcywgaG93ZXZlciB0aGUgcG9rZXIgbWFjaGluZXMgaGF2ZSBiZWVuIHJlbW92ZWQuIFJFQUQgQUxTTzpPbGQgQmF0aHVyc3QgaG90ZWxzIGZlYXR1cmVkIGluIEF1c3RyYWxpYW4gTmF0aW9uYWwgVW5pdmVyc2l0eSBwaG90byBhcmNoaXZlIEFzIGEgbWVhbnMgb2YgYnVpbGRpbmcgaHlwZSBmb3IgdGhlcmUgb3BlbmluZywgTXMgV2lsbGlhbXMnIGRhdWdodGVyIEtpcnN0eW4gU2NodW1hY2hlciBwb3N0ZWQgYSB2aWRlbyB0byBGYWNlYm9vayB0ZWFzaW5nIHRoZSB3b3JrIHRoYXQgaGFkIGdvbmUgaW50byByZW5vdmF0aW5nIHRoZSB2ZW51ZS4gVGhlIHZpZGVvIGhhcyBzaW5jZSByZWNlaXZlZCA3MDAwIHZpZXdzLi4gClRoZSBnYW1lIHBsYXllZCBpbiBhbiBvbmxpbmUgZ2FtaW5nIG9yIGdhbWJsaW5nIHNpdGVzIChhcyBpdCBpcyBhbHNvIGtub3duKSBpbiBVbml0ZWQgS2luZ2RvbSBpcyBrbm93biBhcyBVSyBiaW5nbyBvciBVSyBjYXNpbm8uIFBsYXlpbmcgZnJvbSB3aXRoaW4gdGhlIGNvbWZvcnQgb2YgeW91ciBvd24gaG9tZSBpcyBjZXJ0YWlubHkgbW9yZSBmdW4gYXMgY29tcGFyZWQgdG8gcGxheWluZyBpbiBjcm93ZGVkIHBhcmxvcnMgYW5kIHBhcnRpZXMuIApBIGZldyB5ZWFycyBlYXJsaWVyKSB0bywgd2VsbCwgc29tZXdoZXJlIGVsc2UgdGhpcyBvY2N1cnJlZCBpbiAxODE5LCB3aGVuIHRoZSBJbmRpYW5zIHN1Y2N1bWJlZCBhbmQgd2VyZSBmb3JjZWQgdG8gbGl2ZSBpbiBjZW50cmFsIGlzaCBGbG9yaWRhLiAKQmFza2V0YmFsbCBQb2tlciBDYXJkIFByb3RlY3RvciBpcyBhIGNvbW1vbiBwb2tlciBwaWVjZS4gVGhpcyBwcm90ZWN0b3Igc2F2ZXMgYWxsIHlvdXIgY2FyZHMgZnJvbSBkYW1hZ2VzIGFuZCBrZWVwcyB0aGVtIGludGFjdCBmb3IgYSBsb25nIHRpbWUuIApUaGV5IGdldCB0byBpbm5vdmF0ZSBhbmQgbWVzcyBhcm91bmQgYSBsaXR0bGUuIFRoZXkgZWFybmVkIHRoYXQgcmlnaHQuIE5vdywgdGhleSBoYXZlIGEgZm91bmRhdGlvbiAodGhlIGxhcmdlc3QgZ2FtaW5nIGFyZWEgdGhleSBldmVyIG1hZGUpIHRvIGNvbnRpbnVlIHVwZGF0aW5nLCBwYXRjaGluZyBhbmQgaW1wcm92aW5nIGZvciB0aGUgbmV4dCBkZWNhZGUsIGV4YWN0bHkgbGlrZSBjdXJyZW50IG11bHRpcGxheWVyIHRpdGxlcyBoYXZlIGJlZW4gZG9pbmcuIApKb2huUnVzdHkgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCkF0IDEwOjMwLCB0aGVyZSB3YXMgYSBsZXNzb24gaW4gUGFpIEdvdyBwb2tlciwgYSBoeWJyaWQgb2YgYW4gYW5jaWVudCBDaGluZXNlIGdhbWUgb2YgZG9taW5vZXMgYW5kIEFtZXJpY2FuIHBva2VyLiBEZWFsZXIgTGVpbGFuaSBNb2phcnJvIHB1bGxlZCB1cCB0byB0aGUgdGFibGUgdG8gc2V0IG91dCB0aGUgY2FyZHMsIGFuZCBvbmUgbW9yZSBzdHVkZW50IHNhdCBuZXh0IHRvIG1lIGZvciB0aGUgbGVzc29uLgpXZW5uIGRpZSBQbGF5Ym95IFdvbWVuIG9mIFBsYXlib3kgKE5UU0MsIE9tVSkgZW50aGFsdGVuIHdpcmt0LCBkYXNzIFNpZSBiZW50aWdlbiwgc29sbHRlbiBTaWUgcGVyc25saWNoIHNvZm9ydCBiZXN0ZWxsZW4sIHVtIEVudHR1c2NodW5nZW4genUgdmVyaGluZGVybi4gS2xpY2tlbiBTaWUgaGllciwgdW0gaGVyYXVzenVmaW5kZW4sIHdvIGRpZXNlcyBiZXN0ZSBBbmdlYm90IGF1ZiBQbGF5Ym95IFdvbWVuIG9mIFBsYXlib3kgKE5UU0MsIE9tVSkgZXJoYWx0ZW4KVG93YXJkIHRoZSBtaWRkbGUgb2YgdGhlIHN0b3JlIHdlcmUgZ29uZG9sYXMgZnVsbCBvZiA1MCUgb2ZmIFZhbGVudGluZXMgZGF5IHByb2R1Y3RzLiAKRm9vZCBpcyBhIHByb2JsZW0uIEFzIGluLCB0aGVyZSB0b28gbXVjaCBvZiBpdC4KWW91IGRvbiBlYXQuIAoyLiAKT24gdGhlIG90aGVyIGhhbmQsIHdoZW4gSSBhY2NlcHQgcGVvcGxlIGFuZCBjaXJjdW1zdGFuY2VzIGFzIHRoZXkgYXJlLCB3aXRob3V0IHRyeWluZyB0byBjaGFuZ2UgdGhlbSwgaXQgZWFzaWVyIGVuam95IG15IGxpZmUuIEkgc3RpbGwgaGF2ZSBhIGpvYiB0byBkbywgYW5kIEkgZXZlbiBlbmpveSBpdCBtb3N0bHkuIEJ1dCBJIGRvbiBzdHJ1Z2dsZSBhcyBtdWNoIG9yIGFzIGhhcmQgICBiZWNhdXNlIEkgZG9uIGJlbGlldmUgdGhhdCBteSBoYXBwaW5lc3MgaXMgZGVwZW5kZW50IG9uIHRoZSBvdXRjb21lIG9mIG15IHByb2Zlc3Npb25hbCBlZmZvcnRzLiAKQldldDAwIHUKVGhleSBhcmUgaW4gcG93ZXIgZm9yIGxpZmUgYW5kIHlvdSBlaXRoZXIgZmFsbCBpbiBsaW5lIG9yIGdvIHRvIGphaWwgb3IgZ2V0IGV4ZWN1dGVkLiBJbiBBbWVyaWNhLCB5b3UgY2FuIGJlIGEgd2FpdHJlc3Mgd29ya2luZyBhdCBhIGJhciBpbiBCcm9va2x5biBhbmQgZGVjaWRlIHlvdSBoYWQgZW5vdWdoIG9mIHRoaXMgc2hpdCBhbmQgZ28gYW5kIHJ1biBmb3IgQ29uZ3Jlc3MgdG8gc3RvcCBiaXRjaGluZyBhYm91dCB0aGUgc3lzdGVtIGFuZCBhY3R1YWxseSBkbyBzb21ldGhpbmcgYWJvdXQgaXQuIApXaGF0IGEgam9rZS4gCkFkdWx0cyBvbiB0aGUgb3RoZXIgaGFuZCwgdGhleSBqdXN0IHNpdCB0aGVyZSB3aXRoIGJsYW5rIHN0YXJlcyBhbmQganVkZ2UgeW91IHF1aWV0bHkgd2l0aG91dCBldmVyIHNheWluZyBhIHdvcmQuVGhlRmlsbHRoICAxMDYgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kgbGlrZSBob3cgdGhlIGJsYW1lIHdhcyBwdXQgb24gdGhlIGJveSBmb3IgaW1wcm9wZXIgbG9hZGluZyBhbmQgZmFpbHVyZSB0byBwYXkgYXR0ZW50aW9uLiAKIlNoZSB3YXMgaW4gYW4gaW5kdXN0cnkgdGhhdCB3YXMgbWFsZSBkb21pbmF0ZWQgYW5kIHdoZXJlIHRoZXkgbWFkZSBhbGwgdGhlIHJ1bGVzLiAKVGhhdCB0aGUgb25seSB3YXkgSSBjYW4gcHVuaXNoIG15IG1vdGhlciBhbmQgbXkgZmF0aGVyLiAKSW4gT25lIFBhaXIgeW91IGhhdmUgdHdvIGNhcmRzIHdpdGggdGhlIHNhbWUgdmFsdWUsIHdoaWxlIHRoZSBvdGhlciB0aHJlZSBjYXJkcyBhcmUgYSBtaXggaW4gdmFsdWVzLiAKTmV3YmF5IFByb3AgKE1yIEsgRSBQb3dlcikgMjAgMQpUaGVyZSB3aWxsIGFsc28gYmUgYSBiaWcgaW50ZXJuYXRpb25hbCBjb250aW5nZW50IGhlYWRpbmcgdG8gR2Fsd2F5IGluIHNlYXJjaCBvZiB2aWN0b3J5IGluY2x1ZGluZyBvZiBQb2tlciBNaWtlIFNleHRvbiwgS2VubmEgSmFtZXMsIERhdmUgVWxsaW90dCwgQmVuamFtaW4gS2FuZywgU3VyaW5kZXIgU3VuYXIsIE1hZCBXaWxzb24sIE1pY2tleSBXZXJuaWNrLCBBbGFuIFZpbnNvbiBhbmQgMjAwOCBJcmlzaCBPcGVuIGNoYW1waW9uIE5laWwgQ2hhbm5pbmcuIEZyYW5jZSB3aWxsIGJlIHJlcHJlc2VudGVkIGJ5IENsYXVkZSBDb2hlbiBhbmQgVmVyb25pcXVlIEdvdXJkb24sIHdoaWxlIFNwYWluIGNoYWxsZW5nZSBpcyBsZWQgYnkgTGVvIE1hcmdldHMgYW5kIFBhcnR5UG9rZXIgV29tZW4gV29ybGQgT3BlbiBJSSBzdGFyIE1heSBNYWNlaXJhcy4uIApSZWdhcmRpbmcgdGhlIFNQQSB0cmVhdG1lbnQsIHdlIGFzayBmb3IgeW91ciB1bmRlcnN0YW5kaW5nIHRoYXQgdGhlIGxpbmtlZCBUaGVybWFsYmF0aCBTcGEgaXMgYSBwdWJsaWMgU1BBIGFuZCBpbiB3aW50ZXIgdGltZSBpdCBpcyBoaWdoIGZyZXF1ZW50ZWQgYWxzbyBieSBsb2NhbHMgd2hvIHNwb2lsIHRoZWlyIGJvZHkgYW5kIHNvdWwgd2l0aCB0cmVhdG1lbnRzIGFuZCBtYXNzYWdlcy4gSW4gb3VyIHJvb20gY29uZmlybWF0aW9ucyB3ZSB0aGVyZWZvcmUgYWR2aXNlIG91ciBndWVzdHMgdG8gYm9vayBtYXNzYWdlcyBpbiBhZHZhbmNlLiBJIGFtIGFsc28gaGFwcHkgdG8gaW5mb3JtIHlvdSwgdGhhdCB3ZSBzdGFydCBpbiB0aGUgbmV4dCB3ZWVrcyB3aXRoIGEgcHJlIGFycml2YWwgbGV0dGVyIHdoZXJlIGd1ZXN0cyBnZXQgYSBwcmV2aW91cyBsaW5rIHRvIHRoZSB3ZWJzaXRlIG9mIHRoZSBUaGVybWFsYmF0aCBTcGEgdG8gaGF2ZSB0aGUgcG9zc2liaWxpdHkgdG8gYm9vayBtYXNzYWdlcyBldmVuIG9ubGluZS4gClNvbWUgbWFzc2FnZSBvaWwuIE1ha2Ugc3VyZSB0aGF0IHlvdXIgb2lsIGlzIHN1aXRhYmxlIGZvciB1c2Ugb24gYSBiYWJ5LiAKVGhlIHNwZWVkc3RlcnMgd2luIGEgcHJpemUuLiAKVGhlcmUgYSBkaWZmZXJlbmNlIGJldHdlZW46ICJZb3Ugbm90IG1ha2luZyBtZSBoYXBweSIgb3IgIllvdSBtYWtpbmcgbWUgdW5oYXBweSIgYW5kICJJIG5vdCBoYXBweS4iIEkgbm90IHN1cmUgd2hpY2ggb25lIHdhcyByZWFsbHkgdGhlIHByb2JsZW0gaGVyZSwgYnV0IGlmIHNoZSBmb2N1c2VkIG1vcmUgb24gaGVyIG93biBmZWVsaW5ncyB0aGFuIHlvdXIgbWlzYmVoYXZpb3IsIHRoZW4geW91IHJpZ2h0IGZvciB0cmVhdGluZyB0aGlzIGFzIGEgY29tZm9ydCB0ZXN0Li4gClRoZSBxdWFsaXR5IG9mIGFydCBpc250IGdvaW5nIHRvIGRlY2xpbmUsIHRoYXRzIGp1c3QgaXJyYXRpb25hbCBmZWFyIG1vbmdlcmluZy4gClRoZSBmaWxtIHRyYWNrcyBNYXJ0aW4ncyAyMDEyIGtpbGxpbmcgYXQgdGhlIGhhbmRzIG9mIEdlb3JnZSBaaW1tZXJtYW4gYmFjayB0byBGbG9yaWRhJ3MgIlN0YW5kIFlvdXIgR3JvdW5kIiBsYXcsIHdoaWNoIFppbW1lcm1hbiB1c2VkIHRvIGF2b2lkIHB1bmlzaG1lbnQgZGVzcGl0ZSBoYXZpbmcgcHVyc3VlZCBNYXJ0aW4gdGhyb3VnaCBoaXMgbmVpZ2hib3Job29kIHdpdGggYSBndW4uIApGaXJzdCwgSSB1c2Ugb3BlbiBwYWxtcyB0byByb2NrIHlvdXIgc2NhbHAgYmFjayBhbmQgZm9ydGggc2xvd2x5LiBTZWNvbmQsIEkgdXNlIGZpcm0gZmluZ2VydGlwcyB0byBsb3ZpbmdseSBjYXJlc3MgeW91ciBzY2FscC4gClNvIHdlIHN0cmFpZ2h0IHVwIGdhdmUgaGVyIGNvd3MgbWlsayBhbmQgd2FzIGhhcHB5IHRvIGJlIHJpZCBvZiBmb3JtdWxhLiAKU3VwZXIgY2xpY2hlLCBidXQgYmUgeW91cnNlbGYuIApXaGVuIGhlIHRvb2sgYSBydW4gYXQgUkpSIE5hYmlzY28gaW4gdGhlIGxhdGUgMTk4MCdzLCBDRU8gUm9zcyBKb2huc29uIGxvc3QgaGlzIGhhbmQgaW4gdGhlIGhpZ2ggc3Rha2VzIGdhbWUuIApPb2YsIEkgdHJ5IHRvIG5vdCBkcmluayBvZnRlbiBhbmQgSSBkb24ndCByZWFsbHkgbGlrZSBzYWtlLiAKQWNjb3JkaW5nIHRvIEtsZWluLFRoZSBpZGVhIG9mIGV4bG9pdGluZyBjcmlzaXMgYW5kIGRpc2FzdGVyIGhhcyBlZW4gdGhlIG1vZHVzIG9wZXJhbmRpIG9mLiAKV2Fsa2VkIGFyb3VuZCBhZ2Fpbi4gRm9yIHRoZSB0aGlyZCB0aW1lLCBJIHN0ZXBwZWQgaW4gZnJvbnQgb2YgaGltLiBJIGdyYWJiZWQgaGltIGJ5IHRoZSBhcm0gICB0aGlzIGlzIHRoZSBtb3N0IGNyYXp5IHRoaW5nIEkgZXZlciBkaWQgaW4gbXkgbGlmZSAgIGFuZCBJIHNhaWQsIEJveWQsIHlvdSBlaXRoZXIgZ29pbmcgdG8gZ2l2ZSBtZSBhIGpvYiByaWdodCBub3cgb3IgY2FsbCB0aGUgcG9saWNlIGFuZCBsb2NrIG1lIHVwLCBiZWNhdXNlIEkgbm90IGxlYXZpbmcgaGVyZSB3aXRob3V0IGEgam9iLiBJIHNhaWQsIGNsZWFuIGFzaHRyYXlzIG9yIHN3ZWVwIHRoZSBmbG9vciwgYnV0IEkgZ290IHRvIGhhdmUgYSBqb2Igbm93LgpCZXN0IHBhcnQgaXMgeW91IGdldCB0aGUgZnVuIHBhcnQgb2YgZ2FtYmxpbmcsIGJ1dCB3aGVuIHlvdSBsb3NlLCB5b3UgZG9uIGZlZWwgYmFkIGJlY2F1c2UgeW91IGtub3cgdGhlIG1vbmV5IGdvaW5nIHRvIGEgZ29vZCBwbGFjZS4uIApPbmNlIHRoZWlyIGVzc2VudGlhbCBvaWxzIGZhaWwgYW5kIHRoZWlyIGNyeXN0YWxzIGFyZSBydWJiZWQgc21vb3RoIGFuZCBsaXR0bGUgQmlsbHkgaXMgYWJvdXQgdG8gZ2V0IHNodWZmbGVkIGZyb20gdGhlIG1vcnRhbCBjb2lsLCB0aGV5IHJ1c2ggdG8gdGhlIGRvY3RvcnMgYmVjYXVzZSB0aGV5IHRoZSBleHBlcnRzIGFuZCBsZXQgdGhlbSB1dGlsaXplIHdoYXQgbW9kZXJuIG1lZGljaW5lIGhhcyB0byBvZmZlci4gVW50aWwgdGhlIGRvY3RvciBzYXlzICJ0aGlzIHZhY2NpbmUgY291bGQgcHJldmVudGVkIHRoaXMiIHRoZW4gYWxsIG9mIGEgc3VkZGVuIHRoZXkgbm90aGluZyBidXQgYSB0b29sIHVzZWQgYnkgQmlnIFBoYXJtYSBmb3IgdGhlaXIgZXZpbCBwcm9maXRlZXJpbmcgYWdlbmRhLi4gCiJVc2VsZXNzIGVhdGVycyIgaXMgYWJvdXQgZWZmaWNpZW5jeS4gCk90aGVyd2lzZSB5b3UgY2hlY2sgeW91cnNlbGYgb3V0IG9mIHRoYXQgaGFuZC4gWW91ciBwcmVmbG9wIGJsdWZmIGp1c3QgbWFkZSBpdCBzb3VuZCBsaWtlIHlvdSBoYWQgcG9ja2V0IDhzLiAKSSB3YXRjaGVkIGEgYmVoZWFkaW5nIGluIGEgTWlkZGxlIEVhc3Rlcm4gY291bnRyeS4gSSBrbmV3IGFuIGV4ZWN1dGlvbiBieSBiZWhlYWRpbmcgd2FzIHRvIGJlIHBlcmZvcm1lZCBhbmQgSSB3YW50ZWQgdG8gc2VlIHdoYXQgdGhlIGF0bW9zcGhlcmUgd291bGQgYmUgbGlrZSBhbmQgd2hhdCByaXR1YWxzLCBpZiBhbnksIHdvdWxkIGJlIGZvbGxvd2VkLiAKVGhlcmUgbm8gbmV3IHBvc3NpYmlsaXRpZXMgdG8gY29uc2lkZXIgd2hlbiB5b3UgbG9zZSB0aGF0IGNvaW5mbGlwLiAKVGhvc2Ugd2hvIHNlZWsgdGhlIGRpc3RyYWN0aW9uIG9mIFRWIGluIHB1YmxpYyBwcm9iYWJseSBhcmVuIHRoYXQgc29waGlzdGljYXRlZC4gSW4gYSByZXN0YXVyYW50IG9yIGJhciwgdGhlcmUgYXJlIHRob3NlIHdobyBpbnRlcmFjdCB3aXRoIG90aGVycyBhbmQgdGhlcmUgYXJlIHRob3NlIHdobyBzdGFyZSBzbGFjayBqYXdlZCBhdCBibG9uZGUgcHJvcGFnYW5kaXN0cy4gSXQgbm8gc2VjcmV0IHRoYXQgdGhlIGxlc3MgaW5mb3JtZWQgYXJlIGRyYXduIHRvIHNrZXdlZCByaWdodCB3aW5nIG1lZGlhLCBzbyB0aGF0IHdoYXQgb24uLiAKWW91IHdpbGwgd2FudCBhIHNob3ZlbCB0aGF0IGlzIG5vdCB0b28gbG9uZyBvciB0b28gc2hvcnQuIFlvdSBkb250IHdhbnQgb25lIHRoYXQgd2lsbCBtYWtlIHlvdSBiZW5kIGRvd24gdG8gdXNlLiBZb3Ugd2FudCBvbmUgdGhhdCBpcyBhbHNvIGVhc3kgdG8gY2FycnkuIApJIGEgbG90IGJldHRlciBub3cgc2luY2UgdGhlcmFweSBhbmQgaGF2ZSBhIHRvbiBvZiBjbG9zZSBmcmllbmRzIGJ1dCBpdCBoYXJkIHNvbWV0aW1lcyBuZWVkaW5nIHRvIGxlYXJuIHRoYXQgeW91IGhhdmUgdG8gYmUgdnVsbmVyYWJsZSBpZiB5b3Ugd2FudCBwZW9wbGUgdG8gYmUgdnVsbmVyYWJsZSB3aXRoIHlvdSBhbmQgdGhhdCBob3cgcGVvcGxlIGJvbmQuIEkgc3RpbGwga2VlcCBhIGxvdCBvZiBzdHVmZiBib3R0bGVkIGluIHRvIGF2b2lkIGEgcG90ZW50aWFsIG5lZ2F0aXZlIHJlYWN0aW9uIChhbm90aGVyIHRoaW5nIEkgbGVhcm5lZCBmcm9tIG15IG1vbSBheXkpIGJ1dCBJIHdvcmtpbmcgb24gaXQuLiAKSSBiZSBob25lc3QsIEkgdXN1YWxseSBqdXN0IHNocnVnIGFuZCBsZXQgaGltIHRhbGsgaGltc2VsZiBvdXQsIGJlY2F1c2UgSSBlbmpveSBoZWFyaW5nIHdoYXQgaGUgaGFzIHRvIHNheSwgZXZlbiB3aGVuIEkgdGhpbmsgaXQgYSBsaXR0bGUgZGFmdCwgYW5kIGp1c3QgbWFrZSBzdXJlIG5vdCB0byBlYXQgS29yZWFuIGluc3RhbnQgbm9vZGxlcyBuZWFyIGhpbSwgYW5kIG5vdCBxdWVzdGlvbiB3aHkgaGUgd29uIHdhdGNoIGFuIGFuaW1lIHNlcmllcyBJIGxpa2UgZnJvbSBhIG5ldyBzZWFzb25hbCBiYXRjaCwgYmVjYXVzZSAidGhlcmUgS29yZWFuIGFuaW1hdG9ycyB3b3JraW5nIG9uIGl0LiIgVG8gZWFjaCB0aGVpciBvd24uIF8oKV8vCkFuZCB0aGF0IHRoZSB3YXkgaXQgbWVhbnQgdG8gYmUuIERvbiBvdmVydGhpbmsgaXQuIEtlZXAgeW91ciBhY3Rpdml0eSBoaWdoIGFuZCBkb24gYmVjb21lIGEgYnVybm91dCBiZWNhdXNlIHlvdSBuZXZlciBoYXZlIGZ1bi4gSWYgeW91IGtub3cgeW91IGhhdmUgYSBkYXkgb2YgImJhZCIgZWF0aW5nIGNvbWluZyB1cCwgZG8geW91ciB3b3Jrb3V0LCBpdCBoZWxwcyB0cmVtZW5kb3VzbHkuIEFsc28ga2VlcCB0aGVzZSBkYXlzIGluIG1pbmQgYW5kIHBsYW4gYXJvdW5kIHRoZW0sIG1heWJlIGxvd2VyIHlvdXIgaW50YWtlIHNsaWdodGx5IHRoZSBkYXkgYmVmb3JlIGFuZCBhZnRlciB0byAiY291bnRlcmJhbGFuY2UiIHRoZSBkYXkuClN0ZXJlb3R5cGUgYmVoYXZvaXIgaXMgVEhFIHdheSB0byBzZWUgaWYgYW4gYW5pbWFsIGlzIHN0cmVzc2VkIG9yIG5vdC4gCjE3MSkuIApNYW55IG9ubGluZSB2aWRlbyBwb2tlciBnYW1lcyBjb21lIGluIHNpbmdsZSBoYW5kIGFuZCBtdWx0aSBoYW5kIHZhcmlldGllcy4gCk9tIDIwIG5hIDYgZ2luZyBkZSB3ZWtrZXIgYWwsIHpvZGF0IHdlIG9tIGt3YXJ0IG5hIDcgb3AgZGUgc2h1dHRsZSBidXMgemF0ZW4gb3Agd2VnIG5hYXIgWmF2ZW50ZW0uIE9udGJpanRlbiBkZWRlbiB3ZSBvcCB3YXQgb25kZXJ0dXNzZW4gb256ZSB2YXN0ZSBzdGVrIGlzIG9wIGRlIGx1Y2h0aGF2ZW4uIE1ldCBvbnMgZmxleCB0aWNrZXQgbW9jaHRlbiB3ZSBkZSByaWogYmlqIHNlY3VyaXR5IHZvb3JzdGVrZW4sIGhpaGkuIApJIGNoZWNrZWQgc29tZSBiZW5jaG1hcmtzIGZvciB5b3UgLCBpZ25vcmUgQUMgcG9vciBwZXJmb3JtYW5jZSBiZWNhdXNlIGJhZCBvcHRpbWlzYXRpb24uIApUaGVyZSBpcyBhbHNvIHRoZSByaXNrIGF0IHNvbWUgcG9pbnQgaW4gdGhlIGNvbWluZyB5ZWFycyBUb3JvbnRvIGltcGxlbWVudHMgYW4gZW1wdHkgaG9tZSB0YXggc2ltaWxhciB0byB3aGF0IGEgVmFuY291dmVyIGFuZCBvdGhlciBwYXJ0cyBvZiBCQyBoYXZlLi4gCldhZ2VyaW5nIG9uIHN0YXRlIGdyZXlob3VuZCByYWNpbmcgd2FzIGRvd24gMy41NyBwZXJjZW50IGF0ICQyMzksOTE2LDUxMCwgd2hpbGUgdGhvcm91Z2hicmVkIGJldHRpbmcgd2FzIG9mZiA1LjczIHBlcmNlbnQgYXQgJDQ0MSwzMTQsNjUyLgpJIGNhbiBzZWUgb24geW91ciBkbCB3aGVuIHlvdSB3ZW50IDIwNSB5b3VyIHVwcGVyIGJhY2sgaXMgbm90IHRpZ2h0IGFuZCBsb2NrZWQgZG93biB3aGVuIHlvdSB0cnkgdG8gcHVsbC4gU2hvdWxkZXJzIHN0YXkgZm9yd2FyZC4gQXMgeW91IGJlbmQgZG93biB0byBnZXQgc2V0IGFuZCBwdWxsIHVwIG9uIHRoZSBiYXIgd2l0aCB0aGUgZmlyc3QgaGFuZCBrZWVwIHRoYXQgdGVuc2lvbiBpbiB5b3VyIGJhY2sgYW5kIGFybSB0aGVyZSBhcyB5b3Ugc2V0IHRoZSBvdGhlciBoYW5kLiBZb3UganVzdCBwdWxsaW5nIHRoZW4gcmVsYXhpbmcgdGhlIHVwcGVyIGJhY2sgYmVmb3JlIHNldCB5b3VyIG90aGVyIGhhbmQuIFNldCBmZWV0LCBicmFjZSBsZWdzLCBicmFjZSBjb3JlLCB0aWdodCBiYWNrIGFzIHlvdSByZWFjaCBkb3duIGFuZCBzZXQgdGhlIGZpcnN0IGhhbmQgYW5kIG1haW50YWluIHRoYXQgdGlnaHRuZXNzIGFzIHlvdSBwdWxsIHlvdXIgb3RoZXIgaGFuZCBpbnRvIHBvc2l0aW9uLCBvbmNlIHRoZSBvdGhlciBoYW5kIGlzIHNldCBMYXRzIHNob3VsZCBiZSBjcmFua2VkIGRvd24gYW5kIHRpZ2gsIGhpcHMgZ28gZG93biAoeW91ciBzZXQgdXAgc2hvdWxkIGJlIHRha2luZyB0aGUgc2xhY2sgb3V0IG9mIHRoZSBiYXIgdG8gaGVscCB5b3Ugc2V0IHVwIGZvciBhIGJpZyBwdWxsKSwgYmlnIGNoZXN0LCBoZWFkIHVwIGFuZCBnby4KV2hhdCBkbyB5b3UgbWVhbj8gT1AgcGlja2VkIHVwIG9uIGl0LCB0b28uIEhlbmNlIGhpcyBwb3N0LiBKdXN0IGJlY2F1c2UgeW91IGEgaGFybWxlc3MgYnV0dGVyZmx5IG5vdywgbXkgbGl0dGxlIFN0YWN5LCBkb2VzbiBtZWFuIHlvdSB3b24gZ3JvdyB1cCB0byBiZSBhbiB1bnNjcnVwdWxvdXMgaGFycGllLiAKT25lIFBpZWNlIGVwaXNvZGUgMjAwLCBvciBpZiBpdCBmcm9tIGEgZGlmZmVyZW50IG1lZGl1bSwgTE4vTWFuZ2EvVk4pLiBTcG9pbGVyIHNvdXJjZSBpcyBvbmx5IHJlcXVpcmVkIGluIHRoZSBmaXJzdCBvZiBhbnkgc2V0IG9mIHNwb2lsZXJzIGZvciB0aGUgc2FtZSBzb3VyY2UgYW5kIGlzIG5vdCByZXF1aXJlZCBpbiBhIGRpc2N1c3Npb24gdGhyZWFkIHdoaWxlIGRpc2N1c3NpbmcgdGhhdCB0aHJlYWQgc2VyaWVzLkl0IHNob3VsZCBiZSBub3RlZCB0aGF0IHVuYWRhcHRlZCBtYXRlcmlhbCBjYW4gc3RpbGwgYmUgY29uc2lkZXJlZCBhIHNwb2lsZXIuT2J2aW91c2x5IGludGVudGlvbmFsIG9yIGV4Y2Vzc2l2ZWx5IHJlcGVhdGVkIHZpb2xhdGlvbnMgb2YgdGhpcyBydWxlIHdpbGwgcmVzdWx0IGluIGEgYmFuLkltYWdlcyBjYW4gYmUgdGFnZ2VkIHdpdGggc3BvaWxlciB3aXRoIGEgc2ltcGxlICJTcG9pbGVyIFdhcm5pbmchIiBiZWZvcmUgdGhlIGxpbmsgb3IgaW4gdGhlIGxpbmsgaXRzZWxmIVVzZSBtYXJrZG93biBjb21tZW50aW5nIGluIHRoZSByZWRlc2lnbi5SZXBseSB0byB0aGlzIG1lc3NhZ2Ugb25jZSB5b3UgaGF2ZSB0YWdnZWQgdGhlIGFwcHJvcHJpYXRlIHBhcnRzIHRvIGhhdmUgeW91ciBjb21tZW50IHJlYXBwcm92ZWQuIFdoZXRoZXIgYSBqb2tlIGFib3V0IGRpc2FiaWxpdHkgaXMgY29taW5nIGZyb20gYSBkaXNhYmxlZCBwZXJzb24gb3Igbm90IGlzIHByZXR0eSBvYnZpb3VzIGFsbW9zdCBhbGwgb2YgdGhlIHRpbWUgYmVjYXVzZSBwZW9wbGUgd2hvIGFyZSBkaXNhYmxlZCBhY3R1YWxseSB1bmRlcnN0YW5kIHdoYXQgZnVubnkgYWJvdXQgYmVpbmcgZGlzYWJsZWQuIApBcyBzYWlkIGJlZm9yZSwgeW91IGNhbiBsZWF2ZSB0aGUgZmlnaHQgd2hlbmV2ZXIgeW91IHdhbnQsIGp1c3QgbWFrZSBzdXJlIHRvIHJ1biBiYWNrIGltbWVkaWF0ZWx5LiAKTm93LCBtb3N0IHBlb3BsZSBhdCB0aGlzIHBvaW50IHdvdWxkIHRha2Ugc29tZSB0aW1lIG9mZiB0aGVpciBjaG9zZW4gcHJvZmVzc2lvbiwgY3VybCB1cCBpbiBhIGJhbGwgYW5kIGluc3RhbGwgYSBzZWN1cml0eSBzeXN0ZW0gY29tcGxldGUgd2l0aCB0d28gb2YgdGhlIG1lYW5lc3QgUm90dHdlaWxlcnMgYXZhaWxhYmxlLiBOb3QgRHVoYW1lbC4KTXkgY2hyb21vc29tZXMgYXBwYXJlbnRseSBkaWN0YXRlIHRoYXQgbWluZSBpcyBub3QgdG8gcXVlc3Rpb24gd2h5LCBtaW5lIGl0IGJ1dCB0byBkbyBvciBkaWUuLiAKVG9kYXkgaXMgbXkgZmlyc3QgZG9zZSBvZiBXZWxsYnV0cmluLiAKU28gSSBzaXQgaGVyIGRvd24gYW5kIHRlbGwgaGVyIHRoaXMgYmx1bnRseTsgWW91IGFyZSB0aXJlZCBvZiB0aGUgZHJhbWEgYW5kIHRoZSB0ZWFycyBhbmQgY2hhc2luZyBoZXIgYXJvdW5kIHRoZSBob3VzZSBmb3IgaGVyIGhhaXIgdG8gYmUgZG9uZS4gU2hlIGNhbiBlaXRoZXIgZG8gYSBtYW5hZ2VhYmxlIGxlbmd0aCAoYW5kIHNvbWUgcGl4aWUgY3V0cyBhcmUgU1VQRVIgY3V0ZSEpLCBvciBzaGUgY2FuIHRvbGVyYXRlIHRoaXMuIEJ1dCBub3QgcnVuIHRocm91Z2ggdGhlIGhvdXNlIHNjcmVhbWluZyBhbmQgYnVja2luZyBvdXQgb2YgeW91ciBhcm1zLgpJdCBpcyBtb3N0IGNvbW1vbmx5IHNlZW4gaW4gd29tZW4gb2YgY2hpbGRiZWFyaW5nIHllYXJzLCBidXQgY2hpbGRyZW4sIHRoZSBlbGRlcmx5IGFuZCBtZW4gYWxzbyBjYW4gZGV2ZWxvcCB0aGlzIGRpc29yZGVyLiBUaGUgZGlhZ25vc2lzIG9mIGZpYnJvbXlhbGdpYSByZXF1aXJlcyB0aGF0IGEgcGF0aWVudCBleHBlcmllbmNlIHdpZGVzcHJlYWQgcGFpbiBpbiBhbGwgZm91ciBxdWFkcmFudHMgb2YgdGhlIGJvZHkgZm9yIGF0IGxlYXN0IHRocmVlIG1vbnRocyBkdXJhdGlvbiwgYWxvbmcgd2l0aCB0ZW5kZXJuZXNzIGF0IDExIG9yIG1vcmUgb2YgMTggc3BlY2lmaWMgcG9pbnQgc2l0ZXMuLiAKRmluZGluZyBhIFByYWN0aXRpb25lciB0aHJvdWdoIHRoZSBOQ0FBOiBGb3J0dW5hdGVseSwgdGhlcmUgYXJlIGNlcnRpZnlpbmcgYWdlbmNpZXMgdGhhdCBlc3RhYmxpc2ggc3RhbmRhcmRzIHRoYXQgYSBwcmFjdGl0aW9uZXIgbXVzdCBtZWV0IHRvIGJlIGNvbnNpZGVyZWQgcXVhbGlmaWVkLiBBZnRlciB0aHJlZSB0byBmb3VyIHllYXJzIG9mIHRyYWluaW5nLCBhIHN0dWRlbnQgaXMgcXVhbGlmaWVkIHRvIHNpdCBmb3IgYSBsaWNlbnNpbmcgZXhhbS4KVGhlIGZ1dHVyZSwgdGhlIHBlb3BsZSB0aGF0IHRoZSBVRkMgd2FudHMgdG8gcGF5IGZvciB0aGUgYXdmdWwgZmlnaHQga2l0cywgam9pbiB0aGUgcmV3YXJkcyBwcm9ncmFtLCBhbmQgYnV5IHRoZSBQUFZzLCB0aG9zZSBhcmUgdGhlIG9uZXMgdGhleSB3b3JyeWluZyBhYm91dCBhbmQgbWFya2V0aW5nIHRvLiAKTW9yZSBsaWtlbHkgaGUgYWNxdWlyZWQgaGlzIHJldmVyc2Ugbm9ibGVzc2Ugb2JsaWdlIGJ5IHRyYWluaW5nIGZyb20gaGlzIGZhdGhlciB3aG8sIGFjY29yZGluZyB0byBUcnVtcCBiaW9ncmFwaGVyIEhhcnJ5IEh1cnQgSUlJLCByYWlzZWQgeW91bmcgRG9uYWxkIHRvIGJlY29tZSAiYSBraWxsZXIiIGFuZCB0b2xkIGhpbSAieW91IGFyZSBraW5nLiIgSGlzIG1vdGhlciB3YXMgc28gZW5jaGFudGVkIGJ5IHJveWFsdHkgdGhhdCBUcnVtcCBrZWVubHkgcmVtZW1iZXJzIHRoZSBob3VycyBzaGUgc3BlbnQgd2F0Y2hpbmcgdGhlIFRWIGJyb2FkY2FzdCBvZiBRdWVlbiBFbGl6YWJldGggY29yb25hdGlvbi4iQWxzbyBzb21lIHRob3VnaHRzIG9uICJETkEiIDoiSSBhIGJpZyBiZWxpZXZlciBpbiBuYXR1cmFsIGFiaWxpdHksIiBUcnVtcCB0b2xkIG1lIGR1cmluZyBhIGRpc2N1c3Npb24gYWJvdXQgaGlzIGxlYWRlcnNoaXAgdHJhaXRzLCB3aGljaCBoZSBzYWlkIGNhbWUgZnJvbSBhIG5hdHVyYWwgc2Vuc2Ugb2YgaG93IGh1bWFuIHJlbGF0aW9ucyB3b3JrLiAiSWYgT2JhbWEgaGFkIHRoYXQgcHN5Y2hvbG9neSwgUHV0aW4gd291bGRuIGJlIGVhdGluZyBoaXMgbHVuY2guIApCaXJ0aCBjb250cm9sIG1vdmVtZW50CldoaXRlIGd1eXMgYXJlIG11Y2ggbW9yZSBsYWlkIGJhY2sgYW5kIGFyZSBoYXBweSB0byBjYXJyeSBvbiB0aGUgY29udmVyc2F0aW9uIGZvciBhbm90aGVyIDMwIG1pbnV0ZXMgd2hpbGUgdGhlIGNoZWNrIGlzIGxheWluZyBvbiB0aGUgdGFibGU7IHNvbWUgYXJlIGV2ZW4gd2lsbGluZyB0byBnbyBkdXRjaCB0byBmdXJ0aGVyIHNob3djYXNlIHRoZWlyIHN1cHBvcnQgdG93YXJkcyBnZW5kZXIgZXF1YWxpdHkuIApJdCB3YXMgbGlrZSBJJ2QgYmVlbiBzdGFyaW5nIGludG8gdGhlIHN1bi4gCkEgTUFOSUFDQUxMWSB1cGJlYXQgdHVuZSBmaWx0ZXJzIG91dCB0byB0aGUgcm9hZCwgc3Bpa2VkIHdpdGggdGhlIHNvdW5kcyBvZiBTdXBlciBNYXJpbyBzY29yaW5nIGdvbGQgY29pbnMsIG9mIG1vbmV5IGZhbGxpbmcgaW4gYSBzaGVldCAgIGRpenp5aW5nbHkgaW50b3hpY2F0aW5nLCB1bnJlbGVudGluZ2x5IG1lcnJ5LgpJZiB5b3UgaGF2ZW4gc2VlbiB0aGlzIGd1eSBUViBzaG93LCB5b3UgcmVhbGx5IGVuam95IGl0IGhlIGhhcyB0aGUgc2FtZSBhcHByZWNpYXRpb24gdGhhdCB5b3UgZG8sIGVzcGVjaWFsbHkgZm9yIERvdWdsYXMgZmlyLCB3aGljaCBoZSBmb25kbHkgY2FsbHMgIkRvdWcgZmlyLiIgSGUgaGFzIGEgYml0IG9mIGEgbWFyYmxlIG1vdXRoIGJ1dCBmb3IgdGhlIG1vc3QgcGFydCBoZSBkb2VzIHJlYWxseSBuaWNlIHJlc3RvcmF0aW9ucy4gTm9wZS4gSSBkb24gbGlrZSB3YWxraW5nIG9uIGl0LCBzaXR0aW5nIG9uIGl0LCBoYXZpbmcgaXQgYnVybiB0aGUgc29sZXMgb2YgbXkgZmVldCwgYW5kIHRoZW4gaGF2aW5nIGl0IHJlYXBwZWFyIGluIGV2ZXJ5IHBvc3NpYmxlIGNyZXZpY2UgYW5kIG9iamVjdCBmb3Igd2Vla3MgYWZ0ZXJ3YXJkcy4uIApBbmltYXRlZCBnaWZzIGZvciB5b3VyIHZpZXdpbmcgcGxlYXN1cmUKVGhlcmUgdGVuZHMgdG8gYmUgYSBzZW5zZSBvZiBndWlsdCBvciBhIGZlZWxpbmcgb2YgImJlaW5nIGNyYXp5IiBhbW9uZ3N0IEhTUHMgYmVjYXVzZSB3ZSBhcmUganVzdCBzbyBkaWZmZXJlbnQgZnJvbSBtb3N0IHBlb3BsZS4gCk1hZ2lzdHJhdGUgQnVybnMgYmVnYW4gaGVyIGNhcmVlciBhcyBhIGNvdXJ0IG9mZmljZXIgYXQgV3lvbmcsIEJlbG1vbnQgYW5kIFdhbGxzZW5kIGluIHRoZSBtaWQgMTk4MHMgYmVmb3JlIGJlaW5nIGFkbWl0dGVkIHRvIHRoZSBiYXIgaW4gMTk5OC4KV2VyZGVyIEJyZW1lbidzIEtydXNlIHN0YXJ0ZWQgc2xvd2x5IG9uIHRoZSBldmVudCdzIGZpcnN0IGRheSBiZWZvcmUgYSBzdHJvbmcgc2Vjb25kIGRheSBhdCB0aGUgUmlvIEFsbCBTdWl0ZSBIb3RlbCBDYXNpbm8gc2F3IGhpbSBjbGltYiB0byBzZWNvbmQgaW4gdGhlIG92ZXJhbGwgY2hpcCBjb3VudCBhbmQgbWFrZSBpdCB0byB0aGUgZmluYWwgdGFibGUuLiAKSSBmZWxsIGluIGxvdmUgd2l0aCBpdC4gClRoZSBOZXcgVmlzdGEgSGlnaCBTY2hvb2wgc3R1ZGVudCBkaXNjb3ZlcmVkIGhpcyBwYXNzaW9uIGZvciBjb29raW5nIGR1cmluZyBhIG9uZSB3ZWVrIGNvb2tpbmcgY2xhc3MgaW4gdGhlIHNpeHRoIGdyYWRlLiBTaG9ydGx5IHRoZXJlYWZ0ZXIsIGhpcyBmYW1pbHkgZ290IGEgdGVsZXZpc2lvbiBmb3IgdGhlIGZpcnN0IHRpbWUsIGFuZCBBYXJvbiBiZWNhbWUgc29tZXdoYXQgYWRkaWN0ZWQgdG8gQnJhdm9UVidzICJUb3AgQ2hlZi4iIEhlIGJlZ2FuIHdvcmtpbmcgb24gaGlzIG93biBkaXNoZXMsIGFuZCBhdCBhZ2UgMTQgc2V0IHVwIGEgSnVuaW9yIElyb24gQ2hlZiBjb21wZXRpdGlvbiBhdCBRJ3MgUmVzdGF1cmFudCBpbiB0aGUgSG90ZWwgQm91bGRlcmFkby4KTmV3IHRlY2hub2xvZ3kgbWFkZSBpdCBwb3NzaWJsZSBmb3IgYSBkZXZlbG9wZXIgc3VjaCBhcyBTYWwgRGVidXMgdG8gbWFrZSBsaWdodHdlaWdodCBjb3R0b24gbGlrZSBmYWJyaWNzIG91dCBvZiByZWN5Y2xlZCBwb3AgYm90dGxlcy4gSW4gYWRkaXRpb24sIGhlIGRpc2NvdmVyZWQgaG93IHRvIG1ha2UgaGlzIG93biB0cmFkZW1hcmtlZCBmYWJyaWMgb3V0IG9mIGV1Y2FseXB0dXMgdHJlZXMuIFdoaWxlIHRoZSBlYXJsaWVyIE1vZHJvYmVzIGhhZCBhdHRyYWN0ZWQgZmFzaGlvbiBhbmQgc3BvcnQgY3VzdG9tZXJzLCBuZXcgY2xpZW50cyB3ZXJlIHNvbGlkIHNwb3J0IGVudGh1c2lhc3RzLi4gCkFtYXppbmcgaW1hZ2VzIG9mIGxpZ2h0IGFuZCBsYW5kc2NhcGUKTGlrZSBjb2luIGZsaXBzLCB0aGUgcmVzdWx0IGdldHMgbW9yZSBhY2N1cmF0ZSB0aGUgbW9yZSB5b3UgZG8gaXQsIGFzIHNoZWVyIHBlcnNpc3RlbmNlIGlyb25zIG91dCBzdGF0aXN0aWNhbCBhYmVycmF0aW9ucy4gV2hpbGUgeW91ciBjb2luIGZsaXBzIGdldCBjbG9zZXIgdG8gNTAgNTAgdGhlIG1vcmUgdGltZXMgeW91IGZsaXAsIHlvdXIgcGFwZXIgY2xpcHMgZ2V0IGNsb3NlciB0byBwaSB0aGUgbW9yZSB0aW1lcyB5b3UgZHJvcC4gSWYgeW91IGRvbid0IGhhdmUgdGhlIHRpbWUgb3IgdGhlIHBhcGVyIGNsaXBzIHRvIGRvIGl0IHlvdXJzZWxmLCB0aGVyZSBhcmUgb25saW5lIHNpbXVsYXRpb25zIHRoYXQgd2lsbCBkbyBpdCBmb3IgeW91LCBiZWNhdXNlIG9mIGNvdXJzZSB0aGVyZSBhcmUuIkhleSBNb20gLiAKSSB3YXNuJ3QgYSBmb29sLCBhbmQgSSBrbmV3IHRoYXQgdGhlcmUgd2VyZSBtYXNzYWdlIHBhcmxvcnMgYW5kIHRoZXJlIHdlcmUgd2luayBtYXNzYWdlIHBhcmxvcnMsIHNvIEkgaGFkIG15IGd1YXJkIHVwIGEgbGl0dGxlIHdoZW4gSSBmaXJzdCBhcnJpdmVkLiAKSXQgbWVhbnMgeW91IGV4cGVjdGVkIHNvbWV0aGluZyBidXQgYXJlIHdpbGxpbmcgdG8gYWNjZXB0IHRoZSBvdXRjb21lLiBCZSByYXRpb25hbCBhbmQgdW5kZXJzdGFuZGluZyBhYm91dCB0aGUgY2lyY3Vtc3RhbmNlLmkgdGhpbmsgaG93ZXZlciB0aGF0IHBlb3BsZSBhcmUgZXhwZWN0aW5nIHRvbyBtdWNoIG5vd2FkYXlzLiBBbG1vc3QgZGVtYW5kaW5nIGZyb20gRU4gc3RhZmYgdG8gcHJvdmlkZSBhbmQgY2F0ZXIgdG8gZXZlcnkgbGl0dGxlIHdoaW5lLmNvdWxkIGxlYXJuIGEgdGhpbmcgb3IgdHdvIGFib3V0IHBhdGllbmNlIGZyb20gSlAgb3IgQ04uIApUaGUgd2luZHMgY2FuIGJlIHdhcm0sIHdpdGggaGlnaCBndXN0cyBsb3RzIG9mIGR1c3QsIHN0YXRpYyBlbGVjdHJpY2l0eSBhbGxlcmdpYyBpcnJpdGFudHMuLiAKQmFyYWNrIE9iYW1hJ3MgcnVubmluZyBtYXRlIFNlbi4gSm9lIEJpZGVuIGluIFN0LiBMb3Vpcy4gCkEgc2luZ2xlIHN0dWR5LCBhdCBiZXN0LCBzYXlzICJ0aGlzIGlzIGNvbXBlbGxpbmcgZXZpZGVuY2UiLiAKRW1haWwgcHJvZ3JhbXMgbWlnaHQgdXNlIGl0IHRvIHNvcnQgb3VyIG1lc3NhZ2VzIGF1dG9tYXRpY2FsbHkgaW50byB2YXJpb3VzIGZvbGRlcnMsIHdoaWxlIHNvY2lhbCBuZXR3b3JraW5nIHNpdGVzIGNvdWxkIHVzZSB0aGUgYWxnb3JpdGhtIHRvIGNvbnN0cnVjdCBtb3JlIGFjY3VyYXRlIG1hcHMgb2Ygb25saW5lIGNvbm5lY3Rpb25zLCB0aHVzIGFsbG93aW5nIGNvbXBhbmllcyB0byBwcmVjaXNlbHkgdGFyZ2V0IHRoZWlyIGFkdmVydGlzaW5nLi4gClRoaXMga2luZCBvZiBjYW1wYWlnbiBqdXN0IGFkZHMgZnVlbCB0byB0aGUgZmlyZSBvZiBzZW50aW1lbnQgYW1vbmcgdGhlICJmYWlsdXJlcyBhdCBsaWZlIiB0aGF0IHByb3BvbmVudHMgb2YgaW1taWdyYXRpb24gYXJlIGxpdGVyYWxseSBsYXVnaGluZyBhdCB0aGVtLiBMZXQgaW1hZ2luZSBteSBsaWZlIGlzbiBnb2luZyB3ZWxsICAgSSB3b3JrIGhhcmQgYnV0IEkgbm90IGdldHRpbmcgYWhlYWQuIFRoZXJlIGFyZSB0d28gcG9saXRpY2FsIGdyb3VwcyBjbGFpbWluZyB0aGF0IHRoZXkgZ29pbmcgdG8gaGVscCBtZS4gT25lIGdyb3VwIHNheXMgaXQgbm90IG15IGZhdWx0LiBUaGUgb3RoZXIgZ3JvdXAgbW9ja3MgbWUuIFdoaWNoIGFtIEkgZ29pbmcgdG8gcGljaz8KTWFzc2FnZSB0aGVyYXB5IGlzIGEgY29tcHJlaGVuc2l2ZSBpbnRlcnZlbnRpb24gaW52b2x2aW5nIGEgcmFuZ2Ugb2YgdGVjaG5pcXVlcyB0byBtYW5pcHVsYXRlIHRoZSBzb2Z0IHRpc3N1ZXMgYW5kIGpvaW50cyBvZiB0aGUgYm9keS4gVGhlIHB1cnBvc2Ugb2YgbWFzc2FnZSB0aGVyYXB5IGlzIHRvIHByZXZlbnQsIGRldmVsb3AsIG1haW50YWluLCByZWhhYmlsaXRhdGUgb3IgYXVnbWVudCBwaHlzaWNhbCBmdW5jdGlvbiBvciByZWxpZXZlIHBhaW4gKE1hc3NhZ2UgVGhlcmFweSBBY3QsIDE5OTEpLiBJdCBpcyBhIGNsaW5pY2FsbHkgb3JpZW50ZWQgaGVhbHRoIG9wdGlvbiB0aGF0IGFjaGlldmVzIHVuZGVuaWFibGUgcmVzdWx0cyBpbiB0aGUgcmVsaWVmIG9mIGFuIGFycmF5IG9mIGRpc2NvbWZvcnRzIHN0ZW1taW5nIGZyb20gc3RyZXNzLCBtdXNjdWxhciBvdmVydXNlIGFuZCBtYW55IGNocm9uaWMgcGFpbiBzeW5kcm9tZXMuCkZvcnR1bmF0ZWx5LCBoYXZpbmcgd29ya2VkIGluIHNhZmV0eSBjcml0aWNhbCBhbmQgY29tbWVyY2lhbCAocHJvZHVjdCBmb2N1c2VkKSBlbmdpbmVlcmluZyB0ZWFtcywgdGhpcyBhdHRpdHVkZSBpcyBmYXIgbW9yZSBwcmV2YWxlbnQgaW4gdGhlIGxhdHRlciwgd2hlcmUgcHJvamVjdCBtYW5hZ2VtZW50IGlzIGdlbmVyYWxseSBpbmNvbXBldGVudCB1bnRpbCBwcm92ZW4gb3RoZXJ3aXNlLiAKVGhlIHRoaW5nIHRvIGdldCBuZXh0IHdvdWxkIGJlIGEgdmlkZW8geW91IGNhbiB3YXRjaCBhbmQgaGVscCBiYWNrIHVwIHdoYXQgeW91IGxlYXJuZWQgZnJvbSB3b3Jkcy4gRmluYWxseSwgZm9yIHByYWN0aWNlLCBhIHR1dG9yaWFsIHNvZnR3YXJlIHByb2dyYW0uIApUaGVyZSBhcmUgdGhyZWUgYmFsbHMgaW4gdGhlIEZpdGJhbGwgVGhlcmFweSBsaW5lOiBmaXZlLCBzaXgsIGFuZCBzZXZlbiBpbmNoZXMuIEEgdmFyaWV0eSBvZiBiYWxsIHNpemVzIGFsbG93IHRoZSB1c2VyIHRvIGN1c3RvbWl6ZSB0aGUgcHJlc3N1cmUgYW5kIGludGVuc2l0eSBuZWVkZWQgdG8gZXhwZXJpZW5jZSBzb2Z0IHRpc3N1ZSByZWxlYXNlLiAKV2UgaGFkIGEgcnVuIGluIHdpdGggc29tZSBkcnVnZ2llcy4gSXQgc2VlbXMgdGhhdCB0aGVyZSBpcyBhIG5ldyBkcnVnIG9uIHRoZSBzdHJlZXQgY2FsbGVkIE5vaXIuIFRoZSBkcnVnIGlzIGRlZmluaXRlbHkgbm90IE5vcm1hbiwgYnV0IHRoZSB1c2VycyBtYXliZS4gCjMgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvSXQgZGVwZW5kcy4gCkkgc3VwcG9ydGVkIEZpZXJyby4gSSBiZWxpZXZlIGhlIHdhcyB0aGUgYmVzdCBtYW4gZm9yIHRoZSBqb2IgYnV0IEkgd2FzIGRlZXBseSBkaXNhcHBvaW50ZWQgaW4gdGhlIHBlb3BsZSB0aGF0IHJhbiBoaXMgY2FtcGFpZ24uIFRoZXkgYXJlIGZhciBmcm9tIHByb2Zlc3Npb25hbCwgY2xlYXJseSBoYWQgdGhlaXIgb3duIHBlcnNvbmFsIGFnZW5kYXMgYW5kIGluIG15IG9waW5pb24gdGhleSB3aWxsIG5vdCBiZSBhYmxlIHRvIGhlbHAgRmllcnJvIGdyb3cgYXMgYSBwb2xpdGljaWFuLiBUaGVpciBiZWhhdmlvciBpcyByaXNreSwgcGFydGljdWxhcmx5IGNvbnNpZGVyaW5nIEphaW1lIGNvbnRpbnVlcyB0byBibG9nIGFib3V0IGluZGl2aWR1YWxzIGluIG91ciBjb21tdW5pdGllcyB3aXRoIGhhbGYgdHJ1dGhzIGFuZCBpcnJlbGV2YW50IGdvc3NpcCBicmluZ3MgZ3JlYXQgcmlzayB0byBoaXMgY2xpZW50cyBhbmQgaGlzIGZpcm0uCkJlbiBMYW1iIGlzIHRoZSBjbG9zZXN0IHRoaW5nIHRvIGEgcmVjb2duaXphYmxlIG5hbWUgYXQgdGhlIGZpbmFsIHRhYmxlLCBhbmQgaGlzIGZhbWUgZGlkbid0IGNvbWUgdW50aWwgdGhpcyB5ZWFyJ3MgV29ybGQgU2VyaWVzLiBIZSdzIGNvbGxlY3RlZCBhIGJyYWNlbGV0LCBhIHJ1bm5lciB1cCBmaW5pc2ggYW5kIHBhc3NlZCBIZWxsbXV0aCBpbiB0aGUgUGxheWVyIG9mIHRoZSBZZWFyIHJhY2Ugd2l0aCBoaXMgcGVyZm9ybWFuY2UgaW4gdGhlIG1haW4gZXZlbnQuCkJlZXpuZWV6eSB1ClRoZSBpbmRpY3RtZW50IGFuZCBhY2NvbXBhbnlpbmcgY2l2aWwgc3VpdCBhY2N1c2VzIHRoZW0gb2YgZmluYW5jaWFsIG1hbGZlYXNhbmNlLCBpbmNsdWRpbmcgYmFuayBhbmQgd2lyZSBmcmF1ZCwgYW5kIG1vbmV5IGxhdW5kZXJpbmcuIEF0dG9ybmV5IFByZWV0IEJoYXJhcmEsIHRoZSBzaXRlcywgd2hpY2ggYXJlIGJhc2VkIGFicm9hZCwgZGlzZ3Vpc2VkIHRoZSBzb3VyY2Ugb2YgcGxheWVycycgcGF5bWVudHMsIG1hc2tpbmcgZGVwb3NpdHMgYW5kIHdpdGhkcmF3YWxzIGFzIHRyYW5zYWN0aW9ucyB3aXRoIGZha2UgZmxvd2VyIHNob3BzIGFuZCBwZXQgc3VwcGx5IHN0b3Jlcywgb3IgZSBjb21tZXJjZSB3ZWJzaXRlcyBoYXdraW5nIGdvbGYgY2x1YnMgYW5kIGJpa2VzLiAKVGhlIG9sZGVyIGNvbnRlbnQgaXMgYSBzaW1wbGUgc3RyYXRlZ3kgb2YgdmFsdWUgdnMgYmx1ZmZzIGFuZCBmb2xkcyB2cyBibHVmZmNhdGNoZXJzLiBJbiB0aGUgbGF0ZXIgdmlkZW9zLCB0aGV5IHN0YXJ0IGludHJvZHVjaW5nIG1vcmUgR1RPIHBsYXkgYW5kIHdpdGggbWVyZ2VkIGJldHRpbmcgYW5kIGJsb2NrZXIgZWZmZWN0cy4gCkppbWVuYWNlICA4MiBwb2ludHMgIHN1Ym1pdHRlZCA3IG1vbnRocyBhZ28KQWZ0ZXIgdGhpcmQgaG91ciwgc2hlIGdlbmVyYWxseSBoZWFkcyBob21lLiAKT2JpIFdhbiB3aXRoIHRoZSBoaWdoL2xvdyBncm91bmQgaXMgY2Fub25pY2FsbHkgdGhlIG1vc3QgcG93ZXJmdWwgSmVkaS4gVGhpcyBpcyBmYWN0LiAKQW1lcmljYW5zIGFsc28gYnJvdWdodCBpbiB0ZW5zIG9mIHRob3VzYW5kcyBvZiBBbWVyYXNpYW5zIHRvIHRoZSBVUyB3aGlsZSB0ZW5zIG9mIHRob3VzYW5kcyBvZiBMYWkgRGFpIEhhbiB3ZXJlIGxlZnQgZm9yIGEgc2hpdHR5LCBvc3RyYWNpemVkIGxpZmUgaW4gVmlldG5hbSB0aGF0IEtvcmVhbnMgbmV2ZXIgYnJvdWdodCBpbnRvIHRoZWlyIGNvdW50cnkuLiAKSSBhY3R1YWxseSBoYWQgdWJlcnMgdGhhdCBkaWRuIG1hdGNoIHRoZSBwbGF0ZXMgb24gbW9yZSB0aGFuIG9uZSBvY2Nhc2lvbi4gClNvIGhvdyBjYW4geW91IHVuY292ZXIgeW91ciBjcmVkaWJpbGl0eSBibGluZCBzcG90cz8gVGhlIHN1cmVzdCB3YXkgaXMgdG8gY2FwdHVyZSB5b3Vyc2VsZiBvbiB2aWRlbyBpbiBhIHR5cGljYWwgYnVzaW5lc3Mgc2V0dGluZy4gKFNtYXJ0cGhvbmVzIG1ha2UgdGhpcyBlYXNpZXIgdGhhbiBldmVyLikgQW5kIHdoaWxlIHRoZXJlIGFyZSBudW1lcm91cyBiZWhhdmlvcnMgdG8gbG9vayBmb3IsIHNldmVuIGJsaW5kIHNwb3RzIGFyZSBtb3N0IGNvbW1vbjoKRm9yIHRoZSBzYW1lIHJlYXNvbnMgdGhhdCBpdCB0b29rIDQwIHRyaWVzIGZvciB0aGUgQmVhc3QgdG8gYmUga2lsbGVkLi4gClVuZCBkYXp1IG5vY2ggZWluZSBGbGFzY2hlIENoYW1wYWduZXIgbWl0IEVyZGJlZXJlbiwgMzAgTWludXRlbiBNYXNzYWdlIHVuZCBlaW4gMyBHYW5nIERpbm5lci4gCkl0IGxpa2UgU3VwZXIgUm9ib3QgV2FycyAgIHRoZSBtZWNoYW5pY3MgbWlnaHQgbm90IGJlIHRoZSBkZWVwZXN0IHRoaW5nIGluIHRoZSB3b3JsZCwgYnV0IGVuam95YWJsZSBlbm91Z2ggZ2FtZXBsYXkgbWl4ZWQgd2l0aCBnZXR0aW5nIHRvIGJ1aWxkIGEgZHJlYW0gdGVhbSBvZiBteSBmYXZvcml0ZSBtZWNoYSBtYWtlcyBtZSBhIGhhcHB5IHBlcnNvbi5sb2xsZXIgW01dICBbc2NvcmUgaGlkZGVuXSAgc3VibWl0dGVkIDIyIGRheXMgYWdvUGxlYXNlIHN0b3AgdHJ5aW5nIHRvIHN0aXIgdXAgZHJhbWEgd2l0aCB3aGF0YWJvdXRpc20uIApIZSB3aXRuZXNzZXMgYSBzY2hvb2xtYXRlIGRpZSB3ZWFyaW5nIGhpcyBzd2VhdGVyLCBoZSBsb3N0IGhpcyBicm90aGVyLCBhbmQgaGUgYmVlbiBraWNrZWQgb3V0IG9mIHNjaG9vbC4gSG9sZGVuIGlzbiAid2hpbnkiIGxpa2UgbW9zdCBraWRzIGFyZSwgaGUgcmVhbGx5IGRvZXMgaGF2ZSBhbiBpbm5lciBiYXR0bGUgaGUgc3RydWdnbGVzIHRvIGZpZ2h0LiAKVGhlIHJlYWxpdHkgaXMsIHRob3VnaCwgdGhhdCBNY0Nvbm5lbGwgaGFzIGEgbG90IG9mIGRpc2NyZXRpb24gYXMgdG8gaG93IHN1Y2ggYSB2b3RlIGNvdWxkIGdvICAgYW5kIGFzIG9mIG5vdywgaGUgaGFzIG5vdCBnaXZlbiBtYW55IGNsdWVzLgpJIGNhbiBzZWUgd2h5IHlvdSBjYW4gZ2V0IHRoaXMgcGFydC4gCiJTb21lIG9mIHRoZSBpc3N1ZXMgdGhhdCBhcmUgdGhlcmUsIHN1Y2ggYXMgd2hhdCBraW5kIG9mIHJhY2VzIGNhbiB5b3UgcnVuLCBhcmUgdGhlIGtpbmRzIG9mIHRoaW5ncyB0aGF0IG5lZWQgdG8gYWN0dWFsbHkgYmUgZGlzY3Vzc2VkLiBXaGV0aGVyIG9yIG5vdCB0aGV5IHBhc3MgaXQgYmVmb3JlIHRoZSBMZWdpc2xhdHVyZSBwYXNzZXMgaXQgb3Igbm90LCBmcmFua2x5IHRoZSBkaXZpc2lvbiBzaG91bGQgYmUgYXBwbGF1ZGVkIGZvciBhZGRyZXNzaW5nIHRoZSBpc3N1ZXMsIiBzYWlkIFdpbGJ1ciBCcmV3dG9uLCBhIGxvYmJ5aXN0IHdob3NlIGNsaWVudHMgaW5jbHVkZSBDYWxkZXIgUmFjZSBDb3Vyc2UuCkJsb2NoIHdhdGNoZWQgYXMgdGhlICJCaWcgUGxheWVyIiBvbiBoaXMgdGVhbSBwdXQgZG93biB0aGUgY2hpcHM6ICQxMiwwMDAuIAogU28gaWYgdGhlcmUncyBhIHRlbnNpb24gaW4gdGhlIHBhcnR5LCBpdCdzIGhvdyBkbyB5b3UgbWFpbnRhaW4gdGhhdCBtYWpvcml0eT8iLiAKSG9uZXN0bHksIEkgbm90IGludGVyZXN0ZWQgaW4gYmFsYW5jZS4gCktlbm5ldGggTXV0aCwgb2YgVGh1cm1vbnQsIE1hcnlsYW5kLCBzcGVudCBTdW5kYXkgdnZpdGggTXIuIApEb24gbGV0IHRoZSBmdWVsIHRhbmsgc2l0IG5lYXIgZW1wdHkgaXMgc29tZXRoaW5nIG15IGRhZCB0YXVnaHQgbWUuIE5vdCBzdXJlIGhvdyB0aGlzIGZhY3RvcnMgaW4gYnV0IEkgZ2VuZXJhbGx5IHRyeSBub3QgdG8gcGFyayBpdCBkdXJpbmcgdGhlIGNvbGQgcGVyaW9kcyB3aXRoIGxlc3MgdGhhbiBhIHF1YXJ0ZXIgdGFuay4KSWYgeW91IGFjY2VwdCBhIHllYXIncyBwYXltZW50LCB0aGVuIHlvdSBiYXNpY2FsbHkgY2FuJ3QgZ2V0IHJpZCBvZiB0aGVtIGZvciBhIHllYXIuIApBc2hrZW5hemkgYXNzdW1lcyBoaXMgcm9sZSBGZWIuIDEgYW5kIHdpbGwgYmUgcmVzcG9uc2libGUgZm9yIGFsbCBjdXN0b21lciBmYWNpbmcgcHJvZHVjdCBhbmQgYmFjayBvZmZpY2UgZnVuY3Rpb25zIGZvciBQb2tlclN0YXJzIGFuZCBGdWxsIFRpbHQgUG9rZXIgaW5jbHVkaW5nIG1hcmtldGluZywgY3VzdG9tZXIgc3VwcG9ydCwgcG9rZXIgcm9vbSBtYW5hZ2VtZW50LCBJVCBtYW5hZ2VtZW50LCBwYXltZW50IHByb2Nlc3Npbmcgc2VjdXJpdHksIGFuZCBnYW1lIGludGVncml0eS4gCkl0J3Mgbm90IHlvdS4gCldoaWxlIHlvdSBhcmUgZm9jdXNpbmcgb24gYSByb3VuZCB0YWJsZSwgeW91IG11c3QgYWxzbyB1bmRlcnN0YW5kIHRoYXQgdGhlcmUgYXJlIG1hbnkgZGlmZmVyZW50IHNpemVzIGFuZCBkZXNpZ25zIGF2YWlsYWJsZSB0b2RheS4gCkl0IGRvZXMgbm90IGhhdmUgdGhlIHNhbmRib3hpbmcvYWNjZXNzIGNvbnRyb2wgdGhhdCBmbGF0cGFrIGhhcyBidXQgaXMgaXQgcmVhbGx5IGEgZ29vZCBpZGVhIHRvIGJpbmQgYWNjZXNzL3Blcm1pc3Npb24gY29uZmlndXJhdGlvbiB3aXRoIGEgcGFja2FnZSBtYW5hZ2VyPyAuIApEVUdHQU4sIEpvaG4gSm9zZXBoIEpvaG4gcGFzc2VkIGF3YXkgcGVhY2VmdWxseSBvbiBGcmlkYXksIE9jdG9iZXIgOCwgMjAxMCBhdCB0aGUgSGFsZGltYW5kIFdhciBNZW1vcmlhbCBIb3NwaXRhbCwgRHVubnZpbGxlLCBpbiBoaXMgNjB0aCB5ZWFyLiBMb3ZpbmcgaHVzYmFuZCBvZiBKdWR5IGZvciAzNiB5ZWFycy4gCktubnRlIFNpZSBpbiBlaW4gRHV0emVuZCBCcnRjaGVuIE1pdCBGcmlzY2hrc2UgenUgd2VyZmVuPy4gCklmIGl0IGhlbHBzIGFueSwgcGxlbnR5IG9mIHBlb3BsZSBnbyB0aHJvdWdoIHRoZSBzYW1lIHRoaW5nLiBJIHdlbnQgdGhyb3VnaCB0aGlzIHdoZW4gYSBiZiBmcm9tIG15IHBhc3QgY2hlYXRlZCBvbiBtZS5IZSBkaWRuIHNlZW0gdG8gYmUgYWZmZWN0ZWQgd2hlbiB3ZSBicm9rZSB1cC4gCklmIHlvdSBhcmUgc3VmZmVyaW5nIGZyb20gcGxhbnRhciBmYXNjaWl0aXMsIGV2ZXJ5b25lIHdpbGwgdW5kZXJzdGFuZCB5b3VyIGNvbXBsYWludHMgYWJvdXQgdGhlIHBhaW4gaW4geW91ciBmZWV0LiBUaGUgZ29vZCBuZXdzIGZvciB5b3UgaXMgdGhhdCB5b3UgZG8gbm90IGhhdmUgdG8gc3VmZmVyIGxvbmcgZnJvbSB0aGUgcGFpbiBhbmQgdGhlIGRpZmZpY3VsdHkgaW4gd2Fsa2luZyB0aGF0IHRoaXMgY29uZGl0aW9uIGlzIGdpdmluZyB5b3UuIFdpdGggYSBzaW1wbGUgbWFzc2FnZSwgeW91IGNhbiBiZSByZWxpZXZlZCBvZiB0aGUgcGFpbiB5b3UgYXJlIHN1ZmZlcmluZyBmcm9tLiBTbyBoZXJlLCB0YWtlIG5vdGUgb2YgdGhlc2UgbWFzc2FnZSB0aXBzIHNvIHlvdSBjYW4gdXNlIHRoZW0gd2hlbiBwbGFudGFyIGZhc2NpaXRpcyBpcyBhdHRhY2tpbmcgeW91ciBmb290IGFnYWluOgpLZXZpbiBIYXJ0IGdvb2Qgb3IgYmFkClRoZSBnYW1ibGluZyBoYXBweSB0aGVzcCB0b29rIHRvcCBob25vcnMgYXQgdGhlIENhbGlmb3JuaWEgU3RhdGUgUG9rZXIgQ2hhbXBpb25zaGlwIFN1bmRheSwgYmVzdGluZyBhIGZpZWxkIG9mIDkwIHBsYXllcnMgYW5kIHBvY2tldGluZyBhICQzNTYsNDAwIHB1cnNlLgpDbGV2ZWxhbmQgd2lsbCBhbHdheXMgYmUgaG9tZSwgYW5kIG15IGlkZW50aXR5IGlzIGZ1bGx5IGxpbmtlZCB0byBORSBvaGlvLCBidXQgZGFtbi4gVGhlcmUgaXNuIG1hbnkgcGxhY2VzIGluIHRoZSB3b3JsZCBuaWNlciB0aGFuIHNvdXRoZXJuIGNhbGkudGhlbiBpIHRyeSB0byBkcml2ZSBvbiBpIDUgb3IgdGFsayB0byBwZW9wbGUgYWJvdXQgbm9ybWFsIHBlb3BsZSB0aGluZ3MgaW4gc29jYWwsIGFuZCBpIHJlbWVtYmVyIHdoeSBJIHN0aWxsIGxvdmUgQ2xldmVsYW5kIGxvbC5TbyB0aGlzIGhhcHBlbmVkIGFsbW9zdCAxMCB5ZWFycyBhZ28gYW5kIGkgcmVtZW1iZXIgbW9zdCBldmVudHMgbGlrZSBpdCB3YXMgeWVzdGVyZGF5LiBJIHdlbnQgdG8gYSBzbWFsbCBydXJhbCBzY2hvb2wgaW4gQ2FuYWRhIGlmIHlvdSB0aGluayBzb21ldGhpbmcgaXMgb2ZmIGFib3V0IHRoZSBzdG9yeS5JIHdhcyB5b3VyIGF2ZXJhZ2UgZ3V5LiAKVGhlIG9wcG9ydHVuaXN0aWMgc3RyZWFrIGluIHRoaXMgbmV3IEVuZ2xhbmQgd2FzIG5vdyBiZWluZyBmdWxseSB0ZXN0ZWQuIApGb2N1cyBPbiBTb3V0aCBGbG9yaWRhOiBPbmUgT24gT25lIFdpdGggRWR1YXJkbyBQYWRyb25Eci4gRWR1YXJkbyBQYWRyb24gam9pbnMgRm9jdXMgb24gU291dGggRmxvcmlkYSBob3N0IFJ1ZGFiZWggU2hhaGJhemkgdG8gZGlzY3VzcyBoaXMgZGVjaXNpb24gdG8gc3RlcCBkb3duIGFzIFByZXNpZGVudCBvZiBNaWFtaSBEYWRlIENvbGxlZ2UgYW5kIHJldGlyZS4KQW1lcmljYSBpcyBtb3JlIGRpZmZpY3VsdCB0byBsb2NhdGUuIEl0IGlzIG9idmlvdXNseSB0aGUgcmVzdWx0IG9mIGEgdmFyaWV0eSBvZiByZWxpZ2lvdXMgdHJhZGl0aW9ucyBlbXBoYXNpcyBvbiBtYXJyaWFnZSwgYnV0IGlmIHRoYXQgd2VyZSBhbGwgaXQgd2VyZSwgdGhlbiB0aGUgc3RhdGUgd291bGRuIGhhdmUgYWxsb3dlZCBkaXZvcmNlIHRvIGJlY29tZSBzbyBlYXN5LiBJdCBpcyB0aGUgcmVzdWx0IG9mIGNlcnRhaW4gcmFjaWFsIGhpZXJhcmNoaWVzICB3aGl0ZSBwZW9wbGUgbWFycnkgYXQgYWxtb3N0IHR3aWNlIHRoZSByYXRlIG9mIEFmcmljYW4gQW1lcmljYW5zIGFuZCB0aGlzIGlzIG9mdGVuIHVzZWQgdG8gcHJpdmlsZWdlIHdoaXRlIGZhbWlsaWVzIGFzIG9wcG9zZWQgdG8gdGhlICJwYXRob2xvZ2ljYWwiIGFuZCAibWF0cmlhcmNoYWwiIGJsYWNrIGZhbWlsaWVzLgpOb2dsZSByIHRpbGJhZ2Ugc2FkIGplZyBzZWx2IHNvbSBmb3JzZ3NrYW5pbiB1bmRlciBtaW4gRGFuc2sgQSBla3NhbWVuIHAgSEYgZm9yIGVuIGVrc2FtZW5zbW9kZWwsIHNvbSBsb2Qgb3MgYnJ1Z2UgaW50ZXJuZXR0ZXQgcHJjaXN0IHNvbSB2aSB2aWxsZSAgIGVuZXN0ZSByZWdlbCB2YXIsIGF0IHZpIGlra2UgbXR0ZSBrb21tdW5pa2VyZSBtZWQgb212ZXJkZW5lbi4gWW91VHViZSwgRmFjZWJvb2ssIEdvb2dsZSwgU3R1ZGllcG9ydGFsZW4sIHdoYXRldmVyIHNpZGVyIGR1IGdpayBpbmQgcCB2YXIgZnJpdCBzcGlsLiBKZWcgdmFyIHBpc3NlIGZvcnZpcnJldCBvbSwgaHZvcmRhbiBmYW5kZW4gZGUgdmlsbGUgZmFuZ2Ugc255ZGVyZSBtZWQgZGVuIHR5cGUgZWtzYW1lbi4KTWFpIHN0YXR0ZmluZGVuIHVuZCB1bSAxOC4zMCBVaHIgQ2hpY2Fnb2VyIFplaXQgYmVnaW5uZW4uIERpZSAgIGhhYmVuIGhpZXJiZWkgZGllIE1nbGljaGtlaXQsIHNpY2ggZWluZW4gUGxhdHogZnIgZGFzIEZyZWVyb2xsICAgTWFpbiBFdmVudCBhbSAzMC4gCkkgY29udmluY2VkIHRoYXQgdGhlIG1hZ2UgaXMgdGhlIG1vc3QgZGlmZmljdWx0IGNsYXNzIGluIHRoZSBnYW1lLiBUaGUgd2FycmlvciBoYXMgaGlzIGJhZGdlIGFuZCBnZXRzIGhlYWxlZCBieSBlYXRpbmcgZm9vZCwgaHVudHJlc3MgaGFzIGhlciBib3csIGFuZCB0aGUgcm9ndWUgaGFkIGhpcyBjbG9hay4gVGhlIG1hZ2Ugbm90IG9ubHkgZG9lc24gaGF2ZSBhbnkgc3BlY2lhbCBpdGVtLCBidXQgaXQgc2V2ZXJlbHkgbGltaXRlZCBpbiB0aGUgZWFybHkgZ2FtZS4gRXhjZXB0IGlmIHlvdSBmaW5kIGFuIGV4dHJhIHdhbmQgb24gdGhlIGVhcmx5IGxldmVscy4KSWYgeW91IGRvIHJlYWQgaXQgSSB0aGluayBpdCB3aWxsIGdpdmUgeW91IGEgZGlmZmVyZW50IHBlcnNwZWN0aXZlLiAKIlRoZSB0aGluZyBpbnNpZGUgbWUgdGhhdCBkcml2ZXMgbWUgdG8gZ28gb3V0IGFuZCBodW50IGlzIHZlcnkgYW5pbWFsLiAKSW4gZmFjdCB0b290aHBhc3RlcyBjb250YWluIHNvYXAgICBuYW1lbHksIHNvZGl1bSBsYXVyeWwgc3VsZmF0ZSAgIGJlY2F1c2UgaXQncyBub3QgY2xlYW4gdW5sZXNzIGl0J3MgZm9hbXkhIEJ1dCBzb2FwIGFsc28gaGVscGVkIG1haW50YWluIGFuIGV2ZW4sIGNyZWFteSB0ZXh0dXJlLiBXZSBnZXQgdGhpcyBzbW9vdGggdGV4dHVyZSB0b2RheSB3aXRoIGh1bWVjdGFudHMgbGlrZSBzb3JiaXRvbCwgZ2x5Y2VyaW4gYW5kIHByb3B5bGVuZSBnbHljb2wsIHdoaWNoIGhhdmUgdGhlIGFkZGVkIGJvbnVzIG9mIGJlaW5nIGEgbGl0dGxlIHN3ZWV0Li4gClRoZSBvcHBvc2l0aW9uIGZvciBteSBsYXN0IHJhbGx5IHdhcyBTREEgaWYgaSByZW1lbWJlcmVkIGNvcnJlY3RseSwgb3Igc29tZSBEZXNtb25kIGd1eSB3YXMgaW5zaWRlIHRoZSByYWxseS4gKEkgc2F3IGhpbSBhdCBwYXNpciByaXMgY29mZmVlc2hvcCB0cnlpbmcgdG8gc2hha2UgcmVzaWRlbnQgaGFuZHMsIGkgbWFkZSBpdCBhIHBvaW50IHRvIHN0YXkgYXdheSBmcm9tIGhpbSksIGhlIHdhcyB0aGUgY2xvd24gdGhhdCBjb250ZXN0ZWQgaW4gYSAzIHdheSBTTUMgdGhhdCBjYXVzZWQgdm90ZXMgdG8gc3BsaXQuLiAKSSBjb25jdXIhIFRoZXJlIGFyZSBzbyBtYW55IHNpdHVhdGlvbnMgb3V0IHRoZXJlIHdoZXJlIGEgc3BvdXNlIGZlZWxzIGxpa2UgdGhleSBNVVNUIHRha2UgZnVydGhlciBtZWFzdXJlcyB0byBlYXNlIHRoZWlyIG1pbmQgYW5kIGhlbHAgdGhlbXNlbHZlcy4gT25lIG1heSBzdXNwZWN0IHRoZWlyIHNwb3VzZSBpcyBhIGRydWcgYWRkaWN0IGFuZCBpdCB3b3VsZCBoYXZlIGNvbnRpbnVlZCBvbiB0aGF0IHdheSBpZiB0aGV5IGRpZCBub3Qgc25vb3Agb3IgZG8gZnVydGhlciBpbnZlc3RpZ2F0aW5nLiBPciwgYSBzcG91c2UgaXMgZG9pbmcgc29tZXRoaW5nIGlsbGVnYWwgYW5kIHRoZSBvdGhlciBzcG91c2UgcmVwb3J0cyB0aGVtIHRvIHRoZSBsYXcuIFRoZSBjb3Vuc2xlciwgcG9saWNlIG9mZmljZXIsIHdob2V2ZXIgYXJlIG5vdCBndWlsdHkgZm9yIGRvaW5nIHRoZWlyIGpvYiwgdGhleSBhcmUgc2ltcGx5IGhpcmVkIHRvIGFzc2lzdCBhIHByb2JsZW0uIFRoaXMgcHJvYmxlbS9saWUgd2hhdGV2ZXIgbWF5IGJlIGVmZmVjdGluZyBhIHdob2xlIGZhbWlseSAoa2lkcykuIEkgY2FuIHNlZSB0aGVyZSBiZWluZyBhbiBpc3N1ZSB3aXRoIHRoaXMgc2l0dWF0aW9uIGlmIGEgc3BvdXNlIGlzIG5vdCBjaGVhdGluZywgYW5kIHRoZW4gdGhlIHdpZmUgYWRtaXRzIHRoYXQgc2hlIGhpcmVkIHNvbWVvbmUgdG8gY29uZmlybS4gVGhpcyBtYXkgcHV0IHRydXN0IGlzc3VlcyBpbnRvIHRoZSBoZWFkIG9mIHRoZSBodXNiYW5kIHRoYXQgd2VyZSBub3QgdGhlcmUgYmVmb3JlLiBPciwgdGhlIGh1c2JhbmQgY291bGQganVzdCBzbyBoYXBwZW4gdG8gdHVybiBkb3duIHRoZSBQSSB0aGF0IG5pZ2h0OyBwZXJoYXBzIHNoZSBub3QgaGlzIHR5cGUuIFNvLCB0aGlzIG1ldGhvZCBpcyBub3QgZm9vbCBwcm9vZi4gSSBiYXNpY2FsbHkgZGlkIG5vdCBhZ3JlZSB0byBwZW9wbGUgYmFzaGluZyBPUCBmb3IgaGVyIGNhcmVlciBjaG9pY2U7IHNoZSBzaW1wbHkgZ2V0dGluZyBwYWlkIHRvIGRvIGEgam9iLgpPZnRlbiwgMjAgbWludXRlcyBpcyBleGFjdGx5IHdoYXQgaXQgdGFrZXMgZm9yIG1lIHRvIGNvbWUgZG93biBmcm9tIHdoYXQgY291bGQgaGF2ZSBiZWNvbWUgeWVsbGluZyBhdCBoZXIgdG8gYSBtb3JlIGNsZWFyIGhlYWRlZCBzdGF0ZSBvZiBtaW5kLi4gClVzZSB5b3VyIHRodW1iIHRvIHByZXNzIGluIGFsbCBvdmVyIHRoZSBiYXNlIG9mIHRoZSBmb290Li4gClRoZSBxdWFsaXR5IHNjb3JlIHdhcyA1NiBwb2ludHMuIFNNVCBhZGRlZCB0byBtYXNzYWdlIGRpZCBub3QgaW1wcm92ZSBlcGlzb2RpYyB0ZW5zaW9uIHR5cGUgaGVhZGFjaGVzLlRoZXJlIHdhcyBvbmUgUkNUICg1MyBwYXRpZW50cykgb2YgU01UIHZlcnN1cyBtYXNzYWdlIGZvciBjZXJ2aWNvZ2VuaWMgaGVhZGFjaGUuIFRoZSBxdWFsaXR5IHNjb3JlIHdhcyA2NyBwb2ludHMuIFRoZXJlIHdhcyBtb2RlcmF0ZSBldmlkZW5jZSB0aGF0IFNNVCBpcyBiZXR0ZXIgdGhhbiBtYXNzYWdlIGZvciBjZXJ2aWNvZ2VuaWMgaGVhZGFjaGUuVGhlIHNlbnNpdGl2aXR5IGFuYWx5c2lzIHNob3dlZCB0aGF0IHRoZSBjb25jbHVzaW9ucyByZW1haW5lZCB0aGUgc2FtZSB3aGVuIGRpZmZlcmVudCBjcml0ZXJpYSB3ZXJlIHVzZWQgdG8gY2xhc3NpZnkgdGhlIGxldmVsIG9mIGV2aWRlbmNlIGFuZCB0byBhc3Nlc3MgZWZmaWNhY3kuSW4gMiBSQ1RzIG9mIFNNVCB2ZXJzdXMgYW1pdHJpcHR5bGluZSwgYWR2ZXJzZSBlZmZlY3RzIHdlcmUgcmVwb3J0ZWQgYnkgbW9yZSB0aGFuIDUwJSBvZiB0aGUgcGF0aWVudHMgb24gYW1pdHJpcHR5bGluZSAoZHJvd3NpbmVzcywgZHJ5IG1vdXRoLCB3ZWlnaHQgZ2FpbikgY29tcGFyZWQgd2l0aCA1JSBvZiB0aG9zZSBvbiBTTVQgKG1vc3QgY29tbW9ubHkgbXVzY2xlIHNvcmVuZXNzIGFuZCBuZWNrIHN0aWZmbmVzcykuIApJZiB5b3Ugc2F5aW5nICJjdXJyYXdvbmcgZmFtaWx5IiB5b3UgcmVmZXJyaW5nIHRvIHRoZSB0YXhvbm9taWMgZ3JvdXBpbmcgb2YgQXJ0YW1pZGFlOiwgd2hpY2ggaW5jbHVkZXMgdGhpbmdzIGZyb20gYnV0Y2hlcmJpcmRzLCBjdXJyYXdvbmdzLCBtYWdwaWUgd29vZHN3YWxsb3dzLgpBdWZsYWdlLiAKSXQgZ2l2ZXMgeW91IHJlYWxseSBtdWNoIG9wdGlvbnMgdG8gbm90IG9ubHkgaGlkZSBwaWN0dXJlcyBpbiBhcHBsaWNhdGlvbiB0aGF0IGlzbiBnYWxsZXJ5IHdoaWNoIHdvdWxkIGJlIG9idmlvdXMsIGl0IGFsc28gZ2l2ZXMgeW91IG9wdGlvbiB0byBjYW1vZmxhdWdlIHRoZSBhcHAsIGJ5IG1ha2luZyBpdCBsb29rIGxpa2UgYSBhbnRpdmlydXMgb3IgYSBjYWxjdWxhdG9yLiBUaGlzIHNob3VsZCBkbyB0aGUgdHJpY2sgd2l0aCBhbnkgcGhvdG9zIS4gClNvIEkgdG9vayB0aGF0IG1vbmV5IGFuZCBwYWlkIGl0IGZvcndhcmQgdG8gYSBkb2cgcmVzY3VlIGluIEl0YWx5IEkgc2F3IG9uIHJlZGRpdCB0b2RheS4gQWxsIHRoaXMgc2VlbXMgcmVsZXZhbnQgbm93IHNlZWluZyB0aGlzIHBvc3QsIGFuZCB0aGF0IG90aGVyIHBvc3QgZnJvbSBlYXJsaWVyLiAKTGF0ZXIgdGhhdCBzdW1tZXIsIG15IGZyaWVuZCBSYW5keSBhbmQgSSBjYXVnaHQgYSBidW5jaCBvZiBnYXJkZW4gc25ha2VzLiAKSSBhbHNvIHByZXR0eSBjb25maWRlbnQganVzdGljZSB3aWxsIHJlYXNzZXJ0IGl0c2VsZiBvdmVyIHRoaXMgbW9zdCByZWNlbnQgY291cCBhbmQgYSBzb3J0IG9mIG5vcm1hbGN5IHdpbGwgYmUgcmVlc3RhYmxpc2hlZCwgYXQgbGVhc3QgaW4gZ292ZXJubWVudC4KSGUgc3RhdGVkIHRoYXQgdGhlIHByZXNlbmNlIG9mIGdsdXRlbiBpbiB0aGUgZGlldCwgZXZlbiB3aXRoIGEgZ2VuZXRpYyBwcmVkaXNwb3NpdGlvbiwgaXNuJ3QgZW5vdWdoIHRvIGNhdXNlIHZpbGxvdXMgYXRyb3BoeSAoaW50ZXN0aW5hbCBkYW1hZ2UpIHVubGVzcyB0aGVyZSBpcyBhbHJlYWR5IHNvbWUgaW5mbGFtbWF0aW9uIHByZXNlbnQgaW4gdGhlIGludGVzdGluZS4uIApXaGVuIG1vcmUgaW52ZXN0b3JzIGFuZCBjb21wYW5pZXMgd2FudCB0byBidXkgbG9uZyB0ZXJtIGJvbmRzLCB0aGUgcHJpY2UgZ29lcyB1cCBhbmQgdGhlIHlpZWxkIGdvZXMgZG93bi4gCiJUaGUgaHlwZXJ2aXNpYmlsaXR5IG9mIE11c2xpbXMgaGFzIGJlY29tZSBhIHRvcGljIG9mIG5hdGlvbmFsIGRlYmF0ZSBhbmQgd2UgbmVlZCB0byB1bmRlcnN0YW5kIHRoZSBtZWRpYSdzIHJvbGUgaW4gc2VjdXJpbmcgdGhpcyBjbGltYXRlIG9mIGZlYXIuIEFueSB2aXN1YWwgaW5kaWNhdG9yIG9mICdNdXNsaW1uZXNzJyBpcyBub3cgYXJndWVkIHRvIGhhdmUgbm8gcGxhY2UgaW4gY29udGVtcG9yYXJ5IHNvY2lldHkuIlRoaXMgaXMgbm90IHRvIHNheSB0aGF0IE11c2xpbSB3b21lbiBhcmUgbm90IGNlbGVicmF0ZWQuIFRoZXkgYXJlIGNyZWF0aW5nIHZpc2liaWxpdHkgYW5kIHNwYWNlIGZvciB0aGVtc2VsdmVzICAgbm90IGp1c3QgZmlnaHRpbmcgZm9yIGFja25vd2xlZGdlbWVudCwgYnV0IGJ1aWxkaW5nIHRoZWlyIG93biBzdGFnZXMgYW5kIGhpcmluZyB0aGVpciBvd24gbWljcyB0byBhZmZpcm0gdGhlbXNlbHZlcyBhbmQgdGhlaXIgcGVlcnMuIApUaGlzIGp1c3QgcmVtaW5kZWQgYWJvdXQgc29tZXRoaW5nIG15IGh1c2JhbmQgYW5kIEkgZGlkIGxhc3QgeWVhci4gCktlZXAgYmVpbmcgYSByZWFzb25hYmxlIGFuZCBzYW5lIHZvaWNlLiBOb3QgZXZlcnkgaXNzdWUgaGFzIHR3byByZWFzb25hYmxlIHNpZGVzLCBidXQgZ3VuIG93bmVyc2hpcCBzaG91bGQgYmUgb25lIG9mIHRoZW0sIGFuZCBpdCBwZW9wbGUgbGlrZSB5b3Ugd2hvIG5lZWQgdG8gYmUgaGVhcmQgb24gdGhlIHBybyBndW4gc2lkZS4KRG9lcyB0aGUgam9iIGZlZWwgc3RyZXNzZnVsPyBZZXAuIApTZXR0aW5nIGFzaWRlIGl0cyBhZGRpY3RpdmUgcXVhbGl0aWVzLCBjaGFyaXR5IGdhbWJsaW5nIGhhc24ndCBwcm92ZW4gdG8gYmUgYSBwcm9ibGVtIGZvciBwb2xpY2UgaW4gb25lIEdlbmVzZWUgQ291bnR5IGNvbW11bml0eS4gTHVja3kncyBQb2tlciBSb29tIG9wZXJhdGVzIG9uIE4uIEdlbmVzZWUgUm9hZCwgbGVzcyB0aGFuIGEgbWlsZSBmcm9tIHRoZSBHZW5lc2VlIFRvd25zaGlwIHBvbGljZSBzdGF0aW9uLiAKQmVrZGFzaCdzIGluZmx1ZW5jZSBpbiBQYXJsaWFtZW50IGlzIGV4cGVjdGVkIHRvIGJlIGxhcmdlbHkgbmVnYXRpdmUuIApJZiBkZWFsaW5nIHdpdGggSW5mZXJuYWxzIHlvdXIgVGFuayBzaG91bGQgYWx3YXlzIHRhdW50IG9uZSBvZiBlbSB0byB0aGUgQm9zcyBzbyB1IGNhbiBjbGVhdmUgdGhlbSBEb3duIGFuZCBoYXZlIHRoZSByZXN0IGJlIGtpdGVkIGJ5IGEgbWFnZS9odW50ZXIuIApNb3N0IHBva2VyIHJvb21zIGhhdmUgYSBwbGFjZSB0byBzaWduIGEgd2FpdGluZyBsaXN0IGZvciBhIHBhcnRpY3VsYXIgZ2FtZS4gU29tZSBoYXZlIGEgd2hpdGUgYm9hcmQgd2l0aCB0aGUgZ2FtZXMgYW5kIGxpbWl0cyBhdmFpbGFibGUgYWxvbmcgd2l0aCB0aGUgd2FpdGluZyBwbGF5ZXJzJyBpbml0aWFscy4gT3RoZXJzIHdpbGwganVzdCBoYXZlIHNvbWVvbmUgd2hvIHdyaXRlcyBpbml0aWFscyBvciBuYW1lcyBvbiBhIHNoZWV0IG9mIHBhcGVyLiAKTUJTIGlzIHJlc3BvbnNpYmxlIGZvciB0aGUgZGVhdGggb2YgYW4gQW1lcmljYW4gam91cm5hbGlzdC4gClRoZSBvdGhlciBvbmVzOiBHZW9yZ2lhIFN0YXRlICgwIDQpIHZpc2l0cyBBbGFiYW1hLCB3aGljaCBzdXNwZW5kZWQgQWxsIEFtZXJpY2FuIHNhZmV0eSBIYSBIYSBDbGludG9uIERpeCBmb3IgdW5zcGVjaWZpZWQgdGVhbSBydWxlcyB2aW9sYXRpb25zLCBzbyBpZiB5b3UgdG9vayB0aGUgVGlkZSBtaW51cyA1NiAuIHlvdSdyZSBwcm9iYWJseSBzdGlsbCBnb29kLiBXYW50IHRvIGJldCBoZSdzIGJhY2sgaW4gdGhlIGxpbmV1cCBieSBOb3YuIDk/IExTVSBoZWFkcyB0byBNaXNzaXNzaXBwaSBTdGF0ZSwgd2hpY2ggaXMga25vd24gdG8gcGxheSBkZWZlbnNlIG9jY2FzaW9uYWxseSwgYW5kIHRoaXMgbWlnaHQgYWZmZWN0IHRoZSBvdXRjb21lLCBidXQgbm90IHJlYWxseTsgS2VudHVja3kgdHJhdmVscyB0byBTb3V0aCBDYXJvbGluYSwgd2hpY2ggaGFzIGFubm91bmNlZCB0aGF0IHNob3VsZGVyIGluanVyZWQgUUIgQ29ubm9yIFNoYXcgd2lsbCBzdGFydCBhbmQgcGxheSBzb21lLCBwcm9iYWJseSBub3QgdG9vIG11Y2ggYmVjYXVzZSwgYWZ0ZXIgYWxsICBpdCdzIEtlbnR1Y2t5LgpCdXQgbm93LCB0aGUgbGlnaHRzIGFuZCBzb3VuZHMgY2FuIGNvbWUgZnJvbSB5b3VyIG93biBkZXNrdG9wIGNvbXB1dGVyIG9yIGxhcHRvcC4gCkZvciBhIGdhbWUgd2l0aCB0aHJlZSBvciBtb3JlIHBsYXllcnMsIGRlYWwgdGhlIGVudGlyZSBkZWNrIG91dCB0byB0aGUgcGFydGljaXBhbnRzLiBJZiB0aGVyZSBhcmUgYW55IGV4dHJhIGNhcmRzLCBwdXQgdGhlbSBvZmYgdG8gdGhlIHNpZGUuCldoYXQgdGhlIGhlYXJ0IHRoaW5rcywgaXMgdGhlIG1hbi4gCkkgYW0gdW5zdXJlIGlmIGl0IHdpbGwgYWxzbyB3b3JrIHdpdGggYSBmdXNpb24gYnV0IGRlZmluaXRlbHkgY29uc2lkZXIgc3BlYWtpbmcgd2l0aCB5b3VyIERvY3RvciBhYm91dCBpdC5EZXBlbmRpbmcgb24gdGhlIG1vdmVtZW50cyBvZiBQaWxhdGVzIHlvdXIgRG9jdG9yIG1heSBzYXkgY2VydGFpbiBtb3ZlbWVudHMgc2hvdWxkIGJlIGF2b2lkZWQuIEJ1dCBJIGhvcGUgeW91IGZpbmQgcmVsaWVmIHNvb24gc28geW91IGNhbiBnZXQgYmFjayB0byBkb2luZyB3aGF0IHlvdSBsb3ZlLiAKVGhlcmUncyBDb2FjaCwgQXBwbGUsIGV2ZW4gYSBzaG9lIHJlcGFpciBwbGFjZSBhbmQgYSB0YWlsb3IuIFJlbm92YXRpb25zIGluIDIwMTIgYnJvdWdodCBTb3V0aGRhbGUncyBsb29rIGludG8gdGhlIG1vZGVybiBlcmEgYW5kIGFkZGVkIG5ldyB0ZW5hbnRzIGluY2x1ZGluZyBhIFNtYXNoYnVyZ2VyICh3aGljaCBpcyBwYXJ0IG9mIHRoZSBtYWxsJ3MgRGluaW5nIFBhdmlsaW9uLCBubyBtZXJlIEZvb2QgQ291cnQgaGVyZSkuIEFzIHlvdSB3YWxrIGl0cyB0ZW1wZXJhdHVyZSBjb250cm9sbGVkIGVudmlyb25zLCB0aGFuayB5b3VyIGhhcmR5IE1pbm5lc290YW4gZm9yYmVhcnMgZm9yIHRoZWlyIGludmVudGl2ZW5lc3MuLiAKTGFzdCBxdWVzdGlvbiBhcyB5b3UgYXJlIGFuIGlQaG9uZSB1c2VyLCB3aGF0IGRvIHlvdSB0aGluayBhYm91dCB0aGUgb3ZlcmFsbCBleHBlcmllbmNlID8gSXMgaXQgYXMgZWFzeSBhcyBpUGhvbmUgZm9yIGJhc2ljIHN0dWZmID8gT3IgSSBhbSBnb25uYSBtaXNzIHRoZSBzd2lwZSBtb3ZlbWVudCBzbW9vdGhuZXNzIHRvbyBtdWNoID8gQW5kIEkgaGVhcmQgYWJvdXQgaXQgYmVpbmcgbGFnZ3kgPyBXaGF0J3MgeW91ciBkYXkgdG8gZGF5IGV4cGVyaWVuY2Ugb24gdGhpcwpTb3R1ICAyIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KV2F0dHMsIDMzLCBpcyBjdXJyZW50bHkgc2VydmluZyBtdWx0aXBsZSBjb25zZWN1dGl2ZSBsaWZlIHNlbnRlbmNlcyBmb3Iga2lsbGluZyBoaXMgd2lmZSwgU2hhbmFubiwgMzQsIGFuZCB0aGUgY291cGxlJ3MgdHdvIGRhdWdodGVycywgNCB5ZWFyIG9sZCBCZWxsYSBhbmQgMyB5ZWFyIG9sZCBDZWxlc3RlLCBhbmQgZGlzcG9zaW5nIG9mIHRoZWlyIGJvZGllcyBpbiBhIHJ1cmFsIFdlbGQgQ291bnR5IG9pbCBmaWVsZCBpbiBBdWd1c3QuClN1Y2ggbnVtYmVycyBkbyBub3QgZG8gdGhlIHJlYWxpdHkgb2YgdGhlIEh1YmJhcmQgR2xhY2llciBqdXN0aWNlLiBIdW5kcmVkcyBvZiBwYXNzZW5nZXJzIGVtZXJnZSBvbiB0aGUgZGVja3MgdG8gYnJhdmUgdGhlIGZyZWV6aW5nIHdpbmRzIGFuZCByYWluICAgd2Ugb25seSA2NDBrbSBmcm9tIHRoZSBBcmN0aWMgQ2lyY2xlIGFmdGVyIGFsbCAgIHRvIHNlZSBpdCB3aXRoIHRoZWlyIG93biBleWVzLgpGaXJzdCBvZmYsIG1hcmlqdWFuYSBpcyBhIFNjaGVkdWxlIEkgY29udHJvbGxlZCBzdWJzdGFuY2UgdW5kZXIgZmVkZXJhbCBsYXcsIHdoaWNoIG1lYW5zIHRoYXQgaXQgaXMgZ2VuZXJhbGx5IGlsbGVnYWwgYXQgdGhlIGZlZGVyYWwgbGV2ZWwgYW5kIGlzIGlsbGVnYWwgaW4gYWxsIDUwIHN0YXRlcy4gU2luY2UgZmVkZXJhbCBsYXcgaGFzIHN1cHJlbWFjeSBvdmVyIGFsbCBzdGF0ZXMsIHRoaXMgaWxsZWdhbGl0eSBtZWFucyB0aGF0IGl0IHRlY2huaWNhbGx5IG92ZXJyaWRlcyBib3RoIENPIGFuZCBXQSBzdGF0ZSBsYXdzIG1ha2luZyBtYXJpanVhbmEgaWxsZWdhbC4gU28geWVzLCBpdCBpcyB0ZWNobmljYWxseSBpbGxlZ2FsLiBIb3dldmVyLCB0aGlzIGlzIGV4Y2VwdGVkIGluIHByYWN0aWNlLiBDb25zZXF1ZW50bHksIGRlc3BpdGUgaXQgaWxsZWdhbGl0eSwgdGhlIGFjY2VwdGVkIHVzZSBhbmQgbGVnYWxpdHkgYXQgYSBzdGF0ZSBsZXZlbCBhbGxvd3MgY2FzZXMgaW4gdGhpcyByZWFsbSB0byBpbnRlcmFjdCB3aXRoIG90aGVyIGxlZ2FsIGRvY3RyaW5lcy4KU3R1ZGVudHMuIFRoZXJlIGlzIHNvbWV0aGluZyBzcGVjaWZpYyB0byBhZHZlcnNpdHkgYW5kIGhhdmluZyB0byBhZGFwdCB0byBsaXZpbmcgaW4gYSB3b3JsZCBub3QgaW5oZXJlbnRseSAidXNlciBmcmllbmRseSIgdGhhdCBtYW5pZmVzdHMgaW5kaXZpZHVhbHMgd2hvIGRvbiBhY2NlcHQgIk5vIiBvciAiQ2FuIGFzIGFuc3dlcnMgaWYgYSBkb29yIGlzIGNsb3NlZCB0byB0aGVtLiBJbnN0ZWFkLCB0aGV5IHNlZWsgdG8gc3VidmVydCB0aGUgZG9vciBhbHRvZ2V0aGVyIGFuZCBjcmVhdGUgdGhlaXIgb3duIHBhdGh3YXkvYWx0ZXJuYXRlIGRvb3IuIApVaXRsZWdnZW4gaG9lIGRlIG1ldHJvIHdlcmt0ZSwgaG9lZmRlIHplIGFsdmFzdCBuaWV0IG1lZXIgdGUgZG9lbi4gClBva2VyIGlzIGRlZmluaXRlbHkgb25lIG9mIHRoZSBtb3N0IHBvcHVsYXIgYm9hcmQgZ2FtZXMgaW4gdGhlIFVTQS4gCkFzIGZvciB0aGUgc3BlY2lmaWNzIG9mIHdoYXQgaGUgaXMgdHJ5aW5nIHRvIGdldCB0aHJvdWdoIHlvdXIgaGVhZCByZW1lbWJlciB0aGF0IGhlIGlzIHRoZSBib3NzIGFuZCBzb21ldGltZXMgeW91IG1heSBoYXZlIHRvIGRvIHNvbWV0aGluZyB5b3UgZG9udCBhZ3JlZSB3aXRoICh3aXRoaW4gYm91bmRhcmllcyBvZiBsZWdhbGl0eSwgZGVjZW50eSwgZXRjKSBzbyBpdCBtYXkganVzdCBiZSBhIGNhc2Ugb2YgbWFraW5nIHlvdXIgcG9pbnQgYW5kIGdldHRpbmcgb24gd2l0aCBpdC4gIkkgd2lsbCBkbyB4eXogYnV0IEkgZG9udCBhZ3JlZSB3aXRoIGl0IGFuZCBmZWVsIGl0IHdpbGwgcmVzdWx0IGluIGFiYyIuClNoZSB3YXMgY2FyZWQgZm9yIHdoZW4gc2hlIHdhbGtlZCBvZmYsIHNvIHdoeSBkaWQgaXQgbWF0dGVyIHRoYXQgeW91IGRpZG4gYXR0ZW5kIHRvIGdldCBwZXJzb25hbGx5PyBXaHkgaXMgc2hlIGNvbmNlcm5lZCB3aXRoIHlvdSB0YWxraW5nIHRvIE5hdGFsaWUgaW4gcGFydGljdWxhcj8gSWYgSSBoYWQgdG8gZ3Vlc3MsIHRoaXMgZmVlbHMgbGlrZSBqZWFsb3VzeS4gQSBmcmllbmQgaW52aXRlZCB5b3UgdG8gaGFuZyBvdXQgaW4gYSBncm91cCwgYW5kIGdvdCBpcnJpdGF0ZWQgd2hlbiB5b3UgZGlkIGp1c3QgdGhhdC4uIAoiSXQncyByYWlzZWQgdGhlIGJhciBmb3Igd2hhdCB3ZSBjYW4gb2ZmZXIuIiBNciBTYXJnZW50IHNhaWQgdGhlIGNsdWIncyByZXB1dGF0aW9uIGZvciBpdHMgbW9uc3RlciBtZWF0IHJhZmZsZXMgaGFkIG9wZW5lZCBvdGhlciBkb29ycy4gClVzYWdlIGlzIGFib3V0IGxldmVsLCBzYWlkIENsZXZlciwgc3RpbGwgdmVyeSBwb3B1bGFyLiBsZWFybmVkIHNvIG11Y2ggaW4gdGhlIHNob3J0IHRpbWUgd2UgdGFsa2VkLiBIZXJlIGFyZSBzb21lIG9mIENsZXZlciBtb3N0IGludGVyZXN0aW5nIG9ic2VydmF0aW9ucy4KRG96ZW5zIG9mIG1hc3NhZ2UgYnVzaW5lc3NlcyBpbiB0aGUgUGhpbGFkZWxwaGlhIHJlZ2lvbiBhcmUgbGlzdGVkIG9uIG9uZSB3ZWJzaXRlIFBvbGFyaXMgZGVzY3JpYmVkIGFzIGEgcG9wdWxhciByZWdpc3RyeSBmb3IgcGVvcGxlIHNlZWtpbmcgbWFzc2FnZSBwYXJsb3JzIHdoZXJlIHRoZXkgY2FuIHBheSBmb3Igc2V4LiBUaGUgc2l0ZSBtYXBzIG1hc3NhZ2UgcGFybG9ycyBhbmRhbGxvd3MgY3VzdG9tZXJzIHRvIGxlYXZlIHJldmlld3MgYWJvdXQgdGhlIGJ1c2luZXNzZXMgYW5kIHRoZSB3b21lbiBmcm9tIHdob20gdGhleSByZWNlaXZlIHNlcnZpY2VzLiAKU29ycnkgdGhhdCB5b3UgYXJlIG9mZmVuZGVkIGJ5IGJlaW5nIGNhbGxlZCB3aGF0IHlvdSBhcmUuLiAKKCBFdmVuIHRob3VnaCBidWlsZGluZyBhbiBhdmVyYWdlIHBsYXllciB3aWxsIGJlYXQgbW9zdCBvZiB0aGUgd2FubmFiZXMpLi4gCk5FTyBoYXMgYWxzbyB0byBpdHMgbGlzdGluZ3MgbWFudWFsIHRvIGVuY291cmFnZSBub21pbmF0aW5nIGFuZCBjb3Jwb3JhdGUgZ292ZXJuYW5jZSBjb21taXR0ZWVzIG9mIE5FTyBsaXN0ZWQgY29tcGFuaWVzIHRvIGNvbnNpZGVyIHRoZSBkaXZlcnNpdHkgb2YgdGhlIGJvYXJkIGNvbXBvc2l0aW9uIHdoZW4gbWFraW5nIHJlY29tbWVuZGF0aW9ucyBmb3IgbmV3IGJvYXJkIG1lbWJlcnMgb3IgZXhlY3V0aXZlIG9mZmljZXJzLiAKSSB3YXMgY29uZnVzZWQgYXMgZnVjayB3aGVuIHRoYXQgaGFwcGVuZWQuIEkgYXBwbGllZCBmb3IgYSBsb2FuIGZvciBhIGNhciBhbmQgd2FzIGRlbmllZCwgd2hlbiBJIGdvdCB0aGUgcGFwZXJ3b3JrIHRoZSByZWFzb24gbGlzdGVkIHdhcyB0aGF0IEkgd2FzIGxlZ2FsbHkgZGVhZC4gCkkgY2FuIGdvIGFoZWFkIGFuZCB0ZWxsIHlvdSB0aGF0IHlvdSBwcm9iYWJseSBkbyBOT1QgaGF2ZSBhIGJyYWluIHR1bW9yLiBJIHdlbnQgdG8gdGhlIGRvYyAzIHNlcGFyYXRlIHRpbWVzIHllYXJzIGFnbyB3aXRoIHN5bXB0b21zIGxpa2UgdGhhdC4gClBva2VyIGluIE1leGljbwpJdCBhcHBlYXJzIHRoZSB0d28gY2x1YnMgc3RydWNrIGEgY29tcHJvbWlzZSwgd2l0aCBQb3p1ZWxvIHNlZWluZyBvdXQgdGhlIHJlZ3VsYXIgc2Vhc29uIGluIEJlbGdpdW0gYnV0IG1pc3NpbmcgdGhlIHBsYXlvZmZzICAgd2l0aCBUb3JvbnRvIG5vIGRvdWJ0IHN3ZWV0ZW5pbmcgaXRzIG9mZmVyIHRvIGdldCBoaW0uLiAKQW5vdGhlciBlc3NlbnRpYWwgdGhpbmcgaW4gb25saW5lIHBva2VyIGlzIHRvIGhhbmRsZSB0aGUgYWdncmVzc2l2ZSBwbGF5ZXJzLiAKQlVUIGlmIHdlIGxvb2sgYXQgdGhlIGJhbmRzIHRoYXQgYWN0dWFsbHkgdHVybiBhIHByb2ZpdCAob25jZSBsYWJvciBhbmQgb3RoZXIgZXhwZW5zZXMgYXJlIHRhbGxpZWQpIHRoZW4gaXQgZ2V0cyB0cmlja3kuIApUaGUgb3RoZXIgYmVuZWZpdCBpcyB0aGF0IHdlaWdodCBsaWZ0aW5nIGJ1cm5zIG1hbnkgY2FyYm9oeWRyYXRlIGNhbG9yaWVzIHN0b3JlZCB3aXRoaW4gb3VyIG11c2NsZXMgYXMgZ2x5Y29nZW4uCkNocm9uaWMgcGFpbiBhZnRlciB0aGVzZSBldmVudHMgaXMgY29tbW9uIGFuZCBjYW4gY2F1c2UgZ3JlYXQgc3VmZmVyaW5nLCBhbmQgdGhlcmUgaXMgYW4gdXJnZW50IG5lZWQgdG8gdW5kZXJzdGFuZCB3aGF0IGNhdXNlcyBjaHJvbmljIHBhaW4gc28gdGhhdCB3ZSBjYW4gc3RhcnQgdG8gZGV2ZWxvcCBpbnRlcnZlbnRpb25zLiBUaGlzIHN0dWR5IGlzIGFuIGltcG9ydGFudCBmaXJzdCBzdGVwIGluIGRldmVsb3BpbmcgdGhpcyB1bmRlcnN0YW5kaW5nLiBBZGRpdGlvbiwgYmVjYXVzZSB3ZSBkb24gdW5kZXJzdGFuZCB3aGF0IGNhdXNlcyB0aGVzZSBvdXRjb21lcywgaW5kaXZpZHVhbHMgd2l0aCBjaHJvbmljIHBhaW4gYWZ0ZXIgdHJhdW1hdGljIGV2ZW50cyBhcmUgb2Z0ZW4gdmlld2VkIHdpdGggc3VzcGljaW9uLCBhcyBpZiB0aGV5IGFyZSBtYWtpbmcgdXAgdGhlaXIgc3ltcHRvbXMgZm9yIGZpbmFuY2lhbCBnYWluIG9yIGhhdmluZyBhIHBzeWNob2xvZ2ljYWwgcmVhY3Rpb24sIE1jTGVhbiBzYWlkLiAKTHVja2lseSwgaXQgd2FzIG9ubHkgYXJvdW5kIDZrIGEgc2VtZXN0ZXIuLiAKVGhlIG9sZCBtYW4gaGFkIHJlYWQgYW5kIHJlcmVhZCBDYWxjdWxhdGluZyBUZXhhcyBIb2xkZW0gUG9rZXIgT2RkcyBNYWRlIEVhc3kgYW5kIGhlIGtuZXcgaGlzIGNoYW5jZXMgb2Ygd2lubmluZy4gCk9uY2UgdGhleSBmaW5kIG91dCB3b21lbiBhcmUgZ29pbmcgdG8gYmUgdGhlcmUgc29tZSBndXlzIG1heSBkZWNpZGUgdGhleSBkb24gd2FudCB0byBnbywgaWYgdGhpcyBpcyBwYXJ0IG9mIHRoZSBjb3JlIGdyb3VwIHRoZW4gaXQgY291bGQga2lsbCBwb2tlciBuaWdodC4uIApUaGlzIEhhbmRpY2FwIENoYXNlIGlzIGJlaW5nIHJ1biBpbiBtZW1vcnkgb2YgJ0ZlYXJsZXNzJyBGcmVkZGllIFdpbGxpYW1zLCB0aGUgZmFtb3VzIENoZWx0ZW5oYW0gYm9va21ha2VyIHdobyBkaWVkIG9mIGEgaGVhcnQgYXR0YWNrIGxhc3QgeWVhci4gV2lsbGlhbXMgZHVlbHMgd2l0aCBKUCBNY01hbnVzIGFyZSB0aGUgc3R1ZmYgb2YgbGVnZW5kIGFuZCB0aGUgU2NvdHRpc2ggbGF5ZXIgaGFzIGJlZW4gc29yZWx5IG1pc3NlZC4KSXQncyBhbHNvIGEgbGlmZSBvZiByb2xsZXIgY29hc3RlciByaWRlcy4uIApGZWJydWFyeSAyMjogQSBmZXcgZGF5cyBvbGQgYmFieSBnaXJhZmZlIHN0aWNrcyBvdXQgaXRzIHRvbmd1ZSBhdCB0aGUgT3BlbHpvbyBpbiBLcm9uYmVyZyBpbiB0aGUgVGF1bnVzIHJlZ2lvbiwgd2VzdGVybiBHZXJtYW55LCBvbiBGZWJydWFyeSAyMiwgMjAxMS4gVGhlIGJhYnkgcGFuZGEgaXMgdG8gYmUgY2FsbGVkIEZ1IEh1LCBvciBIYXBweSBUaWdlciBpbiBNYW5kYXJpbiwgdGhlIHpvbyBhbm5vdW5jZWQgb24gTm92ZW1iZXIgMjIsIDIwMTAuIFRoZSBuYW1lIHdhcyBjaG9zZW4gdmlhIGFuIG9ubGluZSB2b3RlIGluIHdoaWNoIG1vcmUgdGhhbiAyNSwwMDAgcGVvcGxlIHRvb2sgcGFydCwgdGhlIHpvbyBzYWlkIGluIGEgc3RhdGVtZW50LgpIaXMgZ3JhbmRjaGlsZHJlbiAoRXJpY2EsIEtlbHNleSwgQWxleGEsIExvZ2FuLCBhbmQgQnJhZHkpIGxvdmVkIHRvIHBsYXkgaGlzIHRyaXZpYSBnYW1lcywgd2hlcmUgdGhlIHdpbm5lciB1c3VhbGx5IGNhbWUgYXdheSB3aXRoIHNvbWUgc29ydCBvZiBwcml6ZSBtb25leS4gClVudGlsIHRoZXkgc3RlcCB0aGVpciBnYW1lIHVwIGFuZCBhbGxvdyB5b3UgdG8gaGVhdmlseSB2ZXQgd2hvIHlvdSB3YW50IHRvIHBsYXkgd2l0aCwgaW4gZ2FtZSwgdGhpcyB3aWxsIHBlcnNpc3QsIGFsb25nIHdpdGggcGVvcGxlIHdobyBjYW1wIHRoZSBwb3J0YWwgYW5kIGRvbnQgaGVscCwgcGVvcGxlIHdobyBhZmssIHBlb3BsZSB3aG8gdGhyb3csIGV0Yy4gSSB3aWxsIGhhcHBpbHkgaGF2ZSAyIDUgbWludXRlLCBvciBldmVuIG1vcmUsIG1hdGNobWFraW5nIHRpbWVzIGlmIGl0IG1lYW5zIGkgY2FuIHBsYXkgd2l0aCBjb21wZXRlbnQgcGVvcGxlLCBhbmQgb25seSBnZXQgcHV0IGFnYWluc3QgNCBzdGFja3MgaWYgaW0gNCBzdGFja2luZy4gU3RhcnQgcmVjb3JkaW5nIHBsYXllciByZXB1dGF0aW9ucyBiYXNlZCBvbiBhIHZhcmlldHkgb2YgZmFjdG9ycywgYW5kIGxldCBtZSByYXRlIGEgcGxheWVyIGVhc2lseSwgYW5kIHNlZSB0aGVpciByZXB1dGF0aW9uIGJ5IGNsaWNraW5nIHIzIG9uIHRoZW0uLiAKT25lIHByYWN0aWNlIGV4ZXJjaXNlOiBQbGFjZSBibGFuayBQb3N0IGl0IG5vdGVzIGFjcm9zcyBhIGxhcmdlIHdhbGwgaW4geW91ciBob21lIG9yIG9mZmljZS4gCk1pc2UgIGpvdXIgZHUgMjcvMDJFbmNvcmUgZGVzIGluY2VuZGllcywgZW4gQ29yc2UsIDMgYXBwYXJ0ZW1lbnRzICBUb3Vsb3VzZSBlbiBtbWUgdGVtcHMsIHB1aXMgbGEgQ29wZXJsIGRlIExhbWJhbGxlIGVuIG5lIHByZW5hbnQgcXVlIGNldXggcXVpIG1lcmdlbnQgZGUgbCdhY3R1YWxpdC4gCkNhc2htYW4gd291bGQgbmV2ZXIgY29wIHRvIHRoaXMsIG9mIGNvdXJzZSwgYnV0IGhhdmluZyB0aGlzIHNpZ25pbmcgb24gaGlzIHdhdGNoIGhhcyB0byBiZSBhbiBlbm9ybW91cyBpbnZpc2libGUgZWxlcGhhbnQgY3Jvd2RpbmcgaGltIGF0IGhpcyBkZXNrIGV2ZXJ5IHRpbWUgaGUgcG9uZGVycyBhbm90aGVyIGZyZWUgYWdlbnQgZGVhbCB0byB0aGUgZW5kIG9mIHRpbWUgICBhbmQgd2hvIGNvdWxkIGJsYW1lIGhpbT8uIApBIGNyYWZ0c21hbiB3aG8gd2FudGVkIHRvIHdvcmsgImxvbmcgdGVybSIgZm9yIG1lLCB0b2xkIG1lIGhlIGludGVuZGVkIHRvIGdyb3cgaGlzIGJ1c2luZXNzIGFuZCBhc2tlZCBmb3IgYSBsb2FuLiBXaXRoIG15IG1vbmV5IGhlIHdlbnQgc3RyYWlnaHQgdG8gYSBjYXIgZGVhbGVyIGFuZCBib3VnaHQgYSBjYXIgZm9tIHRoZSBzb3J0IEkgd291bGRuIHJlY29tbWVuZCBpZiBvbmUgaXMgc2hvcnQgb24gbW9uZXksIG9yIHdhbnRzIHRvIHNjYWxlIGhpcyBidXNpbmVzcy4gClZhbmF3byBoYXMgdHdvIG5vbiBzaW5ndWxhciBudW1iZXJzLCB0aGUgY29sbGVjdGl2ZSBhbmQgdGhlIHBsdXJhbC4gVGhlIGNvbGxlY3RpdmUgaXMgbWFya2VkIHdpdGggIHRvbiAvdG8obikvLCBhbmQgdGhlIHBsdXJhbCB3aXRoICB0YSAvdGEvLiAKVW0gZGVuIGltIFBvdCBsaWVnZW5kZW4gQmV0cmFnIGVyaGh0IHdlcmRlbi4gUG90IExpbWl0ICQuMTAvJC4yMCBTbWFsbEJsaW5kICQwLjEwICsgQmlnQmxpbmQgJDAuMjAgPSAkMC4zMCBEZXIgbmNoc3RlIFJhaXNlIChvaG5lIGRhcyBub2NoIGplbWFuZCBjYWxsdCkgZGFyZiBtYXguIApUaGlzIG5lZ2F0aXZlIGF0dGVudGlvbiBjYXVzZXMgaGFybSB0byBhbnkgYW5kIGFsbCBicmVlZHMgb2YgZG9ncyB3aG8gbWF5IGJlIGxhYmVsZWQgImJhZCIuVGhlIHBhcnRpY3VsYXIgZG9nIG1lbnRpb25lZCBieSB0aGUgYXBwYXJlbnRseSB1bmVkdWNhdGVkIENoZWsgNiwgUkNNUCwgYW5kIG93bmVyIGluIHRoaXMgc3Rvcnkgd2FzIHJlZmVycmVkIHRvIGFzIGEgIlBpdCBCdWxsIi4gRm9yIHN0YXJ0ZXJzLCAiUGl0IEJ1bGwiIGlzIG5vdCBhIGJyZWVkLCBidXQgYW4gdW1icmVsbGEgdGVybSBjcmVhdGVkIGJ5IG1lZGlhIGFuZCBwb2xpdGljaWFucyB0byB0cnkgYW5kIGNhdGVnb3JpemUgYSBncm91cCBvZiBkb2dzIHdpdGggYSBsYXJnZSBibG9jayBzdHlsZSBoZWFkLiAKSWsgZG9lIGVlbiBvcHJvZXAgYWFuIGllZGVyIGRpZSBvbnMgdG90IGJpaiBkaWUgZG9rdGVyIGthbiBicmVuZ2VuLiBFbiBzbmVsLiAKSGUga25ldyB3aGVuIHRvIHRha2UgYSBjaGFuY2UgYW5kIHdoZW4gdG8gZm9sZC4uIApJbiBhIGZpcnN0IHNjZW5lLCBJIHNhdyBteXNlbGYgZ2V0dGluZyBtYXJyaWVkIHdpdGggbXkgZmlyc3QgbG92ZS4gR3Vlc3RzIGhhdmUgam9pbmVkIG91ciB3ZWRkaW5nLiAKSSBnb3Qgc29tZSBmcmllbmRzIGludG8gU295bGVudCBhbmQgdGhleSB3ZXJlIHRhbGtpbmcgYWJvdXQgZnJlZXppbmcgdGhlbSwgYW5kIEkgbWVudGlvbmVkIHBlb3BsZSBoZXJlIGhhZCBtZW50aW9uZWQgdGhhdCB0dXJuaW5nIGl0IGdyaXR0eS4gU28gYSBmcmllbmQgZGVjaWRlZCB0byBmcmVlemUgQ2FjYW8gYW5kIFN0cmF3YmVycnksIGFuZCB0aGVuIHRhc3RlIHRoZW0gZnJvemVuIGFuZCB0aGVuIHRhc3RlIHRoZW0uIApCaWtlcnMgQWdhaW5zdCBDaGlsZCBBYnVzZSBob2xkIHdlZWtlbmQgZnVuZHJhaXNpbmcgcmFsbHkKSWYgb25lIG9mIG91ciBhdGhsZXRlcyBpcyBzd2ltbWluZyAxMGsgcGVyIHdlZWsgSSB3b3VsZCByYXRoZXIgaGF2ZSB0aGVtIGluIHRoZSBwb29sIDQgb3IgNXggaGl0dGluZyBzaG9ydGVyIGRpc3RhbmNlcyB3aXRoIG9uZSBsb25nIGRheSB0aGFuIHR3aWNlIGF0IDVrIHlhcmRzIGVhY2ggZGF5Li4gCkFzIGl0IGhhcHBlbnMgaSBoYXZlbid0IGJ1aWx0IG15IGVuZ2luZSB5ZXQgYW5kIG5vdCBwbGFubmluZyBvbiBwdXR0aW5nIGluIHNvbWUgbW9uc3RlciBwb3dlciBsdW1wIGFueXdheSBhcyBpdCBzdGFuZHMgYXMgaSBuZWVkIHRvIGdldCB0aGUgY2FyIHJ1bm5pbmcgYW5kIGxlYXJuIHRvIGRyaXZlIGl0IGZpcnN0LiAKSG9tZSBwcmVnbmFuY3kgdGVzdHMgYXJlIGEgcXVhbGl0YXRpdmUgbWV0aG9kIG9mIHRlc3RpbmcgZm9yIHByZWduYW5jeS4gSXRzIG1haW4gcHVycG9zZSBpcyB0byB0ZWxsIHlvdSAieWVzIiBvciAibm8iIGZvciBwcmVnbmFuY3kuIFNvbWUgd29tZW4gaGF2ZSBoYWQgbnVtYmVycyBvdmVyIHRoZSAxMDAwcyBhbmQgZ290dGVuIGEgc2h5IGZhaW50IGxpbmUuIFdoaWxzdCBvdGhlcnMgaGF2ZSAyM21sIGFuZCB0ZXN0IGJsYXppbmdseSBwb3NpdGl2ZS4gSSBoYWQgMTAwbWwgdGhlIGZpcnN0IHRpbWUgaSBnb3QgYSBiZXRhIGRvbmUsIGFuZCBvbmx5IHRoZW4gZGlkIEkgZ2V0IGEgc2h5IHBvc2l0aXZlIG9uIGEgSFBUIChzZW5zaXRpdml0eSBvZiB0aGlzIHRlc3Qgd2FzIGFsc28gMjBtbCkuCkFuZCB3ZSBwcm9jZWVkZWQgdG8gcmUgcmFpc2UgdW50aWwgYWxsIG91ciBjaGlwcyB3ZXJlIGhlYXBlZCBpbiB0aGUgbWlkZGxlLiAKVGhpcyBwcm9kdWN0IHdpbGwgZGVmaW5pdGVseSBtYWtlIHN1cmUgdGhhdCB5b3UgZmVlbCBzb21ldGhpbmcgc3BlY2lhbCB3aGVuIGhvbGRpbmcgaXQgaW4geW91ciBoYW5kcy4gWW91IHdpbGwgZmVlbCBzYWZlciBhYm91dCB5b3VyIHBva2VyIGNhcmRzLiAKSSB3YXMgYXQgdGhlIGdhbWUgYW5kIHVwIHVudGlsIDQgbWludXRlcyBsZWZ0IGluIHRoZSAybmQgcGVyaW9kLCB0aGUgU2FicmVzIGxvb2sgSU5DUkVESUJMRS4gQW1hemluZyBwYXNzaW5nLCB0aGV5IHdlcmUgaW4gdGhlIG9wcG9zaW5nIHpvbmUgY29uc3RhbnRseSBhbmQgaGFuZGxpbmcgZXZlcnl0aGluZyBncmVhdC4KSWYgdGhleSB1c2VkIGl0IGNvcnJlY3RseSwgdGhleSB3b3VsZG4ndCBuZWVkIHRoYXQgbXVjaCBsYW5kLCBpZiB0aGV5IHN0b3BwZWQgdGhpcyBidXNpbmVzcyBvZiB3YW5kZXJpbmcgYXJvdW5kIGZvbGxvd2luZyBidWZmYWxvLiIuIApCdXQgaGUgd2FzIGRlZmluaXRlbHkgZGVwcmVzc2VkIGFmdGVyIGxvc2luZyBoaXMgb3duZXIuIEZvciBhIHdlZWtzIGhlIGNyeSBhdCByYW5kb20gbW9tZW50cyB3aGlsZSBsb29raW5nIG91dCB0aGUgd2luZG93cy4gCllvdSBzaG91bGQgYmUgYWJsZSB0byByZXN0b3JlIGl0IGZyb20gdGhlcmUuCkxvdmluZ2x5IHJlbWVtYmVyZWQgYnkgaGlzIDE1IGdyYW5kY2hpbGRyZW4sIEplc3NpY2EsIExlaWxhIChLZXZpbiksIFBhaWdlIGFuZCBCYXJyeSBCb2xhaG9vZDsgU2VyZW5hLCBUYXRpYW5pYSwgSmFzbWluZSAoQnJ5Y2UpIGFuZCBHYWJyaWVsIExhemRpbnM7IENsYWlyZSwgQ2FpdGxpbiBhbmQgQ29sZSBNb3JyaXNvbjsgSm9zZXBoIElJSSwgTHVjYXMsIEphbWlsYSBhbmQgUGF0cmljayBCb2xhaG9vZC4gQm9ybiBpbiBUb3JvbnRvLCBoZSB3YXMgYSBsaWZlbG9uZyByZXNpZGVudCBvZiBPc2hhd2EuIApUaGVyZSBwbGVudHkgb2Ygcm9tYW5jZSB0byBiZSBmb3VuZCB3aXRoaW4gVmVnYXMgY2l0eSBsaW1pdHMgYXMgd2VsbC4gSWYgeW91IGNhbiBtYWtlIGl0IHRvIFBhcmlzLCBGcmFuY2UgUGFyaXMsIExhcyBWZWdhcyBib2FzdHMgYW4gZXhjZXB0aW9uYWwgbWVhbCwgYXMgd2VsbCBhcyBpbXByZXNzaXZlIHZpZXdzIG9mIHRoZSBCZWxsYWdpbyBmb3VudGFpbiwgYXQgdGhlaXIgRWlmZmVsIFRvd2VyIHJlc3RhdXJhbnQuIE9uY2UgeW91IGVuam95ZWQgZGlubmVyIGFuZCBhIHNob3csIGl0IHRpbWUgdG8gaGl0IHRoZSB0YWJsZXMgYXQgdGhlIFd5bm4gSG90ZWwgQ2FzaW5vLCBDZWFzYXJzIFBhbGFjZSwgb3IgQXJpYSBSZXNvcnQgQ2FzaW5vIHdoZXJlIHlvdSBtaWdodCBnZXQgbHVja3kuIFZpdmEgTGFzIFZlZ2FzIQpBZnRlciBlc2NhcGluZyBhIFNrcnVsbCB0cmFwLCBDYXJvbCBjb21lcyB0byBFYXJ0aCwgd2hlcmUgc2hlIG1lZXRzIE5pY2sgRnVyeSwgcmVkaXNjb3ZlcnMgdGhpbmdzIGFib3V0IHRoZSBwZXJzb24gc2hlIHdhcywgbGVhcm5zIGNsdWVzIGFib3V0IGhlciBkZXN0aW55LCBhbmQgdW5jb3ZlcnMgaGlkZGVuIHRydXRocyBhYm91dCB0aGUgd2FyIGluIHdoaWNoIHNoZSBoYXMgYmVlbiBlbWJyb2lsZWQuIApEaWUgU2VpZGVubWFudWZha3R1ciBnaW5nIGFiZXIgbWl0IEVpbmZocnVuZyBtb2Rlcm5lciBUZWNobmlrZW4gZGVyIFNlaWRlbnNwaW5uZXJlaSBhdWYgZGVtIGV1cm9waXNjaGVuIEZlc3RsYW5kIHVudGVyIHVuZCBoYXQgc2ljaCBoZXV0enV0YWdlIG51ciBpbiBFbCBQYXNvIGluIGRpZXNlbSBNdXNldW0gaW4gVmVyYmluZHVuZyBtaXQgZGVyIGtsZWluZW4gV2Vya3N0YXR0IGVyaGFsdGVuLCBkaWUgc2ljaCBpbSBFcmRnZXNjaG9zcyBkZXMgR2VidWRlcyBiZWZpbmRldC4uIApTdGFydCBzZWxsaW5nIHlvdXIgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIG9ubGluZS4gV2l0aCBvdXIgb25saW5lIHN0b3JlIGZlYXR1cmUsIHlvdSBjYW4gZWFzaWx5IGRpc3BsYXkgeW91ciBwcm9kdWN0cywgb3JnYW5pemUgdGhlbSBpbnRvIGNvbGxlY3Rpb25zLCB0YWcgdGhlbSBhbmQgc2hvdyBjb21wYXJhdGl2ZSBwcmljZXMuIE91ciBzaW1wbGUgb3JkZXIgbWFuYWdlbWVudCBhbmQgc3RvcmUgc3RhdGlzdGljcyB3aWxsIGhlbHAgeW91IHRvIGtlZXAgdHJhY2sgb2YgZXZlcnkgb3JkZXIgeW91IHJlY2VpdmUgYW5kIHRvIHNlZSBob3cgaXMgeW91ciBzdG9yZSBkb2luZyBpbiBnZW5lcmFsLi4gCk1heWJlIGVhdCBhIGJlcnJ5IHdoaWxlIHlvdSBzaXR0aW5nIG5leHQgdG8geW91ciBwbGFudGVyLiBJdCBhbGwgZnVuIHN0dWZmIGFuZCBpdCBtYWtlcyB0aGUgZ2FyZGVuIGxpdmVseS4gZmFtaWxpZXMgYXJlIGFsc28gdXNpbmcgdGhlaXIgZWRpYmxlIGdhcmRlbnMgYXMgZWR1Y2F0aW9uYWwgdG9vbHMsIFJ1c3Qgc2F5cy5zaG93IHRoZWlyIGtpZHMsIHdlIHBsYW50IGEgc2VlZCByaWdodCBub3cgYW5kIGp1c3Qgd2FpdCBhIGZldyBtb250aHMgYW5kIHdhdGVyIGl0LCBhbmQgdGhlbiB0aGUgc3RyYXdiZXJyeSB3aWxsIGNvbWUgdGhyb3VnaCB0aGUgZ3JvdW5kIGFuZCB5b3UgY2FuIHBpY2sgaXQgYW5kIGVhdCBpdCBvciBiYWtlIGEgY2FrZSB3aXRoIGl0LCBzaGUgc2F5cy5SdXN0IGdyZXcgdXAgaW4gR2VybWFueSBhbmQgc2F5cyBoZXIgdGltZSBzcGVudCBvbiBoZXIgZ3JhbmRwYXJlbnRzIGZhcm0gbGVkIGhlciB0byBiZWNvbWluZyBhIGxhbmRzY2FwZSBhcmNoaXRlY3QuIApBY2NvcmRpbmcgdG8gdGhlIEdhcmRlbiBNZWRpYSBmb2xrcywgb25lIHRoaXJkIG9mIGFsbCBmb29kIGluIE5vcnRoIEFtZXJpY2EgaXMgd2FzdGVkIGFib3V0IGZvdXIgcG91bmRzIHBlciBwZXJzb24gcGVyIGRheSBtb3N0IG9mIGl0IGVuZHMgdXAgaW4gbGFuZGZpbGwgc2l0ZXMsIHdoaWNoIGFyZSB0aGUgd29ybGQgdGhpcmQgbGFyZ2VzdCBzb3VyY2Ugb2YgbWV0aGFuZSBnYXMuIENvbXBvc3RpbmcgaXMgdGhlIG5ldyByZWN5Y2xpbmcgaW5pdGlhdGl2ZSwgYW5kIGl0IGlzIG1ha2luZyBhIHNpZ25pZmljYW50IGRpZmZlcmVuY2UgYnkgcmVkdWNpbmcgZm9vZCBhbmQgb3RoZXIgd2FzdGUgZ29pbmcgdG8gbGFuZGZpbGxzIGJ5IHVwIHRvIDQwIHBlciBjZW50LiBFdmVuIGluZGl2aWR1YWxzIGxpdmluZyBpbiBzbWFsbCBzcGFjZXMgY2FuIG1ha2UgYSBkaWZmZXJlbmNlIGJ5IGNvbXBvc3RpbmcuCkFmdGVyIHNvbWUgdGltZSBvZiBob2xkaW5nIGFuIGludmVzdG1lbnQsIEkgYmVsaWV2ZSBpdCdzIG9uZSB5ZWFyLCB5b3UgZG8gZ2V0IGEgcmVkdWNlZCB0YXggYW1vdW50IChjYWxsZWQgY2FwaXRhbCBnYWlucyBJIGJlbGlldmUgaXQncyAxNSUpLiBBbmQgYSBzdG9jayBnb2luZyBmcm9tIDEwIG1pbGxpb24gdG8gMTAwIG1pbGxpb24gcmFyZWx5IGhhcHBlbnMsIGdlbmVyYWxseSB5b3Ugd2lsbCBzZWUgYSAyIDUlIGluY3JlYXNlIHBlciB5ZWFyIGlmIHVyIGx1Y2t5Li4gCklmIHRoZXkgZG9udCB0cnkgY2xpY2tpbmcgb24gdGhlIHNpbHZlciBidW1wZXIgY2FyIGFnYWluLiggU3RlcCA0OiBDbGljayBvbiB0aGUgY3JhY2sgaW4gdGhlIHNpZ24gU3RlcCA1OiBDbGljayBvbiB0aGUgcGVyc29uIHN0YW5kaW5nIGF0IHRoZSBib3R0b20gb2YgdGhlIGZlcnJpcyB3aGVlbC4gU3RlcCA2OiBDbGljayBvbiB0aGUgbGV2ZXIgYXQgdGhlIGJvdHRvbSBvZiB0aGUgZmVycmlzIHdoZWVsLiBTdGVwIDc6IFdoZW4gdGhlIHBlcnNvbiBmYWxscyBvZmYgdGhlIHJvbGxlciBjb2FzdGVyIHRoZXkgd2lsbCBncmFiIG9udG8gdGhlIGZlcnJpcyB3aGVlbC4gClF1ZXN0byAgdHJlbWVuZG8sIGUgc2FyIGNvbHBhIGRpIHBlc3NpbWUgZXNwZXJpZW56ZSBtaWUsIG1hIGxhIG1hZ2dpb3IgcGFydGUgZGVnbGkgYXV0b3Byb2RvdHRpIChhdXRvcHJvZG90dGkgcGVyY2ggc2NhcnRhdGkgb3Z1bnF1ZSBvIHBhc3NhdGkgcGVyIGVkaXRvcmlhIGEgcGFnYW1lbnRvOiBjaW8sIG5vbiBnbGkgYXV0b3Byb2RvdHRpIHBlciBzY2VsdGEgcG9saXRpY2EpIHNvbiB0dXR0ZSBwZXJzb25lIGNoZSBsZWdnb25vIHBvY2hpc3NpbW8gZSBzb2xvIGluIG1hbmllcmEgYXV0b3JlZmVyZW56aWFsZSAodGlwbyBsbyBzY3JpdHRvcmUgZGkgZ2lhbGxpIGNoZSBsZWdnZSBzb2xvIGdpYWxsaSBvIHBlZ2dpbyBhbmNvcmEgc29sbyBnaWFsbGkgZGVsbG8gc3Rlc3NvIGF1dG9yZS4pLCBpbnNvbW1hIGwgY29udHJhcmlvIGRpIHVuICJsZXR0b3JlIGZvcnRlIi4KSSBjb3VsZCB1bmRlcnN0YW5kIGNoYW5naW5nIHRoZSByb2xlcy9uZWVkcyBvZiBUaXRhbnMgdXAgYW5kIEkgZG8gYWdyZWUgdGhhdCB0aGV5IGFyZSB0b28gbmVjZXNzYXJ5IGZvciBhbnkgdHlwZSBvZiBjb25mbGljdC4gSSBqdXN0IGZlZWwgbGlrZSB0aGV5IGFyZSBhIHNoaXAgdGhhdCBpcyBhdmFpbGFibGUgdG8gYW55IHBsYXllciAocmFyZSBFIFBlZW4gb3Igbm90KSBhbmQgc2hvdWxkbiBiZSByZW1vdmVkIG9yIGxpbWl0ZWQgaW4gd2hvIG9yIGhvdyBtYW55IGNhbiBiZSB1c2VkLgpJIHRoaW5rIHRoZSBnaXJsIHdhcyB3b3JyaWVkIHdoYXQgSSB3YXMgZ29pbmcgdG8gc2F5IHRvIHRoZSB0d28gc3VwZXIgbmljZSBsYWRpZXMgdXAgZnJvbnQgYmVjYXVzZSB0aGUgbWFzc2FnZSBnaXJsIHJlZnVzZWQgdG8gbGVhdmUuIApIYXZlIGEgc21hbGwgbWFycmlhZ2UgY2VyZW1vbnkgYW5kIHB1dCB0aGF0IG1vbmV5IGF3YXkuIFRoZW4gc3BlbmQgYSBnb29kIDUgdG8gMTAgeWVhcnMgZW5qb3lpbmcgZWFjaCBvdGhlciBhbmQgc2F2aW5nLiBBbHNvIGhhcyB0aGUgc2lkZSBlZmZlY3Qgb2YgcHV0dGluZyB5b3VyIG1hcnJpYWdlIHRocm91Z2ggdGhlIHRlc3RzIGJlZm9yZSB5b3UgaGF2ZSBhIGtpZCwgc28gdGhhdCBraWQgZG9lc24gZ3JvdyB1cCB3aXRoIGRpdm9yY2VkIHBhcmVudHMuSGF2ZSB5b3VyIDIga2lkcyBhdCAzNSBhbmQgMzcuIApUaGUgd2FsayBvZmZlcnMgc3RyaWtpbmcgc2VhIGFuZCBjbGlmZiB2aWV3cywgYnV0IGFzIGEgcmVzdWx0IGlzIHZlcnkgZXhwb3NlZCB0byB0aGUgd2luZC4gRG8gbm90IGF0dGVtcHQgdGhpcyB3YWxrIG9uIGEgd2luZHkgZGF5IGFzIHlvdSB3aWxsIGJlIHdvcm4gZG93biBieSB0aGUgd2luZC4uIApDYW5jZXJVcG9uQ2FuY2VyICAxIHBvaW50ICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KRnJvbSBGYWNlYm9vayBUaGUgYmVzdCB3YXkgdG8gZ2V0IGxvYWRzIG9mIHBva2VyIGNoaXBzIG9uIGZhY2Vib29rIGlzIHRvIGFzayBvdGhlciBwbGF5ZXJzIHRvIGRvbmF0ZSB0aGVpciBjaGlwcyB0byB5b3Ugb3IgYnV5IHRoZW0gZnJvbSB2YXJpb3VzIHNpdGVzIHdoaWNoIG1heSBiZSB1bnRydXN0d29ydGh5LiBPbmUgd2F5IHRvIGdldCBmcmVlIGZhY2Vib29rIHBva2VyIGNoaXBzIHdvdWxkIGJlIHRvLiAKU2F5aW5nIHRoYXQgaGUgdGF1Z2h0IGhlciBzcGVjaWFsIG1hc3NhZ2UgdGVjaG5pcXVlcyBhbmQgaGlzIGJ1c2luZXNzIG1ldGhvZHMsIGFuIEVhc3QgU3Ryb3Vkc2J1cmcgbWFuIGhhcyBhc2tlZCBOb3J0aGFtcHRvbiBDb3VudHkgQ291cnQgdG8gcHJvaGliaXQgYSB3b21hbiBoZSBmb3JtZXJseSBlbXBsb3llZCBmcm9tIGNvbmR1Y3RpbmcgYSBtYXNzYWdlIGJ1c2luZXNzIGluIEVhc3QgQWxsZW4gVG93bnNoaXAuIEluIGEgc3VpdCBmaWxlZCBieSBhdHRvcm5leSBKZWZmcmV5IFZlbGFuZGVyLCBEYWxsYXMgUmF5IFZhdnJhLCB3aG8gb3BlcmF0ZXMgYSBtYXNzYWdlIHNwYSBvbiBSb3V0ZSAyMDksIGlzIGFza2luZyB0aGUgY291cnQgdG8gYmFuIExvdmV0dGUgRS4gClNvbWUgYWR2YW5jZWQgcGxheWVycyByYWlzZSBvbiB0aGUgZmxvcCBpbiBvcmRlciB0byBnaXZlIHRoZW0gY29ycmVjdCBwb3Qgb2RkcyB0byBjYWxsIG9uIHRoZSB0dXJuIGlmIHRoZWlyIGhhbmQgZG9lcyBub3QgaW1wcm92ZS4gClpoZWF0d2F2ZXogIDU3IHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvCkkgaGF2ZSBoZWFyZCB0byBzdGFydCBieSByZXdhcmRpbmcgdGhlIGJhcmtpbmcgc28gdGhlbiBpdCBiZWNvbWVzIHNvbWV0aGluZyB5b3UgY2FuIGRvIG9uIGNvbW1hbmQsIGJ1dCB0aGVyZSBhcmUgbXVjaCBtb3JlIGtub3dsZWRnZWFibGUgcGVvcGxlIGhlcmUgdG8gaGVscCB3aXRoIHRoYXQgc2lkZSBvZiB0aGluZ3MuLiAKSGlzIHN0YXJlIHNjYXJlZCBtZTsgYmVjYXVzZSB0aGVzZSBzb2xkaWVycyBhcmUgb3JkZXJlZCB0byBraWxsIGFueSBzdXNwaWNpb3VzIHBlcnNvbi4gCkxlbW9uOTAwMDk4ICAxMTMgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpZb3UgaGF2ZSB0byBjb21wcm9taXNlIGV2ZXJ5IG5vdyBhbmQgdGhlbiBvbiB0aG9zZSB0aGluZ3MuIEkgZ3Vlc3MgdGhhdCBwYXJ0IG9mIHRoZSByZWFzb24gdGhhdCBJIGRlZW1lZCB0aGUgcmVsYXRpb25zaGlwIHBlcmZlY3QuIE9uIGFueXRoaW5nIHdlIG1heSBoYXZlIGRpZmZlcmVkLCB3ZSBhbHdheXMgY29tcHJvbWlzZWQgaW4gaGVhbHRoeSB3YXlzLi4gCkltcHJvdmVzIHBvc3R1cmUgYW5kIGZsZXhpYmlsaXR5CkF0IHRoYXQgbW9tZW50IG15IHdyaXN0IHRpbmdsZWQuIApEb29ycyBzZXBhcmF0ZSB0byByZXZlYWwgYW4gZW1wdHkgY2FiLiBKb2huYXRoYW4gd2Fsa3MgaW4gd2l0aCBjb25maWRlbmNlLiBOb3QgdHJ1c3QuIEJ1dCBjdXJpb3NpdHkgaGFzIGdvdHRlbiBhIGhvbGQgb2YgaGltIGFuZCB3b3VsZCBsaWtlIHRvIHNlZSBoaXMgbmV3bHkgZm91bmQgZ2ltbWljayB0dXJuIGludG8gc29tZXRoaW5nIHVzZWZ1bC4KTmV3IGJvb2sgd2FybnMgdGhhdCB3ZSBhcmUgZW50ZXJpbmcgdGhlICdhZ2Ugb2YgYmV3aWxkZXJtZW50JwpOYXRpdmUgb2YgUGhpbGFkZWxwaGlhLCBQYS4sIFdlbGxlbmJhY2ggaGFzIGJlZW4gZmFzY2luYXRlZCBieSBwb2tlciBzaW5jZSB0aGUgYWdlIG9mIGVpZ2h0Li4gCk1hbnkgYm9va3MgaGF2ZSBleHBsYW5hdGlvbnMgaG93IHlvdSBzaG91bGQgcGxheSBldmVyeSBwb3NzaWJsZSBjYXJkIGNvbWJpbmF0aW9uLiAKIldlIGRlY2lkZWQgdmVyeSBlYXJseSBvbiB0aGF0IHdlIGNob3NlIHRvIHdvcmsgd2l0aG91dCB0aGUgbGFyZ2VzdCB0cmFmZmljIG1hY2hpbmUgb24gdGhlIGludGVybmV0LCB0aGUgYWZmaWxpYXRlcy4gCkVwaWMgaGFzbiBkb25lIHNoaXQgdG8ganVzdGlmeSBhbnlvbmUgc3VwcG9ydGluZyB0aGVtLiBObyBvbmUgZm9yY2VkIEVwaWMgdG8gbGF1bmNoIHdpdGhvdXQgYmFzaWMgc3RvcmVmcm9udCBmZWF0dXJlcy4uIApNb3JlPj5Kb3NlcGggQ2VkZXJ3YWxsOiBWZW5lenVlbGE7IE9pbCwgTmVvbGliZXJhbGlzbSBBbmQgV2hpdGUgU3VwcmVtYWN5VmVuZXp1ZWxhIGhhcyBiZWVuIHN1ZmZlcmluZyBhIHNsb3cgYnVybiwgeWV0IGRldmFzdGF0aW5nIGludGVybmFsIGluc3VyZ2VuY3kgYW5kIGVjb25vbWljIHdhciBzaW5jZSB0aGUgb3B0aW1pc3RpYyBiZWdpbm5pbmdzIG9mIHRoZSAnQm9saXZhcmlhbicgc29jaWFsaXN0IHJldm9sdXRpb24gaW4gMTk5OC4gCk90aGVyIHNlcnZpY2VzIGluY2x1ZGU6IGJlYWNoIHNpZGUgbWFzc2FnZSwgZnJlZSBXaUZpLCBtb3RvcmJpa2UgcmVudGFscywgYW5kIHRyYW5zZmVyIHRvdXIgY29vcmRpbmF0aW9uLiAKQ3VycmVudCBwcm9jZWVkaW5ncyBpbiB0aGUgdHJpYWwgY291cnQgd2lsbCB0YWtlIG1vbnRocy4gCkJpbGwgaXMgc3Vydml2ZWQgYnkgaGlzIHdpZmUsIE5hbmV0dGU7IGhpcyBjaGlsZHJlbjogRGF2aWQgKENoZXJ5bGwpLCBOaW5hIChEYXJyeWwpIEphY2tzb24sIExpc2EgKERhdmlkKSBNeWxlciwgYW5kIE1hcmMgKE1lZ2FuKTsgaGlzIHNpc3RlciwgQW5uIEdyaWZmaW47IGFuZCBoaXMgZ3JhbmRjaGlsZHJlbjogT2xpdmlhLCBKb25hdGhhbiwgRGFycnlsIEpyLiwgSm9obiAiSmFjayIsIE5hdGFsaWUsIE5vYWgsIExhdXJhbHluLCBGbHlubiwgSnVsaWV0LCBBdXJvcmEsIEJlbGxlLCBhbmQgTWFyY2VsbG8uIEhlIHdhcyBwcmVjZWRlZCBpbiBkZWF0aCBieSBoaXMgcGFyZW50cywgQ2xhcmVuY2UgYW5kIEVsaXphYmV0aC4gCkhvbmVzdGx5LCB0aHJlYXRlbmluZyB0byB3YWxrIG91dCBsaWtlIDQgdGltZXMgdG9vayBhIGZldyBob3VycywgYnV0IHNhdmVkIG1lIGxpa2UgJDRrIG9uIGEgbmV3IFRveW90YSBSYXY0IGZyb20gdGhlIGxpc3QgcHJpY2UuLiAKSSB0aGluayB0aGUgYmlnIGVmZmVjdCBvZiBOZXRmbGl4IGFuZCBvcmdhbml6YXRpb25zIGxpa2UgdGhhdCBpcyB0aGUgcmVsZWFzZSB3aW5kb3dzIGhhdmUgYmVlbiBtdWNoIHNob3J0ZW5lZC4gQXQgdGhlIHNhbWUgdGltZSwgYW5kIHNvbWV0aW1lcyBzdHJlYW1pbmcgYXQgdGhlIHNhbWUgdGltZS4gClNvbWUgc2F5IHRoZXkgbXVzdCBqdXN0IHB1c2ggd2F0ZXIgb3V0IG9mIHRoZWlyIG1vdXRocyBmb3IgZGlyZWN0aW9uICg/Pz8/PykuIApUaGVyZSBhcmUgbm8gcmVhbCBjaGVhdHMgdG8gYW55IG9mIHRoZSBNeXNwYWNlIGFwcHMuICBJIFRISU5LIFdIQVQgVEhFIFBSRVZJT1VTIFFVRVNUSU9OIEFTS0VSIFdBUyBXQU5USU5HIFRPIEtOT1cgLCxXQVMgQVJFIFRIRVJFIEFOWSBDT0RFUyBPUiBBTllUSElORyBGT1IgVEhFIEFQUExJQ0FUSU9OUyBPUiBHQU1FUywsLCwsTE9MT0wgVEhBVCBNWVNQQUNFIENVUlJFTlRMWSBQUk9WSURFUywsVEhFIFJFQUwgQU5TV0VSIElTIFlFUyBBVCBDRVJUQUlOIFRJTUVTIFRIRVJFIEFSRSBDT0RFUyBZT1UgQ0FOIFVTRSBPTiBDRVJUQUlOIEdBTUVTLCxMSUtFIFJPQ0tTVEFSIEZPUiBFWEFNUExFIEhBUyBBIENIRUFUIENPREUgQk9YIFdISUNIIEFQUEVBUlMgQVQgQ0VSVEFJTiBMQUdaIElOIFRIRSBHQU1FIE9SIERPV05USU1FIElGIFUgV0lMTCwsLFdIRVJFIFlPVSBDQU4gVFlQRSBJTiBBIENPREUgVE8gR0FJTiBNT05FWSAsLFNUQVRVUywsLEFORCBTVUNILCxJTSBOT1QgQSBDSEVBVEVSIFNPIEkgRE9OVCBVU0UgRU0gTVlTRUxGLCxCVVQgSSBET05UIEZBVUxUIEFOWSBPTkUgVEhBVCBET0VTLCxJIEpVU1QgRE9OVCBGT09MIFdJVEggTE9PS0lORyBGT1IgVEhFTSwsSSBKVVNUIERJRE5UIExJS0UgSE9XIENPTkRFQ0VORElORyBZT1UgU09VTkRFRCBJTiBZT1VSIEFOU1dFUiwsTVlTUEFDRSBJUyBBIFNPQ0lBTCBORVRXT1JLLCxCVVQgVEhFWSBETyBIQVZFIEdBTUVTIEhFTkNFIEhJUyBBU0tJTkcgRk9SIE1ZU1BBQ0UgQ0hFQVQgQ09ERVMsLFlPVSBLTk9XIFNPIEkgSE9QRSBUSEFUIENMRUFSRUQgVVAgQU5ZIE1JU1VOREVSU1RBTkRJTkdTIE9OIFlPVVIgUEFSVCB0aGluayBiZWZvcmUgeW91IGFuc3dlciA6PiAoRnVsbCBBbnN3ZXIpLiAKV2l0aCB0aGUgbWlkdGVybSBlbGVjdGlvbnMgYXBwcm9hY2hpbmcgbmV4dCB3ZWVrLCB3ZSBhcmUgYmVpbmcgb2ZmZXJlZCBhbiBpbmNyZWRpYmxlIG9wcG9ydHVuaXR5IHRvIGJyZWFrIGZyb20gdGhlIHJ1dCBvZiBvdXIgY29tZm9ydGFibGUgbGl2ZXMgYW5kIHRha2UgZ29kbHkgYWN0aW9uLiAKRG9uIHByZXNzdXJlIHlvdXJzZWxmIGJ5IGNvbXBhcmluZyB5b3VyIHNraWxscyB0byBvdGhlciBwbGF5ZXJzIFRoYXQgYSBmdXRpbGUgZXhlcmNpc2UuIApHZXJhZGUgd2VubiBtYW4ga2VpbmVuIFBhcnRuZXIgaGF0LCBkZXIgYXVmcGFzc3QgdW5kIFN0ZWNrZXIgemllaHQgaXN0IGRhcyBlaW5lIGhvY2hyaXNrYW50ZSBTYWNoZS4uIApPbmUgZmlybSwgZm9yIGV4YW1wbGUsIHBhaWQgZW50cnkgbGV2ZWwgcGFyYWxlZ2FscyAkNDgsMDAwIHBlciB5ZWFyLCB3aGlsZSB0aGUgYmVzdCBwYWlkIGxpdGlnYXRpb24gcGFyYWxlZ2FscyBlYXJuZWQgJDczLDAwMC4gCkZlZXMgZm9yIG9uIHNpdGUgbWFzc2FnZSwgcHJvZmVzc2lvbmFscyBwcmVzZW50ZXJzLCBzcGVha2VycyBhbmQgb3RoZXIgc2VydmljZXMgd2lsbCB2YXJ5IGJhc2VkIG9uIHRoZSBzcGVjaWZpY3Mgb2YgZWFjaCBldmVudCBvciBhc3NpZ25tZW50LiBLZXkgZmFjdG9ycyBpbmNsdWRlOiBsZW5ndGggb2YgYXBwb2ludG1lbnRzLCB0aW1lIG9mIGRheSwgdGltZSBvZiB5ZWFyICh0YXggc2Vhc29uLCBDaHJpc3RtYXMsIE5ldyBZZWFycywgSnVseSA0LCBjb21wYW55IGNlbnRlbm5pYWwsIGV0Yy4pLCBudW1iZXIgb2YgaG91cnMsIGxvY2F0aW9uLCBkYXkgb2YgdGhlIHdlZWssIGV0Yy4gV2Ugd2FudCB5b3VyIGJ1c2luZXNzIGFuZCBsb29rIGZvcndhcmQgdG8gcXVvdGluZyB5b3UgdGhlIGxvd2VzdCBwcmljZSBwb3NzaWJsZS4gQ2FsbCBvdXIgY29ycG9yYXRlIG9mZmljZSB0b2RheSBhdCA3NTcgOTE4IDM1NjUgZm9yIHlvdXIgY3VzdG9taXplZCBwcmljZSBxdW90ZS4KQW5kIHRoZSBzYWQgdGhpbmcgaXMsIHNoZSBwcm9iYWJseSByYXRoZXIgInlvdSBiaXRjaCIgZnJvbSBhc3Nob2xlIGpvY2tzIGFmdGVyIGVwaXNvZGVzIGxpa2UgdGhpcywgdGhhbiAiaW0gZ29ubmEgZnVjayB5b3VyIGFzcyIgZnJvbSB0aGUgbmVja2JlYXJkcy4uIApFdmVyeSBzaW5nbGUgcmlkZXIgdGhhdCBoYXMgY29tcGxldGVkIHRoaXMgZXh0cmVtZWx5IGdydWVsaW5nIHJhY2UgaXMgYSBjaGFtcGlvbi4gClRoZSBCNzg3IERyZWFtbGluZXIgdHlwaWNhbGx5IGNvc3RzIGFyb3VuZCAkMjExbSBwZXIgdW5pdC4gSXQgcmlzZXMgdG8gNTVmdCBpbiBoZWlnaHQsIGhhcyBhbiAxOGZ0IGNhYmluIHdpZHRoLCBhbmQgaGFzIGEgMTk3ZnQgd2luZ3NwYW4uIApJIGp1c3Qgd2FudGVkIHRvIHNheSAiaGV5IiB0byBhbm90aGVyIHdobyBoYXMgd29ya2VkIHdpdGggc3R1ZGVudHMgd2l0aCBkaXNhYmlsaXRpZXMuIFRoaXMgaXMgZXhhY3RseSBhcyBJIGhhdmUgb2JzZXJ2ZWQgb3ZlciB0aGUgeWVhcnMgd2l0aCBudW1lcm91cyBzdHVkZW50cyB3aG8gaGFkIHNlaXp1cmVzLCBhcyB3ZWxsIGFzIG15IG93biBleHBlcmllbmNlIHdpdGggdGhlbS4gClRoaXMgb25lIGhhZCBtb3JlIGluanVyaWVzIHRoYW4gVkMgZXZlciBkaWQuIEl0IHdhcyBlYXNpZXIgdG8gZ2V0IGdyb3VwcyB0b2dldGhlciBhbmQgcGxheSB0aG91Z2ggYmVjYXVzZSBpdCBkaWRuIHJlcXVpcmUgYSBjYW1wZmlyZSBhbmQgd29vZHMuCk1vc3QgQ2hpbmVzZSB3aWxsIHRlbGwgeW91IHRoYXQgQ2FudG9uZXNlIGlzIG1vcmUgc2ltaWxhciB0byBjbGFzc2ljYWwgQ2hpbmVzZSBpbiB0ZXJtcyBvZiBwcm9ub3VuY2lhdGlvbi4gTW9zdCBDaGluZXNlIGRvbiBrbm93IHRoYXQgTWFuZGFyaW4gbW9kZXJuIGRheSBwcm9udW5jaWF0aW9uIGlzIGhlYXZpbHkgaW1wYWN0ZWQgYnkgTWFuY2h1cmlhbiBhbmQgc29tZSBNb25nb2xpYW4uLiAKUmVzcG9uc2UgZnJvbSBLYXRhdGhhbmkxLCBHdWVzdCBSZWxhdGlvbnMgTWFuYWdlciBhdCBLYXRhdGhhbmkgUGh1a2V0IEJlYWNoIFJlc29ydFJlc3BvbmRlZCB5ZXN0ZXJkYXlEZWFyIGJyajE5NzAsIFRoYW5rIHlvdSB2ZXJ5IG11Y2ggZm9yIHlvdXIgUmV2aWV3LiAKQXZhZGFLZWRhdnJhMDMgdQpTaGUgZHJvcHBlZCBkb3duIHRvIDZsYnMgNW96IGluIHRoZSBob3NwaXRhbCBvdmVyIDIgZGF5cyBidXQgSSB3YXMganVzdCB0b2xkIGl0IG5vcm1hbCwgc2hlIGdldHRpbmcgd2hhdCBzaGUgbmVlZHMsIGV0Yy4gClRvZGF5J3MgdmlkZW8gZ2FtZSBwbGF5ZXJzIHJlcXVpcmUgbXVjaCBtb3JlIGNoYWxsZW5nZSBhbmQgY29tcGxleGl0eS4gCkluIGRlciBaZWl0IHZvbSA4LiAKVGhpcyBwYXN0IE5vdmVtYmVyLCBleHBlcnRzIHdpdGggdGhlIEVuZXJneSBhbmQgTmF0aW9uYWwgU2VjdXJpdHkgUHJvZ3JhbSBhdCB0aGUgV2FzaGluZ3RvbiBiYXNlZCBDZW50ZXIgZm9yIFN0cmF0ZWdpYyBhbmQgSW50ZXJuYXRpb25hbCBTdHVkaWVzIChDU0lTKSwgZGVzY3JpYmVkIHRoZSBFVSBSdXNzaWEgZ2FzIHJlbGF0aW9uc2hpcCBhcyBhICJwYXJ0bmVyc2hpcCBvZiBuZWNlc3NpdHkuIiBJbiBhIENTSVMgYW5hbHlzaXMsIHRoZXkgc3VnZ2VzdGVkIHRoYXQsIHJhdGhlciB0aGFuIGNvbmZyb250aW5nIGVhY2ggb3RoZXIsIEV1cm9wZSBhbmQgUnVzc2lhICJzaG91bGQgZW5nYWdlIGluIGEgZGlhbG9ndWUgaW4gb3JkZXIgdG8gcmUgbmVnb3RpYXRlIG1vcmUgZmxleGlibGUgcHJpY2luZyBhbmQgb3RoZXIgY29udHJhY3R1YWwgdGVybXMsIiB3aGlsZSBjb29yZGluYXRpbmcgb24gaXNzdWVzIGxpa2UgaW5mcmFzdHJ1Y3R1cmUgYW5kIHN1cHBseSBsb2dpc3RpY3MgYW5kIGFkYXB0aW5nIHRvIGEgcmFwaWRseSBldm9sdmluZyBlbmVyZ3kgbWFya2V0LiBCdXQgaXQgYXBwZWFycyBhbnkgc3VjaCBlZmZvcnRzIGF0IGNvb3BlcmF0aW9uIGFuZCBjb21wcm9taXNlIGFyZSBmYXIgb2ZmLCBhdCBiZXN0LiBBdCB0aGVpciBhbm51YWwgaW52ZXN0b3JzJyBtZWV0aW5nIGluIExvbmRvbiBvbiBNb25kYXksIG9mZmljaWFscyBmcm9tIHRoZSBSdXNzaWFuIGdhcyBnaWFudCBHYXpwcm9tIHNhaWQgdGhleSBleHBlY3QgdGhlIGNvbXBhbnkncyBtYXJrZXQgc2hhcmUgaW4gRXVyb3BlIHRvIGluY3JlYXNlIGluIHRoZSB1cGNvbWluZyB5ZWFycy4uIApLaWRzIHRvZGF5ISBXaHkgY2FuIHRoZXkgYmUgbGlrZSB3ZSB3ZXJlIGFuZCB0aGluayB0aGF0IHR3byBtZW4gb3IgdHdvIHdvbWVuICh3aGl0ZSwgZWR1Y2F0ZWQsIG1pZGRsZSBjbGFzcykgbWltaWNraW5nIGEgaGV0ZXJvIHdlZGRpbmcgYXJlIGEgcmV2b2x1dGlvbiBpbiB0aGUgbWFraW5nPyBXaHkgZG8gdGhleSBoYXZlIHRvIGdvIGFoZWFkIGFuZCBhc2sgd2h5LCBhcwpMaWtlLCBvaz8gSGF2ZSB0aGV5IHNlZW4gYSBzbGF1Z2h0ZXJob3VzZT8gQW5pbWFsIHRlc3Rpbmc/IFRoZXkgdG9ydHVyZWQgYW5kIGtpbGxlZCBlbiBtYXNzZSBieSBmYWlybHkgbm9ybWFsIGh1bWFucyB0byBzYXRpc2Z5IHRhc3RlYnVkcyBvciBvdGhlciBmb3IgYSBjb3VwbGUgb2YgbWludXRlcy4gQ2hvY2tpbmcgc29tZSBkb2dnbyBpcyB3cm9uZyBidXQgYXMgZmFyIGFzIGF0cm9jaXRpZXMgY2FycmllZCBvdXQgYnkgdGhlIEZvdW5kYXRpb24gZ29lcyBpdCBsYXVnaGFibGUuIFRoaXMgaXMgb25lIG9mIHRob3NlIHVub3JnYW5pY2FsIHNraXBwbGVzIEkgZmVlbCB0cmllcyB0byBiZSBmYXIgdG9vIHNtYXJ0IGZvciBpdHMgb3duIGdvb2QuLiAKU28gdGhlcmUgeW91IGdvIGZvbGtzISBFbmpveSB0aGUgZGVhbCB3aXRoIGZyZWUgb25saW5lIHBva2VyLi4gCk15IHJlc3BvbnNlIGZyb20gbWVuIHdoZW4gSSBzYXkgd2hhdCBJIHdhbnQgaGFzIGJlZW4gcG9zaXRpdmUsIGF0IHRoZSBlbmQgdGhleSBoYXZlIHNhaWQgdGhleSB0aG91Z2h0IGl0IHdhcyBob3QgdGhhdCBJIHRvb2sgY2hhcmdlLiAKQ2FuYWRhJ3MgSmVubmlmZXIgV2FrZWZpZWxkIGtlZXBzIHJpZGluZyBTd2VkZSBzdWNjZXNzIGF0IHdvbWVuJ3MgaG9ja2V5IHdvcmxkcwpQbGF5ZXJzIHdobyBwcmVmZXIgdGhlIHNsb3QgbWFjaGluZXMgc2hvdWxkIGxvb2sgZm9yIHNvbWUgdmVyc2lvbiBvZiBhICJzbG90IGNsdWIuIiBTb21lb25lIHRoZXJlIGNhbiB1c3VhbGx5IGV4cGxhaW4gaG93IHRvIGdvIGFib3V0IGVhcm5pbmcgY29tcHMgZm9yIHBsYXkgYW5kIGV4YWN0bHkgd2hhdCBmcmVlYmllcyBjYW4gYmUgZWFybmVkIGluIGV4Y2hhbmdlIGZvciBob3cgbWFueSBwb2ludHMuIFNvbWUgY2FzaW5vcyBvZmZlciBicm9jaHVyZXMgaW5zdHJ1Y3RpbmcgaG93IHRvIGdvIGFib3V0IHRoZSBwcm9jZXNzLiBTaWduaW5nIHVwIHdpdGggdGhlIGNsdWIgaXMgb2Z0ZW4gcmVxdWlyZWQsIGJ1dCB0aGlzIGlzIHR5cGljYWxseSBmcmVlLi4gClRoZXJlIG1heSBiZSBub3RoaW5nIGZ1bm55IGFib3V0IGEgbWluc3RyZWwgc2hvdywgYnV0IGJsYWNrZmFjZSBoYXMgYWx3YXlzIGJlZW4gYXQgdGhlIGNlbnRlciBvZiBBbWVyaWNhbiBwb3B1bGFyIGN1bHR1cmUsIGFuIGlkZWEgdGhhdCBTcGlrZSBMZWUgZXhwbG9yZWQgaW4gaGlzIGZpbG0gQmFtYm9vemxlZC4KV2hlcmUgZGlkIEkgY2xhaW0gdGhhdD8gSSBzYWlkIGl0IHJpZGljdWxvdXMgdG8gYmxhbWUgYSBwaWVjZSBvZiBtZWRpYSBmb3IgYSB0cmlwbGUgaG9taWNpZGUuCkFOQ0hPUkFHRSwgQWxhc2thIChBUCkgICBUaGUgQWxhc2thIENvdXJ0IG9mIEFwcGVhbHMgaGFzIG92ZXJ0dXJuZWQgdGhlIHNlY29uZCBkZWdyZWUgbXVyZGVyIGNvbnZpY3Rpb24gb2YgYSBtYW4gYWNjdXNlZCBvZiBmYXRhbGx5IHNob290aW5nIGFub3RoZXIgbWFuIGF0IGFuIEFuY2hvcmFnZSBtYWxsIGluIDIwMTAuIEFuY2hvcmFnZSBUViBzdGF0aW9uIEtUVVUgcmVwb3J0cyBGcmlkYXkgdGhhdCB0aGUgYXBwZWFscyBjb3VydCBydWxlZCB0aGUganVyeSB0aGF0IGNvbnZpY3RlZCBUZXJyZW5jZSBHcmF5IHNob3VsZCBoYXZlIGJlZW4gZ2l2ZW4gaW5zdHJ1Y3Rpb25zIG9uIHRoZSBbQ0FMRFdFTEwsIElkYWhvIChBUCkgICBBIHNvdXRod2VzdGVybiBJZGFobyBtYW4gaGFzIGJlZW4gY2hhcmdlZCB3aXRoIHRlcnJvcmlzbSBhbmQgb3RoZXIgY3JpbWVzIGFmdGVyIHBvbGljZSBzYXkgaGUgZmFsc2VseSB0aHJlYXRlbmVkIHRvIHJlbGVhc2UgZGVhZGx5IG5lcnZlIGdhcyBpbiB0aGUgY2l0eSBvZiBOYW1wYS4gVHdlbnR5IHR3byB5ZWFyIG9sZCBHcmFudCBDaGFybGVzIFN0ZXZlbnNvbiBpcyBjaGFyZ2VkIHdpdGggc2V2ZXJhbCBmZWxvbmllcywgaW5jbHVkaW5nIHRocmVhdGVuaW5nIHRvIHVzZSB3ZWFwb25zIG9mIG1hc3MgZGVzdHJ1Y3Rpb24gaW4gY29ubmVjdGlvbiB3aXRoIHRoZSB0aHJlYXQgW0FsYXNrYSBnb3Zlcm5vciB3YW50cyBsYXdtYWtlcnMgdG8gb2ZmZXIgYnVkZ2V0IGlkZWFzSlVORUFVLCBBbGFza2EgKEFQKSAgIEdvdi4gCkhlJ3Mgc2VlbiA3NSBwZXJjZW50IG9mIGhpcyBjb21wYW55J3MgYnVzaW5lc3MgZHJvcCBvZmYgdW5kZXIgdGhlIGVtZXJnZW5jeSBydWxlcywgYW5kIG5vdyBzdXBwbGllcyBmb3IgYWJvdXQgb25lIGV2ZW50IHBlciB3ZWVrLiAiSSdtIGhlcmUgdG9kYXkgYmVjYXVzZSBpdCdzIGJlZW4gYW4gYWJ1c2UgYnkgdGhlIGJ1cmVhdWNyYXRpYyBzeXN0ZW0sIiBPcm9zeiBzYWlkLiBIZSdkIGxpa2UgdG8gc2VlIHRoZSBob3VzZSB0YWtlIHVwIFNCIDg3OCwgYSBiaWxsIHNwb25zb3JlZCBieSBTZW4uIApMZW8gU3RhbmRvdXQgVHJhaXRzOiBUaGVpciBTaGlueSBDaGFyaXNtYSBGdW4gUGVyc29uYWxpdHkKVHdpbiBncmFkdWF0ZXMgSmVubmEgYW5kIEp1bGlhIFNpbGVyLCB3aG8gd2lsbCBib3RoIHBsYXkgYmFza2V0YmFsbCBmb3IgU1VOWSBDb3J0bGFuZCBuZXh0IHNlYXNvbiwgbWFkZSBhIGxhc3RpbmcgbWFyayBvbiB0aGUgU2VhZm9yZCBjb21tdW5pdHkuIFRoZSBTaWxlcnMgaGVscGVkIHRoZSBWaWtpbmdzIGdpcmxzJyBiYXNrZXRiYWxsIHRlYW0gdG8gYW4gaW1wcmVzc2l2ZSAxOSAyIHJlY29yZCB0aGlzIHNlYXNvbi4gCiJJIGFza2VkIHdoYXQncyB0aGUgYnJhbmQgYWJvdXQ/IFRoZXkgc2FpZCwgJ0l0IGRvZXNuJ3QgbWF0dGVyIHdoYXQgdGhlIGJyYW5kIGlzIGFib3V0LiAKSGUgcmVwcmVzZW50cyBhbGwgdGhvc2Ugd2hvc2UgcmVsaWdpb24gaXMgaHVtYW5pdHkuIApSZXN1bHRzOiBQb3NpdGl2ZSBwcm9zdGF0ZSBiaW9wc3kgY3VsdHVyZXMgd2VyZSBvYnRhaW5lZCBmcm9tIHBhdGllbnRzIGFuZCBjb250cm9scy4gQmFjdGVyaWEgd2VyZSBmb3VuZCBpbiA0NSBvZiAxMTggcGFpbiBwYXRpZW50cyAoMzglKSBhbmQgaW4gMjEgb2YgNTkgY29udHJvbHMgKDM2JSkgKHAgPSAwLjc0KS4gT2xkZXIgbWVuIHdlcmUgbW9yZSBsaWtlbHkgdG8gaGF2ZSBwb3NpdGl2ZSBjdWx0dXJlcy4gCmJlaGF2aW91cmFsIGludGVydmVudGlvbnMgdG8gcmVkdWNlIHByb2JsZW0gZ2FtYmxpbmcKMi4gVGhpcyBlc3NlbnRpYWwgbnV0cmllbnQgaXMgcmVxdWlyZWQgYnkgZXZlcnkgY2VsbCBpbiB5b3VyIGJvZHkuCldvbWJhdEhhdHMgIDEgcG9pbnQgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCkhlIHdhcyB1cHNldC4gCkluc3RpdHV0aW9uYWwgc3R1ZGllcyBpbmRpY2F0ZSB0aGF0IG92ZXIgODAlIG9mIFVDTEEgc3R1ZGVudHMgdXRpbGl6ZSByZWNyZWF0aW9uYWwgZmFjaWxpdGllcyBvciBzZXJ2aWNlcyBkdXJpbmcgdGhlaXIgdGVudXJlIGF0IHRoZSBVbml2ZXJzaXR5LgpUaGF0IGRpZG4ndCBoYXBwZW4gdG8gT2JhbWEuIFRoZXkgY2FsbGVkIGhpbSBhbG9vZiwgY29uZGVzY2VuZGluZywgY29uY2VpdGVkLCBhbGwgc29ydHMgb2YgZHVtYiBzaGl0LCBidXQgbm9uZSBvZiBpdCBzdHVjay4gU29tZWhvdyB0aG91Z2gsICJ1bmxpa2FibGUiIGJlY29tZXMgdGhlIGtleSBhZGplY3RpdmUgZm9yIGV2ZXJ5IHdvbWFuLCBhbmQgdGhlIG1pc29neW5pc3RzIG9uIHRoZSBsZWZ0IHBsYXkgYWxvbmcgd2l0aCBpdC4KV2Ugc3RhcnQgbWFraW5nIG91dCBvbiB0aGUgY291Y2ggYW5kIEkgYW0gSE9STlkuIApCaWxsIGlzIHN1cnZpdmVkIGJ5IGhpcyBzaXN0ZXIgSnVkaXRoIEJlYW4gKERvbiBNaXR0b24pIG9mIEZsZXNoZXJ0b24sIGJyb3RoZXIgSmltIEJlYW4gKEJldmVybGV5IFlhdGVzKSBvZiBDYWxsYW5kZXIsIE9OLCBhbmQgc2lzdGVyIEpvYW4gRWRlbmJvcm91Z2ggb2YgV2VzdCBNb250cm9zZSwgYXMgd2VsbCBhcyBtYW55IG5pZWNlcyBhbmQgbmVwaGV3cy4gCktlZXAgaW4gbWluZCB3ZSBvbmx5IGhhZCA0MCBwZW9wbGUgaGVyZSBhbmQgMjcgdGhhdCBhY3R1YWxseSBlbnRlciB0aGUgZ2FtZS4gVGhpcyBpcyBleGNsdWRpbmcgZXZlcnlvbmUgdGhhdCB3YXNuJ3Qgb2xkIGVub3VnaCB0byBwbGF5IGFueXdheXMuIEhvd2V2ZXIsIHRoZSByZWNlcHRpb24gd2FzIHdlbGwgbm90ZWQgYW5kIHRoZSBiaWdnZXN0IGNvbXBsaW1lbnQgY2FtZSBmcm9tIG15IHdpZmUncyBncmFuZGZhdGhlciBKYW1lcy4gSGUgc2FpZDsgIkthcmwsIGluIGFsbCB0aGUgeWVhcnMgSSd2ZSBwbGF5ZWQgcG9rZXIgSSBoYXZlIG5ldmVyIHNlZW4gYW55dGhpbmcgcXVpdGUgbGlrZSB5b3VyIHBva2VyIHNldHMgeW91IHB1cmNoYXNlZC4gQW55b25lIHdobyBwaWNrZWQgdGhvc2UgdXAgYW5kIHdhbGtlZCBpbnRvIGEgcm9vbSB3b3VsZCBsb29rIGxpa2UgSmFtZXMgQm9uZC4gSW4gdGhlIFNlYW4gQ29ubmVyeSB5ZWFycyBvZiBjb3Vyc2UuIgpXaGVuIGRvZ3MgZG8gd2hhdCB5b3UgYXNrLCB0aGV5IGdldCBzb21ldGhpbmcgb3V0IG9mIGl0LCBldmVuIGlmIHRoYXQncyBhZmZlY3Rpb24uIApJIGdvIGJhY2sgdG8gdGhlIHBvc3QgYW5kIGNvdmVydCB0aGUgY3VycmVuY3kgYW5kIHBvc3QgYmFjayBoZXJlZWRpdCAgc2hlIHNhaWQgdGhhdCBoZXIgYnVkZ2V0IHdhcyBvbmx5IDUwMCA3MDAgbWlsbGlvbiwgd2hpY2ggaXMgYWJvdXQgMzRrICAgNDhrIFVTRC4gTm8gbWVudGlvbiBvZiBoYXZpbmcgMmsgcGVvcGxlIHRoZXJlaSBkb24gdGhpbmsgdGhleSBleHBlY3RlZCBoaW0gdG8sIGkgdGhpbmsgdGhleSBhc3N1bWVkIGJlY2F1c2UgbGVpZGEgb2J2aW91c2x5IHNwdW4gdGhlbSBhIHRhbGUgb2YgbGllcyBzdWdnZXN0aW5nIHRoYXQgaGUgaGFkIG1vbmV5IGFuZCB3YXMgdGhpcyBiaWcgZ3JlYXQgcGVyc29uLCBzbyB0aGV5IHdvdWxkbiBoYXZlIGhhZCB0by4gQXNpYW5zIGFyZSBleHRyZW1lbHkgZGVjZW50IHdoZW4gaXQgY29tZXMgdG8gaG9zcGl0YWxpdHksIGFuZCBldmVuIHRob3VnaCB0aGV5IHdlcmUgdGhlIGd1ZXN0cyBhbmQgbG93a2V5IGV4cGVjdGVkIHRvIGJlIGNhdGVyZWQgdG8sIHRoZXkgd291bGQgaGF2ZSBvZmZlcmVkIHRvIHBheSwgdW5sZXNzIHRoZXkga25ldyBmb3Igc3VyZSB0aGF0IGVyaWMgaW5zaXN0ZWQgb24gcGF5aW5nIGZvciB0aGluZ3MuaWRrLCBpdCBhbiBhc2lhbiB0aGluZyB0YmguIApJJ20gc2V4eSwgSSdtIGhvdC4gSSBoYXZlIGJvdGggYSBwb29uIGFuZCBhIHBlZW5lci4gIiBUaGlzIGhhcyBiZWVuIGV2ZXJ5d2hlcmUuIApJbiAxOTg5LCBGb3JiZXMgbWVhc3VyZWQgS2x1Z2UncyB3ZWFsdGggYXQgb3ZlciAkNyBiaWxsaW9uIGFuZCBjYWxsZWQgaGltIHRoZSByaWNoZXN0IG1hbiBpbiBBbWVyaWNhLiBBdCB0aGUgdGltZSwgaGUgd2FzIG1hcnJpZWQgdG8gdGhlIGZvcm1lciBQYXRyaWNpYSBNLiBSb3NlLCBhIEJyaXRpc2ggSXJhcWkgc29jaWFsaXRlIGFuZCBzZXggY29sdW1uaXN0IGZvciB0aGUgbWFnYXppbmUgcnVuIGJ5IGhlciBmaXJzdCBodXNiYW5kLCBSdXNzZWxsIEdheS4KU3RhdGVzLiAKTXVtIGRheSBhZnRlcm5vb24gd2l0aCBMYWN5LCBCbGFpamsgLGFuZCBubkEgTGVnb3JlLCB0d25leSBXYXJyZW4gJ0dyYWhhbS4gRi4gSW1pbHYgaU5FV1NQQUZFUnIuIApJdCBtaW5kIGJvZ2dsaW5nLi4gClRoZXJlIGFyZSBhIGZldyBzcGVjaWFsdHkgbGluZ2VyaWUgc2hvcHMgaGVyZSB0aGF0IHN0b2NrIHNpemUgNi8yOCBiYW5kcywgaG93ZXZlciB0aGUgb25lcyBJIGtub3cgb2Ygc3RhcnQgYXQgRCBjdXBzLCB3aGljaCBkb2Vzbid0IGhlbHAgeW91IG11Y2guIFlvdSBjb3VsZCBjb250YWN0IEJyYXZhIGFuZCBzZWUgaWYgdGhleSdyZSB3aWxsaW5nLyBhYmxlIHRvIG9yZGVyIGluIHNvbWUgNkNzIGZvciB5b3UuIFRoZXkgbm9ybWFsbHkgb25seSBzdG9jayBEKyBjdXBzLCBidXQgSSd2ZSBuZXZlciB0cmllZCBhc2tpbmcgZm9yIGEgc21hbGxlciBzaXplLgpJbiBhbiBpbnRlcnZpZXcgbGFzdCB5ZWFyIHdpdGggVGhlIEFzc29jaWF0ZWQgUHJlc3MgZHVyaW5nIHRoZSBwcmVzaWRlbnRpYWwgY2FtcGFpZ24sIFRydW1wIGRlY2xpbmVkIHRvIHRha2UgYSBwb3NpdGlvbiwgc2F5aW5nIGhhdmUgYSBsb3Qgb2YgZnJpZW5kcyBvbiBib3RoIHNpZGVzIG9mIHRoaXMgaXNzdWUuIApJIHN0YXJ0ZWQgZHJpdmluZyBpbnN0ZWFkLiBUdXJucyBvdXQsIEkgZGlkbid0IGhhdGUgZHJpdmluZyBzbyBtdWNoIGFzIEkgaGFkIGFueGlldHkgb3ZlciBpdCBiZWNhdXNlIEkgZGlkbid0IHByYWN0aWNlIGl0IGFuZCBzbyBkaWRuJ3QgZmVlbCBjb25maWRlbnQgYWJvdXQgZG9pbmcgaXQuIAoiSGV5LCB5b3UgbG9vayBmYW1pbGlhci4gCkhvcGVmdWxseSwgd2hlbiB0aGV5IGFyZSB1c2VkIHRoZXkgd2lsbCB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggd2lubmluZyBoYW5kcyEuIApZb3Ugc2hvdWxkIGhhdmUgYm9sZGVkIHRoZSBrbSwgcmF0aGVyIHRoYW4gdGhlICJvbmNlIi4gCk15IHF1ZXN0aW9uIGlzLCBhcyBteSBmYXRoZXIncyAoc2hvdWxkIG9mIGJlZW4pIGxlZ2FsIG5leHQgb2Yga2luLCBjYW4gSSBzdWUgbXkgdW5jbGUgZm9yIGNyZW1hdGluZyBoaW0gd2l0aG91dCBteSBwZXJtaXNzaW9uPyBJIGRpZCByZWNlaXZlIGFsbCBoaXMgYXNoZXMgYnV0IHRoYXQncyBub3QgbmVjZXNzYXJpbHkgaG93IGhlIG9yIEkgd2FudGVkIGhpcyBib2R5IGRpc3Bvc2VkIG9mIChmb3IgbGFjayBvZiBhIGJldHRlciB0ZXJtKS4gRG8gSSBoYXZlIGFueSByZWNvdXJzZSBvciBhbSBJIFNPTD8uIApCZSBzdXJlIHRoYXQgeW91J3JlIGVhdGluZyBncmVhdCBhbmQgZGVsaWNpb3VzIG1lYWxzLCBiZSB3aXRoIGdvb2QgZnJpZW5kcyBhbmQgZHJpbmsgZ3JlYXQgYW5kIHF1YWxpdHkgd2luZXMuIEVuam95IHN0aW11bGF0aW5nIG1lYWwgY29udmVyc2F0aW9ucyB3aXRoIHRoZSBwZW9wbGUgd2hvc2UgY29tcGFueSB5b3UgdHJ1bHkgZW5qb3kuIEhhdmUgbG90cyBvZiB3aW5lIGFuZCBkb24ndCBmb3JnZXQgeW91ciB5dW1teSBkZXNzZXJ0LiBZb3UgYXJlIGluZHVsZ2luZyB5b3VyIHNlbnNlcyBzcGVjdGFjdWxhcmx5IHRoaXMgd2F5LgpXaGVuIHlvdSdyZSBkb25lIHdpdGggd2FpdGluZywgeW91IHdpbGwgc3RhcnQgdGhlIHBzeWNob2xvZ2ljYWwvcHN5Y2hpYXRyaWMgYXNwZWN0IG9mIHlvdXIgdHJhbnNpdGlvbmluZy4gRm9yIGFib3V0IGEgeWVhciAodGhpcyB2YXJpZXMgZGVwZW5kaW5nIG9uIHlvdXIgc2l0dWF0aW9uKSB5b3Ugd2lsbCB0YWxrIHdpdGggdGhpcyB0ZWFtIGFuZCBhZnRlciB0aGF0IHRoZXkgd2lsbCBob3BlZnVsbHkgImRpYWdub3NlIiB5b3UuIApJdCBzZWVtcyB0byBiZSBqdXN0IHlvdXIgbWluZCBoYW5naW5nIGluIG1pZCBhaXIsIHdhdGNoaW5nIGRvd24gYXMgaXQgZmxvYXRzIHRocm91Z2ggeW91ciByb29tLCBwb3NzaWJseSB1cHNpZGUgZG93biwgYXMgeW91IG5vIGxvbmdlciBmZWVsIHN1YmplY3RlZCB0byB0aGUgZm9yY2VzIG9mIGdyYXZpdHkuLiAKMTE6MDAgICAxMzozMFZPSUNFICAgVm9pY2UgaXMgdGhlIHN0dWRlbnQgcnVuIG5pZ2h0bGluZSBhdCBFeGV0ZXIgdGhhdCBpcyBvcGVuIDhwbSA4YW0gZXZlcnluaWdodCB3aGVuIG90aGVyIHN1cHBvcnQgc2VydmljZXMgYXJlIGNsb3NlZCwgdG8gb2ZmZXIgY29uZmlkZW50aWFsIGFuZCBpbXBhcnRpYWwgYWR2aWNlIGFuZCBzdXBwb3J0LgpEZWVwIFRpc3N1ZSAgQSB0eXBlIG9mIG1hc3NhZ2UgdGhlcmFweSB0aGF0IGZvY3VzZXMgb24gcmVhbGlnbmluZyBkZWVwZXIgbGF5ZXJzIG9mIG11c2NsZXMgYW5kIGNvbm5lY3RpdmUgdGlzc3VlLiAKQ2FtZSBiYWNrIHRvIG91ciBjaXR5IGEgbW9udGggbGF0ZXIuIApXYXRjaCB3aGV0aGVyIGhpcyBjZWxsIHBob25lIGlzIGFsd2F5cyB0dXJuZWQgb2ZmIHdoZW4gd2l0aCB5b3Ugb3Igd2hldGhlciBoZSB0YWtlcyB1bnVzdWFsbHkgbG9uZyB0byBwaG9uZSB5b3UgYmFjay4gCk9uIFR1ZXNkYXkgICB0aGUgZmlyc3QgZGF5IG9mIG1vdmUgaW4gZm9yIGZyZXNobWVuIGxpdmluZyBpbiB0aGUgZG9ybXMgICBXaWxsaWFtcyBhbmQgRm9yY2UgdW5sb2FkZWQgdGhlaXIgc3RlcmVvcyBpbiBhIHJvb20gdGhleSB2b3cgdG8ga2VlcCBjbGVhbiBhbmQgb3JnYW5pemVkLCBzbyBhcyBub3QgdG8gaXJrIG9uZSBhbm90aGVyLgpUaGUgYnV5IGluIGZvciB0aGlzIGV2ZW50IGlzIFJzLiAzNSwwMDAgYW5kIHBsYXllcnMgY2FuIGV4cGVjdCB0byB3aW4gZnJvbSBhIGJlZWZ5IFJzLiA3MCwwMCwwMDAgaW4gdGhlIGd1YXJhbnRlZWQgcHJpemUgcG9vbC4gVGhpcyB3aWxsIGJlIGZvbGxvd2VkIERQVCAxMDBLIEhpZ2ggUm9sbGVyIHNjaGVkdWxlZCBmb3IgMjJuZCBhbmQgMjNyZCBBcHJpbC4gVGhpcyBpcyBhIGZyZWV6ZW91dCB0b3VybmFtZW50IGZvciBoaWdoIHJvbGxlciB3aXRoIGEgYnV5IGluIElOUiAxMDAsMDAwIGFuZCBhIGhlZnR5IFJzLiAxLDAwLDAwLDAwMCBpbiB0aGUgcHJpemUgcG9vbCBndWFyYW50ZWUuCkdyYWRlIDExIGNoZW1pc3RyeSB0ZWFjaGVyLiBJIHdhcyAoYW5kIHN0aWxsIGFtKSBsZWFybmluZyB0byBtYW5hZ2UgbXkgYW54aWV0eSBkaXNvcmRlci4gCkhpcyBjdXN0b21lcnMgYXJlIHJldGFpbGVycy4gClBlcmhhcHMgd2Ugc2hvdWxkIG5hbWUgdGhpcyBicmF2ZSwgbmV3IHdvcmxkICJwb3N0IGNhcGl0YWxpc20uIiBVbmRlciBwb3N0IGNhcGl0YWxpc20sIHRoZSBwcmltYXJ5IG1vdGl2YXRpb24gY2Fubm90IGJlIHByb2ZpdCwgYnV0IG11c3QgYmUgcGVvcGxlLiBUaGUgdHJ1ZSBjb3N0cyBvZiBhIHByb2R1Y3QgYXJlIGNvbnNpZGVyZWQgIHNvIGdhcyBpcyAkMjAgYSBnYWxsb24gYW5kIG51Y2xlYXIgd2VhcG9ucyBkb24gZXhpc3QuIApGb3IgZXhhbXBsZSAgIHlvdSBjYW4gY2hhbmdlIHRoZSBkZXNjcmlwdGlvbiBvZiBhIGNoYXQgcm9vbSBpbiBvbGQgcmVkZGl0LiAKU28sIGl0IGNvdWxkIGJlIDQsNiw3LDgsOSBhbGwgb2YgdGhlbSBoZWFydHMuIApKRDogV2hlbiBKYXJvc2xhdiBIYWxhayB3YXMgZG9pbmcgc28gd2VsbCBpbiAyMDEwLCBlc3BlY2lhbGx5IGR1cmluZyB0aGUgcGxheW9mZiBydW4sIEkgd2FzIHRyYXZlbGluZyBhY3Jvc3MgRXVyb3BlIHdpdGggYSBmcmllbmQgb2YgbWluZS4gV2Ugd2VudCB0byBBbXN0ZXJkYW0sIFBhcmlzLCBCYXJjZWxvbmEsIGFuZCBvdGhlciBjaXRpZXMsIHRvby4gClJlc291cmNlcyBmb3IgcGxheWluZyBpbiBteSBmaXJzdCBIb2xkZW0gdG91cm5leQpCdXQsIG5vdywgaW4gYSBtb21lbnQsIGV2ZXJ5dGhpbmcgY291bGQgY2hhbmdlLiAKIlRoZSByZW50YWwgbWFya2V0IGlzIGNoZWFwZXIgdGhhbiBXYWdnYSBhbmQgaXQncyBxdWlja2VyIGZyb20gaGVyZSB0byBjZW50cmFsIHRoYW4gaXQgaXMgZnJvbSBMYWtlIEFsYmVydC4iIFJlbnRhbCBpcyBhYm91dCAkMTcwMCBwZXIgd2Vlay4gCldlIG1heSByZWNlaXZlIGluZm9ybWF0aW9uIGZyb20gY29va2llcywgd2hpY2ggYXJlIHBpZWNlcyBvZiBkYXRhIHlvdXIgYnJvd3NlciBzdG9yZXMgYW5kIHNlbmRzIGJhY2sgdG8gdXMgd2hlbiBtYWtpbmcgcmVxdWVzdHMsIGFuZCBzaW1pbGFyIHRlY2hub2xvZ2llcy4gCkl0IGRvZXMgd2hhdCBpdCBzZXRzIG91dCB0byBkbyAodGFjdGljYWwgY29tYmF0IGFuZCBkdW5nZW9uIGRlbHZpbmcpIHZlcnkgd2VsbCwgYWdhaW4gaW4gYW4gZWFzeSB0byB1bmRlcnN0YW5kIG1hbm5lci4KT25lIGhhZCBjcmVhdGVkIGFueXRoaW5nIGxpa2UgQm90dGxlIEJpbiBiZWZvcmUuIFdoZW4gd2UgcmVjb2duaXplZCB0aGUgaHVnZSBuZWVkIHJpZ2h0IGFjcm9zcyB0aGUgY291bnRyeSwgd2UgbW92ZWQgZm9yd2FyZCB3aXRoIHRoZSBwcm9qZWN0LiAKU2VlbiBhcyB0aG91Z2ggYSBzZXJ2ZXIgcmVsaWVzIG9uIGl0IG5ldHdvcmsgY29ubmVjdGl2aXR5LCBoYXZpbmcgYW4gdW5zdXBwb3J0ZWQgTklDIGlzIGEgZmFpcmx5IGJpZyBkZWFsLiAKUVEgb24gdGhlIGJ1dHRvbiB2aWxsaWFuIHJhaXNlcyB0byAuMTUgSSByZXJhaXNlIHRvIDMwLiAKVGhlIG5hbWUgb2YgdGhlIGF3YXJkcyB3YXMgY2hhbmdlZCB0byB0aGUgSnVubyBBd2FyZHMgaW4gMTk3MS4gQW5kIHRoZXJlIGhhdmUgYmVlbiBvdGhlciBjaGFuZ2VzIHNpbmNlLCBpbmNsdWRpbmcgYSBjb3VudHJ5IHdpZGUgYnJvYWRjYXN0IG9mIHRoZSBhd2FyZHMsIHdoaWNoIEh1bnRlciBzYWlkIGhlIHdlbGNvbWVzLgpNYXNzYWdlIHRoZXJhcGlzdHMgb2YgUmVkZGl0IHdoYXQncyB0aGUgd2VpcmRlc3QgdGhpbmcgdGhhdCdzIGhhcHBlbmVkIHdoaWxlIGEgY2xpZW50IGlzIG9uIHRoZSB0YWJsZQpJIHB1dCBvbiB0aGUgYnJhY2UgdGhlIGZpcnN0IHRpbWUgYW5kIGl0IGZlbHQgdGVycmlibGUuIEkgd2FudGVkIHRvIHRha2UgaXQgb2ZmLiBJIHdhbnRlZCB0byBjcnkuIEkgZGlkbiB0aG91Z2guIEkganVzdCB0b2xkIG15c2VsZiAidGhpcyBpcyBob3cgbGlmZSBpcywgbm93Ii4gSXQgc3Vja2VkIGZvciBhYm91dCB0d28gZGF5cywgdGhlbiBJIGdvdCB1c2VkIHRvIGl0LiBJIGFjdHVhbGx5IG1pc3MgaXQgbm93LCBoYWguIDQgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KSSBoYWQgaGltIG9uIG15IHlvdXR1YmUgY2hhbm5lbCB0byBoZWxwIGhpbSBidWlsZCBhbiBhdWRpZW5jZS4gSSBldmVuIGxldCBoaW0gb24gbXkgSW5zdGFncmFtIHRvIHBvc3Qgc3RvcmllcyBhbmQgdGlwcyBmb3IgYSB3ZWVrIHRvIGdldCBzb21lIGV4cG9zdXJlIHRvIHRoYXQgYXVkaWVuY2UgYXMgd2VsbC4gCkEgc21hcnRlciwgbW9yZSBydXRobGVzcywgYW5kIG1vcmUgd2VsbCB2ZXJzZWQgcG9saXRpY2lhbiB3aXRoIHRoaXMgZWNvbm9teSwgYW5kIHRoaXMgQ29uZ3Jlc3MsIGFuZCB0aGlzIHNldCBvZiBjaXJjdW1zdGFuY2VzIGNvdWxkIGRvIGxhc3RpbmcsIHBlcm1hbmVudCwgYW5kIHNlcmlvdXMgZGFtYWdlIHRvIHRoZSB3b3JsZCBvcmRlciBvZiB0aGUgbGFzdCA2MCB5ZWFycy4gClRoZXJlIGFyZSBpbmRpdmlkdWFscyB0aGF0IGFyZSBub3QgZm9ybWFsbHkgdHJhaW5lZCBhbmQgZG8gbm90IGhhdmUgYSBsaWNlbnNlIG9yIGNlcnRpZmljYXRpb24uIFRob3NlIGluZGl2aWR1YWxzIGNhbiBwZXJmb3JtIGEgInNwYSBzdHlsZSIgbWFzc2FnZSBmb3IgcmVsYXhhdGlvbiBwdXJwb3Nlcy4gCkxpa2VseSBpdCB3aWxsIGJlIHRoZSBwb2tlciBmYWNlZCBOYWlybyBRdWludGFuYS4gClllcywgSSB1bmRlcnN0YW5kIHRoYXQsIEkganVzdCBzYWlkIHRoYXQuIApUaGlzIGlzIGp1c3QgdGhlIHZvY2FsIG1vcm9ucyBvbiBWb2xUd2l0dGVyLiBMb29rIGF0IG91ciBhdHRlbmRhbmNlIG92ZXIgdGhlIGxhc3QgdGVuIHllYXJzIGFuZCBjb21wYXJlIGl0IHdpdGggb3VyIHdpbiBsb3NzIHJlY29yZCBvdmVyIHRoYXQgdGltZS4gTm90IHRvIG1lbnRpb24gaG93IHdlIGhhdmUgdHJhdmVsZWQgdG8gYXdheSBnYW1lcyBsaWtlIE9yZWdvbiBhbmQgT2tsYWhvbWEuIApUaGUgdGVhbSB0aGF0IGxvYWRlZCB0aGUgZmlyc3QgZGF5IHdhcyBkcmVzc2VkIGluIG1hdGNoaW5nIHBvbG8gc2hpcnRzIGFuZCB3YXMgZXh0cmVtZWx5IG9yZ2FuaXplZCBhbmQgcG9saXRlLiBUaGUgbmV4dCBkYXkgd2FzIHRoZSBleGFjdCBvcHBvc2l0ZS4gVGhlIHRlYW0gdGhhdCB3b3JrZWQgdGhlIGZpcnN0IGRheSB3YXMgc2VudCB0byB3b3JrIGVsc2V3aGVyZSBhbmQgSSBoYWQgdHdvIGd1eXMgdGhhdCBhcnJpdmVkIGZvdXIgaG91cnMgbGF0ZS4gClRoZSBXaGl0ZWNhcHMgcm9idXN0LCBmaXZlIG1hbiBtaWRmaWVsZCBvd25lZCBwb3NzZXNzaW9uIGluIHRoZSBmaXJzdCBoYWxmLCB0aG91Z2ggdGhlIFJldm9sdXRpb24gY3JlYXRlZCB0aGUgYmV0dGVyIGNoYW5jZXMuIEFuZHkgRG9ybWFuIGhhZCB0aGUgZ2FtZSdzIGZpcnN0IHNjb3Jpbmcgb3Bwb3J0dW5pdHksIHNlZWluZyBoaXMgaGVhZGVyIG9mZiBhIENocmlzIFRpZXJuZXkgY29ybmVyIGtpY2sgdGlwcGVkIG92ZXIgdGhlIGJhciBieSBXaGl0ZWNhcHMgZ29hbGtlZXBlciBEYXZpZCBPdXN0ZWQgaW4gdGhlIGZpZnRoIG1pbnV0ZS4gCkpvaG4gVyBHcmltIGFuZCBhbmQgZmZsbWlsIHJlY2VudGwgZGF1Z2h0ZXIsIFJ1dGgsIExvbmcgTGV2ZWwsIHdlcmUgdmlzaXRvcnMgaGVyZSwgRnJpZGF5IGFuZCBTYXR1cmRheS4gCkl0IGlzbiBjbGVhciB3aGF0IHRoZSAidmVsb2NpdHkiIGVzdGltYXRpb24gaXMuIApIZSBsZWFybmVkIHRoYXQgTGFpcmVuIHdhcyBpbiBzY2hvb2wgdG8gYmVjb21lIGEgY2VydGlmaWVkIG1hc3NhZ2UgdGhlcmFwaXN0IG9ubHkgYWZ0ZXIgc2hlIHdhcyBoaXJlZCB0byBjYXJlIGZvciBoaXMgYW5kIGhpcyB3aWZlJ3MgNCB5ZWFyIG9sZCBhbmQgMS8geWVhciBvbGQgY2hpbGRyZW4uIlNoZSB3aWxsIG1hc3NhZ2UgbXkgc29uJ3MgdG9lcyB3aGVuIGhlIGhhcyBhIHNpbnVzIGNvbmRpdGlvbiwgdG8gZHJhaW4gdGhlIHNpbnVzZXMsIiBzYWlkIEdvbGRzdGVpbi4gClRyZWFzdXJ5IGJvbmRzIGNvbWUgaW4gYSB2YXJpZXR5IG9mICJmbGF2b3JzIiBvciBkaWZmZXJlbnQgbWF0dXJpdHkgZGF0ZXMuIFlvdSBjYW4gYnV5IHNob3J0IHRlcm0gVCBiaWxscyB0aGF0IG1hdHVyZSBpbiB0aHJlZSBvciBzaXggbW9udGhzLCBvciBsb25nIHRlcm0gYm9uZHMgdGhhdCB3b24ndCBmdWxseSBtYXR1cmUgZm9yIDEwIG9yIGV2ZW4gMzAgeWVhcnMuIE5vcm1hbGx5LCB0aGUgc2hvcnQgdGVybSBib25kcyB3aWxsIGhhdmUgbG93ZXIgeWllbGRzIG9yIGludGVyZXN0IHJhdGVzIHRoYW4gdGhlIGxvbmdlciB0ZXJtIGJvbmRzLCBiZWNhdXNlIGEgbG9uZ2VyIGludmVzdG1lbnQgY2FycmllcyBtb3JlIHJpc2sgdGhhdCBpbmZsYXRpb24gd2lsbCBlYXQgdXAgeW91ciBnYWlucyBvdmVyIHRpbWUuIFNvIGlmIHlvdSBwbG90IHRoZSB5aWVsZCBvZiB0cmVhc3VyeSBib25kcyBvbiBhIGdyYXBoLCBpdCB3aWxsIG5vcm1hbGx5IGN1cnZlIG9yIHNsb3BlIHVwd2FyZCwgd2l0aCBwcm9ncmVzc2l2ZWx5IGhpZ2hlciB5aWVsZHMgZm9yIGJvbmRzIHdpdGggdHdvIHllYXIsIGZpdmUgeWVhciwgMTAgeWVhciBhbmQgMzAgeWVhciB0ZXJtcy4KW2RlbGV0ZWRdICA0MSBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KV2UgZW5kZWQgb3VyIHJlbGF0aW9uc2hpcCwgYW5kIHdoaWxlIGl0IHdhcyB2ZXJ5IGhhcmQsIGl0IHdhcyBvbmx5IGNyZWF0aW5nIG1vcmUgYW54aWV0eSBmb3IgbWUgYW5kIGhhdmluZyBhbiBpbXBhY3Qgb24gbXkgbWVudGFsIGhlYWx0aC4gSXQgaXMgdmVyeSB2ZXJ5IGhhcmQgdG8gYmUgd2l0aCBzb21lb25lIHdobyBkb2VzIG5vdCB1bmRlcnN0YW5kIGFueGlldHkuIApBZnRlciBhIHJlY2VudCByZXBvcnQgbGlua2VkIHRoZSB1c2Ugb2YgZXZlcnlkYXkgcHJvZHVjdHMgc3VjaCBhc3BsYXN0aWN3cmFwLCBwbGFzdGljIHdhdGVyIGJvdHRsZXMsIGFuZCBmb29kIGFkZGl0aXZlcyB0byBldmVyeXRoaW5nIGZyb20gb2Jlc2l0eSBhbmQgZGlhYmV0ZXMgdG8gaG9ybW9uYWwgYWJub3JtYWxpdGllcyBpbiBjaGlsZHJlbiwgSSBkZWNpZGVkIHRvIHJldmlldyB0aGUgc3R1ZGllcyBwdWJsaXNoZWQgaW4gdGhlIGxhc3QgY291cGxlIG9mIHllYXJzIGluIHRoZSBtZWRpY2FsIGxpdGVyYXR1cmUgdG8gc2VlIGV4YWN0bHkgd2hhdCBzY2llbmNlIHNheXMgcmVnYXJkaW5nIHRoZSBlZmZlY3Qgb2YgdGhlIGVudmlyb25tZW50IG9uIG91ciBoZWFydCBhbmQgYm9kaWVzLiAKMyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvLiAKV2hlbiBsZWFybmluZyB0byBwZXJmZWN0IHlvdXIgdG9uZSwgY29uY2VudHJhdGUgb24gdGhlIHRpZ2h0bmVzcyBhbmQgYW5nbGUgb2YgdGhlIGxvd2VyIGphdy4gWW91IGNhbiBhY3R1YWxseSBjaGFuZ2UgdGhlIHRvbmUgYnkgcmFpc2luZyBhbmQgbG93ZXJpbmcgdGhlIGphdyB0byBwcm9kdWNlIGEgdmlicmF0by4gRGlmZmVyZW50IG5vdGVzIHJlcXVpcmUgZGlmZmVyZW50IGFuZ2xlcywgYmVjYXVzZSBsaWtlIGFsbCB3aW5kIGluc3RydW1lbnRzLCBub3QgZXZlcnkgbm90ZSB3aWxsIGJlIGluIHR1bmUgYXQgdGhlIHNhbWUgdGltZS4gClRoYXQgaXMgZGlzcHV0ZWQgYnkgdGhlIGZhY3QgdGhhdCBhIGZvcm1lciBwcmVzaWRlbnQgZGlkLCBpbiBmYWN0LCB0ZWxsIHRoZSBzZWNyZXQgc2VydmljZSBub3QgdG8gcHJvdGVjdCBoaW0uIApUaGVyZSBkb2VzbiBuZWVkIHRvIGJlIGFueSBzcGVjaWZpYyBuZXdzIHRvIG1vdmUgdGhlIG1hcmtldCwgdGhlIHNlbnRpbWVudCBpcyBnZW5lcmFsbHkgbmVnYXRpdmUgYWJvdXQgY3J5cHRvIHJpZ2h0IG5vdywgc28gb3RoZXIgdGhhbiB0aGUgb2RkIHJhbGx5LCB0aGUgbWFya2V0IGlzIGdvaW5nIHRvIGNvbnRpbnVlIHRvIGJsZWVkLiBBbGwgdGhlIHBlb3BsZSB0aGF0IGJvdWdodCBhdCB0aGUgdG9wIHRvb2sgYSBiYXRoIGFuZCBhcmUgZGlzZ3VzdGVkIHdpdGggdGhlIG1hcmtldCByaWdodCBub3cgYW5kIGxpa2VseSB3b250IGJlIHJldHVybmluZyBmb3IgYSB3aGlsZS4gQWxzbywgdGhlcmUgaXMgYSBodWdlIGFtb3VudCBvZiB1bmNlcnRhaW50eSBhYm91dCBob3cgVVMgcmVndWxhdGlvbnMgYXJlIGdvaW5nIHRvIHBsYXkgb3V0LCB3aGljaCBpcyBrZWVwaW5nIGEgbG90IG9mIGJpZyBwbGF5ZXJzIG91dCBvZiB0aGUgbWFya2V0Li4gCkxlaWRlciB3dXJkZSBlciBhdXMgZGVtIGZvbGdlbmRlbiBHcnVuZCBiencuIERlbiBmb2xnZW5kZW4gR3JuZGVuIGVudGZlcm50OkJlaW0gUG9zdGVuIHZvbiBOYWNocmljaHRlbiwgQXJ0aWtlbG4gb2RlciBNZWRpZW5iZXJpY2h0ZW4gbXVzcyBkZXIgb3JpZ2luYWxlIFRpdGVsIHZlcndlbmRldCB3ZXJkZW4uIEVzIGlzdCBlcmxhdWJ0LCBUZXh0IGF1cyBkZW0gVW50ZXJ0aXRlbCBvZGVyIGRlbSBlcnN0ZW4gQWJzYXR6IGhpbnp1enVmZ2VuLCBzb2Zlcm4gZXMgdmVyc3RuZG5pc2ZyZGVybmQgaXN0LiAKUG9pbnQgNSkgQW5vdGhlciBtZW50YWxpdHkgdGhpbmcgdG8ga2VlcCBmcm9tIHRpbHRpbmcuCkFzIHRoZXkgY29udGludWUgd29ya2luZyB0aGUgZm9sbG93aW5nIGRheXMgdGhlIGJhbmsgbWFuYWdlciBzZW5kcyBmb3VyIGVtcGxveWVlcyB0byBtYWtlIGEgc2NoZWR1bGUgZHJvcCBhdCB0aGUgdG9zaGliYSBmYWN0b3J5LiAKQmFuZ2Fsb3JlIER1cmluZyB0aGUgSW5kaWFuIFBva2VyIEFzc29jaWF0aW9uIHYuIFN0YXRlb2YgS2FybmF0YWthIGNhc2UsIHRoZSBjb3VydCBkZWNsYXJlZCBwb2tlciBhcyBhIGdhbWUgb2Ygc2tpbGwgYW5kaGVuY2UgaXQgaXMgY29uc2lkZXJlZCBsZWdhbC4gUmVjcmVhdGlvbmFsIGNsdWJzIGFyZSBwZXJtaXR0ZWQgdG9ob3N0IHRoZSBnYW1lIHdpdGhvdXQgdGhlIHJlcXVpcmVtZW50IG9mIGFueSBsaWNlbnNlLiBIb3dldmVyLCB0aGVjb3VydCBydWxpbmcgc3RhdGVzIHRoYXQgdGhlIGNhcmQgZ2FtZSBjYW4gYmUgb3JnYW5pemVkIG9ubHkgZm9yInJlY3JlYXRpb25hbCBwdXJwb3Nlcy4iIC4KVGhlIGluZm9ybWF0aW9uIG9uIHRoZSBQYWxlb2xpdGhpYyBkaWV0IHN0YXRlZCB0aGF0IGl0IHNob3VsZCBiZSBiYXNlZCBvbiBsZWFuIG1lYXQsIGZpc2gsIGZydWl0LCBsZWFmeSBhbmQgY3J1Y2lmZXJvdXMgdmVnZXRhYmxlcywgcm9vdCB2ZWdldGFibGVzLCBlZ2dzIGFuZCBudXRzLCB3aGlsZSBleGNsdWRpbmcgZGFpcnkgcHJvZHVjdHMsIGNlcmVhbCBncmFpbnMsIGJlYW5zLCByZWZpbmVkIGZhdHMsIHN1Z2FyLCBjYW5keSwgc29mdCBkcmlua3MsIGJlZXIgYW5kIGV4dHJhIGFkZGl0aW9uIG9mIHNhbHQuIFRoZSBmb2xsb3dpbmcgaXRlbXMgd2VyZSByZWNvbW1lbmRlZCBpbiBsaW1pdGVkIGFtb3VudHMgZm9yIHRoZSBQYWxlb2xpdGhpYyBkaWV0OiBlZ2dzICgyIHBlciBkYXkpLCBudXRzIChwcmVmZXJlbnRpYWxseSB3YWxudXRzKSwgZHJpZWQgZnJ1aXQsIHBvdGF0b2VzICgxIG1lZGl1bSBzaXplZCBwZXIgZGF5KSwgcmFwZXNlZWQgb3Igb2xpdmUgb2lsICgxIHRhYmxlc3Bvb24gcGVyIGRheSksIHdpbmUgKDEgZ2xhc3MgcGVyIGRheSkuIEFuaW1hbCB2ZXJzdXMgcGxhbnQgZm9vZHMpLiAKVHJlbmQgc3BvdHRpbmcgcmV2ZWFscyB0aGF0IGZvciBhbiBvbmxpbmUgZ2FtZSB0byBjb25uZWN0IHdpdGggaXRzIGF1ZGllbmNlIGFuZCBiYXNrIGluIHRoZSBnbG9yeSBvZiBzdWNjZXNzLCBpdCBuZWVkcyB0byBiZSBzaW1wbGUgYW5kIGVhc3kgdG8gcGxheS4gClRoZSBwbGFjZSB3YXMgYSBodWdlLCB3aXRoIGZ1bGwgc3BhIGFuZCBzYXVuYS4gQnV0IFB1dG9uZ2h1YSBpcyByZXF1aXJlZCwgd2hpY2ggaXMgd2h5IHdlIGJyb3VnaHQgYSBtYWxlIGNvd29ya2VyLiBUaGUgcGxhY2Ugd2Ugd2VudCB0byB3ZSBhcnJhbmdlZCBhdCB0aGUgYm9yZGVyIGNyb3NzaW5nLCBhbmQgaW5jbHVkZWQgdGhlIHRyYW5zcG9ydGF0aW9uIHRvIGZvb2Qgd2hlcmUgdGhlIHZhbiB3YWl0ZWQgdG8gdGFrZSB1cyBvbiB0byB0aGUgcGFybG9yLiAKVGhpcyBwb2ludCB3ZSA0MCBwZXIgY2VudCBvZiBvdXIgY2FwYWNpdHkgaGVyZS4gU28gdGhpcyB5ZWFyIGlzIGFsbCBhYm91dCBzY2FsaW5nIHRoaXMgZmFjaWxpdHkgYW5kIG1heGltaXppbmcgb3VyIHBvdGVudGlhbC4gCkhlIGRlZmluaXRlbHkga25ldyB3aGF0IGhlIHdhcyBkb2luZyBhbmQgZGlkbid0IGxpa2UgYmVpbmcgY2FsbGVkIG9uIGl0LiAKVGhlIDI4IHllYXIgb2xkIHNob3QgYSBzZXZlbiB1bmRlciA2NSBhdCBFcmluIEhpbGxzIG9uIFRodXJzZGF5LCB0eWluZyB0aGlzIGNoYW1waW9uc2hpcCByZWNvcmQgZm9yIGxvd2VzdCBzY29yZSBpbiByZWxhdGlvbiB0byBwYXIgYWZ0ZXIgdGhlIGZpcnN0IHJvdW5kLCBoZWxkIGJ5IEphY2sgTmlja2xhdXMgYW5kIFRvbSBXZWlza29wZi4gSGUgZGlkIGl0IHdpdGhvdXQgbWFraW5nIGEgYm9nZXkgb3IgYnJlYWtpbmcgbXVjaCBvZiBhIHN3ZWF0IGluIHRoZSBXaXNjb25zaW4gaGVhdCwgYW5kIHNhdmluZyB0aGUgc21pbGVzIGZvciBhZnRlciBoaXMgcm91bmQuIE9wZW4gdGhhdCBhcmUgc3RyZXNzIGZyZWUsIEZvd2xlciBzYWlkIGFmdGVyIGhpcyByb3VuZC4gc2ltcGxlIGRheSB3aGVuIHlvdSBsb29rIGJhY2sgb24gaXQsIGFuZCBob3cgd2Uga2luZCBvZiBwaWVjZWQgb3VyIHdheSBhcm91bmQgdGhlIGdvbGYgY291cnNlLiBLaW5kIG9mIGVhc2llciBzYWlkIHRoYW4gZG9uZS4gc2FpZCB0aGFuIGRvbmUgaXMgcmlnaHQuIERlc3BpdGUgdGhlIGJyZWV6eSBuYXR1cmUgb2YgdGhlIHBvc3Qgcm91bmQgaW50ZXJ2aWV3LCBvbiB0aGUgY291cnNlLCBGb3dsZXIgZGlzcGxheWVkIGEgbmFycm93IGV5ZWQgZGV0ZXJtaW5hdGlvbiBhbmQgcG9rZXIgZmFjZWQgc3RvaWNpc20uCk1hZ25lc2l1bSBvcGVyYXRlcyBhcyBhbiBhZ29uaXN0LCBvciBhIHN0aW11bGF0b3J5IG1vbGVjdWxlLCBmb3IgIGFtaW5vYnV0eXJpYyBhY2lkIChHQUJBKSByZWNlcHRvcnMgKDIyKS4gR0FCQSBpcyB0aGUgbWFpbiBpbmhpYml0b3J5IG5ldXJvdHJhbnNtaXR0ZXIgaW4gdGhlIGNlbnRyYWwgbmVydm91cyBzeXN0ZW0uIEJ5IGJpbmRpbmcgdG8gdGhlIEdBQkEgcmVjZXB0b3IgYW5kIHJlcGxpY2F0aW5nIHRoZSBlZmZlY3RzIG9mIEdBQkEsIG1hZ25lc2l1bSBtYXkgYWxsZXZpYXRlIGFueGlldHkuIApOb3csIEkgZGlkIHJlbnQgYW4gYXBwYXJ0bWVudCwgcGFpZCB0YXhlcyBhbmQgSSBzcGVudCBldmVyeXRoaW5nIEkgZWFybmVkIG1vc3RseSBpbiB5b3VyIGNvdW50cnkKVGhleSBvbmx5IGFkdm9jYXRlIGZvciB0aGluZ3MgdGhleSB0aGluayBpc24ndCBpbiB0aGVpciBmYXZvci4gCkkgY291bGQgYmUgd3JvbmcgYWJvdXQgdGhpcywgYnV0IEkgc2VlbSB0byByZW1lbWJlciByZWFkaW5nIG9uIGhlcmUgYSB3aGlsZSBiYWNrIHRoYXQgQ0RQUiB3YXMgcGF5aW5nIGFub3RoZXIgZGV2ZWxvcG1lbnQgc3R1ZGlvIHRvIHByb3ZpZGUgYXNzaXN0YW5jZSB3aXRoIHRoZSBkZXZlbG9wbWVudCBvZiB0aGUgZ2FtZS4gVGhpcyBzdHVkaW8gaXMgb25seSBrbm93biBmb3IgZG9pbmcgbXVsdGlwbGF5ZXIgZ2FtZSBtb2RlcywgYW5kIHNvIHdvdWxkIGxpa2VseSBiZSBkb2luZyBhIGxvdCBvZiB0aGUgd29yayBvbiB0aGUgbXVsdGlwbGF5ZXIgZm9yIEN5YmVycHVuay4gSWYgdGhpcyBpcyB0aGUgY2FzZSwgdGhlbiBhbG1vc3QgYWxsIG9mIENEUFIgZW5lcmd5IGlzIHN0aWxsIGdvaW5nIHRvIHRoZSBzaW5nbGVwbGF5ZXIsIGJ1dCB0aGV5IHdpbGwgYWxzbyBiZSBhYmxlIHRvIGhhdmUgYSBtdWx0aXBsYXllciBtb2RlIGZvciB0aG9zZSB3aG8gd2FudCBpdC4KVGhleSBnb3QgdG8gaGF2ZSBsaXR0bGUgam9icyBpbiB0aGUgaW5zdGl0dXRpb24gYW5kIG1ha2UgZnJpZW5kcy4gCkRvbmMsIHBhcyBkZSBzYWNzIGVuIHBsYXN0aXF1ZS4KSXMgdGhlcmUgYW55IHdheSB0byBnZXQgZnJlZSBaeW5nYSBwb2tlciBjaGlwcwpGYyBsaXN0IGxpc3RzIGFsbCBhdmFpbGFibGUgZm9udHMuIApKdXN0IHNhdyBhIGRvY3VtZW50YXJ5IGFib3V0IGEgYmFieSBib3JuIHdpdGggdHdvIGZhY2VzIGluIGEgdmlsbGFnZSBpbiBJbmRpYS4gU2hlIHdhcyBib3JuIGF0IGEgaGVhbHRoeSB3ZWlnaHQgYW5kIHdhcyB0aHJpdmluZy4gVGhleSB3ZXJlIGNvbnZpbmNlZCBzaGUgd2FzIHRoZSBpbmNhcm5hdGlvbiBvZiBvbmUgb2YgdGhlaXIgR29kcyAoVmlzaG51LCBwb3NzaWJseSkuIApJIHVzZWQgdG8gZmVlbCB0aGlzIHdheS4gClN0aW11bGF0ZSB0aGUgbmVydm91cyBzeXN0ZW0gdG8gaGVscCByZWR1Y2UgbXVzY2xlIGF0cm9waHk7IGluY3JlYXNlIG11c2NsZSB0b25lOyBzdGltdWxhdGUgdGhlIGZ1bmN0aW9ucyBvZiB0aGUgc2tpbiBvciBhbiBvcmdhbiBkZWVwIGluc2lkZSB0aGUgYm9keTsgc2VkYXRlIHRoZSBuZXJ2b3VzIHN5c3RlbSB0byBoZWxwIGVhc2UgbXVzY2xlIHRlbnNpb24sIHNwYXN0aWNpdHksIHN0cmVzcyByZWxhdGVkIHN5bXB0b21zIGFuZCBoZWFkYWNoZXM7IGJvb3N0IHRoZSBmdW5jdGlvbmluZyBvZiB0aGUgaW1tdW5lIHN5c3RlbSBhbmQgbWFpbnRhaW5zIGhlYWx0aCB3aGVuIGRvbmUgcmVndWxhcmx5OyBzdGltdWxhdGUgc2x1Z2dpc2ggY2lyY3VsYXRpb24gb3Igc2xvdyBkb3duIHRoZSBjaXJjdWxhdGlvbiBvZiBzb21lb25lIHdobyBoYXMganVzdCBydW4gYSBtYXJhdGhvbiB3aGVuIHVzaW5nIGZyaWN0aW9uIG1hc3NhZ2UgdGVjaG5pcXVlczsgYWxsb3cgYmV0dGVyIHJhbmdlIG9mIG1vdGlvbiBhbmQgc3VwcG9ydCB0aGUgY29ubmVjdGl2ZSB0aXNzdWUgYW5kIG11c2NsZXMgaW4gYmVjb21pbmcgc3Ryb25nIGFuZCBoZWFsdGh5IHdoZW4gZG9pbmcgc2ltcGxlIGpvaW50IG1vdmVtZW50cyBhbmQgam9pbnQgc3RyZXRjaGluZy4gSXRzIG1hbnkgaGVhbGluZyBiZW5lZml0cyBhcmUgaW1wb3J0YW50IGluIG91ciBoaWdoIHRlY2ggd29ybGQgYmVjYXVzZSBvZiBvdXIgYmFzaWMgaHVtYW4gbmVlZCB0byBiZSBudXJ0dXJlZCB0aHJvdWdoIHRvdWNoLiAKT25jZSB5b3UgZ2V0IGZhbWlsaWFyIHdpdGggYWxsIG9mIHRoZSBsaXR0bGUgU29mdHdhcmUgVGVjaG5pY2FsaXRpZXMsIGJ1dCB0aGlzIGNhbiBiZSBib3JpbmcgYnV0IHZpdGFsLCB5b3UgY2FuIHN0YXJ0IGZvY3VzaW5nIG9uIHRoZSBmdW4gcGFydCBvZiBGcmVlIE9ubGluZSBQb2tlci4gVGhlcmUgYXJlIGEgbG90IG9mIGZlYXR1cmVzIGludm9sdmVkIHdoZW4gdHJ5aW5nIHRvIG9wZXJhdGUgdGhpcyB0eXBlIG9mIHNvZnR3YXJlLiBZb3Ugd2lsbCBiZSBhYmxlIHRvIHN0YXJ0IHBsYXlpbmcgYXQgZWl0aGVyIHB1YmxpYyBvciBwcml2YXRlIHRhYmxlcy4gSWYgeW91IHdhbnQgdG8gcGxheSBhdCBhIHByaXZhdGUgdGFibGUsIHRoZW4geW91IHdpbGwgaGF2ZSB0byBhc2sgcGVybWlzc2lvbiB0byBqb2luIHRoZW0gZmlyc3QuCkkgYWxzbyBncmV3IHVwIHdpdGggcGFyZW50cyB3aXRoIGEgbW9kaWN1bSBvZiBjb21tb24gc2Vuc2Ugd2hvIGJhc2ljYWxseSB0cmVhdGVkIGFueSBhZHVsdCBhcyBhIHBvc3NpYmxlIHNleHVhbCBwcmVkYXRvciwgcHJpZXN0cyBpbmNsdWRlZC4gCkkgZ290IGEgZmxhdG1hdGUgd2hvIGEgbGl0dGxlIGFsbGVyZ2ljIHRvIHBlYW51dHM7IHRoZXkgZ29ubmEgYmUgdW5oYXBweSBpZiB0aGV5IGVhdCBhbnksIGJ1dCBpdCBubyBwcm9ibGVtIHNoYXJpbmcgYSBraXRjaGVuIGFuZCBhIGxvdCBvZiBjb29raW5nIGVxdWlwbWVudCB3aXRoIHBlb3BsZSB3aG8gc2xhcCBwZWFudXQgYnV0dGVyIG9uIHRoaW5ncyBsZWZ0IGFuZCByaWdodC4gQ29udmVyc2VseSwgYSBmcmllbmQgb2YgbWluZSBoYXMgYSBzb24gd2l0aCBjZWxpYWMgYW5kIHRoZWlyIHdob2xlIGhvdXNlIGlzIGdsdXRlbiBmcmVlLCBkb3duIHRvIHRoZSBkb2cgZm9vZCwgYmVjYXVzZSBpdCBzYWZlciB0aGFuIHdvcnJ5aW5nIGFib3V0IGhpbSBydW5uaW5nIGludG8gdGlueSBiaXRzIG9mIHRoZSBhbGxlcmdlbiBjb25zdGFudGx5LiBTaGUgbWVldHMgdXAgd2l0aCBtZSBmb3IgcGFzdGEgYW5kIHBhc3RyaWVzIG9uY2UgaW4gYSB3aGlsZSwgb3V0IG9mIHRoZSBob3VzZSwgdG8gZ2V0IHNvbWUgZGVsaWNpb3VzIGdsdXRlbiBiYWNrIGluIGhlciBsaWZlIGluIHNhZmV0eS4uIApHcmFuZCBIeWF0dCBLdWFsYSBMdW1wdXIgd2FzIGFsc28gZGVzaWduZWQgYW5kIGJ1aWx0IHRvIGJlIGFibGUgdG8gcXVhbGlmeSBmb3IgY2VydGlmaWNhdGlvbiBieSB0aGUgR3JlZW4gQnVpbGRpbmcgSW5kZXggb3JnYW5pemF0aW9uLiBUaGUgaG90ZWwncyBjZXJ0aWZpY2F0aW9uIHByb2Nlc3Mgd2FzIGluaXRpYXRlZCBkdXJpbmcgaXRzIGNvbnN0cnVjdGlvbiBwaGFzZSwgd2hlcmUgZ3JvdW5kIHdhdGVyIGZyb20gdGhlIGJhc2VtZW50IGxldmVscyB3ZXJlIGNvbGxlY3RlZCBmb3IgdHdvIGFuZCBhIGhhbGYgeWVhcnMgZm9yIHRoZSBwdXJwb3NlIG9mIHNpdGUgY2xlYW5pbmcsIHdhdGVyIHRlc3RzIGFuZCB3YXNoaW5nIG9mIG91dCBnb2luZyB2ZWhpY2xlcy4gClBTIEM6ID4gR2V0IENpbUluc3RhbmNlICBDbGFzc05hbWUgV2luMzJfUHJvZHVjdCAgUHJvcGVydHkgTmFtZSwgVmVyc2lvbiAgU2VsZWN0IE9iamVjdCAgUHJvcGVydHkgTmFtZSwgVmVyc2lvbgpJIGNoZWNrZWQsIEZlbGRtYW4gYmV0IDQwLDAwMCBhbmQgSSBjYWxsZWQuIApIYXJ2YXJkIHBvbGl0aWNhbCBzY2llbnRpc3QgUm9iZXJ0IFB1dG5hbSAgIGZhbW91cyBmb3IgIkJvd2xpbmcgQWxvbmUsIiBoaXMgMjAwMCBib29rIG9uIGRlY2xpbmluZyBjaXZpYyBlbmdhZ2VtZW50ICAgaGFzIGZvdW5kIHRoYXQgdGhlIGdyZWF0ZXIgdGhlIGRpdmVyc2l0eSBpbiBhIGNvbW11bml0eSwgdGhlIGZld2VyIHBlb3BsZSB2b3RlIGFuZCB0aGUgbGVzcyB0aGV5IHZvbHVudGVlciwgdGhlIGxlc3MgdGhleSBnaXZlIHRvIGNoYXJpdHkgYW5kIHdvcmsgb24gY29tbXVuaXR5IHByb2plY3RzLiBJbiB0aGUgbW9zdCBkaXZlcnNlIGNvbW11bml0aWVzLCBuZWlnaGJvcnMgdHJ1c3Qgb25lIGFub3RoZXIgYWJvdXQgaGFsZiBhcyBtdWNoIGFzIHRoZXkgZG8gaW4gdGhlIG1vc3QgaG9tb2dlbm91cyBzZXR0aW5ncy4gVGhlIHN0dWR5LCB0aGUgbGFyZ2VzdCBldmVyIG9uIGNpdmljIGVuZ2FnZW1lbnQgaW4gQW1lcmljYSwgZm91bmQgdGhhdCB2aXJ0dWFsbHkgYWxsIG1lYXN1cmVzIG9mIGNpdmljIGhlYWx0aCBhcmUgbG93ZXIgaW4gbW9yZSBkaXZlcnNlIHNldHRpbmdzLi4gCllha2luZWtvIHUKSSB0aGluayB5b3UgYmUgZmluZSB3aXRoIHNvbWUgY2hlYXQgZGF5cyB0aGVuLiBCdXQganVzdCBub3RlIHRoaW5ncyBhYm91dCBob3cgeW91ciBib2R5IHJlc3BvbmRzLiBTb21lb25lIGxpa2UgeW91IHdpbGwgcmVzcG9uZCBkaWZmZXJlbnRseSB0aGFuIHNvbWVvbmUgd2hvIGlzbiBmaXQuCkFuZCBsYXRlciB0aGF0IHNhbWUgd2VlaywgSSBnYXZlIGEgbWVhc3VyZWQgYnJhbmQgcHJlc2VudGF0aW9uIHRvIGFuIGF1ZGllbmNlIG9mIDMwMC4gCkl0cyBiZWVuIGFub3RoZXIgc3ViIHNlY3Rpb24gb2YgdGhlIGdhbWUgdGhhdCBwZW9wbGUgY291bGQgcGFzcyB0aGUgdGltZSB3aXRoLCBhIHdob2xlIG90aGVyIGN1bHR1cmUuIFRoZXJlIGFyZSBhbHNvIHBlb3BsZSB0aGF0IHdvcmsgb24gZmlsbGluZyBjb2xsZWN0aW9ucywgb3Igc3BlbmQgYWxsIGRheSBjcmFmdGluZyB0aGF0IHNvbWUgcGVvcGxlIGZpbmQgYXR0cmFjdGl2ZSBhcyB3ZWxsLiAK|<---