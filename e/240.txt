<!DOCTYPE html>
<html class="no-js" lang="en-GB" prefix="og: http://ogp.me/ns#">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="home page wp-featherlight-captions show-cookie-notice" data-page="home">
  <div class="search-container">
   <div class="container">
    <div class="row justify-content-center">
     <div class="col-12 col-lg-10">
      <form action="/" class="search-form form-inline" method="get" role="search">
       <button class="search-submit btn btn-default" type="submit">
       </button>
      </form>
      <ul class="search-cloud">
       <li class="search-tag">
        [link]
        
       </li>
       <li class="search-tag">
        [link]
        
       </li>
       <li class="search-tag">
        [ahref]
        
       </li>
       <li class="search-tag">
        [ahref]
        
       </li>
       <li class="search-tag">
        <a href="/product-list/app/">
         App
        </a>
       </li>
       <li class="search-tag">
        [ahref]
        
       </li>
       <li class="search-tag">
        <a href="/product-list/felix/">
         Felix
        </a>
       </li>
       <li class="search-tag">
        [link]
        
       </li>
       <li class="search-tag">
        [ahref]
        
       </li>
       <li class="search-tag">
        [ahref]
        
       </li>
       <li class="search-tag">
        [link]
        
       </li>
       <li class="search-tag">
        [ahref]
        
       </li>
       <li class="search-tag">
        <a href="/product-list/cega/">
         Cega
        </a>
       </li>
       <li class="search-tag">
        [ahref]
        
       </li>
       <li class="search-tag">
        <a href="/product-list/hoot/">
         Hoot
        </a>
       </li>
       <li class="search-tag">
        <h1>
         [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
        </h1>
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <header class="site-header">
   <div class="container">
    <div class="row align-items-center">
     <div class="col-12">
      <ul class="burger mobile-only" id="navToggle">
       <li>
       </li>
       <li>
       </li>
       <li>
       </li>
      </ul>
      [link]
      
      <i aria-hidden="true" class="fa fa-search lnk-search mobile-only">
      </i>
      <nav class="nav-main" role="navigation">
       <ul class="nav navbar-nav" id="menu-main-navigation">
        <li class="dropdown menu-about">
         <a class="dropdown-toggle" data-target="#" data-toggle="dropdown" href="/about/">
          About
         </a>
         <ul class="dropdown-menu">
          <li class="menu-established">
           <a href="/established/">
            Established
           </a>
          </li>
          <li class="menu-product-solutions">
           [ahref]
           
          </li>
          <li class="menu-global-reach">
           <a href="/globalreach/">
            Global Reach
           </a>
          </li>
          <li class="menu-committed">
           [ahref]
           
          </li>
          <li class="dropdown menu-brands">
           [link]
           
           <ul class="dropdown-menu">
            <li class="menu-boss-design">
             [ahref]
             
            </li>
            <li class="menu-lyndon">
             [ahref]
             
            </li>
            <li class="menu-komac">
             [ahref]
             
            </li>
           </ul>
          </li>
         </ul>
        </li>
        <li class="dropdown menu-products">
         [ahref]
         
         <ul class="dropdown-menu">
          <li class="menu-all">
           <a href="/product-categories/">
            All
           </a>
          </li>
          <li class="menu-breakout-collaboration">
           [link]
           
          </li>
          <li class="menu-media-units">
           [link]
           
          </li>
          <li class="menu-meeting-conference">
           [ahref]
           
          </li>
          <li class="menu-pods">
           [ahref]
           
          </li>
          <li class="menu-tables-credenzas">
           [link]
           
          </li>
          <li class="menu-task-seating">
           [link]
           
          </li>
          <li class="menu-stools">
           <a href="/product-categories/?cat=323">
            Stools
           </a>
          </li>
          <li class="menu-work-cafe">
           <a href="/product-categories/?&amp;cat=144">
            Work Café
           </a>
          </li>
         </ul>
        </li>
        <li class="dropdown menu-design">
         [link]
         
         <ul class="dropdown-menu">
          <li class="menu-design-partnerships">
           [link]
           
          </li>
         </ul>
        </li>
        <li class="menu-projects">
         [ahref]
         
        </li>
        <li class="menu-knowledge-hub">
         <a href="/knowledgehub/">
          Knowledge Hub
         </a>
        </li>
        <li class="menu-contact">
         [link]
         
        </li>
        <li class="menu-downloads">
         [link]
         
        </li>
        <li class="menu-wishlist">
         [ahref]
         
        </li>
        <li class="menu-language">
         [link]
         
        </li>
        <li class="menu-search">
         [link]
         
        </li>
       </ul>
      </nav>
      <div class="language-switcher-container">
       <div class="inner-language-switcher">
        <section class="language-header">
         <h4>
          Location &amp; Language
         </h4>
         Choose your preferred location and language:
        </section>
        <div class="language-switcher">
         <span class="current">
          [ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]
         </span>
         <ul>
          <li>
           <a href="/us/">
            <strong>
             us
            </strong>
            - English
           </a>
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/it/">
            <strong>
             it
            </strong>
            - Italiano
           </a>
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div id="language-overlay">
      </div>
     </div>
    </div>
   </div>
  </header>
  <div class="document" role="document">
   <main class="main" role="main">
    <section class="section section-carousel">
     <div class="section-carousel-inner">
      <div class="owl-carousel owl-theme" id="owl-carousel-389">
       <div class="item" style="background-image: url('https://www.bossdesign.com/app/uploads/2017/05/Infinity-Boss-Homepage-v2.png')">
        <div class="item__text visible">
         <h2 class="section-title">
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         [ahref]
         
        </div>
       </div>
       <div class="item" style="background-image: url('https://www.bossdesign.com/app/uploads/2017/05/360i-Med-Res-30-EDITED-1.jpg')">
        <div class="item__text visible">
         <h2 class="section-title">
          [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
         </h2>
         <a class="cta-link" href="/app/uploads/2018/07/Learning-Brochure-V2-Digital.pdf">
          View the brochure
         </a>
        </div>
       </div>
       <div class="item" style="background-image: url('https://www.bossdesign.com/app/uploads/2017/05/Projects-Homepage-2.png')">
        <div class="item__text visible">
         <h2 class="section-title">
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         [ahref]
         
        </div>
       </div>
      </div>
     </div>
    </section>
    <section class="section section-4blocks gutters">
     <div class="container-fluid">
      <div class="row">
       <div class="col-12 col-lg-4">
        <div class="block" style="background-image: url(https://www.bossdesign.com/app/uploads/2017/05/ATOM-Homepage-Gold-1.png);">
         [ahref]
         
        </div>
       </div>
       <div class="col-12 col-lg-4">
        <div class="block" style="background-image: url(https://www.bossdesign.com/app/uploads/2017/05/Mango-by-Boss-Design-5.png);">
         <span class="valign">
          <h3 class="block-title">
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          [ahref]
          
         </span>
        </div>
       </div>
       <div class="col-12 col-lg-4">
        <div class="row">
         <div class="col-12">
          <div class="block" style="background-image: url(https://www.bossdesign.com/app/uploads/2017/05/ATOM-Habitats-600x250.png);">
           <span class="valign">
            <li>[search]</li><li>[link]</li>[search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li><li>[search]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>
           </span>
          </div>
         </div>
         <div class="col-12">
          <div class="block" style="background-image: url(https://www.bossdesign.com/app/uploads/2017/05/Manta-Leather-3.png);">
           <span class="valign">
            <li>[link]</li><li>[search]</li>[search]<li>[search]</li><li>[ahref]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[search]</li>[link][search][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </section>
    <section class="section section-tabs">
     <div class="container">
      <div class="row justify-content-around">
       <div class="col-12 col-lg-6">
       </div>
       <div class="col-12 col-lg-5">
        <div class="tabs">
         [link]
         
         [link]
         
         [link]
         
        </div>
        <div class="tab-content-wrapper">
         <div class="tab-content active">
          <p class="tab-title">
           About
          </p>
          <p>
           Whether it’s for the workplace, the learning environment, or the hospitality, retail and leisure sectors, our furniture solutions will help transform your space from ordinary to extraordinary. From revolutionary task seating, breakout furniture and office pods, to handcrafted upholstered furniture, our award-winning products are meticulously crafted and enjoyed by companies around the world.
          </p>
         </div>
         <div class="tab-content ">
          <p class="tab-title">
           Design[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search][link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[ahref]</li><li>[link]</li>[search]<li>[ahref]</li>[ahref]<li>[search]</li><li>[search]</li>[link]
          </p>
          <p>
           Our design process begins and ends with you. From concept to prototype to final production, we draft, we re-draft, and we refine, constantly searching for new ways to optimize your working environment.
          </p>
         </div>
         <div class="tab-content ">
          <p class="tab-title">
           Insight
          </p>
          <p>
           Innovators never rest on their laurels, they’re always looking to rethink, to improve and to make things better. At Boss Design that’s always been our philosophy. We combine our passion with great design to change spaces for the better.<li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
         </div>
        </div>
       </div>
      </div>
     </div>
    </section>
    <section class="section section-2blocks gutters">
     <div class="container-fluid">
      <div class="row">
       <div class="col-12 col-lg-6">
        <div class="block" style="background-image: url(https://www.bossdesign.com/app/uploads/2017/05/img-projects.jpg);">
         <span class="valign">
          <h3 class="block-title">
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          [link]
          
         </span>
        </div>
       </div>
       <div class="col-12 col-lg-6">
        <div class="block" style="background-image: url(https://www.bossdesign.com/app/uploads/2017/05/img-journal.jpg);">
         <span class="valign">
          <h3 class="block-title">
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
          [link]
          
         </span>
        </div>
       </div>
      </div>
     </div>
    </section>
   </main>
  </div>
  <footer class="site-footer">
   <div class="container">
    <div class="row no-gutters">
     <div class="col-12 col-md-6 col-lg-3">
      <a class="logo-main" href="/">
       Boss Design
      </a>
      [ahref]
      
      [ahref]
      
      <span class="copyrights">
       [ahref][ahref][ahref][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search]
      </span>
     </div>
     <div class="col-12 col-md-6 col-lg-2">
      <h5 class="footer-title">
       Links
      </h5>
      <ul class="nav navbar-nav" id="menu-main-footer">
       <li class="menu-brands">
        <a href="/brands/">
         Brands
        </a>
       </li>
       <li class="menu-committed">
        [link]
        
       </li>
       <li class="menu-global-reach">
        <a href="/globalreach/">
         Global Reach
        </a>
       </li>
       <li class="menu-products">
        <a href="/product-categories/">
         Products
        </a>
       </li>
       <li class="menu-cookie-policy">
        [ahref]
        
       </li>
       <li class="menu-gdpr-policy">
        <a href="/app/uploads/2018/05/GDPR-Policy-2018-1.pdf">
         GDPR Policy
        </a>
       </li>
       <li class="menu-modern-slavery">
        [link]
        
       </li>
       <li class="menu-privacy-policy">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="col-12 col-md-6 col-lg-3">
      <h5 class="footer-title">
       Products
      </h5>
      <ul class="nav navbar-nav" id="menu-footer-links">
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        <a href="/product-categories/?brand=32&amp;cat=15">
         Tables &amp; Credenzas
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/product-categories/?brand=32&amp;cat=144">
         Work Café
        </a>
       </li>
      </ul>
     </div>
     <div class="col-12 col-md-6 col-lg-4">
      <h5 class="footer-title">
       Subscribe to our email updates
      </h5>
      <div class="clearfix" style="margin-bottom: 35px;">
       <div class="wpcf7" dir="ltr" id="wpcf7-f239-o1" lang="en-US" role="form">
        <div class="screen-reader-response">
        </div>
        <form action="/#wpcf7-f239-o1" class="wpcf7-form cmonitor-ext-0.4.44" method="post" novalidate="novalidate">
         <div style="display: none;">
         </div>
         <span class="wpcf7-form-control-wrap newsletter_email">
         </span>
         <span class="wpcf7-form-control-wrap email2-876-wrap" id="hp5c110a95136cb" style="display:none !important; visibility:hidden !important;">
          Please leave this field empty.[link][search][search]<li>[search]</li><li>[link]</li>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
         <div class="wpcf7-response-output wpcf7-display-none">
         </div>
         <p style="display: none !important">
          <li>[ahref]</li>[search][link]<li>[link]</li>[ahref]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][link][search][search][link][search]<li>[ahref]</li>[search][search]<li>[link]</li><li>[search]</li>[ahref][ahref]<li>[ahref]</li>[ahref][ahref]<li>[link]</li><li>[search]</li>
         </p>
        </form>
       </div>
      </div>
      <h5 class="footer-title">
       Location
      </h5>
      <div class="language-switcher">
       <span class="current">
        <strong>
         UK
        </strong>
        - English
       </span>
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/meap/">
          <strong>
           meap
          </strong>
          - Middle East, Asia, Pacific
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="social-links">
       [link]
       
       <a class="social-link" href="/company/bossdesign" rel="noopener" target="_blank">
        <i aria-hidden="true" class="fa fa-linkedin">
        </i>
       </a>
       [ahref]
       
       [ahref]
       
       [link]
       
       [link]
       
      </div>
     </div>
    </div>
   </div>
  </footer>
  <div id="cookie-notice">
   <div class="container">
    <div class="row">
     <div class="col-md-7 content-column">
      <div class="title">
       Boss Design Cookie Policy
      </div>
      <div class="content">
       We use cookies to ensure that we give you the best experience on our website
      </div>
     </div>
     <div class="col-md-5 link-column">
      <a class="link-more" href="/cookie-policy/">
       Find out more
      </a>
      [ahref]
      
     </div>
    </div>
   </div>
  </div>
  <div class="modal-overlay modal-sharing">
   <div class="modal-inner">
    <div class="wpcf7" dir="ltr" id="wpcf7-f325-o2" lang="en-GB" role="form">
     <div class="screen-reader-response">
     </div>
     <form action="/#wpcf7-f325-o2" class="wpcf7-form cmonitor-ext-0.4.44" method="post" novalidate="novalidate">
      <div style="display: none;">
      </div>
      <h3 class="sharing-title">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <div class="form-line">
       <label for="txtRecipient">
        Send to
       </label>
       <span class="wpcf7-form-control-wrap share_recipient">
       </span>
      </div>
      <div class="form-line">
       <label for="txtSender">
        Your email
       </label>
       <span class="wpcf7-form-control-wrap share_sender">
        <li>[ahref]</li><li>[link]</li><li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li>[ahref][search][link][link]<li>[ahref]</li>[link]<li>[search]</li><li>[search]</li>[link][link][search]<li>[link]</li><li>[link]</li>
       </span>
      </div>
      <div class="form-line">
       <div class="wpcf7-form-control-wrap">
        <div class="wpcf7-form-control g-recaptcha wpcf7-recaptcha" data-sitekey="6Lf6yH4UAAAAAANxnOwadaaZ3Hzf0nXMhZcSEPtn">
        </div>
        <noscript>
         <div style="width: 302px; height: 422px;">
          <div style="width: 302px; height: 422px; position: relative;">
           <div style="width: 302px; height: 422px; position: absolute;">
            <iframe frameborder="0" scrolling="no" src="https://www.google.com/recaptcha/api/fallback?k=6Lf6yH4UAAAAAANxnOwadaaZ3Hzf0nXMhZcSEPtn" style="width: 302px; height:422px; border-style: none;">
            </iframe>
           </div>
           <div style="width: 300px; height: 60px; border-style: none; bottom: 12px; left: 25px; margin: 0px; padding: 0px; right: 25px; background: #f9f9f9; border: 1px solid #c1c1c1; border-radius: 3px;">
           </div>
          </div>
         </div>
        </noscript>
       </div>
      </div>
      <div class="form-line last">
      </div>
      <div class="wpcf7-response-output wpcf7-display-none">
      </div>
      <p style="display: none !important">
       <span class="wpcf7-form-control-wrap referer-page">
       </span>
      </p>
     </form>
    </div>
    <button class="btn-close" type="button">
     Close
    </button>
   </div>
  </div>
  <div class="modal-overlay modal-download">
   <div class="modal-inner">
    <div class="wpcf7" dir="ltr" id="wpcf7-f329-o3" lang="en-GB" role="form">
     <div class="screen-reader-response">
     </div>
     <form action="/#wpcf7-f329-o3" class="wpcf7-form cmonitor-ext-0.4.44" method="post" novalidate="novalidate">
      <div style="display: none;">
      </div>
      <div class="form-line">
       <label for="txtName">
        Your name
       </label>
       <span class="wpcf7-form-control-wrap download_name">
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[search]<li>[search]</li><li>[ahref]</li>[ahref]
       </span>
      </div>
      <div class="form-line">
       <label for="txtEmail">
        Your email
       </label>
       <span class="wpcf7-form-control-wrap download_email">
        [ahref]<li>[ahref]</li>[search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[link]</li>[search]<li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li>
       </span>
      </div>
      <div class="form-line">
       <span class="wpcf7-form-control-wrap download_file">
        <select aria-invalid="false" class="wpcf7-form-control wpcf7-select" name="download_file">
         <option value="Brochure">
          Brochure
         </option>
         <option value="CAD">
          CAD
         </option>
         <option value="Specification">
          Specification
         </option>
        </select>
       </span>
      </div>
      <div class="form-line last">
      </div>
      <div class="wpcf7-response-output wpcf7-display-none">
      </div>
      <p style="display: none !important">
       <span class="wpcf7-form-control-wrap referer-page">
       </span>
      </p>
     </form>
    </div>
    <button class="btn-close" type="button">
     Close
    </button>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0243
  </b>
 </body>
</html>
