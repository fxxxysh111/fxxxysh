<!DOCTYPE doctype html>
<html itemid="https://news.sbs.co.kr/news/endPage.do?news_id=N1004972925" itemscope="" itemtype="http://schema.org/NewsArticle" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="SBS" name="attribution"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="width=950" name="viewport"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="news_keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords">
   <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description">
    <meta content="INDEX, FOLLOW" name="ROBOTS"/>
    <meta content="ko_KR" property="og:locale">
     <meta content="112004329413042" property="fb:pages"/>
     <meta content="592987367490852" property="fb:pages"/>
     <meta content="764852106922548" property="fb:pages"/>
     <meta content="181676841847841" property="fb:pages"/>
     <meta content="1039675682714205" property="fb:pages"/>
     <meta content="1476969672541330" property="fb:pages"/>
     <meta content="672937472791765" property="fb:pages"/>
     <meta content="248720561988946" property="fb:pages"/>
     <meta content="226015287589373" property="fb:app_id"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
     <meta content="https://news.sbs.co.kr/news/endPage.do?news_id=N1004972925" property="og:site"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <meta content="https://img.sbs.co.kr/newimg/news/20181015/201238392.jpg" property="og:image"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
     <meta content="N1004972925" property="dable:item_id"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="apple-itunes-app"/>
     <meta content="app-id=com.sbs.news.tab" name="google-play-app"/>
     <meta content="[뉴스pick] 늦은 밤 의사 40명이 산모 수술실에 모인 안타까운 이유" itemprop="headline">
      <meta content="News" itemprop="genre">
       <meta content="article" property="og:type">
        <meta content="2018-10-15T17:01:00+09:00" property="og:updated_time"/>
        <meta content="국제" property="article:section"/>
        <meta content="N1" property="article:section2"/>
        <meta content="국제" property="article:tag"/>
        <meta content="SBS뉴스" property="article:tag"/>
        <meta content="SBS" property="article:tag"/>
        <meta content="의사" property="article:tag"/>
        <meta content="산모" property="article:tag"/>
        <meta content="수술실" property="article:tag"/>
        <meta content="40명" property="article:tag"/>
        <meta content="뉴스pick" property="article:tag"/>
        <meta content="조도혜 작가, 김도균" property="article:tag"/>
        <meta content="일반 기사" property="article:tag"/>
        <meta content="https://www.facebook.com/SBS8news" property="article:publisher"/>
        <meta content="2018-10-15T17:01:00+09:00" property="article:published_time"/>
        <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:iphone:url"/>
        <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:iphone:app_name"/>
        <meta content="371932445" property="al:iphone:app_store_id"/>
        <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:ipad:url"/>
        <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:ipad:app_name"/>
        <meta content="438208214" property="al:ipad:app_store_id"/>
        <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:web:url"/>
        <meta content="IMAGE" property="article:section3"/>
        <meta content="summary_large_image" name="twitter:card"/>
        <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:app:name:iphone"/>
        <meta content="371932445" name="twitter:app:id:iphone">
         <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:app:url:iphone"/>
         <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:app:name:ipad"/>
         <meta content="438208214" name="twitter:app:id:ipad"/>
         <meta content="sbsnewstab:url=news.sbs.co.kr/news/endPage.do?news_id=N1004972925&amp;plink=IOSTAG&amp;cooper=TWITTER" name="twitter:app:url:ipad">
          <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
          <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
          <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="description"/>
          <meta content="https://img.sbs.co.kr/newimg/news/20181015/201238392_141.jpg" itemprop="thumbnailUrl"/>
          <meta content="https://img.sbs.co.kr/newimg/news/20181015/201238392_300.jpg" itemprop="thumbnailUrl"/>
          <meta content="https://img.sbs.co.kr/newimg/news/20181015/201238392_500.jpg" itemprop="thumbnailUrl"/>
          <meta content="https://img.sbs.co.kr/newimg/news/20181015/201238392_700.jpg" itemprop="thumbnailUrl"/>
          <meta content="https://img.sbs.co.kr/newimg/news/20181015/201238392_1280.jpg" itemprop="thumbnailUrl"/>
          <meta content="https://img.sbs.co.kr/newimg/news/20181015/201238392_500.jpg" property="dable:image"/>
          <meta content="https://news.sbs.co.kr/news/endPage.do?news_id=N1004972925" property="dable:url">
           <meta content="2018-10-15T17:01:00+09:00" itemprop="dateModified">
            <meta content="ko-kr" itemprop="inLanguage">
             <meta content="조도혜 작가, 김도균" name="Author">
              <meta content="조도혜 작가, 김도균" name="dable:author">
              </meta>
             </meta>
            </meta>
           </meta>
          </meta>
         </meta>
        </meta>
       </meta>
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="news_main ">
  <div id="access_skip">
   <ul>
    <li>
     [link]
     
    </li>
    <li>
     <a href="p">
      전체메뉴 바로가기
     </a>
    </li>
    <li>
     <a href="t">
      검색창 바로가기
     </a>
    </li>
   </ul>
  </div>
  <div class="w_sbsnews w_end" id="wrap">
   <div id="common-header-padding" style="display:none;width:100%;height:40px;">
   </div>
   <div class="main_bnr_event" style="display:none;">
    <div class="bnr_wrap">
     <a class="bnr_img" href="r">
     </a>
     <div class="btn_bnr_close">
      [link]
      
     </div>
    </div>
   </div>
   <div class="w_header ">
    <div itemid="http://img.sbs.co.kr/newimg/news/20181015/201238392.jpg" itemprop="image" itemscope="" itemtype="https://schema.org/ImageObject" style="display: none">
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
     <meta content="800" itemprop="width"/>
     <meta content="450" itemprop="height"/>
    </div>
    <div itemprop="mainEntityOfPage" itemscope="" itemtype="http://schema.org/WebPage" style="display:none">
    </div>
    <div itemid="https://news.sbs.co.kr/" itemprop="publisher" itemscope="" itemtype="https://schema.org/Organization" style="display: none">
     <div itemprop="logo" itemscope="" itemtype="https://schema.org/ImageObject">
      <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
     </div>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="name"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" itemprop="url"/>
     <meta content="http://mnews.sbs.co.kr" itemprop="sameAs"/>
     <meta content="http://www.podbbang.com/ch/8888" itemprop="sameAs"/>
     <meta content="https://news.sbs.co.kr" itemprop="sameAs"/>
     <meta content="https://www.facebook.com/SBS8news" itemprop="sameAs"/>
     <meta content="https://www.facebook.com/sbsnewsfile" itemprop="sameAs"/>
     <meta content="https://www.facebook.com/videomug" itemprop="sameAs"/>
     <meta content="https://www.facebook.com/subusunews" itemprop="sameAs"/>
     <meta content="https://www.facebook.com/SBSNEWSWORLD" itemprop="sameAs"/>
     <meta content="https://twitter.com/SBS8news" itemprop="sameAs"/>
     <meta content="https://www.youtube.com/channel/UCkinYTS9IHqOEwR1Sze2JTw" itemprop="sameAs"/>
     <meta content="https://www.youtube.com/user/sbsnews8" itemprop="sameAs"/>
     <meta content="https://plus.google.com/115956935225501746128" itemprop="sameAs"/>
     <meta content="https://story.kakao.com/ch/sbsnews" itemprop="sameAs"/>
     <meta content="http://subusunews.tumblr.com/" itemprop="sameAs"/>
     <meta content="https://story.kakao.com/ch/subusunewsstory" itemprop="sameAs"/>
     <meta content="https://twitter.com/subusunews" itemprop="sameAs"/>
     <meta content="http://tvcast.naver.com/subusunews" itemprop="sameAs"/>
     <meta content="http://tvcast.naver.com/sbslive" itemprop="sameAs"/>
     <meta content="http://tvpot.daum.net/mypot/View.do?ownerid=mRlSExWR4-Q0&amp;playlistid=5043798" itemprop="sameAs"/>
     <meta content="http://tvpot.daum.net/mypot/View.do?ownerid=mRlSExWR4-Q0&amp;playlistid=5064067" itemprop="sameAs"/>
     <meta content="https://www.instagram.com/subusudaily/" itemprop="sameAs"/>
     <meta content="http://post.naver.com/my.nhn?memberNo=11036773" itemprop="sameAs"/>
     <meta content="https://www.instagram.com/sbsnews/" itemprop="sameAs"/>
    </div>
    <div class="w_navigation">
     <div class="w_brands">
      <div class="w_inner">
       <h1 class="logo_news logo_big">
        <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
       </h1>
       <div class="navi_list">
        <strong class="blind">
         SBS뉴스 브랜드 리스트
        </strong>
        <ul class="family">
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [search]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
        <strong class="blind">
         퀵메뉴 리스트
        </strong>
        <ul class="quick">
         <li>
          [link]
          
         </li>
         <li>
          <a href="t" id="btnLogin" onclick="link.login();">
           <i class="i_bar">
            |
           </i>
           로그인
          </a>
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="w_gnb">
      <div class="w_inner">
       <h1 class="logo_news">
        <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
       </h1>
       <div class="navi_list">
        <strong class="blind">
         대메뉴 리스트
        </strong>
        <ul class="gnb">
         <li class="m1">
          [ahref]
          
         </li>
         <li class="m2">
          <a class="txt_replay" href="/news/programMain.do?prog_cd=R1&amp;plink=GNB&amp;cooper=SBSNEWS">
           <i class="ir">
            다시보기
           </i>
          </a>
         </li>
         <li class="m3">
          [ahref]
          
         </li>
         <li class="m7">
          <a class="txt_pot" href="/news/newsSpecialList.do?gubun=4&amp;CATEGORY=S4&amp;plink=GNB&amp;cooper=SBSNEWS">
           <i class="ir">
            팟캐스트
           </i>
          </a>
         </li>
         <li class="m4">
          [ahref]
          
         </li>
         <li class="m8">
          [ahref]
          
         </li>
         <li class="m13">
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
        <ul class="gnb_fixed">
         <li class="m1">
          [ahref]
          
         </li>
         <li class="m2">
          [ahref]
          
         </li>
         <li class="m3">
          <a href="/news/newsSpecialList.do?gubun=1&amp;CATEGORY=S1&amp;plink=GNB&amp;cooper=SBSNEWS">
           취재파일
          </a>
         </li>
         <li class="m7">
          <a href="/news/newsSpecialList.do?gubun=4&amp;CATEGORY=S4&amp;plink=GNB&amp;cooper=SBSNEWS">
           팟캐스트
          </a>
         </li>
         <li class="m4">
          [ahref]
          
         </li>
         <li class="m8">
          <a href="/news/newsPlus.do?plink=GNB&amp;cooper=SBSNEWS">
           멀티미디어
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li class="m10">
          [ahref]
          
         </li>
         <li class="m12">
          [link]
          
         </li>
        </ul>
       </div>
       <div class="gnb_article_tit">
        [link]
        
       </div>
       <div class="btn_area">
        <a class="btn_live" href="/news/live.do?plink=GNB&amp;cooper=SBSNEWS">
         <span class="ir">
          LIVE
         </span>
         <i>
         </i>
        </a>
        <a class="btn_report" href="/news/inform.do?plink=GNB&amp;cooper=SBSNEWS">
         <span class="ir">
          제보하기
         </span>
        </a>
        <button class="btn_sitemap">
         <span class="ir">
          전체 메뉴 레이어 보기
         </span>
        </button>
       </div>
      </div>
     </div>
    </div>
    <div class="layer_gnb">
     <div class="w_brands">
      <div class="w_inner">
       <h1 class="logo_news logo_big">
        <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
       </h1>
       <div class="navi_list">
        <strong class="blind">
         SBS뉴스 브랜드 리스트
        </strong>
        <ul class="family">
         <li>
          <a class="i_mug" href="/news/videoMugList.do?plink=GNB&amp;cooper=SBSNEWS">
           <span class="ir">
            비디오머그 가기<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>
           </span>
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
        <strong class="blind">
         퀵메뉴 리스트
        </strong>
        <ul class="quick">
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="w_inner">
      <div class="sitemap_menu">
       <strong class="blind">
        SBS뉴스 전체메뉴
       </strong>
       <div class="w01">
        <strong>
         <a href="/news/newsflash.do?plink=GNB&amp;cooper=SBSNEWS">
          분야별
          <span class="blind">
           메뉴 리스트
          </span>
         </a>
        </strong>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/newsSection.do?sectionType=02&amp;plink=GNB&amp;cooper=SBSNEWS">
           경제
          </a>
         </li>
         <li>
          <a href="/news/newsSection.do?sectionType=03&amp;plink=GNB&amp;cooper=SBSNEWS">
           사회
          </a>
         </li>
         <li>
          <a href="/news/newsSection.do?sectionType=07&amp;plink=GNB&amp;cooper=SBSNEWS">
           국제
          </a>
         </li>
         <li>
          <a href="/news/newsSection.do?sectionType=08&amp;plink=GNB&amp;cooper=SBSNEWS">
           생활 · 문화
          </a>
         </li>
         <li>
          <a href="/news/newsSection.do?sectionType=14&amp;plink=GNB&amp;cooper=SBSNEWS">
           연예
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
       <div class="w02">
        <strong>
         [link]
         
        </strong>
        <ul>
         <li>
          <a href="/news/programMain.do?prog_cd=R1&amp;plink=GNB&amp;cooper=SBSNEWS">
           8뉴스
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/programMain.do?prog_cd=RJ&amp;plink=GNB&amp;cooper=SBSNEWS">
           뉴스토리
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
       <div class="w01">
        <strong>
         [link]
         
        </strong>
        <ul>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/news/newsSpecialList.do?gubun=2&amp;CATEGORY=S2&amp;plink=GNB&amp;cooper=SBSNEWS">
           월드리포트
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/newsSpecialList.do?gubun=6&amp;CATEGORY=S6&amp;plink=GNB&amp;cooper=SBSNEWS">
           영상토크
          </a>
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
       <div class="w03">
        <strong>
         [ahref]
         
        </strong>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
       <div class="w02">
        <strong>
         [link]
         
        </strong>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/newsPlusList.do?themeId=10000000124&amp;plink=GNB&amp;cooper=SBSNEWS">
           리포트+
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/news/newsPlusList.do?themeId=10000000134&amp;plink=GNB&amp;cooper=SBSNEWS">
           뉴스pick
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
       <div class="w03">
        <strong>
         [link]
         
        </strong>
        <ul>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/news/videoMugListMain.do?gubun=1&amp;plink=GNB&amp;cooper=SBSNEWS">
           섹션
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
       </div>
       <div class="w02">
        <strong>
         [ahref]
         
        </strong>
        <ul>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/news/subusuNews.do?mainSection=01&amp;subSection=3&amp;plink=GNB&amp;cooper=SBSNEWS">
           스브스 출동
          </a>
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
       <div class="w02">
        <strong>
         기타
         <span class="blind">
          메뉴 리스트<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
         </span>
        </strong>
        <ul>
         <li>
          <a href="/news/noticeList.do?plink=GNB&amp;cooper=SBSNEWS">
           공지사항
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li class="txt_asian2018">
          [link]
          
         </li>
        </ul>
       </div>
      </div>
      <div class="link_area">
       <ul class="sns_list">
        <li class="facebook">
         <a href="/SBS8news" target="_blank">
          <span class="ir">
           SBS뉴스 공식 페이스북[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[search]</li>[search]
          </span>
         </a>
        </li>
        <li class="twitter">
         <a href="/sbs8news" target="_blank">
          <span class="ir">
           SBS뉴스 공식 트위터
          </span>
         </a>
        </li>
        <li class="kas">
         [link]
         
        </li>
       </ul>
       <ul class="link_list">
        <li>
         <a href="/news/app.do?plink=GNB&amp;cooper=SBSNEWS">
          앱 소개
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
       <div class="search_area">
        <div itemscope="" itemtype="http://schema.org/WebSite">
         <meta content="https://news.sbs.co.kr/" itemprop="url">
          <form action="/news/search/main.do" itemprop="potentialAction" itemscope="" itemtype="http://schema.org/SearchAction" method="get">
           <meta content="https://news.sbs.co.kr/news/search/main.do?query={query}" itemprop="target">
            <button class="comSearchBtn">
             <span class="ir">
              검색하기
             </span>
            </button>
           </meta>
          </form>
         </meta>
        </div>
       </div>
      </div>
      <div class="btn_area">
       <a class="btn_live" href="/news/live.do?plink=GNB&amp;cooper=SBSNEWS">
        <span class="ir">
         LIVE
        </span>
        <i>
        </i>
       </a>
       [link]
       
       <button class="btn_close">
        <span class="ir">
         전체 메뉴 레이어 닫기
        </span>
       </button>
      </div>
     </div>
    </div>
    <div class="w_snb">
     <div class="w_inner">
      <div class="search_area">
       <div itemscope="" itemtype="http://schema.org/WebSite">
        <meta content="https://news.sbs.co.kr/" itemprop="url">
         <form action="/news/search/main.do" itemprop="potentialAction" itemscope="" itemtype="http://schema.org/SearchAction" method="get">
          <meta content="https://news.sbs.co.kr/news/search/main.do?query={query}" itemprop="target">
           <button class="comSearchBtn">
            <span class="ir">
             검색하기<li>[link]</li><li>[link]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
           </button>
          </meta>
         </form>
        </meta>
       </div>
      </div>
      <div class="snb_list blind">
       <div class="snb_list_inner">
        <div class="snb_menu">
         <div id="subNewsLists" style="display: none">
          <ul class="snb_menu_2depth">
           <li id="m1_2">
            [ahref]
            
           </li>
           <li id="m1_3">
            [link]
            
           </li>
           <li id="m1_4">
            <a href="/news/newsSection.do?sectionType=02&amp;plink=SNB&amp;cooper=SBSNEWS">
             경제
            </a>
           </li>
           <li id="m1_5">
            [link]
            
           </li>
           <li id="m1_6">
            [ahref]
            
           </li>
           <li id="m1_7">
            [link]
            
           </li>
           <li id="m1_8">
            [link]
            
           </li>
           <li id="m1_9">
            [link]
            
           </li>
          </ul>
         </div>
         <div id="subPgmLists" style="display: none">
          <ul class="snb_menu_2depth">
           <li id="m2_1">
            <a href="/news/programMain.do?prog_cd=R1&amp;plink=SNB&amp;cooper=SBSNEWS">
             8뉴스
            </a>
           </li>
           <li id="m2_2">
            [link]
            
           </li>
           <li id="m2_7">
            <a href="/news/programMain.do?prog_cd=RN&amp;plink=SNB&amp;cooper=SBSNEWS">
             주영진의 뉴스브리핑
            </a>
           </li>
           <li id="m2_8">
            <a href="/news/programMain.do?prog_cd=RO&amp;plink=SNB&amp;cooper=SBSNEWS">
             오뉴스
            </a>
           </li>
           <li id="m2_3">
            [link]
            
           </li>
           <li id="m2_4">
            [ahref]
            
           </li>
           <li id="m2_5">
            [link]
            
           </li>
           <li id="m2_6">
            [link]
            
           </li>
          </ul>
         </div>
         <div id="newsSpcLists" style="display: none">
          <ul class="snb_menu_2depth">
           <li id="m3_1">
            [ahref]
            
           </li>
           <li id="m3_2">
            <a href="/news/newsSpecialList.do?gubun=2&amp;CATEGORY=S2&amp;plink=SNB&amp;cooper=SBSNEWS">
             월드리포트
            </a>
           </li>
           <li id="m3_3">
            <a href="/news/newsSpecialList.do?gubun=3&amp;CATEGORY=S3&amp;plink=SNB&amp;cooper=SBSNEWS">
             칼럼
            </a>
           </li>
           <li id="m3_6">
            [ahref]
            
           </li>
          </ul>
         </div>
         <div id="newsAudioUl" style="display: none">
          <ul class="snb_menu">
           <li>
            <ul class="snb_menu_2depth">
             <li class="">
              <a href="/news/aboutVoice.do">
               보이스 소개
              </a>
             </li>
            </ul>
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="news_content_w" id="container">
    <div class="w_inner">
     <div class="w_top_cs">
      <ul class="category_list">
       <li class="cate_format">
        [link]
        
       </li>
       <li class="cate03">
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="w_article">
      <div class="w_article_title">
       <h3 id="vmNewsTitle" itemprop="headline">
        [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
       </h3>
       <div class="info_area">
        <p itemid="https://news.sbs.co.kr/news/reporterPage.do?reporterId=getset" itemprop="author creator" itemscope="" itemtype="http://schema.org/Person">
         <span itemprop="name" style="display:none">
          조도혜 작가, 김도균 기자[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[ahref]</li>[search]<li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
         </span>
         [ahref]
         
         <span class="ir" content="기자,journalist,reporter" itemprop="jobTitle" style="display:none">
          [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][ahref][link]<li>[search]</li>[link][ahref]<li>[search]</li>
         </span>
         <span class="ir" itemprop="homeLocation" style="display:none">
          Seoul[ahref][search]<li>[search]</li>[search][ahref]<li>[link]</li><li>[search]</li><li>[ahref]</li>[link]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[ahref]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[search]</li>[ahref]<li>[search]</li>[link][link]
         </span>
         [ahref]
         
         <span class="ir" content="getset@sbs.co.kr" itemprop="email" style="display:none">
         </span>
        </p>
        <span class="date">
         <strong>
          작성
         </strong>
         <span>
          2018.10.15 17:01<li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[search]
         </span>
         <meta content="2018-10-15T17:01:00+09:00" itemprop="datePublished"/>
         <meta content="2018-10-15T17:01:00+09:00" itemprop="dateCreated"/>
         <strong class="viewcnt" style="display:none">
          조회
         </strong>
         <span class="view viewcnt">
          조회수<li>[link]</li><li>[search]</li>[ahref]<li>[search]</li><li>[link]</li>[search]
         </span>
        </span>
       </div>
       <div class="control_area">
        [ahref]
        
        <strong>
         글자 크기
        </strong>
        <button class="btn_plus" id="btn_font_plus">
         <span class="ir">
          크게보기
         </span>
        </button>
        <button class="btn_minus" id="btn_font_minus">
         <span class="ir">
          글자크기 작게보기[search]<li>[link]</li>[search]<li>[ahref]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li>
         </span>
        </button>
       </div>
      </div>
      <div class="w_article_cont">
       <div class="w_article_left">
        <div class="article_cont_area" itemprop="articleBody">
         <div class="main_text">
          <div class="text_area">
           늦은 시간 수술실을 꽉 채운 의사들의 사진이 현지에서 화제가 되고 있습니다.
           <br>
            [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
           </br>
           <br/>
           현지 시간으로 지난 13일, 타이완 중앙통신(CNA) 등 외신들은 국립대만대학병원에서 한 산모의 출산을 담당한 의사의 사연을 소개했습니다.
           <br>
            <li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][link]
           </br>
           <br>
            <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<li>[ahref]</li>
           </br>
           지난주 금요일, 의사 진청시 씨는 쌍둥이를 임신한 산모의 출산을 맡았습니다.
           <br/>
           <br/>
           그런데 수술 중에 태아의 위치가 비정상적인 곳에 있어 산모가 위험한 상황에 놓인 것을 확인했습니다. 진 씨는 혼자서는 무사히 수술을 마칠 수 없을 거라 판단해 결국 동료 의사들에게 도움을 요청했습니다.
           <br/>
           <br>
            <li>[ahref]</li><li>[search]</li>[link][search][ahref]
           </br>
           놀랍게도 늦은 시간임에도 불구하고 약 40명의 의사가 수술실로 한달음에 달려왔습니다.
           <br/>
           <br/>
           그들은 상황을 파악한 뒤 그림까지 그려가며 산모와 태아 모두를 살릴 수 있도록 머리를 맞댔지만, 안타깝게도 쌍둥이 중 한 명은 결국 세상을 떠나고 말았습니다.
           <br/>
           다음날 담당 의사 진 씨는 당시 수술실 풍경을 페이스북에 공개하며 "최선을 다했지만 결국 실패하고 말았다. 하늘의 뜻을 거스를 수는 없었다"고 안타까운 심정을 고백했습니다.
           <br/>
           <br/>
           산모의 남편도 아이 한 명을 가슴에 묻어야 했지만 수많은 의사가 보여준 노력에 감동해 "어쩔 수 없다는 것을 안다"며 의료진을 위로했다고 전해졌습니다.
           <br/>
           <br>
            <li>[ahref]</li><li>[search]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[link]</li>
           </br>
           이후 이 사연이 소셜미디어를 통해 화제가 되자 누리꾼들은 "눈시울이 뜨거워진다", "항상 생명을 살리기 위해 노력하는 의료진들에게 감사하다"며 감동적이라는 반응을 보이고 있습니다.
           <br/>
           <br/>
           '뉴스 픽' 입니다.
           <br>
            [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><li>[search]</li>
           </br>
           <br>
            [ahref]<li>[link]</li><li>[link]</li>[link][link][search]<li>[ahref]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[search]
           </br>
           (사진= 페이스북 Jin-Chung Shih)
          </div>
         </div>
         <div style="text-align: center;">
          [link]
          
          <br>
           <li>[ahref]</li>[search][ahref][ahref][link][ahref][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[ahref]</li>[link][ahref][search]
          </br>
         </div>
        </div>
        <div class="w_article_info" style="top: 0;">
         <div class="sns_list">
          <ul>
           <li class="facebook">
            <a href="s">
             <span class="ir">
              페이스북으로 공유하기[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[ahref]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
             </span>
            </a>
           </li>
           <li class="twitter">
            [ahref]
            
           </li>
           <li class="naver">
            [link]
            
           </li>
           <li class="more">
            <button>
             <span class="ir">
              SNS 공유버튼 더보기<li>[search]</li><li>[search]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]
             </span>
            </button>
           </li>
          </ul>
          <ul class="add_list">
           <li class="google">
            [link]
            
           </li>
           <li class="kas">
            [ahref]
            
           </li>
           <li class="url">
            [ahref]
            
           </li>
          </ul>
          <div class="layer_url before">
           <div class="url">
           </div>
           <div class="btns">
            <button class="copy" id="copyUrlBtn">
             URL 복사하기
            </button>
            <button class="close">
             <span class="ir">
              X<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[search]</li>[link]<li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
             닫기
            </button>
           </div>
          </div>
          <div class="layer_url after" style="display: none;">
           <div class="txt">
            주소가 복사되었습니다.
            <br>
             [search][search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li><li>[link]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
            </br>
            원하는 곳에 붙여넣기(Ctrl+V)해주세요.
           </div>
           <div class="btns">
            <button class="confirm">
             확인
            </button>
           </div>
          </div>
         </div>
         <div class="w_box reply">
          <a href="r">
           <span class="ir">
            이 기사의 덧글 보기[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[link]</li>[ahref][link][search][ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
           <strong class="getLiveReTotalCount" itemprop="commentCount">
            0
           </strong>
          </a>
         </div>
         <div class="w_box heart">
          [link]
          
         </div>
        </div>
        <div class="w_reporter">
         <span class="thumb">
          <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>
         </span>
         <p class="desc">
          <li>[ahref]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search]
         </p>
        </div>
        <div data-widget_id="job8QLlW" id="dablewidget_job8QLlW" style="padding-top: 60px;">
        </div>
        <div class="w_box w_article_ad">
         <ins class="adsbygoogle" data-ad-client="ca-pub-9470319806711104" data-ad-slot="5368929075" style="display:inline-block;width:650px;height:90px">
         </ins>
        </div>
        <div class="article_relation_area">
         <div class="w_box" id="relationnews" style="display:none">
          <div class="tit_area">
           <h4>
            관련 뉴스
           </h4>
          </div>
          <div class="w_news_list type_line">
           <ul class="type_text" id="relationnewslist">
           </ul>
          </div>
         </div>
         <div class="w_box" id="recommandnews" style="display:none">
          <div class="tit_area">
           <h4>
            추천 뉴스
           </h4>
          </div>
          <div class="w_news_list type_line">
           <ul class="type_text sed_recomm_article_list">
           </ul>
          </div>
         </div>
         <div class="w_box" id="relSection" style="display:none">
         </div>
         <div class="w_box" id="relSeries" style="display:none">
         </div>
         <div class="w_box" id="rankV2" style="display:none">
         </div>
         <div class="w_box" id="relSpecial" style="display:none">
         </div>
         <div class="w_box" id="relBroadcast" style="display:none">
         </div>
        </div>
        <div class="w_box w_article_ad">
         <div id="sn_banner_article_bottom">
         </div>
        </div>
        <div class="w_box w_reply" id="reply">
         <div id="livereContainer">
         </div>
         <div id="livereFbContainer">
         </div>
        </div>
       </div>
       <div class="w_article_side">
        <div class="ad_area" id="sn_banner_side_top">
        </div>
        <div class="w_banner type_bnr_aside">
         [ahref]
         
        </div>
        <div class="w_box">
         <div class="tit_area">
          <h4 class="tit_recent">
           이 시각 인기기사
          </h4>
         </div>
         <div class="w_news_list">
          <ul class="type_thumb">
           <li>
            [link]
            
           </li>
           <li>
            <a class="mdt_wt_link newslink" data-newsid="N1005055462" href="/news/endPage.do?news_id=N1005055462&amp;oaid=N1004972925&amp;plink=TOP&amp;cooper=SBSNEWSEND" title="남북 군인들, 서로 담배 권하며 '화기애애'…맞잡은 손">
             <span class="thumb">
              [search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li>[link][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
             <p class="desc">
              <strong>
               남북 군인들, 서로 담배 권하며 '화기애애'…맞잡은 손
              </strong>
             </p>
            </a>
           </li>
           <li>
            <a class="mdt_wt_link newslink" data-newsid="N1005055474" href="/news/endPage.do?news_id=N1005055474&amp;oaid=N1004972925&amp;plink=TOP&amp;cooper=SBSNEWSEND" title="죽음 도사리는데 '혼자 근무'…또 동료 잃었다 절규">
             <span class="thumb">
              [ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[search][ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             <p class="desc">
              죽음 도사리는데 '혼자 근무'…"또 동료 잃었다" 절규[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </p>
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="w_box">
         <div class="tit_area">
          <h4 class="tit_famous">
           많이 본 뉴스
          </h4>
         </div>
         <div class="w_news_list type_line">
          <ul class="type_text type_ranking">
           <li>
            [link]
            
           </li>
           <li>
            <a class="mnl_nlist_tit newslink" data-newsid="N1005053554" href="/news/endPage.do?news_id=N1005053554&amp;oaid=N1004972925&amp;plink=POP&amp;cooper=SBSNEWSEND" title="KTX 탈선 당일 녹취록에 큰일 났네…이상 감지하고도 출발">
             <p class="desc">
              <span class="num">
               2.[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>
              </span>
              <strong>
               KTX 탈선 당일 녹취록에 "큰일 났네"…이상 감지하고도 출발
              </strong>
             </p>
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a class="mnl_nlist_tit newslink" data-newsid="N1005054517" href="/news/endPage.do?news_id=N1005054517&amp;oaid=N1004972925&amp;plink=POP&amp;cooper=SBSNEWSEND" title="반성을 하는 건지…'성폭력 논란' 김기덕-조재현 근황">
             <p class="desc">
              [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link]<li>[link]</li>
             </p>
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="w_box w_brand_side" id="side_brand01" style="display: none;">
         <div class="tit_area">
          <h4 class="tit_recent">
           더 저널 리스트
          </h4>
         </div>
         <div class="w_news_list">
          <ul class="type_text">
          </ul>
         </div>
         <div class="tit_btns">
          <a class="btn_more" href="#">
           <span class="blind">
            더 저널 리스트
           </span>
           더 보기
          </a>
         </div>
        </div>
        <div class="w_box w_brand_side" id="side_brand02" style="display: none;">
         <div class="tit_area">
          <h4 class="tit_recent">
           마부작침
          </h4>
         </div>
         <div class="w_news_list">
          <ul class="type_text">
          </ul>
         </div>
         <div class="tit_btns">
          <a class="btn_more" href="#">
           <span class="blind">
            마부작침
           </span>
           더 보기
          </a>
         </div>
        </div>
        <div class="ad_area" id="sn_banner_side_bottom">
        </div>
        <div class="ad_yonhap_area">
         <a href="r" rel="noopener" target="_blank" title="연합뉴스 바로가기">
         </a>
        </div>
       </div>
      </div>
     </div>
     <div class="w_btn_top">
      <a class="ir" href="#">
       페이지 최상단으로 가기
      </a>
     </div>
    </div>
    <div aria-hidden="true" class="pswp" role="dialog" tabindex="-1">
     <div class="pswp__bg">
     </div>
     <div class="pswp__scroll-wrap">
      <div class="pswp__container">
       <div class="pswp__item">
       </div>
       <div class="pswp__item">
       </div>
       <div class="pswp__item">
       </div>
      </div>
      <div class="pswp__ui pswp__ui--hidden">
       <div class="pswp__top-bar">
        <div class="pswp__counter" style="display: none;">
        </div>
        <button class="pswp__button pswp__button--close" title="Close (Esc)">
        </button>
        <button class="esp_closebtn nicn" data-st="" title="Close (Esc)">
        </button>
        <button class="pswp__button pswp__button--share" style="display: none" title="Share">
        </button>
        <button class="pswp__button pswp__button--fs" title="Toggle fullscreen">
        </button>
        <button class="pswp__button pswp__button--zoom" title="Zoom in/out">
        </button>
        <div class="pswp__preloader">
         <div class="pswp__preloader__icn">
          <div class="pswp__preloader__cut">
           <div class="pswp__preloader__donut">
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="pswp__share-modal pswp__share-modal--hidden pswp__single-tap">
        <div class="pswp__share-tooltip">
        </div>
       </div>
       <button class="pswp__button pswp__button--arrow--left" title="Previous (arrow left)">
       </button>
       <button class="pswp__button pswp__button--arrow--right" title="Next (arrow right)">
       </button>
       <div class="pswp__caption">
        <div class="pswp__caption__center" id="ori_alt_area">
        </div>
       </div>
      </div>
     </div>
    </div>
    <div class="w_bnr_wing" style="display:none;">
     <a href="r">
     </a>
    </div>
   </div>
   <div class="w_footer">
    <div class="w_inner">
     <div class="menu_area">
      <strong class="logo_news">
       [link]
       
      </strong>
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        <a class="i_sbs" href="/news/subusuNews.do">
         <span class="ir">
          스브스뉴스<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
        </a>
       </li>
       <li>
        <a class="i_f" href="/SBS8news" rel="noopener" target="_blank">
         <span class="ir">
          SBS뉴스 공식 페이스북
         </span>
        </a>
       </li>
       <li>
        <a class="i_t" href="/sbs8news" rel="noopener" target="_blank">
         <span class="ir">
          SBS뉴스 공식 트위터
         </span>
        </a>
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
      </ul>
     </div>
     <div class="search_bg_area">
      <div class="search_area">
       <div itemscope="" itemtype="http://schema.org/WebSite">
        <meta content="https://news.sbs.co.kr/" itemprop="url">
         <form action="/news/search/main.do" itemprop="potentialAction" itemscope="" itemtype="http://schema.org/SearchAction" method="get">
          <meta content="https://news.sbs.co.kr/news/search/main.do?query={query}" itemprop="target">
           <button class="comSearchBtn">
            <span class="ir">
             검색하기
            </span>
           </button>
          </meta>
         </form>
        </meta>
       </div>
      </div>
      <i class="bg_bar">
      </i>
     </div>
     <div class="sitemap_menu" id="sitemap">
      <strong class="blind">
       SBS뉴스 전체메뉴
      </strong>
      <div>
       <strong>
        [ahref]
        
       </strong>
       <ul>
        <li>
         <a href="/news/newsflash.do?plink=SITEMAP&amp;cooper=SBSNEWS">
          최신
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/news/newsSection.do?sectionType=03&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          사회
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/news/newsSection.do?sectionType=08&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          생활 · 문화
         </a>
        </li>
        <li>
         <a href="/news/newsSection.do?sectionType=14&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          연예
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
      <div class="wide">
       <strong>
        [link]
        
       </strong>
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/news/programMain.do?prog_cd=R2&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          모닝와이드
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/news/programMain.do?prog_cd=RO&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          오뉴스
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/news/programMain.do?prog_cd=RB&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          SBS 스페셜
         </a>
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
      <div>
       <strong>
        [link]
        
       </strong>
       <ul>
        <li>
         <a href="/news/newsSpecialList.do?gubun=1&amp;CATEGORY=S1&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          취재파일
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
      <div class="wide">
       <strong>
        [ahref]
        
       </strong>
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/news/voice.do?plink=SITEMAP&amp;cooper=SBSNEWS">
          VOICE
         </a>
        </li>
       </ul>
      </div>
      <div>
       <strong>
        [ahref]
        
       </strong>
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/news/newsPlusList.do?themeId=10000000134&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          뉴스pick
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
      <div>
       <strong>
        [link]
        
       </strong>
       <ul>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         <a href="/news/videoMugListMain.do?gubun=2&amp;plink=SITEMAP&amp;cooper=SBSNEWS">
          시리즈
         </a>
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
      <div>
       <strong>
        [ahref]
        
       </strong>
       <ul>
        <li>
         [ahref]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
      <div class="wide">
       <strong>
        바로가기
       </strong>
       <ul class="family_list">
        <li>
         [link]
         
         <div class="layer_family">
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <h2>
             <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
            </h2>
            <a href="/vote2018/main.do?plink=SITEMAP&amp;cooper=SBSNEWS" target="_blank">
             6.13 지방선거
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
         <button class="btn_close">
          특집 리스트 닫기
         </button>
        </li>
        <li>
         [ahref]
         
         <div class="layer_family">
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
          </ul>
         </div>
         <button class="btn_close">
          시청자 참여 리스트 닫기
         </button>
        </li>
        <li>
         <a href="e">
          About SBS
          <span class="ir i_more">
           리스트[link]<li>[link]</li><li>[link]</li>[search][link][search][search]
          </span>
         </a>
         <div class="layer_family">
          <ul>
           <li>
            <a href="r" rel="noopener" target="_blank">
             SBS PR
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/cs/endPage.do?contNo=8&amp;bbsCd=com_cs0001&amp;backUrl=http%3A%2F%2Fw3.sbs.co.kr%2Fcs%2FcustomerNotice.do">
             SBS 방송편성규약
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="r" rel="noopener" target="_blank">
             SBS 드라마여행
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/site/sitemap.do">
             사이트맵
            </a>
           </li>
          </ul>
         </div>
         <button class="btn_close">
          어바웃 SBS 리스트 닫기
         </button>
        </li>
        <li>
         <a href="e">
          SBS Family
          <span class="ir i_more">
           리스트
          </span>
         </a>
         <div class="layer_family">
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a href="r" rel="noopener" target="_blank">
             SBS Golf
            </a>
           </li>
           <li>
            <a href="r" rel="noopener" target="_blank">
             SBS CNBC
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="r" rel="noopener" target="_blank">
             SBS MTV
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a href="m" rel="noopener" target="_blank">
             SBS 인터내셔널
            </a>
           </li>
           <li>
            <a href="r" rel="noopener" target="_blank">
             SBS A&amp;T
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
         </div>
         <button class="btn_close">
          SBS 패밀리 리스트 닫기
         </button>
        </li>
        <li>
         [ahref]
         
         <div class="layer_family">
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/" rel="noopener" target="_blank">
             광주 방송
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/" rel="noopener" target="_blank">
             부산 방송
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/" rel="noopener" target="_blank">
             제주 방송
            </a>
           </li>
          </ul>
         </div>
         <button class="btn_close">
          지역민영방송 리스트 닫기
         </button>
        </li>
        <li>
         [link]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="copyright_area">
      <dl>
       <dt>
        <span class="ir i_sbs">
         SBS 정보<li>[search]</li><li>[link]</li><li>[ahref]</li><li>[search]</li><li>[link]</li>[search][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[search]
        </span>
       </dt>
       <dd>
        <ul>
         <li>
          서울특별시 양천구 목동서로 161
          <i class="ir i_bar">
           |
          </i>
         </li>
         <li>
          대표이사 박정훈
          <i class="ir i_bar">
           |
          </i>
         </li>
         <li>
          방송관련문의
          <a href="6">
           (02)2061-0006
          </a>
          <i class="ir i_bar">
           |
          </i>
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </dd>
      </dl>
      <dl>
       <dt>
        <span class="ir i_sbsch">
         SBS 아이앤엠 정보[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[search]</li><li>[search]</li>
        </span>
       </dt>
       <dd>
        <ul>
         <li>
          서울특별시 마포구 상암산로 82
          <i class="i_bar">
           |
          </i>
         </li>
         <li>
          SBS프리즘타워 15층
          <i class="i_bar">
           |
          </i>
         </li>
         <li>
          대표이사  유종연
          <i class="i_bar">
           |
          </i>
         </li>
         <li>
          고객센터 문의
          <a href="0">
           (02)2001-6600
          </a>
          <i class="i_bar">
           |
          </i>
         </li>
         <li>
          Email
          [link]
          
          <i class="i_bar">
           |
          </i>
         </li>
         <li>
          사업자 번호 598-88-00752
          <i class="i_bar">
           |
          </i>
         </li>
         <li>
          통신 판매업 신고번호 제 2017-서울마포-1652 호
          <i class="i_bar">
           |
          </i>
         </li>
         <li>
          부가통신사업 신고번호 제 2-01-17-0120호
         </li>
        </ul>
       </dd>
      </dl>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0325
  </b>
 </body>
</html>