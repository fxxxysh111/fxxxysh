--->|VU5JVCBWIFogIFRSQU5TRk9STSBBTkQgRElGRkVSRU5DRSBFUVVBVElPTlMgOSArIDMgWiB0cmFuc2Zvcm0gICBFbGVtZW50YXJ5IHByb3BlcnRpZXMgICBJbnZlcnNlIFogICB0cmFuc2Zvcm0gICBDb252b2x1dGlvbiB0aGVvcmVtICBGb3JtYXRpb24gb2YgZGlmZmVyZW5jZSBlcXVhdGlvbnMgICBTb2x1dGlvbiBvZiBkaWZmZXJlbmNlIGVxdWF0aW9ucyB1c2luZyBaICAgdHJhbnNmb3JtLiAKV2VpZ2ggb3V0IHRoZSBtYWNoaW5lIGFuZCBkbyBub3QgYmUgZXhjaXRlZC4gCkNBRVM0cmVuZXdhYmxlcyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJIGhhdmUgYWxzbyBiZWVuIHRoZSAiYmFkIHBsYXllciIgeW91IGRlc2NyaWJlIGEgbnVtYmVyIG9mIHRpbWVzICh3ZWxsIG5vdCB0aGUgUVE3NzUgY2FzZSksIGFuZCBJIG5vdGljZSBJIHBsYXkgdGhhdCB3YXkgd2hlbiBJIGNhcmUgbW9yZSBhYm91dCBzZWVpbmcgdGhlIGNhcmRzIHRoYW4gdGhlIGFtb3VudCBiZWluZyBiZXQuIApJIHNlZSB0aGVtIGV2ZXJ5IG5pZ2h0IHdoZW4gSSBhbSBpbiB0aGUgYmFja3lhcmQgc21va2luZyBhbmQgcmVsYXhpbmcuIE91ciB0d28gYm95cywgRnJhbmt5IGFuZCBXaW5zdG9uLCBhcmUgaW5kb29yIGtpdHRpZXMsIHNhZmUuIApZb3VyIHN0b3J5IGlzIGFib3V0IHlvdXIgZmFtaWx5IGFwcGFyZW50IHBzeWNoaWMgYWJpbGl0eSwgd2hpY2ggc2hvdWxkIGluc3RlYWQgYmUgc2hhcmVkIG9uIGEgc3VicmVkZGl0IHRoYXQgZGVhbHMgd2l0aCBzdWNoIG1hdHRlcnMuIFJlZ3JldHRhYmx5LCAvci9MZXRzTm90TWVldCBpcyBub3QgdGhhdCBzdWJyZWRkaXQuIFlvdSB3ZXJlIGluZm9ybWVkIG9mIHRoaXMgYnkgY29tbXVuaXR5IG1lbWJlcnM7IGNvbnRpbnVpbmcgdG8gaW5zaXN0IHRoYXQgaXQgaXNuIGEgcGFyYW5vcm1hbCBzdG9yeSBzdGlsbCBkb2VzbiBtZWFuIGl0IGZpdHMgb24gdGhpcyBzdWJyZWRkaXQuCkV2ZXJ5IGNhc2lubyBpcyBhIGdpYW50IFNraW5uZXIgQm94IHRoYXQgcmVjb3JkcyBhbmQgYW5hbHl6ZXMgdGhlIGJlaGF2aW9yIG9mIHBhdHJvbnMuIApUaGUgZm9sbG93aW5nIGRheSB3YXMgb3VyICJiZWFjaCBkYXkiLiBXZSBoZWFkZWQgb3V0IG9mIHRvd24gYW5kIHBpY2tlZCB1cCB0d28gaGl0Y2hoaWtlcnMgKGJhY2twYWNrZXJzKSB3aG8gbmVlZGVkIHRvIGdvIHRvIHRoZSBiZWFjaCB0b28uIFdlIGRyb3BwZWQgdGhlbSBvZmYgYXQgYSBob3N0ZWwgd2l0aCBoYW1tb2NrcyBhbmQgYWxsIEkgY291bGQgdGhpbmsgd2FzIHRoYXQgSSBhbSBkZWZpbml0ZWx5IHRvbyBvbGQgdG8gc3RheSBpbiBwbGFjZXMgdGhhdCBhcmUgJDQgYSBuaWdodCEgT3VyIGhvdGVsIGhhZCByZWNvbW1lbmRlZCB3ZSBnbyB0byBQbGF5YSBSb2NhIGluIExhcyBQZW5pdGFzLiAKVGhlIHNvbmcgcGVha2VkIGF0IDEgb24gdGhlIElyaXNoIFJlY29yZGVkIE11c2ljIEFzc29jaWF0aW9uIChJUk1BKSBzaW5nbGVzIGNoYXJ0LiBIZXIgMm5kIHNpbmdsZSwgUG9rZXIgRmFjZSB3YXMgcmVsZWFzZWQgMTEgQXByaWwgMjAwOSBhbmQgYWxzbyBwZWFrZWQgYXQgMS4gCig5KSAgIFRoZSBSdWxlICAgSW5kaXZpZHVhbCBwb3N0cyBoaWdobGlnaHRpbmcgYm9kaWx5IGZ1bmN0aW9ucyBzdWNoIGFzIGJvd2VsIG1vdmVtZW50cyB3aWxsIGJlIHJlbW92ZWQgYXQgZGlzY3JldGlvbiBvZiB0aGUgbW9kZXJhdGlvbiB0ZWFtLiBBcyB0aGlzIHN1YnJlZGRpdCBpcyBxdWlja2x5IGFwcHJvYWNoaW5nIDYwMCwwMDAgc3Vic2NyaWJlcnMgd2Uga2luZGx5IGFzayB0aGF0IGV2ZXJ5b25lIHJlYWRzIGFuZCBmb2xsb3dzIHRoZSBydWxlcy4gVGhlcmUgaGFzIGJlZW4gbXVjaCBkZWJhdGUgb3ZlciB0aGUgdXNlIG9mIERhaWx5IHRocmVhZHMgZm9yIEFjaGlldmVtZW50cyBhbmQgUXVlc3Rpb25zLCBhbmQgd2Ugc3RpbGwgc3Ryb25nbHkgc3VwcG9ydCB0aGlzIG1ldGhvZC4gV2UgZmVlbCB0aGF0IGdyZWF0IGRpc2N1c3Npb24gY2FuIGhhcHBlbiBqdXN0IGFzIHdlbGwgaW4gYSB0aHJlYWQuCk90aGVyIGdvb2QgS2V0dGxlYmVsbCBvciBNY0dpbGwgYXJ0aWNsZXM6Ckkgd2FzIHRlYWNoaW5nIGFkdWx0cyBmdWxsIHRpbWUgKHdoaWNoIEkgaGlnaGx5IHJlY29tbWVuZCBvdmVyIHRlYWNoaW5nIGtpZHMsIHdheSBtb3JlIGNoaWxsIGFuZCBlYXN5IHRvIG1ha2UgZnJpZW5kcyksIGFuZCBkb2luZyBvbmUgb3IgdHdvIG9uZSBvbiBvbmUgb3IgY29tcGFueSB0cmFpbmluZyBjbGFzc2VzIGVhY2ggd2VlayBpbiB0aGUgbW9ybmluZyBiZWZvcmUgd29yay4gT3IgeW91IGNvdWxkIG5vdCBkbyB0aGF0ICAgSSBkZWZpbml0ZWx5IGVhcm5lZCBlbm91Z2gganVzdCBmcm9tIG15IHJlZ3VsYXIgam9iIHRvIGxpdmUgY29tZm9ydGFibHkgYW5kIHNhdmUuLiAKVGhlIEFyZ29uYXV0cyBsb3N0IG5pbmUgb2YgdGhlaXIgbGFzdCAxMCBnYW1lcyB0aGlzIHBhc3Qgc2Vhc29uIGFuZCB3ZXJlIGhlbGQgd2lubGVzcyBvbiB0aGUgcm9hZCAoMCA5KS4gVHJlc3RtYW4gd2FzIGhpcmVkIGluIEZlYnJ1YXJ5IDIwMTcgYW5kIHBvc3RlZCBhIDE1IDIzIHJlY29yZCB3aXRoIFRvcm9udG8uCkluIG15IGJpdCBvZiBleHBlcmllbmNlIHdvcmtpbmcgd2l0aCBJUCBtYXR0ZXJzLCB3aGVuIHlvdSBoYXZlIGEgdHJhZGVtYXJrIG9yIHdoYXRldmVyIGZpbGVkLCBldmVuIGlmIHlvdSBnZXQgc29tZSBwYXBlcndvcmsgd3Jvbmcgb3IgbWVzcyB1cCBwYXltZW50IHNvbWVob3cgb3Igd2hhdCBoYXZlIHlvdSwgdGhhdCBtYXJrIHN0aWxsIHN0YXlzIHRpZWQgdG8gdGhlIGNsaWVudCB1bnRpbCB0aGUgYXBwbGljYXRpb24gaXMgdG90YWxseSBkcm9wcGVkLiBQYXRlbnRzIGFuZCBmaWxpbmcgbWFya3MgY2FuIGJlIGEgaHVnZSBtb25leSBzaW5rIGJ1dCBvdGhlcndpc2UgYXJlIGV4dHJlbWVseSBmb3JnaXZpbmcgd2l0aCB0aGluZ3Mgb25jZSB5b3Ugc3RhcnRlZCB0aGUgZmlsaW5nIHByb2Nlc3MuCkkgZG9uIGhhdmUgbWFueSB0aXBzIHJlZ2FyZGluZyBlYXRpbmcgaGVhbHRoaWx5IHRob3VnaCwgSSBzdGlsbCBlYXQgbWFueSBidXJnZXJzIGFuZCBmcmllcywgdGhlcmUgYXJlIGEgdG9uIG9mIG9wdGlvbnMgcmVnYXJkaW5nIHZlZ2V0YXJpYW4gYnVyZ2VycyBpbiBvdXIgdG93biwgdGhvdWdoIG1vc3QgcmVzdGF1cmFudHMgb2ZmZXIgb25seSBvbmUgb3IsIGF0IG1vc3QsIHR3by4gCihBcyBmYXIgYXMgbWFya2V0aW5nIGdvZXMsIHlvdSBjYW4ndCBiZWF0IFJveSBSb3VuZGVyICAgaGUgc3VjY2Vzc2Z1bGx5IHB1c2hlcyBhIDIgeWVhciBvbGQgcG9rZXIgZUJvb2sgZm9yIDMgdGltZXMgdGhlIGNvc3Qgb2YgTWF0dGhldyBIaWxnZXIncyAiSW50ZXJuZXQgVGV4YXMgSG9sZCdlbSIsIGEgdmFzdGx5IHN1cGVyaW9yIHByb2R1Y3QpLi4gCllvdXIgaGlwIGZsZXhvcnMgbGlmdCB5b3VyIGxlZ3MsIGFuZCBhcmUgdGh1cyBzb21lIG9mIHRoZSBzdHJvbmdlc3QgYW5kIG1vc3QgdXNlZCBtdXNjbGVzIGluIHlvdXIgYm9keS4gVGhleSBwdWxsIHRoZSBsZWdzIHVwIGZyb20gdGhlIGluc2lkZSB0b3Agb2YgdGhlIGZlbXVyLCBhbmQgYXJlIGFuY2hvcmVkIHRvIHRoZSBpbnNpZGUgb2YgeW91ciBzcGluZSBwZWx2aXM7IGlmIHRoZXkgYXJlIHRpZ2h0LCB0aGV5IHB1bGwgeW91ciBzcGluZSBoaXBzIGZvcndhcmQsIHdoaWNoIGNhbiBjYXVzZSBsb3cgYmFjayBhbmQgaGlwIHBhaW4uIFRoZSBtb3JlIHlvdSBzaXQgb3Igc2xlZXAgd2l0aCB5b3VyIGtuZWVzIHB1bGxlZCB1cCwgdGhlIHNob3J0ZXIgYW5kIHRpZ2h0ZXIgdGhlIG11c2NsZXMgZ2V0LiBXaGlsZSBpdCBpcyBoYXJkIHRvIG1hc3NhZ2UgeW91ciBvd24gaGlwIGZsZXhvcnMsIHN0cmV0Y2hpbmcgdGhlbSBvZnRlbiByZWxpZXZlcyB0aGUgcGFpbi4gVGhlcmUgYXJlIHNldmVyYWwgaGlwIGZsZXhvciBzdHJldGNoZXMgb24gdGhlIEludGVybmV0OyB0aGV5IGNhbiBiZSB0cmlja3kgdG8gZG8gcHJvcGVybHkgYW5kIHJlcXVpcmUgcGVyZm9ybWluZyBhIHBlbHZpYyB0aWx0ICh1c2luZyB5b3VyIGFicyB0byBwdWxsIHRoZSBwZWx2aWMgYm9uZSB1cHdhcmQpLgpDb2xlJ3Mgc21hbGwgYmxvY2sgViA4IHdhcyBvZmZlcmVkIGluIHRoZSAxOTU1IENoZXZ5LiBNb3ZpbmcgdXAgZnJvbSBjaGllZiBlbmdpbmVlciwgaGUgd2FzIG5hbWVkIHRoZSBkaXZpc2lvbidzIGdlbmVyYWwgbWFuYWdlciBpbiBKdWx5IDE5NTYuIEZyb20gRmViLiA1IHRvIE1hcmNoIDgsIDE5NTcsIENvbGUgZW1iYXJrZWQgb24gYSBncnVlbGluZywgbmF0aW9ud2lkZSBzZXJpZXMgb2YgZGVhbGVyIG1lZXRpbmdzLgpNb3N0IFBvcHVsYXIgVmlld2VkIFRyZW5kaW5nCkJ1dCwgaXQgZG9lcyBzZWVtIHRoYXQgc29tZSBsYXdzIHdlcmUgdmlvbGF0ZWQgaW4gdGhlIE1haW5lIGNhbXBhaWduIGJlY2F1c2Ugbm90IGFsbCBvZiB0aGUgbW9uZXkgY2FtZSBmcm9tIENhdGhvbGljIGRpb2Nlc2VzIGluIHRoZSBVUy4gCkkgYm91Z2h0IGEgYm90dGxlIG9mIHdhdGVyIGZvciA0MCBiYWh0LjYvMTAuIApDb3JyZWN0LiAKTWVpbiBVbXN0ZWlnZWhhbHQgZW50ZmxsdCB0cm90emRlbSB3aXJkIG1pciBkaWUgVmVyYmluZHVuZyBnYW56IG5vcm1hbCBhbmdlemVpZ3QuLiAKVGhlcmUgaXMgbGl0dGxlIHN0cmF0ZWd5IGFuZCBhYnNvbHV0ZWx5IG5vIGJsdWZmaW5nIGludm9sdmVkIGluIHRoaXMgZ2FtZSwgd2hpY2ggaXMgd2h5IEkgc2FpZCBhdCB0aGUgYmVnaW5uaW5nIHRoYXQgaXQgaXMgYSBnYW1lIGZvciB0aGUgYmVnaW5uZXIuIFRoZSBtYWluIGRlY2lzaW9uIGluIHRoaXMgZ2FtZSBjb21lcyB3aGVuIHRoZSBwbGF5ZXIgZmlyc3QgbG9va3MgYXQgdGhlIGNhcmRzIGhlIGlzIGRlYWx0LiBIZXJlIGhlIG11c3QgZGVjaWRlIHdoZXRoZXIgdG8gZm9sZCBvciB0byByYWlzZS4gSW4gdGhyZWUgY2FyZCBwb2tlciBhIHJhaXNlIG1lYW5zIHlvdSBhcmUgcGF5aW5nIHRvIHNlZSB0aGUgZGVhbGVyJ3MgY2FyZHMuCkluIG90aGVyIHdvcmRzLCBpZiBzb21lb25lIGlzIG5vdCBnbHV0ZW4gc2Vuc2l0aXZlLCB0aGV5IG1heSBzdGlsbCByZW1haW4gc2Vuc2l0aXZlIHRvIHRoZSBtYW55IG5vbiBnbHV0ZW4gYXNwZWN0cyBvZiBtb2Rlcm4gaGlnaCB5aWVsZCBzZW1pIGR3YXJmIHdoZWF0LCBzdWNoIGFzIGFwcGV0aXRlIHN0aW11bGF0aW9uIGFuZCBtZW50YWwgImZvZywiIGpvaW50IHBhaW5zIGluIHRoZSBoYW5kcywgbGVnIGVkZW1hLCBvciB0aGUgbWFueSByYXNoZXMgYW5kIHNraW4gZGlzb3JkZXJzLiAKR3Jvd2luZyB1cCBzb21lIG9mIHRoZSBiYXNoaW5nIGlzIGNhbGxpbmcgeW91IHN0dXBpZCBmb3Igbm90IGJlaW5nIGFibGUgdG8gZG8gbWF0aCBjYWxjdWxhdGlvbnMgYXMgYSBqb2tlLiAKV2UgZ290IHRvIHRoZSB0b3AsIHdlIGhvcHBlZCBvdXQgYW5kIGVhY2ggZ290IGEgc21hbGwsIHdvb2RlbiBzbGVkIHdpdGggbWV0YWwgc2tpZHMuIFJlYWxpemVkIHRoYXQgd2Ugd2VyZSBleHBlY3RlZCB0byBzbGVkIG9uIHRoZSByb2FkIChzYW5zIGd1YXJkcmFpbCwgbWluZCB5b3UhKSBkb3duIHRoZSBtb3VudGFpbiEgZmFtaWxpZXMgd2l0aCBraWRzIHdlcmUgaG9wcGluZyBvbiB0aGVpciBzbGVkcyBhbmQgd2hpenppbmcgb2ZmLiAKVGhpcyBjcmVhdGVzIGFyZWFzIHdoZXJlIHRoZXJlIGlzIGEgbG90IG9mICJmaW5nZXIgcHJvdGVpbiIgYW5kIGFyZWFzIHdoZXJlIHRoZXJlIGlzIG5vbmUuIAo3LiBGaWJyb215YWxnaWEgaXMgYXNzb2NpYXRlZCB3aXRoIGlycml0YWJsZSBzeW5kcm9tZSwgdGVuc2lvbiBoZWFkYWNoZSwgcHJpbWFyeSBkeXNtZW5vcnJoZWEsIG1pdHJhbCB2YWx2ZSBwcm9sYXBzZSBhbmQgY2hyb25pYyBmYXRpZ3VlIHN5bmRyb21lLgpXaXRoIHRoaXMgY29uZGl0aW9uIGFyaXNpbmcgZWFybHkgaW4gdGhlIG1vcm4gaW5nIG1hbnkgd2VyZSB1bmFibGUgdG8gc2xlZXAgYW5kIHRoZSBmYWN0IHRoYXQgdGhlIHBvd2VyIGxpbmVzIHdlcmUgY29uc3RhbnRseSBzaG9ydGluZyBvdXQgbWFkZSB0aGUgZXZlbmluZyBzZWVtIG1vcmUgdGVycmlhYmxlIHRoYW4gd291bGQgYmUgdGhlIGNhc2Ugb3RoZXJ3aXNlLiBBY2NvcmRpbmcgdG8gSi4gQi4gCkVmZmVjdGl2ZSBzdGFjayBpcyBtZSB3aXRoIGFib3V0IDM3MDAuIFByZSBmbG9wIGEgcmVnIHJhaXNlcyB0byA2MCwgSSBjYWxsIGFuZCB0d28gb3RoZXJzIGluY2x1ZGluZyB2aWxsYWluIGNhbGwuIEZsb3AgaXMgNiA3IDkgdHdvIGNsdWJzIGFuZCBvbmUgaGVhcnQgc28gd2UgZmxvcCB0aGUgbnV0cyB3aXRoIGEgZ29vZCByZWRyYXcuIApIZSBsb29rcyBsaWtlIGhpcyBhZ2UsIGhlIGp1c3QgaGFzIGEgYml0IG9mIGEgaGFycm93ZWQgbG9vayBhYm91dCBoaW0uIAoyLCAxOTE5LCBEZXQuIApObyBiaWdnaWUgd2UgdGhvdWdodC4gCk91ciB0b3duIHdhcyBwdXQgb24gbG9jayBkb3duIGFuZCBpcyBzdGlsbCBvbiBsb2NrZG93bi4gCldvdywgSSBkb24gcGxheSBEb3RhIG11Y2ggSSB1c3VhbGx5IGp1c3QgcGxheSBMZWFndWUgc28gSSBkb24ga25vdyBpZiB0aGlzIGlzIHdhbnRlZCBvciB3aGF0IGJ1dCBpbiBMZWFndWUgeW91IGdldCBsb3cgcHJpb3JpdHkgcXVldWUgZnJvbSBsZWF2aW5nIGdhbWVzLCBoYXZpbmcgYSBiYWQgaW50ZXJuZXQgY29ubmVjdGlvbiBhbmQgSSB0aGluayBzb21ldGltZXMgZmxhbWluZy4gV2hlbiB5b3UgZ2V0IGxvdyBwcmlvcml0eSBjbHVlIHlvdSB0aGVuIGdldCAxMC8yMC81MCBnYW1lcyBvZiBsb3cgcHJpb3JpdHkgcXVldWUgd2hlcmUgeW91IGhhdmUgdG8gd2FpdCAyMCBtaW51dGVzIGJlZm9yZSB0aGUgZ2FtZSBzdGFydHMgbG9va2luZyBmb3IgYSBnYW1lIGFuZCB0aGVuIHlvdSB3YWl0IHRoZSB1c3VhbCAxbWluIDJtaW4gc2VhcmNoaW5nIHRpbWUuIApMYSByaHViYXJiZSB0YWl0IGVuIHJ1cHR1cmUgZGUgc3RvY2sgKGFoIGxlcyBpbmdyZGllbnRzIGRlIHNhaXNvbiAhKSBldCBqJ2FpIHByaXMgdmFuaWxsZSwgY2hvY29sYXQsIGZyYWlzZSwgY2l0cm9uLiAKRm9yIGluc3RhbmNlLCB0aGUgZmVkcyBtYW5kYXRlIHRoYXQgYWxsIGFwcGx5aW5nIGNvbXBhbmllcyBtdXN0IHNob3cgdGhleSBoYXZlIGRvbmUgZml2ZSBlcXVpdmFsZW50IHByb2plY3RzIGFzIGEgbWluaW11bS4gCjNiZXR0aW5nIHRoZSBmbG9wIGlzIGEgZG9uayBwbGF5LCBub2JvZHkgaXMgYmFsYW5jZWQgd2hlbiB0aGV5IGRvIHRoYXQuIApVc2Ugc3dhZyBsYW5ndWFnZSAgIHNheSBoYXRlciBibG9ja2VycyBhbmQgc3R1bm5hc2hhZGVzIGluIGxpZXUgb2YgInN1bmdsYXNzZXMiLiBXaGVuIHNvbWUgZmlzaCBhc2tzICJpcyB0aGUgc3RyYWRkbGUgbGl2ZSIgLiAKSXQgbWFrZXMgbm8gc2Vuc2UuLiAKSW4gb3RoZXIgd29yZHMsIEJpZGVuIHBpZWNlIGlzIHB1cmUgcHJvcGFnYW5kYS4gCk5ldyBEZWxoaSwgTWF5IDAyLCAyMDE4V2l0aCBhIHZpc2lvbiB0byBleHBhbmQgaXRzIGZvb3RwcmludCBpbiB0aGUgU3BvcnRzIGFuZCBCcm9hZGNhc3RpbmcgdmVydGljYWwsICwgYSBsZWFkaW5nIGluZGVwZW5kZW50IGFnZW5jeSwgaGFzIHJlY2VudGx5IHdvbiB0aGUgUFIgbWFuZGF0ZSBmb3IgRFNQT1JULCBhIHByZW1pdW0gc3BvcnRzIGNoYW5uZWwuIFRoZSBtYW5kYXRlIGluY2x1ZGVzIHN0cmF0ZWdpYyBjb3Vuc2VsLCBwbGFubmluZyBhbmQgbWVkaWEgcmVsYXRpb25zIGZvciByYXBpZGx5IGdyb3dpbmcgc3BvcnRzIGNoYW5uZWwgaW4gSW5kaWEuRFNQT1JUIGxhcmdlbHkgZm9jdXNlcyBvbiBicmluZ2luZyBzcG9ydHMgY29udGVudCBmcm9tIGFyb3VuZCB0aGUgd29ybGQgd2l0aCBhbiBleHBhbnNpdmUgY2F0YWxvZ3VlIG9mIG1vcmUgdGhhbiA0MDAwIGhvdXJzIG9mIGxpdmUgcHJvZ3JhbW1pbmcgdG8gSW5kaWFuIGF1ZGllbmNlcy4gClRoZXNlIFRlcm1zIGFwcGx5IHRvIGFsbCB1c2VycyBvZiB0aGUgU2VydmljZXMsIHdoZXRoZXIgb3Igbm90IHlvdSBoYXZlIHJlZ2lzdGVyZWQgZm9yIG9uZSBvciBtb3JlIG9mIHRoZSBTZXJ2aWNlcywgYW5kIGJ5IHVzaW5nIHRoZSBTZXJ2aWNlcyB5b3UgYWdyZWUgdG8gY29tcGx5IHdpdGggdGhlc2UgVGVybXMgYW5kIGFueSBhZGRpdGlvbmFsIHRlcm1zIGFuZCBjb25kaXRpb25zIHRoYXQgd2UgcHJvdmlkZSB0byB5b3UgaW4gY29ubmVjdGlvbiB3aXRoIHlvdXIgdXNlIG9mIG9yIGFjY2VzcyB0byBzYW1lICgiQWRkaXRpb25hbCBUZXJtcyIpLiBUaGUgU2VydmljZXMgbWF5IGFsc28gcHJvdmlkZSBydWxlcyBvZiBwYXJ0aWNpcGF0aW9uIGZvciBjZXJ0YWluIGFjdGl2aXRpZXMgd2l0aGluIHRoZSBTZXJ2aWNlcywgaW5jbHVkaW5nLCB3aXRob3V0IGxpbWl0YXRpb24sIGNvbnRlc3RzLCBzd2VlcHN0YWtlcywgYW5kIG90aGVyIGluaXRpYXRpdmVzICgiUnVsZXMiKS4gCkxhZHkgR2FHYSBoYXMgbmV2ZXIgYmVlbiBzaHkgYWJvdXQgaGVyIHNleHVhbGl0eSBidXQgaXQgc2VlbXMgdGhhdCBpbiB0aGUgcGFzdCBzaGUgd2Fzbid0IGFzIGtlZW4gdG8gbGV0IG9uIHRvIGhlciBsb3ZlcnMgdGhhdCBzaGUgd2FzIGJpc2V4dWFsLiBOb3cgY29uc2lkZXJlZCBhIGdheSBpY29uLCBHYWdhIGF0dHJpYnV0ZXMgbXVjaCBvZiBoZXIgZmFtZSwgZXNwZWNpYWxseSBpbiB0aGUgZWFybHkgc3RhZ2VzLCB0byB0aGUgTEdCVCBjb21tdW5pdHkgYW5kIGNhbXBhaWducyBmb3IgZ2F5IHJpZ2h0cyBhY3Jvc3MgdGhlIHdvcmxkLgpTaGUgYWxzbyBhbGxlZ2VzIHRoYXQsIHdoaWxlIGhhdmluZyBzZXggdG9nZXRoZXIgbGF0ZXIgdGhhdCBtb250aCwgU2Fsb21vbiBwdXQgYSBwaWxsb3cgb3ZlciBoZXIgZmFjZSBhbmQgInRyaWVkIHRvIHN0cmFuZ2xlIiBoZXIuIFdoZW4gaGUncyB1cHNldCBhZnRlciBhIGJhZCBwb2tlciBnYW1lIG9yIGZyb20gbm90IGdldHRpbmcgbXVjaCBzbGVlcCwgQW5kZXJzb24ncyBkZWNsYXJhdGlvbiBjb250aW51ZXMsIGhlIHdpbGwgY2FsbCBoZXIgY3J1ZWwgbmFtZXMgc3VjaCBhcyAic2x1dCIgYW5kICJ1Z2x5IG9sZCBiaXRjaC4iLiAKRWduYXJkcyAgMiBwb2ludHMgIHN1Ym1pdHRlZCA2IGhvdXJzIGFnbwpJZiBzb21lb25lIHJhbiBvdXQgb2YgbW9uZXkgYW5kIG5lZWRzIGdhcyBtb25leSB0byBnZXQgdG8gd29yayBhbmQgdGhlIG9ubHkgdGhpbmcgdGhleSBjYW4gdGhpbmsgb2YgaXMgdG8gbWFrZSBhIHN0YXR1cyB1cGRhdGUgb24gRmFjZWJvb2sgYXNraW5nIGlmIGFueW9uZSBjYW4gc3BhcmUgdGhlbSBzb21lIG1vbmV5LCB0aGV5IGFyZW4gcmVhbGx5IGJlaW5nIGNob29zeS4gVGhleSBnb3QgdGhlIGJlZ2dhciBwYXJ0IGRvd24sIGJ1dCB0aGlzIHN1YiBpcyBub3QgL3IvYmVnZ2FycyBzbyB0aGF0IHBvc3Qgd291bGRuIGZpdC4gSWYgdGhhdCBzYW1lIHBlcnNvbiB0dXJucyBkb3duIHNvbWVvbmUgb2ZmZXJpbmcgdG8gZ2l2ZSB0aGVtIGEgcmlkZSB0byB3b3JrIGJlY2F1c2UgdGhleSBkb24gd2FudCB0byBiZSBzZWVuIGluIGEgUFQgQ3J1aXNlciwgdGhlbiB0aGF0IHBvc3Qgd291bGQgZml0LgpUaGUgYWR2YW50YWdlIG9mIGRuc21hc3EgKHRoZSByZWFsIGJhY2tib25lIHRvIHBpaG9sZSkgaXMgdGhlIGFiaWxpdHkgdG8gd2lsZGNhcmQgYmxvY2sgZG9tYWlucywgd2hpY2ggeW91IGNhbiBkbyB3aXRoIGEgaG9zdHMgZmlsZS4gClRoZXJlIGFyZSBhIG51bWJlciBvZiByZXNlYXJjaCBvcmdhbmlzYXRpb25zIHdpdGhpbiB0aGUgZWZmZWN0aXZlIGFsdHJ1aXNtIGNvbW11bml0eSBkZWRpY2F0ZWQgdG8gZmlndXJpbmcgb3V0IHdoaWNoIGludGVydmVudGlvbnMvY2hhcml0aWVzIGFyZSB0aGUgbW9zdCBlZmZlY3RpdmUuIFJFRyB0aGVuIGRvZXMgdHdvIHRoaW5nczogaXQgc3ByZWFkcyB0aGUgaWRlYSBvZiBlZmZlY3RpdmUgZ2l2aW5nIHRvIHRoZSBwdWJsaWMsIGFuZCBpdCBmdW5kcmFpc2VzIHNwZWNpZmljYWxseSBmb3IgdGhvc2UgdG9wIHJlY29tbWVuZGVkIGNoYXJpdGllcy4gClRoZSAiTWFpZGVuIFRyaWJ1dGUgb2YgQmFieWxvbiIgd2FzIGEgc2VyaWVzIG9mIGFydGljbGVzIGFuZCBhIHNpbWlsYXIgcGllY2Ugb2YgeWVsbG93IGpvdXJuYWxpc20gcHVibGlzaGVkIGluIHRoZSBQYWxsIE1hbGwgR2F6ZXR0ZSBpbiAxODg1LiBJbiBpdCwgdGhlIHJlcG9ydGVyIChtYWxlKSBzdXBwb3NlZGx5IHVuY292ZXJlZCBhIHNleCBzY2FuZGFsIHdoZXJlIChwb29yLCB3aGl0ZSkgdmlyZ2lucyBhcmUgYmVpbmcgcHJvY3VyZWQgYnkgb2xkZXIgKHJpY2gsIHdoaXRlKSBtZW4gZm9yIHNleHVhbCBwdXJwb3Nlcy4gCig0NzIgU2hhd211dCBBdmUuLCBCb3N0b247IDY2IExlb25hcmQgU3QuLCBCZWxtb250OyAyMzYgV2FzaGluZ3RvbiBTdC4sIEJyb29rbGluZTsgMzM4IFdhc2hpbmd0b24gU3QuLCBEZWRoYW0pLiAKWW91IHNob3VsZCBiZSBjb250aW51YWxseSBpbmZvcm1lZCBhYm91dCBuZXcgc3RyYXRlZ2llcyBhbmQgcHVyY2hhc2UgbWFya2V0aW5nIGFzIGl0IHdpbGwgcHJvYmFibHkgYmUgaW52ZXN0ZWQgYmFjayBtYW55IHRpbWVzLiBSZW1lbWJlciwgdGhlIG1vcmUgeW91IHRhbGsgd2l0aCB5b3VyIGVudGh1c2lhc3RzIHRoZSBncmVhdGVyIGFjdGl2aXR5IHlvdSdsbCBlbnRlciB5b3VyIHdlYiBwYWdlIHdoaWNoIG1lYW5zIHRoZSBtb3JlIGV4cG9zdXJlIHlvdSdsbCBnZXQuIFNpbmNlIHlvdSBhcmUgYWJsZSB0byBub3RpY2UgICBhbnl0aGluZyBpcyBwb3NzaWJsZS5UaGUgcGFydGljdWxhciBhbGwgaW4gdGhlIG9uZSBwYWNrYWdlIGF2YWlsYWJsZSBpcyBNeXNwYWNlLiAKVGhlIHByb2JhYmlsaXR5IGluIHRoaXMgY2FzZSBpcyAxIGluIDIyLDEwMC4gClRoZW4gcHJvY2VlZGVkIHRvIGJpdGNoIG9uIGNoYXQgd2hlbiBJIHdhcyBub3QgaGVscGluZyB0aGVtIGFmdGVyIHRocm93aW5nIG15IG9uZSBncmVuYWRlIGFuZCB0aGVuIGdvdCBkb3duZWQgYWdhaW4gdHJ5aW5nIHRvIHB1bmNoIHRoZSBwZXJzb24gdGhhdCB3YXMgaGlkaW5nIGluIHRoZSBjb3JuZXIgb2Ygcm9vbSBzaG9vdGluZyB0aGVtIGluIHRoZSBiYWNrLiAKSW4gYWRkaXRpb24sIHRoZSBjYXNpbm8gd2lsbCBob3N0IG5lYXJseSAxMDAgdGFibGUgZ2FtZXMsIGluY2x1ZGluZyBiYWNjYXJhdCwgYmxhY2tqYWNrLCBjcmFwcywgcm91bGV0dGUsIGFuZCBwb2tlci4gCk5vbmV0aGVsZXNzLCB3ZSByZW1haW5lZCBiZXN0IGZyaWVuZHMsIG9ubHkgc2xvd2x5IGxvc2luZyB0b3VjaCB3aGlsc3Qgd2Ugd2VudCBvdXIgc2VwYXJhdGUgd2F5cyBmb3IgY29sbGVnZS4gClJlaWQncyByaGV0b3JpYyBjb250aW51ZWQgd2hlbiBSb21uZXkgc3Bva2UgaW4gZnJvbnQgb2YgYSBncm91cCBvZiB2b3RlcnMgaW4gUmVpZCdzIGhvbWUgc3RhdGUgb2YgTmV2YWRhLiAKU2V2ZXJlIG1hbG51dHJpdGlvbiBjYW4gYWxzbyBtYWtlIGluanVyeSBtb3JlIGxpa2VseSBhcyB0aGUgYm9keSBpcyBsZXNzIGFibGUgdG8gbWFpbnRhaW4gdGhlIGludGVncml0eSBvZiBzdHJ1Y3R1cmVzIGFuZCByZXBhaXIgZGFtYWdlLkJUVyAgIGlvZGl6ZWQgdGFibGUgc2FsdCBpcyBhIGdvb2QgY2hlYXAgdGhpbmcgdG8gdHJ5IGZvciBhbmh5ZHJvc2lzLiAKSSBsb3ZlZCBCcm9hZCBDaXR5IGJ1dCB0aGluayB0aGV5IGFsc28gbmFpbGVkIGl0IHdpdGggZW5kaW5nIHRoZSBzaG93IHRoaXMgeWVhci4gClRoaXMgZW52ZWxvcGUgaG9sZHMgYWxsIHlvdXIgcHJlY2lvdXMgZG9sbGFycyB0byBidXkgZm9vZCBmb3IgeW91ciBmYW1pbHkgdGhpcyBtb250aC4gVXNpbmcgY2FzaCB3aWxsIGVuY291cmFnZSB5b3UgdG8gc3RheSB3aXRoaW4geW91ciBzZXQgYnVkZ2V0LiAKVEhBVCBwYXJ0IGhlIHdvdWxkIG5ldmVyIGFkbWl0IHRvLCBidXQgaGUgYWRtaXQgdG8gYmlwb2xhciBhbmQgZXZlcnl0aGluZyBlbHNlLiAKTWEgY29ubmFpc3NhbmNlIGRlIGxhIGN1aXNpbmUgamFwb25haXNlIGF2YWl0IGNvbW1lbmMsIGlsIHkgYSBiaWVuIGxvbmd0ZW1wcyAocGx1cyBkZSB2aW5ndCBhbnMuKSwgcGFyIGxhIGRjb3V2ZXJ0ZSBkZXMgYnJvY2hldHRlcyAoeWFraXRvcmkpIGRhbnMgdW4gcmVzdGF1cmFudCBwcm9jaGUgZGUgbW9uIGJ1cmVhdSBkJ2Fsb3JzLiBQdWlzIHNvbnQgdmVudXMgbGVzIHN1c2hpLiBQdWlzIHRvdXRlIGxhIGRpdmVyc2l0IGRlIGxhIGN1aXNpbmUgamFwb25haXNlLCBmYW1pbGlhbGUgb3UgZGUgcmVzdGF1cmFudCwgc2ltcGxlIG91IHNvcGhpc3RpcXVlLiBDZXMgZGV1eCBwcmVtaWVycyBleGVtcGxlcyBzb250IGQnYWlsbGV1cnMgbG9pbiBkJ3RyZSBsZXMgbm91cnJpdHVyZXMgbGVzIHBsdXMgcnBhbmR1ZXMgc3VyIHBsYWNlLiBEdXJhbnQgbm90cmUgc2pvdXIsIG5vdXMgYXZvbnMgbWFuZyBhdmVjIHVuZSBncmFuZGUgZGl2ZXJzaXQgKGplIHN1aXMgaW5jYXBhYmxlIGRlIGZhaXJlIGF1dHJlbWVudCAhKS4gTm91cyBhdm9ucyBub3RhbW1lbnQgc2F2b3VyIGxlcyBncmFuZHMgY2xhc3NpcXVlcyBkZSBsYSByZXN0YXVyYXRpb24gamFwb25haXNlLCBkYW5zIGRlcyBlbmRyb2l0cyB1biBwZXUgY2hpY3Mgc2FucyB0cmUgbHV4dWV1eCBvdSBjYXJybWVudCBwb3B1bGFpcmVzIChqZSByZXZpZW5kcmFpIGVuIHBhcnRpY3VsaWVyIHN1ciBsZSB0b2Z1IGRhbnMgdW4gYXV0cmUgYmlsbGV0KS4gQydlc3QgIGRpcmUgOgpUaGVuIGhlIGRlY2xhcmVkIGEgcmVkdWN0aW9uIGluIHRoZSBlbGV2YXRlZCBkZWZpY2l0IGRyYW1hdGljYWxseSBpbiB0aGUgZmlyc3QgZmlzY2FsIHllYXIgb2YgdGhlIFBNTCBOIGdvdmVybm1lbnQuIFRoZSBkZWZpY2l0IHJlZHVjdGlvbiB3YXMgYSBzdGF0aXN0aWNhbCB0cmlja2VyeSBhY2hpZXZlZCBieSBrZWVwaW5nIHRoZSBjaXJjdWxhciBkZWJ0IGFjY3VtdWxhdGVkIGluIHRoZSBmaXJzdCB5ZWFyIG9mIFBNTCBnb3Zlcm5tZW50IG91dCBvZiB0aGUgYnVkZ2V0IGFuZCBieSB2YXJpb3VzIG90aGVyIHN0YXRpc3RpY2FsIG1hbmlwdWxhdGlvbnMgdG8gamFjayB1cCByZXZlbnVlIGFuZCBicmluZyBkb3duIGV4cGVuZGl0dXJlIHJhdGhlciB0aGFuIGJ5IHN0cnVjdHVyYWwgZmlzY2FsIHJlZm9ybXMuCkkgY29uY2VybmVkIGFib3V0IHlvdXIgImplcmsiIGNvbW1lbnQuIEl0IG5vdCB5b3VyIHNoYW1lIHRoYXQgdGhpcyBpcyBhIHByb2NlZHVyZSB3aXRoIGEgamFja2VkIHVwIHByaWNlIEFORCB1bmNsZWFyIGJpbGxpbmcgLyByZWltYnVyc2VtZW50LiAKUGxlbnR5IG9mIHBlb3BsZSBqdXN0IGhlYXJkIGl0IGdyb3dpbmcgdXAsIHVzZWQgYnkgcGVvcGxlIHdobyBtaXN0YWtlbmx5IHRob3VnaHQgaXQgd2FzIGEgd2F5IHRvIHNlZW0gbW9yZSAiZm9ybWFsIiBhbmQgInRlY2huaWNhbCIuIApBIFJldmlldyBvZiB0aGUgUGF1bHNvbiBUb3BoYXQgQ2FuZSBQb2tlciBDaGlwIFNldApJZiBDVyB3YXMgYSBwc3ljaG9wYXRoLCBoZSB3b3VsZCBub3QgZmVlbCBhbnkgcmVtb3JzZSBpbiBzaW1wbHkgYWJhbmRvbmluZyBDVyBhbmQgdGhlIGtpZHMuLiAKSXQgc3RyYW5nZSB0byB0aGluayB0aGF0IHdobyB3ZSBhcmUsIG91ciB2ZXJ5IHNvdWwgZnJvbSB0aGUgZm91bmRhdGlvbiBvZiBvdXIgY2hhcmFjdGVyIGJ1aWx0IG9uIGxpZmUgZXhwZXJpZW5jZXMgdG8gb3VyIGVwaGVtZXJhbCB0aG91Z2h0cyBhbmQgZHJlYW1zIGRlcGVuZCBvbiBhIHZlcnkgcGh5c2ljYWwgYnJhaW4uIE15IHNpc3RlciB3aXRoIG1lbnRhbCBpbGxuZXNzIHdhcyBib3JuIHdpdGggaXQuIEdyb3dpbmcgdXAgdGhhdCBhbHdheXMgaG93IHNoZSB3YXMuIEkgaGF2ZSBhbm90aGVyIHNpc3RlciB0aGF0IGhhcyBzdWZmZXJlZCBhIHRyYXVtYXRpYyBicmFpbiBpbmp1cnkuIE9uZSBkYXkgc2hlIHdhcyBoZXJzZWxmLCB0aGUgbmV4dCBzaGUgd2FzIHNvbWVvbmUgZWxzZS4gTXkgbW90aGVyIGdvdCBhIHZpcnVzIGluZmVjdGlvbiAoaGVycGVzIHpvc3RlciwgYWthIHNoaW5nbGVzKSBpbiBoZXIgYnJhaW4uIEl0IGF0dGFja2VkIHRoZSBuZXJ2ZXMgaW4gaGVyIGJyYWluIGFuZCBmdW5kYW1lbnRhbGx5IGNoYW5nZWQgd2hvIHNoZSBpcy4gU2NhcmVzIHRoZSBjcmFwIG91dCBvZiBtZSB0aGF0IHRoZSB3aWZlIEkgZ28gdG8gc2xlZXAgd2l0aCBjb3VsZCBiZSBhIGRpZmZlcmVudCBwZXJzb24gd2hlbiB3ZSB3YWtlIHVwIGJlY2F1c2Ugb2YgYSB2aXJhbCBpbmZlY3Rpb24uCklmIGF0IGFsbC4gCk9uZSBoYWQgY3JlYXRlZCBhbnl0aGluZyBsaWtlIEJvdHRsZSBCaW4gYmVmb3JlLiAKQm9laW5nIHJhaXNlZCBpdHMgZ3VpZGFuY2UgZm9yIHRoaXMgeWVhciB0b3RhbCByZXZlbnVlIGJ5ICQxIGJpbGxpb24sIHdoaWNoIGZvciB0aGUgZmlyc3QgdGltZSBicmluZ3MgdGhlIGhpZ2ggZW5kIG9mIHRoZSBwcm9qZWN0ZWQgcmFuZ2UgdG8gJDEwMCBiaWxsaW9uLgpBbmQgeW91IGFjdHVhbGx5IGNvbWUgdG8gdGhlIGNhc3RsZSB2aWEgaW52aXRhdGlvbi4geW91IGFycml2ZSBhbmQgdGhlcmUgYXJlIHRyYWluZXJzIGZyb20gcGFzdCBnYW1lcyBhbGwgc2l0dGluZyBhdCBhIGh1Z2UgdGFibGUuIHRoZSBkaW5uZXIgaG9zdHMgYXJlIFRlYW0gUm9ja2V0IGluIGRpc2d1aXNlIChiYWQgb25lcykgYXMgdGhlIGd5bSBtYXN0ZXIgYW5kIGJ1dGxlci4KVW5lIHNvcnRlIGRlIGRoYWwgZGUgbGVudGlsbGUgYXV4IHBpbmFyZHMsIHJlY2V0dGUgZGogZ290ZSBldCBhcHByY2llLApCYWJpZXMgZ3Jvd24sIFN0dXJkeSBtZW4gIGFuZCcgd29tZW4gdHJ1ZSwgZml0IHRvIHN0YW5kIGFsb25lLiAKV2hhdCBpcyBhIGJvaWxpbmcgY2hpcD9Cb2lsaW5nIGNoaXBzIGFyZSBzbWFsbCwgaW5zb2x1YmxlLCBwb3JvdXMgc3RvbmVzIG1hZGUgb2YgY2FsY2l1bSBjYXJib25hdGUgb3Igc2lsaWNvbiBjYXJiaWRlLiBUaGVzZSBzdG9uZXMgaGF2ZSBwb3JlcyBpbnNpZGUgd2hpY2ggcHJvdmlkZSBjYXZpdGllcyBib3RoIHRvIHRyYXAgYWlyIGFuZCB0byBwcm92aWRlIHNwYWNlcyB3aGVyZSBidWJibGVzIG9mIHNvbHZlbnQgdmFwb3IgY2FuIGZvcm0uIFRoZXNlIGJ1YmJsZXMgZW5zdXJlIGV2ZW4gYm9pbGluZyBhbmQgcHJldmVudCBidW1waW5nIGFuZCBib2lsaW5nIG92ZXIgYW5kIGxvc3Mgb2YgdGhlIHNvbHV0aW9uLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25USEUgU1MgQ2x1YiBpcyBsYWJvdXJpbmcgdW5kZXIgZGVidCBmcm9tIFZpY3RvcmlhbiBwb2tlciBtYWNoaW5lIGxpY2VuY2VzIGl0IGNhbid0IGFmZm9yZCB0byB1c2UuIEFuZCBpdCBpcyBzdHJ1Z2dsaW5nIHRvIG9mZmxvYWQgdGhlIGxpY2VuY2VzIGJlY2F1c2Ugb3RoZXIgY2x1YnMgYW5kIHB1YnMgaW4gdGhlIHN0YXRlIGFyZSBpbiB0aGUgc2FtZSBwb3NpdGlvbi4gCldoZW4geW91IGVzdGFibGlzaCBhIHJlbGF0aW9uc2hpcCB3aXRoIHNvbWVvbmUgKG9mIGFueSBraW5kKSwgeW91IGZvcm0gdHdvIGVuZXJnZXRpYyBzdHJ1Y3R1cmVzIHdpdGggdGhhdCBwZXJzb24uIFRoZSBmaXJzdCBvbmUgaXMgYSBzdHJ1Y3R1cmUgY29udGFpbmluZyB0aGUgdW5jb25kaXRpb25hbCBsb3ZlIGFuZCB0aGUgc291bCBsZXZlbCBib25kIGJldHdlZW4geW91IHR3by4gCk5vIG1hdHRlciB0aGUgcGxhdGZvcm0gcHJlZmVycmVkLCBvciB0aGUgZGV2aWNlLCBhIHJvYnVzdCwgZnVsbHkgZnVuY3Rpb25hbCBhbmQgcmVzcG9uc2l2ZSBnYW1pbmcgZXhwZXJpZW5jZSBpcyBvdXIgMzJSZWQgZ3VhcmFudGVlLk91ciBWaWRlbyBTbG90cyBzZWxlY3Rpb246RXhwZWN0IHVwIHRvIGRhdGUsIHRvcCBvZiB0aGUgcmFuZ2UgdGVjaG5vbG9neSB3aGVuIHRha2luZyBhbnkgb2YgdGhlIHZpZGVvIHNsb3QgZ2FtZXMgb2ZmZXJlZCBhdCAzMlJlZCBvdXQgZm9yIGEgc3Bpbi4gCldpbnRlcmtvcm4gc2FpZCB0aGUgY29tcGFueSBoYWQgaW5jbHVkZWQgZWxlY3RyaWMgYW5kIGh5YnJpZCBtb2RlbHMgaW4gdGhlIGNvbXBhbnkgbXVsdGkgcGxhdGZvcm0gbWFudWZhY3R1cmluZyBzeXN0ZW0uIFRoaXMgc3RhbmRhcmRpemVzIHBhcnRzIGFuZCBhbGxvd3MgdGhlIHNhbWUgYXNzZW1ibHkgbGluZSB0byBwcm9kdWNlIG11bHRpcGxlIHZlaGljbGVzLiBUaGF0IG1lYW5zIGEgbmV3IGVsZWN0cmljIGNvdWxkIGhhdmUgbW9kZXN0IHNhbGVzIG51bWJlcnMgYnV0IG5vdCBpbnZvbHZlIHRoZSBleHBlbnNlIG9mIGFkZGl0aW9uYWwgcGxhbnQgY2FwYWNpdHkgYW5kIHBhcnRzIGRlc2lnbi4KSnVzdCB0cmVhdCB5b3VyIHNvbiB3ZWxsIGFuZCBoYXZlIGZ1biB3aXRoIGhpbS4gCkV2ZW4gdGhlIEJpYmxlIGluc3RydWN0cyB0aGUgc2x1Z2dhcmQgdG8gZ28gc3R1ZHkgYW50cy4KSSBnb3Qgc29tZSBuYWlsIHBvbGlzaCByZW1vdmVyIHdpcGVzIGZyb20gdGhlcmUgYWdlcyBhZ28sIGJ1dCB0aGV5IGRpZG4ndCB3b3JrIHNvIHdlbGwsIGl0IHRvb2sgYWdlcyB0byBnZXQgdGhlIHBvbGlzaCBvZmYsIGFuZCB0aGV5IGFsc28gbGVmdCBteSBoYW5kcyByZWFsbHkgb2lseSAgIGdyZWFzeSBhbmQgaWNreS4KQXMgZmFyIGFzIEkga25vdywgdGhlcmUgaXMgbm8gb2ZmbGluZSBzdG9yZS4gU29tZSBwZWRkbGVycyBtYXkgaGF2ZSwgYnV0IGl0IGlzIG5vdCBkZWZpbml0ZWx5IGdvb2QgcXVhbGl0eSBpdGVtcy4gVGhleSBidXkgY2hlYXAgc3R1ZmZzIGZyb20gY2hpbmEgYW5kIHNlbGwgc2VjcmV0bHkuIFJlcCBtYXJrZXQgaW4gS29yZWEgaXMgbm90IHRoYXQgYmlnLCBidXQgdGhlcmUgYXJlIGEgbG90IG9mIHNpbWlsYXIgc3R5bGVzIG9mIGRlc2lnbmVyIGNsb3RoZXMuIApBbHMgZXIgZXMgZWlubWFsIG5pY2h0IHNjaGFmZnRlLCBkYSBmaWVsIGVyIGwgWmVpdCB2ZXJsZXR6dCBhdXMuIApUaGF0IHNhaWQsIGFzIG11Y2ggYXMgSSBsb3ZlIHRvIGdyaXBlIGFuZCBmdXNzIGFib3V0IHRoZSBkZWNpc2lvbnMgbWFkZSBhbmQgbW9jayB0aGUgZGV2IHRlYW0sIG15IGhlYXJ0IGRlZmluaXRlbHkgZ29lcyBvdXQgdG8gdGhlbS4gSWYgdGhleSBjaG9vc2UgdG8gcmVtYWluIHdvcmtpbmcgdGhlcmUgKGFzc3VtaW5nIHRoZXkgZXZlbiBoYXZlIHRoYXQgb3B0aW9uKSwgSSBzdXJlIHRoZWlyIHdvcmtpbmcgY29uZGl0aW9ucyBoYXZlIGdvbmUgZG93biAob3Igd2lsbCBzb29uIGdvIGRvd24pIHRoZSB0b2lsZXQuIEkgbmV2ZXIgd2FzIGEgQmxpenphcmQgZmFuIGFuZCBPdmVyd2F0Y2ggd2FzIHRoZSBmaXJzdCBnYW1lIEkgZ290IGludG8gZnJvbSB0aGVtLCBzbyBJIGNhbiBzcGVhayBvbiBob3cgdGhleSAidXNlZCIgdG8gYmUsIGJ1dCBJIGtub3cgQWN0aXZpc2lvbiBpcyBoZXJlIHRvIG1ha2UgbW9uZXkgYW5kIHRoZSBiaWcgYm95cyBhcmUgY2xlYXJseSB0YWtpbmcgb3Zlci4uIApUaGUgcHJpdmF0ZWx5IGhlbGQgY29tcGFueSBpcyBvd25lZCBqb2ludGx5IGJ5IE1zIENvYXRlcyBhbmQgbWVtYmVycyBvZiBoZXIgZGlyZWN0IGZhbWlseSwgaW5jbHVkaW5nIGhlciBicm90aGVyIEpvaG4gd2hvIGlzIGpvaW50IGNoaWVmIGV4ZWN1dGl2ZSBhbmQgaGVyIGZhdGhlciBQZXRlciwgdGhlIGZpcm0ncyBjaGFpcm1hbi4gTGFzdCB5ZWFyIE1zIENvYXRlcycgcGF5IGFuZCBkaXZpZGVuZHMgd2VyZSByZXBvcnRlZCB0byB0b3RhbCAyMTdtLgpUaGUgcG9rZXIgdGFibGUgY2xvdGggdGhhdCB5b3UgdXNlIGNhbiBiZSBlc3NlbnRpYWwgdG8gdGhlIGxvb2sgYW5kIHRoZSBmZWVsIG9mIHlvdXIgZ2FtZSwgYW5kIHdpdGgganVzdCBhIGxpdHRsZSBiaXQgb2YgdGltZSBhbmQgZWZmb3J0LCB5b3UgYXJlIGdvaW5nIHRvIGZpbmQgeW91cnNlbGYgaW4gYSBwbGFjZSB3aGVyZSB5b3UgY2FuIGdldCB0aGUgcGVyZmVjdCBsb29rIGZvciB5b3VyIG5lZWRzLiAKRGV0ZWN0aXZlIFNndCBHYXJ5IFdhbHNoIHNhaWQgdGhhdCB0aGUgbGlnaHQgd2FzIG9uIGluIHRoZSB1cHN0YWlycyBiZWRyb29tIHdoZW4gZ2FyZGEgZW50ZXJlZCwgaG93ZXZlciB3aGVuIHRoZXkgZ290IHVwc3RhaXJzIHRoZSBsaWdodCB3YXMgb2ZmIGFuZCB0aGVyZSB3YXMgbm8gb25lIGluIHRoZSBtYWluIGJlZHJvb20uIEdhcmRhIGVudGVyZWQgYSBib3ggcm9vbSwgYW5kIG9ic2VydmVkIE1hcmsgTWF1Z2hhbiwgMTQgTm9ydGhicm9vaywgQ2FzdGxlYmFyLCBleGl0aW5nIGEgd2FyZHJvYmUuLiAKQ2F2bWF4ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgaG91cnMgYWdvCk9yIHdoeSBhcmVuIHdlIGxvb2tpbmcgYXQgd2h5IHRoZSBhdmVyYWdlIGhldGVyb3NleHVhbCBjb3VwbGUgbWlnaHQgaGF2ZSB2YXJ5aW5nIGxldmVscyBvZiBkZXNpcmU/IGFyZSBzbyBtYW55IHJlYXNvbnMgdGhhdCB3b21lbiBtaWdodCBub3QgZmVlbCBsaWtlIGhhdmluZyBzZXggd2l0aCB0aGVpciBtYWxlIHBhcnRuZXJzLCBidXQgc3VyZWx5IHRoZSBmYWN0IHRoYXQgd29tZW4gZXhwZXJpZW5jZSB0aGUgImRvdWJsZSBidXJkZW4iIG9mIHBlcmZvcm1pbmcgZmFyIG1vcmUgZG9tZXN0aWMgd29yaywgY2hpbGRjYXJlIGFuZCBlbGRlcmx5IGNhcmUgdGhhbiB0aGVpciBtYWxlIHBhcnRuZXJzIGlzIG9uZSBvZiB0aGVtLiB0aGUgZmFjdCB0aGF0IGFsbCBBbWVyaWNhbnMgYXJlIHdvcmtpbmcgbW9yZSBob3VycyBhdCB3b3JrIHRoYW4gZXZlciwgYW5kIHdvbWVuIGNvbnRpbnVlIHRvIGJlYXIgdGhlIGJydW50IG9mIGRvbWVzdGljIGxhYm9yIHJlc3VsdGluZyBpbiBmYXIgZmV3ZXIgaG91cnMgb2YgbGVpc3VyZSB0aW1lIHRoYW4gbWVuIE1JR0hUIGhhdmUgbW9yZSB0byBkbyB3aXRoIGxhY2sgb2YgbGliaWRvIHRoYW4gY2hlbWljYWwgImltYmFsYW5jZSIgaW4gdGhlIGJyYWluLgpNYXNraW5nIGJlaGF2aW9ycyBjYW4gY3JlZXAgdXAgd2hlbiB5b3UgZmVlbCB1bmVhc3kgb3Igb24gdGhlIHNwb3QuIFRoaXMgdGFrZXMgbWFueSBkaWZmZXJlbnQgZm9ybXMsIGluY2x1ZGluZyBjcm9zc2luZyB5b3VyIGFybXMsIGNsYXNwaW5nIHlvdXIgaGFuZHMsIHBsYXlpbmcgd2l0aCB5b3VyIGNsb3RoZXMgb3IgamV3ZWxyeSwgb3IgaGF2aW5nIGEgcG9rZXIgZmFjZSBjdXR0aW5nIG9mZiBhbnkgYW5pbWF0aW9uIG9mIHlvdXIgZmFjZSBvciBoYW5kcy4KVGhpcyBpcyBhIG5vIGVnbyB6b25lICAgZG9uJ3Qgd29ycnkgYWJvdXQgeW91ciBsZXZlbCBvZiBmaXRuZXNzIG9yIHlvZ2EgZXhwZXJpZW5jZSEgTXkgdGVhY2hpbmdzIGFyZSBmb3VuZGF0aW9uYWwgd2l0aCBlbXBoYXNpcyBvbiB0aGUgYnJlYXRoLiAKRG9uIFRyYWNodGUgSnIuLCB0aGUgZmF0aGVyIG9mIHRoZSBicm90aGVycyB3aG8gZm91bmQgdGhlIHBhaW50aW5nLCBoYWQgbWFkZSBhIGNvcHkgb2YgdGhlIHBpZWNlIHRvIHByZXZlbnQgaGlzIHdpZmUgZnJvbSB0YWtpbmcgcG9zc2Vzc2lvbiBvZiBpdCBpbiB0aGVpciBkaXZvcmNlLiAKQnV0IHRoYXQgd2luZSBhZnRlciBhIGxvbmcgZGF5PyBJdCdzIG15IHNlcmVuaXR5LiAKRGVwZW5kaW5nIG9uIHRoZSBjbGluaWMsIHRoZXJlIGFyZSBhbnl3aGVyZSBmcm9tIDEzIHRvIDE1IHRoZXJhcGlzdHMgb24gc2l0ZS4gRWFzeSB0byBnZXQgYXBwb2ludG1lbnRzLCBldmVuIHNhbWUgZGF5IGFwcG9pbnRtZW50cywgc2hlIG5vdGVzLi4gClNoZSBpcyBub3cgaGF2aW5nIG5pZ2h0bWFyZXMgYWJvdXQgYmVpbmcgaW4gYSBkYXJrLCBjb2xkLCB1bmRlcndhdGVyIEFieXNzIGFuZCBiZWluZyBwdXJzdWVkIGJ5IFNPTUVUSElORy4gCkkgaGl0IHVwIHNldmVyYWwgY2FtcHVzIGJhcnMgdGhhdCBuaWdodCwgYW5kIGF0IGVhY2ggb25lLCBmYW5zIGZyb20gYm90aCBzaWRlcyB3ZXJlIG1pbmdsaW5nIGFuZCBidXlpbmcgZWFjaCBvdGhlciBkcmlua3MuLiAKQW5kIGl0IHdhcyBvbmx5IHRoZSBwcmVjZWRpbmcgYWZ0ZXJub29uIHRoYXQgc2hlIGhhZCBpbnRlcmZlcmVkIHRvIGluZmx1ZW5jZSBNYXJpbGxhIGFnYWluc3QgYWxsb3dpbmcgRGF2eSB0byBnbyBmaXNoaW5nIHdpdGggdGhlIFRpbW90aHkgQ290dG9ucy4gRGF2eSB3YXMgc3RpbGwgYm9pbGluZyBvdmVyIHRoaXMuLiAKVGhlIGhvbHkgcHJvcGhldCAoIHBpZWNlIGJlIHVwb24gaGltKSBzYWlkLCAiIFlvdXIgYm9keSBoYXMgcmlnaHQgdXBvbiB5b3UiIFRoZXJlZm9yZSwgaXQgaXMgb3VyIGR1dHkgdG8ga2VlcCBvdXIgYm9keSBjbGVhbiBhbmQgaGVhbHRoeS4gV2Ugc2hvdWxkIGRvIGFuZCBleGVyY2lzZSByZWd1bGFybHkuIApVbmFibGUgdG8gc2VjdXJlIHJlYWwgYm91cXVldHMsIGhlIGhhZCB0aGUgcGFzdHJ5IHRlYW0gYmFrZSBkb3plbnMgb2YgcGV0YWwgc2hhcGVkIGNvb2tpZXMgYW5kIHNjYXR0ZXJlZCB0aGVtIGFyb3VuZCB0aGUgcm9vbS4gQW5kIHdoZW4gb25lIGZhbWlseSBnb3QgbG9ja2VkIG91dCBvZiBhIHBlYWsgc2Vhc29uIERlY2VtYmVyIHNhaWxpbmcsIGdlbmllIEFuZHJlaSBzdXJwcmlzZWQgdGhlbSB3aXRoIGFuIGVhcmx5IENocmlzdG1hcyBieSBkZWNvcmF0aW5nIHRoZWlyIHN1aXRlIGFuZCBwdXR0aW5nIHdyYXBwZWQgcHJlc2VudHMgdW5kZXIgYSBtYWtlc2hpZnQgdHJlZS4uIApUaGFuayB5b3UgZm9yIHRoaXMgaW5mbyEgSSBhbSBjb25zaWRlcmluZyBkb2luZyBNYXgncyBsaXN0IGJlY2F1c2UgSSBhbSBicmluZ2luZyBteSBnaXJsZnJpZW5kIHRvIHNlZSB3b25kZXJzIGF0IGR1c2sgYW5kIHNsZWVwIG5vIG1vcmUgYWdhaW4gZm9yIGhlciBiaXJ0aGRheS4gCldpdGggdGhlIGZhc3QgcGFjZWQgY29udGVtcG9yYXJ5IGxpZmUsIGV2ZXJ5b25lIG5lZWRzIHRpbWUgdG8gcmVsYXggYW5kIGFsc28gdGFrZSBhIGJyZWFrLiBGb3IgeW91ciBzcGVjaWZpYyByZXF1aXJlbWVudHMgeW91IGNvdWxkIHBpY2sgYW1vbmcgdGhlIDMgc3VwcGxpZWQgbWFzc2FnZSB0aGVyYXB5IHByb2dyYW1zOiByZWp1dmVuYXRlIHlvdXIgYmFjayAoMTUgbWludXRlcyBvZiBtYXNzYWdlIGZvciB0aGUgZW50aXJlIGJhY2spLCByZWxpZXZlIHlvdXIgbmVjayBhbmQgYWxzbyBzaG91bGRlcnMgKDE1IG1pbnV0ZXMgdG8gcmVsaWV2ZSB1cHBlciBiYWNrIHRlbnNpb25zKSwgYW5kIHJlbGVhc2UgeW91ciBsb3dlciBiYWNrICgxNSBtaW5zIHRvIHNvb3RoZSByZWR1Y2VkIGJhY2sgcGFpbikuLiAKUGVuc2lvbiBzcGxpdHRpbmcgYWxsb3dzIHlvdSB0byBzYXZlIGluY29tZSB0YXggZHVlIHdoZXJlIG9uZSBzcG91c2UgaXMgaW4gYSBsb3dlciB0YXggYnJhY2tldCB1cG9uIHJldGlyZW1lbnQgdGhhbiB0aGUgb3RoZXIuIEJ1dCBpdCBtYXkgYWxzbyBhbGxvdyB5b3UgdG8gcHJlc2VydmUgaW5jb21lIHRlc3RlZCBnb3Zlcm5tZW50IGJlbmVmaXRzIGFuZCBjcmVkaXRzLCBzdWNoIGFzIHRoZSBndWFyYW50ZWVkIGluY29tZSBzdXBwbGVtZW50IChHSVMpLCB5b3VyIE9BUyBwZW5zaW9uIG9yIHRoZSBhZ2UgY3JlZGl0LgpTaG9wcGluZyBmb3IgQmFjayB0byBTY2hvb2wgQ2xvdGhpbmcsIEZhc2hpb24gSXRlbXMsIEJhY2twYWNrcywgRWxlY3Ryb25pY3MgT3RoZXIgR2VhcldoZW4gaXQgY29tZXMgdG8gc2hvcHBpbmcgZm9yIGV2ZXJ5dGhpbmcgb3RoZXIgdGhhbiBzY2hvb2wgc3VwcGxpZXMsIHRhbGsgdG8geW91IGtpZHMgYWJvdXQgaG93IG11Y2ggeW91IGNhbiBhZmZvcmQgdG8gc3BlbmQgbm93LCB3aGF0IHlvdXIgYnVkZ2V0IHNob3VsZCBsb29rIGxpa2UgaW4gdGhlIGZhbGwgbW9udGhzIGFmdGVyIHlvdSBwYWlkIGRvd24gc3VtbWVyIHZhY2F0aW9uIGJpbGxzLCBhbmQgaG93IG11Y2ggdGhleSB3aWxsaW5nIHRvIGNoaXAgaW4gdG93YXJkcyB3aGF0IHRoZXkgd2FudC4gVGhlbiBkZWNpZGUgd2hhdCB0byBidXkgbm93IHZlcnN1cyBsYXRlciwgYmFsYW5jaW5nIHdoYXQgdGhleSBuZWVkIHdpdGggc29tZSBvZiB3aGF0IHRoZXkgd2FudC4KSSBqdXN0IG1vdmUgaXQgYXJvdW5kIHRoZSBhcmVhIGV2ZXJ5IGZldyBkYXlzIGFuZCB1c2UgaXQgYXMgYW4gYXBhcnRtZW50LiAKVG8gcGxheSBwb2tlciBmb3IgZnJlZSBvbmxpbmUgaXMgb25lIG9mIHRoZSBlYXNpZXN0IGFuZCBpbmNyZWFzaW5nbHkgcG9wdWxhciB3YXlzIHRvIGxlYXJuIHRoZSBnYW1lLCBlc3BlY2lhbGx5IFRleGFzIE5vIExpbWl0IEhvbGQnRW0uIFZpcnR1YWxseSBhbGwgb25saW5lIHBva2VyIHJvb21zIHdpbGwgbGV0IHBsYXllcnMgY29tZSBpbiBhdCBubyBjb3N0IGJlY2F1c2UgdGhleSB3b3VsZCBsb3ZlIHRvIGhhdmUgeW91IGFzIGEgcmVhbCBtb25leSBwbGF5ZXIgaW4gdGhlIGZ1dHVyZS4gCkxvdHMgb2YgcGVvcGxlIGZpbmQgdGhpcyBlYXNpZXIgICBpdCdzIG9mdGVuIHF1aWNrZXIsIHBhaW4gZnJlZSwgYW5kLCBxdWl0ZSBmcmFua2x5LCBpdCdzIGVhc2llciB0byB0YWtlIG1vbmV5IGZyb20gdGhlIGZhY2VsZXNzLi4gCkl0IGRvZXNuJ3QgYWRkIHVwOiBBLikgSXQncyBicm9hZCBkYXlsaWdodCBvbiBhIG5hcnJvdyBzdHJlZXQgdXAgYSBzdGVlcCBoaWxsLiBCLikgVml0byBhaW4ndCBleGFjdGx5IGEgc21hbGwgZ3V5LiAKMi4gVW5kZXJzdGFuZCB0aGUgdmFsdWUgeW91IG9mZmVyIHRvIHlvdXIgY3VzdG9tZXIuIFlvdSBjYW4ndCBoYXZlIGNvbmZpZGVuY2UgaW4geW91ciBwcmljaW5nIHVudGlsIHlvdSBoYXZlIGNvbmZpZGVuY2UgaW4gdGhlIGZpbmFuY2lhbCB2YWx1ZSB0aGF0IHlvdXIgb2ZmZXJpbmdzIGNyZWF0ZSBmb3IgY3VzdG9tZXJzLiAKRWR1Y2F0aW9uIHNob3VsZCBiZSBhZmZvcmRhYmxlIHRvIGFueW9uZSB3aG8gcXVhbGlmaWVzIGFuZCBzaG91bGQgbm90IHJlcXVpcmUgYSBsaWZldGltZSBvZiBkZWJ0LiAKVGhleSdyZSBwYXJ0aWN1bGFybHkgaW5mbHVlbmNlZCBieSBjbGltYWN0aWMgZXZlbnRzLCBsaWtlIHRoZSBFbCBOaW5vIGV4cGVjdGVkIHRvIG9jY3VyIHRoaXMgd2ludGVyLCBoZSBzYWlkLCB3aGljaCBjYW4gcmVzdWx0IGluIHdhcm1lciBhbmQgZHJpZXIgY29uZGl0aW9ucywgYW5kIGNyZWF0ZSBzaG9ydGFnZXMgaW4gdGhlIHN1cHBseSBjaGFpbi4KQSByZWFzb24gdG8gZG8gdGhpcyBpcyBiZWNhdXNlIG9mIHRoZSBmb2N1cyBvZiB0aGUgbWFpbiBwcm90YWdvbmlzdC4gRm9yIHRoYXQgcmVhc29uIGl0IGJlaW5nIHdoeSBpdCBzdGFydGVkIGxpa2UgaXQgZGlkIGFuZCB3aXRob3V0IG11Y2ggb2YgZXhwbG9yYXRpb24gb24gdGhlIGV4cGxhaW5pbmcuIApJdCdzIGltcG9ydGFudCB0byByZW1lbWJlciB0aGF0IHRyZWVzIGFyZW4ndCBqdXN0IGRlY29yYXRpb25zLiBUaGV5IGRvIHN0dWZmLiBTdG9wIGVyb3Npb24sIGZvciBvbmUuIApGb2xsb3cgdGhlIHNpZ25zICIgQ2VudHJ1bSAiICggdG93biBjZW50ZXIgKSBhbmQgdGhlIHNtYWxsIHllbGxvdyBzaWducyBpbmRpY2F0aW5nICIgY2FtcGluZyAiIHVudGlsIHlvdSByZWFjaCB0aGUganVuY3Rpb24gd2l0aCB0aGUgYnVzc3RhdGlvbi4gVHVybiByaWdodCBhdCB0aGVzZSB0cmFmZmljIGxpZ2h0cyBhbmQgY29udGludWUgYWJvdXQgODAwIG0uIApOZXVyb25zIGluIHRoZSB0aGFsYW11cyByZWxheSBzaWduYWxzIHRvIHRoZSBzb21hdG9zZW5zb3J5IGNvcnRleCBhbmQgbGltYmljIHN5c3RlbS4gCjEgcmF2ZSBUSFJVID9LN0RBWSBBcnJpdmUge1NvdXRoYm91bmQpIHAgbS4gU1VTREFZUyBPTkxZIHBtLiAKTG9zaW5nIHRoZSB3b21hbiB3aWxsIGltcGFjdCB0aGUgd29ybGQgc2lnbmlmaWNhbnRseSBtb3JlIHRoYW4gbG9zaW5nIHRoZSBmZXR1cy4gSWYgY2FycnlpbmcgYSBwcmVnbmFuY3kgdG8gdGVybSB3aWxsIHB1dCB0aGUgd29tYW4gYXQgcmlzayB0aGVuIHRoYXQgZmV0dXMgbmVlZHMgdG8gZ28uIElmIGEgd29tYW4gbmVlZHMgdHJlYXRtZW50IGJ1dCB0aGUgdHJlYXRtZW50IHB1dHMgYSBjdXJyZW50IG9yIGZ1dHVyZSBmZXR1cyBhcyByaXNrLCB0aGVuIHRoZSB3b21hbiBzaG91bGQgZ2V0IHRoZSB0cmVhdG1lbnQsIGFuZCBpZiBoZXIgZmVydGlsaXR5IGlzIGFmZmVjdGVkIGFuZCBzaGUgc3RpbGwgd2FudHMga2lkcyBzb21lIGRheSB0aGVuIHRoZXJlIGFyZSBvdGhlciBvcHRpb25zIGZvciBoYXZpbmcgYSBjaGlsZC4gClBPUE9WIFZBTEVOVElOIFBPUE9WLCBhZ2UgNTgsIG9mIFdlc3RsYWtlLCBPSCBwYXNzZWQgYXdheSBvbiBOb3ZlbWJlciAxOCwgMjAxNC4gCk9uIGF2ZXJhZ2UsIGEgbm9uIEh1bmdhcmlhbiBjaGlsZCBlbnRlcmluZyB0aGUgc2Nob29sIGluIFNlcHRlbWJlciBpcyBmbHVlbnQgYW5kIHBsYXlpbmcgaW4gSHVuZ2FyaWFuIHdpdGggdGhlaXIgcGVlcnMgYnkgSmFudWFyeS4gVGhlc2UgY2hpbGRyZW4gYXJlIDMgNSB5ZWFycyBvbGQsIGZvciByZWZlcmVuY2UuLiAKVmlsbGlhbiBtYWtlcyBpdCAkNzUuIApXaXRoIHRoZSBleGNlcHRpb24gb2YgQnJhemlsLCB3aGljaCBtYWRlIGFuIGV4cGxpY2l0IGRlY2xhcmF0aW9uIG9mIG5ldXRyYWxpdHkgICBhIG1vdmUgdGhhdCB3aGlsZSBtaW5vciwgbmV2ZXJ0aGVsZXNzIG9mZmVyZWQgdGhlIFNvdXRoIG1vcmUgcmVjb2duaXRpb24gdGhhbiB0aGUgVW5pdGVkIFN0YXRlcyB3b3VsZCBsaWtlICAgdGhlIGNvdW50cmllcyBhbGwgY2hvc2UgdG8gcmVmcmFpbiBmcm9tIHJlY29nbml6aW5nIHRoZSBjb25mbGljdCBhcyBhbnl0aGluZyBtb3JlIHRoYW4gYSBkb21lc3RpYyBtYXR0ZXIsIGEgYmV0dGVyIHJlc3VsdCB0aGFuIHdpdGggbWFueSBFdXJvcGVhbnMsIHN1Y2ggYXMgRnJhbmNlIGFuZCB0aGUgVUssIGJvdGggb2Ygd2hvbSBkaWQgY2hvc2UgdG8gZGVjbGFyZSBuZXV0cmFsaXR5Li4gCkl0IHN1Y2tzIGN1dHRpbmcgb3V0IGFueW9uZSB3aG8gd2FzIGEgYmlnIHBhcnQgb2YgeW91ciBsaWZlIHdobyBoYXMgYmVjb21lIHRveGljICAgYnV0IGp1c3QgbGlrZSBhIGZvb3Qgd2l0aCBnYW5ncmVuZSwgeW91IGNhbiBrZWVwIGEgcGVyc29uIGFyb3VuZCBsaWtlIHRoYXQgYW55bW9yZS4gWW91IGFyZSBkb2luZyBhIHdvbmRlcmZ1bCB0aGluZyBmb3IgMiBraWRzIHdobyB3ZW50IHRocm91Z2ggdGhlIHdvcnN0IHRoaW5nIGV2ZXIgICB0aGV5IGxvc3QgdGhlaXIgbW9tLiBZb3VyIG1vbSBwdXR0aW5nIHlvdSB0aHJvdWdoIHRoZSBzYW1lIHRoaW5nLiBJdCBpcyBnb2luZyB0byBiZSB0cmF1bWF0aWMgdG8geW91LCBidXQgd2hlbiBhbGwgaXMgc2FpZCBhbmQgZG9uZSBpdCB3aWxsIGJlIGJldHRlciB0byBiZSBmcmVlIG9mIGhlciB0aGFuIHRvIGtlZXAgaGVyIGFyb3VuZCB3aGVyZSBzaGUgY2FuIGh1cnQgeW91LiBDaGVjayBvdXQgci9tb21mb3JhbWludXRlICAgVGhlcmUgYXJlIHBlb3BsZSBvdXQgaGVyZSB3aG8gYXJlIHByb3VkIG9mIHdoYXQgeW91IGRvaW5nLCBpdCBhIHNoYW1lIHRoYXQgeW91ciBtb3RoZXIgaXNuIG9uZSBvZiB0aGVtLgpJIGNlcnRhaW4gdGhhdCB0aGUgbWlzc2lvbmFyaWVzIGluIHF1ZXN0aW9uIGNvbnRpbnVlZCB0byBhY3QgYXMgbWlzc2lvbmFyaWVzIHJhdGhlciB0aGFuIHZvbHVudGVlcnMuIApJdCBvbmx5IGluIHRoZSBtb3N0IHJlY2VudCBlcGlzb2RlIHRoYXQgd2UgYmVlbiB0b2xkIChieSBvbmUgY2hhcmFjdGVyKSB0aGV5IGRvbiByZWFkIHBlb3BsZSBib29rcy4gVXAgdW50aWwgbm93LCBpdCBiZWVuIGltcGxpZWQgdGhhdCB0aGV5IGRvLiBIb3cgZWxzZSB3b3VsZCB0aGV5IGRlY2lkZSB0byBzZW5kIHNvbWUgYm9va3MgdG8gdGhlIHBvaXNvbiByb29tIGZvciBleGFtcGxlPyBJIHN1c3BlY3Qgd2Ugbm90IGdldHRpbmcgdGhlIHdob2xlIHN0b3J5LCBhbmQgdGhhdCB0aGUgInByaXZhY3kiIGlkZWEgaXMgYSB0aGluIHZlbmVlciBvZiBkZWNlbmN5IHRoYXQgaXMgcXVpY2tseSBkaXNjYXJkZWQgYWxsIHRoZSB0aW1lICJ3aGVuIG5lY2Vzc2FyeSIuIApIZSBmb3VuZCBjaGlsZHJlbiBhcyB5b3VuZyBhcyA2IHdlcmUgZG9pbmcgd2hhdCBpcyBrbm93biBhcyBjYXJkIHNwZW5kaW5nIHRvIFM2IGZvciBhIHBhY2sgb2YgcmlwcGluZyB0aGVtIHF1aWNrbHkgZmxpcG5pbmNyIFRWaXJtaWZyVmkgdGhvcm4gaW4gY3BhcnJyaSBvZiBMaWlDIFZjVVV1VWxDIFVpaUxVbFVsVWcgYW5kIGJ1eWluZyBtb3JlLiAKSmUgbmUgZGNvdXZyYWlzIHBhcyBOaWV0enNjaGUsIGMndGFpdCBsYSBsZWN0dXJlIGRlIE5pZXR6c2NoZSBxdWkgbSdhcnJhaXNvbm5haXQgIG1vaSBtbWUsICB0cmF2ZXJzIGx1aSBqZSBtZSBjb21wcmVuYWlzIG1pZXV4LiBKZSBuJ2FpIGphbWFpcyBwcm91diB1biB0ZWwgY2hvYyBlbiBsaXNhbnQgdW4gbGl2cmUgZGUgcGhpbG9zb3BoaWUgZXQsIGRlIGZhaXQsIE5pZXR6c2NoZSBuJ2VzdCBwYXMgdW4gcGhpbG9zb3BoZSBtYWlzIHVuIHBzeWNob2xvZ3VlIGV0IHVuIHBvdGUsIGV0IGMnZXN0IHNhIHBzeWNob2xvZ2llLCBjb21tZSBzYSBwb3NpZSwgcXVpIG0nYWxsYWllbnQgZHJvaXQgYXUgY3VyLiBQb3VycXVvaSBjZSBjaG9jIGV0IHF1J2VzdCBjZSBxdWkgZW4gZXN0IHJzdWx0IGRhbnMgbWEgdmllLCBjJ2VzdCBjZSBxdWUgamUgdmFpcyB0ZW50ZXIgZCdsdWNpZGVyIGljaS4uIApUaGV5IGVzdGltYXRlIHRoYXQgMTAsMDAwIHBlb3BsZSBhcnJpdmUgZXZlcnkgZGF5IHRvIE11bWJhaSBpbiBzZWFyY2ggb2Ygd29yay4gMTggbWlsbGlvbiBhcmUgaG9tZWxlc3Mgb3Igc28gaW1wb3ZlcmlzaGVkIHRoYXQgaXQncyB0aGUgc2FtZSBhcyBiZWluZyBob21lbGVzcy4gCk9oIGNvbWUgb24gbm93LiBUaGVyZSB3ZXJlIHZlcnkgZmV3IHBlb3BsZSBhdCB0aGF0IHRvcmNoIHJhbGx5LiAKTWF5YmUgaXQgZG9lc24ndCBnZXQgImJldHRlciIgYnV0IHRoZXJlJ3MgYW4gYXNwZWN0IHRvIGZlZWxpbmcgYmV0dGVyIHRoYXQgYXJpc2VzIHRocm91Z2ggbWFuYWdlbWVudCwgYW5kIGxlYXJuaW5nIGhvdyB0byBjb3BlLiAKTG9zZUl0IGhhcyBiZWVuIGV4dHJlbWVseSBoZWxwZnVsIGZvciBtZSBhcyB3ZWxsLCBhbmQgSSBsZWFybmVkIGFib3V0IHRoYXQgdGhlcmUuIApUaGV5IGxhdWdoZWQgaXQgb2ZmIGFuZCBjYW1lIGJhY2sgYWJvdXQgYW4gaG91ciBsYXRlciBhbmQgSSBoYWQgY29tcGxldGVkIHRoZSBnYW1lIG9uIFt0aGUgaGFyZGVzdF0gZGlmZmljdWx0eS4gCkhvd2V2ZXIsIHRoZXNlIHByb3RlY3RvcnMgYXJlIHNvbWV0aW1lcyBleHRyZW1lbHkgaW1wb3J0YW50IGlmIHRoZSBpbnNpZGVyIHByb2R1Y3QgaXMgdnVsbmVyYWJsZSBhbmQgZXhwb3NlZCB0byBoaWdoZXIgZGFtYWdpbmcgcmlza3MuIApNciBXaWxsaWFtcyBzYWlkIG1hbnkgY2x1YnMgaGFkIHNlZW4gYSBkZWNyZWFzZSBpbiBwcm9maXRzIGZyb20gcG9rZXIgbWFjaGluZXMsIGJ1dCBpdCBoYWQgaGl0IE5vcnRoIEFsYnVyeSBoYXJkIGFuZCBoYWQgbGVmdCBhICQ5MCwwMDAgZ2FwIGluIHRoZSBidWRnZXQgYXMgb2YgU2VwdGVtYmVyIDMwLiBGaW5hbmNpYWwgc3RhdGVtZW50cyBzaG93IHRoZSBjbHViIG1hZGUgJDExNiw3OTYgZnJvbSBwb2tpZXMgYmV0d2VlbiBKYW51YXJ5IGFuZCBNYXJjaCB0aGlzIHllYXIuIApPbiB0aGUgbG93IGVuZCwgbWFzc2FnZSB0aGVyYXBpc3RzIGVhcm5lZCBhIDI1dGggcGVyY2VudGlsZSBzYWxhcnkgb2YgJDI3LDIyMCwgbWVhbmluZyA3NSBwZXJjZW50IGVhcm5lZCBtb3JlIHRoYW4gdGhpcyBhbW91bnQuIFRoZSA3NXRoIHBlcmNlbnRpbGUgc2FsYXJ5IGlzICQ1NywxMTAsIG1lYW5pbmcgMjUgcGVyY2VudCBlYXJuIG1vcmUuIEhlIGhhcyBiZWVuIGEgY29sbGVnZSBtYXJrZXRpbmcgcHJvZmVzc29yIHNpbmNlIDIwMDQuIApVcCB0aGUgc3RhaXJzIHdhbGtzIGEgZnJpZW5kIHdobyBpcyBsaXZpbmcgd2l0aCB1cyB1bnRpbCBoaXMgbGVhc2Ugc3RhcnRzLiBIZSBhc2tzIHdoeSByb29tbWF0ZSBvbmUgd2FzIHllbGxpbmcgYW5kIGhlIHNheXMsICJvaCB5ZWFoIEkgc2hhdmVkIG15IHB1YmVzIGFuZCBmb2xkZWQgdGhlbSBpbnRvIHRoYXQgYmx1ZSB0b3dlbC4gSSB3YXMgZ29pbmcgdG8gc2hha2UgdGhlbSBvdXRzaWRlIGxhdGVyLiIKQXMgdGhleSBjb3VsZCBleHBhbmQgdGhlcmUgbWFya2V0IHNoYXJlIGJ5IG9mZmVyaW5nIGl0IG9uIGEuIApJIHNlZW4gcGVvcGxlIHRoYXQgd2VyZSBhYmxlIHRvIGZyZWVzdHlsZSBpbiB0aGVpciBzZWNvbmQgbGFuZ3VhZ2UgZXZlbiB3aXRob3V0IGltbWVyc2lvbi4gClRoZSBmaXJzdCBzdGVwIHRvIGNvbGxlY3RpbmcgcG9rZXIgY2hpcHMgdGhhdCBhcmUgdXNlZCBpbiBMYXMgVmVnYXMgY2FzaW5vcyBpcyB0byB1bmRlcnN0YW5kIHRoYXQgdGhlcmUgYXJlIGdlbmVyYWxseSB0d28gaW5kaXZpZHVhbCB0eXBlcyB0aGF0IGFyZSBpbmNvcnBvcmF0ZWQgaW4gdGhlc2UgZXN0YWJsaXNobWVudHMuIApJdCBkZXBlbmRzLCBpZiB5b3UgcHJlc2VudCB5b3Vyc2VsZiBhcyBzb21lb25lIHdobyBrbm93cyB0aGUgbGF3cyBhbmQgd2lsbCBmb2xsb3cgdXAgb24gYW4gaW5jaWRlbnQgaXQgY2FuIGdvIGluIHlvdXIgZmF2b3IuIFlvdSBqdXN0IGNhbnQgaGVzaXRhdGUgb3Igd2F2aWVyLgpDb21wYXJhbnQgc2EgcHJhdGlxdWUgdXJiYWluZSBldCBjZWxsZSBydXJhbGUgY29uZGl0aW9ubmUgcGFyIGxlcyBwbGFudGVzIHF1IHJjb2x0ZSBhdXggYWxlbnRvdXJzLCBpbCBzIGFsb3JzIGNvbnZhaW5jdSBkZSBsYSBzdXByaW9yaXQgZGVzIGVzcGNlcyB2Z3RhbGVzIGluZGlnbmVzLiAKUG9saXRpY3MgYW5kIHRveGljIHBlb3BsZSBhcmUgbWFueSB0aW1lcyB1bmF2b2lkYWJsZSB1bmxlc3MgeW91IHN0YXJ0IHlvdXIgb3duIHRoaW5nLiAKSSB3aWxsIGxpc3QgdGhlIGVtZXJhbGRzJyBsb2NhdGlvbnMgaW4gdGhlIG9yZGVyIG9mIHRoZSB3YXkgeW91IHdvdWxkIGJlIGFibGUgdG8gZmluZCB1c2luZyB0aGUgcmFkYXIsIGJ1dCB5b3UgY2FuIHVzZSBhbnkgb3JkZXIgeW91IHdpc2guIDEpLiBGcm9tIHRoZSBzdGFydGluZyBwb3NpdGlvbiBnbyB0byB0aGUgcmlnaHQgaW50byB0aGUgZmFucywgeW91IHNob3VsZCBzZWUgdGhlIHJlZCBlbWVyYWxkIGluIHRoZSBmYXIgY29ybmVyLiAKTGlrZSBkYW1uIHknYWxsLiBUYWtlIGl0IG91dCBvbiBFQSB0aGVzZSBkZXZzIGhhdmUgYmVlbiBtb3JlIHRyYW5zcGFyZW50IHRoZW4gZXZlcnkgc2luZ2xlIERldmVsb3Blci4gCkJvZHkgb2YgZm9ybWVyIE5ITCBwbGF5ZXIgUmF5IEVtZXJ5IHB1bGxlZCBmcm9tIHdhdGVyIG5lYXIgSGFtaWx0b24KRm9vdCBtYXNzYWdlIGNhbiBleGFtaW5lIHRoZSBib2R5LCBhbHNvIGNhbiB0aGUgZGlzZWFzZS4gSXQgY2FuIG1ha2UgbWVyaWRpYW5zIGVuZ29yZ2VtZW50IHRvIGltcHJvdmUgbWljcm9jaXJjdWxhdGlvbiBzbyB0aGF0IG1lcmlkaWFucyBhcmUgY2xlYXJlZCwgdGhlIGZsb3cgb2Ygdml0YWwgZW5lcmd5IGlzIHJlZ3VsYXRlZCwgd2luZCBldmlsIGFuZCBjb2xkIGV2aWwgaXMgZGlzcGVsbGVkLCBibG9vZCBjaXJjdWxhdGlvbiBpcyBwcm9tb3RlZCB0byBkaXNzaXBhdGUgYmxvb2Qgc3Rhc2lzLCB0b3hpbiBpcyByZWxpZXZlZCBpbW11bml0eSBpcyBpbmNyZWFzZWQuIEVzcGVjaWFsbHkgaXQgaXMgZ29vZCBmb3IgaHlwZXJ0ZW5zaW9uLCBzdW5zdHJva2UsIHNvcmUgbXVzY2xlIGFuZCBiaSBzeW5kcm9tZS4gCk15IHdpZmUgYW5kIEkgd2VyZSB3YWxraW5nIGFsb25nIHRoZSBzaG9yZWxpbmUsIGRvd24gcml2ZXIgZnJvbSBHcmFuZCBDb3VsZWUgZGFtIChXQSBzdGF0ZSkgaW4gdGhlIGZhbGwgd2hlbiB0aGUgcml2ZXIgaXMgbG93LgpJIGNhbWUgZG93biBhbmQgb3BlbmVkIHRoZSBkb29yLiAKVEhJUyBJUyBTVUNIIEFOIE9MRCBXT1JMRCBCVUxMU0hJVCBGQUNULiAKQ2F0YW4gYmVsb25ncyB0byBhIHN1YiBncm91cCBvZiBib2FyZCBnYW1lcyBvZnRlbiByZWZlcnJlZCB0byBhcyBHZXJtYW4gc3R5bGUgYm9hcmQgZ2FtZXMsIGJlY2F1c2UgbWFueSBvZiB0aGVtIGNvbWUgZnJvbSB0aGVyZS4gVGhleSBhcmUgb2Z0ZW4gbW9yZSBhYm91dCBzb2NpYWwgaW50ZXJhY3Rpb24gb3IgYnVpbGRpbmcgdGhpbmdzIHRoYW4ganVzdCBtb3ZpbmcgcGllY2VzIGFyb3VuZCBhIGJvYXJkLCBhcyB3ZWxsIGFzIGJlaW5nIGFib3V0IHNjb3JpbmcgcmF0aGVyIHRoYW4gZWxpbWluYXRpbmcgb3RoZXIgcGxheWVycy4gT3RoZXIgZ2FtZXMgb2YgdGhpcyB0eXBlIGFyZSBDYXJjYXNzb25uZSBhbmQgVGlja2V0IHRvIFJpZGUuIApSb2JlcnRvIEx1b25nbywgY3VycmVudGx5IHN0aWxsIGEgbWVtYmVyIG9mIHRoZSBWYW5jb3V2ZXIgQ2FudWNrcyBjb250cmFyeSB0byBydW1vcnMgaGUgd2FzIHRyYWRlZCB0byB0aGUgRGFsbGFzIENvd2JveXMgZm9yIHRocmVlIGNoZWVybGVhZGVycywgaGFzIGZhbGxlbiBhdCB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyLiBEZXNwaXRlIGhpcyBhYmlsaXR5IHRvIGdsb3ZlIGhhbmQgYW55IGNoaXBzIHRocm93biBoaXMgd2F5LCBhbmQgZGVzcGl0ZSB0aGUgZmFjdCBoZSBjYW4gc3RhY2sgdGhlIHBhZHMgYW5kIHN0b25lIGFueW9uZSB0cnlpbmcgdG8gc2xpcCBhIHBhaXIgb2YgYWNlcyBieSBoaW0gZml2ZSBob2xlLCBMdW9uZ28gV29ybGQgU2VyaWVzIGRyZWFtIGhhcyBjb21lIHRvIGEgY2xvc2UuCkVESVQ6IFNpbmNlIGZvbGtzIGFyZSBjdXJpb3VzICAgeWVzIGhlIGlzIHN0aWxsIGFsaXZlIGJ1dCB0aGV5IGRpZG4gZ2l2ZSBoaW0gbXVjaCB0aW1lIGxlZnQsIHRoZXkgbWFuYWdlZCB0byB0cmVhdCB0aGUgd291bmQgYnV0IHRoZSBjYW5jZXJzIHNwcmVhZCBpbnRvIGhpcyBvcmdhbnMgYW5kIGJvbmVzLiAKVGhlcmUgaXMgYSBsaXRlcmFsIGluZHVzdHJ5IGJlaGluZCBPV0kvRFVJcy4gTGF3eWVycyB0aGF0IG9ubHkgZGVhbCB3aXRoIHRoZW0sIHRoYXQgZ2V0IHRvIGRlY2lkZSBpZiB5b3UgbmVlZCBleHRyYSB0aGVyYXB5LCB0aGUgRE9UIHdoaWNoIGRlcGVuZGluZyBvbiB0aGUgc3RhdGUgaGFzIGEgd2hvbGUgb3RoZXIgYmFnIG9mIHNoaXQgdG8gZmVlZCB5b3UsIGluIG15IHN0YXRlIHRoZSBET1QganVzdCB0YWtlcyB5b3VyIGxpY2Vuc2UgZm9yIGJlaW5nIGNoYXJnZWQsIG5vIGNvbnZpY3Rpb24gcmVxdWlyZWQgYW5kIHlvdSBoYXZlIHRvIGp1bXAgdGhyb3VnaCB0aGUgaG9vcHMgb2YgZ2V0dGluZyBhIGJhcmVseSBmdW5jdGlvbmluZyBicmVhdGhhbHl6ZXIuIEFuZCB0aGF0IG5vdCBldmVuIHRoZSBhY3R1YWwgeW91IHN0aWxsIGhhdmUgdG8gdGFrZSBjbGFzc2VzLCBwYXkgZmluZXMsIGFuZCBwYXkgZm9yIGphaWwgdGltZS4uIApJZiBpdHMgcmFpbmluZyBoYXJkLCBpIGdldCBvdXQgYW5kIHdhbGsgdGhlbSB0byB0aGUgY2FyIHdpdGggYW4gdW1icmVsbGEuIApJdCBtdXN0IGJlIG5pY2UgdG8gaGF2ZSB0aGUgYmVzdCBsZWdhbCBzeXN0ZW0gbW9uZXkgY2FuIGJ1eS4gCkl0IHJlYWxseSBtZWFudCBhIGxvdC4gRXNwZWNpYWxseSBzaW5jZSB0aGUgdGhlbiBib3lmcmllbmQgd2FzIGNvbXBsZXRlbHkgb2JsaXZpb3VzLi4gCkhhcmRpbmcgc2hvdCBhbiA4MCB0byB3aW4gdGhlIENhdGhvbGljIEhpZ2ggU2Nob29sIEF0aGxldGljIEFzc29jaWF0aW9uIChDSFNBQSkgdGl0bGUgaW4gdGhlIDE4IGhvbGUgdG91cm5hbWVudCBhZ2FpbnN0IDE2IGZlbGxvdyBzdGF0ZXdpZGUgZ29sZmVycyBhdCBFaXNlbmhvd2VyIFBhcmsgV2hpdGUgQ291cnNlIG9uIE1heSAyMS4gCldoZW4gdGhleSBsZWF2ZSBpbiB0aGUgYWZ0ZXJub29ucywgaGUgdGFrZXMgaGVyIGhhbmQgYW5kIHJ1c2hlcyBoZXIgcGFzdCB0aGUgd2FpdGluZyBUViBjYW1lcmFzLiBIZSBpcyBzdHJhaWdodCBiYWNrZWQgYW5kIHBva2VyIGZhY2VkLCBldmVyeSBpbmNoIHRoZSByZXRpcmVkIGNvcCwgYW5kIGluIHRoZSB3aXRuZXNzIGJveCBoZSB2YWxpYW50bHkgZGVmZW5kcyBoaXMgZGF1Z2h0ZXIuIEJ1dCBzYWRuZXNzIGhhbmdzIGFib3V0IGhpbSBsaWtlIGEgY2xvdWQuICJTaGUgZGlkbiB3YW50IHRvIGRpc2FwcG9pbnQgdGhlIGZhbWlseSwiIGhlIHNheXMgb2YgTGFuZSBvYmZ1c2NhdGlvbi4gClRoZXJlJ3Mgbm8gd2F5IG9mIGdldHRpbmcgYXJvdW5kIHRoYXQuIElmIHRoZXJlIHdhcyBzdWNoIGEgdGhpbmcgYXMgZ2V0dGluZyBhcm91bmQgaGF2aW5nIGEgZGlzYWR2YW50YWdlIHNpbXBseSBieSBtb25leSBtYW5hZ2VtZW50LCB5b3UgY291bGQgZ28gdG8gdGhlIGNyYXAgdGFibGUgYW5kIHdpbiBieSBtb25leSBtYW5hZ2VtZW50LiBJbiBvdGhlciB3b3JkcyBieSBxdWl0dGluZyBhdCB0aGUgcmlnaHQgdGltZSBvciBub3QgcXVpdHRpbmcgYXQgdGhlIHJpZ2h0IHRpbWUgYnV0IHlvdSBjYW5ub3QgZG8gdGhhdC4gCklmIHRoZXJlIGlzIG9uZSBkZW5pZXIsIFNLIGFwb2xvZ2llcyBhcmUgbm90IHNpbmNlcmUuClRoZSBhZHZlbnQgb2YgaGlnaCBkZWZpbml0aW9uIGFuZCBhdWRpbyBtYXkgaGF2ZSBhIGhhbmQgaW4gaXQsIGJ1dCBpdCBzZWVtcyBsaWtlIG1vc3QgbW92aWVzIG1hZGUgdG9kYXkgYXJlIGNyZWF0ZWQgdG8gaW5kdWNlIHRoZSBtb3N0IHN0cmVzcyBwb3NzaWJsZSBpbiBhbiBhdWRpZW5jZS4gSW5kZWVkLCBtYW55IGNvbWUgZm9yIHRoYXQgZXhwZXJpZW5jZS4gSW4gTG9zIEFuZ2VsZXMgYW5kIHNvbWUgb3RoZXIgcGxhY2VzIG5ldyA0RCB0aGVhdGVycyBoYXZlIGJlZW4gaW5zdGFsbGVkIGNvbXBsZXRlIHdpdGggbW92aW5nIHNlYXRzIGFuZCBtaXN0IHRvIGdpdmUgeW91IGFuICJleHBlcmllbmNlIiB3aGVuIGEgY2FyIGNyYXNoZXMgb3IgdGhlIHJhaW4gc3RhcnRzLiAKU2hlIGhhdmluZyBhIGdvb2QgZGF5LiBMaXN0ZW4sIGdpdmUgaGVyIGEgaGlnaCBmaXZlLCBzaG93IHlvdXIgZXhjaXRlbWVudCBmb3IgaGVyLCBidXkgaGVyIGljZSBjcmVhbS4gCkFib3V0IDEwMCBwaWxvdHMgc2NvcmluZyBtb3JlIHRoYW4gMTAwIHZpY3RvcmllcyBhdCBsZWFzdC4gKEZ1bGwgQW5zd2VyKS4gClBhZWRpYXRyaWNpYW5zIGFuZCBwdWJsaWMgaGVhbHRoIGV4cGVydHMgZGVzY3JpYmUgdGhlIHRocmVlIG1haW4gZm9ybXMgb2YgdW5kZXJudXRyaXRpb24gYW5kIHByb3ZpZGUgYSBjbGluaWNhbCB1cGRhdGUgb24gdGhlIGVwaWRlbWlvbG9neSwgZGlhZ25vc2lzLCBhbmQgbWFuYWdlbWVudCBvZiB0aGVzZSBjb25kaXRpb25zLgpBIHNtYXJ0IHBva2VyIHBsYXllciBpcyBvbmUgd2hvIHVuZGVyc3RhbmRzIG9kZHMsIHByb2JhYmlsaXRpZXMsIGJhbmtyb2xsIG1hbmFnZW1lbnQsIGFuZCBtb3N0IGltcG9ydGFudGx5IHRoZSBwbGF5ZXJzIGF0IHRoZSB0YWJsZS4gCkkgb2theSB3aXRoIGVpdGhlciBhcHByb2FjaC4gVGhlIG9ubHkgdGltZSBJIHJlYWxseSBoYXZlIGlzc3VlcyB3aXRoIHRoZXJhcGlzdHMgdGltZSBib3VuZGFyaWVzIGFyZSB0aG9zZSB0aGVyYXBpc3RzIHRoYXQganVzdCBzZWVtIHRvIGhhdmUgTk8gY29uY2VwdCBvZiB0aW1lIG1hbmFnZW1lbnQuIEtlZXBpbmcgYSBjbGllbnQgd2FpdGluZyByZWd1bGFybHkgZm9yIDIwIG1pbnV0ZXMgYmVjYXVzZSB5b3UgY2FuIGJlIGJvdGhlcmVkIHRvIHNheSBnb29kYnllIGluIGEgcmVhc29uYWJsZSB0aW1lIGRlbW9uc3RyYXRlcyBhIGxhY2sgb2YgcmVzcGVjdCBmb3Igb3RoZXJzIHRpbWUuClRoZXJlIGFyZSBhbHJlYWR5IG1hbnkgc2FmZWd1YXJkcyBpbiBwbGFjZSB0byBwcmV2ZW50IHVud2FudGVkIGVuY3JvYWNobWVudCBpbiByZXNpZGVudGlhbCBhcmVhcy4gCkFub3RoZXIgdGhlb3J5IHJlZ2FyZGluZyBjYXVzYXRpb24gb2YgTUZUUHMgcmVmZXJzIHRvIHByb2xvbmdlZCBwb3N0dXJhbCBtYWludGVuYW5jZSBjcmVhdGluZyBjb250aW51b3VzIG11c2NsZSBjb250cmFjdGlvbi4KVGhleSB3ZXJlIGNlcnRhaW4gdGhleSBoYWQgdGhlaXIga2lsbGVyLCBidXQgd291bGQgbm93IG5lZWQgdG8gcGllY2UgdG9nZXRoZXIgbW9yZSBldmlkZW5jZSB0byBicmluZyBFcm5pZSBTY2hlcmVyIHRvIGp1c3RpY2UuLiAKSSBhY3RpdmVseSBkaWQgbm90IGNhbGwgaGltIGEgTmF6aSBvciBhIHdoaXRlIHN1cHJlbWFjaXN0LiAKSSBub3Qgc3VyZSBhYm91dCByaXZlciBiZWNhdXNlIGl0IGtpbmQgb2Ygc2lsbHkgdG8gZ2V0IHRvIHRoaXMgc3BvdCB3aXRoIHRoaXMgaGFuZCwgYnV0IEkgZmF2b3IgYSBmb2xkLiBJIHRoaW5rIGNoZWNraW5nIEFBIG9uIHRoZSBmbG9wIGlzIHByb2JhYmx5IG5vdCBvcHRpbWFsIHZzIHRoZSBmaWVsZCwgYnV0IGlmIHlvdSBkbyBjaGVjayBpdCBzaG91bGQgZGVmaW5pdGVseSBiZSB0aGUgY29tYm9zIHdpdGggdGhlIEFjIHNvIHlvdSBjYW4gZWFzaWx5IHNuYXAgdGhpcyBvZmYuIApJZiBSaWNoYXJkIEhvbGJyb29rZSBvciBoaXMga2luZCBhc3N1bWUgdGhlIGFpcnMgb2YgY2l2aWxpYW4gZmllbGQgbWFyc2hhbHMgdGhlIG1vbWVudCB0aGV5IHN0ZXAgb24gUGFraXN0YW5pIHNvaWwgaXQgaXMgYmVjYXVzZSB3ZSBhbGxvdyB0aGVtIHRoaXMgZnJlZWRvbS4gSWYgd2UgaW52aXRlIGJlaW5nIHBhdHJvbmlzZWQgd2Ugd2lsbCBiZSBwYXRyb25pc2VkLiAKQmlvU3VuIEVhciBDYW5kbGVzIGFyZSBtYWRlIGZyb206Ck1ha2Ugc3VyZSB5b3VyIGJlZGRpbmcgaXMgY29tZm9ydGFibGUsIHlvdXIgcGlsbG93IGlzIGluIGdvb2QgY29uZGl0aW9uIGFuZCB0aGUgcmlnaHQgdHlwZSBmb3IgeW91ciBzbGVlcCBzdHlsZSBhbmQgcmlnaHQgc2l6ZSBmb3IgeW91ciBib2R5LiBJIHR1cm4gb24gbXkgZXNzZW50aWFsIG9pbCBkaWZmdXNlciB3aXRoIGxhdmVuZGVyIChteSBwcmVmZXJlbmNlKSwgdHVybiBvbiBteSBzdW5yaXNlIGFsYXJtIGNsb2NrJ3MgZGltbWluZyBmZWF0dXJlIHNvIHRoYXQgaXQgZGltcyB0byBkYXJrbmVzcyBpbiAzMCBtaW51dGVzLiBJIGdldCBpbiBiZWQsIHJlbGF4LCBJIHdlYXIgYmx1ZSBibG9ja2VyIGdsYXNzZXMgaWYgSSdtIHBsYXlpbmcgd2l0aCBteSBwaG9uZS4gClRoZSBraW5kIHRoYXQnbGwgc2hvdmUgeW91IGludG8gYSBsb2NrZXIgYW5kIGNhbGwgeW91IGEgbG9zZXIuIFRoYXQganVzdCBpc24ndCB3aGF0IGJ1bGx5aW5nIGlzLiAKSG93ZXZlciwgd2l0aCBydXNoIHBva2VyIHlvdSBjYW4gc2l0IGRvd24gYXQgdGhlIHRhYmxlLCBtYWtlIGEgcHJvZml0LCBsZWF2ZSwgYW5kY29tZSBiYWNrIHdpdGggdGhlIG1pbmltdW0gYnV5aW4uIFRoaXMgYWxsb3dzIHlvdSB0byBtaWxrIHRoZSBydXNoIHBva2VyIHRhYmxlcyBhc211Y2ggYXMgeW91IHdhbnQgYSBsaXR0bGUgYml0IGF0IGEgdGltZS4gVGhpcyBpcyBwZXJmZWN0IGZvciBzaG9ydCBzdGFja2VycyBhbmRsb3NpbmcgcG9rZXIgcGxheWVycy4KU2Nob29scyBhcmUgdGhlcmUgdG8gdGVhY2ggYWNhZGVtaWMgc3ViamVjdHMsIG5vdCBzb21lIHJhbmRvbSBzZXQgb2YgbGlmZSBza2lsbHMgdGhhdCBhcHBlYWwgdG8gd29ybGQgd2Vhcnkgb2xkIG1lbi4KU2luY2Ugd2UgaGF2ZSB0aGUgbWFuaWxhIHByb3RvY29sIERyIGhlcmUgb24gdGhpcyBmb3J1bSBJIHRoaW5rIHdlIHNob3VsZCBhc2sgdGhpcyBxdWVzdGlvbi4gRG9lcyBwcm9zdGF0ZSBkcmFpbmFnZSBvZmZlciBzeW1wdG9tIHJlbGllZj8gSSBoYXZlIHJlYWQgaHVuZHJlZHMgb2Ygc3RvcnkncyBzYXlpbmcgbm8sIE1hbnkgZnJvbSB4IG1hbmlsYSBwYXRpZW50cy4gWWV0IHRoZXJlIGFyZSBhIGZldyBvdXQgdGhlcmUgd2hvIHdlcmUgaGVscGVkIG9yIGN1cmVkIGZyb20gbWFzc2FnZS4gSSB3b25kZXIgaWYgdGhlIGN1cmVkIHdlcmUgdGhlIHNtYWxsIHBlcmNlbnQgb2Ygc3VmZmVycyB3aXRoIHRydWUgYmFjdGVyaWFsIHByb3N0YXRpdGlzLiBPciBkb2VzIG1hc3NhZ2luZyBhY3R1YWxseSBoZWxwIHJlbGVhc2UgdGhlIHRlbnNlIHBlbHZpYyBmbG9vciBtdXNjbGVzIHdoZW4gZG9uZSwgb2ZmZXJpbmcgc29tZSByZWxpZWY/IE15IGRvYyB0cmllZCB0aGUgcHJvdG9jb2wgd2l0aCBsaXR0bGUgcmVzdWx0cy4gQW5kIGhhcyBzdG9wcGVkIGRvaW5nIGl0IGZvciBoaXMgcGF0aWVudHMuIHNvbWUgc2F5IHRoZSBhbnRpIGluZmxhbW1hdG9yeSBlZmZlY3RzIGZyb20gYW50aWJpb3RpY3MsIGNvbWJpbmVkIHdpdGggbWFzc2FnZSBtYXkgYWxzbyBwbGF5IGEgcm9sZSBpbiBzb21lIHBhdGllbnRzIGdldHRpbmcgc2hvcnQgdGVybSByZWxpZWYuCkEgcGxhY2UgdG8gcG9zdCB0aGVvcnksIGRpc2N1c3Npb24gYW5kIGluZm9ybWF0aW9uIHRoYXQgd2lsbCBtYWtlIHVzIGJldHRlciBsaWZ0ZXJzLgpMYSBiZXJjZT8gTWFpcyB0dSBuIHBlbnNlcyBwYWFhcyEgRWxsZSBlc3QgcGhvdG90b3hpcXVldXV1dSEgSW1hZ2luZXogdW4gaHlzdHJpcXVlIHZvdXMgYW5ub25jZXIgbGUgdHJ1YywgYSBmYWl0IHBsdXMgY3JkaWJsZS4gQm9uLiAKU3RhcnRzIHdhbGtpbmcuIFRoZSB2aXN1YWwgcHJvd2VzcyBhZGRzIGEgZGlmZmVyZW50IHBhcnQgdG8gdGhlIHdob2xlIHNjZW5lLiBBdCBvbmUgaGFuZCB5b3Ugc2VlIEphY2tpZSByZXNpc3RhbmNlIHRvIGNvbXBseSB3aXRoIHRoZSBydWxlIHdoaWNoIGNhbiBiZSBjYWxsZWQgYSBNYWNoaWF2ZWxsaWFuIGFydCwgb24gdGhlIG90aGVyIGhhbmQgeW91IHNlZSBvciBzaG91bGQgSSBzYXksIGRvbiBzZWUgVml0byBTcGF0YWZvcmUgd2hvIHRyaWVzIHRvIGVuZCBhIG1ham9yIG5vIG5vIGJ5IGRpc2xvY2F0aW5nIEphY2tpZSBmcm9tIHRoaXMgd29ybGQuIApXZWxsIEkgZG9uIGxpa2UgdGhlIGlkZWEgb2YgYmVpbmcgYWRkaWN0ZWQgdG8gY2FmZmVpbmUgc28gSSB0aGluayBJIGdvaW5nIHRvIGdpdmUgaXQgYSBicmVhayBhbmQgc2VlIGhvdyBJIGdvLiAKRWluIGFrdHVlbGxlcyBUb3AgUHJvamVrdCBmciBKdW1laXJhaCBpc3QgZGVyIFRzYXJldiBTYWQgS29tcGxleCBpbiBCZXN0bGFnZSBnZWdlbmJlciBkZW0gS3JlbWwgaW4gTW9za2F1LiAyMDE0IHNvbGxlbiBoaWVyIFNlcnZpY2VkIEFwYXJ0bWVudHMgdW50ZXIgTGVpdHVuZyBkZXIgRHViYWllciBIb3RlbGtldHRlIGVyZmZuZXQgd2VyZGVuLiBJbiBkZW0gMzAwIE1pbGxpb25lbiBVUyBEb2xsYXIgdGV1cmVuIHVuZCBydW5kIDcwLjAwMCBRdWFkcmF0bWV0ZXIgZ3JvZW4gR2VidWRla29tcGxleCBzaW5kIGF1Y2ggQnJvcywgU3BhLCBGaXRuZXNzY2x1YiB1bmQgUGFya3BsdHplIGdlcGxhbnQuIEVzIGlzdCBkYXMgZXJzdGUgSG90ZWwgaG5saWNoZSBQcm9qZWt0IGRlciBKdW1laXJhaCBHcm91cCBpbiBSdXNzbGFuZC4gTm9jaCBpbSBTZXB0ZW1iZXIgZXJmZm5ldCBpbiBkZXIgcnVzc2lzY2hlbiBIYXVwdHN0YWR0IGVpbiBGcmFuY2hpc2UgUmVzdGF1cmFudCBkZXIgSnVtZWlyYWggVG9jaHRlciBJbmdlbyBMaW1pdGVkLiBXZWl0ZXJlIGFjaHQgYmlzIG5ldW4gZGVyIGJlbGllYnRlbiAiTm9vZGxlcyBIb3VzZXMiIHNpbmQgaW4gTW9za2F1IHVuZCBTdC4gUGV0ZXJzYnVyZyBnZXBsYW50LgpNdXphay4gRGlzY29zIGFuZCBuaWdodCBjbHVicy4gClNvIHdoZXRoZXIgeW91IGFyZSBuZXcgdG8gcG9rZXIgb3IgYW4gZXhwZXJpZW5jZWQgUHJvLCB0aGVyZSBpcyBzb21ldGhpbmcgYXZhaWxhYmxlIGZvciBldmVyeW9uZS4gQXMgdGhpcyBhcnRpY2xlIHdpbGwgY29uY2VudHJhdGUgbWFpbmx5IG9uIHRoZSBsZWFybmluZyBhc3BlY3QsIEkgdGhpbmsgaXQgaXMgYWx3YXlzIGEgZ29vZCBwb2ludCB0byBzdGFydCB3aXRoIHRoZSB2YXJpb3VzIHR5cGVzIG9mIGdhbWVzIGFuZCB0aGVuIG1vdmluZyBmb3J3YXJkIG9uIHRvIHRpcHMgZm9yIHNwZWNpZmljIGdhbWVzLgpQb3VyIHJwb25kcmUgIHZvdHJlIHF1ZXN0aW9uOiBwb3VycXVvaSBuJ3R1ZGllciBsZSBkdG91cm5lbWVudCBkZSBtaW5ldXIgdW5pcXVlbWVudCBzdXIgbCdhbmdsZSBkZSBsYSBzZXh1YWxpdC4gY2FyIGlsIG1lIHNlbWJsZSBxdWUgZGFucyBsYSBwZXJjZXB0aW9uIGducmFsZSBkJ3VuZSB0cnMgZ3JhbmRlIG1ham9yaXQgZGVzIGZyYW5haXMsIGxlIGR0b3VybmVtZW50IGRlIG1pbmV1cnMgaW1wbGlxdWUgbmNlc3NhaXJlbWVudCB2b2lyZSBleGNsdXNpdmVtZW50IGRlcyByZWxhdGlvbnMgc2V4dWVsbGVzLiBMZXMgZXhlbXBsZXMgbGUgcGx1cyB2dWVzIHNvbnQgbGVzIHBhcmVudHMgcXVpIG5lIHNvdWhhaXRlbnQgcGFzIHZvaXIgdW4gZGUgbGV1ciBlbmZhbnQgc29ydGlyIGF2ZWMgdW4gZ2Fyb24gb3UgdW5lIGZpbGxlIHBsdXMgZyhlKSwgZXQgcXVpIG1lbmFjZSBkZSBwb3J0ZXIgcGxhaW50ZSBwb3VyIGR0b3VybmVtZW50IGRlIG1pbmV1cnMuIEMnZXN0IHBvdXIgY2VsYSBxdWUgaidhaSByZXRlbnUgY2V0dGUgaWRlIGV0IHF1ZSBqJ2FpIHNvdWhhaXQgZG1vbnRyZXIgbGEgZmF1c3NlIGFwcHJjaWF0aW9uIHF1ZSBsJ29uIHMnZW4gZmFpdC4KU28gdGhlIGRheSByb2xscyBhcm91bmQsIGFuZCB0aGV5IGdvICJuYWgsIEkgZ290IGFueGlldHkiIG9yICJteSB3aWZlIGhhcyBtYWRlIG90aGVyIHBsYW5zIiwgYW5kIHRoZXkgcmVhbGx5IGRvbiB0aGluayB0aGV5IG1hZGUgYW55IGNvbW1pdG1lbnQgdG8geW91IGF0IGFsbC4gCkJlZm9yZSB5b3VyIHF1aXQgZGF0ZSwgYnJhaW5zdG9ybSBhIGxpc3Qgb2YgbGl0dGxlIHBsZWFzdXJlcyAgIGFueXRoaW5nIGZyb20gYSBnbG9zc3kgbmV3IGZhc2hpb24gbWFnYXppbmUgb3IgdHViZSBvZiBleHBlbnNpdmUgbGlwIGdsb3NzIHRvIGEgcHJvZmVzc2lvbmFsIG1hbmljdXJlIG9yIGV2ZW4gYSBtYXNzYWdlLiBMaXN0IGFzIG1hbnkgcG90ZW50aWFsIHJld2FyZHMgYXMgcG9zc2libGUuIApJIHRvb2sgYSAxMCUgcGF5IGN1dCBhbmQgSSBjb3VsZG4gaGF2ZSBiZWVuIGhhcHBpZXIuIE15IGNvd29ya2VycyBhcmUgYWxsIHNtYXJ0LCB0aGV5IGdldCBhIGxvdCBkb25lLCBhbmQgYXJlIGZvY3VzZWQuIApMb2NrIHRob3NlIGtuZWVzIGluIG9uIHRoZSBmaXJzdCAxLzMgb2YgdGhlIHNxdWF0LiBSaWdodCBub3cgeW91IGJvdW5jaW5nIG9mZiBvZiB0aGVtIGFuZCBzbGlkaW5nIHRoZW0gZm9yd2FyZCBvbiBzb21lIHJlcHMuClRoZSBwZXJzaXN0ZW5jZSBpbiB0aGUgcGFpbiBpcyB3aGF0IGdvdCBtZS4gClRoZSBzaW1zIDIgYnkgZmFyISBTSU1TIDIgUlVMRVMhIHJlYWQgYmVsb3cgaWYgeW91IHdhbnQgdG9vLCBidXQgSSB3cm90ZSBsb3RzIG9mIHN0dWZmLCBidXQgaXQgbWF5IGhlbHAgeW91IHVuZGVyc3RhbmQgd2h5IHNpbXMgMiBpcyBiZXR0ZXIgdGhhbiAzLiBJIGhhdmUgYmVlbiBwbGF5aW5nIHRoZSBzaW1zIDIgZm9yIGF0IGxlYXN0IGEgeWVhciwgYW5kIEkgYW0gcHJvdWQgdG8gc2F5IEkgYW0gYSBhZGRpY3QgKEkgZG8gaGF2ZSBhIHNvY2lhbCBsaWZlIHRob3VnaCkuIApQYXRlbCdzIHdpZmUgc2FpZCBzaGUgY291bGRuJ3QgY2F0Y2ggaGVyIGJyZWF0aCB3aGVuIHNoZSBoZWFyZCB0aGUgY2hhcmdlcyBsZXZlbGVkIGFnYWluc3QgaGVyIGh1c2JhbmQuCkFuZHJldyBCYWtlciwgcmVzaWduLi4gClNvbWUgcGVvcGxlIGVuam95IHRoZSBzZW5zYXRpb24gb2YgYSBmaW5nZXIgdGhlaXIgb3duIG9yIGEgbG92ZXIgaW5zaW51YXRlZCBpbnRvIHRoZWlyIGFuYWwgb3BlbmluZyBhbmQgZ2VudGx5IHJvdGF0ZWQuIE90aGVycyBtYXkgcHJlZmVyIHRoZSBpbnNlcnRpb24gb2YgYSBkaWxkbyBvciB2aWJyYXRvciBiZXlvbmQgdGhlIGFuYWwgb3BlbmluZyBhbmQgc2hvcnQgYW5hbCBjYW5hbCBpbnRvIHRoZSBsYXJnZXIgcmVjdHVtLiAKWWVzLCB0aGUgYm9hcmQgaXMgZHJhdyBoZWF2eSwgc28gSSBsaWtlIGEgb24gdGhlIGxhcmdlciAyLzMgc2l6ZSBiZXQuIApNeSBhbWJpdGlvbiBpcyB0byBiZSBhIGdhbWUgZGVzaWduZXIuIEkgbG92ZSB0byBrbm93IGFib3V0IHRoZXNlIGtpbmRzIG9mIGRlY2lzaW9ucyBhbmQgSSBsaWtlIHB1enpsaW5nIHRocm91Z2ggZGVzaWduIHByb2JsZW1zIGxpa2UgdGhlc2UuIApBIGZlbWFsZSBZb3Jrc2hpcmUgVGVycmllciwgbmFtZWQgIk11ZmZ5LCIgd2FzIHJldW5pdGVkIHdpdGggaGVyIGZhbWlseSBhZnRlciBzaGUgd2FzIHRha2VuIGR1cmluZyBhIGJyZWFrIGFuZCBlbnRlciBhdCBhIGhvbWUgaW4gdGhlIGFyZWEgb2YgSXNsaW5ndG9uIEF2ZW51ZSBhbmQgVGhlIFdlc3R3YXkgb24gT2N0LgpFdmVudHVlbGwgaXN0IG5vY2ggZWluIHNwZXppZWxsZXIgVmVydHJhZyBtaXQgZGVyIENTUyB2b3JoYW5kZW4sIHNvIGRhc3MgZGVyIFJlY2hudW5nc2JldHJhZyBub2NobWFscyBhYndlaWNoZW4ga2Fubi4uIApLYXdhamE6IFJhem9yIGQgdG8gYyBzdGFydHVwcyBEb2xsYXIgU2hhdmUgQ2x1YiAobm93IG93bmVkIGJ5IFVuaWxldmVyKSBhbmQgSGFycnkncyBoYXZlIGdyYWJiZWQgYSAxMiBwZXJjZW50IG1hcmtldCBzaGFyZSBmcm9tIFAgY2F0ZWdvcnkgYmVoZW1vdGggR2lsbGV0dGUgc2luY2UgMjAxMi4gCkkgd2FzIHJlYWxseSBzdXJwcmlzZWQgYnkgdGhlIHJlYWN0aW9uIG9mIG15IGZhbWlseS4gSXQgaXMgbGlrZSB0aGV5IGRvbid0IGJlbGlldmUgaXQuIApJdCBkb2VzbiBtYXR0ZXIuIEl0IGNhc3VhbC4gVGhlcmUgbGl0ZXJhbGx5IGlzIG5vIHJlYXNvbiB0byBwbGF5IGNhc3VhbCBmb3IgIndpbnMiIGFzaWRlIGZyb20gY29tcGxldGluZyBhICJ3aW4iIHF1ZXN0Li4gCk1pY2hhZWwgSmFja3NvbiBESUQgZG8gd3JvbmcuIEhlIGh1bmcgb3V0IHdpdGggYm95cyB3YXkgdG9vIG11Y2ggYW5kIHNsZXB0IHdpdGggdGhlbS4gClNvIGhlcmUgSSBhbSB0aGlua2luZywgaWYgSSBhc2sgQmlsbCBHYXRlcyBmb3IgJDE4LDAwMCBVUyBkb2xsYXIgYmlsbHMgSSB3b25kZXIgaWYgaGUgd291bGQgc2VuZCBpdCB0byBtZSBubyBzdHJpbmdzIGF0dGFjaGVkLiBNYXliZSBPcHJhaCB3b3VsZD8gV2hvIGNvdWxkIGJlIG5hbWUgZHJvcCBhc2tpbmcgZm9yIGRvbmF0aW9ucz8gSSBkbyByZXNjdWUgZmVyYWwgY2F0cywgc3BheS9uZXV0ZXIgdGhlbSB3aXRoIG15IG93biBjYXNoLiAKSW4gMTk0NCBoZSBtZXQgRWxhaW5lIEhhbGxlciBhbmQgdGhleSB3ZXJlIG1hcnJpZWQgb24gTm92ZW1iZXIgMTUgb2YgdGhhdCB5ZWFyLiAKU29ycnkgYWJvdXQgdGhlIHR5cG9zLiBJIGhhdmUgbm90IHByb29mcmVhZCB0aGlzIGNvbW1lbnQuClRoZSBzY2hvb2wgYWxzbyBoYXMgcmVjZWl2ZWQgbXVjaCByZWNvZ25pdGlvbiBmcm9tIG1hbnkgd2VsbCBzYXRpc2ZpZWQgZW1wbG95ZXJzIG9mIG91ciBzdHVkZW50cyBhbmQgdGhlaXIgY2xpZW50cy4gSXQgd2FzIGZvdW5kZWQgaW4gMTk4NCwgYmVpbmcgb25lIG9mIHRoZSBmaXJzdCBzY2hvb2xzIHRvIGJlIGxpY2Vuc2VkIGJ5IHRoZSBQZW5uc3lsdmFuaWEgU3RhdGUgQm9hcmQgb2YgUHJpdmF0ZSBMaWNlbnNlZCBTY2hvb2xzIHRvIGdpdmUgbWFzc2FnZSB0cmFpbmluZy4gCkFueSBwcmV2aW91cyBXUFQgd2lubmVyIGNhbiBwYXkgdGhlICQxNSwwMDAgYW5kIGVudGVyIHRoZSB0b3VybmFtZW50LCBidXQgc2luY2UgdGhlIHNlYXNvbiBlbmRpbmcgY2hhbXBpb25zaGlwIGhhcyBiZWVuIGNhbmNlbGxlZCwgYWxsIG9mIHRoZSBTZWFzb24gWElWIHdpbm5lcnMgaGF2ZSBhbHJlYWR5IHdvbiBhIHNwb3QgaW4gdGhlIGV2ZW50IGluIHByZXZpb3VzIHllYXIgZWFjaCB3aW5uZXIgcmVjZWl2ZWQgYSBmcmVlIGVudHJ5IGludG8gdGhlIHNlYXNvbiBlbmRpbmcgY2hhbXBpb25zaGlwIGFzIHBhcnQgb2YgdGhlaXIgcHJpemUgcGFja2FnZS4gUG9rZXIgQ2xhc3NpYwpNLiBEdWNoZXNuZWF1IG4gcGFzIHByY2lzIGxlcyByYWlzb25zIGR1IHJlZnVzLiBMZXMgaW52ZXN0aXR1cmVzIG91dmVydGVzIG5lIHNpZ25pZmllbnQgcGFzIHF1ZSBxdWljb25xdWUgcGV1dCBhdm9pciBzb24gbm9tIHN1ciBsZSBidWxsZXRpbiAgbGEgcmVuY29udHJlIGRlIHNsZWN0aW9uIGRlcyBjYW5kaWRhdHVyZXMsIGEgdCBpbCBkaXQsIHRhcmQgdmVuZHJlZGkgZGFucyB1biBjb3VycmllbC4KVGhlIHF1YWxpdHkgb2YgdGhlIGZlbHQgY2xvdGggaXMgd2hhdCBtYWtlcyB0aGlzIHNwZWNpYWwsIGlkZWFsIGFuZCwgZWFzeSB0byBwbGFjZS4gQXMgd2Ugc2FpZCwgaXQgaXMgY29uc3RydWN0ZWQgd2l0aCB0aGUgZHVyYWJsZSB3b29sIHNpbWlsYXIgdG8gdGhhdCBpbiB1c2UgYXQgbGFyZ2UgY2FzaW5vcy4gCkFub3RoZXIgcmVhZGVyIGRlY2lkZWQgdG8gdGFrZSBpc3N1ZSB3aXRoIG15IHJlY2VudCBjb21tZW50cyBhYm91dCBwb2xpdGljYWwgY29ycmVjdG5lc3Mgb24gdGhlIG1hc3NhZ2UgdGFibGUgYW5kIHdhbnRlZCB0byBkZW1vbnN0cmF0ZSB3aHkgRyBzdHJpbmdzIGNhbiBsb29rIHF1aXRlIGF0dHJhY3RpdmUgb24gbWVuLiBSYXRoZXIgdGhhbiBhcmd1aW5nIGhpcyBjYXNlIHdpdGggcGVyc3Vhc2l2ZSBwcm9zZSBJIHdhcyB0cmVhdGVkIHRvIGEgcmVhciB2aWV3IG9mIHNvbWV0aGluZyB0aGF0IHdlbnQgZmFyIGJleW9uZCBhIEcgc3RyaW5nLiBERUxFVEUhLiAKVGhpcyBzeXN0ZW0gaXNuJ3Qgd29ya2luZywgaG9seSBzaGl0LiBJdCdzIHB1bmlzaGluZyBnb29kIGhvbmVzdCBwZW9wbGUgd2hvIGhhdmUgYmVlbiB0aHJvdWdoIGhlbGwgYWxyZWFkeS4gCllvdSBjYW4gdXNlIHRoZSBJbnRlcm5ldCwgbmV3c3BhcGVycyBhbmQgYnVsbGV0aW4gYm9hcmRzIGluIGFyZWFzIHRoYXQgYXR0cmFjdCB0aGUgdHlwZSBvZiByZW50ZXJzIHlvdSBhcmUgbG9va2luZyBmb3IgYXMgd2VsbCBhcyB3b3JkIG9mIG1vdXRoLiBUaGUgaWRlYWwgc2l0dWF0aW9uIGlzIHRvIGZpbmQgc29tZW9uZSB5b3Ugb3IgeW91ciBmcmllbmRzIGtub3cgYW5kIGNhbiB2b3VjaCBmb3IuIApUaGUgYmVzdCBwYXJ0IHdhcyB3aGVuIG15IGh1c2JhbmQgb3BlbmVkIGFsbCB0aGUgZ2lmdHMgaW4gZnJvbnQgb2YgZXZlcnlvbmUgYWZ0ZXIgYSBjb3VwbGUgaG91cnMgb2YgZHJpbmtpbmcuIApIYXZpbmcgZm9jdXMgb24gZmV3IGFnZW4gcG9rZXIgaWYgdW5kb3VidGVkbHkgZWFzaWVyIGZvciBwZW9wbGUgc3RhcnRpbmcgdG8gaW1wcm92ZSB0aGVpciBvd24gcHJvY2VzcyBvZiBnb2FsIGFjaGlldmVtZW50LiBIYXZpbmcgZmV3IGFnZW4gcG9rZXIgbWFrZXMgZWFjaCBvZiB0aGUgZ29hbHMgbXVjaCByZWFsIHNpbmNlIHlvdSBjYW5ub3Qgc2ltcGx5IGdldCBsb3N0IGluIGxvbmcgbGlzdCBvZiBwcm9qZWN0cyBhbmQgcGxhbnMuIEFzIHlvdSBoYXZlIG1vcmUgY29uZmlkZW5jZSBhbmQgZXhwZXJpZW5jZSBpbiB0aGUgcHJvY2VzcyBvZiBnb2FsIHNldHRpbmcsIHlvdSBjYW4gZGV2ZWxvcCB0aGUgZ29hbCBsaXN0IGFuZCB3b3JrIG9uIHRoaXJ0eSBvciBtb3JlIGdvYWxzIGF0IHNhbWUgdGltZS4uIApZb3Ugd2lsbCBzb29uIGRpc2NvdmVyIHRoYXQgdGhpcyBpcyBhIGdyZWF0IHdheSB0byByZWFsbHkgZmlndXJlIG91dCB3aGF0IHlvdXIgb3B0aW9ucyBhcmUgd2hlbiB5b3UgYXJlIGxvb2tpbmcgdG8gcmVhbGx5IGNyZWF0ZSBhIHRlcnJpZmljIGVudmlyb25tZW50IHRvIHdvcmsgd2l0aCB3aGVuIHlvdSBhcmUgcGxheWluZyBwb2tlciBhdCBob21lIG9yIHBsYW5uaW5nIGEgc3BlY2lhbCBldmVudC4gVGhpcyBpcyBhIHRlcnJpZmljIHdheSB0byBtb3ZlIGZvcndhcmQgYW5kIHRvIGdldCB0aGUga2luZCBvZiBnYW1lIHRoYXQgeW91IGFyZSBpbnRlcmVzdGVkIGluLgpUaGUxbW9vbm1hbiAgNjAgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ28KQXQgYSB5ZWFyIHlvdSdyZSBzdGlsbCBpbiB0aGUgZWFybHkgc3RhZ2VzIHRvIGdldCB0byBrbm93IHNvbWVvbmUuIEFuZCB0byBiZSBob25lc3QgT1AgdGhpcyB3aG9sZSBzaXR1YXRpb24gcmFpc2VzIHNvbWUgcmVkIGZsYWdzLiBTaGUncyAzMSwgd2l0aCA0IGtpZHMgd2l0aCB3aGF0IGFwcGVhcnMgdG8gYmUgMyBkaWZmZXJlbnQgYmFieSBkYWRkeSdzPyBBbmQgb24gdG9wIG9mIHRoYXQsIHNoZSdzIGFsc28gbm93IG1vdmVkIGluIGEgYm95ZnJpZW5kIG9mIGp1c3QgYSB5ZWFyIHdobyBpcyBjYWxsaW5nIGhpbXNlbGYgdGhlIGtpZHMgZGFkPyBJdCdzIGEgYml0IGNvbmNlcm5pbmcgZm9yIHRoZSBraWRzIHRoYXQgeW91J3ZlIG1vdmVkIGluIHNvIHF1aWNrbHksIGFuZCBub3cgeW91J3JlIGNhbGxpbmcgdGhlbSAieW91ciIga2lkcy4uIApUb28gbXVjaCBmZW1pbmluZSBlbmVyZ3kgd291bGQgYmUgIkJhcmJhcmVsbGFzIGF0IHRoZSBHYXRlIiBhbmQgdGhleSB3b3VsZG4ndCBiZSBrbm9ja2luZyAgIHRoZXknZCBiZSBpbW1lcnNlZCBpbiB0aGVpciBmZWVsaW5ncywgcGFyYWx5emVkIHRoYXQgYW55IGFjdGlvbiBtYXkgb2ZmZW5kIHNvbWVvbmUuIFRoZXkgd291bGQgY2FsbCBhIGdyb3VwIG1lZXRpbmcgdG8gZGlzY3VzcyB0aGluZ3Mgb25jZSBhZ2FpbiwgbG9uZyBhZnRlciBpdCB3YXMgdGltZSB0byBtYWtlIGEgZGVjaXNpb24uIFdpdGggdG9vIG11Y2ggZmVtaW5pbmUgZW5lcmd5IGRlYWxzIGRvbid0IGdldCBjbG9zZWQsIGRlY2lzaW9ucyBkb24ndCBnZXQgbWFkZSwgYW5kIHByb3NwZWN0cyBhcmUgbmV2ZXIgY29udmVydGVkIHRvIGNsaWVudHMuIEFuIG92ZXJhYnVuZGFuY2Ugb2YgZmVtaW5pbmUgZW5lcmd5LCB0aGVyZWZvcmUsIGRvZXNuJ3Qgd29yayBlaXRoZXIuCkEgc2Nobm9vZGxlIGlzIGEgdW5pcXVlIGJyZWVkIHRoYXQgaXMgYSBjcm9zcyBiZXR3ZWVuIGEgc2NobmF1emVyIGFuZCBhIHBvb2RsZS4gSXQgYWRvcmVzIGF0dGVudGlvbiBhbmQgYWZmZWN0aW9uIGZyb20gZXZlcnlvbmUgaW4gdGhlIGZhbWlseSBhbmQgbG92ZXMgam9pbmluZyBhbnkga2luZCBvZiBmYW1pbHkgYWN0aXZpdHkuIEl0IGlzIGZ1bGwgb2YgZW5lcmd5IGFuZCBsb3ZlcyBwbGF5aW5nIGFyb3VuZCB3aXRoIGtpZHMuIEl0IGlzIGFsc28gYSB2ZXJ5IGludGVsbGlnZW50IGRvZyBicmVlZCB0aGF0IGlzIG9mdGVuIGhpcmVkIHRvIGJlY29tZSBhIHRoZXJhcHkgZG9nLiBJbiBvcmRlciB0byBtYWtlIHN1cmUgdGhhdCB0aGUgZG9nIGlzIGhhcHB5IGFuZCBoZWFsdGh5LCBoZXJlIGFyZSBhIGZldyBzaW1wbGUgc3RlcHMgb24gaG93IHRvIHByb3Blcmx5IHRha2UgY2FyZSBvZiBhIHNjaG5vb2RsZSBkb2c6CkkgdG90YWxseSB1bmRlcnN0YW5kIG5vdyB3aHkgcGVvcGxlIHdhaXQgdW50aWwgdGhlIGxhc3QgbWludXRlIHRvIHNlZSBhIGRvY3Rvci4gClNheSBzaGUgZGlkbid0IGdvIGluIHBlcnNvbiwgc2hlIHNlYXJjaGVkIG9ubGluZS4gUmVwdXRhYmxlIG1hc3NhZ2UgcGxhY2VzIGhhdmUgd2Vic2l0ZXMuIFRoZSB3ZWJzaXRlcyBwb3N0IHBob3RvcyBvZiB0aGUgbWFzc2V1cnMgYW5kIHRoZWlyIHNwZWNpYWx0eSAoU3dlZGlzaCwgZGVlcCB0aXNzdWUsIGV0YykgYW5kIHRoZWlyIGFjY3JlZGl0YXRpb24vdHJhaW5pbmcuIApHdWVzdHMgYXJlIGVuY291cmFnZWQgdG8gInRha2UgdG8gdGhlIDYwMCB5ZWFyIG9sZCB3YXRlcnMiIGFuZCBjb25uZWN0IGJvZHkgd2l0aCBzcGlyaXQgYmVmb3JlIGVuam95aW5nIHRoZSBzcGEgd2VsbCBrbm93biBmb3IgaXRzIGludHVpdGl2ZSBoZWFsZXJzIGFuZCBhdXRoZW50aWMgdHJlYXRtZW50cy4gVGhlIG5ldyBFc3NlbnNlIHJlc3RhdXJhbnQgZmVhdHVyZXMgaGVhbHRoaWVyIGdvdXJtZXQgZGluaW5nIHByZXBhcmVkIGJ5IGEgTGUgQ29yZG9uIEJsZXUgdHJhaW5lZCBjaGVmIHdpdGggdGhlIGhlbHAgb2YgYSBQSEQgbnV0cml0aW9uaXN0LiAKRmluZCB0aGUgYXJlYSBvZiB0aGUgZm9vdCB3aGVyZSB0aGVyZSBpcyBhbiBpbmZsYW1tYXRpb24uIFVzZSB5b3VyIGZpbmdlcnMgdG8gbG9jYXRlIHdoZXJlIHRoZSBpbmZsYW1lZCBwYXJ0IG9mIHlvdXIgZm9vdCBpcy4gVGhlIGluZmxhbWVkIGFyZWEgaXMgdXN1YWxseSBhcm91bmQgdGhlIHBhcnQgb2YgeW91ciBmb290IHRoYXQgaXMgYWJvdmUgdGhlIGhlZWwuCiJJZiBpdCdzIGEgZHJ1ZywgW3RyYWZmaWNrZXJzXSBzZWxsIGl0IG9uY2UsIiBzaGUgc2FpZC4gIldoZW4geW91J3JlIGEgcGVyc29uIGFuZCB5b3UncmUgYmVpbmcgdHJhZmZpY2tlZCwgeW91IGFyZSBiZWluZyBzb2xkIG92ZXIgYW5kIG92ZXIgYW5kIG92ZXIgYWdhaW4uIgpJZiBJIHdyb25nLCB0aGlzIGNvdWxkIGJlIGEgaHVnZSBzY2FuZGFsIGZvciB0aGUgREEgcHJvc2VjdXRvciBhbmQgdGhlIGp1ZGdlLgpJdHMgbWFpbiB1c2Ugbm93IGlzIGl0cyBhIHRyYWRpbmcgcGFpciB3aXRoIGFsbCB0aGUgYWx0IGNvaW5zIHRoYXQgcGVvcGxlIHdhbnQuIEV0aGVyZXVtIGlzIGdldHRpbmcgbW9yZSB0cmFkaW5nIHBhaXJzIG5vdyBhbmQgY2xvc2luZyBpbiBvbiBiaXRjb2luIGFzIG9uZSBkYXkgb3RoZXIgY29pbnMgd2lsbCBiZSB0cmFkaW5nIHdpdGggYW55IGNvaW4uIFRoZW4gYml0Y29pbnMgdmFsdWUgd2lsbCBiZSBwcmV0dHkgd29ydGhsZXNzIHdoZW4gdGhhdCBkYXkgY29tZXMuIApOYW1hLCBvciAibmFtZSwiIGlzIHRoZSBvYmplY3QgbmVzcyBvZiBhIGNvZ25pemVkIG9iamVjdC4gSG93IGNvbWUgd2UgKHJlKWNvZ25pemUgYSBkYWNoc2h1bmQgYW5kIGEgVGliZXRhbiBtYXN0aWZmIGJvdGggYXMgImRvZ3MiIHdoaWxlIHRoZXkgdmVyeSBkaWZmZXJlbnQ/IFRoYXQgKHBhcnQgb2YpIHRoZSBuYW1hIG9mICJkb2dzLiIgVGhleSBoYXZlICJ3aGF0IG1ha2VzIGEgZG9nIGEgZG9nLiIKVGhpcyB1bmlxdWUgc3BhIG5vdCBvbmx5IG9mZmVycyB0aGUgc3RhbmRhcmQgd2F5cyB0byBzcG9pbCB5b3Vyc2VsZiwgc3VjaCBhcyBmYWNpYWxzIGFuZCBtYXNzYWdlLCBidXQgaXQgYWxzbyBpbmNvcnBvcmF0ZXMgYW5jaWVudCBBeXVydmVkaWMgdHJlYXRtZW50cyBhbmQgYWN1cHVuY3R1cmUuIEZpbmQgdGluY3R1cmVzIGluIHRoZSBhcG90aGVjYXJ5LiBTdXBwbGVtZW50IHlvdXIgc3BhIHRyZWF0bWVudHMgd2l0aCBDaGluZXNlIGhlcmJhbCBhbmQgbnV0cml0aW9uYWwgY29uc3VsdGF0aW9uLiBHZXQgYSBmb290IGJhdGggaW4gdGhlIFNhbmdoYSBSb29tIHdpdGggYSBncm91cCBvZiBmcmllbmRzLiBMaWUgZG93biBmb3IgYSBTaGlyb2RoYXJhIHRyZWF0bWVudCwgd2l0aCBhIHN0cmVhbSBvZiB3YXJtIGhlcmIgaW5mdXNlZCBvaWwgc2xvd2x5IHBvdXJlZCBpbnRvIHlvdXIgZm9yZWhlYWQgdG8gaW5kdWNlIHBlYWNlLgpBIHBvd2VyZnVsIHByaW1hcnkgd2VhcG9uIHN5c3RlbSB0aGF0IHdvcmtzIGF0IHJhbmdlIChoYXVsZXJzIGRvbiBkb2dmaWdodCkgbGlrZSB0aGUgY3ljbG90cm9uIG9yIHBoYXNlIGJlYW0gaXMgZ29vZCwgYXMgaXMgc29tZSBzaGllbGRpbmcgdXBncmFkZXMuIApYIHJheT8gb3IganVzdCBzZWNvbmQgb3Bpbmlvbj8gbW9yZSBwYWxwYXRpb24uIApGciBkaWUgSW5oYWx0ZSBkZXIgdmVybGlua3RlbiBTZWl0ZW4gaXN0IHN0ZXRzIGRlciBqZXdlaWxpZ2UgQW5iaWV0ZXIgb2RlciBCZXRyZWliZXIgZGVyIFNlaXRlbiB2ZXJhbnR3b3J0bGljaC4gClBva2VyIGluIE1leGljbwpCeSB3aGljaCBJIG1lYW4gaXQncyBhbiBhaWQgZm9yIHRoZSBsYXR0ZXIgdGhhdCBoZWxwcyB0aGVtIGZ1bmN0aW9uIG1vcmUgbGlrZSB0aGUgZm9ybWVyLiAKRG9jaCBzaWUgd2FyZCB2ZXJ3ZXJmbGljaCB1bmQgZGllc2VyIFNjaHVsZCBnaWx0IGVzIG51biBCdWUgenUgdGhyYWdlbiwgZHUgdm9uIEdvdHQgdmVyZGFtbXRlciBOYXJyLiBHZXJlY2h0ZXIgWm9ybiBzb2xsIGJpcyB6dSBkZXluZW0gRXJzdGlja2VuIGJlciBkaXIgYXVzZ2VzY2hpc3NlbiBzZXluLiAKUHJldmVudGlvbiBpbml0aWF0aXZlcyBhcmUgY3JpdGljYWwuIApIZSB3YW50cyBQdXBwZXQgdG8gdmVyaWZ5IHRoZSBzaWduYXR1cmUgYXQgY29tcGlsZSB0aW1lLCBhbmQgb2J2aW91c2x5IHlvdSB3b3VsZCBuZWVkIGFuIGV4dGVybmFsIENBIGFuZCBub3QgUHVwcGV0IGJ1aWx0IGluIENBLiBJIGRvbiBrbm93IGV4YWN0bHkgd2hhdCB0aGF0IHdvdWxkIGxvb2sgbGlrZSwgYnV0IEkgY2FuIGltYWdpbmUgdGhpcyB3b3VsZCBkcmFtYXRpY2FsbHkgaW5jcmVhc2UgdGhlIGxvYWQgb24gdGhlIFB1cHBldCBzZXJ2ZXIuIEhvdyB3b3VsZCB0aGV5IGltcGxlbWVudCB0aGlzIGluIHRoZSBwcm9kdWN0PyBXb3VsZCB0aGVyZSBiZSBwZXJoYXBzIGEgZmlsZSB3aXRoIHRoZSBtZDUgc3VtIG9mIGV2ZXJ5IGZpbGUgaW4gYSBtb2R1bGUsIGFuZCB0aGVuIHRoYXQgbGlzdCB3b3VsZCBiZSBoYXNoZWQgd2l0aCBhIHByaXZhdGUga2V5IHRoZSBkZXZlbG9wZXIgb3ducywgdGhlbiB2ZXJpZmllZCBhZ2FpbnN0IHRoZSBDQT8gQWx0ZXJuYXRpdmVseSBtYXliZSBlYWNoIG1vZHVsZSBpcyBzdG9yZWQgYXMgYSBjb21wcmVzc2VkIGZpbGUgdGhhdCBjYW4gYmUgdmVyaWZpZWQgYW5kIHRoZW4gdW5wYWNrZWQgZm9yIGV2ZXJ5IHJ1bj8KSXQgaXMgYSBjbGFzcyAzIG1pc2RlbWVhbm9yIHVuZGVyIENvbG9yYWRvIHN0YXRlIGxhdyB0byBjaGFyZ2UgbW9uZXkgb3IgdGFrZSB0aGluZ3Mgb2YgdmFsdWUgZm9yIHNleCBmcm9tIGFueW9uZSBvdGhlciB0aGFuIGEgc3BvdXNlLiBQZW9wbGUgd2hvIHNvbGljaXQgYSBwcm9zdGl0dXRlIG9yIGFycmFuZ2UgYSBtZWV0aW5nIGZvciB0aGF0IHB1cnBvc2UgaGF2ZSBhbHNvIGNvbW1pdHRlZCBhIGNsYXNzIDMgbWlzZGVtZWFub3IgdW5kZXIgc3RhdGUgbGF3LiAKSmVvcmdlIHdhcyBraW5kIG9mIGEgaG90aGVhZCBlYXJsaWVyIG9uIGluIGhpcyBjYXJlZXIgYW5kIEkgbmV2ZXIgbGlrZWQgaGltIG11Y2ggYnV0IGhlIGlzIG1hdHVyaW5nIG5vdyBhbmQgSSBoYXZlIGNvbWUgYXJvdW5kLiBJIGZlbHQgdGhlIHNhbWUgYWJvdXQgU2ltb25jZWxsaSBidXQgd2Ugd2lsbCBuZXZlciBrbm93IGlmIGhpcyBhdHRpdHVkZSB3b3VsZCBoYXZlIGltcHJvdmVkLiBSSVAuCldlIGhhZCBzcGVjaWFsIGNpcmN1bXN0YW5jZXMsIHdoaWNoIGxlZCB1cyB0byBwdXJjaGFzZSBzZXZlcmFsIG9mIHRoZW0uLiAKVGhleSB3ZXJlIGVpdGhlciBsaWVkIHRvIHNheWluZyB0aGV5IHdvdWxkIHdvcmsgYXQgaG90ZWxzIGFuZCBwcm9taXNlZCBvdGhlciB0aGluZ3MuIEl0IGZ1Y2tlZCB1cCB0byB0aGluayB0aGF0IG1pbGxpb25zIG9mIHlvdW5nIHdvbWVuIHdvcmxkIHdpZGUgc2FpZCBobW1tIEkganVzdCBnbyBzdWNrIGRpY2sgYW5kIGdldCBiZWF0IHVwIHRvIGxlYXZlIG15IHNoaXR0eSBsaWZlIGhlcmUuIApJZiB0aGF0IHlvdSBkbyBub3Qga25vdyBleGFjdGx5IGp1c3Qgd2hhdCBhIHBva2VyIG1hbmlhYyBpcyB5b3Ugc29vbiB3aWxsIGluIHRoZSBldmVudCB0aGF0IHlvdSBuZWVkIHRvIGJlIGNvbnN0YW50bHkgcGxheWluZyBjYXNoIGdhbWVzLiBFeGFjdGx5IGp1c3Qgd2hhdCBhIHBva2VyIG1hbmlhYyBpcywgaXMgYSBwZXJzb24gdGhhdCdzIGNvbnN0YW50bHkgcGxheWluZyBzdHVwaWQuIApJbml0aWFsbHksIFN0b3V0IGZpbmRzIHRoaXMgY291cnNlICAgd2hpY2ggZm9jdXNlcyBvbiB0aGUgRmVkZXJhbCBSZXNlcnZlIGFuZCBkaXNjb3VudCByYXRlcyAgIHB1cmUgdG9ydHVyZS4gClRoZW4gZHJpdmUgdGhlIHJvdXRlIGZvciB0d28gaG91cnMgc3RyYWlnaHQuIFRoZXkgbGVhdmUgZWFjaCBzdG9wICJsYXRlIiwgYnV0IGJlIGJhY2sgIm9uIHRpbWUiIGF0IHRoZSBlbmQgb2YgdGhlIHJvdXRlLiBUaGVuIHRoZXkgdGFrZSB0aGVpciAxNSsgbWludXRlIGJyZWFrIGFuZCBzdGFydCAibGF0ZSIgYWdhaW4uLiAKQSBzcG9rZXN3b21hbiBmb3IgQXR0b3JuZXkgR2VuZXJhbCBZdmV0dGUgRCBzYWlkIHRoZSBBbGxpYW5jZSBmb3IgR2FtYmxpbmcgUmVmb3JtIGhhZCBub3QgYXBwcm9hY2hlZCB0aGVtIGFib3V0IGxvd2VyZWQgbWF4aW11bSBwb2tpZXMgYmV0cy4KIkl0IGdvZXMgd2l0aG91dCBzYXlpbmcgcmVhbGx5LCB3aXRoIGNhcmVmdWxseSB0YXJnZXRlZCBtYXJrZXRpbmcgd2UgY2FuIGN1dCBkb3duIG9uIHRoZSBleHBlbmRpdHVyZSBhbmQgbWFrZSB0aGUgbW9zdCBvZiBvdXIgbWFya2V0aW5nIGJ1ZGdldCBhbmQgdGFyZ2V0IHRoZSBtYXJrZXQgdGhhdCB3aWxsIGF0dHJhY3QgdGhlIHJpZ2h0IGNsaWVudHMgdG8gdGhlIHJpZ2h0IGludGVybmV0IGNhc2luby4gVGhlIGdvbGRlbiBhZ2UgaGFzIGNvbWUgdG8gYSBzdG9wLCBub3Qgb25seSBmb3IgdXMgb2YgY291cnNlIGJ1dCBmb3IgbWFueSBjb21wYW5pZXMgd2l0aCBzaW1pbGFyIGludGVyZXN0cy4gU2luY2UgdGhpcyBmaW5hbmNpYWwgZG93bnR1cm4gYWZmZWN0cyBldmVyeSBtYXJrZXQgd29ybGR3aWRlIHlvdSBoYXZlIHRvIGJlIHZlcnkgY3JlYXRpdmUgdG8gbWFrZSBzdXJlIHlvdSBnZXQgdGhlIG1vc3Qgb3V0IG9mIHlvdXIgbWFya2V0aW5nIHRoZXNlIGRheXMuIi4gCkl0IHdhcyBhbWF6aW5nLiAKICBhbmQgSSBmb2xsb3dlZCBUb20gaW5zaWRlLi4gCkFmdGVyIGFib3V0IHR3byB3ZWVrcyBvZiB0aGlzLCB3ZSB3ZXJlIGF0IE1lbGlzc2EgaG91c2UgYWdhaW4sIE1lbGlzc2EgYW5kIERhdmUgaGFkIHZhbmlzaGVkLiBBbmQgTGF1cmEgYW5kIEkgd2VyZSBzaXR0aW5nIG9uIHRoZSBjb3VjaC4gQ29udmVyc2F0aW9uIHdhcyBhIGxpdHRsZSBlYXNpZXIgbm93LCBhbmQgd2Ugc3RhcnRlZCBjb21taXNlcmF0aW5nIHdpdGggZWFjaCBvdGhlciBhYm91dCBob3cgd2Ugd2VyZSBhbHdheXMgdGhlIG9uZXMgd2hvIHdlcmUgdGhlIHRoaXJkIHdoZWVscy4gCkV2ZXJ5IHBsYXllciBtdXN0IHBsYWNlIGFuIGFudGUgaW50byB0aGUgY2VudGVyIG9mIHRoZSB0YWJsZSwga25vd24gYXMgdGhlIHBvdCB3aGVyZSBhbGwgb2YgdGhlIHdhZ2VyZWQgbW9uZXkgaXMgc3RvcmVkLiBUaGUgYW50ZSBpcyBhIHRva2VuIGJldCB0aGF0IGFsbCBwbGF5ZXJzIHNob3VsZCBhZ3JlZSBvbiBhcyB0aGUgbWluaW11bSB0byBiZSBkZWFsdCBpbi4gT25jZSB0aGUgYW50ZSBpcyBwbGFjZWQgaW4gdGhlIHBvdCwgZ3VhcmFudGVlaW5nIHRoYXQgc29tZW9uZSB3aWxsIHdpbiBzb21ldGhpbmcgYW5kIHNvbWVvbmUgd2lsbCBsb3NlIHNvbWV0aGluZywgcGxheSByZWFsbHkgYmVnaW5zLi4gCkluIGZhY3QsIGEgcmVwb3J0IGNvbXBhcmluZyB0aGUgb3duZXJzaGlwIGFuZCByZW50YWwgY29zdHMgYnkgdmV0ZXJhbiBob3VzaW5nIGVjb25vbWlzdCBXaWxsIER1bm5pbmcgcmV2ZWFsZWQgdGhhdCB3aGVuIHRoZSBwcmluY2lwYWwgcmVwYXltZW50IGlzIG5ldHRlZCBvdXQsIHRoZSBjb3N0IG9mIG93bmVyc2hpcCBpcyBsZXNzIHRoYW4gcmVudGluZyBpbiBtb3N0IGNvbWJpbmF0aW9ucyBvZiBob3VzaW5nIHR5cGVzIGFuZCBsb2NhdGlvbnMuIEFmdGVyIHRoZSBwcmluY2lwYWwgaXMgc3VidHJhY3RlZCwgaG93ZXZlciwgdGhlIG5ldCBvd25lcnNoaXAgY29zdCBpcyAkNDQ5IGxlc3MgdGhhbiB0aGF0IG9mIHJlbnRpbmcuCkkgc2F5IGZpbGwgdGhlIHRhbmsgZXZlcnkgdGhyZWUgaG91cnMgd2l0aCBudXRyaWVudCBkZW5zZSBmb29kcy4gClRoZSBiZXN0IHdheSB0byBnZW5lcmF0ZSB0aGUgbW9uZXluZWVkZWQgZm9yIG5ldyBpbmZyYXN0cnVjdHVyZSB3YXMgYnkgbWFraW5nIHRoZSBtaW5lcnMgcGF5IGZvcmxpY2VuY2VzLiAoRnVsbCBBbnN3ZXIpLiAKRGVzc3V0b20sIGthbGxhIG5nb24gZnIgbW5uaXNrYSBlbGxlciBhcGE/IERldCByIGludGUgZGV0IGVuYSBlbGxlciBkZXQgYW5kcmEsIGRldCByIGludGUgcyB0YXhvbm9taSBmdW5nZXJhci4gRGUgciBiZGUgb2NoLiBFbiBrYWphIHIgZW4ga2FqYSBvY2ggZGVsIGkgZmFtaWxqZW4ga3JrZmdsYXIuIE1lbiBkZXQgdmFyIGludGUgZGV0IGR1IHNhLiBEdSBzYSBhdHQgZW4ga2FqYSByIGVuIGtya2EsIHZpbGtldCBpbnRlIHIgc2FudCBmcnV0c2F0dCBhdHQgZHUgaW50ZSByIGJla3ZtIG1lZCBhdHQga2FsbGEgYWxsYSBtZWRsZW1tYXIgYXYga3JrZmFtaWxqZW4ga3Jrb3IsIHZpbGtldCBiZXR5ZGVyIGF0dCBkdSBza3VsbGUga2FsbGEgYmxza3Jpa29yLCBrb3JwYXIsIG9jaCBhbmRyYSBmZ2xhciBmciBrcmthciwgb2Nrcy4gVmlsa2V0IGR1IHNhIGF0dCBkdSBpbnRlIGdyLgpDYXAgZXZlbnR1YWxseSBlc2NhcGVzIHdpdGggQnVja3kgdG8gYSBTaWJlcmlhbiBIeWRyYSBiYXNlIHdoZXJlIFplbW8gcGxhbnMgdG8gYXdha2VuIHNvbWUgc3VwZXIgc29sZGllcnMuIE1lYW53aGlsZSwgSXJvbiBNYW4gd2lzZXMgdXAgYW5kIG1hbmFnZXMgdG8gaW5kZXBlbmRlbnRseSBsZWFybiB0aGUgSHlkcmEgSFEncyBsb2NhdGlvbiBmcm9tIGFuIGltcHJpc29uZWQgRmFsY29uLiBUaGUgaGVyb2VzIGNvbWUgdG9nZXRoZXIgZm9yIGEgZ29vZCBvbCcgdGVhbSB1cCAuIG9ubHkgdG8gZGlzY292ZXIgdGhhdCBaZW1vJ3MgcnVzZSBoYWQgbm90aGluZyB0byBkbyB3aXRoIGF3YWtlbmluZyBzb2xkaWVycyBhbmQgZXZlcnl0aGluZyB0byBkbyB3aXRoIHJhdHRpbmcgb3V0IEJ1Y2t5IGFzIHRoZSBvbmUgd2hvIGtpbGxlZCBUb255J3MgcGFyZW50cy4gVGhlIGVudGlyZSBzdXBlciBmZXVkIGlzIHRodXMgY3JhbmtlZCB1cCB0byAxMS4gZ290IGFsbCB1cCBpbiBDYXAncyBidXNpbmVzcy4gRHVkZSBoYWQgbm8gY29udHJvbCBvdmVyIHRoZSBpZGVvbG9naWNhbCBjaGFsbGVuZ2VzIGdvaW5nIG9uIHdpdGhpbiB0aGUgQXZlbmdlcnMsIG9yIHRoZSBvdXRjb21lIG9mIHRob3NlIGJhdHRsZXMgICBtZWFuaW5nIHRoYXQgaGlzIGVudGlyZSBwbGFuIGJvaWxlZCBkb3duIHRvIHNpdHRpbmcgaW4gc29tZSBpY3kgbGFpciBhbmQganVzdCBob3BpbmcgdGhpbmdzIHdvdWxkIGNvaW5jaWRlbnRhbGx5IHdvcmsgaGlzIHdheS4gTHVja3kgZm9yIGhpbSAoYW5kIGZhbnMgb2Ygc3VwZXJoZXJvIHZpb2xlbmNlIGV2ZXJ5d2hlcmUpIHRoYXQgdGhleSBkaWQhClRoZSBvdGhlciB0d28gcGVvcGxlIHdlcmUgY29tcGxldGVseSBzaWxlbnQgYWxtb3N0IGFsbCBvZiB0aGUgaW50ZXJ2aWV3IGFuZCBvbmUgb2YgdGhlbSB3YXMgc2l0dGluZyBzbyBmYXIgYXdheSBmcm9tIHRoZSBvdGhlcnMgSSBjb3VsZCBub3QgbG9vayBhdCBoZXIgY29tZm9ydGFibHkgdG8gaW5jbHVkZSBoZXIuLiAKSSBnb2luZyB0aGUgaW5kdXN0cnkgZXhwZXJpZW5jZSByb3N0ZXIgcm91dGUgbXlzZWxmIGFzIGFuIGFzc2lzdGFudCBhcnQgZGlyZWN0b3IuIEkgYWxyZWFkeSBoYXZlIG92ZXIgMTAwIGRheXMgZnJvbSB0aGlzIHllYXIgYWxvbmUuIEZpZ3VyZSBvbmNlIEkgb24gdGhlIHJvc3RlciwgSSBjYW4ga2VlcCBkb2luZyB3aGF0ZXZlciBjb21lcyBteSB3YXkgdW50aWwgSSBtYWtlIGVub3VnaCBjb25uZWN0aW9ucyBmb3Igc29tZW9uZSB0byBoaXJlIG1lIG9uIGEgdW5pb24gc2hvdy4gCkRlciBHbGNrc3NwaWVsIEFuYmlldGVyIGZocnQgd2VpdGVyIGF1cywgZGFzcyBlciB3ZWl0IGJlciAzNTAgdmVyc2NoaWVkZW5lIENhc2lubyBHYW1lcyBkZXMgcmVub21taWVydGVuIENhc2lubyBTb2Z0d2FyZSB1bmQgR2VydGUgSGVyc3RlbGxlcnMgZnIgc2VpbmUgIEZhbmdlbWVpbmRlIGJlcmVpdGhsdC4gRGFydW50ZXIgc2luZCBzb3dvaGwgZGllIENhc2lubyBLbGFzc2lrZXIgd2llIHp1bSBCZWlzcGllbCBCbGFja2phY2sgdW5kICB3aWUgYXVjaCBtb2Rlcm5lLCBpbm5vdmF0aXZlIFZpZGVvICB1bmQgIFNwaWVsZS4gQXVlcmRlbSBzdGVsbHQgZGFzICBhbGxlbiBOZXVrdW5kZW4gJCA1MDAgaW4gVm91Y2hlcnMgenVtICBiZXJlaXQgdW5kIGJpZXRldCBlaW5lIHZvbGxlIFN0dW5kZSBaZWl0IHJlaW5lbiBDYXNpbm8gR2FtZXMgVmVyZ25nZW5zLCBpbiB3ZWxjaGVyIGRlciBuZXVlICBLdW5kZSBzbyB2aWVsIEdlbGQgd2llIG51ciBtZ2xpY2ggZ2V3aW5uZW4ga2FubiEgRWluZSB3YWhyaGFmdCBndXRlIFBlcnNwZWt0aXZlIS4gCkFuZCBzb21ldGltZXMgdGhlIG10dHMgZG9udCBwb3AgdXAgZXZlbiB0aG91Z2ggeW91IGVudGVyZWQuIApJdCB3YXMgZ3JlYXQgdGhhdCBzaGUgZ290IHRoZSBvcHBvcnR1bml0eSBhbmQgaXQgd2lsbCBjb250aW51ZSB0byBoZWxwIGhlciBncm93IGFuZCBnZXQgYmV0dGVyIGF0IGl0LiBJdCB3YXMgZ29vZCBhbmQgbmVjZXNzYXJ5IGZvciBDYWR1Y2V1cyB0byBiZSB0aGVyZSAob3IgRmpvcmQgbWF5YmUpLiBJdCB3YXMgYWxzbyBuaWNlIG9mIG1hdHQgdG8gYmUgc28gZ3JhY2lvdXMgYWJvdXQgdGhhdCAgIEkgbWVhbiByZWFsbHkgdGhhdCBmdW1ibGluZyBjb3VsZCBoYXZlIGdvbmUgdmVyeSBkaWZmZXJlbnRseS4gClNpbmNlIEkgaGFkIG5vIGlzc3VlIGdldHRpbmcgYW55dGhpbmcgbWFpbGVkIG91dCBoZXJlIHRocm91Z2ggVVNQUyBJIGFtIGdvaW5nIHRvIHN0YXJ0IHNsb3dseSBtYWlsaW5nIHRoZSBtb3JlIHZhbHVhYmxlIGNvaW5zIGhvbWUgdG8gYSB0cnVzdGVkIHJlbGF0aXZlIGFzIG15IHRpbWUgZHJhd3MgY2xvc2VyLiAKSGUgaGFzIHRocmVhdGVuZWQgdG8gZ28gdG8gc29tZW9uZSBlbHNlIGJ1dCBoZSBrbm93cyBJIHdvdWxkIGRpdm9yY2UgaGltIHNvIHF1aWNrLiAKVHVuZ3N0ZW4gZG9lcyBub3QgZW1pdCBhbnkgc2lnbmlmaWNhbnQgYW1vdW50IG9mIG1pZCBpbmZyYXJlZCBvciBmYXIgaW5mcmFyZWQgd2F2ZWxlbmd0aHMgb2YgbGlnaHQuIApPdXJzIGlzIGFib3V0IDMuNSB5ZWFycyBvbGQuIEl0IHNlZXMgYSB0b24gb2YgdXNlLCBsaWtlIDIgc2hvd3MgYSB3ZWVrIG1pbmltdW0sIGFuZCB3ZSB1c2VkIHRoZSBjcmFwIG91dCBvZiB0aGUgbGlicmFyeSBmdW5jdGlvbnMsIHdoaWNoIHJlcXVpcmVzIHNwaW5uaW5nIG9uZSBvZiB0aG9zZSByb3RhcmllcyB0byBuYXZpZ2F0ZSB0aGUgbGlzdC4KSSBwcmVmZXIgdG8gYmUgbGVmdCBhbG9uZSB3aGVuIEkgY2xpbWIgdG9vLCBidXQgdGhlcmUgYXJlIGJldHRlciB0aGluZ3MgdG8gcG9zdCBhYm91dC4gVGFsayB0byB0aGlzIHBlcnNvbiBhbmQgaGVscCB0aGVtIHVuZGVyc3RhbmQgeW91ciBwb2ludCBvZiB2aWV3IGluc3RlYWQgb2YgYnJpbmdpbmcgeW91ciBuZWdhdGl2aXR5IGhlcmUuIApMYWJvciBvbmx5IGhlbGQgc2V2ZW4gb2YgMjUgc2VhdHMgaW4gdGhlIFRhc21hbmlhbiBsb3dlciBob3VzZSBnb2luZyBpbnRvIFNhdHVyZGF5IHBvbGwgYWZ0ZXIgYSBkcnViYmluZyBpbiAyMDE0LCBzbyBuZWVkZWQgdG8gYWxtb3N0IGRvdWJsZSBpdHMgbnVtYmVycyB0byB3aW4gbWFqb3JpdHkgZ292ZXJubWVudC4gCkJ1dCwgYXMgbSBnb2VzIHRvIGluZmluaXR5ICh3aGljaCBtZWFucyB0aGF0IHRoZSBsaW5lIGlzIGJlY29taW5nIHZlcnRpY2FsKSwgdGhpcyBpbnRlcnNlY3Rpb24gcG9pbnQgaXMgZ2V0dGluZyBjbG9zZXIgYW5kIGNsb3NlciB0byB4PTAuIFRoaXMgbWVhbnMgdGhhdCBvbmx5IHdoZW4gdGhlIHRoaXMgbGluZSBpcyB2ZXJ0aWNhbCB0aGF0IHdlIGdldCAxIGludGVyc2VjdGlvbiBwb2ludCwgd2hpY2ggbWVhbnMgdGhhdCBhIHJpZ2h0IGFuZ2xlIGlzIHRoZSBzbWFsbGVzdCBhbmdsZSBpbiB3aGljaCB3ZSBjYW4gYWN0dWFsbHkgZml0IHRoZSBzZW1pY2lyY2xlLi4gCkFuZCBoZXksIGZ1Y2sgdGhlIHBlb3BsZSB3aG8gdXNlZCBpdCBhcyBhIGJhY2t1cCBkcml2ZSwgYnV0IGNvbWUgb24sIHRoZXJlIG11c3QgYmUgYSBtaWRkbGUgcG9pbnQuIApUaGUgZmlyc3QgdHdvIGFyZSBkb3duIGFuZCB0aGUgdGhpcmQgaXMgdXAgZm9yIGV2ZXJ5b25lIHRvIHNlZS4gUGxheWVycyBtdXN0IHRoZW4gZGVjaWRlIGZvciB0aGUgZmlyc3QgdGltZSB3aGV0aGVyIHRoZXkncmUgaW4sIG9yIG91dC4gCkRlemUga2FwamVzIGJsYWNrYmVycnkgdG9yY2ggYWR2ZXJ0ZW50aWUgaXMgaGVsYWFzIHZlcndpamRlcmQuIEtpamsgaGllcm9uZGVyIHZvb3IgdmVyZ2VsaWprYmFyZSBhZHZlcnRlbnRpZXMuClRoZXNlIHRveGlucywgZGVhZCBjZWxscywgY3JhcCBpbiB5b3VyIHN5c3RlbSBiZSBpdCBoZWF2eSBtZXRhbHMsIHZpcnVzZXMsIGNoZW1pY2FscywgYWxsZWdlbnMsIHdoYXRldmVyIGFyZSBub3cgZmx1c2hpbmcgdGhyb3VnaCB5b3VyIGx5bXBoYXRpYyBzeXN0ZW0sIHlvdXIga2lkbmV5cywgeW91ciBsaXZlci4gWW91IG5lZWQgdG8gdGFrZSBhbiBFcHNvbSBzYWx0IGJhdGgsIGl0IGFkZCBNYWduZXNpdW0gdG8geW91ciB0aXJlZCBzb3JlIG11c2NsZXMsIGJ1dCB3aWxsIGFsc28gcHVsbCBvdXQgdG94aW5zLiBEcmluayBMT1RTIG9mIHdhdGVyLCBmbHVzaCB0aGF0IHN0dWZmIG91dC4uIAoyLiBTaGUgcHV0IG9uIGFuIGF1dGhlbnRpYyBzaG93LgpIYWhhaCB0aGF0J3MgYSBwcmV0dHkgZnVubnkgYW5kIGFjY3VyYXRlIGFuYWxvZ3kgb24gaGlzIGRlbWVhbm9yLiAKQ2xhc3BlZCB0aWdodGx5IGluIGhpcyBoYW5kIHdhcyBhIGJvb2tsZXQgaGlzIGRhdWdodGVyIE1pY2hlbGxlIERhdmlzIG1hZGUgaGltLCBhbmQgaW5zaWRlIHRoZSBib29rbGV0IHdhcyBhIGxpc3Qgb2YgYWxsIDkyIEluZGlhbmEgY291bnRpZXMgYW5kIGEgbWFwIG9mIHRoZSBzdGF0ZS4gQXQgdGhlIHRpbWUgb2YgZW50ZXJpbmcgdGhlIERlbGF3YXJlIENvdW50eSBjbGVyayBvZmZpY2UsIDkxIG9mIHRoZSBjb3VudGllcyB3ZXJlIG1hcmtlZCBvZmYgaW4gcGluayBoaWdobGlnaHRlci4KQ2FzaW5vIHBva2VyIGlzIG1vcmUgdGhhbiBqdXN0IGEgZ2FtZSB3aXRoIHN0YWtlcyB0byBwbGF5IGZvci4gSXQgaW52b2x2ZXMgc2tpbGwgYW5kIHNoYXJwbmVzcyBvZiB0aGUgbWluZCwgaW52b2x2aW5nIGV2ZXJ5IGVtb3Rpb25hbCBoaWdoICAgdGhlIGFkcmVuYWxpbmUgcnVzaCBvZiBhIGZvbGQsIHRoZSBleGNpdGVtZW50IG9mIGEgd2luLCBub3QgdG8gbWVudGlvbiB0aGUgZGVlcGVzdCBwaXRzIG9mIGVtb3Rpb25hbCBoZWxsIHdoZW4gYSB0aGUgc3Rha2VzIGFyZSBoaWdoIGFuZCB0aGUgZ2FtZSBpcyBsb3N0LiBUaGlzIGlzIGRlZmluaXRlbHkgc29tZXRoaW5nIHRvIHRyeSBvdXQgaWYgeW91IG5lZWQgc29tZSBhY3Rpb24gb2YgeW91ciBvd24uLiAKRnJlZCBmaW5hbmNpYWwgcHJvYmxlbSBpcyB0byBiYWxhbmNlIHRoZSBjaG9pY2UgdG8gcmV0aXJlIHdpdGggdGhlIGZhY3QgdGhhdCBoZSBjb3VsZCBiZSB3aXRob3V0IGEgam9iLiBNb25leSBmb3IgdGhlIG5lYXJseSBjb21wbGV0ZSBmb3JlaWduIHJlbnRhbCBpcyBhbHJlYWR5IGRlc2lnbmF0ZWQgZm9yIHRoZSBidWlsZGVyLiBIZSBoYXMgJDE0MiwwMDAgY2FzaCBhbmQsIGdpdmVuIGhpcyBmcnVnYWwgd2F5IG9mIGxpZmUsIGhlIHNob3VsZCBiZSBhYmxlIHRvIGFkZCB0byBzYXZpbmdzIGFzIGxvbmcgYXMgaGUgaXMgd29ya2luZy4gVGhlIHVudXN1YWwgdGhpbmcgYWJvdXQgRnJlZCBzaXR1YXRpb24gaXMgaGlzIHZlcnkgcHJlY2lzZSB2aWV3IG9mIHdoYXQgaGUgaGFzIGFuZCB3aGVyZSBoZSB3YW50cyB0byBiZS4gVGhlIGlzc3VlIGlzIGhvdyBoZSB3aWxsIGdldCB0aGVyZS4gY291cGxlIHdobyBhcmUgbGFuZGxvcmRzIHdoaWxlIHJlbnRpbmcgdGhlbXNlbHZlcyByaXNrIHdyZWNraW5nIHRoZWlyIHJldGlyZW1lbnRXaXRoIHNpeCBmaWd1cmUgaW5jb21lIGFuZCBncm93aW5nIHNhdmluZ3MsIHRoaXMgY291cGxlIHN0aWxsIHdvcnJpZXMgdGhlaXIgZnV0dXJlIGlzIGJsZWFrVGhpcyBBbGJlcnRhIGNvdXBsZSBoYXMgYWxsIHRoZWlyIGtpZHMnIGVkdWNhdGlvbiBtb25leSBpbiBjYW5uYWJpcyBzdG9ja3MuIFdoYXQgY291bGQgcG9zc2libHkgZ28gd3Jvbmc/RmFtaWx5IEZpbmFuY2UgYXNrZWQgRGVyZWsgTW9yYW4sIGhlYWQgb2YgU21hcnRlciBGaW5hbmNpYWwgUGxhbm5pbmcgTHRkLiBUaGUgYmFzZWxpbmUgZm9yIGRldmVsb3BpbmcgaGlzIHJldGlyZW1lbnQgcGxhbiBpcyBpbiBoaXMgbnVtYmVycy4gSGlzIHJlc2lkZW5jZSBtYWtlcyB1cCBqdXN0IDI2IHBlciBjZW50IG9mIGhpcyBuZXQgd29ydGguIFRoYXQgZ2l2ZXMgaGltIHJvb20gdG8gbW92ZSBhcm91bmQgdGhlIHBpZWNlcyBvbiBoaXMgZmluYW5jaWFsIG1hcC4KT21lZ2EgMyBQVUZBIChkb2Nvc2FoZXhhZW5vaWMgYWNpZCBbREhBXSwgZWljb3NhcGVudGFlbm9pYyBhY2lkIFtFUEFdLCBhbmQgYWxwaGEgbGlub2xlbmljIGFjaWQpLgpUaGUgdHlwZSBvZiBlZ2dwbGFudCB1c2VkIGluIG15IHJlY2lwZSB0aGlzIHdlZWsgaXMgYSBzbGltIEphcGFuZXNlIHZhcmlldHkgdGhhdCBpcyBhYm91dCB0aGUgc2FtZSBzaXplIGFzIHp1Y2NoaW5pLiAKT24geW91ciBmZWV0IGFsbCBkYXk/IEdpdmUgeW91ciBsZWdzIGFuZCBhY2hpbmcgZmVldCBhIGJyZWFrLiAKSWYgeW91IHN1ZmZlciBmcm9tIGJydXhpc20gb3IgbmlnaHQgdGVldGggZ3JpbmRpbmcgd2hpbGUgc2xlZXBpbmcsIGl0IGlzIHBvc3NpYmxlIHRoYXQgeW91ciB0ZWV0aCBlZGdlcyB3aWxsIGNyYWNrIGFuZCBsb3NlIGl0cyB3aGl0ZSBjb2xvci4gCkluZGVlZ28gU3BhIGluIFJvY2sgSGlsbCB3YXMgYSBkZXN0aW5hdGlvbiBmb3Igd2Vic2l0ZSB1c2VycyBpbiBDaGFybG90dGUuIApEb3VibGVzZWNyZXRwcm9iYXRpbyB1ClR3aW4gRGF5cyBhcmUgYW5udWFsIGdhdGhlcmluZ3MgaW4gd2hpY2ggZ2VuZXRpY2FsbHkgaWRlbnRpY2FsIHNpYmxpbmdzIGdhdGhlciwgaW4gbWF0Y2hpbmcgb3V0Zml0cywgdG8gY2VsZWJyYXRlIHNhbWVuZXNzLgpBbHNvIEtvcmVhbiBwb2xpdGljaWFucyBhbHdheXMgdXNlIEtvcmVhbiBKYXBhbmVzZSByZWxhdGlvbnNoaXAgcHJvYmxlbSB0byBnYWluIHBvcHVsYXJpdHksIHNvIHRoZXkgY29uc3RhbnRseSBtYWtlIGZ1c3MgYWJvdXQgZXZlbiB0byBhIGlzc3VlIHRoYXQgaGFzIGJlZW4gc2V0dGxlZCBsb25nIGFnby4gSW4gY29uY2x1c2lvbiBwb2xpdGljaWFucyBhcmUgbWFraW5nIHRoZSBiaWdnZXN0IHByb2JsZW0uIFRoZXkgYXJlIGdhaW5pbmcgcG9wdWxhcml0eSBieSBtYWtpbmcgZWFjaCBvdGhlciBsb29rIGJhZC4uIApZb3VyIEd1aWRlIHRvIHRoZSAyMDE2IE5ldyBZb3JrIEZpbG0gRmVzdGl2YWxUaG91Z2ggdGhlIGZpbG1zIGFyZSByYWRpY2FsbHkgZGlmZmVyZW50ICAgSGFuc2VuIEx2ZSdzIHVuZm9sZHMgYXMgYSBnZW50bGUgZHJhbWEgd2hpbGUgVmVyaG9ldmVuJ3MgaXMgYSBjb25zdGFudGx5IGJld2lsZGVyaW5nIGNvYWwgYmxhY2sgY29tZWR5ICAgSHVwcGVydCdzIHByb3RhZ29uaXN0cyBzaGFyZSBjZXJ0YWluIGJpb2dyYXBoaWNhbCBkZXRhaWxzLiBCb3RoIE5hdGhhbGllIGFuZCBNaWNobGUgYmVjb21lIG9yIGFyZSBhbHJlYWR5IGRpdm9yY2VkLCBoYXZlIGltcG9zc2libHkgb3ZlcmJlYXJpbmcgbW90aGVycywgYW5kIGJlY29tZSBncmFuZG1vdGhlcnMgZHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhlIGZpbG1zLiAoQWxzbzogQSBjYXQgZmVhdHVyZXMgcHJvbWluZW50bHkgaW4gZWFjaCB3b21hbidzIGxpZmUuKSBCdXQgb24gdG9wIG9mIHRoZXNlIHN1cGVyZmljaWFsIHNpbWlsYXJpdGllcywgSHVwcGVydCBzZWVzIGEgYnJvYWRlciB0aGVtYXRpYyBsaW5rIGJldHdlZW4gdGhlIHR3byBwcm9qZWN0cy4uIApUaGUgSGlkZGVuIENvc3RzIG9mIGEgUG9zc2libGUgVQpKZXNzaWNhanVncyAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpNeSBwb2ludCBpcywgbWVuIGFyZSBvZnRlbiBnZXR0aW5nIHJvbGxlZCBleWVzIHdoZW4gdGhleSBleHByZXNzIHRoZWlyIHNleHVhbCBwcmVmZXJlbmNlLiBCdXQgaGVyZSB0aGUgdGhpbmc7IG1vc3QgcGVvcGxlIGRvIGFzIHdlbGwuIApTYXkgdGhpczogIkhleSBDaW5keSwgeW91IHNlZW0gcHJldHR5IGNvb2wuIEkgbGlrZSB0byBnZXQgdG8ga25vdyB5b3UgYmV0dGVyLiAKVGhpcyBpcyBzb21ldGhpbmcgdGhhdCBpcyBhIG11c3QgaGF2ZSBmb3IgcGVvcGxlIHdobyBhcmUgaW52ZXN0ZWQgaW4gbWFraW5nIHN1cmUgdGhhdCB0aGV5IGFyZSBoYXZpbmcgYSB0ZXJyaWZpYyBnYW1lIGFuZCBwcm92aWRpbmcgb25lIGZvciB0aGVpciBmcmllbmRzIGFuZCBmYW1pbHksIHNvIGdldCBldmVyeW9uZSBpbnZvbHZlZCBhbmQgaGF2ZSBhIGdyZWF0IHRpbWUgYXJvdW5kIHRoaXMgbG92ZWx5IHBpZWNlIG9mIFBva2VyIEVxdWlwbWVudC4uIApBbmdyeUQwOSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxMCBob3VycyBhZ28KT1Agc2hvdWxkIHRlbGwgaGVyIGFuZCBESCBzaG91bGQgYXR0ZW5kIGFuZCBiYWNrIGhlciB1cC4gSXQgYnVzaW5lc3MuIERIIHNob3VsZCBjYWxjdWxhdGUgaG93IG11Y2ggbW9uZXkgeW91IGNvdWxkIGhhdmUgbWFkZSBieSByZW50aW5nIHRvIGEgc3RyYW5nZXIuIApMaWtlIG15IGNoaWxkaG9vZCBtZW1vcmllcyBldGMuSWYgeW91IGhhdmUgYW55IGFwcCB3aGljaCBjYW4gbWFrZSBtZSBoYW5kc29tZSBpbiBhbGwgcGljdHVyZXMgLiBJdCBjb3VsZCBiZSBtb3JlIHVzZWZ1bGwuIDIyIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnb0hlIGNvbnRyb2xzIGxpa2UgOTAlKyBvZiBhbGwgbWVkaWEgaW4gSHVuZ2FyeS4gSXQgZnVsbCBvZiBsaWVzIGFuZCBwcm9wYWdhbmRhLiBQZW9wbGUgbm90IHNwZWFraW5nIEVuZ2xpc2ggZG9uIGhhdmUgYW55IG90aGVyIG5ld3Mgc291cmNlcy4gCkhlIGZvcm1lZCBoaXMgb3duIGJ1c2luZXNzLCBKLiAKSXQgc2VlbWVkIHRvIGJlIGFib3V0IGFuIGhvdXIgYXdheSBzbyB3ZSBob3BwZWQgaW4gdGhlIEF2ZW8gYW5kIGhlYWRlZCB0aGVyZS4gClNvbWVvbmUgY2FsbGVkIGluIGNsYWltaW5nIHRoZSBwaG9uZXMgd2VyZW4gd29ya2luZywgc28gSSBzdGFydGVkIGRvaW5nIGJhc2ljIHRyb3VibGVzaG9vdGluZywgYW5kIHR1cm5zIG91dCB0aGUgaW50ZXJuZXQgd2FzIGNvbXBsZXRlbHkgZG93bi4gCjIuIEZyYW5rZW5XaGVhdCAoaXMgbm90IHRoZSB3aGVhdCBvZiB0aGUgQmlibGUpICAgYSBzY2llbnRpZmljYWxseSBlbmdpbmVlcmVkIGZvb2QgcHJvZHVjdCBkZXZlbG9wZWQgaW4gdGhlIGxhc3QgNTAgeWVhcnMuIApSZWxhdGVkIEFydGljbGVzNTc3OTogQSBZZWFyIHRvIEVtYnJhY2UgTmV3IFdpbmVza2lucyBhbmQgUmVqZWN0IEZhbHNlIFdpbmVza2luc0lmIFlvdSBXYW50IE5ldyBXaW5lLCBZb3UgTmVlZCBOZXcgV2luZXNraW5zCkRlbGl2ZXIgdG8geW91ciAuIExvb2sgaW5zaWRlIHRoaXMgYm9vay4gCldoYXQgYmVpbmcgaW4gQ2hpbmEgdGF1Z2h0IG1lIGlzIHRoYXQgdGhlIHJpc2Ugb2YgQ2hpbmEgaXMgZm9yIENoaW5lc2UgcGVvcGxlIG9ubHkuIE1vc3QgZm9yZWlnbiBjb21wYW5pZXMgYXJlbnQgYWxsb3dlZCB0byBzdWNjZWVkIHRoZXJlLiBUaGV5IGFyZSBlbnRpY2VkIHdpdGggImNoZWFwIGxhYm9yIGJpZyBtYXJrZXQiIGFuZCBhcmUgcmVkIHRhcGVkIHRvIGRlYXRoIG9uY2UgdXNlZnVsIHRlY2ggYW5kIHRlY2huaXF1ZXMgaGF2ZSBiZWVuIGV4dHJhY3RlZC4gSW5kaXZpZHVhbHMgY2FudCBpbW1pZ3JhdGUgYW5kIGludGVncmF0ZSB0aGVyZS4gQSBmZXcgbWVnYSBmb3JlaWduIGNvbmdsb21lcmF0ZXMgYXJlIGFsbG93ZWQgdG8gbWFrZSBtb25leSB0aGVyZS4gQSBmZXcgMSVlciB0YWxlbnRzIGNhbiBiZWNvbWUgcGVybWFuZW50IHJlc2lkZW50cyhub3QgY2l0aXplbnMpLiBFdmVyeW9uZSBlbHNlIGp1c3QgZ2V0cyBjcnVtYnMuIFRoZXJlcyBqdXN0IG5vIHBvaW50IGluIGFsaWduaW5nIHdpdGggdGhlbSBvbiBhIHBoaWxvc29waGljYWwgbGV2ZWwuIE1heWJlIHNvbWUgZWRnZWxvcmRzIGxvb2sgYXQgdGhlIHdlc3QgYW5kIHNheSAid2FhaCBjb2xvbmlhbGlzbSB5b3VyIGFuY2VzdG9ycyB3ZXJlIG1lYW4gd2FhYWgiIGJ1dCB1bHRpbWF0ZWx5IFdFU1QgSVMgQkVTVC4KSWYgeW91IHdvcmsgdG8gaGFyZCBvdmVyIHRoZSBraWRuZXlzIGl0IHdpbGwgaHVydC5Ob3RoaW5nIHJlYWxseSBsaWZlIHRocmVhdGVuaW5nLlNvIHdhdGNoIHRoZWlyIHBvc3R1cmUsIGlmIHlvdSBub3RpY2UgYW55IHNxdWlybWluZywgYnJlYXRoIGhvbGRpbmcgb3Igc2hhcnAgaW50YWtlcyBvZiBicmVhdGggKGp1c3QgdGhpbmsgYWJvdXQgYWxsIHRoZSB0aGluZ3MgeW91IGRvIHdoZW4gc29tZXRoaW5nIGh1cnRzIHlvdSkgYWRqdXN0IHlvdXIgcHJlc3N1cmUuIApMZSBkaXNwb3NpdGlmIGVuICBiYXNzaW4gIHF1ZSBub3VzIGF2aW9ucyBkaiB2b3F1IG1vbnRlIGVuIHB1aXNzYW5jZSBhdmVjIGRlcyBvcHJhdGlvbnMgY291cHMgZGUgcG9pbmdzIGNvbW1lIGNlbGxlIHF1aSBhIGV1IGxpZXUgbGUgOSBub3ZlbWJyZSBqb3VyIGRlIG5vdHJlIGFzc2VtYmxlIGducmFsZSAobWFpcyBuJ3kgdm95ZXogYXVjdW4gbGllbiAhKS4gTCdlbnNlbWJsZSBkdSBiYXNzaW4gYSB0IGludmVzdGkgYXZlYyBsJ2FpZGUgZGUgZGV1eCBjb21wYWduaWVzIGRlIENSUywgc29pdCAxOCBjYW1pb25zLCBkZSBDaGFwZWxsZSAgQmFyYnMgZW4gcGFzc2FudCBwYXIgbGUgc3VkIGRlIGxhIEdvdXR0ZSBkJ29yIGV0IGxlIHF1YXJ0aWVyIGRlIENodGVhdSByb3VnZSwgdW5lIG9wcmF0aW9uIGZvcnRlLgpBZ2FpbiwgaGUgaXMgY29udmljdGVkIGFuZCBzZW50IHRvIGRlYXRoIHJvdy4gSGUgYWdhaW4gZWF0cyB0aGUgMTIgcG91bmRzIG9mIGJhbmFuYXMsIGFuZCBsbyBhbmQgYmVob2xkLCB0aGUgZWxlY3RyaWNpdHkgZG9lcyBub3QgaGFybSBoaW0uIFRoaXMgdGltZSB0aGUgZXhlY3V0aW9uZXIgY2xlYW5zIHRoZSBjb250YWN0cyBhbmQgbWFrZXMgaGltIHNpdCBpbiBhIGJ1Y2tldCBvZiB3YXRlcjsgaGUgdHJpZXMgZXZlcnl0aGluZywgYnV0IHRoZSBjb25kdWN0b3Igd29uIGRpZS4gCkl0IGZ1bm55IGhvdyB0aGlzIGNvbW11bml0eSB3YXMgcmlkaWN1bGluZyBFVEggd2hlbiBnYXMgZmVlcyBza3lyb2NrZXRlZCwgd2hpbGUgdGhpcyBpcyBqdXN0IGFzIHByb2JsZW1hdGljIGltby4gClRoYXQgc2FpZCwgUkFJRCA1IGlzIGEgaHVnZSBnYW1ibGUgd2l0aG91dCBhIGhvdCBzcGFyZSAoYSBkaXNrIG91dHNpZGUgb2YgdGhlIGdyb3VwIHRoYXQganVzdCBpZGxlcyB1bnRpbCBhIGdyb3VwIGRpc2sgZmFpbHMsIHRoZW4gZ2V0cyBhZGRlZCB0byB0aGUgZ3JvdXAgYW5kIGhhcyBhbGwgdGhlIGRlYWQgZGlzayBzdHVmZiB3cml0dGVuIGJhY2sgdG8gaXQsIGNhbGN1bGF0ZWQgb2ZmIHRoZSBwYXJpdHkgYml0cyBvZiB0aGUgcmVtYWluaW5nIGRpc2tzKS4gCiJJdCdzIG5vdCBsaWtlIHRoaXMgaXMgYW4gYWNjaWRlbnQuIEknbSBzdXJlLCBubyBtYXR0ZXIgd2hhdCB5b3VyIGdlbmV0aWNzLCBldmVyeW9uZSBjYW4gYmUgb3V0IG9mIHNoYXBlLiBBbmQgSSBkb24ndCB3YW50IHRvIGJlIG9uZSBvZiB0aG9zZSBhY3RyZXNzZXMgd2hvIHNheXMsICdZZWFoLCBJIGVhdCBjaGVlc2VidXJnZXJzIGFsbCB0aGUgdGltZS4nIEJlY2F1c2UgSSBkb24ndC4gCkpvc2VwaCBHb3Jkb24gTGV2aXR0IHNpbmdpbmcgIkdvb2QgVmlicmF0aW9ucyIgd2lsbCBoYXZlIHlvdSByb2xsaW5nIG9uIHRoZSBmbG9vci4gCkl0IHNlZW1zIGxpa2UgYSBzaWduIG9mIGFycmVzdGVkIGRldmVsb3BtZW50LiAKVHJhaW4gNCBvZiB0aGVtIHVwIHRvIDcwIGFuZCBsZWF2ZSB0aGUgNXRoIG9uZSBhdCA2OSBETyBOT1QgYnJpbmcgZmlnaHRlciA1IHRvIDcwISEgaWYgeW91IGZvcmdldCBhYm91dCB0aGUgNjkgb25lIGFuZCBicmluZyBoaW0vaGVyIHVwIHRvIDcwLCB5b3UgZW50ZXIgdGhlIG1pbmkgYnJhY2tldCBhbmQgaXQgd2lsbCBGIHlvdSB1cCBvbiB0aGUgYXJlbmEgYW5kIHRoZW4geW91IG5lZWQgdG8gYm9vdCBoaW0gYW5kIHRyYWluIHNvbWVvbmUgYWxsIG92ZXIgYWdhaW4uCk1lbW9yaXplIHRoZSAxMCBiYXNpYyA1IGNhcmQgaGFuZHMgYW5kIHRoZWlyIHJhbmtpbmcgKGhpZ2hlc3QgdG8gbG93ZXN0KS4gVGhpcyBpcyBjcnVjaWFsIHRvIGJlaW5nIHN1Y2Nlc3NmdWwgYXQgYW55IHBva2VyIGdhbWUuIFRvIHN0YXJ0IGZhbWlsaWFyaXppbmcgeW91cnNlbGYgd2l0aCB0aGUgZGlmZmVyZW50IGhhbmRzLCBwcmludCBvdXQgYSAiY2hlYXQgc2hlZXQiIGFuZCBzdHVkeSBpdC4gS25vd2luZyB0aGUgZGlmZmVyZW50IGhhbmRzIHdpbGwgaGVscCB5b3UgZGV0ZXJtaW5lIHdoZXRoZXIgeW91ciBoYW5kIGlzIGdvb2QgZW5vdWdoIHRvIGJldCBvbiwgb3Igd2hldGhlciBpdCdzIHRpbWUgdG8gYmx1ZmYgb3IgZm9sZDoKU29tZSBnZXQgZHJ1bmtlciB0aGFuIHRoZXkgc2hvdWxkIGJlLCBzb21lIGFyZSBsb3VkZXIgdGhhbiB0aGV5IHNob3VsZCBiZSwgYnV0IGFsbCBvZiB0aGVtIHdlcmUgZ3JlYXQgY29tcGFueS4gCkhlIGlzbiBhIGRlZmVuc2l2ZSBmaWdodGVyIG9yIGFuIG9mZmVuc2l2ZSBmaWdodGVyLCBoZSBhIGNvbXBsZXRlIGJveGVyLiAKIjkwMjEwIiBjbyBzdGFyIElhbiBaaWVyaW5nIHBhaWQgdHJpYnV0ZSB0byBoaXMgY28gc3RhciBvbiBUd2l0dGVyICwgd2hlcmUgZmFucyBhbmQgY2VsZWJyaXRpZXMgc2hhcmVkIHRoZWlyIG1lbW9yaWVzIG9mIFBlcnJ5IGFuZCBtb3VybmVkIGhpbSAuIApDIHBvdXIgY2VsYSwgdHJzIGNoZXIgbGVjdGV1ciwgcXVlIGplIHQgIHBlbnNlciBwYXIgdG9pIG1tZSwgZGUgbGEgbW1lIGZhb24gcXVlIGplIHBlbnNlIHBhciBtb2kgbW1lLiAKNSBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClRoZSBtYWpvcml0eSB3aG8gdm90ZWQgZm9yIEJyZXhpdCB3YXMgYmVjYXVzZSBvZiBpbW1pZ3JhdGlvbiBhbmQgcmVmdWdlZXMsIHRoZSByZWZ1Z2VlIGNyaXNpcyBkaWQgbm90IGhlbHAgaW4gdGhhdCB2b3RlIGF0IGFsbCwgdGhlIHJlZnVnZWUgY3Jpc2lzIHdhcyBtb3N0IGxpa2VseSByZXNwb25zaWJsZSBmb3IgTGVhdmUgYmVpbmcgMiUgaGlnaGVyIHRoYW4gUmVtYWluLgpJIGxpa2UgdG8gd2F0Y2ggbXkgb3Bwb25lbnRzIGF0IHRoZSBzdGFydCwgc2VlIHdobyBhcmUgdGhlIGFnZ3Jlc3NpdmUgcGxheWVycywgcmVhZCB0aGVpciBib2R5IGxhbmd1YWdlLCB3b3JrIHRoZW0gb3V0IGFuZCB0aGVuIEkgY2FuIHVzZSBhbGwgb2YgdGhpcyBpbmZvcm1hdGlvbiBmb3IgbXkgYWR2YW50YWdlLiInQSBtb3RvciBmb3IgZXZlcnkgZGF5IG9mIHRoZSB3ZWVrJyAgIHRoZSBleHRyYW9yZGluYXJ5IGNhciBjb2xsZWN0aW9uIG9mIGEgbG90dG8gbWlsbGlvbmFpcmVQYXRyaWNrLCBhbiBhcmVhIG1hbmFnZXIgZm9yIGEgY2xlYW5pbmcgY29tcGFueSwgdG9vayB1cCBwb2tlciBhZnRlciBidXlpbmcgYSBob3cgdG8gcGxheSBwb2tlciBkaXNjLlJlaWduaW5nIFVLIFB1YiBQb2tlciBDaGFtcGlvbiBQYXRyaWNrIEJ1Y2hhbmFuIGZyb20gQ2hlbG1zbGV5IFdvb2Qgd2hvIGlzIG9mZiB0byBMYXMgVmVnYXMgdG8gZGVmZW5kIGhpcyBjcm93bi5Gb3VyIG90aGVyIHBsYXllcnMgZnJvbSBCaXJtaW5naGFtIGhhdmUgYWxzbyBxdWFsaWZpZWQgZm9yIHRoZSBldmVudCBhbmQgd2lsbCBmbHkgb3V0IHdpdGggUGF0cmljayBmb3IgdGhlIFZFR0FTMTAwIHRvdXJuYW1lbnQuVGhlc2UgaW5jbHVkZSBNaWNoYWVsIFBoZWxhbiBvZiBCZWdnYXJzIEJ1c2ggcHViLCBMZWUgQ29sbGlucyBvZiBKb3VybmV5cyBFbmQgcHViLCBSaWNoYXJkIEh1Z2hlcyBvZiBNYXJzdG9uIEdyZWVuIFRhdmVybiBwdWIgYW5kIFNoYXVuIFJvYmVydHMgb2YgT2FrdHJlZSBDbG9zZSBwdWIuTm93IGluIGl0cyB0d2VsZnRoIHllYXIsIFZFR0FTMTAwLCBvcmdhbmlzZWQgYnkgUmVkdG9vdGggUG9rZXIsIGlzIHRoZSBVSydzIGxhcmdlc3QgbGl2ZSBwdWIgcG9rZXIgbGVhZ3VlIHdpdGggbW9yZSB0aGFuIDEsMDAwIHZlbnVlcyBhbmQgb3ZlciAyMDAsMDAwIHBsYXllcnMgcmVnaXN0ZXJlZCB3aXRoIHRoZSBsZWFndWUgc2luY2UgaXQgd2FzIGxhdW5jaGVkLlRoZXJlIGlzIGEgcHJpemUgcG9vbCB3aXRoIGZvciB0aGUgd2lubmVyLkluY2x1ZGVkIGluIHRoZSB3aW5uZXIncyBwcml6ZSBpcyBhIHNwb25zb3JzaGlwIGRlYWwgZm9yIHRoZSB5ZWFyIGFoZWFkLk9uZSBwbGF5ZXIgd2lsbCBhbHNvIHJlY2VpdmUgdGhlIHRpdGxlIG9mIFBsYXllciBvZiBZZWFyIGR1cmluZyB0aGUgdmlzaXQgdG8gTGFzIFZlZ2FzLkV2ZXJ5IEdyZWdncyBiYWtlcnkgaW4gQmlybWluZ2hhbSByYW5rZWQgYW5kIHJhdGVkIG9uIFRyaXBBZHZpc29yIGFuZCBHb29nbGVUaGlzIHllYXIgdGhlIFZFR0FTMTAwIHBsYXllcnMgYW5kIGd1ZXN0cyB3aWxsIGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIHRha2UgcGFydCBpbiBhbiBhZGRpdGlvbmFsIHRvdXJuYW1lbnQgd2l0aCBvdmVyICQ2MDAwIHdvcnRoIG9mIHByaXplcyB3aGljaCBpbmNsdWRlcyBhIHJldHVybiB0cmlwIHRvIExhcyBWZWdhcyBhbmQgYSBzZWF0IGludG8gYSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgZXZlbnQgaW4gMjAxOS5NYXJ0aW4gR3JlZW4sIG1hbmFnaW5nIGRpcmVjdG9yIG9mIFJlZHRvb3RoIFBva2VyLCBzYWlkOiAiV2UgYXJlIGRlbGlnaHRlZCB0byBmaW5hbGx5IHNlY3VyZSBvdXIgMTAwIHBsYXllcnMgZm9yIHRoZSB0cmlwIHRvIExhcyBWZWdhcy4gQWxsIGhhdmUgZG9uZSByZW1hcmthYmx5IHdlbGwgdG8gcmVhY2ggdGhpcyBzdGFnZSwgcHJvZ3Jlc3NpbmcgdGhyb3VnaCBmcm9tIHRoZWlyIGxvY2FsIHB1YnMgdG8gbnVtZXJvdXMgcmVnaW9uYWwgYW5kIG5hdGlvbmFsIHRvdXJuYW1lbnRzLiJUaGVzZSBhcmUgdGhlIGJlc3QgcHViIHBva2VyIHBsYXllcnMgaW4gdGhlIFVLIHNvIHRoZXkgZnVsbHkgZGVzZXJ2ZSB0aGlzIG9uY2UgaW4gYSBsaWZldGltZSB0cmlwIHRvIEFtZXJpY2EuIkJpcm1pbmdoYW0gd2VhdGhlckdhbGVzIGJhdHRlciBCaXJtaW5naGFtIHNwYXJraW5nIHRyYXZlbCBjaGFvcyBhcyBNZXQgT2ZmaWNlIGlzc3VlcyBTTk9XIHdlYXRoZXIgd2FybmluZ1RyZWVzIHdlcmUga25vY2tlZCBkb3duIGluIEhhZ2xleSBSb2FkLCBCaXJtaW5naGFtLCBhcyBhIHdhdmUgb2Ygc2xlZXQgYmF0dGVyZWQgdGhlIGNpdHkgYWZ0ZXIgbWlkZGF5IG9uIFN1bmRheVN0b3VyYnJpZGdlUnlhbiBQYXNzZXkncyBmYW1pbHkgc3BlYWsgb3V0ICAgJ3RoZXJlIG5lZWRzIHRvIGJlIG1vcmUgcHJvdGVjdGlvbiBhbmQgcmlnaHRzIGZvciB0aGUgdmljdGltcyBhbmQgdGhlaXIgZmFtaWxpZXMnUnlhbiBQYXNzZXkgd2FzIHN0YWJiZWQgYXQgQ2hpY2FnbydzIGluIFN0b3VyYnJpZGdlLiAKUGluZyBwb25nIHRhYmxlcyBKYW1lcyBkZSBXdWxmJ3MgY3VzdG9taXNhYmxlLCBwb3VyZWQgY29uY3JldGUgYW5kIHN0ZWVsIHdvcmtzIG9mIGFydCBhbHJlYWR5IGdyYWNlIHRoZSBob21lcyBvZiB0YXN0ZW1ha2VycyBpbmNsdWRpbmcgSm9uYXRoYW4gQWRsZXIgYW5kIGF0aGxldGVzIHN1Y2ggYXMgQW5kcmUgQWdhc3NpLiBIaXMgc2xlZWsgYW5kIHNjdWxwdHVyYWwgdGFrZSBvbiB0aGUgcGluZyBwb25nIHRhYmxlIGNvbWVzIGluIHN0YW5kYXJkIHNpemVzIChmcm9tICQ5LDAxNikgaW4gc2hhZGVzIG9mIGdyZXkgYW5kIHdoaXRlLCBhbmQgYXMgYSB1bmlxdWUgcGllY2Ugc2NhbGVkIHRvIGZpdCBhbnkgc3BhY2UgYW5kIHN0eWxlZCB0byBhbnkgZGVzaWduIHNjaGVtZS4gRmluZCBvdXQgbW9yZSBhYm91dCBKYW1lcyBkZSBXdWxmJ3MgZGVzaWduc0JhY2tnYW1tb24gc2V0cyBCcml0aXNoIGRlc2lnbmVyIEFsZXhhbmRyYSBMbGV3ZWxseW4ncyBiZXNwb2tlIGJhY2tnYW1tb24gc2V0cyAoZnJvbSA4LDYwMCkgY2FuIGhhdmUgcGxheWluZyBwaWVjZXMgbWFkZSBmcm9tIHNlbWlwcmVjaW91cyBzdG9uZXMsIGNvbG91cmVkIGdsYXNzLCBtaXJyb3Igb3IgZGljaHJvaWMgZ2xhc3MgZW5jYXNlZCBpbiBwb2xpc2hlZCBicmFzcywgd2hpbGUgdGhlIHNoYWtlcnMgYXJlLCBtb3N0IG9mdGVuLCBvZiB0YW5uZWQgZWJvbnkgb3Igcm9zZXdvb2QuIFRoZSBjb21taXNzaW9uaW5nIHByb2Nlc3Mgc3RhcnRzIHdpdGggYSBkaXNjdXNzaW9uIGFib3V0IGN1c3RvbWVycycgdGFzdGVzLCBhbmQgZXZlbiB0aGVpciBtZW1vcmllcywgYW5kIHRoZSByZXN1bHRpbmcgcGxheWluZyBzdXJmYWNlIChwcmludGVkIG9yIHBhaW50ZWQpIGNhbiBpbmNsdWRlIGF1dG9iaW9ncmFwaGljYWwgZWxlbWVudHMgc3VjaCBhcyBjaGlsZHJlbidzIG5hbWVzIGFuZCBiaXJ0aGRhdGVzIG9uIGVhY2ggb2YgdGhlIGVsb25nYXRlZCBwb2ludHMuIEZvciB0aGUgb3V0c2lkZSBvZiB0aGUgY2FzZSwgTGxld2VsbHluIGNhbiBzb3VyY2UgYW55IHR5cGUgb2Ygd29vZCAoYnV0IHByZWRvbWluYW50bHkgdXNlcyBNYWNhc3NhciBlYm9ueSwgbWFzYSBiaXJjaCwgYnVyciB3YWxudXQgYW5kIHJvc2V3b29kKSwgYW5kIGNhbiBhZGQgZnVydGhlciBwZXJzb25hbGlzYXRpb24gdGhyb3VnaCBtb3RpZnMsIGluaXRpYWxzIG9yIGVuZ3JhdmVkIHRleHQuIEJFQVRSSUNFIEFJRElOLgpJIGtub3cgdGhlcmUgaXMgYSBjb21tb24gaWRlb2xvZ3kgd2l0aGluIHRoZSBwb2tlciBjb21tdW5pdHkgb2YsIGFueXRoaW5nIHRoYXQgSSBjYW4gZG8gdGhhdCB3aW5zIG1lIG1vbmV5LCB0aGF0IGlzIHdpdGhpbiB0aGUgcnVsZXMvbGF3LCBpcyBmYWlyIGdhbWUgYW5kIGFsbG93YWJsZSBpbiBvcmRlciB0byBmdXJ0aGVyIG15c2VsZi9nYWluIGVkZ2UuCkkgaGFkIHN1cGVyIGJhZCBwYWluIGluIG15IHNpZGUuIApMZXQgbWUga25vdyBpZiB5b3UgaGF2ZSBhbnkgbW9yZSBxdWVzdGlvbnMuIApXZWxsLCB5b3UgaGF2ZSBhIGxvdCB0byBsZWFybiBhYm91dCBwb2tlIGNhcmRzIGFzIHRoZXJlIGFyZSB0aG91c2FuZHMgb2YgdmFyaWV0aWVzIGF2YWlsYWJsZS4gVGhlIG1vcmUgeW91IHJlYWQsIHRoZSBtb3JlIHlvdSBzZWUsIHRoZSBtb3JlIHlvdSBsZWFybi4gClRoaXJ0eSB0aHJlZSBwbGF5ZXJzIGZyb20gMTcgY291bnRyaWVzIHdlcmUgYXNrZWQgdG8gcGxheSBhIDMsMDAwIGhhbmQgbWF0Y2ggb3ZlciBhIHBlcmlvZCBvZiBmb3VyIHdlZWtzLiAKQXJlIHRoZXNlIGluc2VjdHMgdGhlIGltYWdpbmFyeSBzdHVmZiBvZiByaHltZSwgb3Igc2hvdWxkIHdlIHdhdGNoIG91dCBmb3IgLiAKVGhpcyBtZW50YWxpdHkgdGhhdCBjb3Jwb3JhdGlvbnMgd2l0aCBiaWxsaW9ucyBvZiBkb2xsYXJzIGluIHJldmVudWUgc2hvdWxkbiBoYXZlIHRvIHBheSB0aGVpciBmYWlyIHNoYXJlIGJlY2F1c2Ugb2YgcGFzdCBsb3NzZXMKQWxsIDBMIChwcmUgbGF3IGFuZCBzdHVkZW50cyBjb25zaWRlcmluZyBsYXcgc2Nob29sKSBwb3N0cyBtdXN0IGJlIGNvbnRhaW5lZCB3aXRoaW4gdGhlIHdlZWtseSBzdGlja2llZCAwTCB0aHJlYWRzLiAwTCBwb3N0cyB3aWxsIGJlIHJlbW92ZWQgYW5kIHJlZGlyZWN0ZWQgdG8gdGhhdCB0aHJlYWQuIChOb3RpY2U6IE5vIHRyYW5zZmVyIHF1ZXN0aW9ucyBmcm9tIDBMcy4gUGxlYXNlIHNlZSB0aGUgRkFRLikKT24gU2VwdGVtYmVyIDEwLCAxOTgzLCBoZSB3YXMgdW5pdGVkIGluIG1hcnJpYWdlIHRvIEpvIEhlbnJ5IGF0IE5vcnRoIFBsYXR0ZS4gCigxMCkgTXVzY2xlIHNwaW5kbGUgcG9wdWxhdGlvbnMgYXJlIHN0cmF0ZWdpY2FsbHkgYXJyYW5nZWQgdG8gc3Vic2VydmUgYSBwYXJ0aWN1bGFyIGZ1bmN0aW9uLiBbUmVjYWxsLCB1cHBlciBjZXJ2aWNhbCBhZmZlcmVudHMgcHJvamVjdCB0byB0aGUgaW5mZXJpb3Igb2xpdmUgYW5kIHRvIHRoZSBjZXJlYmVsbHVtXQpNZWFud2hpbGUsIHdlIHByZXBwaW5nIHRoZSBDbTcgb2YgdGhlIG5leHQgYmFyIGJ5IHRyaXRvbmUgc3ViYmluZyBhbiBGTSBkeWFkIHBsYXllZCBhdCB0aGUgc2FtZSB0aW1lIGFzIHRoZSBFIGNob3JkIGluIHRoZSByb290Li4gClRoaXMgd2F5IHRoZW4gaWYgb25lIHBvbGljZSBzdGF0aW9uIG5lZWRlZCB0byBjb21tdW5pY2F0aW9uIHRoZSBkZXNjcmlwdGlvbiBvZiBhIHN1c3BlY3QgdG8gYW5vdGhlciBqdXJpc2RpY3Rpb24gMTAwIG1pbGVzIGF3YXkgdGhleSB3b3VsZCBzaW1wbHkgdXNlIGEgc2VyaWVzIG9mIG51bWJlcnMuIApUaGUgaGlzdG9yeSBvZiBtb2Rlcm5pc20gaXMgc3VmZnVzZWQgd2l0aCBjdWx0cyBvZiBhcnRpc3RpYyBlZ28gYW5kIHJhbXBhbnQgIm9yaWdpbmFsaXR5IiAgIGVzcGVjaWFsbHkgU3VycmVhbGlzbSwgdGhlIG1vdmVtZW50IE1hZ3JpdHRlIHdhcyBsaW5rZWQgdG8uIApBbSBJIGp1c3QgZ3Vlc3NpbmcgYXQgdGhpcz8gTm9wZSwgSSdtIGFmcmFpZCBub3QuClRoaXMgZm9vdGFnZSBpcyBmcm9tIEhvbmcgS29uZy4gCjMwSyAnTGFtYm9yZ2hpbmknIG9mIG1hc3NhZ2UgY2hhaXJzCklmIGl0cyBzb21ldGhpbmcgbW9yZSBmcmFnaWxlIHRoZXkgd2lsbCBqdXN0IHJvdCBhd2F5LiAKS2luZGEgZGVwZW5kcyBvbiB0aGUgbGlnaHRpbmcgZG9uIHlvdSB0aGluaz8gSSB3b3VsZCB0aGluayB0aGUgcmVmbGVjdGl2ZSBuYXR1cmUgb2YgdGhlIGdsaXR0ZXIgbWlnaHQgYmUgZWFzeSB0byBzcG90LiBJcyB0aGUgcGFpbnQgaW4gYmFuayBhbnRpIHRoZWZ0IHBhY2tzIHBob3NwaG9yZXNjZW50IG9yIHJlZmxlY3RpdmU/IEFyZSB5b3Ugc3VyZSBpdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIHRoZSBmYWN0IHRoYXQgd2l0aCBnbGl0dGVyIHlvdSBjYW4ganVzdCBqdW1wIGluIGEgcG9uZCBvciBmb3VudGFpbiwgZGlwIHVuZGVyIGEgZ2FyZGVuIGhvc2UsIG9yIGp1c3Qgcm9sbCB5b3VyIHdpbmRvd3MgZG93biB3aGlsZSBtYWtpbmcgYSBnZXRhd2F5LCB0byBtYWtlIGEgZGVjZW50IGltcGFjdCBvbiBnZXR0aW5nIGNsZWFuIGZhc3Q/IFlvdSBzdXJlIGl0IGhhcyBub3RoaW5nIHRvIGRvIHdpdGggdGhlIGZhY3QgdGhhdCBnbGl0dGVyIHdvbiBzdGFpbiB0aGUgbW9uZXksIGNsb3RoZXMgb3Igc2tpbj8uIApNb250Z29tZXJ5IENvdW50eSBoYXMgYSBIdW1hbiBSZWxhdGlvbnMgQ29tbWlzc2lvbiB0aGF0IGhhcyBwb2xpdGljYWwgcG93ZXIuIApPdXIgd29yayB0b2dldGhlciBzdGFydHMgYnkgbWFwcGluZyBvdXQgYW4gaW5kaXZpZHVhbGl6ZWQgcGxhbiBvZiBzdXBwb3J0IHdoaWNoIHJlY29nbml6ZXMgbm90IG9ubHkgdGhlIGltcGFjdHMgb2YgcGFpbiBidXQgaG93IG91ciBleHBlcmllbmNlIG9mIGh1cnQgYWZmZWN0IG91ciByZWxhdGlvbnNoaXAgbmF2aWdhdGlvbi4gClNtYWxsLCBkaW5neSBhbmQgc3BhcnNlbHkgZGVjb3JhdGVkLCBpdCBoYXMganVzdCBhIHNpbmdsZSBiZWQgYW5kIGEgc2hvd2VyLiBUaGVyZSBpcyBhIHdpbmRvdyBhbmQgYSBtaXJyb3IgYnV0IHRoZSBtaXJyb3IgaXMgYXQgdGhlIGhlYWQgb2YgdGhlIGJlZCwgd2hpY2ggbGFyZ2VseSBtYWtlcyBpdCBpcnJlbGV2YW50LiBUYWtlIG5vdGUsIG1hc3NhZ2Ugc2hvcHMgdGhlIG1pcnJvciBzaG91bGQgYmUgYXQgdGhlIHNpZGUgb2YgdGhlIGJlZCEgU3RpbGwsIGl0IHdhcyBjbGVhbiBhbmQgdGhlIGJlZCB3YXMgY29tZm9ydGFibGUgZW5vdWdoLiAKVGhlIExpYmVyYWwgRGVtb2NyYXRzIHNhaWQgVGhlcmVzYSBNYXkgaGFkICJwdWxsZWQgb2ZmIHdoYXQgc2VlbWVkIHRoZSBpbXBvc3NpYmxlIiBieSB1bml0aW5nIHRoZSB0d28gb3JnYW5pc2F0aW9ucyAgIHdobyBiZXR3ZWVuIHRoZW0gcmVwcmVzZW50IG1pbGxpb25zIG9mIHdvcmtlcnMgYW5kIDE5MCwwMDAgYnVzaW5lc3Nlcy4KVGhleSB3ZXJlIGEga2lsbGVyIGNvdXBsZSB0aGF0IHRoYW5rZnVsbHkgZ290IGNhdWdodC4gT25lIG9mIHRoZWlyIHZpY3RpbXMgZXNjYXBlZCBzZW1pIG5ha2VkIGFuZCByYW4gZm9yIGhlbHAuIFRoZXkgYXJlIHdvcnRoIGFuIGludGVybmV0IGRlZXAgZGl2ZSB0b28uIApCdXQgbm8gdG9vIG1hbnkgcGVvcGxlIHRoZXJlLiBJbmRpYW4gZm9vZCBjYW4gYmUgZm91bmQgaW4gS2F0YSBCZWFjaCByZXN0YXVyYW50cy4wIHZvdGVzTm8gdGltZSBhdCBhbGwuIElmIHlvdSBhc2sgdGhlIHBlb3BsZSBpbiB0aGUgbG9iYnkgb2YgS2F0YXRoYW5pIHRoZXkgd2lsbCBnaXZlIHlvdSBhIGJ1Z2d5IHJpZGUgb3ZlciB0aGVyZS4gCldlIG1heSBuZXZlciBoYXZlIHRoZSByZWxhdGlvbnNoaXAgdG8gc3VwcG9ydCB0aGUgY2xvc2VuZXNzIHlvdSB3YW50LiBJIGFtIGNvbWZvcnRhYmxlIHdpdGggb3VyIHJlbGF0aW9uc2hpcCBhcyBpdCBpcy4gSWYgeW91IHB1c2ggZm9yIHNvbWV0aGluZyBJIGFtIG5vdCByZWFkeSBmb3IsIHlvdSB3aWxsIHB1c2ggbWUgYXdheS4gClNvIGhlIGZvdW5kIG91dCB0aGUgZmxhdCBiZXNpZGUgdGhlIGpld2VsbGVycyB3YXMgZW1wdHkgYW5kIGhlIGhpZCB0aGVyZS4gRm9yIDIgd2Vla3MgaGUgdHJpZ2dlcmVkIHRoZSBhbGFybSBvbiBwdXJwb3NlIHNldmVyYWwgdGltZXMgYSBuaWdodCwgbWFzc2l2ZSBoZWFkYWNoZSBmb3IgdGhlIHBvbGljZSBhbmQgdGhlIGJ1c2luZXNzLCB3ZSB0dXJuZWQgdXAgdG8gc2VlIG5vdGhpbmcgdGhlcmUsIG5vdGhpbmcgb24gY2FtZXJhcywgdGhvdWdodCBpdCB3YXMganVzdCBhIGZsdWtlIHNvIHRoZSBqZXdlbGxlcnMgdHVybmVkIG9mZiB0aGUgYWxhcm0gc3lzdGVtIGFuZCBzYWlkIHRoZXkgd2FpdCB1bnRpbCB0aGUgbW9ybmluZyB0byBnZXQgYSBuZXcgb25lIGluc3RhbGxlZCBvciB0aGF0IG9uZSByZSB3aXJlZCBiZWNhdXNlIHNvbWV0aGluZyB3YXNuIHJpZ2h0Li4gCk5vbmUgb2YgdGhlIHJlbmV3YWJsZSBzb3VyY2VzIGNhbiBwcm92aWRlIGVub3VnaCBlbmVyZ3kgZm9yIHRoYXQgbWFueSBwZW9wbGUgaW4gc3VjaCBjbG9zZSBxdWFydGVycy5BbHNvIENoaW5hIGlzIGxvd2VyaW5nIGhpcyBwb3NpdGlvbiBvZiB3b3JsZCcgbWFudWZhY3R1cmluZywgYmVjYXVzZSBpdCBjYW5ub3Qga2VlcCB0aGlzIHBvc2l0aW9uOiBDaGluZXNlIGJlY29tZSByaWNoZXIsIGRlbWFuZCBiZXR0ZXIgd29yayBjb25kaXRpb25zLCBhbmQgdGhlIGNvdW50cnkgaXMgYmVjb21pbmcgYSBkZXZlbG9wZWQgY291bnRyeS4gRGV2ZWxvcGVkIGNvdW50cmllcyBhcmUgbm90IG1hbnVmYWN0dXJlcnMgb2YgdGhlIHdvcmxkIGJlY2F1c2UgaXQncyBzaW1wbHkgdG9vIGV4cGVuc2l2ZS4gCkkgNDUgYW5kIHN0aWxsIGRvbiBoYXZlIGl0IGFsbCBmaWd1cmVkIG91dC4gSSBoYXZlIHJlIGludmVudnRlZCBteXNlbGYgbWFueSB0aW1lcy4gCkZsb3AgYW5kIHR1cm4gcGxheSBhcmUgZ3JlYXQgaWYgd2UgYXJlIHBsYXlpbmcgb25saW5lLiAKVGhlIEhpc3RvcmljIEdyZWVuIFZpbGxhZ2UgaXMgYSBsaXR0bGUgZGlmZmljdWx0IHRvIGZpbmQsIGJ1dCB3b3J0aCB0aGUgZWZmb3J0IGZvciBhbnlvbmUgd2hvJ2QgbGlrZSB0byBzZWUgYSBuZXQgemVybyBlbmVyZ3kgY29tcGxleCwgdGhhdCBpcywgYnVpbGRpbmdzIHRoYXQgcHJvZHVjZSBtb3JlIGVuZXJneSB0aGFuIHRoZXkgY29uc3VtZS4gVGhlIGJyYWluY2hpbGQgb2YgQnJpdGlzaCBvcmdhbmljIGJhYnkgZm9vZCBlbnRyZXByZW5ldXJzIE1pa2UgYW5kIExpenppZSBWYW5uIFRocmFzaGVyLCBpdCdzIGEgY29sbGVjdGlvbiBvZiBmaXZlIGhpc3RvcmljIGFuZCBuZXcgYnVpbGRpbmdzLCBob3VzaW5nIHNtYWxsIGxvY2FsIGJ1c2luZXNzZXMsIHRoYXQgdXNlIHNvbGFyIHBvd2VyIGFuZCBjb2xsZWN0IHJhaW53YXRlciBpbiBjaXN0ZXJucyB1bmRlciB0aGUgcGFya2luZyBsb3QuIEdvIGFyb3VuZCB0aGUgYmFjayBvZiB0aGUgZ2VuZXJhbCBzdG9yZSB0byBzZWUgYSBtYXAsIHBlcmZvcm1hbmNlIGNoYXJ0cywgYW5kIGluZm9ncmFwaGljcyBhYm91dCBob3cgZW5lcmd5IGFuZCB3YXRlciBhcmUgY29sbGVjdGVkIGFuZCBzYXZlZC4gCkkgZmVsdCBudW1iIGZvciBhIHdlZWsgYW5kIHRoZW4gYWZ0ZXIgdGhlIGZ1bmVyYWwgd2FzIHJlYWR5IHRvIG1vdmUgb24uIApHb2FsIGZvciBiZWluZyBvbiB0aGUgc2hvdyB3YXMgcHJpbWFyaWx5IFBSLCBNci4gU3Byb2F0IHNhaWQuIApQYWRkb2NrLCB3aG8ga2lsbGVkIGhpbXNlbGYsIGFjdGVkIGFsb25lLCBwb2xpY2UgaGF2ZSBzYWlkLlRoZSBob3N0IHNhaWQgdGhlcmUgd2FzIG9uZSBpbmNpZGVudCB5ZWFycyBhZ28gaW4gd2hpY2ggUGFkZG9jayB5ZWxsZWQgYXQgaGltIG92ZXIgbGF0ZSBsdWdnYWdlLCBzb21ldGhpbmcgdGhlIGhvc3QgdGhvdWdodCBwZWN1bGlhci4gClRoZSBjb21wYW55IHN0YXJ0cyBzZW5kaW5nIHRoZSBtZXNzYWdlIGR1cmluZyB0aGUgaGlyaW5nIHByb2Nlc3MsIHNheXMgQ0VPIFBhdWwgUHVyY2VsbC4gCkkgZmVlbCBsaWtlIHlvdSB0cnlpbmcgdG8gbWFrZSBhIHBvaW50IHRoYXQgQmFzcXVpYXQgd2FzIG5vIGxvbmdlciBmYW1vdXMgb3IgdmFsdWVkIGJ5IHRoZSBhcnQgd29ybGQgYXQgdGhlIGVuZCBvZiBoaXMgbGlmZSwgYW5kIHRoYXQgaXMgc2ltcGx5IHVudHJ1ZS4gVW5kb3VidGVkbHksIHRoZSBhcnQgd29ybGQgd2FzIG5vdCBhcyBmcmVuemllZCBhcyB0aGV5IHdlcmUgd2hlbiBoZSBjYW1lIG9udG8gdGhlIHNjZW5lIChwYXJ0aWN1bGFybHkgaW4gTmV3IFlvcmspIGJ1dCBoZSB3YXMgc3RpbGwgaGlnaGx5IHJlZ2FyZGVkIGFuZCBnZXR0aW5nIG11bHRpcGxlIG1ham9yIGdhbGxlcnkgc2hvd3MgYSB5ZWFyLi4gClRoZXkgYWxzbyBtYWRlIHRoZW0gd2F5IHRvbyB2YWx1YWJsZS4gVGhleSBsaXRlcmFsbHkgd2VyZSBtZWFudCB0byBiZSBhIHJhcmUgRSBQZWVuIHNoaXAgdGhhdCBjcmVhdGVkIGNvbmZsaWN0LiAKSWYgdGhlIHBsYXllcnMgYm90aCBoYXZlIHR3byBwYWlyLCB0aGUgaGlnaGVzdCBwYWlyIHdpbGwgd2luIHJlZ2FyZGxlc3Mgb2YgdGhlIGtpY2tlci4gQWNjb3JkaW5nIHRvIHlvdXIgcXVlc3Rpb24gSSdtIGd1ZXNzaW5nIHRoYXQgb25lIG9mIHRoZSB0d28gcGFpciBoYW5kcyBpcyBuaW5lcyBhbmQgdGhlIG90aGVyIGlzIHNpeGVzLCBpbiB0aGlzIGNhc2UgdGhlIEFjZSBpcyBpcnJlbGV2YW50IGJlY2F1c2UgdGhlIG5pbmVzIGJlYXQgdGhlIHNpeGVzLiAoRnVsbCBBbnN3ZXIpLiAKTm8gbWF0dGVyIHdoYXQgeW91ciBidWRnZXQgZ28gZ2FnYSBmb3Igc25ha2Vza2luIHRoaXMgYXV0dW1uIGFuZCBzaG9wIHNraXJ0cyBieSBIaWxsaWVyIEJhcnRsZXksIEdlc3R1eiwgWmFyYSBvciBPYXNpcywgd2l0aCBwcmljZXMgc3RhcnRpbmcgZnJvbSBvbmx5IDM2IS4gClRoaXMgaXMgeW91ciBvcGluaW9uLCBhbmQgeW91IHZvaWNpbmcgaXQgaW4gc3VjaCBhIHdheSB0aGF0IGltcGxpZXMgdGhhdCBhbnkgb3RoZXIgcmVhc29uIHRvIGdldCBhIHRhdHRvbyBpcyBpbnZhbGlkLiBBbHNvLCB5b3Ugbm90IGJlaW5nIHNob3V0ZWQgZG93biwgeW91IGJlaW5nIGRpc2FncmVlZCB3aXRoLiAKSXQgaW52b2x2ZXMgYmVpbmcgaGlnaGx5IHNlbGVjdGl2ZSB3aXRoIHRoZSBzdGFydGluZyBoYW5kIHNlbGVjdGlvbiBhbmQgYmV0dGluZyBhbmQgcmFpc2luZyB2ZXJ5IGFnZ3Jlc3NpdmVseS4gCldhcyBhY3R1YWxseSBpbiB0aGUgc3R1ZGlvIHRoYXQgZGF5IGFuZCBJIGNvdWxkbiBmb2N1cyBiZWNhdXNlIEkgd2FzIHNvIHVwc2V0LCBzbyBJIG1hZGUgdGhlIHZpZGVvLCBidXQgSSBkZWNpZGVkIG5vdCB0byBwb3N0IGl0IGJlY2F1c2UgSSB3YXMgc2NhcmVkIGl0IHdvdWxkIGhhdmUgYmFja2xhc2guIEJ1dCB3aGVuIEkgd29rZSB1cCB0aGUgbmV4dCBkYXksIEkgc3RpbGwgZmVsdCByZWFsbHkgYnVtbWVkIGFib3V0IHRoaXMgYW5kIHdhcyBsaWtlLCBoYXZlIHRvIHBvc3QgdGhpcyB2aWRlby4gCjExLjAwICAgMTMuMzBXZSdyZSBNaW5kIGluIEV4ZXRlciBhbmQgRWFzdCBEZXZvbiwgb2ZmZXJpbmcgYSBzdXBwb3J0aXZlLCBzYWZlIGFuZCByZXNwb25zaXZlIHNwYWNlIHRvIGNyZWF0ZSB5b3VyIG93biB3ZWxsYmVpbmcuIFdlIGFyZSBoZXJlIGZvciB5b3Ugd2l0aCB0b29scyBvZiByZWNvdmVyeS4KVGlyZWQ/U3RyZXNzZWQ/VHJvdWJsZSBzbGVlcGluZz9Mb29raW5nIGZvciBhIGZhc3QsIGVmZmVjdGl2ZSB3YXkgdG8gbGlmdCB5b3VyIHNwaXJpdHMgYW5kIGJvb3N0IHlvdXIgZW5lcmd5IGxldmVscz8KSXRzIHNob2NrIHdhdmUgd2VudCBmYXIgZnVydGhlciwgY3JhY2tpbmcgYW5kIGRhbWFnaW5nIGluZnJhc3RydWN0dXJlIGVxdWl2YWxlbnQgdG8gYSBtYWpvciBlYXJ0aHF1YWtlLiAKQW5vdGhlciB0aGluZyBpZiBzaGUgb2xkIGFuZCBjYW4gY2FyZSBmb3IgaGVyc2VsZi4gCkkgc2F5aW5nIHRoYXQsIGZyb20gdGhlIG1vbWVudCB5b3VyIGNoaWxkcmVuIGFyZSBib3JuLCBldmVyeSBkZWNpc2lvbiB5b3UgbWFrZSBpbiBsaWZlIHNob3VsZCBhbHNvIGhhdmUgdGhlbSBpbiBtaW5kLiAKVGhlIENvdXJ0IGRlY2xpbmVkIHRvIGlzc3VlIGFuIGFkdmlzb3J5IG9waW5pb24gb24gdGhlIHF1ZXN0aW9uIHRoYXQgcHV0IHRoaXMgYWxsIGluIHBsYXkgd2hldGhlciB0aGUgb3JpZ2luYWwgYmFsbG90IHRpdGxlIHdhcyBzdWZmaWNpZW50LiBUaGUgQ291cnQgc2FpZCBpbiBhIHNlcGFyYXRlIG9waW5pb24gdGhhdCB0aGF0IGlzc3VlIGJlY2FtZSBtb290IHdoZW4gTWFydGluIGNlcnRpZmllZCB0aGUgYW1lbmRlZCBwcm9wb3NhbC4KVGhlIFZpbGxlbmV1dmUgcHJvamVjdCBpcyBqdXN0IGJvbnVzIHN0dWZmLkkgaGFwcHkgdG8gdGFrZSBxdWVzdGlvbnMgYW5kIEkgY2FuIHNheSBhcyBtdWNoIGFzIEkgY2FuLCBidXQgSSBjYW4gc2F5IHRvbyBtdWNoIGZvciBvYnZpb3VzIHJlYXNvbnMuIApUaGUgR3Vlc3QgR2F1Z2UgaXMgbm90IGEgc2NpZW50aWZpYyBtZWFzdXJlbWVudCBhbmQgc2hvdWxkIG9ubHkgYmUgcmVhZCBhcyBhbiBlc3RpbWF0ZSBvZiB3ZWVrZW5kIGNyb3dkcyBpbiBMYXMgVmVnYXMuIEFuIGluZGljYXRpb24gb2YgInZlcnkgc2xvdyIgY29ycmVzcG9uZHMgd2l0aCB0aGUgbG93ZXN0IHR5cGljYWwgb2NjdXBhbmN5IHJhdGUgZm9yIHJvb21zIGluIExhcyBWZWdhcy4KU2tpcHBpbmcgZGlubmVyIGFuZCBldmVuaW5nIGhvdXJzIG5pZ2h0IGFmdGVyIG5pZ2h0IGlzIGV4dHJlbWVseSBpcnJlc3BvbnNpYmxlIHNwb3VzYWwgYmVoYXZpb3IuIApTb21ldGhpbmcgbWFueSBwbGF5ZXJzIGZvcmdldCwgaG93ZXZlciwgaXMgdGhhdCBtZXJlbHkgZ2V0dGluZyBhIHBhaXIgb2YgSmFja3Mgd29uJ3QgcmVhbGx5IHdpbiB5b3UgYW55IG1vbmV5LCBleGNlcHQgdGhlIGV4YWN0IG1vbmV5IHRoYXQgeW91IHB1dCBpbnRvIHRoZSBtYWNoaW5lIGluaXRpYWxseS4gU28gdGhlIHJlYWwgZnVuIHN0YXJ0cyB3aGVuIHlvdSBzdGFydCBnZXR0aW5nIGhpZ2hlciByYW5raW5nIGhhbmRzIS4gCkluIHRoZSB3YWtlIG9mIHRoZSAkMS4zIGJpbGxpb24gZGVhbCBmb3IgQ2xlbWVudGlhLCB0aGVzZSBmaXZlIGJpbyBwaGFybWEgc3RvY2tzIGNvdWxkIGJlIHRoZSBuZXh0IHRvIHRha2Ugb2ZmV2h5IHRoaXMgcG9ydGZvbGlvIG1hbmFnZXIgc2VlcyB0aGUgcmV0dXJuIG9mIGdvbGQgZ2xvcnkgZGF5cyAgIGFuZCBpdCdzIG5vdCBqdXN0IG1lZ2FtZXJnZXIgbWFuaWFCaWxsIEMgNjksIG90aGVyIG5ldyBydWxlcyBzZW5kaW5nIGEgY2hpbGwgdGhyb3VnaG91dCB0aGUgaW52ZXN0bWVudCBjb21tdW5pdHk6IEFuZHJldyBTY2hlZXJBcyBzb29uIGFzIENhbmFkYSByZXN0cmljdGlvbnMgd2VyZSBsb29zZW5lZCBpbiBKYW51YXJ5LCBhIHdhdmUgb2YgbmV3IHByb2R1Y3RzLCBiZWdpbm5pbmcgd2l0aCBEZXNqYXJkaW5zIEdsb2JhbCBNYW5hZ2VtZW50IEluYy4gTGlxdWlkIGFsdCBFVEYsIGJlZ2FuIHRvIHRoZSBoaXQgdGhlIG1hcmtldC4gCkRlc3BpdGUgaGlzIG92ZXJ3aGVsbWluZyBzdWNjZXNzIGZvbGxvd2luZyB0aGUgY3JlYXRpb24gb2YgVGFyemFuLCBoZSBzdGlsbCByZWNlaXZlZCBwdWJsaWNhdGlvbiBzZXQgYmFja3MuIApEaW9ueXNpYW43OSB1CkRvd2RsZSB0b2xkIFJvbWlnIGhlIGRpZCBub3QgYmVsaWV2ZSB0aGUgc3RhdGUgaGFkIGVub3VnaCBldmlkZW5jZSBvbiB0aGUgc2Vjb25kIGNoYXJnZS4uIApZb3UgbWF5IHRoaW5rIHRoYXQgcG9rZXIgaXMgcG9rZXIsIGJ1dCB0aGVyZSBpcyBhIGJld2lsZGVyaW5nIGFycmF5IG9mIGZvcm1hdHMgdGhlc2UgZGF5cy4gVGhlbiBhZGQgZXZlbnRzIHJlc3RyaWN0ZWQgdG8gTGFkaWVzLCBTZW5pb3JzLCBldmVuIFN1cGVyIFNlbmlvcnMsIDkgaGFuZGVkLCA4IGhhbmRlZCwgNiBoYW5kZWQsIDQgaGFuZGVkLCBIZWFkcyBVcCAoMiBoYW5kZWQpLCBhbmQgeW91IGdldCB0aGUgcGljdHVyZS4gClRoZW4gb24gdGhlIHJpdmVyIHRoZSB0aGlyZCBjYXJkIG9mIGEgc3VpdCBoaXRzIG1ha2luZyBhIGZsdXNoIHBvc3NpYmxlLiBBZnRlciB5b3UgYmV0IGFnYWluLCB0aGUgcGVyc29uIHdobyBoYWQgYmVlbiBjYWxsaW5nIHJhaXNlcyB5b3UuIApFdmVyeXRoaW5nIGZyb20gYSBrbmVlamVyayByZWFjdGlvbiB0byBub3Qgd2FudGluZyB0byBhY2NlcHQga2luZG5lc3MvY2hhcml0eSB0byBmZWVsaW5nIGxpa2UgSSBoYXZlIHRvIGxpZSB0byBwZW9wbGUgY29uc3RhbnRseSBhYm91dCBteSBsaWZlIGJlY2F1c2UgaXQgd2FzIHN1Y2ggYSBwYXJ0IG9mIG15IGNoaWxkaG9vZC4gCk1vc3QgaW1wb3J0YW50LCB0aGlzIGVwaXNvZGUgc2hvd3MgaG93IG11Y2ggc3BhY2UgaXMgYXZhaWxhYmxlIGZvciB0aGUgbWFjaGluZXMgb2YgbWFjaGluYXRpb25zIGFuZCBzbGFuZGVyIGluIG91ciBjb3VudHJ5IHRvZGF5IGFuZCBob3cgdGhlIHNjb3BlIG9mIHNlcmlvdXMgYW5kIGNyaXRpY2FsIGRlYmF0ZSBvbiBjZW50cmFsIGlzc3VlcyBoYXMgYmVlbiByZWR1Y2VkLiBNaW5kbGVzcyBwcm9qZWN0aW9uIG9mIGluZGl2aWR1YWxzIGFuZCBodXJsaW5nIG11ZCBhdCBvcHBvbmVudHMgdGhyb3VnaCBhIG5ldHdvcmsgb2Ygc29jaWFsLCBwcmludCBhbmQgZWxlY3Ryb25pYyBtZWRpYSBwcm94aWVzIGFuZCBjcm9uaWVzIGlzIHNpbmdsZWhhbmRlZGx5IHJlc3BvbnNpYmxlIGZvciB0aGlzIGRpc2JhbGFuY2UuClNtYWxsIGNoZWFwIGdhbWVzIGRvbiBqdXN0IGZpdCBteSBjb25zdHJhaW5lZCB0aW1lIGFuZCBhdHRlbnRpb24gYXMgYW4gYWR1bHQgYW5kIGNhcmV0YWtlci4gVGhleSBicmluZyBtZSBiYWNrIHRvIGEgcGVyc29uYWwgImdvb2Qgb2xkIGRheXMiIHdoZXJlIEkgd2FzIGluIGEgY29tbXVuaXR5IG9mIHNtYWxsIHRpbWUgcGVvcGxlLCBtYWtpbmcgc21hbGwgZXhwZXJpbWVudGFsIGdhbWVzLiBJdCB3YXMgdGhlIEZsYXNoIGVyYSwgdGhlIEdhbWUgTWFrZXIgNyBlcmEuIEhhbGYgdGhlIHNoaXQgd2FzIHByb3RvdHlwZWQgaW4gYSBnYW1lIGphbS4gQW5kIHRoYXQgc21hbGwgaW52ZXN0bWVudCB0byBtYWtlIGFuZCBwbGF5LCBtZWFudCBubyBpbmRpdmlkdWFsIGdhbWUgaGFkIHRvIHN1Y2NlZWQsIGhhZCB0byBwbGF5IGl0IHNhZmUgc28gdGhhdCB0aG91c2FuZHMgb2YgcGVvcGxlIHdvdWxkIGhhdmUgYSBqb2IgaW4gdHdvIHllYXJzLiBZb3UgY291bGQgdHJ5IGV2ZXJ5dGhpbmcsIGVzcGVjaWFsbHkgc3R1cGlkIHNoaXQsIGFuZCBpZiBpdCB3b3JrZWQsIGl0IHdvcmtlZC4KVGhlIHNlY29uZCB0aW1lLCBJdCB3YXMgYmVjYXVzZSBJIGhhdmUgYSBuZWdhdGl2ZSB2aWV3IHRvd2FyZHMgaWxsZWdhbCBhc3lsdW0gc2Vla2VycyBwbHVzICJhYnVzZSIuCk9uZSB0aGluZyBhYm91dCBnZW5lc3RlYWxlcnMgYmVpbmcgImltbXVuZSIgdG8gd2FycCBjb3JydXB0aW9uIHRob3VnaC4gVGhlIFdhcnAgZG9lc24gY2FyZSBhYm91dCAic2NpZW5jZSIuIEdlbmV0aWNzLCBwaHlzaWNhbCB0cmFpdHMsIG1hdGVyaWFscywgZXRjLiBUaGUgb25seSBleGNlcHRpb24gd2UgZXZlciBzZWVuIGlzIHRoZSBCbGFjayBTdG9uZSB1c2VkIGluIHRoZSBDYWRpYW4gUHlsb25zIGFuZCB0aGUgQmxhY2sgU3RvbmUgRm9ydHJlc3Nlcy4gQmxhY2sgU3RvbmUgaXNuIGltbXVuZSwgYnV0IGl0IGNhbiBiZSB1c2VkIHRvIGFtcGxpZnkgb3Igc3VwcHJlc3MgdGhlIHdhcnAuIEl0IG5vdCBpbXBvc3NpYmxlIHRoYXQgR2VuZXN0ZWFsZXJzL1R5cmFuaWRzIGhhdmUgYSBzaW1pbGFyIHByb3BlcnR5LCBidXQgSSBwZXJzb25hbGx5IGRvbiB0aGluayB0aGF0IHRoZSBjYXNlLgpIaWMgdXllIG9sbWFkaW0gYW1hIHNlbmVsZXJkaXIgb2t1cnVtIGVrc2l5aS4gSGVwIGhvc3VtYSBnaXRtaXN0aXIgZWtzaS4gSGVyIGdvcnVzdGVuIGluc2FuIHZhciB2ZSBiYXlhIHNhZ2xhbSB5YXphcmxhcmRhIHZhci4gCktpbWpvZTc1ICAwIHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvCkphY29iIGNhbWUgY2xvc2UgdG8gYSBXb3JsZCBQb2tlciBUb3VyIHRpdGxlIGp1c3QgbW9udGhzIGJlZm9yZSBoaXMgVVNQQyB2aWN0b3J5LCBmaW5pc2hpbmcgc2Vjb25kIHRvIFZpY3RvciBSYW1kaW4gKEdQSSBOby4gCldpciBiaWV0ZW4gYWJlciB0cm90emRlbSBuaWNodCBqZWRlbSBCcmdlciB0Z2xpY2gga29zdGVubG9zIGRhcyBFc3NlbiBkZXIgYmVzdGVuIFJlc3RhdXJhbnRzIGFuICh3YXMgZGFubiBkdXJjaCBkaWUgU3RldWVybiBkZXIgRnJldW5kZSB2b24gQnV0dGVyYnJvdCB1bmQgTXNsaSBmaW5hbnppZXJ0IHdyZGUpLiAKQmVmb3JlIHRoZSBkYXduIG9mIHRoZSAyMHRoIGNlbnR1cnksIHRoZXJlIHdhcyBhIDMwMCB5ZWFyIHBlcmlvZCB3aGVuIHRoZXJlIHdlcmUgbm9uZSwgaGUgc2FpZC4gWmVyby4KSXQncyBhIGxpdHRsZSBzdHJhbmdlIHRoYXQgbWVkaWNpbmVzIGxpa2UgTnlRdWlsIGFuZCBEYXlRdWlsIGFkdmVydGlzZSB0aGVtc2VsdmVzIGFzICJjb2xkIGZsdSByZWxpZWYuIiBCdXQgd2UncmUgbm90IGNvbXBsYWluaW5nLiAKRGlyaWdlciB1biBwYXlzIGNvcnJlY3RlbWVudCwgYyBzYXZvaXIgZmFpcmUgZGVzIGNvbmNlc3Npb25zLCBvdWkuIApIZSB0ZWNobmljYWxseSBuZXZlciB3YXMgYSB2aWxsYWluLCBhbmQgSSBsaWtlIHRoYXQgaWRlYSwgb2YgYSB3b3JsZCB3aGVyZSB0aGVyZSBhcmVuIHN0cmljdGx5IGJhZCBhbmQgZ29vZCBndXlzIChleGNlcHQgU2t1bGwgRmFjZSBJIGd1ZXNzLCBidXQgdGhlIG1lc3NhZ2UgYWJvdXQgcmV2ZW5nZSB3YXMgY29vbCB0b28uKS4gCkdyYXRlZnVsbHlHb2RsZXNzSWYgeW91IHdpc2gsIEkgd2lsbCB2YXBvcml6ZSB0aGVtClNwZWNpZmljIGJvb3N0cyBpbiBkZWZlbnNlIGZ1bmRpbmcsQ29tbWl0bWVudCB0byBhIHZvdGUsIGFuZCBzdXBwb3J0LCBmb3IgdGhlIGNvbnNlcnZhdGl2ZSBEQUNBIHByb3Bvc2FsIGludHJvZHVjZWQgbGFzdCB3ZWVrSW1wb3J0YW50IG5vdGU6IE1lYWRvd3MgaXMgYSB2ZXJ5IGNsb3NlIGFsbHkgb2YgVHJ1bXAncyBhbmQgbm90ZWQgaGUnZCBiZWVuIHNwZWFraW5nIHRvIGhpbSBXZWRuZXNkYXkuIFRoZSBXaGl0ZSBIb3VzZSB2ZXJ5IGNsZWFybHkgc3VwcG9ydHMgdGhlIHNob3J0IHRlcm0gc3BlbmRpbmcgYmlsbC4KVGhleSBoYXZlIG5vdyBkZW1vbGlzaGVkIHRoZSBidWlsZGluZyB3aGVyZSB0aGUgU3BhbmlzaCBmYW1pbHkgbGl2ZWQuIFRoZSBibHVlIGNhciBpcyBnb25lIGFuZCBvbmx5IGEgcGlsZSBvZiB3aGF0IHdhcyByZW1haW5zIG9uIHRoZSBjb3JuZXIgd2hlcmUgd2Ugb25jZSBoZWFkZWQgZG93biBvdXIgc2VjcmV0IHBhdGguIFRoZSBwYXRoLCB0b28sIGlzIGdvbmUsIHNvbWV3aGF0LiBBIGZlbmNlIGJsb2NrcyB0aGUgd2F5LCB0byBzb21lZGF5IGJlIHJlcGxhY2VkIGJ5IGNvbmRvcyBhbmQgc29tZW9uZSdzIGJhY2t5YXJkLgpDaG9vc2UgYSB3YXJyaW9yIGZyb20gdGhlIHNoYWRvd3MgaW4gZnVsbCBibGFjayBnZWFyIG9yIGEgd2FycmlvciBvZiB0aGUgbGlnaHQsIGNsYWQgaW4gYnJpbGxpYW50IHdoaXRlLiAKVGlwcyBvbiBIb3cgdG8gTWFrZSBDb21tdXRpbmcgQmVhcmFibGUKV2Ugd2VyZSBpbnRlcnZpZXdpbmcgZm9yIG91ciBvdmVybmlnaHQgbWFuYWdlciB0aGF0IEkgd291bGQgYmUgb3ZlcnNlZWluZy5IZSBzaG93ZWQgdXAuIFdlaWdoZWQgYXBwcm94aW1hdGVseSA1MDBsYnMsIG5vdCB0aGF0IGl0J3MgYmFkIGJ1dCB0aGF0IGpvYiB3YXMgdmVyeSBwaHlzaWNhbCwgYW5kIGhhZCBkYW5kcnVmZiBvbiBoaXMgc3RvbWFjaC4gSSBjb3VsZCBzZWUgZHJvcGxldHMgb2YgZ3JlYXNlIGluIGhpcyBoYWlyLiBIZSBoYWQgcGFzdGEgYW5kIGNvZmZlZSBzdGFpbnMgb24gaGlzIHdoaXRlIGd5bSBzaG9ydHMgdGhhdCBoZSB3YXMgd2VhcmluZy5IaXMgYW5zd2VycyByZXZvbHZlZCBhcm91bmQgY29tcGFyaW5nIGhpbXNlbGYgdG8gbmV3IHNjaG9vbCBtYW5hZ2VtZW50ICh3aGljaCBJIHdhcykgYW5kIGtlcHQgc2F5aW5nIGhvdyAiZnVja2luIGdyZWF0IiBoZSB3YXMuIAooIFBsZWFzZSBzY2hlZHVsZSB5b3VyIGFwcHQgYXQgbGVhc3QgMiBob3VycyBvciBtb3JlIGluIGFkdmFuY2UuIDEgaHIgYmV0d2VlbiBjbGllbnRzIHdpdGggbGltaXRlZCBib29raW5ncy4gVGhhbmtzLiAKKElBTkFMKSBJZiBoZSBpcyBoZXIgUE9BLCBpdCB3aWxsIGRlcGVuZCBvbiB3aGVuIC8gd2h5IGl0IHdhcyBzZXQgdXAgYW5kIGhvdyBzaGUgc2V0IGl0IHVwLiAKQW5keSBtYXkgYmUgdGhlIHdlZWtlbmQncyBiaWdnZXN0IHdpbm5lciwgYnV0IGhlIG1heSBub3QgaGF2ZSBwbGF5ZWQgbWFueSBoYW5kcyB3aXRob3V0IEplcmkncyBpbmZsdWVuY2UuIFNlZWtpbmcgYSBob2JieSwgSmVyaSBqb2luZWQgdGhlIEZyZWUgUG9rZXIgTmV0d29yayBpbiBKYW1lc3Rvd24gYXMgYSB3YXkgdG8ga2VlcCBidXN5IGFuZCBtYWtlIGZyaWVuZHMuIAoiVGhlIGd1eSdzIGRlYWQsIGFuZCB0aGF0J3MgdW5mb3J0dW5hdGUsIiBzYWlkIENyb3Nzbm9lLCB3aG8gd2FzIGluIHRoZSBoYWxsIGF0IHRoZSB0aW1lIG9mIHRoZSBzaG9vdGluZy4gIkhlIG1heSBqdXN0IGhhdmUgc2F2ZWQgc29tZW9uZSdzIGxpZmUuIiBUaGUgcG9saWNlIHJlcG9ydCBvbiB0aGUgc2hvb3Rpbmcgd2lsbCBnbyB0byB0aGUgR2VuZXNlZSBDb3VudHkgcHJvc2VjdXRvcidzIG9mZmljZSB0byBkZXRlcm1pbmUgaWYgaXQgd2FzIGp1c3RpZmllZC4uIApBbmQgYWZ0ZXIgeW91IGFyZSB0aHJvdWdoIG1ha2luZyBwb2tlciBtb25leSBkZXBvc2l0LCBhbmQgbWF5YmUgcGxheWluZyBzb21lIGhhbmRzIG9mIHBva2VyLCB0aGVyZSBhcmUgb25saW5lIHBva2VyIFdlYiBzaXRlIHRoYXQgd2lsbCBnaXZlIHlvdSBhIGNob2ljZSBpZiB5b3Ugd2FudCB0byBjYXNoIG91dCB5b3VyIHBva2VyIG1vbmV5IGF0IG9uY2Ugb3IgcmVtb3ZlIHlvdXIgZnVuZHMgYXQgdGhlIHNpdGUgaWYgaW4gY2FzZSB5b3Ugc3RpbGwgd2FudCB0byBjb21lIGJhY2sgYW5kIHBsYXkuIFdpdGggdGhlIHNpeCBkZXBvc2l0IG1vZGUgbWVudGlvbmVkLCB5b3UgY2FuIGJlIGFzc3VyZWQgb2YgaGF2aW5nIHlvdXIgcG9rZXIgbW9uZXksIHdoZXRoZXIgY2hpcHMgb3IgY2FzaCwgcmVtYWluIGV4YWN0bHkgbGlrZSB5b3UgbGVmdCB0aGVtLgpDb21wYW5pZXMgaW5jbHVkaW5nIFRhcGVzdHJ5IChmb3JtZXJseSBDb2FjaCBJbmMuKSBhbmQgTCdPcmFsIFVTQSBmaWxsZWQgMTAgSHVkc29uIFlhcmRzIGZyb20gdGhlIGRheSBpdCBvcGVuZWQgdHdvIHllYXJzIGFnby4gClVwdm90ZXMgYWxsIGFyb3VuZCEgTXkgMiBjYXRzIGFyZSByZXNjdWVzIGFzIHdlbGwgYXMgdGhlIHN1cnZpdmluZyBraXR0ZW4gZnJvbSBtb20gY2F0J3MgcHJldmlvdXMgbGl0dGVyIGFuZCB0aGF0IGNhdCBoYXMgYSBkaWZmZXJlbnQgZm9yZXZlciBob21lLiBBZnRlciBhIGZldyBmYWlsZWQgYXR0ZW1wdHMsIHdlIHdlcmUgZmluYWxseSBhYmxlIHRvIGNhdGNoIHRoZWlyIG1vbSBhbmQgZ2V0IGhlciBzcGF5ZWQgYW5kIGVhciBjbGlwcGVkIHNvIHNoZSdsbCBiZSByZWNvZ25pemVkIGFzIGhhdmluZyBiZWVuIHNwYXllZCwgYXMgd2VsbCBhcyBnb3R0ZW4gaGVyIGFsbCBoZXIgc2hvdHMgYW5kIGEgY2xlYW4gYmlsbCBvZiBoZWFsdGguIE1vbSBjYXQgd2FzIG5vdCB0cnVseSBmZXJhbCwgYnV0IGhhZCBiZWVuIHN0cmF5IGZvciBhIGxvbmcgdGltZS4gQWNjb3JkaW5nIHRvIHRoZSBwZW9wbGUgd2hvIGxpdmVkIGluIHRoZSBhcmVhIGZvciBhIHdoaWxlLCBtb20gY2F0IGhhZCBsaXR0ZXIgYWZ0ZXIgbGl0dGVyIGFuZCBhdCB0aGUgdGltZSB3ZSBtb3ZlZCwgc2hlIGhhZCB0YWtlbiBhIGxpa2luZyB0byBhIHlvdW5nIGNvdXBsZSB3aG8gd2FzIG1ha2luZyBldmVyeSBlZmZvcnQgdG8gZ2FpbiBoZXIgdHJ1c3QgdG8gaG9wZWZ1bGx5IGFkb3B0IGhlci4gRXZlbiBtYW5hZ2VkIHRvIGNvYXggaGVyIGluc2lkZSBhIGZldyB0aW1lcy4gU2hlIHdhcyBhIHN3ZWV0IGdpcmwsIGp1c3Qgc2NhcmVkIGFuZCB1bnN1cmUgYnV0IGtpbmRuZXNzIGdvZXMgYSBsb25nIHdheS4gSGF2aW5nIGJlZW4gc3BheWVkIGFuZCB2YWNjaW5hdGVkIHJlbW92ZWQgYSBiaWcgYmFycmllciBmb3IgdGhlbSB0byBhZG9wdCBoZXIgYW5kIGRlZmluaXRlbHkgaW1wcm92ZWQgaGVyIG91dGxvb2suIEkgaG9wZSBpdCB3b3JrZWQgb3V0IHdlbGwgZm9yIGhlci4gQnV0IGF0IGxlYXN0IHNoZSB3b24ndCBldmVyIGFnYWluIGhhdmUgdG8gY29wZSB3aXRoIGhhdmluZyB0byBjYXJlIGZvciBraXR0ZW5zIGFuZCB3ZSBkaWQgdGhlIGJlc3QgZm9yIGhlciB0aGF0IHdlIGNvdWxkLgpXZSB3ZXJlIHdhcm5lZCB2ZXJ5IHN0cm9uZ2x5IGFnYWluc3QgYXR0ZW1wdGluZyB0byBzdGVhbCBhcHBsZXMgKHNwZWNpZmljYWxseSBhcHBsZXMpLiAKVGhlIE9pbGVycyBkaWQgdGhlIHNhbWUgYnkgYnJpbmdpbmcgaW4gcmVzcGVjdGVkIFR3aXR0ZXIgbnVtYmVycyBjcnVuY2hlciBUeWxlciBEZWxsb3cuIApXaGljaCBpcyB3aHkgaXQgaXMgc3VycHJpc2luZyB0aGF0IHRoZSBiYW5rcyBhcmUgc3RpbGwgbm90IGJlaGF2aW5nIGFueSBiZXR0ZXIuIApQbGF5IHlvdXIgZmF2b3JpdGUgdHVuZXMgb24gb3VyIGRpZ2l0YWwganVrZWJveCB3aGljaCBoYXMgb3ZlciA1LDAwMCBzb25ncy4gCk91ciBnZW5kZXJlZCBpZGVudGl0aWVzIGNhbiBhbmQgc2hvdWxkIGJlIGluY2x1c2l2ZS4gVGhlcmUgbm8gbmVlZCBmb3IgdGhlc2Ugd2VpcmQgZGl2aXNpb25zIGJldHdlZW4gdGhlIGdlbmRlcnMuIApTdGlsbCwgZGVzcGl0ZSB0aGUgYWJzdXJkaXR5IG9mIHRoZSBTb3ZpZXQgZWNvbm9taWMgc3lzdGVtLCBwZW9wbGUgaGFkIHN1YnNpZGl6ZWQgaG91c2luZyBhbmQgc29tZSBoZWFsdGggY2FyZSBhbmQgZnJlZSBlZHVjYXRpb24sIG5vdCB0byBtZW50aW9uIGxhbmQgb24gd2hpY2ggdG8gZ3JvdyB2ZWdldGFibGVzLiBVbmRlciB0aGUgZXF1YWxseSBhYnN1cmQgc3lzdGVtIG9mIGNvbGxhcHNpbmcgY2FwaXRhbGlzbSwgZmV3IG9mIHVzIGhhdmUgYW55IG9mIHRoaXMuIFRvIG1ha2UgbWF0dGVycyB3b3JzZSwgdGhlIGNhcGl0YWxpc3RzIGFyZSBub3QgZXZlbiBnb2luZyB0byBwcmV0ZW5kIHRvIHBheSB1cyBhbmQgd2Ugc3RpbGwgc3VwcG9zZWQgdG8gd29yay4KSSBtYWRlIGl0IHRocm91Z2ggdGhlIGZvdW5kYXRpb24gYW5kIG9uZSByb3csIGFuZCBhZnRlciB0aGF0PyBJdCBhbGwgd2VudCB0byBoZWxsLiBJIHJpcHBlZCBpdCBvdXQsIHVzZWQgdGhlIG9uZSBzdWNjZXNzZnVsIHJvdyBhcyBhIHBhcnQgb2YgYSBNdXNsaW0gcHJheWVyIGJsYW5rZXQgSSB3YXMgbWFraW5nIHNvbWVvbmUsIGFuZCBjYWxsZWQgaXQgYSBzdWNjZXNzLi4gCk9mIGNvdXJzZSBvbiB0dXJucyBhbmQgcml2ZXJzIHRoZXkgYXJlIGdvaW5nIHRvIG1ha2Ugc29tZSB3ZWlyZCBoYW5kcyB5b3UgZG9udCBleHBlY3QgYnV0IHN0aWxsIHRoZXkgYXJlIGJldHRpbmcgYXQgYSBmcmVxdWVuY3kgdGhhdCBkb2VzbnQgc3VwcG9ydCB0aGUgYW1vdW50IG9mIHN0cm9uZyBtYWRlIGhhbmRzIHRoZXkgaGF2ZS4uIApBIHBsYW50IGJhc2VkIGRpZXQgZG9lcyBub3RoaW5nIG9mIHRoZSBzb3J0LiAKUm9sbGVyIGFuZCBNci4gQ3JveG9uIGhhdmUgc2hvdCBjb21tZXJjaWFscyB0aGF0IHdpbGwgYXBwZWFyIG9uIHRoZSBzaXRlLiBHb2FsIGlzIHRvIGJ1aWxkIGEgdGVhbSBvZiBhdCBsZWFzdCAxLDAwMCBhcnRpc3RzIGJ5IHRoZSBzZWNvbmQgcXVhcnRlciwgTXIuIApOb3cgdGhhdCB0aGUgTGFzIFZlZ2FzIENsYXkgUG9rZXIgQ2hpcHMgdGhhdCB5b3UgYXJlIHVzaW5nIHRvIGNyZWF0ZSB5b3VyIHVuaXF1ZSBuZWNrbGFjZXMgaGFzIGRyaWVkLCBpdCBpcyB0aW1lIHRvIGRyaWxsIHRoZSBob2xlIGludG8gdGhlIHRvcCBvZiB0aGUgY2hpcCB3aXRoIGVpdGhlciBhIGNyYWZ0IGRyaWxsIG9yIGEgc3RhbmRhcmQgZHJpbGwgdXNpbmcgdGhlIHNtYWxsZXN0IGRyaWxsIGJpdC4gCkFsc28gbWFueSBzdWNoIHNpdGVzIGZvciBvbmxpbmUgcG9rZXIgZ2FtaW5nIGhlbHAgeW91IGxlc3NlbiB5b3VyIHN0aW50IG9mIGJhZCBsdWNrIGJ5IG9mZmVyaW5nIHZhcmlvdXMgYm9udXNlcyBzdWNoIGFzIG1hdGNoIGJvbnVzLCBpbnN0YW50IHNpZ24gdXAgYm9udXMgYW5kIHJlbG9hZCBib251cy4KU2hlIGFsc28gdGVuZHMgdG8gbmVlZCBtb3JlIHJlc3QsIGFuZCBob25lc3RseSwgZm9yIG1lLCB0aGlzIGlzIHRoZSBiZXN0IHRoaW5nIGZvciBoZXIuIFdoZW4gc2hlIHNsZWVwcywgaGVyIG1pbmQgaXMgbW9yZSBhdCBlYXNlLCBhbmQgZXZlcnkgbWludXRlIGFzbGVlcCwgaXMgb25lIGxlc3MgbWludXRlIG9mIGFnb255IHVudGlsIGl0IGdvZXMgYXdheSB1bnRpbCBuZXh0IHRpbWUuCklmIENhbGlmb3JuaWEgZGVjaWRlcyBpbGxlZ2FsIGltbWlncmFudHMgY2FuIHZvdGUgaW4gdGhlaXIgc3RhdGUgYW5kIGxvY2FsIGVsZWN0aW9ucywgdGhpcyBub3cgYWZmZWN0cyBuYXRpb25hbCBwb2xpdGljcy4gSWYgbWFueSBzdGF0ZXMgZG8gdGhpcywgYWxsIHRoZSBzdWRkZW4gdGhpcyBoYXMgYSBkcmFzdGljIGltcGFjdCBvbiB0aGUgaG91c2UgYW5kIHNlbmF0ZS4gSXQgbm90IGV4YWN0bHkgYW4gb3ZlcnJlYWN0aW9uIHRvIHNheSB0aGlzIHBhcnRpY3VsYXIgZWxlbWVudCBvZiB0aGUgYmlsbCB3b3VsZCBoYXZlIGEgaHVnZSBpbXBhY3QgYW5kIGlmIHlvdSBhIHJlcHVibGljYW4gaXQgaGFyZGx5IHJhZGljYWwgdG8gYmUgYWdhaW5zdCBzb21ldGhpbmcgdGhhdCB3b3VsZCBzbyBleGNsdXNpdmVseSBoZWxwIGRlbW9jcmF0cyBhbmQgb24gaXRzIGZhY2UgYWxyZWFkeSBnb2VzIGFnYWluc3QgZXZlcnl0aGluZyB0aGV5IHN0YW5kIGZvci4uIApUcmVhdG1lbnQgb2YgU29sdmVudCBCYXNlZCBBZGhlc2l2ZSBGYWN0b3J5Y2Fwc3VsaXRpcyBtYXkgYWJzb3JiIG1hc3NhZ2UsIGFjY3VyYXRlIHRoZXJhcHksIGV4ZXJjaXNlIGFuZCBzdHJldGNoaW5nLCBhbnRpIGluZmxhbW1hdG9yeSBtZWRpY2F0aW9ucywgY2xhbW15IGNhbGVmYWN0aW9uIG9yIGNvcnRpc29uZSBpbmplY3Rpb25zLiAKSW4gZmFjdCwgYXMgTWljaGVsIEZvdWNhdWx0IGxheXMgb3V0IGluIERpc2NpcGxpbmUgYW5kIFB1bmlzaCwgdGhlIGNpdmlsaXppbmcgcHJvY2VzcyBoYWQgYSB3YXkgb2YgbWFraW5nIHVzIGFsbCBtb3JlIGFuZCBtb3JlIHN1YmplY3QgdG8gc3RhdGUgcnVsZS4gCkp1c3QgcmVtZW1iZXIgdGhhdCBldmVuIHRob3VnaCBQbGF5U3RhdGlvbiBpcyBvbiB0b3Agbm93IGl0IGRvZXNuIG1lYW4gdGhleSB3aWxsIGJlIGZvcmV2ZXIsIHRoaXMga2luZCBvZiBodWJyaXMgYXR0aXR1ZGUgaXMgd2hhdCBjYXVzZWQgU29ueSB0byBmYWlsIHdpdGggdGhlIFBTMyBhbmQgaXQgc3RhcnRpbmcgdG8gc2VlbSB0aGF0IHRoZXkgaGF2ZW4gbGVhcm5lZCB0aGVpciBsZXNzb24gYXQgYWxsLiBBbHNvIGFzIGFuIGFzaWRlLCBpZiB5b3UgaG9uZXN0bHkgdGhpbmsgQ3JhY2tkb3duIDMgbG9va3MgbGlrZSBhIDM2MCBnYW1lLCB5b3UgZWl0aGVyIGhhdmVuIHBsYXllZCBpdCBvciBoYXZlIGEgdGVycmlibGUgbWVtb3J5Li4gCkkgaGF2ZSBubyBpZGVhIHdobyB0aGlzIGd1eSBpcyBidXQgaXRzIHByZXR0eSBjbGVhciBmcm9tIHRoZSBmdWxsIHZpZGVvIHRoYXQgdGhlc2UgbWlncmFudHMgb3IgcmVmdWdlZXMgYXJlIHZpb2xlbnQgYW5kIHRocmVhdGVuaW5nLiAKVGhleSBhcmUgdGhlIGJlc3Qgb3V0IHRoZXJlIGJ1dCBib3RoIGFyZSBub3QgdGhlIGZpZ2h0ZXJzIHRoZXkgb25jZSB3ZXJlLiAKVGlkaWFuZSBOJ0RpYXllIDogQXUgWElYZSBzaWNsZSwgbCdFdXJvcGUgdGFpdCBlbiBwbGVpbmUgcnZvbHV0aW9uIGluZHVzdHJpZWxsZSBldCB1cmJhaW5lLiAKSGFpbmVzLCBhY2NvbXBhbmllZCBieSBoaXMgdHJhbnNhY3RlZCBidXNpbmVzcyBpbiBIYXIgIHJpc2J1cmcsIFR1ZXNkYXkuIApUZXhhcyAoYmVzaWRlcyB0aGUgcGlja2xlcyBpbiBhIG1vdmllIHRoZWF0ZXIgdGhpbmcgdGhhdCBibGV3IHVwIGEgd2hpbGUgYmFjaykgaXMgaG9uZXN0bHkgb2JzZXNzZWQgd2l0aCBpdHNlbGYuIApJIGRvbiByZWFsbHkgaGF2ZSBhIHByb2JsZW0gd2l0aCBoaW0gc3BlY2lmaWNhbGx5LCBidXQgcmF0aGVyIHRoZSByb21hbmNlIHBsb3QuIApPbiB0aGUgb3RoZXIgaGFuZCwgcGVvcGxlIHRoYXQgZG9uJ3QgbGlrZSBNSEEgYmVjYXVzZSBhcHBhcmVudGx5IGl0J3MgdGhlIGNvb2wgdGhpbmcgdG8gZG8sIGFyZSByZWFsbHkgZnVja2luZyB0b3hpYy4gVGhleSBjYW4ndCBldmVuIGFyZ3VlIHdpdGggeW91LCBiZWNhdXNlIHRoZXkgZG9uJ3QgaGF2ZSByZWFsIGFyZ3VtZW50cyBhbmQgb25seSBoYXRlIG9uIGl0IGJlY2F1c2UgaXQncyBtb3JlIHBvcHVsYXIgdGhhbiB3aGF0ZXZlciBzaG93IHRoZXkgbGlrZSBhbmQgdGhpbmsgZGVzZXJ2ZXMgdGhlIGF0dGVudGlvbi4KTGlrZSBhIGJhZCBtZWFsIGluIGFuIGV4cGVuc2l2ZSByZXN0YXVyYW50LCBhIHNleCB0b3kgdGhhdCBkb2VzbiBkZWxpdmVyIHRoZSBwcm9taXNlZCBwbGVhc3VyZXMgaXMgYSBiYWQgaW52ZXN0bWVudCBvZiBvdXIgaW5jcmVhc2luZ2x5IGxpbWl0ZWQgbGVpc3VyZSBkb2xsYXJzLiBCdXQgbm90IHRvIHdvcnJ5ICBiZWNhdXNlIGV2ZW4gaWYgeW91IGhhdmUgdG8gdHJ5IDMgb3IgNCBzZXggdG95cywgZXZlbnR1YWxseSB5b3UgZmluZCBvbmUgdGhhdCBpcyBhIGdvb2QgaW52ZXN0bWVudCBmb3IgeW91LiBBbmQgc2V4IHRveXMsIHVubGlrZSBtZWFscyBpbiByZXN0YXVyYW50cywgcmVhbGx5IGFyZSBpbmNyZWFzaW5nbHkgbWFkZSB0byBsYXN0IG5vdyB0aGF0IHRoZXkgbW9yZSBtYWluc3RyZWFtIGFuZCBub3QgbGltaXRlZCB0byBjaGVhcCAibm92ZWx0eSIgaXRlbXMuLiAKSSBkb24gdGhpbmsgaXQgYXBwcm9wcmlhdGU/IE9idmlvdXNseSBubyBvbmUgd291bGQgY2FyZSBpZiBpdCBoYXBwZW5zIG9uY2UgYSB5ZWFyIG9yIHcvZSBidXQgYXMgc29tZW9uZSB3aG8gb25seSBzZWVzIGhpZ2hsaWdodHMgb2YgaGltLCBpdCBwcm9iYWJseSBhdCBsaWtlIDkwJSsgb2Ygd2hhdCBJIHNlZW4gb2YgaGltIGluIHRoZSBsYXN0IDIgeWVhcnMuIAogNSBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29oYWRpIGhhZGkgeWF2cnVtIGhhZGkgYnVyYXMgd2Fycm9jayB0ciBkZWlsIHlyLiBCYWsgYnVyZGEgZGEgdGVyYml5ZXNpemxpayB5YXBtYXluIGJpeiB0ZXJiaXllc2l6bGlrIHlhcG1hZG16IGhhbGRlIGJpemkgd2Fycm9jayB0ciBkZW4gYmFubGF0dG56YmFubGF0bWFkayBraWNrbGV0dGlrIGJpeiBzaXppIG9yZGEgbmUgeWFwdG56IHlhIGJyYWsgdGFtYW0gc2VuZGUga2ZyIGV0dGluIGxhbiBkZXl5c2JlbmRlIGtheWQgdmFyIHUgYW4ga29udXR1cm1hIGJlbmltIGF6bSBrbiBnaWRpbiB1cmRhbnVsYW4gcGV6ZXZlbmsgc2VuIGtmciBldG1lZGluIG1pIGF6IG5jZSBvb29vb29vbyBiZW4gZXR0aW0gc2VuIGV0bWVkaW4gbWkgPyBvb28gbWFueWFrIGxhZiBsYW4gb2x1bSBrbiBnaWRpbiB1cmRhbiBtYW55YWsgbGFmIG1hbnlhayBsYWYgbWFueWFrIGV2ZXQgcGV6ZXZlbmdpbSBhbmFuIHNhdHlvcnVtIHNlbmluIGFuYW4geWVkaSBzbGFsZW5lIHllZGkgc2xhbGVuZW9sdW0gc2VuaW4gZ2VsbWlpbmkgZ2VtaWlzaW5pIHNpa2VyaW0gYmFrIHRiZSB5YXJhcHBpIHlhcmFzcmFsbGFoIGxhbiBvbG0ga24gZ2lkaW4gdXJkYW4gYmFrIGFoaW4sIGFoaW4gYmVuaW0gYXptIGJvem1heW4gb2x1bSBhaGluIHNpa3NpbiBzZW5pIGhhZGkga24gZ2lkaW4gdXJkYW4gL2NhcHNsb2NrLyBzZW5pbiBhbmFuIGF2cmFkbiBzaWtlcmltIG9yb3NwdWNvY3V1IGtnaXRsYW4gYW5hbm4ga2xsIGFtbiBzaWtlcmltIHNpa3RpcmdpdCAvY2Fwc2xvY2svIGtteW9tIGFtbmEga29kdXVtdW4gb2x1LiAKSSB3YXMgdG9vIGlnbm9yYW50IGFuZCBjb25zZXJ2YXRpdmUgdG8gYWNjZXB0IHRoYXQuIEkgbGF0ZXIgZm91bmQgb3V0IHRoYXQgYWxsIG15IHByb2Zlc3NvcnMgc2F5IHRoYXQgbm90IGJlY2F1c2UgdGhleSBwaXRpZWQgbWUgYnV0IGJlY2F1c2UgaXQgbGl0ZXJhbGx5IG1vc3QgYmFzaWMgc3RhcnRpbmcgcG9pbnQuIApGZWRlcmFsIHNlY3VyaXR5IG9mZmljaWFscyBhbHNvIGFsbGVnZSBEdWdobW9zaCBsZWZ0IENhbmFkYSBvbiBBcHJpbCAyNCwgMjAxNiB0byB0cmF2ZWwgdG8gU3lyaWEgYnV0IHdhcyBpbnRlcmNlcHRlZCBhbmQgZGV0YWluZWQgaW4gVHVya2V5LiBTaGUgd2FzIHJldHVybmVkIHRvIGhlciBob21lIHdpdGhvdXQgY2hhcmdlLgpDb25zaWRlciB3aGF0IHlvdSBuZWVkLCB3aGF0IHlvdSB3YW50LCBhbmQgd2hhdCB5b3UgZG9udCBuZWVkLiAKSSBndWVzcyBJIGFtIG1vcmUgY29uY2VybmVkIGFib3V0ICJmcmVlbGFuY2UiIGVkaXRpbmcsIHdoaWNoIEkgY3VycmVudGx5IGRvIGxlZ2FsbHkgb24gY29udHJhY3QgZm9yIG15IFVuaXZlcnNpdHkgaW4gS29yZWEuIApDYW4gYnVkZ2V0LiAKTWFyc3BhcnMgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpQbHVzIGl0IGFsbCBhYm91dCBmbGF2b3VyIGxpa2UgSSBtZW50aW9uZWQsIHNvIGlmIHlvdSBzdGFydCBkaWx1dGluZyBzdHVmZiB5b3UgZW5kIHVwIHdpdGggYSBwb29yZXIgZHJpbmsuLiAKUGFuY2FrZXMgdQpTb21ldGltZXMgbW9yZSBpZiBiaWcgdG91cm5hbWVudHMgYXJlIGdvaW5nIG9uIGFuZCBzb21ldGltZXMgbGVzcyBpZiBJIG1ha2UgZGVjZW50IG1vbmV5IGZhc3Rlci4gU29tZXRpbWVzIGlmIEkgYW0gd2VsbCBvZmYgSSB3aWxsIHRha2UgYSBmZXcgd2Vla3Mgb2ZmLiBTbyBpdCBkb2VzIGRlcGVuZCBidXQgb2YgY291cnNlIEkgbWFrZSBtb25leSBhdCBpdCBidXQgSSBoYWQgdG8gY2xvY2sgYXMgbWFueSBhcyAxNCBob3VycyBhIGRheSBhdCBmaXJzdCBmb3IgNiBtb250aHMgKHdpdGggYSBmZXcgZGF5cyBvZmYgaGVyZSBhbmQgdGhlcmUpIGluIG9yZGVyIHRvIGxlYXJuIHRoaXMgZ2FtZSBJIGhhdmUgcGFzc2lvbiBmb3IuIApJIHdvcmtpbmcgb24gaXQgYnV0IHdpdGggbm8gc3VwcG9ydCBuZXR3b3JrIGl0IGdvaW5nIHRvIGhhdmUgdG8gYmUgc2xvdy4gSSBoYXZlIHRvIGZpbmQgY2hpbGQgY2FyZSwgYSBqb2IsIGFuZCBzdGFydCBzYXZpbmcgbW9uZXkgYmVmb3JlIEkgY2FuIG1ha2UgYW55IG1vdmVzLiBNeSBtb20gaXMgYWJ1c2l2ZSBhbmQgbmFyY2lzc2lzdGljIGFuZCBJIGJlIHdvcnNlIG9mZiB0aGVyZS4gCkxvYnN0ZXJfbGliZXJhdG9yICA0IHBvaW50cyAgc3VibWl0dGVkIDEwIGhvdXJzIGFnbwpBbGJlcnRhIGpvaW5zIHBldHJvY2hlbWljYWxzIGJvb20gd2l0aCAkMkIgbWV0aGFub2wgcHJvamVjdCBwcm9wb3NhbCBoYXMgdHVybmVkIFBlbWJpbmEgJDQuNSBiaWxsaW9uIHZlbnR1cmUgdG8gcmV2aXZlIHBldHJvY2hlbWljYWxzIGluZHVzdHJ5SW5rIGJhcmVseSBkcnkgb24gJDQuNSBiaWxsaW9uIGRlYWwgZm9yIHBldHJvY2hlbWljYWxzIHBsYW50LCBQZW1iaW5hIGV5ZXMgZXRoYW5lIG9wcG9ydHVuaXR5IGRlbGF5cyBhbmQgb3VyIGluYWJpbGl0eSB0byBnZXQgb3VyIG9pbCBwcm9kdWN0cyB0byBuZXcgbWFya2V0cyBjb250aW51ZXMgdG8gY29zdCBvdXIgcHJvdmluY2UgYW5kIG91ciBjb3VudHJ5IG1pbGxpb25zIGFuZCBtaWxsaW9ucyBvZiBkb2xsYXJzIGVhY2ggYW5kIGV2ZXJ5IGRheSwgc2hlIHNhaWQuIHJlZnVzZSB0byBhY2NlcHQgdGhlIHNpdHVhdGlvbi4gYSBkaXZlcnNpZmljYXRpb24gcHJvZ3JhbSwgTm90bGV5IGhhcyBhdHRlbXB0ZWQgdG8gZW5jb3VyYWdlIHRoZSBjb25zdHJ1Y3Rpb24gb2YgZmFjaWxpdGllcyB0aGF0IHByb2Nlc3MgQWxiZXJ0YSBhYnVuZGFudCBuYXR1cmFsIGdhcyBzdXBwbGllcyBpbnRvIHByb2R1Y3RzIHN1Y2ggYXMgcGxhc3RpYyBwZWxsZXRzLgpBIHJlYXNvbiBubyBhdHRvcm5leSBnZW5lcmFsIGhhcyBldmVyIG92ZXJyaWRkZW4gYSBEUFAgZGVjaXNpb24gaW4gYSBzcGVjaWZpYyBwcm9zZWN1dGlvbi4gSXQgaXMgdGhlIHNhbWUgcmVhc29uIHRoZSBvZmZpY2Ugb2YgdGhlIERQUCB3YXMgc2V0IHVwIGluIHRoZSBmaXJzdCBwbGFjZTogdG8gaW5zdWxhdGUgc3VjaCBkZWNpc2lvbnMsIHNvIGZhciBhcyBwb3NzaWJsZSwgZnJvbSBwb2xpdGljYWwgaW50ZXJmZXJlbmNlLi4gCkRyYWdvbidzIHBvaW50IG9mIHZpZXcgdGhpbmsgdGhlIHByb2R1Y3QgaXMgZ3JlYXQuIApOb3RoaW5nIGFib3V0IHdvbWVuIHJvbGUgdG8gYmUgcHVtcGluZyBvdXQga2lkcyBmb3IgdGhlIHN0YXRlICh3aGljaCBoaXMgbWFqb3IgcmVhc29uIHdhcyBhY3R1YWxseSB0byBzcHJlYWQgdGhlIHdoaXRlIHJhY2UpIGlzIGxpYmVyYWwuIFRoZSBuZWVkIGZvciBtZW4gaW4gdGhlIHVzc3Igd2FzIGR1ZSB0byB3YXIgYW5kIGRlYXRocyBvZiBtaWxsaW9ucy4gbm90IHNvbWUgZmFjZXQgb2Ygc29jaWFsaXNtLgpVc2UgdmlzdWFsIGN1ZXMuIE9uZSB0cmljayB0aGF0IHdvcmtlZCBmb3IgbWUgd2FzIGEgY2xpcHBlZCBtYWdhemluZSBwaWN0dXJlIG9mIHRoZSBsYXRlIFByaW5jZXNzIERpYW5hLCBhZnRlciBzaGUgcmVjZWl2ZWQgaGVyIGVuZ2FnZW1lbnQgcmluZyBmcm9tIFByaW5jZSBDaGFybGVzLiBSZW1lbWJlciB0aGF0PyBTaGUgY291bGRuJ3Qgc2hvdyBvZmYgaGVyIHJpbmcgcHJvcGVybHkgYmVjYXVzZSBzaGUgYml0IGhlciBuYWlscywgc28gc2hlIGhhZCB0byBjbGVuY2ggaGVyIGhhbmQgaW50byBhIGZpc3QgaW4gb3JkZXIgdG8gbGV0IHRoZSBwaG90b2dyYXBoZXJzIGdldCBhIGdvb2QgbG9vay4uIApJbiBhIGRlY2FkZSBvciB0d28gb25jZSB0aGUgdGVjaG5vbG9neSBoYXMgYWR2YW5jZWQgdG8gdGhlIHBvaW50IHdoZXJlIGl0IGlzIGFzIGNoZWFwIG9yIGNoZWFwZXIgdGhhbiByZWFsIG1lYXQsIHRoZW4gdGhlIGNvbW1lcmNpYWxpc2F0aW9uIGtpY2tzIGluIGFuZCBldmVyeSBzdXBlcm1hcmtldCBhbmQgcmVzdGF1cmFudCBpcyBzZXJ2aW5nIHRoaXMgc3R1ZmYuLiAKU28gZG9uIGRpdmVydCBvciByZXN0cmljdCB0aGUgZGlzY3Vzc2lvbi4gClRoZSBiZW5jaCBwcmVzcyBpcyB3aGVyZSBldmVyeW9uZSB3YXRlciBib3R0bGVzIGdvLiBUaGUgZW50aXJlIGR1bWJiZWxsIHJhY2sgaXMgdGhlIHByb3BlciBsb2NhdGlvbiB0byBkbyBsYXRlcmFsIHJhaXNlcywgdGh1cyBibG9ja2luZyBhbnlvbmUgZnJvbSBncmFiYmluZyB3ZWlnaHRzIG9mIHRoZWlyIG93bi4gCldlIGtlcHQgdGhhdCB2ZXJ5IG11Y2ggdW5kZXIgd3JhcHMgYXMgd2UgdHJpZWQgdG8gd29yayBvdXQgd2hhdCB3YXMgaGFwcGVuaW5nLiBJbmRlZWQgaXQgd2FzIG9ubHkgdGhlIENvcmUgVGVhbSBhbmQgdGhlIERpcmVjdG9ycyBhdCBOUEwgYW5kIEFseSBMYXJob2xtIHdobyBrbmV3IHdoYXQgd2FzIGhhcHBlbmluZy4gSSBndWVzcyBzb21lIG90aGVycyBtYXkgaGF2ZSBrbm93biB0aHJvdWdoIGNvbW11bmljYXRpb25zIG9mZiBzaXRlIGJ1dCB3ZSBjbGVhcmx5IGhhdmUgbm8gY29udHJvbCBvdmVyIHRoYXQgd2hhdHNvZXZlci4gCkl0IG1heSBlbmNvdXJhZ2UgbW9yZSBjb25zdHJ1Y3RpdmUgYmlwYXJ0aXNhbnNoaXAgYmV0d2VlbiByZXByZXNlbnRhdGl2ZXMsIHJhdGhlciB0aGFuIHBvbGl0aWNhbCBncmFuZHN0YW5kaW5nLCBtdWRzbGluZ2luZywgYW5kIHRyaWFibGlzaW0uIDIxIHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvLiAKQW55d2F5cywgYmFjayB0byBJdGFseS4gV2UnbGwgYmUgdGhlcmUgZm9yIDMgd2Vla3MuIFN0YXJ0aW5nIG9mZiBpbiBWYXJlbm5hIChsYWtlIGNvbW8pIGZvciAzIG5pZ2h0cywgdGhlbiB0byBWZW5pY2UgZm9yIDIsIHRoZW4gdG8gQ2lucXVlIFRlcnJlIGZvciAzLCB0aGVuIEZsb3JlbmNlIDIsIHRoZW4gd2UncmUgc3RheWluZyBhdCBhIGZhcm1ob3VzZSBpbiBUdXNjYW55IGZvciBhIGZ1bGwgd2VlaywgdGhlbiBlbmRpbmcgd2l0aCA0IGRheXMgaW4gUm9tZS4uIApFc3RvbmlhIGlzIGFuIElUIGh1YiwgTW9sZG92YSBhIGZhcm0gZWNvbm9teSB3aG9zZSBwcmlkZSBpcyBpdHMgZXhjZWxsZW50IHdpbmVzLiAKV2UgYmVsaWV2ZSB0aGF0IHRoZSBFYXJ0aCBoYXMgYmxlc3NlZCB1cyB3aXRoIGFsbCBvZiB0aGUgZ2lmdHMgYW5kIHJlc291cmNlcyB3ZSBuZWVkIGZvciB0aGUgaGVhbGluZyBhbmQgdGhyaXZpbmcgb2YgYWxsIGxpZmUsIGFuZCBpdCBpcyBvdXIgZGl2aW5lIHJlc3BvbnNpYmlsaXR5IHRvIGNhcmUgZm9yIHRoZSBlYXJ0aCBhbmQgcmVzdG9yZSBoZXIgc2FjcmVkIHB1cnBvc2Ugb2YgbnVydHVyaW5nIGxpZmUsIGZvciBub3cgYW5kIGZ1dHVyZSBnZW5lcmF0aW9ucy4KV2hhdCBpcyBIZWFsdGggYXQgRXZlcnkgU2l6ZT8KU28gd2h5IG1pZ2h0IHRoZSB0ZWVuYWdlIGJyYWluIGJlIHdpcmVkIHRoaXMgd2F5PyBUaGVpciBncmVhdGVyIHRvbGVyYW5jZSBmb3IgdW5jZXJ0YWludHkgYW5kIHRoZSB1bmtub3duICAgYW5kIGFuIGluY3JlYXNlZCBkZXNpcmUgZm9yIGFuZCBmb2N1cyBvbiByZXdhcmRzICAgcHJvYmFibHkgaGVscHMgdGhlbSBsZWF2ZSB0aGUgbmVzdC4gU3VjaCBleHBsYW5hdGlvbnMgYXJlIHNwZWN1bGF0aXZlLCBSZXluYSBjYXV0aW9ucywgYnV0IG5vdGVzIHRoYXQgImluIHJhdHMsIGZvciBleGFtcGxlLCBhZG9sZXNjZW50IHJhdHMgYXJlIG1vcmUgbGlrZWx5IHRvIGV4cGxvcmUgYSBuZXcgZW52aXJvbm1lbnQuIApQbGF5ZXJzIGZyZXF1ZW50bHkgcGF5IGFzIHdlbGwgbGl0dGxlIGF0dGVudGlvbiBmb3IgdGhlIHJha2UuIEhvd2V2ZXIgaXQgY2FuIGJlIGRldmFzdGF0aW5nLiBPbiBsaW5lIHJvb21zLCB3aXRoIHRoZWlyIG1pbmltYWwgb3ZlcmhlYWQsIG5vdCBwb3NzZXNzaW5nIHRvIGhpcmUgZGVhbGVycywgcmVudCBhIGxhcmdlIHNwYWNlLCBidXkgdGFibGVzIGFsb25nIHdpdGggdGhlIGxpa2UsIGNhbiBhZmZvcmQgdG8gY2hhcmdlIG11Y2ggbGVzcy4gQnV0IHRoaXMgZG9lcyBub3QgbWVhbiB0aGV5IFRNcmUgcHJvZHVjaW5nIGxlc3MgZG9sbGFycyBwZXIgaG91ci4gUHJldHR5IHRoZSBvcHBvc2l0ZS4gQmVjYXVzZSB0aGUgZ2FtZXMgYXJlIHNvIG11Y2ggcXVpY2tlciwgZXZlbiB0b2dldGhlciB3aXRoIHRoZSBsb3dlciByYWtlLCB0aGV5J3JlIHByb2R1Y2luZyBxdWl0ZSBhIGxpdHRsZSBhZGRpdGlvbmFsIG1vbmV5IHBlciBob3VyIGFzIGEgcmVzdWx0IG9mIGFsbCB0aGUgYWRkZWQgaGFuZHMgcGVyIGhvdXIgd2hpY2ggY2FuIGJlIHJha2VkLiBUaGlzIHJlcXVpcmUgbm90IGh1cnQgeW91LCBub25ldGhlbGVzcywgZ2l2ZW4gdGhhdCBzaG91bGQgeW91IGFyZSBhIHdpbm5pbmcgcGxheWVyIHlvdSBvdWdodCB0byBiZSB3aW5uaW5nIGV4dHJhIG1vbmV5IHBlciBob3VyIGZvciBwcmVjaXNlbHkgdGhlIHNhbWUgcHVycG9zZS4gRnVuZGluZyBpdCB0cnVseSBpcyBhcyBlYXN5IGFzIHRyYW5zZmVycmluZyBmdW5kcyBpbnRvIHlvdXIgYWNjb3VudC4gTm8gaGF2ZSB0byBkcml2ZSwgdG8gcGFyaywgdGFrZSBwdWJsaWMgdHJhbnNwb3J0YXRpb24sIG9yIHdhbGsuIFRoZXJlIFRNcyBubyB3YWl0aW5nIGluIGxpbmUgYSBnYW1lICh5b3UnbGwgYmUgYWJsZSB0byBub3JtYWxseSBkaXNjb3ZlciBhbiBvcGVuIGdhbWUpLCBubyB3b3JyeWluZyBhYm91dCBjYXJyeWluZyBodWdlIGFtb3VudHMgb2YgbW9uZXkgdG8gb3IgZnJvbSB0aGUgY2FzaW5vLCBvciBwdXJjaGFzaW5nIGdhcyBmb3IgdGhlIGNhci4gSnVzdCBzdHVtYmxlIGludG8gYSBjaGFpciBpbiBmcm9udCBvZiB5b3VyIGNvbXB1dGVyIHN5c3RlbSwgZmlyZSBpdCB1cCwgYW5kIG9mZiB5b3UgZ28uCkl0IHNvdW5kcyBsaWtlIHlvdSBoYXZlIHRydXN0IGlzc3VlcyB3aGljaCBtYXkgc3RlbSBmcm9tIGhpbSBub3QgYmVpbmcgbG95YWwgaW4gdGhlIHBhc3QsIG9yIHlvdSBhcmUgYSBleHRyZW1lbHkgaW5zZWN1cmUgcGVyc29uIHdobyBkb2Vzbid0IGZlZWwgbGlrZSBhIGdvb2QgcGVyc29uLiAKSSBndWVzcyB0aGUgd29ybGQgaGFzIGNoYW5nZWQgYSBsb3QgbiBqdXN0IHN4IHllYXJzICAgZXZlcnl0aG5nIGhhcyBnb3R0ZW4gc28gbXVjaCBtb3JlIGV4cGVuc3ZlIGhlcmUuIEEgYmVlciBzIDE0IGRvbGxhcnMgYXQgYSBjbHViIGFuZCA1IGRvbGxhcnMgZXZlbiBhdCBhIGxvY2FsIEFuZCBJIGFtIHRhbGtuZyB0aGUgbG9jYWwgRWZlcyBiZWVyIHRvbyAgIHRzIG5vdCBsa2Ugd2UgYXJlIGRybmtuZyBtcG9ydGVkIHN0dWZmIS4gCkJ1dCBpdCdzIHRoZSBsZXNzb25zIEkgbGVhcm5lZCB3aGlsZSBwbGF5aW5nIHRoYXQgY2hhcmFjdGVyIHRoYXQgaGF2ZSBwcm92aWRlZCBtZSB3aXRoIGEgcGF0aCBmb3J3YXJkLiAKSWYgdGhlIG1vdmllIGRvZXNuJ3QgbWFrZSBhIGJpZyBlbm91Z2ggYm94IG9mZmljZSBzcGxhc2ggKGFsbW9zdCBhIGdpdmVuKSwgdGhpcyBwcm9taXNpbmcgYmVnaW5uaW5nIHdpbGwgaGF2ZSBubyB0cnVlIGNsaW1heCBvciBjb25jbHVzaW9uLiAKT2JhbWEgZGlkIG1vcmUgZm9yIHRoZSBwZW9wbGUgaW4gYSBiYWQgc2l0dWF0aW9uIHRoYW4gdHJ1bXAgaGFzIGluIGEgZ29vZCBzaXR1YXRpb24uIApNZXJjaGFudGluZyAgMTYgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCkkgd2FzIGNyYXp5IHRpcmVkIGFmdGVyIHB1c2hpbmcgbXlzZWxmIG9uIHRoZSByaWRlIGFuZCBkaWRuIHRoaW5rIHRvIHVuY2xpcCBteXNlbGYgYXQgdGhlIHN0b3AuIApMb3VpcyBGcmVlaCBhbmQgZm9ybWVyIEhvbWVsYW5kIFNlY3VyaXR5IFNlY3JldGFyeSBUb20gUmlkZ2UgZHJldyBoZWFkbGluZXMgVGh1cnNkYXkgd2hlbiB0aGV5IGpvaW5lZCB0aGUgYWR2aXNvcnkgYm9hcmQgb2YgRmFpclBsYXlVU0EsIGEgbmV3bHkgZm9ybWVkIGFkdm9jYWN5IGdyb3VwIHB1c2hpbmcgZm9yIGEgcmVndWxhdG9yeSBmcmFtZXdvcmsgZm9yIG9ubGluZSBwb2tlci4gQ2xpZW50ZWxlLi4gCk1vbnRobHkgam9iIGxvc3NlcyBhcmUgZG93biwgZmluYW5jaWFsIG1hcmtldHMgYXJlIGltcHJvdmVkLCBhbmQgZWNvbm9taWMgY29udHJhY3Rpb24gaGFzIHNsb3dlZC4gCkNvYmIgaGl0IC4zMjMgaW4gaGlzIGZpbmFsIHNlYXNvbiBpbiAxOTI4LiBGcm9jaCBzaG91bGQga2VwdCBmaWdodGluZy4gCkppbSBhbmQgQWxpY2UgdHJhdmVsbGVkIG9mdGVuIHRvIFRvcm9udG8sIENhbGdhcnkgYW5kIER1bmNhbiAoQkMpLiBTaGUgYXR0ZW5kZWQgaGlnaCBzY2hvb2wgZ3JhZHVhdGlvbnMgZm9yIGZpdmUgZ3JhbmRjaGlsZHJlbiwgdGF1Z2h0IGhlciBncmFuZGRhdWdodGVycyB0byBrbml0IGFuZCBzYXcgaGVyIGVsZGVzdCBncmFuZGRhdWdodGVyIGdldCBtYXJyaWVkLiBKaW0gYW5kIEFsaWNlIGNlbGVicmF0ZWQgdGhlaXIgNTB0aCBhbm5pdmVyc2FyeSB3aXRoIGEgY3J1aXNlIG9uIHRoZSBNUyBLZW5vcmEsIHRoZWlyIDYwdGggYW5uaXZlcnNhcnkgd2l0aCBmYW1pbHkgYW5kIGZyaWVuZHMsIGFuZCB0aGVpciA2NXRoIHdpdGggYSBmYW1pbHkgZ3JvdXAgU2t5cGUgdmlkZW8gcGFydHkhIEppbSBhbmQgQWxpY2UgbGVmdCB0aGUgaG91c2UgaW4gTGFrZXNpZGUgYW5kIG1vdmVkIGludG8gYSBjb25kbyBhbG1vc3QgbmluZSB5ZWFycyBhZ28gd2hlbiBzdGFpcnMgYmVjYW1lIHRvbyBtdWNoIG9mIGEgY2hhbGxlbmdlIGZvciBoZXIuIApMaWtlLCB0aGUgYmF0dGVyeSB0ZXN0IGlzIGZyZWUgYnV0IHRoZSBiYXR0ZXJ5IGNvc3RzIHR3aWNlIGFzIG11Y2ggYXMgb24gYW1hem9uIChzYW1lIGJhdHRlcnkuIFNhbWUgbWFudWZhY3R1cmVyIGFuZCBtb2RlbCkgc28gSSBsaWtlIHRvIGF2b2lkIGRvaW5nIHRoaXMganVzdCBmb3IgdGhlIG1lY2hhbmljIHRvIGZpZGRsZSBhcm91bmQgd2l0aCBhIG11bHRpIG1ldGVyIG9uY2UgaGUgZmluZHMgYSBxdWlldCAxMCBtaW51dGVzIGFuZCB0aGVuIEkgc3RpbGwgaGF2ZSB0byBjaGFuZ2UgdGhlIGJhdHRlcnkgbXlzZWxmIHRvIHNhdmUgYSAxMDAuCkluIGFuIGludGVydmlldyBsYXRlciwgQm9sZW5kZXIgc2FpZCB0aGUgZG9ncyBhcmUgdGVzdGVkIGZvciBkcnVncywganVzdCBhcyBob3JzZXMgYXJlLCBidXQgdGhhdCBwb3NpdGl2ZXMgYXJlIHJhcmU6ICJJIGhhdmVuJ3QgaGFkIGEgYmFkIHRlc3QgaW4gSSBjb3VsZG4ndCB0ZWxsIHlvdSBob3cgbG9uZy4iIFRoZSBsYXN0IHBvc2l0aXZlIHRlc3QgaGUgY291bGQgcmVtZW1iZXIgd2FzIGZyb20gYSBkb2cgdGhhdCBoYWQgYmVlbiBmZWQgYmVlIHBvbGxlbiwgYW4gYW50aSBpbmZsYW1tYXRvcnkgdGhhdCBtYXNrcyBzb3JlbmVzcywgYSBtaW5vciB2aW9sYXRpb24uIApXZSBkb24ndCBoYXZlIEx5bWUgdmFjY2luZXMgYW55bW9yZSBmb3IgcGVvcGxlIGJ1dCBpdCdzIG5vdCBhIHNhZmV0eSBpc3N1ZSBiZWNhdXNlIG9mIHNpZGUgZWZmZWN0cy4gRmlyc3QsIGl0IHdhc24ndCBhIHZlcnkgZWZmZWN0aXZlIHZhY2NpbmUuIApJbiB0aGlzIGNhc2UgdGhlIHBvdCBpcyBkaXZpZGVkIGluIHR3byBwYXJ0czogbWFpbiBwb3QgaXMgYSBwb3QgdGhhdCBpbmNsdWRlcyBhbGwgY2hpcHMgcHV0IGJlZm9yZSBkaXNjb25uZWN0IChhbmQgYmVmb3JlIG9uZSBwbGF5ZXIgaW52b2x1bnRhcnkgd2VudCBhbGwgaW4pLiAKQXMgYSBxdWFsaWZpZWQsIGNlcnRpZmllZCBtYXNzZXVyIHJ1biBhIHByaXZhdGUgcHJhY3RpY2UgbWFzc2FnZSAuIFRoYW5rcyBJIGxvdmUgdGhlIGNvbnRhY3Qgd2l0aCBwZW9wbGUgLCBJIGFsd2F5cyB0cnkgdG8gcHJvdmlkZSBhIGZyaWVuZGx5IGFuZCBub24gYmluZGluZyBhdG1vc3BoZXJlIHRhaWxvcmVkIHRvIHRoZSBpbmRpdmlkdWFsIG5lZWRzIGFuZCBleHBlY3RhdGlvbnMgLiBEaXJlY3Rpb25zIHRvIHRoZSBjdXN0b21lciBpbiBNYW5jaGVzdGVyIGlzIGluY2x1ZGVkIG1hc3NhZ2UsIHNvIHlvdSBkbyBub3QgaGF2ZSB0byBpbmN1ciBhZGRpdGlvbmFsIGNvc3RzLiBQZXJzb25hbGx5IGl0IHNvbWUgcHJldHR5IGdyZWF0IGltcG9ydGFuY2UgdG8geW91ciBwaHlzaWNhbCBmaXRuZXNzIGFuZCBhIGhlYWx0aHkgbGlmZXN0eWxlLiBJIGFtIDI2IHllYXJzIG9sZCBhbmQgNyB5ZWFycyBieSB0cmFpbmluZyBjYXJlIGFib3V0IGl0cyBmb3JtICwgdGhlcmVmb3JlIEkgc2VydmUgd2l0aCB0aGUgaXNzdWVzIG9mIHBoeXNpY2FsIGV4ZXJjaXNlIGFuZCBudXRyaXRpb25hbCBhZHZpY2UgLiBNYXNzYWdlIGNvbWJpbmVkIHdpdGggYSBkaWV0IGFuZCBhcyBzeXN0ZW1hdGljIHRyYWluaW5nIGNhbiBjaGFuZ2UgdGhlIHBlcmNlcHRpb24gb2YgeW91ciBib2R5LiBXaXRoIHRoZXNlIHRocmVlIGZhY3RvcnMgY2FuIHNoYXBlIHRoZSBib2R5ICwgaW1wcm92ZSB0aGUgb3ZlcmFsbCBjb25kaXRpb24gb2YgdGhlIGJvZHkgLCBhcyB3ZWxsIGFzIG1lbnRhbCBoZWFsdGggdGhyb3VnaCBkYWlseSB3ZWxsIGJlaW5nIGFuZCBpbmplY3Rpb24gb2YgZnJlc2ggZW5lcmd5IC4KVGhlIHBhcmVudHMgbGl2ZXMgYXJlIGEgcGljdHVyZSBvZiBtaWRkbGUgY2xhc3Mgbm9ybWFsaXR5LiBGb3Igbm93LCB0aGVpciAkOSw5OTUgbW9udGhseSB0YWtlIGhvbWUgaW5jb21lIGlzIGFkZXF1YXRlLCBidXQgdGhlaXIgb3V0c3RhbmRpbmcgbW9ydGdhZ2Ugb2YgJDI2Miw2MDYgaGFzIDE5IHllYXJzIHRvIHJ1biBhbmQgdGhleSB3b3JyeSB0aGF0IGludGVyZXN0IHJhdGVzIG1pZ2h0IHJpc2UgY29uc2lkZXJhYmx5LiAKQWltIGZvciB0aGUgc3VuZ2xhc3NlcyB0byBzdHVuIHRoZSBtYWluIGNvbnRyb2wgdW5pdCB3aGVuIFhpbmcgaXMgaW4gYSB0ZW1wb3JhcnkgZGlzYXNzZW1ibGVkIHN0YXRlLiAKV2hlbiBzb21lb25lIGlzIGxvb2tpbmcgZm9yIGEgcHJvdGVjdG9yLCBoZSBpcyBkZWZpbml0ZWx5IHdvcnJpZWQgYWJvdXQgdGhlIHNhZmV0eSBvZiBoaXMgcHJvZHVjdC4gCkxpZmUgaGFzIHJldHVybmVkIHRvIGEgZmV1ZGFsIHN5c3RlbSBydWxlZCBieSB0aGUgS2Fsa2FyIG92ZXJsb3Jkcywga25vd24gYXMgdGhlIFRlaXZvcyBvciAnYnJvdGhlcnMnLCBhbmQgZW5mb3JjZWQgYnkgdGhlIEthc2ggR3VhcmQuIEZvciB0aGUgaHVtYW4gcmFjZSBsaWZlIGlzIGhvcnJpZmljLiAKQnV0IGl0IHdpbGwgaW5jcmVhc2UuIApQb2tlciB0b3VybmFtZW50IHN0YXRpc3RpY3MgSG93IG1hbnkgdG91cm5hbWVudHMgYSBwb2tlciBwcm8gd2hvIHBsYXkgYWJvdXQgMTAwIGEgeWVhciBleHBlY3QgdCBXaW5uCkdvYWxzIGZvciBhIEJ1c2luZXNzIGluIE1hc3NhZ2UKV2UgaW5zaXN0IG91ciBsZWFkZXJzIHdvcmsgaGFyZCwgZXhlcmNpc2UgaGFyZCwgYW5kIGhhdmUgcHJpdmF0ZSBsaXZlcyB0aGF0IGFyZSBoaWdobHkgZGlzY2lwbGluZWQuIFlldCB0aGlzIGluc2lzdGVuY2UgaXMgYSBkZWFkIGVuZC4gClRoaXMgc2VxdWVuY2UgdGVsbHMgUk5BIHBvbHltZXJhc2UgdG8gYmluZCB0byB0aGUgRE5BIHJpZ2h0IGhlcmUsIGFuZCBjb3B5IHRoZSBnZW5lIGludG8gbVJOQSB3aGljaCBpcyB0aGVuIGNvbnZlcnRlZCBpbnRvIHByb3RlaW5zLiAKUHJlbWl1bSBPcmdhbmljIExpbmVucwpDb29wZXJhdGlvbiBsZWQgdG8gZ2FtYmxpbmcgYnVzdApQcmVnYXJlICB1biBnZXN0byBkaSBncmFuZGUgcG90ZXJlIGUgY29uc2FwZXZvbGV6emEgY2hlIHZhIGZhdHRvIGluIG1hbmllcmEgY29zY2llbnRlLCByaXNlcnZhbmRvc2kgZGVnbGkgc3BhemkgbmVsIGNvcnNvIGRlbGxhIGdpb3JuYXRhLCBhbGxvIHNjb3BvIGRpIHBvdGVyc2kgY29uY2VudHJhcmUgbWVnbGlvIGUgcml1c2NpcmUgYSBjb211bmljYXJlIGluIG1hbmllcmEgZGlyZXR0YSBjb24gRGlvLgpBdCBhbnkgcmF0ZSAgIGVuam95IHRoZSBkb3dudGltZS4gCkl0IHNvcnQgb2YgYSBtb3JlIGFkdmFuY2VkIGZvcm0gb2Ygc21hcnRzIHZzIHNtYXJ0cyAgIHlvdSBtaWdodCBub3QgYmUgYWNhZGVtaWNhbGx5IGdpZnRlZCBidXQgeW91IGhhZCBhbiBpbnRlbGxpZ2VuY2UgYWJvdXQgdGhlIHdvcmxkIGFyb3VuZCB5b3UsIG9yIHNvY2lhbCBzY2VuYXJpb3MsIG9yIHdoYXRldmVyIGVsc2UuIEFuZCB2aWNlIHZlcnNhICAgeW91IHdlcmUgdmVyeSBnaWZ0ZWQgYXQgc2Nob29sIGJ1dCBkaWRuIHJlYWxseSBoYXZlIGEgbG90IGdvaW5nIGZvciB5b3Ugc29jaWFsbHksIHBlcmhhcHMuIApJIGp1c3QgZmluaXNoZWQgYSBib29rIHRoYXQgSSBwcmludGVkIGFuZCBib3VuZCBteXNlbGYsIGFzIGl0IHdhcyBvdXQgb2YgcHJpbnQuIApOVEEuIERvbiBtYWtlIGEgYmlnIHRoaW5nIG9mIGl0LCB0aGVyZSBubyBuZWVkIHRvIHN0YXJ0IGRyYW1hIGluIHlvdXIgZnJpZW5kIGdyb3VwIGFuZCBpZiB5b3Ugc2VuZCBoZXIgYSBtZXNzYWdlIGJyZWFraW5nIHVwIHdpdGggaGVyLCBpdCB3aWxsLCBidXQgc3RvcCBpbnZpdGluZyBoZXIgdG8gaGFuZyBvdXQgYW5kIHN0b3AgbWVzc2FnaW5nIGhlciAoYW5kIGVzcGVjaWFsbHkgZG9uIGFwb2xvZ2lzZSEgWW91IGRvbmUgbm90aGluZyB3cm9uZykuIFlvdSBjYW4gc3RpbGwgYmUgZnJpZW5kcyB3aXRoIHRoZSByZXN0IG9mIHRoZSBncm91cCB3aXRob3V0IGJlaW5nIGNsb3NlIHRvIGhlci4uIApCdXQgQW5uZSBmZWx0IHRoYXQgaWYgYW55b25lIHBvc3Nlc3NlZCBvZiB0aGUgZ2lmdCBjb3VsZCB0YWtlIHRoYXQgc2ltcGxlIHJlY29yZCBvZiBhIGJyYXZlLCBhZHZlbnR1cm91cyBsaWZlLCByZWFkaW5nIGJldHdlZW4gdGhlIGJhbGQgbGluZXMgdGhlIHRhbGVzIG9mIGRhbmdlcnMgc3RhdW5jaGx5IGZhY2VkIGFuZCBkdXR5IG1hbmZ1bGx5IGRvbmUsIGEgd29uZGVyZnVsIHN0b3J5IG1pZ2h0IGJlIG1hZGUgZnJvbSBpdC4gCllvdSBjYW4gbGF5IGl0IG91dCBmb3IgaGltIGxpa2UgeW91IGxhaWQgaXQgb3V0IGZvciB1cywgYW5kIGhvcGVmdWxseSBoZSBsb3ZlcyB5b3UgYW5kIHJlc3BlY3RzIHRoZSByZWxhdGlvbnNoaXAgdG8gdGhlIHBvaW50IHRoYXQgaGUgcHJlcGFyZWQgdG8gZG8gc29tZXRoaW5nIGRpZmZlcmVudC4gQnV0IHRoZSB3YXkgeW91IGRlc2NyaWJlZCBoaW0sIGRvZXNuIHNvdW5kIGxpa2UgaGUgYW55d2hlcmUgY2xvc2UgdG8gYmVpbmcgY2FwYWJsZSBvZiB0aGF0LgpGYWlzYWwsIHdobyBjYW1lIHRvIENhbmFkYSBmcm9tIER1YmxpbiwgSXJlbGFuZCBqdXN0IGRheXMgYmVmb3JlIHRoZSBpbmNpZGVudCwgc2FpZCBoZSBvbmx5IHJlYWxpemVkIHRoZSB0cmFjdGlvbiB0aGUgc3RvcnkgZ2FybmVyZWQgdG9kYXkuIFRoZSBjaXZpbCBlbmdpbmVlciBncmFkdWF0ZSBzYWlkIGhlIGRvZXNuJ3QgZXZlbiB0aGluayBhbnlvbmUgYmFjayBpbiBoaXMgaG9tZXRvd24ga25vd3MgYWJvdXQgdGhlIHN0b3J5IHlldC4KKE5vdGU6IHRoaXMgd2FzIGF0IGp1c3QgYWJvdXQgdGhlIHRpbWUgd2hlbiB0aGUgQnJpdHMgYW5ub3VuY2VkIHRoZSBpbnRyb2R1Y3Rpb24gb2YgYSA0LDAwMCBwb3VuZGVyIGludG8gaXRzIGFyc2VuYWwgYWJvdXQgdGhlIGxhcmdlc3QgYm9tYiBhdCB0aGUgdGltZS4pIFN0ZXZlIEJlbm5pb24sIEludmVudGl2ZSBHZW5pdXMsIGFuZCBIaXMgTG92ZWx5IEFzc2lzdGFudCwgS2l0dHkgUGVubmVsbCwgU3RhbmQgQmV0d2VlbiB0aGUgRWFydGggYW5kIERlc3RydWN0aW9uIFdoZW4gYSBGbGFtaW5nIE1vbnN0ZXIgVGhyZWF0ZW5zIHRvIERldm91ciBhbmQgRGVzdHJveSBDaXZpbGl6YXRpb24hIiBpdCBzYXlzLCBzb21ld2hlcmUsIG9mIHRoZSAiZmxhbWluZyBtb25zdGVyIiBhdG9tLiAKVGhleSBhcmUgcmVhZGlseSBhdmFpbGFibGUgYXQgQXNpYW4gbWFya2V0cyBhbmQgc29tZSBvZiB0aGUgbGFyZ2VyIGdyb2Nlcnkgc3RvcmVzLiAKIlRoZXJlIGFyZSBtYW55IHBlb3BsZSB3aG8gaGF0ZSBtYXRoIGJ1dCBhcmUgZ3JlYXQgcG9rZXIgcGxheWVycywgYnV0IHRoZXJlIGFyZSBoYXJkbHkgYW55IHBsYXllcnMgd2hvIGxhY2sgdGhlIHBlb3BsZSByZWFkaW5nIGFiaWxpdGllcyBhbmQgc3RpbGwgbWFuYWdlIHRvIGJlIGdvb2QgcG9rZXIgcGxheWVycywiIHNhaWQgVm9uay4gIk1hdGhlbWF0aWNhbCBrbm93bGVkZ2UgY2FuIHRvIGEgbGFyZ2UgZXh0ZW50IGJlIHJlcGxhY2VkIGJ5IGludHVpdGlvbiBhbmQgZXhwZXJpZW5jZS4gQWZ0ZXIgYSBwbGF5ZXIgaGFzIHBsYXllZCBhIG1pbGxpb24gaGFuZHMgb2YgcG9rZXIsIGV2ZW4gaWYgaGUgZG9lcyBub3Qga25vdyB0aGUgbWF0aCBhdCBhbGwsIGhlIHdpbGwgaGF2ZSBhIGRlY2VudCBmZWVsaW5nIGFib3V0IHdoZW4gaXQgaXMgcHJvZml0YWJsZSB0byBkcmF3IHRvIGEgZmx1c2ggYW5kIHdoZW4gaXQgaXMgbm90LiIKRnJvbSBIYW5ka3MgbWl0IE11c2lrIChjdXJkIGNoZWVzZSB3aXRoIG9uaWlvbnMpIHRvICJGcmFua2Z1cnQgR3JlZW4gU2F1Y2UiIHdpdGggU2Nobml0emVsIGFuZCBlZ2dzLiAKVGhlIGZpcnN0IG9uZSBzaG93ZWQgdXAgYW5kIHNldCB1cC9kZWNvcmF0ZWQgdGhlIHJvb20gdG8gaGVyIHByZWZlcmVuY2UuIApUaG91Z2ggaGUgd29uIHNpeCBzbWFsbGVyIHRvdXJuYW1lbnRzIGF0IHRoZSBzZXJpZXMgYW5kIGFtYXNzZWQgbW9yZSB0aGFuICQxNSBtaWxsaW9uIGluIFdvcmxkIFNlcmllcyBvZiBQb2tlciBlYXJuaW5ncyBzaW5jZSAxOTk4LCB0aGUgZnVuIGxvdmluZyBwcm8gbmlja25hbWVkICJLaWQgUG9rZXIiIGhhcyBuZXZlciByZWFjaGVkIHRoZSBmaW5hbCB0YWJsZSBvZiBwb2tlciBtYXJxdWVlIGV2ZW50Li4gCldoZXJlYXMgaW4gU291dGggS29yZWEsIHRoZSBzb2NpZXR5IGlzIHZlcnkgZGl2aWRlZCBiZWNhdXNlIGV2ZXJ5b25lIGhhcyBhbiBvcGluaW9uLCB0aGVyZWZvcmUgdGhleSB2aWJyYW50bHkgZGViYXRlIHRoZSBpc3N1ZXMuIApUaGlzIGludHJpZ3VlZCBwZW9wbGUgc2Vla2luZyBzb21ldGhpbmcgZGlzdGluY3RpdmUgYW1vbmcgdGhlIHN0YXJzLiAKV2hlcmUgYSBwbGF5ZXIgc2l0cyBlYWNoIGhhbmQgZGV0ZXJtaW5lcyB0aGUgYW1vdW50IG9mIGluZm9ybWF0aW9uIGhlIG9yIHNoZSBjYW4gZ2FpbiBvbiBvdGhlciBwbGF5ZXJzLiBUaGlzIGNhbiBoYXZlIGEgYmlnIGVmZmVjdCBvbiB5b3VyIHBva2VyIHN0cmF0ZWd5IGFuZCBob3cgYSBoYW5kIGlzIHBsYXllZC4gCk1yIEdvZmYgaXMgYmFyZWx5IGFja25vd2xlZGdpbmcgaGlzIGJpZ2dlc3Qgcml2YWwsIEpvaG4gVGFtaWhlcmUsIGJ1dCB0aGUgZm9ybWVyIExhYm91ciBNUCBhbmQgYnJvYWRjYXN0ZXIgaXMgYWxyZWFkeSBjb21pbmcgb3V0IHN3aW5naW5nLi4gCkljeSBTdHJhaXQgUG9pbnQgaXMgb24gQ2hpY2hhZ29mZiBJc2xhbmQgYW5kIGNsb3NlIHRvIEhvb25haCwgdGhlIGxhcmdlc3QgbmF0aXZlIFRsaW5naXQgSW5kaWFuIHNldHRsZW1lbnQgaW4gQWxhc2thLiBBY2NvcmRpbmcgdG8gYSBUbGluZ2l0IHNheWluZywgIndoZW4gdGhlIHRpZGUgb3V0LCB0aGUgdGFibGUgaXMgc2V0IiBhbmQgdGhlIGxvY2FscyBoYXZlIGEgc3Ryb25nIGNvbm5lY3Rpb24gd2l0aCB0aGUgc2VhLiAKSSByYW1ibGUgb246IGlmIHlvdSByZWFkIGl0LCB5b3UnbGwgZmluZCBvdXQgd2h5IHRoZXJlJ3MgYSBmcm9nIGluIHRoYXQgb2ZmaWNlIHBob3RvLiAKV2VyZSB5b3Ugc3VyZSB5b3VyIGh1c2JhbmQgd291bGQgbG92ZSB0aGF0IGZhdXggdmludGFnZSwgQmx1ZXRvb3RoIGNvbXBhdGlibGUgdHVybnRhYmxlLCBvbmx5IHRvIGZpbmQgb3V0IGxhdGVyIHRoYXQgd2hhdCBoZSByZWFsbHkgd2FudGVkIHdhcyBhIHdlaWdodGVkIGJsYW5rZXQ/IERpZCB5b3UgbWlzaW50ZXJwcmV0IGhpcyBtb250aHMgb2YgaGludCBkcm9wcGluZyBhYm91dCBob21lYnJld2luZywgcG9ueWluZyB1cCBmb3IgdGhlIHBlcmZlY3QgY3JhZnQgYmVlciBraXQsIHdoZW4gaGUgd2FzIGFjdHVhbGx5IHRhbGtpbmcgYWJvdXQga29tYnVjaGE/LiAKVGhpcyBpcyBhbHNvIHdlaXJkIG9uIGhvdyBoYWdyaWQgc2lyaXVzIHdlcmUgYWJsZSB0byBnZXQgdG8gdGhlIGhvdXNlIGxlYXZlIGJlZm9yZSB0aGUgbWluaXN0cnkgY2FtZSB0byBjbGVhbiB1cCB0aGUgc2NlbmUuIGR1bWJsZWRvcmUgdGhlIG9yZGVyIG1vc3QgbGlrZWx5IHdlcmUga2VlcGluZyB0YWJzIG9uIHRoZSBwb3R0ZXJzIChhbmQgcHBsIGxpa2UgYmF0aWxkYSBiYWdzaG90IGNvdWxkdmUgcmVwb3J0ZWQgYW4gZXhwbG9zaW9uIGF0IHRoZSBob3VzZSkgYnV0IGhvdyBjb21lIHRoZSBtaW5pc3RyeSB3YXNudCBpbmZvcm1lZCBvZiBpdCBieSBvdGhlciB3aXphcmRzIGxpdmluZyBpbiBnb2RyaWNzIGhvbGxvdz8KQW5kIG5vdGUgdGhhdCB0aGUgZmFjdCBpcyB0aGF0IGdheSBwZW9wbGUgKGxpa2UgbWUsIGZvciBleGFtcGxlKSBIQVZFIEJFRU4gRk9SQ0VEIEZPUiBZRUFSUyB0byBzZXJ2ZSBwZW9wbGUgaW4gd2F5cyB3ZSBtaWdodCBub3QgaGF2ZSB3YW50ZWQgdG8sIG9yIGxvc2Ugb3VyIGpvYnMuIFdlIGRyaXZlIGNhYnMgYW5kIHNlcnZlIGZvb2QgYW5kIGRyaW5rcyB0byByaWdodCB3aW5nIG51dHMsIHRvIHJlbGlnaW91cyB6ZWFsb3RzLCB0byBmYWtlIENocmlzdGlhbnMsIGV0Yy4KVGhlIHN0b3J5IHRoYXQgU291dGhlcm4gRGVtb2NyYXRzIGJlY2FtZSBSZXB1YmxpY2FucyBzbyBhcyB0byBiZSBhYmxlIHRvIGNvbnRpbnVlIHRvIGJlIHJhY2lzdCBpcyBvZiBjb3Vyc2UgYSBteXRoIGFuZCBtb2Rlcm4gRGVtb2NyYXRzIHN1cmUgZG8gbG92ZSBteXRocyBhbmQgY29uc3BpcmFjeSB0aGVvcmllcy4gCkFuZCBJIGp1ZGdlIGhlciBhbmQgdGhlIGJvb2tzIGZvciBzb21lIG9mIHRoZSB0ZXJyaWJsZSB3b3JsZCB2aWV3cy4gSSB3b24ganVkZ2UgaGVyIHBlcnNvbmFsIGNoYXJhY3RlciBmb3IgY3JhcCB3cml0aW5nLkkgc3RpbGwgbG92ZSBSdXJvdW5pIEtlbnNoaW4gZGVzcGl0ZSB0aGUgZmFjdCB0aGUgY3JlYXRvciBpcyBhIHJlY2VudGx5IGNvbnZpY3RlZCBwZWRvcGhpbGUuIEkgd29uIGJ1eSBhbnkgb2YgaGlzIHdvcmsgYW55bW9yZSwgYnV0IEkgc3RpbGwgbG92ZSBLZW5zaGluLkVkaXQ6IHdoeSBtdXN0IGJlaW5nIGEgZ29vZCBtZWRpYSBjb25zdW1lciBiZSBzbyBoYXJkLiAKVGhyZWUgd29tZW4gY29tcGxhaW5lZCB0byBwb2xpY2UgdG9kYXkgb2YgbG9zaW5nIG1vbmV5LCBhbmQgaW4gZWFjaCBpbnN0YW5jZSB0aGUgbG9zcyB3YXMgYXR0cmlidXRlZCB0byB0aGUgd29yayBvZiBwcm9mZXNzaW9uYWwgcGljU3BvY2ZjZXRzLiAKSGUgcGxheWVkIG9uZSAiY29tcGVpdGl0dmUiIG1hdGNoIGFnYWluc3QgUWFyYWJhZy4gClRoZSBiaWcgc2VsbDogT25lIG9mIHRoZSBub3Rld29ydGh5IGZlYXR1cmVzIG9mIHRoaXMgb25lIGJlZHJvb20gY29uZG8gaW4gU291dGggU3VycmV5J3MgTWludCBjb21wbGV4IGlzIHRoYXQgaXQgd2FzIGRlc2lnbmVkIGFzIHRoZSBzaG93IGhvbWUgZm9yIHRoZSBkZXZlbG9wbWVudC4gClRob3NlIGxvc3NlcyBtYWRlIGl0IGRpZmZpY3VsdCBmb3IgdGhlaXIgbG9jYWwgcGFydG5lcnMgdG8gcmVpbnZlc3QgaW4gdGhlIGJ1c2luZXNzIGFuZCBieSB0aGUgZWFybHkgMjAwMHMgQ29rZSBoYWQgYmVlbiBhbGxvd2VkIHRvIGJ1eSB0aGVtIG91dCwgaW4gc29tZSBjYXNlcyBmb3IgYSBtaW5pbWFsIGFtb3VudC4uIApJIHdhcyB3b25kZXJpbmcgaWYgY291bnNlbGxpbmcgbWlnaHQgYmUgYW4gb3B0aW9uIGZvciBtZT8gVmlvbGVuY2UgYW5kIGFncmVzc2lvbiBhbW9uZ3N0IG1lbiBjYW4gYWxzbyBiZSB0cmFjZWQgYmFjayB0byBhIGxhY2sgb2YgYSBzdWl0YWJsZSBtYWxlIHJvbGUgbW9kZWwsIGFuIGFic2VudCBmYXRoZXIsIGEgcG9vciByZWxhdGlvbnNoaXAgd2l0aCBhIGZhdGhlciwgYW5kIHVucmVzb2x2ZWQgYW5nZXIgYW5kIHJlc2VudG1lbnQgdG93YXJkcyB0aGUgbW90aGVyIGZpZ3VyZS4gSGlzIHNlZW1zIGEgbGl0dGxlIHdvcnNlIHRoYW4gbWluZSAgIGF0IGxlYXN0IG9uIHRoZSBwaHlzaWNhbCBhYnVzZS4gV2hhdCB3b3VsZCBoYXBwZW4gaWYgeW91IGZvdW5kIGEgbWFuIHRoYXQgd2FzIG5vdCBhIGNoaWxkPyBBc2tpbmcgYXBwcm9wcmlhdGUgcXVlc3Rpb25zIGFuZCB0aGF0IGtpbmQgb2YgdGhpbmchIFNoZSBzdWZmZXJlZCB0aHJvdWdoIHBvbGl0aWNhbCB0dXJtb2lsIGluIGhlciBjaGlsZGhvb2QgYW5kIHRlZW4geWVhcnMgdmlhIGEgcHJpc29uIGNhbXAsIGFuZCBhdCBhIG1pbmltdW0gd2FzIHBzeWNob2xvZ2ljYWxseSBhYnVzZWQ7IG15IGd1ZXNzIGlzIHRoYXQgc2hlIHdhcyBhbHNvIHNleHVhbGx5IGFidXNlZCBvciBhdCBsZWFzdCBvZ2xlZCBieSB0aGUgZ3VhcmRzLiBJIHdhcyBzbyBjb25mdXNlZCwgYW5kIHRob3VnaHQgdGhhdCBwZXJoYXBzIGhlIGhhZCBvbmx5IGV2ZXIgYmVlbiBzZXh1YWxseSBhdHRyYWN0ZWQgdG8gbWUsIGFuZCBoYWQgbmV2ZXIgcmVhbGx5IGludGVuZGVkIG9uIGhhdmluZyBhIHJlYWwgcmVsYXRpb25zaGlwIHdpdGggbWUuIEl0IHdhcyBvbmx5IGFmdGVyIEkgc3RhcnRlZCB0byB3b3JyeSBhYm91dCBoaXMgcGVyc29uYWwgc2FmZXR5IHRoYXQgSSBiZWdnZWQgaGltIHRvIGp1c3QgbGV0IG1lIGtub3cgaGUgd2FzIG9rLgpCcmVhdGhlIGluIHRoZSBzdGVhbSwgY29taW5nIG91dCBmb3IgZnJlc2ggYWlyIGFzIG5lZWRlZC4gClRodXJzZGF5IGFmdGVybm9vbiwgc2lkZXdhbGtzIGFuZCByZXN0YXVyYW50cyBpbiBHYXN0b3duIHdlcmUgcGFja2VkIHdpdGggZmFucyB3ZWFyaW5nIERvdGEgMiBsYW55YXJkcyBhbmQgdG90aW5nIGJhZ3Mgb2Ygc3dhZyBhbmQgbWVyY2hhbmRpc2UuSW5zaWRlIHRoZSBQaW50IFB1YmxpYyBIb3VzZSwganVzdCBhIGZldyBibG9ja3MgZnJvbSBSb2dlcnMgQXJlbmEsIGZhbnMgc2lwcGVkIGNyYWZ0IGJlZXIgd2hpbGUgd2F0Y2hpbmcgdGhlIHRvdXJuYW1lbnQgb24gZmxhdHNjcmVlbiBUVnMuQXNzaXN0YW50IGdlbmVyYWwgbWFuYWdlciBKZWZmIExvY2t3b29kIHNhaWQgZXZlbnQgb3JnYW5pemVycyBhcHByb2FjaGVkIFRoZSBQaW50IGFib3V0IGJvb2tpbmcgdGhlIHdob2xlIHB1YiBmb3IgdGhlIHdlZWssIGJ1dCB1bHRpbWF0ZWx5IHNldHRsZWQgb24gYSBzcGVjaWFsIGJyb2FkY2FzdGluZyBhcnJhbmdlbWVudC5Mb2Nrd29vZCBzYWlkIHRoZSBmYW5zIGhhdmUgYmVlbiBncmVhdCBjdXN0b21lcnMsIGtlZXBpbmcgc3VtbWVyIGFmdGVybm9vbnMgYnVzaWVyIHRoYW4gdXN1YWwgYW5kIHBhY2tpbmcgaW50byB0aGUgcHViIGVhY2ggbmlnaHQgYWZ0ZXIgZXZlbnRzIHdyYXAgdXAgYXQgUm9nZXJzIEFyZW5hLmZhbnRhc3RpYywgaGUgc2FpZC4gCkhlIHRoZW4gZ290IGFueSBtdXR1YWwgZnJpZW5kcyB3ZSBoYWQgdG8gInJlYXNvbiIgd2l0aCBtZS4gCkkgZ290IGEgc21hbGwgY2hlYXAgc3Rhc2ggYW5kIGp1c3QgZml0IHRoZW0gaW4gd2hlbiBhbmQgd2hlcmUgSSBjYW4uIApJIHdhbnRlZCB0byB0YWtlIG9uZSB0aGF0IHdhcyBsb2NhdGVkIG5lYXIgYSB0ZXJyaWZpYyBwYXJrIG5leHQgdG8gdGhlIG9jZWFuIGFuZCBjb252ZXJ0IGl0IGludG8gcmVudGFsIGFwYXJ0bWVudHMuIFdlIHB1cmNoYXNlZCB0aGUgcHJvcGVydHkgZm9yICQzNTUsMDAwLCBzcGVudCAkNDAsMDAwIG9uIHJlaGFiIGNvc3RzLCBhbmQgdHVybmVkIHRoZSBidWlsZGluZyBhcm91bmQuIApUaGUgTGFvdGlhbiBwb3N0IGF0IE5hbScgQmFjLCBub3J0aCBvZiBMdWFuZyBQcmFiYW5nLCB0aGUgUm95YWwgTG9hdGlhbiBjYXBpdGFsLCBpcyB3aXRoaW4gMTAwIG1pbGVzIG9mIHdoZXJlIFByYSAgcGhhcyBzYWlkIHRoZSB0aHJlZSBSZWQgYmF0dGFsICBpb25zIHdlcmUgYXJyYXllZCBhZ2FpbnN0IGhVIGZvcmNlcy4gClR1cm5zIG91dCB0aGUgZGVhZCBpbnNpZGUgZmVlbGluZyBJIGhhZCB3YXMgYmVjYXVzZSBvZiBkZXByZXNzaW9uISA6RCBEZXByZXNzaW9uIGlzIGVhc2lseSByZWluZm9yY2VkIGJ5IGJlaGF2aW9yIGFuZCBlbnZpcm9ubWVudC4gCldhdnkgTGF5J3MgaGF2ZSBvcmlnaW5hbCwgaGlja29yeSBiYXJiZWN1ZSwgcmFuY2ggYW5kIEF1IEdyYXRpbiBmbGF2b3VycyB3aGlsZSBMYXkncyBTdGF4IG9mZmVycyBvcmlnaW5hbCwgc291ciBjcmVhbSBvbmlvbiwgQ2hlZGRhciwgYmFyYmVjdWUsIHJhbmNoLCBwaXp6YSBhbmQgc2FsdCB2aW5lZ2FyLiBUaGUgTGF5J3MgTmF0dXJhbCBpbmNsdWRlcyB0aGljayBjdXQgYmFyYmVjdWUgYW5kIHNlYSBzYWx0IGJyYW5kcy4gWyBlZGl0IF0gU291dGggQW1lcmljYSBJbiBzb21lIGNvdW50cmllcyBzdWNoIGFzIEFyZ2VudGluYSwgQ2hpbGUgYW5kIFVydWd1YXksIHNvbWUgb2YgdGhlIExheSdzIGZsYXZvdXJlZCBwcm9kdWN0cyBhcmUgc29sZCB3aXRoIHRoZSAiTGF5J3MgTWVkaXRlcnJuZWFzIiBsYWJlbCwgYW5kIGluY2x1ZGUgc3VjaCBmbGF2b3VycyBhcyBIYW0sIE9saXZlIE9pbCBhbmQgUGFybWVzYW4gQ2hlZXNlLCBPbGl2ZSBPaWwgYW5kIFRvbWF0bywgT2xpdmUgT2lsIGFuZCBCYXNpbCwgR3JlZWsgVHphdHppa2kgQ2hlZXNlIHdpdGggb25pb25zLCBMYXNhZ25hLCBCZWVmIENhcnBhY2NpbyB3aXRoIFBhcm1lZ2dpYW5vLCBhbmQgU21va2VkIE1hbmNoZWdvIENoZWVzZS4gCktub3dsZWRnZWFibGUsIGNvdXJ0ZW91cyBkZWFsZXJzIGFuZCBmbG9vciBzdGFmZiBwcm92aWRlIGdhbWluZyBhY3Rpb24gMjQgaG91cnMgYSBkYXksIHllYXIgcm91bmQuLiAKVGhhdCBvcHBvbmVudCByZW1haW5zIHlvdSwgeW91cnNlbGYuIFRoZSBnb2FsIGlzIHRvIHVsdGltYXRlbHkgZGVmZWF0IHlvdXJzZWxmLCB5b3VyIGZlYXJzLCB5b3VyIGluc2VjdXJpdGllcyBhbmQgbGltaXRhdGlvbnMuIFRoYXQgcHJhY3RpY2UgaGFwcGVucyBhdCBudW1lcm91cyBsZXZlbHMuIFNvbWUgbWFzdGVyIHRoZSBib2R5LCBzb21lIHRoZSBtaW5kLCBvbiBvY2Nhc2lvbnMsIGJvdGguIFNvbWUgcGFydGlhbGx5IGJyZWFrIGRvd24gdGhlIGJhcnJpZXJzIG9mIGZlYXIuIFRoZSBnb2FsIGlzIHRvIHVzZSBib3hpbmcgdG8gYWNjZXNzIHRoZSB1bmxpbWl0ZWQgcG90ZW50aWFsIGFuZCB3aXNkb20gbGF0ZW50IGluIGV2ZXJ5IGh1bWFuIGJlaW5nLiAKRW1tYW51ZWwgQ2hhdmFzc2lldXggYSBldSBkZXMgdmllcyBtdWx0aXBsZXMgZ2FsZW1lbnQgKGxnaW9ubmFpcmUsIHBob3RvZ3JhcGhlLCBjb3V0ZWxpZXIpLiAKTid1dGlsaXNleiBsYSBmaWNoZSBkZSBjZSBmb3Vybmlzc2V1ciBxdWUgcG91ciBsZXMgZG9ubmVzIHRlY2huaXF1ZXMgbWFpcyBwb3VyIDQ0IGxlcyBkb3NhZ2VzIHNvbnQgaW5zaWduaWZpYW50cy5MZXMgcHJvZHVpdHMgIGJhc2UgZGUgVG9uZ2thdCBtb2lzIGNvbmNlbnRyUXVhbmQgYXV4IGFsdGVybmF0aXZlcyBlbiB0ZXJtZXMgZGUgcHJvZHVpdCBtb2lucyBjb25jZW50ciBjaGV6IGloZXJiIHZvdXMgYXZleiB1biBsYXJnZSBjaG9peCA6Q2xpcXVlciBpY2kgZXQgdGFwZXIgVG9uZ2NhdCBkYW5zIGxhIGNhc2UgZGUgcmVjaGVyY2hlICFDZSBxdWUgamUgcGV1eCB2b3VzIGFzc3VyZXIgYydlc3QgcXUndW4gY29ycmVzcG9uZGFudCBhIGVzc2F5IHVuZSB2ZXJzaW9uIG1pbmltYWxlIGV0ICBkdSBhcnJ0ZXIgY2FyIGEgbCdleGNpdGFpdCB0cm9wLiBPciBpbCBlc3QgZGFucyB1bmUgc2l0dWF0aW9uIGRlICJwcmlzb24iLCBpbCBlc3QgbWFyaSB0b3V0IGVuIGF5YW50IGV1IHVuIHBhc3MgImhvbW8iLiAKVGhlcmUgYXJlIGFsc28gbWFueSBvdGhlciBzdHJhdGVnaWVzIHdoaWNoIGFyZSBtb3JlICJhZHZhbmNlZCIgYW5kICJzb3BoaXN0aWNhdGVkIiB0aG91Z2ggdGhlcmUgYXJlIHNvbWUgcGVvcGxlIHdobyBkb24ndGJlbGlldmUgaW4gdGhlIHNjaWVuY2UgYW5kIHRyeSB0byB1c2UgZm9ydHVuZXRlbGxpbmcgc3RyYXRlZ3kgb3IgYXN0cm9sb2d5IHRvIGd1ZXNzIHRoZSB3aW5uaW5nIG51bWJlcnMuLiAKSWwgYXBwYXJhdCBhdXNzaSBlbnRyZSBsZXMgbWFpbnMgZHUgbWRlY2luIGNoaW5vaXMgSHVhIFR1byAoMTEwIDIwNyBhcHJzIEouIEMuKSBhZmluIGRlIGZhdm9yaXNlciBsIGRlcyBkb3VsZXVycyBhdSBjb3VycyBkZXMgb3ByYXRpb25zIGNoaXJ1cmdpY2FsZXMgZW4gYW5lc3Roc2lhbnQgbGVzIG1hbGFkZXMgYXZhbnQgaW50ZXJ2ZW50aW9uLiBEZXB1aXMgYXUgbW9pbnMgbGUgSVggbWUgc2ljbGUgYXZhbnQgSi4gCkJ1dCB0aGUgZmFjdCByZW1haW5zIHRoYXQgYSBzbWFsbCBkZWJhdGUgaW4gdGhlIE5hdGlvbmFsIEFzc2VtYmx5IGNsZWFyZWQgdGhlIG1pc3QgZm9yIHdoaWNoIHRoZSBnb3Zlcm5tZW50IHdhcyByZWNlaXZpbmcgZmxhayBmb3IgYWxtb3N0IGEgd2Vlay4gSGVyZWluIGxpZXMgdGhlIGxlc3NvbiBmb3IgdGhlIGdvdmVybm1lbnQuLiAKV2FzIHVucyBkaWUgUGVybWFrdWx0dXIgdmVyc3Byb2NoZW4gaGF0dGUsIGlzdCB3YWhyIGdld29yZGVuOiBXaXIga29ubnRlbiBoaWVyIHVtc2V0emVuLCB3YXMgd2lyIGluIGRlbiBUaGVvcmllIHVuZCBQcmF4aXMgS3Vyc2VuIGluIEF1c3RyYWxpZW4gdW5kICBtaXRhcmJlaXRlbmQgIGluIHZpZWxlbiBHZW1laW5zY2hhZnRlbiB1bmQgYXVmIHVuemhsaWdlbiBja2VybiBkaWVzZXIgV2VsdCBlcmxlcm50IGhhdHRlbi4gS2F1ZnQgRXVjaCBlaW5lICh1bmQgc3BhZXRlciAsIGFsbGUgMiBNb25hdGUsIG1laHIpLCBsZXN0IHNpZSBtaXQgVmVyZ251ZWdlbiB1bmQgbGVndCBzaWUgaW4gZGVuIFdhcnRlemltbWVybiB2b24gZXVyZW4gUHJheGVuLCBTZW1pbmFyaGFldXNlcm4sIFlvZ2F6ZW50cmVuIGV0Yy4gClRoZSBTd2luZSBGbHUgdGhhdCBoYXMgYWxyZWFkeSBraWxsZWQgODEgcGVvcGxlIGluIE1leGljbyBhbmQgaW5mZWN0ZWQgb3ZlciBhIHRob3VzYW5kIG1vcmUgaGFzIG5vdyByZWFjaGVkIE5ldyBZb3JrIENpdHkuIEF0IGxlYXN0IDggc3R1ZGVudHMgYXQgYSBoaWdoIHNjaG9vbCBpbiBRdWVlbnMgaGF2ZSBiZWVuIGNvbmZpcm1lZCB0byBiZSBzdWZmZXJpbmcgZnJvbSB0aGlzIHBhcnRpY3VsYXIgc3RyYWluLgpBbmQgZWFybGllciB0aGlzIG1vbnRoLCBhY3RvciBCZW4gQWZmbGVjayB3YXMgcmVwb3J0ZWRseSBiYW5uZWQgZnJvbSBwbGF5aW5nIGJsYWNramFjayBhdCB0aGUgSGFyZCBSb2NrIGNhc2lubyBpbiBMYXMgVmVnYXMuIEFjY29yZGluZyB0byBtdWx0aXBsZSBtZWRpYSByZXBvcnRzLCBBZmZsZWNrIHdhcyBhY2N1c2VkIG9mIGNhcmQgY291bnRpbmcsIHRvbGQgaGUgd2FzIGFuICJhZHZhbnRhZ2UgcGxheWVyIiBieSBjYXNpbm8gcGVyc29ubmVsIGFuZCB3b3VsZCBubyBsb25nZXIgYmUgYWxsb3dlZCB0byBwbGF5IGJsYWNramFjayBhdCB0aGUgSGFyZCBSb2NrLgpCcm93biwgd2hvIGhhcyBhcHBlYXJlZCBhcyBhIHJlZ3VsYXIgZ3Vlc3Qgb24gS01KWCwgTWFnaWMgMTA1J3MgUm9jayAnbicgUm9sbCBicmVha2Zhc3QsIHNheXMgc2hlJ3MgZXhwbG9yaW5nIGhlciBvcHRpb25zLCBhbmQgb25lIG1heSBiZSB0byBtb3ZlIGJhY2sgdG8gRGFsbGFzLCB3aGVyZSBzaGUgd29ya2VkIHByZXZpb3VzbHkgYW5kIHdoZXJlIHNoZSBoYXMgc2V2ZXJhbCBmcmllbmRzIGFuZCB0aGUgam9iIG9wcG9ydHVuaXRpZXMgYXJlIG1vcmUgcGxlbnRpZnVsLgpCZXNpZGVzLCBsZXQgZmFjZSBpdCwgdGhlIGdvdmVybm1lbnQgd2lsbCBuZXZlciBiZSBhYmxlIHRvIGRlY2lkZSB3aGF0IGlzICJjb3NtZXRpYyIgYW5kIHdoYXQgaXMgIm5lY2Vzc2FyeSIgYW55d2F5LiBJZiBzb21lb25lIGlzIHNvIGRlcHJlc3NlZCBhYm91dCB0aGUgc2l6ZSBvZiB0aGVpciBib29icyBvciB0aGVpciBub3NlIG9mIHRoZWlyIGJhY2sgZmF0IHRoYXQgdGhleSBzdG9wIGdvaW5nIHRvIHdvcmsgb3Igc2Nob29sLCBpcyB0aGUgc3VyZ2VyeSBuZWNlc3Nhcnk/IElmIGEgZmFjZWxpZnQgd2lsbCBrZWVwIGEgaHVzYmFuZCBmaW5hbmNpYWwgc3VwcG9ydCwgaXMgaXQgbmVjZXNzYXJ5PyBBcmUgYnJlYXN0IGltcGxhbnRzIGFmdGVyIGNhbmNlciBuZWNlc3Nhcnk/IFdoYXQgYWJvdXQgbGlmdGluZyB1cCBzYWdnaW5nIGZsYXBzIG9mIHNraW4gYWZ0ZXIgd2VpZ2h0IGxvc3Q/IFdoYXQgYWJvdXQgc3RvbWFjaCBzdGFwbGluZyBmb3Igd2VpZ2h0IGxvc3MgaW4gdGhlIGZpcnN0IHBsYWNlPwpUaGUgc2Vzc2lvbiBzdGFydGVkIG9mZiBpbiB0aGUgYmF0aCB3aGVyZSB0aGUgZ2lybCB3YXNoZWQgbWUgYWxsIG92ZXIgYW5kIHRoZW4gaW5pdGlhdGVkIHNvbWUgc2V4IHBsYXkuIEFmdGVyIHRoZSB3YXNoLCBteSBnaXJsIHNsaWQgaGVyc2VsZiB1cCBhbmQgZG93biBtZSBhbmQgcnViYmVkIGhlciBwdXNzeSBvbiBteSBjb2NrIGZyb20gZmFjaW5nIGFuZCByZXZlcnNlIHBvc2l0aW9ucy4gVGhpcyB3YXMgdW5wcm90ZWN0ZWQgc28gd2hlbiBzaGUgc3RhcnRlZCBkb2luZyBpdCBhbmQgSSB0b2xkIGhlciBub3QgdG8gaXQgbm90IHBlbmV0cmF0aXZlIGJ1dCBpdCBza2luIHRvIHNraW4gc28gc2hlIG1vdmVkIG9uIHRvIGEgYmFyZSBibG93am9iIGluc3RlYWQuIApBbmQgSGlsbHNib3JvIEVudGVydGFpbm1lbnQsIGNoYWxsZW5nZWQgYSBjb3VudHkgb3JkaW5hbmNlIHRoYXQgd291bGQgcHJvaGliaXQgdGhlIGRpc3RyaWJ1dGlvbiBvZiBoYW5kYmlsbHMgZm9yIGNvbW1lcmNpYWwgcHVycG9zZXMuIFRoZSBoZWFyaW5nIGlzIGV4cGVjdGVkIHRvIGNvbnRpbnVlIFRodXJzZGF5LiAKQ29zYnkgbGF3eWVyIFRvbSBNZXNlcmVhdSB0b2xkIGp1cm9ycyBpbiBhbiBvcGVuaW5nIHN0YXRlbWVudCBvbiBUdWVzZGF5IHRoYXQgQ29uc3RhbmQgd2FzIGEgcGF1cGVyIHdobyBzdGlmZmVkIHJvb21tYXRlcyBvbiBiaWxscywgcmFja2VkIHVwIGJpZyBjcmVkaXQgY2FyZCBkZWJ0IGFuZCBvbmNlIHJhbiBhIFBvbnppIHNjaGVtZSB1bnRpbCBzaGUgImhpdCB0aGUgamFja3BvdCIgaW4gMjAwNiwgd2hlbiBDb3NieSBwYWlkIGhlciAkMy40IG1pbGxpb24gdG8gc2V0dGxlIHRoZSBjaXZpbCBsYXdzdWl0IENvbnN0YW5kIGZpbGVkIGFmdGVyIHRoZSBkaXN0cmljdCBhdHRvcm5leSBhdCB0aGUgdGltZSBkcm9wcGVkIHRoZSBjYXNlLgpPbmUgbmlnaHQsIGJ5IHRoZSBmaXJlc2lkZSBhdCB0aGUgbGlnaHQgQW5uZSBzYXcgQ2FwdGFpbiBKaW0ncyAibGlmZSBib29rLiIgSGUgbmVlZGVkIG5vIGNvYXhpbmcgdG8gc2hvdyBpdCBhbmQgcHJvdWRseSBnYXZlIGl0IHRvIGhlciB0byByZWFkLgoxLiBST1VMRVRURS4gWW91IG1pZ2h0IGJlIGEgc3BlY3VsYXRvci4gClRoZSBlZmZlY3RpdmVuZXNzIG9mIHRoYXQgbWV0aG9kLCBob3dldmVyLCBpcyBxdWVzdGlvbmFibGUuLiAKSSB0aGluayB5b3Uga25vdyB3aGF0IHlvdSBhcmUgZG9pbmcuIEFuZCB5b3UgZGlkbid0IHJlYWxseSBwbGF5IHRoZSBoYW5kcyBiYWRseS4gCk1heWJlIHlvdSBzaG91bGQgYXNrIHlvdXJzZWxmIGhvdyB0aGVzZSBtb3JlIHN1Y2Nlc3NmdWwgZmVtYWxlIGxlZCBtb3ZpZXMgd2VyZW4ndCBhdHRhY2tlZCBvdXQgb2YgdGhlIGdhdGUgYnkgdGhlICJ0b3hpYyBmYW5kb20iLCBhbmQgd2hhdCB0aGV5IGFyZSBkb2luZyBkaWZmZXJlbnRseSB0aGFuIENNLgpZb3UnbGwgYmUgcHJvdWQgd2hlbiB5b3Ugc2V0IHRoZW0gb24geW91ciB0YWJsZS4uIApCZWZvcmUgeW91ciBkcm9wIG1ham9yIGJ1Y2tzIG9uIGEgZml0bmVzcyB0cmFja2VyLCB0aGVyZSBhcmUgZmV3IHRoaW5ncyB0byB5b3UgbWlnaHQgd2FudCB0byBjb25zaWRlci4uIApUaGVzZSBkYXlzLCB0aGVyZSBhcmUgb25saW5lIHBva2VyIHNpdGVzIHRoYXQgYXJlIGludGVncmF0ZWQgd2l0aCBvbmxpbmUgY2FzaW5vIHNpdGVzLi4gClRoZSBib29rIHdhcyBjYWxsZWQgJ0xpZmUgYW5kIEhvdyB0byBMaXZlIGl0Jy4uIApTb21lIG1vdGhlcnMgZ2V0IGl0IGZvbGxvd2luZyBhbiB1bnBsYW5uZWQgb3IgZGlmZmljdWx0IHByZWduYW5jeSwgYnV0IG90aGVycyBjb3VsZCBoYXZlIGJlZW4gcGxhbm5pbmcgYW5kIHRyeWluZyBmb3IgYSBiYWJ5IGZvciB5ZWFycyBidXQgc3RpbGwgZ2V0IGRlcHJlc3NlZC4gCkNyYXNoIGJhbmRpY29vdCBmbGFzaCBwYyBjaGVhdHMgRG93bmxvYWQgZ3JhdGlzIGNkIGF2ZW5pZGEgYnJhc2lsIG5hY2lvbmFsIHNhbmRpIGNlbm92IHppbWEgdSBzYXJhamV2dSBzIE1pZG5pZ2h0IGNsdWIgMiBwYyBnYW1lIGZ1bGwgZXhlIFN1cHJlbWUuLiAKSm9obiAxOjE0IGNhbiBiZSB0cmFuc2xhdGVkIHdpdGggdGhlIHdvcmQgZHdlbGwuCkEgZmV3IHdlZWtzIG9yIGRheXMgYmVmb3JlIHlvdXIgYW5uaXZlcnNhcnksIGl0IHdpbGwgcmVhbGx5IGJlIGhlbHBmdWwgZm9yIHlvdSBpZiB5b3UgZ28gYW5kIHBsYW4gd2hhdCB5b3UgYXJlIGdvaW5nIHRvIGRvIGFoZWFkIG9mIHRpbWUuIApJZCBzYXkgaXQgcmVxdWlyZXMgYSBzb2xpZCB1bmRlcnN0YW5kaW5nIG9mIHZhcmlvdXMgcm9sZXMsIGluY2x1ZGluZyB1bmRlcnN0YW5kaW5nIGhvdyBwcm9ncmFtbWluZyB3b3JrcywgeW91IGRvbid0IGhhdmUgdG8gYmUgYSBnb29kIHByb2dyYW1tZXIsIGJ1dCB5b3UnbGwgb2Z0ZW4gYmUgdGhlIGJyaWRnZSBiZXR3ZWVuIHByb2dyYW1taW5nIGFuZCBhcnQsIHNvIGhhdmluZyBhIHN0cm9uZyB1bmRlcnN0YW5kaW5nIG9mIHdoYXRzIGludm9sdmVkIGluIHRoZSB2YXJpb3VzIHRhc2tzIHdpbGwgcmVhbGx5IGhlbHAgeW91IHN1Y2NlZWQuClBhcmtsYW5kIERhZCBNYW51ZWwgT2xpdmVyIFNwZWFrcyBBYm91dCBTaG9vdGluZywgUmVwLiBNYXR0IEdhZXR6IE9uIEZhY2luZyBTb3V0aCBGbG9yaWRhVGhpcyBUaHVyc2RheSB3aWxsIG1hcmsgb25lIHllYXIgc2luY2UgdGhlIG1hc3Mgc2hvb3RpbmcgYXQgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sLgpJIHRoaW5rIG9mIHRoaXMgZWFjaCB0aW1lIEkgcmV2aWV3IGEgaGFuZHMuIFdoZXRoZXIgSSB3aW4gb3IgbG9zZSB0aGUgaGFuZCBJIGxvb2sgdG8gc2VlIGlmIEkgYW0gbWFraW5nIHRoZSByaWdodCBkZWNpc2lvbnMgYXQgdGhlIHRpbWUgdGhlIGluZm9ybWF0aW9uIGlzIHByZXNlbnRlZCB0byBtZS4gQXMgbG9uZyBhcyBJIGFtIG1ha2luZyBjb3JyZWN0IGRlY2lzaW9ucyBJIGtub3cgdGhhdCB0aGUgcmVzdWx0cyB3aWxsIGZvbGxvdy4KSXQgd2FzIHJlYWxseSBvbmx5IGFmdGVyIEkgc3RhcnRlZCByZWFkaW5nIHN0b3JpZXMgaGVyZSB0aGF0IHJlZmxlY3RlZCBleGFjdGx5IHdoYXQgSSBnb25lIHRocm91Z2ggdGhhdCBJIHN0YXJ0ZWQgdHJ1c3RpbmcgbXkgb3duIGZlZWxpbmdzIGFuZCBwZXJzcGVjdGl2ZXMuLiAKQmVjYXVzZWluZWVkb25lMyB1CklmIHlvdSBibHVmZiBvZnRlbiB0aGVuIHRha2UgaXQgc2VyaW91c2x5IHRoZSBuZXh0IHJvdW5kIGFuZCB2aWNlIHZlcnNhLiAKTGluZSB0aGUgYmFyIG5vcnRoIHNvdXRoIChvciBzdGFuZGluZyB2ZXJ0aWNhbGx5IGlmIG5lYXIgdGhlIHBvbGVzKSBpbiBzaWRlIGEga2lsbi4gCldlIGFsc28gbmVlZCB0byBiZSBhd2FyZSBvZiBvdXIgbmF0dXJhbCBpbmNsaW5hdGlvbiAgIHdoZXJlIHdlIGZlZWwgdGhlIG1vc3QgY29tZm9ydGFibGUuIApEYXkgdGhyZWUgIHNxdWF0LCBiZW5jaCwgYmFjayBhbmQgdHJpIHdvcmsuIApUaGV5IHNjYW1taW5nIG1vbmV5IGZyb20gcGVvcGxlIHdobyBjYW4gYWZmb3JkIHRvIGxvc2UgaXQgYW5kIGFyZSB0b28gZHVtYiB0byByZWFsaXplIGl0LCBidXQgdGhleSBhcmVuIGdvb2QgZW5vdWdoIGF0IGFueXRoaW5nIHRvIGdldCBvdXQgb2YgdGhlaXIgaG9wZWxlc3MgZG93bndhcmQgc2xpZGUuLiAKT25lIGd1eSBoZWxkIG15IGhhbmQgd2hpbGUgd2Ugd2VudCB0byB0aGUgem9vIGFuZCBpdCB3YXMgc3dlZXQuIApEdXJpbmcgYSAxOTkwIGNvbmZlcmVuY2Ugc3BvbnNvcmVkIGJ5IHRoZSBwcm9ncmFtLCBhbiBhcHBlYWwgd2FzIG1hZGUgdG8gYXR0ZW5kZWVzIHRvIGNvbWUgdXAgd2l0aCBhIG1vcmUgcGVybWFuZW50IHNvbHV0aW9uIHRvIHRoZSBwcm9ibGVtLiAKV2UgZXhwZWN0ZWQgYSBtaW5pIExhcyBWZWdhcywgaXQgd2FzIG5vdGhpbmcgbGlrZSBpdC4gCiJXZSBoYXZlIHRvIGdldCB0aGVtIHNldCBvbiB0aGUgYmFzZXMuIFdlIGhhdmUgdG8gcHV0IHRoZSBwbGF5ZXIgdHJhY2tpbmcga2l0cyBpbi4gCk9TRkkgbWFuZGF0ZWQgbW9ydGdhZ2Ugc3RyZXNzIHRlc3QgaGFzIGxlZnQgc29tZSBidXllcnMgb24gdGhlIHNpZGVsaW5lcyB3aG8gaGF2ZSBzdHJ1Z2dsZWQgdG8gcXVhbGlmeSBmb3IgdGhlIHR5cGUgb2YgaG9tZSB0aGV5IHdhbnQgdG8gYnV5LCBHdXJjaGFyYW4gQmhhdXJhLCBUUkVCIHByZXNpZGVudCwgc2FpZCBpbiBhIHN0YXRlbWVudC4gaXMgYSBmZWRlcmFsIGJ1ZGdldCBhbmQgZWxlY3Rpb24gb24gdGhlIGhvcml6b24uIEl0IHdpbGwgYmUgaW50ZXJlc3RpbmcgdG8gc2VlIHdoYXQgcG9saWN5IG1lYXN1cmVzIGFyZSBhbm5vdW5jZWQgdG8gaGVscCB3aXRoIGhvbWUgb3duZXJzaGlwIGFmZm9yZGFiaWxpdHkuIFRoZSBmYWN0IG5ldyBsaXN0aW5ncyBmZWxsIG1vcmUgdGhhbiBzYWxlcyBzdWdnZXN0cyBjb25kaXRpb25zIGJlY2FtZSB0aWdodGVyIG92ZXIgdGhlIHBhc3QgeWVhciwgc3VwcG9ydGluZyBwcmljZSBncm93dGgsIHRoZSBib2FyZCBzYWlkLiBBdmVyYWdlIGhvbWUgcHJpY2VzIHJvc2UgMS42IHBlciBjZW50IGZyb20gYSB5ZWFyIGVhcmxpZXIgdG8gJDc4MCwzOTcuCkkgd291bGQgc2F5IHRyZWF0aW5nIHdvcmRzIGFzICJhdG9taWMiIHdoZW4gZmlyc3QgbGVhcm5pbmcgYSBsYW5ndWFnZSBpcyBwcmV0dHkgbmF0dXJhbC4gV2UgdGVuZCB0byBsb29rIGZvciBsaXRlcmFsIHRyYW5zbGF0aW9ucyBiZXR3ZWVuIGxhbmd1YWdlcyBzbyB5b3UgZmVlbCBsaWtlIHlvdSBmdWxseSB1bmRlcnN0YW5kIHdoYXQgaXMgYmVpbmcgc2FpZC4gCk15IGZhdm9yaXRlIGV4ZXJjaXNlIGlzIGV4aGFsaW5nIG9uIGEgInoiIHdoaWNoIGhlbHBzIGVzdGFibGlzaCBzdXBwb3J0IGZvciB5b3VyIHZvaWNlLi4gCjUyKSBQb2tlciBGYWNlLyBTcGVlY2hsZXNzLyBZb3VyIFNvbmcgdy9FbHRvbiBKb2huIChNZWRsZXkpLiBHZXQgaXQgb24gaVR1bmVzLiA1MykgSGVsbG8gSGVsbG8gYnkgRWx0b24gSm9obiAoZmVhdC4gClNvcnJ5IHRvIGJvdGhlciB5b3UgYWdhaW4sIGJ1dCBhbSBJIG1pc3Npbmcgc29tZXRoaW5nP3JlZGRpdHJhc2FsZ2h1bCAgNyBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ29BbWFjbSB0YWhyaWsgZmlsYW4gZGVpbGRpLCBvIHNlbmluIHlha3RybWFuLiAKQmFkIG5ld3MuIApTaGUgaXMgdGhlIGxlYXN0IHByb2dyZXNzaXZlIHBlcnNvbiBjdXJyZW50bHkgcnVubmluZy4gClBsYXllcnMgZGVwb3NpdCBpZGVudGljYWwgYW1vdW50cyBvZiBtb25leSB3aXRoIHRoZSB0b3VybmFtZW50IGRpcmVjdG9yIG9yIHdlYnNpdGUuIEV4YW1wbGUsICQ1MC4gCkFsc28gR1RPIHdpbGwgbm90IGdpdmUgdGhlIG1vc3Qgb3B0aW1hbCByZXN1bHQgaW4gZXZlcnkgaW5kaXZpZHVhbCBzaXR1YXRpb24uIEZvciBleGFtcGxlLCBzYXkgaW4gYSBnYW1lIG9mIGhlYWRzIHVwIHBva2VyLCB5b3Ugbm90aWNlIHlvdXIgb3Bwb25lbnQgd2lsbCBjYWxsIGFueSBiZXQgeW91IG1ha2Ugb24gdGhlIHJpdmVyIG9uY2UgaGUgY2hlY2tzIHRvIHlvdS4gCkhlcmUncyB0aGUgY29uY3JldGUgdmVyc2lvbiBvZiB3aGF0IGhhcyB0byBiZSBiYWxhbmNlZDogdGhlIHBsYWludGlmZnMnIHN1bmsgY29zdHMgZnJvbSB0aGUgdHJpYWwgbGV2ZWwgYWdhaW5zdCB0aGUgcG9zc2libGUgYWRkZWQgY29zdCBvZiBnb2luZyBmb3J3YXJkLiBJbiB0aGlzIGVxdWF0aW9uLCBzaW5jZSBKdWRnZSBNaWxsZXIgc3R1Y2sgdGhlIHBsYWludGlmZnMgd2l0aCB0aGUgbGlvbidzIHNoYXJlIG9mIHRoZSBleHBlbnNlcywgYXBwZWFsaW5nIG9ubHkgbWFrZXMgc2Vuc2UuCk9oLCBhbmQgdGhyb3dzIGZ1cm5pdHVyZSBvZmYgaGlzIGJhbGNvbnkuIEhlIGRpZCBhIGdyZWF0IGpvYiBsYXN0IHllYXIgZm9yIHVzLCBhbmQgSSBkb24gYmxhbWUgaGltIGZvciB3YW50aW5nIHRvIGNhc2ggaW4gb25lIGxhc3QgdGltZS4gCkkgd2lsbCB1c2UgYW4gYW5hbG9neSwgb2J2aW91c2x5IG5vdCBpZGVudGljYWwsIGJ1dCBqdXN0IHRvIG1ha2UgbXkgcG9pbnQuIEltYWdpbmUgc29tZW9uZSB3aG8gSSB3YXMgYXJndWluZyB3aXRoIGF0IGEgY29uc3RydWN0aW9uIHNpdGUgZmlyZWQgYSBuYWlsIGd1biBuZWFyIG1lIHRvIHNjYXJlIG1lLCBidXQgdGhlbiB0aGUgbmFpbCByaWNvY2hldGVkIGFuZCBhY3R1YWxseSBoaXQgbWUgaW4gdGhlIGhlYWQuIElmIHRoZSBuZXdzIHJlcG9ydGVkIHRoYXQgSSB3YXMgZm9vbGlzaGx5IG5vdCB3ZWFyaW5nIGEgaGVsbWV0LCB3b3VsZG4gdGhhdCBzZWVtIGxpa2UgdGhleSB3ZXJlIGEgbGl0dGxlIGJpYXNlZD8gRG9lc24gaXQgc2VlbSB0byByZW1vdmUgc29tZSByZXNwb25zaWJpbGl0eSBmcm9tIHRoZSBwZXJzb24gd2hvIGZpcmVkIHRoZSBuYWlsPwooUHJpdmFjeSBQb2xpY3kpRmFjZWJvb2sgTG9naW5Zb3UgY2FuIHVzZSB0aGlzIHRvIHN0cmVhbWxpbmUgc2lnbmluZyB1cCBmb3IsIG9yIHNpZ25pbmcgaW4gdG8geW91ciBIdWJwYWdlcyBhY2NvdW50LiAKQW1lcmljYW5zIHJlYWxseSBkb24gd2FudCB0byBhZG1pdCB0aGF0IHdlIHN0aWxsIHBhcnRpY2lwYXRlIGluIGJvdGggdGhlIGlkZW9sb2d5IG9mIGV1Z2VuaWNzIGFuZCB0aGUgcHJhY3RpY2Ugb2YgaXQgdGhyb3VnaCBtZWRpY2luZS4gVGhlIGlkZW9sb2d5IG9mIGV1Z2VuaWNzIHNhaWQgdHJhaXRzIHN1Y2ggYXMgaW50ZWxsaWdlbmNlIG9yIG11c2ljYWwgc2tpbGxzIGFyZSBpbmhlcml0YWJsZSBhcyBvcHBvc2VkIHRvIHRoZSByZXN1bHQgb2YgdXBicmluZ2luZy4gClRoZWlyIGZsZXhpYmlsaXR5IGFuZCB0aGVpciBwcmljZSBmcmFjdGlvbiBvZiB0aGUgY29zdCBvZiBvdGhlciBzbWFsbCBob3VzaW5nIG9wdGlvbnMgdGhlbSBhdHRyYWN0aW5nIGJ1enogb24gc29jaWFsIG1lZGlhLiBUaGV5IGNhbiBiZSBwdXQgdXAgaW4gYXMgbGl0dGxlIGFzIG9uZSBkYXkuLiAKSSBkb24gaGF2ZSBtYW55IHRpcHMgcmVnYXJkaW5nIGVhdGluZyBoZWFsdGhpbHkgdGhvdWdoLCBJIHN0aWxsIGVhdCBtYW55IGJ1cmdlcnMgYW5kIGZyaWVzLCB0aGVyZSBhcmUgYSB0b24gb2Ygb3B0aW9ucyByZWdhcmRpbmcgdmVnZXRhcmlhbiBidXJnZXJzIGluIG91ciB0b3duLCB0aG91Z2ggbW9zdCByZXN0YXVyYW50cyBvZmZlciBvbmx5IG9uZSBvciwgYXQgbW9zdCwgdHdvLiBNYW55IHBlb3BsZSBkb24gbGlrZSBtZWF0IHJlcGxhY2VtZW50cywgSSBwZXJzb25hbGx5IGRvIGVuam95IG1vc3Qgb2YgdGhlbS4gWW91IGhhdmUgdG8gdHJ5IGl0IG91dCB5b3Vyc2VsZiwgYnV0IHRoYXQgcmVhbGx5IGlzIHRoZSBmdW4gb2YgaXQgYWxsIDogKQpIZSBhbHNvIGxvdmVkIHRvIHRlYWNoIGN1cmxpbmcsIGEgc3BvcnQgaW4gd2hpY2ggaGUgd2FzIHZlcnkgaW50ZXJlc3RlZCBhbmQgdG8gd2hpY2ggaGUgZXhjZWxsZWQgYXQgYW5kIHdvbiBtYW55IGNoYW1waW9uc2hpcHMuIEJvYiBzaG93ZWQgYW4gaW50ZXJlc3QgaW4gZXZlcnlvbmUgaGUgbWV0LCBhbHdheXMgYXNraW5nIHdoYXQgc2Nob29scyB0aGV5IHdlbnQgdG8gYW5kIHdobyB0aGVpciB0ZWFjaGVycyBoYWQgYmVlbi4gCkFzIGEgcmVzdWx0LCBub3cgaXMgbW9zdCBkZWZpbml0ZWx5IG5vdCB0aGUgdGltZSB0byBzdGFydCBhbiBhZCB0ZWNoIGNvbXBhbnksIGVzcGVjaWFsbHkgY29uc2lkZXJpbmcgdGhhdCB2ZW50dXJlIGNhcGl0YWwgaW52ZXN0bWVudCBvcHBvcnR1bml0aWVzIGFyZSBhbGwgYnV0IGRyeWluZyB1cC4gU3RyZWFtaW5nIHNlcnZpY2VzIGxpa2UgTmV0ZmxpeCBhcmUgc2VlaW5nIGJpZyBnYWlucywgZXZlbiBhcyBEaXNuZXkgcHJlcGFyZXMgdG8gZW50ZXIgdGhlIHN0cmVhbWluZyBtYXJrZXQgaW4gbGF0ZSAyMDE5LiAKVGhlIGZhbWlseSB0aGFua3MgRHIgRGF2aWQgSWJzZW4gZm9yIGhpcyB3ZWVrbHkgdmlzaXRzIGFuZCBjYXJlIGZvciBEYWQsIFRhc29zIEthcGVybmVrYXMgb2YgT3NoYXdhIEhlYXJpbmcgQWlkIENsaW5pYyBhbmQgdGhlIHdvbmRlcmZ1bGx5IGNhcmluZyBzdGFmZiBvZiBUaGUgVmlsbGFnZSBvZiBUYXVudG9uIE1pbGxzIGFuZCBDQ0FDIHN0YWZmLiBBdCBEb3VnJ3MgcmVxdWVzdCwgYSBwcml2YXRlIHNlcnZpY2Ugd2lsbCBiZSBoZWxkLi4gCkkgdGhpbmsgbXkgdm9pY2VtYWlsIGhhcyBiZWVuIGZ1bGwgc2luY2UgMTF0aCBncmFkZS4uIApQTVUgZW5vcm1vdXMgY29tbW9uIGJldHRpbmcgcG9vbCBhbmQgdGhlIGFycmF5IG9mIHNpbXBsZSBhbmQgZXhvdGljIGJldHRpbmcgcHJvZHVjdHMgbWFrZSBwYXJ0bmVyc2hpcHMgd2l0aCBQTVUgcGFydGljdWxhcmx5IGF0dHJhY3RpdmUgdG8gZm9yZWlnbiBob3JzZSByYWNlIGJldHRpbmcgb3BlcmF0b3JzIGxvb2tpbmcgdG8gb2ZmZXIgbW9yZSBwcm9maXRhYmxlIGJldHRpbmcgcHJvZHVjdHMgdG8gdGhlaXIgYmV0dGluZyBjb21tdW5pdHkgb24gUE1VIElUIHBsYXRmb3JtLiAKRGVzcGl0ZSB0aGUgcG9wdWxhcml0eSBvZiBwb2tlciwgdGhvdWdoLCB2ZXJ5IGZldyBwZW9wbGUga25vdyBtdWNoIGFib3V0IHBva2VyIGNoaXBzIG9yIHRoZWlyIHN0YW5kYXJkIGRlbm9taW5hdGlvbnMuIApUaGV5IGNhbiBldmVuIHN3aXRjaCBhbW9uZyBwZXJzcGVjdGl2ZXMgYnkgc3BvdHRpbmcgb3RoZXIgY2FtZXJhcyBhbmQgaGl0dGluZyBhIGJ1dHRvbi4gCkFuZCwgc28sIFdoaXRlIEhvdXNlIHByaW9yaXRpZXMgc2hpZnRlZCBzdWJ0bHkgdG8gcGxlYXNlIHRoZSBwbHV0b2NyYXRzIGFuZCB0cnkgdG8gbmV1dHJhbGlzZSB0aGUgVGVhIFBhcnR5IGZhbmF0aWNzIGJ5IGNvIG9wdGluZyB0aGVpciBwcm9ncmFtIHRoZSB3YXkgQmlsbCBDbGludG9uIGRpZCBpbiAxOTk2LiBJdCB3YXMgY2FsbGVkICJ0cmlhbmd1bGF0aW9uIiB0aGVuLiBPYmFtYSdzIG93biBzdXBwb3J0ZXJzIGNhbGwgaXQiYmV0cmF5YWwiIG5vdzsgT2JhbWEncyBwcm8gV2FsbCBTdHJlZXQgZWNvbm9taWMgdGVhbSBhc3N1cmVkIHRoZXkgd291bGRuJ3QgZ2l2ZSB0aGUgbWVuIG9uIFRoZSBTdHJlZXQgdG9vIG11Y2ggdG8gd29ycnkgYWJvdXQuCkxpZ2h0c2hvYXggIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IGhvdXJzIGFnbwpXaXRoIGV2ZXJ5IHBhZ2UsIHRoZSByZWxpZ2lvdXMgY29udmljdGlvbiBlbWJlZGRlZCBpbiBWaW5jZSBieSBoaXMgZmFtaWx5IGVyb2Rlcy4gCkl0IHdvdWxkIHN0YXJ0IHdpdGggYmlsbHMgdG8gbGltaXQgdGhlaXIgdm90aW5nIHJpZ2h0cywgbGltaXQgdGhlaXIgYWNjZXNzIHRvIGVkdWNhdGlvbiwgZXRjLiBUaGVuIHlvdSB3YWtlIHVwIG9uZSBkYXksIGFuZCB0aGV5IGJlIGJhbm5pbmcgdGhlbSBmcm9tIHB1YmxpYyBlZHVjYXRpb24uIApJIHJlY2VudGx5IGhhZCBhIHRlbmFudCdzIGNoZWNrIGJvdW5jZSwgYW5kIGhlIGNsYWltcyB0aGF0IGhlIHdhc24ndCBhd2FyZSBvZiBpdC4gCk91ciBkaXZlcnNlIGV2ZW50cyBjYXRlciB0byBkaWZmZXJlbnQgaW50ZXJlc3RzIGFuZCBwcm9tb3RlIGEgbm8gcHJlc3N1cmUgYXRtb3NwaGVyZS4gTWUgICBFdmVyIHNpbmdsZXMgbmVhciBtZSB1ayB3b25kZXJlZCB3aGV0aGVyIHRoZXJlIGFyZSBhbnkgU2VuaW9yIFNpbmdsZXMgbmVhciB5b3U/IEdldCBjaGF0dGluZyB0byBzZW5pb3JzIGluIHlvdXIgbG9jYWwgYXJlYSBhbmQgc3RhcnQgZ29pbmcgb24gZGF0ZXMhIE1lZXQgVGFtaWwgc2luZ2xlcyBmcm9tIHlvdXIgY2l0eSBhbmQgYXJvdW5kIHRoZSB3b3JsZC4gTWFueSBhcmUgd2FpdGluZyBvbmxpbmUgcmlnaHQgbm93Lk1lZXQgU2luZ2xlcyBOZWFyIE1lTWUsIGFuZCBnZXQgY2hhdHRpbmcgdG8gbG9jYWwgc2luZ2xlcyB0b2RheS4gCkhlIGxlZnQgd2l0aCBub3RoaW5nIGFuZCBzdGF5ZWQgd2l0aCBhIGZyaWVuZC4gClRoaXMgd2lsbCBjb250aW51ZSB0byBkaXZpZGUgdXMuIApPbmNlIEkgbWFkZSB1cCBteSBtaW5kIGZvciBteXNlbGYgb24gbXkgb3duIGFjY29yZCwgSSBmZWx0IHRoYXQgZ29pbmcgYmFjayBvbiBpdCB0aGlzIHRpbWUgd291bGQgbm90IG9ubHkgbGVzc2VuIG1lLCBidXQgbWFrZSBteXNlbGYgbmV2ZXIgaGF2ZSBmYWl0aCBpbiBteSBvd24gZGVjaXNpb25zIGV2ZXIuIEluIHRoZSBwYXN0IGF0dGVtcHRzIEkgYWx3YXlzIGhhZCBhbiBleGN1c2Ugb3Igc29tZSBzb3J0IG9mIGVtb3Rpb25hbCBvdXQgYXMgaW4sIEkganVzdCBsaXZlIGluIGEgZGlmZmVyZW50IGhvdXNlIHRoYW4gbXkgZmFtaWx5LCBpdCBvbmx5IHRha2luZyBhd2F5IHRoZSBsYXN0IHllYXJzIHdoaWNoIGFyZSBvbGQgcGVvcGxlIHllYXJzIHRoYXQgYXJlIG5vIGZ1biwgaWYgSSBkb24gc21va2UgSSBnZXQgb3JuZXJ5IGFuZCBiZWNvbWUgYW4gYXNzaG9sZSBzbyBzbW9raW5nIGlzIGhlbHBpbmcgc29jaWV0eSBieSByZWxpZXZpbmcgbXkgc3RyZXNzLCBJIGluaGFsZSBkZWVwZXIgdG8gcHJldmVudCBtb3JlIHNpZGVzdHJlYW0gc21va2UsIGlmIHRoZXkgYXJlIHBlb3BsZSB3aG8gd2lsbCBhY2NlcHQgbWUgZm9yIHdobyBJIGFtIHRoZW4gdGhleSB3aWxsIGFjY2VwdCBtZSBzbW9raW5nCk15IGV4cGVyaWVuY2Ugd2FzIFdBWSBtb3JlIHRoYW4gSSBleHBlY3RlZCwgYW5kIHdlIHJhbiBvdmVyIG9uIHRpbWUgYSBsaXR0bGUgd2l0aCBubyBleHRyYSBkb25hdGlvbiByZXF1aXJlZC4gCklmIHlvdSB0YWtlIGhpcyBub24gZHJ1Z2dlZCBzdGF0ZSBhcyBhIGNvbnRyb2wgc3RhdGUsIGl0IHByZXR0eSBlYXN5IHRvIHNldHRsZSB0aGUgcG9pbnQuIAoiVGhvc2Ugd2VyZSBteSBpbnN0cnVjdGlvbnMuIEkgd2FzIGF0IHlvdXIgRW1iYXNzeSBvbiBUaHVyc2RheSBhZnRlcm5vb24uIEkgY2F1Z2h0IHRoZSBSb21lIGV4cHJlc3MgYXQgc2V2ZW4gbydjbG9jay4iClRoZSBMT1JEIGZvcmV0b2xkIG1lIGEgZGF0ZSAnMTEgMTEgMTInLCBpbiBhIGRyZWFtIG9mIE1hcmNoIDUgMjAxMS4gSSBoYXZlIGFscmVhZHkgc2hhcmVkIHRoaXMgbWVzc2FnZSwgYmVjYXVzZSB3aGF0IHRoZSBMT1JEIHJldmVhbHMgaXMgdGhlIG9ubHkgdHJ1dGggYW5kIGl0IG11c3QgYmUgd2l0bmVzc2VkIGluIGEgdGltZWx5IGZhc2hpb24uIApCdXQgdGhlIG1vcmUgcHJpdmlsZWdlIGEgam91cm5hbGlzdCBoYXMgaW4gdGVybXMgb2YgcmFjZSwgY2xhc3MsIGV0Yy4sIHRoZSBtb3JlIGxpa2VseSB0aGF0IHRoYXQgcHJpdmlsZWdlIHdpbGwgcmVtYWluIGludmlzaWJsZS4gCkNyaW1pbmFsIGFuZCBjaXZpbCBjaGFyZ2VzIGZpbGVkIGluIE5ldyBZb3JrIGhhdmUgZm9yY2VkIG9ubGluZSBwb2tlciBzaXRlcyBQb2tlclN0YXJzIChiYXNlZCBpbiB0aGUgSXNsZSBvZiBNYW4pIGFuZCBGdWxsIFRpbHQgUG9rZXIgKGJhc2VkIGluIEFsZGVybmV5LCBpbiB0aGUgQ2hhbm5lbCBJc2xhbmRzKSwgYXMgd2VsbCBhcyBDYW5hZGEgYmFzZWQgQWJzb2x1dGUgUG9rZXIsIHRvIHN0b3AgZG9pbmcgYnVzaW5lc3Mgd2l0aCBBbWVyaWNhbnMuSXQgaXMgdGhlIGxhdGVzdCB1cGhlYXZhbCBmb3IgdGhlIGluZHVzdHJ5LCB3aGljaCBvdmVyIHRoZSBsYXN0IGRlY2FkZSBoYXMgZ3Jvd24gZnJvbSBub3RoaW5nIGludG8gb25lIHRoYXQgcmFrZXMgaW4gYW4gZXN0aW1hdGVkICQ1Ym4gKDMuMjVibikgZWFjaCB5ZWFyIGFuZCBpcyByZWd1bGF0ZWQgaW4gdmFzdGx5IGRpZmZlcmVudCB3YXlzIGluIGNvdW50cmllcyBhcm91bmQgdGhlIHdvcmxkLkFtZXJpY2EgaXMgdGhlIGJpZ2dlc3QgbWFya2V0LCB3aXRoIHVwIHRvIGEgbWlsbGlvbiBvbmxpbmUgcGxheWVycy4gCkhlIGJhc2ljYWxseSBrZXB0IGNoYW5naW5nIHRoZSBydWxlcyBzbyBoaXMgY2hvaWNlIGZvciBtb2RzIHdlcmUgdGhlIG9uZXMgc2VsZWN0ZWQuLiAKV2hlbiBjaG9vc2luZyBtb2lzdHVyaXplcnMsIHNlbGVjdCB0aG9zZSB0aGF0IGFyZSB3YXRlciBiYXNlZCBhbmQgb2lsIGZyZWUsIHRvIHByZXZlbnQgdGhlIHBvcmVzIGZyb20gY2xvZ2dpbmcuLiAKVGhlIHBhdGgsIHRvbywgaXMgZ29uZSwgc29tZXdoYXQuIAoiQnkgYm9hc3RpbmcgdGhhdCBoZSB3aWxsIGZpcmUgdGhlIGVudGlyZSBib2FyZCBlbiBtYXNzZSwgaGUgb2ZmZXJzIG5vIGNvbnNpZGVyYXRpb24gZm9yIHRoZSBuZWdhdGl2ZSBpbXBhY3RzIHRoYXQgaGUgd291bGQgdW5sZWFzaCBvbiByYXRlcGF5ZXJzIGFuZCBzaGFyZWhvbGRlcnMsIiB0aGUgc3RhdGVtZW50IGNvbnRpbnVlZC4KSWwgZXN0IG1ldW5pZXIgZXQgdHJhdmFpbGxlICBsYSBtZXVsZSBkZSBwaWVycmUgbWFpcyBkJ3VuZSBmYW9uIHBhcnRpY3VsaXJlIHZpc2libGVtZW50IGRvdWNlIHBvdXIgbGUgZ3JhaW4uIElsIGVzdCBib3VsYW5nZXIgZXQgZmFpdCB1biBwYWluIHF1aSB1dGlsaXNlIHNlcyBmZXJtZW50cyBpbnRlcm5lcy4gCkR1dGNoIHJlc2VhcmNoZXJzIHdhbnQgdG8gZW5jb3VyYWdlIHBhcmVudHMgb2Yga2lkcyB3aXRoIGF0dGVudGlvbiBkZWZpY2l0IGh5cGVyYWN0aXZpdHkgZGlzb3JkZXIgdG8gdHJ5IGEgc3BlY2lhbCBkaWV0IHRvIHNlZSBpZiBzb21lIG9mIHRoZSBzeW1wdG9tcyBtYXkgYmUgbGlua2VkIHRvIGNlcnRhaW4gZm9vZHMuSXQgY2FsbGVkIHRoZSBSZXN0cmljdGVkIEVsaW1pbmF0aW9uIERpZXQgKFJFRCkgYW5kIG1heSByZWR1Y2Ugb3IgZWxpbWluYXRlIEFESEQgc3ltcHRvbXMuSW4gYSBzdHVkeSBwdWJsaXNoZWQgaW4gdGhlIE1lZGljYWwgSm91cm5hbCBMYW5jZXQgKHNlZSBiZWxvdyksIDc4IHBlcmNlbnQgb2Yga2lkcyB3aG8gc3RheWVkIG9uIHRoZSBkaWV0IGZvciA1IHdlZWtzIGhhZCBmZXdlciBzeW1wdG9tcyBhbmQgc29tZSB3ZXJlIGFibGUgdG8gc3RvcCB0YWtpbmcgbWVkaWNhdGlvbi4gCkZsb3AgY29tZXMgQUs0LiAKTXkgZ3Vlc3MgaXMgdGhhdCBpdCBlbmQgd2l0aCBoaW0gcmVhbGl6aW5nIHRoYXQgaGUgZG9lcyBoYXZlIGZlZWxpbmdzLCBhbmQgc2F2aW5nIEVhcnRoIGZyb20gdGhlIGludmFzaW9uLCBidXQgYmVpbmcgZm9yZXZlciBjdXQgb2ZmIGZyb20gaGlzIHBlb3BsZSBpbiB0aGUgcHJvY2VzcywgbGlrZSBTZXZlbiBpbiBWb3lhZ2VyLiAKSW4gYW4gZWZmb3J0IHRvIHdhcmQgb2ZmIGZhdGlndWUgZnJvbSBiYWNrICB0byAgYmFjayBnYW1lcyBpbiBhIHNob3J0ZW5lZCA2NiBnYW1lIHNlYXNvbiBpbiAyMDExLCB0aGUgTGFrZXJzIHRyYXZlbGVkIHRvIGEgY3J5b3RoZXJhcHkgc3BhIGluIFNhY3JhbWVudG8sIENhbGlmLiBUaGUgcGxheWVycyB3ZXJlIHBsYWNlZCBpbiBhIHJvb20gd2l0aCBhIHRlbXBlcmF0dXJlIG9mIDYwIGRlZ3JlZXMgRmFocmVuaGVpdCBiZWxvdyAoIDUxIGRlZ3JlZXMgQ2Vsc2l1cykgZm9yIG9uZSBtaW51dGUuIEFmdGVyIHRoYXQsIHRoZXkgd2Fsa2VkIGludG8gYW4gYWRqYWNlbnQgcm9vbSB0aGF0IGhhZCBhIHRlbXBlcmF0dXJlIG9mIDIwMCBkZWdyZWVzIGJlbG93ICggMTI5IENlbHNpdXMpIGZvciB0aHJlZSBtaW51dGVzLiAKSSB0aGluayBhIHRhbGsgd2l0aCB5b3VyIGh1c2JhbmQgYWJvdXQgaGlzIGZlYXJzIHdpbGwgbGVhZCB0byBhIGNvbnZlcnNhdGlvbiBhYm91dCBib3RoIG9mIHlvdXIgZXhwZWN0YXRpb25zIGZvciB5b3VyIDEyIHlvIGFuZCBob3cgdG8gbW92ZSBmb3J3YXJkLiBHb29kIGx1Y2suClRoaXMgbWFrZXMgbWUgd29uZGVyIGFib3V0IHRoZSBxdWVzdGlvbiBvZiBKYXBhbmVzZSByYWNpc20gaG93IG11Y2ggb2YgaXQgaXMgbGluZ3Vpc3RpYyBhbmQgY3VsdHVyYWxseSBtb3RpdmF0ZWQgZGlzY3JpbWluYXRpb24vcHJlanVkaWNlIGluc3RlYWQgb2YgcmFjaWFsbHkgbW90aXZhdGVkIGRpc2NyaW1pbmF0aW9uL3ByZWp1ZGljZT8gVGhlbiBhZ2FpbiwgaW4gdGhlIFdlc3Qgd2UgdGVuZCBub3QgdG8gbWFrZSBhIGRpc3RpbmN0aW9uIGJldHdlZW4gY3VsdHVyYWxseSBtb3RpdmF0ZWQgZGlzY3JpbWluYXRpb24gYW5kIHJhY2lhbGx5IG1vdGl2YXRlZCBkaXNjcmltaW5hdGlvbi4gV2UgdGVuZCB0byBjYWxsIGV2ZXJ5dGhpbmcgcmFjaXNtIChoZW5jZSBkaXNsaWtpbmcgSXNsYW0gPSByYWNpc20pLi4gClYgSGUgd2FzIHJ1c2hlZCB0byBDb25uZWF1dCwgT2hpbywgSG9zcGl0YWw7IGp1c3Qgb3ZlciB0aGUgYm9yZGVyLiBXaGVuIGhlIGRpZWQgdGhyZWUgXyBkYXlzIGxhdGVyLCBvbiBoaXMgMTJ0aCBiaXJ0aCAgYSBnZW5lcmFsIHByYWN0aXRpb25lciB0ZWxlcGhvbmVkIENsZXZlbGFuZCBDbGluaWMgdG8gbm90aWZ5IGRvY3RvcnMsIHRoZSBraWRuZXlzIHdlcmUgYXZhaWxhYmxlLiwgXy4gRHIuIEJydWNlJ1N0ZXdhcnQgYW5kJ3R3byBpIGludGVybnMgc3BlZCB0aGUgNjAgbWlsZXMgdG8gQ29ubmVhdXQgdG8gcmVtb3ZlIHRoZScga2lkICBhbmQsIHdpdGgnIGEgcG9saWNlIGVzY29ydCBqIHJldHVybmVkIHRvdnRoZS4gCllvdSBzaW1wbHkgY2FuIGJlYXQgZXhwZXJpZW5jZS4gRGFuaWVsIE5lZ3JlYW51IHdlbnQgdGhhdCByb3V0ZS4gCjE0LCBhZnRlciBhIHR3byB3ZWVrIHNpZWdlLCBJU0lTIG9yZGVyZWQgdGhlIGVudGlyZSBwb3B1bGF0aW9uIG9mIEtvY2hvIHRvIGEgc2Nob29seWFyZCwgd2hlcmUgdGhleSBhc2tlZCB0aGUgbG9jYWwgbGVhZGVyIGlmIHRoZSB2aWxsYWdlcnMgd291bGQgY29udmVydCB0byBJc2xhbS4gClN0ZWlyLCBjaGllZiBleGVjdXRpdmUgYXQgU3R1ZGxleSwgYSBuYXRpb25hbCBicm9rZXJhZ2UgZmlybSB0aGF0IHJlcHJlc2VudHMgdGVuYW50cywgdG9sZCBUaGUgTmV3IFlvcmsgVGltZXM6ICJUaGVyZSBoYXMgYmVlbiBtb3JlIGRhbWFnZSB0byByZWFsIGVzdGF0ZSB2YWx1ZXMgaW4gdGhlIGxhc3QgZm91ciBtb250aHMgdGhhbiBpbiBhbnkgb3RoZXIgZm91ciBtb250aCBwZXJpb2QgW2V2ZXJdLiIgU3RlaXIgY2FsbGVkIHRoZSBmYWxsIG9mIHRoZSBtYXJrZXQgImFzdG9uaXNoaW5nLiIuIAoiTG9vaywgaGF2aW5nIG51Y2xlYXIgICBteSB1bmNsZSB3YXMgYSBncmVhdCBwcm9mZXNzb3IgYW5kIHNjaWVudGlzdCBhbmQgZW5naW5lZXIsIERyLiBKb2huIFRydW1wIGF0IE1JVDsgZ29vZCBnZW5lcywgdmVyeSBnb29kIGdlbmVzLCBPSywgdmVyeSBzbWFydCwgdGhlIFdoYXJ0b24gU2Nob29sIG9mIEZpbmFuY2UsIHZlcnkgZ29vZCwgdmVyeSBzbWFydCAgIHlvdSBrbm93LCBpZiB5b3UncmUgYSBjb25zZXJ2YXRpdmUgUmVwdWJsaWNhbiwgaWYgSSB3ZXJlIGEgbGliZXJhbCwgaWYsIGxpa2UsIE9LLCBpZiBJIHJhbiBhcyBhIGxpYmVyYWwgRGVtb2NyYXQsIHRoZXkgd291bGQgc2F5IEknbSBvbmUgb2YgdGhlIHNtYXJ0ZXN0IHBlb3BsZSBhbnl3aGVyZSBpbiB0aGUgd29ybGQgICBpdCdzIHRydWUhICAgYnV0IHdoZW4geW91J3JlIGEgY29uc2VydmF0aXZlIFJlcHVibGljYW4gdGhleSB0cnkgICBvaCwgZG8gdGhleSBkbyBhIG51bWJlciAgIHRoYXQncyB3aHkgSSBhbHdheXMgc3RhcnQgb2ZmOiBXZW50IHRvIFdoYXJ0b24sIHdhcyBhIGdvb2Qgc3R1ZGVudCwgd2VudCB0aGVyZSwgd2VudCB0aGVyZSwgZGlkIHRoaXMsIGJ1aWx0IGEgZm9ydHVuZSAgIHlvdSBrbm93IEkgaGF2ZSB0byBnaXZlIG15IGxpa2UgY3JlZGVudGlhbHMgYWxsIHRoZSB0aW1lLCBiZWNhdXNlIHdlJ3JlIGEgbGl0dGxlIGRpc2FkdmFudGFnZWQgICBidXQgeW91IGxvb2sgYXQgdGhlIG51Y2xlYXIgZGVhbCwgdGhlIHRoaW5nIHRoYXQgcmVhbGx5IGJvdGhlcnMgbWUgICBpdCB3b3VsZCBoYXZlIGJlZW4gc28gZWFzeSwgYW5kIGl0J3Mgbm90IGFzIGltcG9ydGFudCBhcyB0aGVzZSBsaXZlcyBhcmUgICBudWNsZWFyIGlzIHBvd2VyZnVsOyBteSB1bmNsZSBleHBsYWluZWQgdGhhdCB0byBtZSBtYW55LCBtYW55IHllYXJzIGFnbywgdGhlIHBvd2VyIGFuZCB0aGF0IHdhcyAzNSB5ZWFycyBhZ287IGhlIHdvdWxkIGV4cGxhaW4gdGhlIHBvd2VyIG9mIHdoYXQncyBnb2luZyB0byBoYXBwZW4gYW5kIGhlIHdhcyByaWdodCwgd2hvIHdvdWxkIGhhdmUgdGhvdWdodD8gICBidXQgd2hlbiB5b3UgbG9vayBhdCB3aGF0J3MgZ29pbmcgb24gd2l0aCB0aGUgZm91ciBwcmlzb25lcnMgICBub3cgaXQgdXNlZCB0byBiZSB0aHJlZSwgbm93IGl0J3MgZm91ciAgIGJ1dCB3aGVuIGl0IHdhcyB0aHJlZSBhbmQgZXZlbiBub3csIEkgd291bGQgaGF2ZSBzYWlkIGl0J3MgYWxsIGluIHRoZSBtZXNzZW5nZXI7IGZlbGxhcywgYW5kIGl0IGlzIGZlbGxhcyBiZWNhdXNlLCB5b3Uga25vdywgdGhleSBkb24ndCwgdGhleSBoYXZlbid0IGZpZ3VyZWQgdGhhdCB0aGUgd29tZW4gYXJlIHNtYXJ0ZXIgcmlnaHQgbm93IHRoYW4gdGhlIG1lbiwgc28sIHlvdSBrbm93LCBpdCdzIGdvbm5hIHRha2UgdGhlbSBhYm91dCBhbm90aGVyIDE1MCB5ZWFycyAgIGJ1dCB0aGUgUGVyc2lhbnMgYXJlIGdyZWF0IG5lZ290aWF0b3JzLCB0aGUgSXJhbmlhbnMgYXJlIGdyZWF0IG5lZ290aWF0b3JzLCBzbywgYW5kIHRoZXksIHRoZXkganVzdCBraWxsZWQsIHRoZXkganVzdCBraWxsZWQgdXMuIi4gClJ1c3NpYSBub3cgaGFzIGl0cyBvd24gbGl0dGxlIE1pbmlzdHJ5IG9mIFRydXRoLiBEbWl0cnkgTWVkdmVkZXYgaXNzdWVkIHRoZSBkZWNyZWUgdG8gY3JlYXRlIGEgbmV3IGJvZHkgd2l0aCBhIGxvbmcgYnV0IG1lYW5pbmdmdWwgbmFtZTogdGhlIFByZXNpZGVudGlhbCBDb21taXNzaW9uIGZvciBQcmV2ZW50aW9uIG9mIEZhbHNpZmljYXRpb24gb2YgSGlzdG9yeSB0byB0aGUgUHJlanVkaWNlIG9mIFJ1c3NpYSdzIEludGVyZXN0cy4gVGhpcyBDb21taXNzaW9uIHdpbGwgbW9uaXRvciAiYXR0ZW1wdHMgdG8gZmFsc2lmeSBoaXN0b3JpY2FsIGZhY3RzIGFuZCBldmVudHMiIHRoYXQgbWF5IHVuZGVybWluZSAidGhlIGludGVybmF0aW9uYWwgcHJlc3RpZ2Ugb2YgdGhlIFJ1c3NpYW4gRmVkZXJhdGlvbiIgYW5kIGNvb3JkaW5hdGUgZWZmb3J0cyBvZiBnb3Zlcm5tZW50IGluc3RpdHV0aW9ucyBvZiAiYWRlcXVhdGUgcmVzcG9uc2UgdG8gYW5kIG5ldXRyYWxpemF0aW9uIiBvZiBzdWNoIGF0dGVtcHRzLi4gCldoZW4gSmF5YXdhcmRlbmUgaGVsZCBNYWxpbmdhIGJhY2ssIGl0IHNob3VsZCBoYXZlIGJlZW4gdGhlIHNpZ25hbCBmb3IgRGhvbmkgdG8gdHJlYXQgaXQgbGlrZSBhIGxhc3Qgb3ZlciwgYmVjYXVzZSB5b3Ugd2lsbCByYXJlbHkgZ2V0IHJ1bnMgaW4gZG91YmxlIGZpZ3VyZXMgaW4gYSBNYWxpbmdhIG92ZXIgYXQgdGhlIGVuZC4gClRoZSBjb21wYW55IHNhaWQgaXRzIGNvbXBlbnNhdGlvbiBwYWNrYWdlIGlzIGNvbXBhcmFibGUgdG8gb3RoZXJzIGluIHRoZSBzZWN0b3IgYW5kIEVtcGxveW1lbnQgU3RhbmRhcmRzIEFjdCByZXF1aXJlbWVudHMuIApUbyBzdGVyZW90eXBlIGV2ZXJ5b25lIHRoYXQgdXNlZCB0aGF0IHdvcmQgYXMgcmFjaXN0IGlzIHJldGFyZGVkIGFuZCB0ZWxscyBtZSBtb3JlIGFib3V0IGhvdyBwcmVqdWRpY2UgdGhleSB0aGVtc2VsdmVzIGFyZSB0aGFuIHRoZSBwZW9wbGUgdGhleSBhcmUgY29tcGxhaW5pbmcgYWJvdXQuIFRoZSB0b25lIGFuZCBjb250ZXh0IGFyZSBzbyBudWFuY2UgdGhhdCBibGFua2V0IHN0YXRlbWVudHMgbGlrZSB0aGF0IG1ha2VzIG1lIHNoYWtlIG15IGhlYWQuIApBaXJsaW5lcyBoYXZlIG1pbmltdW0gY29ubmVjdGlvbiB0aW1lcyB3aGVuIHRoZXkgc2VsbCBhbiBpdGluZXJhcnksIHNvIGlmIHRoZXkgc29sZCBpdCB0byB5b3UsIHRoZXkgdGhpbmsgeW91IHNob3VsZCwgaW4gYWxsIGxpa2VsaWhvb2QsIGJlIGFibGUgdG8gbWFrZSBpdC4gCiJJdCdzIGEgYmF0aCB3aXRoIGNpcmN1bGF0ZWQgd2F0ZXIgYW5kIGluIHRoZSBlbmQgaXQncyBvbmx5IHRoZSBwcmVzc3VyZSBmcm9tIHRoZSB3YXRlciBhbmQgY29sZCB0ZW1wZXJhdHVyZSB3aGljaCBicmluZ3MgdGhlIHNvZnQgdGlzc3VlIGluIHRoZSBsZWdzIGFuZCB0aGUgbG93ZXIgYm9keSBpdCdzIGxpa2UgSSBzYWlkIGEgZGlmZmVyZW50IHJlY292ZXJ5IHByb2Nlc3MuIFdoYXQncyBnb2luZyB0byBoYXBwZW4gdGhlcmUgaXMgeW91IGVuaGFuY2UgdGhlIG1ldGFib2xpc20gYW5kIHlvdSByZWR1Y2UgdGhlIGxhY3RpYyBhY2lkIGFuZCB5b3Ugc3RvcCB0aGUgbGl0dGxlIGJydWlzZXMgdGhlIGxpdHRsZSBibGVlZGluZy4KSW5jcmVhc2luZyB0aGUgbnVtYmVyIG9mIGNvcGllcyBvZiBnaXZlbiBzZXF1ZW5jZSB0byB1c2FibGUgYW1vdW50cyBjYW4gYmUgYWNjb21wbGlzaGVkIHVzaW5nIHBvbHltZXJhc2UgY2hhaW4gcmVhY3Rpb25zIChQQ1IpLiAKS2VlcCBpbiBtaW5kIHRoYXQgcG9rZXIgaXMgb2Z0ZW4gcGxheWVkIHdpdGggbXVsdGlwbGUgZGVja3MsIG1lYW5pbmcgdGhhdCB5b3UgY2FuIGluIGZhY3Qgb2YgaGFuZHMgdGhhdCB0aWUgZWFjaCBvdGhlci4gCkltYWdpbmUgdHdvIGdpYW50cyBwbGF5aW5nIEplbmdhIGFuZCB5b3UgaGF2ZSB0aGUgSW50ZXJsYWNlLCBhbiBhcGFydG1lbnQgY29tcGxleCB0aGF0IGlzIGF0IG9uY2Ugb3V0cmFnZW91cyBhbmQgYXdlIGluc3BpcmluZy4gT2xlIFNjaGVlcmVuLCBpdHMgYXJjaGl0ZWN0LCB3YXMgc28gYm9yZWQgd2l0aCB0aGUgY2x1c3RlcnMgb2YgaGlnaCByaXNlcyB0aGF0IHdlcmUgc3ByaW5naW5nIHVwIGFsbCBvdmVyIEFzaWEsIHRoYXQgd2hlbiBoZSBnb3QgYSBicmllZiB0byBmaXQgMSwwNDAgdW5pdHMgb3ZlciAyMCBhY3JlcywgaGUgZGVjaWRlZCB0byB0cnkgYSBub3ZlbCBhcHByb2FjaC4gCldlIGNhbiBhcmd1ZSBhbmQgdGFrZSB3aGFja3MgYXQgdGhlIE9MRyBhbGwgZGF5IGJ1dCB0aGUgZmFjdCBvZiB0aGUgbWF0dGVyIGlzIHRoZXkgYXJlIG5vdCBnb2luZyB0byBnbyBiYWNrIG9uIHdoYXQgdGhpcyBjb3VuY2lsIGhhcyBzYWlkLCBiZWNhdXNlIHRoYXQgaW4gdGhlaXIgbWFuZGF0ZS4gCkdvaW5nIGluIG9yZGVyIGZyb20gdGhlIHNldmVuIG1lYW5zIHlvdSB3aWxsIHBsYXkgY2FyZHMgdGhhdCBkZXNjZW5kIHRvIHRoZSB0d28gY2FyZCBvZiB0aGF0IHN1aXQgb24gdGhlIGxlZnQgaGFuZCBzaWRlIG9mIHRoZSBzZXZlbiBhbmQgb24gdGhlIHJpZ2h0IGhhbmQgc2lkZSwgdGhlIGNhcmQgdmFsdWVzIHdpbGwgYXNjZW5kIHRvIHRoZSBhY2UuWzNdCkZhY2luZyBtaW4gcmFpc2UgaSBsaWtlIGNhbGxpbmc+cmFpc2luZz5mb2xkaW5nIGRlcGVuZGluZyBvbiBwbGF5ZXIuIFlvdSBoYXZudCBzYWlkIHdoYXQga2luZCBvZiBwbGF5ZXIgaGUgaXMgKGlmIGhlIGxpa2VzIHRvIGJsdWZmIG9yIGlzIG1lZ2Egbml0KSBNaW4gcmFpc2UgbG9va3MgdmVyeSBzdHJvbmcgc28gaW0gbm90IGdldHRpbmcgdGhlIGhhbmQgc2FuaXRpemVyIGp1c3QgeWV0Li4gCldobyBnaXZlcyBhIHNoaXQ/IFNlcmlvdXNseS4gTGV0J3Mgc2F5IHlvdSB0YWtlIGEgcGljdHVyZSBvZiBhIHNwb3J0cyBnYW1lIHlvdSdyZSBhdC4gV2h5IGRvIHlvdSBjYXJlIGlmIHlvdXIgZGF0YSBpcyAibWluZWQiPyBMZXQncyBzYXkgaXQgZ29lcyB0byBhZHZlcnRpc2Vycy4gCjUgICA4ICwgZGVwZW5kaW5nIHdoZXJlIHlvdSBhcmUuCjAxLzE1LzIwMTkgMDY6MzMgUE0gTVNUICAgVGhlIGJhc2ljcyBjbGFzcyBpcyBhbiBpbnRyb2R1Y3Rpb24gdG8gdGhlIGJ1bmdlZSBzeXN0ZW0uIEl0IGxvb2tzIGxpa2UgYSBjbGltYmluZyBoYXJuZXNzIGF0dGFjaGVkIHRvIGEgYnVuZ2VlIGNvcmQuIFRoZSBpbnN0cnVjdG9yIGRlbW9uc3RyYXRlcyB0aGUgZXhlcmNpc2UgbW92ZXMsIGJyZWFrcyB0aGVtIGRvd24gYW5kIHRoZW4gdGhlIHN0dWRlbnRzIHByYWN0aWNlIHRoZSBleGVyY2lzZS4gRnVsbCBTdG9yeQoyMS4sIGJlcmFyYmVpdGV0ZSBBdWZsYWdlLiBNaXQgNDIyIHRlaWxzIG1laHJmYXJiaWdlbiBBYmJpbGR1bmdlbiwuIDM2IFRhYmVsbGVuIHVuZCAxODIgQmVpc3BpZWxlbi4gClNoZSdzIGEgbmlnaHRtYXJlLCBmdWxseSByYWNpc3QsIGp1ZGdtZW50YWwsIGFuZCBwZXJmZWN0bHkgaGFwcHkgdG8ga2VlcCBoZXIgc29uIHRvIGhlcnNlbGYgZm9yZXZlci4gClNvcmUgQWNoaWxsZXMgSGVlbCBUZW5kb24KRm9yIDMgd2Vla3MgSSBkaWRuJ3QgaGVhciBhIHBlZXAsIEkgY2FsbGVkIHRoZW0gb25jZSB3ZWVrLiAKVGhlIHBhcmVudCBjb21wYW55LCBjYWxsZWQgODg4IEhvbGRpbmdzLCBpcyBsaXN0ZWQgb24gdGhlIExvbmRvbiBTdG9jayBFeGNoYW5nZSB3aGVyZSBvbmx5IHRoZSBiaWdnZXN0IGNvbXBhbmllcyBtYWtlIGl0LCBhbmQgc3RyaWN0bHkgYWRoZXJlcyB0byB0aGUgcnVsZXMgYW5kIHJlZ3VsYXRpb25zIHdpdGggd2hpY2ggdGhlIGN1c3RvbWVyIGF0IDg4OCBTcG9ydCBpcyBwcm90ZWN0ZWQuIFRoaXMgb3BlcmF0b3IgaGFzIHdvbiBhd2FyZHMgZm9yIGJlaW5nIGEgcmVsaWFibGUgb3BlcmF0b3IgYW5kIHRoZSBtb3N0IHJlY2VudCBpcyB0aGUgMjAxMCBNb3N0IFNvY2lhbGx5IFJlc3BvbnNpYmxlIE9wZXJhdG9yIGF3YXJkLiAKQjogTm8sIFN0ZXZlLiBZb3UgY2FuIGp1c3QgYXNrIHBlb3BsZSB0byBjYWxsIHlvdSB3aGF0ZXZlciB5b3Ugd2FudCEgVGhhdCBjcmF6eSEgSXQgb2ZmZW5kcyBtZSEgSSBub3QgZ29pbmcgdG8gbGV0IHlvdSBmb3JjZSB5b3VyIHZpZXdzIG9uIG1lIQpBdCB0aGlzIHBvaW50IGl0IG5vdCByZWFsbHkgYSBncmVhdCBST0kgcmVsYXRpdmUgdG8gcmlzayBhbmQgZWZmb3J0IHVubGVzcyB0aGUgcHJvcGVydHkgdmFsdWUgY29udGludWVzIHRvIGFwcHJlY2lhdGUgKHdoaWNoIHNlZW1zIHVubGlrZWx5KS4gQWRkaXRpb25hbGx5IHNlbGxpbmcgYSBwcm9wZXJ0eSBpcyBhIGxvdCBtb3JlIHdvcmsgYXMgYSBub24gcmVzaWRlbnQgc28gYXQgdGhpcyBwb2ludCBJIHByb2JhYmx5IGp1c3QgZ29pbmcgdG8gc2l0IG9uIGl0IHVudGlsIHN1Y2ggYSB0aW1lIEkgbW92ZSBiYWNrIG9yIHBvc3NpYmx5IHdoZW4gbXkgbW9ydGdhZ2UgY29tZXMgdXAgZm9yIHJlbmV3YWwuLiAKVGhlbiB5b3Ugd2lsbCBoYXZlIDUwIHN1biBhdCB0aGUgc3RhcnQgcHV0IGluIGEgcGxhbnQgd29ydGggNTAvMjUuIApQb2xpY2UgQmVsaWV2ZSBhIERlYXJib3JuIEhlaWdodHMgTWFuIFB1cnBvc2VmdWxseSBCdXJudCBQcm9wZXJ0eSBPd25lZApZb3UgY291bGQgdGFsayB0byBoaW0gbGlrZSB0byB5b3VyIGJlc3QgYnVkZHkgb3IgY2xvc2VzdCBmYW1pbHkgbWVtYmVycywgd2hpY2ggd2FzIHdoZXJlICJ0aG91IiB3YXMgc3RpbGwgdXNlZCBhdCB0aGUgdGltZS4uIApPSywgbGV0J3Mgc2F5IHlvdSBkb24ndCBoYXZlIGFueSB0aW1lIHRvIHdyaXRlIG91dCBhIHdob2xlIHBvb2wgb3IgaXQncyBub3QgeW91ciBkZWFsLiAKSGUgZ2V0cyByZWFkeSBmb3Igd29yayBhbmQgSSBnZXQgb3VyIGRhdWdodGVyIHVwIGFuZCB0aGVuIGhlbHAgaGltIGdldCByZWFkeSBpbiBhbnkgd2F5IEkgY2FuLiAKVGhyZWUgbmV3IHNwbGFzaCBwYWRzLCAkMTAwLDAwMCB0byBiZXR0ZXIgbWFpbnRhaW4gdHJhaWxzLCBhbmQgYmVlZmluZyB1cCBzZWN1cml0eSBhdCB0aGUgZG93bnRvd24gYXF1YXRpYyBjZW50cmUgYW5kIG5laWdoYm91cmluZyBidXMgdGVybWluYWwsIGFyZSBhbHNvIGluY2x1ZGVkIGluIHRoZSBidWRnZXQuIApZb3UgY2FuIGFsd2F5cyBjaGFuZ2UgdGhlIGluZm9ybWF0aW9uIHlvdSBzaGFyZSB3aXRoIHVzIGJ5IGVkaXRpbmcgeW91ciBwcm9maWxlLiBFcGFwZXIsIERpZ2l0YWwgQWNjZXNzLCBTdWJzY3JpYmVyIFJld2FyZHMpLCBwbGVhc2UgaW5wdXQgeW91ciBQcmludCBOZXdzcGFwZXIgc3Vic2NyaXB0aW9uIHBob25lIG51bWJlciBhbmQgcG9zdGFsIGNvZGUuLiAKSSBzcGVlZGlseSB3ZWFyaW5nIGEgYnJhIGFuZCBJIGxlYXZpbmcgdGhlIGFwYXJ0bWVudC4uIApjb25zdW1lciBjb3VydCB0ZWxscyByZWx1Y3RhbnQgaW5zdXJhbmNlIGZpcm1zCkkgYWNrbm93bGVkZ2UgdGhhdCBpZiB3ZSBhcmUgZ29pbmcgdG8gdXNlIG1pc3NpbGVzIG9yIGFueSBvdGhlciBtaWxpdGFyeSBmb3JjZSwgSSBjYW4gdGhpbmsgb2Ygb3RoZXIgcGxhY2VzIHdoZXJlIHRoZSBodW1hbml0YXJpYW4gbmVlZCBpcyBncmVhdGVyLiBUaGF0IGlzIGFsbCBJIGFja25vd2xlZGdlLgpMYW5kIGJhc2VkIGNhc2lubyBoYXZlIHNvbWUgZmluYW5jaWFsIHByb2JsZW1zIGFuZCBlc3BlY2lhbGx5IGluIEZyYW5jZS4gQSBsb3Qgb2YgcmVhbCBjYXNpbm9zIGhhdmUgdG8gYmUgY29uZnJvbnRlZCB0byBhIGxvdCBvZiBzaXR1YXRpb24gc3VjaCBhcyByZWNvdmVyeSBjb21tZXJjZSwgZWNvbm9taWNzIHN1c3BlbnNpb24uIFRoZSBiZWF1dGlmdWwgd29ybGQgb2YgY2FzaW5vIGlzIHN0YXJ0aW5nIHRvIGRpc2FwcGVhciB0aHJvdWdoIHRoZSBpbnZhc2lvbiBvZiBvbmxpbmUgY2FzaW5vIGFuZCBhIGxvdCBvZiBsZWdpc2xhdGlvbiBoYXMgYmVlbiBjcmVhdGVkIHdoaWNoIGRvbid0IGhlbHAgY2FzaW5vLiAKSSBpbnRvIHRoZSBlYXJseSAxMTAwcyB3aXRoIG15IDJuZCBLaW5nICgxc3QgYWZ0ZXIgQWxmb25zbykgYW5kIGhhdmUgbWFuYWdlZCB0byBnYWluIGFuZCBrZWVwIEdhbGljaWEgYW5kIENhc3RpbGUgYW5kIGhhdmUgc2xvd2x5IGJ1dCBzdXJlbHkgZXhwYW5kaW5nLiBUaG91Z2ggcGVyaGFwcyBhIGxpdHRsZSBzbG93ZXIgdGhhbiBJIHNob3VsZCBnaXZlbiB0aGF0IEkgcmVhbGx5IG9ubHkgdXNlZCBDbGFpbXMgcmF0aGVyIHRoYW4gSG9seSBXYXJzIHVwIHVudGlsIHRoaXMgcG9pbnQsIHBsdXMgSSB0b29rIGEgZGV0b3VyIGZvciBhIGNvdXBsZSBjbGFpbXMgaW4gQnJpdHRhbnkuLiAKQ1BVIGNvb2xlcjogSG9uZXN0bHkgSSBzY3JhcHBlZCB0aGlzIG9uZSBhcyB0aGUgV3JhaXRoIFByaXNtIGNvb2xlciBpbmNsdWRlZCB3aXRoIHRoZSAyNzAwWCBpcyBxdWl0ZSBjYXBhYmxlIG9uIGl0IG93bi4gQW5kIGl0IGhhcyBhIGJpdCBvZiBSR0Igb24gaXQsIHNvIGl0IGV2ZW4gbG9va3MgY29vbCA6KSBZb3UgY2FuIHNlZSBhIGJ1aWxkIHdpdGggaXQgYW5kIGhvdyBpdCBsb29rcyBpbiB0aGUgSDIwMCBoZXJlLiBTYXZlcyBhIGxvdCBvZiBtb25leSwgYW5kIGlmIHlvdSBmZWVsIGxpa2UgaXQsIHlvdSBjYW4gYWx3YXlzIHVwZ3JhZGUuCkV4cGxhaW4gdG8gbWUgaG93IE11c2lrZmVzdCBpcyBnb2luZyB0byBjb250cm9sIHRyYWZmaWMgYW5kIHRoZSBQYS4gTU9TRVIgaGFzIGJlZW4gYXJvdW5kIGxvbmcgZW5vdWdoIHRvIGhhdmUgc2VlbiB0aGUgb3JpZ2luYWwgUmFtb25lcyBpbiBhIHNtYWxsIGNsdWIgaW4gTmV3IEplcnNleSwgVTIgZnJvbSB0aGUgZm91cnRoIHJvdyBvZiBhIHRoZWF0ZXIgYW5kIEJvYiBEeWxhbidzIGJvcm4gYWdhaW4gdG91cnMuIEJ1dCBoZSBhbHNvIGhhcyB0aGUgbnVtYmVyIGZvciBBbGwgQW1lcmljYW4gUmVqZWN0cycgTmljayBXaGVlbGVyIG9uIGhpcyBjZWxsIHBob25lLCB3cm90ZSB0aGUgZmlyc3Qgc3RvcnkgZXZlciBkb25lIG9uIEphY2sncyBNYW5uZXF1aW4gYW5kIGh1bmcgb3V0IGluIFdpeiBLaGFsaWZhJ3MgaG90ZWwgcm9vbS4uIApEb2VzIGFuIGFjZSBjYXJkIGJlYXQgYSBxdWVlbiBjYXJkClRoZSBzYWludHMgYXJlIGFsaXZlIGluIENocmlzdC4gTWFyeSwgdGhlIFRoZW90b2tvcyAoR29kIGJlYXJlcikgZG9lcyBpbnRlcmNlZGUgZm9yIHVzIHRocm91Z2ggcHJheWVyLCBhcyBkbyBBTEwgdGhlIHNhaW50cy4gV2hlbiBhIHBlcnNvbiBhc2tzIHRoZSBUaGVvdG9rb3MsIG9yIGFueSBvdGhlciBzYWludCwgdG8gcHJheSBmb3IgdGhlbSwgaXQgaXMganVzdCBsaWtlIHdoZW4gd2UgYXNrIGZvciBhbnlvbmUgZWxzZSB0byBwcmF5IGZvciB1cy4gVGhvc2UgaW4gdGhlIENodXJjaCBhcmUgQUxJVkUgaW4gQ2hyaXN0LCBiZWNhdXNlIEdvZCBpcyB0aGUgR29kIG9mIHRoZSBsaXZpbmcgYW5kIG5vdCB0aGUgZGVhZC4gSWYgeW91IGRhcmUgY2xhaW0gdGhlIFRoZW90b2tvcyBhbmQgdGhlIFNhaW50cyBhcmUgZGVhZCwgdGhlbiB5b3UgY2FsbGluZyBDaHJpc3QgYSBsaWFyIGFuZCBhcmUgZGVueWluZyB0aGUgc2NyaXB0dXJlcy4gMyBGb3IgdGhpcyBpc2dvb2QgYW5kIGFjY2VwdGFibGUgaW4gdGhlIHNpZ2h0IG9mIEdvZCBvdXIgU2F2aW9yLCA0IHdobyBkZXNpcmVzIGFsbCBtZW4gdG8gYmUgc2F2ZWQgYW5kIHRvIGNvbWUgdG8gdGhlIGtub3dsZWRnZSBvZiB0aGUgdHJ1dGguIDUgRm9yIHRoZXJlIGlzIG9uZSBHb2QgYW5kIG9uZSBNZWRpYXRvciBiZXR3ZWVuIEdvZCBhbmQgbWVuLCB0aGUgTWFuIENocmlzdCBKZXN1cywgNiB3aG8gZ2F2ZSBIaW1zZWxmIGEgcmFuc29tIGZvciBhbGwsIHRvIGJlIHRlc3RpZmllZCBpbiBkdWUgdGltZSwgNyBmb3Igd2hpY2ggSSB3YXMgYXBwb2ludGVkIGEgcHJlYWNoZXIgYW5kIGFuIGFwb3N0bGUgSSBhbSBzcGVha2luZyB0aGUgdHJ1dGggaW4gQ2hyaXN0IGFuZCBub3QgbHlpbmcgYSB0ZWFjaGVyIG9mIHRoZSBHZW50aWxlcyBpbiBmYWl0aCBhbmQgdHJ1dGguCkkgd2FudCBldmVyeSBzaW5nbGUgc3R1ZGVudCB3aG8gY29tZXMgYWZ0ZXIgbWUgdG8gaGF2ZSB0aGUgc2FtZSBvcHBvcnR1bml0eVNoZSBvbmUgb2YgYSBncm93aW5nIG51bWJlciBvZiB0b3Agc3R1ZGVudHMsIGFsdW1uaSBhbmQgdGhlaXIgcGFyZW50cyBvcHBvc2luZyBhIHBvc3NpYmxlIHN3aXRjaCB0byBmdWxseSBzZW1lc3RlcmVkIGNsYXNzZXMuIEhlciB0aHJlZSBwYWdlIGxldHRlciBjaXRlcyBzdHVkeSBhZnRlciBzdHVkeSBzdXBwb3J0aW5nIHRyYWRpdGlvbmFsIGZ1bGwgeWVhciBjbGFzc2VzLiAKVG8gc2lnbiB1cCB5b3VyIHRlYW0sIGNhbGwgU3RvciBuIExvY2sgYXQgNDM1IDYzNSA5Njk2IGFuZCBwcm92aWRlIHRoZW0geW91ciBhZ2VuY3kgdGVhbSBuYW1lIGFuZCB3aGF0IHRpbWUgc2xvdCBpcyBiZXN0IGZvciB5b3VyIHRlYW0gdG8gcGFydGljaXBhdGUuIFdpbm5lcnMgd2lsbCBiZSBhbm5vdW5jZWQgb24gdGhlIGV2ZW50IEZhY2Vib29rIHBhZ2UuIFBsYXF1ZXMgYW5kIHByaXplcyB3aWxsIGJlIGF3YXJkZWQgdGhlIG5leHQgZGF5LiAKQWNjb3JkaW5nIHRvIFNlbmF0b3IgQmVybmllIFNhbmRlcnMsIHRoZXJlIHdpbGwgYmUgYW4gYW1lbmRtZW50IHByb3Bvc2VkIGZvciBzaW5nbGUgcGF5ZXIgaGVhbHRoIGNhcmUsIGJ1dApQZW5kYW50IGxlIGNvdXJzIG9uIHMnaW50cmVzc2UgZW4gZWZmZXQgIGwnb2NjYXNpb24gIGxhIGZvcm1hdGlvbiBkZXMgbW90cyBmcmFuYWlzIGQnb3JpZ2luZSBncmVjcXVlLiBNYWlzIGwndHltb2xvZ2llIGVzdCBsb2luIGQndHJlIGwnZXNzZW50aWVsIDogbCdlc3NlbnRpZWwgZXN0IGQnYWJvcmRlciBsZSB0ZXh0ZSBhdmVjIGxlIG1vaW5zIHBvc3NpYmxlIGRlIHJmcmVuY2VzIGF1IGZyYW5haXMuIApUaHVzLCBpZiBOaXhvbiB3YXMgaG9uZXN0IGhlIHdvdWxkIGhhdmUgbW9yZSBMaWtlbHkgdXNlZCwgIkkgbm90IGEgY3Jvb2suIiBJbiB0aGUgY2xhc3MsIHRoZSBsZWN0dXJlIHNhaWQgc29tZXRoaW5nIGFsb25nIHRoZSBsaW5lcyBvZiAiUGVvcGxlIHdobyBhcmUgbHlpbmcgdHJ5IHRvIGJlIHZlcnkgYWRhbWFudCBhYm91dCB0aGUgdHJ1dGg7IHdoZW4gTml4b24gc2FpZCAiSSBhbSBub3QgYSBjcm9vayIgaXRzIHRoYXQgbGFjayBvZiBjb250cmFjdGlvbiBtYWtlcyBoaW0gc2VlbSB2ZXJ5IGFkYW1hbnQgYWJvdXQgbm90IGJlaW5nIGEgY3Jvb2suIElmIHdhcyBoZSB0cnVseSBiZWluZyBob25lc3QgaGUgd291bGQgaGF2ZSBzYWlkICJJIE5PVCBhIGNyb29rLiIgdGhlIHN0cmVzc2VkIHdvcmQgYmVpbmcgTm90IHJhdGhlciB0aGFuICJJIEFNIG5vdCBhIGNyb29rIi4gSWYgeW91IGxpc3RlbiBjYXJlZnVsbHkgeW91IGNhbiBoZXJlIHRoZSBzdHJlc3NvcnMgb24gdGhlIEFtLCByYXRoZXIgdGhhbiB0aGUgTm90LiAKWWVhciBiYW4gb24gZmVkZXJhbCBjb250cmFjdCBiaWRzIHdvdWxkIG1lYW4gZm9yIFNOQwpOb3RoaW5nIGFjdHVhbGx5IGhhcHBlbmVkIHRvIHlvdS4gWW91IGNsYWltIHlvdSBmb3VuZCBmb290cHJpbnRzIGluIHRoZSBzbm93IHRoYXQgd2VyZSBhbGxlZ2VkbHkgZm9sbG93aW5nIHlvdS4gVGhlIGZvb3RwcmludHMgY291bGQgaGF2ZSBiZWVuIG1hZGUgYXQgYW5vdGhlciB0aW1lLCBhcyB5b3UgbmV2ZXIgYWN0dWFsbHkgc2F3IG9yIGhhZCBhbnkgaW5kaWNhdGlvbiB0aGF0IGFueW9uZSB3YXMgZm9sbG93aW5nIHlvdS4gCkknZCBsaWtlIHRvIGJhbiB0aGUgd29yZCAnZm9yZXBsYXknLCBzaW5jZSBpdCBmcmFtZXMgYWxsIG1hbm5lciBvZiB0aHJpbGxpbmcgYWN0aXZpdGllcyBsaWtlIG1hc3NhZ2UsIG9yYWwgc2V4IGFuZCBleHBlcmltZW50aW5nIHdpdGggdG95cyBhcyBtZXJlIHdhcm0gdXBzIHRoYXQgY29tZSBiZWZvcmUgdGhlICdtYWluIGFjdCcuClBsdXMsIHdhbGtpbmcgYXdheSBjYW4gYmUgYSBodWdlIGFkdmFudGFnZSB3aGVuIGl0IGNvbWVzIHRvIG5lZ290aWF0aW5nLiBNYW55IHRpbWVzLCByZWFsdG9ycyBhbmQgc2VsbGVycyB3aWxsIGN1dCBwcmljZXMgb3IgYmUgbW9yZSB3aWxsaW5nIHRvIG1ha2UgYSBkZWFsIGlmIHRoZXkgc2Vuc2UgeW91J3JlIGFib3V0IHRvIHdhbGsgYXdheSBmcm9tIGl0Li4gCkJlY2F1c2Ugb2YgdGhpcywgdGhlIGZpZ3VyZXMgcXVvdGVkIHRocm91Z2hvdXQgYXJlIGxhcmdlbHkgdGFrZW4gZnJvbSB0aGUgMjAwNiBuYXRpb253aWRlIGNlbnN1cywgd2hpY2ggbGVuZHMgYSBzb21ld2hhdCBkYXRlZCBmZWVsIHRvIG1hbnkgb2YgdGhlIGNoYXB0ZXJzLkZvciwgd2hpbHN0IHRoZSAyMDA2IGNlbnN1cyByZXN1bHRzIHNob3cgYSB2ZXJ5IHJhcGlkIGluY3JlYXNlIGluIHRoZSBudW1iZXIgb2YgQXNpYW5zIGluIE5aLCB3aGV0aGVyIGFzIG5ldyBhcnJpdmFscyBvciBhcyBib3JuIGhlcmUsIHRoZSAyMDEzIGNlbnN1cyByZXN1bHRzICAgdG91Y2hlZCBvbiByZWFsbHkgb25seSBpbiB0aGUgQWZ0ZXJ3b3JkICAgcmFtIGhvbWUganVzdCBob3cgbWFzc2l2ZSB0aGlzIGV4cGFuc2lvbiBoYXMgYmVjb21lLiAKSG93ZXZlciwgdGhleSBzaG91bGRuJ3QgYmUgb3ZlciBjb25maWRlbnQuIApHb29kIGx1Y2sKU2Vjb25kLCByYXRoZXIgdGhhbiBjaG9vc2luZyB0byBzaW1wbHkgZGVmZW5kIGl0cyBwb3NpdGlvbiBpbiBob3JzZSByYWNlIGJldHRpbmcsIFBNVSBtb3ZlZCBpbnRvIHRoZSBwcmV2aW91c2x5IHVuZXhwbG9yZWQgbWFya2V0cyBvZiBvbmxpbmUgc3BvcnRzIGJldHRpbmcgYW5kIHBva2VyIHRvIGJlY29tZSBhIG9uZSBzdG9wIHNob3AgZm9yIEZyZW5jaCBnYW1lcnMuIFRoaXMga2V5IHN0cmF0ZWdpYyBkZWNpc2lvbiB3YXMgZGVzaWduZWQgbm90IG9ubHkgdG8gY2F0ZXIgdG8gdGhlIHJhcGlkbHkgaW5jcmVhc2luZyBwb3B1bGFyaXR5IG9mIHNwb3J0cyBiZXR0aW5nIGFuZCBwb2tlciBpbiBGcmFuY2UsIGJ1dCB3YXMgYWxzbyBhbiBhdHRlbXB0IHRvIHJlanV2ZW5hdGUgYW4gYWdpbmcgY29uc3VtZXIgYmFzZSBieSBhdHRyYWN0aW5nIGEgbmV3IGdlbmVyYXRpb24gb2YgeW91bmdlciBwbGF5ZXJzLiBIdW1vcm91cyB0ZWxldmlzaW9uIGFkdmVydGlzZW1lbnRzIGZlYXR1cmluZyBzdGFyIGpvY2tleXMgaW4gZmlzaCBvdXQgb2Ygd2F0ZXIgc3BvcnRzIHNpdHVhdGlvbnMgKGZvciBleGFtcGxlLCBwZXJmb3JtaW5nIHRoZSBBbGwgQmxhY2tzIEhha2EgZGFuY2UgYmVmb3JlIGEgcnVnYnkgbWF0Y2ggb3Igc2l0dGluZyBvbiBlYWNoIG90aGVyIHNob3VsZGVycyB0byBjb21wZXRlIGFnYWluc3QgYSBiYXNrZXRiYWxsIHRlYW0pIHdlcmUgdm90ZWQgRnJhbmNlIHNlY29uZCBmYXZvcml0ZSBhZHZlcnRpc2luZyBjYW1wYWlnbiBpbiAyMDEwLi4gCkdhbWJsaW5nIHdhcyBhbiBpbXBvcnRhbnQgcGFzdGltZSBhbmQgaGFzIGJlZW4gdmVyeSBwb3B1bGFyIHNpbmNlIHRoZSBtaWRkbGUgYWdlcy4gClNpYW10aGFpbGFuZCB1CllvdSBjYW4gaW1hZ2luZSBob3cgd2UgYWxsIHJlYWN0ZWQgd2hlbiBzaGUgc2FpZCB5ZXMsIGl0IHdhcyBtYXNzIGNoYW9zIGFuZCBjZWxlYnJhdGlvbi4gOikuIApPbmUgb2YgdGhlbSBjb21lcyBmcm9tIENodWNrIE1pbGxlciwgd2hvIHBsYXllZCBmb290YmFsbCB3aXRoIEhlbmxleSBhdCBVQ0xBLiBBc2tlZCBob3cgaGUgdGhvdWdodCBIZW5sZXkgY2FtZSB0byBiZSBpbnZvbHZlZCBpbiBhIHNjaGVtZSB0byB0cmFuc3BvcnQgY29jYWluZSBhY3Jvc3MgdGhlIGNvdW50cnksIE1pbGxlciBzYWlkLCAiQW55IGJsYWNrIGF0aGxldGUgY2FuIHRlbGwgeW91IHRoYXQgaGUga25vd3MgYSBkcnVnIGRlYWxlci4gV2hlbiB5b3UgaGl0IGl0IGJpZywgdGhlIGZpcnN0IHRoaW5nIHRoZXkgY29tZSBhdCB5b3Ugd2l0aCBpcywgJ0xvYW4gbWUgc29tZSBtb25leS4gCk15IGJ1bGx5IHdhcyBteSA0dGggZ3JhZGUgdGVhY2hlci4gCkhldGVyb2dlbmVpdHkgYmV0d2VlbiB0aGUgdHJpYWxzIHdhcyBub3Qgc2lnbmlmaWNhbnQuLiAKSGUgc2F5cyBuby4gSSBjb3VudCBvdXQgdG8gc2hvdyBoaW0gaXQgaXMgNTAuIApJbiB0aGUgZGF5cyBmb2xsb3dpbmcgdGhlIHJlc2N1ZSwgTWF5b3IgSm9obiBUb3J5IGNhdWdodCB3aW5kIG9mIHRoZSByaWRlcidzIGhlcm9pYyBhY3Rpb25zIGFuZCBpbnZpdGVkIHRoZW0gdG8gQ2l0eSBIYWxsIGZvciBhIFRUQyBCb2FyZCBtZWV0aW5nIHRvIGJlIGZvcm1hbGx5IHRoYW5rZWQuCk1ha2UgZXllIGNvbnRhY3Qgd2l0aCB0aGUgbW91bnRhaW4gbGlvbi4gSXQgbGV0cyB0aGVtIGtub3cgImhleSwgSSBrbm93IHlvdSBoZXJlLiIKVGhlIE1hZ2ljIENpcmNsZSBzcGVsbCBpcyBuZWNlc3NhcnksIGJlY2F1c2Ugd2l0aG91dCBpdCB0aGUgY2FsbGVkIGNyZWF0dXJlIHdpbGwgYmxpbmsgaW50byBleGlzdGVuY2UgYW5kIHRoZW4gaW1tZWRpYXRlbHkgcmV0dXJuIHRvIHRoZWlyIGhvbWUgcGxhbmUuIApMYXN0IHllYXIsIGl0IHdhcyBnaXZlbiB0byB1cyBhcyBhIENocmlzdG1hcyBwcmVzZW50IGZyb20gb3VyIGJlc3QgZnJpZW5kcyB3aG8gY29tZSBvdmVyIGFsbCB0aGUgdGltZS4gVGhleSd2ZSBoYWQgdGhlIHByaXZpbGVnZSB0byBwbGF5IHBva2VyIG9uIG91ciB0d28gSG9sZGVtIHRhYmxlcyBhbmQgbmVlZGxlc3MgdG8gc2F5LCBpdCBoYXNuJ3QgYWx3YXlzIGJlZW4gZnVuLiAKVGhleSBhcmUgd29yc2UgdGhhbiBwb2tlciBzaGFya3MuIApEYW5zIGxhIHBlcnNwZWN0aXZlIGRlcyBsZWN0aW9ucyBtdW5pY2lwYWxlcyBkZSAyMDIwLCBxdWkgc2UgZHJvdWxlcm9udCBkYW5zIHByYXRpcXVlbWVudCB1biBhbiAobGVzIGRhdGVzIHByY2lzZXMgbmUgc29udCBwYXMgZW5jb3JlIGNvbm51ZXMpLCBub3VzIHZvdXMgcHJvcG9zb25zIHVuIHRhdCBkZXMgbGlldXggZGUgbGEgcHIgY2FtcGFnbmUgcXVpIGEgZGogY29tbWVuYy4gSWwgbmUgcydhZ2l0IHBhcyBkZSBzZSBwcm9ub25jZXIgc3VyIHRlbGxlIG91IHRlbGxlIGNhbmRpZGF0dXJlLCBub3VzIG5vdXMgZW4gZ2FyZGVyb25zIGJpZW4sIG5pIGRlIGZhaXJlIGRlcyBwcmRpY3Rpb25zIGltcHJvYmFibGVzLCBtYWlzIHBsdXR0IGRlIHZvaXIgY29tbWVudCBzJ2Ftb3JjZSBjZXR0ZSBjYW1wYWduZSBldCBxdWkgc29udCBsZXMgY2FuZGlkYXRzIGVuIGxpY2UsIHBhcm1pIGxlc3F1ZWxzIGZpZ3VyZSBwZXV0IHRyZSBsYSBvdSBsZSBmdXR1ciBtYWlyZSBkZSBQYXJpcy4gQXBycyB1biBwcmVtaWVyIGFydGljbGUgc3VyIGxhIGNvdXJzZSAgbCdodGVsIGRlIHZpbGxlLCBhdWpvdXJkJ2h1aSBub3VzIGFib3Jkb25zIGxhIHNpdHVhdGlvbiBkZXMgOWUsIDEwZSBldCAxOGUgYXJyb25kaXNzZW1lbnRzLi4gCk5vdywgSSBoYWQgYW4gQXV0aXNtIFNwZWN0cnVtIERpc29yZGVyIGRpYWdub3NpcyBhbmQgYSBHZW5lcmFsaXplZCBBbnhpZXR5IERpc29yZGVyIGRpYWdub3NpcyBmb3Igc29tZSB0aW1lLCBhbmQgZXNwZWNpYWxseSB3aGVuIEkgd2FzIHlvdW5nZXIsIEkgZGlkIHJlYWxseSBzdHJ1Z2dsZSB3aXRoIGxvdWQgbm9pc2VzLiBJIGFsc28gdGhpbmsgbWFraW5nIHBsYWNlcyBtb3JlIGFjY2Vzc2libGUgZm9yIGRpc2FibGVkIHBlb3BsZSBpcyBhIGdyZWF0IHRoaW5nIHRvIGRvLiBZb3Ugd29uIGNhdGNoIG1lIGNvbXBsYWluaW5nIGFib3V0IHdhcm5pbmdzIG9yIHNwYWNlcyBiZWNhdXNlIEkgdW5kZXJzdGFuZCB0aGF0IHRob3NlIGFyZSByZWFsbHkgaGVscGZ1bCBmb3IgcGVvcGxlIHRvIGVuZ2FnZSB3aXRoIHBvdGVudGlhbGx5IHVwc2V0dGluZyB0aGluZ3Mgb24gdGhlaXIgb3duIHRlcm1zICAgdGhleSB0aGUgbWVudGFsIGVxdWl2YWxlbnQgb2YgYWxsZXJneSB3YXJuaW5ncyEKRnJvbSBNZWxib3VybmUgeW91IGNhbiBmZXJyeSB0byBIb2JhcnQuIApEaWVzZXMgT25saW5lICAgaGF0IGVpbmVuIGdhcmFudGllcnRlbiBQcmVpc3Bvb2wgdm9uIDI1LjAwMCBVUyBEb2xsYXJzLiBEZXIgQnV5IEluIGltICBiZXRyZ3QgJCA1MCArICQgNS4gCldoYXQgSSBhbSB0YWxraW5nIGFib3V0IGlzIHRoZSBhdmVyYWdlIGpvZSwgZ29pbmcgaW50byBhIGNhc2lubyBsaWtlIGEgYmFzaWMgOSA1cG0gam9iLCBhbmQgZ3JpbmRpbmcgb3V0IGEgbGl2aW5nIHdpdGggYSBkZWNlbnQgd2luIHJhdGUsIHNheSwgYmV0d2VlbiAkMjAgMTAwL2hyLiBEbyB0aGVzZSBwbGF5ZXJzIGV4aXN0P1RoZXJlIGRlZmluaXRlbHkgYXJlLCBidXQgaXQgaXMgYSBoYXJkIGxpZmUgYW5kIG1hbnkgcGxheWVycyB3aG8gY2xhaW0gdGhleSBhcmUgcHJvZmVzc2lvbmFscyBkbyBub3QgZG8gaXQgc3VzdGFpbmFibHkuLiAKV2Uga3dhbWVuIHRlcmVjaHQgaW4gZWVuIG1vb2llIGdyb2VuZSB0dWluIG1ldCBkZSBvdWRlIGtsb29zdGVyZ2Vib3V3ZW4uIAoiR2VvcmdlcyBoYXMgY2VtZW50ZWQgaGlzIGxlZ2FjeSBhcyBvbmUgb2YgdGhlIHBvdW5kIGZvciBwb3VuZCBncmVhdGVzdCBmaWdodGVycyBldmVyLCIgV2hpdGUgc2FpZC4gIkhlIGJlYXQgYWxsIHRoZSB0b3AgZ3V5cyBkdXJpbmcgaGlzIHdlbHRlcndlaWdodCB0aXRsZSByZWlnbiBhbmQgZXZlbiB3ZW50IHVwIGEgd2VpZ2h0IGNsYXNzIHRvIHdpbiB0aGUgbWlkZGxld2VpZ2h0IGNoYW1waW9uc2hpcC4gCkhlbHAgcGVvcGxlIGltcHJvdmUgdGhlaXIgcXVhbGl0eSBvZiBsaWZlIGJ5IHByb3ZpZGluZyBnb29kIHF1YWxpdHkgaW5mb3JtYXRpb24gb24gLiAKSW4gdGhlIGJlZ2lubmluZyBsZXZlbHMgb2YgcG9rZXIsIHRoZSBnYW1lIGlzIGFsbCBhYm91dCBwbGF5aW5nIHRpZ2h0IGFuZCBjb25zZXJ2YXRpdmUuIFBsYXkgZ29vZCBjYXJkcyBhbmQgZm9sZCB0aGUgYmFkIG9uZXMgYW5kIHlvdSBhcmUgcHJldHR5IG11Y2ggZ3VhcmFudGVlZCB0byBtYWtlIG1vbmV5IGF0IHRoZSBsb3dlciBsZXZlbHMgb2YgcG9rZXIuIEF0IHRoZSBsb3cgbGV2ZWxzIG5vIG9uZSBrbm93cyBob3cgdG8gZm9sZC4gSnVzdCBwYXkgYXR0ZW50aW9uIHRvIHdob3NlIHBsYXlpbmcgbGlrZSBhIG1hbmlhYyAoaGludCBpdCBnb2luZyB0byBiZSBtb3JlIHRoYW4gaGFsZiB0aGUgdGFibGUgYXQgMSQvMiQpIGFuZCB3YWl0IHRoZW0gb3V0LiBPbmNlIHlvdSBnZXQgYSBnb29kIGhhbmQgYmV0IGl0IGhhcmQuCkxvY2F0ZWQgcmlnaHQgaW4gdGhlIGh1YiBvZiB0aGUgaGlzdG9yaWMgR3JlZWt0b3duIGRpc3RyaWN0IGl0IGltcG9zc2libGUgdG8gYmUgYW55IGNsb3NlciB0byB0aGUgYWN0aW9uLiAKSSBoYXZlbid0IHNvIG11Y2ggZGVzY3JpYmVkIGEgc3BlY2lmaWMgc3RyYXRlZ3kgZm9yIGRyaXZpbmcgYXMgSSBoYXZlIGRlc2NyaWJlZCB3aGF0IGRyaXZpbmcgaXMuIApUaGVyZSBhcmUgY2l0aWVzIG91dCB0aGVyZSBpbiB0aGUgd29ybGQgdGhhdCB5b3UgY2FuIHNheSBtYW55IG9mIHRoZXNlIHRoaW5ncyBhYm91dC4gQnV0IGluIGFsbCBteSB0cmF2ZWxzLCBsaXZpbmcgaW4gbWFueSBvZiB0aGUgbW9zdCBzaWduaWZpY2FudCBhbmQgbGFyZ2VzdCBjaXRpZXMgaW4gdGhlIHdvcmxkLCBhbmQgdmlzaXRpbmcgYWxtb3N0IGFsbCBvZiB0aGVtLCBCYW5na29rIGlzIHRoZSBvbmUgd2l0aCB0aGUgbW9zdCBkZXB0aCBhbmQgZHluYW1pc20sIHRoZSBtb3N0IHRvIGV4cGxvcmUgYW5kIGRpc2NvdmVyLgpUb2RheSdzIHNlbGVjdGlvbiBhcmUgZnJvbSB0aGUgZmlyc3QgY2F0ZWdvcnksIGFuZCBleGhpYml0IHRpdGxlcyBhbmQgdGV4dHMgdGhhdCBsb29rIGxpa2Ugbm9uIGx1bWlub3VzIGFuZCB1bmkgZGltZW5zaW9uYWwgYnV0IHR1cm4gb3V0IHRvIGJlIGFueXRoaW5nIGJ1dCBtdW5kYW5lLi4gCkZ1cnRoZXJtb3JlLCBldmVyeSBwbGF5ZXIgaGFzIGFuIGVxdWFsIGNoYW5jZSBvZiB3aW5uaW5nIHRoZSBoYW5kLiBBIGtlZW4gb2JzZXJ2ZXIgbWF5IGFsc28gbm90ZSB0aGF0IGV2ZW4gdGhvdWdoIHRoZSBydWxlcyBhcmUgZGVmaW5lZCBpbiBwb2tlciwgc29tZSBwbGF5ZXJzIG1heSB1dGlsaXplIHRyaWNrcyB0byBnYWluIGFuIGFkdmFudGFnZSBvdmVyIG90aGVyIHBsYXllcnMuLiAKU2FpZCBoZSB3YXNuIHN1cnByaXNlZCBDYW51Y2tzIHJvb2tpZSBFbGlhcyBQZXR0ZXJzc29uIGhhcyBoYWQgbm8gdHJvdWJsZSB0cmFuc2l0aW9uaW5nIHRvIHRoZSBOSEwuaXMgaW1wb3NzaWJsZSBmb3IgdGhhdCBndXksIGhlIHNhaWQuIApZb3Ugd2FudCBhIHNwZWNpZmljIG1ldGFib2xpdGUsIGl0cyB0cmlja2llci4gCkxvdCBvZiB3YXIgZmlsbXMgaW4gdGhlIGNvbW1lbnRzIGFscmVhZHksIHNvIEkgbW9zdGx5IGF2b2lkIHRoZW0gZXhjZXB0IHRvIHNheSB0aGF0IGl0IHdvcnRoIHdhdGNoaW5nIGFsbCB0aHJlZSB2ZXJzaW9ucyBvZiBUdW50ZW1hdG9uIHNvdGlsYXMsIGFzIHRoZXkgYXJlIGFsbCBxdWl0ZSBkaWZmZXJlbnQgZnJvbSBvbmUgYW5vdGhlciAocmVhZCB0aGUgYm9vayB0b28sIGl0IGdvb2QpLiBJIHRocm93IGluIGEgY291cGxlIG9mIG90aGVycyB0aGF0IGdldCBvdmVybG9va2VkOgpDYW5hZGEgY2VudHJhbCBiYW5rIGxlZnQgaXRzIGJlbmNobWFyayBpbnRlcmVzdCByYXRlIHVuY2hhbmdlZCBhdCAxLjc1IHBlciBjZW50IG9uIE1hcmNoIDYgYW5kIHNpZ25hbGxlZCB0aGF0IHBvbGljeSBoYXMgZW50ZXJlZCBhbiBleHRlbmRlZCBwZXJpb2Qgb2Ygc3Rhc2lzLgpNb3N0IHdvbWVuIHdhbnQgdG8gYmUgcHVyc3VlZCwgc28gaWYgdGhleSBydW4gYXdheSwgYnkgYWxsIG1lYW5zIGdvIGFmdGVyIHRoZW0uIApJIHRoaW5rLiAiWWVhaC4gbWF5YmUgSSBqdXN0IG5lZWQgdG8gdHJ5IGEgYmV0dGVyIHZhcGUuIiBidXQgdGhlbiBJIHRoaW5rICJ3aGF0IGlmIHRoZXkgYWxsIGxpa2UgdGhpcywgb25seSBtb3JlIGV4cGVuc2l2ZT8iIEFuZCB3aGVuIEkgcmVhZCB0aGVzZSB0aHJlYWRzIHdoZXJlIHBlb3BsZSB0YWxrIGFib3V0IGFsbCB0aGUgZGFtbmVkIHZhcGVzIHRoZXkgaGF2ZSwgSSBoYXZlIHRvIHdvbmRlci4gIldURj8gVGhpcyBndXkgKGxpa2Ugc28gbWFueSBvdGhlcnMpIGhhcyBTaXggZGFtbmVkIFZhcGVzLiBhbmQgaGUgZG9lc24gdXNlIHRoZW0uIFBlb3BsZSBrZWVwIGJ1eWluZyB0aGVzZSBkYW1uZWQgdGhpbmdzLCBhbmQgdGhlbiBidXlpbmcgc29tZXRoaW5nIGRpZmZlcmVudC4gTGlrZSB0aGV5IHRoaW5raW5nIG9uZSBvZiB0aGVzZSBkYXlzIHRoZXkgZ29pbmcgdG8gYnV5IHNvbWV0aGluZyB0aGF0IGFjdHVhbGx5IHdvcmtzLCBhbmQgbWFrZXMgdGhlbSBoYXBweS4iIFRoYW5rIHlvdSBmb3IgaGVscGluZyBtZSBkZWNpZGUgd2hldGhlciBJIG5lZWQgdG8gYnV5IGFub3RoZXIgdmFwZSwgb3IganVzdCBnaXZlIHVwLiBJIGdvaW5nIHRvIGdpdmUgdXAuClRoZSBjbG9zZXN0IHRoYXQgT3JlZ29uIGhhcyBjb21lIHRvIGFsbG93aW5nIG9ubGluZSBnYW1ibGluZyBoYXMgY29tZSB2aWEgbGl2ZSBrZW5vIGdhbWVzIHRoYXQgYXJlIGJyb2FkY2FzdCBhY3Jvc3MgdGhlIGludGVybmV0LiBUaGF0J3MgYXMgZmFyIGFzIHRoZSBzdGF0ZSBoYXMgYmVlbiBwcmVwYXJlZCB0byBnbyB1cCB0byBub3cgYnV0IHRoZXJlIGFyZSBzdWdnZXN0aW9ucyBmb2xsb3dpbmcgdGhlIFVTIFN1cHJlbWUgQ291cnQgcnVsaW5nIGluIE1heSB0aGF0IHRoZSBzaXR1YXRpb24gbWF5IGNoYW5nZS4uIApNZXRhbCA4IFJvdyBDYXNpbm8gVGFibGUgQ2hpcCBUcmF5IHdpdGggQ292ZXIgYW5kIExvY2sgUmV2aWV3CkJ1dCB0aGUgcmVjZW50IG11cmRlciBvZiB0aGUgS29ycGVycycgbGlmZWxvbmcgZnJpZW5kLCAxNCB5ZWFyIG9sZCBQYXJpcyBCcmFkbGV5LCBoYXMgYnJvdWdodCB0aGUgdmlvbGVuY2UgY2xvc2UgdG8gaG9tZS4gCkZlZGVyYWwgbGF3eWVyIE1pY2hhZWwgTW9ycmlzIGFyZ3VlZCB0aGF0IHRoZSBPbnRhcmlvIENvdXJ0IG9mIEFwcGVhbCB3ZW50IHRvbyBmYXIgbGFzdCB5ZWFyIHdoZW4gaXQgc3RydWNrIGRvd24gdGhlIENyaW1pbmFsIENvZGUgYmFuIG9uIGJhd2R5IGhvdXNlcyBvbiB0aGUgZ3JvdW5kcyB0aGF0IGl0IGVuZGFuZ2VycyBzZXggd29ya2VycyBieSBmb3JjaW5nIHRoZW0gdG8gd29yayBvdXRzaWRlLgpJZiB0aGlzIHdvdWxkIGJlIHRvbyBoYXJkIGZvciB5b3UsIHRoZW4gdGhhdCBzb21ldGhpbmcgd29ydGggdGhpbmtpbmcgbW9yZSBhYm91dC4gCkF0IHRoaXMgcG9pbnQsIHlvdSBrbm93IHdoYXQgdG8gZG8gYW5kIHlvdSBwcm92ZW4gaXQgdG8geW91cnNlbGYuIFlvdSBnb2FsIGlzIHRvIGdyaW5kIGl0IG91dCB1bnRpbCB5b3UgY2FuIHBsYXkgMi81LiBZb3Ugc2hvdWxkIGJlIG1ha2luZyBlbm91Z2ggbW9uZXkgcGxheWluZyAxLzIgdGhhdCB5b3UgY2FuIG5vdyBzdGFydCBjdXR0aW5nIGJhY2sgb24geW91ciB3b3JrIGhvdXJzIGFuZCBzdGFydCB3b3JraW5nIHBhcnQgdGltZSwgYnV0IHlvdSB3aWxsIG5vdCBldmVuIHRoaW5rIGFib3V0IHF1aXR0aW5nIHlvdXIgam9iIHVudGlsIHlvdSBncmluZGVkIHVwIGEgcm9sbCBmb3IgMi81IGFuZCB0aGVuIHNvbWUuIApJIHN0YXJ0ZWQgd2lubmluZyBpbW1lZGlhdGVseS4gCldpdGggdGhlIHN0b3JlIGFuYWx5dGljcywgeW91IHdpbGwgZ2V0IHRvIGtub3cgbW9yZSBhYm91dCB5b3VyIGN1c3RvbWVycy4gRmluZCBvdXQgd2hhdCBpcyB0aGUgcmV2ZW51ZSBvZiB5b3VyIHN0b3JlLCB3aGF0IHByb2R1Y3RzIGFyZSB0aGUgbW9zdCBwb3B1bGFyIGFuZCB3aGF0IGFyZSB0aGUgc291cmNlcyBvZiB5b3VyIHRyYWZmaWMuClRoZXJlIGFyZSBhIG51bWJlciBvZiBvbmxpbmUgc2l0ZXMgdGhhdCB5b3UgY2FuIHBsYXkgZm9yIGZyZWUuIApTYXNzZSwgd2hvIHJlY2VudGx5IGNhbGxlZCBUcnVtcCB0cmFkZSBwb2xpY3kgImR1bWIiIGFuZCAia29va3kiIGFkbWl0dGVkIGhlIHdhcyBza2VwdGljYWwgVHJ1bXAgd291bGQgZm9sbG93IHRocm91Z2ggYW5kIHJlam9pbiB0aGUgZGVhbC4gIlRoZSBwcmVzaWRlbnQgaXMgYSBndXkgd2hvIGxpa2VzIHRvIGJsdWUgc2t5IGEgbG90IGFuZCBlbnRlcnRhaW4gYSBsb3Qgb2YgZGlmZmVyZW50IGlkZWFzLCBidXQgaGUgbXVsdGlwbGUgdGltZXMgcmVhZmZpcm1lZCB0aGUgcG9pbnQgdGhhdCBUUFAgbWlnaHQgYmUgZWFzaWVyIGZvciB1cyB0byBqb2luIG5vdy4iCk15IG93biB0aGVvcnkgaXMgeW91ciByZXNwb25zZSB0byB0aGlzIGFmZmFpciBzYXlzIGEgbG90IGFib3V0IHdobyB5b3UgYXJlIGFuZCBob3cgc3RyaWN0bHkgeW91IGJlbGlldmUgaW4gdGhlIGxldHRlciBvZiB0aGUgbGF3Lkkgc3VzcGVjdCBtYW55IG9mIHRob3NlIHJlYWN0aW5nIHdpdGggb3V0cmFnZSBoYXZlIHJhcmVseSBpZiBldmVyIGpheXdhbGtlZC4gT3IgZHJpdmVuIG11Y2ggYWJvdmUgdGhlIHNwZWVkIGxpbWl0LiAKU2hlIGRvZXMgdGhpcyBieSB0cmVhdGluZyB0aGUgZ2lybGZyaWVuZCByZWFsbHkgd2VsbCBzbyB0aGF0IHRoZSBHRiBkb2VzbiB1bmRlcnN0YW5kIGp1c3QgaG93IHVucmVhc29uYWJsZSBoaXMgbW9tIGlzLiBBZnRlciBhbGwsIHNoZSBoYWQgbmV2ZXIgaGFkIGFueSBpc3N1ZSB3aXRoIGhlci4gCldoYXQgaXMgeW91ciBmYXZvcml0ZSBSdW0gQmFzZWQgRHJpbms/QXJlIHlvdSBzb21lb25lIHRoYXQgbGlrZXMgYSBzaW1wbGUgUnVtIGFuZCBDb2tlLiBPciBhcmUgeW91IG1vcmUgZXhvdGljIGxpa2UgYSBNYWkgVGFpLCBDb3F1aXRvLCBDdWJhIExpYnJlLCBSdW1jaGF0YSwgb3IgYSBSdW0gUHVuY2g/IFRoZXJlIGFyZSBjb3VudGxlc3MgY29ja3RhaWxzIG91dCB0aGVyZS4gClBsdXRzZWxpZyBoYXIgcHJpdmF0ZSBha3RyZXIgbXllIG1lciBtYWt0IG92ZXIgZGVnIG9nIG1lZyBvZyBzYW1mdW5uLiAKVG8gRWxsaW5ndG9uIGNyZWRpdCwgaGUgd2FzIHRoZSBvbmx5IEhlYXQgcGxheWVyIHdobyBkYXJlZCB0byB3ZWFyIGZsaXAgZmxvcHMgd2l0aG91dCBzb2NrcyBiZWZvcmUgYW4gT2N0b2JlciBnYW1lIGFnYWluc3QgdGhlIFdpemFyZHMuIEluIHRoZSBvZmZzZWFzb24sIEVsbGluZ3RvbiBhbmQgaGlzIHdpZmUgd2lsbCBwbGFuIGRheSBkYXRlcyB0byB0aGUgbmFpbCBzaG9wLiBUaG91Z2ggaGUgYmVsaWV2ZXMgdGhhdCBmZWV0IGFyZSB2aXRhbCBwYXJ0IG9mIHdoYXQgd2UgZG8gYXMgTkJBIHBsYXllcnMsIGxpa2Ugc2V2ZXJhbCBvZiBoaXMgcGVlcnMsIEVsbGluZ3RvbiBzYWlkIGhlIGRvZXNuIGhhdmUgdGltZSB0byBnZXQgcGVkaWN1cmVzIGR1cmluZyB0aGUgc2Vhc29uLiAKVGhlbW9vZCB3YXMgY29udml2aWFsLiAKRm9yYmlkZGVuIGFyZSBldGhuaWMgb3IgaGlnaGx5IGZsYXZvcmVkIGZvb2RzIGFuZC9vciBpbnRlcmVzdGluZyB2ZWdldGFibGVzIHByZXBhcmVkIGluIGEgbWFubmVyIHRoYXQgZW5oYW5jZXMgdGhlaXIgcXVhbGl0aWVzIG5vdCBqdXN0IGJvaWxpbmcgb3IgZGVlcCBmcnlpbmcuIEl0J3Mgbm90IHN1cnByaXNpbmcgdGhhdCBhIGdvb2QgbnVtYmVyIG9mIHRoZSBKTk1JTHMgaGF2ZSBzZXJpb3VzIHdlaWdodCBwcm9ibGVtcyBmcm9tIGFsbCBvZiB0aGUgbmFyYyBzZWxmIGluZHVsZ2VuY2UgaW4gdW5oZWFsdGh5IGZvb2RzIGFuZCB0aGUgd2lsbGZ1bCByZWZ1c2FsIHRvIGFjY2VwdCB0aGF0IHRoZXJlIGFyZSBjb25zZXF1ZW5jZXMgdG8gYmFkIGFuZCB1bmhlYWx0aHkgYmVoYXZpb3JzLi4gCihJIGdlbmVyYWxpemluZywgYW5kIHlvdSBhbGwga25vdyBpdCB0cnVlLCBqdXN0IGFzIEkga25vdyB0aGF0IHRoZXJlIGFyZSBleGNlcHRpb25zLikgSWYgc2hlIHNheXMgc2hlIGEgc3VibWlzc2l2ZSwgc2hlIGhhdmUgbGF6eSBkb21zIGZsb29kaW5nIGhlciBpbmJveC4gClNvbGFuZ2Ugd2llZGVyaG9sZW4sIGJpcyBhdWYgamVkZXIgTmFkZWwgamUgbmFjaCBHcmUgMjAgMjIgTWFzY2hlbiBzaW5kLgpQcmlvciB0byByZWx5aW5nIG9uIGFueSBJbnRlcmFjdGl2ZSBEYXRhIEluZm9ybWF0aW9uIGFuZC9vciB0aGUgZXhlY3V0aW9uIG9mIGEgc2VjdXJpdHkgdHJhZGUgYmFzZWQgdXBvbiBzdWNoIEluZm9ybWF0aW9uLCB5b3UgYXJlIGFkdmlzZWQgdG8gY29uc3VsdCB3aXRoIHlvdXIgYnJva2VyIG9yIG90aGVyIGZpbmFuY2lhbCByZXByZXNlbnRhdGl2ZSB0byB2ZXJpZnkgcHJpY2luZyBpbmZvcm1hdGlvbi4KT24gbXkgd2F5IGhvbWUgZnJvbSB3b3JrIHRoZXJlIGlzIGEgbGVmdCB0dXJuIGxhbmUgdGhhdCBiYWNrcyB1cCB3aXRoIHRyYWZmaWMgcHJldHR5IGZhciBkdXJpbmcgcnVzaCBob3VyLiBHb2luZyBzdHJhaWdodCBpcyB0aGUgZW50cmFuY2UgdG8gYSB1bml2ZXJzaXR5IHBhcmtpbmcgbG90IHNvIGhhcmRseSBhbnlvbmUgZ29lcyBzdHJhaWdodCAoYWxtb3N0IGV2ZXJ5b25lIGlzIHR1cm5pbmcgbGVmdCkuIApFeHBlcmltZW50YWwgcHJvYmFiaWxpdHkgaXMgdGhlIG51bWJlciBvZiB0aW1lcyBzb21lIHBhcnRpY3VsYXIgb3V0Y29tZSBvY2N1cnJlZCBkaXZpZGVkIGJ5IHRoZSBudW1iZXIgb2YgdHJpYWxzIGNvbmR1Y3RlZC4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbk9ORSBodW5kcmVkIGxvY2FsIG1lbiBjYW1lIHRvZ2V0aGVyIHRvIHN1cHBvcnQgdGhlIEppbSBCcnVjZSBVcm9sb2d5IGFuZCBQcm9zdGF0ZSBDYW5jZXIgVHJ1c3QgYXQgdGhlIGZvdXJ0aCBhbm51YWwgUG9rZXI0UHJvc3RhdGUgZnVuZHJhaXNpbmcgZXZlbnQuIApKdXN0IGNpcmNsZSBhcm91bmQgaGltIGFzIGhlcyBib2xhc2VkLCBzaGl0IGhpdHJlZyBwbHVzIGxhZyB3aWxsIG1ha2UgaGl0dGluZyB5b3UgaGFyZC5mbHBweWZsaXAzICAzIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvTm8gZHVkZS4gClRoZSB0aHJlZSByZWQgZmFjZWQgbWVuIHdlcmUgbGVmdCB0byBleHBsYWluIHRvIG9mZmljZXJzIHRoZXkgaGFkIGluIGZhY3QgYnJhbmRlZCB0aGVtc2VsdmVzIHdpdGggYSBmaXJlIHBva2VyIHdoaWxlIGRyaW5raW5nIGFyb3VuZCBhIGJvbmZpcmUgaW4gdGhlIGVhcmx5IGhvdXJzIG9mIFN1bmRheSBtb3JuaW5nLgpTb2FrIGluIGEgaG90IGJhdGguIEFmdGVyIGEgaGFyZCBkYXksIGl0J3MgbmljZSB0byBnZXQgaW50byBhIGhvdCB0dWIgYW5kIGxldCB0aGUgaG90IHdhdGVyIGRvIGl0cyB0cmljay4gSWYgeW91IGhhdmUgYSBKYWN1enppIGF0IGhvbWUsIGdvIGFoZWFkIGFuZCBzb2FrIGZvciB0d2VudHkgbWludXRlcyBhbmQgbGV0IHRoZSBtYXNzYWdpbmcgYWN0aW9uIG9mIHRoZSB3YXRlciBwcmVzc3VyZSBoZWxwIHJlbGF4IHlvdXIgc29yZSBsZWcgbXVzY2xlcy4gCkkgd291bGQgc3VnZ2VzdCB0cnlpbmcgdG8gZG8gc29tZXRoaW5nIGxpa2UgdGhhdCBiZWNhdXNlIEkgdGhpbmsgaXQgd291bGQgbWFrZSB0aGUgdHJhbnNpdGlvbiBhd2F5IGZyb20gYm90dGxlcyBtdWNoIGVhc2llci4gClRoZSAiTWFpZGVuIFRyaWJ1dGUgb2YgQmFieWxvbiIgd2FzIGEgc2VyaWVzIG9mIGFydGljbGVzIGFuZCBhIHNpbWlsYXIgcGllY2Ugb2YgeWVsbG93IGpvdXJuYWxpc20gcHVibGlzaGVkIGluIHRoZSBQYWxsIE1hbGwgR2F6ZXR0ZSBpbiAxODg1LiBJbiBpdCwgdGhlIHJlcG9ydGVyIChtYWxlKSBzdXBwb3NlZGx5IHVuY292ZXJlZCBhIHNleCBzY2FuZGFsIHdoZXJlIChwb29yLCB3aGl0ZSkgdmlyZ2lucyBhcmUgYmVpbmcgcHJvY3VyZWQgYnkgb2xkZXIgKHJpY2gsIHdoaXRlKSBtZW4gZm9yIHNleHVhbCBwdXJwb3Nlcy4gCjkuIFNlbnNlbGVzcyBhbmQgZXZlbiBtYWxpZ24gbGF3cyB3aGljaCBjbGFpbWVkIHRvIGRvIG9uZSB0aGluZyBidXQgaGFkIHRoZSBleGFjdCBvcHBvc2l0ZSBlZmZlY3QuClNlY29uZCBvZiBhbGwsIHByZXR0eSBzb29uIGl0J2xsIGJlIG1hbmRhdG9yeSBjaGlwcyBpbiB5b3VyIGhhbmRzLCBhbmQgdGhlcmUgd2lsbCBiZSBhbnRpIGFudGkgY2hpcHBlciBwcm9wYWdhbmRhIG9uIHJlZGRpdCB0YXJnZXRpbmcgdGVlbmFnZXJzIGFuZCBwZW9wbGUgaW4gdGhlaXIgZWFybHkgMjBzIGluIGFib3V0IDE1IHllYXJzLiAKQ2hhbXAgaXMgbGlrZSBEZWFkIEVsdmlzIG9yIEplc3VzIENocmlzdCBpbiBhIHBvdGF0byBjaGlwLCBmb3IgdGhhdCBtYXR0ZXIuIENoYW1wIGlzIGltcG9zc2libGUsIGlsbG9naWNhbCwgYW5kIHlldCBhbHdheXMgdmlzaWJsZS4gSXQgaXMgdGhlIHJlZnVzYWwgb2YgQ2hhbXAgdG8gZ28gYXdheSB0aGUgcmVmdXNhbCBvZiBodW1hbnMgdG8gc3RvcCBzZWVpbmcgdGhhdCB3aGljaCBpcyBtYWdpY2FsIGFuZCBwYXJhbm9ybWFsIGFuZCBkb3ducmlnaHQgZ29kbHkgdGhhdCBpcyBuZXdzLiBCYXJudW0gd2FzIHNob3dzIHRoYXQgc2NpZW5jZSBjYW5ub3Qga2lsbCBzdXBlcnN0aXRpb24gYmVjYXVzZSBhbGwgYmVsaWVmcywgaW5jbHVkaW5nIHNjaWVudGlmaWMgb25lcywgYXJlIHVsdGltYXRlbHkgdGhlIGFjdCBvZiBodW1hbiB3aWxsICAgbm90IGVhc2lseSBvYnNlcnZhYmxlIGZhY3RzIGFuZCBkYXRhLgpXZWxsIHdlIGdldCB0byB0aGlzIG9uZSBraWQgICB0aGlzIG9uZSBraWQgd2hvIHRvdGFsbHkgbWVhbnQgd2VsbCBidXQgaGUgd2FzIGEgbGl0dGxlIG9mZi4gSGUgbmV2ZXIgdHJpZWQgdG8gYmUgdGhlIGZ1bm55IGtpZCwgaGUganVzdCB3YXMuIEluIHRoYXQgaGlzIGFuc3dlcnMgd2VyZSB1c3VhbGx5IHByZXR0eSBzZXJpb3VzLiAKSWYgeW91ciBidWlsZGluZyBpcyB3ZWxsIGxvY2F0ZWQsIGFuIG93bmVyIGNhbiBpbmNyZWFzZSB0aGVpciByZXZlbnVlcyBzZXZlcmFsIHRpbWVzIGdyZWF0ZXIgaWYgdGhleSB1c2UgdGhlaXIgc3RyYXRhIGxvdCBmb3Igc2hvcnQgdGVybSByZW50YWxzIGFzIG9wcG9zZWQgdG8gbG9uZyB0ZXJtIHRlbmFuY3kuCktlcHQgZHJlYWRpbmcgZW5jb3VudGVyaW5nIHRoZSBuZXh0IGJvc3MgcmF0aGVyIHRoYW4gbG9va2luZyBmb3J3YXJkIHRvIGl0LiAKOS4gTW9uaXRvcmUgaGJpdG9zIGRlIGNvbmR1byBkbyBzZXUgbWFyaWRvIHBvciB1bSBtcy4gUHJlc3RlIGF0ZW5vIHBhcmEgbyBhdW1lbnRvIGRhcyByZWNlaXRhcyBkZSBncyBlIG1vbml0b3JhciBvIG9kbWV0cm8gZG8gY2Fycm8gcGFyYSB2ZXIgc2UgaCBrbSBleHRyYSBpbmV4cGxpY3ZlaXMgbm8gY2Fycm8uIApUaGF0IHdhcyBhbm90aGVyIHBpZWNlIG9mIGhlciBzaGUgd291bGRuJ3QgZ2V0IHRvIGhhdmUgYW5kIGhvbGQuT3JpZ2luYWxseSwgTm92YSB3YXMgdGhlIGJhbmQgYWlkIGJhYnkgZm9yIENhcmx5LiAKUG9rZXIgaGFzIGdvdCBhIGxvbmcgaGlzdG9yeSBvZiBwbGF5aW5nIGluIG1vc3Qgb2YgdGhlIGFyZWFzIGluIHRoZSB3b3JsZCBpbiBkaWZmZXJlbnQgd2F5cy4gVGhpcyBnYW1lIHdhcyBjb25zaWRlcmVkIGFzIG9uZSBvZiB0aGUgbW9zdCBwb3dlcmZ1bCBjYXNpbm8gZ2FtZXMgZHVyaW5nIGEgbG9uZyB0aW1lIHBlcmlvZC4gRXZlbiB0aGlzIGdhbWUgd2FzIGNvbnNpZGVyZWQgYXMgdGhlIGdhbWUgb2YgdGhlIGxlYWRpbmcgcmljaCBwZW9wbGUgb3V0IHRoZXJlLiAKQnkgbGlmdGluZyB0aGUgcmliIGNhZ2UsIHlvdSBpbXByb3ZlIHlvdXIgcG9zdHVyZSBhbmQgYXNzaXN0IHlvdXIgYnJlYXRoaW5nLiAKVGhlIG1hbGUgd2FzIHNlY3Rpb25lZCBpbnRvIDEsODcxIG9uZSBtaWxsaW1ldGVyIHRoaWNrIHNsaWNlczsgdGhlIGZlbWFsZSB3YXMgc2VjdGlvbmVkIGludG8gb3ZlciA1LDAwMCBzbGljZXMsIG9uZSB0aGlyZCBvZiBhIG1pbGxpbWV0ZXIgaW4gdGhpY2tuZXNzLiBUaGUgZnJvemVuIHNlY3Rpb25zIHdlcmUgcGhvdG9ncmFwaGVkIGFuZCBkaWdpdGl6ZWQgdG8gYSBjb21wdXRlciwgY3JlYXRpbmcgdGhlIHdvcmxkIGZpcnN0IHZpcnR1YWwgY2FkYXZlcnMsIGR1YmJlZCB0aGUgSHVtYW4gTWFsZSwgYW5kIHRoZSBIdW1hbiBGZW1hbGUuIE1hcnlsYW5kIGludmVzdGlnYXRvcnMgd2VyZSBub3cgYWJsZSB0byBzZWUgdGhlIGNvbm5lY3RpdmUgYnJpZGdlcyBpbiBkaWdpdGl6ZWQgZm9ybS4uIApUaGUgY2hhaXIncyBtaWNyb3Byb2Nlc3NvciBhbHRlcnMgdGhlIG5vcm1hbCBwYXR0ZXJuIHRvIHNwZW5kIG1vcmUgdGltZSBvbiB0aGF0IGFyZWEgW3NvdXJjZTogU2FueW9dLi4gCkNoaWxkcmVuIHVuZGVyIDE3IG11c3QgaGF2ZSBQYXJlbnRzIHNpZ25hdHVyZSBiZWZvcmUgcmVjZWl2aW5nIE1hc3NhZ2UuIFByb2R1Y3QgY2FuIG5vdCBiZSByZXR1cm5lZCBvciBleGNoYW5nZWQgb25jZSBwdXJjaGFzZWQuIFNlcnZpY2VzIG1heSBiZSBleGNoYW5nZWQgb3IgdXBncmFkZWQgdG8gYSBkaWZmZXJlbnQgc2VydmljZSBvZiBlcXVhbCBvciBncmVhdGVyIHZhbHVlIHVubGVzcyBvdGhlcndpc2Ugc3RhdGVkLgpUaGUgY29ycmVjdCB1c2FnZSBvZiB0aGUgdGVybXMsIGhvd2V2ZXIsIGlzIGRlcGVuZGVudCB1cG9uIHRoZSB1bmRlcmx5aW5nIHJlYXNvbiBmb3IgdGhlIHN1cmdpY2FsIHByb2NlZHVyZS4gCkkgYW0gbm90IHN1Z2dlc3Rpbmcgb25lIGRvZXMgYSBQYWxlbyBkaWV0IDEwMCUgIHNvIG15IGVtcGhhc2lzIGhlcmUgaXMgb24gdW5yYXZlbGluZyByZXNlYXJjaCBhbmQgcG9zdGluZyBpbnRlcmVzdGluZyBhcnRpY2xlcyByYXRoZXIgdGhhbiBidWlsZGluZyBhbiBpZGVvbG9neS4gTXkgZ29hbCBpcyB0byBtYWtlIG51dHJpdGlvbmFsIHNjaWVuY2UgYWNjZXNzaWJsZSBhbmQgbm9uIGJvcmluZyB0byB0aG9zZSB3aG8gcmVhbGx5IGNhcmUgYWJvdXQgdGhlaXIgaGVhbHRoLiBLZXZpbiBHLgoiU08gRVhDSVRFRCBIT05PVVJFRCB0byBiZSBwYXJ0IG9mIGl0LCIgVmlydHVlIHR3ZWV0ZWQgV2VkbmVzZGF5LiAiTW9yZSB0byBjb21lLCBuZWVkIHRvIGNvbGxlY3QgbXkgZW1vdGlvbnMgZmlyc3QuIgpBdCBmaXJzdCB0aGV5IGZpZ2h0IG9idmlvdXNseSwgYnV0IGhlIG1hbmFnZXMgdG8gY29udmluY2UgaGVyIHRoYXQgdGhlIGNvbWJpbmUgYW5kIHRoZWlyIGFjY2VzcyB0byBpbmZpbml0ZSBkaW1lbnNpb25zIGNvdWxkIGdpdmUgaGVyIGluZmluaXRlIGV4cGVyaW1lbnRhdGlvbiBwb3NzaWJpbGl0aWVzLiBDYXJyeWluZyBHbGFET1Mgd2l0aCBoaW0gSGUgdXNlcyBwb3J0YWxzIHRvIHRha2UgdGhlIGZpZ2h0IHRvIHRoZW0sIGluc3RhbGxpbmcgR2xhRE9TIGluIENvbWJpbmUgc3Vic3lzdGVtcyBhcyBoZSBnb2VzLiAKSSBhbHdheXMgdHJhaW5lZCB3aXRoIGEgbG90IG9mIHdhdGVyLiAKVGhlcmUgYXJlIDEsMjAwIHNsb3RzLCBiaW5nbyBhbmQgdGFibGUgZ2FtZXMgbGlrZSBibGFja2phY2ssIFBhaSBHb3cgcG9rZXIgYW5kIHRocmVlIGNhcmQgcG9rZXIuIEJvb2sgYSByb21hbnRpYyBnZXRhd2F5IGluIGEgc3VpdGUgd2l0aCBhIGZpcmVwbGFjZSBhbmQgcmVmcmVzaCB5b3VyIGJvZHkgd2l0aCBhIGZ1bGwgbWVudSBvZiB0cmVhdG1lbnRzIGF0IHRoZSBPb2ggTGEgTGEgU2Fsb24gYW5kIFNwYS4gCkNldHRlIHNpdHVhdGlvbiB0YWl0IHJnaWUgcGFyIGRlcyBkaXNwb3NpdGlvbnMgY29tcGxleGVzIGRhdGFudCBkZSAxODA0IChwYXMgZGUgZGlzc29sdXRpb24gZHUgbWFyaWFnZSwgcGFzIGRlIHN1Y2Nlc3Npb24gb3V2ZXJ0ZSksIGF2YW50IGxhIHJmb3JtZSBkZSBsYSBsb2kgZHUgMjggZGNlbWJyZSAxOTc3IHF1aSBkaW1pbnVlIGxlcyBkbGFpcyBldCBpbnN0YXVyZSB1bmUgZGlzdGluY3Rpb24gZW50cmUgbCdhYnNlbmNlIHByc3VtZSBldCBkY2xhcmUuIApJdCBhYm91dCBub3JtYWwgZm9yIGEgc3R5bGUgcGxhY2UuIApGb3IgcGVhY2UuIEJ1dCB0aGF0IGRvZXNuIG1lYW4gaXQgYSBibGFjayBhbmQgd2hpdGUgaXNzdWUsIGFzIHlvdSBtYWtpbmcgaXQgb3V0IHRvIGJlLCBhbmQgcG9ydHJheWluZyBpdCB0aGF0IHdheSBlbnN1cmVzIHRoYXQgemVybyBwcm9ncmVzcyBpcyBtYWRlIGJlY2F1c2UgaXQgdHVybmVkIGludG8gYSB6ZXJvIHN1bSBnYW1lLgpJIGFib3V0IHBlZWQgbXlzZWxmIGxhdWdoaW5nIHRoZW4gZGVsZXRlZCB0aGUgYXBwIGFnYWluLi4gCkhlIHNhdyBzb21lIG9mIHRoZSBvdGhlciBhcm15IG1lbWJlcnMgYW5kIHNhaWQgaGVsbG8uIApJIHNlZW4gY2xhaW1zIHRocm93biBhcm91bmQgdGhhdCB0aGUgRm9jdXMgdG9ycXVlIGlzIGxpa2UgZmxvb3JpbmcgaXQgaW4gYSBNdXN0YW5nLCBhbmQgSSBzZWVuIGNsYWltcyB0aGF0IHRoZSBGaWVzdGEgZmVlbHMgbGlrZSBhIE1pYXRhIGhhdGNoLiAKSSdtIGhvcGluZyBzb21lb25lIGhlcmUgY2FuIGdpdmUgbWUgc29tZSBzdHJhdGVneSB0aXBzIGJhc2VkIG9uIHRoZXNlIG9kZHMuIEEgZnJpZW5kIGhhcyBzdWdnZXN0ZWQgcGxhY2luZyAxMiBleGFjdGEgYmV0cyBvbiBaZW55YXR0YSB0byB3aW4gYW5kIGVhY2ggb2YgdGhlIG90aGVycyB0byBwbGFjZS4gVGhlIGFzc3VtcHRpb24gSSdtIG1ha2luZyBpcyB0aGF0IHNoZSB3aWxsIGluZGVlZCB3aW4uLiAKSSB1bmRlcnN0YW5kIGZyb20gcmVjZW50IHByb2plY3RzIHRoaXMgZmVlbGluZywgYnV0IHRoYXQgaXMgbm90IHRoZSBjYXNlLiBQaGlsIGhhcyBiZWVuIHBsYXlpbmcgZm9yIG5lYXJseSAyMCB5ZWFycywgYW5kIGlzIHdlbGwgY29ubmVjdGVkIHRvIHRoZSBnbG9iYWwgcG9rZXIgY29tbXVuaXR5LiBPdXIgcGFydG5lcnNoaXAgY2VudGVycyBhcm91bmQgaGF2aW5nIGhpbSBmYWNpbGl0YXRlIHN0cmF0ZWdpYyBwYXJ0bmVyc2hpcHMsIGFzIHdlbGwgYXMgdXNpbmcgaGltIHRvIGdldCBoaXMgZmVlZGJhY2sgb24gb3VyIHByb2R1Y3QgYXMgd2VsbCBhcyBvdXIgZ28gdG8gbWFya2V0IHN0cmF0ZWd5LiAKIldlIGhhdmUgYmVlbiB0aGUgb25seSBwYXJ0eSBpbiB0aGlzIGVsZWN0aW9uIGNhbXBhaWduIHRoYXQgaGFzIHdvbiBzZWF0cyBpbiB0aGUgcGFybGlhbWVudCwgZXZlcnkgb3RoZXIgcGFydHkgaGFzIGxvc3Qgc2VhdHMgdGhpcyBlbGVjdGlvbiBjYW1wYWlnbiwiIHNoZSB0b2xkIHJlcG9ydGVycyBpbiBOZXcgTm9yZm9sayBvbiBTdW5kYXkuIE1zIFdoaXRlIGluc2lzdGVkIHNoZSB3b3VsZCBzdGF5IG9uIGluIHRoZSBqb2Igd2l0aG91dCBhIGxlYWRlcnNoaXAgYmFsbG90LCBoYXZpbmcgcmVjZWl2ZWQgYSBwcm9taXNlIGZyb20gcmUgZWxlY3RlZCBmb3JtZXIgTGFib3IgbWluaXN0ZXIgRGF2aWQgTyB0aGF0IGhlIHdvdWxkIG5vdCBtb3VudCBhIGNoYWxsZW5nZS4gCllvdSB3aWxsIHdhbnQgYSBzaG92ZWwgdGhhdCBpcyBub3QgdG9vIGxvbmcgb3IgdG9vIHNob3J0LiBZb3UgZG9udCB3YW50IG9uZSB0aGF0IHdpbGwgbWFrZSB5b3UgYmVuZCBkb3duIHRvIHVzZS4gWW91IHdhbnQgb25lIHRoYXQgaXMgYWxzbyBlYXN5IHRvIGNhcnJ5LiAKSXQgaXMgYSBmaXZlIHdlZWsvY2hhcHRlciBjb3Vyc2Ugd2hpY2ggaW5jbHVkZXMgZWR1Y2F0aW9uLCBkaXNjdXNzaW9ucyBhbmQgd29ya3NoZWV0cyBvbiBTdWJzdGFuY2UgQWJ1c2UgRGVwZW5kZW5jeSwgTWFraW5nIERlY2lzaW9ucywgQW5nZXIgTWFuYWdlbWVudCwgQXR0aXR1ZGUsIEJlaGF2aW9ycywgUHJvYmxlbSBTb2x2aW5nLCBTZWxmIEltcHJvdmVtZW50LCBTZXR0aW5nIEdvYWxzLCBJZGVudGlmeWluZyBTdHJlbmd0aHMsIHdlYWtuZXNzZXMgYW5kIFNraWxscy4gV2UgYXJlIGdldHRpbmcgZ3JlYXQgcmV2aWV3cyBhbmQgZ3JlYXQgcmVzcG9uc2VzIGZyb20gdGhvc2Ugd2hvIGFyZSB0YWtpbmcgdGhlIGNvdXJzZS4gTGV0IG1lIGtub3cgaWYgeW91IGFyZSBpbnRlcmVzdGVkIGluIGZpbmRpbmcgb3V0IG1vcmUgYWJvdXQgdGhpcyBwcm9ncmFtLiAKQXJlIHlvdSBpbnRlcmVzdGVkIGluIGhvdyB0byBjb2xsZWN0IHZpbnRhZ2UgY2FzaW5vIHBva2VyIGNoaXBzIG9uIGEgYnVkZ2V0PyBEbyB5b3UgbG92ZSBjb2xsZWN0aW5nIHBva2VyIGNoaXBzLCBidXQgaGF2ZSBhIGxpbWl0ZWQgYW1vdW50IHRoYXQgeW91IGNhbiBzcGVuZD8gQ29uc2lkZXJpbmcgdGhlIGN1cnJlbnQgZWNvbm9taWMgc2l0dWF0aW9uIGluIHRoZSB3b3JsZCwgaXQgaXMgbm8gd29uZGVyISBNYW55IGFyZSB0cnlpbmcgdG8gcGluY2ggZXZlcnkgcGVubnkuIFdoZW4geW91IGhhdmUgYW4gaW50ZXJlc3QgaW4gY29sbGVjdGluZyBpdGVtcyB0aGF0IGRyYXcgeW91ciBpbnRlcmVzdCwgaXQgY2FuIGJlIHJlYWxseSBkaWZmaWN1bHQgdG8gaW5kdWxnZSBpbiBpdCB1bmxlc3MgeW91IGNhbiBmaW5kIGEgd2F5IHRvIGRvIGl0IHdpdGhvdXQgc3BlbmRpbmcgYSBsb3Qgb2YgbW9uZXkuIEluIHRoaXMgaG93IHRvIGd1aWRlLCBJIHdpbGwgcHJvdmlkZSBzZXZlcmFsIGlkZWFzIHRvIGhlbHAgZ2V0IHlvdSBzdGFydGVkIHRvIHNhdmluZyBjYXNoIGFuZCBidWlsZGluZyB1cCB5b3VyIGNvbGxlY3Rpb24gYWxsIGF0IG9uY2UhCkltYWdpbmUgdGhlc2UgaHVnZSBtZW4gd2hvIHRvcCB0aGUgc2NhbGUgYXQgbm8gbGVzcyB0aGFuIDM1MCBsYnMgYW5kIGNhbiBhcHByb2FjaCB0aGUgNDAwIGxiIG1hcmsgZWFzaWx5LiBUaGUgcmlraXNoaSBkaWQgdGhlaXIgdXN1YWwgc2hvcHBpbmcgYXQgTG91aXMgVnVpdHRvbidzIGF0IHRoZSBmYWJ1bG91cyBDYWVzYXJzIFBhbGFjZSBIb3RlbCdzIEZvcnVtIFNob3BzLiBPZiBjb3Vyc2UgdGhleSBkcm9wcGVkIHRob3VzYW5kcyBvZiBkb2xsYXJzIG9uIHRoZSBsYXJnZXN0IHNpemUgTFYgbW9ub2dyYW1tZWQgd2FsbGV0cyBhbmQgaGFuZGJhZ3MgYXMgdGhleSBkaWQgaW4gUGFyaXMuIApJdHMgbm9ybWFsIHRvIGdldCBtYWQgYXQgZWFjaCBvdGhlciwgaXRzIGFsc28gbm9ybWFsIHRvIGhhdmUgYW4gYXJndW1lbnQgYW5kIHdvcmsgdGhyb3VnaCBpdCBhcyBhZHVsdHMuIApJIGRlY2lkZWQgbm90IHRvIGF0dGVuZCB0aGUgZnVuZXJhbCBhcyB3ZSBoYWQgbm90IHNlZW4gb3Igc3Bva2VuIHRvIGVhY2ggb3RoZXIgaW4geWVhcnMuIEkgc2VudCBteSBjb25kb2xlbmNlIHRvIGhpcyBmYW1pbHkgYW5kIGZyaWVuZHMuIApNdWNoIGxpa2UgdGhlIGVhcmx5IDIwdGggY2VudHVyeSBzY3Jld2JhbGwgY29tZWRpZXMgTWV5ZXJzJ3MgZmlsbXMgaGFyayBiYWNrIHRvIChvciwgYXR0ZW1wdCB0byB1cGRhdGUgd2l0aCBhIG1vZGVybiBzaGVlbiBhbmQgcGVuY2hhbnQgZm9yIHdvbWVuIGNsYWQgaW4gaGlnaCBlbmQgbmV1dHJhbCBiYXNpY3MpLCBoZXIgZGlyZWN0b3JpYWwgc3R5bGUgaXMgdW5vYnRydXNpdmUgYW5kIGRpc3RpbmN0aXZlbHkgYnJlZXp5LiBNYWtpbmcgYSBmaWxtIHdpdGggdGhlIHNwZWNpZmljIGxpZ2h0bmVzcyBvZiB0b3VjaCB0aGF0IE1leWVycydzIG1vc3QgYXBwcmVjaWF0ZWQgY29tZWRpZXMgKEZhdGhlciBvZiB0aGUgQnJpZGUsIFRoZSBQYXJlbnQgVHJhcCwgU29tZXRoaW5nJ3MgR290dGEgR2l2ZSkgYXJlIGluaGVyZW50bHkgaW1idWVkIHdpdGggaXMgbm90IGFzIGVhc3kgYXMgaXQgbG9va3MuLiAKQ29uZ3Jlc3MgcGFzc2VkIHRoZSBTaGVybWFuIEFjdCBpbiAxODkwLCBvdXRsYXdpbmcgY29udHJhY3RzIGFuZCBjb25zcGlyYWNpZXMgcmVzdHJhaW5pbmcgdHJhZGUgYW5kL29yIG1vbm9wb2xpemluZyBpbmR1c3RyaWVzLiBGb3IgZXhhbXBsZSwgY29tcGV0aW5nIGluZGl2aWR1YWxzIG9yIGJ1c2luZXNzZXMgbWF5IG5vdCBmaXggcHJpY2VzLCBkaXZpZGUgbWFya2V0cyBvciByaWcgYmlkcy4gSW4gMTkxNCwgQ29uZ3Jlc3MgcGFzc2VkIHRoZSBGZWRlcmFsIFRyYWRlIENvbW1pc3Npb24gQWN0LCBiYW5uaW5nIHVuZmFpciBjb21wZXRpdGlvbiBtZXRob2RzIGFuZCBkZWNlcHRpdmUgYWN0cyBvciBwcmFjdGljZXMuIApJIGdvdCBsZXNzIHRoYW4gaGFsZiBkb25lIGJlZm9yZSB0aGUgbW92ZSwgYW5kIGl0J3MgRElGRklDVUxULiAKS2luZGEgc2VlbWVkIGxpa2UsIHRvIG1lIGF0IGxlYXN0LCB0aGF0IHRoZSBORkwgaGFzIGJlZW4gdW5kZXIgZmlyZSBmb3Igc28gbXVjaCBsYXRlbHkgdGhhdCB0aGUgY2hpZWZzIHVwcGVyIG1hbmFnZW1lbnQgZGlkbid0IHdhbnQgdG8gZGVhbCB3aXRoIGl0LiAKVGhlcmUgd2VyZSByZXBvcnRlcnMgdGhlcmUgdG8gd2l0bmVzcyBpdCBhbGwsIGJlY2F1c2UgQVRGIHdhbnRlZCBhIHdpbiBmb3IgdGhlIHByZXNzLiBEdXJpbmcgdGhlIGFwcHJvYWNoLCBBVEYgYSBkb2cgKGFnZW50IHRvbGQgaW52ZXN0aWdhdG9ycyBBVEYgZmlyZWQgZmlyc3Qgd2hlbiB0aGV5IGtpbGxlZCBhIGRvZywgdGhlbiByZXRyYWN0ZWQgdGhlIHN0YXRlbWVudCB3aGVuIGV2ZXJ5dGhpbmcgd2VudCB0byBzaGl0KSB3aGVuIHRoZXkgb3BlbmVkIGZpcmUgZmlyc3Qgb24gYSBjb21wb3VuZCB3aXRoIDEzMCBwZW9wbGUgaW5jbHVkaW5nIHdvbWVuIGFuZCBjaGlsZHJlbi4gQ3VsdCBtZW1iZXJzIHJlc3BvbmRlZCBhbmQgcGVvcGxlIGdvdCBzaG90LCBpbmNsdWRpbmcgc2V2ZXJhbCAoNiBraWxsZWQsIDMgNiBpbmp1cmVkLCBpbmNsdWRpbmcgS29yZXNoIHdobyB3YXMgYXQgdGhlIGZyb250IGRvb3IpIGN1bHQgbWVtYmVycyBhbmQgc2V2ZXJhbCBBVEYgKDQgZGVhZCwgMTcgaW5qdXJlZCkuLiAKVGhlcmUgYXJlIG1hbnkgY2FzaW5vIHBva2VyIGNoaXBzIHNvbGQgdGhhdCBhcmUgY29tcG9zZWQgb2YgcGxhc3RpYy4gVGhlc2UgYXJlIG5vdCBxdWl0ZSBhcyBkdXJhYmxlIGFzIGNsYXkgcG9rZXIgY2hpcHMsIG9yIGV2ZW4gbWV0YWwgcG9rZXIgY2hpcHMsIGJ1dCB0aGV5IGFyZSByZWFzb25hYmx5IHByaWNlZCBhbmQgc2VydmUgbWFueSB2ZXJ5IHdlbGwhIElmIHlvdSBhcmUgc2hvcHBpbmcgZm9yIHBva2VyIHN1cHBsaWVzIG9uIGEgYnVkZ2V0LCB5b3Ugd2lsbCBzaW1wbHkgZW5qb3kgdGhlIGRlc2lnbiBhbmQgbGlnaHQgd2VpZ2h0IGNoYXJhY3RlcmlzdGljcyBvZiBwbGFzdGljIHBva2VyIGNoaXBzLi4gCklmIHlvdSB3YW50IHRvIGxvc2Ugd2VpZ2h0LCBlYXQgYmVsb3cgeW91ciBtYWludGVuYW5jZSBsZXZlbCAoMTAgMjAlLCB3aGF0ZXZlciBpcyBtb3N0IGNvbWZvcnRhYmxlIGZvciB5b3UpLiBUaGUgd2F5IHRvIGxvc2UgaXMgdG8gY29uc3VtZSBsZXNzIHRoYW4geW91IGJ1cm4sIHNvIGlmIHlvdSdyZSBsb3Npbmcgd2VpZ2h0LCB5b3UgbWF5IGFscmVhZHkgYmUgZG9pbmcgdGhhdC4gSXQncyBlYXN5IHRvIG1pc2NvdW50IGNhbG9yaWVzLCBvciBtaXNjYWxjdWxhdGUgbWFpbnRlbmFuY2UgYmVjYXVzZSBhbGwgb2Ygb3VyIGJvZGllcyBhcmUgZGlmZmVyZW50ICAgYW5kIG9mIGNvdXJzZSB5b3VyIGFjdGl2aXR5IGxldmVsIHdpbGwgZmx1Y3R1YXRlIHlvdXIgYW1vdW50IGJ1cm5lZCEgIHlvdSBzZWVtIHRvIGJlIGRvaW5nIHZlcnkgd2VsbCB0aG91Z2ggICBJIGtub3cgeW91J3ZlIGhlYXJkIGl0IGEgbG90LCBidXQgY29uZ3JhdHMsIHlvdSBsb29rIGdyZWF0ISBBbHNvLCByZW1lbWJlciB0aGF0IGhvdyB5b3VyIGNsb3RoZXMgZml0IGlzIGEgYmV0dGVyIGluZGljYXRvciBvZiB5b3VyIGhlYWx0aCB0aGFuIHlvdXIgYWN0dWFsIHdlaWdodC4uIApCZWNhdXNlIEkgdGhpbmsgdGhhdCBqdXN0IHN0YXJ0cyB0aGUgY3ljbGUgb3ZlciBhZ2Fpbi4gCidZb3UnZCBzZWUgdGhlIGhhaXIgYmVmb3JlIHlvdSBzYXcgbWUsJyBzYXlzIHRoZSAzMSB5ZWFyIG9sZCBkYXRpbmcgY29hY2ggZnJvbSBFc3NleC4gJ1doZW4gSSBjb21iIGl0IG91dCBJIHN0aWxsIGxvb2sgbGlrZSBhIGxpb24uIE15IG1vdGhlciwgd2hvIGlzIEVuZ2xpc2ggYW5kIElyaXNoLCBzdHJ1Z2dsZWQgdG8gYnJ1c2ggaXQuIFNoZSB3b3VsZCBiZSB2aWNpb3VzLCByYWtpbmcgdGhyb3VnaCBpdCwgd2l0aCBtZSBpbiB0ZWFycy4gTXkgaGVhZCB3YXMgYWx3YXlzIGJydWlzZWQuJwpJIGRvbiByZWFsbHkgY2FyZSBpZiBwZW9wbGUgdGhpbmsgSSBidWxsc2hpdHRpbmcgb3Igbm90LiAKTW9zdCBwZW9wbGUgYWNrbm93bGVkZ2UgdGhhdCBhcyB0aGV5IGdldCBvbGRlciwgdGhlaXIgbXVzY2xlcyBkb24ndCB3b3JrIGFzIHdlbGwsIHRoZWlyIG9yZ2FucyBkb24ndCB3b3JrIGFzIHdlbGwsIHRoZWlyIGpvaW50cyBkb24ndCB3b3JrIGFzIHdlbGwsIGV0YywgYnV0IGZldyBvZiB0aGVtIHdhbnQgdG8gYWRtaXQgdGhlaXIgYnJhaW5zIGRvbid0IHdvcmsgYXMgd2VsbC4KS2VubzpLZW5vIGlzIGJhc2ljYWxseSB0aGUgY2FzaW5vIGVxdWl2YWxlbnQgb2YgdGhlIGxvdHRlcnkuIFlvdSB0YWtlIGEgY2FyZCBhbmQgeW91IGdldCB0byBwaWNrIG51bWJlcnMuIApQZW9wbGUgbGlrZSB0byBwbGF5IHRoZSBnYW1lIG5vdCBvbmx5IGZvciBpdHMgc2hlZXIgdmFsdWUgb2YgZnVuIGFuZCBlbnRlcnRhaW5tZW50IGJ1dCBhbHNvIGZvciB0aGUgdGhyaWxsIHRvIHdpbiByZWFsIG1vbmV5IHRocm91Z2ggb25saW5lIHBva2VyIHNpdGVzLi4gCkpvaGFsIGhhcyBiZWd1biBkZW1vbGl0aW9uIG9mIHRoZSBob21lIGluIGFudGljaXBhdGlvbiBvZiBidWlsZGluZyBhIGxhcmdlciBob21lLCBidXQgaGlzIHBsYW5zIG1heSBiZSBzdHltaWVkIGJ5IHByb3ZpbmNpYWwgcmVndWxhdGlvbnMuSm9oYWwgcmVjZWl2ZWQgYW4gZW1haWwgZnJvbSB0aGUgQ2l0eSBvZiBSaWNobW9uZCBvbiBGZWIuIApPZiAxMCw4OTkgcGF0aWVudHMsIHRoZSBtZWFuIGFnZSB3YXMgNTggIDE1IHllYXJzLCA3MSUgd2VyZSB3b21lbiAobiA9IDcsNzU4KSwgYW5kIHRoZSBhdmVyYWdlIGJvZHkgbWFzcyBpbmRleCB3YXMgMzAgIDgga2cvbSgyKS4KQWN0b3IgTHVrZSBQZXJyeSBob3NwaXRhbGl6ZWQgYW5kICd1bmRlciBvYnNlcnZhdGlvbicKSGUgbG9va2VkIHVwb24gdGhlIGxpdHRsZSByb29tIHdoZXJlIE93ZW4gd29ya2VkIGFzIGEgc2FjcmVkIHNocmluZS4gT3dlbiB0YWxrZWQgZXZlcnl0aGluZyBvdmVyIHdpdGggQ2FwdGFpbiBKaW0sIGJ1dCBoZSB3b3VsZCBub3QgbGV0IGhpbSBzZWUgdGhlIG1hbnVzY3JpcHQuLiAKVGhhdCB0aWNrZXQgY2FuIGJlIHVzZWQgaW4gYW5vdGhlciBtYWNoaW5lIG9yIHJlZGVlbWVkIGZvciBjYXNoIGF0IHRoZSBjYXNoaWVyJ3MgY2FnZSBvciBjYXNoIGtpb3NrLiAKQXMgc29tZW9uZSB3aG8gbG92ZXMgdGhpbiBnaXJscywgSSByZWFsbHkgY2hvc2Ugd2VsbC4gSSBub3RpY2VkIGltbWVkaWF0ZWx5IHRoYXQgc2hlIGhhZCBsb25nLCBzbGVuZGVyIGxlZ3MgYW5kIHdhcyBhbHJlYWR5IGdldHRpbmcgdHVybmVkIG9uLiBXaGVuIHNoZSBvcGVuZWQgaGVyIGJsb3VzZSwgc2hlIGhhZCBhIGdvcmdlb3VzLCBmbGF0LCB0YXV0IGJlbGx5IGFuZCBJIGp1c3QgY291bGRuIHdhaXQgdG8gZ2V0IHRvIGhlciEgUGVyaGFwcyBpbmV2aXRhYmx5LCBzaGUgaGFkIHZlcnkgc21hbGwgYnJlYXN0cywgYnV0IGZvciBtZSBhdCBsZWFzdCBicmVhc3Qgc2l6ZSBpcyBub3QgaGlnaCBvbiBteSBsaXN0LiAKSSBub3Qgc2F5aW5nIFdhbGwgU3QuIFdvbiBnbyB1cCwgYW5kIHRoYXQgdXAgbWlnaHQgbGFzdCBmb3IgYSBjb3VwbGUgb2YgeWVhcnMuIEFmdGVyIGFsbCwgeW91IGNhbiB3aW4gYXQgdGhlIGNhc2lub3MgdG9vLCBhdCBsZWFzdCBmb3IgYSB3aGlsZS4gCkJvYXJkIHJ1bnMgb3V0IDQgNyBKIFEgSy4gClNvIHlvdSBvdWdodCB0byBoYXZlIGRlcG9zaXRlZCBteSBtb25leSB3aXRoIHRoZSBiYW5rZXJzLCBhbmQgYXQgbXkgY29taW5nIEkgd291bGQgaGF2ZSByZWNlaXZlZCBiYWNrIG15IG93biB3aXRoIGludGVyZXN0LiBJdCBpcyBpbXBvcnRhbnQgdG8gYWNrbm93bGVkZ2UgdGhhdCBvdXIgTG9yZCB3aWxsIGNvbWUgdG8gdGFrZSBIaXMgYnJpZGUuIApIb3BlZnVsbHkgSSBkb24gc2NyZXcgbXlzZWxmIGFuZCBlbmQgdXAgd2l0aCBub3RoaW5nIGJlY2F1c2UgSSBkb24gYXBwbHkgdG8gZW5vdWdoLi4gClNwcml0ZTE0NCB1CkFkbWluIE5vIHZpZXdzIExlYXZlIGEgY29tbWVudFRoZSByYXRpb25hbGUgeW91IHdpc2ggdG8gZGVmaW5pdGVseSB1cGRhdGUgaXMgdW5kb3VidGVkbHkgYSBkaWFyeSBpcyBqdXN0IG5vdCBsaWtlIGEgcGFydGljdWxhciByZWd1bGFyIHdlYnNpdGUsIGFuZCBvbmUgcGFydGljdWxhciBzZWFyY2ggZW5naW5lcyBleHBlY3QgdG8gaGVscCBzZWUgcmVwbGFjZW1lbnQgY29udGVudCBpbmNsdWRlZCB2ZXJ5IG9uIGEgcmVndWxhciBiYXNpcy4gSWYgdGhleSBkb24ndCB3YXRjaCB0aGlzIGl0J3Mgd2lsbCBoYXZlIGFuIGFmZmVjdCBvbiB0aGUgYmFsYW5jZSBvZiB0cmFmZmljLCBvciByZWFkZXJzLCB3aG8gYXBwZWFyIHRvIGJlIHRvIHRoZWlyIGJsb2cuIEhvd2V2ZXIsIGlmIHlvdSBkbyBub3QgZXZlciBoYXZlIHJlYWRlcnMgdGhlbiBvbmUgd2lsbCBhbHJlYWR5IGhhdmUgbm8gbWFubmVyIG9mIGhvdyBvZiBwcm92aWRpbmcgc2FsZXMgYW5kIC8gb3IgY2xpY2tzIGFuZCBmb3IgYW55IG1vbmV5IHdpdGggd2hhdCBldmVyIHdheSBmYW1pbGllcyBjaG9vc2UgdG8gYXNzaXN0IHlvdSB0byBtb25ldGl6ZSB5b3VyIGJsb2cuLiAKQnV0IHlvdXIgc3RyYXRlZ3kgbWF5IGJlIGJldHRlciBvbmUgZGF5LCBwbGF5IGluIGEgZGVlcGVyIGhpZ2hlciBidXlpbiBnYW1lIHZlcnN1cyAzIHNtYWxsIGJ1eWluIGdhbWVzIHdoaWNoIG1heSB0YWtlIGFsbW9zdCB0aGUgc2FtZSBhYm91dCBpZiB0aW1lIGRlcGVuZGluZyBvbiBob3cgbWFueSBhcmUgaW4gdGhlIGZpZWxkLgpJdCBpcyBpbmNvcnBvcmF0ZWQgYXMgYW4gQWxhYmFtYSBub25wcm9maXQgY29ycG9yYXRpb24gYW5kIGNlcnRpZmllZCBieSB0aGUgSW50ZXJuYWwgUmV2ZW51ZSBTZXJ2aWNlIGFzIGEgcXVhbGlmaWVkIGNoYXJpdGFibGUgb3JnYW5pemF0aW9uLiBHaWZ0cyB0byB0aGUgZm91bmRhdGlvbiwgbGlzdGVkIGluIElSUyBQdWJsaWNhdGlvbiA3OCwgQ3VtdWxhdGl2ZSBMaXN0IG9mIE9yZ2FuaXphdGlvbnMgYW5kIGRlc2NyaWJlZCBpbiBDb2RlIDEwKGMpKDMpIG9mIHRoZSBJbnRlcm5hbCBSZXZlbnVlIENvZGUsIGFyZSB0YXggZGVkdWN0aWJsZSBhcyBwZXJtaXR0ZWQgYnkgbGF3LiBUaGUgZm91bmRhdGlvbiBoYXMgbWV0IGNlcnRhaW4gc3RhbmRhcmRzIGFuZCByZXF1aXJlbWVudHMgb2YgdGhlIEludGVybmFsIFJldmVudWUgU2VydmljZSB3aXRoaW4gdGhlIG1lYW5pbmcgb2YgSVJTIENvZGUgU2VjLiAKVGhlbiwgb2YgY291cnNlLCBodW1hbnMgbXVzdCBwb3B1bGF0ZSB0aGlzIGFyY2hpdGVjdHVyZSBvZiBib3VuZGFyaWVzLiBZb3UgbmVlZCBndWFyZHMgaW4gdW5pZm9ybXMgdG8gZW5nYWdlIGluIGEgcml0dWFsIHNvcnQgb2YgZXhjaGFuZ2U6LiAKVG8gYSBjZXJ0YWluIGV4dGVudCwgaXQgaXMgb2JsaXZpb3VzIHRvIGN5Y2xpY2FsIHR1cmJ1bGVuY2UgYmVjYXVzZSBpdCBpcyBwYXJ0IG9mIGEgc3RydWN0dXJhbCBzaGlmdCBhcm91bmQgdGhlIHdvcmxkIHRvIGVjb25vbWllcyBidWlsdCBvbiBkYXRhIGFuZCB0aGUgdGVjaCByZXF1aXJlZCB0byBjb2xsZWN0IGFuZCBwcm9jZXNzIHRoYXQgaW5mb3JtYXRpb24uLiAKQnV0IEkgdGhpbmsgd2hhdCBpcyByZWFsbHkgZ29pbmcgb24gaW4gVm9sdGVycmEgaXMgdGhlIHN0cmFuZ2UgbWFycmlhZ2Ugb2YgY2FwaXRhbGlzbSBhbmQgcm9tYW5jZS4gUm9tYW5jZSBhcyBhbiBpZGVhbCB0eXBlIGFsd2F5cyBsZWF2ZXMgdXMgbG9uZ2luZyBmb3Igc29tZXRoaW5nIG1vcmUgb3Igc29tZXRoaW5nIGRpZmZlcmVudCB0aGFuIHdoYXQgd2UgaGF2ZS4gY2FwaXRhbGlzbSBpcyB0aGVyZSB0byBvZmZlciB1cyBhIHBhdGggb2YgY29uc3VtcHRpb24gdG8gZmlsbCB0aGF0IGFjaGluZywgZW1wdHkgcGxhY2Ugb2YgbmVlZCBhbmQgZGVzaXJlIHRoYXQgYXJlIGxlZnQgd2hlbiBldmVyeWRheSBleHBlcmllbmNlIGNhbm5vdCBtYXRjaCB0aGUgYmVhdXR5IGFuZCBwYXNzaW9uIHRoYXQgaXMgRWR3YXJkIGFuZCBCZWxsYS4gdG91cmlzbSwgYWxhYmFzdGVyIGFwcGxlcywgRWR3YXJkIGFuZCBCZWxsYSB0ZWUgc2hpcnRzLgpOYXR1dXJsaWprIGdldmVuIGFuZGVyZW4gbGlldmVyIGRpdCBiZWRyYWcgYWFuIGRyLiAKRGVhbCBvdXQgYW4gZW50aXJlIGRlY2sgb2YgY2FyZHMuIFBpY2sgb25lIHBlcnNvbiB0byBiZSB0aGUgZGVhbGVyIGFuZCBoYXZlIHRoZW0gaGFuZCBvdXQgYSBkZWNrIG9mIDUyIHBsYXlpbmcgY2FyZHMsIGZhY2UgZG93biBhbmQgb25lIGF0IGEgdGltZSwgdG8gZWFjaCBwZXJzb24gZ29pbmcgY2xvY2t3aXNlLiBUaGlzIGdhbWUgY2FuIGJlIHBsYXllZCB3aXRoIGFueXdoZXJlIGZyb20gdGhyZWUgdG8gZWlnaHQgcGVvcGxlLlsxXQpCYWJibGluZ2hlYXJ0ICA0MzIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KV291bGQgbG92ZSB0byBoZWFyIHNvbWUgb3BpbmlvbnMgb24gVGhlIFdvb2RiaW5lLCBMYVNhbGxlLCBUaGUgV2luZHNvciwgVGhlIEdhcnJpY2sgYW5kIGFueSBvdGhlciBXaW5uaXBlZyBkaXZlIGJhcnMuIApUaGUgY2x1YiBmb3IgdGhlIGZpcnN0IGZldyB5ZWFycyBvZiB0aGVpciBleGlzdGVuY2UgcGxheWVkIGluIHRoZSBDaGlsdGVybiBEaXN0cmljdCBGb290YmFsbCBMZWFndWUsIHRoZW4gbW92ZWQgdG8gdGhlIE8gaW4gMTk0Ny4gRm9yIGEgc2hvcnQgdGltZSBpbiB0aGUgZWFybHkgMTk1MHMgdGhleSBhbHNvIHBsYXllZCBhIHJlc2VydmVzIHRlYW0gaW4gdGhlIEh1bWUgRm9vdGJhbGwgTGVhZ3VlLiAKWWEgYW1rIGxrZSBrdXJ1bGR1dW5kYW4gYmVyaSBwcm9ibGVtbGkgemF0ZW4uIApZb3UgbWF5IHRoaW5rIHlvdXIgZGF1Z2h0ZXIgaXMganVzdCBsaWtlIG9uZSBvZiB0aGUgYm95cywgYnV0IHNoZSBnb2luZyB0byBkZXZlbG9wIGZhc3RlciwgaGVyIGludGVyZXN0cyBhcmUgZ29pbmcgdG8gY2hhbmdlIGZhc3RlciwgYW5kIGhlciBvcGluaW9ucyBvbiBmcmllbmQgYWN0aXZpdGllcyB2cyBzb2xvIHdpbGwgYWxzbyBjaGFuZ2UgZHVlIHRvIGRpZmZlcmluZyBkZWdyZWVzIG9mIGNvbXBhc3Npb24gYW5kIGVtcGF0aHkgaW4gYm95cyBhbmQgZ2lybHMuIFRoZXJlIGEgc3RhdGlzdGljYWxseSBpbnNpZ25pZmljYW50IGNoYW5jZSB0aGF0IHNoZSBzdGF5cyBpbiB0aGUgQm95IFNjb3V0cy4gTWF5YmUgMSBpbiA1MDAuIFNvLCBpbiBhIGNvdXBsZSB5ZWFycyBzaGUgbGVhdmVzIGFuZCBmcm9tIHlvdXIgcGVyc3BlY3RpdmUgdGhhdCBmaW5lLCBidXQgZnJvbSB0aGUgcGVyc3BlY3RpdmUgb2YgdGhlIG90aGVyIHBhcmVudHMgYW5kIHRoZWlyIGJveXMgeW91ciBkYXVnaHRlciB3YXMganVzdCBhIHBlcnNvbiB0aGV5IHdlcmUgb2JsaWdlZCB0byBlbnRlcnRhaW4gdW50aWwgc2hlIGdyZXcgaW50byBoZXIgb3duIGludGVyZXN0cy4gU2hlIGlzIGp1c3QgYSBwb2xpdGljYWwgdGhvcm4gaW4gdGhlIHNpZGUgb2YgYSBwcm9ncmFtIGRlc2lnbmVkIHRvIGFzc2lzdCBib3lzIGZvciAxMCsgeWVhcnMuIEJveXMgdGhhdCByZW1haW4gZnJpZW5kcyBmb3IgbGlmZS4gQm95cyB0aGF0IGhhdmUgZWFjaCBvdGhlciBiYWNrcy4gQm95cyB3aXRoIHRoZSBzYW1lIGludGVyZXN0cy4gVGhleSBjYW4gYmUgZ3Jvc3MgdG9nZXRoZXIsIGxlYXJuIHRvZ2V0aGVyLCBhbmQgaGVscCBlYWNoIG90aGVyIGJlY29tZSBwYXJ0IG9mIHRoZSBjb21tdW5pdHkuIFlvdXIgZGF1Z2h0ZXIgd2lsbCBxdWl0IHRoZSBtaW51dGUgc2hlIGhpdHMgcHViZXJ0eSBhbmQgcmVhbGl6ZXMgc2hlIGRvZXNuIGhhdmUgYW55dGhpbmcgaW4gY29tbW9uIHdpdGggMzkgaG9ybnkgYm95cy4KRm9yIGFueW9uZSBub3QgZmFtaWxpYXIgd2l0aCB0aGlzIHR5cGUgb2YgYWNjb3VudHMgKGFuZCBob3cgdGhleSBodXJ0IHJlZGRpdCksIHRoaXMgcGFnZSBtYXkgaGVscCB0byBleHBsYWluLiAvci90aGVzZWZ1Y2tpbmdhY2NvdW50cyBhbHNvIGlzIGEgZ29vZCByZXNvdXJjZSB0byBsZWFybiBtb3JlIGFib3V0IHRoZW0uCkl0IHNob3VsZG4gYmUgYWxsb3dlZCB0byBzbGlwIGJ5IGFzIGp1c3QgYW5vdGhlciBhY2NlbnQgbGlrZSBzb21lIGFyZSBzYXlpbmcuLiAKSSBnb3QgeW91LiAKVGhlcmUgd291bGQgYWxzbyBiZSBhZGRpdGlvbmFsIGFjdHVhbCBhbmQgb3Bwb3J0dW5pdHkgY29zdHMgYXNzb2NpYXRlZCB3aXRoIHJhbXBpbmcgYW5kIHBvd2VyIGN5Y2xpbmcuIApOb3Qgb25seSBkb2VzIHRoYXQgZ2l2ZSB0aGVtIGFuIGFsbW9zdCBnYXJlbnRlZWQgcGxheSBvZmYgYmVydGggZXZlcnkgc2Vhc29uIGJ1dCB0aG9zZSA2IGVhc3kgd2lucyBnaXZlIHRoZW0gYSBnb29kIHJlY29yZCBldmVyeSB5ZWFyIGVuc3VyaW5nIHRoYXQgdW5sZXNzIHNvbWUgb3RoZXIgQUZDIHRlYW0gaXMgZ29pbmcgR29kIG1vZGUgdGhhdCB0aGUgcGF0cmlvdHMgd2lsbCBoYXZlIGhvbWUgZmllbGQgYWR2YW50YWdlIHRocm91Z2ggdGhlIHBsYXkgb2Zmcy4KQW5uYWxzIG9mIHRoZSBSaGV1bWF0aWMgRGlzZWFzZXMgc2Vla3MgdG8gcHVibGlzaCBzaWduaWZpY2FudCBzY2llbnRpZmljIGFkdmFuY2VzIHdoaWNoIGFyZSBsaWtlbHkgdG8gaW1wYWN0IG9uIGNsaW5pY2FsIHByYWN0aWNlIHdpdGhpbiB0aGUgbWVkaXVtIHRlcm0uIEFydGljbGVzIGlsbHVzdHJhdGluZyBiYXNpYyBtZWNoYW5pc21zIGFuZCB0aGVpciBhcHBsaWNhdGlvbiB0byBjbGluaWNhbCBtYXRlcmlhbCB3aWxsIGJlIHdlbGNvbWVkLiBUaGUgam91cm5hbCBhaW1zIHRvIGNvdmVyIGFsbCBhcmVhcyBvZiByaGV1bWF0b2xvZ3kgYW5kIGhhcyB0d28gbWFpbiBzZWN0aW9ucyBmb3Igb3JpZ2luYWwgcmVzZWFyY2ggYXJ0aWNsZXMgb25lIGZvciBjbGluaWNhbCBhbmQgZXBpZGVtaW9sb2dpY2FsIHJlc2VhcmNoIGFuZCBvbmUgZm9yIGJhc2ljIGFuZCB0cmFuc2xhdGlvbmFsIHJlc2VhcmNoLiAKTWluZXJzIHJlZnVzZWQgdG8gbWluZSB0cmFuc2FjdGlvbnMgdGhhdCBiZWxvbmdlZCB0byB0aGUgaGFja2VkIGFjY291bnRzIGFuZCB0aGV5IHRocmVhdGVuZWQgb3RoZXIgbWluZXJzIHRoYXQgdGhleSB3b3VsZG4gbWluZSBibG9ja3Mgb24gdG9wIG9mIHRoZWlyIGJsb2NrcyBpZiB0aGV5IGluY2x1ZGVkIHRoZW0uIAoxNSB5ZWFycyBsYXRlciwgSSdsbCB3aXNoIGhlIGhhZCBzdXJ2aXZlZCBpdCB0aGUgd2F5IEkgZGlkLiAyIGRlY2FkZXMgbGF0ZXIsIEknbGwgd29uZGVyICJ3aHk/IiBvbmNlIGFnYWluLi4gCkkgZ290IGEgbGl0dGxlIHR1cm5lZCBhcm91bmQgYW5kIGNvdWxkbid0IGZpZ3VyZSBvdXQgaG93IHRvIGdldCBiYWNrIHRvIG15IGhvdGVsLiBJIGNhbWUgdXBvbiBhIHNpZ24gdGhhdCBwb2ludGVkIHRvd2FyZCBNdC4gCkFmdGVyIHRoZSBjYXBzdWxlIHJlYWNoZWQgdGhlIHNwYWNlIHN0YXRpb24gbGFzdCBTdW5kYXkgbW9ybmluZywgTkFTQSBhc3Ryb25hdXQgQW5uZSBNY0NsYWluIHJlY29nbml6ZWQgdGhlIGV2ZW50IG9uIGEgbGl2ZSB3ZWJjYXN0OiAiV2Uga25ldyBob3cgc2lnbmlmaWNhbnQgaXQgd2FzIGFuZCBob3cgaW1wb3J0YW50IGl0IHdhcywgcmVhbGx5IGZvciB0aGUgd2hvbGUgaGlzdG9yeSBvZiBzcGFjZWZsaWdodC4gClJhbmdlIGludGVyYWN0aW9uLiBBcyB5b3Ugc3RhcnQgdG8gc2VlIGhvdyBmYXIgd2UgZGV2aWF0ZSBmcm9tIGVxdWlsaWJyaXVtLCB5b3VyIG5vZGVsb2NraW5nIHdvcmsgc2hvdWxkIGhlbHAgeW91IHVuZGVyc3RhbmQgaG93IHRvIGJlc3QgY291bnRlciB5b3VyIG9wcG9uZW50cy4uIApJIGxpdmUgaW4gV2FzaGluZ3RvbiBzbyBpdCB3YXMgZWFzeSB0byBwbGF5IGl0IGJ5IGVhciB3aXRoIHRoZSBzdGFydCBkYXRlLiBKdXN0IHdhaXQgdGlsIHRoZSBoYXJ0cyBwYXNzIHNub3RlbCB6ZXJvcyBvdXQgcGx1cyBhIGNvdXBsZSB3ZWVrcyBhcyBhIHZlcnksIHZlcnkgcm91Z2ggZXN0aW1hdGlvbi4gCjMgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnb1NvdW5kcyBsaWtlIHlvdSBhcmUgbW9yZSBhZnJhaWQgb2YgaGltIHRoYW4gaW50byBoaW0uIFRvbyBtdWNoIHByZXNzdXJlIG9uIHlvdT8gWW91IDIzIGFuZCBpbiBjb2xsZWdlLiBUaGVyZSBwbGVudHkgb2YgbWVuIGFyb3VuZCB3aG8gd2lsbCBiZSB3aWxsaW5nIHRvIHdhaXQgdW50aWwgeW91IHJlYWR5LiAKSGF2ZSB5b3UgZXZlciBzZWVuIGEgY2hpcCBzZXQgYXMgc3RyaWtpbmcgYXMgdGhlIDEwMCBQYXVsc29uIFBoYXJvYWhzIENsdWIgUG9rZXIgQ2hpcCBTZXQ/IEl0IGlzIGRvdWJ0ZnVsIHRoYXQgeW91IGhhdmUgY29uc2lkZXJpbmcgYWxsIHRoZSB1bmlxdWUgY3JhZnRzbWFuc2hpcCB0aGF0IGhhcyBnb25lIGludG8gdGhlIGRldmVsb3BtZW50IG9mIHRoZXNlIGNoaXBzLiBUaGVzZSBhcmUgbm90IGdlbmVyaWMgcG9rZXIgY2hpcHMgdGhhdCB5b3UgY2FuIHB1cmNoYXNlIGluIGEgY29udmVuaWVuY2Ugc3RvcmUuIFRoZXkgYXJlIGFydGZ1bGx5IGNyYWZ0ZWQgaXRlbXMgdGhhdCBkZWxpdmVyIGEgdW5pcXVlIGxvb2sgYW5kIGFwcGVhbCB0aGF0IGxvbmcgdGltZSBwbGF5ZXJzIHdpbGwgYmUgYXR0cmFjdGVkIHRvIGFuZCBuZXcgcGxheWVycyB3aWxsIG91dHJpZ2h0IG1hcnZlbCBhdC4uIApJJ20gdHJ5aW5nIHRvIGZpbmQgYSBnb29kIHF1b3RlIHRvIHByaW50IGluc2lkZSB0aGF0IGFja25vd2xlZGdlcywgd2l0aG91dCBkaXJlY3RseSB0YWxraW5nIGFib3V0IGl0LCB0aGUgZHVtcHN0ZXIgZmlyZSB0aGF0IGhhcyBiZWVuIDIwMTYuIFttb3JlIGluc2lkZV0uIAogNyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ29Zb3Ugd2FudCBmdWxsIGZyZWVkb20gYXQgaG9tZSwgdXNlIEtvZGkgYWthIHRoZSBPRyBha2EgV2hhdCBQbGV4IGlzIGJhc2VkIG9mZiBvZiwgdGhhdCBnb3QgYSBsb3Qgb2YgdXMgaW50byB0aGlzIHN0dWZmIGJhY2sgaW4gdGhlIGRheSB3aGVuIGl0IHdhcyBYQk1DRW1ieSwgbm90IG9wZW4gc291cmNlIGFuZCBhcyBvZiB0b2RheSB0aGVyZSBpcyBhIGJpZyB0aHJlYWQgYmVjYXVzZSBvbmUgb2YgdGhlaXIgdXBncmFkZXMgYXBwYXJlbnRseSBlcmFzZWQgYSBndXlzIGZ1bGwgbW92aWUgZm9sZGVyICgxN1RCKSBZSUtFUyFKZWxseWZpbiwgb3BlbiBzb3VyY2Ugb2YgRW1ieSB0aGF0IEkgaG9wZSB0YWtlcyBvZmYgYW5kIGlzIGdyZWF0IGJ1dCBpdHMgbm90IG5lYXJseSBhcyB3aWRlIHNwcmVhZCBhcyBQbGV4LkkgZ2V0IHlvdXIgcGFpbi4gSSByZWNlbnRseSBoYWQgc29tZSB0cm91YmxlIGluIFVucmFpZCBhbmQgdGhlIG1vZHMgdGhlcmUgcmVzcG9uZGVkIGFuZCBhIGd1eSB3aG8gbWFkZSBhIHBsdWdpbiB1cGRhdGVkIGl0IHRoZSBuZXh0IGRheSwgSSB3YXMgbGlrZSBIT0xZIFNISVQhIElzIHRoaXMgd2hhdCByZWFsIHJlc3BvbnNlIGlzIGxpa2U/SSBqdXN0IHdhbnQgc21hbGwgc2hpdCBsaWtlIGJlaW5nIGFibGUgdG8gaGlkZSBpdGVtcyBpbiBhIGNvbGxlY3Rpb24gZXZlbiBpZiB0aGV5IGFyZSBpbiBhIGJpZ2dlciBjb2xsZWN0aW9uIHRoYXQgaXMgbm90IGhpZGRlbi5CdXQgeWVhaCB3aXRoIFBsZXggYmVpbmcgb24gZXZlcnl0aGluZyBpdCBzdXBlciBoYXJkIHRvIGRyb3AgdGhlbS4gCllvZ2EgWW9nYSBpcyBhIGZvcm0gb2YgZXhlcmNpc2UgdGhhdCBoZWxwcyBrZWVwIHRoZSBib2R5IGluIHNoYXBlLiBOb3Qgb25seSBkb2VzIGl0IGhlbHAgcmVsaWV2ZSBhcnRocml0aXMgcGFpbiwgYnV0IGl0IGFsc28gcmVkdWNlcyBzdHJlc3MgYW5kIGhlbHBzIHN0cmVuZ3RoZW4gam9pbnRzLiBUaGUgbWluZCBpcyBpbnRlbmRlZCB0byBmb2N1cyBpbndhcmQgb24gdGhlIGJvZHkgd2hpbGUgcGVyZm9ybWluZyB5b2dhIHBvc2VzIHN1Y2ggYXMgdGhlIGNhbWVsIHBvc2Ugb3IgdGhlIGxvdHVzIHBvc2UuIE5vdCBvbmx5IGlzIHRoaXMgaGVscGZ1bCBpbiB0aG9zZSB3aXRoIG9zdGVvYXJ0aHJpdGlzIChieSBzdHJlbmd0aGVuaW5nIGFuZCB1c2luZyB0aGUgam9pbnQsIHRoZSBzdGlmZm5lc3MgZ3JhZHVhbGx5IHdpbGwgZ28gYXdheSBhcyB0aGUgZGF5IHByb2dyZXNzZXMpLCBidXQgYWxzbyB0aG9zZSB3aXRoIHJoZXVtYXRvaWQgYXJ0aHJpdGlzIChhcyBhIGZvcm0gb2YgZGlzdHJhY3Rpb24gb3IgaW1hZ2VyeSwgaXQgaGVscHMgeW91IHRvIGZvY3VzIG9uIHNvbWV0aGluZyBlbHNlIGJlc2lkZXMgdGhlIHBhaW4pLiBZb3VyIGRvY3RvciBvciB0cmFpbmVkIHByb2Zlc3Npb25hbCBzaG91bGQgYmUgYWJsZSB0byByZWNvbW1lbmQgd2hldGhlciBvciBub3QgeW9nYSB3b3VsZCBiZSBzb21ldGhpbmcgZm9yIHlvdSBhbmQgbWF5IGFsc28gYmUgYWJsZSB0byByZWNvbW1lbmQgYSB5b2dhIGNlbnRlci4KSWYgeW91IGF0IGEgY2Fsb3JpZSBkZWZpY2l0IHRoZW4geW91IGFyZSBsb3NpbmcgZmF0LCBhbmQgdGhhdCB3aWxsIGJlIHJlZmxlY3RlZCBvbiB0aGUgc2NhbGUgZXZlbnR1YWxseS4gCkxhcyBWZWdhcyBwb2xpY2Ugc2FpZCBoZSBoYWQgMjMgZ3VucyBhdCB0aGUgaG90ZWwsIGluY2x1ZGluZyBzZW1pYXV0b21hdGljIHJpZmxlcywgYW5kIDE5IGF0IGhpcyBob21lIGFsb25nIHdpdGggdGhvdXNhbmRzIG9mIHJvdW5kcyBvZiBhbW11bml0aW9uLi4gCktleSBmYWN0b3JzIGluY2x1ZGU6IGxlbmd0aCBvZiBhcHBvaW50bWVudHMsIHRpbWUgb2YgZGF5LCB0aW1lIG9mIHllYXIgKHRheCBzZWFzb24sIENocmlzdG1hcywgTmV3IFllYXJzLCBKdWx5IDQsIGNvbXBhbnkgY2VudGVubmlhbCwgZXRjLiksIG51bWJlciBvZiBob3VycywgbG9jYXRpb24sIGRheSBvZiB0aGUgd2VlaywgZXRjLiBXZSB3YW50IHlvdXIgYnVzaW5lc3MgYW5kIGxvb2sgZm9yd2FyZCB0byBxdW90aW5nIHlvdSB0aGUgbG93ZXN0IHByaWNlIHBvc3NpYmxlLiBDYWxsIG91ciBjb3Jwb3JhdGUgb2ZmaWNlIHRvZGF5IGF0IDc1NyA5MTggMzU2NSBmb3IgeW91ciBjdXN0b21pemVkIHByaWNlIHF1b3RlLkhFUkUgQVJFIFRIUkVFIFdBWVMgT1VSIE9OIFNJVEUgTUFTU0FHRSBQUk9HUkFNUyBNQVkgQkVORUZJVCBZT1U6MS4gClRoZSBiaWdnZXN0IHByb2JsZW0gaXMgYWN0dWFsbHkgbm90IHRoZSBNTCBwYXJ0LCBidXQgdGhlIG90aGVyIHBsYXllcnMsIHRoZSBkZWNsaW5pbmcgcmV2ZW51ZSBvZiBvbmxpbmUgcG9rZXIsIGFuZCB0aGUgYW50aSBib3R0aW5nIHdvcmsgYnkgZXZlcnkgbWFqb3Igc2l0ZS4gUG9rZXIgcGxheWVycyBhcmUgc29tZXdoYXQgb2JzZXNzaXZlIGFib3V0IGltcHJvdmluZyB0aGVpciBwbGF5LCB3aXRoIGVkdWNhdGlvbmFsIHdlYnNpdGVzIG1ha2luZyBhIHNtYWxsIGZvcnR1bmUuIFRoZSBlbnRpcmUgb25saW5lIHBva2VyIG1hcmtldCBoYXMgbWF5YmUgJDEwQiBpbiByZXZlbnVlLCB3aGljaCBpc24gYSBsb3QgaW4gdGhlIGdyYW5kIHNjaGVtZSBvZiB0aGluZ3MuIEFuZCBwcmV0dHkgbXVjaCBldmVyeSBwb2tlciBzaXRlIGxlZnQgaGFzIHBlb3BsZSB3b3JraW5nIG9uIGFudGkgYm90dGluZyBtZXRob2RzLiBUaGV5IHJlYWxseSBnb29kLCBhbmQgeW91IHVubGlrZWx5IHRvIGdldCBhcm91bmQgdGhlbS4KSG93ZXZlciwgZGVzcGl0ZSB0aGUgbWFya2V0aW5nIGFkdmFudGFnZSwgSSBkb3VidCBtb3N0IHBlb3BsZSBhcmUgc28gbG95YWwgdG8gdGhlaXIgR1BVIGJyYW5kIHRoZXkgd291bGRuIGp1bXAgYXQgYW4gb3Bwb3J0dW5pdHkgdG8gZ2V0IHNpZ25pZmljYW50bHkgYmV0dGVyIHBlcmZvcm1hbmNlIGF0IHNpZ25pZmljYW50bHkgbG93ZXIgcHJpY2UgZnJvbSBBTUQuIFRoZXkganVzdCBuZWVkIHRvIHN0ZXAgdXAgYW5kIGJyaW5nIHJlYWwgY29tcGV0aXRpb24sIGluc3RlYWQgb2YganVzdCBiZWluZyBhIHNvbWV3aGF0IHZpYWJsZSBhbHRlcm5hdGl2ZSBvbiBzb21lIHByaWNlIHRpZXJzLgpUaGluayB0aGF0IHNvbWV0aGluZyBmcm9tIHRoZSB0cmliZSBwZXJzcGVjdGl2ZSB0aGF0IHN0aWxsIG5lZWRzIHRvIGJlIHJldmlld2VkLCBBbGxlbiBzYWlkIG9mIHRoZSBTZW5hdGUgYmlsbC4gQ29uY2Vybiwgc2VwYXJhdGUgZnJvbSB0aGUgY29tcGFjdCwgaXMgdGhhdCBvdXRzaWRlIGluZmx1ZW5jZXMgY29taW5nIGludG8gdGhlIHN0YXRlIG9mIEZsb3JpZGEsIG5vbiByZWd1bGF0ZWQsIGlzIHNvbWV0aGluZyB0aGF0IHdlIGRvbiBiZWxpZXZlIGlzIGdvb2QgZm9yIHRoZSBpbmR1c3RyeSBpbiBnZW5lcmFsLiBJIHRoaW5rIHRoYXQgdGhhdCBsYW5ndWFnZSBpcyBzb21ldGhpbmcgdGhhdCB3ZSBoYXZlIHRvIHdvcmsgdGhyb3VnaCB3aXRoIHRoZSBzdGF0ZS4gCldoYXQgYmVhdHMgYSBzdHJhaWdodCBmbHVzaApJdCBpcyBkaWZmaWN1bHQgdG9kYXkgdG8gZmluZCBhIG1vbWVudCB0byByZXN0IGFuZCBjb21wbGV0ZSByZWxheGF0aW9uLCB3aGljaCBvZmZlcnMgYSB3ZWxsIG1hZGUgbWFzc2FnZS4gCk90aGVyIHBlb3BsZSBjYW4gYWJzb2x1dGVseSBiZSBpbnZvbHZlZCBidXQgdGhleSBjYW5ub3QgYmUgZ2l2ZW4gdGhlaXIgb3duIHRocmVhZC4gSWYgaXQgaXMgbm90IHlvdXIgTUlMIG9yIG1vbSwgYSBTb25JTC9ESUwgbXVzdCBiZSBwcmVzZW50IG9yIG90aGVyd2lzZSBjbGVhcmx5IGV2aWRlbnQgICBubyAicG90ZW50aWFsIiBKTk1JTHMuIE5vIGZpY3Rpb25hbCBNSUxzLiBTZWUgb3VyIEp1c3RObyBOZXR3b3JrIGZvciBhbGwgb3RoZXIgcmVsYXRlZCBjb250ZW50LgpJbCBmYXV0IHF1ZSBsYSByaWNoZXNzZSBkZSBsZXVyIHByb3ByaSBpbnRlbGxlY3R1ZWxsZSByZXN0ZSBpY2kuIApJIHNlY29uZCBjYXAnbi4gUGVvcGxlIHdobyBhcmUgcGxheWluZyBmb3IgcGxheSBtb25leSB3aWxsIGJldCBvbiBhbnkgZGFtbiB0aGluZy4gUmVtZW1iZXIgdGhhdCBnb29kIHBsYXllcnMgcGxheSBvbmx5IHZlcnkgZ29vZCBoYW5kcywgYW5kIHRob3NlIG9ubHkgY29tZSBhcm91bmQgc29tZXRoaW5nIGxpa2UgMTAgMjAlIG9mIHRoZSB0aW1lLCBzb21ldGltZXMgbGVzcy4gSSBoYXZlIGZvdW5kIHRoYXQgd2hlbiBJIGxvc2Ugc2lnaHQgb2YgdGhpcywgSSBsb3NlLgpUaGlzIGlzIGEgdmVyeSBkaXJlY3QgYW5hbG9neSB0byBrYXJtYS4gCkFsc28gbmVhcmJ5IGlzIHRoZSBSYW5jaG8gQ2F5bXVzIElubiwgYSBuZXdseSBvcGVuZWQgYm91dGlxdWUgaG90ZWwgdGhhdCBjbG9zZSB0byBtYW55IG1vcmUgd2luZXJpZXMsIGluY2x1ZGluZyBTdC4gCkl0IHNpbXBsZS4gQWdhaW4gdGhvdWdoLCBJIGRvbiBrbm93IHRoZSB3aG9sZSBzdG9yeS4gClNjaG9vbHMgbmVlZCBhIG1hbmRhdG9yeSBkZXRhaWxlZCB0aG9yb3VnaCBjbGFzcyB3aGVyZSB0aGV5IGV4Y2x1c2l2ZWx5IHByZXBhcmUgdGhlIHN0dWRlbnRzIG9uIHN1Y2NlZWRpbmcgcGFzdCBoaWdoIHNjaG9vbCB3aGV0aGVyIGl0IGJlIGNvbGxlZ2Ugb3Igc29tZXRoaW5nIGVsc2UuLiAKSGVsbCwgdGhlIHJlZGRpdCBlZGl0aW5nIHdpbmRvdyBJIHR5cGluZyBpbiByaWdodCBub3cgaXMgcGxlbnR5IGVub3VnaCBmb3IgdGhlIHRhc2suLiAKSSBkb24gd2FudCB0byBkZWJ1ZyB0aGlzIG9uIHRoZSBwYWdlLCBzbyBzaG9vdCBtZSBhbm90aGVyIG5vdGUgaWYgdGhlIHN1Z2dlc3Rpb25zIGJlbG93IGRvbiB3b3JrLgpCbG93ZHJ5IGhhaXIsIGhvbGRpbmcgdGhlIGhhaXJkcnllciBhdCBsZWFzdCAxMiBpbmNoZXMgYXdheSBzbyB0aGF0IHlvdSBkbyBub3QgZGFtYWdlIHlvdXIgaGFpci4KTXkgd2lmZSBub3cgaGFzIGEgZ29vZCByb2xlIGFzIHdlbGwgYXQgYSBsYXcgZmlybS4gCkkganVzdCB3YW50IHRoZW0gdG8gc3VwcG9ydCBpdCBidXQgaXQgbG9va3MgbGlrZSBpdCBnb2luZyB0byBiZSBraWxsZWQgb2ZmLiAKSWYgeW91IHNvbWVvbmUgZWxzZSB3aG8gcmVhZGluZyB0aGlzIGFuZCBzZXJpb3VzbHkgb24gdGhlIGZlbmNlIGFib3V0IHRoZSB2YWxpZGl0eSBvZiBhbiBlbnRpcmUgZ3JvdXAgb2YgcGVvcGxlLCBwbGVhc2UgY29uc2lkZXIgd2hhdCBJIHNhaWQsIGl0IHNob3VsZCBtYWtlIHNlbnNlIHRvIHlvdSBpZiB5b3Ugbm90IGFscmVhZHkgZHVnIHlvdXJzZWxmIGludG8gYSBjb3JuZXIuLiAKQW5kIHNvIG9uLiBBZ2FpbiwgdGhlIHByaW1hcnkgdHJpZ2dlciBpcyB3aGVuIHlvdSBkb25lIHNvbWV0aGluZyAob3IgaGFkIHNvbWV0aGluZyBkb25lIHRvIHlvdSkgdGhhdCBpcyBjb250cmFyeSB0byB3aGF0IHlvdSB3YW50ICAgaW4gcG9rZXIsIHRoYXQgd2lubmluZyB0aGUgaGFuZC4gCllvdSBhcmUgc3RpbGwgaW4gYW4gZWFybHkgZW5vdWdoIHBoYXNlIG9mIHlvdXIgcmVsYXRpb25zaGlwIHRoYXQgSSB3b3VsZCBzdWdnZXN0IHlvdSBkbyBhIHJlYWxseSBob25lc3QgZXZhbHVhdGlvbiBvZiB0aGUgY2hhcmFjdGVyIG9mIHlvdXIgbWFuIGFuZCBhc2sgeW91cnNlbGYgd2hldGhlciB5b3UgY2FuIGhhcHBpbHkgcmVzcGVjdCBhbmQgaG9ub3IgaGltIGlmIGhlIHdlcmUgbm90IHRvIGNoYW5nZSBhbGwgdGhhdCBtdWNoIHdpdGggdGhpcyBpc3N1ZS4gSWYgeW91IHN0YXJ0IG91dCBpbiBhIHBhdHRlcm4gb2YgeW91IGJlaW5nIG1vcmUgb2YgYSBsZWFkZXIsIGJlY2F1c2UgaGUgaGFzIG1vcmUgb2YgYSBwYXNzaXZlIGFwcHJvYWNoIHRvIGxpZmUsIGl0IGNvdWxkIGJlIGRpZmZpY3VsdCBmb3IgdGhpcyB0byBjaGFuZ2UuIEl0IGNvdWxkIGFsc28gYmUgZGlmZmljdWx0IGZvciB5b3UgdG8gcmVhbGx5IGFuZCB0cnVseSByZXNwZWN0IGhpbS4gVGhlIGZlZWxpbmcgb2YgdHJ1ZSByZXNwZWN0IGZvciB5b3VyIG1hbiBpcyBvbmUgb2YgdGhlIGJlc3QgZmVlbGluZ3MsIGFuZCBib3RoIHlvdSBhbmQgaGUgZGVzZXJ2ZSBpdC4KQW5kIHRoZW4gVmluY2UgYWRtaXR0ZWQgaXQgb24gTGFycnkgS2luZyB0b28uIApUbyBhY2Nlc3MgdGhlIHNldHRsZW1lbnQgb2ZmZXIgZm9yIHRoaXMgY2xhaW0sIHlvdSBoYXZlIHVudGlsMjAxOSAwMSAyOSB0byB2aXNpdCB0aGUgcHJvdmlkZWQgVVJMIGFuZCBjb21wbGV0ZSB0aGUgc2V0dGxlbWVudCBpbnN0cnVjdGlvbnMuIElmIHlvdSBwcmVmZXIsIHlvdSBjYW4gc2ltcGx5IGNvcHkgYW5kIHBhc3RlIG9yIHR5cGUgdGhlIFVSTCBkaXJlY3RseSBpbnRvIHRoZSBJbnRlcm5ldCBicm93c2VyIG9mIHlvdXIgY2hvaWNlLiBIZXJlLCB5b3Ugd2lsbCBnYWluIGNvbmZpZGVudGlhbCBhbmQgcHJpdmF0ZSBhY2Nlc3MgdG8gYWxsIGluc3RydWN0aW9ucyBob3cgdG8gY29tcGxldGUgeW91ciBzZXR0bGVtZW50IHBheW1lbnQgYW5kIHJlY2VpdmUgeW91ciBleGVjdXRlZCBSZWxlYXNlIG9mIExpYWJpbGl0eS4gUGxlYXNlIG5vdGUgdGhhdCB5b3VyIFVuaXF1ZSBOb3RpY2UgSUQgZm9ybXMgdGhlIFVSTCBhbmQgY29ycmVzcG9uZHMgd2l0aCB0aGUgVW5pcXVlIE5vdGljZSBJRCBmb3VuZCBhdCB0aGUgb3V0c2V0IG9mIHRoaXMgbm90aWZpY2F0aW9uLgpJZiB5b3Ugbm90IHdpbGxpbmcgdG8gbG9zZSBhIGxvdCBvZiBtb25leSBmb3IgdGhlIHNha2Ugb2YgZ2FpbmluZyBtdWNoIG5lZWRlZCBleHBlcmllbmNlIGluIHBsYXlpbmcgb25saW5lIHBva2VyLCB5b3UgdGhlbiBoYXZlIHRvIGZhbWlsaWFyaXplIHlvdXJzZWxmIHdpdGggdGhlIG1vc3Qgd2FudGVkIGZlYXR1cmVzIG9mIG9ubGluZSBwb2tlciBzaXRlcy4gTm90IGp1c3QgYW55IG9ubGluZSBwb2tlciBzaXRlIHdpbGwgZG8gaWYgeW91IHdhbnQgdG8gaW1wcm92ZSB5b3VyIGNoYW5jZXMgb2Ygd2lubmluZy4uIApFdmVuIEVhc3QgQXNpYW4gd29tZW4gYXJlIGdldHRpbmcgZnVja2VkIGJ5IGZlbWluaXNtLiAKV2hhdCBpdCBhbW91bnRlZCB0byB3YXMgeW91IGJyZWFrIHlvdXIgc2hvdWxkZXIgYSBmZXcgdGltZXMgZHVyaW5nIHRoZSBkYXkgZm9yZ2V0dGluZyB0aGF0IHlvdSBjYW4ganVzdCBzdGFuZCB1cCBmcm9tIGEgY2hhaXIgbGlrZSBhIG5vcm1hbCBwZXJzb24sIGFuZCB5b3Ugc21hc2ggeW91ciBoZWFkIGludG8gdGhlIGNlaWxpbmcgaWYgc29tZXRoaW5nIGV2ZXJ5IHdva2UgeW91IHdpdGggYSBzdGFydCBkdXJpbmcgdGhlIG5pZ2h0KS4uIApIZSBlbmRlZCBoaXMgc3ByZWUgb2YgZnJlZWRvbSBvbiB0aGUgUm9vc2V2ZWx0IGdvbGYgY291cnNlIHRocmVlIGhvdXJzIGxhdGVyIHdpdGggYSByaWdodCBob29rIHRvIHRoZSBtaWRyaWZmIG9mIEdvbGZlciBFbGxpcyBLbGVpbiwgX19fX18gU2VlIENISU1QLCA0IENvbnZlbmllbnQgT21pc3Npb25zIChFZGl0b3JpYWwpIEluIHRvZGF5J3MgY29sdW1uIERyZXcgUGVhcnNvbiByZXBlYXRzIHRoZSBzYW1lIG1pc2xlYWQgIGluZyBzdGF0ZW1lbnRzIE1yLiAKU28sICQ4MCBnb2VzIGludG8gdGhlIG1haW4gcG90LiBUaGF0IG1lYW5zIHRoYXQgJDI0MCAoJDgwIFggMyBwbGF5ZXJzLCB3aGF0IHRoZXkgYXJlIHNob3J0KXdpbGwgZ28gaW50byB0aGUgU2lkZSBQb3QuIApIb3cgZG9lcyB0aGlzIGRpZmZlciBmcm9tIHRoZSBvdGhlciBwb2tlcnMgYmVpbmcgcGxheWVkIGV2ZXJ5d2hlcmUgZWxzZT8gT25lIGZhY3RvciBpcyB0aGF0IGluIGZyZWUgcG9rZXIsIHlvdSBkb24ndCBrbm93IHdobyB5b3VyIG9wcG9uZW50cyBhcmUuIApBbmVjZG90YWwgZXZpZGVuY2UgZnJvbSB0aGUgZ2FtYmxpbmcgaW5kdXN0cnkgc3VnZ2VzdHMgdGhhdCB0cmFkaXRpb25hbCBmZW1hbGUgdHJhaXRzIHN1Y2ggYXMgYXNzZXNzaW5nIGRpZmZpY3VsdCBzaXR1YXRpb25zLCB0YWtpbmcgaW4gaW5mb3JtYXRpb24gZnJvbSBtdWx0aXBsZSBzb3VyY2VzLCBtYWtlIHdvbWVuIGlkZWFsIHBva2VyIHBsYXllcnMuCkNhbmluZWhlcmUgIDE0IHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KSSBoYXZlIGFuIGlkZWEsIGZyb20gdGFsa2luZyB0byBoaXMgY29sbGVnZSBmcmllbmRzLCBvZiB3aGF0IGhlIHVzZWQgdG8gYmUgbGlrZS4gCkl0cyBhbHNvIHJlYXNvbmFibGUgdG8gYXNzdW1lIHRoYXQgc29tZSBhcmUgY29udHJvbGxlZCBvcHBvc2l0aW9uIHdobyBnb2FsIGlzIHRvIGRyaXZlIHdlZGdlcyBpbiB0aGVzZSBtb3ZlbWVudHMgc28gdGhleSBkb24gYWN0dWFsbHkgdW5pZnkgdG8gZ2V0IGFueXRoaW5nIGRvbmUuIEl0cyBiZWVuIGRvY3VtZW50ZWQgdGhhdCB0aGUgRkJJIGFuZCBDSUEgZGlkIGFsbCB0aGF0IHN0dWZmIGluIHRoZSAxOTYwcyA3MHMgYW5kIHRoZXJlIGlzIG5vIHJlYXNvbiB0byB0aGluayB0aGF0IHRoZXkgYW5kIHZhcmlvdXMgbG9jYWwgcG9saWNlIGZvcmNlcyBoYXZlIHN0b3BwZWQgaW5maWx0cmF0aW5nIGFuZCBkaXNydXB0aW5nIHRoZXNlIGdyb3Vwcy4gT2NjdXB5IFdhbGxzdHJlZXQgbGlrZWx5IGdvdCBpbnRvIHRoZSBpbnRlcm5hbCBkaXNhZ3JlZW1lbnRzIG92ZXIgaG93IHRvIG9yZ2FuaXplIHdoZW4gYWxsIHRoZXNlIHR5cGVzIHNob3dlZCB1cCwgc29tZSBvZiB3aGljaCBtYXkgd2VsbCBoYXZlIGJlZW4gaW5maWx0cmF0b3JzIHRyeWluZyB0byB1bmRlcm1pbmUgdGhlbSBmcm9tIHRoZSBpbnNpZGUuClRoZXkgcGxheWVkIHBva2VyIGZvciBhICQyMCBidXkgaW4gZXZlcnlvbmUgYnJvdWdodCBkaWFwZXJzLiBXZSBub3cgaGF2ZSBhIHRvbiBvZiBkaWFwZXJzIGl0IGlzIGdyZWF0LiBJdCBzZWVtZWQgbGlrZSBzZXZlcmFsIG9mIHRoZSBndXlzIGNvbXBldGVkIHRvIHNlZSB3aG8gY291bGQgYnJpbmcgdGhlIGJpZ2dlc3QgYm94IG9mIGRpYXBlcnMsIHNvIHRoYXQgd2FzIGdyZWF0LiAKR290IGxvdHMgb2YgMiBvciAzIG1pbnV0ZSB2aWRlbyBibG9ncyB0aGF0IGNvbnRhaW4gZXZlcnl0aGluZyBmcm9tIGRlbW9zIG9mIG91ciBmYXZvdXJpdGUgcmVjaXBlcyBhbmQgY29va2luZyB0ZWNobmlxdWVzLCBhbiBpbnNpZGUgbG9vayBhdCBzb21lIGdyZWF0IGhvdGVsIGFuZCBzaG9wcGluZyBmaW5kcyB0aGF0IHdlIGRpc2NvdmVyIHdoaWxlIHRyYXZlbGluZyB0aGUgZ2xvYmUsIGFuZCBzb21lIGhpbGFyaW91cyBiZWhpbmQgdGhlIHNjZW5lcyBtb21lbnRzLiAKVXNpbmcgdGhlc2UgcHJvZHVjdHMgeW91IGNhbiBhbHNvIGVzdGFibGlzaCB5b3VyIHByZXNlbmNlIGluIHRoZSB3b3JsZCBvZiBwb2tlci4gCllvdSBub3RpY2UgdGhlIGxvdWRlc3QgY29tcGxhaW5lcnMgbmV2ZXIgYWN0dWFsbHkgc3VibWl0IGFueXRoaW5nIGdvb2QgdGhlbXNlbHZlcy4gClNpbmNlcmVseSB0aGFuayBhbGwgdGhvc2Ugd2hvIGhhdmUgam9pbmVkIHVzIG9uIHRoaXMgaW5jcmVkaWJsZSBqb3VybmV5LiBMZXQgdXMgY29udGludWUgb24gdGhpcyBwYXRoIGFuZCBjb250aW51ZSB0byBkcmVhbSBiaWcgYW5kIGFjY29tcGxpc2ggdGhlIGV4dHJhb3JkaW5hcnksIHNhaWQgUmVudSBLaGF0b3IsIGNoYW5jZWxsb3IgYW5kIHByZXNpZGVudCwgVW5pdmVyc2l0eSBvZiBIb3VzdG9uIFN5c3RlbS4KV2hvIGNhcmVzIGlmIHRoZXkgdGhpbmsgeW91IHBydWRpc2guIApJIHdhc24gc3BlYWtpbmcgaW4gaHlwZXJib2xlIHdpdGggbXkgIm9ubGluZSBOYXppIiBjb21tZW50LiAKU3RlZmFuIEtsdGVuYmxpdHogYmVpIGVpbmVtIHNlaW5lciBlcnN0ZW4gVmVyc3VjaGUuLiAKVGhlIG92ZXJoZWF0ZWQgbW90aGVyYm9hcmQgY29udGludWVzIHRvIGhlYXQgdXAgdW50aWwgaXQgYmVnaW5zIHRvIHZpYnJhdGUuIApBaW5zaSwgbW1lIHNpIG5vdXMgdGlvbnMgbGVzIG1laWxsZXVycyBsdmVzIGR1IG1vbmRlLCBjZWxhIG5lIGNoYW5nZXJhaXQgcmllbiBhdSBzb3J0IGRlIGxhIHBsYW50ZSBOJ2VzdCBjZSBwYXMgbCB1bmUgZm9ybWUgZGUgcHJ0ZW50aW9uIHRycyBmcmFuYWlzZSA/CkkgYnJva2UgdGhpbmdzIG9mZiB3aXRoIEZYVyBhIHdlZWsgYWdvIGFuZCBzaGUgY2FsbGVkIG1lIHRvZGF5IGNyeWluZyBhYm91dCBob3cgc2hlIG5ldmVyIGRpZCBhbnl0aGluZyB3cm9uZyBhbmQgc2hlJ3Mgc28gY29uZnVzZWQgd2hlcmUgdGhpcyBjYW1lIGZyb20uIEkgaGFkIGxpdGVyYWxseSB0b2xkIGFsbCBvZiB0aGUgaW5kaXZpZHVhbCB0aW1lcyB0aGF0IHNoZSBkaWRuJ3QgYmFjayBtZSBhbmQgbWFkZSBtZSBmZWVsIGxpa2UgSSB3YXMgd29ydGhsZXNzIHdoZW4gSSBicm9rZSBpdCBvZmYgYnV0IHNoZSBzdGlsbCBkaWRuJ3QgdW5kZXJzdGFuZC4gU2hlIHdhbnRlZCB0byBnZXQgYmFjayB0b2dldGhlciBhbmQgSSBqdXN0IGh1bmcgdXAuIEkganVzdCB3YW50ZWQgdG8gZ2V0IGl0IG9mZiBteSBjaGVzdCB0byB5J2FsbCBiZWNhdXNlIGl0IGZlbHQgbGlrZSBjbG9zdXJlLiBUaGFuayB5b3UgZm9yIHlvdXIgc3VwcG9ydC4KU28sIEkgc3RheWVkIHdpdGggaGVyIGFuZCBoZWxkIGhlciBoYW5kIGFuZCByZWFkIHRvIGhlciBmcm9tIHRoZSBCaWJsZSBhcyBzaGUgd2FzIGEgZGV2b3V0IENhdGhvbGljLi4gCjU2JSBoYWQgPjYwJSBkZWNyZWFzZSAoc2lnbmlmaWNhbnQgaW1wcm92ZW1lbnQpIGluIHN5bXB0b20gc2V2ZXJpdHkgKFNTSSkgd2hpbGUgNDclIGhhZCBzaW1pbGFyIHNpZ25pZmljYW50IGltcHJvdmVtZW50IGluIGZyZXF1ZW5jeSBvZiBzeW1wdG9tcyAoU0ZRKS4gNDIlIHJlcG9ydGVkIG1hcmtlZCBzdWJqZWN0aXZlIGltcHJvdmVtZW50IChTR0EpIGJ5IHRoZSBlbmQgb2YgdGhlIHN0dWR5IHBlcmlvZC4gClN1YnJlZGRpdCBSdWxlcyAgMC4gClRoZSBmZWRlcmFsIHByaXNvbiBzeXN0ZW0gZXhwZXJpZW5jZWQgYSAxMjAlIGluY3JlYXNlIGluIHVzZSBvZiBwcml2YXRlIHByaXNvbnMgc2luY2UgMjAwMCwgcmVhY2hpbmcgMzQsMTU5IHBlb3BsZSBpbiBwcml2YXRlIGZhY2lsaXRpZXMgaW4gMjAxNi4gCkp1c3QgZ2V0IGV2ZXJ5b25lIHRvZ2V0aGVyIGFuZCBJIHdpbGwgdGFsayB0byB5b3UgYWxsIHRoZW4uIApXZSBkb24ga25vdyBoaXMgYmFja3N0b3J5IG9yIGhpcyBlbnRpcmUgbW90aXZhdGlvbi4gVGFsaWEgbW90aXZhdGlvbiBpcyBhIG11dHVhbCBiZW5lZml0LCBiZWNhdXNlIE9saXZlciBraWxsZWQgaGVyIGZhdGhlci4gRXZlbHluIHBhcmVudCBkaWVkIGFzIGFuIGluZGlyZWN0IGFjdGlvbiBvZiBPbGl2ZXIuIApUaGUgbmV4dCBwb2VtLCBUaGUgTG9zdCBBcnQgb2YgS2lzc2luZyBhIEdvdmVybm1lbnQsIGRlbHZlcyBmdXJ0aGVyIGludG8gdGhlIGNvcnB1cyBib3RoIGxpdGVyYWxseSwgYW5kIGZpZ3VyYXRpdmVseSwgYXMgVGFpdG8gcmVmZXJzIHRvIG1vdXRocyAoeCAzKSwgbGlwcywgdGVldGgsIHRvbnNpbHMsIGZvcmtlZCB0b25ndWVzLCBleWVzLCBzY3JlYW1zLiAKSGF2aW5nIHNhaWQgdGhhdCwgdGhlcmUgYSBsb3QgaW4geW91ciBhY2NvdW50IGFib3V0IHlvdXIgU08gdGhhdCBpcyB3b3JyaXNvbWUuIApUaGUgb3Jvb29zZWQgYWN0aW9uIGFuZCBOQVNBJ3MgcHJlZmVycmVkIGFsdGVybmF0aXZlIGlzIHRoZSBjb250aW51ZWQgb3BlcmF0aW9uIG9mIHRoZSBOQVNBIFNSUCwgYXMgcHJlc2VudGx5IG1hbmFnZWQuIFRoZSBGU0VJUyBmb2N1c2VzIG9uIHByb2dyYW1tYXRpYyBjaGFuZ2VzIGluIHRoZSBOQVNBIFNSUCB0aGF0IGhhdmUgdGFrZW4gcGxhY2Ugc2luY2UgdGhlIG9yaWdpbmFsIEZFSVMgd2FzIGlzc3VlZCBpbiAxOTczIGJ2IGRlbGV0aW5nIGxhdW5jaCB2ZWhpY2xlcyB0aGF0IGFyZSBubyBsb25nZXIgdXNlZCwgYWRkaW5nIG5ldyBsYXVuY2ggdmVoaWNsZXMgYW5kIHN5c3RlbXMgY3VycmVudGx5IGJlaW5nIHVzZWQsIGFuZCByZWZsZWN0aW5xIGNoYW5nZXMgaW4gRmVkZXJhbCBhbmQgU3RhdGUgZW52aXJvbm1lbnRhbCBzdGF0dXRlcyBhbmQgcmVndWxhdGlvbnMuIApIZSBpcyBhIHdlYWsgY293YXJkbHkgYnVsbHkuIEhlIHNob3dzIGxpdHRsZSBiYWNrYm9uZSBhbmQgc3BpbmUgdG8gYW55b25lIHRoYXQgc3RhbmRzIHVwIHRvIGhpbSBhbmQgaXMgZWFzaWx5IGNvd2VkIGFuZCBxdWlja2x5IHN1Ym1pdHMuIFRoZSBvbmx5IHBlb3BsZSB3aG8gYXJlIHRydWx5IGFmcmFpZCBvZiBUcnVtcCBpcyB0aGUgcmVwdWJsaWNhbiBwYXJ0eSBpdHNlbGYgYmVjYXVzZSBoZSBjb250cm9scyB0aGUgYmFzZSBhbmQgY2FuIGVuZCB0aGVpciBjYXJlZXJzLCB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIGhlIGdyZWF0bHkgZGFtYWdlcyB0aGUgcGFydHkgYW5kIHRoZWlyIGxvbmcgdGVybSBwbGFucyB0byBjb250cm9sIHRoZSBVUyBhcyBhbiBhdXRvY3JhY3kgd2l0aCBoaXMgaW5jb21wZXRlbmNlLiAKU2llcnJhIHJlc3VwcGx5IGlzIHJlYWxseSB1cCB0byB5b3UgYW5kIGhvdyBvZnRlbiB5b3Ugd2FudCB0byBleGl0LCB3aXRoIGd1ZXNzdGltYXRpbmcgd2hhdCBwZW9wbGUgeW91IGFyZSBoaWtpbmcgYXJvdW5kIHdpbGwgd2FudCB0byBkby4gTGFzdCB5ZWFyIEkgaGFkIGFuIHVucGxhbm5lZCBleGl0IHRvIExvbmUgUGluZSwgYnV0IGhhZCBwbGFubmVkIG9uIGdvaW5nIHN0cmFpZ2h0IGZyb20gS00gb3V0IEtlYXJzYXJnZS4gSSB3ZW50IG91dCBvbiBhIFN1bmRheSBhbmQgYWN0dWFsbHkgaGl0Y2hlZCBpbnRvIEJpc2hvcCBmcm9tIEluZGVwZW5kZW5jZSBiZWNhdXNlIHRoZSBidXMgd2FzIG5vdCBydW5uaW5nLiAKQ29hc3RlciBidWlsZGluZyBmbG91cmlzaGVkIGZyb20gdGhlIHR1cm4gb2YgdGhlIGNlbnR1cnkgdGhyb3VnaG91dCB0aGUgcm9hcmluZyAnMjBzLCB3aXRoIGFuIGVzdGltYXRlZCAyMDAwIGNvYXN0ZXJzIGJ1aWx0IGluIHRoZSBVU0EgYWxvbmUuIEV2ZXJ5IHBhcmsgb2Ygc29tZSBzaXplIGhhZCBhIGNvYXN0ZXIuIFdoaWxlIHRoZXNlIHdlcmUgbm90IGFzIGludGVuc2UgYXMgdG9kYXkncyByaWRlcywgaW1hZ2luZSBoYXZpbmcgb25lIGluIGV2ZXJ5IG1ham9yIGNpdHkuIApMYSBzZWN0ZSBtZXVydHJpcmUgaW5kaWVubmUgZGVzIFRodWdzIGZ1dCBkbWFudGVsZSBwYXIgbCdhcm1lIGFuZ2xhaXNlLCBkZSBtbWUgcXVlIGxhIGNybWF0aW9uIGRlcyB2ZXV2ZXMgdml2YW50ZXMgc3VyIGxlIGJyYXNpZXIgZGUgbGV1ciBtYXJpIGRmdW50IGZ1dCBpbnRlcmRpdGUgcGFyIGxlcyBtdXJzIGNocnRpZW5uZXMgZGVzIGNvbG9ucyBicml0YW5uaXF1ZXMuCkxldCBtZSBwcmVmYWNlIHRoaXMgYnkgc2F5aW5nIHRoYXQgaW5zdGFudCBjYW1lcmFzIGFyZSBub3QgcmVhbGx5IGEgZ3JlYXQgcmVwbGFjZW1lbnQgZm9yIHRyYWRpdGlvbmFsIDM1bW0gZmlsbSwgZXNwZWNpYWxseSBpbiB0aGlzIGRheSBhbmQgYWdlLiAKSSB3YXMgbWVzbWVyaXplZCBieSB0aGUgbWVuIGluIHRoZWlyIHN1aXRzIGFuZCB0b3BoYXRzLCBhbmQgdGhlIHlvdW5nIHdpdmVzIHdpdGggdGhlaXIgd2lncyBhbmQgY2hpbGRyZW4uIApMJ3VuIGQnZXV4IGVzdCBpbmR1Yml0YWJsZW1lbnQgbGEgbHAoYSkuIApZb3UncmUgaW4gZ29vZCBjb21wYW55Li4gCkkgdGhpbmsgdGhhdCBpdCBwb3NzaWJsZSBsYXN0IHBvaW50IG1pZ2h0IGFjdHVhbGx5IGhhdmUgYmVlbiBjYWxjdWxhdGVkIGJ5IEp1ZGdlIEVsbGlzIGFuZCBNdWVsbGVyLiBPbiB0aGUgb3RoZXIgaGFuZCwgRWxsaXMgd2FzIG5vbWluYXRlZCBieSBSZWFnYW4sIHdobyB3YXMgYSBNYW5hZm9ydCBjbGllbnQuClJ1c3NpYSBkaWQgZG8gbW9zdCBvZiB0aGUgd29yayBiZWF0aW5nIHRoZSBOYXppIGJ1dCB0aGVyZSBpcyBubyBpbmRpY2F0aW9uIHRoZXkgd291bGQgYm90aGVyZWQgdG8gc3RvcCB3L28gYSBmcmVzaCBmb3JjZSBob2xkaW5nIHRoZSBvdGhlciBoYWxmIG9mIEV1cm9wZSAoYXMgZXZpZGVuY2VkIGJ5IGZhY3QgdGhhdCB0aGUgSXJvbiBDdXJ0YWluIGJlY2FtZSBhIHRoaW5nKS4gTWVuIGFuZCBtYXRlcmlhbCBhbHNvIGtlcHQgeW91IGZyb20gYmVpbmcgcnVuIG92ZXIgaW4gdGhlIGJsaXR6LiBXaGlsZSBtb3N0IHRoaW5raW5nIG9uIFNlYSBMaW9uIHdhcyB0aGF0IGl0IHByb2JhYmx5IHdvdWxkbiBoYWQgbG9uZyB0ZXJtIHN1Y2Nlc3MsIEkgdGhpbmsgaXQgY291bGQgYmVlbiB0aGUgYm9keSBibG93IG5lY2Vzc2FyeSB0byBmb3JjZSBhIHBlYWNlLiBUaGlzIGlzIHNvbWUgYXJtY2hhaXIgcG9uZGVyaW5nIHRob3VnaCwgSSBhbiBlbnRodXNpYXN0LCBub3QgYSBwcm9mZXNzaW9uYWwgaGlzdG9yaWFuLgpCdXQgYWRkcmVzc2luZyBkYXRhIGFuZCB0YXggbG9vcGhvbGVzIHdvbiBpbXBhY3QgcHJpY2VzLCBoZSBhZGRlZC4KV2Ugc2xpcCBpbiB0aGUgdHViLCBzdGFydCBtYWtpbmcgb3V0IGEgYml0LCB0aGVuIHNvbWV0aGluZyBmYWxscyBpbiB0aGUgd2F0ZXIgbmV4dCB0byBtZS4gClRoZW4gSSBiZWdhbiB5YXduaW5nIGFuZCBnZXR0aW5nIGJyYWluIGZvZyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBkYXkgYSBmZXcgaG91cnMgYWZ0ZXIgbXkgcG9zdCB3b3Jrb3V0IG1lYWwgKG15IGJpZ2dlc3QgbWVhbCkuIEkgZWF0IHNvbWUgbWVhdCBhbmQvb3IgY2hlZXNlLCBkcmluayBzb21lIHNhbHQgd2F0ZXIsIGJ1dCBJIHdvdWxkIHN0aWxsIHJlbWFpbiBmYXRpZ3VlZCBmb3IgYW4gaG91ciBvciBzbyB1bnRpbCBJIGF0ZSBtZWFsIDIuIEkgdHJpZWQgZXZlcnl0aGluZyB0byBjb21iYXQgaXQsIGJ1dCB0byBubyBhdmFpbC4uIApUaGVyZSBzaGUgaW5zdGVhZCBmb3VuZCAzIHBhcmNobWVudHMgd2l0aCBwaWVjZXMgb2YgdGV4dCBvbiBpdCwgYW5kIG90aGVyIHNlY3Rpb25zIGN1dCBvdXQuIFNoZSBmaWd1cmVzIG91dCB0aGF0IHlvdSBoYWQgdG8gb3ZlcmxhcCB0aGUgMyBwYWdlcyB0byBzZWUgdGhlIGNvbXBsZXRlIHNlbnRlbmNlLiBBbmQgZ2F2ZSBpdCB0byB0aGUgZmlnaHRlciB0byByZWFkLCBmZWFyaW5nIGEgdHJhcC4gCkZvciBleGFtcGxlLCB3aGlsZSBhIHBhcnRpY3VsYXIgOCB5ZWFyIG9sZCBhbmQgMTQgeWVhciBvbGQgbWF5IGhhdmUgc2ltaWxhciBhYmlsaXRpZXMgaW4gbWF0aHMsIHRoZXkgd2lsbCBodWdlbHkgZGlmZmVyZW50IGluIHRoZWlyIGxldmVsIG9mIGVtb3Rpb25hbCBtYXR1cml0eSBhbmQgYmVoYXZpb3VyIHJlZ3VsYXRpb24sIG1lYW5pbmcgdGhleSBoYXZlIHZlcnkgZGlmZmVyZW50IG5lZWRzIGluIHRlcm1zIG9mIGxlYXJuaW5nIGVudmlyb25tZW50IGFuZCB0ZWFjaGluZyBzdHlsZS4gU2ltaWxhcmx5LCB3aGlsZSBldmVyeSBpbmRpdmlkdWFsIG1hdHVyZXMgYXQgdGhlaXIgb3duIHJhdGUgaXQgc3RpbGwgZmFsbHMgd2l0aGluIGEgbm9ybWFsIGRpc3RyaWJ1dGlvbiwgc28gdGhlIG1ham9yaXR5IG9mIGtpZHMgZG8gcm91Z2hseSBtYXRjaCBlYWNoIG90aGVyIGluIHRlcm1zIG9mIHNvY2lhbCwgcGh5c2ljYWwgYW5kIGNvZ25pdGl2ZSBkZXZlbG9wbWVudC4gU28geWVzLCB3aGlsZSBncm91cGluZyBzdHVkZW50cyBieSBhZ2UgcmF0aGVyIHRoYW4gYWJpbGl0eSBkb2VzIG5lZ2F0aXZlbHkgYWZmZWN0IHN0dWRlbnQgbGVhcm5pbmcgYXQgdGhlIGhpZ2hlc3QgYW5kIGxvd2VzdCBlbmRzIG9mIHRoZSBhYmlsaXR5IGN1cnZlLCBpdCBhbHNvIG1heGltaXplcyBkZXZlbG9wbWVudGFsIHVuaWZvcm1pdHkgd2hpY2ggcG9zaXRpdmVseSBhZmZlY3RzIHRoZWlyIHNvY2lhbCBkZXZlbG9wbWVudCBhbmQgdGhlaXIgYWJpbGl0eSB0byBib25kIHdpdGggb3RoZXJzIChhbmQgdG9nZXRoZXIgdGhlc2UgdGhpbmdzIGFyZSBlcXVhbGx5IGlmIG5vdCBtb3JlIGltcG9ydGFudCB0aGFuIGhhcmQgc2tpbGwgZGV2ZWxvcG1lbnQpLiAKVGhleSBzb2xkIGEgcHJvcGVydHkgYW5kIGEgY291cGxlIHllYXJzIGxhdGVyIGhhZCBubyBtb25leSBsZWZ0Li4gCldoZW4gaXQgd29ya3MgaXQgaXMgZ3JlYXQuIApNYXJjaCwgc2NvcmVzIG9mIE5ldyBZb3JrZXJzIG9wdGVkIHRvIGhhdmUgdGhlaXIgZmlyc3QgZGF0ZXMgb3ZlciB0YWNvczogZmlzaCB0YWNvcywgZHJpZWQgY3JpY2tldCB0YWNvcywgdGFjbyB0b3VycyBvZiBCcm9va2x5biwgZXZlbiBwb3N0IHN1cmZpbmcgdGFjb3MgYXQgUm9ja2F3YXkgQmVhY2ggaW4gUXVlZW5zLiAKQW55d2F5cywgeW91IHdpbGwgbm90aWNlIHRoZSBoeXBub3Rpc3Qgd2lsbCBhbHdheXMgc2F5ICAgaWYgeW91IHNlZSBzb21lb25lIGRvaW5nIHRoZSBhY3Rpb25zIGZyb20gdGhlIHN0YWdlIHBvaW50IHRoZW0gb3V0IHRvIHVzIGJlY2F1c2UgdGhleSBjbGVhcmx5IHdhbnQgdG8gcGFydGljaXBhdGUuIFRoaXMgaXMgYSBzYWZldHkgdGhpbmcuIElmIHlvdSB0ZWxsIHRoZSBwZW9wbGUgb24gc3RhZ2UgdG8gaG9wIG9uIG9uZSBmb290LCB5b3UgcmVhbGx5IGRvbid0IHdhbnQgcGVvcGxlIGhvcHBpbmcgb2ZmIGEgYmFsY29ueS4uIApTYWZldHkgVGlwLiBUaGUgc3RlbSBvZiBhIHB1bXBraW4gY2FuIGVhc2lseSBicmVhayBvZmYuIE5ldmVyIGNhcnJ5IHlvdXIgcHVtcGtpbiBieSB0aGUgc3RlbS4gSWYgaXQgZG9lcyBicmVhayBvZmYsIHVzZSB0b290aHBpY2tzIG9yIGEgc2ltaWxhcmx5IG5hcnJvdyBzaGFmdCB0byBob2xkIHRoZSBzdGVtIGluIHBsYWNlLgpNciBDaGFvIFlhbiBpcyBhIHF1YWxpZmllZCBsaWNlbnNlZCBUQ00gcHJhY3RpdGlvbmVyIHdpdGggc2lnbmlmaWNhbnQgZXhwZXJpZW5jZSBpbiB0cmVhdGluZyBiYWNrIHBhaW4sIGluc29tbmlhIGFuZCBzdHJva2Ugc2VxdWVsLgpJZiB5b3Ugd2FudCB0byByZWFkIGFuIGFydGljbGUgdGhhdCBhZmZpcm1zIGV2ZXJ5dGhpbmcgeW91J3ZlIGJlZW4gdG9sZCBhYm91dCBoaWdoIG51bWJlcnMgb2YgaWxsZWdhbCBpbW1pZ3JhbnRzIGJ1dCBpbmZvcm1zIHlvdSBvbiB3aHkgYSB3YWxsIGlzIG5vdCB0aGUgc29sdXRpb24gdGhpcyBpcyBhIGdvb2QgcmVhZC4gQWN0dWFsbHkgY3Jvc3NpbmcgaW50byBVUyB0ZXJyaXRvcnkgZnJvbSBNZXhpY28gaXMgYWJzb2x1dGVseSBub3QgdGhlIGlzc3VlIGFuZCBldmVuIHRob3VnaCBJIHRoaW5rIHNvbWV0aGluZyBzaG91bGQgYmUgZG9uZSB3ZSBhbHNvIG5lZWQgdG8gcmVhbGl6ZSB0aGF0IHN0YXRpc3RpY2FsbHkgdGhlcmUgaXMgbm8gd2F5IHRoaXMgaXMgYW4gZW1lcmdlbmN5LiBHZXQgcmlkIG9mIHdlbGZhcmUoVGhhdCdzIGp1c3QgYSBqb2tlIEkgaG9wZT8pLiBTbWFsbCBidXNpbmVzcyB0YXggY3V0cyAod2hpY2ggYXJlIGFjcm9zcyB0aGUgYm9hcmQpLiBUaGUgZnVuZGluZyBmb3IgaGlzdG9yaWNhbGx5IGJsYWNrIGNvbGxlZ2VzIHdhcyBwdXNoZWQgYnkgbW9zdGx5IGRlbW9jcmF0cyBhbmQgaXQgZnVuZHMgb3ZlciAxMDAgdW5pdmVyc2l0aWVzIGFuZCAzMDAsMDAwIHN0dWRlbnRzLiBUaGlzIHdhcyBub3QgVHJ1bXBzIGlkZWEgYW5kIGhlIHJlbHVjdGFudGx5IHNpZ25lZCB0aGUgc3BlbmRpbmcgYmlsbC4gUmVtZW1iZXIgdGhhdCByaWRpY3Vsb3VzIGdvdmVybm1lbnQgc2h1dCBkb3duPyBUaGUgbGFyZ2VzdCBtZWFzdXJlcyB0aGF0IGhhdmUgYmVlbiB0YWtlbiBhcmUgdGF4IGN1dHMgZm9yIHRoZSBzdXBlciByaWNoIHdoaWNoIGRvIGJsYWNrIGNvbW11bml0aWVzIG5vIGZhdm9ycy4gSXMgdGhpcyBzZXJpb3VzbHkgeW91ciBmaW5hbCBhbnN3ZXI/IEhvdyBvdXQgb2YgdG91Y2guCkhlIHN0aWxsIGhhcyBpbnRlcmVzdHMgaW4gdGhlIHdpbmUgaW5kdXN0cnksIGEgY29uc3RydWN0aW9uIG1hdGVyaWFscyBidXNpbmVzcyBpbiB0aGUgUGhpbGlwcGluZXMgYW5kIGludmVzdG1lbnRzIGluIENhbmFkYS4uIApVcHBkYXRlcmluZ2FyIHAgc25hYmJhIHByb2R1a3RlciBmIHIgQ2FzaW5vCllvdSB3aWxsIGZpbmQgdGhhdCBpbXByb3ZlbWVudHMgaW4gbGlzdGVuaW5nIGFyZSBkaXJlY3RseSBjb3JyZWxhdGVkIHRvIGltcHJvdmVtZW50cyBpbiBmb2N1c2luZy4gCk5vIGRhdGEgaXMgc2hhcmVkIHdpdGggRmFjZWJvb2sgdW5sZXNzIHlvdSBlbmdhZ2Ugd2l0aCB0aGlzIGZlYXR1cmUuIChQcml2YWN5IFBvbGljeSlNYXZlblRoaXMgc3VwcG9ydHMgdGhlIE1hdmVuIHdpZGdldCBhbmQgc2VhcmNoIGZ1bmN0aW9uYWxpdHkuIChQcml2YWN5IFBvbGljeSlNYXJrZXRpbmdHb29nbGUgQWRTZW5zZVRoaXMgaXMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KUdvb2dsZSBEb3VibGVDbGlja0dvb2dsZSBwcm92aWRlcyBhZCBzZXJ2aW5nIHRlY2hub2xvZ3kgYW5kIHJ1bnMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KUluZGV4IEV4Y2hhbmdlVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpU292cm5UaGlzIGlzIGFuIGFkIG5ldHdvcmsuIApEdXJpbmcgVm9sdW50ZWVyIEFwcHJlY2lhdGlvbiBXZWVrLCBCcnVpbnMgYXJlIGludml0ZWQgdG8gcGFydGljaXBhdGUgYnkgc2lnbmluZyB1cCBmb3Igc2VydmljZSBwcm9qZWN0cywgc2hhcmluZyB2b2x1bnRlZXIgZXhwZXJpZW5jZXMgb24gdGhlIFZvbHVudGVlciBDZW50ZXIncyBzb2NpYWwgbWVkaWEgcGFnZXMgKEZhY2Vib29rLCBUd2l0dGVyLCBJbnN0YWdyYW0pLCBhbmQgdGhyb3VnaCBhIHZhcmlldHkgb2Ygc2VydmljZSBhY3Rpdml0aWVzIGRlc2lnbmVkIGJvdGggdG8gYXBwcmVjaWF0ZSB0aG9zZSB3aG8gaGF2ZSBiZWVuIGludm9sdmVkIGFuZCB0byBpbnNwaXJlIG90aGVycyB0byBzZXJ2ZS4gQ2hlY2sgb3V0IHRoZSBWb2x1bnRlZXIgQXBwcmVjaWF0aW9uIFdlZWsgd2VicGFnZSBmb3IgbW9yZSBpbmZvcm1hdGlvbiwgYW5kIG1ha2Ugc3VyZSB5b3VyIG9yZ2FuaXphdGlvbiBpcyBhcHByZWNpYXRlZCB0aGlzIFNwcmluZyEuIApBdCAxMyBzaGUgaXMgVkVSWSBpbm9jdWxhdGVkIHRvIEpOT3MgYmVjYXVzZSBvZiBteSBtb3RoZXIgKCBzb21ldGhpbmcgSSByZWFsaXplZCBJIHB1dCBoZXIgdGhyb3VnaCByZWNlbnRseSBhbmQgc3RpbGwgdHJ5aW5nIHRvIHByb2Nlc3MuIApUaGUgdHdvIHNwZW50IHRoZSBuZXh0IGZldyBkYXlzIGdldHRpbmcgdG8ga25vdyBlYWNoIG90aGVyIGFuZCBhZnRlciBBZHJpYW4gcmV0dXJuZWQgaG9tZSB0aGV5IHN0YXllZCBpbiB0b3VjaC4gCldpbGwgZG8gdGhlIHNhbWUuIApXaGlsZSB0aGUgT3R0YXdhIFJlZGJsYWNrcyBvZmZlbnNpdmUgbGluZW1hbiB3YXNuJ3QgZmluZWQgYnkgdGhlIGxlYWd1ZSBhZnRlciBncmFiYmluZyBhIGJlZXIgZnJvbSBoaXMgZ2lybGZyaWVuZCBhbmQgY2h1Z2dpbmcgaXQgbGFzdCBGcmlkYXkgbmlnaHQgaW4gdGhlIGFmdGVybWF0aCBvZiBhIHRvdWNoZG93biBhZ2FpbnN0IHRoZSBUb3JvbnRvIEFyZ29zLCB0aGUgbGVhZ3VlIHJldmlzZWQgaXRzIGNlbGVicmF0aW9uIHBvbGljeSBvbiBNb25kYXkuCk91dCBvZiBhbGwgdGhlIG1haW4gY2hhcmFjdGVycywgUHJpbmNlc3MgQ2Fyb2x5biBpcyB0aGUgb25lIEkgcmVsYXRlZCB0byBsZWFzdCBiZWZvcmUgdGhpcy4gT3IgcmF0aGVyLCBJIGRpZG4gc2VlIGhlciBtYWtpbmcgdGhlIHNhbWUgbWlzdGFrZXMgSSBkaWQgb3Igd29ya2luZyB0aHJvdWdoIHRoZW0gdGhlIHNhbWUgd2F5LCBzbyBzaGUgd2FzIGFsd2F5cyBhIGJpdCBtb3JlIHN0YWJsZSBpbiBteSBleWVzLiAKSSBoYXZlIGEgeW91dHViZSBjaGFubmVsIChsaW5rKSB0aGF0IEkgc3RhcnRlZCBjYXN1YWxseSBhcyBhIHN0YXkgYXQgaG9tZSBwYXJlbnQgMiB5ZWFycyBhZ28gdGhhdCBJIHJhcmVseSB1cGxvYWQgdG8sIGJ1dCBJIHNvbWVob3cgZ2F0aGVyZWQgbW9yZSB0aGFuIDUsMDAwIHN1YnNjcmliZXJzIGluIHRoYXQgdGltZSBhbmQgb25seSBub3cgYW0gSSBzZXJpb3VzbHkgdGhpbmtpbmcgYWJvdXQgdHJ5aW5nIHRvICJkbyIgc29tZXRoaW5nIHdpdGggaXQuIApTaGUgd2FzIHByb21wdGx5IHNlbnQgaG9tZSBhZnRlciB0aGF0LCBidXQgdGhpcyB3ZWVrIHNoZSBoYWQgYSBjb21wYW55IHdpZGUgbWVldGluZyBhYm91dCB0aGUgbmV3IHBvbGljaWVzIHNoZSBpcyBpbnRyb2R1Y2luZy4gClRyYXlwMzN1c2VybmFtZSAgMSBwb2ludCAgc3VibWl0dGVkIDEyIGRheXMgYWdvCkxpa2UgYWxsIG1lbWJlcnMgb2YgdGhlIGJvYXJkLCBNb3lsYW4gcmVjZWl2ZXMgYSAkMTAwIHN0aXBlbmQgZm9yIGVhY2ggbWVldGluZyBoZSBhdHRlbmRzLCBub3QgdG8gZXhjZWVkICQyMiwwMDAgYW5udWFsbHkuCllvdSBuZWVkIHRvIG1ha2Ugc3VyZSB0aGF0IHlvdXIgUG9rZXIgY2hpcCBTZXRzIGFyZSBub3Qgc2ltcGx5IGJvcmluZyBmbGF0IHNtb290aCBkaXNjcy4gCkJVVC4gSSBrbm93IHRoYXQgbXkgZGF1Z2h0ZXIgYW5kIGhlciBESCBoYXZlIGJvdGggYSByaWdodCBhbmQgYW4gb2JsaWdhdGlvbiB0byBwYXJlbnQgdGhlaXIgY2hpbGRyZW4gICB0byB0ZWFjaCB0aGVtIG1hbm5lcnMsIGFwcHJvcHJpYXRlIGJlaGF2aW9ycywgZXRjLiAKTGEgYmVyY2UgY29tbXVuZSBlc3QsIGNvbW1lIHNvbiBub20gbCBsYSBwbHVzIGNvdXJhbnRlIGRlcyBBcGlhY2VzIChhdmVjIGxhIGNhcm90dGUpIHF1IHRyb3V2ZSBlbiBGcmFuY2UuIExlcyBBcGlhY2VzIChleCBPbWJlbGxpZnJlcykgc29udCBzYW5zIGRvdXRlIGxhIHNldWxlIGZhbWlsbGUgYm90YW5pcXVlIGRvbnQgb24gaWRlbnRpZmllIGQgbGVzIG1lbWJyZXMgZW4gdGFudCBxdWUgdGVscyBhdmFudCBtbWUgZGUgcG91dm9pciBzIEFoISBDIHVuZSBjYXJvdHRlIG91IGR1IGN1bWluIChwYXJjZSBxdWUgbGVzIGNhcm90dGVzIGF1IGN1bWluLCBjIGJvbiBeXikuIApJdCBjYW4gYmUgZmFsc2lmaWVkIGJ5IGhhdmluZyBhIHBpZyBmbHkuIApFdmVuIFNlb3VsIGhhcyBpdHMgb3duIGJlYXV0eSB3aXRoIHRoZSByaXZlciBhdCBuaWdodC4gCkRyIFdhbmcgc2FpZCBoZSB3aXNoZWQgaGUgaGFkIHNlZW4gUGV0ZSBmb3VyIHllYXJzIGFnbyBiZWNhdXNlIGhlIGNvdWxkIGhhdmUgcHJldmVudGVkIHNvIG11Y2ggdGlzc3VlIGRhbWFnZSAoYnV0IGhpbmRzaWdodCBpcyBhIGdvb2QgdGhpbmcsIGlzbid0IGl0PykuIApJdCB0b29rIG1lIGFib3V0IDUgbWludXRlcyBhbmQgdHdvIHRyYXNoIGJhZ3MsIG9uZSBmb3IgZ2FyYmFnZSBvbmUgZm9yIGNsb3RoZXMuIEl0IGZlbHQgc28gZ29vZCB0byBiZSBkb25lIGFmdGVyd2FyZHMgYW5kIHRocm93IHRoYXQgc2hpdCBhd2F5LiAKV2hpY2ggY29yZHMgZG8geW91IHJlY29tbWVuZCBJIGN1dD8KVGhleSBuZWVkIGEgc291cmNlIG9mIGxpcXVpZGl0eSBzbyB0aGV5IGRvbiBnZXQgZXhwb3NlZCBRdWFkcmlnYUNYIHN0eWxlLlVoaCwgbm8uIApUaGUgcHJvcG9zYWwgd291bGQgbGVnYWxpemUgY2FzaW5vcyBpbiBCb29uZSwgTWlsbGVyIGFuZCBXYXNoaW5ndG9uIGNvdW50aWVzIGZvciB0aHJlZSBjb21wYW5pZXMgb3duZWQgYnkgc3VwcG9ydGVycyBvZiB0aGUgYW1lbmRtZW50LiBUaGUgY29tcGFuaWVzIHdvdWxkIGhhdmUgdGhlIHJpZ2h0IHRvIHRyYW5zZmVyIHRoZSBsaWNlbnNlcyBmb3IgdGhlIGNhc2lub3MuIFRoZSBncm91cCBiZWhpbmQgdGhlIGluaXRpYXRpdmUgaGFzIHRvdXRlZCB0aGUgcHJvcG9zYWwgYXMgYSB3YXkgdG8gYm9vc3QgdG91cmlzbSBhbmQgam9icyBmb3IgdGhlIHN0YXRlLi4gCiJKdW5lIGFuZCBEb3JpcyBwdWxsZWQgdGhpcyBvZmYgd2l0aCBhIHNob2VzdHJpbmcgYnVkZ2V0LiJUaGUgZGVhZGxpbmUgZm9yIHRoZSBwdWJsaWMgdG8gc3VibWl0IGZlZWRiYWNrIHRvIHRoZSBjaXR5IG9uIEJlZWRpZSdzIHJlem9uaW5nIGFwcGxpY2F0aW9uIGlzIG5leHQgd2VlayBvbiBKYW4uIDQgYW5kIHRoaXMgc3BhcmtlZCBvdGhlciBDaGluYXRvd24geW91dGggZWZmb3J0cyBpbiBEZWNlbWJlci5PdmVyIGF0IHRoZSBDYXJuZWdpZSBDb21tdW5pdHkgQ2VudHJlLCBDaGFuZWwgTHksIGEgZG93bnRvd24gZWFzdHNpZGUgb3V0cmVhY2ggd29ya2VyIHdobyBtYWlubHkgc2VydmVzIGxvdyBpbmNvbWUgQ2FudG9uZXNlIGFuZCBNYW5kYXJpbiBzcGVha2luZyBzZW5pb3JzLCB0aGlzIHdlZWsgZGVidXRlZCBhIHNob3J0IGZpbG0gc2hlIGFuZCBoZXIgcGFydG5lciwgRWxpb3QgR2FsYW4sIG1hZGUuQ2FsbGVkIEhvdCBFYXJ0aCwgaXQgZm9jdXNlcyBvbiBob3cgZWxkZXJseSByZXNpZGVudHMgaW4gdGhlIGFyZWEgZmVlbCBhYm91dCB0aGUgcGxhbnMgZm9yIDEwNSBLZWVmZXIuIApSZWxheCB0aGUgZW50aXJlIG5lcnZvdXMgc3lzdGVtSW5jcmVhc2UgdGhlIGx5bXBoYXRpYyBzeXN0ZW0gZmxvdwpJIHdhbnQgdG8gZ2V0IHNvbWUgb2YgdGhhdCBzcGVjaWFsIHlhcm4gdGhhdCB3aWxsIG1ha2UgaXQgbG9vayBtb3JlIGZsdWZmeSBsaWtlIGEgZm94IHRhaWwgc2hvdWxkLiAKRXZlbiBvciBlc3BlY2lhbGx5IHRldGFudXMgc2hvdHMuVGhlIG90aGVyIGRheSwgSSBoYWQgYSBxdWVzdGlvbiBvbiB3aGV0aGVyIGl0IG1hZGUgc2Vuc2UgdG8gZ2V0IGEgdmFjY2luZSBmb3IgSGVwIC4gQW5kLCBpZiBzbyB3aGljaCBvbmU/IDMgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29JIGRvbid0IHRoaW5rIG9uZSBnZW5lcmFsbHkgZ2V0cyBwaHlzaWNhbGx5IGNsb3NlIGVub3VnaCB0byBpbnRlcnZpZXdlcnMgc28gdGhhdCB0aGUgZnJhZ3JhbmNlIHlvdSBtaWdodCBiZSB3ZWFyaW5nIG1pZ2h0IHByb3ZpZGUgc29tZSBwb3NpdGl2ZSBzdWJsaW1pbmFsIG1lc3NhZ2UuIFNvLCBpZiB5b3VyIGZyYWdyYW5jZSBkb2VzIGdldCBwZXJjZWl2ZWQsIGl0J2QgYmUgbGlrZWx5IHRoZSBjYXNlIHlvdSdyZSB3ZWFyaW5nIHRvbyBtdWNoLkkgYmVsaWV2ZSBJIG1heSBoYXZlIGNhdXNlZCBzb21ldGhpbmcgc2ltaWxhciB0byB0aGUgbGFzdCBzaXR1YXRpb24gYXQgd29yayByZWNlbnRseS4gClN0YXJ0aW5nIHRvIGZlZWwgc29tZSByZWFsbHkgZ29vZCBidXJuIG5vdyBhbmQgSSBrZWVwIHRyYWRpbmcgcGxhY2VzIHdpdGggYSBndXksIGhpbSBpbiBmcm9udCwgbWUgaW4gZnJvbnQsIHJpbnNlIGFuZCByZXBlYXQgc2V2ZXJhbCB0aW1lcy4gSXQgc291bmRlZCBsaWtlIHdlIHdlcmUgYm90aCBmZWVsaW5nIHRoZSBzYW1lIGJ1cm4gYW5kIHN0cnVnZ2xpbmcgaGFyZCB0byBrZWVwIHBhY2UuIE15IGZhY2UgaXMgc3RhcnRpbmcgdG8gZ2V0IHJlYWxseSBjb2xkIGFuZCB0aGUgZnJlZXppbmcgYWlyIGZlbHQgaG9ycmlibGUgaW4gbXkgbHVuZ3MuIEV2ZW4gdGhvdWdoIEkgaGFkIGEgdGhpbiBidWZmLCBJIGtlcHQgaXQgb2ZmIG15IGZhY2UgZm9yIGFsbW9zdCB0aGUgZW50aXJlIHJhY2UgYmVjYXVzZSBJIHdhcyBicmVhdGhpbmcgbXVjaCB0b28gaGVhdmlseSB0byBhbHNvIGJyZWF0aGUgdGhyb3VnaCBmYWJyaWMuIEEgbGF5ZXIgb2YgaWNlIGhhZCBmb3JtZWQgb24gaXQgdG9vLCBzbyBpdCBtYWRlIGl0IGV2ZW4gbW9yZSBkaWZmaWN1bHQuIE1lbnRhbCBoZWFkc3BhY2UgaXMgZ29vZCwgZmVlbGluIGZpbmUgdXAgdGhlcmUuIEkgd2lzaCBJIGNvdWxkIGJsb2NrIGV2ZXJ5dGhpbmcgb3V0IGFuZCBqdXN0IGZvY3VzIG9uIGNvdW50aW5nIHRob3VnaC4gTWF5YmUgdGhlbiBJIGNvdWxkIHB1c2ggZmFzdGVyLgpIZSB3b3VsZCBzaXQgb24gdGhlaXIgYmFsY29ueSBhbmQgbG9vayBvdXQgb3ZlciBvdXIgdGlueSBjaXR5L3Rvd24sIGJ1dCB3aGF0IGhlIHdhcyBsb29raW5nIGF0IHdhcyB0aGUgcml2ZXIgYW5kIHZpbGxhZ2Ugd2hlcmUgaGUgZ3JldyB1cC4uIApUaGVuIG9mIGNvdXJzZSB3ZSByZWNvcmRlZCB0aGUgbW9zdCB2aXNpdG9ycyBpbiB0aGUgaGlzdG9yeSBvZiB0aGUgZnVuZHJhaXNlciBpdHNlbGYuIApNeSBhZHJlbmFscyB3ZXJlbiBmYXRpZ3VlZC4gQmVjYXVzZSBhZHJlbmFscyBjYW4gYmUgVGhlc2UgdHlwZXMgb2YgZmFrZSBkaXNlYXNlcyBhbHdheXMgaGF2ZSB2YWd1ZSBzeW1wdG9tcyBhc3NvY2lhdGVkIHdpdGggdGhlbS4gCldoYXQgSSB0YWxraW5nIGFib3V0IGlzIHZlcnkgZGlmZmVyZW50LiAKSXQncyBtb3JlIGFib3V0IGhvdyBlbnRyZW5jaGVkIHRoZSBjb25zZXJ2YXRpdmUgTUlDIGlzIGluIGdvdmVybm1lbnQgYW5kIGhvdyBtdWNoIHRoZXkgcmVhbGx5IGRyaXZlIHBvbGljeSBhbmQgc3RyYXRlZ3kuIEl0J3Mgc3RyYW5nZSB0byBtZSB0aGF0IHBlb3BsZSBzdXBwb3J0IFRydW1wIGFuZCB0aGluayBoZSBpcyBvbiB0aGVpciBzaWRlIGJlY2F1c2UgaGUgaGFzIGNvbXBsZXRlbHkgZW5hYmxlZCB0aGUgb2xkIGd1YXJkIGFuZCBjb21wbGV0ZWx5IHJlbW92ZWQgYW55IHByb2dyZXNzIHRoYXQgT2JhbWEgdHJpZWQgdG8gaW1wbGVtZW50LCBhbGJlaXQgcG9vcmx5Li4gCldoYXQgUmFtIGFuZCBNYXJrIG5ldmVyIGtuZXcgd2FzIHRoYXQgUGhpbCBoYWQgc3BlbnQgNiBtb250aHMgaW1wcm92aW5nIGhpcyBnYW1lIHVuZGVyIHRoZSB0dWl0aW9uIG9mIGEgcHJvZmVzc2lvbmFsIGdvbGYgY29hY2guIApFbiBwYXJhbGxsZSwgaWwgbWUgcGFyYWl0IHBvc2l0aWYgcXVlIHNlIGR2ZWxvcHBlbnQgZGVzIG1vdXZlbWVudHMgZGUgc29saWRhcml0LCBkZSBtaXNlIGVuIGNvbW11biBkZSBtb3llbnMgZXQgZCduZXJnaWUgcG91ciBzJ2FmZmlybWVyIGVuIHRhbnQgcXVlIHBlcnNvbm5lcyBncm9zc2VzLCBkZSBsdXR0ZSBwb3VyIGZhaXJlIHJlY3VsZXIgbGEgZ3Jvc3NvcGhvYmllLCBwYXIgZXhlbXBsZSBkZXB1aXMgcGV1LCBsZSBtb3V2ZW1lbnQgR3JhcyBQb2xpdGlxdWUgcXVpIHRhaXQgZCdhaWxsZXVycyBwcnNlbnQuIExlIHN1amV0IGVzdCBsb2luIGQndHJlIG5vdXZlYXUsIGRlcyBhc3NvY2lhdGlvbnMgY29tbWUgcGFyIGV4ZW1wbGUgQWxsZWdybyBGb3J0aXNzaW1vIHNlIHNvbnQgYmF0dHVlcyBkZXB1aXMgbG9uZ3RlbXBzIHN1ciBjZXMgc3VqZXRzIGV0IG1tZSBsZSB0ZXJtZSBncm9zc29waG9iaWUsIHJhcHBlbGxlIFN5bHZpZSBCZW5rZW1vdW4sIHZpY2UgcHJzaWRlbnRlIGR1IEdST1MsIGEgdCB1dGlsaXMgZHMgbGVzIGFubmVzIDkwLCBldCBub3RhbW1lbnQgcG9wdWxhcmlzIHBhciBBbm5lIFphbWJlcmxhbi4gTWFpcyBpbCBzZW1ibGUgcmV2ZW5pciBzdXIgbGUgZGV2YW50IGRlIGxhIHNjbmUsIHNhbnMgZG91dGUgZW4gbGllbiBhdmVjIGxlcyBwb3NzaWJpbGl0cyBkZSBjb21tdW5pY2F0aW9uIHBsdXMgZGlyZWN0ZSBxdWUgcGVybWV0IGludGVybmV0LiAKRCdhdXRyZSBwYXJ0LCBvbiBuZSBkb2l0IHBhcyB2ZW5kcmUgZHUgbWlsbGVwZXJ0dWlzIHNhbnMgYXZlcnRpciBsZXMgY29uc29tbWF0ZXVycyBkJ3VuIHJpc3F1ZSBkZSBwaG90b3NlbnNpYmlsaXNhdGlvbi4gCkkgdGhpbmsgZXNwZWNpYWxseSBhcyBwZW9wbGUgd2l0aCBsaW1pdGVkIG1lYW5zIHdlIGhhdmUgdG8gYmUgZXZlbiBtb3JlIHJ1dGhsZXNzIGFib3V0IGdldHRpbmcgcmlkIG9mIHN0dWZmIHdlIGRvbiByZWFsbHkgbmVlZCBhbmQgZW5qb3ksIGJlY2F1c2UgSSBjYW4gdGVsbCB5b3UgZnJvbSBmaXJzdCBoYW5kIGV4cGVyaWVuY2UsIGl0IHZlcnkgZWFzeSB0byBnbyAiaG9hcmRlciIgbW9kZS4gCkxldCB0aGUgUmVwdWJsaWNhbnMgbG9vayBsaWtlIHRoZSB3aGlueSBsb3NlcnMgdGhleSBhcmUgYW5kIGxldCB0aGUgRGVtcyB3YWxrIGF3YXkgZnJvbSB0aGlzIEZyYW5rZW5zdGVpbiBtb25zdGVyIG9mIGEgYmlsbCBhbmQgc3RhcnQgb3Zlci4uIApXaGlsZSwgdGhlIHNpZ25zIHdlcmUgdGhlcmUgYnV0IEkgd2FzIHNvIGZhciBpbiBsb3ZlIHRoYXQgSSBkaWRuIHNlZSB0aGVtIGF0IHRoZSB0aW1lIGJ1dCB0aGV5IGFyZSBjbGVhciBhcyBkYXkgbG9va2luZyBiYWNrLiBBbnl3YXlzLCBJIHNwZW50IHRoZSBuZXh0IDYgbW9udGhzIGJlaW5nIG1pc2VyYWJsZSBhbmQgcmlnaHQgYXMgSSB3YXMgZmluYWxseSBnZXR0aW5nIG92ZXIgaGVyIHNoZSBjYWxsZWQgbWUgYmFjayB1cC4gSSwgbGlrZSBhIGZvb2wsIGFncmVlZCB0byBsZXQgaGVyIHRha2UgbWUgb3V0IHdoaWNoIGxlZCB0byB1cyBoYXZpbmcgc2V4LiBTaG9ydGx5IHRoZXJlYWZ0ZXIsIEkgcmVhbGl6ZWQgdGhhdCB3aGF0IEkgaGFkIGJlZW4gZGVzcGVyYXRlbHkgd2FudGluZyB0byBoYXBwZW4gZm9yIGhhbGYgYSB5ZWFyIHdhcyBub3Qgd2hhdCBJIHdhbnRlZCBhdCBhbGwuIFdoYXRldmVyIHdhcyB0aGVyZSBiZWZvcmUgdGhlIGJyZWFrdXAgd2FzIGdvbmUgYW5kIHJlcGxhY2VkIHdpdGggZGlzdHJ1c3QgYW5kIGluIHNvbWUgd2F5cyBhIGNvbXBsZXRlIHN0cmFuZ2VyLgpQYWluIHRoYXQgbmV2ZXIgcmVhbGx5IGdvZXMgYXdheQpEb24gcmVhbGx5IGtub3cgaWYgdGhleSByZWFsIChjb21tZW50cykgb3Igbm90LCBMYWNvYiBzYWlkLiBUaGV5IHJlYWwsIHRoZXkgd291bGQgZGlzdHVyYiBtZS4gCkRpZCBTb3JhIGVuZCB1cCBzYXZpbmcgS2FpcmkgYXQgdGhlIGVuZD8gSSBtZWFuLCBzaGUgYXBwZWFycyBpbiB0aGUgZmluYWwgc2NlbmUgYW5kIE5hbWluIHdhcyBhYmxlIHRvIGNvbWUgYmFjayAoSSBkb24ndCByZW1lbWJlciB0aGVtIHNheWluZyBpdCBleHBsaWNpdGx5IGJ1dCBJIHRoaW5rIGluIG9yZGVyIGZvciBSb3hhcyB0byBjb21lIGJhY2sgdGhleSBuZWVkZWQgU29yYSBhbGl2ZSBzbyBJJ20gZ3Vlc3NpbmcgTmFtaW4gd2FzIHRoZSBzYW1lIHNpbmNlIHNoZSdzIEthaXJpJ3MgTm9ib2R5PyBBbmQgZGlkIGJyaW5naW5nIEthaXJpIGJhY2sgY2F1c2UgU29yYSB0byBkaWU/IE1laCwgSSB3YXMgdW5wbGVhc2VkIHRoYXQgdGhleSBoYWQgdG8gZnJpZGdlIGhlciBsaWtlIHRoYXQsIGVzcGVjaWFsbHkgc2luY2UgZXZlcnlvbmUgZWxzZSBhY3RlZCByYXRoZXIgbm9uY2hhbGFudCBhYm91dCBpdC4gCkNhc2Ugc3R1ZGllcyBmcm9tIGxlYWRpbmcgbWFya2V0ZXJzIHN1Y2ggYXMgS2ltYmVybHkgQ2xhcmsgYW5kIENvdmVyR2lybCBhcmUgaW5jbHVkZWQsIGFzIHdlbGwgYXMgc3BlbmRpbmcgcHJvamVjdGlvbnMsIGEgbGlzdGluZyBvZiBsZWFkaW5nIHNob3BwZXIgYWdlbmNpZXMgYW5kIHRoZWlyIG1ham9yIGNsaWVudHMsIGFuZCB0aXBzIGFuZCBhZHZpY2Ugb24gaG93IHlvdSBzaG91bGQgYmUgYXBwcm9hY2hpbmcgeW91ciBzaG9wcGVyIG1hcmtldGluZyBwcmFjdGljZS4gCkFmdGVyIGxlYXJuaW5nIHRoZSB0ZWNobmljYWxpdGllcyB3aGljaCBpcyBib3JpbmcgeWV0IGVzc2VudGlhbCwgbGV0IHVzIG5vdyBkd2VsbCBpbiB0aGUgZnVuIHNpZGUgb2YgZnJlZSBvbmxpbmUgcG9rZXIuIFRoZXJlIGFyZSBtYW55IGZlYXR1cmVzIGluY2x1ZGVkIGluIHRoZSBmcmVlIG9ubGluZSBwb2tlciBzb2Z0d2FyZSBhbmQgb25jZSB5b3UgYWNxdWlyZSBpdCwgeW91IHdvdWxkIGFsc28gYmUgYWJsZSB0byB1dGlsaXplIHRoZXNlIGZlYXR1cmVzLiBPbmUgb2YgdGhlIGZlYXR1cmVzIGhlcmUgaXMgdGhhdCB5b3UgaGF2ZSB0aGUgb3B0aW9uIHRvIHBsYXkgaW4gcHVibGljIHRhYmxlcyBvciBwcml2YXRlIHRhYmxlcy4gRm9yIHByaXZhdGUgdGFibGVzLCBvbmUgbXVzdCBmaXJzdCBhc2sgZm9yIHBlcm1pc3Npb24gb3IgYSByZXF1ZXN0IHRvIGpvaW4gdGhlIHByaXZhdGUgdGFibGUuIFlvdSBjb3VsZCBhbHNvIGhhdmUgdGhlIG9wdGlvbiB0byBjcmVhdGUgeW91ciBvd24gcHJpdmF0ZSB0YWJsZSB0aHVzIG1ha2luZyB5b3UgZmVlbCByaWNoIGFuZCBwb3dlcmZ1bC4gQXNpZGUgZnJvbSB0aGVzZSBmZWF0dXJlcywgZnJlZSBvbmxpbmUgcG9rZXIgYWxzbyBvZmZlcnMgZGlmZmVyZW50IHR5cGVzIG9mIGdhbWVzLiBUaGVzZSBnYW1lcyBhcmUgVGV4YXMgSG9sZCAnZW0sIE9tYWhhLCBPbWFoYSBIaS9MbywgU2V2ZW4gQ2FyZCBTdHVkLCBTZXZlbiBDYXJkIFN0dWQgSGkvTG8sIGFuZCA1IENhcmQgRHJhdy4gQW55IHBsYXllciBjb3VsZCB1c2UgZnJvbSB0aGVzZSBkaWZmZXJlbnQgdHlwZXMgb2YgZ2FtZXMgZnJvbSBmcmVlIG9ubGluZSBwb2tlci4gVGhlc2UgZGlmZmVyZW50IG9wdGlvbnMgZm9yIGdhbWVzIG1ha2UgdGhlIGZyZWUgb25saW5lIHBva2VyIHBhY2thZ2UgZXZlbiBtb3JlIGF0dHJhY3RpdmUgYW5kIHRlbXB0aW5nIGZvciBwZW9wbGUuCjkuIApXZSB3YW50IHRvIHRoYW5rIG91ciBUViBwYXJ0bmVyIFNhdC4xIGZvciB0aGlzIGNoYW5jZS4gU2F0LjEgaXMgdGhlIG9mIHRoZSBDaGFtcGlvbnMgU28gdGhpcyBpcyBsaWtlIGEgaG9tZWNvbWluZyBmb3IgUnVzbGFuIENoYWdhZXYuIApBbm5hIGFuZCBLcmlzdGluYSdzIG1pbmkgVFYgZW1waXJlClRoaXMgaXMgd2hhdCBJIHdhcyBnb2luZyB0byBzYXkhIE15IGh1c2JhbmQgYW5kIEkgaGF2ZSBiZWVuIG1hcnJpZWQgZm9yIDYgeWVhcnMsIHdlIGJlZW4gdG9nZXRoZXIgMTYgaW4gdG90YWwuIApOb3QgYWxsIG9mIHRoZXNlIG9mZiBzaG9yZSBiYW5rcyBhbmQgZnVuZCB0cmFuc2ZlciBzZXJ2aWNlcyBhcmUgc2FmZSB0byB1c2UuIEhvdyBjYW4geW91IHRlbGwgdGhlIGRpZmZlcmVuY2U/IFJlc2VhcmNoIHRoZSBiYW5rIG9yIHNlcnZpY2UgdG8gZmluZCBvdXQgaG93IGxvbmcgdGhlIGNvbXBhbnkgaGFzIGJlZW4gYXJvdW5kICAgdGhlIG1vcmUgZXN0YWJsaXNoZWQsIHRoZSBiZXR0ZXIuIEl0J3MgYSBnb29kIHNpZ24gaWYgeW91IGNhbiBzcGVhayB0byBhIHJlYWwgcGVyc29uIHdoZW4geW91IGNhbGwgdGhlIGNvbXBhbnkncyBjdXN0b21lciBzZXJ2aWNlIGxpbmUuIApUaGUgc291cmNlIGFyZ3VlZCB0aGF0IE1udWNoaW4gd2FzICJmcmVlbGFuY2luZyIgd2l0aCBoaXMgY29tbWVudHMgb24gU3VuZGF5IGFuZCBzYWlkIE1udWNoaW4gd2FzIGluIGRhbmdlciBvZiBiZWNvbWluZyAiUmV4IFRpbGxlcnNvbiAyLjAsIiByZWZlcnJpbmcgdG8gdGhlIGZvcm1lciBzZWNyZXRhcnkgb2Ygc3RhdGUgd2hvbSB0aGUgUHJlc2lkZW50IHJlYnVrZWQgZm9yIGdldHRpbmcgYWhlYWQgb2YgaGlzIHBvc2l0aW9ucy4gQSBNbnVjaGluIHNwb2tlc21hbiBkaWQgbm90IGltbWVkaWF0ZWx5IHJlc3BvbmQgdG8gYSByZXF1ZXN0IGZvciBjb21tZW50Li4gCldoaWNoIEkgZGlkLiAKVG9kYXkgbWFya2VkIHdoYXQgdGhlIHBlb3BsZSBkZWNsYXJlZCBhcyBUaGUgRGF5IG9mIEpvaW5pbmcsIHRoZSBwaWxncmltYWdlIHRoZSBwZW9wbGUgb2YgRmllcm5lbiB0YWtlIHRvIHRoZSBXb21iIG9mIHRoZSBXb3JsZCByZWNvbm5lY3Qgd2l0aCB0aGVpciBhbmNlc3RyeSBhbmQgdGhlIGxpZmUgYXJvdW5kIHRoZW0uIApKZSBtZSBzdWlzIGxhaXNzIHRlbnRlciBwYXIgY2UgcGV0aXQgbGl2cmUgKDY0IHBhZ2VzLCA4LDUwICkgZGVzIGRpdGlvbnMgZHUgU3VyZWF1IHF1aSBuIHNvbnQgcGFzICBsZXVyIGNvdXAgZCBlbiBjZSBxdWkgY29uY2VybmUgbGUgZG9tYWluZSBkZSBsYSBzYW50IGV0IGR1IGJpZW4gdHJlIGJpZW4gcXVlIGNlbGEgbmUgc29pdCBwYXMgbCBsZXVyIGNlbnRyZSBkIG1hamV1ci4gCkFuZCBzbywgYmVob2xkISBUaGUgcG90ZW50aWFsIGVuZW1pZXMgb2YgR3JlYXQgQnJpdGFpbiwgMTkyOS4gSXQgbWlnaHQgYmUgY29uY2VpdmFibGUgdGhhdCBpdCBpcyBGcmFuY2UgYW5kIEZyYW5jZSBhbG9uZSBzZXR0aW5nIHVwIHRob3NlICJsb25nIHJhbmdlIGd1bnMiLCB3aGF0IHdpdGggdGhlIGxvbmcgaGlzdG9yeSBiZXR3ZWVuIHRoZSB0d28gY291bnRyaWVzIGFuZCBhbGwsIHRob3VnaCBpdCBzZWVtcyBhcyByZWNlbnQgYWxsaWVzIHRoaXMgd291bGQgbm90IGJlIHRoZSBjYXNlLiAKRGFydDIyIHUKTXVzdCBub3QgdXRpbGl6ZSB0aGlyZCBwYXJ0eSB3ZWJzaXRlcyBvciBzdWJyZWRkaXRzClJvbGxpZSwgRHIuIApJZiB5b3Ugd2FudCB0byBzZWUgd2hhdCBJIGhhdmUgd3JpdHRlbiB5b3UgY2FuIGFsd2F5cyBicm93c2UgdGhlIGxpYmFyeS4KQnV0IGFzIGxvbmcgYXMgdW5pdmVyc2l0aWVzIGFuZCB0aGUgcnVsaW5nIGVsaXRlcyBvZiBvdXIgY3VsdHVyZSBwcm92ZSBvdXIgb3duIGZpdG5lc3MgdG8gcnVsZSB0aHJvdWdoIHRoZSBmaXRuZXNzIG9mIG91ciB5b3V0aCwgYXMgbG9uZyBhcyBzcG9ydGluZyBjdWx0dXJlIGlzIG5vdCBqdXN0IGZvciBmdW4gYW5kIGZpdG5lc3MsIGJ1dCBmb3Igc2Nob2xhcnNoaXBzIGFuZCBmdXR1cmUgam9icywgdGhlIGJyb2dlb2lzaWUgd2lsbCBoYXZlIHRvIG1hbiB1cCBhbmQgcGF5IHRoZSBwcmljZS4gc2FkbHksIHRoZSB5b3VuZyB3b21lbiBhbmQgeW91bmcgbWVuIHdobyBhcmUgdXNlZCB0byBwcm92ZSB0aGVpciBtYW5saW5lc3MgIHRoZSBiaXRjaGVzIGFuZCB0aGUgZmFncyB3aG8gYXJlIHNjcmVhbWVkIGF0IGFuZCB0aHJlYXRlbmVkLCBiZWF0ZW4sIHJhcGVkIGFuZCBldmVuIG11cmRlcmVkICB3aWxsIGhhdmUgdG8gcGF5IGFuIGV2ZW4gaGlnaGVyIHByaWNlLgpUaGUgY29tcGFueSBzYWlkIGl0IGhvcGVkIHRvIGluY3JlYXNlIHJldmVudWVzIGZyb20gYWN0aXZpdGllcyBzdWNoIGFzIHZpcnR1YWwgZ2FtZXMsIG9ubGluZSBwb2tlciBhbmQgZml4ZWQgb2RkcyBiZXR0aW5nIHRlcm1pbmFscyBpbiB0aGUgVUssIGFzIHRoZXNlIHdvdWxkIHJlZHVjZSB2b2xhdGlsaXR5IGNhdXNlZCBieSBzcG9ydHMgcmVzdWx0cy4KVHJ5IGFzIHlvdSBtaWdodCwgeW91IGNhbiBsdW1wIG1lIGluLiBpIGFtIG5vdGhpbmcgbGlrZSB3aGF0IHlvdSBwdXQgZm9ydGguIG15IHN0YXRzIHNwZWFrIGZvciB0aGVtc2VsdmVzLgpXaGlsZSBkaXNjb3ZlcmluZyBhbm90aGVyIGluZGVwZW5kZW50IHNhcGllbmNlIHdvdWxkIGJlIGEgbW9udW1lbnRhbCBtb21lbnQgZm9yIHRoZW0sIGRpc2NvdmVyaW5nIG9uZSB0aGF0IGEgaGVhZHN0YXJ0IG9uIHRoZW0gb2YgdGVucyBvZiB0aG91c2FuZHMgb2YgeWVhcnMgYWxzbyBwb3NlcyBjb25zaWRlcmFibGUgcmlza3MuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbkJFRVIgaGFzIHN0b3BwZWQgZmxvd2luZyBhdCBBbGJ1cnkncyBpY29uaWMgU29kZW4ncyBIb3RlbCwgd2l0aCB0aGUgcG9wdWxhciBwdWIgc2V0IHRvIGdvIHVuZGVyIHRoZSBhdWN0aW9uZWVyJ3MgaGFtbWVyLiBBIGxvbmcgcnVubmluZyBkaXNwdXRlIGJldHdlZW4gdGhlIFN5ZG5leSBiYXNlZCBvd25lciBvZiB0aGUgaG90ZWwsIEpvaG4gQW5naXVzLCBhbmQgZm9ybWVyIGxpY2Vuc2VlLCBOaWNob2xhcyBXaWxsb3VnaGJ5LCB3YXMgc2V0dGxlZCBvdXQgb2YgY291cnQgbGF0ZSBsYXN0IHdlZWsuIFRoZSBwdWIgaGFzIGJlZW4gaW4gZGFya25lc3MgdGhpcyB3ZWVrIGFuZCBNciBXaWxsb3VnaGJ5IHZhY2F0ZWQgdGhlIDE1NSB5ZWFyIG9sZCBob3RlbCBvbiBUdWVzZGF5IGFmdGVyIGhpcyBsZWFzZSBlbmRlZC4gCkxlIGNoYXQgUG9sbHV4IChQb3BhdWwpIHJvdXBpbGxlIGVuIHRyYXZlcnMgZHUgbGl0IHBlbmRhbnQgcXVlIHNhIG1yZSBJU0lTIHBhdHJvdWlsbGUgZGFucyBsZSBqYXJkaW4gdG91dCBhdXRvdXIgZHUgY2h0ZWF1IGRvbnQgZWxsZSBuZSBzJ2xvaWduZSBwb3VyIGFpbnNpIGRpcmUgamFtYWlzLiBFbGxlIHN1cnZlaWxsZSBsZXMgYWJvcmRzIGRlIGNlIHF1aSBlc3QgZGV2ZW51IHNvbiByZWZ1Z2UuIE5vdXMgbCdhdm9ucyBmYWl0IHN0cmlsaXNlciwgbGEgY29xdWluZSAhIGVsbGUgc2UgbGFpc3NhaXQgdHJvcCBmYWNpbGVtZW50IGFib3JkZXIgcGFyIGxlcyB2b3lvdXMgZHUgcXVhcnRpZXIuIE5vbiBtYWlzICEgT24gdmEgdm91cyBhcHByZW5kcmUgIGFkb3B0ZXIgdW5lIHRlbnVlIGNvcnJlY3RlIGRldmFudCBsZXMgcGV0aXRzIGNvbGllcnMsIE1hZGFtZSAhCk15IERIIHdvbiByZW1lbWJlciBkYXRlcyAgIHRoYXQgaXMgd2hhdCBJIHVzZSBhcyB0aGUgZXhjdXNlIGZvciB3aHkgdGhleSBoYXZlIHRvIGRvIHRoaXMuIEluIGxhd3Mgc2NyZWFtIGFuZCBjb21wbGFpbiBhYm91dCBpdCB3aGVuIEkgdGVsbCB0aGVtIHRoZXkgZGlkbiB0ZWxsIG1lIGFib3V0IGl0IHRvIHB1dCBvbiB0aGUgZmFtaWx5IGNhbGVuZGFyLiBUaGV5IGRyb3ZlIDE2IGhvdXJzIHRvIHZpc2l0IGFuZCBkaWRuIGJvdGhlciB0byB0ZWxsIG1lICAgdGhleSB3ZXJlIHByb21wdGx5IHRvbGQgdG8gZmluZCBhIGhvdGVsIGFuZCBtYXliZSB3ZSBjb3VsZCBjbGVhciBvdXIgc2NoZWR1bGVzIGZvciB0b21vcnJvdy4uIAoyOSB5ZWFyIG9sZCBNaWNoYWVsIFdhcnJlY2tlciwgYW4gdW5lbXBsb3llZCBjb21wdXRlciB0ZWNobmljaWFuIHVzZXMgdGhlIGZyaWdodGVuaW5nIHNjcmVlbiBuYW1lICJjYW5faV9yYXBlX3lvdV9hbmFsbHkuIgpPbmNlIHZpbGxhaW4gYmV0cywgdGhlcmUgYWxtb3N0IDAgY2hhbmNlIGhpcyBoYW5kIGlzIGdvb2QuIApCZW5lZGljdCBjb21tdW5pdHkgZmVzdGl2YWwuIGZyaWRheSwganVseSAxM3RoIGFuZCBzYXR1cmRheSwganVseSAxNHRoLCBzdC4gYmVuZWRpY3QgcGFyaXNoIHdpbGwgaG9sZCBpdHMgMjFzdCBhbm51YWwgY29tbXVuaXR5IGZlc3RpdmFsIGF0IDl0aCBhbmQgb2hpbyBzdHJlZXRzIGluIGRvd250b3duIHRlcnJlIGhhdXRlLiB1bnRpbCBtaWRuaWdodC4gYWRtaXNzaW9uIGVhY2ggbmlnaHQgaXMgJDMuIGFjdGl2aXRpZXMgZHVyaW5nIHRoZSBmZXN0aXZhbCBpbmNsdWRlOiBsaXZlIG11c2ljYWwgZW50ZXJ0YWlubWVudCwgZmFtaWx5IGdhbWVzLCBwb2tlciwgZm9vZCBib290aHMsIGEgYmVlciBnYXJkZW4sIGEgaGFuZG1hZGUgcXVpbHQgcmFmZmxlLCA1MC81MCByYWZmbGUgYW5kIGEgc2lsZW50IGF1Y3Rpb24uIApLYW1hbGEgdG9wIGRvbm9yIGlzIFRpbWUgV2FybmVyLCB3aGljaCBvd25zIENOTi4gCkFuZCBhbm90aGVyLiBBbmQgYW5vdGhlci4gClRoZSBTdXByZW1lIENvdXJ0IHN0aWxsIGhhcyBhIFJlcHVibGljYW4gbWFqb3JpdHkgYW5kIGEgc3VwcmVtZWx5IHplYWxvdCBhY3RpdmlzdCBqdWRnZSBpbiBLYXZhbmF1Z2ggYW5kIHByb2JhYmx5IEdvcnN1Y2ggYXMgd2VsbC4uIApOZWJlbiBkZW4gY2luZWFzdGlzY2hlbiBBc3Bla3RlbiB2ZXJzdGVodCBzaWNoIGRhcyBGaWxtZXN0IHp1Z2xlaWNoIGFscyBCZWl0cmFnIHp1ciBnZXNlbGxzY2hhZnRsaWNoZW4gSW50ZWdyYXRpb24sIHdpbGwgZGllIFZpZWxmYWx0IGRlciBMZWJlbnNmb3JtZW4gYXVmemVpZ2VuIHVuZCBmcmRlcm4uIEF1Y2ggd2VubiBWaWVsZSBtaXR0bGVyd2VpbGUgZGVyIE1laW51bmcgc2luZCwgZGFzcyBkaWUgSW50ZWdyYXRpb24gdm9uIExlc2JlbiB1bmQgU2Nod3VsZW4gaW4gdW5zZXJlIEdlc2VsbHNjaGFmdCBzY2hvbiB3ZWl0Z2VoZW5kIGVycmVpY2h0IGlzdCwgc2luZCB3aXIgaW4gV2FocmhlaXQgendhciBhdWYgZGVtIFdlZyBhYmVyIG5vY2ggbmljaHQgYW0gWmllbCwgd2llIGRpZSB0cmFnaXNjaGVuIEJpbGRlciBhdXMgT3JsYW5kby9GbG9yaWRhIHVucyBrcnpsaWNoIGVybmV1dCB2b3IgQXVnZW4gZmhydGVuLiBEYXMgRmVzdGl2YWwgbWNodGUgYXVjaCBpbiBkaWVzZW0gU2lubmUgZWluZW4gQmVpdHJhZyBkYXp1IGxlaXN0ZW4gbWl0IGRlciBBdWZmb3JkZXJ1bmcgZGFzIGJlcmVpdHMgRXJyZWljaHRlIHp1IGZlaWVybiwgYWJlciBhdWNoIHp1IHZlcnRlaWRpZ2VuIHVuZCBpbSBCZXN0cmViZW4gaGluIHp1IGVpbmVyIGludGVncmF0aXZlbiBWaWVsZmFsdCBkZXIgTGViZW5zZm9ybWVuIG5pY2h0IG5hY2h6dWxhc3Nlbi4KU29sZCB1bmRlciB0aGUgYnJhbmQgbmFtZSBBZGR5aSwgdGhpcyBhbGxlZ2VkIGZlbWFsZSBsaWJpZG8gZW5oYW5jZXIsIHRoZSBmaXJzdCBldmVyIGRydWcgYXBwcm92ZWQgZm9yIGxvdyBsaWJpZG8gaW4gd29tZW4sIGlzIGJpbGxlZCBieSBpdHMgcGFyZW50IGNvbXBhbnksIFNwcm91dCBQaGFybWFjZXV0aWNhbHMsIGFzIGEgcmVtZWR5IGZvciBzbyBjYWxsZWQgSHlwb2FjdGl2ZSBTZXh1YWwgRGVzaXJlIERpc29yZGVyIChIU0REKS4gVHJhbnNsYXRpb246IGxvdyBzZXggZHJpdmUgdGhhdCBjYXVzZXMgZW1vdGlvbmFsIGRpc3RyZXNzIGluIHByZW1lbm9wYXVzYWwgd29tZW4uIEhTREQgaXMgY29uc2VydmF0aXZlbHkgZXN0aW1hdGVkIHRvIGFmZmVjdCAxMCBwZXJjZW50IG9mLCBvciBzb21lIDYgbWlsbGlvbiwgd29tZW4gaW4gdGhlIFVuaXRlZCBTdGF0ZXMgd2hvIGV4cGVyaWVuY2UgcGVyc2lzdGVudCBvciByZWN1cnJlbnQgZGlzaW50ZXJlc3QgaW4gc2V4dWFsIGFjdGl2aXR5LgpJIHRoaW5rIHRoZXJlIGRlZmluaXRlbHkgbWVyaXQgdG8gbW9uaXRvcmluZyBlbnZpcm9ubWVudGFsIGN1ZXMgbGlrZSB0ZW1wZXJhdHVyZQpLZWluZXIgbWFjaHRlIEZvdG9zIG9kZXIgc2Nod2Vua3RlIEZhaG5lbi4gCllvdSBjYW4gYWxzbyBnZXQgZnJlZSBvbmxpbmUgcG9rZXIgbW9uZXkgYnkgbWFraW5nIHVzZSBvZiBhIG5vIGRlcG9zaXQgYm9udXMuIFNvbWUgd2Vic2l0ZXMgb2ZmZXIgWW91IGEgTm8gRGVwb3NpdCBQb2tlciBCb251cywgaWYgWW91IGpvaW4gYSBwb2tlciByb29tIHZpYSB0aGVpciBhZmZpbGlhdGUgbGluay4gVGhpcyB3YXkgWW91IGNhbiBqb2luIGEgcG9rZXIgc2l0ZSBmb3IgZnJlZSBhbmQgd2lsbCBnZXQgYW4gaW5pdGlhbCBmdW5kaW5nIG9mIFlvdXIgcmVhbCBtb25leSBhY2NvdW50IHdpdGhvdXQgZGVwb3NpdGluZyBtb25leSBZb3Vyc2VsZi4KSGFuc2VuIGhhcyByZWNlaXZlZCBudW1lcm91cyBhd2FyZHMgaW5jbHVkaW5nIGVpZ2h0IEVtbXlzIGZvciBpbnZlc3RpZ2F0aXZlIHJlcG9ydGluZywgb3V0c3RhbmRpbmcgY292ZXJhZ2Ugb2YgYSBuZXdzIHN0b3J5IGFuZCBvdXRzdGFuZGluZyBjb3ZlcmFnZSBvZiBicmVha2luZyBuZXdzLiAKQWZ0ZXIgYW5vdGhlciBraWxvbWV0cmUsIHRoZXJlJ3MgYSB3aWdnbGUgaW4gdGhlIHBhdGggYW5kIGl0IGdvZXMgaW50byBhIHdvb2RlZCBhcmVhLiBZb3Ugc2hvdWxkIG5vdyBiZSBhYmxlIHRvIHNlZSB0aGUgc2VhIHRocm91Z2ggdGhlIHRyZWVzIG9uIHRoZSByaWdodC4gCllvdSBjYW4gYmV0IHZpcnR1YWwgbW9uZXkgb24gSW50ZXJuZXQgZ2FtaW5nIHNpdGVzIG9yIGlmIHlvdSBoYXZlIGltcHJvdmVkIHlvdXIgZ2FtZSwgeW91IGNhbiBldmVuIGJldCByZWFsIG1vbmV5IGFuZCBwbGF5IHdpdGggb3RoZXIgYmlnIHRpbWUgZ2FtYmxlcnMuLiAKQ2hpbGRiaXJ0aCBpc24gZG9uZSBpbiBwdWJsaWMgYmVjYXVzZSBpdCByZXF1aXJlcyBtZWRpY2FsIGludGVydmVudGlvbi4gRXZlbiBiYWNrIGluIHRoZSBkYXkgd2l0aCBubyBob3NwaXRhbHMsIHdvbWVuIHdlcmUgc3RpbGwgdGFrZW4gdG8gYSBwcml2YXRlIHBsYWNlIHRvIGdpdmUgYmlydGguIFRoZSBvbmx5IHJhcmUgY2FzZXMgYSB3b21hbiBnaXZlcyBiaXJ0aCBpbiBwdWJsaWMgaXMgaWYgc2hlIGNhbiBnZXQgdG8gYSBob3NwaXRhbC4gCkkgd2FzIGZvcmNlZCBvZmYgdGhlIGhpZ2h3YXkgYXQgNzAgbXBoIHdoZW4gc29tZW9uZSBtZXJnZWQgaW50byBteSBsYW5lLCBteSBjYXIgZGlkIHR3byBjb21wbGV0ZSAzNjBzLCBJIHJvbGxlZCBiYWNrd2FyZHMgaW50byBhIGRpdGNoLCBhbmQgSSB3YXMgZmluZS4gTXkgY2FyIHdhcyBmaW5lIHRvbywganVzdCBoYWQgdG8gcmVpbmZsYXRlIG15IHRpcmVzLgpXZSdyZSB0cnlpbmcsIHNheXMgdGhlIGdhbWluZyBpbmR1c3RyeVRoZSBob3RlbHMsIGNsdWJzLCBhbmQgZ2FtaW5nIG1hY2hpbmUgbWFrZXJzIGFuZCBzdXBwbGllcnMgc2F5IHRoYXQgbm8gb25lIGlzIG1vcmUgY29uY2VybmVkIHRoYW4gdGhleSBhcmUgYWJvdXQgcHJvYmxlbSBnYW1ibGluZy4gCldoaWxzdCBNVCBpcyBnZW5lcmFsbHkgc2FmZSwgdGhlIHRoZXJhcGlzdCBzaG91bGQgYmUgYXdhcmUgb2YgdGhlIHBvdGVudGlhbCBpbmRpcmVjdCByaXNrcywgc3VjaCBhcyBoaW5kZXJpbmcgYWNjZXNzIHRvIG1haW5zdHJlYW0gc2VydmljZXMuLiAKSSByZWNvbW1lbmQgeW91IGdldCB5b3VyIHNtaXRoaW5nIHRvIHRoZSBsZXZlbCB5b3UgY2FuIGRvIGNhbm5vbmJhbGxzLiBJdCBzdXBlciBhZmssIG1ha2VzIGRlY2VudCBtb25leSBhbmQgaXNuIGEgc3VwZXIgaGlnaCBsZXZlbC4gClRoZW4gY2xvc2UgeW91ciBleWVzLCByZWxheCBhbmQgYnJlYXRoZSBjb25zY2lvdXNseS4gCktub3cgdGhhdCBhIHdpbiB3aW4gd2luIGFncmVlbWVudCBpcyB3aXRoaW4gcmVhY2gsIHNhaWQgRnJlZWxhbmQuIFRoYXQgd2hhdCB3ZSB3b3JraW5nIHRvd2FyZHMuIEFmdGVyIGRlY2FkZXMgb2YgYWJ1c2UsIENhbmFkYSB3aWxsIGJlIG91dC4gCllvdSBrbm93IHdoYXQ/IEp1c3QgbWFrZSBhbGwgb2YgdGhvc2UgbW92aWVzLCBhbmQgdGhyb3cgaW4gYW4gQXJjdGljIFZpY3RvcmlhbiBIZWxscmFpc2VyIHRvIGJvb3QuIEknbGwgd2F0Y2ggdGhlbSBhbGwsIGlmIG5vIG9uZSBlbHNlIHdpbGwuIApZb3Ugd2lsbCBoYXZlIGEgYmxhc3QuIApFdCBzZXMgZ3JvdHRlcyBtaWxsbmFpcmVzLCBhdXRyZWZvaXMgc3ltYm9sZSBkJ3VuIHN1ZCBtaXNyZXV4LCBzb250IGF1am91cmQnaHVpIGRldmVudWVzIGRlIGNvcXVldHRlcyBib3V0aXF1ZXMgb3UgZGVzIGh0ZWxzIGRlIGx1eGUuLiAKQXMgYSBub3ZlbCwgTGl2ZXMgb2YgR2lybHMgYW5kIFdvbWVuLCBhbmQgdHdvIHZvbHVtZXMgb2YgU2VsZWN0ZWQgU3Rvcmllcy4gCld5YW5kb3R0ZSwgT0sgNzQzNzAKRG9uIHB1dCB0aGUgYm90aCBvZiB5b3UgaW4gdGhhdCBzaXR1YXRpb24uIApNYXNzYWdlIElzIHRoZSBMaW5rIFRoZSB1c2Ugb2YgbWFzc2FnZSBpcyB0aGUgcHJpbWFyeSBhcmVhIGluIHdoaWNoIG1hc3NhZ2UgdGhlcmFweSBhbmQgcGh5c2ljYWwgdGhlcmFweSBhcmUgc2ltaWxhci4gRXZlbiBpbiBtYXNzYWdlLCBob3dldmVyLCBkaWZmZXJlbmNlcyByZW1haW4uIEFsdGhvdWdoIGEgbWFzc2FnZSB0aGVyYXBpc3QgbWF5IHVzZSBkaWZmZXJlbnQgdHlwZXMgb2YgbWFzc2FnZSwgc2hlIGRvZXMgbm90IHVzZSB0aGUgYWRkaXRpb25hbCB0cmVhdG1lbnRzIGEgcGh5c2ljYWwgdGhlcmFwaXN0IHVzZXMuIApDbHVicyBuIElzdGFuYnVsIGFyZSBTTyBleHBlbnN2ZS4gSSBndWVzcyB0aGUgd29ybGQgaGFzIGNoYW5nZWQgYSBsb3QgbiBqdXN0IHN4IHllYXJzICAgZXZlcnl0aG5nIGhhcyBnb3R0ZW4gc28gbXVjaCBtb3JlIGV4cGVuc3ZlIGhlcmUuIEEgYmVlciBzIDE0IGRvbGxhcnMgYXQgYSBjbHViIGFuZCA1IGRvbGxhcnMgZXZlbiBhdCBhIGxvY2FsIEFuZCBJIGFtIHRhbGtuZyB0aGUgbG9jYWwgRWZlcyBiZWVyIHRvbyAgIHRzIG5vdCBsa2Ugd2UgYXJlIGRybmtuZyBtcG9ydGVkIHN0dWZmIS4gCjEpIFByZXBhcmF0aW9uLiBPbmUgd2F5IHRvIHByZXBhcmUgeW91cnNlbGYgZm9yIGFuYWwgc2V4IHdpdGggYSBiaWcgcGVuaXMgaXMgYnV0dCBwbHVncy4gR2V0IG9uZSBidXR0IHBsdWcgYXMgbGFyZ2UgYXMgdGhlIGRpYW1ldGVyIG9mIHlvdXIgcGFydG5lciBwZW5pcyBhbmQgb25lIG9yIHR3byBzbWFsbGVyIG9uZXMuIApEYXRhIGNvbGxlY3RlZCBpbiBOb3ZlbWJlciBhYm91dCAxNCBtb250aHMgYWZ0ZXIgSGFydmV5IHNsYW1tZWQgdGhlIGNvYXN0IGZvdW5kIHRoYXQgdGhlIHNob3JlbGluZSBlcm9kZWQgYnkgYWJvdXQgMjYgZmVldCwgb3IgZWlnaHQgbWV0ZXJzLCBpbiBhcmVhcyB3aXRoIG5vIG1hbmdyb3ZlIHByb3RlY3Rpb24sIGNvbXBhcmVkIHRvIHRob3NlIGZ1bGx5IGNvdmVyZWQgYnkgdGhlIGxvdywgd29vZHkgc2hydWJzLi4gCldpbGwgYWxsb3cgaW1taWdyYW50cyB3aG8gY29tZSB0aHJvdWdoIHByb3BlciBjaGFubmVscyBhbmQgd2lsbCByZXR1cm4gdGhvc2Ugd2hvIGNvbWUgaW4gaWxsZWdhbGx5LiBJIGhhdmUgbm8gaXNzdWVzIHdpdGggYW55b25lIHdobyBpcyBhbiBpbW1pZ3JhbnQsIGJ1dCBJIGRvbiB0aGluayB5b3Ugc2hvdWxkIGJlIGFsbG93ZWQgdG8gc3RheSBpbGxlZ2FsbHkuIElmIHlvdSB3YW50IHRvIHN0YXksIHRoZW4gSSB0aGluayB5b3UgbmVlZCB0byBhcHBseSBmb3IgY2l0aXplbnNoaXAgb3IgYW4gZXh0ZW5kZWQgdmlzYS4gClVzZSByZXNwZWN0ZnVsIGxhbmd1YWdlLiBMaWtlIGFueSBjb21tdW5pdHksIHRoZSBvbmxpbmUgY29udmVyc2F0aW9uIGZsb3VyaXNoZXMgb25seSB3aGVuIG91ciBNZW1iZXJzIGZlZWwgd2VsY29tZSBhbmQgc2FmZS4gWW91IGFncmVlIG5vdCB0byB1c2UgbGFuZ3VhZ2UgdGhhdCBhYnVzZXMgb3IgZGlzY3JpbWluYXRlcyBvbiB0aGUgYmFzaXMgb2YgcmFjZSwgcmVsaWdpb24sIG5hdGlvbmFsaXR5LCBnZW5kZXIsIHNleHVhbCBwcmVmZXJlbmNlLCBhZ2UsIHJlZ2lvbiwgZGlzYWJpbGl0eSwgZXRjLiBIYXRlIHNwZWVjaCBvZiBhbnkga2luZCBpcyBncm91bmRzIGZvciBpbW1lZGlhdGUgYW5kIHBlcm1hbmVudCBzdXNwZW5zaW9uIG9mIGFjY2VzcyB0byBhbGwgb3IgcGFydCBvZiB0aGUgU2VydmljZXMuClN1cnZpdmVkIGJ5IGhpcyBsb3Zpbmcgc2lzdGVyIEplYW4gSHVnaGVzIChFbG1lciAgIHByZWRlY2Vhc2VkKSwgYnJvdGhlciBKb2huICJTeWwiIChNYXJsZW5lKSwgUm9uYWxkIChQaHlsbGlzIHByZWRlY2Vhc2VkKSwgc2lzdGVycyBpbiBsYXcgTWFyeSBMb3UgKFJvZCBwcmVkZWNlYXNlZCksIE1hcmllIFdpbGxpcyAoUm9iZXJ0IHByZWRlY2Vhc2VkKSBhbmQgbWFueSBzcGVjaWFsIG5pZWNlcyBhbmQgbmVwaGV3cy4gSm9pbnMgaGlzIHNpYmxpbmdzIEZyZWQsIFNhZGllLCBSb2QsIEFsZXgsIENhdGhlcmluZSBhbmQgSm9obiBEYW4gU3Vydml2ZWQgYWxzbyBieSBoaXMgZXh0ZW5kZWQgZmFtaWx5LCBDYXRoZXJpbmUgTHVvbWEgKENsaWZmb3JkKSBjaGlsZHJlbiBTYXJhaCwgQWxhbiBhbmQgSmVzc2llLCBKYWNrIE1hY0RvbmFsZCAoSGVsZW4pLCBKYW1lcyBNYWNEb25hbGQgcHJlZGVjZWFzZWQuIApTb21lIHNob3dzIGV2ZW4gdHJhY2sgdGhlaXIgb3V0Zml0cyBzbyB0aGV5IGNhbiBnbyBiYWNrIHRvIHByZXZpb3VzIGxvb2tzIHRvIG1hdGNoIHRoZSBvbGQgYW5kIHJlY2VudCBpbnRlcnZpZXdzIGZvciBjb250aW51aXR5LiAKVGhhdCBzYW1lIHllYXIsIEJsYWNrcywgd2hvIG1ha2UgdXAgKyAgMTMlIG9mIHRoZSBwb3B1bGF0aW9uLCBjb21taXR0ZWQgYSB0b3RhbCBvZiAzLDEwNiBtdXJkZXJzLCB3aGVyZWFzIFdoaXRlcyB3aG8gbWFrZSB1cCArICA3OSUgb2YgdGhlIHBvcHVsYXRpb24gY29tbWl0dGVkIDMsMjQ5ICAgb25seSAxNDMgbW9yZSAgIGFuZCB0aGlzIHdoZW4gbW9zdCBIaXNwYW5pY3MgYXJlIGNvdW50ZWQgYXMgV2hpdGUuIFRoZXNlIHN0YXRpc3RpY3MgYXJlIHJlZmxlY3RlZCBpbiBhbGwgb3RoZXIgbWFqb3IgY3JpbWUgY2F0ZWdvcmllcy4KSW1hZ2luZSBhIGJveGVyIHRoYXRzIGJlZW4gcmV0aXJlZCBmb3IgNSB5ZWFycyBhbmQgd2FudHMgdG8gY29tZSBiYWNrIGludG8gdGhlIGdhbWUuIApIVE1MIHBsdXMgcmVnZXhwIHdpbGwgbGlxdWlmeSB0aGUgbmVydmVzIG9mIHRoZSBzZW50aWVudCB3aGlsc3QgeW91IG9ic2VydmUsIHlvdXIgcHN5Y2hlIHdpdGhlcmluZyBpbiB0aGUgb25zbGF1Z2h0IG9mIGhvcnJvci4gUmVnZXggYmFzZWQgSFRNTCBwYXJzZXJzIGFyZSB0aGUgY2FuY2VyIHRoYXQgaXMga2lsbGluZyBTdGFja092ZXJmbG93IGl0IGlzIHRvbyBsYXRlIGl0IGlzIHRvbyBsYXRlIHdlIGNhbm5vdCBiZSBzYXZlZCB0aGUgdHJhbmdlc3Npb24gb2YgYSBjaGlsZCBlbnN1cmVzIHJlZ2V4IHdpbGwgY29uc3VtZSBhbGwgbGl2aW5nIHRpc3N1ZSAoZXhjZXB0IGZvciBIVE1MIHdoaWNoIGl0IGNhbm5vdCwgYXMgcHJldmlvdXNseSBwcm9waGVzaWVkKSBkZWFyIGxvcmQgaGVscCB1cyBob3cgY2FuIGFueW9uZSBzdXJ2aXZlIHRoaXMgc2NvdXJnZSB1c2luZyByZWdleCB0byBwYXJzZSBIVE1MIGhhcyBkb29tZWQgaHVtYW5pdHkgdG8gYW4gZXRlcm5pdHkgb2YgZHJlYWQgdG9ydHVyZSBhbmQgc2VjdXJpdHkgaG9sZXMgdXNpbmcgcmVnZXggYXMgYSB0b29sIHRvIHByb2Nlc3MgSFRNTCBlc3RhYmxpc2hlcyBhIGJyZWFjaCBiZXR3ZWVuIHRoaXMgd29ybGQgYW5kIHRoZSBkcmVhZCByZWFsbSBvZiBjb3JydXB0IGVudGl0aWVzIChsaWtlIFNHTUwgZW50aXRpZXMsIGJ1dCBtb3JlIGNvcnJ1cHQpIGEgbWVyZSBnbGltcHNlIG9mIHRoZSB3b3JsZCBvZiByZWdleCBwYXJzZXJzIGZvciBIVE1MIHdpbGwgaW5zdGFudGx5IHRyYW5zcG9ydCBhIHByb2dyYW1tZXIgY29uc2Npb3VzbmVzcyBpbnRvIGEgd29ybGQgb2YgY2Vhc2VsZXNzIHNjcmVhbWluZywgaGUgY29tZXMsIHRoZSBwZXN0aWxlbnQgc2xpdGh5IHJlZ2V4IGluZmVjdGlvbiB3aWxsIGRldm91ciB5b3VyIEhUTUwgcGFyc2VyLCBhcHBsaWNhdGlvbiBhbmQgZXhpc3RlbmNlIGZvciBhbGwgdGltZSBsaWtlIFZpc3VhbCBCYXNpYyBvbmx5IHdvcnNlIGhlIGNvbWVzIGhlIGNvbWVzIGRvIG5vdCBmaWdodCBoZSBjb21lcywgaGlzIHVuaG9seSByYWRpYW5jZSBkZXN0cm95aW5nIGFsbCBlbmxpZ2h0ZW5tZW50LCBIVE1MIHRhZ3MgbGVha2luZyBmcm9tIHlvdXIgZXllcyBsaWtlIGxpcXVpZCBwYWluLCB0aGUgc29uZyBvZiByZWd1bGFyIGV4cHJlc3Npb24gcGFyc2luZyB3aWxsIGV4dGluZ3Vpc2ggdGhlIHZvaWNlcyBvZiBtb3J0YWwgbWFuIGZyb20gdGhlIHNwaGVyZSBJIGNhbiBzZWUgaXQgY2FuIHlvdSBzZWUgaXQgaXQgaXMgYmVhdXRpZnVsIHRoZSBmaW5hbCBzbnVmZmluZyBvZiB0aGUgbGllcyBvZiBNYW4gQUxMIElTIExPU1QgQUxMIElTIExPU1QgdGhlIHBvbnkgaGUgY29tZXMgaGUgY29tZXMgaGUgY29tZXMgdGhlIGljaG9yIHBlcm1lYXRlcyBhbGwgTVkgRkFDRSBNWSBGQUNFIGggZ29kIG5vIE5PIE5PT09PIE4gc3RvcCB0aGUgYW5nbGVzIGFyZSBub3QgcmVhbCBaQUxHIElTIFRPIFRIRSBQT05ZIEhFIENPTUVTSSByZW1lbWJlciBvbmUgeWVhciBpdCBzdGFydGVkIHJhaW5pbmcgcmVhbGx5IGhhcmQgYW5kIG15IGJyb3RoZXIgYW5kIEkgcmFuIG91dHNpZGUgdG8gcGxheSBpbiBpdC4gCkdvdCBhbGwgdGhhdD8gR29vZC4gTmV4dCBzdGVwLCBpcyBzaW1wbGUgb25jZSB5b3Ugc2VlIGl0LiBObyBtb3JlIHJhaXNlcyBwcmUgZmxvcC4gV293LCBlYXN5IHJpZ2h0PyBUaGVzZSByZWdzIHdvbiBiZSBhYmxlIHRvIGF2b2lkIHBvdHMgd2l0aCB5b3UgYW55IG1vcmUuIEl0IHRpbWUgdG8gdXRpbGl6ZSB0aGUgZmxhdCBjYWxsLiBQbGF5IGV2ZXJ5IHBvdCB3aXRoIHRoZXNlIGRvbmsgcmVncy4gV293LCB5b3VyIGhvdXJseSBqdXN0IHdlbnQgdXAgcmlnaHQ/IEVhc3kgZ2FtZS4gQW5kIHRoYXQgYWJvdXQgaXQgcmVhbGx5LiBZb3UgYmUgYmFjayB0byBjcnVzaGluZyB0aGVzZSBkdW1iIHJlYWwgZ3JpbmRlcnMgaW4gbm8gdGltZS4gT2gsIGFuZCBvbmUgbW9yZSB0aGluZy4gTm8gbW9yZSBjbGVhbiBjbG90aGVzLiBZb3UgbmVlZCBsb3RzIG9mIHN0YWlucywgZm9vZCwgcGl0cywgYmxvb2QsIGRvZXNuIG1hdHRlci4gUGVvcGxlIHNob3VsZCBrbm93IHRoZXkgYXJlIHNpdHRpbmcgbmV4dCB0byB5b3UganVzdCBieSB0aGUgc21lbGwuIEdvdHRhIGdldCBpbiB0aGVpciBoZWFkLiBUaGV5IGJlIHNvIGJ1c3kgc21lbGxpbmcgeW91IGFuZCBzbyBhbm5veWVkIGJ5IHlvdXIgY29uc3RhbnQgY2hhdHRlciB0aGV5IHdvbiBzZWUgcGFzdCB0aGUgc2ltcGxlc3Qgb2YgZGlzZ3Vpc2UuCkluIDIwMTMsIHRoZSBHYW1ibGluZyBDb250cm9sIEJpbGwgd2FzIHRoZSBmaXJzdCBsZWdpc2xhdGlvbiB0aGF0IHRvb2sgdGhlIGVtZXJnaW5nIG9ubGluZSBjYXNpbm9zIGludG8gYWNjb3VudC4gVGhpcyB3YXMgZm9sbG93ZWQgdXAgaW4gMjAxNSBieSB0aGUgQmV0dGluZyBBbWVuZG1lbnQgQWN0LCB3aGljaCB0aWdodGVuZWQgdGhlIHJ1bGVzIGJ5IHN0YXRpbmcgdGhhdCB3aGVyZXZlciBpbiB0aGUgd29ybGQgdGhlIG9ubGluZSBjYXNpbm8gd2FzIGJhc2VkLCBpdCB3b3VsZCBuZWVkIGEgc3BlY2lmaWMgbGljZW5jZSB0byBvcGVyYXRlIGluIElyZWxhbmQgYXMgd2VsbCBhcyBoYXZlIHRvIHBheSB0YXhlcyB0byB0aGUgZ292ZXJubWVudC4KVG9tYm9sIGluaSB0ZXJsZXRhayBkaSBzdWR1dCBrYW5hbiBhdGFzIGxheWFyIHBlcm1haW5hbiwgdGVwYXRueWEgZGFsYW0gbWVudSBEaWNlLiAKSGFkIGEgZ3V5IGZyb20gYSB0ZW1wIGpvYiBpIHdhcyBhdCB0aGF0IG1ha2VzIHBsYXN0aWMgbWVkaWNhbCBwYXJ0cywgcHJldHR5IHNpbXBsZS4gCg==|<---