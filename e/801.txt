--->|RG9lcyB0aGF0IG1lYW4gdGhhdCB0aGUgZ2FtZSBpcyBub3QgY29tcGxldGVseSBmYWlyPyBEb2VzIGl0IG1lYW4gdGhhdCB5b3Ugd2lsbCBiZSBjaGVhdGVkIG91dCBvZiB5b3VyIG1vbmV5PyBZb3UgbXVzdCBrbm93IHRoYXQgdGhlIGdhbWUgaXMgY29udHJvbGxlZCBieSBhbiBSTkcgb3IgUmFuZG9tIE51bWJlciBHZW5lcmF0b3IuIApJIHRoaW5rIHRoZSBzdG9yeSBvdmVyYWxsIG1ha2VzIHNvIG11Y2ggbW9yZSBzZW5zZSBoYXZpbmcgdGhlbSB5b3VuZ2VyICAgbm90IG9ubHkgZm9yIHRlZXRoIHB1bGxpbmcvbXVyZGVyaW5nIHJlYXNvbnMsIGJ1dCB3aHkgdGhlIG9sZGVyIGdpcmxzIHdlcmUgYWJsZSB0byBjb2VyY2UvbHVyZSB0aGVtIGF3YXkuIApNb3N0IG9mIHVzIGxvdmVkIGhpcyBtb3ZpZXMsIGJ1dCBub25lIG9mIHVzIGxvdmVkIGhpbSBsaWtlIHRoZSBmYW1pbHkgbWVtYmVycyB3aG8gd2lsbCBuZXZlciBnZXQgdG8gc2VlIGhpbSBhZ2Fpbi4gV2F0Y2hpbmcgaG93IHN0cm9uZyBteSBmYXRoZXIgYmVlbiBhcyBoaXMgUGFya2luc29uIGhhcyBwcm9ncmVzc2VkIGlzIG9uZSBvZiB0aGUgbW9zdCBhbWF6aW5nIHRoaW5ncyBhYm91dCBoaW0uIEkga25vdyB0aGF0IGlmIG15IGZhdGhlciBoYWQgdGFrZW4gaGlzIGxpZmUgYmVjYXVzZSBvZiBoaXMgZGlzb3JkZXIgdGhlbiBJIHdvdWxkIGhvbGQgYSBncnVkZ2UgYWdhaW5zdCBoaW0uIApGb3IgYSBwb2tlciBwbGF5ZXIsIGhpcyBwb2tlciBjYXJkcyBhcmUgdGhlIG1vc3QgZmF2b3JpdGUgcGllY2VzIGFuZCBoZSB3YW50cyB0byBzYXZlIGl0LiBUaGF0J3Mgd2h5IGhlIGlzIGxvb2tpbmcgZm9yd2FyZCB0byBwb2tlciBjb2xsZWN0aWJsZXMgdGhhdCBjYW4gcmVhbGx5IGhlbHAgaW4gc2F2aW5nIHRoZSBjYXJkcy4gSGUgaGFzIHRoZSBjb21tb24gd2F5IHRvIG1ha2UgbW9uZXkgcGxheWluZyB0aGUgY2FzaW5vIGdhbWVzIGFyb3VuZC4gCkhlciB3aWRlIGJyaW1tZWQgaGF0IChkZXNpZ25lZCBhbmQgbWFkZSBieSBQaGlsaXAgVHJlYWN5KSwgd2FzIG1hZGUgb2YgbmF0dXJhbCBzdHJhdywgY292ZXJlZCBpbiBGcmVuY2ggbGFjZSwgYW5kIHRyaW1tZWQgd2l0aCBvc3RyaWNoIGZlYXRoZXJzLi4gCkZyZWUgcGFya2luZyBpcyBhdmFpbGFibGUganVzdCBhIHNob3J0IHdhbGsgYXdheSBhdCBEb2NrIDUyIG9uIEZpamkgV2F5LiAKWk0gaG9zdCBNZWdhbiBQYXBhcyBzaGFyZWQgYSBwb3dlcmZ1bCBtZXNzYWdlIHRoaXMgbW9ybmluZywgYXMgdGhlIG5ldHdvcmsgY2VsZWJyYXRlZCBJbnRlcm5hdGlvbmFsIFdvbWVuJ3MgRGF5IHdpdGggYSBzcGVjaWFsIGFsbCBmZW1hbGUgYnJlYWtmYXN0IHNob3cuCjE3LiBCb3RoIG4gMyBmYXR0eSBhY2lkcyBhbmQgZXhlcmNpc2UgaW5jcmVhc2Ugb3h5Z2VuIGRlbGl2ZXJ5IHRvIHRoZSBoZWFydCBtdXNjbGUgInNvIHRoYXQgdGhlIGhlYXJ0IGRvZXMgbm90IGhhdmUgdG8gd29yayBhcyBoYXJkIHRvIGdldCB0aGUgb3h5Z2VuIGl0IG5lZWRzIGZvciB3b3JrLiIKSGUgYXBwcm9hY2hlZCB0aGUgY291bnRlciBhbmQgd2FpdGVkIGZvciB0aGUgY2xlcmsuIFRoZXJlIHdhcyBub25lIGluIHNpZ2h0LiAKIlRoYXQgaG9tZS4gVGhhdCB1cy4gT24gaXQgZXZlcnlvbmUgeW91IGxvdmUsIGV2ZXJ5b25lIHlvdSBrbm93LCBldmVyeW9uZSB5b3UgZXZlciBoZWFyZCBvZiwgZXZlcnkgaHVtYW4gYmVpbmcgd2hvIGV2ZXIgd2FzLCBsaXZlZCBvdXQgdGhlaXIgbGl2ZXMuIFRoZSBhZ2dyZWdhdGUgb2Ygb3VyIGpveSBhbmQgc3VmZmVyaW5nLCB0aG91c2FuZHMgb2YgY29uZmlkZW50IHJlbGlnaW9ucywgaWRlb2xvZ2llcywgYW5kIGVjb25vbWljIGRvY3RyaW5lcywgZXZlcnkgaHVudGVyIGFuZCBmb3JhZ2VyLCBldmVyeSBoZXJvIGFuZCBjb3dhcmQsIGV2ZXJ5IGNyZWF0b3IgYW5kIGRlc3Ryb3llciBvZiBjaXZpbGl6YXRpb24sIGV2ZXJ5IGtpbmcgYW5kIHBlYXNhbnQsIGV2ZXJ5IHlvdW5nIGNvdXBsZSBpbiBsb3ZlLCBldmVyeSBtb3RoZXIgYW5kIGZhdGhlciwgaG9wZWZ1bCBjaGlsZCwgaW52ZW50b3IgYW5kIGV4cGxvcmVyLCBldmVyeSB0ZWFjaGVyIG9mIG1vcmFscywgZXZlcnkgY29ycnVwdCBwb2xpdGljaWFuLCBldmVyeSAic3VwZXJzdGFyLCIgZXZlcnkgInN1cHJlbWUgbGVhZGVyLCIgZXZlcnkgc2FpbnQgYW5kIHNpbm5lciBpbiB0aGUgaGlzdG9yeSBvZiBvdXIgc3BlY2llcyBsaXZlZCB0aGVyZSBvbiBhIG1vdGUgb2YgZHVzdCBzdXNwZW5kZWQgaW4gYSBzdW5iZWFtIgpUaGUgYmFua2VyIHdpbGwgZGlzdHJpYnV0ZSBvbmUgbW9yZSBjYXJkLCBhbmQgdGhlIHNhbWUgcHJvY2VzcyBzdGFydHMgYWxsIG92ZXIgYWdhaW4uIApJIGhhdmUgNSBjb25nZW5pdGFsIGhlYXJ0IGRlZmVjdHMuIFVwIHVudGlsIGkgd2FzIGFib3V0IDIwIEkgd2FzIHN1cGVyIHNraW5ueS4gSSBsb29rIGF0IG9sZCBwaG90b3MgaGF2ZSBubyBpZGVhIGhvdyBJIGRpZG4ndCBicmVhayBteSBsZWdzIGJ5IGp1c3Qgd2Fsa2luZy4gSSB3YXMgcGFsZS4gQW5kIHNoZSBzYXcgbWUgZ28gdG8gdGhlIHJlc3Ryb29tIGEgbG90LiBCZWNhdXNlIGl0IHdhcyBuZWFyIG15IGxvY2tlciBhbmQgYWNyb3NzIGZyb20gaGVyIGNsYXNzcm9vbS4KSSBkb24gd2VhciBzdW5zY3JlZW4gYmVjYXVzZSBhbnkgcHJvZHVjdHMgSSBwdXQgYXJvdW5kIG15IGV5ZXMgbWFrZSB0aGVtIHdhdGVyIG5vbnN0b3AuLiAKQXMgc3VjaCwgbXVjaCByZWNlbnQgcmVzZWFyY2ggaW50byBhdXRpc20gaGFzIGZvY3VzZWQgb24gdHJhY2tpbmcgZG93biB0aGUgZ2VuZXMgYW5kIHVubG9ja2luZyB0aGUgY29tcGxleCBnZW5ldGljIGNvZGVzIHRoYXQgYXJlIGFzc29jaWF0ZWQgd2l0aCBhdXRpc20ubm90IHRyeWluZyB0byBzYXkgdGhlcmUgaXNuIGEgZ2VuZXRpYyBjb21wb25lbnQgcXVpdGUgdGhlIG9wcG9zaXRlLiAKVGhlIGNvdXNpbiB0cmllZCBjb250YWN0aW5nIG15IGdyZWF0IHVuY2xlLCBidXQgaGUgZGlkbid0IHdhbnQgYSByZWxhdGlvbnNoaXAgd2l0aCBoaW0gYXQgYWxsICB0aGUgcmVzcG9uc2VzIHdlcmUgbm90IHN0cmFpZ2h0IHVwIGRlbmlhbHMgb2YgYmVpbmcgaGlzIGZhdGhlciwgaXQgd2FzIGxpa2UgImdvb2QgbHVjayB3aXRoIHRoZSBkaXNlYXNlLiBEb24ndCBjb250YWN0IG1lIGFnYWluLiAKSW4gMjAxNywgTWFycyBhaXJlZCBvbmUgY29tbWVyY2lhbCBmb3IgU2tpdHRsZXMsIGl0cyB0aGlyZCBjb25zZWN1dGl2ZSBiaWcgZ2FtZSBhZCBmb3IgdGhlIGNhbmR5LiAKU3BlY2lhbCB0aGFua3MgZ28gdG8gU25vd21hc3MgUm90YXJpYW5zIE1hcnRoYSBPIGFuZCBSYW5keSBXb29kcyBmb3IgdGhlaXIgaGFyZCB3b3JrIHRvIG1ha2UgdGhpcyBmdW5kcmFpc2VyIGEgc3VjY2Vzcy4gV2UgYWxzbyB0aGFuayB0aGUgY291bnRsZXNzIHBva2VyIHBsYXllcnMgd2hvIGNvbnRyaWJ1dGVkIHRvIG91ciBmdW5kcyB0aHJvdWdoIHRpY2tldCBwdXJjaGFzZXMsIGFuZCBudW1lcm91cyBsb2NhbCBidXNpbmVzc2VzIHdobyBkb25hdGVkIHJhZmZsZSBpdGVtcy4gT3VyIGNsdWIgYXBwcmVjaWF0ZXMgYW55IGFuZCBhbGwgc3VwcG9ydCBmb3Igb3VyIGZ1bmRyYWlzaW5nIGVmZm9ydHMgeW91IHVsdGltYXRlbHkgYXJlIGhlbHBpbmcgdXMgdG8gaGVscCBvdGhlcnMuLiAKTGlua3MgdG8gdGhlIGxhdGVzdCBuZXdzIGluIHRoZSB3b3JsZCBvZiBwaGFybWFjeSB3aXRoIGEgZm9jdXMgb24gaXRlbXMgbW9zdCByZWxldmFudCB0byBDYW5hZGlhbiBQZXJjb2NldCAzMHMgcGxhY2Vib3MgcGhhcm1hY2lzdHMgb3Igb3RoZXJzIHRoYXQgYXJlIGludGVyZXN0ZWQgaW4gLgpPbmNlIHlvdSBzdGFydCBkZXZlbG9waW5nIHRoZSBhY3R1YWwgZ2FtZSwgaXQgd2lsbCBtYWtlIHRoaW5ncyBtdWNoIGVhc2llciBmb3IgeW91Li4gCkluIHRoZSA2N3RoIG1pbnV0ZSwgRGllZ28gRmFndW5kZXogZ290IHRoZSBiYWxsIGZyb20gVGVhbCBCdW5idXJ5IGluIGJveCwgdG9vayBvbiB0aHJlZSBkZWZlbmRlcnMsIGFuZCB0aGVuIGZpcmVkIGEgbG93IGRyaXZlIHRoYXQgcm9sbGVkIGp1c3Qgd2lkZSBvZiB0aGUgZmFyIHBvc3QuLiAKTm93IGxldHMgd3JhcCBpdCB1cC4gTWFzcyBib21iaW5ncywgYnVyZ2xhcmllcywgcmFwZXMsIG11cmRlcnMsIGRlYXRoIHRvbGwgaW4gdGhlIG1pbGxpb25zLCBtYWltZWQgYW5kIGluanVyZWQgaW4gdGhlIHRlbnMgb2YgbWlsbGlvbnMsIHBzeWNob2xvZ2ljYWxseSBkYW1hZ2VkIGluIHRoZSBodW5kcmVkcyBvZiBtaWxsaW9ucywgcHJvcGVydHkgbG9zc2VzIGFuZCBkYW1hZ2VzIGluIHRoZSB0cmlsbGlvbnMsIHRoZSBsb3NzZXMgb2Ygc2tpbGxlZCB0cmFkZXNtZW4gYW5kIGV4cGVyaWVuY2VkIHByb2Zlc3Npb25hbHMgYW5kIGZhbWlsaWVzIGFyZSBpbmNhbGN1bGFibGUuIFdhcmxvcmRzIGFuZCBmYWN0aW9ucyBzcHJpbmcgdXAgb3Zlcm5pZ2h0LiAKWW91IGFjdHVhbGx5IGhhdmUgdG8gc3RhcnQgZXV0aGFuaXppbmcgbWVuIHRvbyBpZiB5b3UgYWJvcnRlZCAxNC8xNSBvZiBwZW5pcyBoYXZpbmcgZmV0dXNlcy4gU2luY2UgbWVuIGhhdmUgYSA4MCB5ZWFyIGxpdmUgZXhwZWN0YW5jeSBhbmQgd29tZW4gd291bGQgbm93IGJlIGF0IDE4LCB0aGUgZ2VuZGVyIHJhdGlvIHdvdWxkIGFkanVzdCBpdHNlbGYgdG8gY2xvc2VyIHRvIDEvNCBtZW4vd29tZW4gb3ZlciB0aW1lLiBMZXQgbWUgZXhwbGFpbjoKVGhlIHJlcG9ydGVkIGNhc2VzIG9mIEx5bWUgcGVyIHllYXIgaXMgYWJvdXQgMzAsMDAwLiAKTm93IHlvdSBtaWdodCBiZSBwYXlpbmcgJDMwSyBsZXNzIGluIHRheCBmb3IgdGhlIHllYXIgYmVjYXVzZSB5b3UgZ2F2ZSBhd2F5IHNvbWV0aGluZyB3b3J0aCAkMUsuIApTb21laG93IGhlciB0ZWxsaW5nIG1lIHRoZXJlIHdlcmUgbm8gZXhwZWN0YXRpb25zIHRvIGVhdCBoZWFsdGh5IG1hZGUgbWUgZmVlbCBhIHdvcmxkIGJldHRlci4gCiJMb2NhbCBjb21tdW5pdHkgY2FwcyBhcmUgYW4gYXBwcm9wcmlhdGUgcmVzcG9uc2UgdG8gY29uY2VybnMgdGhhdCBzb21lIGFyZWFzIGhhdmUgdG9vIG1hbnkgZ2FtaW5nIG1hY2hpbmVzLCJNaW5pc3RlciBmb3IgUmFjaW5nIGFuZCBCYXRodXJzdCBNUCBQYXVsIFRvb2xlIHNhaWQuICJUaGVzZSBhcmVhcyB3aWxsIGJlIGNhcHBlZCBhdCB0aGVpciBjdXJyZW50IG51bWJlciwgZW5zdXJpbmcgbm8gYWRkaXRpb25hbCBtYWNoaW5lcyBjYW4gbW92ZSBpbnRvIHRoZXNlIGFyZWFzLiIgT3RoZXIgYXJlYXMgYWNyb3NzIHRoZSBDZW50cmFsIFdlc3QgY29uc2lkZXJlZCBoaWdoIHJpc2sgYXJlTGl0aGdvdywgQ293cmEgYW5kIFdlbGxpbmd0b24uIApJJ20gc3VyZSBJJ2QgaGF2ZSBsb29rZWQgbGlrZSBhIGhlYXJ0bGVzcyBiaXRjaCB0byBvdXRzaWRlcnMuIApDaGlyb3ByYWN0aWMuIERldmVsb3BlZCBpbiB0aGUgMTl0aCBjZW50dXJ5LCBjaGlyb3ByYWN0aWMgaXMgYmFzZWQgb24gdGhlIGlkZWEgdGhhdCBuZXJ2ZSBlbmVyZ3kgZmxvd3MgdGhyb3VnaCB0aGUgc3BpbmFsIGNvbHVtbi4gVGhlIGVuZXJneSBiZWNvbWVzIGJsb2NrZWQgaWYgdGhlIHNwaW5hbCBjb2x1bW4gaXMgbWlzYWxpZ25lZC4gQ2hpcm9wcmFjdG9ycyBtYW5pcHVsYXRlIHRoZSBtdXNjdWxvc2tlbGV0YWwgc3lzdGVtIHdpdGggZmFzdCwgZ2VudGxlIG1vdGlvbnMgKGNhbGxlZCBhZGp1c3RtZW50cykgdG8gcmVzdG9yZSBub3JtYWwgbW92ZW1lbnQgb3IgZnVuY3Rpb24gdG8gam9pbnRzIGFuZCBzdXJyb3VuZGluZyB0aXNzdWVzLiBBcyB3aXRoIGFjdXB1bmN0dXJlLCB3ZSBkb24ndCBoYXZlIGEgc29saWQgc2NpZW50aWZpYyBleHBsYW5hdGlvbiBhcyB0byBleGFjdGx5IHdoeSBvciBob3cgY2hpcm9wcmFjdGljIHdvcmtzLCBidXQgaXQgaGFzIGJlZW4gdXNlZCB0byB0cmVhdCBhIG51bWJlciBvZiBwcm9ibGVtcywgZnJvbSB1cHNldCBzdG9tYWNocyB0byBhcnRocml0aXMuCkFubGxpY2ggZGVzIDcuIEphaHJlc3RhZ2VzIGRlcyBQcm9qZWt0cyBoYWJlbiBCYXJiYXJhIHVuZCBFcmljaCBHcmFmIGVpbmVuIGF1c2ZocmxpY2hlbiBCZXJpY2h0IGZyIGRhcyBNYWdhemluIHNwaXJpdCB2ZXJmZmVudGxpY2h0LCBkZXIgc2VociBsZXNlbnN3ZXJ0IGlzdC4gU2llIHNjaHJlaWJlbjogMS4gCkh1ZHNvbiBZYXJkcyBpcyB0aGUgY3Jlc2NlbmRvIHRvIGEgbWFyY2ggb2YgbmV3IHByb2plY3RzIHJ1bm5pbmcgd2VzdCBmcm9tIE1hZGlzb24gU3F1YXJlIEdhcmRlbiAgIHRoZSBnbGFzcyBkb21lZCBNb3luaWhhbiBUcmFpbiBIYWxsICh1bmRlciBjb25zdHJ1Y3Rpb24gYmV0d2VlbiBFaWdodGggYW5kIE5pbnRoIGF2ZW51ZXMpLCBtaW5pIG1lZ2EgY29tcGxleCBNYW5oYXR0YW4gV2VzdCAocG9raW5nIGl0cyBoZWFkIHVwIGJldHdlZW4gTmludGggYW5kIDEwdGgpIGFuZCwgZmluYWxseSwgSHVkc29uIFlhcmRzJyBtb251bWVudGFsIGZhY2FkZSBvZiB0d28gc2hhcnBseSBhbmdsZWQgdG93ZXJzIHdpdGggYSBnYXJnYW50dWFuIHNob3BwaW5nIGhhbGwgc2x1bmcgbGlrZSBhIGhhbW1vY2sgYmV0d2VlbiB0aGVtLgpUcnVtcCBnYXZlIHRoZSBOb3J0aCBLb3JlYW5zIHRoZSBvbmUgdGhpbmcgdGhleSB3YW50ZWQgbW9yZSB0aGFuIGFueXRoaW5nLCB3aGljaCB3YXMgdGhlIGZhY2UgdG8gZmFjZSBtZWV0aW5nIGJldHdlZW4gaGVhZHMgb2Ygc3RhdGUgYXMgZXF1YWxzLgpUaGUgTGlmZSBhbmQgV29ya3Mgb2YgdGhlIENlbGVicmF0ZWQgVGhpcnRlZW50aCBDZW50dXJ5IEluZGlhbiBNeXN0aWMgUG9ldCAuIApIYXZlIGZsb3duIEJlbGwgaGVsaWNvcHRlcnMgaW4gdGhlIHBhc3QsIGFuZCB0aGUgZXhjZXB0aW9uYWwgcGVyZm9ybWFuY2UgYW5kIHNlcnZpY2UgaW4gRXVyb3BlIGhhdmUgbWFkZSBtZSBhIGxveWFsIGN1c3RvbWVyLiAKV2l0aCB0aGF0IGN1cnJlbmN5LCB0aGV5IGNhbiBhY3RpdmF0ZSBzdHJlZXQgc2lnbmFscyBhbmQgYmFycmljYWRlcyBieSB0YXBwaW5nIHRoZW0gb24gdGhlIHNjcmVlbi4gVGhleSBjYW4gc2VuZCBvdXQgdmVoaWNsZXMgdG8gY2hhc2UgZG93biBhbmQgcmFtIHRoZSBwbGF5ZXIgKFRob3NlIGNvc3QgYSBsb3Qgb2YgcG9pbnRzIHRob3VnaCkuIFBsYXllcnMgY2FuIGV2ZW4gb3ZlcmxvYWQgdW5kZXJncm91bmQgc3RlYW1waXBlcyBzbyB0aGV5IGV4cGxvZGUuIApXZSBoYXZlIGEgZ29vZCBleHBlcmllbmNlIHdpdGggaXQsIiBPZ2RlbiBzYXlzLiAiRm9yIGEgbm9ybWFsIGJhciBzY2VuZSwgdGhlIG51bWJlciBvZiBiYWQgYXBwbGVzIGlzIHJlYWxseSBsb3cuIEl0J3MgcG9rZXIgYW5kIGl0J3MgY29tcGV0aXRpdmUsIHNvIHNvbWV0aW1lcyB0aGV5IHN0b3JtIG91dCB3aGVuIHRoZXkgbG9zZS4gQnV0IHRoZXkncmUgYWx3YXlzIGJhY2sgZm9yIHRoZSBzZWNvbmQgZ2FtZS4iVGhlIHRvdXJuYW1lbnRzIGFyZSBvcGVuIHRvIGFueW9uZSAyMSBhbmQgb2xkZXIsIGFuZCBhY2NvcmRpbmcgdG8gTWF4d2VsbCwgYXMgbWFueSBhcyAzNTAgcGxheWVycyBwYXJ0aWNpcGF0ZSBpbiBvbmUgb2YgdGhlIDE0IHRvdXJuYW1lbnRzIGVhY2ggd2Vlay4gCkFzIGZhciBhcyBwYXJ0cyBnbyBJIGRvbiBjb25zaWRlciBteXNlbGYgZW5vdWdoIG9mIGFuIGV4cGVydCB0byBoZWxwLiBGb3IgJDgwMCB5b3UgY2FuIGdldCBzb21ldGhpbmcgcHJldHR5IGRlY2VudCBnb2luZy4KUmFuZG9tYXNoZSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCllvdSBjYW4gZXhwYW5kIHRoYXQgdG8sIHdoYXQgdGhleSBtb3V0aCBpcyBkb2luZy9oYXMgYmVlbiBkb2luZy4gVGhlaXIgZm9yZWhlYWQuIApKdWRnZSBjb25jbHVkZWQgdGhlIHRheHBheWVyIG5vdCBwYXkgdGhlIGFtb3VudHMgZm9yIGNoaWxkY2FyZSBzaGUgY2xhaW1lZCBzaGUgcGFpZCBpbiAyMDAzLCAyMDA0IGFuZCAyMDA1IGFuZCB0aGF0IHNoZSB0aGVyZWZvcmUgbWFkZSBhIG1pc3JlcHJlc2VudGF0aW9uIGluIGhlciB0YXggcmV0dXJucy4gCkxpZ2h0ZWQgbGV0dGVycyBhbmQgaWNvbnMgYXBwZWFyIG9uIHRoZSB3b29kIHBhbmVsIHdoZW4gaXQncyBiZWluZyB1c2VkICAgYW5kIGRpc2FwcGVhciB3aGVuIGl0J3MgaW5hY3RpdmUuLiAKTWFuIGFycmVzdGVkIGFmdGVyIGFidXNlIG9mIEJyaXRpc2ggcHJvCkkgcmVtZW1iZXIgd2hlbiBJIHdhcyB2ZXJ5IG5ldyB0byBSZWRkaXQgdGhlcmUgd2FzIGEgdGhyZWFkIHRoYXQgYXNrZWQgd29tZW4gd2hhdCBzb21ldGhpbmcgbWVuIGRvbiBrbm93IGFib3V0IGJlaW5nIGEgd29tYW4uIFRoZSB0b3AgcmVzcG9uc2Ugd2FzIChhbmQgdGhpcyBpcyBhcyB3b3JkIGZvciB3b3JkIGFzIEkgY2FuIHJlbWVtYmVyIGl0KSwgIkkganVzdCBjYW1lIGhlcmUgdG8gc2F5IHRoYXQgcGVyaW9kIHNoaXRzIGFyZSB0aGUgd29yc3QuIiBUaGVyZSB3ZXJlIGEgaGFuZGZ1bCBvZiAieW91IHNhaWQgaXQsIGdpcmwiIHJlc3BvbnNlcyBmcm9tIHdvbWVuIGJ1dCBtYW4gb2ggbWFuIHJlYWRpbmcgdGhlIHJlc3BvbnNlcyBmcm9tIHRoZSBtZW4gaGFkIG1lIGR5aW5nLiBHZW51aW5lIHRlcnJvci4gSXQgd2FzIHN1Y2ggYSBzaW1wbGUgbGl0dGxlIGNvbW1lbnQgYnV0IGl0IGxlZnQgc28gbXVjaCBmZWFyIGFuZCBkaXNndXN0IGluIGl0cyB3YWtlLiBJdCBtYXkgaGF2ZSBiZWVuIG9uZSBvZiB0aGUgcmVhc29ucyBJIGFjdHVhbGx5IG1hZGUgbXkgYWNjb3VudCwgYW5kIGl0IHdhcyBkZWZpbml0ZWx5IHRoZSBmaXJzdCB0aW1lIEkgcmVhbGl6ZWQgdGhhdCBJIHdhc24gdGhlIG9ubHkgb25lIHdobyBoYWQgaW5zYW5lIHNoaXRzIHdoaWxlIEkgd2FzIG9uIG15IHBlcmlvZC4gR29vZCBzdHVmZi4KU2FtZSwgMTB0aCBncmFkZSBhbGdlYnJhLiBJIGhlYXJkIG5vdGhpbmcgYXQgYWxsIGR1cmluZyBjbGFzcywgbm8gb25lIGNhbWUgdG8gdGVsbCB1cyBhbnl0aGluZy4gClZvbSAzNy4gCkkgaGF2ZW4gZG9uZSBtdWNoIHdpdGggaXQuIApUaGlzIHdvdWxkIHNhdmUgZXhwb3N1cmUgb2YgcGxheWVycyB3aG8gZm9sZCB5ZXQgcHJvdGVjdCBzdHJhdGVneSBvZiBwbGF5ZXJzIHRoYXQgd2luIHRocm91Z2ggZWxpbWluYXRpb24gb2Ygb3RoZXIgcGxheWVycyAoZm9sZGluZykuLiAKTm93LCBzdHVkZW50cyBtb3N0bHkgcmFpc2UgbW9uZXkgdGhyb3VnaCBjcm93ZHNvdXJjaW5nLCBldmVudHMsIGFuZCBsZXR0ZXJzLiAKQnV0IHRoYXRzIG5vdCB0aGUgY2FzZS4gSXRzIGp1c3QgbGlrZSBhbnkgb3RoZXIgcG9rZXIgc2l0ZS4gWW91ciBjaHAgYXJlIG93bmVkIGJ5IHRoZSBzaXRlIGFuZCB3aGVuIHRoZXkgcnVuIG91dCB5b3UgY2FuIHdpdGggZHJhdyBvZmYgdGhlIHNpdGUgZXZlbiB0aG91Z2ggaXQgc2F5cyB5b3UgaGF2ZSBhIHRvbiBvZiBjb2lucyBpbiB5b3VyIHdhbGxldC4gClN1cmUsIEJhcnJ5IGlzbiBvbmUgb2YgdGhlIG1vc3QgbGlrZWQgZ3V5cyBpbiB0aGUgaGlzdG9yeSBvZiBzcG9ydC4gQnV0IGRvIHlvdSB0aGluayBoZSBjYXJlcz8gRG8geW91IHRoaW5rIGhpcyBmYW1pbHkgYW5kIGNsb3NlIGZyaWVuZHMgY2FyZT8gRG8geW91IHRoaW5rIGhpcyBraWRzIGNhcmU/IEFuZCBob3cgd291bGQgYWxsIHlvdSBoYXRlcnMgZmVlbCBpZiBoaXMga2lkcyByZWFkIHlvdXIgaGF0ZWZ1bCBkcml2ZWwgYW5kIHdlcmUgaHVydCBieSB5b3VyIHBhdGhldGljIHdvcmRzPyBXaGF0IHRoZSBoZWxsIGRvZXMgaXQgbWF0dGVyIHRvIHlvdSB3aGV0aGVyIGhlIGNoZWF0ZWQgb3Igbm90PyBZb3UgaGF2ZSBhYnNvbHV0ZWx5IG5vIGV2aWRlbmNlIHRoYXQgaGUgZGlkLiAKU2NpZW5jZSBhbmQgbWVkaWNpbmUgaGF2ZSBib3RoIHR1cm5lZCB0aGVpciBiYWNrcyBvbiBtYWduZXNpdW0uIFNjaWVuY2Ugb3B0cyBvdXQgYmVjYXVzZSB0aGUgc2NpZW50aWZpYyBtZXRob2RvbG9neSBpcyBkZWZpbmVkIGJ5IGJlaW5nIGFibGUgdG8gdGVzdCBvbmUgdGhpbmcgYXQgYSB0aW1lIGVuZGluZyB1cCB3aXRoIG9uZSByZXN1bHQuIFNjaWVuY2UgZmluZHMgbWFnbmVzaXVtIHRvbyBkaWZmaWN1bHQgdG8gY29ycmFsLCBwYXJ0bHkgYmVjYXVzZSBpdCBpcyByZXNwb25zaWJsZSBmb3IgdGhlIGNvcnJlY3QgbWV0YWJvbGljIGZ1bmN0aW9uIG9mIG92ZXIgMzUwIGVuenltZXMgaW4gdGhlIGJvZHkuLiAKSDJnMiBQb3N0OiBpdCdzIG5vdCB5b3VyIGdyYW5kZmF0aGVyJ3Mgd2ViemluZS4gVGhlIG1hZG5lc3MgaXMgY29udGFnaW91cy4gVGl0bGVkIFNwYWNlIGFuZCBTcGFjZSBUcmF2ZWwsIFZvbHVtZSAxLCB0aGlzIGV4cXVpc2l0ZSBjb2ZmZWUgdGFibGUgdG9tZSBmZWF0dXJlcyBmb3J0eSB0d28gRW50cmllcyBvbiBzcGFjZSwgc3BhY2UgdHJhdmVsLCB1Zm9zLCBldGMsIGJ5IGEgdmFyaWV0eSBvZiBSZXNlYXJjaGVycywgdGFrZW4gZnJvbSB0aGUgRWRpdGVkIEd1aWRlLiAKQWxzbyBtMjQwaSBpcyBhbHNvIGEgZ29vZCBhbHRlcm5hdGl2ZSBpZiB5b3Ugd2FudCBzbWFsbGVyIHNwb3J0cyBjYXIsIGl0IGZhc3RlciB0aGFuIDIwMTcvMTggbTIgYnV0IHdpdGggYXdkLiAKSSBiZWVuIGluIGNvbnRhY3Qgd2l0aCB0aGUgb3JnYW5pemVycyBvZiB0aGlzIGV2ZW50IGFuZCBJIGNhbiB3YWl0IHRvIHJpZGUgdGhlIGFyZWEgYW5kIGVuam95IHRoZSBiZWF1dGlmdWwgQXJrYW5zYXMgY291bnRyeXNpZGUuClNoZSB3b24gc2lsdmVyIHdpdGggSmFtZXMgSm9obnNvbiBpbiAxOTA4IGFuZCBicm9uemUgd2l0aCBCYXNpbCBXaWxsaWFtcyBpbiAxOTIwLiAoRnVsbCBBbnN3ZXIpLiAKSSBiZWxpZXZlIHRoaXMgd29ya3MgYmV0dGVyIGluIG11bHRpIGNhdCBob3VzZWhvbGRzIHdoZXJlIHRoZXJlIG1pZ2h0IGJlIHNvbWUgaW50ZXIgdGVycml0b3JpYWwgaXNzdWVzLi4gCkJqb3JuIGFuZCBBZ25ldGhhIHdlcmUgcmFpc2luZyB0d28gY2hpbGRyZW4gdW5kZXIgMTAgeWVhcnMgb2xkIGluIHRoZSAxOTcwcyB3aGlsZSBtYWtpbmcgbXVzaWMgYW5kIHRvdXJpbmcuIApUaGVyZSBBcmUgT3RoZXIgU3B5IFBsYXlpbmcgQ2FyZHMgRGV2aWNlcyBUb28gV2hpY2ggQ2FuIEhlbHAgVGhlIFBsYXllciBUbyBXaW4gVGhlIEdhbWUuIFRoZXkgQXJlIENvbnRhY3QgTGVucywgTWFya2VkIENhcmRzLCBQbGF5aW5nIENhcmRzIFNvb3Roc2F5ZXIsIE1pbmkgRWFycGhvbmUsIEhpZGRlbiBMZW5zIEluIFBob25lLCBDaGVhdGluZyBQbGF5aW5nIENhcmRzLCBOZXcgSzMgQW5hbHl6ZXIgQW5kIEV0Yy4gVGhlIEdhZGdldHMgQmxlbmRzIEluIFRoZSBFbnZpcm9ubWVudCBTbyBXZWxsIFRoYXQgTm8gT25lIENhbiBTdXNwZWN0IFRoZWlyIFByZXNlbmNlLiBUaGUgQ2hlYXRpbmcgQ2FyZHMgQXJlIERlc2lnbmVkIFdpdGggTGF0ZXN0IEx1bWlub3VzIFRlY2hub2xvZ3kuIFRoZSBNYXJrcyBBcmUgTm90aGluZyBCdXQgVGhlIFNhbWUgTnVtYmVycyBBbmQgVGhlIE1vdGlmcyBXaGljaCBBcmUgUHJpbnRlZCBBdCBUaGUgRnJvbnQgT2YgVGhlIFBsYXlpbmcgQ2FyZHMuClllYWggaWYgeW91IGxvc2UgbW9uZXkgeW91IHNob3VsZG4gYmUgbG9zaW5nLCB5b3Uga2luZCBvZiBkZXNlcnZlIHRoZSBjb25zZXF1ZW5jZXMuIEkgbG9zdCBhIGxvdCBvZiBtb25leSBhdCB0aGUgdGFibGUgbGVhcm5pbmcgYW5kIGJlaW5nIHN0dXBpZCBidXQgZGFtbiBub25lIG9mIGl0IGV2ZXIgYmVlbiBtb25leSBJIGNvdWxkbiBsb3NlLgpJIGd1ZXNzIGl0IGhhcmRlciBiZWNhdXNlIEkga25vdyBJIHRyeWluZyBhbmQgSSB3YW50IHRvIGJlbGlldmUgaGUgaXMgdG9vLiAKQ2FuIGl0IGJlIGRvY3UgIG1lbnRlZD8gTm8uIApIYXZlbiBzZWVuIGFueSBnYW1lIHJlY2VudGx5IHRoYXQgY2FwdHVyZXMgdGhlIG11bHRpcGxheWVyIHN0b3J5IGFuZCBwYWNpbmcgd2Ugc2F3IGluIHNvbWUgb2YgdGhvc2Ugb2xkZXIgZ2FtZXMuIApBY2NvcmRpbmcgdG8gaGltLCB0aGUgcmVzdWx0IG9mIGhpcyBzdXJnZXJ5IHdhc24ndCB0aGF0IGdyZWF0LiBIZSBjb3VsZCBmZWVsIGl0LiBIZSBjb3VsZCBzbWVsbCBpdC4KVmVnYXNEZWdlbiAgOCBwb2ludHMgIHN1Ym1pdHRlZCA3IGhvdXJzIGFnbwpEaWQgdGhleSBjaGFuZ2UgdGhpcyBvciBhbSBJIGp1c3QgcmVhbGx5IHVubHVja3k/LiAKQydlc3QgdW4gbGl2cmUgZCdhY3R1YWxpdCA6IHRhbmRpcyBxdWUgbGVzIEdpbGV0cyBqYXVuZXMgcydpbnN1cmdlbnQgY29udHJlIGxlcyB0YXhlcyBjb2xvZ2lxdWVzLCBsZSBwaHlzaWNpZW4gRnJhbm9pcyBHZXJ2YWlzLCBhbmNpZW4gbWVtYnJlIGR1IEdJRUMsIHB1YmxpZSB1biBvdXZyYWdlIGRhbnMgbGVxdWVsIGlsIGRub25jZSBsYSBwcm9wYWdhbmRlIGF1dG91ciBkZSBsJ3VyZ2VuY2UgY2xpbWF0aXF1ZS4gU2Vsb24gbHVpLCAgbGEgbHV0dGUgY29udHJlIGxlIHJjaGF1ZmZlbWVudCBjbGltYXRpcXVlIGVzdCB2YWluZSBldCBsJ2ltcGFjdCBkZSBjZXMgbG9pcyBuJ2VzdCBwYXMgbWVzdXJhYmxlIHBvdXIgbGEgcGxhbnRlIC4gRGUgcGx1cywgIHRvdXRlcyBsZXMgYW5ub25jZXMgZHUgR0lFQyBuZSByZXBvc2VudCBxdWUgc3VyIGRlcyBtb2RsaXNhdGlvbnMgaW5mb3JtYXRpcXVlcyBxdWkgc29udCByZ3VsaXJlbWVudCBkbWVudGllcyBwYXIgbGVzIG9ic2VydmF0aW9ucyAuIEFpbnNpLCAgbGEgbHV0dGUgY29udHJlIGxlIHJjaGF1ZmZlbWVudCBjbGltYXRpcXVlIGVzdCB1bmUgYXViYWluZSBleHRyYW9yZGluYWlyZSwgbGEgQmFucXVlIG1vbmRpYWxlIGEgY2FsY3VsIGxlIG1vbnRhbnQgZ2xvYmFsIGRlcyBpbnZlc3Rpc3NlbWVudHMgZGVzdGlucyAgbGEgIGx1dHRlIGNvbnRyZSBsZSByY2hhdWZmZW1lbnQgIDogODkgMDAwIG1pbGxpYXJkcyBkZSBkb2xsYXJzIGQnaWNpICAyMDMwLCBxdWkgc2Vyb250IHBheXMgcGFyIGxlcyBjb250cmlidWFibGVzLiBMZSAgZ3JlZW4gYnVzaW5lc3MgIGVzdCBkaiB1bmUgdHJzIGp1dGV1c2UgYWZmYWlyZSBwb3VyIHRvdXMgY2V1eCBxdWkgb250IGludmVzdGkgZGFucyBkZXMgIGZlcm1lcyAgb2xpZW5uZXMgZXQgc29sYWlyZXMgZG9udCBsZSBzdXJjb3QgZGVzIHByaXggZGUgcHJvZHVjdGlvbiBlc3QgZmFjdHVyIGF1eCBjb25zb21tYXRldXJzIGQnbGVjdHJpY2l0IC4gRnJhbm9pcyBHZXJ2YWlzIHNpZ25hbGUgYXVzc2kgcXVlIGxlIENPMiBuJ2VzdCBwYXMgdW4gcG9pc29uLCBtYWlzIHF1J2lsIHMnYWdpdCBkJ3VuIGNvbXBvc2FudCBlc3NlbnRpZWwgZHUgY3ljbGUgZGUgbGEgdmllIGV0IGlsIHNvdWxpZ25lIHF1ZSBsJ2F1Z21lbnRhdGlvbiBkdSB0YXV4IGRlIENPMiBjb25zdGl0dWUgZG9uYyB1bmUgY2hhbmNlIHBvdXIgdG91cyBsZXMgYWZmYW1zIGRlIGxhIHBsYW50ZSwgbGFxdWVsbGUgYSBkaiBjb25udSBkZXMgdGF1eCBkZSBDTzIgdHJzIHN1cHJpZXVycyBkYW5zIGxlIHBhc3MuCldlIGhhZCBhIGZldyBwZW9wbGUgbW92aW5nIG91dCBhbmQgb3RoZXJzIG1vdmluZyBpbiBzbyBpdCBjb3VsZCBqdXN0IGJlIHRlbXBvcmFyaWx5IHN0b3JlZCB0aGVyZSwgYnV0IHlvdSB0aGluayB0aGUgb3duZXIgd291bGQgYXQgbGVhc3QgcHV0IGEgY292ZXIgb3ZlciBpdCBvciBzb21ldGhpbmcsIGluc3RlYWQgb2YgbGVhdmluZyBpdCBleHBvc2VkIHRvIHRoZSBlbGVtZW50cyBmb3Igd2Vla3MuIApDb25jZXJucyBhbHNvIHdlcmUgbG9kZ2VkIGJ5IGNvbW11bml0eSBwb2xpY2luZyBncm91cHMsIEhlbmRlcnNvbiBvZmZpY2lhbHMgc2FpZCwgZXNwZWNpYWxseSByZWdhcmRpbmcgdGhlIHRpbnRlZCBnbGFzcyB0aGF0IG1ha2VzIGl0IHBvc3NpYmxlIGZvciB0aG9zZSBpbnNpZGUgdGhlIGJ1c2luZXNzZXMgdG8gc2VlIGlmIHBvbGljZSBhcmUgb3V0c2lkZSwgYnV0IGltcG9zc2libGUgZm9yIHBvbGljZSB0byBzZWUgaW4uCkxhZHkgR2FnYSBoYXMgY3VycmVudGx5IGhhZCAzIEhvdCAxMDAgbnVtYmVyIDFzIGJ1dCBoYXMgYWN0dWFsbHkgaGFkIDggaW5jbHVkaW5nIGhlciBjdXJyZW50IG51bWJlciAxIHdoaWNoIHN0YXllZCBhdCBudW1iZXIgMSBvbiB0aGUgaG90IDEwMCBmb3IgNiB3ZWVrcy4gSGVyIG5leHQgMiBzaW5nbGVzIG9mZiB0aGUgYWxidW0gJ0Jvcm4gVGhpcyBXYXknIHdpbGwgYmUgJ01hcnJ5IFRoZSBOaWdodCcgJ0hhaXInLiBUaGlzIGFsYnVtIGlzIHByb2plY3RlZCB0byBoYXZlIDggb3IgOSBzaW5nbGVzIGFsb25lLiAKIldlJ3JlIHNlZWluZyBicmFuZHMgbGlrZSBPbGF5IGFuZCBTSyBJSSBzcGVuZCBsZXNzIG9uIFRWLCBmb2N1cyBvbiBvbmUgZ3JlYXQgYWQgcmF0aGVyIHRoYW4gY2hhbmdpbmcgYWRzIGFsbCB0aGUgdGltZSwgYW5kIHRoZW4gc3BlbmRpbmcgbW9yZSB0aW1lIGNyZWF0aW5nIHRhbGsgYWJsZSBjb250ZW50IHRoYXQgd2lsbCBkcml2ZSBwZW9wbGUgaW4sIiBoZSBzYXlzLgpUaGV5IGRlc2VydmUgdGhpcyBiZWNhdXNlIHRoZXkgdG9vIGFyZSB0aGUgaHVtYW4gZXF1aXZhbGVudCBvZiBzaGl0LCBqdXN0IGxpa2UgT1AncyBzb2Npb3BhdGhpYyBjb3VzaW4uLiAKSGUgdGhhdCBpcyB1bmp1c3QsIGxldCBoaW0gYmUgdW5qdXN0IHN0aWxsOiBhbmQgaGUgd2hpY2ggaXMgZmlsdGh5LCBsZXQgaGltIGJlIGZpbHRoeSBzdGlsbDogYW5kIGhlIHRoYXQgaXMgcmlnaHRlb3VzLCBsZXQgaGltIGJlIHJpZ2h0ZW91cyBzdGlsbDogYW5kIGhlIHRoYXQgaXMgaG9seSwgbGV0IGhpbSBiZSBob2x5IHN0aWxsLi4gCldoYXQ6IEtlZXBlcnMgb2YgdGhlIENoaWxkcmVuIEJpa2UgUmFsbHkKSXRzIG1haW4gdXNlIG5vdyBpcyBpdHMgYSB0cmFkaW5nIHBhaXIgd2l0aCBhbGwgdGhlIGFsdCBjb2lucyB0aGF0IHBlb3BsZSB3YW50LiBFdGhlcmV1bSBpcyBnZXR0aW5nIG1vcmUgdHJhZGluZyBwYWlycyBub3cgYW5kIGNsb3NpbmcgaW4gb24gYml0Y29pbiBhcyBvbmUgZGF5IG90aGVyIGNvaW5zIHdpbGwgYmUgdHJhZGluZyB3aXRoIGFueSBjb2luLiBUaGVuIGJpdGNvaW5zIHZhbHVlIHdpbGwgYmUgcHJldHR5IHdvcnRobGVzcyB3aGVuIHRoYXQgZGF5IGNvbWVzLiBCdXQgaXQgd2lsbCBiZSBhd2hpbGUuIEJpdGNvaW4gaGFzIHZhbHVlIG5vdyBidXQgaW4gMTAgdG8gMjAgeWVhcnMgaXQgd29udCBoYXZlIG11Y2ggaW1vLiBCaXRjb2luIGRpZCBzdGFydCB0aGUgY3J5cHRvIGN1cnJlbmN5IGJvb20gd2hpY2ggbm93IGhhcyBtYW55IGFsdCBjb2lucyBzbyBhIGxvdCBpcyBvd2VkIHRvIGJpdGNvaW4uIEFuZCBpdCB3aWxsIGJlIGhlbGQgYXMgY29sbGVjdG9ycyBpdGVtIGluIHRoZSBmdXR1cmUgc28gaXQgd2lsbCBzdGF5IGEgbGl0dGxlIHZhbHVlIGJhc2VkIG9uIHRoZSBmYWN0IGl0IGdvdCBldmVyeXRoaW5nIHN0YXJ0ZWQuIFRoZXkgcmVhbGx5IHNob3VsZCBtYWtlIGEgZXRmIGZvciB0aGUgYWx0Y29pbnMgbm90IGJpdGNvaW4gaW1vLiBUaGVuIHRoYXRzIHNvbWV0aGluZyBJIHdvdWxkIGRlZmluaXRlbHkgcHV0IGEgbG90IG9mIG1vbmV5IGludG8uClRoZSB3YWF0YSB3b3VsZCBiZSBhYnNvbHV0ZWx5IGZhc2NpbmF0ZWQgaWYgdGhleSBzdHVtYmxlZCB1cG9uIHRoaXMgcmVsaWMuIEl0IGJlIHRoZSBmaXJzdCBldmlkZW5jZSB0aGV5IGZpbmQgdG8gaW5kaWNhdGUgdGhhdCBhbm90aGVyIHRlY2hub2xvZ2ljYWxseSBhZHZhbmNlZCBzcGVjaWVzIGV4aXN0cyBvciBoYWQgZXhpc3RlZCwgYXQgbGVhc3QsIGluIHRoZSBnYWxheHkuIEZpZ3VyaW5nIG91dCB3aGVyZSBodW1hbnMgYXJlIG9yIHdoYXQgaGFwcGVuZWQgdG8gdGhlbSBpZiB0aGV5IG5vdCBhcm91bmQgd291bGQgYmVjb21lIHByaW9yaXR5IDEgZm9yIHRoZSBncm91cCBvZiB3YWF0YSB0aGF0IGRpc2NvdmVyZWQgdGhlIHByb2JlLgpQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gCkJhY2NhcmF0IChteSBmYXZvcml0ZSkgaXMgYSBncmVhdCBnYW1lIGZvciBiZWdpbm5lcnMgYmVjYXVzZSB5b3UgZG9uIGhhdmUgdG8gbWFrZSBhbnkgZGVjaXNpb25zLiBQbGF5ZXJzIHNpbXBseSBkZWNpZGUgd2hldGVyIHRvIGJldCB0aGUgYmFuayBvciB0aGUgcGxheWVyLCBhbmQgdGhlIGRlYWxlciBkb2VzIHRoZSByZXN0LiBUaGUgaG91c2UgaG9sZCBmb3IgYSAicGxheWVyIiBiZXQgaXMgMS4yNCUsIGFuZCAxLjA2JSBmb3IgYSAiQmFuayIgYmV0LgpJIGxpa2UgdG8gZ28gZG93biBvbiBoZXIsIHVzaW5nIG15IHRvbmd1ZSBhbmQgZmluZ2VycyB0byBnZXQgaGVyIGNsb3NlIHRvIGN1bW1pbmcsIHRoZW4gSSBzdG9wIGFuZCB3aGlwIGhlciBvciBwaW5jaCBoZXIgbmlwcGxlcywgSSBkbyB0aGlzIGZvciBhIHdoaWxlLCBlZGdpbmcgaGVyIGNsb3NlciBldmVyeSB0aW1lIGJ1dCBub3QgbGV0dGluZyBoZXIgY3VtLiAKSSAyNSBhbmQgdGhhbmtmdWxseSBteSBwYXJlbnRzIHN0aWxsIGhhdmUgbWUgb24gdGhlaXIgcGxhbi4gSXQgYWJvdXQgdGhlIG9ubHkgd2F5IHRoZXkgc3VwcG9ydCBtZSBhdCB0aGlzIHBvaW50IGFuZCBJIHN1cGVyIHRoYW5rZnVsIGZvciBpdC4gRm9yIHllYXJzIEkgaGF2ZW4gYmVlbiBhYmxlIHRvIGFjY2VzcyBteSB2b2ljZW1haWwgYW5kIGluIHRoZSBwYXN0IHllYXIgd2l0aCByb2JvY2FsbHMgcmFtcGluZyB1cCBpIGZlZWwgaSBzaG91bGQsIGJ1dCBteSBkYWQgaXMgc3VwZXIgc3R1YmJvcm4gYW5kIGRlc3Bpc2VzIGNhbGxpbmcgdXAgYW55IGF1dG9tYXRlZCBzZXJ2aWNlLCBidXQgdGhleSB3b24gdGFsayB0byBhbnlvbmUgYnV0IHRoZSBhY2NvdW50IGhvbGRlci4gSSB0aGluayBteSB2b2ljZW1haWwgaGFzIGJlZW4gZnVsbCBzaW5jZSAxMXRoIGdyYWRlLgpCdXQgaXQgZ290IG1lIHRoaW5raW5nIGFib3V0IG90aGVyIHBlb3BsZSB3ZSBjb3VsZCBkZWJhdGUga2lsbGluZy4gTGlrZVNob3VsZCB3b21lbiBsaXZpbmcgdW5kZXIgdGhlIFRhbGliYW4gYmUgc3RvbmVkIHRvIGRlYXRoIGZvciBicmVha2luZyBTaGFyaWEgbGF3PyBZZXMgb3Igbm8/U2hvdWxkIHN1c3BlY3RlZCB0ZXJyb3Jpc3RzIGJlIHRvcnR1cmVkPyBXaGF0IGFib3V0IGNvbnZpY3RlZCBvbmVzPyBZZXMgb3Igbm8uSSB0aGluayBpdCBjbGVhciB3aGVyZSB0aGlzIGlzIGdvaW5nLiBTZXJpb3VzIGpvdXJuYWxpc20gZGVtYW5kcyB0aGF0IHdlIGFzayB0aGVzZSBxdWVzdGlvbnMuU2hvdWxkIHBvbGl0aWNpYW5zIHdobyBwdXJwb3NlZnVsbHkgbGllIHRvIHN0YXJ0IHdhcnMgb2YgYWdncmVzc2lvbiBiZSBleGVjdXRlZCB3aXRob3V0IHRyaWFsPyBBZnRlciBhIHRyaWFsPyBZZXMgb3Igbm8uU2hvdWxkIGJhbmtlcnMgd2hvIHByb2ZpdCBvZmYgdGhlIG1pc2VyeSBvZiBtaWxsaW9ucyBvZiBwZW9wbGUgYW5kIHRoZW4gcGF5IHRoZW1zZWx2ZXMgcmVjb3JkIHNhbGFyaWVzIGJlIGV4ZWN1dGVkPyBZZXMgb3Igbm8uU2hvdWxkIHRoZXNlIHNhbWUgYmFua2VycyBiZSB0b3J0dXJlZD8gWWVzIG9yIG5vLlNob3VsZCBUaWdlciBXb29kcyBiZSBleGVjdXRlZD8gT3IganVzdCB0b3J0dXJlZD8gUGxlYXNlIGNob29zZSBvbmUuU2hvdWxkIHRoZSBqb3VybmFsaXN0cyB3aG8gdGhvdWdodCBkZWJhdGluZyB0aGUgZXhlY3V0aW9uIG9mIGhvbW9zZXh1YWxzIHdhcyBnb29kIGpvdXJuYWxpc20gYmUgZm9yY2VkIHRvIGNvbXBsZXRlIGFuIGludGVuc2l2ZSBzZW1pbmFyIGluIGV0aGljcz8gT3Igc2hvdWxkIHRoZXkganVzdCBiZSBmaXJlZD8gT3Igc2hvdWxkIHRoZXNlIGpvdXJuYWxpc3RzIGJlIGV4ZWN1dGVkPyBQbGVhc2UgY2hvb3NlIG9uZS5UaGUgcHJvYmxlbSB3aXRoIG9sZCBzY2hvb2wsIEJCQyBzdHlsZSByZXBvcnRpbmcgaXMgdGhhdCBpdHMgcmlkaWN1bG91cyBjbGFpbXMgdG8gIm9iamVjdGl2aXR5IiBhbmQgIm5ldXRyYWxpdHkiIGxlYXZlIGl0IG9wZW4gdG8ganVzdCB0aGVzZSBraW5kcyBvZiBtaXN0YWtlcy4gCkkgZG9uIGdldCBtdWNoIGFjbmUsIHdoYXQgSSBkbyBnZXQgc2VlbXMgdG8gYmUgcmVsYXRlZCB0byBlYXRpbmcgd2hlYXQgKGFsbGVyZ3kpIG9yIGRyaW5raW5nIG1pbGsuIApUaGlzIGVudGlyZSBzdWJyZWRkaXQgaXMgdGhlIHN0dXBpZGVzdCBjb25jZXB0IHRoYXQgZXZlciBzZWVuIGluIG15IGxpZmUuIEl0IGZpbGxlZCB3aXRoIHNhbHR5IHB1c3NpZXMgeW91IHNpdCBoZXJlIGFuZCB3aGluZSBhbmQgY29tcGxhaW4gYW5kIGJpdGNoaW5nIE1vYW5pbmcgYWJvdXQgaXJyZWxldmFudCBub25zZW5zZS4gWW91IGp1bXAgdG8gY29uY2x1c2lvbnMgYWJvdXQgcGVvcGxlIHdobyBhcmUgYWxzbyBqdW1waW5nIHRvIGNvbmNsdXNpb25zIGFib3V0IHN0dWZmLiAKTUg6IFNlY29uZCBwZXJpb2QgdW5kZXJ3YXkuIEh1Z2hzb24gdGVsbHMgdXMgUnlhbiBLZXNsZXIgaGFzIGJlZW4gdGhlIGJlc3QgQ2FudWNrIGZvcndhcmQgdGhpcyBzZWFzb24uIElmIHRoYXQgZG9lc24gYWRlcXVhdGVseSBzdW0gdGhpbmdzIHVwLCBJIGRvbiBrbm93IHdoYXQgZG9lcy4gCklsIGVzdCBjZXJ0YWluIHF1ZSBjZXMgbWFyY2hlcyBmb250IGwnb2JqZXQgZGUgY3JpdGlxdWVzLCB5IGNvbXByaXMgYXVwcnMgZGUgcGVyc29ubmVzIGhvbW9zZXh1ZWxsZXMuIApJbnZhc2lvbi4gClN1Y2ggdGVzdHMgbGVzc2VuIHRoZSBjaGFuY2Ugb2YgcmVqZWN0aW9uIG9mIHRoZSBuZXcgb3JnYW4gYnkgdGhlIGJvZHkuIEluIGFkZGl0aW9uLCBzdGVyb2lkIGRydWdzIGJsb29kIHR5cGVzIGFuZCBvdGhlciBjaGFyYWMgIGFkbWluaXN0ZXJlZCBmb2xsb3dpbmcgdGhlIHRlcmlzdGljcyBzaW1pbGFyIHRvIFJpY2hhcmQncywgdG8gZGltaW5pc2ggdGhlIFN1cmdlcnkgb24gdGhlIHRyYW5zcGxhbnQgcGEgIHRpZW50cyB3YXMgcm91dGluZS4gTW9yZSB0aGFuIDIwMCBoYXZlIGJlZW4gZG9uZSBhdCB0aGUgY2xpbiAgaWMsIGJ1dCBmaW5kaW5nIHRoZSBjb3JyZWN0IHBhICB0aWVudHMgaXMgY29tcGxpY2F0ZWQuIApCdXQgSSBmZWVsIGxpa2UgSSB3YW50IGFuIHVwZ3JhZGUuIApBZnRlciB0aGlzIEkgdHVybmVkIGl0IG9mZiwgYW5kIGEgY291cGxlIG9mIHdlZWtzIGxhdGVyIEkgcmV0dXJuZWQgdG8gaXQsIGFuZCB0aGF0IHdoZW4gSSBjb21wbGV0ZWx5IGZlbGwgZm9yIHRoZSBlbnRpcmUgYWxidW0uIEFuZCB0aGF0IHJlYWxseSBob3cgSSBmZWxsIGZvciBUTVYgYW5kIFByb2cgaW4gZ2VuZXJhbC4gCkluIDMuNSB0aGV5IGhhZCBsb3RzIG9mIHdlaXJkIHJhY2VzLCBhbmQgbG90cyBvZiBsYXJnZSBvbmVzIHRvby4gVGhleSB3ZXJlIGFsbW9zdCBhbHdheXMgbGV2ZWwgYWRqdXN0ZWQsIG1lYW5pbmcgeW91IHN0YXJ0IHRoZSBnYW1lIHggbGV2ZWxzIGJlaGluZC4gVGhleSBhdm9pZGluZyBsYXJnZSBQQ3MgYmVjYXVzZSB0aGV5IGRvbiB3YW50IDVlIHRvIGJlIGFub3RoZXIgMy41IHJ1bGVzIHNoaXRzdG9ybS4gTGV0IGxvb2sgYXQgd2h5IGxhcmdlIFBDcyBhcmUgdG9vIHBvd2VyZnVsIHdpdGhvdXQgbGV2ZWwgYWRqdXN0bWVudDoKSWwgY29uZGkgPSBpbCBjb25kaXppb25hdG9yZSBkICh0aGUgYWlyIGNvbmRpdGlvbmVyKQpBZGRpdGlvbiwgdGhlIGd1dCBoYXMgaXRzIG93biBuZXJ2b3VzIHN5c3RlbSB0aGF0IGlzIHJlbGF0aXZlbHkgaW5kZXBlbmRlbnQuIFNvIHRoZSBjb21tdW5pY2F0aW9uIGJldHdlZW4gdGhlIGd1dCBhbmQgdGhlIGFkdWx0IGJyYWluIGlzIGVsYWJvcmF0ZSBhbmQgYmkgZGlyZWN0aW9uYWwsIGFuZCBjaGFuZ2VzIGluIHRoZSBndXQgYXJlIHNpZ25hbGVkIGRpcmVjdGx5IHRvIHRoZSBicmFpbi4gCkkgYW0gZ3Vlc3NpbmcgdGhvc2UgZmFjdG9pZHMgd2VyZW4ndCByZWFkIGFsb3VkIGZyb20gYSBsZWN0ZXJuIGR1cmluZyB0aGUgaGl0dGVyJ3MgbWVldGluZy4gSG9uZXN0bHksIEknbSBub3Qgc3VyZSBUb255IFJvYmJpbnMgb3IgUm9iaW4gV2lsbGlhbXMgb3IgVGVkIFdpbGxpYW1zIGNvdWxkIHNheSBhbnkgbWFnaWMgd29yZHMuIFRoZXkganVzdCBuZWVkIHRvIGhpdCBtb3JlLiBJZiBpdCBkb2Vzbid0IHR1cm4gYXJvdW5kIHNvb24sIHRoaXMgd2lsbCBiZSB0aGUgbW9zdCBkaXNhcHBvaW50aW5nIGV2ZW4geWVhciBpbiBHaWFudHMgaGlzdG9yeS4gNSwgMjAxNiwgaW4gRGVudmVyLiAoQVAgUGhvdG8vRGF2aWQgWmFsdWJvd3NraSkKSSBkb3VidCBoZSdkIGdpdmUgdGhpcyBpbmZvcm1hdGlvbiB0byBhbnkgc3R1ZGVudCwgYnV0IGhlIHNlZW1lZCB0byBmYXZvciBEcmFjbyBhbmQgd2FudGVkIGhpbSB0byBleGNlbC5UaGVHaW5nYU5pbmphaCAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29BcyBhIHNlcnZlciwgSSBoYXZlIHRvIDEpIGdpdmUgYSBzaG91dCBvdXQgdG8geW91ciBzZXJ2ZXIgZm9yIHRyeWluZyBoZXIgaGFyZGVzdCB0byBlbnN1cmUgeW91IGhhZCBhbiBlbmpveWFibGUgYW5kIHNhZmUgZXZlbmluZy4gMikgaW5zaXN0IHlvdSBnZXQgYSBsYXd5ZXIuSXQgaXMgbm90IGFueW9uZSdzIGpvYiB0byBhc3N1bWUgdGhlIHNldmVyaXR5IG9mIGFuIGFsbGVyZ3kvZGlldGFyeSByZXN0cmljdGlvbi4gClNtaXRoLCBKLCAxOTk1LCBSdW5uaW5nIFNjYXJlZDogVGhlIExpZmUgQW5kIFRyZWFjaGVyb3VzIFRpbWVzIG9mTGFzIFZlZ2FzIEtpbmcgU3RldmUgV3lubiAoTmV3IFlvcmspLgpTaGUncyBiZWF1dGlmdWwgYW5kIGNvbmZpZGVudCBiZWNhdXNlIG9mIGhlciBzaXplLCBub3QgaW4gc3BpdGUgb2YgaXQuIApQaGlmZXIgc2F5cyB0aGUgR3JhbW15cyBldmUgaW5jaWRlbnQgd2lsbCBsaWtlbHkgaW1wYWN0IHRoZSBzaW5nZXJzIGNhcmVlcnMsIGJ1dCBubyBvbmUgY2FuIHByZWRpY3QgaG93IG11Y2ggYW5kIGluIHdoYXQgd2F5cy4gdGhpbmsgdGhpcyB3aG9sZSB0aGluZyB3aWxsIGFmZmVjdCBoaW0sIGFuZCBJIHRoaW5rIGl0IHdpbGwgYWZmZWN0IGhlciwgaGUgc2FpZC4gYm90aCBvZiB0aGVtLCB0aGVpciBmYW4gYmFzZSBpcyBtYWlubHkgd29tZW4gYW5kIGtpZHMsIHNvIEkgZG9uIGtub3cgd2hhdCBraW5kIG9mIGV4YW1wbGUgdGhhdCBsZWFkcywgYnV0IGxpa2UgSSBzYWlkLCBJIHdpc2ggdGhlbSBhbGwgdGhlIGJlc3QuIGhhcyBub3Qgc3Bva2VuIHRvIEJyb3duIHNpbmNlIHRoZSBhbGxlZ2VkIGFzc2F1bHQgYW5kIHN1YnNlcXVlbnQgYXJyZXN0LCBidXQgc2F5cyBoZSBoYXMgYSAiY2lyY2xlIG9mIHBlb3BsZSIgdG8gbGVhbiBvbi4KRmFucyBwYXkgdHJpYnV0ZSB0byBSZWQgV2luZ3MgbGVnZW5kIFRlZCBMaW5kc2F5ClRoZXkgc3BlbmQgbW9yZSB0aW1lIGluc2lkZSB0aGFuIG91dC4gCldlIHNlZSBwcm9taW5lbnQgYWRzIG9uIHRlbGV2aXNpb24gYW5kIGluIG1lZGljYWwgam91cm5hbHMgICB0aGluZ3MgbGlrZSAzNiUgcmVkdWN0aW9uIGluIHJpc2sgb2YgaGF2aW5nIGEgaGVhcnQgYXR0YWNrLiBCdXQgd2UgZG9uJ3QgbG9vayBhdCB0aGUgZmluZSBwcmludC4gV2hhdCBkb2VzIHRoYXQgUkVBTExZIG1lYW4gYW5kIGhvdyBkb2VzIGl0IGFmZmVjdCBkZWNpc2lvbnMgYWJvdXQgd2hvIHNob3VsZCByZWFsbHkgYmUgdXNpbmcgdGhlc2UgZHJ1Z3MuCkl0IGltcG9ydGFudCB0aGF0IHdlIGRpZG4gbGVhcm4gdGhlIHdyb25nIGxlc3NvbnMgZnJvbSB0aGF0LiAKWW91IGxvc2UgdGhlIDV0aCBmdWxsIGxlbmd0aCBwY2llIHNsb3QgYmVjYXVzZSBvZiB3aGVyZSB0aGV5IHB1dCB0aGUgbnZtZSBtLjIgc2xvdHMuIApTbyBob3cgZGlkIHdlIGNvbWUgYWNyb3NzIHRoZSBTdWl0ZWQgUHVycGxlIFRleGFzIEhvbGRlbSBQb2tlciBUYWJsZSBDbG90aD8gV2VsbCwgYSBjb3VwbGUgb2YgbXkgYXNzb2NpYXRlcyB3ZW50IGRvd24gdG8gdGhlIGxvY2FsIHN0b3JlLCBidXQgd2UgY291bGQgbmV2ZXIgZ2V0IGEgY29sb3IgdGhhdCByZWFsbHkgcG9ydHJheWVkIGEgc29tYmVyIGFwcGVhbC4gVGhpcyBtZWFudCB3ZSBoYWQgdG8gZmluZCBhIGNvbGxlY3Rpb24gb25saW5lIGFuZCBzaW5jZSB3ZSB3ZXJlIHJ1bm5pbmcgb3V0IG9mIG1vbmV5IGZvciB0aGlzIHByb2plY3QsIGl0IGhhZCB0byBiZSBzb21ldGhpbmcgdGhhdCB3YXNuJ3QgdG9vIGV4cGVuc2l2ZS4gQW1hemluZ2x5IGVub3VnaCwgd2UgZm91bmQgYSBwbGFjZSB0aGF0IG9mZmVyZWQgYSBwZXJmZWN0IG1hdGNoIGFuZCBhdCBhIGxvdyBjb3N0LgpBbmQgaGUgd2F5IGJpZ2dlciB0aGFuIEpveW5lci4gCklmIHRoYXQgd2FzbiBlbm91Z2ggdG8gaW5kaWNhdGUgaGUgd2FzIG5ldywgaGUgY29tcGxldGUgbGFjayBvZiBrbm93bGVkZ2Ugb2YgdGhlIGJldHRpbmcgbGluZSwgYmxpbmQgc3RydWN0dXJlLCB3aGVuIGl0IHdhcyBoaXMgdHVybiB0byBhY3QsIGV0Yy4gU3VyZSBnYXZlIGl0IGF3YXkuIEFmdGVyIGJhc2ljYWxseSBzaG93aW5nIG5vIGFnZ3Jlc3Npb24sIGxpbXAvZm9sZGluZyBzb21lIGhhbmRzLCBsaW1wL2NhbGxpbmcgc29tZSBoYW5kcyBhbmQgdGhlbiBmb2xkaW5nIG9uIHRoZSBmbG9wLCBoaXMgc3RhY2sgd2hpdHRsZWQgZG93biB0byBhYm91dCAkNzAgaW4gb25seSAxNSBtaW51dGVzIG9yIHNvLi4gCkZvb2Q/IE5ldmVyIGFuIGlzc3VlIGZvciB5b3UsIHlvdSBjYW4gbGl0ZXJhbGx5IGNyZWF0ZSBmb29kIG91dCBvZiB0aGluIGFpciAodGhvdWdoIHlvdSBtYXkgbmVlZCB0byBjb29rIGl0LCBvciBiZSBhIHNraWxsZWQgbWFnaWNhbCBjaGVmLCBiZWZvcmUgeW91IGNhbiBlbmpveSBhY3R1YWwgbWVhbHMpLgpHdXkgYm9va3MgYmV0cyByaWdodCBpbiBzYWlkIFRvbSAxNi4gSW4gb24gdGhlIG5pZ2h0IG9mIHRoZSBzY2hvb2wncyBzZW5pb3Igb25lIG9mIHRoZSBhYyAgdGl2aXRpZXMgYXJyYW5nZWQgZm9yIHRoZSBldmVuaW5nIHdhcyBhIG1vY2sgc2V0IHVwIGluc2lkZSBKQU1JUyBVTklWRUdBIENJR05BTCBIZG1lYiBDYXIgdG9kcyBTaG9lcyBERVcxVFQgU1BPUlRTIFJpIDUgUmVwbGFjZW1lbnQgV2luZG93cyB0aGUgY2FmZXRlcmlhLiAKSnVzdCByZWFsbHksIHJlYWxseSBnb29kIGZyb20gc3RhcnQgdG8gZmluaXNoLiBUaGUgbWFzc2FnZSBtb3ZlZCBpbnRvIGEgZ29vZCBoYW5kIGpvYiBhbmQgc2hlIHdhcyBrZWVuIHRvIHNob3cgbWUgaGVyIHdob2xlIGJvZHkgYXMgc2hlIHdvcmtlZCBvbiBtZS4gU2hlIGFsbG93ZWQgbWUgdG8gcGxheSB3aXRoIGhlciBwdXNzeSBhbmQgZmluZ2VyIGhlciBhbmQgc2hlIEZyZW5jaCBraXNzZWQgbWUuIFNoZSBtb3ZlZCBvbiB0aGUgYmxvdyBqb2IsIHdoaWNoIHdhcyB2ZXJ5IGdvb2QuIEkgb2NjYXNpb25hbGx5IGZlbHQgYSB0b290aCBidXQgaXQgd2FzIG5ldmVyIHVuY29tZm9ydGFibGUuIFNoZSBzdWNrZWQgYW5kIGxpY2tlZCBldmVyeSBwYXJ0IG9mIG15IGdlbml0YWxzLCBiYXJlYmFjay4gSGVyIHNraWxsIGFuZCBwYWNlIHdhcyBleGNlbGxlbnQgYW5kIHNoZSBzdWNrZWQgc29mdGx5LCByYXRoZXIgdGhhbiBoYXJkLgpUaGUgdHdvIG1vc3Qgb2J2aW91cyBzZWxlY3Rpb25zIHdvdWxkIGJlIGJsYWNramFjayBhbmQgcG9rZXIsIG1vc3QgY29tbW9ubHkgdGhlIHNlbnNhdGlvbmFsbHkgZW50ZXJ0YWluaW5nIFNsb3RzIGdhbWVzIHZhcmlldHkuIApBbHNvIGRvbid0IGNvdW50IG9uIGdldHRpbmcgYSBjaGFuY2UgdG8gZ28gdG8gdGhlIGJhdGhyb29tLiBZb3UgY2FuJ3QganVzdCBsZWF2ZSB0aGUga2lkcyB0byBmZW5kIGZvciB0aGVtc2VsdmVzLCBzbyB5b3UgaGF2ZSB0byBjYWxsIHRoZSBmcm9udCBkZXNrIGFuZCBwcmF5IHNvbWVvbmUgcGlja3MgdXAgYW5kIHRoYXQgdGhleSBjYW4gY29tZSB3YXRjaCB5b3VyIGtpZHMgd2hpbGUgeW91IGRvIHlvdXIgYnVzaW5lc3MuIApUaGlzIGlzIHNpbWlsYXIgdG8gdGhlIHJveWFsIGZsdXNoLCBleGNlcHQgdGhlIDUgYXJlIG5vdCBhY2UsIGtpbmcsIHF1ZWVuLCBqYWNrIGFuZCAxMC4gClRoZSBvdGhlciBvcHRpb24geW91IGNvdWxkIG1heWJlIHRyeSBpcyBqdXN0IHJvbGxpbmcgd2l0aCB0aGUgaG90IHJlY29yZGluZyBhbmQgd29ya2luZyB3aXRoIGl0IHRvIG1ha2UgaXQgc2VlbSBsaWtlIGFuIGFlc3RoZXRpYyBjaG9pY2U/IE9mIGNvdXJzZSBJIGRvbiBrbm93IHRoZSBnZW5yZSBvZiB5b3VyIHJlY29yZGluZyBvciB0aGUgc3BlY2lmaWNzIG9uIGhvdyBpdCB3YXMgY2xpcHBlZC9zYXR1cmF0ZWQsIHNvIHRoaXMgbWlnaHQgbm90IGJlIHRoZSBkaXJlY3Rpb24geW91IHdhbnQgdG8gdGFrZS4gSnVzdCB0aHJvd2luZyBpZGVhcyBhdCB5b3UgaGVyZSB0aG91Z2guIApTVEVNIHByb2dyYW0gY2hhbmdlZCBteSBsaWZlLCBhZGRlZCBaaGVuZy4gaW4gQ2hpbmEsIEkgZmVlbCBsaWtlIGdpcmxzIGFyZSBtb3JlIGVuY291cmFnZWQgdG8gZ28gaW50byBodW1hbml0aWVzIGFuZCBidXNpbmVzcyBhbmQgSSBmZWVsIHdoZW4gSSB3YXMgdGhlcmUgSSB3YXNuIHJlYWxseSBjb25maWRlbnQgaW4gc2NpZW5jZSBvciBtYXRoLiBBbmQgdGhlbiBJIGdvdCBpbnRvIHRoZSBTVEVNIHByb2dyYW0gYW5kIGl0IGNvbXBsZXRlbHkgY2hhbmdlZCBteSBtaW5kc2V0LiBJIGNvdWxkbiBiZWxpZXZlIEkgY291bGQgYWNoaWV2ZSBzbyBtdWNoLiB0ZWVucyBzaGFyZSBhIGxvdmUgZm9yIGJpb2xvZ3kgYnV0IHdlcmVuIHN1cmUgd2hlcmUgdG8gc3RhcnQgb3Igd2hhdCB0byBkbyB3aXRoIHRoYXQgcGFzc2lvbi4gVGhlIFNURU0gTWVudG9yaW5nIENhZmUgaGVscGVkIHRoZW0gbWVldCBwcm9mZXNzaW9uYWxzIHdobyBleHBsYWluZWQgc29tZSBvcHRpb25zIGZvciB0aGVpciBmdXR1cmUsIHNhaWQgWGlvbmcuClBsZWFzZSByZWFkIHdoYXQgeW91ciBsb2NhbCBjb3VuY2lsIHNheXMgc2hvdWxkIGdvIGluIGl0IGJlY2F1c2UgZXZlcnlib2R5IHNlZW1zIHRvIGFzc3VtZSBhbGwgcGxhc3RpYyBjYW4gZ28gaW4gYW5kIHRoaXMgaXMgbm90IHRoZSBjYXNlLiBJdCBhY3R1YWxseSBxdWl0ZSByZXN0cmljdGl2ZSwgYmFzaWNhbGx5IGp1c3QgcGxhc3RpYyBib3R0bGVzIG9yIGhhcmQgcGxhc3RpYyBjb250YWluZXJzIHdpdGggdGhlIHJlY3ljbGUgbG9nbyBvbiB0aGVtLiAKTW9zdCBwZW9wbGUgYXJlIGtpbmQgZW5vdWdoIHRvIGFzayAiaG93IG11Y2ggd291bGQgeW91IGNoYXJnZSBmb3IgdGhpcyB0aGluZyBJIHdhbnQiIGJ1dCBJIGRvbid0IHRha2UgcmVxdWVzdHMgZ2VuZXJhbGx5LiAKSXQgdGhlIGVxdWl2YWxlbnQgb2YgY29taW5nIGhvbWUgYWZ0ZXIgOCBob3VycyBhdCB5b3VyIGRlc2sgam9iIGFuZCBhc2tpbmcgeW91ciBTTyBmb3IgYSBzaG91bGRlciBydWIgdG8gdGFrZSBvZmYgdGhlIHRlbnNpb24uIApJdCBkZWJ1dCBhbGJ1bSBib2FzdGVkIGEgYnVuY2ggb2Ygc3VwZXIgdGlnaHQgc2luZ2xlcyBzdWNoIGFzIFBsYXRvb24sIFRpbWUsIFRoaXMgSGVhdCBhbmQgSnVsaWEuIApPdXIgY29uY2lvdXMgZW50aXR5IGlzIG5vdCBhIGRyaXZlciB0aGF0IG9jY3VwaWVzIGFuIG90aGVyd2lzZSBlbXB0eSB2ZWhpY2xlIGtub3duIGFzIGEgaHVtYW4gYm9keSwgaXQgaXMgbWVyZWx5IGFuIGlsbHVzaW9uIHRoYXQgYXJpc2VzLCBhIGRpcmVjdCBwaHlzaWNhbCBjb25zZXF1ZW5jZSBvZiB0aGUgYWN0aXZpdHkgb2YgdGhlIGJyYWluLi4gCkhlIGdvdCB0byBrbm93IHRoZSBtb2IgZ3V5cyB3aG8gaW5mZXN0ZWQgdGhlIGFyZWEgbGlrZSBjb2Nrcm9hY2hlcyBvbiB0aGUgaHVudC4gClBhdWwgbWV0cm8gaW4gUmVkIFdpbmcsIE1OLCBvdXIgMTUwLDAwMCBzcXVhcmUgZm9vdCBjYXNpbm8gZmxvb3IgaXMgYnVyc3Rpbmcgd2l0aCBleGNpdGVtZW50LiBXZSBvZmZlciBvdmVyIDIsMjAwIHN0YXRlIG9mIHRoZSBhcnQgc2xvdCBtYWNoaW5lcywgb3ZlciA1MCB0YWJsZSBnYW1lcyBpbmNsdWRpbmcgYmxhY2tqYWNrLCBwb2tlciwgdmlkZW8ga2VubywgdmlkZW8gcG9rZXIgYW5kIGJpbmdvLiBBZGRpdGlvbmFsbHksIFRyZWFzdXJlIElzbGFuZCBSZXNvcnQgQ2FzaW5vIGJvYXN0cyB0aGUgbGFyZ2VzdCBub24gc21va2luZyBjYXNpbm8gYXJlYSBpbiB0aGUgTWlkd2VzdC4gCldvcm15ZCB1Ckl0IGluIHRoZSBtaWRkbGUgb2Ygc29tZSBvY2Vhbiwgc28gSSB3b3VsZCByZWNvbW1lbmQgYnV5aW5nIGEgbWFwIGZyb20gdGhlIGdlbmVyYWwgc3RvcmUgYW5kIHVzaW5nIHRoZSBzaG93IGxvY2F0aW9uIGZlYXR1cmUgb2YgaXQgdG8gc2hvdyB5b3UgaG93IGZhciBvZmYgeW91IGFyZS4gCk1pbmVyYWxzIDogKElkZW50aWZpY2F0aW9uIG9ubHkpIChJKSBJcm9uIG9yZSBtaW5lcyA6IE1heXVyYmhhbmogRHVyZyBCYWlsYWRpbGEgQmVsbGFyeSBLdWRyZW11a2ggKElJKSBNaWNhIG1pbmVzOiBBam1lciBCZWF3YXIgTmVsbG9yZSBHYXlhIEhhemFyaWJhZ2guIApHaWxsZXMgTWFyaW5pOiBXZWxsLCB3aGF0IGRpZCB5b3UgZXhwZWN0PyBHaWxsZXMgd2FzIGRlc3RpbmVkIHRvIGRhbmNlIHRoZSBzYW1iYSwgd2Fzbid0IGhlPyBMZXQncyBqdXN0IHNheSwgdGhlcmUgd2FzIG5vIHByb2JsZW0gd2l0aCBoaXAgYWN0aW9uIHRoZXJlLiAiWW91IGJyaW5nIG91dCBzb21ldGhpbmcgaW4gQ2hlcnlsIFtCdXJrZV0gSSBoYXZlbid0IHNlZW4gaW4gYSBsb25nIHRpbWUsIiBDYXJyaWUgQW5uIHNhaWQsIGFzdHV0ZWx5IHBvaW50aW5nIG91dCB0aGUgZGlmZmVyZW5jZSBiZXR3ZWVuIGRhbmNpbmcgd2l0aCBHaWxsZXMgYW5kIGRhbmNpbmcgd2l0aCBXYXluZSBOZXd0b24uICJZb3UgY2FtZSBvdXQgaGVyZSBsaWtlIGEgdGhyb2JiaW5nIHJlZCwgaG90IHBva2VyISIgYSByZWFsbHkgZXhjaXRlZCBCcnVubyBzYWlkLCB3aGlsZSBMZW4gb2ZmZXJlZCB0aGlzIGJpdCBvZiBzaW1wbGUgcHJhaXNlOiAiWW91IGp1c3QgbWFkZSBhIGhhcmQgZGFuY2UgbG9vayBlYXN5LiIKQ2hpbmVzZSBpcyBhIGdhbWUgaXMgcGxheWVkIHdpdGggZm91ciBwbGF5ZXJzIGJ1dCBjYW4gYmUgcGxheWVkIHRocmVlIGhhbmRlZCBvciBoZWFkcyB1cC4gRWFjaCBwbGF5ZXIgaXMgZGVhbHQgMTMgY2FyZHMgZnJvbSBhIHN0YW5kYXJkIDUyIGNhcmQgZGVjay4gUGxheWVycyBtdXN0IGFycmFuZ2UgdGhlaXIgY2FyZHMgaW50byB0aHJlZSBwb2tlciBoYW5kczogdGhlIGZyb250ICh0aHJlZSBjYXJkcyksIHRoZSBtaWRkbGUgKGZpdmUgY2FyZHMpLCBhbmQgdGhlIGJhY2sgKGZpdmUgY2FyZHMpLiBUaGUgYmFjayBmaXZlIGNhcmRzIG11c3QgYmUgdGhlIHN0cm9uZ2VzdCBoYW5kIG9mIHRoZSB0aHJlZSwgdGhlIG1pZGRsZSBmaXZlIG11c3QgYmUgc2Vjb25kIHN0cm9uZ2VzdCwgYW5kIHRoZSBmcm9udCB0aHJlZSBtdXN0IGJlIHRoZSB3ZWFrZXN0LiBBbm90aGVyIHdheSB0byBwbGF5IGlzIHRvIGhhdmUgdGhlIG1pZGRsZSBoYW5kIGJlIHBsYXllZCB3aXRoIGEgZGV1Y2UgdG8gc2V2ZW4gbG93YmFsbCBoYW5kICh3aXRoIHRoZSBiZXN0IGhhbmQgYmVpbmcgNywgNSwgNCwgMywgMikuIE9uY2UgYXJyYW5nZWQsIHRoZSBjYXJkcyBhcmUgdGhlbiBwbGFjZWQgZmFjZSBkb3duIG9uIHRoZSB0YWJsZSB1bnRpbCBhbGwgcGxheWVycyBoYXZlIHNldCB0aGVpciBoYW5kcy4gUGxheWVycyB0dXJuIHRoZSBjYXJkcyBmYWNlIHVwLCBhbmQgdGhlIG1vbmV5IGlzIGF3YXJkZWQgaW4gdGVybXMgb2YgInBvaW50cyIuCk5vdyB3ZSBhcmUgdGFsa2luZyBhYm91dCBoaWtpbmcvanVuZ2xlIHRyZWtraW5nLiAKSSBkaXN0aW5jdGx5IHJlbWVtYmVyIHRlbGxpbmcgaGltLCBObyBJIGRvbiBsaWtlIHlvdSBsaWtlIHRoYXQsIGFuZCBJIHB1c2hlZCBoaW0gYXdheSwgYnV0IEkgd2FzIGhhdmluZyBhIGhhcmQgdGltZSBzdGF5aW5nIGNvbnNjaW91cywgYW5kIGtlcHQgcGFzc2luZyBvdXQuIApPciBkb3VibGUgZG93biBvbiB0aGUgcGxhbiBhbmQgdXNlIGVsZWN0cm9seXRpYyBtZWFucyB0byBwdWxsIENPMiBmcm9tIHRoZSBhaXIgZGlyZWN0bHkgYW5kIGNvbnZlcnQgaXQgdG8gQ08gYW5kIHByb2Nlc3MgaW50byBjYXJib24gbmV1dHJhbCBmdWVscywgYW5kL29yIGp1c3QgY29tcHJlc3MgdGhlIENPMiBhbmQgc3RvcmUgaXQgZm9yIGNoZW1pY2FsIHByb2Nlc3Nlcy4gSGF2aW5nIGFidW5kYW50LCBjaGVhcCwgZW5lcmd5IHdpbGwgbWFrZSBpdCB3b3J0aHdoaWxlLgpCb2FyZCBnYW1lcyBjb21lIGluIG9uZSBib3gsIGFuZCBSUEdzIGJvb2tzIGFuZCBkaWNlLCBidXQgdGhlIG5leHQgdHdvIHR5cGVzIG9mIGdhbWVzIHJlcXVpcmUgY29uc3RhbnQgYWRkaXRpb25zIHRvIHJlbWFpbiBjb21wZXRpdGl2ZS4gCkkgYmUgdGhhdCBndXkgYW5kIHNheSB0aGF0IGkgcGxheSB3aXRoIHdoYXRldmVyIHBlcmsgaSB3YW50IGFuZCB3aGF0ZXZlciB3ZWFwb24gaSB3YW50LCBiZWNhdXNlIGkgbGlrZSB0byBwbGF5IGhvd2V2ZXIgZml0cyBmb3IgbWUgYW5kIG5vIG9uZSB3aWxsIHRlbGwgbWUgd2hhdCBpIG5lZWQgdG8gcGxheSwgYW5kIHN0aWxsIG1hbmFnZSBIb0UgZ2FtZXMKQ2FuIEkgYnV5IHNvbWUgd2F0ZXIgdG8gZGlsdXRlIHRoYXQgc29tZSBtb3JlPyBJIHdhbnQgaXQgdG8gYmUgbW9yZSBlZmZlY3RpdmUuIEluIGZhY3QsIEkgZG9uIGV2ZW4gd2FudCBMU0QgaW4gbXkgd2F0ZXIuIApUaGUgY2FuZGxlIGlzIHRoZW4gbGl0IGFuZCB0aGUgcmVzdWx0aW5nIGdlbnRsZSBzdWN0aW9uIGFuZCB2YWN1dW0gZHJhd3MgdGhlIHdheCBhbmQgaW1wdXJpdGllcyBmcm9tIHRoZSBlYXIgYW5kIHByb2R1Y2VzIGEgbGlnaHQgc3VjdGlvbiBhY3Rpb24uIFRoaXMgdmFjdXVtIGlzIGNhdXNlZCBieSB0aGUgd2FybWVkIGFpciBmcm9tIHRoZSBmbGFtZSBhbmQgY29sZGVyIGFpciBtb3ZpbmcgdGhyb3VnaCBpdHMgaG9sbG93IGNlbnRyZS4gVGhlIG1vdmVtZW50IGFuZCBjb21wcmVzc2lvbiBiZXR3ZWVuIHRoZSBlYXIgY2FuYWwgYW5kIHRoZSBjYW5kbGUgY2hhbWJlciBnZW5lcmF0ZSBhaXIgZmxvdyBhY3RpbmcgbGlrZSBhIGNoaW1uZXkuIApGdWNrIHRoZSBjcnVzYWRlcywgYW5kIGZ1Y2sgdGhlIHdpdGNoIGh1bnRzLiAKRGF0YSB3ZXJlIGV4dHJhY3RlZCBmb3IgdGhlIGNhdGVnb3JpZXMgb2Ygc3R1ZHkgaWRlbnRpZmljYXRpb24sIHN0dWR5IGRlc2lnbiwgc2FtcGxlIGNoYXJhY3RlcmlzdGljcywgb3V0Y29tZSBtZWFzdXJlcywgcmVzdWx0cyBhbmQgY29tbWVudHMuTWV0aG9kcyBvZiBzeW50aGVzaXNIb3cgd2VyZSB0aGUgc3R1ZGllcyBjb21iaW5lZD9UaGUgc3R1ZGllcyB3ZXJlIGNvbWJpbmVkIHVzaW5nIGEgcXVhbGl0YXRpdmUgbmFycmF0aXZlIHN5bnRoZXNpcy5SZXN1bHRzIG9mIHRoZSByZXZpZXdPbmUgUkNUIGZvciBhY3VwdW5jdHVyZSAoMTYgcGF0aWVudHMpLCAxIFJDVCBmb3IgbWFzc2FnZSB0aGVyYXB5ICgyOCBwYXRpZW50cyksIGFuZCA2IFJDVHMgZm9yIGh5cG5vc2lzICgyODIgcGF0aWVudHMpLiAKWW91IGdvdCB0byBhdm9pZCBpc3N1ZXMgd2l0aCBwcmVzZW50aW5nIGJlY2F1c2UgeW91IGFyZSBhbiBleHBlcnQgb24geW91cnNlbGYgYW5kIGNhbiBkcmF3IG9uIGxpbWl0bGVzcyBpbmZvcm1hdGlvbiB3aGVuIHRhbGtpbmcuIFdoYXQgc2hvdWxkIGhhdmUgaGFwcGVuZWQgd2FzIHlvdSBkaWQgYSBidW5jaCBvZiByZXNlYXJjaCBhbmQgcHJlc2VudGVkIHRoZSBpbmZvcm1hdGlvbiB5b3UgZm91bmQuIApUaGUgZGF0YSB0aGV5IGNvbGxlY3Qgb24gdGhlIHVzZXIgYmFzZSBzaG9wcGluZyBoYWJpdCBpcyB0aGUgcmVhbCBwcm9kdWN0IG1vc3QgbGlrZWx5LiBKdXN0IGhvdyBmYWNlYm9vayBidXNpbmVzcyBpcyBzZWxsaW5nIHRoZSBkYXRhIG9mIHlvdS4gV2hpY2ggY2FuIGFkZCB1cCwgYnV0IG11Y2ggbGlrZSB0aG9zZSBzaG9wcGVyIGRpc2NvdW50IGNhcmRzLCB0aGV5IHNlcnZlIHRvIGhlbHAgaWRlbnRpZnkgYW5kIHRyYWNrIGVhY2ggY3VzdG9tZXIgYW5kIHRoZW4gaG93IHRvIHByZWRpY3QgdGhlaXIgbmVlZHMgYW5kIGJlaGF2aW91ciAod2UgYXJlbiBhcyB1bmlxdWUgYXMgd2UgdGhpbmspIGludG8gbW9yZSBzYWxlcyBmb3IgdGhlbXNlbHZlcy4KSWYgeW91J3JlIG1ha2luZyBhIGNhcmVlciBjaGFuZ2UgaW50byBwcm9qZWN0IG1hbmFnZW1lbnQsIGZvY3VzIG9uIHlvdXIgc2tpbGxzLCBpbmNsdWRpbmcgY29tbXVuaWNhdGlvbiwgcGxhbm5pbmcsIG5lZ290aWF0aW5nIGFuZCBidXNpbmVzcyBhY3VtZW4uIApVbmxlc3MgeW91IGNhbiBnZXQgYSBtYXNzYWdlIGV2ZXJ5IGRheSwgaGF2aW5nIHRob3NlIHRvb2xzIGF2YWlsYWJsZSBoZWxwcyBtYWludGFpbiB0aGUgZWZmZWN0cyBvZiB0aGUgbWFzc2FnZSBiZXR3ZWVuIHRyZWF0bWVudHMuQ29tbW9ubHkgbXkgY2xpZW50cyB3aWxsIGNvbWUgaW4gb25jZSBhIHdlZWssIHNvIGluIHRoZSA2IG9mZiBkYXlzIEkgYXNzaWduIHN0cmV0Y2hpbmcsIGV4ZXJjaXNlIGFuZCBzZWxmIG1hc3NhZ2Ugc28gdGhhdCBJIG5vdCBzdGFydGluZyBmcm9tIHNxdWFyZSBvbmUgbmV4dCB0cmVhdG1lbnQuVGhleSByZWFsbHkgd29yaywgdGhleSBjYW4gYmUgcGFpbmZ1bCwgYnV0IHRoZXkgd29yay5JIHVzZSBTd2VkaXNoIHRlY2huaXF1ZXMsIHNvIGxvdHMgb2Yga25lYWRpbmcgYW5kIG11c2NsZSBtYW5pcHVsYXRpb24gd2l0aCB0aGUgZmliZXJzLiAKSXQncyBkZWZpbml0ZWx5IG15IGJpZ2dlc3Qgd2luIG9mIG15IGNhcmVlci4gSXQncyBzb21ldGhpbmcgSSdsbCBhbHdheXMgcmVtZW1iZXIgZm9yIHN1cmUuIkkgc3RhcnRlZCBjb21pbmcgZG93biB3aXRoIHRoZSBmbHUgYW5kIHdoZW4gSSB3b2tlIHVwIEZyaWRheSBtb3JuaW5nIEkgY291bGRuJ3QgbW92ZSwgSSBoYWQgZmV2ZXIgYW5kIGFjaGVzIGFuZCBJIGNvdWxkbid0IGdldCBvdXQgb2YgYmVkLCIgaGUgc2FpZC4KVGhlIHBhcnQgb2YgdGhlIHNlbnRlbmNlIHRoYXQgY29uY2VybnMgbWUgaXMgImFsbCB0aGUgd2F5cyBJIGRpc2FwcG9pbnRlZCB5b3Ugb3ZlciB0aGUgeWVhcnMuIiBJIHRyYW5zbGF0ZSB0aGlzIGFzOiB5b3Ugd2VyZSBkaXNhcHBvaW50ZWQgd2l0aCBteSBwYXJlbnRpbmcsIGFuZCB0aGF0IHlvdXIgZmF1bHQsIGJ1dCBJIGJlIHRoZSBCaWdnZXIgUGVyc29uIGFuZCBhcG9sb2dpemUuCkVESVQ6IFdhcyBpbmZvcm1lZCBieSBhbm90aGVyIHBvc3RlciB0aGF0IHRoZSBTdXByZW1lIENvdXJ0IHJlY2VudGx5IHJ1bGVkIGluIGZhdm9yIG9mIGEgcGxhaW50aWZmIGRpc3B1dGluZyBhIGNpdmlsIGFzc2V0IGZvcmZlaXR1cmUgY2FzZS4gCkhvbWluaXMpLCBpY2ksIGxlcyBnYWxsZXMgZHUgY2huZSBwcm92aWVubmVudCBkZSBsYSBwaXFyZSBkIHZvbGFudHMsIGxlcyBjeW5pcHM6LiAKRGFzIGJlbGllYnRlLCBhdWYgZGVuIElzbGUgb2YgTWFuIGxpemVuemllcnRlICBoYXQgZXJzdCBrdXJ6IHp1dm9yIGRpZSBwaGFudGFzdGlzY2hlIE5ldWlna2VpdCBmcmV1ZGlnIHZlcmtuZGV0LCBkYXMgIFBobm9tZW4gaW4gZGFzIGVybGVzZW5lIFRlYW0gYXVmZ2Vub21tZW4genUgaGFiZW4sIHVtIGdsZWljaCBpbSBBbnNjaGx1c3MgZGFyYW4gZGllc2UgTmV1aWdrZWl0IGR1cmNoIGRpZSBIaW56dWZndW5nIGRlcyBlcmZvbGdyZWljaHN0ZW4gc2xvd2FraXNjaGVuIHMgYmVyaGF1cHQgaW4gZGllIGdlc3BvbnNlcnRlIE1hbm5zY2hhZnQgbm9jaG1hbHMgenUgdG9wcGVuLiBNYWkgMjAxMCBiZWdpbm5lbiB3aXJkIHVuZCBiZXIgdm9sbGUgMiBXb2NoZW4gYW5kYXVlcm4gd2lyZC4gClRoZXJlIG5vIGluZGljYXRpb24gaW4gdGhlIExBT1AgdGhlIHNjaG9vbCBhY3R1YWxseSBiYW5zIFZQTiB1c2UsIHRoZXkganVzdCB3YW50IHRvIHZlcmlmeSBpdCB1c2VyIGluaXRpYXRlZC4gCkl0IHZlcnkgc3RyYW5nZSBidXQgaGUgaXMgc28gc2Vuc2l0aXZlIHRoYXQgaGUgY2FuICJmZWVsIiBwZW9wbGVzIGVuZXJneSwgYW5kIGhlIGNhbiBoZWxwIHJlZHVjZSBwYWluIGJ5IHBsYWNpbmcgaGlzIGhhbmQgb3ZlciBzdHJhdGVnaWMgcG9pbnRzICh3aXRob3V0IGFueSBjb250YWN0KS4gSSB3YXMgc2NlcHRpYyBvZiBjb3Vyc2UsIGJ1dCBpdCBoZWxwZWQgbWUgYSBsb3QuIEhlIHRvbGQgdXMgdGhhdCBhbnl0aGluZyBpcyBhYm91dCBlbmVyZ3kuIApJIGhhdmUgaGFkIHRoaXMgdXBwZXIgYmVsbHkvcmliIHBhaW4gb24gdGhlIHJpZ2h0IHNpZGUuIEl0IGlzIGluIGZyb250LCB1bmRlciBteSByaWdodCBicmVhc3QuIApUaGV5IGxpdGVyYWxseSBjYW50IGNhcmUgYW55bW9yZSBpbiB0aGUgYmlnIHBpY3R1cmUgdGhleSBubyBsb25nZXIgdGhlaXIgcG9zc2Vzc2lvbnMgdGhleSBoYXZlIG5vIGNvbnRyb2wgb3ZlciB3aGF0IGhhcHBlbnMgdG8gdGhlbS4gCklraW5jaXNpIGluc2FubGFyIGJhbmEga2lzaXNlbCBvbGFyYWsgc2FsZGlyaXlvciwgaGF0dGEgbWVzYWpsYSB0YWNpeiBlZGl5b3JsYXIsIGJhc2thIGt1bGxhbmljaSBib2sgZm90b2dyYWZpIGdvbmRlcml5b3IuIFNlbiBBeXNlIEh1ciBwcm9taW5lbnQgb2xtYWRpZ2luaSBtaSBkdXN1bnV5b3JzdW4/IFRhbWFtIGFtYSBuZXllIGdvcmUgYm95bGUgZHVzdW51eW9yc3VuPyBZYXpkaWdpIGJpciBzZXlpIG9rdW1hZGFuIG5hc2lsIHlvcnVtIHlhcGFiaWxpeW9yc3VuPyAiSWxiZXIgb3J0YXlsaSBib3lsZSBkZWRpIiAoYnVudSBnb25kZXJlbiB2YXIgeXVrYXJpZGEpIGRpeWUgaGFiZXIgZ29uZGVybWlzIGFkYW0uIEhhbGJ1a2kgeWFwbWFzaSBnZXJla2VuIHNhZ2xpa2xpIGJpciB0YXJ0aXNtYWRhIGdvbmRlcmlsZW4gc2V5aSBva3VtYWsgdmUgZmlraXIgYmV5YW4gZXRtZWsgZGVnaWwgbWk/ClRoYXQncyB0aGUgcHJvYmxlbSwgaXRzIGVmZmVjdGl2ZWx5IGltcG9zc2libGUgdG8gZ2l2ZSA0MDArIGNoYXJhY3RlcnMgYSBkZWNlbnQgc2NyZWVuIHRpbWUgaW4gdGhlIG1haW4gc3RvcnkuIFRoZSBwYXJhbG9ndWVzIGJlaW5nIHNlbGYgY29udGFpbiBpcyB0aGUgb25seSByZWFzb24gdGhleSBoYXZlIGEgc2VtaSBkZWNlbnQgcGxvdC4gClBlcnNvbmFsbHksIEkganVzdCBkb24ndCBmaW5kIGhlciBvdmVybHkgaW5zcGlyaW5nIG9yIGNoYXJpc21hdGljLiBIZXIgYmlnIG1vbWVudHMgZHVyaW5nIHNlbmF0ZSBpbnZlc3RpZ2F0aW9ucyBmZWx0IGxpa2UgcG9vcmx5IG9yY2hlc3RyYXRlZCAiZ290Y2hhIiBtb21lbnRzLiBTaGUgd2FzIGRlc3BlcmF0ZSB0byBzY29yZSB0aGF0IHNvdW5kIGJ5dGUuIEV2ZXJ5b25lIGRvZXMgaXQsIGJ1dCB0aGUgYmV0dGVyIG9uZXMgZG9uJ3QgbWFrZSBpdCBxdWl0ZSBzbyBvYnZpb3VzLiBBcyBhbiBhc2lkZSwgc2hlIGFsc28gaGFzIGFscmVhZHkgYmVlbiB0aGUgbWFqb3IgdGFyZ2V0IG9mIHRoZSBOUkEgYW5kIGlzIGNvbnNpZGVyZWQgdGhlIDJuZCBhbWVuZG1lbnQgYm9vZ2llIG1hbiB0byB0aGUgcmlnaHQuIFNvbWUgd2lsbCB2aWV3IHRoYXQgYXMgaW5zaWduaWZpY2FudCwgb3RoZXJzIHdpbGwgdGhpbmsgaXQncyBhIGRlYXRoIGtuZWxsIGR1ZSB0byB0aGUgTWlkd2VzdC4gSSdtIG5vdCBzdXJlIHRoZSBpbXBvcnRhbmNlLCBidXQgaXQgaXMgYSBjb25zaWRlcmF0aW9uLgpBbm4gSHVpIHNoYXJlcyB0aGUgc3RvcmllcyBvZiBzbWFsbCB0b3duIENoaW5lc2UgcmVzdGF1cmF0ZXVycyBmcm9tIGNvYXN0IHRvIGNvYXN0IGluIENob3AgU3VleSBOYXRpb25JZiB0aGVyZSdzIGEgc2luZ2xlIGRpbmluZyBleHBlcmllbmNlIHlvdSBjYW4gY291bnQgb24gaW4gc21hbGwgdG93biBDYW5hZGEsIGl0J3MgZm91bmQgYXQgdGhlIGxvY2FsIENoaW5lc2UgcmVzdGF1cmFudC4gCld5bm4gcmVzaWduZWQgYXMgY2hhaXJtYW4gYW5kIENFTyBvZiBXeW5uIFJlc29ydHMgb24gRmViLiA2LCBsZXNzIHRoYW4gdHdvIHdlZWtzIGFmdGVyIHRoZSBzdG9yeSBicm9rZS4KQSBsb3Qgb2YgdXMgZG9uJ3Qga25vdyBvdXIgc3Rvcmllcy4gClRoZXkgYXJlbiBleGFjdGx5IGRpc2NyaW1pbmF0aW5nIGluIHRoZWlyIHJvbWFudGljIGVuY291bnRlcnMuIFdlIGFscmVhZHkgc2VlIHNpZ25zIG9mIGEgZG9nIGNlbnRyaWMgY3VsdHVyZS4gCk9uIHNlbWJsZSBlc3RpbWVyIHF1ZSAxNSBhbnMgZXN0IGwnZ2UgImxnYWwiIHBvdXIgbGUgY29uc2VudGVtZW50ICB1biByYXBwb3J0IHNleHVlbCwgbWFpcyBxdWUgbCdvbiBwcmVuZCBkYXZhbnRhZ2UgZW4gY29tcHRlIGxhIG1hdHVyaXQgZXQgbGEgY29uc2NpZW5jZSBkZSBsJ2VuZmFudCwgc2kgamUgY29tcHJlbmRzIGJpZW4gOiByYWlzb24gcG91ciBsYXF1ZWxsZSB1bmUgZXhjZXB0aW9uIGEgdCBhY2NvcmRlICB1biBtaW5ldXIgZGUgMTMgYW5zLgpJIHRoaW5rIHRoZXJlIGlzIGEgc21hbGwgZ3JvdXAgdGhhdCBpcyB0cnlpbmcgdG8gcHVzaCBpdCB0b3dhcmRzICJvcmllbnRhdGlvbiIgYnV0IHRoYXQgaXMgcHJldHR5IGRhbmdlcm91cyBhbmQgaG9uZXN0bHksIGF0IGxlYXN0IGluIElNTywgZGlzcmVzcGVjdGZ1bCB0byBnYXkgcGVvcGxlLgpCeSBtaWQgTWF5IGRhdGVycyBjb29sZWQgb24gbG9ic3RlciByb2xscyBhbmQgd2VyZSBlYXRpbmcgb3lzdGVycy4uIAogNSBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvUGVyZmVjdGx5IGZhaXIgYXJndW1lbnQuIEJ1dCBJIGV4cGVjdCBtb3JlIGxlYWRlcnNoaXAgYXMgYW4gYWxsIGJsYWNrIGNhcHRhaW4gYW5kIEkgZG9uJ3QgYmVsaWV2ZSBoZSBzaG93cyBpdCB3aXRoIHNvbWUgZGVjaXNpb25zLCBoaXMgYm9keSBsYW5ndWFnZSBpbiBpbXBvcnRhbnQgc2l0dWF0aW9ucyBhbmQgc29tZSBjb21tZW50cyBoZSBtYWtlcy4gClNvbWV0aGluZyBJIGRvbmUgYXMgd2VsbCBpcyB0byBmbHkgYSBzaWduLiBNb3N0IHRoZSB0cmFpbmluZyBkb25lIGluIGJvb3QgY2FtcCwgdGhleSBvbmx5IHB1dCBhIDEvNCBvciAxLzIgYSB0YWIgaW4gdGhlIGNvb2tlciBhbnl3YXlzLCB0aGUgZ2FzIGlzIHNvIHRoaW4gdGhlcmUgcmVhbGx5IGlzIG5vIG5lZWQgdG8gcGFuaWMuIApIb3cgaGlzdG9yeSBpcyBhbHdheXMgdGFraW5nIHRoZXNlIHR3aXN0cyBhbmQgdHVybnMgYW5kIGl0IHRoZSByYXJlIHBlcnNvbiB3aG8gcmlkZXMgaGlzdG9yeSB3aXRoIHBlcmZlY3Qgc3VjY2Vzcy4uIApUaGVzZSBhbHNvIHdvcmsgZ3JlYXQgaW4gdGhlIGNhciBvciBpbiBhIGNsb3NldCBzaW5jZSB5b3UgZG9uJ3QgaGF2ZSB0byB3b3JyeSBhYm91dCBibG93aW5nIG91dCB0aGUgY2FuZGxlIGFuZCBiZWluZyBob21lIGZvciBpdCB0byB3b3JrLi4gCkkgd291bGQgZmlyc3QgbG9vayBpbnRvIHRoZSBvdGhlciBraW5kIG9mICJnYW1lIHNob3BzIiwgdGhlIGJpbGxpYXJkIGtpbmQuIApTb21lIHdpbGwgcGF5IHlvdXIgJDIwOyBvdGhlcnMgd2lsbCBwYXkgeW91ICQ4MCBvciAkMTAwLiAKQW5kIHdoZW4gTGVCcm9uIGxlYXZlcywgYXMgdGhlIENhdnMga25vdyBhbGwgdG9vIHdlbGwsIHRoZSBwYXRoIGJhY2sgdG8gY29udGVudGlvbiBjYW4gc2VlbSBtb3JlIGltcG9zaW5nIHRoYW4gS2VuZHJpY2sgUGVya2lucyBpbiBhIHN1aXQuIFRoaXMgdGltZSwgdGhlcmUgYXJlIGFkZGl0aW9uYWwgaHVyZGxlcyBha2EgdGhlIGZpdmUgcGxheWVycyBub3QgbmFtZWQgTGVCcm9uIHdobyBhcmUgc2V0IHRvIG1ha2UgYXQgbGVhc3QgJDEyLjUgbWlsbGlvbiBpbiB0aGUgc2Vhc29uIGFmdGVyIEphbWVzIGhhcyB0YWtlbiBoaXMgdGFsZW50cyBlbHNld2hlcmUuLiAKQW55IHRvdXJuYW1lbnQgZ2FtZSB3aGVyZSBhIFRlcnJhbiBsb3NlcyB0byBhIHNpbWlsYXIgbGV2ZWwgWmVyZyAvIFByb3Rvc3M6IC8gUFJPVE9TU0VEIFNPIEJST0tFTiAvIFVORkFJUiAvIElNQkFMQU5DRUQgdG91cm5hbWVudCBnYW1lIHdoZXJlIGEgVGVycmFuIHdpbnMgYWdhaW5zdCBhIHNpbWlsYXIgbGV2ZWwgWmVyZyAvIFByb3Rvc3M6IFNPIEdPT0QgZG9lc24gZG8gd2VsbCBmb3IgYSBzaW5nbGUgdG91cm5hbWVudDogVEVSUkFOIC8gWFlaIGtub3cgYWxsIHBsYXllcnMgYXJlIGJpYXNlZCB0byBzb21lIGV4dGVudCBidXQgdGhlIGxldmVscyBvZiBUZXJyYW4gd2hpbmluZyBhcmUganVzdCBmdWNraW5nIGluY29tcHJlaGVuc2libGUuIApYIG9mIGEgS2luZCBwcm9ibGVtcyBhcmUgc2VsZiBleHBsYW5hdG9yeSAgIGlmIHlvdSBoYXZlIFggb2YgYSBraW5kLCB0aGVuIHlvdSBoYXZlIFggY2FyZHMgb2YgdGhlIHNhbWUga2luZCBvbiB5b3VyIGhhbmQuIFRoZXJlIGFyZSB1c3VhbGx5IHR3byBvZiB0aGVzZTogdGhyZWUgb2YgYSBraW5kIGFuZCBmb3VyIG9mIGEga2luZC4gCkl0IHdpbGwgYXQgbGVhc3Qga2VlcCBoaXMgbmFtZSB2aWFibGUgaW4gdGhlIG1hcmtldCBpZiBzb21ldGhpbmcgaW4gbG9jYWwgbW9ybmluZyBvciBhZnRlcm5vb24gZHJpdmUgcmFkaW8gb3BlbmVkIHVwLiBSYWRpbyBzdGF0aW9ucyBhcmUgcmVndWxhcmx5IHNodWZmbGluZyBwZXJzb25uZWwsIGFzIEtub3gga25vd3MgZnVsbCB3ZWxsLgpUaGUgd29yc3QgaXMgd2hlcmUgdGhlIHN0b3JlIG9ubHkgZ2l2ZXMgYmFncyB1cCBmcm9udCBpbnN0ZWFkIG9mIGdldHRpbmcgYSBjb3VudCBhZnRlcndhcmRzICAgeW91IGNhbiB1c2Ugb25lIGJhZyBhdCBhIHRpbWUgZnJvbSB0aGUgbmljZSBkaXNwZW5zZXIsIG5vIHlvdSBoYXZlIHRvIHRlbGwgdGhlbSBob3cgbWFueSBiYWdzIHlvdSBnb2luZyB0byBuZWVkIGFoZWFkIG9mIHRpbWUsIGFzIGlmIHlvdSBrbm93IGhvdyBpdCByZWFsbHkgZ29pbmcgdG8gZ28sIGFuZCB0aGV5IHBlZWwgb2ZmIGEgYnVuY2ggYWxsIHN0dWNrIHRvZ2V0aGVyIGFuZCBkdW1wIHRoZW0gaW4gYSBsdW1wIGluIGZyb250IG9mIHlvdSBhbmQgc3RhcnQgYmlvbmljIHNjYW5uaW5nIHlvdXIgc2hpdCBpbnRvIGEgcGlsZSBiZWZvcmUgeW91IGNhbiBldmVuIGdldCB0aGUgZmlyc3QgYmFnIHVuZnVja2VkIGVub3VnaCB0byBzdGFydCBiYWdnaW5nLiAKUmVhbGx5LCBhbGwgeW91IG5lZWQgdG8gZG8gaXMgaW5jbHVkZSBhIGZpbmFsIHNjZW5lIHdoZXJlIFRoZSBPcnBoYW5hZ2UgdHVybnMgb3V0IHRvIGJlIHRlbnRhY2xlIHJpZGRlbiB3b3JzaGlwcGVycyBvZiBDdGh1bGh1IG9yIHdoYXRldmVyLCBhbmQgZmFkZSB0byBibGFjayBhcyB0aGUgaGVybyBpcyBzdWNrZWQgaW50byB0aGUgYWJ5c3MuLiAKSWwgZmF1dCBlbiBlZmZldCB0ZW5pciBjb21wdGUgZGVzIHJpc3F1ZXMgZCdlbmNvbWJyZW1lbnRzIGR1IGJvdWxldmFyZCBkZSBsYSBDaGFwZWxsZSBzaSBsZXMgZGNoYXJnZW1lbnRzIHRycyBpbXBvcnRhbnRzIHNlIGZvbnQgZW4gbW1lIHRlbXBzIHF1ZSBjZXV4IGRlcyBjb21tZXJhbnRzIGR1IG1hcmNoLiBJbCBzJ2FnaXQgZCd1biB0ZXN0LiAKTGUgMjYgb2N0b2JyZSBkZXJuaWVyLCBub3VzIGRwbG9yaW9ucyBsZSBzaWxlbmNlIGRlIGwnSHRlbCBkZSBWaWxsZSAgcHJvcG9zIGRlIGxhIFByb21lbmFkZSBVcmJhaW5lLCBsZSBmYW1ldXggcHJvamV0IGRlIHJlbm91dmVsbGVtZW50IHVyYmFpbiBkdSB0cm9ub24gQmFyYnMgQ2hhcGVsbGUgU3RhbGluZ3JhZC4gRW4gZWZmZXQsIEFjdGlvbiBCYXJicyB0YW50ICBsJ29yaWdpbmUgZGUgbCdpZGUgZGUgUHJvbWVuYWRlIFVyYmFpbmUsIGltYWdpbmUgZHMgMjAxMywgZXQgcHJzZW50ZSBhdXggZGlmZnJlbnRzIGNhbmRpZGF0cyBhdXggTXVuaWNpcGFsZXMgZW4gMjAxNCwgbm91cyBhdm9ucyB0b3Vqb3VycyBzdWl2aSBkZSB0cnMgcHJzIHNhIG1pc2UgZW4gb2V1dnJlLiAKQ2FzaGVkIG91dCkgaW4gdGhpcyBmYXNoaW9uLiBUaGlzIG1vZGVsIGFuZCBwcm9jZXNzIGlzIHBhcnQgb2YgVkdXJ3MgcGF0ZW50IHBlbmRpbmcuLiAKVGhlcmUgYXJlIG90aGVyICQxMCwwMDAgYnV5IGlucywgbW9zdCBub3RhYmxlIGF0IHRoZSBIT1JTRSBjaGFtcGlvbnNoaXAgc3RhcnRpbmcgb24gMjNyZCBKdW5lLiAKU3Vic2VxdWVudCB0byBpdHMgc3VjY2VzcyB0aGVyZSBoYXMgYmVlbiBhIHJlY29uY2lsaWF0aW9uIGJldHdlZW4gY29tcGV0aW5nIHNjaG9vbHMgb2YgdGhvdWdodC4gS2V5bmVzIG93biB3cml0aW5nIHdhcyBub3Qgb3Bwb3NlZCB0byBtb25ldGFyeSBpbnRlcnZlbnRpb24gb3IgbW9kdWxhdGlvbiBidXQgcmF0aGVyIGZvY3VzZWQgb24gdGhlIGZyaW5nZSBjYXNlIHdoZXJlIGl0IGZhaWxzOiBzdHJvbmcgbW9uZXRhcnkgdGhlb3J5IHdhcyBsYWlkIHRvIHJlc3Qgd2l0aCB0aGUgZ3JlYXQgZmluYW5jaWFsIGNyaXNpcyBzaG93aW5nIHRoZSBpbXBvdGVuY2Ugb2YgbW9uZXkgc3VwcGx5IGV4cGFuc2lvbiBhdCB0aGUgemVybyBsb3dlciBib3VuZC4gClByb3NlY3V0b3JzIGhhdmUgc2FpZCB0aGUgbXVyZGVyIHdlYXBvbiB3YXMgYSAuNDUgY2FsaWJlciBwaXN0b2wsIGJ1dCB0aGF0IGhhcyBuZXZlciBiZWVuIGZvdW5kLiAKV2hlbiBpdCBjYW1lIHRvIGV4cGVydCBvcGluaW9uIG9uIE1yLiAKU2F3IG9uZSBvZiBteSBmYXZvcml0ZSBESiBhdCBhIGZlc3RpdmFsIG9uZSB0aW1lIGFuZCBJIHdhcyBwcmV0dHkgYnV6emVkIGJ1dCBhbHNvIGV4dHJlbWVseSBoYXBweSBJIHdhcyBqdXN0IHRoZXJlIHdpdGggbXkgZ3JvdXAgb2YgZnJpZW5kcyBlbmpveWluZyBsaWZlIGFuZCBoYWxmIG9mIHRoZW0gZGlkbiBsaWtlIHRoZSBESiBidXQgd2VudCB0byB0aGUgc2V0IGp1c3QgY3V6IHRoZXkga25ldyBpdCB3YXMgb25lIG9mIG15IGZhdm9yaXRlcy4gSGUgcGxheWVkIHRoaXMgc29uZyBhbmQgSSBqdXN0IGh1Z2dlZCB0aGUgZnJpZW5kIGNsb3Nlc3QgdG8gbWUgYW5kIHRoZSBvdGhlcnMganVzdCBraW5kYSBqb2luZWQgaW4gYSBiaWcgZ3JvdXAgaHVnIGJ1dCBpdCBjYXVzZWQgb3RoZXIgcHBsIHRvIGpvaW4gaW4gb24gdGhpcyBncm91cCBodWcgc28gaXQgdHVybmVkIG91dCBodWdlLiBNb21lbnRzIGxpa2UgdGhhdCBtYWtlIG1lIGhhcHB5LiAKVGhlbiBTZW5kIDguIEluIDIgbWlucyB1IHdpbGwgZ2V0IHBhc3N3b3JkIC4gCiJJJ3ZlIGJlZW4gdG9sZCBJJ20gaW50aW1pZGF0aW5nLCIgSXZleSBzYXlzLCAidGhhdCBzaXR0aW5nIGFjcm9zcyBmcm9tIG1lIGlzIGZyaWdodGVuaW5nLiBPciB0aGF0IG15IHN0YXJlIGFsb25lIGlzIGVub3VnaCB0byBtYWtlIGEgcGxheWVyIGNydW1ibGUuIEJ1dCBJJ20ganVzdCBzaXR0aW5nIGhlcmUsIHBsYXlpbmcgdGhlIHNhbWUgZ2FtZSB5b3UgYXJlLiAgV2VsbCwga2luZCBvZi4iClE5cyBRdWVlbiBhbmQgbmluZSwgc3VpdGVkIChvZiB0aGUgc2FtZSBzdWl0KSAoVGhlICJzIiBtZWFucyBzdWl0ZWQsIHNvIGlmIGl0IHdlcmUgUTkgd2l0aG91dCB0aGUgInMsIiB0aGF0IGluZGljYXRlcyB0aGUgY2FyZHMgYXJlIG9mIGRpZmZlcmVudCBzdWl0cy4pCldlIGFyZSBoYXBweSB0aGF0IHdlIGdvdCB0aGUgb3Bwb3J0dW5pdHkgdG8gcGxheSBob3N0IHRvIEtoZWxQbGF5IEZpZXN0YS4/LiAKKFByaXZhY3kgUG9saWN5KUNsb3VkZmxhcmVUaGlzIGlzIGEgY2xvdWQgQ0ROIHNlcnZpY2UgdGhhdCB3ZSB1c2UgdG8gZWZmaWNpZW50bHkgZGVsaXZlciBmaWxlcyByZXF1aXJlZCBmb3Igb3VyIHNlcnZpY2UgdG8gb3BlcmF0ZSBzdWNoIGFzIGphdmFzY3JpcHQsIGNhc2NhZGluZyBzdHlsZSBzaGVldHMsIGltYWdlcywgYW5kIHZpZGVvcy4gCk1zIFdhbGxhY2Ugc2FpZCBwcm9ibGVtIGdhbWJsaW5nIHRvb2sgYSBoZWF2eSB0b2xsLiAKIDkgcG9pbnRzICBzdWJtaXR0ZWQgMTcgaG91cnMgYWdvV2hlbiBJIHdhcyBhYm91dCA0IG9yIDUgbXkgZmFtaWx5IHdhcyBvbiB2YWNhdGlvbiBpbiBGTCBhbmQgSSBnb3QgYSBzaWx2ZXIgZG9sbGFyIGZyb20gc29tZSBndXkgb24gdGhlIGJlYWNoLCB0dXJuZWQgb3V0IHRvIGJlIHRoZSBvcGVuaW5nIGZvciBhIHBpdGNoIHRvIGNvbWUgaGVhciBhYm91dCB0aW1lIHNoYXJlcy4gTXkgcGFyZW50cyB3b3VuZCB1cCBidXlpbmcgdHdvIHdlZWtzIGF0IGEgZ29sZiByZXNvcnQgaW4gdGhlIGxha2VzIHJlZ2lvbiBvZiBOSC5Gb3IgdGhlIG5leHQgZGVjYWRlIEkgaGF2ZSBmb25kIG1lbW9yaWVzIG9mIGZhbWlseSB2YWNhdGlvbnMgdXAgdGhlcmUuIApOb3VucyBhbmQgdmVyYnMgb2Z0ZW4gZ2V0IG1peGVkIHVwIHRob3VnaCAgIHNvIGlmIEkgYW0gdGhpbmtpbmcgYWJvdXQgc29tZXRoaW5nIGxpa2UgQ2FsY3VsdXMgdGhhdCBJIGxlYXJuZWQgaW4gRW5nbGlzaCBJIHdpbGwgdGhpbmsgYWJvdXQgYWxsIHRoZSB3b3JkcyBhcyBJIGtub3cgdGhlbSBmcm9tIEVuZ2xpc2ggZXZlbiB0aG91Z2ggdGhlIHJlc3Qgb2YgdGhlIHNlbnRlbmNlIGlzIEdlcm1hbi4gCkRyaXZpbmcgb3V0IHRoZXNlIHBlb3BsZSB3aWxsIGh1cnQgdXMgaW4gdGhlIGxvbmcgcnVuIG9yIGF0IGxlYXN0IGxpbWl0IHBvdGVudGlhbCBlY29ub21pYyBhbmQgY3VsdHVyYWwgZ3Jvd3RoLi4gCiJJIHNlZSBhIHF1aWV0LCBjb25maWRlbnQsIGNhbG1uZXNzIHRvIGhpbSwiIERlR3VhcmRpYSBzYWlkLiAKQmVjYXVzZSBvZiBOTVMsIEJsdW1lIHNheXMsIGEgYnV5ZXIgd2hvIHdhbnRlZCAyMDAgc2hhcmVzIHdvdWxkIGVuZCB1cCB3aXRoIDEwMCBmcm9tIENoaWNhZ28gYXQgJDIwIGFuZCAxMDAgZnJvbSBOZXcgWW9yayBhdCAkMjAuMDIsIHNpbmNlIHRob3NlIHdvdWxkIGJlIHRoZSB0d28gYmVzdCB0b3Agb2YgdGhlIGJvb2sgcHJpY2VzLiBJbiBmYWN0LCB0aGUgYnV5ZXIgd291bGQgaGF2ZSBiZWVuIGJldHRlciBvZmYgZ2V0dGluZyBhbGwgdGhlIHNoYXJlcyBpbiBDaGljYWdvLCBidXQgdGhlICQyMC4wMSBvZmZlciB0aGVyZSB3b3VsZCBub3QgYmUgdmlzaWJsZS4uIApJIGNhbWUgaW4gd2l0aCBubyBleHBlY3RhdGlvbnMgYW5kIEkgZGlkbid0IGtub3cgYW55dGhpbmcgYWJvdXQgcG9rZXIgYW5kIGhhZCB6ZXJvIGJhY2tncm91bmQuIApQbGVhc2Ugd2FpdCA3IGRheXMgYmVmb3JlIHJlcG9zdGluZyBhbiBhZC4gSWYgcGFyYW1ldGVycyBvZiBhIGpvYiBoYXZlIGNoYW5nZWQgc28gbXVjaCB0aGF0IGEgbmV3IGFkIGlzIHdhcnJhbnRlZCwgYSBuZXcgYWQgY2FuIGJlIHBvc3RlZCB3aXRoaW4gNyBkYXlzLgpBIHZyYWkgZGlyZSwgY2V0dGUgdm9jYXRpb24gZGUgZmFudG1lcyBtYWplc3R1ZXV4IG91IGdyYWNpZXV4IHNlcmFpdCwgZW4gZmF2ZXVyIGRlcyB2aWVpbGxlcyBmb3JtdWxlcywgdW4gcGxhaWRveWVyIGluc3VmZmlzYW50OiBsYSB0aHJhcGV1dGlxdWUgZXN0IHVuZSBzY2llbmNlIHRyb3AgYXVzdHJlIHBvdXIgZm9ybWVyIHNlcyBsb2lzICBsIGRlIGxhIHNlbnRpbWVudGFsaXQgZXQgaWwgc2VyYWl0IGR1IGRlcm5pZXIgcmlkaWN1bGUgcXUgbWVtYnJlIGRlIGxhIGNvbW1pc3Npb24gY2hhcmdlIGRlIHJ2aXNlciBsZSBDb2RleCBhcHBvcnR0ICBjZXR0ZSBtaXNzaW9uIGF1Z3VzdGUgdW5lIG1lbnRhbGl0IGRlIHRyb3ViYWRvdXIgb3UgZGUgcG90ZSByb21hbnRpcXVlLiAKQWxzbyBhbnkgYm9sdCBhY3Rpb24gLjMwOCBtYWRlIGJ5IFJ1Z2VyLCBTYXZhZ2UsIFRpa2thLCBNb3NzYmVyZywgb3IgUmVtaW5ndG9uIHdpbGwgZG8gdGhlIHRyaWNrLiAKVGhlIHByZXNzdXJlIGV4ZXJ0ZWQgYnkgdGhlIG1hc3NhZ2UgdGVjaG5pcXVlIGNvbXByZXNzZXMgYW5kIHJlbGVhc2VzIGJsb29kIHZlc3NlbHMgd2hpY2ggc3VwcGxlbWVudHMgdGhlaXIgbm9ybWFsIHB1bXBpbmcgYWN0aW9uLiAKTmV2ZXIgcmVhbGl6ZWQganVzdCBob3cgYWdncmVzc2l2ZSB5b3UgYXJlIHN1cHBvc2VkIHRvIGJlIHdoZW4gZG9pbmcgQ1BSIGV2ZW4gdGhvdWdoIEkgZ29uZSB0aHJvdWdoIHRoZSBtYW5kYXRvcnkgY2VydGlmaWNhdGlvbiBjbGFzcyBzZXZlcmFsIHRpbWVzLi4gCmVsbGUgYXVnbWVudGVyIGxhIGNvbnNvbW1hdGlvbiBjaGV6IGxlcyBhZG9zCiJXZSBoYXZlIG5ldmVyIGhhZCBhbnkgaW50ZW50aW9uIG9mIGxlYXZpbmcuIFBlcnNvbmFsbHksIEkgZmVlbCBtb3JlIHRvdGFsbHkgd2VsY29tZWQgYW5kIGFmZmlybWVkIGFzIGEgcGFydG5lcmVkIGxlc2JpYW4gY2xlcmd5IHdvbWFuLiAKQ291cnNlIGhhcyBhIGNvdXJzZSByZXByZXNlbnRhdGl2ZS4gSWYgeW91IGhhdmUgYW55IHByb2JsZW1zIHdoaWNoIGNvbmNlcm4geW91ciBhY2FkZW1pYyBwZXJmb3JtYW5jZSwgZm9yIGV4YW1wbGUsIHlvdSBzaG91bGQgYWx3YXlzIHNwZWFrIHRvIGFuIGFjYWRlbWljIHJlcHJlc2VudGF0aXZlLCBhIHN0dWRlbnQgcmVwcmVzZW50YXRpdmUgb24geW91ciBjb3Vyc2UsIG9yIHNwZWFrIHRvIHlvdXIgcGVyc29uYWwgdHV0b3IsIHdobyBhcmUgdGhlcmUgdG8gaGVscCB5b3UgaWYgeW91IGhhdmUgYW55IGNvbmNlcm5zIG9yIHByb2JsZW1zIHdpdGggeW91ciB1bml2ZXJzaXR5IGxpZmUuIHN0dWR5aW5nIEludGVybmF0aW9uYWwgTGF3CktpbmQgb2YgZXhwb3NlcyB0aGUgYWJqZWN0IGh5cG9jcmlzeSBvbiB0aGVpciBwYXJ0LiBTY2hlZXIgdHJ5aW5nIHRvIHBvc2l0aW9uIGhpbXNlbGYgYXMgdGhlIGNoaWVmIHByb3NlY3V0b3IgImRlbWFuZGluZyBUcnVkZWF1IHJlc2lnbiIgaXMgc29tZSBmdWNraW5nIHNlcmlvdXMgbWVudGFsIGd5bW5hc3RpY3MuLiAKQXQgbGVhc3QsIHRoaXMgaXMgd2hhdCBJIG9ic2VydmVkIGFzIGEgbWFpbmx5IHN1cHAuIApTZXJpb3VzbHksIEknZCBiZSB3b3JyaWVkIG5vdCBvbmx5IGFib3V0IHRoZSBwb3RlbnRpYWwgZmlyZSBidXQgdGhlIHV0dGVyIGluc2FuaXR5IG9mIHRyeWluZyB0byBleHBsYWluIHRvIHRoZSBmaXJlIGRlcGFydG1lbnQgdGhhdCB0aGUgYmxhemUgc3RhcnRlZCB3aGlsZSBzaGUgd2FzIGNvb2tpbmcgc29tZSBzYXVzYWdlIGFuZCB0aGUgYmFsbHMgb24gdGhlIHNpZGUgb2YgdGhlIHBhbiBidXJzdCBpbnRvIGZsYW1lcy4gVGhleSdyZSBnb2luZyB0byBhc3N1bWUgc2hlJ3MgSmVmZnJleSBEYWhtZXIgYmVmb3JlIHNoZSBnb2VzIG9uIHRvIGV4cGxhaW4gdGhhdCB0aGV5IHdlcmUganVzdCBjcm9jaGV0ZWQgdGVzdGVzIGFuZCB0aGVyZSdzIG5vdGhpbmcgd2VpcmQgaGFwcGVuaW5nIGluIHRoZWlyIGhvdXNlIGF0IGFsbC4uIAoiWWVhaCwgc3ByaW50ZXJzIGFuZCBHQyByaWRlcnMgaGF2ZSBkaWZmZXJlbnQgdHlwZXMgYmVjYXVzZSB0aGVpciBtdXNjbGVzIHdvcmsgZGlmZmVyZW50bHkuIFRoZSBiaWdnZXN0IGRpZmZlcmVuY2UgaXMgdGhlIG1hc3NhZ2UuIEl0J3MgdG90YWxseSBkaWZmZXJlbnQgYmVjYXVzZSBzcHJpbnRlcnMgbmVlZCB0byBnZXQgb3V0IHRoZSBtYXhpbXVtIHdvcmsgaW4gYSB2ZXJ5IHNob3J0IHRpbWUsIGFuZCBmb3IgdGhlIGVuZHVyYW5jZSB3b3JrIHdpdGggdGhlIEdDIHJpZGVycyBpdCdzIGEga2luZCBvZiBzb2Z0ZXIgbWFzc2FnZSBpbiBnZXR0aW5nIHRoZSByaWRlcnMgb3ZlciB0aGUgZGF5cy4uIApUaGUgcmVhc29uIHRoZXkgdHJpZWQgdG8gZGVueSBpdCB3YXMgYmVjYXVzZSBvZiB2ZXJ5IHBvaW50bGVzcyB3b3JyaWVzIGFib3V0IHBvc3NpYmxlIGFkZGljdGlvbi4uIApSZXNlYXJjaGVycyB1c2VkIHNldmVyYWwgcXVlc3Rpb25uYWlyZXMgdG8gdGVzdCB0aGUgZWZmZWN0cyBvZiBwcm9iaW90aWNzIG9uIHN0cmVzcywgYW54aWV0eSwgZGVwcmVzc2lvbiwgYW5kIGNvcGluZy4gCkFuZCB0aGV5IGJlIGx1Y2t5IHRvIGZpbmQgYSBqb2Igd2lsbGluZyB0byBoaXJlIHRoZW0gZHVlIHRvIHRoZWlyIGhpc3Rvcnkgb2YgaW5jYXJjZXJhdGlvbi4gV2hpY2ggaXMgYW5vdGhlciBwcm9ibGVtIGNyZWF0ZWQgYnkgdGhlIGRlbW9uaXphdGlvbiBvZiBjcmltaW5hbHMgaW4gc29jaWV0eSwgcmVnYXJkbGVzcyBvZiB0aGVpciBjcmltZXMuIEl0IGRvZXNudCBtYXR0ZXIgaWYgdGhleSBtdXJkZXJlZCBzb21lb25lIG9yIGlmIHRoZXkgaGFwcGVuZWQgdG8gaGF2ZSB3ZWVkIG9uIHRoZW0gYXQgdGhlIHdyb25nIHRpbWUuIApJdHMgc2ljayByZWFsbHkuIApTZW5zb3JpbW90b3IgU3RhZ2UgYW5kIFNjaGVtYXMgVGhlIGZpcnN0IHN0YWdlIGRlc2NyaWJlZCBieSBQaWFnZXQgaXMgdGhlIHNlbnNvcmltb3RvciBzdGFnZSwgb2NjdXJyaW5nIGR1cmluZyB0aGUgZmlyc3QgdHdvIHllYXJzIG9mIGxpZmUuIApBbmQgdGhpcyB0aW1lIGFzIHlvdSBzaXQgZG93biBhdCB0aGUgVGFibGUgeW91IGNhbiBiZSBjb25maWRlbnQgdGhhdCB5b3UgYXJlIHByZXBhcmVkIHRvIHRha2UgZG93biBzb21lIGJpZyBoYW5kcyEuIApTbmFrZSBFeWVzLCBhZnRlciBhIGxvbmcgcGF1c2UsIHB1c2hlZCB0aGUgcmVtYWlucyBvZiBoaXMgY2hpcHMgaW50byB0aGUgcG90LiAKSSBqdXN0IG1pc3VuZGVyc3Rvb2QgZHVlIHRvIHJlYWRpbmcgYSBmZXcgZGlmZmVyZW50IHJlc3BvbnNlcyBhbmQganVtYmxpbmcgdGhlbSBpbiBteSBoZWFkLiAKVGhpcyB0cmVhdG1lbnQgaXMgZWZmZWN0aXZlIGZvciBiZXR0ZXJpbmcgcmFuZ2Ugb2YgbW92ZW1lbnQgYW5kIGNvbWZvcnQgd2l0aCBvdmVyYWxsIGZsZXhpYmlsaXR5LiAKRXZlcnkgb3RoZXIgbGFuZ3VhZ2UgaGFzIHRha2VuIHRoZSBzdHJpY3Qgc2lkZSBvZiB0aGUgYmV0LiBJIGluY2xpbmVkIHRvIGtlZXAgcGxheWluZyBvbiB0aGUgbGF6eSBzaWRlLCBhcyBpdCBoYXMgZW5hYmxlZCBtZSB0byBwcm9kdWNlIGEgcHJldHR5IG5pY2Ugc3RyZWFtIG9mIHJlc3VsdHMgb3ZlciB0aW1lIHRoYXQgSSBuZXZlciB3b3VsZCBoYXZlIGNvbnNpZGVyZWQgaWYgSSB3YXMgc3RhbmRpbmcgb24gdGhlIG90aGVyIHNpZGUgb2YgdGhlIGRlYmF0ZS4uIApUaGUgbW9uZXkgbWVuIGluIGNoYXJnZSBvZiBEZW9udGF5IGFyZSB3ZWxsIGF3YXJlIHRoZSByb2FkIHdpbGwgc29vbiBiZSBjbGVhciwgYmVjYXVzZSB0aGUgaGVhdnl3ZWlnaHQgYm94aW5nIGhhcyBhbHdheXMgYmVlbiB0aGUgdWx0aW1hdGUgcG9rZXIgZ2FtZS4gClRoZSBzZWNvbmQgZWxlbWVudCwgZmlyZSwgc3ltYm9saXplcyB0aGUgcGh5c2ljYWwgd29ybGQsIGVzcGVjaWFsbHkgdGhlIGVudmlyb25tZW50IGFuZCBlY29ub215LiAKVGhlbi4gCllvdSB3aWxsIHRoZW4gY29tZSBpbnRvIHNvbWUgdHlwZSBvZiBub3JtYWxjeS4uIApXaGVuIGNvbGxlY3RpbmcgTGFzIFZlZ2FzIGNhc2lubyBwb2tlciBjaGlwcywgaXQgaXMgaW1wb3J0YW50IHRvIGVuc3VyZSB0aGF0IHlvdSBhcmUgZ2V0dGluZyBhdXRoZW50aWMgcG9rZXIgY2hpcHMuIE1vc3QgY2FzaW5vcyBtYXJrIHRoZWlyIGNoaXBzIGluIG9uZSB3YXkgb3IgYW5vdGhlciB0byBlbnN1cmUgdGhhdCBkdXBsaWNhdGlvbiBpcyBkaWZmaWN1bHQgYW5kIHRoYXQgY29sbGVjdG9ycyBjYW4gZWFzaWx5IGlkZW50aWZ5IHRoZW0uIFlvdSB3aWxsIGZpbmQgdW5pcXVlIGNvbG9ycyB1c2VkLCB1bmlxdWUgaW5sYXlzLCB1bmlxdWUgaG90IHN0YW1wcywgYW5kIGV2ZW4gdW5pcXVlIGluZGVudGlvbnMgYW5kIG1hcmtpbmdzIG9uIHRoZSBlZGdlIHNwb3RzLiAKU2hlIGhpcmVkIG1vc3RseSBoaWdoIHNjaG9vbCBraWRzIGFuZCBub25lIG9mIHRoZW0gZXZlciBjb21wbGFpbmVkLiBUaGV5IHByb2JhYmx5IGRpZG4ga25vdyB0aGV5IHdlcmUgZ2V0dGluZyBzY3Jld2VkLiBJIGRpZG4ga25vdyBlaXRoZXIgYmVjYXVzZSBzaGUgbmV2ZXIgdHJpZWQgbWUuIFByb2JhYmx5IGJlY2F1c2UgSSBrZXB0IGEgam91cm5hbCBvZiBteSBzY2hlZHVsZSBhbmQgcmVjb3JkZWQgaW4vb3V0IGFuZCBicmVhayB0aW1lcyBmcm9tIGRheSBvbmUuClRoZSBzZW5pb3IgQWxsIExvbmcgSXNsYW5kIHNlbGVjdGlvbiB0aGlzIHNwcmluZyBhbHNvIGVhcm5lZCBoZXIgR2lybCBTY291dCBHb2xkIEF3YXJkIGZvciBkZXZlbG9waW5nIGEgcGxhdGZvcm0gdG8gZXhwb3NlIGxvY2FsIGZvdXJ0aCAgYW5kIGZpZnRoIGdyYWRlcnMgdG8gZ29sZi4gU2hlIGhlbGQgY2xpbmljcyBhbmQgd29ya3Nob3BzIGF0IHRoZSBDaXR5IG9mIEdsZW4gQ292ZSBncmVlbiBhbmQgdGhlIEdsZW4gQ292ZSBHb2xmIENvdXJzZSwgd2hlcmUgc2hlIGZpcnN0IHBpY2tlZCB1cCBhIHNldCBvZiBpcm9ucyBhdCBhZ2UgMTIuLiAKSGUgd2FzIG9uIG15IGRlZmVuc2UgY29tbWl0dGVlLCBhbmQgaGUgaXMgYm90aCBleHRyZW1lbHkgc2hhcnAgYW5kIG9yZ2FuaXplZCBlbm91Z2ggdG8gYmUgYSBnb29kIGFkdmlzb3IuIFN0YXkgYXdheSBmcm9tIFllbmVyLCBhbmQgcHJvYmFibHkgYW55b25lIGxlc3Mgb3JnYW5pemVkIG9yIHdpdGhvdXQgdGVudXJlLiAKSWYgeW91IGhhdmUgMTIgc3R1ZGVudHMsIGJyaW5nIGF0IGxlYXN0IDI0IG9yIDM2IGNvb2tpZXMsIHNvIHRoYXQgaXQgd2lsbCBiZSBlYXN5IGZvciB0aGVtIHRvIHVuZGVyc3RhbmQpLiAKVGhpcyB3aG9sZSBzaXR1YXRpb24gc291bmRzIGxpa2UgdGhlIGdpcmxzIGFuZCB3b21lbiBvZiB0aGUgR2lybHMgU2NvdXRzLCBhcmUgZmVkIHVwIHdpdGggYmVpbmcgZ2l2ZW4vYXNzaWduZWQgYW50aXF1YXRlZCBmZW1hbGUgZHV0aWVzIGFuZCB3aXNoIHRvIGVuZ2FnZSBpbiBleHBlcmllbmNlcyBhbmQgaGF2ZSB0aGUgc2FtZSBvcHBvcnR1bml0aWVzIHRoYXQgdGhlIGJveXMgY29uc2lzdGVudGx5IGhhdmUgYWNjZXNzIHRvLgpBdiBzdHJ1Y3R1cmUgdGhhdCBjb3VsZCBiZSBzZXQgdXAgYW5kIGJyb2tlbiBkb3duIG11Y2ggbW9yZSBlYXNpbHkgdGhhbiBhIHRlcnJhY2VkIGF1ZGllbmNlIHNlYXRpbmcuLiAKTGlvbnMgUG9rZXIgUnVuIHRvIGJlbmVmaXQgY29tbXVuaXR5IHBhdmlsaW9uCkluIGhpcyBiYXR0bGUgdG8gZGVmZW5kIHRoZSBiZWxpZWYgc3lzdGVtIHRoYXQgYXdhcmRzIGEgZmVtYWxlIGFkb2xlc2NlbnQgbGVzcyByaWdodHMgdGhhbiBhIGZldHVzIElzcmFydWFsbGFoIFplaHJpIGFuZCB0aG9zZSB3aG8gc3VwcG9ydCBoaW0gbWlnaHQgY29uc2lkZXIgdGhlIHBvc2l0aW9uIG9mIHRoZSBQcm9waGV0IE1vaGFtbWVkIG9uIGZlbWFsZSBpbmZhbnRpY2lkZSBpbiBwcmUgSXNsYW1pYyBBcmFiaWEuIE9yIG5vdC4gTXkgY2hyb21vc29tZXMgYXBwYXJlbnRseSBkaWN0YXRlIHRoYXQgbWluZSBpcyBub3QgdG8gcXVlc3Rpb24gd2h5LCBtaW5lIGl0IGJ1dCB0byBkbyBvciBkaWUuLiAKU28gc2hvdWxkIEkgYXNzdW1lIHByb2Zlc3Npb25hbCBhdGhsZXRlcyBhbmQgY29tcGV0aXRvcnMgdXNlIHNvbWV0aGluZyBpbiB0aGUgb2ZmIHNlYXNvbiBvciB3ZWxsIGJlZm9yZSB0aGV5IGNvbXBldGU/CldoYXQgdGhleSByZWFsbHkgbWVhbiBpcywgaXQncyBub3QgcG9zc2libGUgZm9yIHRoZW0gdG8gbW92ZSBvdXQgYW5kIG5vdCB0YWtlIGEgaGl0IHRvIHRoZWlyIGN1cnJlbnQgc3RhbmRhcmQgb2YgbGl2aW5nLiBJbiBteSBwZXJzb25hbCBleHBlcmllbmNlcywgdGhlIHBlb3BsZSBjb21wbGFpbmluZyB0byBtZSB0aGF0IHRoZXkgY2FuJ3QgbW92ZSBvdXQgb2YgdGhlaXIgcGFyZW50cyBob3VzZSBhcmUgdGhlIHBlb3BsZSB3aG8gYXJlIHJlYWxseSBhZHZlcnNlIHRvIHBlcnNvbmFsIHNhY3JpZmljZXMsIHNvIHRoZSBzZWNvbmQgdGhpbmdzIHN0YXJ0IGdldHRpbmcgYSBiaXQgdW5jb21mb3J0YWJsZSwgdGhleSB0ZWxsIHRoZW1zZWx2ZXMgIkkgc2hvdWxkbid0IGhhdmUgdG8gbGl2ZSBsaWtlIHRoaXMhIiBhbmQgdGVsbCB0aGVtc2VsdmVzIHRoZXknbGwganVzdCAic2F2ZSB1cCIgYSBmZXcgbW9yZSB5ZWFycyBhdCBob21lIHdpdGggbW9tIGFuZCBkYWQuIApIZSB3YXMgbm90IHNtYWxsIGFuZCBjdXRlLiAKOTUlIHN1cmUgS2FpIGNhbiBmaWdodCBhbmQgaXMganVzdCBhIHdlYWtsaW5nIGZyb20gd2hhdCB3ZSBzYXcgKyBoaXMgYm9keSB0eXBlIGNvbXBhcmVkIHRvIHRoZXNlICIgdGVlbmFnZXJzICIuIEhlIGEgbW9uc3RlciBiZWNhdXNlIGhlIGNvbXBlbnNhdGVzIHdpdGggaGlzIGdlbml1cyBsZXZlbCBzdHJhdGVneSBhbmQgcGxhbm5pbmcuIApXaGVuIHlvdSB3YW50IHRvIGdldCB0aGUgcmVhbCBwb2tlciBleHBlcmllbmNlLCB0YWtlIGEgbW9tZW50IHRvIHRoaW5rIGFib3V0IGhvdyB5b3UgY2FuIGdldCB0aGUgcG9rZXIgZmVsdCB0b3AgdGhhdCBpcyByaWdodCBmb3IgeW91LiBUaGVyZSBhcmUgc28gbWFueSBncmVhdCBjaG9pY2VzIGluIGZyb250IG9mIHlvdSB0aGF0IGl0IGlzIGdvaW5nIHRvIGJlIGNvbXBsZXRlbHkgcG9zc2libGUgdG8gZ2V0IHRoZSB0YWJsZSB5b3Ugd2FudCwgc28gbG9vayBhcm91bmQgZm9yIHRoZSBvbmUgdGhhdCBpcyByaWdodCBmb3IgeW91IS4gClA2IGlzIGV4Y2l0ZWQgYW5kIHJlIHJhaXNlcyB0byAkMTIuIFA3IGZvbGRzIHRvIHRoZSAkMTIgYWN0aW9uIGFuZCB0aGUgZGVhbGVyLCBwbGF5aW5nIHBvc2l0aW9uLCAoUDgpIGNhbGxzIHRoZSAkMTIgdGhyZWUgYmV0LiAKRG9uIGRlc3BhaXIsIGFuZCBkb24gdHJ5IHRvIGdvIGl0IGFsb25lLiAKMiBwb2ludHMgIHN1Ym1pdHRlZCAyNSBkYXlzIGFnb3dlIHRyeSB0byBwb3N0IGEgcmVtb3ZhbCByZWFzb24gd2hlbmV2ZXIgcG9zc2libGUsIGJ1dCBpZiBpdCBub3QgcG9zc2libGUgb3IgcHJhY3RpY2FsICh0eXBpY2FsbHkgYmVjYXVzZSBhIG1vZCBpcyBzb3J0aW5nIHRoZSBwb3N0cyBvbiBtb2JpbGUgb3Igb3RoZXJ3aXNlIGRvZXNuIGhhdmUgYWNjZXNzIHRvIHJlbW92YWwgcmVhc29ucyksIHRoZW4gd2Ugd29uIGluY2x1ZGUgaXQuQmVpbmcgb24gbW9iaWxlIGlzIGZyYW5rbHkgYSBwaXRpZnVsIGV4Y3VzZSBmb3Igbm90IHBvc3RpbmcgcmVtb3ZhbCByZWFzb25zLCBoYXZlIGEgdGhyZWFkIGZ1bGwgb2YgdGhlbSBzb3J0ZWQgYnkgdHlwZSBmb3IgZWFzeSBhY2Nlc3MgaWYgeW91IG5lZWQgdG8gb3Igd2hhdGV2ZXIgaXQgdGFrZXMsIGJ1dCBpdCBob25lc3RseSBub3QgaGFyZCB0byBjb3B5IHRoZSBzb3VyY2UgZnJvbSBvbmUgY29tbWVudCBhbmQgcGFzdGUgaXQgYXMgYSByZXNwb25zZS5JIG5vdGljZWQgdGhhdCBpdCBpbmNyZWRpYmx5IGNvbW1vbiBpbiBDREYgZm9yIHBvc3RzIHRvIGdldCByZW1vdmVkIHdpdGhvdXQgYSByZWFzb25pbmcgKG5vdCB0aGUgYWN0dWFsIHJlbW92YWwsIGJ1dCBpZiBzb21ldGhpbmcgZ2V0cyByZW1vdmVkIGl0IGFsbW9zdCBuZXZlciBoYXMgYSByZXNwb25zZSkuRm9yIG9uZSB0aGUgdXNlciBuZWVkcyB0byBrbm93IHdoYXQgdGhleSBkaWQgd3JvbmcsIGJ1dCBtb3JlIGltcG9ydGFudGx5IGluIHRoZSBjYXNlIG9mIHNwb2lsZXJzIHRoZXkgbmVlZCB0byBoYXZlIGEgY2hhbmNlIHRvIGZpeCBpdCBhbmQgZ2V0IGl0IHJlIGFwcHJvdmVkLCBpZiB0aGVyZSBubyBtZXNzYWdlIHRoZW4gdGhlIHBvc3RlciBoYXMgbm8gY2x1ZSBpdCBldmVuIGhhcHBlbmVkIGFuZCBpbiB0aGUgd29yc3QgY2FzZSBzY2VuYXJpbyBub2JvZHkgZXZlbiBrbm93cyB3aG8gaXQgd2FzIHRvIG5vdGlmeSB0aGVtLltNXSAgOSBwb2ludHMgIHN1Ym1pdHRlZCAyNSBkYXlzIGFnb1doZW4gYSBtb2QgaXMgb24gbW9iaWxlIGFuZCBnb2luZyB0aHJvdWdoIGEgMzArIGl0ZW0gcXVldWUgZHVyaW5nIHBlYWsgaG91cnMsIGl0IHdvdWxkIHRha2UgYSBzaWduaWZpY2FudCBhbW91bnQgb2YgdGltZSB0byBmaW5kIGEgcmVtb3ZhbCByZWFzb24gaW4gYW5vdGhlciBhcHAsIGNvcHkgaXQsIHBhc3RlIGl0IGludG8gcmVkZGl0LCBhbmQgdGhlbiBtYWtlIHRoZSByZW1vdmFsLiBNb2JpbGUgY2xpcGJvYXJkIGZsb3dzIGFyZSBqdXN0IGF3ZnVsLCBhbmQgd2l0aCBhIGZ1bGwgcXVldWUsIHdlIGRvbiBhbHdheXMgaGF2ZSB0aGUgdGltZSB0byBkbyB0aGF0IGZvciBldmVyeSBwb3N0LldlIGFsd2F5cyBkbyBvdXIgYmVzdCB0byBub3RpZnkgdXNlcnMgd2hlcmUgd2UgY2FuLCBidXQgdGhlcmUgYXJlIGxlZ2l0aW1hdGUgc2l0dWF0aW9ucyB3aGVyZSBpdCBub3QgYWx3YXlzIGZlYXNpYmxlLiBZb3VyIGFzc2VydGlvbiB0aGF0IGl0IHdvdWxkIGJlICJuaWdoIDAgZWZmb3J0IiB0byBtYWtlIHJlbW92YWxzIGluIGV2ZXJ5IHNpdHVhdGlvbiBpcyBqdXN0IGFuIGluZGljYXRpb24gdGhhdCB5b3UgbWlzdW5kZXJzdGFuZCBob3cgdGhpbmdzIHdvcmsgZm9yIHVzIGJlY2F1c2Ugb2YgUmVkZGl0IGxpbWl0YXRpb25zLiAKVGhlIGJ1aWxkaW5nIG9yaWdpbmFsIGRhdGUgb2YgY29uc3RydWN0aW9uIHdhcyB0aG91Z2h0IHRvIGJlIGFyb3VuZCAxOTIyIDIzLiBUaGVyZSB3ZXJlIHJ1bW91cnMgdGhhdCBpdCBoYWQgYmVlbiB1c2VkIGJ5IHRoZSBtaWxpdGFyeSwgYnV0IHRoZXkgd2VyZSB1bmNvbmZpcm1lZC4gVGhlIFJveWFsIENhbmFkaWFuIE5hdmFsIFJlc2VydmVzIG9jY3VwaWVkIHRoZSBidWlsZGluZyBmb3Igb25lIHllYXIgYmVmb3JlIHJlbG9jYXRpbmcgdG8gaXRzIGN1cnJlbnQgbG9jYXRpb24gaW4gU3RhbmxleSBQYXJrLiAKSW4gdGhlIDE5OTBzLCBTaW5nYXBvcmUgZGV2ZWxvcG1lbnQgc3RyYXRlZ3kgbGVhbmVkIHRvd2FyZHMgYWNoaWV2aW5nIGVjb25vbWljIGRpdmVyc2l0eSBhbmQgYmVjb21pbmcgYSBrbm93bGVkZ2UgZWNvbm9teS4gClNoZSBhc3NlcnRzIHRoYXQgaGVyIGV4cGVyaW1lbnQgaXNuJ3QgYSBxdWVzdCB0byBlcmFkaWNhdGUgdW5oYXBwaW5lc3MgZnJvbSBoZXIgbGlmZS4gClNvaXQgMC41IGhhYi9rbSkgMy8gbGVzIGxlcyBHbG9yaWV1c2VzICg1IGttLCAxNSBoYWIuIApUaGV5IG1heSBub3QgYWxsIGJlIGdvb2QgcmVhc29ucywgcGVyaGFwcyBBc2lhbiBmYW1pbGllcyBkb2luZyBtb3JlIHRvIGdyb29tIHRoZWlyIGtpZHMgZm9yIGFjYWRlbWljIHN1Y2Nlc3MgKHdoaWNoIGlzbiBuZWNlc3NhcmlseSBhIGdvb2QgcHJlZGljdG9yIG9mIGFjYWRlbWljIHBlcmZvcm1hbmNlIG9yIHZhbHVlKS4uIApCdXQgb3ZlcmFsbCwgdGhlIG5lYXIgdGVybSBsb29rcyBibGVhay4gQSBzdGVhZHkgc3RyZWFtIG9mIGltcG9ydGFudCBpbmRpY2F0b3JzIG92ZXIgdGhlIHBhc3QgY291cGxlIG9mIHdlZWtzIGhhcyBjaGFzZWQgdGhlIG9wdGltaXN0cyBvZmYgdGhlIGZpZWxkLiBUb3RhbCBob3VycyB3b3JrZWQgZGVjbGluZWQgZm9yIGEgdGhpcmQgY29uc2VjdXRpdmUgbW9udGggaW4gRmVicnVhcnksIGNhdXNpbmcgdGhlIEJhbmsgb2YgTm92YSBTY290aWEgcmVhbCB0aW1lIGZvcmVjYXN0aW5nIG1vZGVsIHRvIHByZWRpY3QgdGhhdCBHRFAgd2lsbCBjb250cmFjdCAwLjMgcGVyIGNlbnQgdGhpcyBxdWFydGVyLiAKU2Nvb3AgaXMgY3VycmVudGx5IHRyYW5zaXRpb25pbmcgdG8gYSBuZXcgc3VzdGFpbmFibGUgZnVuZGluZyBtb2RlbC4gT3VyIEV0aGljYWwgUGF5d2FsbCBzeXN0ZW0gZW5zdXJlcyBvcGVuIGFjY2VzcyB0byB0aGUgcHVibGljLCBvcmdhbmlzYXRpb25zIHVzaW5nIFNjb29wIHB1cmNoYXNlIGEgUHJvZmVzc2lvbmFsIExpY2Vuc2UuIFdlIG5vdyBoYXZlIG92ZXIgMTAwIG9yZ2FuaXNhdGlvbnMgd2l0aCB0aGlzIHByb2Zlc3Npb25hbCBhY2NyZWRpdGF0aW9uIGluY2x1ZGluZyBHb3Zlcm5tZW50IERlcGFydG1lbnRzLCBsYXcgZmlybXMsIHVuaXZlcnNpdGllcywgY29ycG9yYXRlcyBhbmQgUFIgZmlybXMuClRoaXMgd2VlaydzIGh1bWRpbmdlciB3YXMgbm8gZGlmZmVyZW50LiBIb3J2YXQgcHJvdmlkZWQgdGhlIHNjb3Jpbmcgb3ZlciB0aGUgbGFzdCB0d28gcGVyaW9kcyBvZiB0aGUgZ2FtZSwgd2hpbGUgZ29hbGllIEphY29iIE1hcmtzdHJvbSBrZXB0IHRoZSBEdWNrcyBhdCBiYXkgb24gdGhlIG90aGVyIGVuZCBvZiB0aGUgaWNlLiBXaGV0aGVyIHlvdSBhcmUgZGVhbGluZyB3aXRoIGEgcmVjZW50IHNpdHVhdGlvbmFsIGNyaXNpcywgb3IgaGF2ZSBtb3JlIGhpc3RvcmljYWxseSByZWxhdGVkIHRyYXVtYSBpc3N1ZXMsIHRoZXJlIGlzIG5vdGhpbmcgbW9yZSBzYXRpc2Z5aW5nIHRvIG1lIHRoYW4gc3VwcG9ydGluZyB5b3Ugd2l0aCBtb3ZpbmcgZnJvbSB5b3VyIGNoYWxsZW5nZXMgYW5kIG9ic3RhY2xlcyB0byBhIHBsYWNlIG9mIHBlYWNlIGFuZCBncm93dGguIApFbGxlIGEgbW9udHIgbCdpbXBvcnRhbmNlIGRlIGwnYXR0YWNoZW1lbnQgcXVpIHNlIGNyZSBhdmVjIHVuZSBmaWd1cmUgZGUgIm1yZSIgKHBhcyBmb3JjbWVudCBsYSBtcmUgYmlvbG9naXF1ZSkgcXVpIHNjdXJpc2UgbGVzIGRidXRzIGRlIGxhIHZpZS4gCkV2ZW4gaWYgdGhleSBkaXJ0eSB1cCB0aGUgcGxhY2UgYSBiaXQsIEkgbGlrZSB0byByZW5vIHRoZSB0b3AgZXZlbnR1YWxseSBpbiBhIGZldyB5ZWFycy4uIAoiQW5kIHdoYXQgdGhpcyBpbmRpdmlkdWFsIGVuZGVkIHVwIGJlaW5nIHdhcyB5b3VyIHdvcnN0IG5pZ2h0bWFyZSwgYXMgZmFyIGFzIGEgc29uIGNvdWxkIGJlLiAiTW90aXZlIGZvciBNdXJkZXI/LiAKV2Ugd2lsbCBkaXNjdXNzIHdheXMgb2Ygc2Vuc2luZyB0aGUgcHJlc2VuY2Ugb2YgQW5nZWxzIGFuZCBwb3NzaWJsZSBBbmdlbGljIHNpZ25zLiAKVGhlIE1hZ2ljIENpcmNsZSBzcGVsbCBpcyBuZWNlc3NhcnksIGJlY2F1c2Ugd2l0aG91dCBpdCB0aGUgY2FsbGVkIGNyZWF0dXJlIHdpbGwgYmxpbmsgaW50byBleGlzdGVuY2UgYW5kIHRoZW4gaW1tZWRpYXRlbHkgcmV0dXJuIHRvIHRoZWlyIGhvbWUgcGxhbmUuIEV2ZW4gY29hbGlnbmVkIGNyZWF0dXJlcyB3aWxsIGdlbmVyYWxseSBoYXZlIGJldHRlciB0aGluZ3MgdG8gZG8gdGhhbiBzdGljayBhcm91bmQgYW5kIGxpc3RlbiB0byB5b3VyIGFyZ3VtZW50LgpMb3dlciBHRFAgZmlndXJlIGZvciBhbGwgb2YgMjAxOCByZWZsZWN0ZWQgYSBzbG93ZG93biBpbiBtb3N0IGNhdGVnb3JpZXMsIGluY2x1ZGluZyB3ZWFrZXIgcmVzdWx0cyBmb3IgaG91c2Vob2xkIGNvbnN1bXB0aW9uLCBidXNpbmVzcyBpbnZlc3RtZW50IGFuZCBob3VzaW5nIGludmVzdG1lbnQsIHdoaWNoIGNvbnRyYWN0ZWQgMi4zIHBlciBjZW50LiAKUGFkZG9jayB3YXMgYSByZXRpcmVkIHBvc3RhbCBzZXJ2aWNlIHdvcmtlciwgYWNjb3VudGFudCBhbmQgcmVhbCBlc3RhdGUgaW52ZXN0b3Igd2hvIG93bmVkIHJlbnRhbCBwcm9wZXJ0aWVzIGFuZCBob21lcyBpbiBSZW5vIGFuZCBpbiBhIHJldGlyZW1lbnQgY29tbXVuaXR5IG1vcmUgdGhhbiBhbiBob3VyIGRyaXZlIGZyb20gTGFzIFZlZ2FzLiBIZSBhbHNvIGhlbGQgYSBwcml2YXRlIHBpbG90IGxpY2Vuc2UgYW5kIGxpa2VkIHRvIGdhbWJsZSB0ZW5zIG9mIHRob3VzYW5kcyBvZiBkb2xsYXJzIGF0IGEgdGltZSBwbGF5aW5nIGhpZ2ggc3Rha2VzIHZpZGVvIHBva2VyLgpJIGJlZW4gcGxheWluZyBzZWNyZXQgcGFsYWRpbiBhbGwgdGhpcyBzZWFzb24gKGN1cnJlbnRseSBzaXR0aW5nIGF0IGxlZ2VuZCByYW5rIDI1IEVVKSBhbmQgc3Ryb25nbHkgZGlzYWdyZWUgdGhhdCBUcnVlc2lsdmVyIGlzIHlvdXIgd2Vha2VzdCBjYXJkLiBJIHBsYXllZCB3aXRoIGFuZCB3aXRob3V0IGl0IGFuZCB3b3VsZG4gZHJlYW0gb2YgY3V0dGluZyBpdCBub3cuIFdoaWxlIG11Y2tfdGhlX2ZvZHMgcG9pbnQgYmVsb3cgYWJvdXQgd2FudGluZyB0byBidWlsZCBhIGJvYXJkIGZvciB0aGUgTUMgdHVybiBpcyB2YWxpZCwgY3V0dGluZyBUcnVlc2lsdmVyIHdvdWxkIGJlIGEgZmFsc2UgZWNvbm9teSAgIGl0IGhlbHBzIHRvIG1haW50YWluIHlvdXIgYm9hcmQsIGFuZCBwcm90ZWN0IHlvdXIgdG9rZW5zLCBieSBzd2lmdGx5IGRlYWxpbmcgd2l0aCB0aGluZ3MgbGlrZSBGbGFtZXdha2VyIGFuZCBJbXAgR2FuZyBCb3NzIChhbW9uZ3N0IG1hbnkgb3RoZXJzKS4uIApNb3N0IHBsYWNlcyBhcmUgZ29vZCB3aXRoIHRoZSBvYml0LiBVbmZvcnR1bmF0ZWx5IGl0IHdhc24gdGhhdCBlYXN5IHdoZW4gbXkgZ3JhbmRwYSBwYXNzZWQuIEhlIGRvbmF0ZWQgaGlzIGJvZHkgdG8gc2NpZW5jZSwgc28gdGhlcmUgd2FzbiBhIHRyYWRpdGlvbmFsIHZpZXdpbmcvZnVuZXJhbCwgYnV0IHdlIGRpZCBoYXZlIGEgbWVtb3JpYWwgYSBjb3VwbGUgbW9udGhzIGxhdGVyIHdoZW4gd2UgZ290IGhpcyBhc2hlcyBiYWNrLiAKQWRkcyB0aGF0IHNpdGUgaXMgYWxzbyBnb2luZyB0byBiZSB0aGUgcGxhY2UgdG8gZW50ZXIgc29tZSB2ZXJ5IGdvb2QgY29udGVzdHMuLiAKVGhlIHN0YXRlIFNlbmF0ZSBpbiBBcHJpbHVuYW5pbW91c2x5IHBhc3NlZCBTQiA4Nzh0aGF0IHdvdWxkIGFsbG93IHBva2VyIHJvb21zIGFuZCBvdGhlciBsb2NhdGlvbnMgdG8gaG9zdCBnYW1lcyBzZXZlbiBkYXlzIGEgd2VlayBhcyBsb25nIGFzIG5vIG1vcmUgdGhhbiBmb3VyIGNoYXJpdGllcyBob2xkIGV2ZW50cyBhdCB0aGUgc2FtZSBsb2NhdGlvbiBhdCB0aGUgc2FtZSB0aW1lLiAKSSBsb3ZlIHJ1bm5pbmcgYSB3aG9sZSBsb3QsIGFuZCBJIGp1c3QgaW50ZXJlc3RlZCBpbiB5b3VyIG9waW5pb25zIGFib3V0IHdoZXRoZXIgdGhlcmUgYW55IHBvaW50IG9mIGV2ZXIgcHVyc3VpbmcgdGhpcyBtb3JlIHNlcmlvdXNseS4gMiBob3VycyBhbmQgOCBtaW51dGVzIHNlZW1zIHZlcnkgc2xvdyB0byBtZS4gQnV0IEkgcmVhbGx5IGFtIGNvbW1pdGVkIHRvIGZpbmFsbHkgc3RhcnQgdHJhaW5pbmcgdG8gZ2V0IGJldHRlci4KRXMgZ2lidCAxMjYgWmltbWVyLCBkaWUgaW4gQW5sZWh1bmcgYW4gWnJpY2ggYWxzIEJhbmtlbnN0YWR0IG5hY2ggRWRlbG1ldGFsbGVuIGJlbmFubnQgc2luZC4gClRoZSBib29rIGlzIG5vdCBhIHN0b3J5IGFib3V0IGEgbWFuIHNlZWtpbmcgdmVuZ2VhbmNlIGFnYWluc3QgYWxsIG9mIGhpcyBjb25zcGlyYXRvcnMgbm9yIGlzIGl0IGVuY291cmFnaW5nIGl0LiAKVGhlIHRhYmxldCBhbmQgY29uc29sZSBnYW1lcnMgY2FuIGR1a2UgaXQgb3V0IGluIHRoaXMgbXVsdGlwbGF5ZXIgbW9kZS4KVGhlIGNvdXBsZSBtZXQgb24gYSBibGluZCBkYXRlIGFyb3VuZCAxOTU0IHdoZW4gdGhleSB3ZXJlIGluIHRoZWlyIGVhcmx5IDIwcyBpbiBCcm9va2x5bi4gQWZ0ZXIgYSB5ZWFyIGFuZCBoYWxmIG9mIGNvdXJ0c2hpcCwgdGhleSBtYXJyaWVkIG9uIEphbi4gMTUsIDE5NTYuIFRoZSBjb3VwbGUgZXZlbnR1YWxseSBtb3ZlZCBvdXQgb2YgQnJvb2tseW4gYW5kIHNldHRsZWQgaW4gU291dGggTWVycmljayB3aGVyZSB0aGV5IHJhaXNlZCB0aGVpciB0d28gc29ucyBTdGV2ZW4gYW5kIENodWNrIGFuZCB3aGVyZSBzaGUgc3RpbGwgbGl2ZXMuCkhvdyBkbyB5b3Uga25vdyB3aGF0IHBlb3BsZSBjYXJlIGFib3V0PyBNYXliZSB0aGV5IGRvIGNhcmUgYWJvdXQgd2hhdCB3ZW50IGluIHRvIG1ha2luZyB0aGUgcHJvZHVjdC4gVGhlcmUncyBhbHdheXMgdGhvc2UgYmVoaW5kIHRoZSBzY2VuZXMgcHJvZHVjdGlvbnMsIHNvIEkgaGF2ZSB0byBpbWFnaW5lIGEgZ29vZCBhbW91bnQgb2YgcGVvcGxlIGRvIGNhcmUgYWJvdXQgd2hhdCBnb2VzIGludG8gaXQuIFlvdSBjbGVhcmx5IGRpZG4ndCByZWFkIG15IGNvbW1lbnQgd2VsbCBlbm91Z2ggICBJIGV4cGxhaW5lZCB0aGV5IGRpZG4ndCByZWFsbHkgY2FyZSBhbGwgdGhhdCBtdWNoLCBidXQgdGhleSB3ZXJlIHN1cnByaXNlZC4KT25saW5lIEJvb2tzIERhdGFiYXNlLiBEb2MgSUQgMTE1OGExIC4gQW5vdGhlciBQREYgRmlsZXM6IFRoZSBHb29kZW5vdWdocyBHZXQgSW4gU3luYyBBLiAKSW4gaGlzdG9yaWMgQ2FsaXN0b2dhLCB0aGUgaGVhcnQgb2YgTmFwYSBWYWxsZXksIGZpdmUgZWxlZ2FudGx5IGFuZCBjb21mb3J0YWJseSBhcHBvaW50ZWQgZ3Vlc3Qgcm9vbXMgYXJlIGFsbCBkaWZmZXJlbnQgYnV0IHNoYXJlIGEgdG91Y2ggb2Ygc29waGlzdGljYXRlZCBmbGFpci4gCkJ1dCB3aGF0IGdvdCBBbWl0IEJ1cm1hbiBpbnRvIGl0PyAiSSBwbGF5IGEgbGl0dGxlIGJpdCBvZiBwb2tlciBhbmQgd2hlbmV2ZXIgd2UgcmVzZWFyY2ggYWJvdXQgdGhlIGdhbWUsIHdlIGZvdW5kIHRoYXQgaW4gYSBsb3Qgb2YgY291bnRyaWVzLCBwb2tlciBpcyBjb25zaWRlcmVkIGEgbWluZCBzcG9ydCwgYnV0IGluIEluZGlhLCB0aGUgd2hvbGUgcGVyY2VwdGlvbiBpcyB0aGF0IGl0J3MgZ2FtYmxpbmcgYmVjYXVzZSBpdCdzIHBsYXllZCB3aXRoIGNhcmRzLiBJIGJlbGlldmUgdGhlIHBlcmNlcHRpb24gaXMgcHJpbWFyaWx5IGJlY2F1c2Ugb2YgdGhlIERpd2FsaSBhbmQgVGVlbiBQYXR0aSBjb25uZWN0aW9uLiAKQXMgYSB2ZWdldGFyaWFuLCB0b3duIGZvb2QgaXNuJ3QgdG9vIGRpZmZpY3VsdCwgYnV0IHRoZXJlIGFyZSBkZWZpbml0ZWx5IHBsYWNlcyB3aGVyZSBteSBvcHRpb25zIHdlcmUgZnJpZXMsIGFuZCBub3QgbXVjaCBlbHNlLgpJIGdldCB0aGUgaWRlYSBtYW55IHBlb3BsZSBtYWtlIGEgZnVsbCBwb3QgYW5kIGtlZXAgaXQgd2FybSBmb3IgZGF5cy4gCklmIHRoZXkgYXNrIHlvdSB3aG8geW91IGdvdCBsYXN0IHRpbWUsIGp1c3Qgc2F5IHlvdSBkb24gcmVjYWxsLiAKIlRoaXMgaXMgbm90IHRoZSB0eXBlIG9mIGJ1c2luZXNzIHdlIHdhbnQgaW4gdGhlIGNpdHkgb2YgTGFzIFZlZ2FzLiJUaGUgdHdvIHdvbWVuIGRpc3B1dGVkIE1ldHJvJ3MgYWxsZWdhdGlvbnMsIGFuZCB0aGVpciBhdHRvcm5leXMgYXNrZWQgZm9yIHRoZSBpdGVtIHRvIGJlIGRlbGF5ZWQsIGJ1dCB0aGUgY291bmNpbCByZWZ1c2VkIHRoZSByZXF1ZXN0Lk8nTmVpbCdzIGF0dG9ybmV5IG1haW50YWluZWQgaGVyIGNsaWVudCBoYWQgbGVmdCBHb2xkZW4gRHJhZ29uIGluIHRoZSBoYW5kcyBvZiBMaXUgd2hpbGUgc2hlIHdhcyBpbiBDaGluYS4gQWNjb3JkaW5nIHRvIE1ldHJvIFBvbGljZSwgTGl1IHdhcyBhcnJlc3RlZCBmb3Igc29saWNpdGF0aW9uIG9mIHByb3N0aXR1dGlvbiBhdCBHb2xkZW4gRHJhZ29uIGluIE1heS5MaXUncyBhdHRvcm5leSBzYWlkIGhpcyBjbGllbnQgd2FzIGJlaW5nIHRyZWF0ZWQgdW5mYWlybHkgdGFpbnRlZCBieSB0aGUgYWxsZWdhdGlvbnMgYWdhaW5zdCBPJ05lYWwuVGhlIG9yZGluYW5jZSwgd2hpY2ggaXMgc2NoZWR1bGVkIHRvIGdvIGJlZm9yZSB0aGUgY291bmNpbCBuZXh0IG1vbnRoLCB3b3VsZCBwdXQgdGhlIGxpY2Vuc2luZyBvZiBhbGwgbWFzc2FnZSBlc3RhYmxpc2htZW50cyBpbiB0aGUgaGFuZHMgb2YgdGhlIGNpdHkgYnkgcmVxdWlyaW5nIGFsbCBuZXcgbWFzc2FnZSB0aGVyYXBpc3RzLCBhY2N1cHJlc3N1cmlzdHMgYW5kIHJlZmxveG9sb2dpc3RzIHRvIG9idGFpbiBhIGJ1c2luZXNzIGxpY2Vuc2UsIHJhdGhlciB0aGFuIHRoZSB0eXBpY2FsIHdvcmsgY2FyZCBpc3N1ZWQgYnkgTWV0cm8gUG9saWNlLkJ5IHJlcXVpcmluZyBwZW9wbGUgaW4gdGhlIG1hc3NhZ2UgaW5kdXN0cnkgdG8gb2J0YWluIGEgYnVzaW5lc3MgbGljZW5zZSwgYXBwbGljYW50cyB3b3VsZCBnbyB0aHJvdWdoIGEgbW9yZSBleHRlbnNpdmUgYmFja2dyb3VuZCBjaGVjayBjb21wYXJlZCB0byBhIGxvY2FsIGJhY2tncm91bmQgY2hlY2sgaXNzdWVkIGJ5IE1ldHJvIFBvbGljZSwgY2l0eSBvZmZpY2lhbHMgc2FpZC4gCkkgZ29pbmcgdG8gY29tZSBvdXQgb2YgbGVmdCBmaWVsZCB3aXRoIGEgc3VnZ2VzdGlvbiBhbmQgc2F5IHlvdSBtaWdodCB3YW50IHRvIHRha2UgYSBwZWVrIGF0IEN0aHVsaHVUZWNoL0ZyYW1ld2Vyay4gVGhleSBhcmUgdW5pZm9ybWx5IGJhZGx5IGRlc2lnbmVkIGFuZCB3cml0dGVuIChhbmQgdGhlIHN1cHBsZW1lbnRhbCBib29rcyBvZnRlbiB2ZWVyIGludG8gc2lsbHkgZWRnZWxvcmQgdGVycml0b3J5IG9uIHRoZSByZWd1bGFyKS4gVGhlIHN5c3RlbSBpcyBhbHNvIGxlZ2l0aW1hdGVseSBjcml0aWNpemVkIGFzIHN3aW5neSBiZWNhdXNlIGl0IHVzZXMgcG9rZXIgcnVsZXMgd2l0aCBkMTAwIGJ1dCBJIHN0aWxsIHRoaW5rIGl0IHByZXR0eSBmdW4uIApBbmQgd2hlbiBzb21lIGZhbnMgcXVlc3Rpb25lZCB3aHkgS2hsb2Ugd2FzIGF3YXkgZnJvbSBoZXIgYmFieSwgdGhlIGJ1c2luZXNzd29tYW4gcmVzcG9uZGVkIG9uIFR3aXR0ZXIuIApXZSByZW1lbWJlciB0aGF0IHRoZSBhZHMgc2FpZCBpZiB3ZSBqdXN0IGJvdWdodCB0aGlzIHRvb3RocGFzdGUvY2FyL3BhaXIgb2Ygc2hvZXMvbWFzY2FyYSwgdGhlbiB3ZSB3b3VsZCBiZSBtb3JlIGxpa2UgdGhlIGltYWdlcyBmbG9hdGluZyBpbiB0aGUgc3BhY2Ugb2YgYWRzLi4gCldoZW4gbG9va2luZyBmb3IgY2FzaW5vIHBva2VyIGNoaXBzIGZvciBzYWxlIG9ubGluZSwgaXQgaXMgaW1wb3J0YW50IHRvIGtub3cgdGhhdCB5b3UgYXJlIGRlYWxpbmcgd2l0aCBhIGxlZ2l0aW1hdGUgY29tcGFueSB0aGF0IG9mZmVycyB0aGUgcHJvZHVjdHMgdGhhdCB0aGF0IHRoZXkgcHJvbWlzZS4gT25lIG9mIHRoZSBiZXN0IHdheXMgdGhhdCB5b3UgY2FuIGRvIHRoaXMgaXMgdG8gcmV2aWV3IHRoZSB0ZXN0aW1vbmlhbHMgdGhhdCBhcmUgcHJvdmlkZWQgYnkgdGhlIGN1c3RvbWVycyB0aGF0IGhhdmUgcHVyY2hhc2VkIGZyb20gdGhhdCB3ZWJzaXRlIGluIHRoZSBwYXN0LiBXaGVuIHJldmlld2luZyB0aGUgdGVzdGltb25pYWxzLCBpdCBpcyBpbXBvcnRhbnQgdG8gZW5zdXJlIHRoYXQgeW91IGxvb2sgdG8gc2VlIHdoYXQgdGhleSBoYXZlIHRvIHNheSBhYm91dCB0aGUgcXVhbGl0eSBvZiB0aGUgcHJvZHVjdHMgdGhhdCB0aGV5IHB1cmNoYXNlZCwgdGhlIHByaWNlcyBjb21wYXJlZCB0byBvdGhlciB3ZWJzaXRlcywgYW5kIHRoZSBsZXZlbCBvZiBjdXN0b21lciBzZXJ2aWNlIHRoYXQgdGhleSBleHBlcmllbmNlZC4KV2UgbmVlZCBzb21lb25lIHdobyB3aWxsIGxpc3Rlbi4gTm93IEkgdW5kZXJzdGFuZCB0aGF0IHRoZXkgbmVlZCB0byBnbyBieSB3aGF0IHRoZSBtYWpvcml0eSBvZiBBbWVyaWNhbnMgd2FudCBidXQgbm90IGV2ZXJ5b25lIHdhbnRzIHRoZSBzYW1lIHRoaW5nLiBJIHdhbnQgYSBQcmVzaWRlbnQgd2hvIGNhbiBjb21wcm9taXNlIGVub3VnaCB0byBnaXZlIHVzIGFsbCB3aGF0IHdlIGRlc2VydmUuIApEb2VzIHRoaXMgd29ybGQgY29uZmlndXJhdGlvbiBicmluZyBtZSBhIDQgb2YgYSBraW5kPyBBQSBLQUFRSiA+PiBUcnVlCkRvZXMgaGVyIHN0b3J5bGluZSBsZWF2ZSBhbiBvcGVuaW5nIGZvciB0aGF0PyAiSSBkb24ndCBmYWxsIGludG8gYSBob2xlIGFuZCBicmVhayBldmVyeSBib25lIGluIG15IGJvZHkgb3Igc29tZXRoaW5nLCIgc2hlIGFzc3VyZXMgdXMuIFdlbGwsIHRoYXQncyBnb29kIG5ld3MuIApbVEw7RFIgVGFsa2luZyB0byB0aHJlZSBhbWF6aW5nIHdvbWVuLCBvbmUgb2Ygd2hvbSBpcyBteSBsb25nIHRlcm0gcGFydG5lci4gCldoYXQgd2lsbCB3ZSBkbyB3aXRoIGFsbCB0aGUgb2lsIGxheWluZyB1bmRlcndhdGVyL3VuZGVyZ3JvdW5kIGlmIHdlIHN3aXRjaCB0byAxMDAlIHJlbmV3YWJsZXMgcmlnaHQgbm93PyBBcyBmYXIgYXMgSSBrbm93LCBvaWwgd2hlbiBwcm9jZXNzZWQsIGlzIGEgZ3JlYXRseSBlZmZpY2llbnQgZnVlbC4gSXQgY2FuIGJlIHN0b3JlZCBlYXNpbHkgd2l0aCBtaW5pbWFsIGRlY2F5IGFuZCBwcm9kdWNlcyBtYXNzaXZlIGFtb3VudHMgb2YgZW5lcmd5IHdoZW4gYnVybnQuIApJIHBsYXkgcG9rZXIgYW5kIGRvbid0IGV2ZW4gdGhpbmsgYWJvdXQgIndoYXQgbWlnaHQgaGFwcGVuIiAgIEkgdHJ5IHRvIG1ha2UgdGhlIGJlc3QgZGVjaXNpb24gZWFjaCBzdHJlZXQgYW5kIEkndmUgZ2l2ZW4gdXAgd2hhdCAiSSB0aG91Z2h0IiBQb2tlciB3YXMganVzdCBwbGF5IHRoZSBnYW1lIGFzIGJlc3QgYXMgSSBjYW4gYW5kIHJlYWQgaGFuZHMgYXMgYmVzdCBJIGNhbi4gCkkgaGF2ZSB0b3RhbGx5IHJldmFtcGVkIHRoaXMgYm9vay4gSSBhbSBjcmVhdGluZyBzb21lIGJhY2sgc3RvcmllcyBvbiB0aGUgY2hhcmFjdGVycyB0byBraW5kIG9mIGdldCB0byBrbm93IHRoZW0gYW5kIHdoYXQgdGhleSBhcmUgd2lsbGluZyB0byBkby4gSSB3YW50IHRvIHB1c2ggdGhlbSB0byB0aGUgZGFyayBzaWRlIGFuZCBicmluZyB0aGVtIGJhY2sgdG8gdGhlIGxpZ2h0LiAKSXQganVzdCB0aGF0IHlvdXIgcGVyc29uYWwgZXhwZXJpZW5jZSBpcyBoaWdobHkgYmlhc2VkLiBUaGV5IGhhdmUgY2VydGlmaWVkIHRoZWlyIFJORy4gWWVzIHRoZXJlIGFyZSBubyB3YXlzIHRvIHRyYWNrIGhhbmRzIGluIGEgZGF0YWJhc2UgYnV0IHRoYXQgZG9lc24gZXF1YWwgcmlnZ2VkLiBUaGUgaWRlYSB0aGF0IGFueSBwb2tlciBzaXRlIHdvdWxkIGluY2x1ZGUgYSBwcm9ncmFtIHRvIGhhdmUgZXZlcnlvbmUgcHV0IGJhZCBiZWF0cyBvbiBlYWNoIG90aGVyIHRvIGdldCBtb3JlIHJha2UgaXMganVzdCBzbyBmbGF3ZWQgdGhhdCB0aWx0cyBtZSBwZW9wbGUgY2FuIGdldCBvbiBib2FyZCB3aXRoIGl0LiBIb3cgd291bGQgdGhhdCBiZW5lZml0IHRoZW0gYXQgYWxsIHdoZW4gdGhlIHJha2UgaXMgY2FwcGVkIGF0IGEgY2VydGFpbiBCQiB0aHJlc2hvbGQgdGhhdCBjYW4gYmUgbWV0IGVhc2lseSB3aXRob3V0IGFueSBhbGwgaW5zPwpUaGUgYWRzIGhhdmUgYWx3YXlzIGxvb2tlZCBsaWtlIGNvbnRlbnQsIHRoZXkganVzdCBhbHdheXMgYmVlbiBhdCB0aGUgdmVyeSB0b3AuIApXaXRoIHRoZSB3aG9sZSBiaXJkLCBJIGxldCByZXN0IGJlZm9yZSBjYXJ2aW5nLgpJbiBTaW5nYXBvcmUsIHJlc3BvbnNpYmlsaXR5IGZhbGxzIG9uIHRoZSBpbmRpdmlkdWFsIGFuZCBoaXMvaGVyIGZhbWlseS4gWW91IGRvIG5vdCBleHBlY3QgYW55IGFzc2lzdGFuY2UgZnJvbSB0aGUgc3RhdGUuIEhlbmNlLCBpdCBub3JtYWwgdG8gaGF2ZSBhIGV2ZXJ5IHBlcnNvbiBmb3IgaGltL2hlcnNlbGYgYXR0aXR1ZGUuClRoZSBmb3VyIG1lZXRpbmcgcm9vbXMgc2l0dWF0ZWQgaW4gdGhlIGhvdGVsIGFyZSBlcXVpcHBlZCB3aXRoIGFsbCB0aGUgbmVjZXNzYXJ5IHRlY2hub2xvZ3kgZm9yIG1lZXRpbmdzIGFuZCBjb25mZXJlbmNlcy4gClRvIGFuc3dlciB5b3VyIHF1ZXN0aW9uIGFib3V0IHdoYXQgY29tZWRpZXMgSSBsaWtlIGJldHRlcjogQmFycnksIFZFRVAsIFRoZSBHb29kIFBsYWNlLCBhbmQgc3VycHJpc2luZ2x5LCBUaGUgT3RoZXIgVHdvLiBJIGxvdmVkIEJyb2FkIENpdHkgYnV0IHRoaW5rIHRoZXkgYWxzbyBuYWlsZWQgaXQgd2l0aCBlbmRpbmcgdGhlIHNob3cgdGhpcyB5ZWFyLiBJIGZpbmQgbXlzZWxmIGxvb2tpbmcgZm9yd2FyZCB0byBUaGUgT3RoZXIgVHdvIG1vcmUgdGhhbiB0aGF0IG5vdy4gCkkgd2FzIHRoZSBzaG91bGRlciB0byBsZWFuIG9uLCBzb21lYm9keSB0byBsaXN0ZW4uIApPdXIgZGl2ZXJzZSBldmVudHMgY2F0ZXIgdG8gZGlmZmVyZW50IGludGVyZXN0cyBhbmQgcHJvbW90ZSBhIG5vIHByZXNzdXJlIGF0bW9zcGhlcmUuIApVbmxlc3MgdGhpcyBpcyB0aGUgZmlyc3QgdGltZSB2MyBwbGF5ZWQsIGV2ZW4gaWYgaGUgZG9lc24ga25vdyB0aGUgdGVybWlub2xvZ3ksIGhlIGhhdmUgc29tZSBzZW5zZSB0aGF0IHRoZXNlIHBsYXllcnMgYXJlIGxvb2tpbmcgc3Ryb25nIGludHVpdGl2ZWx5LiAKVGhlIGludmVzdGlnYXRpb24sIHdoaWNoIFdvb2QgZXN0aW1hdGVkIGJlZ2FuIGluIEFwcmlsLCBjb25jZXJucyBhbGxlZ2F0aW9ucyB0aGF0IGFnZW5jaWVzIGVuZ2FnZWQgaW4gbm9uIHRyYW5zcGFyZW50IHByYWN0aWNlcywgaW5jbHVkaW5nIGNvbGxlY3RpbmcgY2FzaCByZWJhdGVzIGZyb20gbWVkaWEgdmVuZG9ycyBhbmQgbm90IHBhc3NpbmcgaXQgYWxvbmcgdG8gY2xpZW50cy4gVGhlIHByb2JlIHdhcyBzcGFya2VkIGluIHBhcnQgYnkgYSAyMDE2IEFOQSByZXBvcnQgY29uZHVjdGVkIGJ5IGluZGVwZW5kZW50IGZpcm0gSzIgSW50ZWxsaWdlbmNlLiAKQXJlIHRoZXJlIHBlb3BsZSB3aG8gbWFrZSB0aGVpciBiZWQgbGlrZSB0aGF0PyBEb2VzIHRoaXMgaGFwcGVuIHRvIG90aGVyIHBlb3BsZSBvciBqdXN0IHRvIG1lIGZvciBzb21lIHJlYXNvbj8uIApTb21lb25lIHBsZWFzZSBjb3JyZWN0IG1lIGlmIEkgd3JvbmcsIGJ1dCBJIHRoaW5rIEkgaGVhcmQgdGhhdCBwZXJmZWN0IGV4dHJhY3Rpb24gaW50byBhIHB1cmUgZmF0IGxpa2UgY2xhcmlmaWVkIGJ1dHRlciBvciBjb2NvbnV0IG9pbCBjYW4gb25seSBleHRyYWN0IGFib3V0IDYwIDcwJSBvZiB0aGUgVEhDLiBBbmQgSSBzdXJlIHlvdSBjb3VsZCBpbWFnaW5lLCB0aGUgZmF0IGNvbnRlbnQgb2YgYSBnbGFzcyBvZiBtaWxrIGlzIHNpZ25pZmljYW50bHkgbGVzcyB0aGFuIGEgc3RpY2sgb2YgYnV0dGVyLgpPbiAwMy8wMS8yMDA2IEZhc3NiZW5kZXIgYW5kIFdpZWdlcnQgYXJlIHJlY29yZGVkIGZlZWRpbmcgdGhlIGluZm9ybWF0aW9uIHRvIEJyZW5kYW4gdGhhdCBTQSB3ZW50IHVuZGVyIHRoZSBob29kIG9mIHRoZSBSQVY0LiAKQWZ0ZXIgYSBibG9vZHkgZmlnaHQgaW4gSnVseSAyMDE0IGluIHdoaWNoIGEgbWFuIHdhcyBzdGFiYmVkIGluIHRoZSB0ZW1wbGUgYW5kIGxlZnQgaW4gY3JpdGljYWwgY29uZGl0aW9uLCBTaGlwbWFuIHdobyB3ZW50IG9uIHRoZSBsYW0gYmVmb3JlIHBvbGljZSBhcnJpdmVkIHdhcyBjaGFyZ2VkIHdpdGggYXR0ZW1wdGVkIG11cmRlci4KTGVnZW5kYXJ5IHJhZGlvIHJlcG9ydGVyIHRoYXQgd2FzIGhhcmQgdG8gYmVhdCBmaW5hbGx5IHRlbGxzIG93biBzdG9yeQpEaWUgc2luZCBpbiA5OSw5OSUgZGVyIEZsbGUgZ2FyIG5pY2h0IGdlaHJsb3MuIEVpbm1hbCAodm9yIHZpZWxsZWljaHQgMTUgSmFocmVuKSB3YXIgaWNoIGFiZXIgaW4gbmVtIFJFIHVudGVyd2VncyB1bmQgZGEgd3VyZGUgc293YXMgYXVjaCB2b24gbmVyIEZyYXUgTWl0dGUgMzAgcnVtZ2VyZWljaHQuIEljaCBoYWIgaWhyIHBlciBER1MgenUgdmVyc3RlaGVuIGdlZ2ViZW4sIGRhc3MgaWNoIGdlaHJsb3MgYmluIHVuZCBkYXNzIHNpZSBzaWNoIGRlbiBTY2ggIHVuZCBkYSBoYXQgc2llIHp1cmNrZ2VicmRldCwgc2llIHdyZSBhdWNoIGdlaHJsb3MsIG9iIGljaCBiaXNzY2hlbiB3YXJ0ZW4ga25uZSBiaXMgc2llIG1pdCBkZW0gV2FnZW4gZmVydGlnIHdyZSwgc2llIHdyZGUgZGFubiBiaXNzZWwgbWl0IG1pciBwbGF1ZGVybi4KSGlrZXJheiAgMSBwb2ludCAgc3VibWl0dGVkIDI1IGRheXMgYWdvCkZsYXBqYWNrXzc3NyAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvClRoZSAiaHlwZXIiIGluIGh5cGVydGh5cm9pZGlzbSBtZWFucyB0aGUgdGh5cm9pZCBoYXMgZ29uZSBhIGJpdCBib25rZXJzIGFuZCBpcyBwcm9kdWNpbmcgYW4gZXhjZXNzaXZlIGFtb3VudCBvZiB0aHlyb2lkIGhvcm1vbmUuIFRoaXMgaXMgdHlwaWNhbGx5IHRoZSByZXN1bHQgb2YgYSBub24gY2FuY2Vyb3VzIHR1bW9yIG9uIHRoZSB0aHlyb2lkIGdsYW5kLgpIZSByZWFsbHkgaXMgdGhlIGJpZywgc3R1cGlkIGZ1Y2sgdXAgd2UgYWxsIHRob3VnaHQuIE1heWJlIGhlIGlzIGFjdHVhbGx5IHN1ZmZlcmluZyBmcm9tIGRlbWVudGlhIG9yIEFsemhlaW1lciBvciBzb21ldGhpbmcsIGJ1dCBpdCBub3QgaGFtcGVyaW5nIGhpbSB0byB0aGUgZXh0ZW50IHRoYXQgaGUgdG90YWxseSB1bmF3YXJlLiBIZSBqdXN0IGhhcyBob3JyaWJsZSBqdWRnZW1lbnQgYW5kIHRlbXBlcmFtZW50IGFuZCBoZSBtYWtlcyB0aGUgd29yc3QgcG9zc2libGUgZGVjaXNpb25zIGF0IGV2ZXJ5IGdpdmVuIG9wcG9ydHVuaXR5Li4gCkluIHRoZSBsYXN0IHJvdW5kIEkgaGFkIG5vdGhpbmcgbGVmdCBvdGhlciB0aGFuIGJlaW5nIGFoZWFkIG9uIHRoZSBjYXJkcyBhbmQgaGFkIGFscmVhZHkgYmVlbiBkcm9wcGVkIG11bHRpcGxlIHRpbWVzLiBJbiB0aGUgbGFzdCBmZXcgc2Vjb25kcyBoZSBnb2VzIGFsbCBvdXQgYW5kIHB1dHMgbWUgZG93biBhZ2FpbiBmb3IgdGhlIGZpbmFsIHRpbWUsIHNvIGl0IGFsbCBjYW1lIGRvd24gdG8gd2hldGhlciBvciBub3QgSSBjb3VsZCBiZWF0IHRoZSBjb3VudC4gCjIuKSBDb250YWN0IHlvdXIgbG9jYWwsIHN0YXRlLCBhbmQgZmVkZXJhbCBwb2xpdGljaWFucy4gSSBrbm93IGZvciBzb21lIHRoaXMgbWF5IHNlZW0gbGlrZSBpdCBub3Qgd29ydGh3aGlsZSwgYnV0IHRoYXQgZXhhY3RseSB0aGVpciBwbGFuLiBDb250YWN0IHRoZW0gYW55d2F5LiBMb2NhbCBwb2xpdGljaWFucyBhcmUgb2Z0ZW50aW1lcyBtb3JlIG9wZW4gdG8gaGVhcmluZyBmcm9tIHRoZWlyIGNvbnN0aXR1ZW50cyBhcyBhcmUgc3RhdGUgcG9saXRpY2lhbnMgKGF0IGxlYXN0IGluIG15IGFyZWEpLgpIZSB0YWtlcyBteSBwZW5jaWwgYW5kIHdvbid0IGdpdmUgaXQgYmFjayB1bnRpbCBJIHNoYWtlIGhpcyBoYW5kOyBidXQgbW9zdCBvZiB0aGUgdGltZSwgaXQncyBtb3JlIGxpa2UgaG9sZGluZyBoYW5kcyBiZWNhdXNlIGhlIGhvbGRzIG9uIGFuZCB3b24ndCBsZXQgZ28uIFRoZXkgc2VlIHRoZSBlZmZlY3QgdGhhdCBpdCBoYXMgb24geW91LiBXZSBhbGwga25vdyB0byBhdm9pZCBwZW9wbGUgdGhhdCBhcHBlYXIgaW5zYW5lIG9yIGFidXNpdmUgYW5kIG5vdCBzZWxlY3QgdGhlbSBhcyBhIGRhdGluZyBwYXJ0bmVyLiBJZiBpdCBoYXBwZW5zIHRvbyBmcmVxdWVudGx5LCBvciB0aGV5IGxhc2ggb3V0IGF0IHlvdSwgdGhlbiB5b3UgbmVlZCB0byBnZXQgb3V0IG9mIHRoZSByZWxhdGlvbnNoaXAgcmlnaHQgYXdheS4gSWYgeW91IHRyeSB0byBkYXRlIG90aGVycywgdGhleSBtYXkgZm9sbG93IHlvdSBvciB0aHJlYXRlbiB5b3VyIG5ldyBkYXRlLiBNb3JlIG9mdGVuIHRoYW4gbm90LCBhIGxvc2VyIGlzIGxpdmluZyBvbiBjcmVkaXQuIEkgYW0gZGVwZW5kZW50IG9uIG90aGVycyBmb3IgbXkgaGFwcGluZXNzLgpUaGlzIHNlZW1zIHRvIGhlbHAuIAoiQnV0IGxpa2V3aXNlLCB0aGUgcGxheWVyIGF0IHRoZSB0YWJsZSBoYXMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlZmVuZCB0aGVpciBtb3Zlcy4iIFNoZSBsYXVnaHMgYXMgc2hlIHN0YXJ0cyB0byBzaG93IHRoZSBjaGFyaXNtYSB0aGF0IGlzIHRoZSBzdGFwbGUgb2YgaGVyIGNvbXBlbGxpbmcgcGVyc29uYWxpdHkuIFByb2plY3QgQWxsIEluLCBob3dldmVyLCBpcyBtZWFudCB0byBoYXZlIHNpZ25pZmljYW5jZSBldmVuIGJleW9uZCB0aGUgc2NvcGUgb2YgdGhlIGJyb2FkY2FzdC4gCkFtdHJhayBpcyB1bnJlbGlhYmxlIG1lYW5zIG9mIHRyYW5zcG9ydGF0aW9uLkkgbmV2ZXIgc2FpZCBhbnl0aGluZyBhYm91dCBzcGVlZCBpbiBIU1IuIApDbGFpcmV1cHZvdGVzICAzIHBvaW50cyAgc3VibWl0dGVkIDE2IGhvdXJzIGFnbwpUaGUgc2FmZXN0IGFuZCBtb3N0IHBvd2VyZnVsIGNsYXNzIG9mIHZlaGljbGVzIHRoYXQgYSBtYWpvcml0eSBvZiBwZW9wbGUgZHJpdmUgYW5kIGFyZSBmb25kIG9mIGlzIHVuZG91YnRlZGx5LCBjYXJzLiBTbyBnZXQgdG8ga25vdyBhYm91dCB5b3VyIGZhdmUgY2FyIGluIFRvcCBHZWFyIFNlYXNvbiAxNiBFcGlzb2RlIDYgYnkgcmVhZGluZyB0aGlzIC4KVHJhZGVzIG5vdCBhbGwgaXQncyBjcmFja2VkIHVwIHRvIGJlIGlmIHlvdSBoYXZlIHRoZSBpbnRlbGxpZ2VuY2UgZm9yIGEgQ1MgZGVncmVlLi4gCkFnYWluLCBsZXNzIGRyYW1hdGljYWxseSB0aGFuIGluIHRoZSB3YXJwLCBidXQgaXQgc3RpbGwgYXBwbGllcyBvdXRzaWRlIHRoZSB3YXJwLi4gCkluIHRoZSB3aW50ZXIsIHRoZSBsYWNrIG9mIGh1bWlkaXR5IGFuZCBjb2xkIGFpciBjYXVzZXMgeW91ciBza2luIHRvIGdldCBhIGxpdHRsZSBkcnksIHdoaWxlIGluIHRoZSBzdW1tZXIgZXh0cmEgZXhwb3N1cmUgdG8gdGhlIHN1biBsZWF2ZXMgeW91ciBza2luIGluIG5lZWQgb2YgbW9yZSBoeWRyYXRpb24gdG8ga2VlcCBpdCBtb2lzdHVyaXplZC4gClRoZXkgbWFrZSBzdXJlIG5ldmVyIHRvIGxlYXZlIGhlciBhbG9uZSB3aXRoIGhpbS4gSW4gZmFjdCB0aGV5IGFyZSBlbmZvcmNpbmcgaGVyIGJlbGllZiB0aGF0IHNoZSBpcyBpbmNhcGFibGUgb2YgbWFuYWdpbmcgYWxvbmUuIEFzIG1lbnRpb25lZCBhYm92ZSBpdCBpcyBvZnRlbiBkaWZmaWN1bHQgdG8gdGVsbCBhbnlvbmUgaG93IHlvdSBhcmUgZmVlbGluZywgYnV0IGl0IG1heSBiZSBpbXBvc3NpYmxlIHRvIG1ha2UgYSBxdWljayByZWNvdmVyeSBpZiB5b3UgZG8gbm90LiAKVGhpcyBpcyB3aGVyZSBtb3N0IGpld2VscnkgaXRlbXMsIHdhdGNoZXMgb3IgY29pbnMgbWF5IGhhdmUgYmVlbiBsb3N0IGFuZCBhcmUgbm93IHdhaXRpbmcgZm9yIHlvdSB0byBmaW5kLiAKRmluZGluZyBhIExvY2F0aW9uV2hlbiB5b3Ugc3RhcnQgb3V0LCB5b3UgbWF5IG5vdCB3YW50IHRvIGxlYXNlIGEgbG9jYXRpb24gcmlnaHQgYXdheS4gQXMgYW4gYWx0ZXJuYXRpdmUsIHlvdSBjYW4gd29yayBvdXQgb2YgeW91ciBob21lICAgYXNzdW1pbmcgbG9jYWwgbGF3cyBwZXJtaXQgeW91IHRvIGhhdmUgYSBob21lIGJ1c2luZXNzIGluIHlvdXIgem9uZS4gQW5vdGhlciBvcHRpb24gaXMgdG8gbGVhc2UgYSBzcGFjZSBmcm9tIGFub3RoZXIgbWFzc2FnZSB0aGVyYXBpc3Qgb3Igb3RoZXIgaGVhbHRoIHByYWN0aXRpb25lci4KV2hyZW5kIGljaCBkaWUgUGlsbGUgdm9uIGRlciB1L0tyb3hlbGR5cGhpYyBzY2hyZWlidCB3b2hsIGRpcmVrdCBuZWhtZW4gd3JkZSwgZnJhZyBpY2ggbWFsIGluIGRpZSBSdW5kZTogd2llIHZpZWxlIEZyYXVlbiB3b2xsZW4gc2ljaCBiZWkgZGVyIFZlcmh0dW5nIHdpcmtsaWNoIGF1ZiBkZW4gTWFubiB2ZXJsYXNzZW4/IERhcyBncmVyZSBSaXNraW8gdHJndCBpbW1lcm5vY2ggZGllIEZyYXUsIGRlbm4gTW5uZXIgd2VyZGVuIGhhbHQgbmljaHQgc2Nod2FuZ2VyLgpUaGUgY2hpcHMgaW4gdGhpcyBzZXQgYXJlIGtub3duIGZvciB0aGVpciBzdHJpa2luZ2x5IGNvbG9yZnVsIGFwcGVhcmFuY2UuIFN1Y2ggYW4gYXBwZWFyYW5jZSByYXJlbHkgZHVsbHMgYW5kIGV2ZW4gaWYgYSBsaXR0bGUgbHVzdGVyIGlzIGxvc3QsIGl0IGNhbiBiZSByZXN0b3JlZCBieSBtZXJlbHkgY2xlYW5pbmcgdGhlIGNoaXBzIHdpdGggYSBsaXR0bGUgc29hcCBhbmQgd2F0ZXIuIApQYXVsMjgzNCAgMSBwb2ludCAgc3VibWl0dGVkIDEgbW9udGggYWdvCkhvcm1vYW5zLCBzdHJlc3MgZnJvbSBhbGwgc2lkZXMsIHNsZWVwIGRlcHJpdmF0aW9uLCBwZW9wbGUgd2hvIHNheSBoYXZpbmcga2lkcyB3aWxsIG1ha2UgeW91IGhhcHB5IGFyZSBhcGFydCBvZiB0aGUgcHJvYmxlbS4gU29jaWV0eSBoaWRlcyBmcm9tIHdvbWVuIHRoZSBtZW50YWwgYW5kIGVtb3Rpb25hbCBlZmZlY3QgcyBvZiBwcmVnbmFuY3kgYW5kIGNoaWxkIGJpcnRoLCBiZWNhdXNlIGtpZHMgYXJlIGFsd2F5cyB3b25kZXJmdWwsIGFuZCBsZXNzIHBlb3BsZSB3b3VsZCBoYXZlIGtpZHMgaWYgdGhleSBrbmV3IGFsbCB0aGUgZWZmZWN0cyBpdCBjYW4gaGF2ZS4uIApNaWVwIHdvdWxkIGxhdGVyIHJlY2FsbCBob3csIGFmdGVyIHN0YW5kaW5nIHNwZWVjaGxlc3MgZm9yIGEgdGltZSwgT3R0byByZWxlYXNlZCB0aGUgInRodW5kZXJib2x0IiBvZiBuZXdzIHRoYXQgRWRpdGggd291bGQgbm90IHJldHVybiBidXQgdGhhdCBoZSBoZWxkIG91dCBob3BlIGZvciBoaXMgZGF1Z2h0ZXJzLiBGaW5hbGx5LCBpbiBKdWx5LCBoZSBoZWFyZCB0aGF0IEphbm5pZSBCcmFuZGVzIEJyaWxsZXNsaWpwZXIgbWlnaHQga25vdyBvZiB0aGVpciBmYXRlLiBPbiB0aGUgMTh0aCBvZiB0aGF0IG1vbnRoLCBoZSB3ZW50IHRvIGhlciBob21lLi4gCkFmdGVyIHRoYXQsIEkgcmVhbGx5IGxldCBteXNlbGYgZ28gb3ZlciB0aGUgaG9saWRheXMuIApBbGwgeW91IG5lZWQgdG8gZG8gaXMgYWR2YW5jZSBzdGVwIGJ5IHN0ZXAuIFRoZSBBbG9ubmUgS25pZ2h0cyB3aWxsIGNoYXJnZSBhdCB5b3UgYXMgeW91IGVudGVyIHRoZWlyIGFnZ3JvIHJhbmdlLiBCbG9jayB0aGVpciBhdHRhY2sgYW5kIGdpdmUgdGhlbSB0d28gcXVpY2sgYm9ua3Mgd2l0aCB5b3VyIGJsdW50IHdlYXBvbiwgcmluc2UgYW5kIHJlcGVhdC4gClRoZXkgYWxzbyB3b24gaXQgNCB0aW1lcyBpbiA1IHllYXJzLCBwbHVzIHJlYWNoaW5nIGxhdGUgc3RhZ2VzIGNvbnNpc3RlbnRseSBiZWZvcmUgdGhhdCwgc28gdGhlbSBnZXR0aW5nIGtub2NrZWQgb3V0IGluIHRoZSBmaXJzdCBrbm9ja291dCByb3VuZCBpcyBhIGJpdCBzaG9ja2luZy5UaGV5IGxvc3QgdG8gYSBjbHViIHdob3NlIGZpcnN0LCBzZWNvbmQgYW5kIHlvdXRoIHRlYW1zIGNvbWJpbmVkIGFyZSBwYWlkIGxlc3MgdGhhbiBvbmUgb2YgTWFkcmlkIHN1YnN0aXR1dGVzVGhlaXIgY2FwdGFpbiBhbmQgdGhlaXIgYmVzdCBkZWZlbmRlciBpbnRlbnRpb25hbGx5IGNhcmRlZCBoaW1zZWxmIGxhc3QgZ2FtZSBiZWNhdXNlIGhlIGFzc3VtZWQgTWFkcmlkIHdvdWxkIGhhbmRpbHkgYmVhdCBBamF4IGluIHRoZSBzZWNvbmQgbGVnIChNYWRyaWQgd2VyZSB1cCAyIDEgaW4gdGhlIGZpcnN0IGdhbWUpIGFuZCB0aGlzIHdheSBoZSBoYXZlIGEgY2xlYW4gc2hlZXQgaW4gdGhlIHF1YXJ0ZXIgZmluYWxzLiBIZSB3YXRjaGVkIHRoZSBnYW1lIGluIGEgcHJpdmF0ZSBib290aCB3aGlsZSBmaWxtaW5nIGhpbXNlbGYgZm9yIGhpcyBBbWF6b24gZG9jdW1lbnRhcnkgZXhwZWN0aW5nIHRvIHNlZSBoaXMgdGVhbSBjcnVpc2UgdGhyb3VnaCB0byB0aGUgUUZzLCBidXQgaW5zdGVhZCBzYXcgdGhlbSBnZXQgdHJvdW5jZWQgYXQgdGhlaXIgaG9tZSBncm91bmQgYnkgYSBidW5jaCBvZiBsaXRlcmFsIHRlZW5hZ2Vycy5NYWRyaWQgd2FzIGR1ZSB0byBjcnVtYmxlIGF0IHNvbWUgcG9pbnQuIApPdmVydmlldyBmb3IgQkNha2Vzc3MKT24gdGhlIHJpdmVyLCBJIHRoaW5rIEkgd291bGQgY29tZm9ydGFibHkgZm9sZCB0aGlzIGhhbmQuIEkgcmF0aGVyIGNhbGwgd2l0aCBteSBjb21ib3Mgb2Ygc2V0cywgcm91Z2hseSA4IDEwIGNvbWJvcyBhbmQgc29tZSBjb21ib3Mgb2YgODgvNjYvNTUgYXMgcHVyZSBibHVmZiBjYXRjaGVycyAoYXMgZXhwbGFpbmVkIGJlbG93KS4gSSBqdXN0IGNhbiBqdXN0aWZ5IGNhbGxpbmcgbXVjaCBsb29zZXIgdnMgbW9zdCBwZW9wbGUgd2l0aG91dCBhbnkgZXh0ZW5zaXZlIGhpc3Rvcnkgc2luY2UgSSBkb24gYmVsaWV2ZSB0aGV5IGNhbiBmaW5kIGVub3VnaCBjb21ib3Mgb2YgYmx1ZmYgb24gdGhpcyBydW4gb3V0LgpJIHJlYWQgdGhlIGVudGlyZSBhcnRpY2xlLCBzbyBubyBJIGRpZG4gaWdub3JlIGNvbnRleHQuIFdoYXQgZG8geW91IHdhbnQgdGhlbSB0byBkbywgY29udGludWUgbG9zaW5nICQyIG1pbGxpb24gZXZlcnkgZm91ciB5ZWFycyB0byBob3VzZSAxMDAgcmVzaWRlbnRzIGluIGFuIGFyZWEgd2l0aCBwcm9iYWJseSB0aGUgaGlnaGVzdCBjb3N0IG9mIGxpdmluZyBpbiB0aGUgZW50aXJlIGNpdHk/IFRoYXQgZG9lc24gc291bmQgcmVhc29uYWJsZSBkb2VzIGl0PyBXaGF0IGRvZXMgc291bmQgcmVhc29uYWJsZSBpcyB0byBzZWxsIHRoZSBwcm9wZXJ0eSB5b3UgYXJlIGxvc2luZyBtaWxsaW9ucyBvbiB0aGF0IGlzIGxvY2F0ZWQgaW4gYXJlYSB0aGF0IGlzIG5vdCBjb25kdWNpdmUgdG8gdGhlIGluY29tZSBvZiB5b3VyIHJlc2lkZW50czsgYW5kIGFzIGEgcmVzdWx0IG9mIHRoZSBzYWxlLCBiZSBhYmxlIHRvIHJlbG9jYXRlIGFsbCAxMDAgcmVzaWRlbnRzIGFuZCBwcm92aWRlIDIwMCBNT1JFIGxvdyBpbmNvbWUgaW5kaXZpZHVhbHMgaG91c2luZy4gV2hhdCB0aGUgaG90ZWwgYW5kIHRoZSBjaXR5IHdhbnQgdG8gZG8gd2l0aCB0aGUgcGFya2luZyBzaXR1YXRpb24gaXMgY29tcGxldGVseSBpcnJlbGV2YW50IHRvIHRoZSBmYWN0IHRoYXQgQ01IQSBpcyBkb2luZyB3aGF0IGlzIHJpZ2h0IGZpbmFuY2lhbGx5IGFuZCB3aGF0IG1ha2UgY2FuIG1ha2UgdGhlIG1vc3QgaW1wYWN0IHRvIHRoZSBwb3B1bGF0aW9uIHRoZXkgYXJlIGRlc2lnbmVkIHRvIHNlcnZlLiAKMS4gCllvdSBhcmUgZ2V0dGluZyBhIGRlY2VudCBwcmljZSBvbiB0aGUgcml2ZXIgdG8gY2FsbCB3aGljaCBtYWtlcyBpdCBoYXJkIHRvIGZvbGQgSSBob25lc3RseSBtaWdodCBsZWFuIGNhbGwgaGVyZSBnaXZlbiB0aGUgcHJpY2UgYW5kIGhpcyBsaW5lLiAKIkl0J3MgZGVwbG9yYWJsZSBjb25kdWN0LiIgVGhlIGNvdXJ0IGhlYXJkdGhlIHZpY3RpbSBhbmQgYSBmcmllbmQgd2VyZXBsYXlpbmcgdGhlIHBva2VyIG1hY2hpbmVzIGFyb3VuZCA4cG0gb24gTWFyY2ggNiBsYXN0IHllYXIgd2hlbiBCbGVpbXV0aCBjYW1lIGFuZCBzYXQgbmVhciB0aGVtIGFuZCBiZWdhbiBzdGFyaW5nIGluIHRoZWlyIGRpcmVjdGlvbi4gCklmIHRoZSBzdHJ1Y3R1cmUgYWJvdmUgc2VlbXMgdG8gZ2V0IHRvbyBoaWdoLCB0b28gZmFzdCwgeW91IGNhbiBlYXNpbHkgYWRkIGluIHRoZSBmb2xsb3dpbmcgbGV2ZWxzOiA3NS8xNTAsIDE1MC8zMDAsIDMwMC82MDAsIDUwMC8xMDAwIG9yIGFzIG1hbnkgYWRkaXRpb25hbCBsZXZlbHMgYXMgeW91IGNob29zZS4gCkh5cG90aGV0aWNhbGx5IHNwZWFraW5nIG9mIGNvdXJzZS4gCklkZWFsIHNlbGVjdGlvbnMgd291bGQgYmUgZnJlc2ggdmVnZXRhYmxlcywgZnJ1aXRzLCB3aGl0ZSBtZWF0IGFuZCBmaXNoLiBFeGNoYW5nZSB5b3VyIGFsY29ob2xpYyBhbmQgY2FyYm9uaWMgZHJpbmtzIHdpdGggd2F0ZXIgYW5kIHRlYS4gCk1vb3NoaW1hbnggIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KWW91IGNhbiB0cmFjZSBpdHMgcm9vdHMgYmFjayB0byB0aGUgMTk1MHMsIHdoZW4gY29tcHV0ZXIgdGVjaG5vbG9neSBpdHNlbGYgd2FzIHF1aXRlIHlvdW5nLiAKTGlrZSwgd2hhdCB0byBkbyB0byBnZXQgaW4gaGVhdmVuLCB3aG8gd2FzIHRoZSBwcm9waGV0IGFuZCB3aGF0IGRpZCBoZSBkby4gClNvIHNoZSBnZXRzIHRoZXJlIGFuZCB3ZSBnbyBwaWNrIHVwIHNvbWUgY29rZS4gV2UgZHJpbmsgYW5kIHNtb2tlIHNvbWUgd2VlZCBhbmQgc3BpY2UgYW5kIGRvIGVub3VnaCBjb2tlIHRvIGtub2NrIG91dCByaWNrIEphbWVzLiBTaGUgaGFkIGFza2VkIGlmIHNoZSBjb3VsZCBpbnZpdGUgaGVyIGZyaWVuZCBhbmQgSSBzYWlkIHllcyBhbmQgaW52aXRlZCBtaW5lIHNvIHdlIHdlcmUgYWxsIGhhbmdpbmcgb3V0IGJlZm9yZSBJIGJyb3VnaHQgaGVyIGJhY2sgaW4gdGhlIHJvb20uIAoxLjU1IEdyYWRlIDEgTmV2aWxsZSBIb3RlbHMgTm92aWNlIFN0ZWVwbGVjaGFzZSAzbQpFYWNoIHllYXIsIHBhcnRpY2lwYW50cyBjb21wZXRlIGF0IHRoZSBhbm51YWwgS2V6dXJvdWthaSBleGhpYml0aW9uIGluIEphcGFuIHRvIHNlZSB3aG8gY2FuIHNoYXZlIHRoZSB0aGlubmVzdCBwaWVjZSBvZiB3b29kLgpTdGVwaGVuIEhvbG1lcwpCS0Jvd2wgVmVnYXMgaXMgYSBncmVhdCwgZ3JlYXQgdmVudWUgZm9yIFVNLCBidXQgdGhleSBqdXN0IGRvbiBkcmF3IHRoYXQgd2VsbCB0aGVyZSwgYW5kIGlmIHRoZXkgaGl0IFZlZ2FzIGZvciBvbmx5IG9uZSBuaWdodCBpbiB0aGUgbWlkZGxlIG9mIGEgZm91ciBuaWdodCB3ZWVrZW5kIHJ1biB0aHJvdWdoIHRoZSBzb3V0aHdlc3QsIHRoZSBiYW5kIGRvZXNuIGdldCB0byBnbyBvdXQgYW5kIGVuam95IHRoZW1zZWx2ZXMgYWZ0ZXIgdGhlIHNob3cgKG5vIHBva2VyIGZvciBTdGFzaWssIGp1c3QgR0lUVi4pCkZpcnN0LCBsb3dlciB0aGUgZmVlZCBib3dsIHRvIG5vIG1vcmUgdGhhbiAyIGZlZXQgYWJvdmUgdGhlIGdyb3VuZC4gSG9yc2VzIGRvIGJlc3QgZWF0aW5nIGxvdyB0byB0aGUgZ3JvdW5kLiBZb3UgY2FuIGFjdHVhbGx5IGZlZWwgdGhlIG11c2NsZSBrbm90dGVkIChhYm91dCB0aGUgc2l6ZSBvZiBhIHRlbm5pcyBiYWxsKS4gCkFuZCB0aG9zZSBoYXJkZXN0IGhpdCBieSB0aGUgcmVjZXNzaW9uIGFyZSBnZXR0aW5nIGV4dGVuZGVkIHVuZW1wbG95bWVudCBpbnN1cmFuY2UsIGhlYWx0aCBjb3ZlcmFnZSBhbmQgb3RoZXIgaGVscCB0byBnZXQgdGhyb3VnaCB0aGVzZSB0b3VnaCB0aW1lcy4gVGhlIGJvdHRvbSBsaW5lIGlzIHRoYXQgdHdvIHRoaXJkcyBvZiB0aGUgUmVjb3ZlcnkgQWN0IGRvZXNuJ3QgZmluYW5jZSAicHJvZ3JhbXMsIiBidXQgZ29lcyBkaXJlY3RseSB0byB0YXggY3V0cywgc3RhdGUgZ292ZXJubWVudHMgYW5kIGZhbWlsaWVzIGluIG5lZWQsIHdpdGhvdXQgcmVkIHRhcGUgb3IgZGVsYXlzLgpGcm9tIGFkb3B0aW9uIHRvIGhvc3RpbmcgZXhjaGFuZ2Ugc3R1ZGVudHMsIHRoZXJlIGFyZSBtYW55IHdheXMgdG8gYnVpbGQgeW91ciBmYW1pbHkuIApFdmVuIG9uIHNvbWUgd2V0IGJvYXJkcyBzb21ldGltZXMgeW91IHJhdGhlciBiZXQgaGFsZiBwb3QgaWYgeW91IGNydXNoIHRoZSBib2FyZCBhbmQgcnVub3V0cyBhbmQgd2FudCB0byBrZWVwIGRvbWluYXRlZCBoYW5kcyBpbiB0aGF0IHdvdWxkIG90aGVyd2lzZSBmb2xkLCBsaWtlIG9uIDNiZXQgcG90cy4gCldpdGggdGhhdCBpbiBtaW5kLCBzaGUgZW5jb3VyYWdlZCBoZXIgZmVsbG93IGdyYWR1YXRlcyBub3Qgb25seSB0byBmb2xsb3cgdGhlaXIgaGVhcnRzLCBidXQgYWxzbyB0byBicmluZyBwb3NpdGl2ZSBjaGFuZ2UgdG8gcGxhY2VzIGFyb3VuZCB0aGUgd29ybGQgd2hlcmUgdGhlcmUgaXMgdmlvbGVuY2UgYW5kIGhhdHJlZC4gIk91ciB2b2ljZXMgYXJlIG1vcmUgcG93ZXJmdWwgdGhhbiBldmVyLCIgTGFHcmFzc2Egc2FpZC4gIlRoZSB0eXBlIG9mIGluZXF1YWxpdHkgYW5kIHZpb2xlbmNlIGZvdW5kIGluIHRoZSB3b3JsZCB0b2RheSB3aWxsIGVuZCBiZWNhdXNlIG9mIG91ciBnZW5lcmF0aW9uLiIuIApTZWFuIENvbm5vciBqb2IgYXMgbWFuYWdlciBpcyBzdXJlbHkgdGhlIG1vc3QgdW5lbnZpYWJsZSBpbiB0aGUgZG9tZXN0aWMgZ2FtZS4gCkkgdXNlZCB0byBiZSBhIGJpZyBmYW4gb2YgRXhwcmVzcyBwYXR0ZXJucywgYnV0IHRoZWlyIGN1cnJlbnQgbGluZSBpc24gYWxsIHRoYXQgZ3JlYXQuCkluIGludGVydmlldyB3aXRoIEp1c3RpbiBCb25vbW8gYmVmb3JlIHRoZSBVUyBQb2tlciBPcGVuIGtpY2tlZCBvZmYsIGludGVydmlld2VyIERyZWEgUmVuZWUgYXNrZWQgaGltIGFib3V0IGhpcyBzZWNyZXQgdG8gcmVjb3JkIGJyZWFraW5nIHN1Y2Nlc3MgaW4gMjAxOCwgYW5kIGhvdyBvdGhlciBwbGF5ZXJzIGNhbiBiZSBhcyBzdWNjZXNzZnVsIGFzIGhlIGJlZW4gdGhpcyBwYXN0IHllYXIuICJCYXNpY2FsbHksIGJlZm9yZSBJIHJlZ2lzdGVyIGluIGFueSB0b3VybmFtZW50IEkgcGxheSwgSSBjb25zdW1lIGFuIGVudGlyZSBib3R0bGUgb2YgRnJhbmsgUmVkIEhvdCB2aWEgc3VwcG9zaXRvcnkuIAoiV2UndmUgcGxheWVkIHRoaXMgZ2FtZSBzaW5jZSB3ZSB3ZXJlIGxpdHRsZSBraWRzLCB3ZSBkcmVhbWVkIGFib3V0IHRoaXMgbW9tZW50LCIgZ2FtZSBNVlAgRm9sZXMgc2FpZC4gIlRoZXJlJ3MgcGxlbnR5IG9mIGtpZHMgd2F0Y2hpbmcgdGhpcyBnYW1lIHJpZ2h0IG5vdyBkcmVhbWluZyBhYm91dCB0aGlzIG1vbWVudCBhbmQgc29tZWRheSB3aWxsIGJlIGhlcmUuIgpFZG1vbnRvbiwgd2UgaGF2ZSBhIHJlYWwgY3VsaW5hcnkgY29tbXVuaXR5LCBMZWJzYWNrIHNheXMuIApJZiB5b3Ugc2hvdyB1cCB0byBhIGVsZW1lbnRhcnkgc2Nob29sIHRlZSBiYWxsIGdhbWUgYW5kIHlvdXIgInN1YnN0aXR1dGUgcGxheWVyIiBpcyB0aGUgaGlnaCBzY2hvb2wgYWxsIHN0YXRlIE1WUCwgcGVvcGxlIGFyZSBnb2luZyB0byBmcm93biBvbiBpdC4gClRIRSAxNSBCRVNUIFRoaW5ncyB0byBEbyBpbiBTdAoiSSB2ZXJ5IG11Y2ggd2FudCB0byBsb3ZlIG9wZW4gcGxhbnMsIGJlY2F1c2UgdGhleSBmZWVsIGNvb2wuIApQZXRlciBHaWxiZXJ0IERWTSBXaXRoIG11Y2ggc2FkbmVzcywgd2UgYW5ub3VuY2UgdGhlIHBhc3Npbmcgb2Ygb3VyIGZhdGhlciwgUGV0ZXIgT2xpdmVyIGluIEd1ZWxwaCwgT250YXJpbyBvbiBGcmlkYXksIEp1bHkgMTQsIDIwMTcgcGVhY2VmdWxseSBhdCBhZ2UgODkuIAoyIHdlZWtzIGFnbyArIEJ5IE1pY2hhZWwgSy4gTWNJbnR5cmUsIFRoZSBQbGFpbiBEZWFsZXIKQmlnZ2VzdCBjb25jZXJuIGlzIHRvdGFsICQgY29tcC4gCkkga25vdyB0aGlzIHNvdW5kcyBiZWdnaW5nIGFuZCB2YWd1ZSwgYnV0IEkgcmVhbGx5IGhhdmVuJ3QgYmVlbiBhYmxlIHRvIG1ha2UgbXVjaCBoZWFkd2F5IGluIHRoZSB3b3JrLCB0aG91Z2ggaXQgc2VlbXMgdG8gZGlzcGxheSB0aGUgb2NjdXJyZW5jZSBhbmQgZnJlcXVlbmN5IG9mIGdlbmVyYWwgY29sb3JzIGluIDEwMCBibG9jayBkaXN0cmlidXRpb25zLiAKVGhlIDIwMTQgZG9jdW1lbnRzIHNob3cgdGhlIGZvdW5kYXRpb24gaXMgaW4gYSB3b3JzZSBmaW5hbmNpYWwgcG9zaXRpb24gdGhhbiBpdCBpcyBjdXJyZW50bHkgcHVibGljbHkgY2xhaW1pbmcuIFRoZSBmb3VuZGF0aW9uIGhhcyByZWNlbnRseXRvbGQgdGhlIG1lZGlhIGl0IGRvbmF0ZWQgMzBvZiBldmVyeSBkb2xsYXIgcmFpc2VkIGluIDIwMTQuIEJ1dCB0aGUgMjAxNCByZWNvcmRzIHNob3cganVzdCAxMW9mIGV2ZXJ5IGRvbGxhciByYWlzZWQgd2VyZSBhY3R1YWxseSBlYXJtYXJrZWQgZm9yIGNoYXJpdGllcyB0aGF0IGNhcmUgZm9yIHNpY2sgYW5kIG5lZWR5IGNoaWxkcmVuIHRoYXQgeWVhci4gCkkgZG91YnQgYW55b25lIGluIEFCQkEgbWFkZSBpdCBvbmUuIFNhbWUgd2l0aCBtdXNocm9vbXMgb3IgTFNELiAKVGhlcmUgYXJlIG1hbnkgQW5kcm9pZCBwb2tlciBhcHBzIG9yIEFuZHJvaWQgY29tcGF0aWJsZSBtb2JpbGUgcG9rZXIgc2l0ZXMgYW5kIHlvdSBjYW4gZWFzaWx5IGFjY2VzcyB0aGVtLiBUaGUgYXBwIGNhbiBiZSBkb3dubG9hZGVkIGZyb20gUGxheSBTdG9yZSBvciBmcm9tIHRoZSBvbmxpbmUgcG9rZXIgY291bnRlcnBhcnQgYnkgc2Nhbm5pbmcgYSBRUiBjb2RlIG9yIHJlY2VpdmluZyBhbiBTTVMgYWN0aXZhdGlvbiBsaW5rLiBTb21lIHBva2VyIHNpdGVzIGZvciBBbmRyb2lkIGhhdmUgYSBtb2JpbGUgY29tcGF0aWJsZSBkZXNpZ24gc28gcGxheWVycyBjYW4gZGlyZWN0bHkgYWNjZXNzIHRoZW0gb24gYSBtb2JpbGUgYnJvd3Nlci4KUmVzdWx0czogRm9yIHBhaW4sIFNNVCBoYWQgYSBzdGF0aXN0aWNhbGx5IHNpZ25pZmljYW50IGFkdmFudGFnZSBvdmVyIG1lZGljYXRpb24gYWZ0ZXIgOCwgMTIsIDI2LCBhbmQgNTIgd2Vla3MgKFAgIDAuMDEwKSwgYW5kIEhFQSB3YXMgc3VwZXJpb3IgdG8gbWVkaWNhdGlvbiBhdCAyNiB3ZWVrcyAoUCA9IDAuMDIpLiBObyBpbXBvcnRhbnQgZGlmZmVyZW5jZXMgaW4gcGFpbiB3ZXJlIGZvdW5kIGJldHdlZW4gU01UIGFuZCBIRUEgYXQgYW55IHRpbWUgcG9pbnQuIFJlc3VsdHMgZm9yIG1vc3Qgb2YgdGhlIHNlY29uZGFyeSBvdXRjb21lcyB3ZXJlIHNpbWlsYXIgdG8gdGhvc2Ugb2YgdGhlIHByaW1hcnkgb3V0Y29tZS4KVGhlIHN1cmdlcnkgSSBoYWQgd2FzIHRoZSBTSVBTLCB3aGljaCBpcyB0aGUgZHVvZGVuYWwgc3dpdGNoIHdpdGggYSBtb2RpZmljYXRpb24gbXkgc3VyZ2VvbiBoZWxwZWQgZGVzaWduIHRoYXQgcHJlc2VydmVzIHRoZSBweWxvcmljIHZhbHZlLCB3aGljaCBjb250cm9scyB0aGUgc3BlZWQgdGhhdCB0aGUgc3RvbWFjaCBlbXB0aWVzIGludG8gdGhlIGludGVzdGluZXMuIApCcnVubmluZyBNZW1vcmlhbCBBd2FyZCwgYSBwcmVzdGlnaW91cyBhd2FyZCBnaXZlbiB0byBhbiBFTVMgRGlzdHJpY3QgdGhhdCBleGVtcGxpZmllcyBvdXRzdGFuZGluZyBwcm9mZXNzaW9uYWxpc20gYW5kIHNlcnZpY2UgdG8gdGhlIGNvbW11bml0eSBpdCBzZXJ2ZXMuIApFdmVudHVhbGx5IHlvdSB3aWxsIGNvbWUgdG8gYSBzY3JlZW4gdGhhdCB3aWxsIGFzayB5b3UgZm9yIHlvdXIgc2VyaWFsIG51bWJlciBiZWZvcmUgaXQgd2lsbCBkbyB0aGUgaW5zdGFsbC4gClRTTSB3aWxsIG5ldmVyLCBldmVyIHdpbiBhIGRpcmVjdCA1IHYgNSBzdGFuZGFyZCBnYW1lIGFnYWluc3QgU0tULiBXZWFrZXIgdGVhbXMgbmVlZCB0byBkcmFmdCBvdGhlciB0eXBlcyBvZiBjb21wb3NpdGlvbnMgICBwaWNrLCBzcGxpdCBwdXNoLCBwb2tlLCBldGMuIExldCB0aGluayBhYm91dCB3aGF0IHdvdWxkIGhhcHBlbiBpZiBUU00gcGxheWVkIHRoZWlyIGJlc3QgY29tcG9zaXRpb24gICBvdXRsYW5pbmcgdGhlIG90aGVyIHRlYW0gaW50byBsYXRlIGdhbWUuIApBIHdpZGUgYXJyYXkgb2YgY2FyZWVyIG9wdGlvbnMgYWxzbyBhZGQgdG8gdGhlIHNlY3VyaXR5LiAKSSd2ZSBmb3VuZCBteXNlbGYgaW4gc2ltaWxhciBjaXJjdW1zdGFuY2VzIHJlY2VudGx5IGFuZCBJJ3ZlIGJlZW4gc3BlYWtpbmcgdXAgYWJvdXQgaXQuIEknbGwgdHJ5IGFuZCB0ZWxsIG1lbiB3aGF0IHRvIGRvIHRvIGhlbHAgbWUgcmVhY2ggbXkgTy4gCk5vdCBvbmx5IHdpbGwgeW91IGJlIGFibGUgdG8gcmVudCBvdXQgdGhlIGhvbWUgdG8gb3RoZXJzLCBidXQgeW91IHdpbGwgYnV5aW5nIGFuZCBzcGVuZCBlbm91Z2ggdGltZSB0aGVyZSB0byBsZWFybiBhYm91dCBuZWlnaGJvcmhvb2RzIGFuZCBhbWVuaXRpZXMuLiAKWW91IGFyZSByaWdodCwgdGhlcmUgaXMgbm90IGEgY2hpbmVzZSB0ZWEgY2VyZW1vbnksIGlzIGEgYml0IG9mIGFuIG9yaWVudGFsaXN0aWMgbWlzY29uY2VwdGlvbiwgaXRzIGEgamFwYW5lc2UgdGhpbmcgdGhlIHRlYSBjZXJlbW9ueSBzdXJlIGJ1dCBpbiBjaGluYSBwZW9wbGUganVzdCBicmV3IHRlYSBhbmQgZHJpbmsgaXQgZm9sbG93aW5nIHVzdWFsbHkgYSBmZXcgc3RlcHMgZnVuY3Rpb25hbCB0byB0aGUgdGVhIGJyZXdpbmcuIFRoZSBvbmx5IHRoaW5nIHRoYXQgY29tZXMgY2xvc2UgaXMgdGhlIHNvIGNhbGxlZCBnb25nZnUgY2hhIHN0eWxlIG9mIGRyaW5raW5nIGJ1dCB0aGF0IGRvbmUgaW4gY2hhb3pob3UsIGd1YW5nZG9uZyB3aXRoIDMgY3VwcyBvbiBhIHBsYXRlIGV0YyBldGMuIApBbGwgdGhlIG1hcmtldGluZyBqb2JzIHBvc3RlZCBvbmxpbmUgaGVyZSBhcmUgc2FsZXMgam9icyBpbiBkaXNndWlzZS4gTm8gbWF0dGVyIHdoYXQgdGhleSBzYXkgaW4gdGhlIGpvYiBkZXNjcmlwdGlvbiwgaXQgZG9vciB0byBkb29yIHNhbGVzIG9yIGJvb3RoIHNhbGVzLiBMb29rIG91dCBmb3IgY29tcGFuaWVzIHRoYXQgaGF2ZSAiTWFya2V0aW5nIiBvciAiRGlyZWN0IiBpbiB0aGVpciBuYW1lcy4gCkkgaGF2ZSB0b2xkIGEgZmV3IG9mIG15IG9sZGVyIGZyaWVuZHMgKEkgc2F5IG9sZGVyIGJ1dCB0aGV5J3JlIHRoZSBzYW1lIGFnZSBhcyBtZSBzaW5jZSBldmVyeW9uZSBvbiBteSBuZXcgZGVncmVlIHByb2dyYW1tZSBpcyB5b3VuZ2VyIHRoYW4gbWUpIGJ1dCBhc2lkZSBmcm9tIHRlbGxpbmcgbWUgdG8gZ2V0IFRpbmRlciBhbmQgInlvdSdyZSBhIGdvb2QgZ3V5LCBiZSBjb25maWRlbnQiIEkgaGF2ZW4ndCByZWFsbHkgaGVhcmQgbXVjaCBlbHNlICAgdG8gYmUgaG9uZXN0IHRoYXQncyBub3QgcGFydGljdWxhcmx5IGhlbHBmdWwuIEkndmUgdGhvdWdodCBhYm91dCB0YWxraW5nIHRvIG15IG5ldyBmcmllbmRzIGFib3V0IGl0IGJ1dCBjYW4ndCByZWFsbHkgZmluZCBhbiBhcHByb3ByaWF0ZSB0aW1lIHRvIGxldCB0aGVtIGtub3cgYWJvdXQgbXkgcHJvYmxlbXMgYW5kIGFzayBmb3IgaGVscC4uIApJIGhhdmUgTWljaGlnYW4gc2xpZ2h0bHkgYWhlYWQgb2YgS2VudHVja3kgYmVjYXVzZSBJIHJhbmsgb24gb3ZlcmFsbCByZXN1bWUsIGFuZCB0cnkgbm90IHRvIGJlIHJlYWN0aW9uYXJ5LiAKRm9yIG1lbiBvcmFsIGlzIGdyZWF0IHJpZ2h0IG9mZiB0aGUgYmF0LCBpdCBnZXRzIHRoaW5ncyBnb2luZyBqdXN0IGluIGl0IG93bi4gCk5vdCBxdWl0ZSBhcyBhdXRvbWF0ZWQgYXMgd2hhdCB5b3UgYXJlIHN1Z2dlc3RpbmcsIGJ1dCBzb21ldGhpbmcgbGlrZSB0aGlzIG1heSBiZSBwb3NzaWJsZSBhbmQgZmFpcmx5IGNoZWFwLi4gCkluIHBhcnRpY3VsYXIsIHRoZSB2aXNjZXJhLCBvciBpbnRlcm5hbCBvcmdhbnMsIGFyZSBwYXJ0aWN1bGFybHkgdnVsbmVyYWJsZSBlYXJseSBpbiBkZXZlbG9wbWVudC4uIApJIGdlbnVpbmVseSB3YW50IHRvIGFzayB3aHkgeW91IHRoaW5rIHRoaXM/IFdhciBpcyBpbiBmYWN0IHRoZSBzaW5nbGUgZ3JlYXRlc3QgZHJpdmVyIG9mIGh1bWFuIHRlY2hub2xvZ2ljYWwgcHJvZ3Jlc3MuIE1vc3QgbW9kZXJuIGlubm92YXRpb25zIHRvZGF5IGRlcml2ZSB0aGVtc2VsdmVzIGZyb20gc29tZSBmb3JtIG9mIG1pbGl0YXJ5IHJlc2VhcmNoLiBGb29kIHByZXNlcnZhdGlvbiwgdHJhbnNwb3J0YXRpb24sIGNvbW11bmljYXRpb24sIG1ldGFsbHVyZ3ksIGluZHVzdHJpYWxpemF0aW9uLCBsb2dpc3RpY3MsIG1hbmFnZW1lbnQsIGV0Yy4KSWYgeW91IHBvc3QgY29tcGxhaW5pbmcgdGhhdCB0aGUgU291dGggaXMgZnVsbCBvZiBiaWdvdHMgYW5kIGV2YW5nZWxpY2FscyBub2JvZHkgaXMgZ29pbmcgdG8gZGVueSBpdC4gClllcywgd2UgZG8uIEFsbCB5b3UgbmVlZCB0byBkbyBpcyBnaXZlIHVzIGEgY2FsbCwgZ2l2ZSB1cyB5b3VyIGxhc3QgbmFtZSBhbmQgYWZ0ZXIgY29uZmlybWluZyB5b3UgaGF2ZSBhIHJlc2VydmF0aW9uLCB3ZSB3aWxsIGNvbWUgYW5kIHBpY2sgeW91IHVwLiBXZSBjYW4gYWxzbyBicmluZyB5b3UgdG8gdGhlIGFpcnBvcnQgZm9yIHlvdXIgZmxpZ2h0IGJhY2suIApJIGNvdWxkIHNlZSB0aGlzIHNpbWlsYXIgdG8gYmF0dGxlcy4gWW91IGhhdmUgdG8gaGF2ZSB0aGUgcG9rZW1vbiBiZWZvcmUgeW91IGFyZSBhYmxlIHRvIHRyYWluIGNhdGNoaW5nIGl0LiAKV2hvIHdhcyBub21pbmF0ZWQgYnkgcGV0aXRpb24gdG8gaGF2ZSBoZXIgbmFtZSBvbiB0aGUgYmFsbG90LiBTa293IGxvc3QgdG9ncmFudCBmdW5kaW5nLiAKSW4gMTk0MSB3aGVuIHRoZSBleHRlcm1pbmF0aW9uIGNhbXBzIHdlcmUgZmlyc3QgYnVpbHQsIG11Y2ggb2YgdGhlIG9wZXJhdGlvbiB3YXMgc3RpbGwgYmVpbmcgaGlkZGVuIGJ5IHByb3BhZ2FuZGEgYW5kIG9iZnVzY2F0aW9uIGFuZCBvbmx5IHNsb3dseSBkaWQgdW5kZXJzdGFuZGluZyBncm93IGFzIHRvIHdoYXQgd2FzIGhhcHBlbmluZyBhcm91bmQgdGhlbS4gClNlbG9uIGwnYXJ0aWNsZSAxZXIsICBMYSBScHVibGlxdWUgZnJhbmFpc2UgZXN0IHVuZSBldCBpbmRpdmlzaWJsZSAuIExlIHNlY29uZCBhcnRpY2xlIHByb3Bvc2UgbGEgZGZpbml0aW9uIGR1IGNpdG95ZW4gZnJhbmFpcywgcXVpIGRzaWduZSBjZXV4IHF1J2lsIGNvbnNpZHJlIGxlcyBwbHVzIHByb3ByZXMgIGdyZXIgbGVzIGFmZmFpcmVzIHB1YmxpcXVlcywgYydlc3QgIGRpcmUgbGVzIGZvbmN0aW9ubmFpcmVzIChBcnRpY2xlIDcpLiBFc3QgY3IgdW4gU25hdCBjb25zZXJ2YXRldXIgcXVpIGxpdCBzZXMgcHJvcHJlcyBtZW1icmVzIChBcnRpY2xlcyAxNSAgMjQpIGFpbnNpIHF1ZSBsZXMgdHJpYnVucywgbGVzIGNvbnN1bHMsIGxlcyBqdWdlcyBkZSBjYXNzYXRpb24gRXN0IGNyIHVuIFRyaWJ1bmF0IHF1aSBkaXNjdXRlIGRlcyBwcm9qZXRzIGRlIGxvaSBldCB2b3RlIGxldXIgYWRvcHRpb24gb3UgbGV1ciByZWpldCAoQXJ0aWNsZXMgMjUgIDI5KS4gCldoYXQgdGhlIGFydGljbGUgaXMgdGVsbGluZyBtZSBpcyB0aGF0IGlzIHRoYXQgdGhlIHJldHVybiBvZiBJU0lTIGZpZ2h0ZXJzICh3aGVuIGl0IGhhcHBlbnMpIGlzIGtlcHQgZmFpcmx5IGh1c2ggaHVzaDsgaG93ZXZlciB0aGVzZSBwZW9wbGUgYXJlIGFsc28gYmVpbmcgdHJhY2tlZCBhbmQgZm9sbG93ZWQgdmVyeSBjbG9zZWx5IGJ5IHRoZSBSQ01QLgpIb3dldmVyLCB0aGUgbGF0ZXN0IHNpbmdsZSwgQWxlamFuZHJvIHBlYWtlZCBhdCA1IGFuZCBoYXMgc2luY2UgZmFsbGVuIHRvIHRoZSAxM3RoIHBvc2l0aW9uLiAKTG9naW5UaGlzIGlzIG5lY2Vzc2FyeSB0byBzaWduIGluIHRvIHRoZSBIdWJQYWdlcyBTZXJ2aWNlLiBHb29nbGUgUmVjYXB0Y2hhVGhpcyBpcyB1c2VkIHRvIHByZXZlbnQgYm90cyBhbmQgc3BhbS4gKFByaXZhY3kgUG9saWN5KUFraXNtZXRUaGlzIGlzIHVzZWQgdG8gZGV0ZWN0IGNvbW1lbnQgc3BhbS4gKFByaXZhY3kgUG9saWN5KUh1YlBhZ2VzIEdvb2dsZSBBbmFseXRpY3NUaGlzIGlzIHVzZWQgdG8gcHJvdmlkZSBkYXRhIG9uIHRyYWZmaWMgdG8gb3VyIHdlYnNpdGUsIGFsbCBwZXJzb25hbGx5IGlkZW50aWZ5YWJsZSBkYXRhIGlzIGFub255bWl6ZWQuIChQcml2YWN5IFBvbGljeSlIdWJQYWdlcyBUcmFmZmljIFBpeGVsVGhpcyBpcyB1c2VkIHRvIGNvbGxlY3QgZGF0YSBvbiB0cmFmZmljIHRvIGFydGljbGVzIGFuZCBvdGhlciBwYWdlcyBvbiBvdXIgc2l0ZS4gClRoZSBDYW51Y2tzIGhhZCBidXQgMTIgc2hvdCBibG9ja3MgVGh1cnNkYXkgYmVjYXVzZSB0aGV5IHdlcmUgY2hhc2luZyB0aGUgT2lsZXJzLiBFZG1vbnRvbiBoYWQgMjUgYmVjYXVzZSBnZXR0aW5nIGludG8gc2hvb3RpbmcgcG9zaXRpb24gdG8gYmxvY2sgc2hvdHMgYW5kIG5vdCBjaGFzaW5nIHRoZSBnYW1lIHdhcyBhIHByaW9yaXR5LgpUaGUgZnVubnkgcGFydCBpcyB0aGF0IHlvdXIgbWVtZSBhY3R1YWxseSB3b3JrcyBiZXR0ZXIgaWYgeW91IGhhZCBqdXN0IGRvbmUgdGhlIG1hdGggY29ycmVjdGx5LiAkOCB0byB3aW4gJDgyIGlzIDEwLjI1IHRvIDEgb2RkcyB3aGVyZWFzICQxMCB0byB3aW4gJDgwIGlzIDggdG8gMSBvZGRzLgpIb3cgQnJ1Y2UgTGVlIGNoYW5nZWQgdGhlIHdvcmxkICgyMDA5KSBTUkIgU3VicyBEVkQgUmlwICAgUGxhbmV0IFplbWxqYSBJSSBIUnNpbmtybyA3MjBwIC4gClRvbyBtdWNoIEZpcmUgaW1wbGllcyB0aGUgaG90IHRlbXBlciBhbmQgbm8gcGF0aWVudC4gClRoaXMgZmVlbHMgbGlrZSBncmFuZHN0YW5kaW5nIHRvIG1lLiBTaGUgc3BlbnQgeWVhcnMgdGVhcmluZyB5b3UgZG93biBhbmQgbWFraW5nIGhlcnNlbGYgb3V0IHRvIGJlIHRoZSB2aWN0aW0uIApVbGxpb3R0IGVhcm5pbmdzIHZhcmllZCBlbm9ybW91c2x5LiBJbiBvbmUgdG91cm5hbWVudCBhbG9uZSBoZSB3b24gMzI1LDAwMDsgYnV0IGhlIGxvc3QgMTkwLDAwMCBpbiBhbm90aGVyIGhpZ2ggc3Rha2VzIGNvbXBldGl0aW9uLiBDYW4gZ2V0IGJhZCBsdWNrIGZvciBhIGZldyB3ZWVrcywgYnV0IHlvdSBqdXN0IGtlZXAgZ29pbmcgdW50aWwgeW91IHdpbiBhZ2FpbiwgaGUgZXhwbGFpbmVkLiAKU2FyZG9yaW0gdQpNeSBUZXggTWV4IGZhdGhlciwgd2hvIGlzIGEgVHJ1bXBvLCBkb2VzbiBiZWxpZXZlIGluIGNsaW1hdGUgY2hhbmdlLCB3YW50cyB0aGF0IHdhbGwsIGFuZCAidW5kZXJzdGFuZHMiIHRoZSBhbnRpIHZheHggbW92ZW1lbnQuIE9oIGFuZCBhbGwgbGliZXJhbHMgYXJlIGNvbW11bmlzdHMuIApJIG1lYW4sIG9mIGNvdXJzZSBpdCBkZXBlbmRzIG9uIGhvdyB0aGUgYnJlYWt1cCBnb2VzLiAKR2V6ZWlndCB3ZXJkZW4gaW0gQ2luZSBUZWF0cm8gQ2hpY28gTXVuaWNpcGFsIHZvbiBTYW50YSBDcnV6IGRlIExhIFBhbG1hIG5ldW4gRmlsbWUgYXVzIGRlciBEb21pbmlrYW5pc2NoZW4gUmVwdWJsaWssIEFyZ2VudGluaWVuLCBNZXhpY28sIFNwYW5pZW4sIE5pZWRlcmxhbmRlLCBGcmFua3JlaWNoLCBHcm9icml0YW5uaWVuLCBVU0EsIENoaWxlIHVuZCBQZXJ1IGF1cyBkZW4gSmFocmVuIDIwMDggYmlzIDIwMTUuLiAKVGhlIHBva2VyIHRhYmxlcyBjb21lIGFzIG1vcmUgY2FzaW5vIGNvbXBldGl0aW9uIGlzIHNwcm91dGluZyB1cCBpbiB0aGUgcmVnaW9uLgpEZXNwaXRlIGFuIG92ZXJ3aGVsbWluZyBwcmVmZXJlbmNlIG9uIHRoZSBwYXJ0IG9mIHN1cnZleWVkIGNvbnN1bWVycyB0byBzaG9wIHZpYSB0aGVpciBjb21wdXRlcnMsIG1vYmlsZSB0cmFmZmljIGFjY291bnRlZCBmb3IgYWxtb3N0IDQwJSBvZiBhbGwgb25saW5lIHRyYWZmaWMgb24gQmxhY2sgRnJpZGF5IGFuZCBtb2JpbGUgc2FsZXMgcmVhY2hlZCAyMS44JSBvZiB0b3RhbCBvbmxpbmUgc2FsZXMgICB0aGF0J3MgYW4gaW5jcmVhc2Ugb2YgbmVhcmx5IDQzJSBmcm9tIDIwMTIuIEluIHNob3J0LCB3aXRoIG1vYmlsZSBpbnRlcm5ldCB1c2FnZSBvbiB0aGUgcmlzZSBhbmQgcHJlZGljdGVkIHRvIHNvb24gc3VycGFzcyBkZXNrdG9wIGludGVybmV0IHVzYWdlLCBvbmxpbmUgcmV0YWlsZXJzIG5vdCBwdXR0aW5nIGFuIGVtcGhhc2lzIG9uIHRoZSBtb2JpbGUgc2hvcHBpbmcgZXhwZXJpZW5jZSB0aGV5J3JlIHByb3ZpZGluZyB3aWxsIHZlcnkgcXVpY2tseSBmaW5kIHRoZW1zZWx2ZXMgbGFnZ2luZyBiZWhpbmQgdGhlaXIgY29tcGV0aXRvcnMuLiAKRmlyc3Qgb2YgYWxsLCB0aGUgb25seSByZWFzb24gY29tcGFuaWVzIGhhdmUgdG8gaGlyZSB1bmRlcnBhaWQgaWxsZWdhbCB3b3JrZXJzIHRvIHN0YXkgaW4gYnVzaW5lc3MgaXMgYmVjYXVzZSB0aGUgb3RoZXIgY29tcGFuaWVzIHRoYXQgZG8gaXQgY2FuIHVuZGVyY2hhcmdlIGZvciBzZXJ2aWNlcy4gSWYgZXZlcnkgY29uc3RydWN0aW9uIGNvbXBhbnkgc3VkZGVubHkgc3RhcnRlZCByZXNwZWN0aW5nIHRoZSBsYXcgdG9kYXkgdGhlbiBwcmljZXMgd291bGQgZ28gdXAgYWNyb3NzIHRoZSBib2FyZCBiZWNhdXNlIGV2ZXJ5b25lIGhhcyB0byBwYXkgdGhlIG5ldyBoaWdoZXIgd2FnZXMuIExldHRpbmcgc29tZSBvZiB0aGVtIGdldCBhd2F5IGlzIHdoYXQgc3RhcnRlZCB0aGlzIGJ1bGxzaGl0IHJhY2UgdG8gdGhlIGJvdHRvbSwgaXQgY2FsbGVkIGdhbWUgdGhlb3J5IGFuZCBpdHMgd2h5IHdlIGhhdmUgbGF3cy4KWW91ciBvcHBvbmVudCBuZWVkcyB0byBiZSBnb29kIGVub3VnaCB0byB0dXJuIHBhaXIgaW50byBhIGJsdWZmIGhlcmUgdG8gY2FsbC4uIApJIGdsYW5jZWQgb3ZlciwgYXMgaWYgSSBjb3VsZCBzZWUgdGhyb3VnaCB0aGUgZG9vciwgYW5kIHNlZSB3aG8gd2FzIHRoZXJlLiAKT2theSB0aGUgYXJ0aWNsZSBiZWxvdy4gCkkgYWxzbyB3ZW50IG91dCBhbmQgYm91Z2h0IGEgY2hlYXAgc29pbCBtb2lzdHVyZSBzZW5zb3IgZm9yIGEgZmV3IGJ1Y2tzIG9mZiBBbWF6b24uIFRoZSBBcmR1aW5vIHVzZXMgYSBkZXZpY2UgY2FsbGVkIHRoZSAiUG93ZXJzd2l0Y2ggVGFpbCIgdG8gYWN0aXZhdGUgdGhlIHB1bXAgZXZlcnkgZGF5IG9yIHNvIG9uIGEgdGltZXIuIApUaGUgb2ZmZW5jZSBvZiBwcmV0ZW5kaW5nIHRvIHByYWN0aWNlIHdpdGNoY3JhZnQgaXMgb25lIG9mIHNpeCBvZmZlbmNlcyB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGlzIHNlZWtpbmcgdG8gcmVwZWFsIGluIHVwY29taW5nIGxlZ2lzbGF0aW9uLCBzYXlpbmcgdGhlIG9mZmVuY2UgaXMgbm8gbG9uZ2VyIG5lZWRlZC4KSSB3YXMgdHJ5aW5nIHRvIHNheSBJIGxhY2tlZCB0aGUgc2FtZSBhZHZhbnRhZ2UgaGUgaGFzLCBhbmQgSSBkbyB0aGluayAidGFsbG5lc3MiIGlzIGEgdHlwaWNhbGx5IGRlc2lyZWQgdHJhaXQuIApTaGUgaXMgbm93IGludGVyZXN0ZWQgaW4gcHV0dGluZyBoZXIgZGlsZG8gaW50byBoZXIgY3VzdG9tZXIncyBhbmFsLiBNdXN0IHJlcGVhdC4uIApBdCB0cmlhbCB0aGUgY29wIHdpbGwgdGFrZSB0aGUgd2l0bmVzcyBzdGFuZCBhbmQgdGVzdGlmeSBhcyB0byB3aGF0IHRoZXkgc2F3LCB5b3Ugd2lsbCBnZXQgYSBjaGFuY2UgdG8gYXNrIHRoZSBjb3AgcXVlc3Rpb25zIHdoZW4gdGhleSBhcmUgb24gdGhlIHN0YW5kLiBZb3Ugd2lsbCB0aGVuIGJlIGdpdmVuIGEgY2hhbmNlIHRvIHRha2UgdGhlIHN0YW5kIGFuZCB0ZXN0aWZ5IGlmIHlvdSB3YW50LiBPbmNlIHRoZSBKdXN0aWNlIG9mIHRoZSBQZWFjZSBoYXMgaGVhcmQgYm90aCBzaWRlcyBoZS9zaGUgd2lsbCBtYWtlIHRoZWlyIGRlY2lzaW9uLi4gCkRydWcgYWRkaWN0aW9uIGRvZXNuJ3Qga25vdyByYWNlLCBnZW5kZXIsIG9yIHNvY2lvZWNvbm9taWMgc3RhdHVzLiAKV2hlbiBJIHRvb2sgZWFydGggYW5kIHNjaWVuY2UgYmFjayBpbiB1bmRlcmdyYWQgYXMgbXkgZnJlZSBlbGN0aXZlIG15IHByb2Zlc3NvciBnYXZlIHRoZSBjbGFzcyBhIHN1cnByaXNlIHF1aXogd2l0aCB0aGUgbWFwIG9mIHRoZSB3b3JsZCBhbmQgYXNrZWQgdXMgdG8gbWFyayBjZXJ0YWluIG1ham9yIGNvdW50cmllcy4gV2hlbiBldmVyeW9uZSBmaW5pc2hlZCBoZSB3ZW50IG92ZXIgdGhlIHF1aXogYW5kIHllbGxlZCBvdXQgaG93IHNvbWUgcGVvcGxlIG1pc3BsYWNlZCBjZXJ0YWluIGNvdW50cmllcyBsaWtlIHBsYWNpbmcgUnVzc2lhIGluIEFmcmljYSAoIFB1dGluIGlzIGJsYWNrIGJ0dyApLCBtaXNwbGFjaW5nIENhbGlmb3JuaWEgaW4gdGhlIGVhc3QgY29hc3QsIHB1dHRpbmcgVmlldG5hbSBpbiBUaGFpbGFuZCwgYW5kIGV0Yy4gSXQgd2FzIGEgcmVhbGx5IGZ1biBjbGFzcyBhcyB0aGUgcHJvZmVzc29yIHdhcyBvdmVycmVhY3Rpbmcgd2l0aCBlYWNoIG1pc3Rha2UuClBsYXllcnMgYW5kIHJ1YmJlcm5lY2tlcnMgYXJlIGZvdXIgaG91cnMgaW50byB0aGUgYmlnLCBubyBsaW1pdCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgZnJlZXplIG91dCBoZXJlIGF0IEJpbmlvbidzIEhvcnNlc2hvZSBpbiBMYXMgVmVnYXMuIE1heWJlIDE3MCBwbGF5ZXJzIGFyZSBsZWZ0IG9mIHRoZSAxOTQgd2hvIGJlZ2FuIGNoYXNpbmcgdGhlICQ4MzUsMDAwIGZpcnN0IHByaXplIHdpdGggJDEwLDAwMCBlYWNoIGluIGNoaXBzLiBGcm9tIHRocmVlIHRhYmxlcyBhd2F5LCBhIHJhc3B5IFRleGFzIGRyYXdsIGN1dHMgdGhyb3VnaCB0aGUgd2F0ZXJ5IGdyZWVuIGFpciBvZiBCaW5pb24ncyBjYXJkcm9vbS4gCkhlIHdhcyBhIGNsaWVudCBidXQgSSBnb3QgdG8ga25vdyBoaW0gaW50aW1hdGVseSBvdmVyIHRoYXQgdGltZSBhbmQgaGUgYmVjYW1lIGxpa2UgYSBjbG9zZSBmcmllbmQuIEkgZXZlbiBnb3QgaW52aXRlZCB0byBoaXMgZnVuZXJhbCBhbmQgYWNjZXB0ZWQuIApJbnRlcmVzdGluZ2x5LCBzeXN0ZW1pYyBpbmplY3Rpb24gb2YgdGhlIHBoeXRvY2hlbWljYWwgY3VyY3VtaW4gZW5oYW5jZXMgdGhlIG5ldyBoaXBwb2NhbXBhbCBjZWxsIHN1cnZpdmFsIGJ5IFs1OV0uIApEb250RmFydF9JblNwYWNlU3VpdCAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClRoZSBmaXJzdCBzdGVwIHRvIHN0YXJ0aW5nIGEgaG9tZSBidXNpbmVzcyB0aGF0IHNwZWNpYWxpemVzIGluIENsYXkgUG9rZXIgQ2hpcHMgYW5kIFBva2VyIEFjY2Vzc29yaWVzIGlzIHRvIGRlY2lkZSBpZiB5b3UgaGF2ZSBzcGFjZSB0byBrZWVwIHByb2R1Y3RzIGluIHlvdXIgaG9tZSwgb3IgaWYgeW91IHdpbGwgam9pbiBwcm9ncmFtcyB0aGF0IGRyb3Agc2hpcHMgdG8gY3VzdG9tZXJzLiBJbiBtYW55IGluc3RhbmNlcywgeW91IGNhbiBqb2luIHVwIHdpdGggYSBjb21wYW55IHRoYXQgYWxsb3dzIHlvdSB0byBzaWduIHVwIGFzIGFuIGFmZmlsaWF0ZSBhbmQgeW91IGVhcm4gYSBjZXJ0YWluIGFtb3VudCBvZiBjb21taXNzaW9uIGZyb20gZWFjaCBzYWxlLiBUaGUgY2hvaWNlIGlzIHlvdXJzLCBidXQgaXQgaGFzIHRvIGJlIGEgY2hvaWNlIHRoYXQgZm9jdXNlcyBvbiB5b3VyIGxpZmVzdHlsZS4KQmVoaW5kIGhpbSwgV2FycmVuIFphY2tleSBoYWQgYW4gZWFzeSBjYWxsIHdpdGggYW4gYWNlIGFuZCBhIGtpbmcsIGEgdmVyeSBzdHJvbmcgaGFuZC4gCkVuIGhlZWwgd2F0IG91ZGUgdnJhY2h0d2FnZW5zIG9wIGRlIGJhYW4uIApIZSBoYXMgbmV2ZXIgYXBvbG9naXplZCB0byBtZSwgb3IgaGVsZCBtZSBhbmQgdG9sZCBtZSBoZSB3aXNoZXMgaGUgd2FpdGVkLiAKU2F2ZSB0aGUgbWVkaWEgaXQgY2FtZSBvbiwgd2hldGhlciBiZSB0aGUgQ0QvRFZEIHBhY2thZ2luZyBvciB0aGUgaW5zdHJ1Y3Rpb24gbWFudWFsLiBTaW5jZSB0aGluZ3MgaGFwcGVuLCB5b3UgY2FuIGFsc28gYXJjaGl2ZSBsaWNlbnNlIGtleXMgaW4gYSB2YXJpZXR5IG9mIG1ldGhvZHMuIE9mIGNvdXJzZSBpdCByZXF1aXJlcyBhY2N1cmF0ZSB0cmFuc2NyaXB0aW9uIHRvIGJlIHVzZWZ1bC4gCllvdSBtYWtpbmcgdGhlIGNob2ljZSB0byBjb250aW51ZSB0byBzdXBwb3J0IHRoZW0sIGp1c3QgYXMgeW91IG1ha2luZyB0aGUgY2hvaWNlIHRvIGNob29zZSB0byBub3QgaGF2ZSBraWRzLiAKRGVhdGggaXMgY29uc3RhbnRseSBwb3J0cmF5ZWQgYXMgc29tZXRoaW5nIGJlYXV0aWZ1bCwgdGFudGFsaXppbmcgYW5kIG9kZGx5IGNvbWZvcnRhYmxlLiBJdCBpcyBhIHNlZHVjdHJlc3MgaW4gUGVyY2hhbmNlIHRvIERyZWFtKSBhbmQgYSBraW5kLCBoYW5kc29tZSwgeW91bmcgbWFuIGluIFRoZSBQYXNzZXJzYnkuRGVhdGggaXMgYWx3YXlzIGJlYXV0aWZ1bC4gClBhbGxlbmJlcmcgd2FzIGFsc28gcnVtb3VyZWQgdG8gaGF2ZSBoYWQgYSBicmllZiBhZmZhaXIgd2l0aCBNaWNrIEphZ2dlciB3aGlsZSBtYWtpbmcgdGhlIGZpbG0gUGVyZm9ybWFuY2UgaW4gMTk3MCwgYWx0aG91Z2ggc2hlIGRlbmllZCBpdC4KWW91IGNhbiBhbHdheXMgY2hhbmdlIHRoZSBpbmZvcm1hdGlvbiB5b3Ugc2hhcmUgd2l0aCB1cyBieSBlZGl0aW5nIHlvdXIgcHJvZmlsZS4gClRoaXMgd2FzIG5vdCB0aGUgcGxhbiwgb3Igc28gSSB0aG91Z2h0IGF0IHRoZSB0aW1lLiBJIGhhZCBpbnRlbmRlZCB0byBtYWtlIHNvbWUgcmVhbCBtb25leSBvbiB0aGUgU3RyZWV0IChJIG5ldmVyIGRpZCksIGJ1dCBiZWluZyBhIHRyYWRlciB3YXNuJ3Qgd2hhdCBJIHJlYWxseSB3YW50ZWQgdG8gYmUuIApUd28gYW5nbGVycyBicmF2ZWQgdGhlIHNub3cgYW5kIHdpbmQgYW5kIGZpc2hlZCB0aGUgcnVuIFR1ZXNkYXkuIFRoZSBsYXN0IGFuZ2xlciBvdXQgdGhhdCBuaWdodCByZXBvcnRlZCBkZWNlbnQgYWN0aW9uIGluIHRoZSBsb3dlciBoYWxmIG9mIHRoZSBydW4gZnJvbSBtaWQgYWZ0ZXJub29uIHVudGlsIHN1bnNldC4gQW5jaG9yIGljZSBwcm92ZWQgdG8gYmUgYSBsaXR0bGUgYml0IG9mIGFuIGlzc3VlIGJ1dCBkaWRuIHN0b3AgaGltIGZyb20gaG9va2luZyB1cCB3aXRoIHNpeCBmaXNoLiBXZWRuZXNkYXkgc3RhcnRlZCBvdXQgc3VubnkgYnV0IGl0IHdhcyBzaG9ydCBsaXZlZCBhcyB0aGUgbGFrZSBlZmZlY3Qgc25vdyByZXR1cm5lZC4gV2Ugc3RhcnRlZCBvdXQgd2l0aCBhYm91dCB0aHJlZSBpbmNoZXMgb24gdGhlIGdyb3VuZCBhbmQgcmVjZWl2ZWQgYW5vdGhlciAzIDUgaW5jaGVzIHdpdGggdGhlIHNub3cgYmFuZCBtb3ZpbmcgdGhyb3VnaC4gVGhlIHdhdGVyIGZsb3cgaXMgY3VycmVudGx5IHJ1bm5pbmcgYXQgNzUwY2ZzLgpUaGVyZSBhcmUgdG91cm5hbWVudHMgb24gYWxtb3N0IGV2ZXJ5IGRheSBpbiBkaWZmZXJlbnQgbG9jYXRpb25zLiBNb24vV2VkIHRoZXJlIGFyZSB0b3VybmFtZW50cyBpbiBVdHJlY2h0ICg1MGttIGZyb20gQW1zdGVyZGFtLCBhIDIwbWludXRlIHRyYWluIHJpZGUgYXdheSksIFRodXJzZGF5cyBpbiBOaWptZWdlbiAobmVhciB0aGUgYm9yZGVyIHdpdGggR2VybWFueSlpZiBtZW1vcnkgc2VydmVzIG1lIHJpZ2h0LiAKQ2hhaW5zYXdtYW4gICBNb3N0IGxpa2VseSBnb2luZyB0byBzdXJ2aXZlLiBJIGRvbiBrbm93IGhvdyBsb25nIGl0IHJ1biwgYnV0IGhvcGVmdWxseSBpdCBnZXRzIHRoZSBlbmRpbmcgaXQgbmVlZHMuIFdoYXQgaXQgaGFzIGdvaW5nIGZvciBpdCBpcyBnb29kL3JlZnJlc2hpbmcgY29tZWR5IGFuZCB0b25lLCBwbHVzIGdvb2QgY2hhcmFjdGVycy4gVGhlIHNldHRpbmcvcHJlbWlzZSBpcyBhbHJpZ2h0LCBidXQgbm90aGluZyB0aGF0IGhhc24gYmVlbiBkb25lIGJlZm9yZSAoYWdhaW4sIGRlbW9uc2xheWluZyBhbmQgYW4gYWdlbmN5KS4KU2FkaWUgKHNvYmJpbmcpOiBJdCBjb3N0IG1lICQzLjIgYmlsbGlvbiBpbiB0YXggYnJlYWtzIHRvIGdldCBhbnkgcmVjb21taXRtZW50IGF0IGFsbCEKRHViYWkgaGFzIGV4Y2VsbGVudCBwdWJsaWMgdHJhbnNwb3J0IHdpdGggdGhlaXIgTWV0cm8gc3lzdGVtLiAKT25lIHBsYXllciBoYXMgYSBwYWlyIG9mIG5pbmVzIGFuZCB0aGUgb3RoZXIgaGFzIGEga2luZyBhbmQgYSBmaXZlLiAKT25lIG5ldyByZWNlbnQgcmVzdHJpY3Rpb24gaW4gUGFtcGxvbmEgICBubyB2dXZ1emVsYXMgYWxsb3dlZC4gU2FsZSBvZiB0aGUgbm9pc3kgaG9ybnMgaGFzIGJlZW4gYmFubmVkIGJ5IHRoZSBsb2NhbCBnb3Zlcm5tZW50LiBDb2xsZWN0ZWQgaGVyZSBhcmUgc2V2ZXJhbCBwaG90b3Mgb2YgdGhpcyB5ZWFycyBldmVudHMgaW4gUGFtcGxvbmEsIFNwYWluLiAKSSBzaW1wbHkgc2FpZCBzaGUgaXNuIGhhcmRlciB0aGFuIGFueSBvZiB0aGUgImVhc3kgZHBzIiBhbmQgSSBzYWlkIG1heWJlIGhlciBmbG9vciBpcyBoaWdoZXIgdGhhbiBtb2lyYSBidXQgdGhhdCBpdC4gSXQganVzdCBteSBvcGluaW9uIGFuZCB5b3UgYW5kIHRoZSBvdGhlciBwZXJzb24gYXJlIHNheWluZyB0aGluZ3MgSSBoYXZlIG5vdCBzYWlkIG9yIGltcGxpZWQuIAovdS9IYW1kaWxhLCBJIHJlYWxseSBzb3JyeSBhYm91dCB3aGF0IHlvdSBiZWVuIGdvaW5nIHRocm91Z2gsIGFuZCBob3BlIHlvdSBhYmxlIHRvIG1vdmUgZm9yd2FyZCBhbmQgY29wZSB3aXRoIGl0IGluIGhlYWx0aHkgd2F5cy4gCkkgZG8gbm90IHRoaW5rIHRoZXkgKHRoZSBCT0ogYW5kIHRoZSBKYXBhbmVzZSBnb3Zlcm5tZW50KSBoYXZlIHByb3ZpZGVkIHZlcnkgZ29vZCBleHBsYW5hdGlvbnMgZm9yIGhvdyB0aGV5IHdpbGwgZGVhbCB3aXRoIHRob3NlIHByb2JsZW1zLiAKSSBtb3N0bHkgZ3Jvd24gb3V0IG9mIHRoZSBoZWF2eSBtZXRhbCBwaGFzZSwgYnV0IHRoYXQgdHlwZSBvZiBsaW1pdGxlc3MgZHJ1bW1pbmcgaXMgYWx3YXlzIGdvaW5nIHRvIGJlIGNvb2wgdG8gbWUuIFBlcmN1c3Npb24gaXMgdGhlIGZvdW5kYXRpb24gb2YgYWxsIG11c2ljLiAKRGVjaWRlIHdoZXRoZXIgb3Igbm90IGl0J3Mgd29ydGggImRyYXdpbmcuIiBIb2xkaW5nIG91dCBmb3IgdGhlIGNhcmRzIHlvdSBuZWVkIGlzIGtub3duIGFzICJkcmF3aW5nLiIgSWYgeW91ciBoYW5kIGNvdWxkIGJlIHN1Y2Nlc3NmdWwgZGVwZW5kaW5nIG9uIHdoZXRoZXIgdGhlIHJpZ2h0IGNhcmRzIGNvbWUgdXAgaW4gdGhlIHR1cm4gb3Igcml2ZXIsIHRoZW4geW91J2xsIGhhdmUgdG8gZGV0ZXJtaW5lIGlmIGl0J3Mgd29ydGggaG9sZGluZyBvdXQgZm9yIHRoZW0uIENhbGN1bGF0aW5nIHBvdCBvZGRzIGNhbiBoZWxwIHlvdSBtYWtlIHRoaXMgZGVjaXNpb24uIElmIHlvdSBkbyBkZWNpZGUgdG8gZHJhdywgeW91J2xsIG5lZWQgdG8gYmx1ZmYgdW50aWwgeW91IGdldCB0aGUgY2FyZCB5b3UgbmVlZC4KV2UgaGFkIGJlZW4gZG9pbmcgdGVzdHMgb24gaGltIGZvciBvdmVyIDYgeWVhcnMgYXQgdGhhdCBwb2ludCB3b25kZXJpbmcgaG93IGl0IHdhcyBwb3NzaWJsZSB0aGF0IGhlIGhhZG4ndCBzaG93biBhbnkgc2lnbnMgb2YgYWdpbmcuIFdlIHN0YXJ0ZWQgdGVzdGluZyB0aGUgb3JpZ2luYWwgMTEgYW5kIGRpc2NvdmVyZWQgdGhhdCB0aGUgY29udGluZW50IGhhZCBzb21lIHNvcnQgb2YgaW50ZXJmZXJlbmNlIGluIHRlbG9tZXJlIGRlY2F5IGZvciB0aG9zZSBib3JuIHRoZXJlIHRodXMgaGFsdGluZyBhZ2luZyBjb21wbGV0ZWx5IGFmdGVyIHB1YmVydHkuIApJIGxvdmUgUHVlcnRvIFJpY28gYW5kIEkgZGVkaWNhdGUgYWxsIG15OyBmaWdodHMgdG8gbXkgZmFtaWx5IGFuZCB0byB0aGUgcGVvcGxlIG9mIFB1ZXJ0byBSaWNvLiAKQmVlem5lZXp5IHUKRXZlcnlvbmUgd2FudHMgdG8gYmVjb21lIHRoZSBleHBlcnRzIGluIHRoaXMgcGFydGljdWxhciBzZWN0b3IuIApUaGlzIGlzIGFsbCBkdWUgdG8gYW4gaW5qdXJ5LCBzbyBpdCBkb2VzbiByZWFsbHkgbWF0dGVyIGhvdyBtdWNoIEkgZWF0LCBhcyBsb25nIGFzIG15IGJhY2sgaXMgc3RpbGwgYSBwcm9ibGVtLCBteSB3ZWlnaHQgaXMgc3RpbGwgYSBwcm9ibGVtLiBJdCBub3QgYSBndXQgcHJvYmxlbSB0aGlzIHRpbWUsIHNvIGxvbmcgdGVybSBmYXN0aW5nIGRvZXNuIGhlbHAgKEkgdHJpZWQpLi4gCkEgc2FmZSBoZWlnaHQgd291bGQgaGF2ZSBiZWVuIGFib3V0IDQsMzAwZnQsIHRoZSBjb3VydCB3YXMgdG9sZC4gCk1hcmsgaXQgb24geW91ciBjYWxlbmRhciBwbGFuIHRvIGF0dGVuZCB0aGlzIGZ1biBkYXkhIENMVUIgTEVOR1RIIFdoYXQgaXMgaXQsIGFuZCB3aHkgc2hvdWxkIHdlIGNhcmUgQWwgRGF2aWUsIFByb2Zlc3Npb25hbCBDbGFzcyAiQSIgQ2x1YiBGaXR0ZXIvQ2x1YiBNYWtlciA5MCUgb2YgYWxsIGRyaXZlcnMgc29sZCBpbiBnb2xmIHNob3BzIHRvZGF5IGFyZSB0b28gbG9uZyBmb3IgbW9zdCBwbGF5ZXJzLiAKQ29uc3RhbnQgUGFwZXJ3b3JrSWYgeW91IGFyZSBsb29raW5nIGZvciBhIGhhbmRzIG9uIGpvYiwgeW91IHdpbGwgZ2V0IHRoYXQgb3Bwb3J0dW5pdHksIGJ1dCBleHBlY3QgdG8gc3BlbmQgY29uc2lkZXJhYmxlIHRpbWUgb24gcGFwZXJ3b3JrLCB0b28uIEEgdHlwaWNhbCBkYXkgZW50YWlscyB1cGRhdGluZyBwYXRpZW50IGZpbGVzIGFuZCBjb3JyZXNwb25kaW5nIHdpdGggZG9jdG9ycy4gCkVyaWMgUGFkZG9jayBzYWlkIGhlIGtuZXcgaGlzIGJyb3RoZXIgaGFkIGZpcmVhcm1zLiBIaXMgY2hpbGRyZW4gaGFkIGdvbmUgc2tlZXQgc2hvb3Rpbmcgd2l0aCB0aGVpciB1bmNsZSBiZWZvcmUsIGJ1dCBFcmljIGRpZCBub3Qga25vdyBTdGVwaGVuIHRvIGJlIGEgaHVudGVyLgpDb3VudHJ5IHN0YXIgTHVrZSBCcnlhbiBwbGF5ZWQgaXQgc3RyYWlnaHQgZm9yICJUaGUgU3RhciBTcGFuZ2xlZCBCYW5uZXIsIiBhZGRpbmcgZmV3IHNob3d5IGZsb3VyaXNoZXMgd2hpbGUgdGFraW5nIGNhcmUgbm90IHRvIHJ1c2ggdGhyb3VnaCB0aGUgbW9tZW50LgpSeWFuIFNwYWluIFJ5YW4gaXMgdGhlIG9yaWdpbmFsIGNvIGhvc3Qgb2YgTGltaXRlZCBSZXNvdXJjZXMuIApTbyBlYWNoIHRpbWUgaGUgY2FsbGVkIGluIEkgd291bGQgaG9wIGluIHdpdGggU2NyZWVuIFNoYXJpbmcgYW5kIGhlbHAgaGltIG9mZmxvYWQgdGhlIG11c2ljIGhlIHdhcyB0aXJlZCBvZiBhbmQgZG93bmxvYWQgYW55IG5ld2VyIHNvbmdzIGhlIHdhbnRlZC4gClNlYXR0bGUuIAoiVGhlIGtleSB0aGluZyB3aXRoIHVzIGlzIHdlIGFyZSBjb21tdW5pdHkgZHJpdmVuIGluc3RlYWQgb2YgcHJvZml0IGRyaXZlbi4gQ2x1YnMgYXJlIGNvbW11bml0eS4gCkFjY291bnQgRXhlY3V0aXZlLApBbmQgc28sIHRoZW4sIGJ5IG1vdmluZyB0byBlbGVjdHJpYywgSSdtIGFjdHVhbGx5IHRoZW4gd3JpdGluZyB0aGUgc29uZ3MgSSBhbHdheXMgd2FudGVkIHRvIHdyaXRlLCB0aG9zZSBvbmVzIHRoYXQgeW91IGhhZCBzYWlkIGluIG91ciBsYXN0IGludGVydmlldy4gCkFib3J0aW9uIGxhd3MsIGdheSByaWdodHMsIGlnbm9yaW5nIGFpZHMgdW50aWwgaXQgYmVjYW1lIGEgcGFuZGVtaWMuIApTcG9ydHMgQmFya2xleSBiYWNrIGF0IHBva2VyIHRhYmxlIFRvcCBDb3VnYXJzIG5hbWVkIFRlcnJhIEthc2tpdywgbGVmdCwgYW5kIERldm9uIFZhbiBOaXN0ZWxyb295IHdlcmUgaG9ub3VyZWQgYnkgQ2F0aG9saWMgQ2VudHJhbCBIaWdoIFNjaG9vbCBhcyB0aGUgZmVtYWxlIGFuZCBtYWxlIGF0aGxldGVzIG9mIHRoZSB5ZWFyLiBQSE9UTyBTVUJNSVRURUQgTWFncmF0aCBoYW5kcyBvdXQgaGFyZHdhcmUgU2FteXJhIEFsc3RvbiBhbmQgQ29ubm9yIEJhcm5ldHQgcmVjZWl2ZWQgdGhlIGZlbWFsZSBhbmQgbWFsZSBhdGhsZXRlIGF3YXJkcyBhdCB0aGUgcmVjZW50IE1hZ3JhdGggSGlnaCBTY2hvb2wgZ3JhZHVhdGlvbiBjZXJlbW9ueS4gClRoZSBzb3VyY2UgZm9yIG15IHBhc3Npb24gZm9yIG1hc3NhZ2Ugc3RlbXMgZnJvbSB0aGUgc2NpZW5jZSBhbmQgdGhlIGNhcmUgZ2l2aW5nIGFsc28gdGhlIFlpbmcgYW5kIHRoZSBZYW5nLiBJIGxvb2sgZm9yd2FyZCB0byBtZWV0aW5nIHlvdSBhbmQgaGVscGluZyB5b3Ugd2l0aCB5b3VyIG5lZWRzIGluIGJvZHkgd29yay4gU28gY29tZSBpbnRvIG15IHJvb20sIGZvcmdldCB0aGUgb3V0c2lkZSB3b3JsZCBmb3IgYXdoaWxlIGFuZCByZWxheCBmb3IgeW91ciBoZWFsdGghCk1hc3NhZ2UgaXMgb25lIG9mIHRoZSBvbGRlc3QgbWV0aG9kcyBvZiBoZWFsaW5nIGFuZCByZWxheGluZyB0aHJvdWdoIGRpZmZlcmVudCB0ZWNobmlxdWVzLiAKQ2VwZW5kYW50IGxlIHBsdXMgdG9ubmFudCByZXN0ZSBxdWUgVEFSWkFOLCBmYW1ldXggcG91ciB0cmlvbXBoZXIgZGUgdG91dGVzIHNvcnRlcyBkZSBidGVzIHNhbmd1aW5haXJlcyA6IGxpb25zLCBoeW5lcywgcmVxdWlucyBldCBjcm9jb2RpbGVzLCBldCBtbWUgcGxhbnRlcyBjYXJuaXZvcmVzIGV0IGNhbm5pYmFsZXMgKGwnaG9tbWUgdGFudCB1biBhbmltYWwgYmlwZGUgY29tbWUgbGEgZ3J1ZSBldCBsJ2F1dHJ1Y2hlKSBsZSBwbHVzIHRvbm5hbnQsIGFpIGplIGRpdCwgZXN0IHF1ZSBUQVJaQU4gbidhIGphbWFpcyB0IGNvbmZyb250ICB1bmUgcGlldXZyZSBwZW5kYW50IGxlcyB0cm9pcyBzcmllcyBkZSBzZXMgYXZlbnR1cmx1cmVzIGNvbW1lcmNpYWxpc2VzIGVuIEZyYW5jZS4gU2VzIGpvdXJuYXV4IGhlYmRvbWFkYWlyZXMgZGJ1dHJlbnQgZW4gMTk0MSBldCBzJ2FjaGV2cmVudCBlbiAxOTUzLCBhcHJzIGRldXggaW50ZXJydXB0aW9ucywgbGEgcHJlbWlyZSAgY2F1c2UgZGUgbCdlbnZhaGlzc2V1ciBoaXRscmllbiwgbGEgc2Vjb25kZSAgY2F1c2UgZCd1bmUgY2Vuc3VyZSBmcmFuYWlzZS4gRWggYmllbiAhICBhdWN1biBtb21lbnQgbGUgZmlscyBkZXMgZ3JhbmRzIHNpbmdlcyBuJ2VzdCBhdHRhcXUgcGFyIGxlcyBodWl0IHRlbnRhY3VsZXMgZCd1biBvY3RvcHVzIG1hcmluLi4gCkkgdHJ5IHRvIHBsYXkgd2l0aCBhIENoYW1wIGZyaWVuZCwgYW5kIEkgYWx3YXlzIChJIGxpa2UgdG8gcHV0IGFuIGVtcGhhc2lzIG9uIHRoZSAiYWx3YXlzIi4pIGJvdHRvbSBzY29yZWJvYXJkLiAKVGhlIDE4IHllYXIgb2xkIFRvcm9udG8gbWFrZXVwIGFydGlzdCB3YXRjaGVkIGhpcyBzb2NpYWwgbWVkaWEgZmFtZSBza3lyb2NrZXQgdGhpcyB3ZWVrIGFmdGVyIGhlIHBvc3RlZCBhbiBpbWFnZSB0byBJbnN0YWdyYW0gd2l0aCBzY3VscHRlZCBleWVicm93cywgY29udG91cmVkIGNoZWVrcywgZnVsc29tZSBsaXBzICAgYW5kIGEgYmVhcmQgYW5kIGdyYWQgcm9iZXMuCiAxIHBvaW50ICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvUG9ybiBkZWZpbml0ZWx5IGVmZmVjdHMgZXZlcnlvbmUuIEJ1dCBwZXJzb25hbGx5LCBJIGRvbiB0aGluayB0aGF0IHRoZSBjYXVzYWxpdHkgaW4geW91ciBjYXNlLiBZb3UgZGlkbiBnaXZlIHVzIGFueSBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIHBvcm4gY29uc3VtcHRpb24uIApJIHRoaW5rIHRoYXQgeW91IHNob3VsZCBjb25zaWRlciBjb3Vuc2VsbGluZyBvciBzcGVha2luZyB0byBhIHBzeWNob2xvZ2lzdC4gWW91IHNob3VsZG4ndCBiZSBhZnJhaWQgdG8gYmUgaW4geW91ciBvd24gaG9tZS4gQW54aWV0eSBhbmQgc3RyZXNzIHdlYXIgb24geW91IHF1aWNrbHkgYW5kIG1ha2UgaXQgaGFyZGVyIGZvciB5b3UgdG8gYmUgdGhlIG11bSB0aGF0IHlvdXIgREQgbmVlZHMuIFNwZWFraW5nIHRvIGEgcHJvZmVzc2lvbmFsIHdpbGwgaGVscCB5b3UgZGV2ZWxvcCB0aGUgbWVudGFsIHRvb2xzIHRoYXQgeW91IG5lZWQgdG8gZGVhbCB3aXRoIHlvdXIgTUlMIHdpdGhvdXQgbG9zaW5nIHlvdXIgbWluZC4gVGhleSB3aWxsIGFsc28gYmUgYWJsZSB0byBwcm92aWRlIHlvdSB3aXRoIGFuIG91dHNpZGUgb3BpbmlvbiBmcm9tIHNvbWVvbmUgd2hvIGlzIGxvb2tpbmcgb3V0IGZvciB5b3VyIGJlc3QgaW50ZXJlc3RzLgpBdWYgZGVyIFJja3NlaXRlIG5hY2hzZWhlbiwgd28gZGVyIEFuZmFuZ3NmYWRlbiBobmd0LiBJbiBkaWVzZSBSaWNodHVuZyBoaW4gd2VyZGVuIGRpZSBBY2h0ZXJzY2hsYXVmZW4gbmFjaCB1bmQgbmFjaCBnZXpvZ2VuLCBzb2Rhc3Mgc2llIGF1ZiBkaWUgbm9ybWFsZSBNYXNjaGVuZ3JlIHp1cmNrIGdlYnJhY2h0IHdlcmRlbi4gWnVsZXR6dCBkaWUgYmVyc2Noc3NpZ2UgTG5nZSBkdXJjaCBaaWVoZW4gYW0gQW5mYW5nc2ZhZGVuIGhlcmF1c3ppZWhlbi4KSGF2ZSB3ZSBmb3Jnb3R0ZW4gaG93IENoYWlybWFuIE1hbywgU3RhbGluIGFuZCBQYXJrIENodW5nIEhlZSBjaGFuZ2VkIHRoZSBmYXRlcyBvZiBDaGluYSwgUnVzc2lhIGFuZCBTb3V0aCBLb3JlYSwgcmVzcGVjdGl2ZWx5LCB3aXRoaW4gdGhlIHNwYW4gb2YgYSBnZW5lcmF0aW9uPy4gCkNvbmdyYXR1bGF0aW9ucywgT1AsIHVwb24gZmluZGluZyB0aGUga2V5IG9mIGtub3dsZWRnZSB0aGF0IHdpbGwgZm9yZXZlciBmcmVlIHlvdSBmcm9tIGEgbGlmZXRpbWUgb2YgZnVydGhlciBuYXJjIGFidXNlLi4gCkV2ZW4gaW4gdGhlIG1vc3QgZGVsaXJpb3VzbHkgb3B0aW1pc3RpYyBvdXRjb21lLCB3aGVyZSBNdWVsbGVyIGRyb3BzIGhpcyByZXBvcnQsIGl0IGV4cHJlc3NseSBsaW5rcyBoaW0gdG8gdHJlYXNvbiBhbmQgYWxsIHRoZSByZXN0IG9mIHRoZSBjcmltZXMsIGFuZCBjb25ncmVzcyBjb252aWN0cyBUcnVtcCB0byBvbiBhbGwgY2hhcmdlcywgdGhpcyBpcyBzdGlsbCBqdXN0IHRoZSBiZWdpbm5pbmcgb2YgdGhpcyBsb25nIGFuZCBncnVlbGluZyBmaWdodC4uIApEcyBsb3JzLCBsZSBqdWdlbWVudCBkZSBkY2xhcmF0aW9uIGQnYWJzZW5jZSBzJ2FuYWx5c2UgY29tbWUgdW4gYWN0ZSBkZSBkY3MsIGVudHJhbmFudCBsZXMgbW1lcyBlZmZldHMgOiBvdXZlcnR1cmUgZGUgbGEgc3VjY2Vzc2lvbiwgcHJlc3RhdGlvbnMgc29jaWFsZXMsIHJlbWFyaWFnZSBkdSBjb25qb2ludCAoYXJ0LiAKU29tZXRpbWVzIHlvdSBkb24ndCBldmVuIGhhdmUgdG8gYWN0dWFsbHkgcGxheSB0aGUgZ2FtZSAgIHdoZW4gd29ya2luZyBvbiBGYWJsZTogVGhlIEpvdXJuZXksIGEgbW90aW9uIHNlbnNpbmcgS2luZWN0IGdhbWUsIEFkcmlhbiBkaXNjb3ZlcmVkIHRoYXQgaGUgY291bGQgcGFyayBhIGNvYXQgc3RhbmQgaW4gZnJvbnQgb2YgdGhlIEtpbmVjdCBhbmQgdHJpY2sgaXQgaW50byB0aGlua2luZyBpdCB3YXMgYSBzcGluZGx5IGh1bWFuIGJlaW5nLiAKVXNlcnMgYXJlIGhlbGQgZnVsbHkgcmVzcG9uc2libGUgZm9yIHRoZWlyIHJlZ2lzdGVyZWQgZW1haWwgYWRkcmVzc2VzLCBVc2VyIElkcyBhbmQgUGFzc3dvcmRzLiBCeSBhcHBseWluZywgVXNlcnMgYWdyZWUgdGhhdCBGQzIgY2Fubm90IGJlIGhlbGQgYWNjb3VudGFibGUgZm9yIGFueSBsb3NzIG9yIGRhbWFnZSBjYXVzZWQgYnkgYSBVc2VyIG1pc3Rha2UgYW5kL29yIGlucHJvcGVyIHVzZSBieSBhIHRoaXJkIHBhcnR5LiAKVGltZSB0byBzdG9wIGJlaW5nIGEgYmFyaXN0YSBvciB3aGF0ZXZlciB0aGV5IGNhbGwgeW91IGRvd24gYXQgdGhhdCBjb2ZmZWUgc2hvcCBhbmQgZ2V0IGEgY2FyZWVyIHlvdSBsb3ZlLiAKR2Fsd2F5IFVuaXRlZCB3aWxsIGhvbGQgdHJpYWxzIGZvciB0aGUgdXBjb21pbmcgQWlydHJpY2l0eSB1IDE5IExlYWd1ZSBvbiBUdWVzZGF5IEp1bmUgMjggYXQgdGhlIE5VSUcgU3BvcnRzIENvbXBsZXgsIERhbmdhbi4gClRoZSBwaWxvdCBjb21wYXJlZCBkYXRhIGZvciBXZWxsbWFyayBtZW1iZXJzIHdobyByZWNlaXZlZCBjYXJlIGZyb20gZG9jdG9ycyBvZiBjaGlyb3ByYWN0aWMgb3IgcGh5c2ljYWwgdGhlcmFwaXN0cyB3aXRoIGEgbWVtYmVyIHBvcHVsYXRpb24gd2l0aCBzaW1pbGFyIGRlbW9ncmFwaGljcyB3aG8gZGlkIG5vdCByZWNlaXZlIHN1Y2ggc2VydmljZXMuIFRoZSBjb21wYXJpc29uIHNob3dlZCB0aGF0IHRob3NlIHdobyByZWNlaXZlZCBjaGlyb3ByYWN0aWMgY2FyZSBvciBwaHlzaWNhbCB0aGVyYXB5IHdlcmUgbGVzcyBsaWtlbHkgdG8gaGF2ZSBzdXJnZXJ5IGFuZCBleHBlcmllbmNlZCBsb3dlciB0b3RhbCBoZWFsdGggY2FyZSBjb3N0cywgYWNjb3JkaW5nIHRvIFdlbGxtYXJrLi4gCkhpcyBjb250ZW50aW9uIHdhcyB0aGF0IHRoZSBkZW1hbmQgd2FzIG1hZGUgaW4ga2VlcGluZyB3aXRoIHRoZSBjb21tdW5pcXUgaXNzdWVkIGJ5IHRoZSBVTiBCYWNrZWQgQWN0aW9uIEdyb3VwIGZvciBTeXJpYSBpbiBHZW5ldmEgb24gSnVuZSAzMCwgMjAxMiB3aGljaCBjYWxsZWQgZm9yIGVzdGFibGlzaG1lbnQgb2YgYSB0cmFuc2l0aW9uYWwgZ292ZXJuaW5nIGJvZHkgd2l0aCBmdWxsIGV4ZWN1dGl2ZSBwb3dlcnMgdGhhdCBjb3VsZCBpbmNsdWRlIG1lbWJlcnMgb2YgdGhlIGdvdmVybm1lbnQgYW5kIG9wcG9zaXRpb24sIGFuZCBzaG91bGQgYmUgZm9ybWVkIG9uIHRoZSBiYXNpcyBvZiBtdXR1YWwgY29uc2VudC4gV2FzIG5vdGhpbmcgbmV3IGluIHRoZSBqb2ludCBzdGF0ZW1lbnQgaXNzdWVkIHdpdGggU2F1ZGkgQXJhYmlhIGFuZCBpdCB3YXMgaW4ga2VlcGluZyB3aXRoIG91ciBkZWNsYXJlZCBwb3NpdGlvbiBvbiBTeXJpYSwgaGUgc2FpZCBlbXBoYXRpY2FsbHkuLiAKVGhpcyBzaG9ydCBmaWxtIG9mZmVycyBhIGdsaW1wc2Ugb2YgQ2hpZWYncyByZW1hcmthYmxlIGxpZmUgYW5kIHdvcmsuIApUaGUgaGFyZGVzdCB3b3JraW5nIG1hbiwgSSB0aGluaywgaW4gZm9vdGJhbGwuIEhhcmRlc3Qgd29ya2luZyBwbGF5ZXIgSSd2ZSBldmVyIHNlZW4gcHJhY3RpY2UsIGFuZCBJJ3ZlIHNlZW4gSmVycnkgUmljZSwgSSd2ZSBzZWVuIGEgbG90IG9mIGdvb2Qgb25lcy4gCkZ1bGwgSG91c2UgICBBIDUgY2FyZCBjb21iaW5hdGlvbiB3aXRoIGEgcGFpciBhbmQgMyBvZiBhIGtpbmQuIApIZSBoYXMgbm90IHdvbiBhbnl0aGluZyBvZiBub3RlIGV2ZXIgZXhjZXB0IGZvciBvbmUgb25saW5lIGN1cCwgZm9yICQ5MDAuIApBbG1vc3QgZXZlcnkgcGxheWVyIGNhbGxzIHdheSB0b28gd2lkZSB2cy4gClNvIEkgbGlrZSBob3cgeW91IGxpc3RlZCBjb21tb24gY2FycmllciwgYnV0IHRoYXQgaXMgb25lIG9mIHRoZSB0b3BpY3Mgbm90IHJlbGF0ZWQgdG8gbmV0IG5ldXRyYWxpdHkgKGFzIGEgY29udHJhY3QgbGFuZ3VhZ2UgZ29lcykuLiAKSSBrbm93IHdoZW4geW91IGdvIG91dCwgcGVvcGxlIHdpbGwgdHJ5IHRvIHNoaXQgb24geW91IG9yIGFzayBhYm91dCB0aGVpciBhZ2VzIGFuZCB0aGVuIG1ha2UgYSBmYWNlLiAKV2hlbiB5b3UgYXJlIG5vdCBzdXJlIGFib3V0IHdoYXQgdG8gZG8sIGxldHMgZ28gdGhyb3VnaCB0aGUgcmV2aWV3cyBhdmFpbGFibGUgaW4gdGhlIHdlYnNpdGVzLiBPbmNlIHlvdSBhcmUgc2F0aXNmaWVkLCB5b3Ugc2hvdWxkIGdvIGFuZCBwaWNrIHRoZSByaWdodCBvbmUgdXAgZm9yIHlvdXJzZWxmLi4gCkhlIGlzIGV2aWRlbnRseSBpbiBmb3JtLiBEYW5nZXJvdXNseSBzby4gCkEgYmFkIHBva2VyIHByb2R1Y3QgbmVlZHMgeW91ciBhY3Rpb24gdGhhdCBpdCBnZXRzIHRocm93biB0byB0aGUgYXNodHJheS4gSW4gdGhlIG90aGVyIGhhbmQsIHlvdSBzaG91bGQgYmUgcGlja2luZyB1cCB0aGUgcHJvZHVjdHMgdGhhdCBzdWl0IHlvdXIgbmVlZHMgYWxsIHRoZSB3YXkuIFNvIHlvdSBzaG91bGQgZ2V0IGhvbGQgb2YgcHJvZHVjdHMgbGlrZSBCYWQgQmVhdCBQb2tlciBDYXJkIFByb3RlY3Rvci4gClBlb3BsZSBNYXkgMTMgY292ZXIgb2YgVVZBIHN0dWRlbnQsIFllYXJkbHkgTG92ZSwgYSB5b3VuZyBsYWNyb3NzZSBwbGF5ZXIgd2l0aCBhIHByb21pc2luZyBmdXR1cmUgbXVyZGVyZWQgYnkgZXggYm95ZnJpZW5kIGFuZCBmZWxsb3cgbGFjcm9zc2UgcGxheWVyIEdlb3JnZSBIdWd1ZWx5LiAKSGF2aW5nIEdhdG9yYWRlIG9yIHBlZGlhbHl0ZSBpbiB5b3VyIHJvb20gaXMgYWx3YXlzIGEgZ29vZCBpZGVhIGluIGFkZGl0aW9uIHRvIFR5bGVub2wvaWJ1cHJvZmVuIGFuZCBzbmFja3MgYXMgd2VsbC4gQSBoYXQgaXNuJ3QgYSBiYWQgaWRlYSBzbyB5b3UgZG9uJ3QgZ2V0IHlvdXIgZmFjZSBhYnNvbHV0ZWx5IGNvb2tlZC4uIApXaGlsZSBsaXR0bGUgb2YgRGVscGhpJ3MgZ3JhbmRldXIgcmVtYWlucyB0b2RheSwgeW91IGNhbiBzdGlsbCBzZWUgdGhlIGhpZGRlbiBpbmNlbnNlIGNoYW1iZXIgdW5kZXJuZWF0aCB0aGUgZmxvb3IuIFdvbWVuIGluIFRpYmV0IGNhbGxlZCBkYWlueWFscyBoZWxkIGNsb3RocyBvdmVyIHRoZWlyIGhlYWRzIHRvIGNhcHR1cmUgY2VkYXIgc21va2UsIHdoaWNoIHdvdWxkIHNlbmQgdGhlbSBpbnRvIHByb3BoZXRpYyBjaGFudGluZy4gCllldCB0aGlzIGluc2lzdGVuY2UgaXMgYSBkZWFkIGVuZC4gCkkgZ3Vlc3MgaXQgZGVwZW5kcyBvbiB5b3VyIHNjaG9vbCBvZiB0aG91Z2h0LiBJcyBzZXgganVzdCBhIHBoeXNpY2FsIGFjdCBmb3IgeW91PyBPciBpdCBpcyBhIHRvdGFsIGV4cGVyaWVuY2UsIG1lYW5pbmcgYSBib25kaW5nIGVtb3Rpb25hbGx5IGFuZCBwaHlzaWNhbGx5PyBBdCBsZWFzdCBmb3IgbXlzZWxmLCB0aGVyZSBpcyBkZWZpbml0ZWx5IGEgaHVnZSBkaWZmZXJlbmNlIGluIHNleCB3aXRoIHNvbWVvbmUgeW91IGFyZSBlbW90aW9uYWxseSBpbnZlc3RlZCBpbi4gU2V4IHdpdGhvdXQgZW1vdGlvbiBpcyBtYXN0dXJiYXRpb24sIGV2ZW4gaWYgdGhlcmUgaXMgYW5vdGhlciBwZXJzb24gaW52b2x2ZWQuLiAKS3J1c2UncyBsdWNrIHJhbiBvdXQgb24gdGhlIGZpbmFsIGRheSBvZiB0aGUgZXZlbnQgYXMgaGUgZmluaXNoZWQgaW4gZm91cnRoIHBsYWNlIGFmdGVyIGJlaW5nIGtub2NrZWQgb3V0IGJ5IGV2ZW50dWFsIHJ1bm5lciB1cCBCcmVuZGFuIFRheWxvci4gVGhlIGV2ZW50IHdhcyB3b24gYnkgQnJpYW4gQnJ1YmFrZXIsIHdobyBwaWNrZWQgdXAgYSBjb3ZldGVkIFdTT1AgZ29sZCBicmFjZWxldCwgYXMgd2VsbCBhcyBhIGNoZXF1ZSBmb3IgJDEwOSw5NjcuCk9ubHkgYnkgZmluYWxseSBhZG1pdHRpbmcgdGhhdCB0b3J0dXJlIGhhcHBlbmVkLCB0b3J0dXJlIGlzIHdyb25nLCBhbmQgYWN0dWFsbHkgcHVyZ2luZyB0aGUgYWdlbmN5IG9mIHRob3NlIHdobyBjb21taXR0ZWQgdG9ydHVyZSBjYW4gdGhlIENJQSBoYXZlIGFueSBjcmVkaWJpbGl0eSBhcyBhbiBhcm0gb2YgdGhlIFVTIGdvdmVybm1lbnQuIAozIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnby4gCkhvd2V2ZXIsIG1ha2luZyBtb25leSBmcm9tIHRoZXNlIHRoaW5ncyBpcyBub3QgYWx3YXlzIGVhc3kuIFlvdSBtaWdodCBoYXZlIHRvIHdvcmsgcmVhbGx5IGhhcmQgYW5kIGxlYXJuIGFsbCB0aGUgdHJpY2tzIG9mIHRoZXNlIGNhc2lubyBnYW1lcyB0byBtYWtlIG1vbmV5IGxpa2UgYSBwcm9mZXNzaW9uYWwuIApXaGVuIEkgd2F0Y2hlZCB0aGlzIGEgd2hpbGUgYmFjaywgSSByZW1lbWJlciBJIHdhcyBiYXNpY2FsbHkganVzdCByZWFkaW5nIHN1YnRpdGxlcyB0aGUgd2hvbGUgdGltZSBhbmQgdHJ5aW5nIHRvIGtlZXAgdXAsIGNvbnN0YW50bHkgZ2V0dGluZyBjb25mdXNlZCBiZXR3ZWVuIHdobyBKaW0gYW5kIHdobyBKdWxlcyBpcyAod2hpY2ggbWF5IGhhdmUgYmVlbiB0aGUgZmlsbW1ha2VycycgaW50ZW50aW9uKS4gVGhlIGZpbG0gaXMgZGVuc2VseSBwYWNrZWQgd2l0aCBkaWFsb2d1ZSAgIGJvdGggbmFycmF0aW9uIGFuZCBjaGFyYWN0ZXIgZGlhbG9ndWUgICBhbmQgYnkgcmVhZGluZyBmb3IgbW9zdCBvZiB0aGUgZmlsbSBpdCBraW5kIG9mIHRvb2sgYXdheSBmcm9tIHRoZSBpbXByZXNzaXZlIHZpc3VhbHMuIApXZSBiZSB0aHJvd2luZyBjaGFyZ2VzLi4gCkkgbm90IHNheWluZyB0aGF0IGl0IGlzbiBsaWtlbHkgaGUgaGFzIGEgbWVudGFsIGlsbG5lc3MuIEkgaW5jbGluZWQgdG8gYmVsaWV2ZSBoZSBkb2VzLCBiZWNhdXNlIEkgY2hvb3NlIHRvIGJlbGlldmUgdGhhdCBwZW9wbGUgYXJlIGdlbmVyYWxseSBub3QgdGhpcyBmdWNrZWQgdXAgdW5sZXNzIHRoZXkgaGF2ZSBhbiBpbGxuZXNzLiBCdXQgSSBzdXJlIGFzIGhlbGwgbm90IGdvaW5nIHRvIGp1bXAgdGhlIGd1biBzYXlpbmcgaGUgZG9lcyB3aXRob3V0IHN1YnN0YW50aWFsIHByb29mIG9mIGl0Li4gCkhvd2V2ZXIsIGl0J3MgYWxzbyBnb29kIHRvIGdldCBhIGJpdCBvZiBwcmFjdGljZS4gCidJdCdzIGEgcmFiYml0IGluIGEgc25vdyBzdG9ybS4nIEkgbWlzdW5kZXJzdG9vZCBoaW0gYW5kIGFza2VkLCAnV2hlcmUncyB0aGUgUmFiYmk/JyBGcm9tIHRoZW4gb24sIHdoZW5ldmVyIHRoZXJlIHdhcyBhIGJsaXp6YXJkIGhlIHdvdWxkIHNheSwgJ2l0J3MgYSByYWJiaSBpbiBhIHNub3cgc3Rvcm0uJyBXZSBuZXZlciBleHBsYWluZWQgdGhlc2Ugam9rZXMgdG8gdGhlIGtpZHMuIApQcm9iYWJseSBjYXVzZSB0aGVzZSBndXlzIGp1c3QgaHVua2VyIGRvd24gaW4gb25lIHBsYWNlIGxpa2UgYW4gYXJ0aWxsZXJ5IHBpZWNlLCBzaW5jZSB0aGV5J3JlIGp1c3QgbW9iaWxlIGFydGlsbGVyeSAob3IgYXJlIHRoZSBmcm9udGxpbmVzIGluIGEgc2llZ2UgZm9yIHRoZSBtZWxlZSB2YXJpYW50KSBhbmQgeW91IHdvdWxkbid0IHdhbnQgYSBjYXB0YWluLCBhcG90aGVjYXJ5LCB0ZWNobmFyaW5lLCBvciBjaGFwbGFpbiBsb2NrZWQgaW50byBhbnkga2luZCBvZiByb2xlIGxpa2UgdGhhdC4gVGhvc2Ugc3BlY2lhbGlzdHMgbmVlZCB0byBoYXZlIG1vYmlsaXR5IHNvIHRoZXkgY2FuIGZsZXhpYmx5IHJlc3BvbmQgdG8gaW5jb21pbmcgdGhyZWF0cy4gClBva2VyIHRvdXJuYW1lbnRzIGNhbiBiZSBvZiBkaWZmZXJlbnQgdHlwZXMuIEZvciBpbnN0YW5jZSAgc2hvb3RvdXQgdG91cm5hbWVudHMgd2hlcmUgdGhlIHRhYmxlcyBhbG9uZyB3aXRoIHBsYXllcnMgYXJlIG5vdCBlbGltaW5hdGVkIGJ1dCBjb250aW51ZSB0byBiZSB0aGVyZSB0aWxsIG9uZSBwbGF5ZXIgZW1lcmdlcyBhcyBhIHdpbm5lci4gVW5saWtlIHRvIHRoaXMgYXJlIHRoZSBlbGltaW5hdGlvbiB0b3VybmFtZW50cyB3ZXJlIHRoZSBnYW1lIGNvbW1lbmNlcyB3aXRoIGFsbCBwbGF5ZXJzIGhhdmluZyBlcXVhbCBhbW91bnQgb2YgY2hpcHMgYW5kIHByb2xvbmdzIHVudGlsIG9uZSBwbGF5ZXIgbWFuYWdlcyB0byBnZXQgYWxsIHRoZSBjaGlwcy4gCkdpdmluZyBhbiBhbnN3ZXIgdG8gdGhpcyBxdWVzdGlvbiBpcyBzdWJqZWN0aXZlIGJ1dCB0aGV5IGFyZSBwbGF5aW5nIGdvb2QuIEluIHRoZSBzdW1tZXIgMjAwNSwgdGhlIG9ubGluZSBwb2tlciByb29tIEdvbGRlbiBQYWxhY2UgaG9zdGVkIGEgcHJvbW90aW9uYWwgdG91cm5hbWVudCBpbiBMYXMgVmVnYXMsIGF0IHRoZSBvbGQgQmluaW9ucywgd2l0aCBhICQxMDBrIGdpdmVhd2F5IHByaXplLiBJdCB3YXMgYmlsbGVkIGFzIHRoZSAyMDA1IFdvcmxkIFNlcmllcyBvZiBQb2tlciBSb2JvdHMuIApIZSB3YW50cyB0byBkbyBzb21ldGhpbmcgYWJvdXQgRWwgUGFzbyBjcnVtYmxpbmcgcm9hZHMgd2hpY2ggaXMgYSBiaXQgcmljaCB3aGVuIHlvdSB0aGluayBhYm91dCBhbGwgdGhlIG1vbmV5IHRoZSBNb25leSBndXlzIGdhdmUgdG8gRXNjb2JhciBhbmQgQ28uIEkgZ3Vlc3Mgd2UgYXJlIGZpbmFsbHkgYWNrbm93bGVkZ2luZyB0aGF0IEVzY29iYXIgYW5kIENvLiBuZXZlciB0b29rIGNhcmUgb2YgdGhlIGJhc2ljcyBhdCB0aGUgY2l0eSBhbmQgY291bnR5LiAKSWYgeW91IGFyZSBpbiBhbiBhcmVhIHdpdGggc2V2ZXJhbCBjYXNpbm9zIHdpdGhpbiB3YWxraW5nIGRpc3RhbmNlLCBkbyBub3Qgc2V0dGxlIGZvciBhIHBheSB0YWJsZSB0aGF0IGlzIGJlbG93IHRoZSBzdGFuZGFyZCBmb3IgdGhlIGFyZWEuLiAKTXkgc3RieCBpcyBraW5kIG9mIHRoZSBzYW1lIHNvIGZvciBhIHdoaWxlIEkgZGlkIGhhdmUgdG8gYmUgIm1lYW4iIHRvIGhpbS4gTm90IGFjdGl2ZWx5IGNydWVsIG9yIGFueXRoaW5nLCBidXQganVzdCBraW5kIG9mIHNodXR0aW5nIGhpbSBvdXQgYmVjYXVzZSBoZSB0b29rIGFueSAibmljZSIgYWN0aW9uIGFzIGEgc2lnbiB0aGF0IGV2ZXJ5dGhpbmcgd2FzIGZpbmUgYmV0d2VlbiB1cy4gCkl0IG9ubHkgYSA1IHBhbmVsIHNvIHRoYXQgbmljZS4gaXQgaW5jbHVkZXMgbWFyaWp1YW5hLCBvcGlhdGVzIChubyBvcGlvaWRzKSwgY29jYWluZSwgcGNwIGFuZCBtZXRoL2FtcGhldGFtaW5lLiBteSBwcmV2aW91cyBlbXBsb3llcnMgNSBzdWJzdGl0dXRlZCBtZG1hIGZvciBwY3AuIG15IGVtcGxveWVyIHByZXZpb3VzIHRvIHRoYXQgaGFkIGEgZHJ1ZyBvZiBhYnVzZSBmdWxsIGJ1dCB3ZWlyZGx5IG9taXR0ZWQgc29tZSBjb21tb25seSBhYnVzZWQgZHJ1Z3MgYXMgdGhleSB3ZXJlIHRvbyBleHBlbnNpdmUuIHRoYXQgZW1wbG95ZXIgZGlkbnQgcmVhbGx5IHJhbmRvbWx5IHRlc3QgYXMgdGhlIGRydWdzIG9mIGFidXNlIGZ1bGwgaXMgbGlrZSAzNTAkIQpUaGVuIHdlIHByb2JhYmx5IHdlbnQgdG8gV2F3YS4gSmltIGlzIG5vdyBzb21lIGtpbmRhIGxhd3llciBsYXN0IEkgaGVhcmQuLiAKV2hhdGV2ZXIuIApJIGNhbiB1bmRlcnN0YW5kIHBlb3BsZSBiZWluZyB3YXJ5IG9mIHRoZW0uIFdoZW4gdGFsa2luZyB0byBteSBmcmllbmQgdGhlIG90aGVyIGRheSwgSSBkZXNjcmliZWQgaWd1YW5hcyBhcyBiZWluZyBsaXR0bGUgbW9iaWxlIHdlYXBvbnMuIApUaG9zZSBwbGF5ZXJzIGFsc28gZG9uIHdhbnQgdG8gcXVldWUgZm9yIGNvbXAsIGJlY2F1c2UgYWZ0ZXIgd29ya2luZyBzbyBoYXJkIHRvIGFjaGlldmUgd2hhdGV2ZXIgcmFuayB0aGV5IGF0LCB0aGUgcmlzayBvZiBsb3NpbmcgcHJvZ3Jlc3Mga2VlcHMgdGhlbSBmcm9tIHN0YXlpbmcgaW4gdGhhdCBwbGF5bGlzdC4gClRoZSBiZXN0IHdheSB0byBkZXN0cm95IHJhY2lzbSBpcyB0byBzdG9wIHRhbGtpbmcgYWJvdXQgaXQuIFNvcnRhIGZhbGxzIGludG8gdGhlIHdob2xlIGNhbiBtZW1lLiAKQWxzbyBJIGxpa2UgaXQgd2hlbiB0aGUgc2VyaWVzIGlzIG1vcmUgY29tcGV0aXRpdmUgYW5kIGFueSBudW1iZXIgb2YgcmlkZXJzIGNhbiB3aW4gYSByYWNlIGFuZC9vciBjaGFtcGlvbnNoaXAuIFNvIGltIG5vdCBhIE1hcmMgZmFuIG5vdyBiZWNhdXNlIGhlIGlzIHRvIGRvbWluYW50LiAKNiBtb250aHMgZm9yIGEgbGlzdGluZyBpcyBhIGdpdmVuLiAKVGhlIFNjaGVyZXIncyBsaW5lbiBjbG9zZXQgV2hlbiBleGFtaW5pbmcgdGhlIGRpcmVjdGlvbiBvZiB0aGUgc2hvZSBwcmludHMgYXQgdGhlIGNyaW1lIHNjZW5lLCBzb21ldGhpbmcgYWx3YXlzIHRyb3VibGVkIHBvbGljZS4gCldlIHdvcmsgd2l0aCBhIGhvc3Qgb2YgdGFsZW50ZWQgY2hlZnMgc29tZSBvZiB3aG9tIHJvc2UgdG8gZmFtZSBvbiBUViBzaG93cyBzdWNoIGFzIHRoZSBHcmVhdCBCcml0aXNoIEJha2UgT2ZmIGFuZCBNYXN0ZXJDaGVmLjEwJSBkaXNjb3VudCBvbiBhbGwgY29va2VyeSBjb3Vyc2VzUmluZyAwMTI4MyA4MTAyNzUgcXVvdGluZyBjb2RlIFVOSTEwVW5pdmVyc2l0eSBvZiBCYXRoVW5pdmVyc2l0eSBhY2NvbW1vZGF0aW9uIGF0IFdvb2RsYW5kIENvdXJ0LjEwJSBkaXNjb3VudCBvbiBhZHZlcnRpc2VkIHJhdGVzLCBkZXBlbmRlbnQgb24gYXZhaWxhYmlsaXR5LkRpc2NvdW50ZWQgIHRpY2tldHMgYXZhaWxhYmxlIHRvIFVuaXZlcnNpdHkgc3RhZmYuIFRpY2tldHMgZnJvbSBCYXRoIFNwYSB0byBMb25kb24gY29zdCA1IHNpbmdsZSBhbmQgOSByZXR1cm4uIDIwJSBkaXNjb3VudCBhdmFpbGFibGUgb24gYWxsIG90aGVyIGZhcmVzLiAKV2hlbiBhIGNhciBnZXRzIHN0cnVjayBmcm9tIHRoZSByZWFyIGJ5IGFub3RoZXIgYXV0bywgdGhlIHZlcnkgZmlyc3QgdGhpbmcgdGhhdCBoYXBwZW5zIGlzIHRoZSBzdHJ1Y2sgY2FyIGlzIGFjY2VsZXJhdGVkLgpBbGwgeW91IGhhdmUgdG8gZG8gaXMgYmUgaW5jbHVzaXZlIGFuZCB1bmRlcnN0YW5kaW5nIHRvIGEgY2hpbGQuIFlvdSBjYW4gY2xhaW0gdG8gYmUgdGhlIHZpY3RpbSB3aGVuIHlvdSBvYnZpb3VzbHkgcGFydCBvZiB0aGUgcHJvYmxlbS4gWW91IEFSRU4gaGVyIG1vbSwgc28gd2h5IHJlc2VudCBhbmQgcHVuaXNoIGhlciBmb3IgcG9pbnRpbmcgb3V0IHRoZSBvYnZpb3VzPyBTdXJlLCBzaGUgbmVlZHMgdG8gZm9sbG93IGNlcnRhaW4gcnVsZXMgYW5kIGFkaGVyZSB0byBhIG1vZGljdW0gb2YgcmVzcGVjdCB3aGlsZSB1bmRlciB5b3VyIHJvb2YsIGJ1dCB5b3UgY2FuIGdldCB1cHNldCB0aGF0IHNoZSBkb2VzbiBzZWUvcmVzcGVjdCB5b3UgYXMgYSBtb3RoZXIgd2hlbiB5b3UgYWxyZWFkeSBhZG1pdHRlZCB0aGF0IHlvdSBzaG93IGJsYXRhbnQgZmF2b3JpdGlzbSB0byB5b3VyIGJpbyBraWRzLiAKWW91IGFyZSBiZXR0ZXIgb2ZmLiAKQ2FydGVyIHNvYWtlZCB1cCBzbyBtdWNoIGF0b20ganVpY2UgdGhhdCBmb3IgdGhlIHNpeCBtb250aHMgZm9sbG93aW5nIHRoZSBjbGVhbnVwIGhlIGhhZCByYWRpb2FjdGl2ZSB1cmluZS4gClRoaXMgbGVkIGludG8gdGhlIG5vdmVsbGEgVGhlIE1vb24gTWVuLCBhcyBVbmRlciB0aGUgUmVkIEZsYWcgd2FzIG5vdyByZW5hbWVkLCB3aGljaCB0b2xkIHRoZSB0YWxlIG9mIGhvdyB0aGUgRWFydGggd2FzIGNvbnF1ZXJlZCBieSB0aGUgS2Fsa2FyIGludmFkZXJzIGFuZCB0aGVpciBvcHByZXNzaXZlIHJlZ2ltZS4gCk1hbnkgd2VkZGluZ3MgaGF2ZSB5b3UgYmVlbiB0byB3aGVyZSB0aGUgY291cGxlIHNhaWQ6IFdlIHdhbnRlZCB0byBkbyBzb21ldGhpbmcgZGlmZmVyZW50LiAKUGFydCBvZiBOZXRhbnlhaHUncyB0eXBpY2FsIHN0dW1wIHNwZWVjaCB0aGVzZSBkYXlzIGFsbGVnZXMgdGhhdCBoaXMgcHJpbWUgY2hhbGxlbmdlciwgZXggbWlsaXRhcnkgY2hpZWYgQmVubnkgR2FudHosIHdpbGwgYmUgdW5hYmxlIHRvIGJ1aWxkIGEgcnVsaW5nIGNvYWxpdGlvbiB3aXRob3V0IHRoZSBiYWNraW5nIG9mIEFyYWIgcGFydGllcy4gCkphcGFuIGVjb25vbXkgYW5kIHRyYWRlIG1pbmlzdGVyIHNheXMgaGlzIGNvdW50cnkgc3RpbGwgc2VlcyBhIGx1Y3JhdGl2ZSBmb3JlaWduIG1hcmtldCBmb3IgbnVjbGVhciB0ZWNobm9sb2d5IGFuZCBwbGFudHMgZGVzcGl0ZSB0aGUgcmVjZW50IGRlY2lzaW9uIGJ5IGluZHVzdHJpYWwgaGVhdnl3ZWlnaHQgSGl0YWNoaSB0byBmcmVlemUgYSBwcm9qZWN0IGluIEJyaXRhaW4uCkVuam95IGJlaW5nIGZlZCBzaGl0IGZyb20gdGhhdCBvcmFuZ2UgbW9yb24gYW5kIHByYWlzaW5nIHRoZSB0YXN0ZS4gSGUgZG9lc24gY2FyZSBhYm91dCB0aGUgYm9yZGVyIGFueSBtb3JlIHRoYW4gaGUgY2FyZXMgYWJvdXQgYW55dGhpbmcgbm90IGRpcmVjdGx5IHJlbGF0ZWQgdG8gaGltc2VsZi4gR29kIHkgYXJlIGd1bGxpYmxlVGhpcyBpcyBhYnNvbHV0ZWx5IG5vdCB0aGUgY2FzZSBmb3IgZ2FiYXBlbnRpbiB3aXRoZHJhd2FsLCBmb3Igb25lLiAKVGhlIHdheSBJIHNlZSBpdCBvbmxpbmUgSFNOTCBjYXNoIGlzIGRyeWluZyB1cC4gClRoZWlyIHJlYXNvbmluZyB3YXMgZ2l2ZW4gaW4gYSBob3JyaWJseSBhbnN3ZXJlZCBRIG9uIHRoZSBhdGhsZXRpYy4gCkRpZSBGZXJ0aWdzdGVsbHVuZyBkZXMgRWNvbm9teSBIb3RlbHMgaXN0IGZyIEZyaGphaHIgMjAxNiBnZXBsYW50Li4gClRoZSBhY3R1YWwgY29uc3RlbGxhdGlvbnMgaW4gcmVsYXRpb25zaGlwIHRvIHRoZSBlYXJ0aCBIQVZFIHNoaWZ0ZWQgb3ZlciB0aGUgYWdlcy4gVGhlIHpvZGlhYyBkYXRlcyBhcmUgYmFzZWQgb24gdGhlIGFwcGFyZW50IHBhdGggb2YgdGhlIFN1biwgY2FsbGVkIHRoZSBlY2xpcHRpYywgYXMgaXQgbW92ZXMgdGhyb3VnaCB0aGVzZSAzMCBkZWdyZWUgem9uZXMuIFJhdGhlciB0aGFuIGZvbGxvd2luZyB0aGUgbW92ZW1lbnQgb2YgdGhlIHZpc2libGUgc3RhcnMsIFdlc3Rlcm4gYXN0cm9sb2d5IGlzIGJhc2VkIG9uIHRoZSBhcHBhcmVudCBwYXRoIG9mIHRoZSBTdW4gYXMgc2VlbiBmcm9tIG91ciB2YW50YWdlIHBvaW50IG9uIGVhcnRoLiAKSGUgbG9va2VkIGNvbWZvcnRhYmxlIGJhY2sgb24gdGhlIGxlZnQgc2lkZSwgc2NvcmluZyBoaXMgZWlnaHRoIGFuZCBuaW50aCBnb2FscyBvZiB0aGUgc2Vhc29uIGluIHRoZSBmaXJzdCBwZXJpb2QuLiAKIkVyaWMuIEFtIEkgZ2xhZCB0byBzZWUgeW91LiBhbSBoZXJlIHRvIGdldCBKZXNzLiBXaGVyZSBpcyBzaGU/IGhvcnJpYmxlIGhhcyBoYXBwZW5lZC4gZG8geW91IG1lYW4gS2F0aWU/IGp1c3QgZ290IGEgcGhvbmUgY2FsbCBmcm9tIGhlci4gU2hlIGdvdCBpbnRvIGEgY2FyLiBXZSB0aG91Z2h0IGl0IHdhcyB5b3UuIFNoZSBodW5nIHVwIHdpdGggeW91ciBtb20gYWZ0ZXIgdGhlIGhvcm4gYmxldyBvdXRzaWRlLiBJIGp1c3QgZ290IGEgY2FsbC4gSGUgaGFzIEplc3NpY2EuIGhhcyBKZXNzaWNhPyBkb24ga25vdy4gSGUgaGFzIGNhbGxlZCBhIGZldyB0aW1lcyB0b25pZ2h0LiBtZSBpbi4gSSBuZWVkIHRvIGNhbGwgbXkgbW9tLiBXZSBuZWVkIHRoZSBwb2xpY2Ugb3Igc29tZW9uZS4gTWF5YmUgbXkgbW9tIGNhbiBjYWxsIG15IGRhZC4gV2UgbmVlZCBoZWxwIGlmIHdoYXQgeW91IHNheWluZyBpcyB0cnVlLiBNeSBzaXN0ZXIgaGFzIGJlZW4ga2lkbmFwcGVkLiBtb3ZlZCBhbmQgRXJpYyB3YWxrZWQgcGFzdCBoZXIuIEhlciBuZXJ2ZXMgYXJlIHNob3QgYW5kIHNoZSBpcyBsb29raW5nIGFyb3VuZCBhdCBub3RoaW5nIG5vdCBhYmxlIHRvIGV2ZW4gdGhpbmsgd2hlbiBzdWRkZW5seSBzaGUgbG9va3MgYXQgaGVyIGhhbmRzIGFuZCBzYXlzLCAgRXJpYy4gSSBoYXZlIHRoZSBwaG9uZS4gU2hlIGhhbmRzIGhpbSB0aGUgcGhvbmUgYW5kIGhlIGNhbGxzIGhpcyBtb20uIEhlIGV4cGxhaW5zIHRvIGhlciB3aGF0IEthdGllIGp1c3Qgc2FpZC4gd2FzIG9uIHRoZSBwaG9uZSB3aXRoIGhlciB3aGVuIHNoZSBzYWlkIHlvdSB3ZXJlIHRoZXJlLiBoaXMgbW9tIHNhaWQuIGNvdWxkIGl0IG5vdCBoYXZlIGJlZW4geW91PyBkb24ga25vdyBtb20uIEkganVzdCBrbm93IEkganVzdCBnb3QgaGVyZSBhbmQgc2hlIGlzIGdvbmUuIEthdGllIHNhaWQgc2hlIGdvdCBhIGNhbGwuIEhvbGQgb24gbW9tIHRoZXJlIGlzIGEgYmVlcC4gRXJpYyBoaXRzIHRoZSBzZW5kIGJ1dHRvbiBvbiB0aGUgcGhvbmUgdG8gYW5zd2VyIHRoZSBvdGhlciBjYWxsLiBQbGVhc2UgaGVscCBtZS4gSGUgaGVhcnMgSmVzc2ljYSBzb2JiaW5nIGFuZCBpdCBzdGFydHMgc291bmRpbmcgZnVydGhlciBhd2F5LiBFcmljLiBJcyBLYXRpZSB0aGVyZT8gc2F5cyBhIHZvaWNlIG9uIHRoZSBvdGhlciBlbmQuCk15IGNhcmRzICAgQ2hhc2UgU2FwcGhpcmUgUmVzZXJ2ZSAoNS8xOCksIEJsdWUgQ2FzaCBFdmVyeWRheSAoNy8xNyksIENoYXNlIEZyZWVkb20gVW5saW1pdGVkICg3LzE3KSwgQ2hhc2UgQW1hem9uIFByaW1lICg3LzE3KSwgQkJWQSBDb21wYXNzICgxMC8xNikgRmlhbmNlZSBjYXJkcyAgIENoYXNlIFNhcHBoaXJlIFByZWZlcmVkICg5LzE3KSwgQkJWQSBDb21wYXNzICg1LzE2KQpUaGVvbGRtYW5zbW9uZXkgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkkgd29ya2VkIGFzIGEgaG9zdCBmb3IgUmVkIExvYnN0ZXIgaW4gY29sbGVnZSBhbmQgZ290IGFjY3VzZWQgb2YgYmVpbmcgcmFjaXN0IG11bHRpcGxlIHRpbWVzIGZvciBzZWF0aW5nIHBlb3BsZSBpbiB0aGUgYmFjayBvZiB0aGUgcmVzdGF1cmFudC4gClBlcmhhcHMgcGxheSBhZ3Jlc3NpdmVseSBhbmQgc3RlYWwgYSBmZXcgcG90cy4uIApIaWMgdXllIG9sbWFkaW0gYW1hIHNlbmVsZXJkaXIgb2t1cnVtIGVrc2l5aS4gCkkgZmluZCB0aGF0IGlmIGl0IGlzIHNvbWV0aGluZyB0aGF0IEkgY2FuIHByZXBhcmUgZm9yIEkgd2lsbCBkbyBhcyBtdWNoIHJlc2VhcmNoIGFib3V0IGl0IGFzIHBvc3NpYmxlLiAKSSB3YXMgY2FtZSB2ZXJ5IGNsb3NlIHRvIHN3aXRjaGluZyBjYXJlZXJzIHRvIGJlIGFuIFJNVCwgdG9vayBhIGZldyBpbnRybyBjbGFzc2VzLCBob3dldmVyIGl0IGp1c3Qgd2FzbiB3b3J0aCBpdCBmb3IgbWUgb25jZSBJIGRpZCB0aGUgbWF0aC4gVGhlIHNjaG9vbCBpcyBleHRyZW1lbHkgZXhwZW5zaXZlIHdoZXJlIEkgYW0gbG9jYXRlZCBhbmQgeW91IHJlcXVpcmUgYSBodWdlICBvZiBob3VycyB0byBxdWFsaWZ5IGFzIGFuIFJNVCBpbiBteSBjb3VudHJ5LCBhbmQgaW4gdGhlIGVuZCBvZiBpdCBhbGwsIHRoZSBwYXkgaXMganVzdCB0aGVyYXB5IGlzIGxpdHRlcmVkIHdpdGggcHNldWRvIHNjaWVuY2UsIGJ1dCBrZWVwIGluIG1pbmQgdGhhdCB5b3VyIHdvcmsgaXMgdG8gcmVsaWV2ZSB0ZW5zaW9uIGFuZCBoZWxwIHBlb3BsZSByZWxheC4gSSB0aGluayBldmVyeW9uZSBjYW4gYWdyZWUgdGhhdCBtYXNzYWdlIHRoZXJhcHkgZG9lcyB0aGF0LiBNb3N0IG9mIHlvdXIgY2xpZW50cyB3b24gd2FudCB0byBjaGF0IHdpdGggeW91IGFib3V0IHdoYXQgeW91IGRvaW5nLCB0aGV5IGp1c3Qgd2FudCB0byByZWxheC4gVHJ5IHRvIGdldCB0aGUgYmVzdCBwb3NzaWJsZSBrbm93bGVkZ2Ugb2YgYW5hdG9teSBhbmQgYnVpbGQgdXBvbiB0aGF0IGVtcGlyaWNhbGx5LCBpZiB5b3Ugc21hcnQgYW5kIGhhdmUgdGhlIGRyaXZlIHRvIGxlYXJuLCB5b3Ugd2lsbCBiZSBleGNlcHRpb25hbCBhbmQgcGVvcGxlIHdpbGwgY29tZSB0byB5b3Ugd2l0aG91dCBhbnkgYnVsbHNoaXQuCkNvbW11bmlzdCBjb3VudHJpZXMgY2FuIG9wcG9zZSBlYWNoIG90aGVyLgpBajAyMjAgIDAgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpMYXdtYWtlcnMgaGF2ZSBzYWlkIHRoZSBtYWpvcml0eSBsZWFkZXIgcGxlZGdlZCBhbiAib3BlbiIgYW1lbmRtZW50IHByb2Nlc3MgICB3aGljaCB3b3VsZCBzdWdnZXN0IHZlcnkgZmV3IGxpbWl0YXRpb25zIG9uIG51bWJlciBvZiBhbWVuZG1lbnRzIGFuZCBzdWJqZWN0IHRoZW0gdG8gYSA1MCB2b3RlIHRocmVzaG9sZC4gQnV0IE1jQ29ubmVsbCBuZXZlciBhY3R1YWxseSBzYWlkIHRoZSB3b3JkICJvcGVuIiBpbiBoaXMgcGxlZGdlLCBvbmx5IGNvbW1pdHRpbmcgdG8gImFuIGFtZW5kbWVudCBwcm9jZXNzIHRoYXQgaXMgZmFpciB0byBhbGwgc2lkZXMuIgpUaGUgYnVzIHdhcyBjYXJlZW5uZyBhcm91bmQgdHVybnMgYW5kIHJvY2tuZyBiYWNrIGFuZCBmb3J0aCBhbmQgdCB3YXMgZXRoZXIgZnJlZXpuZyBjb2xkIG9yIGJ1cm5uZyBob3QuIApMaWtlIHJveWFsIHNpYmxpbmdzIHdhcnJpbmcgb3ZlciBhIGJpcnRocmlnaHQsIExvbmdtb250IGFuZCBMZXdpcyBQYWxtZXIgYm90aCByb3NlIHVuYmVhdGVuIHRvIHRoZSB0b3Agb2YgdGhlIDRBIGNsYXNzaWZpY2F0aW9uIGFuZCB0aHJldyBldmVyeXRoaW5nIHRoZXkgaGFkIGF0IGV2ZXJ5b25lIHdoaWxlIHByZXAgYmFza2V0YmFsbCBmYW5zIHdhdGNoZWQgZnJvbSBhYm92ZSBpbiB0aGUgRGVudmVyIENvbGlzZXVtIHN0YW5kcywgYXMgd2VsbCBhcyBmcm9tIGFsbCBjb3JuZXJzIG9mIENvbG9yYWRvLiAKRmx5aW5nQXBwbGUzMSAgMTQgcG9pbnRzICBzdWJtaXR0ZWQgMjQgZGF5cyBhZ28KRG9lcyBoYXZpbmcgYSBzbWFsbCBmYW4gcG9pbnRlZCBhdCB5b3UgaGVscCBhdCBhbGw/IEFub3RoZXIgdGhlcmFwaXN0IEkgd29ya2VkIHdpdGgga2VwdCBhIGxpdHRsZSBwZXJzb25hbCBmYW4gaW4gaGVyIHJvb20gYWxsIHRoZSB0aW1lIHRoYXQganVzdCBwb2ludGVkIHVwIGF0IGhlci4gCkRpc3RyYWN0aW9ucyBjYW4gZWFzZSBkZW50YWwgYW54aWV0eQpTaG9ydCBhbnN3ZXI6IGRvbiB3b3JyeSBhYm91dCBpdC5pbmNpdGVmdWwxNyAgMSBwb2ludCAgc3VibWl0dGVkIDggZGF5cyBhZ29Ob3QgbmVjZXNzYXJpbHkuIApUaGUgV29ybGQgUG9rZXIgVG91ciBQb2tlciBTZXQgaXMgY29tcHJpc2VkIG9mIGNsYXkgZmlsbGVkIGNoaXBzIHdoaWNoIGFkZHMgdG8gdGhlaXIgZHVyYWJpbGl0eS4gVGhlc2UgYXJlIG5vdCB0aGUgbG93IHF1YWxpdHkgcGxhc3RpYyBjaGlwcyBtYW55IGFyZSBmYW1pbGlhciB3aXRoLiBUaGVzZSBhcmUgaGlnaCBncmFkZSBjbGF5IGNoaXBzIHRoYXQgd2lsbCBjZXJ0YWlubHkgbGFzdCBhIGxvbmcgdGltZSBubyBtYXR0ZXIgaG93IG9mdGVuIHRoZXkgYXJlIHVzZWQuIEhvcGVmdWxseSwgd2hlbiB0aGV5IGFyZSB1c2VkIHRoZXkgd2lsbCB1c2VkIGluIGNvbmp1bmN0aW9uIHdpdGggd2lubmluZyBoYW5kcyEKTm93IEJhY2twYWdlJ3Mgcml2YWxzIGFyZSBtb3ZpbmcgdG8gZmlsbCB0aGUgdm9pZC4KT2YgZnVydGhlciBjb25jZXJuIGZvciB0aGUgRVUgaXMgdGhhdCB0aGVzZSBzYW1lIGNvdW50cmllcyBhcmUgdGhlIHNvdXJjZSBvZiBtYW55IG9mIHRoZSBpbnB1dHMgYW5kIHJlc291cmNlcyB1cG9uIHdoaWNoIHRoZSBtYXNzaXZlIHNpbmdsZSBtYXJrZXQgZnVuY3Rpb25zLCBpbmNsdWRpbmcgb2lsLCBnYXMgYW5kIG1pbmVyYWxzLiBUaGlzIGlzIGEgdm9sYXRpbGUgc2l0dWF0aW9uIHRoYXQgYnJpbmdzIHdpdGggaXQgY29uc2lkZXJhYmxlIGdlb3BvbGl0aWNhbCByaXNrLgpJIG5vIHRoZXJhcGlzdCwgYnV0IEkgc2F5IHlvdSBvbiB0aGUgcmlnaHQgdHJhY2sgZm9yIHN1cmUuIApQdXJpdGFuIFByZWV0J3MgcmFpZCBvbiBJbnRlcm5ldCBwb2tlciBzaXRlcyBpbiBhIGNvdW50cnkgd2hlcmUgZ2FtYmxpbmcgaXMgbGVnYWwgaW4gYWxsIDUwIHN0YXRlcywgd2hlcmUgZ292ZXJubWVudHMgYXJlIHB1c2hpbmcgdGhlaXIgb3duIGxvdHRlcnkgZ2FtZXMgZXZlcnkgZGF5LCBzZWVtcyBhIGJpdCBjb250cmFkaWN0b3J5IHRvIHNheSB0aGUgbGVhc3QgYW5kIEknbSB3aWxsaW5nIHRvIGJldCB0aGF0IHNvbWUgb2YgQmhhcmFyYSdzIHN0YWZmIGhhdmUgcGxheWVkIHBva2VyLiAKUGxheWVycyBjYW4gam9pbiBvbmxpbmUgY2FzaW5vcyB0aGF0IGZlYXR1cmUgY2FzaW5vcyBnYW1lcyBzdWNoIGFzIHNsb3RzLCByb3VsZXR0ZSBhbmQgYmxhY2tqYWNrIG9yIGpvaW4gYSBwb2tlciBzaXRlIGFuZCBwbGF5IHRoaXMgZW50ZXJ0YWluaW5nIGNhcmQgZ2FtZS4gClRvYXN0ZXJfSW5fQmF0aHR1YiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyMiBkYXlzIGFnbwpUaGV5IG9mZiB0aGUgcm9sbGVyIGNvYXN0ZXIgaW4gdGhlIG1pZGRsZSBvZiB0aGUgcmlkZS4uIApPZiB0aGUgYmlnZ2VzdCBiYXJyaWVycyBhdXRvbWFrZXJzIGZhY2UgaWYgdGhleSB3YW50IHRvIGJ1aWxkIG9yIGV4cGFuZCBhbiBhdXRvIGFzc2VtYmx5IHBsYW50IGlzIHRoZSBhdmFpbGFiaWxpdHkgb2YgbGFyZ2Ugc2NhbGUgc2l0ZXMgZm9yIG1hbnVmYWN0dXJpbmcgLiBPdXIgcGxhbiBpbmNsdWRlcyBhIEpvYiBTaXRlIENoYWxsZW5nZSB3aGljaCB3aWxsIGdpdmUgbXVuaWNpcGFsaXRpZXMsIHRoYXQgd2lzaCB0byBwYXJ0aWNpcGF0ZSwgdGhlIG9wcG9ydHVuaXR5IHRvIHByb3Bvc2Ugc2l0ZXMgb2YgNTAwIHRvIDEsNTAwIGFjcmVzIGZvciBpbmR1c3RyaWFsIGV4cGFuc2lvbiwgc2F5cyB0aGUgbGV0dGVyIGZyb20gT250YXJpbyBlY29ub21pYyBkZXZlbG9wbWVudCBtaW5pc3RyeS4uIApJZiB5b3UgZm9sZGVkIG9uIGEgcm91bmQsIHRoZXJlIG1pZ2h0IGJlIGEgZ29vZCBjaGFuY2UgeW91IHdvdWxkIHdhbnQgdG8gdGFsayBhYm91dCB0aGUgcG9zc2liaWxpdGllcyB0aGF0IGNvdWxkIGhhcHBlbiBpZiB5b3Ugc3RheWVkIGluIHRoZSBnYW1lLCBhbmQgeW91IHdvdWxkIHdhbnQgdG8gZG8gdGhpcyB3aGlsZSB0aGUgZ2FtZSBpcyBzdGlsbCBvbi4gRG8gbm90IGRvIHRoaXMgYXMgdGhlIG90aGVyIHBsYXllcnMgY2FuIHVzZSB0aGlzIGluZm9ybWF0aW9uIHRvIHdpbiB0aGVpciBjdXJyZW50IGhhbmQuIEFsc28sIGl0IHdpbGwgcnVpbiBvdGhlciBwbGF5ZXJzJyBibHVmZiBzdHJhdGVnaWVzLiBEb24ndCBiZSBydWRlIGFuZCBqdXN0IHppcCBpdC4gWW91IGNhbiBkaXNjdXNzIGl0IGFmdGVyIHRoZSBnYW1lLgpIZSB0aGVuIGdvdCB1cCBhbmQgc3d1bmcgYXQgbWUga25vY2tpbmcgbXkgZ2xhc3NlcyBvZmYuIEkgZ290IG15IGdsYXNzZXMgYW5kIHdlIGJvdGggdGFsa2VkIHNvbWUgY3JhcCBhcyBJIHdlbnQgYmFjayB0byBteSBuZXcgYXBhcnRtZW50LiBUaGUgbmV4dCBkYXkgd2UgcmFuIGludG8gZWFjaCBvdGhlciBhbmQgc3RhcnRlZCBwbGF5aW5nLiBUaGF0IHdhcyBvdmVyIDI1IHllYXJzIGFnbyBhbmQgd2UgZ29pbmcgdG8gcGxheSBzb21lIGdhbWVzIGxhdGVyIHRvbmlnaHQuCiJCaXRlIHRoZSBwaWxsb3csIiBNb3NlcyBjb21tYW5kZWQuICJJIGdvaW5nIGluIGRyeS4iCkFzIGluIG1vc3QgZm9ybXMgb2YgcG9rZXIsIHRoZSBtYWpvcml0eSBvZiBhIGdvb2QgcGxheWVyJ3MgcHJvZml0IGluIE9tYWhhIGNvbWVzIGZyb20gdGhlIG1pc3Rha2VzIG9mIG9wcG9uZW50cy4gCkdlbmVyYWxseSB0aGUgYnJhZ2dhcnRzIGFyZSB0aGUgb25lcyBjb21wdXRlciBub24gc2F2dnkgcGVvcGxlIHRoaW5rIGFyZSBncmVhdCwgd2hlbiB0aGV5IGFyZW4gaGFsZiBhcyBnb29kIGFzIHRoZXkgY2xhaW0uIENvbXB1dGVyIHNhdnZ5IHBlb3BsZSB3aWxsIGdlbmVyYWxseSByZWNvZ25pemUgdGhhdCBjb21wdXRlciBrbm93bGVkZ2UgaXNuIGEgMCAxMDAgY29udGludXVtLCBpdCBtb3JlIGxpa2UgYSB0cmVlIGFuZCB3aGVyZSB0aGUgdHJ1bmsgaXMgYSBiYXNlIGxldmVsIG9mIGtub3dsZWRnZSBjYWxsZWQgY29tcHV0ZXIgbGl0ZXJhY3ksIGFuZCBtb3JlIGFkdmFuY2VkIGtub3dsZWRnZSBicmFjaGVzIG9mZiBpbiBhIG51bWJlciBvZiBkaWZmZXJlbnQgZGlyZWN0aW9ucyBhbmQgbm8gb25lIGlzIGNvbXBldGVudCBpbiBhbGwgb2YgdGhlbS4uIApNYWlzIGR1cmFudCBsZSBkZXJuaWVyIHRvdXIgZGUgY2V0dGUgbmV1dHJhbGlzYXRpb24sIGplIG1lIHN1aXMgZGl0IHF1ZSBtIHMgcGx1cyByYXBpZGUgcXVlIG1vaSwgaWwgZmFsbGFpdCBxdWUgamUgbHVpIG1ldHRlIHVuZSBwcmVzc2lvbiBtYXhpbWFsZS4gCkhpLiAKSWYgb25lIG9mIHRoZSBiYW5rZXIncyBoYW5kcyBpcyBpZGVudGljYWwgdG8gdGhlIHBsYXllcidzIGhhbmQsIHRoZSBwbGF5ZXIgaXMgY29uc2lkZXJlZCB0byBoYXZlIGEgImNvcHkiIGhhbmQgYW5kIHRoZSBiYW5rZXIgd2lucyB0aGF0IGhhbmQuIApUbyBjbGFpbSBhIHNpZ24gdXAgYm9udXMgZm9yIGV4YW1wbGUsIHlvdSB3aWxsIG5lZWQgdG8gbWFrZSBhIGRlcG9zaXQuIFRoZXJlZm9yZSwgbWFrZSBzdXJlIHRoYW4geW91ciBwcmVmZXJyZWQgZGVwb3NpdCBvcHRpb24gaXMgYXZhaWxhYmxlIGJlZm9yZSBjbGFpbWluZyBhIGJvbnVzIG9mZmVyLiBUaGlzIHdheSB5b3Ugd2lsbCBnZXQgaW5zdGFudCBhbmQgaGFzc2xlIGZyZWUgZGVwb3NpdHMgYW5kIGJlIGFibGUgdG8gY2FzaCBvdXQgeW91ciB3aW5uaW5ncyBpbiBubyB0aW1lLgpTaGUgYSBtdWNoIG1vcmUgb3JnYW5pemVkIHBsYW5uaW5nIG9yaWVudGVkIHBlcnNvbmFsaXR5LiAKTXkgc2tpbiBpcyB2ZXJ5IHNlbnNpdGl2ZSwgSSBjYW4gdXNlIGEgbG90IG9mIGZyYWdyYW5jZWQgcHJvZHVjdHMgYXMgSSBnZXQgaGl2ZXMuIApBbHNvIFZpZXdlZCBUeXBlcyBvZiBUaGVyYXB5IEpvYnMgVGhlIEF2ZXJhZ2UgWWVhcmx5IEluY29tZSBvZiBhIFJlc3BpcmF0b3J5IFRoZXJhcGlzdCBUaGUgQXZlcmFnZSBTYWxhcnkgb2YgYSBNYXNzZXVzZSBUaGUgU2FsYXJpZXMgb2YgUmFkaW9sb2d5IFRoZXJhcGlzdHMgaW4gSG9zcGl0YWxzIFJpc2tzIG9mIEJlaW5nIGEgUmFkaWF0aW9uIFRoZXJhcGlzdCBTYWxhcnkgb2YgQ2hpcm9wcmFjdGljIFBoeXNpb3RoZXJhcHkgQ2hpcm9wcmFjdG9yIFZzLiBPcnRob3BlZGlzdApJZiBzaGUgYWN0ZWQgbGlrZSBzaGUga25ldyB0aGUgdGVybSBhbmQgdGhlbiB0aGUgY3JlZXAgYXNrZWQgaGVyIHRoZW4geW91IG1pZ2h0IGhhdmUgYW4gYXJndW1lbnQsIGJ1dCB0aGF0IG5vdCB3aGF0IGhhcHBlbmVkIGFuZCB5b3VyIHNwZWN1bGF0aW9uIGlzbiB0cnV0aCB3aGVuIHRoZSBldmlkZW5jZSBzdWdnZXN0cyBhbnl0aGluZyBidXQuLiAKUG9rZXIsIGluIGEgbnV0c2hlbGwsIGRhdGVzIGJhY2sgY2VudHVyaWVzIGFnbyBhbmQgaXMgcmVmZXJyZWQgdG8gYXMgJ3Z5aW5nIGdhbWUnIHdoZXJlIHBsYXllcnMgYXR0ZW1wdCB0byBvdXRwYWNlIG9uZSBhbm90aGVyIGJ5IGNvbWluZyBvdXQgd2l0aCB0aGUgYmVzdCBwb3NzaWJsZSBjYXJkIGNvbWJpbmF0aW9ucy4gVGhlIGhpc3RvcmljYWwgYmFja2dyb3VuZCBvZiB0aGUgZ2FtZSwgYXMgdGhlIGV4cGVydHMgaGF2ZSBzYWlkLCBkZXNjZW5kZWQgZnJvbSAncG9xdWUsJyBhIEZyZW5jaCB3b3JkLCB3aGljaCBpbiB0dXJuIGNhbWUgZnJvbSBhIEdlcm1hbiB3b3JkICdwb2NoZW4nIG1lYW5pbmcgJ3RvIGtub2NrLicgQnV0IHRoZSBtZWNoYW5pY3Mgb2YgcG9rZXIsIGFzIHNjaG9sYXJzIGhhdmUgc2FpZCwgaXMgdmVyeSBzaW1pbGFyIHRvIHRoZSBPbGQgUGVyc2lhbiBnYW1lICdhcyBuYXMuJyBJdCBpcyBzYWlkIHRoYXQgUGVyc2lhbiBzYWlsb3JzIHRhdWdodCB0aGUgZ2FtZSB0byBGcmVuY2ggc2V0dGxlcnMgaW4gdGhlIFVTIGFuZCBOZXcgT3JsZWFucy4gCkdyZXcgdXAgc25vd2JvYXJkaW5nIGluIG15IGplYW5zIGFuZCBJIGxpa2VkIGl0LCBidXQgaWYgSSBmZWxsIG15IGRheSB3b3VsZCBiZSBjdXQgc2hvcnQuIEl0IHdhcyBhIGNsYXNzaWMgY2FzZSBvZiBmYXNoaW9uIG92ZXIgZnVuY3Rpb24sIGhlIHNhaWQuIExldmkgYW5kIHNub3dib2FyZCBicmFuZCA2ODYgY3JlYXRlZCBhIGRlbmltIHNub3dib2FyZCBwYW50LCBJIHdhcyBleGNpdGVkLiBUaGF0IGV4Y2l0ZW1lbnQgcXVpY2tseSB0dXJuZWQgdG8gZGlzYXBwb2ludG1lbnQuIHdlcmUgYmlnLCBzdGlmZiB3aXRoIG5vIGxpbmVycyBhbmQgcG9ja2V0cyBpbiB3ZWlyZCBwbGFjZXMuIEhlIHdlbnQgb25saW5lLCBsZWFybmVkIGhvdyB0byBwdXQgdG9nZXRoZXIgYSBidXNpbmVzcyBwbGFuIGFuZCBjcmVhdGVkIGEgc3VydmV5IHRvIGdldCBhIHNlbnNlIG9mIGhpcyB0YXJnZXQgbWFya2V0LiBBZnRlciBzcGVuZGluZyBhIGZldyB3ZWVrZW5kcyBzdGFuZGluZyBpbiBsaWZ0IGxpbmVzIHBvbGxpbmcgMTAwIHBlb3BsZSBoZSB0aG91Z2h0IG1pZ2h0IGJlIGludGVyZXN0ZWQgaW4gaGlzIHByb2R1Y3QsIGhlIGRlY2lkZWQgdG8gbW92ZSBhaGVhZC4gd2hvIGRpcmVjdGVkIGhpbSB0byBtYW51ZmFjdHVyZXJzIGl0IGhhZCBhbHJlYWR5IHF1YWxpZmllZC4gTXIuCkNyYWlnIEpvaG5zdG9uLiBBZGRpdGlvbmFsIFVIIGludmVzdGlnYXRvcnMgd29ya2luZyBvbiB0aGUgcHJvamVjdCBpbmNsdWRlIERyLiAKVGhpcyBhdHRhY2sgb24gYSBkZXNvbGF0ZSBwYXJ0IG9mIEFmZ2hhbmlzdGFuLCBvbiB3aGF0IHdhcyB0ZXJtZWQgYXMgSXNpcyBoZWFkcXVhcnRlcnMsIGNhbWUgb24gQXByaWwgMTMgYSBkYXkgYmVmb3JlIDExIG5hdGlvbnMgbmVpZ2hib3VyaW5nIEFmZ2hhbmlzdGFuLCBjb250aWd1b3VzbHkgb3IgcmVtb3RlbHksIHdlcmUgaW52aXRlZCBieSBSdXNzaWEgdG8gZGlzY3VzcyBBZmdoYW5pc3RhbiBmdXR1cmUgYW5kIHByb2ZmZXIgYSBzb2x1dGlvbiB0aGF0IGxlYWRzIHRvd2FyZHMgdGhlIHBhdGggdG8gcGVhY2UuIFRoZSBVUyB3YXMgaW52aXRlZCBidXQga2VwdCBvdXQgcHJvYmFibHkgdW5kZXIgdGhlIHN0cmVzcyBvZiB3aGF0ZXZlciBlbHNlIHdhcyBoYXBwZW5pbmcgYmV0d2VlbiB0aGVtIGFuZCBSdXNzaWEgYXQgb3RoZXIgcGxhY2VzLiBJbnN0ZWFkLCB0aGV5IGpvaW5lZCB0aGUgcHJvY2VlZGluZ3Mgd2l0aCB0aGUgYmlnZ2VzdCBiYW5nIG9mIHRoZSBjZW50dXJ5Li4gClNoZSB3YW50ZWQgdGhlIGRvbGxhciBhbW91bnQgZm9yIHRoZSBmcmVlIGl0ZW0gcmVmdW5kZWQuIEkgdG9sZCBoZXIgbm8gdGhhdCB0aGUgYmVzdCBpIHdvdWxkIGRvIGlzIHJlcGxhY2UgaXQgd2l0aCBuZXcgY2hpY2tlbi4gU2hlIHN0YXJ0ZWQgY3J5aW5nIGFuZCBzY3JlYW1pbmcgRE9OIFdBTlQgWU9VUiBDSElDS0VOIEkgV0FOVCBNWSBNT05FWSBBZnRlciByZXBlYXRpbmcgbXVsdGlwbGUgdGltZXMgdGhhdCBzaGUgbmV2ZXIgcGFpZCBmb3IgaXQgaSBldmVudHVhbGx5IGdhdmUgdXAgYW5kIGNhbGxlZCB0aGUgc3RvcmUgbWFuYWdlciBhbmQgbGV0IHRoZW0gZGVhbCB3aXRoIGhlci4gClNhdyAzQkJzIHNwbGFzaGVkIGludG8gdGhlIHBvdCBvbiBteSBzZWNvbmQgaGFuZC4gTWFuYWdlZCB0byBydW4gd2VsbCBhbmQgZ290IG15IDEwIEV1cm8gYnV5IGluIHVwIHRvIG5lYXJseSAzMCBFdXJvcy4gSSBjYW4gY29uZmlkZW50bHkgc2F5IEkgYW0gbm93IGEgd2lubmluZyBwbGF5ZXIuIC9zTG9va3MgZ29vZC4gTXkgYmlnZ2VzdCBjb21wbGFpbnQgc28gZmFyIGlzIHRoZSBpbmFiaWxpdHkgdG8gcmVzaXplIHRoZSB0YWJsZXMuIApZb3UgZG9uIG5lZWQgdG8gc3R1ZHkgb3BlbmluZ3MgdG8gcGxheSB3ZWxsLCBidXQgaXQgZ2V0cyBoYXJkZXIgYW5kIGhhcmRlciB0byB3aW4gaW4gY29tcGV0aXRpdmUgY2hlc3MgaWYgeW91IGRvbiBPcGVuaW5ncyBhcmUgbGlrZS4gU29uZ3MgdG8gYSBtdXNpY2lhbi4gSWYgeW91IGEgdmVyeSBnb29kIG11c2ljaWFuLCB5b3UgY2FuIHBpY2sgdXAgYW4gaW5zdHJ1bWVudCBhbmQgcHJvYmFibHkgaW1wcm92aXNlIGEgd2hvbGUgc29uZyBmcm9tIHN0YXJ0IHRvIGZpbmlzaCB3aXRoIHZlcnkgbGl0dGxlIGZvcmV0aG91Z2h0LiAKSSBMT1ZFIHlvdXIgZXllc2hhZG93ISBJdCBzbyB1bmlxdWUgYW5kIG1ha2VzIHlvdXIgZXllcyBsb29rIHJlYWxseSBpbnRlcmVzdGluZyAoeW91IGhhdmUgcmVhbGx5IGdyZWF0IGV5ZXMpLiAKSSBvbmNlIHdvbiAxMCBwaW50cyBhbmQgc2hvcnRseSBhZnRlcndhcmRzIHdhcyBmaW5lZCBhIGZpdmVyIGZvciBiZWluZyBkcnVuayBhbmQgZGlzb3JkZXJseS4gCjQuIApNYWtlIHB1bGxlZCBwb3JrIHdpdGggaGFsZiBvZiBpdCBhbmQgaXQgZ28gd2l0aCBhbnl0aGluZzsgdmFyeSB5b3VyIHNhdWNlcywgcHV0IGl0IG9uIHBvdGF0b2VzIG9yIHJpY2Ugb3IgaW4gYnJlYWQgZm9yIGEgc2FtbWllLiAKVmltaWRpYSAgNDQgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkp1bXBlZCAzNyUuIApXaGVyZSBpbmdyZWRpZW50cyBib3RoIGZhbWlsaWFyIGFuZCBleG90aWMgY29tbWluZ2xlIHRvIGNyZWF0ZSB0YXN0ZSBzZW5zYXRpb25zIGxpa2UgQ2hpbGVhbiBTZWEgQmFzcyBzdGVhbWVkIHdpdGggYSB0cmluaXR5IG9mIHNveSwgc2NhbGxpb25zIGFuZCBnaW5nZXIuIApHaWxiZXJ0c2VuLCBwaHlzaWNpYW5zOyBNcnMuIApQb2xsaW5nIHN1Z2dlc3QgdGhlIExpYmVyYWxzIGFyZSB0cmFja2luZyBmb3IgYSBuYXJyb3cgbWFqb3JpdHksIHdpbm5pbmcgMTMgb2YgMjUgbG93ZXIgaG91c2Ugc2VhdHMuIApXaGF0IHNoZSBkb25lIGlzIGNvbnZpbmNlZCB5b3UgdG8gZ2l2ZSB5b3VyIGdmIG9yIHdpZmUgYSBiZXR0ZXIgb3JnYXNtLCB3aXRoIG5vIHJldHVybi4gCkl0IG5vdCBhIGdvb2QgbG9vayBmb3IgYSByZXN0YXVyYW50IHRob3VnaCwgc2luY2UgeW91IHdpbGwgaW5ldml0YWJseSBoYXZlIGZhbHNlIHBvc2l0aXZlcy4uIApFbXBhdGh5IGlzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgcXVhbGl0aWVzIG9mIGEgZ29vZCBtYXNzYWdlIHRoZXJhcGlzdC4gCkluIFBha2lzdGFuIHdlIHNlZSBmYW1pbHkgZGljdGF0b3JzaGlwcyBpbiBvbmUgd2F5IG9yIGFub3RoZXIuIFRoZXNlIGRpY3RhdG9yc2hpcHMgY29udGludWUgZ2VuZXJhdGlvbiBhZnRlciBnZW5lcmF0aW9uLCB3aXRoIG5vIHJlZ2FyZCBmb3IgdGhlIHN3ZWF0aW5nIGFuZCBzdWZmZXJpbmcgcHVibGljLiAKTm93IGhpdCB0aGUgZmFzdCBmb3J3YXJkIGJ1dHRvbi4gVGhpcyBzZWFzb24gdGhlIEZsYW1lcyB0d28gbGVhZGluZyBzY29yZXJzIGFyZSBHYXVkcmVhdSwgd2hvIHNpdHMgZm91cnRoIGluIHRoZSBsZWFndWUsIGFuZCBNb25haGFuLCB3aG8gb24gcGFjZSBmb3IgNDAgZ29hbHMuIAogIElmIHRoZSBmaXJzdCBkYXkgb2YgdGhlIG5ldyB5ZWFyIGlzIGFueSBpbmRpY2F0aW9uLCAyMDExIHByb21pc2VzIGdyZWF0IGZvcnR1bmUgZm9yIEFuZHkgR3JheS4uIApJIHJlbWluZGVkIHRoZW0gSSBnb3QgYSByYXRoZXIgb2JzY2VuZSBwdXJjaGFzZSBoaXN0b3J5LCBJIG1ha2UgYSBib2F0IGxvYWQgb2YgbW9uZXkgaGVyZSBpbiBqYXBhbiwgYW5kIEkgYWluIGdvaW4gYW55d2hlcmUuIE9rYXksIHNvIHRoZXkgZnVkZ2UgdGhlIHZpc2EgbnVtYmVyLiAKVGhleSBkb24ndC4gCkhlIHdhcyBhIHBybyB3aG8ga25ldyBoaXMgbGltaXRzLiAKQnV0IGl0IGp1c3Qgc28gaGFwcGVucyB0aGF0IENocmlzdHkgYW5kIEpha2UgbW90aGVycyBhcmUgYmVzdCBmcmllbmRzLiAKTGVzIGRpZmZyZW50ZXMgb3JpZW50YXRpb25zIGR1IHN1amV0IGV0IGxhIGp1c3RpZmljYXRpb24gZHUgY2hvaXggb3ByCkJlIHN1cmUgYW5kIGdldCB5b3Vyc2VsZiBwYW1wZXJlZC4gU3BlbmQgYSBsdXh1cmlvdXMgZGF5IGF0IHRoZSBzcGEsIGdldCBhIGZhY2lhbCB0cmVhdG1lbnQsIHRyZWF0IHlvdXJzZWxmIHRvIGEgYm9keSBtYXNzYWdlIG9yIHNwZW5kIHRoZSBkYXkgYXQgdGhlIHNhbG9uIGdldHRpbmcgYWxsIHByZXR0eS4gSW5kdWxnZSB5b3Vyc2VsZiEKQ291cGxlcyBoZWxkIGhhbmRzIGFzIHRoZXkgcmFuIHRocm91Z2ggdGhlIGRpcnQgbG90LiBGYWNlcyB3ZXJlIGV0Y2hlZCB3aXRoIHNob2NrIGFuZCBjb25mdXNpb24sIGFuZCBwZW9wbGUgd2VwdCBhbmQgc2NyZWFtZWQuIFNvbWUgd2VyZSBibG9vZGllZCwgYW5kIHNvbWUgd2VyZSBjYXJyaWVkIG91dCBieSBmZWxsb3cgY29uY2VydGdvZXJzLiAKUmF0aGVyIGl0IGlzIGEgcHJvY2VzcyB0aGF0IHRha2VzIHRpbWUuIApUamEsIG1laHIgZ2lidHMgbmljaHQgenUgc2FnZW4sIGlzdCBhdWNoIGJsbyAnbmUgS2xlaW5zdGFkdC4xMCBLb21pdGVlbGV1dGUgYXVzIERldXRzY2hsYW5kLCBNYWx0YSwgUnVzc2xhbmQsIERvbWluaWNhLCBOb3Jka29yZWEsIEF1c3RyYWxpZW4sIEtlbmlhLCBBbGdlcmllbiwgQnJhc2lsaWVuIHVuZCBVU0EgbWVsZGV0ZW4gc2ljaCBpbiBlaW5lciBUViBTb25kZXJzZW5kdW5nIHp1IFdvcnQgdW5kIHZlcmdhYmVuIGlocmUgMywgNSB1bmQgNyBQdW5rdGUuIApUaGlzIGlzIHdoeSBJIGRvbiBnbyBpbiBvbiB0aGlzICJJbiBHZWRvIFdlIFRydXN0IiBidWxsc2hpdC4gCiJSZWxpZ2lvdXMiIGVudGl0aWVzLCBwYXJ0aWN1bGFybHkgdGhlIGZ1bmRhbWVudGFsbHkgZXh0cmVtZSBzdWNoIGFzIElTSVMgY2FuIHJlYWxseSBiZSBjYXRlZ29yaXplZCBhcyBub3RoaW5nIG1vcmUgdGhhbiBiYXJiYXJpYyBoYXRyZWQuCkFoLCB0aGUgQW1lcmljYW4gbWVkaWNhbCBpbmR1c3RyaWFsIGNvbXBsZXguIFNvIGdvb2QgYXQgbWVldGluZyBvdXIgZXZlcnkgbmVlZCwganVzdCBhcyBzb29uIGFzIGl0IGludmVudHMgdGhvc2UgbmVlZHMsIGNyZWF0ZXMgYSBwaWxsIHRvIHJlc3BvbmQgdG8gdGhlIG5lZWQsIGFuZCB0aGVuIG1hcmtldHMgdGhhdCBuZWVkIHRvIGNvbnN1bWVycyBhbmQgcGh5c2ljaWFucy4gClRoZSB0aXJhZGVzIGFuZCB0aGUgcmFudHMgbGl2ZSBwb2tlciBjcmVhdGVzIGlzIGVub3VnaCB0byBlbnRpY2UgcGVvcGxlIHRvIHBsYXkuLiAKV2UgZG9uIHRyeSB0byBjZW5zb3IgdGhlbSBvciBzaHV0IHRoZW0gdXAgb3IgYmFuIHRoZWlyIGJvb2tzIG9yIGlkZWFzLiAKTW9udHJlYWwgaG9tZSBzYWxlcyBvdmVyICQxIG1pbGxpb24gYW5kIG1vcmUgaW5jcmVhc2VkIDIwIHBlciBjZW50IHllYXIgb3ZlciB5ZWFyLCB3aGlsZSBob21lcyBzb2xkIGZvciBtb3JlIHRoYW4gJDQgbWlsbGlvbiBmZWxsIGVpZ2h0IHBlciBjZW50LCB0aGUgcmVwb3J0IGZvdW5kLi4gCkFuamVsaWNhIGxhdGVyIGRlc2NyaWJlZCBoZXIgZmF0aGVyIGFzIGEgdmVyeSBoYW5kc29tZSBtYW4gd2l0aCBhIGJyb2tlbiBub3NlIGZyb20gYm94aW5nLCBhbmQgYSBkcmFtYXRpYyBhaXIgYWJvdXQgaGltLiBJIGRvbiByZW1lbWJlciBldmVyIHNlZWluZyBoaW0gcnVuOyByYXRoZXIgaGUgYW1ibGVkLCBvciB0b29rIGZhc3Qgc3RyaWRlcy4gd2VlcGluZyBzYW11cmFpV2hlbiBIdXN0b24gbW92ZWQgUmlja2ksIGFuZCBoaXMgdHdvIHlvdW5nIGNoaWxkcmVuIGludG8gU3QgQ2xlcmFucywgYSBHZW9yZ2lhbiBjbGFzc2ljIGhvbWUgb24gYSAxMTAgYWNyZSBlc3RhdGUgYXQgQ3JhdWdod2VsbCwgQ28gR2Fsd2F5LCBoZSBjb3VsZCBsaXZlIHRoZSBsaWZlIG9mIGEgY291bnRyeSBzcXVpcmUgdGhhdCBoZSBoYWQgcHJvYmFibHkgaGFua2VyZWQgYWZ0ZXIuIEFzIHdlbGwgYXMgZ2l2aW5nIGhpcyBjaGlsZHJlbiBhIHdvbmRlcmZ1bCBvcHBvcnR1bml0eSB0byBlbmpveSBhIGNhcmUgZnJlZSBjaGlsZGhvb2QsIGhlIGFjdGVkIGFzIGEgaG9zdCB0byBtYW55IG9mIHRoZSBIb2xseXdvb2QgZ3JlYXRzIHdobyBjYWxsZWQgcmVndWxhcmx5LiBUaGV5IGRlbGlnaHRlZCBpbiBIdXN0b24gY29tcGFueS4gVGhleSBoYWQgYSBjaG9pY2Ugb2YgaG9yc2VzIGZyb20gYSBmaW5lIHN0YWJsZSwgZW5qb3llZCBmb3JtYWwgY2FuZGxlbGl0IGRpbm5lcnMgKHVzdWFsbHkgYSBMaW1lcmljayBoYW0gd2FzIGluIGV2aWRlbmNlICksIGFuZCB0aGV5IHdlbnQgb24gd2lsZCBjYXIgam91cm5leXMgaW50byBDb25uZW1hcmEgcmV0dXJuaW5nIHRvIFBhZGR5IEJ1cmtlIGluIENsYXJlbmJyaWRnZSwgZm9yIG95c3RlcnMsIEd1aW5uZXNzIGFuZCBzaW5nc29uZ3MuClppZWwgZGVyIFZlcmFuc3RhbHRlciBkZXMgRmlsbWZlc3RlcyBpc3QgZXMsIGFrdHVlbGxlIEZpbG1lIHp1IHplaWdlbiwgZGllIGVyc3RtYWxzIGF1ZiBMYSBQYWxtYSB6dSBzZWhlbiBzZWluIHdlcmRlbi4gCk92ZXJ2aWV3IGZvciBuYWlsejEwMDAKRm9vdGFnZSBhbHNvIHNob3dzIHdhc3RlYmFza2V0cyBwYWNrZWQgd2l0aCB1c2VkIGNvbmRvbXMgKEkgZGlkIG5vdCB0b3VjaCB0aGVtLCBqdXN0IG9wZW5pbmcgdGhlbSBhbmQgeW91IGNvdWxkIHNlZSBpdCkuIEkgd2FzIHRlbXB0ZWQgdG8gY29sbGVjdCBzYW1wbGVzIGJ1dCBJIHRob3VnaHQgZG9pbmcgdGhhdCB3b3VsZCBiZSBnb2luZyB0b28gZmFyLgpIb3BlZnVsbHkgaW1wcm92ZW1lbnRzIGluIEROQSB0ZWNobm9sb2d5IHdpbGwgc29sdmUgdGhpcyBzb29uLi4gCkkgZnJvbSBhIHRvd24gZnVsbCBvZiB0aGlzIHNoaXQgYW5kIHRoZXJlIG5vIGhvcGUgZm9yIHNvbWUgb2YgdGhlc2UgcGVvcGxlLiAKU2ltcGxlIGFzIHRoYXQuIApBbSBJIGZ1Y2tpbmcgY3J5aW5nIEkgY2FuIHBsYXkgdGhhdCBkZWNrIGFueW1vcmU/IEZ1Y2sgbm8uIEkgaGFkIG15IGZ1bi4gQW5kIGxpa2UgSSBzYWlkLCBTaHVkZGVyIGlzIHN0aWxsIHZlcnkgcGxheWFibGUuIApPZiBjb3Vyc2UgaXQgZG9lc24gbWFrZSBpdCBhdXRvbWF0aWNhbGx5IGJldHRlcjogaXQgbWFrZXMgaXQgZGlmZmVyZW50LiBNeSBpc3N1ZSB3aXRoIHRoZXNlIGlzZWthaSBzaG93cyBpc24gbmVjZXNzYXJpbHkgdGhhdCB0aGV5IGFyZSBiYWQgYnV0IHJhdGhlciB0aGF0IHRoZXkgYXJlIGJhc2ljYWxseSBhbGwgdGhlIHNhbWUgYW5kIGhpc3RvcmljYWxseSBzaG93cyBmIHRoZSBzdWJnZW5yZSBhaW1lZCBhdCB3b21lbiBoYXZlIGJlZW4gdmVyeSBkaWZmZXJlbnQuIEhhdmluZyBzYWlkIHRoYXQgdGhvdWdoIEkgY2FuIGFjdHVhbGx5IHRoaW5rIG9mIGFueSBpc2Vha2kgYWltZWQgYXQgd29tZW4gdGhhdCB3YXMgc3RyYWlnaHQgdXAgYmFkLCB0aG91Z2ggb2YgY291cnNlIHRoZXJlIGFyZSBmYXIgZmV3ZXIgb2YgdGhlbS4gCkFuZCBhY2NvcmRpbmcgdG8gdGhlIEh1ZmZpbmd0b24gUG9zdCwgT2JhbWEgYWN0dWFsbHkgYmVsaWV2ZXMgaGlzICJiYXNlIiAobWVhbmluZyBQcm9ncmVzc2l2ZXMpIHdpbGwgZm9yZ2l2ZSB0aGUgd2FycyBhbmQgdGhlIGJhbmtlciBiYWlsb3V0cyBpZiBoZSBqdXN0IGdldHMgaGVhbHRoIGNhcmUgcmVmb3JtIHRocm91Z2guIEJ1dCBoZWFsdGggY2FyZSByZWZvcm0gdGhhdCBzaWNrICBhbmQgbm90IGluIHRoZSBleGNlbGxlbnQgc2Vuc2Ugb2YgdGhlIHdvcmQgIGJ1dCB0aGUgTWljaGFlbCBNb29yZSAiU2lja28iIHNlbnNlIG9mIHRoZSB3b3JkICBpcyBub3QgZ29pbmcgdG8gbWFrZSBhbnlvbmUgaGFwcHkuCkwnaG9tbWUgY29udGludWUgIGRvbm5lciBsZSAgbGEgLCBvbiBhIGludGdyIHNlcyBjcml0cmVzLCBldCBpbCBlc3QgdmN1IGNvbW1lIHVuZSBlbnRpdCBkZSBqdWdlbWVudCwgY2Vuc2UgcG91dm9pciB0cmFuY2hlciBlbnRyZSBjZSBxdWkgc2VyYWl0IGZtaW5pbiBvdSBwYXMuIAoiMjAvMjAiIGluY2x1ZGVzIGludGVydmlld3Mgd2l0aCBLaW0gQm91cmdlb2lzLCBLZWxsZXkncyBzaXN0ZXI7IFN0ZXViZW4gQ291bnR5IERlcHV0eSBEZWFuIFN3YW4sIHRoZSBmaXJzdCBvZmZpY2VyIG9uIHRoZSBzY2VuZSBvZiB0aGUgY3JpbWU7IEdyZWcgYW5kIEx1Y2t5IE1pbGxlciwgdGhlIGNvdXBsZSB3aG8gaG9zdGVkIHRoZSBwb2tlciBnYW1lIHRoZSBuaWdodCBvZiB0aGUgY3JpbWU7IENoZW11bmcgQ291bnR5IERpc3RyaWN0IEF0dG9ybmV5IFdlZWRlbiBXZXRtb3JlLCB0aGUgc3BlY2lhbCBwcm9zZWN1dG9yIG9uIHRoZSBjYXNlOyBTdGV1YmVuIENvdW50eSBTaGVyaWZmIEppbSBBbGxhcmQ7IEppbSBWYXVnaG4gYW5kIEJyaWFuIEtvemVta28sIE5ldyBZb3JrIFN0YXRlIFBvbGljZSBpbnZlc3RpZ2F0b3JzOyBBbmRyZWEgU3BpcmF3ayBhbmQgQWJiZSBUaXB0b24sIEtlbGxleSdzIHR3byBiZXN0IGZyaWVuZHM7IGFuZCBNaWtlIFN0cm9iZWwsIGFubm91bmNlciBmb3IgdGhlIEVsbWlyYSBKYWNrYWxzLCB0aGUgbWlub3IgbGVhZ3VlIGhvY2tleSB0ZWFtIG9uIHdoaWNoIFRob21hcyB1c2VkIHRvIHBsYXkuLiAKWW91IHNob3VsZCBub3QgZXhwZWN0IG11Y2guIFRoZXkgYmFuZyBwcm9iYWJseSBkb3plbnMgb2YgY3VzdG9tZXJzIGEgbmlnaHQsIHNvIHRoZXkgYXJlIGluIGEgaHVycnkgdG8gZ2V0IHlvdSBmaW5pc2hlZCBhbmQgaGF2ZSBubyBtb3RpdmF0aW9uIHRvIHNhdGlzZnkgdGhlIGN1c3RvbWVyLiAKUGxheWVycyBqdXN0IGhhdmUgdG8gbWFrZSB0aGUgcmlnaHQgZGVjaXNpb25zIGF0IHRoZSByaWdodCB0aW1lLiAKVGhlIHNvdW5kcywgb2ggbXkgZnVjayB0aGUgc291bmRzLCB0aGV5IGJlYXV0aWZ1bC4gClRoZSB0b3AgZmlybXMgcmVhbGx5IGRvbiBjYXJlIGFzIGxvbmcgYXMgeW91IGNydXNoIGNhc2UgaW50ZXJ2aWV3cyBhcmUgcGVyc29uYWJsZSwgYW5kIGhhdmUgYSBoaWdoIGdwYS4gCldoYXQgeW91IG5lZWQgdG8ga25vdyBpcyB3aGF0IGtpbmQgb2YgcGxheWVyIHlvdSBhcmUgYW5kIHdoYXQgcHVycG9zZSBkbyB5b3UgaGF2ZSBvZiBwbGF5aW5nLi4gCkh1bWFuIG5hdHVyZSBsZW5kcyBpdHNlbGYgdG8gcmVmbGV4aXZlLCBlbW90aW9uYWwgcmVzcG9uc2VzOyBlbm91Z2ggcGVvcGxlIHNlbGYgYWRtaW5pc3RlcmluZyBsaXRtdXMgdGVzdGluZyBrZWVwcyB0aGUgcmVzdCBvZiB1cyBpbiBjaGVjayBmb3IgdGhlIG1vc3QgcGFydC4gClRoZSBhbGxpZXMgY2FuIGp1c3Qga2VlcCBzcGFtbWluZyB1bml0cyBsaWtlIHRoYXQgYmVjYXVzZSB0aGV5IHdpbGwgbGl0ZXJhbGx5IG5ldmVyIHJ1biBvdXQgb2YgbWFucG93ZXIuIApCdXQgU2F1bmRlcnMsIHdobyBzYWlkIGhlIGhhZCBzcG9rZW4gd2l0aCB0aGUgb2ZmaWNlciwgc2FpZCB0aGUgaGFuZGxpbmcgb2YgdGhlIHNpdHVhdGlvbiB3YXMgIm5vdGhpbmcgc2hvcnQgb2YgcmVtYXJrYWJsZS4iClRISU5HUyBVUyBBUk1ZIENBUFRBSU4gQU5EUkVXIFNodWxtYW4gZmluZHMgdGhlIHRyaWNraWVzdCBhYm91dCBiZWluZyBhIEpld2lzaCBjaGFwbGFpbiBkZXBsb3llZCB0byBCYWdoZGFkOiBwYXNzaW5nIHRoZSBwaHlzaWNhbCBmaXRuZXNzIHRlc3QsIGZpbmRpbmcgbmV3IGNvbmdyZWdhbnRzICAgIlNvbWV0aW1lcyBpdCdzIENvaGVuIHdobydzIG5vdCBKZXdpc2ggYW5kIEZsYW5uaWdhbiB3aG8gaXMsIiBoZSBzYXlzICAgYW5kIHN0cmljdGx5IG9ic2VydmluZyB0aGUgU2FiYmF0aC4gCk1hbnkgQ2FuYWRpYW5zIHF1aWNrbHkgbGlua2VkIHRoZSBseXJpY3MgdG8gdGhlIDE2IHBlb3BsZSB3aG8gZGllZCBhcyBhIHJlc3VsdCBvZiB0aGUgY3Jhc2ggYW5kIHRoZSAxMyBvdGhlcnMgd2hvIHdlcmUgaW5qdXJlZCwgc29tZSBjcml0aWNhbGx5LgpIZSB3YXMgYSBtZW1iZXIgb2YgdGhlIEd5cm8gQ2x1YiwgdGhlIFByb2J1cyBDbHViIGFuZCB0aGUgUmV0aXJlZCBCdXNpbmVzcyBhbmQgUHJvZmVzc2lvbmFsIE1lbidzIENsdWIgYW5kIHdhcyBhbiBhbm51YWwgZG9ub3IgdG8gZG96ZW5zIG9mIGNoYXJpdGllcy4gCkV4IGlzbiBlbnRpdGxlZCB0byB0aGF0IGVxdWl0eSwgbm9yIGlzIGhlIGVudGl0bGVkIHRvIGFueXRoaW5nIHNpbmNlIGhlIHN0b3BwZWQgY29udHJpYnV0aW5nIHRvIHRoZSBwYXltZW50cyBpbiBPY3RvYmVyLi4gCkxlcyBkaWZmcmVudGVzIG9yaWVudGF0aW9ucyBkdSBzdWpldCBldCBsYSBqdXN0aWZpY2F0aW9uIGR1IGNob2l4IG9wcgpMQSBWT0NFIERFTCBESU8gQU1PUkUKSW51eWFzaGEgS2Fnb21lClhZIGlzIGEgdHdvIGRpZ2l0IG51bWJlciB3aGljaCBjYW4gYmUgZGVjcnlwdGVkIGFuZCB0aGVyZWZvcmUgaXQgbm90IHJlYWxseSBzb2x2ZWQ7IGFsc28gd2UgZG9uIGtub3cgaWYgYSBzdW1tZXIgZGVjayBpcyBnb2luZyB0byBiZSBhIHJlYWwgdGhpbmcuIFVzaW5nIHRoZSBUb3duIFJlY29yZCBjeXBoZXIgYXMgc2hvd24gaW4gdGhlIGltZ3VyIHBvc3Qgb24gdGhlIGNvbnRlbnRzIG9mIEVudmVsb3BlIEEgZ2VuZXJhdGVzIGEgcGlsZSBvZiBnaWJiZXJpc2ggYW5kIEkgZG9uIGtub3cgd2hlcmUgdG8gZ28gZnJvbSB0aGVyZS4uIApJIGRvbiBzZWUgUlAgYXMgZm9yY2luZyBwZW9wbGUgaW50byByb2xlcyB0aGV5IGRvbiB3YW50LCBJIHNlZSBpdCBhcyBleHBsYWluaW5nIGJpb2xvZ2ljYWwgcmVhbGl0aWVzIHRoYXQgYXJlIHRydWUgZm9yIG1vc3QgcGVvcGxlLiBUaGF0IGRvZXMgbm90IG1ha2UgaXQgdHJ1ZSBmb3IgYWxsIHBlb3BsZS4KVGhlIG5vb2RsZSBhbHNvIGdvZXMgYnkgaXRzIENhbnRvbmVzZSBtb25pY2tlciwgbG8gc2hpIGZ1biwgb3IgbGl0ZXJhbGx5LCByYXQgbm9vZGxlcywgYmVjYXVzZSBpdHMgY3lsaW5kcmljYWwgc2hhcGUgd2l0aCBwb2ludGVkIGVuZHMgaXMgc2FpZCB0byByZXNlbWJsZSB0aGUgcm9kZW50IHRhaWwuClNhbSwgbWFueSBwZW9wbGUga25vdyB0aGlzIHN0b3J5IGJ1dCB0aGVyZSB3b3VsZCBiZSBwbGVudHkgd2hvIGRvbid0LiBDYW4geW91IHRlbGwgdXMgZXhhY3RseSB3aGF0IGhhcHBlbmVkIHRoYXQgbmlnaHQ/ClNwYXJrbHlVbmljb3JuTGFkeSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVml0YW1pbiBEIGlzIGEgZmF0IHNvbHVibGUgdml0YW1pbiB0aGF0IGFjdHMgYXMgYSBzdGVyb2lkIGhvcm1vbmUuIFRoZSBib2R5IG1ha2VzIHZpdGFtaW4gRCBmcm9tIGNob2xlc3Rlcm9sIHRocm91Z2ggYSBwcm9jZXNzIHRyaWdnZXJlZCBieSB0aGUgYWN0aW9uIG9mIHRoZSBzdW4gdWx0cmF2aW9sZXQgQiByYXlzIG9uIHRoZSBza2luIChGSUdVUkUgMSkuIEZhY3RvcnMgc3VjaCBhcyBza2luIGNvbG9yLCBhZ2UsIGFtb3VudCBhbmQgdGltZSBvZiBzdW4gZXhwb3N1cmUsIGFuZCBnZW9ncmFwaGljIGxvY2F0aW9uIGFmZmVjdCBob3cgbXVjaCB2aXRhbWluIEQgdGhlIGJvZHkgbWFrZXMuIE11c2N1bG9za2VsZXRhbCBwYWluIGFuZCBwZXJpb2RvbnRhbCBkaXNlYXNlIG1heSBhbHNvIGluZGljYXRlIGEgc2lnbmlmaWNhbnQgdml0YW1pbiBEIGRlZmljaWVuY3kuWzddIFN1YnRsZSBzeW1wdG9tcyBvZiBtaWxkZXIgZGVmaWNpZW5jeSBpbmNsdWRlIGxvc3Mgb2YgYXBwZXRpdGUsIGRpYXJyaGVhLCBpbnNvbW5pYSwgdmlzaW9uIHByb2JsZW1zLCBhbmQgYSBidXJuaW5nIHNlbnNhdGlvbiBpbiB0aGUgbW91dGggYW5kIHRocm9hdC5bN10gRHJhd2luZyBhIGJsb29kIGNhbGNpZGlvbCBjb25jZW50cmF0aW9uIGlzIHRoZSBzdGFuZGFyZCB0ZXN0IGZvciB2aXRhbWluIEQgc3RhdHVzLCBzaW5jZSBjYWxjaWRpb2wgaGFzIGEgbG9uZ2VyIGhhbGYgbGlmZS5bOF0KTmljayBTd2FyZHNvbkNvbWVkaWFuIE5pY2sgU3dhcmRzb24gaGFzIHN0YXJyZWQgaW4gc2V2ZXJhbCBIYXBweSBNYWRpc29uIGZpbG1zIHN1Y2ggYXMgR3JhbmRtYSdzIEJveSwgSnVzdCBHbyBXaXRoIEl0LCBhbmQgVGhhdCdzIE15IEJveS4gQnV0IGJlZm9yZSBhbnkgb2YgdGhlc2UgbW92aWVzIGRlYnV0ZWQsIGhlIHdhcyBiaWxsZWQgYXMgIkluc2FuZSBCb3dpZSBGYW4uIiBXaGVuIFdpbGxpYW0gdHJhdmVscyB0byBDbGV2ZWxhbmQgYWdhaW5zdCBoaXMgd2lsbCwgdGhlIGJhbmQgZW50ZXJzIGEgaG90ZWwgbG9iYnkgc3dhcm1pbmcgd2l0aCBmYW5zIG9mIERhdmlkIEJvd2llLiAKTGltaXQgbXkgc2VhcmNoIHRvIHIvYW5pbWV1c2UgdGhlIGZvbGxvd2luZyBzZWFyY2ggcGFyYW1ldGVycyB0byBuYXJyb3cgeW91ciByZXN1bHRzOnNlZSB0aGUgc2VhcmNoIGZhcSBmb3IgZGV0YWlscy4KQm91Y2hhcmQgcG9zdGVkIGEgbGluayB0byB0aGUgcmVwb3J0IG9uIGhlciBUd2l0dGVyIGZlZWQsIGFuZCBoZXIgbW90aGVyIEp1bGllIExlY2xhaXIgY29uZmlybWVkIHRoZSBkZXRhaWxzIG9mIHRoZSByZXBvcnQgd2VyZSBhY2N1cmF0ZSBpbiBhbiBlbWFpbCB0byBUaGUgQ2FuYWRpYW4gUHJlc3MuCkhpLCBUaHJlZSBkYXlzIGFnbyBJIGxvc3QgbXkgYmxhY2sgZm9zc2lsIHdhbGxldCBhdCBUUEMgKFRvYSBQYXlvaCBDZW50cmFsKSwgYW5kIGl0IGhhcyBteSBTaW5nYXBvcmUgU3R1ZGVudCBQYXNzIENhcmQgKEcxODg5KSwgaXQgYWxzbyBoYXMgYSBPQ0JDIGJhbmsgZGViaXQgY2FyZCwgYSBtb25leSBvZiA5NSAxMDBTJCwgbXkgcGFzc3BvcnQgc2l6ZWQgcGljdHVyZXMsIEluZG9uZXNpYW4gSUQgQ2FyZCwgYW5kIG15IE5ldHMgQ2FzaENhcmQuIApTbyB3aHkgbWlnaHQgdGhlIHRlZW5hZ2UgYnJhaW4gYmUgd2lyZWQgdGhpcyB3YXk/IFRoZWlyIGdyZWF0ZXIgdG9sZXJhbmNlIGZvciB1bmNlcnRhaW50eSBhbmQgdGhlIHVua25vd24gICBhbmQgYW4gaW5jcmVhc2VkIGRlc2lyZSBmb3IgYW5kIGZvY3VzIG9uIHJld2FyZHMgICBwcm9iYWJseSBoZWxwcyB0aGVtIGxlYXZlIHRoZSBuZXN0LiBTdWNoIGV4cGxhbmF0aW9ucyBhcmUgc3BlY3VsYXRpdmUsIFJleW5hIGNhdXRpb25zLCBidXQgbm90ZXMgdGhhdCAiaW4gcmF0cywgZm9yIGV4YW1wbGUsIGFkb2xlc2NlbnQgcmF0cyBhcmUgbW9yZSBsaWtlbHkgdG8gZXhwbG9yZSBhIG5ldyBlbnZpcm9ubWVudC4gClNvIHlvdSB3b3VsZCB0YWtlIDQgYW5kIDMsIGFuZCBsaXN0IGFsbCB0aGVpciBtdWx0aXBsZXMuIApBbGwgZXhjZXB0IG9uZS4gQWZ0ZXIgYSBtb250aCBpbiBjb3VudHJ5IEkgbGVmdCBSdXNzaWEgYSB3ZWVrIGFnbywgYW5kIGFtIG5vdyBob2xlZCB1cCBpbiBvbmUgb2YgdGhlIG1vc3QgdXBzY2FsZSBwcmlzb25zIG9uIHRoZSBwbGFuZXQuIFRoZSBCYWlrb251ciBDb3Ntb2Ryb21lIHF1YXJhbnRpbmUgZmFjaWxpdHkuClRoZSBTcGFydGFucyBhcmUgY3VycmVudGx5IHJhbmtlZCBuaW50aCBpbiB0aGUgY291bnRyeSwgd2l0aCByZWNlbnQgd2lucyBvdmVyIEJpZyBUZW4gZm9lcyBOZWJyYXNrYSwgTWljaGlnYW4gYW5kIFJ1dGdlcnMuIApJIGdldCBpdCwgc29tZXRpbWVzIHlvdSBnbyBvbiBkYXRlcyB3aXRoIHBlb3BsZSBhbmQgdGhleSBjcmVlcHkgb3IgYWdncmVzc2l2ZS4gCk1lcmNlZGVzIGFsc28gaGFwcGVucyB0byBiZSBvbmUgb2YgdGhlIHBlb3BsZSB0aGF0IGVuZHMgdXAgc2F2aW5nIERhbnRlcyBmcm9tIGZhbGxpbmcgZnVydGhlci4gClRoZSBzdHVkZW50cyBhdCBCZXJrZWxleSBhbHJlYWR5IHdlcmUuIApObyB3YXkgaW4gaGVsbCBmcmVlIG1lZGljYWwgc2Nob29scyBhcmUgZ29pbmcgdG8gaW5jcmVhc2UgYWNjZXNzLiAKV2lyIG1zc2VuIGRlbiBLcmFua2VudmVyc2ljaGVyZXJuIHVuZCBkZXIgR2VzZWxsc2NoYWZ0IHZpZWxtZWhyIHplaWdlbiwgZGFzcyB1bnNlcmUgQXJiZWl0IG1laHIgd2VydCBpc3QsIHNvIFBldGVyIFppZWdsZXIuLiAKSGV5LCBiaXJ0aGRheXMgYXJlIGEgZGF5IHdoZW4gYSBraWQgZ2V0cyB0byBiZSB0b2xkIHRoYXQgdGhleSBhcmUgbG92ZWQgYW5kIHdhbnRlZCBhbmQgc3BlY2lhbCwganVzdCBmb3IgYmVpbmcgYm9ybi4gSSBiZWxpZXZlIGV2ZXJ5IGtpZCBzaG91bGQgZmVlbCB0aGF0IHdheSBhbmQgaXQgc3Vja3MgdGhhdCB5b3VyIHBhcmVudHMgd2VyZSBhYnVzaXZlIGFuZCBkaWRuJ3QgYnVpbGQgeW91IHVwISBJZiB5b3UgbGl2ZWQgaW4gbXkgdG93biB3ZSB3b3VsZCBnbyB0byBteSBsb2NhbCBjYWZlIGZvciBjdXBjYWtlcyBvbiB5b3VyIGJpcnRoZGF5IGFuZCBJIHdvdWxkIGJyaW5nIHlvdSBhIGJ1bmNoIG9mIGRhZmZvZGlscy4gCkl0IGRvZXNuIGdvIHRoYXQgZmFzdCBhbmQgdGhlIHRyYWNrIGlzIGVsZXZhdGVkIHNvIHVubGlrZWx5IHRvIHN1ZmZlciBpbmN1cnNpb24gYnkgdHJlc3Bhc3NlcnMgb3IgbGFyZ2UgYW5pbWFscy4gCkkgY2FuIGNvbmZpcm0sIHRoZSBzYW1lIHRoaW5nIGhhcHBlbmVkIHRvIG1lLiBJdCB3YXMgcGFydCBvZiBteSBwbGFuIGZyb20gZGF5IDEgdGhvdWdoLiAKSW5kZWVkLCBJIG5lZWQgdG8gbG9jYXRlIHBsYWNlZCB0byBhdHRhY2ggbXkgcHJvYmVzLCB0aGF0IHdhcyBnb2luZyB0byBiZSBteSBuZXh0IHN0ZXAuIApTY3JhcGluZyB0aGUgbmFpbHMgYWZ0ZXIgc29ha2luZyBmb3IgMTAgbWludXRlcyB3aWxsIGhlbHAgc3BlZWQgdXAgdGhlIHByZWNlc3MsIGJ1dCBETyBOT1QgcmVtb3ZlIHlvdXIgZmluZ2VycyBvdXRzaWRlIHRoZSBsaXF1aWQuIEkgcmVwZWF0IHlvdSBETyBOT1QgdGFrZSB0aGUgZmluZ2VycyBvdXRzaWRlIHRoZSBsaXF1aWQuIApDb25zaWRlciBob3cgbGFyZ2UgeW91IHdhbnQgeW91ciBwaWN0dXJlcyB0byBiZSBpbiB5b3VyIGZpbmFsIGNvbGxhZ2UuIFRoZSBwaWN0dXJlcyBkbyBub3QgbmVlZCB0byBiZSB0aGUgc2FtZSBzaXplLCBub3IgZG8gdGhleSBuZWVkIHRvIGJlIHRoZSBzYW1lIHNoYXBlLiBJbiBmYWN0LCBhIHJhbmdlIG9mIHNpemVzIGFuZCBzaGFwZXMgd2lsbCBnaXZlIG1vcmUgZGltZW5zaW9uIHRvIHlvdXIgY29sbGFnZSBhbmQgbWFrZSBpdCBtb3JlIGludGVyZXN0aW5nIHRvIHRoZSBleWUuIApIb3cgVG8gUGxheSBQb2tlciBJbiBDYXNpbm9zCkFueXdheSwgSSBkaWQgc3RvcCBvbiBhIHlvdSB0dWJlIHNpdGUgYW5kIHRyaWVkIGhlciBidW5uaWVzLiBJIGRvbiB0aGluayBteSBidW5ueSB0dXJuZWQgb3V0IHRoYXQgZ3JlYXQuIExPTC4gQW5kIHRoZW4gSSBkZWNpZGVkIEkgd291bGQgdHJ5IGhlciBlZ2cgYW5kIGNoaWNrLiBZZWFoLCBteSBlZ2cgbG9va3MgbGlrZSBhIGNsYW0gc2hlbGwgYW5kIG5vdCBhbiBlZ2cuIFNoZSBoYXMgYSBibG9nIGFzIHdlbGwgd2l0aCB0aGUgcGF0dGVybiBvbiBpdC4gU2hlIGlzIGtub3duIGFzIEhhcHB5IEJlcnJ5IENyb2NoZXRhbmQgdGhlIHlvdSB0dWJlIHNpdGUuIEFueXdheSwgaGVyZSBpcyB0aGUgcmFiYml0IGFuZCBjaGlja2VuIEkgdHJpZWQgZnJvbSBoZXIgc2l0ZToKSSB0aGluayB0aGUgZ2lybCB3YXMgd29ycmllZCB3aGF0IEkgd2FzIGdvaW5nIHRvIHNheSB0byB0aGUgdHdvIHN1cGVyIG5pY2UgbGFkaWVzIHVwIGZyb250IGJlY2F1c2UgdGhlIG1hc3NhZ2UgZ2lybCByZWZ1c2VkIHRvIGxlYXZlLiBGdW5ueSBob3cgc2hlIHdhcyBpbiBzdWNoIGEgaHVycnkgdG8gbGVhdmUsIHlldCBzaGUgcmVmdXNlZCB0byBsZWF2ZSB1bnRpbCBJIGRpZC4uIApIZSBsYXVnaHMgYXMgdGhlIGZsb3AgcHJvZHVjZXMgMTAsNSw3IHJhaW5ib3cgYW5kIG15IHF1ZWVucyBzaHJpdmVsIHVwIHRvIGFsbW9zdCBub3RoaW5nLiAKVGhlIGZhdWx0IHNob3VsZCByZXN0IG9uIGhvc3BpdGFsIGFkbWluaXN0cmF0aW9uL251cnNpbmcgc3VwZXJ2aXNpb24uLiAKSXRzIDc6MTUsIHRpbWUgdG8gd2FsayBkb3duIHRvIHRoZSBidXMuIApTaWx2ZXIgQnVkd2Vpc2VyIFNwaW5uZXIgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgaGFzIHR1cm5lZCB0aGlzIGJ1c2luZXNzIGludG8gYSB2ZXJ5IGx1Y3JhdGl2ZSBvbmUgaW4gdGhlIHJlY2VudCBmZXcgeWVhcnMuIFRoZSBudW1iZXIgb2Ygc2FsZXMgaXMgY2VydGFpbmx5IHN1cnByaXNpbmcgYW5kIHRoaXMgZ3JlYXQgdm9sdW1lIGhhcyBhdHRyYWN0ZWQgbWFueSBjdXN0b21lcnMgaW4gdGhlIHJlY2VudCBmZXcgeWVhcnMuIApUaGUgbG9vayBvbiBoaXMgZmFjZSBpcyB3b3J0aCBldmVyeSBwZW5ueS4gClNvcmUgbGVnIG11c2NsZXMgbG92ZSBuZXcgUjggbWFzc2FnZSByb2xsZXIKVXNlIHRoZSBzZWFyY2ggb3B0aW9uIHRvIGZpbmQgdGhlIHJlc3VsdHMgeW91IHdhbnQgdGhlbiBjbGljayBvbiB0aGUgYmVhdXRpZnVsIERhdGluZyBQcm92aWRlcnMgdG8gZGlzY292ZXIgdGhlIGJlc3Qgb25lIHRvIHNjcmF0Y2ggeW91ciBuZWVkcyEgQW55IGFjdGlvbnMgdGhhdCB0YWtlIHBsYWNlIHdpdGhpbiBvdXIgY29udHJhY3RlZCB0aW1lZnJhbWUgYXJlIGEgbWF0dGVyIG9mIG11dHVhbCBjaG9pY2UgYmV0d2VlbiBjb25zZW50aW5nIGFkdWx0cy4gClBvdXIgbGEgcHJlbWlyZSBmb2lzLCB1biByZXByc2VudGFudCBkZSBsYSBEUFNQIDEwZSB0YWl0IHByc2VudC4gCjIgTlJJcyBzZXQgdG8gYmUgYmlsbGlvbmFpcmVzCldoZW4gdGhleSBoYXBwZW5lZCwgd2UgYWxsIHN0b3BwZWQgd2hhdGV2ZXIgd2Ugd2VyZSBkb2luZyBhbmQgcHV0IG91ciBoYW5kcyBvdmVyIG91ciBlYXJzIHRvIGtlZXAgZnJvbSBiZWluZyBkZWFmZW5lZCB1bnRpbCB0aGUgR29kIGxpa2Ugcm9hcmluZyBzdG9wcGVkLiAKSSBmZWVsIGxpa2UgYSBsb3Qgb2YgcGVvcGxlIGhlcmUgaGF2ZSB0aGlzIHBlcnZhc2l2ZSBuZWVkIHRvIGxvb2sgZG93biBvbiBwZW9wbGUgd2hvIG1hZGUgYmFkIGNhbGxzLiBMaWtlIHdoeSBkaWcgdXAgYSBtb250aCBvbGQgY29tbWVudCBhbmQgY29tcGFyZSBpdCB0byBhbiBleHRyZW1lbHkgdW5jb250cm92ZXJzaWFsIHN0YXRlbWVudCBieSBCdWZmZXR0LiBJIGNvbnN0YW50bHkgc2VlIHRoZXNlIHRocmVhZHMgcG9wcGluZyB1cCB3aXRoIHN0dWZmIGxpa2UgImhleSBiZWFycyBob3cgZG9lcyBpdCBmZWVsIHRvIGJlIHdyb25nIiBvciB3aGF0ZXZlci4gCkFSQyBFbmVyZ3kgUmVzZWFyY2ggSW5zdGl0dXRlIHNlbmlvciBkaXJlY3RvciBKYWNraWUgRm9ycmVzdCBzYWlkIG9pbCBjb21wYW5pZXMgYW5kIHRoZSBBbGJlcnRhIGdvdmVybm1lbnQgaGF2ZSBjdW11bGF0aXZlIGNhcGFjaXR5IGZvciA2MDAsMDAwIGJwZCBpbiBvaWwgYnkgcmFpbCBjb250cmFjdHMsIHdoaWNoIGlzIHRoYW4gZW5vdWdoIHRvIGNsZWFyIHRoZSBtYXJrZXQgaW4gMjAyMC4gU2FpZCBjb21wYW5pZXMgbWF5IG5vdCB1c2UgYWxsIG9mIHRoYXQgY2FwYWNpdHkgYnV0IGRvZXMgZXhwZWN0IG9pbCBieSByYWlsIHRvIHN1cnBhc3MgcmVjb3JkcyBzZXQgaW4gMjAxOCBhbmQgaW4gcHJldmlvdXMgeWVhci4uIApFdmVuIG15IGxlZ3MuIApIb3cgbWFueSBudW1iZXIgMSBzaW5nbGVzIGhhcyBMYWR5IEdhZ2EgZ290CkFsdGhvdWdoIHBlb3BsZSBkbyBhc2sgbWUgaWYgSSB0aGluayB0aGUgQ2VydGlmaWVkIEh1bWFuZSBzdHVmZiB0YXN0ZXMgYmV0dGVyIChJIGEgY2hlZikuIE5vLCBub3QgcmVhbGx5LCBJIG5ldmVyIG5vdGljZWQgYSBkaWZmZXJlbmNlIChzb21ldGltZXMgdGhlIHlvbGtzIHdpbGwgYmUgYSBtb3JlIGludGVuc2UgY29sb3IgYnV0IG5vdCBhbHdheXMpICAgYnV0IEkgbm90IHJlYWxseSBkb2luZyBpdCBmb3IgYmV0dGVyIHRhc3RpbmcgZm9vZCBidXQgZm9yIGZvb2QgdGhhdCBkb2VzbiBtYWtlIG1lIGZlZWwgbGlrZSBhIHNjdW1idWNrZXQsIGJlY2F1c2UgSSBjYW4gYWZmb3JkIE5PVCB0byBiZSBjaGVhcCBhbmQgdGhlcmUgbm8gcmVhc29uIG5vdCB0byBidXkgc3R1ZmYgSSBrbm93IGlzIG1vcmUgaHVtYW5lLi4gCkluIHRoZSBtaWRkbGUgb2YgdGhlIGJhciwgdGhlcmUgaXMgYSB5ZWxsb3cgbGluZS4gCkluIHNvbWUgdGFibGVzIHlvdSBjb3VsZCBzdGFydCB3aXRoIGxpa2UgNWs0MGsgd2hpbGUgc29tZSBvdGhlcnMgYWxsb3cgYmlnZ2VyIGJ1eSBpbnMgcmFuZ2luZyBmcm9tIGxpa2UgMTAwazFtaWwgKGp1c3QgdGhyb3dpbmcgcmFuZG9tIGV4YW1wbGVzKS4gU28geWVhaCwgdGhlcmUncyBubyBzZXQgYW1vdW50LiBJdCBkZXBlbmRzIG9uIHRoZSB0eXBlIG9mIHBva2VyIHlvdSdyZSBwbGF5aW5nIGFuZCBpdCdzIGN1cnJlbnQgcnVsZXMuIApUb2RheSwgdGhvdWdoLCB3ZSBoYXZlIHByb2JsZW1zIHRoYXQgd2Uga25vdyBmb3IgYSBmYWN0IGFyZSAxMDAlIGdvaW5nIHRvIGhhcHBlbi4gVGhleSBub3QgYXMgYmFkIGFzIG51Y2xlYXIgd2FyIChpbiB0aGUgc2hvcnQvbWVkaXVtIHRlcm0gYXQgbGVhc3QpLCBidXQgdGhleSBhcmUgZGVmaW5pdGVseSBjb21pbmcgaW4gb3VyIGxpZmV0aW1lcy4gCldhcyBhIGhlcm9pbiBhZGRpY3QsIHNvIG9mIGNvdXJzZSBJIGRvbmUgbG90cyBvZiBiYWQgdGhpbmdzLiBNZSBhbmQgbXkgYm95ZnJpZW5kIHdlcmUgZnJpZW5kcyB3aXRoIHRoaXMgb3RoZXIganVua2llIGNvdXBsZS4gTm90IHJlYWxseSBmcmllbmRzLCBidXQgSSBoYWQgbWV0IHRoZSBnaXJsIGluIHJlaGFiIGEgZmV3IHllYXJzIGJlZm9yZSwgYW5kIHJlY2VudGx5IGNvbm5lY3RlZCwganVzdCBiZWNhdXNlIHNvbWV0aW1lcyBvdXIgZGVhbGVycyB3b3VsZCBiZSBvdXQgYW5kIHdlZCBhc2sgdGhlbiB0byBidXkgc29tZSBvZiB0aGVpciBzdGFzaCwgdGhleSB3b3VsZCBhbHdheXMgYWN0IHN1cHBlciB3aWxsaW5nIGJ1dCB3b3VsZCBydXAgdXMgb2ZmIHNvIGJhZC4gQW5kIG5laXRoZXIgb2YgdGhlbSBoYWQgSURzIGFuZCB3b3VsZCBhc2sgdXMgdG8gbWVldCB0aGVtIGF0IGEgd2FsZ3JlZW5zIGFuZCBidXkgc3lyaW5nZXMgZmlyIHRoZW0sIHdlZCBhZ3JlZSBhbmQgdGhleSB3b3VsZCBtYWtlIHVzIHdhaXQgaG91cnMgdGhlcmUsIGtlcHQgc2F5aW5nIHRoZXkgd2VyZSBjbG9zZS4gVGhleSB3ZXJlIGFsd2F5cyBtYWtpbmcgdXMgd2FpdCBob3VycyBvbiB0aGVtLiBPbmNlIHRoZXkgYXNrZWQgdXMgdG8gZ2V0IGEgaG90ZWwgcm9vbSBmb3IgdGhlbSwgYmVjYXVzZSB3ZSBoYWQgb3V0IElEcy4gVGhleSBmYXZlIHVzIG1vbmV5IGFuZCB3ZSBnb3QgYSByb29tIGZvciB0aGVtLiBUaGUgc2Vjb25kIHRpbWUgdGhleSBhc2tlZCB1cywgd2Ugd2VyZSBsb3cgb24gY2FzaCwgYW5kIGp1c3QgdGlyZWQgb2YgdGhlaXIgYnMuIFRoZXkgbGl2ZWQgaW4gdGhlaXIgY2FyLCBhbmQgaGFkbiBzbGVwdCBpbiBhIGJlZCBpbiBhIHdlZWssIGFuZCBhc2tlZCB1cyB0byBnZXQgdGhlbSBhIGhvdGVsLiBXZWxsIEkgbWFkZSBteSBib3lmcmllbmQgcGFyayB1cCB0aGUgc3RyZWV0IGJlY2F1c2UgdGhlIG1vdGVsIG9ubHkgaGFkIGluIGV4aXQuIEFuZCB0aGV5IGdhdmUgbWUgdGhlIG1vbmV5IGFuZCBJIHByZXRlbmRlZCB0byB3YWxrIGluIHRoZSBvZmZpY2UsIGJ1dCByZWFsbHkgSSBqdXN0IGhpZCBmcm9tIHRoZW0gaW4gdGhlaXIgY2FyLCBhbmQgd2hlbiBJIHRob3VnaHQgdGhleSB3ZXJlbiBsb29raW5nIEkgcmFuIGZvciBpdC4gSSB2ZXJ5IG91dCBvZiBzaGFwZSwgYW5kIHJhbiB3aXRoIHRoZSBtb25leSwgYWxsIHRoZSB3YXkgdG8gdGhlIGJhY2sgb2YgdGhlIG1vdGVsIGFuZCB0byB0aGUgbmV4dCBwYXJraW5nIGxvdC4gR290IGluIHRoZSBDU1IsIHdpdGggJDk2LCBjYWxsZWQgdXAgbXkgZGVhbGVyIGFuZCBkZWxldGVkIGhlciBhbmQgYmxvY2tlZCBoZXIgcGhvbmUgbnVtYmVyIGFuZCBGYWNlYm9vay4KTWFraW5nIGZyaWVuZHMgd2l0aCB5b3Vyb25saW5lIHBva2VyYnVkZGllcyBpcyBwb3NzaWJsZSBhbmQgeW91IGNhbiBldmVuIGhhdmUgYSBjaGF0IHdpdGggdGhlbSB3aXRoIHRoZSBjaGF0IGZlYXR1cmUgYXZhaWxhYmxlLiAKV2hlbiB5b3Ugc3RhbmQgdG8gcHJheSwgZm9yZ2l2ZSBhbnlvbmUgYWdhaW5zdCB3aG9tIHlvdSBoYXZlIGEgZ3JpZXZhbmNlLCBzbyB0aGF0IHlvdXIgaGVhdmVubHkgRmF0aGVyIG1heSBpbiB0dXJuIGZvcmdpdmUgeW91IHlvdXIgdHJhbnNncmVzc2lvbnMuIi4gCkF0IHRoZSBmYXIgZW5kIHRoZSBkYXJrIGhhaXJlZCB3YWl0cmVzcyBzbG93bHkgbWFrZXMgaGVyIHdheSBkb3duIGFzIHNoZSBxdWlja2x5IHRha2VzIGEgZmV3IG9yZGVycy4gT24gaGVyIHRyYXkgc2hlIGlzIGNhcnJ5aW5nIG9uZSBmcmVzaCBnbGFzcyBhcyB3ZWxsIGFzIHRocmVlIHNtYWxsZXIgZW1wdHkgb25lcy4gTG9va2luZyBhdCBoZXIgb25lcyBleWVzIGNhbiB0IGhlbHAgbG9vayBhdCBoZXIgYnJpZ2h0IHllbGwgc251ZyB0b3AgdGhhdCBodWdzIGhlciBmaWd1cmUgbmljZWx5Li4gCkkgdGhvdWdodCBBRiB3YXMgaGVyZSBhIGZldyBkYXlzIGFnbywgYnV0IGl0IHdhcyBqdXN0IHNwb3R0aW5nLiBNeSBjeWNsZSBpcyBub3JtYWxseSAyNiBkYXlzLCBhbmQgSSdtIG9uIENEIDMxLiAKWW91IGFyZSBzdHJldGNoaW5nLiBCYXR0bGVsb2cga2VwdCB5b3UgbG9nZ2VkIGluIGFuZCBvcGVuaW5nIGEgd2ViIGJyb3dzZXIgaXNuIGV4YWN0bHkgYW4gZXh0cmEgc3RlcCBmb3IgbW9zdCBwZW9wbGUuIApGb3IgZXhhbXBsZSwgaXQgYWZ0ZXIgdGhlIGZsb3AgeW91IGhhdmUgYm90aCBmbHVzaCBhbmQgc3RyYWlnaHQgZHJhd3MgKHNheSwgdGhlIDEwLCA5LCA3IGFuZCAyIG9mIGRpYW1vbmRzLCBhbmQgdGhlIDggb2YgY2x1YnMpIHlvdSBtaWdodCBkZWR1Y2UgdGhhdCB5b3UgaGF2ZSAxNyBvdXRzLiAKUGxhY2UgeW91ciBmYWNlIG92ZXIgdGhlIHN0ZWFtIGFuZCBkcmFwZSBhIHRvd2VsIG92ZXIgdGhlIGJhY2sgb2YgeW91ciBoZWFkIHRvIGZvcm0gYSBtaW5pIHNhdW5hLiAKSmUgbWUgcGVybWV0IGRlIHJhZ2lyLCB0YW50IGNlbHVpIHF1aSByZW1hcnF1YSBkYW5zIHVuIHByY2RlbnQgY29tbWVudGFpcmUgbGEgc29tbm9sZW5jZSBkZXMgQ1JTLiBKZSB0aWVucyAgcml0cmVyIGNldHRlIHJlbWFycXVlLiBDYXIgc2kgbGVzIGZvcmNlcyBkZSBsJ29yZHJlIHBldXZlbnQgYWdpciBlZmZpY2FjZW1lbnQgZW4gdG91dGUgZGlzY3J0aW9uIChjZWxhIHNlIGNvbXByZW5kIGRhbnMgYmllbiBkZXMgYWZmYWlyZXMpIGlsIG4nZW4gZXN0IHJpZW4gZGVzIENSUyBxdWkgbidvbnQgYXVjdW5lIHBhcnQgZGUgcmVzcG9uc2FiaWxpdCBkYW5zIGxlcyBwZXRpdHMgc3VjY3MgcmVuY29udHJzIGp1c3F1ZSBsLiBOb24gc2V1bGVtZW50LCBsZXMgQ1JTIG4nb250IHBhcyB2b2NhdGlvbiAgdHJlIGRlcyBhY3RldXJzIGRlcyBvcHJhdGlvbnMgZGUgZG1hbnRsZW1lbnQgZGUgcnNlYXV4IGRlIHZlbnRlIGRlIHN0dXBmaWFudHMgbyBkZSBwcm94bnRpc21lLCBtYWlzIGlscyBzb250IHVuIGxtZW50IGZvcnQgcG91ciBzaWduaWZpZXIgcXVlIGNlIHF1YXJ0aWVyIGVzdCBzb3VzIHRlbnNpb24uIFVuIENSUyBzZSBtb250cmUgZXQgbidhZ2l0IHF1ZSB0cnMgcmFyZW1lbnQuIExldXIgcHJzZW5jZSBjciB1biBzZW50aW1lbnQgdHJhbmdlIGQndHJlIGRhbnMgdW5lIHpvbmUgZCdleGNlcHRpb24sIGRhbmdlcmV1c2UgZXQgaW5zY3VyZSwgY29udHJhaXJlbWVudCAgbGEgcHJzZW5jZSBkZSBwb2xpY2llcnMgIm5vcm1hdXgiIHF1aSBkb25uZW50IHBsdXMgbCdpbXByZXNzaW9uIGQndHJlIGRhbnMgdW4gcXVhcnRpZXIgY29tbWUgbGVzIGF1dHJlcy4KVGhlIFdQVCBCYXkgMTAxIFNob290aW5nIFN0YXIgQ2hhbXBpb25zaGlwIG9mZmVycyBvbmUgb2YgdGhlIG1vc3QgdW5pcXVlIHNldHRpbmdzIG9uIHRoZSBsaXZlIHRvdXJuYW1lbnQgcG9rZXIgY2lyY3VpdC4gVGhvdXNhbmRzIG9mIGZhbnMgY3Jvd2QgdGhlIHNtYWxsIEJheSAxMDEgdG91cm5hbWVudCBhcmVhIGluIGhvcGVzIG9mIHNlZWluZyBzdXBlcnN0YXJzIGxpa2UgRGFuaWVsIE5lZ3JlYW51LCBQaGlsIEhlbGxtdXRoLCBBbnRvbmlvIEVzZmFuZGlhcmkgYW5kIEphc29uIE1lcmNpZXIsIGFza2luZyBmb3IgYSBxdWljayBwaWN0dXJlIG9yIGFuIGF1dG9ncmFwaCBmcm9tIHRoZWlyIGZhdm9yaXRlcy4gClBva2VyIGlzbnQgbGlrZSBpdCB1c2VkIHRvIGJlClB1aXMgaWwgYXVyYWl0IGdsaXNzIGRhdmFudGFnZSB2ZXJzIGxhIFBlcnNlIGF2YW50IGRlLCBwZXV0IHRyZSwgc2UgZnJheWVyIHVuIGNoZW1pbiBkYW5zIGxhIHZhbGxlIGR1IE5pbCwgZCBpbCBzZSBzZXJhaXQgZHBsb3kgYXUgbW9uZGUgZ3JlYywgcHVpcyByb21haW4gYXUgcHJlbWllciBzaWNsZSBhdmFudCBKLiBDLiwgZGl0IG9uLiBPciwgZCBzb3VyY2VzIHNlbWJsZW50IHN1Z2dyZXIgcXVlIGxlIGNoYW52cmUgYXVyYWl0IGVtcHJ1bnQgdW5lIHZvaWUgY29tcGxtZW50YWlyZSwgcGx1cyBhdSBub3JkLCBsdWkgcGVybWV0dGFudCBkZSBwYXJ2ZW5pciBqdXNxdSBFdXJvcGUgY2VudHJhbGUgNTAwIGFucyBhdmFudCBKLiAKS3lsaWUgSmVubmVyIHR3ZWV0IGhhbW1lcnMgU25hcGNoYXQgc2hhcmVzClRoZXkgd2lsbCB0ZWFjaCB5b3UgdGhlIGJhc2ljcyAgIHRoZSBydWxlcywgdGhlIGV0aXF1ZXR0ZSBhbmQgdGhlIGNhcmQgdmFyaWF0aW9ucy4gCldlIGNhbiByZXRha2UgQ29uZ3Jlc3MgYW5kIHRoZSBwcmVzaWRlbmN5IHdpdGggZWFzZSBpbW8gYnV0IGl0cyBnb2luZyB0byBiZSByZWFsbHkgaGFyZCB0byBjbGVhbiB1cCB0aGUgbWVzcyBvZiBvdXIgY291cnRzIGFuZCBvdXIgY3JpbWluYWwganVzdGljZSBzeXN0ZW0gYXMgYSB3aG9sZS4gCkluIGZhY3QsIGlmIEdvbGRtYW4gU2FjaHMgc3VkZGVubHkgYmVjYW1lIG1vcmUgZGVtb2NyYXRpYyBhbmQgZGl2aWRlZCB0aGVzZSBib251c2VzIHVwIGV2ZW5seSwgZWFjaCBlbXBsb3llZSB3b3VsZCBnZXQgYW4gYXZlcmFnZSBvZiAkNjAwLDAwMCBpbiBzYWxhcnkgYW5kIGJvbnVzZXMuLiAKTCdoaXN0b3JpZW4gR3V5IEFudG9uZXR0aSBkY3JpdCBjZSBjb3VwIGQnRXRhdCAoSGlzdG9pcmUgY29udGVtcG9yYWluZSBwb2xpdGlxdWUgZXQgc29jaWFsZSwgUFVGLCA4bWUgZC4sIDE5OTksIHAgOiAxOTkpLiBMYSB0YWN0aXF1ZSBjb25zaXN0ZSAgIGludm9xdWVyIHVuIHBydGVuZHUgY29tcGxvdCBqYWNvYmluIHBvdXIgb2J0ZW5pciBsZSB0cmFuc2ZlcnQgZGVzIGFzc2VtYmxlcyBob3JzIGRlIFBhcmlzIDogdGFuZGlzIHF1ZSBTaWV5cyBwYXJhbHlzZXJhaXQgbGUgZ291dmVybmVtZW50IGRpcmVjdG9yaWFsLCBCb25hcGFydGUgY29udHJhaW5kcmFpdCBsZXMgQ29uc2VpbHMgIGx1aSBjb25mcmVyIGxlcyBwbGVpbnMgcG91dm9pcnMgc291cyBsYSBtZW5hY2UgZGUgc2VzIHNvbGRhdHMgLiBDZSBzZXJhIHBsdXMgb3UgbW9pbnMgY2UgcXVpIHNlIHBhc3NlcmEuIExlIERpcmVjdG9pcmUgZGlzcGFyYXQgOiBCYXJyYXMgc2UgcmZ1Z2llIGRhbnMgc29uIGNodGVhdSwgU2lleXMgZXQgRHVjb3MgZG1pc3Npb25uZW50LCBHb2hpZXIgZXQgTW91bGluIHNvbnQgYXJydHMuClRvZGF5IHRoaXMgYm9va21ha2VyIGlzIG9uZSBvZiB0aGUgbW9yZSBwb3B1bGFyIG9ubGluZSBib29rbWFrZXJzIG9mZmVyaW5nIGZhc3QgcGF5b3V0cyBmb3IgdGhlIHNwb3J0cyBiZXR0aW5nLCBjYXNpbm8sIHBva2VyLCBiaW5nbywgYW5kIGxvdHRlcnkgc2VydmljZXMuIApEYW4gU2hhY2tlbGZvcmQsIGEgbWVtYmVyIG9mIEhSQyBhbmQgYSBtZW1iZXIgb2YgdGhlIGdheSBjb21tdW5pdHksIHNhaWQgdGhlIGxhdyBpcyBsb25nIG92ZXJkdWUsIGJ1dCBkb2Vzbid0IHNlZSBhbnl0aGluZyBjb21pbmcgYmVmb3JlIHRoZSBjb3VudHkgY29tbWlzc2lvbmVycyBmb3IgYXQgbGVhc3QgYW5vdGhlciBmaXZlIHZlYXJzLiAKRm9yIHRoZSBtb3N0IHBhcnQsIHRoaXMgaXMgZmluZS4gCk1heW9yIEFicmFtIFdpbHNvbiBzYXlzIEVybmVzdCBjb3VsZCBydWIgcGVvcGxlIHRoZSB3cm9uZyB3YXkuICJBIGxvdCBvZiBwZW9wbGUgd2VyZSB2ZXJ5IHVuY29tZm9ydGFibGUgYXJvdW5kIEVhcm5lc3QsICIgTWF5b3IgV2lsc29uIHNhaWQuIApDb21tdW5pY2F0aW9uOiBQcmFjdGljaW5nIGFjcm95b2dhIHJlcXVpcmVzIG9uZ29pbmcsIG1pbmRmdWwgY29tbXVuaWNhdGlvbi4gCkxlYWh5IGhhcyBmb3VuZCB0aGF0IHJhdGhlciB0aGFuIHJlcXVpcmluZyBzdXJnZXJ5LCB0aGlzIGluanVyeSBjYW4gb2Z0ZW4gYmUgcXVpY2tseSBhbmQgY29tcGxldGVseSByZXNvbHZlZCBieSBmaW5kaW5nIHRoZSB0aXNzdWUgdGhhdCBpcyBpbmp1cmVkIGFuZCB1c2luZyBBUlQgdG8gcmVzdG9yZSB0aGUgdGV4dHVyZSwgdGVuc2lvbiBhbmQgbW92ZW1lbnQgb2YgdGhlIHRpc3N1ZXMgaW52b2x2ZWQuClNvbGx0ZXN0IGR1IGRhcyBHbGNrIGhhYmVuIGVpbiByaWNodGlnIGd1dGVyIFBva2Vyc3BpZWxlciB6dSBzZWluIHVuZCBkYXp1IG5pY2h0IGluIGRlbiBVU0Egd29obmVuLCBkYW5uIHNwaWVsZSBvbmxpbmUgUG9rZXIgdW0gZGVpbmUgYmFua3JvbGwgYXVmenVwZXBwZW4uIApJbiB0aGlzIGNsYXNzIEkgZm91bmQgY29tZm9ydCBhbmQgcmVsYXhhdGlvbiB0aGF0IEkgb2Z0ZW4gc3RydWdnbGUgdG8gZmluZCBpbiBvdGhlciB5b2dhIGNsYXNzZXMuLiAKU3VzdGFyIHNhaWQgaGUgbGVmdCBGb3JkIGJ5IG11dHVhbCBhZ3JlZW1lbnQgd2l0aCB0aGUgYXV0b21ha2VyIGluIDE5OTkuIApJdCdzIGEgYmlnIGNvbXBhbnkgdGhhdCBwYXlzIGV4dHJlbWVseSB3ZWxsIHNvIHRoZXkgaGF2ZSBzb21lIGxldmVyYWdlLiBTaGUncyB0cmllZCB0byBsb2RnZSBjb21wbGFpbnRzIGV2ZXJ5IHRpbWUgdGhlIGZvb2QgY29tZXMgdGhyb3VnaC4gCk9uIHNlIHNvdXZpZW50IHF1ZSBKc3VzLCB0YW5kaXMgcXUgbGF2YWl0IGxlcyBwaWVkcyBkZSBzZXMgZGlzY2lwbGVzLCBkaXQgZW4gcnBvbnNlICBQaWVycmUgOiAgVHUgbmUgY29tcHJlbmRzIHBhcyBlbmNvcmUgY2UgcXVlIGplIGZhaXMsIG1haXMgdW4gam91ciwgdHUgY29tcHJlbmRyYXMgLiAKUmVzdCBvZiB5b3VyIHBvc3QgYWJvdXQgZXhjaGFuZ2VzIG5vdCBvcHRpbWl6aW5nIGlzIG5vdCB0aGUgcG9pbnQgb2YgZGViYXRlLiBFeGNoYW5nZXMgYXJlIGJ1c2luZXNzZXMsIHRoZXkgY2FuIGRvIHdoYXRldmVyIHRoZXkgd2FudCBpZiB0aGV5IGRlZW0gaXQgdG8gYmUgcHJvZml0YWJsZS4gSWYgdGhleSBkbyBub3QgdGhpbmsgaW1wbGVtZW50aW5nIFNlZ1dpdCBpcyBpbiB0aGVpciBiZW5lZml0LCB0aGV5IHdvbiBkbyBpdC4gKEkgdGhpbmsgdGhleSB3aWxsIGV2ZW50dWFsbHksIGJ1dCB0aGF0IGlzIGFub3RoZXIgZGlzY3Vzc2lvbikgVGhpcyBoYXMgbm90aGluZyB0byBkbyB3aXRoIGJsb2NrIHNpemUgZGViYXRlLiBXaGF0IHBlb3BsZSBvciBidXNpbmVzc2VzIGRvIHdpdGggdGhlaXIgdHJhbnNhY3Rpb24gb3B0aW1pc2F0aW9uIGlzIHRoZWlyIGJ1c2luZXNzLgpZb3VyIGFydGljbGUsIGhvd2V2ZXIsIGlzIG5laXRoZXIgcHJldGVudGlvdXMgbm9yIG1lYW5pbmdsZXNzLiBJdCBzb2xpZCwgd2l0aG91dCBkaWdnaW5nIHRvbyBmYXIgaW50byB0aGluZ3MgdGhhdCBhcmVuIG1lYW50IHRvIGJlIGFuYWx5emVkLiBKdXN0IHNpbXBsZSwgcmVsZXZhbnQsIGFuZCBpbnRlcmVzdGluZyBjb21wYXJpc29ucy4gTmljZSBqb2IhClN0dWNrIGluIGxpZmUsIGhlIGRlY2lkZXMgdG8gY29tbXVuaWNhdGUgd2l0aCBwZW9wbGUgdXNpbmcgYSBiZWF2ZXIgaGFuZCBwdXBwZXQsIHNvbWV0aGluZyBoZSB0ZWxscyBoaXMgd2lmZSBpcyBwYXJ0IG9mIGEgdGhlcmFweSBwcm9ncmFtLiBXYWx0ZXIgcmVjb25uZWN0cyB3aXRoIGhpcyB5b3VuZ2VzdCBzb24gdGhhbmtzIHRvIHRoZSBiZWF2ZXIgYW5kIGhpcyB3aWZlIGNhbid0IGhlbHAgYnV0IGVtcGF0aGl6ZS4gQnV0IGhpcyBlbGRlciBib3kgKFllbGNoaW4pIHN0aWxsIHdvbid0IGFjY2VwdCBoaW0gYW5kIFdhbHRlciBydW5zIGludG8gb3RoZXIgcHJvYmxlbXMgdHJ5aW5nIHRvIHdpbiBoaW0gb3Zlci4gCkZvcnR1bmF0ZWx5LCB5b3UgY2FuIG5vdyBidXkgc21hbGwgc2l6ZWQgYXV0b21hdGljIGNhcmQgc2h1ZmZsZXIuIApBIG5vcm1hbCBnYW1lIHRha2VzIHVzdWFsbHkgYWJvdXQgMzAgNDUgbWludXRlcywgc29tZXRpbWVzIGEgYml0IGxvbmdlci9zaG9ydGVyLiAKSXQgaXMgbXkgcGFzc2lvbiB0byBzcGVjaWFsaXplIGluIGZhY2lhbHMsIHdheGluZyBhbmQgZXllYnJvdy9leWVsYXNoIHRpbnRpbmcuIEkgbG9vayBmb3J3YXJkIHRvIHdvcmtpbmcgd2l0aCBteSBjbGllbnRzLCBtZWV0aW5nIG5ldyBvbmVzIGFuZCBidWlsZGluZyBsaWZlbG9uZyByZWxhdGlvbnNoaXBzLi4gCkJ1dCBoZSB0d2VldGVkIHRoZSBCZWxsYWdpbyBzdGFmZiB3ZXJlIGZhbnRhc3RpYyBkYXlzIHN1cnJlbmRlcmVkIHRoZSBtb25leSBxdWlldGx5IHNvIG5vIGN1c3RvbWVycyB3b3VsZCBnZXQgaHVydCBub2JvZHkgZXZlbiByZWFsaXplZCBpdCB3YXMgaGFwcGVuaW5nLiAKVGhlIGJvb2sgaXMgY2VydGFpbmx5IHNhbGFjaW91cyAgIGl0IGNvbmNlcm5zIGEgd29tYW4gd2hvc2UgZml4YXRpb24gb24gc2V4IGlzIG9ic2Vzc2l2ZSwgZmFuYXRpY2FsICAgYnV0IGxpa2UgVGhlIFBlcmZlY3QgTmFubnksIGl0IGJyYXplbmx5IHJlc2lzdHMgY29udmVudGlvbiwgcHJlZmVycmluZyB0byBiZSBvYnN0aW5hdGUgYW5kIGFnZ3Jlc3NpdmUgaW4gbGlldSBvZiBsaWtlYWJsZS4gIlNoZSB3YXMgdGhlIG9uZSB3aG8gYXNrZWQgZm9yIGl0LCIgU2xpbWFuaSB3cml0ZXMgb2YgdGhlIGhlcm8sIEFkbGUsIHRoZSBtb3JuaW5nIGFmdGVyIGFuIGFsbCBuaWdodCB0cnlzdC4gCkNoZWNrIHRoZSBjYXNpbm8ncyB3ZWJzaXRlIGZvciBzcGVjaWFscyBiZWZvcmUgZ29pbmcgdG8gdGhlIGNhc2luby4uIApKYW1lcyBCb25kIEJhbGwgdG8gcmFpc2UgZnVuZHMgaW4gbWVtb3J5IG9mIHR3byBZb3JrIG1lbiB3aG8gZGllZCBvZiBib25lIGNhbmNlcgpUaGV5IGNvdWxkIGJlIGluIGZvciBhIHR3byBkZWNhZGUgc3RyZXRjaCBvZiBhY3R1YWxseSBwYXlpbmcgdGVuYW50cyB0byBsaXZlIGluIHRoZSBob3VzZSBhbmQgY29uZG8uIApFc3NlbnRpYWxseSwgaXQgbWVhbnMgYnJlYXRoaW5nIG91dCBhcyBub3JtYWwgdGhlbiwganVzdCBiZWZvcmUgeW91IHJ1biBvdXQgb2YgYnJlYXRoLCBzdG9yaW5nIHNvbWUgYWlyIGluIHlvdXIgY2hlZWtzLiAKVGhpcyBpcyB0aGUgZmlyc3Qgc3R1ZHkgc3VnZ2VzdGluZyB0aGF0IEJvdG94IGFmZmVjdHMgdGhlIGFiaWxpdHkgdG8gdW5kZXJzdGFuZCB0aGUgZW1vdGlvbmFsIGNvbnRlbnQgb2YgbGFuZ3VhZ2UuICJCdXQgaGVyZSwgdGhhdCBsb29wIGlzIGRpc3J1cHRlZCwgYW5kIHRoZSBpbnRlbnNpdHkgb2YgdGhlIGVtb3Rpb24gYW5kIG9mIG91ciBhYmlsaXR5IHRvIHVuZGVyc3RhbmQgaXQgd2hlbiBlbWJvZGllZCBpbiBsYW5ndWFnZSBpcyBkaXNydXB0ZWQuIgpKUCB0ZXJlcyBhbHNvIGhhcyB0d28gcHJpdmF0ZSBkaW5pbmcgYXJlYXMgYW5kIGlzIGFuIGlkZWFsIHZlbnVlIGZvciBhZnRlciB3b3JrIGdldCB0b2dldGhlcnMsIGZhbWlseSBvY2Nhc2lvbnMgb3IgY2F0Y2hpbmcgdXAgd2l0aCBmcmllbmRzLiAKSSBhbHNvIGhhdmUgYSBiYWNrZ3JvdW5kIGluIHBzeWNob2xvZ3kgdGhhdCBJIHN0dWRpZWQgaW4gZ3JhZCBzY2hvb2wuIApUaGUgQ2FzaW5vIEdhbWJsaW5nIFBva2VyIHByb2dyYW0gY2hhbGxlbmdlZCB1c2VycyB0byBsb29rIGF0IG9ubGluZSBjYXNpbm9zIGFzIGFuIGludmVzdG1lbnQgYW5kIG5vdCBhcyBiZXR0aW5nLiBJdCBpcyB0aGlzIGRpZmZlcmVudCBhcHByb2FjaCB0aGF0IG1ha2VzIHRoaXMgcHJvZ3JhbSB1bmlxdWUgZW5vdWdoIHRvIGdpdmUgaXQgYSB0cnkuIApNb3N0IGltcG9ydGFudGx5LCBzaGUgd2FudHMgd29tZW4gdG8gdGFrZSBhIHN0YW5kIHdoZW5ldmVyIHRoZXkgY2FuLi4gCkhtLiAKVGhpcyBpbmNsdWRlcyBvZGQgdGhlIHBvdCBzaXplIGFuZCBydWxlcyBvZiB0aGUgZ2FtZS4gCkkgZGVjaWRlZCB0byB3cml0ZSBwYXBlcnMgZnJvbSBhIGNvbnNlcnZhdGl2ZSB2aWV3cG9pbnQuIApGdXJ0aGVybW9yZSwgaWYgeW91IGxvb2sgdGhyb3VnaCBteSBwb3N0IGhpc3RvcnkgeW91IHNlZSBleGFjdGx5IHdoZXJlIEkgc3RhbmQgb24gdGhlIGlzc3VlICAgaW4gZmF2b3Igb2YgUGFsZXN0aW5pYW4gc3RhdGVob29kLCBvcHBvc2VkIHRvIHNldHRsZW1lbnRzLCBob3BpbmcgR2FudHogd2lucyB0aGUgZWxlY3Rpb24gb3ZlciBOZXRhbnlhaHUuIE5vdCBvbmx5IGhhdmUgSSBiZWVuIHBheWluZyBhdHRlbnRpb24gdG8gd2hhdCBiZWVuIHBvc3RlZCBoZXJlLCBJIHBoeXNpY2FsbHkgQkVFTiB0byB0aGUgV2VzdCBCYW5rIGFuZCBrbm93IGZpcnN0IGhhbmQgd2hhdCBpdCBsaWtlLi4gCkluIGZhY3QsIEZhdXN0byBTdGVybGluZyBhcmd1ZXMsIHdoZW4gYWxsIG9mIHRoZXNlIGZhY3RvcnMgYXJlIHRha2VuIGludG8gYWNjb3VudCwgaXQgbWVhbnMgdGhhdCBzb21ldGhpbmcgbGlrZSAyIDQlIG9mIGFsbCBiYWJpZXMgYm9ybiBhcmUgbm90IGVhc2lseSBtYWxlIG9yIGZlbWFsZS4gCkkgaG9wZSB0byBiZSBhIGRlY2VudCBtb20gc29tZWRheS5zcGFnaGV0dGlsZWUyMTEyICA0IHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvU28gaWYgc29tZW9uZSBhZG1pdHMgdG8gbXlzZWxmIHRoYXQgdGhleSBtb2xlc3RlZCBhIGNoaWxkLCBJIGRvbiBoYXZlIHRvIHJlcG9ydCBpdD8gSSBhIGJpdCBjb25mdXNlZCBiZWNhdXNlIGVpdGhlciBldmVyeW9uZSBoYXMgdG8gb3Igbm8gb25lIGhhcyB0by4gClRoZXkgbmVlZCB0byBsb3NlIHNvbWV0aW1lcz8gTW9zdCBvZiB0aGUgdGltZSwgeW91IGtub3c/IE1vc3Qgb2YgdGhlIHRpbWUuIEkgbWVhbiwgdG8ga2VlcCB0aGVzZSBndXlzIGhhcHB5LiBSaWdodC4gUmVwb3J0ZXI6IEFuZCBpZiBhIHdoYWxlIHdhc24ndCBkcmF3biBpbiBieSBoZXIgYSBsaXN0IGFjdG9ycywgTW9sbHkgc2F5cyBzaGUgaGFkIGFuIGFjZSBpbiB0aGUgaG9sZSwgQWxleCBSb2RyaWd1ZXouIEFuZCBoZXJlJ3MgYSBzaG9ja2VyLiAKVGhlIG1vc3QgY29tbW9uIHRyZWF0bWVudCBpcyAibWVkaWNhbCBtYW5hZ2VtZW50IiB3aXRoIG1lZGljYXRpb24gdGhlcmFweS4gClRoZSBkaXJlY3RvcnMgcGxheSB1cCB0aGUgcml2YWwgc2lkZXMgdGhyb3VnaCB0aGUgdXNlIG9mIHRoYXQgMzAwIHBsdXMgaG91cnMgb2YgbmV3cyBmb290YWdlIGFuZCBjdXJyZW50IGRheSBpbnRlcnZpZXdzIHdpdGggYSBoYW5kZnVsIG9mIGtleSBwbGF5ZXJzLiBUaGUgc3RvcnkgcG9ydHJheXMgdGhlIFJham5lZXNoZWVzLCBvbiBvbmUgaGFuZCwgYXMgcGVhY2VmdWwgbGVmdG92ZXJzIGZyb20gc28gbWFueSBTdW1tZXJzIG9mIExvdmUsIGFuZCBvbiB0aGUgb3RoZXIgYXMgZ3VuIHRvdGluZywgc2V4IGhhcHB5IGRldm90ZWVzIG9mIGEgYmVhcmRlZCBSb2xscyBSb3ljZSBsb3ZpbmcgZ3VydS4gKEJoYWd3YW4sIGFsbW9zdCBhIGJpdCBwbGF5ZXIgaW4gIldpbGQgV2lsZCBDb3VudHJ5LCIgaGFkIG1vcmUgdGhhbiA5MCBSb2xscyBSb3ljZXMgYXQgUmFqbmVlc2hwdXJhbSBhdCBvbmUgdGltZSwgYWxvbmcgd2l0aCB0d28gamV0cyBhbmQgYSBwcml2YXRlIGFpcnN0cmlwLikKV2hhdCBzaG91bGQgYmUgZG9uZSB0byB0aGlzIG1hbiBpcyBub3QgbXkgY2hvaWNlLgpadSBNYXR1c293IGhydCBtYW4gZGllIHZlcnJja3Rlc3RlbiBTYWNoZW4uIFNvIHNvbGwgZXIgMiBNaWxsaW9uZW4gRG9sbGFyIHZlcmxvcmVuIChhYmVyIG5pY2h0IGJlemFobHQpIGhhYmVuLCBhbHMgZXIgbWl0IGVpbmVtIGFuZGVyZW4gU3BpZWxlciB3ZXR0ZXRlLCBvYiBkaWVzZXIgaW5uZXJoYWxiIHZvbiB3ZW5pZ2VuIE1vbmF0ZW4gZWluZSBncnNzZXJlIE1lbmdlIEtpbG8gKEdld2ljaHQpIGFibmVobWVuIGtubnRlLiBVbmQgbGVnZW5kciBzaW5kIHNlaW5lIE1lbHRkb3ducyBBbHNvIHNvd2FzIHdpZSBlaW5lIGJ6dy4gCkVpZ2VuZXIgV2VyYnVuZyBoYW5kZWx0IGVzIHNpY2ggYmVpbSBkZSBsYSBTZWRhIGluIEVsIFBhbHNvIHVtIGRhcyBlaW56aWdlIFNlaWRlbm11c2V1bSBFdXJvcGFzLiBFcyBpc3QgYWJlciBuaWNodCBudXIgTXVzZXVtLCBzb25kZXJuIGF1Y2ggV2Vya3N0YXR0IGZyIGt1bnN0aGFuZHdlcmtsaWNoZSBTZWlkZW5oZXJzdGVsbHVuZyB1bmQgIHZlcmFyYmVpdHVuZy4gQXVmIHp3ZWkgU3RvY2t3ZXJrZW4gZXJmdWhyZW4gd2lyIFRoZW9yZXRpc2NoZXMgdW5kIFByYWt0aXNjaGVzIHp1bSBUaGVtYSBTZWlkZSB1bmQgZGEgZGllc2UgZnJoZXIgZWlubWFsIGdyb2UgQmVkZXV0dW5nIGZyIGRpZSBJbnNlbCBoYXR0ZS4KQW5kIHlvdSBjYW4gc2F5IGplc3VzIHdvdWxkIGhlbHAgdXMuIAoiVGhyb3VnaCB0aGUgZ29vZCB0aW1lcyBhbmQgdGhlIGJhZCwgdGhlIGhhcmQgdGltZXMgYW5kIHRoZSBlYXN5LCBzaGUgaGFkIGltbWVuc2UsIGltbWVuc2UgY29tcGFzc2lvbiBmb3IgaGVyIHBhdGllbnRzLCIgc2FpZCBTY290dCBSdXRhbiwgYSBwc3ljaG9sb2dpc3Qgd2hvIHdhcyBhIGNvbGxlYWd1ZSBhbmQgZnJpZW5kIGZvciBtYW55IHllYXJzLiAiVGhlIG1vcmUgZGlzdHVyYmVkLCB0aGUgbW9yZSBzaGUgY2FyZWQgZm9yIHRoZW0gYW5kIHVuZGVyc3Rvb2QgdGhlbS4gU2hlIHVuZGVyc3Rvb2QgdGhhdCBhbnlib2R5IHdobyB3YWxrZWQgaW50byBoZXIgb2ZmaWNlIGhhZCBlYXJuZWQgdGhlaXIgaGVhcnRhY2hlIGhvbmVzdGx5LiIuIApXZWxsLCBhY3R1YWxseSB5b3UgaGF2ZSwgYnV0IHlvdSBqdXN0IGRvbiByZWFsaXplIGl0LiBDZWxpYWMgZGlzZWFzZSBhbmQgZ2x1dGVuIHNlbnNpdGl2aXR5IG1hc3F1ZXJhZGUgYXMgZG96ZW5zIGFuZCBkb3plbnMgb2Ygb3RoZXIgZGlzZWFzZXMgd2l0aCBkaWZmZXJlbnQgbmFtZXMuClRoaXMgaXMgZnVja2luZyBpbmZ1cmlhdGluZywgaXNuIGl0PyBJZiB5b3UgZ29vZ2xlIHRoaXMgaXNzdWUsIGl0IFZFUlkgY29tbW9uLiBJdCBsaXRlcmFsbHkgdGFrZXMgMTUgc2Vjb25kcy4gClRoZSBhcmd1bWVudCBpcyBtb290IGFueXdheSBiZWNhdXNlIHdoZXRoZXIgaXQgd2FzIGJlbmVmaWNpYWwgb3Igbm90IGNhcGl0YWxpc20gaXMgYnJlYWtpbmcgZG93biwgcGVybWFuZW50bHkuIFdlIGNhbiBlaXRoZXIgYmUgcmVhZHkgdG8gaGVscCBwZW9wbGUgYW5kIHN1cHBvcnQgb3VyIGZlbGxvdyBtYW4gYW5kIGFzc2lnbiBvbmx5IHRoZSBsYWJvciByZXF1aXJlZCB0byBrZWVwIHRoZSBzb2NpZXR5IHJ1bm5pbmcgb3Igd2UgY2FuIGdvIHRoZSB3YXkgb2YgdGhlIGxpYmVydGFyaWFuIHBhcmFkaXNlIGFzIGZlYXR1cmVkIGluIE1hZCBNYXggYW5kIGNvbnRpbnVlIHBsYXlpbmcgYSB3YXN0ZWZ1bCBwcm9wZXJ0eSBzcXVhYmJsaW5nIGdhbWUgdW50aWwgd2UgY2hldyB1cCBhbGwgdGhlIHJlc291cmNlcyBvbiB0aGUgcGxhbmV0LiBZb3VyIGNob2ljZS4uIApJZiB5b3UgZmFjaW5nIGFuIGFsbCBpbiBhbmQgYXJlIGxhc3QgdG8gYWN0LCBzcHIgYW5kIHBvdCBvZGRzIHdpbGwgYmUgdXNlZCBtb3JlIG9yIGxlc3MgdGhlIHNhbWUsIHdoaWNoIGlzIHdoYXQgSSB0aGluayB5b3UgcmVmZXJyaW5nIHRvLCBidXQgdGhhdCBhbiBpcnJlbGV2YW50IGNvbXBhcmlzb24uIElmIHRoZSBzcHIgaXMgaGlnaGVyIG9yIGxvd2VyIGl0IHdpbGwgY2hhbmdlIHlvdXIgc3RyYXRlZ3kgaW4gdGVybXMgb2Ygd2hhdCBoYW5kcyB0byBjYmV0LCB3aGF0IHNpemluZyB0byB1c2UsIHdoYXQgaGFuZHMgdG8geC9yLCBldGMuIApTaGUgZGVjaWRlZCB0byBwaWNrIHVwIHNvbWUgbGl0dGVyIHRvIG1ha2UgdGhlIHBhcmsgbG9vayBuaWNlciBzbyBzaGUgd2FzIHRocm93aW5nIGF3YXkgcG9wIGJvdHRsZXMsIGNoaXAgYmFncyBldGMgYW5kIGhlIHdhbnRlZCB0byBoZWxwLkhlIHN0b29wcyB0byBwaWNrIHVwIHNvbWUgY2lnYXJldHRlIGJ1dHRzIGFuZCBteSB3aWZlIHNheXMgbGVhdmUgdGhvc2UgdG8gbW9tbXkgKHNoZSB3YXNuIGdvaW5nIHRvIHBpY2sgdGhlbSB1cCBidXQgZGlkbiB3YW50IGhpbSB0byB0b3VjaCB0aGVtIGVpdGhlcikuQSBmZXcgbWludXRlcyBsYXRlciBoZSBoYXMgZ29uZSB0byBwbGF5LiBIZSB0ZWxscyBhbm90aGVyIG1vbSwgIkkgZmluZGluZyBjaWdhcmV0dGVzIGZvciBtb21teSIuTXkgd2lmZSB3YXMgc28gZW1iYXJyYXNzZWQgYW5kIHNhaWQgc2hlIGdvdCB0aGUgZGlydGllc3QgbG9va3MgZnJvbSBuZWFyIGJ5IHBhcmVudHMgd2hvIGhlYXJkIHRoaXMubW9tZGFkaW1wb3BwdW5rICAyNCBwb2ludHMgIHN1Ym1pdHRlZCAyNyBkYXlzIGFnb1RoaXMgaXMgd2hlcmUgdGhlICJiZW5ldm9sZW50IiBwYXJ0IGNvbWVzIGludG8gcXVlc3Rpb24sIG1hbi4gCllvdSBnZXQgdGhlIHBvaW50LiAKQXNrIEtpZCAxIHRvIGltYWdpbmUgdGhhdCB0aGV5IGFyZSBTaWJsaW5nLiBEb2VzIHNjcmVhbWluZyBhbmQgc2hvdXRpbmcgZ2V0IHlvdSB3aGF0IHlvdSB3YW50PyBXaGF0IG1pZ2h0IHdvcmsgaW5zdGVhZD8gUHJhY3RpY2Ugd2l0aCB5b3VyIGtpZCBhbmQgbW9kZWwuIEVuY291cmFnZS4gCkhhbmQgYmVjb21lcyBhbG90IG1vcmUgaW50ZXJlc3RpbmcgaWYgdGhlIHJpdmVyIHdhc250IGEgZGlhbW9uZC4gSXRzIHZlcnkgcGxheWVyIGRlcGVuZGVudCBzcG90IGFuZCBpIHRoaW5rIGkgd291bGQgZm9sZCBhZ2FpbnN0IHN0cmFpZ2h0IGZvcndhcmQgcGxheWVyIGFuZCBjYWxsIHZzIGxvb3NlciBvbmVzIHByYXlpbmcgdGhleSBoYXZlIDIyIG9yIEFkeCBibHVmZi4KSSB3YXMgYSB0ZWVuYWdlciwgYWJvdXQgMTYuIFR3byBmcmllbmRzIGFuZCBJICgzIGd1eXMpIHdlbnQgdG8gb3VyIGZyaWVuZCAoZ2lybCkgaG91c2UuIFNoZSB3YXMga2luZCBvZiBrbm93biB0byBiZSBsb29zZSBidXQgbm9uZSBvZiB1cyB3ZXJlIG9uIHRoYXQuIFdlIHdlcmUganVzdCBraWNraW4gaXQgYmVjYXVzZSBzaGUgd2FzIGFjdHVhbGx5IHByZXR0eSBjb29sIHdoZW4geW91IGdvdCB0byBrbm93IGhlci4gV2UgYWxsIHdhdGNoaW5nIHR2IGFuZCB0aGlzIG9sZGVyIGd1eSByZWxhdGl2ZSB3YWxrcyBpbiB3aXRoIGEgYnJpZWYgY2FzZSBidXQgaGUgYWludCBhIGJ1c2luZXNzIG1hbi4gSGUgd2FzIHdlYXJpbmcgYSB0YWxsIGJsYWNrIHRzaGlydCB3aXRoIFRvbnkgdGhlIHRpZ2VyIGJsaW5nZWQgb3V0IG9uIGl0IGFuZCBiYWdneSBhc3MgamVhbnMgd2l0aCBhIGZpdHRlZCBoYXQuIEhlIG1heWJlIDI1IG9yIHNvLiBIZSBnb2VzIHdobyB0ZiBhcmUgeW91IGd1eXM/IFNob2NrZWQgYWYgbm8gb25lIGFuc3dlcnMuIEkga25vdyBpdCBsb29rZWQgYmFkIGJlY2F1c2Ugd2Ugd2VyZSBhbGwgYWxvbmUgd2l0aCBoZXIgYnV0IHdlIHdlcmUgZnVsbHkgY2xvdGhlZCBhbmQgaW4gdGhlIGxpdmluZyBhcmVhLiBBZnRlciBsaWtlIDEwIHNlY3Mgb2Ygc2lsZW5jZSBoZSBnZXRzIGlycml0YXRlZCBhbmQgZ29lcyBhd2F5LiBCcm8gY29tZXMgYmFjayBpbiBhIGZldyBzZWNzIHdpdGggYSBmdWNraW5nIHN0cmFwLiBJdCBsb29rZWQgbGlrZSBhIGdsb2NrLiBIZSBhc2tlZCB1cyBhZ2FpbiB3aG8gd2Ugd2VyZS4gQm90aCBvZiBteSBmcmllbmRzIGltbWVkaWF0ZWx5IGphbW1lZCB1cC4gSSBsb29rIG92ZXIgYXQgdGhlIGdpcmwgYW5kIHNoZXMgZnJvemVuIHRvby4gWW91IGtub3cgaXRzIGJhZCB3aGVuIHRoZSBwZXJzb24gY2xvc2UgdG8gdGhlbSBpcyBqdXN0IHNpdHRpbmcgdGhlcmUgc2hvY2tlZCB0b28uIFRoZSBndXkgaW1tZWRpYXRlbHkgY2FsbWVkIGRvd24gYW5kIGxlZnQgdGhlIHJvb20uIFdlIGdvdCB0ZiB1cCBnb3Qgb3VyIHNoaXQgYW5kIHN0YXJ0ZWQgbGVhdmluZy4gTmFhYWFhaCB3ZSBnb29kIHRvIGdvIGJyby4KU3BlYWtpbmcgZnJvbSBleHBlcmllbmNlLCBzdGlua3kgY2x1bXBzIG9mIGN1cmRsZWQgYnV0dGVybWlsayBpcyBub3QgdGhlIGJlc3Qgd2F5IHRvIHB1dCBhbiBlbmQgdG8gdGhlIGV2ZW5pbmcuIApXaGVyZSBjYW4geW91IHBsYXkgQ2FyaWJiZWFuIHBva2VyIG9ubGluZQpUaGUgc2Vjb25kIGFubnVhbCBVbmxlYXNoIHRoZSBWaXNpb24gYmVuZWZpdCBldmVudCBpcyBzZXQgdG8gZW50ZXJ0YWluIHRoZSBkaXNjZXJuaW5nIHRhc3RlcyBvZiBhbGwgb24gdHdvIGFuZCBmb3VyIGxlZ3MuIENyZWF0ZWQgYXMgYSBmdW5kcmFpc2VyIGZvciBub24gcHJvZml0IEZlZWRpbicgdGhlIFBlb3BsZSAoRlRQKSwgdGhlIEF1Z3VzdCAxMSBldmVudCBhdCBSaXZlcmJlbmQgUGFyayB3aWxsIHJhaXNlIG1vbmV5IHRvIHByb3ZpZGUgaGVhbHRoeSBudXRyaXRpb3VzIGZvb2QgZm9yIGNoaWxkcmVuIGFuZCBmYW1pbGllcyBpbiB0aW1lcyBvZiBuZWVkLgpTaGUgZG9lc24gdGVsbCBhbnl0aGluZyB0aGF0IGRvZXNuIGNvbmNlcm4gdGhlbS4gClRoZSBmbGlwIHNpZGUgb2YgdGhpcyBjb2luIGlzIHRoYXQgdGhlIHByaXZpbGVnZWQgYXJlIGFibGUgdG8gc2xpcCBvdXQgb2YgdGhlIGxhdyByZWFjaCwgZXNwZWNpYWxseSB3aGVuIGl0IGNvbWVzIHRvIGRyaW5raW5nIGFuZCBkcml2aW5nLiBUaGVzZSBwZW9wbGUgaGF2ZSBjYXJzLiAKRXZlbiBpbiB0aGUgcG9vcmVzdCBjb3VudHJ5IGluIHRoZSB3b3JsZCwgdGhlIHBlb3BsZSBoYXZlIGEgaGlnaGVyIGxpZmUgZXhwZWN0YW5jeSBhbmQgYXJlIG1vcmUgbGlrZWx5IHRvIHNlZSB0aGVpciBjaGlsZHJlbiByZWFjaCBhZHVsdGhvb2QgdGhhbiB0aGUgcGVvcGxlIEkgc3R1ZHkuIApUaGVyZSBpc24ndCBhbnl0aGluZyB0byBzZWUgaW4gQ3JhY2tlbmJhY2suIEl0IGlzIGFuIGFjY29tbW9kYXRpb24gcmVzb3J0IHdpdGhvdXQgc2tpIGxpZnRzIEkgd291bGQgdmlzaXQgVGhyZWRibywgY2F0Y2ggdGhlIGNoYWlybGlmdCB1cCwgYW5kIHdhbGsgb3V0IHRvIE10IEtvc2NpdXN6a28gaWYgY29uZGl0aW9ucyBhcmUgZ29vZC4gCkZyb20gRmFjZWJvb2sgVGhlIGJlc3Qgd2F5IHRvIGdldCBsb2FkcyBvZiBwb2tlciBjaGlwcyBvbiBmYWNlYm9vayBpcyB0byBhc2sgb3RoZXIgcGxheWVycyB0byBkb25hdGUgdGhlaXIgY2hpcHMgdG8geW91IG9yIGJ1eSB0aGVtIGZyb20gdmFyaW91cyBzaXRlcyB3aGljaCBtYXkgYmUgdW50cnVzdHdvcnRoeS4gClRoaXMganVzdCByZW1pbmRlZCBhYm91dCBzb21ldGhpbmcgbXkgaHVzYmFuZCBhbmQgSSBkaWQgbGFzdCB5ZWFyLiAKSSBkb24ga25vdyB0aGUgbWFnbml0dWRlIG9mIHdoaWNoIHRoYXQgaGUgImhpdCBpdCBiaWciIGJ1dCBJIHNlZW4gbWFueSBwZW9wbGUgaW4gbXkgbGluZSBvZiB3b3JrIHdpdGggZmFpbGVkIHN0YXJ0IHVwcyBhbmQgZmluYW5jaWFsIHByb2JsZW1zIGZyb20gcG9vciBzcGVuZGluZyBjaG9pY2VzLlRoZSBsYWRkZXIgdG8gc3VjY2VzcyBpcyB1bmZvcnR1bmF0ZWx5IGxvbmVseS4gTHVja2lseSB0aGVzZSBwZW9wbGUgYXJlIG1ha2luZyB0aGVtc2VsdmVzIGtub3duIHJhdGhlciBlYXJseS5UaGUgZ29hbCBvZiB3b21lbiBpbiB0aGlzIHN1YnJlZGRpdCBpcyB0byBpbnNwaXJlIGEgbWFuIGRlc2lyZSB0byBjb21taXQgdG8gdXMgaW4gYSB3YXkgdGhhdCBkaWZmZXJlbnQgdGhhbiB0aGUgc29jaWV0YWwgbm9ybSBvZiBwcmVzc3VyaW5nIG1lbiBhbmQgcHVzaGluZyB0b3VnaCBzdWJqZWN0cy4gCklmIGV2ZXJ5IHNlbnRpZW50IGJlaW5nIHRoYXQgZXhpc3RlZCB3YXMgdGhlaXIgb3duIEdvZCBub29uZSBjb3VsZCB0cnVseSBiZSBoYXBweS4uIApJZiB5b3Ugd2FudCB0byBoYXZlIHlvdXIgcmVhZGVycyBmb2N1cyBvbiB0aGUgYmFzaWMgQ2xheSBQb2tlciBDaGlwcyB0aGF0IHlvdSBoYXZlLCB0aGVuIHlvdSBzaG91bGQgY3JlYXRlIGEgY2FtcGFpZ24gZm9yIHRob3NlIHByb2R1Y3RzLiAKV2lubmluZyBpbXByb3ZlcyB0aGUgZm9ydHVuZXMgb2YgYW5vdGhlciByaWNoIHdoaXRlIGxpYmVyYWwgZ3V5ICAgZnJpZW5kIG9mIFNoYXBsZWlnaCAgIEF1c3RpbiBNYXlvciBTdGV2ZSBBZGxlci4gVGhlcmUgaXMgYSByZWFzb24gd2h5IHlvdSBkbyBub3Qgc2VlIEJldG8gaGVscGluZyBvdGhlciBEZW1vY3JhdHMgb24gdGhlIHRpY2tldC4uIApUaGUgb3Bwb3NpdGlvbiBsYWJlbGxlZCB0aGUgY3V0IGEgc2hhbSwgc2F5aW5nIHRoZSBudW1iZXIgb2YgbWFjaGluZXMgaW4gb3BlcmF0aW9uIHdhcyBhYm91dCA5OCwwMDAuIEl0IHdhcyByZXZlYWxlZCByZWNlbnRseSB0aGF0IHBva2VyIG1hY2hpbmUgcGxheWVycyB3ZXJlIGxvc2luZyBtb3JlIHRoYW4gJDFtaWxsaW9uIGEgd2VlayBpbiBBbGJ1cnkncyBsaWNlbnNlZCBjbHVicyBhbmQgcHJvYmFibHkgJDI1MCwwMDAgaW4gaG90ZWxzLiBTdCBEYXZpZCdzIFVuaXRpbmcgQ2FyZSBnYW1ibGluZyBjb3Vuc2VsbG9yIEJhcnJ5IFByYXRlciBzYWlkIHN0b3BwaW5nIG1vcmUgcG9rZXIgbWFjaGluZXMgd2FzIHZpdGFsIGZvciBBbGJ1cnksIHdoaWNoIGhhZCBhIG1ham9yIGlzc3VlIHdpdGggcHJvYmxlbSBnYW1ibGluZy4gClBlb3BsZSBzYXkgdGhleSBkb24ndCBmbG9hdCB3ZWxsIGR1ZSB0byB0aGVpciBsb3cgYm9keSBmYXQsIGJ1dCBob25lc3RseSBJIGRvbid0IHRoaW5rIHRoYXQncyB0aGUgcHJvYmxlbSwgaXQgc2VlbXMgbW9yZSBvZiBhICJ0aGV5IGhhdmUgbm8gaWRlYSB3aGF0IHRoZXkncmUgZG9pbmcgYW5kIG5vIG5hdHVyYWwgaW5zdGluY3QuIiBMb2wuIEknbSBmcm9tIEZMIGFuZCBhbG1vc3QgZXZlcnkgZ3JleWhvdW5kIEkga25vdyBjYW4gc3dpbSwganVzdCB0b29rIGEgd2hpbGUgdG8gdGVhY2ggdGhlbS4gCkhvd2V2ZXIsIGFsbW9zdCBhbGwgb2YgdGhpcyB3b3JrIGhhcyBiZWVuIHVuZGVydGFrZW4gaW4gbm9uZWxpdGUgYXRobGV0ZXMgYW5kIHBhcnRpY2lwYW50cyB3aG8gZG8gbm90IHJvdXRpbmVseSBvcGVyYXRlIHVuZGVyIGNvbmRpdGlvbnMgb2YgaGlnaCBzdHJlc3MuIApCdXQgd2hpbHN0IEkgdGhpbmsgb3ZlcmFsbCBoaXMgd29yayBtYWtlcyBoaW0gYSBoZXJvIGZvciBjb25zZXJ2YXRpb24sIEkgY2FuIHNlZSB3aHkgb3RoZXJzIHRha2UgYW5vdGhlciB2aWV3LCBhbmQgSSBub3QganVzdCBnb2luZyB0byBkaXNyZWdhcmQgdGhhdCBiZWNhdXNlIEkgbGlrZWQgaGltLgpUaGVyZSBhIHdpbmUgYW5kIGNob2NvbGF0ZSBmYWlyIG5leHQgd2Vla2VuZCBhbmQgSSBzZW50IGl0IHRvIG15IGh1c2JhbmQgYWxsIGV4Y2l0ZWQgbGlrZSBoZXksIHRoaXMgbG9va3MgbGlrZSBzb21ldGhpbmcgZnVuIHRvIGRvISBBbmQgdGhlbiBJIHJldmlld2VkIHRoZSB2ZW5kb3IgbGlzdC4gWWVhIHRoZXJlIHBsZW50eSBvZiBsZWdpdCB2ZW5kb3JzLCBidXQgYWZ0ZXIgSSBnb3QgdG8gbXkgOHRoIE1MTSBiZWZvcmUgSSBwYXNzZWQgdGhlICJNIG9uIHRoZSBhbHBoYWJldGljYWwgdmVuZG9ycyBsaXN0LCBJIGp1c3Qgc2VudCBoaW0gYSBkZWplY3RlZCAibmV2ZXJtaW5kLiBMZXRzIHRha2UgdGhlIGtpZHMgdG8gdGhlIHBhcmsgaW5zdGVhZCIuCk1lZGlhIHNvdXJjZXMgc2F5IHRoZXJlIGhhcyBhbHNvIGJlZW4gYSBiZWhpbmQgdGhlIHNjZW5lcyBjYW1wYWlnbiB0byBhdHRyaWJ1dGUgYmxhbWUgZm9yIHRoZSBjaGFyaXR5IGZhaWx1cmUgdG8gZm9ybWVyIGNoaWVmIGV4ZWN1dGl2ZSBDb2xlbWFuIGRlc3BpdGUgaGVyIGJlaW5nIGVtcGxveWVkIGFzIENFTyBmb3Igb25seSB0aHJlZSBtb250aHMuIApXaWtpcGVkaWEgaGFzIGEgc3RyYWlnaHRmb3J3YXJkIGd1aWRlIHRvIHRoZSBydWxlcyBvZiBjcmliIGhlcmUuUGFydCBvZiB0aGUgZnVuIG9mIGNyaWJiYWdlIGlzIGl0cyBleHBhbnNpdmUgaW5zaWRlciBqYXJnb24uIApJIGRvbnQgZ2V0IGl0LCBidXQgaXQgdHJ1ZS4uIApDaGVjayBSZXNpZGVudCBBZHZpc29yIGFuZCBzZWUgaWYgYW55IERKcyB5b3UgbGlrZSBhcmUgcGxheWluZyB0aWNrZXQgZXZlbnRzIGluIEJlcmxpbiwgYW5kIHRoZW4gYnV5IHRoZSB0aWNrZXRzLiAKQnV0LCB1bmxpa2Ugb3VyIEV1cm9wZWFuIG9yIEFtZXJpY2FuIGNvdW50ZXJwYXJ0cywgQ2FuYWRhIGhhcyBiZWVuIHNsb3cgdG8gYWRvcHQgdGhpcyBjb25zdHJ1Y3Rpb24gbWV0aG9kIGZvciB1cmJhbiBkZXZlbG9wbWVudHMuIApJZiB5b3UgbG9vayBhdCBjbGltYXRlIGNoYW5nZSBoeXN0ZXJpYSBhcyB0aGUgcHJvcGFnYW5kYSB1c2VkIHRvIGp1c3RpZnkgaW5zYW5lIHRyYWRlIHdhciBwb2xpY3kuIApTaW5nYXBvcmVhbiBCcnlhbiBIdWFuZywgMjQsIGlzIG9uZSBzdWNoIHJpc2luZyBzdGFyIGFuZCBhIGZhdm9yaXRlIGluIHRoaXMgd2VlaydzIHRvdXJuYW1lbnQuIExhc3QgeWVhciwgaGUgbW92ZWQgdG8gTWFjYXUgdG8gZGV2ZWxvcCBoaXMgY2FyZWVyIGFzIGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllci4gSGUgc3BlbmRzIGhpcyBkYXlzIGJldHRpbmcgb24gYXMgbWFueSBhcyAxMiBzaW11bHRhbmVvdXMgdGFibGVzIG9ubGluZSwgYW5kIHRoZW4gcGxheXMgaW50byB0aGUgbmlnaHQgaW4gY2FzaCBnYW1lcyBhdCB0aGUgR3JhbmQgTGlzYm9hLiAKT25seSB0aW1lIHdpbGwgdGVsbCB3aGV0aGVyIERvbmFsZCBUcnVtcCBpcyBhbiBpc29sYXRpb25pc3Qgb3IgYW4gaW50ZXJ2ZW50aW9uaXN0LiAKTWFueSBvZiB0aGUgaHVtYW4gc3R1ZGllcyBhcmUgc21hbGwgc2NhbGUuIChEciBEdW5zdGFuJ3MgcGFwZXIsIGZvciBleGFtcGxlLCBpbnZvbHZlZCBqdXN0IDE5IHBhcnRpY2lwYW50cy4pIEFuZCBub3QgZXZlcnkgc3R1ZHkgdGhhdCBoYXMgZ29uZSBsb29raW5nIGZvciB0aGUgaWxsIGVmZmVjdHMgb2YgaW5hY3Rpdml0eSBoYXMgZm91bmQgdGhlbS4Ke1BVTklRQklOR0lNQUdFfSB7L1BVTklRQklOR0lNQUdFLiAKTm8geW91IGFyZW4gbGF6eS4gWW91IGhvbmVzdGx5IHRoZSBoYXJkZXN0IHdvcmtpbmcgb25lIGluIHlvdXIgZmFtaWx5IHJpZ2h0IG5vdyBpZiB5b3UgY291bnQgZGl2aXNpb24gb2YgbGFib3IsIGNob3JlcywgYW5kIGFtb3VudCBvZiB0aW1lIHNwZW50IHJlc3RpbmcuIEhlIGdldHMgdG8gZ28gdG8gd29yayBhbmQgYmUgYSByZXNwb25zaWJsZSBhZHVsdCBhbGwgZGF5IGFuZCBub3Qga2VlcCBhIHRpbnkgYmFieSBhbGl2ZS4gClRoaXMgaXMgbm90IGZpY3Rpb24uIApBbHRob3VnaCBUaGUgRmFtZSBNb25zdGVyIGlzIG5vdCBhbHNvIDEgaW4gVVMgQmlsbGJvYXJkLiAKVGhlIHNpbmdsZSBsYXJnZXN0IHBhcnQgb2YgdGhlIFJlY292ZXJ5IEFjdCAgIG1vcmUgdGhhbiBvbmUgdGhpcmQgb2YgaXQgICBpcyB0YXggY3V0czogOTUgcGVyY2VudCBvZiB3b3JraW5nIEFtZXJpY2FucyBoYXZlIHNlZW4gdGhlaXIgdGF4ZXMgZ28gZG93biBhcyBhIHJlc3VsdCBvZiB0aGUgYWN0LiBUaGUgc2Vjb25kIGxhcmdlc3QgcGFydCAgIGp1c3QgdW5kZXIgYSB0aGlyZCAgIGlzIGRpcmVjdCByZWxpZWYgdG8gc3RhdGUgZ292ZXJubWVudHMgYW5kIGluZGl2aWR1YWxzLiBUaGUgbW9uZXkgaXMgYWxsb3dpbmcgc3RhdGUgZ292ZXJubWVudHMgdG8gYXZvaWQgbGF5aW5nIG9mZiB0ZWFjaGVycyAoMTQsMDAwIGluIE5ldyBZb3JrIENpdHkgYWxvbmUpLCBmaXJlZmlnaHRlcnMgYW5kIHBvbGljZSBvZmZpY2VycyBhbmQgcHJldmVudGluZyBzdGF0ZXMnIGJ1ZGdldCBnYXBzIGZyb20gZ3Jvd2luZyB3aWRlci4uIApJdCBiZWNhdXNlIHRoZSB3aG9sZSByZWFzb24gdGhleSBob3BwZWQgb24gdGhlIGJpa2Ugd2FzIHNvIHRoYXQgdGhleSBjb3VsZCBoYXZlIHRoZSBzb21ld2hhdCBsYWNrbHVzdGVyIGxldmVsIG9mIGdhaW5zIHRoYXQgbmF0dGllcyBjYW4gYWNoaWV2ZSB3aGlsZSBraWxsaW5nIHRoZW1zZWx2ZXMgb24gaXQsIGJ1dCB3aXRob3V0IGFsbCB0aGUgZWZmb3J0LiAKQnV0IGtub3dpbmcgdGhlIFN3aXNzIHBhY2UgSSBiZWxpZXZlIHRoYXQgdGhlIEVVIHJlYWNoZXMgYW4gYWdyZWVtZW50IGZpcnN0LCB0aGF0IHdlIHRoZW4gc2lsZW50bHkgam9pbjpEVGhlIHRoaW5nIGlzIHRoYXQgdGhlIGdvdmVybm1lbnQgZGlkbiBtYWtlIHRoZSBkZWNpc2lvbi4gClRoZSBLb3JlYW4gdGVjaCBnaWFudCB3YXMgc2hvd2Nhc2luZyBhIDVHIHByb3RvdHlwZSB0aGlzIHdlZWssIGJ1dCBpdCBkaWRuJ3QgKGFuZCBjb3VsZG4ndCkgc2hvdyBvZmYgNUcgc3BlZWRzLCB3aGljaCBhcmUgcm91Z2hseSAyMDAgdGltZXMgZmFzdGVyIHRoYW4gd2hhdCdzIGN1cnJlbnRseSBhdmFpbGFibGUgaW4gdGhlIG1hcmtldC4KUHJlIG1hcml0YWwgY291bnNlbGluZyBpcyBhIHJlYWxseSBnb29kIHBsYWNlIHRvIGRpc2N1c3MgZW1vdGlvbmFsIHRvcGljcyBsaWtlIGhvdyBtdWNoIHRvIHNwZW5kIG9uIHlvdXIgd2VkZGluZy4uIApXaGF0IG1ha2VzIHRoZSBkZXNpZ24gc28gc3BlY2lhbCBpcyB0aGF0IDEwIGRpZmZlcmVudCBjb2xvcnMgYXJlIHdlYXZlZCBpbnRvIHRoZSBsb29rIG9mIHRoZSBzZXQuIEFuZCB0aGUgcHJvZHVjdGlvbiBvZiB0aGVzZSBwYXJ0aWN1bGFyIGNoaXBzIGRlYWxzIHdpdGggdGhlIHVzYWdlIG9mIGEgY29tcG9zaXRlIHJlc2luIHRoYXQgYWRkcyBhIHdlaWdodGVkIGZlZWwgdG8gdGhlIGNoaXBzLiBUaGF0IGlzIHByb2JhYmx5IHRoZSBvbmUgdG91Y2ggdGhhdCBpcyBtb3N0IGV2b2NhdGl2ZSBvZiBwcm9mZXNzaW9uYWwgY2FzaW5vIHF1YWxpdHkgZGVzaWduLiAKQWN0aXZlbHkgcmV3YXJkZWQuLiAKQW5kIHllYSwgdGltZS9tb25leSBvciB0eXBlIG9mIGhhaXIgbWlnaHQgYmUgYW4gaXNzdWUsIGJ1dCBJIHN1cmUgdGhhdCBub3QgdGhlIG9ubHkgZmFjdG9yIGNvbnNpZGVyaW5nIGlmIHlvdSBob3Agb3ZlciB0byBKYXBhbiwgQ2hpbmEsIFZpZXRuYW0gZXRjIHlvdSBzZWUgd2FhYWFhYWFheSBtb3JlIHZhcmlldHkgaW4gaGFpcmN1dHMuIApDYW5jZXIgKEp1bmUgMjEgSnVseSAyMilUb2RheSBpcyBhbiA4ICAgWW91ciB0ZWFtIGNvbWVzIHRvIHlvdXIgcmVzY3VlIGJlZm9yZSB0aGluZ3MgZ2V0IGF3a3dhcmQuIFN0YXkgZ3JhY2lvdXMgcHVibGljbHksIGRlc3BpdGUgdW5wcmVkaWN0YWJsZSBjaXJjdW1zdGFuY2VzLiBNYWtlIHBsYW5zLCBhbmQgYWRhcHQgdGhlbSBvbiB0aGUgZmx5LgpBbHNvIGtlZXAgaW4gbWluZCB0aGF0IHlvdSBjYW4gcmVzdCBpbiBhbG1vc3QgYW55IHdpbGRlcm5lc3MgYXJlYSBpbmNsdWRpbmcgdGhlIG1pbmVzLCB5b3UgZG9uIGhhdmUgdG8gbGVhdmUgZW50aXJlbHkuIApPciBpZiBuYXRpb25hbCBjcmVkaWJpbGl0eSBpcyBlcm9kZWQgYnkgYWJydXB0bHkgbGVhdmluZyBpbnRlcm5hdGlvbmFsIGFncmVlbWVudHMuIE9yIGlmIHRoZSBsZWFkZXIgb25seSByZXByZXNlbnRzIGhpcyBkd2luZGxpbmcgYmFzZS4gT3IgaWYgb3VyIGluc3RpdHV0aW9ucyBhbmQgaW5mcmFzdHJ1Y3R1cmUgY3J1bWJsZS4uIApJdHMgbW92ZW1lbnQgdGhyb3VnaCB0aGUgam9pbnQgc3BhY2UgaXMgZGVwZW5kZW50IG9uIG1vdmVtZW50IGFuZCBjaGFuZ2VzIGluIGludHJhIGFydGljdWxhciBwcmVzc3VyZS4uIApPbiBhbiBhbGJ1bSBzY2FsZSwgdGhlICJOYXJjb3RpYyBTdWl0ZSIgaXMgc3RpbGwgb25lIG9mIG15IGZhdm91cml0ZSBldmVyIHNldCBvZiB0cmFja3MgZnJvbSBhbnkgYWxidW0gZXZlciwgYnV0IHRoZSB3aG9sZSBhbGJ1bSBpcyBqdXN0IGZ1Y2tpbmcgYW1hemluZy4KSXQgdG9vayBhYm91dCB0d28gbW9udGhzIG9mIGJhY2sgYW5kIGZvcnRoIGFsb25nIHRoZSBsaW5lcyBvZiAnRHVkZSwgc2VyaW91c2x5LCB5b3UganVzdCB3YWxrIHRocm91Z2ggdGhlIGxldmVsLicgRm9yIHNvbWUgcmVhc29uIHRoZXkganVzdCBkaWRuJ3QgZmVlbCBsaWtlIGZpeGluZyBpdC4gCldoaWNoIHdlIGdldCwgYW5kIGFzIGluIHBvaW50IDEsIGlzIHdoZW4gd2UgY2hhbmdlIHRoaW5ncyB0aGF0IG1ha2Ugd2F5IHRvbyB0b3VnaC4uIApEb24ndCBiZSBhdXRpc3RpYyBhbmQgc29jaWFsaXplIHdpdGggcHBscyBhdCB0aGUgY2FzaW5vIHBva2VyIHRhYmxlcy4gR28gYXQgNEFNIHdoZW4gc3RyYWdnbGVycyBjb21lIHRocnUgZnJvbSBicm9rZW4gaG9tZSBnYW1lcyB3aG8gc3RpbGwgd2FubmEga2VlcCB0aGUgcGFydHkgYWluJ3Qgb3ZlciBncmluZC4gCkF0IHRoaXMgcG9pbnQsIHRoZXJlJ3MgYSBzbGlnaHQgZHJpYmJsZSBvZiBpdCBvbiB0aGUgZ3JvdW5kIGFyb3VuZCBoaXMgYm9vdHMuIApXZSBhY3RpdmVseSBnbyBvdXQgb2Ygb3VyIHdheSB0byBoYXZlIG5vIGFmZmlsaWF0aW9uLiBXZSBkbyB0aGlzIG5vdCBvbmx5IHdpdGggQmV0aGVzZGEsIGJ1dCBvdGhlciBjb21wYW5pZXMgYW5kIGVudGl0aWVzIChFeGFtcGxlLCBhIG1vZGVyYXRvciAvci9mYWxsb3V0bW9kcyBzdWJyZWRkaXQgZ290IGEgam9iIGF0IE5leHVzIG1vZHMgc29tZSB5ZWFycyBhZ28uIApFdmVuIHRyaXBzIGFyZSBvZnRlbiBiZWF0IGJ5IGEgc3RyYWlnaHQsIGZsdXNoLCBvciBmdWxsIGhvdXNlLiBIb2xkJ2VtIHBsYXllcnMgd2hvIHN0YXJ0IHRvIHBsYXkgT21haGEgb2Z0ZW4gbm90IG9ubHkgcGxheSBhIGhhbmQgbGlrZSBBIEEgNyA4IGJ1dCBhbHNvIHdpbGwgcmFpc2Ugd2l0aCBpdCBiZWZvcmUgdGhlIGZsb3AuIFRoaXMgaGFuZCBpcyB1bnBsYXlhYmxlIGJlY2F1c2UgaXQgd2lsbCBub3Qgd2luIHRoZSBsb3cgZXZlbiBpZiBhIGxvdyBpcyBtYWRlIGFuZCB3aWxsIHJhcmVseSB3aW4gZXZlbiBpZiBhbiBhY2UgY29tZXMgb24gdGhlIGJvYXJkIHVubGVzcyB0aGUgYm9hcmQgcGFpcnMgKG1ha2luZyBhIGZ1bGwgaG91c2UpLCBhbmQgdGhlIDcgYW5kIDggYXJlIGFsbW9zdCB3b3J0aGxlc3MuIApUaGlzIGlzIG5vdCB0cnVlIGF0IGFsbCBpbiBteSBleHBlcmllbmNlIGF0IHRoZSBwYXN0IDMgY29tcGFuaWVzIEkgd29ya2VkIGZvci4gSSB3b3JrZWQgbXkgYXNzIG9mZiBhdCBteSBjdXJyZW50IGNvbXBhbnkgd2hvIGFsc28gc3RhcnRlZCBtZSBvZmYgYXQgMzRrIHdoZW4gSSBzdGFydGVkIGluIHN1bW1lciAyMDE3LiBTZXJpb3VzbHkgd29ya2VkIG15IGFzcyBvZmYsIDUwKyBob3VyIHdlZWtzIGFuZCBsb29raW5nIGZvciBtb3JlIHJlc3BvbnNpYmlsaXRpZXMuIApUb29rIGEgcXVpY2sgbG9vayBhdCB0aGUgRkFRIGJ1dCBsb29raW5nIHRvIGdldCBzb21lIG1vcmUgc3BlY2lmaWMgYWR2aWNlLiBMb29raW5nIHRvIGJ1eSBNSiBhbmQgSE1MU0YgRVRGcyB0byBqdXN0IGJ1eSBhbmQgaG9sZCwgd2l0aCBhIHJlbGF0aXZlbHkgc21hbGwgYW1vdW50IG9mIGNhcGl0YWwuIENvdXBsZSBwdW50ZXJzIChpbmMgbWUpIGF0IHRoZSB0YWJsZSBibGluZCByYWlzaW5nIHdoZW4gVVRHIHRvIDUsIG1hbmFnZWQgdG8gY29udmluY2UgVVRHIHRvIGRvIHRoZSBzYW1lIHRoaXMgaGFuZC4gSGVybyBoYXMgMjIwLCBNUCBoYXMgMTQwIFVURyBjb3ZlcnMuIEhhZCBhIGhhbmQgd2l0aCBNUCB3aGVyZSBoZSA1YmV0IGphbW1lZCAxNDBiYiB3aXRoIDg3c3MgaW50byBteSBxdWVlbnMgcHJlLCByYW4gaXQgdHdpY2UgYW5kIHNwbGl0IHRoZSBwb3QuCk5vdCB0byBtZW50aW9uIHRoZXkgd2lsbCBsb3NlIHRoZWlyIHNlZWQgcGhyYXNlIGZhc3RlciB0aGFuIHlvdSBjYW4gZXhwbGFpbiB3aGF0IGVuZCB1c2VyIGVycm9yIGlzLi4gClBsZWFzZSBoZWxwIG1lIGZpbmQgc29tZSBwZWFjZS4gSSBsb3ZlIHRoaXMgbWFuIGFuZCBhbSBzdXJlIEkgd2FudCB0aGlzIEkgaGF2ZSB0byBrbm93IEkgd29uIGxvc2UgbXkgY2hpbGRyZW4gdGhvdWdoIGFuZCBteSByZXNlYXJjaCB5aWVsZHMgbm8gYW5zd2VycyBvdGhlciB0aGFuIGJpZ2FteSBpcyBpbGxlZ2FsIHdoaWNoIEkgbm90IGNvbnNpZGVyaW5nLgpBcyBhIHJlc3VsdCwgdGhleSB3aWxsIGdvIGZvcmZyZWUgcG9rZXIgdG91cm5hbWVudHNhcyB0aGV5IGNhbiBwbGF5IGFuZCB3aW4gd2l0aG91dCBnaXZpbmcgb3V0IG1vbmV5IGZpcnN0LiBTb21lIGRvIG5vdCBtaW5kIHBheWluZyBmb3IgdGhlIG1vbmV5IGlmIGl0IGlzIGZvciBhIGdvb2QgY2F1c2UuLiAKRmluYWxseSwgbmV2ZXIgdW5kZXJlc3RpbWF0ZSBob3cgYmVuZWZpY2lhbCBhIGxpdHRsZSBmcmVzaCBhaXIgY2FuIGJlIGZvciB5b3VyIGhlYWx0aC4gUG91ciBhIHRhbGwgZ2xhc3Mgb2Ygd2F0ZXIgb3IgaWNlZCB0ZWEsIGdvIG91dHNpZGUsIHNpdCBpbiBhIGNoYWlyIGFuZCB0YWtlIGEgYnJlYWsuIEZsaXAgdGhyb3VnaCBhIGZhc2hpb24gbWFnYXppbmUgb3IgdHJhc2h5IHRhYmxvaWQsIG9yIGdldCBsb3N0IGluIGEgZ29vZCBib29rIGZvciBhbiBob3VyIG9yIHR3by4gWW91IG1heSBldmVuIGZpbmQgdGhhdCB5b3UncmUgc28gcmVsYXhlZCB0aGF0IHlvdSBub2Qgb2ZmIGFuZCB0YWtlIGEgY2F0IG5hcCAgIGEgZ3JlYXQgd2F5IHRvIHJlY2hhcmdlIHlvdXIgbWluZCBhbmQgYm9keS4gWW91J3JlIHN1cmUgdG8gd2FrZSB1cCB3aXRoIGEgYnVyc3Qgb2YgZW5lcmd5LCByZWFkeSB0byB0YWNrbGUgdGhlIHJlc3Qgb2YgdGhlIGRheSAgIGFuZCB0aGUgcmVtYWluaW5nIGJ1bGxldHMgb24geW91ciB3ZWRkaW5nIHRvIGRvIGNoZWNrIGxpc3QuCiJUaGlzIGNhc2Ugd2FzIG5vdCBtZWFudCB0byBiZSBhbiBhY2Nlc3MgdG8ganVzdGljZSBjYXNlLiBUaGlzIGNhc2Ugd2FzIGFib3V0IHN0cmlraW5nIGRvd24gQ2FuYWRhJ3MgaGFybWZ1bCBwcm9zdGl0dXRpb24gbGF3cy4gTmV2ZXJ0aGVsZXNzIHdlIGhhdmUgc3BlbnQgZml2ZSB5ZWFycywgZW5kbGVzcyBsYXd5ZXIgaG91cnMsIGVuZGxlc3MgcmVzb3VyY2VzLCBhIGZpZ2h0IHRoYXQgdG9vayB1cyBhbGwgdGhlIHdheSB0byBPdHRhd2EgbGFzdCBKYW51YXJ5LCIgc2hlIHNhaWQuCkl0IGNhbiBiZSB2ZXJ5IGRpZmZpY3VsdCBmb3Iga2lkcyBpbiBhIGNvdW50cnkgdGhhdCBpcyBhYm91dCA5OCUga29yZWFuIHRvIGFkanVzdC4gClRoZXkgZGlkIGFsbCBzb3J0cyBvZiBjaGVsYXRpb24sIGV0YywgYW5kIG5vdGhpbmcgd29ya2VkLiAKSXQgdG9vayBhIGxvbmcgdGltZSBidXQgaGUgZG9lcyBzZWVtIHRvIHJlYWxseSBhY2tub3dsZWRnZSBoZSB3YXMgd3JvbmcgYW5kIHJlcGVudCwgYW5kIHByb21vdGVzIHN0cm9uZ2x5IG5vdyB0aGF0IHNleCBvdXRzaWRlIG9mIG1hcnJpYWdlIGlzIHdyb25nLCBidXQgdGhlcmUgc3RpbGwgYSBwYXJ0IG9mIGhpbSB0aGF0IEkgZmVlbCBkb2VzbiB3YW50IGFja25vd2xlZGdlIGhvdyBpdCBoYXMgYWZmZWN0ZWQgbWU7IHRoYXQgaXQgb25seSBiZXR3ZWVuIGhpbSBhbmQgR29kLCBhbG1vc3QuIEFuZCB0aGVyZSBhcmUgdGltZXMgd2hlcmUgaGUgbWFkZSBpdCBzb3VuZCBsaWtlIHRoZSBpc3N1ZSBpcyB3aXRoIG1lLCBhcyB0aG91Z2ggSSB3YXMgYWN0dWFsbHkgdGhlIG9uZSB3aG8gZGlkIHRoZSB3cm9uZyB0aGluZy4gQW5kIGZyYW5rbHksIGl0IHJlYWxseSBodXJ0cywgYmVjYXVzZSBJIGxvdmVkIGhpbSB0aHJvdWdoIHRoZSB3b3JzdCBwYWluIGEgcGVyc29uIGhhcyBldmVyIG1hZGUgbWUgZmVlbC4uIApObyBqdWRnbWVudCBvbiBoZXIsIGJ1dCB0aGUgaHlwb2NyaXN5IHdpdGggbXkgZmFtaWx5IHdhcyBtaW5kIGJsb3dpbmcuIEkgbm90IHRoZSBvbmx5IGdpcmwgd2hvIGxlZnQgdGhlIGZhbWlseSBmb3IgdGhhdCBzYW1lIHJlYXNvbi4gCkkgYWx3YXlzIHRyeSB0byBsZWFybiBzb21ldGhpbmcgZnJvbSBhIGhhbmQgaSBsb3NlLCBhcyBpIHJlbWVtYmVyIHRob3NlIGZhciBtb3JlIGNsZWFybHkgYW5kIGZvciBhIG11Y2ggbG9uZ2VyIHRpbWUgdGhhbiB0aGUgb25lcyBpIHdpbiAoZXhjZXB0IGZvciBhIGNvdXBsZSBvZiBtb25zdGVycG90cyBoZXJlIGFuZCB0aGVyZSkuIFRoZXJlIGFyZSBhbG90IG9mIHBlb3BsZSB3aG8gd2lsbCB0ZWxsIHlvdSB0aGF0IGl0cyBoYXJkIHRvIGxlYXJuIGZyb20gbWlzdGFrZXMgbWFkZSBhdCB0aGUgbWljcm8gbGV2ZWxzIGJlY2F1c2UgcGVvcGxlIHBsYXkgcmVhbGx5IGJhZGx5LCBidXQgaSB0aGluayB0cmFpbmluZyB5b3Vyc2VsZiB0byBnbyBiYWNrIGFuZCBicmVhayB0aGUgaGFuZCBkb3duIGlzIGEgdmFsdWFibGUgc2tpbGwgdG8gbGVhcm4gdGhhdCB3aWxsIHNlcnZlIHlvdSB3ZWxsLi4gClJheSBhbmQgQmFycmV0dCBMb3VpcywgQy4sICJBZHZhbmNlZCBFbmdpbmVlcmluZyBNYXRoZW1hdGljcyIsIFNpeHRoIEVkaXRpb24sIE1jR3JhdyBIaWxsLCBJbmMuLCBOZXcgWW9yaywgMTk5NS4gCkl0IGxvb2tzIGxpa2UgYSBwYWludGluZyBhbmQgd2Ugb2ZmZXIgZnJhbWVzIGZvciBpdC4gWW91ciBndWVzdHMgc2VlIGxvdmVseSB3aW5lIGJvdHRsZXMgYW5kIHlvdSBkb24gaGF2ZSB0byBnbyB0byB0aGUgYmFzZW1lbnQuIApXaGVuIGNob29zaW5nIGFuIG9ubGluZSBwb2tlciBzaXRlIHRvIHBsYXkgYXQsIG9uZSBvZiB0aGUgbW9zdCB3YW50ZWQgZmVhdHVyZXMgaW52b2x2ZXMga25vd2luZyBqdXN0IGhvdyBtYW55IHBsYXllcnMgYXJlIHJlZ2lzdGVyZWQgaW4gdGhlIHNpdGUuIE5hdHVyYWxseSwgeW91IHdhbnQgdGhlIG9ubGluZSBwb2tlciBzaXRlIG9mIHlvdXIgY2hvaWNlIHRvIGhhdmUgYSBoaWdoIG1lbWJlcnNoaXAgcmF0ZSBiZWNhdXNlIHRoYXQgbWVhbnMgeW91IGFsd2F5cyBoYXZlIG9wcG9uZW50cyBhdmFpbGFibGUgdG8gZmFjZSB5b3UgYXQgYW55IHRpbWUgb2YgdGhlIGRheSB3aGVuZXZlciB0aGUgdXJnZSB0byBwbGF5IHBva2VyIHN0cmlrZXMgeW91IHdpdGggc3VjaCBhIGhpZ2ggbWVtYmVyc2hpcCByYXRlLCB5b3UgYWxzbyBoYXZlIHRoZSBsdXh1cnkgdG8gY2hvb3NlIHdoaWNoIHR5cGUgb2YgcG9rZXIgcGxheWVyIHlvdSBwcmVmZXIgdG8gZ28gYWdhaW5zdC4gTmF0dXJhbGx5LCB0aGVyZSBhcmUgc29tZSBvbmxpbmUgcG9rZXIgc2l0ZXMgd2hvIG1heSBpbmRlZWQgaGF2ZSBhIGhpZ2ggbWVtYmVyc2hpcCByYXRlLiBCdXQgdW5mb3J0dW5hdGVseSBmb3IgZmlyc3QgdGltZSBwb2tlciBwbGF5ZXJzIGxpa2UgeW91LCBtb3N0IG9mIHRoZSByZWdpc3RlcmVkIG1lbWJlcnMgaW4gdGhlc2Ugc2l0ZXMgYXJlIGFscmVhZHkgdmVyeSBnb29kIHBva2VyIHBsYXllcnMgYW5kIHF1aXRlIGRpZmZpY3VsdCB0byBiZWF0IHdoZW4geW91IGdvIGFnYWluc3QgdGhlbS4gSWYgaW4gZG91YnQgb2YgdGhlIHR5cGUgb2YgcG9rZXIgcGxheWVycyByZWdpc3RlcmVkIGF0IHRoZSBzaXRlIG9mIHlvdXIgY2hvaWNlLCB0cnkgdG8gbG9vayBmb3IgdGhpcmQgcGFydHkgcmV2aWV3cyBzbyB5b3Ugd29uIG1ha2UgYSBtaXN0YWtlIHlvdSBsYXRlciByZWdyZXQuClRoaXMgd2FzIEp1bmlvciB5ZWFyLiBUbyB0aGlzIGRheSwgbm90IHN1cmUgaG93IEkgZW5kZWQgdXAgZ29pbmcgdG8gcHJvbSB3aXRoIGhlci4gCk9uIFNhdHVyZGF5IG5pZ2h0LCBBcHJpbCAyOCwgMTk4NCwgYSBmZXcgbWludXRlcyBhZnRlciA4OjMwLCBqdXN0IGEgZmV3IGhvdXJzIGJlZm9yZSB0aGUgdG93biB3b3VsZCBzcHJpbmcgaXRzIGNsb2NrcyBmb3J3YXJkIHRvIGRheWxpZ2h0IHNhdmluZyB0aW1lLCBhIGNhciBhbmQgYSBwaWNrdXAgdHJ1Y2sgcHVsbGVkIGludG8gdGhlIHBhcmtpbmcgbG90IG9mIE1jQW5hbGx5J3MsIGEgY29udmVuaWVuY2Ugc3RvcmUgdGhhdCBzdGFuZHMgYWxtb3N0IGFsb25lIG91dCBvbiB0aGUgaGlnaHdheSBhdCB0aGUgZWFzdGVybiBlbmQgb2YgdG93bi4gCiIiLCJhbHRlcm5hdGl2ZUhlYWRsaW5lIjpudWxsfS4gCklmIHlvdSB3b3VsZCBsaWtlIHRvIGVkaXQgeW91ciBzdWJtaXNzaW9uLCBvciBpZiB5b3UgZmVlbCB0aGF0IGl0IGhhcyBiZWVuIHJlbW92ZWQgaW4gZXJyb3IsIHBsZWFzZSBtZXNzYWdlIHVzIHNvIHRoYXQgd2UgbWF5IHJldmlldyBpdC4KQWJvdXQgYSBxdWFydGVyIHdlcmUgZHJ1ZyBiYWJpZXMgbW9zdGx5IG94eWNvZG9uZSBhbmQgdGhlIHJlc3Qgd2VyZSBnZW5ldGljIGRpc29yZGVycywgYmlydGggZGVmZWN0cyBhbmQgcHJlZW1pZXMuIFdlIGJlY2FtZSBhd2FyZSBvZiBiYWJpZXMgd2l0aCBtaXNzaW5nIGxpbWJzLCBob2xlcyBpbiB0aGVpciBzcGluZXMsIHNodW50cyBpbiB0aGVpciBicmFpbnMuIApBdCBzb21lIG9mIHRoZSBjaGVja3BvaW50cyB0aGVyZSBpcyBhbiBvZmZpY2Ugd2hlcmUgeW91IGNhbiBnZXQgYXMgY29tcGxldGluZyBhIHRyYWlsLCB5b3UgZ2V0IGEgYmlnIHNoaW55IHN0aWNrZXIgaW4geW91ciBwYXNzcG9ydCBhbmQgYSBsaXR0bGUgc3RpY2tlciB0byBwdXQgb24geW91ciBoZWxtZXQgKG9yIHdoZXJldmVyLCBJIHB1dCBtaW5lIG9uIG15IGRlc2spIGFueXdheXMsIGV2ZXJ5IGNoZWNrIHBvaW50IHNob3VsZCAoYW5kIHVzdWFsbHkgZG9lcykgaGF2ZSBhbiBpbmsgcGFkLiAKSSBzb3JyeSBtYW4uIEl0IGRlZmluaXRlbHkgb25lIG9mIHRoZSBzaGl0dGllc3QgcGFydHMgb2YgaXQuIApJbiBhZGRpdGlvbiB0byByZWZlcnJpbmcgdGhlIGNhc2VzIHRvIHRoZSBWYXRpY2FuIGFzIHJlcXVpcmVkIGJ5IGNodXJjaCBsYXcsIHRoZSBMZWdpb24gc2FpZCBpdCBoYWQgcmVmZXJyZWQgY2FzZXMgdG8gcG9saWNlIHdoZXJlIGNpdmlsIHJlcG9ydGluZyBsYXdzIHJlcXVpcmUgaXQuIApUaGlzIGFsc28gd29ya3Mgd2l0aCBzeW1ib2xzLiAKT24gdGhlIG90aGVyIGVuZCBvZiB0aGUgZ3JhcGgsIHNob3J0IHRlcm0gYm9uZCB5aWVsZHMgaGF2ZSBiZWVuIHB1c2hlZCBoaWdoZXIgYnkgdGhlIEZlZCwgd2hpY2ggaGFzIGJlZW4gc2xvd2x5IHJhaXNpbmcgc2hvcnQgdGVybSBpbnRlcmVzdCByYXRlcyBpbiBhbiBlZmZvcnQgdG8gcmVpbiBpbiBhbiBvdmVyaGVhdGVkIGVjb25vbXkuIFRoZW4sIGFzIGRlbWFuZCBmb3IgdGhvc2Ugc2hvcnQgdGVybSBib25kcyBzbG93cywgaXQgcHVzaGVzIHRoZWlyIHByaWNlcyBkb3duIGFuZCB0aGVpciB5aWVsZHMgZXZlbiBoaWdoZXIuIFRoZSByZXN1bHQgaXMgYSAiZmxhdHRlbmVkIiB5aWVsZCBjdXJ2ZSAgIHdoaWNoIGlzIHdoZXJlIHdlIGFyZSBub3cgICB0aGF0IG1heSBvciBtYXkgbm90IGZsaXAgZW50aXJlbHkuIFJpZ2h0IG5vdywgdGhlIGludGVyZXN0IHJhdGUgb24gZml2ZSB5ZWFyIFRyZWFzdXJ5IGJvbmRzIGlzIGJlbG93IHRoZSByYXRlIG9uIHRocmVlIHllYXIgYm9uZHMsIGJ1dCByYXRlcyBvbiBldmVuIGxvbmdlciB0ZXJtIGJvbmRzIGFyZSBzdGlsbCBoaWdoZXIuCllvdSB3b3VsZCB0aGVuIGRvdWJsZSBjbGljayB0aGUgYWRkcmVzcyAocykgYW5kIHRoZXkgd291bGQgYXBwZWFyIGF0IHRoZSBib3R0b20gb2YgY2hlYXQgZW5naW5lLiAKQW5kIGl0IGFwcGxpZXMgdG8gYmxhY2tzIGp1c3QgYXMgbXVjaCBhcyB3aGl0ZXMuIApBIGZyaWVuZCBvZiBtaW5lIHdlbnQgdG8gQ3JvYXRpYSBhbmQgaGUgd2FzIGxpa2UgYW4gYXR0cmFjdGlvbiBoaW1zZWxmLi4gCllvdXIgYnVkZ2V0IHdvbid0IG1hdGNoIHVwIGV4YWN0bHkgd2l0aCBldmVyeSBwbGF5ZXIsIGJ1dCB5b3Ugc3RpbGwgbmVlZCB0byB0cmFjayB3aGVyZSB5b3Ugc3RhbmQgc28geW91ciBiaWRkaW5nIGNhbiBiZSBpbmZvcm1lZCBhbmQgeW91IGNhbiBtYWtlIHRoZSBtb3N0IG9mIHdoYXQgeW91ciByZW1haW5pbmcgZG9sbGFycy4gClNvIGZhciBJIG5vdCBoYWQgYW55IG1ham9yIGlzc3Vlcy4gClRoZSBwYXkgZm9yIHRoZSBjdW11bGF0aXZlIGtub3dsZWRnZSBpcyBwZWFudXRzIGNvbXBhcmVkIHRvIHdoYXQgSSB2YWx1ZSB0aGUga25vd2xlZGdlIGFuZCB3aGF0IEkga25vdyBidXNpbmVzc2VzIGFyZSBjYXBhYmxlIG9mIGRvaW5nIHdpdGggaXQuIEkganVzdCBhdCB0aGUgcG9pbnQgd2hlcmUgSSB3YW50IHRvIHRha2UgbXkgdG95cyBhbmQgZ28gaG9tZS4gCk1pYW1pIE9yYW5nZSBCb3dsIFBsYXllZCBIb3N0IFRvIDUgU3VwZXIgQm93bHMKRmluYWxseSwgSSByZWFkIHRoZSBsYXN0IGxpbmUgYXMgcG9zc2libGUgc2FyY2FzbT8gTGlrZSwgIk9oLCBPSywgZXZlcnl0aGluZyBpcyBncmVhdCBmb3IgeW91IGFuZCB5b3UgaGF2ZSBubyBwcm9ibGVtcy4gVGhhdCBqdXN0IGF3ZXNvbWUuIEdvb2R5IGZvciB5b3UuIiBJdCBoYXJkIHRvIHRlbGwsIGJ1dCBtYXliZSBvbmUgbGFzdCBwb2tlIGF0IHlvdXIgZ3JheSByb2NrIHRvIHNlZSBpZiB5b3Ugd2lsbCBnaXZlIGl0IHVwPyBPciB1c2luZyBzYXJjYXNtIGFzIGFuIG91dGxldCBmb3IgaGVyIGFuZ2VyIHRoYXQgc2hlIGNvdWxkbiBwcm92b2tlIHlvdT8gUmVnYXJkbGVzcywgSSB0aGluayB5b3UgYXJlIGRvaW5nIGdyZWF0ISBHcmF5IHJvY2tpbmcsIHJlbGVudGxlc3MgcG9zaXRpdml0eSwgYWN0aW5nIGNvbmZ1c2VkL2xpdGVyYWwsIGFuZCByZWZ1c2luZyB0byBhbGxvdyBteXNlbGYgdG8gYmUgcHJvdm9rZWQgaW50byBhbiBhbmdyeSByZXNwb25zZSBoYXZlIHdvcmtlZCB2ZXJ5IHdlbGwgZm9yIG1lIHdpdGggbXkgd2FpZiBtb20sIGFuZCBJIHRoaW5rIGl0IGEgZ29vZCBjb21iaW5hdGlvbi4gS2VlcCB1cCB0aGUgTEMgIGl0IHNvIGhlbHBmdWwhCldlIG1heSBlbmpveSBhIGZldyB0aHJvd3Mgb2YgdGhlIGRpY2UgYXQgY3JhcHMsIG9yIHRyeWluZyB0byBiZWF0IHRoZSBob3VzZSBpbiBhIHJvdW5kIG9yIHR3byBvZiBibGFja2phY2ssIGJ1dCBvbmxpbmUgY2FzaW5vIGN1c3RvbWVycyBhcmUgb25seSByZWFsbHkgdGhlcmUgZm9yIG9uZSB0aGluZzsgc2xvdHMuLiAKSSBpbiB0d28gbWluZHMgYWJvdXQgY2xvc2luZyB0aGlzLiBUaGUgYW5zd2VyIGlzIHRoaW4gb24gY29udGV4dCBhbmQgb2JqZWN0aXZpdHkgYWJvdXQgYXR0ZW1wdGluZyB0byBnaXZlIGV4YW1wbGVzIGFuZCBkYXRhIHJlbGF0aW5nIHRvIHRoZSBvcmlnaW5hbCBxdWVzdGlvbi4gClRoZXJlIGFyZSBubyBpZGVudGlmeWluZyBtYXJraW5ncyBvciBzZXJpYWwgbnVtYmVycyBvbiB0aGVzZS4gCklmIG9uZSBpcyBvbiB5b3VyIHNob3VsZGVyLCBncmFicyBob2xkIG9mIGFuIGVhciwgYW5kIHJvbGxzIHdpdGggaXQsIHlvdSBnb2luZyB0byBiZSBtaXNzaW5nIGEgY2h1bmsgb2YgZWFyLiBNaW5lIHdhcyB0cnlpbmcgdG8gZ2FpbiBoZXIgYmFsYW5jZSBhIGZldyB3ZWVrcyBhZ28sIGFuZCBxdWl0ZSBieSBhY2NpZGVudCwgcG9wcGVkIG1lIGFjcm9zcyB0aGUgZXllIHdpdGggaGVyIHRhaWwuLiAKTWVzc3JzLiBMaWNodGVyIGFuZCBTZW1hcmppYW4gZXhwZWN0IHRvIGNsb3NlIG9uIHRoZSBidWlsZGluZyBhdCA1MzAwIExha2VzaWRlIHdpdGhpbiA2MCBkYXlzIGFuZCB3aWxsIGxlYXNlIHRoZSBidWlsZGluZyB0byBpbmR1c3RyaWFsIHRlbmFudHMuIFRlcnJ5IENveW5lLCBhIEdydWJiIEVsbGlzIENvLiBzZW5pb3IgdmljZSBwcmVzaWRlbnQgd2hvIGhhcyB0aGUgbGlzdGluZyBvbiB0aGUgUnllcnNvbiBidWlsZGluZywgc2FpZCBNci4gU2VtYXJqaWFuIHByZXZhaWxlZCBvdmVyIG11bHRpcGxlIGJpZGRlcnMgZm9yIHRoZSBwcm9wZXJ0eS4KWXVuZ0plcmtpc29uICA2IHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvClNvIHRoZXJlIEkgbGF5IGluIGJlZCB3aXRoIHRoZXNlIHRob3VnaHRzIG9mIE1pY2tleSBhbmQgaGlzIG1vbSB3aGVuIEkgZmlyc3QgZmVsdCB0aGUgY29tcHVsc2lvbiB0byBmaW5kIGhlci4uIApEZW4gZXJzdGVuIFRlaWwgZGVyIFJlaXNlIG5hY2ggQXRoZW4gZXJsZWRpZ3QgZGVyIHZlcnNpZXJ0ZSBVcmxhdWJlciBub2NoIG1pdCBsaW5rcy4gRGFubiB3aXJkIGVzIHNjaG9uIGFuc3BydWNoc3ZvbGxlci4gCk1hdHR5dGhlZG9nIFRoYW5rIHlvdSBmb3Igc3VibWl0dGluZyB0byAvci90aWZ1LCAvdS9ib2t0b3JuLiBZb3VyIHN1Ym1pc3Npb24sIFRJRlUgYnkgbm90IHJlbWluZGluZyBteSBiZiB0byB3YXNoIGhpcyBoYW5kcyAoc2xpZ2h0bHkgbnNmdyksIGhhcyBiZWVuIHJlbW92ZWQgYmVjYXVzZSBpdCB2aW9sYXRlcyBvdXIgcnVsZXMsIHdoaWNoIGFyZSBsb2NhdGVkIGluIHRoZSBzaWRlYmFyLgpZb3UgcmVhbGx5IGhhdmUgdG8gZmVlbCBzb3JyeSBmb3IgdGhlbTsgaXQgYSB0b3VnaCB3b3JsZCBvdXQgdGhlcmUsIGFuZCB0aGV5IHNpbXBseSBub3Qgc21hcnQgZW5vdWdoIHRvIGJlIGdvb2QgYXQgYW55dGhpbmcgZWxzZS4gCkhpcyB0aHJlZSBjaGlsZHJlbiBhbmQgZm91ciBncmFuZGNoaWxkcmVuIHdlcmUgaGlzIGdyZWF0ZXN0IHByaWRlIGFuZCBqb3kuIEhlIHRvb2sgZ3JlYXQgcGxlYXN1cmUgaW4gaGVscGluZyBoaXMgY2hpbGRyZW4gaW4gYW55IHdheSBwb3NzaWJsZS4gSGUgbG92ZWQgdG8gd2F0Y2ggaGlzIGdyYW5kY2hpbGRyZW4gcGxheSBzb2NjZXIsIGJhc2ViYWxsLCBob2NrZXksIHN3aW0gYW5kIGdlbmVyYWxseSBlbmpveWVkIHNwZW5kaW5nIGFzIG11Y2ggdGltZSBhcyBoZSBjb3VsZCB3aXRoIHRoZW0uIAoiV2h5LCBBbm5lLCB3aGF0IGlzIHRoZSBtYXR0ZXI/IEkgZXhwZWN0ZWQgdG8gZmluZCB5b3UgcmFkaWFudCBvdmVyIHdpbm5pbmcgUm9sbGluZ3MgUmVsaWFibGUgcHJpemUuIEdvb2QgZm9yIHlvdSEiCk92ZXJ2aWV3IGZvciBOZXNzdXNzCkludGVyZXN0aW5nIGNob2ljZSBvZiB3b3JkIGZvciBwYXJ0bmVycyB3aG8gaGF2ZW4gZ290dGVuIGFsb25nIGZvciB0d28geWVhcnMsIGJ5IG1vc3QgYWNjb3VudHMgZG9uIHBhcnRpY3VsYXJseSBsaWtlIGVhY2ggb3RoZXIgYW5kIGFyZSBkZW1vbnN0cmF0aW5nIHRoZWlyIGRpc3BsZWFzdXJlIHdpdGggJDEuNyBiaWxsaW9uIGluIGNsYWltcy4gTWVsbnlrIGFsbGVnZWQgbGV0dGVyIGRvZXMgaGF2ZSB0aGF0IGtpZGRpbmchIGFuZCBnZXQgZG9uZSBraW5kIG9mIGZlZWwsIGFzIHRob3VnaCBoaXMgJDcwMCBtaWxsaW9uIGxhd3N1aXQgd2FzIGp1c3QgYSBuZWdvdGlhdGluZyBwbG95LiAKMjUvNTAgY2VudCBob21lIGdhbWUuIEd1eSBJIHVzZWQgdG8gcGxheSB3aXRoIGlzIGRydW5rIGFzIGZ1Y2sgYW5kIHNtb2tpbmcgd2VlZCBhbGwgbmlnaHQuIEhlIGp1c3QgZG91YmxlZCB1cCB0aHJvdWdoIG1lIGEgaGFsZiBob3VyIGFnbyBhZnRlciBzbmFwcGluZyBteSAxMDAgZG9sbGFyIHNob3ZlIHByZSB3aXRoIEo3byB3aGVuIEkgaGFkIEFBLiAKU2hlJ3MgdW5iZWxpZXZhYmx5IHRveGljIGFuZCBkYW5nZXJvdXMuIFNoZSBpcyBhbHNvIHRoZSBhYnNvbHV0ZWx5IFdPUlNUIGtpbmQgb2YgYWRkaWN0OiB0aGUga2luZCB3aG8gaXMgaW4gYWN0aXZlIGFkZGljdGlvbiwgdGhvdWdoIGluIGhlYXZ5IGRlbmlhbCAoYnV0IHRoZXkncmUgcHJlc2NyaWlpaWJlZCEhKSwgYW5kIGZlZWxzIGNvbXBlbGxlZCB0byBzcHJlYWQgaGVyIGFkZGljdGlvbiBhcm91bmQgdG8gb3RoZXIgcGVvcGxlIGJ5IHB1c2hpbmcgaGlnaGx5IGFkZGljdGl2ZSBzdWJzdGFuY2VzIGluIHRoZW0uIEknbSBhIHJlY292ZXJpbmcgb3BpYXRlIGFkZGljdCBteXNlbGYsIGFsdGhvdWdoIEkgYW0gbm90IGEgcHJvZmVzc2lvbmFsIGNvdW5zZWxvciBvciBhbiBleHBlcnQgb2YgYW55IGtpbmQuIApUaGUgc3R1ZGVudCAgIGlkZW50aWZpZWQgYnkgQ0JTIE1pYW1pIGFzIGEgMTcgeWVhciBvbGQgZ2lybCAgIHRvbGQgYSBIb2xseXdvb2QgcG9saWNlIGRldGVjdGl2ZSB0aGF0IEVzcXVpbGluIHN0YXJ0ZWQgYWN0aW5nIGFzIGEgbWVudG9yIGFuZCBiZWdhbiAiY29uc29saW5nIGhlciBkdXJpbmcgaGVyIGJyZWFrIHVwIiB3aXRoIGEgYm95ZnJpZW5kLgpQbGF5IGZyZWUgc2thdGVib2FyZGluZyBnYW1lcyBvbmxpbmUgdGhhdCB5b3UgY2FuIHBsYXkgZm9yIGZ1bi4gT3ZlciA1MCBmcmVlIHNrYXRlYm9hcmRpbmcgZ2FtZXMgdG8gcGxheSB3aXRoIHlvdXIgZnJpZW5kcy4KSWYgeW91IHdhbnQgdG8gc3VjY2VlZCwgdGhlcmUgYXJlbid0IGFueSBleGN1c2VzIGFuZCBpdCdzIGdvaW5nIHRvIHRha2UgYSBsb3Qgb2YgaGFyZCB3b3JrLiAKV2UgdHJpZWQgcGxhY2luZyB0aGUgYnJlYWQgb24gdGhlIGhvdHBsYXRlIGJ1dCBub3RoaW5nIGhhcHBlbmVkLiAKVGhlIGNoYXJhY3RlciBhc3Nhc3NpbmF0aW9uIG9mIE1vdGhlciBUaGVyZXNhIGNhbWUgYWJvdXQgYmVjYXVzZSBvZiB0d28gQ2FuYWRpYW4gYWNhZGVtaWNzIHdobyBoYXRlZCBoZXIgYW5kIHRoZSBjaHVyY2ggd2hvIHdyb3RlIGJsYXRhbnQgbGllcyBhbmQgY29tcGxldGVseSBtaXN1bmRlcnN0b29kIGhlciBtaXNzaW9uIGFuZCB3aGF0IHNlcnZpY2Ugc2hlIHByb3ZpZGVkIHRvIHRoZSBkeWluZy4gCldoZW4gYSBtYW4gaGFzIGFuIGVyZWN0aW9uLCBoZSBjYW4gdXNlIHRoZSBzYW1lIG11c2NsZSB0byBtYWtlIE1yLiBXaWxseSBib3VuY2UgdXAgYW5kIGRvd24gbGlrZSBhIHB1cHBldCBzaG93LiAKU3VyZSB0aGV5IG1lYW50IHRoYXQgdGhleSdkIGNvbWUgZnJvbSBTcGFpbiwgbm90IGp1c3QgdGhhdCBpdCB3YXMgZm9yIFNwYW5pc2ggc3BlYWtlcnMuIEkga2VwdCB0aGlua2luZyB0aGUgVFYgcHJvZHVjdGlvbmxvb2tlZCBGcmVuY2ggd2hlbmV2ZXIgSSByYW4gaW50byB0aGVtIGluIHRoZSBob3RlbCwgYnV0IGRvbid0IHRlbGwgdGhlbSB0aGF0LiBJIGd1ZXNzIGJ5ICJGcmVuY2giIEkgbWVhbgpNeSAiYWRvcHRlZCIgZ3JhbmRwYXJlbnRzIHdlcmUgYW4gb2xkZXIgSmFwYW5lc2UgY291cGxlIHdlIG1ldCBhdCBjaHVyY2gsIHRoZSBvbmx5IG90aGVyIEFzaWFucyB3aG8gYXR0ZW5kZWQuIApZb3UgY2FuIGhhdmUgYSBub3RlYm9vayB3aGVyZSB5b3UgY2FuIGRldmVsb3AgeW91ciBzdGF0ZW1lbnQgb2YgYWNoaWV2ZW1lbnQuIApOIENhcGFjaXQgOiBBcHRpdHVkZSAgYXZvaXIgZGVzIGRyb2l0cyBldCBkZXMgb2JsaWdhdGlvbnMgZXQgIGxlcyBleGVyY2VyIHNvaSBtbWUgKEV4ZW1wbGUgOiBjYXBhY2l0IGQnYWdpciBlbiBqdXN0aWNlLCBkZSBjb25jbHVyZSB1biBjb250cmF0KS4gTGVzIG1pbmV1cnMgbmUgZGlzcG9zZW50IHBhcyBkZSBsYSBjYXBhY2l0IGQnZXhlcmNpY2UuIElsIGVuIGVzdCBkZSBtbWUgcG91ciBsZXMgbWFqZXVycyBxdWkgYm5maWNpZW50IGQndW4gcmdpbWUgZGUgcHJvdGVjdGlvbiBqdXJpZGlxdWUgKHR1dGVsbGUgb3UgY3VyYXRlbGxlKS4uIApZZWFoLCA1cyBhbmQgMTBzIG9ubHkgZnJvbSBoZXJlIG9uIG91dC4gTmV4dCBzdGVwIGlzIHRvIGhpZGUgaW4gcGxhaW4gc2lnaHQuIApCZWkgQmVrYW5udHdlcmRlbiB2b24gUmVjaHRzdmVybGV0enVuZ2VuIHdlcmRlbiB3aXIgZGVyYXJ0aWdlIExpbmtzIHVtZ2VoZW5kIGVudGZlcm5lbi4gQmVpIGRlciBLb21tdW5pa2F0aW9uIHBlciBFIE1haWwpIFNpY2hlcmhlaXRzbGNrZW4gYXVmd2Vpc2VuIGthbm4uIApIaXMgZmFpbGVkIGJ1aXNpbmVzc2VzIHdlcmUgd29yc2Ugb2ZmIHRoYW4gdGhvdWdodCwgaGUgaXMgdHJ1bHkgYmFua3J1cHQgYW5kIGV4aXN0cyBvZmYgY3JlZGl0LCBsaWtlIHRoYXQgZ3V5IGZyb20gRnlyZS4gVGhhdCB3b3VsZCBodXJ0IGhpcyBpbWFnZSB0byBhZG1pdCwgc28gaGUgZGVzcGVyYXRlbHkgaGlkaW5nIGl0LgoiSSBrbm93IHlvdSBndXlzIGNhbid0IGNvbXByZWhlbmQgaGFsZiB0aGF0IHNoaXQuIFdobyBnaXZlcyBhIGZ1Y2s/IEl0IGlzIGEgZ2FtZS4gSWYgeW91IGdvIHRvIGNsYXNzLCBzdGF5IG9mZiB5b3VyIGZ1Y2tpbiBwaG9uZSwgc2l0IGluIHRoZSBmcm9udCwgdHVybiBpbiB5b3VyIGhvbWV3b3JrLCB5b3UnbGwgZ2V0IGEgQyEgWW91IGd1eXMgY2FuJ3QgZXZlbiBkbyB0aGF0IHNoaXQsIG1hbi4gQW5kIEknbWEgdGVsbCB5YSByaWdodCBub3csIG9uIGNhbWVyYSwgSSBkb24ndCBnaXZlIGEgZnVjay4gSSBkaWRuJ3QgbGVhcm4gb25lIHRoaW5nIGluIGhpZ2ggc2Nob29sIG9yIGNvbGxlZ2UuIE9uZSBmdWNraW4gdGhpbmcuIEkgY291bGRuJ3QgdGVsbCB5b3Ugd2hhdCBhIGZ1Y2tpbiBhdG9tIGlzLCBJIGNvdWxkbid0IHRlbGwgeW91IHdoYXQgYSBmdWNraW4gbWljcm9iZSBpcy4gSSBjb3VsZG4ndCB0ZWxsIHlvdSB3aGF0IHRoZSBmdWNrIGFueSBvZiB0aGF0IHNoaXQgaXMuIEJ1dCBJJ20gYSBjb2xkIGh1c3RsZXIsIHNvIEkgZmlndXJlZCBpdCBvdXQuIgpXaXRob3V0IHJlYXNvbnMsIHRoZSBoaWdoZXIgY291cnQgc2FpZCBpdCB3YXMgbGVmdCBndWVzc2luZyB3aHkgR29vZG1hbiBkZWNpZGVkIGFzIGhlIGRpZCwgYW5kIHRoZSBwcm9zZWN1dGlvbidzIHN1Z2dlc3Rpb24gdGhhdCB0aGUgaGlnaGVyIGNvdXJ0IGRlY2lkZSB0aGUgc2V2ZXJhbmNlIGlzc3VlIHJldHJvYWN0aXZlbHkgd291bGQgYW1vdW50IHRvIHRyeWluZyB0byAicmV2ZXJzZSBlbmdpbmVlciIgdGhlIGluaXRpYWwgZGVjaXNpb24uLiAKV2hhdCBzaG91bGQgdGhlIENsZXZlbGFuZCBCcm93bnMgZG8gYWJvdXQgdGhhdD8zIGRheXMgYWdvICsgQnkgVGVycnkgUGx1dG8sIFRoZSBQbGFpbiBEZWFsZXJDbGV2ZWxhbmQgQnJvd25zOiBUYWxraW4nIHRydXRoIGFib3V0ICdnb2luZyBmb3IgaXQnIGFuZCB3aGF0IG1ha2VzIHNlbnNlIGluIDIwMTkgICBUZXJyeSBQbHV0byBDbGV2ZWxhbmQgQnJvd25zOiBUYWxraW4nIHRydXRoIGFib3V0ICdnb2luZyBmb3IgaXQnIGFuZCB3aGF0IG1ha2VzIHNlbnNlIGluIDIwMTkgICBUZXJyeSBQbHV0byBUaGUgQ2xldmVsYW5kIEJyb3ducyBoYXZlIGEgZ29vZCB5b3VuZyBxdWFydGVyYmFjaywgYnV0IEdNIEpvaG4gRG9yc2V5IGtub3dzIHRoZSB0ZWFtIG5lZWRzIHNvIG11Y2ggbW9yZS42IGRheXMgYWdvICsgQnkgVGVycnkgUGx1dG8sIFRoZSBQbGFpbiBEZWFsZXJDbGV2ZWxhbmQgSW5kaWFuczogV2h5IEhhbmxleSBSYW1pcmV6PyBIb3cgYWJvdXQgc29tZSBnb29kIG5ld3MgZnJvbSBHb29keWVhcj8gICBUZXJyeSBQbHV0byBDbGV2ZWxhbmQgSW5kaWFuczogV2h5IEhhbmxleSBSYW1pcmV6PyBIb3cgYWJvdXQgc29tZSBnb29kIG5ld3MgZnJvbSBHb29keWVhcj8gICBUZXJyeSBQbHV0byBXaGVuIHRoZSBJbmRpYW5zIHdlbnQgc2hvcHBpbmcgZm9yIGEgYmFyZ2FpbiBiYXQsIHRoZXkgc2V0dGxlZCBvbiBIYW5sZXkgUmFtaXJlei4gClRoZSBiZXN0IHRoaW5nIHlvdSBjYW4gZG8gaXMgbGVhcm4gYWxsIHlvdSBjYW4gYWJvdXQgeW91ciBnaXJsZnJpZW5kLiAKR2V0IHRoZSBoZWxwIG9mIGEgbWFzc2FnZSB0b29sIGZvciB0aGlzIHB1cnBvc2UuIApCeSBsYXcsIHdlIGNvdWxkIG5vdCBpbmZvcm0gaGlzIGVtcGxveWVyIHRoYXQgaGUgd2FzIHVuZGVyIGludmVzdGlnYXRpb247IG9ubHkgaWYgYW5kIHdoZW4gYWN0dWFsIGNoYXJnZXMgd2VyZSBmaWxlZC4gCkZvciBtb3JlIHRoYW4gMzAgeWVhcnMsIHRoZSBuYW1lIFZpZGFsIFNhc3Nvb24gaGFzIGJlZW4gc3lub255bW91cyB3aXRoIHN0YXRlIG9mIHRoZSBhcnQgc2Fsb24gc3R5bGVzLiAKIDEsODM0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpUaGF0IGNsb3VkIGhhcyBiZWVuIGhhbmdpbmcgb3ZlciBUZXNsYSwgZXZlbiB0aG91Z2ggbWFueSBhbmFseXN0cyBzdGlsbCBjb25zaWRlciBNdXNrJ3MgdmlzaW9uIHRvIGJlIGFuIGluZGlzcGVuc2FibGUgcGFydCBvZiB0aGUgZWxlY3RyaWMgY2FyIG1ha2VyIGhlIGNvIGZvdW5kZWQgaW4gMjAwMy4uIApCdXQgaW4gYWxpZ25tZW50IHdpdGggbXkgZ3JlYXRlciBwb2ludCBoZXJlLCB0aGlzIGlzIG9mdGVuIGNvbXBsYWluZWQgYWJvdXQgYXMgdGhlIGJpZ2dlc3QgZmxhdyBvZiBBdXRvIENoZXNzLi4gClBva2VyIGhvc3Qgc3VlcyBTdXBlcmlvciBtYW4gZm9yCk5vdCByZWFsbHksIEkgdGhpbmsgZXZlcnlvbmUgd2FzIGp1c3Qgc28gaGFwcHkgc29tZW9uZSBmcm9tIHRoZSBhcmVhIGhhZCBhIHN0b3J5IGxpa2UgdGhhdC4gSSBnb3Qgc28gbWFueSBwb3NpdGl2ZSBtZXNzYWdlcyBhbmQgY2FsbHMgZnJvbSBwZW9wbGUgdGhhdCB3aGVyZSBqdXN0IGdlbnVpbmVseSBoYXBweSB3aGljaCB3YXMgcmVhbGx5IG5pY2UuIEluIHNheWluZyB0aGF0IEkgZGlkIGdldCBzb21lIGFkdmljZSBmcm9tIHNvbWUgbWF0ZXMgdG8gdGFrZSBpdCBhbGwgYmFjayB0aGUgbmV4dCBkYXkgYW5kIHB1dCBpdCBvbiByZWQuIApTY183MSAgMSBwb2ludCAgc3VibWl0dGVkIDQgZGF5cyBhZ29UaGVyZSBpcyBhbiBhZGp1c3RtZW50IGluIHRoZSBDZWxsbWFwcGVyIHNldHRpbmdzIHRoYXQgeW91IGNhbiB0dW5lIGZvciB5b3VyIG5ldHdvcmtzLiAKRG9uJ3QgbWlzcyBhIHRoaW5nIFNhdmUgeW91ciBkcmVhbSBob21lcyBhbmQgc3RheSB1cGRhdGVkIG9uIHlvdXIgZmF2b3VyaXRlIHNlYXJjaGVzLCBhY3Jvc3MgYW55IGRldmljZS4KT25lIG9mIHlvdXIgYmVzdCBwcmVjYXV0aW9ucyBhZ2FpbnN0IGZvb3QgcGFpbiBpcyB0byBiZSBhd2FyZSBvZiBib3RoCkFuZCBzaW5jZSB5b3UgYXJlIGZhaXJseSBmaXQsIGlmIHlvdSBjYXJiIHVwIHlvdSBtYXkgbm90aWNlIGEgZGVjbGluZSBpbiB5b3VyIHdlaWdodCBsaWZ0aW5nIHBlcmZvcm1hbmNlIHRoZSBkYXkgZm9sbG93aW5nIHlvdXIgY2FyYiB1cCwganVzdCBiZWNhdXNlIHlvdSBsaWtlbHkgZGVwbGV0ZSB5b3VyIHN0b3JlZCBnbHVjb3NlIGluIHRoZSBtaWRkbGUgb2YgdGhlIGxpZnRpbmcuIFNvIHRob3NlIGRheXMgbWlnaHQgYmUgZ29vZCBkYXlzIHRvIGhhdmUgbG93ZXIgd2VpZ2h0IHdpdGggbW9yZSByZXBzLiBJIGhhdmUgbm8gaWRlYSBob3cgeW91IHJlYWxseSByZXNwb25kIHRvIGl0LCB5b3UgbWF5IHBlcmZvcm0gYmV0dGVyLCB3aG8ga25vd3MuCkxlcyBjb21wb3NzIGRlIGNldCBhcmJyZSBzZSBzb250IGF2cnMgMTAuMDAwIGZvaXMgcGx1cyBlZmZpY2FjZSBxdWUgbGUgcHJvZHVpdCBhZHJpYW15Y2luZSwgdW4gbWRpY2FtZW50IGNoaW1pbyB0aHJhcGV1dGlxdWUgbm9ybWFsZW1lbnQgdXRpbGlzIGRhbnMgbGUgbW9uZGUsIHBvdXIgcmFsZW50aXIgbGEgY3JvaXNzYW5jZSBkZXMgY2VsbHVsZXMgY2FuY3JldXNlcy4gRXQgY2UgcXVpIGVzdCBlbmNvcmUgcGx1cyB0b25uYW50OiBjZSB0eXBlIGRlIHRocmFwaWUgYXZlYyBsJ2V4dHJhaXQgZGUgY2l0cm9uIGR0cnVpdCBzZXVsZW1lbnQgbGVzIGNlbGx1bGVzIGNhbmNyZXVzZXMgbWFsaWduZXMgZXQgZWxsZSBuJ2FmZmVjdGUgcGFzIGxlcyBjZWxsdWxlcyBzYWluZXMuCk1lYW53aGlsZSwgdGhlIEVudGVydGFpbm1lbnQgU29mdHdhcmUgUmF0aW5ncyBCb2FyZCAoRVNSQiksIHdoaWNoIHByb3ZpZGVzIHJhdGluZ3MgZm9yIGFsbCB2aWRlbyBnYW1lcywgaGFzIGluZGljYXRlZCBpdCBkb2VzIG5vdCBjb25zaWRlciBsb290IGJveGVzIGdhbWJsaW5nLCBhbmQgaGFzIG5vdCBwcm92aWRlZCBnYW1ibGluZyByYXRpbmcgZGVzaWduYXRpb25zIGZvciB0aGVzZSBnYW1lcy4gCkkgcmVidXkgZm9yIDQwMCBhZnRlciBoZSBiZWF0cyBteSBBQS4gTXkgZnJpZW5kIGlzIGp1c3QgZ2V0dGluZyB3aGlwcGVkIGJ5IHRoaXMgZ3V5LiAKU28gSSB3YWxrZWQgYXJvdW5kIHRoZSBhdWRpdG9yaXVtIGxvb2tpbmcgZm9yIGhlbHAgYnV0IHJhbiBpbnRvIGEgYnVuY2ggb2YgcmFuZG9tIHBlb3BsZSBpbiB0aGUgZm95ZXIuIChUaGUgd2VyZSBvcGVuaW5nIHVwIHRoZSBhdWRpdG9yaXVtIHRvIHRoZSBwdWJsaWMgZm9yIHBlb3BsZSB3aG8gd2FudGVkIHRvIHZvdGUpIFdoaWxlIEkgd2FzIGxvb2tpbmcgZm9yIHNvbWVvbmUgd2hvIGNvdWxkIHBvc3NpYmx5IGhlbHAsIEkgbm90aWNlZCB0aGVyZSB3YXMgYSBtYW4sbWF5YmUgaW4gaGlzIGVhcmx5IDUwcywgd2hvIHN0YXJ0ZWQgY291Z2hpbmcuIERpZG4ndCB0aGluayBtdWNoIG9mIGl0IHVudGlsIGhlIGdvdCBsb3VkZXIgYW5kIGxvdWRlciBhbmQgZXZlbnR1YWxseSBmZWxsIHRvIGhpcyBrbmVlcy4gClNsdXRwZW9wbGUgdQpBbHNvLCBtb3N0IHBva2VyIHJvb21zIGhhdmUgYSBwbGFjZSB0byBzaWduIGEgd2FpdGluZyBsaXN0IGZvciBhIHBhcnRpY3VsYXIgZ2FtZS4gCkV4Y2VwdCBpZiB5b3UgcmVhZCB0aGUgcmVzZWFyY2ggaW4gdGhlIGxpbmsgSSBzdXBwbGllZCB5b3Ugc2VlIHRoYXQgcG92ZXJ0eSBhbmQgcmFjaXNtIHdlcmUgcnVsZWQgb3V0IGFzIHJlYXNvbnMgZm9yIHdoeSB3ZWFsdGh5IGJsYWNrIHN0dWRlbnRzIGFyZSByZWNlaXZpbmcgZmFpbGluZyBncmFkZXMgaW4gZWxpdGUgc2Nob29scywgYW5kIHRoYXQgdGhlIGNvbmNsdXNpb24gd2FzIHNpbXBseSBiZWluZyBibGFjayB3YXMgcmVzcG9uc2libGUsIGEgZnVuZGFtZW50YWwgdGhhdCB0cmFuc2NlbmQgc29jaW9lY29ub21pYyBzdGF0dXMgYW5kIGFmZmVjdHMgYm90aCB0aGUgcG9vciBhbmQgcHJpdmlsZWdlZC4KRm9yIGV4YW1wbGUsIGluIGEgJDEvMiBsaW1pdCBnYW1lLCB0aGUgcmFpc2VzIHdpbGwgYmUgYXMgZm9sbG93cywgbGltaXRlZCB0byBmb3VyIHRpbWVzIHRoZSBmaXJzdCBiZXQgdGhhdCB3YXMgbWFkZTogLi4gClNvbWV0aW1lcyBvdXRzIGFyZW4ndCB0cnVlIG91dHMuIEluIGNlcnRhaW4gc2l0dWF0aW9ucywgYW4gb3V0IG1heSBiZSBtb3JlIGJlbmVmaWNpYWwgdG8geW91ciBvcHBvbmVudCB0aGFuIHlvdS4gQSBnb29kIGV4YW1wbGUgaXMgd2hlbiB5b3UncmUgcGxheWluZyBhbiBvcGVuICBzdHJhaWdodCBkcmF3IGJ1dCB0aGUgZmxvcCBwcm9kdWNlcyAzIHN1aXRlZCBjYXJkcy4gWW91IGhhdmUgOCBvdXRzIDQgb24gZWFjaCBlbmQgb2YgdGhlIHN0cmFpZ2h0IGJ1dCB0aGUgY2FyZHMgc3VpdGVkIHRvIHRoZSBmbG9wIGFjdHVhbGx5IGJlbmVmaXQgeW91ciBvcHBvbmVudCBtb3JlIGJlY2F1c2UgdGhleSBob2xkIGEgcG90ZW50aWFsIGZsdXNoIGRyYXcuIFRoZXJlZm9yZSwgeW91ciBvdXRzIGFyZSByZWR1Y2VkIHRvIDYuCkVkZ2Ugc29ydGluZyBzZWVzIHBsYXllcnMgZXhwbG9pdCBkZXNpZ24gaXJyZWd1bGFyaXRpZXMgb24gdGhlIGJhY2tzIG9mIHBsYXlpbmcgY2FyZHMsIGZvciBleGFtcGxlLCBpZGVudGlmeWluZyB0aGF0IHRoZSBlZGdlIG9mIG9uZSBzaWRlIGlzIG1hcmdpbmFsbHkgbG9uZ2VyIHRoYW4gdGhlIGVkZ2Ugb2YgdGhlIG90aGVyLCBpbiBvcmRlciB0byB0cnkgYW5kIGJldHRlciB0aGVpciBvZGRzLgpJIG5vdCBjbGFpbWluZyBJIDEwMCUgcmlnaHQsIGJ1dCBJIHRoaW5rIHlvdSBjYW4gc2VlIHRoZSBpbmR1c3RyeSBpcyBhd2FyZSBvZiB0aGUgaXNzdWUuIApUb2RheSwgYm90aCBwcm9mZXNzaW9uYWwgYW5kIGFtYXRldXIgcnVubmVycyB1c2Ugc3RyZW5ndGggd29ya291dHMgdG8gYWNoaWV2ZSBhIG51bWJlciBvZiBydW5uaW5nIGdvYWxzLi4gClRoZSBsYXN0IGdhbWUgaG93ZXZlciB3ZSBoYWQgYWxyZWFkeSBwbGFubmVkIG9uIGxvc2luZyBhbmQgbGV0dGluZyBoaW0gd2luLiAKUmFpbHdheSBmYW1pbHkgZG9uYXRlcyBkaXNwbGF5IG9mIHRyYWluClRoZXJlIGFyZSBtdWx0aXBsZSBvbmxpbmUgcG9rZXIgdmFyaWFudHMgZm91bmQgYXQgZ2FtYmxpbmcgZXN0YWJsaXNobWVudHMsIGJ1dCBUZXhhcyBIb2xkJ2VtIGlzIGNvbnNpZGVyZWQgYSBjbGFzc2ljIHRoYXQgd291bGQgYmUgYSBwaXR5IG5vdCB0byBpbmNsdWRlIGluIGFueSBjYXNpbm8gbG9iYnkuIEl0IGRlZmluaXRlbHkgaXMgdGhlIG1vc3QgcG9wdWxhciBmb3JtIG9mIG9ubGluZSBwb2tlciBub3dhZGF5cy4gVGV4YXMgSG9sZCdlbSB1c2VzIGEgc3RhbmRhcmQgNTIgY2FyZCBkZWNrLCB3aXRoIGFuIG9ibGlnYXRvcnkgc2h1ZmZsZSBiZWZvcmUgZXZlcnkgaGFuZC4gSW4gYSBnYW1lIG9mIFRleGFzIEhvbGQnZW0gZWFjaCBwbGF5ZXIgc3RhcnRzIHdpdGggdHdvIGhvbGUgY2FyZHMuIFRocmVlIHJvdW5kcyBvZiBjb21tdW5pdHkgY2FyZHMgZm9sbG93LiBUaGV5IGFyZSBkZWFsdCBmYWNlIHVwLCBiZWNvbWluZyBleHBvc2VkIHRvIGV2ZXJ5IHBhcnRpY2lwYW50LCB3aXRoIGJldHRpbmcgdGFraW5nIHBsYWNlIGFmdGVyIGVhY2ggcm91bmQuIFRoZSB3aW5uaW5nIGhhbmQgaXMgdGhlIGJlc3QgNSBjYXJkIGNvbWJpbmF0aW9uLgpJIGZvdW5kIHRoaXMgYXJ0aWNsZSBpbiBhIGJyaWVmIHNlYXJjaCBmb3IgInN3aXRjaGluZyBmcm9tIExIRSB0byBOTEhFIi4gCkkgaGF2ZSBiZWVuIG1lYW5pbmcgdG8ganVzdCBnbyB0aHJvdWdoIGFuZCB3cml0ZSB0aGUgd2hvbGUgc3Rvcnkgb3V0IGJ1dCBhbSBsYXp5LiAKVGhlIFVDIFN0dWRlbnQgSGVhbHRoIEluc3VyYW5jZSBQbGFuKFVDIFNISVApIGlzYSBoZWFsdGggY2FyZSBwcm9ncmFtIGZvciBVQ0xBIHN0dWRlbnRzLiAKU2hlIGhhcyBzZW50IG1lIGxldHRlcnMsIHBpY3R1cmVzIGFuZCBnaWZ0cyBmb3IgeWVhcnMgc2luY2UgdGhhdCBkYXkuIApVc2luZyBBIE1ldGFsIERldGVjdG9yIFRvIFNlYXJjaCBGb3IgR29sZApZb3UgdGFrZSBTaW5nYXBvcmUuIApBZHZhbmNlZCB2ZXJzaW9uOiBGcm9tIGEgc2VhdGVkIHBvc2l0aW9uLCBsaWZ0IG9uZSBsZWcgb2ZmIHRoZSBmbG9vciB3aGlsZSBzdGlsbCBiZW50IG9yIGV4dGVuZCBpdCBvdXQgaW4gZnJvbnQgb2YgeW91ciBib2R5IGZvciBhZGRlZCBkaWZmaWN1bHR5LiBUaGVuIHJlcGVhdCB3aXRoIHRoZSBvdGhlciBsZWcuIFRoZSBrZXkgaXMgdG8ga2VlcCB5b3VyIGhpcHMgZnJvbSBtb3ZpbmcuIElmIHlvdXIgaGlwcyBtb3ZlIHRvIHRoZSBzaWRlIHdoZW4geW91IGxpZnQgeW91ciBsZWcsIHlvdXIgYm9keSBpcyBjb21wZW5zYXRpbmcgZm9yIHdlYWsgcG9zdHVyYWwgbXVzY2xlcy4gVGhpcyB3aWxsIGltcHJvdmUgd2l0aCBwcmFjdGljZS4KV2UndmUgbmV2ZXIgYmVlbiB0aGUgdHlwZSBvZiBwZW9wbGUgdGhhdCBzaG9wIGFyb3VuZCwgYnV0IGl0IHRvb2sgZml2ZSBvciBzaXggdHJpZXMgb3ZlciB0aGUgSW50ZXJuZXQgdG8gc2VlIHRoZSBvbmUgd2Ugd2FudGVkLiAKQmlnIG1pc3Rha2UgdG8gY2JldCB0aGlzIGlzIGFuIGVhc3kgY2hlY2sgYmFjayBmbG9wLiBBZEF4IGlzbnQgdnVsbmVyYWJsZSBhbmQgZG9lc250IG5lZWQgcHJvdGVjdGlvbiBzbyBpdHMgYSB2ZXJ5IHNsYW0gZHVuayB4YmFjayBoYW5kIG9uIGFuIHVuZmF2b3JhYmxlIGJvYXJkLiBUaGVyZXMgbm8gb3ZlcmNhcmQsIHlvdSBoYXZlIGFuIGVhc3kgY2FsbCBvbiB0dXJuZWQgZGlhbW9uZCwgeW91IGJsb2NrIEEgaGlnaHMgd2l0aCBhIGRpYW1vbmQgdGhhdCB3b3VsZCBjYWxsIG5vcm1hbGx5Li4gClRoZSBCb3JnYXRhJ3MgcG9rZXIgcm9vbSBoYXMgcHJvdmVkIGVzcGVjaWFsbHkgcG9wdWxhciwgYW5kIEJvdWdobmVyIGlzIGNvbnNpZGVyaW5nIHRyaXBsaW5nIGl0cyBzaXplLiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBUaGVyZSBhcmUgYSBsb3Qgb2YgcmVncywgYnV0IGFsc28gYSBsb3Qgb2YgZWFzeSBtb25leS4gCkFmdGVyIEhlYXJkIGJyb3VnaHQgYSBwaG90byBvZiBoZXIgd2l0aCBhIGJydWlzZWQgZmFjZSB0byBjb3VydCwgYSBqdWRnZSBvcmRlcmVkIERlcHAgdG8gc3RheSBhd2F5IGZyb20gaGVyLiAKQXMgYSBmaW5hbCB3b3JkIG9mIGNhdXRpb24sIGl0IGlzIGJlc3QgdG8gaG9sZCBvbiB0byB5b3VyIHdpbm5pbmcgY2FyZHMgdW50aWwgdGhlIGRlYWxlciBwdXNoZXMgeW91IHRoZSBwb3QuIApJIHRoaW5rIHdlIHNob3VsZCBmaW5kIGEgd2F5IHRvIG1ha2Ugb2lsIHJlZmluaW5nIGFuZCB1c2FnZSBwb2xsdXRlIGEgbG90IGxlc3MgYW5kIHVzZSBpdCBmb3IgdGhpbmdzIHRoYXQgc3BlY2lmaWNhbGx5IG5lZWQgaXQgc3VjaCBhcyBwbGFzdGljcyBhbmQgb3RoZXIgcGV0cm9jaGVtaWNhbCBieXByb2R1Y3RzIGJ1dCBzaG91bGQgc3dpdGNoIG92ZXIgdG8gcmVuZXdhYmxlcyB0aGF0IHdvdWxkIG1ha2UgYSBtYXJnaW5hbCBkaWZmZXJlbmNlIHdoZW4gZG9uZSBvbiBhIG1hc3NpdmUgc2NhbGUgc3VjaCBhcyBjYXJzLiBJIGRvbnQgc2VlIHdoeSB3ZSBjYW50IGhhdmUgdGhlIGJlc3Qgb2YgYm90aCB3b3JsZHMuIApJZiB3ZSB3ZXJlIHRvIGphbSBvdXIgcmVtYWluaW5nIDI1MCBpbiBoZXJlIGFuZCB3ZSBnZXQgY2FsbGVkIHdlIGhhdmUgYSBmaW5hbCBwb3Qgb2YgNzE1LiAKSmFjcXVlcyBWaWxsZW5ldXZlIGNvbW1lbmNlIGxhIGNvbnZlcnNhdGlvbiBlbiBub3VzIHJhY29udGFudCBjb21tZW50IGlsIHMgc2VudGkgYXByIGF2b2lyIHJlIGNldHRlIHAgcwoiUmFwZSwgYXR0ZW1wdGVkIHJhcGUgYW5kIGFzc2F1bHQgd2l0aCBpbnRlbnQgdG8gcmFwZTogaXMgd2hlbiBhIG1hbiB1c2VzIGhpcyBwZW5pcyB0byBwZW5ldHJhdGUgc29tZW9uZSB2YWdpbmEsIGFudXMgb3IgbW91dGggd2l0aG91dCB0aGVpciBjb25zZW50ICh0aGUgcGVyc29uIGRpZCBub3QgYWdyZWUgdG8gaXQpLiBUaGUgdmljdGltIG9mIHRoZSBvZmZlbmNlIGNhbiBiZSBhIHdvbWFuIG9yIG1hbi4KTm8gaWRlbnRpZnlpbmcgaW5mb3JtYXRpb24sIGluY2x1ZGluZyBhbnl0aGluZyBob3N0ZWQgb24gcGxhdGZvcm1zIG1ha2luZyB0aGF0IGluZm9ybWF0aW9uIHB1YmxpYy4gClRoZSBhbnRpIHBva2llcyBjYW1wYWlnbnMgd2lsbCBiZSBnb2luZyBoZWFkIHRvIGhlYWQgd2l0aCBjYW1wYWlnbnMgZnJvbSBwcm8gcG9rZXIgbWFjaGluZSBwdWJzIGFuZCB0aGUgZ2FtaW5nIGluZHVzdHJ5LgoxIGJldCBsaW1pdCBjb3N0cyBleGFnZ2VyYXRlZApUaGlzIHdhcyBhbiBpbW1lbnNlIHRyYWdlZHkuIFNvLCBhcyBhIHBhcnQgb2YgdGhlICJsZXNzZXIiIHJhY2Ugb2Ygc2xhdnMsIEkgY2Fubm90IGZlZWwgYW55dGhpbmcgZm9yIHRoZW0uIEkgc3VwcG9zZSBpdCBpcyBkaWZmZXJlbnQgdG8gd2VzdGVybmVycyB3aG8gZG8gbm90IGNhcnJ5IHRoZSBzY2FycyBvZiB0aGUgd2FyIGluIHRoZSBuYXRpb25hbCBwc3ljaGUuIFRoZSBvY2N1cGF0aW9uIG9mIEZyYW5jZSB3YXMgYSBqb2tlIGNvbXBhcmVkIHRvIHRoZSBob3Jyb3Igd2UgZW5kdXJlZC4KVGhlIENpdHkgR29sZiByZXRhaW5zIHRoZSBvcmlnaW5hbCBHb2xmJ3MgYmFsYW5jZWQgcHJvcG9ydGlvbmluZyBhbmQgY2xlYW4gbGluZXMgYWxvbmcgd2l0aCBpdHMgYnJvYWQgc2xhYnMgb2YgZ2xhc3Mgd2hpbGUgbG9va2luZyBmcmVzaGVyIGFuZCBtb3JlIHVwIHRvIGRhdGUgdGhhbmtzIHRvIGEgc2xlZWtlciBub3NlIHNvZnRlciBhbmdsZXMuLiAKQnV5IHdoYXQgdGhlIHNjaG9vbC90ZWFjaGVyIHJlcXVlc3RzIGZvciBzY2hvb2wgc3VwcGxpZXMsIG5vdCBldmVyeXRoaW5nIHlvdXIgY2hpbGQgdGhpbmtzIHRoZXkgbmVlZC4gTWFueSBzY2hvb2xzIGVtYWlsIHRoZXNlIGxpc3RzIG91dCB0byBwYXJlbnRzIGF0IHRoZSBlbmQgb2YgSnVuZSBvciBkdXJpbmcgdGhlIHN1bW1lci4gSWYgeW91IGhhdmVuIGdvdCBhbiBlbWFpbGVkIGxpc3QsIGNoZWNrIHlvdXIgc2Nob29sIHdlYnNpdGUuClRoaXMgd2FzIHRoZSB1bnJlYWwgcGFydC4gSXQgd2FzIGluIHRoZSBwcmUgc21hcnQgcGhvbmUgZGF5cy4gSSByZWFsaXplZCB0aGF0IHRoZXJlIHdhcyBubyB3YXkgSSBjb3VsZCBkZXRlcm1pbmUgd2hhdCBkYXkgaXQgd2FzLiBJIGRpZG4gaGF2ZSB0aGUgaW50ZXJuZXQsIG9yIGNhYmxlIHR2LCBhbmQgSSBkaWRuIGdldCBhIGRhaWx5IHBhcGVyLiBIYWQgSSBzbGVwdCBmcm9tIGVhcmx5IFN1bmRheSBhZnRlcm5vb24gdG8gU3VuZGF5IG5pZ2h0PyBIYWQgSSBzbGVwdCBhbGwgdGhyb3VnaCBTdW5kYXkgbmlnaHQgYW5kIE1vbmRheT8gTG9uZ2VyLCBtYXliZT8gVGhlcmUgd2FzIG5vIHdheSB0byB0ZWxsLgpNb29uIGlzIGEgcmVhbCBsaWZlIGxvZ2dlciBhbmQgc2VsZiBkZXNjcmliZWQgaGlsbGJpbGx5IHdobydzIG5ldmVyIG93bmVkIGEgY29tcHV0ZXIgb3IgY2FycmllZCBhIGNyZWRpdCBjYXJkLiBCZWZvcmUgaGlzIGZsaWdodCB0byBMYXMgVmVnYXMgbGFzdCBKdWx5LCBoZSBoYWQgbmV2ZXIgZmxvd24sIGFuZCBoaXMgMSwxMDAgc3EuIApUZWlsIDEgaGFiZSBpY2ggZGllIFp3aWxsaW5nc3N0cm5kZSB2b24gTGEgWmFtb3JhIGJlc2NocmllYmVuLiAKSXQgbWF5IHNvdW5kIGxpa2UgYSBkcmFnIG9uIGhvbGlkYXkgYnV0IGRyZXNzaW5nIHVwIGFkZHMgdG8gdGhlIG9jY2FzaW9uLiAKUGFzIG1vaW5zIGRlIDU1IG9wcmF0aW9ucyBzcGNpYWxlcyBkb250IDE2IGF2ZWMgbGEgRFBTUCBvbnQgdCBtZW5lcy4uIApOb3Qgb25seSBkaWQgdGhleSBkZWFsIGZvciB0aGUgcGF0cm9ucywgdGhleSBhbHNvIGJlY2FtZSByZXNwb25zaWJsZSBmb3IgdGhlIE1ldGFsIDEyIFJvdyBDYXNpbm8gVGFibGUgQ2hpcCBUcmF5IHdpdGggQ292ZXIgYW5kIExvY2suIFdlIG1hZGUgZXZlcnlvbmUgc2lnbiBvdXQgb24gdGhlaXIgcGFydGljdWxhciBvbmUuIApIZWxsIGV2ZW4gRGVhZHBvb2wgd2FzIGEgMTAgeWVhciBiYXR0bGUgcHVzaGluZyBmb3IgbW9yZSBkaXZlcnNlIGxldmVscyBvZiBSIHJhdGVkICJvZmZlbnNpdmUiIGNoYXJhY3RlcnMuLiAKSSB1bmRlcnN0YW5kIHlvdXIgcG9pbnQgb2Ygdmlldy4gWW91IGhhdmUgZXZlcnkgcmlnaHQgdG8gYmUgaGF0ZWZ1bCBhbmQgdGhpcnN0IGZvciBibG9vZC4gSXQgd2FzIGhvcnJpYmxlIGhvdyBoZSBraWxsZWQgdGhvc2UgcGVvcGxlLiAKSSBhbSBhbiBhcHBsaWVkIG1hdGggY29uY2VudHJhdG9yIGFuZCBJIHN0cnVnZ2xlZCBhIGxvdCAoc3RpbGwgZG8pIGJhY2sgaW4gZnJlc2htYW4geWVhciB3aGVuIEkgd2FzIG5vdCB1c2VkIHRvIHRoZSBsYW5ndWFnZSBvZiBjb2xsZWdlIGxldmVsIG1hdGhlbWF0aWNzLiAKSGUgd2FzIGFuIGF2aWQgcG9rZXIgcGxheWVyIGFuZCBvZnRlbiBwYXJ0aWNpcGF0ZWQgaW4gdG91cm5hbWVudHMgYXJvdW5kIHNvdXRoIHdlc3Rlcm4gT250YXJpbyBhbmQgTGFzIFZlZ2FzLCBhbHdheXMgaW4gcHVyc3VpdCBvZiB0aGUgJ2JpZyB3aW4nLiAKT3ZlcmxhbmQgdHJhZGUgbWVhbnQgZ3J1ZWxpbmcgbW9udGhzIG9yIGV2ZW4geWVhcnMgY3Jvc3NpbmcgYXJpZCBkZXNlcnRzIGFuZCBuZWdvdGlhdGluZyBkaWZmaWN1bHQgbW91bnRhaW4gcGFzc2VzIHdoaWxlIGJlaW5nIHRocmVhdGVuZWQgYnkgYmFuZGl0cy4gU28gYXJvbWF0aWNzIHdlcmUgc29vbiB0cmFuc3BvcnRlZCBieSBzZWEsIGxlYWRpbmcgdG8gaW1wcm92ZW1lbnRzIGluIHNhaWxpbmcgdGVjaG5pcXVlcywgdmVzc2VscywgYW5kIG5hdmlnYXRpb24uIE1vbnNvb24gd2luZHMgY2FycmllZCBkb3VibGUgb3V0cmlnZ2VyIGNhbm9lcyBhbG9uZyB0aGUgY2lubmFtb24gcm91dGUgdGhyb3VnaCB0aGUgU291dGggU2Vhcy4gCkJvbmpvdXIgTWljaGVsaW5lLiBOb3RyZSBhcnRpY2xlIHZpc2UganVzdGVtZW50ICBpbmZvcm1lciBsZXMgZ2VucyBzdXIgbGVzIGJvbm5lcyBwcmF0aXF1ZXMgYWZpbiBkJ3ZpdGVyIGxlcyBtYXV2YWlzZXMgc3VycHJpc2VzLiBUZWwgcXUnaW5kaXF1IGRhbnMgbCdhcnRpY2xlIGF1IHBvaW50IDQsIGlsIGVzdCBlc3NlbnRpZWwgZGUgcHJlbmRyZSBjb25uYWlzc2FuY2UgZGVzIGxpbWl0ZXMgZXQgZGVzIGV4Y2x1c2lvbnMgZGUgc2EgcG9saWNlIGF2YW50IGRlIHBhcnRpci4gCkhvd2V2ZXIgd2hlbiBsb29raW5nIGF0IHJlYWwgZGF0YSwgSSBub3QgcG9zaXRpdmUgb24gaG93IHRvIGRvIGl0LiBNYXliZSB5b3UgcHJlZGljdCBhZnRlciB0aGUgZmFjdCB3aXRoIGxpbmVhciByZWdyZXNzaW9uIG9uIHRob3NlIHR3byBzYW1wbGVzIGFuZCBsb29rIGF0IHRoZSBmZWF0dXJlcyB0byBzZWUgd2hpY2ggb25lIGNoYW5nZWQ/IEl0IGEgbGl0dGxlIG9kZCBiZWNhdXNlIGV2ZW4gdGhvdWdoIHlvdXIgcmVhbCBkZXBlbmRlbnQgdmFyaWFibGUgaW5jcmVhc2VzLCBpdCBwb3NzaWJsZSB0aGF0IHRoZSBwcmVkaWN0aW9ucyBkZWNyZWFzZXMgKGR1ZSB0byBub2lzZSBpbiB0aGUgcHJlZGljdGlvbnMpLiAKSWYgdGhlcmUgaXMgZGVtYW5kIGZvciBpdCwgaXQgaGFwcGVucy4gTm9ib2R5IG5lZWRzIHRvIGNvbnZpbmNlIGFueWJvZHkuIFRoZSByZWFsIHByb2JsZW0gaGVyZSBpcyB0aGF0IEJUQyBpbXBsZW1lbnRhdGlvbiBpcyBvdmVyd2hlbG1pbmdseSBjZW50cmFsaXplZCBpbiBCaXRjb2luIENvcmUuIApQb2tlciBkb2VzbiByZWFsbHkgd29yayB0aGF0IHdheS4gCk1hbnkgSW5kaWFuIHdvbWVuIHVzZWQgaXQgYXMgcGFydCBvZiBhIHdlZWtseSByaXR1YWwsIG1hc3NhZ2luZyB0aGUgc2NhbHBzIG9mIGZhbWlseSBtZW1iZXJzIHRvIHByZXZlbnQgc3RyZXNzIGFuZCBldmVuIGlsbG5lc3MgW3NvdXJjZTogT3Nib3JuXS4uIAoiQXQgMTZ0aCBsZXZlbCwgd2hlbmV2ZXIgdGhlIGtpbmV0aWNpc3QgaGFzIGF0IGxlYXN0IDcgcG9pbnRzIG9mIGJ1cm4sIHRoZXNlIGJvbnVzZXMgaW5jcmVhc2UgdG8gYSArNiBzaXplIGJvbnVzIHRvIG9uZSBwaHlzaWNhbCBhYmlsaXR5IHNjb3JlIG9mIGhlciBjaG9pY2UsIGEgKzQgc2l6ZSBib251cyB0byBhIHNlY29uZCBwaHlzaWNhbCBhYmlsaXR5IHNjb3JlIG9mIGhlciBjaG9pY2UsIGFuZCBhICsyIHNpemUgYm9udXMgdG8gdGhlIHJlbWFpbmluZyBwaHlzaWNhbCBhYmlsaXR5IHNjb3JlLiAiLiAKUm9ja2V0dHRwb3dlciAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpCdXQgQmFzaWNhbGx5IGhlIHBsYXllZCBmb3IgYWJvdXQgMSBob3VyIG1vdmluZyBmcm9tIHRhYmxlIHRvIHRhYmxlIGV2ZXJ5IDUgbWlucyB0aWxsIGFsbCB0aGUgbW9uZXkgd2FzIGdvbmUuIApJdCdzIGFsc28gaW5mbHVlbmNlZCBieSByYWNpYWwgZmFjdG9ycy4gQXNpYW5zLCBmb3IgZXhhbXBsZSwgaGF2ZSBsZXNzIGJvbmUgbWFzcyB0aGFuIHdoaXRlcywgYW5kIHdoaXRlcyBoYXZlIGxlc3MgYm9uZSBtYXNzIHRoYW4gYmxhY2tzOyB0aGUgZ3JlYXRlciB5b3VyIGJvbmUgbWFzcywgdGhlIGxlc3MgbGlrZWx5IHlvdSBhcmUgdG8gZGV2ZWxvcCBhcnRocml0aXMgb3IgdGhlIGJyaXR0bGUgYm9uZXMgb2Ygb3N0ZW9wb3Jvc2lzLi4gCkhlIGlzbid0IGRvZyBhZ2dyZXNzaXZlLCBqdXN0IG92ZXIgZXhjaXRlZCBhbmQgZnJ1c3RyYXRlZCBhYm91dCBub3QgYmVpbmcgYWJsZSB0byBncmVldC9wbGF5LiBJIHN0aWxsIGNyaW5nZSBzb29vbyBoYXJkIGF0IHRoaXMuIEFzIGlmIHRoYXQgd2Fzbid0IGJhZCBlbm91Z2gsIGFmdGVyIG15IGRpY2toZWFkIG9mIGEgZG9nIGhhZCBzYWlkIGhpcyBoZWxsb3MgaGUgbm90aWNlZCBhIGdpcmwgam9nZ2luZyBhbmQgc3RhcnRlZCBydW5uaW5nIGFsb25nc2lkZSBoZXIuIEhlJ3MgYSBkYWwgYW5kIHdoaWxlIHdlIGdvIGZvciBkYWlseSBydW5zIGlmIGhlIHNlZXMgc29tZW9uZSBydW5uaW5nIGhlIGp1c3Qgd2FudHMgdG8gcnVuIHdpdGggdGhlbS4gClZhbiBFcHBzIHNlcnZlZCBhcyB0aGUgZm91bmRpbmcgcGFydG5lciBpbiBjaGFyZ2Ugb2YgYWxsIGxlZ2FsIGFuZCBmaW5hbmNlIGFjdGl2aXRpZXMgb2YgdGhlIGNvbXBhbnkgYmVmb3JlIHJldGlyaW5nIGxhc3QgeWVhci4gTXIuIApJIGFjdHVhbGx5IHdyaXR0ZW4gdG8gV2FycmVuIEplZmZzIGluIHByaXNvbiB0byBzZWUgaWYgaGUgcmVzcG9uZCBhcyB3ZWxsIGJ1dCBJIG5vdCBob2xkaW5nIG15IGJyZWF0aC4gCkFwcHR1YnJ1dGFlIHUKRG8gbm90IHB1dCB3b3JkcyBpbiBteSBtb3V0aC4gSWYgeW91IGFyZSBhc2tpbmcgbWUgdG8gbm90IHByZXN1bWUgdG8ga25vdyBTYW0gSHlkZSwgZG8gbm90IHByZXN1bWUgdG8ga25vdyBtZS4gSSBhY3RpdmVseSBkaWQgbm90IGNhbGwgaGltIGEgTmF6aSBvciBhIHdoaXRlIHN1cHJlbWFjaXN0LiAKU28gZ3VhcmQgaXQgYXMgeW91IHdvdWxkIGNhc2guIApFYXJsaWVyIHRvZGF5LCB0aGUgRklBIGhhZCBhbm5vdW5jZWQgaXQgaGFkIHJlc2VydmVkIHRoZSAxMEFNIHRpbWVzbG90IG9mIFN1bmRheSBzY2hlZHVsZSBpbiBjYXNlIG9mIG5lY2Vzc2l0eS4KSGUgd29uIHRoZSBnYW1lJ3MgYmlnZ2VzdCBwcml6ZSwgdGhlIFdvcmxkIFNlcmllcyBNYWluIEV2ZW50LCBpbiAxOTg5IGFuZCBpcyBhbW9uZyB0aGUgdG9wIGxpZmV0aW1lIG1vbmV5IHdpbm5lcnMsIHdpdGggbW9yZSB0aGFuICQ2IG1pbGxpb24gaW4gV29ybGQgU2VyaWVzIGV2ZW50IHByaXplcy4gQnV0IGxhc3QgeWVhciBpdCBhbGwgYmVnYW4gdG8gZmFsbCBhcGFydC4gCkFic29sdXRlbHksIEkgdW5kZXJzdGFuZCB0aGF0IGJ1dCBJIGEgY29tcHV0ZXIgZ3V5IChzYWRseSB0aGlzIHdhcyBiZWZvcmUgZXZlcnl0aGluZyB3YXMgYXZhaWxhYmxlIG9uIHRoZSBJbnRlcm5ldCksIG5vdCBhIGJsaW5kcyBndXksIHNvIEkgaGF2ZSBubyBpZGVhIGlmIGVhY2ggd2luZG93IGlzIGdvaW5nIHRvIGNvc3QgdXMgJDUwLCAkNTAwIG9yICQ1MDAwLiAKVG9nZXRoZXIgd2l0aCBndWVzdCBob3N0IC91L0Jlcm5hcmRpdG8sIHdlIHRhbGsgYWJvdXQgYSBjb25mbGljdCB3aXRoIG1hbnkgbWlzY29uY2VwdGlvbnM6IFRoZSBUYWlwaW5nIFJlYmVsbGlvbiAoMTg1MCAxODY0KS4gClRoYWlsYW5kIGhhcyB0aGUgcXVpbnRlc3NlbnRpYWwgc3BhIGN1bHR1cmUuIFRoZSBjdWlzaW5lIGlzIGxpZ2h0LCB0aGUgYmVhY2hlcyBuZWFybHkgZGVtYW5kIHJlbGF4YXRpb24sIGFuZCB0aGUgcHJpbWFyeSByZWxpZ2lvbiwgQnVkZGhpc20sIGlzIGNlbnRlcmVkIGFyb3VuZCBtaW5kZnVsbmVzcy4gQW5kIGhvdyBtYW55IG90aGVyIGNvdW50cmllcyBoYXZlIGEgbWFzc2FnZSBzdHlsZSBuYW1lZCBmb3IgdGhlbT8gKFRoYWkgbWFzc2FnZSBpcyB0YWtlbiBzbyBzZXJpb3VzbHkgaGVyZSwgaW4gZmFjdCwgdGhhdCA2MCBzdG9uZSB0YWJsZXRzIGNhcnZlZCB3aXRoIHBhbG0gbGVhZiB0ZXh0cyBkZXNjcmliaW5nIGl0IGFyZSBlbnNocmluZWQgaW4gQmFuZ2tvaydzIFdhdCBQaG8gdGVtcGxlLikgVGhhaWxhbmQncyBzcGEgbGFuZHNjYXBlIGNvbnRpbnVlcyB0byBldm9sdmUsIHdpdGggbmV3IHNwYXMgb3BlbmluZyBhbmQgY2xhc3NpY3MgZ2V0dGluZyBiZXR0ZXIgd2l0aCBhZ2UuClNvLiBMb29rIGF0IGFsbCB0aGF0LCBhbmQgZmlndXJlIG91dCB3aGF0ICJmYWlyIiBjb21wZW5zYXRpb24gZm9yIGEgcHJvc3RpdHV0ZSBpcy4gRXZlcnkgc2luZ2xlIG9uZSBvZiB0aG9zZSBmYWN0b3JzIGlzIHNvbWV0aGluZyB0aGF0IHVzdWFsbHkgcmFpc2VzIHNhbGFyeSBvciBwcmljZS4gCkNoYW5nZSBZb3VyIFNjZW5lcnlTbmF0Y2hlZCBtb21lbnRzIG9mIHBlYWNlIGFuZCBxdWlldCwgbG9uZ2VyIG1vbWVudHMgb2Ygc29saXR1ZGUgYW5kIHdlZWtzIG9mIHBvc2l0aXZlIGluYWN0aW9uIGFsbCBoYXZlIHRoZWlyIG1lcml0cy4gVGhpcyBzb3J0IG9mIGNvbXBsZXRlIHJlbGF4YXRpb24gaXMgcHJvYmFibHkgdGhlIGJlc3QgYXBwcm9hY2ggdG8gc3RyZXNzLCBidXQgaXQgaXNuJ3QgYWx3YXlzIHBvc3NpYmxlLCBlc3BlY2lhbGx5IGF0IHdvcmsuIElmIHlvdSBjbG9zZWx5IGV4YW1pbmUgc29tZW9uZSB3aG8ncyBzdHJlc3NlZCBvdXQgZHVlIHRvIGJlaW5nIG92ZXJsb2FkZWQsIHlvdSdsbCBvZnRlbiBub3RpY2UgdGhleSdyZSBub3QgYWN0dWFsbHkgZ2V0dGluZyBtdWNoIGRvbmUuIFdvcnJpZWQgYWJvdXQgaG93IHRoZXkncmUgZ29pbmcgdG8gZmluaXNoIGV2ZXJ5dGhpbmcgdGhleSBmbGl0IGZyb20gdGFzayB0byB0YXNrLCB3YXN0aW5nIG1vcmUgdGltZSByZW1lbWJlcmluZyB3aGVyZSB0aGV5IGhhdmUgZ290IHRvIG9uIGVhY2ggb25lIHRoYW4gdGhleSBzcGVuZCBnZXR0aW5nIHRoZSBqb2JzIGZpbmlzaGVkLgpKdXN0IHRoaW5rLCBpZiB3ZSBkZXZlbG9wIGEgbGV2ZWwgb2YgYXV0b21hdGlvbiB0aGF0IGZyZWVzIGh1bWFua2luZCBmcm9tIGJhc2ljIGlzc3VlcyBsaWtlIGhvdXNpbmcsIHRyYW5zcG9ydGF0aW9uLCBhZ3JpY3VsdHVyZSwgaGVhbHRoY2FyZSwgZXRjLiAKSGUgbmFtZWQgaXQgYWZ0ZXIgaGlzIGxhdGUgYmVsb3ZlZCBidWxsZG9nLCBaaW5nYS4uIApTbyB5b3UgY2FuIGdlbmVyYXRlIGEgdGFncyBmaWxlIHVzaW5nIHVuaXZlcnNhbCBjdGFncyAod2hpY2ggc3VwcG9ydHMgbW9zdCBsYW5ndWFnZXMpIGF0IHRoZSByb290IG9mIHlvdXIgcHJvamVjdCAob3Igd2hlcmV2ZXIsIGJ1dCB0aGF0IHdoYXQgSSBkbyksIGFuZCB0aGVuIHlvdSBoYXZlIGZ1bGwgYWNjZXNzIHRvIHRhZyBiYXNlZCBjb21wbGV0aW9uIGFuZCBuYXZpZ2F0aW9uIGluIHZpbS4gCnNlZW0gdG8gYmUgaHVydGluZyBDYW5hZGlhbiBob3VzZWhvbGRzIGFmdGVyIGFsbAo4LiBCZSBPbmx5IFJlYXNvbmFibHkgVmlvbGVudApCZWZvcmUgYnJpbmdpbmcgdXMgRHViYnlhLCBPbHNvbiBhbHNvIHNwZW50IHllYXJzIHVuZGVyIFJvbmFsZCBSZWFnYW4gZ2V0dGluZyByaWQgb2YgYWZmaXJtYXRpdmUgYWN0aW9uIGluIHNjaG9vbHMgYW5kIGluIGVtcGxveW1lbnQuIGV2ZW4gaGVscGVkIHdpdGggdGhlIGltcGVhY2htZW50IG9mIEJpbGwgQ2xpbnRvbiAobm90IG92ZXIgc29tZXRoaW5nIGFzIHRyaXZpYWwgYXMgbHlpbmcgYWJvdXQgV01EcywgYnV0IG92ZXIgdGhlIGZhciBtb3JlIHNlcmlvdXMgbWF0dGVyIG9mIGFuIGV4dHJhIG1hcml0YWwgYmxvdyBqb2IpLgpTa2lpbmcgaXMgdGhlIHBlcmZlY3Qgc3BvcnQgZm9yIHRoZSBzb2xvIHRyYXZlbGVyLCB3aGF0IHdpdGggd2lkZSBvcGVuIHBpc3RlcyBhbmQgc3BlY3RhY3VsYXIgbW91bnRhaW4gc2NlbmVyeSBvZmZlcmluZyBjb25zdGFudCBjb21wYW5pb25zaGlwLCBhbmQgdGhlIGFiaWxpdHkgam9pbiB0aGUgInNpbmdsZSdzIGxpbmUiIGZvciBxdWlja2VyIGNoYWlybGlmdCBhY2Nlc3MuIE9mIGNvdXJzZSwgdGhlIHNwb3J0IGlzIGFscmVhZHkgYSBwcmljZXkgZW5kZWF2b3IsIGFuZCBzaW5nbGUgc3VwcGxlbWVudHMgZG9uJ3QgaGVscCBidWRnZXQgY29uc2Npb3VzIHNvbG8gdHJhdmVsZXJzLCBlc3BlY2lhbGx5IGlmIHlvdSdyZSB0cnlpbmcgdG8gYmVkIGRvd24gaW4gdGhlIEhvbGx5d29vZCBvZiB0aGUgUm9ja2llczogQXNwZW4sIENvbG9yYWRvLiBGb3J0dW5hdGVseSwgdGhlIHRvd24gZG9lcyBwcm92aWRlIHdhbGxldCBmcmllbmRseSBvcHRpb25zIGZvciBzaW5nbGUgc2tpZXJzIHdpbGxpbmcgdG8gZm9yZWdvIHNvbWUgZ2xhbSwgaW5jbHVkaW5nIHVwIHRvIDUwIHBlcmNlbnQgb2ZmIGRpbmluZyByb29tIG1lbnVzIHNpbXBseSBmb3IgZWF0aW5nIGF0IHRoZSBiYXIsIGFuZCBhZmZvcmRhYmxlIHNpbmdsZSBidW5rcyBhdCB0aGUgd2VsbCBtYWludGFpbmVkIFN0LiAKSSBkb24ga25vdyBob3cgbWFueSBwZW9wbGUgZ2V0IGl0LCBidXQgd2hhdCBiZWVuIGRlc2NyaWJlZCBpbiB0aGVzZSB0aHJlYWRzIGlzIGNvbW1vbiBmb3IgdGhvc2Ugd2hvIGJlZW4gcmFwZWQvYXNzYXVsdGVkLiBUaGVyZSBubyBwbGF5Ym9vayBvdXQgdGhlcmUgb24gaG93IHlvdSBzdXBwb3NlZCB0byByZXNwb25kIHRvIHNoaXQgbGlrZSB0aGlzLiAKRm9sbG93aW5nIGlzIGEgc2FtcGxpbmcgb2YgYWlycG9ydCBob3RlbHMgb24gdGhlIGNvbnRpbmVudHMgd2hlcmUgdGhleSBoYXZlIHRha2VuIGhvbGQuCkplcHBlc2VuIFRlcm1pbmFsIGFuZCBlYWNoIG9mIHRoZSBjb25jb3Vyc2VzIGhhdmUgYSBzZWxlY3Rpb24gb2Ygc2hvcHMgYW5kIHJlc3RhdXJhbnRzIHRvIHNwZW5kIHlvdXIgdGltZSBpbiB3aGlsZSB3YWl0aW5nLiBKZXBwZXNlbiBUZXJtaW5hbCdzIGVzdGFibGlzaG1lbnRzIGNhbiBiZSBmb3VuZCBvbiB0aGUgZmlmdGggYW5kIHNpeHRoIGxldmVscywgd2hpbGUgQ29uY291cnNlIEEncyBhcmUgb24gbGV2ZWxzIDIsIDMgYW5kIDQuIApJbiByZWFsaXR5IHlvdSBhbmQgSSB3aWxsIGJvdGggbmVlZCB0byB1c2UgdGhlbSBhbmQgUm90aCBJUkFzIHRvIHJldGlyZS4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbldBUk5JTkcuIAo4KSBFeGNlc3NpdmUgU3BhbS4gUG9zdGluZyBtdWx0aXBsZSB0aHJlYWRzIGEgZGF5IGluIGV4Y2Vzc2l2ZSB1c2UuIFlvdSBqdXN0IGdldCB5b3VyIGFzcyB1cCBhbmQgb3V0IG9mIHRoZSBnb2RkYW1uZWQgcG9rZXIgY2x1Yi4gCktuZXcgd2hhdCB3YXMgaGFwcGVuaW5nIGFyb3VuZCB0aGUgcmVnaW9uLiBJIGtuZXcgdGhhdCBQZW5uc3lsdmFuaWEgd2FzIG1vdmluZyBpbiB0aGF0IGRpcmVjdGlvbi4gCldoYXQgaXMgY2FzaW5vIHBva2VyIGV4YWN0bHksIGFuZCBob3cgZG8geW91IGdvIGFib3V0IGl0PyBZb3UgbWF5IGhhdmUgcGxheWVkIHRoZSBnYW1lIGJlZm9yZSBpbiB0aGUgY29tZm9ydCBvZiB5b3VyIG93biBob21lIGJ1dCBrZWVwIGluIG1pbmQgdGhhdCBjYXNpbm8gcG9rZXIgaXMgdmVyeSBkaWZmZXJlbnQgaW4gdGhlIGFjdHVhbCBjYXJkcm9vbS4gSXQgaXMgYSBnYW1lIG9mIHNraWxsIHdoZXJlIHlvdSBjb21wZXRlIGFnYWluc3Qgb3RoZXIgcGxheWVycyBpbnN0ZWFkIG9mIHRoZSBob3VzZS4gVGhlIHN0YWtlcyBkb24ndCBoYXZlIHRvIGJlIHNreSBoaWdoLiAKSSBzYWlkIHdlbGwgSSBndWVzcyB3ZSB3aWxsIHNlZSB5b3UgaW4gY291cnQuLiAKSGlzIGFwYXJ0bWVudCBpcyBhYm91dCBhIDM1IG1pbnV0ZSBkcml2ZSBmcm9tIHRoZSBPcmNoaWRzIG9mIEFzaWEsIHdoaWNoIGlzIGxvY2F0ZWQgaW4gYSBzaG9wcGluZyBjZW50ZXIgYW5jaG9yZWQgYnkgYSBQdWJsaXggU3VwZXJtYXJrZXQgb2ZmIFVTIEhpZ2h3YXkgMS4KV2UgYWxzbyBkbyBOT1QgdXNlIHRob3NlIHdlaXJkIGhhcmQgdG9ydGlsbGEgc2hlbGxzIGZvciB0YWNvcy4gV2UgZWl0aGVyIHVzZSBjb3JuIHRvcnRpbGxhIG9yIHdoZWF0IHRvcnRpbGxhLiBCb3RoIHNvZnQuIFdlIGRvIHVzZSBoYXJkZW5lZCBjb3JuIHRvcnRpbGxhcywgYnV0IHdlIGNhbGwgdGhvc2UgInRvc3RhZGFzIiAobGl0LiAidG9hc3RlZCIpIGFuZCB3ZSB1c2UgdGhlbSBmb3IgZGlmZmVyZW50IHRoaW5ncy4gTmFtZWx5LCB3aGF0IGlzIHVzdWFsbHkgdXNlZCBpbiB0aG9zZSBoYXJkIHNoZWxsICJ0YWNvcyIuIFJlYWwgdGFjb3MgYXJlIHNvZnQgYW5kIGNhbiBoYXZlIGEgbXVsdGl0dWRlIG9mIHRoaW5ncyBpbnNpZGUuIEJ1dCB0aGUgdG9ydGlsbGFzIGFyZSBzb2Z0LgpBbGwgeW91IG5lZWQgdG8gZG8gaXMgYWR2YW5jZSBzdGVwIGJ5IHN0ZXAuIFRoZSBBbG9ubmUgS25pZ2h0cyB3aWxsIGNoYXJnZSBhdCB5b3UgYXMgeW91IGVudGVyIHRoZWlyIGFnZ3JvIHJhbmdlLiAKVGhlc2UgYXJlIGFsbCB0aGluZ3MgdGhhdCBhZHVsdHMga2VlcCB0cmFjayBvZiBmb3IgdGhlbXNlbHZlcy4gSSBkaWQga2VlcCBtaW5lIGluIHRoZSBmYW1pbHkgc2FmZSwgd2hlbiBJIGxpdmVkIGF0IGhvbWUuIEJ1dCBJIGFsc28gaGFkIGZyZWUgYWNjZXNzIHRvIHRoYXQgZmFtaWx5IHNhZmUgYW5kIGNvdWxkIGdvIGdldCBteSBkb2N1bWVudHMgYW55IHRpbWUgSSBuZWVkZWQgdGhlbS4gCkRvbid0IGFzayBtZSB3aHkuIFNvIGxldHMgc2F5IHdlIGhhdmUgMTAwIGhlYWx0aCwgdGltZXMgaXQgYnkgOC4gODAwLiBXZSBwdXQgdGhpcyBpbnRvIGNoZWF0IGVuZ2luZSBhbmQgd2UgZ2V0IGEgbGlzdCBvZiBjb2RlcyBvbiB0aGUgbGVmdC4gQnV0IHdlIGhhdmUgdG8gbWFueSwgd2UgZG9uJ3Qga25vdyB3aGljaCBvbmUgaXMgdGhlIGhlYWx0aCBvbmUuIFNvIHdlIGdvIGludG8gYmF0dGxlIGFuZCB3ZSBsb3NlIDEwIGhlYWx0aC4gClRoaXMgZG9lcyBub3QgbWVhbiB0aGF0IGFsbCBpbmZvcm1hdGlvbiBtdXN0IGJlIHByb3ZpZGVkIGluIHJlc3BvbnNlIHRvIGEgcmVxdWVzdCwgdGhlcmUgYXJlIHJlYXNvbnMgaW5jbHVkaW5nIERhdGEgUHJvdGVjdGlvbiwgQ29uZmlkZW50aWFsaXR5IGFuZCBDb21tZXJjaWFsIEludGVyZXN0cyB0aGF0IG1heSBleGVtcHQgdGhlIGluZm9ybWF0aW9uIGZvciBiZWluZyBwcm92aWRlZC4gSWYgdGhpcyBpcyB0aGUgY2FzZSB0aGUgVW5pdmVyc2l0eSB3aWxsIGV4cGxhaW4gaW4gZnVsbCB3aHkgaW5mb3JtYXRpb24gaXMgYmVpbmcgd2l0aGhlbGQgYW5kIHlvdSBoYXZlIHRoZSByaWdodCB0byBhcHBlYWwuLiAKSW4gZmFjdCwgaGUgaGFzIGFwcGVhcmVkIG1vcmUgb2Z0ZW4gdGhhbiBhbnkgb3RoZXIgY2hhcmFjdGVyLCBpbmNsdWRpbmcgTWlja2V5IE1vdXNlLiAKVGhlIGJpZyBxdWVzdGlvbiBvZiB3aHkgd2UgZXZvbHZlZCB0byBnZXQgYSBtZW50YWwgYm9vc3QgZnJvbSBhIHRyaXAgdG8gdGhlIGd5bSwgaG93ZXZlciwgcmVtYWlucyB1bmFuc3dlcmVkLgpJIHJhbiAzeCBhIHdlZWsgZm9yIDMgbW9udGhzIGJlZm9yZSB0YWtpbmcgaXQgYWdhaW4gYW5kIHJhbiBhIGxhcCBsZXNzIHRoYW4gYmVmb3JlLiAKQWlycGFyaWYsIGFzc29jaWF0aW9uIGRlIHN1cnZlaWxsYW5jZSBkZSBsYSBxdWFsaXQgZGUgbCdhaXIgZW4gbGUgZGUgRnJhbmNlLCBwcnZvaXQgcG91ciBhdWpvdXJkJ2h1aSB1biBkcGFzc2VtZW50IGR1IHNldWlsIGQnaW5mb3JtYXRpb24gZXQgZGUgcmVjb21tYW5kYXRpb24sIGxlIHByZmV0IGEgZG9uYyBmaW5hbGVtZW50IGRjaWQgbGEgbWlzZSBlbiBwbGFjZSBkZSBsYSBjaXJjdWxhdGlvbiBkaWZmcmVuY2llICBsJ2ludHJpZXVyIGR1IHByaW10cmUgZGxpbWl0IHBhciBsJ0E4NiA6IHNldWxzIGxlcyB2aGljdWxlcyBtdW5pcyBkJ3VuZSB2aWduZXR0ZSBDcml0J0FpciBkZSBjbGFzc2UgMCAgMyBwb3Vycm9udCBjaXJjdWxlciBkYW5zIGNlIHByaW10cmUuIApUaGV5IGluIG15IGV4cGVyaWVuY2UgYWxzbyBtYWtlIGZvciBhIHByZXR0eSBsYWNrbHVzdHJlIGJlZXIsIEkgbWVhbiB5b3UgYXJlIGV2ZW4gc2F5aW5nIHlvdXJzZWxmIHRoYXQgdGhleSBtYWtlIGEgbmV1dHJhbCBiZWVyLCBpbiBhIHN0eWxlIHRoYXQgc2hvdWxkIHRoZW9yZXRpY2FsbHkgYmUgZG9taW5hdGVkIGJ5IHRoZSB5ZWFzdC4gCklmIHlvdSBnZXQgYSBiYWQgYmVhdCBvciBhbmQgZ2V0IGJ1c3RlZCBvbmNlIG9yIHR3aWNlIHdhaXQgYSBmZXcgcGF5Y2hlY2tzIHdoaWxlIHJlYWRpbmcgdXAgb24gbG93IHN0YWtlcyBsaXZlIGRpZmZlcmVuY2VzIGNvbXBhcmVkIHRvIG9ubGluZSBhbmQga2VlcCBwbGF5aW5nIHlvdXIgb25saW5lIGdhbWUgdG8gc3RheSBzaGFycC4uIApFQ0IgcG9saWN5IG1ha2VycyBhcmUgbWVldGluZyBpbiBGcmFua2Z1cnQgdGhpcyB3ZWVrLCBhbmQgdGhlIE9FQ0Qgc2FpZCB0aGV5IHNob3VsZCBzaWduYWwgYSBkZWxheSB0byBhbnkgcmF0ZSBoaWtlcyBhbmQgcG9zc2libHkgaW1wbGVtZW50IG5ldyBtZWFzdXJlcyB0byBpbXByb3ZlIGZ1bmRpbmcgZm9yIGJhbmtzLiAKT3IgYW4gQXNpYW4gc2xhdyB3aXRoIGNhYmJhZ2UsIGdpbmdlciwgZGFpa29uIGN1Y3VtYmVyLi4gCkFuZCBpdCBjYW4gYmUgY29tYmluZWQgd2l0aCBjaXRpcml6aW5lICh0aGUgYW50aWhpc3RhbWluZSBJIGhhZCBiZWVuIHRha2luZykgb24gYmFkIGRheXMgb3IgdW50aWwgdGhlIHJlc2lzdGFuY2UgaXMgYnVpbHQgdXAuLiAKSmUgdm91ZHJhaXMgYWJvcmRlciBjZXR0ZSBhbmNpZW5uZSBpbmNyaW1pbmF0aW9uIHN1ciBsZSBwbGFuIGR1IGR0b3VybmVtZW50IGRlIG1pbmV1cnMsIGRhbnMgbCdoeXBvdGhzZSBiaWVuIGNvbm51IGR1IG1pbmV1ciBxdWkgImZycXVlbnRlIiBvdSAiZmxpcnRlIiBhdmVjIHVuIGluZGl2aWR1IHVuIHBldSBwbHVzIGcuIApTbWFydCBlbm91Z2ggdG8gbm90IHB1Ymxpc2ggdGhlIGJhY2tkb29yIGRlYWxzLiAKQXQgMjcsIHNoZSB3YXMgZ2l2ZW4gdGhlIHJlc3BvbnNpYmlsaXR5IHRvIGhvc3QgdGhlIGdhbWVzIGZvciBoZXIgYm9zcyBhbmQgaGlzIGhpZ2ggcm9sbGluZyBwb2tlciBidWRkaWVzLCBpbmNsdWRpbmcgTGVvbmFyZG8gRGljYXByaW8uIEhlIHNhdCByaWdodCB0aGVyZSB3aXRoIGhpcyBoZWFkcGhvbmVzLiAKSG9wZWZ1bGx5LCB3ZSBjYW4gdHJhbnNmZXIgb3VyIGtub3dsZWRnZSBpbiB0aGUgY2FzaW5vcyB0aGUgbmV4dCB0aW1lIHdlIGdvLi4gClJpZ2h0IG5vdyBJIGp1c3QgdXNpbmcgdGhlc2UgLiBXaGljaCB3b3JrIHdlbGwgb24gc29tZSB0eXBlcyBvZiBpY2UsIGJ1dCBub3Qgb3RoZXJzLiAKUGFzIGwnYW1vdXIsIGwnYW1vdXIgZm91IHBvdXIgbGEgbXVzaXF1ZSwgb3UgbGUgY2lubWEsIG91IGxhIGxpdHRyYXR1cmUsIGxhIGRhbnNlLCBlbmZpbiBwb3VyIG4naW1wb3J0ZSBxdWVsbGUgcGFzc2lvbiB2YWxhYmxlLiAKSSBtYWRlIGEgcG9pbnQgb2YgY2FsbGluZyBvdXQgTUlMIGFuZCBteSBtb3RoZXIgYXMgR3JhbmRtYSAoaW5zZXJ0IGZpcnN0IG5hbWUgaGVyZSkuIE5laXRoZXIgbGlrZWQgaXQsIGJvdGggd2FudGVkIHRvIGJlIGp1c3QgR3JhbmRtYSwgYnV0IEkgdG9sZCB0aGVtIGl0IHdhcyBzbyBzaGUgd291bGQga25vdyB0aGVpciB2b2ljZXMgYXBhcnQgKEREIG1vc3RseSBzcG9rZSB0byB0aGVtIG9uIHRoZSBwaG9uZSBzbyBib3RoIGJlaW5nIGp1c3QgR3JhbmRtYSB3b3VsZCBoYXZlIG5vdCBtYWRlIGEgY2xlYW4gbGluZSBiZXR3ZWVuIHRoZW0pLi4gClNpbmNlIHJldHVybmluZyB0byB0aGUgZ2FtZSB0aGlzIEFwcmlsL01heSBhcmVhLCBhZnRlciBhIG5lYXIgMyB5ZWFyIGxheW9mZiBJIHdhcyBzdGlsbCBhYmxlIHRvIGNvbWUgYmFjayBhbmQgYmVhdCAyNU5MIG9uIFBTIG92ZXIgYSBsYXJnZSBzYW1wbGUsIGV2ZW4gdGhvdWdoIEkgZmVlbCBjYXNoIGlzIG15IHdlYWtlciBwYXJ0IG9mIG15IGdhbWUsIGFzIEkgcmVhbGx5IGVuam95IE1UVCBtb3JlIHRoYW4gYW55dGhpbmcuIApIZSB3b24gYmFjayB0byBiYWNrIFdTT1AgdGl0bGVzIGluIDE5ODAgYW5kIDE5ODEuIApFdmVuIGlmIGl0IGlzIG9ubHkgYSBsb25nIGJhdGgsIHdpdGggdGhlIGJhYnkgYmVpbmcgZW50ZXJ0YWluZWQgYnkgYSBwYXJ0bmVyLCBmcmllbmQgb3IgcmVsYXRpdmUgaW4gYW5vdGhlciByb29tLCBpdCBjYW4gYnJlYWsgdGhlIGN5Y2xlIG9mIG5lZ2F0aXZlIHRob3VnaHRzIGFuZCBhbnhpZXR5Li4gClRoZW4gU2VuZCA4LiBJbiAyIG1pbnMgdSB3aWxsIGdldCBwYXNzd29yZCAuIApTbyBpcyB0aGlzIHJlYWxseSBMZWlrZW4gZ2V0dGluZyBjdXQgYSBicmVhayBiZWNhdXNlIG9mIGhpcyBmYXRoZXI/IERvZXNuIGxvb2sgbGlrZSBpdC4gQW55IG9mIHRoYXQgd291bGQgaGF2ZSBoYXBwZW5lZCBwcmlvciB0byBhIGdyYW5kIGp1cnkgYmVpbmcgZW1wYW5lbGVkLiAKVGhpcyBSZXNlYXJjaGVyIHdyb3RlIHRvIHVzIChhYm91dCBmb3VyIG1vbnRocyBhZnRlciB0aGUgYWN0aXZpdHkgYmVnYW4pIHRvIGNsYWltIHRoYXQgdGhleSBoYWQgYmVlbiAicG9raW5nIGFyb3VuZCIgYW5kIHRyeWluZyBpbiBzb21lIHdheSB0byAiaGVscCIuIEZvciB0aGUgcGVyaW9kIGJldHdlZW4gb3VyIGRpc2NvdmVyaW5nIHRoZSBicmVhY2ggYW5kIHRoZWlyIGVtYWlsLCB3ZSBhc3N1bWVkIHRoYXQgdGhlIGF0dGFjayB3YXMgaW50ZW5kZWQgdG8gY2F1c2UgdGhlIHNpdGUgaGFybS4gV2UgaGFkIG5vIHJlYXNvbiB0byBiZWxpZXZlIGFueXRoaW5nIGVsc2UuIApTdWRkZW5seSwgbm8gbW9yZSBib3RoZXJzb21lIG5vaXNlIHdpdGhpbiB0aGUgaG91c2UuLiAKVGhlIGhlaWdodCBvZiB0aGlzIGNhbXBhaWduIGhhcHBlbmVkIHNpeCBtb250aHMgYWdvIHdoZW4gSmFtZXMgTyB0aGUgQm9yYXQgb2YgdGhlIFJpZ2h0LCByZWxlYXNlZCB2aWRlb3MgdGhhdCBzdXBwb3NlZGx5IHNob3dlZCBBQ09STiBlbXBsb3llZXMgc3VwcG9ydGluZyBwcm9zdGl0dXRpb24gYW5kIHRheCBmcmF1ZC4gdGhlIGVtcGxveWVlcyB3ZXJlIGZpcmVkIGFuZCBBQ09STiB3YXMgY2xlYXJlZCBvZiBhbnkgd3JvbmcgZG9pbmcsIHRoZSBtYWluc3RyZWFtIG1lZGlhIGNvbnRpbnVlZCB0byBhY3QgYXMgaWYgTyB3ZXJlIGEgImpvdXJuYWxpc3QiIGFuZCB0aGUgdmlkZW9zIHdlcmUgInJlcG9ydGluZy4iIHJlc3BvbmRlZCBieSBibGFja2JhbGxpbmcgQUNPUk4gZnJvbSByZWNlaXZpbmcgYW55IEhvdXNpbmcgYW5kIFVyYmFuIERldmVsb3BtZW50IGZ1bmRzLiBBIGp1ZGdlIGhhcyBzaW5jZSBydWxlZCBDb25ncmVzcyBkZWZ1bmRpbmcgb2YgQUNPUk4gdW5jb25zdGl0dXRpb25hbC4KQm9yZ2F0YSdzIGFjdGlvbiBpcyBnb29kLiAKSSBub3QgdGhhdCBvYnR1c2UsIGl0IG9idmlvdXNseSBub3QgYSAxOjEgc29sdXRpb24gdG8gYWxsIGN1cnJlbnRseSBwZXJmb3JtZWQgYWJvcnRpb25zLiBJZGVhbGx5LCB0aGUgb3RoZXIgb3B0aW9ucyB3b3VsZCBoYXZlIGluY3JlYXNlZCB1c2UgdG9vLiBBYnN0aW5lbmNlIGhhcyBhIDEwMCUgZWZmZWN0aXZlbmVzcyByYXRlLiBCaXJ0aCBjb250cm9sIGNhbiBiZSB2ZXJ5IGVmZmVjdGl2ZSwgZXNwZWNpYWxseSB3aGVuIG11bHRpcGxlIG1ldGhvZHMgYXJlIHVzZWQgdG9nZXRoZXIuCkNDIHdhcyBhIG5pY2UgY29tcGFueSwgb2Z0ZW4gcmF0ZWQgYSByZWFsbHkgZ3JlYXQgb25lIHRvIHdvcmsgZm9yIGluIG15IHRvd24uIApJIGdhaW5lZCB3ZWlnaHQsIHJldGFpbmVkIGZsdWlkIGluIG15IGxlZ3MsIGhhZCBwYWluIGFsbCBvdmVyIG15IGJvZHksIHdhcyB0aXJlZCBhbGwgdGhlIHRpbWUsIGFuZCBzbyBtdWNoIG1vcmUuIApUb3V0ZWZvaXMsIGwnYWNxdWlzaXRpb24gZGUgY2V0dGUgcGVyc29ubmFsaXQgcGV1dCByZW1vbnRlciBhdmFudCBsYSBuYWlzc2FuY2UsICBwYXJ0aXIgZGUgbGEgY29uY2VwdGlvbi4gIEluZmFucyBjb25jZXB0dXMgcHJvIG5hdG8gaGFiZXR1ciBxdW90aWVzIGRlIGNvbW1vZG8gZWp1cyBhZ2l0dXIgLCBjJ2VzdCAgZGlyZSAgbCdlbmZhbnQgY29udSBlc3QgY29uc2lkciBjb21tZSBuIGNoYXF1ZSBmb2lzIHF1ZSB0ZWwgZXN0IHNvbiBpbnRydCAuIApNeSBtb3RoZXIgdGFrZXMgaW5zYW5lIG9mZmVuY2UgdG8gbWUgZG9pbmcgYW55dGhpbmcgZGlmZmVyZW50IHRvIGhvdyBzaGUgZGlkIGl0LiBXYXMgbGl0ZXJhbGx5IHBpc3NlZCBteSBkYXVnaHRlciB3YXMgRUJGIGFuZCBrZXB0IHB1c2hpbmcgbWUgdG8gcHVtcCBqdXN0IHNvIHNoZSBjb3VsZCBnaXZlIGtpZGRvIGEgYm90dGxlLiBXZSBoYWQgdG8gc3RvcCBoZXIgZG9pbmcgbmFwcHkgY2hhbmdlcyBiZWNhdXNlIHNoZSB3b3VsZCBpbnNpc3Qgd2UgaGFkIHRoZSBuYXBweSB0b28gdGlnaHQgYW5kIHRoZW4gYmUgc3VycHJpc2VkIHdoZW4gdGhlIG5hcHB5IHdvdWxkIGxlYWsgZXZlcnl3aGVyZS4KUGVyc25saWNoIHRlbmRpZXJlIGljaCB6dSBkZW4gSHVtYW5pc3RlbiwgZGllIFBpcmF0ZW4gc2NoZWluZW4gZnIgZGllIEVVIGF1Y2ggZ2VlaWduZXQuIExldHp0bGljaCBrYW5uIG1hbiBzaWNoIG1laW5lciBNZWludW5nIG5hY2ggbWVociBkZW5uIGplIGZyIGtsZWluZSBQYXJ0ZWllbiBlbnRzY2hlaWRlbiBkaWVzZXMgSmFoci4gCkEgcHJvZmVzc29yIHN0b29kIGJlZm9yZSBoaXMgcGhpbG9zb3BoeSBjbGFzcyBhbmQgaGFkIHNvbWUgaXRlbXMgaW4gZnJvbnQgb2YgaGltLiAKRnJlZSBTQyBhbmQgRWFybHkgQWNjZXNzIGNhbiBvbmx5IGdvIHNvIGZhciBhcyB3ZWxsLCBldmVuIGlmIHRoZXkgcHJpb3JpdGl6ZSBteSBjYXIgZm9yIGhhcmR3YXJlIHVwZ3JhZGUuIApJbCBzJ2FnaXQgZG9uYyBkJ3VuZSBhcHByb2NoZSB0cnMgc3VidGlsZSwgIGwnaW1hZ2UgZGUgbGEgdm9pZSBwcml2aWxnaWUgcHJvcHJlICBjZXR0ZSB0aHJhcGllIDogZGVzIGluc3BpcnMgZXQgZGVzIGV4cGlycyByZ3VsaWVycywgZGlyZWN0ZW1lbnQgYXUgZmxhY29uLiBPbiBuZSBwZXV0IGRvbmMgcGFybGVyIGRlIGRvc2VzIHBoeXNpb2xvZ2lxdWVzLiBQb3VyIHV0aWxpc2VyIHVuIHBhcmFsbGxlIHJhcGlkZSwgb24gcGV1dCBkaXJlIGRlIGwnb2xmYWN0b3RocmFwaWUgcXUnZWxsZSBlc3QgIGwnYXJvbWF0aHJhcGllIGNlIHF1ZSBsJ2hvbW9wYXRoaWUgZXN0ICBsYSBwaHl0b3RocmFwaWUuIApJIGdvbm5hIGhhdmUgdG8gYWdyZWUgd2l0aCB0aGUgaWRlYSBvZiBwbGFubmluZyBzcGVlZGluZyB5b3UgdXAgbW9yZSB0aGFuIGFueXRoaW5nIGVsc2UuIEdldCBpbiB0aGUgaGFiaXQgb2YgYWx3YXlzIHRoaW5raW5nIHNldmVyYWwgc3RlcHMgYWhlYWQgYW5kIHlvdSBnbyBmYXIuIFllcywgaGF2aW5nIHNraWxscyBkaWFsZWQgaW4gd2lsbCBtYWtlIGl0IHNvIHRoYXQgeW91IGRvbiBoYXZlIHRvIHRoaW5rIHNvIG11Y2ggYWJvdXQgd2hhdCB5b3UgZG9pbmcsIGJ1dCB3aXRoIHRoYXQgZXh0cmEgYnJhaW4gc3BhY2UgeW91IHNob3VsZCBiZSBwbGFubmluZy4gQW55dGltZSB5b3UgZ29pbmcgYW55d2hlcmUgb3V0c2lkZSBvZiB5b3VyIHN0YXRpb24gdGhpbmsgYWJvdXQgYW55dGhpbmcgeW91IGdvaW5nIHRvIG5lZWQgZm9yIGFueSBvZiB5b3VyIG5leHQgc2V2ZXJhbCB0YXNrcyB3aGVyZSB5b3UgZ29pbmcgb3Igb24gdGhlIHdheS4gVGhpbmsgYWJvdXQgdGhlIHRpbWluZyBvZiBldmVyeXRoaW5nLCB3aGF0IHNvcnRzIG9mIGVxdWlwbWVudCB5b3UgbmVlZCwgd2hhdCBzcGFjZXMgYXJlIGF2YWlsYWJsZSBmb3IgeW91IHRvIGRvIGV2ZXJ5dGhpbmcsIGFuZCBwbGFuIG91dCBhcyBtdWNoIG9mIHlvdXIgZGF5IGFzIHBvc3NpYmxlLiBCZSBzdXJlIHRvIHBsYW4gb24gdGhpbmdzIG5vdCB3b3JraW5nIG91dCBhcyB3ZWxsLCBpdCBuZXZlciBkb2VzIHBlcmZlY3RseS4KSSBjYW5ub3QgcmVtZW1iZXIgaWYgdGhlcmUgd2FzIGEgbWVjaGFuaWNhbCByb29tIGFib3ZlIG9yIGJlbG93IHRoZSBvYnNlcnZhdGlvbiBkZWNrLiAKWWVhIHRoaXMgaXNuJ3QgdHJ1ZSBhdCBhbGwgT1AuIExpa2UgdGhlIGNsZWFyZXN0IG9uZSB0aGF0IGlzIGp1c3QgZmxhdCBvdXQgd3JvbmcgaXMgImJvZHkgbGFuZ3VhZ2UiLgpJdCBpcyBtb3JlIGFraW4gdG8gc2VwYXJhdGUgZ3JvdXBzL3RyaWJlcyB3aG8gYXJlIGNvbnRyb2xsZWQgYnkgd2FybG9yZHMgYW5kIHZpbGxhZ2UgZWxkZXJzLiBUaGUgVVMgY2FuIGVhc2lseSBob2xkIEthYnVsLCBidXQgd2hlbiB5b3UgZ2V0IG91dCBpbiB0aGUgdmlsbGFnZXMgdGhlcmUgaXMgbGl0dGxlIHdlIGNhbiBkbyB0byBlc3RhYmxpc2ggY29udHJvbC4uIApGdXJ0aGVyIG91dCB0byBzZWEgdGhlcmUgYXJlIGljZWJlcmdzIGFzIGJpZyBhcyBob3VzZXMuIApNaWtlIGhpZGVzIGluIGhpcyBidW5rZXIgb24gdGhpcywgaGUgY2FuIGJlIENFTywgQWNrbWFuIHRvbGQgdGhlIGNvbXBhbnkgbGVhZCBkaXJlY3RvciwgUm9iZXJ0IEluZ3JhbSBvZiBIYXR0ZXJhcyBWZW50dXJlIFBhcnRuZXJzLCBUaGUgSm91cm5hbCByZXBvcnRlZC4KUmVnYXJkbGVzcywgSSBob3BlIHlvdSBoYXZlIGFuIGFtYXppbmcgc2hvd2VyIGFuZCBoYXZlIGEgdG9uIG9mIGZ1biEKVG8gbXkga25vd2xlZGdlLCBpZiBzaGUgaGFkIHRyaWJhbCBjb25uZWN0aW9ucyB0byB0aGUgZWxkZXJzIHNoZSBjb3VsZCBwb3RlbnRpYWxseSBnZXQgY3VzdG9keS4gVGhhdCB3aGF0IGhhcHBlbmVkIGluIEZsb3JpZGEuIEZpcnN0IE5hdGlvbiBoYXZlIHZlcnkgc2ltaWxhciByZXNlcnZhdGlvbiBsYXdzIGFzIHRoZSBVUy4gCkRhbnMgY2UgY2FkcmUsIGVsbGUgYSBwb3VyIG1pc3Npb24gZGUgcHJ2ZW5pciBsZSBqZXUgImV4Y2Vzc2lmIiBldCBsZXMgcmlzcXVlcyBkJ2FkZGljdGlvbi4uIApDZXJhbWljIGNoaXBzIGFyZSBnb29kIGZvciBjdXN0b21pc2F0aW9uLiBGb3IgY2xheSBjaGlwcyBJIHdvdWxkIGdvIGZvciBQYXVsc29uIGNoaXBzICAgdGhleSBhcmUgdGhlIGJlc3QuIApBbGxvdyB0aGUgY2Fycm90cyB0byBjb29sIHNsaWdodGx5LCB0aGVuIHN0aXIgaW4gdGhlIHRoeW1lLCBzYWdlIGFuZCBsZW1vbiB6ZXN0IGFuZCBqdWljZS4gVGFzdGUgYW5kIHNlYXNvbiB3aXRoIHNhbHQgYW5kIHBlcHBlciwgdGhlbiBtaXggaW4gdGhlIGVnZyB5b2xrcy4gU3Bvb24gdGhlIGNhcnJvdCBtaXh0dXJlIGludG8gdGhlIHByZXBhcmVkIHRhcnQgc2hlbGxzIGFuZCBiYWtlLCBsZWF2aW5nIHRoZSB0YXJ0cyBvbiB0aGUgYmFraW5nIHNoZWV0IGZvciBlYXNlLCBmb3IgMjAgdG8gMjUgbWludXRlcywgb3IgdW50aWwgdGhlIGNydXN0IGlzIGEgbGlnaHQgZ29sZGVuIGFuZCB0aGUgZmlsbGluZyBpcyBzZXQuIApTdHVkZW50cyBjbGljayBhIGxpbmsgdGhhdCB5b3Ugc2hhcmUgd2l0aCB0aGVtLCBhbmQgaXQgc2hvd3MgYXZhaWxhYmxlIGFwcG9pbnRtZW50cyBvbiB5b3VyIGNhbGVuZGFyLiAK|<---