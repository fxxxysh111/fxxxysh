<!DOCTYPE html>
<html class="client-nojs" dir="ltr" lang="ko">
 <head>
  <meta charset="utf-8"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="" name="ResourceLoaderDynamicStyles"/>
  <meta content="MediaWiki 1.33.0-wmf.6" name="generator"/>
  <meta content="origin" name="referrer"/>
  <meta content="origin-when-crossorigin" name="referrer"/>
  <meta content="origin-when-cross-origin" name="referrer"/>
  <meta content="https://upload.wikimedia.org/wikipedia/commons/thumb/9/96/UTC_hue4map_IDN.png/1200px-UTC_hue4map_IDN.png" property="og:image"/>
 </head>
 <body class="mediawiki ltr sitedir-ltr mw-hide-empty-elt ns-0 ns-subject mw-editable page-인도네시아_표준시 rootpage-인도네시아_표준시 skin-vector action-view">
  <div class="noprint" id="mw-page-base">
  </div>
  <div class="noprint" id="mw-head-base">
  </div>
  <div class="mw-body" id="content" role="main">
   [ahref]
   
   <div class="mw-body-content" id="siteNotice">
    <div id="mw-dismissablenotice-anonplace">
    </div>
   </div>
   <div class="mw-indicators mw-body-content">
   </div>
   <h1 class="firstHeading" id="firstHeading" lang="ko">
    [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
   </h1>
   <div class="mw-body-content" id="bodyContent">
    <div class="noprint" id="siteSub">
     위키백과, 우리 모두의 백과사전.
    </div>
    <div id="contentSub">
    </div>
    <div id="jump-to-nav">
    </div>
    [link]
    
    [link]
    
    <div class="mw-content-ltr" dir="ltr" id="mw-content-text" lang="ko">
     <div class="mw-parser-output">
      <div class="thumb tright">
       <div class="thumbinner" style="width:302px;">
        [ahref]
        
        <div class="thumbcaption">
         <div class="magnify">
          [link]
          
         </div>
         <b>
          인도네시아의 표준시
         </b>
         <span style="margin:0px; padding-bottom:1px; font-size:90%; display:block;">
          <li>[search]</li><li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][ahref][link]<li>[link]</li>[link][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
         <span style="margin:0px; padding-bottom:1px; font-size:90%; display:block;">
          <span style="border: 1px solid; border: black; background-color:#00ff00; color:white">
          </span>
          [ahref]
          
          - 인도네시아 중앙 표준시 (WITA)
         </span>
         <span style="margin:0px; padding-bottom:1px; font-size:90%; display:block;">
          [search][search]<li>[link]</li><li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[ahref]
         </span>
         <br/>
         <b>
          인접국
         </b>
         <span style="margin:0px; padding-bottom:1px; font-size:90%; display:block;">
          [ahref][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link][search]<li>[link]</li>[search][ahref]<li>[link]</li><li>[search]</li>[link]
         </span>
         <span style="margin:0px; padding-bottom:1px; font-size:90%; display:block;">
          <span style="border: 1px solid; border: black; background-color:#00cc00; color:white">
           <li>[ahref]</li>[ahref][link]<li>[search]</li><li>[ahref]</li><li>[search]</li>
          </span>
          [link]
          
          - 브루나이, 말레이시아, 필리핀, 싱가포르
         </span>
         <span style="margin:0px; padding-bottom:1px; font-size:90%; display:block;">
          <span style="border: 1px solid; border: black; background-color:#00cccc; color:white">
           [search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
          </span>
          <a href="/wiki/UTC%2B09:00" title="UTC+09:00">
           UTC+09:00
          </a>
          - 동티모르, 팔라우
         </span>
         <span style="margin:0px; padding-bottom:1px; font-size:90%; display:block;">
          <li>[search]</li>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][ahref]<li>[search]</li>[ahref]<li>[ahref]</li><li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li>[link]<li>[ahref]</li>[search]<li>[link]</li>
         </span>
         <span style="margin:0px; padding-bottom:1px; font-size:90%; display:block;">
          [search]<li>[link]</li><li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[link]</li>[link]<li>[search]</li>[link]
         </span>
        </div>
       </div>
      </div>
      <p>
       <li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>
      </p>
      <ul>
       <li>
        <b>
         인도네시아 서부 표준시
        </b>
        -
        [link]
        
        에서 7시간 늦다 (
        [ahref]
        
        ).
       </li>
       <li>
        <b>
         인도네시아 중앙 표준시
        </b>
        - 그리니치 표준시에서 8시간 늦다 (
        [link]
        
        ).
       </li>
       <li>
        <b>
         인도네시아 동부 표준시
        </b>
        - 그리니치 표준시에서 9시간 늦다 (
        [link]
        
        ).
        [link]
        
        와 동일하다.
       </li>
      </ul>
      <p>
       서부 표준시와 중앙 표준시 사이의 기준선은
       [link]
       
       과
       [ahref]
       
       사이를 지나고
       [ahref]
       
       중앙을 가로지른다. 따라서 자바 섬과 칼리만탄 섬 서부까지가 서부 표준시가 적용되며, 발리 섬과 칼리만탄 섬 동부부터는 중앙 표준시가 적용된다. 중앙 표준시와 동부 표준시 사이에서는
       [ahref]
       
       최동단에서부터
       [link]
       
       최동단까지가 기준선이다.
      </p>
      <p>
       인도네시아는 열대지방에 위치한 국가이기 때문에 대부분
       <a class="mw-redirect" href="/wiki/%EC%9D%BC%EA%B4%91%EC%A0%88%EC%95%BD%EC%A0%9C" title="일광절약제">
        일광절약제
       </a>
       를 시행하지 않고 있다. 다만 무아라트웨 시와 마우라이누 시에서는 일광절약제를 비공식적으로 실시하고 있다.
      </p>
      <div class="toc" id="toc">
       <div class="toctitle" dir="ltr" lang="ko">
        <h2>
         <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
        </h2>
        <span class="toctogglespan">
         [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][ahref][link][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
        </span>
       </div>
       <ul>
        <li class="toclevel-1 tocsection-1">
         [link]
         
         <ul>
          <li class="toclevel-2 tocsection-2">
           [link]
           
          </li>
          <li class="toclevel-2 tocsection-3">
           [link]
           
          </li>
          <li class="toclevel-2 tocsection-4">
           <a href="시">
            <span class="tocnumber">
             1.3<li>[search]</li>[ahref]<li>[ahref]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
            <span class="toctext">
             인도네시아 동부 표준시[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li><li>[search]</li>[ahref]<li>[search]</li>[ahref][search]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
           </a>
          </li>
         </ul>
        </li>
       </ul>
      </div>
      <h2>
       [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
      </h2>
      <p>
       앞서 소개한 세 가지 표준시를 지역별로 자세히 살펴본다면 다음과 같다.
      </p>
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <p>
       <b>
        인도네시아 서부 표준시
       </b>
       (
       <b>
        IWST
       </b>
       ) (
       <b>
        WIB
       </b>
       ,
       <span style="font-size: smaller;">
        [ahref]
        
        :
       </span>
       <span lang="id">
        Waktu Indonesia Barat
       </span>
       ) (
       [ahref]
       
       )
      </p>
      <ul>
       <li>
        [ahref]
        
        전역과 그 주변 섬 -
        [ahref]
        
        ,
        <a href="/wiki/%EB%A9%94%EB%8B%A8" title="메단">
         메단
        </a>
        ,
        <a href="/wiki/%ED%8C%8C%EB%8B%B9" title="파당">
         파당
        </a>
        ,
        <a class="mw-redirect" href="/wiki/%ED%94%84%EC%B9%B8%EB%B0%94%EB%A3%A8" title="프칸바루">
         프칸바루
        </a>
        ,
        <a href="/wiki/%ED%8C%94%EB%A0%98%EB%B0%A9" title="팔렘방">
         팔렘방
        </a>
        ,
        <a href="/wiki/%EC%9E%A0%EB%B9%84" title="잠비">
         잠비
        </a>
        ,
        [ahref]
        
        ,
        [ahref]
        
        등
       </li>
       <li>
        [ahref]
        
        전역 -
        [ahref]
        
        ,
        <a href="/wiki/%EC%88%98%EB%9D%BC%EB%B0%94%EC%95%BC" title="수라바야">
         수라바야
        </a>
        ,
        <a href="/wiki/%EC%9E%90%EC%B9%B4%EB%A5%B4%ED%83%80" title="자카르타">
         자카르타
        </a>
        ,
        <a href="/wiki/%EC%8A%A4%EB%A7%88%EB%9E%91" title="스마랑">
         스마랑
        </a>
        ,
        <a href="/wiki/%EC%9A%95%EC%95%BC%EC%B9%B4%EB%A5%B4%ED%83%80" title="욕야카르타">
         욕야카르타
        </a>
        등.
       </li>
       <li>
        [link]
        
        일부 지역 -
        [ahref]
        
        ,
        [link]
        
        /
        [link]
        
        ,
        [ahref]
        
        ,
        [ahref]
        
        등. 다만
        [ahref]
        
        와 무아라이누 시는 일광절약제를 실시하기 때문에 중앙표준시와 같아진다.
       </li>
      </ul>
      <p>
       [search][search][ahref]<li>[link]</li><li>[link]</li>[ahref][ahref][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[link]</li><li>[search]</li>
      </p>
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <p>
       [search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][ahref][ahref]<li>[link]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search][link]
      </p>
      <ul>
       <li>
        <a class="mw-redirect" href="/wiki/%EC%88%A0%EB%9D%BC%EC%9B%A8%EC%8B%9C_%EC%84%AC" title="술라웨시 섬">
         술라웨시 섬
        </a>
        전역 -
        [link]
        
        ,
        [ahref]
        
        ,
        <a href="/wiki/%ED%8C%94%EB%A3%A8" title="팔루">
         팔루
        </a>
        ,
        [link]
        
        등.
       </li>
       <li>
        <a href="/wiki/%EC%86%8C%EC%88%9C%EB%8B%A4_%EC%97%B4%EB%8F%84" title="소순다 열도">
         소순다 열도
        </a>
        전역 -
        [link]
        
        ,
        <a href="/wiki/%EB%A7%88%ED%83%80%EB%9E%8C" title="마타람">
         마타람
        </a>
        ,
        [ahref]
        
        등.
       </li>
       <li>
        [ahref]
        
        일부 지역 -
        [link]
        
        ,
        [link]
        
        ,
        <a class="mw-redirect" href="/wiki/%EB%82%A8%EC%B9%BC%EB%A6%AC%EB%A7%8C%ED%83%84_%EC%A3%BC" title="남칼리만탄 주">
         남칼리만탄 주
        </a>
        /
        [ahref]
        
        ,
        [link]
        
        ,
        [link]
        
        ,
        [link]
        
        등.
       </li>
      </ul>
      <p>
       <a class="new" href="/w/index.php?title=IANA_%EC%8B%9C%EA%B0%84%EB%8C%80_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4&amp;action=edit&amp;redlink=1" title="IANA 시간대 데이터베이스 (없는 문서)">
        IANA 시간대 데이터베이스
       </a>
       로는 'Asia/Makassar'로 구분한다.
      </p>
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <p>
       <b>
        인도네시아 동부 표준시
       </b>
       (
       <b>
        IEST
       </b>
       ) (
       <b>
        WIT
       </b>
       ,
       <span style="font-size: smaller;">
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>
       </span>
       <span lang="id">
        Waktu Indonesia Timur
       </span>
       ) (
       [ahref]
       
       )
      </p>
      <ul>
       <li>
        [link]
        
        전역 -
        [link]
        
        ,
        [ahref]
        
        ,
        [ahref]
        
       </li>
       <li>
        [link]
        
        전역 -
        [ahref]
        
        ,
        [link]
        
        ,
        [ahref]
        
        등.
       </li>
      </ul>
      <p>
       <a class="new" href="/w/index.php?title=IANA_%EC%8B%9C%EA%B0%84%EB%8C%80_%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4&amp;action=edit&amp;redlink=1" title="IANA 시간대 데이터베이스 (없는 문서)">
        IANA 시간대 데이터베이스
       </a>
       로는 'Asia/Jayapura'로 구분한다.
      </p>
      <div aria-labelledby="아시아의_시간" class="navbox" role="navigation" style="padding:3px">
       <table class="nowraplinks collapsible autocollapse navbox-inner" style="border-spacing:0;background:transparent;color:inherit">
        <tbody>
         <tr>
          <th class="navbox-title" colspan="3" scope="col">
           <div class="plainlinks hlist navbar mini">
            <ul>
             <li class="nv-view">
              [ahref]
              
             </li>
             <li class="nv-talk">
              [ahref]
              
             </li>
             <li class="nv-edit">
              <a class="external text" href="/w/index.php?title=%ED%8B%80:%EC%95%84%EC%8B%9C%EC%95%84_%EC%A3%BC%EC%A0%9C&amp;action=edit">
               <abbr style=";;background:none transparent;border:none;-moz-box-shadow:none;-webkit-box-shadow:none;box-shadow:none;" title="이 틀을 편집하기">
                e
               </abbr>
              </a>
             </li>
            </ul>
           </div>
           <div id="아시아의_시간" style="font-size:114%;margin:0 4em">
            아시아의 시간
           </div>
          </th>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;padding:0.35em 1.0em; line-height:1.1em;">
           독립국
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              <a class="new" href="/w/index.php?title=%EB%84%A4%ED%8C%94%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="네팔의 시간 (없는 문서)">
               네팔
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EB%8F%99%ED%8B%B0%EB%AA%A8%EB%A5%B4%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="동티모르의 시간 (없는 문서)">
               동티모르
              </a>
              <sup class="reference" id="cite_ref-n4_1-0">
               [link]
               
              </sup>
             </li>
             <li>
              [link]
              
             </li>
             <li>
              <a class="mw-redirect" href="/wiki/%EB%9F%AC%EC%8B%9C%EC%95%84%EC%9D%98_%EC%8B%9C%EA%B0%84" title="러시아의 시간">
               러시아
              </a>
              <sup class="reference" id="cite_ref-n1_2-0">
               <a href="2">
                [* 2]
               </a>
              </sup>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EB%AA%B0%EB%94%94%EB%B8%8C%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="몰디브의 시간 (없는 문서)">
               몰디브
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EB%AF%B8%EC%96%80%EB%A7%88%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="미얀마의 시간 (없는 문서)">
               미얀마
              </a>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EB%B0%94%EB%A0%88%EC%9D%B8%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="바레인의 시간 (없는 문서)">
               바레인
              </a>
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%8A%A4%EB%A6%AC%EB%9E%91%EC%B9%B4%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="스리랑카의 시간 (없는 문서)">
               스리랑카
              </a>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%8B%9C%EB%A6%AC%EC%95%84%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="시리아의 시간 (없는 문서)">
               시리아
              </a>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%8B%B1%EA%B0%80%ED%8F%AC%EB%A5%B4%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="싱가포르의 시간 (없는 문서)">
               싱가포르
              </a>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%95%84%EB%9E%8D%EC%97%90%EB%AF%B8%EB%A6%AC%ED%8A%B8%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="아랍에미리트의 시간 (없는 문서)">
               아랍에미리트
              </a>
             </li>
             <li>
              [ahref]
              
              <sup class="reference" id="cite_ref-n2_3-0">
               [ahref]
               
              </sup>
             </li>
             <li>
              [link]
              
              <sup class="reference" id="cite_ref-n1_2-1">
               [link]
               
              </sup>
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%9A%B0%EC%A6%88%EB%B2%A0%ED%82%A4%EC%8A%A4%ED%83%84%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="우즈베키스탄의 시간 (없는 문서)">
               우즈베키스탄
              </a>
             </li>
             <li>
              [link]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%9D%B4%EB%9E%80%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="이란의 시간 (없는 문서)">
               이란
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%9D%B4%EC%A7%91%ED%8A%B8%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="이집트의 시간 (없는 문서)">
               이집트
              </a>
              <sup class="reference" id="cite_ref-n3_4-0">
               [link]
               
              </sup>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
              <sup class="reference" id="cite_ref-n8_5-0">
               [link]
               
              </sup>
             </li>
             <li>
              [link]
              
              <sup class="reference" id="cite_ref-n8_5-1">
               [ahref]
               
              </sup>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%A1%B0%EC%A7%80%EC%95%84%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="조지아의 시간 (없는 문서)">
               조지아
              </a>
              <sup class="reference" id="cite_ref-n1_2-2">
               <a href="2">
                [* 2]
               </a>
              </sup>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%B9%B4%EC%9E%90%ED%9D%90%EC%8A%A4%ED%83%84%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="카자흐스탄의 시간 (없는 문서)">
               카자흐스탄
              </a>
              <sup class="reference" id="cite_ref-n1_2-3">
               <a href="2">
                [* 2]
               </a>
              </sup>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
              <sup class="reference" id="cite_ref-n2_3-1">
               [ahref]
               
              </sup>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%ED%83%80%EC%A7%80%ED%82%A4%EC%8A%A4%ED%83%84%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="타지키스탄의 시간 (없는 문서)">
               타지키스탄
              </a>
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
              <sup class="reference" id="cite_ref-n1_2-4">
               [ahref]
               
              </sup>
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [link]
              
             </li>
             <li>
              [link]
              
             </li>
            </ul>
           </div>
          </td>
          <td class="navbox-image" rowspan="4" style="width:1px;padding:0px 0px 0px 2px">
           <div>
            <a class="image" href="/wiki/%ED%8C%8C%EC%9D%BC:Location_of_Asia.svg">
            </a>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;padding:0.35em 1.0em; line-height:1.1em;">
           속령
          </th>
          <td class="navbox-list navbox-even hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [link]
              
              <sup class="reference" id="cite_ref-n5_6-0">
               [ahref]
               
              </sup>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%B0%A8%EA%B3%A0%EC%8A%A4_%EC%A0%9C%EB%8F%84%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="차고스 제도의 시간 (없는 문서)">
               차고스 제도
              </a>
              <sup class="reference" id="cite_ref-n7_7-0">
               [ahref]
               
              </sup>
             </li>
             <li>
              [link]
              
              <sup class="reference" id="cite_ref-n6_8-0">
               [link]
               
              </sup>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EB%8F%99%ED%8A%80%EB%A5%B4%EC%BC%80%EC%8A%A4%ED%83%84%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="동튀르케스탄의 시간 (없는 문서)">
               동튀르케스탄
              </a>
              <sup class="reference" id="cite_ref-n6_8-1">
               [link]
               
              </sup>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%ED%99%8D%EC%BD%A9%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="홍콩의 시간 (없는 문서)">
               홍콩
              </a>
              <sup class="reference" id="cite_ref-n5_6-1">
               [ahref]
               
              </sup>
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <th class="navbox-group" scope="row" style="width:1%;padding:0.35em 1.0em; line-height:1.1em;">
           [link]
           
          </th>
          <td class="navbox-list navbox-odd hlist" style="text-align:left;border-left-width:2px;border-left-style:solid;width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <ul>
             <li>
              [link]
              
              <sup class="reference" id="cite_ref-n2_3-2">
               <a href="3">
                [* 3]
               </a>
              </sup>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EB%82%A8%EC%98%A4%EC%84%B8%ED%8B%B0%EC%95%BC%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="남오세티야의 시간 (없는 문서)">
               남오세티야
              </a>
              <sup class="reference" id="cite_ref-n1_2-5">
               [link]
               
              </sup>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EB%B6%81%ED%82%A4%ED%94%84%EB%A1%9C%EC%8A%A4%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="북키프로스의 시간 (없는 문서)">
               북키프로스
              </a>
             </li>
             <li>
              <a class="new" href="/w/index.php?title=%EC%95%95%ED%95%98%EC%A7%80%EC%95%BC%EC%9D%98_%EC%8B%9C%EA%B0%84&amp;action=edit&amp;redlink=1" title="압하지야의 시간 (없는 문서)">
               압하지야
              </a>
              <sup class="reference" id="cite_ref-n1_2-6">
               [ahref]
               
              </sup>
             </li>
            </ul>
           </div>
          </td>
         </tr>
         <tr>
          <td class="navbox-list navbox-even hlist" colspan="2" style="width:100%;padding:0px">
           <div style="padding:0em 0.25em">
            <div style="padding-left: 7em; font-size: 9pt;">
             <div class="reflist" style="list-style-type: decimal;">
              <div class="mw-references-wrap">
               <ol class="references">
                <li id="cite_note-n4-1">
                 <span class="mw-cite-backlink">
                  <a href="0">
                   ↑
                  </a>
                 </span>
                 <span class="reference-text">
                  <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][link]<li>[search]</li>[link]
                 </span>
                </li>
                <li id="cite_note-n1-2">
                 <span class="mw-cite-backlink">
                  ↑
                  <sup>
                   [link]
                   
                  </sup>
                  <sup>
                   [link]
                   
                  </sup>
                  <sup>
                   [link]
                   
                  </sup>
                  <sup>
                   <a href="3">
                    라
                   </a>
                  </sup>
                  <sup>
                   [ahref]
                   
                  </sup>
                  <sup>
                   [ahref]
                   
                  </sup>
                  <sup>
                   [ahref]
                   
                  </sup>
                 </span>
                 <span class="reference-text">
                  일부 영토가
                  [ahref]
                  
                  에도 속한다.
                 </span>
                </li>
                <li id="cite_note-n2-3">
                 <span class="mw-cite-backlink">
                  [link]<li>[ahref]</li>[link]<li>[search]</li>[link]<li>[link]</li><li>[search]</li><li>[link]</li><li>[ahref]</li><li>[link]</li>[search][link][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
                 </span>
                 <span class="reference-text">
                  지리적으로는
                  [ahref]
                  
                  에 속하지만 역사적·문화적 이유로 종종
                  [link]
                  
                  으로 분류한다.
                 </span>
                </li>
                <li id="cite_note-n3-4">
                 <span class="mw-cite-backlink">
                  <a href="0">
                   ↑
                  </a>
                 </span>
                 <span class="reference-text">
                  <li>[link]</li><li>[search]</li>[search][link]<li>[link]</li><li>[search]</li><li>[link]</li><li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                 </span>
                </li>
                <li id="cite_note-n8-5">
                 <span class="mw-cite-backlink">
                  ↑
                  <sup>
                   [link]
                   
                  </sup>
                  <sup>
                   <a href="1">
                    나
                   </a>
                  </sup>
                 </span>
                 <span class="reference-text">
                  <li>[ahref]</li><li>[link]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[link]</li>[search]
                 </span>
                </li>
                <li id="cite_note-n5-6">
                 <span class="mw-cite-backlink">
                  [link]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li>[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][link]<li>[ahref]</li><li>[link]</li>
                 </span>
                 <span class="reference-text">
                  <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                 </span>
                </li>
                <li id="cite_note-n7-7">
                 <span class="mw-cite-backlink">
                  [link]
                  
                 </span>
                 <span class="reference-text">
                  <li>[search]</li>[search]<li>[link]</li>[link][search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
                 </span>
                </li>
                <li id="cite_note-n6-8">
                 <span class="mw-cite-backlink">
                  ↑
                  <sup>
                   [ahref]
                   
                  </sup>
                  <sup>
                   [link]
                   
                  </sup>
                 </span>
                 <span class="reference-text">
                  [link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>
                 </span>
                </li>
               </ol>
              </div>
             </div>
            </div>
           </div>
          </td>
         </tr>
        </tbody>
       </table>
      </div>
     </div>
     <noscript>
     </noscript>
    </div>
    <div class="printfooter">
     원본 주소 "
     <a dir="ltr" href="/w/index.php?title=인도네시아_표준시&amp;oldid=22364554">
      https://ko.wikipedia.org/w/index.php?title=인도네시아_표준시&amp;oldid=22364554
     </a>
     "
    </div>
    <div class="catlinks" data-mw="interface" id="catlinks">
     <div class="mw-normal-catlinks" id="mw-normal-catlinks">
      [link]
      
      :
      <ul>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
      </ul>
     </div>
     <div class="mw-hidden-catlinks mw-hidden-cats-hidden" id="mw-hidden-catlinks">
      숨은 분류:
      <ul>
       <li>
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div class="visualClear">
    </div>
   </div>
  </div>
  <div id="mw-navigation">
   <h2>
    [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
   </h2>
   <div id="mw-head">
    <div aria-labelledby="p-personal-label" class="" id="p-personal" role="navigation">
     <h3 id="p-personal-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <ul>
      <li id="pt-anonuserpage">
       로그인하지 않음
      </li>
      <li id="pt-anontalk">
       [ahref]
       
      </li>
      <li id="pt-anoncontribs">
       [ahref]
       
      </li>
      <li id="pt-createaccount">
       [link]
       
      </li>
      <li id="pt-login">
       [ahref]
       
      </li>
     </ul>
    </div>
    <div id="left-navigation">
     <div aria-labelledby="p-namespaces-label" class="vectorTabs" id="p-namespaces" role="navigation">
      <h3 id="p-namespaces-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="selected" id="ca-nstab-main">
        <span>
         [link]
         
        </span>
       </li>
       <li class="new" id="ca-talk">
        <span>
         [link]
         
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-variants-label" class="vectorMenu emptyPortlet" id="p-variants" role="navigation">
      <h3 id="p-variants-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
    </div>
    <div id="right-navigation">
     <div aria-labelledby="p-views-label" class="vectorTabs" id="p-views" role="navigation">
      <h3 id="p-views-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul>
       <li class="collapsible selected" id="ca-view">
        <span>
         읽기[link]<li>[search]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[ahref]</li>
        </span>
       </li>
       <li class="collapsible" id="ca-edit">
        <span>
         [ahref]
         
        </span>
       </li>
       <li class="collapsible" id="ca-history">
        <span>
         역사 보기<li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
        </span>
       </li>
      </ul>
     </div>
     <div aria-labelledby="p-cactions-label" class="vectorMenu emptyPortlet" id="p-cactions" role="navigation">
      <h3 id="p-cactions-label">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <ul class="menu">
      </ul>
     </div>
     <div id="p-search" role="search">
      <h3>
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <form action="/w/index.php" id="searchform">
       <div id="simpleSearch">
       </div>
      </form>
     </div>
    </div>
   </div>
   <div id="mw-panel">
    <div id="p-logo" role="banner">
     [link]
     
    </div>
    <div aria-labelledby="p-navigation-label" class="portal" id="p-navigation" role="navigation">
     <h3 id="p-navigation-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="n-mainpage-description">
        [link]
        
       </li>
       <li id="n-portal">
        <a href="/wiki/%EC%9C%84%ED%82%A4%EB%B0%B1%EA%B3%BC:%EC%82%AC%EC%9A%A9%EC%9E%90_%EB%AA%A8%EC%9E%84" title="위키백과 참여자를 위한 토론/대화 공간입니다.">
         사용자 모임
        </a>
       </li>
       <li id="n-currentevents">
        [ahref]
        
       </li>
       <li id="n-recentchanges">
        [search]
        
       </li>
       <li id="n-index">
        <a href="/wiki/%ED%8A%B9%EC%88%98:%EB%AA%A8%EB%93%A0%EB%AC%B8%EC%84%9C">
         모든 문서 보기
        </a>
       </li>
       <li id="n-randompage">
        [ahref]
        
       </li>
       <li id="n-help">
        [link]
        
       </li>
       <li id="n-sitesupport">
        [ahref]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-tb-label" class="portal" id="p-tb" role="navigation">
     <h3 id="p-tb-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="t-whatlinkshere">
        [ahref]
        
       </li>
       <li id="t-recentchangeslinked">
        <a accesskey="k" href="/wiki/%ED%8A%B9%EC%88%98:%EB%A7%81%ED%81%AC%EC%B5%9C%EA%B7%BC%EB%B0%94%EB%80%9C/%EC%9D%B8%EB%8F%84%EB%84%A4%EC%8B%9C%EC%95%84_%ED%91%9C%EC%A4%80%EC%8B%9C" rel="nofollow" title="이 문서에서 링크한 문서의 최근 바뀜 [k]">
         가리키는 글의 최근 바뀜
        </a>
       </li>
       <li id="t-upload">
        [ahref]
        
       </li>
       <li id="t-specialpages">
        [ahref]
        
       </li>
       <li id="t-permalink">
        [ahref]
        
       </li>
       <li id="t-info">
        [ahref]
        
       </li>
       <li id="t-wikibase">
        [ahref]
        
       </li>
       <li id="t-cite">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EC%9D%B4%EB%AC%B8%EC%84%9C%EC%9D%B8%EC%9A%A9&amp;page=%EC%9D%B8%EB%8F%84%EB%84%A4%EC%8B%9C%EC%95%84_%ED%91%9C%EC%A4%80%EC%8B%9C&amp;id=22364554" title="이 문서를 인용하는 방법에 대한 정보">
         이 문서 인용하기
        </a>
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-coll-print_export-label" class="portal" id="p-coll-print_export" role="navigation">
     <h3 id="p-coll-print_export-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li id="coll-create_a_book">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:%EC%B1%85&amp;bookcmd=book_creator&amp;referer=%EC%9D%B8%EB%8F%84%EB%84%A4%EC%8B%9C%EC%95%84+%ED%91%9C%EC%A4%80%EC%8B%9C">
         책 만들기
        </a>
       </li>
       <li id="coll-download-as-rdf2latex">
        <a href="/w/index.php?title=%ED%8A%B9%EC%88%98:ElectronPdf&amp;page=%EC%9D%B8%EB%8F%84%EB%84%A4%EC%8B%9C%EC%95%84+%ED%91%9C%EC%A4%80%EC%8B%9C&amp;action=show-download-screen">
         PDF로 다운로드
        </a>
       </li>
       <li id="t-print">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
    <div aria-labelledby="p-lang-label" class="portal" id="p-lang" role="navigation">
     <h3 id="p-lang-label">
      [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
     </h3>
     <div class="body">
      <ul>
       <li class="interlanguage-link interwiki-ar">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-en">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-hi">
        [link]
        
       </li>
       <li class="interlanguage-link interwiki-hr">
        <a class="interlanguage-link-target" href="/wiki/Vremenske_zone_u_Indoneziji" hreflang="hr" lang="hr" title="Vremenske zone u Indoneziji – 크로아티아어">
         Hrvatski
        </a>
       </li>
       <li class="interlanguage-link interwiki-id">
        <a class="interlanguage-link-target" href="/wiki/Zona_waktu_Indonesia" hreflang="id" lang="id" title="Zona waktu Indonesia – 인도네시아어">
         Bahasa Indonesia
        </a>
       </li>
       <li class="interlanguage-link interwiki-ja">
        <a class="interlanguage-link-target" href="/wiki/%E3%82%A4%E3%83%B3%E3%83%89%E3%83%8D%E3%82%B7%E3%82%A2%E6%99%82%E9%96%93" hreflang="ja" lang="ja" title="インドネシア時間 – 일본어">
         日本語
        </a>
       </li>
       <li class="interlanguage-link interwiki-jv">
        <a class="interlanguage-link-target" href="/wiki/Zona_wektu_Indon%C3%A9sia" hreflang="jv" lang="jv" title="Zona wektu Indonésia – 자바어">
         Basa Jawa
        </a>
       </li>
       <li class="interlanguage-link interwiki-km">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-ms">
        [link]
        
       </li>
       <li class="interlanguage-link interwiki-ru">
        <a class="interlanguage-link-target" href="/wiki/%D0%92%D1%80%D0%B5%D0%BC%D1%8F_%D0%B2_%D0%98%D0%BD%D0%B4%D0%BE%D0%BD%D0%B5%D0%B7%D0%B8%D0%B8" hreflang="ru" lang="ru" title="Время в Индонезии – 러시아어">
         Русский
        </a>
       </li>
       <li class="interlanguage-link interwiki-simple">
        [ahref]
        
       </li>
       <li class="interlanguage-link interwiki-vi">
        <a class="interlanguage-link-target" href="/wiki/Gi%E1%BB%9D_%E1%BB%9F_Indonesia" hreflang="vi" lang="vi" title="Giờ ở Indonesia – 베트남어">
         Tiếng Việt
        </a>
       </li>
       <li class="interlanguage-link interwiki-zh">
        <a class="interlanguage-link-target" href="/wiki/%E5%8D%B0%E5%BA%A6%E5%B0%BC%E8%A5%BF%E4%BA%9A%E6%A0%87%E5%87%86%E6%97%B6%E9%97%B4" hreflang="zh" lang="zh" title="印度尼西亚标准时间 – 중국어">
         中文
        </a>
       </li>
      </ul>
      <div class="after-portlet after-portlet-lang">
       <span class="wb-langlinks-edit wb-langlinks-link">
        [link]
        
       </span>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div id="footer" role="contentinfo">
   <ul id="footer-info">
    <li id="footer-info-lastmod">
     이 문서는 2018년 9월 12일 (수) 18:07에 마지막으로 편집되었습니다.
    </li>
    <li id="footer-info-copyright">
     모든 문서는
     [link]
     
     에 따라 사용할 수 있으며, 추가적인 조건이 적용될 수 있습니다. 자세한 내용은
     [link]
     
     을 참고하십시오.
     <br>
      [search]<li>[link]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[search]</li>
     </br>
     Wikipedia®는 미국 및 다른 국가에 등록되어 있는
     [link]
     
     소유의 등록 상표입니다.
    </li>
   </ul>
   <ul id="footer-places">
    <li id="footer-places-privacy">
     [ahref]
     
    </li>
    <li id="footer-places-about">
     [link]
     
    </li>
    <li id="footer-places-disclaimer">
     [ahref]
     
    </li>
    <li id="footer-places-developers">
     [ahref]
     
    </li>
    <li id="footer-places-cookiestatement">
     [ahref]
     
    </li>
    <li id="footer-places-mobileview">
     [ahref]
     
    </li>
   </ul>
   <ul class="noprint" id="footer-icons">
    <li id="footer-copyrightico">
     <a href="/">
     </a>
    </li>
    <li id="footer-poweredbyico">
     <a href="/">
     </a>
    </li>
   </ul>
   <div style="clear: both;">
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0150
  </b>
 </body>
</html>
