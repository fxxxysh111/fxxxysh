<!DOCTYPE html>
<html lang="ko">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, initial-scale=1.0, maximum-scale=1" name="viewport"/>
  <meta content="telephone=no" name="format-detection"/>
  <meta content="nextez" name="author"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="/field/traffic.do" property="og:url">
   <meta content="website" property="og:type">
    <meta content="제주시홈페이지" property="og:title">
     <meta content="제주시,시민참여,민원,정보공개,제주시소식,제주시소개,분야별정보" property="og:description">
      <meta content="" property="og:image">
       <title>
        [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
       </title>
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body>
  <div id="wrap">
   <header id="header_wrap">
    <div class="skip-navi" id="skip_navi">
     <div class="skip-wrap">
      <a href="t">
       본문 내용 바로가기
      </a>
      <a href="u">
       주 메뉴 바로가기
      </a>
     </div>
    </div>
    <div class="header_area">
     <h1>
      [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
     </h1>
     <div class="search_area" id="search_lay">
      <div class="container">
       <h2 class="hidden">
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <div class="search_box">
        <div class="input">
         <form action="/tool/search/" id="search_form_wise" method="post" name="search_form_wise" onsubmit="return false;">
          <label class="hidden" for="search_query">
           검색입력
          </label>
          <button id="jejuSearchBtn" onclick="javascript:fn_searchWise();" title="새창" type="button">
          </button>
         </form>
        </div>
        <div class="suggest_lay" style="display: none;">
         <ul id="autoCompleteUL">
         </ul>
        </div>
        <span class="close_btn">
         [ahref]
         
        </span>
       </div>
      </div>
     </div>
     <ul class="right_menu">
      <li id="mainmenu">
       [ahref]
       
      </li>
      <li id="fullmenu">
       <a href=";" onclick="show_fullmenu();return false;">
       </a>
       <div class="fullmenu_wrap" id="fullmenu_lay">
        <div class="fullmenu_area">
         <dl>
          <dt>
           시민참여
          </dt>
          <dd>
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/participation/compliment.do">
              칭찬합시다
             </a>
            </li>
            <li>
             <a href="/participation/free.do">
              자유게시판
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/participation/simini.do">
              시민정보화교육
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/jsp/user/pp/UppMain.jsp" target="_blank" title="새창">
              제안/아이디어광장
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </dd>
         </dl>
         <dl>
          <dt>
           민원
          </dt>
          <dd>
           <ul>
            <li>
             <a href="/complaints/intro.do">
              민원종합안내
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/" target="_blank" title="새창">
              인터넷 민원발급(민원24)
             </a>
            </li>
            <li>
             <a href="/complaints/intro/nonperson.do">
              무인민원발급창구안내
             </a>
            </li>
            <li>
             <a href="/complaints/intro/general.do">
              종합민원실창구안내
             </a>
            </li>
            <li>
             <a href="/emwp/gov/mogaha/ntis/web/caf/mwwd/action/CafMwWdOpenAction.do?method=selectListMwOpn&amp;menu_id=CAFOPNWebMwOpenL&amp;jndinm=CafMwWdOpenEJB&amp;methodnm=selectListMwOpn&amp;context=NTIS" target="_blank" title="새창">
              인터넷 민원처리공개
             </a>
            </li>
            <li>
             <a href="r" target="_blank" title="새창">
              편리한 지방세
             </a>
            </li>
            <li>
             <a href="/complaints/penalty.do">
              세외수입(과태료) 알림
             </a>
            </li>
            <li>
             <a href="/openIndexPage.do" target="_blank" title="새창">
              도로명주소 안내서비스
             </a>
            </li>
            <li>
             <a href="/search/jjc_searchForm.asp" target="_blank" title="새창">
              주정차 과태료 검색
             </a>
            </li>
            <li>
             <a href="/complaints/gnotice.do">
              생활쓰레기 불법투기 신고방
             </a>
            </li>
           </ul>
          </dd>
         </dl>
         <dl>
          <dt>
           정보공개
          </dt>
          <dd>
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/information/workplan2018.do">
              2018 주요업무계획
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/finance/contract/order/work.htm" target="_blank" title="새창">
              계약정보공개
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/open/law/current/current.htm" target="_blank" title="새창">
              법무정보
             </a>
            </li>
            <li>
             <a href="/finance/budget/2015.htm" target="_blank" title="새창">
              예산정보
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/information/partdata.do">
              부서자료실
             </a>
            </li>
           </ul>
          </dd>
         </dl>
         <dl>
          <dt>
           제주시소개
          </dt>
          <dd>
           <ul>
            <li>
             <a href="/sijang/main.do" target="_blank" title="새창">
              열린시장실
             </a>
            </li>
            <li>
             <a href="/intro/video.do">
              제주시 홍보영상
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/intro/org.do">
              조직도
             </a>
            </li>
            <li>
             <a href="/intro/building.do">
              청사안내
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/intro/historya.do">
              역사속 제주
             </a>
            </li>
            <li>
             <a href="/intro/location.do">
              찾아오시는 길
             </a>
            </li>
           </ul>
          </dd>
         </dl>
         <dl>
          <dt>
           분야별정보
          </dt>
          <dd>
           <ul>
            <li>
             <a href="/field/welfare.do">
              복지
             </a>
            </li>
            <li>
             <a href="/field/safety.do">
              안전
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/field/culture.do">
              문화/체육
             </a>
            </li>
            <li>
             <a href="/field/life.do">
              생활
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/field/tour.do">
              관광
             </a>
            </li>
           </ul>
          </dd>
         </dl>
         <dl>
          <dt>
           관광
          </dt>
          <dd>
           <ul>
            <li>
             <a href="t" target="_blank" title="새창">
              관광정보
             </a>
            </li>
            <li>
             <a href="/kr/tourInfo/guide?tap=three&amp;menuId=DOM_000001724001000000#" target="_blank" title="새창">
              제주관광지도신청
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="m" target="_blank" title="새창">
              제주시티투어
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </dd>
         </dl>
        </div>
       </div>
      </li>
      <li id="search_btn">
       <a href=";" onclick="show_search();return false;">
       </a>
      </li>
     </ul>
     <div id="menu_area">
      <div class="gnb_menu_area">
       <div>
        <div class="etc_site">
         <a href="#">
          주요 사이트
         </a>
         <ul>
          <li class="on">
           [link]
           
          </li>
          <li>
           <a href="r" target="_blank" title="새창">
            제주특별자치도
           </a>
          </li>
          <li>
           <a href="r" target="_blank" title="새창">
            서귀포시
           </a>
          </li>
          <li>
           <a href="r" target="_blank" title="새창">
            제주도의회
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
        <div class="language" id="language">
         [ahref]
         
         <ul class="language_menu">
          <li>
           <a href="h" onclick="fn_csli_etgi_trans('kte');" title="새창">
            English
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
        <div class="header_sns_link">
         <a href="/wowjejusi" target="_blank" title="제주시청 페이스북(새창)">
         </a>
         [link]
         
         <a href="/wowjejusi" target="_blank" title="제주시청 다음블로그(새창)">
         </a>
         <a href="/wowjejusi" target="_blank" title="제주시청 네이버블로그(새창)">
         </a>
        </div>
        <ul class="gnb_menu">
         <li>
          [ahref]
          
         </li>
         <li>
          <a class="loginLink" href="#">
           로그인
          </a>
         </li>
        </ul>
       </div>
      </div>
      <nav id="lnb_menu">
       <h2 class="hidden" id="main_menu">
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <ul>
        <li class="jejusi_1">
         [link]
         
         <div class="menu_depth">
          <div class="menu_depth_detail">
           <ul>
            <li>
             <span>
              <li>[link]</li>[search][ahref][search][search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><li>[search]</li><li>[search]</li><li>[ahref]</li><li>[search]</li>
             </span>
            </li>
            <li>
             <span>
              [link]
              
             </span>
            </li>
            <li>
             <span>
              [link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[link]</li>
             </span>
            </li>
            <li>
             <span>
              [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][link][search][search][ahref]<li>[link]</li>
             </span>
            </li>
            <li>
             <span>
              <a href="/participation/discussion.do">
               On-Line 현안토론방
              </a>
             </span>
            </li>
            <li>
             <span>
              <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[link]</li>[ahref]<li>[link]</li>[search]<li>[ahref]</li>
             </span>
            </li>
            <li>
             <span>
              <li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[link]</li>[ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
            </li>
            <li>
             <span>
              [ahref]
              
             </span>
            </li>
            <li>
             <span>
              [ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link][ahref]<li>[ahref]</li>
             </span>
            </li>
            <li>
             <span>
              <li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search][search][search][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[link]
             </span>
            </li>
            <li class="depth">
             <span>
              <a href="/participation/arbeit.do">
               대학생 아르바이트 모집
              </a>
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/participation/arbeit/receipt.do">
                아르바이트신청서접수
               </a>
              </li>
              <li>
               <a href="/participation/arbeit/view.do">
                아르바이트접수확인
               </a>
              </li>
             </ul>
            </li>
            <li>
             <span>
              [ahref]
              
             </span>
            </li>
           </ul>
          </div>
         </div>
        </li>
        <li class="jejusi_2">
         [link]
         
         <div class="menu_depth">
          <div class="menu_depth_detail">
           <ul>
            <li class="depth">
             <span>
              [link]
              
             </span>
             <ul class="menu_3depth">
              <li>
               [link]
               
              </li>
              <li>
               <a href="/open/minwon/form.htm" target="_blank" title="새창">
                민원서식안내
               </a>
              </li>
              <li>
               <a href="/complaints/intro/visit.do">
                민원1회방문처리제
               </a>
              </li>
              <li>
               <a href="/complaints/intro/judge.do">
                사전심사청구제도
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/complaints/intro/dictation.do">
                구술/전화신청대상민원안내
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/complaints/intro/convenience.do">
                민원편의시책
               </a>
              </li>
              <li>
               <a href="/complaints/intro/happiness.do">
                시민행복 민생시책
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/fileDown.ac?path=/jejusi/download/minwon_manual.hwp" target="_blank" title="새창">
                민원사무편람
               </a>
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[link]</li><li>[ahref]</li><li>[link]</li>
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/complaints/center/nation.do">
                국민신문고
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/join/notify/environment.htm" target="_blank" title="새창">
                환경신문고
               </a>
              </li>
              <li>
               <a href="/fz.prpsl.RegulPrpslIsF.laf" target="_blank" title="새창">
                규제개혁신문고
               </a>
              </li>
              <li>
               <a href="/frt/sub/a03/corruptionDeclareInfo/screen.do" target="_blank" title="새창">
                공직비리익명신고센터
               </a>
              </li>
              <li>
               <a href="/complaints/center/lamp.do">
                가로등고장신고
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li>
             <span>
              [link]
              
             </span>
            </li>
            <li>
             <span>
              <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li>[search][search][link][link]<li>[link]</li><li>[search]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
             </span>
            </li>
            <li>
             <span>
              <a href="/complaints/intro/general.do">
               종합민원실창구안내
              </a>
             </span>
            </li>
            <li>
             <span>
              <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]<li>[search]</li>[search][link][link][link]<li>[ahref]</li>[search]<li>[search]</li><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]
             </span>
            </li>
            <li class="depth">
             <span>
              [ahref]
              
             </span>
             <ul class="menu_3depth">
              <li>
               [link]
               
              </li>
              <li>
               <a href="/main/?cmd=LPTIHA0R0" target="_blank" title="새창">
                지방세미리계산해보기
               </a>
              </li>
              <li>
               <a href="/main/?cmd=LPTINB1R0" target="_blank" title="새창">
                시가표준액 조회
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/land_info/info/landprice/landprice.do" target="_blank" title="새창">
                개별공시지가 조회
               </a>
              </li>
             </ul>
            </li>
            <li>
             <span>
              [search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][link][search][ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link]<li>[ahref]</li>
             </span>
            </li>
            <li>
             <span>
              <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[ahref]</li><li>[ahref]</li>[link]<li>[link]</li><li>[search]</li><li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[ahref]</li>
             </span>
            </li>
            <li>
             <span>
              <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][search]<li>[ahref]</li><li>[ahref]</li><li>[link]</li>[search][ahref][ahref]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[search]
             </span>
            </li>
            <li>
             <span>
              <a href="/complaints/gnotice.do">
               생활쓰레기 불법투기 신고방
              </a>
             </span>
            </li>
           </ul>
          </div>
         </div>
        </li>
        <li class="jejusi_3">
         <a href="/information.do">
          정보공개
         </a>
         <div class="menu_depth">
          <div class="menu_depth_detail">
           <ul>
            <li class="depth">
             <span>
              [ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/information/intro/news.do">
                새소식
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/information/intro/exnotice.do">
                타기관 고시/공고
               </a>
              </li>
             </ul>
            </li>
            <li>
             <span>
              [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
             </span>
            </li>
            <li class="depth">
             <span>
              <li>[link]</li>[ahref]<li>[search]</li>[link][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>[search][link][search][link]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li><li>[ahref]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
             </span>
             <ul class="menu_3depth">
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/information/statistics/business.do">
                사업체조사
               </a>
              </li>
              <li>
               <a href="/information/statistics/mine.do">
                광업ㆍ제조업 조사
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [link]
              
             </span>
             <ul class="menu_3depth">
              <li>
               [search]
               
              </li>
              <li>
               <a href="/information/open/institution.do">
                제도안내
               </a>
              </li>
              <li>
               <a href="/information/open/judge.do">
                법령에의한정보제공
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/" target="_blank" title="새창">
                정보공개시스템
               </a>
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [link]
              
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/information/status/sijang.do">
                제주시장 업무추진비 공개
               </a>
              </li>
              <li>
               <a href="/information/status/part.do">
                부서별 업무추진비 공개
               </a>
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/information/status/expenditures.do">
                세출예산 집행현황
               </a>
              </li>
              <li>
               <a href="/information/status/business.do">
                1억원 이상 사업 추진 현황
               </a>
              </li>
             </ul>
            </li>
            <li>
             <span>
              [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li><li>[search]</li>[ahref]<li>[ahref]</li><li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>[search][link][search]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>
             </span>
            </li>
            <li>
             <span>
              <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[ahref]</li>[search][link]<li>[search]</li>
             </span>
            </li>
            <li>
             <span>
              <a href="/open/law/current/current.htm" target="_blank" title="새창">
               법무정보
              </a>
             </span>
            </li>
            <li>
             <span>
              <a href="/finance/budget/2015.htm" target="_blank" title="새창">
               예산정보
              </a>
             </span>
            </li>
            <li>
             <span>
              <a href="/information/privacy.do">
               개인정보처리위탁및제3자제공
              </a>
             </span>
            </li>
            <li>
             <span>
              [ahref][ahref][ahref][link]<li>[ahref]</li>[ahref]<li>[search]</li>[ahref][search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][ahref][link]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li><li>[search]</li>
             </span>
            </li>
           </ul>
          </div>
         </div>
        </li>
        <li class="jejusi_5">
         <a href="/intro.do">
          제주시소개
         </a>
         <div class="menu_depth">
          <div class="menu_depth_detail">
           <ul>
            <li>
             <span>
              <li>[ahref]</li><li>[link]</li>[ahref]<li>[search]</li>[search]
             </span>
            </li>
            <li>
             <span>
              [ahref]
              
             </span>
            </li>
            <li class="depth">
             <span>
              <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             <ul class="menu_3depth">
              <li>
               [link]
               
              </li>
              <li>
               <a href="/publicationL.do?boardId=book_open" target="_blank" title="새창">
                시정소식지
               </a>
              </li>
             </ul>
            </li>
            <li>
             <span>
              <li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][ahref]<li>[link]</li>[ahref][search][ahref]
             </span>
            </li>
            <li class="depth">
             <span>
              [link]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/intro/contest/intro.do">
                공모전 소개
               </a>
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][link]
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/intro/pattern/introduction.do">
                문양디자인 소개
               </a>
              </li>
              <li>
               <a href="/intro/pattern/use.do">
                문양디자인 사용하기
               </a>
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </li>
            <li>
             <span>
              [search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[ahref]<li>[link]</li>[link]
             </span>
            </li>
            <li class="depth">
             <span>
              <a href="/intro/org.do">
               조직도
              </a>
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/intro/org/org.do">
                조직도
               </a>
              </li>
              <li>
               <a href="/intro/org/search.do">
                담당자/담당업무검색
               </a>
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              <a href="/intro/building.do">
               청사안내
              </a>
             </span>
             <ul class="menu_3depth">
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[link]</li>[ahref]
             </span>
             <ul class="menu_3depth">
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][link]
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/intro/history/jejusi.do">
                역사속 제주시
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li>
             <span>
              <li>[ahref]</li>[ahref]<li>[ahref]</li>[search][search]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
             </span>
            </li>
           </ul>
          </div>
         </div>
        </li>
        <li class="jejusi_6 active">
         [ahref]
         
         <div class="menu_depth">
          <div class="menu_depth_detail">
           <ul>
            <li class="depth">
             <span>
              <a href="/field/welfare.do">
               복지
              </a>
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/field/welfare/case.do">
                생생 복지사례 및 권리구제 정보
               </a>
              </li>
              <li>
               <a href="/field/welfare/tomb.do">
                분묘개장공고
               </a>
              </li>
              <li>
               <a href="/field/welfare/status.do">
                사회복지시설 운영상황 공개
               </a>
              </li>
              <li>
               <a href="r" target="_blank" title="새창">
                복지포탈
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/" target="_blank" title="새창">
                임신육아종합포털 아이사랑
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [link]
              
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/field/safety/check.do">
                내가정,내직장 안전진단
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [ahref]
              
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/field/property/landsearch.do">
                미등기토지조회서비스
               </a>
              </li>
              <li>
               <a href="/field/property/landfees.do">
                부동산중개수수료
               </a>
              </li>
              <li>
               <a href="/field/property/ancestor.do">
                조상 땅 찾기 안내
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="r" target="_blank" title="새창">
                부동산 거래 관리 시스템
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/" target="_blank" title="새창">
                건축행정시스템 (세움터)
               </a>
              </li>
              <li>
               <a href="/land_info/info/baseInfo/baseInfo.do" target="_blank" title="새창">
                부동산정보통합열람
               </a>
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              <li>[search]</li><li>[ahref]</li><li>[search]</li>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
             </span>
             <ul class="menu_3depth">
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/qolup/main.do" target="_blank" title="새창">
                제주시 평생학습관
               </a>
              </li>
              <li>
               <a href="/jejusi" target="_blank" title="새창">
                사이버 시민정보대학
               </a>
              </li>
              <li>
               <a href="/" target="_blank" title="새창">
                제주특별자치도 공공도서관
               </a>
              </li>
              <li>
               <a href="/field/education/lecture.do">
                교육 및 강좌
               </a>
              </li>
              <li>
               <a href="/?mod=html&amp;act=event&amp;code=513" target="_blank" title="새창">
                제주시 시민인문학
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [search]<li>[ahref]</li><li>[link]</li><li>[search]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             <ul class="menu_3depth">
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/main/main.do" target="_blank" title="새창">
                제주교통정보시스템
               </a>
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              <a href="/field/culture.do">
               문화/체육
              </a>
             </span>
             <ul class="menu_3depth">
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/dongja/main.do" target="_blank" title="새창">
                제주동자석
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/" target="_blank" title="새창">
                제주 별빛누리공원
               </a>
              </li>
              <li>
               <a href="/" target="_blank" title="새창">
                제주 아트센터
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="r" target="_blank" title="새창">
                제주보건소
               </a>
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              <li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][ahref]
             </span>
             <ul class="menu_3depth">
              <li>
               <a href="/field/life/help.do">
                생활도우미
               </a>
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/information/open/data/map.do?id=71" target="_blank" title="새창">
                제주시 행복지도서비스
               </a>
              </li>
              <li>
               <a href="/field/life/dbservice.do">
                제주시 한 눈에 보기
               </a>
              </li>
              <li>
               <a href="r" target="_blank" title="새창">
                연중무휴 심야약국
               </a>
              </li>
              <li>
               [link]
               
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [link]
              
             </span>
             <ul class="menu_3depth">
              <li>
               [ahref]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/recycle/main.do" target="_blank" title="새창">
                제주시 재활용마당
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/" target="_blank" title="새창">
                노루 생태관찰원
               </a>
              </li>
             </ul>
            </li>
            <li class="depth">
             <span>
              [ahref]
              
             </span>
             <ul class="menu_3depth">
              <li>
               [link]
               
              </li>
              <li>
               [link]
               
              </li>
              <li>
               <a href="/ko/index.jto?menuCd=DOM_000001724000000000" target="_blank" title="새창">
                제주관광안내책자
               </a>
              </li>
              <li>
               [ahref]
               
              </li>
              <li>
               <a href="/files/citytour_2016.pdf" target="_blank" title="새창">
                제주시티투어버스
               </a>
              </li>
             </ul>
            </li>
           </ul>
          </div>
         </div>
        </li>
        <li class="jejusi_7">
         [link]
         
         <div class="menu_depth">
          <div class="menu_depth_detail">
           <ul>
            <li>
             <span>
              <a href="t" target="_blank" title="새창">
               관광정보
              </a>
             </span>
            </li>
            <li>
             <span>
              <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[search]</li>[search]<li>[link]</li>[search]<li>[link]</li><li>[link]</li>[search]
             </span>
            </li>
            <li>
             <span>
              [search][ahref]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li>
             </span>
            </li>
            <li>
             <span>
              <li>[search]</li><li>[search]</li><li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref]<li>[ahref]</li>[search]<li>[link]</li>
             </span>
            </li>
            <li>
             <span>
              [link]
              
             </span>
            </li>
            <li>
             <span>
              [ahref]
              
             </span>
            </li>
           </ul>
          </div>
         </div>
        </li>
       </ul>
      </nav>
      <span class="menu_close">
       [link]<li>[link]</li>[link]<li>[search]</li>[search]<li>[search]</li><li>[link]</li><li>[ahref]</li>[link]<li>[search]</li>
      </span>
     </div>
    </div>
   </header>
   <div class="popup-wrap">
   </div>
   <main id="main">
    <section id="container_wrap">
     <h2 class="sec-caption">
      [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
     </h2>
     <div class="content-box">
      <div class="cont_top_area">
       <div class="cont_top">
        <div class="location">
         <span class="home">
          [search][link][search][ahref]<li>[search]</li>[search][link]<li>[search]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
         </span>
         <span>
          분야별정보[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
         <span>
          교통<li>[link]</li><li>[search]</li><li>[link]</li>[link]<li>[ahref]</li>[ahref][search]<li>[link]</li>[link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]
         </span>
        </div>
        <ul class="sub_util">
         <li class="share">
          <span class="share_btn" id="share_btn">
           [ahref][ahref]<li>[ahref]</li><li>[link]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[link]
          </span>
          <div class="share_link">
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href=";" onclick="javascript:fn_shareTwitter('제주시');" title="트위터 공유(새창)">
              트위터
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
           <span class="active">
            <li>[link]</li>[link][link][search]<li>[ahref]</li><li>[link]</li>[ahref][link]<li>[search]</li>
           </span>
          </div>
         </li>
         <li class="print_btn">
          [ahref]
          
         </li>
         <li class="expand_btn">
          <span class="text">
           화면[ahref][ahref]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[link]
          </span>
          <a href=";" onclick="javascript:zoomIn(); return false;" title="화면확대">
          </a>
          <a href=";" onclick="javascript:zoomOut(); return false;" title="화면축소">
          </a>
         </li>
        </ul>
       </div>
      </div>
      <div class="container">
       <div id="contents_area">
        <h3 class="cont_title" id="skip_content">
         [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
        </h3>
        <div id="contents">
         <div class="main_top_area">
          <div class="area_main_img">
           <ul>
            <li>
            </li>
           </ul>
          </div>
          <div class="main_etc">
           <div class="main_text">
            <strong>
             교통
            </strong>
            <p>
             <span>
              자연과 함께하는 제주에서는
             </span>
             <span>
              빠르고 편안한 제주만의 특화된[link]<li>[search]</li>[ahref]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             <span>
              교통 서비스를 위해 노력합니다.[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[ahref]</li>[search][ahref]
             </span>
            </p>
           </div>
          </div>
          <div class="shortcut_link_area">
           <div class="shortcut_link">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/field/traffic/parkingmap.do" target="_blank" title="새창">
               <span class="icon">
                [ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link][link][ahref]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
               주차장 정보(지도)
              </a>
             </li>
             <li>
              <a href="/field/traffic/bike/stationStatusMap.do" target="_blank" title="새창">
               <span class="icon">
                <li>[search]</li>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[link]</li>[search][search][ahref]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li>
               </span>
               공공자전거
              </a>
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/field/life/help/carcheck.do" target="_blank" title="새창">
               <span class="icon">
               </span>
               자동차정기검사일 안내
              </a>
             </li>
            </ul>
           </div>
          </div>
         </div>
         <div class="area_cont_area">
          <div class="area_cont">
           <div class="shortcut_menu">
            <ul>
             <li>
              [ahref]
              
             </li>
             <li>
              <a href="/main/main.do" target="_blank" title="새창">
              </a>
             </li>
             <li>
              <a href="/parkingsms/" target="_blank" title="새창">
              </a>
             </li>
            </ul>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
     <div class="container">
      <aside class="right-zone">
       <div class="go-top">
        [link]
        
       </div>
      </aside>
     </div>
    </section>
   </main>
   <footer id="footer_wrap">
    <div class="site_link_area">
     <div class="site_link">
      <h3 class="hidden">
       [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
      </h3>
      <dl>
       <dt>
        [link]
        
       </dt>
       <dd id="link_part">
        <a href="/sijang/main.do">
         시장실
        </a>
        <a href="/part/deputymayor.do">
         부시장실
        </a>
        [link]
        
        <a href="/part/minwon.do">
         종합민원실
        </a>
        <a href="/part/gov.do">
         자치행정국
        </a>
        [link]
        
        [link]
        
        [ahref]
        
        <a href="/part/environment.do">
         청정환경국
        </a>
        <a href="/part/farm.do">
         농수축산경제국
        </a>
        <a href="/part/town.do">
         도시건설국
        </a>
        <a href="/index.php?siid=jeju" target="_blank" title="새창">
         제주보건소
        </a>
        [link]
        
        [ahref]
        
       </dd>
      </dl>
      <dl>
       <dt>
        <a href=";">
         <span class="text">
          읍·면·동
         </span>
         <span class="btn">
          바로가기 보기[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li><li>[ahref]</li>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>
         </span>
        </a>
       </dt>
       <dd id="link_area">
        <a href="/town/hanlim.do">
         한림읍
        </a>
        [link]
        
        [ahref]
        
        [link]
        
        [link]
        
        [link]
        
        [ahref]
        
        <a href="/vill/ildo1.do">
         일도1동
        </a>
        [ahref]
        
        [link]
        
        [ahref]
        
        [link]
        
        <a href="/vill/samdo2.do">
         삼도2동
        </a>
        [link]
        
        [ahref]
        
        [link]
        
        [ahref]
        
        <a href="/vill/samyang.do">
         삼양동
        </a>
        [link]
        
        <a href="/vill/ara.do">
         아라동
        </a>
        [link]
        
        [ahref]
        
        [link]
        
        [link]
        
        <a href="/vill/iho.do">
         이호동
        </a>
        <a href="/vill/dodu.do">
         도두동
        </a>
       </dd>
      </dl>
      <dl>
       <dt>
        [link]
        
       </dt>
       <dd id="link_vill">
        <a href=";">
         == 한림읍 ==
        </a>
        [link]
        
        [ahref]
        
        [link]
        
        <a href="/vill/suwon/index.htm" target="_blank" title="새창">
         수원리
        </a>
        <a href="/vill/hansu/index.htm" target="_blank" title="새창">
         한수리
        </a>
        [link]
        
        <a href="/vill/hanrim1/index.htm" target="_blank" title="새창">
         한림1리
        </a>
        <a href="/vill/hanrim2/index.htm" target="_blank" title="새창">
         한림2리
        </a>
        <a href="/vill/hanrim3/index.htm" target="_blank" title="새창">
         한림3리
        </a>
        [link]
        
        [link]
        
        [ahref]
        
        [ahref]
        
        [link]
        
        <a href="/vill/wolrim/index.htm" target="_blank" title="새창">
         월림리
        </a>
        [link]
        
        <a href="/vill/ongpo/index.htm" target="_blank" title="새창">
         옹포리
        </a>
        [link]
        
        [ahref]
        
        [link]
        
        <a href="/vill/biyang/index.htm" target="_blank" title="새창">
         비양리
        </a>
        [link]
        
        <a href="/vill/aewol/index.htm" target="_blank" title="새창">
         애월리
        </a>
        [ahref]
        
        [ahref]
        
        [link]
        
        <a href="/vill/eoeum1/index.htm" target="_blank" title="새창">
         어음1리
        </a>
        [link]
        
        [ahref]
        
        [ahref]
        
        [ahref]
        
        <a href="/vill/sogil/index.htm" target="_blank" title="새창">
         소길리
        </a>
        <a href="/vill/jangjeon/index.htm" target="_blank" title="새창">
         장전리
        </a>
        <a href="/vill/yusuam/index.htm" target="_blank" title="새창">
         유수암리
        </a>
        [link]
        
        <a href="/vill/jungeom/index.htm" target="_blank" title="새창">
         중엄리
        </a>
        [link]
        
        [link]
        
        <a href="/vill/gonae/index.htm" target="_blank" title="새창">
         고내리
        </a>
        <a href="/vill/hagwi1/index.htm" target="_blank" title="새창">
         하귀1리
        </a>
        [ahref]
        
        [link]
        
        [link]
        
        <a href="/vill/goseong1/index.htm" target="_blank" title="새창">
         고성1리
        </a>
        [ahref]
        
        <a href="/vill/gwngmyeong1/index.htm" target="_blank" title="새창">
         광령1리
        </a>
        [ahref]
        
        <a href="/vill/gwngmyeong3/index.htm" target="_blank" title="새창">
         광령3리
        </a>
        <a href=";">
         == 구좌읍 ==
        </a>
        [ahref]
        
        [ahref]
        
        <a href="/vill/deokcheon/index.htm" target="_blank" title="새창">
         덕천리
        </a>
        <a href="/vill/woljeong/index.htm" target="_blank" title="새창">
         월정리
        </a>
        [link]
        
        [link]
        
        [link]
        
        <a href="/vill/songdang/index.htm" target="_blank" title="새창">
         송당리
        </a>
        <a href="/vill/sehwa/index.htm" target="_blank" title="새창">
         세화리
        </a>
        [ahref]
        
        [link]
        
        [ahref]
        
        <a href=";">
         == 조천읍 ==
        </a>
        <a href="/vill/sinchon/index.htm" target="_blank" title="새창">
         신촌리
        </a>
        <a href="/vill/jocheon/index.htm" target="_blank" title="새창">
         조천리
        </a>
        <a href="/vill/sinheung/index.htm" target="_blank" title="새창">
         신흥리
        </a>
        <a href="/vill/bukchon/index.htm" target="_blank" title="새창">
         북촌리
        </a>
        [ahref]
        
        [link]
        
        <a href="/vill/wasan/index.htm" target="_blank" title="새창">
         와산리
        </a>
        <a href="/vill/daeheul1/index.htm" target="_blank" title="새창">
         대흘1리
        </a>
        <a href="/vill/daeheul2/index.htm" target="_blank" title="새창">
         대흘2리
        </a>
        <a href="/index.html" target="_blank" title="새창">
         와흘리
        </a>
        <a href="/vill/hamdeok/index.htm" target="_blank" title="새창">
         함덕리
        </a>
        [ahref]
        
        <a href="/vill/panpo/index.htm" target="_blank" title="새창">
         판포리
        </a>
        [link]
        
        [ahref]
        
        <a href="/vill/domo/index.htm" target="_blank" title="새창">
         두모리
        </a>
        <a href="/vill/sinchang/index.htm" target="_blank" title="새창">
         신창리
        </a>
        [ahref]
        
        <a href="/vill/youngsu/index.htm" target="_blank" title="새창">
         용수리
        </a>
        <a href="/vill/gosan1/index.htm" target="_blank" title="새창">
         고산1리
        </a>
        <a href="/vill/gosan2/index.htm" target="_blank" title="새창">
         고산2리
        </a>
        [ahref]
        
        <a href="/vill/josu2/index.htm" target="_blank" title="새창">
         조수2리
        </a>
        <a href="/" target="_blank" title="새창">
         낙천리
        </a>
        [ahref]
        
        [ahref]
        
        [link]
        
        [link]
        
        <a href="/index.html" target="_blank" title="새창">
         대서리
        </a>
        [link]
        
        [link]
        
        [link]
        
        <a href="/vill/sinyang2/index.htm" target="_blank" title="새창">
         신양2리
        </a>
        [ahref]
        
        <a href=";">
         == 우도면 ==
        </a>
        <a href="/vill/seogwang/index.htm" target="_blank" title="새창">
         서광리
        </a>
        <a href="/index.html" target="_blank" title="새창">
         천진리
        </a>
        [link]
        
        [link]
        
       </dd>
      </dl>
      <dl>
       <dt>
        [link]
        
       </dt>
       <dd id="link_jumin">
        [link]
        
        [link]
        
        [link]
        
        [ahref]
        
        [ahref]
        
        [link]
        
        <a href="/jumin/present/jejusi/jeju07/greet.htm" target="_blank" title="새창">
         용담1
        </a>
        [ahref]
        
        [link]
        
        <a href="/jumin/present/jejusi/jeju10/greet.htm" target="_blank" title="새창">
         화북동
        </a>
        [ahref]
        
        [link]
        
        <a href="/jumin/present/jejusi/jeju13/greet.htm" target="_blank" title="새창">
         아라동
        </a>
        <a href="/jumin/present/jejusi/jeju14/greet.htm" target="_blank" title="새창">
         오라동
        </a>
        [ahref]
        
        [link]
        
        [ahref]
        
        [ahref]
        
        [ahref]
        
        [link]
        
        [ahref]
        
        [ahref]
        
        [link]
        
        <a href="/jumin/present/jejusi/jeju24/greet.htm" target="_blank" title="새창">
         한경면
        </a>
        [ahref]
        
        <a href="/jumin/present/jejusi/jeju26/greet.htm" target="_blank" title="새창">
         우도면
        </a>
       </dd>
      </dl>
      <dl>
       <dt>
        <a href=";">
         <span class="text">
          정보화마을[link]<li>[ahref]</li><li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
         </span>
         <span class="btn">
          바로가기 보기
         </span>
        </a>
       </dt>
       <dd id="link_family">
        [link]
        
        <a href="g" target="_blank" title="새창">
         김녕정보화마을
        </a>
        [ahref]
        
        [link]
        
        [ahref]
        
        [ahref]
        
        [ahref]
        
        <a href="g" target="_blank" title="새창">
         도두정보화마을
        </a>
       </dd>
      </dl>
      <dl>
       <dt>
        <a href=";">
         <span class="text">
          주요사이트<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]
         </span>
         <span class="btn">
          바로가기 보기[ahref][search][search]<li>[search]</li>[search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
        </a>
       </dt>
       <dd id="link_major">
        [ahref]
        
        [ahref]
        
        [ahref]
        
        <a href="/roedeer/main.do" target="_blank" title="새창">
         노루생태관찰원
        </a>
        <a href="r" target="_blank" title="새창">
         대형페기물신청
        </a>
        <a href="/buriburi/main.do" target="_blank" title="새창">
         들불축제
        </a>
        <a href="r" target="_blank" title="새창">
         별빛누리공원
        </a>
        [ahref]
        
        [ahref]
        
        [ahref]
        
        [ahref]
        
        [ahref]
        
        <a href="r" target="_blank" title="새창">
         제주사진DB
        </a>
        <a href="/" target="_blank" title="새창">
         제주시정뉴스
        </a>
        <a href="/qolup/main.do" target="_blank" title="새창">
         제주시평생학습관
        </a>
        [link]
        
        [link]
        
        [link]
        
        [ahref]
        
        [link]
        
        [ahref]
        
       </dd>
      </dl>
     </div>
    </div>
    <div class="footer">
     <div class="footer_left">
      <ul class="footer_link">
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        <a href="/guide/copyrights.do">
         <strong>
          저작권보호정책
         </strong>
        </a>
       </li>
       <li>
        <a href="/guide/privacy/terms.do">
         이용안내
        </a>
       </li>
       <li>
        <a href="/guide/feedback.do">
         홈페이지 개선의견
        </a>
       </li>
       <li>
        <a href="/guide/sitemap.do">
         사이트맵
        </a>
       </li>
      </ul>
      <div class="footer_info">
       <address>
        <span id="kor_addr">
         (63208) 제주특별자치도 제주시 광양9길 10,[search][ahref][search][link][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
        </span>
        대표전화：064-120, 10, Gwangyang 9-gil, Jeju-si, Jeju-do, 63208, Republic of Korea
       </address>
       <p>
        Copyright 1999 JEJU-SI. All rights reserved.[search]<li>[ahref]</li>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link][search][link][search][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
       </p>
       <p>
        제주시 홈페이지는 운영체제(OS)：Windows 7이상, 인터넷 브라우저：IE 9이상, 파이어 폭스, 크롬, 사파리에 최적화 되어있습니다.[ahref]<li>[search]</li><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[ahref]</li>[ahref]<li>[ahref]</li>
       </p>
      </div>
     </div>
     <div class="footer_right">
      <ul class="etc_info">
       <li class="callcenter">
        <div class="number">
         (064)
         <strong>
          120
         </strong>
         <span>
          제주 콜센터[search]<li>[search]</li><li>[link]</li><li>[link]</li>[search][search][ahref]<li>[search]</li>[link]
         </span>
        </div>
        <div class="phone">
         [link]
         
        </div>
       </li>
       <li>
        <a href="/board/list.asp?BoardID=0006" target="_blank" title="새창">
        </a>
       </li>
      </ul>
     </div>
    </div>
   </footer>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0435
  </b>
 </body>
</html>