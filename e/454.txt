<!DOCTYPE html>
<html>
 <head>
  <meta charset="utf-8"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="/assets/images/logos/logo_bg-sharing.png?79376a78" property="og:image">
   <meta content="/assets/images/logos/logo_bg-sharing.png?79376a78" property="og:image:secure_url">
    <meta content="image/png" property="og:image:type"/>
    <meta content="200" property="og:image:width"/>
    <meta content="200" property="og:image:height"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
    <meta content="website" property="og:type"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
    <meta content="summary" name="twitter:card"/>
    <meta content="@biblegateway" name="twitter:site"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:url"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:ios:url"/>
    <meta content="506512797" property="al:ios:app_store_id"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="al:ios:app_name"/>
    <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="application-name"/>
    <meta content="A searchable online Bible in over 100 versions and 50 languages" name="msapplication-tooltip"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-starturl"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-task"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-task"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-task"/>
    <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="msapplication-task"/>
   </meta>
  </meta>
 </head>
 <body class="page-passage logged-out " ontouchstart="">
  <div id="recaptcha-container">
  </div>
  <div id="close-mask">
  </div>
  <div class="mobile-close-mask">
  </div>
  <div class="mobile-close-mask-white">
  </div>
  <header>
   <nav class="navbar navbar-default container">
    <div class="nav-modal-version">
     <div class="nav-modal-trigger js-nav-modal-trigger">
      <span>
       Home[search]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li><li>[ahref]</li><li>[link]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[link]</li><li>[ahref]</li>[ahref][search][search][ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]
      </span>
      <span class="pull-right nav-open-icon icon-down-arrow">
       <li>[ahref]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
      </span>
     </div>
    </div>
    <ul class="main-nav-menu nav navbar-nav nav-menu-version">
     <li class="main-nav-item">
      [search]
      
     </li>
     <li class="dropdown main-nav-mega-dropdown">
      [ahref]
      
      <ul class="dropdown-menu">
       <li class="dropdown-item">
        [link]
        
       </li>
       <li class="dropdown-item">
        [link]
        
       </li>
       <li class="dropdown-item">
        [link]
        
       </li>
       <li class="dropdown-item">
        <a href="/resources/audio/">
         Audio Bibles
        </a>
       </li>
       <li class="dropdown-item">
        [link]
        
       </li>
      </ul>
     </li>
     <li class="dropdown main-nav-mega-dropdown">
      <a class="main-level" data-target=".main-nav-mega-dropdown" data-toggle="dropdown">
       Study
      </a>
      <ul class="dropdown-menu">
       <li class="dropdown-item">
        [link]
        
       </li>
       <li class="dropdown-item">
        [link]
        
       </li>
       <li class="dropdown-item">
        [ahref]
        
       </li>
       <li class="dropdown-item">
        [ahref]
        
       </li>
       <li class="dropdown-item">
        <a href="/resources/">
         More Resources
        </a>
       </li>
      </ul>
     </li>
     <li class="dropdown main-nav-mega-dropdown app-dropdown">
      [ahref]
      
      <ul class="dropdown-menu">
       <li class="dropdown-item">
        [ahref]
        
       </li>
       <li class="dropdown-item">
        [ahref]
        
       </li>
      </ul>
     </li>
     <li class="dropdown main-nav-mega-dropdown store-dropdown">
      <a class="main-level bible-nav" data-target=".main-nav-mega-dropdown" data-toggle="dropdown">
       Store
      </a>
      <ul class="dropdown-menu">
       <li class="dropdown-item">
        [link]
        
       </li>
       <li class="dropdown-item">
        <a href="/page/tcg/biblegateway/bg-bibles?p=1182476" onclick="_gaq.push(['_trackEvent', 'CBD Nav Link', 'click', 'printbibles']);">
         Bibles
        </a>
       </li>
       <li class="dropdown-item">
        [ahref]
        
       </li>
       <li class="dropdown-item">
        [link]
        
       </li>
      </ul>
     </li>
    </ul>
    <div class="login-btn-wrapper">
     [link]
     
    </div>
    <div class="login-box clearfix">
     <div class="login-top">
      <div class="login-thingy">
      </div>
      <div class="login-title clearfix">
       <div class="login-close">
        ×
       </div>
       <span class="login-title-text">
        Log In<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[ahref]</li>[ahref][ahref][link]<li>[ahref]</li>[search]<li>[search]</li>[link][search]
       </span>
      </div>
      <div class="login-button-or">
       <span class="login-button-or-text">
        or<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
       </span>
      </div>
      <div class="login-message">
      </div>
     </div>
     <div class="login-current login-section">
      <div class="login-heading">
       Log In
       <a class="login-heading-link login-box-link" href="#">
        Don't have an account?
       </a>
      </div>
      <form action="/login/" method="post">
       <div class="login-option clearfix">
        <label>
         Remember Me
        </label>
        <a class="login-forgot login-box-link" href="/login/forgot/">
         Forgot Password?
        </a>
       </div>
      </form>
     </div>
     <div class="login-create login-section">
      <div class="login-heading">
       Create Account
       [link]
       
      </div>
      <div class="benefits-link">
       [link]
       
      </div>
      <div class="login-intro">
       Don't have an account? Creating an account allows you to access more features and content such as:
      </div>
      <div class="login-feature">
       <div class="login-feature-icon icon-book">
       </div>
       <div class="login-feature-heading">
        Reading Plans
       </div>
       <div class="login-feature-text">
        Reading the Bible is rewarding, and these plans make it easy!
       </div>
      </div>
      <div class="login-feature">
       <div class="login-feature-icon icon-comment">
       </div>
       <div class="login-feature-heading">
        Personalization
       </div>
       <div class="login-feature-text">
        Take notes, highlights, and favorites to share or document personal thoughts
       </div>
      </div>
      <div class="login-feature">
       <div class="login-feature-icon icon-sync">
       </div>
       <div class="login-feature-heading">
        Syncing
       </div>
       <div class="login-feature-text">
        All your content will be saved and you can seamlessly switch devices.
       </div>
      </div>
      <div>
       <form action="/register/" method="post">
       </form>
      </div>
     </div>
     <div class="login-bottom">
      [link]
      
     </div>
    </div>
    <a class="btn navbar-btn btn-sign-in login-btn-out navbar-right" href="/logout/">
     Log Out
    </a>
    <ul class="navbar-nav nav navbar-right login-open-menu">
     <li class="main-nav-account-dropdown">
      <button class="btn plus-subscribe-btn">
       Upgrade
      </button>
      [ahref]
      
      <ul class="dropdown-menu">
       <div class="logged-in-thingy">
       </div>
       <li class="dropdown-item my-library">
        [link]
        
       </li>
       <li class="dropdown-item">
        [ahref]
        
       </li>
       <li class="dropdown-item">
        <a href="/user/account/">
         Account Settings
        </a>
       </li>
       <li class="dropdown-item">
        [link]
        
       </li>
      </ul>
     </li>
    </ul>
   </nav>
  </header>
  <section class="search-section">
   <div class="container">
    <div class="standard-row">
     <div class="bg-search-logo">
      [ahref]
      
     </div>
     <div class="search-controls">
      <div class="search-all-wrapper">
       <div class="search-form-wrapper">
        <form action="/quicksearch/" class="quicksearch">
         <div class="form-group search-input col-sm-6">
          <label class="sr-only" for="search-input">
           Search
          </label>
          <div class="search-field">
           <span class="search-btn-on-input">
            <button class="btn btn-default icon-search search-btn" type="submit">
            </button>
           </span>
          </div>
         </div>
         <div class="form-group search-translation-select-group col-sm-6">
          <div class="search-translation">
           <div class="bg-select-wrapper search-translation-select-wrapper">
            <select class="search-translation-select translation-select-default form-control" name="qs_version">
             <option class="lang" value="AMU">
              —Amuzgo de Guerrero (AMU)—
             </option>
             <option value="AMU">
              Amuzgo de Guerrero (AMU)
             </option>
             <option class="spacer" value="AMU">
             </option>
             <option class="lang" value="ERV-AR">
              —العربية (AR)—
             </option>
             <option value="ERV-AR">
              Arabic Bible: Easy-to-Read Version (ERV-AR)
             </option>
             <option value="NAV">
              Ketab El Hayat (NAV)
             </option>
             <option class="spacer" value="NAV">
             </option>
             <option class="lang" value="ERV-AWA">
              —अवधी (AWA)—
             </option>
             <option value="ERV-AWA">
              Awadhi Bible: Easy-to-Read Version (ERV-AWA)
             </option>
             <option class="spacer" value="ERV-AWA">
             </option>
             <option class="lang" value="BG1940">
              —Български (BG)—
             </option>
             <option value="BG1940">
              1940 Bulgarian Bible (BG1940)
             </option>
             <option value="BULG">
              Bulgarian Bible (BULG)
             </option>
             <option value="ERV-BG">
              Bulgarian New Testament: Easy-to-Read Version (ERV-BG)
             </option>
             <option value="CBT">
              Библия, нов превод от оригиналните езици (с неканоничните книги) (CBT)
             </option>
             <option value="BOB">
              Библия, синодално издание (BOB)
             </option>
             <option value="BPB">
              Библия, ревизирано издание (BPB)
             </option>
             <option class="spacer" value="BPB">
             </option>
             <option class="lang" value="CCO">
              —Chinanteco de Comaltepec (CCO)—
             </option>
             <option value="CCO">
              Chinanteco de Comaltepec (CCO)
             </option>
             <option class="spacer" value="CCO">
             </option>
             <option class="lang" value="APSD-CEB">
              —Cebuano (CEB)—
             </option>
             <option value="APSD-CEB">
              Ang Pulong Sa Dios (APSD-CEB)
             </option>
             <option class="spacer" value="APSD-CEB">
             </option>
             <option class="lang" value="CHR">
              —ᏣᎳᎩ ᎦᏬᏂᎯᏍ (CHR)—
             </option>
             <option value="CHR">
              Cherokee New Testament (CHR)
             </option>
             <option class="spacer" value="CHR">
             </option>
             <option class="lang" value="CKW">
              —Cakchiquel Occidental (CKW)—
             </option>
             <option value="CKW">
              Cakchiquel Occidental (CKW)
             </option>
             <option class="spacer" value="CKW">
             </option>
             <option class="lang" value="B21">
              —Čeština (CS)—
             </option>
             <option value="B21">
              Bible 21 (B21)
             </option>
             <option value="SNC">
              Slovo na cestu (SNC)
             </option>
             <option class="spacer" value="SNC">
             </option>
             <option class="lang" value="BWM">
              —Cymraeg (CY)—
             </option>
             <option value="BWM">
              Beibl William Morgan (BWM)
             </option>
             <option class="spacer" value="BWM">
             </option>
             <option class="lang" value="BPH">
              —Dansk (DA)—
             </option>
             <option value="BPH">
              Bibelen på hverdagsdansk (BPH)
             </option>
             <option value="DN1933">
              Dette er Biblen på dansk (DN1933)
             </option>
             <option class="spacer" value="DN1933">
             </option>
             <option class="lang" value="HOF">
              —Deutsch (DE)—
             </option>
             <option value="HOF">
              Hoffnung für Alle (HOF)
             </option>
             <option value="LUTH1545">
              Luther Bibel 1545 (LUTH1545)
             </option>
             <option value="NGU-DE">
              Neue Genfer Übersetzung (NGU-DE)
             </option>
             <option value="SCH1951">
              Schlachter 1951 (SCH1951)
             </option>
             <option value="SCH2000">
              Schlachter 2000 (SCH2000)
             </option>
             <option class="spacer" value="SCH2000">
             </option>
             <option class="lang" value="KJ21">
              —English (EN)—
             </option>
             <option value="KJ21">
              21st Century King James Version (KJ21)
             </option>
             <option value="ASV">
              American Standard Version (ASV)
             </option>
             <option value="AMP">
              Amplified Bible (AMP)
             </option>
             <option value="AMPC">
              Amplified Bible, Classic Edition (AMPC)
             </option>
             <option value="BRG">
              BRG Bible (BRG)
             </option>
             <option value="CSB">
              Christian Standard Bible (CSB)
             </option>
             <option value="CEB">
              Common English Bible (CEB)
             </option>
             <option value="CJB">
              Complete Jewish Bible (CJB)
             </option>
             <option value="CEV">
              Contemporary English Version (CEV)
             </option>
             <option value="DARBY">
              Darby Translation (DARBY)
             </option>
             <option value="DLNT">
              Disciples’ Literal New Testament (DLNT)
             </option>
             <option value="DRA">
              Douay-Rheims 1899 American Edition (DRA)
             </option>
             <option value="ERV">
              Easy-to-Read Version (ERV)
             </option>
             <option value="EHV">
              Evangelical Heritage Version (EHV)
             </option>
             <option value="ESV">
              English Standard Version (ESV)
             </option>
             <option value="ESVUK">
              English Standard Version Anglicised (ESVUK)
             </option>
             <option value="EXB">
              Expanded Bible (EXB)
             </option>
             <option value="GNV">
              1599 Geneva Bible (GNV)
             </option>
             <option value="GW">
              GOD’S WORD Translation (GW)
             </option>
             <option value="GNT">
              Good News Translation (GNT)
             </option>
             <option value="HCSB">
              Holman Christian Standard Bible (HCSB)
             </option>
             <option value="ICB">
              International Children’s Bible (ICB)
             </option>
             <option value="ISV">
              International Standard Version (ISV)
             </option>
             <option value="PHILLIPS">
              J.B. Phillips New Testament (PHILLIPS)
             </option>
             <option value="JUB">
              Jubilee Bible 2000 (JUB)
             </option>
             <option value="KJV">
              King James Version (KJV)
             </option>
             <option value="AKJV">
              Authorized (King James) Version (AKJV)
             </option>
             <option value="LEB">
              Lexham English Bible (LEB)
             </option>
             <option value="TLB">
              Living Bible (TLB)
             </option>
             <option value="MSG">
              The Message (MSG)
             </option>
             <option value="MEV">
              Modern English Version (MEV)
             </option>
             <option value="MOUNCE">
              Mounce Reverse-Interlinear New Testament (MOUNCE)
             </option>
             <option value="NOG">
              Names of God Bible (NOG)
             </option>
             <option value="NABRE">
              New American Bible (Revised Edition) (NABRE)
             </option>
             <option value="NASB">
              New American Standard Bible (NASB)
             </option>
             <option value="NCV">
              New Century Version (NCV)
             </option>
             <option value="NET">
              New English Translation (NET Bible)
             </option>
             <option value="NIRV">
              New International Reader's Version (NIRV)
             </option>
             <option value="NIV">
              New International Version (NIV)
             </option>
             <option value="NIVUK">
              New International Version - UK (NIVUK)
             </option>
             <option value="NKJV">
              New King James Version (NKJV)
             </option>
             <option value="NLV">
              New Life Version (NLV)
             </option>
             <option value="NLT">
              New Living Translation (NLT)
             </option>
             <option value="NMB">
              New Matthew Bible (NMB)
             </option>
             <option value="NRSV">
              New Revised Standard Version (NRSV)
             </option>
             <option value="NRSVA">
              New Revised Standard Version, Anglicised (NRSVA)
             </option>
             <option value="NRSVACE">
              New Revised Standard Version, Anglicised Catholic Edition (NRSVACE)
             </option>
             <option value="NRSVCE">
              New Revised Standard Version Catholic Edition (NRSVCE)
             </option>
             <option value="NTE">
              New Testament for Everyone (NTE)
             </option>
             <option value="OJB">
              Orthodox Jewish Bible (OJB)
             </option>
             <option value="TPT">
              The Passion Translation (TPT)
             </option>
             <option value="RSV">
              Revised Standard Version (RSV)
             </option>
             <option value="RSVCE">
              Revised Standard Version Catholic Edition (RSVCE)
             </option>
             <option value="TLV">
              Tree of Life Version (TLV)
             </option>
             <option value="VOICE">
              The Voice (VOICE)
             </option>
             <option value="WEB">
              World English Bible (WEB)
             </option>
             <option value="WE">
              Worldwide English (New Testament) (WE)
             </option>
             <option value="WYC">
              Wycliffe Bible (WYC)
             </option>
             <option value="YLT">
              Young's Literal Translation (YLT)
             </option>
             <option class="spacer" value="YLT">
             </option>
             <option class="lang" value="LBLA">
              —Español (ES)—
             </option>
             <option value="LBLA">
              La Biblia de las Américas (LBLA)
             </option>
             <option value="DHH">
              Dios Habla Hoy (DHH)
             </option>
             <option value="JBS">
              Jubilee Bible 2000 (Spanish) (JBS)
             </option>
             <option value="NBLH">
              Nueva Biblia Latinoamericana de Hoy (NBLH)
             </option>
             <option value="NBV">
              Nueva Biblia Viva (NBV)
             </option>
             <option value="NTV">
              Nueva Traducción Viviente (NTV)
             </option>
             <option value="NVI">
              Nueva Versión Internacional (NVI)
             </option>
             <option value="CST">
              Nueva Versión Internacional (Castilian) (CST)
             </option>
             <option value="PDT">
              Palabra de Dios para Todos (PDT)
             </option>
             <option value="BLP">
              La Palabra (España) (BLP)
             </option>
             <option value="BLPH">
              La Palabra (Hispanoamérica) (BLPH)
             </option>
             <option value="RVA-2015">
              Reina Valera Actualizada (RVA-2015)
             </option>
             <option value="RVC">
              Reina Valera Contemporánea (RVC)
             </option>
             <option value="RVR1960">
              Reina-Valera 1960 (RVR1960)
             </option>
             <option value="RVR1977">
              Reina Valera Revisada (RVR1977)
             </option>
             <option value="RVR1995">
              Reina-Valera 1995 (RVR1995)
             </option>
             <option value="RVA">
              Reina-Valera Antigua (RVA)
             </option>
             <option value="SRV-BRG">
              Spanish Blue Red and Gold Letter Edition (SRV-BRG)
             </option>
             <option value="TLA">
              Traducción en lenguaje actual (TLA)
             </option>
             <option class="spacer" value="TLA">
             </option>
             <option class="lang" value="R1933">
              —Suomi (FI)—
             </option>
             <option value="R1933">
              Raamattu 1933/38 (R1933)
             </option>
             <option class="spacer" value="R1933">
             </option>
             <option class="lang" value="BDS">
              —Français (FR)—
             </option>
             <option value="BDS">
              La Bible du Semeur (BDS)
             </option>
             <option value="LSG">
              Louis Segond (LSG)
             </option>
             <option value="NEG1979">
              Nouvelle Edition de Genève – NEG1979 (NEG1979)
             </option>
             <option value="SG21">
              Segond 21 (SG21)
             </option>
             <option class="spacer" value="SG21">
             </option>
             <option class="lang" value="TR1550">
              —Κοινη (GRC)—
             </option>
             <option value="TR1550">
              1550 Stephanus New Testament (TR1550)
             </option>
             <option value="WHNU">
              1881 Westcott-Hort New Testament (WHNU)
             </option>
             <option value="TR1894">
              1894 Scrivener New Testament (TR1894)
             </option>
             <option value="SBLGNT">
              SBL Greek New Testament (SBLGNT)
             </option>
             <option class="spacer" value="SBLGNT">
             </option>
             <option class="lang" value="HHH">
              —עברית (HE)—
             </option>
             <option value="HHH">
              Habrit Hakhadasha/Haderekh (HHH)
             </option>
             <option value="WLC">
              The Westminster Leningrad Codex (WLC)
             </option>
             <option class="spacer" value="WLC">
             </option>
             <option class="lang" value="ERV-HI">
              —हिन्दी (HI)—
             </option>
             <option value="ERV-HI">
              Hindi Bible: Easy-to-Read Version (ERV-HI)
             </option>
             <option class="spacer" value="ERV-HI">
             </option>
             <option class="lang" value="HLGN">
              —Ilonggo (HIL)—
             </option>
             <option value="HLGN">
              Ang Pulong Sang Dios (HLGN)
             </option>
             <option class="spacer" value="HLGN">
             </option>
             <option class="lang" value="HNZ-RI">
              —Hrvatski (HR)—
             </option>
             <option value="HNZ-RI">
              Hrvatski Novi Zavjet – Rijeka 2001 (HNZ-RI)
             </option>
             <option value="CRO">
              Knijga O Kristu (CRO)
             </option>
             <option class="spacer" value="CRO">
             </option>
             <option class="lang" value="HCV">
              —Kreyòl ayisyen (HT)—
             </option>
             <option value="HCV">
              Haitian Creole Version (HCV)
             </option>
             <option class="spacer" value="HCV">
             </option>
             <option class="lang" value="KAR">
              —Magyar (HU)—
             </option>
             <option value="KAR">
              Hungarian Károli (KAR)
             </option>
             <option value="ERV-HU">
              Hungarian Bible: Easy-to-Read Version (ERV-HU)
             </option>
             <option value="NT-HU">
              Hungarian New Translation (NT-HU)
             </option>
             <option class="spacer" value="NT-HU">
             </option>
             <option class="lang" value="HWP">
              —Hawai‘i Pidgin (HWC)—
             </option>
             <option value="HWP">
              Hawai‘i Pidgin (HWP)
             </option>
             <option class="spacer" value="HWP">
             </option>
             <option class="lang" value="ICELAND">
              —Íslenska (IS)—
             </option>
             <option value="ICELAND">
              Icelandic Bible (ICELAND)
             </option>
             <option class="spacer" value="ICELAND">
             </option>
             <option class="lang" value="BDG">
              —Italiano (IT)—
             </option>
             <option value="BDG">
              La Bibbia della Gioia (BDG)
             </option>
             <option value="CEI">
              Conferenza Episcopale Italiana (CEI)
             </option>
             <option value="LND">
              La Nuova Diodati (LND)
             </option>
             <option value="NR1994">
              Nuova Riveduta 1994 (NR1994)
             </option>
             <option value="NR2006">
              Nuova Riveduta 2006 (NR2006)
             </option>
             <option class="spacer" value="NR2006">
             </option>
             <option class="lang" value="JLB">
              —日本語 (JA)—
             </option>
             <option value="JLB">
              Japanese Living Bible (JLB)
             </option>
             <option class="spacer" value="JLB">
             </option>
             <option class="lang" value="JAC">
              —Jacalteco, Oriental (JAC)—
             </option>
             <option value="JAC">
              Jacalteco, Oriental (JAC)
             </option>
             <option class="spacer" value="JAC">
             </option>
             <option class="lang" value="KEK">
              —Kekchi (KEK)—
             </option>
             <option value="KEK">
              Kekchi (KEK)
             </option>
             <option class="spacer" value="KEK">
             </option>
             <option class="lang" value="KLB">
              —한국어 (KO)—
             </option>
             <option selected="selected" value="KLB">
              Korean Living Bible (KLB)
             </option>
             <option class="spacer" value="KLB">
             </option>
             <option class="lang" value="VULGATE">
              —Latina (LA)—
             </option>
             <option value="VULGATE">
              Biblia Sacra Vulgata (VULGATE)
             </option>
             <option class="spacer" value="VULGATE">
             </option>
             <option class="lang" value="MAORI">
              —Māori (MI)—
             </option>
             <option value="MAORI">
              Maori Bible (MAORI)
             </option>
             <option class="spacer" value="MAORI">
             </option>
             <option class="lang" value="MNT">
              —Македонски (MK)—
             </option>
             <option value="MNT">
              Macedonian New Testament (MNT)
             </option>
             <option class="spacer" value="MNT">
             </option>
             <option class="lang" value="ERV-MR">
              —मराठी (MR)—
             </option>
             <option value="ERV-MR">
              Marathi Bible: Easy-to-Read Version (ERV-MR)
             </option>
             <option class="spacer" value="ERV-MR">
             </option>
             <option class="lang" value="MVC">
              —Mam, Central (MVC)—
             </option>
             <option value="MVC">
              Mam, Central (MVC)
             </option>
             <option class="spacer" value="MVC">
             </option>
             <option class="lang" value="MVJ">
              —Mam, Todos Santos (MVJ)—
             </option>
             <option value="MVJ">
              Mam de Todos Santos Chuchumatán (MVJ)
             </option>
             <option class="spacer" value="MVJ">
             </option>
             <option class="lang" value="REIMER">
              —Plautdietsch (NDS)—
             </option>
             <option value="REIMER">
              Reimer 2001 (REIMER)
             </option>
             <option class="spacer" value="REIMER">
             </option>
             <option class="lang" value="ERV-NE">
              —नेपाली (NE)—
             </option>
             <option value="ERV-NE">
              Nepali Bible: Easy-to-Read Version (ERV-NE)
             </option>
             <option class="spacer" value="ERV-NE">
             </option>
             <option class="lang" value="NGU">
              —Náhuatl de Guerrero (NGU)—
             </option>
             <option value="NGU">
              Náhuatl de Guerrero (NGU)
             </option>
             <option class="spacer" value="NGU">
             </option>
             <option class="lang" value="BB">
              —Nederlands (NL)—
             </option>
             <option value="BB">
              BasisBijbel (BB)
             </option>
             <option value="HTB">
              Het Boek (HTB)
             </option>
             <option class="spacer" value="HTB">
             </option>
             <option class="lang" value="DNB1930">
              —Norsk (NO)—
             </option>
             <option value="DNB1930">
              Det Norsk Bibelselskap 1930 (DNB1930)
             </option>
             <option value="LB">
              En Levende Bok (LB)
             </option>
             <option class="spacer" value="LB">
             </option>
             <option class="lang" value="ERV-OR">
              —ଓଡ଼ିଆ (OR)—
             </option>
             <option value="ERV-OR">
              Oriya Bible: Easy-to-Read Version (ERV-OR)
             </option>
             <option class="spacer" value="ERV-OR">
             </option>
             <option class="lang" value="ERV-PA">
              —ਪੰਜਾਬੀ (PA)—
             </option>
             <option value="ERV-PA">
              Punjabi Bible: Easy-to-Read Version (ERV-PA)
             </option>
             <option class="spacer" value="ERV-PA">
             </option>
             <option class="lang" value="NP">
              —Polski (PL)—
             </option>
             <option value="NP">
              Nowe Przymierze (NP)
             </option>
             <option value="SZ-PL">
              Słowo Życia (SZ-PL)
             </option>
             <option value="UBG">
              Updated Gdańsk Bible (UBG)
             </option>
             <option class="spacer" value="UBG">
             </option>
             <option class="lang" value="NBTN">
              —Nawat (PPL)—
             </option>
             <option value="NBTN">
              Ne Bibliaj Tik Nawat (NBTN)
             </option>
             <option class="spacer" value="NBTN">
             </option>
             <option class="lang" value="ARC">
              —Português (PT)—
             </option>
             <option value="ARC">
              Almeida Revista e Corrigida 2009 (ARC)
             </option>
             <option value="NTLH">
              Nova Traduҫão na Linguagem de Hoje 2000 (NTLH)
             </option>
             <option value="NVT">
              Nova Versão Transformadora (NVT)
             </option>
             <option value="NVI-PT">
              Nova Versão Internacional (NVI-PT)
             </option>
             <option value="OL">
              O Livro (OL)
             </option>
             <option value="VFL">
              Portuguese New Testament: Easy-to-Read Version (VFL)
             </option>
             <option class="spacer" value="VFL">
             </option>
             <option class="lang" value="MTDS">
              —Quichua (QU)—
             </option>
             <option value="MTDS">
              Mushuj Testamento Diospaj Shimi (MTDS)
             </option>
             <option class="spacer" value="MTDS">
             </option>
             <option class="lang" value="QUT">
              —Quiché, Centro Occidenta (QUT)—
             </option>
             <option value="QUT">
              Quiché, Centro Occidental (QUT)
             </option>
             <option class="spacer" value="QUT">
             </option>
             <option class="lang" value="RMNN">
              —Română (RO)—
             </option>
             <option value="RMNN">
              Cornilescu 1924 - Revised 2010, 2014 (RMNN)
             </option>
             <option value="NTLR">
              Nouă Traducere În Limba Română (NTLR)
             </option>
             <option class="spacer" value="NTLR">
             </option>
             <option class="lang" value="NRT">
              —Русский (RU)—
             </option>
             <option value="NRT">
              New Russian Translation (NRT)
             </option>
             <option value="CARS">
              Священное Писание (Восточный Перевод) (CARS)
             </option>
             <option value="CARST">
              Священное Писание (Восточный перевод), версия для Таджикистана (CARST)
             </option>
             <option value="CARSA">
              Священное Писание (Восточный перевод), версия с «Аллахом» (CARSA)
             </option>
             <option value="ERV-RU">
              Russian New Testament: Easy-to-Read Version (ERV-RU)
             </option>
             <option value="RUSV">
              Russian Synodal Version (RUSV)
             </option>
             <option class="spacer" value="RUSV">
             </option>
             <option class="lang" value="NPK">
              —Slovenčina (SK)—
             </option>
             <option value="NPK">
              Nádej pre kazdého (NPK)
             </option>
             <option class="spacer" value="NPK">
             </option>
             <option class="lang" value="SOM">
              —Somali (SO)—
             </option>
             <option value="SOM">
              Somali Bible (SOM)
             </option>
             <option class="spacer" value="SOM">
             </option>
             <option class="lang" value="ALB">
              —Shqip (SQ)—
             </option>
             <option value="ALB">
              Albanian Bible (ALB)
             </option>
             <option class="spacer" value="ALB">
             </option>
             <option class="lang" value="ERV-SR">
              —Српски (SR)—
             </option>
             <option value="ERV-SR">
              Serbian New Testament: Easy-to-Read Version (ERV-SR)
             </option>
             <option class="spacer" value="ERV-SR">
             </option>
             <option class="lang" value="NUB">
              —Svenska (SV)—
             </option>
             <option value="NUB">
              nuBibeln (Swedish Contemporary Bible) (NUB)
             </option>
             <option value="SV1917">
              Svenska 1917 (SV1917)
             </option>
             <option value="SFB">
              Svenska Folkbibeln (SFB)
             </option>
             <option value="SFB15">
              Svenska Folkbibeln 2015 (SFB15)
             </option>
             <option class="spacer" value="SFB15">
             </option>
             <option class="lang" value="SNT">
              —Kiswahili (SW)—
             </option>
             <option value="SNT">
              Neno: Bibilia Takatifu (SNT)
             </option>
             <option class="spacer" value="SNT">
             </option>
             <option class="lang" value="ERV-TA">
              —தமிழ் (TA)—
             </option>
             <option value="ERV-TA">
              Tamil Bible: Easy-to-Read Version (ERV-TA)
             </option>
             <option class="spacer" value="ERV-TA">
             </option>
             <option class="lang" value="TNCV">
              —ภาษาไทย (TH)—
             </option>
             <option value="TNCV">
              Thai New Contemporary Bible (TNCV)
             </option>
             <option value="ERV-TH">
              Thai New Testament: Easy-to-Read Version (ERV-TH)
             </option>
             <option class="spacer" value="ERV-TH">
             </option>
             <option class="lang" value="FSV">
              —Tagalog (TL)—
             </option>
             <option value="FSV">
              Ang Bagong Tipan: Filipino Standard Version (FSV)
             </option>
             <option value="ABTAG1978">
              Ang Biblia (1978) (ABTAG1978)
             </option>
             <option value="ABTAG2001">
              Ang Biblia, 2001 (ABTAG2001)
             </option>
             <option value="ADB1905">
              Ang Dating Biblia (1905) (ADB1905)
             </option>
             <option value="SND">
              Ang Salita ng Diyos (SND)
             </option>
             <option value="MBBTAG">
              Magandang Balita Biblia (MBBTAG)
             </option>
             <option value="MBBTAG-DC">
              Magandang Balita Biblia (with Deuterocanon) (MBBTAG-DC)
             </option>
             <option class="spacer" value="MBBTAG-DC">
             </option>
             <option class="lang" value="NA-TWI">
              —Twi (TWI)—
             </option>
             <option value="NA-TWI">
              Nkwa Asem (NA-TWI)
             </option>
             <option class="spacer" value="NA-TWI">
             </option>
             <option class="lang" value="UKR">
              —Українська (UK)—
             </option>
             <option value="UKR">
              Ukrainian Bible (UKR)
             </option>
             <option value="ERV-UK">
              Ukrainian New Testament: Easy-to-Read Version (ERV-UK)
             </option>
             <option class="spacer" value="ERV-UK">
             </option>
             <option class="lang" value="ERV-UR">
              —اردو (UR)—
             </option>
             <option value="ERV-UR">
              Urdu Bible: Easy-to-Read Version (ERV-UR)
             </option>
             <option class="spacer" value="ERV-UR">
             </option>
             <option class="lang" value="USP">
              —Uspanteco (USP)—
             </option>
             <option value="USP">
              Uspanteco (USP)
             </option>
             <option class="spacer" value="USP">
             </option>
             <option class="lang" value="VIET">
              —Tiêng Viêt (VI)—
             </option>
             <option value="VIET">
              1934 Vietnamese Bible (VIET)
             </option>
             <option value="BD2011">
              Bản Dịch 2011 (BD2011)
             </option>
             <option value="NVB">
              New Vietnamese Bible (NVB)
             </option>
             <option value="BPT">
              Vietnamese Bible: Easy-to-Read Version (BPT)
             </option>
             <option class="spacer" value="BPT">
             </option>
             <option class="lang" value="CCB">
              —汉语 (ZH)—
             </option>
             <option value="CCB">
              Chinese Contemporary Bible (Simplified) (CCB)
             </option>
             <option value="CCBT">
              Chinese Contemporary Bible (Traditional) (CCBT)
             </option>
             <option value="ERV-ZH">
              Chinese New Testament: Easy-to-Read Version (ERV-ZH)
             </option>
             <option value="CNVS">
              Chinese New Version (Simplified) (CNVS)
             </option>
             <option value="CNVT">
              Chinese New Version (Traditional) (CNVT)
             </option>
             <option value="CSBS">
              Chinese Standard Bible (Simplified) (CSBS)
             </option>
             <option value="CSBT">
              Chinese Standard Bible (Traditional) (CSBT)
             </option>
             <option value="CUVS">
              Chinese Union Version (Simplified) (CUVS)
             </option>
             <option value="CUV">
              Chinese Union Version (Traditional) (CUV)
             </option>
             <option value="CUVMPS">
              Chinese Union Version Modern Punctuation (Simplified) (CUVMPS)
             </option>
             <option value="CUVMPT">
              Chinese Union Version Modern Punctuation (Traditional) (CUVMPT)
             </option>
             <option value="RCU17SS">
              Revised Chinese Union Version (Simplified Script) Shen Edition (RCU17SS)
             </option>
             <option value="RCU17TS">
              Revised Chinese Union Version (Traditional Script) Shen Edition (RCU17TS)
             </option>
            </select>
           </div>
          </div>
          <span class="search-btn-on-select">
           <button aria-label="Search" class="btn btn-default search-btn icon-search" type="submit">
            <span class="search-btn-text">
             Search[ahref][link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li><li>[ahref]</li>[search][search]
            </span>
           </button>
          </span>
         </div>
         <div class="clear">
         </div>
        </form>
        <div class="font-change-controls">
         <span class="xsmall">
          A
         </span>
         <span class="small">
          A
         </span>
         <span class="medium">
          A<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[search]</li>[link][search][link]
         </span>
         <span class="large">
          A
         </span>
         <span class="xlarge">
          A[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[search]
         </span>
        </div>
        [ahref]
        
        <div id="bbl-wrapper">
         <div class="clearfix" id="bbl">
         </div>
        </div>
       </div>
       <div class="bbl-chapters-mask">
        <div class="bbl-chapters-container">
         <ul class="bbl-chapters-tabs clearfix">
         </ul>
         <div class="bbl-chapters-scroll">
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </section>
  <section class="sys-announce js-sys-announce">
   <div class="container container-inset container">
    <div class="row">
     <div class="sys-announce-wrapper col-lg-12">
      <button aria-hidden="" class="close" type="button">
       ×
      </button>
      <p class="sys-announce-title">
       [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][search][search][search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]
      </p>
      <p class="sys-announce-body">
       [ahref]
       
      </p>
     </div>
    </div>
   </div>
  </section>
  <section class="bga leader bga-top">
   <div class="bga-column">
    <div class="bga-wrap">
     <div class="bga-placement">
      <div class="bga" id="bga-gt-top">
      </div>
     </div>
    </div>
   </div>
  </section>
  <section class="passage show-sub single-translation narrow-resources content-section">
   <div class="container">
    <div class="row">
     <div class="passage-main">
      <div class="passage-main-wrap">
       <div class="passage-resource-table">
        <div class="passage-bible">
         <div class="passage-box passage-box-1" data-osis="Josh.17.1-Josh.17.18" data-passage-num="1">
          <div class="passage-resources-link open-link">
           <span class="icon-resources-close">
           </span>
           <span class="related-resources">
            Study This<li>[ahref]</li>[ahref]<li>[ahref]</li><li>[ahref]</li><li>[link]</li>[ahref]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
           </span>
          </div>
          <div class="passage-bar show-resources-link">
           <div class="passage-tools">
            <div class="passage-details">
             <div class="passage-details-wrapper">
              <h1 class="bcv">
               <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
              </h1>
             </div>
            </div>
           </div>
          </div>
          <div class="passage-scroller-top-wrapper">
           <div class="passage-scroller-top bottom-scroller">
            <a class="prev-link" href="/passage/?search=%EC%97%AC%ED%98%B8%EC%88%98%EC%95%84+16&amp;version=KLB" title="여호수아 16">
             <span class="icon-passage-previous">
             </span>
             <span class="heading">
              여호수아 16
             </span>
            </a>
            [ahref]
            
            <div class="clear">
            </div>
           </div>
          </div>
          <div class="passage-table">
           <div class="prev-chapter">
            <a href="/passage/?search=%EC%97%AC%ED%98%B8%EC%88%98%EC%95%84+16&amp;version=KLB" title="여호수아 16">
             <span class="icon-passage-previous">
              <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li>[link]
             </span>
            </a>
           </div>
           <table class="passage-cols">
            <td class="passage-col col-xs-12 first last">
             <div class="passage-tools2">
              <div class="passage-updatetranslation bg-select-wrapper info-viewer-translation-select-wrapper">
               <select class="translation-dropdown-small" data-prefname="default_version">
                <option class="lang" value="AMU">
                 —AMU—
                </option>
                <option value="AMU">
                 AMU
                </option>
                <option class="spacer" value="AMU">
                </option>
                <option class="lang" value="ERV-AR">
                 —AR—
                </option>
                <option value="ERV-AR">
                 ERV-AR
                </option>
                <option value="NAV">
                 NAV
                </option>
                <option class="spacer" value="NAV">
                </option>
                <option class="lang" value="ERV-AWA">
                 —AWA—
                </option>
                <option value="ERV-AWA">
                 ERV-AWA
                </option>
                <option class="spacer" value="ERV-AWA">
                </option>
                <option class="lang" value="BG1940">
                 —BG—
                </option>
                <option value="BG1940">
                 BG1940
                </option>
                <option value="BULG">
                 BULG
                </option>
                <option value="ERV-BG">
                 ERV-BG
                </option>
                <option value="CBT">
                 CBT
                </option>
                <option value="BOB">
                 BOB
                </option>
                <option value="BPB">
                 BPB
                </option>
                <option class="spacer" value="BPB">
                </option>
                <option class="lang" value="CCO">
                 —CCO—
                </option>
                <option value="CCO">
                 CCO
                </option>
                <option class="spacer" value="CCO">
                </option>
                <option class="lang" value="APSD-CEB">
                 —CEB—
                </option>
                <option value="APSD-CEB">
                 APSD-CEB
                </option>
                <option class="spacer" value="APSD-CEB">
                </option>
                <option class="lang" value="CHR">
                 —CHR—
                </option>
                <option value="CHR">
                 CHR
                </option>
                <option class="spacer" value="CHR">
                </option>
                <option class="lang" value="CKW">
                 —CKW—
                </option>
                <option value="CKW">
                 CKW
                </option>
                <option class="spacer" value="CKW">
                </option>
                <option class="lang" value="B21">
                 —CS—
                </option>
                <option value="B21">
                 B21
                </option>
                <option value="SNC">
                 SNC
                </option>
                <option class="spacer" value="SNC">
                </option>
                <option class="lang" value="BWM">
                 —CY—
                </option>
                <option value="BWM">
                 BWM
                </option>
                <option class="spacer" value="BWM">
                </option>
                <option class="lang" value="BPH">
                 —DA—
                </option>
                <option value="BPH">
                 BPH
                </option>
                <option value="DN1933">
                 DN1933
                </option>
                <option class="spacer" value="DN1933">
                </option>
                <option class="lang" value="HOF">
                 —DE—
                </option>
                <option value="HOF">
                 HOF
                </option>
                <option value="LUTH1545">
                 LUTH1545
                </option>
                <option value="NGU-DE">
                 NGU-DE
                </option>
                <option value="SCH1951">
                 SCH1951
                </option>
                <option value="SCH2000">
                 SCH2000
                </option>
                <option class="spacer" value="SCH2000">
                </option>
                <option class="lang" value="KJ21">
                 —EN—
                </option>
                <option value="KJ21">
                 KJ21
                </option>
                <option value="ASV">
                 ASV
                </option>
                <option value="AMP">
                 AMP
                </option>
                <option value="AMPC">
                 AMPC
                </option>
                <option value="BRG">
                 BRG
                </option>
                <option value="CSB">
                 CSB
                </option>
                <option value="CEB">
                 CEB
                </option>
                <option value="CJB">
                 CJB
                </option>
                <option value="CEV">
                 CEV
                </option>
                <option value="DARBY">
                 DARBY
                </option>
                <option value="DLNT">
                 DLNT
                </option>
                <option value="DRA">
                 DRA
                </option>
                <option value="ERV">
                 ERV
                </option>
                <option value="EHV">
                 EHV
                </option>
                <option value="ESV">
                 ESV
                </option>
                <option value="ESVUK">
                 ESVUK
                </option>
                <option value="EXB">
                 EXB
                </option>
                <option value="GNV">
                 GNV
                </option>
                <option value="GW">
                 GW
                </option>
                <option value="GNT">
                 GNT
                </option>
                <option value="HCSB">
                 HCSB
                </option>
                <option value="ICB">
                 ICB
                </option>
                <option value="ISV">
                 ISV
                </option>
                <option value="PHILLIPS">
                 PHILLIPS
                </option>
                <option value="JUB">
                 JUB
                </option>
                <option value="KJV">
                 KJV
                </option>
                <option value="AKJV">
                 AKJV
                </option>
                <option value="LEB">
                 LEB
                </option>
                <option value="TLB">
                 TLB
                </option>
                <option value="MSG">
                 MSG
                </option>
                <option value="MEV">
                 MEV
                </option>
                <option value="MOUNCE">
                 MOUNCE
                </option>
                <option value="NOG">
                 NOG
                </option>
                <option value="NABRE">
                 NABRE
                </option>
                <option value="NASB">
                 NASB
                </option>
                <option value="NCV">
                 NCV
                </option>
                <option value="NET">
                 NET
                </option>
                <option value="NIRV">
                 NIRV
                </option>
                <option value="NIV">
                 NIV
                </option>
                <option value="NIVUK">
                 NIVUK
                </option>
                <option value="NKJV">
                 NKJV
                </option>
                <option value="NLV">
                 NLV
                </option>
                <option value="NLT">
                 NLT
                </option>
                <option value="NMB">
                 NMB
                </option>
                <option value="NRSV">
                 NRSV
                </option>
                <option value="NRSVA">
                 NRSVA
                </option>
                <option value="NRSVACE">
                 NRSVACE
                </option>
                <option value="NRSVCE">
                 NRSVCE
                </option>
                <option value="NTE">
                 NTE
                </option>
                <option value="OJB">
                 OJB
                </option>
                <option value="TPT">
                 TPT
                </option>
                <option value="RSV">
                 RSV
                </option>
                <option value="RSVCE">
                 RSVCE
                </option>
                <option value="TLV">
                 TLV
                </option>
                <option value="VOICE">
                 VOICE
                </option>
                <option value="WEB">
                 WEB
                </option>
                <option value="WE">
                 WE
                </option>
                <option value="WYC">
                 WYC
                </option>
                <option value="YLT">
                 YLT
                </option>
                <option class="spacer" value="YLT">
                </option>
                <option class="lang" value="LBLA">
                 —ES—
                </option>
                <option value="LBLA">
                 LBLA
                </option>
                <option value="DHH">
                 DHH
                </option>
                <option value="JBS">
                 JBS
                </option>
                <option value="NBLH">
                 NBLH
                </option>
                <option value="NBV">
                 NBV
                </option>
                <option value="NTV">
                 NTV
                </option>
                <option value="NVI">
                 NVI
                </option>
                <option value="CST">
                 CST
                </option>
                <option value="PDT">
                 PDT
                </option>
                <option value="BLP">
                 BLP
                </option>
                <option value="BLPH">
                 BLPH
                </option>
                <option value="RVA-2015">
                 RVA-2015
                </option>
                <option value="RVC">
                 RVC
                </option>
                <option value="RVR1960">
                 RVR1960
                </option>
                <option value="RVR1977">
                 RVR1977
                </option>
                <option value="RVR1995">
                 RVR1995
                </option>
                <option value="RVA">
                 RVA
                </option>
                <option value="SRV-BRG">
                 SRV-BRG
                </option>
                <option value="TLA">
                 TLA
                </option>
                <option class="spacer" value="TLA">
                </option>
                <option class="lang" value="R1933">
                 —FI—
                </option>
                <option value="R1933">
                 R1933
                </option>
                <option class="spacer" value="R1933">
                </option>
                <option class="lang" value="BDS">
                 —FR—
                </option>
                <option value="BDS">
                 BDS
                </option>
                <option value="LSG">
                 LSG
                </option>
                <option value="NEG1979">
                 NEG1979
                </option>
                <option value="SG21">
                 SG21
                </option>
                <option class="spacer" value="SG21">
                </option>
                <option class="lang" value="TR1550">
                 —GRC—
                </option>
                <option value="TR1550">
                 TR1550
                </option>
                <option value="WHNU">
                 WHNU
                </option>
                <option value="TR1894">
                 TR1894
                </option>
                <option value="SBLGNT">
                 SBLGNT
                </option>
                <option class="spacer" value="SBLGNT">
                </option>
                <option class="lang" value="HHH">
                 —HE—
                </option>
                <option value="HHH">
                 HHH
                </option>
                <option value="WLC">
                 WLC
                </option>
                <option class="spacer" value="WLC">
                </option>
                <option class="lang" value="ERV-HI">
                 —HI—
                </option>
                <option value="ERV-HI">
                 ERV-HI
                </option>
                <option class="spacer" value="ERV-HI">
                </option>
                <option class="lang" value="HLGN">
                 —HIL—
                </option>
                <option value="HLGN">
                 HLGN
                </option>
                <option class="spacer" value="HLGN">
                </option>
                <option class="lang" value="HNZ-RI">
                 —HR—
                </option>
                <option value="HNZ-RI">
                 HNZ-RI
                </option>
                <option value="CRO">
                 CRO
                </option>
                <option class="spacer" value="CRO">
                </option>
                <option class="lang" value="HCV">
                 —HT—
                </option>
                <option value="HCV">
                 HCV
                </option>
                <option class="spacer" value="HCV">
                </option>
                <option class="lang" value="KAR">
                 —HU—
                </option>
                <option value="KAR">
                 KAR
                </option>
                <option value="ERV-HU">
                 ERV-HU
                </option>
                <option value="NT-HU">
                 NT-HU
                </option>
                <option class="spacer" value="NT-HU">
                </option>
                <option class="lang" value="HWP">
                 —HWC—
                </option>
                <option value="HWP">
                 HWP
                </option>
                <option class="spacer" value="HWP">
                </option>
                <option class="lang" value="ICELAND">
                 —IS—
                </option>
                <option value="ICELAND">
                 ICELAND
                </option>
                <option class="spacer" value="ICELAND">
                </option>
                <option class="lang" value="BDG">
                 —IT—
                </option>
                <option value="BDG">
                 BDG
                </option>
                <option value="CEI">
                 CEI
                </option>
                <option value="LND">
                 LND
                </option>
                <option value="NR1994">
                 NR1994
                </option>
                <option value="NR2006">
                 NR2006
                </option>
                <option class="spacer" value="NR2006">
                </option>
                <option class="lang" value="JLB">
                 —JA—
                </option>
                <option value="JLB">
                 JLB
                </option>
                <option class="spacer" value="JLB">
                </option>
                <option class="lang" value="JAC">
                 —JAC—
                </option>
                <option value="JAC">
                 JAC
                </option>
                <option class="spacer" value="JAC">
                </option>
                <option class="lang" value="KEK">
                 —KEK—
                </option>
                <option value="KEK">
                 KEK
                </option>
                <option class="spacer" value="KEK">
                </option>
                <option class="lang" value="KLB">
                 —KO—
                </option>
                <option selected="selected" value="KLB">
                 KLB
                </option>
                <option class="spacer" value="KLB">
                </option>
                <option class="lang" value="VULGATE">
                 —LA—
                </option>
                <option value="VULGATE">
                 VULGATE
                </option>
                <option class="spacer" value="VULGATE">
                </option>
                <option class="lang" value="MAORI">
                 —MI—
                </option>
                <option value="MAORI">
                 MAORI
                </option>
                <option class="spacer" value="MAORI">
                </option>
                <option class="lang" value="MNT">
                 —MK—
                </option>
                <option value="MNT">
                 MNT
                </option>
                <option class="spacer" value="MNT">
                </option>
                <option class="lang" value="ERV-MR">
                 —MR—
                </option>
                <option value="ERV-MR">
                 ERV-MR
                </option>
                <option class="spacer" value="ERV-MR">
                </option>
                <option class="lang" value="MVC">
                 —MVC—
                </option>
                <option value="MVC">
                 MVC
                </option>
                <option class="spacer" value="MVC">
                </option>
                <option class="lang" value="MVJ">
                 —MVJ—
                </option>
                <option value="MVJ">
                 MVJ
                </option>
                <option class="spacer" value="MVJ">
                </option>
                <option class="lang" value="REIMER">
                 —NDS—
                </option>
                <option value="REIMER">
                 REIMER
                </option>
                <option class="spacer" value="REIMER">
                </option>
                <option class="lang" value="ERV-NE">
                 —NE—
                </option>
                <option value="ERV-NE">
                 ERV-NE
                </option>
                <option class="spacer" value="ERV-NE">
                </option>
                <option class="lang" value="NGU">
                 —NGU—
                </option>
                <option value="NGU">
                 NGU
                </option>
                <option class="spacer" value="NGU">
                </option>
                <option class="lang" value="BB">
                 —NL—
                </option>
                <option value="BB">
                 BB
                </option>
                <option value="HTB">
                 HTB
                </option>
                <option class="spacer" value="HTB">
                </option>
                <option class="lang" value="DNB1930">
                 —NO—
                </option>
                <option value="DNB1930">
                 DNB1930
                </option>
                <option value="LB">
                 LB
                </option>
                <option class="spacer" value="LB">
                </option>
                <option class="lang" value="ERV-OR">
                 —OR—
                </option>
                <option value="ERV-OR">
                 ERV-OR
                </option>
                <option class="spacer" value="ERV-OR">
                </option>
                <option class="lang" value="ERV-PA">
                 —PA—
                </option>
                <option value="ERV-PA">
                 ERV-PA
                </option>
                <option class="spacer" value="ERV-PA">
                </option>
                <option class="lang" value="NP">
                 —PL—
                </option>
                <option value="NP">
                 NP
                </option>
                <option value="SZ-PL">
                 SZ-PL
                </option>
                <option value="UBG">
                 UBG
                </option>
                <option class="spacer" value="UBG">
                </option>
                <option class="lang" value="NBTN">
                 —PPL—
                </option>
                <option value="NBTN">
                 NBTN
                </option>
                <option class="spacer" value="NBTN">
                </option>
                <option class="lang" value="ARC">
                 —PT—
                </option>
                <option value="ARC">
                 ARC
                </option>
                <option value="NTLH">
                 NTLH
                </option>
                <option value="NVT">
                 NVT
                </option>
                <option value="NVI-PT">
                 NVI-PT
                </option>
                <option value="OL">
                 OL
                </option>
                <option value="VFL">
                 VFL
                </option>
                <option class="spacer" value="VFL">
                </option>
                <option class="lang" value="MTDS">
                 —QU—
                </option>
                <option value="MTDS">
                 MTDS
                </option>
                <option class="spacer" value="MTDS">
                </option>
                <option class="lang" value="QUT">
                 —QUT—
                </option>
                <option value="QUT">
                 QUT
                </option>
                <option class="spacer" value="QUT">
                </option>
                <option class="lang" value="RMNN">
                 —RO—
                </option>
                <option value="RMNN">
                 RMNN
                </option>
                <option value="NTLR">
                 NTLR
                </option>
                <option class="spacer" value="NTLR">
                </option>
                <option class="lang" value="NRT">
                 —RU—
                </option>
                <option value="NRT">
                 NRT
                </option>
                <option value="CARS">
                 CARS
                </option>
                <option value="CARST">
                 CARST
                </option>
                <option value="CARSA">
                 CARSA
                </option>
                <option value="ERV-RU">
                 ERV-RU
                </option>
                <option value="RUSV">
                 RUSV
                </option>
                <option class="spacer" value="RUSV">
                </option>
                <option class="lang" value="NPK">
                 —SK—
                </option>
                <option value="NPK">
                 NPK
                </option>
                <option class="spacer" value="NPK">
                </option>
                <option class="lang" value="SOM">
                 —SO—
                </option>
                <option value="SOM">
                 SOM
                </option>
                <option class="spacer" value="SOM">
                </option>
                <option class="lang" value="ALB">
                 —SQ—
                </option>
                <option value="ALB">
                 ALB
                </option>
                <option class="spacer" value="ALB">
                </option>
                <option class="lang" value="ERV-SR">
                 —SR—
                </option>
                <option value="ERV-SR">
                 ERV-SR
                </option>
                <option class="spacer" value="ERV-SR">
                </option>
                <option class="lang" value="NUB">
                 —SV—
                </option>
                <option value="NUB">
                 NUB
                </option>
                <option value="SV1917">
                 SV1917
                </option>
                <option value="SFB">
                 SFB
                </option>
                <option value="SFB15">
                 SFB15
                </option>
                <option class="spacer" value="SFB15">
                </option>
                <option class="lang" value="SNT">
                 —SW—
                </option>
                <option value="SNT">
                 SNT
                </option>
                <option class="spacer" value="SNT">
                </option>
                <option class="lang" value="ERV-TA">
                 —TA—
                </option>
                <option value="ERV-TA">
                 ERV-TA
                </option>
                <option class="spacer" value="ERV-TA">
                </option>
                <option class="lang" value="TNCV">
                 —TH—
                </option>
                <option value="TNCV">
                 TNCV
                </option>
                <option value="ERV-TH">
                 ERV-TH
                </option>
                <option class="spacer" value="ERV-TH">
                </option>
                <option class="lang" value="FSV">
                 —TL—
                </option>
                <option value="FSV">
                 FSV
                </option>
                <option value="ABTAG1978">
                 ABTAG1978
                </option>
                <option value="ABTAG2001">
                 ABTAG2001
                </option>
                <option value="ADB1905">
                 ADB1905
                </option>
                <option value="SND">
                 SND
                </option>
                <option value="MBBTAG">
                 MBBTAG
                </option>
                <option value="MBBTAG-DC">
                 MBBTAG-DC
                </option>
                <option class="spacer" value="MBBTAG-DC">
                </option>
                <option class="lang" value="NA-TWI">
                 —TWI—
                </option>
                <option value="NA-TWI">
                 NA-TWI
                </option>
                <option class="spacer" value="NA-TWI">
                </option>
                <option class="lang" value="UKR">
                 —UK—
                </option>
                <option value="UKR">
                 UKR
                </option>
                <option value="ERV-UK">
                 ERV-UK
                </option>
                <option class="spacer" value="ERV-UK">
                </option>
                <option class="lang" value="ERV-UR">
                 —UR—
                </option>
                <option value="ERV-UR">
                 ERV-UR
                </option>
                <option class="spacer" value="ERV-UR">
                </option>
                <option class="lang" value="USP">
                 —USP—
                </option>
                <option value="USP">
                 USP
                </option>
                <option class="spacer" value="USP">
                </option>
                <option class="lang" value="VIET">
                 —VI—
                </option>
                <option value="VIET">
                 VIET
                </option>
                <option value="BD2011">
                 BD2011
                </option>
                <option value="NVB">
                 NVB
                </option>
                <option value="BPT">
                 BPT
                </option>
                <option class="spacer" value="BPT">
                </option>
                <option class="lang" value="CCB">
                 —ZH—
                </option>
                <option value="CCB">
                 CCB
                </option>
                <option value="CCBT">
                 CCBT
                </option>
                <option value="ERV-ZH">
                 ERV-ZH
                </option>
                <option value="CNVS">
                 CNVS
                </option>
                <option value="CNVT">
                 CNVT
                </option>
                <option value="CSBS">
                 CSBS
                </option>
                <option value="CSBT">
                 CSBT
                </option>
                <option value="CUVS">
                 CUVS
                </option>
                <option value="CUV">
                 CUV
                </option>
                <option value="CUVMPS">
                 CUVMPS
                </option>
                <option value="CUVMPT">
                 CUVMPT
                </option>
                <option value="RCU17SS">
                 RCU17SS
                </option>
                <option value="RCU17TS">
                 RCU17TS
                </option>
               </select>
               <select class="translation-dropdown" data-prefname="default_version">
                <option class="lang" value="AMU">
                 —Amuzgo de Guerrero (AMU)—
                </option>
                <option value="AMU">
                 Amuzgo de Guerrero (AMU)
                </option>
                <option class="spacer" value="AMU">
                </option>
                <option class="lang" value="ERV-AR">
                 —العربية (AR)—
                </option>
                <option value="ERV-AR">
                 Arabic Bible: Easy-to-Read Version (ERV-AR)
                </option>
                <option value="NAV">
                 Ketab El Hayat (NAV)
                </option>
                <option class="spacer" value="NAV">
                </option>
                <option class="lang" value="ERV-AWA">
                 —अवधी (AWA)—
                </option>
                <option value="ERV-AWA">
                 Awadhi Bible: Easy-to-Read Version (ERV-AWA)
                </option>
                <option class="spacer" value="ERV-AWA">
                </option>
                <option class="lang" value="BG1940">
                 —Български (BG)—
                </option>
                <option value="BG1940">
                 1940 Bulgarian Bible (BG1940)
                </option>
                <option value="BULG">
                 Bulgarian Bible (BULG)
                </option>
                <option value="ERV-BG">
                 Bulgarian New Testament: Easy-to-Read Version (ERV-BG)
                </option>
                <option value="CBT">
                 Библия, нов превод от оригиналните езици (с неканоничните книги) (CBT)
                </option>
                <option value="BOB">
                 Библия, синодално издание (BOB)
                </option>
                <option value="BPB">
                 Библия, ревизирано издание (BPB)
                </option>
                <option class="spacer" value="BPB">
                </option>
                <option class="lang" value="CCO">
                 —Chinanteco de Comaltepec (CCO)—
                </option>
                <option value="CCO">
                 Chinanteco de Comaltepec (CCO)
                </option>
                <option class="spacer" value="CCO">
                </option>
                <option class="lang" value="APSD-CEB">
                 —Cebuano (CEB)—
                </option>
                <option value="APSD-CEB">
                 Ang Pulong Sa Dios (APSD-CEB)
                </option>
                <option class="spacer" value="APSD-CEB">
                </option>
                <option class="lang" value="CHR">
                 —ᏣᎳᎩ ᎦᏬᏂᎯᏍ (CHR)—
                </option>
                <option value="CHR">
                 Cherokee New Testament (CHR)
                </option>
                <option class="spacer" value="CHR">
                </option>
                <option class="lang" value="CKW">
                 —Cakchiquel Occidental (CKW)—
                </option>
                <option value="CKW">
                 Cakchiquel Occidental (CKW)
                </option>
                <option class="spacer" value="CKW">
                </option>
                <option class="lang" value="B21">
                 —Čeština (CS)—
                </option>
                <option value="B21">
                 Bible 21 (B21)
                </option>
                <option value="SNC">
                 Slovo na cestu (SNC)
                </option>
                <option class="spacer" value="SNC">
                </option>
                <option class="lang" value="BWM">
                 —Cymraeg (CY)—
                </option>
                <option value="BWM">
                 Beibl William Morgan (BWM)
                </option>
                <option class="spacer" value="BWM">
                </option>
                <option class="lang" value="BPH">
                 —Dansk (DA)—
                </option>
                <option value="BPH">
                 Bibelen på hverdagsdansk (BPH)
                </option>
                <option value="DN1933">
                 Dette er Biblen på dansk (DN1933)
                </option>
                <option class="spacer" value="DN1933">
                </option>
                <option class="lang" value="HOF">
                 —Deutsch (DE)—
                </option>
                <option value="HOF">
                 Hoffnung für Alle (HOF)
                </option>
                <option value="LUTH1545">
                 Luther Bibel 1545 (LUTH1545)
                </option>
                <option value="NGU-DE">
                 Neue Genfer Übersetzung (NGU-DE)
                </option>
                <option value="SCH1951">
                 Schlachter 1951 (SCH1951)
                </option>
                <option value="SCH2000">
                 Schlachter 2000 (SCH2000)
                </option>
                <option class="spacer" value="SCH2000">
                </option>
                <option class="lang" value="KJ21">
                 —English (EN)—
                </option>
                <option value="KJ21">
                 21st Century King James Version (KJ21)
                </option>
                <option value="ASV">
                 American Standard Version (ASV)
                </option>
                <option value="AMP">
                 Amplified Bible (AMP)
                </option>
                <option value="AMPC">
                 Amplified Bible, Classic Edition (AMPC)
                </option>
                <option value="BRG">
                 BRG Bible (BRG)
                </option>
                <option value="CSB">
                 Christian Standard Bible (CSB)
                </option>
                <option value="CEB">
                 Common English Bible (CEB)
                </option>
                <option value="CJB">
                 Complete Jewish Bible (CJB)
                </option>
                <option value="CEV">
                 Contemporary English Version (CEV)
                </option>
                <option value="DARBY">
                 Darby Translation (DARBY)
                </option>
                <option value="DLNT">
                 Disciples’ Literal New Testament (DLNT)
                </option>
                <option value="DRA">
                 Douay-Rheims 1899 American Edition (DRA)
                </option>
                <option value="ERV">
                 Easy-to-Read Version (ERV)
                </option>
                <option value="EHV">
                 Evangelical Heritage Version (EHV)
                </option>
                <option value="ESV">
                 English Standard Version (ESV)
                </option>
                <option value="ESVUK">
                 English Standard Version Anglicised (ESVUK)
                </option>
                <option value="EXB">
                 Expanded Bible (EXB)
                </option>
                <option value="GNV">
                 1599 Geneva Bible (GNV)
                </option>
                <option value="GW">
                 GOD’S WORD Translation (GW)
                </option>
                <option value="GNT">
                 Good News Translation (GNT)
                </option>
                <option value="HCSB">
                 Holman Christian Standard Bible (HCSB)
                </option>
                <option value="ICB">
                 International Children’s Bible (ICB)
                </option>
                <option value="ISV">
                 International Standard Version (ISV)
                </option>
                <option value="PHILLIPS">
                 J.B. Phillips New Testament (PHILLIPS)
                </option>
                <option value="JUB">
                 Jubilee Bible 2000 (JUB)
                </option>
                <option value="KJV">
                 King James Version (KJV)
                </option>
                <option value="AKJV">
                 Authorized (King James) Version (AKJV)
                </option>
                <option value="LEB">
                 Lexham English Bible (LEB)
                </option>
                <option value="TLB">
                 Living Bible (TLB)
                </option>
                <option value="MSG">
                 The Message (MSG)
                </option>
                <option value="MEV">
                 Modern English Version (MEV)
                </option>
                <option value="MOUNCE">
                 Mounce Reverse-Interlinear New Testament (MOUNCE)
                </option>
                <option value="NOG">
                 Names of God Bible (NOG)
                </option>
                <option value="NABRE">
                 New American Bible (Revised Edition) (NABRE)
                </option>
                <option value="NASB">
                 New American Standard Bible (NASB)
                </option>
                <option value="NCV">
                 New Century Version (NCV)
                </option>
                <option value="NET">
                 New English Translation (NET Bible)
                </option>
                <option value="NIRV">
                 New International Reader's Version (NIRV)
                </option>
                <option value="NIV">
                 New International Version (NIV)
                </option>
                <option value="NIVUK">
                 New International Version - UK (NIVUK)
                </option>
                <option value="NKJV">
                 New King James Version (NKJV)
                </option>
                <option value="NLV">
                 New Life Version (NLV)
                </option>
                <option value="NLT">
                 New Living Translation (NLT)
                </option>
                <option value="NMB">
                 New Matthew Bible (NMB)
                </option>
                <option value="NRSV">
                 New Revised Standard Version (NRSV)
                </option>
                <option value="NRSVA">
                 New Revised Standard Version, Anglicised (NRSVA)
                </option>
                <option value="NRSVACE">
                 New Revised Standard Version, Anglicised Catholic Edition (NRSVACE)
                </option>
                <option value="NRSVCE">
                 New Revised Standard Version Catholic Edition (NRSVCE)
                </option>
                <option value="NTE">
                 New Testament for Everyone (NTE)
                </option>
                <option value="OJB">
                 Orthodox Jewish Bible (OJB)
                </option>
                <option value="TPT">
                 The Passion Translation (TPT)
                </option>
                <option value="RSV">
                 Revised Standard Version (RSV)
                </option>
                <option value="RSVCE">
                 Revised Standard Version Catholic Edition (RSVCE)
                </option>
                <option value="TLV">
                 Tree of Life Version (TLV)
                </option>
                <option value="VOICE">
                 The Voice (VOICE)
                </option>
                <option value="WEB">
                 World English Bible (WEB)
                </option>
                <option value="WE">
                 Worldwide English (New Testament) (WE)
                </option>
                <option value="WYC">
                 Wycliffe Bible (WYC)
                </option>
                <option value="YLT">
                 Young's Literal Translation (YLT)
                </option>
                <option class="spacer" value="YLT">
                </option>
                <option class="lang" value="LBLA">
                 —Español (ES)—
                </option>
                <option value="LBLA">
                 La Biblia de las Américas (LBLA)
                </option>
                <option value="DHH">
                 Dios Habla Hoy (DHH)
                </option>
                <option value="JBS">
                 Jubilee Bible 2000 (Spanish) (JBS)
                </option>
                <option value="NBLH">
                 Nueva Biblia Latinoamericana de Hoy (NBLH)
                </option>
                <option value="NBV">
                 Nueva Biblia Viva (NBV)
                </option>
                <option value="NTV">
                 Nueva Traducción Viviente (NTV)
                </option>
                <option value="NVI">
                 Nueva Versión Internacional (NVI)
                </option>
                <option value="CST">
                 Nueva Versión Internacional (Castilian) (CST)
                </option>
                <option value="PDT">
                 Palabra de Dios para Todos (PDT)
                </option>
                <option value="BLP">
                 La Palabra (España) (BLP)
                </option>
                <option value="BLPH">
                 La Palabra (Hispanoamérica) (BLPH)
                </option>
                <option value="RVA-2015">
                 Reina Valera Actualizada (RVA-2015)
                </option>
                <option value="RVC">
                 Reina Valera Contemporánea (RVC)
                </option>
                <option value="RVR1960">
                 Reina-Valera 1960 (RVR1960)
                </option>
                <option value="RVR1977">
                 Reina Valera Revisada (RVR1977)
                </option>
                <option value="RVR1995">
                 Reina-Valera 1995 (RVR1995)
                </option>
                <option value="RVA">
                 Reina-Valera Antigua (RVA)
                </option>
                <option value="SRV-BRG">
                 Spanish Blue Red and Gold Letter Edition (SRV-BRG)
                </option>
                <option value="TLA">
                 Traducción en lenguaje actual (TLA)
                </option>
                <option class="spacer" value="TLA">
                </option>
                <option class="lang" value="R1933">
                 —Suomi (FI)—
                </option>
                <option value="R1933">
                 Raamattu 1933/38 (R1933)
                </option>
                <option class="spacer" value="R1933">
                </option>
                <option class="lang" value="BDS">
                 —Français (FR)—
                </option>
                <option value="BDS">
                 La Bible du Semeur (BDS)
                </option>
                <option value="LSG">
                 Louis Segond (LSG)
                </option>
                <option value="NEG1979">
                 Nouvelle Edition de Genève – NEG1979 (NEG1979)
                </option>
                <option value="SG21">
                 Segond 21 (SG21)
                </option>
                <option class="spacer" value="SG21">
                </option>
                <option class="lang" value="TR1550">
                 —Κοινη (GRC)—
                </option>
                <option value="TR1550">
                 1550 Stephanus New Testament (TR1550)
                </option>
                <option value="WHNU">
                 1881 Westcott-Hort New Testament (WHNU)
                </option>
                <option value="TR1894">
                 1894 Scrivener New Testament (TR1894)
                </option>
                <option value="SBLGNT">
                 SBL Greek New Testament (SBLGNT)
                </option>
                <option class="spacer" value="SBLGNT">
                </option>
                <option class="lang" value="HHH">
                 —עברית (HE)—
                </option>
                <option value="HHH">
                 Habrit Hakhadasha/Haderekh (HHH)
                </option>
                <option value="WLC">
                 The Westminster Leningrad Codex (WLC)
                </option>
                <option class="spacer" value="WLC">
                </option>
                <option class="lang" value="ERV-HI">
                 —हिन्दी (HI)—
                </option>
                <option value="ERV-HI">
                 Hindi Bible: Easy-to-Read Version (ERV-HI)
                </option>
                <option class="spacer" value="ERV-HI">
                </option>
                <option class="lang" value="HLGN">
                 —Ilonggo (HIL)—
                </option>
                <option value="HLGN">
                 Ang Pulong Sang Dios (HLGN)
                </option>
                <option class="spacer" value="HLGN">
                </option>
                <option class="lang" value="HNZ-RI">
                 —Hrvatski (HR)—
                </option>
                <option value="HNZ-RI">
                 Hrvatski Novi Zavjet – Rijeka 2001 (HNZ-RI)
                </option>
                <option value="CRO">
                 Knijga O Kristu (CRO)
                </option>
                <option class="spacer" value="CRO">
                </option>
                <option class="lang" value="HCV">
                 —Kreyòl ayisyen (HT)—
                </option>
                <option value="HCV">
                 Haitian Creole Version (HCV)
                </option>
                <option class="spacer" value="HCV">
                </option>
                <option class="lang" value="KAR">
                 —Magyar (HU)—
                </option>
                <option value="KAR">
                 Hungarian Károli (KAR)
                </option>
                <option value="ERV-HU">
                 Hungarian Bible: Easy-to-Read Version (ERV-HU)
                </option>
                <option value="NT-HU">
                 Hungarian New Translation (NT-HU)
                </option>
                <option class="spacer" value="NT-HU">
                </option>
                <option class="lang" value="HWP">
                 —Hawai‘i Pidgin (HWC)—
                </option>
                <option value="HWP">
                 Hawai‘i Pidgin (HWP)
                </option>
                <option class="spacer" value="HWP">
                </option>
                <option class="lang" value="ICELAND">
                 —Íslenska (IS)—
                </option>
                <option value="ICELAND">
                 Icelandic Bible (ICELAND)
                </option>
                <option class="spacer" value="ICELAND">
                </option>
                <option class="lang" value="BDG">
                 —Italiano (IT)—
                </option>
                <option value="BDG">
                 La Bibbia della Gioia (BDG)
                </option>
                <option value="CEI">
                 Conferenza Episcopale Italiana (CEI)
                </option>
                <option value="LND">
                 La Nuova Diodati (LND)
                </option>
                <option value="NR1994">
                 Nuova Riveduta 1994 (NR1994)
                </option>
                <option value="NR2006">
                 Nuova Riveduta 2006 (NR2006)
                </option>
                <option class="spacer" value="NR2006">
                </option>
                <option class="lang" value="JLB">
                 —日本語 (JA)—
                </option>
                <option value="JLB">
                 Japanese Living Bible (JLB)
                </option>
                <option class="spacer" value="JLB">
                </option>
                <option class="lang" value="JAC">
                 —Jacalteco, Oriental (JAC)—
                </option>
                <option value="JAC">
                 Jacalteco, Oriental (JAC)
                </option>
                <option class="spacer" value="JAC">
                </option>
                <option class="lang" value="KEK">
                 —Kekchi (KEK)—
                </option>
                <option value="KEK">
                 Kekchi (KEK)
                </option>
                <option class="spacer" value="KEK">
                </option>
                <option class="lang" value="KLB">
                 —한국어 (KO)—
                </option>
                <option selected="selected" value="KLB">
                 Korean Living Bible (KLB)
                </option>
                <option class="spacer" value="KLB">
                </option>
                <option class="lang" value="VULGATE">
                 —Latina (LA)—
                </option>
                <option value="VULGATE">
                 Biblia Sacra Vulgata (VULGATE)
                </option>
                <option class="spacer" value="VULGATE">
                </option>
                <option class="lang" value="MAORI">
                 —Māori (MI)—
                </option>
                <option value="MAORI">
                 Maori Bible (MAORI)
                </option>
                <option class="spacer" value="MAORI">
                </option>
                <option class="lang" value="MNT">
                 —Македонски (MK)—
                </option>
                <option value="MNT">
                 Macedonian New Testament (MNT)
                </option>
                <option class="spacer" value="MNT">
                </option>
                <option class="lang" value="ERV-MR">
                 —मराठी (MR)—
                </option>
                <option value="ERV-MR">
                 Marathi Bible: Easy-to-Read Version (ERV-MR)
                </option>
                <option class="spacer" value="ERV-MR">
                </option>
                <option class="lang" value="MVC">
                 —Mam, Central (MVC)—
                </option>
                <option value="MVC">
                 Mam, Central (MVC)
                </option>
                <option class="spacer" value="MVC">
                </option>
                <option class="lang" value="MVJ">
                 —Mam, Todos Santos (MVJ)—
                </option>
                <option value="MVJ">
                 Mam de Todos Santos Chuchumatán (MVJ)
                </option>
                <option class="spacer" value="MVJ">
                </option>
                <option class="lang" value="REIMER">
                 —Plautdietsch (NDS)—
                </option>
                <option value="REIMER">
                 Reimer 2001 (REIMER)
                </option>
                <option class="spacer" value="REIMER">
                </option>
                <option class="lang" value="ERV-NE">
                 —नेपाली (NE)—
                </option>
                <option value="ERV-NE">
                 Nepali Bible: Easy-to-Read Version (ERV-NE)
                </option>
                <option class="spacer" value="ERV-NE">
                </option>
                <option class="lang" value="NGU">
                 —Náhuatl de Guerrero (NGU)—
                </option>
                <option value="NGU">
                 Náhuatl de Guerrero (NGU)
                </option>
                <option class="spacer" value="NGU">
                </option>
                <option class="lang" value="BB">
                 —Nederlands (NL)—
                </option>
                <option value="BB">
                 BasisBijbel (BB)
                </option>
                <option value="HTB">
                 Het Boek (HTB)
                </option>
                <option class="spacer" value="HTB">
                </option>
                <option class="lang" value="DNB1930">
                 —Norsk (NO)—
                </option>
                <option value="DNB1930">
                 Det Norsk Bibelselskap 1930 (DNB1930)
                </option>
                <option value="LB">
                 En Levende Bok (LB)
                </option>
                <option class="spacer" value="LB">
                </option>
                <option class="lang" value="ERV-OR">
                 —ଓଡ଼ିଆ (OR)—
                </option>
                <option value="ERV-OR">
                 Oriya Bible: Easy-to-Read Version (ERV-OR)
                </option>
                <option class="spacer" value="ERV-OR">
                </option>
                <option class="lang" value="ERV-PA">
                 —ਪੰਜਾਬੀ (PA)—
                </option>
                <option value="ERV-PA">
                 Punjabi Bible: Easy-to-Read Version (ERV-PA)
                </option>
                <option class="spacer" value="ERV-PA">
                </option>
                <option class="lang" value="NP">
                 —Polski (PL)—
                </option>
                <option value="NP">
                 Nowe Przymierze (NP)
                </option>
                <option value="SZ-PL">
                 Słowo Życia (SZ-PL)
                </option>
                <option value="UBG">
                 Updated Gdańsk Bible (UBG)
                </option>
                <option class="spacer" value="UBG">
                </option>
                <option class="lang" value="NBTN">
                 —Nawat (PPL)—
                </option>
                <option value="NBTN">
                 Ne Bibliaj Tik Nawat (NBTN)
                </option>
                <option class="spacer" value="NBTN">
                </option>
                <option class="lang" value="ARC">
                 —Português (PT)—
                </option>
                <option value="ARC">
                 Almeida Revista e Corrigida 2009 (ARC)
                </option>
                <option value="NTLH">
                 Nova Traduҫão na Linguagem de Hoje 2000 (NTLH)
                </option>
                <option value="NVT">
                 Nova Versão Transformadora (NVT)
                </option>
                <option value="NVI-PT">
                 Nova Versão Internacional (NVI-PT)
                </option>
                <option value="OL">
                 O Livro (OL)
                </option>
                <option value="VFL">
                 Portuguese New Testament: Easy-to-Read Version (VFL)
                </option>
                <option class="spacer" value="VFL">
                </option>
                <option class="lang" value="MTDS">
                 —Quichua (QU)—
                </option>
                <option value="MTDS">
                 Mushuj Testamento Diospaj Shimi (MTDS)
                </option>
                <option class="spacer" value="MTDS">
                </option>
                <option class="lang" value="QUT">
                 —Quiché, Centro Occidenta (QUT)—
                </option>
                <option value="QUT">
                 Quiché, Centro Occidental (QUT)
                </option>
                <option class="spacer" value="QUT">
                </option>
                <option class="lang" value="RMNN">
                 —Română (RO)—
                </option>
                <option value="RMNN">
                 Cornilescu 1924 - Revised 2010, 2014 (RMNN)
                </option>
                <option value="NTLR">
                 Nouă Traducere În Limba Română (NTLR)
                </option>
                <option class="spacer" value="NTLR">
                </option>
                <option class="lang" value="NRT">
                 —Русский (RU)—
                </option>
                <option value="NRT">
                 New Russian Translation (NRT)
                </option>
                <option value="CARS">
                 Священное Писание (Восточный Перевод) (CARS)
                </option>
                <option value="CARST">
                 Священное Писание (Восточный перевод), версия для Таджикистана (CARST)
                </option>
                <option value="CARSA">
                 Священное Писание (Восточный перевод), версия с «Аллахом» (CARSA)
                </option>
                <option value="ERV-RU">
                 Russian New Testament: Easy-to-Read Version (ERV-RU)
                </option>
                <option value="RUSV">
                 Russian Synodal Version (RUSV)
                </option>
                <option class="spacer" value="RUSV">
                </option>
                <option class="lang" value="NPK">
                 —Slovenčina (SK)—
                </option>
                <option value="NPK">
                 Nádej pre kazdého (NPK)
                </option>
                <option class="spacer" value="NPK">
                </option>
                <option class="lang" value="SOM">
                 —Somali (SO)—
                </option>
                <option value="SOM">
                 Somali Bible (SOM)
                </option>
                <option class="spacer" value="SOM">
                </option>
                <option class="lang" value="ALB">
                 —Shqip (SQ)—
                </option>
                <option value="ALB">
                 Albanian Bible (ALB)
                </option>
                <option class="spacer" value="ALB">
                </option>
                <option class="lang" value="ERV-SR">
                 —Српски (SR)—
                </option>
                <option value="ERV-SR">
                 Serbian New Testament: Easy-to-Read Version (ERV-SR)
                </option>
                <option class="spacer" value="ERV-SR">
                </option>
                <option class="lang" value="NUB">
                 —Svenska (SV)—
                </option>
                <option value="NUB">
                 nuBibeln (Swedish Contemporary Bible) (NUB)
                </option>
                <option value="SV1917">
                 Svenska 1917 (SV1917)
                </option>
                <option value="SFB">
                 Svenska Folkbibeln (SFB)
                </option>
                <option value="SFB15">
                 Svenska Folkbibeln 2015 (SFB15)
                </option>
                <option class="spacer" value="SFB15">
                </option>
                <option class="lang" value="SNT">
                 —Kiswahili (SW)—
                </option>
                <option value="SNT">
                 Neno: Bibilia Takatifu (SNT)
                </option>
                <option class="spacer" value="SNT">
                </option>
                <option class="lang" value="ERV-TA">
                 —தமிழ் (TA)—
                </option>
                <option value="ERV-TA">
                 Tamil Bible: Easy-to-Read Version (ERV-TA)
                </option>
                <option class="spacer" value="ERV-TA">
                </option>
                <option class="lang" value="TNCV">
                 —ภาษาไทย (TH)—
                </option>
                <option value="TNCV">
                 Thai New Contemporary Bible (TNCV)
                </option>
                <option value="ERV-TH">
                 Thai New Testament: Easy-to-Read Version (ERV-TH)
                </option>
                <option class="spacer" value="ERV-TH">
                </option>
                <option class="lang" value="FSV">
                 —Tagalog (TL)—
                </option>
                <option value="FSV">
                 Ang Bagong Tipan: Filipino Standard Version (FSV)
                </option>
                <option value="ABTAG1978">
                 Ang Biblia (1978) (ABTAG1978)
                </option>
                <option value="ABTAG2001">
                 Ang Biblia, 2001 (ABTAG2001)
                </option>
                <option value="ADB1905">
                 Ang Dating Biblia (1905) (ADB1905)
                </option>
                <option value="SND">
                 Ang Salita ng Diyos (SND)
                </option>
                <option value="MBBTAG">
                 Magandang Balita Biblia (MBBTAG)
                </option>
                <option value="MBBTAG-DC">
                 Magandang Balita Biblia (with Deuterocanon) (MBBTAG-DC)
                </option>
                <option class="spacer" value="MBBTAG-DC">
                </option>
                <option class="lang" value="NA-TWI">
                 —Twi (TWI)—
                </option>
                <option value="NA-TWI">
                 Nkwa Asem (NA-TWI)
                </option>
                <option class="spacer" value="NA-TWI">
                </option>
                <option class="lang" value="UKR">
                 —Українська (UK)—
                </option>
                <option value="UKR">
                 Ukrainian Bible (UKR)
                </option>
                <option value="ERV-UK">
                 Ukrainian New Testament: Easy-to-Read Version (ERV-UK)
                </option>
                <option class="spacer" value="ERV-UK">
                </option>
                <option class="lang" value="ERV-UR">
                 —اردو (UR)—
                </option>
                <option value="ERV-UR">
                 Urdu Bible: Easy-to-Read Version (ERV-UR)
                </option>
                <option class="spacer" value="ERV-UR">
                </option>
                <option class="lang" value="USP">
                 —Uspanteco (USP)—
                </option>
                <option value="USP">
                 Uspanteco (USP)
                </option>
                <option class="spacer" value="USP">
                </option>
                <option class="lang" value="VIET">
                 —Tiêng Viêt (VI)—
                </option>
                <option value="VIET">
                 1934 Vietnamese Bible (VIET)
                </option>
                <option value="BD2011">
                 Bản Dịch 2011 (BD2011)
                </option>
                <option value="NVB">
                 New Vietnamese Bible (NVB)
                </option>
                <option value="BPT">
                 Vietnamese Bible: Easy-to-Read Version (BPT)
                </option>
                <option class="spacer" value="BPT">
                </option>
                <option class="lang" value="CCB">
                 —汉语 (ZH)—
                </option>
                <option value="CCB">
                 Chinese Contemporary Bible (Simplified) (CCB)
                </option>
                <option value="CCBT">
                 Chinese Contemporary Bible (Traditional) (CCBT)
                </option>
                <option value="ERV-ZH">
                 Chinese New Testament: Easy-to-Read Version (ERV-ZH)
                </option>
                <option value="CNVS">
                 Chinese New Version (Simplified) (CNVS)
                </option>
                <option value="CNVT">
                 Chinese New Version (Traditional) (CNVT)
                </option>
                <option value="CSBS">
                 Chinese Standard Bible (Simplified) (CSBS)
                </option>
                <option value="CSBT">
                 Chinese Standard Bible (Traditional) (CSBT)
                </option>
                <option value="CUVS">
                 Chinese Union Version (Simplified) (CUVS)
                </option>
                <option value="CUV">
                 Chinese Union Version (Traditional) (CUV)
                </option>
                <option value="CUVMPS">
                 Chinese Union Version Modern Punctuation (Simplified) (CUVMPS)
                </option>
                <option value="CUVMPT">
                 Chinese Union Version Modern Punctuation (Traditional) (CUVMPT)
                </option>
                <option value="RCU17SS">
                 Revised Chinese Union Version (Simplified Script) Shen Edition (RCU17SS)
                </option>
                <option value="RCU17TS">
                 Revised Chinese Union Version (Traditional Script) Shen Edition (RCU17TS)
                </option>
               </select>
              </div>
              <span class="passage-options">
               [search][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][link][ahref][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
              </span>
             </div>
             <div class="passage-text">
              <div class="passage-wrap">
               <div class="passage-content passage-class-0">
                <div class="version-KLB result-text-style-normal text-html ">
                 <h1 class="passage-display">
                  <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
                 </h1>
                 <h3>
                  [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                 </h3>
                 <p class="chapter-2">
                  [link]<li>[ahref]</li>[search]<li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li>
                 </p>
                 <p>
                  <span class="text Josh-17-2" id="ko-KLB-5885">
                   <sup class="versenum">
                    2
                   </sup>
                   그래서 요단강 서쪽에서는 므낫세의 나머지 자손이 집안별로 땅을 분배받았는데 이들 집안은 아비에셀, 헬렉, 아스리엘, 세겜, 헤벨, 스미다 집안이었다. 이들은 모두 요셉의 아들인 므낫세의 남자 후손이며 집안 어른들이다.
                  </span>
                 </p>
                 <p>
                  <span class="text Josh-17-3" id="ko-KLB-5886">
                   <sup class="versenum">
                    3
                   </sup>
                   그러나 헤벨의 아들이요 길르앗의 손자이며 마길의 증손이자 므낫세의 현손인 슬로브핫은 아들이 없고 딸뿐이었으며 그들의 이름은 말락, 노아, 호글라, 밀가, 디르사였다.
                  </span>
                 </p>
                 <p>
                  <span class="text Josh-17-4" id="ko-KLB-5887">
                   <sup class="versenum">
                    4
                   </sup>
                   그들이 제사장 엘르아살과 눈의 아들 여호수아와 이스라엘 백성의 지도자들 앞에 나와 “여호와께서는 모세에게 우리 지파의 남자들과 함께 우리에게도 땅의 일부를 주라고 명령하였습니다” 하고 말하였다. 그래서 여호수아는 여호와께서 명령하신 대로 그 여자들에게도 그들의 남자 친척들과 함께 땅을 분배해 주었다.
                  </span>
                 </p>
                 <p>
                  <span class="text Josh-17-5" id="ko-KLB-5888">
                   <li>[search]</li>[link][search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
                  </span>
                 </p>
                 <p>
                  <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
                 </p>
                 <p>
                  <span class="text Josh-17-7" id="ko-KLB-5890">
                   [ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li><li>[search]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
                  </span>
                 </p>
                 <p>
                  <span class="text Josh-17-8" id="ko-KLB-5891">
                   <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][search][link]<li>[search]</li><li>[link]</li><li>[search]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                  </span>
                 </p>
                 <p>
                  [link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]
                 </p>
                 <p>
                  <span class="text Josh-17-10" id="ko-KLB-5893">
                   <sup class="versenum">
                    10
                   </sup>
                   그래서 가나 시내 남쪽은 에브라임의 땅이었고 그 북쪽은 므낫세의 땅이었으며 그들의 서쪽 경계는 지중해였다. 그리고 므낫세 지파의 경계는 북서쪽으로 아셀 지파의 땅과 접해 있고 북동쪽으로는 잇사갈 지파의 땅과 접해 있었다.
                  </span>
                 </p>
                 <p>
                  <li>[link]</li><li>[ahref]</li><li>[link]</li><li>[search]</li><li>[search]</li>[ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li>
                 </p>
                 <p>
                  <li>[search]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[link]</li><li>[link]</li>
                 </p>
                 <p>
                  <span class="text Josh-17-13" id="ko-KLB-5896">
                   <sup class="versenum">
                    13
                   </sup>
                   그런데 이스라엘 사람들은 세력이 강해진 다음에 가나안 사람들을 굴복시켜 강제 노동을 시키고 그들을 완전히 쫓아내지 않았다.
                  </span>
                 </p>
                 <h3>
                  [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                 </h3>
                 <p>
                  [ahref]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                 </p>
                 <p>
                  [ahref][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[link]<li>[link]</li>[link][search]<li>[ahref]</li>[ahref]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>
                 </p>
                 <p>
                  <li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                 </p>
                 <p>
                  <span class="text Josh-17-17" id="ko-KLB-5900">
                   <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
                  </span>
                 </p>
                 <p>
                  <span class="text Josh-17-18" id="ko-KLB-5901">
                   <sup class="versenum">
                    18
                   </sup>
                   그 산림 지대도 소유해야 합니다. 여러분이 그 땅을 개간하면 그 온 산림 지대가 이 끝에서 저 끝까지 모두 여러분의 땅이 될 것입니다. 가나안 사람들이 아무리 막강하고 철전차를 가졌다고 해도 여러분은 그들을 충분히 쫓아낼 수 있습니다.”
                  </span>
                 </p>
                </div>
                <div class="publisher-info-bottom">
                 <strong>
                  [link]
                  
                  (KLB)
                 </strong>
                 <p>
                  Copyright © 1985 by Biblica, Inc.®
Used by permission.  All rights reserved worldwide.
                 </p>
                </div>
               </div>
              </div>
             </div>
            </td>
           </table>
           <div class="next-chapter">
            [ahref]
            
           </div>
          </div>
          <div class="bga leader bga-bottom">
           <div class="bga-column">
            <div class="bga-wrap">
             <div class="bga-placement">
              <div class="bga" id="bga-gt-bottom">
              </div>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="passage-resources ">
         <div class="passage-resources-head">
          <div class="passage-resources-link close-link">
           <span class="icon-resources-open">
            [ahref][ahref][link]<li>[link]</li><li>[search]</li><li>[search]</li><li>[ahref]</li><li>[search]</li><li>[link]</li>[ahref][ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[search]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li>
           </span>
           <span class="related-resources">
            Study This[search]<li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[link]</li><li>[search]</li>[link][link][ahref][ahref][ahref]<li>[search]</li><li>[link]</li>[link]
           </span>
          </div>
          <div class="subscribe-info">
           <div class="close">
            ×
           </div>
           <div class="header">
            Bible Gateway Plus
           </div>
           <div class="desc">
            Enrich your faith and grow in spiritual maturity with the incredible Bible study and devotional books listed below. Try it for 30 days FREE. Cancel at any time.
           </div>
           <a class="learn-more btn" href="/plus?utm_source=bg&amp;utm_medium=sidebar&amp;utm_campaign=bgplus_learnmore">
            Learn more
           </a>
           <button class="start-trial btn">
            Start my trial
           </button>
          </div>
         </div>
         <div class="passage-resources-content">
          <div class="resources-contents-drawer">
           <ul>
            <li class="resource-item">
             <div class="spinner-grey">
             </div>
            </li>
           </ul>
          </div>
          <div class="resource-entries-drawer">
           <ul>
            <li class="resource-item">
             <div class="spinner-grey">
             </div>
            </li>
           </ul>
          </div>
          <div class="resource-entry">
           <div class="resource-pub">
            <span class="pub-title-wrapper">
             <span class="pub-title">
              <li>[search]</li>[ahref][link][link]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
            </span>
            <span class="back">
             <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[link]</li><li>[ahref]</li>[search]<li>[search]</li><li>[search]</li>
            </span>
            <span class="cover">
            </span>
            <div class="clearfix">
            </div>
           </div>
           <div class="entry-loading">
           </div>
           <div class="entry-content">
            <div class="resource-bga-link">
            </div>
            <h4 class="title">
            </h4>
            <div class="content">
            </div>
           </div>
           <div class="pub-details">
            <div class="pub-scroller">
             <div class="paginate-wrapper">
              <div class="paginate">
               1 of 1
              </div>
             </div>
             [link]
             
             [link]
             
             <div class="clear">
             </div>
            </div>
            <div class="pub-info">
            </div>
           </div>
          </div>
          <div class="resource-entry-gk">
           <div class="resource-pub">
            <div class="pub-title">
            </div>
           </div>
           <div class="icon-close">
           </div>
           <div class="clearfix">
           </div>
           <div class="entry-loading">
           </div>
           <div class="entry-content">
            <div class="resource-bga-link">
            </div>
            <h4 class="title">
            </h4>
            <div class="content">
            </div>
           </div>
           <div class="pub-details">
            <div class="pub-info">
             <h5 class="pub-title">
             </h5>
             <div class="pub-description">
             </div>
             <div class="pub-copyright">
             </div>
            </div>
           </div>
          </div>
          <div class="resource-preview">
           <div class="resource-pub">
            <span class="icon-passage-previous">
            </span>
            <span class="pub-title">
             [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[link][ahref][search]
            </span>
            <span class="icon-purchase">
            </span>
           </div>
           <div class="preview-content clearfix">
            <div class="preview-pub-info">
             <div class="preview-pub-title">
             </div>
             <div class="preview-pub-description">
             </div>
             <div class="preview-plus-included">
             </div>
             [link]
             
             <div class="price-info">
              <div class="retail-price product-retail-price">
              </div>
              <div class="our-price">
              </div>
              <div class="save-amount">
              </div>
             </div>
            </div>
            <p class="preview-info-text">
             You'll get this book and many others when you join Bible Gateway Plus.
             [ahref]
             
            </p>
           </div>
           <div class="login-modal-text">
            <strong>
             You must be logged in to view your newly purchased content.
            </strong>
            Please log in below or if you don't have an account, creating one is easy and only takes a few moments. After you log in your content will be available in your library.
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="passage-scroller bottom-scroller">
        <div class="top-link-wrapper">
         <div class="top-link">
          Top
         </div>
        </div>
        [ahref]
        
        [ahref]
        
        <div class="clear">
        </div>
       </div>
      </div>
     </div>
     <div class="sidebar-main bga-sidebar sidebar">
      <div class="sidebar-wrap">
       <div class="bga-sidebar-promotion">
        <div class="bga" id="bga-gt-sidetall">
        </div>
       </div>
       <div class="recommendations">
       </div>
       <div class="bga-sidebar-promotion bga-sidebar-promotion-lower">
        <div class="bga" id="bga-gt-sidebottom">
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </section>
  <footer>
   <div class="container">
    <div class="footer-menu-row is-phone-only">
     <div class="full-column col-sm-12">
      <div class="footer-menu-wrapper">
       <div class="footer-title">
        Bible Gateway
       </div>
       <div class="footer-menu" id="footer-menu">
        <div class="footer-menu-panel panel">
         [ahref]
         
         <div class="collapse" id="collapse-help">
          <div class="footer-menu-panel-body">
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/usage/" title="Use Bible Gateway On Your Site">
              Use Bible Gateway On Your Site
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="footer-menu-panel panel">
         [link]
         
         <div class="collapse" id="collapse-links">
          <div class="footer-menu-panel-body">
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/" title="Mobile Bible Gateway">
              Mobile Bible Gateway
             </a>
            </li>
            <li>
             <a href="m" title="ChurchSource">
              ChurchSource
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/" rel="nofollow" title="Westbow Press">
              Westbow Press
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="footer-menu-panel panel">
         <a class="footer-menu-panel-title" data-parent="#footer-menu" data-toggle="collapse" href="t">
          About
         </a>
         <div class="collapse" id="collapse-about">
          <div class="footer-menu-panel-body">
           <ul>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/about/" title="About Bible Gateway">
              About Bible Gateway
             </a>
            </li>
            <li>
             <a href="/press/" title="Press">
              Press Releases
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/legal/privacy/#h3" title="Your Ad Choices">
              Your Ad Choices
             </a>
            </li>
            <li>
             <a href="/legal/terms/" title="Site: Terms of use">
              Site: Terms of use
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
        <div class="footer-menu-panel panel">
         [link]
         
         <div class="collapse" id="collapse-preferences">
          <div class="footer-menu-panel-body">
           <ul>
            <li>
             <a href="/languages/update/?language=es&amp;url=%2Fpassage%2F%3Fsearch%3D%25EC%2597%25AC%25ED%2598%25B8%25EC%2588%2598%25EC%2595%2584%2B17%26version%3DKLB">
              En Español
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
       </div>
       <ul class="social-icons">
        <li>
         <a class="icon-facebook" href="/BibleGateway" onclick="_gaq.push(['_trackEvent', 'social', 'socialclick']);" rel="nofollow" target="_blank" title="Bible Gateway on Facebook">
         </a>
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a class="icon-gplus" href="/+BibleGateway/" onclick="_gaq.push(['_trackEvent', 'social', 'socialclick']);" rel="nofollow" target="_blank" title="Bible Gateway on Google+">
         </a>
        </li>
       </ul>
      </div>
     </div>
    </div>
    <div class="footer-expanded-row is-tablet-up">
     <div class="col-lg-8">
      <div class="row">
       <div class="footer-title-col col-sm-3">
        <div class="footer-title">
         Bible Gateway
        </div>
       </div>
       <div class="footer-links-col col-sm-3">
        <h5>
         Help
        </h5>
        <ul class="footer-links">
         <li>
          <a href="/help/" title="FAQs/Tutorials">
           FAQs/Tutorials
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/campaign/advertise-with-us/" target="_blank" title="Advertise with Us">
           Advertise with Us
          </a>
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
       <div class="footer-links-col col-sm-3">
        <h5>
         Links
        </h5>
        <ul class="footer-links">
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="m" rel="nofollow" target="_blank" title="Visit and save at the Bible Gateway Store">
           Bible Gateway Store
          </a>
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="r" target="_blank" title="Gospel.com">
           Gospel.com
          </a>
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          <a href="/" target="_blank" title="Zondervan.com">
           Zondervan.com
          </a>
         </li>
        </ul>
       </div>
       <div class="footer-links-col col-sm-3">
        <h5>
         About
        </h5>
        <ul class="footer-links">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          <a href="/legal/terms/" title="Site: Terms of use">
           Site: Terms of use
          </a>
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
     <div class="col-lg-4">
      <div class="row">
       <div class="footer-spacer-col col-lg-2">
       </div>
       <div class="footer-lang-col col-lg-4">
        <ul class="footer-links">
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
       <div class="footer-social-icons-col col-lg-6">
        <ul class="social-icons">
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
  </footer>
  <div class="app-templates">
   <div class="note-popover-template">
    <div class="options">
     <span class="icon-trash delete">
      [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
     </span>
     <span class="icon-edit edit-link">
      [search]<li>[ahref]</li>[ahref]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
     </span>
    </div>
    <div class="edit view reference">
    </div>
    <div class="view content">
    </div>
    <div class="view note-scroller">
     <div class="paginate-wrapper">
      <div class="paginate">
       Viewing
       <span class="note-num">
        <li>[link]</li>[ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>
       </span>
       of
       <span class="note-total">
        <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<li>[link]</li><li>[ahref]</li>
       </span>
      </div>
     </div>
     <span class="prev-note icon-passage-previous hidden">
     </span>
     <span class="next-note icon-passage-next hidden">
      <li>[ahref]</li><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]
     </span>
     <div style="clear:left">
     </div>
    </div>
    <div class="edit new buttons">
     <button class="standard-btn cancel">
      Cancel
     </button>
     <button class="standard-btn save">
      Save
     </button>
    </div>
   </div>
   <div class="notes-menu-popover">
    <span class="highlights notes-options">
     [ahref]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search][link][link][link][link]
    </span>
    <span class="notes-options">
     [link][search][link]<li>[ahref]</li>[link]<li>[search]</li>[search]
    </span>
   </div>
   <div class="bg-popover-content social-share" id="passage-share-popover-content">
    <ul class="passage-share-list bg-popover-list">
     <li>
      [link]
      
     </li>
     <li>
      <a class="share-link share-link-twitter">
       <span class="bg-popover-icon icon-twitter">
       </span>
       Twitter
      </a>
     </li>
     <li>
      [link]
      
     </li>
     <li>
      [link]
      
     </li>
    </ul>
   </div>
   <div class="bg-popover-content" id="passage-options-popover">
    <ul class="passage-options-list bg-popover-list">
     <li class="toggle-footnotes">
      <span class="option-checkbox icon-checkbox-empty">
       [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link][link]<li>[link]</li>
      </span>
      Footnotes
     </li>
     <li class="toggle-crossrefs">
      <span class="option-checkbox icon-checkbox-empty">
      </span>
      Cross references
     </li>
     <li class="toggle-versenums">
      <h2>
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      <span class="option-checkbox icon-checkbox-empty">
       <li>[search]</li><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
      </span>
      Verse Numbers
     </li>
     <li class="toggle-headings">
      <span class="option-checkbox icon-checkbox-empty">
       [ahref][link][search]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][ahref]
      </span>
      Headings
     </li>
     <li class="toggle-redletter">
      <span class="option-checkbox icon-checkbox-empty">
       [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
      </span>
      Red Letter
     </li>
    </ul>
   </div>
   <div aria-hidden="true" aria-labelledby="passage-share-modal-label" class="modal bg-modal fade" id="passage-share-modal" role="dialog" tabindex="-1">
    <div class="modal-dialog">
     <div class="modal-content">
      <div class="modal-header">
       <h4 class="modal-title">
        Share
       </h4>
      </div>
      <div class="modal-body social-share">
       <ul class="share-modal-list">
        <li>
         [link]
         
        </li>
        <li>
         <a class="share-link share-link-twitter icon-twitter">
          Twitter
         </a>
        </li>
        <li>
         <a class="share-link share-link-facebook icon-facebook">
          Facebook
         </a>
        </li>
        <li>
         <a class="share-link-email icon-email">
          Email
         </a>
        </li>
       </ul>
      </div>
      <div class="bg-modal-button">
       <div class="standard-row">
        <div class="bg-modal-button-single-col">
         <a class="standard-btn bg-modal-close" data-dismiss="modal" type="button">
          Close
         </a>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="crossref-tooltip">
    <div class="title">
     Cross references
    </div>
    <div class="content">
     <div class="crossref-ref">
     </div>
     <div class="crossref-passage">
      <div class="tooltip-passage-content">
      </div>
     </div>
    </div>
   </div>
   <div class="footnote-tooltip">
    <div class="title">
     Footnotes
    </div>
    <div class="content">
    </div>
   </div>
   <div class="bibleref-tooltip">
    <div class="content">
     <div class="tooltip-passage-content">
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" class="modal bg-modal fade sub-modal sub-step-1" id="sub-step-1-modal" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
      </button>
      <h4 class="modal-title">
       Step 1 - Create an account or log in to start your free trial.
      </h4>
     </div>
     <div class="modal-body">
      <p>
       Starting your free trial of Bible Gateway Plus is easy. You’re already logged in with your Bible Gateway account. The next step is to enter your payment information. Your credit card won’t be charged until the trial period is over. You can cancel anytime during the trial period.<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
      </p>
      <p>
       Click the button below to continue.
      </p>
     </div>
     <div class="bg-modal-button">
      <div class="standard-row">
       <div class="bg-modal-button-single-col">
        <button class="standard-btn bg-modal-close" data-dismiss="modal" type="button">
         Next
        </button>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" class="modal bg-modal fade sub-modal sub-step-1" id="sub-step-1-prev-subscribed-modal" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[ahref][search]
       </span>
      </button>
      <h4 class="modal-title">
       Step 1 - Create an account or log in to start your subscription.
      </h4>
     </div>
     <div class="modal-body">
      <p>
       You’ve already claimed your free trial of Bible Gateway Plus. To subscribe at our regular subscription rate of $3.99/month, click the button below.
      </p>
     </div>
     <div class="bg-modal-button">
      <div class="standard-row">
       <div class="bg-modal-button-single-col">
        <button class="standard-btn bg-modal-close" data-dismiss="modal" type="button">
         Next
        </button>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" class="modal bg-modal fade sub-modal" id="sub-step-3-active-modal" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
      </button>
      <h4 class="modal-title">
       Already Subscribed
      </h4>
     </div>
     <div class="modal-body">
      <p>
       It looks like you’re already subscribed to Bible Gateway Plus! To manage your subscription, visit your
       [ahref]
       
       .
      </p>
     </div>
     <div class="bg-modal-button">
      <div class="standard-row">
       <div class="bg-modal-button-single-col">
        <button class="standard-btn bg-modal-close" data-dismiss="modal" type="button">
         Close this window
        </button>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" class="modal bg-modal fade sub-modal" id="plus-welcome-modal" role="dialog">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="close" data-dismiss="modal" type="button">
       <span aria-hidden="true">
        ×
       </span>
      </button>
      <h4 class="modal-title">
       Want to get the most out of Bible Gateway?
      </h4>
     </div>
     <div class="modal-body">
      <p>
       <li>[ahref]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>
      </p>
     </div>
     <div class="bg-modal-button">
      <div class="standard-row">
       <div class="bg-modal-button-single-col">
        <button class="standard-btn bg-modal-close" data-dismiss="modal" type="button">
         <a href="/plus?utm_source=bg&amp;utm_medium=popup&amp;utm_campaign=bgplus_popup_version18">
          Learn more today!
         </a>
        </button>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <div aria-hidden="true" aria-labelledby="nav-modal-label" class="modal fade" id="nav-modal" role="dialog" tabindex="-1">
   <div class="modal-dialog">
    <div class="modal-content">
     <div class="modal-header container">
      <div class="nav-modal-version col-xs-12 pull-left">
       <div class="modal-current" data-dismiss="modal">
        <span>
         Home<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link][search][ahref][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]
        </span>
        <span class="pull-right nav-open-icon icon-down-arrow">
         <li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search]<li>[ahref]</li>[link][search]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][ahref]<li>[search]</li><li>[ahref]</li><li>[search]</li>
        </span>
       </div>
      </div>
      <button aria-hidden="" class="close" data-dismiss="modal" type="button">
       ×
      </button>
     </div>
     <div class="modal-body">
      <ul class="main-nav-list">
       <li class="main-nav-dropdown-item">
        <a class="main-nav-level active" href="/">
         Home
        </a>
       </li>
       <li class="main-nav-dropdown-item">
        <span class="main-nav-level">
         Bible
        </span>
        <ul class="main-nav-sub-list">
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          <a class="main-nav-sub-level" href="/keyword/">
           Keyword Search
          </a>
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          [ahref]
          
         </li>
        </ul>
       </li>
       <li class="main-nav-dropdown-item">
        <span class="main-nav-level">
         Study<li>[ahref]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][ahref]<li>[search]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
        </span>
        <ul class="main-nav-sub-list">
         <li class="main-nav-sub-dropdown-item">
          [ahref]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          [ahref]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
        </ul>
       </li>
       <li class="main-nav-dropdown-item">
        <a class="main-nav-level" href="/app/">
         Apps
        </a>
       </li>
       <li class="main-nav-dropdown-item shop-nav">
        <span class="main-nav-level">
         Store[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search]
        </span>
        <ul class="main-nav-sub-list">
         <li class="main-nav-sub-dropdown-item">
          [ahref]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          <a class="main-nav-sub-level" href="/page/tcg/biblegateway/bg-bibles?p=1182476" onclick="_gaq.push(['_trackEvent', 'CBD Nav Link', 'click', 'printbibles']);">
           Bibles
          </a>
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          <a class="main-nav-sub-level" href="/?p=1182478" onclick="_gaq.push(['_trackEvent', 'CBD Nav Link', 'click', 'more']);">
           More
          </a>
         </li>
        </ul>
       </li>
       <li class="main-nav-dropdown-item login-mobile-menu">
        <span class="main-nav-level">
         My Account
        </span>
        <ul class="main-nav-sub-list">
         <li class="main-nav-sub-dropdown-item">
          <a class="main-nav-sub-level" href="/user/products/">
           My Library
          </a>
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
         <li class="main-nav-sub-dropdown-item">
          [link]
          
         </li>
        </ul>
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div class="subscription-step-1 hidden">
   <div class="title">
    Step 1 - Create an account or log in to start your free trial.
   </div>
   <div class="login-text">
    <p>
     Three easy steps to start your free trial subscription to Bible Gateway Plus.[ahref][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li>[ahref]<li>[search]</li><li>[link]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
    </p>
    <ol>
     <li>
      Create or log in to your Bible Gateway account.
     </li>
     <li>
      Enter your credit card information to ensure uninterrupted service following your free trial.
     </li>
     <li>
      Begin reading God's Word ad-free with instant access to your new online study library.
     </li>
    </ol>
    <div>
     [ahref]
     
    </div>
   </div>
  </div>
  <div class="bg-popup">
   <div class="bg-popup-header">
    <span class="bg-popup-header-text">
    </span>
    <div class="close icon-close">
    </div>
   </div>
   <div class="bg-popup-content">
   </div>
  </div>
  <noscript>
  </noscript>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0457
  </b>
 </body>
</html>
