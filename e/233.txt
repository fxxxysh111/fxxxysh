--->|RGV2ZWxvcGVkIGF0IEJpb1dhcmUncyBzdHVkaW8gaW4gQXVzdGluLCBUZXhhcywgVGhlIE9sZCBSZXB1YmxpYyBrZXB0IG1pc3NpbmcgcmVsZWFzZSBkYXRlcywgZ3JhZHVhbGx5IHNsaXBwaW5nIGZyb20gMjAwOSB0byAyMDEwIHRvIDIwMTEuIApUcmFpbmluZyBjYXVzZXMgdGhlIGFyYWNoYWRvbmljIGFjaWQsIGEgcHJlY3Vyc29yIGZvciBwcm9zdG9nbGFuZGlucywgdG8gYmUgcmVsZWFzZWQgd2hpY2ggaW5pdGlhdGVzIHRoZSBpbmZsYW1tYXRvcnkgcmVzcG9uc2UgdGhhdCB0YWtlcyBhIGZldyBkYXlzIHRvIHNldHRsZS4uIApTZWNvbmRseSwgZXZlbiBpZiBvbmUgd2FzIGdvaW5nIGZvciBhIGNhcHB1Y2Npbm8sIHdlIGhhdmUgc3VjaCBhIHRocml2aW5nIGNhZmUgY3VsdHVyZSBib3RoIGluIHRoZSBDQkQgYW5kIHRoZSBzdWJ1cmJzIHRoYXQgeW91IHNob3VsZCBuZXZlciByZWFsbHkgYmUgYSkgY2F1Z2h0IGluIGEgNy8xMSBnZXR0aW5nIGEgJDEgY29mZmVlIGFuZCBiKSBmaW5kIHlvdXJzZWxmIHN0YXJ2ZWQgZm9yIGNvZmZlZS4KRGUgbGEgbW1lIGZhb24sIHVuIGFuaW1hbCBlc3QgdW5lIGNob3NlIHF1aSBhIHVuIHByaXguIApJIHdhcyB3b3JraW5nIGZvciBvbmUgcGFydGljdWxhciBjbGllbnQgdGhhdCBpcyBub3cgZGVmdW5jdCBJIGNhbWUgYWNyb3NzIGZsYXNoIGZyb3plbiBkYXJrLCBsZWFmeSBncmVlbiBwcm9kdWN0LiBJIG5ldmVyIHNlZW4gYW55dGhpbmcgbGlrZSBpdC4gClRoZSBuZXdzIGRvZXNuJ3Qgc3F1YXJlIHdpdGggRXJpYyBQYWRkb2NrJ3MgaW1hZ2Ugb2YgaGlzIG9sZGVyIGJyb3RoZXIsIGhlIHRvbGQgcmVwb3J0ZXJzIE1vbmRheSAgIGEgcG9rZXIgcGxheWluZyBhY2NvdW50YW50IGFuZCByZWFsIGVzdGF0ZSBpbnZlc3RvciB3aXRoIG5vIGFwcGFyZW50IHBvbGl0aWNhbCBvciByZWxpZ2lvdXMgYWZmaWxpYXRpb24sICJhcyBmYXIgYXMgSSBrbm93LCIgaGUgaGFzdGVuZWQgdG8gYWRkLgpJZiB0aGV5IGhhdmUgYW4gYWJvdmUgYXZlcmFnZSBjaGFuY2UgICB0aGV5IHdpbGwgaW5pdGlhdGUgYW4gYW1idXNoLgpIb3dldmVyIHRoZXkgYXJlIG5vdCBnb2luZyB0byBidXN0IGEgZGV0ZXJtaW5lZCB0ZWFtLCBhbmQgaWYgdGhleSBkbywgdGhleSByZWFsbHkgY2Fubm90IGRvIG11Y2ggYWNjZXB0IGNsb3NlIGFjY291bnRzIGFuZCBwZXJoYXBzIHNlaXplIHdvbiBtb25leS4gCkxvY2t3b29kIGFsc28gaGFkIGFjY3VzZWQgcmVndWxhdG9ycyBvZiBhYnJ1cHRseSBjaGFuZ2luZyB0aGVpciB2aWV3IG9mIHRoZSBnYW1lcyBhZnRlciBHb3YuIFJpY2sgU2NvdHQgYW5kIHRoZSBTZW1pbm9sZSBUcmliZSBzaWduZWQgYSBwcm9wb3NlZCAkMyBiaWxsaW9uIGdhbWJsaW5nIGRlYWwgaW4gRGVjZW1iZXIuIFRoZSBkZWFsIHdhcyBuZXZlciBhcHByb3ZlZCBieSB0aGUgTGVnaXNsYXR1cmUgYW5kIG5ldmVyIHdlbnQgaW50byBlZmZlY3QuIFRoZSBkZXNpZ25hdGVkIHBsYXllciBnYW1lcyBhcmUgYWxzbyBhbiBpc3N1ZSBpbiBhIGxhd3N1aXQgYmV0d2VlbiB0aGUgdHJpYmUgYW5kIHRoZSBzdGF0ZSBvdmVyIGJhbmtlZCBjYXJkIGdhbWVzLiBBIGZpdmUgeWVhciBkZWFsIGdpdmluZyB0aGUgdHJpYmUgZXhjbHVzaXZlIHJpZ2h0cyB0byBvcGVyYXRlIGJhbmtlZCBnYW1lcyBleHBpcmVkIGxhc3Qgc3VtbWVyLCBwcm9tcHRpbmcgdGhlIGxhd3N1aXQuCllvdW5nIGNoaWNrcyBkZXNlcnZlIHlvdW5nIGR1ZGVzOyB0aGUgZXggaXMgb25seSBzY3Jld2luZyBoZXIgb3duIHNlbGYgb3ZlciBpbiBldmVyeSB3YXkgcG9zc2libGUgaW4gZXZlcnkgc3RhZ2Ugb2YgbGlmZS4uIApWZXJ5IGltcHJlc3NpdmUgdGhhdCB0aGUgZ292ZXJubWVudCB3YXMgYWJsZSB0byBnaXZlIE9udGFyaW8gc3VjaCBhIHF1aWNrIHR1cm5hcm91bmQuIApEJ2FpbGxldXJzLCBqJ2FpIHB1IHJlY29ubmF0cmUgbGUgY2hpZW4gcXVlIGonYWkgdnUgZW4gYWN0aW9uIChjaGFxdWUgY2hpZW4gYSB1bmUgcmNvbXBlbnNlLCBjZWx1aSBxdWUgaidhaSB2dSBhdmFpdCB1bmUgYmFsbGUgcG91ciBqb3VlcikuIElsIGZhdXQgcmVjb25uYXRyZSBxdWUgbGVzIHRlc3RzIHNvbnQgYXNzZXogaW50cmVzc2FudHMsIGV0IGwnZWZmaWNhY2l0IGRlcyBjaGllbnMgc3VycHJlbmFudGUuIApDYXNlIGluIHBvaW50OiBUaGlzIHdhcyBvbmUgb2YgdGhlIGRlYnV0IGxvY2F0aW9ucyBvZiBGcmVlIEJldCwgYSBibGFja2phY2sgZGVyaXZhdGl2ZSB0aGF0IG9mZmVycyBwbGF5ZXJzIGdlbmVyb3VzIG9wdGlvbnMgdG8gaW5jcmVhc2UgdGhlaXIgd2lubmluZ3MgaW4gZXhjaGFuZ2UgZm9yIHRpZXMgd2hlbiB0aGUgZGVhbGVyIGdldHMgMjIgKGFzIG9wcG9zZWQgdG8gcmVndWxhciBibGFja2phY2ssIGluIHdoaWNoIGEgMjIgd291bGQgbWVhbiBhIGRlYWxlciBidXN0IGFuZCBhIHdpbiBmb3IgdGhlIHBsYXllcnMpLgpJZiBJIGhhZCBtb3JlIHN1cHBvcnQgdGhpbmdzIG1pZ2h0IGJlIGJldHRlciwgYnV0IG9oIHdlbGwuRWRpdDI6IEhvdyB3ZSBrbm93IHRoYXQgaXQgd2FzIG5vdCBhIGxlYWsuIFdlIGhhdmUgZGV0YWlscyByZWxlYXNlZCBwdWJsaWNseSBvbiB0aGUgaGFjayBhbmQgaG93IGl0IHdhcyBjb21taXR0ZWQuIFZlcnkgaW50ZXJlc3RpbmcgaWYgeW91IGFyZSBhdCBhbGwgaW50byBjeWJlciBzZWN1cml0eUZpcnN0IG9mZiwgQ3Jvd2RTdHJpa2UsIHRoZSBjb21wYW55IHRoZSBETkMgYnJvdWdodCBpbiB0byBpbml0aWFsbHkgaW52ZXN0aWdhdGUgYW5kIHJlbWVkaWF0ZSB0aGUgaGFjaywgYWN0dWFsbHkgc2hhcmVkIGltYWdlcyBvZiB0aGUgRE5DIHNlcnZlcnMgd2l0aCB0aGUgRkJJLiAKSSB0aGluayB0aGlzIGlzIGEgY3JpdGljYWwgZGlzdGluY3Rpb24sIGFuZCB3aGF0IGdldHMgbG9zdCB3aGVuIHRoZSBpZGVhIG9mIHN0dWR5aW5nIFdlc3Rlcm4gQ2l2aWxpemF0aW9uIGlzIHRyZWF0ZWQgYXMgdHJ5aW5nIHRvIGVtdWxhdGUgdGhlIEdyZWVrIGFuZCBSb21hbiBzb2NpZXRpZXMsIHJhdGhlciB0aGFuIGNhcnJ5aW5nIG9uIHRoZSB0cmFkaXRpb24gb2YgZGViYXRlIGFuZCByaGV0b3JpYyB3ZSBnZXQgZnJvbSByZWFkaW5nIHRoZW0uCjEwMCBwbGFzdGljIHBsYXlpbmcgY2FyZHMgYXJlIHVzZWQgb24gdGhlIHdvcmxkIHBva2VyIHRvdXIgeW91IHdhdGNoIG9uIHRlbGV2aXNpb24uIFBybyBwb2tlciBwbGF5ZXJzIGxpa2UgdGhlIGNyaXNwIGZlZWwgb2YgdGhlc2UgY2FyZHMgYW5kIHRoZXkgYXJlIGdyZWF0IGZvciB0aGVzZSBoaWdoIHN0YWtlcyBnYW1lcyB3aGVyZSBuZXJ2b3VzIHBsYXllcnMgY2FuIGRhbWFnZSBhIGNhcmQuIApUaGluayBvZiBTYW5keSBIb29rIGFzIGEgdGhlYXRyaWNhbCBwcm9kdWN0aW9uICAgYSBHcmVlayBUcmFnZWR5IGlmIHlvdSBsaWtlLCB3aGVyZSBhbGwgdGhlIGFjdGlvbiB0YWtlcyBwbGFjZSBvZmYgc3RhZ2UuIApJbiBhIGxpdmUgcG9rZXIgZ2FtZSB3aGVyZSBwbGF5ZXJzIGdldCB0byBwbGF5IGZhY2luZyBlYWNoIG90aGVyLCB0aGUgcG9rZXIgbW9uZXkgYXJlIGNvbnZlcnRlZCBlYXNpbHkgZnJvbSBjYXNoIHRvIGNoaXBzIGFuZCB2aWNlIHZlcnNhIG9uIGNvdW50ZXJzIHByb3ZpZGVkIGluIHRoZSBjYXNpbm8uCkltIHNheWluZyB0aGUgc291cmNlIGlzIGFscmVhZHkgYSBwcm92ZW4gbGlhciBpbiByZWdhcmRzIHRvIGNsaW1hdGUgY2hhbmdlIGRhdGEuIFNvIGV2ZW4gb24gYSBiZW5pZ24gY29uY2x1c2lvbiwgSSBzdGlsbCBkb250IHRydXN0IGl0LiBOb3QgdG8gbWVudGlvbiB0aGF0IHRoZSBzY2llbnRpZmljIG1ldGhvZCBkaWN0YXRlcyB0aGF0IGlzIGhvdyBhbGwgc2NpZW50aWZpYyBzdHVkaWVzIHNob3VsZCBiZSBhcHByb2FjaGVkLiB3aXRoIHNrZXB0aWNpc20gYW5kIGFuIGludGVudCB0byBkaXNwcm92ZSB0aGVtLgpBcyBhIHJlc3VsdCwgcGVvcGxlIHRlbmQgdG8gbGVhdmUgaXQgb3V0IHRoZXJlLCB0aGF0IHRoZSAxMDYwIGZvciB0aGlzIGdlbiBpcyBzaWduaWZpY2FudGx5IGZhc3RlciwganVzdCBzbyB0aGF0IHRoZXkgbWlnaHQgdGFrZSB0aGF0IGludG8gY29uc2lkZXJhdGlvbi4KQSkgeW91IHNob3VsZG4gc3RvcCBiZWluZyBpbnRpbWF0ZSB3aXRoIHNvbWVvbmUgdG8gdGV4dCBzb21lb25lIGJhY2ssIG5vIG1hdHRlciB3aG8gdGhleSBhcmUuIHRoZSB3aG9sZSBwb2ludCBvZiB0ZXh0aW5nIGlzIHRvIGhhdmUgYSBjb252ZXJzYXRpb24gYXQgYSBzbmFpbHMgcGFjZSBzbyB0aGF0IHlvdSBjYW4gcmVwbHkgdG8gdGhlbSBhdCB5b3VyIG93biBjb252ZW5pZW5jZS4KSGF2ZSB5b3UgdHJpZWQgQmlyY2hlciBNdWVzZWxpPyBJdCBvYXRzLCBJIGtub3csIGJ1dCB3aXRoIGVub3VnaCBvdGhlciBzdHVmZiBpdCBtaWdodCBrZWVwIHlvdSBmdWxsIGxvbmdlci4gClVubGVzcyB5b3VyIGRhdGUgaXMgdGhlIGZpcnN0IHNob3csIHBlb3BsZSB3aWxsIGJlIHBvc3Rpbmcgc2V0bGlzdHMgb25jZSB0aGUgdG91ciBzdGFydHMgc28geW91J2xsIGtub3cgZm9yIHN1cmUgdGhlbi4gQWxzbyBtYWtlIHN1cmUgaGVyIHBob25lIGlzIGZ1bGx5IGNoYXJnZWQgYmVmb3JlIHRoZSBzaG93LiAKUHJpb3IgdG8gam9pbmluZyB0aGUgY2FzaW5vIGluIDE5OTksIHRoZSB0YXhwYXllciB3YXMgYSBmdWxsIHRpbWUgZmluYW5jaWFsIGFkdmlzZXIgd2hvIHNvbGQgbXV0dWFsIGZ1bmRzIGFuZCBsaWZlIGluc3VyYW5jZS4gT25jZSBoZSBiZWdhbiB3b3JraW5nIGF0IHRoZSBjYXNpbm8sIGhlIHRyYW5zaXRpb25lZCB0byBwYXJ0IHRpbWUgYWR2aXNvcnkgd29yay4KSXMgZG9lcyBub3Qgc2F5IHRoYXQgdGhlIHdvdW5kIHdhcyBwaHlzaWNhbC4gCklmIE1heXdlYXRoZXIgcmVhbGx5IGhhZCBwaWxsb3cgaGFuZHMsIHRoZXkgd291bGQgYWxsIHJ1c2ggaGltLk9uZSBjYW4gc3VyZWx5IGRpc2FncmVlIHdpdGggZXZlcnkgd29yZCBJIGhhdmUgd3JpdHRlbiwgYXMgaXMgdGhlaXIgcmlnaHQuIE91ciBoZXJvZXMgd2lsbCBiZSBvdXIgaGVyb2VzIGJlY2F1c2Ugd2hhdCB0aGV5IGRvIGlzIGludGFuZ2libGUgYW5kIHBlcnNvbmFsIHRvIHVzLiBJdCBpcyBhIGZlZWxpbmcgYW5kIHRvIGVhY2ggaXQgaXMgbGVnaXRpbWF0ZS4gClRoZSBiZXR0ZXIgdGhlIHN0b3J5LCB0aGUgYmV0dGVyIHRoZSB0cmFkZS4uIApGb3IgZXhhbXBsZSwgYSBsb3Qgb2Ygc2ltcGxpZmljYXRpb25zIGZyb20gUElPIHJlY29tbWVuZCBnb2luZyB3aXRoIGEgcmFuZ2UgY2hlY2sgb3IgcmFuZ2UgYmV0ICgxLzMgcG90KSBzdHJhdGVneSBpbiAzQlAgT09QIENCZXQuIEFuZCB5b3UgaGF2ZSB0byBhZGhlcmUgdG8gdGhpcyBzdHJhdGVneSBwbGF5aW5nIDUwMCA3NTAgaGFuZHMvaHIgb25saW5lIGJlY2F1c2UgeW91IGdvaW5nIHRvIGhhdmUgZG96ZW5zIG9mIDNCUCBPT1AgQ0JldCBvcHBvcnR1bml0aWVzIHdpdGhpbiBhIGNvdXJzZSBvZiBhIG11bHRpdGFibGluZyBzZXNzaW9uIGFuZCB0aGUgZXZlbiB0aGUgYmFkIHJlZ3MgYXJlIGRlZmluaXRlbHkgZ29pbmcgdG8gbm90aWNlIGlmIHlvdSBkZXZpYXRlIGluIHlvdXIgZnJlcXVlbmNpZXMgYW5kIHNpemluZ3MuLiAKVGhlIHBpbGwgbWlsayBwcm9ibGVtIHdhcyByZXNwb25kZWQgdG8gYnkgZXh0ZW5zaXZlIGFuZCBvdmVybHkgaGFyc2ggcmVndWxhdGlvbi4gCkluIE9ybGFuZG8sIHRoYXQgbWVhbnMgeW91IGdldCB0byBzaGFyZSB0aGUgcm9hZCB3aXRoIHRoZSBmb2xsb3dpbmcgZHJpdmVyczogbG9zdCB0b3VyaXN0cyB3aG8gZHJpdmUgbGlrZSBzaGl0IGluIHRoZSBmaXJzdCBwbGFjZSwgZm9yZWlnbmVycyB3aG8gZHJpdmUgbGlrZSB0aGV5IHN0aWxsIGluIHRoZWlyIGhvbWVsYW5kLCB5dXBwaWUgYXNzaG9sZXMgd2hvIGFyZSB0aGUgbW9zdCAiaW1wb3J0YW50IHBlb3BsZSBpbiB0aGUgd29ybGQiLCBnYW5nc3RhIHdhbm5hYmVlcyB3aG8gaGF2ZSBzZWVuICJGYXN0IEZ1cmlvdXMiIHdheSB0b28gbWFueSB0aW1lcywgYW5kIGVsZGVybHkgcmV0aXJlZXMgd2hvIHNob3VsZCBoYXZlIGhhZCB0aGVpciBsaWNlbnNlcyByZXZva2VkIGxvbmcgYWdvLgpUaGUgVVNBIGlzIGEgZmx1Y3R1YXRpbmcgY291bnRyeSwgaXQgaGFzIGhhZCB0aW1lcyB3aGVyZSB0aGUgc3VwZXIgcmljaCBoYXZlIGRvbWluYXRlZCBhbmQgdGltZXMgd2hlcmUgdGhlIG1pZGRsZSBjbGFzcyBleHBsb2RlZC5JIGRvbid0IHRoaW5rIHRoZSBVU0EgY291bGQgZXZlciBjb2xsYXBzZSBiYWNrIHRvIGEgcG9pbnQgd2hlcmUgaXQgaWdub3JlcyB0aGUgbG93ZXIgY2xhc3MgdG8gZGllLiAKSGFyZCB0byBjb21wYXJlIHRvIHlvdXIgY2FzZSwgYXMgeW91cnMgc2VlbXMgbXVjaCBtb3JlIHNldmVyZSBjb25zaWRlcmluZyBiaXBvbGFyLiBCYXNlZCBvbiBteSBiZWhhdmlvdXIgc29tZXRpbWVzIEkgZ3Vlc3MgSSBjb3VsZCBjYWxsIG15c2VsZiBhIG1pbGQgYmlwb2xhci4gClBhcmVudHMgVGVsZXZpc2lvbiBDb3VuY2lsCkJlIGF0IHRoZSBuZXQgaWYgeW91IG5vdCBnb29kIGF0IHRoZSBuZXQgb25lIGlzIHBhcnRuZXJzIHdobyBURUxMIHlvdSB3aGF0IHRvIGRvLCBhbmQgdGhlbiBpZiB5b3UgZG9uIGRvIGl0IGFuZCBtdWNrIHVwIHRoZXkgc2F5IGRpZCBJIHRlbGwgeW91PyBJIGtub3cgd2hhdCB5b3Ugc2FpZCwgSSBqdXN0IGRvbiB0YWtlIG9yZGVycy4gClRoZSBuYXR1cmFsIGhpc3Rvcnkgb2YgYSBsdW1iYXIgaGVybmlhIG9mIHRoZSBudWNsZXVzIHB1bHBvc3VzIChITlApIGlzIG5vdCBmdWxseSBrbm93biBhbmQgY2xlYXIgaW5kaWNhdGlvbnMgZm9yIG9wZXJhdGl2ZSBpbnRlcnZlbnRpb24gY2Fubm90IGJlIGVzdGFibGlzaGVkIGZyb20gdGhlIGxpdGVyYXR1cmUuIFNldmVyYWwgc3R1ZGllcyBoYXZlIHNob3duIHRoYXQgdGhlIGxhcmdlc3QgZGlzY3MgYXBwZWFyIHRvIGhhdmUgdGhlIGdyZWF0ZXN0IHRlbmRlbmN5IHRvIHJlc29sdmUuIApJIHRoaW5rIHRoZSBwb2ludCBvZiBPUCBwb3N0IHdhcyB0byBldmFsdWF0ZSB0aGUgdmFsdWUgb2YgdGhlIHNtYWxsZXIgY29tcGFuaWVzLCBob3BpbmcgZm9yIGEgZGV0YWlsZWQgYmFsYW5jZSBzaGVldCBvZiB0aGVpciBhc3NldHMgY29tYmluZWQuIERvZXMgdGhpcyB2YWx1ZSA9ICQxVD8KSW4gdGhlIHdvcnN0IGNhc2VzLCBwZW9wbGUgY29tbWl0IHN1aWNpZGUgZnJvbSB0aGUgZXh0cmVtZSBwYWluLiAKV2hhdCBkbyB5b3UgdGhpbmsgaXMgZWFzaWVyLCBwaWVyY2luZyBza2luLCBmbGVzaCBhbmQgYm9uZSwgb3IgdGhyb3dpbmcgYSB0aW55IDMgb3VuY2UgZHJvbmUgMzAgZmVldCBiYWNrd2FyZHM/SW0gc3VyZSBpdCB3b3VsZCBzdGlsbCBodXJ0IGFuZCB5b3VkIGdldCBidXJuZWQsIGJ1dCBJIGRvbnQgdGhpbmsgaXQgY291bGQga2lsbCB5b3UuRURJVDogTG90dGEgcGVvcGxlIGdydW1weSBhYm91dCB0aGlzLiAKQWxtb3N0IGFsbCBjbGFyaW5ldHMgdGhlc2UgZGF5cyBhcmUgbWFkZSB3aXRoIGEgZmluZ2VyaW5nIHN5c3RlbSBjYWxsZWQgdGhlICdCb2VobSBTeXN0ZW0nLiBJdCBpcyBlc3NlbnRpYWwgdGhhdCB5b3UgYnV5IG9uZSBvZiB0aGVzZSBhbmQgbm90IGFuIEFsYmVydCBTeXN0ZW0gb3IgU2ltcGxlIFN5c3RlbSBjbGFyaW5ldC4gU3VjaCBzeXN0ZW1zIGFyZSBleHRyZW1lbHkgcmFyZSBpbiBuZXcgY2xhcmluZXRzIGJ1dCByZWFzb25hYmx5IGNvbW1vbiBpbiBvbGQgc2Vjb25kIGhhbmQgb25lcyBpbiB0aGUgVVMsIHNvIGJld2FyZSEKU28gbm93IDMgbW9udGhzIGxhdGVyLCBJIGdvaW5nIHdpdGggaGVyIHRvIG15IGJhbmsgdG8gcmVmaW5hbmNlIHRoZSBsb2FuIGFuZCBnZXQgaGVyIGludG8gYSBtdWNoIGJldHRlciBsb2FuIGJlZm9yZSBzaGUgZ2V0cyBwaXNzZWQgYW5kIHdpcGVzIG91dCBoZXIgc2F2aW5ncyB0byBwYXkgaXQgb2ZmIGJlY2F1c2Ugc2hlIGhhdGVzIGludGVyZXN0IHBheW1lbnRzIGxpa2Ugbm8gcGVyc29uIGl2ZSBldmVyIG1ldC4gClNoZSBvdXRsaXZlZCB0d28gbGlmZSBwYXJ0bmVycyBCaWxsIChCYW5ub24pIGFuZCBCcmlhbiAoUGF0ZXJzb24pIGFuZCBvbmUgc3RlcGNoaWxkIEVsYWluZSB3aG8gc2hlIGxvdmVkIGRlZXBseSBhbmQgb25lIHNvbiBpbiBsYXcgVGltIFdhZGUgd2hvIHdhcyBoZXIga25pZ2h0IGluIHNoaW5pbmcgYXJtb3VyIGFzIGhlIHdhcyBoZXIgZml4IGl0IG1hbi4gCk1hbnkgcGxheWVycyBhcmUgZ3JlYXQgYXQgYnVsbHlpbmcgb3RoZXIgcGxheWVycyBpbnRvIHN1Ym1pc3Npb24sIGJ1dCB0aGV5IG9mdGVuIGZhbGwgc2hvcnQgd2hlbiB0aGV5IHJlYWQgdGhlIGdhbWUgd3JvbmcuIApOb3cgYWxsIG9mIGEgc3VkZGVuIGhlIHdhbnRzIG1vcmUgdGltZSwgd2hlbiBoZSBpcyBub3cgcmVzcG9uc2libGUgZm9yIDIgbW9yZSBwZW9wbGUuICh0aGUgZ2lybGZyaWVuZCBhbmQgaGVyIHNvbikuIApUYWtlIHRpbWUgdG8gbGlzdGVuIHRvIHlvdXIgaGVhcnQgYmVhdCBhcyB5b3UgdGFrZSBhIHN0ZXAuIElmIHlvdSBjYW4gaGVhciBpdCwgdXNlIGEgc3RldGhvc2NvcGUuLiAKT3ZlcnZpZXcgZm9yIGNvbnJhZDE0MQpUaGVuIGZvciBzb21lIG90aGVyIGZhbWlseSBtZW1iZXJzIEkgbWFkZSB0aGVzZSBvdmVucyB3aXRoIGEgbGl0dGxlIHN1cnByaXNlIGluIHRoZW0uIApTdGlsbCwgdGhlcmUncyBzb21ldGhpbmcgaW4gdGhlIGh1bWFuIHBzeWNoZSB0aGF0IGxvdmVzIHRvIHRha2UgYSBjaGFuY2UuIEl0J3Mgb25lIG9mIHRoZSB0cmFpdHMgdGhhdCBzZXRzIG91ciBtaW5kcyBhcGFydCBmcm9tIHRoZSBhcnRpZmljaWFsIG1pbmRzIG9mIG1hY2hpbmVzLiBOb3csIGlmIHlvdXIgcG9rZXIgZ2FtZSBpc24ndCB3aGVyZSB5b3Ugd2FudCBpdCB0byBiZSwgYW5kIHlvdSdkIGxpa2Ugc29tZSBwcmFjdGljZSBpbiBhIGZ1biB3YXksIHRoZXJlJ3MgYSB2ZXJ5IGVhc3kgdG8gdXNlIHdlYnNpdGUgdGhhdCB3ZSB0aGluayBpcyB1cCB5b3VyIGFsbGV5LiBUaGlzIGlzIHRoZSBQb2tlciA1IENhcmRzIHdlYnNpdGUuCkkgc3VnZ2VzdCBqdXN0IGdvaW5nIGFsbCBpbiByaWdodCBhd2F5LCBhbGwgeW91IGhhdmUgdG8gZG8gaXMganVzdCBnZXQgb25lIG9wcG9uZW50IG91dCBpbiBlYWNoIGxvY2F0aW9uLiBUaGlzIGlzIGRvbmUgYnkgbWFraW5nIGFuIG9wcG9uZW50IGdvIGFsbCBpbiBhbmQgeW91IHdpbmluZyB0aGUgYmlnIHBvdCBvZiBjaGlwcy4gTm90IG11Y2ggb2YgYSBwdW5pc2htZW50IGlmIHlvdSBsb29zZSB0aGUgcm91bmQuIApJdCBkaWRuIG1hdHRlciwgbm90IHlldCwgYXMgdGhlIHN0aWxsIHN0b2ljIGd1YXJkIGJlaGluZCBoaW0gbWFkZSBpdCBjbGVhci5CZXlvbmQgdGhhdCwgdGhlcmUgd2VyZSBubyBtb3JlIHRyaWNrcy4gCkZsdWZmeUhhZ2dpcyB1CkZyb20gdGhlIG1lc3NhZ2UgeW91IHJlbGF5ZWQsIGhlIHNvdW5kcyBnZW51aW5lLiBJIGZlZWwgYmFkIGZvciB0aGUga2lkIGFuZCB3aXNoIGhlJ2QgcmVhY2hlZCBvdXQgdG8gaGlzIGRhZCB3aGlsZSBoZSB3YXMgc3RpbGwgYWxpdmUuIAogOSBwb2ludHMgIHN1Ym1pdHRlZCAxNyBob3VycyBhZ29XaGVuIEkgd2FzIGFib3V0IDQgb3IgNSBteSBmYW1pbHkgd2FzIG9uIHZhY2F0aW9uIGluIEZMIGFuZCBJIGdvdCBhIHNpbHZlciBkb2xsYXIgZnJvbSBzb21lIGd1eSBvbiB0aGUgYmVhY2gsIHR1cm5lZCBvdXQgdG8gYmUgdGhlIG9wZW5pbmcgZm9yIGEgcGl0Y2ggdG8gY29tZSBoZWFyIGFib3V0IHRpbWUgc2hhcmVzLiAKTm9ib2R5IGdpdmVzIGEgc2hpdCBhYm91dCB0aGUgcGVyc29uYWwgYmVsaWVmcyBvZiB0aGUgaWRpb3RzIHN1cHBvcnRpbmcgc29tZXRoaW5nLiBPZiBjb3Vyc2UgcGVvcGxlIHdpbGwgYWx3YXlzIGJlbGlldmUgdGhhdCB3aGF0IHRoZXkgc3VwcG9ydCBpcyBncmVhdC4gClRoZSBjYXNpbm8gYWxzbyBoYXMgYSByZXdhcmRzIHByb2dyYW0gdGhhdCBwYXJ0bmVycyB3aXRoIHRlbiBkb3dudG93biByZXN0YXVyYW50cywgaW5jbHVkaW5nIEJvY2EsIEplYW4gUm9iZXJ0J3MgVGFibGUsIE1haG9nYW55J3MgYXQgdGhlIEJhbmtzLCBNZXRyb3BvbGUsIE1vZXJsZWluIExhZ2VyIEhvdXNlLCBNb250Z29tZXJ5IElubiBCb2F0aG91c2UsIE5hZGEsIFNvdHRvLCBOaWNvbGEncyBSaXN0b3JhbnRlIEl0YWxpYW5vIGFuZCBWaWEgVml0ZS4KTWVhbndoaWxlLCB0aGUgd2Vha2VyIHllbiBhbHJlYWR5IGlzIGhlbHBpbmcgSmFwYW5lc2UgY29tcGFuaWVzIGluY3JlYXNlIHRoZWlyIHByaWNlIGNvbXBldGl0aXZlbmVzcywgYW5kIGl0IGlzIGJvb3N0aW5nIHRoZSB2YWx1ZSBvZiBjb3Jwb3JhdGUgcHJvZml0cywgbm90ZXMgS2ljaGlrYXdhLiBCdXQgdGhvc2Ugc2hvcnQgdGVybSBjb25zZXF1ZW5jZXMgbXVzdCBiZSBmb3J0aWZpZWQgd2l0aCBsb25nZXIgdGVybSBjaGFuZ2VzIHRvIHN1c3RhaW4gZ3Jvd3RoLCBBZGFjaGkgYW5kIE9iYXRhIGNvbnRlbmQuIApGb3IgZXhhbXBsZSwgd2hhdCBpZiBMZWFndWUgb2YgbGVnZW5kcyB3ZXJlIHRvIHVubG9jayBhbGwgY2hhbXBpb25zIGZyZWUgb2YgY2hhcmdlIGFuZCBhbGxvd2VkIGZvciB0aGUgcHVyY2hhc2Ugb2Ygc2tpbnMgd2l0aCB0aGUgaW4gZ2FtZSBmcmVlIGN1cnJlbmN5LCBhbmQgd2FzIGFibGUgdG8gYWZmb3JkIGRvaW5nIHRoZXNlIHRoaW5ncyBmb3IgcGxheWVycyBieSBvZmZlcmluZyBvcHQgaW4gYmFubmVyIGFkcyBvbiBtZW51cyBhbmQgbG9hZGluZyBzY3JlZW5zIHdpdGggcmV3YXJkcyBmb3IgcGVvcGxlIHdobyBhcmUgd2lsbGluZyB0byBzdXBwb3J0IHRoZSBnYW1lIGluIHRoYXQgd2F5PwpBcnRpY2xlIG9uIEVsZWN0aXZlIENlc2FyZWFuczogU29tZSBUaG91Z2h0cyBXZWxjb21lIHRvIE15IE5ldyBIb3VzZSBMZWFybmluZyBTcXVhcmVTcGFjZSBJJ20gT2ZmZW5zaXZlLiAKU28gZm9yIGluc3RhbmNlIFE4cyBvbiBKOTQgYmRmZCB0aGVyZSBhIGhpZ2ggaW5jZW50aXZlIHRvIGNoZWNrIGJhY2suIApWZW5zdGFyICA1IHBvaW50cyAgc3VibWl0dGVkIDExIGRheXMgYWdvCkxBT1Agc29uJ3MgYWN0aW9ucyBjb3VsZCBoYXZlIHJ1aW5lZCB0aGUgeW91bmcgd29tYW4ncyBsaWZlIChhbmQgaXQgaXMgbGlrZWx5IHNoZSB3aWxsIGhhdmUgYmVlbiBlbW90aW9uYWxseSBkYW1hZ2VkIGZyb20gdGhpcyBpbmNpZGVudCkgc28gSSBkb24ndCByZWFsbHkgY2FyZSBhYm91dCBoaXMgY29uc2VxdWVuY2VzLiBJIGFtIGltcHJlc3NlZCB3aXRoIHRoZSB5b3VuZyB3b21hbiB0byBiZSBzdHJvbmcgZW5vdWdoIHRvIHJlcG9ydCBoaW0gYmVjYXVzZSBsZXQncyBub3Qga2lkIG91cnNlbHZlcyBoZXJlLCB3b21lbiBhcmUganVzdCBleHBlY3RlZCB0byBpZ25vcmUgdGhpcyBzdHVmZiwgZXNwZWNpYWxseSBjb25zaWRlcmluZyBtYW55IHdvdWxkIGNvbnNpZGVyIHRoYXQgc2luY2Ugbm90aGluZyB3YXMgcmVsZWFzZWQgcHVibGljbHkgc2hlIGhhcyBubyAiZGFtYWdlcyIuIApIZXIgd2lubmluZ3MgYWRkIHVwIHRvICQxLDI4NSw0MTcuIApUaGVuIGZlZWwgZnJlZSB0byBzZW5kIG1lIG9uZSBvciB0d28gcmVzZWFyY2ggcGFwZXIgdGhhdCBhdCBsZWFzdCBhcmd1ZXMgYWdhaW5zdCBUdXJraXNoIG5hcnJhdGl2ZS4gCldoYXQgd2lsbCB5b3UgZW5kIHVwIHdpdGggaWYgeW91IGJ1eSBpbj8gTGVzcyBtb25leSBhbmQgYSBsb3Qgb2YgYWdncmF2YXRpb24gd2hlbmV2ZXIgeW91IHRyeSB0byBib29rIGEgdHJpcCB0aHJvdWdoIHRoZW0uIFRoZXkgd29uJ3QgaGF2ZSBwbGFjZXMgdG8gc3RheSB3aGVyZSB5b3Ugd2FudCB0byBnby4gSWYgdGhleSBkbywgYnJhY2UgZm9yIGJsYWNrb3V0IGRhdGVzIGFuZCBvdGhlciBpbXBlZGltZW50cy4KS29sa2F0YSBSb3lhbHMgICBZZXQgdG8gYmUgYW5ub3VuY2VkClRoaXMgbGF3IGFsc28gZXN0YWJsaXNoZWQgdGhlIG1hbmRhdG9yeSBjb25kb20gcnVsZSAoYmVmb3JlIGl0IHdhcyB1cCB0byB0aGUgYnJvdGhlbHMgdG8gZW5mb3JjZSBzb21ldGhpbmcgbGlrZSB0aGlzIG9yIG5vdCkgYWxvbmcgd2l0aCBhIGNvdXBsZSBvdGhlciBydWxlcy4gT2YgY291cnNlIHRoZXJlIGFsd2F5cyBhIHJpc2sgYW5kIEkgYXZvaWQgd29tZW4gdGhhdCBvZmZlciBzZXggd2l0aG91dCBjb25kb20sIGJ1dCBhcGFydCBmcm9tIHRoYXQsIGFzIGxvbmcgYXMgdGhlIGNvbmRvbSBob2xkcyB0aGUgcmlzayBpcyBubyBncmVhdGVyIHRoYW4gd2l0aCBhbnkgb3RoZXIgcmFuZG9tIHdvbWFuLkFyZSB0aGUgd29tZW4gc2FmZSBmcm9tIGZvcmNlZCBwcm9zdGl0dXRpb24/VGhlIG5ldyBsYXcgaSBtZW50aW9uZWQgZWFybGllciB0cmllcyB0byBhY2NvbXBsaXNoIHRoaXMsIGJ5IG1ha2luZyB0aGUgd29tZW4gaGF2ZSBpbmZvcm1hdGlvbmFsIHRhbGtzIGF0IGdvdmVybm1lbnQgYWdlbmNpZXMgcmVndWxhcmx5LiAKRGVhbCBhbm90aGVyIGNhcmQgdG8gZXZlcnkgcGxheWVyIGFuZCBmbGlwIHRoZSBjYXJkLiAKV2UgYXJlIHRvIGJsYW1lLiBVcy4gVGhlIHlhaG9vIGluIHRoZSBtaXJyb3IsIG5vdCB0aGUgb25lIGluIG9mZmljZS4gCkkgZnVuY3Rpb25hbCBidXQgSSBoYXZlIHNldmVyZSBhbnhpZXR5IGNvbnN0YW50bHksIGl0IGNhdXNlcyBuYXVzZWEgYW5kIHN0b21hY2ggdXBzZXQgaWYgSSBub3QgbWVkaWNhdGVkLiBJIHdhcyB0b2xkIHRoYXQgaXQgd2FzIHVubGlrZWx5IHRvIGNoYW5nZSBhbmQgdGhlIGRhbWFnZSBpcyBkb25lLkkgd2FzIGFsc28gZGlhZ25vc2VkIHdpdGggZGVwcmVzc2lvbiBhbmQgUFRTRCBidXQgSSByZWFsbHkgb25seSBmZWVsIHRoZSBvdmVyd2hlbG1pbmcgc3ltcHRvbXMgb2YgbXkgYW54aWV0eSB3aGljaCBzdWNrcy5LZWVwIHlvdXIgaGVhZCB1cCB0aG91Z2ggZ3V5cywgaXQgZ2V0cyBiZXR0ZXIgaWYgeW91IGtlZXAgd29ya2luZyBvbiBpbXByb3ZpbmcgeW91cnNlbGYuIEJlIHNlbGZpc2ggYW5kIGRvIHdoYXQgeW91IGhhdmUgdG8gZG8hRGV2aWFudHRLaXR0ZW4gIDQ2IHBvaW50cyAgc3VibWl0dGVkIDExIG1vbnRocyBhZ29XaGVuIEkgd2FzIGEga2lkLCBtYXliZSA0IDUsIEkgd2Fsa2VkIGludG8gbXkgYmVkcm9vbSBhbmQgc2F3IGEgbWFzc2l2ZSBodW50c21hbiBpbiBteSBwZXJpcGhlcnkuIApDaGFuY2VzIGFyZSBpZiB5b3UgdGFrZSB0aGUgdGltZSB0byBkbyBhIGxpdHRsZSByZXNlYXJjaCBvbiB0aGVtIHlvdSB3aWxsIGZpbmQgdGhhdCB0aGV5IGFyZSBieSBmYXIgdGhlIG1vc3QgaW5leHBlbnNpdmUgc2V0IGZvciBldmVyeXRoaW5nIHlvdSByZWNlaXZlLi4gCkVsIFBlbG4ncyBzdGF0dXMgYXMgYSBjdWx0IGZhdm9yaXRlIGlzIHJlZmxlY3RlZCBieSB0aGUgZGVjb3I6IEJvdGggaXRzIEZlbndheSBhbmQgQnJpZ2h0b24gbG9jYXRpb25zIGFyZSBmZXN0b29uZWQgd2l0aCBmYW5zIHdlYXJpbmcgdGhlaXIgRWwgUGVsbiBnZWFyIGFjcm9zcyB0aGUgZ2xvYmUuIFdoZW4gaXQgY29tZXMgdG8gdGFjb3MsIEVsIFBlbG4gcHJvdmlkZXMgZm91ciB2YXJpZXRpZXMgdG8gY2hvb3NlIGZyb206IHJhamFzIGNvbiBxdWVzbyB3aXRoIGJsYWNrIGJlYW5zIGFuZCByb2FzdGVkIHBvYmxhbm9zLCBncmlsbGVkIHN0ZWFrIGFuZCBndWFjIGNhcmFtZWxvcywgZ3JpbGxlZCBjaGlja2VuIGFtZXJpY2Fub3MsIGFuZCB0aGUgaGVmdHkgZmFuIHBsZWFzaW5nIHBlc2NhZG8gZmlsbGVkIHdpdGggY29ybm1lYWwgYmF0dGVyZWQgY29kIGFuZCBjaGlsZSBtYXlvLiAKT05DRSBZT1UgQ09NRk9SVEFCTEUgU0VFSU5HIEhFUiBBVCBBTEwuIApXaG9sZSB0aW1lIEkgd2FzIGp1c3QgdGhpbmtpbmcgYWJvdXQgbXkgZmFtaWx5LCBQaXBoZXIgc2F5cy4gdGhleSBhbGl2ZT8gSSB0cmllZCBub3QgdG8gdGhpbmsgYWJvdXQgaXQuIEJ1dCB0aGUgd2hvbGUgdGltZSBJIGtlcHQgdGhpbmtpbmcgaG93IGNyYXp5IGl0IHdhcyB0aGF0IEkgY291bGQgYmUgaW4gdGhpcyB0b3RhbCBwYXJhZGlzZSBhbmQgdGhhdCBJIGNvdWxkIGJlIGluIHN1Y2ggYSBtZXNzLiB0d28gZnVsbCBkYXlzIGxhdGVyLCB0aGUgc2Vjb25kIGhhbGYgb2YgdGhlIG1pcmFjbGUgY2FtZSB0cnVlIHdoZW4gc2hlIHdhcyByZXVuaXRlZCB3aXRoIGhlciBtb20sIGRhZCwgc2lzdGVyLCBicm90aGVyLCB0d28gYXVudHMgYW5kIGFuIHVuY2xlLgpEZXNwaXRlIG9mIGl0IHRoZSBwb3QgaXMgaGlnaCBmb3IgdGhpcyBjb21wYXJhdGl2ZWx5IGVhc2lseSBjb21wcmVoZW5zaWJsZSBnYW1lLiAKUmVkZGl0IGhhcyBnb3R0ZW4gcHJldHR5IGZ1Y2tpbmcgc3R1cGlkIGxhdGVseS4gCkkgaG9wZSBteSBodWdlIGRpc2NvbWJvYnVsYXRlZCBtZXNzYWdlIGhlbHBlZCBpbiBzb21lIHdheSBUaGF0IGFjdHVhbGx5IHJlYWxseSBoZWxwZnVsISBJIGNhbiByZWxhdGUgdG8gYSBsb3Qgb2YgdGhlIHRoaW5ncyB5b3UgbWVudGlvbmVkLCBhbmQgdGhhdCBnb29kIGFkdmljZSBhYm91dCBwcm9jZWVkaW5nIGF0IHlvdXIgb3duIHBhY2UgYW5kIG5vdCBiZWluZyBhZnJhaWQgdG8gdGFrZSBzb21lIGRheXMgIm9mZiIgdG8ganVzdCByZWxheCBhbmQgZGVjb21wcmVzcyBhbmQgbm90IGZlZWwgdGhlIG5lZWQgdG8gYWx3YXlzIHJ1c2ggdG8gdGhlIG5leHQgdG91cmlzdCBhdHRyYWN0aW9uLCBuZXh0IGJhciwgbmV4dCB0b3duLCBldGMuQW5kIGFib3V0IG5lZWRpbmcgdG8gaW50ZXJhY3Qgd2l0aCBwZW9wbGUuIFRoYXQgdGhlIHBhcnQgSSByZWFsbHkgZmFpbGVkIG9uIGluIG15IHRyaXAsIGFuZCBiZWluZyBpbiBhIGhvc3RlbCBvbmx5IGV4YWNlcmJhdGVkIGl0IGJlY2F1c2UgSSBzdGlsbCBkaWRuIGludGVyYWN0LCBvbmx5IG5vdyBJIGZlbHQgbGlrZSBJIHdhcyBhIGZhaWx1cmUgZm9yIGl0IHJhdGhlciB0aGFuIGp1c3QgYSBzb2xvIHRyYXZlbGVyIGxhY2tpbmcgb3Bwb3J0dW5pdGllcy4gCjIuIFdoZXJlIHRoZSBtb25leSB0aGF0IHRoZSBnb3Zlcm5tZW50IGdhdmUgdG8gYmFua3M/IFNlbmF0b3IgU2FuZGVycyBhc2tlZCBDaGFpcm1hbiBCZXJuYW5rZSB3aGljaCBpbnN0aXR1dGlvbnMgcmVjZWl2ZWQgdGhlc2UgemVybyBpbnRlcmVzdCBsb2FucyBmb3IgYmlsbGlvbnMgYW5kIGJpbGxpb25zIG9mIGRvbGxhcnMgYW5kIEJlcm5hbmtlIHJlZnVzZWQgdG8gdGVsbCBoaW0uIFRoaXMgbGFjayBvZiB0cmFuc3BhcmVuY3kgaXMgcmlkaWN1bG91cy4gSXQgT1VSIG1vbmV5LiBJdCBkaWRuIGNvbWUgb3V0IG9mIEJlcm5hbmtlIHBvY2tldHMsIGJ1dCBVUyB0YXhwYXllcnMgV2UgZGVzZXJ2ZSB0byBrbm93IHdoaWNoIGluc3RpdHV0aW9ucyBnb3QgdGhlIG1vbmV5LgpJIHRoaW5rIHRoaXMgaXMgYSBtb3JlIGNvbmNpc2UgY29tcGFyaXNvbiB0aGF0IHlvdSBhcmUgbG9va2luZyBmb3JPbmUgdGhpbmcgdG8ga2VlcCBpbiBtaW5kIHRoYXQgcHJvcGVydHkgdGF4ZXMgdGVuZCB0byBoaXQgcmV0aXJlZXMgYSBsaXR0bGUgaGFyZGVyIHRoYW4gaW5jb21lIHRheGVzIHNpbmNlIHRoZWlyIHRheGFibGUgaW5jb21lIGlzIHVzdWFsbHkgbG93ZXIgdGhhbiB3aGVuIHdvcmtpbmcgYnV0IHRoZXkgdGVuZCB0byBsaXZlIGluIHRoZSBzYW1lIGhvdXNlIHdoZW4gcmV0aXJlZC4gQWxzbywgdGhpcyBkb2VzbiB0YWtlIGludG8gYWNjb3VudCBBQ0Egb3B0aW9ucyB3aGljaCBjYW4gc2xpZ2h0bHkgYmUgYmV0dGVyIGluIGhpZ2hlciB0YXggc3RhdGVzLiAKSWYgYSBtYW4gd2FudHMgYSB3b21hbiwgaGUgZG9lcyBub3QganVzdCB0YWtlIGhlciwgdGhyb3cgaGVyIG92ZXIgaGlzIHNob3VsZGVyLCBhbmQgZHJhZyBoZXIgYmFjayB0byBoaXMgY2F2ZS4uIApNeSBzaXN0ZXJzIGFwcGFydG1lbnQgYnVpbGRpbmcgYnVybmVkIGRvd24gaW4gdGhlIG1pZGRsZSBvZiB0aGUgbmlnaHQgbGF0ZSBvY3RvYmVyIDIwMTYgKGl0IHdhcyBhIDYgYWxhcm1lciBpbiBNYW5oYXR0YW4pIGFuZCBzaGUgYW5kIGhlciByb29tbWF0ZSB3ZXJlIHdva2VuIHVwIGJ5IGEgZmlyZW1hbiBwcmVzc2luZyB0aGUgaW50ZXJjb20uIFRoZXkgdHJpZWQgdG8gY2F0Y2ggdGhlaXIgY2F0IGJlZm9yZSBnZXR0aW5nIG91dCwgZXZlbiB0aG91Z2ggdGhlIGFwcGFydG1lbnQgd2FzIGFscmVhZHkgZmlsbGluZyB1cCB3aXRoIHNtb2tlLiBCdXQgdGhlIGNhdCB3YXMgc28gc2NhcmVkIGFuZCBoaWQgYmVoaW5kIGNhYmluZXRzLiBUaGV5IHJlYWxpc2VkIHRoZXkgY291bGRuJ3QgZ2V0IHRvIGhlciBhbmQgaGFkIHRvIGdldCBvdXQgYW5kIGxlYXZlIHRoZSBjYXQgYmVoaW5kLiBXaGVuIHRoZXkgZ290IGRvd24gaW4gdGhlIHN0cmVldCBhIGZldyBtaW51dGVzIGxhdGVyLCB0aGUgd2hvbGUgYXBhcnRtZW50IGhhZCBsaXRlcmFsbHkgZ29uZSB1cCBpbiBmbGFtZXMuIEhhZCBzaGUgdHJpZWQgdG8gY2F0Y2ggdGhlIGNhdCBhbnkgbG9uZ2VyLCBzaGUgbWlnaHQgaGFkIG5vdCBzdXJ2aXZlZCBoZXJzZWxmLiAoSGVyIG5laWdoYm91ciBvZiAyNSB5ZWFycyB3aG8gbGl2ZWQgaW4gdGhlIGFwcHQgYmVsb3cgaGVyIGRpZCBub3QgbWFrZSBpdC4pCkV2ZW4gYWRtaW5pc3RyYXRpb24gcG9zaXRpb25zIHBheSBleHRyZW1lbHkgd2VsbC4gV2UgaGF2ZSBhIHNob3J0YWdlLiBJIGFtIGEgQ05BIGF0IGEgaG9zcGl0YWwgYW5kIGluIG51cnNpbmcgc2Nob29sLiAKSSBnbyB0byB0YWtlIGEgZHJpbmsgYXQgN2ttIGluIGFuZCBub3RpY2UgdGhhdCB0aGUgdmFsdmVzIG9mIG15IHdhdGVyIGJvdHRsZXMgc3VyZSBhcmUgaWN5LiBCeSAxMGttIHRoZXkgd2VyZSBmcm96ZW4uIEdyZWF0LCBleHRyYSB3ZWlnaHQgZm9yIG5vdGhpbmchIFRoYXQncyB3aGF0IEkgZ2V0IGZvciBtYWtpbmcgYSBsYXN0IG1pbnV0ZSBkZWNpc2lvbi4gRGFtbWl0IGFuZCB0aGVyZSB0aGUgMTo1MCBwYWNlIGJ1bm55LCB3aG9tIEkgZGlkIG5vdCB3YW50IHRvIHNlZS4gSSBzdGF5IHJpZ2h0IGJlaGluZCBoaW0gYXMgd2luZGJyZWFrIGZvciBhIGNvdXBsZSBrbSwgdGhlbiBJIG1hbmFnZSB0byBwdWxsIGFoZWFkIGFnYWluLCBwaGV3LiBIbW0sIHRyeWluZyB0byBibG93IHNub3Qgcm9ja2V0cyBhbmQgbm90IGhpdCBhbnlvbmUgaXMgYSBmaW5lIGFydCBpbmRlZWQuIEkgZmVlbGluZyBhIGJpdCBiZXR0ZXIgbWVudGFsbHkgYW5kIHRyeSB0byBqdXN0IGNvdW50IGJ1dCBteSBicmFpbiBrZWVwcyBkaXN0cmFjdGluZyBtZS4gVG9lcyB3YXJtIG5vdyB0aGFuayBnb29kbmVzcywgYm9keSBzdGlsbCB3YXJtLiBUaGUgZnJvemVuIGFpciBodXJ0cyBteSBsdW5ncyBidXQgbGFwIG9uZSBpcyBkb25lIQpUaGUgbGF3c3VpdCBjb21lcyBmaXZlIGRheXMgYWZ0ZXIgdGhlIE5GTCBmaW5lZCBGYXZyZSAkNTAsMDAwIGZvciBub3QgYmVpbmcgZm9ydGhyaWdodCBpbiBhbiBpbnZlc3RpZ2F0aW9uIGludG8gYWxsZWdhdGlvbnMgdGhhdCBoZSBzZW50IGxld2QgdGV4dCBtZXNzYWdlcyBhbmQgcGhvdG9zIHRvIGZvcm1lciBKZXRzIGdhbWUgaG9zdGVzcyBKZW5uIFN0ZXJnZXIgd2hlbiB0aGV5IGJvdGggd29ya2VkIGZvciB0aGUgdGVhbSBpbiAyMDA4Lgood2hlbiB0aGV5IGJicSBvciB3ZW50IG91dCkgSSBoYWQgYSBnb29kIHJlbGF0aW9uc2hpcCB3aXRoIHRoZSBzb24gYW5kIGZhdGhlciBvZiB0aGUgZmFtaWx5LiAKSG93IG11Y2ggb2YgaXQgaXMgZ2lubmVkIHVwIGJ5IEZveCBOZXdzIHZzLiBIb3cgbXVjaCBpcyBkaXJlY3RseSBjYXVzZWQgYnkgcmVwdWJsaWNhbiBwb2xpY2llcyBhdCBib3RoIHRoZSBmZWRlcmFsIGFuZCBzdGF0ZSBsZXZlbCBpcyBvYnZpb3VzbHkgYSBzdWJqZWN0IG9mIGludGVuc2UgZGlzYWdyZWVtZW50IGJldHdlZW4gdGhlIHJpZ2h0IGFuZCB0aGUgbGVmdC4gClRoaXMgZ3V5IGNsYWltZWQgdG8gYmUgdGhlIHNlY29uZCBjb21pbmcgYnkgd2F5IG9mIGJlaW5nIHBvc3Nlc3NlZCBieSB0aGUgaG9seSBzcGlyaXQuIEhlIGRyaXZlcyBhIHNlbWksIGpvZ3MgMSBob3VyIGEgZGF5LCBhbmQgaXMgaW50byAiZXh0cmVtZSBkYW5jaW5nIi4gCkljZWxhbmRlcnMsIHdobyBsaXZlIG9uIGEgdm9sY2FuaWMgaXNsYW5kIHJpZGRsZWQgd2l0aCB0aGVzZSBuYXR1cmFsICJob3QgcG90cywiIGFzIHRoZXkgY2FsbCB0aGVtLCBoYXZlIGEgbG9uZyB0cmFkaXRpb24gb2YgcmVndWxhciBzb2Frcy4gCkkgZG9uIHRoaW5rIGl0IGxpa2UgYSBzY3J1bSBzcHJpbnQgc3BlY2lmaWNhbGx5LCBpdCBzZWVtcyBsaWtlIGl0IGJhc2ljYWxseSBtYWtpbmcgYSBodW1hbiBlbmRwb2ludCBmb3IgYSBwcm9jZXNzIHRoYXQgbWlnaHQgYmUgbW9zdGx5IGF1dG9tYXRpYywgYnV0IG5vdCBlbnRpcmVseS4gS2luZCBvZiBsaWtlIGEgdHVyayBjb25jZXB0LiBMaWtlLCBhIHdheSB0byBwdXQgaHVtYW5zIGludG8geW91ciBidWlsZCBwaXBlbGluZS4KSXQgc2hvdWxkIHRha2Ugbm8gbG9uZ2VyIHRoYW4gYSBmZXcgZGF5cyB0byBjb21wbGV0ZSB2ZXJpZmljYXRpb24uLiAKVGhleSB3ZXJlIGFsd2F5cyBmZWF0dXJlZCBpbiB0aGUgbmV3c3BhcGVyLiBUaGVyZSB3ZXJlIGRvZ2ZpZ2h0cyBhdCB0aGUgZmluaXNoIGxpbmUuIFdoeSBhcmUgcGVvcGxlIGFmcmFpZCBvZiBpbXByb3ZlbWVudCBhbnltb3JlPyBSYWNpbmcgaXMgd2hhdCBrZWVwcyBtZSBtb3RpdmF0ZWQgYW5kIGdvaW5nLi4gCklmIHRoZSBtZW1iZXJzaGlwIGRvZXNuIGxpa2Ugd2hlcmUgdGhlIGRvbmF0aW9ucyBhcmUgZ29pbmcsIHRoZXkgdm90ZSB0aGVtIG91dC4gClNvLCBhIHBhdGllbnQgd2l0aCBsYW5ndWFnZSBkZWZpY2l0cyBmcm9tIGEgbGVmdCBNQ0Egc3Ryb2tlIHdpbGwgdW5kZXJnbyB0aGVyYXBpZXMgdG8gaW1wcm92ZSBzcGVlY2ggYXJ0aWN1bGF0aW9uLCB3b3JkIGZpbmRpbmcsIGxhbmd1YWdlIGZsdWVuY3ksIGV0Yy4gClRoZXJlIG1heSBhbHNvIGJlIHBvdGVudGlhbCBmb3IgZnVydGhlciByZXNwb25zaWJpbGl0aWVzIGluIHRoZSBmdXR1cmUsIGFsdGhvdWdoIGFzIHdpdGggb3RoZXIgdm9sdW50ZWVyIHNjaGVtZXMsIHdlIGhvcGUgdGhlIHNjaGVtZSB3aWxsIGJlIGZsZXhpYmxlIGVub3VnaCBmb3IgcGVvcGxlIHRvIGp1c3QgaGVscCBvdXQgd2hlbiB0aGV5IGNhbi4uIApBcmJyZSBkb250IGxhIG5vYmxlc3NlIG4gcGx1cyAgcHJvdXZlciwgbGUgY2huZSBlc3QgdW4gaHRlIGRlcyBmb3J0cyB0ZW1wcmVzIGRlIGwgbm9yZC4gQ29udHJhaXJlbWVudCAgc29uIGNvdXNpbiBsZSBjaG5lIHJvdXZyZSwgbGUgY2huZSBwZG9uY3VsIHByZnJlIGxlcyBwbGFpbmVzIGV0IGxlcyB2YWxsZXMgZmx1dmlhbGVzLCBtYWlzIHBhcnRhZ2UgYXZlYyBsdWkgc29uIGFwcHRlbmNlIHBvdXIgZGVzIHNvbHMgYWNpZGVzIGV0IGVuc29sZWlsbHMuIApJdCBzb3VuZHMgbGlrZSB5b3VyIGRhZCBoYXNuIGV2ZW4gYXBvbG9naXplZCBhbmQgeW91IGFyZSBub3QgaW4gYSBwbGFjZSB3aGVyZSB5b3UgY2FuIGV2ZW4gaGFuZGxlIGhpcyBwcmVzZW5jZSBzbyBJIGRvbiBzZWUgd2h5IHlvdSB3b3VsZCB3YW50IGhpbSB0aGVyZSBvbiB5b3VyIGhhcHBpZXN0IGRheS4gCiJPaCwiIGdhc3BlZCBwb29yIEFubmUsIGFzIGlmIHNvbWUgb25lIGhhZCBkYXNoZWQgY29sZCB3YXRlciBvbiBoZXIuClNoZSA1IE15IGRhZCA2IDMiLiBJIGFza2VkIGhlciBpZiBzaGUgZm91bmQgaXQgcGFpbmZ1bC4gCklzIHRoZSBzdG9yeSBhYm91dCB0aGUgZXRoZXIgc2NhbSB0cnVlPwpUaGV5IG1hZGUgbmVhcmx5ICQ4IG1pbGxpb24gaW4gcHJvZml0IGJlZm9yZSB0YXhlcy4gCllvdSBqdXN0IG5lZWQgdG8gaGF2ZSBhIGxpdHRsZSBmcmVlZG9tIGFuZCB0cnVzdCBmcm9tIHRoZW0uLiAKRXMgc3RlbGx0ZSBzaWNoIHJhdXMsIHNpZSB3YXIgaXJnZW5kd28gYXVzIGRlbSBVcmFsZ2ViaXJnZSwgc28gbiBLYWZmIGluIGRlbiBCZXJnZW4sIGltIFNvbW1lciBrb21tZW4gTW5uZXIgdW5kIGJyaW5nZW4gc2llIHVuZCBhbmRlcmUgTGV1dGUgbmFjaCBEZXV0c2NobGFuZCB1bmQgc2llIGJlcm5hY2h0ZW4gaW4gbmVyIEhhbGxlIGlyZ2VuZHdvIGltIFBvdHQsIGZhaHJlbiBkZW4gZ2FuemVuIFRhZyBSRSB1bmQgZXJiZXR0ZWxuIEdlbGQuIApUdXJtZXJpYyBpcyBoYXJ2ZXN0ZWQgZnJvbSB0aGUgcm9vdHMgb2YgdGhlIEN1cmN1bWEgbG9uZ2EgcGxhbnQsIHdoaWNoIGlzIG5hdGl2ZSB0byBJbmRpYSBbc291cmNlOiBDdXJjdW1hIExvbmdhXS4gCkkgd2lzaCBJIHVuZGVyc3Rvb2QgYWxsIHRob3NlIHllYXJzIGJhY2sgaG93IHRyb3VibGVkIHlvdSB3ZXJlLiBJIGFtIHNvcnJ5IGlmIEkgY2F1c2VkIHlvdSBwYWluIG9yIHNvcnJvdyAgSSBkaWQgbm90IHJlYWxpemUgdGhlIGV4dGVudCBvZiB5b3VyIGlzc3Vlcy4KSSBob3BlIGJvdGggb2YgdGhlc2UgbWVuIGNhbiBsb29rIHRoZW1zZWx2ZXMgaW4gdGhlIG1pcnJvciBhbmQgaW50byB0aGUgZXllcyBvZiB0aGVpciBjaGlsZHJlbiBhbmQgZmVlbCBqdXN0aWZpZWQgdGhhdCB0aGVpciBlc3NlbnRpYWxseSBwdWxsZWQgYSBSb3NpZSBSdWl6IHdpdGggdGhlIEFtZXJpY2FuIHB1YmxpYy4gVGhhbmtmdWxseSwgYSBtYWpvcml0eSBvZiBwZW9wbGUgZG8gbm90IGNvbmRvbmUgdGhpcyB3aW4gYXQgYW55IG1lYW5zIG1lbnRhbGl0eS4gV2hpbGUgaSBkbyByZWFsaXplIHRoYXQgbW9zdCBvZiBiYXNlYmFsbCBhbmQgZm9vdGJhbGwgYW5kIHRoZSBPbHltcGljcyBvdmVyIHRoZSBwYXN0IGZldyBkZWNhZGVzIGhhdmUgaXQgbm90IG9rYXkgaW4gbXkgYm9vay4gCkkga25vdyBJIGFtLiAKR00gQ0VPIERhbiBBa2Vyc29uIHJlY2VudGx5IHRvbGQgdGhlIERldHJvaXQgTmV3cyB0aGF0IGhlIHN0YXJ0aW5nIHRvIHNlZSBzb21lIGltcHJvdmVtZW50IGluIHRoZSBFdXJvcGVhbiBtYXJrZXQuCkkgQXNpYW4gYW5kIGNhbiBzYXkgdGhhdCBteSBwYXJlbnRzIHdvcmsgYW4gaW5jcmVkaWJsZSBhbW91bnQuIFdlIHJlZnVnZWVzIGZyb20gdGhlIEtobWVyIFJvdWdlIChDYW1ib2RpYW4gZ2Vub2NpZGUpIGFuZCBoYXZlIHdvcmtlZCB0aXJlbGVzc2x5IHRvIGdpdmUgbWUgYW5kIG15IHNpYmxpbmdzIGEgZ29vZCBsaWZlLiBJbiB0aGUgMjQgeWVhcnMgSSBiZWVuIGFsaXZlIEkgaGF2ZSBuZXZlciBzZWVuIHRoZW0gdGFrZSBhIHZhY2F0aW9uLCB0aGV5IGNvbnNpc3RlbnRseSB3b3JrIDUwIDgwIGhvdXIgd29yayB3ZWVrcywgYW5kIG9mdGVuIGdvIHNldmVyYWwgbW9udGhzIHdpdGhvdXQgYW55IGRheXMgb2ZmLiBZZXMsIHlvdSBoZWFyZCBtZSByaWdodC4KSXQgYWN0dWFsbHkgdGhlIG9wcG9zaXRlLiBZb3UgcGF5IGZvciB5b3Vyc2VsZiBhbmQgdGhlIGZhbWlseSBpcyBjb3ZlcmVkLiBUaGUgR2VybWFuIGdvdmVybm1lbnQgc3Vic2lkaXNlcyB0aGUgY29zdC4gSWYgeW91IGhhZCBwcml2YXRlIGluc3VyYW5jZSwgeW91IHdvdWxkIHBheSBleHRyYS4KU2hpcmluIE1hemFyaSBsb2dpYyB3YXMgYXMgY29uZnVzaW5nIGFzIGhlciBwYXJ0eSB0aGVzZSBkYXlzLiBCdXQgUFBQIE5hdmVlZCBRYW1hciB3YXMgZG90IG9uLiAKQnV0IGl0J3Mgbm90IGp1c3QgYWJvdXQgdGhlIG1vbmV5LiAKRGVwZW5kcyBlbnRpcmVseSBvbiB3aG8gaXMgZ2l2aW5nIHRoZSBwdW5pc2htZW50LiBGb3IgbWFueSBwZW9wbGUsIG15c2VsZiBpbmNsdWRlZCwgaXQgd2FzIGFic29sdXRlbHkgdGhlIHByaW1hcnkgbWV0aG9kIG9mIHB1bmlzaG1lbnQuIEkgYWdyZWUgdGhhdCBpdCBhY2NlcHRhYmxlIGluIHNvbWUgc2NlbmFyaW9zLCBidXQgZm9yIG1hbnkgcGFyZW50cyBwdW5pc2htZW50IGJlZ2lucyBhbmQgZW5kcyB3aXRoICJ5b3UgZGlzb2JleWVkIHNvIHlvdSBnZXR0aW5nIHBoeXNpY2FsIHB1bmlzaG1lbnQgYW5kIG5ldmVyIHF1ZXN0aW9uIG15IG1ldGhvZHMgb3IgeW91IGdldCBzcGFua2VkIGFnYWluLiIgTWV0aG9kIG1hdHRlcnMgdG9vLCBvcGVuIHBhbG0gdnMgbGVhdGhlciBiZWx0IGlzIGEgcHJldHR5IGJpZyBkaWZmZXJlbmNlLi4gClB1bGxpbmcgaGVyc2VsZiB1cCBieSBoZXIgTG91aXNWdWl0dG9uIHN0cmFwcywgSXZhbmthIHdhcyBncmFudGVkIGxlZ2FjeSBhZG1pc3Npb24gdG8gaGVyIERhZGR5J3MgYWxtYSBtYXRlcjogVGhlIFdoYXJ0b24gU2Nob29sIG9mIEJ1c2luZXNzLiBTb29uIGFmdGVyIGdyYWR1YXRpb24sIHNoZSBwZXJzZXZlcmVkIG92ZXIgaW50ZW5zZSBjb21wZXRpdGlvbiB0byBzZWN1cmUgYSBzZXZlbiBmaWd1cmUgVmljZSBQcmVzaWRlbnQgZ2lnIGF0IGhlciBEYWRkeSdzIHJlYWwgZXN0YXRlIGRldmVsb3BtZW50IGNvbXBhbnkuCkNyZWVweSBQTXMgRkFRClllcyBJIGRvIEkga25vdyB5b3VyIHJlZmVycmluZyB0byB0aGUgYXBwZWFzZW1lbnQgb2YgTmV2aWxsZSBDaGFtYmVybGFpbiB3aGljaCBoaXN0b3J5IGFzIHBvcnRyYXllZCBhcyBhIHdlYWsgbW92ZS4gSG93ZXZlciBpdCB3YXMgbW9yZSB0aGFuIGp1c3RpZmllZCBzaW5jZSBuYXRpdmUgR2VybWFucyB3ZXJlIGJlaW5nIHNsYXVnaHRlcmVkIGFuZCBtaXN0cmVhdGVkIGluIHdoYXQgd2FzIG9uY2UgdGhlaXIgbGFuZCAoU3VkZXRlbmxhbmQpLiAKV2hhdCBxdWVlciBzcGF3biBhcmUgYXNraW5nIGZvciBpcyBhIHJlamVjdGlvbiBvZiB0aGUgaWRlYSB0aGF0IHF1ZWVyIGZhbWlsaWVzIGFyZSBsaWtlICJldmVyeW9uZSBlbHNlIi4gIkxpa2UgZXZlcnlvbmUgZWxzZSIgaXMgY29kZSBmb3IgImxpa2UgdGhlIGRvbWluYW50IGdyb3VwcyBpZGVhbCBmYW1pbHkiICB3aGljaCBtZWFucyBzdHJhaWdodCwgd2hpdGUsIG1pZGRsZSBjbGFzcywgbnVjbGVhciBmYW1pbGllcyBsaXZpbmcgc29tZXdoZXJlIGluIHRoZSBzdWJ1cmJzICBhIGdyb3VwIG9mIHBlb3BsZSB3aG8gbWFrZSB1cCBmZXdlciB0aGFuIDEvNSBvZiB0aGUgcG9wdWxhdGlvbi4gCkJ1dCBpZiBzb21lb25lIGRvZXNuIHdhbnQgdG8gYmUgdGhlcmUsIGl0IG5vdCBhIHRlYWNoZXIgam9iIHRvIGxvb2sgaW50byB0aGF0IHBlcnNvbiBleWVzIGFuZCBmaW5kIGV4YWN0bHkgd2hhdCB0aGF0IHRoaW5nIGlzIHRoYXQgd2lsbCBtb3RpdmF0ZSB0aGVtLiAKSGFkIGNyYXNoZWQgb24gYSBzdGF0ZSBmYXJtLiAKU291cmNlOiB3YXMgc3RhbGtlZCwgYmVhdGVuLCBhbmQgaGFyYXNzZWQgYnkgc2Nob29sIGF0aGxldGVzIHdoaWxlIHRlYWNoZXJzIFdBVENIRUQgYW5kIGRpZCBub3RoaW5nLiBGb3VyIHllYXJzIG9mIGhlbGwgc28gc29tZSBjcmV0aW4gY2FuIHBhZCBhIHVuaXZlcnNpdHkgYnVkZ2V0IGRvaW5nIHNoaXQgdGhhdCBoYXMgTk9USElORyB0byBkbyB3aXRoIGxlYXJuaW5nPyBGdWNrIHRoYXQuCkhlbHAgaXMgYXZhaWxhYmxlLiAKIlRoZSB2aWRlbyB0aGF0IHdlIG9idGFpbmVkLCBpdCBzaG93cyB0aGUgYWN0IHRoYXQgdG9vayBwbGFjZSwiIFNoYXJwIHNhaWQuCkkgd2lzaCBJIGNvdWxkIHNlZSBwb2tlciBsaWtlIGNoZXNzLiBJIHdvdWxkIHNpdCBkb3duLCB0aGluayBhIGxpdHRsZSwgYW5kIGRvbiBjYXJlIGFib3V0IHRoZSByZXN1bHQuIFRoZSBwbGVhc3VyZSBpcyBvbiB0aGUgdGhpbmtpbmcuIEkgY2FuIHNlZSBwb2tlciB0aGF0IHdheSAoYmVzaWRlcywgYXQgTkwyIHRoZXJlIG5vdCBtdWNoIHRoaW5raW5nIHlvdSBuZWVkIHRvIGRvLCBlc3BlY2lhbGx5IHdpdGggYSBIVUQuIFlvdSB3cml0ZSBkb3duIHRoZSBhdmVyYWdlIHJhbmdlIGZvciB0aGVpciBzdGF0cyBhbmQgcG9zaXRpb24sIGFuZCBwcmVzdG8pLgpJbiB0aGlzIGNhc2UgdGhlIGhhbmQgb2YgcGxheWVyIEEgaXMgIkFjIFRjIDljIDdjIDVjIi4gCk04NTVBMSBpcyB0aGUgc2FtZSBncmFpbiB3ZWlnaHQgYXMgTTg1NS4gWW91IGdldHRpbmcgdGhlIGJhcnJlbCB0d2lzdCBqdW1wIGNvbmZ1c2VkIHdpdGggTTE5MyA+TTg1NSwgdGhlIE04NTVBMSBpcyBwcmV0dHkgd2VsbCBzdWl0ZWQgdG8gYSBtaWQgZ2FzIE00QTEuIApBbiBpbWFnZSBvZiBNcy4gCk5lcnZlIGluZ3Jvd3RoIGludG8gY2hyb25pYyBwYWluZnVsIGRpc2MgTGFuY2V0IDE5OTcKVGhlIEFsdG1hciBncm9vbWVyIGlzIHN0aWxsIHdhaXRpbmcgb24gc29tZSBwYXJ0cywgYnV0IGhvcGVmdWxseSB0aGF0IHdpbGwgYmUgYmFjayB0b2dldGhlciBzb29uLi4gCldlIGNhbiBzZXJ2ZSBhIHZhcmlldHkgb2YgbmVlZHMgICBldmVyeXRoaW5nIGZyb20gdGhlIExhdGluIG11c2ljIHRvIHdvcmxkIG11c2ljIHRvIGluZGllIHBvcC9pbmRpZSByb2NrLCBhbGwgdGhlIGtpbmRzIG9mIHRoaW5ncyB0aGF0IHBlb3BsZSBhcmUgcmVhbGx5IGxpc3RlbmluZyB0byB0b2RheS4iLiAKSGUgdG9sZCB0aGUgYWdlbnRzIGhlIHN0cmFkZGxlZCBoZXIgYW5kIHB1dCBib3RoIG9mIGhpcyBoYW5kcyBhcm91bmQgaGVyIG5lY2sgYW5kIHN0cmFuZ2xlZCBoZXIsIGJ1dCBzYWlkIHNoZSBuZXZlciByZWFsbHkgZm91Z2h0IGJhY2suCkNob3NlIHRoZSBsYXN0IHBocmFzZSwgY2hvc2UgdGhlIDFzdCBjaG9zZSB0aGUgMm5kIGNob3NlIHRoZSBsYXN0IHBocmFzZSBuZXh0LiAKV2l0aG91dCBpdCwgdGhlIHJvbGxlciBjb2FzdGVyIG9mIHJlYWwgZXN0YXRlIHdpbGwgdGhyb3cgeW91IHJpZ2h0IG9mZiBpdC4uIApJIHdyaXR0ZW4gb24gZXhhY3RseSB0aGF0IHRoZW9yeSBiZWZvcmUsIGJ1dCBJIGRvbiByZWFsbHkgdHJhY2sgbXkgdGhvdWdodHMgYmVjYXVzZSBpdCB1c3VhbGx5IG9mZiB0aGUgY3VmZiBzcGl0YmFsbGluZy4gQW55d2F5LCB0aGlzIHBhcnRpY3VsYXIgb25lIG1hcnJpZXMgaW4gd2l0aCB3aGF0IEkgaGFkIGFib3ZlLCB3aXRoIEtLQyBzaG93aW5nIHNpZ25zIG9mIGFjdHVhbGx5IGJlaW5nIGRvbmUgYXMgYSBjbGFzc2ljYWwgR3JlZWsgdHJhZ2VkeSwgd2hlcmUgdGhlIFRyYWdpYyBIZXJvIGhhcyBhIGZhdGFsIGZsYXcgb3IgaGFtYXJ0aWEgKHVzdWFsbHkgcHJpZGUpIHdoaWNoIGxlYWRzIHRvIGhpcyBkb3duZmFsbCwgYW5kIGluIHdoaWNoIHRoZSBtb21lbnQgb2YgcGVyaXBldGVpYSAob3IgcmV2ZXJzYWwpIGxlYWRzIHRoZSBhdWRpZW5jZSB0byBjYXRoYXJzaXMgKHdoaWNoIGhhcyBsaXR0bGUgdG8gZG8gd2l0aCBvdXIgc2Vuc2Ugb2YgY2F0aGFyc2lzKS4gCkV2ZW4gdGhvdWdoIGl0IHdvdWxkIGJlIGhhcmQgdG8gYWNjb21wbGlzaCBzdWNoIGEgYmFuIG9yIHdoYXRldmVyLCBpdCByZWFsbHkgdW5mYWlyIHRvIGFueW9uZSBlbHNlIGFuZCB0aGVyZSBwcm9iYWJseSBzaG91bGQgYmUgc29tZSBjb25zZXF1ZW5jZXMsIHByZWZlcmFibHkgbm9uIGZpbmFuY2lhbCBpbiBvcmRlciB0byBoYXZlIGxlc3Mgc2N1bSBpbnZvbHZlZCBpbiBkb3RhLiBTZWVpbmcgYSByZXNwb25zZSBmcm9tIFZhbHZlIHdvdWxkIGJlIHJlYWxseSBjb29sIHRob3VnaC4uIApEZXIgR2xja3NzcGllbCBBbmJpZXRlciBmaHJ0IHdlaXRlciBhdXMsIGRhc3MgZXIgd2VpdCBiZXIgMzUwIHZlcnNjaGllZGVuZSBDYXNpbm8gR2FtZXMgZGVzIHJlbm9tbWllcnRlbiBDYXNpbm8gU29mdHdhcmUgdW5kIEdlcnRlIEhlcnN0ZWxsZXJzIGZyIHNlaW5lICBGYW5nZW1laW5kZSBiZXJlaXRobHQuIERhcnVudGVyIHNpbmQgc293b2hsIGRpZSBDYXNpbm8gS2xhc3Npa2VyIHdpZSB6dW0gQmVpc3BpZWwgQmxhY2tqYWNrIHVuZCAgd2llIGF1Y2ggbW9kZXJuZSwgaW5ub3ZhdGl2ZSBWaWRlbyAgdW5kICBTcGllbGUuIEF1ZXJkZW0gc3RlbGx0IGRhcyAgYWxsZW4gTmV1a3VuZGVuICQgNTAwIGluIFZvdWNoZXJzIHp1bSAgYmVyZWl0IHVuZCBiaWV0ZXQgZWluZSB2b2xsZSBTdHVuZGUgWmVpdCByZWluZW4gQ2FzaW5vIEdhbWVzIFZlcmduZ2VucywgaW4gd2VsY2hlciBkZXIgbmV1ZSAgS3VuZGUgc28gdmllbCBHZWxkIHdpZSBudXIgbWdsaWNoIGdld2lubmVuIGthbm4hIEVpbmUgd2FocmhhZnQgZ3V0ZSBQZXJzcGVrdGl2ZSEuIApUaGV5IGFsbCBhcmUgY29uc2lkZXJlZCBhcyBhbWF0ZXVyIHBva2VyIHBsYXllcnMgb3IgcG9rZXIgZmFucyBsb29raW5nIGZvcndhcmQgdG8gc29tZSBhZHZlbnR1cmVzIGluIHRoZSBmaWVsZCBvZiB0aGlzIGdhbWUuIApCdXQgcmVsaWFiaWxpdHkgaGVyZSBtZWFucyB0aGUgcmVwZWF0YWJpbGl0eSBvZiBwZXJmb3JtYW5jZSB5ZWFyIG92ZXIgeWVhciAob3IsIEkgc3VwcG9zZSwgd2VlayB0byB3ZWVrIGlmIHlvdSBwcmVmZXIpOyBRQiBURHMgc2VlbSB0byBiZSBhdCBsZWFzdCBtb2RlcmF0ZWx5IHJlbGlhYmxlIHllYXIgb3ZlciB5ZWFyIGZvciBRQnMgdGhhdCBmaW5pc2ggYSBmdWxsIHNlYXNvbiB3aXRoIHRoZSBzYW1lIHRlYW0uIApJZiB0aGlzIGlzIHRoZWlyIHJhbmdlIEZsb3B6aWxsYSBzaG93cyB1cyB0aGF0IHRoZXkgYXJlIG9ubHkgZ29pbmcgdG8gaGl0IHRvcCBwYWlyIG9yIGJldHRlciBvbiB0aGUgZmxvcCAxOS44JSBvZiB0aGUgdGltZS4gCkRvbiBiZSBhIGplcmsgQmUga2luZCBhbmQgY29uc2lkZXJhdGUgaW4geW91ciBpbnRlcmFjdGlvbnMgd2l0aCBldmVyeW9uZSBvbiB0aGlzIHN1YnJlZGRpdC4gU3BlYWsgcmVzcGVjdGZ1bGx5LCBhc3N1bWUgcG9zaXRpdmUgaW50ZW50LCByZWNvZ25pemUgdGhhdCBvdGhlciB1c2VycyBtYXkgaGF2ZSBhIGRpZmZlcmVudCBvcGluaW9uLgpMdWNraWx5IGhlIGhhZCBib3RoIGEgbG90IG9mIHNlbGYgY29uZmlkZW5jZSBhbmQgcGF0aWVuY2UgYW5kIHRvb2sgaXQgaW4gc3RyaWRlcy4gSSBtYW5hZ2VkIHRvIHRlbGwgaGltIEkgcmVhbGx5IGNhcmVkIGZvciBoaW0gYnV0IHdhc24gcmVhZHkgdG8gc2F5IGl0IHlldCwgc28gYSBtb250aCBsYXRlciB3aGVuIEkgZmluYWxseSBkaWQgc2F5IGl0IGJhY2ssIEkgZ2VudWluZWx5IG1lYW50IGl0LiBIZSBhbiBhd2Vzb21lIGd1eSBhbmQgSSBoYXBweSBoZSB3YXMgbXkgZmlyc3QgcmVhbCBsb3ZlLi4gClNoZSBzZWVzIGEgcHN5Y2hvbG9naXN0IG9uY2UgYSBtb250aCBvciB3L2UgYW5kIGJlbGlldmVzIHRoYXQgdGhlIHNlc3Npb25zIGFyZSBoZWxwaW5nLi4gCkdpbmdldmVyZSAgOSBwb2ludHMgIHN1Ym1pdHRlZCAyMSBob3VycyBhZ28KMiBjZW50cmUgS2V2aW4gSGF5ZXMuIE9yIG5vdCBhZGRpbmcgZG9lcyBub3QgZ3VhcmFudGVlIHlvdSBhbnl0aGluZy4gClRoZSBzZWNyZXQgYWdlbnQgb25lIGhhcyBhIHN1cGVyIHNob3J0IG1pbmkgc2tpcnQgYW5kIG5vIHVuZGVyd2VhciwgYnV0IHNoZSBkb2VzIGhhdmUgYSBwaXN0b2wgc3RyYXBwZWQgdG8gaGVyIHRoaWdoIGp1c3QgaW4gY2FzZSB5b3UgdHJ5IHRvIGdldCBmcmVzaCB3aXRoIGhlci5TbyBub3cgdGhlIGFyZ3VtZW50IGJldHdlZW4gUGFsaW4gZnJpZW5kcyBhbmQgZW5lbWllcyBjb250aW51ZXM6IHNoZSBhIG1lYW4gYW5kIG5hc3R5IHBlcnNvbiB3aG8gZG9lc24gY2FyZSBhYm91dCBoZXIgb3duIGZhbWlseSwgbGV0IGFsb25lIHBlb3BsZSBpbiBnZW5lcmFsIHZzLiAKRmxvcCB3YXMgS0pUc3N4LiBJIGJldCBpbiBsYXRlIHBvc2l0aW9uIGFuZCB0aGUgY2hpcCBsZWFkZXIgamFtcyBmb2xkaW5nIG91dCB0aGUgb3RoZXIgcGxheWVyLiAKV2VudCBiYWNrIHRoZSBuZXh0IGRheSBhbmQgYm91Z2h0IG9uZS4gCkhlIG1haW50YWlucyB0aGF0IGRpc2N1c3Npb24gaXMgcGFyYW1vdW50LiBUaGUgSURXID0gZGlzY3Vzc2lvbi4gClRoZSBBdXRvbW8gVmljaW91cyBpcyBvZmZpY2lhbGx5IGRlYWQuIFJlYmVjY2EgY2FtZSBvdmVyIHRvZGF5IGFuZCBmaXNoZWQgYXJvdW5kIGluIHRoZSBlbmdpbmUgZm9yIHRoZSB0aW55IHBpY2UgdGhhdCBicm9rZSBvZmYgdGhlIHNwYXJrcGx1ZyB3aXRoIGEgc3VwZXIgc3Ryb25nIHRpbnkgbWFnbmV0IHN0dWZmZWQgaW50byBhIGxlbmd0aCBvZiBwYW50eWhvc2UuIApCb2xkIG1vdmVzIGFuZCBwb2tlcgpJIGEgYml0IGNvbmZsaWN0ZWQgb24gZXhwb3NpbmcgYWxsIG9mIHRoZW0uIFBhcnQgb2YgbWUgaG9sZHMgdGhlIGJlbGllZiB0aGF0IGlkaW90cyBkZXNlcnZlIHRvIGhhdmUgdGhlaXIgc2hpdCB0YWtlbi4gClByZWZsb3AgYW5kIGZsb3AgcGxheSBhcmUgZmluZSwgdHVybiBpcyBraW5kIG9mIGF3a3dhcmQgd2l0aCBzdGFjayBzaXplcyAoMTQgcG90IHdpdGggMjEgbGVmdCksIGJ1dCBJIHRoaW5rIGEgYmV0IGlzIHN0aWxsIGZpbmUgaGVyZSBhcyBoZSBoYXMgSkogYSBsb3Qgb2YgdGhlIHRpbWUgaGVyZS4gSSBkb24gbWluZCBhIHR1cm4gQ1IgZWl0aGVyIHdpdGggaGltIGZlZWxpbmcgcHJpY2VkIGluIHRvIGNhbGwgSkovY29tYm8gZHJhd3MuIFJpdmVyIGlzIGFuIGVhc3kgY2hlY2svZm9sZCwgdHVybmluZyB5b3VyIGhhbmQgaW50byBhIGJsdWZmIGhlcmUgbWFrZXMgbm8gc2Vuc2Ugb24gdGhpcyByaXZlci4uIApTbyBpZiB5b3UgZmVlbCBsaWtlIGp1c3Qgc2l0dGluZyBpbiB0aGUgc3VuLCBuZWFyIHRoZSByaXZlciwgcmVsYXhpbmcsIGhhdmluZyBjb2NrdGFpbHMgYW5kIHRha2luZyBpbiB0aGUgc2t5bGluZSwgdGhhdCB0aGUgcGxhY2UgdG8gZ28uLiAKVGhlIDUyIHllYXIgb2xkIHNpbmdlciB3YXMgamFpbGVkIFdlZG5lc2RheSBhZnRlciBoZSBzYWlkIGhlIGNvdWxkbid0IGFmZm9yZCB0byBwYXkgJDE2MSwwMDAgaW4gYmFjayBjaGlsZCBzdXBwb3J0LiBIZSBzYWlkIGhlIGhhZCAiemVybyIgcmVsYXRpb25zaGlwIHdpdGggaGlzIHRocmVlIGNoaWxkcmVuIGJ1dCBrbm93cyB0aGV5IGxvdmUgaGltLgpQZXRlcm1hbiBhbmQgTXJzLiAKRXZlcnlib2R5IHNob3VsZCBkbyBjYXJkaW8sIG5vdCBqdXN0IHBlb3BsZSBsb29raW5nIHRvIGxvc2Ugd2VpZ2h0LiBUbyBiZSBob25lc3QgdGFsayB0byBhbnlvbmUgd2hvIGZvbGxvd3MgYSBzdHJpY3QgbGlmdGluZyBhbmQgY2FyZGlvIHByb2dyYW0sIGFuZCB0aGV5IHdpbGwgbGlrZWx5IHRlbGwgeW91IGNhcmRpbyBoYXMgdGhlIGJpZ2dlc3QgYWZmZWN0IG9uIGhvdyB0aGV5IGxvb2sgYW5kIG1vcmUgaW1wb3J0YW50bHkgdGhlaXIgZW5lcmd5IGxldmVscy4gCk1vbnRyZWFsJ3MgYmVuY2htYXJrIGhvbWUgcHJpY2Ugd2FzICQzNDksMzAwIGluIEphbnVhcnksIHVwIDYuMyBwZXIgY2VudCBmcm9tIGEgeWVhciBlYXJsaWVyLiBUaGF0J3Mgc3RpbGwgZmFyIGxlc3MgdGhhbiB0aGUgVmFuY291dmVyIHByaWNlIG9mICQxLjAyIG1pbGxpb24sIHdoaWNoIGlzIGRvd24gNC41IHBlciBjZW50LgpJY2ggYmluIG5pY2h0IG1pdCBqZWRlbSBEZXRhaWwgZGVyIEFuYWx5c2UgZWludmVyc3RhbmRlbiAoc28gaXN0IGVzIGFuIHNpY2ggbmljaHQgdmVya2VocnQsIHdlbm4gYmVpc3BpZWxzd2Vpc2UgaG9tb3NleHVlbGxlIG11c2xpbWlzY2hlIGFmcm9kZXV0c2NoZSBNbm5lciBzYWdlbiwgZGFzcyBlaW5lIGhldGVyb3NleHVlbGxlIHdlaWUgQnJleGl0IEVpbndhbmRlcmluIFNjaHdpZXJpZ2tlaXRlbiBoYWJlbiBkcmZ0ZSwgZGllIFByb2JsZW1lIGRlciBlcnN0ZW4gR3J1cHBlIGh1bmRlcnRwcm96ZW50aWcgbmFjaGZobGVuIHp1IGtubmVuKSwgc2VoZSBlcyBpbSBQcmluemlwIGFiZXIgaG5saWNoOiBEYXMgUHJvYmxlbSBpc3QgbmljaHQgZGllIGluZGl2aWR1ZWxsZSBJZGVudGl0dHNmaW5kdW5nIHVuZCBTZWxic3R2ZXJ3aXJrbGljaHVuZyBkZXIgd2VzdGxpY2hlbiBHZXNlbGxzY2hhZnRlbiwgZGFzIGlzdCB6dSBiZWdyZW4sIHNvbmRlcm4gZGVyIGtvbGxla3RpdmlzdGlzY2hlIERyYW5nLCBzaWNoIGRhbm4gd2llZGVyIGtsZWluZW4gR3JwcGNoZW4genV6dW9yZG5lbiwgZGllIHNvd29obCBuYWNoIGlubmVuIGFscyBhdWNoIG5hY2ggYXVlbiBhdXMgIHVuZCBhYmdyZW56ZW5kIHNpbmQuIApLaXRlOiBBIGphaWxob3VzZSBsZXR0ZXIgaW4gdGhlIHNoYXBlIG9mIGEgbWluaWF0dXJlIGtpdGUuIApZb3Uga25vdywgaSBzYXQgaGVyZSBhbmQgaSBsaXN0ZW5lZCB0byBhbGwgb2YgdGhpcyBhbmQgaXQgdmVyeSBwYWluZnVsLiAKTW9zdCBjb21lIGZyb20gYSBjb25zZXJ2YXRpdmUgaG91c2UsIHNvIHRoZSB3YXkgdGhleSBhY3QgaWYgaXQgdGhlaXIgZmlyc3QgdGltZSBpcyBhIGRlYWQgZ2l2ZSBhd2F5LkNhdWNhc2lhbnMgSSBjYW4gdGVsbCBpZiB0aGV5IGxpdHRsZSBiZWluZyBzbm9iYnkgc3R1Y2sgdXAgYml0Y2hlcy4gQ2hhbmNlcyBvZiBiZWluZyB1bmRlcmFnZSBpbmNyZWFzZSBkcmFtYXRpY2FsbHkgd2l0aCB0aGlzIGtpbmQgb2YgYmVoYXZpb3VyLkFsc28sIGxpdHRsZSBzbGlwIHVwcyBsaWtlIHdoZW4gdGhleSB0aGluayB0aGV5IG91dCBvZiBlYXJzaG90LCB0aGV5IGNhbGwgZWFjaCBvdGhlciBieSBkaWZmZXJlbnQgbmFtZXMuIApTdXJ2aXZhMzE2ICA3IHBvaW50cyAgc3VibWl0dGVkIDE2IGRheXMgYWdvCldpbGxpYW1zLCBhIHJldGlyZWQgcG9saXRpY2FsIHNjaWVuY2UgcHJvZmVzc29yIGF0IHRoZSBVbml2ZXJzaXR5IG9mIFdhdGVybG9vLCBzYWlkIGl0IGhpZ2hsaWdodHMgdGhlIG9mIHVubW9kZXJhdGVkIGRpZ2l0YWwgcGxhdGZvcm1zLmp1c3QgZmluZCB0aGF0IHRvdGFsbHkgYXBwYWxsaW5nIHRoYXQgcGVvcGxlIGZlZWwgdGhleSBuZWVkIHRvIG1ha2UgdGhvc2Ugc29ydHMgb2YgY29tbWVudHMgYWJvdXQgYSBwb2xpY3kgcHJvcG9zYWwsIGhlIHNhaWQuIFByZXNpZGVudCBEb25hbGQgVHJ1bXAgbWF5IGhhdmUgZW1ib2xkZW5lZCBzb21lIHBvbGl0aWNhbCB3YXRjaGVycy53aGF0IHBhc3NlcyBmb3IgcG9saXRpY2FsIHBhcnRpY2lwYXRpb24gb3IgcG9saXRpY2FsIGRpc2NvdXJzZSB0b2RheSwgaGUgc2FpZCBvZiB0aGUgdHdlZXRzIHRvIEhlbG1lci5NYW55IGRvbiBsaWtlIGl0LiAKSWNoIGhhdHRlIGRlbiBWZXJnbGVpY2ggbWl0IEt1YmEgdW5kIFZlbmV6dWVsYSB6d2FyIG5pY2h0LCBhYmVyIGljaCBiaW4gcmVnZWxtaWcgaW4gS29sdW1iaWVuLCB3ZWlsIG1laW5lIFNjaHdpZWdlcmZhbWlsaWUgdm9uIGRvcnQgKE1lZGVsbG4pIGlzdC4gRGllIEJlb2JhY2h0dW5nZW4genVyIFVuZ2xlaWNoaGVpdCB6d2lzY2hlbiBkZW4gR3Jvc3RkdGVuIHVuZCBkZW0gUmVzdCBkZXMgTGFuZGVzIGthbm4gaWNoIGJlc3R0aWdlbiwgYWxsZXJkaW5ncyBzdGVsbGUgaWNoIGluIGRlbiBsZXR6dGVuIEphaHJlbiBkb2NoIGdld2lzc2UgQmVtaHVuZ2VuIGZlc3QsIE1pc3NzdG5kZSB6dSB2ZXJyaW5nZXJuLiBFaW5lIG1lZGl6aW5pc2NoZSBHcnVuZHZlcnNvcmd1bmcgZ2lidCBlcyBhbGxlcmRpbmdzIG1laW5lciBNZWludW5nIG5hY2ggc2Nob24sIGFsbGVyZGluZ3Mga2FubiBpY2ggYXVzZHJja2xpY2ggbmljaHQgYmV1cnRlaWxlbiwgd2llIHZpZWwgZGF2b24gZGllIGluZGlnZW5lIEJldmxrZXJ1bmcgYWJiZWtvbW10LiBEaWUgZXR3YXMgYml6YXJyZSBFaW5zdGVsbHVuZyB6dXIgVmVyc29yZ3VuZ3NsYWdlIGVpbmlnZXIgU3RtbWUgaW0gTm9yZGVuIGRlcyBMYW5kZXMgaGFiZSBpY2ggYWJlciBlaW5lcnNlaXRzIHp1bWluZGVzdCBhbmVrZG90aXNjaCBtaXRiZWtvbW1lbiB1bmQga29ubnRlIG1pdCBlaWdlbmVuIEF1Z2VuIGF1Y2ggenVtaW5kZXN0IG9iZXJmbGNobGljaCBuYWNodm9sbHppZWhlbiwgZGFzcyBkaWUgQW5la2RvdGVuIG5pY2h0IGdhbnogc3Vic3Rhbnpsb3Mgd2FyZW4uIEJlaSBlaW5lbSBCZXN1Y2ggaW4gUGFsb21pbm8gYW4gZGVyIEF0bGFudGlra3N0ZSAobmFoZSBTYW50YSBNYXJ0YSkgd3VyZGUgbWlyIGVyemhsdCwgZWluZXIgZGVyIGRvcnQgbGViZW5kZW4gU3RtbWUgd3VyZGUgYXVmIGVoZXIgdW5rdWx0aXZpZXJiYXJlcyBMYW5kIHZlcmRybmd0IHVuZCB3cmRlIGF1cyBTdG9seiBhdWYgTGViZW5zbWl0dGVsbGllZmVydW5nZW4gZGVyIFJlZ2llcnVuZyB2ZXJ6aWNodGVuLiBEaWUgdW5nbnN0aWdlbiBMZWJlbnNiZWRpbmd1bmdlbiB3cmRlIG1hbiBkYWR1cmNoIGF1c2dsZWljaGVuLCBkYXNzIEZyYXVlbiBhYiBkZXIgR2VzY2hsZWNodHNmaGlna2VpdCBhbHMgR2Vicm1hc2NoaW5lbiBlaW5nZXNldHp0IHdlcmRlbiB1bmQgc28gZGFzIEZvcnRiZXN0ZWhlbiBkZXMgU3RhbW1lcyBzaWNoZXJzdGVsbGVuLiBUYXRzY2hsaWNoIGhhYmUgaWNoIGRvcnQgYXVjaCBtZWhyZmFjaCBzaWNodGJhciB1bnRlcmVybmhydGUganVuZ2UgRnJhdWVuLCBtYXhpbWFsIGltIHNwdGVuIFRlZW5hZ2VyYWx0ZXIsIG1pdCBzY2hvbiAyIDMgS2luZGVybiBpbSBBcm0gdW5kIGFuIGRlciBIYW5kIGdlc2VoZW4uIERhcmF1cyBoYWJlIGljaCBmciBtaWNoIGRhbm4gZWJlbmZhbGxzIGdlc2NobG9zc2VuLCBkYXNzIGRlciBhbmdlYmxpY2hlIFJlc3Bla3Qgdm9yIGRlciBpbmRpZ2VuZW4gS3VsdHVyIG51ciBkb3J0IGV4aXN0aWVydCwgd28gbWFuIGRhZHVyY2ggR2VsZCBzcGFyZW4ga2Fubi4gU29iYWxkIGVzIHVtIEJvZGVuc2NodHplIG9kZXIgSW5mcmFzdHJ1a3R1cnByb2pla3RlIGdlaHQsIGlzdCBlcyBkYW5uIG1pdCBkZW0gUmVzcGVrdCBzY2huZWxsIHZvcmJlaS4KVGhlIHNlY29uZCBzZW1pIGZpbmFsIGJldHdlZW4gQWxidXJ5IGFuZCBZYXJyYXdvbmdhIHdpbGwgYmUgcGxheWVkIGF0IENvcm93YSdzIEpvaG4gRm9vcmQgT3ZhbCwgYWZ0ZXIgdGhlIEhvcHBlcnMgaG9zdGVkIHRoZSBjb3JyZXNwb25kaW5nIG1hdGNoIGxhc3QgeWVhci4KVGhlIG5lb2NvbnMgd2lsbCB1c2UgdGhlIGhvcnJpYmxlIHJlcHJlc3Npb24gYnkgdGhlIElyYW5pYW4gcmVnaW1lIHRvIGp1c3RpZnkgaW52YXNpb24uIE5vIG9uZSBjYW4gbG9vayBhdCB0aGUgcGhvdG9zIG9mIHlvdW5nIHByb3Rlc3RlcnMgYmVpbmcga2lsbGVkIGFuZCBub3QgZmVlbCBsaWtlICJzb21ldGhpbmcgbXVzdCBiZSBkb25lLiIKSGUgZm9sbG93ZWQgdGhlIGNhciBpbnRvIGEgZGVhZCBlbmQgYWxsZXksIHdoZXJlIGl0IHN0b3BwZWQuIEZhcmFvbmUgZ290IG91dCBvZiBoaXMgY3J1aXNlciBhbmQgd2Fsa2VkIHRvd2FyZHMgdGhlIG1hcm9vbiBoYXRjaGJhY2sgd2l0aCBoaXMgZ3VuIGRyYXduLiAKSXQgc2VlbXMgL3IvcmVsYXRpb25zaGlwcyBpcyB1c3VhbGx5IGp1c3QgcGVvcGxlIG5vdCBzZWVpbmcgdGhlaXIgcGFydG5lciBmb3Igd2hvIHRoZXkgYXJlIChlc3BlY2lhbGx5IHJpZ2h0IGJlZm9yZSBhIGJyZWFrdXApLiBUaGlzIGlzIGp1c3QgYml6YXJyZS4gSSB3b3VsZCB2ZXJ5IG11Y2ggbm90IGhvbGQgaXQgYWdhaW5zdCBoaW0uClkgbGxlZyAyMDA2LiBFbCBldmVudG8gMzQsIGNvbmNyZXRhbWVudGUuIFVuIHRvcm5lbyBxdWUgZXN0YWJhIGRpcmlnaWRvIGEgbGEgZ2VudGUgcXVlIGJ1c2NhYmEgdW5hIGV4cGVyaWVuY2lhIGJhcmF0YSBlbiBsYXMgV1NPUC4gClRoZSBwaWN0dXJlIHlvdSBzZWUgb2YgUGlwaGVyIGluIGhlciBiYXRoaW5nIHN1aXQgd2FzIHRha2VuLCBhcyBzaGUgZXhwbGFpbnMsIG1pbnV0ZXMgYmVmb3JlIHRoZSB0c3VuYW1pIGhpdC4gV2FzIHN0cmFuZ2UsIGJ1dCBJIGZlbHQgcmVhbGx5IGl0Y2h5LCBsaWtlIHRoZXJlIHdlcmUgc2VhIGxpY2UgYml0aW5nIG1lLCBzaGUgY29udGludWVzIG9mIHRoZSBzdGF0ZSBvZiB0aGUgd2F0ZXIgc2hlIHdhcyBzdGFuZGluZyBpbi4gSnVzdCBoYWQgdGhpcyBndXQgZmVlbGluZyB0aGF0IEkgaGFkIHRvIGdldCBvdXQgb2YgdGhlIHdhdGVyIHdoaWNoIGlzIHF1aXRlIHVudXN1YWwgZm9yIGEgeW91bmcgc3dpbW1lci4gCkkgdGhpbmsgaXQgd291bGQgYmUgb2theSBmb3IgdGhlbSB0byBoYXZlIGEgbnVtYmVyIG9mIHNtYWxsIHBsYW5ldHMgYW5kIGEgbnVtYmVyIG9mIG1lZGl1bSBwbGFuZXRzIGFzIHdlbGwuIApFc3BlY2lhbGx5IGF0IDRLLiBBbmQgaXQgYSBiaXQgY2hlYXBlciB0byBib290IChpdCBhY3R1YWxseSAyOTcgb24gQW1hem9uIGFzIEkgd3JpdGluZy4gSWYgeW91ciBwb2tlciBzb2Z0d2FyZSBpcyB2ZXJ5IHNpbmdsZXRocmVhZGVkLCB5b3Ugd291bGQgYmUgYmV0dGVyIG9mZiB3aXRoIHRoZSA4NzAwSy4uIApUaGVyZSBhcmUgbm8gbW9yZSBtaWxlc3RvbmVzIGZvciBLYWxsaXMgdG8gY2hhc2UuIApXZWxsIHRoZSBpZGVhIGlzIHRoYXQgeW91IGRvbiBoYXZlIHRvIGZpcmUgaXQgYmVjYXVzZSBpdCBzdG9wcyBvdGhlciBwZW9wbGUgZmlyaW5nIGF0IHVzLiBTbyBubywgdGhpbmtpbmcgd2Ugc2hvdWxkIGhhdmUgaXQgZG9lc24gbWVhbiB0aGlua2luZyB3ZSBzaG91bGQgZmlyZSBpdCwgaXQganVzdCBtZWFucyBsZXR0aW5nIG90aGVyIHBlb3BsZSB0aGluayB0aGVyZSBlbm91Z2ggb2YgYSBjaGFuY2UgdGhhdCB3ZSB3b3VsZCB0aGF0IHRoZXkgZG9uIGZ1Y2sgd2l0aCB1cy4gCkkgYSBDVCB0ZWNobm9sb2dpc3QgYW5kIGxpa2UuIEkgc3VyZSBhcyBoZWxsIGRvbiBkbyAkMzAwMCB3b3J0aCBvZiBmcmVha2luZyB3b3JrIGZvciAxIGV4YW0gKGFuZCB0aGF0IGEgImNoZWFwIiBvbmUhKS4gSSB1bmRlcnN0YW5kIHRoYXQgdGhlIG1hY2hpbmUgaXMgdmVyeSBleHBlbnNpdmUgdG8gcnVuIGFuZCBtYWludGFpbiAoZm9yIGV4YW1wbGUsIGEgbmV3IHggcmF5IHR1YmUgZm9yIG15IG1hY2hpbmUgY29zdCAkMjAwLDAwMCkgYnV0IGxpa2UuClN3aW4gQ2FzaDogVGhlcmUgYXJlIGEgZmV3IHRlYW1zIGluIHRoZSBBbWVyaWNhbiB0aGF0IEkgbGlrZS4gCllvdSBjcmFjayBhIGRvemVuIGVnZ3MgYW5kIHBvdXIgaXQgb24gdGhlIGJvdHRvbSBvZiB0aGUgd2luZHNoaWVsZC4gCldvcmxkIExhcmdlc3QgUGFzc2VuZ2VyIFBsYW5lIEFycml2ZXMgQXQgTUlBQWlyYnVzIEEgMzgwIEx1ZnRoYW5zYSBMYW5kcyBBdCBNSUEwM0x1ZnRoYW5zYSdzIEFpcmJ1cyBBIDM4MCBsYW5kcyBhdCBNSUEgb24gRnJpZGF5LCBKdW5lIDEwLCAyMDExLiAoQ0JTNCkKQXZvaXIgZGVzIGVuZmFudHMgcXVhbmQgb24gZXN0IGdyb3NzZQpUaGUgZ3JlZW4gbmV3IGRlYWwgd2FudHMgdG8gZW5kIGFpcnBsYW5lIHRyYXZlbCBhbmQgY2FycyB3aGlsZSBidWlsZGluZyBhIG1hc3NpdmUgdW5yZWFsaXN0aWMgdHJhaW4gc3lzdGVtIHRoYXQgaGFzIHlldCB0byBiZSBkZWZpbmVkIG9yIHBsYW5uZWQuIAp0ZWNoIGVudHJlcHJlbmV1cnMgZXllIHRoZSB2ZXJ0aWNhbCBsYW5kc2NhcGUgZm9yIG5ldyBncm93dGgKSGUncyBhbHNvIG5vdCB2ZXJ5IGdvb2QuIApUaGlzIHdvdWxkIG1ha2UgbWFya2V0aW5nIFNtYXNoIGFzIGEgcHJpbWUgb3Bwb3J0dW5pdHkgZm9yIGFkdmVydGlzZXJzIHNvIG11Y2ggZWFzaWVyIHNpbmNlIHRoZXkgY2FuIGJlIGd1YXJhbnRlZWQgb3ZlciBhIHBlcmlvZCBvZiB0aW1lIG92ZXIgbWFueSBkZW1vZ3JhcGhpY3MgYW5kIGxvY2F0aW9ucyByYXRoZXIgdGhhbiB0cnlpbmcgdG8gZ2V0IHNwb25zb3JzIGZvciBldmVyeSBpbmRpdmlkdWFsIHRvdXJuYW1lbnQuIEl0IHdvdWxkIGFsc28gdGFrZSBhIGxvdCBvZiBwcmVzc3VyZSBvZmYgdGhlIHNtYWxsZXIgdG91cm5hbWVudHMgdG8gbG9vayBmb3Igc3BvbnNvcnMuIApDZXQgaG9tbWUgdGFpdCBiYXMgYm91bGV2YXJkIEJhcmJzLCBvIGlsIHJlY2V2YWl0IGxlcyBmZW1tZXMgcXVlIHNhIGNvbXBhZ25lIHJlY3J1dGFpdCBhdSBOaWdlcmlhIHBvdXIgbGVzIGNvbnRyYWluZHJlICBzZSBwcm9zdGl0dWVyIGRhbnMgdG91dGUgbGEgRnJhbmNlLCBzZWxvbiBjZXR0ZSBzb3VyY2UuCkNpcmNhIFJlc2N1ZSBjcmV3LCB0byBiZSBhc3Nlc3NlZCBmb3Igc3VzcGVjdGVkQXVja2xhbmQsIG1haW50YWlucyBhIDI0LzcsIDM2NSBkYXkgYSB5ZWFyIHdhdGNoIGZvciBib2F0aWVzSm91cm5hbGlzbSBIYXMgQSBQcm9ibGVtOiBJdCdzIENhbGxlZCBDYXBpdGFsaXNtTXVjaCBoYXMgYmVlbiB3cml0dGVuIG9mIGxhdGUgYWJvdXQgdGhlICdwcm9ibGVtcycgb2YgdGhlIEpvdXJuYWxpc20gaW5kdXN0cnkgYW5kIGluIHBhcnRpY3VsYXIgdGhlIGltcGFjdHMgb2YgY29uc29saWRhdGlvbiBhbmQgbGF5b2ZmcyBvbiBsb2NhbCBuZXdzIGNvdmVyYWdlLiBIb3dldmVyLCBJIHdvdWxkIHByb3Bvc2UgdGhhdCB0byB0aGUgZXh0ZW50IHRoYXQgSm91cm5hbGlzbSBkb2VzIGluIGZhY3QgaGF2ZSBhIHByb2JsZW0sIHRoYXQgcHJvYmxlbSBpcyBzaW1wbHkgYW4gZXh0ZW5zaW9uIG9mIHRoZSBtYXJrZXQgZmFpbHVyZXMgb2YgQ2FwaXRhbGlzbS4gQW5kIHRvIHRoZSBleHRlbnQgdGhhdCBzb2x1dGlvbnMgZXhpc3QsIHRoZXkgbXVzdCBiZSBzb2x1dGlvbnMgdGhhdCBhbGxvdyBqb3VybmFsaXNtIHRvIG1vdmUgb3V0c2lkZSBvZiB0aGUgYnJva2VuIHN5c3RlbSB0aGF0IGhhcyBjYXVzZWQgdGhpcyBzaXR1YXRpb24uIApCaWtlcnMgcmlkZSB0byByYWlzZSBtb25leSBmb3IgaW5qdXJlZCBXaGl0bWVyIHN0dWRlbnQKUGFnbyBlbiBFc3BlY2llIChQYXltZW50IGluIEtpbmQpIGlzIGEgc2l4IGRlY2FkZSBvbGQgcHJvZ3JhbSBpbiB3aGljaCBNZXhpY2FuIGFydGlzdHMgZ2l2ZSBhIHBpZWNlIG9mIHRoZWlyIG93biBhcnR3b3JrIHRvIHRoZSBnb3Zlcm5tZW50IGluIG9yZGVyIHRvIHplcm8gb3V0IHRoZSBhbW91bnQgb2YgZmVkZXJhbCB0YXhlcyB0aGV5IG93ZS4gSW4gYSB3YXksIHRoZSBwcm9ncmFtIGN1dHMgb3V0IHRoZSBtaWRkbGUgbWFuOiBBcnRpc3RzIGRvbid0IGhhdmUgdG8gaG9jayB0aGVpciB3b3JrcyBvbiB0aGUgcHJpdmF0ZSBtYXJrZXQgYW5kIHRoZW4gdXNlIHRoYXQgY2FzaCB0byBzYXRpc2Z5IHRheCBvYmxpZ2F0aW9ucy4gCkRpZmZlcmVuY2UgQmV0d2VlbiBUdXJub3ZlciBSZXZlbnVlCkZvcmdldCB0aGUgaGVpbm91cyBhbnVzZXMuIApMaWtlIGhpbS4gClByaWNlcyBhcmUgdGhlIGF2ZXJhZ2UgbmlnaHRseSBwcmljZSBwcm92aWRlZCBieSBvdXIgcGFydG5lcnMgYW5kIG1heSBub3QgaW5jbHVkZSBhbGwgdGF4ZXMgYW5kIGZlZXMuIFRheGVzIGFuZCBmZWVzIHRoYXQgYXJlIHNob3duIGFyZSBlc3RpbWF0ZXMgb25seS4gClRoZSB0aGluZyBJIGNhbid0IHN0b3AgdGhpbmtpbmcgYWJvdXQgaXMgaG93IGdvb2QgaXQgZmVlbHMgdG8gYmUgd2FudGVkIHNvIG11Y2guIApWaWxsYXMgYXJlIGJhZCBmb3IgaHVtYW5pdHkuIElmIHdlIGFsbCBsaXZlZCBpbiB2aWxsYXMsIGlmIEkgaGFkIGtpZHMgSSB3b3VsZG4ndCBleHBlY3QgdGhlbSB0byBzZWUgMjUgYmVmb3JlIHdlIGNvbXBsZXRlbHkgaXJyZXZlcnNpYmx5IGZ1Y2tlZCB0aGUgZWFydGguIEFzIGl0IGlzIDUwIGlzIGEgc3RyZXRjaCBidXQgYXQgbGVhc3QgdGhvc2UgdGhlb3JldGljYWwga2lkcyBtaWdodCBsaXZlIHRoYXQgbG9uZyBiZWZvcmUgZXZlcnl0aGluZyBjb21wbGV0ZWx5IGdvZXMgdG8gc2hpdC4uIApUbyBrZWVwIHVwIHdpdGggZGVtYW5kLCBUcmFkZW1hcmsgaGFzIGxlYXNlZCAxMDAsMDAwIHNxdWFyZSBmZWV0IGluIExvcmFpbiBmb3IgaXRzIG5ldyBvZmZpY2UgYW5kIHdhcmVob3VzZS4gCkkgcmVhbGx5IGhhdmUgbXkgZG91YnRzIGFib3V0IFdvb2RsZXkgZmlnaHRpbmcgc3Bpcml0LiBIZSBoYXMgZG9uZSB0aGUgYmFyZSBtaW5pbXVtIHRvIHdpbiBhIGZldyB0aW1lcyBhbmQgbG9zdCBmaWdodHMgdGhhdCBoZSBzaG91bGQgaGF2ZSB3b24gKFNoaWVsZHMpIG9yIHNob3VsZCBoYXZlIGF0IGxlYXN0IGJlZW4gbW9yZSBjb21wZXRpdGl2ZSAoUm9yeSkgYmVjYXVzZSBoZSB3aWx0ZWQuIApTbyB3ZSBhcmUgdGFsa2luZyBhYm91dCBjb250cmFjdHMgbGF3cyBoZXJlLCBidXQgaXQgYmVjb21lIGEgYmlnIGNvbnN1bWVyIHByb3RlY3Rpb24gYmxhbmtldCB0ZXJtIGZvciBhbnkgYW5kIGFsbW9zdCBldmVyeSBpc3N1ZSBhY3Jvc3MgdGhlIGJvYXJkLiAKV2UgaGF2ZSBubyB3YXkgb2Yga25vd2luZywgc28gc2h1dCB0aGUgZnVjayB1cCBvciBhdCBsZWFzdCBwcmVmYWNlIHlvdXIgYnVsbHNoaXQgd2l0aCAiTm9ib2R5IGtub3dzLCBidXQgSSBpbWFnaW5lIi4uIApJIHdhcyBhIGJpdCBwZWV2ZWQgYXQgdGhlIHdheSBtb2RzIHdlcmUgY2hvc2VuLCBidXQgd2hhdGV2ZXIuIApDYWxsIGl0IGNvZ25pdGl2ZSBkaXNzb25hbmNlIG9yIHdoYXRldmVyLgpEaXNjbGFpbWVyOiBJIGFtIG5vIHBybywgYW5kIGxpa2UgYWxsIG9mIHVzLCBoYXZlIGEgbG90IHRvIGxlYXJuIGFib3V0IHRoZSBnYW1lLiBJIHVzZWQgdG8gcGxheSB1cCB0byA2MDBOTCBiYWNrIGluIHRoZSBkYXkgb25saW5lIHdoZW4gdGhhdCB3YXMgYXJvdW5kIHRoZSBza2lsbCBlcXVpdmFsZW50IHRvIDI1IDUwTkwgdGhlc2UgZGF5cy4gCkFib3V0MzAgcGVyIGNlbnQgb2YgcGVvcGxlIHdobyByZWd1bGFybHkgdXNlIHBva2llcyBhcmUgc3VmZmVyaW5nIGhhcm0gICBhbmQgZWFjaCBwcm9ibGVtIGdhbWJsZXIgaW1wYWN0cyBvbiBhbiBlc3RpbWF0ZWQgNSAxMCBvdGhlciBwZW9wbGUuIApJIHRoaW5rIHRoZSBndXkgeW91IHJlc3BvbmRpbmcgdG8ganVzdCBoYXRlcyBjYXBpdGFsaXNtIGJlY2F1c2UgY2FwaXRhbGlzbSByZXdhcmRzIGludGVsbGlnZW50IGxhYm9yLCB3aGljaCB0aGV5IGFyZSBpbmNhcGFibGUgb2YgKG9yIGF0IGxlYXN0IHRoZXkgdGhpbmsgc28pLiBUaGV5IGZhaWwgdG8gcmVhbGl6ZSB0aGF0IHRoZSB2ZXJ5IHBsYXRmb3JtIHRoYXQgdGhleSBlc3BvdXNpbmcgdGhlaXIgYW50aSBjYXBpdGFsaXN0IHZpZXdzIG9uIG9ubHkgZXhpc3RzIGJlY2F1c2Ugb2YgY2FwaXRhbGlzbS4gVGhleSBhbHNvIGZhaWwgdG8gcmVhbGl6ZSB0aGF0IGJlbW9hbmluZyBhIGxvdyBzdGFuZGFyZCBvZiBsaXZpbmcgYW5kIHNpbXVsdGFuZW91c2x5IGNvbXBsYWluaW5nIGFib3V0IGJ1c2luZXNzZXMgY29taW5nIHRvIHRoZSBzdGF0ZSBpcyBjb21wbGV0ZWx5IGFudGl0aGV0aWNhbC4uIApBbHNvIG9mZmVyaW5nICQyLjIwIHNhdHRlbGl0ZSB0aWNrZXRzIGV2ZXJ5IGRheSB3aXRoIGEgY2xpY2sgYW5kIGNvbGxlY3Qgc3lzdGVtIHdoaWNoIGdvZXMgdXAgdG8gMTBrIHBhY2thZ2VzLiAKVW5kZXIgd2hhdCByYXRpb25hbGUgd291bGQgeW91IGp1c3RpZmlhYmx5IGJlIGFibGUgdG8gYnJlYWsgdGhlbSB1cD8gVGhlcmUgYXJlIG90aGVyIG9wdGlvbnMsIHRoZXkganVzdCBhcmVuIGFzIGdvb2QuIEFtYXpvbiBpcyBlc3NlbnRpYWxseSB0aGUgbGFyZ2VzdCBzdXBwbHkgYW5kIHNoaXBwaW5nIGNvbmR1aXQgZm9yIHRoZSBjb3VudHJ5LCBzbyB5b3Ugd291bGQgYmUgdGhyb3dpbmcgb3VyIGVjb25vbXkgZm9yIGEgaHVnZSBsb29wLiBJIGFsc28gZmluZCBpdCBteXN0ZXJpb3VzIHlvdSBkb24gZ28gZm9yIHRlbGVjb21tdW5pY2F0aW9uIGNvbXBhbmllcy4gWW91IGtub3csIHRoZSBvbmVzIHRoYXQgaGF2ZSBhIHRlcnJpdG9yeSBwbGFuIGFuZCBjb250cmFjdHMgd2l0aCBlYWNoIG90aGVyIHRvIGVuc3VyZSB0aGVyZSBpcyBubyBjb21wZXRpdGlvbi4KRXZlcnlvbmUgbmVlZHMgdG8gdW5kZXJzdGFuZCB0aGF0IHRoZXNlIHBlb3BsZSBkb24gYmVsaWV2ZSBpbiB0YXhlcyBhcyBhIGNvbmNlcHQsIGFuZCBiZWxpZXZlIHRoYXQgaWYgd2UgZ29pbmcgdG8gaGF2ZSBzb2NpYWwgc2VydmljZXMsIGluZnJhc3RydWN0dXJlLCBldGMsIHRoYXQgaGVscCB0aGUgbWFqb3JpdHksIHRoZSBtYWpvcml0eSBzaG91bGQgYmUgcGF5aW5nIGZvciBpdC4KWW91IGNhbiBwdXJjaGFzZSB0aGVzZSBwcm9kdWN0cyBmcm9tIG9ubGluZSBvciwgZnJvbSBhbiBvZmZsaW5lIHBva2VyIHN0b3JlIGFzIHdlbGwuIApMZXggaXMgcmlnaHQgdGhhdCBpdCBhIGdyZWF0IGZvbGQgYnV0IGkgdGhpbmsgaXQgY2FuIGJlIHVucGFja2VkIGFuZCB1bmRlcnN0b29kIGluIGhpbmRzaWdodCwgZXNwZWNpYWxseSBpZiB0aGUgZ3V5IGhhcyBiZWVuIHBsYXlpbmcgZmFpcmx5IHRpZ2h0IChpIGRvbiBrbm93IGhpcyBpbWFnZSkuIEhlIG5ldmVyIGdldHRpbmcgY2FsbGVkIGJ5IHdvcnNlIGhhbmRzIGFuZCBoZSBub3QgZ2V0dGluZyBtdWNoIGJldHRlciB0byBmb2xkIHNpbmNlIGhlIGNhbiByZXAgdGhlIHN0cmFpZ2h0IGJlY2F1c2UgaGUgaGF2ZSBiZXQgaXQgb24gdGhlIGZsb3AgdG8gcHJvdGVjdCBoaXMgZXF1aXR5LiAKV2l0aCBhIHRob3JvdWdoIGdyb3VuZGluZyBpbiBjb25jZXB0cyBvZiBoZWFsdGggZGVyaXZlZCBmcm9tIHRoZSBzdHVkeSBvZiB0aGUgYmlvbG9naWNhbCBhbmQgc29jaWFsIHNjaWVuY2VzLCBwcm9mZXNzaW9uYWwgc3R1ZGllcyBhbmQgY29tbXVuaWNhdGlvbiBza2lsbHMsIHlvdSB3aWxsIGRldmVsb3AgdGhlIHByb2Zlc3Npb25hbCBkaXNjaXBsaW5hcnkga25vd2xlZGdlIGFuZCB1bmRlcnN0YW5kaW5nIG9mIHlvdXIgcHJlZmVycmVkIGZpZWxkIG9mIHByYWN0aWNlIG9mIG51cnNpbmcgKEFkdWx0LCBNZW50YWwgSGVhbHRoIG9yIENoaWxkKS4gCkJsYWNramFjayBmZWx0IGxheW91dCBoYXMgYmVjb21lIGEgdmVyeSBwb3B1bGFyIHBva2VyIHRhYmxlIGF0IHRoZSBvcmdhbml6YXRpb24gbGV2ZWwgb3IgcGVyc29uYWwgbGV2ZWwuIFRoZXNlIGxheW91dHMgY2FuIGJlIHVzZWQgYXMgYSBtaW5pIGNhc2lubyBhdCB5b3VyIGhvbWUgb3IgeW91IGNhbiB1c2UgdGhlbSBmb3IgeW91ciBpbnN0aXR1dGlvbiBmb3IgdGVtcG9yYXJ5IGVudGVydGFpbm1lbnQuIFlvdSBjYW4gYWx3YXlzIHBpY2sgdXAgYSAzNiB4IDcyIGluY2ggcG9rZXIgdGFibGUgYW5kIHBsYXkgeW91ciBmYXZvcml0ZSBjYXNpbm8gZ2FtZXMgZXZlbiBzdGF5aW5nIGF0IGhvbWUuCldobyBjb3VsZCBmb3JnZXQgdGhlIEVsZWN0cmljIEJhbGxyb29tJ3MgY2FycGV0ZWQgYmFyLCBzaXBwaW5nIENob2MgQmFuYW5hIFNvbGRpZXJzIGluIFRoZSBQYXZpbGxpb24gb3Igc2xpZGluZyBkb3duIHRoZSBlc2NhbGF0b3IgaW4gdGhlIGVhcmx5IGhvdXJzLiBUaGUgY2xvc3VyZSBvZiB0aGUgU2hvcnQgU3RyZWV0IGJ1aWxkaW5nIGF0IDRwbSBvbiBBdWd1c3QgMjcsIDE5OTMgd2FzIHRoZSBlbmQgb2YgYW4gZXJhLiBUbyBtYXJrIHRoZSBvY2Nhc3Npb24sIDcwMDAgcGVvcGxlIG1hcmNoZWQgZnJvbSB0aGUgUmlzc29sZSB0byB0aGUgY3VycmVudCBQYW50aGVycyBQb3J0IE1hY3F1YXJpZSBzaXRlIGluIEJheSBTdHJlZXQuIApMdXN0IGZvciB0aGVtLCBmZWFyIGZvciBhIHZpY3RpbS4gCk9uIG90aGVyIGRheXMsIGF0IGxvY2F0aW9ucyBvdGhlciB0aGFuIGFuc3RlcmRhbSBhbmQgQnJlZGEsIHRoZXJlIGFyZSBmZXdlciB0YWJsZXMgYW5kIGl0IGRpZmZpY3VsdCB0byBnZXQgYSBzZWF0Li4gCkl0IGRpZmZlcmVudCBmb3IgYW55b25lLCBhbmQgaWYgeW91IHRoaW5rIHRoYXQgYSB0cmFzaGNhbiBjYW4gZml4IGEgZGVwcmVzc2lvbiB5b3UgYXJlIGFuIGlkaW90LgpJIGFtIE1vbGx5LiBJIGhhdmUgYSB3b25kZXJmdWwgbGlmZSBpbiB0aGUgaG91c2UuIE5vIGJhcm4gZm9yIG1lLgpFdmVyeXRpbWUgdGhlcmUgYW4gaW5jaWRlbnQgZXZlbiBzbWFsbCwgSSBjYWxsIHRoZSBTVy4gIk9mZmljaWFsbHkgcmVwb3J0ZWQgaXQuIiBEYXkgb3IgbmlnaHQuIElmIHlvdSBjYW4gZ2V0IGEgaG9sZCBvZiB0aGUgU1cgc3BlYWsgdGhlIHRoZSBzdXBlcnZpc29yLiAKSXQncyB1cCB0byB5b3UhIDAgdm90ZXNTaG93IGFsbCBhbnN3ZXJzSSBhbSBkZWJhdGluZyBiZXR3ZWVuIE1pcmF2YWwgYW5kIENhbnlvbiBSYW5jaCBmb3IgYW4gaW1wcm9tcHR1IHRyaXAgd2l0aCBhIGZyaWVuZCBpbiB0d28gd2Vla3MuIElmIHdlIGdvIHRvIE1pcmF2YWwsIGlzIGl0IGRpZmZpY3VsdCB0byBnZXQgaW50byBjbGFzc2VzIG9uIHN1Y2ggc2hvcnQgbm90aWNlP0Fuc3dlciBmcm9tIENsZWExN0F1ZyAyMDE4IEkgdGhpbmsgeW91J3JlIGdvaW5nIGF0IHRoZSB3cm9uZyBzZWFzb24gdG8gaGlrZS4gCkluIHJlY2VudCB5ZWFycyBtYW55IGV4ZXJjaXNlIGFuZCBjb2duaXRpb24gc3R1ZGllcyBoYXZlIGJlZW4gY2FycmllZCBvdXQgaW4gYWR1bHQgcm9kZW50cy4gVGhpcyByZXNlYXJjaCBzdHJvbmdseSBzdXBwb3J0cyB0aGUgYmVuZWZpdCBvZiBleGVyY2lzZSBmb3IgYnJhaW4gZnVuY3Rpb24gYW5kIGhhcyBwcm92aWRlZCBpbnNpZ2h0IGludG8gdGhlIHVuZGVybHlpbmcgY2VsbHVsYXIgbWVjaGFuaXNtcy4gCkNJQkMgaGFzIHJlY29nbml6ZWQgdGhhdCBzb21lIGNsaWVudHMgd2FudCB0aGVpciBiYW5rIHRvIGNvbnNpZGVyIGVudmlyb25tZW50YWwgYW5kIHNvY2lhbCBpc3N1ZXMsIGFuZCBCYXJrZXIgaXMgcGFydCBvZiBhIHRlYW0gdGhhdCBoYXMgaGVscGVkIHRoZSBiYW5rIHRvIGFkb3B0IHRoZSBVbml0ZWQgTmF0aW9ucyBQcmluY2lwbGVzIGZvciBSZXNwb25zaWJsZSBJbnZlc3RtZW50LiAKUG9saWNlIHJlbGVhc2VkIGEgcGhvdG8gU3VuZGF5IG9mIHRoZSBzdXNwZWN0IHdhbnRlZCBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGFsbGVnZWQgYXNzYXVsdCBhdCBNZWRpZXZhbCBUaW1lcy4gSGUgaGFzIGJlZW4gZGVzY3JpYmVkIGFzIGEgbWFuIGJldHdlZW4gdGhlIGFnZXMgb2YgMzUgYW5kIDQwIHllYXJzIG9mIGFnZSwgc3RhbmRpbmcgZml2ZSBmb290IDEwIGFuZCB3ZWlnaGluZyBhYm91dCAyMjAgcG91bmRzLiBJbnZlc3RpZ2F0b3JzIHNhaWQgaGUgaGFzIGEgc2hhdmVkIGhlYWQsIGRhcmsgZ29hdGVlLCBhIHRhdHRvbyBvbiBoaXMgbG93ZXIgbGVnLCBhbmQgbWlzc2luZyB0ZWV0aC4gSGUgd2FzIHNlZW4gd2VhcmluZyBhIGRhcmsgaG9vZGllLCBkYXJrIGplYW5zIHdpdGggYSBncmVlbiBUIHNoaXJ0IGFuZCBncmF5IGFuZCB3aGl0ZSBzaG9lcy4KQnJpdF9mb3JfdGF0ICAxMiBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpDcmFpZ3NsaXN0IHNlbGxlciBsZWVyeSBvZiBjYXNoaWVyJ3MgY2hlY2sgcGF5bWVudCwgdGV4dCBvbmx5IGNvbW11bmljYXRpb246IE1vbmV5IE1hdHRlcnMgQ3JhaWdzbGlzdCBzZWxsZXIgbGVlcnkgb2YgY2FzaGllcidzIGNoZWNrIHBheW1lbnQsIHRleHQgb25seSBjb21tdW5pY2F0aW9uOiBNb25leSBNYXR0ZXJzIEkgd2FzIHRyeWluZyB0byBzZWxsIGEgbmlnaHRzdGFuZCBvbiBDcmFpZ3NsaXN0IGZvciAkMTAwLiBUaGV5IG9ubHkgd2FudGVkIHRvIGNvbW11bmljYXRlIGJ5IHRleHQuCkxlYXZlIHRoZSBiYXRocm9vbSB0aGUgd2F5IHlvdSBmb3VuZCBpdC4gSSBraWQgeW91IG5vdCB3aGVuIEkgc2F5IHRoYXQgYSBwYXNzZW5nZXIgbGVmdCBoaXMgZ2lhbnQgdHVyZCBvbiB0aGUgZmxvb3Igb2YgdGhlIGxhdmF0b3J5LiBOb3Qgc3VyZSBob3cuIE5vdCBzdXJlIHdoeS4gQnV0IGl0IHdhcyBkZWZpbml0ZWx5IG15IGZpcnN0IGNvZGUgYnJvd24uCldlJ3JlIG5vdCBqdXN0IHBhc3NpdmUgb2JzZXJ2ZXJzIG9mIHBvbGl0aWNzICh3aGljaCBpcyB3aGF0IGNsaW1hdGUgY2hhbmdlIGJvaWxzIGRvd24gdG8sIHNhZGx5KSwgd2UgaGF2ZSBhIHJvbGUgdG8gZnVsZmlsbCBhbmQgYW55b25lIHdobyBmYWlscyB0byBzaG91bGQgYmUgY2FsbGVkIG91dC4uIApKZSBzYWlzIGxlIHZpb2xvbiBlc3QgbCdpbnN0cnVtZW50IGR1IGRpYWJsZS4gU2VzIGNvcmRlcyB0YWllbnQgZmFpdGUgZGUgdHJpcGVzIGRlIGNoYXQgZXQgQ2hhZ2FsbCBhIHJlcHJzZW50LCBzaSBqZSBuZSBtJ2FidXNlLCBsZSBqdWlmIGVycmFudCBtdW5pIGRlIGNldCBpbnN0cnVtZW50IHBhcyBjYXRob2xpcXVlIGR1IHRvdXQgIUNlIHBhdXZyZSBSb2xsYW5kIGF1cmFpdCBkdSBjb25zdWx0ZXIgdW4gYXV0ZXVyIGZhaXNhbnQgcHJvZmVzc2lvbiBkZSAicmF0aWVyIiB2b2lyZSB0bHBob25lciAgdW4gY2VydGFpbiAiSmVhbiBEYW5pZWwiIHF1aSBsdWkgYXVyYWl0IHZpdCBkZSBzZSBqZXRlciBkYW5zIGxhIGd1ZXVsZSBkdSBsb3VwLiAKT3RoZXJzIGhhdmUgbWVudGlvbmVkIGdyZWF0IGlkZWFzLCBhbmQgSSB3YW50ZWQgdG8gdGhyb3cgaW4gdGhlIHRyZWFkbWlsbC4gWW91IHdpbGwgbmVlZCB0byBwb3NpdGl2ZWx5IHJlaW5mb3JjZSB0aGUgd2hvbGUgZ2V0dGluZyBvbiBhbmQgb2ZmLCB0aGVuIHNwZWVkIGNoYW5nZXMuIEkgd291bGQgbm90IHJ1biB5b3VyIGRvZyBvbiB0aGUgdHJlYWRtaWxsLCBidXQgd2Fsa2luZywgc3VwZXJ2aXNlZCwgaXMgZ3JlYXQgcGh5c2ljYWwgYW5kIG1lbnRhbCBzdGltdWxhdGlvbiAodGhleSBoYXZlIHRvIGNvbmNlbnRyYXRlIG9uIHBhY2UpLiAKT25lIGNhbiBwcm92aWRlIHlvdSB3aXRoIGEgcGxldGhvcmEgb2YgaXRlbXMgYW5kIHRoZSBvdGhlciBjYW4gVHJhZGluZyBjaGF0IGlzIGltcG9ydGFudCBiZWNhdXNlIGl0IGFsbG93cyBmMnAgcGxheWVycyB0byBnYWluIHRoaW5ncyB0aGV5IHVzdWFsbHkgY2FuIEl0IGlzIG5vdCBhIHZlcnkgcG9saXNoZWQgc3lzdGVtLCBidXQgYWxtb3N0IGV2ZXJ5IHdhcmZyYW1lIHBsYXllciB0aGF0cyBzcGVudCBhIGdvb2QgYW1vdW50IG9mIHRpbWUgaW4gdGhlIGdhbWUgd2lsbCBlaXRoZXIgcmVseSBvciB1c2UgdHJhZGUgY2hhdCBvY2Nhc2lvbmFsbHkuIEl0IGlzIGEgdmlhYmxlIG9wdGlvbiB0byB0aGUgbmVlZHMgb2YgdGhlIHBsYXllcnMsIHlvdSBjYW4gaWdub3JlIGl0IGJ1dCBpdCB3b3VsZCBiZSB2ZXJ5IGRpc2FkdmVudGFnZW91cyB0byBkbyB0aGF0LgpMLiBHZW9yZ2UgUGFycnksIGEgZm9ybWVyIGZlZGVyYWwgcHJvc2VjdXRvciwgc2FpZCB0aGUgZHVyYXRpb24gb2YgdGhlIHdpcmV0YXAgc2VlbWVkIHByb21pc2luZyBmb3IgcHJvc2VjdXRvcnMuICJJdCdzIG5vdCBsaWtlIHRoZXkgd2VudCB1cCBvbiB0aGVzZSBwaG9uZXMgYW5kIGhpdCBhIGRyeSBob2xlLCIgaGUgc2FpZC4gTWFnaXN0cmF0ZSBKdWRnZSBIZW5yeSBTLiBQZXJraW4uCkNvbnRyYXN0IHRoYXQgd2l0aCBhIDQgZGF5IHRvdXJuYW1lbnQgSSBhdHRlbmRlZC4gSXQgd2FzIGhlbGQgaW4gYW4gb2xkIGNvdW50cnkgZXN0YXRlIHRoYXQgaGFkIHR1cm5lZCBpbnRvIGEgaG90ZWwvY29uZmVyZW5jZSBjZW50ZXIuIEl0IHdhcyBleHRyZW1lbHkgc3BhY2lvdXMgYW5kIGV2ZXJ5IGNvbXBldGl0b3IgaGFkIHRoZWlyIG93biB0YWJsZSB3aXRoIGNvbWZvcnRhYmxlIGNoYWlycy4gVGhlIGdyb3VuZHMgd2VyZSBiZWF1dGlmdWwgYW5kIHRoZXJlIHdhcyBhIHNwYSwgYSBwb29sIG9yIHdvb2RsYW5kIHRvIGV4cGxvcmUgYmV0d2VlbiByb3VuZHMuIEVhY2ggZXZlbmluZywgYSBmZXcgaHVuZHJlZCBDaGVzcyBwbGF5ZXJzIGRlc2NlbmRlZCwgYm9hcmRzIGluIGhhbmQsIHRvIHRoZSBob3RlbCBiYXIsIHdoZXJlIGJsaXR6IGNoZXNzLCBiZWVyIGFuZCBiYW50ZXIgd2VyZSBhbGwgc2hhcmVkLiBUaGF0IHJlbWFpbnMgb25lIG9mIG15IGZvbmRlc3QgQ2hlc3MgbWVtb3JpZXMgYW5kIGl0IGludmlnb3JhdGVkIG15IHN0dWR5IGZvciBtb250aHMgYWZ0ZXJ3YXJkcy4KRnJlZSBlbnRyeSB3aXRoIHR3byAkMjAgbGlmZWxpbmVzIG9wdGlvbmFsLiAKQnkgU2NvdHQgSGFtaWx0b25MYXN0IG1vbnRoIGEgY291cGxlIG9mIHZhbXBpcmVzIGtub2NrZWQgb24gbXkgZG9vci4gSXQgd2FzIGFmdGVyIGVpZ2h0IG8nY2xvY2sgaW4gdGhlIGV2ZW5pbmcsIGFuZCBJIGhhZCBmYWxsZW4gYXNsZWVwLCBhcyB0aGUgZmF0aGVycyBvZiB0aHJlZSBzbWFsbCBib3lzIHNvIG9mdGVuIGRvLCBvbiB0aGUgY291Y2guIEkgb3BlbmVkIHRoZSBkb29yIGFuZCBzd2FsbG93ZWQgbXkgeWF3biBpbiBhbGFybSB3aGVuIEkgc2F3IHRoZSBibGFjayByb2JlcyBhbmQgYmxvb2Qgc3BlY2tsZWQgY2hlZWtzIG9mIG15IHZpc2l0b3JzLiAKVGhlIG90aGVyIGNhcmRzIGFyZSBibGluZDsgdGhleSByZW1haW4gZmFjZSBkb3duIGFuZCBtYXkgbm90IGJlIGV4YW1pbmVkLiAKT2gsIEkgdGFrZSBpdCBiYWNrLiAKU29tZSBzdHlsaXN0cyBzYXkgdGhhdCdzIGJlY2F1c2Ugb25jZSB0aGUgc2hhbXBvbyBpcyBubyBsb25nZXIgc3RyaXBwaW5nIHRoZSBoYWlyIG9mIGl0cyBuYXR1cmFsIG9pbHMgZXZlcnkgZGF5LCB0aGUgc2NhbHAgbXVzdCBsZWFybiB0byBzY2FsZSBiYWNrIHByb2R1Y3Rpb24gb2YgdGhvc2Ugb2lscy4gClRoaXMgaXMgYSBwYXliYWNrIHBlcmNlbnRhZ2Ugb2YgMTAwJS4gTW9yZSBsaWtlbHkgdG8gYmUgZm91bmQgYXJlIHRoZSA5IDYgdmlkZW8gcG9rZXJzIG9yIGxlc3MuIApCcmFuZCBvZiBiYXNrZXRiYWxsIHRoYXQgaGUgYnJvdWdodCBoZXJlIHdpdGggU2hvd3RpbWUgYW5kIHRoZSBpbXBhY3QgdGhhdCBoZSBoYWQgb24gdGhlIHNwb3J0IGFzIGEgd2hvbGUgdGhvc2UgdmlicmF0aW9ucyB3ZXJlIGZlbHQgKGJ5KSBhIGtpZCBhbGwgdGhlIHdheSB0byBJdGFseSBhdCA2IHllYXJzIG9sZCBiZWZvcmUgYmFza2V0YmFsbCB3YXMgZXZlbiBnbG9iYWwsIEJyeWFudCwgd2hvIHdhcyByYWlzZWQgaW4gSXRhbHksIHRvbGQgdGhlIExvcyBBbmdlbGVzIFRpbWVzLgpUZWNobm9sb2d5IEdvbmUgYXJlIHRoZSBkYXlzIHdoZW4gbGF3eWVycyBhbmQgcGFyYWxlZ2FscyBjb25kdWN0ZWQgbGVnYWwgcmVzZWFyY2ggYXQgYSBicmljayBhbmQgbW9ydGFyIGxhdyBsaWJyYXJ5LiBMZWdhbCBzZWNyZXRhcmllcywgbGF3IGxpYnJhcmlhbnMgYW5kIGFkbWluaXN0cmF0aXZlIGVtcGxveWVlcyBtdXN0IGJlIHF1YWxpZmllZCB0byB1c2UgdGVjaG5vbG9neSBmb3IgcHJvY2Vzc2luZyBsZWdhbCBkb2N1bWVudHMsIGNvbmR1Y3RpbmcgcmVzZWFyY2ggYW5kIG1hbmFnaW5nIHRoZSBsYXcgZmlybSdzIG9wZXJhdGlvbnMuIApUaGVzZSBwb2xpY2llcyBhcmUgcGFydCBvZiBvdXIgc3RhdGUncyBhZG1pbmlzdHJhdGl2ZSBjb2RlIGFuZCBhcmUgYmluZGluZyBvbiBhbGwgbGljZW5zZWQgZGF5Y2FyZXMgYW5kIHByZXNjaG9vbHMuIEkgYW0gbm90IGZyb20gYSB2ZXJ5IHByb2dyZXNzaXZlIGFyZWEgZWl0aGVyLiBMb29rIGludG8geW91ciBsb2NhbCBsYXdzIGFuZCBpZiB5b3UgZG9uJ3QgZmluZCBhbnl0aGluZyB5b3UgY291bGQgdHJhY2sgZG93biB0aGUgb3duZXJzIG9yIGJvYXJkIG9mIHRoZSBwcmVzY2hvb2wuIApBbmQgdGhlbiB3b3VsZCB0aGUgUXVlZW4gYmUgYWxsb3dlZCB0byBhcHBlYXIgaW4gYSBsb3ZlbHkgYXF1YSBtYXJpbmUgZnJvY2sgd2l0aCBzb21lIGNvc3R1bWUgamV3ZWxyeSBsb29raW5nIGJyb2FjaCBhbmQgYWRkcmVzcyB0aGUgeW91bmcgcGVvcGxlIG9mIHRoZSBDb21tb253ZWFsdGg/IEdvZCBzYXZlIHRoZSBRdWVlbi4uIApJdCB3YXMgdmVyeSBtb3RpdmF0aW9uYWwuIApXaGlsZSByYXRlcyB3aWxsIGNlcnRhaW5seSBiZSBoaWdoZXIgZHVyaW5nIHRoZSBwZWFrIHN1bW1lciBtb250aHMsIHRoZXJlIGFyZSBtYW55IGdyZWF0IHBsYWNlcyB0byBzdGF5IGluIFZpcmdpbmlhIGxhcmdlc3QgY2l0eSwgbW9zdCBub3RhYmx5IHRoZSBIaWx0b24gVmlyZ2luaWEgQmVhY2ggT2NlYW5mcm9udCwgV2VzdGluIFZpcmdpbmlhIEJlYWNoIGFuZCB0aGUgaGlzdG9yaWMgQ2F2YWxpZXIgSG90ZWwsIGFuIGljb25pYyBwcm9wZXJ0eSB0aGF0IHJlY2VudGx5IHJlb3BlbmVkIGFmdGVyIGEgbmVhcmx5ICQ4NSBtaWxsaW9uIHJlbm92YXRpb24uIEhlYWRxdWFydGVycyBhbmQgdGhlIFZpcmdpbmlhIEFxdWFyaXVtLiAKSnVzdCBob3BlIGFuZCBwcmF5IHRoYXQgaXQncyBkb25lIG9uIGEgc21hbGwgSW4gcGFydHMgb2YgdGhlIGNvdW50cnkgd2hlcmUgZ3Jvd24gZ2FtYmxpbmcgaXMgcGFydGljdWxhcmx5IGFjbWUuIApUaGUgU2NpZW50aWZpYyBNZXRob2QgYW5kIFRydXRoTm90aGluZyBpcyBldmVyIHByb3ZlbiB0byBiZSBhYnNvbHV0ZWx5IHRydWUgaW4gc2NpZW5jZSBhbmQsIHRvZ2V0aGVyIHdpdGggdGhlIHVzZSBvZiB0aGUgd29yZCB0aGVvcnksIGV2ZW4gb24gc29tZXRoaW5nIGxpa2UgdGhlIFRoZW9yeSBvZiBHcmF2aXR5LCB3aGljaCBhbG1vc3QgYW55b25lIHdvdWxkIGNvbnNpZGVyIGEgdHJ1dGgsIHRoaXMgbGVhZHMgbWFueSBwZW9wbGUgdG8gdGhpbmsgc2NpZW5jZSBpc24ndCB0aGUgYW5zd2VyLiBUaGlzIHRoZW4gYW5ub3lzIHNjaWVudGlzdHMgd2hvIHRlbmQgdG8gZm9yZ2V0IHRoYXQgYWx0aG91Z2ggYSBzY2llbnRpZmljIHRoZW9yeSB3b3JrcyBmb3IgYWxsIHByYWN0aWNhbCBhbmQgdGhlb3JldGljYWwgcHVycG9zZXMsIGFuZCB3ZSdyZSA5OS45OSUgc3VyZSBpdCBpcyBjb3JyZWN0LCBpdCBjYW4gbmV2ZXIgYmUgcHJvdmVuIDEwMCUuClN1ZmZpY2UgaXQgdG8gc2F5IGJvdGggdXNlIHRoZSBEb29yV2F5IExpZnQgYW5kIERyb3AgbWFuZXV2ZXIgKHJlYWNoaW5nIHVwIHRvIHRvdWNoIGVpdGhlciBzaWRlIG9mIHRoZSBkb29yd2F5KSBhcyBhIHN0YXJ0aW5nIHBvaW50LgpPbmUgb2YgdGhlIGdvb2QgdGhpbmdzIGFib3V0IG1hc3NhZ2UsIG9mIGNvdXJzZSwgaXMgdGhhdCB5b3UgZG9uJ3QgaGF2ZSB0byB2aXNpdCBhIHByb2Zlc3Npb25hbCB0byBjYXB0dXJlIGl0cyBiZW5lZml0cy4gClNvbWUgb2YgdGhlbSBoYXZlIGEgbGluZSB1cCBvZiBnaXJscyBpbiBzaG9ydCBza2lydHMgcmlnaHQgaW5zaWRlLCByZWFkeSBmb3Igc2VsZWN0aW9uLCBmdWxsIG1lbnUsIGFzIGxvbmcgYXMgbm9ib2R5IHRhbGtzIGFib3V0IGl0IHVudGlsIHlvdSBnZXQgdG8gdGhlIHJvb20uIApTb21lIHBhcmVudHMgY291bGRuJ3QgbWFrZSB0aGUgdHJpcC4gCkxhZHkgR2FnYSB3YXMgMTcgd2hlbiBzaGUgZ290IGhlciBmaXJzdCB0YXR0b28uIFNoZSB3YXMgYmVsb3cgdGhlIGxlZ2FsIGFnZSBvZiAxOCB0byBnZXQgYSB0YXR0b28gaW4gaGVyIGhvbWUgc3RhdGUgb2YgTmV3IFlvcmsgc28gc2hlIHVzZWQgYSBmYWtlIElELiAKRXZlcnkgc2luZ2xlIGNhc2lubyBnYW1lIGhhcyB0aGUgcnVsZXMsIHdoaWNoIHRlbGxzIHlvdSB0aGUgaG91c2UgZWRnZS4gCkkga25vdyB0aGlzLCBqdXN0IHN0YXRpc3RpY2FsbHkgeW91IGFyZSBtb3JlIGxpa2VseSB0byBnZXQgcHJlZ25hbnQgZnJvbSBtaXN0YWtlcyB0aGFuIGZyb20gbWFudWZhY3R1cmVyIGVycm9yLgpCYWNrIGhvbWUgaW4gcmVjb3ZlcnkgbW9kZSBub3cgYWZ0ZXIgMTAwayxqdXN0IHNvcnJ5IGkgd2FzIGEgYml0IHRvbyB0cmFzaGVkIHRvIHN0YXkgb24gYW5kIHN1cHBvcnQgdGhlIHRyb29wcyBpbiB0aGUgMjQgaG91ciByYWNlLiBIYXRzIG9mZiB0byBldmVyeWJvZHkgaW4gdGhhdCB3aGF0IGdyZWF0IHBlcmZvcm1hbmNlcyBmcm9tIEx5bm4gcGF1bGluZSBhbGwgdGhlIHdheSB0aHJvdWdoIHRoZSBmaWVsZC4gCkJhc2ljYWxseSB0aGUgc3lzdGVtIHVzZXMgc29jayBwdXBwZXQgYWNjb3VudHMsIG1vbml0b3JpbmcgdGhlIGJlaGF2aW9yIG9mIG90aGVyIHBsYXllcnMgb24gYSBtYXNzaXZlIHNjYWxlLiBJdCBidWlsZHMgYSBkYXRhYmFzZSBvZiB0aGVpciBoYWJpdHMsIGFuZCBjaG9vc2VzIHBhdHRlcm5zIHdoaWNoIGFyZSBwcmVkaWN0YWJsZSB0byBzZWxlY3QgaXQgbWFya3MuIFRoZSBtYXJrcyBhcmUgdGhlbiB0YXJnZXRlZCBieSBodW1hbiB1c2VycywgYW5kIHRoZSBodW1hbnMgYXJlIGdpdmVuIGd1aWRhbmNlIGJ5IHRoZSBjb21wdXRlciBzbyB0aGF0IHRoZXkgY2FuIHBsYXkgd2l0aCBmdWxsIGtub3dsZWRnZSBvZiB0aGF0IHBlcnNvbiBoYWJpdHMuCiAxMjEgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnb01vbmV0IGdldHMgaW52aXRlZCB0byBiZSBpbiBhIG11c2ljIHZpZGVvIHdpdGggTUFET05OQS4gVGVsbHMgTVAgdGhhdCBzaGUgbmVlZHMgdG8gbGVhdmUgdG8gcmVjb3JkIHRoZSB2aWRlby4gVGhleSBzYXkgc2hlIGNhbiBnbyBiZWNhdXNlIG9mIHRoZSBzaG9ydCBub3RpY2UuIApQcm9ncmVzc2l2ZSBtYXJpanVhbmEgdXNlciBoZXJlOyBJIGRpZG4gY2FyZSBhdCBhbGwgYWJvdXQgbGVnYWxpemF0aW9uLiBJIGJlZW4gYnV5aW5nIGl0IGZyb20gYSBzdG9yZSwgaGFzc2xlIGZyZWUsIGZvciB5ZWFycy4gWW91IGtub3cgd2hhdCBlbHNlIEkgYmVlbiBkb2luZyBmb3IgeWVhcnM/IEhhdmluZyB0byBkZWNpZGUgYmV0d2VlbiB2b3RpbmcgZm9yIHRoZSBjYW5kaWRhdGUgSSBhY3R1YWxseSBzdXBwb3J0LCB3aXRoIHRoZSBwbGF0Zm9ybSBJIGFjdHVhbGx5IGFncmVlIHdpdGgsIGFuZCB2b3RpbmcgZm9yIHRoZSBjYW5kaWRhdGUgd2hvIEkgZG9uIHJlYWxseSBsaWtlIGluIG9yZGVyIHRvIGtlZXAgdGhlIGd1eSBJIGhhdGUgZnJvbSBnZXR0aW5nIHBvd2VyLgpMaWZlIGhhZCBub3QgYmVlbiBraW5kIHRvIEphbWVzLiAKSWYgdGhhdCB3ZXJlIHRoZSBjYXNlLCB0aGVuIHRoYXQgd291bGQgcHJvYmFibHkgY3JlYXRlIHJlYXNvbmFibGUgZG91YnQuLiAKVGhpcyBjb3VsZCBiZSBhIGJpdCBvZiBob25leSwgYW5vdGhlciBoZXJiLCBtYXliZSBldmVuIGEgYml0IG9mIG1hZ2ljLkJlIHdhcm5lZCBob3dldmVyOyBvbmNlIHRoZSBoZWFydCBvZiBhbiBvYnJvIGNhcCBoYXMgdGFzdGVkIG9mIGEgYmVpbmcsIGlmIGl0IGlzIHBsYW50ZWQgaW4gYSBkYXJrIGFuZCBtb2lzdCBwbGFjZSBiZWZvcmUgaXQgaXMgZnVsbHkgY29uc3VtZWQgaW4gdGhlIGhlYWxpbmcgcHJvY2VzcywgdGhlcmUgaXMgYSBjaGFuY2UgdGhhdCBpdCB3aWxsIGdyb3cgYSByb3VnaCBhbmQgY3J1ZGUgZHVwbGljYXRlIG9mIHRoYXQgYmVpbmcuIApDb2xkLCBvbiB0aGUgb3RoZXIgaGFuZCwgbWVhbnMgeW91IGFyZSBpbiBhIHNlYXNvbiBvZiBwcmVwYXJhdGlvbiB3aGlsZSB5b3UgYXdhaXQgeW91ciBvcmRlcnMuIApGaW5kaW5nIHRoZSBwZXJmZWN0IG1hc3NhZ2UgaW4gQm91bGRlciBDb3VudHkKVGhlIENoaW5lc2UgZ292ZXJubWVudCBoYXMgZm9yIHllYXJzIGJlZW4gZW5nYWdlZCBpbiBwcmFjdGljZXMgaW5jbHVkaW5nIHN1YnNpZGl6aW5nIG1ham9yIGluZHVzdHJpZXMgdGhhdCBsYXdtYWtlcnMgc2F5IHB1dHMgdGhlIG5hdGlvbiBhcyBhbiB1bmZhaXIgY29tcGV0aXRpdmUgYWR2YW50YWdlLiBUaG91Z2ggdGhlIFRydW1wIEFkbWluaXN0cmF0aW9uIHNsYXBwZWQgcmV0YWxpYXRvcnkgdGFyaWZmcyBvbiBiaWxsaW9ucyBvZiBkb2xsYXJzIHdvcnRoIG9mIENoaW5lc2UgZ29vZHMgbGFzdCB5ZWFyLCB0aGF0IGRvZXNuIGNoYW5nZSB0aGUgdW5ldmVuIHRyYWRlIHJlbGF0aW9uc2hpcC4gCldoYXQgdGhlcmVmb3JlIEdvZCBoYXMgam9pbmVkIHRvZ2V0aGVyLCBsZXQgbm8gbWFuIHNlcGFyYXRlIiAodnYuIApEZW1vY3JhdHMgd2hvIHNpZGUgd2l0aCBjb3Jwb3JhdGUgaW50ZXJlc3RzIHRvIGJsb2NrIFByZXNpZGVudCBPYmFtYSBhZ2VuZGEgd2lsbCBzdWZmZXIgZm9yIGl0IGF0IHRoZSBiYWxsb3QgYm94LiBFdmVuIGFzIHdlIGNlbGVicmF0aW5nLCBpdCB0aW1lIHRvIGRvdWJsZSBkb3duLiAKQ3VycnkgaGFzIGhlciBtb3ZlIG91dCBvZiBoZXIgYXBhcnRtZW50IGFuZCBpbnRvIGhpcyBhbmQgaGlzIHdpZmUncyBob21lLCB3aGVyZSBzaGUgZmluYWxseSByZWNlaXZlcyB0aGUgbG92ZSB0aGF0IGhhcyBhbHdheXMgYmVlbiBtaXNzaW5nIGZyb20gaGVyIGxpZmUuIApQcm9sb25nZWQgdXNlIG9mIEJpb2ZyZWV6ZSBoYXMgYmVlbiByZXBvcnRlZCB0byBjYXVzZSBoZWFkYWNoZXMsIG5hdXNlYSwgYW5kIHZvbWl0aW5nLiAKVGhyb3VnaG91dCBteSBsaWZlLCBvbmUgb2YgdGhlIGZldyBjb25zdGFudHMsIGFzIHdlbGwgYXMgb25lIG9mIHRoZSBncmVhdCBqb3lzLCBoYXMgYmVlbiBwbGF5aW5nIHBva2VyLiBJdCdzIGFsc28gc29tZXRoaW5nIEknbSBxdWl0ZSBnb29kIGF0LiBMaWtlIHRoZSB0aW1lIEkgd2FzIHBsYXlpbmcgVGV4YXMgaG9sZCAnZW0gYWdhaW5zdCBhbiBhZ2dyZXNzaXZlIHBsYXllciB3aG8gaGFkIGJlZW4gdGhyb3dpbmcgZG93biBiaWcgYmV0cyBhbGwgbmlnaHQuIEkgcmVtZW1iZXIgbWF0Y2hpbmcgaGltLCBiZXQgZm9yIGJldC4gVGhlIGRlYWxlciBsYWlkIGRvd24gdGhlIGZpbmFsIGNhcmQgICAidGhlIHJpdmVyIiAgIGFuZCwgc2luY2UgdGhlIHN0cmFpZ2h0IEkgd2FzIHdvcmtpbmcgZm9yIG5ldmVyIGFwcGVhcmVkLCBJIGhhZCBvbmx5IGEgcGFpciBvZiBqYWNrcy4gSSBhbG1vc3QgZm9sZGVkIGJlZm9yZSBJIHNhdyBteSBvcHBvbmVudCBncmFiIGEgJDUwIGNoaXAgYW5kIHJ1YiBpdCB3aXRoIGhpcyB0aHVtYiBpbiBhIGNsZWFyICJ0ZWxsIiB0aGF0IGhpcyBoYW5kIHdhcyB3ZWFrLiBJIGtuZXcgSSBoYWQgaGltLCBhbmQgcmFpc2VkLiBIZSBmb2xkZWQuIEhlJ2xsIG5ldmVyIGtub3cgdGhhdCBJIHdhcyBibHVmZmluZywgYnV0IGhlIHN1cmUga25ldyB0aGF0IEkgd29uIHRoZSBwb3QuCkF0IGxlYXN0LCB0aGF0J3MgdGhlIHdheSBJIHRyeSB0byBhcHByb2FjaCBpdC4gSXQgZG9lc24ndCBhbHdheXMgd29yay4gCkl0IGFsbCBtdW1ibyBqdW1ibyB0byBtZS4gSSBkb24ga25vdyBhbnlvbmUgYXQgdGhlIHRlbXBsZSBJIGdvIHRvIHRoYXQgaXMgYXdha2VuZWQgb3IgcmVhbGx5IGNhcmVzIGFib3V0IHRoZWlyIHByb2dyZXNzLiBJdCBqdXN0IHNlZW1zIGxpa2UgdGhlaXIganVtcGluZyB0aHJvdWdoIHJpdHVhbGlzdGljIGhvb3BzIHRvIGFjY3J1ZSBtZXJpdCB0aGF0IHdpbGwgYWNjdW11bGF0ZSBhbmQgcmVtb3ZlIG9ic3RhY2xlcyB0byBhd2FrZW5pbmcuIApBIGxvdCBvZiBuZXcgdGVuYW50cyBpbiB0aGUgY29yZS4gQW5kIHNvbWUgYmlnIG9uZXMuIFNvIHRoZXJlIGJlZW4gYSBzaWduaWZpY2FudCBhbW91bnQgb2YgdGhhdCBraW5kIG9mIGFjdGl2aXR5LCBoZSBzYWlkLCBwb2ludGluZyB0byB0aGUgcmVsb2NhdGlvbiBvZiBBdXRvZGF0YSwgd2hpY2ggbGFzdCB5ZWFyIG1vdmVkIGludG8gdGhlIEJlbGwgYnVpbGRpbmcuCkFkb2JlIGl0c2VsZiBpcyBkb2luZyB2ZXJ5IHdlbGwgICBpdHMgc3RvY2sgaXMgdXAgNDYgcGVyY2VudCB5ZWFyIG92ZXIgeWVhciAgIGFuZCBwcm9kdWN0cyBzdWNoIGFzIFBob3Rvc2hvcCwgQW5hbHl0aWNzLCBJbGx1c3RyYXRvciwgTGlnaHRyb29tIGFuZCBEcmVhbXdlYXZlciBoYXZlIGFsbG93ZWQgaXQgdG8gY29ybmVyIGEgbWFya2V0IGhlbGxiZW50IG9uIHBlcnNvbmFsaXphdGlvbiBhbmQgc28gY2FsbGVkIGRpZ2l0YWwgdHJhbnNmb3JtYXRpb24uIEJ1dCB0aGUgY29tcGFueSB0dXJuZWQgaGVhZHMgZm9sbG93aW5nIGl0cyAkNC43NSBiaWxsaW9uIGFjcXVpc2l0aW9uIG9mIE1hcmtldG8gbGFzdCBtb250aCwgc2lnbmFsaW5nIHRvIG5ld2ZvdW5kIHJpdmFsIFNhbGVzZm9yY2UgdGhhdCBpdCBpbnRlbmRzIHRvIG1vdmUgYmV5b25kIHRoZSBidXNpbmVzcyB0byBjb25zdW1lciBsYW5kc2NhcGUgYW5kIGludG8gdGhlIHJlYWxtIG9mIEIyQi4uIApUaGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgSSByZWFsbHkgbGVhcm5lZCBmcm9tIHRoaXMgd2FzIHdoZW4gaXQgaXMgbXkgdHVybi4gQmFzaWNhbGx5LCBpZiB5b3UgYmxvY2sgYSBub3JtYWwsIGl0IG5vdCB5b3VyIHR1cm4gYW55bW9yZSB1bnRpbCB5b3VyIG9wcG9uZW50IHJ1bnMgb3V0IG9mIGFzc2lzdHMgYW5kL29yIGRvZXMgYSBzcGVjaWFsIG1vdmUuLiAKVGhlIHNlY29uZCBsZXNzb24gaXMgdGhhdCBhIGdvdmVybm1lbnQgdW5kdWx5IGluZmx1ZW5jZWQgYnkgdGhlIG1hcmtldCwgYnkgY29ycG9yYXRpb25zIGFuZCBiYW5rcyBsb2JieWluZyBhbmQgcG9saXRpY2FsIGNvbnRyaWJ1dGlvbnMsIHdpbGwgbm90IGJlIGFibGUgdG8gZnVsZmlsbCBpdHMgcmVzcG9uc2liaWxpdHkgYXMgcmVndWxhdG9yIG9mIHRoZSBtYXJrZXQuClR1cm5zIG91dCBpbiBteSBpbmZpbml0ZSB3aXNkb20gSSBlaXRoZXIgQSkgRGVsZXRlZCBhbGwgb2YgaGlzIHNob3cgZXZlbiB0aG91Z2ggSSBwcm9taXNlZCBteXNlbGYgaXQgd2FzIHRoZSBvbmUgdGhpbmcgSSBuZXZlciBnZXQgcmlkIG9mLCBvciBCKSBJIHNhdmVkIGl0IHNvbWV3aGVyZSBpIG5ldmVyIGdvaW5nIHRvIGZpbmQgaXQuIEkgc2VtaSBleHRyZW1lbHkgdXBzZXQgYWJvdXQgYWxsIG9mIHRoaXMgYW5kIG5vdyBJIGNyaWVkIGFib3V0IGl0LiAKTW9zdCBsaWtlbHkgYSBtb3JlIGJ1c2luZXNzIGZyaWVuZGx5IGNhbmRpZGF0ZSBsaWtlIEJldG8gb3IgQmlkZW4gd2lsbCBiZSBjaG9zZW4uIApEb24gbmFtZSBpdCwgZG9uIHNwZWFrIGl0LCBzdG9wIHdpdGggeW91ciBibGFoIGJsYWggYmxhaC4gCkhlIGhhZCAyIHByaW9yIGFycmVzdHMgZm9yIG1hcmlqdWFuYSBwb3NzZXNzaW9uLiBIZSBoYWQganVzdCB0dXJuZWQgMTguIApPciBldmVuIGlmIGhlIGRvZXMsIHRoYXQgYWxzbyBubyBndWFyYW50ZWUgb2Ygb24gdGhlIG5hbWUgYmVjYXVzZSBzb21lIG1lbiBnbyB3aXRoIGh5cGhlbmF0ZWQgbmFtZXMgb3IgbWFrZSB1cCBuZXcgbmFtZXMgd2hlbiBtYXJyeWluZy4gCk9rYXksIGhlcmUgd2hhdCB5b3UgZG8uIFN0YXJ0IGJ1eWluZyBpbiB3aXRoIHRoZSBtaW5pbXVtLCBldmVyeSB0aW1lLiAKVGhlIGNvdXJ0IGxpa2VseSBjYW4ndCBiYXIgaXRzIHByaW50aW5nLCBidXQgYSByZWFzb25hYmxlIHJlc3RyaWN0aW9uIG9uIGl0cyB0aW1lIGFuZCBtYW5uZXIgb2YgcHVibGljYXRpb24gbWlnaHQgc3F1ZWFrIGJ5Li4gClRoZXkgZG9pbmcgd2hhdCBwZW9wbGUgaGF2ZSBkb25lIHNpbmNlIG91ciBjb3VudHJ5IHdhcyBmb3VuZGVkLi4gCkNyZWF0ZSBsYXllcnMgb2YgY29vcmRpbmF0aW5nIGNvbG9ycyBvciBvdGhlciBkZXNpZ25zIHVzaW5nIHRoZSBiZWFucywgYWRkIHRoZSBmbG93ZXJzIGFuZCB3YXRlciB0byB0aGUgY2VudGVyIHZhc2Ugd2hlbiB0aGUgY3JlYXRpdmUgd29yayBpcyBkb25lLi4gCk5vbmUgb2YgdGhpcyBtZWFucyBoZSBzaG91bGRuIHJ1biwgbm9yIHRoYXQgSSBhbSBub3QgZm9yZXZlciBncmF0ZWZ1bCBmb3IgaGlzIGltcGFjdCBvbiBkcmFnZ2luZyB0aGUgRGVtb2NyYXRpYyBwYXJ0eSB0byB0aGUgbGVmdC4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua1RoZWF0cmUgYW5kIEFydHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbkFuIGVsZWN0aW9uIGV2ZSBzdG91c2ggb3ZlciBwbGFucyB0byByZWxheCBUYXNtYW5pYSBndW4gbGF3cyBoYXMgb3ZlcnNoYWRvd2VkIGZpbmFsIGVsZWN0aW9uIHBpdGNoZXMgZnJvbSB0aGUgbGVhZGVycyBvZiB0aGUgc3RhdGUgdHdvIG1ham9yIHBhcnRpZXMuIApXaGF0ZXZlciB0aGUgbGFzdCBzY2VuZSBpcywgaXQgYmUgaW1wcmludGVkIGluIG15IG1lbW9yeSBmb3JldmVyLiBJIHNwZW50IHRoZSBsYXN0IDggeWVhcnMgZmllbmRpbmcgb3ZlciB0aGlzIHNlcmllcywgb3ZlcmFuYWx5aXppbmcgZXZlcnkgc2NlbmUgYW5kIHBpZWNlIG9mIGRpYWxvZ3VlLCByZXdhdGNoaW5nIHRoZSBzZXJpZXMgYW5kIGZhdm9yaXRlIHNjZW5lcyBtdWx0aXBsZSB0aW1lcywgYW5kIHJlIHJlYWRpbmcgdGhlIGJvb2tzLiBJZiBub3QgdGhhdCwgSSBkaXNjdXNzaW5nIHRoZW9yaWVzIG9uIHRoZSBmb3J1bXMuIEkgaW52ZXN0ZWQgdGhvdXNhbmRzIG9mIGhvdXJzIGJ5IG5vdy4KQWgsIGJ1dCBJIHdhcyBldmVyIHNvIHlvdW5nIHdoZW4gVHJ1ZSBTbGFudCBlZGl0b3IgQ29hdGVzIEJhdGVtYW4gY2FsbGVkIG1lIHVwIHR3byB5ZWFycyBhZ28gYW5kIHNhaWQgIkxpc3Rlbiwgd2UgZ290IHRoaXMgaWRlYS4iIGNvdXJzZSwgSSBldmVyIHNvIG11Y2ggb2xkZXIgbm93IGFuZCBjYW4gc2VlIHRoYXQgdGhlIHdvcmxkIHdlIGhhdmUgd29uIGlzIGEgYmlnZ2VyIG1lc3MgdGhhbiBJIGNvdWxkIGhhdmUgZXZlciBpbWFnaW5lZC4gSXQgaXMgYSBtYXAgb2YgdGhlIGxhdGVzdCB2b3RlIG9uIG1pbGl0YXJ5IHNwZW5kaW5nIGluIEFmZ2hhbmlzdGFuLiAKUmVtb3ZlIGFueSBwb2xpc2ggd2l0aCBhIG5vbiBhY2V0b25lIHBvbGlzaCByZW1vdmVyLgpZb3Ugd2FudCB0byB0YWxrIGFib3V0IGFjdHVhbCBlcXVhbGl0eT8gTG9vayBhdCBmYXRoZXIgcmlnaHRzIGVzcGVjaWFsbHkgd2hlbiBpdCBjb21lcyB0byBkaXZvcmNlLiBPciBob3cgYWJvdXQgYWxpbW9ueT8gTmFoLCB0aG9zZSBhcmUgdG9vIGxvdyBoYW5naW5nIGZydWl0IHRoYXQgY2xlYXJseSBldmVyeW9uZSBrbm93cyBhYm91dC4gCllvdSBhcmUgZXhhZ2dlcmF0aW5nIGhvdyBjbG9zZSBEZWF0aHN0cm9rZSB3YXMgdG8gYmVjb21pbmcgYSBtb3ZpZSBhbmQgaG93IGNsb3NlIEdhcmV0aCBFdmFucyB3YXMgdG8gZG9pbmcgaXQuIAoiUGFydCBvZiB0aGlzIGhhcyBpbnZvbHZlZCBpbnRyb2R1Y2luZyBjaGVmJ3Mgc3VnZ2VzdGlvbnMgc3BlY2lhbHMgdGhhdCB3ZSByZWd1bGFybHkgcG9zdCBvbiBGYWNlYm9vay4KQ29oZW4gaGFkIG1hZGUgcHVibGljIHN0YXRlbWVudHMgcmVnYXJkaW5nIGhpcyBpbnRlbnQgdG8gdGVzdGlmeSBhcyB0byBkYW1uaW5nIGV2aWRlbmNlIGFnYWluc3QgUHJlc2lkZW50IFRydW1wLiAoQ2l0YXRpb24gb21pdHRlZCAgIHNlZSBhbnkgbnVtYmVyIG9mIHB1YmxpY2F0aW9ucyByZWdhcmRpbmcgQ29oZW4gc3RhdGVtZW50cyBpbiB0aGUgcGFzdCB3ZWVrLCBvciB5ZWFyIGZvciB0aGF0IG1hdHRlci4pCk91ciBpbnRlbnRpb25zIGFyZSBub3QgdG8gYmUgdW5jbGVhciBhYm91dCB0aGlzIHBvbGljeSwgYW5kIHdlIHVuZGVyc3RhbmQgdGhhdCBpdCBjYW4gYmUgZnJ1c3RyYXRpbmcgd2hlbiBpdCBzZWVtcyB0aGF0IHdheS4gSG93ZXZlciwgYXMgeW91IGtub3csIG91ciBjb25zdGFudCByZWZyYWluIGlzIHRoYXQgcG9saWN5IG11c3QgYmUgYXBwbGllZCBjb250ZXh0dWFsbHkuIFdlIHdpbGwgYWx3YXlzIHRyeSB0byB0YWtlIHRoZSBjb250ZXh0IG9mIGEgcG9zdCBvciBjb21tZW50IGludG8gYWNjb3VudCB3aGVuIHdlIGFyZSBldmFsdWF0aW5nIGl0ICAgYXMgc2hvdWxkIHlvdS4gCkFyZSBUaGVyZSBNYXJrZXRpbmcgSm9icyBpbiB0aGUgR292ZXJubWVudApGb3IgdGhpcyByZWFzb24sIGl0IGFkdmlzYWJsZSB0byBub3QgdXNlIGxldCBiaW5kaW5ncyB0byBwYXR0ZXJuIG1hdGNoIGxpc3RzLCBhcyB0aGUgcGF0dGVybiBvbiB0aGUgbGVmdCBoYW5kIHNpZGUgbWlnaHQgbm90IG1hdGNoIHRoZSB2YWx1ZSBvbiB0aGUgcmlnaHQgaGFuZCBzaWRlIChha2EgaXQgaXMgYSBwYXJ0aWFsIG1hdGNoKS4uIApIU1M6IFdIQVQgSVMgVEhFIERJRkZFUkVOQ0UgQkVUV0VFTiBUSEUgVEhSRUUgTU9EQUxJVElFUyBZT1UgT0ZGRVIgUE9MQVJJVFksIE1BU1NBR0UsIFJFSUtJP01hc3NhZ2UuIFlvdXIgYm9keSBpcyBhY2h5IGFuZCBuZWVkcyB0byBmZWVsIGJldHRlci4gCkkgbWVhbiwgSSBjYW4gc2VlIGhpcyBzaWRlIG9mIHRoZSBzdG9yeSwgYnV0IGhpcyBzaWRlIGlzIGp1c3Qgc28gc28gdmVyeSBkdW1iLiBTbyBkdW1iIHRoYXQgaXQgYWN0dWFsbHkgcGF0aGV0aWMuIEkgZmVsdCBnZW51aW5lIHBpdHkgZm9yIHRoaXMgbWFuLCBoaXMgaWdub3JhbmNlLCBoaXMgcmVhc29uaW5nLCBhbmQgZXZlbiBoaXMgcG9vciwgaWxsZWdhbGx5IGphY2tlZCBkb25nLiBJdCB3YXMgc3VjaCBhIGhhcHB5IHBlbmlzIGZvciBhIG1pbnV0ZSB0aGVyZSwgb24gdG9wIG9mIHRoZSB3b3JsZCwgYW5kIG5vdyBpdCBqdXN0IGNvbGQsIGFsb25lIGFuZCBmbGFjY2lkLgpUcnVtcCB0b2xkIHJlcG9ydGVyczogIklmIGl0IGRvZXNuJ3QgaGFwcGVuLCBtYXliZSBpdCBoYXBwZW5zIGxhdGVyLCIgcmVmbGVjdGluZyByZWNlbnQgc2V0YmFja3MgaW4gZWZmb3J0cyB0byBicmluZyBhYm91dCByZWNvbmNpbGlhdGlvbiBiZXR3ZWVuIHRoZSB0d28gS29yZWFzLiBhbmQgUmVwdWJsaWMgb2YgS29yZWEgZm9yY2VzLiBpbnNpc3RlbmNlIG9uIGRlbnVjbGVhcml6aW5nIHRoZSBwZW5pbnN1bGEsIGlzc3VpbmcgYSBoYXJzaGx5IHdvcmRlZCBtaXNzaXZlIHRoYXQgdGhlIFdoaXRlIEhvdXNlIGRpc21pc3NlZCBhcyBhIG5lZ290aWF0aW5nIHBsb3kuClR3byBvZiB0aGUgZ3VubWFuIHRocmVlIGJyb3RoZXJzIHNhaWQgdGhleSB3ZXJlIG5vdCBjbG9zZSwgYW5kIHRoZSB0aGlyZCBjb3VsZCBub3QgYmUgbG9jYXRlZC4gUGF0cmljayBQYWRkb2NrIHNhaWQgaGUgYW5kIGhpcyBicm90aGVyIGhhZCBub3QgYmVlbiBpbiBjb250YWN0IGZvciBhcyBsb25nIGFzIDIwIHllYXJzLCBhbmQgaGUgZGlkIG5vdCBpbml0aWFsbHkgcmVjb2duaXplIHRoZSBmYWNlIHRoYXQgZmxhc2hlZCBvbiBoaXMgdGVsZXZpc2lvbiBzY3JlZW4uIEhlIHdvbmRlcmVkIGFsb3VkIGFib3V0IHRoZSBtb3RpdmUgYmVoaW5kIHRoZSBjcmltZSBhbmQgZXhwcmVzc2VkIHByb2ZvdW5kIGRpc3RyZXNzIGZvciB0aGUgdmljdGltcy4KSSBhc2tlZCBoaW0gbm90IGJlY2F1c2UgaGUgd2FzIGEgZHVkZSBidXQgYmVjYXVzZSBoZSBsb29rcyBzdHJvbmcuIApFdmVudHVhbGx5IHlvdSBnZXQgdG8gdGhlIHBvaW50IHdoZXJlIHlvdSBrbm93IHRoZSBvZGRzIG9yIGNhbiBxdWlja2x5IGxvb2sgdGhlbSB1cCwgYW5kIHlvdSBkb24ndCByaWRlIGFkcmVuYWxpbmUgb2YgYmlnIHdpbnMgb3Igc3dlYXQgdGhlIHNtYWxsIGxvc3Nlcy4gClNvbWV0aGluZyBhYm91dCBiZWF0aW5nIHNvbWVib2R5IGluIDMxMiBzdHJhaWdodCBnYW1lcyBvZiBnaW4gcnVtbXkuIApQb2tlciBwb2tlciBwb2tlcgpScmVuYXVkICA0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJdCB0b29rIG9ubHkgZm91ciBob3VycyBmb3IgdGhlIG1hbmFnZW1lbnQgdGVhbSBhdCBCb3lkIEdhbWluZywgd2hlcmUgQm91Z2huZXIgd2FzIHRoZW4gY2hpZWYgb3BlcmF0aW5nIG9mZmljZXIsIHRvIGRlY2lkZSB0byBwcm9jZWVkLiAiVHdvIHdlZWtzIGxhdGVyLCB3ZSBoYWQgYW4gYWdyZWVtZW50IHRvIGRvIGEgJDUwMCBtaWxsaW9uIGRlYWwsIiBoZSBzYXlzLi4gCihTb3JyeSBpZiB5b3UgcmVhZCB0aGlzIGFscmVhZHk7IEkgcmVwbGllZCB0byB5b3VyIHBvc3QgYmVmb3JlIGl0IGdvdCByZW1vdmVkKQpNYWludGFpbmluZyBoZXIgb3JpZ2luYWwgc3RyYW5nZSBzZXQgb2Ygc3RhbmRhcmRzLCBBbGljZSBuZWl0aGVyIGdhbWJsZWQgbm9yIGxldCBoZXIgd2hvcmVzIHdvcmsgb24gU3VuZGF5cy4gQnkgMTkxMywgQWxpY2UncyBidXNpbmVzcyB3YXMgZmxvdXJpc2hpbmcsIGR1ZSBpbiBwYXJ0IHRvIHRoZSBTb3V0aCBEYWtvdGEgTmF0aW9uYWwgR3VhcmQgdHJhaW5pbmcgbmVhcmJ5LiBJdCB3YXMgZHVlIHRvIGhlciBTdW5kYXkgY2xvc2luZ3MgdGhhdCBzaGUga2lsbGVkIGEgc29sZGllci4uIApMZXMgQW5uYWxlcyBha2FzaGlxdWVzLCBnYWxlbWVudCBhcHBlbGVzIEFyY2hpdmVzIGFrYXNoaXF1ZXMsIENocm9uaXF1ZXMgYWthc2hpcXVlcyBvdSBlbmNvcmUgTW1vaXJlIGFrYXNoaXF1ZSBzb250IHVuIGNvbmNlcHQgc290cmlxdWUgY3IgcGFyIGxlcyB0aG9zb3BoZXMgIGxhIGZpbiBkdSBYSVhlIHNpY2xlLCAgcGFydGlyIGQgZGUgbGEgcGhpbG9zb3BoaWUgaW5kaWVubmUgZXQgcG9wdWxhcmlzIGVuIE9jY2lkZW50IHBhciBsZXMgbGl2cmVzIGRlIExvYnNhbmcgUmFtcGEsIGV0IGdhbGVtZW50IGRhbnMgbGVzIHBheXMgZnJhbmNvcGhvbmVzIHBhciBsZXMgb3V2cmFnZXMgZGUgRGFuaWVsIE1ldXJvaXMgZXQgQW5uZSBHaXZhdWRhbi4gCldoZW4gcGxheWVkIHJpZ2h0LCB0aGUgRXhvZHVzIEZsZWV0IHNoaXBzIHNob3VsZCBhbHdheXMgZGllIHdpdGggemVybyBzaGllbGRzIG9uIHRoZW0uIApVbSBkZW4gaW0gUG90IGxpZWdlbmRlbiBCZXRyYWcgZXJoaHQgd2VyZGVuLiAKVGhlIFF1cmFuIGFuZCBQcm9waGV0IE11aGFtbWFkIGFyZSB0d28gb2YgdGhlIHdvcnN0IHRoaW5ncyB0byBldmVyIHRvdWNoIHRoaXMgZWFydGguIApXaGlsZSBoZSB3YXMga25vd24gYnkgbWFueSBkaWZmZXJlbnQgc29jaWFsIGdyb3Vwcywgd29yayBjb2xsZWFndWVzLCBhbmQgc3R1ZGVudHMsIGhlIHJlbWFpbmVkIGEgZGV2b3V0IGZhbWlseSBtYW4gaGlzIGVudGlyZSA3MyB5ZWFycy4gSGlzIGZhbWlseSBhbHdheXMgY2FtZSBmaXJzdC4gClBzeWNob2xvZ2ljYWxseSwgSSBhbHJlYWR5IHdpbm5pbmcgYmVmb3JlIEkgcGxheSBhIGhhbmQgYmVjYXVzZSBJIGtub3cgdGhleSBhcmUgYWxsICJ3YWl0aW5nIGZvciBhIGhhbmQiIHRvIGJlYXQgbWUsIEkgY2FuIHRha2UgYWR2YW50YWdlLiAKQXJlIG5vdyBvbiB0aGUgc3VibWl0IHBhZ2UuIER1ZSB0byB6b25pbmcgcmVndWxhdGlvbnMsIGFuZCBwcm9wZXJ0eSBjb3N0cywgdGhlc2UgYnVzaW5lc3NlcyBhcmUgcHJldHR5IG11Y2ggbHVtcGVkIHRvZ2V0aGVyLiBTYWx0IExha2UgQ2l0eSB6b25pbmcgb25seSBhbGxvd3MgbWFzc2FnZSBwYXJsb3JzIHRoYXQgYXJlIE5PVCBjb25uZWN0ZWQgdG8gYSBtZWRpY2FsIHVzZSB0byBiZSBwbGFjZWQgd2l0aGluIGEgc3BlY2lmaWMgYXJlYSBjYWxsZWQgYSBjb21tZXJjaWFsIGNvcnJkaW9yLiAKQSBGT1JNRVIgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciB3aWxsIHNwZW5kIGF0IGxlYXN0IG5pbmUgeWVhcnMgaW4gYSBWaWN0b3JpYW4gamFpbCBhZnRlciBzY2FtbWluZyB0aGUgQ29tbW9ud2VhbHRoIEJhbmsgb2YgbmVhcmx5ICQ1OCBtaWxsaW9uIGluIGEgZnJhdWQgb2YgImJyZWF0aHRha2luZyBwcm9wb3J0aW9ucyIuCkdvdCB0byBwcm90ZWN0IHRoZSBFZG1vbnRvbiBFc2tpbW9zIGZvb3RiYWxsIGNsdWIgYW5kLCBvZiBjb3Vyc2UsIHlvdSBoYXZlIHRvIHNheTogaWYgdGhpcyBzY2VuYXJpbyBkb2VzbiBnbyB0aGUgd2F5IHdlIHdhbnQgaXQgdG8/IFlvdSBnb3QgdG8gaGF2ZSBhIFBsYW4gQiBhbmQgYSBQbGFuIEMuIEJ1dCBQbGFuIEEgaXMgdG8gaGF2ZSBNaWtlIFJlaWxseSBwbGF5aW5nIGZvciB0aGUgRWRtb250b24gRXNraW1vcy4KVGhpcyBhbHNvIHByZXNlbnRzIGFuIG9wcG9ydHVuaXR5IGZvciBiZXR0ZXIgdGFyZ2V0ZWQgYWRzLiAKR2xhcmVkIGF0IG1lLiAKV293ISBSSVAgaW5ib3guIFRoYW5rcyBmb3IgYWxsIG9mIHRoZSBmZWVkYmFjayEgVG8gYW5zd2VyIHNvbWUgb2YgeW91ciBxdWVzdGlvbnM6ClRoaXMgaXMgdGhlIG9ubHkgbXVzaWNhbDogdGhlIG1vdXRoLiAKSSBzYXcgdGhlIHN3aWZ0bmVzcyBzdHJlbmd0aCBvZiB0aGVzZSBmb3JjZXMuIFRoZXkgc2VlIGxpa2UgYW4gRWFnbGUsIHN3aWZ0IGxpa2Ugc25ha2UgYXR0YWNrIGxpa2UgZG9ncy4gCkhvbmVzdGx5LCBhbiBpbmNvbXBldGVudCBhZG1pbmlzdHJhdGlvbiBpcyBqdXN0IG9uZSBvZiB0aGUgc3ltcHRvbXMgb2YgYSBmYWlsaW5nIHNjaG9vbCwgbm90IHNvIG11Y2ggYSBjYXVzZS4gVGhlIGdvb2QgYWRtaW5pc3RyYXRvcnMgbGVhdmUgd2hlbiBtb25leSBydW5zIHNwYXJzZSBhbmQgdGhlIHdvcmsgZW52aXJvbm1lbnQgYmVjb21lcyBzdGlmbGluZyBhbmQgYXJlIGVtcGxveWVkIGVsc2V3aGVyZSwgd2hpbGUgdGhlIGluY29tcGV0ZW50IGZhaWx1cmVzIHN0YXkgYmVjYXVzZSB0aGV5IGNhbiBnZXQgam9icyBlbHNld2hlcmUuIApPbmNlIHRoYXQgaXMgZG9uZSwgcmVhZCB0aGUgbm90ZXMuIElmIHlvdSdkIGxpa2UgdG8ga25vdyB3aGF0IG5vdGVzIGFyZSBvbiB0aGUgdmlvbGluLCBhc2sgeW91ciBpbnN0cnVjdG9yIG9yIHNvbWVvbmUgeW91IGtub3cgd2hvIHBsYXlzLiBUaGUgdmlvbGluIGlzIHBsYXllZCB3aXRoIGEgYm93LiAKVGhpcy4gWGZpbml0eSdzIGdhdGV3YXkgbW9kZW0vd2lyZWxlc3Mgcm91dGVyIGNvbWJvIGlzIGFic29sdXRlIHRyYXNoLiAKRm9yIHllYXJzLCB0aGUgS2FobmF3YWtlIGhhZCByZWxpZWQgb24gY2lnYXJldHRlIHNhbGVzIGFuZCBwYXltZW50cyBmcm9tIHRoZSBmZWRlcmFsIGdvdmVybm1lbnQgdG8gZ2V0IGJ5LiBVbmRlciBOb3J0b24sIHRoZXkgYmVnYW4gdG8gbG9vayBhdCBnYW1ibGluZyBhcyBhIHdheSB0byBsaWZ0IHVwIHRoZSB0cmliZSdzIGVjb25vbWljIGZvcnR1bmVzLiBJbiB0aGUgbWlkIDE5OTBzLCBOb3J0b24gcHJvbW90ZWQgYW4gZWZmb3J0IHRvIG9wZW4gYSBsYW5kIGJhc2VkIGNhc2lubyBvbiB0aGUgcmVzZXJ2YXRpb24sIGJ1dCB0aGUgdHJpYmUgdm90ZWQgaXQgZG93bi4gCklmIHRoaXMgaGFwcGVucyBtb3JlIHRoYW4gb25jZSBpdCBwcmV0dHkgc2FmZS4gSWYgaXQgaGFwcGVucyBtb3JlIHRoYW4gdHdpY2UgSSB1c3VhbGx5IHNheSAiaXQgb24iICh0aGUgZ2FtZSwgdGhhdCBpcykuCkNhdmVhdCBpcywgeW91IGNhbm5vdCBnbyBieSB5b3Vyc2VsZiBvciB5b3UgbG9vayBsaWtlIGEgc2VyaWFsIGtpbGxlci4gClRoZSBmaWZ0aCByYW5rZWQgS3ZpdG92YSwgd2hvIHdvbiB0aGUgeWVhciBlbmQgdGl0bGUgaW4gMjAxMSwgbmV2ZXIgbG9va2VkIHNldHRsZWQgYW5kIHN0cnVnZ2xlZCB3aXRoIGhlciBzZXJ2ZSB0aHJvdWdob3V0IHRoZSAxIGhvdXIsIDI5IG1pbnV0ZXMgbWF0Y2guIEhlciBmaXJzdCBzZXJ2ZSBwZXJjZW50YWdlIHdhcyBhIG1lYWdyZSA1NSwgd2hpY2ggbWFkZSB0aGUgdGFzayBvZiBiZWF0aW5nIFN2aXRvbGluYSBuZWFyIGltcG9zc2libGUuCkFmdGVyIGEgY2VydGFpbiBwb2ludCB0aGF0IGxpZmUgYmVjb21lcyBzbyBub3JtYWxpemVkIGFuZCB0aGV5IGFyZW4gcGhhc2VkIGJ5IGl0LCBzbyBpdCBub3QgYSBzdWZmaWNpZW50IGRldGVycmVudCB0byByZSBvZmZlbmRpbmcgICBhbmQgdGhleSBtYXkgZXZlbiBwcmVmZXIgaXQgYW5kIHJlIG9mZmVuZCBzaW1wbHkgdG8gYmUgYmFjayB3aGVyZSB0aGV5IGFyZSBjb21mb3J0YWJsZS4uIAoiVGhlc2UgY2FzZXMgaGF2ZSBwcm92aWRlZCBhbiBpbnRlcmVzdGluZyByZW9yZ2FuaXphdGlvbiBjb251bmRydW0sIiByZWFkIGEgbW90aW9uIGZpbGVkIE5vdi4gMiBieSBXYWduZXIncyBiYW5rcnVwdGN5IGF0dG9ybmV5IEpvaG4gWS4gQm9uZCBJSUksIHdobyBkaWRuJ3QgcmV0dXJuIGEgdGVsZXBob25lIG1lc3NhZ2UgZm9yIHRoaXMgc3RvcnkuIApGb3IgYnV5ZXJzLCB0aGUgbXlzdGVyeSBleGlzdHMgYXQgdHdvIGxldmVscyB3aXRoIHRoZSBldm9sdmluZyB0ZWNobm9sb2d5IGl0c2VsZiwgYW5kIHdpdGggSVQgc3VwcGx5IGNoYWluIGFncmVlbWVudHMgYW5kIHByYWN0aWNlcy4gCkkgYnJva2UgbXkgZmFjZSB0b28gICBteSBjaGVla2JvbmUgZ290IGJyb2tlbiBmcm9tIGEgcHVuY2guIi4gClRoZXNlIGNvdWxkIGJlIGNoYWxrZWQgdXAgdG8gZGlmZmVyZW5jZXMgaW4gdGFzdGUsIGFzIEhhbWlsdG9uIHdhcyBvYnNlc3NlZCB3aXRoIGFyaXN0b2NyYWN5IGFuZCBub2JpbGl0eSwgcHJvYmFibHkgY29uc3VtaW5nIHRoZSB3cml0aW5nIG9mIGVmZmV0ZSBkYW5kaWVzIGFuZCBiZWxpZXZpbmcgdGhhdCBpZiBoZSBjb3VsZCB3cml0ZSBsaWtlIHRoZXkgZG8sIGhlIGNvdWxkIGJlY29tZSBvbmUgb2YgdGhlbSAod2hpY2ggd29ya2VkISkuCk1pc3MgTm9zZSBoZWxwZWQgdG8gY3JlYXRlIGEgeWVhcmx5IGZhc2hpb24gc2hvdyB3aXRoIGxvY2FsIGZhc2hpb24gZGVzaWduZXJzIGp1ZGdpbmcgYXV0aXN0aWMgY2hpbGRyZW4gZGVzaWducy4gQWxsIHNjaG9vbHMgd2VyZSBnaXZlbiB0aGUgcmVxdWlyZW1lbnRzIGZvciB3aGF0IHRoZSBqdWRnZXMgd291bGQgYmFzZSB0aGVpciBjcml0ZXJpYSBvbi4gU2V2ZXJhbCBvZiB0aGUgZGVzaWducyBnZXQgbWFkZSBhdCB0aGUgbG9jYWwgY2xvdGhpbmcgZmFjdG9yeSBhbmQgdGhlbiBzb2xkIGF0IHRoZSBtYWxsLiBUaGUgbW9uZXkgZ29lcyBzdHJhaWdodCB0byB0aGUgY2hhcHRlciBhbmQgYSBwb3J0aW9uIHRvIHRoZSBvbmUgd2hvIGRlc2lnbnMgdGhlIGFydGljbGUgb2YgY2xvdGhpbmcuIE1pc3MgTm9zZSBsb3ZlcyB0aGlzIHNob3cgc28gbXVjaCwgaXQgZmlsbHMgaGVyIHdpdGggcHJpZGUgd2hlbmV2ZXIgc2hlIGRpc2N1c3NlcyBpdC4gWW91IGNhbiBhbHdheXMgc2VlIHRoZSBzcGFya2xlIGluIGhlciBleWVzIHdoZW5ldmVyIHRoaXMgc2hvdyBpcyBnaXZlbiBhbnkgYXR0ZW50aW9uIGF0IGFsbC4gVGhlIHBhc3QgZml2ZSB5ZWFycyBvZiBkb2luZyB0aGUgc2hvdywgaGFzIGdpdmVuIGluc3BpcmF0aW9uIHRvIHRocmVlIG9mIHRoZSBmaW5hbGlzdHMgdG8gbWFrZSB0aGVpciBvd24gY2xvdGhpbmcgbGluZSBhbmQgb25lIGhhcyBnb25lIGludGVybmF0aW9uYWwuCkFyZ3VhYmx5LCB0aGVyZSBhcmUgbW9yZSBvcHBvcnR1bml0aWVzIGFzIGEgR1NPIGJ1dCB0aGV5IGFyZSBub3Qgc3BlY2lhbGlzdCBvcHBvcnR1bml0aWVzLi4gClJlYWQgdXAgb24gaG93IHRoZXkgdm90ZWQgaW4gdGhlIHBhc3QgYW5kIHdoYXQgcG9saWNpZXMgdGhleSBzdXBwb3J0ZWQuIApTd2l0Y2ggYmFjayB0byBjb2xvci4gSXQgcmVhbGl0eSBjaGVjayB0aW1lLiBJdCAyMDA5LiBUaGVyZSBhcmUgbm8gc3VwZXIgaGVyb2VzIG9yIGFkb3JhYmxlIGNoaWxkIHN0YXJzIHRvIHNhdmUgdXMuIEluc3RlYWQsIEFJRyB3aWxsIHBheSB0aGVtc2VsdmVzIHRoZSAkMTY1IG1pbGxpb24gaW4gYm9udXNlcyBiZWNhdXNlIENvbmdyZXNzLCB0aGUgUHJlc2lkZW50LCBhbmQgdGhlIFNlY3JldGFyeSBvZiB0aGUgVHJlYXN1cnksIFRpbW90aHkgR2VpdGhuZXIgYXJlIGFzIGZlY2tsZXNzIGluIHRoZSBmYWNlIG9mIGdyZWVkIGFzIHRoZSBCdXNoaWVzIHdlcmUgZW5hbW9yZWQgb2YgaXQgKHJlbWVtYmVyIHRoZSBuZW9saWJlcmFsIG1hbnRyYSBvZiAiZ3JlZWQgaXMgZ29vZCI/KS4gSXQgZGlmZmljdWx0IHRvIHJhbGx5IHBlb3BsZSBhcm91bmQgdGhlIHNsb2dhbiAiSWYgeW91IG1hZGUgeW91ciBmb3J0dW5lIG9mZiBvZiB0b3hpYyBhc3NldHMsIHRoZW4geW91IGNhbm5vdCB1c2UgdGF4cGF5ZXIgbW9uZXkgZm9yIGEgYm9udXMhIiBUaGUgc2l0dWF0aW9uIGludm9sdmVzIG51bWJlcnMgYW5kIHdlaXJkIHRlcm1zIGxpa2UgImNyZWRpdCBkZWZhdWx0IHN3YXBzLiIKTm93IGRpYWwgaXQgYmFjayB0byBQaXBlciBBdCB0aGUgR2F0ZXMgb2YgRGF3biwgR2lsbW91ciB3YXNuIGV2ZW4gaW4gdGhlIGJhbmQsIGFuZCBhbGwgdGhlIHNvbmdzIHdlcmUgd3JpdHRlbiBieSBhIGd1eSB3aG8gb25seSBwbGF5ZWQgd2l0aCB0aGUgYmFuZCBmb3IgYSBjb3VwbGUgeWVhcnMuCk91ciBnYXJhZ2Ugd2FzIGZhaXJseSBjbGVhbiBidXQgd2UgaGFkIHJhbmRvbSBzdHVmZiBpbiB0aGVyZSBmcm9tIHdoZW4gbXkgZGFkIGxlZnQsIG9uZSBvZiB0aGUgd2VpcmQgc3R1ZmYgYmVpbmcgcXVpdGUgYSBmZXcgYXF1YXJpdW1zLiBJIHRyaWVkIHRvIG1ha2UgYSB0ZXJyYXJpdW0gZm9yIHRoZSBzbmFwcGluZyB0dXJ0bGUgYW5kIHRocmV3IGEgYnVuY2ggb2YgYm9sb2duYSBpbiBpdCwgZm9yIHRoZSB0dXJ0bGUgdG8gZWF0LiBUaGUgbmV4dCBhZnRlcm5vb24sIGl0IHNhdHVyZGF5IGFuZCBzbWVsbHMgc29tZXRoaW5nIGluIHRoZSBnYXJhZ2UuIEkgbmVydm91cyB3aGVuIHNoZSBnb2VzIG91dCB0aGVyZSBhbmQgc2hlIHNjcmVhbXMuIFRoZSBib2xvZ25hIGF0dHJhY3RlZCBmbGllcyBhbWQgdGhlIHBvb3IgdHVydGxlIHdhcyBjb3ZlciBpbiBtYWdnb3RzLgpFU0ggKG1pbGRseSkuIFlvdSBzaG91bGQgaGF2ZSAob3IgaWYgeW91ciBkZWNpc2lvbiBpcyBmaW5hbCB0aGVuIHNob3VsZCBoYXZlIGhhZCkgYSBjb252ZXJzYXRpb24gd2l0aCBoZXIgYWJvdXQgaXQuIFRlbGwgaGVyIHRoYXQgeW91IHVuZGVyc3RhbmQgc2hlIGhhcyBhIGxvdCBvbiBoZXIgcGxhdGUganVzdCBub3cgYW5kIHRoYXQgaWYgc2hlIGNhbiBjb21taXQgdG8gYmVpbmcgaW4gYSB3ZWRkaW5nIHBhcnR5IHRoZW4geW91IHRvdGFsbHkgdW5kZXJzdGFuZCwgYnV0IGlmIHNoZSBzdGlsbCB3YW50cyB0byBiZSBhIGJyaWRlc21haWQgdGhlbiBzaGUgbmVlZHMgdG8gY29tbXVuaWNhdGUgYmV0dGVyIGFib3V0IHRoaW5ncyBhbmQgbWFrZSBhbiBlZmZvcnQuIFRoZW4gYWN0IG9uIGhlciByZXNwb25zZS4gU2hlIG1pZ2h0IG5vdCByZWFsaXNlIHRoZSBlZmZlY3QgaXQgaGFkIG9uIHlvdSwgYW5kIHRoaXMgaXMgbW9yZSByZWFzb25hYmxlIHRoYW4ganVzdCBraWNraW5nIGhlciBvdXQuCkFjY29yZGluZyB0byB0aGUgbGF3c3VpdCwgdGhlIGdhbWVzLCB3aGljaCB3ZXJlIGhlbGQgdHdpY2Ugd2Vla2x5IGF0ICJsdXh1cnkgbG9jYXRpb25zIiBsaWtlIFRoZSBGb3VyIFNlYXNvbnMsIFRoZSBQZW5pbnN1bGEsIHRoZSBCZXZlcmx5IEhpbGxzIEhvdGVsIGFuZCB0aGUgcGxheWVycycgb3duIGhvbWVzLCB3ZXJlIGhpZ2hseSBvcmdhbml6ZWQgYWZmYWlycy4gT25lIHdvbWFuLCBNb2xseSBCbG9vbSwgYWxsZWdlZGx5IGFjdGVkIGFzIHRoZSBjaGllZiBjb29yZGluYXRvciBvZiB0aGUgZ2FtZXMsIGFuZCBzY2hlZHVsZWQgdGhlIGFjY29tbW9kYXRpb25zLCBhbWVuaXRpZXMgKG1hc3NhZ2VzIGFuZCBhbGNvaG9sIHdlcmUgaGVhdnkgZmVhdHVyZXMpLCBmb29kLCBoaXJlZCB0aGUgZGVhbGVycywga2VwdCB0cmFjayBvZiB0aGUgcGxheWVycycgd2lucyBhbmQgbG9zc2VzIGFuZCBhcnJhbmdlZCBmb3IgdGhlIGZpbmFuY2lhbCBzZXR0bGVtZW50cyBiZXR3ZWVuIHBsYXllcnMuIApBIHQgaWwgZG9uYyB0IHBlcmR1ID8gZGlzYWl0IGwndW4uIFMnZXN0IGlsIGdhciBjb21tZSB1biBlbmZhbnQgPyBkZW1hbmRhaXQgbCdhdXRyZS4gT3UgYmllbiBzJ2VzdCBpbCBjYWNoID8gQSB0IGlsIHBldXIgZGUgbm91cyA/IFMnZXN0IGlsIGVtYmFycXUgPyBBIHQgaWwgbWlnciA/ICAgYWluc2kgY3JpYWllbnQgZXQgcmlhaWVudCBpbHMgcGxlIG1sZS4gTGUgZm91IHNhdXRhIGF1IG1pbGlldSBkJ2V1eCBldCBsZXMgdHJhbnNwZXJhIGRlIHNvbiByZWdhcmQuIApIZSBkZXNjcmliZWQgdGhpcyBpbiBvbmUgdGFsayBzcGVjaWZpY2FsbHkgd2hlcmUgaGUgdXNlcyBoaXMgc25ha2UgYW5hbG9neSBpbiB3aGljaCB0aGUgc25ha2Ugc2hvdWxkIHRyeSB0byBhdm9pZCBnb2luZyB0b28gZmFyIHRvIHRoZSBsZWZ0IChhbmQgb2ZmIHRoZSBwYXRoKSBhcyB3ZWxsIGFzIHRvbyBmYXIgb2ZmIHRoZSBwYXRoIHRvIHRoZSByaWdodC4gClBsb3BsYXllcjEyMzQ1ICAyMSBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiAKTGlrZSByb3lhbCBzaWJsaW5ncyB3YXJyaW5nIG92ZXIgYSBiaXJ0aHJpZ2h0LCBMb25nbW9udCBhbmQgTGV3aXMgUGFsbWVyIGJvdGggcm9zZSB1bmJlYXRlbiB0byB0aGUgdG9wIG9mIHRoZSA0QSBjbGFzc2lmaWNhdGlvbiBhbmQgdGhyZXcgZXZlcnl0aGluZyB0aGV5IGhhZCBhdCBldmVyeW9uZSB3aGlsZSBwcmVwIGJhc2tldGJhbGwgZmFucyB3YXRjaGVkIGZyb20gYWJvdmUgaW4gdGhlIERlbnZlciBDb2xpc2V1bSBzdGFuZHMsIGFzIHdlbGwgYXMgZnJvbSBhbGwgY29ybmVycyBvZiBDb2xvcmFkby4gRnVsbCBTdG9yeS4gCjUgb2JzdGFjbGVzIGluIFJhaWRlcnMgcGxhbm5lZCBwYXRoIHRvIFNhbiBGcmFuY2lzY28gR2lhbnRzIGJhbGxwYXJrIEZlYnJ1YXJ5IDUsIDIwMTkKV2FycmVuIEhhbW1lciBvZmZlcmluZyBwYXRpZW50IGZyaWVuZGx5IGV4cGxhbmF0aW9uIG9mIHRoZSBhbmF0b215IGFuZCBwaHlzaW9sb2d5IG9mIGZhc2NpYSBhdCB0aGUgRmFzY2lhbCBNYW5pcHVsYXRpb24gd29ya3Nob3AgaW4gRGFsbGFzLCBOb3YsIDIwMTFPa2F5IHdpdGggdGhlIEZ1enogc3BlZWNoIGZyb20gTWU6IEFzIGhlIHN0YXRlcyBiZWxvdyB0aGlzIGlzIG9mZmVyZWQgbm90IHRvIGFueXRoaW5nIHNjaWVudGlmaWNhbGx5LCBidXQgcmF0aGVyIHRvIGluc3BpcmUgZm9sa3MgdG8gZXhwYW5kIHRoZWlyIGlubmVyIGhvcml6b25zIGFuZCBvdXR3YXJkIHJlbGF0aW9uc2hpcHMgd2l0aCB0aGlzIGluc3BpcmF0aW9uYWwgYml0IG9mIGZ1bi5IRUFEUyBVUDogVGhlIEZvbGxvd2luZyB2aWRlbyBjbGlwIGluY2x1ZGVzIGltYWdlcyBvZiBodW1hbiBjYWRhdmVycywgd2hpY2ggc3VwcG9ydCB0aGUgbGVzc29uLiAKVGhvc2Ugc2V0cyBvZiBydWxlcywgYXMgd2VsbCBhcyBwb2tlciBzZWNyZXRzLCB0ZW5kIHRvIGNhdXNlIGEgbnVtYmVyIG9mIHRoZXNlIG5vcm1hbGx5IG91dHN0YW5kaW5nIGF0aGxldGVzIHRvIGJlbGlldmUgdGhlIHBva2VyIG9ubGluZSBpcyByaWdnZWQuIEFsdGhvdWdoIFRleGFzIEhvbGRlciBtdXN0IGJlIGEgZ2FtZSB0aXRsZSBvZiB0YWxlbnQsIGV2ZXJ5IHRpbWUgYSBwZXJzb25hbCBjb21wdXRlciBpcyBmaWd1cmluZyBvdXQgeW91ciBwb2tlciBoYW5kcyBhbmQgd3Jpc3RzLCBleHRyZW1lIGNhdXRpb24gc2hvdWxkIGJlIHdvcmtlZCBvdXQgZXZlbiBpZiB5b3UgdW5kZXJzdGFuZCBob3cgdG8gcGVyZm9ybSBhcyBhbiBzcGVjaWFsaXN0LiBUaGUgcmVhc29uaW5nIHJpZ2h0IGJlaGluZCB3YXkgdG9vIG1hbnkgc3Vja291dHMgaW4gb25saW5lIHBva2VyIGFuZCBwb29yIGJlYXRzIGlzIGJlY2F1c2Ugb2YgdGhlIHBva2VyIHJlcXVpcmVtZW50cyB3aGljaCBjb250cm9sIG1hbnkgZmFjZXRzIG9mIHRoZSB2aWRlbyBnYW1lLiBUaGUgZG9taW5vOTkgc2l0ZSB3aWxsIHNwcmVhZCBwb2tlciBwYWxtcyBhY2NvcmRpbmcgdG8gYSBtYXRoZW1hdGljYWxseSBhbmQgc3RhdGlzdGljYWxseSB0cmFkaXRpb24gYXMgYSB3YXkgdG8gZ2l2ZSB0aGUgYXBwZWFyYW5jZSBvZiBhIGdvb2QgZ2FtZS4gSG93IHlvdSB3aWxsIHBlcmZvcm0gVGhlIHN0YXRlIG9mIFRleGFzIGhvbGRlciBvbmxpbmUgaGFzIHRpbnkgd2l0aCByZWdhcmRzIHRvIHRoZSByZXN1bHRpbmcgZW5kIHJlc3VsdCwgZXZlciBzaW5jZSB0aGUgd2Vic2l0ZSBoYXZlIHRvIGhhdmUgYSBwYXJ0aWN1bGFyIHdlbGwgYmFsYW5jZWQgc2luY2VyaXR5IHRvd2FyZCB0aG9zZSBudW1lcmljYWwgY2hhbmNlcy4gSW4gb3RoZXIgd29yZHMsIHlvdXIgaGFuZHMgaXMgbm90IGFsd2F5cyBib3VuZCB0byBlbmR1cmUgaWYgdGhlIGNoYW5jZXMgb2YgdGhlIHBva2VyIGNvZGUgcGxhbiBpcyBza2V3ZWQgaW4gb3Bwb3NpdGlvbiB0byB5b3VyIHJlYWwgbGlmZSBjaGFuY2VzLgpEbyB5b3UgbGlzdGVuIG11c2ljIGluIG90aGVyIGxhZ3VhZ2VzClNhdGFuc0xpbEN1bXJhZzY2NiAgMyw2ODkgcG9pbnRzICBzdWJtaXR0ZWQgMyBtb250aHMgYWdvClBhcnQgb2YgdGhlIHNvbHV0aW9uIHRvIHRoZSBob3VzaW5nIGNyaXNpcyBpcyBtYWtpbmcgc3VyZSBwZW9wbGUgY2FuIGdldCBhcm91bmQKMjcgbWFuYWdlbWVudCBncm91cCIgd2FzIHRhc2tlZCB3aXRoIHJldmlld2luZyB0aGUgc3VibWlzc2lvbnMgYW5kIGF3YXJkaW5nIG1vbnRobHkgYm9udXNlcyB0byB0aGUgZW1wbG95ZWVzIHdobyBwcm92aWRlZCB0aGUgbW9zdCB2YWx1YWJsZSBzdG9sZW4gaW5mb3JtYXRpb24uIEJpYW5udWFsIGF3YXJkcyBhbHNvIHdlcmUgbWFkZSBhdmFpbGFibGUgdG8gdGhlIHRvcCB0aHJlZSByZWdpb25zIHRoYXQgcHJvdmlkZWQgdGhlIG1vc3QgdmFsdWFibGUgaW5mb3JtYXRpb24uIFRoZSBwb2xpY3kgZW1waGFzaXplZCB0aGF0IG5vIGVtcGxveWVlcyB3b3VsZCBiZSBwdW5pc2hlZCBmb3IgdGFraW5nIGFjdGlvbnMgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBwb2xpY3kuCk1vc3Qgb2YgaXQgd2FzIHRoZSBzZWN1cml0eSBkZXBvc2l0cyBmb3IgdGhlIHRlbmFudHMgYnV0IEkgZGlkIHJlY2VpdmUgMSBkYXlzIHdvcnRoIG9mIHByb3JhdGVkIHJlbnQuIApQYXJlbnRzIHRoZXNlIGRheXMgYXJlIGJpdGNoaW5nIGFib3V0IGEgc2VsZiBtYWRlIHByb2JsZW0uIFNodXQgdGhlIGRvb3IsIGlnbm9yZSB0aGUgdGFudHJ1bSwgYW5kIGFmdGVyIGEgZmV3IHRpbWVzIG9mIHRoaXMgcHJvY2VzcyBiZWluZyByZXBlYXRlZCB0aGV5IGdldCB0aGUgZnVja2luZyBoaW50IHRoYXQgYSBjbG9zZWQgZG9vciBtZWFucyAiRnVjayBPZmYiLgpJdCdzIG5vdCBsb3N0IG9uIHRoZSByZWFsIGVzdGF0ZSBpbmR1c3RyeSB0aGF0IGluIHRoZSBsYXN0IHdlZWssIHR3byBsYXJnZSB0ZW5hbnRzIGhhdmUgbWFkZSBwbGFucyB0byBtb3ZlIG1vcmUgdGhhbiAxLjUgbWlsbGlvbiBzcXVhcmUgZmVldCBvdXQgb2YgdGhlIHN0YXRlICAgYW5kIG5vdCB0byBOZXcgSmVyc2V5IG9yIENvbm5lY3RpY3V0IGJ1dCB0byBDb25mZWRlcmF0ZSB0ZXJyaXRvcnkuCktlZXAgaW4gbWluZCB0aGF0IGl0J3Mgbm90IGxpa2UgdGhlcmUgaXMgYSBXYWxtYXJ0IGp1c3QgZG93biB0aGUgc3RyZWV0IGZyb20gQ2FzdGxlIEJsYWNrLCB0aGUgYnJvdGhlcnMgYXJlbid0IGdvaW5nIHRvIGJlIHJ1bm5pbmcgb3V0IG9uIHNob3BwaW5nIHRyaXBzLi4gCkNldHRlIHBycGFyYXRpb24gcydlZmZlY3R1ZXJhICBsJ2FpZGUsIGdhbGVtZW50LCBkZXMgcHIgcmFwcG9ydHMgcXVpIGF1cm9udCBiaWVuIHNvdXZlbnQgc291bGV2IGRlcyBpbnRlcnJvZ2F0aW9ucyBvdSBkZXMgY3JpdGlxdWVzLiBJbCBmYXV0IG5vdGVyIHF1ZSBjZXMgcHIgcmFwcG9ydHMgcGV1dmVudCBhcnJpdmVyIG1vaW5zIGQndW5lIHF1aW56YWluZSBkZSBqb3VycyBhdmFudCBsYSBzb3V0ZW5hbmNlLiBJbCBzZW1ibGUgcGx1cyBqdWRpY2lldXggZGUgcmVsaXJlIHNlcyB0cmF2YXV4IGVuIGFtb250LiAKVGhlIGFuaW1hdGlvbiBvZiBib3RoIHRoZXNlIGF0dGFja3MgbG9vayBzaW1pbGFyLi4gClRyYWRpbmcgaXMgdmVyeSBzZXBhcmF0ZSBmcm9tIHRoZSBjb3JlIGdhbWVwbGF5IGxvb3BzIGFuZCB0aGUgY3VzdG9taXphdGlvbiBpbiBob3cgaXQgZG9uZSBhbmQgaG93IGl0IHNldCB1cC4uIApOZXcgRGV0YWlscyBFbWVyZ2UgQWJvdXQgVmVnYXMgR3VubWFuIFN0ZXBoZW4gUGFkZG9jaydzIFBhc3QKT3ZlcnZpZXcgZm9yIGtoZWx6ZWRhcgpJIGhhdmUgbmV2ZXIgaGVhcmQgaGVyIGNvbXBsYWluIGFib3V0IGhhdmluZyB0byBzcGVuZCBlbnRpcmUgZGF5cyBwbGF5aW5nLCBvciByZWNvcmRpbmcgdmlkZW9zLCBvciB5ZWxsaW5nIEJBWkFNIGluIGhlciBnZW5lcmFsIHZpY2luaXR5LiAKSSB0aGVvcml6ZSB0aGV5IHdlcmUgdG9sZCBieSBMRSB0aGF0IFNBIGRpZCBpdCBidXQgdGhleSBuZWVkZWQgYSBsZWdhbCBzZWFyY2ggd2FycmFudCB0byBlbnRlciBoaXMgcHJvcGVydHksIHNvIHRoZXkgaGFkIHRvIHByZXRlbmQgdGhpcyB3YXMgYSBtaXNzaW5nIHBlcnNvbidzIGNhc2Ugc28gdGhhdCBzaGUgY291bGQgYmUgcmVwb3J0ZWQgIm1pc3NpbmciIGFuZCB0aGV5IGNvdWxkIGhhdmUgYSBjaXZpbGlhbiBzZWFyY2ggcGFydHkgZmluZCB0aGUgUkFWLiBJdCB3YXMgYWxsIGEgTEUgc2V0IHVwIHRvIGdldCBhIHdhcnJhbnQgZm9yIEFTWSBhbmQgZnJhbWUgU0EsIGJ1dCB0aGUgZmFtaWx5IG5haXZlbHkgYmVsaWV2ZWQgdGhleSB3ZXJlIGRvaW5nIHRoZSByaWdodCB0aGluZyB0byBoZWxwIGdldCBhIHdhcnJhbnQgdG8gY2F0Y2ggd2hvIHRoZXkgcmVhbGx5IGJlbGlldmVkIHdhcyB0aGUga2lsbGVyLi4gClNldmVyYWwgb2JzZXJ2ZXJzIGhhdmUgc3RhdGVkIHRoYXQgbW9ua2V5cyBjZXJ0YWlubHkgZGlzbGlrZSBiZWluZyBsYXVnaGVkIGF0OyBhbmQgdGhleSBzb21ldGltZXMgaW52ZW50IGltYWdpbmFyeSBvZmZlbmNlcy4gCkl0IGdlbmVyYWxseSBtZWFucyB5b3UgYWN0dWFsbHkgZmFpbGVkIHdlbGwgaW4gYWR2YW5jZSBhbmQgZGlkbiByZWNvZ25pemUgaXQuLiAKVG8gcHV0IHRoYXQgaW50byBwZXJzcGVjdGl2ZTogSG9tbyBzYXBpZW5zIHJvdWdobHkgYmVjYW1lIGV4aXN0ZW50IDM1MDAwMCB5ZWFycyBhZ28uIApUaGUgb3RoZXIgdGhpbmcgSSBkb24ndCB1bmRlcnN0YW5kIGFib3V0IHRoaXMgd2hvbGUgdGhpbmcuIFlvdSBoYXZlIGtpbG9tZXRyZXMgb2YgY29hc3RsaW5lLCBsaXRlcmFsbHkgaHVuZHJlZHMgb2Yga20gb2YgdW5wcm90ZWN0ZWQgYXJlYXMsIHlvdSBoYXZlIHBsYW5lcyB0aGF0IGNhbiBkbyBzaG9ydCBob3BzLCBoZWxsIGluIGEgZmV3IHllYXJzIHdlIHdpbGwgc2VlIHRoZSBmaXJzdCBkcm9uZXMgdGhhdCBjYW4gY2FycnkgcGVvcGxlIGZvciBzaG9ydCBkaXN0YW5jZXMuCkhlIGxlYXJudCBwbGF5aW5nIHBva2VyIGluIHRoZSBtYXJrZXQgY2FmZXMuIEhlIGhhZCB3b3JrZWQgYXMgYSBzYWxlc21hbiBmb3IgYSBjb25zaWRlcmFibHkgbG9uZyBwZXJpb2Qgb2YgdGltZS4gSGUgcmVzb2x2ZWQgdG8gY29uY2VudHJhdGUgbW9yZSBvbiBwb2tlciwgYW5kIHRoZXJlZm9yZSwgaGUgb2ZmaWNpYWxseSBsZWZ0IGhpcyBqb2Igb24gMXN0IEphbnVhcnkgaW4gdGhlIHllYXIgb2YgMjAwMy4gClRoZXkgbGVhcm5lZCBob3cgdG8gdGFzdGUgZGlmZmVyZW50IHR5cGVzIG9mIGNvZmZlZSBpbiB0aGUgc2FtZSB3YXkgc29tbWVsaWVycyB0ZWFjaCBwZW9wbGUgdG8gdGFzdGUgd2luZXMgb2YgZGlmZmVyZW50IHZpbnRhZ2VzLiAiSXQgd2FzIGEgZ3JlYXQgYm9uZGluZyBhbmQgbGVhcm5pbmcgZXhwZXJpZW5jZSwiIGhlIHNheXMuLiAKTXkgZGF1Z2h0ZXIgdGhyaXZlcyBvbiBjb252ZXJzYXRpb24sIG15IG90aGVyIHNvbiBhZG1pcmF0aW9uIGZvciBoaXMgaW5nZW51aXR5L2NyZWF0aXZpdHkgYW5kIHNoYXJpbmcgZXhjaXRpbmcgZXhwZXJpZW5jZXMsIGV0YyBldGNNeXNlbGYgSSBmZWVsIGxvdmVkIGJ5IG15IGh1c2JhbmQgKHNvbWUgcGVvcGxlIGNhbGwgaXQgImJ1Y2tldCBmaWxsZWQiKSB0aHJvdWdoIGJvdGggY29udmVyc2F0aW9uIGFuZCBwaHlzaWNhbCBjbG9zZW5lc3MuIApBc2sgaWYgdGhleSBwbGFuIHRvIHJlbm92YXRlL3JlZGV2ZWxvcCB0aGUgd2hvbGUgYXBwYXJ0bWVudCBhbmQsIGlmIHNvLCB3aGV0aGVyIHlvdSByZW5vdmF0aW5nIGlzIHJlYWxseSBuZWNlc3NhcnkuIEZvciBleGFtcGxlLCBpZiB0aGV5IG9ubHkgd2FudCB0byByZXBsYWNlIHRoZSBmbG9vcmluZywgeW91IHByb2JhYmx5IHN0aWxsIG5lZWQgdG8gcmVub3ZhdGUgdGhlIHdhbGxzLiBZb3UgZ2V0IHRoZSBpZGVhLiBUaGVvcmV0aWNhbGx5LCB5b3UgaGF2ZSB0byBmdWxmaWxsIHlvdXIgZW5kIG9mIHRoZSBjb250cmFjdCwgZXZlbiBpZiB0aGV5IGRlY2lkZSB0byB0ZWFyIHRoZSBwbGFjZSBhcGFydCBhIHdlZWsgbGF0ZXIuIEluIHJlYWxpdHksIHRoZXkgbWlnaHQganVzdCBsZXQgeW91IG9mZiB0aGUgbGVhc2guClRoZXkgZm91bmQgdGhhdCB0aGUgR1JVIG9mZmljZXJzIHNlY3JldGx5IHN1cnZlaWxlZCBhbiBlbXBveWVlIG9mIHRoZSBEZW1vY3JhdGljIENvbmdyZXNzaW9uYWwgQ2FtcGFpZ24gQ29tbWl0dGVlIGFsbCBkYXkgaW4gcmVhbCB0aW1lLCBpbmNsdWRpbmcgc3B5aW5nIG9uICJoZXIgaW5kaXZpZHVhbCBiYW5raW5nIGluZm9ybWF0aW9uIGFuZCBvdGhlciBwZXJzb25hbCB0b3BpY3MuIiBUaGV5IHNob3dlZCB0aGF0ICJHdWNjaWZlciAyLjAsIiB0aGUgc3VwcG9zZWQgbG9uZSBoYWNrZXIgYmVoaW5kIHRoZSBETkMgaGFjaywgd2FzIGluIGZhY3QgbWFuYWdlZCBieSBhIHNwZWNpZmljIEdSVSB1bml0LCBhbmQgZXZlbiByZWNvbnN0cnVjdGVkIHRoZSBpbnRlcm5ldCBzZWFyY2hlcyBtYWRlIHdpdGhpbiB0aGF0IHVuaXQgd2hpbGUgYSBHUlUgb2ZmaWNlciB3aXRoIHNob2RkeSBFbmdsaXNoIHNraWxscyB3YXMgZHJhZnRpbmcgdGhlIGZpcnN0IHBvc3QgYXMgR3VjY2lmZXIgMi4wLiAKU291bmRzIGxpa2UgeW91IGdvdCBhIGxvdCBvZiBpbnZlc3RpZ2F0aW9uIHRpbWUgdW5kZXIgeW91ciBiZWx0IQpJZiB0aGVyZSBpcyBhIFVTIHJpZGVyIGlsbCByb290IGZvciB0aGVtLiBCdXQgdGhlcmUgaGFzIG5vdCBiZWVuIGEgY29tcGV0aXRpdmUgb25lIGZvciBhIHdoaWxlLiBXYXkgbW9yZSBpbiB0aGUgMDAgYW5kIGVhcmxpZXIgKGFsdGhvdWdoIEkgZGlkIG5vdCBzdGFydCB3YXRjaGluZyB1bnRpbCAyMDA0KS4gSGF5ZGVuLCBFZHdhcmRzLCBTcGllcywgSG9wa2lucy4KRXZlbiB0aGUgcG9rZXIgZmFucyBoYXZlIGFsc28gYmVjb21lIGludGVyZXN0ZWQgYWJvdXQgdGhlc2UgcG9rZXIgcGllY2VzLiBJbiB0aGlzIHNpdHVhdGlvbiwgdGhlIHBva2VyIG1lcmNoYW50cyBoYXZlIGJlY29tZSBpbnRlcmVzdGVkIGluIHNlbGxpbmcgdGhlIHBva2VyIHByb2R1Y3RzIHRvIHRoZSBwb2tlciBsb3ZlcnMgYXJvdW5kIHRoZSB3b3JsZC4gVGhleSBoYXZlIGFscmVhZHkgc3RhcnRlZCBzZWxsaW5nIHRoZSBwb2tlciBwcm9kdWN0cyB0byB0aGUgcG9rZXIgcGxheWVycyBhbmQgcG9rZXIgZmFucyBhcm91bmQuIApUaGUgV29ybGQgUG9rZXIgVG91ciBoYXMgYWRkZWQgYSBsb3Qgb2YgY2FzaCBhbmQgZ3JlYXQgcHJpemVzIHRvIHRoZSByYWtlIGZyZWUgV1BUIFRvdXJuYW1lbnQgb2YgQ2hhbXBpb25zLCBhbmQgdGhlcmUgaXMgZXZlbiBtb3JlIHRvIGNvbWUuIApIZSByZWxlYXNlZCBzb21lIHNvbGlkIGhpdHMsIHBlb3BsZSBsb3ZlZCBpdC4gClJlYWwgd2luZSwgZXhjZWxsZW50IHZhbHVlLiQxOS45OSAgODgvMTAwSSBndWVzc2luZyBmZXcgb2YgeW91IGhhdmUgdGFzdGVkIGEgQ3JvYXRpYW4gd2luZSwgeWV0IHRoZXkgaGF2ZSBiZWVuIG1ha2luZyB3aW5lIHNpbmNlIHRoZSBlYXJsaWVzdCBvZiB0aW1lcy4gClRoZSByZXN0IG9mIHRoZSBzdGl0Y2hlcyBjYW4gYmUgcGlja2VkIHVwIGVhc2lseSB0b3AgZG93bi4KRHVyaW5nIHRoaXMgZmlyc3Qgcm91bmQgaWYgYSBwbGF5ZXIgd2lzaGVzIHRvIHJhaXNlIHRoZSBhbW91bnQgb2YgdGhlIHJhaXNlIGlzIG5vdCBkb3VibGUgYnV0IGVxdWFsIHRvIHRoZSBhbW91bnQgb2YgdGhlIG1pbmltdW0gYmV0IGZvciB0aGF0IGdhbWUuIApXaGVuIFN1c2FuIEJveWxlIGNhbWUgb24gVFYgb24gQnJpdGFpbiBnb3QgdGFsZW50LiBJIHdhcyAxMiBhbmQgdGhvdWdodCBzaGUgd291bGQganVzdCBiZSB0aGUgY3JhenkgbGFkeSB0aGF0IGNvdWxkbiBzaW5nIGFuZCB3YXMgZ29pbmcgdG8gbWFrZSBhIGZvb2wgb2YgaGVyc2VsZi4gVGhlbiBzaGUgb3BlbmVkIGhlciBtb3V0aCBhbmQgYmVnYW4gdG8gc2luZyBhbmQgSSByZW1lbWJlciB0aGlua2luZyBJIGdvdCB0aGF0IHRvdGFsbHkgd3JvbmcgSXQgd2FzIHRoZSBmaXJzdCB0aW1lIEkgaGFkIGJlZW4gZ29ic21hY2tlZCBieSBhIGp1ZGdlIGEgYm9vayBieSBpdHMgY292ZXIgVGhlIHdob2xlIGF1ZGllbmNlIHdhcyBzaG9ja2VkIHRvby4uIApMJ3VvbW8gIHBhcnRlIGRlbGwnVW5pdmVyc28gZSBpIHBpYW5ldGksIGNvbiBpbCBsb3JvIHNpbWJvbGlzbW8sIGZhbm5vIHBhcnRlIGRpIHF1ZWxsYSBjaGUgSnVuZyBkZWZpbml2YSAiTGVnZ2UgZGVsbGEgc2luY3JvbmljaXQiLiBNZW50cmUgbCdhbnRpY28gRXJtZXRlIFRyaXNtZWdpc3RvIHBhZHJlIGRlbGxhIGZpbG9zb2ZpYSBlcm1ldGljYSwgZGlzc2U6ICJDaSBjaGUgIGluIGJhc3NvLCAgdWd1YWxlIGEgY2kgY2hlICBpbiBhbHRvOyBlIGNpIGNoZSAgaW4gYWx0bywgIHVndWFsZSBhIGNpIGNoZSAgaW4gYmFzc28sIHBlciBjb21waWVyZSBsZSBvcGVyZSBtZXJhdmlnbGlvc2UgZGVsbCd1bmljYSBjb3NhIi4gCiJZb3UgY2FuIGdldCB0b2dldGhlciBhcm91bmQgYSB0YWJsZSBmb3IgdHdvIHRvIHRocmVlIGhvdXJzIGF0IGEgdGltZS4gIkEgbG90IG9mIGVudGVydGFpbm1lbnQgaW4gb3VyIHNvY2lldHkgaXMgcGFzc2l2ZS4gV2Ugd2F0Y2ggdGVsZXZpc2lvbiBvciBhIG1vdmllLiAKT2YgY291cnNlLCBhbGwgb2YgdGhhdCBpcyBvcmJpdGluZyB0aGUgU3VuLiBUaGVyZSBhcmUgcGxlbnR5IG9mIDMgcGx1cyBvcmJpdHMgaW4gdGhlIHNvbGFyIHN5c3RlbTogZXZlcnkgcGxhbmV0IHdpdGggbW9vbnMgaXMgb3JiaXRpbmcgdGhlIFN1biwgYW5kIGhhcyBtb29ucyBvcmJpdGluZyBpdC4gClRoZWlyIHBvc2l0aW9uIGlzIGF0IG9kZHMgd2l0aCB0aGUgTGliZXJhbCBnb3Zlcm5tZW50LCB3aGlsZSB0aGUgc3RhdGUgdG9wIGhvc3BpdGFsaXR5IGdyb3VwIHNheXMgaXQgd2lsbCBjb3N0IGpvYnMuIExvdmUgWW91ciBMb2NhbCAgIGEgZ3JvdXAgcHVycG9ydGluZyB0byByZXByZXNlbnQgcHVicyBhbmQgY2x1YnMgICBwdWJsaXNoZWQgYW4gb25saW5lIHZpZGVvIG9uIFRodXJzZGF5IGluIG9wcG9zaXRpb24gdG8gTGFib3IgcG9saWN5LiAKV2l0aGluIHdhbGtpbmcgZGlzdGFuY2Ugb2YgdGhlIEdpbGEgUml2ZXIgQXJlbmEgV2VzdGdhdGUgQ2l0eSBDZW50ZXIsIGVuam95IGVhc3kgYWNjZXNzIHRvIGRvd250b3duIFBob2VuaXggR2xlbmRhbGUgYXR0cmFjdGlvbnMuCkJ1dCBtb21lbnRzIGFmdGVyIHNoZSB3YXMgZGVjbGFyZWQgdGhlIHdpbm5lciwgc2hlIHdhcyBwaHlzaWNhbGx5IHN0cmlwcGVkIG9mIGhlciB3aW5uZXIncyBzYXNoIGJ5IGZlbGxvdyBjb250ZXN0YW50IEFsaW5lIFV2YSBmcm9tIFJpbyBHcmFuZGUgRG8gU3VsLCBpbiB0aGUgc291dGggb2YgQnJhemlsLgpZb3UgYXJlIHJpZ2h0LCBpdCBpcyBzaW1wbHkgbm90IHRoZSBjYXNlIHRoYXQgYWxsIG5vbiB3aGl0ZXMgYXJlIHdvcnNlIG9mZiB0aGFuIGFsbCB3aGl0ZXMuIEl0IGlzIGFsc28gdGhlIGNhc2UgdGhhdCBhbGwgcGVvcGxlIGZhY2UgaGFyZHNoaXBzLiBJdCBpcyBub3QgdGhlIGNhc2UgdGhhdCB3aGl0ZXMgYW5kIG5vbndoaXRlcyBmYWNlIHRoZSBleGFjdCBzYW1lIHNldCBvZiBoYXJkc2hpcHMsIGFuZCBpdCBpcyBkZW1vbnN0cmFibHkgdHJ1ZSB0aGF0IG5vbndoaXRlcyBmYWNlIGhhcmRzaGlwcyB0aGF0IHdoaXRlcyBkbyBub3QgaW4gdGhlIGZvcm0gb2YgcmFjaXN0IGluc3RpdHV0aW9ucy4uIApXaWxsIGhlbHAuLiAKWWVzLCBJIGdldCBpdCBndXlzLiBCdXQgSSBkb24ndCB0aGluayB5b3UncmUgZ29pbmcgdG8gZ2V0IHRvIHdoZXJlIHlvdSB3YW50IHRvIGJlIHdvcmtpbmcgYSBuaW5lIHRvIGZpdmUgam9iLiBJIHRydWx5IGJlbGlldmUgc3VjY2VzcyBjb21lcyBiZWZvcmUgbmluZSBhbmQgYWZ0ZXIgZml2ZS4uIApFaW4gZ2x0aWdlciwga2FudG9uYWxlciBUYXJpZiBmciBkaWUgSFNLIHVuZCBlaW5lciBmciBhbGxlIGFuZGVyZW4gS2Fzc2VuIGRpZSBkZXIgU2FudGVzdWlzc2UgYW5nZXNjaGxvc3NlbiBzaW5kLkRpZXNlcyBTcGllbGNoZW4ga2VubmVuIHdpciBkb2NoPyBEaWUgSFNLIHdpcmQgZGFubiBlaW5lbiBhbmdlcGFzc3RlbiBUYXJpZiB2b24gMy40MCBiaXMgMy42MCBhbmJpZXRlbiB1bSBzaWNoIGRhbm4gbmFjaCBsYW5nZW0gS2FtcGYgYmVpIDMuNzAgYmlzIDMuOTAgenUgZWluaWdlbi4gClBob3NwaG9zaWRlcml0ZWxvdmVyIHUKVGhlcmUgYXJlIHNldmVyYWwgZmFjdG9ycyB0byBiZSBjb25zaWRlcmVkIHdoaWxlIGNob29zaW5nIHlvdSBvbmxpbmUgcG9rZXIgcGxheWdyb3VuZC4gCkkgaGFkIGJlZW4gZWFnZXJseSBhbnRpY2lwYXRpbmcgYSByZWQgaXRlbSBmb3IgZGF5cy4gClRyZWF0IGl0IGxpa2UgYSBob2JieSBhbmQgeW91IHdpbGwgZ28gYnJva2UuIEkgY29sbGVjdGVkIEF1Z3VzdCdzIHJlbnQgYW5kIEkgcHV0IHRoZSB3aG9sZSB0aGluZyBpbnRvIHVwZ3JhZGVzIGluIHRoZSB1bml0IEkgbW92ZWQgaW50by4gCkNlbnRyYWwgSW50ZWxsaWdlbmNlIEFnZW5jeQpJc3N1ZSBpcyB0aGF0IHlvdSBqdXN0IG5lZWQgdG8gaGF2ZSBhIG5vbiBuZWdhdGl2ZSBiYWxhbmNlIHRvIG5vdCBiZSBzdXNwZW5kZWQuIFNvIHRlY2huaWNhbGx5IHNvbWVvbmUgY291bGQgc3RhcnQgd2l0aCB6ZXJvIGZ1bmRzIHRvIGJlIGVsaWdpYmxlIHRvIHBsYXkgYW5kIGRyb3AgJDgwMCBpbiBvbmUgbmlnaHQgYW5kIHJlZnVzZSB0byBwYXkgYmVmb3JlIGEgc3VzcGVuc2lvbiBpcyBwbGFjZWQgZm9yIGhhdmluZyBhIG5lZ2F0aXZlIGJhbGFuY2UuIFdoZW4gdGhhdCBoYXBwZW5zIGF0dGVtcHRzIGFyZSBtYWRlIGJ5IHRoZSBwZXJzb24gd2hvIGludml0ZWQgdGhhdCBwZXJzb24gaW50byB0aGUgbGVhZ3VlIHRvIGNvbGxlY3QuIApBIEJ1c2luZXNzIFBoZW5vbWVub25Gcm9tIGEgYnVzaW5lc3MgcGVyc3BlY3RpdmUsIHRoZSBjb21wYW55IGFjaGlldmVkIHJlbWFya2FibGUgc2FsZXMgaW5jcmVhc2VzIGluIGEgdmVyeSBzaG9ydCBzcGFjZSBvZiB0aW1lLCBhbmQgdGhleSBjbGV2ZXJseSBtb3ZlZCB1cHN0cmVhbSBhbmQgZG93bnN0cmVhbSB0byBjb250cm9sIGJvdGggdGhlIG1hbnVmYWN0dXJlIGFuZCB0aGUgc3BlZWQgb2Ygc3VwcGx5IGluIG9yZGVyIHRvIHJldGFpbiB0aGVpciBpbmZsdWVuY2Ugb24gdGhlIHByb2R1Y3QuIEEgc3Vic2lkaWFyeSBidXNpbmVzcyBjYW1lIGluIHRoZSBmb3JtIG9mIEppYmJpdHosIGxpdHRsZSBpdGVtcyBvZiBqZXdlbGxlcnkgZGVzaWduZWQgdG8gZml0IHRoZSBob2xlcyBpbiBDcm9jcywgdHlwaWNhbGx5IGluIGhpcHB5IHBhdHRlcm5zIHN1Y2ggYXMgZmxvd2VycyBvciBwZWFjZSBzaWduczYuIFRoZSBmYXNoaW9uIGluZHVzdHJ5IGlzIG5vdyB3YXRjaGluZyB0byBzZWUgd2hldGhlciB0aGUgd2hvbGUgQ3JvYyBtYXJrZXQgcmVhbGx5IGlzIGp1c3QgYSBvbmUgc2hvZSB3b25kZXIgb3IgaWYgdGhpcyBpcyBhIHByb2R1Y3Qgd2l0aCBsZWdzLgpXaXIgc2luZCBiZXJ6ZXVndCBkYXZvbiwgZGFzcyBpbSBnZXNjaGxvc3NlbmVuIEtobHNjaHJhbmsgZGFzIExpY2h0IGF1cyBpc3QsIGFiZXIgd2lyIGtubmVuIGVzIG5pY2h0IGJlcnByZmVuLiBEZW5uIHdlbm4gd2lyIGRpZSBUciBhdWZtYWNoZW4gdW0gbmFjaHp1Z3Vja2VuLCBpc3QgZGFzIExpY2h0IHdpZWRlciBhbi4gTWFuIG1zc3RlIHNpY2ggc2VsYnN0IGltIEtobHNjaHJhbmsgYmVmaW5kZW4gdW5kIGRpZSBUciBoaW50ZXIgc2ljaCB6dSBtYWNoZW4uIApGaXJzdCBiZSBzdXJlIHRoYXQgeW91IGFyZSBkZWZpbml0ZWx5IGRlYWxpbmcgd2l0aCBhIHBsYXllciB0aGF0IGhhcyBhIHByb3BlbnNpdHkgdG8gYmx1ZmYsIHlvdSB3aWxsIGZpbmQgb3RoZXIgcGxheWVycyB0aGF0IHdpbGwgbmV2ZXIgdGhpbmsgb2YgYmx1ZmZpbmcgYXQgYWxsIGFuZCBvbmx5IHBsYXkgdGhlaXIgY2FyZHMgZGVhbHQgdG8gdGhlbS4uIApXaGVuIHRoZSBhY2Ugc2hvd2VkIHVwLCBoZSBqdXN0IHN1ZGRlbmx5IGFsbCBpbi4gVXN1YWxseSBpZiB5b3UgcGxhbm5lZCB0byBibHVmZiwgeW91IHdvdWxkIGJldCBiZWZvcmUgcmVwcGluZyBzb21ldGhpbmcsIGJ1dCBoZSBkaWRuIHRyeSB0byBoaWRlIGl0IGF0IGFsbC4gTGFzdGx5LCB0aGUgcmlzayAoSGVyIHRvdXJuYW1lbnQgbGlmZSkgd2FzbiB3b3J0aCB0aGUgcG90IHZhbHVlIHNpbmNlIGEgbG90IG9mIHBsYXllcnMgbG9vayBhdCB0aGVpciByaXNrIHZzLiAKQXQgdGhlIHRpbWUgb2YgaGlzIGRlYXRoLCBGb3JiZXMgbGlzdGVkIEtsdWdlIGFzIHRoZSAzNXRoIHJpY2hlc3QgQW1lcmljYW4sIHdpdGggYSB0b3RhbCBmb3J0dW5lIGV2ZW4gYWZ0ZXIgaHVuZHJlZHMgb2YgbWlsbGlvbnMgaW4gZG9uYXRpb25zIG9mICQ2LjUgYmlsbGlvbi4uIApXZSBkb24ndCBoYXZlIGEgaG91c2UgY2xlYW5lciBvciB5YXJkIHNlcnZpY2UgYW5kIHJhcmVseSBlYXQgb3V0LCBzbyBndWVzcyB3aG8gZG9lcyBhbGwgb2YgdGhhdCBub3cuIApBbm90aGVyIG9uZSBvZiB0aGVvbmxpbmUgcG9rZXIgcnVsZXNpbiBjYXNoaW5nIG91dCBpcyBzb21lIHNpdGVzIG1heSBhc2sgeW91IHRvIGNyZWRpdCB5b3VyIGNhc2ggYmFjayBpbiB0aGUgc2FtZSB3YXkgYXMgeW91ciBkZXBvc2l0IG1ldGhvZC4gVGhpcyBtZWFucyBpZiB5b3UgZGVwb3NpdGVkIFVTJCA1MDAgZnJvbSB5b3VyIGNyZWRpdCBjYXJkIGFuZCB0aGVuIHlvdSB3aW4gVVMgJCAxLDAwMCwgdGhlIHNpdGUgbWlnaHQgdGVsbCB5b3UgaXQgd2lsbCBnaXZlIHlvdSBVUyQ1MDAgdG8geW91ciBjcmVkaXQgY2FyZCBhbmQgdGhlIFVTICQ1MDAgd2lsbCBiZSBpbiBjaGVjay4KQWxzbyBhIGZlbGxvdyBQQ09TIHN1ZmZlcmVyIGFuZCB0aGVyZSBhIG11bHRpdHVkZSBvZiB0cmVhdG1lbnRzIHRoYXQgbmVlZCB0byBiZSBldmFsdWF0ZWQuIFlvdSBsaWtlbHkgbmVlZCBib3RoIGFuIGVuZG9jcmlub2xvZ2lzdCBhbmQgYW4gT0JHWU4gdG8gaGVscCB5b3Ugb3V0IGluIHZhcnlpbmcgd2F5cy4gT25lLCBpZiB5b3UgYXJlIG5vdCB0cnlpbmcgdG8gY29uY2VpdmUsIHlvdSBtYXkgbmVlZCB0byBiZSBvbiBzb21lIGtpbmQgb2YgaG9ybW9uYWwgYmlydGggY29udHJvbCB0byBwcmV2ZW50IHlvdXIgb3ZhcmllcyBmcm9tIHRyeWluZyB0byBtYWtlIGVnZ3MgZWFjaCBtb250aCBhbmQgdGhlc2UgcG90ZW50aWFsIGVnZ3MgZmlsbGluZyB3aXRoIGFuZHJvZ2VucyB3aGVuIHRoZXkgYXJlbid0IHN1Y2Nlc3NmdWwsIGJlY2F1c2UgdGhhdCBjYXVzZXMgcXVpdGUgYSBmZXcgaXNzdWVzLiBXaGVuIHlvdSBhcmUgcmVhZHkgdG8gY29uY2VpdmUgY2hpbGRyZW4geW91IG1pZ2h0IG5lZWQgbWVkaWNhdGlvbiB0byBpbmR1Y2Ugb3Z1bGF0aW9uLCBidXQgcmVzZWFyY2ggc3R1ZGllcyBoYXZlIHNob3duIHRoYXQgYSAxMCUgcmVkdWN0aW9uIG9mIHdlaWdodCBjYW4gYWxzbyByZXN0YXJ0IG92dWxhdGlvbi4KVGVudG9ucyB1bmUgZXhwbGljYXRpb24uIApNeSBjdXJyZW50IHdvcmtwbGFjZSBkb2VzbiBjYXJlIGJ1dCBteSBpbnRlcm5zaGlwIHdhcyBhdCBhIHBzeWNoIGhvc3BpdGFsIGFuZCB3aGlsZSB0aGV5IHdlcmVuIDEwMCUgbm8gdmlzaWJsZSB0YXR0b29zLCBJIHRoaW5rIGEgZnVsbCBzbGVldmUgd291bGQgYmVlbiBmcm93bmVkIHVwb24uIApPV0wgaXMgYSBodWdlIGRpc2FwcG9pbnRtZW50IGZvciB0aGVtIGZvciBzdXJlLiBJdCBub3QgZ29pbmcgdG8gYmVjb21lIHRoZSBnaWFudCB0aGV5IHdhbnQgaXQgdG8gYmUgYW5kIGl0IGxpa2VseSB0byBiZSB3b3JzZSB0aGlzIHllYXIgYXMgcGVvcGxlIHdhdGNoIG90aGVyIHN0dWZmLgpJY2hhYm9uZCB1CkFzIHlvdSBjYW4gc2VlLCB3aGVuIHlvdSBsZWF2ZSB5b3VyIGdhbWUgeW91IHdpbGwgYmUgY3JlYXRpbmcgbG90cyBvZiBwcm9ibGVtcyBmb3IgZGlmZmVyZW50IGR1ZGVzIGFuZCB0aGF0IHdpbGwgZGlyZWN0bHkgYWZmZWN0IHRoZSByZWxhdGlvbnNoaXAgb2YgeW91ciB3aXRoIHRoZSByZXN0IG9mIHRoZSBmaXNoIGFyb3VuZCB0aGUgdGFibGUuIApZb3VyIHBhcnRuZXIgbWF5IHdhbnQgdG8gaGF2ZSBtb3JlIHNleCBvciBsZXNzIHNleCB0aGFuIGJlZm9yZSBzaGUgd2FzIHByZWduYW50LiBIZXIgZGVzaXJlIGZvciBzZXggbWF5IGNoYW5nZSBhcyBoZXIgYm9keSBjaGFuZ2VzLiAKU28geW91IGNhbiBzZWUgdGhhdCBpdCBkb2VzbiB0YWtlIG11Y2ggd2F0ZXIgbG9zcyBpbiB0aGUgYm9keSB0byBzdGFydCBhZmZlY3RpbmcgeW91ciBkaXNjcyBhbmQgdGhlIGZ1bmN0aW9uIG9mIHlvdXIgbmVydm91cyBzeXN0ZW0uCk91ciBoZXJvZXMgd2lsbCBiZSBvdXIgaGVyb2VzIGJlY2F1c2Ugd2hhdCB0aGV5IGRvIGlzIGludGFuZ2libGUgYW5kIHBlcnNvbmFsIHRvIHVzLiAKVGhlIHNlY29uZCBpcyBhIHN0cnVjdHVyZSB3aGljaCBjb250YWlucyBhbGwgdGhlIG5lZ2F0aXZlIHBhdHRlcm5zIGFuZCBkeW5hbWljcyBvZiB5b3VyIHJlbGF0aW9uc2hpcC4uIAoiSSdtIHN1cmUgdGhhdCB3ZSB3aWxsIGhhdmUgc29tZSBvcHBvc2l0aW9uLCBidXQgdGhlIG1haW4gdGhpbmcgZm9yIHBlb3BsZSBhcm91bmQgaGVyZSBpcywgdGhleSBhcmUgbG9va2luZyBmb3Igam9icywiIHNhaWQgQ2xhcmVuY2UgSmFja3NvbiwgR3JldG5hIE1heW9yLgpCdXQgbG9vay4gVGhlIGR1ZGUga2lsbGVkIGtpZHMsIHdoaWNoIGlzIGJhZCBlbm91Z2guIEJVVCB0aHJvdWdoIGRpYWxvZ3VlIHdpdGggQ29sZSBpdCdzIHN0cm9uZ2x5IGhpbnRlZCBoZSBjb3VsZCBoYXZlIHN0b3BwZWQgaXQuIApUaGF0IGludGVybmFsIHJhZ2UgaXMgcGFydCBvZiB0aGUgcmVhc29uIGhlIGJlZW4gYWNjdXNlZCBvZiBvdmVyZHJpdmluZyBhdCB0aW1lcyB0aGlzIHNlYXNvbi4gQW5kIHdoeSBoZSBpcyBkZXNwZXJhdGUgdG8gYWRkIGFub3RoZXIgQnJpdGlzaCBHcmFuZCBQcml4IHRyaXVtcGggdG8gaGlzIHRhbGx5IHRoaXMgd2Vla2VuZCBhdCBhIHRpbWUgd2hlbiBTZWJhc3RpYW4gVmV0dGVsIGxhdGVzdCBjYWtld2FsaywgaW4gVmFsZW5jaWEgdHdvIHdlZWtzIGFnbywgdG9vayBoaW0gdG8gb25lIGNhcmVlciB2aWN0b3J5IG1vcmUgdGhhbiBoZSBoYXMsIDE2IHRvIDE1LgpUcmFkaXRpb25hbCBDaGluZXNlIHBoaWxvc29waGllcyB1bmRlcnN0YW5kIHFpICggYXMgYW4gZW5lcmd5IHRoYXQgbm90IG9ubHkgYW5pbWF0ZXMgb3VyIGJvZGllcywgYnV0IHRoZSB3b3JsZCBhcm91bmQgdXMuIEhvd2V2ZXIgeW91IGNob29zZSB0byBpbnRlcnByZXQgdGhpcyB3YXkgb2YgdGhpbmtpbmcsIHRoZSBiZW5lZml0cyBvZiBpdHMgYXBwbGljYXRpb24gYXJlIGNsZWFyIHRvIG1hbnkuLiAKNyBjYXJkIHN0dWQgd29ya3MgdGhlIHNhbWUgYXMgaXRzIDUgY2FyZCBjb3VudGVycGFydCBleGNlcHQgZWFjaCBwbGF5ZXIgaXMgZGVhbHQgdHdvIGRvd24gY2FyZHMgYW5kIG9uZSBjYXJkIGZhY2luZyB1cCBiZWZvcmUgdGhlIGJldHRpbmcgYmVnaW5zLiAKRG91Z2xhcyB3cm90ZSBtYW55IG9mIHRoZSBmaXJzdCBFbnRyaWVzIHRvIGFwcGVhciBvbiBIMkcyLiBBcyB3ZWxsIGFzIGNvbGxhdGluZyBhbGwgaGlzIGNvbnRyaWJ1dGlvbnMgdG8gdGhlIHNpdGUsIHRoaXMgcGFnZSBhbHNvIGhhcyBsaW5rcyB0byBhbGwgdGhlIEFwcHJvdmVkIEVudHJpZXMgd3JpdHRlbiBieSBtZW1iZXJzIG9mIHRoZSBjb21tdW5pdHkgdGhhdCBhcmUgYWJvdXQgQWRhbXMgYW5kIGhpcyB3b3JrLiBBbW9uZyB0aGVtIHlvdSdsbCBmaW5kIEFkYW1zJyBvd24gZGlzY291cnNlcyBvbiB0aGUgR3JlYXQgQnJpdGlzaCBjdXAgb2YgdGVhLCBpbnRlcm5hdGlvbmFsIGRyaXZpbmcgbGF3cyBhbmQgZXZlbiBzb21lIGZlc3RpdmUgaGFuZ292ZXIgY3VyZXMuIApJdCBpbnZvbHZlcyBzb21lIHBzeWNob2xvZ3ksIHN1Y2ggYXMgcmVhZGluZyB0aGUgcGxheWVycyBhcm91bmQgeW91IHRvIGRlY2lkZSB3aGVuIHRvIGZvbGQgb3IgYmx1ZmYsIG9yIGtub3dpbmcgd2hlbiB0byBjYWxsIGFuIG9wcG9uZW50J3MgYmx1ZmYuIE9uY2UgeW91IHVuZGVyc3RhbmQgdGhlIGJhc2ljIHJ1bGVzLCBoYW5kcywgYW5kIHZvY2FidWxhcnkgb2YgdGhlIGdhbWUsIHN0YXJ0IGZvY3VzaW5nIG9uIHN0cmF0ZWd5IGluIG9yZGVyIHRvIG1hc3RlciBwb2tlci4uIApJdCBoYXMgbm90IGJlZW4gZW1icm9pZGVyZWQsIGFuZCBpdCBpcyB0cmFuc2NyaWJlZCBoZXJlIHdvcmQgZm9yIHdvcmQ6Qmxva2UgT25lOiBTbyBoZSByYW5nIHVwIGFuZCBzYWlkIGhlIGFuZCBTaGVpbGEgd2VyZSBnb2luZyB0byBzZWUgdGhlIG5ldyBIYXJyeSBQb3R0ZXIuQmxva2UgVHdvOk9oIEkgcmVhbGx5IHdhbnQgdG8gc2VlIHRoYXQuQmxva2UgT25lOkkgd291bGRuJ3QgYm90aGVyIGlmIEkgd2FzIHlvdS4gCk1vbmV5IG1hbmFnZW1lbnQgaW4gbW9zdCBwZW9wbGUncyBtaW5kcyBtZWFucyBxdWl0dGluZyBzaW1wbHkgYmVjYXVzZSBvZiBob3cgeW91IGFyZSBkb2luZyB0aGF0IGRheSwgb3IgY29udGludWluZyB0byBwbGF5IHNpbXBseSBiZWNhdXNlIG9mIGhvdyB5b3UgYXJlIGRvaW5nIHRoYXQgZGF5LiBJbiBvdGhlciB3b3JkcywgeW91IGFyZSBpbiBhIGdhbWUgYW5kIHlvdSBoYXZlIGxvc3QgeCBudW1iZXIgb2YgYmV0cyBzbyB5b3UgcXVpdCwgb25seSB0byBjb21lIGJhY2sgdG9tb3Jyb3cuIFdlbGwsIHRoYXQgaXMgYSBzaWxseSBjb25jZXB0IGJlY2F1c2UgaXQgaXMgYWxsIG9uZSBnYW1lLiAKRWRtb250b24gY291bGQgYmVjb21lIGEgbWFqb3IgY2VudHJlIGZvciBkZXZlbG9waW5nIHdheXMgdG8gdXNlIHRoZSBhcnRpZmljaWFsIGludGVsbGlnZW5jZSAoQUkpIHRoYXQgd2lsbCBwcm9iYWJseSBkcml2ZSB0aGUgd29ybGQgbmV4dCBpbmR1c3RyaWFsIHJldm9sdXRpb24sIGEgdG9wIHNjaWVudGlzdHMgaW4gdGhlIGZpZWxkIHNheXMuCkJ1dCBoZXksIHdlJ3JlIHRhbGtpbmcgYWJvdXQgaG93IHJlbGlnaW91cyBwZW9wbGUgdmlldyBzY2llbmNlIGhlcmUsIGFuZCByZWxpZ2lvdXMgcGVvcGxlIGFyZSBhbGwgdG8gZWFnZXIgdG8gcHJlc3VwcG9zZSB0aGluZ3MgZm9yIHdoaWNoIHRoZXJlIGlzIG5vIGV2aWRlbmNlLiAKVGhlIHBob3RvIG9mIGhpbSBzdGFuZGluZyB3aXRoIGhpcyBwb3N0ZXIgdGhhdCBtb3JuaW5nIGlzIGhlYXJ0YnJlYWtpbmcuIApJdCB3YXMgT0sgYnV0IG5vdCBhcyBob3QgYXMgSSB0aG91Z2h0IGl0IHdvdWxkIGJlLiBJIHN1cmUgaXQgd291bGQgaGF2ZSBiZWVuIGhvdHRlciBpZiBib3RoIHdvbWVuIHdlcmUgc2V4eS4gCkkgc2V0IHRoZSBjYW1lcmEgb24gdG9wIG9mIG15IGRlc2sgYW5kIHNldCBkb3duIHRoZSBmaXJzdCBzaGVldCBvZiBwYXBlci4gClRob3VnaCB0aGUgcmVjb3JkIHdhcyBhIGNvbW1lcmNpYWwgZmFpbHVyZSB1cG9uIHJlbGVhc2UgYW5kIHdhcyBhbG1vc3QgZW50aXJlbHkgaWdub3JlZCBieSBjb250ZW1wb3JhcnkgY3JpdGljcyxUaGUgVmVsdmV0IFVuZGVyZ3JvdW5kIE5pY29pcyBub3cgd2lkZWx5IHJlY29nbml6ZWQgYXMgb25lIG9mIHRoZSBncmVhdGVzdCBhbmQgbW9zdCBpbmZsdWVudGlhbCBhbGJ1bXMgaW4gdGhlIGhpc3Rvcnkgb2Zwb3B1bGFyIG11c2ljLgpJIHdvbmRlciB3aGF0IHNoZSBoYWQgdGhvdWdodCBvZiBtZS4gCkluIHRoaXMgYXJ0aWNsZSwgd2UnbGwgbGVhcm4gYWJvdXQgd2hhdCBjb25zdGl0dXRlcyByZWFsaXR5IFRWIHRvZGF5LCB0aGUgdHlwZXMgb2YgcmVhbGl0eSBwcm9ncmFtcywgd2hlbiB0aGV5IGdvdCB0byBiZSBzbyBwb3B1bGFyICAgYW5kIGlmIHRoZXkncmUgYWxsIGFzICJyZWFsIiBhcyB0aGV5IGNsYWltIHRvIGJlLiAKVGhlbiB0cnkgdG8gcGFzcyBzb21lIHdlaXJkIGh5YnJpZCBjYWxsZWQgInRoZSBwdWJsaWMgb3B0aW9uLCIgbGV0IHRoZSBSZXB1YmxpY2FucyBhY2N1c2UgeW91IG9mIGJlaW5nIENvbW1pZXMsIGxldCBodWdlIGluc3VyYW5jZSBhbmQgZHJ1ZyBjb21wYW5pZXMgc2V0IHRoZSB0ZXJtcyBvZiB0aGUgZGViYXRlLCBhbmQgZW5kIHVwIHdpdGggYSBiaWxsIHRoYXQgd2lsbCBwbGVhc2Ugbm8gb25lLCBidXQgd2lsbCBiZSBzb2xkIHRvIHRoZSBBbWVyaWNhbiBwdWJsaWMgYXMgInN3ZWVwaW5nIiBhbmQgImhpc3RvcmljYWwuIgpXaHkgQml0Y29pbiBhbmQgQ3J5cHRvY3VycmVuY2llcyBhcmUgQmVjb21pbmcgSW5jcmVhc2luZ2x5IFBvcHVsYXIgd2l0aCBPbmxpbmUgQ2FzaW5vcwpUaGlzIGlzIGFsb3QgZWFzaWVyIHRoYW4gaXQgc2VlbXMuIEkgcmVjb21tZW5kIGdvaW5nIHRvIFNhaW50IERlbmlzIHRvIGNvbXBsZXRlIHRoaXMuIEFsbCB5b3UgaGF2ZSB0byBkbyBpcyB3aW4gYSByb3VuZCwgbm90IGEgZ2FtZS4gCk1hcmtldGluZyBleGVjdXRpdmVzIHdobyBjb250cm9sIHRoZSBidWRnZXRzIG9mIHRoZSBuYXRpb24ncyBsYXJnZXN0IGFkdmVydGlzZXJzIGFyZSBpbiBPcmxhbmRvIHRoaXMgd2VlayBmb3IgdGhlIEFzc29jaWF0aW9uIG9mIE5hdGlvbmFsIEFkdmVydGlzZXJzIGFubnVhbCAiTWFzdGVycyBvZiBNYXJrZXRpbmciIGNvbmZlcmVuY2UuIApKZSBsdWkgciBkIHF1ZSBqZSBuZSB2b3VsYWlzIHBhcywgcXVlIGplIHZvdWxhaXMgcXUgYXJyIGRlIG1lIHRvdWNoZXIuIElsIGNvbnRpbnVhaXQuIApKZSBwZXV4IGNvbnN1bHRlciBtb3llbm5hbnQgdW5lIHBldGl0ZSBvYm9sZSBjYXIgbGVzIGRndHMgZGUgbGEgY2l2aWxpc2F0aW9uIG1vZGVybmUgc29udCB0cnMgY2FsYW1pdGV1eCBxdWkgbnVpc2VudCBncmF2ZW1lbnQgIGwnaGFybW9uaWUgc29jaWFsZSBtYWlzIGplIHJhcHBlbGxlIHF1ZSBqZSBuZSBkaXNwb3NlIHBhcyBkZSBiYWd1ZXR0ZSBtYWdpcXVlLiBJbCBuJ3kgYSBndXJlIHF1J3VuIHByb2JsbWUgYXUgc3VqZXQgZHVxdWVsIGplIHJpc3F1ZSBkJ3RyZSBkc2FybSBjJ2VzdCBsJ2phY3VsYXRpb24gcHJjb2NlLkplIHByb2ZpdGUgZGUgbCdvY2Nhc2lvbiBwb3VyIHJlcGFybGVyIGRlIGwnQW5lcm9zLiAKTXkgZmF2b3JpdGUgYml0IGlzIHRoZSBCbGFjayBCYWxzYW0vVGVubmV0IE1vdW50YWluIGFyZWEgZnVydGhlciBzb3V0aCBieSB0aGUgcGFya3dheSwgd2hpY2ggaXMgZXhwb3NlZCBhbmQgc2NydWJieSwgMzYwIGRlZ3JlZSB2aWV3cyAod2hpY2ggYWxzbyBtZWFucyB3aW5keSBhbmQgY29sZCkuIApLb3R0bWV5ZXIgZGVsaXZlcmVkIG9uZSBvZiB0aGUgbWFpbiBhZGRyZXNzZXMgYXQgYSBzZWN0aW9uYWwgbWVldGluZyBvZiB0aGUgV2lzY29uc2luIEVkdWNhdGlvbiBBc3NvY2lhdGlvbiBjb252ZW50aW9uLiBIZSB1cmdlZCB0ZWFjaGVycyBub3QgdG8gYmUgZGVjZWl2ZWQgYnkgdGhlIHB1cGlscyAid2hvIHdvdWxkIGxlYXJuIHRvIHJlYWQgaWYgdGhleSBuZXZlciBzYXcgYSBzY2hvb2wgb3IgYSB0ZWFjaGVyLiIgUmVhZGluZywgaGUgc2FpZCwgaXMgYW4gYXJ0aWZpY2lhbCwgY29tcGxleCBza2lsbCwgYW5kIHRoZXJlIGFyZSB0b28gbWFueSBjaGlsZHJlbiB3aG8sIGJlY2F1c2Ugb2YgdGVhY2hpbmcgZGVmaWNpZW5jaWVzLCBoYXZlIHRyb3VibGUgZnJvbSB0aGUgdGltZSB0aGV5IHJlYWNoIHRoZSBmb3VydGggZ3JhZGUgInRvIHRoZSB0aW1lIHRoZXkgZ2V0IGEgd29yayBwZXJtaXQgdG8gZ2V0IGF3YXkgZnJvbSBib29rcy4iIEhlICBzYWlkIHRoZSBkaWZmaWN1bHQgcHJvYmxlbSBmYWNlZCBieSB0ZWFjaGVycyBpbiBncmFkZSBzY2hvb2xzIGlzIHRoZSBkaWZmZXJlbmNlIGluIHJlYWRpbmcgYWJpbGl0eSBvZiBjaGlsZHJlbiBJbiB0aGUgc2FtZSBncmFkZS4gTmVocnUgVGFja2xlcyBEb21lc3RpYyBJc3N1ZSBvZiBJbmRpYSdzIENhdHRsZSBTUEVBS0VCIFRVRVNEQVkgICBSZXAuIApSZWNvcmRzIHNob3cgdGhhdCBFcHN0ZWluIHdhcyBhIGtleSBmZWRlcmFsIHdpdG5lc3MgaW4gdGhlIGNyaW1pbmFsIHByb3NlY3V0aW9uIG9mIHR3byBwcm9taW5lbnQgZXhlY3V0aXZlcyB3aXRoIEJlYXIgU3RlYXJucywgdGhlIGdsb2JhbCBpbnZlc3RtZW50IGJyb2tlcmFnZSB0aGF0IGZhaWxlZCBpbiAyMDA4LCB3aG8gd2VyZSBhY2N1c2VkIG9mIGNvcnBvcmF0ZSBzZWN1cml0aWVzIGZyYXVkLiBFcHN0ZWluIHdhcyBvbmUgb2YgdGhlIGxhcmdlc3QgaW52ZXN0b3JzIGluIHRoZSBoZWRnZSBmdW5kIG1hbmFnZWQgYnkgdGhlIGV4ZWN1dGl2ZXMsIHdobyB3ZXJlIGxhdGVyIGFjcXVpdHRlZC4gSXQgaXMgbm90IGtub3duIHdoYXQgcm9sZSwgaWYgYW55LCB0aGUgY2FzZSBwbGF5ZWQgaW4gRXBzdGVpbidzIHBsZWEgbmVnb3RpYXRpb25zLgpJbiBtZWV0IHNpbmdsZXMgYXJvdW5kIG1lIDE5NjEsIEdsZW4gQ2FtcGJlbGwgcmVsZWFzZWQgaGlzIHZlcnNpb24gYXMgYSBzaW5nbGUuIApTb21ld2hhdCBzaW1pbGFyLCBidXQgc2VlIGlmIHRoZXJlIGEgc3VicmVkZGl0IGZvciB0aGUgZ2VucmUgb2YgbXVzaWMgeW91IGxvb2tpbmcgZm9yLiBPZnRlbiBJIGZvdW5kIHRoYXQgd2hpbGUgSSB0aG91Z2h0IGEgYmFuZCB3YXMgc3VwZXIgdW5pcXVlIGJlY2F1c2UgSSBuZXZlciBoZWFyZCB0aGUgc291bmQgYmVmb3JlLCB0aGVyZSBhIHdob2xlIGdlbnJlIHRoYXQgZXhpc3RzIHRoYXQgSSBqdXN0IGhhZG4gY29tZSBhY3Jvc3MgeWV0LiAKVGhlIHRoaW5nIHRoYXQgZ2V0cyBtZSBhYm91dCBUZWQgZXZlcnkgdGltZSBpcyBXYWhsYmVyZyBjb21wbGV0ZSBjb21taXRtZW50IHRvIGhpcyByb2xlLiBIZSBuZXZlciBmb3IgYSBzaW5nbGUgbWludXRlIHdhdmVycyBpbiBzZWxsaW5nIFRlZCBhcyBhIHJlYWwgcGVyc29uLiBUaGF0IHdvdWxkIGhhdmUgZGVzdHJveWVkIHRoZSBtb3ZpZSwgb2YgY291cnNlLCBidXQgaGlzIGFic29sdXRlIGNsYXJpdHkgcmVhbGx5IG1ha2VzIHRoZSBtb3ZpZS4gCkRvZXMgYW55Ym9keSBlbHNlIHJlbWVtYmVyIGJhY2sgd2hlbiBXb29kbGV5IHdhcyBzdHJhaWdodCB1cCBkdWNraW5nIEhlY3RvciBMb21iYXJkIGFuZCBzYXlpbmcgaGUgcmVmdXNlZCB0byBmaWdodCBoaW0gYmVjYXVzZSB0aGV5IHdlcmUgdGVhbW1hdGVzIGFuZCBIZWN0b3Igd2FzIHB1YmxpY2x5IHNheWluZyBoZSBoYXZlIG5vIHByb2JsZW0gZmlnaHRpbmcgV29vZGxleSBhbmQgdGhleSBub3QgdGhhdCBjbG9zZT8gVGhpcyB3YXMgb2J2aW91c2x5IGJlZm9yZSBIZWN0b3IgZmVsbCBvZmYgYW5kIHdhcyBzdGlsbCBhIGZyaWdodGVuaW5nIG1hdGNodXAuIApXZSBsb29rIGJhY2sgYXQgb3VyIGFuY2VzdG9ycywgYmVjYXVzZSB3ZSByZXNwZWN0IG90aGVyIGN1bHR1cmVzIG11Y2ggYmV0dGVyIHRoYW4gQW1lcmljYW4gY3VsdHVyZSBoYXMgZXZlciBiZWVuIHJlc3BlY3RlZC4uIApHZWR1cmVuZGUgbWlqbiBzdGFnZSBFRkxQIDEgbW9jaHQgaWsgcGF0aW50ZW4gemVsZnN0YW5kaWcgbWFhciBvbmRlciBzdXBlcnZpc2llIGJlaGFuZGVsZW4uIE1pZGRlbHMgaGV0IHVpdHZvZXJlbiB2YW4gZWVuIHVpdGdlYnJlaWQgb25kZXJ6b2VrIGJpaiBlZW4gcGF0aW50IG1ldCBITVNOIDIgd2FzIGlrIGluIHN0YWF0IG9tIGdlbm9lZyBnZWdldmVucyB0ZSB2ZXJrcmlqZ2VuIG9tIGVlbiBiZWhhbmRlbHBsYW4gb3AgdGUgc3RlbGxlbi4gCkZvbGtzIGFyZSBlbmNvdXJhZ2VkIHRvIHB1c2ggdGhlaXIgY2hpcHMgImFsbCBpbiIgZm9yIGEgZ29vZCBjYXVzZSBkdXJpbmcgVGV4YXMgSG9sZCAnRW0gb24gRnJpZGF5IGFuZCBTYXR1cmRheSBpbiBGcmFua2VubXV0aC4gU2F0dXJkYXkgYXQgU3VsbGl2YW4ncyBGb3Jlc3QgQnJldyBIYXVzLCAyODEgSGVpbmxlaW4gU3RyYXNzZS4gRm9ybWVkIGluIDE5OTYgYnkgQ29keSBXZWxjaCwgYSByZXRpcmVkIE5vcnRod2VzdCBBaXJsaW5lcyBwaWxvdCwgdGhlIGdyb3VwIG9mZmVycyBubyBjb3N0IGZsaWdodHMgZm9yIHBhdGllbnRzIHdpdGggZmluYW5jaWFsIG5lZWRzIHRvIG1lZGljYWwgdHJlYXRtZW50IGNlbnRlcnMuIFRoZSBncm91cCBpcyBhbiBvZmZzaG9vdCBvZiB0aGUgV2VzdGVybiBNaWNoaWdhbiBXaW5ncyBvZiBNZXJjeSBjaGFwdGVyIHN0YXJ0ZWQgaW4gSG9sbGFuZCBpbiBKdW5lIDE5OTEuIEEgV2luZ3Mgb2YgTWVyY3kgTWlubmVzb3RhIGdyb3VwIHN0YXJ0ZWQgaW4gMTk5NSBpbiBTdC4gVGhlIHByb2NlZWRzIGZyb20gdGhlIHdlZWtlbmQgZXZlbnRzLCBpbmNsdWRpbmcgcG9rZXIsIHJvdWxldHRlIGFuZCBibGFja2phY2ssIHdpbGwgaGVscCBmdW5kIHRoZSB2b2x1bnRlZXIgcnVuLCBub25wcm9maXQgZ3JvdXAuIFRpY2tldHMgY29zdCAkMTAwLCB3aGlsZSBzcGVjdGF0b3JzIGNhbiB3YXRjaCBmb3IgJDUwLiBBIExhcyBWZWdhcyBzdHlsZSBidWZmZXQgaXMgaW5jbHVkZWQuIEZhaXJncm92ZSByZXNpZGVudCBEb24gTGluZGVuYmVyZywgYSB2b2x1bnRlZXIgcGlsb3QsIHNhaWQgaGUgZXhwZWN0cyB0byBhdHRlbmQgdGhlIGV2ZW50LiBMaW5kZW5iZXJnLCA2NywgaGFzIGZsb3duIGFib3V0IDYwIHRvIDcwIGZsaWdodHMgaW4gaGlzIHNpeCBzZWF0IENlc3NuYSAyMTAuICJFdmVyeWJvZHkgaGFzIHRvIGdpdmUgc29tZXRoaW5nIGJhY2sgdG8gdGhlIGNvbW11bml0eSwiIHRoZSByZXRpcmVkIHNhbGVzbWFuIGZvciBMaW5keSdzIFNhbGVzIFNlcnZpY2UgaW4gRmFpcmdyb3ZlIHNhaWQuICJXaXRoIHRoaXMsIEkgY2FuIGZseSBteSBwbGFuZSBhbmQgZG8gc29tZXRoaW5nIGZvciB0aGUgY29tbXVuaXR5LiIgTGluZGVuYmVyZyBzdGFydHMgaGlzIGpvdXJuZXlzIGZyb20gQmF5IENpdHkncyBKYW1lcyBDbGVtZW50cyBNdW5pY2lwYWwgQWlycG9ydCBhbmQgaGFzIGRlbGl2ZXJlZCBwYXRpZW50cyB0byBjYXJlIGNlbnRlcnMgaW4gRmxpbnQsIE1pZGxhbmQgYW5kIHRoZSBEZXRyb2l0IGFyZWEuIFdpbmdzIG9mIE1lcmN5IEVhc3QgTWljaGlnYW4gc2VydmljZXMgYSA2MDAgbWlsZSByYWRpdXMuICJPbmNlIHlvdSBnZXQgc3RhcnRlZCBhbmQgc2VlIHRoZSBwZW9wbGUgd2UgYXJlIGhhdWxpbmcsIGl0J3Mga2luZCBvZiBjYXRjaHksIiBoZSBzYWlkLiAiSXQgYnVpbGRzIG9uIHlvdS4gIkkndmUgc2VlbiBwZW9wbGUgd2hvIGhhdmUgbWFzc2l2ZSBwcm9ibGVtcywgKHlldCkgdGhlaXIgb3V0bG9vayBvbiBsaWZlIGlzIGdlbmVyYWxseSBnb29kLgpJIGluIGJlZCBhdCAxYW0gd2F0Y2hpbmcgVFYgYW5kIHRoZSBmcm9udCBkb29yIG9wZW5zLiBJIGNhbGwgb3V0IGFuZCBoZSBleHBsYWlucyB0aGF0IGhpcyBrZXkgZGlkbiB3b3JrIGF0IGhpcyBmcm9udCBkb29yLCBhbmQgaGUgd2FzIGp1c3QgcGFzc2luZyB0aHJvdWdoIGJlY2F1c2UgaGUgZGlkbiB3YW50IHRvIGdvIGFyb3VuZC4gSGUgYXBvbG9naXplcywgZG9lcyBhY3R1YWxseSBwYXNzIHRocm91Z2ggbXkgdW5pdCB0byB0aGUgYmFjayBkb29yIGFuZCB0aGVuIG91dCBhbmQgdXAgdG8gaGlzLiBIZSBzb3VuZGVkIGRydW5rLCBhbmQgaGUgdXN1YWxseSBnb2VzIHRvIGhpcyByZWd1bGFyIGJhciBTYXR1cmRheSBuaWdodHMuCldoaWNoIGlzIHdoeSBBZGFtIFNoYW5rbWFuJ3MgZ2VuZGVyIHJldmVyc2VkIHJldGVsbGluZywgV2hhdCBNZW4gV2FudCwgZG9lc24ndCBsYW5kIGFzIGxpZ2h0bHkuIFNoYW5rbWFuJ3MgdXBkYXRlIHdlbGNvbWluZ2x5IHN3YXBzIE1lbCBHaWJzb24gZm9yIFRhcmFqaSBQLiBIZW5zb24sIHdobyBzdGFycyBhcyBBbGksIGFuIGFtYml0aW91cyBzcG9ydHMgbWFya2V0aW5nIGFnZW50IHdvcmtpbmcgd2l0aGluIGFuIGFsbCBtYWxlIGNvbXBhbnkuIApUaGUgbWF4aW11bSByYWlzZSBpcyB0aGUgc2l6ZSBvZiB0aGUgcG90LCBlcXVhbCB0bzogVGhlIGFjdGl2ZSBwb3QgKyBBbGwgYmV0cyBvbiB0aGUgdGFibGUgKyBUaGUgYW1vdW50IHRoZSBhY3RpdmUgcGxheWVyIG11c3QgZmlyc3QgY2FsbCBiZWZvcmUgcmFpc2luZy4gClRoZSBCQnMgd2VyZSBhIG1vbWVudCBhcyBtdWNoIGFzIGEgc291bmQgYSBtb21lbnQgSSByZWNhbGwgZm9uZGx5IGV2ZW4gdGhvdWdoIEkgd2FzIHNhZGx5IHRvbyBoYXBsZXNzbHkgaGV0ZXJvIG1hbGUgYW5kIHBvc3QgdGVlbiBmb3IgaXQgdG8gYmUgbWluZS4gQnV0IHRoZXkgd2VyZSBhbHNvIGEgdmliZSBhcyBtdWNoIGFzIGEgbW9tZW50OiB0aGVpciBoYXJtb25pZXMsIGJhbGFuY2VkIHBlcmZlY3RseSBiZXR3ZWVuIGFjdGl2ZSBhbmQgcGFzc2l2ZSwgZW1ib2RpZWQgYSBzcGlyaXQgb2YgeWVhcm5pbmcsIGEgbGVzcyBkZW1hbmRpbmcgc3RyYWluIG9mIHNleHVhbCBleHByZXNzaW9uIHRoYW4gUiBwbGVhZGluZy4gCkl0cyAxMiBhbSBvbiBhIHNjaG9vbCBuaWdodC4gCkF0IGZpcnN0IGl0IHdhcyBhIGZhaXJseSB0ZWNobm9jcmF0aWMgYXJyYW5nZW1lbnQsIGJlY2F1c2UgdGhlIHJlc2VhcmNoIGluc3RpdHV0aW9ucyB3YW50ZWQgdG8gZW5zdXJlIHRoZSBwcm9qZWN0cyB0aGV5IGhhZCBtYXJrZWQgb3V0IHdvdWxkIG5vdCBiZSBjYW5jZWxsZWQgb3IgdGhlIGxhbmQgcmVwdXJwb3NlZC4gVGhlIHBvbGl0aWNhbCBoaXN0b3J5IG9mIFNoYWphIHdhcyBkb21pbmF0ZWQgYnkgdGhlIHNsb3cgcGVyc3Vhc2lvbiBvZiB0aGUgaW5zdGl0dXRpb25zIGJ5IHRoZSBpbmNyZWFzaW5nbHkgY29tcGxleCBnb3Zlcm5tZW50IHRoYXQgdGhleSBjb3VsZCBiZSB0cnVzdGVkIG5vdCB0byBkbyB0aGF0LiBUaGVzZSBkYXlzIGl0IGEgZGVtb2NyYXRpYyBzb2NpYWxpc3QgZ292ZXJubWVudCBhbmQgZWNvbm9teSB3aXRoIGEgc2luZ2xlIGNoYW1iZXIgb2YgcmVwcmVzZW50YXRpdmVzOyB0aGVzZSBhcmUgcHJvcG9ydGlvbmFsIHRvIHBvcHVsYXRpb24gc28gdGhlIG51bWJlcnMgb2Ygc2FpZCByZXByZXNlbnRhdGl2ZXMgYXJlIHNsb3dseSBpbmNyZWFzaW5nIG92ZXIgdGltZS4gVGhlIFByaW1lIE1pbmlzdGVyIGlzIHZvdGVkIGZvciBzZXBhcmF0ZWx5LCBhbmQgdG8gc29tZSBleHRlbnQgaGFzIGEgcG9zaXRpb24gYWtpbiB0byBwcmVzaWRlbmNpZXMgaW4gc29tZSAyMXN0IGNlbnR1cnkgY291bnRyaWVzIG9mIGJlaW5nIHBhcnR5LiBDb21wbGV4IGxhd3MgYW5kIGFycmFuZ2VtZW50cyB1bmRlcnBpbiBwcm90ZWN0aW9ucyBmb3IgdGhlIGdyZWF0IHByZWhpc3RvcmljIGJpb21lcyBidXQgdGhlcmUgaXMgYWxzbyBub3cgc2V2ZXJhbCBjZW50dXJpZXMgd29ydGggb2YgY3VsdHVyYWwgbW9tZW50dW0gYmVoaW5kIHRoZWlyIGV4aXN0ZW5jZSBhbmQgaW1wb3J0YW5jZSB0byBTaGFqYSBpZGVudGl0eS4KSXQgbm90IHJlYWxseSBuZWNlc3NhcnkgdG8gbWFrZSB0b28gbWFueSBub3RlcyBhdCB0aGUgbWljcm9zLiBCdXQgSSBjb2xvciBjb2RlIGEgbG90LiBBbmQgSSBoYXZlIG9uZSBjb2xvciBqdXN0IGZvciBjcmF6eSBTaG9ydHN0YWNrZXJzIGFuZCBvbmUgZm9yIGNyYXppZXMgd2l0aCBmdWxsIHN0YWNrcy4gCldoeSBjYW4gdGhlcmUgYmUgYSBwb3AgdXAgd2hlbiB5b3Ugc2h1dCB0aGUgY2FyIG9mZiBjb25maXJtaW5nIHlvdSBtZWFudCB0byBvciBoYXZlIHRoZW0gc2h1dCBvZmYgYXV0b21hdGljYWxseSBhZnRlciAxMCBtaW51dGVzPyBJIGdldCBhdXRvIGhlYWRsaWdodHMgYXJlIGEgdGhpbmcsIGJ1dCB0aGV5IGRvbiBhbHdheXMgY29tZSBvbiB3aGVuIHlvdSBuZWVkIHRoZW0gdG8sIGxpa2UgZHVzayBvciBkYXduLCBzbyB5b3UgdHVybiB0aGVtIG9uIG1hbnVhbGx5IGFuZCB0aGV5IGFyZSBlYXN5IHRvIGZvcmdldC4gCkJ1dCBhcyBhIGJpdCBvZiBhIHJlbGllZiB3ZSBhbHdheXMgaGFkIGEgbGVnYWwgREQgYW5kIHdlIHdlcmUgYXMgc2FmZSBhcyBwb3NzaWJsZS5JIGxpdmVkIG9uIGEgZmFybSAyMCBtaW51dGUgZHJpdmUgZnJvbSB0aGUgbmVhcmVzdCB0b3duIGFuZCBteSBwYXJlbnRzIHdlcmUgZ29uZSBmb3IgdGhlIHdlZWsgYW5kIG15IG1vbSBzYWlkIGkgY291bGQgdGhyb3cgYSBwYXJ0eSBhcyBsb25nIGFzIGl0IHdhcyBvdXRzaWRlIGFuZCBhbGwgY2xlYW5lZCB1cCB3aGVuIHNoZSBnb3QgYmFjay4gClVuZGVyIERlbW9jcmF0cyB5b3UgcGF5IHNsaWdodGx5IG1vcmUgdGF4ZXMsIGFuZCB5b3VyIGludmVzdG1lbnRzIHdpbGwgZ3JvdyBhdCBhIHNsb3dlciBwYWNlLCBidXQgeW91IGhhdmUgZmFyIGdyZWF0ZXIgc2VjdXJpdHkgaW4gdGhvc2UgaW52ZXN0bWVudHMsIGVuc3VyaW5nIHRoYXQgNTAgeWVhcnMgZG93biB0aGUgcm9hZCB5b3UgYmUgd2VsbCBzaXR1YXRlZCBmb3IgcmV0aXJlbWVudC4KTGFuZGluZyBvbiBhIHBsYXRmb3JtIGFib3ZlIHRoZSBUZXhhcyBhdWRpZW5jZSwgc2hlIGxhdW5jaGVkIGludG8gYSBtaXggb2YgIkp1c3QgRGFuY2UsIiAiVGhlIEVkZ2Ugb2YgR2xvcnkiIGFuZCAiUG9rZXIgRmFjZS4iLiAKT3ZlcnZpZXcgZm9yIEthbWFsYQpXaGlsZSBwdXNoaW5nIGFuZCBsaWZ0aW5nIHlvdXIgaGFuZCwgdHJ5IHRvIHRpbHQgYWxsIHRocmVlIHN0YWNrcyB1cHdhcmRzIGF0IHRoZSBjZW50ZXIgb2YgdGhlIHRyaWFuZ2xlLgpUaGUgSGVuZGVyc29uIENpdHkgQ291bmNpbCB3aWxsIHZvdGUgdG9uaWdodCBvbiBhIGZvdXIgbW9udGggYmFuIHRvIHByZXZlbnQgbmV3IG1hc3NhZ2UgcGFybG9ycyBmcm9tIG9wZW5pbmcgYW5kIGdpdmUgc3RhZmYgdGltZSB0byBjcmFmdCBuZXcgcnVsZXMgdG8gY3JhY2sgZG93biBvbiBwcm9zdGl0dXRpb24gaW4gdGhlIGluZHVzdHJ5LlRoZSAxMjAgZGF5IG1vcmF0b3JpdW0gd291bGQgc3RvcCB0aGUgbGljZW5zaW5nIG9mIGFueSBuZXcgbWFzc2FnZSBlc3RhYmxpc2htZW50cyB1bnRpbCBTZXB0ZW1iZXIuVGhlIHRhcmdldCBvZiB0aGUgbmV3IHJ1bGVzIHdvdWxkIGJlIG1hc3NhZ2UgcGFybG9ycyB0aGF0IGVuZ2FnZSBpbiBwcm9zdGl0dXRpb24gYW5kIGh1bWFuIHRyYWZmaWNraW5nLkNpdHkgQXR0b3JuZXkgSm9zaCBSZWlkIHNhaWQgdGhlIHZhc3QgbWFqb3JpdHkgb2YgdGhlIGNpdHkncyA4MyBtYXNzYWdlIGVzdGFibGlzaG1lbnRzIGZvbGxvdyB0aGUgbGF3LCBidXQgdGhlcmUgYXJlIGEgZmV3ICJiYWQgYXBwbGVzIiB0aGF0IG5lZWQgdG8gYmUgd2VlZGVkIG91dC5UaGUgY3VycmVudCBlbmZvcmNlbWVudCBzdHJhdGVneSBmb2N1c2VzIG9uIGlzc3VpbmcgbWlzZGVtZWFub3IgY2l0YXRpb25zIHRvIGluZGl2aWR1YWwgd29ya2VycyBjYXVnaHQgYnJlYWtpbmcgdGhlIGxhdywgd2hldGhlciBmb3IgcHJvc3RpdHV0aW9uIG9yIGFueSBvdGhlciB2aW9sYXRpb24gb2YgcmVndWxhdGlvbnMuIApGcmFncmFuY2VzIGFyZSBnZW5lcmFsbHkgZWZmZWN0aXZlIGZvciBwZW9wbGUgd2hvIGhhdmUgbWlsZCBmb3JtcyBvZiBkZXByZXNzaW9uIHRoYXQgZG8gbm90IHJlcXVpcmUgZHJ1Z3MuIEFuZCB0aGV5IGNhbiBiZSBlc3BlY2lhbGx5IGhlbHBmdWwgd2hlbiB0aGUgZG9jdG9yIGlzIHRyeWluZyB0byB3ZWFuIHBhdGllbnRzIG9mZiBkcnVncy4gQXJvbWF0aGVyYXB5IGNhbiBiZSB1c2VkIHNhZmVseSBpbiBjb25qdW5jdGlvbiB3aXRoIGFudGlkZXByZXNzYW50IG1lZGljYXRpb25zIGJlY2F1c2UgaXQgd2lsbCBub3QgaW50ZXJmZXJlIHdpdGggdGhlIGRvc2FnZSBvciBlZmZlY3QuIApTdGlsbCwgaW4gNSBjYXJkIHBva2VyLCB5b3UgY2FuIGtlZXAgc29tZSBjYXJkcyBpbiB5b3VyIGhhbmQsIHdoaWxlIHRocm93aW5nIG90aGVycyBhd2F5LiAKIldlJ3ZlIHdvcmtlZCBvbiBhIGxvdCBvZiBuZXcgdGhpbmdzIGFuZCBJJ3ZlIHB1c2hlZCBteXNlbGYgdG8gdGhlIGxpbWl0IGV2ZXJ5IGRheS4gCklmIHlvdSdyZSBsb29raW5nIGZvciBhIGNvbXBsZXRlIHBva2VyIHNldCBmb3IgeW91ciBuZXh0IGdhbWUsIHdlIHJlY29tbWVuZCBnZXR0aW5nIHRoZSAyMDAgU3VpdGVkIFBva2VyIENoaXBzIHdpdGggQ2xlYXIgQ292ZXIgQWx1bWludW0gQ2FzZS4gT25lIHRoaW5nIHRvIHVuZGVyc3RhbmQgYWJvdXQgcG9rZXIgY2hpcCBzZXRzIGlzIHlvdSBkb24ndCBuZWVkIHRvIHNwZW5kIGEgbG90IG9mIG1vbmV5IHRvIGdldCBvbmUgb2YgdGhlIGJlc3Qgb25lcyBvbiB0aGUgbWFya2V0LiAKRWluZmFjaCBuYWNoIGRlbSBEdXNjaGVuIG1pdCBkZW0gQm9keSBNZWx0IGtyZWlzZW5kZSBCZXdlZ3VuZ2VuIGF1ZiBkZXIgSGF1dCBtYWNoZW4gdW5kIGRhbmFjaCBlaW5tYXNzaWVyZW4uIE9kZXIgbm9jaCBiZXNzZXI6IHNpY2ggdm9uIHNlaW5lbSBTY2hhdHogZGFtaXQgbWFzc2llcmVuIGxhc3NlbiBkZW5uIEJvZHkgTWVsdHMgd2VyZGVuIGF1Y2ggb2Z0IE1hc3NhZ2UgQmFycyBnZW5hbm50Li4gClRoZXkgbmVlZGVkIG1vbmV5IGp1c3QgdG8gYnV5IGZvb2QgYW5kIHBheSBmb3IgaG91c2luZy4gU08gdGhlIGNhbGwgZm9yICJHaXZlIGFsbCB5b3UgY2FuISIgYW5kICJHaXZlIHJpZ2h0IGF3YXkhIiB3ZXJlIGFzIGRlc3BlcmF0ZSBhcyB0aGV5IHNvdW5kZWQuIE15IGd1ZXNzIGlzIHRoYXQgdGhlcmUgd291bGQgYmUgYSByZXByZXNlbnRhdGl2ZSBvZiB0aGUgSW50ZXJuYXRpb25hbCBXb3JrZXJzIEFpZCBzb2NpZXR5IG5hdGlvbmFsIG9mZmljZSBnb2luZyBmcm9tIGZhY3RvcnkgdG8gZmFjdG9yeSwgb3IgZG9vciB0byBkb29yLCBzb2xpY2l0aW5nIGZvciBtb25leSBmb3IgdGhlIFBhc3NhaWMgd29ya2VycyByZWxpZWYuIAoiU29tZXRpbWVzIGl0IGNvbWVzIGluIHN0cmVha3MgICBpdCdzIGEgbG9uZyB5ZWFyLiBIZSdzIGdvdCAxMiBnb2FscyBpbiAyMSBnYW1lcy4gVGhhdCdzIHByZXR0eSBnb29kLiIKV2h5IG1ha2UgYWJvcnRpb24gYSBwYXJ0IG9mIGhlYWx0aCBjYXJlLiAKWW91IHdpbGwgbmVlZCB0byBib29rIG9uZSBvZiB0aGVzZSBpbiBhZHZhbmNlLCBidXQgZXZlbiBpZiB5b3UgZG8geW91IG1heSBub3QgZW5kIG5vdGVkIGluIHBhc3NlbmdlcnMgb24gbG9uZyBjYXIgb3IgYnVzIHRyaXBzIGFzIHdlbGwuIFRoZSBjb3VudHJ5J3MgYmlnZ2VzdCByaXZlciwgdGhlIFBvLCBjdXRzIGhvcml6b250YWxseSB0aGUgdGVycml0b3J5LCBpcyBtdWNoIG1vcmUgY29zdCBlZmZlY3RpdmUgdGhhbiB5b3UgbWlnaHQgdGhpbmsuIEV2ZXJ5IHRpbWUgeW91IGZhbGwgYXNsZWVwIHlvdXIgY29uc2Npb3VzbmVzcyB0dXJucyBhd2F5IGZyb20gZGF5IG9mIHBlYWNlZnVsIHJlbGF4YXRpb24sIGFuZCBhIG5pZ2h0IG9mIHBhcnRpZXMgYW5kIGZ1bi4gClRoZSBjb21taXNzaW9uIHNhaWQsICJTaGUgd2lsbGZ1bGx5IGFuZCBmb29saXNobHkgdXRpbGl6ZWQgdGhlIHBvd2VyIG9mIGhlciBvZmZpY2UgdG8gYWN0aXZlbHkgdW5kZXJtaW5lIHdob2xseSB2YWxpZCBhbmQgdW5idXJkZW5zb21lIHNlY3VyaXR5IG1lYXN1cmVzIgpKRiBQdGFrIFNjaWVuY2UgQm9va3MgMjYyNApXaHkgZG8gc28gbWFueSBydW5uZXJzIG5vd2FkYXlzIG9ubHkgd2FudCB0byBydW4gZm9yIGRpc3RhbmNlIGFuZCBub3QgZm9jdXMgdGhlaXIgZWZmb3J0cyBvbiBnZXR0aW5nIGZhc3Rlcj8gSSBzZWUgc28gbWFueSBwb3N0cyBhYm91dCB0aGUgbWFyYXRob24sIGl0J3MgYmFzaWNhbGx5IHRoZSBiZSBhbGwgZW5kIGFsbCBmb3IgbWFueSBwZW9wbGUuIFdoeSBkb2Vzbid0IGFueW9uZSB3YW50IHRvIHB1dCBpbiB0aGUgd29yayB0byBpbXByb3ZlIHRoZWlyIHNob3J0ZXIgZGlzdGFuY2UgdGltZXM/IERvbid0IGdldCBtZSB3cm9uZywgSSBjb2FjaCBiZWdpbm5lcnMgYW5kIEkgZW5jb3VyYWdlIHRoZW0gdG8gZG8gd2hhdCBtYWtlcyB0aGVtIGhhcHB5LiBCdXQgYXQgbGVhc3QgaW4gbXkgcmVnaW9uLCBydW5uaW5nIGFuZCByYWNlcyB1c2VkIHRvIGJlIGNvbXBldGl0aXZlLiAKR3Jvd2luZyB1cCBwYXJ0IER1dGNoLCBJIHRyaWVkIHRvIHVzZSB0aGUgcG9saXRlIHlvdSBpbiBhZGRyZXNzaW5nIG9sZGVyIHBlb3BsZSBpbiBOb3J3YXksIHNpbmNlIHRoYXQgd2hhdCB5b3UgZG8gaW4gdGhlIE5ldGhlcmxhbmRzLiBMZXQganVzdCBzYXkgdGhhdCBhIGZhaXIgYW1vdW50IG9mIHBlb3BsZSBnZXQgYWxtb3N0IGluc3VsdGVkLCBhbG9uZyB0aGUgbGluZXMgb2YgIkkgbm90IHRoYXQgb2xkIi4gRHV0Y2ggc3RpbGwgaGFzIHBvbGl0ZSB5b3UgYW5kIGluZm9ybWFsIHRob3UsIGFzIHdlbGwgYXMgdGl0bGVzIGZvciBNciAvIE1ycyAvIE1zLCBhbmQgYWRkcmVzc2luZyBwZW9wbGUgbGlrZSB0aGUgRHV0Y2ggZXF1aXZhbGVudCBvZiAiTWEgYW5kICJTaXIiLiAKSXZlIGhhZCB4cmF5cyBhbmQgTVJJIGFuZCBzZWVuIGEgc3BvcnRzIGRvY3RvciBhbmQgcG93ZXJsaWZ0aW5nIGNvYWNoIGFuZCBldmVyeXRoaW5nIHNlZW1zIG5vcm1hbCBvdGhlciB0aGFuIHRpZ2h0IGhhbXN0cmluZ3MgYW5kIGhpcCBmbGV4b3JzIGFuZCBhIG1vZGVyYXRlIGN1cnZlIGluIG15IHNwaW5lIChreXBob3NpcykuIApEZWxpYmVyYXRlbHkgbWFrZSB0aGluZ3MgcGxlYXNhbnQgYW5kIHJlbGF4aW5nIHRocm91Z2ggcHV0dGluZyBhIGZldyBmbG93ZXJzLCBzd2VldCBzY2VudGVkIGNhbmRsZSwgc29mdCBidXQgY2hlZXJmdWwgbXVzaWMsIGFuZCBjb2xvcmZ1bCBwaWN0dXJlcy4gCiJPdXIgaGVhcnRzIGdvIG91dCB0byBNci4gSG9sdCdzIGZhbWlseSBhbmQgaGlzIGZlbGxvdyByaWRlcnMgdGhhdCBkYXksIiBzYWlkIFBvbGljZSBDaGllZiBBcmdhdGhhIEdpbG1vcmUuICJJdCB3YXMgYSBzYWQgdHVybiBvZiBldmVudHMgZm9yIHRob3NlIG91dCByaWRpbmcgZm9yIGEgY2F1c2UgZ3JlYXRlciB0aGFuIHRoZW1zZWx2ZXMuIgpXZW5kaSBhbmQgSSBmb3VuZCBhIGhvc3RlbCBpbiB0aGUgU3VsdGFuYWhtZXQgYXJlYSB0aGF0IGhhZCBhIGJhciBpbiB0aGUgYmFzZW1lbnQhIEhvdyBjb252ZW5pZW50IEogT3VyIGZpcnN0IGRheSBiYWNrIHdlIHdhbGtlZCB0byB0aGUgR3JhbmQgQmF6YWFyIHRvIHZpc2l0IG91ciAib2xkIiBmcmllbmRzIGZyb20gb3VyIEZlYnJ1YXJ5IHZpc2l0LiBUaGV5IHdlcmUgc28gc3VycHJpc2VkIHRvIHNlZSB1cywgYW5kIHNvIGhhcHB5LiBBbHksIHRoZSBvd25lciBvZiB0aGUgbGVhdGhlciBzaG9wLCBpbnRyb2R1Y2VkIHVzIHRvIGhpcyBmcmllbmQgTXVzdGFmYS4gCkthbG0gc2FpZCBoZSBwcmVmZXJzIHRvIGhhdmUgbW9yZSByb29tcyBzbyBjaGFyaXRpZXMgY2FuIGhvc3QgZ2FtZXMgY2xvc2UgdG8gdGhlaXIgaG9tZSBiYXNlIGluc3RlYWQgb2YgdHJhdmVsaW5nIGFjcm9zcyB0aGUgc3RhdGUuLiAKQnkgdGhhdCBJIG1lYW4gd2hlbiBJIHdhcyBpbiB0aGUgRVIgdGhleSBkaWRuIGtub3cgd2hlcmUgdG8gc3RhcnQuIEkgbWVhbiBvbiB0aGUgbWFudWFsLiAKVGhhdCdzIGltcHJlc3NpdmUsIGluIGEgdmVyeSBzaWNrLCBoYXJyb3dpbmcgd2F5LlRoZXkgaGF2ZSByZWZpbmVkIHRoZWlyIHByb3BhZ2FuZGEgc3lzdGVtIHRvIGEgcG9pbnQgd2hlcmUgMTkzMCdzIEdlcm1hbnkgd291bGQgbG9vayBvbiBpbiBzaGVlciBhd2UuIEFzIGxvbmcgYXMgRm94IE5ld3MgZXhpc3RzLCBUcnVtcCBhbmQgVHJ1bXBpYW4gY2FuZGlkYXRlcyB3aWxsIGFsd2F5cyBoYXZlIGEgY2hhbmNlIHRvIHdpbi5qaW1vdGh5am9uZXMgICAxIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvSXQgbm90IGhpcyBqb2IgYW5kIHRoaXMgc2hvdWxkIG5vdCBiZSB0aGUgc3RhbmRhcmQuIApBbmQgc2V0dGluZyB1cCBhIGxvdyBsZXZlbCBtYXNzYWdlIHBhcmxvciBkb2Vzbid0IHRha2UgYSBsb3Qgb2YgY2FwaXRhbC4gCkFuIGltcG9ydGFudCB0aGVvcnkgaXMgTWFyeCdzIHRoZW9yeSBvZiBkaWFsZWN0aWNhbCBtYXRlcmlhbGlzbSBhbmQgY2xhc3Mgc3RydWdnbGUuIEVzc2VudGlhbGx5IGhlIHNheXMgd2UndmUgZ290dGVuIGRvd24gdG8ganVzdCB0d28gY2xhc3NlczogYm91cmdlb2lzZSBhbmQgcHJvbGV0YXJpYXQuIChQZXRpdGUgYm91cmdlb2lzZSBpcyBhIGNsYXNzIHRvbywgd2hpY2ggaXMgZXNzZW50aWFsbHkgc21hbGwgYnVzaW5lc3Mgb3duZXJzIHdobyB3b3JrIHRoZXJlIHRoZW1zZWx2ZXMsIHN1Y2ggYXMgQm9iIGluIEJvYnMgQnVyZ2Vycy4gSSB0aGluayBpdCdzIGNvbnNpZGVyZWQgbGlrZSBhIHN1YiBjYXRlZ29yeSBvZiB0aGUgYm91cmdlb2lzZSBidXQgaWRyayBhdCB0aGlzIG1vbWVudCkuIEFueXdheXMsIHRoZSBpZGVhIGlzIHRoYXQgdGhyb3VnaG91dCBoaXN0b3J5IHRoZSBsb3dlciBjbGFzcyBoYXMgYWx3YXlzIGV2ZW50dWFsbHkgZm91Z2h0IGFnYWluc3QgdGhlIHVwcGVyIGNsYXNzLCBsaWtlIGhvdyB0aGUgYm91cmdlb2lzZSBmb3VnaHQgYWdhaW5zdCB0aGUgYXJpc3RvY3JhY3kvbW9uYXJjaHkgYW5kIHRvb2sgdGhlaXIgcG9zaXRpb24gYXMgcnVsaW5nIGNsYXNzLiBTbyB0aGUgaWRlYSBpcyB0aGF0IGV2ZW50dWFsbHkgdGhlIHByb2xldGFyaWF0IHdpbGwgZXZlbnR1YWxseSBvdmVydGhyb3cgdGhlIGJvdXJnZW9pc2UgYW5kIHNpbmNlIHRoZXJlIHdpbGwgb25seSBiZSBvbmx5IGNsYXNzLCBjbGFzc2VzIHdpbGwgZXNzZW50aWFsbHkgYmUgb2Jzb2xldGUuCk5vdyB0aGVyZSBhcmUgb3ZlciBodW5kcmVkcyBvZiBwb2tlciBzaXRlcyBhdmFpbGFibGUgYmVjYXVzZSBvZiB0aGUgZ3Jvd2luZyBudW1iZXIgb2Ygb25saW5lIHBva2VyIGVudGh1c2lhc3QuClRoZSBwZW9wbGUgd2UgYWdhaW5zdCBoYXJkZW4gdGhlbXNlbHZlcyBpbiB0aGVpciBwb3NpdGlvbiBhbmQgaGF2ZSB0aGVpciBpZGVhcyB0aGF0IHRoZSBsZWZ0IGlzIG9ubHkgaW50ZXJlc3RlZCBpbiB0cml2aWFsIGlzc3VlcyBhbmQgaGF0aW5nIG9uIHRoZW0gcmVpbmZvcmNlZCwgd2hpY2ggbWFrZXMgaXQgaGFyZGVyIGZvciB1cyB3aGVuIHdlIHdhbnQgdG8gcHVzaCBmb3Igb3RoZXIsIG1vcmUgc2VyaW91cyBpc3N1ZXMuIEdlbmRlciBkaXNjcmltaW5hdGlvbiBpbiB0aGUgd29ya3BsYWNlIGlzIGFuIGlzc3VlLCBwcm9wZXIgYWNjZXNzIHRvIGJpcnRoIGNvbnRyb2wgYW5kIG90aGVyIGhlYWx0aGNhcmUgaXMgYW4gaXNzdWUsIGZhaXIgYW5kIGFkZXF1YXRlIHBhcmVudGFsIGxlYXZlIGlzIGFuIGlzc3VlLCBldGMsIHNvbWUgdHJvbGxzIG9uIHRoZSBpbnRlcm5ldCBub3QgbGlraW5nIGEgbW92aWUgbWFkZSBieSBiaWxsaW9uYWlyZXMgYmVjYXVzZSBpdCBzdGFycyBhIHdvbWFuIHdobyBhIG1pbGxpb25haXJlIGlzLiAKU2Vsb24gdW5lIHNvdXJjZSBwcm9jaGUgZGUgbCdlbnF1dGUsIGxlcyBkaXJlY3RldXJzIGRlcyBjYXNpbm9zIFBhcnRvdWNoZSBkZSBDYW5uZXMsIEJhbmRvbCAoVmFyKSBldCBMYSBHcmFuZGUgTW90dGUgKEhyYXVsdCkgZm9udCBwYXJ0aWUgZGVzIHBlcnNvbm5lcyBpbnRlcnJvZ2VzLiBVbmUgc2VwdGltZSBwZXJzb25uZSwgaW50ZXJwZWxsZSBnYWxlbWVudCwgbidhIGZpbmFsZW1lbnQgcGFzIHQgcGxhY2UgZW4gZ2FyZGUgIHZ1ZS4gTGVzIGVucXV0ZXVycyBkdSBzZXJ2aWNlIGNlbnRyYWwgZGVzIGNvdXJzZXMgZXQgZGVzIGpldXgsIGNoYXJncyBkZXMgaW52ZXN0aWdhdGlvbnMsIGxlcyBzb3Vwb25uZW50IGQ/YXZvaXIgdG91Y2ggZGVzIGNvbW1pc3Npb25zIGRhbnMgbGUgY2FkcmUgZGUgY2Ugc3lzdG1lIG9jY3VsdGUuLiAKVGhlcmUgaXMgb25seSBvbmUgd2F5IHRvIGhhdmUgYSAzIHdheSB0aWUgd2l0aCBhbiBhY2UgaGlnaCBmbHVzaC4gYXNzdW1lIHRoZSBmbHVzaCBpcyBoZWFydHMuIHRoZXJlIGFyZSA1IGhlYXJ0cyBvbiB0aGUgYm9hcmQsIGluY2x1ZGluZyB0aGUgYWNlLiBpZiB0aGUgc21hbGxlc3QgaGVhcnQgb24gdGhlIGJvYXJkIGlzIGJpZ2dlciB0aGFuIHRoZSBsYXJnZXN0IGhlYXJ0IGFueSBvZiB0aGUgMyBwbGF5ZXJzIGhhdmUgb24gdGhlaXIgaGFuZCwgaXQncyBhIDMgd2F5IHRpZSwgYW5kIHRoZSBwb3QgaXMgY2hvcHBlZCAzIHdheXMgKEZ1bGwgQW5zd2VyKQpUaGUgZmlyc3QgZ2FtZSB3YXMgYSAxNCA1IHRocmFzaGluZyBieSB0aGUgSGl4eHggc2NvcmluZyBzZXZlbiBnb2FscyBpbiB0aGUgZmlyc3QgcGVyaW9kLCBzaXggaW4gdGhlIHNlY29uZCBhbmQgb25lIGluIHRoZSB0aGlyZC4gCkx1MSwgMywgYW5kIDcgYXJlIGNvbW1vbmx5IGNvbWJpbmVkIGZvciB0aGlzLiAKUHJpb3IgdG8gam9pbmluZyB0aGUgY2FzaW5vIGluIDE5OTksIHRoZSB0YXhwYXllciB3YXMgYSBmdWxsIHRpbWUgZmluYW5jaWFsIGFkdmlzZXIgd2hvIHNvbGQgbXV0dWFsIGZ1bmRzIGFuZCBsaWZlIGluc3VyYW5jZS4gT25jZSBoZSBiZWdhbiB3b3JraW5nIGF0IHRoZSBjYXNpbm8sIGhlIHRyYW5zaXRpb25lZCB0byBwYXJ0IHRpbWUgYWR2aXNvcnkgd29yay4KV2h5IGNhbiB3ZSBzcHJlYWQgdGhlIGltbWlncmF0aW9uIG51bWJlcnMgbW9yZSBldmVubHkgYWNyb3NzIGNvdW50cmllcz8gV2h5IGNhbiB3ZSBzZXJpb3VzbHkgZW5mb3JjZSBsYW5ndWFnZSBsYXdzPwpFcyBpc3QgamEgaW4gRmFtaWxpZW4sIGJ6dy4gZ2VyYWRlIGF1Y2ggYmVyIG1laHJlcmUgR2VuZXJhdGlvbiBibGljaCwgZGFzcyBtYW4gbmljaHQgbWVociBkZW4gZ2xlaWNoZW4gRXJmYWhydW5nc2hvcml6b250IGhhdDogRGVpbmUgR3JvZWx0ZXJuL0VsdGVybiB3aXNzZW4gbmljaHRzIHZvbSBHYW1lIG9mIFRocm9uZXMsIGR1IHdlaXQgbmljaHRzIHZvbiBLYWlzZXIgRnJhbnouIEpldHp0IGtubnRlIG1hbiBlbnR3ZWRlciBzYWdlbiAid2FzIGJlc2NoZnRpZ3QgZGljaCBlaWdlbnRsaWNoIGdlcmFkZSB6dXIgWmVpdD8iLCBvZGVyIGFiZXIgbWFuIGhhdCBlaW5lIHNpbm5sb3NlcyB1bmQgb2JlcmZsY2hsaWNoZXMgR2VzcHJjaCBiZXIgImRhbWFscyI7IG9kZXIgbWFuIGZpeGllcnQgc2ljaCBlYmVuIGF1ZiBkaWUgS2luZGVyIChkYXp1IGthbm4gamVkZXIgZXR3YXMgc2FnZW4pLCBvZGVyIGF1ZiBkaWUgS3JhbmtoZWl0ZW4gKGF1Y2ggZGEga2FubiBqZWRlciBNaXRyZWRlbikuIFdhcyBkdSBkYSBtaXRiZWtvbW1zdCwgaXN0IG1laW5lcyBFcmFjaHRlbnMgZWluZmFjaCBudXIgU3ltcHRvbSBkZXNzZW4sIGRhc3MgZGVpbmUgRmFtaWxpZSBzaWNoIG5pY2h0cyB6dSBzYWdlbiBoYXQ7IG9kZXIgdmllbGxlaWNodCBhdWNoIGVpbmZhY2ggaW4gaWhyZW0gYWxsdGdsaWNoZW4gTGViZW4gc28gd2VuaWcgR2VtZWluc2Fta2VpdGVuIGhhdCwgZGFzcyBtYW4gZWJlbiBiZXIgT2JlcmZsY2hsaWNoZXMgcmVkZXQuIEF1Y2ggbmljaHQgdW5ibGljaCBpc3QsIGRhc3MgbWFuIGphLCB3ZW5uIG1hbiBzaWNoIHNvIGxhbmdlIGtlbm50LCBhdWNoIGVpZ2VudGxpY2ggbm9jaCBlY2h0IGhhcnRuY2tpZ2UgS29uZmxpa3RlIG1pdGVpbmFuZGVyIGhhdCAoR3JvZWx0ZXJuIEVsdGVybiksIHdhcnVtIGRhcyBkYW5uIGZyIGFsbGUgYW0gZWluZmFjaHN0ZW4gaXN0LCBiZXIgQnVsbHNoaXQgenUgcmVkZW4uIFVuZCB0amEsIEdyb2VsdGVybiB3ZXJkZW4gZXJzdGVucyBtaXQgZGVtIEFsdGVyIGF1Y2ggZ2Vpc3RpZyBuaWNodCBmaXR0ZXIsIGFiZXIgd2FocnNjaGVpbmxpY2ggd29sbGVuIHNpZSBkaXIgbnVyIHplaWdlbiwgZGFzcyBzaWUgc2ljaCB1bSBkaWNoIGttbWVybiB3b2xsZW4sIGFiZXIgc29uc3QgbmljaHQgd2lzc2VuLCB3aWUuIEplZGVyIG1hZyBLc2UsIHdpZSBrYW5uIG1hbiBrZWluIEtzZSBtZ2VuPyBFaW4gc2F0dGVyIEJ1YiBpc3QgZWluIGdsY2tsaWNoZXIgQnViLiB1bmQgc28gd2VpdGVyLiBTaWUgaGFiZW4gd2FocnNjaGVpbmxpY2ggZWluZmFjaCBuaWNodCBkYXMgV2lzc2VuIGRhcmJlciwgd2FzIGR1IHNvIG1hY2hzdCwgdW0gZWluIGVjaHRlcyBHZXNwcmNoIG1pdCBkaXIgYW56dWZhbmdlbi4gImV5LCBTZW5kTWVPcmFuZ2VMZXR0ZXJzLCBhbHRlciBrYWNrbjAwYiwgc3BpZWxzdCBkdSBPdmVyd2F0Y2g/IEljaCBiaW4gSGFuem8gTWFpbiIuIG9kZXIgc28uIEFsc28gamEsIGlzdCByaWNodGlnLCBkYXNzIGR1IGRpY2ggYXVmcmVnc3QsIGZhc3QgYWxsZSBGYW1pbGllbiBzaW5kIGF1ZiBpaHJlIFdlaXNlIHNlbHRzYW0uCldpdGggYWxsIHRoZXNlIG1lc3NhZ2VzIGFib3V0IHNleCBhcyBkYW5nZXJvdXMgYW5kIG1lbiBhcyB2aW9sZW50IGJlYXN0cywgeW91IHdvdWxkIHRoaW5rIHRoYXQgRWNsaXBzZSBjb3VsZCBub3QgcG9zc2libHkgYmUgYSBzZXh5IG1vdmllLiAKUGFtcGhsZXQgdGhlIHZlcml0YWJsZSBVbHlzc2VzIG9mCkkgbGVmdC4gSSBubyBsb25nZXIgZ2l2ZSBzZWNvbmQgY2hhbmNlcyBvbiB0aGUgYmlnIHRoaW5ncy4gSSBhbSB3b3J0aCBtb3JlIHRoYW4gdGhhdC4gU2Vjb25kIGNoYW5jZSBvbiB0aGUgbGl0dGxlIHRoaW5ncy4gd2h5IG5vdCBidXQgbm90IG9uIHJlc3BlY3RpbmcgeW91LgpPc3RvcGF0aGllICBNb250cmFsIDYuIApUaGUgaWRlYSBvZiB1c2luZyBhIHVuaXQgdGllZCB0byBhIHNpbmdsZSBtZWFzdXJlbWVudCB0ZWNobmlxdWUgcmVtaW5kcyBtZSBhIGJpdCBvZiBtZWFzdXJpbmcgcHJlc3N1cmUgaW4gIm1pbGxpbWV0ZXJzIG9mIG1lcmN1cnkiLiBTdXJlIGl0IGdyZWF0IGlmIHlvdSBoYXZlIGEgbWVyY3VyeSBiYXJvbWV0ZXIsIGJ1dCB3aGVuIHZhY3V1bSBwaHlzaWNpc3RzIHN0YXJ0IG1lYXN1cmluZyBwcmVzc3VyZSBpbiBtaWNyb25zLCB1c2luZyBhbiBpbnN0cnVtZW50IHRoYXQgZG9lc24gdXNlIG1lcmN1cnkgYXQgYWxsLCBpdCBzZWVtcyBhIGJpdCBzaWxseS4uIApXaGlsZSBtZW1iZXJzIG9mIGFsbCByYWNlcyBhbmQgbmF0aW9uYWxpdGllcyBhcmUgd2VsY29tZSwgb3VyIHB1cnBvc2UgaXMgdG8gZm9zdGVyIGEgc2Vuc2Ugb2YgY29tbXVuaXR5IGFtb25nIEFzaWFuIEFtZXJpY2FucyBhbmQgdGhlaXIgcmVzcGVjdGl2ZSBjb3VudGVycGFydHMgaW4gdGhlIEFzaWFuIGRpYXNwb3JhLgpOb3J0aCBBbGJ1cnkgRm9vdGJhbGwgTmV0YmFsbCBDbHViIHdpbGwgYmUgaG9sZGluZyBpdHMgYW5udWFsIEdvb2RzIFNlcnZpY2VzIEF1Y3Rpb24gb24gU3VuZGF5IDI2dGggT2N0b2JlciAyMDE0IGF0IHRoZSBOb3J0aCBBbGJ1cnkgU3BvcnRzIENsdWIgYXQgdGhlIFJvb2Z0b3AgQmFyLiBUaWNrZXRzIGFyZSAkMzAgYW5kIGluYyBSZWZyZXNobWVudHMgZnJvbSAxMiBub29uIHRvIDNwbSBwbHVzIEx1bmNoLiAKU3RpbGwsIHdlIHNob3VsZG4gbG9vayBhdCB0aGlzIGFzIGEgYmFkIG1vbWVudC4gUm9iZXJ0byBMdW9uZ28gYWN0dWFsbHkgZGlkIHF1aXRlIHdlbGwgYXQgdGhpcyB0b3VybmFtZW50LiBJbiBhIGZpZWxkIG9mIDY1OTggcGVvcGxlLCBMdW9uZ28gbGFzdGVkIHVwIHRvIERheSA0LCBlbmRpbmcgdGhlIHRvdXJuYW1lbnQgYXQgdGhlIDYzNHRoIHNwb3QgdGFraW5nIGhvbWUgYSBjb29sICQxOSw3NzcsIGFuZCBvdXRsYXN0aW5nIHByb2Zlc3Npb25hbHMsIHNlbWkgcHJvcywgYW5kIHlvdXIgNXRoIGdyYWRlIEtpbmRlcmdhcnRlbiB0ZWFjaGVyLiBTaGUgc3RpbGwgc2F5cyB5b3UgbmVlZCB0byB3b3JrIG9uIHlvdXIgY3Vyc2l2ZSB3cml0aW5nIGJ5IHRoZSB3YXkuCkkgZGlkIHRoYXQgdG8gdW5kZXJzdGFuZCB3aHkgdGhleSB3ZXJlIG5vdCBjb3JyZWN0IHdoaWNoIGhlbHBlZCBtZSB0byByZXRhaW4gdGhlIGluZm9ybWF0aW9uLiAKSGVsbG8gSSB3b3JrIGF0IGFuIGluc3VyYW5jZSBhZ2VuY3kuIEluIG15IHBlcnNvbmFsIG9waW5pb24geW91IHNob3VsZCB0YWtlIGludG8gYWNjb3VudCBzb21lIGZhY3RvcnMgYmVmb3JlIG1ha2luZyBhIGRlY2lzaW9uLgpNZWFuaW5nIHRoZXJlIGlzIGNlcnRhaW5seSBtb3JlIHBlb3BsZSBvdXQgdGhlcmUuIApBbHRlcm5hdGl2ZWx5LCBoYXZlIG9ubHkgdGhlIHBsYXllciB3aXRoIHRoZSBsb3dlc3QgaGFuZCBpbiBlYWNoIHNob3dkb3duIHN0cmlwLiBUaGlzIGlzIGEgc2xvd2VyIHZlcnNpb24gb2YgdGhlIGdhbWUsIGZvciBhIG1vcmUgZXh0ZW5kZWQgZXZlbmluZyBvZiBmdW4uClRoZSBudXJzZXMgdHJpZWQgdG8gZHJhdyBteSBibG9vZCBhdCBsZWFzdCA3IHRpbWVzLCBhbmQgdGhleSBmYWlsZWQgZXZlcnkgdGltZS4gClNvYmVyYm90ICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCkxlcyBsZXR0cmVzIGRlICJSb1BIaCIgbWRlY2luLCBwZXJtdXRlcywgbm91cyBkb25uZW50IHRyb2lzIGluZGljYXRpb25zIGluYXR0ZW5kdWVzICBjZSBzdWpldC4gTGEgbWFsYWRpZSBzZXJhaXQgdW4gdGF0IG8gbGUgY29ycHMgZXN0IGVuIHByb2llIGF1IGRzb3JkcmUuIApJIGxpc3RlZCB0aGUga2l0dGVucyBmb3IgJDI1IGEgcG9wIGFuZCBsZWZ0IHdpdGggbm90aGluZyBidXQgYSBnb29kIGZlZWxpbmcgaW4gbXkgaGVhcnQuIApJZiB5b3UgbGl2ZSBhbmQgZWFybmVkIG1vbmV5IG92ZXJzZWFzLCB0aGUgZmlyc3QgJDEwMGsgb3Igc28gaXMgdGF4IGV4ZW1wdCBpbiB0aGUgVVMuClRoZSBzY2llbnRpc3RzIGZvdW5kIGEgZGlyZWN0IGNvcnJlbGF0aW9uIGJldHdlZW4gY2FuY2VyIGRldmVsb3BtZW50IGFuZCBPbWVnYSAzIHN1cHBsZW1lbnRhdGlvbiwgYWdhaW4gYnkgaW5oaWJpdGluZyB0aGUgZXhwcmVzc2lvbiBvZiBhZGhlc2lvbiBtb2xlY3VsZXMgcmVxdWlyZWQgZm9yIGNhbmNlciBjZWxscyB0byBwcm9wYWdhdGUuCklzIGl0IG9wdGltYWw/IE5vLiBJcyB0aGUgYXZlcmFnZSAxMyB5ZWFyIG9sZCBhYmxlIHRvIHNpdCBpbiBhIGRpZmZlcmVudCByb3cgdGhhbiBoaXMgcGFyZW50cyBmb3IgYSBmZXcgaG91cnM/IFllcywgYW5kIHNvbWV0aW1lcyBpdCBuZWNlc3NhcnksIGVzcGVjaWFsbHkgZHVyaW5nIGhvbGlkYXkgc2Vhc29uLCBtYW55IGZsaWdodHMgYXJlIGJvb2tlZCBhbG1vc3QgZXhjbHVzaXZlbHkgYnkgZmFtaWxpZXMuIFRoaXMgb2Z0ZW4gbWFrZXMgaXQgaW1wb3NzaWJsZSB0byBoYXZlIGVub3VnaCBzZWF0cyBhdmFpbGFibGUgbmV4dCB0byBlYWNoIG90aGVyIGZvciBldmVyeW9uZS4gClRoaXMgaXMgIm1vc3RseSBKdWRhaXNtIDEwMSwiIHNheXMgU2h1bG1hbi4gCkEgY291cGxlIG9mIG1vbnRocyBhZ28gd2UgaGFkIGEgcmVsYXRpdmUgdmlzaXQgdXMgaW4gR2VybWFueSB3aG8gZ3JldyB1cCBpbiB0aGUgVVMgYW5kIGhlIGdvdCBoaXMgZHJpdmVycyBsaWNlbnNlIHRoZXJlLiBIZSB3YXMgZHJpdmluZyB1cyBob21lIG9uZSBldmVuaW5nIHdoZW4gaGUganVzdCBpZ25vcmVkIGEgcmVkIGxpZ2h0IGFuZCB0dXJuZWQgbGVmdC4gV2hlbiB3ZSBhc2tlZCBoaW0gaWYgaGUgd2FzIGJsaW5kLCBoZSBqdXN0IHJlcGxpZWQgIm5vIG90aGVyIGNhcnMgaW4gc2lnaHQsIG5vIHByb2JsZW0uIgoidGhleSIgY3JlYXRlZCBhbiBhcnRpZmljaWFsICJtYXRyaXgiIG9uIGEgbG93ZXIgZnJlcXVlbmN5IGluIG9yZGVyIHRvIGtlZXAgaHVtYW5pdHkgZnJvbSByZWFjaGluZyB0aGVpciBmdWxsIHBvdGVudGlhbCBhbmQgYmUgYWJsZSB0byB1c2UgdXMgZm9yIG1hbnkgcmVhc29ucy4gCkNhcmF3YXkgYWNrbm93bGVkZ2VkIHF1ZXN0aW9uaW5nIE1pbGxlciBhYm91dCB3aHkgQ2l0eSBIYWxsIHdhcyB0YXJnZXRpbmcgdGhlIGhvdXNlLgpMb2NhaG9iMjMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIGRheXMgYWdvClRocm91Z2ggdGhlIGNvdXJzZSBvZiB0aGUgc2hvdyBzaGUncyBhbmQgdGhlIGFjdHJlc3MgaGF2ZSBiZWVuIGluY29uc3RhbnQgdHJhaW5pbmcgYW5kIGl0IHNob3dzLiBFdmVuIGEgbWlub3IgZmVtYWxlIGNoYXJhY3RlciBsaWtlIFBpcGVyIHJlYWxseSBzdGFuZHMgb3V0IGFzIG1vcmUgcGh5c2ljYWxseSBjYXBhYmxlIHRoYW4gbW9zdCBIb2xseXdvb2QgdHlwZXMuIApJbiBmYWN0LCBwYXJlbnRzIGNhbiBsZWFybiB0byBnaXZlIGJhc2ljIG1hc3NhZ2VzIHRvIHlvdW5nZXIga2lkcyBhdCBob21lLiBTaW5jZSB0ZWVucyB3b3VsZCBwcm9iYWJseSBiYWxrIGF0IHRoZSBpZGVhIG9mIGEgbW9tbXkgbWFzc2FnZSwgdGhleSdyZSBiZXN0IGxlZnQgdG8gdGhlIGNhcGFibGUgaGFuZHMgb2YgbGljZW5zZWQgbWFzc2FnZSB0aGVyYXBpc3RzLiAKSXNuIHNvIG11Y2ggbWU/IFdoeSBkaWQgSSBnbyB0aHJvdWdoIHRoaXM/IEl0IG1vcmUgbm90IG1lPyBXaHkgYW0gSSBPSz8gV2h5IGRpZCBJIHN1cnZpdmUgYW5kIHRoYXQgcGVyc29uIG9uIHRoZSBiZWFjaCBkaWRuIEZvciB5ZWFycywgSSBraW5kIG9mIHNlYXJjaGVkIGZvciBteSBwdXJwb3NlLiAKIkNlbGEgZmFpdCBkZXMgbW9pcyBxdSBub3VzIGRpdCBsZXMgbGVjdGlvbnMgZXVyb3Blbm5lcywgYyB0cnMgaW1wb3J0YW50LCBsIGMgbCBkZSBsYSBGcmFuY2UgZXQgY3JhYyAhIE9uIG5vdXMgbWV0IHVuIHJmcmVuZHVtIHF1aSBlc3QgdW4gcGxhbiBkZSBjb20gYXUgbW1lIG1vbWVudC4gCkJ1cyBwYXNzZXMgd2VyZSBkaXNjdXNzZWQgb24gQW55IFF1ZXN0aW9ucz8gTXkgdW5kZXJzdGFuZGluZyB3YXMgdGhhdCB0aGUgTGFib3VyIGxlZ2lzbGF0aW9uIGFsbG93ZWQgdGhvc2UgYm9ybiBiZWZvcmUgMTk1MCB0byBoYXZlIGEgYnVzIHBhc3MuIApZZXMgdG8gYm90aC4gVGhlIGxhdHRlciBqdXN0IG1ha2VzIG1lIHVuY29tZm9ydGFibGUgaW4gdGhlIHdob2xlIHNleHVhbGl6aW5nIGEgbWlub3IgdGhpbmcsIGJ1dCBJIGd1ZXNzIEkgZGlkIHNvcnQgb2YgZW5qb3kgaGVyIGluIHRoZSBmb3JtZXIuIFJhY2hlbCBXZWlzeiksIGJ1dCBJIGNvdWxkbiByZWFsbHkgcGljdHVyZSBzb21lYm9keSBlbHNlIGluIHRoYXQgcm9sZS4gU3RpbGwsIGNvc21pYyBob3Jyb3IgaXMgdG91Z2ggdG8gZ2V0IHJpZ2h0IGFuZCBJIHRob3VnaHQgc2hlIGV4Y2VsbGVkIGF0IHRoZSB3aG9sZSBzdGVybiBmYWNlZCBzdG9pY2lzbSBza2lydGluZyBkaXNndXN0IGFuZCBkZXNwYWlyLCBidXQgSSBkaWRuIGJlbGlldmUgaGVyIGFzIGEgd2lmZSAocHJvYmFibHkgdGhlIGZhdWx0IG9mIHRoZSBzY3JlZW5wbGF5IHJhdGhlciB0aGFuIGhlcnMpLgpPbiBhIG1vcmUgbmF0aW9uYWwgc2NhbGUsIEkgcmVhbGx5IGxpa2VkIFNpbW1zIGFuZCBMZWZrb2UsIGJ1dCAyLzMgb2YgdGhhdCBzaG93IGp1c3QgbGVmdCBzbyBJIGRvbid0IGhhdmUgaGlnaCBob3BlcyBmb3Igd2hhdCBpdCBsb29rcyBsaWtlIGdvaW5nIGZvcndhcmQuIFN0aWNrIHRvIEZvb3RiYWxsIGlzIGdvb2QgdG9vIHdpdGggYSBiaWcgZm9jdXMgb24gdGhlIGRyYWZ0OyB0aGV5IGxvdmUgaW4gSm9wbGluLCBNTywgc28gZXZlbiB0aG91Z2ggaXQncyBhIG1vcmUgbmF0aW9uYWwgcG9kY2FzdCwgdGhlIENoaWVmcyBkbyBnZXQgYnJvdWdodCB1cCBxdWl0ZSBhIGJpdC4gIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28KQXNzdW1pbmcgeW91IHdhbnQgdG8gcGxheSAzLzYgbGltaXQsIEknZCB0cnkgdGhlIE1pcmFnZSBmaXJzdCwgZm9sbG93ZWQgYnkgUGFyaXMsIENhZXNhcidzIFBhbGFjZSwgVHJlYXN1cmUgSXNsYW5kLCBhbmQgbWF5YmUgZmluYWxseSBCYWxseSdzLiBJIGRpZG4ndCBzZWUgYW55IHNpZ25pZmljYW50IGRpZmZlcmVuY2VzIGluIHJha2Ugc3RydWN0dXJlLCBidXQgSSB3YXNuJ3QgcGxheWluZyBtdWNoIGF0dGVudGlvbiB0byB0aGF0LiBBcyBsb25nIGFzIHlvdSdyZSBvbiB0aGUgc3RyaXAsIEknZCBoaWdobHkgcmVjb21tZW5kIGhvcHBpbmcgZnJvbSBwbGFjZSB0byBwbGFjZSB1bnRpbCB5b3UgZmluZCBzb21ld2hlcmUgeW91IGxpa2UuIApUaGV5IGRlbWFuZGVkLCB2aWEgZW1haWwsIHRoYXQgaGUgY2FsbCBvZmYgUElzIHRoYXQgaGUgaGFkIGhpcmVkIHRvIGludmVzdGlnYXRlIHRoZSBFbnF1aXJlciAodG8gZmluZCBvdXQgaG93IHRoZSBFbnF1aXJlciBoYWQgZ290dGVuIGhpcyB0ZXh0IG1lc3NhZ2VzKSBhbmQgc2FpZCB0aGF0IHRoZXkgaGFkIGEgbnVtYmVyIG9mIHBob3RvZ3JhcGhzIGluIHRoZWlyIHBvc3Nlc3Npb24gZnJvbSBCZXpvcyB0ZXh0IG1lc3NhZ2VzIHdpdGggaGlzIG1pc3RyZXNzLCBpbmNsdWRpbmcgZGljayBwaWNzLCBhbmQgaW5zaW51YXRlZCB0aGF0IHRoZXkgd291bGQgb25seSBwcm9taXNlIG5vdCB0byBwdWJsaXNoIHRob3NlIHBob3RvcyBpZiBoZSBjb21wbGllZCB3aXRoIHRoZWlyIGRlbWFuZHMuIApCdXQgaW5zdGVhZCBvZiBhIG1vcmUgY29tZm9ydGFibGUgbGlmZXN0eWxlLCBOYXNoIHRlYW1lZCB1cCB3aXRoIHRoZSBvd25lciBvZiBhIG1hc3NhZ2UgcGFybG9yIGNhbGxlZCB0aGUgIkRvbGwgSG91c2UsIiB3aGVyZSBoZSBkZW1hbmRlZCB0aGF0IHRoZXkgd29yayBsb25nIGhvdXJzIHdoaWxlIGNvbmZpc2NhdGluZyB0aGVpciBwcm9jZWVkcyBhbmQgdXNpbmcgdGhyZWF0cyBvZiB2aW9sZW5jZSB0byBrZWVwIHRoZW0gZnJvbSBsZWF2aW5nLCBwcm9zZWN1dG9ycyBzYWlkLgpZb3UgZG9uIHJlYWxseSBuZWVkIEVuZ2xpc2ggdG8gZ2V0IGEgdGF4aS4gZ28gdG8gc2hhbWFraGlua2EgYW5kIHlvdSBiZSBhdHRhY2tlZCBieSB0YXhpIGRyaXZlcnMgc2NyZWFtaW5nIHRoZSBuYW1lIG9mIHZhcmlvdXMgdG93bnMuIHNheSBTaGVraSBvciBHZWJlbGUgYW5kIHRoZXkgcG9pbnQgeW91IGluIHRoZSByaWdodCBkaXJlY3Rpb24uIGhhdmUgdGhlbSB3cml0ZSBkb3duIGFuIGFtb3VudCBvbiBhIHBpZWNlIG9mIHBhcGVyLgpGb3IgYWxsIHRoZSBzaG93cyB0aGF0IGhhdmUgc2hvd24gbm90IGluc2lnbmlmaWNhbnQgZ2FpbnMgdXBvbiBjb252ZXJzaW9uIHRvIHRoZSBDNyBjdXJyZW5jeSwgYSBudW1iZXIgb2Ygb25lIHRpbWUgaGVhdnkgaGl0dGVycyBhcmUgbm8gbG9uZ2VyIG5vdGNoaW5nIHRoZSBkaXNwcm9wb3J0aW9uYXRlIGNvbW1lcmNpYWwgcmF0aW5ncyBpbmNyZWFzZXMgb2YgeWVhcnMgcGFzdC4gCldoZW4gUG9sayBpcyB0YWxraW5nIGFib3V0IE1UVHMgaXQgaGFuZGxlcyBhIGxvdCBiZXR0ZXIuLiAKRm9yIGV4YW1wbGUgYSBmcmllbmQgd2FzIHRlbGxpbmcgbWUgaG93IGRhbmdlcm91cyBpdCB3YXMgZ29pbmcgb3V0IG9uIG15IG1vdG9yYmlrZSBzbyBJIHNhaWQgaXQgd2FzbiBldmVuIGluIHRoZSB0b3AgMTAgbW9zdCBkYW5nZXJvdXMgdGhpbmdzIEkgZG9uZS4gSGUgY2FsbGVkIG15IGJsdWZmIGFuZCBnb3QgYSBmZXcgYmV5b25kIDEwIHdoZW4gaGUgY29uY2VkZWQgdGhlIHBvaW50Li4gClNlbmF0ZSBHT1AgbGVhZGVycyB3aWxsIG5lZWQgcG9zc2libHkgbW9yZSB0aGFuIGEgZG96ZW4gRGVtb2NyYXRzIHRvIHNpZ24gb24gdG8gbWVhc3VyZSB0byBmdW5kIHRoZSBnb3Zlcm5tZW50IGJhc2VkIG9uIFNlbmF0ZSBydWxlcyByZXF1aXJpbmcgNjAgdm90ZXMgdG8gYnJlYWsgYSBmaWxpYnVzdGVyIGFuZCBhZHZhbmNlIChtb3JlIG9uIHRoYXQgYmVsb3cpLi4gClRoYXQgaXMgd2h5IGl0IGlzIEdSRUFUIEFORCBJTVBPUlRBTlQgdG8gZHJpbmsgbG90cyBvZiB3YXRlciBhZnRlciBhIG1hc3NhZ2UgYW5kIEVWRVJZREFZIHRvIGhlbHAgZWxpbWluYXRlIHdhc3RlIHByb2R1Y3QhV2hlcmUgYXJlIHlvdSBnb2luZyB0byBzY2hvb2w/V2hlbiBJIHdhcyBpbiBzY2hvb2wgYWxsIEkgdGhvdWdodCB3YXMgV09XIHRoaXMgaXMgZ29pbmcgdG8gYmUgc28gZWFzeSBJIGdvaW5nIHRvIGxlYXJuIGhvdyB0byBtYXNzYWdlIHBlb3BsZSBhbmQgY2hhcmdlIDkwIGRvbGxhcnMgYW4gaG91ciBhbmQgYmUgcmljaCBhbmQgZG8gbGlrZSAyIG1hc3NhZ2VzIDUgZGF5cyBhIHdlZWsgYSBkYXkhSXQgaXMgYSBsb3Qgb2YgaW5mb3JtYXRpb24sIGFuYXRvbXkscGF0aG9sb2d5LCBraW5lc2lvbG9neSwgZXRoaWNzLCB0ZWNobmlxdWUsIGNsaW5pY2FsLiAKQW5kIE9wIHdpbGwgc3RpbGwgYmUgd2FpdGluZyBhcm91bmQgZm9yIGhpbSB0byAiY29tZSBiYWNrIi4gCkF0IHRoaXMgbGV2ZWwsIHBsYXllcnMgYXJlIHByb3VkIG9mIHRoZWlyIHdpbiByYXRlIGFuZCBhYnNvbHV0ZWx5IGhhdGUgdG8gZ28gb3V0IGZpcnN0LCBvciBlYXJseSBpbiBhIHRvdXJuYW1lbnQuIElmIHlvdSBjYW4gdGhyZWF0ZW4gdG8gY3V0IGludG8gdGhlaXIgYmFua3JvbGwsIHRoZXkgd2lsbCBwYXVzZSBhbmQgZm9sZCB0byB5b3VyIGFnZ3Jlc3NpdmUgcmUgcmFpc2luZy4uIApUaGUgTG92ZSBMb2NrIEJyaWRnZSBpcyBhbm90aGVyIGludGVyZXN0aW5nIGF0dHJhY3Rpb24uLiAKVVBEQVRFIElJOiBBIHJlbGlnaW91cyBiYXNlZCBjb2FsaXRpb24gaGFzIGFsc28gYW5ub3VuY2VkIGl0cyBvcHBvc2l0aW9uIHRvIGNhc2lubyBwcm9wb3NhbHMgYmVpbmcgY2lyY3VsYXRlZCwgYWxvbmcgd2l0aCB0aGUgcHJvcG9zYWwgdG8gdGFrZSBhIHN0ZXAgdG93YXJkIG1lZGljYWwgdXNlIG9mIG1hcmlqdWFuYS4gSXRzIHJlbGVhc2UgZm9sbG93czoKV2UgYXJlIHZlcnkgYmlnIHBsYXllcnMgb24gYW55dGhpbmcgdG8gZG8gd2l0aCByZXNwb25zaWJsZSBnYW1ibGluZy4gQ29zdGVsbG8gc2FpZCB0aGUgUXVlZW5zbGFuZCBHb3Zlcm5tZW50IG5lZWRlZCB0byByZWR1Y2UgdGhlIG1heGltdW0gYmV0IG9uIHBva2llcyB0byAkMSBhbmQgc2lnbmlmaWNhbnRseSByZWR1Y2UgdHJhZGluZyBob3Vycy4uIApPbmUgb2YgdGhlIHJlYXNvbnMgSSBoYXZlbiBnb25lIGluIGRlcHRoIGluIHJlc2VhcmNoaW5nIHRoaXMgZ3JvdXAgaW4gbXkgZmFtaWx5IHRyZWUgaXMgdGhhdCB0aGVyZSBzZWVtcyB0byBiZSBhIGZhaXIgYW1vdW50IG9mIGluYnJlZWRpbmcgKDFzdCBjb3VzaW5zIG1hcnJpZWQgZWFjaCBvdGhlciBhIGxvdCBhbmQgdGhlbiB0aGVpciBraWRzIG1hcnJpZWQgMXN0IGNvdXNpbnMgYXMgd2VsbCwgdGhlcmUgdGhlIHBvc3NpYmlsaXR5IG9mIGFuIHVuY2xlL25pZWNlIHJlbGF0aW9uc2hpcCB0b28pIGFuZCBJIGp1c3Qgd2FudCB0byByZWFjaCBhIGdvb2Qgc3RvcHBpbmcgcG9pbnQgb24gbXkgbWF0ZXJuYWwgZ3JhbmRmYXRoZXIgc2lkZSBiZWZvcmUgSSBnZXQgdGFuZ2xlZCB1cCBpbiB0aGF0IG1lc3N5IGJhbGwgb2Ygc3RyaW5nIHRyeWluZyB0byBmaWd1cmUgb3V0IHRoYXQgbWVzcy4gCkFzIGV4cGxhaW5lZCBlYXJsaWVyLCBhcyBzcG9ydHMgbWFzc2FnZSBwcm9mZXNzaW9uYWwgbXVzdCBlbnN1cmUgdGhleSBoYXZlIGJlZW4gY29ycmVjdGx5IHRyYWluZWQgYW5kIGhhdmUgdXAgdG8gZGF0ZSBrbm93bGVkZ2Ugb2YgdGhlaXIgcHJvZmVzc2lvbi4gVGhpcyBpcyB2aXRhbCBpbiBtYWludGFpbmluZyB0aGVpciByZXB1dGF0aW9uIGFuZCB3b3JraW5nIGluIHRoZSBiZXN0IGludGVyZXN0cyBvZiB0aGVpciBjbGllbnRzLiAKIldlIHdlcmUgY29tZm9ydGFibGUgdGhlIGNvbXBldGl0aW9uIHdhcyBsZWdhbCwiIEVpY2hsZXIgc2FpZCwgcG9pbnRpbmcgb3V0IHRoYXQgdGhlIFVuaXRlZCBQb2tlciBMZWFndWUgZm9sbG93ZWQgdGhvc2UgcHJvdmlzaW9ucywgYWx0aG91Z2ggaGUgY29uY2VkZWQgdGhhdCB0aGVyZSBpcyBzb21lIGFyZ3VtZW50IG92ZXIgd2hldGhlciBwb2tlciBpcyBhIGdhbWUgb2YgY2hhbmNlLgpSb3NlIFR5bGVyIGZyb20gRG9jdG9yIFdoby4gUm9zZSB3YXMgbW9zdGx5IGZpbmUgZm9yIHRoZSBmaXJzdCBzZWFzb24uIFRoZW4gdGhlIERvY3RvciByZWdlbmVyYXRlcyBhbmQgc2hlJ3MgY2xpbmd5IGFmLiAKSWYsIHRoYW5rcyB0byBwb29yIGRpZXQsIG1lZGljYXRpb24sIGhvcm1vbmFsIGNoYW5nZXMgb3IgZGFtYWdlIGZyb20gY2hlbWljYWwgaGFpciBwcm9jZXNzZXMsIHlvdSdyZSBleHBlcmllbmNpbmcgdGhpbm5pbmcgaGFpciwgZGFuZHJ1ZmYgb3Igb3RoZXIgYW5ub3lpbmcgYnV0IG5vbm1lZGljYWwgc2NhbHAgY29uZGl0aW9ucywgeW91IG1pZ2h0IHdhbnQgdG8gY29uc2lkZXIgYSBwcm9mZXNzaW9uYWwgc2NhbHAgdHJlYXRtZW50LiAKVGhhdCBUcnVtcCB0d2VldCBvbiBDSElQVHJ1bXAncyB0d2VldCBvbiBDSElQIHRocmV3IGEgd3JlbmNoIGludG8gbmVnb3RpYXRpb25zLCB0aG91Z2ggaXRzIGV4YWN0IGVmZmVjdHMgd2VyZW4ndCBpbW1lZGlhdGVseSBjbGVhciBpbiB0aGUgbW9tZW50cyBhZnRlciBpdHMgZGVsaXZlcnkuIFNlbmF0ZSBHT1AgbGVhZGVycyB3aWxsIG5lZWQgcG9zc2libHkgbW9yZSB0aGFuIGEgZG96ZW4gRGVtb2NyYXRzIHRvIHNpZ24gb24gdG8gbWVhc3VyZSB0byBmdW5kIHRoZSBnb3Zlcm5tZW50IGJhc2VkIG9uIFNlbmF0ZSBydWxlcyByZXF1aXJpbmcgNjAgdm90ZXMgdG8gYnJlYWsgYSBmaWxpYnVzdGVyIGFuZCBhZHZhbmNlIChtb3JlIG9uIHRoYXQgYmVsb3cpLgpUYXR0bGUgdGFpbGluZyB0byBhIHRoaXJkIHBhcnR5IGlzIHdlYWsgYW5kIHVuZGVyaGFuZGVkIGFuZCBzaG91bGQgb25seSBiZSBhIGxhc3QgcmVzb3J0IGlmIHRoZXkgY29udGludWUgdG8gYmUgdW5yZWFzb25hYmxlIGxpa2Ugbm90IGdpdmluZyB5b3UgYW4gaG9uZXN0IGFuc3dlci4gCk9oLCBzbyBJIHdlbnQgdGhlcmUgYW5kIG9yZGVyZWQgdHdvIHRoaW5ncyBvZiBjaGlja2VuIGFuZCB3YWZmbGVzLCBub3QgcmVhbGl6aW5nIHRoYXQgZWFjaCB3YXMgbGlrZSAkMTcuIFdoZW4gdGhlIHdhaXRyZXNzIHNhaWQgc29tZXRoaW5nIGNyYXp5IGxpa2UgIiQzNiIgSSBkZWNpZGVkIHRvIG9ubHkgYnV5IG9uZS4gQnV0IEkgZ3Vlc3MgdGhlcmUgd2FzIGEgbWlzY29tbXVuaWNhdGlvbiBiZXR3ZWVuIHRoZSBmcm9udCBhbmQgdGhlIGtpdGNoZW4gYmVjYXVzZSBJIGdvdCB0d28uIApJIHdvdWxkIGJlIGNvbnRlbnQgdG8gaGF2ZSB0aGVtIGFzIGEgc3Ryb25nIG9wcG9uZW50LCBidXQgZXZlbiB0aGF0IGRpZG4gd29yayBvdXQgaW4gbXkgZ2FtZXMuIApCdXQgaWYgbm90LCB3ZSdsbCBwcm9iYWJseSBqdXN0IGdvIGRvd24gdG8gSGlnaCBQYXJrLCBnZXQgc29tZSBjb29sIGJyZWV6ZXMgaW4gdGhlIHBhcmssIG1heWJlIGhhbmcgb3V0IGluIFRoZSBKdW5jdGlvbi4iLiAKVmVyeSBjdXRlIGluZGVlZC4gCkF0aGVucyB3YXMgZmFtb3VzIGZvciBpdHMgaHVuZHJlZHMgb2Ygc2hvcHMgc2VsbGluZyBzY2VudGVkIGJvZHkgb2lscyBhbmQgc29saWQgaW5jZW5zZS9wZXJmdW1lcy4gClNvIGlmIHRoZSBvZmZpY2lhbHMgZGV0ZXJtaW5lZCB0aGF0IGhlIGxpZnRlZCBoaXMgZm9vdCBiZWZvcmUgc3RhcnRpbmcgdGhlIHNob3QgYXR0ZW1wdCwgaXQgYSB0aHJlZSBwb2ludCBmaWVsZCBnb2FsLCBieSBteSByZWFkaW5nIG9mIHRoZSBydWxlcy4KVGhlIHJlYXNvbiBpcyBzaW1wbGU6IGZ1bmRpbmcuIApZb3VyIHVzZSBvZiBUaGlyZCBQYXJ0eSBDb250ZW50IGlzIGF0IHlvdXIgb3duIHJpc2sgYW5kIHlvdSBzaG91bGQgbWFrZSBhbnkgaW52ZXN0aWdhdGlvbiB5b3UgZmVlbCBuZWNlc3NhcnkgYmVmb3JlIHByb2NlZWRpbmcgd2l0aCBhbnkgdHJhbnNhY3Rpb24gaW4gY29ubmVjdGlvbiB3aXRoIHN1Y2ggVGhpcmQgUGFydHkgQ29udGVudC4uIApCZXNvbmRlcnMgc29sY2hlIEtvbWJpbmF0aW9uZW4gdmVyZmhyZW4genUgZnJoIHp1IHZpZWwgYXVmcyBTcGllbCB6dSBzZXR6ZW4gdW5kIG1laXN0IHdpcmQgbWFuIGRhbm4gYW0gRW5kZSBkZXMgUG9rZXIgU3BpZWxlcyB2b24gZWluZXIgc29nZW5hbm50ZW4gUmFpc2UgSGFuZCBiZXJib3Rlbi4KSSBhbSBwYXJ0IG9mIHNvY2lldHksIGlmIEkgYW0gcGFydCBvZiB0aGUgaW5kdXN0cnksIHRoZW4gSSBhbSBwYXJ0IG9mIHRoZSBwcm9ibGVtLiBTbyB3aGF0IGFtIEkgZG9pbmcgdG8gY29udHJpYnV0ZSBpbiBhIHBvc2l0aXZlIHdheSwgdG8gbW92ZSB0aGUgbmVlZGxlIGluIGEgcG9zaXRpdmUgd2F5PyBUaGF0IHRvIG1lIG1lYW5zIHBsYXlpbmcgY2hhcmFjdGVycyB3aG8gYXJlIGNvbXBsaWNhdGVkLCB3b21lbiB3aG8gYXJlIGNvbXBsaWNhdGVkLCBwbGF5aW5nIHdvbWVuIHdobyBhcmUgbm90IGp1c3QgYW4gYW5nZWxpYyBwb3J0cmFpdCBvZiBwZXJmZWN0aW9uIG9yIGFyZSBub3QganVzdCB0aGlzIHNleHkgb2JqZWN0IG9mIGRlc2lyZS4gSSBhbSBpbnRlcmVzdGVkIGluIHBsYXlpbmcgYXV0aGVudGljIHdvbWVuLCB3b21lbiB0aGF0IEkga25vdyBpbiBteSBsaWZlIHdobyBtYWtlIG1pc3Rha2VzLCBhcmUgbm9ibGUgc29tZXRpbWVzLCBhcmUgY29tcGV0aXRpdmUgc29tZXRpbWVzLCBhbmQgd2hvIGNhbiBnZXQgcXVpdGUgbWVzc3kgc29tZXRpbWVzLiAKVGFyZWUgYW5kIFdhdWNob3BlIGNsYXNoIGF0IEFuZHJld3MgUGFyayBiZWZvcmUgdGhlIFRhcmVlIHNpZGUgZmluaXNoIHdpdGggYSBtYXRjaCBhZ2FpbnN0IFBpcmF0ZXMgbmV4dCB3ZWVrZW5kLiAKQW55d2F5LCBrZWVwIHRoZSBzdWJyZWRkaXQgZm9yIHlvdSBhbmQgZG9taW5hdGUgaXQgYWxsIHlvdSB3YW50LiAKQW5udWFsIFNhbGFyeSBhbmQgSG91cmx5IFdhZ2VUaGUgbWVkaWFuIGFubnVhbCBzYWxhcnkgZm9yIG1lbnRhbCBoZWFsdGggY291bnNlbG9ycyBpbiB0aGUgVW5pdGVkIFN0YXRlcyB3YXMgJDM4LDE1MCBwZXIgeWVhciwgYXMgb2YgMjAxMC4gVGhlIGF2ZXJhZ2UgaG91cmx5IHNhbGFyeSwgd2hlbiBjb21iaW5lZCB3aXRoIHRoYXQgb2YgbWFycmlhZ2UgYW5kIGZhbWlseSBjb3Vuc2Vsb3JzLCB3YXMgJDE5LjA5IHBlciBob3VyLiBUaGUgdG9wIDEwIHBlcmNlbnQgb2YgdGhlIGVhcm5lcnMgYXZlcmFnZWQgbW9yZSB0aGFuICQ2Myw2MzAgcGVyIHllYXIgd2hpbGUgdGhlIGxvd2VzdCAxMCBwZXJjZW50IG1hZGUganVzdCBvdmVyICQyNCwwMDAuIApJIGFiYW5kb25lZCBpbXBsZW1lbnRpbmcgYWN0dWFsIHN0cmF0ZWd5IGJlY2F1c2UgeW91IGNvdWxkIGp1c3QgZ28gYnV5IGEgYm90Li4gClNvbWV0aW1lcyBJIGdpdmUgMTUwJSBvdGhlciB0aW1lcyBoZSBkb2VzLiAKVFNNIHdpbGwgMTAwJSBsb3NlIGlmIHRoZXkgY2FuIGVhcm4gYW55IHNpZ25pZmljYW50IGdvbGQgbGVhZCBkdXJpbmcgbGFuaW5nIHBoYXNlLiAKSWYgbXkgaHVzYmFuZCB3YXMgYmVpbmcgbmVlZHksIHNoZSB3YXMgaGFwcHkgaGVyIGJmIHdhcyBzbyBpbmRlcGVuZGVudCwgaWYgd2Ugd2VyZSBoYXZpbmcgY29tbXVuaWNhdGlvbiBpc3N1ZXMsIHNoZSB3YXMgaGFwcHkgaGVyIGJmIHdhcyBhIGxpdHRsZSBuZWVkeS4gQXQgb25lIHBvaW50IEknZCBxdWl0IG15IGpvYiBhbmQgd2FzIGdldHRpbmcgcmVhZHkgdG8gc3RhcnQgbXkgbmV3IG9uZSwgdGhlcmUgd2FzIGFib3V0IDIgd2Vla3Mgd2hlcmUgSSBkaWRuJ3QgaGF2ZSBhIGpvYiwgZHVyaW5nIHRoYXQgdGltZSBJIHdhcyBkb2luZyBob3VzZXdvcmsgbGlrZSBpdCB3YXMgbXkgam9iLiAKT2gsIE5laW4sIGRhY2h0ZSBIZWxlbiwgYWJlciBzaWUgd29sbHRlIGpldHp0IGRhcmJlciBoaW53ZWcga29tbWVuIHVuZCBhbnR3b3J0ZXRlIHJhc2NoOiAiRHJlaSBNYWwiLiAKU28gZmFyIHRoZSByZXNwb25zZSBmcm9tIHRoZSBlbXBsb3llZXMgaGFzIGJlZW4gcG9zaXRpdmUgYmVjYXVzZSBpdCBnaXZlcyB1cyBhbGwgdGhlIGFiaWxpdHkgdG8gc2hvdyBob3cgcmlkaWN1bG91cyB3ZSB0aGluayBpdCBpcyB3aXRob3V0IHNheWluZyBhbnl0aGluZy4gCkVuIGRhYXJuYSB2b2xnZGVuIHdlIGRlIG1lbnNlbiBzdHJvb20gcmljaHRpbmcgaGV0IGVpZ2VubGlqa2UgdGVudG9vbnN0ZWxsaW5nc3BhcmsuIE9uZGVyIGVlbiBncm90ZSB0b2VnYW5nc3Bvb3J0IGRvb3Iga3dhbWVuIHdlIGluIGVlbiBncm9vdCBwYXJrL3dhbmRlbGJvdWxldmFyZCwgbWV0IGJsaW5rZW5kZSBmb250ZWluZW4sIHBhdmlsam9lbmVuIHZhbiBkZSB2ZXJzY2hpbGxlbmRlIChleCkgc292amV0IHJlcHVibGlla2VuLCBrcmFhbXBqZXMsIGF0dHJhY3RpZXMsIFplZXIgdG9mIG9tIGVlbnMgcm9uZCB0ZSBsb3BlbiwgZW4gYmxpamtiYWFyIHppam4gZGUgZm9udGVpbmVuICh6ZWVyIHNqaWVrZSBmb250ZWluZW4sIGRpZSBidmIuIApBZ2Fpbi4uIApJcyBteSBmYXZvdXJpdGUgY2hhcnQsIHRoZSBtYXlvciBzYWlkIGFzIGhlIGZvY3VzZWQgb24gdGhlIGVmZmVjdCBvZiB0YXggZnJlZXplcyBmb2xsb3dlZCBieSBhIGNvdXBsZSBvZiB5ZWFycyBvZiBiZWxvdyBpbmZsYXRpb24gdGF4IGluY3JlYXNlcywgb3ZlciB0aGUgbGFzdCBkZWNhZGUuIEluIDIwMDgsIHRoZSB0b3RhbCB0YWtlbiBmcm9tIHRheHBheWVycyB0b3RhbGxlZCAkNDEyIG1pbGxpb24uIEJ5IDIwMTgsIHRoZSB0b3RhbCB3YXMgJDQwNCBtaWxsaW9uLiBJZiB0YXhlcyBoYWQgaW5jcmVhc2VkIHR3byBwZXIgY2VudCBhIHllYXIgb3ZlciB0aGF0IHRpbWUsIHBlb3BsZSB0YXhlcyB3b3VsZCBoYXZlIHJpc2VuIDI0IHBlciBjZW50LCBmb3IgYSB0b3RhbCBvZiAkNTAyIG1pbGxpb24sIGhlIHNhaWQuCkdvb2QgbmlnaHQsIHNsZWVwIHRpZ2h0LCBkb24ndCBsZXQgdGhlIGJlZGJ1Z3MgYml0ZS4gQXJlIHRoZXNlIGluc2VjdHMgdGhlIGltYWdpbmFyeSBzdHVmZiBvZiByaHltZSwgb3Igc2hvdWxkIHdlIHdhdGNoIG91dCBmb3IgLiAzLiBXaGF0IGRvIGJlZGJ1Z3MgZWF0PyBibG9vZC4gY290dG9uIGZpYmVycy4gdHJhc2guIDQuIFdoeSBhcmUgYmVkYnVncyBjYWxsZWQgImJlZGJ1Z3MiPyAuIGNyYWNrcyBpbiB0aGUgd2FsbC4gMjggQXVnIDIwMTcgLiA0IEFwciAyMDE4IC4gCkluIGZhY3QsIGEgbG90IG9mIGdhbWVycyBhcmUgbWFraW5nIG92ZXIgc2l4IGZpZ3VyZXMgd29ydGggb2Ygc2FsYXJ5LiBUaGUgbWFpbiB0aGluZyBpcyB0aGF0IHRoZXkgcGxheSBhbmQgbGl2ZSBzdHJlYW0gdGhlaXIgZ2FtZXMgYW5kIGludGVyYWN0IHdpdGggdmFyaW91cyB1c2Vycy4gCjE2LiBDdXJyZW50bHkgYXZhaWxhYmxlIHN1cHBsZW1lbnRzIGFyZSBtYWRlIGZyb20gZmlzaCBvaWwgdXNpbmcgYSBmcmFjdGlvbmF0aW9uIHByb2Nlc3MgdG8gY3JlYXRlIGFuIFNQTSBlbnJpY2hlZCBwcm9kdWN0LgpUdXJuIGJyb3VnaHQgYSBsb3Qgb2Ygc3RyYWlnaHQgcG9zc2liaWxpdGllcywgYW5kIHNvbWUgdHdvIHBhaXIgcG9zc2liaWxpdGllcyB0aGF0IGJlYXQgbWUsIHNvIHdoZW4gSSBjaGVja2VkIHRvLCBJIGNoZWNrIGFzIHdlbGwuLiAKSG93ZXZlciBzb21lIGFyZSBjaGVhcCBhbmQgc29tZSBhcmUgcmVhbGx5IGV4Y2x1c2l2ZS4gWW91IHNob3VsZCBzZWxlY3Qgd2hpY2ggb25lIHlvdSBzaG91bGQgYnV5IGFuZCB3aGljaCBvbmUgc3VpdHMgeW91LiAKSGFkIGEgbG90IG9mIHN0b21hY2ggcHJvYmxlbXMgd2hlbiBJIHdhcyAxMyBhbmQgdGhlIGRvY3RvcnMgcnVsZWQgYWxsIHRoZSBwcm9ibGVtcyBhcyBzZXZlcmUgYWNpZCByZWZsdXggKHNldmVyZSBlbm91Z2ggdG8gZXJvZGUgbW9zdCBvZiBteSBzdG9tYWNoIGxpbmluZyBhcyBteSBib2R5IHdhcyBwcm9kdWNpbmcgM3ggbW9yZSBhY2lkaWMgYmlsZSB0aGFuIG1vc3QgcGVvcGxlKS4KSW4gdGhlIERhcmsgQWdlcywgdGhlIFtsaXRlcmFjeV0gcmF0ZSB3YXMgYXJvdW5kIDYlLiBUb2RheSBhYm91dCAwLjUlIG9mIHRoZSB3b3JsZCBjYW4gcmVhZCBhbmQgd3JpdGUgd2l0aCBhIGNvbXB1dGVyIHRoZSBjb21wdXRlciBsaXRlcmFjeSByYXRlIGlzIGxlc3MgdGhhbiB0aGUgYWN0dWFsIGxpdGVyYWN5IGluIHRoZSBEYXJrIEFnZXMuIApJIHdvcmsgaW4gYSBob3NwaXRhbCBhcyBhIFBDVCAocGF0aWVudCBjYXJlIHRlY2gpIGkgd2FzIGluIGEgTWNEb25hbGQncyB3aXRoIG15IGtpZHMgd2FpdGluZyBmb3IgdGhlbSB0byBiZSBkb25lIHVzaW5nIHRoZSBiYXRocm9vbS4gQXMgSSB3YXMgc3RhbmRpbmcgb3V0c2lkZSB0aGUgc3RhbGwgdGhpcyBvbGRlciBsYWR5IGRpZG4ndCBsb2NrIHRoZSBkb29yIGFuZCB0aGUgZG9vciB3YXMgaGFsZiBvcGVuLiAKRGF2aXMgbG9va3MgZXhjaXRpbmcuIApTaGUgbWFkZSB1cyBhbGwgZmVlbCBncmVhdC4gCiJUaGVyZSBubyBkb3VidCB0aGF0IHRoaXMgcGFydG5lcnNoaXAgd2lsbCBpbmNyZWFzZSB0aGUgcmVhY2ggb2Ygb3VyIGxlYWd1ZSBjb250ZW50LCIgVmxhc3RlbGljYSBzYWlkLiAKSGUgdGhlbiB3ZW50IHRvIGEgbmVhcmJ5IHN0cmlwIGNsdWIuIFRoZSBjbHViIHdvdWxkbiB0YWtlIGVtLCBidXQgYSBjb3VwbGUgb2YgdGhlIHN0cmlwcGVycyB3b3VsZC4gTGV0IGp1c3Qgc2F5IGhlIGhhZCBhIHJhdGhlciBlbmpveWFibGUgbmlnaHQgaGUgd291bGQgbm9ybWFsbHkgbmV2ZXIgcGF5IGZvciBvciBiZSBhYmxlIHRvIGFmZm9yZC4uIApTaGUgcmVxdWVzdGVkIG9yZ2FzbSBhcyBtZWRpY2luZSBmb3IgaGVyIGhlYWRhY2hlLCBzdWNoIGEgbmljZSBtYW5ldXZlciB0byBnZXQgbWUuIApIZSBjYW4gZ2V0IGl0IGJlZm9yZSBoZSB0cmF2ZWxzISBUaGF0IHdoYXQgd2Ugc2F5aW5nLiBCZWZvcmUgeW91IHRyYXZlbCB5b3UgZmlsbCBvdXQgYSBmb3JtIHRoYXQgc2F5cyAiSGV5LCBJIGdvdCBzb21lIGZsdXRlcyBtYWRlIG91dCBvZiBiYW1ib28iIGFuZCB0aGV5IHNlbmQgeW91IGEgcGVybWl0IHNheWluZyAiQ0JQIGd1eXMsIGJhbWJvbyBmbHV0ZXMgYXJlIG9rYXksIGxldCB0aGVtIHRocm91Z2giLiAKSSBxdWVzdGlvbiBldmVyeSBsb29rLCBldmVyeSBpbnRlcmFjdGlvbiwgYmVjYXVzZSBoZSdzIGp1c3Qgb2ZmLiAKRXhjaGFuZ2VzIGFyZSBidXNpbmVzc2VzLCB0aGV5IGNhbiBkbyB3aGF0ZXZlciB0aGV5IHdhbnQgaWYgdGhleSBkZWVtIGl0IHRvIGJlIHByb2ZpdGFibGUuIApJbiBmYWN0LCBCbG9vbWJlcmcgcG91cmVkICQ5MCBtaWxsaW9uIG9mIGhpcyBvd24gZG9sbGFycyBpbnRvIHRoZSBlbGVjdGlvbi4uIApEZXNpZ25pbmcgcmVsZXZhbnQgcG9saWNpZXMgYW5kIGZyYW1ld29ya3MsVGhlIEhSIEJyYW5jaCBwcm92aWRlcyBjb3JlIGFuZCBzaGFyZWQgc2VydmljZXMgdG8gVW5pdmVyc2l0eSBzdGFmZiwgbWFuYWdlcnMsIGFuZCB0aXRsZWhvbGRlcnMgb2YgdGhlIFVuaXZlcnNpdHkgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBIUiBTZXJ2aWNlIENhdGFsb2d1ZS4KSSBkb24gbWluZCwgYnV0IEkgcHJlZmVyIHRvIGdldCBoaWdoZXIgc2V0dGluZ3MgaWYgcG9zc2libGUgd2hpbGUgc3RheWluZyBpbiBidWRnZXQuIApMJ2ltcG9zdHVyZSBlc3QgcXVvdGlkaWVubmUuIEMnZXN0IGRldmVudSB1biBzcG9ydCBtZGlhdGlxdWUgbmF0aW9uYWxlIDogdGFsbGVyIGxhIGd1aW1hdXZlIHByb3BhZ2FuZGlzdGUgdG91cyBsZXMgam91cnMgZGFucyBsZXMgdHJvbmNoZXMgY2l0b3llbm5lcy4KSSBzcGVudCBldmVyeSBkYXkgaW4gcGFpbiBmb3Igb3ZlciBhIHllYXIgYW5kIGEgaGFsZi4gQW5vdGhlciA2IG1vbnRocyBiZWZvcmUgSSBjb3VsZCBkbyB0aGluZ3MgbGlrZSBwdXQgb24gc29ja3Mgd2l0aG91dCBwYWluLiBJIGNvdWxkbiBzaXQgd2l0aG91dCBiZWluZyBpbiBhd2Z1bCBwYWluLCBzY2lhdGljYSwgYnV0IGRlYmlsaXRhdGluZy4gClByb2N0ZXIgR2FtYmxlIENvLiAKSGUgd2FzIHZlcnkgbmljZSBhbmQgSSBrbm93IGhlIGhhZCB0byBiZSBkZWFsaW5nIHdpdGggc29tZSBndWlsdC4gRXZlbnR1YWxseSwgaGVyIHByb2dub3NpcyB3YXMgc28gcG9vciB0aGV5IHdpdGhkcmV3IGxpZmUgc3VwcG9ydCBzaGUgZGllZC4gCnBheWluZyB0byBiZSB0aGUgYWR1bHQgaW4gdGhlIHJvb20KVGhlIGJpZyBzZWxsOiBFZGVuYnJpZGdlIGlzIGEgY29sbGVjdGlvbiBvZiA1NyB0b3duaG9tZXMgd2l0aCBmbG9vciBwbGFucyB0aGF0IGFyZSBkaXZpZGVkIG92ZXIgdGhyZWUgbGV2ZWxzIGFuZCBpbnRlZ3JhdGVkIHNpZGUgYnkgc2lkZSBkb3VibGUgZ2FyYWdlcy4gNTcgICA1NzQwIEdhcnJpc29uIFJvYWQsIFJpY2htb25kU2l6ZTogMSw3Njggc3EuIApTb21lIHBoeXNpY2lhbnMgY2xhc3NpZnkgY2FuY2VyIHBhaW4gd2l0aCBjaHJvbmljIHBhaW4uIAoiTGlwIFN5bmMgQmF0dGxlIiBlc3QgdW4gcHJvZ3JhbW1lIHRsdmlzIGRlIGxhIGNoYW5lIFBhcmFtb3VudCBOZXR3b3JrIG8gc2UgZHJvdWxlbnQgZGVzIGJhdHRsZXMsIGNvbXByZW5leiBkZXMgY29tYmF0cyBkZSBjaGFudCBldCBkZSBkYW5zZS4gQ2hhcXVlIHNlbWFpbmUgbGVzIHByc2VudGF0ZXVycywgbGUgcmFwcGV1ciBMTCBDb29sIEogZXQgQ2hyaXNzeSBUZWlnZW4sIHJlb2l2ZW50IGRldXggY2xicml0cyBxdWkgcyBlbiBwdWJsaWMsIGNlIGRlcm5pZXIgZGNpZGFudCBkdSB2YWlucXVldXIgZGUgbGEgYmF0dGxlLiAKRXZlcnkgcGxheWVyIG11c3QgcGxhY2UgYW4gYW50ZSBpbnRvIHRoZSBjZW50ZXIgb2YgdGhlIHRhYmxlLCBrbm93biBhcyB0aGUgcG90IHdoZXJlIGFsbCBvZiB0aGUgd2FnZXJlZCBtb25leSBpcyBzdG9yZWQuIFRoZSBhbnRlIGlzIGEgdG9rZW4gYmV0IHRoYXQgYWxsIHBsYXllcnMgc2hvdWxkIGFncmVlIG9uIGFzIHRoZSBtaW5pbXVtIHRvIGJlIGRlYWx0IGluLiBPbmNlIHRoZSBhbnRlIGlzIHBsYWNlZCBpbiB0aGUgcG90LCBndWFyYW50ZWVpbmcgdGhhdCBzb21lb25lIHdpbGwgd2luIHNvbWV0aGluZyBhbmQgc29tZW9uZSB3aWxsIGxvc2Ugc29tZXRoaW5nLCBwbGF5IHJlYWxseSBiZWdpbnMuCk51bWJlciBmb3VyIHN0ZXAgaXMgdGhhdCBlYWNoIHBsYXllciB3aWxsIHNob3cgdGhlIGNhcmRzIHRvIHRoZSB0YWJsZS4gVGhlbiBoZXIgYWN0aXZlIGNhcmRzIGNhbiBoYXZlIHRvIG9wdGlvbiBvZiBiZWluZyBhZGRlZCB0byB0aGUgZmFjZSB1cCBjYXJkLiBBIHBsYXllciB3aXRoIDIgY2FyZHMgdGhhdCBhcmUgYWN0aXZlIHNoZSBjYW4gYWRkIHRoYXQgdG8gdGhlIHN0b2NrcGlsZS4gCkNvb2tpbmcgd2l0aCBjaWRlcgpUaGUgRXhjZWwgZmlsZSByZWNlaXZlZCBieSB0aGUgcG9saWNlIGFwcGFyZW50bHkgaW5jbHVkZWQgdGhlIGNvbnZlcnNhdGlvbiB0aGF0IG9jY3VycmVkIGluIERlY2VtYmVyIDIwMTUsIGJ1dCBpdCBsb29rcyBhcyBpZiB0aGUgRXhjZWwgZmlsZSBhbG9uZSB3aWxsIG5vdCBiZSBzdWZmaWNpZW50IGZvciB1c2UgYXMgcHJvb2YgZm9yIGNyaW1pbmFsIGNoYXJnZXMgYXMgaXQgaXMgZGlmZmljdWx0IHRvIHJ1bGUgb3V0IHRoZSBwb3NzaWJpbGl0eSBvZiBmYWJyaWNhdGlvbi4gCldlYXIgbG91ZCBjb2xvcnMsIHBhaW50IHlvdXIgd2FsbHMgc3VubnkgY29sb3JzLiAKRWRpdDogQWxzbywgdGhlcmUgaXMga25vdyB3YXkgb2YgdGVsbGluZyBpZiB0aGVyZSBhcmUgZGFuZ2Vyb3VzIGNvbnRhbWluYXRlcyBpbiB0aGUgd2F0ZXIgZnJvbSBhIHBob3RvLiBZb3Ugd2lsbCBuZWVkIHRvIGhhdmUgdGhlIHdhdGVyIHNhbXBsZWQgYW5kIHRlc3RlZCBieSBhIGxhYi4gRG8gbm90IHVzZSBhIHNlcnZpY2UgdGhhdCBzZWxscyBzb2Z0ZW5lci9maWx0cmF0aW9uIHN5c3RlbXMuIFRoZXkgd2lsbCBpbmV2aXRhYmx5IHRlbGwgeW91IHRoYXQgeW91ciB3YXRlciBpcyB1bnNhZmUgYW5kIHRyeSBhbmQgdGFsayB5b3UgaW50byBidXlpbmcgYW4gZXhwZW5zaXZlIHN5c3RlbS4gSW5zdGVhZCwgZmluZCBvdXQgaWYgeW91ciBzdGF0ZSBvciBtdW5pY2lwYWxpdHkgb2ZmZXJzIHdhdGVyIHRlc3RpbmcsIGlmIG5vdCwgZmluZCBhIHVuaXZlcnNpdHkgb3IgaW5kZXBlbmRlbnQgRVBBIGFwcHJvdmVkIGxhYi4KVGhpcyBnaXZlcyBhIHRvdGFsIG9mIDUyNTE1MDQ5NDguIApJIHBsYXllZCAkNS8kMTAgYSBmZXcgd2Vla3MgYWdvIHdpdGggQmlsemVyaWFuIGF0IEFyaWEuIEdyYW50ZWQgaXQgd2FzICQ1LyQxMCBhbmQgbGlrZSBtaWNybyBzdGFrZXMgdG8gaGltLCBidXQgaGUgd2FzIHByZXR0eSBiYWQuIApJIG1heSBoYXZlIGJlZW4gYSBnb29kIHBsYXllciBkZWVwIGRvd24gYnV0IHRoZSByYWtlIG9mIE5ZQyBwcml2YXRlIGdhbWVzLCB0aGUgcG9vciBwbGF5IHRoYXQgY2FtZSBhYm91dCBmcm9tIG15IHRpbHQsIGFuZCB0aGUgYWRkaWN0aW9uIGFzcGVjdHMgdGhhdCBkZXN0cm95ZWQgbXkgc2FuaXR5IGFuZCBpbiB0dXJuIHBsYXkgY2FtZSBhYm91dC4gSSBsb3N0IG15IGdmIG9mIDMuNSB5ZWFycyB3aG8gSSB3YXMgdW5kb3VidGVkbHkgZ29pbmcgdG8gbWFycnksIGFuZCB3aG8gSSBsb3ZlZCBhbmQgc3RpbGwgdGhpbmsgYWJvdXQgY29uc3RhbnRseS4gCkFkYWNvcmUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KVHdvIGluZGVwZW5kZW50IHN0dWRpZXMgcHVibGlzaGVkIGluIHRoZSBBbWVyaWNhbiBKb3VybmFsIG9mIENsaW5pY2FsIE51dHJpdGlvbiBoYXZlIGZvdW5kIHRoYXQgc3VwcGxlbWVudGluZyBPbWVnYSAzIGZhdHMgbG93ZXJzIHRoZSByZWxlYXNlIG9mIGluZmxhbW1hdG9yeSBiaW9tYXJrZXJzIHRoYXQgYXJlIGludm9sdmVkIGluIGRhbWFnZSB0byBjZWxscyBjYWxsZWQgc29sdWJsZSBhZGhlc2lvbiBtb2xlY3VsZXMuCkJ1dCBldmVuIG9wdGltaXN0aWNhbGx5LCBwcm9kdWN0aW9uIHRpbWUgb2YgdGhlIG1vdmllcyBjb3VsZCB0aHJvdyB0aGlzIG9mZiB1bmxlc3Mgd2UgYXNzdW1lIHRoaXMgaXMgYSBodW5kcmVkIHRob3VzYW5kIHllYXJzIGluIHRoZSBmdXR1cmUgYW5kIHdlIGp1c3QgcmV3YXRjaGluZyB0aGVtLgpIb3cgdGhlIGNvbXBsZXRlZCBTdGFyIGNvbXBsZXggd2lsbCBsb29rIGxpa2UuIEltYWdlOiBTdXBwbGllZApEaXNjb3RhYmxlICAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KSnVzdCBhYm91dCBhbnlib2R5IHJlYWRpbmcgdGhpcyB3aWxsIGtub3cgd2hhdCBZYWhvbyEgaXMuIFlhaG9vISB3YXMgdGhlIGZpcnN0IG9mIGl0cyBraW5kOiBhIG1hbiBtYWRlIGRpcmVjdG9yeSwgb24gdGhlIEludGVybmV0LCBmb3IgdGhlIEludGVybmV0LiAKQm9uYWxibyBTcHJpbmcgQmx1ZWJlcnJ5IERhbmNlOiBHZXQgeW91ciBmdW5rIG9uIGZvciB0aGUgQm9uYWxibyBTcHJpbmcgRGFuY2UuIApXZSB3YW50IHRvIHNheSwgdGhpcyBpcyBmb3IgZXZlcnlib2R5LiAKQW1hbmRhOiBMaWZlIGhhcyBjaGFuZ2VkIGEgbG90LiBJbiBteSBmYXRoZXIncyB0aW1lLCB0aGV5IGRpZG4ndCBoYXZlIGEgbG90IG9mIHRoaW5ncyBsaWtlIEkgZG8uIApIZSBzYXlzIGhlIGxpa2VzIHRvIHdhdGNoIEhvdXNlIG9mIENhcmRzIG9uIE5ldGZsaXguIEhlIGhhcyBhIHdpZmUgd2hvIHdhcyBzY2hvb2xlZCBpbiB0aGUgVUsgYW5kIGEgMTQgbW9udGggb2xkIHNvbiBMdWNhcy4gCkkgbG9va2VkIHVwIG15IG9sZCBwb3N0cyBvbiBDcmVhdGl2ZSBDT1cuIEkgb25seSBoYXZlIGEgaGFuZGZ1bC4gCk1peCB0b2dldGhlciBhbGwgb2YgeW91ciBzYXVjZSBpbmdyZWRpZW50cywgdGhlbiBhZGQgdG8gYSBwYW4gYmlnIGVub3VnaCB0byBmaXQgYWxsIG9mIHlvdXIgY2hpY2tlbi4gCkNvb2sgYmFjb24gZmlyc3QgICB1bnRpbCBqdXN0IGJhcmVseSBjcmlzcHkuCkV2ZXJ5dGhpbmcgcGh5c2ljYWwgaXMgZWFzaWVyLiBJIGhhdGVkIGRvaW5nIGNob3JlcyBsaWtlIHRoZSBsYXVuZHJ5IGJlZm9yZSBiZWNhdXNlIHR3byBmbGlnaHRzIG9mIHN0YWlycyBhbmQgYWxsIHRoZSBiZW5kaW5nIHdlcmUgc28gaGFyZCwgYnV0IG5vdyBpdCdzIG5vdCBhIHByb2JsZW0gYW5kIHRoZXkgYXJlIGVhc3kuIApGb3IgdGhvc2UgUm9jaGVzdGFyaWFucyB3aG8gbXVzdCBnYW1ibGUsIGNhc2lub3MgYWxyZWFkeSBleGlzdCBpbiB0aGUgc3RhdGUuIENhc2lub3MgZG9uJ3QgZml0IGludG8gUm9jaGVzdGVyJ3MgaGlzdG9yeSBvciBmdXR1cmUuIEkgaG9wZSByZXNpZGVudHMgcmVtZW1iZXIgb3VyIHNoYXJlZCBsZWdhY3kgb2YgZWR1Y2F0aW9uLCBjdWx0dXJlLCBkaXNjaXBsaW5lIGFuZCBpbmR1c3RyeSBzbyBhcyB0byByZXNpc3QgdGhlIGZhbHNlaG9vZHMgdGhhdCB3aWxsIGNvbWUgd2l0aCBhbnkgcHJvcG9zYWwgZm9yIGEgY2FzaW5vLi4gCllldCwgSSBkbyBiZWxpZXZlIHknYWxsIG5lZWQgdG8gZ2V0IG9mZiB5b3VyIGhpZ2ggaG9yc2VzIGJlY2F1c2UgaXQgcmVhbGx5IGlzbid0IHRoaXMgdW5pdmVyc2FsIHN0YW5kYXJkIGFzIG1hbnkgc2VlbSB0byB0aGluay4gQXJndWFibHkgdGhhdCBzb3J0IG9mIHJlc3BvbnNlIHRvIG15IHJlcXVlc3QgaXMgcnVkZSBpbiBpdHNlbGYuLiAKQ2hyaXN0aWFucyBjYW4gYW5kIERPIGluZGVlZCBtYWtlIGdvb2Qgc2NpZW50aXN0cywgcGFydGljdWxhcmx5IHRob3NlIHdobyB3b3VsZCBwdXJwb3J0IHRvIGJlIHBvbGl0aWNhbGx5IGluY2xpbmVkLiAKVGVycnkgUmVpbmhhcnQKVGhlIG1ham9yaXR5IG9mIHRoYXQgYW1vdW50IGNvbWVzIGZyb20gaWxsZWdhbCBhbGllbnMuIEl0IHNlcnZlcyBhcyBkZSBmYWN0byB3ZWxmYXJlIGZvciBwb29yIGZhbWlsaWVzIGluIE1leGljby4gCkFsbCB0aGF0IHRvIHNheSBQTEVBU0UgYmUgZXh0cmEgY2FyZWZ1bCBvbiBhIGJpa2UuLiAKVHJ5IGNlZSBsby4gU29tZXRpbWVzIGNhbGxlZCBsbyBkaWNlLCBpbiB0aGlzIHBvcHVsYXIgZ2FtZSwgZWFjaCBwbGF5ZXIgaGFzIHRocmVlIGRpY2UsIHVzdWFsbHkgaW4gc29tZSBraW5kIG9mIGN1cCwgYW5kIGVhY2ggcGxheWVyIHJvbGxzIHNpbXVsdGFuZW91c2x5IGFmdGVyIGEgcm91bmQgb2YgYmV0dGluZy4gVGhlIG9iamVjdCBpcyB0byBnZXQgdGhlIGhpZ2hlc3QgcG9zc2libGUgc2NvcmUsIHRob3VnaCB0aGUgc2NvcmluZyB3b3JrcyBzb21ld2hhdCBsaWtlIHBva2VyLlsxMl0KUmluc2UgaXQgd2l0aCB3YXRlciBhbmQgZ2VudGx5IHdhc2ggd2l0aCBhIGNsZWFuIHVuIHNvYXBlZCBzcG9uZ2UgaWYgbmVjZXNzYXJ5LiBJZiB0aGVyZSdzIHN0dWNrIG9uIGZvb2QgSSB1c2Ugb2lsIHdpdGggYSBsaXR0bGUgYml0IG9mIHNhbHQgYW5kIGdlbnRseSBzY3J1YiB3aXRoIGEgcGFwZXIgdG93ZWwsIHRoZW4gcmluc2UgaXQgd2l0aCB3YXRlci4gSSBkcnkgaXQgY29tcGxldGVseSBiZWZvcmUgcHV0dGluZyBpdCBhd2F5LgpJdCBkb2VzbiBuZWNlc3NhcmlseSBoYXZlIHRvIGRvIHdpdGggdGhlIGludGVsbGVjdCBvZiB0aGUgcG9wdWxhdGlvbiwgaXQgaGFzIHRvIGRvIHdpdGggdGhlIGluZnJhc3RydWN0dXJlIGFuZCBlY29ub21pY2FsIGJlbmVmaXRzIHRoYXQgY29tZXMgd2l0aCB0aG9zZSB1bml2ZXJzaXRpZXMuIApUaGUgbHVuY2ggd2FzIGp1c3Qgb25lIGluIGEgc2VyaWVzIG9mIGdhbGEgZXZlbnRzIHRocm93biBlYWNoIHllYXIgYnkgdGhlIGZvdW5kYXRpb24gc2luY2UgV2FybmUgc2V0IHVwIHRoZSBNZWxib3VybmUgYmFzZWQgY2hpbGRyZW4gY2hhcml0eSBpbiAyMDA0LiAKSSBtZWFuIHNoZSB3YXNuIHVnbHkgYnkgYW55IG1lYW5zIGJ1dCBqdXN0IG5vdCBteSB0eXBlLiBBbHNvIHRoaXMgd2FzIHJlYWxseSB0aGUgZmlyc3QgdGltZSBJIGV2ZXIgc2VlbiBoZXIuIFdlIHdlcmUgbmV2ZXIgaW4gc2Nob29sIGF0IHRoZSBzYW1lIHRpbWUgYmVjYXVzZSBvZiB0aGUgYWdlIGRpZmZlcmVuY2UuIApNb21lbnRzIGxpa2UgdGhhdCBqdXN0IGxldHMgeW91IGtub3cgdGhhdCB0aGVyZSBhcmUgcGVvcGxlIG91dCB0aGVyZSB3aG8gcGxheSBmb3IgZnVuLiBJbiBvdXIgY2FzZSB3ZSBsaWtlIHRvIHByb3ZpZGUgYSBuaWNlIHBsYXlpbmcgYXJlYSBmb3Igb3VyIGZyaWVuZHMgYW5kIGZhbWlseSwgb3IgYW55b25lIGVsc2Ugd2hvIHN0b3BzIGJ5LiBTbyB3aGVuIHdlIHdlcmUgcmVhZHkgdG8gdXBncmFkZSBvdXIgcG9rZXIgYWNjZXNzb3JpZXMsIHRoZSAyMDAgUG9rZXIgQ2hpcCBUcmkgQ29sb3IgU3VpdCBTZXQgd2l0aCBDbGVhciBBbHVtaW51bSBDYXNlIGNhbWUgYWNyb3NzIG91ciBwYXRoLiAKSW4gY29sbGVnZSBvbmUgbmlnaHQgSSB3YXMgY3Jvc3MgZmFkZWQ7IG1vc3QgZnVja2VkIHVwIEkgYmVlbiBteSBlbnRpcmUgbGlmZS4gSSBzdHVtYmxlIGludG8gbXkgYXBhcnRtZW50LCBhbmQgZGVjaWRlIEkgd2FudCB0byBzaXQgZG93bi4gSW5zdGVhZCBvZiB0aGUgY291Y2ggMyBmZWV0IGF3YXksIEkgcHVzaCB0aGUgVFYgdG8gdGhlIGJhY2sgb2YgdGhlIHRhYmxlIGFuZCBzaXQgZG93biB3aGVyZSB0aGUgVFYgdXN1YWxseSBpcy4gCklmIHlvdSByZW50IGEgbW9iaWxlIGhvbWUsIGl0IGp1c3QgbGlrZSBhbiBhcGFydG1lbnQuIFlvdSBzaWduIGEgcmVudGFsIGNvbnRyYWN0IHdpdGggdGhlIG93bmVyL3Byb3BlcnR5IG1hbmFnZXIuIApPciBhdCBhbGwgaW4gc29tZSBjYXNlcy4gCkRhdmlkIGFsd2F5cyBob3N0cyBhIHBva2VyIGdhbWUgb24gRnJpZGF5IG9yIFNhdHVyZGF5IG5pZ2h0LiAKV2lubmVycyBhcmUgZW5kdXJpbmc6IFRoZSB0cml1bXBoYW50IHBsYXllcnMgYXJlIHVzdWFsbHkgdG9sZXJhbnQuIEl0IGlzIG9mdGVuIHNlZW4gdGhhdCB0aGUgcGxheWVycyBkbyBnZXQgaW1wYXRpZW50IGFmdGVyIHRoZSBkZWFsaW5nIG9mIGhhbmQgYWZ0ZXIgaGFuZCBvZiBkZWJyaXMgY2FyZHMuIE9uZSBjYW5ub3QgaGF2ZSBwb3dlciBvdmVyIHRoZSBjYXJkcyB3aGF0IGhlIGhhcyBjb21wYWN0ZWQsIGJ1dCBjYW4gZWZmb3J0bGVzc2x5IGhhdmUgcG93ZXIgb24gb25lJ3MgYWN0aW9ucyBhbmQgcmVzcG9uc2l2ZW5lc3MgYW5kIHRoZSBjb3JlIHRoaW5nLCBzZW50aW1lbnRzLi4gCldvbGFuZF9CZWhlbW90aCAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KSGFoYWggdGhhdCdzIGEgcHJldHR5IGZ1bm55IGFuZCBhY2N1cmF0ZSBhbmFsb2d5IG9uIGhpcyBkZW1lYW5vci4gSSd2ZSBuZXZlciBtZXQgaGltIGlybCwgYnV0IHRoZSByZWFzb24gSSBkZXNwaXNlIGhpbSBpcyB0aGUgd2F5IGhlIHRyZWF0cyBwZW9wbGUuIEluIHNldmVyYWwgb2YgaGlzIHZpZGVvcyBoZSBwcm9qZWN0cyBoYXRlIHRvd2FyZHMgb3RoZXIgcGxheWVycyBqdXN0IGZvciBiZWluZyBmaXNoeSBvciB1bmtub3dsZWRnZWFibGUgYWJvdXQgcG9rZXIuIE5vbmUgb2YgaXQgaXMgcmVhbGx5IGp1c3RpZmllZC4gVG8gbWUsIGhlIHNlZW1zIHJlYWxseSBkaXNyZXNwZWN0ZnVsIGFuZCBydWRlIHRvd2FyZHMgb3RoZXJzIHdoZW4gaGUgZG9lc24ndCBnZXQgaGlzIHdheSwgaW4gY2FyZHMgYW5kIGluIGxpZmUuIFBlb3BsZSBqdXN0IGJydXNoIHRoaXMgb2ZmIGJlY2F1c2UgaGUncyAiY2hhcm1pbmciIGluIGEgY3luaWNhbCBzb3J0IG9mIHdheSwgd2hpY2ggSSBhZG1pdCBjYW4gYmUgZnVubnkuIEJ1dCBJdHMgcXVpdGUgYSB3YXkgdG8gYWN0IHdoZW4gSSBkb24ndCBldmVuIHJlc3BlY3QgaGltIGFzIGEgc29saWQgcG9rZXIgcGxheWVyIGxldCBhbG9uZSBhIG5pY2UgcGVyc29uIHRvIG1lZXQgcmFuZG9tbHkgb24gdGhlIHN0cmVldC4KWW91IGRvbid0IG5lZWQgc2tpbGxzIHRvIHBsYXkgc2xvdHMuIApJIGhhZCB0aGUgc2FtZSB0aGluZyBoYXBwZW4gYW5kIGl0IHRvb2sgbWUgc29tZSBwaG9uZSBjYWxscyBhbmQgYSBsaXR0bGUgZGlnZ2luZyB0byBnZXQgbXkgbW9uZXkgYmFjayBidXQgYmVsaWV2ZSBtZSB5b3UgZGVmaW5pdGVseSBjYW4gLiAKV2UgZGlkIGEgbGl0dGxlIHJlc2VhcmNoIGJlZm9yZSBjb21pbmcgdG8gdGhlIDIwMCAxMS41ZyBQb2tlciBDaGlwIEhpZ2ggUm9sbGVyIFNldCB3aXRoIENsZWFyIENvdmVyIEFsdW1pbnVtIENhc2UuIFdoaWxlIHdlIGhhdmUgcGxlbnR5IG9mIHRhYmxlcyBmb3IgJDUgQmxhY2tqYWNrLCBTdHVkLCBhbmQgYSBmZXcgb3RoZXIgZ2FtZXMsIHRob3NlIHdobyB3YW50ZWQgdG8gcGxheSBUZXhhcyBIb2xkZW0nIG5lZWRlZCBhIGxhcmdlciBzZXQuIFRoZSBkaWZmZXJlbmNlIGhlcmUgaXMgd2UgaG9sZCBhIHRvdXJuYW1lbnQgZXZlcnkgeWVhciBhbmQgYWJvdXQgMzAwIHBva2VyIHBsYXllcnMgZW50ZXIgaXQuIEhvdyBtYW55IGNoaXBzIGRpZCB3ZSBuZWVkPyBXZWxsLCBpdCB3YXMgYSB0b24sIGJ1dCAyMDAgY2hpcHMgaW4gZWFjaCBzZXQgY3V0IG91ciBjb3N0cyBkb3duIHRyZW1lbmRvdXNseS4KV2hhdCdzIHJlbWFya2FibGUgYWJvdXQgdGhlIFdpbGQgT2F0cyBzY2FuZGFsLCBpbiByZXRyb3NwZWN0LCBpcyBob3cgZmFyIGFsb25nIGl0IG1hbmFnZWQgdG8gZ2V0IGJlZm9yZSBzb21lb25lIHJlYWxpemVkIGFueXRoaW5nIHdhcyB3cm9uZy4gRXBzdGVpbidzIGVkaXRvcnMgbmV2ZXIgbm90aWNlZCBoZSB3YXMgc3RlYWxpbmcuIApCdXQgYXMgaXQgcGxheWVkIG91dCwgSSdtIG5vdCBzdXJlIEkgcmVhbGx5IHNlZSBob3cgdGhleSdyZSBzaW1pbGFyLkFueXdheSwgSSBhbHdheXMgbGlrZSB0aGUgVmlraW5ncywgYW5kIHRob3VnaHQgdGhpcyB3YXMgYSBwcmV0dHkgZ29vZCBnYW1lLiBIb3BlIHlvdXIgc2Vjb25kYXJ5IGdldHMgaGVhbHRoeSBzb29uIGZvciBhIHBsYXlvZmYgcHVzaC5maXJzdF90aW1lX3dhbmtlciAgMSBwb2ludCAgc3VibWl0dGVkIDMgbW9udGhzIGFnb1RoZSBlZmZlY3RpdmVuZXNzIHJhdGVzIGFyZSBiYXNlZCBvbiBzdHVkaWVzIG9mIHRoZSBmcmVxdWVuY3kgd29tZW4gYWN0dWFsbHkgZ2V0IHByZWduYW50LiAKREVUUk9JVCAgIFRoZSBEZXRyb2l0IFJlZCBXaW5ncyB0b2RheSBhbm5vdW5jZWQgdGhhdCB0aWNrZXRzIGFyZSBub3cgb24gc2FsZSBmb3IgdGhlIDEwdGggYW5udWFsIE1vdG9yQ2l0eSBDYXNpbm8gSG90ZWwncyBhbm51YWwgUmVkIFdpbmdzIENoYXJpdHkgUG9rZXIgVG91cm5hbWVudCBiZW5lZml0aW5nIHRoZSBEZXRyb2l0IFJlZCBXaW5ncyBGb3VuZGF0aW9uLiAKQ2FtZSBob21lIDIgMyB3ZWVrcyBsYXRlciB0byBmaW5kIDIgMyB3ZWVrcyBvZiBnYXJiYWdlIGFuZCByZWN5Y2xpbmcsIGV2ZXJ5IGRpc2ggaW4gdGhlIGtpdGNoZW4gZGlydHkgYW5kIHRoZSBmbG9vciBncml0dHkgdW5kZXJmb290LiAKSSB3aWxsIGZpcnN0IHByZWZhY2UgdGhpcyB3aXRoIGEgd2FybmluZy4gSSBkb24gdXNlIHJlY2lwZXMgdW5sZXNzIEkgYW0gYmFraW5nIG9yIGRvaW5nIHNvbWV0aGluZyBwcmVjaXNlIGZvciB0aGUgZmlyc3QgdGltZS4gClJpZ2h0PyBNeSBnb2FsIHRob3VnaCAgIGN1eiBJIGRvbiBnaXZlIGEgREFNTiBhYm91dCBoaXMgbW9tIG9yIHNpc3RlciAgIGlzIG1ha2luZyBzdXJlIHRoZSBiYWJ5IGlzIHRha2VuIGNhcmUgb2YuIApUaGVyZSBhcmUgYSBidW5jaCBvZiBvdGhlciBzdG9yaWVzIHdoZXJlIHRoZXkgbWVudGlvbmVkIGFzIGJlaW5nIGluIEJyb2NrdG9uIGJ1dCBub3QgbWFkZSBhIGZvY3VzLiBSZXZlbmFudCBoYXMgYSBzaW5nbGUgZmlnaHQgd2l0aCB0aGVtIGJlZm9yZSB0aGUgZm9jdXMgc3dpdGNoZXMgYmFjayB0byBDb2lsLiBSdWJiZXIgU2hvZXMgSW4gTW90aW9uIGhhcyB0aGVtIGFzIGh1bWFuIHRyYWZmaWNrZXJzLiAKSGUgcGFkZGVkIHRoZSB0b3Btb3N0IGVjaGVsb24gb2YgaGlzIGFkbWluaXN0cmF0aW9uIHdpdGggZmVsbG93IFNlcnZpY2UgRW1wbG95ZWVzIEludGVybmF0aW9uYWwgVW5pb24vMTE5OSBhbHVtbmkuIE5vIHN1cnByaXNlLCB0aGVuLCB0aGF0IDExOTkgaXMgYSB2ZWN0b3IgaW4gYXQgbGVhc3QgdHdvIGRlIEJsYXNpbyBhZG1pbmlzdHJhdGlvbiBzY2FuZGFscyAgIHRoZSBSaXZpbmd0b24gSG91c2UgbnVyc2luZyBob21lIGRlZWQgdHJhbnNmZXIgYW5kIHRoZSBMb25nIElzbGFuZCBDb2xsZWdlIEhvc3BpdGFsIGxhbmQgY29udmVyc2lvbi4KVGhlaXIgc21hbGwgYmx1ZSBjYXIgaXMgcGFya2VkIG91dHNpZGUsIG9uIHRoZSBzdHJlZXQsIHRoZSBsaWNlbnNlIHBsYXRlOyBHTFkgMzYwLiBJIHNlZSB0aGUgZmFtaWx5IHNvbWV0aW1lcywgaGFuZ2luZyBvdXQgaW4gdGhlIGZyYW1lIG9mIHRoZWlyIGZyb250IGRvb3IsIHdhdGNoaW5nIHRoZSB0cmFmZmljIHJvbGwgYnkuIApNb2hlZ2FuIHRvdXJuYW1lbnRzIGFyZSB0aGUgc2FtZSA2MCAxMjAgZG9sbGFyIGJ1eSBpbiB0aHJpY2UgZGFpbHkgYWxsIG1vbnRoIHdpdGggdGhlIHZlcnkgb2NjYXNpb25hbGx5IHdlZWtlbmQvaG9saWRheSBzZXJpZXMuIAoiSnVuZSBhbmQgRG9yaXMgcHVsbGVkIHRoaXMgb2ZmIHdpdGggYSBzaG9lc3RyaW5nIGJ1ZGdldC4iVGhlIGRlYWRsaW5lIGZvciB0aGUgcHVibGljIHRvIHN1Ym1pdCBmZWVkYmFjayB0byB0aGUgY2l0eSBvbiBCZWVkaWUncyByZXpvbmluZyBhcHBsaWNhdGlvbiBpcyBuZXh0IHdlZWsgb24gSmFuLiA0IGFuZCB0aGlzIHNwYXJrZWQgb3RoZXIgQ2hpbmF0b3duIHlvdXRoIGVmZm9ydHMgaW4gRGVjZW1iZXIuT3ZlciBhdCB0aGUgQ2FybmVnaWUgQ29tbXVuaXR5IENlbnRyZSwgQ2hhbmVsIEx5LCBhIGRvd250b3duIGVhc3RzaWRlIG91dHJlYWNoIHdvcmtlciB3aG8gbWFpbmx5IHNlcnZlcyBsb3cgaW5jb21lIENhbnRvbmVzZSBhbmQgTWFuZGFyaW4gc3BlYWtpbmcgc2VuaW9ycywgdGhpcyB3ZWVrIGRlYnV0ZWQgYSBzaG9ydCBmaWxtIHNoZSBhbmQgaGVyIHBhcnRuZXIsIEVsaW90IEdhbGFuLCBtYWRlLkNhbGxlZCBIb3QgRWFydGgsIGl0IGZvY3VzZXMgb24gaG93IGVsZGVybHkgcmVzaWRlbnRzIGluIHRoZSBhcmVhIGZlZWwgYWJvdXQgdGhlIHBsYW5zIGZvciAxMDUgS2VlZmVyLiAKSSBob25lc3RseSByYXRoZXIgYmUgYSBqYW5pdG9yIHRoYW4gd2hhdCBJIGFtIGRvaW5nIHRvZGF5LiAKSXQgY29tcGxpY2F0ZWQgYXMgdG8gd2h5LCBidXQgSSBoYXZlIGEgY29uZGl0aW9uIHRoYXQgbWFrZXMgdGhlbSB1bmNvbWZvcnRhYmxlIGJlY2F1c2UgYXBwYXJlbnRseSBpbiByZWFsaXR5IHRoZXkgYWxsIGEgYnVuY2ggb2YgMTIgeS9vIGJveXMgICBidXQgYWZ0ZXIgdGhlIHNlY29uZCB0aW1lIGl0IGhhcHBlbmVkIEkgY2FsbGVkIHRoZW0gb3V0IG9uIGl0IHJpZ2h0IHRoZXJlLiAKT3ZlcnZpZXcgZm9yIEFwaGVsaW9uMjcKT3Igc29tZXRoaW5nLiBIb29rZXIgc3RhcmVzIGFmdGVyIGhpbSB3aXRoIGEgd29ycmllZCwgZnVycm93ZWQgYnJvdyBhbmQgdGhlcmUncyBhIGRyYW1hdGljIG11c2ljYWwgc3RpbmcuIFRoaXMgb2J2aW91c2x5IGlzbid0IGdvb2QsIHNvIEhvb2tlciBtZWV0cyB0aGUgY2hpY2sgY29wIGluIGEgYmFyIGFuZCBsaXN0ZW5zIHRvIGhlciBzcGlsbCBoZXIgZ3V0cyBhYm91dCBjaG9raW5nIGluIHRoZSBwYXJraW5nIGxvdC4gCkl0IHdpbGwgYmVuZWZpdCB1cyBhbGwsIG5vdCBqdXN0IHRoZSBVU0EuClBsYWNlbWVudCBpcyBjcml0aWNhbGx5IGltcG9ydGFudCwgdG9vLiBJdCdzIGluY3JlZGlibHkgZWFzeSB0byBtaXNqdWRnZSB0aGUgZG9zaW5nIG1lZGljaW5lIGlmIGl0J3Mgbm90IGFic29yYmVkIHByb3Blcmx5ICBzdWNoIGFzIHdpdGggYSBwcm9qZWN0aWxlIGRldmljZS4gCkkgYWN0dWFsbHkgZ3Jhdml0YXRlIHRvd2FyZCB0aGF0IG1vcmUgdGhhbiB0aGUgcHJldHR5LCBwZXJmZWN0LCBwcmlzdGluZSBzdHVmZi4gCkluY3JlYXNlZCBwdWJsaWMgZmluYW5jaW5nIGZvciBwcmltYXJ5IGNhcmUgYW5kIG1lZGljYWwgZWR1Y2F0aW9uIGFzIHdlbGwgYXMgcmVndWxhdGlvbiBvZiBwcml2YXRlIHNlcnZpY2VzIGFyZSB2aXRhbCB0byB0YWNrbGUgdGhlIHByaW1hcnkgY2FyZSBjcmlzaXMgaW4gU291dGggQXNpYSwgYXJndWUgQW1pdCBTZW5ndXB0YSBhbmQgY29sbGVhZ3VlcwpMZXQgc2F5IHRoYXQgeW91IHdlcmUgdGFza2VkIHRvIGNsZWFuIDUgbWlsbGlvbiBkb2xsYXJzLiBPYnZpb3VzbHkgeW91IHdhbnQgdG8gbWluaW1pemUgdGhlIGZlZXMgdGhhdCB5b3UgcGF5IGluIG9yZGVyIHRvIGNsZWFuIHRoaXMgbW9uZXkuIFRvIG15IHVuZGVyc3RhbmRpbmcsIHRvIGNsZWFuIGRpcnR5IG1vbmV5LCB5b3UgaGF2ZSB0byBmaW5kIHNvbWUgd2F5IHRvIGdldCBpdCBvbiB0aGUgYm9va3MgYW5kIHBheSB0YXhlcyBvbiBpdC4gU28gbXkgdGhvdWdodCBpcywgZ28gdG8gYSBoaWdoIHN0YWtlcyByb29tIGluIFZlZ2FzIHdpdGggb25lIG9yIHR3byBvdGhlciBwZW9wbGUgdGhhdCBhcmUgaW4gb24gdGhlIHNjYW0gd2l0aCB5b3UuIFBsYXkgdGhlIGhpZ2hlc3Qgc3Rha2VzIHlvdSBjYW4sIGJ1eSBpbiBhdCB0aGUgbWF4LCBhbmQgaW1tZWRpYXRlbHkgcHVudCB5b3VyIHN0YWtlIGludG8geW91ciBmcmllbmRzLiBUbyBkbyBzbywganVzdCBmaW5kIGEgZ29vZCBzcG90IHRvIGlzb2xhdGUgeW91ciBmcmllbmQsIGdvIGFsbCBpbiwgYW5kIGRvbiBjYXJlIHdobyB3aW5zLiBZb3UgbG9zZSBzb21lIG1vbmV5IHRvIHJha2UgYnV0IHRoYXRzIG5lZ2xpZ2libGUuIERvIHRoYXQgYSBjb3VwbGUgdGltZXMsIHJlcG9ydCB5b3VyIHdpbm5pbmdzIHdpdGggdGhlIGNhc2lubywgY2FzaCBvdXQsIGFuZCBwYXkgdGF4ZXMuCklmIHRoZXkgcmFpc2UgcHJlIGFuZCBmaXJlIG9mZiB0aGVpciBzdGFjayBtb3JlIHRoYW4gOCUgb2YgdGhlIHRpbWUgdGhlbiB5b3UgY2FuIHNlZSB0aGF0IHRoZXkgYXJlIHZlcnkgb2J2aW91c2x5IHdlaWdodGVkIHR3b3JkcyB3ZWFrIGhhbmRzIGFuZCBibHVmZnMuIE9mIGNvdXJzZSBvbiB0dXJucyBhbmQgcml2ZXJzIHRoZXkgYXJlIGdvaW5nIHRvIG1ha2Ugc29tZSB3ZWlyZCBoYW5kcyB5b3UgZG9udCBleHBlY3QgYnV0IHN0aWxsIHRoZXkgYXJlIGJldHRpbmcgYXQgYSBmcmVxdWVuY3kgdGhhdCBkb2VzbnQgc3VwcG9ydCB0aGUgYW1vdW50IG9mIHN0cm9uZyBtYWRlIGhhbmRzIHRoZXkgaGF2ZS4KV2hlbiBJIGZpcnN0IHN0YXJ0ZWQgdGhpcyBjb2x1bW4sIEkgd2FzIHBpc3NlZC4gCk1ldGEgcG9zdHMgbXVzdCBiZSBhcHByb3ZlZCBieSB0aGUgbW9kcyBiZWZvcmUgYmVpbmcgc3VibWl0dGVkLgpXaGVuIG15IGh1c2JhbmQgYW5ub3VuY2VkIHRoYXQgaGUgcHJvcG9zZWQgdG8gbWUgbW9zdCBvZiBoaXMgY293b3JrZXJzIG9mZmVyZWQgY29uZ3JhdHVsYXRpb25zIGFuZCBhc2tlZCBxdWVzdGlvbnMgYWJvdXQgdGhlIHdlZGRpbmcsIGJ1dCB0aGVyZSB3ZXJlIGEgaGFuZGZ1bCBvZiBiaXR0ZXIgZGl2b3JjZWVzIHRoYXQgbWFkZSBzbmlkZSBjb21tZW50cyBhYm91dCBob3cgbXkgaHVzYmFuZCB3b3VsZCByZWdyZXQgaXQsIHRoYXQgaGUgd2FzIGJlaW5nIGR1bWIsIGhvdyBoaXMgbGlmZSB3YXMgb3ZlciwgZXRjLiAKVGhhdCB3b3VsZCBpbmNyZWFzZSB0byAkMzQgYSBtb250aCBieSAyMDIzLiBPbmNlIHRoZSBwbGFuIGlzIGZ1bGx5IGltcGxlbWVudGVkLCB0aGUgbWF4aW11bSBhbm51YWwgYmVuZWZpdHMgd2lsbCBpbmNyZWFzZSBieSBhYm91dCBvbmUgdGhpcmQgdG8gJDE3LDQ3OCBmcm9tICQxMywxMTAuLiAKIkJ5IGJlY29taW5nIHBhcnQgb2YgUGhpbGlwcywgdGhlIEhDSVMgYnVzaW5lc3Mgd2lsbCBoYXZlIGEgZ3JlYXRlciBvcHBvcnR1bml0eSB0byB0aHJpdmUgYW5kIGdyb3cuIAoiSGF2ZSB5b3UgZXZlciBzb3VnaHQgdHJlYXRtZW50IGZvciBhIGdhbWJsaW5nIGFkZGljdGlvbj8iIFdoaXRlaG91c2UgYXNrcyBwb2ludGVkbHkgYXMgcGFydCBvZmEgc2VyaWVzIG9mIHF1ZXN0aW9uc3N1Ym1pdHRlZCB0aGlzIHdlZWsgYWJvdXQgS2F2YW5hdWdoJ3MgdW5leHBsYWluZWQgcGVyc29uYWwgZGVidHMuClllYWgsIG9uIHRoZSBzdXJmYWNlIGl0IGhhcyBhIHNpbGx5IHRpdGxlIGFuZCBwcmVtaXNlLCBidXQgdGhpcyBpcyBhIHN0cmFuZ2UsIHdvcnRoeSBtb3ZpZSBzdGFycmluZyBzb21lIHZlcnkgdGFsZW50ZWQgYWN0b3JzLiBJdCBzdGFydHMgb3V0IHNlcmlvdXMsIGFzIFdhbHRlciBCbGFjayAoR2lic29uKSBpcyBkZXByZXNzZWQgd2l0aCBoaXMgdG95IGNvbXBhbnkgZ29pbmcgYmFua3J1cHQgYW5kIG1hcnJpYWdlIGZhaWxpbmcuIEhlIG1vdmVzIGludG8gYSBob3RlbCBhbmQgYXR0ZW1wdHMgc3VpY2lkZSBidXQgaXNuJ3Qgc3VjY2Vzc2Z1bC4gCkluWmVoSW50ZXJmZWN0b3IgdQpGcm9tIGEgcHVyZWx5IGVjb25vbWljIHBlcnNwZWN0aXZlLCBpdCB3b3VsZCBzZWVtIHByZXR0eSBzdXJwcmlzaW5nL2luZWZmaWNpZW50IGlmIHRoaXMgd2VyZSB0aGUgY2FzZS4gClRoZSB0cmlwIHRvIEh1YmJhcmQgR2xhY2llciB3YXMgb24gdGhlIGZvdXJ0aCBkYXkgb2Ygb3VyIHdlZWsgbG9uZyB2b3lhZ2Ugb24gQ2VsZWJyaXR5IENlbnR1cnksIHdoaWNoIGJlZ2FuIGluIFZhbmNvdXZlciwgQ2FuYWRhLiBXZSB0cmF2ZWxsZWQgbm9ydGggZm9yIHR3byBkYXlzLCB0aHJvdWdoIHRoZSBzY2VuaWMgUXVlZW4gQ2hhcmxvdHRlIFNvdW5kLCB1bnRpbCByZWFjaGluZyBvdXIgZmlyc3QgcG9ydCBvZiBjYWxsLCBJY3kgU3RyYWl0IFBvaW50LgpJZiB3ZSBmbG9wIGFuIEEgb3IgSywgY2hlY2tpbmcgdG8gaW5kdWNlLiBFdmVuIGlmIGhlIGNhbGxzIG91ciBzaG92ZSBhbmQgaGFzIGEgcGFpciB3ZSB1c3VhbGx5IGhhdmUgMjUlIGVxdWl0eSB3aGljaCBpcyBub3QgdGVycmlibGUuIEJ1dCBleHBlY3RpbmcgdG8gYmUgYWhlYWQgc29tZXRpbWVzLiAKV2hpbGUgbWFueSBwZW9wbGUgZW5qb3kgdGhlaXIgaG9tZSBwb2tlciBnYW1lIGZvciBpdHMgY29tcmFkZXJpZSwgb3RoZXJzIHdhbnQgdG8gd2FsayBhd2F5IHdpbm5lcnMuIFBhcnRpY3VsYXJseSBmb3IgdGhlIHNraWxsZWQgcGxheWVyLCB0aGUgaG9tZSBwb2tlciBnYW1lIGNhbiBiZSBhIGNvbnRpbnVhbCBzb3VyY2Ugb2YgZnJ1c3RyYXRpb24gYmVjYXVzZSB0aGUgcG9rZXIgcGxheWVkIHRoZXJlIGlzIHNvIHVubGlrZSB0aGUgcG9rZXIgb25lIHJlYWRzIGFib3V0IGluIGJvb2sgYWZ0ZXIgYm9vayBhZnRlciBib29rIHdyaXR0ZW4gb24gdGhlIHN1YmplY3QuIEZvcnR1bmF0ZWx5LCB3aXRoIGEgbGl0dGxlIHNlbGYgY29udHJvbCwgdGhlcmUgaXMgYSB3YXkgdG8gd2luIGNvbnNpc3RlbnRseSBhdCB0aGUgaG9tZSBnYW1lIG5vIG1hdHRlciBob3cgZXJyYXRpYyB0aGUgcGxheSBtaWdodCBiZS4KVGhleSBjYW4gcGxhY2UgYmV0cyBhbmQgcGxheSBjYXJkcy4gCkkgZG9uIGFwcHJlY2lhdGUgeW91IGluc2ludWF0aW5nIHRoYXQgSSBhbSBvciB0aGF0IGFsbCBvZiBoaXMgc3VwcG9ydGVyIGJhc2UgYXJlOyB0aGF0IGtpbmQgb2YgaGlnaCBob3JzZSBhdHRpdHVkZSBpcyB0aGUgdmVyeSB0aGluZyBydWluaW5nIHBvbGl0ZSBkaXNjb3Vyc2UgaW4gdGhpcyBjb3VudHJ5LCBhbmQgSSBhZHZpc2UgeW91IGF2b2lkIGl0IGlmIHlvdSBpbnRlbmQgdG8gaGF2ZSB3b3J0aHdoaWxlIGRpc2N1c3Npb25zLi4gCldoaWxlIGl0J3MgdHJ1ZSB0aGF0IHRoZXJlIGFyZW4ndCBlbm91Z2ggdm90ZXMgZm9yIHRoaXMgdG8gYmUgdmV0byBwcm9vZiByaWdodCBub3csIHRoaXMgY2hhbmdlcyB0aGluZ3MuIE1hbnkgUmVwdWJsaWNhbnMgaW4gdGhlIEhvdXNlIGFuZCBTZW5hdGUgY291bGQgY29tZm9ydGFibHkgYXZvaWQgdGhlIGlzc3VlIGFzIGxvbmcgYXMgdGhlIEJpbGwgZGlkbid0IHBhc3MgQ29uZ3Jlc3MuIE5vdyB0aGF0IGl0IHdpbGwsIHRoZSBiaWxsIHdpbGwgY29tZSBiYWNrIHRvIENvbmdyZXNzIGFmdGVyIHZldG8gICBhdCB3aGljaCBwb2ludCB0aGUgR09QIG11c3QgbWFrZSB0aGUgYmluYXJ5IGNob2ljZSBvZiBhbGlnbmluZyB0aGVtc2VsdmVzIGRpcmVjdGx5IHdpdGggVHJ1bXAncyB3YWxsIGFnZW5kYSBvciByZW1haW5pbmcgb24gdGhlIHNpZGUgb2YgcHVibGljIG9waW5pb24gYW5kIERlbW9jcmFjeS4KVGhlIGxpbmVzIGZvciBhYnNvbHV0ZWx5IGV2ZXJ5dGhpbmcgaW5zaWRlIGFuZCB0aGUgZm9vZCB0cnVja3Mgb3V0c2lkZSB3ZXJlIHJpZGljdWxvdXNseSBsb25nLiAKU3RvcCBBZ2luZyBOb3csIGFub3RoZXIgc3VwcGxlbWVudCBicmFuZCwgZmFpbGVkIHRoYW5rcyB0byBkYXRhIGRyaXZlbiBwZXJmb3JtYW5jZSBtYXJrZXRpbmcsIHdoaWNoIGhhZCBiZWVuIHdvcmtpbmcgd2VsbCBmb3IgeWVhcnMsIGJlZm9yZSBDbG9yb3ggYWNxdWlyZWQgaXRzIG93bmVyIE51dHJhbmV4dCBlYXJsaWVyIHRoaXMgeWVhci4gCkFuZCBvbiB0aGUgb3RoZXIgaGFuZCwgYmVjYXVzZSBvZiB0aGUgZGlzbG9jYXRpb25zIGluIHRoZSBtYXJrZXQsIG91ciB0cmFkaW5nIG1hcmdpbnMgY29tcHJlc3NlZCBxdWl0ZSBzaWduaWZpY2FudGx5LiBDSUJDIGFubm91bmNlZCBUaHVyc2RheSB0aGF0IGl0IHdhcyBoaWtpbmcgaXRzIHF1YXJ0ZXJseSBkaXZpZGVuZCBieSBmb3VyIGNlbnRzLCB0byAkMS40MCBwZXIgc2hhcmUuIApBbmQgYXMgd2UgZ290IHBvb3JlciBhbmQgdGhlIGRlYnQgcGlsZWQgdXAsIHdoYXQgZGlkIHdlIEFtZXJpY2FucyBkbz8gV2UgYmVsaWV2ZWQgaW4gdGhlIEFtZXJpY2FuIERyZWFtIGV2ZW4gbW9yZS4gQWNjb3JkaW5nIHRvIGEgcmVwb3J0IGNvbXBpbGVkIGZvciB0aGUgQ2VudGVyIGZvciBBbWVyaWNhbiBQcm9ncmVzcyBieSBBbWVyaWNhbiBVbml2ZXJzaXR5IGVjb25vbWlzdCBUb20gSGVydHosIHRoZSBsYXN0IHRoaXJ0eSB5ZWFycyBoYXZlIHNlZW4gaW5jcmVhc2luZyBkb3dud2FyZCBtb2JpbGl0eSBmb3IgbW9yZSBBbWVyaWNhbnMsIG1vcmUgaW5jb21lIHZvbGF0aWxpdHkgZm9yIHRoZSBtaWRkbGUgY2xhc3MsIGFuZCwgYnkgMjAwMyAwNCwgbm8gaW5jcmVhc2UgaW4gaW5jb21lIGV2ZW4gZm9yIHBlb3BsZSB3aG8gd29ya2VkIGxvbmdlciBob3Vycy4gT2RkbHkgZW5vdWdoLCB3ZSBiZWdhbiB0byBiZWxpZXZlIGluIHRoZSBEcmVhbSBldmVuIG1vcmUuLiAKT3NiYWxkZXN0b24gd2FzIG9uIGNhbGwgMjQvNyBhcyBUcnVkZWF1IHByaXZ5IGNvdW5jaWwgY2xlcmsuIE9uZSBkYXksIHRoZSBwcmltZSBtaW5pc3RlciBpbnZpdGVkIE9zYmFsZGVzdG9uIG92ZXIgdG8gMjQgU3Vzc2V4IERyaXZlIHRvIGdvIGZvciBhIHdhbGsuIFRydWRlYXUgc2FpZCwgSSBnb2luZyB0byByZXRpcmUgYW5kIEkgbGlrZSB5b3VyIGhlbHAgaW4gdGFsa2luZyBhYm91dCBzb21lIG9mIHRoZSBkZXRhaWxzLCBCcmFkeSByZWNhbGxlZC4gCk1pciBoYWJlbiBqZWRvY2ggRmVyc2UgdW5kIFNwaXR6ZSBpbSBQZXJsbXVzdGVyIG5pY2h0IGdlZmFsbGVuLiBHbGF0dCBnZXN0cmlja3Qgc2FoIGRhbm4gZGllIFNwaXR6ZSB3aWUgYW5nZWtsZWJ0IGF1cyB1bmQgYXVlcmRlbSBoYXR0ZSBtYW4gZGFubiBnZXJhZGUgaW0gdW50ZXJlbiBaZWhlbmJlcmVpY2gsIGluIGRlbSBpY2ggbGVpY2h0IEJsYXNlbiBiZWtvbW1lLCBlaW5lIE5haHQgZHVyY2ggZGFzIEF1Zm5laG1lbiBkZXIgTWFzY2hlbi4gQWxzbyBoYWJlIGljaCBtaWNoIGhpbmdlc2V0enQgdW5kIGJlcmxlZ3QsIHdpZSBtYW4gZGllIFNwaXR6ZSBnbGVpY2ggbWl0IGFuc3RyaWNrZW4gdW5kIGRpZSBGZXJzZSBnbGF0dCBnZXN0cmlja3QgZ2VzdGFsdGVuIGtubnRlLiAKVGhlIGJlZHJvb20sIGFzIHBlciBteSBmaXJzdCBjb21tZW50LiAKVGhpcyBpcyBhIG1vZGVyYXRlZCBzdWJyZWRkaXQuIElmIHlvdSBsb29raW5nIGZvciBoZWxwIHdpdGggYSBwZXJzb25hbCBib29rIHJlY29tbWVuZGF0aW9uLCBjb25zdWx0IG91ciBTdWdnZXN0ZWQgUmVhZGluZyBwYWdlIG9yIGFzayBpbjogL3Ivc3VnZ2VzdG1lYWJvb2tQcm9tb3Rpb25hbCBwb3N0cywgY29tbWVudHMgZmxhaXJzLCBtZWRpYSBvbmx5IHBvc3RzLCBwZXJzb25hbCByZWNvbW1lbmRhdGlvbiByZXF1ZXN0cyBpbmNsLiAnU2hvdWxkIEkgcmVhZCA/JywgJ1doYXQncyB0aGF0IGJvb2s/JyBwb3N0cywgc2FsZXMgbGlua3MsIHBpcmFjeSwgcGxhZ2lhcmlzbSwgbG93IHF1YWxpdHkgYm9vayBsaXN0cywgdW5tYXJrZWQgc3BvaWxlcnMgKGluc3RydWN0aW9ucyBmb3Igc3BvaWxlciB0YWdzIGFyZSBpbiB0aGUgc2lkZWJhciksIHNlbnNhdGlvbmFsaXN0IGhlYWRsaW5lcywgbm92ZWx0eSBhY2NvdW50cywgbG93IGVmZm9ydCBjb250ZW50LiAKU2NhcnkgQ2F1c2VzIE9mIFN0aWZmIEZpbmdlcnMgQW5kIEhhbmRzIEluIFRoZSBNb3JuaW5nCkhlcmUncyBob3cgaXQgd29ya3MuIFlvdSBwdXQgaW4gJDIwIHRvIHRoZSB2aWRlbyBwb2tlciBtYWNoaW5lIHRvIGdldCBpdCBhY3RpdmF0ZWQuIEEgYmx1ZSBsaWdodCB3aWxsIHR1cm4gb24uIApJIGRvbiBwYXJ0aWN1bGFybHkgZW5qb3kgcGxheWluZyBhcyBQaG9lbml4IGFzIG11Y2ggYXMgdGhlIG90aGVycy4gCklmIG9yZ2FuaXNtcyBhcmUgdG8gYmUgbXVsdGljZWxsdWxhciwgY2VsbHMgbXVzdCBiZSBhYmxlIHRvIHRhbGsgdG8gZWFjaCBvdGhlci4gRWxlY3RyaWNhbCBwb3RlbnRpYWxzLCB0aGUgYmFzaXMgb2YgZXZlcnkgbmVydm91cyBzeXN0ZW0sIGFyZSBvbmUgd2F5IG9mIGRvaW5nIHRoaXMuIEFuZCBESEEgd2FzIHRoZSBlbmFibGVyLgpBbmQsIG1ha2VzIGl0IGRvdWJ0ZnVsIHlvdSdkIGJlIGFibGUgdG8gZ2V0IHlvdXIgcGV0IHRocm91Z2ggKCAuIEluIGZhY3QsIGlmIGl0cyBhIGN1bHQgdGhhdCBvbmUgdGVuZHMgdG8gam9pbiBhcyBhZHVsdCByYXRoZXIgdGhhbiBiZWluZyBib3JuIGludG8sIHRoZW4gdGhvc2UgZmFjdG9ycywgZGVwZW5kaW5nIG9uIHRoZWlyIGFnZXMsIGNvdWxkIGhhdmUgYmVlbiBkdWUgdG8gYSBsb3Qgb2Ygb3RoZXIgcmVhc29ucy4gYW5kIHRoZXJlIHdhcyBhbHNvIGEgTU1SIHZhY2NpbmUgJ3NjYXJlJyBkZWNhZGVzIGFnby5Nb3N0IGFkdWx0cyBoYXZlIG5vIGlkZWEgd2hhdCB0aGV5IHdlcmUgb3Igd2VyZW4ndCB2YWNjaW5hdGVkIGZvciBhcyBraWRzLiAKSSB0aGluayBnaXZpbmcgYSBmcmVlIGV2YWRlIHdoZW4geW91IHBlcmZvcm0gYSBoYXJkIChyaWdodCBhbmdsZSkgMSBtYW5ldXZlciB0aHJvdWdoIGEgdGl0bGUgb3IgdGhlIGxvc3Mgb2YgdGhlIHRvcnBlZG8gc2xvdCB3b3VsZCBiZSBnb29kLiAKSGUgd2FzIGNyYXp5IHByZXBhcmVkIGFuZCBjbGVhci4gClRoZSBVUyBuZWVkcyBpcyBhIHBvbGljeSBvZiBwZWFjZSwgbm90IHdhci4gCkxlYWQgbWUgdG8gdGhlIHJpZ2h0IGNodXJjaCBhbmQgQ2hyaXN0aWFuIGZyaWVuZHMgd2hvIGNhbiBzdXBwb3J0IG1lIGluIHRoaXMgam91cm5leSwgaW4gSmVzdXMgTmFtZSwgQW1lbiBXZSBrbm93IHRoYXQgeW91IHdpbGwgbmVlZCB0byBoYXZlIHNvbWUgc3VwcG9ydCBhcyB5b3UgYXJlIGdvaW5nIHRocm91Z2ggdGhpcyBwcm9jZXNzIHNvIHlvdSB3aWxsIG5lZWQgdG8gd2hlcmUgeW91IGNhbiBiZSBhY2NvdW50YWJsZSB0byBvdGhlciBiZWxpZXZlcnMgaW4gQ2hyaXN0IGFuZCBhIHBhc3Rvci4uIApUaGlzIGluZm9ybWF0aW9uIGlzIHNvbGVseSBmb3IgaW5mb3JtYXRpb25hbCBwdXJwb3Nlcy4gSVQgSVMgTk9UIElOVEVOREVEIFRPIFBST1ZJREUgTUVESUNBTCBBRFZJQ0UuIApQYXdsZW50eSdzIHR3byBicm90aGVycyBhbmQgdHdvIHNpc3RlcnMgc2F5IHRoZXkga25ldyBQYXdsZW50eSB3YXMgc21hcnQgYXMgYSBraWQuIApTcG9ydHMgQmFya2xleSBiYWNrIGF0IHBva2VyIHRhYmxlIFRvcCBDb3VnYXJzIG5hbWVkIFRlcnJhIEthc2tpdywgbGVmdCwgYW5kIERldm9uIFZhbiBOaXN0ZWxyb295IHdlcmUgaG9ub3VyZWQgYnkgQ2F0aG9saWMgQ2VudHJhbCBIaWdoIFNjaG9vbCBhcyB0aGUgZmVtYWxlIGFuZCBtYWxlIGF0aGxldGVzIG9mIHRoZSB5ZWFyLiBQSE9UTyBTVUJNSVRURUQgTWFncmF0aCBoYW5kcyBvdXQgaGFyZHdhcmUgU2FteXJhIEFsc3RvbiBhbmQgQ29ubm9yIEJhcm5ldHQgcmVjZWl2ZWQgdGhlIGZlbWFsZSBhbmQgbWFsZSBhdGhsZXRlIGF3YXJkcyBhdCB0aGUgcmVjZW50IE1hZ3JhdGggSGlnaCBTY2hvb2wgZ3JhZHVhdGlvbiBjZXJlbW9ueS4gQWxzdG9uIHBsYXllZCBvbiB0aGUgc2VuaW9yIGdpcmxzIGJhc2tldGJhbGwgdGVhbSBhcyB3ZWxsIGFzIHRoZSBzb2Z0YmFsbCB0ZWFtLiAKQW5vdGhlciBjb29sIHRoaW5nIGFib3V0IHRoaXMgaXMgdGhhdCBpdCBoYXMgYnVpbHQgaW4gZHJpbmsgaG9sZGVycyBmb3IgeW91ciBjdXBzLCBiZWVyLCBvciBhbnkgb3RoZXIgYmV2ZXJhZ2UuIApBc3N1bWluZyB0aGF0IHlvdXIgdGltZSBob3Jpem9uIGZvciBpbnZlc3RpbmcgaXMgcHJldHR5IGxvbmcsIGxpa2UgeW91IGFyZSBzYXZpbmcgZm9yIHlvdXIgcmV0aXJlbWVudCAoMTUrIHllYXJzKSwgdGhlbiB5b3UgZG9uIHdhbnQgc2FmZSwgeW91IHdhbnQgZXF1aXRpZXMuIEEgZ3JlYXQsIHNpbXBsZSBzb2x1dGlvbiBpcyBWZ3JvLCB3aGljaCBpcyBhbiBFVEYgdGhhdCBob2xkcyBDYW5hZGlhbiBlcXVpdGllcywgVVMgZXF1aXRpZXMsIGludGVybmF0aW9uYWwgZXF1aXRpZXMsIGFuZCBib25kcy4gQmVjYXVzZSBpdCBob2xkcyBFVEZzIHlvdSBhcmUgbm90IGJ1eWluZyBpbmRpdmlkdWFsIHN0b2NrcyBidXQgYWN0dWFsbHkgaW52ZXN0aW5nIGluIG1hcmtldHMgYXMgYSB3aG9sZSwgc28geW91ciBlZ2dzIGFyZSBub3QgYWxsIGluIG9uZSBiYXNrZXQuIFNpbmNlIG1hcmtldHMgYXMgYSB3aG9sZSBpbmV2aXRhYmx5IG1ha2UgbW9uZXkgb3ZlciBhIGxvbmcgZW5vdWdoIHRpbWUsIHlvdSBhcmUgYmFzaWNhbGx5IGd1YXJhbnRlZWQgdG8gcHJvZml0IG92ZXIgdGhlIGxvbmcgcnVuLiBTbyB0aGlzIHdpbGwgcHJvYmFibHkgcmV0dXJuIDUlIHRvIDEwJSBvdmVyIHRoZSBsb25nIHJ1biwgc28gbG9uZyBhcyB5b3UgYnV5IGFuZCBob2xkLCBidXQgeW91IHdpbGwgc2VlIGZsdWN0dWF0aW9ucyBpbiBleGNlc3Mgb2YgdGhhdCBhbW91bnQgZXZlcnkgeWVhci4gWW91ciBwb3J0Zm9saW8gY291bGQgaW5jcmVhc2UgNTAlIG9yIGRyb3AgMzAlLCBidXQgc28gbG9uZyBhcyB5b3UgYnV5IGFuZCBob2xkIHlvdXIgbG9uZyB0dXJuIGV4cGVjdGF0aW9uIHNob3VsZCBiZSBhbiBhdmVyYWdlIGluY3JlYXNlIG9mIDUlIHRvIDEwJSBwZXIgeWVhci4KVHVya2V5IHJlZ2FyZGluZyBZUEcgZG9lc24gZGVwZW5kIG9uIGl0cyBmYWNlIG9uIHN0cmVuZ3RoIGFnYWluc3QgdGhlIFR1cmtpc2ggYXJteSwgYW5kIHlvdXIgYXNzZXNzbWVudCBvZiBob3cgYmlnIG9mIGEgdGhyZWF0IHRoZSBZUEcgdG8gVHVya2V5IGlzIHlvdXIgb3duIG9waW5pb24gYW5kIG5vdCBpbXBvcnRhbnQgZm9yIFR1cmtleXMgYWN0aW9ucy4gQnkgeW91ciBsb2dpYywgaWYgdGhhdCB3b3VsZCBiZSBzbywgbm8gYXJteSB3b3VsZCBmaWdodCBhIHRlcnJvcmlzdCBvcmdhbml6YXRpb24gYmVjYXVzZSBubyB0ZXJyb3Jpc3Qgb3JnYW5pemF0aW9uIGNvdWxkIGZhY2Ugb24gYSBtaWxpdGFyeSBzdHJ1Y3R1cmUuCk5vdCBzYWZlIGVub3VnaCBmb3IgYSBzb2xvIG1hbiBsZWF2ZSBhbG9uZSBhIHdvbWFuLiAKU2F2ZSB0aGUgbWVkaWEgaXQgY2FtZSBvbiwgd2hldGhlciBiZSB0aGUgQ0QvRFZEIHBhY2thZ2luZyBvciB0aGUgaW5zdHJ1Y3Rpb24gbWFudWFsLiBTaW5jZSB0aGluZ3MgaGFwcGVuLCB5b3UgY2FuIGFsc28gYXJjaGl2ZSBsaWNlbnNlIGtleXMgaW4gYSB2YXJpZXR5IG9mIG1ldGhvZHMuIE9mIGNvdXJzZSBpdCByZXF1aXJlcyBhY2N1cmF0ZSB0cmFuc2NyaXB0aW9uIHRvIGJlIHVzZWZ1bC4gClRoZSBwb2xpY2Ugc3lzdGVtIGFuZCB0aGVzZSBjb2RlcyBzaG91bGQgY2VydGFpbmx5IGJlIGNoYW5nZWQgd2hlcmUgbmVlZGVkLiBJIHRoaW5rIGEgbG90IG9mIHRoZXNlIGNpcmN1bXN0YW5jZXMgYXJlIG1vcmUgY29tcGxpY2F0ZWQgdGhhbiBqdXN0ICJhIGNvcCBzaG90IGFuIGlubm9jZW50IG1hbi4iIEEgbG90IG9mIHRpbWVzLCB0aGUgImlubm9jZW50IG1hbiIgd2FzIGEgY3JpbWluYWwgd2hvbSBhY3RlZCBpbmFkZXF1YXRlbHkuIFRoZXJlIGFyZSBjYXNlcyB0aGF0IGFyZSBjbGVhbiBjdXQsIGJ1dCBpdCdzIHN1Y2sgYSBtaW5vcml0eS4KV2Uga25vdyB0aGF0IGJpbGxpb25haXJlcyBmbG9jayB0byBNb25hY28gdG8gaGlkZSBmcm9tIGFueSByZXNwb25zaWJpbGl0eSB0byB0aGVpciBmZWxsb3cgY2l0aXplbnMgYmFjayBob21lLiBJbiB0b3RhbCB3ZSBwYWlkIDE3NGJuIGluY29tZSB0YXggaW4gMjAxNiAxNywgdGhlIGxhdGVzdCB5ZWFyIGZvciB3aGljaCBmaWd1cmVzIGFyZSBhdmFpbGFibGUuIAo5JSwgY2Ugbidlc3QgcGFzIHNpIGZhaWJsZSBxdWUgYS4gTGUgYnV0IGQndW4gZGppaGFkaXN0ZSBuJ2VzdCBwYXMgZGUgbW91cmlyIGVuIG1hcnR5ciBtYWlzIGRlIHZpdnJlIGVuIG1vdWRqYWhpZCwgZXQgbGEgdmllIGQndW4gbW91ZGphaGlkIGMnZXN0IGQnYWJvcmQgZGUgc2UgYmF0dHJlLCBjZSBuJ2VzdCBwYXMgbHVpIHF1aSBkY2lkZSBkZSBtb3VyaXIsIGMnZXN0IEFsbGFoIHF1aSBsJ2FwcGVsbGUuIENlcyBkb25uZXMgbmUgc29udCBwYXMgZmFjaWxlcyAgaW50ZXJwcnRlciA6IGNldXggcXVpIHNlIHBvcnRlbnQgdm9sb250YWlyZSBwb3VyIGRlcyBhdHRlbnRhdHMgc3VpY2lkZXMgc29udCBpbHMgbW9pbnMgZHVxdXMgPyBbTCd0dWRlIG5lIGxlIHByY2lzZSBwYXMsIG5kbHJdIExlcyB0dWRlcyBxdWkgc2Ugc29udCBiYXNlcyBzdXIgbGVzIGRvY3VtZW50cyBpbnRlcm5lcyBkZSBsJ0V0YXQgaXNsYW1pcXVlIG1vbnRyZW50IHF1ZSBsZXMgZGppaGFkaXN0ZXMgcXVpIG9udCB0IG9yaWVudHMgdmVycyBsJ2F0dGVudGF0IHN1aWNpZGUsIGMndGFpZW50IGNldXggcXVpIG4ndGFpZW50IHBhcyB2cmFpbWVudCBjYXBhYmxlcyBkZSBmYWlyZSBhdXRyZSBjaG9zZS4gRW4gcmV2YW5jaGUsIHBhcm1pIGxlcyBrYW1pa2F6ZXMsIG9uIHRyb3V2ZSBhdXNzaSBkZXMgY29tYmF0dGFudHMgZW5kdXJjaXMgcXVpIHNlIHBvcnRlbnQgdm9sb250YWlyZXMgYXBycyBhdm9pciB0IGF1IGZyb250LCBtYWlzIG5lIGlscyBuZSBzb250IHBhcyBrYW1pa2F6ZXMgImVuIHByZW1pcmUgaW50ZW50aW9uIiBbIGwnaW52ZXJzZSBkZXMgOSUgY2l0cyBpY2ksIG5kbHJdLgpNYWthIGthbWkgaGFkaXIgZGVuZ2FuIG1lbmF3YXJrYW4gamFzYSBwZXJhd2F0YW4gdHVidWggZGFuIG1ha2UgdXAgcGVuZ2FudGluIHBhbmdnaWxhbiBzZWNhcmEgb25saW5lIGt1bmp1bmdhbiBrZSBydW1haCBhdGF1IHRlbXBhdCB5YW5nIHRlbGFoIGRpc2VwYWthdGksIHRlbnR1IGhhbCBpbmkgc2FuZ2F0IG1lbWJhbnR1IEFuZGEga2FyZW5hIHRhbnBhIGhhcnVzIG1lbmdhbGFtaSBrZW1hY2V0YW4gbGFsdSBsaW50YXMgZGFuIHBhc3RpbnlhIG1lbmdoZW1hdCB3YWt0dSBkYW4gdGVuYWdhIEFuZGEuIAoiV2UgYXJlIHBhcnRpY3VsYXJseSBwbGVhc2VkIHRoYXQgdGhlIE5FTyBFeGNoYW5nZSB3YXMgdGhlIGZpcnN0IENhbmFkaWFuIFN0b2NrIEV4Y2hhbmdlIHRvIGNvbW1pdCB0byB0aGUgV29tZW4ncyBFbXBvd2VybWVudCBQcmluY2lwbGVzLCBkZW1vbnN0cmF0aW5nIHRoYXQgTkVPIHJlY29nbml6ZXMgdGhlIGltcG9ydGFuY2Ugb2Ygbm90IG9ubHkgcmFpc2luZyBhd2FyZW5lc3MgZm9yIGdlbmRlciBkaXZlcnNpdHkgYnV0IHRha2luZyBhY3Rpb24gdG8gZW5hYmxlIGl0LiIuIApJIHRoaW5rIGl0cyBqdXN0IGNvbXBsaWNhdGVkIGluIGdlbmVyYWwsIHRoZSBkb2N1bWVudCByZXF1aXJlbWVudHMgYW5kIGZvcm1zIGFyZSBtb3JlIG9yIGxlc3MgdGhlIHNhbWUgZm9yIGNpdGl6ZW5zIGFuZCBGNCB2aXNhcy4KRmlyc3QsIHdvcmsgb3V0IHdoaWNoIGRvIHlvdSByZXNwb25kIHRvIGJlc3Q6IHNpZ2h0IG9yIHNvdW5kLCB0b3VjaCBvciBzbWVsbC4KSSBNciEgYW5kIE1ycy4gClRoZSBlbW90aW9uYWwgZmFjdG9yIGludm9sdmVkIGluIHRoZSBwb2tlciBnYW1lcyBhcmUgY3J1Y2lhbCBhbmQgaGFzIHRvIGJlIG5vdGVkLiBUaGUgZW1vdGlvbmFsIGNvbnRyb2wgcGxheXMgYSB2aXRhbCByb2xlIGFuZCB0aGF0IGlzIHNpZ25pZmljYW50IHRvIGFjY2VzcyB0aGUgb3Bwb25lbnRzIG1vdmUgdG8gbWFrZSBtb25leS4gCkFzIHRoZXkgd2FsayB0aGV5IHNjYW4gSmFtZXMgc2l0dGluZyBhdCBhIG5lYXJieSBib290aCB3aXRoIHRocmVlIG90aGVycyBhIHJhdmVuIGhhaXJlZCBBbWF6b24gaW4gYSByZWQgZHJlc3MsIGEgbWFsZSB3aXRoIHNob3J0LCBzcGlreSwgYmxvbmRpc2ggaGFpciwgYW5kIG1hdGNoaW5nIGdvYXRlZSwgYW5kIGFub3RoZXIgd29tZW4gd2l0aCBkYXJrIGhhaXIgd2l0aCBicm93biBoaWdobGlnaHRzIHdlYXJpbmcgYSBsaWdodCBjb2xvcmVkIGJsb3VzZS4uIApEaXJlY3Rpb24gc2lnbmJvYXJkcyBvbiB0aGUgaGlnaHdheSBhbmQgb3RoZXIgcHJvbWluZW50IHJvYWRzIHdpbGwgYWxzbyBiZWFyICdSZWFsJyBzaWducywgc3VjaCBhcyBTYXJrYWFyIEtpIER1bml5YSBmb2xsb3dlZCBieSBhIHJpZ2h0IGFycm93LCB0byBjcmVhdGUgYSB2aXJhbCBlZmZlY3QuIApJIHdvdWxkIGVhc2lseSBsZWF2ZSBCYXlsb3Igb3V0IGJlY2F1c2UgaXQgZG9lc24gbWF0dGVyIHRoYXQgdGhleSBwdXQgdXAgNzAgb24gUmljZSBhbmQgS2Fuc2FzLCB0aGVpciBzY2hlZHVsZSBkb2VzbiBjb21lIGNsb3NlLiAKV2Vpc2hlaXRlbiB1bmQgd2VnZSwgZGVuZW4gaWNoIGlubmVuIG9kZXIgYXVlbiBiZWdlZ25ldCBiaW4gdW5kIGRpZSBtaWNoIGJlZ2xlaXRldCBoYWJlbiwgZGFzIHp1IHNlaW4sIHdhcyBpY2ggbnVuIGJpbiAgIGRhcyB2ZXIgcmNrdGUgd2lsZGUgd2VpYiAgIGRhcyB2ZXJzcGllbHRlIGtpbmQgICBkaWUgcmVpZmUgZnJhdSAgIGRlciBtZW5zY2ggYXVmIGVyZGVuLiAKSSBhc3N1bWUgc28gbm8gb25lIGVsc2UgY2FuIGdldCB0b28gY2xvc2UgdG8gY3JhY2tpbmcgdGhlIGNvZGUgdGhlbXNlbHZlcy4gClRoZXkgYmVsaWV2ZSB0aGVyZSdzIGFuIG92ZXJzdXBwbHkgb2YgbWVhdCwgaGUgc2FpZCwgYW5kIENhbmFkaWFucyBhcmUgZWF0aW5nIGxlc3MgYW5pbWFsIHByb3RlaW4uIEluc3RlYWQsIHRoZXkncmUgc2hvd2luZyBtb3JlIGludGVyZXN0IGluIGFsdGVybmF0aXZlIHByb3RlaW5zLCBsaWtlIHF1aW5vYSBhbmQgbGVudGlscy4KUXVhZHMgdGhhdCBkaWRuIHJlYWxseSBoYXBwZW4gYXQgbXkgaG9tZSBnYW1lIiBhcmUganVzdCBzdXBlciBsb3cgZWZmb3J0IGNvbnRlbnQuIApBdHRlbXB0IHRvIGxvY2F0ZSBhaXJlZC4gVGhlIHZlaGljbGUgd2FzIGxpc3RlZCBhcyBzdG9sZW4gaW4gdGhlIGFwcHJvcHJpYXRlIGRhdGFiYXNlcy4gSW52ZXN0aWdhdGlvbiBjb250aW51aW5nLi4gCkFuZCB0aGV5IGhhdmUgdG8gdGhpbmsgY2FyZWZ1bGx5IHdoZXRoZXIgaXQgaXMgd29ydGggcmV0YWtpbmcgdGhlIHBsYW5ldCwgaW4gbGlnaHQgb2YgVEhFSVIgb2JqZWN0aXZlcy5CdXQgdGhlIGJvdHRvbSBsaW5lIGlzOiB0aGVyZSBpcyBvbmx5IG9uZSB3aW5uZXIuIApOb3Qgb25seSBkb2VzIHRoaXMgZHdhcmYsIEZyYW5rZW5XaGVhdCwgY29udGFpbiB0aGUgc3VwZXIgc3RhcmNoLCBidXQgaXQgYWxzbyBjb250YWlucyBzdXBlciBnbHV0ZW4gd2hpY2ggaXMgbXVjaCBtb3JlIGxpa2VseSB0byBjcmVhdGUgaW5mbGFtbWF0aW9uIGluIHRoZSBib2R5LiBBbmQgaW4gYWRkaXRpb24gdG8gYSBob3N0IG9mIGluZmxhbW1hdG9yeSBhbmQgY2hyb25pYyBkaXNlYXNlcyBjYXVzZWQgYnkgZ2x1dGVuLCBpdCBjYXVzZXMgb2Jlc2l0eSBhbmQgZGlhYmV0ZXMuCllvdSBtaWdodCB0aGluayBBcmVzIGxlYWRlciBhYmlsaXR5IG9ubHkgYmVuZWZpdHMgaGltc2VsZiwgYW5kIHdoaWxlIG9uIHBhcGVyIGl0IGRvZXMuIFRoYXQgaW5zYW5lbHkgbGFyZ2UgSFAgcG9vbCBpcyBtb3JlIHRoYW4ganVzdCBhIHNwb25nZSBmb3IgaGltLCBpdCBhIGJpZyBmYXQgaGFyZCB0byBnZXQgcmlkIG9mIHRocmVhdCBmb3IgdGhlIGVuZW15IHRlYW0gdGhhdCB0YWtlcyBoZWF0IG9mZiB5b3VyIHRlYW1tYXRlcyB3aGVuIHRhdW50cyBhcmVuIHVwLCBvciB0aGUgZW5lbXkgaGFzIFRydWVzaWdodC4uIApXaGF0IHRoZXkgZW5jb3VudGVyZWQgaW4gSXJhcSAoYW5kIGZvciBzb21lIHJlYXNvbiB0aGV5IGhhZCBhbGwgc2VydmVkIGluIElyYXEpIHdhcyByYWNpc20gYWdhaW5zdCB0aGUgSXJhcWkgcGVvcGxlLCByZWxpZ2lvdXMgYmlnb3RyeSwgYW5kIGV2ZW4gcmFjaXNtIGFuZCByZWxpZ2lvdXMgYmlnb3RyeSB3aXRoaW4gdGhlIG1pbGl0YXJ5IGl0c2VsZi4gCkFuYXRvbXkgYW5kIHBoeXNpb2xvZ3ksIGFzIHdlbGwgYXMgbWFzc2FnZSB0ZWNobmlxdWVzLCBhcmUgY29tbW9ubHkgb2ZmZXJlZCBpbiBtYXNzYWdlIHRoZXJhcHkgcHJvZ3JhbXMuIFNvbWUgcHJvZ3JhbXMgZm9jdXMgb24gYSBwYXJ0aWN1bGFyIHR5cGUgb2YgbWFzc2FnZSwgb3IgbW9kYWxpdHkuIE1vc3Qgc3RhdGVzIHJlcXVpcmUgY2VydGlmaWNhdGlvbiBvciBhIGxpY2Vuc2UgZm9yIG1hc3NhZ2UgdGhlcmFwaXN0cy4uIApJIGhhZCBhbiBlbmNvdW50ZXIgd2hlcmUgSSB3b2tlIHVwIGFuZCBmZWx0IGxpa2Ugc29tZW9uZSB3YXMgdW5kZXIgbXkgY292ZXJzIGxheWluZyB1cCBhZ2FpbnN0IG1lLiAKUHJvamVjdCBMZWFkZXJzIG1haW50YWluIGltcG9ydGFudCByZWxhdGlvbnNoaXBzIGJldHdlZW4gdGhlIHVuaXZlcnNpdHkgYW5kIHRoZWlyIGRlc2lnbmF0ZWQgY29tbXVuaXR5IHBhcnRuZXJzIHdoaWxlIGdhaW5pbmcgdmFsdWFibGUgbGVhZGVyc2hpcCBhbmQgcHJvZmVzc2lvbmFsIHNraWxscyBhcHBsaWNhYmxlIHRvIGFueSBjYXJlZXIuIE1hbnkgcHJvamVjdHMgc2VydmUgYXMgZm9sbG93IHVwIHRvIHRoZSB3b3JrIGRvbmUgYXQgdGhlIHByZXZpb3VzIFNlcHRlbWJlcidzICBzZXJ2aWNlIHNpdGVzLlRoZSBNb25nZWxsaSBBd2FyZCBmb3IgRXhjZWxsZW5jZSBpbiBDaXZpYyBFbmdhZ2VtZW50IChmb3JtZXJseSB0aGUgQnJ1aW4gSGVyb2VzIEF3YXJkKSByZWNvZ25pemVzIGlubm92YXRpdmUgYW5kIGluc3BpcmluZyBwcm9qZWN0cyBvcmdhbml6ZWQgYnkgVUNMQSBvcmdhbml6YXRpb25zLiAKSSd2ZSBmcmVxdWVudGx5IHJlY291bnRlZCB0aGF0IGRheSwgYW5kIG92ZXIgdGltZSwgbXkgcGVyc3BlY3RpdmUgb24gaXQgaGFkIGJlZW4gMzYwLiAKTWVzYSBUb3VyaXNtTWVzYSBIb3RlbHNNZXNhIEJlZCBhbmQgQnJlYWtmYXN0TWVzYSBWYWNhdGlvbiBSZW50YWxzTWVzYSBWYWNhdGlvbiBQYWNrYWdlc0ZsaWdodHMgdG8gTWVzYU1lc2EgUmVzdGF1cmFudHNUaGluZ3MgdG8gRG8gaW4gTWVzYU1lc2EgVHJhdmVsIEZvcnVtTWVzYSBQaG90b3NNZXNhIE1hcE1lc2EgVHJhdmVsIEd1aWRlQWxsIE1lc2EgSG90ZWxzTWVzYSBIb3RlbCBEZWFsc0xhc3QgTWludXRlIEhvdGVscyBpbiBNZXNhSG90ZWxzIG5lYXIgRXh0ZW5kZWQgU3RheSBBbWVyaWNhICAgUGhvZW5peCAgIE1lc2EgICBXZXN0QnkgSG90ZWwgVHlwZU1lc2EgRmFtaWx5IEhvdGVsc01lc2EgQnVzaW5lc3MgSG90ZWxzTWVzYSBHcmVlbiBIb3RlbHNNZXNhIFJlc29ydHNNZXNhIFNwYSBSZXNvcnRzUm9tYW50aWMgSG90ZWxzIGluIE1lc2FCeSBIb3RlbCBDbGFzczQgc3RhciBIb3RlbHMgaW4gTWVzYTMgc3RhciBIb3RlbHMgaW4gTWVzYUJ5IEhvdGVsIEJyYW5kQmVzdCBXZXN0ZXJuIEhvdGVscyBpbiBNZXNhTW90ZWwgNiBIb3RlbHMgaW4gTWVzYUV4dGVuZGVkIFN0YXkgQW1lcmljYSBIb3RlbHMgaW4gTWVzYUxhIFF1aW50YSBJbm4gU3VpdGVzIGluIE1lc2FEYXlzIElubiBIb3RlbHMgaW4gTWVzYUNvdXJ0eWFyZCBIb3RlbHMgaW4gTWVzYVJlc2lkZW5jZSBJbm4gSG90ZWxzIGluIE1lc2FQb3B1bGFyIEFtZW5pdGllc01lc2EgSG90ZWxzIHdpdGggRnJlZSBQYXJraW5nTWVzYSBIb3RlbHMgd2l0aCBQb29sc1BldCBGcmllbmRseSBIb3RlbHMgaW4gTWVzYVBvcHVsYXIgTmVpZ2hib3Job29kc0hvdGVscyBuZWFyIEZvdW50YWluIG9mIHRoZSBTdW5Ib3RlbHMgbmVhciBBcGFjaGUgV2VsbHNIb3RlbHMgbmVhciBIb21lc3RlYWRQb3B1bGFyIE1lc2EgQ2F0ZWdvcmllc0hvdGVscyB3aXRoIFNodXR0bGUgaW4gTWVzYVN1aXRlIEhvdGVscyBpbiBNZXNhTWVzYSBTYWZlIEhvdGVsc01lc2EgSG90ZWxzIHdpdGggSmFjdXp6aUNoZWFwIEFjY29tbW9kYXRpb25zIGluIE1lc2FRdWlldCBIb3RlbHMgaW4gTWVzYU1lc2EgTW9kZXJuIEhvdGVsc1dlZGRpbmcgSG90ZWxzIGluIE1lc2FIb3RlbHMgd2l0aCBGcmVlIFdpZmkgaW4gTWVzYU1lc2EgQ2hlYXAgUmVzb3J0c05lYXIgTGFuZG1hcmtzSG90ZWxzIG5lYXIgTWFzc2FnZSBFbnZ5IFNwYSBEb2Jzb25Ib3RlbHMgbmVhciBGbHkgSGlnaCBQYXJhZ2xpZGluZ0hvdGVscyBuZWFyIERvYnNvbiBSYW5jaCBHb2xmIENvdXJzZUhvdGVscyBuZWFyIFJvc2UgR2FyZGVuIGF0IE1lc2EgQ29tbXVuaXR5IENvbGxlZ2VIb3RlbHMgbmVhciBCcnVuc3dpY2sgWm9uZUhvdGVscyBuZWFyIE5hdGlvbmFsIENvbWVkeSBUaGVhdHJlIChOQ1QpSG90ZWxzIG5lYXIgRmVlZCBNeSBTdGFydmluZyBDaGlsZHJlbkhvdGVscyBuZWFyIFN0LiAKTGFkeSBHYWdhIGlzIGJpc2V4dWFsLiAKSG9saWRheSBJbm4gR29hIFJlc3RhdXJhbnQgRGUgT3JvIENhc2lubyBQdWI6IFBvc3Nlc3NlcyBhIHZhc3QgbnVtYmVyIG9mIFNsb3QgbWFjaGluZXMgcm91bmQgYWJvdXQgMTUwIG9yIHNvIGFsb25nIHdpdGggMyByZXN0YXVyYW50cyBhbmQgMiBiYXJzIGNhcnJ5aW5nIDE3MCByb29tcyBhbmQgc3VpdGVzLiBJdCBmYWNpbGl0YXRlcyAyNCBob3VyIHJvb20gc2VydmljZSwgQnVzaW5lc3MgQ2VudGVyIHdpdGggTWVldGluZyBSb29tcywgd2VsbCBvdXRmaXR0ZWQgZ3ltcywgdGFibGUgdGVubmlzIGhhbGxzLCBwb29sIHRhYmxlLCBLaWRzIFBhcmsgYW5kIGxhc3QgYnV0IG5vdCB0aGUgbGVhc3QsIGRpc2NvdGhlcXVlcyBldmVyeSBTYXR1cmRheS4uIApCdXQgd2hlbiB0aGV5IGZvdW5kIG91dCB0aGV5J2QgYm90aCBiZSBhdHRlbmRpbmcgdGhlIFVuaXZlcnNpdHkgb2YgQ29sb3JhZG8gaW4gQm91bGRlciwgdGhleSBiZWNhbWUgZmFzdCBmcmllbmRzLiBUaGVuLCBiZXN0IGZyaWVuZHMuIEFuZCwgbm93LCByb29tbWF0ZXMgaW4gYSBXaWxsaWFtcyBWaWxsYWdlIHRvd2VyLgpPbmUgb2YgdGhlIHNvbnMgYmVjYW1lIGEgYnJpY2tsYXllciwgYW5vdGhlciBhIHBvdHRlcmVyIGFuZCB0aGUgdGhpcmQgYSBtZXJjaGFudC4gVG9nZXRoZXIgdGhleSBtYWRlIGEga2lsbGluZyBkdXJpbmcgdGhlIGJpZyBidWlsZGluZyBib29tLiAKVGhlIFNlbmF0ZSBldmVudHVhbGx5IHZvdGVkIHRvIGJlZ2luIGRlYmF0ZSwgYnV0IGFncmVlZCB0byB3YWl0IGZvciBhIGJpcGFydGlzYW4gYWdyZWVtZW50IGJlZm9yZSBtb3ZpbmcgYW55IGZ1cnRoZXIuSm9obiBDb3JueW4gb2YgVGV4YXMsIHRoZSBOby4gCkknbSBsZWFybmluZyBob3cgdG8gZG8gbW9yZSBhbmQgbW9yZSBjb29sIHN0dWZmIHdpdGggbXkgbmV3IHNtYXJ0IHBob25lLiBTb21lZGF5LCBJJ2xsIGZpZ3VyZSBvdXQgaG93IHRvIG1ha2UgYSBjYWxsLgpCdXQgdGhlIGluZHVzdHJ5IGlzIGF0IGl0IGhpZ2hlc3QgcG9pbnQgcmlnaHQgbm93PyBCb3RoIGluZGllIGFuZCB0cmlwbGUgQSBnYW1lIGRldmVsb3BlcnMgYW5kIHB1Ymxpc2hlcnMgYXJlIG1ha2luZyBhbnl3aGVyZSBmcm9tIHRob3VzYW5kcyBvZiBkb2xsYXJzIHRvIGh1bmRyZWRzIG9mIG1pbGxpb25zIG9mIGRvbGxhcnMuIApPbmUgbG9zaW5nIG92ZXIgMTAwIHBvdW5kcy4gVGhlIG90aGVyIGdhaW5pbmcgbW9yZSB0aGFuIDUwIHBvdW5kcyB0byBsYW5kIGF0IHRoZSBzYW1lIHdlaWdodCBhdCB0aGUgc2FtZSB0aW1lLiBIZSdzIGhvdyB0aGV5IHB1bGxlZCBpdCBvZmYuIApJbiBhZGRpdGlvbiB0byByZXNpZ25pbmcgaGlzIHBvc3QgYXQgdGhlIE5BRSwgd2hpY2ggY2xhaW1zIDMwIG1pbGxpb24gbWVtYmVycywgSGFnZ2FyZCBzdGVwcGVkIGFzaWRlIGFzIGxlYWRlciBvZiBoaXMgMTQsMDAwIG1lbWJlciBOZXcgTGlmZSBDaHVyY2ggcGVuZGluZyBhIGNodXJjaCBpbnZlc3RpZ2F0aW9uLiBJbiBhIFRWIGludGVydmlldywgaGUgc2FpZDogaGFkIGEgZ2F5IHJlbGF0aW9uc2hpcCB3aXRoIGFueWJvZHksIGFuZCBJIHN0ZWFkeSB3aXRoIG15IHdpZmUsIEkgZmFpdGhmdWwgdG8gbXkgd2lmZS4gCkFib3V0IDcwJSBvZiBpdCBpcyBjb25zdW1lZCBieSBwZW9wbGUgd2hvIG1ha2UgbGVzcyB0aGFuICQ2MCwwMDAgYSB5ZWFyLiAKVG9tIGFuZCBJIGhhZCBzdHJldGNoZWQgdGhlIGxpbWl0cyBvZiBzY2llbmNlIG9uY2UgYWxyZWFkeSwgdG8gY3JlYXRlIGhlci4gVG8ga2VlcCBoZXIsIHdlJ2QgaGF2ZSB0byBkbyBpdCBhZ2Fpbi4gVGhlIGRvY3RvcnMgc2FpZCB3ZSBjb3VsZCBlbmQgdXAgd2l0aCBhIGxpdmUgYmFieSwgYSBkZWFkIGJhYnksIG9yIGEgd3JlY2tlZCBiYWJ5LiBCZWZvcmUgd2UnZCBrbm93LCB3ZSB3b3VsZCBleHBsb3JlIHRoZSB3b25kZXIgYW5kIHBlcmlsIG9mIG1hbidzIGFiaWxpdHkgdG8gbWFuaXB1bGF0ZSBuYXR1cmUsIGFuZCB3ZSdkIHN1cnJlbmRlciB0byB0aGUgdW5kZXJzdGFuZGluZyB0aGF0IHdlIGNvbnRyb2wgc28gbGl0dGxlLgooQWZ0ZXIgYWxsLCB0aGUgYXNzYWlsYW50IGp1bXBzIG91dCBvZiB0aGUgbGVmdCBzaWRlIGRvb3Igd2hpbGUgdGhlIGNhciBpcyByb2xsaW5nLiAKVGhleSBjYW4gcGFzcyBiZXR3ZWVuIHVzIGFuZCB0aGUgc3VuLCB0aGV5IGFyZSB0b28gZmFyIGF3YXkgYW5kIGRvbiByZWZsZWN0IGVub3VnaCBsaWdodCB0byBmaW5kIHRoZW0gdmlzdWFsbHkuIApUaGUgbW9tZW50IHlvdSBsZXQgdGhlbSB5b3UgYW5hbHl6ZSB5b3VyIGdhbWUgcGxheSwgeW91ciBmaW5pc2ggY291bGQgYmUgbmVhciBzb29uLi4gClNvbWUgc21hbGxlciBjb21tdW5pdGllcyBoYXZlIHRvdXJuZXlzIHdpdGggYXJvdW5kICQzMDAgdG8gd2luIGFuZCBvbmx5IDE1MCBwbGF5ZXJzLiAKVGhhdCdzIG5vdCBoeXBlcmJvbGUuIApCb3ggOCwgV2lhcnRvbiwgT250YXJpbyBOMEggMlQwKSBvciBGaXJzdCBVbml0ZWQgQ2h1cmNoICgxNiBXaWxsaWFtIFN0LiAKTW9zdCBwb2tlciByb29tcyBoYXZlIGEgcGxhY2UgdG8gc2lnbiBhIHdhaXRpbmcgbGlzdCBmb3IgYSBwYXJ0aWN1bGFyIGdhbWUuIFNvbWUgaGF2ZSBhIHdoaXRlIGJvYXJkIHdpdGggdGhlIGdhbWVzIGFuZCBsaW1pdHMgYXZhaWxhYmxlIGFsb25nIHdpdGggdGhlIHdhaXRpbmcgcGxheWVycycgaW5pdGlhbHMuIApFYXJseSBpbiB0aGUgQ2l2aWwgV2FyLCBSb2JlcnQgRS4gTGVlIHdhcyBjYWxsZWQgdGhlICJLaW5nIG9mIFNwYWRlcy4iIFllcyBoZSB3YXMgY2FsbGVkIHRoZSAiS2luZyBvZiBTcGFkZXMiIGVhcmx5IGluIHRoZSBDaXZpbCBXYXIgICBub3QgdGhlIEFjZSBvZiBTcGFkZXMuIEhlIHdhcyBjYWxsZWQgdGhpcyBiZWNhdXNlIGhlIGxpa2VkIHRvIGRpZyBpbiB0cmVuY2hlcy4gVGhlIFJvY2sgb2YgQ2hpY2thbWF1Z2EsIFRoZSBUcmVlIG9mIEFwcG9tYXR0b3gsIGV0Yy4gKS4gKEZ1bGwgQW5zd2VyKQpSZWxhdGVkIEFydGljbGVzIEhvdGVscyBDbG9zZSB0byBNaXNzaXNzaXBwaSBDYXNpbm9zIFJpdmVyYm9hdCBHYW1ibGluZyBpbiBJb3dhIFRoZSBDbG9zZXN0IEhvdGVscyB0byB0aGUgUGFyYWdvbiBDYXNpbm8gaW4gTG91aXNpYW5hIEhvdGVscyBDYXNpbm9zIGluIEthbnNhcyBDaXR5CkluIExlZ2VuZCBvZiBaZWxkYTogT29UIHRoZXJlIHdhcyBhIGdsaXRjaC4gCkNoaWxsIGRvdWdoIGF0IGxlYXN0IDEgaG91ci4gUm9sbCBpbnRvIGJhbGxzIGFuZCBwbGFjZSBvbiBsaWdodGx5IGdyZWFzZWQgY29va2llIHNoZWV0LiBCYWtlIGF0IDM1MCBkZWdyZWVzIGZvciA4IHRvIDkgbWludXRlcy4gUmVtb3ZlIGZyb20gb3ZlbiBhbmQgcGxhY2UgMS8yIEFuZGVzIG1pbnQgb24gdG9wIG9mIGVhY2ggY29va2llLiBQdXQgYmFjayBpbiBvdmVuIGZvciBvbmx5IGFib3V0IDEwIHNlY29uZHMuIEN1dCBidXR0ZXIgaW50byBkcnkgY2FrZSBtaXggd2l0aCBmb3JrIG9yIHBhc3RyeSBibGVuZGVyIHVudGlsIG1peHR1cmUgaXMgY3J1bWJseS4gClNoZSdzIHRoZSByZWFzb24gSSBoYXZlIHBpY3R1cmVzIG9mIG15IHNvbi4gClRoZSBmZXN0aXZhbCBjb21taXR0ZWUgaXMgaW4gdGhlIHByb2Nlc3Mgb2YgZmlybWluZyB1cCBwbGFucyBhbmQgbGVhcm5lZCBXZWRuZXNkYXkgZXZlbmluZyB0aGF0IHByaXZhdGUgY29udHJpYnV0aW9ucyBhbmQgYSAkMSwwMDAgZ2lmdCBmcm9tIHRoZSBUb3duIENvdW5jaWwgYXJlIGVub3VnaCB0byBwYXkgZm9yIHRoZSBmaXJld29ya3MgZGlzcGxheS4gVGhlIGZpcmV3b3JrcyB3aWxsIGJlIGxhdW5jaGVkIGZyb20gdGhlIGdyb3VuZHMgb2YgV2lzZG9tIE1hbnVmYWN0dXJpbmcsIGFuZCBkZXRhaWxzIG9mIHRoYXQgZGlzcGxheSBhcmUgc3RpbGwgYmVpbmcgd29ya2VkIG91dC4uIApGYXNlIDEgaXMgdnIgZGllIHRpamQgZW4gbW9ldCBpayB2b2xsZWRpZyBtZXQgZWlnZW4gZ2VsZCBmaW5hbmNpZXJlbi5BbHMgamUgYWFuIGhldCBiZWdpbiBzdGFhdCwgZGFuIHpvdSBpayB6ZWtlciB6b3JnZW4gZGF0IGZhc2UgMiBnb2VkIGdlY292ZXJkIGdhYXQgd29yZGVuICh3YW50IHRlZ2VuIGRlIHRpamQgZGF0IGplIDcwKyBiZW50LCB3aWwgamUgZ2V3b29uIGVlbiBnb2VkIGlua29tZW4gaGViYmVuIHVpdCBwZW5zaW9lbiBlbiBuaWV0IG1lZXIgbWV0ZW4gd2Vya2VuKSwgZW4gZGF0IHpvdSBpayBkb2VuIGRvb3IgZ2V3b29uIGVlbiBkZWdlbGlqayBiZWRyYWcgaW4gdGUgbGVnZ2VuIGluIHBlbnNpb2VucG90amUocykgbWV0IGJlbGFzdGluZ3Zvb3JkZWVsLiAKNCBsZXNzb25zIGZyb20gRmFybVZpbGxlJ3MgQ0VPCkluIGNvbGxlZ2UsIEkgd2FzIHdvcmtpbmcgaW4gYSBncm91cCBwcm9qZWN0IHdpdGggYW4gaW50ZXJuYXRpb25hbCBzdHVkZW50IGZyb20gQ2hpbmEuIEkgd2FzIHZhZ3VlbHkgYXdhcmUgdGhhdCBzaGUgd2FzIHN1cGVyIHJpY2ggKHRoZSBDaGluZXNlIHN0dWRlbnRzIHdlcmUgYWxtb3N0IGFsd2F5cyBwcmV0dHkgcmljaCwgYXMgdGhlaXIgcGFyZW50cyBoYWQgcGFpZCB0byBtb3ZlIHRoZW0gdG8gdGhlIFVTQSwgYnV5IHRoZW0gbmljZSBjYXJzL2FwYXJ0bWVudHMsIGFuZCBwYXkgZm9yIGFuIGFscmVhZHkgdmVyeSBleHBlbnNpdmUgcHJpdmF0ZSBjb2xsZWdlKSBidXQgaXQgbmV2ZXIgb2NjdXJyZWQgdG8gbWUganVzdCBob3cgZGlmZmVyZW50IG91ciBjb25jZXB0cyBvZiBtb25leSB3ZXJlIHVudGlsIHNoZSwgd2hpbGUgZmxpcHBpbmcgdGhyb3VnaCBoZXIgcGhvbmUgYXQgdGhlIGVuZCBvZiBhIG1lZXRpbmcsIHNhaWQgIkhleSBhbmltYWxjdWxlLCBJIHdhcyB0aGlua2luZyBvZiBidXlpbmcgc29tZXRoaW5nIHRvIGNlbGVicmF0ZSBmaW5pc2hpbmcgdGhpcyBwcm9qZWN0LiBEb2VzIHRoaXMgcHVyc2UgbG9vayBiZXR0ZXIgaW4gYmx1ZSBvciB3aGl0ZT8iClRoaXMgZ29lcyBvdXQgb2YgdGhlIHdpbmRvdyBpbiBjYXNlcyBvZiBleHRyZW1lIHNvY2lldGFsIGJyZWFrZG93biBvciB3aWRlc3ByZWFkIGFuZCBsYXN0aW5nIHN0YXJ2YXRpb24gKGFjY29yZGluZyB0byBzb21lIHJlYWxseSBmdWNrZWQgdXAgaGlzdG9yaWNhbCBleGFtcGxlcyB3aGVyZSBiYWJpZXMgd2VyZSBpbiBmYWN0IGVhdGVuKSwgYnV0IGluIHRpbWVzIG9mIHJlbGF0aXZlIHBsZW50eSBhIHNtYWxsIHNhY3JpZmljZSBvZiBwcm92aWRpbmcgZm9vZCBhbmQgY2FyZSBmb3IgYW4gZXh0cmEgY291cGxlIG9mIGtpZHMgZ3JlYXRseSBpbmNyZWFzZXMgeW91ciBvd24gY2hpbGRyZW5zIGNoYW5jZXMgb2YgcmVhY2hpbmcgYWR1bHRob29kLgpUaGUgTHVuZWJyaW5nIGZhbWlseSBtb3ZlZCB0byBMYXMgQ3J1Y2VzLCBOZXcgTWV4aWNvIHdoZW4gaGUgd2FzIDEyLiBIZXJtYW4gW3NpYyBhdHRlbmRlZCBncmFkZSBzY2hvb2wgaW4gTGFzIENydWNlcy4gSGUgYXR0ZW5kZWQgTmV3IE1leGljbyBNaWxpdGFyeSBJbnN0aXR1dGUsIE5ldyBNZXhpY28gSGlnaGxhbmQgQ29sbGVnZSwgYW5kIEFyaXpvbmEgU3RhdGUgVW5pdmVyc2l0eSBmb3IgdGhyZWUgeWVhcnMgb24gYSBmb290YmFsbCBzY2hvbGFyc2hpcC4gCkZhbWlseS4gCldURj8gWW91IHNob3VsZCBzZWUgdGhlIEZCIHBhZ2U7IGl0IGJsb3dpbmcgdXAuIApUaGUgb3RoZXIgdHJhZGllcyBsYXVnaGVkIHVwIGEgc3Rvcm0uIApDb25zaWRlciByZXNlYXJjaCBvbiBiYWQgYXBwbGVzIGFuZCB0ZWFtIGVmZmVjdGl2ZW5lc3MgYnkgV2lsbCBGZWxwcywgVGVyZW5jZSBSLiBNaXRjaGVsbCBhbmQgRWxpemEgQnlpbmd0b24uIApFZGl0OiBZb3UgbWFucyBnZXQgd2F5IHRvIGRlZmVuc2l2ZSBhYm91dCBzaGl0LiBNYXJjIGhhZCBwb29yIG51bWJlcnMgb24gZ3JpenogdGhpcyB5ZWFyIHdoaWxlIEpWIHNpbmNlIHRoZSB0cmFkZSBoYXMgYmVlbiBraWxsaW5nIGl0IGFuZCBJIHdhcyBwb2ludGluZyB0aGF0IG91dCBidXQgeW91IG1hbnMgdG9vayBpdCBsaWtlIEkgbGlrZWQgSSBzYWlkIE1hcmMgdGhlIHdvcnN0IGNlbnRlciBpbiB0aGUgbGVhZ3VlIDEwIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpUaGlzIHdhc24gYSBCQUQgYm9vaywgYnV0IExhZ2VyY3JhbnR6IGp1c3QgZGlkbiBjYXB0dXJlIExhcnNzb24gc3R5bGUsIG9yIHJlYWxseSBzZWVtIHRvIHVuZGVyc3RhbmQgdGhlIGNoYXJhY3RlcnMgZnVsbHkuIEFzIG9uZSByZXZpZXdlciBwdXQgaXQsIGl0IHJlYWRzIGxpa2UgYSBmYW5maWMuIEFsc28sIGhlIHRlbGVncmFwaGVkIHRoZSAicGxvdCB0d2lzdCIgZnJvbSB0aGUgdmVyeSBiZWdpbm5pbmcsIHdoaWNoIGlzIG9uZSBvZiBteSBwZXQgcGVldmVzLiBJZiBJIGNhbiBzZWUgaXQgY29taW5nIGEgbWlsZSBhd2F5IHRoZSBmaXJzdCB0aW1lIEkgcmVhZCBpdCwgeW91IGRvbmUgc29tZXRoaW5nIHdyb25nLgoiUG9rZXIgcGxheWVycyBiZXdhcmUuIEkganVzdCBibHVmZmVkIGFuZCBhIGh1Z2UgcGFydCBvZiBteSBjaGlwIHN0YWNrIHdhcyBzdWRkZW5seSBhdCByaXNrLiAKQW5kIGp1c3QgdG8gZGVtb25zdHJhdGUgaG93IGhvcnJpYmxlIEkndmUgYmVlbiB3aXRoIG1vbmV5IGxhdGVseSwgSSd2ZSBoYWQgdGhlIFVQUyBndXkgaGVyZSB0aHJlZSB0aW1lcyB0b2RheSwgdGhlIEZlZCBleCBsYWR5IG9uY2UsIERITCBvbmNlIGFuZCBJJ20gZmFpcmx5IGNlcnRhaW4gSSd2ZSBnaXZlbiBteSBtYWlsIGNhcnJpZXIgYSBoZXJuaWEuIApCZWluZyBkZXZlbG9wZWQgYnkgYW4gZXggYWRtaW4sIC91L2RlaW1vcnouLiAKUGhvdG86IFB1cml0eSBEZXNpZ24gVGhlIEhvbWUgRnJvbnQ6IEV4cGVydCBhZHZpY2UgYXQgdGhlIEJDIEhvbWUgKyBHYXJkZW4gU2hvdyBieSBSZWJlY2NhIEtlaWxsb3IgW1BORyBNZXJsaW4gQXJjaGl2ZV0uIApJIGd1ZXNzIGl0J3MgZGlmZmVyZW50IGJlY2F1c2UgQ29sdCBhbmQgRGViYmllIGFscmVhZHkgbGl2ZWQgdG9nZXRoZXIgYW5kIHRoZW4gTGFyaXNzYSBtb3ZlZCBpbnRvIGFuIGFscmVhZHkgZXN0YWJsaXNoZWQgbGl2aW5nIHNpdHVhdGlvbi4gVGhhdCdzIHByb2JhYmx5IHdoeSBDb2x0IGZlbHQgc28gdG9ybiBiZXR3ZWVuIHRoZSB0d28gb2YgdGhlbS4gCkFuZCBzbyB0byBmaWdodCB0aGlzIGVjb25vbWljIGludmFzaW9uIHRoZXJlIHdlcmUgdG93biB3aWRlIGJvb2sgYnVybmluZ3Mgb2Ygd2hpY2hldmVyIG9mIHRoZXNlIGV4dHJhIGxvY2FsIGNhdGFsb2dzIGNvdWxkIGJlIGZvdW5kLiBUaGVzZSBmaXJzdCBtYXNzIGJvb2sgYnVybmluZ3MgaW4gQW1lcmljYSB3YXMgYSBjb21wbGV0ZWx5IHVuc2F0aXNmYWN0b3J5IHJlc3BvbnNlIHRvIHRoZWlyIHRocmVhdCwgYXMgdG93bnNmb2xrIHF1aWNrbHkgdm90ZWQgd2l0aCB0aGVpciBwb2NrZXRib29rcywgd2hldGhlciB0aGVpciBzaGlydHNsZWV2ZXMgd2VyZSBidXJuZWQgaW4gdGhlIGNhdGFsb2cgZmlyZXMgb3Igbm90LCB0aGUgc21va2V5IGJ1cmRlbiBvZiBmcmVlIGVudGVycHJpc2UuIEl0IHdhcyB0aGUgbGVhc3Qgd2lzZSB3YXkgb2YgZmlnaHRpbmcgdGhpcyBuZXcgd2F2ZSBvZiBjb21wZXRpdGlvbiwgb2J2aW91c2x5LCBidXQgdGhlIGlkZWEgaGVsZCBlbm91Z2ggZmlyZXkgY2hhcm0gdG8gaGF2ZSBtYWRlIGl0c2VsZiBmZWx0IGluIHRoZSBwYWdlcyBvZiBoaXN0b3J5LiAKQWdyZWUgd2l0aCB0aGUgb3RoZXIgcG9zdGVyLiBUaGUgbW9zdCBvYnZpb3VzIHRoaW5nIHRvIGNvcnJlY3QgaXMgbWFpbnRhaW5pbmcgdGlnaHRuZXNzIGF0IHRoZSBib3R0b20uIApJIGhhdmUgZWFybmVkIGV2ZXJ5dGhpbmcgSSBoYXZlIGdvdC4uIApNZXNxdWl0ZSBGaXJlIERlcGFydG1lbnQgaG9zdHMgNXRoIGFubnVhbCBmcmVlIHBhbmNha2UgYnJlYWtmYXN0CkNvbW1lbnQgYnkgVGhlIFN0cmVldHMgRG9uIExvdmUgWW91IEJhY2sgb24gT2N0b2JlciAyNiwgMjAxNyBhdCA2OjEzcG0KTWF5YmUgdGhlcmUgaXNuIGEgY29uc3BpcmFjeSBhbmQgdGhlIGRpbWluaXNoZWQgZG5jIHN1cGVyZGVsZWdhdGUgc3lzdGVtIGFuZCBldmVyeW9uZSBpbnZvbHZlZCBmcm9tIDIwMTYgZmlyZWQgbWVhbnMgdGhpbmdzIHdpbGwgY2hhbmdlIG9yIHlvdSB3aWxsIHB1dCB5b3VyIGZpbmdlcnMgaW4geW91ciBlYXJzIGFuZCB5ZWxsIGxhIGxhIGxhIGlmIEJlcm5pZSBub3QgdGhlIG5vbWluZWUuIFBvaW50IGlzOiBkb24gZnVja2luZyB0YWxrIHlvdXJzZWxmIGludG8gYmVsaWV2aW5nIFJ1c3NpYSBhbmQgdGhlIFJzIG93biBwcm9wYWduZGEgYW5kIHRoaW5raW5nIHRoZXJlIGEgY29uc3BpcmFjeS4gTXkgQUNBIGlzIG9uIHRoZSBsaW5lIG1hdGUgYW5kIEkgd2lsbCBiZSBGVUNLSU5HIFBJU1NFRCBpZiBwZW9wbGUgbGlrZSB5b3UgdGFrZSB0aGUgcGFydHkgaG9zdGFnZSBiZWNhdXNlIHRoZSBjYW5kaWRhdGUgaXMgcGVyY2VpdmVkIGNlbnRlciBsZWZ0Ck9mIGFib3V0IG9uZSBpbiA1MCwwMDAgdG8gNjAsIDAwMCBwcmVnbmFuY2llcy4gCkpEOiBJIGd1ZXNzIHNvLiBJIGFsd2F5cyBwbGF5ZWQgZGVmZW5zZS4gSSB3YXNuIGEgaHVnZSBFcmljIERlc2phcmRpbnMgZmFuLCBidXQgSSBndWVzcyB0aGF0IHdoeSBJIGFsd2F5cyBsaWtlZCB0byBzZWUgZGVmZW5zZW1lbiBkbyB3ZWxsLiAKSXQgdmVyeSB2aXN1YWxseSBhcHBlYWxpbmcuIApUaGVyZSBhcmUgYWxzbyBzaXRlcyB0aGF0IG9mZmVyIG9ubGluZSBzcG9ydHMgYmV0dGluZywgd2hpY2ggaXMgYW5vdGhlciBmb3JtIG9mIGdhbWJsaW5nLiBUaGVzZSBzaXRlcyBhbGxvdyB1c2VycyB0byBwbGFjZSBiZXRzIG9uIGF0aGxldGljIGNvbXBldGl0aW9ucyBvZiBldmVyeSBraW5kLCBhcyB3ZWxsIGFzIG90aGVyIGV2ZW50cyBsaWtlIHBvbGl0aWNhbCByYWNlcyBvciB0aGUgb3V0Y29tZXMgb2YgcmVhbGl0eSBUViBzaG93cy4gVGhlIHNpdGVzIG9mZmVyIHRoZWlyIG93biBvZGRzLCB3aGljaCBpbiBzb21lIGNhc2VzIGFyZSBiZXR0ZXIgdGhhbiB0aGUgb2RkcyBvZmZlcmVkIGJ5IHRoZSB0cmFkaXRpb25hbCBMYXMgVmVnYXMgYm9va21ha2VycyAoZHVlLCBpbiBwYXJ0LCB0byB0aGUgbG93ZXIgb3ZlcmhlYWQgcmVxdWlyZWQgdG8gcnVuIGFuIG9ubGluZSBiZXR0aW5nIHNpdGUpLiAKWW91IGhhdmUgYWxsIHRoZSBwb3dlciBvZiB0aGUgaW50ZXJuZXQgdG8gbW9sZCBpdApJbml0aWFsLCB0aGUga25lYWRpbmcgYWN0aW9ucyBoZWxwIGFjdGl2YXRlIGN5dG90b3hpYyBwb3RlbnRpYWwgaW4gdGhlIHBoeXNpcXVlLCB3aGljaCByZXF1aXJlcyBraWxsZXIgY2VsbHMgdGhhdCB3aWxsIGJhdHRsZSBhbiBpbmZlY3Rpb24uIFRoaXMgcHJvY2VkdXJlIGFsc28gd2lsbCBoZWxwIGdldCByaWQgb2YgVCBjZWxscyBpbiB0aGUgZW50aXJlIGJvZHksIHdoaWNoIHdpbGwgaGVscCB0aGUgaW1tdW5lIHN5c3RlbSBwZXJmb3JtIGEgbG90IG1vcmUgc3VjY2Vzc2Z1bGx5LiAKSW4gYSB3YXksIGhpcyByZWFsaXR5IGNvdWxkIGJlIGNvbXBhcmVkIHRvIHRoZSBmb2xsb3dpbmcgc2l0dWF0aW9uLiBJbWFnaW5lIHlvdSBhcmUgYSB0b3VyaXN0IHZpc2l0aW5nIENoaW5hLiBZb3UgZG9uJ3Qga25vdyB0aGUgbGFuZ3VhZ2UgYW5kIHlvdSBhcmUgYXNraW5nIGFyb3VuZCBmb3IgdGhlIG5lYXJlc3Qgd2FzaHJvb20uIApVbmRlciBOSiBzdGF0ZSBsYXcgYmFjayB0aGVuLCB0aGlzIHdhcyBjb25zaWRlcmVkIGEgcmVwcmlldmUgZnJvbSBHb2QsIGFuZCBoZSBnb3QgZnJlZWQuIFNvbWVob3csIGhlIGdldHMgaGlzIG9sZCBqb2IgYmFjaywgYW5kIGhlIHdvcmtpbmcgd2hlbiBoZSBzZWVzIGEgZ2lybCBzdGljayBoZXIgZ3VtIG9uIHRoZSBiYWNrIG9mIGEgc2VhdC4gCkdlbi4gRGF5YWwgc2FpZCB0cm9vcHMgaGFkIHNlaXplZCBjb250cm9sIG9mIHRoZSAxMiBzcXVhcmUgYmxvY2sgY29tcGxleCBieSBlYXJseSBUaHVyc2RheSBtb3JuaW5nLCBpbiAgY2x1ZGluZyB0aGUgZ29sZGVuIGRvbWVkIHRlbXBsZSBpdHNlbGYsIHRoZSBtb3N0IHNhY3JlZCBzaHJpbmUgb2YgdGhlIFNpa2ggcmVsaWdpb24uIApUaGUgUGxhc3RpYyBQb2tlciBDaGlwIGlzIHRoZSBsZWFzdCBleHBlbnNpdmUgYW5kIHRoZSBtb3N0IHBvcHVsYXJseSB1c2VkIHRocm91Z2hvdXQgdGhlIHdvcmxkIHRvZGF5LiAKVGhleSBtaWdodCBldmVuIHRyeSB0byBhcmd1ZSB3aXRoIGhpbSwgd2hpY2ggd2lsbCBnaXZlIGhpbSBhIGNvbnNpc3RlbnQgZm9sbG93aW5nLiAKQW5kIHRoYXQgd2FzIHRydWUgRnJpZGF5IGF0IFNlbGxlcnN2aWxsZSBUaGVhdGVyIDE4OTQuIFRoZSBiYW5kLCBpdHMgbWVtYmVycyBpbiB0aGVpciBtaWQgNTBzLCBsb29rZWQgbW9yZSBsaWtlIGJsdWUgY29sbGFyIGV2ZXJ5bWVuIHN0cmFwcGluZyBvbiBpbnN0cnVtZW50cyBmb3IgYSB3ZWVrZW5kIGphbSB0aGFuIGEgc3VjY2Vzc2Z1bCwgaW5mbHVlbnRpYWwgcm9jayBiYW5kLiBFc3BlY2lhbGx5IERpTml6aW8sIGhpcyBnaXJ0aCBub3cgZXhjZXB0aW9uYWwsIGluIGEgZ3JheSBUIHNoaXJ0IGFuZCBtZWNoYW5pYydzIGNhcC4KRm9yIG1lIGl0IHJlYWxseSBkcm92ZSBob21lIHRoZSBkaXNwYXJpdHkgYmV0d2VlbiB0aGUgbGl2ZSBhY3Rpb24gcHJvZHVjdGlvbnMgYW5kIHRoZSBhbmltYXRlZCBzdHVmZi4gClRoZSBMaWxpZWJyaWRnZSBNZXRob2QgbWlnaHQgYmUgdGhlIHNoaXR0aWVzdCBib29rIGFuZCB0aGUgc2hpdHRpZXN0IHByb2dyYW0gZXZlciB3cml0dGVuLiBJdCBob25lc3RseSByZWFkIGxpa2UgImZ1Y2sgeW91LCBmYW5zLiAKTWFraW5nIGl0IGNvbXBsZXRlbHkgZnJlZSB3b3VsZCBjdXQgdGhlbSBvdXQgb2ZmIHVuaXZlcnNpdGllcyBidXlpbmcgbGlzY2VuY2VzIGZvciBhbGwgb2YgdGhlaXIgc3R1ZGVudHMgKGFuZCBhcHBhcmVudGx5IGEgZmV3IGRlbnNlIHN0dWRlbnRzKS4KMy4gTGFuZ3Nqb2VuIFBILCBldCBhbC4gVGhlIGNsaW5pY2FsIHVzZSBvZiBITUcgQ29BIHJlZHVjdGFzZSBpbmhpYml0b3JzIGFuZCB0aGUgYXNzb2NpYXRlZCBkZXBsZXRpb24gb2YgY29lbnp5bWUgUTEwLiBBIHJldmlldyBvZiBhbmltYWwgYW5kIGh1bWFuIHB1YmxpY2F0aW9ucy4gQmlvZmFjdG9ycyAyMDAzOzE4KDEgNCk6MTAxIDExLgpJIHVuZGVyc3RhbmQgdGhlIGZlZWxpbmcgdGhlIHJhY2lzbSBpcyBoaXR0aW5nIHlvdSBhbGwgb2YgdGhlIHN1ZGRlbi4gClRoZXNlIGFyZSBqdXN0IGEgcGFydCBvZiB0aGUgdmlvbGVuY2UgaGFwcGVuaW5nIHRoaXMgcGFzdCB3ZWVrIGluIEFtZXJpY2EuIFBlcHBlciBpcyB0YWxraW5nIHRvIGhpcyBzdGFmZiBhbmQgdGhleSBhcmUgdHJ5aW5nIHRvIHB1dCBhIGNhbXBhaWduIHBsYW4gdG9nZXRoZXIgd2hpY2ggd2lsbCBoZWxwIHVzIGFsbCBkZWFsIHdpdGggdmlvbGVuY2UuIFBlcHBlciBkb2VzbiBrbm93IHRoZSByZWFsIGFuc3dlciBidXQgd2UgaGF2ZSB0byBrZWVwIGluIHRoZSBmcm9udCBvZiBvdXIgbWluZCB0aGUgU2Vjb25kIEFtZW5kbWVudCBhcyB3ZWxsIGFzIHdoYXQgY2FuIGJlIGRvbmUgd2l0aCB0aGUgdXNlIG9mIGd1bnMgdG8ga2lsbC4KUHJvcyBDb25zIG9mIGEgTWFzc2FnZSBUaGVyYXB5IENhcmVlcgpIaXMgZW1wbG95ZXIgYXQgdGhlIHRpbWUgdG9sZCBoaW0gaXQgd2FzIGEgdG9wIHNjaG9vbCwgYW5kIGhlIHNhaWQgaGUgaG9wZXMgaXQgaXMgbm90IHRoZSBlbmQgb2YgdGhlIGxpbmUgZm9yIGEgcHJvZ3JhbSBoZSBlbmpveXMgYW5kIGluc3RydWN0b3JzIGhlIHJlc3BlY3RzIGdyZWF0bHkuIk15IGhlYXJ0IGlzIGludmVzdGVkIGluIEJDTVQsIGFuZCBJIHdvdWxkIGxpa2UgdG8gY29udGludWUgc3R1ZHlpbmcgd2l0aCBvdXIgdGVhY2hlcnMgYW5kIG91ciBzdGFmZiBpZiB0aGF0IGlzIGF0IGFsbCBwb3NzaWJsZSwiIEF2YWxsb25lIHNhaWQuTWNDdWlzdGlvbiBzdWdnZXN0ZWQgdGhhdCBtYXkgYmUgcG9zc2libGUuIlRoZSBjdXJyZW50IGFkbWluaXN0cmF0aW9uLCBzdGFmZiBhbmQgZmFjdWx0eSBhcmUgZXhwbG9yaW5nIHRoZSBwb3NzaWJpbGl0eSBvZiBzdGFydGluZyBhbm90aGVyIHNjaG9vbCwiIGhlIHNhaWQuIApBIHJlIGVsZWN0ZWQgTGliZXJhbCBnb3Zlcm5tZW50IHBsYW5zIHRvIGtlZXAgcG9rZXIgbWFjaGluZXMgaW4gcHVicyBhbmQgY2x1YnMgYnV0IHdvdWxkbiByZW5ldyB0aGUgbW9ub3BvbHkgbGljZW5zZSBoZWxkIGJ5IEZlZGVyYWwgR3JvdXAgb3ZlciBhbGwgdGhlIGVsZWN0cm9uaWMgZ2FtaW5nIG1hY2hpbmVzIGluIHRoZSBzdGF0ZSwgRmVkZXJhbCBHcm91cCwgd2hpY2ggYWxzbyBydW5zIHRoZSBzdGF0ZSB0d28gY2FzaW5vcywgaGFzIGxhdW5jaGVkIGFuIGFkdmVydGlzaW5nIGNhbXBhaWduIGFnYWluc3QgTGFib3IgcGxhbi4gQXMgdGhlIGZpcnN0IHdlZWsgb2Ygb2ZmaWNpYWwgY2FtcGFpZ25pbmcgY2FtZSB0byBhIGNsb3NlLCBNcyBXaGl0ZSBjb250aW51ZWQgaGVyIGhlYWx0aCBmb2N1cyBieSBhbm5vdW5jaW5nICQ1OSwwMDAgaW4geWVhcmx5IGZ1bmRpbmcgdG8gYSBicmVhc3QgY2FuY2VyIHN1cHBvcnQgc2VydmljZS4gCkhlIGV2ZW4gcG9pbnRlZCBvdXQgYSBzdXBwb3NlZCBzcG90IG9mIHRlbnNpb24gaW4gbXkgZ3JvaW4gYW5kIHdvcmtlZCBhdCBpdC4gCk9rYXksIHRoZXNlIHR3byBpbWFnZXMxIHRoZSBoZWFkIGFuZCBmb290IG9mIHRoaXMgcG9zdCBoYXZlIGFsbW9zdCBub3RoaW5nIHRvIGRvIHdpdGggTWFycyBhbmQgRnJhbmNpcyBHYWx0b24sIGV4Y2VwdCB0aGF0IHRoZXkgd2VyZSBhZHZlcnRpc2VtZW50cyBpbiB0aGUgaXNzdWUgb2YgTmF0dXJlIDEyLCAxODk2KSBpbiB3aGljaCBoaXMgbm90aWNlIG9uIHRoZSBwb3NzaWJpbGl0eSBvZiBleHRyYXRlcnJlc3RyaWFsIGNvbW11bmljYXRpb24gaXMgZGlzY3Vzc2VkLiBUaGF0LCBhbmQgdGhhdCB0aGUgYWRzIGFyZSB2ZXJ5IGVuZ2FnaW5nLCBhcyBpcyB0aGUgcmVwb3J0IG9uIEdhbHRvbi4gQWN0dWFsbHkgdGhpcyBpcyBhIHJlcG9ydCBvbiBhIEdhbHRvbiBwYXBlciB0aGF0IGFwcGVhcmVkIHR3byB3ZWVrcyBlYXJsaWVyIGluIHRoZSBGb3J0bmlnaHRseSBSZXZpZXcgKCJJbnRlbGxpZ2libGUgc2lnbmFscyBiZXR3ZWVuIG5laWdoYm91cmluZyBzdGFycyIsIHZvbHVtZSA2MCwgcHAgNjU3IDY0LCBOb3ZlbWJlciAxLCAxODk2KSwgYW5kIHNoYXJlZCB0byBhIG1vcmUgc2NpZW50aWZpY2FsbHkgY2VudGVyZWQgcmVhZGluZyBwb3B1bGF0aW9uIHRoYW4gdGhlIG90aGVyIGpvdXJuYWwuIApNYXliZSBzb21ldGhpbmcgbGlrZSBhIGNoYWluIHRoYXQgcHVsbHMgdGhlbSB0b3dhcmRzIHlvdS4gSGVyIHcgc2hvdWxkIGJlIGNoYW5nZWQgdG8gYnVpbGQgb24gdGhhdCBjYy4gTWF5YmUgaGF2ZSBpdCBoaXQgb25jZSBhbmQgY2F1c2UgYSBrbm9ja3VwIG9yIGEgc2xvdyBhbmQgdGhlbiBzaGUgZ2V0cyB0byB1c2UgaXQgYWdhaW4gZm9yIGFuIGFkZGl0aW9uYWwga25vY2t1cCBiZWZvcmUgdGhlIGZpbmFsIHVzZSBmb3IgYW5vdGhlciBrbm9jayB1cC4gCkxhdGVyIGluIHRoZSBnYW1lIHlvdSB3aWxsIG5lZWQgdG8gb3BlbiB1cCBhbmQgYmUgYSBiaXQgbW9yZSBhZ2dyZXNzaXZlLiAKdGhlIHJlYWwgY2hhbGxlbmdlIGlzIGhvdyB0byByZWFjaCB0aGVtCkFsbGVnZWQgb3duZXJzIGFuZCBtYW5hZ2VycyBmYWNlIGEgcmFuZ2Ugb2YgcHJvc3RpdHV0aW9uIHJlbGF0ZWQgb2ZmZW5zZXMuIApObyBuZWVkIHNwZW5kIGZhbWlseSBmdW5kcyBvbiB1biBuZWVkZWQgZ2lmdHMuLiAKVGhlIGdlbmVyYWwgcnVsZSB0byBnZXQgY3JlZGl0IGlzIHJlZ2lzdGVyaW5nIHRvIHNpdCB3aXRoIGFwcHJvcHJpYXRlIGZlZXMgYW5kIHNlbGVjdGluZyB0aGUgcGFja2FnZS4uIApQb3N0cyBmcm9tIE5FVyBVU0VSUyB3aWxsIGF1dG9tYXRpY2FsbHkgZ28gdG8gU1BBTS4gSXQgc2VlbXMgYSBsb3Qgb2YgcmVkZGl0b3JzIHVzZSB0aHJvd2F3YXkgYWNjb3VudHMgZm9yIHRoZWlyIHRheCBxdWVzdGlvbnMsIHNvIGlmIHlvdSBkb24gc2VlIHlvdXIgcG9zdCByaWdodCBhd2F5LCB0aGlzIGlzIHdoeS4gSWYgeW91ciBwb3N0IGRvZXNuIHNob3cgYWZ0ZXIgNiBob3VycywgbWVzc2FnZSB0aGUgbW9kcy4gCldhbnQgdG8gYmUgdGhlIGdhdGVrZWVwZXIuWW91IHdhbnQgRGVlIE1hcmdvLCBKb3NlIFJvZHJpZ3VleiwgVGVkIEhvdWdodG9uLCBhbmQgc28gb24sIHRvIGdvIHRocm91Z2ggeW91IGZpcnN0IGJlZm9yZSB0aGV5IGNhbiBnZXQgdG8gRXNjb2Jhci5UaGlzIGlzIHByb2JhYmx5IHRoZSBiZXN0IG1vdmUgZm9yIHlvdS4gZ290dGEgYmV0dGVyIHBlcnNvbiBpbiBtaW5kLlN1c2llLiBCeXJkLiBzaGUgbGl2ZXMgaW4gdGhlIGRpc3RyaWN0IG9yIG5vdCBpcyBpbW1hdGVyaWFsLiBhaW4gbGlrZSB0aGUgQ2hhaXIgb2YgRGVtb2NyYXRpYyBQYXJ0eSB3b3VsZCB3YW50IHRvIGdldCBzaWRld2F5cyB3aXRoIHRoZSBDb25ncmVzc3dvbWFuIGVsZWN0J3MgQkZGLlNvIHdoeSBCeXJkP0V2ZW4gdGhvdWdoIEJ5cmQgd291bGQgYmUgZnJlc2htYW4gaW4gdGhlIERlbGVnYXRpb24sIHdpdGggaGVyIHBlcnNvbmFsaXR5LCBtb3JlIGltcG9ydGFudGx5IGJlY2F1c2Ugb2YgaGVyIEJGRiwgc2hlIHdvdWxkIGhhdmUgdGhhdCBEZWxlZ2F0aW9uIGJ5IHRoZSBiYWxscy4gCklzIEdsb2JhbCBQb2tlciB0aGUgb25seSBnYW1pbmcgY29tcGFueSB0byB1c2Ugc3dlZXBzdGFrZXMgcHJpemVzPwpTbyBTd2VkZW4gbWF5IGJlY29tZSB0aGUgZmlyc3QgY291bnRyeSB3aGVyZSBpdHMgY2l0aXplbnMgbWF5IGhhdmUgdG8gYWNjZXB0IG5lZ2F0aXZlIGludGVyZXN0IHJhdGVzIChwcm9iYWJseSBpbiB0aGUgZm9ybSBvZiBoaWdoZXIgYmFuayBjaGFyZ2VzIG9yIGZlZXMpIG9yIGJlIGZvcmNlZCB0byBzcGVuZCB0aGVpciBtb25leSBpbiBvcmRlciB0byBpdCBmcm9tIHRob3NlIHJhdGVzLgpQZXJoYXBzIHRoZSBvbmx5ICJzdXJwcmlzZSIgaXMgaG93IG1hbnkgQW1lcmljYW5zIGRvbiBnZXQgaXQgIGRvbiBnZXQgdGhhdCB3ZSBjYW4gc3BlbmQgYWxsIG91ciBtb25leSBvbiBndW5zIGFuZCBzdGlsbCBoYXZlIGFueSBsZWZ0IG92ZXIgZm9yICJidXR0ZXIuIiBpZiB0aGUgIldhciBpcyBNYWtpbmcgWW91IFBvb3IiIGJpbGwgcGFzc2VkLCB3ZSBzdGlsbCBoYXZlIHBsZW50eSBvZiAgYWN0dWFsbHkgd2F5IHRvbyBtYW55ICBndW5zIGFuZCBhIHdlZSBiaXQgb2YgYnV0dGVyLiAKVGhpcyBhbGxvd3MgeW91IHRvIGhhdmUgYSBoaWdoIGRlZ3JlZSBvZiB2aXNpYmlsaXR5IHRvIHlvdXIgY2hpcHMsIGFuZCB0aGV5IHdpbGwgaG91c2UgdGhlbSBxdWl0ZSB3ZWxsLiAKU29tZW9uZSBteSBhZ2UgZHJpdmluZyB0aGUgRW50ZXJwcmlzZT8gRlVDSyBZRUEhClVubGVzcyB5b3Ugc3BlY2lmaWNhbGx5IG5lZWQgV290QyBpbnRlbGxlY3R1YWwgcHJvcGVydHkgZm9yIHlvdXIgcHJvZHVjdCwgSSB3b3VsZCBsb29rIGVsc2V3aGVyZS5Bc3N1bWluZyB0aGF0IHlvdSBzdGlsbCBnb2luZyB0byBwdWJsaXNoIG9uIERNc0d1aWxkLCBkb24gZXhwZWN0IHRvIG1ha2UgYSB0b24gb2YgbW9uZXkuIFZlcnkgZmV3IHByb2R1Y3RzIGdldCBzaWduaWZpY2FudCB0cmFjdGlvbiwgYW5kIG9ubHkgMTIgaGF2ZSBicm9rZW4gdGhlIDUsMDAwKyBzYWxlcyBtYXJrIChBZGFtYW50aW5lIG9uIHRoZSBtZXRhbHMgcGFnZSkuIApGaXJzdCwgbWFrZSBzdXJlIHRoYXQgeW91IGNvbXBsZXRlbHkgdW5kZXJzdGFuZCBob3cgdGhlIGJvbnVzZXMgd29yay4gCkkgY2FycnkgaXQgYmVjYXVzZSBJIGxpa2UgaXQgbW9yZSB0aGFuIEkgZGlzbGlrZSBjYXJyeWluZyB0aGF0IGV4dHJhIHBvdW5kLiAKV2UgaGF2ZSB0byB3YXRjaCBvd25lcnMgd2FsayBvdXQgd2hlbiB0aGV5IGZpbmQgb3V0IHRoZXkgaGF2ZSB0byBwYXkgZm9yIGFuIGV4YW0gYmVmb3JlIHdlIHdpbGwgYWdyZWUgdG8gZXV0aGFuaXplIHRoZWlyIGNhdCB0aGF0IHdlIG5ldmVyIHNlZW4gYmVmb3JlLiAKVGhlIGNvbmNlcHQgb2Ygb25saW5lIGZyZWUgc2xvdHMgbWFkZSBpdCBjb25zaWRlcmFibHkgc3VpdGFibGUgZm9yIHRoZSBwbGF5ZXJzIHRvIGVuam95IHRoZWlyIGZhdm9yaXRlIGFjdGlvbi4gT25saW5lIGZyZWUgc2xvdHMgZW5hYmxlZCB1c2VyIHRvIHBsYXkgdGhlIGdhbWUgd2l0aG91dCBwYXlpbmcgYW55IGV4dHJhIGNoYXJnZXMuIFRoZXNlIGdhbWVzIGFyZSBwdXJlbHkgZm9yIGZ1biBhbmQgZG8gbm90IGludm9sdmUgYW55IG1vbmV5IHRoYXQgeW91IG5lZWQgdG8gcGF5LiAKT0ssIHRoYXQgZW5jb3VyYWdlcyBwZW9wbGUgdG8gdXNlIG1vcmUgZW5lcmd5LiAKVWJpc29mdCBnYW1lcyBvbiBTdGVhbSBhcmUgbGl0dGxlIG1vcmUgdGhhbiBsYXVuY2hlcnMgdG8gdGhlIHVQbGF5IGluc3RhbGwgbG9jYXRpb24uIFlvdSBjYW4gbGF1bmNoIGEgVWJpc29mdCBnYW1lIG9uIFN0ZWFtIHdpdGhvdXQgdVBsYXksIGFuZCBETENzL2RpZ2l0YWwgY29udGVudCBwdXJjaGFzZWQgb24gU3RlYW0gbmVlZHMgdG8gYmUgdmFsaWRhdGVkIGFuZCBhY3RpdmF0ZWQgZm9yIG93bmVyc2hpcCBiZWZvcmUgaXQgY2FuIGJlIGFjY2Vzc2VkIGluIGdhbWUuIE5vd2FkYXlzIGl0IGltcHJvdmVkIGVub3VnaCB3aGVyZSBpdCBjYW4gaGFwcGVuIGF1dG9tYXRpY2FsbHkgYnV0IHVQbGF5IHdpbGwgcHJvdmlkZSBhIHBvcCB1cCBlc3NlbnRpYWxseSBzYXlpbmcgdGhhdCBhIG5ldyBETEMgaGFzIGJlZW4gZm91bmQgdGhyb3VnaCBTdGVhbSBhbmQgaWYgeW91IHdvdWxkIGxpa2UgdG8gYWN0aXZhdGUgaXQgdXNlLiBIb3dldmVyIHRoYXQgd2FzbiB0aGUgY2FzZSBiYWNrIGVhcmx5IG9uIHdpdGggdGhlIGZpcnN0IERpdmlzaW9uIGFuZCBETEMgb3duZXJzaGlwIHdhcyBoYXZpbmcgaXNzdWVzIHVubG9ja2luZyBhbmQgdmVyaWZ5aW5nLgpQcm9mZXNzaW9uYWwgcGlja3BvY2tldHMgd29yayBJbiBwYWlycyBhbmQgZmluZCB0aGVpciB2aWN0aW1zIGluIGNyb3dkZWQgc3RvcmVzIHRoaXMgdGltZSBvZiB5ZWFyLCBwb2xpY2Ugc2F5LiAKV2llIHNhZ3RlIGVpbnN0IFBpbmsgUGFudGhlciBpbSBWb3JhYmVuZHByb2dyYW1tOiBrb21tIHdpZWRlciwga2VpbmUgRnJhZ2UhIFdpciBhdWNoLiBEYW5uIGFiZXIgc3VjaGVuIHdpciB1bnMgZWluZSBVbnRlcmt1bmZ0IHdlaXRhYiB2b24gZGVyIEhhZmVuc3RhZHQuIFp1bSBCZWlzcGllbCBpbiBQYW5vcm1vcywgZWluZXIgQmFkZWJ1Y2h0IGNhLiAxMSBrbSB2b24gU2tvcGVsb3MgU3RhZHQgZW50ZmVybnQsIG1pdCBlaW5lciBrbGVpbmVuIEF1c3dhaGwgdm9uIEhvdGVscyB1bmQgUmVzdGF1cmFudHMuIEVzIHNlaSBkZW5uLCBiaXMgZGFoaW4gc2NoYWZmdCBlcyBlaW4gSGVyc3RlbGxlciBPaHJzdCBmIEZyYXVlbm9ocmVuIHp1IGVudHdpY2tlbG4uIERhbm4gd2FnZW4gd2lyIHVucyB2aWVsbGVpY2h0IGF1Y2ggd2llZGVyIG1hbCBpbnMgWmVudHJ1bS4gRGVubiBzY2ggaXN0IGVzIGRvcnQgamEgc2Nob24hCkRvYyBzYWlkIGhlIG5ldmVyIHNlZW4gYW55dGhpbmcgbGlrZSBpdCBpbiBoaXMgMjUgeWVhcnMgb2YgZXhwZXJpZW5jZS4gU2FpZCBpIHdhcyBhIG9uZSBpbiBhIG1pbGxpb24gY2FzZSBhbmQgaWYgaSBoYWQgdGFrZW4gYSBkYXkgdG8gY29tZSBpbiwgY2hhbmNlcyB3ZXJlIGhpZ2ggdGhhdCBpIHdvdWxkIGJlIGJsaW5kLi4gCkkgc28gc29ycnkgeW91ciBtb20gbWFkZSBpdCB0cmF1bWF0aWMgZm9yIHlvdSwgYW5kIHlvdSwgbXkgZnJpZW5kLCBhcmUgZW50aXRsZWQgdG8gaGF2ZSBXSEFURVZFUiBGRUVMSU5HUyBZT1UgRlVDS0lORyBXQU5UIGFib3V0IHRoZSBldmVudCwgYWJvdXQgeW91ciBtb20sIGFuZCBmcmFua2x5LCBhYm91dCBBTllUSElORy4gRm9yZ2V0IHRoZSBoZWlub3VzIGFudXNlcy4gWW91IGRvIHlvdS4gCkF0IHRoYXQgcG9pbnQsIGEgc2VyaW91cyBjb252ZXJzYXRpb24gd2l0aCB5b3VyIHBhcmVudHMgaXMgbmVlZGVkLiBJZiB0aGV5IGFyZW4ndCBnb2luZyB0byBsb29rIGFmdGVyIGhlciB3ZWxsYmVpbmcsIGl0J3MgZ29pbmcgdG8gdGFrZSBtb3JlIHN1cHBvcnQgYW5kIHN0cmF0ZWdpemluZyBvbiB5b3VyIHBhcnQgdG8gZ2V0IHlvdXIgc2lzdGVyIGhlbHAuIApBaCwgc28gdmVnYW5zIG9ubHkgYnV5IGZyb20gbG9jYWwgdmVnYW4gZmFybWVycyBhbmQgZG9uIHV0aWxpemUgY3JvcHMgcHJvZHVjZWQgZnJvbSBpbmR1c3RyaWFsIGFncmljdWx0dXJlLCB0aGVyZWZvcmUga2VlcGluZyB0aGVpciBoYW5kcyBjbGVhbiBvZiB0aGUgcHJpbWFyeSByZWFzb24gYW5pbWFscyBhcmUgZW5kYW5nZXJlZC9leHRpbmN0LiAKSSBnZW5lcmFsbHkgcGxheSBhdCBMdWNreSBDaGFuY2VzIGFuZCBPYWtzLiBMdWNreSBDaGFuY2VzLCBpcyAxNSBtaW5zIGZyb20gbXkgaG91c2UsIE9ha3MgaXMgMTUgdG9vLCBidXQgc2luY2UgaXQncyBpbiBPYWtsYW5kIGl0J3MgaGFyZGVyIHRvIGdldCB0b28uIApIb3BlIGxvb2tzIGZvcndhcmQsIGJ1dCBpdCBkcmF3cyBpdHMgZW5lcmdpZXMgZnJvbSB0aGUgcGFzdCwgZnJvbSBrbm93aW5nIGhpc3RvcmllcywgaW5jbHVkaW5nIG91ciB2aWN0b3JpZXMsIGFuZCB0aGVpciBjb21wbGV4aXRpZXMgYW5kIGltcGVyZmVjdGlvbnMuIApUaGUgcmVhc29uIGlzIGJlY2F1c2UgcG9rZXIgaXMgYSBnYW1lIG9mIHByb2JhYmlsaXR5IGFuZCBvZGRzLiAKUmVnYXJkaW5nIHdoYXQgc29tZW9uZSBzYWlkIHRoYXQgeW91IGNhbiBhbHNvIGJ1eSB0aGVtIGZyb20gc29tZSB3ZWJzaXRlcywgeWVzIGl0J3MgdHJ1ZSBidXQgdGhlcmUgYXJlIHNvbWUgcHJvcyBhbmQgY29ucyB0byB0aGlzLiAKV2hhdCBpcyBhIHNlcmlhbCBub21iZXIgZm9yIGdvdmVybm9yIG9mIHBva2VyIDIKQWx3YXlzIG1haW50YWluIHRoYXQgcHJlbWl1bSBkb2VzbiBzY3JlYW0sIGhlIHNhaWQuIEhhcyB0aGUgY29uZmlkZW5jZSB0byBzcGVhayBhIGxpdHRsZSBtb3JlIHF1aWV0bHkuIApTbHVzaCBpY2UgY29udGludWVzIHRvIG1ha2UgZmlzaGluZyBhIGJpdCBtb3JlIGRpZmZpY3VsdC4gT25jZSB0aGUgdGVtcGVyYXR1cmUgbW9kZXJhdGVzIGFnYWluLCB3ZSBjb3VsZCBzZWUgc29tZSBvZiB0aGUgYmVzdCBmaXNoaW5nIG9mIHRoZSB5ZWFyIGFzIHRoZSBwcmUgc3Bhd24gc3RlZWxoZWFkIHdpbGwgYmUgcHJlcGFyaW5nIGZvciB0aGVpciBzcGF3biBieSBmYXR0ZW5pbmcgdXAgb24gYWxtb3N0IGFueXRoaW5nIGluY2x1ZGluZyBsYXJnZSBmbGVzaCBmbGllcyB0aGF0IHNlZW0gdG8gd29yayB3ZWxsIHRoaXMgdGltZSBvZiB5ZWFyLiBUaGUgd2F0ZXIgbGV2ZWwgd2lsbCByZW1haW4gYXQgMjg1IGNmcyB1bnRpbCB3ZSBnZXQgc29tZSBydW4gb2ZmIGZyb20gc25vdyBtZWx0IG9yIHJhaW4uLiAKWW91IGFyZSBub3QgYWxvbmUgaW4gdGhpcyBleHBlcmllbmNlLCBidXQgdW5mb3J0dW5hdGVseSwgaXQgaGFyZCBmb3IgdGhvc2Ugd2hvIGhhdmVuIGV4cGVyaWVuY2VkIGl0IHRvIHVuZGVyc3RhbmQuIERvbiBiZSBhZnJhaWQgdG8gYXNrIGZvciBoZWxwLiAKTWF5IHJlbWVtYmVyIE5hdHVyZSBQYXRoIHdoZW4gaXQgYmVnYW4gaW4gdGhlIGJhY2sgb2YgTGlmZXN0cmVhbSBSZXN0YXVyYW50IGF0IDR0aCBBdmVudWUgYW5kIEJ1cnJhcmQgU3RyZWV0IGluIDE5ODUuLiAKWW91IG1pZ2h0IGFsc28gd2FudCB0byByaWIgY2FwIHRoZSB0b3AgYW5kIGJvdHRvbSBzdXJmYWNlcyB0byBoZWxwIHByb3ZpZGUgYSBiZXR0ZXIgYm9uZGluZyBzdXJmYWNlIGZvciB0aGUgbW9ub2tvdGUsIGJ1dCBrZWVwIGluIG1pbmQgaWYgeW91IGRvaW5nIHRoaXMgdGhhdCBpdCB3aWxsIGFsdGVyIHlvdXIgYWlyZm9pbCBwcm9maWxlLCBzbyB5b3UgaGF2ZSB0byBhZGp1c3QgdGhlIHJpYiBzaXppbmcgYWNjb3JkaW5nbHkuIApXaGVuIFJ1Y2ggd2FzIGxlYXJuaW5nIGFib3V0IGNvcnBvcmF0ZSBjdWx0dXJlIGluIHVuaXZlcnNpdHksIGhlIGRpZG4ndCB0aGluayBtdWNoIG9mIGl0LiAiSSB0aG91Z2h0IHRoYXQgYSBsb3Qgb2YgY29tcGFuaWVzIGhhZCBwdXQgYSBsb3Qgb2Ygd29yZHMgb24gcGFwZXIsIGJ1dCBpdCBkaWRuJ3QgcmVhbGx5IG1lYW4gbXVjaCwiIGhlIHNheXMuIEhvd2V2ZXIsIGl0IHdhcyBpbW1lZGlhdGVseSBjbGVhciB0byBoaW0gdGhhdCB0aGF0IHdhc24ndCB0aGUgY2FzZSBhdCBMYWJhdHQuICJFdmVyeW9uZSBoZXJlIGlzIHBhc3Npb25hdGUgYWJvdXQgdGhlIGNvbXBhbnksIGFib3V0IHJlc3VsdHMsIiBoZSBhZGRzLiAiTWVyaXRvY3JhY3kgaXMgZXh0cmVtZWx5IGltcG9ydGFudCwgYW5kIGl0J3MgYWN0ZWQgdXBvbi4gWW91IHNlZSBpdCBldmVyeSBkYXkuIgpUaGUgbW9zdCBwb3dlcmZ1bCB3ZWFwb24gaW4gdGhlIHdvcmxkIGF0IHRoZSB0aW1lIHdhcyBnb2luZyB0byBiZSB1c2VkIHRvIHNlZSBpZiBhIHZpdGFsIGFzcGVjdCBvZiBvdXIgc3Vydml2YWwgY291bGQgYmUgbWVzc2VkIHdpdGguLiAKWW91ciBiaWcgbWVuIGFyZSBhbmNob3JpbmcgeW91ciBibG9ja3MgYW5kIGZnLCBidXQgdGhleSBhcmUgaG9ycmlkIGFzc2lzdCBhc3NldHMuIEluIGdlbmVyYWwsIGFzc2lzdHMgYW5kIFRPLCBhcyB3ZWxsIGFzIGFzc2lzdHMgYW5kIEZHL0Jsb2NrcyBhcmUgbmVnYXRpdmVseSBjb3JyZWxhdGVkLiAKRGFtbiEgSSBoYXZlIGFuIGV5ZSBzdG9yeSB0b28uIFNvIG9uZSBkYXkgdGhlcmUgd2FzIGEgc3VkZGVuIHdpbmRzdG9ybSB3aGlsZSBpIHdhcyBpbiBhbiBvcGVuIHBhcmtpbmcgbG90IG9uIHRoZSBvdXRza2lydHMgb2YgYSBjaXR5LCBhIGxlYWYgZmxldyByaWdodCBpbnRvIG15IGV5ZS4gQW5kIGl0IGltbWVkaWF0ZWx5IHN0YXJ0ZWQgdG8gaHVydC4gSSBzb21laG93IGRyb3ZlIGhvbWUgYW5kIG15IGV5ZSB3YXMgY29uc3RhbnRseSBodXJ0aW5nLCBpIHdhc2hlZCBpdCBhIGZldyB0aW1lcywgZGlkbiB3b3JrLiBJIHN0YXJ0ZWQgdG8gZmVlbCBtb3ZlbWVudCBpbnNpZGUgbXkgZXllIGJ1dCBjb3VsZG4gc2VlIGFueXRoaW5nIGluIHRoZSBtaXJyb3IuIEkgd2FzIGNvbnZpbmNlZCBpIHdhc24ganVzdCAic2VlaW5nIHRoaW5ncyIuIFRoZW4gZmluYWxseSBteSBtb20gdG9vayBtZSB0byBhbiBleWUgc3VyZ2Vvbi4gV2VudCBpbiBhcyBhbiBlbWVyZ2VuY3ksIHRoZSBkb2MgZXhhbWluZWQgYW5kIHJ1c2hlZCBtZSB0byBhbiBPUiBzYXlpbmcgaSBoYWQgbGl2aW5nIG1pY3JvIG9yZ2FuaXNtcyBpbnNpZGUgbXkgZXllLiBUb29rIGFib3V0IDIwIG1pbnV0ZXMgYW5kIHRoZXkgcmVtb3ZlZCBhbGwgRk9VUlRFRU4gb2YgdGhlbS4gQUxJVkUhIEdvdCBhIHBhdGNoIGxpa2UgYSBwaXJhdGUgdGhhdCBpIGhhZCB0byB3ZWFyIGZvciBhIGZldyBkYXlzLiBEb2Mgc2FpZCBoZSBuZXZlciBzZWVuIGFueXRoaW5nIGxpa2UgaXQgaW4gaGlzIDI1IHllYXJzIG9mIGV4cGVyaWVuY2UuIFNhaWQgaSB3YXMgYSBvbmUgaW4gYSBtaWxsaW9uIGNhc2UgYW5kIGlmIGkgaGFkIHRha2VuIGEgZGF5IHRvIGNvbWUgaW4sIGNoYW5jZXMgd2VyZSBoaWdoIHRoYXQgaSB3b3VsZCBiZSBibGluZC4KVGhlIE1vbmdlbGxpIEF3YXJkIGZvciBFeGNlbGxlbmNlIGluIENpdmljIEVuZ2FnZW1lbnQgaXMgbmFtZWQgYWZ0ZXIgQW50b2luZXR0ZSBNb25nZWxsaSwgdGhlIGZvdW5kaW5nIEV4ZWN1dGl2ZSBEaXJlY3RvciBvZiB0aGUgVUNMQSBWb2x1bnRlZXIgQ2VudGVyLCBpbiBob25vciBvZiBoZXIgbGVhZGVyc2hpcCwgdmlzaW9uLCBhbmQgc2VydmljZS4gTXMuIApUaGlzIHdpbGwgaGVscCB0byBob2xkIHRoZSBqZXdlbHJ5IGRpY2UgaW4gcGxhY2UuIApJZiB0aGV5IGRpZCBpdCBmb3Igb25lLCB0aGV5IGhhdmUgdG8gZG8gaXQgZm9yIGFsbCwgYW5kIGtlZXAgdXAgd2l0aCBhbGwgdGhlIHVwZGF0ZXMuIApBbHNvLCBvbiBhIGNvbXBsZXRlbHkgdW5yZWxhdGVkIHNpZGUgbm90ZS4gSSBqdXN0IHdhbnRlZCB0byBzYXkgdGhhdCB5b3UuIApFeGNsdXNpdmUgb25saW5lIHF1YWxpZmllcnMgZm9yIFdQVDUwMCBMYXMgVmVnYXMgb24gQWRkYTUyCkl0IGJlZW4geWVhcnMuIApKciBOdXRyaXRpb25hbCBCaW9jaGVtaXN0cnkgMjAxMgpXZSBoYXZlIGEgemVybyB0b2xlcmFuY2UgcG9saWN5LiAKWWVhaCBtYXRlIEkgZG8uIApBcyBsdW5jaCBmaW5pc2hlcyBhbGwgdGhlIGRldGVjdGl2ZSBzIHBob25lcyByaW5nIGluIHVuaXNvbiwgaW5kaWNhdGluZyB0aHJvdWdoIGEgdGV4dCBtZXNzYWdlIHRoYXQgdGhleSBhcmUgZXhwZWN0ZWQgaW4gdGhlIHNtYWxsIGNvbmZlcmVuY2Ugcm9vbSBpbiAxMCBtaW51dGVzLiBBcyBldmVyeW9uZSBsZWF2ZXMgYSBsYXJnZSBoZWF2eSBib25lZCBUZSBNYXJvYW4gYnVzIGJveSBiZWdpbnMgY2xlYW5pbmcgdGhlIHRhYmxlLiAKQXNrIGFueSB0ZWFjaGVyIGhvdyBoYXJkIGl0IGlzIHRvIGdldCBjaGlsZHJlbiB0byBkbyB0aGVpciBob21ld29yayBvciBzaG93IHVwIHRvIGNsYXNzIG9uIHRpbWUuIApTbyB3aHkgaXMgdGhhdCBpbXBvcnRhbnQ/IFdlbGwsIGFzIG1lbnRpb25lZCwgYmV0cyBhcmUgYSBncmVhdCB3YXkgdG8gaW50aW1pZGF0ZSBhIGxlc3MgY29uZmlkZW50IG9wcG9uZW50LCBwcm92aWRpbmcgYWxsIHRoZSB2YXJpZWQgYWR2YW50YWdlcyB0aGF0IGludGltaWRhdGlvbiBzb21ldGltZXMgb2ZmZXJzLiAKQ29RMTAgU3ludGhlc2lzIERlY2xpbmVzIFdpdGggQWdlCkkgY2hhbGxlbmdlIHBlb3BsZSB3aG8gYXNzZXJ0IHRoYXQgaXQgd2lsbCBiZSBzdWJzdGFudGlhbGx5IGhvdHRlci4gCldlZWtzIGFmdGVyIHRoZSBlbmQgb2YgNDZ0aCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIsIGF0IGxlYXN0IHVudGlsIE5vdmVtYmVyLCB0aGUgV1NPUCBzdGFmZiBhcmUgdGFraW5nIHRoZWlyIHNob3cgb24gcm9hZCBmb3IgdGhlIGZpbmFsIENpcmN1aXQgZXZlbnQgb2YgdGhlIDIwMTQgMTUgc2Vhc29uLiBDaGVyb2tlZSwgTm9ydGggQ2Fyb2xpbmEgcGxheXMgaG9zdCB0byB0aGUgV1NPUCBOYXRpb25hbCBDaGFtcGlvbnNoaXAsIHdoZXJlIHRoZSBzZWFzb24ncyBiZXN0IHBsYXllcnMgb24gdGhlIFdTT1AgQ2lyY3VpdCB3aWxsIGdvIGhlYWQgdG8gaGVhZCB3aXRoIHNvbWUgb2YgdGhlIHRvcCBuYW1lcyBpbiB0aGUgZ2FtZSB3aXRoIHRoZSB3aW5uZXIgdGFraW5nIGhvbWUgYW4gb2ZmaWNpYWwgV1NPUCBnb2xkIGJyYWNlbGV0LgozNykgTm8gV2F5IC4gQXNzdW1lZG91dHRha2UgZnJvbSAiVGhlIEZhbWUgTW9ucyBlci4iIENhbiBiZSBmb3VuZCBvbiBZb3V0dWJlLiAKRm9yIGluc3RhbmNlLCBJIGdldHRpbmcgc2hpdCByaWdodCBub3cgYmVjYXVzZSBhIGN1c3RvbWVyIHBhaWQgZm9yIDkgNSBpbnN0YWxsYXRpb24gc2VydmljZXMgYW5kIEkgcHVzaGluZyBiYWNrIGFib3V0IGRvaW5nIHRoaW5ncyB3aXRoIFpFUk8gcmlzayB0byBiZSBwZXJmb3JtZWQgb24gdGhlIHdlZWtlbmRzLllvdSBrbm93LCB3aGVuIHlvdSB0YWxrIHRvIHlvdXIgRG9jdG9yIG9yIExhd3llciwgeW91IGRvbiBqdXN0IHNpdCB0aGVyZSBhbmQgc2F5LCB3ZWxsLCBpIG9ubHkgZ290IHRpbWUgb24gU3VuZGF5IGFmdGVyIGNodXJjaCBzbyB5b3UgbXVzdCBjb25mb3JtIHRvIG15IG9wZXJhdGlvbnMuIApXaGVuIEkgY29tZSBiYWNrIHRvIHZpc2l0IGZhbWlseSBJIHNlZSBob3cgdGhlIHRyYWZmaWMgaGFzIG9ubHkgZ290dGVuIHdvcnNlLiBZb3UgY2FuIGdldCBhbnl3aGVyZSBpbiBhIGRlY2VudCBhbW91bnQgb2YgdGltZS4gSSAyNSBpcyBhIG5pZ2h0bWFyZSBhdCBhbGwgdGltZXMgb2YgZGF5IG5vdy4gCkkgdGhpbmsgU3RpcGUgaXMgYSB0b3VnaGVyIG1hdGNoIHVwIGZvciBKb24gbGV0IGFsb25lIGZhciByaXNraWVyIHdpdGggbGVzcyByZXdhcmQuIFNpbmNlIGhlIGFscmVhZHkgYmxldyBhcGFydCBEQyBwc3ljaGUuIEkgZG9uIHRoaW5rIERDIGV2ZW4gdGhpbmtzIGhlIGNhbiBiZWF0IGhpbSBhdCB0aGlzIHBvaW50LCBJIHdvdWxkIHdhaXQgZm9yIHRoZSB3aW5uZXIgb2YgQnJvY2svREMgaWYgSSB3YXMgSm9uLiAKSXQncyBhIGRhenpsaW5nIGdhbWJpdCwgZmlsbWVkIHdpdGggY29uZmlkZW5jZSBhbmQgY3JhZnQsIGFuZCBpdCB1bmRlcnNjb3JlcyBob3cgZXZlcnlvbmUgaW4gdGhpcyBzb2NpZXR5IGlzIGxvb2tpbmcgYXQgYW5kIHBlcmZvcm1pbmcgZm9yIGV2ZXJ5b25lIGVsc2UuIApJIHBpY2sgdXAgb24gcmVkIGZsYWdzIHRoYXQgdGhleSBkbyBub3QsIGFuZCB3aGVuIHRoZXkgZ28gYWhlYWQgYW5kIHJlY3J1aXQgdGhlIHBlcnNvbiBhbnl3YXkgSSBub3JtYWxseSB0dXJuIG91dCB0byBiZSByaWdodC4uIApJdCB3b3VsZCB0aGVuIG1vdmUgdG8gdGhlIG5leHQgcGxheWVyIHdobyB3b3VsZCBlaXRoZXIgInNlZSIgdGhpcyBhbW91bnQgKGFuZCB0aHVzIGFkZCBpbiBoZXIgb3duIGZpdmVyKSwgInJhaXNlIiBpdCAod2hpY2ggd291bGQgYmUgdG9zc2luZyBpbiB0aGF0ICQ1IGFuZCBhbm90aGVyICQ1IGZvciB0aGUgcmFpc2UpLCBvciAiZm9sZCIgKHdoaWNoIGlzIHdoZXJlIHlvdSBsYXkgeW91ciBjYXJkcyBkb3duIGFuZCBsb29rIGF0IGV2ZXJ5b25lIGVsc2UgZXhwZWN0YW50bHkgYmVjYXVzZSB5b3UncmUgZG9uZSBmb3IgdGhhdCByb3VuZCBhbmQgeW91IGRvbid0IHRoaW5rIHlvdSdyZSBnb2luZyB0byB3aW4uIE9yIHlvdSBqdXN0IHRoaW5rIHRoYXQgJDUgaXMgYSBiaXQgdG9vIG11Y2ggdG8gcmlzaywgYmVpbmcgYSBjb25zZXJ2YXRpdmUgaGlnaCByb2xsZXIgd2hvJ3Mgd2lsbGluZyB0byBnaXZlIHVwIHRoZSBhbnRlIHlvdSBwdXQgaW4gdGhlIHBvdCkuIFlvdSBrZWVwIGdvaW5nIGFyb3VuZCB0aGUgdGFibGUgdW50aWwgZXZlcnlvbmUgaGFzIGEgY2hhbmNlIHRvIHNlZSwgcmFpc2Ugb3IgZm9sZCwgYW5kIGlmIHRoZXJlIGFyZSByYWlzZXMgdGhlbiBlYWNoIHBlcnNvbiB3aG8gd2FudHMgdG8gc3RheSBpbiBtdXN0IG1hdGNoIHRoZSBiZXRzIG1hZGUuLiAKR2VuZXJhdGluZyBzdWJzdGFudGlhbCBjYXBpdGFsIGZvciB0aGUga2lkcyBmb3IgdGhlaXIgZWR1Y2F0aW9uIGFuZCBsYXRlciBhICQzMCwwMDAgZ2lmdCBpcyB3aXRoaW4gdGhlaXIgbWVhbnMuIFRoZXkgY29udHJpYnV0ZSAkMjAwIHBlciBtb250aCB0byB0aGUgUkVTUCBhbmQgcmVjZWl2ZSB0aGUgMjAgcGVyIGNlbnQgQ2FuYWRhIEVkdWNhdGlvbiBTYXZpbmdzIEdyYW50LCAkNDgwIHBlciB5ZWFyLCBmb3IgdG90YWwgZ3Jvd3RoIG9mICQyLDg4MCBwZXIgeWVhci4gV2hlbiBlYWNoIGNoaWxkIGlzIDE3LCB0aGUgZnVuZCB3aWxsIGhhdmUgYSBiYWxhbmNlIG9mICQxMTIsNjEwLiBUaGF0IHdpbGwgc3VwcG9ydCBlYWNoIHdpdGggYW4gYXBwcm94aW1hdGVseSAkNTYsMDAwIGtpdHR5IGZvciBwb3N0IHNlY29uZGFyeSB0dWl0aW9uIGFuZCBib29rcyBmb3IgZm91ciB5ZWFycy4gSGUgYWRkcyAkMSwyNTAgcGVyIG1vbnRoLiBJZiBoZSBtYWludGFpbnMgdGhhdCByYXRlIG9mIGNvbnRyaWJ1dGlvbiwgdGhlbiBpbiAxNiB5ZWFycyB3aGVuIGhlIGlzIDU1IHRoZSBwbGFuLCBncm93aW5nIGF0IDMgcGVyIGNlbnQgcGVyIHllYXIgYWZ0ZXIgaW5mbGF0aW9uLCB3b3VsZCBoYXZlIGEgdmFsdWUgb2YgJDcwMiwzMzAuIFRoYXQgY2FwaXRhbCBjb3VsZCBnZW5lcmF0ZSAkMjksNTAwIHBlciB5ZWFyIHByZSB0YXggaW5jb21lIGZvciB0aGUgbmV4dCA0MCB5ZWFycy4gS2F0ZSBoYXMgYW4gUlJTUCB3aXRoIGEgcHJlc2VudCB2YWx1ZSBvZiAkNzYsOTI1LiBJZiBzaGUgY29udGludWVzIHRvIGFkZCAkMSwyNTAgcGVyIG1vbnRoIGZvciB0aGUgbmV4dCAxNiB5ZWFycywgdGhlIGFjY291bnQgd291bGQgZ3JvdyB0byAkNDM0LDg2NCBhdCBoZXIgYWdlIDUzLgpJIGRvbiBzZWUgZWl0aGVyIG9mIHRoZXNlIG9wdGlvbnMgZXZlciBoYXBwZW5pbmcuIEluc3RlYWQsIEkgdGhpbmsgeW91IG5lZWQgYSBKZXdpc2ggaG9tZWxhbmQgYW5kIGEgUGFsZXN0aW5pYW4gaG9tZWxhbmQsIHdoZXJlIHRoZSByaWdodHMgb2YgbWlub3JpdGllcyBpbiBlYWNoIG9mIHRoZXNlIGFyZWFzIGlzIGd1YXJhbnRlZWQuLiAKQSBoYW5kb3V0IHBpY3R1cmUgcmVjZWl2ZWQgZnJvbSBTb3V0aGFtcHRvbiBDaXR5IENvdW5jaWwgb24gQXByaWwgNCwgMjAxMiBzaG93cyB0aGUgVGl0YW5pYyBsZWF2aW5nIFNvdXRoYW1wdG9uIG9uIGhlciBpbGwgZmF0ZWQgbWFpZGVuIHZveWFnZSBvbiBBcHJpbCAxMCwgMTkxMi4gClRoZSBEQSdzIG9mZmljZSBvcHRlZCB0byBjaGFyZ2UgQ29sbGlucyBhcyBhbiBhZHVsdCwgd2hpY2ggaXMgYWxzbyB1bmNvbW1vbi5SYW5nZXJzIGdldCByZXZlbmdlIGluIGFub3RoZXIgY2xhc3NpYyBtYXRjaHVwU2F0dXJkYXkgZXZlbmluZydzIENsYXNzIDRBIGJveXMgYmFza2V0YmFsbCBzdGF0ZSBjaGFtcGlvbnNoaXAgZ2FtZSB3YXMgYmlsbGVkIGFzIGEgY2xhc2ggYmV0d2VlbiB0d28gcG93ZXJob3VzZXMgdGhhdCBoYXZlIHNwZW50IHRoZSBwYXN0IGNhbGVuZGFyIHllYXIgb24gYSBjb2xsaXNpb24gY291cnNlIHRvd2FyZCBvbmUgYW5vdGhlci4gTGlrZSByb3lhbCBzaWJsaW5ncyB3YXJyaW5nIG92ZXIgYSBiaXJ0aHJpZ2h0LCBMb25nbW9udCBhbmQgTGV3aXMgUGFsbWVyIGJvdGggcm9zZSB1bmJlYXRlbiB0byB0aGUgdG9wIG9mIHRoZSA0QSBjbGFzc2lmaWNhdGlvbiBhbmQgdGhyZXcgZXZlcnl0aGluZyB0aGV5IGhhZCBhdCBldmVyeW9uZSB3aGlsZSBwcmVwIGJhc2tldGJhbGwgZmFucyB3YXRjaGVkIGZyb20gYWJvdmUgaW4gdGhlIERlbnZlciBDb2xpc2V1bSBzdGFuZHMsIGFzIHdlbGwgYXMgZnJvbSBhbGwgY29ybmVycyBvZiBDb2xvcmFkby4gCk15IGV4cGVyaWVuY2Ugb3ZlciB0aGUgbGFzdCA1KyB5ZWFycyBpbiBidXNpbmVzcyBpcyB0aGF0IHRoZXJlIGFyZSBwZW9wbGUgd2hvIHdhbnQgdG8gb3duIHRoZWlyIG93biBidXNpbmVzcyBidXQgbm90IHdpbGxpbmcgdG8gcHV0IHRoZSB3b3JrIGludG8gaXQsIHNvIGFsbCB0aGV5IGRvIGlzIHRhbGsgYWJvdXQgaXQuIFRoZXJlIGFyZSBzb21lIHdobyBhdHRlbXB0IGl0IGJ1dCByZWFsaXplIHRoZXkgYXJlIGluIG92ZXIgdGhlaXIgaGVhZHMgYW5kIGJhaWwuIApJbiB0ZXJtcyBvZiBjb21wYXRpYmlsaXR5LCB0aGVDaGVhdGluZyBQbGF5aW5nIENhcmRzIGluIEluZGlhIHByb3ZpZGVkIGJ5IG91ciBjb21wYW55IGFyZSBjb21wYXRpYmxlIHdpdGggYWxsIGtpbmRzIG9mIHBva2VyIGdhbWVzIGxpa2UgQmxhY2tqYWNrLCBNYXUgTWF1LCBPbWFoYSBQb2tlciwgQnVsbCwgVGV4YXMgUG9rZXIgYW5kIGV0Yy4gVGhlIHF1YWxpdHkgb2YgdGhlIHBsYXlpbmcgY2FyZHMgcHJvdmlkZWQgYnkgb3VyIGNvbXBhbnkgaXMgcXVpdGUgaGlnaC4gCkRyIEpla3lsbCBhbmQgTXIuIApCdXQgdGhlIGNvbXBhbnkgc2VlbXMgdG8gYmUgaGF2aW5nIHBhcnRpY3VsYXIgc3RydWdnbGVzIHdpdGggQmFuYW5hIFNocGVlbCwgd3JpdHRlbiBhbmQgZGlyZWN0ZWQgYnkgRGF2aWQgU2hpbmVyLCBhIGNsb3duIGFuZCBjbyBjcmVhdG9yIG9mIHRoZSBwb3B1bGFyICJGb29sIE1vb24uIiBIZSBhbHNvIGlzIHRoZSBjcmVhdGl2ZSBmb3JjZSBiZWhpbmQgQ2lycXVlJ3Mgc3VjY2Vzc2Z1bCBLb296YSwgd2hpY2ggd2FzIHN0YWdlZCBsYXN0IHllYXIgb24gTmV3IFlvcmsgQ2l0eSdzIFJhbmRhbGwncyBJc2xhbmQuV2l0aCBCYW5hbmEgU2hwZWVsLCBDaXJxdWUgaXMgdHJ5aW5nIHRvIG1lc2ggaXRzIG93biBzdHlsZSB3aXRoIHRyYWRpdGlvbmFsIEJyb2Fkd2F5IGVsZW1lbnRzIGFuZCBhbiBlbXBoYXNpcyBvbiB2YXVkZXZpbGxlLCB3aGljaCBpcyBub3QgdG8gZXZlcnlvbmUncyB0YXN0ZS5CZWZvcmUgdGhlIENoaWNhZ28gcnVuLCBDaXJxdWUgaGlyZWQgdHdvIEJyb2Fkd2F5IG11c2ljYWwgc3RhcnMgZnJvbSBKZXJzZXkgQm95cyBhbmQgV2lja2VkIGFuZCBhIHByb21pbmVudCBjb21wb3NlciwgYnV0IGVuZGVkIHVwIGZpcmluZyBhbGwgdGhyZWUgYW5kIHNjcmFwcGluZyB0aGUgbXVzaWNhbCBzY29yZS5XaGF0IGRpZCBlbmQgdXAgb24gc3RhZ2Ugd2FzICJjb2xkLCBjaGFvdGljLCBjbGlwcGVkIGFuZCBjYWNvcGhvbm91cyIgd2l0aCBjbG93bnMgb24gc3RhZ2UgdGhhdCBzZWVtZWQgdGhleSAid291bGQga2lsbCB0aGVtc2VsdmVzIGxhdWdoaW5nIGF0IHlvdXIgZXhwZW5zZSwiIGFjY29yZGluZyB0byB0aGUgQ2hpY2FnbyBUcmlidW5lLiAKSXRzIHRpZ2h0bHkgcGFja2FnZWQgdXAgaW4gcHJvdGVpbnMgY2FsbCBoaXN0b25lcyBhbmQgdGhlIHRpZ2h0bmVzcyBvZiB0aGlzIHBhY2thZ2luZyBpcyBhbm90aGVyIGxheWVyIG9mIHJlZ3VsYXRpb24uIApJIHRoaW5rIGEgYmlnIHBhcnQgb2Ygd2h5IGVudmlyb25tZW50YWxpc3RzIGRvbnQgbGlrZSBpdCBpcyB0aGF0IGl0IGlzbnQgcmVuZXdhYmxlIGxpa2Ugc29sYXIsIHdhdGVyLCBvciB3aW5kLiBJIHRoaW5rIHRoYXQgaXQgd291bGQgYmUgZ3JlYXQgaWYgd2UgaGFkIGVmZmljaWVudCBtZWFucyBmb3IgdGhvc2UgZW5lcmdpZXMsIGJ1dCB3ZSBkb250IHlldC4gSXQgd291bGQgbm90IHdvcmsgb24gYSBsYXJnZSBzY2FsZSBhdCB0aGlzIHBvaW50LiAKSG9iYnkgR2FtYmxlcm4gZGllIGRhcyBTcGllbCB6dWtuZnRpZyBtaXQgcHJvZmVzc2lvbmVsbGVyZW4gQW5zdHplbiBiZXRyZWliZW4gd29sbGVuIGVtcGZlaGxlIGljaCBtaXQgRUlLRSBCY2hlcm46IFBva2VyIG1pdCBTeXN0ZW0gMSB1bmQgMiB6dSBiZWdpbm5lbi4gCk1vcmUgU3RvcmllcyBIb3cgY2hpbGRyZW4gdW5kZXIgMTEgYXJlIGJlY29taW5nIGdhbWJsaW5nIGFkZGljdHMgYXQgaG9tZQpQZXJzb25hbGx5LCBJIGxvdmUgZ2l2aW5nIGJhY2suIApXaHk/IEl0IGp1c3Qgc3BpdGVmdWwuIApTaWduaWZpY2FudGx5LCBNciBQdXRpbiBtb3N0IG5vdGFibGUgdGFyZ2V0IGhhcyBiZWVuIEFtZXJpY2FuIGV4Y2VwdGlvbmFsaXNtLiBCdXQgaGUgaGFzIHByb2NlZWRlZCB0byBsYXkgY2xhaW0gdG8gcHJlY2lzZWx5IHRoZSBpZGVhIG9uIHdoaWNoIHRoYXQgZXhjZXB0aW9uYWxpc20gaXMgYmFzZWQ6IGFsdGhvdWdoIHdlIGFyZSBhbGwgZGlmZmVyZW50LCBoZSBzYXlzLCBjcmVhdGVkIHVzIGVxdWFsIEFuZCBieSBzYXlpbmcgdGhhdCwgb2RkbHkgZW5vdWdoLCBoZSBhY2tub3dsZWRnZXMgdGhhdCB0aGUgbGFuZ3VhZ2Ugb2YgR29kIGdpdmVuIHVuaXZlcnNhbCByaWdodHMgaXMgbm93IHRoZSBvbmx5IGFjY2VwdGFibGUgY3VycmVuY3kgb2YgaW50ZXJuYXRpb25hbCByZWxhdGlvbnMuIERpZCBoZSByZWFsbHkgbWVhbiB0byBkbyB0aGF0PyBBIGxvdCBjb3VsZCBoaW5nZSBvbiB0aGUgYW5zd2VyLi4gCkJ1dCBCZXJzZXJrZXIgQ2FsbCBhbmQgRHVlbCBhcmUgaW5zYW5lIGJlY2F1c2UgdGhleSBvZmZlciBwcmVtaXVtIGJvYXJkIGNsZWFyIGFuZCBzaW5nbGUgdGFyZ2V0IHJlbW92YWwgdG8gYSBjb2xvciB3aG8gaXMgc3VwcG9zZWQgdG8gc3VmZmVyIGluIHRoYXQgZGVwYXJ0bWVudC4uIApOb3cgaXMgdGhlIHRpbWUgdG8gZG8gdGhpcywgd2hpbGUgeW91IHlvdW5nIGFuZCB0aGUgam9icyBhcmUgam9lIGpvYnMgdGhhdCB3b24gd3JlY2sgeW91ciByZXN1bWUuIEV4cGxvcmluZyBpbiB0aGlzIHdheSBtaWdodCBoZWxwIHlvdSBmaW5kIHNvbWV0aGluZyB5b3UgY2FuIGJlIHBhc3Npb25hdGUgYWJvdXQsIHdoaWNoIHdpbGwgcHV0IGRyaXZlIGludG8geW91ciBsZWFybmluZy4gVGhpcyBpcyBhbHNvIGEgd2F5IHRvIGxlYXJuIGhvdyB0byBiZSBoZWxwZnVsIGFueXdoZXJlLCB3aGljaCBpcyBnb29kIGR1cmluZyB0b3VnaCBlY29ub21pYyB0aW1lcy4gCklmIHlvdSdyZSBsb29raW5nIHRvIGdldCB0aGluZ3Mgc3RhcnRlZCBvbiB0aGUgcmlnaHQgZm9vdCBhbmQgaGF2ZSBhIGZldyBkb2xsYXJzIHRvIHNwZW5kLCB5b3UgY2FuIGludmVzdCBpbiBhIHNldCBvZiBjaGlwcyBmcm9tIFBhdWxzb24uIApUaGUgYmV0IHlvdSBwbGFjZSBpcyBzdWJ0cmFjdGVkIGZyb20geW91ciBhY2NvdW50IHdoZW4geW91ciBjYXJkcyBjb21lcywgYW5kIHlvdSBjYW4gY2hhbmdlIHlvdXIgYmV0IGFtb3VudCB3aXRoIGV2ZXJ5IG5ldyBoYW5kIGlmIHlvdSB3YW50IHRvLiAKQWxsIG9mIHdoaWNoIGlzIGV4dHJlbWVseSBpbnRlcmVzdGluZyBpbiB0ZXJtcyBvZiB0aW1pbmcgc2luY2UgYm90aCB0aGUgSG91c2UgYW5kIHRoZSBTZW5hdGUgd2lsbCB2b3RlIG9uIHRoZSByZXBlYWwgb2YgdGhlIERBRFQgcG9saWN5IHdpdGhpbiB0aGUgbmV4dCBmZXcgd2Vla3MsIGJ1dCB3aXRoIG1pZHRlcm0gZWxlY3Rpb25zIGxvb21pbmcgQU5EIGEgcmVjZW50IGxldHRlciBmcm9tIFNlY3JldGFyeSBvZiBEZWZlbnNlIEdhdGVzIHN0YXRpbmcgdGhhdCBoZSB3b3VsZCBsaWtlIHRvIHdhaXQgdGlsbCBhIHJlcG9ydCBpcyBjb21wbGV0ZSBpbiBEZWNlbWJlciBiZWZvcmUgY2hhbmdpbmcgdGhlIHBvbGljeSwgaXQgaXMgcG9zc2libGUgdGhhdCBDb25ncmVzcyB3aWxsIG5vdCBoYXZlIHRoZSBjYXJyb3Qgbm9yIHRoZSBzdGljayB0byByZXBlYWwgREFEVCB0aGlzIHllYXIuCkRpcmVjdGx5IHRvIHlvdXIgcXVlc3Rpb24sIHRoZSBnYW1lcyBoYXZlIGEgc2VjdGlvbiBpbiB0aGVyZSBhYm91dCBleHBlcmllbmNlZCBjaGFyYWN0ZXJzLCB3aGljaCB0YWxrcyBhYm91dCB0aGUgYmVuZWZpdHMgeW91ciBjaGFyYWN0ZXJzIGdhaW4gYnkgaGl0dGluZyBtaWxlc3RvbmVzIG9yIGJlaW5nIGF3ZXNvbWUgYXQgdGhlIHRhYmxlLiBXaGVyZS9pZiB0aGVyZSBpcyByb29tIGluIHRoZSBnYW1lcywgSSBtYXkgYmUgYWJsZSB0byBhZGQgaW4gc29tZXRoaW5nIGFib3V0IGEgbmV4dCBzZXNzaW9uLCBidXQgd29ya2luZyB3aXRoIHRoZSBmb3JtIGZhY3RvciwgdGhlIHNwYWNlIGlzIGEgYml0IHRpZ2h0Li4gClRoZSBzY2hvb2wsIHdoaWNoIGhhZCAxMTAgc3R1ZGVudHMgZW5yb2xsZWQgd2hlbiBpdCBjbG9zZWQsIGFsc28gaGFzIGEgaGVhcmluZyBiZWZvcmUgZmVkZXJhbCBlZHVjYXRpb24gb2ZmaWNpYWxzIGxhdGVyIHRoaXMgeWVhciBwZW5kaW5nIHRoZSBvdXRjb21lIG9mIG5vbmNvbXBsaWFuY2UgaXNzdWVzLgpUaGUgc3VkZGVuIGNsb3NpbmcgY3JlYXRlcyB0aGUgc291bmQgd2UgYWxsIGtub3cgYXMgYSBoaWNjdXAuLiAKTW9zdCBleGNpdGluZyBpcyB0aGUgNzcgc3RvcnkgYnVpbGRpbmcncyBwYXJ0bmVyc2hpcCB3aXRoIERhbmllbCBCb3VsdWQsIHdobyB3aWxsIG92ZXJzZWUgYSByZXN0YXVyYW50LiAKVGhlcmUgc2VlbXMgdG8gYmUgYSBsb3Qgb2YgcG9zdHMgbGlrZSB0aGlzLCB3aGVyZSBhIHNwb3VzZSBvciBwYXJlbnQgZGllcyBhbmQgdGhlcmUgYXJlIGlzc3VlcyB0cnlpbmcgdG8gcGF5IG9mZiB0aGUgbW9ydGdhZ2UsIHNvIEkgYW0gbGVkIHRvIGFzc3VtZSB0aGF0IG1vcnRnYWdlIGluc3VyYW5jZSBpcyBub3QgdGhlIG5vcm0sIG9yIG5vdCBlbmZvcmNlZCBpbiBhIGxvdCBvZiBwbGFjZXMuIEluIGFueSBjYXNlLCBPUCBtaWdodCBoYXZlIHdhaXRlZCB0b28gbG9uZyB0byBmaWxlIGEgY2xhaW0uLiAKVGhpcyBtZWFucyB0aGF0IHNvbWVvbmUgbGlrZSBtZSBjYW4gZmVlbCBjb21mb3J0YWJsZSBob2xkaW5nIGEgc3RvY2sgYXMgbG9uZyBhcyB0aGV5IGZlZWwgdGhhdCB0aGUgdW5kZXJseWluZyByZWFzb25zIHRoZXkgYm91Z2h0IHRoZSBzdG9jayBpbiB0aGUgZmlyc3QgcGxhY2Ugc3RpbGwgaG9sZC4gSWYgeW91J3JlIHV0aWxpemluZyBEUklQLCB5b3UgbWF5IGV2ZW4gZ2V0IGEgZ3JlYXRlciBudW1iZXIgb2Ygc2hhcmVzIG9yIGZyYWN0aW9uYWwgc2hhcmVzIGlmIHRoZSBwcmljZSBpcyBkZXByZXNzZWQgYXQgdGhlIHRpbWUgeW91IHJlY2VpdmUgdGhlIGRpdmlkZW5kLi4gCldpdGggZGlubmVyIGRpc3BlcnNlZCwgdGhlIHJpZGVycyBhbmQgc3RhZmYgZ2F0aGVyIGluIHRoZSBjcmFtcGVkIGxvYmJ5IGZvciBhIHRvYXN0LiAKVHJ1bHlTdHVwaWROZXdiICAzIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KU21hbGxlciBjb250cmFjdHMgaGF2ZSBsb3dlciBsYWJvciByYXRlcy4gTG93ZXIgbGFib3IgcmF0ZXMgcGFpZCB0byB0aGUgY29udHJhY3RvciBtZWFuIGxlc3MgbW9uZXkgdG8gcGF5IHRoZSBlbmdpbmVlcnMuLiAKU28geW91IHRha2UgMk1Iei80NC4xS0h6ID0gNDcuNTUuIApZb3UgYWxyZWFkeSBnb3R0ZW4gZ29vZCBhbnN3ZXJzIGZvciB5b3VyIGFjdHVhbCBxdWVzdGlvbiwgc28gSSB3b24gZ2V0IGludG8gdGhhdC4gSG93ZXZlciBJIGxpa2UgdG8gc2F5IHNvbWV0aGluZyBhYm91dCB0aGlzIHBhcnRpY3VsYXIgdGhpbmcuCkRpZSBIYXV0IGZobHQgc2ljaCBsZWJlbmRpZywgdmVyam5ndCB1bmQgc2FuZnQgYW4uLiAKSSBhbHdheXMgbG92ZWQgcmVhbCBlc3RhdGUgYW5kIGxvb2tpbmcgYXQgaG9tZXMgYnV0IEkgd2FzIHNpY2sgb2YganVzdCBsb29raW5nIGF0IGhvbWVzIG9uIHppbGxvdyBhbmQgd2F0Y2hpbmcgdHYgc2hvd3MgYWJvdXQgcmVhbCBlc3RhdGUuIEkgd2FzIGl0Y2hpbmcgdG8ganVtcCBpbi4gCkl0IGhhcyAyODUgbHV4dXJ5IGhvbWVzLCBvZiB3aGljaCBzaXh0eSBwZXJjZW50IGFyZSBhbHJlYWR5IHNvbGQuIApJIHdpbGwgbmV2ZXIgdW5kZXJzdGFuZCBwZW9wbGUgd2hvIGdldCBlbmpveW1lbnQgb3V0IG9mIGJlaW5nIGEgamVyayBiZWNhdXNlIHRoZXkgY2FuIGhpZGUgYmVoaW5kIGFuIGFub255bW91cyBzY3JlZW4gbmFtZS4uIApUaGF0IHdoeSAiTXVzbGltIiBvciAiSXJhbmlhbiIgY2Fubm90IGJlIGEgcmFjaWFsIG1hcmtlci4uIApMaWtlIFBhbGluICJmcmllbmRzIiBhcmUgcmVhbGx5IHBpc3NlZCBhYm91dCBhbiBhcnRpY2xlIGluIE9jdG9iZXIgVmFuaXR5IEZhaXIgd2l0aCBoZXIgZm9ybWVyIGFsbW9zdCBzb24gaW4gbGF3LCBMZXZpIEpvaG5zdG9uIGNhbGxlZCAiTWUgYW5kIE1ycy4gUGFsaW4uIkxldmkgSm9obnN0b246ICJNZSBhbmQgTXJzLiBQYWxpbiI6IFZhbml0eSBGYWlyICBWYW5pdHkgRmFpci5JbiB0aGUgVmFuaXR5IEZhaXIgYXJ0aWNsZSBhbmQgYSBtdWNoIG1vcmUgZ29zc2lweSBvbmUgaW4sIE1yLiAKQXVzdGluIGlzIGtub3duIGZvciAia2VlcGluZyBpdCB3ZWlyZCIgYW5kIGJlaW5nIGEgZnVuLCBjb29reSBwbGFjZS4gUmVjZW50bHksIHRoZSB3aG9sZSBwbGFjZSBpcyBiZWluZyBkZXZlbG9wZWQsIGFuZCBhbGwgb2YgdGhlIHBsYWNlcyB0aGF0IHRoZSB0cmFuc3BsYW50cyBtb3ZlIGhlcmUgZm9yIGFyZSBiZWluZyBidWxsZG96ZWQgZm9yIGNvbmRvcy4gCkFmdGVyIHRoYXQgaXQncyB0aW1ldG8gc3RhcnQgZmlsbWluZy4gSW4gYmV0d2VlbiB0aW1lcyB3ZSB1c2UgZm9yIHN0dWR5aW5nIGxpbmVzIGFuZCBnZXR0aW5nIHJlYWR5IGZvciB0aGUgbmV4dCB0YWtlLlRoZW4gaXQncyBkcmlua3MgYWZ0ZXIgd29yaz9Ob29vLCB1c3VhbGx5IGFmdGVyIGEgZGF5IG9mIGZpbG1pbmcgd2UgYXJlIGFsbCBwcmV0dHkgZXhoYXVzdGVkIHNvIHdlIGhlYWQgaG9tZSB0byByZXN0LCBzdHVkeSwgZWF0LCBhbmQgY3Jhc2guIApJY2ggc2FjaCBtYWwgc28sIGRpZSBFVSBoYXQgZ3V0IGFuZ2VmYW5nZW4uIApJIGhhdmUgYSBuZXcgTWFjYm9vayBhbmQgaW5zdGFsbGVkIExvZ2ljIFN0dWRpbyBhZ2Fpbi4gQnV0IG5vdyBMb2dpYyBhc2tlZCBteSB4c2tleSBzZXJpYWwgbnVtYmVyIGFuZCBpdCBkb2Vzbix0IHdvcmsuIFRoZSB4c2tleSB3YXMuIApPbSAyMCBuYSA2IGdpbmcgZGUgd2Vra2VyIGFsLCB6b2RhdCB3ZSBvbSBrd2FydCBuYSA3IG9wIGRlIHNodXR0bGUgYnVzIHphdGVuIG9wIHdlZyBuYWFyIFphdmVudGVtLiAKU2l4IGxhdyBmaXJtcyBoaXJlZCBieSB0aGUgQ29yZGlzaCBDb3MuLCB3aGljaCB3b24gdGhlIHNsb3RzIGxpY2Vuc2UsIGFsbGVnZSBhbGwgc29ydHMgb2YgaGFua3kgcGFua3kgYnkgcGV0aXRpb24gZ2F0aGVyZXJzLiBUaGV5IGV2ZW4gY2xhaW0gdGhlIHJlZmVyZW5kdW0gZHJpdmUgdmlvbGF0ZXMgdGhlIHN0YXRlIGNvbnN0aXR1dGlvbi4KSW5zdGVhZCwgaGUgZmlyZWQgaW50byB0aGUgY2VpbGluZ3MsIHNjYXR0ZXJpbmcgcGFuaWNrZWQgY3Jvd2RzLCBzb21lIG9mIHdob20ganVtcGVkIG91dCB3aW5kb3dzIHRvIGVzY2FwZSB0aGUgYXR0YWNrLgpXb21lbiBhY3R1YWxseSBkbyB0aGUgbGlvbnMgc2hhcmUgb2YgY2hpbGRjYXJlIGFuZCBob3VzZXdvcmsuIApQbGVhc2luZyB2aXNpb25zIHdlcmUgYWxzbyBiZWluZyB3b3ZlbiBhcm91bmQgUGF0dHkncyBQbGFjZS4gVGhlcmUgd2FzIGEgd2FybSBwbGVhc2FudCBzZW5zZSBvZiBob21lIGluIHRoZSB0aG91Z2h0IG9mIGl0LCBldmVuIHRob3VnaCBzaGUgaGFkIG5ldmVyIGxpdmVkIHRoZXJlLi4gCk1vc3QgQ2FuYWRpYW5zIHRheCByZXR1cm5zIGFyZSBkdWUgb24gQXByaWwgMzAsIDIwMTkuIElmIHlvdSBvciB5b3VyIHNwb3VzZSBvciBwYXJ0bmVyIGFyZSBzZWxmIGVtcGxveWVkLCB5b3UgaGF2ZSB1bnRpbCBKdW5lIDE1LCAyMDE5IHRvIGZpbGUgeW91ciByZXR1cm5zOyBob3dldmVyLCBzaW5jZSBKdW5lIDE1LCAyMDE5IGZhbGxzIG9uIGEgU2F0dXJkYXksIHRoZSBDUkEgd2lsbCBjb25zaWRlciB5b3VyIHJldHVybiB0byBiZSBmaWxlZCBvbiB0aW1lIGFzIGxvbmcgYXMgdGhlIENSQSByZWNlaXZlcyBpdCBieSAob3IgaXQgcG9zdG1hcmtlZCBieSkgbWlkbmlnaHQgSnVuZSAxNywgMjAxOS4gTm90ZSB0aGF0IGFueSBiYWxhbmNlIG93aW5nIGlzIHN0aWxsIGR1ZSBieSBBcHJpbCAzMCwgMjAxOS4KT2YgY291cnNlLCB3ZSBhcmUgbm8gbG9uZ2VyIFZpY3RvcmlhbnMgYW5kIHRoZSBjbGVhcmx5IGhvbW9lcm90aWMgbG9uZ2luZ3Mgb2YgZm9vdGJhbGwgYXJlIHV0aWxpemVkIGluIGFsbCBzb3J0cyBvZiBpbnRlcmVzdGluZyB3YXlzLiAKQWJvdXQgMjAgbWludXRlcyBsYXRlciB3ZSBnb3QgYSBjYWxsIGZyb20gaGVyIGFnYWluIGFuZCB0aGlzIHRpbWUgSSBoYWQgYW5zd2VyZWQuIFNoZSBkaWRuIG1ha2UgaXQgdGhlIHdob2xlIHdheSB0aHJvdWdoIGFza2luZyBpZiB3ZSB3b3VsZCBob25vciBiZWZvcmUgSSB0b2xkIGhlciB0aGUgYW5zd2VyIHdhcyBzdGlsbCBuby4gV2UgaGFkIGNhbGxlciBJRCBzbyBJIGtuZXcgaXQgd2FzIGhlciBhZ2Fpbi4KTW9zdCBzY3JlZW5pbmdzIHRha2UgcGxhY2UgYXQgTXVlbnppbmdlciBBdWRpdG9yaXVtIG9yIGF0IHRoZSBWQUMsIGJvdGggb24gY2FtcHVzLiAKVXBvbiBiZWluZyBvZmZlcmVkIHNvbWUgZ2x5cGhvc2F0ZSB0byB0cnksIE1vb3JlIHJlZnVzZWQgdG8gdGFrZSB1cCBoaXMgb3duIHN1Z2dlc3Rpb24sIGVuZGluZyB0aGUgaW50ZXJ2aWV3IGFuZCB0ZWxsaW5nIHRoZSBmaWxtbWFrZXIsICJJIG5vdCBhbiBpZGlvdC4iCldoZW4gZGlkIEJhcmIgYW5kIFNjb3R0IGdldCBtYXJyaWVkPyBDb3VsZCB0aGV5IGhhdmUgZ290dGVuIG1hcnJpZWQgdG8gcHJldmVudCBoZXIgZnJvbSB0ZXN0aWZ5aW5nIGFnYWluc3QgaGltIGlmIGl0IGNhbWUgdG8gaXQ/IEl0IGFsd2F5cyBmZWx0IGEgbGl0dGxlIHdlaXJkIHRoYXQgc2hlIGp1c3QgaGFwcGVuZWQgdG8gZ2V0IG1hcnJpZWQgYXQgdGhlIHRpbWUgb2YgdGhlIHRyaWFsLiBZb3VyIGJveWZyaWVuZCBpcyB0ZXN0aWZ5aW5nIGFnYWluc3QgeW91ciBzb24sIHNvIGxldCBnZXQgaGl0Y2hlZD8gVGhleSB3ZXJlIGVhY2ggb3RoZXIgYWxpYmkgYW5kIHRoZSBzdG9yaWVzIHdlcmUgcGVyZmVjdC4gCkkgdGhpbmsgdGhpcyBpcyB0aGUga2luZCBvZiBiZWhhdmlvciB0aGF0IGhhcyB0aGUgcG90ZW50aWFsIHRvIGdldCB2ZXJ5IGRldHJpbWVudGFsIHRvIHRoZSB3aG9sZSBlbnZpcm9ubWVudCBvZiB0aGUgc3ViIGlmIGl0IGdldHMgbW9yZSBjb21tb24uIEFuZCBJIHRoaW5rICJ3aGF0IHdvdWxkIGhhcHBlbiBpZiBldmVyeW9uZSBkaWQgd2hhdCBJIGRvIiBpcyBhIHByZXR0eSB1c2VmdWwgcnVsZSBvZiB0aHVtYiB0byB0cnkgYW5kIGZpZ3VyZSBvdXQgaWYgeW91IGRvaW5nIGEgZ29vZCB0aGluZyBvciBub3QuIApTcG9ydHMgSGFsbCBvZiBGYW1lIGFzIHdlbGwgdGhpcyBzdW1tZXIuIApBZnRlciB0aGUgU2Vjb25kIFdvcmxkIFdhciBib21iIGRhbWFnZWQgYnVpbGRpbmdzIHdlcmUgc2NydXRpbmlzZWQuIFRob3NlIGp1ZGdlZCB0byBkZXNlcnZlIHByb3RlY3Rpb24gZnJvbSBkZW1vbGl0aW9uIHdlcmUgYWRkZWQgdG8gdGhlICdTYWx2YWdlIExpc3QnLiBBbm90aGVyIGJ1aWxkaW5nIHN1cnZleSB0b29rIHBsYWNlIGluIDE5NjggdG8gaWRlbnRpZnkgaGlzdG9yaWMgYnVpbGRpbmdzIHVuZGVyIHRocmVhdCBmcm9tIHVyYmFuIGRldmVsb3BtZW50LiAnVGhlIE1vZGVybiBEb21lc2RheScgc3VydmV5IHRvb2sgcGxhY2UgYmV0d2VlbiAxOTgwIGFuZCAxOTg0LCBhbmQgdGhlIFJlZ2lzdGVyIG9mIFBhcmtzIGFuZCBHYXJkZW5zIHdhcyBjcmVhdGVkIGluIDE5ODQuIFRoZSBOYXRpb25hbCBIZXJpdGFnZSBMaXN0IG9mIEVuZ2xhbmQgaGFzIGJlZW4gYXZhaWxhYmxlIG9ubGluZSBzaW5jZSAyMDExLgpXcm9uZyBpcyB3cm9uZyBhbmQgd2Ugc2hvdWxkIG1ha2UgYSBmdWNraW5nIGV4YW1wbGUgb3V0IG9mIGhpcyBhc3Mgc28gdGhleSBhbGwgdGhpbmsgdHdpY2UgYmVmb3JlIHRha2luZyBtb25leSBmcm9tIGFuIGVuZW15IHN0YXRlLCBhbmQgcGFydGljaXBhdGluZyBpbiBhIGRpcmVjdCBhdHRhY2sgb24gdGhlIGZ1bmRhbWVudGFscyBvZiBvdXIgc292ZXJlaWdudHkuIEFuZCBpZiBPYmFtYSwgb3IgQ2xpbnRvbiwgb3IgQnVzaCwgb3IgSmVzdXMgQ2hyaXN0IGhpbXNlbGYgZGlkIHRoaXMsIHRoZXkgZGVzZXJ2ZSB0aGUgZnVsbCBmb3JjZSBvZiB0aGUgbGF3LiAKVGhlcmUgb3RoZXIgY29tcGFuaWVzIG91dCB0aGVyZSB0cnlpbmcgdG8gbWFrZSBnYW1lcyB0aGF0IGRvbiBzdWNrLiAKT25jZSB0aGUgcGxhbiBpcyBmdWxseSBpbXBsZW1lbnRlZCwgdGhlIG1heGltdW0gYW5udWFsIGJlbmVmaXRzIHdpbGwgaW5jcmVhc2UgYnkgYWJvdXQgb25lIHRoaXJkIHRvICQxNyw0NzguCkN1dHMgYW5kIFN0aXRjaGVzLiBBc2lkZSBmcm9tIGdldHRpbmcgeW91cnNlbGYgYSBnb29kIHBhaXIgb2Ygc2Npc3NvcnMsIGxlYXJuaW5nIGhvdyB0byBtYWtlIGJhc2ljIHN0aXRjaGVzIGFyZSBhbHNvIGltcG9ydGFudC4gClRoaXMgbWFnYXppbmUgd29uJ3Qgd3JpdGUgaXRzZWxmISBXaGF0IGRvIHlvdSB0aGluayBpdCBpcywgYW4gRXNjaGVyIGRyYXdpbmc/U3RheSB3YXJtL2Nvb2wvZHJ5LCB3aGVyZXZlciB5b3UgYXJlLiAKQSB3ZWVrIGFnbywgRGlzdHJpY3QgSnVkZ2UgS2VubmV0aCBDb3J5IHNpZGVkIHdpdGggU3Vuc2V0IFNwYSBGb290IE1hc3NhZ2UsIDQ0NTEgRS4gU3Vuc2V0IFJvYWQsIHdoaWNoIGFyZ3VlZCB0aGUgSGVuZGVyc29uIENpdHkgQ291bmNpbCB2aW9sYXRlZCBpdHMgY29uc3RpdHV0aW9uYWwgcmlnaHRzIHdoZW4gaXQgZGVjaWRlZCBNYXkgMyB0byByZXZva2UgdGhlIHN0dWRpbydzIG9wZXJhdGluZyBwZXJtaXQuCjgzIHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ29JIGRlY2lkZWQgdG8gbG9vayB1cCAiY2hpbm8gaGlsbHMgYmFza2V0YmFsbCIgb24geW91dHViZS4gSSBoZWFyZCBMZW9uYXJkbyBCYWxsIG9yIHdoYXRldmVyIHRoZSBmdWNrIHdhcyBmYW1vdXMgZm9yIGNodWNraW5nIDQwIGZvb3RlcnMgYW5kIHdhbGtpbmcgb3V0IG9mIGdhbWVzL3RvdXJuYW1lbnRzLiBIb2x5IGZ1Y2ssIGFwcGFyZW50bHkgdGhhdCBNYXRlciBEZSB0ZWFtIGlzIHN1cHBvc2VkIHRvIGJlIGxpa2UgdGhlIGJlc3QgaW4gdGhlIHdlc3QgY29hc3Qgb3Igc29tZXRoaW5nPyBUaGV5IGFyZSBnZXR0aW5nIGRlbW9saXNoZWQgYnkgQ2hpbm9zIHN5c3RlbS4gCkl0IGFsc28gc3RydWNrIG1lIGFzIHZlcnkgb2RkIHRoYXQgRnJlZCB3YW50ZWQgdG8gcmV3YXJkIEp1bmUgdGhlIGRheSBhZnRlciBoZSB2aW9sZW50bHkgcmFwZWQgaGVyLCBwYXJ0aWN1bGFybHkgd2hlbiBoZSBkaWRuIHNlZW0gYXQgYWxsIHJlbW9yc2VmdWwgZm9yIHRoZSBhY3QgaXRzZWxmLiBIaXMgd29yZCBjaG9pY2Ugd2FzIGludGVyZXN0aW5nLCB0b28uIEhlIHNhaWQgeW91IGVhcm5lZCB0aGlzIHNldmVyYWwgdGltZXMsIGFsb25nIHdpdGggdGFsa2luZyBhYm91dCBoYXZpbmcgYSBzdXJwcmlzZSBmb3IgaGVyLiAKQlVUIEhBUkRMWS4gCkxpa2UgSSBzYWlkLCBpdCBhIGRpZ2l0YWwgY2FzaW5vIGNoaXAgZm9yIGEgY2FzaW5vIHRoYXQgbmVhcmx5IE5PIE9ORSBpcyB1c2luZy4gCkl0J3MganVzdCBhbm5veWluZyBob3cgeW91IGNhbnQgY2FsbCBpbiBhbmQgeW91IGhhdmUgdG8gc3RheSBuZWFyYnksIG90aGVyd2lzZSB5b3UgbWlnaHQgbWlzcyBnZXR0aW5nIGNhbGxlZC4gWWVzdGVyZGF5LCBJIHdhcyB3YWl0aW5nIGZvciAzMCBtaW5zIGFuZCBnb3QgY2FsbGVkLCBzbyBJIGhlYWRlZCB0byB0aGUgYmFjayBwb2RpdW0gc2luY2UgdGhhdHMgd2hlcmUgdGhlIGZsb29yIHdobyB3YXMgYW5ub3VuY2luZyBuYW1lcyBvbiB0aGUgbWljIHdhcywgZW5kZWQgdXAgd2FpdGluZyBsaWtlIDIgMyBtaW5zIGFzIGhlIHdhcyBoZWxwaW5nIHNvbWVvbmUgZWxzZSBhbmQgdGhlbiBoZSB0b2xkIG1lIDEvMyBhbmQgMi81IHNlYXRpbmcgSSBuZWVkIHRvIGdvIHRvIHRoZSBmcm9udCAod2hpY2ggbWFrZXMgc2Vuc2UsIGJ1dCBzaW5jZSBpdCB3YXMgYSBuZXcgcm9vbSwgSSBndWVzcyBJIHdhc24ndCB0aGlua2luZykgYW5kIGJ5IHRoZSB0aW1lIEkgZ290IHRvIHRoZSBmcm9udCB0aGV5IGhhZCBnaXZlbiBteSBzZWF0IGFuZCBJIGVuZGVkIHVwIHdhaXRpbmcgMjAgbW9yZSBtaW5zLiAKVGhpcyBjYW4gZWFzaWx5IGluY2x1ZGUgcHVyY2hhc2luZyBhIGRlY2sgb2YgY2FyZHMgdGhhdCB3aWxsIGhlbHAgdGhlbSByZWdhaW4gdGhlaXIgbHVjay4gCk5hdGlvbmFsIEFjY2VzcyBDYW5uYWJpcyBvbiBRdWFkcmEgbWF5IGJlIHdvcnRoIGEgdmlzaXQuIFRoZXkgZW1wbG95IGEgcGhhcm1hY2lzdCB3aG8gd2lsbCBjaGF0IHdpdGggeW91IGFib3V0IHRoZSBzcGVjaWZpYyBjb25kaXRpb24gdGhhdCB5b3UgbG9va2luZyB0byBtZWRpY2F0ZSBmb3IsIHRoZSBiZXN0IHdheSB0byBkb3NlL2NvbnN1bWUsIGFuZCBwb3RlbnRpYWwgaW50ZXJhY3Rpb25zIHdpdGggb3RoZXIgbWVkaWNhdGlvbnMuCkxlYXJuIHdoYXQgaGlzIHRyaWdnZXJzIGFyZSBhbmQgYmUgdGhlcmUgcGFzc2l2ZWx5IGFzIGEgc3VwcG9ydGluZyB2b2ljZSBpbnN0ZWFkIG9mIHRyeWluZyB0byAiYWN0aXZlbHkiIGNvbnRyb2wgaGlzIGFjdGlvbnMuIApBbnl3YXlzLCBJIHNwZW50IHRoZSBuZXh0IDYgbW9udGhzIGJlaW5nIG1pc2VyYWJsZSBhbmQgcmlnaHQgYXMgSSB3YXMgZmluYWxseSBnZXR0aW5nIG92ZXIgaGVyIHNoZSBjYWxsZWQgbWUgYmFjayB1cC4gCkhvbmVzdGx5IEkga2luZCBvZiB3aXNoIEkgY291bGQgb2YgZ290IGluIG9uIHRoZSBtZW1icmFuZSBlbnRyeSBsZXZlbCBLb25hbWkgY29udHJvbGxlciBqdXN0IGZvciB0aGUgc291bmQgbGV2ZWwuLiAKVG8gY2xvc2Ugb3BlbmluZ3MgdXAgdG8gODQgaW5jaGVzIGluIGRpYW1ldGVyLiBUaGUgZG9vcnMgYXJlIGluc3RhbGxlZCBvcHBvc2l0ZSBlYWNoIG90aGVyLCBwZXJwZW5kaWN1bGFyIHRvIHRoZSBwaXBlLiBUaGUgZG9vcnMgYXJlIHNodXQgYnkgaGlnaCBwcmVzc3VyZSBnYXMgdGhhdCBpcyB0cmlnZ2VyZWQgYXQgdGhlIHRpbWUgb2YgZGV0b25hdGlvbi4gQWx0aG91Z2ggdGhlIGRvb3JzIGNsb3NlIGNvbXBsZXRlbHkgd2l0aGluIDAuMDMKMikgTWVsYW5pZTogMTUyNSAxNjA1IChleGNsdWRpbmcgMjAgbWluIGFzIHRpcCksIDEwMEUsIHRoZSBmaXJzdCB0aW1lIGluIHRoZSBwYXN0IGZpdmUgbW9udGhzLCBzaGUgcHV0IHNvbWUgd2VpZ2h0IG9uIGhlciBzdW1tZXIgaG9saWRheXMgYXQgaG9tZS4gSW4gYSByb29tIHdlIGVuam95ZWQga2lzcywgY2FyZXNzaW5nLCBzaG9ydCB0ZWFzaW5nIERBVFkgd2l0aCBoZXIgTywgQkosIG1pc3Npb25hcnkgd2l0aCBoZXIgc2Vjb25kIE8gYW5kIG15IG1hc3NhZ2Ugb24gaGVyLiBSZXBlYXQuCklmIHlvdSBhcmUgc29tZW9uZSB3aG8gaXMgc2VyaW91c2x5IGludmVzdGVkIGluIG1ha2luZyBzdXJlIHRoYXQgeW91ciBwbGF5ZXJzIGVuam95IHRoZWlyIHBva2VyIGdhbWUgYXQgeW91ciBwbGFjZSwgeW91IHdpbGwgZmluZCB0aGF0IHRoZXJlIGFyZSBhIG51bWJlciBvZiBkaWZmZXJlbnQgdGhpbmdzIHRoYXQgY2FuIHlvdSBjYW4gZG8gdG8gZW5oYW5jZSB0aGUgZXhwZXJpZW5jZSBmb3IgdGhlbS4gRm9yIGluc3RhbmNlLCB5b3UgbWlnaHQgY2hvb3NlIHRvIHNlcnZlIGludGVyZXN0aW5nIG9yIGZ1biBkcmlua3MsIG9yIHlvdSBtaWdodCBkZWNpZGUgdGhhdCB0aGUgY2hpcHMgdGhhdCB5b3UgcGxheSB3aXRoIHNob3VsZCBiZSBjYXNpbm8gZ3JhZGUgYW5kIGhlYXZ5IS4gClRoZW4gSSBtb3ZlZCBvbnRvIHNvbWUgcGFkZGluZyBvbiB0aGUgZmxvb3Igc28gQnVzY2ggY291bGQgbWFzaCBtZS4gCklmIHlvdSBwbGF5IGEgdG9uIG9mIHRhYmxlcywgeW91IG1pZ2h0IHdhbnQgYSBsaXR0bGUgbW9yZSBoZWxwLiBUYWJsZU5pbmphIGlzIGEgY29tbWVyY2lhbCBwcm9ncmFtIHRoYXQgd2lsbCBoZWxwIHlvdSBtYXNzaXZlbHkgbXVsdGkgdGFibGUsIGRvaW5nIHRoaW5ncyBsaWtlIGF1dG8gZmlsbGluZyBpbiB5b3VyIHByZWZlcnJlZCBiZXQgc2l6ZXMsIGF1dG8gYnJpbmdpbmcgeW91ciBtb3VzZSB0byB0aGUgdGFibGUgdGhhdCBuZWVkcyBhY3Rpb24gbmV4dCwgYXV0byByZWdpc3RlcmluZyB5b3UgZm9yIHNpdCBuIGdvcywgYW5kIGxvdHMgbW9yZS4gCkZvcm1lcmx5IHRoZSBDcmVhdGl2aXR5IDUwLCB0aGUgbmV3IG5hbWUgaG9wZXMgdG8gZm9jdXMgb24gdGhlaXIgYWNoaWV2ZW1lbnRzIHVudGV0aGVyZWQgdG8gYSBudW1iZXIuIApQbGVhc2Ugc2VlIGV4dGVuZGVkIHJ1bGVzIGZvciBhcHByb3ByaWF0ZSBhbHRlcm5hdGl2ZSBzdWJyZWRkaXRzLCBsaWtlIC9yL3N1Z2dlc3RtZWFib29rLCAvci93aGF0c3RoYXRib29rLCBldGMuIApEaWUgRXhlY3V0aXZlIEZsb29ycyBhdWYgZGVyIGVsZnRlbiB1bmQgendsZnRlbiBFdGFnZSBiaWV0ZW4gZXhrbHVzaXZlbiBadWdhbmcgenVyIEV4ZWN1dGl2ZSBMb3VuZ2UgbWl0IGVpZ2VuZXIgVGVycmFzc2UsIFRhZ3VuZ3N6aW1tZXIsIGtvc3Rlbmxvc2VuIFNuYWNrcyB1bmQgR2V0cm5rZW4gc293aWUgc2VwYXJhdGVtIENoZWNrIGluLi4gClRoZSBzZWlrbyBzYXJiMDMzIGlzICQyMDAgbW9yZSB0aGFuIHRoZSBzYXJ5IGFuZCAkMTAwIG1vcmUgdGhhbiB0aGUgb3JpZW50IHN0YXJzLiBJdCBvZmZlcnMgNnIgbW92ZW1lbnQgYW5kIGJldHRlciBjbGFzcCBhbmQgbHVtZS4gCkl0IHVzZWQgdG8gYmUgY2FsbCAiYml0aW5nIiBhbmQgd2FzIGZ0b3duZWQgdXBvbiBhbGwgdGhlIHRpbWUuIENvcHlpbmcgYW5kIGNvbW1lcmNpYWxpemluZyBzdHJlZXQgYXJ0LCBtdXNpYywgcG9ldHJ5IG9yIGFueSBmb3JtIG9mIGFydCByZWFsbHkgaXMgYml0aW5nLiAKSSBsb3ZlIHRoZSBsaWJyYXJ5IGJlY2F1c2UgaXRzIGFtYXppbmcgdG8gZ28gYW5kIHNlZSBzbyBtYW55IGJvb2tzIGFsbCBpbiBvbmUgcGxhY2UhIEkgZG9udCByZWFsbHkgY2FyZSB0byByZWFkIHRoZW0gZGlnaXRhbGx5LCBhbmQgaSBncmV3IHVwIHdpdGggc3VjaCBhIGxpbWl0ZWQgc2VsZWN0aW9uIG9mIHRoaW5ncyB0byByZWFkLiBXZSBqdXN0IGRpZG50IGJ1eSBib29rcyB1bmxlc3MgdGhleSB3ZXJlIGJvb2tzIG15IG1vbSBoYWQgYWxyZWFkeSByZWFkIGFuZCB3YW50ZWQgdG8gcmVhZCBhZ2Fpbiwgd2hpY2ggd2VyZSBtb3N0bHkgc3RlcGhlbiBraW5nIGJvb2tzLiBTbyBnb2luZyB0byB0aGUgbGlicmFyeSB3YXMgYXdlc29tZSBiZWNhdXNlIGkgY291bGQgYWx3YXlzIGZpbmQgYSBidW5jaCBvZiBib29rcyBpIHdhbnRlZCwgYW5kIGlmIGkgd2FzbnQgaW50ZXJlc3RlZCBpbiBpdCBhZnRlciBhbGwsIGl0IHdhcyBzaW1wbHkgYSBtYXR0ZXIgb2YgdGFraW5nIGl0IGJhY2sgYW5kIGdldHRpbmcgYSBiZXR0ZXIgb25lLiBOb3csIHlvdSBjYW4gYWN0dWFsbHkgcmVxdWVzdCB0aGV5IGJ1eSB3aGF0IHlvdSBsb29raW5nIGZvciBpZiB0aGV5IGRvbnQgaGF2ZSBpdCwgYW5kIHRoZXkgdXN1YWxseSBkbyEKT2gsIEkga25vdywgU2FyYWggYW5kIHRoZSBGaXJzdCBEdWRlIGFyZSBkb2luZyBwcmV0dHkgd2VsbCB3aXRoIG1vbmV5LiBUaGV5IGhhdmUgYSBncmVhdCBob3VzZSwgYSBidW5jaCBvZiBzbm93IG1hY2hpbmVzLiBCdXQgbW9uZXkgaXMgdGhlIGxlYXN0IG9mIGl0IGluIEFtZXJpY2FuIHNvY2lldHkgIG9yIGFueSBvdGhlciBzb2NpZXR5IGZvciB0aGF0IG1hdHRlci4gVGhlcmUgdGhlIHdob2xlIGlzc3VlIG9mICJjbGFzcyIgYW5kICJwcmVzdGlnZSIgYW5kICJkaXN0aW5jdGlvbi4iIFBhbGluIGNhbWUgZnJvbSBzb21lIHByb3ZpbmNpYWwgdG93biBpbiBhIHByb3ZpbmNpYWwgc3RhdGUgdG8gYSBiaWcsIGJ1dCBwcm92aW5jaWFsLCBzdGF0ZSB1bml2ZXJzaXR5IGJhY2sgdG8gdGhlIHByb3ZpbmNpYWwgc3RhdGUuIFNoZSBuZXZlciBnYWluZWQgdGhlIHNvcnQgb2YgZWR1Y2F0aW9uYWwgYW5kIHNvY2lhbCBjYXBpdGFsIHRoYXQgd291bGQgYWxsb3cgaGVyIHRvIGtub3cgdGhhdCBNYXJ0aGEgVmluZXlhcmQgaXMgdGhlIHBsYWNlIHRvIGdvIHRvIG5ldHdvcmsgd2l0aCBtZWRpYSBlbGl0ZXMsIHRoZSBzb3J0IG9mIHBlb3BsZSB3aG8gd3JpdGUgbG9uZyBwaWVjZXMgZm9yIHRoZSBOZXcgWW9ya2VyIGFuZCB0aGluayBoYXJkIGFib3V0IHRoZSBpbXBvcnRhbnQgaXNzdWVzIG9mIG91ciBkYXkuIFBhbGluIGNvdWxkIG5ldmVyIGtub3cgdGhhdCBiZWNhdXNlIHNoZSBoYXMgYWJzb2x1dGVseSBubyBzb2NpYWwgb3IgZWR1Y2F0aW9uYWwgY2FwaXRhbC4KV2VsbCB3aGF0IEkgYW0gc2F5aW5nIGlzIHlvdSBjYW5ub3QgZ2V0IHRoZSBtZXNzYWdlIGRldGFpbHMgc2FtZSBnb2VzIGZvciBhbGwgdGhlIG51bWJlcnMuIEhvd2V2ZXIsIG1vc3QgcGhvbmVzIGFyZSBrZXB0IG9uIDEwMCUgbm93YWRheXMgYXMgdGhlIGJhdHRlcnkgbGlmZSBpcyBwcmV0dHkgZ29vZCBhbmQgdGhlIG5leHQgY2hhcmdlIGlzIG5ldmVyIGZhciBhd2F5LiAKJDE3Ljk5IEkgODkvMTAwQSBzYXZvdXJ5LCBzb2Z0IHJlZCBmcnVpdGVkIHJlZCB3aXRoIGFuIGFwcGVhbGluZyBub3NlIGFuZCBhbiBldmVuIG1vcmUgYXBwZWFsaW5nIHRleHR1cmUuIFRoZSBmcnVpdCBpcyBmcm9tIDE3ICB0byAzOSB5ZWFyIG9sZCBidXNoIHZpbmVzIHRoYXQgZ3JvdyBsaXR0bGUgbW9yZSB0aGFuIGEga2lsb21ldHJlIGZyb20gdGhlIE1lZGl0ZXJyYW5lYW4uIFRoZSBhdHRhY2sgaXMgcm91bmQsIGp1aWN5IGFuZCBmcmVzaCB3aXRoIHJpcGUgY2hlcnJ5IGZydWl0IGZsZWNrZWQgd2l0aCBsaWNvcmljZSBhbmQgZHJpZWQgaGVyYnMgYW5kIGEgcGVyZmVjdCBhbW91bnQgb2YgYWNpZGl0eS4gCkhlIGhhbmRlZCBoaW1zZWxmIGluIHRvIHBvbGljZSBvbiBNYXJjaCAxMSBhbmQgaGFzIGJlZW4gaW4gY3VzdG9keSBldmVyIHNpbmNlLiBJbiBjb3VydCwgQmxlaW11dGgncyBtb3RoZXJzYWlkIGhlciBzb24gaGFkIGJlZW4gaW4gdGhlIGdyaXBzIG9mIGFuIGljZSBhZGRpY3Rpb24gYXQgdGhlIHRpbWUgb2YgdGhlIGFzc2F1bHQuIApXZSBhcmUgdHdvIHByb2Zlc3Npb25hbCBtYXNzZXVycyBhbmQgcGVyZm9ybSB0cmVhdG1lbnRzIHRvIHJlbGF4IGFuZCBkZWZ1c2UgdGVuc2lvbiwgbXVzY2xlIHR3aXRjaGluZywgbmVjayBwYWluLCBhYmRvbWluYWwgdGVuc2lvbiwgYW54aWV0eSBhbmQgc3RyZXNzIG9yIGp1c3QgcmVsYXggYW5kIGJlIHNvb3RoZWQgYnkgZXhwZXJ0IGhhbmRzIHdpdGggb2lscyBhbmQgZXNzZW5jZXMuClRoZXJlIHdlcmUgdGhyZWUgam9icyBhbGwgbWF5YnIgMzAgbWludXRlcyBhd2F5IGF0IGRpZmZlcmVudCBDb3VudHkgTWFya2V0IHN0b3Jlcywgc28gSSBzY2hlZHVsZWQgb25lIGVhY2ggZm9yIHR1ZXNkYXkgdGhyb3VnaCB0aHVyc2RheS4gVGhlIHN1bmRheSBiZWZvcmUgSSBjYWxsZWQgYWhlYWQgdG8gbWFrZSBzdXJlIHRoZXkgcmVjZWl2ZWQgdGhlIHByb2R1Y3QgYW5kIG5vbmUgb2YgdGhlIHN0b3JlcyBoYWQuIApJbSBhIG1pbm9yaXR5IHdobyBncmV3IHVwIGluIGEgdG93biB0aGF0IHdhcyA5NiBwZXJjZW50IHdoaXRlLiB0aGUgaW50ZXJuZXQgb3IgYW4gYW5vbnltb3VzIGxldHRlci4KMSkgUHJlIG9yZGVyIHRpbWU6IENvbW11bml0eSBpcyBoeXBlZCBhZgpFbGxlIGx1aSBmYWl0IGxhIGJpc2UgZW4gbHVpIHNvdWhhaXRhbnQgYm9ubmUgbnVpdC4uIApOb3csIHlvdSBjYW4gb3JkZXIgb25saW5lIGFuZCBnZXQgZGVsaXZlcmVkIGF0IGhvbWUgYXMgd2VsbC4uIApGb3IgYSBzY2FudCAkMjMsIHlvdSBzZW5kIHlvdXIgcGhvdG9zIGluIGFuZCB0aGUgYXJ0aXN0IHByb2R1Y2VzIGEgb25lIGluY2ggcGVuZGFudCBmb3IgeW91Li4gCkZvciB0aGUgQW1lcmljYW5zLCB0aGUgbGVnaXNsYXRpb24gbWF5IGhhdmUgZXZvbHZlZCBpbnRvIGJlY29taW5nIGFuIGluc3RydW1lbnQgb2YgZGVtb2NyYXRpc2F0aW9uLCBhbiBpbnN0cnVtZW50IG9mIGltcGVyaWFsaXNtLCBvciBhbiBpbnN0cnVtZW50IG9mIGRldmVsb3BtZW50IGFuZCBpdCBtYXkgZXZlbiBiZSBwb3NzaWJsZSB0aGF0IGl0IGlzIGFsbCB0aHJlZSwgb3Igbm9uZSBvZiB0aGUgdGhyZWUuIEJ1dCBmb3IgUGFraXN0YW4sIHRoZSBiaWxsIGhhcyBhbHdheXMgYmVlbiBhYm91dCBvbmUgdGhpbmc6IG1vbmV5LiAKSSBqdXN0IGZpZ3VyZSB0aGF0IGlmIEkgY2FuIGdldCBpbiBhIGJpdCBvZiBwcmFjdGljZSB3aXRob3V0IHNwZW5kaW5nIHRvbyBtdWNoLCB0aGVyZSBub3QgbXVjaCByZWFzb24gbm90IHRvLiAKSSBoYWQgYSBjaG9pY2UuIApTZXh1YWxseSwgaXQgaXNuJ3QgcG9zc2libGUgdG8gIm92ZXJkbyIuIFJlbWVtYmVyIHdoYXQgYSAiZmFpbHVyZSIgbG9va3MgbGlrZTogaXQncyBhbiBvcmdhc20uIEkgbWVhbiwgYmVzdCBmYWlsdXJlIGV2ZXIsIHJpZ2h0PyBJdCdzIG5vdCBsaWtlIHlvdSBwdWxsZWQgYSBoYW1teSBvciBnb3QgaGVhdCBleGhhdXN0aW9uIG9yIGhhZCB0byB0YWtlIGlidXByb2ZlbiBmb3IgYSB3ZWVrLgpIYWpqaSBTYWxtYW4gd2FzIHN1bW1vbmVkLCBhbmQgaGUgd2hpcHBlZCBNdXJhZCdzIG5ha2VkIGJvZHkgYW5kIHRoZW4gbGV0IGhpcyBzZW50cnkgICBzaXggb2YgdGhlbSAgIGdhbmcgcmFwZSBoZXIgdW50aWwgc2hlIHdhcyB1bmNvbnNjaW91cy4gCkkgbWlzcyBmb29kIHNvIG11Y2ghISEhISBJIGNvbXBsYWluZWQgdG8gbXkgRG9jdG9yIHllc3RlcmRheSBiZWNhdXNlIGkganVzdCBzbyBzaWNrIG9mIHRoZSBjcmFwIEkgZWF0aW5nIGFuZCBpIGZlZWwgbGlrZSBDUkFQIGFuZCBzaGUgd2FzIHByZXR0eSBibHVudCAoZ29kIEkgbG92ZSBoZXIpIGFuZCBzYWlkIHdlIGRvbnQgZXhwZWN0IGEgbG90IGZyb20geW91IHJpZ2h0IG5vdy4gSWYgeW91IHdhbnQgdG8gbGl2ZSBvZmYgS3JhZnQgTWFjIE4gQ2hlZXNlIGZvciB0aGUgbmV4dCBmZXcgd2Vla3MgdGhhdHMgT0suIEp1c3Qgc3Vydml2ZS4gCkFuZ3J5IGN1c3RvbWVyIHdhbnRlZCB0aGUgYmxhY2sgb25lcyBmb3IgdGhlIHByaWNlIG9mIHRoZSBwaW5rIG9uZXMuIApUaGF0IGlzIHRoZSBzYW1lIG1lbnRhbGl0eSB0aGF0IGxlYWRzIHBlb3BsZSB0byBiZWxpZXZlIHdvbWVuIGNhbid0IGNvbW1pdCBzZXh1YWwgYXNzYXVsdCwgb3IgdGhhdCB0aGUgdW5kZXJhZ2UgbWFsZSB2aWN0aW1zIG9mIGFkdWx0IHdvbWVuIHNob3VsZCBmZWVsICJsdWNreSIgZm9yIGhvb2tpbmcgdXAgd2l0aCBhIGhvdCB0ZWFjaGVyLm1vbWRhZGltcG9wcHVuayAgNiBwb2ludHMgIHN1Ym1pdHRlZCAyNyBkYXlzIGFnb0dvaW5nIGJ5IHlvdXIgZWRpdCwgeW91IGJvdGggaGF2ZSBhIHByb2JsZW0gaGVhcmluZyAibm8uIiBXaGVuIHlvdSB0b2xkIGhlciB0byBzdG9wIHRpY2tsaW5nIHlvdSwgc2hlIHNob3VsZCd2ZSBzdG9wcGVkLiAKIldlbGwsIHlvdSBiZSB3cm9uZyIgc2FpZCBBbWlyIHNvIGNvbmZpZGVudGx5IGluIGEgcmVjZW50IGVwaXNvZGUsIGJhc2VkIG9uIG5vdGhpbmcgYnV0IGhvdCBhaXIgYW5kIHBvc3NpYmx5IHNvbWUgInByZWRpY3RpdmUiIGFuYWx5c2VzIHRoYXQgYXJlIGFib3V0IGEgZGltZSBhIGRvemVuIGFuZCBqdXN0IGFzIHNwbGl0IGFzIHRoZSBwb2xscy4uIApBc2lkZSBmcm9tIHRoYXQsIHRoZWlyIHN0YWZmIHdpbGwgYWxzbyBoZWxwIHRoZSBzdHVkZW50cyB0byBjcmVhdGUgZ29vZCByZXN1bWVzIGFuZCB3aWxsIHByb3ZpZGUgdHJhaW5pbmcgZm9yIHRoZWlyIHN0dWRlbnRzIGZvciBlYXN5IGpvYiBzZWVraW5nLi4gClRoZXkgbm90IGJlaW5nIGluc3RydWN0ZWQgdG8gYnkgdGhlIEZvdW5kYXRpb24gcGVyIHRoZWlyIGNvbnRyYWN0dWFsIG9ibGlnYXRpb24sIHRoZXkgc3dvcmUgdG8gc2VjdXJlLCBjb250YWluLCBhbmQgcHJvdGVjdCwgbm8gZGVzdHJveSwgZGVzdHJveSBkZXN0cm95Li4gClRoZSBwb2tlciBydW4gZ29lcyBhYm91dCAxMDAgbWlsZXMgdGhyb3VnaCBkZXNlcnQgYW5kIGhpZ2ggbW91bnRhaW4gcGFzc2VzIG9mIHVwIHRvIDksNTAwIGZlZXQgZWxldmF0aW9uIG92ZXIgQ2VkYXIgTW91bnRhaW4gd2l0aCBzZXZlcmFsIHN0b3BzIGFsb25nIHRoZSB3YXksIGVuZGluZyBhdCBNaWtlIFRhdmVybiwgOTAgVy4gSG9vdmVyIEF2ZW51ZSwgQ2VkYXIgQ2l0eS4gCkdyb2Nlcnkgc3RvcmVzIGRvIG5vdCBsYWJlbCBmaXNoIHRoYXQgYXJlIGxpa2VseSB0byBoYXZlIGEgaGlnaCBjb250ZW50IG9mIHRveGlucy4KTm93LCBvbiBvY2Nhc2lvbiwgd2hlbiB5b3UgYXJlIHBsYXlpbmcgd2l0aCBBbGwgQ2xheSBQb2tlciBDaGlwcywgeW91IG1heSBydW4gYWNyb3NzIHBva2VyIGNoaXBzIHRoYXQgYXJlIHBpbmsgaW4gY29sb3IuIERlc3BpdGUgdGhlIGZhY3QgdGhhdCB0aGV5IGRvIGV4aXN0LCB0aGV5IGFyZSBub3QgYXMgY29tbW9uIGFzIG90aGVyIGRlbm9taW5hdGlvbiBjb2xvcnMgYmVjYXVzZSBvZiB0aGUgZmFjdCB0aGF0IHRoZXkgZGVhbCB3aXRoIHdob2xlcyBhbmQgYSBoYWxmIGluIG1vbmV5IGFtb3VudC4gCkl0cyB0aGUgYmlnZ2VzdCBzdHJlc3Mgb2YgbXkgbGlmZSBhbmQgaGFzIHJ1aW5lZCBtdWNoIG1vcmUgdGhlbiBJIHJlYWxseSB0aG91Z2h0IHBvc3NpYmxlIGF0IHRoZSBiZWdpbm5pbmcuIApJc24gY3V0ZSB3aGVuIG91ciBjbG90aGVzIGFyZSBzbyBoeXBlciBnZW5kZXJlZCB0aGF0IGV2ZW4gZGlhcGVycyBjb21lIGluIGJsdWUgYW5kIHBpbmsuIFdvdWxkIGJlIGN1dGUgd291bGQgYmUgYSByZXZvbHV0aW9uICB3aGVyZSBwZW9wbGUgc2hvcHBlZCBvbiBib3RoIHNpZGVzIG9mIHRoZSBnZW5kZXJlZCBhaXNsZSBmb3IgY2xvdGhlcyB0aGF0IGRpZCBub3Qgc2NyZWFtIG1lc3NhZ2VzIG9mIGNvcnBvcmF0aXplZCBnZW5kZXIgcm9sZXMgcmVhZHkgbWFkZSBmb3Igb3VyIGNoaWxkcmVuIGFuZCBmb3IgdXMuIApXaW5kb3dzIDcgQWxsIGluIG9uZSBJU08gRnJlZSBEb3dubG9hZCAzMiAvIDY0IEJpdCAuIApTcGludGkgZGEgcXVlc3RvIEFtb3JlICwgZGEgcXVlc3RhIEZvcnphIGUgZGFsIGxvcm8gc29nbm8gZGkgY3JlYXJlIHVuYSBncmFuZGUgY29tdW5pdCBpbmRpcGVuZGVudGUgZWQgZWNvIHJlc2lkZW56aWFsZSBmb25kYXRhIHN1bGxhIGNvbmRpdmlzaW9uZSwgbGEgZnJhdGVsbGFuemEgZSBsICAgaW5pemlhdGEgbGEgbWlzc2lvbmUgZGkgQVJUIGVsZXZlbi4KQWxzbyBlbmRpbmcgdXAgdGFraW5nIHVwIDc1JSBvZiB0aGUgZW50aXJlIHJvb20gZm9yIGhlcnNlbGYgd2l0aCBob3cgc2hlIHJlYXJyYW5nZWQgdGhlIGZ1cm5pdHVyZSBiZWZvcmUgSSBldmVyIGFycml2ZWQuIApPbmNlIGFnYWluLCBjb21wb3N1cmUgaW50YWN0IEkgcGlja2VkIHVwIHRoZSBwaG9uZSBhbmQgaW4gYSB2ZXJ5IHNvYmVyIHRvbmUgc2FpZCwgIm9rLiIgVGhlIHJlcCBzYWlkLCAid2VsbCwgSSB3aXNoIHNvbWVvbmUgd291bGQgdGVsbCBtZSB0aGUgam9rZSEgSSB3YW50IHRvIGxhdWdoLCB0b28hIiBBbmQgdGhhdCBzZW50IG1lIGludG8gYW5vdGhlciBmaXQgd2hpbGUgbXkgZnJpZW5kIGtlcHQgbW91dGhpbmcgIndoYXQ/IFdoYXQ/IiBTbywgSSB0cmllZCBleHBsYWluaW5nLCAic2hlIHNzc3NhYWFhaWQuIFdhbnRzIHRvIGtub3cgam9rZSB0b28uIiBTbyBub3cgdHdvIG9mIHVzIGFyZSBkb3duLiAKT24gU3VuZGF5LCBNYXJjaCA2LCAyMDE2IGF0IHRoZSBIZW5yeSBXYWxzZXIgRnVuZXJhbCBIb21lICwgNTA3IEZyZWRlcmljayBTdHJlZXQsIEtpdGNoZW5lciwgNTE5IDc0OSA4NDY3LiBDcmVtYXRpb24gdG8gZm9sbG93LiBBcyBleHByZXNzaW9ucyBvZiBzeW1wYXRoeSwgZG9uYXRpb25zIHRvIHRoZSBLVyBIdW1hbmUgU29jaWV0eSB3b3VsZCBiZSBhcHByZWNpYXRlZCBieSB0aGUgZmFtaWx5IChjYXJkcyBhdmFpbGFibGUgYXQgdGhlIGZ1bmVyYWwgaG9tZSkuLiAKUG9rZXIsIHRvIHBhcmFwaHJhc2UgRGFuaWVsIENyYWlnIGluICJDYXNpbm8gUm95YWxlLCIgaXNuJ3QgYWJvdXQgeW91ciBoYW5kOyByYXRoZXIgaXQncyBhYm91dCB0aGUgb3RoZXIgcGVvcGxlIGF0IHlvdXIgdGFibGUuIElmIHlvdSBjYW4gcmVhZCBhIHBlcnNvbidzIGZhY2UgYW5kIGJvZHkgbGFuZ3VhZ2UsIHRoZW4geW91IGNhbiB0ZWxsIHRoZWlyIHJlYWN0aW9ucyB0byB0aGUgY2FyZHMgaW4gdGhlaXIgaGFuZHMuIFlvdSBtYXkgbm90IGtub3cgZXhhY3RseSB3aGF0IGNhcmRzIHRoZXkgaGF2ZSwgYnV0IHlvdSBjYW4gcmVzdCBhc3N1cmVkIHlvdSBrbm93IGhvdyBnb29kIG9yIGJhZCB0aGV5IGFyZSBiYXNlZCBvbiB0aGVzZSB0ZWxsaW5nIHNpZ25zLCByZWZlcnJlZCB0byBzaW1wbHkgYXMgdGVsbHMuIApPbmxpbmUgcG9rZXIgYWxsb3dzIHBsYXllcnMgdG8gcGxheSBkaWZmZXJlbnQga2luZHMgb2YgZ2FtZXMuIExpa2UgVGV4YXMgSG9sZCdlbSwgT21haGEsIFN0dWQsIFJhenosIEhvcnNlLCBvciB2aXJ0dWFsbHkgYW55IG90aGVyIGdhbWUgeW91IGNhbiB0aGluayBvZiwgdGhlIG9ubGluZSBwb2tlciBzaXRlcyBwcm92aWRlcyB5b3UuCkxlIG1vbWVudCBkZSBsYSBuYWlzc2FuY2UgYXBwYXJhdCBkb25jIHByaW1vcmRpYWwuIERzIGxvcnMsIHRvdXQgaG9tbWUgYWNxdWlyZSBsYSBwZXJzb25uYWxpdCBqdXJpZGlxdWUgYXUgbW9tZW50IG8gaWwgbmFpdC4gCihNeSBsYXN0IGNvbXBhbnkgYWN0dWFsbHkgbWFkZSB0aGlzIGEgcnVsZSBiZWNhdXNlIHRoZSBib3NzIGhhdGVkICBhbmQgdGhvdWdodCBpdCB3YXMgcnVkZSB0byBoaW0gcGVyc29uYWxseSB0byB1c2UgaXQuKSBTaGUgYWxzbyBzYWlkIHRoYXQgIGlzIHByZXR0eSBtdWNoIGFsd2F5cyBydWRlIGFuZCBlc3BlY2lhbGx5IHNob3VsZG4ndCBiZSB1c2VkIHRvd2FyZHMgdmVuZG9ycywgZGVsaXZlcnkgcGVvcGxlLCBhbmQgb3RoZXJzIHdobyBoYXZlIGEgc2VydmljZSBjb25uZWN0aW9uIHRvIHRoZSBjb21wYW55LCBldmVuIHRob3VnaCB0aGV5IGFyZSB0ZWNobmljYWxseSBsb3dlciBpbiB0aGF0IHNpdHVhdGlvbi4gCkkgd291bGQgcGxhbiBmb3IgYSByZXRha2UgaG9uZXN0bHkuLiAKU2NvcmU6IDI3LiBEdWguClRoZSB0ZWFjaGVyIHNhaWQgdGhhdCAgaXMgZGVmaW5pdGVseSB0aGUgcHJlZmVycmVkIGFuZCBwb2xpdGUgd2F5IHRvIHNheSBnb29kYnllIGluIGJ1c2luZXNzIHNldHRpbmdzLiBTaGUgc2FpZCB0aGF0ICBpcyBvdmVydXNlZCBhbmQgbm90IHBvbGl0ZSBhbmQgc2hvdWxkIG9ubHkgYmUgdXNlZCBhcyBhIHJlc3BvbnNlIHRvICBhbmQgb25seSB3aXRoIHBlb3BsZSBpbiB0aGUgc2FtZSBncm91cCBhbmQgb24gdGhlIHNhbWUgbGV2ZWwsIGFuZCB0aGF0ICBzaG91bGQgYmUgdXNlZCB3aXRoIGNvd29ya2VycyB3aG8gYXJlIGxlYXZpbmcgYXQgdGhlIHNhbWUgdGltZSBvciBmcm9tIGEgZGlmZmVyZW50IGdyb3VwLiAKRG9lcyB0aGlzIGFjdHVhbGx5IGhhcHBlbj8gSWYgaSBsZXZlbGxpbmcgSSB1c3VhbGx5IGp1c3QgaGF2ZSBwYXJrcyBhbmQgcmVjIG9yIHNvbWUgb3RoZXIgc2hvdyBvbiBhIHNlY29uZCBzY3JlZW4gYW5kIGp1c3QgYmxpbmRseSBkcHMgbXkgd2F5IHRocm91Z2gsIHJhcmVseSB3aWxsIHNlZSBhbnlvbmUgc2F5IGFueXRoaW5nIHRvIGVhY2ggb3RoZXIgZXhjZXB0IGZvciBhdCB0aGUgZW5kLCBvciBnZXR0aW5nIG1hZCBhdCBwZW9wbGUgZm9yIHdpcGluZyB0byB0aGF0IEZFRUwgVEhFIEVBUlRIIEJFTkVBVEggWU9VIGNhdGEgZHVuZ2VvbiBib3NzLiAKQmVmb3JlIHlvdSBzdGFydCBzdGF0aW5nICJ3aGF0IGFib3V0IHRoZSBlY29ub215IiBpdCdzIGVhc3kgdG8gc2VlIFRydW1wIGlzIHNlbGxpbmcgb3VyIGxvbmcgdGVybSwgZGVidCwgZm9yIHNob3J0IHRlcm0gZWNvbm9teS4gCkNvYXN0IEd1YXJkIFJlc2N1ZXMgVHdvIFBlb3BsZSBBZnRlciBWZXNzZWwgU2lua3MgMjU2IE1pbGVzIE9mZiBLZXkgV2VzdEEgQ29hc3QgR3VhcmQgYWlyY3JldyByZXNjdWVkIHR3byBwZW9wbGUgYWZ0ZXIgdGhlaXIgYm9hdCBjYXBzaXplZCBhbmQgc2FuayAyNTYgbWlsZXMgd2VzdCBvZiBLZXkgV2VzdCBsYXRlIG9uIFdlZG5lc2RheS4KRGllcyBtYWcgZnIgZGFzIGVpbmUgRm9ydCBLbm94IiwgZGFzIEFtZXJpa2FzIEdvbGRyZXNlcnZlbiBiZWhlcmJlcmd0LCBhdWNoIHp1dHJlZmZlbi4gCkkgaGF2ZSBzb21lIG9mIGhpbSB3b3JrZWQgb3V0LiBJIGtub3cgaGUgaXMgbWFsZS4gSSBrbm93IGhlIGxvdmVzIHRvIGtpbGwgcGVvcGxlIGp1c3QgYmVjYXVzZSBoZSBjYW4uIEkgZGVjaWRlZCB0aGF0IGhpcyBkYXkgam9iIHNob3VsZCBiZSBwbHVtYmluZyBhbmQgaGVhdGluZyBiZWNhdXNlIHRoYXQgbWFrZXMgaGltIGEgY29tbW9uLCBhdmVyYWdlIEpvZSB0aGF0IGZpdHMgd2l0aG91dCBiZWluZyB0b28gbm90aWNlZC4gSXQgYWxsb3dzIGhpbSB0byBwbGFudCBidWdzIGluIHBlb3BsZXMgaG91c2VzIGJlY2F1c2Ugd2hvIHdvdWxkIHRoaW5rIG9mIGxvb2tpbmcgaW4gdGhlaXIgaGVhdGluZyBkdWN0cyBmb3IgYSBjYW1lcmE/IE9yIGV2ZW4gY2hlY2sgdGhlIHBsdW1iaW5nLgpJIHN0aWxsIGZpZ2h0aW5nIHRoZSBkZWh5ZHJhdGlvbi9kcnkgbW91dGguIApUaGlzIGJvb2ssIHdyaXR0ZW4gYnkgUGF5UGFsIGNvIGZvdW5kZXIgYW5kIGFuIGVhcmx5IEZhY2Vib29rIGludmVzdG9yLCBpcyBhbiB1cGRhdGVkIHZlcnNpb24gb2YgdGhlIHBvcHVsYXIgc2V0IG9mIG9ubGluZSBub3RlcyB0aGF0IHdlcmUgdGFrZW4gYnkgTWFzdGVycyBkdXJpbmcgYSBjbGFzcyBvbiBzdGFydCB1cHMgdGhhdCB3YXMgdGF1Z2h0IGJ5IFBldGVyIFRoaWVsIGF0IFN0YW5mb3JkIFVuaXZlcnNpdHkgaW4gMjAxMi4gVGhlIGJvb2sgZXhwbGFpbnMgaG93IHByb2dyZXNzIGNhbiBiZSBhY2hpZXZlZCBpbiBhbnkgaW5kdXN0cnkgYW5kIHRoYXQgY29tZXMgZnJvbSBsZWFybmluZyB0aGUgbW9zdCBpbXBvcnRhbnQgc2tpbGw6IGxlYXJuaW5nIGhvdyB0byB0aGluayBmb3IgeW91cnNlbGYuLiAKQSBtb3JlIHN1YnRsZSBzaWduIG9mIGlsbG5lc3MgaXMgd2hhdCB2ZXRlcmluYXJ5IHRleHRzIGNhbGwgImxldGhhcmd5LiIgKEluIHNpbXBsZSB0ZXJtcywgaXQgbWVhbnMgbGF6aW5lc3Mgb3Igc2x1Z2dpc2huZXNzLikgQSBkb2cgd2hvJ3MgbGV0aGFyZ2ljIG1pZ2h0IHNob3cgbm8gaW50ZXJlc3QgaW4gZ29pbmcgZm9yIGEgd2FsaywgZXZlbiB0aG91Z2ggdGhhdCdzIHVzdWFsbHkgdGhlIGhpZ2hsaWdodCBvZiBoZXIgZGF5LiBTaGUgZG9lc24ndCB3YW50IHRvIHBsYXksIG5vdCBldmVuIGhlciBmYXZvcml0ZSBnYW1lIG9mIGZldGNoIHRoZSB0ZW5uaXMgYmFsbC4gTm93LCBzb21ldGltZXMgbGV0aGFyZ3kgY2FuIGJlIGNoYWxrZWQgdXAgdG8gYSBob3QgZGF5LCBiZWluZyBzb3JlIGFmdGVyIGFuIGV4dHJhIGxvbmcgd2Fsaywgb3IganVzdCBmZWVsaW5nIG91dCBvZiBzb3J0cy4gCkkgZmluZCBMb25nIFN1biB0byBhY3R1YWxseSBiZSBwcmV0dHkgcmVmcmVzaGluZyBhZnRlciBOZXcgU3VuLiBJIHNheSBibGFzdCB0aHJvdWdoIExvbmcgU3VuIHRoZW4gU2hvcnQgU3VuIHJpZ2h0IGFmdGVyLiBGd2l3IFNob3J0IFN1biBpcyBteSBmYXZvcml0ZSwgYW5kIHlvdSBuZWVkIHRvIHJlYWQgTFMgZmlyc3QgZm9yIHRoYXQuIApJIGhhdmUgYSBnaWFudCBjb21pYyBib29rIHRhdHRvbyB3aXRoIG9yaWVudGFsIGNoYXJhY3RlcnMgKHJlYWQgbmluamFzKSBhbmQgSSB0aGVtZWQgaXQgb2ZmIG9mIGEgSmFwYW5lc2Ugd29vZGJsb2NrLCBhbmQgdGhvc2UgdGVuZCB0byBoYXZlIGthbmppIGluIHRoZSBiYWNrZ3JvdW5kIHNvIEkgd2FudGVkIHRoYXQgdG9vLCBidXQgSSBkaWRuIHdhbnQgaXQgdG8gc2F5IGEgZGFtbiB0aGluZy4gCkxFTEFORFlFRSB1Ck1hbmFnZWFibGUgaGFpcmN1dHMgZm9yIG1lZGl1bSBsZW5ndGggaGFpciBjYW4gYmUgZXhwbG9yZWQgaW4gc2ltcGxlIGJsb3cgZHJ5IG1ldGhvZHMuIApBIGNvbXB1dGVyIG1lbW9yeSBjaGlwIGlzIHRoZSBkZXZpY2UgdGhhdCByZXBsYWNlZCAoaW4gdGhlIGVhcmx5MTk3MHMpIHRoZSBtYWduZXRpYyBjb3JlIG1lbW9yeSBpbiBjb21wdXRlcnMgKHRoYXQgaGFkIGJlZW4gdXNlZHNpbmNlIHRoZSBlYXJseSAxOTUwcykuIENvbXB1dGVyIG1lbW9yeSAob2YgYW55IHR5cGUpIHNlcnZlcyB0aGUgZnVuY3Rpb24gb2Ygc3RvcmluZ2luc3RydWN0aW9ucyBhbmQgZGF0YSBpbnNpZGUgdGhlIGNvbXB1dGVyIHRoYXQgaXQgd2lsbCBuZWVkZnJlcXVlbnQgYW5kIHJhcGlkIGFjY2VzcyB0by4gKEZ1bGwgQW5zd2VyKQpEbyBub3QgdXNlIGNvdHRvbiBzd2FicywgYmVjYXVzZSBvbmUgc2xpcCBjb3VsZCBwdW5jdHVyZSBhbiBlYXJkcnVtLiAKVGhlIEh1ZGEgQmVhdXR5IE5ldyBOdWRlcyBwYWxldHRlLiBJIHdvdWxkIE5FVkVSIEVWRVIgYmUgY2F1Z2h0IGRlYWQgaW4gcGluayBvciBwdXJwbGUgZXllc2hhZG93LiAKTXkgc3VyZ2VvbiByZWNvZ25pemVkIG15IHN5bXB0b21zIGFzIGJlcmliZXJpLCB3aGljaCBpcyBiYXNpY2FsbHkgdW5oZWFyZCBvZiBpbiBkZXZlbG9wZWQgY291bnRyaWVzIGJlY2F1c2Ugb2Ygb3VyIGFjY2VzcyB0byBlbnJpY2hlZCB3aGl0ZSBmbG91ciBhbmQgdmFyaWV0eSBvZiBmb29kcy4gCkNvdW50aW5nIGNhcmRzIGRvZXNuIEdFTkVSQVRFIGFueSBhZHZhbnRhZ2UsIGl0IGxldHMgeW91IHNwb3Qgb25lIElGIGl0IGNvbWVzCk9ubGluZSBwb2tlciByb29tcyBtYWtlIGl0IGVhc2llciBmb3IgdGhlIGF2ZXJhZ2UgcGVyc29uIHRvIHBsYXkgcG9rZXIgd2l0aG91dCBoYXZpbmcgdG8gd2FnZXIgdmFzdCBzdW1zIG9mIG1vbmV5LCBhbmQgdGhpcyBpcyBlc3BlY2lhbGx5IHRydWUgb2YgdGhlIGZyZWUgb25saW5lIHBva2VyIHJvb21zLiBXaGF0ZXZlciB5b3VyIGdhbWUgaXMgdGhvdWdoLCBiZSBpdCBmcmVlIG9yIG5vdCwgeW91IHdpbGwgZmluZCB0aGF0IGtub3dpbmcgc29tZSBvbmxpbmUgcG9rZXIgc3RyYXRlZ3kgYW5kIGdhbWUgcGxheXMgd2lsbCBiZSBvZiBncmVhdCBoZWxwIHRvIHlvdS4gCkFuZHJldyBNdW1jaWUsIG9uZSBvZiB0aGUgYWN0aXZpc3RzIG9uIGJvYXJkIG9uZSBvZiB0aGUgYm9hdHMsIHRvbGQgQWwgSmF6ZWVyYSBoZSB3YXMgIm92ZXJqb3llZCIgYnkgdGhlaXIgc3VjY2VzcyBpbiByZWFjaGluZyBHYXphJ3Mgc2hvcmUuCkxlcyBibG9ncyBzZSBzb250IG11bHRpcGxpcy4gT24gdHJvdXZlIGRlIHRvdXQuIERvbnQgYmVhdWNvdXAgZGUgc2l0ZSBwZXJzb25uZWwgYXZlYyBwaG90b3MuIApJIGJldCB5b3UgcGVvcGxlIExPT09PT1ZFIEFvQyBhbmQgQ29yeSBCb29rZXIgbG1mYW8uClRoZSBtZXRob2RzIHVzZWQgdG8gcmFpc2UgcGlncyB0b2RheSBhcmUgdGhlIG1vc3QgZWZmaWNpZW50IHdheXMgdG8gbWluaW1pemUgbG9zcyBhbmQgcHJvZHVjZSBhIHNhZmUgYW5kIGhlYWx0aHkgcHJvZHVjdC4gCkkgdXNlZCB0byBwbGF5IGEgbG90IG9mIG9ubGluZSBwb2tlciBhbmQgb25lIHRoaW5nIEkgbG92ZSBhYm91dCBwb2tlciBpcyBob3cgbWFueSBsZXNzb25zIGl0IHRlYWNoZXMgeW91IGlmIHlvdSB0aGluayBhYm91dCBpdCBpbiB0aGUgcmlnaHQgZnJhbWUgb2YgbWluZC4gTnVtYmVyIG9uZSB0aGluZyB0byBsZWFybiBhYm91dCBwb2tlci9pbnZlc3RpbmcgaXMgYWxsIG1vbmV5IHlvdSBoYXZlIG9uIHRoZSB0YWJsZSBpcyBhdCByaXNrLiAKIENoYW4gaXMgdXN1YWxseSB1c2VkIGZvciBnaXJscyBidXQgaXQgY2FuIGp1c3QgYXMgZWFzaWx5IGJlIHVzZWQgZm9yIGJveXMsIHZpY2UgdmVyc2EgZm9yICBrdW4gKHdoaWNoIGlzIHVzdWFsbHkgdXNlZCBmb3IgYm95cywgYnV0IGNhbiBlYXNpbHkgYmUgcHV0IG9uIGEgZ2lybHMgbmFtZSB0b28pLiAKVHlwZXMgb2YgUG9rZXIgSG9tZSBHYW1lIFBsYXllcnMgdG8gV2F0Y2ggT3V0IEZvcjEuIFRoZSBCZXN0ICAgdGhpcyBndXkgaXMgdGhlIGhhbmRzIGRvd24sIGJlc3QgcGxheWVyIGF0IHlvdXIgdGFibGUuIE91cnMgaXMgYSBmb3JtZXIgZXhlY3V0aXZlIHdobydzIGluIGhpcyA2MCdzIGFuZCByZXRpcmVkLiAKT25lIHRoaW5nIHRoYXQgYmVjb21lIG1vcmUgYXBwYXJlbnQgYXMgc29mdHdhcmUgbGlrZSBzbm93aWUgYW5kIHNvbHZlcnMgdGFrZSBvdmVyIGlzIHRoYXQgd2hlbiB0aGVyZSBzdGlsbCBhIGxvdCBvZiBjYXJkcyB0byBjb21lIChha2EgcHJlZmxvcCkgaXMgdGhhdCB0aGUgbGluZSBiZXR3ZWVuICJibHVmZnMiIGFuZCAidmFsdWUiIGdldHMgdmVyeSBibHVycmVkLiAKTXkgcHJlZ25hbmN5IHdhcyBhbiBJVkYgb25lLiBXZSB3ZW50IHRocm91Z2ggaGVsbCBhbmQgYmFjayBmb3Igb3VyIGxpdHRsZSBtaXJhY2xlLiAKU29tZSBoYXZlIHBvaW50ZWQgdG8gQXRsYW50aWMgQ2l0eSBhcyBhbiBleGFtcGxlIG9mIG92ZXJzYXR1cmF0aW9uIG9mIGNhc2lub3MgaW4gYSBzbWFsbCBtYXJrZXQuIEZpdmUgb2YgdGhlIE5ldyBKZXJzZXkgc2Vhc2lkZSByZXNvcnQgdG93biAxMiBtYWpvciBjYXNpbm9zIGhhdmUgY2xvc2VkIGluIHRoZSBwYXN0IHR3byB5ZWFycy4gVGhlIFRydW1wIFRhaiBNYWhhbCwgd2hpY2ggY2xvc2VkIHRoaXMgbW9udGgsIGlzIHRoZSBsYXRlc3QgY2FzdWFsdHkuIApDbGljayBvbiB5b3VyIGNhc2lubyBjaGlwcyB0byBjaG9vc2UgaG93IG11Y2ggdG8gYmV0LCBjbGljayBvbiB0aGUgQW50ZSBjaXJjbGUgdG8gcGxhY2UgeW91ciBiZXQgKG9wdGlvbmFsbHkgeW91IGNhbiBhbHNvIGNsaWNrIG9uIHRoZSBBQSBzaWRlIGJldCkuIEVhY2ggdGltZSB5b3UgY2xpY2ssIHlvdXIgYmV0IHdpbGwgaW5jcmVhc2UgYWNjb3JkaW5nIHRvIHRoZSB2YWx1ZSBvZiB0aGUgY2FzaW5vIGNoaXBzIHlvdSBzZWxlY3RlZC4gCkkgbWVhbiwgSSByZWFkIHBsZW50eSBvZiBhcnRpY2xlcyBidXQgSSBkaXNjb3ZlciBuZXcgdGhpbmdzIGV2ZXJ5IGRheS4gVGhlcmUgYSBmZXcgQXNrV29tZW4gdGhyZWFkcyBldmVyeSBvbmNlIGluIGEgd2hpbGUgdGhhdCBoYXZlIGJlZW4gaW1tZW5zZWx5IGV5ZSBvcGVuaW5nIGVhY2ggdGltZS4gCg==|<---