--->|Tm90IGp1c3Qgc2h5aW5nIGF3YXksIGZlZWxpbmcgYmFkIGFib3V0IHlvdXJzZWxmIGFzIHlvdSB0aGluayBvZiBlYWNoIGluY2lkZW50LiBIb3cgeW91IHNjcmV3ZWQgdXAgYmlnIHRpbWUgKHlvdSBwcm9iYWJseSBkaWRuIGFuZCBvaCBnb2QgSSB3aXNoIEkgbmV2ZXIgc2VlIHRoYXQgcGVyc29uIGFnYWluICAgSSB3YXMgc3VjaCBhIGZvb2wuLiAKUHJpbnQ6IERpZmZlcmVudCB0eXBlZmFjZXMuIFNob3VsZCBiZSBjbGVhcmx5IG1hcmtlZCAic3BvbnNvcmVkIiBvciAiUHJvZHVjZWQgYnkiIGF0IHRvcCBvZiB0aGUgcGFnZS9jb3B5IGJsb2NrLiBJZiBwYXJ0IG9mIHBhZ2UsIHNob3VsZCBiZSBzZXBhcmF0ZWQgZnJvbSBlZGl0b3JpYWwgYnkgZG91YmxlIHJ1bGVzLgpXZSBoYWQgYSBmZXcgcGVvcGxlIG1vdmluZyBvdXQgYW5kIG90aGVycyBtb3ZpbmcgaW4gc28gaXQgY291bGQganVzdCBiZSB0ZW1wb3JhcmlseSBzdG9yZWQgdGhlcmUsIGJ1dCB5b3UgdGhpbmsgdGhlIG93bmVyIHdvdWxkIGF0IGxlYXN0IHB1dCBhIGNvdmVyIG92ZXIgaXQgb3Igc29tZXRoaW5nLCBpbnN0ZWFkIG9mIGxlYXZpbmcgaXQgZXhwb3NlZCB0byB0aGUgZWxlbWVudHMgZm9yIHdlZWtzLiBJIHN0YXJ0aW5nIHRvIGdldCBhIGxpdHRsZSBzdXNwaWNpb3VzIHRoYXQgaXQgbWlnaHQgYmUgc3RvbGVuIGFuZCBoYXMganVzdCBiZWVuIGR1bXBlZC9zdG9yZWQgdGhlcmUgd2hlcmUgaXQgY2FuIGJlIHNlZW4gZnJvbSB0aGUgcm9hZCwgaXQgYSBwcmV0dHkgc21hbGwgY29tcGxleCAoNiB1bml0cykgYW5kIG5vYm9keSBoZXJlIHJpZGVzIGEgbW90b3JjeWNsZSwgdW5sZXNzIGl0IG9uZSBvZiB0aGUgbmV3IHBlb3BsZSAoZXZlbiB0aG91Z2ggZXZlcnlvbmUgaGFzIHRoZWlyIG93biBnYXJhZ2Ugc28gc3RvcmluZyBvdXRzaWRlIGRvZXNuIG1ha2Ugc2Vuc2UpLiBJdCBhbHNvIGEgYml0IGFubm95aW5nIGJlY2F1c2UgaXQgYmxvY2tpbmcgcHJvcGVyIGFjY2VzcyB0byBiaW5zIHRvby4uIApXaGF0IGNvbmZ1c2luZyBhYm91dCB0aGUgYnVzaW5lc3MgcmVsYXRpb25zaGlwcz8gQ2FubmFoZW1wIHByb2R1Y3RzIGFyZSBvbmUgb2YgTWVkbWVuIHRvcCBzZWxsaW5nIENCRCBsaW5lcy4gSXQgc291bmRzIGxpa2UgdGhleSBzZXR0aW5nIHVwIHRvIHNlbGwgcHJvZHVjdHMgd2l0aCBvdGhlcnMuIEluIHJlZ2FyZHMgdG8gUGxhbmV0IDEzIGRlc3Ryb3lpbmcgY29tcGV0aXRpb24uIApCdXQgbW9yZSBwZW9wbGUgYXJlIGxpdGVyYWxseSBqdXN0IGEgYm9hdCByaWRlIGF3YXkhLiAKSW4gdGVybXMgb2YgdGhlIHlvdW5nIGd1bnMsIEplZmYgSG9mZm1hbiBhbmQgUGV0ZXIgTGFtYmVydCBib3RoIGNhbWUgaW50byBTY290dHNkYWxlIHdpdGggYSBodWdlIG9wcG9ydHVuaXR5IGluIGZyb250IG9mIHRoZW0gd2l0aCB0aGUgTm8uIDUgc3BvdCBpbiB0aGUgUm9ja2llcycgcm90YXRpb24gdXAgZm9yIGdyYWJzLiAKSWYgeW91IGFtb25nIHRoZSBtYXNzaXZlIGNyb3dkIHR1cm5pbmcgb3V0IGZvciBTeWRuZXkgTWFyZGkgR3JhcyBwYXJhZGUgdGhpcyB3ZWVrZW5kLCB5b3UgbWlnaHQgbm90aWNlIGEgc2xpZ2h0LCBwZXJoYXBzIGxlc3Mgc3BhcmtseSBkaWZmZXJlbmNlIGNvbXBhcmVkIHdpdGggcHJldmlvdXMgeWVhcnMuCjIwMDAgMjAwMSBrcml6aSBzYW5pcmltIGJpemltIG5lc2lsaW4gKDkwIHNvbnJhc2kpIHppaG5pbmRlIGNvayB5ZXIgZXRtaXlvci4gSW5zYW5sYXIgMjAwMWRlbiBzb25yYWtpIGdvcmVjZSByYWhhdCBkb25lbWRlIEFLUCBpa3RpZGFyaSBvbGR1Z3VuZGFuLCBvemVsbGlrbGUgaXNjaSBrZXNtaSBidSBpa3RpZGFyaSBvIGtyaXplIGRvbnVsbWV5ZWNlZ2luaW4gZ2FyYW50aXNpIG9sYXJhayBnb3J1eW9yLiAyMDAxIGtyaXppbmluIHNpZGRldGluaW4gc3UgYW5raSBkdXJ1bWxhIGthcnNpbGFzdGlyYWxhbWF5YWNhayBrYWRhciBrb3R1IG9sZHVndW51IGRhIGJlbGlydG1la3RlIGZheWRhIHZhci4KSGFuZHMgYW5kIEFybXM6IEFzIG9uZSBhc3R1dGUgcG9saWNlIG9mZmljZXIgc2FpZCAgIGZlZXQgbmV2ZXIga2lsbGVkIGFueW9uZS4gCiJJIHdvdWxkIHNheSAoUGxhbnQpIGhhcyBoaXMgcG9rZXIgZmFjZSBvbjsgaGUncyBjb21tdW5pY2F0aW5nIHRvIEdNIHRocm91Z2ggdGhlIHByZXNzIHRoYXQgaGUncyB3aWxsaW5nIHRvIGxldCB0aGlzIGdvLCIgRGVWaXRvIHNhaWQuIApBIGNsaWVudCBoYW5kcyBtZSBhIG1hc3NpdmUgQ1NWIGZpbGUgdGhhdCBuZWVkcyB0byBiZSBpbXBvcnRlZCB2aWEgb3VyIHNvZnR3YXJlIGZyb250ZW5kIGltcG9ydC4gSSBuZWVkIHRvIGNoYW5nZSBhIGNvdXBsZSBoZWFkZXIgbmFtZXMuIApBdCBXaXJlY2x1YiB5b3UgY2FuIGpvaW4gZnJlZSBvbmxpbmUgY2hhdCByb29tcyBhbmQgY2hhdCB3aXRoIGZyaWVuZHMsIG1lZXQgbmV3IHBlb3BsZSBhbmQgbW9yZS5UaGUgYWJpbGl0eSB0byBzZWFyY2ggZm9yIGEgZGF0ZSBvciBtYXRlIGJ5IHZpcnR1YWxseSBhbnkgY2hhcmFjdGVyaXN0aWMgb3IgZGlzdGFuY2UgaXMgYSBodWdlIGFkdmFudGFnZSB3aGVuIGl0IGNvbWVzIHRvIGZpbmRpbmcgYSBkYXRlLiAKT25lIHNpemUgZml0cyBhbGwuIEluIHRoaXMgc2Vuc2UsIGl0IGlzIGFuIHVudXN1YWxseSAiZGVtb2NyYXRpYyIgcHJvamVjdCBzaW5jZSBubyBvbmUgbmVlZCBldmVyIGxvb2sgImRpZmZlcmVudCIgb3IgInVnbHkiIGFnYWluLiAKRXZlbiBhcyBhIGZvcmVpZ25lciBpdCB3YXMgYSBoZWxsIG9mIGEgc2hvY2tpbmcgdGhpbmcgdG8gd2FrZSB1cCB0by4gCldoeSB0aGlzPyBMZXQgc2F5IGZvciB0aGUgc2FrZSBvZiB0aGUgYXJndW1lbnQgdGhhdCBpdCBpcyBwcm92ZW4gdGhhdCBUcnVtcCBkaWQgY29uc3BpcmUgdGhpcyB3YXk7IGhvd2V2ZXIsIGZvciBvbmUgcmVhc29uIG9yIG90aGVyIHN1Y2ggYWN0cyBkaWQgbm90IGNoYW5nZSBzaWduaWZpY2FudGx5IHRoZSBvdXRjb21lIG9mIHRoZSBlbGVjdGlvbnMsIG1lYW5pbmcgdGhhdCBoZSB3b24gbGVnaXRpbWF0ZWx5IGluIHNwaXRlIG9mIGl0IGFsbC4gV2h5IHdvdWxkIHlvdSBiZSBvayB3aXRoIHRoaXM/IEV2ZW4gaWYgaGUgd2FzIGVsZWN0ZWQgbGVnaXRpbWF0ZWx5LCBoZSBzdGlsbCBiZSBhIG1vbnN0cm91c2x5IHVuZXRoaWNhbCBmZWxvbiB3aG8gcHV0IGluIGplb3BhcmR5IEFtZXJpY2EgaW50ZXJlc3RzIGJ5IHBvdGVudGlhbGx5IGdpdmluZyBsZXZlcmFnZSB0byBhIGZvcmVpZ24sIG1vc3RseSBob3N0aWxlIHN1cGVycG93ZXIgdG8gaW5zdGFsbCBhIHByZXNpZGVudCBmcmllbmRseSB0byB0aGVtLiBJZiB0aGUgYWN0aW9uIGNvbW1pdHRlZCB3YXMgbm90IHNldmVyZSBlbm91Z2ggdG8gYWN0dWFsbHkgaW5mbHVlbmNlIHRoZSBlbGVjdGlvbiByZXN1bHRzLCB0aGVuIHRoZXJlIGlzIGEgZ29vZCBjaGFuY2UgKGFsdGhvdWdoIG5vdCBjZXJ0YWluKSB0aGF0IHdoYXRldmVyIHdhcyBkb25lIHdhcyBtaW5vciBvciBjb21tb25wbGFjZS4KQXMgSSBnZXQgbW9yZSBleHBlcmllbmNlIGJlaW5nIGluIHRoZSBsYXRlIHN0YWdlcyBvZiBhbiBNVFQgYW5kIGluIGJpZyBwb3RzIHdpbGwgSSBiZSBhYmxlIHRvIGNvbnRyb2wgdGhlc2UgcnVzaGVzIG9mIGFkcmVuYWxpbmU/IEkgcmVhZCBiZWZvcmUgdGhhdCB0aGlzIGhhcHBlbnMgdG8gYmVnaW5uZXJzIGEgbG90IHdoZW4gcGxheWluZyBsaXZlIGFuZCB3aXRoIG1vcmUgZXhwZXJpZW5jZSBpdCBnb2VzIGF3YXkgYWZ0ZXIgYSB3aGlsZS4gRG9lcyB0aGUgc2FtZSBhcHBseSB3aXRoIG9ubGluZSBwb2tlcj8KVGhlIGJlc3Qgc2hvdyBpcyBzdXBwb3NlZCB0byBiZSBUaGUgV29ybGQgUG9rZXIgVG91ciwgd2hpY2ggY2FuIGJlIHZpZXdlZCBvbiB0aGUgVHJhdmVsIENoYW5uZWwuIApEZXB1aXMsIGonYWkgcmd1bGlyZW1lbnQgZXUgZGVzIGFtaWVzLCBkZXMgY29sbGd1ZXMgcHJhdGlxdWFudCBjZXR0ZSBkaXNjaXBsaW5lLiAKT3BlcmF0aW9uIEdyYXRpdHVkZSBoYXMgc2VudCBvdmVyIG9uZSBtaWxsaW9uIGNhcmUgcGFja2FnZXMgc2luY2UgMjAwMywgYW5kIFVDTEEgaXMgdGhlIGZpcnN0IGxhcmdlIHNjYWxlIHVuaXZlcnNpdHkgdGhlIG9yZ2FuaXphdGlvbiBoYXMgcGFpcmVkIHdpdGggdG8gaW5jcmVhc2UgdGhlc2UgZWZmb3J0cy5UbyBjb250aW51ZSB0aGUgc3Ryb25nIHRpZXMgYmV0d2VlbiB0aGUgQ2VudGVyIGFuZCB0aGUgc3R1ZGVudCBwb3B1bGF0aW9uLCB0aGUgVm9sdW50ZWVyIENlbnRlciBGZWxsb3dzIHByb2dyYW0gY3JlYXRlcyBvcHBvcnR1bml0aWVzIGZvciBzdHVkZW50IGxlYWRlcnNoaXAgaW4gdGhlIHBsYW5uaW5nIGFuZCBtYW5hZ2VtZW50IG9mIGNpdmljIGVuZ2FnZW1lbnQgcHJvamVjdHMuIEVhY2ggc3ByaW5nLCBhIG5ldyBncm91cCBvZiBzdHVkZW50cyBhcmUgY2hvc2VuIHRvIHNlcnZlIGZvciB0aGlydGVlbiBtb250aHMgdG8gd29yayB3aXRoIHRoZSBDZW50ZXIgdG8gcGxhbiB0aGUgeWVhcidzIGFnZW5kYSBhbmQgYXR0ZW5kIHJlZ3VsYXIgbWVldGluZ3Mgd2l0aCBzdGFmZiBhbmQgYWR2aXNvcnMuIEZlbGxvd3MgY29tZSBmcm9tIGEgdmFyaWV0eSBvZiBjb21tdW5pdHkgYW5kIGxlYWRlcnNoaXAgcGVyc3BlY3RpdmVzIGF0IFVDTEEgYW5kIGluIHRoZSBMb3MgQW5nZWxlcyBjb21tdW5pdHkuIApXaGVuIHRyZWF0ZWQgYXMgYSBzdW1tYXJ5IGNvbnZpY3Rpb24sIHRoZSBtYXhpbXVtIHBlbmFsdHkgaXMgdHdvIHllYXJzIGxlc3MgYSBkYXkgYW5kIHRoZSBtaW5pbXVtIGlzIDkwIGRheXNLaW5nc3ZpbGxlIEZpcmUgQ2hpZWYgQm9iIEtpc3NuZXIgcHV0cyBkb3duIHB5bG9ucyBhdCB0aGUgc2NlbmUgb2YgYSBjYXIgY3Jhc2ggYXQgdGhlIE1haW4gU3RyZWV0IFBsYXphIGluIEFwcmlsIDIwMDhPUFAgb3JpZ2luYWxseSBzYWlkIEtpc3NuZXIgd291bGQgYXR0ZW5kIGEgYmFpbCBoZWFyaW5nIGluIFdpbmRzb3Igb24gU3VuZGF5LiAKSW4gdGhlIHRyZWF0bWVudCByb29tcywgZmxvb3IgdG8gY2VpbGluZyB3aW5kb3dzIHJldmVhbCBhbiBvcmNoaWQgZ2FyZGVuLCBhbmQgdGhlIHN0b25lIGNlaWxpbmdzIGFyZSBjYXJ2ZWQgd2l0aCBvcmNoaWQgYmxvc3NvbXMuIApUaGUgZm9sbG93aW5nIGRheSB3YXMgb3VyICJiZWFjaCBkYXkiLiBXZSBoZWFkZWQgb3V0IG9mIHRvd24gYW5kIHBpY2tlZCB1cCB0d28gaGl0Y2hoaWtlcnMgKGJhY2twYWNrZXJzKSB3aG8gbmVlZGVkIHRvIGdvIHRvIHRoZSBiZWFjaCB0b28uIFdlIGRyb3BwZWQgdGhlbSBvZmYgYXQgYSBob3N0ZWwgd2l0aCBoYW1tb2NrcyBhbmQgYWxsIEkgY291bGQgdGhpbmsgd2FzIHRoYXQgSSBhbSBkZWZpbml0ZWx5IHRvbyBvbGQgdG8gc3RheSBpbiBwbGFjZXMgdGhhdCBhcmUgJDQgYSBuaWdodCEgT3VyIGhvdGVsIGhhZCByZWNvbW1lbmRlZCB3ZSBnbyB0byBQbGF5YSBSb2NhIGluIExhcyBQZW5pdGFzLiAKVGhlIENhcmRzIEFyZSBBdmFpbGFibGUgQXQgVGhlIEJlc3QgUHJpY2UgQWxvbmcgV2l0aCBPbmUgWWVhciBXYXJyYW50eS4gSWYgVGhleSBGYWlsIFRvIERvIFNvIFdoYXQgVGhleSBIYWQgUHJvbWlzZWQgVGhhbiBZb3UgQ2FuIEFzayBUaGUgU2hvcGtlZXBlciBUbyBSZXBsYWNlIEl0IFdpdGggSW4gT25lIFllYXIuClNhbWUgd2l0aCB0aGUgV2hpdGUgVG93ZXIuIApUaGVzZSB3ZXJlIGp1c3QgdGhlIGZpcnN0IGFkYXB0YXRpb25zIG9mIHRoZSBub3ZlbC4gSXQgaGFzIHNpbmNlIHNlZW4gbnVtZXJvdXMgZnVydGhlciBhZGFwdGF0aW9ucyBpbmNsdWRpbmcgcmFkaW8sIG5vdmVscywgdGVsZXZpc2lvbiBhbmQgY29taWNzLCBhcyB3ZWxsIGFzIHNwb29mcyBhbmQgcmVmZXJlbmNlcy4gQmVsb3cgYXJlIGxpc3RlZCBhIGZldyBvZiB0aGUgZmlsbSBhZGFwdGF0aW9ucyB0aGF0IGhhdmUgYmVlbiBtYWRlLgpEb24gdHVybiB5b3VyIHdyaXN0LCB3aWdnbGUgeW91ciBmaW5nZXIgYmFjayBhbmQgZm9ydGgsIGJ1dCBkbyBub3QgZ28gaW4gYW5kIG91dC4gU2hlIHJpZ2h0IHRoZXJlLiBEbyB0aGlzIG1vcmUgb3IgbGVzcyBpbmRlZmluaXRlbHkgdW50aWwgeW91IGNvbnZpbmNlIGhlciB0aGUgdG95IHdpbGwgbWFrZSBpdCBtb3JlIHBsZWFzdXJhYmxlIGZvciB0aGUgYm90aCBvZiB5b3UuIApEb24gZnJlYWsgb3V0IHRvbyBiYWRseSBhYm91dCBmYWxsaW5nIGFzbGVlcCB3aXRoIGEgYmFieSBpbiB5b3VyIGFybXMuIElmIHlvdSBkb24gbW92ZSBtdWNoIGluIHlvdXIgc2xlZXAsIHlvdSBqdXN0IHdhbnQgdG8gbWFrZSBzdXJlIGlmIHlvdSBzaXR0aW5nIHVwIHlvdXIgbGVncyBhcmUgcmFpc2VkIChleHRyYSBzdXBwb3J0KSBhbmQgaWYgeW91IGxheWluZyB0aGF0IGJhYnkgaGFzIGEgYnViYmxlIG9mIG5vbiBzaGFyZWQgYWlyLiAKU2luY2UgeW91IGdvaW5nIHRvIGJlIHVzaW5nIGEgcXVpY2sgd2VhcG9uIGluIGEgU1RSIGhlYXZ5IGJ1aWxkLCBJIHRob3VnaHQgdGhlIGV4dHJhIGRhbWFnZSBtaWdodCBoZWxwIHlvdSB0b28sIGJ1dCBpZiB5b3UgcHJlZmVyIGxlc3MgaXRlbXMgaW4gdGhlIHRvb2xiZWx0IHRvIGF2b2lkIGNvbmZ1c2lvbiBhbmQgZm9jdXMgb25seSBvbiBwdXJlIGNvbWJhdCwgZ28gZm9yIGl0LCB3aGF0ZXZlciB3b3Jrcy4uIApJbnRyb2R1Y2UgYW55IGV4Y2VwdGlvbnMgdG8gdGhlIHJ1bGVzLiAKQW5kIHNvbWUgb2YgdGhlcmUgb3RoZXIgcGxhbnMgbGlrZSB0aGUgZ3JlZW4gbmV3IGRlYWwgd2lsbCBjb3N0IGEgZm9ydHVuZSB3aGljaCBJIHByZXR0eSBzdXJlIGlmIGl0IHdhcyB0cnVseSBtYWRlIHRvIHdvcmsgKHdoaWNoIGl0IGhhcyB0byBjYXVzZSBvdGhlcndpc2UgY2F0YXN0cm9waGUgd2lsbCBoYXBwZW4pLCB3aWxsIGhpdCB1cyBpbiB0aGUgcG9ja2V0Ym9vayBhcyB3ZWxsLiAKQnV0IGlzbiBkZXNjcmliaW5nIHRoZSBzdXJmYWNlIG9mIGZlbWFsZSBwb2xpdGljaWFucyB0aGVpciBoYWlyLCB0aGVpciBjbG90aGVzLCB0aGVpciBzaG9lcyBqdXN0IGFub3RoZXIgd2F5IG9mIG1pbmltaXppbmcgdGhlIGNvbnRlbnQgb2YgdGhlaXIgaWRlYXM/IEFuZCBpc24gdGhhdCBwYXJ0IG9mIGEgbGFyZ2VyIG1pc29neW55PyBFdmVyeW9uZSBoYXRlcyBEaWNrIENoZW5leSBiZWNhdXNlIGhlIGV2aWwsIGJ1dCBoZSBldmlsIGJhc2VkIG9uIHdoYXQgaGUgc2F5cy4gCkNvbnZlcnNhdGlvbnMgb24gdGhlc2UgZXh0cmVtZSBtb3JhbCBxdWVzdGlvbnMgc2hvdWxkbiBiZSB0cnlpbmcgdG8gY2hhbmdlIHRoZSBvdGhlciBwZXJzb25zIG1pbmQuIApMYXN0IHllYXIgd2hlbiBJIHdhcyB0cnlpbmcgdG8gYnV5IHBpbnMgaW4gdGhlIERNRiBhcmVhIEkgd2FpdGVkIDMgaG91cnMganVzdCB0byBnZXQgaW50byB0aGUgcm9vbS4gCkZvciBleGFtcGxlLCBJIGNhbiB0ZWxsIHlvdSB0aGF0IFRvaHJ1IGp1c3QgbWlzc2VkIGdldHRpbmcgaGVyIHBpY3R1cmUgb24gdGhlIGxpc3QsIGFzIHNoZSBvY2N1cGllZCB0aGUgMjZ0aCBwbGFjZSB3aXRoIDY1IHZvdGVzLiAxIHZvdGUgc2h5IG9mIHRoZSAyNXRoLi4gCkhpIHRoZXJlISBXZSByZW1vdmVkIHlvdXIgcXVlc3Rpb24gYmVjYXVzZSBpdCBhc2tpbmcgYWJvdXQgc29tZXRoaW5nIGxpa2UgYSBuYW1lLCBhIG51bWJlciwgYSBkYXRlIG9yIHRpbWUsIGEgbG9jYXRpb24sIG9yIHRoZSBvcmlnaW4gb2YgYSB3b3JkICAgYmFzaWMgZmFjdHMuIApUaGF0IHRoZWlyIGRpYWdub3N0aWMgcHJvY2VkdXJlLgpTbyBBY2UsIFF1ZWVuLCBRdWVlbiB3YXMgb24gdGhlIHRhYmxlIGFuZCB0aGUgQXNpYW4gZ2lybCBoYWQgQWNlIFF1ZWVuIGluIGhhbmQgbWVhbmluZyB0aGF0IHNoZSBoYWQgYSBmdWxsIGhvdXNlICgzIG9mIG9uZSB0aGluZywgMiBvZiBhbm90aGVyKSBieSBoYXZpbmcgMyBxdWVlbnMgYW5kIDIgYWNlcy4gVGhlIG90aGVyIGd1eSBoYWQgMiBhY2VzIGluIGhpcyBoYW5kLCB3aGljaCBtZWFudCB0aGF0IGhlIGhhZCBhIGZ1bGwgaG91c2Ugb2YgMyBhY2VzIGFuZCAyIHF1ZWVucyAoYXMgdGhlIDIgcXVlZW5zIHdlcmUgYWxyZWFkeSBvbiB0aGUgdGFibGUpLCBzbyBoZSBoYWQgYSBiZXR0ZXIgZnVsbCBob3VzZSB0aGFuIHNoZSBkaWQuIEEgZnVsbCBob3VzZSBpcyBvbmUgb2YgdGhlIGJlc3QgaGFuZHMgaW4gUG9rZXIuLiAKQW5kIGhlciBwYW50cyBldmVuIHNwbGl0IGluIHRoZSBzYW1lIHBsYWNlIHRvby4gSHVoLiBJIHdvbmRlciBpZiB0aGF0IHdhcyBzdGFnZWQgYW5kIHRoaXMgaXMgc29tZSBraW5kIG9mIHJlZ3VsYXIgc3R1bnQgZm9yIHRoZXNlIHR5cGVzIG9mIHNob3dzLlRoYXQgcGxhY2Ugd2FzIHNvIG5hc3R5LCBhbmQgdGhlIGRpbm5lciB3YXMgdGVycmlibGUuIFdlIGFsbCBmZWxsIGZvciB0aGlzICJndWVzdCIgYWN0IGFuZCBsZWZ0IHRoaW5raW5nIGl0IHdhcyB0aGUgb25seSBmdW4gdGhpbmcgYWJvdXQgdGhlIGV4cGVyaWVuY2UuIApNaXNzIE1hcmllIFN0b2NrLCBZb3JrLCBzcGVudCB0aGUgd2VlayBlbmQgd2l0aCBoZXIgcGFyZW50cywgTXIuIEFuZCBNcnMuIApEZXJ6ZWl0IGJlZmluZGV0IHNpY2ggZGFzIFdpbnRlciAxMDAgSGFuZCIgaW4gZGVyIHp3ZWl0ZW4gV29jaGUgc2VpbmVyIExhdWZ6ZWl0IHVuZCBlcyBoYXQgc2ljaCBiaXNsYW5nIGJlcmVpdHMgZWluIEJldHJhZyB2b24gJCAxLDMwMCBhbmdlc2FtbWVsdC4uIApHdWl0YXIgSGVybyBJSUk6IExlZ2VuZHMgb2YgUm9jayBpcyB0aGUgZmlyc3QgZ2FtZSBpbiB0aGUgc2VyaWVzIHRvIGluY2x1ZGUgYW4gb25saW5lIC4gCklzIHRoZXJlIGFueSBwb2ludCBvZiBydW5uaW5nIGhpZ2ggbWlsZWFnZSAoNjAgNzAgbXB3KSB3aXRob3V0IGFueSBzcGVjaWZpYyBnb2FsPyBJIG1vc3RseSBsaWtlIHRvIHJ1biBmb3IgdGhlIG1lbnRhbCBjbGFyaXR5IGFuZCBmb3Igd2VpZ2h0IG1haW50ZW5hbmNlIChjYXVzZSBsZXQgYmUgaG9uZXN0IEkgbG92ZSBmb29kIHRvbyBtdWNoKS4gSG93ZXZlciwgSSBmb3VuZCBJIGRvbiByZWFsbHkgbG9zZSB3ZWlnaHQgZGVzcGl0ZSB0aGUgaGlnaCBtaWxlYWdlLgpUaGF0IGlzIG5vdCBhIG1ldGFwaG9yLiBQdXRpbiBpcyBoZWFkIG9mIHRoZSBNYWZpYS4gCkFueSBhZHZpY2UgZm9yIElnbml0aW9uIE1UVCBwbGF5ZXJzPyAxIHBvaW50ICBzdWJtaXR0ZWQgMSBtb250aCBhZ28uIApBcyB3aXRoIGFsbCBzdGF0aXN0aWNzIG9uZSBoYXMgdG8gYmUgdmVyeSBza2VwdGljYWwgYWJvdXQgdGhlIG51bWJlcnMgYW5kIHRoZWlyIHNvdXJjZXMuIFR5cGljYWxseSwgYW55IG51bWJlciBxdW90ZWQgaGFzIGFuIGFnZW5kYSBhdHRhY2hlZCB0byBpdC4gClNpbmNlIGl0cyBpbmNlcHRpb24gaW4gMjAwOCwgdGhlIFRvb3RoIFRheGkgaGFzIHZpc2l0ZWQgb3ZlciAyNjcgc2Nob29scy9zaXRlcyBhbGwgb3ZlciB0aGUgU3RhdGUgb2YgT3JlZ29uLCBhbmQgc2VydmVkIG92ZXIgMTUsMDAwIGNoaWxkcmVuIHdoaWxlIGRlbGl2ZXJpbmcgb3ZlciBmb3VyIG1pbGxpb24gaW4gZG9uYXRlZCBkZW50YWwgc2VydmljZXMuLiAKSmUgZG9pcyByZW1vbnRlciAgcGluY2VzIGxlIFNiYXN0byBwbHVzIGxvaW4gcXVlIEdhcmUgZGUgbCdFc3QgRXQgZW5jb3JlICEgaidhaSByaWVuIHF1ZSBkZXMgYm91dGlxdWVzIG8gZWxsZXMgZm9udCBsZSBkY3JwYWdlIG91IGxhIHRvdWZmZSBhZnJvLiBKZSBsZXVyIGVuIG1ldHRyYWlzLCBtb2kgOi4gCkxvdHRlcnkgd2lubmVycyB3aG8gYXJlbiBvcGVuIGJ5IEFwcmlsIDEgd2lsbCBiZSBmaW5lZCAkMTIsNTAwLCB3aGlsZSB0aG9zZSBzdGlsbCBub3QgaW4gYnVzaW5lc3MgYnkgdGhlIGVuZCBvZiB0aGF0IG1vbnRoIGdldCBkaW5nZWQgJDUwLDAwMC4KSXQgbWUgdnMgOCBvdGhlciBwZW9wbGUgbWFraW5nIGRlY2lzaW9ucy4gVGhlcmUgbm90IGEgc2V0ICBldiBzZXQgb2YgaG91c2Ugb2RkcyB0aGF0IHlvdSB3aWxsIGxpdGVyYWxseSBuZXZlciBiZWF0LiBQb2tlciBpcyBhIHNwb3J0IHRvIG1lIGluIHRoYXQgYXNwZWN0LiAKQnV0IHdoYXQgaWYgVGlsYSBUZXF1aWxhIGRvZXMgbWF0dGVyIGluIHNvbWUgZGVlcGVyIHdheS4gQWZ0ZXIgYWxsLCB0aGUgd2hvbGUgcG9pbnQgb2YgY2VsZWJyaXR5IGN1bHR1cmUgaXMgYmVpbmcgZmFtb3VzIGZvciBiZWluZyBmYW1vdXMuIApUaGVyZSBhcmUgb25saW5lIHRvb2xzIHRoYXQgd2lsbCBkbyB0aGlzIGFsbCBmb3IgeW91LCB0aGV5cmUgZnJlZSBpZiB5b3UgZWFybiBsZXNzIHRoYW4gYXJvdW5kICQ2MCwwMDAgYSB5ZWFyLgpUaGF0J3Mgd2hlbiBoZSBpbnRyb2R1Y2VkIG1lIHRvIHRoZSBzdG9yeSBvZiBBcnRodXIgYW5kIEFyY2hpZS4gCkFmdGVyIHRoZSBtZWV0aW5nIGJvdGggU2hvcnQgYW5kIE5pZWxzZW4gYWxzbyBpbmRpY2F0ZWQgdG8gcmVwb3J0ZXJzIHRoZSBhZG1pbmlzdHJhdGlvbiBwcmVmZXJzIE1jQ29ubmVsbCB0byBjYWxsIHRoZSBQcmVzaWRlbnQncyBwcm9wb3NhbC4KSXQgYSBncmVhdCBzcG90IHRvIHB1dCBpbiBhIGJsdWZmIHdpdGggYSBmb3VyIGZsdXNoLCBwYWlyZWQgYm9hcmQuIApJIHNvcnJ5IEkgc2NhcmVkIHlvdSwgSSBkaWRuIG1lYW4gdG8uIApNaXNoNjEgdQpBZnRlciBhbGwgbmV3IGNhcmRzIGhhdmUgYmVlbiBkcmF3biwgdGhlcmUncyBhIHNlY29uZCByb3VuZCBvZiBiZXR0aW5nIHRoYXQgd29ya3MgdGhlIGV4YWN0IHNhbWUgYXMgdGhlIGZpcnN0IG9uZS4gT25jZSBldmVyeW9uZSBoYXMgZWl0aGVyIGZvbGRlZCBvciBzZWVuIGFsbCBvZiB0aGUgYmV0cyB0byBzdGF5IGluLCBpdCdzIHRpbWUgdG8gZmxpcCBvdmVyIHRoZSBjYXJkcy4gVGhlIHBsYXllciB3aXRoIHRoZSBiZXN0IGhhbmQgYXQgdGhpcyBwb2ludCB3aW5zLgpEZWFsZXIgUG9zaXRpb24gICBUaGlzIHBvc2l0aW9uLCBhbHNvIHJlZmVycmVkIHRvIGFzICJvbiB0aGUgYnV0dG9uIiwgaXMgdGhlIG1vc3QgY292ZXRlZCBiZWNhdXNlIG9uY2UgdGhlIGZsb3AgdGFrZXMgcGxhY2UsIHRoZSBkZWFsZXIgaXMgdGhlIGxhc3QgdG8gYWN0LiBUaGlzIG1lYW5zIHlvdSBjYW4gd2F0Y2ggYW5kIGdhdGhlciBpbmZvcm1hdGlvbiBvbiBhbGwgdGhlIG90aGVyIHBsYXllcnMgYmVmb3JlIG1ha2luZyB5b3VyIGRlY2lzaW9uLiBBZ2dyZXNzaXZlIHBsYXkgaXMgZXhwZWN0ZWQgZnJvbSB0aGlzIHBvc2l0aW9uLCBlc3BlY2lhbGx5IHdoZW4gYWxsIG90aGVycyBoYXZlIGNoZWNrZWQuIEFsbW9zdCBhbnkgaGFuZCBleGNlcHQgdHJhc2ggaGFuZHMgbGlrZSA5IDIsIDEwIDQgb2Zmc3VpdCBjYW4gYmUgY29uc2lkZXJlZCBmb3IgcGxheSBoZXJlLgpQcmFuem9sb2dpc2NoZSBEZXh0cmFseXNlbnpldXNlCk1haXMgZW50cmUgaWwgeSBhLCBkYW5zIGxlIGNyIGR1IGRpdmVydGlzc2VtZW50IGVuIGRpcmVjdCwgbCBpbW1lcnNpdmUgY29sbGVjdGl2ZS4gQyBsIHF1IGZhdXQgc2UgcG9zaXRpb25uZXIuIEogcXVlIHZhIG1hcmNoZXIgY2UgY291cCBjaS4gCkJ5IG1ha2luZyBleGhpYml0cyBoYWxmIGh1bWFuLCBoYWxmIHNvbWV0aGluZyBlbHNlLCBCYXJudW0gY291bGQgZW5nYWdlIGhpcyBhdWRpZW5jZSBzZW5zZSBvZiB3b25kZXIgYW5kIGF3ZSBhbmQgZXZlbiwgc29tZXRpbWVzLCBvdXRyYWdlIG92ZXIgdGhlIG9idmlvdXNuZXNzIG9mIGhpcyBodW1idWcuIFRoZSBoeWJyaWRpdHkgb2YgdGhlc2UgYm9kaWVzLCBhIGh5YnJpZGl0eSB0aGF0IHdlcmUgbGVzc29ucyBmcm9tIEdvZCBiZWZvcmUgQmFybnVtLCBtYWRlIG9ubG9va2VycyBmZWVsIGJvdGggZnVsbHkgaHVtYW4gYW5kIGxlZnQgdGhlbSB3YW50aW5nIGFub3RoZXIgbG9vay4uIApIZSBzaG93ZWQgaGVyIHNvbWV0aGluZyBpbiBoaXMgY2FyLiAKTGV0IHlvdXIgc2VudGVuY2Ugc3RydWN0dXJlIGJlIHlvdXIgY3VlIHRvIG1vdmUgZnJvbSBQb3N0IGl0IHRvIFBvc3QgaXQuLiAKSSB0aGluayBJIGNoZWNrIGJlaGluZCBub3cgYW5kIHJlZXZhbHVhdGUgb24gdGhlIHJpdmVyLiAKT25lIHN1c3BlY3Qgd2hvIGZsZWQgdGhlIHNjZW5lIG9uIGZvb3Qgd2FzIGFycmVzdGVkIG91dHNpZGUgb2YgbWFsbCBwcm9wZXJ0eSBqdXN0IGZpdmUgbWludXRlcyBhZnRlciBvZmZpY2VycyB3ZXJlIGNhbGxlZC4gRHJhbWF0aWMgdmlkZW8gb2YgdGhlIGFycmVzdCBjYXB0dXJlZCBieSBhIGJ5c3RhbmRlciBhbmQgc2hhcmVkIG9ubGluZSBzaG93cyBhbiBvZmZpY2VyIHdyZXN0bGluZyB0aGUgc3VzcGVjdCB0byB0aGUgZ3JvdW5kIGFuZCB0YWtpbmcgaGltIGludG8gY3VzdG9keSBhdCBndW5wb2ludC4KTWljcm9zb2Z0IEF6dXJlLCBHb29nbGUsIGFuZCBJIHRoaW5rIEFsaWJhYmEgYW5kIElCTSBhcmUgYWJvdXQgdGhlIHNhbWUgc2l6ZSBhcyBHb29nbGUgY2xvdWQgc2VydmljZXMuIEl0IHJvdWdoLCBhbmQgSSBwcmV0dHkgc3VyZSBBV1Mgd2FzIGJpZ2dlciB0aGFuIGFsbCA0IG9mIHRob3NlIGNvbWJpbmVkIGp1c3QgYSBmZXcgeWVhcnMgYWdvLCBidXQgQXp1cmUgaXMgZ2FpbmluZyBzb21lIGdyb3VuZCBhbmQgaXQgY29tcGxldGVseSBub24gY29tcGV0aXRpdmUuCldlIHdhbnQgdG8ga2VlcCB0aGF0IGdyb3VuZGVkLCBmdW5jdGlvbmFsIHdvcmxkLCBidXQgYXQgdGhlIHNhbWUgdGltZSBrZWVwIGl0IGZ1biIsIGNvbW11bml0eSBtYW5hZ2VyIEpheSBGcmVjaGV0dGUgdGVsbHMgbWUuIEdldHRpbmcgYXdheSBmcm9tIG1pbGl0YXJ5IGR1ZGVzIHdpdGggaGVsbWV0cyBhbmQgaGF2aW5nIGEgbW9yZSBkaXZlcnNlLCBjb2xvcmZ1bCBncm91cC4KSk0gVGhlcmFwZXV0aWNzCkxpa2UgZnVjayBtYW4gSSBoYXRlIFRydW1wIGFzIG11Y2ggYXMgdGhlIG5leHQgZ3V5LCBidXQgdGhlcmUgYXJlIGFjdHVhbCB0aGluZ3MgdG8gY3JpdGljaXplIFRydW1wIGZvcjsgbm8gbmVlZCB0byByZWR1Y2UgdGhlbSB0byA0IDUgYnV6endvcmRzIHlvdSBjYW4gdGVhY2ggdG8gY2hpbGRyZW4uIApEZWZhdWx0IHNhbmRib3ggcGFnZXMgY2FuIG9ubHkgYmUgZWRpdGVkIGJ5IHRoZWlyIGNyZWF0b3IuUGxlYXNlIGRvbid0IGNyZWF0ZSB0b28gbWFueSBzYW5kYm94IHBhZ2VzLiBZb3UgY2FuIG1ha2UgYXMgbWFueSBzYW5kYm94IHBhZ2VzIGFzIHlvdSBuZWVkLCBidXQgd2UgcmVjb21tZW5kIHRoYXQgeW91IGtlZXAgdGhlIG51bWJlciByZWFzb25hYmxlLiBZb3UgY2FuIHN0b3JlIG11bHRpcGxlIGRyYWZ0cyBvbiB5b3VyIHNhbmRib3ggYnkgdXNpbmcgdGhlIHRhYiBjb2RlIGZ1cnRoZXIgZG93biB0aGlzIHBhZ2UuRG8gTk9UIGNyZWF0ZSBhIHNhbmRib3ggdGl0bGUgb3IgVVJMIHdpdGggYW4gU0NQIG51bWJlci4gCkEgRG9nIFB1cnBvc2UsIHdoaWNoIHdhcyBmaWxtZWQgaW4gV2lubmlwZWcsIGRyZXcgb3V0cmFnZSBmcm9tIGFuaW1hbCByaWdodHMgZ3JvdXBzIGluIEphbnVhcnkgYWZ0ZXIgYSBiZWhpbmQgdGhlIHNjZW5lIHZpZGVvIGVtZXJnZWQgdGhhdCBzZWVtZWQgdG8gc2hvdyBhIEdlcm1hbiBzaGVwaGVyZCBiZWluZyBmb3JjZWQgaW50byB0dXJidWxlbnQgd2F0ZXIgZHVyaW5nIGEgZmlsbWluZy4gCkRhcnJpb24gTW9mZmF0dCB3YXMgMTgsIHRyeWluZyB0byBmaW5pc2ggaGlnaCBzY2hvb2wuIE5vdyBoZSBkZWFkLCBhbm90aGVyIGluIGFuIGFsYXJtaW5nIGxpc3Qgb2YgdGVlbiBtdXJkZXIgY2FzZXMuCkkgdHJ1c3QgbXlzZWxmIG5vdCB0byBkbyB0aGF0LCBhbmQgSSBrbm93IHRoYXQgZG9lc24gcmVhbGx5IGdpdmUgYW55b25lIGVsc2UgY29tZm9ydCBiZWNhdXNlIEkganVzdCBhbm90aGVyIHJhbmRvbSBwZXJzb24gb24gdGhlIGludGVybmV0LCBidXQgdGhlIHN5c3RlbSBmdW5jdGlvbnMgZm9yIHJpZ2h0IG5vdy4gTm8gb25lIGJlZW4gc2lnbmVkIHVwIGZvciBzcGFtIGVtYWlsIHRocm91Z2ggdGhpcyBwcm9jZXNzLCBvciBoYWQgdGhlaXIgaWRlbnRpdHkgc3RvbGVuLCBvciBiZWVuIGJsYWNrbWFpbGVkIGJhc2VkIG9uIHRoZSBpbmZvcm1hdGlvbiB0aGV5IHByb3ZpZGVkLiAKQWxzbyBlbmpveXMgZG9pbmcgd29yayBvbiBzdGFnZSB3aGVuIHRoZSBvcHBvcnR1bml0eSBhcmlzZXMucmVhbGx5IGxpa2UgZG9pbmcgc3RhZ2Ugd29yayB3aGVuIEkgZ2V0IHRoZSBjaGFuY2UsIGVzcGVjaWFsbHkgd2l0aCBhIHBsYXkgbGlrZSB0aGlzIHdoZXJlIHRoZXJlIGlzIG9ubHkgdGhyZWUgb2YgdXMgaW4gaXQsIGhlIHNheXMuIApXaGVuIHlvdSBkbyBpbnZlc3RpZ2F0aXZlIHJlcG9ydGluZywgeW91IGFudGljaXBhdGUgZHJpbGxpbmcgYSBudW1iZXIgb2YgZHJ5IGhvbGVzLCBidXQgYWxtb3N0IGV2ZXJ5b25lIEkgZ29vZ2xlZCB0dXJuZWQgb3V0IHRvIGJlIGEgUnVzc2lhbiBtb2JzdGVyLiBBZ2FpbiBhbmQgYWdhaW4uIElmIHlvdSBrbm93IE5ldyBZb3JrIHlvdSBkb24gZXhwZWN0IFRydW1wIFRvd2VyIHRvIGJlIGEgaGlnaCBjcmltZSBuZWlnaGJvcmhvb2QsIGJ1dCB0aGVyZSB3ZXJlIGZhciB0b28gbWFueSBSdXNzaWFuIG1vYnN0ZXJzIGluIFRydW1wIHByb3BlcnRpZXMgZm9yIGl0IHRvIGJlIGEgY29pbmNpZGVuY2UuIi4gCkF0bGFudGljIENpdHkgQ2FzaW5vIGFuZCBIb3RlbApBbmQgKENvbWluZyBmcm9tIGEgbWFjIG93bmVyKSB0aGUgZ2FtZSBmcm96ZSByZXBlYXRlZGx5LiAKVGhlIG1vc3QgY3JlZGlibGUgYXJndW1lbnRzIHRoYXQgc2hvdyBjbGFzcyBzaXplIGRvZXNuIG1hdHRlciBtdWNoIGFyZSBncm91bmRlZCBpbiBkZWNlbnQgcmVzZWFyY2guIEEgcXVpY2sgR29vZ2xlIHNlYXJjaCBmb3IgImNsYXNzIHNpemUgcmVzZWFyY2giIHdpbGwgZ2l2ZSB5b3UgbG90cyBvZiBzdHVkaWVzIChhbmQgc2Vjb25kYXJ5IHJlcG9ydGluZyBvZiB0aG9zZSBzdHVkaWVzKSB0aGF0IHN1Z2dlc3Qgc2hyaW5raW5nIHRoZSBzaXplIG9mIGNsYXNzZXMgaXMgaHVnZWx5IGNvc3RseSBmb3IgZGlzdHJpY3RzLCBidXQgZG9lc24gYWN0dWFsbHkgbWFrZSBhIHNpZ25pZmljYW50IGRpZmZlcmVuY2UgaW4gdGhlIGxlYXJuaW5nIG9mIGtpZHMsIG9uIGFnZ3JlZ2F0ZS4gSGVyZSBhbiBleGFtcGxlLi4gCklmIHlvdSBiZXQgZmxvcHMgbGlrZSB0aGF0IHdoYXQgZG9lcyBpdCBtZWFuIHdoZW4geW91IGNoZWNrPyB5b3Ugc2hvdWxkIGNoZWNrIGFsbCBmbG9wcyBsaWtlIHRoYXQgb29wLiBTYW1lIGdvZXMgZm9yIHdoZW4geW91IGhhdmUgQUEgYW5kIHRoZSBib2FyZCBpcyBsaWtlIDczMy4gSXQgcHJldmVudHMgeW91IGZyb20gZ2V0dGluZyByYWlzZWQgYW5kIHB1dCBpbiBzaGl0dHkgc3BvdHMuIAo1IEJlbmVmaXRzIG9mIEJvZHkgV3JhcHMKWWVhaCwgYnV0IHRoZW4sIHRoYXQgdW5kZXJzdGFuZGFibGUsIGlzbiBpdD8gQmxpbmQgcGVvcGxlIGFyZW4gaGFtcGVyZWQgYnkgY29tbXVuaWNhdGlvbiBiYXJyaWVycy4gCkkgZ2V0IGl0LCB5b3UgZG9uIHdhbnQgaGVyIHRvIGJlIGF0IGZhdWx0LCBidXQgeW91IGJyb3VnaHQgdXAgc2V4IHdvcmsgYW5kIGJsYW1lZCBoaW0uIEkgYW0gcG9pbnRpbmcgb3V0IHNoZSBpcyBhdCBsZWFzdCByZXNwb3NpYmxlIGZvciBwdXR0aW5nIGhpbSBpbiBhIHNpdHVhdGlvbiBoZSBkaWQgbm90IGNob29zZSBvciBoYXZlIGFueSBpbmZvIG9uLgpBcyB3ZWxsIGFzIGJ1c2h3YWxraW5nIGFuZCByb2NrIGNsaW1iaW5nLCB0aGV5IHdlcmUgYWxzbyBsb29raW5nIGZvciBzb21ld2hlcmUgdG8gc2V0IHVwIHRoZWlyIGJyZXdwdWIuCkhlbGwsIGV2ZW4gaW4gd2Fyem9uZXMsIHRoZSBydWxlcyBvZiBlbmdhZ2VtZW50IG9mdGVuIHByb2hpYml0IGZpcmluZyBvbiBwb3RlbnRpYWwgdGhyZWF0cyB1bmxlc3MgZmlyZWQgdXBvbiAgIHdoeSBpcyB0aGF0IGFjY2VwdGFibGUgZm9yIGEgc29sZGllciBidXQgbm90IGEgcG9saWNlIG9mZmljZXI/LiAKSXQgaXMgYSB0eXBpY2FsIHNob3Bob3VzZSB1bml0LiBZb3UgZW50ZXIgYXQgdGhlIGdyb3VuZCBmbG9vciwgd2l0aCB0aGUgcmVjZXB0aW9uaXN0IGRlc2sgaW1tZWRpYXRlbHkgdG8geW91ciByaWdodC4gVGhlIGdpcmxzIGFsbCBhc3NlbWJsZSBvbiBhIGNvdWNoIHRvIHRoZSByaWdodCBvZiB0aGF0LiBUaGUgZ2lybHMgd2lsbCBoYXZlIGVpdGhlciBiZWVuIGhhbmdpbmcgYXJvdW5kIG91dHNpZGUgb3IgaW4gYSByb29tIGF0IHRoZSBiYWNrLiBUaGUgY3VzdG9tZXIgYXJlYSBpcyBxdWl0ZSBzbWFsbCBhbmQgbm90IGVzcGVjaWFsbHkgZGVjb3JhdGVkLiBOaWNlIHRvIHNlZSB0aGUgZ2lybHMgaW4gcGVyc29uLCB0aG91Z2gsIHJhdGhlciB0aGFuIGJlIHNob3duIGEgYm9vay4KMjogV2VudCB0byBhIGNhbGwgdG8gYSBjdXN0b21lcnMgcG9vbCBob3VzZSBBL1Ygc3lzdGVtIHRoYXQgd2FzICJhY3RpbmcgdXAiLiBUaGlzIGN1c3RvbWVyIHdhcyBhIERyLidzIHRyb3BoeSB3aWZlIHRoYXQgaGFkIG5vIHByb2JsZW0gZ3JlZXRpbmcgeW91IGluIGp1c3QgYSB0b3dlbCBhbmQgdGhlbiBsYXlpbmcgb3V0IG51ZGUgb24gdGhlIHBvb2wgZGVjayB3aGlsZSB5b3Ugd2VyZSB3b3JraW5nLiAKV2hhdCB5b3Ugd29uIGdldCwgdGhvdWdoLCBpcyBhIGZpbmFuY2lhbCByZXR1cm4gb24geW91ciBpbnZlc3RtZW50LiBXaGF0IHlvdSBnZXQgb3V0IG9mIHRoZSBraXQgd29uIGJlIHNhbGFibGUsIGNlcnRhaW5seSBub3QgZm9yIG1vcmUgdGhhbiB0aGUgY29zdCAoZXNwZWNpYWxseSBhZnRlciB0b29scyBhbmQgdmFybmlzaCBjb3N0cykuIFRoYXQgbm90aGluZyBvbiB5b3UsIGp1c3QgdGhlIG5hdHVyZSBvZiB0aGUgYmVhc3QuIEFzc2VtYmx5IGtpdCB2aW9saW5zIGFyZSBoYWxmIGNvbXBsZXRlZCAodXN1YWxseSkgbG93IGNvc3QgZmFjdG9yeSBpbnN0cnVtZW50cy4KT25seSBvbmUgZWxlY3Ryb25pYyBkYXRhYmFzZSB3YXMgc2VhcmNoZWQgYW5kIHRoZSBzZWFyY2ggd2FzIHJlc3RpY3RlZCB0byBwdWJsaXNoZWQgc3R1ZGllcyBpbiBFbmdsaXNoLCBzbyB0aGVyZSB3YXMgcG90ZW50aWFsIGZvciBsYW5ndWFnZSBhbmQgcHVibGljYXRpb24gYmlhc2VzLiBIb3dldmVyLCBmb3JtYWwgYXNzZXNzbWVudCBvZiBwdWJsaWNhdGlvbiBiaWFzIHdhcyBjb25kdWN0ZWQgYW5kIG5vIGV2aWRlbmNlIHdhcyBmb3VuZC4gCjEwIGRheXMgbGF0ZXIsIENvc3RjbyBjYWxscyB0byB0ZWxsIG1lIHRoYXQgdGhleSdsbCByZWZ1bmQgbXkgbW9uZXkgb3IgcmVzZW5kIGl0ZW0uIApZb3V0aCBmb3IgV2VzdGVybiBDaXZpbGl6YXRpb24KSGUgaGFzIHRha2VuIG9uIG5pZ2h0IGR1dHkgd2l0aCB0b2RkbGVyLHNvIEkgZ2V0IG1vcmUgc2xlZXAgd2l0aCB0aGUgYmFieSwgYW5kIGV2ZXJ5dGhpbmcgZWxzZSBpbWFnaW5hYmxlIHRvIGxldCBtZSByZXN0LiAKIlBraW4gbidhdmFpdCByaWVuICBnYWduZXIgZW4gc2Fib3RhbnQgbGUgc29tbWV0IiwgYWJvbmRlIGRlcHVpcyBXYXNoaW5ndG9uIGwnYW5hbHlzdGUgQm9ubmllIEdsYXNlciwgZHUgQ2VudHJlIHBvdXIgbGVzIHR1ZGVzIGludGVybmF0aW9uYWxlcyBldCBzdHJhdGdpcXVlcy4gQ2FyIGwnYW5udWxhdGlvbiBkZSBsYSByZW5jb250cmUsIHF1aSBhdXJhaXQgZCBhdm9pciBsaWV1IGxlIDEyIGp1aW4gIFNpbmdhcG91ciwgInBvcnRlIGVuIGdlcm1lIGxlIHJldG91ciBhY3RpZiBkZXMgRXRhdHMgVW5pcyAgbCdvcHRpb24gbWlsaXRhaXJlIGNvbnRyZSBsYSBDb3JlIGR1IE5vcmQiLCBleHBsaXF1ZSB0IGVsbGUuCkpvYiBEZXNjcmlwdGlvblBlb3BsZSBpbiB0aGlzIHByb2Zlc3Npb24gbW9uaXRvciBhbmQgbWFuYWdlIHJpc2tzIGFuZCB0aHJlYXRzIHRoYXQgYXJpc2UgZnJvbSBjb21wdXRlciBjb25uZWN0aXZpdHkgdGhyb3VnaCB0aGUgaW50ZXJuZXQgYW5kIG5ldHdvcmtlZCBjb21wdXRlcnMuIFRoZXkgY3JlYXRlIG9yIHVzZSBzcGVjaWFsIHByb2dyYW1zIHRvIGtlZXAgY29tcGFueSBhbmQgZ292ZXJubWVudCBpbmZvcm1hdGlvbiBzZWN1cmUgYW5kIHByaXZhdGUuIApGb29kbmV0d2VyayAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpFaXRoZXIgaGUgaGFzIGFuIGluY3JlZGlibGUgZHJhdyBvciBoZSBoYXMgMiBwYWlyKyAuIApJdCBhbHdheXMgYm90aGVyZWQgbWUgdGhhdCBzaGUgcmVmdXNlZCB0byBtYXJyeSBoaW0gdW50aWwgaGUgd2FzIGluc2FuZWx5IHdlYWx0aHkuIFNoZSB3b3VsZG4gZGVjZWl2ZSBhbiBlc3RhdGUgYWdlbnQgYnV0IGx5aW5nIHRvIG5vYmlsaXR5IHdhcyBmaW5lLCBzdHJhbmdlIGxvZ2ljIHRoZXJlLi4gClRoZXkga25ldyBldmVyeXRoaW5nLCBzYWlkIEdhcnJldHQuIApGb3IgbWFueSBnYW1lcnMgaW5jcmVhc2luZyB0aGUgRk9WIGlzIG1haW5seSBhIHdheSB0byBnYWluIGFuIGFkdmFudGFnZSBieSBleHRlbmRpbmcgdGhlaXIgcGVyaXBoZXJhbCB2aXNpb24gaW4gdGhlIGdhbWUgYSBiaXQuIFRoaXMsIGFzIHlvdSBjYW4gc2VlIGluIHRoZSB2aWRlbyBsaW5rZWQgYWJvdmUsIGRvZXMgY29tZSB3aXRoIHRoZSBkb3duc2lkZSBvZiBhICJmaXNoZXllIGxlbnNlIi93YXJwaW5nIGVmZmVjdC4gWW91IHNlZSBtb3JlLCBidXQgaXQgc21hbGxlci4KV29vZHdhcmQsIGluIFByb2NlZWRpbmdzIEEgICBQaHlzaWNhbCBTY2llbmNlLCBNZWFzdXJlbWVudCBhbmQgSW5zdHJ1bWVudGF0aW9uLCBWb2x1bWU6IDEzNiA2IE5vdi4gMTk4OS4uIApCdXQgaXQgd29ya2VkLiAKQW5kIG5hdywgbmV2ZXIgbG9va2VkIGludG8gbGVnYWwgcmVjb3Vyc2UuIEkgd2FzIGEgMTkgeWVhciBvbGQga2lkLCBicm9rZSBhbmQgYWxvbmUsIHN0cmVzc2VkIGFzIGhlbGwgdHJ5aW5nIHRvIGtlZXAgdXAgd2l0aCBhc3NpZ25tZW50cyAgIGRlYWxpbmcgd2l0aCBjb21wbGljYXRlZCBsYXcgc3R1ZmYgd2FzIHRoZSBsYXN0IHRoaW5nIG9uIG15IG1pbmQuIFRoaXMgd2FzIDQgb3IgNSB5ZWFycyBiYWNrIHNvIEkgZG91YnQgSSBjb3VsZCBkbyBhbnl0aGluZyBhYm91dCBpdCBub3cuClNob3VsZCBJIGNvbXBsYWluIHRvIHRoZSBlZGl0b3JzIG9mIFQvUyBiZWNhdXNlIHlvdSBkZWNpZGVkIHRob3NlIGZhY3RzIGFyZW4gaW1wb3J0YW50LiAKTGEgc3VydmVpbGxhbmNlIGVzdCBwbHVzIGFjdGl2ZSwgbGVzIGluZm9ybWF0aW9ucyBldCBwbHVzIHByb21wdGVzIGV0IHBsdXMgc3Jlcy4gCkp1bmU6IFRydXRoIGlzIFN0cmFuZ2VyIHRoYW4gKFNjaWVuY2UpIEZpY3Rpb25XZSBtYXkgbm90IGhhdmUgaG92ZXJib2FyZHMgeWV0LCBidXQgU2NpZW5jZSBGaWN0aW9uIGhhcyBtYWRlIHNvbWUgcHJldHR5IGFjY3VyYXRlIHByZWRpY3Rpb25zIGFib3V0IHRoZSBmdXR1cmUgd2Ugbm93IGxpdmUgaW4uIEFyZSB5b3UgYSBUZWNobm9waGlsZSBvciBhIFRlY2hub3Bob2JlPyBUZWxsIHVzIHlvdXIgc3Rvcmllcy4gU2VlIFRydXRoIGlzIFN0cmFuZ2VyIHRoYW4gKFNjaWVuY2UpIEZpY3Rpb24KVGhlcmUgaXMgYSBkYW5nZXIgaW4gYXBwYXJlbnQgZGlyZWN0IGF2ZW51ZXMgdG8gIndvcmtpbmcgb24geW91ciBwYXNzaW9uIGFsbCB0aGUgdGltZSB3aGlsZSBldmVyeW9uZSBlbHNlIHRha2VzIGNhcmUgb2YgdGhlIHJlc3Qgb2YgdGhlIHN0dWZmIGluIHlvdXIgbGlmZSB0aGF0IHlvdSBkb24gY2FyZSBhYm91dC4iIFNhbGVzcGVvcGxlIGtub3cgdGhhdCB5b3VuZyBwZW9wbGUgdGhpbmsgbGlrZSB0aGlzLCBhbmQgaXQgdmVyeSBlYXN5IGZvciBzb21lb25lIHRvIHByb21pc2UgeW91IHRoaXMsIHRha2UgeW91ciBtb25leSwgYW5kIHRoZW4gbGVhdmUgeW91IHJpZ2h0IHdoZXJlIHlvdSBzdGFydGVkLgoxMCBSdWxlcyBvZiBQbGF5aW5nIE9ubGluZSBQb2tlcgpUaGVyZSBhcmUgcmVjb3JkcyBvZiBGcmFua2luY2Vuc2UgYmVpbmcgYnVybnQgYXQgc3VucmlzZSBhcyBhbiBvZmZlcmluZyB0byB0aGUgc3VuIGdvZC4gClVuZ2FyJ3MgdGFsZW50IGZvciBwb2tlciB3YXMgbWF0Y2hlZCBieSBhIGNhcGFjaXR5IGZvciBzZWxmIGFubmloaWxhdGlvbi4gTW9uZXkgd29uIGZyb20gY2FyZHMgd2FzIHVzdWFsbHkgc3F1YW5kZXJlZCBvbiBzcG9ydHMgYmV0cy4gSW4gdGhlIGVhcmx5IGVpZ2h0aWVzIGhlIGRldmVsb3BlZCBhIGNvY2FpbmUgYWRkaWN0aW9uIHRoYXQgd291bGQgdG9ybWVudCBoaW0gZm9yIHRoZSByZXN0IG9mIGhpcyBsaWZlLiAKQXMgc29tZW9uZSB3aG8gc2xvd2x5IG92ZXIgdGhlIHNlYXNvbnMgY2xpbWJlZCBmcm9tIHNpbHZlciB0byBtYXN0ZXJzIGluIHNvbG8gcXVldWUgcGxheWluZyA5MCUgc3VwcG9ydCwgSSB0aGluayBtYW55IGhlYWxlciBtYWlucyBzdGFnbmF0ZSBiZWNhdXNlIHRoZXkgdGhpbmsgb2YgdGhlbXNlbHZlcyBhcyBnb29kIHBsYXllcnMganVzdCBieSB2aXJ0dWUgb2YgcGxheWluZyBhIGxlc3Mgd2FudGVkIHJvbGUuIEkgdGVsbCB5b3Ugc3RyYWlnaHQgdXAsIHRoZXJlIHZlcnkgbXVjaCBhcmUgYmFkIG1lcmNpZXMsIGFuZCB5b3UgaGF2ZSBhIGxvdCBtb3JlIGltcGFjdCBvbiB5b3VyIG93biBzdXJ2aXZhbCB0aGFuIHlvdSB0aGluay4uIApIZXIgcmVzcG9uc2Ugd2FzIGFuIGFsbW9zdCBzdHV0dGVyaW5nIHNocmllaywgIkRvbiB5b3UgdGFsayB0byBNRSEgSSBjYW4gdGFsayB0byBhIE1BTiB0b2RheSEgSSBjYW4gZXZlbiBsb29rIGF0IGEgTUFOLCBlc3BlY2lhbGx5IG5vdCBhIFdISVRFIE1BTiEgWW91IEFMTCBzY2FyZSBtZSEiLi4gCkxhIFJlYWwgU29jaWVkYWQgc2UgcmVjdXBlciBlbiBlbCBncnVwbyBMIGRlIGxhIEV1cm9wYSBMZWFndWUgY29uIHVuYSB2aWN0b3JpYSBhcGxhc3RhbnRlIHBvciA2IGEgMCBlbiBzdSBkZXNwbGF6YW1pZW50byBhbCBjYW1wbyBkZWwgVmFyZGFyIFNrb3BqZSBtYWNlZG9uaW8sIGNvbiBjdWF0cm8gdGFudG9zIGRlbCBicmFzaWxlbyBXaWxsaWFuIEpvcywgZXN0ZSBqdWV2ZXMgZW4gbGEgdGVyY2VyYSBqb3JuYWRhLgpBbmQgb2YgY291cnNlIHdlZWtzIGdvIGJ5IGFuZCBub3RoaW5nIGNoYW5nZXMuLiAKTmV3IGNvbnN0cnVjdGlvbikgYmVjYXVzZSB3aGVuIHlvdSBkaWFnbm9zaW5nIGEgcHJvYmxlbSB5b3UgZ2V0IHRvIHBsYXkgZGV0ZWN0aXZlICJ3aGF0IGlzIHRoZSBjdXN0b21lciBzYXlpbmcsIHdoYXQgYW0gSSBzZWVpbmcsIGhvdyB3YXMgdGhpcyBwbHVtYmVkIChvZnRlbiB3aGF0IHlvdSB0cnlpbmcgdG8gZGlhZ25vc2UgeW91IGNhbiBkaXJlY3RseSBzZWUpIiBvbiB0aGUgdG91Z2ggZGlhZ25vc2lzIGpvYnMgY3VzdG9tZXJzIHRoaW5rIHlvdSBoYXZlIG1hZ2ljIHBvd2VycyB3aGVuIHlvdSBjcmFjayBpdCBhbmQgZXhwbGFpbiB3aGF0IGhhcHBlbmVkIGFuZCB3aHkgYW5kIHdoYXQgdGhlIGZpeCBpcy4uIApZb3Ugc2hvdWxkIHNhdmUgYSBnb29kIGJpdCwganVzdCBoYXJkIHRvIHNheSBpZiBpdCBzaG91bGQgYmUgaW4gYSB0YXggZGVmZXJyZWQgYWNjb3VudCBvciBub3QuCiJXZSBoYXZlIG5ldmVyIGhhZCBhbnkgaW50ZW50aW9uIG9mIGxlYXZpbmcuIFBlcnNvbmFsbHksIEkgZmVlbCBtb3JlIHRvdGFsbHkgd2VsY29tZWQgYW5kIGFmZmlybWVkIGFzIGEgcGFydG5lcmVkIGxlc2JpYW4gY2xlcmd5IHdvbWFuLiAKSWYgdGhlcmUgaXMgdGhlIHBvc3NpYmlsaXR5IG9mIGEgdGllLCB0aGUgcmVzdCBvZiB0aGUgdGFibGUgbWF5IGNsYW1vciBmb3IgeW91IHRvIGNhbGwsIHNpbmNlIHlvdSAib2J2aW91c2x5IiBib3RoIGhhdmUgdGhlIHNhbWUgaGFuZC4gSWdub3JlIHRoZSByYWJibGUuIFlvdSdsbCBiZSBzdXJwcmlzZWQgaG93IG1hbnkgb2YgeW91ciBvcHBvbmVudHMgdHVybiBvdXQgdG8gYmUgYm9uYSBmaWRlIGlkaW90cy4uIApEb2luZyB0aGlzIHNvIGxvbmcsIGl0IHJvdXRpbmUuIFByZXR0eSBtdWNoIGV2ZXJ5IHF1YXJ0ZXIsIHNhaWQgdGhlIGluc2lkZXIsIHdobyBhc2tlZCBmb3IgYW5vbnltaXR5IHRvIHByb3RlY3QgZW1wbG95bWVudC4gcmVhbGl6ZXMgaXQgbm90IGEgZ29vZCBkZWNpc2lvbiBsb25nIHRlcm0uIEJ1dCAoQ2hpY2FnbykgaXMgYWZyYWlkIHRvIGhhdmUgb25lIGJhZCBxdWFydGVyLiBjb25jZXJ0ZWQgZWZmb3J0IGlzIG1hbmFnZWQgYnkgQm9laW5nIENoaWVmIEZpbmFuY2lhbCBPZmZpY2VyIEdyZWcgU21pdGggaW4gQ2hpY2FnbywgdGhlIGluc2lkZXIgc2FpZCwgYWRkaW5nIHRoYXQgcmVjZW50bHkgYXMgbXVjaCBhcyAxMyBwZXJjZW50IG9mIGFpcmxpbmUgY3VzdG9tZXJzIGFkdmFuY2UgcGF5bWVudHMgICBhbW91bnRpbmcgdG8gaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgZG9sbGFycyAgIGhhdmUgYmVlbnB1bGxlZCBmb3J3YXJkIHBheW1lbnRzIG9yaWdpbmFsbHkgc2NoZWR1bGVkIGZvciBmdXR1cmUgcXVhcnRlcnMuCkl0IHdhcyBhbHNvIHRvbGQgdGhhdCBhcyBhIGNsZXJrIHdpdGggQ2xhcmsgVGFua3Mgc2hlIHJlZGlyZWN0ZWQgYSBjbGllbnQgcGF5bWVudCBvZiAkNTU1NSBpbnRvIGhlciBvd24gYmFuayBhY2NvdW50LiBNcyBCcmVhcmxleSwgd2hvIHdhcyBzZWxmIHJlcHJlc2VudGVkLCBzYWlkIHNoZSBkaWRuJ3Qga25vdyB3aGF0IHRvIHNheSBleGNlcHQgdGhhdCBzaGUgd2FzIHRydWx5IHNvcnJ5IGZvciBoZXIgYWN0aW9ucy4gCkkgc3RheWVkIHVwIHRpbGwgbWlkbmlnaHQgdGFsa2luZyB3aXRoIGhlci4gCkhhdmUgYSBjb21wdXRlciB3aG9zZSBSQU0gc3VwcG9ydHMgdGhlIGhlYXZ5IFJORyBnYW1lcyBzaW5jZSB0aGVzZSBnYW1lcyBhcmUgbG9hZGVkIHdpdGggdXNlciBmcmllbmRseSBmZWF0dXJlcy4gCkhpaiBrZW50IGRlIGdyZW56ZW4gdmFuIHppam4gY29tcGV0ZW50aWVzIGVuIGhhbmRlbHQgZGFhcmJpbm5lbiBvZiBzY2hha2VsdCBhbmRlcmUgZGVza3VuZGlnZW4gaW4uIEhpaiBzdGVsdCB6aWNoIHRvZXRzYmFhciBvcC4gCkkgYW0gdmVyeSBzaHkgYW5kIHRoZSBpZGVhIG9mIGJlaW5nIGluIHN3aW1taW5nIHRydW5rcyBpbiBmcm9udCBvZiBzdHJhbmdlcnMgKG9yIGZyaWVuZHMgYW5kIGZhbWlseSBmb3IgdGhhdCBtYXR0ZXIhKSB3YXMgZGF1bnRpbmcuIE9uZSBuaWdodCBJIHNhaWQgZnVjayBpdCBhbmQgd2VudCBpbi4gCkl0cyBhIGNhcmRnYW1lIHNvIGJ5IGRlZmluaXRpb24gdGhlcmUgaXMgdmVyeSBsaXR0bGUgcm9vbSBmb3Igc2tpbGwuIERvbnQgZ2V0IG1lIHdyb25nIGl0cyBzdGlsbCBhIHZlcnkgZnVuIGdhbWUgYW5kIEkgZW5qb3kgcGxheWluZyBpdCB0b28sIGl0cyB3YWNreSBhbmQgdmFycmllZC4KSSBkb24gdGhpbmsgbG9zaW5nIHlvdXIgam9iIGFzIGEgcHVibGljIHNlcnZhbnQgaXMgYW5hbG9nb3VzbHkgc2V2ZXJlIHRvIGNob3BwaW5nIG9mZiBhIGZpbmdlci4gUmlnaHRzIGFyZSB0cmltbWVkIGFzIGJlbmVmaXRzIHRoZSBwdWJsaWMgZ29vZC4gClJ1dGggTC4gClRoZSBjaXR5IGhhcyA0LjIgbWlsbGlvbiBpbmNvbWUgdGF4IHBheWVycywgYnV0IGp1c3QgODcsMDAwIGluZGl2aWR1YWxzIGVhcm5pbmcgb3ZlciAyMDAsMDAwIGEgeWVhciBwYWlkIG5lYXJseSBoYWxmIHRoZSA0My44Ym4gaW5jb21lIHRheCByYWlzZWQgaW4gdGhlIGNhcGl0YWwuIApZZXAsIHRoYXRzIHJpZ2h0IG1lLiAKS2VlcCBUYWxraW5nIChldmVuIHdoZW4gaXQncyBoYXJkKSBNYXJpb25ldHRlIE9ic3RldHJpY3MgIk1vdGhlciBMb2RlIG9mIFBhaW4iIE1pc3MgVW5pdmVyc2UgTWFrZSBCZWxpZXZlIExpZmUgYXMgUm9sbGVyY29hc3RlciBTaGFja2xpbmcgTGFib3JpbmcgSW5tYXRlcyBXb3JkIFNlYXJjaCAgIChtb3JlKSBXaGF0IFBlb3BsZSBBcmUgQXNraW4nIFdvcmQgU2VhcmNoICAgV2hhdCBQZW9wbGUgQXJlIEFza2luJyBXYXZlcyBvZiBGbGVzaCBSYW5kb20gU3R1ZmYgICBHb25uYSBCZSBGdW4hIChOT1QpIGEgIlN0dXBpZCBHaXJsIiBXYXRjaCAiR29vZCBNb3JuaW5nIEFtZXJpY2EiIEkndmUgRG9uZSBTb21lIChFUikgVGltZSBFdGhpY3MgUGF0aWVudCBBZHZvY2F0ZXMgQnJlYXN0ZmVlZGluZyBLYXRyaW5hIFN0b3JpZXMgU2hhcGUgb2YgYSBNb3RoZXIgVmFjY2luYXRpb25zIFBlZGlhdHJpYyBHcmFuZCBSb3VuZHMgICBKdWx5IDE1LCAyMDA2IEJhYnkgaW4gdGhlIEJyZWV6ZSAgIGEgd29uZGVyZnVsIEhCQUMgc3RvcnkgVGhlIFN1biBQb3N0cGFydHVtIFN1aWNpZGUgQXJ0aWNsZSBMZXQncyBMb29rIGF0IFRob3NlIFNlYXJjaCBUZXJtcyBHcmFuZCBSb3VuZHMgICBKdWx5IDExdGgsIDIwMDYgRHVtcGluZyBXYXRlciBUaGVyYXB5IEhlYXZ5IFdlaWdodCBGaWdodCBXaGF0IE1ha2VzIFBsYWNlbnRhcyBIZWFsdGh5IChvciBub3QpIFdvcmQgU2VhcmNoICAgVmVsYW1lbnRvdXMgSW5zZXJ0aW9uIFdvcmQgU2VhcmNoICAgSGVhbHRoeSBQbGFjZW50YSBXaGF0IERvIEkgS25vdywgQW55d2F5PyBHcmFuZCBSb3VuZHMgICBKdWx5IDR0aCwgMjAwNiBXb3JkIFNlYXJjaCAgIEhvdyB0byBXZWFuIFdvcmQgU2VhcmNoICAgUmlwZSBDZXJ2aXggV29yZCBTZWFyY2ggICBCYWJ5IFdpdGhvdXQgT3h5Z2VuIFdvcmQgU2VhcmNoICAgSG9tZSBCaXJ0aCBBbmFsZ2VzaWNzIElmIGEgU2NoZWR1bGVkIENlc2FyZWFuIGlzIE5lY2Vzc2FyeSBMb3cgQUZJIChOU1QvQlBQKSBGYXQgVmFnaW5hcyBMZXQncyBBbGwgSGF2ZSBWQkFtQ3MhIFdvcmQgU2VhcmNoICAgcG9zdGVyaW9yIGNlcnZpeCBGYXN0aW5nIFBsYWNlbnRhIGFuZCBUb25ndWUgUHN5Y2ggV3JpdGVzIEJsb2dnaW5nICAgRXNzYXlzIG9yIFN0cmVhbXMgb2YgQ29uc2Npb3VzbmVzcz8gTmV3IE9ybGVhbnMgVkJBQyBTdG9yeSBHcmFuZCBSb3VuZHMgUG9zdGVkICAgNi8yNy8wNiBSZWZsZWN0aW9ucyBvbiBOZXcgT3JsZWFucyBSaXR1YWxzIEh1bWFuaXppbmcgYW4gT0IvR1lOIFZpc2l0IFlvbmkgUG93ZXJmdWwgQ29tbWVudCBUaGF0IE11c3QgYmUgU2hhcmVkIE5vISBHZW9ncmFwaGljYWwgRmF0IEdyYW5kIFJvdW5kcyAgIEkgZ290IGluISBLZWxseSBSaXBhICAgTmV3IE9ybGVhbnMgTCBTdGFmZmluZyBFY3N0YXRpYyBCaXJ0aCBJdCdzIGEgKFZCQUMpIEdpcmwhIExhYm9yLCBNYXliZT8gQ2ljYWRhcyBQcmUgL0Vhcmx5L1Byb2Ryb21hbCBMYWJvciBSZWZ1c2FsIEZvcm1zIEJvcmRlciBQYXRyb2wgTGVhcm5zICJFbWVyZ2VuY3kiIENoaWxkYmlydGggSWYgSSBXZXJlIGluIGEgRGV2ZWxvcGluZyBDb3VudHJ5LiAKTmFuY2UsIHdobyBhbHNvIHN0YXJzIGluIHRoZSBmaWxtLCBpcyBwbGFndWVkIGJ5IHVucmVxdWl0ZWQgcm9tYW5jZSBhbmQgdGhlIGFzeW1wdG90aWMgbmF0dXJlIG9mIGh1bWFuIHJlbGF0aW9uc2hpcHMuIApDYW4gZXhwbG9kaW5nIGNob2NvbGF0ZSBtZWFuIHRoZSByZXZvbHV0aW9uIGlzIGhlcmUKUGVyaGFwcyB0aGUgc3VjY2VzcyBvZiBhIGRpcmVjdCBpbnZlc3RtZW50IGludG8gYSBmb3JlaWduIG5ldHdvcmssIHN1Y2ggYXMgR3JlZWNlIG9yIGFub3RoZXIgRXVyb3BlYW4gY291bnRyeSwgd291bGQgc3VnZ2VzdCB0aGUgdmlhYmlsaXR5IG9mIHNpbWlsYXIgYnVzaW5lc3MgdG8gY29uc3VtZXIgZXhwYW5zaW9uIGludG8gb3RoZXIgaG9yc2UgcmFjaW5nIG1hcmtldHMgc3VjaCBhcyBBc2lhLCBTb3V0aCBBbWVyaWNhLCBBZnJpY2Egb3IgYmV5b25kLi4gCkxhIENvYWxpdGlvbiBBdmVuaXIgUXViZWMgKENBUSkgYSByYXBwZWwgbWVyY3JlZGkgYXUgZ291dmVybmVtZW50IENoYXJlc3QgcXVlIGNlIHByb2pldCBkZSBjYXNpbm8gIEthaG5hd2FrZSBlc3QgaWxsZ2FsLgpJdCBjYW4gYmUgYXJndWVkIHRoYXQgYWxsIG9mIHRoZXNlIHRocmVlIHdlcmUgaW1tZW5zZWx5IGhlbHBlZCBieSBNb3RoZXIgTmF0dXJlLCBidXQgaXQgaXMgbXkgYmVsaWVmIHRoYXQgdGhlIG5hdHVyYWwgYmxlc3Npbmcgd2FzIGZvcnRpZmllZCBieSBpbm5lciBwdXJpdHkuIApXZWxsIGFmdGVyIGEgZmV3IGRyaW5rcyBKZXNzIGRlY2lkZWQgdGhhdCBvbmUgb2YgdGhlIHdhaXRlcnMgbG9va2VkIGxpa2UgdGhlIE5pY2FyYWd1YW4gdmVyc2lvbiBvZiBWaW5jZSBWYXVnaG4uIFlvdSBiZSB0aGUganVkZ2Ugb2YgdGhhdC4uIApJZiB5b3UgaGF2ZSBvYnZpb3VzbHkgZ3Jvd24gc2luY2UgdGhlbiwgaXQgd2lsbCBub3QgbWF0dGVyIHRvIHRoZW0uIApHb29kIG9uIGhpbSBmb3IgdHVybmluZyB0aGluZ3MgYXJvdW5kLCBidXQgYSBsb3Qgb2YgdGhlIGNvYWNoaW5nIHN0YWZmIGFuZCBmYW5zIHdhbnRlZCBoaW0gZ29uZSBhbnl3YXkuLiAKU2VyaW91c2x5IHdoeSBoYXMgbm8gb25lIGNhbGxlZCB0aGVtIG9uIHRoaXMgbGluZSBvZiBidWxsc2hpdC4gU0hTIHNhaWQgc29tZXRoaW5nIHRvIHRoZSBlZmZlY3Qgb2YgIkkgZG9uJ3Qga25vdyB3aHkgZXZlcnlvbmUgaXMgZ29ubmEgbGlzdGVuIHRvIGEga25vd24gbGlhciBzcG91dCBsaWVzIGluIENvbmdyZXNzLiIgQW5kIEknbSBsaWtlICJiaXRjaCB0aGlzIHNob3VsZCBtYWtlIHlvdSBKVU1QIEZPUiBKT1kuIiBJZiBoZSdzIHJlYWxseSBqdXN0IGdvaW5nIHRoZXJlIHRvIGxpZSB0byBDb25ncmVzcyB0aGVuIEJPT00gdGhhdCdzIGEgZmVsb255IChzZWUgcGFkZGxpbicpLiAKU3RvcCBmb3JjaW5nIGF0aGVpc20gZG93biBwZW9wbGUncyB0aHJvYXRzIGJlY2F1c2UgeW91IHRoaW5rIHRoZXkgYXJlIGZvcmNpbmcgQ2hyaXN0aWFuaXR5IGRvd24gdGhlaXIga2lkcyB0aHJvYXRzLiAKUG9rZXIncyBuZXcgdXBzdXJnZSBpbiAuIGlzIGR1ZSB0byAuIHNob3dpbmdzIG9mIC4gcG9rZXIgLiBzdWNoIGFzIFRoZSAuIFRvdXIgYW5kIFRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIuIFRoaXMgaGFzIHJlc3VsdGVkIC4gb2YgcGVvcGxlIGFsbApWdWVzdHJhIG1lcmNlZCA+IHVzYXJjZWQgPiB1c3RlZDsgdGhhdCdzIHdoeSBpdCBpcyBzdGlsbCBhYmJyZXZpYXRlZCBhcyBVZC4uIApUaGlzIERydXplIHdvbWFuIGNvdWxkIGJlIHBhcnQgb2YgSXNyYWVsIEtuZXNzZXRHYWRlZXIgTXJlZWgsIHdobyBpcyBydW5uaW5nIGZvciBJc3JhZWwgY2VudHJpc3QgQmx1ZSBhbmQgV2hpdGUgcGFydHkgbGVkIGJ5IGZvcm1lciBhcm1lZCBmb3JjZXMgY2hpZWYgQmVubnkgR2FudHosIGlzIGFsbCBidXQgZ3VhcmFudGVlZCBhIHNlYXQgaW4gdGhlIEtuZXNzZXQgaW4gYW4gZWxlY3Rpb24gc3lzdGVtIHdoZXJlIHZvdGVycyBjaG9vc2UgZnJvbSBhIGxpc3Qgb2YgY2FuZGlkYXRlcy4gR2FudHogaXMgdGhlIG1haW4gb3Bwb25lbnQgb2YgUHJpbWUgTWluaXN0ZXIgQmVuamFtaW4gTmV0YW55YWh1LiBTYXNraWEuIApUaGVyZSBpcyBhbHNvIHRoZSBjb21wbGljYXRpbmcgbWF0dGVyIG9mIGEgbG9hbiBhZ3JlZW1lbnQgdGhlIGNvbXBhbnkgc2lnbmVkIHdpdGggdGhlIENhaXNzZSBkZSBkIGV0IHBsYWNlbWVudCBkdSBRdSB0byByYWlzZSBmdW5kcyBmb3IgdGhlIEF0a2lucyBhY3F1aXNpdGlvbiwgaW4gd2hpY2ggaW4gYWdyZWVkIHRvIGtlZXAgaXRzIGhlYWRxdWFydGVycyBpbiBRdWViZWMgdW50aWwgMjAyNC4uIApJbiBidXNpbmVzcywgbm90IGV2ZXJ5IGRlYWwgaXMgd29ydGggZG9pbmcsIG5vdCBldmVyeSBwdXJjaGFzZSBpcyB3b3J0aCBtYWtpbmcuIApMZXMgcXVlbHF1ZXMgZGl6YWluZXMgZGUgcGxhbnRlcyBwcnNlbnRlcyBhdSBjdXIgZGUgbCdlbnNlbWJsZSBxdSdlc3QgbGUgYm9pcyBzYWNyIG4nb250IHBhcyBwb3VyIHNldWxlIHZvY2F0aW9uIGQndHJlIG9ybmVtZW50YWxlcywgcXVhbmQgYmllbiBtbWUgY2hhY3VuZSBkJ2VudHJlIGVsbGVzIHBvc3NkZSB1bmUgZm9ybWUgZGUgYmVhdXQgcXVpIGx1aSBlc3QgcGVyc29ubmVsbGUuIEVuIGVmZmV0LCBjb21tZW50IG5lIHBhcyBzJ2V4dGFzaWVyIGRldmFudCBsYSBkbGljYXRlIGFyY2hpdGVjdHVyZSBkZXMgZmxldXJzIGRlIGwnYWNvbml0PyBEZSBtbWUsIGVzdCBpbCBwb3NzaWJsZSBkZSBwYXNzZXIgb3V0cmUgbGUgdmVsb3V0IHNveWV1eCBkZXMgZmV1aWxsZXMgZHUgZGljdGFtZSwgZGUgbmdsaWdlciBsZSBwZG9uY3VsZSBzZXJwZW50aW4gZHUgY3ljbGFtZW4gPyBOb3VzIGF1cmlvbnMgZW5jb3JlIG1pbGxlIHJhaXNvbnMgZGUgdG9tYmVyIGVuIGFkbWlyYXRpb24gZGV2YW50IGNlcyBwbGFudGVzIHF1aSwgYXUgZGVsIGQndHJlIGRlcyBhc3NlbWJsYWdlcyBib3RhbmlxdWVzIGNvbXBsZXhlcywgc29udCBhdXNzaSBjZSBxdWUgbCdvbiBhcHBlbGxlIGRlcyBzaW1wbGVzLCBjJ2VzdCAgZGlyZSBkZXMgZW50aXRzIG5hdHVyZWxsZXMgZGFucyBjZSBxdSdlbGxlcyBvbnQgZGUgcGx1cyBwdXIuIE1hbGdyIGxhIHNpbmd1bGFyaXQgcXVpIGxlcyBwYXJ0aWN1bGFyaXNlLCBjZXMgcGxhbnRlcyBuJ2VuIHNvbnQgcGFzIG1vaW5zIGRvdWVzIGRlIHF1YWxpdHMgZG9udCBsJ2FtYml2YWxlbmNlIGFwcGFyZW50ZSBwb3VycmFpdCBsZXMgZGlzdGluZ3VlciBlbiByYWlzb24gZCd1biB0cnVjaGVtZW50IGFydGlmaWNpZWwgY29uc2lzdGFudCAgbGVzIHJhbmdlciBkYW5zIGRlcyBncm91cGVzIHNvbGlkZW1lbnQgdGlxdWV0cy4gCmFuIG91dGRhdGVkIGFuZCBwb3RlbnRpYWxseSBoYXJtZnVsIHRlcm0KSSBhbHdheXMgYm9hcmRlZCBhdCB0aGUgdmVyeSBmcm9udCAob3IgYmFjaz8gZ2VleiBpIGRvbiBldmVuIHJlbWVtYmVyIGF0IHRoaXMgcG9pbnQpIG9mIHRoZSB0cmFpbiBhbmQgYXQgbW9zdCAzIG9yIDQgcGVvcGxlIGNvdWxkIGJvYXJkIGVhY2ggdGltZSB0aGUgdHJhaW4gY2FtZSwgd2hpY2ggaXMgYWJvdXQgaG93IG1hbnkgcGVvcGxlIHdvdWxkIGxpbmUgdXAgYmV0d2VlbiB0cmFpbnMgYW55d2F5IHNvIGkgcHJldHR5IG11Y2ggYWx3YXlzIGJvYXJkZWQgcmlnaHQgYXdheS4gCkNhbiB0aGVtIGFsbCwgc3RvcmUgdGhlbSBpbiB0aGUgYmFzZW1lbnQsIGhhdmUgbGlrZSBhIGhhcnZlc3QgcGFydHkgd2hlbiBpdCBnZXRzIGxvYWRlZCBpbi4uIApPYnZpb3VzbHksIHRoZSBtYXJjaGluZyBtb3JvbnMgdGhhdCBtYWtlIHVwIGhpcyBiYXNlIHdpbGwgbmV2ZXIgYmUgb24gYm9hcmQuIApUaGlzIHRyZWF0bWVudCBpcyBiZWxpZXZlZCB0byBoZWxwIGJ1aWxkIGNvbGxhZ2VuIGluIHRoZSBza2luIGFuZCBpbmNyZWFzZSBjaXJjdWxhdGlvbiwgZm9jdXNpbmcgYWxsIGVmZm9ydHMgb24gaW1wcm92aW5nIHVuZXZlbiBza2luIGluc3RlYWQgb2YgdGhlIGZhdCBiZWxvdyBpdC4gCkhlYWx0aCBBcnRpY2xlcyAgTm92ZW1iZXIgMjYsIDIwMTAKTWF5YmUgUGFjcXVpYW8gaXMgdGhpbmtpbmcgYWJvdXQgdGhpcy4gTWF5YmUgaXQncyBhIGJsZXNzaW5nIGluIGRpc2d1aXNlIHRoYXQgaGUncyBpbiBFdXJvcGUgd2l0aCBoaXMgZmFtaWx5IG9uIGFuIGV4dGVuZGVkIHZhY2F0aW9uIHNvIGhlIGNhbiBtdWxsIG92ZXIgdGhlIGltbWVkaWF0ZSBmdXR1cmUgb2YgaGlzIGNhcmVlci4gCkluIGl0cyBmaXJzdCB5ZWFyIHRoZSBzaW5nbGUgZGF5IGV2ZW50IGF0dHJhY3RlZCAxLDcwMCBhdHRlbmRlZXMuIApIQU1JTFRPTiAgIFJheSBFbWVyeSwgdGhlIGZvcm1lciBOSEwgZ29hbHRlbmRlciB3aG9zZSBjYXJlZXIgc3Bhbm5lZCBtb3JlIHRoYW4gYSBkZWNhZGUgYW5kIGluY2x1ZGVkIHN0b3BzIGluIE90dGF3YSwgQ2hpY2FnbyBhbmQgUGhpbGFkZWxwaGlhLCBkcm93bmVkIGluIEhhbWlsdG9uIEhhcmJvdXIgb24gU3VuZGF5LCBwb2xpY2Ugc2FpZC4KR290IGEgY3Jhbmt5IHNwb3VzZT8gSG9uZXksIHlvdSBzaG91bGQgY29uc2lkZXIgc29tZSBCb3RveC4KTXkgZGF1Z2h0ZXIgdXNlZCB0byBiZSBmYXNjaW5hdGVkIHdpdGggdGhlIDE5ODBzLCB3b3VsZCB0ZWxsIG1lIGFsbCBhYm91dCB0aGVtLiBTaGUga25ldyBzbyBtdWNoIGFib3V0IGEgZGVjYWRlIHdheSBiZWZvcmUgaGVyIHRpbWUgYW5kIHdoZW4gSSBhc2tlZCBoZXIgaG93IHNoZSBzYWlkIHNoZSBhY3RlZCBsaWtlIEkgd2FzIHJpZGljdWxvdXMgYW5kIG1vcmUgb3IgbGVzcyBzYWlkIHNoZSByZW1lbWJlcmVkIGl0IGJlY2F1c2Ugc2hlIGxpdmVkIGl0LCBhbmQgdGhhdCBzaGUgd2FzIGEgYnVpc2luZXNzIG1hbi93b21hbiBkdXJpbmcgdGhlIDgwcy4gCiJJIHdhbnQgdG8gdGFsayBhYm91dCBob3cgdGhlcmUgaXMgbmF0dXJhbGx5IGEgY2hhb3RpYywgbWVzc3ksIHVucHJlY2VkZW50ZWQgc29jaW8gY3VsdHVyYWwsIHNleHVhbCBjaGFuZ2UgICB0aGUgcmVja29uaW5nIGFzIHNvbWUgZm9sa3MgYXJlIGNhbGxpbmcgaXQgICBoYXBwZW5pbmcgYXJvdW5kIHVzLCIgc2hlIGFkZGVkLiAiQW5kIGl0IHdvbid0IGJlIHRpZHksIGFuZCBpdCB3b24ndCBiZSBlYXN5LCBhbmQgd2UgZG9uJ3QgaGF2ZSBhIHBsYXlib29rLiBXZSBjYW4ndCBnbyB0byBwYWdlIDQ2MyBhbmQgdGVhciBpdCBvdXQgYW5kIHNheSB0aGlzIGlzIGhvdyB3ZSBuYXZpZ2F0ZSB3aGF0J3MgZ29pbmcgb24uIgpJIGhvcGUgeW91IHVuZGVyc3RhbmQgd2h5IHRoaXMgaXMuIEl0IG9rYXkgdG8gc2F5ICJ0aGUgcGFudGhlciBsb29rcyBkZXByZXNzZWQuIiBXaGVuIHBlb3BsZSBzYXkgInlvdSBkb250IGhhdmUgZW5vdWdoIGluZm9ybWF0aW9uIHRvIG1ha2UgdGhhdCBqdWRnbWVudCwiIGl0IGlzbiBva2F5IHRvIGRvdWJsZSBkb3duIG9uIHlvdXIgb3BpbmlvbiBqdXN0IGJlY2F1c2UgeW91IGhhdmUgc2VlbiBhIGRlcHJlc3NlZCBodW1hbiBiZWluZyBiZWZvcmUuIFRoYXQgaXMgZHVtYi4gCkFjZXMgYXJlIHVzdWFsbHkgdGhlIGhpZ2hlc3QgdmFsdWVkLCBmb2xsb3dlZCBieSBLaW5ncywgUXVlZW5zLCBKYWNrcyBhbmQgc28gb24uIApVc2UgYW4gYXBwIGFuZCB3ZWJzaXRlIGNhbGxlZCAiTWFuZ28gUGxhdGUuIiBJdCBkb2VzbiBhbHdheXMgaGF2ZSB0aGUgcmVhbGx5IGxvY2FsIHBsYWNlcywgYnV0IEkgdXNlIGl0IHdoZW4gSSBhbSBpbiBhIG5ldyBhcmVhIGFuZCBuZWVkIHRvIGZpbmQgc29tZSBnb29kIGNvZmZlZSBvciBsdW5jaCBxdWlja2x5LiBJIHBlcnNvbmFsbHkgbG92ZSBLb3JlYSwgSSB3YXMgYmFjayBoZXJlIGluIDIwMTYgZm9yIGEgZGVwbG95bWVudCBhbmQgYXMgc29vbiBhcyBJIGdvdCBvdXQgU2VydmljZSBJIG1vdmVkIG91dCBoZXJlLiBPbmUgb2YgdGhlIGJpZyBzZWxsaW5nIHBvaW50cyBvbiBtb3Zpbmcgb3V0IGhlcmUgaXMgdGhhdCBhZnRlciB0aGUgTG90dXMgTGFudGVybiBGZXN0aXZhbCB0aGVyZSBpcyBsaXRlcmFsbHkgYSBmZXN0aXZhbCBnb2luZyBvbiBldmVyeSB3ZWVrZW5kISBJbiBmYWN0IGp1c3QgdGhpcyBsYXN0IHdlZWtlbmQgSSB3ZW50IHRvIGEgZHJ1bSBmZXN0aXZhbCBhbmQgdGhpcyBuZXh0IEkgd2lsbCBiZSBnb2luZyB0byBzb21lIHNvcnQgb2YgbGlnaHQgZmVzdGl2YWwuIApBIFNvY2lvIE5ldXJvbG9naWNhbCBQZXJzcGVjdGl2ZSBJdCBjYW4gYmUgcmVhc29uYWJseSBhcmd1ZWQgdGhhdCB0aGUgbGFyZ2VyIGN1bHR1cmFsIG5vcm1zIGFuZCB0cmFkaXRpb25zIGZvc3RlciB0aGUgZGlzcmVzcGVjdGluZyBvZiB3b21lbi4gQWxsIHlvdSBuZWVkIHRvIGRvIGlzIHRvIFR1cm4gYmFjayB0aGUgd29yZHMgeW91IHNheSB0byBtZSBBbmQgc2F5IHRoZW0gdG8geW91cnNlbGYgVG8ga25vdyB0aGUgdHJ1dGguIElmIEkgd2VyZSBydW5uaW5nIFRoZSBWaWV3LCBJJ2QgZmlyZSBSb3NpZS4gCkl0IGV2ZW50dWFsbHkgYmVjYW1lIHRvbyBtdWNoIHdvcmsgZm9yIG1lIGFuZCBJIGRlY2lkZWQgb24gc29icmlldHksIGJ1dCBvbmUgb2YgdGhlIHRoaW5ncyBJIGxlYXJuZWQgb24gdGhpcyBzdWIsIHRhbGtpbmcgdG8gb3RoZXIgc29iZXIgcGVlcHMsIGFuZCBqdXN0IGluIG15IG93biBqb3VybmV5IGlzIHRoYXQgSSBjYW4gb25seSBtYWtlIGNob2ljZXMgZm9yIE1FIGFuZCB0aGF0IHB1cnN1aW5nIHdob2xlbmVzcyBhbmQgaGVhbHRoIGxvb2tzIGRpZmZlcmVudCBmb3IgYSBsb3Qgb2YgZGlmZmVyZW50IHBlb3BsZS4gCjcuIE5vIGdvcmUsIHBvcm5vZ3JhcGh5LCBvciBzZXh1YWxseSBncmFwaGljIGltYWdlcy4KUERGIERvd25sb2FkIFNpbmdsZSBwYXR0ZXJuIEZSRUUuIAoxLiBHbyB0byBhbnkgbWVzc2VuZ2VycyBsaWtlIHlhaG9vLCByZWRpZmYgb3IgZ21haWwuIAoiWW91IHdhbnQgdG8gZGViYXRlIGZvdW5kYXRpb25zIGFuZCBjaGFyaXRpZXM/IiBPYmFtYSBzYWlkLCBjb21wYXJpbmcgdGhlIFRydW1wIEZvdW5kYXRpb24gdG8gdGhlIENsaW50b24gRm91bmRhdGlvbiwgYXNzb2NpYXRlZCB3aXRoIERlbW9jcmF0IEhpbGxhcnkgQ2xpbnRvbiBhbmQgaGVyIGZhbWlseS4gIk9uZSBjYW5kaWRhdGUncyBmYW1pbHkgZm91bmRhdGlvbiBoYXMgc2F2ZWQgY291bnRsZXNzIGxpdmVzIGFyb3VuZCB0aGUgd29ybGQuIFRoZSBvdGhlciBjYW5kaWRhdGUncyBmb3VuZGF0aW9uIHRvb2sgbW9uZXkgb3RoZXIgcGVvcGxlIGdhdmUgdG8gaGlzIGNoYXJpdHkgYW5kIHRoZW4gYm91Z2h0IGEgc2l4IGZvb3QgdGFsbCBwYWludGluZyBvZiBoaW1zZWxmLiIKQnJlYXN0IGlzIGJlc3QgaXMgb25seSBiZXN0IGlmIGl0IHdvcmtpbmcuIElmIGl0IG5vdCBpdCBsaWtlIHRyeWluZyB0byB0aWdodGVuIGEgd2FycGVkIHNjcmV3LCBpdCBqdXN0IG5vdCBnb25uYSBoYXBwZW4uLiAKV2l0aCBMUE0uIENoZXJ5bCBGaXRjaCBvZmZpY2lhdGluZy4gSW50ZXJtZW50IGluIEx5bm52aWxsZSBDZW1ldGVyeSBmb2xsb3dlZCBieSBhIGdhdGhlcmluZyBhdCB0aGUgRGVsaGkgSHVuZ2FyaWFuIEhhbGwuIApZZXAsIEkgZmVlbCB5b3Ugb24gdGhpcyBzbyBtdWNoLiBNeSB3ZWlnaHQgZ29lcyB1cCBhbmQgZG93biBkZXBlbmRpbmcgb24gaWYgSSBydW5uaW5nIGEgbG90LCBhbmQgZXZlbiBhdCBteSBza2lubmllc3QgSSBzdGlsbCBoYXZlICJiaWciIHRoaWdocy9oaXBzIGFuZCBhIGxpdHRsZSBwYXVuY2guIEl0IHRha2VuIG1lIHllYXJzIHRvIGdldCBva2F5IHdpdGggdGhlIGZhY3QgdGhhdCBqdXN0IHRoZSB3YXkgbXkgYm9keSBpcyBzaGFwZWQuIApUaGUgc2Vjb25kIGlzIHdoZW4gSSBzdGFydGVkIGRvaW5nIGFuIGhvdXIgb2YgdGFjdGljcyBhIGRheS4gCkluIGFkZGl0aW9uLCB0aGUgU2NvdXRzIHlvdSBmYWNlIHRoZXJlIGhhdmUgMzkgZXZhc2lvbi4gCiJXZSBhbHdheXMgdHJpZWQgdG8gbWFrZSBzdXJlIHRoZSBmb3VuZGF0aW9uIHdhcyBydW4gb24gYSBzaG9lc3RyaW5nIGJ1ZGdldC4iIFRoZSByZWFsaXR5LCBob3dldmVyLCBjb250cmFkaWN0ZWQgaGlzIGNsYWltcyB0aGF0IHRoZSBmb3VuZGF0aW9uIGhhZCBqdXN0IGhhZCBhIGJhZCB5ZWFyIG9yIHR3by4gRmluYW5jaWFsIHJlY29yZHMgc2hvdyB0aGUgZm91bmRhdGlvbiBkb25hdGVkIHRvIGNoYXJpdHkganVzdCAyNCBjZW50cyBvZiBldmVyeSBkb2xsYXIgaXQgcmFpc2VkIGluIDIwMTQgMTUsIHRoZSBtb3N0IHJlY2VudCB5ZWFyIGF2YWlsYWJsZS4gVGhpcyBjaGFyaXRhYmxlIGRpc3RyaWJ1dGlvbiAgIHdvcnRoIGFib3V0ICQxMzQsMDAwICAgbWVhbnQgdGhlIGZvdW5kYXRpb24gb3BlcmF0ZWQgYXQgYSBsb3NzIGJlY2F1c2UgZXhwZW5zZXMgY29uc3VtZWQgODYgcGVyIGNlbnQgb2YgaXRzIHJldmVudWUuIApEZW0gR2V3aW5uIHdpcmtsaWNoIFByb2ZpIFRvdXJuaWVyZSB6ZWlndGUuIApJIHJlY29tbWVuZCBtb3JlIGRpdmVyc2lmeWluZyB0aGUgdmlzdWFscyBhbnl3YXksIG1heWJlIHNvbWV0aGluZyBsaWtlIHRoaXMgd291bGQgYmUgYSB3ZWxjb21lIGNoYW5nZSwgZXZlbiB0byBsb3lhbCBzdWJzY3JpYmVycyBsb3ZpbmcgdGhlaXIgd29yayBhcyBpdCBpcy4KQSBmZXcga2V5IGZlYXR1cmVzIG9mIHRoZSBDb250aWdvIEFyaWEgU3RhaW5sZXNzIFN0ZWVsIE11ZyAgIDEgTXVnIExpcXVpZHMgaG90IGZvciBzZXZlbiBob3VycyBhbmQgY29sZCBmb3IgMjAgaG91cnMgRGlzaHdhc2hlciBzYWZlIG11ZyBCUEEgZnJlZSBFYXN5IHdvbid0IGJlIGFibGUgdG8gZmluZCBhIGpvYiBhZnRlciBncmFkdWF0aW5nIGFueXdheS4gCllvdSBwdXQgeW91ciBtb25leSB3aXRoIGEgZ3V5IGJlY2F1c2UgaGUgYSBzbW9vdGggdGFsa2VyIGFuZCBoZSBoYW5kbGVzIHlvdXIgYWxsIHN0YXIgdGVhbW1hdGVzIGZpbmFuY2VzLiAKSG93ZXZlciwgYXMgdGhlIHBlcmZvcm1hbmNlIGNhbWUgdG8gYSBjbG9zZSwgdGhlcmUgd291bGQgbm90IGJlIGEgZmluYWwgYm93IGJ1dCBhIGZpbmFsIGp1bXAgYXMgTGFkeSBHYWdhIGxpdGVyYWxseSBkcm9wcGVkIHRoZSBtaWMsIGNhdWdodCBhIGZvb3RiYWxsIGFuZCBqdW1wZWQgb2ZmIHRoZSBzdGFnZS4KR2Vyc3RlbmJlcmcgc2FpZCBDb2xlIHdhcyBhIGdldCBpdCBkb25lIGtpbmQgb2YgZXhlY3V0aXZlIHdobyBzb21ldGltZXMgd2FudGVkIHRvIG1vdmUgZmFzdGVyIHRoYW4gR00gY291bGQgZ28uIEJ1dCBpdCB3YXMgdGhhdCBzdHlsZSB0aGF0IHB1c2hlZCBoaW0gdGhyb3VnaCB0aGUgcmFua3MgdG8gdGhlIEdNIHByZXNpZGVuY3kuCkkgd2FudCB0byBiZSBhbiBpY29uIGluIG1hbnkgZm9ybXMuIFNvIHRoYXQgd2hlcmUgaXQgYmVnYW4uIi4gClRoZSBiZXN0IHBhcnQgYWJvdXQgQmFycnkgaG9tZXIgd2FzIHNlZWluZyB0aGUgY2xhc3MgcHJlc2VudGVkIGJ5IEhhbmsgQWFyb24uIEhhbmsga25vd3MgdGhpcyByZWNvcmQgaXMgb2J2aW91c2x5IHRhaW50ZWQsIHlldCBoZSBzdGlsbCByb3NlIGFib3ZlIGl0IGFuZCB3YXMgdGhlIGJpZ2dlciBwZXJzb24gc29tZXRoaW5nIHRoYXQgQmFycnkgY291bGQgbmV2ZXIsIGV2ZXIgYmUuCjFhKSBQb3N0cyBNdXN0IEJlIFJlbGF0ZWQgdG8gV3JpdGluZzogQWxsIHN1Ym1pc3Npb25zIG11c3QgYmUgZGlyZWN0bHkgcmVsYXRlZCB0byB3cml0aW5nLiBQb3N0cyB0YW5nZW50aWFsbHkgcmVsYXRlZCB0byB3cml0aW5nIGFyZSBtb3JlIGxpa2VseSB0byBiZSByZW1vdmVkIGF0IG1vZGVyYXRvciBkaXNjcmV0aW9uLgpJIGhhdGUgdGhhdCBJIGNhbid0IHRydXN0IHBlb3BsZS4gSSB3YW50IHRvIHRydXN0IHBlb3BsZSBhbmQgYmVsaWV2ZSBpbiB0aGUgZ29vZCBpbiBvdGhlcnMsIGJ1dCBJIGp1c3QgZmVlbCBsaWtlIEkgY2FuJ3Qgbm93YWRheXMuIExpa2UgZm9yIGluc3RhbmNlLCB0aGUgb3RoZXIgZGF5IEkgcGFya2VkIG15IGNhciBzb21ld2hlcmUgYW5kIGxhdGVyIGhhZCB0aGF0IGZlZWxpbmcgb2YgYW54aWV0eSwgJ2RpZCBJIHJlbWVtYmVyIHRvIGxvY2sgbXkgY2FyPycgYW5kIGNvdWxkbid0IGxldCB0aGF0IGZlZWxpbmcgZ28gdG8gd2hlcmUgSSBmZWx0IHRoZSBuZWVkIHRvIGdvIGJhY2sgdG8gbWFrZSBzdXJlIEkgaGFkIGxvY2tlZCBpdC4gClRlY2huaWNhbGx5IG9ubGluZSBnYW1ibGluZyBpcyBpbGxlZ2FsIGFscmVhZHkgYnV0IHRoaXMgaXMgbm90IGVuZm9yY2VkLiBIb3dldmVyLCB0aGUgbWFpbiBpc3N1ZSBhcHBlYXJzIHRvIGJlIHRoYXQgcG9rZXIgaXMgYmVpbmcgZXF1YXRlZCB0byBwb2tpZXMgYW5kIGlzIHRoZXJlZm9yZSBhIGdhbWUgb2YgY2hhbmNlIGFuZCBub3Qgc2tpbGwuIEhvd2V2ZXIsIGFueW9uZSB3aG8gaGFzIHBsYXllZCBwb2tlciBrbm93cyB0aGF0IHRoaXMgaXMgZmFyIGZyb20gdGhlIGNhc2UuCkdvZCBoYXMgZG9uZSB0aGlzIGZvciB3aGF0IHJlYXNvbj8gSXQgaXMgb25seSBmb3IgdGhlbSB0byBkd2VsbCBzYWZlbHkgaW4gdGhlaXIgUHJvbWlzZWQgTGFuZDogd2VyZSBicm91Z2h0IG91dCBvZiB0aGUgbmF0aW9ucywgYW5kIG5vdyBhbGwgb2YgdGhlbSBkd2VsbCBzYWZlbHkuIApIZW5jZSwgdGhlIHRlY3RvcmlhbCBtZW1icmFuZSBjb250cmlidXRlcyB0byBjb250cm9sIG9mIGhlYXJpbmcgc2Vuc2l0aXZpdHkgYnkgaW5mbHVlbmNpbmcgdGhlIGlvbmljIGVudmlyb25tZW50IGFyb3VuZCB0aGUgc3RlcmVvY2lsaWEuRHJLb3J2dXMgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNCBob3VycyBhZ29JIGdlbnVpbmVseSBjdXJpb3VzIG15c2VsZiwgdW5sZXNzIGhlIGlzIGEgcHJvZmVzc2lvbmFsIHJlZGRpdG9yIChpcyB0aGF0IGV2ZW4gYSB0aGluZz8pIEkgaW1hZ2luZSBpdCBoYXMgdG8gYmUgYXQgbGVhc3Qgc2VtaSBhdXRvbWF0ZWQuIApDaGlsZHJlbiBIb3NwaXRhbC4gSmFuZSBGaW5sYXkgYXQgdGhlIENyb3NzdG93biBDbGluaWMgaW4gVmFuY291dmVyLiBGaW5sYXkgaXMgYSBwZWRpYXRyaWNpYW4gYW5kIHZhY2NpbmUgY291bnNlbGxvci4uIApBdCBXYWwgTWFydCB0aGlzIGlzIGhhbmRsZWQgYnkgdGhlIGNoZWNrIG91dCBsaW5lLiBJZiB5b3UgYXJlIGF0IFdhbCBNYXJ0IHlvdSBrbm93IHRoYXQgeW91IGNhbiB1c2UgY2FzaCwgY2hlY2sgb3IgY3JlZGl0IGNhcmRzIHRvIHBheSBmb3IgcHJvZHVjdHMuIApUaGUgdHJ1Y2sgaXMgdGhlIHRydWNrIGFuZCB5b3UgY2FuIGNoYW5nZSB0aGF0LiAKUmVwbGljYXRpb24gYWxsb3dzIHVzIHRvIG1ha2UgdGhlIHByb2R1Y3RzIHdlIG5lZWQgZm9yIHBlZXIgdG8gcGVlci4gCllvdSBtaWdodCBzYXkgIlJlbGF0aW9uc2hpcCBidWlsZGluZyBpcyBjcml0aWNhbCBpbiBncm93aW5nIHNhbGVzIHJlc3VsdHMuIApJZiB0aGlzIHdlcmUgdHJ1ZSwgdGhlbiB0aGVyZSBjb3VsZCBiZSBubyBzb2JlciBwZW9wbGUgdGhhdCBoYWQgYW55IHN1Y2Nlc3MgaW4gaGlzIGVudGlyZSBpbmR1c3RyeS4gClNhZGx5IChhbHRob3VnaCwgSSBndWVzcyBmb3IgdGhlIGJlc3QpIG5vdGhpbmcgZXZlciBjYW1lIG9mIGl0LiBXZSBzcGVudCBzb21lIHRpbWUgYXBhcnQuIEFuZCBJIHN0YXJ0ZWQgdG8gZ2V0IHJlYWxseSByZWxpZ2lvdXMsIHNvIEkgdHJpZWQgbm90IHRvIHRoaW5rIG9mIGhlciB0aGF0IHdheS4gCkl0IHByb2JhYmx5IGNvdWxkIGFsbCBqdXN0IGJlIGNvaW5jaWRlbmNlLi4gCkFjY29yZGluZyB0byB2ZXhpbGxvbG9naXN0cyAocGVvcGxlIHdobyBzdHVkeSBmbGFncyksIEJvc3RvbiBpcyBhbW9uZyB0aGUgY291bnRyeSdzIGNlbGxhciBkd2VsbGVycyB3aGVuIGl0IGNvbWVzIHRvIGl0cyBmbGFnLgooRnVsbCBBbnN3ZXIpLiAKQXMgZm9yIEtvZWksIHlvdSBnb3R0YSBsb29rIGF0IHRoZWlyIHRyYWNrIHJlY29yZC4gCkludmVudGl2ZSBhbmQgdW5pcXVlIGNyZXBlIGZpbGxpbmdzLCBhbG9uZyB3aXRoIGVudGljaW5nIGJhZ3VldHRlIHNhbmR3aWNoZXMgYW5kIFBhcmlzaWFuIGluc3BpcmVkIHN0YXJ0ZXJzLCBwZXBwZXIgdGhlIG5ldyBhbmQgaW1wcm92ZWQgbWVudSBhdCBBIENhZmUsIGZvcm1lcmx5IEFybGVuZSdzIENyZXBlcmllIEJpc3RybyBhbmQsIGJlZm9yZSB0aGF0LCBDcmVwZXMgYSBsYSBDYXJ0ZSBvbiBCcm9hZHdheSBpbiBCb3VsZGVyLkFsb25nIHdpdGggdGhlIG1lbnUgcmV2YW1wLCB5b3UnbGwgZmluZCBzd2VlcGluZyBjaGFuZ2VzIGluc2lkZSBBIENhZmUuQW4gYW1iaXRpb3VzIG1ha2VvdmVyIGhhcyB0cmFuc2Zvcm1lZCB0aGUgb25jZSBub25kZXNjcmlwdCBjcmVwZSBqb2ludCBpbnRvIGEgcXVhaW50LCBjb3p5LCBQYXJpc2lhbiBzdHlsZSBjYWZlIGNvbXBsZXRlIHdpdGggY2hhbmRlbGllcnMsIGV4cG9zZWQgYnJpY2ssIGhvYm5haWwgZnJhbWVkIG1pcnJvcnMgYW5kIHdvdmVuIHJhdHRhbiBiaXN0cm8gYXJtY2hhaXJzLiAKV2UgYWxzbyB0cnkgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbiBvZiBhdCB3aGF0IHRpbWUgcG9pbnQgdGhlIHNpZ25hbCBmb3IgcHJlZGljdGluZyBpZiBhIHBsYXllciB3aWxsIGZvbGQgaXMgc3Ryb25nZXN0LiBXZSB1c2Ugc3RhdGUgb2YgdGhlIGFydCBGQUNTIEFjdGlvbiBVbml0IGRldGVjdG9ycyB0byBhdXRvbWF0aWNhbGx5IGFubm90YXRlIHRoZSBwbGF5ZXJzIGZhY2lhbCBleHByZXNzaW9ucywgd2hpY2ggaGF2ZSBiZWVuIHJlY29yZGVkIG9uIHZpZGVvLiAKSW0gSmFociAyMDEzIHNvbGxlbiBkYW5uIG5vY2ggd2VpdGVyZSB2aWVyIEhvdGVscyBmb2xnZW4uIApNcnMuIFdpbGxpYW0gRWFnZXIsIEJhbGR3aW5zdmlsbGUgcmVwb3J0ZWQgdGhhdCBzaGUgYm91Z2h0IHNvbWUgY2xvdGggIGluZyBhbmQgcGxhY2VkIHRoZSBwYWNrYWdlIG9uIGEgY291bnRlci4gCiJUaGlzIGlzIGdvaW5nIHRvIGJlIGFuIGlzc3VlIGF0IHRoZSB1cGNvbWluZyBhbm51YWwgZ2VuZXJhbCBtZWV0aW5ncyBvZiBhbGwgdGhlc2UgY2x1YnMsIGFuZCB0aGUgZGlyZWN0b3JzIHRoZXJlIGhhZCBiZXR0ZXIgYmUgcmVhZHkgdG8gZXhwbGFpbiB0aGVtc2VsdmVzLiIgTXIgTWF5bmUgc2FpZCBpdCBoYWQgYmVlbiAxMCB5ZWFycyBzaW5jZSBOb3J0aCBNZWxib3VybmUgZGVjaWRlZCB0byBkdW1wIGl0cyBwb2tlciBtYWNoaW5lLCBhbmQgY2FsbGVkIG9uIHRoZSBvdGhlciBjbHVicyB0byBmb2xsb3cgaXRzIGxlYWQuIApIZSdkIGxpa2UgdG8gc2VlIGEgcmV0dXJuIG9mIHRoZSB0b3duJ3MgTWluZXIncyBEYXkgb2JzZXJ2YW5jZSwgc29tZXRoaW5nIGhlIHNhaWQgdGhlIE5lZGVybGFuZCBMaWJyYXJ5IG1pZ2h0IGJlIGludGVyZXN0ZWQgaW4gcHJvbW90aW5nLi4gCldlIGRpZG4gYW5kIHdlIGFyZSBiZWluZyBwdW5pc2hlZCBmb3IgZXZlcnkgbWlzdGFrZSB3ZSBtYWtlIGF0IHRoaXMgbW9tZW50IGFuZCB0aW1lLiAKSW4gb3VyIG5vdCB0b28gZGlzdGFudCBwYXN0LCBodW1hbnMgd2VyZSBtb3N0bHkgZm9jdXNlZCBvbiBzdXJ2aXZhbC4gCk9yIHRoZXkgd2FudCB0byB1c2UgdGhlIFRWIHNjcmVlbiB0aGF0IEkgYW0gdXNpbmcuIApUaGUgSmFjcXVldCBEcm96IG1hY2hpbmVzIHdlcmUgYnVpbHQgZHVyaW5nIGEgcmVsYXRpdmVseSBzaG9ydCBwZXJpb2QsIDE3NjggMTc3NCBvciBzby4gT25lIG9mIHRoZSBtYWNoaW5lcyB3YXMgY2FsbGVkICJUaGUgRHJhdWdodHNtYW4iLCB3aGljaCBoYWQgdGhlIGNhcGFjaXR5IHRvIHJlbmRlciBhdCBsZWFzdCBzZXZlcmFsIGRpZmZlcmVudCBkcmF3aW5ncy4gVGhpcyB3b3VsZCBtYWtlIHRoZW0gYW1vbmcgdGhlIGVhcmxpZXN0IG1hY2hpbmVzIHRvIGV2ZXIgcHJvZHVjZSBhcnQuIFRoZSAiYW5kcm9pZCIgd2hpY2ggd2FzIGFib3V0IGhhbGYgbGlmZSBzaXplIGFuZCBxdWl0ZSBodW1hbiBsaWtlIHNpdHMgYXQgYSBzbWFsbCBkZXNrIGFuZCByZW5kZXJzIGl0cyBjcmVhdGlvbnMsIGxvb2tpbmcgbGlrZSBhIG1lY2hhbmljYWwgYXJ0aXN0LiAKTW9zdCBvZiB0aGVtIGFyZSB0aGUgc2FtZS5MaXR0bGUgc3RvcmVzIHRoYXQgbG9vayBhIGxpdHRsZSBvbGRlciB0ZW5kIHRvIGNhcnJ5IEtvcmVhbiBtYWRlIG9uZXMgb3Igbm8gYnJhbmQgZnJhbWVzIHRoYXQgYXJlIGNoZWFwZXIuIApZdXAsIGJ1dCB5b3UgY2FuIHRydXN0IHRoZSB1cHBlciBtYW5hZ2VtZW50IG9mIGEgY29tcGFueSB3aG8gd291bGQgZXZlbiBjb25zaWRlciBwdXR0aW5nIG91dCBhIHByb2R1Y3QgbGlrZSB0aGF0LgpUaGlzIGV4YWN0IHNpdHVhdGlvbiBoYXBwZW5lZCB0byBtZSBsYXN0IHdlZWsgaW4gdGhlIFBhcnR5IFBva2VyIE1pbGxpb24uIEkgZm9sZGVkIHRoZSBBS29zIGFmdGVyIGFuIGVhcmx5IHBvc2l0aW9uIHJhaXNlIGZyb20gYSBiaWcgc3RhY2ssIGFuZCBhIHJlIHJhaXNlIGZyb20gYW5vdGhlciBiaWcgc3RhY2suIApUaGUgZGVtb25zdHJhdGlvbiBpbiBKYW51YXJ5IGFuZCBGZWJydWFyeSAxODM4IHVzZWQgdGhlIFZhaWwgcmVnaXN0ZXIgKGFjY2VudHVhdGVkIGluIGl0YWxpY3MgaW4gdGhlIEpGSSByZXBvcnQpIGFuZCBkaWQgYXdheSB3aXRoIHRoZSBNb3JzZSBwZW5kdWx1bSBhcHBhcmF0dXMgZm9yIHJlY29yZGluZyB0aGUgbWVzc2FnZSB0aGlzIHdhcyBldmlkZW50bHkgYSBncmVhdCBpbXByb3ZlbWVudC4gVGhlIGZpcnN0ICJyZXByZXNlbnRpbmcgbnVtYmVycyIgd2VyZSBhIHNlcmllcyBvZiBkb3RzLiBUaGlzIGlzIHBlcmhhcHMgdGhlIGZpcnN0IHB1YmxpY2F0aW9uIGluIGEgam91cm5hbCBvZiB0aGUgZG90IG1ldGhvZCBvZiB0cmFuc2NyaWJlZCBzaWduYWxzIG9mIGEgcmVjb3JkaW5nIGVsZWN0cm9tYWduZXRpYyB0ZWxlZ3JhcGguIFRoZSBkb3RzIGFyZSBwaWN0dXJlZCAiLiBUaGUgc2Vjb25kLCAiYWxwaGFiZXRpY2FsIHNpZ25hbHMgYXJlIG1hZGUgdXAgYnkgYSBjb21iaW5hdGlvbiBvZiBkb3RzIGFuZCBsaW5lcyBvZiBkaWZmZXJlbnQgbGVuZ3RocyIpLCBhbiBleGFtcGxlIG9mIHdoaWNoIGlzIG5vdCBzaG93bi4gKEkgc2hvdWxkIHBvaW50IG91dCB0aGF0IHRoaXMgYXJ0aWNsZSBpcyBhYm91dCBoYWxmIHRoZSBsZW5ndGggb2YgdGhlIEpGSSBhcnRpY2xlLikgaXMgc3VycHJpc2luZyBpcyB0byBzZWUgd2hhdCBNb3JzZSBoaW1zZWxmIGhhZCB0byBzYXkgb24gdGhpcyBpc3N1ZS4gSGVyZSBhcmUgaGlzIG5vdGVzIG9uIHRoZSBzeXN0ZW0gb2Ygbm90YXRpb24sIGZyb20gdGhlIFNGQiBNb3JzZSBwYXBlcnMgYXQgdGhlIExpYnJhcnkgb2YgQ29uZ3Jlc3MsIE1hbnVzY3JpcHRzIERpdmlzaW9uLCBib3VuZCB2b2x1bWUgMjggTm92ZW1iZXIgMTgzNSAxOCBBcHJpbCAxODM4LCBwYWdlIDE1NCAoIkRyYXdpbmdzIHRvIEFjY29tcGFueSBDb3B5IG9mIENhdmVhdCBvZiBPY3QgNiAxODM3IikuIFRoZSBwZW5jaWxlZCBub3RlIHN0YXRlcyAidGhpcyBpcyBvbGQgbW9kZSBvZiBzaWduIGFuZCBpcyB0aGUgb25seSBzcGVjaW1lbiBldmVyIHB1Ymxpc2hlZC4gU2VlIHRoZSBNZWNoYW5pY3MgTWFnYXppbmUiLiBJdCB3YXMgYWxzbyBldmlkZW50bHkgcHVibGlzaGVkIGluIHRoZSBBbWVyaWNhbiBKb3VybmFsIG9mIFNjaWVuY2UgYW5kIEFydHMgYWJvdXQgdGhlIHNhbWUgdGltZS4gVGhlcmUgaXMgbm8gcmVmZXJlbmNlIHRvIHRoZSBKRkkgcmVwb3J0IG9yIHRoZSAiZG90cyIgKG9yICIxc3QgTW9kZSIpLiBJdCBtYXkgc2ltcGx5IGJlIHRoZSBjYXNlIHRoYXQgYXQgdGhlIHRpbWUgb2YgaGlzIHdyaXRpbmcgdGhpcyB0aGF0IE1vcnNlIHdhcyBzaW1wbHkgdW5hd2FyZSBvZiB0aGUgSkZJIHJlcG9ydCwgYXMgdGhlIHRocmVlIGFwcGVhcmFuY2VzIHdlcmUgYWxsIHB1Ymxpc2hlZCBhdCBhYm91dCB0aGUgc2FtZSB0aW1lICh3aXRoaW4gd2Vla3Mgb2Ygb25lIGFub3RoZXIpLiBubyBleHBlcnQgaW4gdGhpcyBmaWVsZCwgYnV0IEkgaGF2ZW4gYmVlbiBhYmxlIHRvIHR1cm4gb3V0IGFueSBlYXJsaWVyIHVzZSBvZiB0aGUgZG90cyB0aGFuIHRoaXMgcmVwb3J0LiAxNjgsIGFuZCB0aGVuIGluIHRoZSBNZWNoYW5pY3MgTWFnYXppbmUgKExvbmRvbikgZm9yIDEwIEZlYnJ1YXJ5IDE4MzguCkJ1dCB5b3UgY2FuIHVzZSB0aGVzZSB0b29scyBhcyB3ZWxsIGFzIGltcHJvdmUgaW4gZ2VuZXJhbCBhdCBwb2tlci4gWW91IG1heSBuZWVkIHRvIHZlcmlmeSB5b3VyIGlkZW50aXR5LCBidXQgSSBkaWQgaXQgYW5kIGhhZCB2ZXJ5IGdvb2QgcmVzdWx0cy4gClllcywgdGhpcyBzdHVmZiBpcyBmcmVlLiAKVGhlIG1vZGVsIEkgdHJpZWQgd2FzIG1hZGUgYnkgR2Vla0Rlc2ssIGFuIG9ubGluZSBmdXJuaXR1cmUgY29tcGFueSBmb3VuZGVkIGJ5IERvbm92YW4gTWNOdXR0LCBhIGNvbXB1dGVyIHByb2dyYW1tZXIuIEFuIGlubmVyIHR1YmUgYWNjaWRlbnQgYXMgYSB0ZWVuYWdlciBsZWZ0IE1yLiAKRWR1Y2F0aW9uYWxseSwgSSB3YXMgMjMsIDI0LiBTb2NpYWxseSBhbmQgZW1vdGlvbmFsbHksIEkgd2FzIGEgc2NhcmVkIGxpdHRsZSBraWQuLiAKQmVpZGUgemlqbiBzY2hhZGVsaWprIGVuIGJlaWRlIHNsZWNodCB2b29yIGRlIG1hYXRzY2hhcHBpai5zcGFycm93aW5jZW5kaWEgIDkgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvV2hhdCBwZW9wbGUgZG9uJ3Qgc2VlbSB0byBiZSB3aWxsaW5nIHRvIHVuZGVyc3RhbmQgaXMgdGhhdCwgaW4gYSBidXNpbmVzcyBhcyBiaWcgYXMgYXBwbGUsIGV2ZXJ5IHBlcnNvbiBoYXMgdG8gZm9sbG93IHRoZSBleGFjdCBzYW1lIHJ1bGVzLkluIGEgc2l0dWF0aW9uIGxpa2UgdGhlIG9uZSBtZW50aW9uZWQgYWJvdmUsIHdoZXJlIGEgYnVuY2ggb2YgdGhlIGxpcXVpZCBjb250YWN0IGluZGljYXRvcnMgYXJlIHRyaXBwZWQsIGFuIGFwcGxlIGVtcGxveWVlIGlzIHJlcXVpcmVkIHRvIGFkZHJlc3MgdGhvc2UgZmlyc3QuSWYgYXBwbGUgaXMgZ29pbmcgdG8gd2FycmFudHkgYSByZXBhaXIsIGV2ZW4gaWYgaXQgd2FzIGFzIHNpbXBsZSBhcyBiZW5kaW5nIGEgcGluLCB0aGV5IG5lZWQgdG8gYmUgYWJsZSB0byB3YXJyYW50eSB0aGUgZW50aXJlIG1hY2hpbmUsIHdoaWNoIHRoZXkgY2Fubm90IGRvIGlmIHRoZXJlIGFyZSBzaWducyBvZiBsaXF1aWQgZGFtYWdlLi4gCkFueXdheSwgbXkgYm95ZnJpZW5kIGFuZCBJIHdlcmUgdGFraW5nIGEgd2FsayB0aGUgb3RoZXIgZGF5IGFuZCBoZSBwb2ludGVkIG91dCBhIGZsYW1lIHdoaWNoIHdhcyByYXRoZXIgc21hbGwgaW4gZGlzdGFuY2UgYW5kIHNhaWQgdGhhdCB3aGVuIHRoZXkgd2VyZSBiaWdnZXIsIHlvdSBjb3VsZCBoZWFyIHRoZW0uIFNvcnQgb2YgYSByb2FyaW5nIHNvdW5kLiBJIGtuZXcgdGhhdCBmaXJlcyBtYWtlIHNvdW5kLCBidXQgdGhhdCB0aGVzZSBodWdlIGtpY2thc3MgZmxhbWVzIGNvdWxkIGV2ZW4gYmUgaGVhcmQgZnJvbSBhIGRpc3RhbmNlIG9mIGEgZmV3IGtpbG9tZXRyZXMgcmVhbGx5IGJhZmZsZWQgbWUuCiJBbHRob3VnaCBzb21lIGNyaXRpY2FsIGFuYWx5c2VzIG9mIHRoZSBzb25nIGhhdmUgaGlnaGxpZ2h0ZWQgcGFydHMgb2YgdGhlIGx5cmljcyBzdWNoIGFzICJXaGF0IGluIHRoaXMgZHJpbms/IiBhbmQgdGhlIHdvbGYgdW5yZWxlbnRpbmcgcHJlc3N1cmUgZm9yIHRoZSBtb3VzZSB0byBzdGF5IGluIHNwaXRlIG9mIGhlciByZXBlYXRlZCBzdWdnZXN0aW9ucyB0aGF0IHNoZSBzaG91bGQgZ28gaG9tZSwgb3RoZXJzIGhhdmUgbm90ZWQgdGhhdCBjdWx0dXJhbCBleHBlY3RhdGlvbnMgb2YgdGhlIHRpbWUgcGVyaW9kIHdlcmUgc3VjaCB0aGF0IHdvbWVuIHdlcmUgbm90IHNvY2lhbGx5IHBlcm1pdHRlZCB0byBzcGVuZCB0aGUgbmlnaHQgd2l0aCBhIGJveWZyaWVuZCBvciBmaWFuYywgYW5kIHRoYXQgdGhlIG1vdXNlIHN0YXRlcyB0aGF0IHNoZSB3YW50cyB0byBzdGF5LCB3aGlsZSAiV2hhdCBpbiB0aGlzIGRyaW5rPyIgd2FzIGEgY29tbW9uIGlkaW9tIG9mIHRoZSBwZXJpb2QgdXNlZCB0byByZWJ1a2Ugc29jaWFsIGV4cGVjdGF0aW9ucyBieSBibGFtaW5nIG9uZSBhY3Rpb25zIG9uIHRoZSBpbmZsdWVuY2Ugb2YgYWxjb2hvbC4iCk9uIHRoZSBvbmUgaGFuZCwgQmVhdXR5IENhcGl0YWxpc20gYWxsb3dzIHVzIGFsbCB0byBidXkgdGhlIHBlcmZlY3QgYm9keSBpbmNsdWRpbmcgdGhlIHBlcmZlY3QgdmFnaW5hLiAKVGhvc2UgYXJlIHRoZSB3b3JzdCBpZGVhcyBldmVyLiBJIHdvcmtlZCBpbiB0aGUgaW5kdXN0cnkgKG5vdCByaXBwaW5nIHBlb3BsZSBvZmYgYnkgdHVybmluZyBhbm51aXRpZXMgaW50byB1cCBmcm9udCBjYXNoIHBheW91dHMsIGdlZXosIEkgaGF2ZSB0byBzbGVlcCBhdCBuaWdodCEpIGZvciBvdmVyIGZpdmUgeWVhcnMgYW5kIHNhdyBhIGxvdCBvZiB2ZXJ5IHVuaGFwcHkgcGVvcGxlIHdobyBoYWQgdHJhZGVkIHRoZWlyIGFubnVpdGllcy9zdHJ1Y3R1cmVkIHNldHRsZW1lbnRzIGluIGZvciBsdW1wIHN1bXMuLiAKVGhhdCdzIGEgdmVyeSBkaWZmaWN1bHQgbnVtYmVyIHRvIGNvbWUgYnkgZm9yIGFueSBnYW1lLiBBIHF1aWNrIEdvb2dsZSBzZWFyY2ggd2lsbCB5aWVsZCBudW1iZXJzIHJhbmdpbmcgZnJvbSAxMDBrIHRvIDEgbWlsbGlvbi4gQXMgd2l0aCBhbGwgc3RhdGlzdGljcyBvbmUgaGFzIHRvIGJlIHZlcnkgc2tlcHRpY2FsIGFib3V0IHRoZSBudW1iZXJzIGFuZCB0aGVpciBzb3VyY2VzLiAKRXZlcnkgdGltZSB5b3UgYXR0ZW1wdCB0byBwYXJzZSBIVE1MIHdpdGggcmVndWxhciBleHByZXNzaW9ucywgdGhlIHVuaG9seSBjaGlsZCB3ZWVwcyB0aGUgYmxvb2Qgb2YgdmlyZ2lucywgYW5kIFJ1c3NpYW4gaGFja2VycyBwd24geW91ciB3ZWJhcHAuIFBhcnNpbmcgSFRNTCB3aXRoIHJlZ2V4IHN1bW1vbnMgdGFpbnRlZCBzb3VscyBpbnRvIHRoZSByZWFsbSBvZiB0aGUgbGl2aW5nLiAKVGhlIENoYXJnZXJzIGhhdmUgYmVlbiBjdXJzZWQgYWdhaW4gd2l0aCBvZmZzZWFzb24gaW5qdXJpZXMgKEh1bnRlciBIZW5yeSwgSmFzb24gVmVycmV0dCkgYnV0IGFyZSBjYXRjaGluZyBhIGJyZWFrIHdpdGggSm9leSBCb3NhLiBIaXMgd29yayBsZWFkaW5nIHRoZSBkZWZlbnNlIHdpbGwgY29tcGxlbWVudCBhIGJpZyB5ZWFyIGZvciBQaGlsaXAgUml2ZXJzLCBNZWx2aW4gR29yZG9uIGFuZCBLZWVuYW4gQWxsZW4uCkFuZCB0aGVuIGluIHRoZSBuZXh0IGJvb2ssIGhlIHNob3dzIHVwIGFnYWluLCBhbmQgaXQgd2FzIHNpeCBtb250aHMgYmV0d2VlbiB0aGUgQW1lcmljYW4gcHVibGljYXRpb25zIG9mIHRob3NlIGJvb2tzLCB3aGljaCBzZWVtZWQgbGlrZSBhIG1pbGxpb24geWVhcnMgdG8gbWUuIFNvIGFsbCB0aGF0IHRpbWUgSSB0aG91Z2h0IEdhbmRhbGYgd2FzIGRlYWQsIGFuZCBub3cgaGUncyBiYWNrIGFuZCBub3cgaGUncyBHYW5kYWxmIHRoZSBXaGl0ZS4gQW5kLCBlaGgsIGhlJ3MgbW9yZSBvciBsZXNzIHRoZSBzYW1lIGFzIGFsd2F5cywgZXhjZXB0IGhlJ3MgbW9yZSBwb3dlcmZ1bC4gSXQgYWx3YXlzIGZlbHQgYSBsaXR0bGUgYml0IGxpa2UgYSBjaGVhdCB0byBtZS4gQW5kIGFzIEkgZ290IG9sZGVyIGFuZCBjb25zaWRlcmVkIGl0IG1vcmUsIGl0IGFsc28gc2VlbWVkIHRvIG1lIHRoYXQgZGVhdGggZG9lc24ndCBtYWtlIHlvdSBtb3JlIHBvd2VyZnVsLiBUaGF0J3MsIGluIHNvbWUgd2F5cywgbWUgdGFsa2luZyB0byBUb2xraWVuIGluIHRoZSBkaWFsb2d1ZSwgc2F5aW5nLCAiWWVhaCwgaWYgc29tZW9uZSBjb21lcyBiYWNrIGZyb20gYmVpbmcgZGVhZCwgZXNwZWNpYWxseSBpZiB0aGV5IHN1ZmZlciBhIHZpb2xlbnQsIHRyYXVtYXRpYyBkZWF0aCwgdGhleSdyZSBub3QgZ29pbmcgdG8gY29tZSBiYWNrIGFzIG5pY2UgYXMgZXZlci4iClRoZSBidXNlcyBhcmUgdmVyeSBjb21mb3J0YWJsZSBhbmQgYWZmb3JkYWJsZSBzbyBldmVyeW9uZSB1c2VzIHB1YmxpYyB0cmFuc3BvcnRhdGlvbiB3aXRob3V0IHF1ZXN0aW9uLiAKTWFzc2FnZSBUaGVyYXB5CjgpIEluY2x1c28gTWFydGhhIFN0ZXdhcnQgYXByb2JhcmEgZGUgdXNhciBHb21pdGFzIHBhcmEgZGVjb3JhciB1biBqYXJybiBkZSBmbG9yZXMuIEluc2VydGUgdW4gamFycm4gZGUgZmxvcmVzIGVuIHVuIGphcnJuIGNsYXJvIGxpZ2VyYW1lbnRlIG1zIGdyYW5kZTsgcmVsbGVuYXIgZWwgZXNwYWNpbyBlbnRyZSBsb3MgZG9zIHZhc29zIGNvbiBHb21pdGFzIGNvbG9yaWRhcy4gQ3JlYXIgY2FwYXMgZGUgY29vcmRpbmFyIGNvbG9yZXMgdSBvdHJvcyBkaXNlb3MgdXRpbGl6YW5kbyBsb3MgZ3Jhbm9zLCBhYWRpciBsYXMgZmxvcmVzIHkgYWd1YSBlbiBlbCB2YXNvIGRlbCBjZW50cm8gY3VhbmRvIHNlIHJlYWxpemEgZWwgdHJhYmFqbyBjcmVhdGl2by4KVGFrZSBpdCBvdXQgb24gRUEgdGhlc2UgZGV2cyBoYXZlIGJlZW4gbW9yZSB0cmFuc3BhcmVudCB0aGVuIGV2ZXJ5IHNpbmdsZSBEZXZlbG9wZXIuIApIdW1hbnMgZmVlbCB0aHJlYXRlbmVkIGJ5IHRoZW0sIGFuZCBsZWFkIGEgZ2xvYmFsIHdhciBhZ2FpbnN0IHRoZW0KU3RhZ2dlcmluZyBhbW91bnQgZ2FtYmxlcnMgc3BlbmQgZXZlcnkgZGF5CkFub3RoZXIgbG9zcyBhdCBhIG1ham9yIGhhZCB0aGUgaGlnaGx5IHRvdXRlZCBadmVyZXYgYWRtaXR0aW5nIGhlIG1heSBoYXZlIGEgcHJvYmxlbS4gSGUncyB3b24gZml2ZSB0b3VyIGxldmVsIHRpdGxlcywgYnV0IG5ldmVyIGdvbmUgYmV5b25kIHRoZSBmb3VydGggcm91bmQgYXQgYSBtYWpvci4KKEZyb20gbGVmdCB0byByaWdodCkgRW1lcmdlbmN5IERlcGFydG1lbnQgcHN5Y2hpYXRyaWMgbnVyc2VzIE1hcnkgU2hlcnZpbiBhbmQgU2hpcmxleSBXaW5nbywgd2l0aCBEci4gClRoZSBWaWN0b3JpYW4gQ29tbWlzc2lvbiBmb3IgR2FtYmxpbmcgYW5kIExpcXVvciBSZWd1bGF0aW9uIGRhdGEgc2hvd3MgcG9raWUgdGFraW5ncyBzbGlwcGVkIGluIFdvZG9uZ2EgZm9yIGZpdmUgb2YgdGhlIHNpeCBtb250aHMgZnJvbSBKdWx5LiBBdCBXYW5nYXJhdHRhLCB0YWtpbmdzIGRyb3BwZWQgZm9yIHRocmVlIG1vbnRocyBvbiB0aGUgc2FtZSBwZXJpb2RzIG9mIDIwMTIsIHRob3VnaCBpbmNyZWFzZWQgaW4gdGhlIG90aGVyIHRocmVlIG1vbnRocy4gVGhlIGxhcmdlc3QgZGVjbGluZSBhdCBXYW5nYXJhdHRhIHdhcyBpbiBKdWx5IHdoZW4gdGFraW5ncyBmZWxsIGFsbW9zdCAkNTAsMDAwIGZyb20gJDcyMCw2MTUgaW4gMjAxMiB0byAkNjcwLDcxNSBsYXN0IHllYXIuIApUaGVyZXMgcHJvYmFibHkgYW5vdGhlciBnaXJsIHdobyBnb3QgeW91ciBhdHRlbnRpb24gdG9vLiAKWW91IG1heSB3YW50IHRvIGltYWdpbmUgd2hhdCBpdCBpcyBsaWtlIHRvIGJlIHRoYXQgcGVyc29uLCBvciB5b3UgbWF5IG5vdC4gQWdhaW4sIHVzZSB3aGF0ZXZlciBpcyBzaW1wbGVzdDogcGljdHVyZXMsIHdvcmRzIG9yIGZlZWxpbmdzLiAKSSBoYXZlIG9uZSB3aXRoIGdhdCBicm93bnMsIGFzIGkgYm91Z2h0IGl0IGJlZm9yZSBpIGtuZXcgYWJvdXQga2FpbGguIEkgbG92ZSBpdCwgaXQgZ3JlYXQgYW5kIGkgdGFrZSBpdCB0byB3b3JrIGV2ZXJ5ZGF5LiBBbHNvIHRoZSBnYXQgYnJvd25zIGFyZSBwcmV0dHkgbmljZSwgSSBhY3R1YWxseSBxdWl0ZSBsaWtlIHRoZW0uIEl2ZSBvbmx5IGV4cGVyaWVuY2VkIGNoZXJyeSBicm93biBvbiBhIHN3aXRjaCB0ZXN0ZXIsIGJ1dCBpdCBzZWVtcyB0aGUgZ2F0IGJyb3ducyBhcmUgbXVjaCBiZXR0ZXIuIEkgcHV0IG8gcmluZ3Mgb24gbWluZSBhbmQgdGhhdCBxdWlldHMgdGhlbSBkb3duIGEgYml0IGFuZCBjdXNoaW9ucyBhIGJpdCBpZiB5b3UgYm90dG9tIG91dC4gSSBmb3VuZCBpdCBsZWQgbWUgdG8gZGV2ZWxvcCBhIG11Y2ggbGlnaHRlciB0b3VjaCBhbHNvLCB3aGljaCBpcyBuaWNlLiBCdXQgbXkgZGVzaXJlIGZvciBrYWlsaCBib3ggc3dpdGNoZXMgaXMgd2hhdCB3aWxsIHNvb24gbGVhZCBtZSB0byBnZXR0aW5nIHNvbWV0aGluZyBkaWZmZXJlbnQuClNoZSB3YXMgdW5hdmFpbGFibGUgZm9yIGNvbW1lbnQgZm9yIHRoaXMgYXJ0aWNsZS4gCkhvb2tlciBhbmQgdGhlIGdhbmcgbWVldCB1cCBhdCB0aGUgcG9saWNlIHN0YXRpb24gYW5kIGV4Y2hhbmdlIHdvcmRzIG91dHNpZGUgb2YgdGhlIHJvYWNoIGNvYWNoIEhvb2tlciBhbmQgQWRyaWFuIHdlcmUganVzdCBleGFtaW5pbmcgYSBwYXJ0IG9mLiBIZSBhbmQgQWRyaWFuIGdldCBpbiB0aGVpciBjYXIgYW5kIEFkcmlhbiBzYXlzIHNvbWV0aGluZyBhbGwgcHVwcHkgZG9nIGhvcGVmdWwgYWJvdXQgd2hhdCBqdXN0IHdlbnQgZG93biwgd2hpbGUgSG9va2VyIGdpdmVzIGhpbSBhIGxvbmcgbG9vayBvZiAiZG9uJ3QgZ2V0IHlvdXIgaG9wZXMgdXAsIGtpZC4iIFRoZSBnYW5nIG1lZXRzIHVwIGF0IHRoZSB3YXJlaG91c2Ugd2hlcmUgdGhlIGJhZCBndXkgZ290IGhpcyBmYWtlIElEIGFuZCBkZXRvbmF0b3IgY29yZCBlYXJsaWVyLCBhbmQgdGhlIEs5IGZpbmRzIGRldG9uYXRvciBjb3JkIGhpZGRlbiBpbiBhIHZpZGVvIGdhbWUgbWFjaGluZS4gSG9va2VyIGdyYWJzIHRoZSBndXkgYnkgdGhlIHNoaXJ0IGNvbGxhciBhbmQgYnJhbmRpc2hlcyB0aGUgY29yZCBhdCBoaW0sIGFuZCB0aGUgZ3V5IGZvbGRzIGxpa2UgYSBwb2tlciBwbGF5ZXIgd2l0aCBub3RoaW5nIGJ1dCBhIHBhaXIgb2YgZGV1Y2VzLiAKSWNoIGhhYmUgbGFuZ2UgaGluIHVuZCBoZXIgYmVybGVndCwgYWJlciBkaWUgMjclIFJha2ViYWNrIGF1ZiBGdWxsVGlsdCBkaWVuZW4gbWlyIGVpbmZhY2ggbWVociB6dXIgQmFua3JvbGwgQmlsZHVuZywgc29sYW5nZSBpY2gga2VpbmUgRlQgUG9pbnRzIGVpbmxzZS4KVGhhdCBhY3R1YWxseSB3aGVyZSBteSBoYW5kbGUgY2FtZSBmcm9tOiBpZiB0aGUgc29jcmF0aWMgbWV0aG9kIGlzIHRvIHF1ZXN0aW9uIGVhY2ggcG9pbnQgbWV0aG9kaWNhbGx5IHVudGlsIHlvdSBhcnJpdmVkIGF0IGEgZmluYWwgYXJndW1lbnQsIHRoZSBwbGF0b25pYyBtZXRob2QgaXMgdG8gZG8gc28gaW4gYSBraW5kIG9mIGRvdWNoZXkgd2F5IHRvIG1ha2UgeW91cnNlbGYgZmVlbCBjb29sIDpECkEgbG90IG9mIGNvdW50cmllcyBoYXZlIGEgcGFuZGVtaWMgcHJlcGFyZWRuZXNzIHBsYW4gd2hpY2ggdGVsbHMgdGhlbSB3aGF0IHRvIGRvLCBidXQgdGhhdCBwcm9iYWJseSBub3QgZW5vdWdoLiBUaGUgaGVhbHRoIGNhcmUgc2VjdG9yIGlzIGFscmVhZHkgYXQgaXRzIGxpbWl0cy4gCklmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBjb2xsZWN0aW5nIGNhc2lubyBzdHlsZSBwb2tlciBjaGlwcywgeW91IGhhdmUgdGhlIG9wdGlvbiBvZiBjaG9vc2luZyBvbmUgb3IgdHdvIGNhc2lub3MgaW4gcGFydGljdWxhciB0byBjb2xsZWN0IGZyb20uIApZb3UgbWF5IGZpbmQgaXQgZnVubnkgaW4gY2FzZSB5b3UgcGxheSBjYXNpbm8gZ2FtZXMgYXMgYSBob2JieS4gSG93ZXZlciwgcGxlYXNlLCBkbyBub3QgbWFrZSBpdCBhcyBhIHdvcms7IHlvdSB3aWxsIGV4cGVyaWVuY2UgbWFueSBzdHJlc3NlcywgYXMgd2VsbCBhcyBtb25ldGFyeSBsb3NzZXMuIEluIGFkZGl0aW9uLCB5b3Ugd2lsbCBnZXQgYSBsb3cgbW9vZCBhZnRlciB0aGF0LiAKQXMgSSBncmV3IHVwLCBJIHN0YXJ0ZWQgc2VlaW5nIHRoaXMgZm9yIG15c2VsZi4gCkVzcGVjaWFsbHkgaW4gbWljcm9zdGFrZXMgeW91IG5lZWQgdG8gM2IgaGVyZSwgcGVvcGxlIHdpbGwgY2FsbCB5b3Ugd2lkZSBhbmQgeW91IHdhbnQgdG8gYnVpbGQgYSBwb3QuIFRoZXJlJ3MgaGFyZGx5IGV2ZXIgYSBjYXNlIGZvciBjYWxsaW5nIGtpbmdzIHByZSB1bmxlc3MgeW91ciBwb3NpdGlvbmluZyB0byBzdGFjayBzb21lb25lIHdobyBpcyBzaG9ydCBpbiBhIHRvdXJuZXkgb3IgbGl2ZSBjYXNoIGdhbWVzLCBldmVuIHN0aWxsIG5vdCB0aGUgYmVzdCBpZGVhLiBGbG9wIFhDIGlzIGZpbmUgZXNwZWNpYWxseSBoYXZpbmcgdG9wIHNldCB5b3UndmUgZ290IHRoZSBib2FyZCBwcmV0dHkgbXVjaCBsb2NrZWQgb3V0LiAKODN6b21iaWUgdQpNaXggTSBpbnRvIGRvdWdoLiBEcm9wIGJhbGxzIG9mIGRvdWdoIG9udG8gZ3JlYXNlZCBiYWtpbmcgc2hlZXQuIEJha2UgOSAxMiBtaW51dGVzLCB1bnRpbCBnb2xkZW4gYnJvd24uIFNwcmF5IG1pbmlhdHVyZSBtdWZmaW4gdGlucyB3aXRoIHZlZ2V0YWJsZSBvaWwgY29va2luZyBzcHJheS4gQ29tYmluZSB0aGUgY2FrZSBtaXgsIHB1ZGRpbmcgbWl4LCBlZ2dzIGFuZCBvaWwgYW5kIGJsZW5kIHdlbGwgd2l0aCBhbiBlbGVjdHJpYyBtaXhlciB1bnRpbCBzbW9vdGgsIGFib3V0IDIgbWludXRlcy4gUG91ciBhIHNtYWxsIGFtb3VudCBvZiBiYXR0ZXIsIGZpbGxpbmcgZWFjaCBtdWZmaW4gdGluIGhhbGYgd2F5LiAKSW4gdGhlIG1lYW50aW1lIHlvdXIgTW9tIHNob3VsZCBnZXQgdGhlIHN3ZWF0ZXIgcHJvZmVzc2lvbmFsbHkgY2xlYW5lZC4gVGhlIGJpbGwgbmVlZHMgdG8gYmUgc2VudCB0byB0aGUgYmlzY2guIApEYXlsaWdodCBTYXZpbmcgMjAxOTogV2hlbiBkbyBjbG9ja3MgZ28gZm9yd2FyZCBpbiB0aGUgVVM/UmVwcmlldmUgZnJvbSB0aGUgbG9uZyBob3VycyBvZiBkYXJrbmVzcyBpcyBqdXN0IGFyb3VuZCB0aGUgY29ybmVyLCB3aGVuIHNwcmluZyBicmluZ3Mgd2l0aCBpdCBEYXlsaWdodCBTYXZpbmcgVGltZSBhbmQgdGhlIHR1cm5pbmcgZm9yd2FyZCBvZiB0aGUgY2xvY2tzLiBUbyBtYWtlIHRoZSB0aW1lIGNoYW5nZSBlYXNpZXIsIHdoaWNoIGNhbiB0YWtlIHlvdXIgYm9keSB1cCB0byBhIHdlZWsgdG8gYWRqdXN0IHRvLCBuZXVyb2xvZ2lzdCBhbmQgc2xlZXAgZXhwZXJ0IG9mIHRoZSBDbGV2ZWxhbmQgQ2xpbmljIFRpbmEgV2F0ZXJzLCBNRCwgc3VnZ2VzdHMgbWFraW5nIHNtYWxsIGNoYW5nZXMgaW4gdGhlIHdlZWtzIGxlYWRpbmcgdXAgdG8gdGhlIHN0YXJ0IG9mIERheWxpZ2h0IFNhdmluZy4gSXQgaXMgYWxzbyBpbXBvcnRhbnQgdG8gcmVtZW1iZXIgdGhhdCBEYXlsaWdodCBTYXZpbmcgVGltZSBpcyBub3QgZm9sbG93ZWQgYnkgc29tZSBzdGF0ZXMgICBzbyB0aGUgZXhpc3RpbmcgdGltZSBkaWZmZXJlbmNlcyBpbmNyZWFzZSBieSBhbiBob3VyIGluIHN0YXRlcyB0aGF0IGRvIG5vdCB0dXJuIGNsb2NrcyBmb3J3YXJkLgpZb3UgbWF5IHBheSBmb3IgaG91cmx5IHJlbnRhbHMgd2l0aCBjYXNoLCBjaGVjaywgb3IgY3JlZGl0IGNhcmQuClRoaXMgaXMgbm90aGluZyBsaWtlIGEgc2VpenVyZSwgaXQncyBub3QgZXZlbiBtaXhlZC4gWW91ciBib2R5IHNpbXBseSBkb2VzIG5vdCBtb3ZlIHRoaXMgd2F5IGluIGEgc2VpenVyZSBzdGF0ZS4gVGhlIGVsZWN0cmljYWwgc3Rvcm0gc2VuZHMgaW1wdWxzZXMgdG8gbXVzY2xlIGdyb3VwcyB0aGF0IGRvbid0IHVzdWFsbHkgd29yayB0b2dldGhlci4gCk91ciBob3VzZWhvbGQgc2F2aW5nIHJhdGUgc2luY2UgMTk4MSBoYXMgYXZlcmFnZWQgNy4zIHBlciBjZW50LCBhbmQgdGhlIGFubnVhbCBzYXZpbmcgcmF0ZSBoYXMgbm90IGdvbmUgbmVnYXRpdmUgc2luY2UgMTkzMy4gQXMgaW50ZXJlc3QgcmF0ZXMgY29udGludWUgdG8gbm9ybWFsaXplIGFuZCB3ZSBlbnRlciBvdXIgdGVudGggeWVhciBzaW5jZSB0aGUgbGFzdCByZWNlc3Npb24sIGl0IG1heSBiZSB0aGF0IDIwMTkgaXMgYW4gdW5wcmVjZWRlbnRlZCB5ZWFyIGluIHRoZSBoaXN0b3J5IG9mIENhbmFkaWFuIHNhdmluZyAob3IgbGFjayB0aGVyZW9mKS4KSXQgaXMgZmFsc2VseSBzYWlkIHRoYXQgb25saW5lIHBva2VyIHNpdGUgaXMgdXN1YWxseSByaWdnZWQuIApFdmVuIHBheWluZyBteSBwYXJlbnRzIHJlbnQsIEkgc3RpbGwgc2F2aW5nICQxMDAwKyBtb3JlIGEgbW9udGggdGhhbiBJIHdvdWxkIGlmIEkgcmVudGVkIGFuIGFwYXJ0bWVudC4gCiJXZSdyZSBub3QgdGhlIHNhbWUgZW1wbG95ZXIgYXMgdGhlIGZlZGVyYWwgZ292ZXJubWVudCwiIGhlIGV4cGxhaW5zLiAKUGx1cyBXZWxjb21lIHRvIFRoZSBMYW1hcyBMaWZlClRoaXMgaXMgd2hlbiBhIGJyYW5kIHBheXMgYSBwdWJsaXNoZXIgdG8gaGF2ZSBpdHMgbmFtZSBhbmQvb3IgbWVzc2FnZSBhc3NvY2lhdGVkIHdpdGggYSBwYXJ0aWN1bGFyIHN0b3J5LiBDb250ZW50IHR5cGljYWxseSB0YWtlcyB0aGUgZm9ybSBvZiBhIGJyaWVmIGludHJvIHBhcmFncmFwaCBpbmZvcm1pbmcgcmVhZGVycyB0aGF0IHRoZSBmb2xsb3dpbmcgYXJ0aWNsZSBpcyBzcG9uc29yZWQgYnkgYW4gYWR2ZXJ0aXNlci4gWW91J2xsIHNlZSBwaHJhc2VzIGxpa2UgImJyb3VnaHQgdG8geW91IGJ5LCIgInByZXNlbnRlZCBieSwiIG9yICJzcG9uc29yZWQgYnkuIgpJIHRoaW5rIHRoYXQgbW9zdCBwZW9wbGUgd291bGQgY2xhc3NpZnkgYXR0YWNrIGFycm93cyBhcyAiYmFkIiBSTkcgICBhbmQgd2hpbGUgSSBtb3N0bHkgYWdyZWUgICB0aGV5IGRvIGhhdmUgYSBsaXR0bGUgYml0IG9mICJnb29kIiBSTkcgdG8gdGhlbSwgc29tZXRpbWVzLiAKIldobyBhc2tzIHRvIHNlZSB5b3VyIHBhcmVudHMnIHdpbGwgb24gZGF5IHR3byBvZiBhIG11cmRlcj8gIiBzYWlkIERldC4gCkRvdWJsZSBldmljdGlvbiBzaG9ja2VyClNlY29uZCwgYSBwcmFjdGljYWwgY29uY2x1c2lvbiB3aXRoIHJlc3BlY3QgdG8gdGhlIGFwcGxpY2F0aW9uIG9mIHRoaXMgd29yayB0byB0aGUgZWxpdGUgc3BvcnRpbmcgZW52aXJvbm1lbnQsIHdoaWNoIGhpZ2hsaWdodHMgdGhlIGxpbWl0YXRpb25zIG9mIHN0YXRpc3RpY2FsIGFwcHJvYWNoZXMgYmFzZWQgb24gZ3JvdXAgYXZlcmFnZXMgYW5kIHRodXMgdGhlIGJlbmVmaWNpYWwgdXNlIG9mIGluZGl2aWR1YWxpemVkIHByb2ZpbGluZyBpbiBmZWVkYmFjayBzZXNzaW9ucy4gYW5kIFdhbHNoLCBWLiAyMDE4LiBUaGUgcGh5c2lvbG9naWNhbCBlZmZlY3RzIG9mIFRyYW5zY3JhbmlhbCBFbGVjdHJpY2FsIFN0aW11bGF0aW9uIGRvIG5vdCBhcHBseSB0byBwYXJhbWV0ZXJzIGNvbW1vbmx5IHVzZWQgaW4gc3R1ZGllcyBvZiBDb2duaXRpdmUgTmV1cm9tb2R1bGF0aW9uLiAKRnIgVmF0YSBNZW5zY2hlbiBzaW5kIHZpZWwgRW50c3Bhbm51bmcgdW5kIFNjaGxhZiwgd2FybWUgQmRlciB1bmQgTWFzc2FnZW4gbWl0IFNlc2FtbCB3b2hsdHVlbmQuIApUaGlzIG1heSBleHBsYWluIHdoeSBjaHJvbmljIGluZmxhbW1hdG9yeSBhbmQgZGVnZW5lcmF0aXZlIGNvbmRpdGlvbnMgYXJlIGVuZGVtaWMgdG8gd2hlYXQgY29uc3VtaW5nIHBvcHVsYXRpb25zIGV2ZW4gd2hlbiBvdmVydCBhbGxlcmdpZXMgb3IgaW50b2xlcmFuY2VzIHRvIHdoZWF0IGdsdXRlbiBhcHBlYXIgZXhjZWVkaW5nbHkgcmFyZS4KQ29tcGFuaWVzIGluY2x1ZGluZyBUYXBlc3RyeSAoZm9ybWVybHkgQ29hY2ggSW5jLikgYW5kIEwnT3JhbCBVU0EgZmlsbGVkIDEwIEh1ZHNvbiBZYXJkcyBmcm9tIHRoZSBkYXkgaXQgb3BlbmVkIHR3byB5ZWFycyBhZ28uIApUaGUgb3RoZXIgbWFqb3IgbWlzc2lvbiBzaG93aW5nIHRoZSBjb21iYXQgc3lzdGVtIG9jY3VycmVkIGxhdGVyIGluIGNhbXBhaWduLiAKVGhlIGhpZ2hseSBhbnRpY2lwYXRlZCBkZWJ1dCBvZiB0aGUgV29ybGQgUG9rZXIgVG91ciBtZWFucyB0aGF0IHNldmVyYWwgb2YgdGhlIGdhbWUncyBiZXN0IHBsYXllcnMgd2lsbCBiZSBjb21pbmcgdG8gdG93biwgaW5jbHVkaW5nIGZvcm1lciBXb3JsZCBOby4xcyBFcmlrIFNlaWRlbCAoR1BJIE5vLiAKT24gdG9wIG9mIGZlYXJzIGNvbW1vbiB0byAib3JkaW5hcnkiIGRlcHJlc3Npb24sIHN1Y2ggYXMgIldpbGwgSSBiZSB0YWtlbiBzZXJpb3VzbHk/IiBvciAiV2lsbCBwZW9wbGUgdGhpbmsgSSdtIGdvaW5nIG1hZD8iLCB0aGVyZSBpcyB0aGUgZ3JlYXRlciBzdGlnbWEgb2YgYXBwZWFyaW5nIHVubmF0dXJhbC4gCkZvdXIgb2YgYSBLaW5kOiBBIGZvdXIgb2YgYSBraW5kIGlzIHdoZXJlIHlvdSBoYXZlIGZvdXIgb2YgYSBzaW5nbGUgY2FyZCwgYW5kIG9uZSBjYXJkIHRoYXQgZG9lc24ndCBtYXRjaCBhbnl0aGluZy4gVGhlIGhpZ2hlciBmb3VyIG9mIGEga2luZCB3aW5zLCB3aXRoIHRoZSBleHRyYSBjYXJkIGRlY2lkaW5nIHRoZSB0aWUgaWYgdGhlIGZvdXIgb2YgYSBraW5kIGlzIHRoZSBzYW1lLgoiSSBub3QgdmVyeSBoYXBweSwgYnV0IHRoZXJlIGlzIG5vIGFsdGVybmF0aXZlICBsZWdhbGx5IG9yIG1vcmFsbHkuIiBBIGZ1bGwgdGltZSBtYW5hZ2VyIGFuZCB1cCB0byBlaWdodCBjYXN1YWwgc3RhZmYgd2lsbCBsb3NlIHRoZWlyIGpvYnMgdGhyb3VnaCB0aGUgY2xvc3VyZSB3aGljaCB0b29rIGVmZmVjdCBsYXN0IE1vbmRheS4gCldoaWxlIHRoZXJlLCBzaGUgd2FzIHBhaW50ZWQgd2hpdGUgYW5kIGRyZXNzZWQgaW4gdGhlIGZhc2hpb25hYmxlIEVuZ2xpc2ggc3R5bGUgYW5kIHNob3duIGF0IGNvdXJ0LCBhbG9uZ3NpZGUgZGFuY2luZyBiZWFycyBhbmQgb3RoZXIgY3VyaW9zaXRpZXMuLiAKVGhlIFRleGFzIEdvdmVybm9yIGlzIHVudXN1YWxseSB3ZWFrLCBzaW5jZSB0aGV5IGRvbid0IG1ha2UgYW55IGV4ZWN1dGl2ZSBvciBqdWRpY2lhbCBhcHBvaW50bWVudHMgKHZpcnR1YWxseSBhbGwgb2YgdGhlbSBhcmUgZWl0aGVyIGVsZWN0ZWQgb3IgYXBwb2ludGVkIGJ5IHRoZSBsZWdpc2xhdHVyZSkgYW5kIHRoZXJlZm9yZSBoYXZlIGxpdHRsZSBleGVjdXRpdmUgcG93ZXIuIFRoZSBHb3Zlcm5vcidzIGtleSBwb3dlciBpcyB0byBzaWduIG9yIHZldG8gbGVnaXNsYXRpb24sIGFuZCB0aGlzIGNhbiBiZSBvdmVycmlkZW4gYnkgYSAyLzMgdm90ZSBpbiBib3RoIGNoYW1iZXJzLiAoRnVsbCBBbnN3ZXIpLiAKSW4gZmFjdCwgZ29vZ2xpbmcgaXQgaGFzIFVyYmFuIERpY3Rpb25hcnkgYW5kIGV2ZXJ5IGZ1Y2tpbmcgYXJ0aWNsZSBzYXlpbmcgdGhhdCBpdCBzbGFuZyBmb3IgZXhpdGluZyBxdWlldGx5IGFuZCBub3QgbG9uZywgZHJhd24gb3V0IGdvb2RieWVzLiBTbyBub3Qgb25seSBhcmUgeW91IHdyb25nIGFib3V0IHRoZSBvcmlnaW4sIHlvdSB0YWxraW5nIGFib3V0IGEgcGhyYXNlIHdpdGggYSBkaWZmZXJlbnQgbWVhbmluZyB0aGFuIHRoaXMgY29udmVyc2F0aW9uIGNsYWltZWQgaXQgaGFkLiBIb3cgd3JvbmcgY2FuIG9uZSBwZXJzb24gYmU/IExtYW8uIApBbHNvLCBJIGZhaXJseSBjZXJ0YWluIEkgc2FpZCB0aGF0IHRoZSBzdG9wIHdhcyBoYW5kbGVkIHBvb3JseS4gCkR1cmluZyBXb3JsZCBXYXIgSUksIERyLiBIYXJyeSBCZWVjaGVyIHdvcmtlZCBhcyBhbiBhcm15IG1lZGljLCB0cmVhdGluZyB3b3VuZGVkIHNvbGRpZXJzIGluIEl0YWx5LiAKWWVzLiAKSSByZWFsbHkgZG9uIGxpa2UgdGhlIGlkZWEgb2YgdHJhZGluZyB1cCBmcm9tIHdpdGhpbiB0aGUgdG9wIDEwLCB5b3UgbWF5IG5vdCBnZXQgdGhlIGd1eSB5b3Ugd2FudGVkLCBidXQgdGhlcmUgd2lsbCBiZSBzb21lb25lIHRoZXJlIG9mIGNvbXBhcmFibGUgc2tpbGwuIFRoaXMgaXMgb25lIG9mIHRoZSByZWFzb25zIEkgbm90IGEgR00gZm9yIGFuIE5GTCB0ZWFtLiAgMjEgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnby4gCiJJbmp1cmVkIG9yIHBvb3JseSBhZGFwdGVkIGZhc2NpYSBjYW4gc3RhcnQgdG8gYWN0IGxpa2UgZ2x1ZSwgYmluZGluZyB0byBtdXNjbGVzLCBvdGhlciBmYXNjaWEsIGV2ZW4geW91ciBsaWdhbWVudHMsIiBzYXlzIENhcmV5LiBJbiBhIHNlbnNlLCB5b3VyIGVudGlyZSBpbmRpdmlkdWFsIGxpZmUgaGlzdG9yeSAgIGV4ZXJjaXNlIGhhYml0cywgaW5qdXJpZXMsIGNvbW1vbiBzaXR0aW5nIGFuZCBzbGVlcGluZyBwb3NpdGlvbnMgICBpcyB3cml0dGVuIGluIHlvdXIgZmFzY2lhLgpBYm91dCBhIHdlZWsgYWdvLCBGZXJuYW5kbyBjb250YWN0ZWQgdXMgYW5kIHNhaWQgaGUgd2FudGVkIHRvIGhhdmUgYSBjYWxsLiBXZSBnZXQgb24gdGhlIGNhbGwsIGFuZCBoZSBzYXlzIHRvIHVzICJJIGFtIGxlYXZpbmcsIHRoaXMgaXMgaGFwcGVuaW5nLCBub3cgd2UgaGF2ZSB0byBkZWNpZGUgd2hhdCB0byBkbyBhYm91dCBpdC4iClRoZSBvd25lcnMgb2YgbWFueSB0cmFja3MgICBhbG9uZyB3aXRoIGdob3N0IHRyYWNrcyB0aGF0IG5vdyBvZmZlciBvbmx5IHNpbXVsY2FzdCByYWNpbmcgICBhcmUgaG9waW5nIHRvIHN1cnZpdmUgbG9uZyBlbm91Z2ggZm9yIHN0YXRlcyB0byBsZXQgdGhlbSBkcm9wIHRoZSBmYWNhZGUgb2YgZG9nIHJhY2luZyBhbHRvZ2V0aGVyIGFuZCBqdXN0IHJ1biBjYXNpbm9zLkxhd21ha2VycywgbWluZGZ1bCBvZiB0aGUgaW50ZXJlc3RzIG9mIGRlZXAgcG9ja2V0ZWQgY2FzaW5vIG9wZXJhdG9ycyB3aG8gZG9uJ3Qgd2FudCB0aGUgdW5mZXR0ZXJlZCBjb21wZXRpdGlvbiwgc2VlbSB0byBoYXZlIG90aGVyIGlkZWFzLkxhc3QgeWVhciwgV2VzdCBWaXJnaW5pYSBsYXdtYWtlcnMgcmVqZWN0ZWQgYSBiaWxsIHB1c2hlZCBieSBvbmUgb2YgdGhlIHN0YXRlJ3MgdHdvIGRvZyB0cmFja3MgdG8gY3V0IGl0cyBsaWNlbnNpbmcgZmVlcyBieSBtb3JlIHRoYW4gaGFsZiBhbmQgdG8gcmVkdWNlIHRoZSBtaW5pbXVtIG51bWJlciBvZiByYWNlIGRheXMuVHdvIG1vbnRocyBhZ28sIElvd2EgR292LiAKVGhpcyB5ZWFyJ3MgaGlnaGxpZ2h0cyBpbmNsdWRlIHRoZSBvcGVuaW5nIG5pZ2h0IGZpbG0sICJGYXJld2VsbCBNeSBRdWVlbiwiIGRpcmVjdGVkIGJ5IEJlbm9pdCBKYWNxdW90OyB0aGUgbmV3IHRocmlsbGVyICJUd2l4dCIgYnkgb2xkIHRpbWVyIEZyYW5jaXMgRm9yZCBDb3Bwb2xhOyBhIENhc3RybyBUaGVhdHJlIHByZXNlbnRhdGlvbiBvZiBCdXN0ZXIgS2VhdG9uIHNob3J0cyBhY2NvbXBhbmllZCBieSB0aGUgbGl2ZSBtdXNpYyBvZiB0VW5FIHlBckRzLiAKRm9yIG1lLCBpdCB0byBzZWUgVGltIExpbmNlY3VtLCBNYXR0IENhaW4gYW5kIHRoZSByZXN0IG9mIHRoZSB5b3VuZyBwaXRjaGluZyBzdGFmZiAgIEJyaWFuIFdpbHNvbiBibGF6aW5nIGZhc3RiYWxsIGFuZCB0aGUgaG9wZSB0aGF0IHdlIGhhdmUgZnV0dXJlIDd0aCBhbmQgOHRoIGlubmluZyBzZXQgdXAgZ3V5cyBmcm9tIHRoZSBsaWtlcyBvZiBBbGV4IEhpbnNoYXcsIE9zaXJpcyBNYXRvcywgU2VyZ2lvIFJvbW8gYW5kIEdlbm8gRXNwaW5lbGkuIApBbHNvLCB0aGVyZSBpcyBubyBlZGl0b3JpYWwgaGl2ZSBtaW5kIHRoYXQgaXMgdHJ5aW5nIHRvIHB1c2ggc3BlY2lmaWMgYmVsaWVmcyBvbnRvIG91ciBhdWRpZW5jZS4gTWFueSBvZiB1cyBzaGFyZSBzaW1pbGFyIG9waW5pb25zIHJlZ2FyZGluZyBjZXJ0YWluIHBvbGl0aWNhbCBhbmQgYXJ0aXN0aWMgaWRlb2xvZ2llcywgdHJ1ZSwgYnV0IHdlIGFsc28gcmVzcGVjdCBvdXIgY29sbGVhZ3VlcyBhbmQgb3VyIHJlYWRlcnMgZW5vdWdoIHRvIGFzc3VtZSB0aGF0IGFueW9uZSByZWFkaW5nIG91ciB3cml0aW5nIHdpbGwga25vdyBwZXJmZWN0bHkgd2VsbCB3aGV0aGVyIG9yIG5vdCB0aGV5IGFncmVlIG9yIGRpc2FncmVlIHdpdGggdXMuIElmIHlvdSBlbmpveWVkIHRoZSBwcmVtaWVyZSBvZiBTaGllbGQgSGVybywgdGhlbiBtb3JlIHBvd2VyIHRvIHlvdS4gSSBkb24gdGhpbmsgdGhhdCBhdXRvbWF0aWNhbGx5IG1ha2VzIHlvdSBvciBhbnlvbmUgbGlrZSB5b3UgYSBtb25zdGVyIG9yIGEgbWlzb2d5bmlzdCBvciBhIHJhcGUgYXBvbG9naXN0LCB0aG91Z2ggSSBkbyB0aGluayB0aGF0IHRoZXJlIGFyZSBwb2xpdGljYWwgYW5kIHNvY2lhbCB1bmRlcmN1cnJlbnRzIHRvIHRoZSBzdG9yeSB3ZSBnZXQgaW4gU2hpZWxkIEhlcm8gRXAuIDEgdGhhdCBhYnNvbHV0ZWx5IHdhcnJhbnQgZGlzY3Vzc2lvbiwgYW5kIEkgd29uIGFwb2xvZ2l6ZSBmb3IgY29udHJpYnV0aW5nIG15IHBlcnNwZWN0aXZlIHRvIHRoYXQgZGlzY3Vzc2lvbi4KVmFuY291dmVyaXRlcyBhcmUgc28gZm9jdXNlZCBvbiBzbWFsbCBzcGFjZSBsaXZpbmc7IHRoaXMgaXMgZXZlcnl0aGluZyBhc3NvY2lhdGVkIHdpdGggdGhhdCwgcHV0IGludG8gYSByb3VuZCBob21lIHdpdGggSmFtaWUgQmFuZmllbGQgc2lnbmF0dXJlIFdlc3QgQ29hc3Qgc3R5bGUuIFNheXMgZXZlcnkgeWVhciB0aGUgZm9jdXMgbWF5IGJlIG9uIHdoYXQgbmV3IGFuZCBkaWZmZXJlbnQsIGJ1dCB0aGVyZSBhcmUgYWxzbyBzaWduaWZpY2FudCBwb3NpdGl2ZXMgYWJvdXQgdGhlIDgwIHBlciBjZW50IG9mIGV4aGliaXRvcnMgd2hvIGtlZXAgY29taW5nIGJhY2sgeWVhciBhZnRlciB5ZWFyLiAKT24gb3IgYmVmb3JlIHRoYXQgZGF0ZSwgZGlkIHlvdSBoYXZlIGFueSBjb21tdW5pY2F0aW9uIHdpdGggYW55IFdoaXRlIEhvdXNlIG9mZmljaWFsLCBpbmNsdWRpbmcgYnV0IG5vdCBsaW1pdGVkIHRvIFByZXNpZGVudCBUcnVtcCwgYWJvdXQgdGhlIHBvc3NpYmlsaXR5IG9mIHlvdXIgYXBwb2ludG1lbnQgYXMgQWN0aW5nIEF0dG9ybmV5IEdlbmVyYWw/IElmIHNvLCB3aGVuIGFuZCB3aXRoIHdob20/IERpZCBhbnkgb2YgdGhvc2UgY29tbXVuaWNhdGlvbnMgZGlzY3VzcyB0aGUgcG9zc2liaWxpdHkgb2YgeW91ciByZWN1c2FsIGZyb20gb3ZlcnNpZ2h0IG9mIHRoZSBTcGVjaWFsIENvdW5zZWwgaW52ZXN0aWdhdGlvbj8uIApMaXN0ZW5pbmcgdG8gbXVzaWMgICBhbG1vc3QgYW55dGhpbmcgKGJ1dCBub3QgamF6eiwgaGVhdnkgbWV0YWwgb3IganVzdCBhYm91dCBhbnl0aGluZyBpbiB0aGUgY2hhcnRzKS4gR29pbmcgdG8gdGhlIHRoZWF0cmUgLyBjaW5lbWEgKGRlcGVuZHMgb24gdGhlIHBsYXkgLyBmaWxtLCB0aG91Z2gpLiAKRWl0aGVyIHlvdSBkb24ndCB1bmRlcnN0YW5kIHRoZSByZWFsaXR5IGluIEtvcmVhLCBvciB5b3UgYXJlIGJlaW5nIGludGVudGlvbmFsbHkgb2J0dXNlLiBUaGUgbW9tZW50IGFueSBvbmUgb2YgdGhlc2Ugd29tZW4gc2hvd3MgaGVyIGZhY2UsIHNoZSB3aWxsIGJlIHNldCB1cG9uIGJ5IHRocm9uZ3Mgb2YgaWRpb3RzIG9uIHRoZSBvdGhlciBleHRyZW1lLCBoZXIgcHJpdmF0ZSBpbmZvcm1hdGlvbiB3aWxsIGJlIGFidXNlZCwgaGVyIGVtcGxveWVyIG9yIGluc3RpdHV0ZSBvZiBlZHVjYXRpb24gd2lsbCBiZSBwdXQgdW5kZXIgcHJlc3N1cmUgdG8gZmlyZS9leHBlbCBoZXIsIGFuZCB0aHJlYXRzIHdpbGwgYmUgbWFkZSB0byBhbnlvbmUgd2hvIGNhbiBiZSBsaW5rZWQgdG8gaGVyLiAKKEV2ZW4gdGhvdWdoIEkgZGlkbiBicmluZyByYWluIHBhbnRzIG15c2VsZiBhbmQgbmV2ZXIgdXNlZCBteSBoZWFkbmV0IGluIDE4IGJ1dCBJIHdhcyB0b2xkIHRoaXMgaXMgbm90IHBhciBmb3IgdGhlIGNvdXJzZSlCZSBzdXJlIHRvIHBsYW4gc29tZSBwb3NzaWJsZSBNdW5yb2Ugc3VtbWl0cyEgSXQgaXMgd29ydGggaXQgdG8gYmFnIGF0IGxlYXN0IG9uZSBhbG9uZyB0aGUgd2F5LlNvIGZhciBJIG9uIGRheSB0aHJlZSBvZiBrZXRvLiAKT250YXJpbyBkb2N0b3JzJyBjb250cmFjdCB0byBpbmNyZWFzZSBoZWFsdGggc3BlbmRpbmcgYnkKVGhlIGNvbXBhbnkgZG9lc24gY2FyZSBpZiB5b3UgZG9uIGZlZWwgbGlrZSB0YWtpbmcgYSBjb3Vyc2UgdGhhdCB0aGV5IHBheSBmb3IuIFRoZXkgZ2l2ZSB5b3UgbW9uZXkgaW4gZXhjaGFuZ2UgZm9yIHlvdSBtZWV0aW5nIHlvdXIgb2JsaWdhdGlvbnMuIAoyNCBpbiB0aGUgbmF0aW9uLCB0cmF2ZWwgdG8gQXVidXJuLiAKQWxsIG9mIHRoZSBjbGlua2VyIGJ1aWx0IGJvYXRzIEkgbG9va2VkIGF0IGRlZmluaXRlbHkgZG8gaGF2ZSBmcmFtZXMuIApBdWNoIHNjaGxpY2h0IFdpc3NlbiB1bmQgS25uZW4uIApPYndvaGwsIGRhcyBrIHdpciB1bnMgYXVjaCBuaWNodCBlcmxhdWJlbi4gClRoZXJlIGFyZSBubyBpZGVudGlmeWluZyBtYXJraW5ncyBvciBzZXJpYWwgbnVtYmVycyBvbiB0aGVzZS4gCkhlIGRpZCBub3Qgc2VxdWVzdGVyIHRoZSBqdXJ5IG9uIGEgY2FzZSB0aGF0IHRoZSBwcmVzaWRlbnQgd2FzIGltcGxpY2F0ZWQgaW4gYW5kIHR3ZWV0aW5nIGFib3V0LiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb0kgaGF2ZSB0byBhZG1pdCB0aGF0IEkgd2FzIHZlcnkgYW5ncnkgYXQgdGhlIGVuZGluZyBvZiBJQk8gaW5pdGlhbGx5LiBCdXQsIEkgaGF2ZSBjb21lIGFyb3VuZC4gClVsbGlvdHQgZWFybmluZ3MgdmFyaWVkIGVub3Jtb3VzbHkuIEluIG9uZSB0b3VybmFtZW50IGFsb25lIGhlIHdvbiAzMjUsMDAwOyBidXQgaGUgbG9zdCAxOTAsMDAwIGluIGFub3RoZXIgaGlnaCBzdGFrZXMgY29tcGV0aXRpb24uIApTZWVtcyB0byBiZSBmYXZvcmVkIGJ5IHBlb3BsZSBzZWVraW5nIGZvY3VzIC8gbW90aXZhdGlvbiAvIGNhcmVlciBhY2hpZXZlbWVudCwgYmVjYXVzZSBpdCBoYXMgc3RpbXVsYW50IHByb3BlcnRpZXMuIApGaXJzdCwgaXQgaXMgcmVhbGx5IGhhcmQgdG8gZGF0ZSBhIHdvbWFuIHlvdSBkb24gZmluZCBhdHRyYWN0aXZlIHBoeXNpY2FsbHkuIFdoaWNoIGlzIGEgc2hhbWUgYmVjYXVzZSB0aGVyZSBhcmUgc29tZSBncmVhdCB3b21lbiBvdXQgdGhlcmUgd2hvIGFyZSBzbWFydCBhbmQgZnVubnkgYW5kIHZlcnkgZ3JhdGVmdWwgdG8gYSBtYW4gd2hvIGNhbiBhY2NlcHQgdGhlbS4gQnV0IGl0IGlzIHNvIGRpZmZpY3VsdC4KT3ZlcnZpZXcgZm9yIEtpbGx1YUthbm11cnUKSGVyIG93biBwZXJzb25hbCBnb2FsIHdhcyBzaW1wbHkgYWJvdXQgcmVjbGFpbWluZyBoZXIgc3dlYXQgc2Vzc2lvbnMgYW5kICJoYXZpbmcgdGhhdCBvbmUgaG91ciB3aGVyZSBJIGNhbiBiZSBzZWxmaXNoIGFuZCBhbG9uZSBpbiBteSBwbGFjZSBvZiByZWZ1Z2UuIi4gCihQcml2YWN5IFBvbGljeSlJbmRleCBFeGNoYW5nZVRoaXMgaXMgYW4gYWQgbmV0d29yay4gCkNhcGl0dWx1bSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyMiBkYXlzIGFnbwpPZiBjb3Vyc2Ugbm9ib2R5IHJlYWxseSBrbm93cyBhbm90aGVyIHBlcnNvbnMgbWluZCwgYnV0IGRlZmF1bHRpbmcgdG8gYSBjb21wbGV0ZWx5IHJpZ29yb3VzL2xlZ2FsaXN0aWMgYXBwcm9hY2ggdG8gcGVyc29uYWwgaW50ZXJhY3Rpb24gY2FuIGJlIHRoZSBzb2x1dGlvbiBlaXRoZXIuIFRoZXJlIHN0aWxsIG1pZ2h0IGJlIHN1YnRsZSBjbHVlcyAodGhhdCBvZiBjb3Vyc2UgY2FuIGFsc28gYmUgbWlzaW50ZXJwcmV0ZWQpIG9yIG9uZSBjYW4gdHJ5IHRvIHJlbHkgb24gaGV1cmlzdGljcyBiYXNlZCBvbiBwYXN0IGV4cGVyaWVuY2Ugb3IgYXR0cmFjdGl2ZW5lc3MuCkFsc28sIHRoZSBDdXJhdG9ycyBhcmUgbm90IHJlcGxhY2VtZW50cyBmb3IgdGhlIGluIGhvdXNlIHN0YWZmIGFuZCB0aGVyZSBhcmUgY2VydGFpbiB0YXNrcyB0aGF0IHRoZXkgd29uJ3QgYmUgYWJsZSB0byBwZXJmb3JtLiBUaGV5IGNhbm5vdCBjaGFuZ2UgcG9zdGluZ3Mgb3IgUGVyc29uYWwgU3BhY2VzIGFuZCBkbyBub3QgaGF2ZSBhY2Nlc3MgdG8gdGhlIGFjY291bnRzIG9mIG90aGVyIFJlc2VhcmNoZXJzLi4gCklmIHlvdSBhcmUgeW91bmcgYW5kIHlvdSBmZWVsIHRoaXMgd2F5LCBiZSBjb252aWN0ZWQgYW5kIG1ha2UgaXQga25vd24gdGhhdCB0aGlzIGlzIGhvdyB5b3Ugd2FudCB0byBsaXZlIHlvdXIgbGlmZS4gVGhlcmUgbm8gc2hhbWUgaW4gZW1icmFjaW5nIGl0LiBJIGhvcGUgbW9yZSB3b21lbiB3YWtlIHVwIHRvIHRoaXMgYW5kIHJlYWxpemUgd2UgYmVlbiBzb2xkIHRoaXMgbGlmZSBzdHlsZSBtb3N0bHkgYnkgY29ycG9yYXRpb25zIHdobyB3YW50IHRvIHByb2ZpdCBvZmYgb2YgdHdvIGluY29tZSBmYW1pbGllcy4gVGFrZSBiYWNrIHlvdXIgZmVtaW5pbmUgcG93ZXIgYW5kIHNheSBGIG5vLgpFZGl0OiBBIGNvdW50ZXIgZXhhbXBsZSBtaWdodCBiZSBzb21ld2hlcmUgbGlrZSBSb21lLCB3aGVyZSB0aGVyZSBpcyBldmVuIG1vcmUgZGVwdGggYW5kIGxheWVycyBvZiBoaXN0b3J5LCBidXQgaW5zdGVhZCBvZiB0aG9zZSBsYXllcnMgYmVpbmcgZHluYW1pYyBhbmQgc3RpbGwgYWxpdmUgYW5kIHN0aWxsIHRoZXJlIHRvIGV4cGxvcmUgYW5kIGRpc2NvdmVyLCB0aGV5IGFyZSBzbW90aGVyZWQgYnkgYSB0aGljayBzbHVkZ2Ugb2YgdG91cmlzbSwgdG8gdGhlIHBvaW50IHdoZXJlIHRoZSBjaXR5IGlzIGFsbCBidXQgbG9zdCBiZW5lYXRoIGl0cyBjb21wbGV0ZSBzdWJtaXNzaW9uIHRvIHRoZSBzaW5ndWxhciBwdXJwb3NlIG9mIHRvdXJpc20gYXQgYW4gb3ZlcnBvd2VyaW5nIHNjYWxlLiAKSGUgbmVlZHMgdG8gYmUgcmVtb3ZlZCBmcm9tIHRoZSBwdWJsaWMgc3BoZXJlLCBhbmQgaGUgbmVlZHMgdG8gc2VlayBwcm9mZXNzaW9uYWwgaGVscC4gCkRhYXJidWl0ZW4gdmVyc3RhIGlrIG9uZGVyIGZ5c2lvdGhlcmFwZXV0aXNjaCBoYW5kZWxlbiBoZXQgb3AgZWVuIGFkZXF1YXRlIHdpanplIHZlcmtyaWpnZW4gdmFuIGdlZ2V2ZW5zIHZhbiBlZW4gcGF0aW50IG1pZGRlbHMgYmlqdm9vcmJlZWxkIGRlIGFuYW1uZXNlIG9mIGVlbiBzY3JlZW5pbmcuIApXZSBjYW4ndCB3YWl0IHRvIHNlZSB5b3UhUmVwb3J0IHJlc3BvbnNlIGFzIGluYXBwcm9wcmlhdGVUaGFuayB5b3UuVGhpcyByZXZpZXcgaXMgdGhlIHN1YmplY3RpdmUgb3BpbmlvbiBvZiBhIFRyaXBBZHZpc29yIG1lbWJlciBhbmQgbm90IG9mIFRyaXBBZHZpc29yIExMQy5CZXRzeSBNLCBNYW5hZ2VyIGF0ICwgcmVzcG9uZGVkIHRvIHRoaXMgcmV2aWV3UmVzcG9uZGVkIEp1bHkgMTUsIDIwMTRUaGFuayB5b3UgZm9yIHNoYXJpbmcgeW91ciByZXZpZXcgd2l0aCB1cyBUZXJyaS4gV2UgYXJlIGN1cnJlbnRseSBtYWtpbmcgbWFueSBncmVhdCBpbXByb3ZlbWVudHMgdG8gdGhlIG92ZXJhbGwgY2FzaW5vLiAKV2lsbGlhbXMgYW5kIEdlb3JnZSBSLiBXaWxsaWFtcywgYW5kIG9uZSBzaXN0ZXIsIE1hcnkgQ291bnRlcm1hbiBhbmQgYSBncmFuZHNvbiwgS3lsZSBXaWxsaWFtcyBDbGluZ2VyLiBOYXZ5IFZldGVyYW4gaGF2aW5nIHNlcnZlZCBpbiBXV0lJLCBmb3Igd2hpY2ggd2Ugd2lsbCBmb3JldmVyIGJlIGEgZ3JhdGVmdWwgbmF0aW9uLiAKVGhlIHBvc3NpYmxlIGRhbmdlciBpcyB0aHVzIGFkZGljdGlvbi4gRm9yIHRoZSB2YXN0IG1ham9yaXR5IG9mIHBsYXllcnMgaG93ZXZlciBwb2tlciBjYW4gYmUgcGxheWVkIHJlc3BvbnNpYmx5IHdpdGhvdXQgcG9zaW5nIGFueSBkYW5nZXIgdG8gdGhlaXIgbGl2ZXMgb3IgZmluYW5jZXMuIChGdWxsIEFuc3dlcikuIApJbXByb3ZlIHlvdXIgcGlhbm8gcGxheWluZywgYW5kIHlvdSdyZSBiZXR0ZXIgYXQgcGlhbm8gYnV0IG5vIGJldHRlciBhdCBzZXdpbmcgb3Igc3VyZ2VyeS4gQm9keSBoYXMgc2luZ2xlIG51bWJlcnMgdGhhdCBhcHBseSB0byBsb3RzIG9mIHN0dWZmLCB3aGlsZSBza2lsbCBpcyBhIGxvdCBvZiBpbmNyZWRpYmx5IHNwZWNpZmljLCBjb21wbGljYXRlZCBuZXVyYWwgYWRhcHRhdGlvbnMuLiAKWWVhaCBpdCBsb29rcyBsaWtlIGl0IGlzIHByZXNjcmlwdGlvbiBvbmx5IGluIHRoZSBVUywgYnV0IGFsbW9zdCBldmVyeSBvdGhlciBjb3VudHJ5IGl0IGlzIGFuIE9UQyBtZWRpY2F0aW9uLiAKQW5kIGhlIHNsZWVwcyBpbiBhbm90aGVyIHJvb20gYW5kIEknbSB1cCBoYWxmIHRoZSBuaWdodCBldmVyeSBuaWdodC4gT2YgYWxsIHRoZSBnZW5lcmF0aW9ucyBvZiBQb2tlbW9uLCB3aGV0aGVyIEkgbGlrZWQgdGhlbSBvciBub3QsIEdlbiA1IGhhcyB0aGUgbW9zdCB0aGF0IEkgYWJzb2x1dGVseSBjYW5ub3QgbmFtZSBvciBldmVuIHJlbWVtYmVyIGZvciB0aGUgbGlmZSBvZiBtZS4gSSBrbm93IHByb2JhYmx5IDkwJSBvZiBhbGwgdGhlIHJlc3Qgb2YgdGhlIFBva2Vtb24gaW5zdGFudGx5IGJ5IHNpZ2h0LiAKQmVsb3cgaXMgdGhlIGV4cGxhbmF0aW9uIG9mIHRoZSBjb250ZXh0IG9mIGFidXNlIHJ1bGUuIFdlIGhhdmUgdGhpcyBydWxlIHNwZWNpZmljYWxseSBiZWNhdXNlIHN1cnZpdm9ycyBvZiBuYXJjaXNzaXN0aWMgYWJ1c2UgYXJlIGNvbnN0YW50bHkgdG9sZCB0aGV5IHdyb25nIG9yIGV4aGF1c3RpdmVseSBxdWVzdGlvbmVkIG9uIHRoZWlyIGp1ZGdlbWVudC4gVGhlIHByb2JsZW0gaXMgeW91IGFjdGl2ZWx5IHF1ZXN0aW9uaW5nIE9QIGp1ZGdlbWVudC4gV2Ugbm90IGhlciB0byBhcmJpdHJhdGUganVkZ2VtZW50IG9uIHNvbWVvbmUgZWxzZSBsaWZlLCB3ZSBoZXJlIHRvIHByb3ZpZGUgZW1vdGlvbmFsIHN1cHBvcnQuCiAyMCBwb2ludHMgIHN1Ym1pdHRlZCAyMiBob3VycyBhZ29CaWduZXNzIGlzbiBldmVyeXRoaW5nLiAKMTEwOCBjb2RlIGNpdmlsKSwgb3Igc29udCBpbmNhcGFibGVzIGRlIGNvbnRyYWN0ZXIgImxlcyBtaW5ldXJzIG5vbiBtYW5jaXBzIiAoYXJ0LiAxMTI0IGNvZGUgY2l2aWwpLiAKVGhlIEtyZW1saW4ncyAia2lsbCB3aXRoIGNvbmZ1c2lvbiIgc3RyYXRlZ3kgd29ya2VkLiAKWWVhaCwgaXQncyBhIGxpdHRsZSBvZGQgdGhhdCBldmVyeW9uZSBzZWVtcyBmaW5lIHdpdGggdGhlIHBsZWFzYW50IHNvdW5kaW5nIGV1cGhlbWlzbSBhbmQgdGhlcmUncyBsaXR0bGUgY29uY2VybiBhYm91dCB0aGUgbGlrZWxpaG9vZCBvZiBoZWF2aWx5IGV4cGxvaXRlZCBvciBlbnNsYXZlZCBwZW9wbGUsIGVzcGVjaWFsbHkgaWYgaXQncyBvbmUgb2YgdGhvc2Ugcmlua3lkaW5rIHBsYWNlcy4KRm9yIHdoYXQgaXQgd29ydGggd2hpbGUgeW91ciBodXNiYW5kIG1heSBub3QgaGF2ZSBrbm93IHF1aXRlIGhvdyB1cHNldCB5b3Ugd2VyZSBoZSBkZWZpbml0ZWx5IHdhcyBhd2FyZSB0aGF0IHRoaXMgZ3V5IHdhcyBhY3RpbmcgaW5hcHByb3ByaWF0ZWx5IHdpdGggeW91LgpUaGVzZSBub3RlcyBjb3VsZCBiZSByZXRhaW5lZCBmb3Igc28gbG9uZyBhcyBhbiBvcHBvbmVudCBwbGF5cyBiZW5lYXRoIGV4YWN0bHkgdGhlIHNhbWUgc2NyZWVuIG5hbWUuIApXaGVuIGRpYWdub3NlZCB3aXRoIDNjIDRjIDVjIDZjIGJ1bGdpbmcgZGlzY3Mgd2l0aCBzZXZlcmUgaGVhZCBwYWluIGFuZCBwYWluIGluIHlvdXIgbmVjayByYWRpYXRpbmcgaW50byBzaG91bGRlcnMgbGVmdCBhcm0gYW5kIHRpbmdsaW5nIGluIHlvdXIgZmluZ2VycyB3aGF0IGFsbCBjYW4gYmUgZG9uZSBpcyB0aGVyZSBhIHBpbmNoZWQgbmVydmU/Ck1vbml0b3IgeW91ciBodXNiYW5kJ3MgZHJpdmluZyBoYWJpdHMgZm9yIGEgbW9udGguIApUaGVpciAkVVM2LjQgYmlsbGlvbiB3ZWFsdGggcHV0IHRoZW0gaW4gYSB0aWUgZm9yIGZpZnRoIHBsYWNlLCB1cCBmaXZlIHNwb3RzLCB3aGlsZSB0aGV5IGFyZSBhbHNvIHRoZSB5b3VuZ2VzdCBvbiB0aGUgQXVzc2llIHJpY2ggbGlzdCBhdCAzOSB5ZWFycyBvbGQuCkEgcmFyZSwgcmVmdW5kYWJsZSBjcmVkaXQsIHRoZSBDQUkgcGF5bWVudCB3aWxsIGZpcnN0IHJlZHVjZSBhbnkgYmFsYW5jZSBvd2luZyBmb3IgdGhlIHllYXIsIGFuZCBtYXkgaW5jcmVhc2UgYW55IHJlZnVuZC4uIApUYWtlIGEgbG9vayBhdCB0aGUgYXZlcmFnZSBjYXNpbm8gd2VsY29tZSBib251cyBvZmZlciwgYW5kIGl0J3MgcHJldHR5IGxpa2VseSB0byBpbmNsdWRlIHNvbWUgZnJlZSBzcGlucyBvbiBvbmUgb3IgbW9yZSBvZiB0aGUgbW9zdCBwb3B1bGFyIGdhbWVzIGluIHRoZSBsaWJyYXJ5LiAKRGVzIFdlaXRlcmVuIHdlcmRlbiBlaW4gdm9sbCBhdXNnZXN0YXR0ZXRlcyBGaXRuZXNzc3R1ZGlvLCBlaW4gMjUgTWV0ZXIgbGFuZ2VzIHVuZCBnZWhlaXp0ZXMgQXVlbmJlY2tlbiBzb3dpZSBwcml2YXRlIFNvbm5lbnRlcnJhc3NlbiB1bmQgTWFzc2FnZSBQYXZpbGxvbnMgaW0gRnJlaWVuIFRlaWwgZGVzIDEsNTAwIFF1YWRyYXRtZXRlciBncm9lbiBTcGEgIHVuZCBHZXN1bmRoZWl0c2JlcmVpY2hlcyBzZWluLiBFaW5lcyBkZXIgSGlnaGxpZ2h0cyBkZXMgU3BhIGF0IE1hbmRhcmluIEd1YW5nemhvdSBpc3QgZGVyIE5hc3N6b25lbmJlcmVpY2ggbWl0IERhbXBmYmRlcm4sIFNhdW5lbiwgVml0YWxiZWNrZW4gdW5kIEVybGVibmlzZHVzY2hlbi4uIApJJ20gaW4gd2VlayA2IG9yIHNvIG9mIEhhbnNvbidzIHRyYWluaW5nIHBsYW4gZm9yIEp1bmUgbWFyYXRob24uIFllc3RlcmRheSBJIGhhZCBhIHRlbXBvIHJ1biBzY2hlZHVsZWQgYnV0IEkgY291bGRuJ3QgaGl0IHRoZSBwYWNlIGFzIHRoZXJlIHdlcmUgZml2ZSBpbmNoZXMgb2Ygc25vdyBvbiBhbGwgdGhlIHNpZGV3YWxrcy4gCkkgd29yayBmb3IgaW5zdXJhbmNlIGNvbXBhbmllcywgYW5kIGdlbmVyYWxseSwgaXQgaXMgZGlmZmVyZW50LiBNb3N0IGNhcnJpZXJzIGFkb3B0IGEgc2NvcmluZyBtb2RlbCBmcm9tIGEgdGhpcmQgcGFydHkgaW4gdGhlIGluc3VyYW5jZSBpbmR1c3RyeSB0aGF0IGdlbmVyYXRlcyBhICJjcmVkaXQgYmFzZWQgaW5zdXJhbmNlIHNjb3JlLiIgTXkgdW5kZXJzdGFuZGluZyBpcyBpdCBpcyBiYXNlZCBvbiB0aGUgaW5mb3JtYXRpb24geW91J2Qgc2VlIGluIGEgY3JlZGl0IHJlcG9ydCwgYnV0IHdlaWdodGVkIGRpZmZlcmVudGx5IHRvIG1vcmUgaGVhdmlseSByZWZsZWN0IHRoZSBpbmRpY2F0b3JzIGZvciByaXNrIHdoZW4gaXQgY29tZXMgdG8gaW5zdXJhbmNlLiAKTWF0dCBNY1N3ZWVuZXksIGxlZnQsIGFuZCBNaWNoYWVsIE1jU3dlZW5leSBzaG93IG9mZiB0aGUgaW50ZXJpb3Igb2YgYW4gTUNNIEN1c3RvbSBWZWhpY2xlcyB2YW4sIHdoaWNoIGZlYXR1cmVzIHJlY2xpbmluZyBjYXB0YWlucycgY2hhaXJzIGFuZCBhRnJvbSBzdGFuZCBvdXQgcGFpbnQgam9icyB0byBsdXh1cnkgaW50ZXJpb3IgYXBwb2ludG1lbnRzIHRvIGhlYXZ5IGxpZnQgZXF1aXBtZW50IGFuZCBvdGhlciBhY2Nlc3NvcmllcywgdGhlIHZlaGljbGVzIGFyZSBkZWNrZWQgb3V0IHdpdGggYSB2YXJpZXR5IG9mIGV4dHJhcyB0byBmaXQgYWxsIGtpbmRzIG9mIGxpZmVzdHlsZXMuCkkgYmVnZ2VkIHRoZSBjb3AgdG8gbGV0IG1lIGdvLCBhbmQgSSBldmVuIHByb21pc2VkIHRvIHJldHVybiBhZnRlciBteSBmaW5hbCBidXQgdGhlIGJlc3QgdGhlIGNvcCBjb3VsZCBkbyB3YXMgZ2l2ZSBtZSBhIGxpdHRsZSBidXNpbmVzcyBjYXJkIGV4cGxhaW5pbmcgSSB3YXMgZGV0YWluZWQgZm9yIGFuIGhvdXIgZm9yIHRoaXMgcmFuZG9tIGNoZWNrLiBJIGdvdCB0byB0aGUgZmluYWwgb25seSA1IG1pbnV0ZXMgbGF0ZSBhbmQgdGhlIGRvb3JzIHdlcmUgYWxyZWFkeSBjbG9zZWQgYW5kIGxvY2tlZC4gSSBoYWQgdG8gc2hvdyBteSBjYXJkIGZyb20gdGhlIHBvbGljZSB0byB0aGUgVEEsIHdobyB0b29rIG1lIHRvIHRoZSBwcm9mZXNzb3IgdGhyb3VnaCBhIGJhY2sgd2F5LiAKQmVmb3JlIHRoZSBncmFuZCBmaW5hbGUsIExhZHkgR2FnYSBzbG93ZWQgaXQgZG93biBmb3IgYW4gaW50aW1hdGUgbW9tZW50IHdpdGggZmFucyBhbGwgYXJvdW5kIHRoZSB3b3JsZCBhcyBzaGUgdG9vayBhIHNlYXQgYXQgYSBwaWFubyB0byBwZXJmb3JtIGhlciBtb3N0IHJlY2VudCBoaXQsICJNaWxsaW9uIFJlYXNvbnMuIiBJbiBiZXR3ZWVuIGNob3Jkcywgc2hlIGdhdmUgc2hvdXQgb3V0cyB0byBoZXIgbW9tIGFuZCBkYWQgaW4gdGhlIGF1ZGllbmNlIG1vbWVudCB0aGF0IHN1cmVseSBoYWQgZXZlcnlvbmUgd2F0Y2hpbmcgc3VkZGVubHkgYSBiaXQgdGVhcnkgZXllZC4KNyBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCkhhcyBhbGwgdGhlIHJpZ2h0IGluZ3JlZGllbnRzLiBUaGUgYmlnZ2VzdCByZWFzb24gd2UgZGlkbiBnbyBmb3J3YXJkIGlzIGJlY2F1c2Ugc2hlIGdvaW5nIHRvIG5lZWQgYSBsb3QgbW9yZSB0aGFuIHRoZSAkMTc1LDAwMCBzaGUgYXNrZWQgZm9yLiAKTWF5YmUgSSdsbCBmZWVsIGJldHRlciBuZXh0IHNlYXNvbi4gCkRvZXNuIG1hdHRlciBpZiBoZSBzY29yZXMgYXQgYWxsLCBzYWlkIE1jRGF2aWQuIApJbSBub3Qgc2F5aW5nIGhlIGlzIGVhZ2VybHkgd2FpdGluZyBhcm91bmQgcmVhZHkgdG8ganVtcCBvbiBpdC4gQnV0IHVubGVzcyBJIHJlYWQgc29tZXRoaW5nIHdyb25nLCBpdCBzZWVtZWQgbGlrZSBoZSB3YXMgd2lsbGluZyB0byBkbyBpdC4gSSBkb24ga25vdyB3aGF0IGludGVydmlldyBpdCB3YXMuIApNWVRIIE5PLiAxOk1pY2hhZWwgSmFja3NvbidzIGZhdGhlciBzZXh1YWxseSBhYnVzZWQgaGltIGFzIGEgY2hpbGQKIkdpdmUgbWUgYSBzZW5zZSBvZiB3aGF0IGxpZmUgaXMgbGlrZSB3aXRoIGEgcHJvZmVzc2lvbmFsIGdhbWJsZXIuIFdoYXQgYXJlIHRoZSBoaWdocz8gV2hhdCBhcmUgdGhlIGxvd3M/ICIgVmFuIFNhbnQgYXNrZWQgUm9ieW4uICJHb3NoLCB5b3UncmUgYWxsIG92ZXIgdGhlIG1hcC4gCktleXNlciBpcyBhdCB0aGUgRGVzbm95ZXIgRnVuZXJhbCBIb21lIHdoZXJlIGEgUHJheWVyIFNlcnZpY2Ugd2lsbCBiZSBoZWxkIG9uIFNhdHVyZGF5LCBNYXJjaCAyLCAyMDE5IGF0IDk6MzAgQU0gZm9sbG93ZWQgYnkgdGhlIE1hc3Mgb2YgQ2hyaXN0aWFuIEJ1cmlhbCBhdCAxMDowMCBBTSBhdCBTdC4gCldlIHVuZGVyc3RhbmQgdGhhdCB3ZSB0aGUgbWlub3JpdHkuIApFYXJsaWVyIHRoaXMgd2VlaywgdGhlIFRvcm9udG8gUmVhbCBFc3RhdGUgQm9hcmQgdXJnZWQgT3R0YXdhIHRvIHdoZXRoZXIgdGhlIHN0cmVzcyB0ZXN0IGlzIHN0aWxsIHdhcnJhbnRlZCwgZXNwZWNpYWxseSBnaXZlbiB0aGUgaGlnaGVyIGludGVyZXN0IHJhdGUgZW52aXJvbm1lbnQgb2YgdG9kYXkuIFNvbWUgYmFuayBlY29ub21pc3RzIGhhdmUgYWxzbyByZWNlbnRseSBjYWxsZWQgaW50byBxdWVzdGlvbiB3aGV0aGVyIHRoZSBydWxlcyBhcm91bmQgdGhlIHRlc3Qgc2hvdWxkIGJlIGxvb3NlbmVkLgpJIHRoaW5rIHRoZSBiaWdnZXN0IGRpZmZlcmVuY2UgaXMgdGhhdCB0aGUgYmFzZSBsZXZlbCBvZiBza2lsbCBpcyBpbmNyZWFzaW5nIGluIHBva2VyIGFuZCB0aGUgbWlkZGxpbmcgcGxheWVycyBhcmUgbXVjaCBiZXR0ZXIgdGhhbiB0aGV5IHVzZWQgdG8gYmUganVzdCBiYXNlZCBvbiB0aGUgYW1vdW50IG9mIGluZm9ybWF0aW9uIG91dCB0aGVyZSwgYnV0IHRoZSBnYXAgYmV0d2VlbiB0aGlzIG1pZGRsZSBwYWNrIGFuZCB0aGUgdXBwZXIgZWNoZWxvbiByZW1haW5zIHByZXR0eSBzaW1pbGFyIHRvIHdoYXQgaXQgd2FzIGJlZm9yZS4KQW5kIENhbmFkaWFucyBhbmQgQW1lcmljYW5zIHdpbGwgbm90IGtub3cgb25lIGFub3RoZXIgYXMgd2VsbC4gCkFzIHBvbGl0aWNhbCBkZWNpc2lvbnMgb24gdGhlIGZhdGUgb2YgdGhlIGNpdHkgcHVibGljIHRyYW5zaXQgbG9vbSwgZWZmb3J0cyB0byBjYXJ2ZSB1cCB0aGUgYnVzIHJhcGlkIHRyYW5zaXQgcGxhbiByYWlzZSBhIGxhcmdlciBxdWVzdGlvbjogSWYgQlJUIGZhbGxzLCBkb2VzIHRoZSBMb25kb24gUGxhbiBnbyB3aXRoIGl0PwpUSEUgUlVTU0lBTlMhISJQZW9wbGUgdm90ZWQgZm9yIFRydW1wIGJlY2F1c2UgdGhleSBhcmUgc2ljayB0byB0aGUgYmFjayB0ZWV0aCBvZiB0aGUgc25vdyBmbGFrZSBsZWZ0IGFuZCB0aGVpciByZWZ1c2FsIHRvIGJlIHRvbGVyYW50IG9mIGFueXRoaW5nIHRoYXQgZG9lc24gZml0IHRoZWlyIG5hcnJvdyBMaWJlcmFsIHZpZXcgcG9pbnRzLiAKSSBiZWxpZXZlIG91ciBuYXR1cmFsIHdvcmxkIGlzIHdvcnRoIGJlaW5nIHByb3RlY3RpdmUgb2YuLiAKVGhlIHByb2JsZW0gaXMgdGhhdCBvbmx5IGFib3V0IGhhbGYgdGhlIHBvcHVsYXRpb24gd2FudGVkIEJyZXhpdCwgYW5kIG5vIG9uZSBIQUQgYW55IGlkZWEgd2hhdCB0aGF0IHdvdWxkIGxvb2sgbGlrZSBpbiBhIHByYWN0aWNhbCBzZW5zZS4gClRoZSBmaXNoYm93bCBnaXJscyB3ZXJlIGFsbCAyLDAwMCBiYWh0IGFwaWVjZSwgd2hpbGUgdGhlcmUgd2VyZSBhIGNvdXBsZSBvZiBzaWRlbGluZXJzIGF2YWlsYWJsZSBmb3IgMiwzMDAuIFRoZSBtYW1hc2FuIHNhaWQgdGhlcmUgd2VyZSB1cHN0YWlycyBmb3IgMywwMDAgMywzMDAgYnV0IHRoZSBzZWxlY3Rpb24gZG93bnN0YWlycyB3YXMgZ29vZCBlbm91Z2gsIGFuZCBhIGRlY2VudCBwcmljZS4gSSB3ZW50IGZvciBhIGZpc2hib3dsIGdpcmwuIApJIGdvIHRvIHNsZWVwLi4gCkxpa2UgSSBzYWlkLCBpdCBqdXN0IGEgdmVyeSBsb3cgYW1vdW50IG9mIGNvbnRyb2wsIGJ1dCBpdCB0aGVyZS4KS2lkIFBva2VyIGZpZ3VyZXMgdGhlIGJyaWdodCBsaWdodHMgYW5kIGxpZ2h0IHRheGVzIG9mIExhcyBWZWdhcyB3aWxsIGRyYXcgZnJlZSBhZ2VudHMgd2hvIHdpbmNlIGF0IHRoZSB2ZXJ5IHRob3VnaHQgb2YgV2lubmlwZWcgb3IgRWRtb250b24uLiAKQm91cmJvbiB3aGlza2V5LCBTdGV0c29ucyBhbmQgc3dhZ2dlciBoYXZlIGJlZW4gcmVwbGFjZWQgYnkgZHVhbCAzMiBpbmNoIGNvbXB1dGVyIHNjcmVlbnMsIG1hdGhlbWF0aWNhbCB0aGVvcmllcyBhbmQgYSBtdWx0aSBiaWxsaW9uIGRvbGxhciBvbmxpbmUgaW5kdXN0cnkuCkFueGlvdXNnYW1lcndpZmUgIDYgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSGVscCBpcyBhdmFpbGFibGUuIApXZWxsLCBpbiBmYWN0LCBJIHdhbnQgdG8gdGVsbCB5b3UgYWJvdXQgYW5vdGhlciB0eXBlIG9mIHRvdXJuYW1lbnRzLiAKSGUgaGFkIGJlZW4gYSBwcm8gc2luY2UgMjAwMiBhbmQgdHJhaW5pbmcgZm9yIGFsbW9zdCBhbGwgNSByb3VuZCBmaWdodHMgc2luY2UgMjAwNi4gQnkgdGhlIHRpbWUgaGUgZm91Z2h0IGJlbmRvLCBoZSB3YXMgMTIgeWVhcnMgaW50byBoaXMgY2FyZWVyIGFuZCB0aGUgd2hlZWxzIHN0YXJ0ZWQgY29taW5nIG9mZiBtb3JlIHRoYW4gYW55dGhpbmcuIEl0IHdhc24ndCBzb21lIG15dGggdGhhdCBHaWxiZXJ0IHdhcyBhIGdyZWF0IGZpZ2h0ZXIuIApKYXlhIE5pdGFhaSFJbiBldmVyeSBzeXN0ZW0sIHRoZXJlIGFyZSBwZW9wbGUgd2hvIGRvbiBsaWtlIGl0IGFuZCB0aGVyZSBhcmUgcGVvcGxlIHdobyBjYW4gZmF0aG9tIHRoZSBpZGVhIG9mIGFub3RoZXIgc3lzdGVtIGV4aXN0aW5nIGluIHBhcmFsbGVsIHRvIGl0LkJ1ZGRoYSwgTWFoYXZpcmEsIEd1cnUgR29iaW5kIFNpbmdoIGFyZSB0aGUgcGVvcGxlIHdobyBkaWRuIHdhbnQgdG8gZm9sbG93IHRoZSBleGlzdGluZyBzeXN0ZW0uIEFuZCB0aGVyZSBpcyBub3RoaW5nIHdyb25nIHdpdGggdGhhdC4gCkp1c3QgYSBoZWFkcyB1cC4geW91ciBNYWNlZG9uaWFuIEVtYmFzc3kvQ29uc3VsYXRlIHdpbGwgYmUgb2YgbGl0dGxlIGhlbHAuIFRoZXkgd2lsbCBtYWtlIHlvdSBqdW1wIHRocm91Z2ggaG9vcHMuIFRoZXkgd2lsbCBjaGFyZ2UgeW91IHJpZGljdWxvdXMgZmVlcywgamVyayB5b3UgYXJvdW5kIGFuZCBqdXN0IHdhc3RlIHlvdXIgdGltZS4gQmVzdCBiZXQgaXMgdG8gZmluZCBhIGxhd3llciBpbiBNYWNlZG9uaWEgYW5kIGhhdmUgdGhlbSBsb29rIGludG8gaXQgZm9yIHlvdS4KMTkgV2FzaGluZ3RvbiBTdGF0ZSBiZWF0cyBVdGFoIDMzIDI1V2FzaGluZ3RvbiBTdGF0ZSB2IFV0YWhTQUxUIExBS0UgQ0lUWSwgVVQgICBOT1ZFTUJFUiAxMTogUmVuYXJkIEJlbGwgODEgb2YgdGhlIFdhc2hpbmd0b24gU3RhdGUgQ291Z2FycyBydW5zIGZvciB0aGlyZCBxdWFydGVyIHlhcmRhZ2UgaW4gZnJvbnQgb2YgVGVycmVsbCBCdXJnZXNzIDI2IG9mIHRoZSBVdGFoIFV0ZXMsIGR1cmluZyB0aGUgQ291Z2FycyAzMyAyNSB3aW4gYXQgUmljZSBFY2NsZXMgU3RhZGl1bSBvbiBOb3ZlbWJlciAxMSwgMjAxNyBpbiBTYWx0IExha2UgQ2l0eSwgVXRhaC4gClRoZSBzbGVlcG92ZXJzIHdlcmUgYXBwcm92ZWQgYnkgdGhlIGNvbXBsYWluYW50IHBhcmVudHMsIGFuZCB0aGV5IHdvdWxkIHNsZWVwIGluIHNlcGFyYXRlIGJlZHMsIGhlIHNhaWQuIApUaGUgU2VhdHRsZSBkZXRlY3RpdmVzIGhhdmUgYWxyZWFkeSBkb25lIHRyYWluaW5nIHNlc3Npb25zIHdpdGggYSBudW1iZXIgb2YgcG9saWNlIGFnZW5jaWVzIGluIHRoZSBjb3VudHksIGFuZCBoYXZlIG1hZGUgdHJpcHMgdG8gRWFzdGVybiBXYXNoaW5ndG9uIHRvIGVpdGhlciB0cmFpbiBvZmZpY2VycyBvciBhcnJlc3QgcGVycHMgdGhlcmUuIEluIGFkZGl0aW9uLCB0aGUgS2luZyBDb3VudHkgU2hlcmlmZidzIE9mZmljZSBpcyBjb2xsYWJvcmF0aW5nIHdpdGggUmVudG9uIGFuZCBTZWFUYWMgY29wcyB0byBjb25kdWN0IHNpbWlsYXIgb25saW5lIHN0aW5ncywgYWNjb3JkaW5nIHRvIFJpY2hleS4KU29tZSBvZiBteSBvdGhlciBndXlzIGhhdmUgbW9yZSBzdG9yaWVzLCBvbmUgb2Ygd2hpY2ggZW5kZWQgdXAgaW4gYWN0dWFsIGVtcGxveWVlLCBjbGllbnQgcmVsYXRpb25zIGFuZCB0aGUgZ3V5IGdldHRpbmcgZmlyZWQuIFRob3NlIHdlcmUgc29tZSBmdW4gdGltZXMuCkZyYUJha3RvcyAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyMSBkYXlzIGFnbwoiVmlydHVhbGx5IGFsbCBjaHJvbmljIGRpc2Vhc2VzIGNhbiBiZSB2aWV3ZWQgYXMgYSBjb25zZXF1ZW5jZSBvZiBhIGNvbnRpbnVpbmcgaW1iYWxhbmNlIG9mIGdvb2QgYW5kIGJhZCBlaWNvc2Fub2lkcy4iIFAuIDI1OQpJbW1lZGlhdGVseSBhZnRlciB0aGUgYWNjaWRlbnQsIGkgbm90aWNlZCBhIGx1bXAgb24gaGlzIGxvd2VyIG5lY2sgdGhhdCB3YXMgYWJvdXQgdGhlIHNpemUgb2YgYSBnb2xmIGJhbGwgYW5kIHZlcnkgc2Vuc2F0aXZlIHRvIHRoZSB0b3VjaC4gClNoZSBsaXZlZCBhbmQgZG9jdW1lbnRlZCBoZXIgbGlmZSBhcyBvbmUgb2YgdGhlIG1vc3QgaGlnaCBwcm9maWxlIGFuYXJjaGlzdHMgZHVyaW5nIHRoZSBpbmR1c3RyaWFsIHJldm9sdXRpb24sIHJ1c3NpYW4gcmV2b2x1dGlvbiBhbmQgc3BhbmlzaCBjaXZpbCB3YXIuIApTY2FuZGFsIHRoYXQgZXhwb3NlZCBwZWRvcGhpbGUgYmlsbGlvbmFpcmUgSmVmZnJleSBFcHN0ZWluCkFuZCBhcyBkaWZmaWN1bHQgYXMgdGhlIGNvbGxhcHNlIG9mIHRoZSBBbWVyaWNhbiBFbXBpcmUgd2lsbCBiZSwgYXMgaXQgc2lua3MgdW5kZXIgdGhlIHdlaWdodCBvZiBjb3N0cyBvZiB0aGlzIHdhciwgbG9zaW5nIHRoZSBRdWVlbiB3aWxsIGJlIGxpa2UgbG9zaW5nIG91ciBiZWxpZWYgaW4gU2FudGEuIApJbnN0ZWFkLCBvbmxpbmUgcG9rZXIgcGxheWVycyBsZWFybiB0byBmb2N1cyBtb3JlIGtlZW5seSBvbiBiZXR0aW5nIHBhdHRlcm5zLCByZWFjdGlvbiB0aW1lIGFuZCBvdGhlciBiZWhhdmlvciB0ZWxscyB0aGF0IGFyZSBub3QgcGh5c2ljYWwgaW4gbmF0dXJlLiAKSXQgdGhlIHNlY29uZCB5ZWFyIGluIGEgcm93IHRoYXQgV2VudHogaGFkIGEgbWFqb3IgaW5qdXJ5IGFuZCBjb3VsZG4gZmluaXNoIHRoZSBzZWFzb24sIGJ1dCB0ZWFtcyAgIGVzcGVjaWFsbHkgZGVzcGVyYXRlIG9uZXMgICB3b3VsZCBzdGlsbCBsaWtlbHkgdGFrZSB0aGF0IHJpc2suIEhvd2V2ZXIsIGlmIFdlbnR6IHN0YXlzIHdpdGggdGhlIEVhZ2xlcyBhbmQgdGhlIHNhbWUgdGhpbmcgd2VyZSB0byBoYXBwZW4gYWdhaW4gbmV4dCB5ZWFyLCB0ZWFtcyBtaWdodCBiZSBtb3JlIHdhcnkuIAoyMyB0byBtYWtlIHN1cmUgdGhlcmUgYXJlIG5vIGxhc3QgbWludXRlIGZhbWlsaWVzIHN0cnVnZ2xpbmcgdG8gcHJvdmlkZSBhIENocmlzdG1hcyBmb3IgdGhlaXIga2lkcy4gCiJOb3cgbW9yZSB0aGFuIGV2ZXIsIEkgYW0gdmVyeSBsZXZlbCBoZWFkZWQsIiBSYWNlbmVyIHNhaWQuICJCZWluZyBpbnRvIG15IGhlYWx0aCBhbmQgZml0bmVzcyBoZWxwcyB0byBrZWVwIGEgY2xlYXIgbWluZC4gClRoZXJlIGFyZSB2ZXJ5IGZldyBzdGVlcCBzZWN0aW9ucyBvZiBwYXRoICAgdGhlIGhpZ2hlc3QgcG9pbnQgaXMgb25seSA4MG0gYWJvdmUgdGhlIGxvd2VzdCBwb2ludC4gClRoZSBvbmUgbW9kIEkgdXNlIHRoYXQgZG9lcyBjaGFuZ2UgZ2FtZXBsYXkgaXMgRGVlcFdvb2RzLiBJdCBhIGxpdHRsZSBvdmVycG93ZXJlZCBpZiB5b3UgZ28gaW50byB0aGUgd29vZHMgZWFybHkgb24sIGJ1dCBieSB0aGUgdGltZSB5b3UgaGl0IFNrdWxsIENhdmVybnMsIGl0IGxlc3MgcHJvZml0YWJsZSB0byBzcGVuZCBhIGRheSBpbiB0aGUgRGVlcCBXb29kcyB0aGFuIHRoZXJlLiBXaGF0IEkgbGlrZSBhYm91dCBpdCBpcyBpdCBnaXZlcyB5b3UgYW5vdGhlciBwbGFjZSB0byBleHBsb3JlIGFuZCBpdCBnaXZlcyB5b3UgYSB3YXkgdG8gZmFybSBoYXJkd29vZCB0aGF0IGlzbiBhcyBncmluZHkgYW5kIHRlZGlvdXMgYXMgaGF2aW5nIHRvIGNoZWNrIHRoZSBTZWNyZXQgV29vZHMgZXZlcnkgZGF5LgpIVFRQIGlzIG5vdCBlbmNyeXB0ZWQsIGl0IGlzIHRvbyBlYXN5IHRvIGJlIGhhY2tlZC4gCklmIHlvdSB0aGluayBUcnVtcCBkb2VzIGhpcyBvd24gdGF4ZXMgeW91IGFyZSBvdXQgb2YgeW91ciBtaW5kLiBUaG9zZSBpbmRpdmlkdWFscyB0aGF0IGRvIHRoZSB0YXhlcyBmb3IgaGlzIGh1bmRyZWRzIG9mIGNvbXBhbmllcyB3ZXJlIHRoZSBjcmltaW5hbHMgaWYgYW55IGNyaW1lIHdhcyBldmVuIG1hZGUuClRoYXQgc2FpZCBJIGVudGlyZWx5IGFncmVlIHdpdGggd2hhdCAvdS9TcXVhZ2VtIHNhaWQuIFlvdSBuZWVkIHRvIHRhbGsgYWJvdXQgdGhlIGNvc3Qgb2YgcGxhbm5pbmcgYmVmb3JlIHlvdSBnZXQgaW50byBwbGFubmluZy4gQ29uc2lkZXJpbmcgeW91IGRvIHRoaW5ncyBsaWtlIHNlbGVjdGluZyBtYXRlcmlhbHMgYW5kIGNyZWF0aW5nIGRlc2lnbnMgdG8gZG8gdGhlIGFjdHVhbCB3b3JrIGl0IGNvdWxkIGJlIHF1aWV0IGVhc3kgdG8gY3JlYXRlIGEgc2VydmljZSBmcm9tIHRoYXQuIApMYSBQb3N0ZSByZXN0ZSBkb25jIHVuIHRhYmxpc3NlbWVudCBwdWJsaWMgZCd1biB0eXBlIHBhcnRpY3VsaWVyLiBPbiByYXR0YWNoZSBkb25jIGxlIHNlcnZpY2UgZGVzIHBvc3RlcyBhdSBzZXJ2aWNlIHB1YmxpYy4gU2FucyBuZ2xpZ2VyIGxlcyBxdWVyZWxsZXMgZG9jdHJpbmFsZXMgZGUgbGEgbm90aW9uLCBvbiBwZXV0IHNpbXBsZW1lbnQgZGZpbmlyIGxlIHNlcnZpY2UgcHVibGljIGNvbW1lIGxlcyBhY3Rpdml0cyBxdWkgc2F0aXNmb250IHVuIGJlc29pbiBkJ2ludHJ0IGducmFsLCBhc3N1cmUgb3UgY29udHJsZSBwYXIgbCdBZG1pbmlzdHJhdGlvbi4KSSBkb24ga25vdyB0aGUgYW5zd2VyLiBNeSBjdXJyZW50IGdmIGlzICJjdXRlIiBidXQgbm90IGxpa2UgdGhpcy4gU2hlIHNtYXJ0IGFuZCBmdW5ueSBhbmQgbG92aW5nL2FmZmVjdGlvbmF0ZSwgYW5kIGdyZWF0LiBCdXQgc2hlIGlzbiB0aGUgc2hvdyBzdG9wcGVyIEkgdXN1YWxseSBnbyBmb3IuIERvIEkgbWlzcyBpdD8gWWVzLiBTb21ldGltZXMgSSBsb29rIGFuZCB0aGluay4gY3JhcC4gYnV0IHRoZW4gc2hlIGxlYXZlcyBtZSBhIG5vdGUgYWJvdXQgaG93IGhhbmRzb21lIEkgYW0gKEkgYW0gbm90LCBieSB0aGUgd2F5LCBidXQgdGhhdCBPSykgYW5kIHlvdSByZWFsaXplIHRoaXMgaXMgd2F5IGJldHRlciB0aGFuIGxpc3RlbmluZyB0byBoZXIgY29uZnVzZWQgYmVjYXVzZSBzaGUgb25seSBlYXRlbiBvbGl2ZXMgZm9yIHRoZSBsYXN0IDMgZGF5cy4KIkFsbCB0aGUga2lkcyBoYWQgYSBjb21wdWxzb3J5IGludGVydmlldyB3aXRoIEx1Y2FzLCIgaGUgc2FpZC4KS2xpbmdvbiBBY2FkZW15IGlzIHN1dXVwZXIgYnVnZ3k7IGlpcmMgdGhleSB3ZXJlIGJlaGluZCBzY2hlZHVsZSBhbmQgcmVsZWFzZWQgaXQgYmVmb3JlIGlyb25pbmcgb3V0IHNvbWUgb2YgdGhlIGtpbmtzLiAKSSBoYWQgc28gbXVjaCBhZHJlbmFsaW5lIHRoYXQgSSB3YXMgc2l0dGluZyBpbiB0aGUgYmFja3NlYXQgcHVuY2hpbmcgbXkgbGVnIChmaWdodCkgYmVmb3JlIEkgZmluYWxseSBjaHVja2VkIG15c2VsZiBvdXQgb2YgdGhlIGNhciBhdCBhIHJlZCBsaWdodCBhbmQgdG9vayBvZmYgYm9sdGluZyBkb3duIHRoZSBzdHJlZXQgYXQgOXBtIChmbGlnaHQpLiBMb3ZlIGFuZCBiZWluZyByZWplY3RlZCBtYWtlcyB5b3UgYWN0IGFsbCB0eXBlcyBvZiBjcmF6eSwgSSB0b3RhbGx5IGJlbGlldmUgQ29sdG9uICJkcmFtYXRpY3MiIGFyZSBhdXRoZW50aWMgYW5kIHJlYXNvbmFibGUuIAoiT2J2aW91c2x5LCB0aGV5IHNodXQgdXMgZG93biBiZWNhdXNlIHRoZXkgc2FpZCBpdCB3YXMgaWxsZWdhbCBnYW1ibGluZyBhbmQgSSBkb24ndCB0aGluayB0aGF0J3MgaWxsZWdhbCBhdCBhbGwuIi4gCkFzIGZvciAic2l0dGluZyBkb3duIiB0aGUgbW9kIHRlYW0gaGFzIHZlcnkgZGlmZmVyZW50IG9waW5pb25zIG9uIHRoZSBtYXR0ZXIsIGFuZCBhIGZldyBkb24gZXZlbiBsaWtlIGhvdyAicmVzdHJpY3RpdmUiIHRoZSBuZXcgcnVsZSBpcy4KVGhlIGVpZ2h0IHRhYmxlcywgZWFjaCB3aXRoIDEzIHBsYXllcnMsIHdhcyBkd2luZGxlZCBkb3duIHRocm91Z2hvdXQgdGhlIGRheSB1bnRpbCBvbmx5IExlZSwgTWljYWxlZmYgYW5kIFNwZW5jZXIgd2VyZSBsZWZ0IHNpdHRpbmcgYXQgdGhlIHRhYmxlLiAKT2ggZ29vZC4gCkl0IHNob3VsZG4gYmUgYWxsb3dlZCB0byBzbGlwIGJ5IGFzIGp1c3QgYW5vdGhlciBhY2NlbnQgbGlrZSBzb21lIGFyZSBzYXlpbmcuLiAKRG9uIHVzZSB0aGUgc3VicmVkZGl0IGZvciBzaG91dCBvdXRzIG9yIGluZGl2aWR1YWwgY29tbXVuaWNhdGlvbiB0byBvdGhlciByZWRkaXRvcnMsIHBlb3BsZSBvciBjb21wYW5pZXMuIApEYXJ0aGhvdXggdQpXaGF0IHdhcyB0aGUgZmlyc3QgTmV3IFllYXIgcmVzb2x1dGlvbiBldmVyIG1hZGU/Cklwc3dpY2ggbWVtYmVycyBoYWQgdG8gcmVhY2ggaW50byB0aGVpciBvd24gcG9ja2V0cyB0byBrZWVwIGl0IGFmbG9hdCwgYW5kIGl0cyByZXB1dGF0aW9uIHdhcyAnc2NhcnJlZCcgYnkgd2hhdCBoYWQgb2NjdXJyZWQuCkZpcmVmaWdodGVycyBjb250aW51ZSB0byBiYXR0bGUgc3R1YmJvcm4gYmxhemUKUGVyaGFwcyB0aGUgd2lmZSBpcyBhbG1vc3QgY2VydGFpbiB0aGF0IHNoZSBpcyBiZWluZyBjaGVhdGVkIG9uIGJ1dCBoYXMgbm8gcHJvb2YuIFNoZSB0aGlua3Mgc2hlIGlzIGJlaW5nIGxpZWQgdG8gYnV0IGRvZXMgbm90IHdhbnQgdG8gc2VwYXJhdGUgYmFzZWQgb24gdGhhdCBhbG9uZS4gSGlyaW5nIHRoaXMgbGFkeSBzaG91bGQgYmUgYSBsYXN0IHJlc29ydCAodGhvdWdoIEkgc3VyZSB0aGVyZSBhcmUgcGxlbnR5IHRoYXQgZ28gY3JhenkgYW5kIGhpcmUgaGVyIHdpdGhvdXQganVzdCBjYXVzZSkuIAoiVGhlIHRpbWUgaGFzIGNvbWUgZm9yIGhpbSB0byBmaW5hbGx5IGJlIGhlbGQgYWNjb3VudGFibGUgZm9yIGhpcyBhY3Rpb25zLCIgaGUgc2FpZC4KRXZlcnkgbW9udGggdGhhdCB0aGUgbmVnb3RpYXRpb25zIGRyYWdnZWQgb24sIHRoZSByZWJlbHMgYmVjYW1lIHdlYWtlciBhbmQgbWlsbGlvbnMgb2YgcmVmdWdlZXMgYmVjYW1lIG1vcmUgZGVzcGVyYXRlLiAKSXMgYSB3b3JsZCBsZWFkZXIgaW4gdGVjaG5vbG9neSBlZHVjYXRpb24sIHNraWxsIGxldmVsIGFuZCBJVCBjZXJ0aWZpY2F0aW9ucywgU2VuZiBzYXlzLiBJcyB0aGUgbW9zdCBlZHVjYXRlZCBjb3VudHJ5IGluIHRoZSB3b3JsZC4gCkF1ZGkgZGVzY3JpYmVzIHRoZSBVcmJhbiBDb25jZXB0IGFzIGEgMSsxIHNlYXQsIHVsdHJhIGxpZ2h0IGNhciBmb3IgY29uZ2VzdGVkIHVyYmFuIHNwYWNlcy4gVGhlIGF1dG9tYWtlciBzdHJlc3NlcyB0aGF0IGl0IHB1cmVseSBhIGNvbmNlcHQsIGJ1dCB3aXRoIHBhcmVudCBjb21wYW55IFZvbGtzd2FnZW4gYWxzbyByZXZlYWxpbmcgaXRzIG93biAxKzEgc2VhdCB0YW5kZW0gc3R5bGUgY29uY2VwdCBjYXJzIG92ZXIgdGhlIHJlY2VudCB5ZWFycyAoMjAwMiAxIExpdGVyIGFuZCAyMDA5IEwxKSwgd2UgY291bGQganVzdCBiZSBzZWVpbmcgeWV0IGFub3RoZXIgaXRlcmF0aW9uIG9mIGEgcHJvZHVjdGlvbiBpbnRlbnQgcGxhdGZvcm0uLiAKVGhlIGFiaWxpdHkgdG8gZGV0ZWN0IGEgY2F2aXR5IGxpa2UgdGhlIG9uZSBtZW50aW9uZWQgaW4gdGhlIGFydGljbGUgaXMgbmV3LiBOb3cgdGhlIHNjaWVudGlzdHMgbmVlZCB0byBvYnNlcnZlIGl0LCBsb29rIGZvciBvdGhlcnMgYW5kIHNlZSBob3cgdGhleSBiZWhhdmUgZ29pbmcgZm9yd2FyZCBhcyBwYXJ0IG9mIHRoZSBvdmVyYWxsIHByb2Nlc3Mgb2YgcmVmaW5pbmcgbW9kZWwuCkIpIHZpbGxhaW4ganVzdCBkb2Vzbid0IGZvbGQgYW5kIHdlIHNob3VsZCBiZSBtb3JlIGxpbmVhciBhbmQgbm90ICJibHVmZiIgd2l0aCBjaGVjayByYWlzZXMuIEl0J3MgYmFzaWNhbGx5IGJsdWZmaW5nIGEgY2FsbGluZyBzdGF0aW9uLiBKdXN0IHdpZGVuIHZhbHVlIGJldCByYW5nZSBhbmQgY29uc2lkZXIgY2hlY2sgcmFpc2luZyB0b3AgcGFpcnMgYW5kIHN1Y2gKVGhlIG5ldyBkZWF0aCB0b2xsIHdhcyBhbm5vdW5jZWQgYXQgYSBicmllZmluZyB3aXRoIGxvY2FsIGFuZCBmZWRlcmFsIGludmVzdGlnYXRvcnMgYSBkYXkgYWZ0ZXIgdGhlIEZyaWRheSBhZnRlcm5vb24gY3Jhc2guClRoZSByZXNlYXJjaCBvbiB3ZWlnaHQsIGRlc3BpdGUgYWxsIHRoZSBoeXN0ZXJpYSBvdmVyIGZhdCwgaXMgZmFpcmx5IGNsZWFyIHRoYXQgImlkZWFsIHdlaWdodCIgaXMgaW4gZmFjdCBub3QgdGhhdCBpZGVhbC4gClJpZ2h0IG5vdyB0aG91Z2ggdGhlcmUgYXJlIG1hbnkgZnJlc2ggZ3JhZHVhdGVzIGRvaW5nIGl0IGZvciBhIGxpdmluZy4iLiAKVGhlIGZhY3QgdGhhdCB0aGVyZSBpcyBubyBlbnRyeSBmZWUgYXR0cmFjdHMgcGxheWVycy4iUGxheWVycyBuZXZlciBoYXZlIHRvIHBheSwiIHNheXMgTWF4d2VsbCwgNTguIApJIGRpZCBnb29kIHRoaW5ncyBpbiAyMDA3IGFnYWluc3QgRmVybmFuZG8uIApOb3cgbGV0J3MgY291bnRlciB3aXRoIHRoZSB2ZXJ5IG5leHQgY29taW5nIHVwIGlucXVpcnkgcmFpc2VkLCBhcyB0byBob3cgdGhlIGNhcmQgZ2FtZXMgY2FtZSBpbnRvIGV4aXN0ZW5jZSBvciB3aGF0IGlzIHRoZSBuYXJyYXRpb24gY29uY2VybmVkIHRvIGl0PyBUaGUgc3RvcnkgZ29lcyBsaWtlIHRoaXMgdGhhdCB0aGUgY2FyZHMgYXJlIHNhaWQgdG8gYmUgZ2l2ZW4gYmlydGggaW5pdGlhbGx5IGluIENoaW5hLCB0aGUgY291bnRyeSB3aGljaCBib2FzdHMgb2YgYW4gYXdlc29tZSBpbnZlbnRpb24gb2YgcGFwZXIgYXMgd2VsbC4gQW5kIHdoZW4gdGhpcyBoYXBwZW5lZCBpcyBhbHNvIGFuIGltcG9ydGFudCBwb2ludCB0byBiZSBwb25kZXJlZCBvbiBhcyB0aGUgc2FtZSB3YXMgYnJvdWdodCBpbnRvIHRoZSBwaWN0dXJlIGFzIGVhcmx5IGFzIGluIHRoZSA3dGggb3IgMTB0aCBjZW50dXJ5LiBBbmQgaXQgaXMgbm90IHRoYXQgdGhlIHVzZSBvZiBjYXJkIGdhbWVzIHdhcyBjb25maW5lZCB0byB0aGF0IHBlcmlvZCBvbmx5IGFzIHN0aWxsIHRoZXJlIGFyZSBwYWNrcyBhdmFpbGFibGUgaW4gQ2hpbmEgaW4gd2hpY2ggdGhlcmUgaXMgYSB2aW9sZW50IHVzZSBvZiBzdWl0cyBvZiBjb2lucyBhbmQgY29yZHMgb2YgY29pbnMgd2hpY2ggdGhlIHBsYXllcnMgb2YgTWFoIEpvbmcgdGVybSBhcyBjaXJjbGVzIGFuZCBiYW1ib29zIChrbm93biBieSB1cyBhcyBzdGlja3MpLiBJbiBkdWUgY291cnNlIG9mIHRpbWUsIENhcmRzIHBhdmVkIHRoZWlyIHdheSBpbnRvIHRoZSBnYXRld2F5cyBvZiBFdXJvcGUgZnJvbSB0aGUgZHluYXN0eSBvZiBJc2xhbSB3aGVyZSB0aGUgc3VpdCAgY2lwaGVycyBzaGFwZWQgdXAgYXMgY3VwcyBhbmQgc3dvcmRzIGFsb25nIHdpdGggbm9uIHJlcHJlc2VudGF0aW9uYWwgY291cnQgY2FyZHMuIEdyYWR1YWxseSwgaW4gRXVyb3BlIGFzIHdlbGwgdGhlc2Ugc3VpdCBjaXBoZXJzIGFnYWluIHNoYXBlZCB1cCBhcyBjb3VydGllcnMgb2Yga2luZ3Mgc3VjaCBhcyBraW5ncyBhbmQgdGhlaXIgZW50b3VyYWdlLCBrbmlnaHRzIChyaWRpbmcgYSBob3JzZSkgYW5kIHBlcnNvbmFsIGF0dGVuZGFudHMgb24gZm9vdC4KT2NjYXNpb25hbGx5LCBNeXNsaWNodWsgc2FpZCwgd2VkZGluZyBwYXJ0aWVzIHJlbnQgdGhlIHNwYWNlIGZvciBwaG90b3MsIHRvby4gQnV0IHRoZSBmZWVzIGhlIGNoYXJnZXMgYXJlIGp1c3QgZW5vdWdoIHRvIGNvdmVyIHRoZSAkNDAwIGNvc3Qgb2YgaGlyaW5nIGEgY2xlYW5pbmcgYWdlbmN5IHRvIGtlZXAgdGhlIGxhcmdlIHBsYWNlIHNwb3RsZXNzLgpVZ2ggbXkgbW9tIHN0YXJ0ZWQgZmFrZSBjcnlpbmcgb24gRmF0aGVyJ3MgRGF5LiBXZSBoYWQgaW52aXRlZCBoZXIgdG8gY2VsZWJyYXRlIHdpdGggbXkgZGFkICh0aGV5J3JlIHNlcGFyYXRlZCkgYmVjYXVzZSBzaGUgd291bGQgYmUgYSB0ZXJyb3IgaWYgd2UgZGlkbid0LiBJIHRvb2sgdGhlIHRyYWluIHRvIHRoZWlyIHRvd24gYW5kIG15IHNpc3RlciBwaWNrZWQgbWUgdXAuIApBbmQgdGhhdCBpcyAoaW4gbXkgaHVtYmxlIG9waW5pb24pIHZlcnkgdW5mb3J0dW5hdGUuIApEb2VzbiBhIHJlbGlnaW9uIGtpbmRhIG5lZWQgYSBnb2QgdG8gYmUgYSByZWxpZ2lvbi4gTm8gcHJheWVyIGhlcmU7IGp1c3QgbWVkaXRhdGlvbi4gCkZvbGxvd2luZyBoZXIgZGVhdGgsIGhlciBmYW1pbHkgbG9va2VkIGludG8gTW9sbHkncyBzb2NpYWwgbWVkaWEgdXNlIGFuZCBmb3VuZCBzaGUnZCBiZWVuIGZvbGxvd2luZyBhIG51bWJlciBvZiBhY2NvdW50cyBieSBvdGhlciBkZXByZXNzZWQgYW5kIHN1aWNpZGFsIGluZGl2aWR1YWxzLiBIZXIgZmF0aGVyIHNheXMgdGhhdCBzb21lIG9mIHRoZSBhY2NvdW50cyB0byBiZSBxdWl0ZSBwb3NpdGl2ZSwgcGVyaGFwcyBncm91cHMgb2YgcGVvcGxlIHdobyB3ZXJlIHRyeWluZyB0byBoZWxwIGVhY2ggb3RoZXIgb3V0IHNvbWUgb2YgdGhhdCBjb250ZW50IGlzIHNob2NraW5nIGluIHRoYXQgaXQgZW5jb3VyYWdlcyBzZWxmIGhhcm0uIExpa2Ugc2VsZmhhcm0gYW5kIHN1aWNpZGUgYWxsb3cgSW5zdGEgdXNlcnMgdG8gbG9vayBhdCBmYXRhbGlzdGljLCBncmFwaGljIGltYWdlcyBvZiBzbGFzaGVkIHdyaXN0cyBhbmQgaGlnaHdheSBvdmVycGFzc2VzIHdpdGggc2lnbnMgaW5zdHJ1Y3RpbmcgImp1bXAuIApBbmQgbGlrZSBJIHNhaWQgaW4gbXkgY29tbWVudCwgZnJvbSB0aGUgYmVnaW5uaW5nIHBvcHVsYXIgb3BpbmlvbiBoYXMgYmVlbiBvbiBoZXIgc2lkZSwgYW5kIHNoZSBkaWQgZ2V0IGEgY2hhbmNlIHRvIGV4cGxhaW4gKHdoaWNoIHdhcyBncmVhdCkgYW5kIG5vdyBldmVuIG1vcmUgcGVvcGxlIGFyZSBvbiBoZXIgc2lkZS4gCkRvbiBiZSBhZnJhaWQgdG8gYXNrIHF1ZXN0aW9ucyBhYm91dCBob3cgc2hlIGxpa2VzIGl0LiAKQXMgd2l0aCBpdHMgcHJlZGVjZXNzb3JzLCB0aGUgYW5pbWF0aW9uIGluIFRoZSBIaWRkZW4gV29ybGQgaXMgc3BlY3RhY3VsYXIuIFByb3BzIHRvIHRoZSBmaWxtbWFrZXJzIGZvciBjb250aW51aW5nIHRvIGZpbmQgbm92ZWwgd2F5cyB0byBtYWtlIHRoZWlyIG5ldyBkcmFnb25zIGFuZCB0aGlzIHdvcmxkIHN0YW5kIG91dC4gVGhlIGxhdGVzdCBhZGRpdGlvbiwgYSBmZW1hbGUgIkxpZ2h0IEZ1cnkiIHdobydzIGNhcHR1cmVkIFRvb3RobGVzcycgZXllLCBpcyBvbmUgb2YgdGhlIGNvb2xlc3QgZHJhZ29ucyB5ZXQsIHR1cm5pbmcgaW52aXNpYmxlIHdpdGggYSBidXJzdCBvZiBmbGFtZXMsIGFuZCBUb290aGxlc3MgaGltc2VsZiBoYXMgYSBmZXcgbmV3IHRyaWNrcyB1cCBoaXMgc2xlZXZlLiAKU2hlIGxhdGVyIHRvb2sgaGVyIHN1cm5hbWUgZG93biBmcm9tIHRoZSBwb3N0LCBhZnRlciB0ZWxsaW5nIGpvdXJuYWxpc3RzIGhlciBhc3NvY2lhdGlvbiB3aXRoIFVuaXZlcnNhbCBNZWRpY2luZSBoYWQgbm90aGluZyB0byBkbyB3aXRoIHRoZSBjeWJlcmJ1bGx5aW5nIGNvbmZlcmVuY2UuIEV4Y2VwdCB0aGF0IFNlcmdlIEJlbmhheW9uIHdhcyBwcmVzZW50IGF0IGEgcHJlIGNvbmZlcmVuY2UgZGlubmVyIGFuZCBtYW5hZ2VkIHRvIGV4dHJhY3Qgc29tZSBmcmVlIGxlZ2FsIGFkdmljZSBmcm9tIHRoZSBvbmUgZGVmYW1hdGlvbiBsYXd5ZXIgd2hvIHNob3dlZCB1cCB0byBzcGVhay4gClRoZSBjaGFyYWN0ZXIgZGV2ZWxvcG1lbnQgd2FzbiBncmVhdCwgYnV0IHN0aWxsIGJldHRlciB0aGFuIHRoZSBib29rLiBJdCBkZWZpbml0ZWx5IGdvdCB0aGUgU3BpZWxiZXJnIHRyZWF0bWVudCwgYnV0IG5vdCBpbiBhIGJhZCB3YXkuIApDaGVja2luZyBtZWFucyB0aGF0IHlvdSBhcmUgbm90IGludGVyZXN0ZWQgb24gbGF5aW5nIGFueSBjYXNoIGluIHRoZSBvcGVuaW5nIHJvdW5kLCBhbmQgaXQgYWxzbyBtZWFucyB0aGF0IHlvdSB3YW50IHRvIGtlZXAgeW91ciBjYXJkcyBhbmQgc3RpbGwgaGF2ZSB0aGUgcmlnaHQgdG8gY2FsbCBvciByYWlzZSB3aGVuIGFub3RoZXIgcGxheWVyIG9wZW5zLgpUaG91Z2h0IHlvdSdkIHdhbnQgdG8ga25vdy4iIEJ1dCB0aGV5IGRpZG4ndC4gClRoYW5rZnVsbHksIGJlY2F1c2UgbXkgcGFyZW50cyBhcmUgc2FuZSBwZW9wbGUgd2hvIHB1dCB0aGVpciBraWRzIGFoZWFkIG9mIHRoZWlyIGNvbmZsaWN0IHdpdGggZWFjaCBvdGhlciwgdGhpcyB3YXMgbmV2ZXIgYSBwcm9ibGVtLiBJIHN1Z2dlc3QgeW91IGFwb2xvZ2l6ZSB0byB5b3VyIGtpZHMgaW1tZWRpYXRlbHksIGFuZCB0aGVuIGNhbGwgeW91ciBleCBhbmQgc2F5IGhlIGNhbiBoYXZlIHRoZSBraWRzIHRoYXQgd2VlayAgIG90aGVyd2lzZSB5b3Ugd2lsbCBkbyBwZXJtYW5lbnQgZGFtYWdlIHRvIHlvdXIgcmVsYXRpb25zaGlwIHdpdGggeW91ciBraWRzLi4gClNoZSBmcmVha2VkIHRoZSBmdWNrIG91dCBhbmQgYmFpbGVkIGhhcmQuIEkgd2FzIGJlaW5nIG5pY2UgYWJvdXQgdGVjaG5pY2FsaXRpZXMgYW5kIGZyaWVuZHNoaXBzLiAKTWF5YmUgQUssIEtKcywgS1RzLCBLOXMsIGJ1dCBmcm9tIG15IGV4cGVyaWVuY2UgdGhlIGdlbmVyYWwgcG9wdWxhdGlvbiB1bmRlcmJsdWZmcyB0aGVzZSBzcG90cyBhbiBleHRyZW1lIGFtb3VudC4gCklzIHN0aWxsIGEgUXVhZHJhbnQgQS9CIGxvc3Mgc28gaXQgaXNuIFRFUlJJQkxFLiAKSW4gU3QuIApTb21ldGhpbmcgYWJvdXQgcmlkaW5nIGEgY2FtZWwgdGhyb3VnaCBhIGNhc2lubyBpbiBNYXJyYWtlY2guIApHbG9iYWwgZXhlY3V0aXZlIGNyZWF0aXZlIGRpcmVjdG9yLCBTcG90aWZ5CkFzIFNhdHVybiByZWNlZGVkIGluIHRoZSBza3kgYW5kIHRoZSBjdXJyZW50IHN1biB0b29rIHRoZSBkb21pbmFudCByb2xlIGluIHRoZSBza3ksIHRoZSByZWxpZ2lvbnMgY2hhbmdlZCBmcm9tIHBvbHkgIHRvIG1vbm8gdGhlaXNtLiBTb2NpZXRpZXMgd2VyZSBmb3JtZWQgdG8gdHJhY2sgU2F0dXJuLCBhbmQgb3ZlciB0aW1lIHRoZSByaXRlcyBhbmQgcml0dWFscyBlc3RhYmxpc2hlZCB0byB0cmFjayBTYXR1cm4gYmVjYW1lIHRvb2xzIG9mIGh1bWFuIGNvbnRyb2wuIFNvLCB0aGUgc2VjcmV0IHNvY2lldGllcy4gdG9vbHMgb2YgY29udHJvbCBub3cuIGhhdmUgRWd5cHRpYW4vU2F0dXJuaWFuIHN5bWJvbGlzbS4KRG9uIHVuZGVyZXN0aW1hdGUgdGhlIGltcG9ydGFuY2Ugb2Ygc3BlbmRpbmcgYWRlcXVhdGUgdGltZSBhbmFseXppbmcgeW91cnNlbGYgYW5kIHRoZSB2YXJpZXR5IG9mIGNob2ljZXMgYXZhaWxhYmxlIGJlZm9yZSBjaG9vc2luZyB0aGUgcmlnaHQgYmluZ28gZ2FtZSBmb3IgeW91LiAKRm9yIHllYXJzIEkgc2F0IGFuZCB3YXRjaGVkIG1lbiB0aGF0IHdlcmUgYWxtb3N0IHR3aWNlIHRoZSBhZ2UgYXMgbXkgZGFkLCBzY2hvb2wgaGltIG9uIHZhcmlvdXMgcG9rZXIgZ2FtZXMuIApZb3UgbXVzdCBjb25zaWRlciBmdXR1cmUgcmlza3MgdGhhdCBjYW4gcHV0IHlvdXIgaW52ZXN0bWVudHMgaW4gamVvcGFyZHkuIApDaGVjayBmaXJzdCwgdGhvdWdoLCBiZWNhdXNlIHNvbWUgcHJvdG90eXBlIHBsYWNlcyBtaWdodCBub3QgZG8gaW50ZXJuYWwgcm91dGluZywganVzdCB0aGUgb3V0c2lkZSBlZGdlLkFzIG90aGVycyBoYXZlIHNhaWQsIHlvdSBhYnNvbHV0ZWx5IGdvaW5nIHRvIGJlIGRlc2lnbmluZyB3aXRoIEVEQSBjb21wb25lbnRzLCB0aGV5IGp1c3QgYmUgY29ubmVjdG9ycyBmb3IgbW9kdWxlcyBpbnN0ZWFkIG9mIGluZGl2aWR1YWwgcGFzc2l2ZXMgb3IgSUNzLiBTdGlsbCB3b3JrcyBqdXN0IHRoZSBzYW1lLi4gCkl0IGxpa2UgZHVkZSwgdGhlcmUgYXJlbiBhbnkgTUFHQSBkaWNraGVhZHMgaW4gZG93bnRvd24gQ2hpY2FnbyB0byBiZWdpbiB3aXRoLCBsZXQgYWxvbmUgb25lcyB0aGF0IHdhdGNoIEVtcGlyZS4uIApZb3Ugc3RheSB3aXRoIGZyaWVuZHMgaW4gbG9uZ2VyIHByb2dyYW1zLCBuZXR3b3JrLCBhbmQgImdpdmUgYmFjayIgaW4gYSB3YXkgbW9zdCBhbHVtbmkgKG9mIGJvdGggY2hhcHRlciBhbmQgc2Nob29sKSBuZXZlciBjb3VsZC4gClRoZXJlIGFyZSBwbGVudHkgb2YgSW1wcm92IGV4ZXJjaXNlcyBhbmQgZ2FtZXMgb24gdGhlIGludGVybmV0LCBhbmQgeW91IG1pZ2h0IGV2ZW4gY29uc2lkZXIgc3RhcnRpbmcgb2ZmIGVhY2ggc2Vzc2lvbiB3aXRoIGEgc2hvcnQgaW1wcm92IGdhbWUgd2l0aCB5b3VyIHBsYXllcnMgaWYgdGhleSB3aWxsaW5nLCBqdXN0IHRvIGdldCBldmVyeW9uZSBjcmVhdGl2ZSBqdWljZXMgZmxvd2luZy4gSXQgYWxzbyBhIGdvb2Qgd2F5IHRvIHN0YXJ0IGdldHRpbmcgZXZlcnlvbmUgZm9jdXNlZCBvbiB0aGUgYWN0dWFsIGdhbWUsIGFuZCBhd2F5IGZyb20gY2hhdHRpbmcuLiAKQWxsIG9mIHlvdXIgYnVkZGllcyBhcmUgaGVhZGVkIG92ZXIgZm9yIGEgbmlnaHQgb2YgcG9rZXIgYW5kIGd1eSB0aW1lLiAKVGhlRmlsbUVkaXRvciAgMSBwb2ludCAgc3VibWl0dGVkIDIxIGRheXMgYWdvClRpbWU6IFNpZ251cHMgYmVnaW4gYXQgNXBtIGFuZCBwbGF5IGJlZ2lucyBhdCA2OjMwcG0uCkNvbGxpbnMnIGdyZWF0IGdyYW5kZmF0aGVyLCBEYWJuZXksIGFsc28gdGVzdGlmaWVkIGFuZCBzYWlkIHRoYXQgQ29sbGlucyB3b3VsZCBvZnRlbiBza2lwIHNjaG9vbC5XaGVuIGFza2VkIGJ5IE1hbGtpbnNvbiBpZiBoZSB3YXMgc3RyaWN0IGVub3VnaCB3aXRoIENvbGxpbnMsIERhYm5leSBzYWlkIGhlIHdhcyBub3Qgc3RyaWN0IGVub3VnaCBhbmQgZGlkIG5vdCBkbyBlbm91Z2ggdG8gZ2V0IGhpbSBvZmYgZHJ1Z3MuIApXaGVuIHBlb3BsZSBpbWFnaW5lIHdlbGZhcmUgcmVjaXBpZW50cywgcmVzZWFyY2ggaW5kaWNhdGVzIHRoYXQgdGhleSBvZnRlbiBpbWFnaW5lIGxhenksIEJsYWNrIEFtZXJpY2FucyB3aG8gYXJlIHBlcnBldHVhbGx5IGRlcGVuZGVudCBvbiBnb3Zlcm5tZW50IGFzc2lzdGFuY2UuIEluIHRoZSBwcmVzZW50IHdvcmssIHdlIGludmVzdGlnYXRlIHRoZSBsYXN0IGFzc3VtcHRpb24gcGVycGV0dWFsIGRlcGVuZGVuY2UuIApLb2FsYXMgYXJlIGZ1Y2tpbmcgaG9ycmlibGUgYW5pbWFscy4gCkhleSB5ZWFoLCBpIGFsc28gZG9uJ3Qga25vdyBvZiBhbnkgY2hlYXRzIGJ1dCBpIGRvIGtub3cgaG93IHRoZXkgbGV2ZWxlZCB1cCBzbyBmYXN0LiAKTWFsZ3IgdW4gcmVmdXMgdmlkZW50IGRlIGNlIHRleHRlLCBwYXIgMjIyIHZvaXggcG91ciBldCAyOTMgdm9peCBjb250cmUsIG9uIHBldXQgcmVtYXJxdWVyIHVuIGRidCBwbHVzIHByb3ByZSwgcGV1IG1hcnF1IHBhciBkZXMgZGJvcmRlbWVudHMgdmVyYmF1eC4gU2V1bHMgcXVlbHF1ZXMgZHB1dHMgc2Ugc2Vyb250IGlsbHVzdHJzIHBhciBkZXMgcHJvcG9zIHJ0cm9ncmFkZXMuIAoiSSBkb24ndCByZWFsbHkgZXhwZWN0IGl0IHRvIGJlIGEgdmVyeSB3ZWxjb21pbmcgcmV0dXJuLCIgVGF2YXJlcyB0b2xkIHJlcG9ydGVycyBUaHVyc2RheSBiZWZvcmUgdGhlIE1hcGxlIExlYWZzIGZhY2VkIHRoZSBJc2xhbmRlcnMgYXQgTmFzc2F1IENvbGlzZXVtLiAiSnVzdCBnb2luZyB0byBnbyBvdXQgdGhlcmUgYW5kIHBsYXkgdGhlIGJlc3QgdGhhdCBJIGNhbi4gSnVzdCB3b3JyeSBhYm91dCB3aGF0IEkgY2FuIGNvbnRyb2wuIApEYXMgaXN0IGVpbmUgRnJhZ2UgZGVzIHBlcnNubGljaGVuIEdlc2NobWFja3MgICBvZGVyIHdpZSBkZWluZSBGcmV1bmRlIGRhenUgc3RlaGVuLkluIEJsaW5kIiBTcGllbGVuLCBpc3QgZGllIFBlcnNvbiBsaW5rcyB2b20gRGVhbGVyIGRlciBTbWFsbCBCbGluZCIuIApTYW0sIGJlaW5nIGEgZ2lhbnQgcHVzc3ksIGRvZXNuJ3Qgd2luIGFuZCBpcyBraWxsZWQgb2ZmLiAKV2l0aG91dCBoZWFyaW5nIGV4YWN0bHkgd2hhdCB3YXkgdG8gY29tcGVuc2F0ZSB5b3UgbWVhbnMsIGl0IGlzIGhhcmQgdG8gc2F5IGZvciBzdXJlIHRoYXQgdGhpcyBpcyBhIENCLi4gClNlaXQga25hcHAgZHJlaSBKYWhyZW4gbHVmdCBEaXNuZXlzIE11c2ljYWwgVEFSWkFOIGVyZm9sZ3JlaWNoIGltIFN0YWdlIFRoZWF0ZXIgTmV1ZSBGbG9yYSBpbiBIYW1idXJnLiBXZWl0IGJlciBlaW5lIE1pbGxpb24gQmVzdWNoZXIgbGllZW4gc2ljaCBiZXJlaXRzIHZvbiBkaWVzZXIgU2hvdyBpbiBkZW4gQmFubiB6aWVoZW4uIERpZSBHZXNjaGljaHRlIHNjaGVpbnQgYmVrYW5udDogRGVyIGp1bmdlIE1hbm4sIGRlciBhbHMgV2Fpc2Ugdm9uIEdvcmlsbGFzIGltIGFmcmlrYW5pc2NoZW4gRHNjaHVuZ2VsIGF1Zmdlem9nZW4gd3VyZGUgdW5kIGRpZSBzY2huZSBGb3JzY2hlcnRvY2h0ZXIsIGRpZSBzaWNoIGluIGRlbiBhdHRyYWt0aXZlbiBBZmZlbm1hbm4gdmVybGllYnQuIApUaGF0cyBpZiB0aGV5IHRha2UgaXQgb3V0IG9mIHlvdXIgYm9uZXMsIGlmIHlvdSBkbyB0aGUgUGVyaXBoZXJhbCBzdGVtIGNlbGwgdHJhbnNwbGFudGF0aW9uICh0aGUgb25lIEkgZGlkKSB5b3UgcmVjZWl2ZSBhIHNlcmllcyBvZiBpbmplY3Rpb25zIGZpbGdyYXN0aW0gKGl0IHdhcyA2IGZvciBtZSAgb25lIGVhY2ggZGF5KSB0byBpbmNyZWFzZSB0aGUgcHJvZHVjdGlvbiBvZiB0aGUgImdvb2Qgc3R1ZmYiIHRoZXkgdGFrZSBvdXQgZm9yIHRoZSBkb25hdGlvbi4gSG9uZXN0bHksIHRoYXQgcGFydCB3YXMgdGhlIHdvcnN0LiBJIGhhZCBhIG51cnNlIGNvbWUgdG8gbXkgb2ZmaWNlIHRvIGdpdmUgbWUgdGhlIGluamVjdGlvbnMgc28gaSBuZXZlciBldmVuIG1pc3NlZCB3b3JrIGZvciB0aGF0IHBhcnQsIGJ1dCBpdCBtYWRlIHlvdXIgYm9uZXMgZmVlbCBhIGxpdHRsZSBzb3JlLCBsaWtlIGlmIHlvdSBmZWxsIG9uIHRoZSBpY2Ugb24gYSBjb2xkIGRheSwgYnV0IGFzIHNvb24gYXMgeW91IGRvbmF0ZSwgdGhhdCBzb3JlbmVzcyBnb2VzIGF3YXkuIApEdWRlIEkgZG9uZSBpdCBhbGwuIApFdmVuIGlmIHlvdSBmZWVsIHRoZSBhY2NvbGFkZXMgYXJlIHNvbWV3aGF0IG92ZXJ6ZWFsb3VzLCBubyBvbmUgaXMgc2F5aW5nIEFPQyBpcyBwZXJmZWN0IGFuZCBhYnNvbHV0ZWx5IHdpdGhvdXQgZmF1bHQuIEkgd2FzIGZhbWlsaWFyIHdpdGggbGF0ZXIgYW1iaWVudCBtYXRlcmlhbCBmcm9tIEpvbiBIb3BraW5zLCBidXQgaGFkIG5vdCBoZWFyZCB0aGlzIDIwMDEgYWxidW0uIEZvciBtZSBPcGFsZXNjZW50IGNvbnRhaW5zIGEgY291cGxlIGRpZmZlcmVudCBzdHlsZXMgb3IgYXRtb3NwaGVyZXMuIApJdCdzIHdpZGVseSBrbm93biB0aGF0IGluIGZlbmNpbmcgcGh5c2ljYWwgc2l6ZSBhbmQgc3RyZW5ndGggaXNuJ3QgdGhhdCBiaWcgb2YgYSBmYWN0b3IuIFRoZSBhZHZhbnRhZ2UgaW4gcmVhY2ggaXMgY2VydGFpbmx5IGltcG9ydGFudCBidXQgdGhlIGxpZ2h0IG5hdHVyZSBvZiB0aGUgd2VhcG9ucyBhbmQgc2NvcmluZyBzeXN0ZW0gZG9lc24ndCByZXdhcmQgYWdncmVzc2l2ZSBwaHlzaWNhbCBwbGF5IHN0eWxlLiBUaGluZ3MgdGhhdCB2ZXJ5IG11Y2ggaGFwcGVuIGluIExBUlAgY29tcGV0aXRpb25zIGFuZCAoZnJvbSBteSBpbmRpcmVjdCB0aW1lcyB3YXRjaGluZyBmaWd1cmVzIG9uIFlvdVR1YmUgb2YgdGhlIGxpZ2h0c2FiZXIgY29tcGV0aXRpb25zKSB0aGV5J3JlIHZlcnkgc2ltaWxhciBpbiBob3cgdGhleSdyZSBwbGF5ZWQuLiAKQW4gb2ZmaWNpYWwgd2l0aCB0aGUgR2lybCBHdWlkZXMgcHJhaXNlZCBFbGluYSdzIHN0cmF0ZWd5LgpUaGlzIGluY3JlYXNlcyBjaXJjbGUgdmFyaWV0eS5TaW1pbGFybHksIGNpcmNsZXMgbmVlZCB0byBiZSByZXdvcmtlZCBmb3Igc3BlZWQuIAoiU2hlJ3MgYSBiaWcgdGltZSByZWFkZXIuIFNvIEknZCB0YWtlIGhlciB0byB0aGUgbGlicmFyeSwgYW5kIHNoZSdzIHJlYWRpbmcgcHJlZ25hbmN5IGJvb2tzIGFuZCB0ZWxsaW5nIG1lIHRoaW5ncyBJJ2QgbmV2ZXIgaGVhcmQgb2YsIiBSb3F1ZSBzYWlkLgpBY2NvcmRpbmcgdG8gS3J1Z21hbiwgdGhlIGxhdGVzdCBwbGFuIGlzIGp1c3QgYSBzdWJzaWR5IGZvciBpbnZlc3RvcnMgKHJlYWQ6IHRoZSByaWNoKS4gCk5vdyB0aGUgZm9ybWVyIElwc3dpY2ggc2Nob29sYm95LCB3aG8gZ3JldyB1cCBpbiBCdW5kYW1iYSwgaXMgcGxheWluZyBwb2tlciB3aXRoIHNvbWUgb2YgdGhlIGJpZ2dlc3QgbW92aWUgc3VwZXJzdGFycyBpbiB0aGUgVVNBLgpIZSBkaWRuJ3QgbmVlZCB0byBkdW1wIG1vbmV5IGludG8gYWR2ZXJ0aXNpbmcgbGlrZSBhIGxvdCBvZiBiaWcgYm94IG9mZmljZSwgRCBncmFkZSBmaWxtcyBuZWVkIHRvIGRvIHRvIGdldCBwZW9wbGUgaW50byB0aGUgdGhlYXRlcnMgdG8gbWFrZSBwcm9maXRzIG9uIHRoZWlyIHNoaXRwaWxlIHNjYW0gb2YgYSBtb3ZpZS4gUGVvcGxlIHdhdGNoZWQgaGlzIHdvcmsgYW5kIFRIRU4gZGVjaWRlZCB0byBwYXkgZm9yIGl0IHdpbGxpbmdseSwgZGVzcGl0ZSBpdCBiZWluZyBhdmFpbGFibGUgZm9yIGZyZWUuLiAKSGUgc2FpZCBpdCBtYWRlIGhpbSB1bmNvbWZvcnRhYmxlLiAKMykgU29yYW5hOiAxMzQwIDE0MzUsIDEwMEUvMWgsIHRoZSBmaXJzdCB0aW1lIGluIHRoZSBwYXN0IG9uZSB5ZWFyIGF0IE9hc2UgYXMgTmF0YWxpYS4gCkluIG15IGZhdm9yaXRlIHJvdXRlIHlvdSBzdGF5IGEgdmlyZ2luIGJlY2F1c2UgdGhlIExJIGlzIGN1cnNlZC4gSGUgY2FuIHRvdWNoIG90aGVyIGNyZWF0dXJlcyBvZiB0aGVpciB3b3JsZCBvciBoZSB3aWxsIGV4cGVyaWVuY2UgYW4gaW5tZW5zZSBhbW91bnQgb2YgcGFpbiwgYW5kIGhpcyBtYWdpY2FsIHBvd2VycyB3ZXJlIHRha2VuIGZyb20gaGltIChoZSB3YXMgYSBtYWpvciBhc3MgYW5kIGhlIHdhcyBjdXJzZWQgYnkgdGhlIGtpbmcgaGltc2VsZikuIEFmdGVyIHllYXJzIG9mIHJlc2VhcmNoLCBoZSBmb3VuZCBvdXQgYSB3YXkgb2YgYnJlYWtpbmcgaGlzIGN1cnNlIHdhcyB0byB0b3VjaCBhIHdoaXRlIGJ1dHRlcmZseSAoc3VjaCB0aGluZyBkb2VzbiBleGlzdCBpbiB0aGVpciB3b3JsZCkuIApUaGUgcmVhc29uIHRoZSBpbml0aWF0aXZlIGhhcyBiZWVuIHNvIGVmZmVjdGl2ZSBpcyB0d29mb2xkOiBOb3Qgb25seSBhcmUgc2hvcHBlcnMgZ2l2ZW4gdGhlIGx1eHVyeSBvZiBiZWluZyBhYmxlIHRvIGRyb3Agb2ZmIHRoZWlyIGdpZnRzIGFuZCBzaWRlc3RlcCB0aGUgbWVzcyBvZiB3cmFwcGluZyBwYXBlciBhbmQgcmliYm9uLCB0aGV5J3JlIGFibGUgdG8gc3RheSBjb25uZWN0ZWQgdGhyb3VnaCB0aGUgZW50aXJlIHByb2Nlc3MgYW5kIGFyZSB1cGRhdGVkIGFzIHNvb24gYXMgdGhlaXIgZ2lmdHMgYXJlIHJlYWR5LiAKSWYgeW91IGRpZCB5b3VyIGpvYiByaWdodCwgeW91ciBwYXJ0bmVyIHNob3VsZCBiZSBzdGlsbCBtYWtpbmcgbGl0dGxlIHNxdWlycmVsIG5vaXNlcyBvZiBoYXBwaW5lc3MgYXMgeW91IGxlYXZlLCBhbmQgbWlnaHQgZXZlbiBmYWxsIGFzbGVlcC4gCkl0IGlzIG5vdyBwZXJmZWN0bHkgcmVzcGVjdGFibGUgdG8gYmUgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyIGFuZCBwZXJoYXBzIDIwJSBvZiB0aGUgNDI3IGVudHJpZXMgYXQgQXNwZXJzIGZvciB0aGUgZ3VhcmFudGVlZCA0MDAsMDAwIGd1YXJhbnRlZWQgcHJpemUgcG9vbCBvbiB0aGUgd2Vla2VuZCBJIHdhcyB0aGVyZSB3b3VsZCBlYXJuIGEgbGl2aW5nIHRoYXQgd2F5LiAKSSBsb3ZlIGludGVyYWN0aW5nIHdpdGggc2VjcmV0YXJpZXMgYW5kIEkgbG92ZSB3b3JraW5nIHdpdGggQ0VPcy4gCkl0IGRvZXMgYm9hc3QgY29tbXVuaXRpZXMgZm9yIGV2ZXJ5dGhpbmcgdmlhIFlvdVR1YmVyIGFkcy4gCkJlIG5pY2UuIEJlIHlvdXJzZWxmLiBJIGxvdmUgdGhpcyBsaWZlLiBJIGdldCBvbmUganVzdCBsaWtlIHlvdS4gSSBhbSBwcm91ZCBvZiBteXNlbGYuIFlvdSBoYXZlIG5vdGhpbmcgdG8gY29uZmVzcyBhcyBsb25nIGFzIHlvdSBkb24gYnJhZyBhYm91dCB5b3VyIGdvb2QgaW50ZW50aW9ucyBvciBwdXJwb3NlbHkgcG9pbnQgdGhlbSBvdXQgdG8gaG9sZCBhYm92ZSBhbm90aGVyIG9yIHNob3cgb2ZmLgpTdW4gVGltZXMgd2lsbCBjaGFyZ2UgYSBTdWJzY3JpcHRpb24gZmVlIGF0IHRoZSBjb21tZW5jZW1lbnQgb2YgeW91ciBTdWJzY3JpcHRpb24uIElmIHlvdSBzZWxlY3QgdGhlICJBdXRvUmVuZXciIG9wdGlvbiwgeW91ciBTdWJzY3JpcHRpb24gd2lsbCByZW5ldyBhdXRvbWF0aWNhbGx5IG9uIHRoZSBmaXJzdCBkYXkgb2YgZWFjaCBCaWxsaW5nIFBlcmlvZCB0aGVyZWFmdGVyIHVubGVzcyBhbmQgdW50aWwgeW91IGNhbmNlbCB5b3VyIFN1YnNjcmlwdGlvbiBvciBpdCBpcyB0ZXJtaW5hdGVkIGJ5IFN1biBUaW1lcy4KU2kgbCd0dWRlIHJlcHJlIG4nZXN0IHBhcyB2cmFpbWVudCBwZXJ0aW5lbnRlIGR1IGZhaXQgcXUnZWxsZSBjb25jZXJuYWl0IHVuZSBleHByaW1lbnRhdGlvbiBwYXIgdm9pZSBpbmplY3RhYmxlLCBpbCB2aWVudCBkJ2VuIHRyb3V2ZXIgZCdhdXRyZXMgcXVpIHN1Z2dyZW50IHF1ZSBsYSBwcmlzZSBkZSBjZSBudXRyaW1lbnQgbidlc3QgcGFzICBjb25zZWlsbGVyIHN1ciBkZSBsb25ndWVzIHByaW9kZXMuIApNYXJpamFjIHJlc3RhLCBzYSB2aWUgZHVyYW50LCBub3N0YWxnaXF1ZSBkdSBzdWNjcyBxdSdpbCBhdmFpdCByZW1wb3J0IGdyY2UgIGRlcyBzY25hcmlvcyBkZXN0aW5zICBub3RyZSBqZXVuZXNzZS4gQydlc3QgY2UgcXVpIGV4cGxpcXVlIHF1J2lsIGVudHJlcHJpdCBhdmVjIEplYW4gQ2hhcGVsbGUsIGF1dHJlIG5vc3RhbGdpcXVlIGRlcyBiYW5kZXMgZGVzc2luZXMgcG91ciBlbmZhbnRzLCBsYSByZGl0aW9uIGRlIFNJVFRJTkcgQlVMTCwgZW4gYW90IDE5NzAuIChJbnRlcm1kZSBwZXJzb25uZWwgOiBsb3JzcXVlIGplIHJlbmNvbnRyYWkgSmVhbiBDaGFwZWxsZSwgYW5uZSAxOTY2LCBjZWx1aSBjaSB2b3VsdXQgIHRvdXQgcHJpeCBtJ2VuZm9uY2VyIGRhbnMgbGEgdHRlIGwnaWRlIHNlbG9uIGxhcXVlbGxlIGxhIEJEIGRldmFpdCByZXN0ZXIgY29uZmluZSAgdW4gcHVibGljIGQnZ2Ugc2NvbGFpcmUuIEQnYWlsbGV1cnMsIG0nYXNzbmEgdCdpbCA6IGxlcyByYXJlcyBhZHVsdGVzLCBlbiBwYXJ0aWN1bGllcnMgbGVzIGJpZGFzc2VzIHMnZW5udXlhbnQgIGxhIGNhc2VybmUsIHF1aSBsaXNlbnQgZW5jb3JlIGRlIGxhIGJhbmRlIGRlc3NpbmUgbm91cyBsZXMgdHJhaXRvbnMgZGUgZ3JhbmRzIGNvdWlsbG9ucy4KVm9jIHBvZGVyaWEgam9nYXIgbm8gbWl0IHVtYSBkemlhIGRlIGJpc2NvaXRvcyBjcmVhbSBjaGVlc2U/LiAKSXQgd2lsbCBzdGF5IGluIG15IGVhciB0aHJvdWdoIHdpbmQsIHJhaW4sIGZhbGxpbmcgZG93biwgc25lZXppbmcsIGZhcnRpbmcsIHNtYWNrZWQgaW4gdGhlIGhlYWQsIHBva2VkIGluIHRoZSBleWVzLCBwbGFuZSBmbHlpbmcgb3Zlciwgc25vdyBjb21pbmcgZG93biwgZHJvcHBpbmcgd2F0ZXIgYm90dGxlLCBwaWNraW5nIHVwIHdhdGVyIGJvdHRsZS4gWW91IGdldCB0aGUgcG9pbnQuIEkgaGF2ZSBhIHNtYWxsIHN0b2NrIHBpbGUgb2YgdGhlbS4gClRoZW4gdGhlcmUgaXMgb2Z0ZW4gYSByYWNrIHNvbWV3aGVyZSBpbiB0aGUgU3BhIHdoZXJlIHlvdSBjYW4gcHV0IGl0LiAKVGhlIHNlbmlvciBBbGwgTG9uZyBJc2xhbmQgc2VsZWN0aW9uIHRoaXMgc3ByaW5nIGFsc28gZWFybmVkIGhlciBHaXJsIFNjb3V0IEdvbGQgQXdhcmQgZm9yIGRldmVsb3BpbmcgYSBwbGF0Zm9ybSB0byBleHBvc2UgbG9jYWwgZm91cnRoICBhbmQgZmlmdGggZ3JhZGVycyB0byBnb2xmLiBTaGUgaGVsZCBjbGluaWNzIGFuZCB3b3Jrc2hvcHMgYXQgdGhlIENpdHkgb2YgR2xlbiBDb3ZlIGdyZWVuIGFuZCB0aGUgR2xlbiBDb3ZlIEdvbGYgQ291cnNlLCB3aGVyZSBzaGUgZmlyc3QgcGlja2VkIHVwIGEgc2V0IG9mIGlyb25zIGF0IGFnZSAxMi4KTmV3IHllYXIgZXZlIGFib3V0IDUgeWVhcnMgYWdvLiBJIHdhcyB1cCBhYm91dCAxNjAwIGZyb20gcGxheWluZyBwb2tlciBzbyBhYm91dCA1IG1pbnV0ZXMgYmVmb3JlIG1pZG5pZ2h0IGkgZGVjaWRlIGkgZ29pbmcgdG8gcHV0IDEwMCBvbiBiYW5rZXIgb24gdGhlIGJhY2NhcmF0IHRhYmxlIGF0IG1pZG5pZ2h0LiAKVGhpcyBpcyBhbHNvIHdoZXJlIHBpenphIGdhdGUgdGllcyBpbiB3aXRoIHBlZG8gZ2F0ZSBhbmQgaGlnaGVyIHVwIHRoZSBJbGx1bWluYXRpIChvciBzdWNoKSBhbmQgZXZlbiBoaWdoZXIgdXAgdGhlIG90aGVyIGVudGl0aWVzIHJ1bGluZyB0aGlzIHdvcmxkLiBJdCBhbGwgaXMgbWFraW5nIHVzZSBvZiB0aGUgc2FtZSBuZWdhdGl2ZSBlbmVyZ3kgbGlrZSB0aGF0IGlzIGhhcnZlc3RlZCBpbiB0aGUgb2NjdWx0IHJpdHVhbHMgd2hlcmUgdGhleSBicmluZyBhIHZpY3RpbSB0byBhIHN0YXRlIG9mIHVsdGltYXRlIGZlYXIgc28gdGhlIG5lZ2F0aXZlIGVuZXJneSBpbiB0aGVtIGlzIG1heGVkIG91dC4gCkFsc28gaGFzIHRoZSBzaWRlIGVmZmVjdCBvZiBwdXR0aW5nIHlvdXIgbWFycmlhZ2UgdGhyb3VnaCB0aGUgdGVzdHMgYmVmb3JlIHlvdSBoYXZlIGEga2lkLCBzbyB0aGF0IGtpZCBkb2VzbiBncm93IHVwIHdpdGggZGl2b3JjZWQgcGFyZW50cy5IYXZlIHlvdXIgMiBraWRzIGF0IDM1IGFuZCAzNy4gClRoZSBuZXh0IHRoaW5nIHlvdSBrbm93LCBoZSBzYXlzIGdvIG91dHNpZGUsIHVzZXMgdGhlIE4gd29yZCwgYW5kIGFsbCB0aGlzIG90aGVyIGNyYXAgSGUganVzdCBleHBsb2RlZC4gTm90aGluZy4gSGUgaGFkIGJlZW4gb24gaGlzIHBob25lIHRoZSB3aG9sZSB0aW1lLCBzbyBJIHRvbGQgdGhlIGRlYWxlciwgY29udHJvbCB0aGUgZ2FtZS4gCkkgb25seSBoYXZlIERvb20gMiBhbmQgVGVycmFyaWEgb24gU3RlYW0gYnV0IEkgc3VuayBhbG1vc3QgYSBodW5kcmVkIGhvdXJzIGludG8gaXQgaW4gbGlrZSB0d28gbW9udGhzIGFuZCBJIGJhcmVseSBzY3JhdGNoZWQgdGhlIHN1cmZhY2UuIEkgaGF0ZWQgTWluZWNyYWZ0IHdoZW4gSSBwbGF5ZWQgaXQgYnV0IHRoaXMgZ2FtZSBpcyBzbyBtdWNoIGRpZmZlcmVudCB0byBtZS4uIApPbmxpbmUgZ2FtYmxpbmcgaXMgYWNjZXNzaWJsZSBhbmQgc2VlbWluZ2x5IGFub255bW91cy4gCkhUTUwgYW5kIHJlZ2V4IGdvIHRvZ2V0aGVyIGxpa2UgbG92ZSwgbWFycmlhZ2UsIGFuZCByaXR1YWwgaW5mYW50aWNpZGUuIFRoZSBjYW5ub3QgaG9sZCBpdCBpcyB0b28gbGF0ZS4gCkRlYmF0ZSBvdmVyLi4gCkVpdGhlciBJIHN0aWNrIGEgYnVuY2ggb2YgZnJvemVuIGZpbGxldHMgaW4gdG9tYXRvIHNhdWNlIGFuZCBzZXJ2ZSBvdmVyIHJpY2UgZnJvbSB0aGUgcmljZSBjb29rZXIsIG9yIGJvaWxlZCBwb3RhdG9lcyBpZiBJIGZlZWxpbmcgY2hhcml0YWJsZSwgb3IgaXQgZmlzaCBzdGlja3MuIApXYXJyZW4gaXNuIGJyZWFraW5nIG5ldyBncm91bmQsIHNoZSBpc24gZXZlbiByZWFsbHkgdGFsa2luZyBhYm91dCBhbnkgbmV3IGxhd3MuIApZb3UnbGwgYmUgYWJsZSB0byB1c2UgdGhpcyB0byB5b3VyIGFkdmFudGFnZSBhbmQgbWF4aW1pc2UgeW91ciBwcm9maXRzIGJ5IGludml0aW5nIHRoZW0gdG8gYmV0IGFnYWluc3QgeW91ciBzdHJvbmcgaGFuZHMuLiAKVGhlcmUgdmVyeSBsaW1pdGVkIG92ZXJzaWdodCBhbmQgdGhleSBzd2VlcCBhIGxvdCB1bmRlciB0aGUgcnVnIGJlY2F1c2UgdGhleSBjYW4uIApCb3N0b24gYmVnYW4gdGhlIHRoaXJkIG9uIGEgNyAyIHJ1biBidXQgVG9yb250byByZXBsaWVkIHdpdGggYSAxMiAyIHJ1biBvZiBpdHMgb3duLCBwdW5jdHVhdGVkIGJ5IGEgU2lha2FtIHN0ZWFsIGFuZCBkdW5rLCB0byBnaXZlIHRoZSBSYXB0b3JzIGFuIDg4IDY0IGVkZ2UuIFNpYWthbSB0b29rIHRoZSBiYWxsIG9mZiBhIGJhZCBwYXNzIGZyb20gTW9ycmlzIGFuZCB3ZW50IGNvYXN0IHRvIGNvYXN0IGJlZm9yZSBlYXNpbHkgZHJpbGxpbmcgdGhlIGJhc2tldC4uIApUaGlzIG1hbidzIG5hbWUgd2FzIEFsYnVzIER1bWJsZWRvcmUiLiAKSXQgYWxzbyBiZWluZyBkaWFnbm9zZWQgaW4gcGVvcGxlIGFzIG9sZCBhcyA3MCB3aG8gaGF2ZSBlYXRlbiBnbHV0ZW4gc2FmZWx5IGFsbCB0aGVpciBsaXZlcy5hcmVuIGJvcm4gd2l0aCB0aGlzLiBTb21ldGhpbmcgdHJpZ2dlcnMgaXQgYW5kIHdpdGggdGhpcyBkcmFtYXRpYyByaXNlIGluIGFsbCBhZ2VzLCBpdCBtdXN0IGJlIHNvbWV0aGluZyBwZXJ2YXNpdmUgaW4gdGhlIGVudmlyb25tZW50LCBzYXlzIEpvc2VwaCBBLiBNdXJyYXksIGEgZ2FzdHJvZW50ZXJvbG9naXN0IGF0IHRoZSBNYXlvIENsaW5pYyBpbiBSb2NoZXN0ZXIsIE1pbm4uT25lIHBvc3NpYmxlIGN1bHByaXQ6IGFncmljdWx0dXJhbCBjaGFuZ2VzIHRvIHdoZWF0IHRoYXQgaGF2ZSBib29zdGVkIGl0cyBwcm90ZWluIGNvbnRlbnQuR2x1dGVuIHNlbnNpdGl2aXR5LCBhbHNvIGtub3duIGFzIGdsdXRlbiBpbnRvbGVyYW5jZSwgaXMgbXVjaCBtb3JlIHZhZ3VlLlNvbWUgZXhwZXJ0cyB0aGluayBhcyBtYW55IGFzIDEgaW4gMjAgQW1lcmljYW5zIG1heSBoYXZlIHNvbWUgZm9ybSBvZiBpdCwgYnV0IHRoZXJlIGlzIG5vIHRlc3Qgb3IgZGVmaW5lZCBzZXQgb2Ygc3ltcHRvbXMuVGhlIG1vc3QgY29tbW9uIGFyZSBJQlMgbGlrZSBzdG9tYWNoIHByb2JsZW1zLCBoZWFkYWNoZXMsIGZhdGlndWUsIG51bWJuZXNzIGFuZCBkZXByZXNzaW9uLCBidXQgbW9yZSB0aGFuIDEwMCBzeW1wdG9tcyBoYXZlIGJlZW4gbG9vc2VseSBsaW5rZWQgdG8gZ2x1dGVuIGludGFrZSwgd2hpY2ggaXMgd2h5IGl0IGhhcyBiZWVuIHNvIGRpZmZpY3VsdCB0byBzdHVkeS4gClVuZm9ydHVuYXRlbHkgZHVlIHRvIHNjaGVkdWxpbmcgYW5kIGxhY2sgb2YgdHJhbnNwb3J0YXRpb24sIHBsYXlkYXRlcyBhcmUgaGFyZCB0byBjb29yZGluYXRlIGFuZCBJIGtub3cgdGhhdCBhIGh1Z2UgZmFjdG9yLiBXZSBjb3VsZCBvbmx5IGhhdmUgcGVvcGxlIG92ZXIgb24gYSB3ZWVrbmlnaHQuIFdlIG1ldCBzb21lIHBhcmVudHMgYXQgZmV3IGV2ZW50cyBhbmQgYXR0ZW1wdGVkIHRvIG1ha2UgY29udmVyc2F0aW9uLCBkaWRuIGV4YWN0bHkgaGF2ZSB0cm91YmxlLiAKT3VyIHJlcG9ydGVycyBoYXZlIGNoZXJyeSBwaWNrZWQgdGhlIGJlc3QgZXZlbnRzIHRvIGhlbHAgeW91IHNlZSBvZmYgMjAxMyBhbmQgc2luZyBpbiAyMDE0Li4gCk91dGxvb2sgaWxsdXN0cmF0ZXMgdGhhdCB0aGUgbGluZ2VyaWUgc2FsZXMgc3RydWdnbGUgd2lsbCBwZXJzaXN0IHVudGlsIHRoZSByZXRhaWxlciBmaW5kcyBhIHdheSB0byByZWNvbm5lY3Qgd2l0aCBzaG9wcGVycyBvbiBwcmljZSwgcHJvZHVjdCBhbmQgaW1hZ2UsIEJsb29tYmVyZyBJbnRlbGxpZ2VuY2UgYW5hbHlzdHMgUG9vbmFtIEdveWFsIGFuZCBNb3JnYW4gVGFycmFudCB3cm90ZSBpbiBhIG5vdGUuIApMYWR5cXVpM3Rib3R0b20gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KVGhlIEJyYWR5IEJ1bmNoIEFubiBCLiBEYXZpcywgc2VlbiBoZXJlIGxlZnQgYXMgQWxpY2Ugb24gIlRoZSBCcmFkeSBCdW5jaCIgYW5kIHJpZ2h0LCBhdHRlbmRpbmcgdGhlIFRWIExhbmQgQXdhcmRzIGluIFNhbnRhIE1vbmljYSwgQ2FsaWYuIApJc3JhZWxpcyBjYW4gaW5jcmVhc2UgdGhlaXIgbWVkaWNhbCBjb3ZlcmFnZSBhbmQgaW1wcm92ZSB0aGVpciBvcHRpb25zIGJ5IHB1cmNoYXNpbmcgcHJpdmF0ZSBoZWFsdGggaW5zdXJhbmNlLkVkdWNhdGlvbiBpbiBJc3JhZWwgcmVmZXJzIHRvIHRoZSBjb21wcmVoZW5zaXZlIGVkdWNhdGlvbiBzeXN0ZW0gb2YgSXNyYWVsLiAKSGUgc2FpZCB0byBvdXIgY2hpbGRyZW4uIApBcmVhIGhhcyBhIGhpZ2ggcmF0ZSBvZiBjYW5jZXIsIHNhaWQgTHV0eiwgd2hvIGlzIHRoZSBjaGllZiBvZiBwbGFzdGljIHN1cmdlcnkgYXQgV1JILgpJbCBleGlzdGUgZ2FsZW1lbnQgdW5lIHVuaXQgc3BjaWFsaXNlIGRlIGxhIFByZmVjdHVyZSBkZSBQb2xpY2UgZHBlbmRhbnQgZGUgbGEgRGlyZWN0aW9uIGRlcyBUcmFuc3BvcnRzIGV0IGRlIGxhIFByb3RlY3Rpb24gZHUgUHVibGljIGFwcGVsZSBCdXJlYXUgZGVzIEFjdGlvbnMgQ29udHJlIExlcyBOdWlzYW5jZXMgcXVpIGRpbGlnZW50ZXJhIHVuIGluc3BlY3RldXIgZGUgc2FsdWJyaXQuIFZvdXMgcG91dmV6IGxlcyBzYWlzaXIgIGwnYWRyZXNzZSBzdWl2YW50ZSA6IDEyLzE0IHF1YWkgZGUgR2VzdnJlcyA3NTE5NSBQYXJpcyBDZWRleCAwNC4uIApJZiBJIHdlcmUgdG8gYmUgc3VwZXIgYmFkLCBJIHdvdWxkIGxvc2UgdGhlIG1ham9yaXR5IG9mIG15IG1hdGNoZXMuIElmIEkgZ29vZCwgSSB3aW4gaW5zdGVhZC4gVGhlIGtleSBoZXJlIGlzIHRoYXQgYW4gYXZlcmFnZSBwbGF5ZXIgd2lucyA1MCUgb2YgdGhlIHRpbWUuIApQbGFzbWEgZGlzdHJpYnV0ZXMgdGhlIHN1YnN0YW5jZXMgaXQgY29udGFpbnMgYXMgaXQgY2lyY3VsYXRlcyB0aHJvdWdob3V0IHRoZSBib2R5Li4gCkhvd2V2ZXIgd2l0aCBhbiBpbmFwcHJvcHJpYXRlIGFtb3VudCBvZiBhbGNvaG9sIGluIG15IHN5c3RlbSwgSSB3YXMgcmVsYXRpdmVseSB1bmFmZmVjdGVkIGJ5IHRoZSBmZWFyIG9mIGl0IGFsbC4gCihzb21lIHNlcmlvdXNseSBGIHVwIHNoaXQpLiAKVGhlIHRlZXRoIGdyaXR0aW5nIHRoaW5nIGxlbmRzIG1lIHRvIGJlbGlldmUgaXQgd2FzIGF0IGxlYXN0IHRvbyBtdWNoIHByZXNzdXJlLi4gClRoZSBvcGVuIGJldGEgb2YgRGl2aXNpb24gMiB3YXMgZ3JlYXQgYnV0IEkgYWxzbyBoYWQgYSBsb3Qgb2YgZnVuIGluIEFudGhlbSBmb3IgYXJvdW5kIDM1IGhvdXJzLiAKQ2Ugbidlc3QgcGFzIG1vaSBxdWkgdmFpcyBwcmVuZHJlIGxhIHJlc3BvbnNhYmlsaXQgIHZvdHJlIHBsYWNlLkplIHBldXggYWlkZXIgIGZhaXJlIGxlIHBvaW50IHN1ciBsZSBwbGFuIHBzeWNoaXF1ZSBwb3VyIGxlIHJlc3RlIGMnZXN0IHBsdXMgZGxpY2F0LkxlIHByb2R1aXQgaW5kaXF1IHBsdXMgaGF1dCBuJ2VzdCBwYXMgaW5jb250b3VybmFibGUsIGNlIHNlcmFpdCBwbHV0dCBwb3VyIGxlcyBjYXMgZHNlc3Bycy4gClNvIEFjZSwgUXVlZW4sIFF1ZWVuIHdhcyBvbiB0aGUgdGFibGUgYW5kIHRoZSBBc2lhbiBnaXJsIGhhZCBBY2UgUXVlZW4gaW4gaGFuZCBtZWFuaW5nIHRoYXQgc2hlIGhhZCBhIGZ1bGwgaG91c2UgKDMgb2Ygb25lIHRoaW5nLCAyIG9mIGFub3RoZXIpIGJ5IGhhdmluZyAzIHF1ZWVucyBhbmQgMiBhY2VzLiBUaGUgb3RoZXIgZ3V5IGhhZCAyIGFjZXMgaW4gaGlzIGhhbmQsIHdoaWNoIG1lYW50IHRoYXQgaGUgaGFkIGEgZnVsbCBob3VzZSBvZiAzIGFjZXMgYW5kIDIgcXVlZW5zIChhcyB0aGUgMiBxdWVlbnMgd2VyZSBhbHJlYWR5IG9uIHRoZSB0YWJsZSksIHNvIGhlIGhhZCBhIGJldHRlciBmdWxsIGhvdXNlIHRoYW4gc2hlIGRpZC4gQSBmdWxsIGhvdXNlIGlzIG9uZSBvZiB0aGUgYmVzdCBoYW5kcyBpbiBQb2tlci4KV2UgaGF2ZSBhbHNvIG5vdGVkIHlvdXIga2luZCBncmFkaW5nIG9uIGFyZWFzIHdlIGhhdmUgdG8gaW1wcm92ZSBvbiBhbmQgb24gd2hpY2ggd2UgY2FuIGNlcnRhaW5seSBkbyBiZXR0ZXIuIFdlIGFzc3VyZSB5b3UgdGhhdCB3ZSB3aWxsIGxvb2sgaW50byB0aGF0IG9uIHByaW9yaXR5IGFuZCByZXN0IGFzc3VyZWQgZm9yIHN1cmUuIApUaGlzIG1vbnRoLCBhIGNvbW1pdHRlZSBpbiB0aGUgSG91c2Ugb2YgUmVwcmVzZW50YXRpdmVzLCBsZWQgYnkgcHJvbWluZW50IGNvbmdyZXNzbWFuIEphc29uIENoYWZmZXR6IChSIFV0YWgpLCBoZWxkIGEgaGVhcmluZyBhYm91dCBvbmxpbmUgZ2FtaW5nLiAKOTcgOTkpIiBCb3JuIFRoaXMgV2F5IChEZWx1eGUgQWxidW0gQm9udXNTb25ncykiIEJsYWNrIEplc3VzICsgQW1lbiBGYXNoaW9uLCBGYXNoaW9uIG9mIEhpcyBMb3ZlLCBUaGVRdWVlbi4gCkV2ZW4gZ2F2ZSBtZSAkMTAgZnJlZSB0byBzaWduIHVwIHdpdGggQUNSLiBJZiBJIHJlbWVtYmVyIGNvcnJlY3RseSBoZSBkaXNjb3VyYWdlcyBwZW9wbGUgZnJvbSBwbGF5aW5nIG9uIEdsb2JhbFBva2VyIGFuZCBJIHBsYXkgdGhlcmUgYWJvdXQgOTglIG9mIHRoZSB0aW1lLiBUaGUgd2Vic2l0ZSBpcyBncmVhdCB3aXRoIHNob3dpbmcgcGVvcGxlIGhvdyB0aGV5IGNhbiBnZXQgaW50byByZWFsIG1vbmV5IHBva2VyIGFuZCBoZSBoYXMgaGVscGVkIG1lIGluIHRoZSBwYXN0LiAKSW4gZGVyIEVzc2VuZXIgSW5uZW5zdGFkdCBnaWJ0IGVzIGVpbiBob2hlcyBOYWNoZnJhZ2UgUG90ZW56aWFsIGZyIGJlcm5hY2h0dW5nZW4gaW4gZGllc2VtIFNlZ21lbnQuIERhcyBoYWJlbiBNYXJrdHVudGVyc3VjaHVuZ2VuIGVyZ2ViZW4iLCBiZXRvbnRlIEdCSSBWb3JzdGFuZCBSZWluZXIgTml0dGthLiBEYWZyIHNvcmd0ZW4gZXR3YSBkaWUgaW4gZGVyIE5oZSBhbmdlc2llZGVsdGVuIEZpcm1lbiB3aWUgVGh5c3NlbktydXBwLCBkaWUgZ2VyYWRlIGVudHN0ZWhlbmRlIG5ldWUgWmVudHJhbGUgZGVyIEJhaG4gVG9jaHRlciBTY2hlbmtlciBzb3dpZSB2aWVsZSBGaXJtZW4gaW4gZGVtIGVyZm9sZ3JlaWNoZW4gQXJiZWl0ZW4gdW5kIFdvaG5lbiBQcm9qZWt0ICJHcm5lIE1pdHRlIEVzc2VuIi4gClVuZW1wbG95bWVudCBsZWFwdCBmcm9tIDQuNSB0byAxNCBwZXJjZW50IGluIHRocmVlIHllYXJzIGFzIGNvbnN0cnVjdGlvbiBwcm9qZWN0cyBncm91bmQgdG8gYSBoYWx0LiAKVHJlYXN1cmUgaHVudGVycyBhcmUgZnJpZW5kbHkgZm9sa3M7IGxpc3RlbiwgYXNrIHF1ZXN0aW9ucyBhbmQgY2xvc2VseSB3YXRjaCBzb21lb25lIHdobyBoYXMgZXhwZXJpZW5jZS4gQ2hlY2sgYXJvdW5kIGluIHlvdXIgbG9jYWwgYXJlYSBmb3IgYSBtZXRhbCBkZXRlY3Rpbmcgb3IgdHJlYXN1cmUgaHVudGluZyBjbHViIG9yIGdyb3VwLiBZb3Ugd2lsbCBsZWFybiBtdWNoIG1vcmUgYW5kIGluIGxlc3MgdGltZSBmcm9tIG90aGVyIG1lbWJlcnMgdGhhbiB5b3Ugd2lsbCBnb2luZyBpbnRvIGl0IGFsb25lLiAKWW91IHNlZW0gbGlrZSBhIGxvdmVseSBwZXJzb24uIApJa3Rpbm9zIGFuZCBLYWxsaWtyYXRlcyBidWlsdCB0aGUgUGFydGhlbm9uIG9uIHRoZSBBY3JvcG9saXMgaW4gQXRoZW5zLiBUaGUgc2N1bHB0b3IgUGhpZGlhcyBmYXNoaW9uZWQgdGhlIDEyIG1ldHJlIHRhbGwgWmV1cyBzdGF0dWUgaW4gT2x5bXBpYTMsIFBvbHlrbGVpdG9zIGNyYWZ0ZWQgYnJvbnplIHN0YXR1ZXMgYXMgd2VsbCBhcyBhIGRlc2NyaXB0aW9uIG9mIHBlcmZlY3QgbWFsZSBwcm9wb3J0aW9ucyBhbmQgUHJheGl0ZWxlcyBmb3JtZWQgbnVtZXJvdXMgbWFyYmxlIHN0YXR1ZXMgb2YgZ29kcy4uIApSZXNpZGVudGlhbCBwcm9ncmFtcyBpbiBDYW5hZGEgY29zdCBzbGlnaHRseSBsZXNzLiBCZWxsd29vZCBIZWFsdGggU2VydmljZXMgaW4gVG9yb250byBpcyAkMTcsMzM5IGZvciBhIDQuNSB3ZWVrIHByb2dyYW0gKHRoaXMgaW5jbHVkZXMgZmFtaWx5IHByb2dyYW1taW5nIGFuZCBvbmUgeWVhciBvZiBhZnRlcmNhcmUgZm9yIHBhdGllbnRzKS4gCk9kZGx5IGVub3VnaCwgYXMgZmFyIGFzIEkgZXZlciBrbmV3LCBzaGUgbmV2ZXIgd2FzIHJlcG9ydGVkLCBhbmQgd2FzIGEgbGljZW5zZWQgbWFzc2FnZSB0aGVyYXBpc3QuIFRoZXkgd2VyZSB0aGUgb25seSBvbmVzIHdpdGggbG9ja3Mgb24gdGhlaXIgZG9vcnMuIFNoZSB3b3VsZCB3ZWFyIGpld2VsZWQgcGx1Z3MgYW5kIHRlbGwgdXMgYWJvdXQgaG93IG11Y2ggaXQgdHVybmVkIGhlciBvbiBrbm93aW5nIHRoZXkgd2VyZW4gYXdhcmUsIG9yIHRoZXkgd2VyZSBhd2FyZSwgZWN0LiAKMjU0MDYwQXBwbGljYXRpb24gcmVxdWVzdHMgc3RhdGUgZ3JhbnQgZnVuZGluZ0F0IHRoZWlyIG1lZXRpbmcgb24gTW9uZGF5IG5pZ2h0LCB0aGUgSHVtYm9sZHQgQ2l0eSBDb3VuY2lsIGdhdmUgdW5hbmltb3VzIGFwcHJvdmFsIHRvIGEgcmVzb2x1dGlvbiBzdXBwb3J0aW5nIGFuIGFwcGxpY2F0aW9uIGZvciBmdW5kaW5nIHRocm91Z2ggdGhlIElvd2EgR3JlYXQgUGxhY2VzIHByb2dyYW0uVGhlIGFwcGxpY2F0aW9uIHJlcXVlc3RzIHN0YXRlIGdyYW50IGZ1bmRpbmcgaW4gdGhlIGFtb3VudCBvZiAkOTY0LDIyMCB0byBsZXZlcmFnZSB0b3dhcmRzICQxMC41IG1pbGxpb24gaW4gcHJvamVjdHMuT25seSB0aHJlZSBwcm9qZWN0cyB3ZXJlIHNlbGVjdGVkIGxhc3QgeWVhciBhbmQgSHVtYm9sZHQgQ291bnR5J3MgYXBwbGljYXRpb24gd2FzIG5vdCBvbmUgb2YgdGhlIHRocmVlLiAKVmFuIE5hbWUgKDIwMDgpOyBVbmRlciBhIEdyYXZleWFyZCBTa3kgYnkgSm9obiBSaW5nbyAoMjAxMykuIEVkaXRvcmlhbCBSZXZpZXdzLiBXaXRoIG92ZXIgZWlnaHQgbWlsbGlvbiBjb3BpZXMgb2YgaGlzIGJvb2tzIGluIHByaW50IGFuZCAuIApKZXN1cyB3YXMgc2F5aW5nLCAiSWYgeW91IHdhbnQgdG8ga25vdyB0aGUgYW5zd2VyIHRvIHRoZSBkaXZvcmNlIHF1ZXN0aW9uLCB0aGVuIGxldCdzIGxvb2sgYXQgR29kJ3Mgb3JpZ2luYWwgcGxhbiBmb3IgbWFycmlhZ2UuIAoyIGRheXMgYWdvICsgQnkgVGVycnkgUGx1dG8sIFRoZSBQbGFpbiBEZWFsZXJDbGV2ZWxhbmQgSW5kaWFucywgYmFzZWJhbGwgYW5kICdzdHVwaWQgbW9uZXknICAgVGVycnkgUGx1dG8gQ2xldmVsYW5kIEluZGlhbnMsIGJhc2ViYWxsIGFuZCAnc3R1cGlkIG1vbmV5JyAgIFRlcnJ5IFBsdXRvIEJpZyB0aW1lIGZyZWUgYWdlbnRzIGFyZSBzaWduaW5nICQzMDAgbWlsbGlvbiBkb2xsYXIgZGVhbHMuIEFuZCB0aGV5IHJ1biBhdCBhdCBsZWFzdCAxMCB5ZWFycy4gSG93IGNhbiB0aGF0IGJlIHNtYXJ0PzMgZGF5cyBhZ28gKyBCeSBUZXJyeSBQbHV0bywgVGhlIFBsYWluIERlYWxlckNsZXZlbGFuZCBCcm93bnMgU2NyaWJibGVzOiBUcmFkaW5nIER1a2UgSm9obnNvbj8gQWR2aWNlIGZvciBCcmVzaGFkIFBlcnJpbWFuICAgVGVycnkgUGx1dG8gQ2xldmVsYW5kIEJyb3ducyBTY3JpYmJsZXM6IFRyYWRpbmcgRHVrZSBKb2huc29uPyBBZHZpY2UgZm9yIEJyZXNoYWQgUGVycmltYW4gICBUZXJyeSBQbHV0byBUaGVyZSBhcmUgcmVwb3J0cyBvZiBzZXZlcmFsIHRlYW1zIGJlaW5nIGludGVyZXN0ZWQgaW4gdHJhZGluZyBmb3IgRHVrZSBKb2huc29uLiAKVGhlcmUncyBhIGRyZWFtbGlrZSBlbGVtZW50IHRvIHRoZSBzdG9yeSBhcyB0aGUgY2FtZXJhIGdhemVzIG92ZXIgd2lkZSBvcGVuIHNwYWNlcyB0aGF0IGFsbHVkZSB0byBNYXJrIFR3YWluIG5vdmVscy4gCkFmdGVyIHNpbmdpbmcgYSBtZWRsZXkgb2YgIkdvZCBCbGVzcyBBbWVyaWNhIiBhbmQgIlRoaXMgTGFuZCBpcyBZb3VyIExhbmQiIHdpdGggaHVuZHJlZHMgb2YgZHJvbmVzIGNyZWF0aW5nIGFuIEFtZXJpY2FuIGZsYWcgYmVoaW5kIGhlciwgTGFkeSBHYWdhIGFwcGVhcmVkIHRvIGp1bXAgZnJvbSB0aGUgcm9vZiBvZiBOUkcgU3RhZGl1bSBpbiBIb3VzdG9uLiBTaGUgdGhlbiBmbG9hdGVkIGludG8gdGhlIHN0YWRpdW0gYW5kIHN0YXJ0ZWQgc2luZ2luZyAiUG9rZXIgRmFjZS4iIFRoZSB3aG9sZSBwZXJmb3JtYW5jZSB3YXMgaW1wcmVzc2l2ZSwgYnV0IHNoZSBkaWRuJ3QgYWN0dWFsbHkganVtcCBmcm9tIHRoZSByb29mLiBUaGUgYmVnaW5uaW5nIHNlZ21lbnQgd2l0aCB0aGUgZHJvbmVzIHdhcyBwcmVyZWNvcmRlZCwgYW5kIGR1cmluZyB0aGUgbGl2ZSBzZXQsIHNoZSB3YXMgbG93ZXJlZCBkb3duIGZyb20gdGhlIHJvb2YgYnkgaGFybmVzc2VzLgpUaGUgVUNMQSBWb2x1bnRlZXIgQ2VudGVyIG1haW50YWlucyBhY3RpdmUgc29jaWFsIG1lZGlhIGFjY291bnRzIHdpdGggdGhvdXNhbmRzIG9mIGZvbGxvd2VycywgaW5jbHVkaW5nIGN1cnJlbnQgc3R1ZGVudHMsIGFsdW1uaSwgZmFjdWx0eSwgc3RhZmYsIGFuZCBVQ0xBIGNvbW11bml0eSBtZW1iZXJzLiBOb24gcHJvZml0cyBhbmQgc3R1ZGVudCBvcmdhbml6YXRpb25zIG1heSB1c2Ugb3VyIHNvY2lhbCBtZWRpYSBwbGF0Zm9ybXMgdG8gcHJvbW90ZSB0aGVpciB2b2x1bnRlZXIgd29yayB0byBvdXIgY29tbXVuaXR5LiBUbyBiZSBmZWF0dXJlZCwgcGxlYXNlIHNlZSB0aGUgbGlzdCBiZWxvdzoKRHVyaW5nIHRoYXQgcGVyaW9kLCB0aGUgZm91bmRhdGlvbiBoYWQgYmVlbiBpbiBvZmZpY2VzIGF0IEV0aWhhZCBTdGFkaXVtLi4gCiA1NSBwb2ludHMgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnb1ZvbHZvLCBhcyBhIGJyYW5kLCBpcyBtYWtpbmcgdGhlIGJlc3QgbG9va2luZyBjYXJzIGluIHRoZSBpbmR1c3RyeSByaWdodCBub3cuIFRoZXkgc2ltcGx5IGRvIG5vdCBtYWtlIGEgYmFkIGxvb2tpbmcgdmVoaWNsZSwgc29tZXRoaW5nIG5vIG90aGVyIG1hbnVmYWN0dXJlciBoYXMgZXZlciBhY2NvbXBsaXNoZWQuSSBnaXZlIFZvbHZvIGNyZWRpdCBmb3Igc3RheWluZyBvdXQgb2YgdGhlIHBlcmZvcm1hbmNlIGdhbWUgICBhbiBhcmVuYSB3aGVyZSB0aGV5IHNpbXBseSBkb24gaGF2ZSB0aGUgcmVzb3VyY2VzIHRvIHdpbi4gSW5zdGVhZCwgdGhleSBwdXQgdGhlaXIgUiBpbnRvIHNhZmV0eSBhbmQgc3R5bGluZyBhbmQgdGhleSBoYXZlIGRvbmUgYSBkYW1uIGdvb2Qgam9iIGF0IGJvdGguVEw7RFI6IElmIHlvdSB3YW50IGEgcGVyZm9ybWFuY2UgdmVoaWNsZSwgVm9sdm8gYWluIHlvdXIgYnJhbmQuIApNeSBodXNiYW5kIGlzIGEgcHJldHR5IG5vbiBjaGFsYW50IGtpbmQgb2YgZ3V5IGFuZCBmb3IgaGlzIGFscmVhZHkgQSBUeXBlIHBlcnNvbmFsaXR5IHdpZmUgdG8gaGF2ZSBhbnhpZXR5IGhhcyBjYXVzZWQgc29tZSBmcmljdGlvbi4gClRoZSBmYWN0IHRoYXQgYW4gaG9uZXN0IHBlcnNvbiB3b24gYmVjYXVzZSB0aGV5IGhhZCBhIGdvb2QgbWVzc2FnZSB3YXMgdGhlIHNob2NrLiBJIHdvdWxkIG5vdCBiZSBzdXJwcmlzZSBpZiB0aGUgcGVvcGxlIHRocmV3IGl0IGFsbCBhd2F5LgpBbHNvLCBpIGxvdmUgdG8gYnVkZ2V0LiBCdXQgaWYgSSBoYWQgdG8gb3BlbiBvbmUgZHJpdmUgYW5kIGxvYWQgYSBzcHJlYWRzaGVldCBqdXN0IHRvIGxvb2sgYXQgdGhlIHJ1bm5pbmcgdG90YWxzLCB5b3UgY2FuIGJldCBJIHdvdWxkIG5vdCBiZSBib3RoZXJpbmcgYnVkZ2V0aW5nIGF0IGFsbC4gTXkgaHVzYmFuZCBrZWVwcyBhIHJ1bm5pbmcgdGFsbHkgb2YgaGlzIGNvbWljIGJvb2tzIGluIGEgc3ByZWFkc2hlZXQgYW5kIGl0IGlzIGEgcGFpbiB0byBvcGVuIGl0IGFuZCBsb2FkIGl0IGFuZCBhZGp1c3QgdGhlIHZpZXcgZXZlcnkgdGltZS4gSSBzdXNwZWN0IHBhcnQgb2YgeW91ciB3aWZlJ3MgcHJvYmxlbSB3aXRoIHRoZSBjdXJyZW50IHN5c3RlbSBpcyB0aGF0IHlvdSBuZWVkIGEgYmV0dGVyIGFuZCBtb3JlIGltbWVkaWF0ZSB3YXkgdG8gcHV0IGluIHRyYW5zYWN0aW9ucyBhbmQgbG9vayBhdCB0aGUgYnVkZ2V0LgpJIHQgY29zdCBtZSAkNTAwMCB0byBkbyBib3RoIGV5ZXMsIGFmdGVyIGEgJDUwMCBkaXNjb3VudCBwbHVzIHRheC4gSSBob25lc3RseSBkb24ndCByZW1lbWJlciB3aGF0IG15IHByZXNjcmlwdGlvbiB3YXMgcHJpb3IgdG8gc3VyZ2VyeSwgYnV0IEkgc3RpbGwgZG9uJ3QgaGF2ZSAyMC8yMCB2aXNpb247IHByZWduYW5jeSBjYW4gYWZmZWN0IHlvdXIgZXllc2lnaHQgc28gSSBoYXZlIHRvIHdhaXQgdW50aWwgSSBnaXZlIGJpcnRoIGJlZm9yZSBJIGtub3cgaWYgSSdsbCBuZWVkIGEgdG91Y2ggdXAgb24gbXkgTEFTSUsgb3Igbm90LiAKQW5kIGZvciBhIHRyYW5zaXRpb24sIGluc3RlYWQgb2YganVzdCBhIGJvcmluZyBjdXQgc3RyYWlnaHQgdG8gYmxhY2ssIG1heWJlIHlvdSBjb3VsZCBoYXZlIGEgbGlnaHRuaW5nIHN0cmlrZSBrbm9jayB0aGUgcG93ZXIgb3V0LCBnaXZpbmcgeW91IGEgZ29vZCBjaGFuY2UgdG8gY3V0Py4gCkRvZXMgdGhpcyBjb3VudCBhcyBnYW1ibGluZz8gWW91J3JlIHRlY2huaWNhbGx5IGJldHRpbmcgcmVhbCBtb25leSBidXQgeW91J3JlIGFsc28gc2ltcGx5IHBheWluZyB0byBwbGF5IGEgZ2FtZSB1c2luZyBhIGRpZmZlcmVudCBtb2RlbC4gCkJ5IFRoZSBBc3NvY2lhdGVkIFByZXNzIFdhbHRlciBGLiAKTGEgam91cm5lIGNvbW1lbmNlICBCYXJicyAocGhvdG8gSi4gUi4gQi4pCkhvbHkgc2hpdCwgZm9yIGEgUElMTE9XIENBU0UsIE9QIGRpZCBub3QgYXNrIGFib3V0IG1hdGVyaWFscyBpbiB2YWluLCB0aGlzIGlzIGhhaXJjYXJlc2NpZW5jZSBpbiBjYXNlIHlvdSBkaWQgbm90IGtub3csIHRoaXMgaXMgYSBxdWVzdGlvbiBhYm91dCB0aGUgc2tpbiBhbmQgaGFpciBmcmljdGlvbiBhZ2FpbnN0IHBpbGxvdyBjYXNlcyBkdXJpbmcgc2xlZXAuClRoYW5rZnVsbHkgSSB3YXMganVzdCBiZWF0ZW4gdXAgYSBiaXQgYnV0IG5vdGhpbmcgdG9vIGJhZC4gCk9uY2UgeW91IGRlY2lkZWQgb24gYSBsYWR5LCB5b3UgYWdyZWUgb24gc2VydmljZSBhbmQgcHJpY2UgKHVzdWFsbHkgdGhlcmUgaXMgYSBiYXNlIHByaWNlIGZvciBiYXNpYyBzZXJ2aWNlIGFuZCBleHRyYXMsIGxpa2UgY3VtbWluZyBvbiBoZXIgb3IgaW4gaGVyIG1vdXRoLCBjb3N0IGV4dHJhKS4gCkV2ZW4gcHV0IGhpbSB1cCBvbiB0aGVpciBUb3AgV2FudGVkIExpc3Qgb24gTWF5IDI4dGggMTk1NiwgYXQgbnVtYmVyIG5pbmV0eSBlaWdodCwgd2hlcmUgaGUgd291bGQgcmVtYWluIGZvciB0d28geWVhcnMuIApBbmQgZGFtYWdlLiAKV2UgZG8gaXQgYmVjYXVzZSBvbmUgaXMgc2ltcGx5IGEgdmFyaWFudCBvZiB0aGUgb3RoZXIsIGFuZCB0aGV5IGFyZSB1c2VkIGluIGEgc3lub255bW91cyBtYW5uZXIuLiAKQSB3ZWxsIGtub3duIE1pZCBDaXR5IGJhciBpcyBmYWNpbmcgbW9yZSB0aGFuICQxMCwwMDAgaW4gZmluZXMgYW5kIGNvdWxkIGxvc2UgaXRzIGxpcXVvciBsaWNlbnNlLiBTdGF0ZSBhbGNvaG9sIGFuZCB0b2JhY2NvIGNvbnRyb2wgYWdlbnRzIHJhaWRlZCB0aGUgYmFyIGFuZCBncmlsbCBvbiBHb3Zlcm5tZW50IFN0cmVldCBrbm93biBhcyAiUGhpbCBCcmFkeSdzIiBmb3IgYWxsZWdlZGx5IGNvbmR1Y3Rpbmcgb25lIG9mIHRob3NlIHBvcHVsYXIgVGV4YXMgSG9sZCAnRW0gdG91cm5hbWVudHMuCk9uY2UgdGhleSBiZWNvbWUgZW50cmVuY2hlZCB0aGV5IGJlIGp1c3QgYW5vdGhlciBDb21jYXN0IG9yIHdvcnNlLlRoZXkgd29uIGJlY29tZSBhbm90aGVyIENvbWNhc3QgYmVjYXVzZSB0aGUgYmFycmllciB0byBlbnRyeSBpbiB0ZWNoIGlzIHNvIGxvdy4gRXZlbiBpZiBGYWNlYm9vayBiZWNhbWUgYSBzb2NpYWwgbWVkaWEgbW9ub3BvbHksIGl0IHdvdWxkIEhBVkUgdG8gY29udGludWUgdG8gYmUgaW5ub3ZhdGl2ZSBhbmQgY2F0ZXIgdG8gaXRzIGN1c3RvbWVycyB3aXRoIGdvb2Qgc2VydmljZSBhdCBsb3cgcHJpY2VzIHNpbmNlIG90aGVyd2lzZSwgYSBuZXcgY29tcGV0aXRvciBmcm9tIGJhc2ljYWxseSBhbnl3aGVyZSAgIHdoZXRoZXIgaXQgYW5vdGhlciBlc3RhYmxpc2hlZCB0ZWNoIGNvbXBhbnkgbGlrZSBHb29nbGUsIHR3byBmb3JtZXIgTWljcm9zb2Z0IGVtcGxveWVlcywgb3Igc29tZSBjb2xsZWdlIGtpZHMgaW4gYSBkb3JtLlRlbGVjb21zIGFyZSBhbiBlbnRpcmVseSBkaWZmZXJlbnQgbWF0dGVyIGZyb20gc29mdHdhcmUgY29tcGFuaWVzLCBhbmQgbm8gb2ZmZW5zZSwgYnV0IEkgc2hvdWxkbiByZWFsbHkgbmVlZCB0byBleHBsYWluIHdoeS4gCkRlYXIgc29uIG9mIEthdGhlcmluZSBCcmltZXIgb2YgSG9yc2VzaG9lIFZhbGxleSwgaGlzIGxhdGUgZmF0aGVyIFdpbGxpYW0gSG95bGFuZCBvZiBUb3JvbnRvIGFuZCBicm90aGVyIG9mIENyYWlnIChQaHlsbGlzKSBCYXJuYXJkLCBLaW1pa28gSG95bGFuZCBKYW1lcywgVGFtaWtvIEhveWxhbmQgYW5kIHRoZWlyIGZhbWlsaWVzLiBBIGdyYXZlc2lkZSBzZXJ2aWNlIHdpbGwgYmUgaGVsZCBhdCBMaXR0bGUgQnJpY2sgQ2VtZXRlcnksIE9ybyBTdGF0aW9uIG9uIFR1ZXNkYXksIE1heSA2dGggYXQgMyBwbS4gQSBSZWNlcHRpb24gd2lsbCBmb2xsb3cgaW4gaGlzIGhvbWUgYXQgNDozMCBwbS4gCkp1bCA2LCAyMDE1IC4gVGl0bGU6IExpdmUgZm9yIFNwZWVkIFMyIEdlbnJlOiByYWNpbmcsZHJpZnRpbmcgU2l6ZTozODIgTUIgT1MgU3VwcG9ydDogV2luZG93cyBYUC92aXN0YS83LzgvOC4xIFB1Ymxpc2hlcjogU2Nhd2VuIFJvYmVydHMsIEVyaWMgQmFpbGV5LiAKQm90dG9tIGxpbmUsIGlmIHRoZSBzdGFtcCBpcyBzb3VuZCBhbmQgbmljZWx5IGNlbnRlcmVkLCB0aGUgY2hlYXBlc3QgdXNlZCB2YXJpZXRpZXMgcmV0YWlsIGZvciBhcm91bmQgJDE1MCBhbmQgbWludCB3aXRoIGZ1bGwgZ3VtIGZvciBhcm91bmQgJDE1MDAgb3IgbW9yZS4gRXh0cmVtZWx5IGZpbmUgY29waWVzIGFyZSB3b3J0aCBtdWNoIG1vcmUuIERlYWxlcnMgb2YgY291cnNlIGJ1eSBmb3IgbXVjaCBsZXNzIHRoYW4gdGhleSBzZWxsIGZvci4gClRoZSBoYXJkIHBhcnQgaXMgc2VwYXJhdGluZyBob3cgbXVjaCBvZiBoaW0gd2FzIGxlZnQgYWZ0ZXIgZmFtZSwgdGhlIGVudGVydGFpbm1lbnQgaW5kdXN0cnksIGdvc3NpcCBjb2x1bW5zLCBhIG1pc3NpbmcgY2hpbGRob29kLCBhbiBhYnVzaXZlIGZhdGhlciBnb3QgZG9uZSB3aXRoIGhpbS4gSGlzIHJlYWxpdHkgYXQgdGhhdCBwb2ludCBjb3VsZCBoYXZlIGJlZW4gc28gZGlzdG9ydGVkIHRoYXQgd2hhdCBoZSB3YXMgZG9pbmcgd2FzIG5vcm1hbC4gVW5mb3J0dW5hdGVseSBub3JtYWwgZm9yIGhpbSB3b3VsZCBiZSBsaWZlIGRlc3Ryb3lpbmcgZm9yIHRoZXNlIGtpZHMuClRoZSBzZXJ2ZXIgaXMgYWxsb3cgdG8gc2VydmUgYWdhaW4uIApUaGFua3MuIFdlIGdyZXcgdXAgaW4gdGhlIHNhbWUgaG91c2UuIApOb3QgYSBodWdlIGJ1eSBpbiBidXQgSSByZW1lbWJlciB0aGF0IGZpcnN0IHBsYWNlIGVuZGVkIHVwIGdldHRpbmcgJDRrIGFuZCBwbGF5aW5nIGNhc2ggbGF0ZXIuIEl0IHdhcyB0aGUgYnViYmxlLCBJIGhhZCBiZWVuIHBsYXlpbmcgcmVsYXRpdmVseSB0aWdodCBhcyB0aGUgYmlnIHN0YWNrIHdhcyBjYWxsaW5nIG9mdGVuIHByZSwgcmVndWxhcmx5IHNob3ZpbmcgYW55IHRvcCBwYWlyIG9yIGJpZyBkcmF3IGFuZCBJIHdhcyBkb2luZyB3ZWxsIHNpcGhvbmluZyBjaGlwcyBmcm9tIG90aGVyIHBsYXllcnMgcmF0aGVyIHRoYW4gZ2V0dGluZyBpbiBiaWcgaGFuZHMgd2l0aCBoaW0uIApNb3N0IHN1Y2Nlc3NmdWwgb3BlcmF0aW9ucyBoYXZlIGEgc3VjY2Vzc2lvbiBwbGFuLiBXaGVuIHRoZSB0aW1lIG5lYXJzIGZvciBhIGxlYWRlciB0byByZXRpcmUsIHRoZSBwZXJzb24gZ3Jvb21lZCB0byB0YWtlIGhpcyBvciBoZXIgcGxhY2Ugc2VpemVzIHRoZSBvcHBvcnR1bml0eSB0byBjYXJyeSB0aGUgZnJhbmNoaXNlIGZvcndhcmQuIApDcmFjayBiYWJ5IGF0aGxldGljIGFzc29jaWF0aW9uIHN0cmVhbWluZ2luc3RtYW5rcyBDbGluaWNhbCBFdGhpY3MsIDh0aCBFZGl0aW9uOiBBIFByYWN0aWNhbCBBcHByb2FjaCB0byBFdGhpY2FsIERlY2lzaW9ucyBpbiBDbGluaWNhbCBNZWRpY2luZSwgOEUgKEEuIApJIHdvdWxkIGhhdmUgdGhvdWdodCB0aGF0IEkgcmVhZGluZyB0aGlzIGZvcnVtIHdvdWxkIGhhdmUgcHV0IG1lIG91dHNpZGUgdGhlICJhbnRpIiBncm91cC4gSSBkZWZpbml0ZWx5IGZvciBhbiBhcm1lZCBzZWxmIGRlZmVuc2UgZm9yIGFueW9uZSB3aG8gd2FudHMgb25lLiBJIGFsc28gZm9yIGFueW9uZSB3aG8gaXNuIG51dHMgaGF2aW5nIHdoYXRldmVyIHRveXMgdGhleSB3YW50LiBGb3IgbXkgcGFydCwgSSB0ZW5kIHRvIHRoaW5rIG1vcmUgb2YgaG9tZSBkZWZlbnNlIGFuZCBwbGlua2luZyB3aGVuIGl0IGNvbWVzIHRvIHRoZXNlIHRoaW5ncy4gSSBkb24gY2FycnkgKHlldCkgICBoYXZlbiBmZWx0IGNvbWZvcnRhYmxlIHdpdGggdGhlIHRyYWluaW5nIHVwIHRvIHRoaXMgcG9pbnQuIEEgcGxhdGUgY2FycmllciBpcyBsaWtlIDMgICA0IHN0ZXBzIG1vcmUgcHJlcGFyZWRuZXNzIHRoYW4gSSBhdCByaWdodCBub3cuIFRoZSByZXNwb25zZXMgSSBnb3QgZnJvbSBvdGhlcnMgcHV0IGl0IGluIHBlcnNwZWN0aXZlIGEgYml0IG1vcmUgYW5kIEkgYmUgY29uc2lkZXJpbmcgaW4gdGhlIGZ1dHVyZS4KQ29uc2VudGluZzNudHJhaWxzICAxOTIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpCZWZvcmUgeW91IGVudGVyIHRoZSB3YXRlciwgaG9sZCB0aGVtIGluIHlvdXIgaGFuZHMgYW5kIHNsb3dseSBjb29sIHRoZW0gZG93bi4gVGhhdCB3aHkgeW91IHNob3VsZCBoYXZlIHBsYXN0aWMgZ2xhc3NlcyBhcyB3ZWxsLCBqdXN0IGluIGNhc2UuIApUaGUgY29uY2VudHJhdGlvbiBvZiBjYWxjaWZlZGlvbCBpbiBibG9vZCBpcyBjb25zaWRlcmVkIHRoZSBiZXN0IGluZGljYXRvciBvZiB2aXRhbWluIEQgc3RhdHVzLlJlc2VhcmNoZXJzIGh5cG90aGVzaXplZCB0aGF0IHZpdGFtaW4gRCBzdXBwbGVtZW50YXRpb24gd291bGQgcmVkdWNlIHRoZSBkZWdyZWUgb2YgY2hyb25pYyBwYWluIGV4cGVyaWVuY2VkIGJ5IEZNUyBwYXRpZW50cyB3aXRoIGxvdyBsZXZlbHMgb2YgY2FsY2lmZWRpb2wgYW5kIGFsc28gbWlnaHQgaW1wcm92ZSBvdGhlciBzeW1wdG9tcy4iTG93IGJsb29kIGxldmVscyBvZiBjYWxjaWZlZGlvbCBhcmUgZXNwZWNpYWxseSBjb21tb24gaW4gcGF0aWVudHMgd2l0aCBzZXZlcmUgcGFpbiBhbmQgZmlicm9teWFsZ2lhLiJXZSB0aGVyZWZvcmUgc2V0IG91dCB0byBkZXRlcm1pbmUgd2hldGhlciByYWlzaW5nIHRoZSBjYWxjaWZlZGlvbCBsZXZlbHMgaW4gdGhlc2UgcGF0aWVudHMgd291bGQgYWxsZXZpYXRlIHBhaW4gYW5kIGNhdXNlIGEgZ2VuZXJhbCBpbXByb3ZlbWVudCBpbiBjb25jb21pdGFudCBkaXNvcmRlcnMuIkluIGEgcmFuZG9taXplZCBjb250cm9sbGVkIHRyaWFsLCAzMCB3b21lbiB3aXRoIEZNUyB3aXRoIGxvdyBzZXJ1bSBjYWxjaWZlZGlvbCBsZXZlbHMgKGJlbG93IDMybmcvbWwpIHdlcmUgcmFuZG9taXplZCB0byBhIHRyZWF0bWVudCBvciBjb250cm9sIGdyb3VwLlRoZSBnb2FsIGZvciB0aGUgdHJlYXRtZW50IGdyb3VwIHdhcyB0byBhY2hpZXZlIHNlcnVtIGNhbGNpZmVkaW9sIGxldmVscyBiZXR3ZWVuIDMyIGFuZCA0OG5nL21sIGZvciAyMCB3ZWVrcyB2aWEgb3JhbCBjaG9sZWNhbGNpZmVyb2wgc3VwcGxlbWVudHMuU2VydW0gY2FsY2lmZWRpb2wgbGV2ZWxzIHdlcmUgcmVldmFsdWF0ZWQgYWZ0ZXIgZml2ZSBhbmQgMTMgd2Vla3MsIGFuZCB0aGUgZG9zZSB3YXMgcmV2aWV3ZWQgYmFzZWQgb24gdGhlIHJlc3VsdHMuIApIZWFyZCBhIGNsaWNrIGFuZCBubyByb3VuZCB3ZW50IG9mZi4gQWJvdXQgYSBtaW51dGUgbGF0ZXIgdGhlIGd1eSBzaG90IG15IGRhZCBpbiBoaXMgbGVnIHdpdGggdGhlIHNhbWUgZ3VuLiBMYXRlciB3aGVuIGV2ZXJ5dGhpbmcgd2FzIG92ZXIgYW5kIHRoZSBwb2xpY2UgYXJyZXN0ZWQgdGhlIG1hbiwgdGhleSBmb3VuZCB0aGUgcmV2b2x2ZXIgd2l0aCB0aGUgYnVsbGV0IHRoYXQgZGlkbiBmaXJlLiAKQSBwYXRpZW50IGdldHRpbmcgYSBib29iIGpvYiBpcyB3ZWxsIGluZm9ybWVkIG9mIHRoZSByaXNrcy4gT2YgY291cnNlIGdvdmVybm1lbnRzIGNhbiBhbmQgbXVzdCByZWd1bGF0ZSBkYW5nZXJvdXMgaW5kdXN0cmllcyBhbmQgcHJvZHVjdHMgIHdoZXRoZXIgaXQgYmFua3Mgc2VsbGluZyBidW5kbGVkIGRlcml2YXRpdmVzIGFuZCBzdWJwcmltZSBtb3J0Z2FnZXMgb3IgcmVsaWdpb25zIHNlbGxpbmcgcG9pc29uZWQgS29vbCBBaWQuLiAKVGFrZXMgaGFyZGx5IGFueSB0aW1lIHRvIHNldCB1cCwgaXQgdGhlIGRlY29yYXRpbmcgdGhhdCBJIGJsb3cgbXkgbWludXRlcyBvbi4gClRoZSBjaG9pY2UgaXMgbWluZGJvZ2dsaW5nLiBUaGVyZSBhcmUgQW1lcmljYW4sIEVuZ2xpc2ggYW5kIEFzaWFuIGJyZWFrZmFzdHMuIApNYWRlIEhlYWRsaW5lcyBBbmQgTW92ZWQgTWFya2V0cwpUaG9zZSBvcHRpb25zIGFyZSBlc2NhbGF0ZSB0aGUgd2FyIGJ5IDQwLDAwMCB0cm9vcHMsIGJ5IDI1LDAwMCB0cm9vcHMgYW5kIGJ5IDIwLDAwMC4gClByZXNzIHRoZSByZSBkaWFsIG9uIHRoZSBwaG9uZSBvciA2OS4gClRoZSBpc3N1ZXMgaW4gdGhlIEhvdXNlSG91c2UgRnJlZWRvbSBDYXVjdXMgQ2hhaXJtYW4gTWFyayBNZWFkb3dzIGFuZCBSZXAuIApNeSBiZXN0IGZyaWVuZCBraWRkbyBoYWQgaGlzIGZvdXJ0aCBiaXJ0aGRheSBhdCBhIHBldHRpbmcgem9vIHRoaW5nLCBhbmQgdGhleSBoYWQgYSBiYWJ5L3RvZGRsZXIga2FuZ2Fyb28gdGhhdCB0aGV5IGxldCBob3AgYXJvdW5kIGFuZCBsZXQgZXZlcnlvbmUgcGV0IGFuZCBmZWVkIGhpbS4gSGUgd2FzIGp1c3Qgb24gdGhlIG91dHNraXJ0IGFnZSBvZiBiZWluZyBhYmxlIHRvIGJlIGFyb3VuZCBwZW9wbGU7IGFub3RoZXIgbW9udGggb3Igc28gYW5kIGhlIHdvdWxkIGhhdmUgYmVlbiB0b28gYmlnLCB0b28gYWRvbGVzY2VudCBhbmQgdG9vIGFnZ3Jlc3NpdmUgdG8gYmUgYXJvdW5kIGtpZHMsIGJ1dCBoZSB3YXMgdmVyeSBjdXRlLiBIZSBob3BwZWQgYXJvdW5kIGluIGEgZGlhcGVyIChhcHBhcmVudGx5IHRoZXkgc2hpdCBDT05TVEFOVExZKSBhbmQga2lkcyB3ZXJlIGdpdmVuIGZvb2QgdG8gZmVlZCBoaW0gb3V0IG9mIHRoZWlyIGhhbmRzLgpXZSBjYW4gaW1wcm92ZSB0aGF0IGRyYW1hdGljYWxseSBieSBnb2luZyB0byBuZXdlciBtYXRlcmlhbHMgZXZlbiBiZWZvcmUgd2UgYWRkcmVzcyB0aGUgdXBjb21pbmcgbmV3IGZvcm1zIG9mIG1ldGFsbHVyZ3kuLiAKSW4gYSB3YXksIGhpcyByZWFsaXR5IGNvdWxkIGJlIGNvbXBhcmVkIHRvIHRoZSBmb2xsb3dpbmcgc2l0dWF0aW9uLiBJbWFnaW5lIHlvdSBhcmUgYSB0b3VyaXN0IHZpc2l0aW5nIENoaW5hLiBZb3UgZG9uJ3Qga25vdyB0aGUgbGFuZ3VhZ2UgYW5kIHlvdSBhcmUgYXNraW5nIGFyb3VuZCBmb3IgdGhlIG5lYXJlc3Qgd2FzaHJvb20uIFdoaWNoIHRvb2xzIHdvdWxkIHlvdSB1c2UgaW4gb3JkZXIgdG8gYmUgdW5kZXJzdG9vZD8gSW4gRGFzYW4ncyB3b3JsZCwgdGhlc2UgdG9vbHMgYXJlIHBhcnQgb2YgYSBkYWlseSBwcmFjdGljZS4gWW91IHdpbGwgYmUgc3VycHJpc2VkIGJ5IGhvdyBzaW1pbGFyIHRoZXNlIHRvb2xzIGFyZSBiZXR3ZWVuIHNvbWVvbmUgYWZmZWN0ZWQgYnkgQXV0aXNtIGFuZCBzb21lb25lIHN1ZmZlcmluZyBmcm9tIExhcnluZ2l0aXMuIEhlcmUgaXMgaG93IHRvIGNvbW11bmljYXRlIHdpdGggYSBub24gdmVyYmFsIGNoaWxkLgpUaGF0J3Mgd2h5IFdpbm5pZSB0aGUgUG9vaCBpcyBiYW5uZWQuIApQbGF5ZXJzIHdvdWxkbiBldmVuIHN3YXAgdG8gaXQgaW5mYW50cnkgZG9taW5hbnQgbWFwcyBvciBtb2Rlcy4gVGhlIGluY3JlYXNlZCByYW5nZSBvZiB0aGUgcGFuemVyZmF1c3Qgb3IgdGhlIHJlbG9hZCBzcGVlZCBvZiBhIFBJQVQsIGFuZCBib3RoIGhhdmluZyB0aGUgYWJpbGl0eSB0byBkZXN0cm95IGJ1aWxkaW5ncyBhbmQgZm9ydGlmaWNhdGlvbnMsIGlzIGZhciBtb3JlIGFwcGVhbGluZyB0byBhIHdlYXBvbiB0aGF0IG9ubHkgYnJpbmcgc2xpZ2h0bHkgaGlnaGVyIHNwbGFzaCB0byBpbmZhbnRyeSBhbmQgdGhlIHNhbWUgY2FwYWNpdHkuIApPciBsYSBsZWN0dXJlIGRlIE5pZXR6c2NoZSBwdWx2cmlzYWl0IGNlcyBjZXJ0aXR1ZGVzLiBOaWV0enNjaGUgZHNhY3JhbGlzZSBjb21wbHRlbWVudCBsJ2hpc3RvaXJlLCBub3RhbW1lbnQgY2VsbGUgZGUgbGEgUnZvbHV0aW9uIGZyYW5haXNlLiBQb3VyIGx1aSwgdW4gZGVzIHByaW5jaXBhdXggbW90ZXVycyBkZSBsYSBSdm9sdXRpb24gZnJhbmFpc2UgbmUgZnV0IHBhcyBsZSBkc2lyIGRlIGp1c3RpY2UgbWFpcyBsZSByZXNzZW50aW1lbnQgcXVpIGhhYml0ZXJhIHNvbiBjcmVkbyBnYWxpdGFpcmUuIApEbyBub3Qgdm90ZSBpZiB5b3UgYXJlIG5vdCBzdWJzY3JpYmVkLjUuIAoiVGhlIHJlcXVlc3Qgd2FzIG5vdCB0byBhc2sgdGhlIGNvbW1pc3Npb25lcnMgdG8gd2VpZ2h0IGluIG9uIHRoZSBwcm9qZWN0LiAKQXJhYnMgYXJlIHdvcnNlIGxtZmFvLiAKRHIuIEl0J3MgZXJnb25vbWljYWxseSBkZXNpZ25lZCBmb3IgYmFjayBzbGVlcGVycywgeWV0IGFsc28gY3JhZGxlcyB5b3VyIGhlYWQgaWYgeW91IHNsZWVwIG9uIHlvdXIgc2lkZSwgc28geW91ciBmYWNlIGJhcmVseSB0b3VjaGVzIHRoZSBwaWxsb3cuCkRvbiB0YWtlIG15IHdvcmQgZm9yIGl0IHRob3VnaC4gR28gbWFrZSBhbiBhcHBvaW50bWVudCBhbmQgZmluZCBvdXQhIFdoYXQgZG8geW91IGhhdmUgdG8gbG9zZSBpZiB5b3UgYXJlIGZlZWxpbmcgc28gZG93bj8gSSBwcm9taXNlIHlvdSB3b24gcmVncmV0IGl0LiBBbmQgdGhhdCBuYWdnaW5nIHZvaWNlIGlzIGp1c3QgeW91ciBhbnhpZXR5IHRyeWluZyB0byBwcm90ZWN0IGl0c2VsZiBhZ2FpbnN0IHNvbWV0aGluZyB0aGF0IG1pZ2h0IGdldCByaWQgb2YgaXQhLiAKMzYpIEx1diBVU3VtIChieSBDSiBIb2xsYW5kIGZlYXQuIExhZHkgR2FHYSkuIFNlYXJjaCBZb3V0dWJlIGZvciB0aGlzc29uZy4gClRoaXMgbW9ybmluZyBJIHdhcyBwdXNoaW5nIG15IHNvbiBpbiBoaXMgcHJhbSB0byBteSBsb2NhbCBzaG9wcyBhbmQgYSB3b21hbiBzdG9wcGVkIG1lIHRvIGNvbXBsaW1lbnQgbXkgc29ucyBleWVzLiBUaGlzIGhhcHBlbnMgYWxsIHRoZSB0aW1lLiBNeSBzb24gYWNzIGFsbCBjdXRlIGFuZCBjb3kuIApDYW4gYmUgZWl0aGVyIHdyaXR0ZW4gYnkgYWR2ZXJ0aXNlciBvciB3cml0dGVuIChvciByZXdyaXR0ZW4pIGJ5IGN1c3RvbSBtZWRpYSBkaXZpc2lvbi4gCkFjdG9yIEphbiBNaWNoYWVsIFZpbmNlbnQsIGtub3duIGZvciAnQWlyd29sZiwnIGRpZXMgYXQgNzMgQnkgSm9uYXRoYW4gRHJldywgQXNzb2NpYXRlZCBQcmVzcyBBY3RvciBKYW4gTWljaGFlbCBWaW5jZW50LCB0aGUgIkFpcndvbGYiIHRlbGV2aXNpb24gc3RhciB3aG9zZSBzbGVlayBnb29kIGxvb2tzIGJlbGllZCBhIHRyb3VibGVkIHBlcnNvbmFsIGxpZmUsIGhhcyBkaWVkLiAKTmV2ZXJ0aGVsZXNzLCBJIGFtIG5vbnBsdXNzZWQuIApJdCBzZWVuIGFzIGEgY292ZXIgZm9yIHRoZSBtb3ZpZSBiZWluZyBiYWQsIHRyeWluZyB0byBwYWludCBjcml0aWNzIGFzIGJpZ290cyB0byBzb2NpYWxseSBzaGFtZSBwZW9wbGUgaW50byBsaWtpbmcgYSBzdWIgcGFyIGZpbG0uIApJIHdpbGwgc2F5IHRoYXQgSmV3aXNoIEFtZXJpY2FucyBhcmUganVzdCBhcyBBbWVyaWNhbiBhcyBhbnkgb3RoZXIgZ3JvdXAgYW5kIHRoYXQgcGVyc2VjdXRpb24gb2YgSmV3aXNoIHBlb3BsZSBpbiBvdXIgc29jaWV0eSBzaG91bGQgYmUgdW5hY2NlcHRhYmxlLgpQbGF5ZXIsIHlvdSBzaG91bGQgYWxyZWFkeSBiZSBjYXVnaHQgdXAgd2l0aCB0aGUgYmFzaWNzIG9mIG9ubGluZSBwb2tlclNvbWUgcGVvcGxlIHBsYXkgcG9rZXIgZ2FtZXMgZm9yIHJlbGF4YXRpb24gcHVycG9zZXMuIApUaGVuIHRoaXMgbmV3IGZhbmdsZWQgdGhpbmcgY2FsbGVkIHdhcyBtYWtpbmcgd2F2ZXMgICBDRCBxdWFsaXR5IHNvdW5kIGFuZCBpdCBvbmx5IHRvb2sgdXAgNU1CIG9mIHNwYWNlPyBIb2x5IHNoaXQhIChpdCB3YXMgYSBiaWcgZGVhbCBiZWNhdXNlIHNwYWNlIHdhc24gYXMgY2hlYXAgYXMgaXQgd2FzIHRvZGF5LiBBbmQgNU1CIGRpZG4gdGFrZSB0aGF0IGxvbmcgdG8gZG93bmxvYWQsIGV2ZW4gb3ZlciBkaWFsdXApLiAKSGUgc2FpZCBoZSB3YXMgbG9va2luZyBpbnRvIGl0LiAKVGhlaXIgYWdlcyByYW5nZWQgZnJvbSAxOSB0byAzMCwgc2hlIHRvbGQgaW52ZXN0aWdhdG9ycy5BY2NvcmRpbmcgdG8gcG9saWNlLCByb29tcyBpbiBDb2lsJ3MgaG91c2Ugd2VyZSB0cmFuc2Zvcm1lZCBpbnRvIHByaXZhdGUgbWFzc2FnZSBzcGFjZXMgd2l0aCB0YWJsZXMuIFRoZSB3b21lbiB3ZXJlIGluc3RydWN0ZWQgdG8gcmVtb3ZlIHRoZWlyIGNsb3RoZXMgYXMgc29vbiBhcyB0aGV5IHdhbGtlZCBpbi4gClRoZXNlIHBlb3BsZSB0cnVseSBkbyBub3QgY2FyZSBhYm91dCB0aGUgbG9zcyBhbmltYWwgbGl2ZXMgZXhjZXB0IGlmIGl0IGlzIGR1ZSB0byB0aGUgaHVtYW4gZGlldC4gVGhlaXIgc2VudGltZW50IGlzIHNpbWlsYXIgQ29uc2VydmF0aXZlcyB3aG8gZmlnaHQgZm9yIHRoZSByaWdodHMgb2YgdW5ib3JuIGZldHVzZXMgYnV0IGRvbiBnaXZlIGEgc2hpdCBhYm91dCB0aGUgY2hpbGQgYWZ0ZXIgaXQgaXMgYm9ybi4gQXMgbG9uZyBhcyBpdCBpc24gZWF0ZW4sIHRoZXkgZG9uIGdpdmUgYSBmdWNrIHdoYXQgaGFwcGVucyB0byBpdC4gCk5vIGJ1dCB0aGV5IGNhbiBlZmZlY3RpdmVseSBkZWZlbmQgYWdhaW5zdCBiaW9sb2dpY2FsIHdlYXBvbnMgYnkgZGVzdHJveWluZyBhbnkgbGFicyB0aGF0IHdvdWxkIHByb2R1Y2UgdGhlbSBhbmQgdGhlIHJlc3Qgb2YgTkFUTyBhbGxvd3MgdGhlbSB0by4gR3Vlc3Mgd2hhdCB0aG91Z2g/IFBlb3BsZSBnZXQga2lsbGVkIGluIHRob3NlIGF0dGFja3MuCkxlcyBiYXJyaXJlcyBzb250IHN5c3RtYXRpcXVlbWVudCBjYXNzZXMsIHBhcyBlbnRyZXRlbnVlcy4gCk1vc3QgcGVvcGxlIEkga25vdyB3aG8gZG8gaW50ZXJlc3RpbmcsIGNyZWF0aXZlIHdvcmsgd2VudCB0aHJvdWdoIHllYXJzIG9mIHRoaXMuIApDbG9zZSB5b3VyIGxldHRlciBieSByZXN0YXRpbmcgeW91ciBpbnRlcmVzdCBpbiBsZWFybmluZyBtb3JlIGFib3V0IHRoZSBqb2IuIFJlZnJhaW4gZnJvbSBzYXlpbmcgeW91J3JlIHRoZSBwZXJmZWN0IGNhbmRpZGF0ZSAgIGF0IHRoaXMgcG9pbnQsIGFsbCB5b3UgY2FuIGhvbmVzdGx5IHNheSBpcyB0aGF0IHlvdSdyZSBpbnRlcmVzdGVkIGluIGV4cGxvcmluZyB0aGUgb3Bwb3J0dW5pdHkuIEFzayBmb3IgYSBwZXJzb25hbCBpbnRlcnZpZXcgYW5kIHN0YXRlIGEgdGltZSB3aGVuIHlvdSB3aWxsIGZvbGxvdyB1cCB3aXRoIGEgcGhvbmUgY2FsbCB0byBzY2hlZHVsZSBvbmUuIEluY2x1ZGUgeW91ciBjb250YWN0IGluZm9ybWF0aW9uIGluIHRoZSBsYXN0IHBhcmFncmFwaC4KWW91IGdvdCBsdWNreSAgIHlvdSB3ZW50IHRocm91Z2ggb24gYXdheSBnb2FscyBhbmQgdGhleSB3ZXJlIGFsbCBoYW5kZWQgb3ZlciBvbiBhIHNpbHZlciBwbGF0dGVyLiBKdXN0IGZ1Y2tpbmcgYWNjZXB0IGl0IGFuZCBiZSBoYXBweSBpbnN0ZWFkIG9mIGJlaW5nIHRoZSBjb25kZXNjZW5kaW5nIGJhbmR3YWdvbiBBbWVyaWNhbiBoeXBvY3JpdGUgdGhhdCB5b3UgYXJlLiAKRXNwZWNpYWxseSBzaW5jZSB0d28gb3IgdGhyZWUgQnJlYWQgbiBCdXR0ZXIgY29tYm9zIHdpbGwgY29zdCB5b3UgdGhlIHJvdW5kLiAKSXQganVzdCBhIGZhaWx1cmUgb2YgcmVhZGluZyBjb21wcmVoZW5zaW9uIG9uIHlvdXIgcGFydC4gVGhleSBhcmVuIHNheWluZyAiOTAlIG9mIHBvbGljZSBlbmNvdW50ZXJzIHdpdGggYmxhY2sgcGVvcGxlIHJlc3VsdCBpbiBhIHNob290aW5nLiIgVGhleSBhcmUgc2F5aW5nIHRoYXQsIHdoZW4gdGhleSBoZWFyIGFib3V0IHRoZSBwb2xpY2UgZW5jb3VudGVyaW5nIGEgYmxhY2sgcGVyc29uLCB0aGV5IGV4cGVjdCBpdCB0byBlbmQgaW4gYSBzaG9vdGluZyA5MCUgb2YgdGhlIHRpbWUuIApJIGhlYXIgeW91ciB0aGVvcnksIGJ1dCBJIGRvbiB0aGluayBpdCBoYXMgYW55dGhpbmcgdG8gZG8gd2l0aCBwb29yIHdoaXRlcyBoYXZpbmcgYWN0dWFsIGZpcnN0aGFuZCBleHBlcmllbmNlIHdpdGggYmxhY2tzLiBUaGV5IHZlcnkgcmFyZWx5IGNvZXhpc3Qgb3V0c2lkZSBvciBydXJhbCBhcmVhcyBpbiB0aGUgU291dGguIEkgdGhpbmsgdGhleSBoYXZlIG5vIGV4cGVyaWVuY2Ugd2l0aCBibGFja3MgYXQgYWxsLCBhbmQgc28gdGhleSBqdXN0IGNob29zZSB0byBiZWxpZXZlIHdoYXQgZXZlcnlib2R5IGFyb3VuZCB0aGVtIHNheXMuIFRoZSBjdXJlIGZvciByYWNpc20gaXMgYSBwYXNzcG9ydCwgYW5kIGl0IHRoZWlyIGlzb2xhdGlvbiB0aGF0IHBlcnBldHVhdGVzIHRoZWlyIG93biBmZWFycy4gQmxhY2sgcGVvcGxlIGhhdmUgYWJzb2x1dGVseSBub3RoaW5nIHRvIGRvIHdpdGggdGhhdCwgc28gc3RvcCB0cnlpbmcgdG8gc3VnZ2VzdCBibGFjayBwZW9wbGUgc2NhcmVkIG9mZiBhbGwgdGhlIHBvb3Igd2hpdGUgZm9say4KVGhlIDIxNyAxODUgSG91c2Ugdm90ZSBUaHVyc2RheSBjYXBwZWQgYSB0dW11bHR1b3VzIGRheSBpbiB3aGljaCBUcnVtcCBzdXJwcmlzZWQgZmVsbG93IFJlcHVibGljYW5zIGJ5IGluc2lzdGluZyBoZSB3b24ndCBzaWduIGEgYmlsbCB3aXRob3V0IHRoZSBib3JkZXIgbW9uZXksIGFmdGVyIHRoZSBXaGl0ZSBIb3VzZSBoYWQgaGludGVkIGhlIHdvdWxkIGFjY2VwdCBpdC4gCiJXZSBsb29raW5nIGF0IHBoZW5vbWVuYWwgZ3Jvd3RoIGluIHBva2VyIG1hY2hpbmUgdXNlIGJvdGggaW4gcmVhbCB0ZXJtcyBhbmQgYXMgYSBzaGFyZSBvZiB0aGUgdG90YWwuCkJ1dCBkb24ndCBnZXQgaXQgdHdpc3RlZCwgYWxsIHRoYXQgZ2xpbW1lcmluZyBpY2UgZ290IHRob3NlIEhvJ3MgbGlzdGVuJ24uIFdoZW4gdGhlIEhvJ3MgY29tZSB0byBob2xsZXIsIGJyZWFrIG9mZiBHYW1lIHRoYXQncyBwcm9wZXIuCldoYXQgdGhlIGd1eSBhYm92ZSB3YXMgcmVmZXJyaW5nIHRvIGlzIHBsYWNlcyBsaWtlIGNoaWNrIGZpbCBhIHRha2luZyBhIHN0YW5jZSBvbiBnYXkgbWFycmlhZ2UgYW5kIG90aGVyIGNvbXBhbnkncyB0aGF0IGhhdmUgZG9uZSBzby4gVGhleSBoYXZlIHRoYXQgcmlnaHQgYXMgYSBwcml2YXRlIGNvbXBhbnkgdG8gZG8gdGhpcy4gQnV0IGxhdyBtYWtlcnMgaW4gQW1lcmljYSBoYXZlIG5vIHJpZ2h0IHRvIHRha2UgYXdheSBwZW9wbGUncyBjaXZpbCByaWdodHMuIEknbSBub3Qgc2hvY2tlZCBhIGZsYXQgZWFydGhpZXIgbnVtYiBudXRzIGNhbid0IGNvbXByZWhlbmQgdGhpcy4gWW91IGNsZWFybHkgYXJlIGEgbG9vbi4KQ2Fubm90IHNvbHZlIG91ciBzb2NpYWwgaXNvbGF0aW9uIGJ5IHRlY2hub2xvZ3kgIHNvY2lhbCBuZXR3b3JrcywgYmxvZ2dpbmcgY29tbXVuaXRpZXMsIGFuZCBvbmxpbmUgZGF0aW5nIGFyZSBmaW5lLCBidXQgd2UgYWN0dWFsbHkgbmVlZCB0byBzcGVuZCB0aW1lIGluIHRoZSBzYW1lIHBoeXNpY2FsIGxvY2F0aW9uIHdpdGggb3RoZXIgaHVtYW4gYmVpbmdzLi4gClBva2VyIGRldmVsb3BlZCBodW5kcmVkcyBvZiB5ZWFycyBhZ28sIGFuZCBzdHJpcCBwb2tlciBvcmlnaW5hdGVkIGZyb20gdGhlIGJhc2ljIGdhbWUgb2YgcG9rZXIuIEJlY2F1c2UgcG9rZXIgZW5hYmxlcyBvbmUgdG8gd2luIHdoaWxlIG90aGVycyBhcmUgbG9zaW5nLCB0aGUgbG9zZXJzIHRoZW4gY2FuIGJldCB0aGVpciBjbG90aGluZy4gVGhpcyBpcyB0byB0YWtlIGJhY2sgdGhlaXIgY2FzaCBmcm9tIHRoZSB3aW5uaW5nIG9wcG9uZW50LiAKUmVnYXJkaW5nIHRoZSBtYXR0ZXIgb2YgeW91ciBhcHBlYXJhbmNlLCBJIHdvdWxkIHN0cm9uZ2x5IHN1c3BlY3QgdGhhdCB0aGUgcHJvYmxlbSBpcyB0aGF0IHlvdSBhcmUgVE9PIGF0dHJhY3RpdmUgZm9yIGNvbnRyb2xsaW5nIHBhcmVudHMuIApXaW50ZXJjYXN0MjAwOSBSaWRnZWxpbmUgUlRML01vdG9yICAgUnVucwpEaWUgWmVudHJhbGUgZGVzIE5ldHp3ZXJrcyBiZWZpbmRldCBzaWNoIHNlaXQgdmllbGVuIEphaHJlbiBhbiBkZXIgVW5pdmVyc2l0dHNrbGluaWsgRnJlaWJ1cmcuIApMZSBzZXVsIGluY29udm5pZW50IGMnZXN0IHF1ZSBsJ2F1dGV1ciBlc3QgYmF2YXJkZSBldCBxdSdpbCBmYXV0IHZyYWltZW50IHMnYWNjcm9jaGVyIHBvdXIgcyd5IHJldHJvdXZlci4gCldoYXQgaGUgZGlkbid0IHRlbGwgdGhlbSB3YXMgdGhhdCBJIHNob3VsZCBnZXQgaXQgc3VyZ2ljYWxseSBmaXhlZCByaWdodCBhd2F5IGJlY2F1c2UgaXQgY2FuIGNhdXNlIGRlcHJpdmF0aW9uIGFtYmx5b3BpYSAoc2FtZSB0aGluZyB5b3UgaGF2ZSBidXQgImRlcHJpdmF0aW9uIiBiZWNhdXNlIGl0J3MgY2F1c2VkIGJ5IHRoZSBleWUgbm90IGdldHRpbmcgZW5vdWdoIGxpZ2h0IGV4cG9zdXJlIGFzIGl0J3MgZGV2ZWxvcGluZykuIApPciwgdGhleSB3ZXJlIGp1c3QgcmVhbGx5IHNoaXR0eSBwYXJlbnRzLiBJIGhhZCBhbiBleCB3aG8gdXNlZCB0byBzcGVuZCB0aW1lIGluIHRoZSBob3NwaXRhbC4gCkkgaGFkIHRvIGV4cGxhaW4gdG8gbXkgYnJvdGhlciB0aGF0IGFsdGhvdWdoIGl0IG1heSBsb29rIHRoYXQgd2F5IG9uIHRoZSBzdXJmYWNlIHRvIGhpbSwgd29tZW4gYWJzb2x1dGVseSBkbyBub3QgaGF2ZSBlcXVhbCBzdGF0dXMgaW4gdGhlIHdvcmtmb3JjZSB5ZXQuIFN1cmUsIHdlIGdldCBwYWlkIHRoZSBzYW1lIGFtb3VudCBhcyBhIG1hbiBmb3IgdGhlIHNhbWUgam9iLCBidXQgd29tZW4gc3RpbGwgaGF2ZSB0byBkZWFsIHdpdGggc28gbXVjaCBidWxsc2hpdCBpbiB0aGUgd29ya3BsYWNlLiBFdmVyeSBzaW5nbGUgd29tYW4gSSB0YWxrZWQgdG8gKG15c2VsZiBhcyB3ZWxsKSBoYXMgZXhwZXJpZW5jZWQgc2V4dWFsIGhhcmFzc21lbnQgYXQgd29yaywgYW5kIG1vc3Qgb2YgdGhlbSBqdXN0IGhhZCB0byBzdWNrIGl0IHVwIGlmIHRoZXkgd2FudGVkIHRvIGtlZXAgdGhlaXIgam9iLiAKVGhleSdsbCBtYWtlIHlvdSB3YW50IHRvIHN0ZXAgb24geW91ciBzaWRla2ljaydzIG51dHMKQWZ0ZXIgMjAgeWVhcnMgb2YgbWFycmlhZ2UgbXVjaCBvZiB0aGUgaW50aW1hY3kgaXMgbG9zdC4gCkhlbGwgZXZlbiB0aGUgZ3V5IHRoYXQgb25seSB3b24gMjMgb3V0IG9mIDI2IGlzbiBsdWNrLiAKU3VyIGxlIHNlY3RldXIgQ2hhcGVsbGUsIGlsIHkgYSBhdXNzaSBkdSBtaWV1eCBlbiBqb3VybmUgbWFpcyBsZXMgYWZmYWlyZXMgcmVwcmVubmVudCBlbiBmaW4gZCdhcHJzIG1pZGkgYXZlYyBkZSB0cnMgbm9tYnJldXggdmVuZGV1cnMgIGxhIHNhdXZldHRlLCBkZXMgcGVyc29ubmVzIGFsY29vbGlzZXMgZXQuIApBZ3JlZSB3aXRoIGEgcHAsIGhlIGNhbiBkbyBpdCBoaW1zZWxmLi4gCkhvd2V2ZXIsIEknbSB0aGlua2luZyB3ZWFyaW5nIGFib3V0IHRlbiBwYWlycyBhdCBvbmNlIGNvdWxkIGltcGFpciB5b3VyIHNleHkgY2F0IHdhbGsuIApJbSBub3QgY2VydGFpbiBhdCBhbGwgYnV0IGlmIEkgd2VyZSB0byBkbyB0aGlzIHRoZW4gdGhlIGJsYWNrIHdvdWxkIGJlIGhpZ2hsaWdodGVkIHVwIHdpdGggZXNoaW4gZ3JleS4gSSBkbyBpdCB3aXRoIGFuIGFpcmJydXNoIGFuZCBkbyBtb3N0bHkganVzdCBtaXhlcyBvZiBibGFjayBhbmQgZXNoaW4gZ3JleSB0byBnZXQgaXQgdXAgdG8gdGhlIGZpbmFsIGhpZ2hsaWdodC4gRm9yIGtpbGwgdGVhbSBtb2RlbHMgeW91IHdvbiBuZWVkIHRvIGRvIGFuIGFpcmJydXNoLCBqdXN0IHNpbXBsZSBlZGdlIGhpZ2hsaWdodHMgd2lsbCB3b3JrLiBUaGUgb3JhbmdlIEkgdXNlIGZpcmUgZHJhZ29uIGJyaWdodC4gT3JhbmdlIGlzIGEgcmVhbGx5IHRvdWdoIGNvbG9yIHNvIHlvdWQgbGlrZWx5IHdhbnQgdG8gYnVpbGQgaXQgdXAgZnJvbSBhIGxpZ2h0IGJyb3duIGZpcnN0LiBQcm9iYWJseSBlZGdlIGhpZ2hsaWdodCB3aXRoIGFuIG9yYW5nZSBvbmUgc2hhZGUgYnJpZ2h0ZXIuIFJlY2VzcyB3YXNoIHdpdGggbnVsbiBvaWwgZ2xvc3MgZm9yIHRoZSBsaW5lcyBpbiB0aGUgYXJtb3IgcGFuZWxzLiBUaGUgZ29sZCBpcyBwcmV0dHkgZWFzeSB3aXRoIGp1c3QgcmV0cmlidXRvciwgd2FzaCB3aXRoIGFncmF4LCBoaWdobGlnaHQgd2l0aCByZXRyaWJ1dG9yIHRoZW4gZmluaXNoIG9mZiB3aXRoIGxpYmVyYXRvci4KRGlyZWN0b3Igb2YgVm9jYXRpb25zIG9mIHRoZSBCcm9va2x5biBkaW9jZXNlLCBGYXRoZXIgS2V2aW4gSi4gcHJpZXN0IGNhbiBvbmx5IGdpdmUgaGlzIGxpZmUgdG8gdGhlIGNodXJjaCBpbiB0aGUgc2Vuc2UgdGhhdCBhIG1hbiBnaXZlcyBoaXMgbGlmZSB0byBhIGZlbWFsZSBzcG91c2UuIEEgaG9tb3NleHVhbCBtYW4gY2Fubm90IGhhdmUgdGhlIHNhbWUgcmVsYXRpb25zaGlwLiBJdCdzIG5vdCBhYm91dCBjb25kZW1uaW5nIGFueWJvZHkuIEl0J3MgYWJvdXQgb3VyIHdvcmxkIHZpZXcuIgpIb2xkIHVwLiBQZW9wbGUgdGhhdCBoYXBwZW4gdG8gYmUgQ2hyaXN0aWFucyBhbmQgZG8gZ29vZCB0aGluZ3MgZm9yIHRoZSB3b3JsZCBkb2VzbiBtZWFuIHRoYXQgIkNocmlzdGlhbml0eSIgZ2V0cyBjcmVkaXQgdW5sZXNzIGl0IHdhcyBtYXRlcmlhbGx5IHJlbGV2YW50LiAKSSBndWVzcywga2luZCBvZi4gSXQgaXMgcG9wdWxhciByaWdodCBub3cuIAoiV2hlbiB5b3UgYXJlIHlvdW5nZXIgeW91IGNhbiBoYXZlIG9ubHkgd29yaywgYW5kIEkgZGlkIGZvciBhIGxvbmcgdGltZSwiIGhlIHRvbGQgdGhlIEFQIGluIDIwMDYuICJCdXQgaXQgZG9lc24ndCBjb21tYW5kIG15IGF0dGVudGlvbiB0aGF0IHdheSBhbnltb3JlLiAKVGhlIHByb2xpZmVyYXRpb24gb2YgaXQgaGFzIHVzIGNvbmNlcm5lZC4iIEhlcnJpZmYgYWxzbyB3b3JyaWVzIHRoYXQgYW55b25lIDE4IGFuZCBvdmVyIGNhbiBnYW1ibGUgYXQgdGhlIHZlbnVlcy4gClNjb3JlcyBmb3IgZWFjaCBkaW1lbnNpb24gcmFuZ2UgZnJvbSAwIChwb29yIGhlYWx0aCkgdG8gMTAwIChnb29kIGhlYWx0aCkuLiAKUmFmYSBqb2lucyBhIHN0YWJsZSBvZiBlbGl0ZSBhdGhsZXRlcyB3aG8gaGF2ZSBjaG9zZW4gcG9rZXIgYXMgdGhlaXIgIm90aGVyIGdhbWUiIGFuZCB3aG8gcGxheSB3aXRoIFBva2VyU3RhcnMsIGluY2x1ZGluZyBvdGhlciBPbHltcGljIG1lZGFsbGlzdHMuIEhlIHdpbGwgcGxheSBhIGtleSByb2xlIGluIGludHJvZHVjaW5nIG5ldyBwbGF5ZXJzIHRvIHRoZSBnYW1lIG9mIHBva2VyLCBwYXJ0aWN1bGFybHkgaW4gaGlzIG5hdGl2ZSBTcGFpbiB3aGVyZSBvbmxpbmUgcG9rZXIgaXMgc3VyZ2luZyBpbiBwb3B1bGFyaXR5IGZvbGxvd2luZyB0aGUgcmVjZW50IGF3YXJkaW5nIG9mIGdvdmVybm1lbnQgbGljZW5zZXMgdG8gb3BlcmF0ZSBvbmxpbmUgcG9rZXIuIElzIGNvbW1pdHRlZCB0byBwcm92aWRpbmcgcmVndWxhdGVkLCBzYWZlIGFuZCBzZWN1cmUgZW52aXJvbm1lbnRzIGZvciBwb2tlciBwbGF5ZXJzIG9mIGFsbCBza2lsbCBsZXZlbHMgYW5kIGlzIHRoZSBjaG9pY2Ugb2YgbW9yZSBwb2tlciBwbGF5ZXJzIHRoYW4gYW55IG90aGVyIHNpdGUuIApUaGVyZSBzbGFtIHBvZXRyeS4gCkV2ZW4gd2hlbiB3ZSB0aGluayBIZSB3b24ndCBiZWNhdXNlIG9mIHRoZSBob3JyaWJsZSBzaW5zIHdlIGhhdmUgY29tbWl0dGVkIGFnYWluc3QgSGltIGFuZCBIaXMgQ2hpbGRyZW4uIApNZWFud2hpbGUsIHRvZ2V0aGVyIHdpdGggdHdvIG90aGVyIHBhcnRuZXJzLCB0aGV5IHN0YXJ0ZWQgYW5kIGJ1aWx0IERvbWluaW9uIExlbmRpbmcgQ2VudHJlcyBpbnRvIHRoZSBsYXJnZXN0IG1vcnRnYWdlIGJyb2tlcmFnZSBpbiBDYW5hZGEgYnkgbWFya2V0IHNoYXJlLCB3aXRoIDE3MCBmcmFuY2hpc2VzIGFuZCAzNTAgcGx1cyBvZmZpY2UgbG9jYXRpb25zLgpPZiBjb3Vyc2UsIHRhbGsgb2YgdGhpcyBwb3AgZ29uZSBjb3VudHJ5IHRyZW5kIHdvdWxkIGJlIGluY29tcGxldGUgd2l0aG91dCB0dXJuaW5nIHRvIEp1c3RpbiBUaW1iZXJsYWtlJ3MgYmlnIHJldHVybiBhaGVhZCBvZiBoaXMgUGVwc2kgU3VwZXIgQm93bCBMSUkgSGFsZnRpbWUgU2hvdyBwZXJmb3JtYW5jZSB3aXRoIGhpcyBmaWZ0aCBzdHVkaW8gYWxidW0sIE1hbiBvZiB0aGUgV29vZHMuIEluIHRoZSBsZWFkIHVwIHRvIHRoZSByZWxlYXNlIG9mIHRoZSBhbGJ1bSdzIGZpcnN0IHNpbmdsZSwgdGhlIFRlbm5lc3NlZSBuYXRpdmUgYmVnYW4gc2V0dGluZyB0aGUgc3RhZ2UgZm9yIHdoYXQgd2FzIHRvIGNvbWUuIApQYXJxIGlzIHRoZSBvbmx5IGNhc2lubyBub3dhZGF5cyB0aGF0IG9mZmVyIHBva2VyIHRvdXJuYW1lbnRzLCB5b3UgY2FuIGNoZWNrIG91dCB0aGVpciBzaXRlIGZvciB0aGUgbW9udGhseSBzY2hlZHVsZSwgKCQ4NSBNb25kYXkgdG8gU2F0dXJkYXksICQxMjAsJDIwMChib3VueSksJDUwMCBvbiBTdW5kYXkncywgYWxsIHRvdXJuYW1lbnRzIHN0YXJ0IGF0IDEwOjE1IGFuZCByZWdpc3RyYXRpb24gc3RhcnRzIGF0IDk6MTUsIERFRklOSVRFTFkgcmVjb21tZW5kIGdvaW5nIHRoZSBmdWxsIGhvdXIgaW4gYWR2YW5jZSBiZWNhdXNlIGl0IHBpY2tzIHVwLiAKRm91bmRlciBPZiBTcGEgV2hlcmUgUGF0cmlvdHMgT3duZXIgS3JhZnQgV2FzIEJ1c3RlZCBQYXJ0aWVkIFdpdGggUHJlc2lkZW50IFRydW1wIE9uIFN1cGVyIEJvd2wgU3VuZGF5VGhlIHdvbWFuIHdobyBmb3VuZGVkIHRoZSBsaW5lIG9mIGRheSBzcGFzIHdoZXJlIE5ldyBFbmdsYW5kIFBhdHJpb3RzIG93bmVyIFJvYmVydCBLcmFmdCB3YXMgYWNjdXNlZCBvZiBzb2xpY2l0aW5nIHByb3N0aXR1dGlvbiBoYXMgYmVjb21lIGEgZml4dHVyZSBhdCBSZXB1YmxpY2FuIGV2ZW50cyBhbG9uZyB0aGUgRWFzdCBDb2FzdC4KV2l0aG91dCBoZXIga25vd2xlZ2Ugb3IgcGVybWlzc2lvbiAodGhhdCdzIHdoYXQgeW91IGdldCBmb3IgZ2l2aW5nIG1lIHlvdXIgcGFzc3dvcmQpIG15IGJyb3RoZXIgYW5kIEkgZ2F2ZSBBbmdpJ3MgRGlhcnkgYSBjb21wbGV0ZSBvdmVyaGF1bC4gSSBldmVuIGFyY2hpdmVkIGhlciBvbGRlciBlbnRyaWVzIGZvciBoZXIuIApPb2sgbW9lc3RlbiB3ZSBuYXR1dXJsaWprIG9wIHpvZWsgbmFhciBlZW4gcmVzdGF1cmFudGplLCB3YWFyYmlqIHdlIG5vZyBlZW4gc3RyYWF0Z2V2ZWNodCAobWV0IHZlZWwgcG9saXRpZSkgdGVnZW5rd2FtZW4gZW4gdWl0ZWluZGVsaWprIGFhbiBkZSBhbmRlcmUga2FudCB2YW4gaGV0IHN0YWRqZSB0ZXJlY2h0IGt3YW1lbiBvcCBlZW4gdGVycmFzamUgYm92ZW4gZWVuIG1pam5nYW5nLiAKVGhleSBhcmUgYXQgcmlzayBvZiBkZXZlbG9waW5nIHNldmVyZSBoYW5kIHByb2JsZW1zIGNhdXNpbmcgZWFybHkgcmV0aXJlbWVudCBmcm9tIHRoZSB0cmFkZS4gClRoZSBvbmx5IHByb2JsZW0gaXMgdGhhdCB0aGUgbWFqb3JpdHkgZG9lc24ndCB1bmRlcnN0YW5kIHRoZSBjaG9pY2VzIGF2YWlsYWJsZS4gCldlIGJlZW4gbWFycmllZCA0NCB5ZWFycywgaGF2ZSBvbmUgY2hpbGQgKEQvMjgpLCBzaGUgZ290IG1hcnJpZWQgYSBjb3VwbGUgb2YgeWVhcnMgYWdvLiBUaGV5IGJvdWdodCBhIHRvd25ob3VzZSBpbiBhIG5pY2UgbmVpZ2hib3Job29kLiBBIHRvd25ob3VzZSBhIGZldyBkb29ycyBkb3duIGZyb20gaGVyIHdhcyBvbiB0aGUgbWFya2V0LCB3ZSBib3VnaHQgaXQgKGNhc2gsIHBhaWQgaW4gZnVsbCkgc28gaWYvd2hlbiBzaGUgaGFzIGtpZHMsIHdlIGRvIGRheWNhcmUgSUYgdGhleSAoZGF1Z2h0ZXIgc29uIGluIGxhdykgYW5udWFsbHkgc2F2ZSAzLzQgb2YgdGhlIGF2ZXJhZ2UgY29zdCBvZiBjaGlsZCBjYXJlIGluIG91ciBzdGF0ZSAoYW4gZXhwZW5zaXZlIHN0YXRlIGZvciBjaGlsZCBjYXJlIGNvc3RzKS4gVGhlbiB3aGVuIHdlIGRpZSwgc2hlIGNhbiBzZWxsIHRoZSB0b3duaG91c2Ugd2UgbGl2ZWQgaW4gb3IgcmVudCBpdCBvdXQgYnV0IHNpbmNlIGl0IHBhaWQgaW4gZnVsbCwgSSB0aGluayByZW50aW5nIGl0IG1heSBiZSBhIG1vcmUgcHJvZml0YWJsZSBpbiB0aGUgbG9uZyB0ZXJtLiBJZiBhbnlvbmUgY2FuIHN1Z2dlc3QgYW55dGhpbmcgdG8gaW1wcm92ZSBteSBwbGFuIHRvIGhlbHAgYmVhdCB0aGUgaGlnaCBjb3N0IG9mIGNoaWxkIGNhcmUsIHBsZWFzZSBsZXQgbWUga25vdyB3aGlsZSBJIHN0aWxsIGhhdmUgdGltZS4KSW0gbm90IHNheWluZyBoZSBpcyBlYWdlcmx5IHdhaXRpbmcgYXJvdW5kIHJlYWR5IHRvIGp1bXAgb24gaXQuIEJ1dCB1bmxlc3MgSSByZWFkIHNvbWV0aGluZyB3cm9uZywgaXQgc2VlbWVkIGxpa2UgaGUgd2FzIHdpbGxpbmcgdG8gZG8gaXQuIEkgZG9uIGtub3cgd2hhdCBpbnRlcnZpZXcgaXQgd2FzLiBCdXQgSSBhbSA5OSBwZXJjZW50IHBvc2l0aXZlIEkgaGVhcmQgdGhhdCBzb21ld2hlcmUuIE1heWJlIGltIHdyb25nLiBJZGsuIEJ1dCBlaXRoZXIgd2F5LCBJdCBkb2VzbiBtYXR0ZXIgaG93IGVhcmx5IHRoZSB0YWxrcyB3ZXJlIG9yIHRoYXQgSmFtZXMgd2FudGVkIHRvIG1ha2UgYSBUcmVuY2ggbW92aWUuIFRoZSBmYWN0IGlzIHRoYXQgdGhleSBhcHBhcmVudGx5IGhhdmUgY2hvc2VuIG9uZSBwcm9qZWN0IGFuZCBub3QgdGhlIG90aGVyLiBMb3RzIG9mIHBlb3BsZSAid2FudCIgdG8gbWFrZSBtb3ZpZXMuIE1vdmllIHN0dWRpb3MgYXJlIHBpdGNoZWQgdGhpbmdzIGFsbCB0aGUgdGltZS4gRG8gdGhleSBhbGwgZ2V0IG1hZGU/IE9mIGNvdXJzZSBub3QuIFNvIHdoeSB3aHkgZGlkIHRoZXkgY2hvb3NlIHRoaXMgc3BlY2lmaWMgcHJvamVjdD8gTXkgZ3Vlc3MgaXMgdGhhdCBpdCBpcyBzaW1wbHkgYmVjYXVzZSBvZiBKYW1lcyBXYW4uIFRoZSBndXkgbm93IGhhcyB0d28gYmlsbGlvbiBkb2xsYXIgZmlsbXMgYW5kIGEgYmlsbGlvbiBkb2xsYXIgaG9ycm9yIGZyYW5jaGlzZSBmb3IgV0IuIFNvIHRoZXkgYXJlIHByb2JhYmx5IGdpdmluZyBoaW0gbW9yZSBmcmVlIHJlaWduIGFuZCBwb3dlciB0aGFuIG1hbnkgb3RoZXIgZGlyZWN0b3JzLiBTYW1lIHdheSBNYXJnb3QgUm9iYmllIHdhcyBhYmxlIHRvIGdldCBCaXJkcyBvZiBQcmV5IGdvaW5nLiBTaGUgaGFzIHRoZSBwb3dlciB0byBkbyBzby4gTWFrZXMgc2Vuc2UgSSBndWVzcy4gQnV0IGdvZCBkYW1uIGlmIGl0IGlzbiBmcnVzdHJhdGluZy4gQSByZWFsIHNoYW1lIGNvbnNpZGVyaW5nIGhvdyBtdWNoIE1hbmdhbmllbGxvIGlzIGFwcGFyZW50bHkgaW50byB0aGUgcm9sZSBhbmQgd2FudHMgdG8gbWFrZSBpdCBoYXBwZW4uIEJ1dCBoZSBkb2VzbiBoYXZlIHRoZSBzdGF0dXMgYXMgdGhvc2Ugb3RoZXJzIEkgZ3Vlc3MuIEJ1dCBpdHMgYWxzbyBhIHNoYW1lIGJlY2F1c2UgdGhpcyBpcyBvYnZpb3VzbHkgYW4gZXh0cmVtZWx5IHBvcHVsYXIgY2hhcmFjdGVyIGFuZCB3aWxsIGRyYXcgYSBsb3Qgb2YgYXR0ZW50aW9uLiBBIGxvdCBtb3JlIHRoYW4gYSBtb3ZpZSBhYm91dCB0aGUgVHJlbmNoIEkgd291bGQgc2F5LiBVbmxlc3MgdGhlaXIgcGxhbnMgZm9yIHRoYXQgbW92aWUgYXJlIGEgbG90IG1vcmUgYW1iaXRpb3VzIHRoYW4gSSBhbSB0aGlua2luZy4KTXkgZmlyc3Qgc2F1bmEgZXhwZXJpZW5jZSBpbiBHZXJtYW55IHdhcyBhdCBGcmllZHJpY2hzYmFkIGluIEJhZGVuIEJhZGVuIGFuZCBJIHdlbnQgYmFjayBhZ2FpbiB0aGlzIHllYXIgZm9yIG15IGJpcnRoZGF5LiBIZXJlIHdoYXQgSSBjYW4gdGVsbCB5b3UgYWJvdXQgdGhlcmUgc3BlY2lmaWNhbGx5OlRoZXkgaGF2ZSBhIHN0YXRpb24gc3lzdGVtIHdpdGggc3VnZ2VzdGlvbnMgZm9yIGhvdyBsb25nIHlvdSBzaG91bGQgc3BlbmQgYXQgZWFjaCBzdGF0aW9uLiBUaGUgbGFzdCBpcyBhICJyZWFkaW5nIHJvb20iIHdoaWNoIGlzIGtpbmRhIEJTLCBzbyB5b3UgY2FuIHRha2UgbG9uZ2VyIGluIG90aGVyIHNlY3Rpb25zIGFuZCBza2lwIHRoZSByZWFkaW5nIHJvb20gaWYgeW91IHdhbnQuVGhleSBoYXZlIGRheXMgZXZlcnkgd2VlayB3aGVyZSB0aGUgYnVsayBvZiB0aGUgc2F1bmEgc3RhdGlvbnMgYXJlIHNlcGFyYXRlIHNleGVzIGlmIHlvdSBtb3JlIGNvbWZvcnRhYmxlIHdpdGggdGhhdCwgdGhvdWdoIHRoZXJlIGFyZSB0d28gc2hhcmVkIHBvb2xzIGluIHRoZSBtaWRkbGUuWWVhaCwgZG9uIHN0YXJlIHRvbyBtdWNoLiAKTGEgc2FsbGUgZGVzIG1hcmlhZ2VzIGRlIGxhIG1haXJpZSBkdSAxOGUgdGFpdCBjb21ibGUgbGUgMTggZGNlbWJyZSBkZXJuaWVyIHN1aXRlICBsJ2ludml0YXRpb24gZHUgcHJmZXQgZGUgcG9saWNlIGRlIFBhcmlzIE1pY2hlbCBEdWVscGVjaCBxdWkgc291aGFpdGFpdCBmYWlyZSB1biBwb2ludCBzdXIgbGEgc2N1cml0IGRhbnMgbCdhcnJvbmRpc3NlbWVudC4gRXJpYyBMZWpvaW5kcmUgdGFpdCBlbnRvdXIgZGUgbGEgY29tbWlzc2FpcmUgZHUgMThlIFZhbHJpZSBHb2V0eiwgZHUgY2hlZiBkZSBkaXN0cmljdCBKYWNxdWVzIFJpZ29uLCBkdSBkaXJlY3RldXIgZGUgbGEgc2N1cml0IGRlIHByb3hpbWl0IGRlIGwnYWdnbG9tcmF0aW9uIHBhcmlzaWVubmUgSmFjcXVlcyBNZXJpYywgZGUgU2VyZ2UgUXVpbGljaGluaSBkZSBsYSBkaXJlY3Rpb24gdGVycml0b3JpYWxlIGRlIHNjdXJpdCBkZSBwcm94aW1pdCBkZSBQYXJpcywgZHUgZGlyZWN0ZXVyIGFkam9pbnQgZHUgY2FiaW5ldCBkdSBwcmZldCBTZXJnZSBCb3VsYW5nZXIgZXQgZGUgWWFubiBEcm91ZXQsIGNoZWYgZGUgY2FiaW5ldC4gQ29yYWxpZSBMZXZlciBNYXRyYWphIHF1YW50ICBlbGxlIHJlcHJzZW50YWl0IGxhIERQU1AuLiAKTXkgc3VnZ2VzdGlvbiBpcyB0byBydW4gYW5kIGRvbid0IGxvb2sgYmFjay4uIApNYXNzZXVycyB3aG8gaGF2ZSBnb25lIHRvIG1hc3NhZ2Ugc2Nob29scyBoYXZlIGhhZCBlcm90aWNpc20gc3RyaXBwZWQgYXdheSBhbmQgb25lIGxhcmdlIHNjaG9vbCBpbiBOZXcgWW9yayBoYXMgYmVlbiBpbnN0cnVtZW50YWwgaW4gd3JpdGluZyBtYXNzYWdlIHJlZ3VsYXRpb25zLiBTdWNoIG1hc3NldXJzIHNlZSBUYW50cmljIHdvcmsgYXMgdW53b3J0aHkgb2YgdGhlaXIgInByb2Zlc3Npb24sIiBiZXNtaXJjaGluZyB0aGUgcHVyaXR5IG9mIHRoZWlyIHZhbmlsbGEgd29yay4gSSB3YXMgcmVjZW50bHkgdG9sZCBieSBhIHlvdW5nIG1hc3NhZ2Ugc3R1ZGVudCB0aGF0IGhpcyBzY2hvb2wgYWR2aXNlcyBhZ2FpbnN0IHVzaW5nIHRoZSB0ZXJtIG1hc3NldXIgaW4gZmF2b3Igb2YgTWFzc2FnZSBUaGVyYXBpc3QuIApZb3Uga25vdyB3aGF0IHJlYWxseSBzaGl0cyBtZS4gClRoZSByZWFzb24gd2UgZG8gbm90IGZlZWwgdGhpcyBpcyBiZWNhdXNlIG91ciBicmFpbiByZWxlYXNlcyBjZXJ0YWluIGNoZW1pY2FscyB0byBtYXNrIHRoZSBwYWluLiBUaGVzZSBjaGVtaWNhbHMsIG5vdGFibHkgdGhlIGVuZG9ycGhpbnMgYW5kIHNlcm90b25pbiwgYXJlIHdoYXQgYXJlIHJlc3BvbnNpYmxlIGZvciB0aGUgJ3J1bm5lcidzIGhpZ2gnIHdlIGZlZWwgYWZ0ZXIgYSBnb29kIHdvcmtvdXQuIApDZXJ0YWluIHBsYW50cyBoYXZlIGJlZW4gYnVybmVkIGZvciB0aGVpciBpbnRveGljYXRpbmcgb3IgYXBocm9kaXNpYWMgcHJvcGVydGllcy4gSW4gRGVscGhpLCBHcmVlY2UsIHRoZSBvcmFjbGUgcHJpZXN0ZXNzZXMgc2F0IG9uIHN0b29scyBvdmVyIGhvbGVzIGluIHRoZSBmbG9vciB0aGF0IGVtaXR0ZWQgZnVtZXMgb2YgYmF5IGxlYXZlcyB0byBpbnNwaXJlIHZpc2lvbnMuIApTUyBDbHViIGFjdGluZyBjaGllZiBleGVjdXRpdmUgR2VyYXJkIERhcm1vZHkgc2FpZCB0aGUgb3JnYW5pc2F0aW9uIGhhZCBkb25hdGVkIGl0cyB0aW1lIGFuZCBzb21lIGF1Y3Rpb24gaXRlbXMgdG8gdGhlIE11bHdhbGEgY2x1YiB0byBtYWtlIHRoZSBkYXkgYSBzdWNjZXNzLgpJdCBmdW5ueSwgYnV0IEkgdGhpbmsgaXQgYmVjYXVzZSBwZW9wbGUgaGVyZSBhcmUgcmVhbGx5IHByb3VkIHRoYXQgQW1lcmljYW5zIGhhdmUgYSBQcmVzaWRlbnQgd2hvIGlzIHNvIHNtYXJ0LCBzbyBtdWNoIHNtYXJ0ZXIgdGhhbiBCdXNoLiBUaGluayBpdCBhbHNvIG1lYW5zIGEgbG90IHRvIHRoZW0gdGhhdCBBbWVyaWNhbnMgc2VlbSB0byBoYXZlIHB1dCBjZW50dXJpZXMgb2YgcmFjaXNtIGFzaWRlIHRvIGVsZWN0IGEgQmxhY2sgbWFuIHRvby4gClRoZSBzb2NrcyB3aWxsIGJlIGZpbmlzaGVkIHdpdGgga2l0Y2hlbmVyIHN0aXRjaC4gVGhlcmZvcmUgY2FzdCBvbiAxMDQgc3RzIGluIGEgY29udHJhc3RpbmcgY29sb3IuCkRhdmlkIEFsYW4gR3JpZXI6IEl0IHdhcyBiYWxscm9vbSBvciBidXN0IGZvciBHcmllciwgd2hvIGhhZCB0byBkZWNpZGUgd2hldGhlciBoZSB3YW50ZWQgdG8gYmUgYSBzaG93bWFuIG9yIGEgcmVhbCBjb250ZW5kZXIuIEJ1dCB0b25pZ2h0IGhlIHByb3ZlZCBoZSBjYW4gZG8gYSBsaXR0bGUgb2YgYm90aC4gVGhlIEluIExpdmluZyBDb2xvciBjb21lZGlhbiBmb3ggdHJvdHRlZCBvdXQgcmh5dGhtIGFuZCBmbGV4aWJpbGl0eSBoaWdoIGtpY2tzISBoYWRuJ3QgeWV0IHNlZW4sIGFuZCBoZSBjdXQgcXVpdGUgdGhlIHJ1ZyB3aXRoIEt5bSBKb2huc29uLiAKU2hlIHdhcyBzdHVjayBpbiBhIFRlY2gvTWFudWZhY3R1cmluZyBjb21wYW55IGZvciB0aGUgcGFzdCBmZXcgeWVhcnMgdGhhdCB3YXMgdmVyeSBtdWNoIGFnYWluc3QgcHJvbW90aW5nIHdvbWVuLiAKWW91IGJldCBwb3QgYW5kIHZpbGxhaW4gY291bGQgY2FsbCB3aXRoIGEgZmx1c2ggZHJhdywgd2hpY2ggaXMgaW4gZmFjdCBmYXIgbW9yZSBsaWtlbHkgdGhhdCA4eCBzaW5jZSA4eCBpcyBqdXN0IGEgZ3V0c2hvdCBhbmQgdGhlcmUgYXJlbiB0aGF0IG1hbnkgY29tYm9zIG9mIDh4IHRoYXQgbWFrZSBzZW5zZS4gKEE4IGlzIHBvc3NpYmxlIGlmIGl0IHN1aXRlZCwgb3Igb2Zmc3VpdCBpZiB0aGUgZmllbGQgaXMgdGVycmlibGUgYmVjYXVzZSB0aGlzIGlzIHNvbWUga2luZCBvZiB1bml2ZXJzaXR5IGNsdWIgdG91cm5hbWVudCBvciBzb21ldGhpbmcsIGJ1dCBtdWNoIG1vcmUgbGlrZWx5IGFyZSA3OCBhbmQgODksIG5vdCBLOCBhbmQgdGhlIGxpa2UpLlR1cm4gc3Vja3MgYW5kIG1ha2VzIHRoaW5ncyByZWFsbHkgdW5jb21mb3J0YWJsZSBmb3Igb3ZlcnBhaXJzIGFuZCBzZXRzLiBZb3Ugbm93IGJldCAxMTAwMCBpbnRvIGEgcG90IG9mIDE4MDAwLiAKQ2x0dGlyci4gCkhvdyB0byBCZSBhIEdvb2QgTWFuYWdlciB3aXRoIFBpY3R1cmVzClR1cm4gYSBKIGFuZCByaXZlciBpcyAzLiBJIHR1cm4gbXkgY2FyZHMgb3ZlciBhbmQgaGUgYWxtb3N0IG11Y2tzIGFzIGhlIGlzIHN0YXJpbmcgYXQgdGhlIGJvYXJkLiAKTHVja2lseSB3ZSBkaWRuJ3QuLiAKWWVhciBieSB5ZWFyIHRoZSBnYW1ibGluZyBpbmR1c3RyeSBhbGwgYXJvdW5kIHRoZSB3b3JsZCBpcyBncm93aW5nIGFuZCBoZW5jZSBjb3VudHJpZXMgbWFrZSBuZXcgcmVndWxhdGlvbnMgaW4gb3JkZXIgdG8gYm90aCBwcm90ZWN0IGdhbWJsZXJzIGFuZCBpbXByb3ZlIHRoZSBzZXJ2aWNlIGdpdmVuIGJ5IGdhbWJsaW5nIG9wZXJhdG9ycy4gCkkgZGlnIGl0ISBBbHNvLCBJIGFncmVlIHdpdGggdGhlIGNvbW1lbnRzIGFib3V0IHdobyB5b3UgYXJlIHRhcmdldGluZy4gSSByZWFkIGEgYm9vayB0aGF0IEkgZmVlbCByZWFsbHkgaGVscGVkIG1lIHNwZWFrIHRvIGNsaWVudHMgd2hlbiBmaXJzdCBzaXR0aW5nIGRvd24gd2l0aCB0aGVtLiBZZWFoIHRoZXkga25vdyB3aGF0IHRoZXkgd2FudCB0byBkbywgeW91IGtub3cgaG93IHRvIHZpc3VhbGx5IHRlbGwgdGhlaXIgc3RvcnkgYnV0IGlzIHRoZWlyIGN1c3RvbWVyIHVuZGVyc3RhbmRpbmc/IFRoZSBib29rIGlzIGNhbGxlZCAiQnVpbGRpbmcgYSBzdG9yeSBicmFuZCIgIERvbmFsZCBNaWxsZXIuIEZvciB0aG9zZSB0aGF0IHdhbnQgdG8gZG8gY29tbWVyY2lhbCB0eXBlIHdvcmssIHRoaXMgYm9vayBpcyBleHRyZW1lbHkgaGVscGZ1bC4gSXQgcmVhbGx5IG1ha2VzIHlvdSBhIG1hcmtldGluZyBndXJ1IHRoYXQgY2FuIHRlbGwgYW4gYXdlc29tZSBzdG9yeSB2aXN1YWxseS4gVGhlcmUgaXMgYSBsb2NhbCBndXkgaGVyZSB0aGF0IGdvdCBjZXJ0aWZpZWQgaW4gdGhlaXIgdHJhaW5pbmcgY291cnNlIGFuZCBoZSBtYWtlcyBtb25leSBoYW5kIG92ZXIgZmlzdCB3aGlsZSBkb2luZyBhIGpvYiBoZSBsb3Zlcy4KWW91IGdvbmUgZnJvbSB3aW5uaW5nIDAvMTAwIGdhbWVzIHRvIHdpbGxpbmcgNjUvMTAwIGdhbWVzLCB3aXRob3V0IGdldHRpbmcgYmV0dGVyIGF0IHRlbm5pcyBhdCBhbGwuLiAKU2luY2UgaXQncyB2aWRlbyBwb2tlciwgd2UgY2FuIGFzc3VtZSB0aGF0IHRoZSBvbmx5IGNhcmRzIGRyYXduIGFyZSB0aGUgb25lcyB5b3Ugc3RhcnRlZCB3aXRoLiBUaGVyZSBhcmUgZXhhY3RseSA0NyBjYXJkcyBsZWZ0IGluIHRoZSBkZWNrLiAKQW5kIGhleSwgZnVjayB0aGUgcGVvcGxlIHdobyB1c2VkIGl0IGFzIGEgYmFja3VwIGRyaXZlLCBidXQgY29tZSBvbiwgdGhlcmUgbXVzdCBiZSBhIG1pZGRsZSBwb2ludC4gCklmIHlvdSBqdXN0IHNpdCB0aGVyZSBhbmQgb25seSBhZGRyZXNzIHRoZW0gd2hlbiB0aGV5IHRhbGsgdG8geW91LCB0aGV5IHdpbGwgbm90IHJlbWVtYmVyIHlvdSBhdCBhbGwuIApUaGUgd29vZGVuIGJyaWRnZSBiZXlvbmQgdGhlIHBhdGggaXMgbGluZWQgd2l0aCBib3hlcyBvZiBmbG93ZXJzIHdoaWNoIEkgYWx3YXlzIHdhbnRlZCB0byBpbmhhbGUgc2xvd2x5ICAgdGhlIHdhdGVyIGJlbG93IHVzIGd1cmdsaW5nIGJ5IGFzIHlvdSBwYXVzZWQgYXdoaWxlIHRvIGxldCBtZSBjYXRjaCB1cC4gClJlc2VhcmNoIHJldmVhbGVkIG1hcGxlIHNhcCBoYXMgbmF0dXJhbCBoeWRyYXRpbmcgcHJvcGVydGllcyBhbmQgaGFzIGJlZW4gdXNlZCBmb3IgZ2VuZXJhdGlvbnMgYW1vbmcgRmlyc3QgTmF0aW9ucyBpbiBDYW5hZGEgYW5kIGluIEtvcmVhLiBIZSB0aGVuIHJlYWNoZWQgb3V0IHRvIHRoZSBGZWRlcmF0aW9uIG9mIFF1ZWJlYyBNYXBsZSBTeXJ1cCBQcm9kdWNlcnMsIHdoaWNoIGhlbHBlZCB3aXRoIHJlc2VhcmNoIGFuZCBkZXZlbG9wbWVudCB0byBwcm9kdWNlIFNldmEgTWFwbGUgV2F0ZXIgYW5kIGNvbm5lY3RlZCB0aGUgZW50cmVwcmVuZXVycyB0byBwcm9kdWNlcnMgYW5kIGNvIHBhY2tlcnMuLiAKSXQgcHJvYmFibHkgbm90IGEgc2hvY2sgdGhhdCBBbXN0ZXJkYW0gYmFzZWQgaW5kaWUgc3R1ZGlvIE5vIFJlcGx5IEdhbWVzIHNhdyB0aGVpciBkZWJ1dCB0aXRsZSBTZWR1Y2UgTWUga2lja2VkIG9mZiBTdGVhbSwgdGhlIHViaXF1aXRvdXMgZGlnaXRhbCBkb3dubG9hZCBwbGF0Zm9ybSBmb3IgUEMgYW5kIE1hYyBnYW1lcy4gCkVnZ3MgYmVjb21lIHRyYW5zZmVyYWJsZS4gClRoZXJlIGlzIHNvbWV0aGluZyBtb3JlIGV4aGlsYXJhdGluZyBhYm91dCBzaXR0aW5nIGRvd24gdG8gYSB0YWJsZSBhbmQgZ2V0dGluZyBkZWFsdCB5b3VyIGhhbmQuIApTY2FsaWEgdXNlZCBoaXMga2VlbiBpbnRlbGxlY3QgYW5kIG1pc3Npb25hcnkgemVhbCBpbiBhbiB1bnlpZWxkaW5nIGF0dGVtcHQgdG8gbW92ZSB0aGUgY291cnQgZmFydGhlciB0byB0aGUgcmlnaHQgYWZ0ZXIgaGlzIDE5ODYgc2VsZWN0aW9uIGJ5IFByZXNpZGVudCBSb25hbGQgUmVhZ2FuLiBIZSBhbHNvIGFkdm9jYXRlZCB0aXJlbGVzc2x5IGluIGZhdm9yIG9mIG9yaWdpbmFsaXNtLCB0aGUgbWV0aG9kIG9mIGNvbnN0aXR1dGlvbmFsIGludGVycHJldGF0aW9uIHRoYXQgbG9va3MgdG8gdGhlIG1lYW5pbmcgb2Ygd29yZHMgYW5kIGNvbmNlcHRzIGFzIHRoZXkgd2VyZSB1bmRlcnN0b29kIGJ5IHRoZSBGb3VuZGluZyBGYXRoZXJzLgpPZiBjb3Vyc2UgeW91IGRvIG5vdCBoYXZlIHRvIHRha2UgYWxsIG9mIHRoZXNlIHRoaW5ncyBpbnRvIGNvbnNpZGVyYXRpb24gYXMgc29tZSBvZiB0aGVtIHdpbGwgbm90IGFwcGx5IHRvIHlvdS4gCkp1c3Qgc2F5aW4gSSBrbm93IHRoYXQgZmVlbCwgYnJvLCBhbmQgd2hpbGUgdGhhdCB3YXMgYSByaXNreSBjbGljaywgdGhpcyBwb3N0IHdhcyBhIDkvMTAsIDExLzEwIHdpdGggcmljZSwgd291bGQgcmVhZCBhZ2Fpbi4gSSBzZWUgd2hhdCB5b3UgZGlkIHRoZXJlIGFuZCBpdCBmZWVscyBnb29kIG1hbi4gCk91ciBhcGFydG1lbnQgYWdlbnQgY29tbWVudGVkIHRoYXQgd2UgbXVzdCByZWFsbHkgbGlrZSBlYWNoIG90aGVyIHRvIGJlIGFibGUgdG8gd29yayB0b2dldGhlciwgbGl2ZSB0b2dldGhlciwgQU5EIGhhdmUgbHVuY2ggdG9nZXRoZXIgYWxtb3N0IGV2ZXJ5IGRheSBoYWhhLi4gCkkgd2F0Y2hlZCBoZXIgdmlkZW9zLiBTaGUgc291bmRzIGxpa2UgYW4gaWRpb3QuIApKdXN0IGRvbiBleHBlY3QgYSAiU3IuIiBJRCByb2xlIGFuZCB5b3UgaGF2ZSBubyBwcm9ibGVtIHNvIGxvbmcgYXMgeW91IGludGVydmlldyB3ZWxsLiBBbmQgZm9yIGdvb2RuZXNzIHNha2UgICBoYXZlIGEgcG9ydGZvbGlvLiAKSSBrbm93IEkgYW0ganVzdCBhIGJ1bSBmdWNrIGdvYXQgbWlsa2VyIGNvbXBsZXRlbHkgcmVtb3ZlZCBmcm9tIHNvY2lldHkgKEkgbm90LCBhbmQgaGVyZSBhIGhpbnQgZm9yIHlvdTogcGVvcGxlIHlvdSB3b3JrIHdpdGgsIHlvdXIgZnJpZW5kcywgbm9ybWFsIHBlb3BsZSB2b3RlZCBmb3IgVHJ1bXAsIGFuZCB5b3Ugd291bGQgbmV2ZXIga25vdyBpdCksIGJ1dCBJIGEgRGF5IDEgdG9vLCBzbyBJIHRob3VnaHQgeW91IHNob3VsZCBoZWFyIChpZ25vcmUpIG15IHBlcnNwZWN0aXZlLiBFdmVuIHRob3VnaCB5b3Ugd2FudCB0byBzZWUgbWUgc2FkLi4gCk1lY2xpcyB5ZWxlcmluaW4gb3lsYW1hc25hIHN1bnVsYW4gMzkgbWFkZGUgdGVrIHRlayBveWxhbmQuIDUgdWJhdCAyMDE5IHRhcmlobGkgbWVjbGlzIHR1dGFuYWtsYXJubiBva3VudXAgb3lsYW5tYXMgaWxlIGJhbGF5YW4gdG9wbGFudGRhIGlsayBvbGFyYWsgYmFrYW5sa3RhbiBnZWxlbiBuZXJnZWxlciBtZWNsaXMgeWVsZXJpbmluIGdybmUgc3VudWxkdS4gCkp1ZGdlIEdheW5vciBzYWlkIE5pY2hvbGFzIGhhZCByZXBhaWQgc29tZSBtb25leSBidXQgJDIsNjIxLDYwNi4zMiBpbiByZXN0aXR1dGlvbiB3YXMgc3RpbGwgc291Z2h0IGZyb20gdGhlIHRoaWVmIHdobyBoYXMgYmVlbiBkZWNsYXJlZCBiYW5rcnVwdC4gCkluIGFueSBldmVudCwgdGhlcmUgYXJlIHN1Y2ggYSBsaW1pdGVkIG51bWJlciBvZiB0ZWFjaGVycyB0aGF0IGV4Y2VwdGlvbmFsIHRoYXQgdGhlcmUgc2ltcGx5IGFyZW4gZW5vdWdoIG9mIHRoZW0gdG8gc3RhZmYgYWxsIHRoZSByaWNoIGRpc3RyaWN0IHNjaG9vbHMgaW4gdGhlIFVuaXRlZCBTdGF0ZXMuLiAKQmVoaW5kIG1lLCB0aGVyZSB3YXMgdGhlIHN0YWlycyBsZWFkaW5nIHVwIChsZWZ0IG9mIGNhbWVyYSB2aWV3KSBhbmQgdGhlIGVudHJhbmNlIHRvIHRoZSBsaXZpbmcgcm9vbSAocmlnaHQgb2YgY2FtZXJhIHZpZXcpLiBNeSB5b3VuZ2VyIHNpc3RlciB3b3VsZCB0eXBpY2FsbHkgZmFsbCBhc2xlZXAgZXZlcnkgbmlnaHQgb24gdGhlIGNvdWNoIGluIGZyb250IG9mIHRoZSBUViBhbmQgbWFrZSBoZXIgd2F5IHVwIHRvIGJlZCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBuaWdodC4gClRoaXMgaXMgYW4gaW5jcmVkaWJseSBpbXBvcnRhbnQgcG9pbnQsIHRoYW5rIHlvdSEgQSB0aW1lbGluZSBpcyBmYWxsaW5nIGludG8gcGxhY2UuIFVuZm9ydHVuYXRlbHkgSSBoaXQgdGhlIGNoYXJhY3RlciBsaW1pdCBzbyBJIGFwcHJlY2lhdGUgdGhhdCB5b3UgcG9pbnRlZCBvdXQgdGhlIG1lZXRpbmcgYmV0d2VlbiBhIGZvcm1lciBSdXNzaWFuIGludGVsbGlnZW5jZSBhZ2VudCBhbmQgdGhlIFRydW1wIENhbXBhaWduIE1hbmFnZXIgYW5kIERlcHV0eSBDYW1wYWlnbiBNYW5hZ2VyIHdoaWNoIHRvb2sgcGxhY2UgaW4gYSBidWlsZGluZyBvd25lZCBieSBKYXJlZCBLdXNobmVyLiAKSmpvZTgwOCB1CkludGVyZXN0aW5nIGhvdyBtYW55IG9mIHRob3NlIGNvbW1lbnRpbmcgb24gdGhlIGFydGljbGUgdGhpbmsgZm9yY2luZyB0aGUgdXNlIG9mIGNhc2ggaXMgc3R1cGlkLiBBbWF6aW5nIGhvdyBtYW55IHBlb3BsZSBjb3VsZCBjYXJlIGxlc3MgYWJvdXQgcHJpdmFjeS4gU3VyZSwgSSB1c2UgZWxlY3Ryb25pYyBwYXltZW50cywgYnV0IEkgYWxzbyB1c2UgY2FzaCBhbmQga2VlcCBhIGdvb2QgYW1vdW50IG9mIGNhc2ggKGFsb25nIHdpdGggc29tZSBnb2xkKSBhdCBob21lIGluIGEgdmVyeSBsYXJnZSBndW4gc2FmZSBpbiBjYXNlIG15IGJhbmsgY2FuY2VscyBteSBjYXJkcyBkdWUgdG8gYSBoYWNrL3RoZWZ0LiBIZWNrLCBpbiAyMDA3LzIwMDggdGhlIGVudGlyZSBiYW5raW5nIHN5c3RlbSBhbG1vc3QgY29sbGFwc2VkLiBIb3BlIHRoYXQgbmV2ZXIgaGFwcGVucywgYnV0IHlvdSBuZXZlciBrbm93LgpXaGF0IGEgdHJlYXQgdG8gbWVldCBDbGV2ZXIgd2hlbiBJIHN0b3BwZWQgYnkgdGhlaXIgYm9vdGggYXQgdGhlIE5vcnRod2VzdCBGbG93ZXIgYW5kIEdhcmRlbiBGZXN0aXZhbCBpbiBTZWF0dGxlLiBJIHdhcyBjdXJpb3VzIGFib3V0IHRoZSB1c2Ugb2YgYmFtYm9vIGluIHRvZGF5IE5vcnRoIEFtZXJpY2FuIGxhbmRzY2FwZXMsIGVzcGVjaWFsbHkgbm93IHdpdGggc28gbWFueSBzbWFsbGVyIHNwYWNlIGdhcmRlbnMuCkhlcmUncyB3aGF0IHRoZSB2ZXJ5IHF1ZXN0aW9uYWJsZSBlbWFpbCBzYXlzLCBhbmQgd2hhdCB3ZSBrbm93IGlzIHRydWUgZmFsc2U6ClBlcnNvbmFsIGV4cGVyaWVuY2UgYXMgZ3Jvd2luZyB1cCAiQ2xlYW4gdGhlIGhvdXNlIGZvciB5b3VyIGh1c2JhbmQiICJZb3UgZ28gb3V0IGF0IG5pZ2h0IHRoZW4geW91IGRlc2VydmUgdG8gYmUgcmFwZWQuIiAoRmVsbG93IGNsYXNzbWF0ZSBzYWlkIHRoYXQgdG8gbWUpICJJZiB5b3UgZ2V0IGEgYm95ZnJpZW5kIGJlZm9yZSAxOCB0aGVuIHlvdSBhcmUgYSB3aG9yZS4iICJZb3UgY2FuJ3QgZG8gdGhhdCB5b3UgYXJlIGEgZ2lybC4iCldoYXQgYSBsb3Qgb2YgcGVvcGxlIGRvbiBrbm93IHMgdGhhdCBJc3RhbmJ1bCBzIGN0eSBvbiB0d28gY29udG5lbnRzLiBIYWxmIG9mIElzdGFuYnVsIGFuZCBhIHNtYWxsIHBhcnQgb2YgdGhlIGNvdW50cnkgYXJlIG9uIHRoZSBFdXJvcGVhbiBjb250bmVudC4gCkhvd2V2ZXIsIHRoZSBjb21wYW55IHNheXMgY2xhaW1zIGZyb20gdGhlIGZvcm1lciBlbXBsb3llZSB0aGF0IHRoZSBhdXRvIGFsZXJ0IHN5c3RlbSB3YXMgc3dpdGNoZWQgb2ZmIGlzIHVudHJ1ZTogIlRoZXkgd2VyZSBub3QgdHVybmVkIG9mZi4gQXV0b21hdGVkIGNvbGx1c2lvbiBhbGVydHMgYXJlIGFkZHJlc3NlZCBpbiBvcmRlciBvZiBwcmlvcml0eS4KSWYgdGhlIHBlb3BsZSBldmVyIGdvdCB0b2dldGhlciBhbmQgYWN0dWFsbHkgb3JnYW5pemVkIHRoZSBwb2xpY2Ugd291bGQgYmUgb3ZlcndoZWxtZWQgcXVpY2tseS4gSXQgd291bGQgcmVxdWlyZSBtaWxpdGFyeSBpbnRlcnZlbnRpb24gYXQgdGhhdCBwb2ludC4uIApGYWNlICBjZWxhLCBsZSBDb2xsZ2UgSmVhbiBkZSBCcmJldWYgZmFpdCBhdWpvdXJkJ2h1aSBzb24gbWVhIGN1bHBhLiAKTm8gbWF0dGVyIHdoYXQgeW91ciBnYW1lIGlzLCBvciB3aGF0IHlvdSBhcmUgbG9va2luZyB0byBnZXQgb3V0IG9mIGEgZ29vZCBwb2tlciB0YWJsZSwgdGhlcmUgaXMgYSBnb29kIGNoYW5jZSB0aGF0IHlvdSBjYW4gZmluZCBpdCB3aXRoIHRoZSA5NiBJbmNoIFRleGFzIEhvbGRlbSBUYWJsZSBXaXRoIFJlZCBGZWx0LiAKUGVvcGxlIHdobyBwcmV2aW91c2x5IHJvZGUgb24gdGhlIHRyYWluIGluIHRoZSBtb3JuaW5nIGJvdWdodCB0aGVpciBwYXBlciwgcmVhZCBpdCBhcyB0aGV5IHRyYXZlbGxlZCwgdGhlbiB3ZXJlIGtpbmQgZW5vdWdoIHRvIGxpdHRlciB0aGUgc2VhdHMgYW5kIHRhYmxlcyB3aXRoIGl0LlNvIHdoYXQgc2hvdWxkIHlvdSBkbz8gTGVhdmUgdGhlIGxpdHRlciB0aGVyZT8gTm8hIFlvdSBzaG91bGQgcGljayBpdCB1cCwgYW5kIHJlYWQgaXQuIFJlYWQgaXQgZnJvbSBiZWdpbm5pbmcgdG8gZW5kLiAKSGVyIGFkdmljZSBmb3IgZGVhbGluZyB3aXRoIHpvbWJpZXMgaXMgc2ltaWxhciBmb3IgZ3VpZGFuY2UgZGVhbGluZyB3aXRoIGEgcmVzaXN0YW50IHRvZGRsZXIuICJHaXZlIHRoZW0gbG90cyBvZiBjaG9pY2VzLiAKTmV2ZXJ0aGVsZXNzLCB3aGF0IGlmIGhlIGxvc2VzIHRoZSBuZXh0IHJvdW5kIGFuZCB5b3UgcGxhY2VkIHRvbyBtdWNoIG1vbmV5PyBUaGVuIGFsbCB5b3UgY2FuIHNheSBpcyBnb29kYnllIHRvIHlvdXIgY2FzaC4gCkkgZXhwZWN0IHRoZSBzYW1lIHRvIGdvIGZvciB0aGlzIGNvcCwgaGUgY2hvc2UgdGhlIGJhZGdlLCBoZSBzaG91bGQgb25seSBleHBlY3QgcmVzcGVjdCB3aGVuIGhlIGRlc2VydmVzIGl0LCBhbmQgaW4gdGhpcyBjYXNlIG91dHJhZ2Ugd2hlbiBoZSBkZXNlcnZlcyBpdC4uIApJdCBkaWRuIG1hdHRlciBpZiB5b3Ugd2VyZSBvdXQgaGlraW5nIGEgdHJhaWwgb3IganVzdCBzaXR0aW5nIG9uIHRoZSBjb3VjaCB3YXRjaGluZyBUVi4gCkdpdmUgdGhlbSBwcml2YWN5IGluIHRoZWlyIGJlZHJvb20gYW5kIHRoZSBiYXRocm9vbTsgZG8gbm90IHJlYWQgdGhlaXIgd3JpdHRlbiBvciBvZmZsaW5lIGpvdXJuYWwsIGJ1dCBzbm9vcCBvbiB0aGVpciBJbnRlcm5ldCB1c2FnZS4gCk1yUm9nZXJzV2FubmFiZSAgOSBwb2ludHMgIHN1Ym1pdHRlZCA5IGhvdXJzIGFnbwpUaGUgQnVyZWF1IG9mIExhYm9yIFN0YXRpc3RpY3MgcmVwb3J0cyB0aGF0IHBhcmFsZWdhbHMgaGFkIGFuIGF2ZXJhZ2Ugc2FsYXJ5IG9mICQ0Niw3MzAgcGVyIHllYXIgaW4gMjAxMS4gCkJpZW4gcXVlIHByc2VudGVzIGVuIHRycyBmYWlibGVzIHByb3BvcnRpb25zIGRhbnMgdW4gZ3JhbmQgbm9tYnJlIGRlIHBsYW50ZXMsIGxlcyBjb3VtYXJpbmVzICg4NTAgIDEgMDAwIGNvbm51ZXMpIHNvbnQgZGVzIG1vbGN1bGVzIGFyb21hdGlxdWVzIHRycyBwdWlzc2FudGVzLCBsYSB0YWlsbGUgbiBpY2kgYXVjdW4gcmFwcG9ydCBhdmVjIGxldXIgZWZmaWNhY2l0IGNvbW1lIG5vdXMgYWxsb25zIHBvdXZvaXIgbGUgY29uc3RhdGVyIHBhciBsYSBzdWl0ZS4gT24gbGVzIHRyb3V2ZSBkYW5zIGRpZmZyZW50ZXMgZmFtaWxsZXMgYm90YW5pcXVlcyA6LiAKU2xvdCBtYWNoaW5lcyByYW5nZSBpbiBkZW5vbWluYXRpb25zIGZyb20gMSBjZW50IHRvICQ1MDAuIFRoZSBCZWF1IFJpdmFnZSBDYXNpbm8gYWxzbyBoYXMgdGhlIG1vc3QgdGFibGUgZ2FtZXMgb2YgYW55IGNhc2lubyBpbiB0aGUgQmlsb3hpIGFyZWEgaW5jbHVkaW5nIEJsYWNramFjaywgQmFjY2FyYXQsIFBhaSBHb3cgYW5kIE1pc3Npc3NpcHBpIFN0dWQuIApUaGlzIGlzIHRoZSBmaXJzdCBSQ1QgYXNzZXNzaW5nIHRoZSBlZmZpY2FjeSBvZiBmdWxsLCBtdWx0aW1vZGFsLCBDUEcgYmFzZWQgdGhlcmFweSBmb3IgQU0gTEJQLiBUd28gcHJldmlvdXMgc3R1ZGllcyBkZW1vbnN0cmF0ZWQgdGhhdCBVQyBieSBQQ1BzIGFyZSBvZnRlbiBoaWdobHkgZ3VpZGVsaW5lIGRpc2NvcmRhbnQuCkV2ZW4gS1FvIG9yIEFKbyBmaXRzIGludG8gdGhpcyBkZXNjcmlwdGlvbi4gU2FtZSB3aXRoIDc3IG9yIEpUcy4gCk9uY2UgbXkgbmVwaGV3IGF0IGFib3V0IDMuNSB5ZWFycyBtb3ZlZCBhIGNoYWlyIHRvIGNsaW1iIG9uIHRoZSBraXRjaGVuIGNvdW50ZXIsIGFuZCB0aGVuIHNtYXNoZWQgbXkgYmV0dGEgaW4gdG8gdGhlIGdsYXNzIG1hcmJsZXMgYXQgdGhlIGJvdHRvbSBvZiB0aGUgdGFuayBiZWNhdXNlIGhlICJXYW50ZWQgdG8gc2VlIHdoYXQgaXQgd2FzIG1hZGUgb2YiLiBJIGRvbiB0aGluayBoZSBpbnRlbmRlZCB0byBodXJ0IHRoZSBhbmltYWwuIApUaGF0IG5vdCBhY3R1YWxseSBpdC4gVGhleSBqdXN0IGJlbGlldmUgdGhhdCBiZWluZyByYWNpc3QgaW5jbHVkZXMgb25seSB0aGUgbW9zdCB2aXJ1bGVudCBmZWVsaW5ncyBvZiBoYXRyZWQgb2YgYmxhY2sgcGVvcGxlICBsaWtlICJseW5jaGluZ3MgYXJlIGNvb2wiIHR5cGUgZmVlbGluZ3MuIEV2ZXJ5dGhpbmcgdXAgdG8sIGFuZCBqdXN0IHNob3J0IG9mIHRoYXQsIGlzbiByYWNpc3QsIGJ1dCBpcyBqdXN0ICJob3cgdGhlIHdvcmxkIGlzIiBhbmQgd2hlbiB5b3UgdGVsbCB0aGVtIHRoYXQgbm90IHdoYXQgcmFjaXNtIGFjdHVhbGx5IGlzIGFuZCB0aGF0IHRoZXkgaW5kZWVkLCBhcmUgcmFjaXN0LCB0aGV5IG5hdHVyYWxseSByZWZ1c2UgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIHNhbWUgY2F0ZWdvcnkgYXMgYSBseW5jaCBtb2IgYW5kIGJlY29tZSBob3N0aWxlLiAKSSB3YXMgYXR0YWNrZWQgYnkgYSBiYXQuIAoiWWVhaCwgc3ByaW50ZXJzIGFuZCBHQyByaWRlcnMgaGF2ZSBkaWZmZXJlbnQgdHlwZXMgYmVjYXVzZSB0aGVpciBtdXNjbGVzIHdvcmsgZGlmZmVyZW50bHkuIApXaGVuIHlvdSBlbnRlciB0aGUgcm9vbSBhbmQgc2VlIHlvdXIgY2xpZW50LCB0aGUgZmlyc3QgYW5kIHByb3BlciB0aGluZyB5b3Ugc2hvdWxkIGRvIGlzIHRvIGludHJvZHVjZSB5b3Vyc2VsZiBhbmQgc2hha2UgaGlzIGhhbmQuIApUaGUgcGl6emEgSSB1c2VkIHRvIGVhdCBhcyBhIGtpZCBpbiBNYW5oYXR0YW4gaXMgYSBzdGFwbGUgZm9yIGFsbW9zdCBhbnkgcmVzdGF1cmFudCBub3cgYW5kIGl0IGZpdHMgbW9zdCBwZW9wbGVzIHByZWZlcmVuY2VzLCB0aG91Z2ggbWFueSBkb24ndCBrbm93IHRoZSBvcmlnaW4gb2YgaXQgYW5kIGNvbmZ1c2UgZm9yIGl0IGJlaW5nIHRoZSBhY3R1YWwgb25lIGZyb20gQ2FtcGFnbmEuClRoZSBkZWNpc2lvbiBvZiB3aGF0IGtpbmQgb2YgcmUgYnV5IGlzIG9mZmVyZWQgbXVzdCBiZSBtYWRlIGJlZm9yZSBwbGF5IGJlZ2lucy4gR2VuZXJhbGx5LCByZSBidXlzIGF0dHJhY3QgbW9yZSBwbGF5ZXJzIHRoYW4gdGhleSBvZmZlbmQgICBvZnRlbiBjb25zaWRlcmVkIGJhZCBiZWF0IHByb3RlY3Rpb24uIApJIGhhdmUganVzdCBncm93biB0aXJlZCBvZiB0aGUgbWFueSBmbGF3cyB0aGF0IHBsYWd1ZSB0aGlzIGNvdW50cnkuIApJbiB0aGUgcGFzdCwgdGhlIGFnZW5jeSBoYXMgZHJhZ2dlZCBpdHMgZmVldCBvbiBwcm9tdWxnYXRpbmcgcmVndWxhdGlvbnMgYW5kIGhhcyBiZWVuIGNyaXRpY2l6ZWQsIGluY2x1ZGluZyBieSBqdWRnZXMsIGZvciBtYWtpbmcgc29tZSBkZWNpc2lvbnMgYWJvdXQgZ2FtYmxpbmcgd2l0aG91dCBnb2luZyB0aHJvdWdoIHRoZSBmb3JtYWwgcnVsZSBtYWtpbmcgcHJvY2Vzcy4KVGhlIHRvdGFsIG9kZHMgd2lsbCBiZSAxMiB0aW1lcyBpbiAyNjUyLiAKWWVhaCwgbm8sIGRvbiBsaXN0ZW4gdG8gdGhpcywgT1AuIFNoZSBtZWFudCB0aGF0IGFzIGEgcHV0ZG93bi4gU2hlIGltcGxpZWQgaGF2aW5nIGhpZ2hlciBtYXJrZXQgdmFsdWUgYW5kIGVhZ2VyIGNhbmRpZGF0ZXMsIGFuZCB0dXJuaW5nIHRoZW0gZG93biBmb3IgdHJpdmlhbCByZWFzb25zLCB3aGljaCBtZWFucyB0aGV5IHdlcmUgaW4gYWJ1bmRhbmNlLiAKQ3JpdGljYWwgUm9sZSBqdXN0IGZlZWxzIGxpa2UgdGhleSBwbG9wcGVkIGEgcmVjb3JkZXIgZG93biBvbiB0aGUgY2VudGVyIG9mIHRoZSB0YWJsZSBhbmQganVzdCB1cGxvYWRlZCB0aGUgd2hvbGUgZ2FtZSB3aXRoIDAgZWRpdGluZy4gSSBqdXN0IGRpZCBub3QgbGlrZSBpdC4KVGhlcmVzIGEgdG9uIG9mIGFjYWRlbWljIHJlc2VhcmNoIHlvdSBjYW4gcmVhZCwgSSBzdXJlLiBTZXggaXMgc2VlbiBhcyBhbmF0b215IGFuZCBiaW9sb2dpY2FsIHNjaWVuY2UsIGdlbmRlciBpcyBtb3JlIHRvIGRvIHdpdGggc29jaWFsIHJvbGVzIGFuZCBzb2NpYWwgc2NpZW5jZXMuClN1cHJlbWUgQ291cnQgd2hpY2ggc2tpcnRlZCB0aGUgaXNzdWUgZW50aXJlbHkgaW4gdGhlaXIgRWxrIEdyb3ZlIHYgTmV3ZG93IHJ1bGluZyBvbiBNYXJjaCAyNCwgMjAwNCwgZmluZGluZyB0aGF0IE5ld2RvdyBkaWQgbm90IGhhdmUgdGhlIHN0YW5kaW5nIHRvIHNwZWFrIGZvciBoaXMgZGF1Z2h0ZXIgKGZvciB3aG9tIHRoZSBjYXNlIHdhcyBvcmlnaW5hbGx5IGJyb3VnaHQpIGJlY2F1c2Ugc2hlIGxpdmVkIHdpdGggaGVyIG1vdGhlciwgYW5kIG5vdCB3aXRoIHRoZSBoZXIgZmF0aGVyIHdobyBpbml0aWF0ZWQgdGhlIGNhc2UuIApBIGJhY2tydWIgYWZpY2lvbmFkbyBoaW1zZWxmLCBjb21wYW55IFByZXNpZGVudCBNci4gWmFua2VyIG9wZW5lZCB0aGUgZmlyc3QgR3JlYXQgQW1lcmljYW4gQmFja3J1YiBvbiBNYW5oYXR0YW4ncyBVcHBlciBFYXN0IFNpZGUgaW4gT2N0b2JlciB0byBoZWF2eSBwdWJsaWNpdHksIGFuZCBidXNpbmVzcyBib29tZWQgaW1tZWRpYXRlbHkuQWR2ZXJ0aXNpbmcgaGFzIGNvbnNpc3RlZCBvZiBzaWducyBpbiBzdG9yZXMgYW5kIHByaW50ZWQgbWF0ZXJpYWwgYXZhaWxhYmxlIGZyZWUgaW4gbmV3c3BhcGVyIHN0eWxlIGRpc3BlbnNlcnMuIApUSEUgV0FSIE9OIFdPTUVOICAgQU5EIE1PUkU6IEl0IGNvdWxkIGJlIHdvcnNlLiBXZSBjb3VsZCBiZSBUZW5uZXNzZWUsIHdoaWNoIGlzIHRoZSBBcmthbnNhcyBSZXB1YmxpY2FuIFBhcnR5J3MgZGVzaXJlLiBUaGUgbGVnaXNsYXR1cmUgdGhlcmUgaGFzIGRlY3JlZWQgdGhhdCBhIG1pc2NhcnJpYWdlIG9mIGEgZmVydGlsaXplZCBlZ2cgY2FuIGJlIGNvbnN0cnVlZCBhcyBtdXJkZXIuIApIZXkgRG91ZywgVXBzd2luZyBtZW1iZXIgaGVyZS4gCkluIHRoZSB0ZWxldmlzZWQgb3BlbmVyLCBCcm9va2x5biBEYW5pZWwgTWlyYWNsZSBNYW4gSmFjb2JzICgzMCAxLCAyNyBLT3MpIGtub2NrZWQgZG93biBmb3JtZXIgd29ybGQgY2hhbXBpb24gU2VyZ2lvIExhdGluIFNuYWtlIE1vcmEgKDI4IDQgMiwgOSBLT3MpIHR3aWNlIG9uIGhpcyB3YXkgdG8gYSBzZWNvbmQgcm91bmQgc3RvcHBhZ2UgYW5kIGEgc3VjY2Vzc2Z1bCBkZWZlbnNlIG9mIGhpcyBtaWRkbGV3ZWlnaHQgd29ybGQgdGl0bGUuCkkga25vdyBpbiBteSBzdGF0ZSwgdGhlcmUgYXJlIGNlcnRhaW4gdGhpbmdzIHRoYXQgbmVlZCB0byBiZSBkb25lIGZvciBhbiBhZG9wdGlvbiB0byB0YWtlIHBsYWNlLiAKSGFkIGEgbG90IG9mIGFic29sdXRlbHkgdGVycmlibGUgcmVsYXRpb25zaGlwcyBpbiB0aGUgcGFzdCB0aGF0IEkgaGF2ZSBubyBpZGVhIHdoeSBJIHN0YXllZCBpbiB0aGVtIGZvciBzbyBsb25nLCBidXQgSSBkbyBoYXZlIG9uZSBzdG9yeSB0aGF0J3MganVzdCBraW5kIG9mIHdlaXJkIGFuZCByaWRpY3Vsb3VzIHRvIHRoZSBwb2ludCB0aGF0IGl0J3MgZnVubnkuIE15IGhpZ2ggc2Nob29sIGJveWZyaWVuZCB3YXMgYSBiaXQgb2YgYW4gb2RkIGJhbGwuIE9uZSBkYXkgaGUgZ2V0cyBhbGwgc2VyaW91cyBhbmQgc2F5cyB0aGF0IGhlJ3MgZGVjaWRlZCB0aGF0IGhlIHdhbnRzIHRvIGJlY29tZSBhIEJ1ZGRoaXN0LiAKVGhlIGZ1c2lvbiBJIGhhZCBpbmNsdWRlZCBhIGJvbmUgZ3JhZnQgZnJvbSBteSByaWdodCBwZWx2aWMgYXJlYSBhcyB3ZWxsIGFzIGEgcGxhdGUuIApIZSBjYXVnaHQgdGhlIG1lcmVzdCBmbGlja2VyIG9mIHJlY29nbml0aW9uIGZyb20gdGhlIGFwcGFyZW50IGRydW5rICAgaW4gcmVhbGl0eSBhIG1hbiBCbG9jaCBoYWQgdHJhaW5lZCB3aXRoIGZvciBtb250aHMuICJFZ2dzIjogY29kZSBmb3IgYSBkb3plbi4gCkl0IHdhcyBwcmVuYXRhbC4uIApJIHN0b3AgYW5kIGNoZWNrIG15IHN1cnJvdW5kaW5ncy4gV293IHRoZXJlJ3MgYSBwdXNzeSBpbiBteSBmYWNlLiBCZXR0ZXIgZWF0IGl0LiAKQWZmbGVjayByZWNlbnRseSB3ZW50IHRocm91Z2ggcmVoYWIgYW5kIGhhcyByZWNvdmVyZWQgYW5kIGlzIG5vdyBmb2N1c2luZyBvbiBmYW1pbHkgcmVsYXRpb25zaGlwcyBhbmQgaGlzIGNhcmVlci4gT3V0ZG9vciBzaG9wcyBzdWNoIGFzIGNvZmZlZSBzaG9wcywgY3VsaW5hcnkgc3R1ZGlvcyBhbmQgbW9yZSBhcmUgaG9tZSB0byBwZXJmb3JtZXJzIGFzIHRoZXkgcHVyc3VlIHRoZWlyIGRyZWFtcy4gRW5qb3kgdGhlIG11c2V1bXMsIGFydHMgYW5kIGVjbGVjdGljIG9wdGlvbnMgdG8gZXhwbG9yZSBpbiBCZXJrZWxleSwgd2hlcmUgdGhlIGV4cGVyaWVuY2UgaXMgdW5mb3JnZXR0YWJsZSBhbmQgdGhlIHBlb3BsZSB3aG8gaGF2ZSBsaXZlZCBhbmQgcHJvc3BlcmVkIGFyZSBpbnNwaXJhdGlvbmFsLi4gCkJ1dCBldmVuIGlmIHRoZSBCcml0aXNoIEVtcGlyZSBzdXJ2aXZlcywgaXQgaXMgcHJldHR5IGNsZWFyIHRoYXQgdGhlIEFtZXJpY2FuIEVtcGlyZSwgbGlrZSB0aGUgU292aWV0cyBiZWZvcmUgdGhlbSwgd2lsbCBjb2xsYXBzZSB1bmRlciB0aGUgd2VpZ2h0IG9mIHRoZSBlbmRsZXNzIHdhciBpbiBBZmdoYW5pc3Rhbi4gSXQgcHJldHR5IHNjYXJ5IHdoZW4gZXZlcnkgYXNzdW1wdGlvbiBvZiB0aGUgU292aWV0IGdvdmVybm1lbnQgbWlycm9ycyB0aGUgYXNzdW1wdGlvbnMgbWFkZSBieSBEdWJieWEgYW5kIG5vdyBPYmFtYS4gSXQgYWxzbyBwcmV0dHkgc2Nhcnkgd2hlbiB0aGUgbGlrZXMgb2YgTWlraGFlbCBHb3JiYWNoZXYgYXJlIHRyeWluZyB0byB3YXJuIE9iYW1hIG9mIHRoZSBkYW5nZXJzIG9mIHNlbmRpbmcgbW9yZSBhbmQgbW9yZSB0cm9vcHMgdG8gYmFjayB1cCBhbiB1bnBvcHVsYXIgZ292ZXJubWVudCB3aXRoIGFuIGV2ZW4gbGVzcyBwb3B1bGFyIHdhciBhbmQgbm8gb25lIGluIHRoZSBXaGl0ZSBIb3VzZSBzZWVtcyB0byBjYXJlLgpNeSBib2R5IGRpZCBub3Qgc2VlbSB0byBrbm93IHdoYXQgdG8gZG8uIEl0IHdhcyBBcHJpbCAyMDExIGFuZCB0aGUgYmFieSB3YXNuJ3QgZHVlIHVudGlsIEF1Z3VzdCwgeWV0IGhlcmUgc2hlIHdhcy4gClNoZSBvcGVubHkgd29uZGVyZWQgd2h5IG9mZmljaWFscyBhbGxvd2VkIHRoZSBldmVudCB0byBnbyBvbiBldmVuIHRob3VnaCBoaWdoIHdpbmRzIGhhZCBmb3JjZWQgdGhlIGNhbmNlbGxhdGlvbiBvZiBvdGhlciBvdXRkb29yIGNvbXBldGl0aW9ucyBzY2hlZHVsZWQgZWxzZXdoZXJlIGluIFB5ZW9uZ2NoYW5nLiAKVGhlIGNvc3QgY2FtZSB3aXRoIGEgZGlzY291bnQsIGl0IHdhcyBpbmV4cGVuc2l2ZSBmb3IgZXZlcnl0aGluZyB5b3UgZ2V0LCBhbmQgdGhleSB0cnVseSBtYWtlIHlvdSBmZWVsIGxpa2UgeW91J3JlIHBsYXlpbmcgaW4gYSBjYXNpbm8uIApbIlNjaWVuY2UgYW5kIEFydCIgaW4gTmF0dXJlLCB2b2wgMjgsIG5vIDcwNywgTWF5IDE3LCAxODgzLCBwcCA1MCA1MTsgd2l0aCAiU2NpZW5jZSBhbiBBcnQiIHNhbWUgdm9sdW1lLCBuby4gClRoZSBCZXN0IFNocmV2ZXBvcnQgQ2FzaW5vcwpJIGFtIGFsc28gbHVja3kgbXkgZXggd2lmZSBoYXMgbm8gaW50ZW50aW9ucyBvZiBzb3VyaW5nIG91ciByZWxhdGlvbnNoaXAuIFdlIGNvIHBhcmVudCwgZ28gdG8gYWxsIGhpcyBldmVudHMgdG9nZXRoZXIgYW5kIGhpcyBiaXJ0aGRheSBwYXJ0aWVzIGFyZSB0b2dldGhlci5CdXQgbXkgc3RlcCBzaWJsaW5ncyBoYWQgdGhlIHNhbWUgY3VzdG9keSB5b3UgZGlkLCBhbmQgdGhlaXIgbW90aGVyIHBvaXNpb25lZCB0aGVtIHRvIHRoZSBwb2ludCB0aGF0IHRoZXkgZGlkbiBzZWUgb3IgdGFsayB0byB0aGVpciBkYWQgdGlsbCB0aGV5IHdlcmUgaW4gdGhlaXIgbWlkIHR3ZW50aWVzIGFuZCByZWFsaXplZCB0aGV5IGhhZCBiZWVuIHBsYXllZC5Mb29rcyBsaWtlIGhlIGhhcyBib3VnaHQgaXQgYWxsIGhvb2sgbGluZSBhbmQgc2lua2VyIGFuZCB1c2VzIHlvdSBmb3IgY2FzaCBhbmQgYXMgYSBiaXQgb2YgYSBwdW5jaGluZyBiYWcuSSBoYXZlIG5vIGFkdmljZSwgYmVjYXVzZSB0aGlzIHNoaXQgaXNuIGEgZml4IHRoYXQgaGFzIGEgZGVmaW5pdGl2ZSBhbnN3ZXIsIGFuZCBtaWdodCBoYXZlIG5vIGFuc3dlci5JIGFtIHB1bGxpbmcgZm9yIHlvdSBhbmQgaG9wZSB5b3UgY29tZSBvdXQgb2YgdGhpcyBvay4gSSB0aGluayBpdHMgYSBub2JsZSBtb3ZlIHRvIG1ha2Ugc3VyZSB5b3UgZG9uIHRha2UgaXQgb3V0IG9uIHRoZSBraWQgb3IgeW91ciBraW5kIG9mIHNoaXR0eSBraWQuIApGaW5lZCBmb3IgSG9zdGluZyBIb21lIEJpYmxlIFN0dWRpZXMKSSBob3BlIEJHUyBpc24gdG9vIGZvY3VzZWQgb24gZ3JvdW5kaW5nIGl0IGluIHNjaWVuY2UuIEl0IGNvdWxkIHdvcmsgaWYgdGhleSBjb21lIHVwIHdpdGggc2NpZW5jZSBmb3IgdGhlIHNwZWNpYWwgcG93ZXJzIChsaWtlIHdpdGggQmlvdGljcyBpbiBNRSksIGJ1dCBtb3N0IHBlb3BsZSB0YWxraW5nIGFib3V0IGdyb3VuZGluZyBpdCBwcm9iYWJseSBtZWFuIHRoZXkgd2FudCBpdCB0byBiZSBoYXJkIHNjaWVuY2UsIGV2ZW4gaWYgaXQgaXMgc3RpbGwgc2NpIGZpLiAKNjYgQmFiaSBQYW5nYW5nJykuICdQYXRhdGplIEpvcHBpZScgYmVjYW1lIHRoZSB3aW5uZXIgb2YgdGhlIGNvbXBldGl0aW9uIGFuZCBpcyBub3cgYmVpbmcgc29sZCBhcyBsaW1pdGVkIGVkaXRpb24uICdQYXRhdGplIEpvcHBpZScgbWVhbiBGcmVuY2ggRnJpZXMgd2l0aCBKb3BwaWVzYXVzIC4gSW4gQmVsZ2l1bSwgdGhlIHNhbWUgY29udGVzdCB3YXMgaGVsZCBhbmQgdGhlaXIgY2hvaWNlcyB3ZXJlICdCaWNreSBDcmlzcCcgYW5kICdJbmRpYW4gQ3VycnkgU3R5bGUnLiBCaWNreSBpcyBhIHNvcnQgb2YgaGFtYnVyZ2VyIHNhdWNlIHdpdGggbWF5b25uYWlzZSwgb25pb25zIGFuZCBwaWNrbGVzLiAKSXQgbW9ja3MgQnJvb2tseW4gc2xvdyBtb3ZpbmcgUGFjaWZpYyBQYXJrIChuZSBBdGxhbnRpYyBZYXJkcykgd2hlcmUgYSBmZXcgdW5yZWxhdGVkIGJ1aWxkaW5ncyBhcmUgd2lkZWx5IHNjYXR0ZXJlZCBhbWlkc3QgZW1wdHkgbG90cy4gCkFuZCBpdCB3b3VsZCBleHBsYWluIG90aGVyIHRoaW5ncyBsaWtlIGEgdG9uIG9mIHRoZSBtZWdhIGZhdW5hIGdvaW5nIGV4dGluY3QgaW4gTm9ydGggQW1lcmljYS4gVGhlIGRpc2NvdmVyeSBvZiBjaXZpbGl6YXRpb24gc2l0ZXMgbGlrZSBHb2Jla2xpIFRlcGUgdGhhdCBhcmUgYXQgbGVhc3QgMTAgMTJrIHllYXJzIG9sZC4gQWxzbyBzb21lIHN0cnVjdHVyZXMgbGlrZSB0aGUgU3BoaW54IGluIEVneXB0IGFuZCBvdGhlciBtZWdhbGl0aGljIHN0b25lIHN0cnVjdHVyZXMgaW4gdGhlIHdvcmxkIG1heSBiZSBmYXIgb2xkZXIgdGhhbiBwcmV2aW91c2x5IHRob3VnaHQ/IFBsYXRvIGFjY291bnQgb2YgQXRsYW50aXMgYmVpbmcgd2lwZWQgb3V0IGFuZCBkZXRhaWxzIHRoYXQgbWFrZSBpdCBzZWVtIGxpa2UgdGhlIFJpY2hhdCBzdHJ1Y3R1cmUgbWlnaHQgYmUgYSByZWFsbHkgZ29vZCBjYW5kaWRhdGUgZm9yIHRoZSBsb2NhdGlvbiBvZiBhbiBhY3R1YWwgcGxhY2UuCldlIGhhdmUgdHdvIHBhaWQgb2ZmICgxMCB5ZWFyIHBsdXMpIHZlaGljbGVzIGFuZCBubyBvdGhlciBkZWJ0IHRoYW4gb3VyIG1vcnRnYWdlLiAKVGhhdCB0aGUgYWJzb2x1dGUgd29yc3QuIEJ5IHRoaXMgdGltZSwgSSB3YXMgYXQgdGhlIEVSLiAoV2hpY2ggd291bGQgZmluZSwgZXhjZXB0IEkgd2FzIGluIG5vcnRoZXJuIEFsYWJhbWEsIGluIGEgdG93biBjYWxsZWQgUGhpbCBDYW1wYmVsbCwgYW5kIHRoZSBjbG9zZXN0IEVSIHdhcyAzMCBtaW51dGVzIGF3YXkuIEl0IHdhcyB0aGlzIGxpdHRsZSA0IGJlZCBFUiwgYW5kIGl0IGhhZCBsaWtlIDQgcm9vbXMgaW4gaXQuKSBBbnl3YXlzLCB0aGV5IGNhbWUgaW4gYW5kIGdhdmUgbWUgYSBzaG90IGluIG15IGFzcywgd2hpY2ggZGlkIGFic29sdXRlbHkgbm90aGluZyBmb3IgdGhlIHBhaW4sIGp1c3QgbWFkZSBteSBhc3MgY2hlZWsgc29yZS4gCkhvd2V2ZXIgdGhlIHNjaG9vbGluZyByZWdhcmRpbmcgYmVjb21pbmcgYSBtYXNzYWdlIHRoZXJhcGlzdCBtaWdodCBkaWZmZXIgZnJvbSBvbmUgc3RhdGUgdG8gYSBkaWZmZXJlbnQuIApJIGxvdmVkIHRoZSBsb29rIG9mIHRoaXMgZGVzdGluYXRpb24gd2VkZGluZyBhbmQgY291bGRuIHdhaXQgdG8gZmluZCBvdXQgaG93IHRoZSBicmlkZSBtYW5hZ2VkIHRoZSBHYW5kaWEsIFNwYWluLCB3ZWRkaW5nIGZyb20gaGVyIGhvbWUgaW4gT3JsYW5kbywgRmxvcmlkYS4KV2hpdGUgSG91c2Ugc3Bva2VzbWFuIFRvbnkgRnJhdHRvIGRlbmllZCBIYWdnYXJkIHdhcyBhIHJlZ3VsYXIgcGFydGljaXBhbnQgaW4gd2Vla2x5IGNvbmZlcmVuY2UgY2FsbHMgYmV0d2VlbiBXaGl0ZSBIb3VzZSBvZmZpY2lhbHMgYW5kIGV2YW5nZWxpY2FsIGxlYWRlcnMgdGhhdCBiZWdhbiB3aGVuIFByZXNpZGVudCBCdXNoIHRvb2sgb2ZmaWNlIGluIDIwMDEgYW5kIGhhdmUgY29udGludWVkIHNpbmNlLgpUcnkgbG9va2luZyBmb3IgZGlmZmVyZW50IFBva2VyIFRhYmxlIEZlbHRzIHRoYXQgbWF0Y2ggeW91ciBwZXJzb25hbGl0eSBhbmQgc2VlIHdoYXQgeW91IGNhbiBmaW5kLiBJZiB5b3Ugd2FudCBhIHJveWFsIGJsdWUgZmVsdCwgdGhlbiBnbyBmb3IgaXQuIFRoZXJlIGFyZSBwcm9iYWJseSBhIGxvdCBtb3JlIG9wdGlvbnMgb3V0IHRoZXJlIHRoYW4geW91IGV2ZXIgdGhvdWdoLiAKRG9uIHRocm93IG91dCB0aG9zZSBicmVha2Zhc3QgbGVmdG92ZXJzISBGcmVlemUgdGhlbSBmaXJzdCBvbiBhIGJha2luZyBzaGVldCBpbiBhIHNpbmdsZSBsYXllciwgdGhlbiB3cmFwIHRoZW0gaW4gcGxhc3RpYyB3cmFwIHdpdGggYSBsYXllciBvZiB3YXggb3IgcGFyY2htZW50IHBhcGVyIGluIGJldHdlZW4gZWFjaDsgc2xpcCB0aGVtIGludG8gZnJlZXplciBwcm9vZiwgemlwcGVyIHRvcCBiYWdzOyBhbmQgZnJlZXplLiAKQ29sZCB3YXRlci4gVGhlIGVhc2llc3Qgc29sdXRpb24gaXMgdG8gdXNlIGNvbGQgd2F0ZXIgdG8gY29vbCBkb3duIHlvdXIgaGFuZHMuIENvb2xpbmcgZG93biB5b3VyIGhhbmRzIHdpbGwgcHJldmVudCBleGNlc3MgYmxvb2QgZnJvbSBmbG93aW5nIGludG8gdGhlIGhhbmRzLCB3aGljaCB1c3VhbGx5IGNhdXNlcyB0aGUgc3dlbGxpbmcgZXNwZWNpYWxseSBpZiB0aGUgc3dvbGxlbiBoYW5kIGlzIGNhdXNlZCBieSBhbiBpbmp1cnkuIFRha2UgYSBib3dsIHRoYXQgaXMgbGFyZ2UgZW5vdWdoIGZvciB5b3UgdG8gcGxhY2UgeW91ciBlbnRpcmUgaGFuZCBpbnRvLCBpbmNsdWRpbmcgdGhlIHdyaXN0cy4gQWRkIHdhdGVyIGFuZCBpY2UgY3ViZXMgYW5kIHN1Ym1lcmdlIHlvdXIgaGFuZHMgZm9yIGFyb3VuZCB0ZW4gbWludXRlcywgb3IgZm9yIGFzIGxvbmcgYXMgeW91IGNhbiB3aXRoc3RhbmQgdGhlIGNvbGQuIFJlcGVhdCB0aGlzIHdpdGggZml2ZSBtaW51dGUgaW50ZXJ2YWxzIGZvciBhYm91dCBhbiBob3VyLCBvciBmb3IgYWJvdXQgZml2ZSBkaXBzIGluIHdhdGVyLiBUaGUgY29sZCB3YXRlciB3aWxsIGNvbnN0cmljdCB5b3VyIGJsb29kIHZlc3NlbHMgYW5kIHByZXZlbnQgYmxvb2QgZnJvbSBmbG93aW5nIGludG8geW91ciBoYW5kcy4KU28gSSBzYWlkIHRvIGhpbSAiWW91J3JlIHRlbGxpbmcgbWUgdGhlIHBhaW4gSSdtIGluIEkgd2lsbCBoYXZlIGZvciB0aGUgcmVzdCBvZiBteSBsaWZlPyIgSGUgbG9va3MgYXQgbWUgYW5kIHNheXMgIlllcyBzbyB5b3UganVzdCBuZWVkIHRvIGxlYXJuIHRvIGxpdmUgd2l0aCBpdCIuIApTaWxseVJPSSAgMSBwb2ludCAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhlcmUgaXMgbm93IGRvdWJ0IHRoYXQgdGhlIHBsYW5lIHdhcyBodWdlIDExMicgbG9uZywgMjInIGhpZ2gsIHdpdGggYSB3aW5nc3BhbiBvZiAyMDYnIChhbmQgNSwyMDAgc3EgZnQgc3VyZmFjZSBhcmVhKSwgYW5kIHdlaWdoZWQgaW4gYXQgNTkgdG9ucyBhbmQgd2FzIGluZGVlZCB0aGUgbGFyZ2VzdCBwbGFuZSBpbiB0aGUgd29ybGQuIEl0IHdhcyBidWlsdCB2ZXJ5IHF1aWNrbHksIGFuZCBpdCBzaG93ZWQ7IGl0IG9mZmVyZWQgbm90aGluZyBuZXcgc28gZmFyIGFzIGRlc2lnbiBpcyBjb25jZXJuZWQsIGJlaW5nIGEgY29iYmxlZCBtb250YWdlIG9mIGV4aXN0aW5nIGJsdWVwcmludHMuIEl0IGRpZCBzZXQgd29ybGQgcmVjb3JkcyBmb3IgbGlmdGluZyBzdHVmZiwgYnV0IGJleW9uZCB0aGF0LCBpdCB3YXMgYSBoYWxmIGRlYWQgYmVoZW1vdGguCkkgaG9uZXN0bHkgaGFkIG5vIGlkZWEgd2hhdCB0byBleHBlY3QuIEJ1dCBhcyBJIHBhcmtlZCBteSBjYXIgYW5kIHdhbGtlZCB0byB0aGUgYXBhcnRtZW50IGJ1aWxkaW5nLCBteSBoZWFydCB3YXMgYmVhdGluZyBzbyBmYXN0IGFuZCBJIHN3b3JlIGV2ZXJ5b25lIHdhcyB3YXRjaGluZyBtZS4gCkkgdG9sZCB0aGVtIHdoYXQgd2FzIGdvaW5nIG9uLiBJIHdhcyBjb21wbGV0ZWx5IGJsdW50IGFuZCBzYWlkIHlvdSBhcmUgaGVyZSBmb3IgbXkgY2hpbGRyZW4gaW4gY2FzZSBteSBhaXJ3YXkgZ2V0cyBibG9ja2VkIGFuZCBpZiBpdCBkb2VzLCB5b3UgZ2V0IHByYWN0aWNlIG9uIGludHViYXRpbmcgaW4gdGhlIGZpZWxkLiAKU2VyaW91c2x5IHRob3VnaCwgeW91ciBhcmd1bWVudCBpcyBub25zZW5zZS4gSG93IGV4YWN0bHkgaXMgdGhlIHN0YXRlIG9mIFZBIHN1cHBvc2VkIHRvIHN0b3AgaWxsZWdhbCBwcml2YXRlIGd1biBzYWxlcyBpZiB5b3Ugc3RyaXAgdGhlbSBvZiBhbnkgd2F5IHNoYXBlIG9yIGZvcm0gb2Ygc2hvd2luZyB0aGF0IHRoZSBwZXJzb24gaXMgbWFraW5nIGd1biBzYWxlcz8gUmlnaHQgbm93IHlvdSBoYXZlIHRvIGJlIGEgY29tcGxldGUgZnVja2luZyBtb3JvbiB0byBnZXQgY2F1Z2h0LiAiRG8geW91IHNlbGwgZ3VucyB0byBmZWxvbnM/IiBObyAiV2VsbCB5b3VyIG5laWdoYm9yIHNhaWQgeW91IGRpZC4gIk9oIHdlbGwuIFlvdSBjYW4gZ2V0IGFueSBmb3JtIG9mIHByb29mIHRoYXQgYSBzYWxlIGV2ZW4gb2NjdXJyZWQgYmVjYXVzZSBtdXJpY2EuIgpUaGUgUHJlb3BlcmF0aW9uYWwgU3RhZ2VUaGlzIHN0YWdlIHNwYW5zIHRoZSBlYXJseSBjaGlsZGhvb2QgeWVhcnMgb2YgYWJvdXQgMiB0aHJvdWdoIDcuIFRoZSBhYmlsaXR5IGZvciByZXByZXNlbnRhdGlvbiBhbmQgYW4gdW5kZXJzdGFuZGluZyBvZiBzeW1ib2xzIGdyZWF0bHkgaW5jcmVhc2VzIGR1cmluZyB0aGlzIHN0YWdlIGFzIGRvZXMgdGhlIHByb3BlbnNpdHkgZm9yIG1ha2UgYmVsaWV2ZSBwbGF5LiBBIGNoaWxkIHVuZGVyIHR3byB5ZWFycyBvZiBhZ2Ugd2lsbCBvZnRlbiBub3QgdXNlIGFuIG9iamVjdCBpbiBwbGF5IGFuZCBwcmV0ZW5kIGl0IGlzIGFub3RoZXIgb2JqZWN0LiBBZnRlciB0d28geWVhcnMgb2YgYWdlIGNoaWxkIHdpbGwgdXNlIHdoYXRldmVyIGlzIGhhbmR5IHRvIHN0YW5kIGluIGZvciB3aGF0IGV2ZXIgb2JqZWN0IHRoZWlyIG1ha2UgYmVsaWV2ZSBwbGF5IHJlcXVpcmVzLiBGb3IgaW5zdGFuY2UgdG8gYSBjaGlsZCB1bmRlciAyIGEgdG95IHBob25lIGlzIGEgdG95IHBob25lIGFuZCBub3RoaW5nIGVsc2Ugd2hpbGUgY2hpbGRyZW4gb3ZlciB0aGUgYWdlIG9mIDIgbWlnaHQgcHJldGVuZCBhIHRveSB0cnVjayBpcyBhIHRveSBwaG9uZS4gVGhlcmUgaXMgYSBncmVhdCBleHBhbnNlIG9mIGltYWdpbmF0aW9uIGFuZCBhZGFwdGFiaWxpdHkgaW4gcGxheS4gVGhpcyBtYWtlIGJlbGlldmUgaXMgdmVyeSBpbXBvcnRhbnQgaW4gdGhlIHByb2Nlc3Mgb2Ygb3NzaWZ5aW5nIHNjaGVtYXMgYW5kIGluIG9yZ2FuaXppbmcgYSB2YXN0IGFycmF5IG9mIGluZm9ybWF0aW9uIGRyYXduIGZyb20gb2JzZXJ2YXRpb24gYW5kIGV4cGVyaWVuY2UuCldhbGVzIGFsc28gY3VycmVudGx5IG1ha2luZyBjaGFuZ2VzIHRvIGtlZXAgaW4gbGluZSB3aXRoIGZpbmFuY2VzLiAKUmVjZW50IHJlc2VhcmNoIGhhcyBzaG93biB0aGF0IHBoeXNpY2FsIGFjdGl2aXR5IGJlbmVmaXRzIHNwYXRpYWwgbWVtb3J5IGluIGFnaW5nIHJvZGVudHMsIGV2ZW4gdXBvbiBsYXRlIGxpZmUgb25zZXQuIApXZWxsbmVzcyBwcm9ncmFtcyBhbHNvIHJlZHVjZSB0aGUgbnVtYmVyIG9mIHdvcmsgcmVsYXRlZCBpbmp1cmllcyBhbmQgcmVwZXRpdGl2ZSBzdHJhaW4gaW5qdXJpZXMuIFRoYXQgbWVhbnMgZmV3ZXIgd29ya2VyJ3MgY29tcGVuc2F0aW9uIGNsYWltcywgd2hpY2ggc2F2ZXMgYm90aCB5b3UgYW5kIHlvdXIgaW5zdXJlciBtb25leS4uIApBbGFza2FmaXNoICA5NCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KIlBlcm8gZXN0b3kgZGUgYWN1ZXJkbyBlbiBsaWJyYXJub3MgZGUgZWxsb3MuIFkgbm8gc29sbyBwb3JxdWUgbWUgdmEgYSBhaG9ycmFyIGRpbmVyby4gQ3VhbmRvIHBvbmVzIHVuIGJyYXphbGV0ZSBkZSBsYXMgV1NPUCBlbiBqdWVnbywgdG9kbyBlbCBtdW5kbyBkZWJlIHRlbmVyIGxhcyBtaXNtYXMgb3BvcnR1bmlkYWRlcyBkZSBnYW5hcmxvLCBubyBsYXMgcXVlIHRlIG9mcmV6Y2EgdHUgY2FydGVyYS4gRmF2b3JlY2VuIGEgbG9zIHF1ZSBlc3RuIGRpc3B1ZXN0b3MgYSBnYXN0YXIgbXMuIEVzbyBlcyBidWVubyBwYXJhIG0sIHBvcnF1ZSB5byBlc3RveSBwb3IgbGEgbGFib3IgZGUgZ2FzdGFyIG11Y2hvLCBwZXJvIHMgcXVlIGVzIHVuYSB2ZW50YWphIGluanVzdGEsIHkgcHJlZmllcm8gbm8gdGVuZXJsYS4iCldobyB3YXMgdGhlIE1hbmRhbGF5IEJheSBhdHRhY2tlciBhbmQgd2hhdCB3YXMgaGlzIG1vdGl2ZQpBYm91dCAyMyw1MDAgc3R5bGlzdHMgd29ya2VkIGZvciBkZXBhcnRtZW50IHN0b3JlcyBpbiBNYXkgMjAxMSBhbmQgZWFybmVkICQyMiw4ODAgYSB5ZWFyIG9uIGF2ZXJhZ2UuIApJbCBlc3QgY3JkaXQgZGUgbm9tYnJldXNlcyB2ZXJ0dXMsIG1haXMgbGEgcGx1cyBpbnRyZXNzYW50ZSBlc3QgbCdlZmZldCBxdSdpbCBwcm9kdWl0IHN1ciBsZXMga3lzdGVzIGV0IGxlcyB0dW1ldXJzLiAKSSB0aGluayBhdCBmaXJzdCBpZiBpdCdzIGp1c3QgaGltLCBoZSdsbCBnZXQgdGhlIE1lbG8gdHJlYXRtZW50LiBJZiBib3RoIGhpbSBhbmQgS3lyaWUgZ28gdGhlbiBpdCdsbCBiZSBpbnRlcmVzdGluZyB0byBzZWUgaG93IGl0IGRldmVsb3BzIGFuZCB3aGljaCBvbmUgdGhlIG1lZGlhIHdpbGwgImJsYW1lIiBtb3JlLiAKSmFtZXMgdmV1dCBzYXZvaXIgbGEgdnJpdCBzdXIgY2UgcXVpIHMnZXN0IHJlbGxlbWVudCBwYXNzIHVuZSBudWl0IGRhbnMgdW4gaHRlbCBkZSBMZWVkcyBlbnRyZSBTdGVsbGEsIHNhIGZlbW1lLCBldCBCaWxsLiBCaWxsIHZpdCBjaGV6IEhhcnJ5ICBCZWxncmF2aWEsIHVuIHF1YXJ0aWVyIGh1cHAgZGUgTG9uZHJlcywgU3RlbGxhIGV0IEphbWVzICBDaGVsc2VhLCBsZSBxdWFydGllciBkZXMgYXJ0aXN0ZXMuIApIZXJlJ3Mgd2h5IGV2ZXJ5IGNpdHkgaGFsbCBuZWVkcyBhIGdvb2QgZGVjbHV0dGVyaW5nRXZlcnkgc21hbGwgYnVzaW5lc3Mgb3duZXIgaW4gdGhpcyBjb3VudHJ5IGhhcyBhIHJlZCB0YXBlIHN0b3J5LiBTb21lIGFyZSBzaG9ja2luZ1JlZCB0YXBlIGFuZCB5b3VyIGdvdmVybm1lbnQ6IEhvdyBjdXR0aW5nIGJ1cmVhdWNyYWN5IGJvb3N0ZWQgTWFuaXRvYmEncyBncm93dGhPdGhlciByZWNpcGllbnRzIG9mIHRoZSBhd2FyZCBhcmUgZm9ybWVyIFByZXNpZGVudCBvZiB0aGUgVHJlYXN1cnkgQm9hcmQgU2NvdHQgQnJpc29uLCBOb3ZhIFNjb3RpYSBQcmVtaWVyIFN0ZXBoZW4gTWNOZWlsIGFuZCBIYWxpZmF4IE1heW9yIE1pa2UgU2F2YWdlLCB0aGUgQ0ZJQiBzYWlkIFRodXJzZGF5LiBXaGlsZSB0aGUgYnVzaW5lc3MgYWR2b2NhY3kgZ3JvdXAgdHlwaWNhbGx5IGFubnVhbGx5IGF3YXJkcyBhIHNpbmdsZSB3aW5uZXIsIHRoaXMgeWVhciBpdCBicm9rZSB3aXRoIHRyYWRpdGlvbiB0byBtYXJrIHRoZSAxMHRoIGFubml2ZXJzYXJ5IG9mIFJlZCBUYXBlIEF3YXJlbmVzcyBXZWVrLCBhbmQgc2VsZWN0ZWQgYSB3aW5uZXIgZnJvbSBlYWNoIGxldmVsIG9mIGdvdmVybm1lbnQuCkMgbCBxdSBlc3QgdmVudSBsYSBjaGVyY2hlci4gQyB1biBhbWkuIApMZXQgbm90IGV2ZW4gZ2V0IHN0YXJ0ZWQgb24gdGhlIGFtb3VudCBvZiBwdWJsaWMgbW9uZXkvcmVzb3VyY2VzIHRoYXQgdGhyb3duIGludG8gdGhlIHRyYXNoIGNhbiB0byBhbXVzZSBhbmQgY2xlYW4gYWZ0ZXIgdGhlc2UgcGVvcGxlLiAKQnV0IGxldCBpbWFnaW5lIGFuIGFsdGVybmF0ZSB0aW1lbGluZSB3aGVyZSBodW1hbml0eSBuZXZlciBjb2xvbml6ZXMgdGhlIHN0YXJzIGFuZCBqdXN0IGRpZXMgb3V0IG9uIEVhcnRoLiBUaGUgbmV4dCBncm91cCB0aGF0IHdvdWxkIGhhdmUgdGhlIHNsaWdodGVzdCBjaGFuY2UgdG8gcmUgZGlzY292ZXIgVm95YWdlciBJIHdvdWxkIGJlIHRoZSB3YWF0YS4gVGhpcywgb2YgY291cnNlLCBhc3N1bWVzIHRoYXQgdGhlIHdhYXRhIGFjdHVhbGx5IGFyZSBhbiBpbmRlcGVuZGVudCBzYXBpZW5jZSBldmVudCBhbmQgbm90IGRlcGVuZGVudCBvbiBodW1hbml0eSBpbiBvcmRlciB0byBleGlzdCAodGhlcmUgZGViYXRlIG9uIHRoYXQgcG9pbnQpLiBCeSB0aGUgdGltZSB0aGUgZnJvbnQgb2Ygd2FhdGEgY29sb25pemF0aW9uIGFwcHJvYWNoZXMgRWFydGgsIFZveWFnZXIgaGFzIGJlZW4gYWRyaWZ0IGZvciBzb21lIDQ1MCwwMDAgeWVhcnMgYXQgbGVhc3QgYW5kIGlzIG1vcmUgdGhhbiAyNSBsaWdodCB5ZWFycyBmcm9tIEVhcnRoLgpXaXRoIHRoZSBkaXNhc3RlciBGYWxsb3V0IDc2IGhhcyBiZWNvbWUsIEkgYW0gYWxzbyBiZXR0aW5nIHRoZXkgd2lsbCB3YW50IHRvIHNob3cgdXMgU3RhcmZpZWxkIHRvIGJldHRlciBhc3N1cmUgdXMgdGhhdCBGYWxsb3V0IDc2IGlzbiB0aGUgZW5kIG9mIHRoZWlyIGNvbXBhbnkuIApNb3JlIFN0b3JpZXMgS2xlZW5tYWlkIGZyYXVkIGFwcGVhbCBpbiBwaXBlbGluZSBBdXNzaWUgamFpbGVkIGluIFVTIGZvciAkMTk2bSBtb2JpbGUgcGhvbmUgZnJhdWQgUm9uYWxkbyBjb3BzICQzMG0gdGF4IGZpbmUsIGF2b2lkcyBqYWlsIFNhbGltIGJyZWFrcyBkb3duIG92ZXIgdm90ZXIgZnJhdWQgQXVzc2llcyAnYWNjZXB0JyBkYXRhIGJyZWFjaGVzIENodXJjaCBzdWVzIGZvcm1lciBzdGFmZmVyIHRvIGNsYXcgYmFjayBjYXNoIFB1bnRlciBtaXJhY3Vsb3VzbHkgdHVybnMgJDcgaW50byAkMS40bQpNb25leSBpbnNlcnQvcmV0dXJuIHNsb3RzOiBDYXNoIGluc2VydCwgdm91Y2hlciBhbmQgY2x1YiBjYXJkIHNsb3RzIGFyZSBwb3NpdGlvbmVkIGFyb3VuZCB0aGUgc2NyZWVuIGFyZWEgb2YgdGhlIG1hY2hpbmUuIFdoZW4geW91IGZpbmlzaCBwbGF5aW5nLCB0aGUgbWFjaGluZSB3aWxsIHJldHVybiB5b3VyIGJhbGFuY2UgaW4gdGhlIGZvcm0gb2YgYSB2b3VjaGVyLiBUaGlzIHNsb3QgaXMgYXQgdGhlIHRvcCBsZWZ0LiBJbnNlcnQgeW91ciBwbGF5ZXIncyBjbHViIGNhcmQgaW4gaXRzIHNsb3QgYmVmb3JlIHlvdSBzdGFydCBwbGF5aW5nIHNvIHlvdSBjYW4gZWFybiByZXdhcmQgcG9pbnRzLiBNYWtlIHN1cmUgdGhhdCB0aGUgY2FyZCBoYXMgYmVlbiBhY2NlcHRlZC4KSGVjdG9yIHNheXMgaXQgaW1wb3J0YW50IHRvIGhhdmUgaW4gcmV0aXJlbWVudCBhY2NvdW50cy4gSWYgYWxsIHlvdXIgc2F2aW5ncyBhcmUgb25seSBpbiBhbiBSUlNQLCBsYXJnZSBvbmUgdGltZSBjYXNoIHdpdGhkcmF3YWwgcmVxdWlyZW1lbnRzIGNhbiBnZXQgZXhwZW5zaXZlLiBCdXQgc29tZW9uZSB3aXRoIGEgY29tYmluYXRpb24gb2YgVEZTQSwgUlJTUCBhbmQgbm9uIHJlZ2lzdGVyZWQgYWNjb3VudHMgY2FuIGluc3RlYWQgcHVsbCBsdW1weSBwYXltZW50cyAoZm9yIGEgbmV3IGNhciBvciBob21lIHJlbm92YXRpb24sIGZvciBleGFtcGxlKSBmcm9tIG5vbiB0YXhhYmxlIGFjY291bnRzLgpGb3IgTGVuaW4gdGhlcmUgbmVlZGVkIHRvIGJlIGEgdmFuZ3VhcmQgcGFydHkgdG8gbGVhZCB0aGUgcmV2b2x1dGlvbiBhbmQgdGVhY2ggd29ya2VycyBhYm91dCBob3cgdGhleSdyZSBvcHByZXNzZWQuIApHb3JvZGV0c2t5cmVjYWxscyBsZW5kaW5nIEJlY2toYW0gJDEwLDAwMCB0byBwbGF5IGJsYWNramFjaywgYW5kIGhlIGFsc28gc2hvd2VkIFVTQSBUb2RheSBhIHRleHQgbWVzc2FnZSBwdXJwb3J0ZWRseSBvZiBCZWNraGFtIGV4cHJlc3NpbmcgaW50ZXJlc3QgaW4gbWFraW5nIGEgJDIwLDAwMCBiZXQgb24gYSBiYXNlYmFsbCBnYW1lLi4gCiJZb3UndmUgZ290dGEgaGF2ZSB0aGUgdG91Y2gsIG9idmlvdXNseSwgeW91IGtub3cgd2hhdCBJJ20gc2F5aW5nPyIgTW9ycmlzIHNhaWQuICJIZSBkaWRuJ3Qga25vdyBob3cgdG8gcGxheSBhdCBmaXJzdCwgYW5kIG5vdyBoZSdzIHJlYWxseSBnb29kIGF0IGl0LiBIZSBmb3VuZCBoaXMgcmh5dGhtLiBJdCdzIGxpa2UgYmFza2V0YmFsbDogWW91IHNob290IGEgbGl0dGxlIGJpdCBhbmQgeW91J3JlIG9mZiwgYW5kIHRoZW4geW91IGZpbmQgdGhhdCByaHl0aG0gYW5kIGdvIGZyb20gdGhlcmUuIgpNciBBY2h0ZXJzdHJhYXQgc2F5cyAiYW4gYWJzZW5jZSBvZiBwcm9wZXIgbW9uaXRvcmluZyIgb2YgQ2F0ZWdvcnkgMSBleHBlbmRpdHVyZSBtZWFudCB0aGVyZSB3YXMgImxpbWl0ZWQgYXNzdXJhbmNlIHRoYXQgQ2F0ZWdvcnkgMSBpcyBlZmZlY3RpdmVseSBtYW5hZ2VkIi4gCkJ1dCB0aGUgbWFuIGRvZXMgbm90IHNlZW0gY2FwYWJsZSBvZiBjYXJyeWluZyBvdXQgaGlzIG93biBpbml0aWF0aXZlIGFuZCBrZWVwcyBzdXJyb3VuZGluZyBoaW1zZWxmIHdpdGggcGVvcGxlIHdobyBhcmUgcHJhY3RpY2FsbHkgb3Blbmx5IHNhYm90YWdpbmcgbmVnb3RpYXRpb25zLiAKVGhpcyBhIGxvdCBvZiB0ZXh0IHRvIHNheSBsaXR0bGUuIApUaGV5IG1hdGUgb25jZSBhbmQgdGhlbiwgeW91IGtub3csIHRoZXkgZGVjYXBpdGF0ZSB0aGUgcGFydG5lciwgaXQgaXQgYSB3aG9sZSByaXR1YWwsIGl0IHRvdGFsbHkgZ3J1ZXNvbWUgYW5kIHRvdGFsbHkgb3Bwb3NpdGUuIApBZnRlciBob3cgbWFueSBkYXlzIHdvdWxkIHRoaXMgcGF0aWVudCBiZSBjb25zaWRlcmVkICJzdGFibGUsIiB0aGF0IGlzIHRvIHNheSwgdGhlaXIgYmxvb2Qgc2VydW0gbGV2ZWxzIGhhdmUgcmVhY2hlZCB3aXRoaW4gMC4xJSBvZiB0aGUgbGltaXQgdGhhdCBpdCBhcHByb2FjaGVzPyAoQXQgdGhpcyBwb2ludCwgd2UgY2FuIGFzc3VtZSB0aGUgcmVtYWluZGVyIG9mIHRoZSBmaXJzdCBkb3NlIGhhcyBhIG5lZ2xpZ2libGUgZWZmZWN0LikuIApDb3JyZWN0LiBXZSdkIGJlIGFibGUgdG8gc2VlIHRoZSB0aGUgVlBOIGNvbm5lY3Rpb24gYW5kIG5vdGhpbmcgZWxzZS4gClRoZW4gc2hlIGNvbnN1bHRzIGEgY2hhcnQgb2YgImF0dGFjaG1lbnQgcG9pbnRzIiAob3IgbXVzY3Vsb3RlbmRpbm91cyBqdW5jdHVyZXMgb2YgdGlzc3Vlcykgd2hpY2ggZGV0ZXJtaW5lcyB3aGVyZSB0byBwdXQgZGVlcCBwcmVzc3VyZSBhbmQgaG9sZCBpdCB0aGVyZSB1bnRpbCB0aGVyZSBpcyBhIHRpc3N1ZSBjaGFuZ2UuIFRoaXMgYWZmZWN0cyB0aGUgbmVydm91cyBmaWJlciBzeXN0ZW0sIE1vb24gc2F5cy4gU2hlIHVzZXMgaGVyIHRodW1iIHRvIHB1dCBwcmVzc3VyZSBvbiBzbWFsbGVyIG11c2NsZXMgYW5kIGxpZ2FtZW50cyBhbmQgaGVyIGVsYm93IGZvciBiaWdnZXIgYXJlYXMuLiAKU28gSSBtYWtlIGhlciBvbmUsIGFuZCBqdXN0IGxldCBoZXIgYmUgd2hpbGUgc2hlIGRyYW5rIGl0LiBJdCBnaXZlIGhlciB0aW1lIHRvIGNoaWxsLCBhbmQgcHV0IGhlciBmcnVzdHJhdGlvbnMgaW50byB3b3Jkcy4gU2hlIHN0aWxsIGRvZXMgaXQsIGFuZCBzaGUgMTEuLiAKSXQgc2VlbXMgaGUgZXZlbiBiZWNhbWUgY29uc2Npb3VzbHkgYXdhcmUgb2YgaG93IGF3ZnVsIGhlIGhhZCBiZWVuIHRvIE9QIGluIHRoZSBsYXN0IHR3byBtZXNzYWdlcyBzZW50IGZyb20gaGltIGFsdGhvdWdoIGhlIGFsc28gc2VlbWVkIHRvIHJlYWxpemUgaXQgd2FzIG11Y2ggdG9vIGxhdGUgZm9yIHRoYXQgc29ydCBvZiBhcG9sb2d5IGFzIHNvbWUgdGhpbmdzIGNhbm5vdCBiZSB1bnNhaWQgYW5kIGFsbC4gCklmIEkgcmVtZW1iZXIgY29ycmVjdGx5LCBpdCB3YXMgNDAwMCB3b24gZm9yIG1lIHRvIGdldCBhbiBleGFtIGFsb25lLCBhbmQgdGhhdCB3YXMgd2FpdmVkIGlmIEkgYm91Z2h0IHNvbWV0aGluZyBmcm9tIHRoZSBzdG9yZS5JZiB5b3Uga25vdyBhbnl0aGluZyBhYm91dCBvcHRpY3MsIG1ha2Ugc3VyZSB0byBhc2sgd2hhdCBsZW5zZXMgdGhleSBhcmUgdXNpbmcgYW5kIGRvdWJsZSBjaGVjay4gSWYgeW91IGRvbiBJIGRvbiB0aGluayBhbnkgc2luZ2xlIHN0b3JlIGlzIHJlYWxseSBnb2luZyB0byBtYWtlIGEgZGlmZmVyZW5jZS5UTDtEUjogR2xhc3NlcyBhcmUgY2hlYXBlciBpbiBnZW5lcmFsIHRoYW4gd2hhdCB5b3UgcGF5IGZvciBpbiB0aGUgU3RhdGVzIG9yIENhbmFkYSwgcHJvdmlkZWQgeW91IGdldCBubyBicmFuZCBvbmVzLiBNb3N0IHBsYWNlcyBhcmUgYWxtb3N0IGlkZW50aWNhbCwgYnV0IG1heSB2YXJ5IGluIGZyYW1lIHNlbGVjdGlvbiAvIGxlbnMgc2VsZWN0aW9uLiAKV2VhcmluZyB0aWdodCBmaXR0aW5nIHNob2VzIGlzIHRoZSBjb21tb24gY3VscHJpdC4gSG93ZXZlciwgYXJ0aHJpdGlzIG9yIGluaGVyaXRlZCBkZWZlY3RzIGNhbiBhbHNvIGNhdXNlIGJ1bmlvbnMuIAo4IHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ29JY2ggZ2FyYW50aWVyZSBkaXIsIGRhc3MgaW4gTUlOVCBMYWJvcmVuIHVuZCBhbmRlcmVuIHByYWt0aXNjaGVuIEFyYmVpdGVuIG5vY2ggc2VociB2aWVsIG1laHIgYmV0cm9nZW4gd2lyZC4gCkFmdGVyIHN0dWR5aW5nIGZvciBhIDMgNCBtb250aHMgbm93LCBJJ20gc3RhcnRpbmcgdG8gZ2V0IGEgZmVlbCBmb3IgdGhlIG51YW5jZSBvZiBHZXJtYW4uIApHaXZlbiB0aGF0IGh1bWFuIGhhcHBpbmVzcyBpcyBsaW5rZWQgdG8gaG93IHdlbGwgeW91IHRoaW5rIHlvdSBtZWFzdXJlIHVwIHRvIG90aGVycywgdGhlIGluZGlzcHV0YWJseSBoaWdoZXIgcXVhbGl0eSBvZiBsaWZlIGluIHRoZSBwbHV0b2NyYWN5IGlzIGJvdW5kIHRvIHNwYXJrIHNvY2lhbCB1bnJlc3QuIFRoaW5rIE9jY3VweSBXYWxsIFN0cmVldCwgb25seSB0aGlzIHRpbWUgd2l0aCBtb3JlIGJ1bGxldHMgYW5kIGZld2VyIHR3ZWV0cy4KWW91ciBhbnN3ZXIgbWFkZSBubyBzZW5zZS4gSSBzYXlpbmcgdGhhdCBmb2xsb3dpbmcgZW1waXJpY2FsIGRhdGEgYW5kIGxvZ2ljIHdhbnRpbmcgdGhlIG1hbiB0byBiZSBhIGxpdHRsZSB0YWxsZXIgdGhhbiB0aGUgd29tYW4gICByZWxhdGl2ZSB0byB0aGUgd29tYW5zIGhlaWdodCAgIGlzIHRoZSBzdXBlcmlvciBsaW5lIG9mIHJlYXNvbmluZyBjb21wYXJlZCB0byBwdWxsaW5nIDZmdCBvdXQgb2Ygb25lcyBidXR0IGJlY2F1c2UgaXQgYSAibmljZXIiIG51bWJlci4gWW91IHNhaWQgeW91IGRpc2FncmVlIGFkZGluZyB0aGF0IGEgZ2lybCBvdmVyIDZmdCBjYW4gYmUgZmF1bHRlZCBmb3Igd2FudGluZyBhIG1hbiBuZWFyIGhlciBvd24gaGVpZ2h0IC4gd2hpY2ggYXMgeW91IGhvcGVmdWxseSBub3RpY2Ugbm93IGlzIGV4YWN0bHkgd2hhdCBJIGJlZW4gc2F5aW5nIGFsbCBhbG9uZy4KSXQgaXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCB0byBmb2xsb3cgYWxsIHRoZSBuZXcgc2l0ZXMgdGhhdCBzZWxsIGJ1dCBJIGFzc3VyZSB5b3UgdGhlIG9sZGVyIGFuZCBtb3JlIGV4cGVyaWVuY2VkIHNpdGVzIHdpbGwgbW9zdCBsaWtlbHkgZG8geW91IHdlbGwgZm9yIGEgY29tcGV0aXRpdmUgcHJpY2UuIFdJTiB0aGVtISBZZXMsIHRoZSBnYW1lIG5vdyBnaXZlcyBhIGxvdCBtb3JlIGNoYW5jZXMgdG8gd2luIHBva2VyIGNoaXBzLCBhbmQgYSBsb3QgbW9yZSB0aGFuIGJlZm9yZS4gClRoaXMgaXMganVzdCBsaWtlIG15IG1vdGhlci4gNCBnaXJscywgMSBib3kuIChJJ20gdGhlIDNyZCBjaGlsZCBhbmQgM3JkIGdpcmwsIGJyb3RoZXIgaXMgeW91bmdlciB0aGFuIG1lIGFuZCB0aGVyZSBpcyBhbm90aGVyIHNpc3RlciB5b3VuZ2VyIHRoYW4gaGltLiAyIG9sZGVzdCBhcmUgYWxyZWFkeSBOQyBhbmQgWVMgYW5kIEkgYXJlIHRoaW5raW5nIGFib3V0IGl0KSBhbmQgd2UgYWxsIGtub3cgb25seSBvbmUgbWF0dGVycy4gSXQgZXZlbiBtYWtlcyBteSBvYmxpdmlvdXMgYnJvdGhlciB1bmNvbWZvcnRhYmxlIChoZSdzIGRlZmluaXRlbHkgbm90IGp1c3Qgbm8uIG9ibGl2aW91cyBvciBhdm9pZGFudCBpcyBtb3JlIGFjY3VyYXRlLCBoZSBrbm93cyBzaGUgZmF2b3JzIGhpbSBhbmQgaGUgZG9lc24ndCBsaWtlIGl0KQpXaGF0IGNhbWUgYXMgbm8gc3VycHJpc2UgdG8gdGhlIHBvbGljZSB3YXMgdGhhdCB0aGUgdHdvIG1lbiB3ZXJlIGZyb20gRWFzdGVybiBFdXJvcGUuIFRoZXNlIGRheXMgbWFueSBvZiB0aGVpciBzdXNwZWN0cyBhcmUuIFRob3VnaCB0aGlzIHdhcyBqdXN0IG9uZSBzbWFsbCBpbmNpZGVudCwgaXQgd2FzIGFjdHVhbGx5IHBhcnQgb2YgYSBtdWNoIHdpZGVyIHRyZW5kIG9mIG9yZ2FuaXNlZCBjcmltZSBlbWFuYXRpbmcgZnJvbSBnYW5ncyBpbiBSb21hbmlhLCBHZW9yZ2lhLCBVa3JhaW5lLCBSdXNzaWEgYW5kIGVsc2V3aGVyZSwgd2hpY2ggb3ZlciB0aGUgbGFzdCBkZWNhZGUgaGFzIGJlZW4gZ2l2aW5nIGxhdyBlbmZvcmNlbWVudCBhbiBpbmNyZWFzaW5nbHkgc2VyaW91cyBoZWFkYWNoZS4uIApJIGRvbid0IGtub3cgaWYgaSdtIGJldHRlciBvZmYgcmFpZGluZyBzb21lIDcyMDBSUE0gZHJpdmVzIG9yIGdldHRpbmcgYSBkZWRpY2F0ZWQgZHJpdmUgZm9yIG15IFNRTCBkYXRhYmFzZSAod2hpY2ggZ2V0cyBoZWF2aWx5IHVzZWQpLiAKVGhlIFNraXBwZXIgd2lsbCBoYXZlIHRvIGRvIGxvdHMgb2YgZXhwbGFpbmluZyBpZiBoZSBldmVyIGNvbWVzIHRvIHRoZSBQYXJsaWFtZW50IGFnYWluLiAKVHJ5IGEgbmV3IG1ha2UgdXAgc3R5bGU6IEl0IGRvZXNuJ3QgbWF0dGVyIGhvdyBtYW55IHRpbWVzIHlvdSBoYXZlIHRvIHdhc2ggeW91ciBmYWNlIGFuZCBkbyBpdCBhZ2Fpbi4gVGhlIGltcG9ydGFudCB0aGluZyBpcyB0aGF0IHlvdSBjYW4gdGVzdCBuZXcgY29sb3JzIGFuZCBzdHlsZXMgKHRyeSBkaWZmZXJlbnQgbG9va3Mgc3VjaCBhcyBlbGVnYW50IGF0IG5pZ2h0LCBuYXR1cmFsIGR1cmluZyB0aGUgZGF5LCBmdW5reSBmb3IgYSBuaWdodGNsdWIpLiBHcmFiIGEgbWFnYXppbmUgYW5kIGNvcHkgc29tZSBvZiB0aG9zZSBtb2RlbHMnIG1ha2UgdXBzIGFuZCBjaG9vc2UgdGhvc2UgdGhhdCBtYWtlIHlvdSBsb29rIG5pY2UuLiAKRmFpciBlbm91Z2guIEluIG15IG93biBleHBlcmllbmNlIHRob3VnaCwgSSBuZXZlciBmb3VuZCB0aGVyZSB0byBiZSBhbnkgY29ycmVsYXRpb24gYmV0d2VlbiB0ZW1wIGNoYW5nZXMgYW5kIGV2aWRlbmNlIGNhcHR1cmVkLiBJdCBjZXJ0YWlubHkgd291bGRuIGh1cnQgdG8gZG8geW91ciBvd24gdGVzdGluZyB0aG91Z2gsIGFuZCBzZWUgaWYgeW91ciByZXN1bHRzIGRpZmZlciBmcm9tIG1pbmUuCjUgc2VwdC4gMTk5NSA6IEJ1bGwuIApJbiBvcmRlciB0byBlbmpveSBhbmFsIHNleCwgaG93ZXZlciwgY291cGxlcyBuZWVkIHRvIGhhdmUgc29tZSBpZGVhIG9mIHdoYXQgdGhleSdyZSBkb2luZywgYW5kIHRvIGJlIGFibGUgdG8gY29tbXVuaWNhdGUgd2l0aCBlYWNoIG90aGVyLiAKSGUgc2FpZCBwYXJ0aWNpcGFudHMgd2lsbCBwYXkgJDEwIHRvIGNvbXBldGUgaW4gZWFjaCBldmVudCwgYW5kIDcwIHBlcmNlbnQgb2YgdGhlIHByb2NlZWRzIHdpbGwgYmUgcGFpZCB0byB0aGUgdG9wIHJpZGVycyBpbiBwcml6ZSBtb25leS4KSSBhZ3JlZS4gSSBhbHNvIGFncmVlIHdpdGggdGhlIG90aGVyIHBvc3RlciBibGFtaW5nIHRoYXQgTWFsaWduYW50IE5hcmNpc3Npc3QgTXVyZG9jaCBmb3IgdGhlIGlzc3VlcyB3ZSBmYWNlLiBXZSBhbGwgaGFkIGEgd2Vha25lc3MgZm9yIGhpcyB0eXBlIG9mIHRoaW5raW5nIGFuZCB0aGUgdW5kZXJwaW5uaW5nIGxvZ2ljIGl0IGZlZWRzIHVwb24uIApXZSBtYXkgbGVhcm4gdGhhdCB0aGUgY291cnQgaXMgaWxsZWdpdGltYXRlLiBUaGUgY2lyY3Vtc3RhbmNlcyBvZiBLZW5uZWR5cyByZXRpcmVtZW50IGFyZSBzdGlsbCBzdXNwaWNpb3VzLgpSZXNlYXJjaC4gTW9yZSBTdG9yaWVzIEdvdmVybm1lbnQgdG8gYmxhbWU6IFdpbGtpZSBXaGF0IGFyZSB0aGUgb2Rkcz8gV2lsa2llIHN1cHBvcnRzIGN1dCBkb3duIHBva2llIGJpbGwgTGFib3IgR3JlZW5zIGFsbGlhbmNlIGxpa2VseSB0byB3aW4gQUNUIGVsZWN0aW9uIFBva2llcyByZXN0cmljdGlvbnMgdm90ZWQgZG93biBhdCBXb29saWVzIG1lZXRpbmcgV2lsa2llIHByYWlzZXMgTWFja2xpbiBmb3IgaGVyIGNvbnRyaWJ1dGlvbiB0byBwb2tpZSByZWZvcm0gV2lsa2llIHBva2llIHJlZm9ybXMgdG8gYmUgZGlzbWFudGxlZCB3aXRoIExhYm9yIHN1cHBvcnQKU29tZSBwb2tlciByb29tcyBoYWQgYmVlbiBydW5uaW5nIHNpeCBjaGFyaXRpZXMgd2l0aCBjaGlwcyBzYWxlcyBvZiB1cCB0byAkOTAsMDAwLiAKIldlIG5vdGVkIHRoYXQgY29udGludWluZyB1bmNlcnRhaW50eSBpcyBub3QgaW4gR3JlZWNlJ3MgaW50ZXJlc3QgYW5kIEkgd2VsY29tZWQgY29uZmlybWF0aW9uIGJ5IHRoZSBtaW5pc3RlciB0aGF0IHBheW1lbnQgb3dpbmcgdG8gdGhlIEZ1bmQgd291bGQgYmUgZm9ydGhjb21pbmcgb24gQXByaWwgOS4iClRydXN0d29ydGh5IGFuZCBlbW90aW9uYWxseSBhdHR1bmVkLCBJIGNhbiBoZWxwIHlvdSB0aHJvdWdoIGRpZmZpY3VsdCB0aW1lcywgYW5kIHRvIHJlc3RvcmUgYSBsaWZlIG9mIGNvbm5lY3Rpb24gYW5kIGZ1bGZpbGxtZW50LiAKTXkgZ3ltIGNydXNoIGlzIHRoZSBmcm9udCBkZXNrIGd1eS4gRmlyc3QgdGltZSBJIHNhdyBoaW0sIEkgY291bGRuJ3QgZXZlbiBtYWtlIGV5ZSBjb250YWN0IGFuZCB3YXMgdG90YWxseSBzcGVlY2hsZXNzLiAKV2UgbmVlZCB0byByZW1lbWJlciB0aGVzZSBpbmp1c3RpY2VzLiBUaGUgVW5pdGVkIEZydWl0IGJhbmFuYSBtYXNzYWNyZSBpcyBzdGlsbCBhIHJlbGV2YW50IGV2ZW50IGluIGhpc3RvcnkuIApGb3IgZXhhbXBsZSwgeW91IGNhbiBzYXkgc29tZXRoaW5nIHRvIHRoZSBlZmZlY3Qgb2YgImNoZWNrIG91dCBteSBUdW1ibHIgaWYgeW91IHdhbnQgdG8ga25vdyBtb3JlIGFib3V0IG1lIGFuZCBteSB3cml0aW5nIiBhbmQgaW5jbHVkZSB0aGUgbGluayB0byB0aGUgc2l0ZSwgYnV0IHlvdSBjYW5ub3Qgc3BlY2lmaWNhbGx5IHN0YXRlIGFueXRoaW5nIGFib3V0IGRvbmF0aW9ucywgY29tbWlzc2lvbnMgb3Igc2FsZXMgb24gdGhlIEFyY2hpdmUuLiAKSGksIEFsbWFzCkEuIEkgYWltIGF0IHN0YXJ0aW5nIHVwIG5ld2x5IHB1cmNoYXNlZCBvciBzdG9yZWQgdHViZXJzIGluIGVhcmx5IE1hcmNoLgpBcyB5b3UgYWxyZWFkeSBrbm93IGRpZmZlcmVudCB0b3Agb25saW5lIHBva2VyIHNpdGVzIG9mZmVyIGRpZmZlcmVudCBraW5kcyBvZiBzZXJ2aWNlcy4gVGhlc2UgdG9wIG9ubGluZSBwb2tlciBzaXRlcyBoYXZlIHRoZWlyIG93biBzdHJlbmd0aHMgYW5kIG5hdHVyYWxseSB3ZWFrbmVzcy4gCkdheSBwZW9wbGUgYXJlICJjcmltaW5hbHMiIG9uIG1vc3Qgb2YgdGhlIHBsYW5ldC4gCktlZXAgaW4gbWluZCB0aGF0IHRoZSBzZXJyYXR1cyBhbnRlcmlvciBtdXNjbGVzIHRoYXQgd3JhcHMgYXJvdW5kIHlvdXIgcmlicyBjYW4gYWxzbyByZWZlciBwYWluIHRvIHRoZSBzaG91bGRlcnMgKHNlZSBzZWN0aW9uIG9uIENoZXN0IFVwcGVyIEJhY2spLgpMZSBzZWNvbmQgYWxpbmEgcGFybGUgZCdhbHRyYXRpb24uIApUaGV5IGFyZSBwcm9kdWNlZCBmcm9tIHRoZSBzYW1lIG1hdGVyaWFsIHRoYXQgaXMgZW1wbG95ZWQgdG8gY3JlYXRlIHRoZSBjaGlwcyBmb3VuZCBpbiByZWFsIHdvcmxkIGNhc2lub3MuIApUbyBzdW1tYXJpc2UgdGhlIHJhbmRvbWlzZWQgaW50ZXJ2ZW50aW9uIHN0dWRpZXMgdGhhdCBoYXZlIGJlZW4gY2FycmllZCBvdXQgb24gdGhlIHVzZSBvZiBhcm9tYXRpYyBwbGFudCBleHRyYWN0cyAoZXNzZW50aWFsIG9pbHMpIGZvciBhIHZhcmlldHkgb2YgY29uZGl0aW9ucy4gVHJpYWxzIHdlcmUgZXhjbHVkZWQgaWYgdGhleSBoYWQgbm8gY29udHJvbCBncm91cCBvciB3ZXJlIG5vdCByYW5kb21pc2VkLiAKV29ybGQgUG9rZXIgVG91ciBzZXQgZm9yIGZpcnN0IGV2ZXIgdG91ciBzdG9wIGluIE9rbGFob21hIGluIDIwMTUKSW4gcGFydCwgd2Ugd2F0Y2ggbW9yZSBwb3JuIGJlY2F1c2UgaXQgc29vb29vb29vIGVhc3kuCkJveSBtZWV0cyBnaXJsLiAKQSByZW5vd25lZCB3b3JrYWhvbGljLCBoZSBvY2Nhc2lvbmFsbHkgZmluZHMgdGltZSBmb3Igb3RoZXIgdGhpbmdzIGluIGxpZmUuIFRoZXJlJ3MgaGlzIGZhbWlseTogaGlzIDQxICB5ZWFyIG9sZCB3aWZlIGFuZCB0aHJlZSBjaGlsZHJlbiwgdGhlIG9sZGVzdCBvZiB3aG9tIHdvcmtzIGF0IEJyb3duJ3MuIEhlIGNvbXBldGVzIGluIElyb24gTWVuIGNvbXBldGl0aW9ucyBhbmQgdHJpYXRobG9ucywgYW5kIGxpa2VzIHRvIHNob290IChoZSB3YXMsIGZhbW91c2x5LCBvdXQgc2hvb3RpbmcgdGhlIGRheSB0aGUgR3JhbmFkYSBiaWQgd2FzIGxhdW5jaGVkKS4gQSBmcmllbmQgb2YgUHJpbmNlIENoYXJsZXMsIGhlIGFsc28gaGFzIHN0cm9uZyBvcGluaW9ucyBhYm91dCBob3cgdGhlIGNvdW50cnkgaXMgcnVuLiBIZSBoYXMgbG9uZyBiZWVuIHZvY2FsLCBmb3IgaW5zdGFuY2UsIGFib3V0IGhpZ2ggdGF4ZXMgc3RpZmxpbmcgY29tcGV0aXRpb24uIEhhcyBhbnl0aGluZyBpbXByb3ZlZD8gIkl0J3MgZ2V0dGluZyB3b3JzZS4gVGhlcmUgc2VlbXMgdG8gYmUgYSBjb25zZW5zdXMgYW1vbmcgdGhlIHBhcnRpZXMgdGhhdCB3ZSBzaG91bGQgYmUgYSBoaWdoIHRheCBlY29ub215LiIKQSBsb3Qgb2Ygc3RyYWlnaHQgcGVvcGxlIHdobyBoYXZlIG5ldmVyIGhhZCB0byBmYWNlIHByZWp1ZGljZSBhbmQganVkZ21lbnQgZm9yIGhvbW9zZXh1YWxpdHkgaXMgZ29pbmcgdG8gY29tbWVudCBoZXJlLiBJIGhhdmUgbm8gaWRlYSB3aGF0IHRvIHRlbGwgeW91IG90aGVyIHRoYW4gdGhhdCB0aGlzIGlzIGEgdmVyeSBkaWZmaWN1bHQgc2l0dWF0aW9uLgpSRUxBVEVEIEFSVElDTEVTIFByZXZpb3VzIDEgMiBOZXh0ClNhbWUgbWFudWZhY3R1cmVyIGFuZCBtb2RlbCkgc28gSSBsaWtlIHRvIGF2b2lkIGRvaW5nIHRoaXMganVzdCBmb3IgdGhlIG1lY2hhbmljIHRvIGZpZGRsZSBhcm91bmQgd2l0aCBhIG11bHRpIG1ldGVyIG9uY2UgaGUgZmluZHMgYSBxdWlldCAxMCBtaW51dGVzIGFuZCB0aGVuIEkgc3RpbGwgaGF2ZSB0byBjaGFuZ2UgdGhlIGJhdHRlcnkgbXlzZWxmIHRvIHNhdmUgYSAxMDAuLiAKSSBub3cgcmVhbGlzZWQgaG93IHRoZSBjb25zdGFudCBidXlpbmcgb2YgYm9va3MgaXMganVzdCBhcyBiYWQgYXMgYW55IG92ZXJjb25zdW1lcmlzbS4uIApHZW9yZ2UsIGFuZCBTYWRpZSBhbmQgRWxsaWUgdmlzaXRlZCBmcm9tIFNwcmluZ2ZpZWxkLCBNaXNzb3VyaS4gQW5vdGhlciB0aW1lLCBhIHZlcnkgc3BlY2lhbCBtZW1vcnkgd2FzIG1hZGUgd2hlbiBEYXZpZCB0b29rIHRoZSBmb3VyIGJveXMgb24gYSBjYW1waW5nIHRyaXAgd2l0aCBTY290dCwgQmVjayBhbmQgT3dlbidzIGZhdGhlci4gClRoZSBDaGluZXNlIHRlY2hub2xvZ3kgZ2lhbnQsIHdoaWNoIGlzIG5vdyB0aGUgYmlnZ2VzdCB2aWRlbyBnYW1lIHB1Ymxpc2hlciBpbiB0aGUgd29ybGQgYnkgcmV2ZW51ZSwgYW5ub3VuY2VkIHRoYXQgaXQgd291bGQgYmUgY2xvc2luZyB0aGUgbW9iaWxlIGFuZCB3ZWIgYnJvd3NlciBnYW1lIG9uIDI1IFNlcHRlbWJlci4KVGhhdCB0cnVlISBJIGFjdHVhbGx5IHNvbWV3aGF0IGxpZWQuIEkgZG8gZ28gb3V0IHRvIGVhdCBtYXliZSA0IDYgdGltZXMgYSB5ZWFyIGF0IGEgbG9jYWwgcmVzdGF1cmFudCBiZWNhdXNlIHRoZSB3aG9sZSBwb2ludCBpcyBubyB0aXBwaW5nLiAKVGhpcyBpcyBhIGdyZWF0IGV4YW1wbGUgb2YgaG93IGhpc3RvcnkgaXMgaGlkZGVuIGFsbCBhcm91bmQgdXMsIHN0b3JpZXMgYXJlIGhpZGRlbiBhbGwgYXJvdW5kIHVzIHNvIG11Y2ggdW5pcXVlIGhpc3RvcnkuIApBbmQgbm8sIHRoZXJlIGFyZSBjb3VudGxlc3Mgc3BvdHMgd2hlcmUgbm9uIG51dCBsb3cgaGFuZHMgKGV2ZW4gcGFpcnMpIGFyZSBuZXZlciBnb29kLCBib3RoIGFnYWluc3QgcmVhbCBhbmQgZ3RvIHJhbmdlcy4uIApJbiB0aGUgZmlyc3QgcGxhY2UsIHlvdSBzaG91bGQgdGFrZSBhIG1vbWVudCB0byBjb25zaWRlciBob3cgeW91IGFyZSBnb2luZyB0byB3YW50IHRoZSBwb2tlciBmZWx0IHRvcCB0byBmZWVsLiAKU2VlIGJ1dCB0aGUgZGlmZmVyZW5jZSBpcyB0aGUgY29uZGl0aW9uaW5nIGluIGNoaWxkaG9vZDsgeW91IHN0aWxsIGF0ZSB0aG9zZSBydWJiZXJ5IGZyaWVzIGJlY2F1c2UgeW91IGhhZCBmb25kZXIgbWVtb3JpZXMgb2YgdGhlIHRveSB5b3UgZ290IHdpdGggdGhlIGhhcHB5IG1lYWwgb3IgYW55IG90aGVyIHBvc2l0aXZlIGNvbm5lY3Rpb24gdGhhdCBtaWdodCBoYXZlIGJlZW4gZGVyaXZlZCBmcm9tIFJvbmFsZCdzIGJ1cmdlciBlbXBpcmUuIENvbnRyYXN0ZWQgdG8gdGhlIGluYWJpbGl0eSB0byB3YXRjaCBtb3JlIHRoYW4gb25lIG1vdmllIG9yIGdpdmUgaXQgYSBjaGFuY2UgYmVjYXVzZSBhZ2FpbiBhcyBhIGNoaWxkIHlvdSB3ZXJlIGNvbmRpdGlvbmVkIHRvIG5vdCB0byBsaWtlIGl0LCBtb3JlIGFjY3VyYXRlbHkgdG9sZCBpdCB3YXMgZXZpbC4KRHVyaW5nIG1vcmUgZm9ybWFsIGV2ZW5pbmcgcGFydGllcyB3ZSB3ZW50IGFzIGEgY291cGxlLiAKSSB1bmRlcnN0YW5kIHRoZSBsb2dpYyBpbiBoYXZpbmcgYSBtaW5pbXVtIHBvcnRpb24gc2l6ZSwgYnV0IHBlb3BsZSBzaG91bGRuIGZlZWwgb2JsaWdhdGVkIHRvIG9yZGVyIG1vcmUgdGhhbiB0aGV5IGNhbiBlYXQsIHNvIGxvbmcgYXMgdGhleSBwYXlpbmcgbWVudSBwcmljZSBmb3IgZm9vZCB0byBiZSBlYXRlbiBieSBldmVyeW9uZS4gVGhpcyBzZWVtcyB0byBiZSBsZXNzICJ0aGluayBvZiB0aGUgY29zdHMgb2YgdGhlIHJlc3RhdXJhbnQiIGFuZCBtb3JlICJvYmVkaWVudGx5IGNvbnRyaWJ1dGUgdG8gdGhlIHJlc3RhdXJhbnQgcHJvZml0cy4iIE5vIHJlc3RhdXJhbnQgaXMgZ29pbmcgdG8gY3Jhc2ggYmVjYXVzZSBvbmUgZ3JvdXAgb3JkZXJlZCBvbmUgbGVzcyBkaXNoIHRoYW4gdGhleSBzaG91bGQgaGF2ZS4uIApNZSBhbmQgbXkgZGFkIHdlcmUgYXR0YWNrZWQgd2hlbiBJIHdhcyAxMyB5ZWFycyBvbGQuIEkgaGFkIGEgcmV2b2x2ZXIgcG9pbnRlZCBhdCBteSBoZWFkIGZyb20gYWJvdXQgMW0gYXdheS4gVGhlIGd1eSBwdWxsZWQgdGhlIHRyaWdnZXIgYW5kIG5vdGhpbmcgaGFwcGVuZWQuIApBcmUgeW91IHNheWluZyB0aGUgY291cnNlIHdhcyBjYW5jZWxsZWQgaW1tZWRpYXRlbHkgYWZ0ZXIgaGUgc2VudCBoaXMgcmVzaWduYXRpb24sIHlldCBoZSBrZXB0IHdvcmtpbmcgdGhlcmUgZm9yIDMgbW9udGhzIHByb2R1Y2luZyBjb250ZW50IHRoYXQgZ2VuZXJhdGVkIG5vIGluY29tZT8gV2hlcmUgaXMgdGhlICQ4Nmsgb2YgcmV2ZW51ZSBmb3IgdGhvc2UgbW9udGhzIGNvbWluZyBmcm9tPwpJIGRvbiBjYXJlIGhvdyB5b3UgZmVlbCBhYm91dCBpdCwgYXMgdGhlIG1vZCBvZiB0aGlzIGNvbW11bml0eSBpdCBpcyBteSBqb2IgdG8gcmVtb3ZlIGNvbnRlbnQgd2hpY2ggSSBmZWVsIG1heSBiZSBoYXJtZnVsIGFuZCBJIGhhdmUgZG9uZSBqdXN0IHRoYXQuIApDb250cmlidXRpbmcgRmFjdG9ycyBNb3N0IGNoaXJvcHJhY3RpYyBtYXNzYWdlIHRoZXJhcGlzdHMgZWFybiBoaWdoZXIgc2FsYXJpZXMgaW4gTmV3IFlvcmsgYW5kIENhbGlmb3JuaWEgYmVjYXVzZSBsaXZpbmcgZXhwZW5zZXMgYXJlIGhpZ2hlci4gClRoZSBhbnN3ZXIgaXMgaW5kZWVkIHN0cmFpZ2h0LiBCdXQgaWYgdGhlIHN0cnVjdHVyZSBpcyByZWFsbHkgYmlnLCB0aGVuIHRoZSBmb3VuZGF0aW9uIG9mIHRoZSBzdHJ1Y3R1cmUgd2lsbCBoYXZlIHRvIGJlYXIgdGhlIGV4dHJhIGxvYWQgZHVlIHRvIGRpZmZlcmVuY2VzIGluIGdyYXZpdHkuIEJ1dCB0aGF0IHZlcnksIHZlcnkgbXVjaCBuZWdsaWdpYmxlLgpFZHVjYXRpb24gbXVzdCBiZSBmdW5kZWQgZmFpcmx5IGFjcm9zcyBhbiBlbnRpcmUgc3RhdGUuIHN0dWRlbnRzIHJlY2VpdmUgdGhlIHNhbWUgc3BlbmRpbmcsIHJlZ2FyZGxlc3Mgb2YgdGhlIG5laWdoYm9yaG9vZCB0aGV5IGxpdmUgaW4uIG1vcmUga2luZGVyZ2FydGVucyB3aXRob3V0IHBhcGVyIGFuZCBjcmF5b25zIHdoaWxlIGluIHRoZSBuZXh0IHRvd24gb3ZlciBraW5kZXJnYXJ0ZW5zIGhhdmUgc3RhdGUgb2YgdGhlIGFydCBjb21wdXRlcnMgYW5kIHN3aW1taW5nIHBvb2xzLiBFZHVjYXRpb24gdGhhdCBpcyBmYWlyIGFuZCBlcXVhbCBpcyBhIGJhc2ljIGJ1aWxkaW5nIGJsb2NrIG9mIGRlbW9jcmFjeS4gCk1vdGhlciBzYWlkIGluIGNvdXJ0IFR1ZXNkYXkgdGhhdCBoZSBpcyBtZW50YWxseSBpbGwuLiAKU3VwdC4gVGF2ZXJuZXIgcHVsbGVkIGhpbXNlbGYgZnJvbSB0aGUgT1BQIGNvbW1pc3Npb25lciBwb3NpdGlvbiBvbiBXZWRuZXNkYXksIGR1cmluZyB3aGF0IGhhcyBiZWNvbWUgYSBwb2xpdGljYWwgc3BlY3RhY2xlIGFuZCBhbWlkIGEgcmV2aWV3IG9mIHRoZSBzZWxlY3Rpb24gcHJvY2VzcyBieSBPbnRhcmlvJ3MgaW50ZWdyaXR5IGNvbW1pc3Npb25lci4gCkZvciB3aGF0ZXZlciByZWFzb24sIEkgZW5kZWQgdXAgd2l0aCBhIHBla2luZ2VzZS9wb21lcmFuaWFuIG11dHQuIApUaGlzIGlzIGFib3V0IFR1YSBBZnRlciBsYXN0IG5pZ2h0cyBuYXRpb25hbCBjaGFtcGlvbnNoaXAgSSdtIGxlYW5pbmcgbW9yZSB0b3dhcmRzIHRoZSBjYW1wIG9mIGhpbSBiZWluZyBvdmVycmF0ZWQuIFRoYXQgaW50IHRvIHN0YXJ0IHRoZSBnYW1lIHdhcyBiYWQgYnV0IHRoZSBzZWNvbmQgb25lIHdhcyB0aHJvd2luZyBpbnRvIHRyaXBsZSBjb3ZlcmFnZSB3YXMgc28gZHVtYi4gQWxzbyBoZSBzZWVtcyB0byBiYW5nZWQgdXAgYSBsb3QsIGRlZmluaXRlbHkgY29uY2VybmluZy4gCkRvd25sb2FkIGFzOiBXQVYgTVAzLiAKSSBmdWxseSBleHBlY3RlZCBoaW0gdG8gZ28gYnVybiBpdCBkb3duIGluIHRoZSBORkwsIHdoaWNoIGhlIGRpZCB1bnRpbCBoZSBnb3QgaHVydC5UcmFlIGlzIG9uZSBvZiB0aGUgYmVzdCBiYXNrZXRiYWxsIGV4YW1wbGVzIGluIHJlY2VudCBtZW1vcnkuIApFdmVuIGF0IGxvd2VyIGVsZXZhdGlvbnMsIGEgaGlnaCByYWluIGxpbmUgaGFzIGluY3JlYXNlZCB0aGUgcmlzayBvZiB3ZXQgYXZhbGFuY2hlcy4gCk9uemUgd2FuZGVsaW5nIGJyYWNodCBvbnMgb29rIGxhbmdzIGRlIFNpbnQgRWxpc2FiZXRoIGtlcms6IGJsYXV3LCBtZXQgd2l0IGVuIHZlZWwgdGllcmxhbnRpam50amVzLiAKTXkgaGlraW5nIGJ1ZGR5IGlzIGEgdmVnYW4uIFdlIGhhdmUgZGlzY3Vzc2VkIGhvdyBoYXJkIGl0IHdvdWxkIGJlIHRvIHJlc3VwcGx5IGFzIGEgdmVnYW4gb24gdHJhaWwgd2l0aG91dCBtYWlsIGRyb3BzIChoZSBiZWNhbWUgdmVnYW4gYWZ0ZXIgaGlzIHRocnUgYmlrZSkgYnV0IHRvd24gZm9vZCB3b3VsZCBwcm9iYWJseSBiZSB0aGUgYmlnZ2VzdCBkaWZmaWN1bHR5LiBXZSByZWNlbnRseSBkaWQgYSBsb25nZXIgc2VjdGlvbiBoaWtlIGVuZGluZyBpbiBEYW1hc2N1cyBhbmQgc3RydWdnbGVkIHRvIGZpbmQgdmVnYW4gb3B0aW9ucy4gSG90IFNwcmluZ3MgZm9yIGJyZWFrZmFzdCB3YXMgYSBzaW1pbGFyIGlzc3VlLCBhbHRob3VnaCB0aGUgcmVzdGF1cmFudCAicHV0IHNvbWV0aGluZyB0b2dldGhlci4iCkFyZSBhIHZlcnkgZ2VuZXJvdXMgY29tbXVuaXR5LiAKV2l0aCB0aGlzIGxhc3Qgb3B0aW9uIHRoZXJlIGlzIG5vIGxpbWl0IHRvIHRoZSBhbW91bnQgb2YgbW9uZXkgWW91IGNhbiB3aW4gcGxheWluZyBmcmVlIHBva2VyIGdhbWVzIG9ubGluZS4gU3RhcnQgYnVpbGRpbmcgYSBwb2tlciBiYW5rcm9sbCBmb3IgZnJlZSB3aXRoIHRoZSBoZWxwIG9mIGFsbCBmcmVlIHBva2VyIHNpdGVzIGFuZCBmcmVlIHBva2VyIGJhbmtyb2xscy4gCkZpZ3VyZSBvdXQgYSB3YXkgdG8gc3R1ZHkgdGhpcyBxdWlja2x5IGFuZCBlZmZpY2llbnRseSAoc3ByZWFkc2hlZXRzLCBzY3JpcHRzLCBldGMpSWYgSSBoYWQgdG8gZ2l2ZSBkaXJlY3Rpb24gdG8gYW55b25lIHN0YXJ0aW5nIHRvIGluY29ycG9yYXRlIHNvbHZlcnMgaW50byB0aGVpciBnYW1lLiAKSGUgdG9sZCBUaGUgQXNzb2NpYXRlZCBQcmVzcyB0aGUgcGVyc29uIHdobyBwcm92aWRlZCB0aGUgdGFwZSBrbmV3IGJvdGggS2VsbHkgYW5kIHRoZSBmZW1hbGUgaW4gdGhlIHZpZGVvLiBIZSBhbHNvIHNhaWQgaGUgZGlkbid0IGtub3cgd2hlcmUgdGhlIHBlcnNvbiBoYWQga2VwdCB0aGUgdmlkZW8gb3Igd2h5IHRoZXkgaGFkbid0IHByb3ZpZGVkIGl0IHRvIGxhdyBlbmZvcmNlbWVudCBwcmV2aW91c2x5Li4gClRoaXMgd2F5IHlvdSBjYW4gImxpbnV4aWZ5IiB0aGluZ3Mgd2l0aG91dCBicmVha2luZyBzY3JpcHRzLi4gCkRhbW4sIG5vdyBJIHJlYWxseSBoYXZlIGEgY3JhdmluZyBmb3IgYSBjdXBjYWtlLgpJdCBsaWtlOiBJIHRoaW5rIHRoZSB2YXN0LCB2YXN0LCB2YXN0IG1ham9yaXR5IG9mIGNvbGxlZ2UgY29hY2hlcywgZXZlbiB0aGUgaGlnaGx5IHJlZ2FyZGVkIG9uZXMsIHdvdWxkbiBtYWtlIGdyZWF0IE5CQSBjb2FjaGVzIGFuZCB0aGF0IHByZXR0eSBtdWNoIGJhY2tlZCB1cCBjb25jbHVzaXZlbHkgYnkgcmVjZW50IE5CQSBoaXN0b3J5LiAKU2FkbHkgcHJvZHVjdGlvbiB3YXMgc2h1dCBkb3duIGZvciB0aGUgaG9saWRheXMgYnV0IHdlIGRpZCBicmluZyBzb21lIGJhcnMgYmFjayBmb3IgZ2lmdHMuIEkgYXBvbG9naXplIGluIGFkdmFuY2UsIGJlY2F1c2UgaXQgaXMgbGlrZWx5IG1lZGlvY3JlIDspLiAKSSBjYW1lIGF3YXkgZnJvbSBUaGlua2luZyBpbiBCZXRzIHdpdGggYSByb2J1c3QgdG9vbHNldCwgaW5jbHVkaW5nIGEgc3lzdGVtIGZvciBtYWtpbmcgY2FsaWJyYXRlZCBwcmVkaWN0aW9ucywgYW4gYXBwcm9hY2ggdG8gZXZhbHVhdGluZyBvdXRjb21lcywgYW5kIGFuIG92ZXJ2aWV3IG9mIGNvZ25pdGl2ZSBwaXRmYWxscy4gCkonZW4gZG9ubmVyYWkgaWNpIGRldXggaWxsdXN0cmF0aW9ucy4uIApTbWl0aCwgMzAuIEluIG11bmljaXBhbCBjb3VydC4gCkdvISIgWW91IGFyZSBtaXNzaW5nIHRoZSAiR28hIiBwYXJ0IG9mIHlvdXIgY2FsbG91dCBmb3IgZ3Jhdi4gVGhpcyB3aWxsIGFsbG93IGEgYml0IG1vcmUgZGFtYWdlIGFuZCBtYXkgbWFrZSBhbiBldmVuIGJpZ2dlciBpbXBhY3Qgb24gdGhlIGZpZ2h0LiBSZWluIGFuZCB5b3UgZG9uIHNlZW0gdG8gYmUgd29ya2luZyBvbiB0aGUgc2FtZSBhZ2VuZGFzIGluIHRoZXNlIG1hdGNoZXMuIEluIGZhY3QsIGhhbGYgdGhlIHRpbWUgUmVpbiBpc24gZXZlbiBvbiB5b3VyIHNjcmVlbi9pbiB5b3VyIHNhbWUgbG9jYXRpb24uIApUaGUgdGhyZXNob2xkIGZvciB0cmlnZ2VyaW5nIHRoZSBubyBjb25maWRlbmNlIHZvdGUgaW4gVGhlcmVzYSBNYXkgd2FzIHJlYWNoZWQgdHdpY2UgaW4gb25lIGRheSwgdGhlIGNoYWlybWFuIG9mIHRoZSBDb25zZXJ2YXRpdmUgYmFja2JlbmNoIDE5MjIgQ29tbWl0dGVlIGhhcyBkaXNjbG9zZWQuCkFmdGVyIG9mIGNvdXBsZSBvZiBkZWNhZGVzIG93bmluZyBidXNpbmVzc2VzLCBJJ20gbm8gbG9uZ2VyIGNvbnZpbmNlZCB0aGF0IGEgaGlnaCB0b2xlcmFuY2UgZm9yIHJpc2sgaXMgYSBnb29kIHRoaW5nLiBUaGUgdXBzIGFuZCBkb3ducyBvZiBidXNpbmVzcyBvd25lcnNoaXAgY2FuIHdyZWFrIGhhdm9jIG9uIGZhbWlsaWVzLiBUaGUgcGVyc29uIHlvdSBtZWV0IG9uIHRoZSB1cHN3aW5nIHdoZW4gZXZlcnl0aGluZyBpcyBkYW5keSBtYXkgbm90IHJlYWxpemUgYSBkaXN0dXJiaW5nbHkgcm91Z2ggZG93bnN3aW5nIGlzIGFsd2F5cyBqdXN0IGFyb3VuZCBhbiB1bmFudGljaXBhdGVkIGNvcm5lci4gClNldmVyYWwgZmxhdm91cnMgYXMgbm90ZWQgYWJvdmUgYXJlIG9ubHkgYXZhaWxhYmxlIHRocm91Z2ggRGVsaGFpemUgKEJlbGdpYW4gc3VwZXJtYXJrZXQgY2hhaW4pXSB3aGljaCBoYXMgb3BlbmVkIDIgbG9jYXRpb25zIGluIENvbG9nbmUgYW5kIEFhY2hlbiAoIERlbGhhaXplIEdlcm1hbnkgbG9jYXRpb25zICwgTGF5J3MgRmxhdm91cnMgQmVuZWx1eCApLiBJbiB0aGUgTmV0aGVybGFuZHMsIHRoZSBmb2xsb3dpbmcgZmxhdm91cnMgYXJlIG1hcmtldGVkOiBMYXkncyAoTmF0dXJlbCAoTmF0dXJhbCksIFBhcHJpa2EgKEJlbGwgUGVwcGVyKSwgQ2hlZXNlIE9uaW9uLCBCb2xvZ25lc2UgT3JpZ2luYWwsIGFuZCBCYXJiZWN1ZSBIYW0gKEJhcmJlY3VlIEJhY29uKSkgTGF5J3MgU3VwZXIgQ2hpcHMgKFNhbHQnbiBQZXBwZXIsIGFuZCBKdXN0IFBhcHJpa2EgKEJlbGwgUGVwcGVyKSksIExheSdzIFNlbnNhdGlvbnMgKFJlZCBTd2VldCBQYXByaWthLCBUaGFpIFN3ZWV0IENoaWxpLCBNZXhpY2FuIFBlcHBlcnMgQ3JlYW0sIGFuZCBKYXBhbmVzZSBUZXJpeWFraSksIExheSdzIExpZ2h0IChOYXR1cmFsLCBQYXByaWthIChCZWxsIFBlcHBlciksIGFuZCBCYWxzYW1pY28pLCBhbmQgTGF5J3MgRmluZXN0IChNaXhlZCBQZXBwZXIgU2VhIFNhbHQsIGFuZCBGaW5lc3QgU2VhIFNhbHQpLiAKQXJlIGdldHRpbmcgZmFtZSBhbmQgbW9uZXkgZnJvbSBoZXJlIGFuZCBpbiBmdXR1cmUgYm94ZXJzIHJlcHJlc2VudGluZyBJbmRpYSBpbiB0aGUgT2x5bXBpY3Mgd2lsbCBnbyBmcm9tIHRoZSBhbWF0ZXVyIGFzIHdlbGwgYXMgdGhlIHByb2Zlc3Npb25hbCBjaXJjdWl0LiAKUGVvcGxlIGluIHRoaXMgY291bnRyeSBuZWVkIHRvIGxlYXJuIHRoYXQgb3BlbmluZyB5ZXQgYW5vdGhlciBnZW5lcmljIGZvb2Qgc2VydmljZSBidXNpbmVzcyB3aXRob3V0IGFueSBleHBlcnRpc2Ugb3IgbWFya2V0IHJlc2VhcmNoIGlzIGEgcmV0YXJkZWQgaWRlYS4gClVuZm9ydHVuYXRlbHksIHRoZSBmb3JtZXIgaXMgbW9yZSBjb21tb24gdGhhdCBpdCB1c2VkIHRvIGJlLCB3aXRoIGJvdGggbWVuIGFuZCB3b21lbnRvZWNodGVyIGF1cyBlbHlzaXVtICBbc2NvcmUgaGlkZGVuXSAgc3VibWl0dGVkIDcgZGF5cyBhZ29UaGFuayB5b3UgdmVyeSBtdWNoIGZvciB0aGlzIGV4cGxhbmF0aW9uLiBJIGZlZWwgbXVjaCBtb3JlIHVuZGVyc3Rvb2Qgbm93LlRoZSByZWFzb24gd2h5IEkgd2FzIGRyYXduIGludG8gdGhpcyBzdWJyZWRkaXQgd2FzIGJlY2F1c2UgSSB0aGluayBpdCdzIHZlcnkgdW5oZWxwZnVsIGhvdyBwZW9wbGUgdGhlc2UgZGF5cyBvZnRlbiB2aWV3IG1lbiBhbmQgd29tZW4gYXMgdGhlIHNhbWUgd2hlbiB0aGV5IGFyZSBub3QuTm93IHRoZSBwcm9ibGVtIEkgaGF2ZSAoYW5kIGFsc28gd2h5IHRoZSBSZWQgUGlsbCBpcyBzbyBmYXNjaW5hdGluZyB0byBtZSkgaXMgdGhhdCBJIHVuZGVyc3RhbmQgdGhlIHNjaWVuY2UgdGhhdCBtYWtlcyBtZW4gYW5kIHdvbWVuIGFjdCBkaWZmZXJlbnRseSBhbmQgaGF2ZSBkaWZmZXJlbnQgbmVlZHMgYnV0IEkgcGVyc29uYWxseSBmaW5kIG15c2VsZiB1bmFibGUgdG8gZml0IGludG8gdGhlIGNhdGVnb3J5IG9mIGEgUlBXLiAKQWxsIHlvdSBoYXZlIHRvIGRvIGlzIHNldCBhc2lkZSBhIGNlcnRhaW4gYW1vdW50IG9mIG1vbmV5IGZyb20geW91ciByZWd1bGFyIGJhbmtyb2xsIGFuZCBjb25zaWRlciB0aGF0IG1vbmV5IGdvbmUuIApPaCB0aGlzIGlzIGFub3RoZXIgY3JhenkgZXhhbXBsZSBvZiBlZGl0aW5nIGluIHRoZSB0diBzaG93ISBTbyBvbiBzdGFuZCBpbiByZWFsIGxpZmUsIEhlaW1lcmwgc2F5cyBoZSBzYXcgIndoYXQgYXBwZWFyZWQgdG8gYmUgYSBuZWFybHkgaW50YWN0IGJ1bGxldC4iIEJ1dCB0aGV5IGVkaXQgaXQgaW4gdGhlIHNob3cgYW5kIHB1bGwgYSBjbGlwIG9mIGhpbSBzYXlpbmcgImZsYXR0ZW5lZCIgZnJvbSBlbHNld2hlcmUgaW4gdGVzdGltb255LCBhbmQgaW4gdGhlIHNob3cgaXQgbG9va3MgbGlrZSBoZSBzYXlzICJJIHNhdyB3aGF0IGFwcGVhcmVkIHRvIGJlIGEgZmxhdHRlbmVkIGJ1bGxldC4iIElzbiB0aGF0IG51dHM/IExpa2Ugd2hhdCBldmVuIGlzIHRoZSBwb2ludCBvZiBwdWxsaW5nIG91dCB0aGlzIG9uZSB3b3JkIGZyb20gZWxzZXdoZXJlLCByZW1vdmluZyB3b3JkcyBmcm9tIGhpcyB0ZXN0aW1vbnksIHNwbGljaW5nICJmbGF0dGVuZWQiIGludG8gdGhlIG1pZGRsZSBvZiBhIHNlbnRlbmNlLCB0aGVuIGVkaXRpbmcgdGhlIHZpc3VhbCB0aGV5IHdlcmUgdXNpbmcgdG8gY3V0IGF3YXkgZnJvbSBoaXMgZmFjZSBzbyB5b3Ugd291bGRuIHNlZSB0aGV5IGp1c3QgcHV0IHdvcmRzIGluIGhpcyBtb3V0aD8gVGhhdCBob3cgaW50ZW50IHRoZXkgd2VyZSBvbiBoaWRpbmcgZXZlbiBhIG1vZGljdW0gb2YgdHJ1dGgsIGFuZCBtaXNsZWFkIHRoZSB2aWV3ZXIgdG8gdGhpbmsgdGhlIGJ1bGxldCB3YXMgZmxhdHRlbmVkIGFuZCBkYW1hZ2VkIGFuZCBjb3VsZG50IGJlIG1hdGNoZWQgdG8gYSBndW4sIHdoZW4gb2YgY291cnNlIGl0IHdhcyBtYXRjaGVkIHRvIHRoZSBleGFjdCByaWZsZSBoYW5naW5nIG92ZXIgQXZlcnkgYmVkLgpDb25zdGFudGx5IHN0cml2aW5nIHRvd2FyZCBwZXJzb25hbCBncm93dGgsIEkgdHJ5IHRvIGdldCB0aHJvdWdoIGEgYm9vayBwZXIgd2VlayBvbiBidXNpbmVzcywgaW52ZXN0aW5nLCBvciBzZWxmIGRldmVsb3BtZW50LiBJJ20gYSB0cnVlIGJlbGlldmVyIGluIGJ1aWxkaW5nIGJyaWRnZXMgYW5kIHRyeWluZyB0byBhZGQgdmFsdWUgd2hlcmV2ZXIgcG9zc2libGUuIEJ1dCByZWdhcmRsZXNzIG9mIHRoZSBmaW5hbmNpYWwgc3VjY2VzcywgSSBrbm93IEkgaGF2ZSBhIGxvdCB0byBsZWFybiBhbmQgYXBwcm9hY2ggbGlmZSBpbiBhIGh1bWJsZSBmYXNoaW9uLi4gClRoZXkncmUgdGhlIHNhbWUgdGhpbmcgYSBwaHlzaW8gd2lsbCBob29rIHlvdSB1cCB0byB3aGVuIHlvdSBwcmVzZW50IGZvciBzb21lIHNvZnQgdGlzc3VlIGluanVyeS4gCkl0IHNvbWV0aGluZyBsaWtlIGhhdmluZyBhICJsb3ZlIiB1dGlsaXR5IGJpbGwgdGhlIHNhbWUgd2F5IEkgaGF2ZSBhbiAiZWxlY3RyaWNpdHkiIHV0aWxpdHkgYmlsbC4gCkEgcGVyZmVjdCBndWlkZSBpcyBmb3IgYSBwZXJmZWN0IGhhaXJzdHlsZS4uIApTbyBJIG1heSBzZWUgdHdpY2UgaW4gb25lIHllYXI/IHRoaXMgaGFzbiBoYXBwZW5lZCBzaW5jZSBsaWtlIDIwMTIuIApEbyB5b3Ugd2FudCB0byBoYXZlIGEgY2FzaW5vIHBsYXlpbmcgZXhwZXJpZW5jZSwgb3IgYSBwbGF5aW5nIGV4cGVyaWVuY2UgdGhhdCBpcyByZWxheGVkIGFuZCBjb21mb3J0YWJsZT8gRG8geW91IGVuam95IHBsYXlpbmcgdGhlIHNhbWUgZGVja3MgYXMgeW91ciBmYXZvcml0ZSBjYXJkIHBsYXllcnMgb3IgYXJlIHlvdSBzZWVraW5nIHRvIHB1cmNoYXNlIGluZXhwZW5zaXZlIGNhcmQgZGVja3MgdGhhdCBhcmUgZGVzaWduZWQgd2l0aCBxdWFsaXR5IGFuZCBhIGhpZ2ggbGV2ZWwgb2YgY3JhZnRzbWFuc2hpcD8uIApJdCB3YXMgc3VwZXIgZnJ1c3RyYXRpbmcgd2hlbiBzaGUgd291bGQgY29tZSByb2xsaW5nIGluIGFmdGVyIHdlIGJlZW4gYXNsZWVwIGZvciA0IGhvdXJzLiAKU2hlIHNhaWQgaXQgd291bGQgaGF2ZSBhIGRyZXNzIGNvZGUgbWFpbmx5IGZvciB0aGUgd29tZW4gYW5kIG9ubHkgbGV0IGluIHBlb3BsZSB3aG8gd2VyZSBtb2Rlc3RseSBkcmVzc2VkLiAKRWluIGplZGVyLCBkZXIgaW4gZGllc2VyIFJ1bmRlIG1pdHNwaWVsZW4gd2lsbCAobmFjaGRlbSBkaWUgS2FydGVuIHZlcnRlaWx0IHNpbmQpLCBtdXNzIG1pbmRlc3RlbnMgZGVuIEJpZyBCbGluZCIgZWluc2V0emVuLkluIEFudGUiIFNwaWVsZW4sIG11c3MgamVkZXIgZWluZW4gdm9yaGVyIGF1c2dlbWFjaHRlbiBCZXRyYWcgaW4gZGVuIFBvdCBnZWJlbiwgYmV2b3Igbm9jaCBkaWUgS2FydGVuIHZlcnRlaWx0IHd1cmRlbi4gClNwb3J0cyBBcnRpY2xlcyAgU2VwdGVtYmVyIDExLCAyMDA4Ck9uIG9uZSBmYXJtLCB0aGUgbWlsayBwcm9kdWNpbmcgZmVtYWxlcyB3b3VsZCBldmVuIGxpbmUgdXAgdG8gYmUgbWlsa2VkIGluIG9yZGVyIG9mIG9sZGVzdCB0byB5b3VuZ2VzdC4gCk9uIHRoZSBvdGhlciBoYW5kLCBmb3IgZXZlcnkgcGVyc29uIHdobyBnZXRzIHRoZSBtZWFzbGVzIHZpcnVzLCAxNSBvdGhlcnMgY291bGQgYmUgaW5mZWN0ZWQgYmVmb3JlIHRoZSBmaXJzdCBwZXJzb24gZ2V0cyBiZXR0ZXIgb3IgZGllcy4gSXQgc2VlbXMgbWVhc2xlcyBpcyBkb2luZyBPSyB3aXRob3V0IGhhdmluZyB0byBraWxsIHlvdSByaWdodCBhd2F5LCBvciBwYXNzaXZlbHkgZXZvbHZpbmcgYSBzdHJhdGVneSBmb3IgZ2V0dGluZyB5b3UgY2xvc2VyIHRvIG90aGVyIHBvdGVudGlhbCBob3N0cy4uIApJIHN0cnVnZ2xlZCB3aXRoIGdldHRpbmcgaGVscC4gCkJ1dCB3ZSBhcmUgYWxsIHRoZSBiZXR0ZXIgZm9yIGl0LiAKUG9saWNlIHN0cmVzcyB0aGF0IHRoZSBvZmZlbmNlIG9mIHByZXRlbmRpbmcgdG8gcHJhY3RpY2Ugd2l0Y2hjcmFmdCBpbnZvbHZlcyAiaW5kaXZpZHVhbHMgd2hvIGZyYXVkdWxlbnRseSBwb3J0cmF5IHRoZW1zZWx2ZXMgYXMgaGF2aW5nIGZvcnR1bmUgdGVsbGluZyBhYmlsaXRpZXMgb3IgcHJldGVuZCB0byB1c2Ugd2l0Y2hjcmFmdCwgc29yY2VyeSwgZW5jaGFudG1lbnQgb3IgY29uanVyYXRpb24gaW4gb3JkZXIgdG8gb2J0YWluIG1vbmV5IG9yIHZhbHVhYmxlcyBmcm9tIGEgdmljdGltLCIgYW5kIHRoZSBvZmZlbmNlICJpcyBub3QgY29ubmVjdGVkIGluIGFueSB3YXkgdG8gYSByZWxpZ2lvbi4iCkFmdGVyIGEgdmlzaXQgdG8gTG9uZG9uLCBGbGludCBmaW5hbCBmb3VyIGdhbWVzIGFyZSBhZ2FpbnN0IFNhcm5pYSBhbmQgV2luZHNvciwgd2hpY2ggbmVlZCB0aGUgdmljdG9yaWVzLiAKU2Vjb25kIElkd2FsIFNsYWJzLiBUaGV5IGNhbiBiZSBidXN5LiBDbG9nZ3kgKENsb2d3eW4gRHUvciBBcmRkdSkgYW5kIERpbmFzIE1vdCBhcmUgZ3JlYXQgIHRoZSB2aWV3cyBhcmUgc3VibGltZS4gCkl0J3MgYSBiaXQgb2YgYSBjdWx0dXJlIHNob2NrIGJ1dCB5b3UgZXZlbnR1YWxseSBnZXQgb3ZlciBpdC4KU2luY2UgeW91IGRvbid0IGtub3cgd2hhdCB0aGUgY292ZXJlZCBjYXJkIGlzLCB5b3UgY2FuJ3QgYmUgc3VyZSB3aGF0IHRoZSBmaW5hbCBoYW5kIGlzIGdvaW5nIHRvIGJlLiAKSXQgY29uc2lkZXJzIGRlYXRoLCB3aXRoZXJpbmcgcmVsYXRpb25zaGlwcywgbWFuaXB1bGF0aW9uLCBkaXN0YW5jZSwgc2VsZiBkb3VidCwgb24gYW5kIG9uLiBCdXQgYnkgem9vbWluZyBvdXQsIGl0IGlzIG1vcmUgYWJsZSB0byByZWZsZWN0IG9uIGl0c2VsZiBhbmQgY29uc2lkZXIgZXZlcnkgYXNwZWN0Li4gClRoZSBkZWF0aCBjYW1lIGFzIEhRIFRyaXZpYSB3YXMgc2V0IHRvIHVudmVpbCBvbmUgb2YgaXRzIG1vc3QgaW1wb3J0YW50IG1hcmtldGluZyBkZWFscyB0byBkYXRlIHdpdGggR29vZ2xlOyBpdCB3YXMgYWxzbyBhaW1pbmcgdG8gZ28gbGl2ZSB3aXRoIEhRIFdvcmRzLCBsaWtlbmVkIHRvIGEgc3BlZWQgcm91bmQgb2YgV2hlZWwgb2YgRm9ydHVuZS4gCk92ZXJ2aWV3IGZvciBrbm9ja2Rvd25iYXJucwpUaGV5IGFyZSBwYWlkIGVtcGxveWVlcyBvZiBVbml2ZXJzYWwgTWVkaWNpbmUsIGluIG1lZGlhIGFuZCBwcm9tb3Rpb25hbCByb2xlcy4gVGhleSBhcmUgb3JnYW5pc2VycyBvZiB0aGUgYml6YXJyZSBhbmQgc2xlYXp5LCBHaXJsIHRvIFdvbWFuIEZlc3RpdmFsLCBoZWxkIGZvciB0aGUgcGFzdCB0d28geWVhcnMgYXQgTGVubm94IEhlYWQsIHRhcmdldGluZyBqdXZlbmlsZSBnaXJscy4gSXQgdGhlb25lIHdoZXJlIGFkdWx0cyBvdXRudW1iZXIgZ2lybHMsIGFuZCBwcmltYXJ5IHNjaG9vbCBnaXJsc2FyZSBwYWludGVkIHdpdGggbWFrZSB1cGFuZCBlbmNvdXJhZ2VkIGluIGRpc29yZGVyZWQgZWF0aW5nLCBhbmQgcmVncmVzc2l2ZSwgc2V4aXN0IHNvY2lhbCBjb25kaXRpb25pbmcuIEFzcXVpdGggRGF2aXN3ZXJlIGFsc28gb3JnYW5pc2VycyBvZiBhbnRpIGN5YmVyYnVsbHlpbmcgZXZlbnRzIGluIHRoZSBOb3J0aGVybiBSaXZlcnMgcGl0Y2hlZCB0byBzY2hvb2xzLCBhZ2FpbiB3aXRob3V0IGRpc2Nsb3N1cmUgb2YgdGhlaXIgY3VsdCBiYWNraW5nLCBhbmQgaW4gc3BpdGUgb2YgVW5pdmVyc2FsIE1lZGljaW5lIG1ha2luZyBuYXRpb25hbCBuZXdzIGZvciBidWxseWluZyBjb21wbGFpbmFudHMgYW5kIGpvdXJuYWxpc3RzLgpUaGF0IG9uZSBpbiBwYXJ0aWN1bGFyIG1ha2VzIG1lIHN1c3BlY3QgaXQgbm90IHJlYWwuIEkgaG9wZS4gSSBtZWFuIEkgY2FuIGltYWdpbmUgYSBjaGlsZCBvcGVuaW5nIGEgbWljcm93YXZlIGZ1bGwgb2YgaG90IGNhdCBndXRzIGFuZCBwdXR0aW5nIGFub3RoZXIgYWxpdmUgY2F0IGluIGl0Pz8/IEhvdyBoYXJkIHdvdWxkIHRoZSBzZWNvbmQgY2F0IGhhdmUgYmVlbiBmaWdodGluZyB0byBzdGF5IG91dCBvZiB0aGF0IGRlYXRoIGJveD8gV291bGQgdGhlIG1pY3Jvd2F2ZSBldmVuIHdvcmsgdGhlIHNlY29uZCB0aW1lPyBBbmQgb2ggZ29kLCB0aGUgc21lbGwgLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzVFYgR3VpZGVEaWdpdGFsIFByaW50IEVkaXRpb25USEUgQmxhY2sgVWhsYW5zIGJpa2llIGdhbmcgaGFzIG1vZGlmaWVkIHBsYW5zIHRvIGNvbnZlcnQgaXRzIFRvd25zZW5kIFN0cmVldCBjbHVicm9vbXMgaW4gYSBiaWQgdG8gd2luIHN1cHBvcnQgZnJvbSBBbGJ1cnkgQ291bmNpbCBvbiBNb25kYXkgbmlnaHQuIFRoZSBjb3VuY2lsIHBsYW5uaW5nIGFuZCBkZXZlbG9wbWVudCBjb21taXR0ZWUgdHdvIHdlZWtzIGFnbyByZWplY3RlZCBhIHN0YWZmIHJlY29tbWVuZGF0aW9uIHRvIGFsbG93IHRoZSBwcm9wZXJ0eSB0byBiZSBjaGFuZ2VkIHRvIGEgZnVuY3Rpb24gY2VudHJlIGZvciB0aGUgY2x1YiBleGNsdXNpdmUgdXNlLiBJbiBhIGJpZCB0byByZXZlcnNlIHRoZSBjb21taXR0ZWUgZGVjaXNpb24gb24gYSA1IDMgdm90ZSwgdGhlIEJsYWNrIFVobGFucyBoYXZlIHdvdW5kIGJhY2sgdGhlIGZ1bmN0aW9uIGNlbnRyZSBvcGVuaW5nIGZyb20gc2V2ZW4gZGF5cyBwZXIgd2VlayB0byBvbmx5IFRodXJzZGF5IHRvIFN1bmRheS4gCk9uZSwgb3Igc29tZXRpbWVzIG1vcmUsIG91dCBkYXRlZCBvciB1bm5lY2Vzc2FyeSBydWxlcyBhcmUgZWxpbWluYXRlZCBhdCB0aGUgc2FtZSB0aW1lLi4gCkVhcmx5IHNlYXNvbiBjYW1waW5nPyBVc2UgYm90aCBsYXllcnMgb2YgaW5zdWxhdGlvbiBmb3IgdGVtcHMgZG93biB0byAxNSBkZWdyZWVzLiBPbmNlIEp1bHkgY29tZXMsIGxlYXZlIG9uZSBvciB0d28gb2YgdGhlIGxheWVycyBhdCBob21lIGZvciBhIGxpZ2h0ZXIgcGFjay4uIApJdCBsaXRlcmFsbHkgd29ya3Mgb24gb3Bpb2lkIHJlY2VwdG9ycyBhbmQgYmVoYXZlcyBsaWtlIGFuIG9waW9pZC4gCldlIGxhdWdoZWQgd2l0aCB0aGVtIGZvciBob3Vycy4gVGhleSB3ZXJlIHNvIGludGVyZXN0aW5nIGFuZCBzbyBmdW4gdG8gaGFuZyBvdXQgd2l0aCwgYW5kIHdoZW4gdGhlIGJhciBjbG9zZWQgYXQgbWlkbmlnaHQsIGV2ZW4gdGhvdWdoIHdlIHNob3VsZCBoYXZlIGJlZW4gZXhoYXVzdGVkLCB3ZSBzdGlsbCB3YW50ZWQgdG8gaGFuZyBvdXQuIEx1Y2tpbHksIHRoZSB0YXhpIGRyaXZlciB0aGV5IGtlcHQgb24gcmV0YWluZXIgZm9yIHRoZSBldmVuaW5nIGFsc28gd2FudGVkIHRvIGNvbnRpbnVlIHRoZSBmdW4sIGFuZCB0aGlzIGlzIGhvdyB3ZSBmb3VuZCBvdXJzZWx2ZXMgc3BlbmRpbmcgQ2hyaXN0bWFzIEV2ZSBhdCBhIG5hcmdpbGVoIGNhZmUuIEVtaWx5LCBXZW5kaSwgSnVzdGluLCBDaGFkLCBJYnJhaGltIGFuZCAxNCBvdGhlciBKb3JkYW5pYW4gbWVuLiBMb29raW5nIGJhY2ssIEkgY2FuIHRlbGwgeW91IHdoYXQgc3BlY2lmaWNhbGx5IG1hZGUgaXQgdGhlIGJlc3QgQ2hyaXN0bWFzIEV2ZSBvbiB0aGUgcm9hZCBldmVyLCBidXQgd2UgaGFkIHN1Y2ggYSBncmVhdCB0aW1lIHdpdGggdGhlbSEgSSBkb24gcmVtZW1iZXIgdGhlIGxhc3QgdGltZSBJIGxhdWdoZWQgbGlrZSB0aGF0IG5pZ2h0IQpTd2VldC4gRW5qb3khIDpELiAKWW91IGRlcG9zaXQgbW9uZXksIHByZXNzIGEgZmV3IGJ1dHRvbnMgYW5kIChob3BlZnVsbHkpIGNvbGxlY3QgeW91ciB3aW5uaW5ncy4gU28gd2h5IG9uIGVhcnRoIHdvdWxkIGFueW9uZSB3YW50IHRvIHBsYXkgb25saW5lLCB3aGVuIHRoZXkgY291bGQgZ2V0IHRoZSByZWFsIHRoaW5nIGFuZCB0aGUgc2FtZSByZXN1bHQ/VGhlIGFuc3dlciBteSBmcmllbmRzIGlzIHNpbXBsZSwgY29udmVuaWVuY2UuIEltYWdpbmUgeW91IGFyZSB3aGVyZSBJIGFtLiBBIHNtYWxsIHRvd24sIHRoZSBuZWFyZXN0IGNpdHkgaXMgYW4gaG91ciBhd2F5LiAKSVQgSVMgVEhFIDNyZCBtaWxsZW5uaXVtLiAKU2Nvb3AgUmV2aWV3IG9mIEJvb2tzIEJvb2sgUmV2aWV3cwpJIG1heSBtaXNzIG91dCBvbiB0aGUgYmVzdCBsb29raW5nIHNob2VzIEkgaGF2ZSBldmVyIHNlZW4uLiAKQW5kIGl0IHdhcyBhIGRhbW4gZ29vZCBhbnRpdHVzc2l2ZS4gSGVyb2luIGlzIG1ldGFib2xvc2VkIGludG8gbW9ycGhpbmUuIFdoYXQgYW50aXR1c3NpdmUgZG8gd2UgdXNlIHRvZGF5PyBDb2RpZW5lLiBXaGljaCBpcyBtZXRhYm9saXNlZCBpbnRvIG1vcnBoaW5lLgpNeSBmaXJzdCBwZXJzb24gUE9WIHByb3RhZ29uaXN0IGdldHMgb25lIGNvbmNyZXRlIG1vbWVudCBvZiBwaHlzaWNhbCBkZXNjcmlwdGlvbiBpbiB0aGUgd2hvbGUgc3Rvcnk6ICJFdmVyeWJvZHkgc2F5cyBteSB0d2luIGxvb2tzIGxpa2UgV2lub25hIFJ5ZGVyIGJ1dCBldmVuIHRob3VnaCB3ZSB0ZWNobmljYWxseSBpZGVudGljYWwsIHNoZSB0aGUgcHJldHRpZXIgb25lLiIgVGhlcmUgYXJlIGEgY291cGxlIHJlZmVyZW5jZXMgdG8gaGVyIGJvZHkgdHlwZSBsYXRlciBvbjsgeW91IG9ubHkgaGVhciBhYm91dCBoZXIgY2xvdGhpbmcgd2hlbiBpdCBwbG90IHJlbGV2YW50LiBUaGF0IGl0LiBPdGhlciBjaGFyYWN0ZXJzIGRlc2NyaXB0aW9ucyBhcmUgdXNlZCBhcyBhbiBpbnNpZ2h0IGludG8gaG93IHNoZSByZWFsbHkgZmVlbHMgYWJvdXQgdGhlbTsgdGhleSBydW4gdGhlIGdhbXV0IGZyb20gZGlzbWlzc2l2ZSB0byB0aG91Z2h0IHByb3Zva2luZyB0byByZWFsbHkgZnVja2luZyBob3JueSwgYW5kIHRoYXQgYWxsIGluIHNlcnZpY2Ugb2YgdGhlIGFjdHVhbCBjaGFyYWN0ZXIuCkJlaSBkZW4gbnVuIGVycmVpY2h0ZW4gKyA4IFJwIGJlZGV1dGV0IGRpZXMgZWluZSBFcmhodW5nIGRlcyBFaW5rb21tZW5zIHZvbiA3LDYgYmlzIDkuMyUgLiAKQXQgdGhpcyBhZ2UgSSBoYXZlIHZlcnkgbGl0dGxlIHRvIG5vIGludGVyZXN0IGluIHNleHVhbCByZWxhdGlvbnMgYXQgYWxsLiAKQXQgU2FuY3R1YXJ5IHRoZXkncmUgbm90IHJlbGVnYXRlZCB0byBzaXR0aW5nIGluIGEgY3JhbXBlZCB3YWl0aW5nIHJvb20gd2hpbGUgdGhlaXIgcGFydG5lcnMgYXJlIGJlaW5nIHBhbXBlcmVkLiBOb24gY3VzdG9tZXJzIGNhbiByZWxheCBieSB0aGUgY296eSBmaXJlcGxhY2UsIGRyaW5rIGZyZXNoIGNvZmZlZSBvciB0ZWEsIGFuZCBnYXplIGF0IGEgdmFyaWV0eSBvZiBiaXJkcyBtdW5jaGluZyBvbiBmZWVkZXJzIGluIHRoZSBiYWNreWFyZC4gV2hlbiB0aGUgbWFzc2FnZXMgYW5kIGZhY2lhbHMgYXJlIG92ZXIsIGV2ZXJ5Ym9keSwgZXZlbiB0aG9zZSB3aG8gZGlkbid0IHBhcnRha2UgaW4gdGhlIHNlcnZpY2VzLCBnb2VzIGhvbWUgcmVsYXhlZC4uIApFRElUOiBJIHNob3VsZCBhbHNvIHNheSB0aGF0IEkgd2FzIDEwMCUgYmVoaW5kIGhlciB1bnRpbCBJIGhlYXJkIHRoaXMgY2xpcC4gSGVyIGFza2luZyBpZiBwZW9wbGUgaGF2ZSBhICJkdWFsIGFsbGVnaWFuY2UiIHRvIElzcmFlbCBpcyBsZWdpdGltYXRlbHkgcXVpdGUgYW50aXNlbWl0aWMsIGl0IGFsc28gYW4gb2xkZXIgdGhhbiB0aW1lIHRyb3BlIHRoYXQgaGFzIHJlcGVhdGVkbHkgc2h1dCB1cyBvdXQgb2YgcGFydGljaXBhdGluZyBpbiBwb2xpdGljcyBpbiBwbGFjZXMgdGhhdCBhcmVuIElzcmFlbCAoZXZlbiB0aG9zZSBvZiB1cyB3aXRob3V0IElzcmFlbGkgY2l0aXplbnNoaXAsIG1lcmUgZGlhc3BvcmEgSmV3cykuLiAKSGUgaGFzIGEgdmVyeSBnb29kIHBva2VyIGZhY2UuIEhlIGRvZXNuIGdldCBmcnVzdHJhdGVkLCBhbmQgaWYgaGUgZG9lcyBoZSBkb2VzbiBzaG93IGl0IHRvIHlvdS4uIApUYWNvbGlrZXN3ZWVkICA0IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhpcyBxdWVzdCBzdGFydHMgYXMgYSBzbWFsbCBwcmljZSBpcyBwYWlkIHRvIGFueSBhZHZlbnR1cmVzIHRoYXQgd291bGQgZ2V0IGtpbmcgYW4gaW5mb3JtYXRpb24gYWJvdXQgdGhlICJzYW5jdHVhcnkiLiBUaGlzIHF1ZXN0IGlzIGdyZWF0IGlmIHlvdSBoYXZlIGFsbCByb3VuZCBwYXJ0eSBhbmQgeW91IHdhbnQgdG8gaW50cm9kdWNlIHRoZW0gdG8gdGhlIGlkZWEgb2YgZXhwbG9yaW5nIHRoZSBteXN0ZXJpb3VzIHNhbmN0dWFyeS4gVGhlIEtpbmcgaXMgaW4gcmVhbGl0eSBtb3RpdmF0ZWQgYnkgaGlzIGdyZWVkIHRvIGxvb3QgYWxsIHRyZWFzdXJlcyB0aGF0IGhlIGNvdWxkIGZpbmQuIApJIHdvdWxkIHN1Z2dlc3QgdGFsa2luZyB0byBhIGRvY3Rvci4gClNlcnVtIDI1KE9IKSB2aXRhbWluIEQzIFsyNShPSClEM10gYW5kIHBhcmF0aHlyb2lkIGhvcm1vbmUgY29uY2VudHJhdGlvbnMgd2VyZSBkZXRlcm1pbmVkIGF0IGJhc2VsaW5lLiBTdWJqZWN0cyB3ZXJlIHNlcGFyYXRlZCBpbnRvIDMgZ3JvdXBzIGJhc2VkIG9uIHNlcnVtIDI1KE9IKUQzIGxldmVscyB3aXRoIHRoZSBmb2xsb3dpbmcgY3V0IG9mZiB2YWx1ZXM6IDUwIG5tb2wvTCAobm9ybWFsKS4gT3RoZXIgYmFzZWxpbmUgbWVhc3VyZW1lbnRzIGluY2x1ZGVkIGJvZHkgbWFzcyBpbmRleCwgbWluaSBudXRyaXRpb25hbCBhc3Nlc3NtZW50LCBncmlwIHN0cmVuZ3RoLCBzZXJ1bSBjYWxjaXVtIGNvbmNlbnRyYXRpb24gYW5kIGNyZWF0aW5pbmUgY2xlYXJhbmNlLCB3aGljaCB3ZXJlIHVzZWQgYXMgY292YXJpYWJsZXMuIFBJIHdhcyBhc3Nlc3NlZCB1c2luZyBhIGNvbXB1dGVyaXplZCB2aXJ0dWFsIHJlYWxpdHkgc3lzdGVtIChNZWRpY2FhLCBVcnVndWF5KS4gTWVhc3VyZWQgcGFyYW1ldGVycyBpbmNsdWRlZCBsaW1pdHMgb2Ygc3RhYmlsaXR5IChMT1MpIGFuZCBjZW50cmUgb2YgcHJlc3N1cmUgKENPUCkgdW5kZXIgZXllcyBjbG9zZWQgb24gZm9hbSAoRUNGKSBhbmQgdmlzaW8gdmVzdGlidWxhciBzdGltdWxhdGlvbi4gVGhlIGVzdGltYXRlZCBzd2F5aW5nIGFyZWEsIGNvbXB1dGVkIGZyb20gdGhlIGVsbGlwc2Ugb2YgY29uZmlkZW5jZSB1bmRlciBleWVzIGNsb3NlZCBzdGFuZGluZyBvbiBmb2FtIChFQ0YpLCB3YXMgYWxzbyB1c2VkIGFzIGEgUEkgcGFyYW1ldGVyLiBHYWl0IHZlbG9jaXR5IChHVikgd2FzIG1lYXN1cmVkIHVzaW5nIGEgR2FpdFJJVEUgd2Fsa3dheSBzeXN0ZW0uCkNob29zaW5nIHRoZSBSaWdodCBCaW5nbyBHYW1lcyBXaWxsIEltcHJvdmUgWW91ciBHYW1ibGluZyBFeHBlcmllbmNlCkdvZCBkaWQgbm90IGZvcm0gYW55dGhpbmcgZWxzZSBhbW9uZyBhbGwgb2YgSGlzIGNyZWF0aW9uIGluIHRoZSB3aG9sZSB1bml2ZXJzZSBvbiBIaXMgaW1hZ2U7IG5vdCBldmVuIGFuZ2xlcyBUZWxsIG1lIG9uZSB0aGluZzsgd2hvIGRvIHlvdSBsb3ZlIG1vc3QgaW4geW91ciBsaWZlPyBJZiB5b3UgYXJlIGEgcGFyZW50OyBkZWZpbml0ZWx5IHlvdSB3aWxsIHNheSBjaGlsZCBXaHk/IEJlY2F1c2UsIHlvdXIgYmFieSBpcyB5b3VyIGZsZXNoIGJsb29kLiBZb3VyIGJhYnkgaXMgeW91ciBpbWFnZS4gV2UgYXJlIGFsd2F5cyBzbyBwcm91ZCB0byBzYXkgdGhhdCwgaGlzIG9yIGhlciBleWVzIGFyZSBqdXN0IGxpa2UgbW9tLCBkYWQsIGdyYW5kIHBhIG9yIGdyYW5kIG1vbS4uIApUbyBtZSwgdGhlIGJlbmVmaXRzIG9mIGhhdmluZyBhIGd1biBmb3IgaG9tZSBwcm90ZWN0aW9uIHZhc3RseSBvdXR3ZWlnaCBhIHNjZW5hcmlvIHdoZXJlIHNvbWVib2R5IHdpdGggYW4gaW5mZXJpb3Igd2VhcG9uIG1pZ2h0IGRpc2FybSB5b3UuIApUaGVyZSBhcmUgb3RoZXIgd2F5cywgYnV0IHNlcGFyYXRlIGFuZCBhcGFydCBpcyBlYXNpZXIuIEFuZCB5b3UgZG9uJ3QgaGF2ZSB0byBsaXZlIGluIHR3byBkaWZmZXJlbnQgcGxhY2VzIGZvciB0aGF0IHRvIGhhcHBlbi4gCk1vc3QgbmV3IGJ1aWxkcyBpbiB0aGUgYXJlYSwgdGhpcyBob21lIGlzIHRyYW5zaXRpb25hbC90cmFkaXRpb25hbCBpbiBmZWVsLCBzbyB3ZSBhaW1lZCBmb3IgYW4gdW5kZXJzdGF0ZWQgbG9vayB3aXRoIG5vIGRhdGUgc3RhbXAsIGEgaG9tZSB0aGF0IGlzIGVsZWdhbnQgYnV0IGxpdmFibGUsIHNoZSBzYXlzLi4gCkdlbWVpbnNjaGFmdGxpY2hlcyBVcmxhdWJzCk92ZXJ2aWV3IGZvciBhcmNoaW1pbm9zCkkgc2VhcmNoZWQgU2F5IFllcyB0byBUaGUgRHJlc3MgYW5kIGZvdW5kIGhlciwgdGhlbiBmb3VuZCB0aGlzLiBJIGFtIGRlZXBseSBzYWRkZW5lZC4gU2hlIHdhcyBzdWNoIGEgZG9sbCEgUGVyc29uYWxpdHksIEJlYXV0eSwgYW5kIGp1c3QgYSB1cGJlYXQgcHJlc2VuY2UgYWJvdXQgaGVyLiAKTXkgZmlyc3QgbW90b3JjeWNsZSB3YXMgYSAxOTQzIEtudWNrbGVoZWFkIEhhcmxleSBEYXZpZHNvbi4gV2hlbiBJIGZvdW5kIHRoZSBiaWtlIGZvciBzYWxlIEkgaGFkIG5vIG1vbmV5LCBidXQgSSBrbmV3IEkgd2FudGVkIHRoaXMgZHJlYW0gbWFjaGluZS4gCllvdSBkZWNpZGUgdG8gc2VlIHdoYXQgdGhpcyBwZXJzb24gaXMgbGlrZSwgc28geW91IGV4ZWN1dGUgYSBxdWljayBjb21tYW5kIHRvIHRha2UgYSBsb29rIGF0IHdoYXQgdGhlIEludGVybmV0IGhhcyB0byBzYXkgYWJvdXQgaGltIG9yIGhlci4gVGhyb3VnaCBmYWNpYWwgcmVjb2duaXRpb24gc29mdHdhcmUgYW5kIGEgY29ubmVjdGlvbiB0byB0aGUgSW50ZXJuZXQsIHlvdSBoYXZlIGluc3RhbnQgYWNjZXNzIHRvIHB1YmxpYyBpbmZvcm1hdGlvbiBhYm91dCB5b3VyIGludGVyZXN0LCBpbmNsdWRpbmcgYW55IHNvY2lhbCBuZXR3b3JrcyBoZSBvciBzaGUgbWlnaHQgYmVsb25nIHRvLiBJdCBhbGwgYXBwZWFycyBpbiBhIGNsb3VkIGFyb3VuZCB0aGUgcGVyc29uIGFuZCBzb29uIHlvdSBrbm93IGhpcyBvciBoZXIgaW50ZXJlc3RzLCBvcGluaW9ucyBhbmQgZXZlbiByZWxhdGlvbnNoaXAgc3RhdHVzLiAKV2hhdCBhYm91dCB0aGUgZmFjdCB0aGF0IGEgY29sbGVnZSB3b3VsZCBsaWtlbHkgbm90IHRha2UgaW4gYSB3aGl0ZSBwZXJzb24sIGJ1dCBhY2NlcHRzIG9ubHkgbWlub3JpdGllcyB3aXRoIG9wZW4gYXJtcz8gV2hhdCBhYm91dCB0aGUgZmFjdCB0aGF0IGl0J3Mgc29jaWFsbHkgYWNjZXB0YWJsZSBmb3Igc29tZSByZWFzb24gdG8gYmFzaCB3aGl0ZSBwZW9wbGUgYmVjYXVzZSBvdGhlciB3aGl0ZSBwZW9wbGUgZnJvbSBtdWx0aXBsZSBkZWNhZGVzIGFnbyBqdXN0IGhhcHBlbmVkIHRvIGJlIGJhZD8gV2hhdCBhYm91dCB0aGUgd2hpdGUgYXV0aXN0aWMgYm95IHdobyB3YXMga2lkbmFwcGVkIGFuZCB0b3J0dXJlZCBmb3IgNDggaG91cnMgYnkgNCBibGFjayB0ZWVucyBjYXVzZSBvZiBoaXMgc2tpbiBjb2xvciwgYW5kIHRoZSBDaGljYWdvIHBvbGljZSBERUZFTkRJTkcgdGhlIDQgdGVlbnMgc2F5aW5nIHRoYXQgImtpZHMgZG8gc3R1cGlkIHN0dWZmIiwgYW5kIENOTiBnb2luZyBhcyBmYXIgYXMgdG8gc2F5IHRoYXQgdGhlIGtpZHMgImFyZW4ndCBldmlsIiBhbmQgImp1c3QgaGF2ZSBiYWQgaG9tZSB0cmFpbmluZyI/IFdoYXQgYWJvdXQgdGhlIG11bHRpcGxlIHdoaXRlIHBlb3BsZSBsaXZpbmcgaW4gcG92ZXJ0eT8KSSdtIHVwIHRvIDEwMCBtaWxlcyBhIHdlZWsgKDMgZGF5cyByaWRpbmcsIDIgZGF5cyBzdHJlbmd0aCB0cmFpbmluZykgYWdhaW4gd2l0aCBhYm91dCAzayA0ayBlbGV2YXRpb24gZ2Fpbi4gV2FybSB1cCB3aXRoIGVhc3kgc3Bpbm5pbmcgb24gZmxhdCByb2FkcyBmb3IgMTUgbWludXRlcy4gS2VlcCBhIHN1cGVyIGhpZ2ggY2FkZW5jZSwgaW5jcmVhc2UgbXkgbWlsZWFnZSA1IHBlcmNlbnQgYSB3ZWVrIGlmIG5vIHBhaW4uIElmIHBhaW4gYmFjayBvZmYgYW5kIHRha2UgMyByZXN0IGRheXMgYW5kIGRvIG5vdCBpbmNyZWFzZSBtaWxlYWdlLiBsb3RzIG9mIHN0cmV0Y2hpbmcgYW5kIGZvYW0gcm9sbGVyIChlc3BlY2lhbGx5IGFmdGVyIHJpZGluZykuIFN0aWxsIGljaW5nIGEgbG90LiBJJ20gYWx3YXlzIG9uIHRoZSB2ZXJnZSBvZiBnZXR0aW5nIHRoZSB0ZW5kZXIgcGFpbiBhZ2FpbiBhbmQgSSBjb3VsZCBnbyBjcmFuayBhIGdvb2QgNDAgbWlsZXIgd2l0aCBzb21lIGhpbGxzIGFuZCBnZXQgaXQuIFNvbWUgdGFsayBhYm91dCB0aGlzICJnbGFzcyBjZWlsaW5nIj8KRW4gaW4gaGV0IHBlbnNpb24gaGFkZGVuIHplIGVlbiB3aWpua2VsZGVyIGVuIHplbGZzIGVlbiBlaWdlbiBvbmRlcmdyb25kc2UgbWlqbmdhbmcuIApEb24gdHVybiB5b3VyIGZlbGxvdyBwbGF5ZXJzIGludG8gZ29kcy4gCkknbSBzZXQgcGxheXMsIEhlaWxkLCBLaHJpcywgYW5kIE1pcm90aWMgd291bGQgc3RyZXRjaCBhbnkgZGVmZW5zZSBzbyB3aWRlIHRoYXQgdGhleSB3b3VsZCBlaXRoZXIgZ2V0IHdpZGUgb3BlbiAzcyBvciB3aWRlIG9wZW4gZHJpdmluZyBsYW5lcyBmb3IgR2lhbm5pcyBhbmQgRm94Lk5vdCB0byBtZW50aW9uIHRoYXQgdGhleSBjb3VsZCBoYXZlIEJyb0xvIGFuZCBESiBvZmYgdGhlIGJlbmNoLnNlYSBoYXplICAxIHBvaW50ICBzdWJtaXR0ZWQgMTkgZGF5cyBhZ29UaGF0J3MgaG9ycmlibGUuIApXb28gSGVyIFdpdGggYSBDb3VwbGVzIE1hc3NhZ2UKTGVzcyBwaXhlbCBwdXNoaW5nIHRoZXNlIGRheXMsIGFuZCBtb3JlIG9mIGZhY2lsaXRhdGlvbiwgcGl0Y2ggcHJlc2VudGF0aW9ucywgc3Rha2Vob2xkZXIgbWVldGluZ3MsIGV0Yy4gVGhpcyBoYXMgYmVlbiBhIGh1Z2UgYW5kIFNUUkVTU0ZVTCBjaGFuZ2UgZm9yIG1lIGJlY2F1c2UgSSBhbHdheXMgYmVlbiBhIGhhbmRzIG9uIHBpeGVsIGNyYWZ0aW5nIGRlc2lnbmVyLiAKRG9uYywgZGV1eCBwaXNvZGVzIERSQUdPIHB1YmxpcyBvZmZpY2llbGxlbWVudCBkYW5zIGxlcyBqb3VybmF1eCB0YXRzIHVuaWVucy4gQ2UgcXVpIG5lIG5vdXMgZW1wY2hlIHBhcyBub3VzIGF1dHJlcyBxdWkgbG1lcyBDT1EgSEFSREkgbG9yc3F1ZSBub3VzIHRpb25zIGNvbGllcnMsIGRlIGNvbXB0ZXIgcGx1dHQgdHJvaXMgcGlzb2RlcyBEUkFHTy4gCkRhcyBoZWl0LCBvaG5lIGRpZXNlIENvb2tpZXMgaXN0IGRpZXNlIFdlYnNpdGUsIGJlemllaHVuZ3N3ZWlzZSBkZXIgRGllbnN0LCBuaWNodCB3aWUgdm9yZ2VzZWhlbiBudXR6YmFyLiAKV2VubiBkZXIgVmVyc3RhbmQgZXR3YXMgaHJ0IGRpZSBzY2hlaW50IHdpZSBhYnNvbHV0ZXIgUXVhdHNjaCBhdXNzY2hhbHRldCB1bmQgbmljaHQgaHJlbi4gCklmIHlvdSB0YWtlIGEgbG9vayBhdCBpbWFnZXMgb2YgdGhlIFNrdWxkZWxldiBzaGlwcyAod2hpY2ggYXJlIHZlcnkgcGFydGlhbCBzaGlwcykgb3IgdGhlIE9zZWJlcmcgc2hpcCwgdGhleSByZWFsbHkgbm90IHZlcnkgYmlnIGF0IGFsbCAoc2VlIHRoaXMgd2l0aCBwZW9wbGUgdG8gc2NhbGUpICAgdGhlcmUganVzdCBsaXRlcmFsbHkgbm90IHJvb20gZm9yIGFub3RoZXIgZGVjay4gSSBzdXBwb3NlIHRoZXkgY291bGQgaGF2ZSBidWlsdCB0aGUgc2lkZXMgdXAgYW5kIGJlZW4gYWJsZSB0byBkZWNrIG92ZXIgdGhlIGludGVydmVuaW5nIHNwYWNlLCBidXQgdGhhdCB3b3VsZCBoYXZlIG1hZGUgdGhlIG92ZXJhbGwgc2hpcCBoZWF2aWVyIGFuZCBtb3JlIHVud2llbGR5Li4gCiJDbGluaWNhbCBzdHVkaWVzIG9uIGRpZXRhcnkgc3VwcGxlbWVudGF0aW9uIHdpdGggbiAzIChvbWVnYSAzKSBwb2x5dW5zYXR1cmF0ZWQgZmF0dHkgYWNpZHMgKFBVRkFzKSwgc3VjaCBhcyB0aG9zZSBwcmVzZW50IGluIGZpc2ggb2lscywgaGF2ZSBkZW1vbnN0cmF0ZWQgbW9kdWxhdGlvbiBvZiBpbmZsYW1tYXRvcnkgc3ltcHRvbXMgaW52b2x2ZWQgaW4gdGhlIHBhdGhvZ2VuZXNpcyBvZiBhcnRocml0aXMgLiJOIDMgUFVGQXMgKGJ1dCBub3Qgb3RoZXIgY2xhc3NlcyBvZiBmYXR0eSBhY2lkcykgY2F1c2VzIGFuIGFicm9nYXRpb24gb2YgY3l0b2tpbmUgaW5kdWNlZCBpbmZsYW1tYXRpb24gbWVkaWF0b3JzIGFuZCBkZWdyYWRhdGl2ZSBlbnp5bWVzLgpUaGVyZSBhcmUgV29ybGQgQ2hhbXBpb25zaGlwIGdhbWVzLCB0b3VybmFtZW50cyBhbmQgZXZlbiBhIHNob3cgd2hlcmUgYWxsIHRoZSBwbGF5ZXJzIGFyZSBjZWxlYnJpdGllcyAocmVnYXJkbGVzcyBvZiB0aGVpciBwb2tlciBza2lsbHMpLiBUaGUgc2hvd3MgYXJlIGhvc3RlZCBieSBjdXJyZW50IHBva2VyIHBsYXllcnMsIG1hbnkgb2Ygd2hvbSBhcmUgdmVyeSBzdWNjZXNzZnVsIGF0IHRoZWlyIHByb2Zlc3Npb24uIFRoZSBtZWRpYSBjb3ZlcmFnZSBoYXMgdHVybmVkIG1hbnkgb2YgdGhlc2UgcGxheWVycyBpbnRvIG1pbmkgY2VsZWJyaXRpZXMgaW4gdGhlaXIgb3duIHJpZ2h0Li4gCk9idmlvdXNseSwgeW91IGNhbiB0cnkgdG8gam9pbiBhZ2FpbiBiZWZvcmUgeW91IHRyeSB0byBnZXQgbWFycmllZC4gQnV0IGJlIHByZXBhcmVkIGZvciBhIGxlc3Mgam95ZnVsIGRpc2N1c3Npb24gd2l0aCBhIHByaWVzdC4gSXQgaXMgcG9zc2libGUgYnV0IGJlIGF3YXJlIG9mIHdoYXQgeW91IGFyZSBkb2luZy4KV2Ugc2VlIGNvbW1lcmNlIGFsbCBhcm91bmQgdXMgaW4gaW4gbWlsbGlvbnMgb2YgZGlmZmVyZW50IGZvcm1zLiAKV2hpY2ggb25lcyB3aWxsIHlvdXIgY29tcGFueSBjYXBpdGFsaXplIG9uIGluIHRoZSBuZXh0IHllYXI/LiAKSGUgaXMgYSBtb2RlbCBvZiBkdXR5LiAKQXMgYSBraWQgSSB3YXMgY29udmluY2VkIEkgY291bGQgc2VlIGFsbCBvZiBpdHMgZXllcyBkZXNwaXRlIGl0IGJlaW5nIG9uIHRoZSBjZWlsaW5nIGJlY2F1c2UgaXQgd2FzIHNvIG1hc3NpdmUuIApEdWNrRHVja0dvIGdldHMgaXRzIHJlc3VsdHMgZnJvbSBwbGFjZXMgbGlrZSB5YWhvbyBhbmQgQmluZy4gR3Vlc3Mgd2hlcmUgdGhleSBnZXQgdGhlaXIgcmVzdWx0cyBmcm9tPyBUaGUgc2FtZSBwbGFjZSBldmVyeSBvdGhlciAibm9uIGdvb2dsZSIgc2VhcmNoIGVuZ2luZSBpbiB0aGUgVVMgZ2V0cyB0aGVpciByZXN1bHRzLCBnb29nbGUuIE5vIG1hdHRlciB3aG8geW91IHNlYXJjaCB3aXRoIHRoZSByZXN1bHRzIGFyZSBzb21laG93IGxpbmtlZCB0byBnb29nbGUgYW5kIGluZmx1ZW5jZWQgYnkgdGhlaXIgcmVzdWx0cy4gQWRkIHRvIHRoYXQgdGhlIGZhY3QgdGhhdCBHb29nbGUgdHJhY2tpbmcgaXMgc28gcGVydmFzaXZlIHRoYXQgZXZlbiBnb3Zlcm5tZW50IHdlYnNpdGVzIGFyZSBzZW5kaW5nIGRhdGEgdG8gR29vZ2xlIChvZnRlbiB2aWEgZ29vZ2xlYXBpcykgYW5kIG5vdyBpdCBiYXNpY2FsbHkgaW1wb3NzaWJsZSBmb3IgeW91ciBhdmVyYWdlIHBlcnNvbiB0byBhdm9pZCBzZW5kaW5nIHRoZWlyIGRhdGEgdG8gR29vZ2xlLiBHb29nbGUgYWxzbyBoYXMgeW91dHViZSB3aGljaCBoYXMgbm8gcmVhbCBjb21wZXRpdGlvbiAoTWFueSBtYW55IHlvdXR1YmVycyBhcmUgZGVzcGVyYXRlIGZvciBhIHZpYWJsZSBhbHRlcm5hdGl2ZSkgYW5kIEFuZHJpb2Qgd2hvc2Ugb25seSBtZWFuaW5nZnVsIGNvbXBldGl0aW9uIGlzIEFwcGxlIHdobyB0aGV5IHNoYXJlIGEgaGlnaGx5IHByb2ZpdGFibGUgZHVvcG9seSB3aXRoLiBJIGFncmVlIHRoYXQgdGVsZWNvbXMgbmVlZCB0byBiZSBicm9rZW4gdXAgYnV0IHRoZXJlIG5vdGhpbmcgd3Jvbmcgd2l0aCBnb2luZyBhZnRlciBnb29nbGUuCktpdGltYXQgTE5HIGVtcGxveWVlcy4uIApNYW55IHBsYXllcnMgd2lsbCBjYWxsIGEgaGFsZiBiZXQgaW4gdGhlIHNtYWxsIGJsaW5kIHdpdGggYW55IHR3byBjYXJkcy4gQWZ0ZXIgcmVhZGluZyB0aGlzIGFydGljbGUsIGhvcGVmdWxseSB5b3Ugd29uJ3QgcGxheSB0aGlzIHdheSBhcyBpdCBjYW4gY29zdCB5b3UgY29uc2lkZXJhYmxlIG1vbmV5IGluIHRoZSBsb25nIHJ1bi4gVGhpcyBvbmUgZXJyb3IsIHdoZW4gZG9uZSByZXBlYXRlZGx5LCBjYW4gYmUgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB3aW5uaW5nIGFuZCBsb3NpbmcuClJhZ2ZsYW4gdQpMaWtlIGFuIGFsbGlnYXRvcidzIG1vdXRoLCB0aGUgUjggY29uc2lzdHMgb2YgdHdvIHNwcmluZyBsb2FkZWQsIGhlYXZ5IGR1dHkgcGxhc3RpYyBqYXdzIGFib3V0IDE4IGluY2hlcyBhcGFydCB0aGF0IHdhbnQgbm90aGluZyBtb3JlIHRoYW4gdG8gc25hcCBzaHV0LiBPbmx5IGluc3RlYWQgb2Ygc2hhcnAgdGVldGgsIGVhY2ggc2lkZSBvZiB0aGUgUjgsIGRlc2lnbmVkIGJ5IGFuIGVuZ2luZWVyIHdpdGggYSBsb3ZlIGZvciBlbmR1cmFuY2Ugc3BvcnRzLCBpcyBsaW5lZCB3aXRoIGZvdXIgc21vb3RoIHdoZWVscywgdGhlIGtpbmQgZm91bmQgb24gaW5saW5lIHNrYXRlcy4uIApMYXkgb2ZmIGNhZmZpZW5lIHNldmVyYWwgaG91cnMgYmVmb3JlIGJlZHRpbWUuIApBbHRob3VnaCB0aGUgc291bmQgb2YgYSBrZXR0bGUgaXMgdW5kZXJzdG9vZCB0byBiZSBjYXVzZWQgYnkgLiBBZ2Fyd2FsIGFsc28gZXhwbGFpbiB3aHkgdGhpcyBlZmZlY3QgbWFrZXMgYSB3aGlzdGxlLCByYXRoZXIgdGhhbiBhbm90aGVyIG5vaXNlLC4gCkl2ZSBzZWVuIG15IGNvbW11bml0eSBhdCBwb2xpdGljYWwgcmFsbGllcyB0aGV5IHdhbnQgY2hhbmdlLiBZZXMsIHdlIGFyZSBzbG93ZXIgd2l0aCBjaGFuZ2UgdGhhbiBhIGxvdCBvZiBwbGFjZXMuIEFuZCB5ZXMsIHdlIGFyZSBmaWdodGluZyBhbiB1cCBoaWxsIGJhdHRsZSB3aXRoIENpdHkgQ291bmNpbCBidXQgaXRzIGEgZmlnaHQgbm9uZXRoZWxlc3MuIApBcmUgeW91IHJlZmVycmluZyB0byBjaXJjdW1zdGFuY2VzIHN1Y2ggYXMgQnVyd2VsbCB2LiBIb2JieSBMb2JieSwgYW5kIFp1YmlrIHYuIEJ1cndlbGwsIHJlZ2FyZGluZyBpbnN1cmFuY2UgY292ZXJhZ2UgZm9yIGNvbnRyYWNlcHRpb24/IE9yIGlzIHRoZXJlIHNvbWV0aGluZyBJIG5vdCB0aGlua2luZyBvZiwgd2hlcmUgdGhlcmUgd2FzIGFjdHVhbGx5IHNvbWV0aGluZyBkb25lIHRvIG1ha2UgaXQgY29zdCBtb3JlICh2cyByZXRhaWwgcHJpY2UpLCBsaWtlIGEgdGF4IG9uIGl0PwpVUyBvZmZpY2lhbHMgaGF2ZSBzYWlkIHRoZXkgYXJlIGV4YW1pbmluZyB0aGUgY2xhaW0sIGJ1dCBhcmUgeWV0IHRvIGZpbmQgYW55IGV2aWRlbmNlIGxpbmtpbmcgdGhlIHNob290ZXIgdG8gYW55IG9yZ2FuaXNlZCB0ZXJyb3Jpc3QgZ3JvdXAuCkV4YWN0bHkgd2hhdCBJIGZlZWwuIEkgYmVlbiBmb2xsb3dpbmcgSyBwb3AgZm9yIGEgZmV3IHllYXJzIGJ1dCBuZXZlciByZWFsbHkgZW5qb3lpbmcgZ2lybCBncm91cHMuIFdoZW4gdGhleSBmaXJzdCByZWxlYXNlZCBzdHVmZiBJIHJlYWxseSBlbmpveWVkIGl0LCBlc3BlY2lhbGx5IHdoaXN0bGUgYW5kIGJvb21iYXlhaC4gCkp1c3QgZml2ZSBkYXlzIGFmdGVyIGhpcyBpbnRlcnJvZ2F0aW9uLCBFcm5pZSBTY2hlcmVyIGhpdCB0aGUgb3BlbiByb2FkIGZvciBwYXJ0cyB1bmtub3duLiAKT25lIGV4ZXJjaXNlIHdoaWNoIGlzIGZhbnRhc3RpYyBpcyBvYmplY3Qgd3JpdGluZy4gVGFrZSBhIHJhbmRvbSBvYmplY3QsIGVpdGhlciBzb21ldGhpbmcgaW4gdGhlIHJvb20gb3Igc29tZXRoaW5nIHlvdSBjb21lIHVwIHdpdGgsIGFuZCBzcGVuZCB0ZW4gbWludXRlcyB3cml0aW5nIGFib3V0IGl0IHVzaW5nIHRoZSBzZXZlbiBzZW5zZXMgKHllcywgbm90IGZpdmUuIFNldmVuLCBmb3IgdGhpcyBwdXJwb3NlKTogc2lnaHQsIHNvdW5kLCB0b3VjaCwgdGFzdGUsIHNtZWxsLCBvcmdhbmljIChhd2FyZW5lc3Mgb2YgYm9kaWx5IGZ1bmN0aW9ucy4gCkkgd2FudCB0byB0YWtlIHlvdXIgYWR2aWNlLCBidXQgYWZ0ZXIgZ2V0dGluZyB0aGlzIGZhciBpdCByZWFsbHkgZmVlbHMgbGlrZSBJIHNob3VsZCBqdXN0IHdhc3RlIGFub3RoZXIgd2VlayBhbmQgZmluaXNoIHRoZSB0aGluZy4gClRoZXkgYSBmYW50YXN0aWMgdGVhbSB3aG8gcGVyZm9ybSByZWFsbHkgd2VsbCB0b2dldGhlciwgYW5kIGhhdmUgc29tZSBvZiB0aGUgYmVzdCBjb2hlc2lvbiBvdXQgb2YgYW55IHRlYW0gdGhhdCBJIGV2ZXIgc2Vlbi4uIApJIGhhdmUgb25lIHdobyB0aGlua3MgdGhhdCBzaGUgY2FuIGJsb3cgdXAgbXkgcGhvbmUgdHJ5aW5nIHRvIGZpbmQgb3V0IHdoZW4gSSBnb2luZyB0byBiZSBob21lIHdoZW4gSSBvdXQgYW5kIHRoaW5rcyBpdCBjb29sIHRvIG9wZW4gbXkgbWFpbCBhbmQgZWF0IG15IGZvb2Qgd2l0aG91dCBteSBwZXJtaXNzaW9uLiBJdCBsaWtlIHNoZSB0aGlua3MgdGhhdCB0aGVyZSBhIHJlbGF0aW9uc2hpcCB0aGVyZSB0aGF0IGRvZXMgbm90IGV4aXN0LiBJIHNlZW4gaGVyIGRvIGxvdHMgb2Ygb3RoZXIgdGhpbmdzIHRoYXQgbWFrZSBtZSB3b25kZXIgaWYgc2hlIHNob3VsZG4gYmUgY29tbWl0dGVkIHRvIGEgbWVudGFsIGhvc3BpdGFsIGJ1dCBJIGp1c3QgdHJ5IHRvIHN0YXkgaW4gbXkgcm9vbSBhbmQgc3RheSBhd2F5IGZyb20gaGVyLiAKNmx2VWp2Z3VXTyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpXZSBkcml2ZSBjYWJzIGFuZCBzZXJ2ZSBmb29kIGFuZCBkcmlua3MgdG8gcmlnaHQgd2luZyBudXRzLCB0byByZWxpZ2lvdXMgemVhbG90cywgdG8gZmFrZSBDaHJpc3RpYW5zLCBldGMuLiAKQnV0IHRoZSBtb3N0IGltcG9ydGFudCBwb2tlciBzdHJhdGVneSBvZiBhbGwgaXM6IG5ldmVyIGZvcm0gYSBwYXR0ZXJuIG9mIHBsYXkuIEJlaW5nIGFibGUgdG8gZGlzZ3Vpc2UgeW91ciBwbGF5IG1heSBiZSB0aGUgbW9zdCB2YWx1YWJsZSBwb2tlciBzdHJhdGVneSB5b3UgY291bGQgaGF2ZSBidXQgdGhlbiB5b3UgbXVzdCByZW1lbWJlciB0byBhcHBseSB0aGVtIGFzIHZhcmllZCBhcyBwb3NzaWJsZS4gCkEgZmV3IHRoaW5ncyBtYWtlIHRoaXMgd2hvbGUgb3JkZWFsIGV2ZW4gZnVubmllciBmb3IgbWUuIEJhY2sgaW4gMjAxMyBJIHdhcyBib290ZWQgZnJvbSBnb29ud2FmZmUgZm9yIGF3b3hpbmcgYSBydXNzaWFuIHJhdHRpbmcgaW4gYSB2aW5kaWNhdG9yIChiaWcgcmVncmV0LCBJIHdhcyB1bmF3YXJlIGF0IHRoZSB0aW1lIHRoYXQgQk9CIGlzIGJhc2ljYWxseSBOQy4vUEwgYW5kIGdvb25zIHdlcmUgdGhlIGdvb2QgZ3V5cykuIFNvIHlvdSBjb3VsZCBzYXkgdGhpcyB3YXMga2FybWEgY2F0Y2hpbmcgdXAgdG8gbWUuIEFsc28gc29tZSBnb29ucyB0cmllZCByZWNydWl0aW5nIG1lIGltbWVkaWF0ZWx5IGZvbGxvd2luZyBteSBsb3NzLCB3aGljaCB3b3VsZCBiZWVuIGhpbGFyaW91cyAoYXNzdW1pbmcgdGhleSB3ZXJlIGFjdHVhbCByZWNydWl0ZXJzKSBidXQgdGhleSBjb3VsZG4gd29yayBwYXN0IG1lIGJlaW5nIGJsYWNrbGlzdGVkLgpIb25lc3RseSwgYW5vdGhlciBiaWcgdGhpbmcgaGFzIGJlZW4gbGV0dGluZyBnbyBvZiBjb250cm9sIGFzIHdlbGwuIEkgc3RvcHBlZCB0cnlpbmcgdG8gZG8gZXZlcnl0aGluZyBvbiBteSBvd24gYW5kIGJlIHBlcmZlY3QuIApVbmRlciBjcm9zcyBleGFtaW5hdGlvbiBieSBhc3Npc3RhbnQgQ3Jvd24gYXR0b3JuZXkgSmVubmlmZXIgSG9sbWVzIG9uIFdlZG5lc2RheSwgS2lzc25lciBhZG1pdHRlZCB0aGF0IGhlIGhhZCBhIHJvbGUgdG8gdGhlIGNvbXBsYWluYW50cyBmb3VyIG9mIHdob20gd2VyZSB1bmRlciAxOCBhdCB0aGUgdGltZSBvZiB0aGUgYWxsZWdlZCBpbmNpZGVudHMuCkZvciBtZSB0byBnYWluIHdlaWdodCwgSSBwcmV0dHkgbXVjaCBoYXZlIHRvIGVhdCB1bnRpbCBJIHN0dWZmZWQgdG8gdGhlIGJyaW0gICB1bmNvbWZvcnRhYmx5IGZ1bGwgICBBTEwgZGF5LiBBbmQgaXQgYWRkIHVwIHRvIDIsNTAwIDMsMDAwIGNhbG9yaWVzIGlmIEkgbHVja3kuIApDb2xvbm9zY29weS4gUGVvcGxlIG1ha2Ugam9rZXMgYWJvdXQgaXQgYW5kIGl0IHNvdW5kcyBjcmF6eSBhbmQgdW5jb21mb3J0YWJsZSB0byBoYXZlIGEgdHViZSB3aXRoIGEgY2FtZXJhIGdvaW5nIHNldmVyYWwgZmVldCB1cCB5b3VyIGFzcyBidXQgdGhlIHJlYWxpdHkgaXMgdGhhdCB5b3UgZ2V0IGdyZWF0IElWIGRydWdzIHRoYXQga25vY2sgeW91IG91dCBhbmQgeW91IHdha2UgdXAgaGFsZiBhbiBob3VyIGxhdGVyIG9yIHNvIGFuZCBuZXZlciBleHBlcmllbmNlZCBhbnkgb2YgdGhlIGFjdHVhbCBwcm9jZWR1cmUuIApBbmQgZ29vZCBsdWNrIGZpbmRpbmcgYSBqb2IgdGhhdCBsZXRzIHlvdSBkbyB0aGF0IG90aGVyIHRoYW4gTWNEb25hbGQncy9MYXdzb24uLiAKTGFkeSBHYUdhKSwgQ2hpbGxpbiAoZmVhdC4gTGFkeSBHYUdhKSAuIDk3IDk5KSIgQm9ybiBUaGlzIFdheSAoRGVsdXhlIEFsYnVtIEJvbnVzU29uZ3MpIiBCbGFjayBKZXN1cyArIEFtZW4gRmFzaGlvbiwgRmFzaGlvbiBvZiBIaXMgTG92ZSwgVGhlUXVlZW4uIApUaGV5IGV4cGVjdGVkIG1lIHRvIGJlIGdyYXRlZnVsIGZvciBldmVyeSBsaXR0bGUgdGhpbmcgdGhleSBkaWRuIGdldCB3aGlsZSBiZWluZyBjb21wbGV0ZSBhc3Nob2xlcyB0byBtZSBpbiBvdGhlciB3YXlzLi4gCldpdGhvdXQgcmVhbCByZWZvcm0gb2YgaG93IHBvbGl0aWNpYW5zIGdldCBmdW5kZWQgKGJ5ICJpZGlvdHMiIGxpa2UgQ2F0aHkgTWFwbGVzIHdpdGggbW9uZXkgbWFkZSBmcm9tIG91ciB0YXggZG9sbGFycyBiZWluZyBzcGVudCBvbiBoZXIgZGVmZW5zZSBjb250cmFjdGluZyBjb21wYW55IHJhdGhlciB0aGFuICJzbWFydCIgcGVvcGxlIGxpa2UgdXMgd2hvIGRvbiBoYXZlIGFuIGV4dHJhICQ2MCwwMDAgdG8gaW5mbHVlbmNlIHBlb3BsZSksIHRoaXMgY291bnRyeSB3aWxsIGNvbnRpbnVlIHRvIGRlc2NlbmQgaW50byB0aGUgdHJ1ZSBpZGlvY3kgb2YgY2hyaXN0aWFuIGZ1bmRhbWVudGFsaXNtIG1hcnJpZWQgdG8gY29ycG9yYXRlIGludGVyZXN0cyByZXByZXNlbnRlZCBieSB0aGUgbGlrZXMgb2YgUGFsaW4uLiAKRmlsZSBzaXplOiAyOS40MSBLQjsgTWltZSB0eXBlOiBhcHBsaWNhdGlvbi9vY3RldCBzdHJlYW07IGNoYXJzZXQ9YmluYXJ5IGNvbXByZXNzZWQgZW5jb2Rpbmc9YXBwbGljYXRpb24vemlwOyBjaGFyc2V0PWJpbmFyeTsuIApUaGVscmVkIHRoZSBVbnJlYWR5J3MgcmVpZ24gb2YgRW5nbGFuZCB3YXMgbm90IGFzIHN1Y2Nlc3NmdWwgYXMgaGlzIGZhdGhlciBFZGdhcidzLiBJdCBlbmRlZCB3aXRoIHRoZSBjb25xdWVzdCBvZiBFbmdsYW5kIGJ5IFN3ZWluIGFuZCBDbnV0LiBGcm9tIDk4MCBBRCBvbndhcmRzLCB1bnRpbCB0aGVscmVkJ3MgZGVhdGggaW4gQXByaWwgMTAxNiwgVmlraW5ncyBhdHRhY2tlZCBFbmdsYW5kIG1vcmUgYW5kIG1vcmUgZnJlcXVlbnRseS4gRmluYWxseSwgaW4gMTAxNiwgQ251dCB3YXMgZGVjbGFyZWQgS2luZyBvZiBhbGwgRW5nbGFuZC4gVGhlIHJlYXNvbiB3aHkgdGhlIFZpa2luZ3MgaW5pdGlhbGx5IHJhaWRlZCBFbmdsYW5kIHdhcyBiZWNhdXNlIEVuZ2xhbmQgd2FzIGEgd2VhbHRoeSBjb3VudHJ5LiBUaGUgRGFuZWdlbGQgdHJpYnV0ZTIgd2FzIGJlaW5nIGluY3JlYXNpbmdseSBwYWlkOyBtb25leSB3aGljaCBjb3VsZCBoYXZlLCBwZXJoYXBzLCBiZWVuIHBhaWQgdG8gbWVyY2VuYXJpZXMgdG8gZmlnaHQgYWdhaW5zdCB0aGUgaW52YWRlcnMsIG9yLCBtb3JlIHByb2ZpdGFibHksIGluIGJ1aWxkaW5nIGFuIEVuZ2xpc2ggYXJtZWQgZm9yY2UgY2FwYWJsZSBvZiBkZWZlYXRpbmcgdGhlIGludmFkZXJzLiBNZXJjZW5hcmllcyBhbmQgVmlraW5ncyB3ZXJlIHVzZWQgdG8gdHJ5IGFuZCBwcm90ZWN0IHRoZSBFbmdsaXNoIGtpbmdkb207IHRoZXNlIGluY2x1ZGVkIFRob3JrZWxsIGluIDEwMTIsIGFuZCBPbGFmIFRyeWdndmFzb24sIHdobyBwcm9taXNlZCB0byBkZWZlbmQgRW5nbGFuZCBmcm9tIGZ1cnRoZXIgcmFpZHMgYWZ0ZXIgaGlzIGNvbnZlcnNpb24gdG8gQ2hyaXN0aWFuaXR5IGluIDk5NC4gTWVyY2VuYXJpZXMgYW5kIFZpa2luZyBhbGxpZXMsIGhvd2V2ZXIsIGNyZWF0ZWQgdGhlaXIgb3duIHByb2JsZW1zLCBzdWNoIGFzIHRoZSByaXNrIG9mIGJlaW5nIGJldHJheWVkIGJ5IHRoZW0uIEEgYmV0dGVyIG9wdGlvbiB3YXMgaW5jcmVhc2luZyB0aGUgZWZmZWN0aXZlbmVzcyBvZiBFbmdsYW5kJ3MgYXJtZWQgZm9yY2VzLgpNY0NveSwgRG9uYWxkIFJ5YW4sIExhd3JlbmNlIENhbm5pZmYsIFJvZ2VyIEt1ZWhuZSwgRWxsaXMgQ3Jvc3MsIEthcmwgUGVhcnNvbiwgRGFsZSBBdXN0aW4sIFZlcmxhbmQgSHVmZmFyLCBSb2IgJyBlcnQgTWNLaW5uZXksIFBhdWxpbmUgTWNHYXJ2aWUsIEVtZXJ5IE5lbHNvbiwgUGhpbGlwIEZlcm4gcml0ZSwgR2VyYWxkIEhvbG1lcywgSGFyb2xkIEJhVSwgUm9nZXIgQnJ5ZGVuLiAKQWx0aG91Z2ggSSB3b3VsZCBzYXkgdGhhdCB0aGUgcmVhc29ucyBiZWhpbmQgYWxsIHlvdXIgc3ltcHRvbXMgY2FuIGJlIG1hbnkgYW5kIHZhcmllZC4gCkl0cyBoZWF2eSwgaXQgc291bmRzIGxpa2UgY3JhcCwgeW91IHN1cHBvc2VkIHRvIHRocm93IHRoaXMgc3BlYWtlciB0aGF0IHN1cHBvc2VkbHkgcGxheWluZyBtdXNpYyB5b3UgbGlrZSBhd2F5IGZyb20geW91IHdoZW4geW91IGdldCBpdCArIGl0IGxpbWl0ZWQgb24gaG93IGZhciB5b3UgY2FuIHRocm93IGl0IGJlY2F1c2UgaXQgY29ubmVjdGVkIHRvIHlvdXIgcGhvbmUuIApUaGUgQ29uc3RpdHV0aW9uIHN1cHBvc2VkbHkgcHJvdGVjdHMgdXMgZnJvbSBkaXNjcmltaW5hdGlvbiBidXQgaXQgcXVpdGUgc3BlY2lmaWMgYXMgdG8gd2hhdCBraW5kIG9mIGRpc2NyaW1pbmF0aW9uLiAKJ1N1cGVyJyBsZWFndWUgY3VsdHVyZSBtYWtlcyBJbmRpYSdzIHNwb3J0cyBtYXJrZXQgc2l6emxlCkFiZSBhbmQgb3RoZXIgTERQIGxlYWRlcnMgYXJndWUgdGhhdCBieSBmdWVsaW5nIGV4cGVjdGF0aW9ucyBvZiBmdXR1cmUgaGlnaGVyIHByaWNlcywgcG9saWN5bWFrZXJzIGNhbiBjaGFuZ2UgY29uc3VtZXIgc2VudGltZW50LCBpbmR1Y2luZyBwZW9wbGUgdG8gbWFrZSBwdXJjaGFzZXMgbm93IHJhdGhlciB0aGFuIGRlZmVycmluZyB0aGVtIGFzIHRoZXkgaGF2ZSBiZWVuIGRvaW5nIGZvciB5ZWFycyBpbiB0aGUgZXhwZWN0YXRpb24gb2Ygc2VlaW5nIGxvd2VyIHByaWNlcyBpbiB0aGUgZnV0dXJlLiAKQ29taW5nIHRvIHRoaXMgY29tbXVuaXR5IGVuIG1hc3NlIHNwZWNpZmljYWxseSB0byBoYXJhc3Mgb3VyIHVzZXJzLCBvciBzZXR0aW5nIHVwIGEgcG9zdCBvciB0aHJlYWQgaGVyZSByZWZlcnJpbmcgdG8gYW5vdGhlciBzdWJyZWRkaXQgb3IgdGhyZWFkIGNhdXNlcyBhIGxvdCBvZiBwcm9ibGVtcyBmb3IgZXZlcnlvbmUuIElmIGl0IGhhcHBlbnMsIHdlIHdpbGwgc3BhbmsgeW91LCBhbmQgdGhlIGFkbWlucyB3aWxsIHNwYW5rIHVzLCBjcmVhdGluZyBhIHNwYW5rIHRyYWluIHRoYXQgbm9ib2R5IHdhbnRzIHRvIGJlIHBhcnQgb2YuCk1XRyBKYXkgaXMgYSBnb29kIHRlYWNoZXIsIGFuZCBoZXJlIGhlIHRhY2tsZXMgZ2xvd2luZyBvcmJzLiAKTGV0J3MgZ28gdG8gcm9iIHdobyBJIHRoaW5rIHdlIGFsbG93ZWQgdG8gY29tZSBiYWNrIGluc2lkZS4uIApBcyB0byB5b3VyIHNjZW5hcmlvLCBJIGRvbiB0aGluayBpdCB0aGF0IGNyYXp5LiBGaXJzdCBJIGRvbiB0aGluayBUZXJlc2Egd2FzIHN0YWJiZWQgaW4gdGhlIGJlZHJvb20gIHRoYXQgb25seSBjb21lcyBmcm9tIEJyZW5kYW4uIEJ1dCBpdCBtYWtlcyBzZW5zZSB0byByYXBlIFRlcmVzYSBpbiB0aGUgdHJhaWxlciAgc2hlIGNhbWUgdXAgdG8gdGhlIHRyYWlsZXIgYWZ0ZXIgcGhvdG9ncmFwaGluZyB0aGUgdmFuIHRvIGdldCBwYXltZW50LiAKTm93IHByb2R1Y2luZyBmb3VyIG1pbGxpb24gYmFycmVscyBhIGRheSwgdGhlIFBlcm1pYW4gZ2VuZXJhdGVzIG1vcmUgb2lsIHRoYW4gYW55IG9mIHRoZSAxNCBtZW1iZXJzIG9mIE9QRUMgZXhjZXB0IFNhdWRpIEFyYWJpYSBhbmQgSXJhcS4gClllcywgeW91IGNhbiBzdXJlbHkgd2luIHlvdXIgY2FyZHMgZ2FtZSB3aXRoIHRoZSBoZWxwIG9mIHN1Y2ggZGV2aWNlLiAKWW91ciBkZWNpc2lvbiBtYWtpbmcgaXMgYmFzZWQgb24gYW4gQUkgdGhhdCBwbGF5cyBhZ2FpbnN0IGl0c2VsZiB3aXRoIG5vIHZhcmlhYmxlcyBpbiBpdCByYW5nZXMgb3Igc2l6aW5ncyBhbmQgeW91IHNpbXBsaWZ5IHRoYXQgb3V0Y29tZSB0byB0aGUgdWx0aW1hdGUgcG9rZXIgc3RyYXRlZ3kgYW5kIGV2ZXJ5dGhpbmcgdGhhdCBkaWZmZXJlbnQgaXMgd3JvbmcuIApQcm9iYWJseSBub3QgeW91ciBmYXVsdC4gR3JlZyBIeXdvb2Qgc2hvdWxkIGhhbmcgaGlzIGhlYWQuIApFcm0uIHdoYXQ/IGRpZCB3ZSB3YXRjaCB0aGUgc2FtZSBtb3ZpZXM/CkkgYWx3YXlzIHRob3VnaHQgdGhhdCBNSiBhY3Rpb25zIHdlcmVuIGludGVudGlvbmFsbHkgbmVmYXJpb3VzLCB0aGF0IGhlIGhhZCBhIHBlcnNvbmFsaXR5IGRpc29yZGVyIGRldmVsb3BlZCBmcm9tIGNoaWxkaG9vZCB0cmF1bWEgYW5kIGFuZCBpdCBjYXVzZWQgaGlzIGJyYWluIHRvIGZ1bmN0aW9uIG9uIGEgZGlmZmVyZW50IHBsYW5lLiAKIlRoZXNlIGFyZSB0aGUgYm9va3MgdGhhdCB3ZSBsb3ZlZCwgdGhhdCBwcm92b2tlZCwgdGhhdCBleGNpdGVkIHVzLCBhbmQgdGhhdCB3ZSBhcmUgc3RpbGwgdGhpbmtpbmcgYWJvdXQuIiBSZWFkIG1vcmUgW2VudHJ5Ym9keV0gID5NZWRpYSBCb29rcyBGZXN0aXZhbCAgUXVlZW4gQmlydGhkYXkgIFRhdXJhbmdhRXNjYXBlIHRvIFRhdXJhbmdhIGZvciBRdWVlbidzIEJpcnRoZGF5IHdlZWtlbmQgYW5kIGFuIGlkZWFzIGFuZCBib29rcyBmb2N1c2VkIGZlc3RpdmFsIHRoYXQgaW5jbHVkZXMgcGVyZm9ybWFuY2UsIGRpc2N1c3Npb24sIHN0b3J5IHRlbGxpbmcsIHdvcmtzaG9wcyBhbmQgYW4gSXRhbGlhbiB0aGVtZSBtb3JuaW5nIHRlYS4iV2UndmUgdHJpZWQgdG8gb2ZmZXIgYSBwcm9ncmFtbWUgdGhhdCBpcyBhIGZvcm0gb2YgZXNjYXBpc20sIiBzYXlzIGZlc3RpdmFsIGRpcmVjdG9yIENsYWlyZSBNYWJleS4gCkJ1dCBoZSB0b28gaGFzIHJlbWFpbmVkIGNvbnNpc3RlbnQgd2l0aCBoaXMgYml6YXJyZSBjbGFpbSBoZSBtZW1vcml6ZWQgdGhlIGV4YWN0IHRpbWUgc29tZSBjYXIgcGFzc2VkIGhpbSBvbiB0aGUgc3RyZWV0IG9uIGEgY29tcGxldGVseSBvcmRpbmFyeSBkYXkuLiAKRnIgbWljaCBlaW4gYWJzb2x1dGVzIEhpZ2hsaWdodCBkZXIgUG9rZXJsaXRlcmF0dXIgdW5kIGVpbmUgcGVyZmVrdGUgRm9ydHNldHp1bmcgdm9uIEJhbmQgMSB1bmQgZGVuIFR1cm5pZXJiY2hlcm4uIE1hbiBrYW5uIG51ciBob2ZmZW4sIGRhc3Mgbm9jaCBlaW4gQXJiZWl0c2J1Y2ggZnIgQ2FzaCBHYW1lcyBmb2xnZW4gd2lyZCwgc28gd2llIGVzIGVpbmVzIGZyIEhhcnJpbmd0b24gb24gSG9sZCBnaWJ0LgpUaGFua2Z1bGx5LCBteSByZWFsbHkgZ3JlYXQgZnJpZW5kLCBNaWNoYWVsLCB3b3JrcyBhdCB0aGUgc2Fsb24gcmlnaHQgYXQgdGhlIGVuZCBvZiB0aGUgYmxvY2suIElmIHlvdSBsb29rIGF0IG91ciB3b3JrIHNwb3RzLCBJIGFtIG9uIG9uZSBjb3JuZXIgYW5kIGhlIGlzIG9uIHRoZSBvdGhlci4gU2FtZSBibG9jay4gRG9uIGV2ZW4gaGF2ZSB0byBjcm9zcyB0aGUgc3RyZWV0LCBqdXN0IHdhbGsgYSBmZXcgc3RvcmVzIGRvd24uClNwZWNpZmljYWxseSwgbG9uZyB0ZXJtIGV4ZXJjaXNlIHN0YXJ0ZWQgNSBtb250aHMgYmVmb3JlIGRpc2Vhc2Ugb25zZXQgaW1wcm92ZWQgd2F0ZXJtYXplIGxlYXJuaW5nLiAKSSB0aG91Z2h0IEFGIHdhcyBoZXJlIGEgZmV3IGRheXMgYWdvLCBidXQgaXQgd2FzIGp1c3Qgc3BvdHRpbmcuIE15IGN5Y2xlIGlzIG5vcm1hbGx5IDI2IGRheXMsIGFuZCBJJ20gb24gQ0QgMzEuIApDaHJpc3RvcGhlciBXYXR0cyBhZG1pdHMgdG8gbXVyZGVycyBvZiBkYXVnaHRlcnMgaW4gQ0JJIGludGVydmlldwpUaGlzIGlzIHdoZXJlIHlvdXIgYW50aSBibHVmZiBzdHJhdGVneSBjb21lcyBpbnRvIHBsYXk7IHlvdSBkb24ndCB3YW50IHRvIHNob3cgdGhlbSB0b28gbXVjaCBzdHJlbmd0aCBhdCBmaXJzdCBiZWNhdXNlIHRoZXkgbWF5IGxhYmVsIHlvdSBhcyBhIHN0cm9uZyBwbGF5ZXIgYW5kIG5vdCB0cnkgdG8gYmx1ZmYgeW91LiBHaXZlIHRoZW0gYSBjaGFuY2UgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgeW91ciBzdXBwb3NlZCBwb2tlciB3ZWFrbmVzc2VzLCB3aGVuIGluIGZhY3QgeW91IGhhdmUgYSBzdHJvbmcgcmVhZCBvbiB0aGVtIGFuZCB5b3UgbWF5IGJlbmVmaXQgYnkgbGV0dGluZyB0aGVtIGJsdWZmIG9uZSB0b28gbWFueSB0aW1lcyBhbmQgeW91IHdpbGwgc3RhY2sgeW91ciBvcHBvbmVudCdzIGNoaXBzLgpJIGp1c3Qgd2FudGVkIHRvIGxldCB5b3Uga25vdyBhYm91dCB0aGlzIHJlY2VudCBvZmZpY2lhbCBwb3N0LiAKQSBsb3VkIHBpbmcgZWNob2VzIGludG8gdGhlIHJvb20sIHNpbGVudCBwcmV2aW91c2x5IHNhdmUgZm9yIHRoZSBjcnVuY2hpbmcgb2YgY2hpcHMgYW5kIHRoZSBzbHVycHBpbmcgb2YgYSBjdXAgbyBqb2UuIFRoYXQgbWVhbnMgYnVzaW5lc3MsIGEgbGVhZCBJIGJlZW4gd2FpdGluZyBmb3IuIEkgYmVnaW4gdG8gZGFuY2UgbXkgZmluZ2VydGlwcyBhY3Jvc3MgdGhlIGtleWJvYXJkLCBzY2FubmluZyBsaW5lIGFmdGVyIGxpbmUgb2YgY29kZS4gCkJ1dCB0aGUgZG91YmxlIHRocmVhdHMgb2YgYSBsb29taW5nIGNvbnN0aXR1dGlvbmFsIGFtZW5kbWVudCBvbiB0aGUgTm92ZW1iZXIgYmFsbG90IGFuZCBhbiBhbm51YWwgJDI1MCBtaWxsaW9uIGhpdCB0byB0aGUgc3RhdGUgYnVkZ2V0IGhhdmUgaW5qZWN0ZWQgYSBzZW5zZSBvZiB1cmdlbmN5IGFzIGxhd21ha2VycyBvbmNlIGFnYWluIGdyYXBwbGUgd2l0aCB0aGUgdGhvcm55IGdhbWJsaW5nIGlzc3VlLiBUaGUgY29uc3RpdHV0aW9uYWwgYW1lbmRtZW50IHNlZWtzIHRvIGdpdmUgdm90ZXJzIGNvbnRyb2wgb3ZlciBmdXR1cmUgZ2FtYmxpbmcgZGVjaXNpb25zLCBwb3RlbnRpYWxseSB0YWtpbmcgcG93ZXIgYXdheSBmcm9tIGxhd21ha2Vycy4KSSBzZWVuIEEgTE9UIG9mIHBlb3BsZSBvbiBoZXJlIGFkdm9jYXRpbmcgZm9yIGJyZWFraW5nIHVwIHdpdGggdGhlaXIgcy9vIG92ZXIgdmVyeSBtaW5vciBpc3N1ZXMuCkl0IHdhcyBmdWNrZWQgdXAuIFRoZSBtb3JlIEkgbGVhcm4gYWJvdXQgdGhlIGhpc3RvcmljIE5hemlzIHRoZSBtb3JlIGl0J3Mgb2J2aW91cyB0aGF0IHRoZWlyIGJlbGllZnMgd2VyZSBtb25zdHJvdXMgdG8gdGhlIGNvcmUuIEFueW9uZSB3aG8gY2FuIGxvb2sgYXQgdGhlbSBhbmQgZmluZCBzb21ldGhpbmcgY29tbWVuZGFibGUgZW5vdWdoIHRvIHdhbnQgdG8gYWRvcHQgdGhlaXIgYmVsaWVmcyBpbiB0aGUgbW9kZXJuIGVyYSBhcmUgYXQgYmVzdCBtaXNpbmZvcm1lZCBhbmQgYXQgd29yc3QgYSBtb25zdGVyIHRoZW1zZWxmLi4gCkV4cGxhbmF0aW9uIG9mIHdoaXRlIHByaXZpbGVnZSB0aGF0IHJlc29uYXRlZCB3aXRoIG1lIHdhcyB0aGF0IHdlIHBsYXlpbmcgdGhlIGdhbWUgb2YgTGlmZSBvbiBlYXN5IG1vZGUuIApOb24gdHJhbnNmIG5vbiBtb25uYXlhYmxlLiBOZSBwZXV0IGp1bWVsIGF1Y3VuZSBhdXRyZSBvZmZyZS4gRCBhdSBKQyBTcGEuIENlIHJhYmFpcyBlc3QgZXhjbHVzaWYgYXV4IG1lbWJyZXMgZGVzIGNhaXNzZXMgYWZmaWxpIGxhIEYgZGVzIGNhaXNzZXMKSG9uZXN0bHksIEkgbG9va2VkIHVwIHRvIGhlciBjaGFyYWN0ZXIgU2FtIHNvIG11Y2ggYXMgYSBraWQuIE5vdCBmb3IgdGhlICJmcmllZCBjaGlja2VuIiBsaW5lcywgYnV0IGJlY2F1c2Ugc2hlIHdhcyBhIGJhZGFzcyBhbmQgc2hlIHdhcyB0b3VnaCBhbmQgYSBmaWVyY2VseSBsb3lhbCBmcmllbmQuIEkgd2FzIGEgbG90IGxpa2UgaGVyIGFzIGEga2lkIChhbmdlciBpc3N1ZXMsIHN0eWxlLCBldmVuIHRoZSBjdXJseSBoYWlyKSBhbmQgSSB0aG91Z2h0IGl0IHdhcyBjb29sIHRvIHNlZSBzb21lb25lIGtpbmRhIGxpa2UgbWUuIFNoZSBoYWQgaGVyIGJhZCBtb21lbnRzLCBidXQgaGVyIGJhZCBtb21lbnRzIHdlcmUgc2ltaWxhciB0byBtaW5lIChhY2NpZGVudGFsbHkgc2F5aW5nIHNvbWV0aGluZyBodXJ0ZnVsLCBnZXR0aW5nIHRvbyBtYWQgdG9vIGZhc3QpIGFuZCBpdCBoZWxwZWQgdG8gc2VlIGhvdyBzaGUgZGVhbHQgd2l0aCB0aG9zZSBwcm9ibGVtcy4gSWRrIEkgbGlrZWQgaGVyIGFuZCB0aGF0IGNoYXJhY3RlciBhbHdheXMgbWFkZSBtZSBsaWtlIEplYW5ldHRlIE1jQ3VyZHkuIEkganVzdCBzdGFydGVkIHVzaW5nIHdhc2hpIHRhcGUgbW9yZSB0aGlzIHllYXIgc28gSSdtIHN0aWxsIGdldHRpbmcgdGhlIGhhbmcgb2YgaXQhIFVzdWFsbHkgdGhlIHdlZWtseSBzcHJlYWRzIGtpbmQgb2YgZm9sbG93IHRoZSB0aGVtZSBvZiB0aGUgbW9udGhseSBjb3ZlciBidXQgdGhhdCdzIHJlYWxseSBqdXN0IGJlY2F1c2UgaXQncyB3aGF0IEkgaGFwcGVuIHRvIGJlIGludG8gYXQgdGhlIHRpbWUgYW5kIEkgZ2V0IHNpY2sgb2YgaXQgYWZ0ZXIgYSBtb250aC4gTGlrZSByaWdodCBub3cgSSdtIGludG8geWVsbG93IGFuZCBsYXN0IG1vbnRoIEkgd2FzIGludG8gcGluayBhbmQgcHVycGxlIGZvciBWYWxlbnRpbmUncyBEYXkuIFRoYW5rIHlvdSBmb3IgeW91ciBjb21tZW50IQoyKSBpbnNpc3QgeW91IGdldCBhIGxhd3llci5JdCBpcyBub3QgYW55b25lJ3Mgam9iIHRvIGFzc3VtZSB0aGUgc2V2ZXJpdHkgb2YgYW4gYWxsZXJneS9kaWV0YXJ5IHJlc3RyaWN0aW9uLiAKVGhlIHJpc2Ugb2Ygc29jaWFsIG1lZGlhIGhhcyBiZWVuIGEgYm9vbiBmb3Igc2V4IHRyYWZmaWNrZXJzLCBtYWtpbmcgaXQgZWFzaWVyIHRoYW4gZXZlciBmb3IgcGltcHMgdG8gdGFyZ2V0LCBncm9vbSBhbmQgc2VsbCB5b3VyIGNoaWxkcmVuLCB0b3AgbGF3IGVuZm9yY2VtZW50IG9mZmljaWFscyBzYXkuCkVlbiB2b2xnZW5kZSBzdG9wIHdhcyBQbGVzaXZlaywgb29rIHdlZXIgem8ga2xlaW5lciBkb3JwamUgbWV0IGVlbiBvdWRlIGtlcmsgaGV0IHRlcnJlaW4gZGFhcnZhbiB3YXMgamFtbWVyIGdlbm9lZyB3ZWwgYWZnZXNsb3Rlbi4gClRoZXJlJ3MgYSBjb3NtaWMgZmxvd2NoYXJ0IHRoYXQgZGljdGF0ZXMgd2hlcmUgeW91IGNhbiBhbmQgd2hlcmUgeW91IGNhbid0IGdvLiBJJ3ZlIGdpdmVuIHlvdSB0aGUga25vd2xlZGdlLiAKN3RoIFN0LiwgU3QuIFBhdWw7IDY1MSAyMjQgNTgyMS4gCkdvYXRjaG9wNDEgIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIHllYXJzIGFnbwo=|<---