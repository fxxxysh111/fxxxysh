<!DOCTYPE html>
<html>
 <head>
  <meta content="IE=Edge" http-equiv="X-UA-Compatible"/>
  <meta charset="utf-8"/>
  <meta content="text/html" http-equiv="Content-Type"/>
  <meta content="global" name="distribution"/>
  <meta content="en" name="language"/>
  <meta content="width=device-width, initial-scale=1" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="page-template-default page page-id-43 page-child parent-pageid-37 custom-background boss">
  <div class="wrap">
   <header>
    <a href="/" id="logo">
     TCG: Tactical Communications Group
    </a>
    <h2>
     [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
    </h2>
   </header>
   <nav>
    <ul class="menu" id="menu-main-menu">
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-77" id="menu-item-77">
      [ahref]
      
      <ul class="sub-menu">
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-78" id="menu-item-78">
        [ahref]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-605" id="menu-item-605">
        <a href="/about/company-mission/">
         Mission and Vision Statement
        </a>
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-79" id="menu-item-79">
        [link]
        
       </li>
       <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-90" id="menu-item-90">
        <a href="/bio-category/executive-team/">
         Executive Team
        </a>
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-80" id="menu-item-80">
        <a href="/about/affiliations/">
         Affiliations
        </a>
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-81" id="menu-item-81">
        [ahref]
        
       </li>
      </ul>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor current-menu-ancestor current-menu-parent current-page-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-72" id="menu-item-72">
      [ahref]
      
      <ul class="sub-menu">
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-73" id="menu-item-73">
        [link]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-43 current_page_item menu-item-74" id="menu-item-74">
        [search]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-75" id="menu-item-75">
        [link]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-76" id="menu-item-76">
        <a href="/products/atr/">
         ATR
        </a>
       </li>
      </ul>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-71" id="menu-item-71">
      <a href="/service-support/">
       Service &amp; Support
      </a>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-70" id="menu-item-70">
      <a href="/news-events/">
       News &amp; Events
      </a>
      <ul class="sub-menu">
       <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-86" id="menu-item-86">
        [ahref]
        
       </li>
       <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-85" id="menu-item-85">
        [ahref]
        
       </li>
       <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-84" id="menu-item-84">
        [ahref]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-202" id="menu-item-202">
        [link]
        
       </li>
      </ul>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-69" id="menu-item-69">
      <a href="/clients/">
       Clients
      </a>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-65" id="menu-item-65">
      [link]
      
      <ul class="sub-menu">
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-66" id="menu-item-66">
        [ahref]
        
       </li>
       <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-68" id="menu-item-68">
        [link]
        
       </li>
      </ul>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-64" id="menu-item-64">
      [link]
      
     </li>
    </ul>
   </nav>
   [link]
   
   <section>
    <div class="block width-25 no-mobile" id="left-column">
     <div class="box page-group">
      <article>
       <h4>
        Products
       </h4>
      </article>
     </div>
     <div class="box bg-gray-pale with-gradient">
      <article>
       <ul class="menu" id="menu-main-menu-1">
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-77">
         [link]
         
         <ul class="sub-menu hidden">
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-78">
           <a href="/about/company-overview/">
            Company Overview
           </a>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-605">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-79">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-90">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-80">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-81">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor current-menu-ancestor current-menu-parent current-page-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-72">
         [ahref]
         
         <ul class="sub-menu hidden open" style="display: block">
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-73">
           <a href="/products/linkpro/">
            LinkPRO
           </a>
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-43 current_page_item menu-item-74">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-75">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-76">
           [link]
           
          </li>
         </ul>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-71">
         [ahref]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-70">
         <a class="opener" href="/news-events/">
          News &amp; Events
         </a>
         <ul class="sub-menu hidden">
          <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-86">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-85">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-84">
           [ahref]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-202">
           <a href="/news-events/press-kit/">
            Press Kit
           </a>
          </li>
         </ul>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-69">
         [link]
         
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-65">
         [ahref]
         
         <ul class="sub-menu hidden">
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-66">
           [link]
           
          </li>
          <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-68">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-64">
         [link]
         
        </li>
       </ul>
      </article>
     </div>
    </div>
    <div class="block width-75" id="right-column">
     <div class="box page-title">
      <article>
       <h1>
        <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
       </h1>
      </article>
     </div>
     <article>
      <h4>
       Advanced, standards-compliant tactical data link simulation and test software solution.
      </h4>
      <h5>
       The TCG Advantage:
      </h5>
      <ul>
       <li>
        The industry’s most complete, reliable, easy to use, and cost effective TDL test solution on the market
       </li>
       <li>
        Tests link-enabled military communications platforms and assures conformance with military standards and interoperability
       </li>
       <li>
        Simulates up-to-date tactical implementations for Link 16, Link 11, and SADL better than any other system
       </li>
       <li>
        Used by the majority of military test &amp; evaluation and certification organizations throughout the world
       </li>
       <li>
        Contains latest MIL-STD updates to include imagery, weapons data link, space track, and external time reference
       </li>
      </ul>
      <p>
       A gold standard in the military test industry, TCG’s Battlefield Operations Support System (BOSS) is the top-selling standards compliant TDL simulation and test software solution on the market. It allows government test organizations, industry systems providers and military R&amp;D organizations to reliably and consistently certify tactical data link implementations to assure interoperability and conformance with military standards.<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li>
      </p>
      <div class="callout">
       <p>
        [ahref]
        
       </p>
      </div>
      <span class="small">
       The Battlefield Operations Support System (BOSS) is the worldwide preferred standard for TDL testing.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><li>[ahref]</li>[link]
      </span>
     </article>
    </div>
   </section>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0253
  </b>
 </body>
</html>
<p>
 BOSS can be used for tactical data link system certification, laboratory platform integration, depot-level maintenance, training or DT/OT field testing. BOSS provides comprehensive message scripting, generation, network simulation, real-time and post-test monitoring and analysis from a single integrated console. Features include:
</p>
<h5>
 Powerful Network Simulation, Flexible Message Scripting and Generation
</h5>
<p>
 The BOSS creates and runs detailed test scenarios that exhibit the same data link behavior as an actual, live data link network using virtual tactical elements. It generates realistic tactical data link message traffic to simulate complete multi-link tactical scenario to the system under test. The BOSS can accurately recreate the multi-TADIL network traffic representing a wide variety of C2 sensor platforms. Functions are provided for surveillance, command and control, and EW activities and users can define multiple discrete test cases that may be assembled to create complex scenarios.
</p>
<p>
 When generated messages comply with defined specifications, the system is considered interoperable, assuring testers higher confidence that the system will perform as expected. The BOSS supports Live network participation, Virtual asset simulation and Constructive Simulation-Over-Live interaction. When configured with a data link terminal, BOSS can even operate as a participant in the live tactical data link network, enabling TDL system integrators to develop and test host applications without the need for costly radio equipment.[link][link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
</p>
<h5>
 Easy to Use, Windows-based tactical display
</h5>
<p>
 Using an easy-to-use configurable display, users can view, define and overlay detailed geographical, surveillance, situational awareness data, USAF bullseye targets, and various simulated and actual data link participants to provide a comprehensive operational picture (COP).
</p>
<h5>
 Rapidly monitor and analyze multi-link tactical data messages
</h5>
<p>
 BOSS’s unique DERGViewer provides testers with a comprehensive operational picture in real-time and post-test to quickly assess compliance with message standards and assure platform interoperability. The DERGViewer is a powerful tool integrated into BOSS which allows a user to monitor and analyze all data link message and Host/TDS data (transactions) transmitted to/from BOSS, displaying the data IAW the Multi-TADIL DERG format.<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][search]<li>[link]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][ahref]<li>[search]</li>[ahref]<li>[link]</li><li>[ahref]</li>
</p>
<h5>
 Real-time and Post-test Analysis
</h5>
<p>
 BOSS’s mission flexible record and playback features allow operators to analyze system performance for post-test activity or for mission debrief. It allows users to increase timeliness and reduce risk and costs of embedding non-performing tactical data links into their systems, field systems with undetected interoperability problems and fix interoperability problems early in their systems life-cycle.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li><li>[search]</li><li>[link]</li>[link][link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
</p>
<h5>
 Easily Upgraded
</h5>
<p>
 BOSS’s flexible architecture allows quick upgrades to meet a customer’s changing needs.  From adding nation-specific messages to unique interfaces TCG can enhance the BOSS quickly to meet critical schedules for integration and test.<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[link]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>
</p>
<h5>
 More Information:
</h5>
<ul>
 <li>
  [link]
  
 </li>
 <li>
  <a href="/wp-content/uploads/2015/06/System-Enhancements.pdf" target="_blank">
   Click here for System Enhancement Options
  </a>
  .
 </li>
</ul>
<footer>
 <div class="box bg-blue-light clear">
  <ul class="menu menu-group">
   <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-91" id="menu-item-91">
    [ahref]
    
    <ul class="sub-menu">
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-92" id="menu-item-92">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-602" id="menu-item-602">
      <a href="/about/company-mission/">
       Mission and Vision Statement
      </a>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-93" id="menu-item-93">
      [link]
      
     </li>
     <li class="menu-item menu-item-type-custom menu-item-object-custom menu-item-94" id="menu-item-94">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-95" id="menu-item-95">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-96" id="menu-item-96">
      <a href="/about/careers/">
       Careers
      </a>
     </li>
    </ul>
   </li>
  </ul>
  <ul class="menu menu-group">
   <li class="menu-item menu-item-type-post_type menu-item-object-page current-page-ancestor current-menu-ancestor current-menu-parent current-page-parent current_page_parent current_page_ancestor menu-item-has-children menu-item-97" id="menu-item-97">
    <a href="/products/">
     Products
    </a>
    <ul class="sub-menu">
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-98" id="menu-item-98">
      [link]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page current-menu-item page_item page-item-43 current_page_item menu-item-99" id="menu-item-99">
      [link]
      
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-100" id="menu-item-100">
      <a href="/products/gts/">
       GTS
      </a>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-101" id="menu-item-101">
      [ahref]
      
     </li>
    </ul>
   </li>
  </ul>
  <ul class="menu menu-group">
   <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-102" id="menu-item-102">
    <a href="/service-support/">
     Service &amp; Support
    </a>
   </li>
   <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-103" id="menu-item-103">
    [ahref]
    
    <ul class="sub-menu">
     <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-104" id="menu-item-104">
      [ahref]
      
     </li>
     <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-105" id="menu-item-105">
      <a href="/category/in-the-news/">
       In the News
      </a>
     </li>
     <li class="menu-item menu-item-type-taxonomy menu-item-object-category menu-item-106" id="menu-item-106">
      <a href="/category/events/">
       Events
      </a>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-198" id="menu-item-198">
      [link]
      
     </li>
    </ul>
   </li>
  </ul>
  <ul class="menu menu-group">
   <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-107" id="menu-item-107">
    <a href="/clients/">
     Clients
    </a>
   </li>
   <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-has-children menu-item-108" id="menu-item-108">
    <h3>
     [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
    </h3>
    [link]
    
    <ul class="sub-menu">
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-109" id="menu-item-109">
      <a href="/how-to-buy/contracts/">
       Contracts
      </a>
     </li>
     <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-111" id="menu-item-111">
      [link]
      
     </li>
    </ul>
   </li>
   <li class="menu-item menu-item-type-post_type menu-item-object-page menu-item-112" id="menu-item-112">
    <a href="/contact/">
     Contact Us
    </a>
   </li>
  </ul>
 </div>
 <div class="block width-50 alignleft text-left smaller text-gray text-weight-400">
  <div class="box text-left bg-gray-pale with-gradient">
   <article>
    <p>
     [search]<li>[search]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
    </p>
    <p>
     <li>[ahref]</li><li>[link]</li>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>[search]<li>[search]</li>[search]
    </p>
    <p>
     Fax: +1 978-654-4801[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li><li>[search]</li><li>[link]</li><li>[link]</li>
    </p>
    <p>
     Copyright © 2018
     Tactical Communications Group, LLC. All Rights Reserved. BOSS®, GTS® , LinkPRO® and the TCG Logo are registered trademarks of Tactical Communications Group, LLC.
    </p>
   </article>
  </div>
 </div>
 <div class="block width-50 alignleft text-left smaller text-gray text-weight-400">
  <div class="box text-left bg-gray-pale with-gradient">
   <article>
    <p>
     [search]<li>[ahref]</li>[search][search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
    </p>
    <p>
     For Technical Support please contact:
     <br/>
     [ahref]
     
    </p>
    <p>
     <li>[search]</li><li>[search]</li>[search]<li>[ahref]</li><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
    </p>
   </article>
  </div>
 </div>
</footer>
<div class="overlay">
</div>
