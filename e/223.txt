--->|VGhpcyBpcyBhbiBleGFtcGxlIG9mIGEgcXVpZXQsIG5haXZlIG1hc3RlcnBpZWNlLCBhbmQgaXMgYSBwZXJmZWN0IGNvbXBhbmlvbiB0byBhIGZhbnRhc3RpYyBwYW1waGxldCB0aGF0IEkgd3JvdGUgYWJvdXQgZWFybGllciB0aGlzIG1vbnRoIG9uIGZsYWdwb2xlIHBhaW50aW5nLiBUaGlzIHRhbGwgKDExeDggaW5jaCkgMzUgcGFnZSAxOTQ1IHdvcmsgd2l0aCBhbiBpbXBvc3NpYmxlIHRpdGxlIGhhcyBldmVyeXRoaW5nIHRoYXQgeW91IHdvdWxkIG5lZWQgdG8ga25vdyBhcyBpdHMgdGl0bGUgcHJvbWlzZXMgYW5kIGRlbGl2ZXJzIHRvIHJlcGFpciBhIHppcHBlci4gTm90IHJlcGxhY2UgYSB6aXBwZXIgcmVwYWlyIGl0LiAKVGhpcyBraWQgd2luZG93IHNob3dzIHVwIGJyb2tlbiB0b21vcnJvdywgb3IgaWYgaGUgZ2V0cyBqdW1wZWQgb24gdGhlIHN0cmVldCwgaGUgZ29pbmcgdG8ga25vdyBpdCB3YXMgeW91LiAKTGFzIFZlZ2FzIGV4cGxhaW5lZCBpbiBvbmUgZ2FtZTogaXQncyBhY3R1YWxseSBwb3NzaWJsZSB0byB3aW4gd2l0aCBhIHNpbXBsZSBzdHJhdGVneSwgYW5kIGlmIHlvdSBkbyBpdCB0aGV5J2xsIGJyZWFrIHlvdXIgdGh1bWJzIGFuZCBiYW4geW91LiBVbmRlcnN0YW5kOiBpbnN0ZWFkIG9mIHJlcGxhY2luZyBhIGdhbWUgdGhhdCdzIGJlYXRhYmxlLCBjYXNpbm9zIGZpbmQgaXQgZWFzaWVyIHRvIHJlcGxhY2UgdGhlIHBsYXllcnMgYWZ0ZXIgYmVhdGluZyB0aGVtLgpJbiBLd2FuIGJvb2ssIFJhY2hlbCBpcyBDaGluZXNlIEFtZXJpY2FuLCByYWlzZWQgYnkgYW4gaW1taWdyYW50IHNpbmdsZSBtb20gd2l0aCBkZWNpZGVkbHkgQW1lcmljYW4gdmFsdWVzLiBIZXIgYm95ZnJpZW5kIE5pY2sgWW91bmcgaXMgdGhlIHNjaW9uIG9mIGEgU2luZ2Fwb3JlYW4gZmFtaWx5IHRoYXQgaXMgZGVzY3JpYmVkIGFzIHRoYW4gR29kLiBXaGVuIFJhY2hlbCBnb2VzIHRvIHRoZSBTb3V0aGVhc3QgQXNpYW4gY291bnRyeSB0byBtZWV0IE5pY2sgcmVsYXRpdmVzIGZvciB0aGUgZmlyc3QgdGltZSwgc2hlIGV4cG9zZWQgdG8gYSB3b3JsZCBvZiBwcml2aWxlZ2UgdW5saWtlIGFueXRoaW5nIHNoZSBldmVyIHNlZW4uIApJIHdvbmRlciBpZiB0aGUgcGVvcGxlIHdobyBoYXRlIHRoaXMgZXBpc29kZSBzZWUgdG9vIG11Y2ggb2YgdGhlbXNlbHZlcyBpbiBpdC4gSSBrbm93IEkgd2FzIGRlc3BlcmF0ZWx5IGFmcmFpZCBvZiBiZWluZyBvbmUgb2YgdGhlc2UgcGVvcGxlIHdoZW4gSSB3YXMgMjMsIGFuZCB3aGVuIG15IGZyaWVuZCBtb3ZlZCBpbnRvIG15IHBsYWNlIGFuZCB0dXJuZWQgaW50byBvbmUgb2YgdGhlbSwgaXQgbWFkZSBtZSBhY3R1YWxseSBkZXNwaXNlIGhlciBmb3IgYSB0aW1lIGFmdGVyd2FyZHMuIApBbmQgdGhlbiB5b3UgY2FuIGV4Y2hhbmdlIHRob3NlIGZhdm9ycyB0byBvdGhlciBwZW9wbGUgaW4gdGhlIHNldHRpbmcgYW5kLiBXZWxsLCBpdCBwcmV0dHkgbXVjaCBhIGJhcnRlciBzeXN0ZW0gYW5kIGEgd2F5IHRvIGhhdmUgeW91ciBjaGFyYWN0ZXJzIGluZGVidGVkIHRvIG90aGVycyAoYW5kIHRvIGNhbGwgb24gb3RoZXJzIGZvciBzdXBwb3J0KS4gSSBkb24gdGhpbmsgaXQgbmVlZHMgdG8gYmUgaW4gdGhlIGdhbWUgYXQgYWxsIGFuZCByZW1vdmluZyBpdCB3b3VsZG4gY2hhbmdlIGEgdGhpbmcuIApBbmQgb3ZlcmNvb2tlZCBJUyBhYnNvbHV0ZWx5IHN0cmVzc2Z1bCwgYnV0IHRoYXQgc3RyZXNzIGRvZXNuIGhhdmUgdG8gYmUgYmFkLiBJbiBhIDQgcGVyc29uIHNjZW5hcmlvIGV2ZXJ5b25lIGlzIGluZXZpdGFibHkgeWVsbGluZyBvdmVyIGVhY2ggb3RoZXIuIApXaGVuIGEgcG9rZXIgcGxheWVyIGhhcyB0aGUgY29tbW9uIG5ldXJvdGljIHRyZW5kLCBsaWtlIGlmIGhlIGlzIGFzc29jaWF0ZWQgd2l0aCBiZW5kaW5nIHRoZSBjYXJkcyBpbiBoaXMgaGFuZHMsIGhlIGlzIHN1YmplY3QgdG8gbW92ZSBvbiB3aXRoIHByb2R1Y3RzIGxpa2UgR2VybWFuIFZpcmdpbnMgTWVkYWxsaW9uIFBva2VyIENhcmQgUHJvdGVjdG9yLiBUaGlzIHByb2R1Y3QgYWxsb3dzIGEgcG9rZXIgcGxheWVyIHRvIHNhdmUgaGlzIGNhcmRzIGZyb20gYW55IGtpbmQgb2YgZGFtYWdlLiBUaGF0J3MgdGhlIHdheSwgdGhlIHBva2VyIHBsYXllcnMgYXJlIGtlZXBpbmcgdGhlaXIgY2FyZHMgc2FmZSBmcm9tIGFueXRoaW5nIGFuZCBldmVyeXRoaW5nLiBGb3IgYSBwb2tlciBwbGF5ZXIsIGhpcyBwb2tlciBjYXJkcyBhcmUgdGhlIG1vc3QgZmF2b3JpdGUgcGllY2VzIGFuZCBoZSB3YW50cyB0byBzYXZlIGl0LiBUaGF0J3Mgd2h5IGhlIGlzIGxvb2tpbmcgZm9yd2FyZCB0byBwb2tlciBjb2xsZWN0aWJsZXMgdGhhdCBjYW4gcmVhbGx5IGhlbHAgaW4gc2F2aW5nIHRoZSBjYXJkcy4gSGUgaGFzIHRoZSBjb21tb24gd2F5IHRvIG1ha2UgbW9uZXkgcGxheWluZyB0aGUgY2FzaW5vIGdhbWVzIGFyb3VuZC4gSWYgc29tZW9uZSB3YW50cyB0byBjcmVhdGUgaGlzIG93biBmaWVsZCBmb3IgcGxheWluZyB0aGVtIGdhbWUsIGhlIHNob3VsZCBtb3ZlIG9uIHdpdGggYSBicmFuZCBzb2x1dGlvbi4gSGUgc2hvdWxkIGRlZmluaXRlbHkgaGF2ZSB0aGUgcHJvZHVjdHMgbGlrZSBHZXJtYW4gVmlyZ2lucyBNZWRhbGxpb24gUG9rZXIgQ2FyZCBQcm90ZWN0b3IuCk1pZ3JhaW5lICAgTWlncmFpbmUgaGVhZGFjaGVzIGNhbiBiZSBjYXVzZWQgYnkgcmVkdWNlZCBibG9vZCBmbG93IHRvIHZhcmlvdXMgYXJlYXMgb2YgdGhlIGNlcmVicmFsIGNvcnRleC4gCjExLiBMZWdhbGl6ZSBzcGFjZSBjYWtlcyAiTGVnYWxpemUgdGhlIHVzZSBvZiBtYXJpanVhbmEgaW4gY2FrZXMsIHNwZWNpZmljYWxseSBpbiBjaG9jb2xhdGUgYnJvd25pZXMuIgpBcmUgeW91IHVzaW5nIGEgdGVtcCBzZXJ2aWNlPyBjaGVjayB3aXRoIHlvdXIgdGVtcCBzZXJ2aWNlIGJlZm9yZSB5b3UgZG8gYW55dGhpbmcgeW91IHNlZW4gaGVyZS4gdGhleSBsaWtlIHRvIGhhbmRsZSBuZWdvdGlhdGlvbnMgYXMgd2VsbC4gaWYgZWl0aGVyIGNvbXBhbnkgdGFrZXMgeW91ciBiZWhhdmlvciB0aGUgd3Jvbmcgd2F5LCBpdCBjb3VsZCBraWxsIHRoZSBvZmZlciBhbmQgbWlnaHQgYmUgYSB2aW9sYXRpb24gb2YgYW4gYWdyZWVtZW50IHlvdSBzaWduZWQgd2l0aCB0aGUgdGVtcCBzZXJ2aWNlLiBldmVuIHN0YWxsaW5nIGNvdWxkIGJlIGNvbnNpZGVyZWQgInByb2JsZW0gYmVoYXZpb3IiIGFuZCB3b3JrIG91dCBiYWRseSBmb3IgeW91LiBpZiB5b3UgYXJlIHVzaW5nIGEgdGVtcCBzZXJ2aWNlIG9yIHJlY3J1aXRlciwgZXhwbGFpbiB0aGUgc2l0dWF0aW9uIHRvIHRoZSByZWNydWl0ZXIgb3ZlciB0aGUgcGhvbmUgYW5kIGdldCB0aGUgcmVjcnVpdGVyIHRvIGNvbnRhY3QgdGhlIENvbXBhbnkgQiBoaXJpbmcgbWFuYWdlciBieSBwaG9uZS4gU29tZXRpbWVzIHRoZSBqb2Igd2FzIHRoZXJlIGJ1dCBzb21lb25lIG5peGVkIHRoZSBmdW5kcyBmb3IgaXQgYW5kIHlvdSBsZWZ0IGNoYXNpbmcgdGhlIHdpbmQuCkkgZW5qb3kgVW5pcWxvIGJlY2F1c2UgaXQgb25lIG9mIHRoZSBmZXcgc3RvcmVzIHRoYXQsIGF0IGZhc3QgZmFzaG9uIHByaWNlcywgSSBjYW4gd2FsayBpbiBhbmQga25vdyB0aGF0IGFueSBwaWVjZSBJIHBpY2sgdXAgd29uIGhhdmUgcmFuZG9tIGN1dG91dHMsIHdvbiBoYXZlIHNvbWUgYXdmdWwgbGV0dGVyaW5nIG9uIGFuIG90aGVyd2lzZSBuaWNlIHBpZWNlLCBhbmQgd2hvc2UgZmFicmljcyB3aWxsIGJlIHNvZnQsIHN0dXJkeSwgbmF0dXJhbCwgYW5kIHJhcmVseSByZXF1aXJlIHNwZWNpYWwgY2FyZS4gCkZhc3QgZm9yd2FyZCB0byB0aGlzIHllYXIsIEknbSAzNCBhbmQgdG9vayBob21lIGEgbGl0dGxlIG92ZXIgMTIwJzAwMCBpbiB0aGUgbGFzdCAxMiBtb250aHMuIApEaW1lbnNpb25zIHJlbGxlcyA1MCBYIDY1IGNtLgpMZSB0cm9pc2ltZSBkcm9pdCBudW1yICBsJ2FydGljbGUgMiBlc3QgbGEgcHJvcHJpdC4gT24gcGV1dCB5IHZvaXIgbGUgcmVudm9pICBsYSBsaWJlcnQgZGUgc29pIG1tZSB0b3V0IGNvbW1lIGxhIHByb3ByaXQgZGVzIGJpZW5zLCBkcm9pdCBpbnZpb2xhYmxlIGV0IHNhY3IgZG9udCBudWwgbmUgcGV1dCB0cmUgcHJpdiwgc2kgY2Ugbidlc3QgbG9yc3F1ZSBsYSBsaWJlcnQgcHVibGlxdWUgbCdleGlnZSwgYydlc3QgIGRpcmUgZW4gY2FzIGQnZXhwcm9wcmlhdGlvbiAoYXJ0aWNsZSAxNykuCkluIE9udGFyaW8sIHRoZSBGYW1pbHkgTGF3IEFjdCBzYXlzIHRoYXQgY291cnQgbWF5IHNldCBhc2lkZSAoYW4pIGFncmVlbWVudCBvciBhIHByb3Zpc2lvbiBpbiBpdCwgaWYgYSBwYXJ0eSBmYWlsZWQgdG8gZGlzY2xvc2UgdG8gdGhlIG90aGVyIHNpZ25pZmljYW50IGFzc2V0cywgb3Igc2lnbmlmaWNhbnQgZGVidHMgb3Igb3RoZXIgbGlhYmlsaXRpZXMsIGV4aXN0aW5nIHdoZW4gdGhlIChhZ3JlZW1lbnQpIHdhcyBtYWRlLiBUbyBidXR0cmVzcyB0aGUgZGlzY2xvc3VyZSwgZXZlbiB3aGVuIGEgbWF0dGVyIGlzIGJlaW5nIHJlc29sdmVkIG91dCBvZiBjb3VydCwgbGF3eWVycyBjb21tb25seSBhc2sgdGhlIHBhcnRpZXMgdG8gY29tcGxldGUgdGhlIHNhbWUgc3dvcm4gZmluYW5jaWFsIGRpc2Nsb3N1cmUgZm9ybSByZXF1aXJlZCBpbiBsaXRpZ2F0aW9uLgpNYWdudXMgbWFraW5nIGZ1cm5pdHVyZSBhbmQgY2FydmluZyBkdWNrcyB3aGlsZSBzdGVhbGluZyBNZXJsZSdzIGRlYWQgdW5jbGVzIHNob2VzIGlzIGFsbCBvayBpbiBmYW50YXN5IGxhbmQgYmVjYXVzZSBpdCdzIGEgYml0IG9mIGEgZ2FnIG92ZXJhbGwuIFRhYWtvIFRhY28gYW5kIGhpcyBvbGQgY29va2luZyBzaG93IHdoaWxlIG1ha2luZyBzYXNzeSBjb21tZW50cyBpcyBhbGwga29zaGVyLiBNZXJsZSBhbmQgaGlzIGNvbG91cmJsaW5kbmVzcyBhbmQgb25lIHRyZWUgYXJtIGFuZCBoaXMgdHdvIGtpZHMgdGhhdCBoZSdzIHRoaXMgYWJzZW50ZWUgZmF0aGVyIGZvcj8gQWxsIHBhciBmb3IgdGhpcyBjb3Vyc2UuQW1uZXN0eSBpcyBhIGZhbnRhc3kgc3RvcnkgYmFzZWQgaW4gdGhlIHJlYWwgd29ybGQuIApTZXJpb3VzbHkuIApXaGVuIHlvdSBkbyB0aGlzLCB5b3UnbGwgYmUgYWJsZSB0byBmb2N1cyBtdWNoIG1vcmUgb24gaGF2aW5nIGZ1biBhbmQgY29uY3VycmVudGx5IGhvbmluZyBpbiBvbiB5b3VyIFBva2VyIFNraWxscyBhdCB0aGUgc2FtZSB0aW1lLi4gCkl0IGhvdXNlZCAzMDAgY2FzaW5vIGdyYWRlIDExLjUgZ3JhbSBjb21wb3NpdGUgbGF5IGNoaXBzIGZsYW5raW5nIHR3byBzZXRzIG9mIHByb2Zlc3Npb25hbCBxdWFsaXR5IHBsYXlpbmcgY2FyZHMuIApVc2UgdGhlIHRyYW5zZmVyIHRvb2wgdG8gcG9rZSBob2xlcyBhbG9uZyB0aGUgbGluZXMgb2YgeW91ciBpbWFnZS4gClllcy4gSXQncyBhIGZlZGVyYWwgZmVsb255IHRvIGtub3dpbmdseSBwcm92aWRlIGZhbHNlIGluZm9ybWF0aW9uIG9uIHRoZSA0NDczIGZvcm0uIApJdCdzIHByb2JhYmx5IGVhc2llc3Qgd2F5IHRvIGJ1eSBzZXggdG95cywgc2V4IGVzc2VudGlhbHMsIGxpbmdlcmllcyBldGMuIApQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gCkl0IGEgbG90IGxlc3MgYXdrd2FyZCB0aGFuIHlvdSB0aGluay4gSSBhc2tlZCBvdXQgYSBmcmllbmQgLyBzZW1pIGNvd29ya2VyIGFuZCBzaGUgcG9saXRlbHkgc2FpZCBzaGUgd2FzbiBpbnRlcmVzdGVkIGluIGRhdGluZy4gU3RpbGwgc2VlIGhlciByZWd1bGFyLCBzaGUgc3RpbGwgc2l0cyBuZXh0IHRvIG1lIGluIG1lZXRpbmdzLiBUaGF0IGp1c3Qgb25lIGV4YW1wbGUsIGJ1dCBubyBvbmUgSSBldmVyIGFza2VkIG91dCBtYWRlIGl0IHdlaXJkLgpUaGUgV2VpZ2h0IFdhdGNoZXJzIEludGVybmF0aW9uYWwgSW5jLiBtb2JpbGUgYXBwbGljYXRpb24gaXMgZGlzcGxheWVkIG9uIGFuIEFwcGxlIEluYy4gMjQsIDIwMTYuIENyZWRpdDogTWljaGFlbCBOYWdsZS9CbG9vbWJlcmcKSSdtIG5vdCBhIHRoZXJhcGlzdCBzbyBJIGNhbiBvbmx5IGdvIGJhc2VkIG9uIHdoYXQgSSBrbm93LiBJJ3ZlIGJlZW4gcHVzaGluZyBoaW0gdG8gc2VlayB0aGVyYXB5IGJ1dCBoZSBrZWVwcyBkZWxheWluZyBpdC4KSW5ncmFtIHdhcyBhbW9uZyAxMCBTYWludHMgcGxheWVycyB3aG8gc2F0IG9uIHRoZSBiZW5jaCBkdXJpbmcgdGhlIGFudGhlbSBiZWZvcmUgdGhlaXIgd2luIG92ZXIgdGhlIENhcm9saW5hIFBhbnRoZXJzIGxhc3QgU3VuZGF5IG9uIGEgZGF5IG9mIHVucHJlY2VkZW50ZWQgcHJvdGVzdHMgYW1vbmcgTkZMIHBsYXllcnMgaW4gcmVzcG9uc2UgdG8gY29tbWVudHMgYnkgUHJlc2lkZW50IERvbmFsZCBUcnVtcC4gSGUgY3J1ZGVseSBzYWlkIGF0IGEgcG9saXRpY2FsIHJhbGx5IHRoYXQgaGUgd2FudHMgb3duZXJzIHRvIGZpcmUgYW55IHBsYXllciB3aG8gImRpc3Jlc3BlY3RzIG91ciBmbGFnLiIKRGFkIHdhcyBwcmVkZWNlYXNlZCBieSBoaXMgcGFyZW50cywgSGFycnkgYW5kIE5lbGxpZSBFY2tlcnNsZXkgaW4gdGhlIDE5NTAnczsgYW4gaW5mYW50IHNvbiwgaW4gMTk1Njsgc2lzdGVyLCBNYXJqb3JpZSBMZXdpcyBpbiAxOTc0OyBhbmQgaGlzIHdpZmUgb2YgNjAgeWVhcnMsIEtheSBpbiAyMDA3LiBIZSBsZWF2ZXMgdG8gY2VsZWJyYXRlIGhpcyBsaWZlLCBzb24sIFBldGVyOyBkYXVnaHRlciBpbiBsYXcsIEphbjsgZ3JhbmQgZGF1Z2h0ZXJzLCBMaW5kc2F5IGFuZCBKZW5uaWZlciwgYW5kIG1hbnkgbGlmZWxvbmcgZnJpZW5kcy4gCkFueSBwcmV2aW91cyBXUFQgd2lubmVyIGNhbiBwYXkgdGhlICQxNSwwMDAgYW5kIGVudGVyIHRoZSB0b3VybmFtZW50LCBidXQgc2luY2UgdGhlIHNlYXNvbiBlbmRpbmcgY2hhbXBpb25zaGlwIGhhcyBiZWVuIGNhbmNlbGxlZCwgYWxsIG9mIHRoZSBTZWFzb24gWElWIHdpbm5lcnMgaGF2ZSBhbHJlYWR5IHdvbiBhIHNwb3QgaW4gdGhlIGV2ZW50IGluIHByZXZpb3VzIHllYXIgZWFjaCB3aW5uZXIgcmVjZWl2ZWQgYSBmcmVlIGVudHJ5IGludG8gdGhlIHNlYXNvbiBlbmRpbmcgY2hhbXBpb25zaGlwIGFzIHBhcnQgb2YgdGhlaXIgcHJpemUgcGFja2FnZS4gClVudGlsIG5vdywgaXQgd2FzIGFsd2F5cyBqdXN0IGluIHRoZSBiYWNrZ3JvdW5kLiBCdXQgdGhlIHJlY2VudCBtdXJkZXIgb2YgdGhlIEtvcnBlcnMnIGxpZmVsb25nIGZyaWVuZCwgMTQgeWVhciBvbGQgUGFyaXMgQnJhZGxleSwgaGFzIGJyb3VnaHQgdGhlIHZpb2xlbmNlIGNsb3NlIHRvIGhvbWUuIApUaGUgZmVlZGluZywgdGhlIHdhbGtpbmcgYXJvdW5kLCBldGMuLCBzZXJ2ZXMgdG8gYnJpbmcgdG91cmlzdHMgdGhlcmUsIHdoaWNoIGdlbmVyYXRlcyBpbmNvbWUsIHdoaWNoIGhlbHBzIGtlZXAgdGhlc2UgZWxlcGhhbnRzIGZyZWUgYW5kIGZyZWUgbW9yZSBlbGVwaGFudHMuLiAKRmlyc3QsIHlvdSBhcmUgbm90IHNwbGl0IGJldHdlZW4gdHdvIGNhbXBzLiAKQWNjb3JkaW5nIHRvIEVsaWFzaGJlcmcsIHdoZW4gbWVhc3VyaW5nIHRoZSBmaW5hbmNpYWwgYmVuZWZpdCBvZiB0aGUgT3NjYXJzLCBuZWVkIHRvIGRpc3Rpbmd1aXNoIGJldHdlZW4gdHdvIHRpbWUgcGVyaW9kcyB0aGUgcGVyaW9kIGZyb20gdGhlIG5vbWluYXRpb24gdXAgdW50aWwgdGhlIGF3YXJkcyBjZXJlbW9ueSwgYW5kIHRoZSB0aW1lIGZvbGxvd2luZyB0aGUgYW5ub3VuY2VtZW50IG9mIHRoZSB3aW5uZXJzLiB0byB0aGUgZGF0YSwgaXQgaXMgdGhlIG5vbWluYXRpb24gdGhhdCBkcml2ZXMgdGhlIGJveCBvZmZpY2UgbW9yZSB0aGFuIHRoZSBhY3R1YWwgd2lubmluZyBvZiB0aGUgbW92aWUsIiBoZSBzYWlkLgpUaGUgRE0gaGFkIGEgaG9ycmlmaWVkIGV4cHJlc3Npb24gd2F0Y2hpbmcgaXQgYWxsIHVuZm9sZC4gCkluIHRydXRoIHdlIGhhdmUgZm9yc2FrZW4gdGhlIHJpZ2h0IHRvIGNhbGwgSXFiYWwgb3VyIG5hdGlvbmFsIHBvZXQuIFdoYXQgY29tbW9uYWxpdHkgaXMgdGhlcmUgYmV0d2VlbiBoaXMgcG9ldHJ5IGFuZCBvdXIgd2F5IG9mIGxpZmU/IFRoZSB3YXkgb3VyIGxlYWRlcnMgY29uZHVjdCB0aGVtc2VsdmVzICAgZmF3bmluZyB3aGVuIHRoZXkgc2hvdWxkIGtub3cgYmV0dGVyIG5vdCB0bywgbGlzdGVuaW5nIHRvIGxlY3R1cmVzIHdoZW4gdGhleSBzaG91bGQgaGF2ZSB0aGUgd2l0IGFuZCB1bmRlcnN0YW5kaW5nIHRvIGVkdWNhdGUgZm9yZWlnbmVycyBhYm91dCB0aGUgcmVhbGl0eSBvZiBQYWtpc3RhbiBhbmQgaXRzIG5laWdoYm91cmhvb2QgICBzaG93cyBubyBzeW1wYXRoeSBvciBjb25uZWN0aW9uIHdpdGggSXFiYWwuIFRoZXJlIHNob3VsZCBiZSBubyBjb21tZW1vcmF0aW9uIG9mIElxYmFsIERheSBhbmQgbm8gY2hhbmdpbmcgb2YgdGhlIGd1YXJkIGF0IGhpcyB0b21iICAgYmV0d2l4dCBMYWhvcmUncyBncmVhdCBtb3NxdWUgYW5kIHRoZSBpbXBvc2luZyBmYSBvZiBBa2JhcidzIGZvcnQgICB1bnRpbCB3ZSBsZWFybiB0byBjb25kdWN0IG91cnNlbHZlcyB3aXRoIGdyZWF0ZXIgbmF0aW9uYWwgZGlnbml0eS4KUHVlcywgZGljaG8geSBoZWNobywgY29uIGVzbyBkZXNhcGFyZWNpZXJvbiBsYXMgcmVjb21wcmFzIGlsaW1pdGFkYXMgZGUgbGFzIFdTT1AuIFBlcm8gTmVncmVhbnUgc2lndWkgdXRpbGl6YW5kbyBzdSB0Y3RpY2EgY2FkYSB2ZXogcXVlIGxlIGhhbiBkYWRvIG9jYXNpbi4gClByaXplIFBvb2w6IFdpdGggdGhpcyBpbiBtaW5kLCBpdCBpcyB3b3J0aHkgdG8gdW5kZXJzdGFuZCB0aGF0IHRoZSB3YXkgcHJpemVzIGFyZSBkaXN0cmlidXRlZCBpcyBhIGNydWNpYWwgZmFjdG9yIGluIGFueSB0b3VybmFtZW50IHN0cmF0ZWd5IHNpbmNlIG9ubHkgMTAlIHRvIDIwJSBvZiB0aGUgZmllbGQgd2lsbCBnZXQgcmV3YXJkZWQgYW55dGhpbmcgaW4gYSB0b3VybmFtZW50LiBUaGlzIGlzIGJlY2F1c2UgUHJvZml0cyBmb3IgdG91cm5hbWVudCB3aW5uZXJzIGNvbWUgZnJvbSB0aGUgb2NjYXNpb25hbCBiaWcgd2luLiAKU3BhZGVzIHJlYWxseSBtYXkgbm90IGJlIEhvcmZvcmQncyBnYW1lLgpXZSBzdHRuZyBvZiB0aGUgYnVzIHN0YXRvbiB3aGVuIGEgbWFuIGNhbWUgdXAgYW5kIHNhZCBvbiB5b3UgY2FuIHJlc3QgbiBteSBwZW5zb24gV2Ugd2VyZSBzbyB0cmVkIGFuZCBzdHVwZCB0aGF0IHdlIHdlbnQgd3RoIGhtLiBIcyBwZW5zb24gd2FzIGZsdGh5LiBJdCBzbWVsbGVkIGxrZSBzb21ldGhuZyBoYWQgZGVkIG4gdGhlIHJlY2VwdG9uLiAKQ2llcnJhIFdpbGxpYW1zIGFuZCBKYWNxdWVsaW5lIEZvcmNlIHdlcmUgYWNxdWFpbnRhbmNlcyBhdCB0aGVpciBoaWdoIHNjaG9vbCBvdXRzaWRlIG9mIFRhbXBhLCBGbGEuClRoaXMgaW50ZW5zZSBwYWluIEkgd2FzIGZlZWxpbmcgd2FzIGFjdHVhbGx5IHRoZSBzdG9uZSBtYWtpbmcgaXRzIHdheSB0aHJvdWdoIG15IHVyZXRlciwgdGhlIHR1YmUgdGhhdCBjb25uZWN0cyB0aGUga2lkbmV5cyB0byB0aGUgYmxhZGRlci4gCkEgY2FyIHRpcmUgaXMgdXN1YWxseSBpbmZsYXRlZCB3aXRoIGFyb3VuZCAyLjggYXRtIHNvIHRoYXQgMS44IGF0bSBwcmVzc3VyZSBkaWZmZXJlbnRpYWwgaXQgdXN1YWxseSBkb2VzbiBicmVhayBlaXRoZXIuIFNvIGV2ZW4gaWYgeW91IHdlcmUgdG8gcHV0IGEgdmVzc2VsIHdpdGggMWF0bSBhdG1vc3BoZXJpYyBwcmVzc3VyZSBpbnRvIG9yYml0IGFyb3VuZCBlYXJ0aCBsZXQgc2F5IHNvbWV0aGluZyBsaWtlIHRoZSBpc3MgdGhpcyBpcyBub3Qgb25seSBwbGF1c2libGUgYnV0IGFsc28gZW50aXJlbHkgZG9hYmxlLiAKSSB3YW50IHRvIHN0cmVzcyB0byBwZW9wbGUgcmVhZGluZyB0aGlzIGZhciB0aGF0IGl0IHdhc24gbGlrZSBhbGwgdGhlIHdlaXJkbmVzcyBjYW1lIG91dCBhbGwgYXQgb25jZSwgaW1tZWRpYXRlbHkuIEkgZGlkbiBoZWFyIHRoZSBmaXJzdCB0aGluZyBhYm91dCBhbGllbnMgYW5kIGhlciBmZWVsaW5ncyBvbiBzcGlyaXRzIHVudGlsIGRheSAzIG9yIDQsIGFuZCBpdCB3YXNuIHVudGlsIHRoZSBmaXJzdCB3ZWVrZW5kIHRoYXQgc2hlIHJlYWxseSBzdGFydGVkIG9wZW5pbmcgdXAgYWJvdXQgaGVyIGJlbGllZnMgYWJvdXQgdGhlIHdvcmxkLiAKSnVzdCBvdmVyIGFuIGhvdXIgbGF0ZXIsIE1hZHVybyBwb3N0ZWQgb24gVHdpdHRlcjogZWxlY3RyaWMgd2FyIGFubm91bmNlZCBhbmQgbGVkIGJ5IHRoZSBBbWVyaWNhbiBpbXBlcmlhbGlzbSBhZ2FpbnN0IG91ciBwZW9wbGUgd2lsbCBiZSBkZWZlYXRlZC4gTm90aGluZyBhbmQgbm8gb25lIGNhbiBiZWF0IHRoZSBwZW9wbGUgb2YgQm9saXZhciBhbmQgQ2hhdmV6LiAKVGhlIENpdGlncm91cCBhbmFseXN0cyBhZHZpc2UgaW52ZXN0b3JzIHRvIGZvY3VzIG9uIHRoZSB2ZXJ5IHJpY2gsIHdoZXJlIHRoZSBhY3Rpb24gaXMuIFRoZWlyICJQbHV0b25vbXkgU3RvY2sgQmFza2V0LCIgYXMgdGhleSBjYWxsIGl0LCBmYXIgb3V0cGVyZm9ybWVkIHRoZSB3b3JsZCBpbmRleCBvZiBkZXZlbG9wZWQgbWFya2V0cyBzaW5jZSAxOTg1LCB3aGVuIHRoZSBSZWFnYW4gVGhhdGNoZXIgZWNvbm9taWMgcHJvZ3JhbXMgb2YgZW5yaWNoaW5nIHRoZSB2ZXJ5IHdlYWx0aHkgd2VyZSByZWFsbHkgdGFraW5nIG9mZi4KVGhlcmUgaXMgYWxzbyB0aGUgTnV2YVJpbmcgd2hpY2ggaXMgYSBsZXNzIHBlcm1hbmVudCBvcHRpb24gYnV0IHdvcmtzIHNpbWlsYXJseSBpbiB0aGF0IGl0IG9ubHkgZGVsaXZlcnMgaG9ybW9uZXMgbG9jYWxseSBhbmQgbm90IHN5c3RlbWljYWxseS4gVGhlcmUgYXJlIGFsc28gbm9uIGhvcm1vbmFsIGJhcnJpZXIgbWV0aG9kcyBsaWtlIGEgZGlhcGhyYWdtIG9yIGEgY2VydmljYWwgY2FwLi4gCldlIGtub3cgb3VyIHNwaXJpdCBpcyBhbHdheXMgYXdha2UgYW5kIFlvdSBHb2QgY2FuIG1lZXQgaGltIHRoZXJlIGFuZCBzcGVhayB0byBoaW0gYW5kIHNob3cgaGltIHdoYXQgaXMgdGhlcmUgdG8gZG8uIApVc2VycyBqdXN0IGRvbiBrbm93IHdoYXQgYmVpbmcgcmVtb3ZlZCwgZXZlbiB0aGUgbWFzc2l2ZSBmcm9udCBwYWdlIHBvc3RzIHRoYXQgZ2V0IHJlbW92ZWQgYXJlIG9ubHkgbm90aWNlZCBieSBhIGZldyBwZW9wbGUuIApBIHRvdGFsIHRlYW0gZWZmb3J0IGxpZnRlZCB0aGUgU3VwZXJpb3IgSGlnaCBTY2hvb2wgZ2lybHMgZ29sZiB0ZWFtIHRvIGEgMTk3IDIyMSB2aWN0b3J5IG92ZXIgdGhlIENoZXRlayBCdWxsZG9ncyBNb25kYXkgZXZlbmluZyBpbiBDaGV0ZWsuICJUaGUgbWF0Y2ggd2FzIGluIGRvdWJ0IGdvaW5nIGludG8gdGhlIGxhc3QgdHdvIGhvbGVzIGFuZCBNYXJhIEtyeXNpYWsgYW5kIFNhcmEgTWlsZXMsIG91ciBmb3VydGggYW5kIGZpZnRoIGdvbGZlcnMsIGNhbWUgdGhyb3VnaCBiaWcgZm9yIHVzIHdpdGggc2NvcmVzIG9mIDQ3IGFuZCA0OCwgcmVzcGVjdGl2ZWx5LCB0byBwdWxsIG91dCB0aGUgdmljdG9yeSwiIFNIUyBjb2FjaCBEYW4gU2NodWx6IHNhaWQuIFRoZSBTcGFydGFucyBhbHNvIGdvdCBhIDUwIGZyb20gTW9yZ2FuIE1vcnJpcywgNTIgZnJvbSBKYW5lbGxlIFN0cmV3bGVyIGFuZCBhIG5vbiBjb3VudGluZyA1OCBmcm9tIEFtYW5kYSBCYWtlci4gRm9yIHRoZWlyIGVmZm9ydHMsIEtyeXNpYWsgZWFybmVkIHRocmVlIEhlYXJ0IE8nIE5vcnRoIENvbmZlcmVuY2UgcG9pbnRzLCBNaWxlcyBlYXJuZWQgdHdvIGNvbmZlcmVuY2UgcG9pbnRzIGEKRXZlcnlvbmUgZG9lcyBpdCwgYnV0IHRoZSBiZXR0ZXIgb25lcyBkb24ndCBtYWtlIGl0IHF1aXRlIHNvIG9idmlvdXMuIApIZSBpcyBkeWluZyBmb3IgeW91IHRvIHJlYWN0LCBzbyBJIGp1c3QgZG9uLiAKSSBlbmRlZCB1cCBidXJuaW5nIGFuZCBzYW5pdGl6aW5nIG15IEhYIGFuZCBydW5uaW5nIHRoZSB3b3J0IHRocm91Z2ggaXQgd2l0aCBjaXR5IHdhdGVyICg2NUYpIGluIHRoZSBleGNoYW5nZS4gVG9vayBhIGxpdHRsZSB3aGlsZSBidXQgZ290IHVwIHRvIHBpdGNoaW5nIHRlbXAuIApBIGp1ZGdlLCBhbiBlbnRyZXByZW5ldXIsIGEgY29udmljdGVkIGZlbG9uIG9yIHRocmVlLiBUbyBtZSBpdCBiZXR0ZXIgdG8gd2luIG9yIGxvc2UgcXVpZXRseS4gUGVvcGxlIHdobyB0YWxrIGEgbG90IHRlbmQgdG8gdGFsayBtb3JlIGFmdGVyIGEgd2luLiAKVGhlIHBsYWNlcyBJIGdvIGluIEdlcm1hbnkgZmVhdHVyZSBzdXBlciBob3Qgd29tZW4gaW4gdGhlaXIgMjBzIGFuZCBlYXJseSAzMHMsIGFuZCB0aGUgc2V4IGlzIHVzdWFsbHkgKGJ1dCBub3QgYWx3YXlzKSBkYW1uIGZ1bi4gSSBhbHNvIHRhbGsgdG8gdGhlIGdpcmxzIGFzIGV4dGVuc2l2ZWx5IGFzIEkgY2FuLiBNb3N0IGFyZSBmcm9tIFJvbWFuaWEsIHdpdGggSXRhbHksIFNwYWluLCBIdW5nYXJ5LCBVa3JhaW5lLCBHZXJtYW55LCBMYXR2aWEsIGFuZCBHcmVlY2Ugc2hvd2luZyB1cCBhcyB3ZWxsLiAKRHUgZmFpdCBkZSBsYSB0b3V0ZSBub3V2ZWxsZSBpbmR1c3RyaWFsaXNhdGlvbiwgY29tbWUgZGVzIGF2YW5jZXMgc2NpZW50aWZpcXVlcyBldCB0ZWNobmlxdWVzLCBlbGxlcyBwcnRlbmRhaWVudCBhcHBvcnRlciBsZSBwcm9ncnMgIGRlcyAgcGV1cGxlcyBhdHRhcmRzIC4gCkV2ZW4gYWZ0ZXIgbm90aWNpbmcgYW4gYWNlIGhpdCB0aGUgZmxvcCB0aGV5IHN0aWxsIGhvbGQgYmFjayB3aXRoIGFuIGFpbSB0byBwbGF5IGJldHRlciBuZXh0IHRpbWUuIApSZW1lbWJlciB5b3VyIGphY2tldC4gRG8geW91IHJlbWVtYmVyIHRoZSBib3lzIGluIGhpZ2ggc2Nob29sIHdobyBsaWtlZCB0byB0dXJuIG9uIHRoZSBmYW4gYW5kIHdhdGNoIHRoZSByZXN1bHRzPyBXaGVuIHNob3BwaW5nIGZvciBmcm96ZW4gZm9vZHMsIGhhdmUgYSBqYWNrZXQgb3Igd3JhcCBjbG9zZSBhdCBoYW5kLiBJbiBhIHNpbWlsYXIgdmVpbiwgeW91IGRvbid0IHdhbnQgdG8gZ2V0IGNhdWdodCBicmFsZXNzIGluIHRoZSByYWluLgpTYXZhbnRpZGlvdDEzICAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpUaGlzIGlzIHdoeSBwb3NpdGl2ZSBwc3ljaG9sb2dpc3RzIG9mdGVuIHJlZmVyIHRvIHBlb3BsZSdzIGlubmF0ZSAicmVzaWxpZW5jZS4iIERlc3BpdGUgcGVyc29uYWwgYmFja2dyb3VuZCBhbmQgY2lyY3Vtc3RhbmNlcywgdGhlIGh1bWFuIHNwaXJpdCBpcyBzdXJwcmlzaW5nbHkgZHVyYWJsZSBhbmQgbWFsbGVhYmxlLiBSZXNlYXJjaCBoYXMgZm91bmQgdGhhdCB0byBnZXQgaGFwcGllciwgeW91IG11c3QgdGFwIGludG8gdGhpcyBwb3RlbnRpYWwgYnkgYWN0aXZhdGluZyB5b3VyIG1pbmQgYW5kIGJvZHkgZm9yIGpveS4uIApJIGNhbiB3YWl0IGZvciBzb21lb25lIGVsc2UgdG8gYnV5IGl0IGFuZCBhY3R1YWxseSBmb3JtIGEgc3VzdGFpbmFibGUgYnVzaW5lc3MgdGhlcmUsIGJlY2F1c2UgaXQgdG9vIGdyZWF0IG9mIGEgbG9jYXRpb24gaW4gRnJlbW9udCB0byBiZSBhIHNoaXR0eSBjbG9zZWQgZG93biBiYXIhLiAKQW5nZXIgYWJvdXQgcG9rZXIgZ2FtZXMgcHJlY2VkZWQgc2VuaW9yIGFwYXJ0bWVudCBzaG9vdGluZwpJdCBiZXlvbmQgZnVja2VkIHVwIHRvIGNvbXBhcmUgeW91cnNlbHZlcyBhbmQgb3RoZXJzIHRvIHRoZSBsZWFkZXJzIGFuZCBjb25jbHVkZSB3ZSBhbGwgbG9zZXJzIGJlY2F1c2Ugd2UgZG9uIG1lYXN1cmUgdXAuIApJIHVuZGVyc3RhbmQgdGhhdCBBc2tyZW4gcHJvYmFibHkgaGFzIGFtYXppbmcgY2hva2UgcG93ZXIgYW5kIHNxdWVlemUsIGJ1dCB0aGVyZSBoYXZlIGJlZW4gQURDQyBtZWRhbGlzdHMgYW5kIHNpbWlsYXIgdmF1bnRlZCB3cmVzdGxlcnMgYW5kIEkgY2FuJ3QgcmVjYWxsIHRoZSBsYXN0IHRpbWUgYW55b25lIGNob2tlZCBzb21lb25lIHVuY29uc2Npb3VzIHZpYSBhIGNob2tlIG5vdCBvbiB0aGUgbmVjay4gRXZlbiBpbiB1bmNvbW1vbiBjaG9rZSBwb3NpdGlvbnMgbGlrZSBNYXR0IEh1Z2hlcydzIGNob2tlIG91dCBvZiBBbG1laWRhIGluIHRoZSBmcm9udCBoZWFkbG9jaywgdGhlcmUgaXMgYWx3YXlzIGRpcmVjdCBwcmVzc3VyZSBvbiB0aGUgbmVjay4uIApJIGltYWdpbmUgaXQnZCBiZSBtb3JlIG9mIGFuIG9ic2VydmF0aW9uIHRoaW5nLiBBIHBlcnNvbiBib3JuIG1hbGUgbWlnaHQgZmVlbCBsaWtlIHR5cGljYWxseSBtYWxlIGJlaGF2aW9yIGlzIGF3a3dhcmQgYW5kIHVuY29tZm9ydGFibGUsIGFuZCBmZWVsIGluY2xpbmVkIHRvIGJlaGF2ZSBpbiB0aGUgd2F5IHRoYXQgdGhleSBzZWUgd29tZW4gYmVoYXZpbmcuClRoZSBtb21lbnQgc2hlIHN0b3BwZWQgdHJ5aW5nIHRvIG5pcCBJIHdvdWxkIGdvIGJhY2sgdG8gcGxheWluZyB3aXRoIGhlci4gCkhvdyB0aGlzIGlzIHBvc3NpYmxlIGFmdGVyIGNhbmNlbGxpbmcgdGhlIGNoYXJpdHkgcG9rZXIgdG91cm5hbWVudCBoYXMgbm90IGJlZW4gZXhwbGFpbmVkLiAKU29ycnkgZm9yIHRoZSByYW50LCBidXQgaSB1c2VkIHRvIGxvdmUgUUMgYW5kIGl0cyBnb25lIGRvd25oaWxsIGV2ZW4gZm9yIGEgZ3V5IGxpa2UgbWUgd2hvIGRvZXNudCByZWFsbHkgbWluZCB0aGUgc29tZXdoYXQgcHJlYWNoeSBzdG9yeSBhbmQgY3JpbmdlLgpPciBtb2Rlcm4gUnVzc2lhIHdoZXJlIGl0IGlzbiBpbGxlZ2FsLCBidXQgdGhlICIiInByb21vdGlvbiIiIiBpcyBhbmQgdGhlcmUgbm90aGluZyB0byBzdG9wIHJhbXBhbnQgc2tld2luZyBvZiB0aGF0IGRlZmluaXRpb24gdG8gb3BwcmVzcyBmcmVlbHkuLiAKMyBjaGFyZ2VkIGluIGZhdGFsIFNhZ2luYXcgVG93bnNoaXAgcG9rZXIKSSdsbCBmaWxlIGEgUU9MIGJ1ZyBvbiBNb25kYXkgdG8gc2VlIGlmIHRoaXMgY2FuIGJlIGNoYW5nZWQuIExvc2luZyBhIGZ1bGwgc3RhY2sgb2YgRW5oYW5jZW1lbnQgQ29yZXMgZHVlIHRvIGEgbWlzdGFrZSBpcyBhIHRlcnJpYmxlIGV4cGVyaWVuY2UgdGhhdCB3ZSBzaG91bGQgdHJ5IHRvIHByZXZlbnQuIE5vIGlkZWEgb24gRVRBIGZvciBhIGNoYW5nZSwgaWYgb25lIGNhbiBiZSBtYWRlLgpUaGUgaW5jaWRlbnQgd2FzIHVuZGVyIGludmVzdGlnYXRpb24sIGFuZCBJIHdhcyB2ZXJ5IG5lcnZvdXMgZm9yIG5leHQgZmV3IGFzIEkgY291bGQgbG9zZSBteSBqb2Igb3Igd29yc2UuIApUaGVyZSBjb3VsZCBiZSBkaWZmZXJlbnQgYnJhbmNoZXMsIHdpdGggaXQga25vd24gdG8gcGxheWVycyB0aGF0IG9uZSBpcyAicmlnaHQiLCB0aGUgb3RoZXIgIndyb25nIiwgd2l0aCBkaWZmZXJlbnQgY29uc2VxdWVuY2VzLCBidXQgdGhleSBkb24ndCBrbm93IHdoaWNoIGlzIHdoaWNoLiAKVGhpcyB3aWxsIGhlbHAgdGhlbSB0byBkZXZlbG9wIGFuZCBlbmhhbmNlIHRoZWlyIG93biBwcm9ibGVtIHNvbHZpbmcgc2tpbGxzLCBhbmQgc2hvdyB0aGVtIHRoYXQgbWF0aCBpcyBzaW1wbHkgYSBtYXR0ZXIgb2YgdGhpbmtpbmcgY3JpdGljYWxseSBhYm91dCBob3cgdG8gc29sdmUgYSBwcm9ibGVtLls5XS4gCllhbGwgYWxzbyBoYXZlIHdheSBtb3JlIGFjY2VzcyB0byBscGcgbW90b3JzICh0aG91Z2ggaXZlIHJlYWQgdGhvc2UgaGF2ZSBjZWFzZWQgcHJvZHVjdGlvbi4pIGFuZCB0aGUgaW50ZWNoIHR1cmJvIG1vdG9yIGlzIHRoZSBzdHVmZiBvZiBteSBkcmVhbXMsIHRoZSBtb2Rlcm5pemVkIHRocmlmdHBvd2VyIHNpeCBpdmUgYWx3YXlzIHdhbnRlZC4gSGVsbCwgaWYgaSBjb3VsZCBqdXN0IGltcG9ydCBpbiBhbiBpbnRlY2ggc2l4LCB0aGF0IHdvdWxkIGJyZWF0aCBhIHNwZWNpYWwgbGlmZSBpbnRvIGFuIG9sZGVyIG11c3RhbmcgaGVyZSBzdGF0ZXNpZGUgKGRvZXMgdGhlIGludGVjaCBoYXZlIHRoZSBzYW1lIG1vdW50aW5nIHBvaW50cyBhcyB0aGUgdGhyaWZ0cG93ZXJzPykuIEkga25vdywgbG9uZyBwb3N0LCBidXQgaXZlIGJlZW4gaGF2aW5nIHRoaXMgc2ltbWVyIGluIG15IGhlYWQgZm9yIGF3aGlsZS4uIApCdXQgaWYgeW91IGRvbiBtaW5kIHNwZW5kaW5nIHlvdXIgdHVpdGlvbiBtb25leSBvbiBhIGxvdyByYW5raW5nIHVuaXZlcnNpdHkganVzdCB0byBsaXZlIGhlcmUsIGF0dGVuZGluZyB0aGF0IHNjaG9vbCBmb3IgNCB5ZWFycyB3b3VsZCBub3QgYmUgc3VjaCBhIGJhZCBpZGVhLCBzaW5jZSBpdCB3b3VsZCBnaXZlIHlvdSBzdGFiaWxpdHkgd2hpbGUgZ2l2aW5nIHlvdSB0aW1lIHRvIGxlYXJuIEtvcmVhbi4gCldlIHNwZW50IHRoZSBuZXh0IHR3byBuaWdodHMgaW4gT2x5bXBvcywgd2hpY2ggaXMgdGhlIHNpdGUgb2YgdGhlIGJ1cm5pbmcgZmxhbWUgKENoaW1hZXJhKSB0aGF0IGhhcyBiZWVuIGJ1cm5pbmcgZm9yIGNlbnR1cmllcy4gT2x5bXBvcyBpcyBjb29sIHNpbmNlIGl0IGlzIGZvcmJpZGRlbiB0byBidWlsZCB1c2luZyBjb25jcmV0ZSB0aGVyZS4gU28gd2Ugc2xlcHQgaW4gdHJlZWhvdXNlcyEgT3VyIHRyZWUgaG91c2UgZXZlbiBoYWQgYSBiYXRocm9vbS4gVGhlcmUgd2FzIGEgYmVhY2ggbmVhcmJ5IGFuZCBhIGJhciB3aXRoIGEgZmlyZXBpdCBpbiB0aGUgbWlkZGxlLCBhbmQgaXQgd2FzIGZ1biwgZXhjZXB0IHRoYXQgdGhlcmUgd2VyZSBvbmx5IG90aGVyIHRyYXZlbGVycyB0aGVyZSBhbmQgd2UgZW5qb3kgaGFuZ2luZyBvdXQgd2l0aCB0aGUgVHVya3MsIHNvIHdlIGxlZnQgYWZ0ZXIgdHdvIGRheXMgYW5kIGRyb3ZlIHRvIEthcywgYSBiZWFjaCB0b3duIGFib3V0IHR3byBob3VycyB3ZXN0IG9mIHRoZXJlLgpBbHNvIEkgaGF2ZSB2b3RlZCBSZXB1YmxpY2FuIG1vc3RseSBiZWNhdXNlIHRoZXJlIGFyZSBhIGZldyB0aGluZ3MgSSBkb250IGFncmVlIHdpdGggYWJvcnRpb24gbGltaXQgYXQgMjQgd2Vla3MgSSBmaW5kIHRvIGxhdGUgaW4gYSBwcmVnbmFuY3ksIGd1biBjb250cm9sIGxhd3MgdGhhdCBwZW9wbGUgd2FudCB0byBpbXBsZW1lbnQsIGFuZCBpbW1pZ3JhdGlvbiBsYXdzIHRoYXQgYXJlbiB0byBsYXhlZC4gCk5vbiBzZXVsZW1lbnQgYydlc3QgcGx1cyBhdmFudGFnZXV4IG1haXMgdnUgbGEgcXVhbnRpdCBvbiBhIGRlcyBjaGFuY2VzIGQnb2J0ZW5pciB1biByc3VsdGF0LlBvdXIgbCdhcnRlbWlzaWEgYW5udWEgNTAgZy4gClR3byBzbmlwZSwgcGxheWluZyBhbmQgY2hhc2luZyBvbmUgYW5vdGhlciwgYW5kIG9ubHkgd2hpc3RsaW5nLCBub3QgY3J5aW5nLCBmbGV3IHN0cmFpZ2h0IGF0IHRoZSB2ZXJ5IGhlYWRzIG9mIHRoZSBzcG9ydHNtZW4uIAo5LiBNb25pdG9yZSBoYml0b3MgZGUgY29uZHVvIGRvIHNldSBtYXJpZG8gcG9yIHVtIG1zLiBQcmVzdGUgYXRlbm8gcGFyYSBvIGF1bWVudG8gZGFzIHJlY2VpdGFzIGRlIGdzIGUgbW9uaXRvcmFyIG8gb2RtZXRybyBkbyBjYXJybyBwYXJhIHZlciBzZSBoIGttIGV4dHJhIGluZXhwbGljdmVpcyBubyBjYXJyby4gTW9uaXRvcmFyIG8gdGVtcG8gcXVlIGVsZSBzYWkgcGFyYSBvIHRyYWJhbGhvIGUgbyB0ZW1wbyBxdWUgZWxlIHZlbSBjYXNhLiBWb2MgZGV2ZSBzZXIgY2FwYXogZGUgZXN0YWJlbGVjZXIgdW0gcGFkcm8gbWFudGVuZG8gdW0gY2FsZW5kcmlvIGUgb2JzZXJ2YW5kbyBvcyB0ZW1wb3MuIFNlIHNldSBtYXJpZG8gcHJldGVuZGUgdHJhYmFsaGFyIHRhcmRlLCB2ZXJpZmljYXIgY29udHJhY2hlcXVlIHN0dWJzIHBhcmEgdmVyaWZpY2FyIHN1YXMgaG9yYXMgZXh0cmFzLiBTZSBzZXUgbWFyaWRvIGV4cGxpY2EgdW1hIHJlZ3Jlc3NvIGEgY2FzYSBmaW5hbCBjb21vIHJlc3VsdGFkbyBkZSB0ZXIgYSB1bmlkYWRlIGZvcmEgZGEgY2lkYWRlIGVtIG5lZ2Npb3MsIG5vIGVudGFudG8sIGEgcXVpbG9tZXRyYWdlbSBkbyBjYXJybyBpbmRpY2EgbWVub3MgZGUgZGV6IHF1aWxtZXRyb3MgcGVyY29ycmlkb3MsIHZvdSB0ZXIgcGVnbyBzZXUgbWFyaWRvIGZhemVuZG8gYmF0b3RhIGVtIHVtYSBtZW50aXJhIHF1ZSBwb2RlIHNlciBkZXZpZG8gYSBzZXUgYWR1bHRyaW8uCkkgdHJpZWQgdG8ga2lsbCBteXNlbGYgc2hvcnRseSBhZnRlci4gClRoZSBkb2N0b3IgZmluYWxseSBzYWlkIGl0IHdhcy4gQ2xvc2UgdXAgc2hvdCBvZiBjbG9zZWQgZXllcyBvcGVuaW5nIHdpZGUuCllvdSBmbGlwIG9uIHRoZSBoYWxsd2F5IGxpZ2h0LiBUaGUgbWFuIGlzIHdlYXJpbmcgZXhhY3RseSB3aGF0IHlvdSB3b3VsZCBleHBlY3QgYSB0aGllZiB0byB3ZWFyLCBhIGRhcmsgcGFpciBvZiBwYW50cyBhbmQgamFja2V0IGFuZCBldmVuIGEgYmxhY2sgd29vbCBrbml0IGhhdC4gSGlzIGhlYWQgaXMgYmxlZWRpbmcgYmFkIGFuZCBoaXMgaGFuZCBsb29rcyBicm9rZW4uLiAKRWFjaCBwbGF5ZXIgaXMgZGVsdCAyIGNhcmQgdGhlbiB0cmhlZSBjYXJkIGFyZSBjb21tdW5pdHkgdGhlIHRoZSBuZXh0IG9uZSBpcyBjYWxkIHRoZSB0dXJuIHRoZW4gdGhlIGxhc3Qgb25lIGlzIGNhbGxlZCB0aGUgcml2ZXIgKEZ1bGwgQW5zd2VyKS4gClRoZSBuZXh0IGRheSwgeW91IHJlYWxpemUgdGhhdCB5b3UgbWVyZWx5IGFkanVzdGVkIHlvdXIgc2NoZWR1bGUgdG8gaGFuZGxlIGFuIHVuZm9yZXNlZW4gY3Jpc2lzLiBJdCBjb3VsZCBiZSBhIGJyb2tlbiB0b290aCB0aGF0IHJlcXVpcmVzIGFuIGVtZXJnZW5jeSB0cmlwIHRvIHRoZSBkZW50aXN0IGFuZCBhbiBhbGwgZGF5LCBoYWxmIGRhemVkIHJlY292ZXJ5IG9uIHlvdXIgY291Y2gsIHdoaWNoIG1hbmFnZXMgdG8gcHV0IHlvdSBiZWhpbmQgYXQgd29yay4gCkt1YWxhIEx1bXB1ciwgTWFsYXlzaWEgIFFRIDMzOCBBc2lhIHRoYXQgaGFzIG9wZW5lZCBpdHMgZG9vcnMgZm9yIHRoZSBtYXNzZXMgZWFybGllciwgaXMgbm93IG9uZSBvZiB0aGUgYmlnZ2VzdCBnYW1pbmcgZXN0YWJsaXNobWVudHMgb24gdGhlIHdlYi4gCkFub3RoZXIgb3B0aW9uIGlzIHRvIGhhdmUgc29tZSBzb3J0IG9mIG5vbiBpbnN1cmFibGUgc2lkZSBidXNpbmVzcy4gU2VwYXJhdGUgb2ZmZXJpbmdzIHdpdGhvdXQgdGhlIGR1YmlvdXMgZXRoaWNzIG9mIFNPUCBhcnRpc3RyeS4gCkkgbWVhbiB0cnVseSBmZWFyZnVsLiAKSSB3YW50IDVHLCBhbmQgZXZlbiA2RywgdGVjaG5vbG9neSBpbiB0aGUgVW5pdGVkIFN0YXRlcyBhcyBzb29uIGFzIHBvc3NpYmxlLiBJdCBpcyBmYXIgbW9yZSBwb3dlcmZ1bCwgZmFzdGVyLCBhbmQgc21hcnRlciB0aGFuIHRoZSBjdXJyZW50IHN0YW5kYXJkLiBBbWVyaWNhbiBjb21wYW5pZXMgbXVzdCBzdGVwIHVwIHRoZWlyIGVmZm9ydHMsIG9yIGdldCBsZWZ0IGJlaGluZC4gCkZvciBpbnN0YW5jZSwgc29tZSBwZW9wbGUgbG92ZSB0aGUgZWZmZWN0IG9mIGEgY29uZSBvZiBicmlnaHQgbGlnaHQgaW4gZGltIHJvb20uIFRoZSBsaWdodCB0eXBpY2FsbHkgY29tZXMgZnJvbSBvdmVyaGVhZCBpbiBhIHZpbnRhZ2Ugc3R5bGUgY2VpbGluZyBmaXh0dXJlLCBidXQgcmVtZW1iZXIgdGhhdCB0aGUgcG9vbCBvZiBsaWdodCBzaG91bGQgZW5jb21wYXNzIGV2ZXJ5b25lISBJZiB5b3UgaGF2ZSBhIGxpZ2h0aW5nIHNpdHVhdGlvbiB0aGF0IGlzIHZlcnkgc3BlY2lmaWMsIHRha2Ugc29tZSB0aW1lIGFuZCBjb25zaWRlciBob3cgeW91IGFyZSBnb2luZyB0byBiZSBhYmxlIHRvIGNyZWF0ZSBhbiBlZmZlY3QgdGhhdCBpcyBnb29kIGZvciB0aGUgc2hhcGUgb2YgdGhlIHRhYmxlIHRoYXQgeW91IGFyZSBjb25zaWRlcmluZy4uIApQYW1lbGEgQW5kZXJzb24gcmVjZWl2ZWQgYSB2aXNpdCBmcm9tIHBvbGljZSBhdCBoZXIgTG9zIEFuZ2VsZXMgaG9tZSBvbiBUaHVyc2RheSBuaWdodCBhZnRlciBzaGUgcmVmdXNlZCBlbnRyeSB0byBoZXIgZXN0cmFuZ2VkIGh1c2JhbmQgUmljayBTYWxvbW9uIGRhdWdodGVyLgpXZSBhcmUgY3VycmVudGx5IG1ha2luZyBncmVhdCBjaGFuZ2VzIHRvIHRoZSBvdmVyYWxsIGNhc2lubyBhbmQgaG90ZWwsIHNvIHdlIGhvcGUgdGhhdCB5b3Ugd2lsbCBiZSBhYmxlIHRvIG1ha2UgaXQgZG93biBpbiB0aGUgbmV4dCBmZXcgbW9udGhzIHRvIGNoZWNrIHRoZW0gb3V0LiBXZSBjYW4ndCB3YWl0IHRvIHNlZSB5b3UhUmVwb3J0IHJlc3BvbnNlIGFzIGluYXBwcm9wcmlhdGVUaGFuayB5b3UuVGhpcyByZXZpZXcgaXMgdGhlIHN1YmplY3RpdmUgb3BpbmlvbiBvZiBhIFRyaXBBZHZpc29yIG1lbWJlciBhbmQgbm90IG9mIFRyaXBBZHZpc29yIExMQy5CZXRzeSBNLCBNYW5hZ2VyIGF0ICwgcmVzcG9uZGVkIHRvIHRoaXMgcmV2aWV3UmVzcG9uZGVkIEp1bHkgMTUsIDIwMTRUaGFuayB5b3UgZm9yIHNoYXJpbmcgeW91ciByZXZpZXcgd2l0aCB1cyBUZXJyaS4gCkhlIGFsd2F5cyB0b29rIGNhcmUgb2YgaGlzIG1vdGhlciBhbmQgZXNwZWNpYWxseSBsb3ZlZCB0YWtpbmcgaGVyIHRvIExhcyBWZWdhcyBldmVyeSB5ZWFyIGZvciBoZXIgYmlydGhkYXkuIE5vdGhpbmcgd2FzIGV2ZXIgdG9vIGJpZyBvciB0b28gbXVjaC4gSGUgbGl2ZWQgaGlzIGxpZmUgdGhlIHdheSBoZSB3YW50ZWQgdG8gZXZlcnkgZGF5LCBoaXMgbW90dG8gb2YgbGlmZSB3YXMgR28gQmlnIG9yIEdvIEhvbWUuIApWaWVsZSBkZXIgRmlzY2hlIHVuZCBkYXMgZ2VzYW10ZSBXaWxkIGtvbW1lbiB2b20gR3V0c2dlYmlldC4gClRoaXMgZ290IHNvIGJhZCB0aGF0IExvTSBtb2RlcmF0b3JzIGhhZCB0byBtYWtlIGEgYm90IHNvIHRoYXQgbW9kcyBjb3VsZCByZXNwb25kIGluIGEgc3RpY2t5IGNvbW1lbnQgYmVjYXVzZSBjb21tZW50cyB3b3VsZCBiZSBtYXNzIGRvd252b3RlZCByZWdhcmRsZXNzIG9mIGNvbnRlbnQuU29tZXRpbWVzLCB5b3Ugd2lsbCBoYXZlIGdvb2QgY29udGVudCB0aGVyZSBzdWNoIGFzIHRoaXMgdGhyZWFkIHdoZXJlIHBlb3BsZSB3aWxsIGVuZ2FnZSB3aXRoIGdvb2QgcG9pbnRzIGFuZCBtb2RlcmF0b3JzIHdpbGwgcmVzcG9uZC4gCklmIGl0IDEvMTB0aCBvZiBhbiBhcmMgc2Vjb25kLCBpdCAxMCBwYXJzZWNzIGF3YXkuIFNvLCBnaXZlbiB0aGF0IGFzdHJvbm9tZXJzIGxpa2UgdXNpbmcgYXJjIHNlY29uZHMgdG8gbWVhc3VyZSBhbmdsZXMgaW4gdGhlIHNreSwgdXNpbmcgcGFyc2VjcyBtYWtlcyB0aGUgbWF0aGVtYXRpY3MgcmVhbGx5IHNpbXBsZS4gClRoaXMgd2FzIGZpbmUgdXAgdW50aWwgSSBzdGFydGVkIHdhbnRpbmcgdG8gbWFrZSBpbmRlcGVuZGVudCBkZWNpc2lvbnMgYWJvdXQgbXkgbGlmZS4gCkJpZ3Nsb3Rob25teWZhY2UgdQoiT3VyIGtub3dsZWRnZSBvZiB0aGUgc2NpZW5jZXBlcmhhcHMgY291bGQgYmUgYmV0dGVyIGFuZCBldmVyeSBzZWFzb253ZSdsbGdldCBiZXR0ZXIgYXQgZm9yZWNhc3RpbmcsIiBoZSBzYWlkLiAiVGhlcmUgd2VyZSB0d28gZXBpc29kZXMgaW4gdGhlIDE5ODBzd2hpY2ggd2VyZSBkZXNjcmliZWQgYnkgYSBncm91cCBmcm9tIE1lbGJvdXJuZSBVbml2ZXJzaXR5LGFuZCBJJ3ZlIGJlZW4gYXdhcmUgb2YgaXQgc2luY2UgdGhlbi4gCklmIHlvdSBoYXZlIGEgeW91bmdlciBzcG91c2Ugb3IgY29tbW9uIGxhdyBwYXJ0bmVyLCBiYXNpbmcgeW91ciBtaW5pbXVtIHdpdGhkcmF3YWxzIG9uIHRoZWlyIGFnZSB3aWxsIG1pbmltaXplIHRoZSByZXF1aXJlZCB3aXRoZHJhd2FscyB5b3UgbmVlZCB0byB0YWtlLiBZb3UgY2FuLCBob3dldmVyLCBjaG9vc2UgdG8gd2l0aGRyYXcgbW9yZSB0aGFuIHRoZSBtaW5pbXVtLiAKSW93YSBpcyBhIHNpbWlsYXIgc3RvcnkuIFdoZW4gdGhlIERlbW9jcmF0aWMgUGFydHkgdHJpZWQgdG8gcmVmb3JtIHRoZWlyIHByaW1hcnkgcHJvY2VzcyBpbiAxOTcyLCBJb3dhIHdlbnQgZmlyc3QgaW4gcGFydCBiZWNhdXNlIHRoZWlyIHN5c3RlbSB3YXMgc28gY29udm9sdXRlZC4gSXQgYmVjYW1lIGltcG9ydGFudCBiZWNhdXNlIGl0IHdhcyBmaXJzdCwgZW1wb3dlcmluZyBJb3dhbiBsYXdtYWtlcnMgdG8gYW4gZXh0ZW50LCBhbmQgaXQgc29ydCBvZiBzZWxmIHBlcnBldHVhdGluZyBhdCB0aGlzIHBvaW50LgpCYWQgaGVyZSBtZWFucyBub3QgYSBiYWQgY2hhbmNlIG9mIHdpbm5pbmcsIGJ1dCBhIGdvb2QgY2hhbmNlIG9mIHBsYXlpbmcgaXQgd3JvbmcgYW5kIGxvc2luZyBtb25leS4gCkluIHRoZSBmaXJzdCBleGFtcGxlLCBpbnN0ZWFkIG9mIHNlbGxpbmcgdGhlIHRyb24gaG91c2UgdG8gbW92ZSB0byBraW5nIGNvdW50cnksIGxldCdzIGltYWdpbmUgdGhleSBtb3ZlZCB0byBraW5nIGNvdW50cnkgaG91c2UgYnV0IHJlbnRlZCBvdXQgdGhlIFRyb24gaG91c2UgZm9yIDUgeWVhcnMgYmVmb3JlIHNlbGxpbmcgaXQsIHRoZW4gQ0dUIHdvdWxkIG9ubHkgYXBwbHkgZm9yIHRoZSBpbmNyZWFzZSBpbiB2YWx1ZSBiZXR3ZWVuIHRoZSB0aW1lIHRoZXkgbW92ZWQgb3V0IGFuZCB0aGUgdGltZSB0aGV5IHNvbGQgaXQuIDMwJSBvZiB0aGUgNTAwayBnYWluIGZyb20gdGhlIGxhc3QgNSB5ZWFycykuIApIYXJkIGRpc2FncmVlLiBJIHdvbiBhcmd1ZSB0aGF0IElzbGFtIGFzIGEgd2hvbGUgZG9lc24gaGF2ZSBhIHdob2xlIGxvdCBvZiBwcm9ibGVtcyB0byBncm93IG91dCBvZiwgYnV0IHBlb3BsZSBzaG91bGQgYmUganVkZ2VkIG9uIGFuIGluZGl2aWR1YWwgYmFzaXMuIEFzIGxvbmcgYXMgdGhlcmUgYXJlIE11c2xpbXMgd2hvIGRvIHN1cHBvcnQgbGliZXJhbCBiZWxpZWZzIChpbmNsdWRpbmcgTEdCVCByaWdodHMpIHdlIHNob3VsZG4gd3JpdGUgb2ZmIHRoZSBlbnRpcmUgcmVsaWdpb24uCiJQb2tlciBtYWNoaW5lcyBhcmUgYSBjb24gam9iICAgdGhleSBhcmUgbm90IGFjY2lkZW50YWxseSBhZGRpY3RpdmUsIHRoZXkgYXJlIGRlbGliZXJhdGVseSBhZGRpY3RpdmUsIiBNciBXZW5uIHNhaWQuClN1cmUsIHRoZXkgc2hvdWxkbiBiZSBzcGVlZGluZyBkb3duIGEgcGVkZXN0cmlhbiBhcmVhLCBidXQgaXNuIHRoYXQgbGF3IGVuZm9yY2VtZW50IGpvYiB0byBoYW5kbGU/IEFkZGl0aW9uYWxseSwgaWYgaXQgbGF0ZSBhdCBuaWdodCBhbmQgbm8gb25lIHRoZXJlLCB3aHkgZG9lcyBpdCBtYXR0ZXI/VGhlIGRldHJhY3RvcnMgd2hvIHNheSBpdCBpc24gZW5vdWdoIGFyZSBkb3ducmlnaHQgbHVkaWNyb3VzLCBhbmQganVzdCB0aGUgdHlwZSBvZiBOSU1CWSB0aGF0IGFyZSBpbXBlZGluZyB0aGUgY2l0eSBwcm9ncmVzcy5CaWdnZXN0IGlzc3VlIEkgdGhpbmssIGlzIHRoZSB1c2Ugb2YgdGhlbSBvbiBzaWRld2Fsa3MuIE15IG9waW5pb24gb24gdGhhdCBpcyB0aGF0IHRoZSBpc3N1ZSBpc24gdGhlIHNjb290ZXJzLCBpdCB0aGUgbGFjayBvZiBnb29kIGJpa2UgbGFuZXMuIApTZ3QgVHlzb2Ugc2FpZCBzaGUgZXhhbWluZWQgdGhlIGNhciBpbiB0aGUgZnJvbnQgeWFyZCBvZiB0aGUgTmFtYm91ciBwb2xpY2Ugc3RhdGlvbiBidXQgZGlkIG5vdCB0YWtlIEROQSBzYW1wbGVzIGZyb20gdG91Y2ggcG9pbnRzIHN1Y2ggYXMgdGhlIHN0ZWVyaW5nIHdoZWVsLCBkb29yIGhhbmRsZSBvciBncmFiIGJhcnMuCkEgZ29vZCBwb2tlciBjYXJkIHNldCBkZXNlcnZlcyBzb21ldGhpbmcgZ29vZCBmb3IgcHJvdGVjdGlvbiBwdXJwb3NlLiBZb3Ugc2hvdWxkIGRlZmluaXRlbHkgcGF5IG9mZiBmb3IgdGhlIHByb2R1Y3RzIGlmIHlvdSBoYXZlIGdvdCBzb21lIGV4Y2x1c2l2ZSBvbmVzLiBUaGVyZSBhcmUgcG9rZXIgcGxheWVycyB3aG8gaGF2ZSBiZWVuIHdhaXRpbmcgZm9yIHRoZSByZWxpYWJsZSBwb2tlciBjYXJkIHByb3RlY3RvcnMuIApJIGNhbiBkZWZpbml0ZWx5IHJlbGF0ZSB0byB5b3UgcmVnYXJkaW5nIHRoaXMuIFRoZXJlIGlzIG5vdGhpbmcgd3Jvbmcgd2l0aCBzZXBhcmF0aW5nIHRoZXNlIHBhcnRzIG9mIHlvdXIgcGVyc29uYWxpdHkuIFNvbWUgcGVvcGxlIHdpbGwgc2F5IHRoYXQgaXQgImZha2UiIG9yICJub3QgZ2VudWluZSwiIGJ1dCBpdCBqdXN0IGEgbWF0dGVyIG9mIHdobyB5b3UgZGVjaWRlIHRvIHJldmVhbCB0aGUgZGVlcGVyIGFzcGVjdHMgb2YgeW91ciBwZXJzb25hbGl0eSB0by4gQmVpbmcgb3BlbiBhbmQgaW50aW1hdGUgd2l0aCB5b3VyIHByb2JsZW1zIHNob3VsZCBvbmx5IGJlIHJlc2VydmVkIGZvciBwZW9wbGUgd2hvIGFyZSB0cnVseSBjbG9zZSB0byB5b3UgYW5kIHdobyBnZW51aW5lbHkgY2FyZSBhYm91dCB5b3UgYXMgYSBwZXJzb24sIGFuZCB0aGF0IGp1c3QgY29tZXMgd2l0aCB0aW1lLiBPdXIgaHVtb3IgYW5kIG91dGdvaW5nIHBlcnNvbmFsaXRpZXMgc2hvdWxkIHNlcnZlIHRvIGF0dHJhY3QgYW5kIGZpbHRlciBvdGhlcnMuIEFzIERyLiBTZXVzcyBzYWlkLCAiVGhvc2Ugd2hvIG1hdHRlciBkb24gbWluZCwgYW5kIHRob3NlIHdobyBtaW5kIGRvbiBtYXR0ZXIuIiBIb3BlIHRoaXMgaGVscHMuIFJlbWVtYmVyLCB5b3Ugbm90IGFsb25lIGluIHRoaXMuCkltIHByZXR0eSBsdWNreSBzbyB0aGF0IG1ha2VzIGl0IGV2ZW4gbW9yZSBmdW4sIGZvciBtZSBhbnl3YXksIEhvcGtpbnMgdG9sZCBhIGxhcmdlIGNyb3dkIG9mIG1lZGlhLCBOWVMgTG90dGVyeSByZXByZXNlbnRhdGl2ZSwgQmlnIE0gc3RhZmYgYW5kIHNob3BwZXJzLlRoZSByZWFsaXR5IHN0aWxsIGhhc250IHN1bmsgaW4uIApBbHNvLCBldmVuIGlmIHRoZSBCaWJsZSBkaWRuIHNheSB0aG9zZSB0aGluZ3MsIGlmIHlvdSBiZWxpZXZlIHlvdSBhcmUgY2FwYWJsZSBvZiBkZXZlbG9waW5nIGEgcmVsYXRpb25zaGlwIHdpdGggdGhlIG9uZSB0cnVlIEdvZCwgd291bGRuIHlvdSBkZXZvdGUgeW91ciBsaWZlIHRvIGdyb3dpbmcgdGhhdCByZWxhdGlvbnNoaXA/IEkgdGhpbmsgaXQgdmFsaWQgdG8gYXJndWUgdGhhdCBpZiB5b3UgZG8gbm90IHdhbnQgdG8gcHVyc3VlIENocmlzdCwgaXQgaXMgYmVjYXVzZSB5b3UgZG9uIHRydWx5IGJlbGlldmUgaW4geW91ciBoZWFydC4gSWYgeW91IGRpZCBiZWxpZXZlLCBub3RoaW5nIGVsc2Ugd291bGQgbWF0dGVyLCBiZWNhdXNlIEdvZCBpcyBldmVyeXRoaW5nLi4gCkhlIGlzIGFuIGljb24gaW4gdGhlIHBhaW4gbWFuYWdlbWVudCB3b3JsZCBhbmQgdGhlIHdvcmxkIG9mIGFuYXRvbWlzdHMuIFRvIGdpdmUgeW91IGFuIGlkZWEgb2YgaGlzIGNvbnRyaWJ1dGlvbiB0byB0aGUgc2NpZW50aWZpYyBjb21tdW5pdHksIGhlIGFuZCBoaXMgY29ob3J0cyB3ZXJlIHRoZSBmaXJzdCB0byBkb2N1bWVudCB0aGUgcHJlc2VuY2Ugb2Ygbm9jaWNlcHRpdmUgbmVydmUgZmliZXJzIChwYWluIGZpYmVycykgaW4gdGhlIGh1bWFuIGRpc2MgaW4gdGhlIGxhdGUgODAgSGlzIGRpc2NvdmVyeSByZXZvbHV0aW9uaXplZCB0aGUgbWFuYWdlbWVudCBvZiBheGlhbCBjb21wbGFpbnRzIChzcGluZSkgYW5kIGhhcyBvZmZlcmVkIHVzIGdyZWF0IGluc2lnaHQgaW50byB0aGUgbmF0dXJlIG9mIHRoZSBzcGluYWwgZGlzY3MgYW5kIGZhY2V0IGpvaW50cyBhcyBwYWluIGdlbmVyYXRvcnMuIApQb3N0bWVkaWEgd2FudHMgdG8gaW1wcm92ZSB5b3VyIHJlYWRpbmcgZXhwZXJpZW5jZSBhcyB3ZWxsIGFzIHNoYXJlIHRoZSBiZXN0IGRlYWxzIGFuZCBwcm9tb3Rpb25zIGZyb20gb3VyIGFkdmVydGlzZXJzIHdpdGggeW91LiBUaGUgaW5mb3JtYXRpb24gYmVsb3cgd2lsbCBiZSB1c2VkIHRvIG9wdGltaXplIHRoZSBjb250ZW50IGFuZCBtYWtlIGFkcyBhY3Jvc3MgdGhlIG5ldHdvcmsgbW9yZSByZWxldmFudCB0byB5b3UuIApCdXQgd2UgcmVhbGx5IGNhbid0IGtub3cgaG93IHRoZXkgd2lsbCB0dXJuIG91dC4uIApTdHVkeSB1cCBldmVuIGEgbGl0dGxlIGFuZCB5b3UnbGwgYmUgaGFwcHkgeW91IGRpZC4gCkZvbGxvd2luZyBvbiBmcm9tIE1pc3MgU2xvYW5lLCBNb2xseSBpcyBhbm90aGVyIG9mIEplc3NpY2EgQ2hhc3RhaW4ncyBoZWFydGxlc3MgY293IGVzc2F5cy4gVGhlIGRhdWdodGVyIG9mIGEgcHVzaHkgZmF0aGVyIChLZXZpbiBDb3N0bmVyKSwgYWZ0ZXIgbmFycm93bHkgZmFpbGluZyB0byBtYWtlIHRoZSBVUyBPbHltcGljIHNraSB0ZWFtLCBzaGUgaGVhZHMgb2ZmIHRvIExBIGZvciBhIHByZSBsYXcgc2Nob29sIGdhcCB5ZWFyIGJ1dCBzdHVtYmxlcyBpbnRvIHJ1bm5pbmcgYSBoaWdoIHN0YWtlcywgY2VsZWJyaXR5IGZpbGxlZCBwb2tlciBnYW1lLi4gCkxldCdzIHNheSB5b3UgcGljayBmb290YmFsbCAoc29jY2VyKSB0byBiZSB5b3VyIHByZWZlcnJlZCBiZXR0aW5nIHNwb3J0LiBZb3UgbXVzdCB0aGVuIGNob29zZSBzcG9ydHMgbGVhZ3VlcyBhbmQgdGVhbXMgdG8gYmUgYmV0dGluZyBvbi4gTW9zdCBwcm9mZXNzaW9uYWwgYmV0dG9ycyBhcmVuJ3Qgc3RyaWN0IG9uIHRlYW1zIGJ1dCB0aGV5IHN0aWNrIHRvIGEgZmV3IHRvcCBsZWFndWVzLiBUaGUgdG9wIEV1cm9wZWFuIGxlYWd1ZXMgYXJlIGEgZ3JlYXQgc3RhcnQgc2luY2UgdGhleSBvZmZlciBjb21wZXRpdGl2ZSBnYW1lcyB0ZWxldmlzZWQgd29ybGR3aWRlLgpUaGUgbWFzc2FnZSB0aGVyYXBpc3QgbWFya2V0cyB0aGlzIGVuaGFuY2VkIHNlcnZpY2UgdGhyb3VnaCBicmlkYWwgc2hvcHMgYW5kIHByb20gZ293biByZXRhaWxlcnMsIGFuZCBwcm92aWRlcyBhIHJlZmVycmFsIGluY2VudGl2ZSBmb3IgaGVyIG93biBjbGllbnRzIGFzIHdlbGwuLiAKT25jZSBhbGwgdGhlIHZpY3RpbXMgcGFzcyBhd2F5IEphcGFuIGNhbiBqdXN0IHB1bGwgdGhlICJ0aGV5IGFsbCBkZWFkIiBjYXJkIGFuZCB0aGVyZSBiZSBsaXR0bGUgS29yZWEgY2FuIGRvLiAKVGhpbmsgc3VwcG9ydGluZyB0aG9zZSBraW5kcyBvZiBidWlsZHMgaXMgcHJvYmFibHkgYSBsb3QgbGVzcyBpbXBvcnRhbnQgdGhlbiBzaWduaWZpY2FudGx5IHJlbW92aW5nIHRoZSByYW5kb21uZXNzIG9uIGluc2NyaXB0aW9uIHJvbGxzLiBTbyBJIGFwcGxhdWQgdGhpcyBjaGFuZ2UuIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGRheXMgYWdvCkluIFZhbmNvdXZlciwgYXQgbGVhc3QsIHRoaXMgbmV3IGdlbmVyYXRpb24gb2YgY2FzaW5vIHJlc29ydCBpcyBsaWdodCwgYnJpZ2h0IGFuZCBvZmZlcnMgYmVhdXRpZnVsIHZpZXdzIG9mIFZhbmNvdXZlci4gCkxhIGJsb25kZSBzdWRvaXNlICAgcXVpIGVzdCBwbHV0dCB1bmUgUXViY29pc2UgYXlhbnQgZmFpdCB1biB2b3lhZ2UgZW4gU2NhbmRpbmF2aWUgICBsIGp1c3F1IGxhIHNvcnRpZS4gClNvIGZyb20gdmlkZW8gdHV0b3JpYWxzIEkgbWFpbmx5IHN0YXJ0ZWQgcHJhY3RpY2luZyBpbiB0aGUgY2FyIGFuZCBhcyBJIGdvdCBtb3JlIGNvbmZpZGVudCBteSB2b2ljZSBzdGFydGVkIGNoYW5naW5nIGluIGV2ZXJ5IGRheSBsaWZlLiAKQW4gZXhhbXBsZSBpIGNhbiB0aGluayBvZiBmb3IgbWUgcGVyc29uYWxseSBpcyB3aHkgcGxheSBwb2tlciB3aGVuIGkgY2FuIHNwZW5kIGEgZGF5IHdpdGggbXkgZG9nLCB3aHkgcGxheSBwb2tlciBhbmQgaGF2ZSBhIDc1JSB3aW5yYXRlIGFuZCBwcm9maXQgd2hlbiBpIGNhbiBlbmpveSAxMDAlIG9mIHRoZSB0aW1lcyBpIHBsYXkgd2l0aCBteSBkb2cuIEhlcmUgYW5vdGhlciBleGFtcGxlLiAKQSBwb2tlciBydW4gYW5kIGNoaWxpIGRpbm5lciBiZWdhbiBpbiAxOTk5IHRvIHJhaXNlIGZ1bmRzIGZvciB0aGUgVGhvbWFzdmlsbGUgZmlyZWhvdXNlLiBIYWxmIHRoZSBmdW5kcyBoYXZlIGJlZW4gZG9uYXRlZCB0byB0aGUgVmluY2VudCBQYXVsIFRob21hcyBFTVQgTWVtb3JpYWwgRnVuZCBzaW5jZSAyMDAyLgpGYWNlYm9vaywiIGxhbWVudHMgY291cGxlcyB3aG8gbGlrZSB0byBmaWdodCBvbmxpbmUuIE5vdCBzbyBtdWNoIHRoYXQgY291cGxlcyBhcmUgZG9pbmcgdGhpcyAoYWZ0ZXIgYWxsLCBJIGFtIHN1cmUgdGhhdCBjb3VwbGVzIGhhdmUgbG9uZyBjb21wbGFpbmVkIHRvIHRoZWlyIGZyaWVuZHMgYWJvdXQgdGhlaXIgc2lnbmlmaWNhbnQgb3RoZXIgc3R1cGlkaXR5IG9yIGNyYXNzbmVzcyBvciBzbG92ZW5seSBoYWJpdHMpLCBpdCB0aGF0IHRoZXkgZG9pbmcgc28gaW4gdGhlIHNlbWkgcHVibGljIGZvcnVtIG9mIEZhY2Vib29rIHRoYXQgYm90aGVycyBwZW9wbGUgKGFzIG9wcG9zZWQgdG8gYSBjb2ZmZWUgc2hvcD8pLi4gCkNvbnRyYXJ5IHRvIHNvbWUgYXNzdW1wdGlvbnMsIGEgbW9kdWxhciBidWlsZGluZyBpcyBub3QgYSBiYXNpYywgY29va2llIGN1dHRlciBib3guIFByZWZhYiBob21lcyBhcmUgaW5jb3Jwb3JhdGluZyBtb2Rlcm4gYW5kIHBsZWFzaW5nIGFyY2hpdGVjdHVyYWwgZWxlbWVudHMgcGx1cyBjdXN0b21pemVkLCBlY28gZnJpZW5kbHkgYW5kIHNtYXJ0IGhvbWUgdGVjaG5vbG9neSBieSBkZXNpZ24uIFBlb3BsZSB3b24gZXZlbiBrbm93IHRoZXkgbW9kdWxhci4gY29tbXVuaXRpZXMgaGF2ZSBhbHJlYWR5IHdlbGNvbWVkIG1vZHVsYXIgaG91c2luZywgYXBwcm92aW5nIHByb2plY3RzIGZvciB0aGUgaG9tZWxlc3MgaW4gYXMgbGl0dGxlIGFzIHNpeCB3ZWVrcy4gQnV0LCB1bmxpa2Ugb3VyIEV1cm9wZWFuIG9yIEFtZXJpY2FuIGNvdW50ZXJwYXJ0cywgQ2FuYWRhIGhhcyBiZWVuIHNsb3cgdG8gYWRvcHQgdGhpcyBjb25zdHJ1Y3Rpb24gbWV0aG9kIGZvciB1cmJhbiBkZXZlbG9wbWVudHMuIE9uZSBvZiB0aGUgd29ybGQgbGFyZ2VyIGhvdGVsIGNoYWlucywgTWFycmlvdHQsIHJlY2VudGx5IG9wZW5lZCBhIG1vZHVsYXIgaG90ZWwgd2l0aCA5NyByb29tcywgY2FsbGVkIHRoZSBGb2xzb20gRmFpcmZpZWxkIElubiBTdWl0ZXMsIGluIENhbGlmb3JuaWEsIHdpdGggcGxhbnMgZm9yIG1vcmUuCk15IHdpZmUgYW5kIEkgZ290IG1hcnJpZWQgYXQgYSBwZW5zaW9uIG9uIEdhbmdId2EgbmVhciBHeWVvbmdnaSBkbyAoSSB0aGluay4gaGF2ZSB0byBjaGVjaykuIFJlbnRlZCB0aGUgZW50aXJlIHBsYWNlLiBCcm91Z2h0IGFsbCBvdXIgZ3Vlc3RzIG9uIEJ1c2VzIGZyb20gQnVzYW4uIEhpcmVkIHRoZSBiZXN0IChhdCB0aGUgdGltZSBhbmQgaW4gbXkgb3BpbmlvbikgYmFyIGJhbmQgaW4gQnVzYW4gYW5kIGJyb3VnaHQgdGhlbSBhcyB3ZWxsLiBCb3VnaHQgYWxsIHRoZSBhbGNvaG9sIGZyb20gYSBmcmllbmQgd2hvIG93bmVkIGEgYmFyIGluIEJ1c2FuIGFuZCBzaGlwcGVkIGl0IHVwIG9uIHRoZSBidXMuIEdvdCBmbG93ZXJzIGRlbGl2ZXJlZCBmcm9tIHRoZSBjZW50cmFsIGZsb3dlciBtYXJrZXQgaW4gU2VvdWwuIEdvdCBhIGNhdGVyZXIgdG8gZGVsaXZlciB0aGUgc3RhbmRhcmQgZmVhc3QgdG8gdGhlIHBlbnNpb24uIFdhcyBhbWF6aW5nIGZ1biBhbmQgbW9zdCBvZiB0aGUgKG1haW4gZmFtaWx5IGFuZCBmcmllbmRzKSBndWVzdHMgc2xlcHQgYXQgdGhlIHBlbnNpb24gYW5kIHBhcnRpZWQgYWxsIG5pZ2h0LiBJdCB3YXMgY2hlYXBlciAoZXZlbiBmYWN0b3JpbmcgaW4gYnVzZXMgZnJvbSBCdXNhbiB0byBTZW91bCBhbmQgcHJpdmF0ZSBjYXRlcmluZykgdGhhbiBhIGxvdCBvZiBteSBmcmllbmQgd2VkZGluZyBoYWxscyBhbmQgc29vbyBtdWNoIGJldHRlci4KVGhpcyBpcyBhIHZlcnkgcmVsaWFibGUgYm9va21ha2VyIHRoYXQgb2ZmZXJzIGNvbnNpc3RlbnRseSBnb29kIGZpeGVkIG9kZHMsIHJlYXNvbmFibGUgQXNpYW4gaGFuZGljYXBzLCBhbmQgdGhhdCBhY2NlcHRzIGxhcmdlIGJldHMuIFRoZXJlIG1pZ2h0IGJlIGEgc21hbGxlciBzZWxlY3Rpb24gb2YgZm9vdGJhbGwgbGVhZ3VlcyBjb21wYXJlZCB0byBvdGhlciB0b3AgYm9va21ha2VycywgYnV0IHlvdSBjYW4gZXhwZWN0IGEgaHVnZSBudW1iZXIgb2YgYmV0dGluZyBvcHBvcnR1bml0aWVzIG9uIHNvbWUgb2YgdGhlIG1vc3QgcG9wdWxhciB0b3AgZm9vdGJhbGwgbGVhZ3VlcyBmb3Igc3BvcnRzIGJldHRpbmcsIGluY2x1ZGluZyB0aGUgRW5nbGlzaCBQcmVtaWVyIExlYWd1ZSwgQ2hhbXBpb25zIExlYWd1ZSwgU3BhbmlzaCBMYSBMaWdhIFByaW1lcmEsIEl0YWxpYW4gU2VyaWUgQSBhbmQgR2VybWFuIEJ1bmRlc2xpZ2EuIApJIGZlZWwgbGlrZSBpJ20gcGFydGlhbGx5IHRvIGJsYW1lIGJlY2F1c2UgaSd2ZSBhbHdheXMgdG9sZCB0aGVtIGl0J3MgdGhlIGNoaW5zdHJva2VycyB3aG8gYXJlbid0IHRoZSBtYWluIG1hcmtldCB0aGF0IGNhcmUgYWJvdXQgRkxBQyBhbnl3YXkuSSBsZWdpdGltYXRlbHkgaGF2ZSBubyBpZGVhIHdoZXJlIEkgZXZlbiBnZXQgbXVzaWMgaW4gRkxBQyBmb3JtYXQuIE5vbmUgb2YgbXkgREogcG9vbHMgZG8gaXQgYW5kIGkndmUgbmV2ZXIgZm91bmQgdGhlIG5lZWQgdG8gcGxheSBhbnl0aGluZyBoaWdoZXIgdGhhbiAzMjAgbXAzcyBldmVuIGF0IGJpZyBmZXN0aXZhbHMuIApUaGUgQVUgSHVtYW4gUmVzZWFyY2ggUHJvdGVjdGlvbiBQcm9ncmFtIGlzIHJlc3BvbnNpYmxlIGZvciB0aGUgZXRoaWNhbCBhbmQgcmVndWxhdG9yeSByZXF1aXJlbWVudHMgcmVsYXRlZCB0byB0aGUgcHJvdGVjdGlvbiBvZiBodW1hbiBwYXJ0aWNpcGFudHMgaW4gcmVzZWFyY2guIFRoZSBQcm9ncmFtIGluY2x1ZGVzIHRoZSBJbnN0aXR1dGlvbmFsIE9mZmljaWFsIChWaWNlIFByZXNpZGVudCBmb3IgUmVzZWFyY2gpLCB0aGUgSW5zdGl0dXRpb25hbCBSZXZpZXcgQm9hcmRzIGZvciB0aGUgUHJvdGVjdGlvbiBvZiBIdW1hbiBTdWJqZWN0cyBpbiBSZXNlYXJjaCAoSVJCKSwgYW5kIHRoZSBPZmZpY2Ugb2YgUmVzZWFyY2ggQ29tcGxpYW5jZSAoT1JDKS4gCk9uIHRoZSBtZXRob2RvbG9naWNhbCBzaWRlIG9mIHRoZSBwcm9qZWN0LCB5b3Ugc2hvdWxkIHVuZGVyc3RhbmQgaG93IHRoZSB2YXJpb3VzIG5leHQgZ2VuZXJhdGlvbiBzZXF1ZW5jaW5nIG1ldGhvZHMgd29yaywgc3VjaCBhcyBpbGx1bWluYS4gSXQgd2lsbCBoZWxwIHlvdSBiZXR0ZXIgdW5kZXJzdGFuZCB3aGF0IHRoZSBhY3R1YWwgZGF0YSBpcyB5b3UgYXJlIGxvb2tpbmcgYXQsIGVzcGVjaWFsbHkgdGhlIGZhc3RxIGZpbGVzIHlvdSB3aWxsIGJlIGdldHRpbmcgZnJvbSBzZXF1ZW5jaW5nLgpVbiB0ZW1hIGVzIGRpZmVyZW50ZSwgcG9ycXVlIG5vIHNlIHNpIGxvIHNlcGFzLCB0b2RhdmEgZXN0YSBlbCBkZWJhdGUgZGUgc2kgZXMgY29uc2lkZXJhZG8gdW4gc2VyIGh1bWFubywgbWllbnRyYXMgcXVlIHBvciBlbCBvdHJvIGxhZG8sIHlhIGVsIHNlciBodW1hbm8gdGllbmUgZGVyZWNob3MgdW5pdmVyc2FsZXMuIEFob3JhIGVsIHB1bnRvLCBnZW50ZSBjb21vIHQgZXN0YSBtdXkgYSBsYSBkZWZlbnNpdmEgZGUgbGEgdmlkYSBkZXNkZSBsYSBjb25jZXBjaW4sIHBlcm8geWEgY3VhbmRvIG5hY2VuIGVzIGNhZGEgcXVpZW4gcG9yIHN1IGxhZG8sIHBvciBsbyBxdWUgZXN0byBkZSBsYSAibW9yYWwiIHF1ZSB0cmF0YW4gZGUgcHJlc2VudGFyIG5vbWFzIGRlbm90YSBxdWUgcXVpZXJlbiBtZXRlciBzdXMgaWRlYXMgcmV0cm9ncmFkYXMgeSBubyBzYWJlbiBuYWRhIGRlIGxhIGNhbGlkYWQgZGUgdmlkYS4KVGhpcyBtYXkgc291bmQgcmVhbGx5IHNpbGx5LCBidXQgeW91IHNob3VsZC4gU28gaWYgeW91IHdhbnQgdG8gc2F2ZSBraW5kIHBlb3BsZSwgdGVsbCBzb21lb25lLiBPciBpdCBjb3VsZCBqdXN0IG1lYW4gdGhhdCB3aGF0IGhhcHBlbmVkIGluIHRoaXMgZHJlYW0gd2FzIG1lYW50IHRvIGJlLiAKIkkgaGF2ZSBoYWQgYSBzdXBlciBwb3NpdGl2ZSBleHBlcmllbmNlIHdpdGggUHJFUCBhbmQgaGFkIG5vIHNpZGUgZWZmZWN0cywiIGhlIHNhaWQuICJJdCdzIGEgZmFyIGNyeSBmcm9tIHRoZSAxOTgwcyB3aGVuIGdheSBtZW4gd2VyZSBzY2FyZWQgdG8gaGF2ZSBzZXguIEknbSBpbiBteSBtaWQgNDBzLCBzbyBJIHJlbWVtYmVyIHdoZW4gaXQgd2FzIHNjYXJ5LiB0YWtlbiB0aGUgZmVhciBvdXQgb2Ygc2V4IGFuZCBpdCdzIHRydWUgdGhhdCBzb21lIGd1eXMgaGF2ZSBzdG9wcGVkIHVzaW5nIGNvbmRvbXMsIGJ1dCBjb25kb21zIGFyZSBkZWZpbml0ZWx5IHN0aWxsIGluIHRoZSBtaXguIgpJZiB5b3UgZG8gdmFsdWUgeW91ciBmdXJuaXR1cmUgYW5kIHdhbnQgaXQgdG8gYXJyaXZlIGV4YWN0bHkgYXMgaXQgbGVmdCBJIHJlY29tbWVuZCBlbmdhZ2luZyBhbiBBRlJBKEF1c3RyYWxpYW4gRnVybml0dXJlIFJlbW92ZXJzIEFzc29jaWF0aW9uKSBtZW1iZXIgcmVtb3ZhbGlzdCwgR29vZ2xlIHRoZW0gYW5kIHRoZXkgaGF2ZSBsaW5rcyBvbiB0aGVpciB3ZWJzaXRlLiAKVGhpcyBpcyB3aHkgSSBkb24gZ28gaW4gb24gdGhpcyAiSW4gR2VkbyBXZSBUcnVzdCIgYnVsbHNoaXQuIEhlIGhhZCBhIGhvdCBKdWljZSwgdGhhdCB0b29rIGJhcmVseSBhbnkgYnVpbGRpbmcgYW5kIHRoYXQgd2hhdCBoZSBkb2VzIHdpdGggaGltLiAKUG9rZXIgaXMgYSBnYW1lIHRoYXQgbWF5IHRha2UgYSBkYXkgb3IgeWVhcnMgdG8gbGVhcm4sIGJ1dCBhIGxpZmV0aW1lIHRvIG1hc3Rlci4gVGhlcmUgYXJlIG1hbnkgdmFyaWF0aW9ucyBvZiB0aGUgZ2FtZSwgdGhvdWdoIFRleGFzIEhvbGQnZW0gaXMgdGhlIG1vc3QgcG9wdWxhci4gV2hpbGUgZWFjaCB2YXJpYXRpb24gaGFzIGl0cyBvd24gc2V0IG9mIHJ1bGVzLCB0aGUgYmFzaWNzIG9mIHRoZSBnYW1lIHJlbWFpbiB0aGUgc2FtZS4gUG9rZXIgaXMgYSBnYW1lIG9mIGNoYW5jZSBhbmQgc3RyYXRlZ3kgYXMgd2VsbCBhcyBjbG9zZSBvYnNlcnZhdGlvbi4gSXQgaW52b2x2ZXMgc29tZSBwc3ljaG9sb2d5LCBzdWNoIGFzIHJlYWRpbmcgdGhlIHBsYXllcnMgYXJvdW5kIHlvdSB0byBkZWNpZGUgd2hlbiB0byBmb2xkIG9yIGJsdWZmLCBvciBrbm93aW5nIHdoZW4gdG8gY2FsbCBhbiBvcHBvbmVudCdzIGJsdWZmLiBPbmNlIHlvdSB1bmRlcnN0YW5kIHRoZSBiYXNpYyBydWxlcywgaGFuZHMsIGFuZCB2b2NhYnVsYXJ5IG9mIHRoZSBnYW1lLCBzdGFydCBmb2N1c2luZyBvbiBzdHJhdGVneSBpbiBvcmRlciB0byBtYXN0ZXIgcG9rZXIuCkl0IGlzIHRoZSBvbmx5IGNodXJjaCBpbiB0aGUgU3lub2Qgb2YgdGhlIE5vcnRod2VzdCB0aGF0IGJyb2FkY2FzdHMgaXRzIGVudGlyZSBtb3JuaW5nIHdvcnNoaXAgc2VydmljZS4gCkZvbnRzIGxpa2UgdGhpcywgdGhhdCBsb29rIHNvcnQgb2YgaGFuZHdyaXR0ZW4sIGFyZSB0eXBpY2FsbHkgZWFzaWVyIGZvciBwZW9wbGUgd2l0aCBkeXNsZXhpYSB0byByZWFkLiAKT25seSBtZW1iZXJzIGFuZCB0aGVpciBndWVzdHMgYXJlIGFsbG93ZWQuIEdvbGRlbiBBY2VzIGFsc28gaG9sZHMgcXVhcnRlcmx5IHRvdXJuYW1lbnRzIGF0IENhc2lubyBQcmlkZSBpbiBHb2EsIHdpdGggYW1hemluZyBwcml6ZXMgYXJlIGluIGNhc2ggYW5kIGtpbmQuIApPd2VuIEZvcmQgY2FtZSBvdmVyIHRvIHRoZSBsaXR0bGUgaG91c2UgdGhlIG5leHQgbW9ybmluZyBpbiBhIHN0YXRlIG9mIGdyZWF0IGV4Y2l0ZW1lbnQuIApNaWxlcyBhbmQgQ3lubiBoYWQgZG96ZW5zIG9mIHN1cHBvcnRlcnMgY2hlZXJpbmcgdGhlbSBvbiBpbiB0aGUgYmFsbHJvb20gaG9zdGluZyB0aGUgZXZlbnQgYXQgdGhlIFJpbyBBbGwgU3VpdGUgSG90ZWwgYW5kIENhc2lubyBuZWFyIHRoZSBMYXMgVmVnYXMgU3RyaXAuIApUaGUgY2xpZW50IGRyYXdzIHRoZSBlbmVyZ3kgaGUgbmVlZHMgdG8gaGVhbCBoaW1zZWxmLiBTb21lIHBlb3BsZSB3aG8gcmVjZWl2ZSBSZWlraSBleHBlcmllbmNlIGZlZWxpbmdzIG9mIGVtb3Rpb25hbCByZWxlYXNlLCB3aGljaCBtYXkgaW5jbHVkZSBsYXVnaGluZyBvciBjcnlpbmcuIFRoZSBSZWlraSBwcmFjdGl0aW9uZXIgd2lsbCBtb3ZlIHRvIHRoZSBwYXJ0cyBvZiB0aGUgYm9keSB0aGF0IHNoZSBmZWVscyBpbnR1aXRpdmVseSBkcmF3biB0bywgYW5kIHVzZSB0aGUgZW5lcmd5IGZsb3dpbmcgdGhyb3VnaCBoZXIgb3duIGhhbmRzIHRvIGNoYW5uZWwgZW5lcmd5IGludG8gdGhlIHJlY2lwaWVudCdzIGJvZHkuIApGaW5hbGx5LCBzaGUgaGFzIGEgcXVvdGUgb24gaGVyIGxlZnQgYXJtIHdoaWNoIHRyYW5zbGF0ZXMgYXM6Li4gClJvdGhiYXJ0IHdpdGggYmUgdGhlIGNvbmZlcmVuY2UgbW9kZXJhdG9yLiBDb25mZXJlbmNlIHNwZWFrZXJzIGluY2x1ZGUgRHIuIApDcmFuaW9zYWNyYWwgdGhlcmFweSBpcyBkZXNpZ25lZCB0byBhZGRyZXNzIG5lcnZvdXMgc3lzdGVtIGltYmFsYW5jZXMsIHNheXMgUmFjaGVsIFNjb3R0LCBhIHRoZXJhcGlzdCBhdCBCb3VsZGVyJ3MgQ29sb3JhZG8gQm9keSBXaXNkb20sIHdoaWNoIGFsc28gb2ZmZXJzIHRoZSB0cmVhdG1lbnQuIEEgdGhlcmFwaXN0IG9mdGVuIGhvbGRzIHByZXNzdXJlIG9uIHBvaW50cyBvZiB0aGUgaGVhZCwgc2hvdWxkZXJzIGFuZCBzYWNydW0sIHNoZSBzYXlzLgpBY2FkZW1pY3MgbGl2ZSBsaXZlcyBpc29sYXRlZCBmcm9tIG11Y2ggb2YgdGhlIGRlYmF0ZXMgYW5kIGlzc3VlcyB0aGF0IHN0cnVjdHVyZSB0aGUgd29ybGQgb3V0c2lkZSBvZiBhY2FkZW1lLiBXZSBkb24gcmVhbGx5IHBheSBhcyBtdWNoIGF0dGVudGlvbiBhcyB3ZSBzaG91bGQgdG8gc3BvcnRzLCBwb3AgY3VsdHVyZSwgb3IgZXZlbiBQcmVzaWRlbnRpYWwgZWxlY3Rpb25zLiBNYW55IG9mIHVzIHNwZW5kIG91ciBlbnRpcmUgY2FyZWVycyBjYXVnaHQgdXAgaW4gc2VlbWluZ2x5IGVzb3RlcmljIHF1ZXN0aW9ucyBhYm91dCBob3cgd2Uga25vdyB3aGF0IHdlIGtub3csIG9yLCBhcyBhY2FkZW1pY3MgbGlrZSB0byBzYXksICJlcGlzdGVtb2xvZ3kuIi4gCktpZHMgdG9kYXkuIFdoeSBjYW4gdGhleSBiZSBsaWtlIHdlIHdlcmU/IEdlbmRlcmVkIGluIGV2ZXJ5IHdheT8gT2ggd2FpdCwgd2Ugd2VyZW4gZ2VuZGVyZWQgaW4gZXZlcnkgd2F5LCBidXQgaW5zdGl0dXRpb25zIGxpa2Ugc2Nob29scyB0cmllZCB0byBtYWtlIHVzIGNvbmZvcm0uIApJIGxpa2UgeW91ciB0aGlua2luZyBhYm91dCBpbnRlcmVzdGluZyB0aGluZ3MgdG8gZG8sIEkgbG92ZSB0byBnbyBvdXQgb24gYSBkYXRlIHdpdGggeW91LCBidXQgbG9naXN0aWNzIGFyZSBtb3JlIGltcG9ydGFudCBkZXBlbmRpbmcgb24gd2hhdCB5b3Ugd2FudCB0byBhY2NvbXBsaXNoIHdpdGggdGhpcyBnaXJsLiBTb21ldGhpbmcsIHdoYXRldmVyLCBjbG9zZXIgdG8geW91ciBob3VzZSBvciBhIHBsYWNlIHlvdSBjYW4gZnVjayBsaWtlIGEgbW90ZWwgaXMgYmV0dGVyLiAKVGhlIG11c2N1bGFyIGFuZCBwb3N0dXJhbCBlZmZpY2llbmN5IHdoaWNoIFRhaSBjaGkgcHJvbW90ZXMgZ2F2ZSByaXNlIHRvIG1hbnkgaGVhbHRoIGJlbmVmaXRzLCBhbmQgdGhpcyBpcyB3aGVyZSBUYWkgQ2hpIGdldHMgaXRzIHJlcHV0YXRpb24gYXMgYSBoZWFsdGggYXJ0LiBNYW55IG9mIHRoZSBUYWkgQ2hpIGV4ZXJjaXNlcyBjYW4gYmUgcHJhY3Rpc2VkIHdpdGhvdXQgcmVmZXJlbmNlIHRvIHRoZWlyIG1hcnRpYWwgYXBwbGljYXRpb25zLiBUaGlzIGFzcGVjdCBvZiBUYWkgQ2hpIGlzIGJ5IGZhciB0aGUgbW9zdCBwb3B1bGFyLiAKSXQncyB1c2VkIHRvIGRpc2luZmVjdCBzdXJmYWNlcywgdG9vLCBlc3BlY2lhbGx5IGluIHRoZSBraXRjaGVuIGFuZCBiYXRocm9vbS4gWW91IG1heSBoYXZlIHRyaWVkIGJsZWFjaCB0byByZW1vdmUgbW9sZCBhbmQgbWlsZGV3LiAKMjBMYWNzIEdURC4gCk9uZSBvZiB0aGUgY3JpdGljYWwgcHJvdmlzaW9ucyBvZiB0aGUgMjAxMCBjb21wYWN0LCBnaXZpbmcgdGhlIHRyaWJlIG92ZXIgYmFua2VkIGNhcmQgZ2FtZXMsIHN1Y2ggYXMgYmxhY2tqYWNrLCBleHBpcmVkIGluIDIwMTUuIFRoYXQgc3Bhd25lZCBhIHByb3RyYWN0ZWQgbGVnYWwgYmF0dGxlIGFuZCBwcmV2aW91c2x5IGZ1dGlsZSBhdHRlbXB0cyBieSBsYXdtYWtlcnMgdG8gc2VhbCBhIG5ldyBkZWFsLgpJbiBEZWNlbWJlciBJIGhhZCB0byB0YWtlIGEgY291cGxlIHdlZWtzIG9mZiBkdWUgdG8gc2hpbiBzcGxpbnRzLCBhbmQgaW4gSmFudWFyeSBJIGhhZCBzb21lIGFua2xlIHBhaW4gdGhhdCB3YXMgc29sdmVkIGJ5IHNvbWUgc3VwcG9ydGl2ZSBpbnNlcnRzLiBJdCB3YXMgZ29pbmcgd2VsbCBhbmQgSSB3YXMgZmVlbGluZyBnb29kIGFib3V0IG15IHByb2dyZXNzIHVudGlsIHRoZSBiZWdpbm5pbmcgb2YgRmVicnVhcnksIHdoZW4gSSBmZWx0IG15c2VsZiBlbnRlcmluZyBhIGRlcHJlc3NpdmUgbG93IChJIGhhdmUgYSBtb29kIGRpc29yZGVyIGFuZCB0eXBpY2FsbHkgZm9yIG1lIHRoaXMgY2FuIGxhc3Qgd2Vla3MpLiAKL3IvQXNrSGlzdG9yeSBleGlzdHMsIHNvIGNvbXBsYWluaW5nIGFib3V0IHRoZSBydWxlcyB0byB1cyBpcyBsaWtlIGdvaW5nIGludG8gYSBmYW5jeSByZXN0YXVyYW50IHRvIGNvbXBsYWluIHRoZXkgZG9uIHNlbGwgY2hpY2tlbiBudWdnZXRzLCBldmVuIHRob3VnaCBDaGljayBmaWwgQSBpcyBuZXh0ZG9vci4uIApJIHVuZGVyc3RhbmQgdGhhdCB0aGlzIGV2ZW50IHdpbGwgYmUgbm8gZGlmZmVyZW50LgpJIHdyaXRlIGRvd24gaWRlYXMgaW4gbXkgZ28gdG8gbm90ZWJvb2suIEJ1dCBJIGhhdmVuIGJlZW4gZ29vZCBhdCBhbGwgd2l0aCBqdXN0IHN0YXJ0aW5nIGEgZmxvdywgd2hpY2ggbWVhbnMgc3RhcnRpbmcgd2l0aCBqdXN0IG9uZSBwYWdlLiAKU3RvcmUgYSBtYXAgb2YgcG9zdCBJRCA6IG1ldGFib3QgY29tbWVudCAoSSBkaWQgdGhpcyBpbiByZWRpcyk7IHRoZW4gaW5zdGVhZCBvZiBtYWtpbmcgYSBkdXBsaWNhdGUgY29tbWVudCBmb3IgYSBuZXcgbGluaywgZWRpdCB0aGUgb2xkIGNvbW1lbnQgYW5kIGFwcGVuZCB0aGUgbmV3IGxpbmsgYmVmb3JlIHlvdXIgZm9vdGVyIG1lc3NhZ2UKQmUgc3VyZSB0byByZWFkIHRoZSBwYXkgdGFibGUgYmVmb3JlIHNpdHRpbmcgZG93biB0byBwbGF5LiAKTiBJdHNlZXosIHdoaWNoIGRldmVsb3BzIGNvbXB1dGVyIHZpc2lvbiBzb2Z0d2FyZS4KVGhlbiB5b3UgZ28gdG8gU3VkYW4gYW5kIHRoZXkgd2VyZSBsaWtlIG5haCBicm8sIHlvdSBuZWVkIHRvIHJ1YiBjaGlja2VuIGJsb29kIG9uIHRoYXQgc2hpdCwgeW91IHByb2JhYmx5IHdvdWxkbiB0aGluayB0aGF0IGEgZ29vZCBhcmd1bWVudCBhZ2FpbnN0IGFudGliaW90aWNzLiAKU2hlIGdvdCBwcmV0dHkgc2FkIGFib3V0IGl0LiAKQ29ycHNlUHJvamVjdCAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxMyBkYXlzIGFnbwoiV2hlbiB5b3UncmUgcGxheWluZyBibGFja2phY2ssIHdpdGggZXZlcnkgdGFwIG9uIHRoZSBzaG91bGRlciB5b3Ugd29ycnkgdGhhdCBpdCBjb3VsZCBiZSB0aGUgbGFzdCB0aW1lIHlvdSdyZSBpbiB0aGUgY2FzaW5vLCIgaGUgc2F5cy4gIldoZW4geW91IHNlZSB0aGUgaGVhdCBjb21pbmcsIHlvdSB3YW50IHRvIGdldCBvdXQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4KSXQgc2VlbXMgYXMgdGhvdWdoIHRoZSBhbnRpIGhlcm8gY2FuIG1heCBvdXQgYWxsIGhpcyBzdGF0cyBieSB0aGUgZW5kIG9mIHRoZSBnYW1lLiAKRHVlIHRvIHRoaXMsIHRoZXJlIGlzIGFuIG9uZ29pbmcgZXh0ZW5zaXZlIGVmZm9ydCB0byBlbnN1cmUgdGhhdCBvbmx5IHRoZSBiZXN0IHF1YWxpdHkgbWF0ZXJpYWxzIGFyZSB1c2VkIGluIHRoZXNlIEN1c3RvbSBQb2tlciBDaGlwcy4gUGF1bHNvbiBtYWRlIHN1cmUgdGhhdCBvbmx5IHdvcmxkIGNsYXNzIGNsYXkgd2FzIHVzZWQgaW4gdGhlaXIgZ29yZ2VvdXMgc2V0IG9mIHBva2VyIGNoaXBzLiBJbiBmYWN0LCB0aGUgdmVyeSBjaGlwcyB0aGF0IGFyZSBpbiB0aGUgNTAwIFBhdWxzb24gVG9waGF0IGFuZCBDYW5lIFBva2VyIENoaXAgU2V0IGFyZSBtYWRlIGluIGEgZmFjdG9yeSB0aGF0IGhhcyBtYWRlIHRoZSB2ZXJ5IGNoaXBzIHRoYXQgeW91IHdpbGwgZmluZCBpbiB0aGUgTGFzIFZlZ2FzIENhc2lub3MuCkkgb24gdGhlIGZlbmNlIGFib3V0IGJlaW5nICJvd2VkIiBpdC4gQW4gaW50ZXJlc3QgZnJlZSBsb2FuIGlzIG5vIHNtYWxsIHdhbGsgaW4gdGhlIHBhcmsuIAo5Li4gClRoZSBib2FyZCBvZiB0aGUgQ29sb3JhZG8gRGl2aXNpb24gb2YgUHJpdmF0ZSBPY2N1cGF0aW9uYWwgU2Nob29scyBpbiBlYXJseSBKdW5lIHJlY29tbWVuZGVkIHRoYXQgdGhlIEJvdWxkZXIgQ29sbGVnZSBvZiBNYXNzYWdlIFRoZXJhcHkgc2h1dCBkb3duLCBjaXRpbmcgbnVtZXJvdXMgaXNzdWVzIHdpdGggaXRzIGZpbmFuY2lhbCBoZWFsdGguIERlcGFydG1lbnQgb2YgRWR1Y2F0aW9uIGhhZCBpbmZvcm1lZCB0aGUgc2Nob29sIGluIEphbnVhcnkgdGhhdCBpdCBmYWlsZWQgdG8gbWVldCBmaW5hbmNpYWwgcmVzcG9uc2liaWxpdHkgc3RhbmRhcmRzIHJlcXVpcmVkIG9mIGluc3RpdHV0aW9ucyB0aGF0IGFjY2VzcyBmZWRlcmFsIHN0dWRlbnQgbG9hbiBmdW5kaW5nLiAKRG9lcyBhIHByaXZhdGUgcmVzY3VlIGhhdmUgdGhlIGxlZ2FsIHJpZ2h0IHRvIGhhdmUgYSB0ZW4gcGFnZSBhcHBsaWNhdGlvbiBhbmQgYSAkNjAwIGFkb3B0aW9uIGZlZSBhbmQgYnJhZyB0aGF0IHRoZXkgcmVqZWN0IDc1JSBvZiBhcHBsaWNhbnRzIChhcyBkaWQgYSByZXNjdWUgSSB3b3JrZWQgd2l0aCBvbmNlKT8gU3VyZS4gQnV0IGlmIHRoZXkgY2xhaW0gdGhhdCB0aGVpciBnb2FsIGlzIHRvICJzYXZlIGxpdmVzIiwgdGhlbiB0aGF0IG1ha2VzIHRoZW0gaHlwb2NyaXRlcy4gTW9zdCBwZW9wbGUgbWFrZSBmaW5lIGRvZyBvd25lcnMgd2l0aG91dCBhbGwgdGhlIGdhdGVrZWVwaW5nLiAKMi4gClBlcmZvcm1hbmNlIHByZXNzdXJlcyBvZiBwaHlzaWNhbCBleGhhdXN0aW9uIHdhcyBpbmR1Y2VkIHZpYSBhbiBleGVyY2lzZSBwcm90b2NvbCBjb25zaXN0aW5nIG9mIGludGVydmFscyBvZiBtYXhpbWFsIGV4ZXJ0aW9uIHVuZGVydGFrZW4gb24gYSB3YXR0IGJpa2UuUmVzdWx0czogQXQgYSBncm91cCBsZXZlbCwgdW5kZXIgcGh5c2ljYWwgcHJlc3N1cmUgZWxpdGUgYXRobGV0ZXMgd2VyZSBmYXN0ZXIgdG8gcmVzcG9uZCB0byBjb250cm9sIHRyaWFscyBvbiB0aGUgU3Ryb29wIFRhc2sgYW5kIHRvIHNpbXBsZSBwcm9iYWJpbGlzdGljIGNob2ljZXMgb24gdGhlIENHVC4gUGh5c2ljYWwgcHJlc3N1cmUgd2FzIGFsc28gZm91bmQgdG8gaW5jcmVhc2UgcmlzayB0YWtpbmcgZm9yIGRlY2lzaW9ucyB3aGVyZSBwcm9iYWJpbGl0eSBvdXRjb21lcyB3ZXJlIGV4cGxpY2l0IChvbiB0aGUgQ0dUKSwgYnV0IGRpZCBub3QgYWZmZWN0IHJpc2sgdGFraW5nIHdoZW4gcHJvYmFiaWxpdHkgb3V0Y29tZXMgd2VyZSB1bmtub3duIChvbiB0aGUgQkFSVCkuIAoxIHBvaW50ICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvSSB3b3VsZCBzYXkgZXNzZW50aWFscyBhcmUgY2hlYXBlciBhbmQgbHV4dXJpZXMgYXJlIG1vcmUgZXhzcGVuc2l2ZS4gVGhhdCBzYWlkLCBmb3JnbyB0aGUgYnJhbmQgbmFtZSBhbmQgeW91IGNhbiBnZXQgZ3JlYXQgZGVhbHMgaW4gS29yZWEuIEkgc2VlbiA0ayBUVnMgZm9yIGRpcnQgY2hlYXAgbGlrZSB0aGF0ICJHZW5lc2lzIiBicmFuZCBvciBhbnkgb3RoZXIgb25lIHRoYXQgdXNlcyBsb3dlciBiaW5uZWQgTEcgYW5kIFNhbXN1bmcgcGFuZWxzIGV0Yy5Lb3JlYW5zIGxvdmUgdGhlaXIgYnJhbmRuYW1lcyBhbmQgdGVsbCB0byBsb29rIGRvd24gb24gY2hlYXAgcHJvZHVjdHMgd2hpY2gsIGlyb25pY2FsbHksIGRyaXZlcyB0aGVtIHRvIGEgbG93ZXIgcHJpY2UgaW4gbXkgZXhwZXJpZW5jZS4gClRoZSBBcXVhcml1cyBDYXNpbm8gUmVzb3J0IGZlYXR1cmVzIGEgNTcsMDAwIHNxdWFyZSBmb290IGNhc2lubyBjb21wbGV0ZSB3aXRoIHNsb3QgbWFjaGluZXMsIHZpZGVvIHBva2VyIGFuZCB0YWJsZSBnYW1lcy4gVGhlIHJlc29ydCBib2FzdHMgbW9yZSB0aGFuIDEsOTAwIGhvdGVsIHJvb21zLCBhIHBvb2wsIGZpdG5lc3MgY2VudGVyLCBtb3JlIHRoYW4gZml2ZSBvbiBzaXRlIHJlc3RhdXJhbnRzLCBhbiBvdXRkb29yIGFtcGhpdGhlYXRlciBhbmQgbWVldGluZyBzcGFjZS4gClRoZXkgaGFkIHRvIGVuZCB0aGF0IG1hbmlhIG9yIHJpc2sgYSB3YXZlIG9mIHBlcnNvbmFsIGRlZmF1bHRzLiBUaGUgcG9saWN5IHJhdGUgcmVtYWlucyBiZWxvdyB0aGUgbmV1dHJhbCByYXRlLCB0aGUgc2V0dGluZyBhdCB3aGljaCB0aGUgQmFuayBvZiBDYW5hZGEgZXN0aW1hdGVzIHRoYXQgbW9uZXRhcnkgcG9saWN5IGlzIG5laXRoZXIgZW5jb3VyYWdpbmcgb3IgZGlzY291cmFnaW5nIGJvcnJvd2luZy4gSW4gb3RoZXIgd29yZHMsIG1vbmV5IHN0aWxsIGlzIG9uIHNhbGUsIHNvIGludGVyZXN0IHJhdGVzIGFyZW4ndCB0aGUgcHJvYmxlbS4uIApJIHdhcyByZWFkaW5nIGFib3V0IHNwb25zb3JzaGlwcyBsYXN0IG5pZ2h0IGFuZCBpdCBhcHBlYXJzIHRoYXQgb25seSBDb2x0IGNhbiBiZSBhIHNwb25zb3IgYXQgdGhpcyBwb2ludCBhbmQgSSBrbm93IHRoYXQgaGlzIGFwcGxpY2F0aW9uIGZvciBhIHdpdGhkcmF3YWwgd2FzIGFjY2VwdGVkIGFuZCBtYXJyeWluZyB0aGF0IG90aGVyIGd1eSB3b3VsZG4gd29yay4gU2hlIHdvdWxkIG5lZWQgdG8gcmV0dXJuIHRvIEJyYXppbCBhbmQgc3RhcnQgdGhlIEsxIGFsbCBvdmVyIGFnYWluIGFmdGVyIGEgd2FpdGluZyBwZXJpb2QuIApUaGVzZSB0eXBlcyBvZiBzbG90cyBoYXZlIGEgamFja3BvdCB0b3RhbCB0aGF0IGdyb3dzIGVhY2ggdGltZSB0aGUgbWFjaGluZXMgYXJlIHBsYXllZC4gCkIwTkVSU1RPUk0gIDggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KRGVzcGl0ZSB0aGUgZGVmZWF0IGF0IEFzaGluZ2RvbiwgRWRtdW5kJ3MgYWN0aW9ucyBzaG93ZWQgdGhhdCBFbmdsYW5kIHdhcyBjYXBhYmxlIG9mIHJhaXNpbmcgYW4gYXJteSBhZ2FpbnN0IFZpa2luZyBpbnZhZGVycy4uIApJIHN1cmUgdGhleSBhcmUsIGJ1dCB0aGVpciBlY29ub215IGlzIHN0aWxsIGRvaW5nIGhvcnJpYmxlIHNvIEkgbm90IHN1cmUgaXQgYW1vdW50cyB0byBtdWNoLiBJIGhhdmUgdG8gYXNzdW1lIHRoZXkgaGFkIHNvbWUgcGxhbiB3aGVyZSB0aGVpciBlY29ub215IHdvdWxkIHN0b3Agc3Vja2luZywgd2hpY2ggZG9lcyBub3Qgc2VlbSB0byBiZSB0byBjYXNlLgoiSXQgd2FzIGEgRGhvbmkgc3BlY2lhbCBhbmQgYW4gYW1hemluZyB3aW4sIiBDU0sgY29hY2ggU3RlcGhlbiBGbGVtaW5nIHNhaWQuICJXZSBoYXZlIHNvbWUgcGxheWVycyB3aG8gYXJlIGV4cGVyaWVuY2luZyB0aGlzIGZvciB0aGUgZmlyc3QgdGltZSBpbiBvdXIgc2lkZTsgdGhleSB3ZXJlIGFic29sdXRlbHkgZ29ic21hY2tlZCB0aGUgd2F5IGhlIGZpbmlzaGVkIHRoaXMgZ2FtZS4gVGhhdCBvbmUgc2hvdCBvdmVyIHBvaW50IHRvd2FyZHMgdGhlIGVuZCBvZiB0aGUgaW5uaW5ncyB3YXMgb25lIG9mIHRoZSB0b3AgdGhyZWUgc2hvdHMgSSBoYXZlIGV2ZXIgc2Vlbi4gCkZvcnR1bmF0ZWx5LCB0aGVzZSBwb2tlciBib3RzIG1heSBub3QgYmUgYSB0aHJlYXQgZm9yIGxvbmcuIEJ1dCB5b3UgbWlnaHQgdGhpbmssIHdoeSBzaG91bGQgdGhlc2UgcG9rZXIgcm9vbXMgY2FyZSwgc2luY2UgcG9rZXIgYm90cyBtYWtlIGFzIG11Y2ggbW9uZXkgZm9yIHRoZW0gYXMgcmVhbCBwZW9wbGUgZG8/IFRoZSBhbnN3ZXIgaXMgcmVhbCBwZW9wbGUgZ2V0IHJlc3RsZXNzLiBBdCB0aGUgcmlzayBvZiB0aGVpciByZWFsIGh1bWFuIGN1c3RvbWVycyBib3ljb3R0aW5nIG9ubGluZSBwb2tlciBhbHRvZ2V0aGVyLCB0aGV5IGFyZSBub3cgdGFraW5nIG5vdGljZSBhbmQgYXJlIHRyeWluZyB0byBkbyBzb21ldGhpbmcgYWJvdXQgdGhpcyBncm93aW5nIG1lbmFjZS4KSXQgcG9zc2libGUgdGhhdCB0aGV5IG1heSBoYXZlIHRvIHRha2UgdXAgc29tZSBraW5kIG9mIHBzeWNoaWF0cnkgcm9sZSwgaWYgYSBkZWRpY2F0ZWQgcHN5Y2hpYXRyaXN0IGlzIG5vdCBwcmVzZW50IG9uIHRoZSB0ZWFtLiAKRGVsZXRlX3RoaXNfcG9zdCAgIDIwIHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwooVGhlIHdlc3Rlcm5tb3N0IHN0YXRpb24gb3ZlcmFsbCB3b3VsZCBiZSB0aGUgd2VzdGVybm1vc3Qgc3RhdGlvbiBvbiB0aGUgTWVuZW1lbiBjb21tdXRlciByYWlsIGxpbmUgICBidXQgbm90IE1lbmVtZW4gaXRzZWxmLikuIApKb2ludCBDb21taXNzaW9uZXIgb2YgS29sa2F0YSBQb2xpY2UgKENyaW1lKSBWaXNoYWwgR2FyZyBzYWlkLCAiQWN0aW5nIG9uIGEgY3JlZGlibGUgc291cmNlIGluZm9ybWF0aW9uIGluIHRoZSBpbnRlcnZlbmluZyBuaWdodCBvZiAxMyAxNC8xMCAvMTYsIHJhaWQgd2FzIGNvbmR1Y3RlZCBhdCBJbXBlcmlhbCBDbHViIGF0IENhbWFjIFN0cmVldCBQYW50YWxvb25zIGJ1aWxkaW5nIHdoZXJlaW4gZ2FtYmxpbmcgcmFja2V0IHdhcyBydW5uaW5nIGJlaGluZCBQb2tlciBnYW1lLiAKU28gdGhlIGxhc3QgdGhpbmcgSSBoZWFyZCB3YXMgdGhlIGxpdmUgcG9rZXIgdGFibGVzIHdvdWxkIGJlIGRlbGF5ZWQgYnkgdXAgdG8gdHdvIHllYXJzIGF0IFdvb2RiaW5lLCB0aGV5IG92ZXJlc3RpbWF0ZWQgdGhlaXIgY2FwYWJpbGl0aWVzIHdpdGggdGhlIHJlY2VudCByZW5vdmF0aW9ucy4gUG9rZXIgaXMgbm90IGF0IHRoZSBmb3JlZnJvbnQgb2YgYSBDYXNpbm8gb2ZmZXJpbmdzLCBpdCBzaW1wbHkgZG9lcyBub3QgZ2VuZXJhdGUgYXMgbXVjaCBtb25leSBmb3IgdGhlbSBhcyBvdGhlciBnYW1lcy4gVGhpcyBpcyB0aGUgc2FtZSBzZW50aW1lbnQgdGhhdCBQb3J0IFBlcnJ5IChCbHVlIEhlcm9uKSBzaGFyZXMgYXMgdGhleSBoYXZlIHNpbmNlIHJlbW92ZWQgcG9rZXIgdGFibGVzIGFzIHdlbGwuCkltIGdsYWQgd2hlbiBpIHNlZSBwZW9wbGUgdHJ5aW5nIGRvd25oaWxsLGxhcmdlIGp1bXBzLHRlY2huaWNhbGl0aWVzLiBXb25kZXIgaWYgcGVvcGxlIGFyZSBzdGlsbCBnb25uYSBnZXQgdGhpcyByZXBseSBwZXJzb25hbC4uIApDZW50YXJhIGV4cGFuZGllcnQgaW0gSW5kaXNjaGVuIE96ZWFuClR3byBjb21tb24gc2lnbnMgb2YgaW1wZW5kaW5nIGFjdGlvbiBhcmUgcGFjaW5nIGFuZCBzdGFuZGluZyBvbiB0aGUgYmFsbHMgb2YgdGhlaXIgZmVldC4gTWFueSBhdHRhY2tzIGJlZ2luIHdpdGggYSBwZXJzb24gcGFjaW5nIGJhY2sgYW5kIGZvcnRoIGFuZCB0aGVuIGxhdW5jaGluZyBhbiBhdHRhY2sgYXQgYWJvdXQgdGhlIG1pZHBvaW50OyBtYW55IGZsaWdodHMgb3IgZXNjYXBlcyBiZWdpbiB3aXRoIHRoZSBwZXJzb24gZ2V0dGluZyB1cCBvbiB0aGUgYmFsbHMgb2YgdGhlaXIgZmVldCwgbXVjaCBhcyBhIHJ1bm5lciB3b3VsZCBiZWZvcmUgdGhlIHN0YXJ0aW5nIGd1biBnb2VzIG9mZi4uIApJIHdpc2ggSSBjb3VsZCByZW1lbWJlciB3aGVyZSBJIHJlYWQgdGhpcy8gaGVhcmQgaXQuIApSZWFsaXR5IGhlcmUgaXMgdGhhdCBpbiBtYW55IGNhc2VzIHRob3NlIChiYW5raW5nKSB2ZXN0aWJ1bGVzIGFyZSB0aGUgd2FybWVzdCBzcG90IGFsb25nIHRoZXNlIGNvbW1lcmNpYWwgYXJlYXMgd2hlcmUgb25lIGZpbmRzIGEgcGxhY2UgdG8gY3Jhc2ggZm9yIHRoZSBldmVuaW5nLCBzYWlkIE9yZXN0IEthdG9seWssIGNpdHkgaGFsbCBieWxhdyBlbmZvcmNlbWVudCBib3NzLgpJIGRvbid0IHRoaW5rIHBlb3BsZSByZWFsaXplIGl0J3Mgbm90IGJsb3dvdXQgc3R1ZmYuIFlvdSdyZSBtYW51ZmFjdHVyaW5nIGZvciB0aGVtLiIgRXZlcnkgbWFudWZhY3R1cmVyIEkgc3Bva2UgdG8gc2FpZCB0aGF0IFQuIEouIApBbmQgYWN0dWFsbHkgYXQgbXkgb2xkIGpvYiBteSBzdXBlcnZpc29yIHRvbGQgZXZlcnlvbmUgSSB3YXMgbGVhdmluZyBmb3IgYSAidGVhY2hpbmcgam9iIi4gSSBhdCBhbiBSMSBsYW5kIGdyYW50IGxvbApCaWVuIHF1ZSBwcnNlbnRlcyBlbiB0cnMgZmFpYmxlcyBwcm9wb3J0aW9ucyBkYW5zIHVuIGdyYW5kIG5vbWJyZSBkZSBwbGFudGVzLCBsZXMgY291bWFyaW5lcyAoODUwICAxIDAwMCBjb25udWVzKSBzb250IGRlcyBtb2xjdWxlcyBhcm9tYXRpcXVlcyB0cnMgcHVpc3NhbnRlcywgbGEgdGFpbGxlIG4gaWNpIGF1Y3VuIHJhcHBvcnQgYXZlYyBsZXVyIGVmZmljYWNpdCBjb21tZSBub3VzIGFsbG9ucyBwb3V2b2lyIGxlIGNvbnN0YXRlciBwYXIgbGEgc3VpdGUuIE9uIGxlcyB0cm91dmUgZGFucyBkaWZmcmVudGVzIGZhbWlsbGVzIGJvdGFuaXF1ZXMgOi4gCkEgbWVsbG93IGphenogbWVsb2R5IHBsYXlzLiBUaXRsZSBjYXJkOiBUaGUgS3J1c3R5IHRoZSBDbG93biBTaG93IChvcmlnaW5hbCBhaXJkYXRlOiBGZWJydWFyeSA2IDE5NjEpCkhhdmluZyBwZW9wbGUgYm9ycm93IG1vbmV5L3Bvc3Nlc3Npb25zIHdpdGhvdXQgYXNraW5nIGlzIGEgaGFyZCBuby4gRXZlbiB3aXRoIGFza2luZyBzb21ldGltZXMsIGRlcGVuZGluZyBvbiBob3cgb2Z0ZW4gdGhleSByZWx5IG9uIHlvdSB0byBzYXkgeWVzLiBQaHlzaWNhbGx5IGNhdXNpbmcgeW91IHBhaW4gYXQgYWxsIChub3QgYW4gYWNjaWRlbnQpIGlzIGEgU1RST05HIG5vIGFuZCBwb3RlbnRpYWxseSBhIGNhbGwgdG8gcG9saWNlLiAKRXQgcXVpIGRpdCBsYSBwYWl4IGFwcGVsbGUgbGEgZ3VlcnJlOiBwYXJmb2lzIG1hcnRpZW4sIGxlIGNobmUsIG1vaW5zIHF1ZSBndWVycmllciwgcmVwcnNlbnRlIHN1cnRvdXQgbGVzIGhvbm5ldXJzIG1pbGl0YWlyZXM6IGMgZGVzIGNvdXJvbm5lcyBkZSByYW1lYXV4IGRlIGNobmUgcXVlIHBvcnRhaWVudCBsZXMgaW1wZXJhdG9yZXMgcmVudHJhbnQgdHJpb21waGFudHMgZGFucyBSb21lLiBMZSBjaG5lIGFsbGFpdCBqdXNxdSB0cmUgcHJvdGVjdGV1ciBzdXIgbGVzIGNoYW1wcyBkZSBiYXRhaWxsZTogb24gY3JveWFpdCBsZXMgZmV1aWxsZXMgZGUgY2huZSBjYXBhYmxlcyBkZSBwcm90Z2VyIGZhY2UgYXV4IGFybWVzICBmZXUuIApCeSBkb2luZyB0aGUgc2FtZSB0aGluZyBmb3IgeW91ciBkb2cgICBleGFtaW5pbmcgaGltIGF0IGhvbWUgb24gYSB3ZWVrbHkgYmFzaXMgYW5kIHNjaGVkdWxpbmcgYW4gYW5udWFsIHZldGVyaW5hcnkgZXhhbSBhbmQgdmFjY2luYXRpb25zICAgeW91IGNhbiBuaXAgaGVhbHRoIHByb2JsZW1zIGluIHRoZSBidWQgYW5kIGV2ZW4gZXh0ZW5kIHlvdXIgZG9nJ3MgbGlmZS4uIAooZCkgRGVmaW5pdGlvbnMuIAoiSSB1c2VkIHRoYXQgb24gc3BlY2lhbCB0ZWFtcyBhIGxvdC4gCkkgZ2V0IGpveSBvdXQgb2YgYmVpbmcgbmljZS4gSSBsaXZlIHZlcnkgc2ltcGxlIGFuZCBkbyBub3Qgc3RyaXZlIHRvIG93biBtYW55IHRoaW5ncy4gCkl0IHRvb2sgc2V2ZXJhbCBob3VycyB0byB2ZXJpZnkgdGhlIGlkZW50aXR5IG9mIHRoZSBvd25lciBhbmQgcmV0dXJuIHRoZSBjYXNoLiBIZSB0b29rIEdhbWJvYSdzIGluZm9ybWF0aW9uLCBidXQgZGlkbid0IGltbWVkaWF0ZWx5IGxlYXZlIGEgcmV3YXJkLgpDbGF5IHNpZ2hzIGFuZCBzdGFydHMgdG8gY3J5LiAKVGhhdCB3b3VsZCBpbmNyZWFzZSB0byAkMzQgYSBtb250aCBieSAyMDIzLiBPbmNlIHRoZSBwbGFuIGlzIGZ1bGx5IGltcGxlbWVudGVkLCB0aGUgbWF4aW11bSBhbm51YWwgYmVuZWZpdHMgd2lsbCBpbmNyZWFzZSBieSBhYm91dCBvbmUgdGhpcmQgdG8gJDE3LDQ3OCBmcm9tICQxMywxMTAuLiAKV2l0aCB0aGUgbWlkdGVybSBlbGVjdGlvbnMgYXBwcm9hY2hpbmcgbmV4dCB3ZWVrLCB3ZSBhcmUgYmVpbmcgb2ZmZXJlZCBhbiBpbmNyZWRpYmxlIG9wcG9ydHVuaXR5IHRvIGJyZWFrIGZyb20gdGhlIHJ1dCBvZiBvdXIgY29tZm9ydGFibGUgbGl2ZXMgYW5kIHRha2UgZ29kbHkgYWN0aW9uLiBJdCdzIHRpbWUgZm9yIHVzIHRvIGdldCB1cCwgZ2V0IG91dCBhbmQgdGFrZSBwYXJ0IGluIHdoYXQgR29kIGlzIGNhbGxpbmcgdGhlIGNodXJjaCB0byBkbyBpbiB0aGlzIGNydWNpYWwsIHVucHJlY2VkZW50ZWQgc2Vhc29uLiAKV2hvIE1hZGUgVGhhdCBTdGFuZGluZyBEZXNrCkFjYWRlbWlhKS4uIApXaGlsZSBzcG9ydHNib29rcyBzb21ldGltZXMgYWNjZXB0IHNpeCAgYW5kIHNldmVuIGZpZ3VyZSB3YWdlcnMgb24gZm9vdGJhbGwgZ2FtZXMgYW5kIG90aGVyIHNwb3J0cywgdGhlIGxpbWl0cyBmb3IgdGhlIE9zY2FycyBhcmUgbXVjaCBzbWFsbGVyLiAKQ29uZ3Jlc3NtYW4gU2lsdmVzdHJlIFJleWVzIChEICBUWCksIGlzIENoYWlyIG9mIHRoZSBIb3VzZSBJbnRlbGxpZ2VuY2UgQ29tbWl0dGVlIGFuZCBoZSB3YW50cyBDb25ncmVzcyB0byB0YWtlIHNvbWUgb2YgdGhlIGJsYW1lIGZvciB0aGUgdG9ydHVyZSBvZiBwcmlzb25lcnMuIFRoaXMgd2VlayBoZSBzZW50IGEgbGV0dGVyIHRvIHRoZSBDSUEgc2F5aW5nIHRoYXQgQ29uZ3Jlc3Mgd2FzIGF0IGxlYXN0IHBhcnRpYWxseSB0byBibGFtZSBmb3IgaW50ZXJyb2dhdGlvbiB0ZWNobmlxdWVzIHN1Y2ggYXMgd2F0ZXJib2FyZGluZy4uIApUaHJvdWdob3V0IGhpcyBjYXJlZXIsIGhlIGFsc28gY29tbWl0dGVkIHNpZ25pZmljYW50IHRpbWUgdG8gaGlzIGNvbW11bml0eSwgc2VydmluZyBmb3Igc2V2ZXJhbCB5ZWFycyBhcyBXYXJkZW4gb2YgdGhlIENodXJjaCBvZiB0aGUgSG9seSBTYXZpb3VyLCBhcyBhIG5pbmUgeWVhciBCb2FyZCBNZW1iZXIgKGZpdmUgeWVhcnMgYXMgQ2hhaXJtYW4pIG9mIHRoZSBLaXRjaGVuZXIgICBXYXRlcmxvbyBIb3NwaXRhbCwgYXMgYSBtZW1iZXIgb2YgdGhlIFVuaXZlcnNpdHkgb2YgV2F0ZXJsb28gQWN0dWFyaWFsIFNjaWVuY2UgQWR2aXNvcnkgQm9hcmQgYW5kIGl0cyBGYWN1bHR5IG9mIE1hdGhlbWF0aWNzIFN0cmF0ZWd5IEJvYXJkLiAKSSB0aGluayBCZXJuaWUgbWlzc2VkIGhpcyB3aW5kb3csIHdoaWNoIGZlZWxzIHdlaXJkIHNheWluZyBzaW5jZSBoZSB3YXMgc3VjaCBhIGxvbmcgc2hvdCB0byB3aW4gdGhlIG5vbWluYXRpb24gdHdvIHllYXJzIGFnby4gQmVybmllIDIwMTYgd2FzIGEgYnJlYXRoIG9mIGZyZXNoIGFpciBiZWNhdXNlIG9mIHRoZSBvdXRzaWRlciB5IGNvbnRyYXN0IGhlIHByZXNlbnRlZCB0byBIaWxsYXJ5LCBidXQgbm93IHRoZXJlIGFyZSBvdGhlciBwb3RlbnRpYWwgYW5kIGRlY2xhcmVkIGNhbmRpZGF0ZXMgdGhhdCBvY2N1cHkgdGhhdCBzYW1lIG5pY2hlIGJ1dCBoYXZlIG1vcmUgZXN0YWJsaXNoZWQgcmVjb3JkcywgYSBjbGVhcmVyIHN0b3J5LCBhbmQgbW9yZSBjaGFyaXNtYS4gSSBhbSBub3Qgc3VyZSBoZSB3aWxsIGJlIG1vcmUgcGFsYXRhYmxlIHRoaXMgdGltZSBhcm91bmQgdG8gbWFpbmxpbmUgRGVtb2NyYXRzICB3aGlsZSB0aGUgcGFydHkgaGFzIG1vdmVkIGlkZW9sb2dpY2FsbHkgdG93YXJkcyBoaW0sIHNvbWUgc3RpbGwgaG9sZCBncnVkZ2VzICh1bmp1c3RpZmllZCBvciBub3QpIHRvd2FyZHMgaGltIGZvciBoaXMgYWN0aW9ucyBpbiAyMDE2LiBGb3IgZXhhbXBsZSwgb25lIHNjaWVudGlzdCBJIHdvcmsgd2l0aCBkaXNsaWtlcyBCZXJuaWUgZm9yIHRha2luZyBhIGZldyB3ZWVrcyB0byBjb25jZWRlIGFmdGVyIGl0IHdhcyBtYXRoZW1hdGljYWxseSBpbXBvc3NpYmxlIGZvciBoaW0gdG8gd2luIHRoZSBub21pbmF0aW9uLiBTZW5hdG9yIFNhbmRlcnMgd2lsbCBhbHNvIHByb2JhYmx5IGNvbnRpbnVlIHRvIHN0cnVnZ2xlIHRvIHJlYWNoIG1pbm9yaXR5IHZvdGVycy4gRGVzcGl0ZSBoaXMgZXhjZWxsZW50IHJlY29yZCBvbiBjaXZpbCByaWdodHMsIEkgc2VlIG5vIHNpZ25pZmljYW50IG1vdmVtZW50IG9mIG1pbm9yaXRpZXMgdG93YXJkcyBoaXMgY2FtcC4KWXVwIHRoYXRzIHdoYXQgSSB0cnlpbmcgdG8gZG8uIHRoZSBnYW1lIEkgbWFraW5nIGl0IGZvciBoYXMgYSBzdWdnZXN0ZWQgcG9seSBjb3VudCBvZiAxMCwwMDAgc28gSSBqdXN0IHRyeWluZyB0byBnZXQgd2hhdCBpcyBhYnNvbHV0ZWx5IG5lY2Vzc2FyeSBmb3IgdGhlIG1haW4gbG9jby4gdGhlIGxvd2VyIHRoZSBjb3VudCB0aGUgYmV0dGVyIGluIG15IG9waW5pb24uIFN1YmRpdmlkaW5nIHN0aWxsIGNyZWF0ZXMgYSBoaWdoZXIgcG9seSB0aG91Z2ggZG9lc24gaXQ/ClZ1bG5lcmFibGUgcGVvcGxlIGdldCBzdWNrZWQgaW4gdG9vLCBsb25lbGluZXNzIGNhbiBlYXQgYXdheSBhdCBwZW9wbGUgc28gbXVjaCB0aGF0IEkgdGhpbmsgdGhleSB3b3VsZCBzb21ldGltZXMgcmF0aGVyIGp1c3QgbGl2ZSB3aXRoIHRoZSBsaWVzIGJlY2F1c2UgaW4gdGhpcyBmYW50YXN5IHRoZXkgaGF2ZSBidWlsZCBpcyBjb21mb3J0LCBpbiB0aGlzIGZhbnRhc3kgdGhleSBhcmUgc2FmZS4gQnV0IE5ldidzIHN0b3J5IHJlYWxseSBzaG93Y2FzZXMgaG93IGZhciBsZWZ0IHRoaW5ncyBjYW4gZ28gYW5kIGhvdyBiZWZvcmUgeW91IGtub3cgeW91IGFyZSBiYXJpbmcgeW91ciB2ZXJ5IHNvdWwgdG8gYSBjb21wbGV0ZSBhbmQgdXR0ZXIgc3RyYW5nZXIgd2hvIHlvdSBmZWVsIGxpa2UgeW91IGtub3cgICBldmVuIGlmIHlvdSBmZWVsIGxpa2UgeW91IGRvLiAKTm90IDEwIG1pbnV0ZXMgbGF0ZXIgc2hlIGNhbWUgdHJvdHRpbmcgaW4gd2l0aCBhIGJpcmQuIApUaGVyZSB3aWxsIGFsc28gYmUgYSBiaWcgaW50ZXJuYXRpb25hbCBjb250aW5nZW50IGhlYWRpbmcgdG8gR2Fsd2F5IGluIHNlYXJjaCBvZiB2aWN0b3J5IGluY2x1ZGluZyBvZiBQb2tlciBNaWtlIFNleHRvbiwgS2VubmEgSmFtZXMsIERhdmUgVWxsaW90dCwgQmVuamFtaW4gS2FuZywgU3VyaW5kZXIgU3VuYXIsIE1hZCBXaWxzb24sIE1pY2tleSBXZXJuaWNrLCBBbGFuIFZpbnNvbiBhbmQgMjAwOCBJcmlzaCBPcGVuIGNoYW1waW9uIE5laWwgQ2hhbm5pbmcuIEZyYW5jZSB3aWxsIGJlIHJlcHJlc2VudGVkIGJ5IENsYXVkZSBDb2hlbiBhbmQgVmVyb25pcXVlIEdvdXJkb24sIHdoaWxlIFNwYWluIGNoYWxsZW5nZSBpcyBsZWQgYnkgTGVvIE1hcmdldHMgYW5kIFBhcnR5UG9rZXIgV29tZW4gV29ybGQgT3BlbiBJSSBzdGFyIE1heSBNYWNlaXJhcy4KTG9jYWwgTWFsaWFucywgc2ltaWxhciB0byB0aGVpciBjb3VudGVycGFydHMgaW4gbWFueSBvdGhlciBmcmFuY29waG9uZSBBZnJpY2FuIGNvdW50cmllcywgd2VyZSBhbHJlYWR5IGZvbGxvd2luZyBGcmVuY2ggcmFjZXMgYW5kIHBsYWNpbmcgYmV0cyB0aHJvdWdoIGxvY2FsIG9wZXJhdG9ycywgc28gUE1VIHdhcyBhYmxlIHRvIGJlbmVmaXQgZnJvbSB0aGUgdmVzdGlnZXMgb2YgYSBjb2xvbmlhbCBwYXN0aW1lIHRvIG9yZ2FuaXplIGEgcHJldmlvdXNseSB1bnN0cnVjdHVyZWQgbWFya2V0IGJ5IG9mZmVyaW5nIGFuIG9mZmljaWFsIGFncmVlbWVudCB0byBwcm92aWRlIEZyZW5jaCBob3JzZSByYWNlIGJldHRpbmcuIFNvdXRoIEFtZXJpY2FuIGFuZCBBc2lhbiByYWNlcyBwcmVzZW50IGFuIGludGVyZXN0aW5nIGFsdGVybmF0aXZlIHRvIEZyZW5jaCByYWNpbmcgZm9yIEV1cm9wZWFuIGJldHRvcnMgZHVlIHRvIHRpbWUgZGlmZmVyZW5jZXMgYW5kIG9wcG9zaW5nIHNlYXNvbnMuIEFyZ2VudGluZWFuIHJhY2VzLCBmb3IgZXhhbXBsZSwgY291bGQgYmUgb2ZmZXJlZCBkdXJpbmcgdGhlIGxhdGUgZXZlbmluZyBhbmQgaW4gdGhlIHdpbnRlciBpbiBGcmFuY2UsIHdoZW4gbG9jYWwgcmFjZXMgbWF5IG5vdCBiZSBhdmFpbGFibGUuLiAKNCBkYXlzIGFnbwpIZXksIGxldCBnZXQgaXQgc3RhcnRlZCBub3csIGJlY2F1c2UgeW91IGtub3cgaXQgY29taW5nOiBUaGUgUm9uIEFydGVzdCBXYXJyaW9yIFRyYWRlIFJ1bW9ycyEgVGhlIGRlYmF0ZSEgVGhlIHJhZ2UhIFRoZSBkZWxpYmVyYXRpb25zISBUaGUgZnVyeSAobW9zdGx5IGF0IG1lIGZvciBzdGFydGluZyBpdCkhCjQuIEhpcyBiYWlsIHdhcyBzZXQgYXQgJDExMywwMDAgb24gU2VwdC4gCk5vdC4gZXZlcnl0aGluZyBvbGQgaXMgbmV3IGFnYWluLiBpcyBiZWluZyByZSByZWxlYXNlZCBmb3IgZG9ja3NpZGVyIHdlYXJpbmcsIHBpbmsgYW5kIGdyZWVuIFBvbG8gc3BvcnRpbmcgd2FubmFiZXMgZXZlcnl3aGVyZS4gd2l0aCB0aGUgVGlnZXIgV29vZHMgYWR1bHRlcnkgbyByYW1hLCB3ZSBnZXQgdGhlIGJhZCBzY2llbmNlIG9mICJmaW5nZXIgbGVuZ3RoIiBvbmNlIGFnYWluIGRyZWRnZWQgdXAgYnkgcHN5Y2hpYXRyaXN0cyBhcyB0aGUgZXhwbGFuYXRpb24gZm9yIHNleHVhbCBkZXNpcmVzLgpWRVJZIHNob3J0bHkgYWZ0ZXIgdGhhdCwgd2l0aG91dCBhbnlvbmUgY29udGFjdGluZyBtZSBwcml2YXRlbHksIGEgbmV3IHJ1bGUgd2FzIHBvc3RlZCBpbiB0aGUgcHJpdmF0ZSBncm91cC4gV09NRU4gKGluIGFsbCBjYXBzKSB3b3VsZCBvbmx5IGJlIGFsbG93ZWQgb25jZSBhIG1vbnRoLgpFbiAyMDA1IChsb2kgZHUgMjAgbWFpIDIwMDUpLCBsZSBsZ2lzbGF0ZXVyIHRyYW5zZm9ybWUgbCdBdXRvcml0IGRlIFJndWxhdGlvbiBkZXMgVGxjb21tdW5pY2F0aW9ucyAoQVJUKSBjcmUgcGFyIGxhIGxvaSBkZSAxOTk2IHBvdXIgcmd1bGVyIGxlIHNlY3RldXIgZGVzIHRsY29tbXVuaWNhdGlvbnMgOyBlbiBBdXRvcml0IGRlIFJndWxhdGlvbiBkZXMgQ29tbXVuaWNhdGlvbnMgbGVjdHJvbmlxdWVzIGV0IGRlcyBQb3N0ZXMgKEFSQ0VQKSBwb3VyIHF1ZSBjZXR0ZSBhdXRvcml0IHJndWxlIGxlcyBhY3Rpdml0cyBwb3N0YWxlcy4gCkkgYmFzaWNhbGx5IG5ldmVyIHdlYXIgaGVhZHBob25lcy4gClRoZWlyIG1haW4gZ29hbCBpcyB0byBzdG9wIHRoZSBzcHJlYWQgb2YgdGhlIGZpcmUgdG8gb3RoZXIgc3RydWN0dXJlcyBhbmQgbWFrZSBzdXJlIHRoYXQgY3JhbmUgZG9lc24gY29sbGFwc2UuIApZb3UgYXJlIHJpZ2h0IGFib3V0IHRoZSBsb2NrcyBhbmQgdGhlIHdpbmRvd3MgYW5kIHRoZSBkcnl3YWxsLiAKRm9yIGV4YW1wbGUgaWYgeW91IHdhbnRlZCB0byB1c2UgL3Bvc3QvOnNsdWcsIE5leHQgd291bGQgaGF2ZSBubyB3YXkgb2Yga25vd2luZyB5b3Ugd2FudCB0byByZW5kZXIgdGhlIGJsb2cgcGFnZS4uIApTb21lb25lIHdpdGggYSBxdWVzdGlvbmFibGUgY29uc2NpZW5jZSBjb3VsZCBkbyBleGFjdGx5IHdoYXQgeW91IGRvLCBidXQgZm9yIGEgbXVjaCBsb3dlciBwcmljZTsgc28gcGVvcGxlIHZvdGUgd2l0aCB0aGVpciB3YWxsZXRzLi4gCkluIHRoZSBzdW1tZXIgbXkgZ29hbCBpcyB0byBOT1QgdGFuIGF0IGFsbC4gV2VsbCwgSSBmYWlyIHNvIEkgbmV2ZXIgdGFuIGFueXdheSAgSSBqdXN0IGJ1cm4gYW5kIGdldCByZWQuIFNvIG15IGdvYWwgaXMgdG8gbm90IGJ1cm4gYW5kIGNvbnRyaWJ1dGUgdG8gYW55IGZ1cnRoZXIgc2tpbiBkYW1hZ2UhCkhlcmUncyB3aGF0IGhhcHBlbmVkLgpNZXRob2RzIEFuYWx5c2lzIG9mIGxlYWtlZCBUSSBkb2N1bWVudHMgYW5kIHB1YmxpY2x5IGF2YWlsYWJsZSBkYXRhOyAsaW52ZXN0aWdhdGlvbiBvZiBmcm9udCBncm91cHMsIHRyYWRlbWFyayBhbmQgcGF0ZW50IG93bmVyc2hpcC4KYW5kIGZvdXIgb3RoZXIgbXl0aHMgYWJvdXQgdGhlIHNpbmdlcgpBbmQgd2hpbGUgd2UgYXQgaXQsIEFtZXJpY2FuIEVuZ2xpc2ggYWxzbyBoYXMgbmFzYWwgdm93ZWxzIHRvbyB0aGUgdm93ZWwgaW4gc291bmRzIHJhdGhlciBkaWZmZXJlbnQgZnJvbSB0aGUgdm93ZWwgaW4gZXZlbiB0aG91Z2ggYm90aCBiZWxvbmcgdG8gdGhlIHNhbWUgcGhvbmVtZSAvLyBidXQgdGhhdCBub3QgdmVyeSBtdWNoIGhlbHAgZm9yIEFtZXJpY2FuIEVuZ2xpc2ggc3BlYWtlcnMgbGVhcm5pbmcgdGhlIG9yYWwgbmFzYWwgcGhvbmVtaWMgY29udHJhc3QgaW4gdm93ZWxzLiAKSSByZWNvbW1lbmQgYm90aC4gClRoZSBLb3JlYW4gdmVyc2lvbiBvZiBDb25mdWNpYW5pc20gaXMgYSBsaXR0bGUgb2RkIGF0IHRpbWVzLiBJZiB5b3UgYm9zcyBhc2tzIHlvdSB0byBkbyBzb21ldGhpbmcsIHRoZW4gaXQgaXMgZXhwZWN0ZWQgeW91IHdpbGwgZG8gaXQuIFRoYXQgaXMgdGhlIHkgd2F5IHRoaW5ncyB3b3JrLiAKU2FnZW1vb24gdQpJZiB5b3Ugd2FudCB0byB0cmFpbiB5b3Vyc2VsZiBmb3IgZnJpZW5kbHkgaG9tZSBnYW1lcywgdGhlbiBnbyBmb3IgaXQuIApMLiBXb2xmLCBhbiBlbGVjdHJpY2lhbiBhbmQgYW1hdGV1ciBhcnRpc3Q7IGl0IHdhcyBvbmUgb2YgdGhlaXIgcHJvdWRlc3QgcG9zc2Vzc2lvbnMuIApBbGwgc3R1ZGVudHMgaW4gdGhlIG1hcmtldGluZyBjbGluaWMgSSBkaXJlY3QgYXQgYSBsb2NhbCB1bml2ZXJzaXR5IE1VU1QgaGF2ZSB0aGlzIGNlcnRpZmljYXRpb24sIHdoaWNoIG1hbnkgZW1wbG95ZXJzIHJlcXVpcmUgZHVyaW5nIHRyYWluaW5nIChtYWlubHkgZGlnaXRhbCBtYXJrZXRpbmcgYWdlbmNpZXMpLi4gClRoZXkganVzdCBraW5kIG9mIGhhdmUgdHdvIGV4YW1wbGVzIG9mIGhvdyBpdCBwbGF5cyBvdXQgd2l0aCBhIEJHUyB0aXRsZS4gVGhvc2UgZXhhbXBsZXMgYXJlIEZhbGxvdXQgNCBhbmQgRmFsbG91dCA3Ni4gCkZyb20gaGVscGluZyB0aGUgaG9tZWxlc3MgdG8gcGxhbnRpbmcgY29tbXVuaXR5IGdhcmRlbnMsIHRoZSBteXJpYWQgb2Ygd2F5cyB0aGF0IEJydWlucyBtYWtlIGEgZGlmZmVyZW5jZSBpcyBhcyBkaXZlcnNlIGFzIHRoZSBiYWNrZ3JvdW5kcyBvZiB0aGUgdm9sdW50ZWVycyB0aGVtc2VsdmVzLi4gCklmIENXIHdhcyBhIHBzeWNob3BhdGgsIGhlIHdvdWxkIG5vdCBmZWVsIGFueSByZW1vcnNlIGluIHNpbXBseSBhYmFuZG9uaW5nIENXIGFuZCB0aGUga2lkcy4uIApUaGVzZSBwcm9kdWN0cyBhcmUgc3ViamVjdCB0byBtYXhpbXVtIHNhZmV0eSBhcyB0aGV5IGNvdWxkIGV2ZXIgdGhpbmsgb2YgcHJvdmlkaW5nLiAKVGhpcyBoZXJhbGRzIDQgZ29sZCBicmFjZWxldHMgdG8gTGlzYW5kcm8ncyBjcmVkaXQuIApPbnN0YWdlIHRoZSB3aG9sZSB0aW1lIHdpdGhvdXQgYSBicmVhay4gCk1PU0VSIGhhcyBiZWVuIGFyb3VuZCBsb25nIGVub3VnaCB0byBoYXZlIHNlZW4gdGhlIG9yaWdpbmFsIFJhbW9uZXMgaW4gYSBzbWFsbCBjbHViIGluIE5ldyBKZXJzZXksIFUyIGZyb20gdGhlIGZvdXJ0aCByb3cgb2YgYSB0aGVhdGVyIGFuZCBCb2IgRHlsYW4ncyBib3JuIGFnYWluIHRvdXJzLiBCdXQgaGUgYWxzbyBoYXMgdGhlIG51bWJlciBmb3IgQWxsIEFtZXJpY2FuIFJlamVjdHMnIE5pY2sgV2hlZWxlciBvbiBoaXMgY2VsbCBwaG9uZSwgd3JvdGUgdGhlIGZpcnN0IHN0b3J5IGV2ZXIgZG9uZSBvbiBKYWNrJ3MgTWFubmVxdWluIGFuZCBodW5nIG91dCBpbiBXaXogS2hhbGlmYSdzIGhvdGVsIHJvb20uLiAKQnJvd24gd2FzIGFibGUgdG8gaWRlbnRpZnkgYWJvdXQgODAgcG9zc2libGUgdmljdGltcywgbm93IGluIHRoZWlyIGxhdGUgMjBzIGFuZCBlYXJseSAzMHMuIApJIHVuZGVyc3RhbmQgeW91ciBkaWxlbW1hLiBNeSBzb24gaXMgc2Vuc2l0aXZlIGFuZCBzb21ldGltZXMgbWFyZ2luYWxpemVkIGFuZCBwaWNrZWQgb24uIE5vdCByZWFsbHkgYmFkIG9yIHRlcm1pbmFsbHkuIEJ1dCBpdCBjYW4gYnVpbGQgdXAuCk5vdCB0byBtZW50aW9uIHdhdGNoaW5nIHNvbWVvbmUgZGllIGlzIGEgdHJhdW1hdGljIGV4cGVyaWVuY2UsIGFuZCBraWxsaW5nIHNvbWVvbmUgeW91cnNlbGYgaXMgMTB4IHdvcnNlLCByZWdhcmRsZXNzIG9mIHdoYXQgdGhleSBkaWQgdG8gImRlc2VydmUgaXQuIiBUaGF0IHdoeSBQVFNEIGlzIHN1Y2ggYW4gaXNzdWUgd2l0aCBzb2xkaWVycyBldmVuIHdoZW4gdGhleSBvbmx5IGNvbW1pdHRlZCBqdXN0aWZpZWQga2lsbGluZyBpbiBhIHdhcnpvbmUuIExvdHMgb2Yga2V5Ym9hcmQgd2FycmlvcnMgYW5kIGFybWNoYWlyIHJlZmVyZWVzIHdhbnQgdG8gcHJldGVuZCBsaWtlIHRoZXkgd291bGRuIGJlIHN1YmplY3QgdG8gdGhhdCwgZXZlbiB0aG91Z2ggdGhleSBuZXZlciBiZWVuIGluIGEgc2l0dWF0aW9uIG1vcmUgc3RyZXNzZnVsIHRoYW4gbW9tIHRha2luZyB0aGUgWGJveCBhd2F5Li4gCk9idmlvdXNseSwgdGhlIG1vcmUgeW91IGludmVzdCwgdGhlIG1vcmUgeW91IHdpbGwgZ2V0IG91dCBvZiB5b3VyIGdhbWJsaW5nIHRpbWUsIHRoZXJlZm9yZSB5b3Ugc2hvdWxkIG5vdCBiZSBhZnJhaWQgdG8gdHVybiBvbiB0aGUgaGVhdC4gClNlZWluZyBhcyB0aGV5IGFyZWFsbCBvd25lZCBieSB0aGUgc2FtZSBjb21wYW55LCBpdCBzaG91bGQgY29tZSBhcyBubyBzdXJwcmlzZSB0aGF0IEFya2UsSmV0YWlyZmx5IGFuZCBUaG9tc29uIEFpcndheXMgaGF2ZSBpZGVudGljYWwgbGl2ZXJpZXMsIGFsYmVpdCB3aXRoIGRpZmZlcmVudCBicmFuZGluZy4gSSBsaWtlIHRoaXMgbGl2ZXJ5IGEgbG90OyBpdCBsb29rcyB2ZXJ5IHNtYXJ0LCBidXQgbm90IG92ZXJiZWFyaW5nLiBUaGUgc2FtZSBjb3VsZCBiZSBzYWlkIG9mIEpldHN0YXIgc2lsdmVyIGFuZCBvcmFuZ2UgbGl2ZXJ5LiAKWW91IGFzayBob3cgaXMgc3RyZWFtaW5nL2Rvd25sb2FkaW5nIGJlbmVmaWNpYWwgdG8gcHJvZ3Jlc3MgaWYgaXRzIG9ubHkgYmVuZWZpY2lhbCB0byB0aGUgY29uc3VtZXIuIDEuKSBTdHJlYW1pbmcgYW5kIGRvd25sb2FkaW5nIChBS0EgZmlsZSBzaGFyaW5nL3RvcnJlbnRpbmcvcGlyYXRpbmcpIGFyZSB0d28gZGlmZmVyZW50IHRoaW5ncy4gUGVyc29uYWxseSBhcyBhIG11c2ljaWFuIEkgdGhpbmsgc2VsbGluZyB5b3VyIG11c2ljIHRvIHN0cmVhbWluZyBzaXRlcyBpcyBhIGJhZCBkZWFsIGlmIHlvdXIgZ29hbCBpcyB0byBnZXQgcmljaCBidXQgYXBhcnQgZnJvbSB0aGF0IHRoZXkgYm90aCBzZXJ2ZSB0aGUgc2FtZSBwdXJwb3NlOiBleHBvc3VyZSBmb3IgdGhlIGFydGlzdCB3aGljaCBpbiB0dXJuIG1ha2VzIHRoZW0gbW9yZSBwb3B1bGFyIGFuZCBpbmNyZWFzZXMgY29uY2VydCByZXZlbnVlLiBCdXQgZnJhbmtseSBpZiB5b3VyZSBqdXN0IGV4cHJlc3NpbmcgeW91cnNlbGYgdmlhIG11c2ljIGFuZCB0b25zIG9mIHBwbCB0b3JyZW50ZWQgeW91ciBhcnQgYW5kIHlvdSBlbmQgdXAgd2l0aCBhIGxvdCBvZiBmYW1lIGFuZCBwcmFpc2UgKGFzIGEgcG9ldCBhbnl3YXlzKSB0aGF0IHdvdWxkIGJlIGFtYXppbmcgdG8gbWUuClRvIHBsYXkgdGhyZWUgY2FyZCBwb2tlciB5b3UgaGF2ZSB0d28gbW9kZXMgb2YgcGxheS4gVGhlcmUgaXMgd2hhdCBpcyBjYWxsZWQgdGhlIEFOVEUgd2FnZXIgYW5kIHRoZSBQTEFZIHdhZ2VyLiBCb3RoIHdhZ2VycyBhcmUgbWFkZSBpbiBjb21wZXRpdGlvbiBvbiB0aGUgcGxheWVyJ3MgaGFuZCB2ZXJzdXMgdGhlIGRlYWxlcnMgY2FyZHMuIFRoZXJlIGlzIGFub3RoZXIgdHlwZSBvZiB3YWdlciBjYWxsZWQgdGhlIFBBSVIgUExVUyB3YWdlciwgd2hpY2ggaXMgcGFpZCBvbiBhIHBheW1lbnQgbW9kZSBiYXNpcyB0aGF0IGNvbnRhaW4gYSBwYWlyIG9yICAgZXZlbiBiZXR0ZXIgICAzIGNhcmRzIG9mIHRoZSBzYW1lIHZhbHVlLiBTb21lIGxhbmQgYmFzZWQgYW5kIG9ubGluZSBjYXNpbm9zIG9mZmVyIEFudGUgYW5kIFBhaXIgUGx1cyBhcyBhbiBvcHRpb25hbCB3YWdlciwgd2hpbGUgc29tZSBlc3RhYmxpc2htZW50cyBkZWVtIEFudGUgd2FnZXIgYXMgYSBjb21wdWxzb3J5L21hbmRhdG9yeSB3YWdlci4KSSBzZWUgbXlzZWxmIGluIHdoYXQgeW91IHdyaXR0ZW4uIEEgbG90IG9mIHRpbWUsIEkgd29ycmllZCBhYm91dCAic2xpcHBpbmcgdXAiLiBMaWtlIHdoZW4gbXkgbWFsZSBmcmllbmRzIGFyZSB0YWxraW5nIGFib3V0IHRoZWlyIGZlbWFsZSBjcnVzaGVzIG9yIGNlbGVicml0aWVzIHRoZXkgZmluZCBob3QsIEkgZmVlbCBwYW5pY2t5IGFuZCBhcyBpZiB0aGV5IHNlZSByaWdodCB0aHJvdWdoIG1lIGlmIEkgbGllIGFib3V0IGxpa2luZyB0aGlzIG9yIHRoYXQgZ2lybC4uIApQcm9tb3Rpb24gYXJlIGNsb3NlZCBhbmQgdGhlIG5hdHVyZSBvZiB0aGVpciBkZWNpc2lvbiBtYWtpbmcgaXMgYmV0d2VlbiB0aGVtIGFuZCB0aGVpciBnb2RzLiBBIGNvbGxlZ2UgcHJlc2lkZW50LCBhcyBEci4gQmlzaG9wIHNlZW1zIHRvIGhhdmUgZG9uZSwgYW5kIGFsbCBvZiBhIHN1ZGRlbiBhbGwgdGhhdCAic3VjY2VzcyIgaW4geW91ciBmaWVsZCBjYW4gbWVhbiBub3RoaW5nIGFtb25nIHRoZSBwcm9tb3Rpb24gY29tbWl0dGVlIG1lbWJlcnMgKG9uIHRoZSBvdGhlciBoYW5kLCBtYWtlIHRoZSBjb2xsZWdlIHByZXNpZGVudCBoYXBweSwgYW5kIHlvdSBtaWdodCBnZXQgdGVudXJlIHdpdGhvdXQgdGhlIGxhcmdlIHJlc2VhcmNoIGdyYW50cyB0aGF0IERyLiAKU3VwcmVtZSBDb3VydCBKdXN0aWNlIEFudG9uaW4gU2NhbGlhIHNwZWFrcyB0byBQcmVzYnl0ZXJpYW4gQ2hyaXN0aWFuIEhpZ2ggU2Nob29sIHN0dWRlbnQuIApQYXJjZSBxdSB2ZXV0IG9idGVuaXIgdW4gbWFzc2FnZSBxdWF0cmUgbWFpbnMuIApJdCBpcyAxIGluIDE3LiBIZXJlJ3Mgd2h5OiBUaGVyZSBhcmUgNTIgY2FyZHMgaW4gYSBkZWNrLCAxMyBkaWZmZXJlbnQgdmFsdWUgY2FyZHMgKEEsIDIsIDMsIGV0Yy4pLCBhbmQgdHdvIGNhcmRzIGFyZSBkZWFsdC4gV2UncmUgZmluZGluZyB0aGUgb2RkcyBvZiBnZXR0aW5nIGFueSBwb2NrZXQgcGFpciwgbm90IGp1c3Qgb25lLiAKWWVsbG93c3R1ZmYgdQpLaGxvZSBLYXJkYXNoaWFuIGFuZCBLZW5kYWxsIEplbm5lciBoYXZlIHNvbWUgdGhvdWdodHMgb24gS2ltIEthcmRhc2hpYW4ncyBuZXcgZmlndXJlLgpJbiBwYXJ0aWN1bGFyLCBNYWRzZW4gZXQgYWwgKDIwMTcpIHN0YXRlZENJSCBpcyBiZWluZyBpbnZlc3RpZ2F0ZWQgYXMgYSBub25kcnVnLCBub25zdXJnaWNhbCBtZXRob2QgdG8gbWFuYWdlIHRoZSAicG9seXRyYXVtYSB0cmlhZCIgb2YgY2hyb25pYyBwYWluLCB0cmF1bWF0aWMgYnJhaW4gaW5qdXJ5LCBhbmQgUFRTIGFtb25nIGluZGl2aWR1YWxzIGluIHRoZSBNaWxpdGFyeSBIZWFsdGggU3lzdGVtLi4gClRoZSA5MCBJbmNoIFRleGFzIEhvbGRlbSBQb2tlciBUYWJsZSBXaXRoIFJhY2V3YXkgaXMgYSBiZWF1dGlmdWwgRm9sZGFibGUgUG9rZXIgVGFibGUgdG8gYWRkIHRvIGFueSBnYW1lIHJvb20uIApZb3Ugbm90ICJjaGVhdGluZyIgdGhlIHN5c3RlbSwgeW91IHVzaW5nIHRoZSBydWxlcywgYXMgdGhleSBhcmUsIHRvIHdpbi4gCkkgd2FzIHNpdHRpbmcgYXQgYSB0YWJsZSBpbiB0aGUgbGl2aW5nIHJvb20gd2hlbiBJIGNvdWxkIHNlZSB0aGVpciBjYXJzIGNvbWUgZG93biB0aGUgZHJpdmV3YXkuIApQcmVtaXJlIGNvbnNxdWVuY2UgaW1tZGlhdGU6IGxhIHBhbmlxdWUgc3VyIGxlIG1hcmNoIGR1IHRyYXZhaWwgZGVzIHRyYWRlcnMgZXQgbGEgZGltaW51dGlvbiBkZSBsZXVyIGNvbnNpZHJhYmxlIHBvdXZvaXIgZCdhY2hhdC4gIkxlcyBjaG9zZXMgb250IGNoYW5nIGRlcHVpcyBsJ3QgZGVybmllciIsIHRtb2lnbmUgWWFubiBILiwgdHJhZGVyIGcgZGUgMjYgYW5zLCBpbnRlcnJvZyBzdXIgbGUgc2l0ZSBkZXMgT2JzZXJ2YXRldXJzIGRlIEZSQU5DRSAyNC4gCkFuZCBzbyBpdCB3ZW50IG92ZXIgdGhlIG5leHQgc2V2ZXJhbCB3ZWVrcyAgdGhleSB3b3VsZCBtZWV0IHVuZGVyIHRoZWlyIGZhdm9yaXRlIHRyZWUgYWZ0ZXIgbHVuY2gsIGhlIHdvdWxkIHRha2UgaXQgb3V0IGFuZCBzaGUgd291bGQgaG9sZCBpdC4gVGhlbiwgb25lIGRheSwgc2hlIGNvdWxkbiBmaW5kIGhpbS4gCkluIHNob3J0LCBJIGVuY291cmFnZSBldmVyeW9uZSB0byB3YXRjaCB0aGUgdmlkZW8gd2hlbiBNYXJrIE1jR3dpcmUgaGl0cyBoaXMgaGlzdG9yaWMgSG9tZSBSdW4uIFdhdGNoIGFuZCBjb21wYXJlIHdoYXQgaGFwcGVucy4gQm90aCB0ZWFtcyBhcmUgR0VOVUlORUxZIGV4Y2l0ZWQgZm9yIGhpbS4gVGhlIHVtcGlyZXMgY29uZ3JhdHVsYXRlIGhpbS4gVGhlIGNyb3dkIGlzIGluIGFuIGFic29sdXRlIEZSRU5aWSBhbmQgd2FudCBtb3JlLCBtb3JlIGFuZCBtb3JlIE1jR3dpcmUuCkxhIHBhbGFicmEgIkF5dSIgc2lnbmlmaWNhIHRvZG9zIGxvcyBhc3BlY3RvcyBkZSBsYSB2aWRhLCBkZXNkZSBlbCBuYWNpbWllbnRvIGhhc3RhIGxhIG11ZXJ0ZS4gCk5vdyBvbiA2MCBNaW51dGVzOiBUaGVyZSBsZXNzIHRoYW4gYSBtb250aCB1bnRpbCB0aGUgbWlkIHRlcm0gZWxlY3Rpb25zLiAKU3RpbGwgdXBzIGFuZCBkb3duLCBidXQgdWx0aW1hdGVseSBJIHNlZSB0aGF0IGFzIGEgYmlnIGhvbGUgaW4gbXkgcG9ja2V0Li4gCkFuIGltcG9ydGFudCB0aGVvcnkgaXMgTWFyeCdzIHRoZW9yeSBvZiBkaWFsZWN0aWNhbCBtYXRlcmlhbGlzbSBhbmQgY2xhc3Mgc3RydWdnbGUuIApPbiB0aGUgdGFibGUgaW4gZnJvbnQgb2YgdXMgaXMgYSBjb3B5IG9mIHRoZSBleHRyYW9yZGluYXJ5LCAyNzUgYm9vayBDb25jZXJ0IGZvciBHZW9yZ2UsIHdoaWNoIHdpbGwgYmUgcHVibGlzaGVkIG5leHQgbW9udGggdG8gY29tbWVtb3JhdGUgdGhlIGNvbW1lbW9yYXRpdmUgY29uY2VydCBrZWVwIHVwLCBwbGVhc2UgdGhhdCB3YXMgaGVsZCBmb3IgR2VvcmdlIGF0IHRoZSBBbGJlcnQgSGFsbCBpbiAyMDAyLiBFcmljIENsYXB0b24sIFJpbmdvIFN0YXJyLCBQYXVsIE1jQ2FydG5leSwgUmF2aSBTaGFua2FyIGFuZCBNaWNoYWVsIFBhbGluIHdlcmUganVzdCBhIGZldyBvZiB0aGUgZnJpZW5kcyB3aG8gdG9vayBwYXJ0IGluIHRoZSBhbGwgc3RhciBsaW5lIHVwLCBoZWxkIGV4YWN0bHkgb25lIHllYXIgYWZ0ZXIgSGFycmlzb24gaGFkIGRpZWQuLiAKV2VsbC4gV29tZW4gYWN0dWFsbHkgZG8gdGhlIGxpb25zIHNoYXJlIG9mIGNoaWxkY2FyZSBhbmQgaG91c2V3b3JrLiBFdmVuIHdoZW4gdGhleSBoYXZlIGZ1bGwgdGltZSBqb2JzLCBzdHVkaWVzIHNob3cgdGhleSBkbyBhIGZ1bGwgdGVuIGhvdXJzIG1vcmUgb2Ygd29yayBhdCBob21lIHRoYW4gbWVuIGRvLiBTbyBJIGRvbiBrbm93IG1heWJlIHNoZSB0b28gYnVzeSB2YWNjdXVtaW5nIHRvIGJ1aWxkIHlvdSBhIGNsYXkgbW9kZWwgb2YgeW91ciBkb25nIGZvciB5b3UgdG8gc2FsaXZhdGUgb3Zlcj8KQnV0IHRoZSB0cnV0aCBpcyB0aGF0IHRoZXkgYXJlIHB1dHRpbmcgdGhlbXNlbHZlcyBhdCByaXNrLi4gClBsdXMgbXkgcGFyZW50cyBoYWQganVzdCBkaXZvcmNlZCBzbyB0aGVyZSB3YXMgc28gbXVjaCBkcmFtYS4gQW5kIHRvIHRvcCBpdCBvZmYgSSBoYWQgdW50cmVhdGVkIE9DRCBhbmQgZ2VuZXJhbGl6ZWQgYW54aWV0eSBkaXNvcmRlci4uIApBbmQgd2lsbCBhbGwgd2FudCBhIHN1Y2Nlc3NmdWwgZ2FtZSB0aGF0IHdvdWxkIGJyaW5nIGluIG5ldyBwbGF5ZXJzLi4gClRvbyBNdWNoIEhhcHBpbmVzcyBBbGljZSBNdW5ybyBSZWFkIERvd25sb2FkIFBERi9BdWRpb2Jvb2sgLiAKVGhvdWdoLCBJIG9uZSBvZiB0aG9zZSBwZW9wbGUgd2hvIHdhdGNoZWQgZXZlcnkgc2luZ2xlIHNuYXAgb2YgZm9vdGJhbGwgSmFyZWQgaGFzIHBsYXllZCBzaW5jZSAyMDEzIChDYWwgZmFuLCBhbmQgdGhhdCBtb3JlIGEgYnVyZGVuIHRoYW4gaXQgaXMgZmFuZG9tLCB3aGljaCBJIHRoaW5rIGlzIHByb29mIG9mIG15IG93biBjb21taXRtZW50KS4gTGlrZSBJIHNhaWQsIGRvbiBxdW90ZSBtZSBvbiB0aGF0IHNoaXQsIGJ1dCBJIHNlZW4gZW5vdWdoIDYgbWluIHBvc3QgcHJhY3RpY2UgWVQgdmlkZW9zIGZyb20gYSAxIDExIHNlYXNvbiB0byBoYXZlIGFuIGlua2xpbmcgb2Ygd2hvIHRoZSBraWQgaXMuIEhlcmUgYSBraWQgd2hvIGdyZXcgdXAgaW4gTWFyaW4gQ291bnR5L2tpZCBvZiBhIGJhbGxwbGF5ZXIsIHdobyBjb3VsZCB3ZW50IHRvIGEgYnVuY2ggb2YgYmV0dGVyIEQxIGZvb3RiYWxsIHByb2dyYW1zIGJlZm9yZSBKZWZmIFRlZGZvcmQgd2FzIHJ1biBvdXQgb2YgdG93biBvbiBhIHJhaWwgKGFuZCB0aGUgc2FkIHBhcnQgaXMsIGhlIGtpbmRhIGRlc2VydmVkIGl0KSwgYW5kIHN0YXllZCBjb21taXR0ZWQgdG8gYSB0ZWFtIHdoaWNoIHRoZW4gcHJvY2VlZGVkIHRvIGdldCBoaW0gbXVyZGVyZWQgZXZlcnkgd2VlayAoZnVjayB5b3UgU2hheW5lIFNrb3YpIGFuZCBkaWQgaGlzIGJlc3QgdG8gYmUgYSBsZWFkZXIuIApBbml0YWJlbGxlIHUKVHJ1bXAgaXMgZ29pbmcgdG8gZ2V0IHNsYW1tZWQgb24gTm9ydGggS29yZWEgYnkgaGlzIGRldHJhY3RvcnMgbm8gbWF0dGVyIHdoYXQgaGUgZG9lcy4gSWYgaGUgZG9lcyBub3QgbWVldCB3aXRoIEtpbSBoZSBhIHdhciBtb25nZXIsIGVhZ2VyIHRvIGRlYWwgd2l0aCB0aGUgc2l0dWF0aW9uIG1pbGl0YXJpbHkuIFdoZW4gdGhlIG1lZXRpbmcgYnJlYWtzIGRvd24gaGUgYSBmYWlsdXJlLiBNb3N0IFVTIGFkbWluaXN0cmF0aW9ucyBoYXZlIGhhZCB0aGUgc2FtZSBwcm9ibGVtcyBkZWFsaW5nIHdpdGggTm9ydGggS29yZWEsIHdoYXQgaGUgc3VwcG9zZWQgdG8gZG8/IEp1c3QgcmVtb3ZlIGFsbCBzYW5jdGlvbnMgYW5kIGhvcGUgdGhleSBkaXNtYW50bGUgdGhlaXIgbnVjbGVhciBwcm9ncmFtLiBJdCB1bmxpa2VseSB0aGUgTm9ydGggd2lsbCBldmVyIGdpdmUgdXAgdGhlIG51Y2xlYXIgd2VhcG9ucywgd2h5IHdvdWxkIHRoZXksIGl0cyB0aGUgb25seSBiYXJnYWluaW5nIGNoaXAgdGhleSBoYXZlIGdvdC4KSmVmZnJleSBFZHdhcmQgRXBzdGVpbiBhcHBlYXJlZCBhdCBoaXMgc2VudGVuY2luZyBkcmVzc2VkIGNvbWZvcnRhYmx5IGluIGEgYmx1ZSBibGF6ZXIsIGJsdWUgc2hpcnQsIGplYW5zIGFuZCBncmF5IHNuZWFrZXJzLiBIaXMgYXR0b3JuZXksIEphY2sgR29sZGJlcmdlciwgd2FzIGF0IGhpcyBzaWRlLgpPciwgeW91IG1pZ2h0IHdhbnQgb25seSBibHVlIHRvbmVkIHBob3RvcyBpbiB0aGUgY29sbGFnZSBzbyB0aGF0IGl0IG1hdGNoZXMgdGhlIHJvb20gZm9yIHdoaWNoIHlvdSdyZSBtYWtpbmcgdGhlIGNvbGxhZ2UuIApPciB0aGF0IHNvbWUgb2YgdGhlIGNhcmJvbiBjYXB0dXJlIHZlbnR1cmVzIGFyZSBqdXN0IGEgd2FzdGUgb2YgdGltZS4gQW5kIHRoZW4gdGhleSBuZXZlciBzZWVtIHRvIHByb3Bvc2Ugd29ya2FibGUgc29sdXRpb25zIG9mIHRoZWlyIG93biBhbmQganVzdCBpbnNpc3Qgd2UgYWxsIG5lZWQgdG8gYnVua2VyIGRvd24gYW5kIGJhc2ljYWxseSBwcmF5IHRoYXQgb3VyIHBvbGl0aWNpYW5zIHNlZSB0aGUgbGlnaHQuLiAKSSB3b24gaW52ZXN0aWdhdGUgYSBwcm9wZXJ0eSB1bnRpbCBib3RoIG15c2VsZiBhbmQgdGhlIHByb3BlcnR5IG93bmVyIGhhdmUgc2lnbmVkIGFuIGFzc29ydG1lbnQgb2YgcmVsZWFzZXMgYW5kIGluZGVtbml0eSBmb3Jtcy4gVGhhdCB3YXksIHRoZSBvd25lciBrbm93cyB0aGF0IGlmIEkgdGFrZSBhIHR1bWJsZSBkb3duIHRoZSBzdGFpcnMsIHRoZXkgd2lsbCBub3QgYmUgaGVsZCByZXNwb25zaWJsZS4gCkkgbm90IHN1cmUgYWJvdXQgcml2ZXIgYmVjYXVzZSBpdCBraW5kIG9mIHNpbGx5IHRvIGdldCB0byB0aGlzIHNwb3Qgd2l0aCB0aGlzIGhhbmQsIGJ1dCBJIGZhdm9yIGEgZm9sZC4gSSB0aGluayBjaGVja2luZyBBQSBvbiB0aGUgZmxvcCBpcyBwcm9iYWJseSBub3Qgb3B0aW1hbCB2cyB0aGUgZmllbGQsIGJ1dCBpZiB5b3UgZG8gY2hlY2sgaXQgc2hvdWxkIGRlZmluaXRlbHkgYmUgdGhlIGNvbWJvcyB3aXRoIHRoZSBBYyBzbyB5b3UgY2FuIGVhc2lseSBzbmFwIHRoaXMgb2ZmLiBUaGUgQUEgeW91IGhvbGQgYXJlIGp1c3QgdG9vIHZ1bG5lcmFibGUgdG8gdGhpcyB0eXBlIG9mIHJ1biBvdXQgYW5kIHdoZW4gd2UgdHJhcCBoYW5kcyB3ZSB3YW50IHRvIHVzZSBoYW5kcyB0aGF0IGFyZSBhcyBpbnZ1bG5lcmFibGUgYXMgcG9zc2libGUuIFRvcCBzZXQsIEFBIG9uIGEgZHJ5IHJhaW5ib3cgYm9hcmQgd291bGQgYmUgZGVjZW50IGV4YW1wbGVzLgpUaGUgUmFjcXVldHMgYW5kIEJhbGxUaGUgcmFjcXVldHMgd2VyZSBpbml0aWFsbHkgbWFkZSBvdXQgb2Ygd29vZCwgYnV0IG5vdyB0aGUgbW9yZSBsaWdodHdlaWdodCByYWNxdWV0cyBhcmUgZmF2b3VyZWQsIG1hZGUgb3V0IG9mIGFsdW1pbml1bSwgZ3JhcGhpdGUgYW5kIG90aGVyIGxpZ2h0IG1ldGFscy4gVGhleSB3ZWlnaCBiZXR3ZWVuIDM5N2cgdG8gNDU0ZyAoMTRveiB0byAxNm96KSwgYW5kIHZhcnkgaW4gc2l6ZSBkZXBlbmRpbmcgb24gdGhlIHBsYXllci4gVGhleSBhcmUgdXN1YWxseSBzdHJ1bmcgd2l0aCByZXNpbGllbnQgZ3V0IG9yIG55bG9uLCBhbmQgY2FuIGJlIHN0cnVuZyB0byBkaWZmZXJlbnQgdGVuc2lvbnMuIFRoZSBoYW5kbGUgaXMgY292ZXJlZCB3aXRoIGEgcnViYmVyIG9yIGxlYXRoZXIgZ3JpcCBzbyBpdCBkb2VzIG5vdCBzbGlwIG91dCBvZiB0aGUgaGFuZCBlYXNpbHkuCkFuZCBldmVuIGlmLCBpbiB0aGUgY2FzZSBvZiBQYWtpc3RhbiwgdGhhdCBwb3B1bGFyaXR5IG9ubHkgaW5jcmVhc2VzIGV2ZXJ5IHRpbWUgdGhlIG1pbGl0YXJ5IGRvZXMgc29tZXRoaW5nIHRvIG1ha2UgaXQgZGVjcmVhc2UuIApTb21ldGltZXMsIGluZGl2aWR1YWxzIGRvIHRoaXMgdG8gaW50aW1pZGF0ZSB0aGUgb3RoZXIgcGxheWVycyBhbmQgdG8gbWFrZSB0aGVtIHRoaW5rIHRoYXQgaGUgaGFzIGEgcmVhbGx5IG5pY2UgaGFuZC4gVGhlIHByb2JsZW0gaXMgaGUgY2FuIGp1c3QgYmUgdXNpbmcgdGhpcyBhcyBhIGJsdWZmaW5nIHN0cmF0ZWd5IHRvIG1ha2UgdGhlIG90aGVyIHBsYXllcnMgZm9sZCBhbmQgc3RvcCBjb21wZXRpbmcgd2l0aCBoaW0gaW4gdGhlIHJvdW5kLi4gCllvdSBub3JtYWxseSBuZWVkIG9mIHBheSBhIGJyYW5kIG5ldyB0aXRsZSBvcHBvcnR1bml0eSBldmVyeSB5b3VyIHRpbWUgeW91IG1haW50YWluIGEgZGlsZW1tYSBhYm91dCBhIHBhcnRpY3VsYXIgcHJvcGVydHkuIApUaGUgU2hpYXRzdUJhZyB3b3JrcyBieSB0aGUgdXNlciBwb3NpdGlvbmluZyB0aGUgYmFnIHVuZGVyIHRpZ2h0IG11c2NsZXMuIApIb3cgZG8geW91IGdldCBhIGZyZWUgbGFwdG9wIG5vIHNjYW0/bmlmIHlvdSBhbnN3ZXIgdGhlaXIgc3VydmV5LCB5b3Ugd2lsbCBiZSBhc2tlZCBmb3IgcGVyc29uYWwgaW5mb3JtYXRpb24gdGhhdCBzaG91bGQgTkVWRVIgYmUgZ2l2ZW4gb3V0IHRvIGFuIHVua25vd24gcGFydHksIGluZm9ybWF0aW9uIHN1Y2ggYXMgc29jaWFsIHNlY3VyaXR5IG51bWJlcnMuIFJlbWVtYmVyICwgdG8gcmVjZWl2ZSB0aGUgbGFwdG9wLCB5b3UgbXVzdCBhbnN3ZXIgdGhlIHN1cnZleSBpbiBpdHMgZW50aXJldHkuIEhvd2V2ZXIsIGF0IHRoaXMgcG9pbnQgeW91IGhhdmUgZ2l2ZW4gdG9vIG11Y2ggaW5mb3JtYXRpb24gYW5kIHRoZXkgd2lsbCBibG93IHVwIGFueSBwaG9uZSBudW1iZXIgeW91IGhhdmUgZ2l2ZW4gd2l0aCBjYWxscyBmcm9tIGV2ZXJ5IHRlbGVtYXJrZXRlciBvbiB0aGUgcGxhbmV0LCBzbyBpZiB5b3UgZ2l2ZSB0aGVtIHlvdXIgY2VsbCBwaG9uZSBudW1iZXIsIHlvdSdyZSBzY3Jld2VkLiBJbiBzaG9ydCwgYXQgdGhlIHZlcnkgbGVhc3QsIGl0J3Mgbm90IHdvcnRoIHRoZSBlZmZvcnQgYW5kIGhlYWQgYWNoZS4gTGFwdG9wcyBhcmUgdG9vIGNoZWFwIHRoZXNlIGRheXMgdG8gdXNlIHVwIHlvdXIgbWludXRlcyB0cnlpbmcgdG8gZ2V0IGEgZnJlZSBsYXB0b3AuIChGdWxsIEFuc3dlcikKT2YgdGhvc2UgdGhyZWUgbG9jYXRpb25zLCB3ZSBmb3VuZCBsaWZlIG9uIG9uZSBvZiB0aGVtLiAKSSBqdW1wZWQgb3ZlciB0aGUgYmFyIGFuZCBwdWxsZWQgaGlzIGhhaXIsIHdoaWNoIGNhbWUgb3V0IGluIGEgZ2lhbnQgYmxvb2R5IGNsdW1wIGluIG15IGhhbmQuIApUdXJuIG91dCBvbnRvIGEgdGVhIHRvd2VsIFRvIG1ha2UgdGhlIGdsYXplLCBzaWZ0IHRoZSBzdWdhciBpbnRvIGEgbWl4aW5nIGJvd2wuIApJbiBhIHRvZWQgU3VuZGF5IGFzICIndGhlIGd1ZXN0cyBvZiBNci4gTm9haCBMb3MgQSBuZ2V0ZWZlIHdoZXJlIHJ0ZSBjb24gIHJ0aSwgdi4gTnQgaU0gVCBuZWFyIHRvdlZuLiAKSXQgcmVhbGx5IGFsbW9zdCByaXZhbHMgdGhlIFRydW1wIGNyaW1lIGZhbWlseSBob25lc3RseS4gCkl0cyBub3QgZG9uZSB5ZXQsIGFkZGluZyBhIGNvdXBsZSB0cmVlcy4gCkVESVQ6IFRoaXMgZGlzY3Vzc2lvbiBpcyBiZWNvbWluZyB2ZXJ5IHRpbWUgY29uc3VtaW5nLiBJIHJlc3BlY3RmdWxseSBkaXNhZ3JlZSB3aXRoIHlvdXIgc3RhbmNlIHRvd2FyZHMgY29sb3VyIHBhbGV0dGVzLCB0aG91Z2ggSSB3b24gZGVueSB0aGF0IGl0IGNhbiBiZSBpbXByb3ZlZC4gClp1ciBDdW1icmVjaXRhIGZocnQgZWluZSBrbGVpbmUgU3RyYWUsIGZyIGRlcmVuIEJlbnV0enVuZyBtYW4genVuY2hzdCBpbSBCZXN1Y2hlcnplbnRydW0gZGVzIE5hdGlvbmFscGFya3MgZWluZSBrb3N0ZW5sb3NlIEJld2lsbGlndW5nIGxzZW4gbXVzcywgZGEgZGllIEthcGF6aXR0IGRlcyBQYXJrcGxhdHplcyBhbiBkZXIgQ3VtYnJlY2l0YSBzZWhyIGJlZ3Jlbnp0IGlzdCAobmFjaCAxNiBVaHIgZW50ZmxsdCBkaWVzZXIgYnJva3JhdGlzY2hlIEFrdCkuIERlciBkYXVlcnQgaXN0IGplIG5hY2ggTG5nZSBkZXIgRm90byBQYXVzZW4gMSw1IGJpcyAyIFN0dW5kZW4gdW5kIGlzdCBlaGVyIGVpbiBTcGF6aWVyZ2FuZyBhbHMgZWluZSBXYW5kZXJ1bmcuCkkgdGhpbmsgdGhlIGZpcnN0IHdlcmUgYSBzZXJpZXMgb2YgdHJvbGwgYm90cyB0aGF0IG5vdGlmaWVkIHRocmVhZHMgbGlua2VkIGJ5IC9yL1N1YnJlZGRpdERyYW1hICJzZXJpZXMiIGJlY2F1c2UgdGhleSBrZXB0IGdldHRpbmcgYmFubmVkLiBBdCBzb21lIHBvaW50IHRoZXJlIHdhcyAvdS9NZXRhQm90IHdoaWNoIHdhcyBtb3JlIG5ldXRyYWwgYW5kIGV4cGFuZGVkIGJleW9uZCBTUkQuIFRoYXQgc2h1dCBkb3duIEkgdGhpbmsgYmVjYXVzZSBwZW9wbGUgZGlzY292ZXJlZCB0aGUgaWRlbnRpdHkgb2YgdGhlIGNyZWF0b3IgYW5kIHN0YXJ0ZWQgY2F1c2luZyBkcmFtYS4gQWZ0ZXIgYSB3aGlsZSBpdCBzdGFydGVkIHVwIGFnYWluLCB0aGVuIGNsb3NlZCBkb3duLiBUaGVuIEkgY2FtZSBpbnRvIHRoZSBwaWN0dXJlLgpCZWNhdXNlIEkgaGFkIGEgcm91Z2ggZGF5LiAKVGhlIHBlb3BsZSB3aG8gZGlyZWN0IHRoZSBmdW5kcyBhcmUgZXhwZWN0ZWQgdG8gdGFrZSBhIHNtYWxsIHBlcmNlbnRhZ2Ugb2YgdGhlIHByb2ZpdHMgZnJvbSB0aGlzIGVmZm9ydC4gCkp1c3Qga25vd2luZyBhIGNoYW5nZSBJUyBjb21pbmcgY2FuIG1lYW4gYSBsb3QuLiAKQWxzbywgdGhlcmUgaXMgYSBnb3JnZW91cyB5ZWxsb3cgTWV4aWNhbiBzdHlsZSBiYXJvcXVlIGNodXJjaCBmcm9tIDE3ODYgY2FsbGVkIElnbGVzaWEgZGUgbGEgUmVjb2xlY2Npb24uCkx1Y2lhUHJlZmVycmVkIEhvdGVscyBSZXNvcnRzIGluIFN0LiBMdWNpYVBvcHVsYXIgQW1lbml0aWVzU3QuIEx1Y2lhIEhvdGVscyB3aXRoIEZyZWUgUGFya2luZ1N0LiAKVGhhdCBiZWNhdXNlIG1vZGVybiBsb3ZlIGlzIG5vdCBzbyBtdWNoIGFib3V0IGxvdmUgYXMgYWJvdXQgYmVpbmcgImdvb2QgY2l0aXplbnMuIiBpdCB0aW1lIHRoYXQgd2UgbW9kZXJuIGNpdGl6ZW5zIGRlbWFuZCBhbiBlbmQgdG8gc3RhdGUgYW5kIGVjb25vbWljIGludGVyZmVyZW5jZSBpbiBvdXIgbG92ZSBsaXZlcyAgd2hldGhlciBpbiB0aGUgZm9ybSBvZiBwcml2aWxlZ2VzIGxpa2UgdGhlIEtpbmdzLCBidXNpbmVzc2VzIGxpa2Ugc3Vycm9nYWN5LCBvciBwdW5pc2htZW50cyBsaWtlIGhvc3BpdGFscyBkZW55aW5nIG5vbiBjb3VwbGVkIGFuZCBub24gaGV0ZXJvc2V4dWFscyB0aGVpciByaWdodHMuCkEgc3VtbWVyIG9mIGJsaW5kc2lkZXMgYW5kIGJhY2tkb29ycywgdGhlIGdhbWUgZ29lcyBpbnRvIG92ZXJkcml2ZSwgc3RhdGVkIENoZW4uIFBsYXkgYSB3ZWVrIHdvcnRoIG9mIEJpZyBCcm90aGVyIGluIGp1c3Qgb25lIG5pZ2h0LiAKSWYgbWFzb24gYmVlcyBjYW5ub3QgZmluZCBjbGF5LCB0aGV5IHdpbGwgc2ltcGx5IGZseSB0byBhbm90aGVyIGxvY2F0aW9uLiBJZiBhIGdhcmRlbiBkb2VzIG5vdCBhbHJlYWR5IGhhdmUgc29tZSBjbGF5IGF2YWlsYWJsZSwgdGhlbiBhIHN1cHBseSBvZiBjbGF5IHNob3VsZCBiZSBicm91Z2h0IGluIGFuZCBidXJpZWQganVzdCB1bmRlciB0aGUgc29pbC4gSXQgYWxzbyBpbXBvcnRhbnQgdG8gcG9rZSBhIHNob3ZlbCBoYW5kbGUgc2l6ZWQgaG9sZSBhYm91dCAxNSBjbSBpbiB0aGUgZ3JvdW5kIHRvIHByb3ZpZGUgYWNjZXNzIHRvIHRoZSBjbGF5LgpFdmVyeWJvZHkgZW5qb3lzIGdldHRpbmcgYSBtYXNzYWdlIGZyb20gdGltZSB0byB0aW1lLCBidXQgd2hhdCB5b3UgZG8gbm90IGtub3cgaXMgdGhhdCBtYXNzYWdlIGhhcyBoaWRkZW4gYmVuZWZpdHMsIHlvdSBoYXZlIHByb2JhYmx5IG5ldmVyIHRob3VnaHQgYWJvdXQuIFN0YXJ0aW5nIGZyb20gZm9vdCBtYXNzYWdlIHJlZmxleG9sb2d5IGFuZCB1cCB0byBzcG9ydHMgcmVtZWRpYWwgbWFzc2FnZSBTeWRuZXksIG1ha2luZyByb29tIGZvciByZWd1bGFyIG1hc3NhZ2Ugc2Vzc2lvbnMgd2lsbCBiZSBodWdlIHBsdXMgZm9yIHRoZSBoZWFsdGggb2YgeW91ciBib2R5IGFuZCBtaW5kLiBFdmVuIHRob3VnaCB5b3UgcHJvYmFibHkgZW5qb3kgZ2V0dGluZyBtYXNzYWdlcywgeW91IG1pZ2h0IGhhdmUgbmV2ZXIgZ2l2ZW4gdGhpcyBzdWJqZWN0IGEgc3BlY2lhbCBpbnRlcmVzdC4gClRoZSBkZWdyZWUgb2YgcHJlc3N1cmUgdGhhdCBpcyBhcHBsaWVkIHZhcmllcywgYXMgZG9lcyB0aGUgZHVyYXRpb24uIApJIGp1c3Qgd2F0Y2ggYW5kIGxhdWdoLCBzb21ldGltZXMgSSBmaWxtIGl0IGFuZCBzZW5kIGl0IHRvIG9lIGZpdG5lc3MuIFRoZXkgaGF2ZSBzbyBtYW55IGd5bSBmYWlsIHZpZGVvcyBldmVyeSB3ZWVrLiAKVGhlIGx5bmNoaW5nIHdhcyBjaXJjdWxhdGVkIHRocm91Z2ggcHJlc3MgYWNjb3VudHMuIFdoaXRlcyBhbmQgQmxhY2tzIHVuZGVyc3Rvb2QgdGhhdCBvbmNlIGFnYWluIHdoaXRlIHBvd2VyIGhhZCBiZWVuIGV4ZXJ0ZWQgb3ZlciBhbiBpbmRpdmlkdWFsIEJsYWNrIGJvZHkgYnV0IGFsc28gb3ZlciB0aGUgbW9yZSBzeW1ib2xpYyBib2R5IHBvbGl0aWMuIApDaXJjdW1zdGFuY2VzIHdpbGxpbmcgKGFuZCBwcm92aWRlZCB0aGUgZ2VuZXJhbCByZWFjdGlvbiB0byB0aGlzIGlzbiAiamVzdXMgY2hyaXN0IG1hbiBzdG9wIiksIEkgaW50ZW5kaW5nIHRvIGRvIHRoZSByZXN0IG9mIHRoZSBib29rIGFzIHdlbGwuIEkgY2FuIHByb21pc2UgaXQgYmUgdGhlIGZhc3Rlc3QgICBJIGhhdmUgYSBqb2IgdG8gd29yaywgYW5kIEkgYWxzbyBzbG93IGF0IHRoZSBiZXN0IG9mIHRpbWVzICAgYnV0IEkgZ2V0IHRoZXJlLgpUbyBnZXQgdG8gYXQgbGVhc3QgY2hhbXBpb24sIGkgZ29ubmEgc2F5IHRoYXQgeW91IGRvbiBldmVuIG5lZWQgaW5jcmVkaWJsZSBtZWNoYW5pY3MuIApUaGUgcGVvcGxlIG9mIERldHJvaXQgc3VwcG9ydGVkLCBiYWNrZWQsIGFuZCB2b3RlZCB0aGF0IGNvcnJ1cHRpb24gaW50byBwb3dlciBmb3IgNDAgeWVhcnMuIFRoZXJlIHdhcyBubyBteXN0ZXJ5IHJlZ2FyZGluZyB0aGUgY29ycnVwdGlvbiBhbmQgc2NhbmRhbCBvY2N1cnJpbmcgYXMgaXQgd2FzIGFsbCBvdmVyIHRoZSBuZXdzLiBJZiB5b3Ugd2FudCB0byBoYXZlIGEgYmV0dGVyIHVuZGVyc3RhbmRpbmcgb2YgRGV0cm9pdCBwb2xpdGljcywgbG9vayBpbnRvIENvbGVtYW4gWW91bmcuIFRvIHF1b3RlIFdpa2lwZWRpYSBpbiBhIHN0YXRlbWVudCB0aGF0IHByZXR0eSBtdWNoIHN1bXMgdXAgd2h5IERldHJvaXQgY29sbGFwc2VkIGluIHRoZSB3YXkgaXQgZGlkOgpXaW5uaW5nIHRoZSB0b3VybmFtZW50IHdpbGwgbm90IG9ubHkgZ2l2ZSB5b3UgdGhhdCByZWNvZ25pdGlvbiwgYnV0IHdpbGwgYWxzbyBtZWFuIHRoYXQgeW91IGFyZSBnb29kIGluIHRoaXMgZ2FtZS4gCkZZSS4gQSBsaXR0bGUgZXhwbGFuYXRpb24gZm9yIHJhZGlvIHNpbGVuY2UgYXQgdGhlIHdlZWtlbmQuIApIb3dldmVyLCByZXNlYXJjaCBhbHNvIHN1Z2dlc3RzIHRoYXQgdGhlIHdpbnRlciBtb250aHMgcG9zZSBvdGhlciBoYXphcmRzIHRvIGhlYWx0aCBsaW5rZWQgdG8gdGhlIGJvdHRvbWluZyBvdXQgb2Ygdml0YW1pbiBEICAgYSBjcml0aWNhbCBudXRyaWVudCBtYWRlIGluIHRoZSBza2luIHRocm91Z2ggdGhlIGFjdGlvbiBvZiBzdW5saWdodC4KT24gdGhlIG90aGVyIGhhbmQsIGFueW9uZSB3aG8gaXMgZ29vZCBlbm91Z2ggYXQgc3lzdGVtaXppbmcgdG8gaGFuZGxlIGhpZ2ggbGV2ZWwgVGV4YXMgSG9sZCBzaG91bGQgYmUgZ29vZCBlbm91Z2ggYXQgc3lzdGVtaXppbmcgdG8gdW5kZXJzdGFuZCBiYXNpYyBlY29ub21pYyBjb25jZXB0cyBsaWtlIHByaWNlIGZsb29ycywgYWdlbmN5IGlzc3VlcywgZXRjLiBidXQgZnJhbmtseSBpdCBhIGxvdCBvZiB0aW1lIHNwZW50IGp1c3QgdG8gcmVhbGl6ZSB0aGF0IHBvcHVsaXN0IHBvbGl0aWNzIGFyZSB0cmFzaCwgYW5kIHRoYXQgdGhlcmUgaXMgbGl0dGxlIHlvdSBjYW4gZG8gdG8gc3RvcCBub24gc2VsZiBzdXN0YWluaW5nIHBlb3BsZSBmcm9tIHZvdGluZyB0aGVtc2VsdmVzIG1vcmUgcmVzb3VyY2VzLCByZXByb2R1Y2luZywgcmVwZWF0aW5nLCB1bnRpbCBWZW5lenVlbGEgc3R5bGUgY29sbGFwc2Ugb3Igb3RoZXIgc29jaWFsIGNoYW5nZSBvY2N1cnMuCkhha29vbmFtYXRhdGE5IHUKSXQgbWF5IGJlIHRoZSBzdGFydCBvZiBhbiBpbnRlcmVzdGluZyBDb252ZXJzYXRpb24uSGF2aW5nIFlvdXIgRW50cnkgQWNjZXB0ZWRPbmNlIHlvdXIgRW50cnkgaGFzIGJlZW4gaW4gUGVlciBSZXZpZXcgZm9yIHNldmVuIGRheXMsIGl0IGNhbiBiZSBQaWNrZWQgYnkgYSBTY291dCBmb3IgaW5jbHVzaW9uIGluIHRoZSBBcHByb3ZlZCBHdWlkZS4gClRpZ2h0L2FnZ3Jlc3NpdmUgcGxheWVycyBjYXBpdGFsaXplIG9uIHRoaXMgdGFjdGljIGJ5IHByb3ZpZGluZyBvcHBvcnR1bml0aWVzIGZvciB0aGVpciBvcHBvbmVudHMgdG8gbWFrZSB0aGVzZSBtaXN0YWtlcy4gVGhlIG5hbWUgYXNzaWduZWQgdG8gdGhlc2UgcGxheWVycyBpcyAiU29saWQuIiBFeHBlcmllbmNlZCBwbGF5ZXJzIHVzdWFsbHkgcmVzcGVjdCB0aGVpciBiZXRzIGFuZCByYWlzZXMgYmVjYXVzZSB0aGV5IHNlbGRvbSBlbnRlciBhIHBvdCB3aXRoIGEgcG9vciBoYW5kLiAKVGhpcyBpcyBzaW1pbGFyIHRvIHRoZSByb3lhbCBmbHVzaCwgZXhjZXB0IHRoZSA1IGFyZSBub3QgYWNlLCBraW5nLCBxdWVlbiwgamFjayBhbmQgMTAuIApPdmVyIHRoZSBwYXN0IGZldyB5ZWFycywgd2UgbW92ZWQgYWdncmVzc2l2ZWx5IHRvIG1ha2UgQ29vcnMgTGlnaHQgbW9yZSBwcmVtaXVtLCB3aGljaCBpcyB0aGUgcmlnaHQgdGhpbmcgdG8gZG8uIApCaWxsIENoZW4gYW5kIEplcnJvZCBBbmtlbm1hbiBkbyBhIHRlcnJpZmljIGpvYiBleHBsYWluaW5nIGhvdyBtYXRoIGNhbiwgYW1vbmcgb3RoZXIgdGhpbmdzLCBzaG93IHlvdSBleGFjdGx5IGhvdyB0byBtaXggdXAgeW91ciBwbGF5IGluIHN1Y2ggYSB3YXkgdGhhdCBldmVuIGNoYW1waW9uIHBsYXllcnMgY2Fubm90IGdldCB0aGUgYmVzdCBvZiB5b3UuLiAKSSBmZWxsIGludG8gYSBkZWVwIHNsdW1wIHRoYXQgSSBjb3VsZG4ndCBzZWVtIHRvIHB1bGwgb3V0IG9mIGFuZCBpdCB3YXMgd2VsbCwgY3JhcHB5LiAKQW55d2F5IGh1Z2UgZ3JhdHosIGFuZCBtYW4gdGhpcyBjb3Vyc2UgcmVhbGx5IGlzIGZhc3QgKGNvbXBhcmVkIHRvIGhvbWUgaW4gTkMpLiBPaCBhbmQgSSBkaWQgdGhpcyBvbmUgdG9vICAgZGlkIHRoZSBoYWxmLiBZb3UgYWxtb3N0IGxhcHBlZCBtZSEuIApGb3IgZXhhbXBsZSwgd2l0aCAxNWJicyBmcm9tIHRoZSBoaWphY2ssIHRoZSBHVE8gc29sdXRpb24gaXMgdG8gamFtIHJvdWdobHkgNjYgICAzMywgQVFvICAgQTlvLCBBN3MsIEE1cywgQTRzLCBLSnMsIEtUcywgUUpzLCBRVHMsIEpUcywgYW5kIFQ5cyB3aGlsZSBtaW5yYWlzaW5nIEFBICAgNzcsIEFLcyAgIEE4cywgQTZzLCBBM3MsIEEycywgQUtvLCBBOG8sIEE3bywgS1FzLCBLOXMsIEs4cywgSzdzLCBLSm8sIEtUbywgUTlzLCBROHMsIFFKbywgUVRvLCBKOXMsIGFuZCBKVG8uIApJbiB0aHJlZSBvciBtb3JlIHBsYXllciBnYW1lcywgbXVsdGlsYXRlcmFsIGRldmlhdGlvbnMgc3VjaCBhcyB0aGV5IG9jY3VyIGluIGNvbGx1c2lvbiBkb24gZ3VhcmFudGVlIHRoZSBzYW1lLiAKTmFoIEl0cyBhIHByb2JhYmx5IGEgbnVyc2Ugd2hvIGZlZWxzIG9ibGlnYXRlZCBhbmQvb3IgaXMgcmVxdWlyZWQgYnkgcG9saWN5IGFuZCByZWd1bGF0aW9uIHRvIHJlcG9ydCBzdWNoIGlzc3VlcyB3aXRoIHRoZSB1bmRlcnN0YW5kaW5nIHRoYXQga25vd2luZ2x5IGlnbm9yaW5nIGl0IGNvdWxkIGNvc3QgdGhlbSB0aGVpciBqb2Igb3IgY2FyZWVyLiAKQnV0IHdoaWxlIGdvb2Qgc3VycHJpc2VzIGRlbGlnaHQsIGJhZCBzdXJwcmlzZXMgY2F1c2UgYW54aWV0eS4gVGhhdCB3aHkgY2FtcGFpZ25zIHNwZW5kIGEgbG90IG9mIHRpbWUgcG9ydHJheWluZyB0aGVpciBvcHBvbmVudHMgaW4gYSBjZXJ0YWluIHdheS4gCiJNdW1iYWkgbGluZ28gaXMgYSBiaXQgZGlmZmVyZW50LiAKTm8sIGF0IGJlc3QgaXQgYnV5cyB0aGUgdHdvIHNpZGVzIGV4dHJhIHRpbWUgdG8gbmVnb3RpYXRlIHRoYXQgbG9uZyB0ZXJtIGRlYWwgd2l0aG91dCB0aGUgdGVhbSByaXNraW5nIHRoZSBwbGF5ZXIgYmVpbmcgcG9hY2hlZCBieSBhbm90aGVyIHRlYW0gKG9yLCBpbiB0aGlzIGNhc2Ugd2l0aCB0aGUgTm9uZXhjbHVzaXZlIFRhZywgd2l0aG91dCB0aGUgdGVhbSByaXNraW5nIHRoZSBwbGF5ZXIgYmVpbmcgcG9hY2hlZCBhbmQgdGhlIHRlYW0gZ2V0dGluZyBub3RoaW5nIGluIHJldHVybikuIEZyZWUgYWdlbmN5IHN0YXJ0cyBpbiBhIGxpdHRsZSBvdmVyIGEgd2VlaywgYnV0IG5vdyB0aGF0IGhlIHRhZ2dlZCB0aGVyZSBhbm90aGVyIDQgbW9udGhzIHdoZXJlIENsb3duZXkgYW5kIHRoZSBUZXhhbnMgY2FuIG5lZ290aWF0ZSBhIGxvbmcgdGVybSBkZWFsLgpUbyBnYXRoZXIgaGlzIGRhdGEsIFNpbGVyIHVzZWQgYSBzb2Z0d2FyZSBzeXN0ZW0gY2FsbGVkIFBva2VyVHJhY2tlciBhbmQgZGlyZWN0ZWQgaXQgdG8gY29sbGVjdCBhbmQgY29sbGF0ZSBpbmZvcm1hdGlvbiBvbiBzbWFsbCAgbWVkaXVtICBhbmQgbGFyZ2Ugc3Rha2VzIGdhbWVzLiBIZSBsaW1pdGVkIHRoZSBnYW1lcyB0byBubyBsaW1pdCBUZXhhcyBIb2xkICdFbSB3aXRoIHNpeCBwbGF5ZXJzIGluIG9yZGVyIHRvIGVsaW1pbmF0ZSBhdCBsZWFzdCBzb21lIGV4dHJhbmVvdXMgdmFyaWFibGVzLiAKUm93ZSBsZWZ0IHRoZSBnYW1lIGluIHRoZSA4OXRoIG1pbnV0ZSByZXBvcnRlZGx5IGNsdXRjaGluZyBoaXMgaGFtc3RyaW5nLiBIZSB3YXMgc2lkZWxpbmVkIGxhc3Qgd2VlayB3aXRoIGEgaGFtc3RyaW5nIGluanVyeSwgdGhvdWdoIGhpcyBjdXJyZW50IHN0YXR1cyBpcyBzdGlsbCB1bmtub3duLgpUaGF0IGZyaWVuZCBpcyBDaGV1bmcgWWluIFN1biwgd2hvc2Ugbmlja25hbWUgaXMgQmFjY2FyYXQgTWFjaGluZSwgYWNjb3JkaW5nIHRvIHRoaXMgcHJvZmlsZSBpbiBDaWdhciBBZmljaW9uYWRvLgpMYWJlbGxlZCBhbiAiaW50cmlndWluZyBzcHkgdGhyaWxsZXIiIHRoZSBib29rIGZvbGxvd3MgdGhlIGRyb25lIHByb2dyYW0gdXNlZCB0byBsYXVuY2ggYWVyaWFsIGF0dGFja3MgYnkgcGlsb3RsZXNzIGFpcmNyYWZ0IGluIExhcyBWZWdhcywgTmV2YWRhLiBBIGxhcmdlIHBhcnQgb2YgdGhlIG5vdmVsIGlzIGFsc28gZGVkaWNhdGVkIHRvIGV4cGxvcmluZyBwb2tlci4gCkkga25vdyBBdXN0cmFsaWEgaXMgZmFyIGZyb20gcGVyZmVjdC4gSSB3YXMganVzdCBwb2ludGluZyBvdXQgdGhhdCBJIGRpZG4ga25vdyBhIGNvdW50cnkgbGlrZSBJcmVsYW5kIHdvdWxkIGhhdmUgYSBsZWdhbCBzeXN0ZW0gd2hpY2ggdGFrZXMgdGhlIHNpZGUgb2YgYSByYXBpc3QgdGhlIHdheSBpdCBkaWQgaW4gdGhpcyBzcGVjaWZpYyBjYXNlLiAKU28geWVhaCwgSSB0aGluayBEZXZpYW50QXJ0IGlzIGtpbmQgb2YgdHJhc2guIElmIHRoYXQncyB0aGUgb25seSBwbGFjZSB5b3UgaGF2ZSB0byBzaGFyZSBhbmQgcHJvbW90ZSB5b3VyIGFydCwgeW91J3JlIHByb2JhYmx5IGRvaW5nIHNvbWV0aGluZyB3cm9uZy4gKEknbSBhbiBhcnRpc3QgbXlzZWxmLikKQmFyaXM2NjU1ICA3NCBwb2ludHMgIHN1Ym1pdHRlZCA1IG1vbnRocyBhZ28KTm93IHNheSB5b3UgaGFkIEFBIGluIHRoaXMgc3BvdC4gSGUgbm93IGhhcyB0aHJlZSBjb21ib3Mgb2YgNjYgYW5kIHRocmVlIGNvbWJvcyBvZiA3NywgYXMgd2VsbCBhcyB0d28gY29tYm9zIG9mIDY3cyB0aGF0IGJlYXQgeW91LiAKQ29tcGFuaWVzIHRoYXQgYW5udWFsbHkgZ2V0IHJhbmtlZCBhcyBtb3N0IGlubm92YXRpdmUgc3BlbmQgdGhyZWUgdG8gZm91ciB0aW1lcyBtb3JlIG9uIFJORCB0aGFuIG1hcmtldGluZywgdGhlIHJldmVyc2Ugb2YgbW9zdCBjb25zdW1lciBwcm9kdWN0IGdvb2RzIGNvbXBhbmllcywgaGUgY2xhaW1zIGFzIGEgdGVsbHRhbGUgc2lnbiBvZiB0aGlzIGNoYW5nZS4gRGF5cywgdmVudHVyZSBjYXBpdGFsIGlzIHNlcnZpbmcgYXMgdGhlIGZ1bmRpbmcgYWdlbnQgb2YgUk5ELiBMaWtlIERvbWlub3MuIApCYXJmaW5nIGluIExhYm9yIFBpc3RpbCBQaW5rIE1yLiAKVGhlIEhhbGwgb2YgRmFtZSBoYXMgYmVlbiBjcmVhdGVkIGZvciB0aG9zZSB3aG8gaGF2ZSBmdXJ0aGVyZWQgdGhlIHByb2Zlc3Npb24gb2YgTWFzc2FnZSBUaGVyYXB5LiBNb3JlIHRoYW4gdGhhdCwgaXQgaGFzIGJlZW4gbW9zdCByZXdhcmRpbmcgdG8gYmUgYSBwYXJ0IG9mIG91ciBhbWF6aW5nIHByb2Zlc3Npb24gYW5kIGl0cyBkZXZlbG9wbWVudCwgYW5kIHRvIGhlbHAgcmVsaWV2ZSBwZW9wbGUncyBwYWluIGFuZCBzdWZmZXJpbmcgaW4gYSBuYXR1cmFsLCBjb21wYXNzaW9uYXRlIGFuZCBjb25zY2lvdXMgd2F5LiBPdXIgd29yayBpcyBjb21tZW5kYWJsZSBhbmQgZnVsZmlsbGluZyBhbmQgSSBhbSBlc3BlY2lhbGx5IHByb3VkIG9mIG91ciBNU1RNIHB1cGlscyBhbmQgZ3JhZHMuIiAgIEppbSBDb21lIHRvIE1hdWkgZm9yIG1hc3NhZ2UgdGhlcmFweSBzY2hvb2wgYW5kIGdldCBhIHN0YXRlIG9mIHRoZSBhcnQsIHdvcmxkIGNsYXNzIGVkdWNhdGlvbi4uIApXaXRoIGFsbCB0aGVzZSB3b25kZXJmdWwgb3Bwb3J0dW5pdGllcyB0byBmYXR0ZW4gdXAgeW91cm9ubGluZSBwb2tlcmJhbmtyb2xsLCB0aGVyZSBhcmUgc3RpbGwgbW9yZSBvZmZlcnMuIE9ubGluZSBwb2tlciByb29tcyBvZmZlciBndWFyYW50ZWVkIHByaXplIHBvb2xzIGZvciB0aGVpciB0b3VybmFtZW50cy4gClVuZSBpbnZpdGF0aW9uIHF1ZSBub3VzIGF2b25zIGJpZW4gdmlkZW1tZW50IGFjY2VwdGUuLiAKTm8gaGVhdnkgZHJ1Z3MsIGJ1dCBhIGxvdCBvZiB3ZWVkLiBBbmQgY2FsbCBtZSBjcmF6eSwgYnV0IGlmIHlvdSBtYWtlIG1pbmltdW0gd2FnZSB5b3UgZG9uIHJlbnQgYWxvbmUsIHBlcmlvZC4gClNlcmlvdXNseSBpIHVuZGVyc3RhbmQgdGhlcmUgYSBsb3Qgb2YgYmlhcyBhZ2FpbnN0IGhpbSBidXQgbGV0IGJlIHJlYXNvbmFibGUuIApPdXIgZmluYWwgdHdvIHNwZWFrZXJzIGF0IHRoZSBDb25ncmVzcyBtaWdodCBiZSBmdXR1cmUgQ0VPcy4gCkRubW5ldyB1ClNjb3JlOiAyMC4gSG1waC4gVGhlIGp1ZGdlcyBjb21tZW50cyBpbmRpY2F0ZWQgaGUgd2FzIGdvaW5nIHRvIGdldCBiZXR0ZXIuCkkga25vdyBwbGVudHkgb2YgS29yZWFucyBvZiB2ZXJ5IGRpZmZlcmVudCBiYWNrZ3JvdW5kcyBhbmQgam9icyB0aGF0ICBldmVyeSBkYXkgYW5kIHdobyBiYXJlbHkgZXZlciBoYXZlIC4gSXRzIG5vdCAyMDAzIGFueSBtb3JlLi4gCldlIHN0dWR5IGEgc2ltcGxpZmllZCB2ZXJzaW9uIG9mIGZ1bGwgc3RyZWV0LCB0aHJlZSBwbGF5ZXIgS3VobiBwb2tlciwgaW4gd2hpY2ggdGhlIHdlYWtlc3QgY2FyZCwgSiwgbXVzdCBiZSBjaGVja2VkIGFuZC9vciBmb2xkZWQgYnkgYSBwbGF5ZXIgd2hvIGhvbGRzIGl0LiAKT2YgY291cnNlIHdlIHJlYWxseSBuZWVkZWQgdG8gd2l0aCBvbmUgYmFieSBhbG1vc3QgMSBhbmQgYW5vdGhlciBvbiB0aGUgd2F5Li4gCkF0IFdhbmdhcmF0dGEsIHRha2luZ3MgZHJvcHBlZCBmb3IgdGhyZWUgbW9udGhzIG9uIHRoZSBzYW1lIHBlcmlvZHMgb2YgMjAxMiwgdGhvdWdoIGluY3JlYXNlZCBpbiB0aGUgb3RoZXIgdGhyZWUgbW9udGhzLiAKWW91IG11c3QgcGljayB5b3VyIGJhdHRsZXMgd2lzZWx5LiAKUGVvcGxlIHdpdGhvdXQgaG9tZXMsIHdobyBhcmUgbGl2aW5nIGRheSB0byBkYXksIG9mdGVuIGhhdmUgbm8gY2hvaWNlIGJ1dCB0byBoYXZlIHNleCBmb3IgbW9uZXkgb3IgdGhpbmdzIGxpa2Ugc2hlbHRlciwgYWR2b2NhdGVzIHNheS4uIApJIGRvbiB3YW50IHRvIGdlbmVyYWxpc2UsIGFuZCBwbGVudHkgb2YgRnJlbmNoIHNwZWFrZXJzIGFyZSBncmVhdCBhYm91dCBwZW9wbGUgbm90IGJlaW5nIHZlcnkgZ29vZCBhdCB0aGUgbGFuZ3VhZ2UgKGJ1dCBjbGVhcmx5IG1ha2luZyBhbiBlZmZvcnQpIGJ1dCBmcmVuY2ggaXMgdGhlIGxhbmd1YWdlIEkgZm91bmQgaGFzIHRoZSBtb3N0IHBlb3BsZSBkaXNtaXNzaW5nIHBvb3IgbGFuZ3VhZ2Ugc2tpbGxzIHJhdGhlciB0aGFuIGVuY291cmFnaW5nIHlvdSBmb3IgdHJ5aW5nLgpJJ3ZlIGJlZW4gcGxheWluZyBSaW13b3JsZCBmb3IgdGhlIHBhc3QgbWF5YmUgZm91ciBob3VycyBvciBzbyBhbmQgaGF2ZSBkZWNpZGVkIHRvIHN0b3AgZm9yIHRoZSBuaWdodCBiZWNhdXNlIG15IHJpZ2h0IGV5ZWJyb3cgaXMgdHdpdGNoaW5nIGluY2Vzc2FudGx5IGFuZCBJJ20gbm93IHNjcm9sbGluZyBSZWRkaXQgc28uIHRoYXQncyBiZXR0ZXIgSSBndWVzcyBsb2wuIFNlcmlvdXNseSB0aG91Z2gsIEkndmUgYmVlbiBwbGF5aW5nIHZpZGVvZ2FtZXMgZm9yIGEgbGFyZ2UgcGFydCBvZiBteSBsaWZlLiBQcmltYXJpbHkgTmludGVuZG8gRFMgZ2FtZXMuIFN0YXJ0aW5nIGZyb20gUG9rZW1vbiBEaWFtb25kLCB0aGVuIHRvIHRoZSBteXN0ZXJ5IGR1bmdlb24gYW5kIHJhbmdlciBzZXJpZXMsIEkgYm91Z2h0IGFuZCBwbGF5ZWQgU291bFNpbHZlciwgV2hpdGUsIEJsYWNrIDIsIFggYW5kIFksIGFuZCBNb29uLiBBbmQgdGhlIG1ham9yaXR5IG9mIHRoZSBzcGlub2ZmIHNlcmllcy4gSSd2ZSBiZWVuIGludG8gUEMgZ2FtaW5nIHNpbmNlIGFib3V0IDIwMTIgdGhvdWdoLCBhbmQgSSdtIGludG8gdGhlIGluZGllIHNjZW5lLiBJJ2QgMTAwJSBnaWZ0IGR1cGxpY2F0ZXMsIGFsdGhvdWdoIEknZCBwcm9iYWJseSB3YWl0IHVudGlsIHRoZSB5ZWFycyBlbmQgdG8gZG8gYSBtYXNzIGdpdmVhd2F5IHJhdGhlciB0aGFuIG9uZSBhdCBhIHRpbWUuIENoZWVycyBPUCEgMiBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvClNhaWQgdGhlIHNpdHVhdGlvbiBoYXMgYmVlbiB2ZXJ5IGRpZmZpY3VsdCBmb3IgdGhlaXIgOTEgeWVhciBvbGQgbW90aGVyLCB3aG8gdG8gZGVhbCB3aXRoIGhlciBodXNiYW5kIHdobyB3YXMgYSBiYW5rIHJvYmJlciBhbmQgbm93IHRoaXMuIFBhZGRvY2ssIDY0LCBsaXZlZCB3aXRoIGhpcyBnaXJsZnJpZW5kLCBNYXJpbG91IERhbmxleSwgNjIuIAoyOCBKdWwgMjAxNSAuIElmIHlvdSdyZSBvbmUgb2YgdGhlIDIwIG1pbGxpb24oaXNoKSBwbGF5ZXJzIHdobyBhbHJlYWR5IG93biBNaW5lY3JhZnQgZm9yIFBDL01hYywgeW91IGdldCB0aGUgbmV3IHZlcnNpb24gZm9yIGZyZWUuIDI4IERlYyAyMDE2ICAgNSBtaW4gICBVcGxvYWRlZCBieSBBamF5IDIxMzUgLyBKLiBELiBTUHJvYmxlbTogSWYgVSBTZWUgVGhlcmVzIEEgUG9ybiBMaW5rIFRoZXJlcyBUaGF0cyBJcyBBIFZpcnVzIEd1eXogSSBkaWRudCBXYXRjaCBwb3JuIEJlY2F1c2UgLiAKQWxzbyBsaWtlbHkgbm90IHdpdGggQUEuIFNvIHlvdXIgcmFuZ2Ugd2hlbiB5b3UgbGVhZCBpcyBleGFjdGx5IHdoYXQgeW91IGhhdmUgb3IgQVEsIG1heWJlIEFKIHN1aXRlZC4gV291bGQgbm90IHdhbnQgdG8gZG8gdGhpcyBhbGwgdGhlIHRpbWUgYnV0IGluIHRoaXMgc3BvdCBJIHRoaW5rIGl0IGlzIGEgZ29vZCBvcHRpb24uIApXb3JrZWQgb24gYSBmaWxtIGNhbGxlZCBEb2cgRGF5cywgd2hpY2ggd2FzIGFsc28gYSBjb21lZHksIHNhaWQgRG9icmV2LiB3YXMgZnVuIGJlY2F1c2UgaXQgd2FzIFRvbmUgZmlyc3QgZXZlciBmZWF0dXJlIGZpbG0uIEhlIGFza2VkIG1lIHRvIHRha2UgaGltIHVuZGVyIG15IHdpbmcuIEl0IHdhcyB0aGUgcmV2ZXJzZSBleHBlcmllbmNlIG9uIHRoZSBzaXRjb20uIEkgYmVnZ2VkIGhpbSB0byBnaXZlIG1lIHNvbWUgYWR2aWNlLiBXZSBhbHdheXMgaGFkIGVhY2ggb3RoZXJzIGJhY2tzLCB3aGljaCBpcyBuaWNlLiBEb2JyZXYgd2FudHMgZmFucyB0byBzdG9wIHdoYXQgdGhleSBkb2luZyBhbmQgZ28gYWxsIGluIG9uIHRoZSBzaG93LgpNb3JlIGd1ZXN0cyBjaG9vc2UgdGhlIEJFU1QgV0VTVEVSTiBQTFVTIE5hc2h2aWxsZSBBaXJwb3J0IEhvdGVsIGZvciBvdXIgZXhjZWxsZW50IHNlcnZpY2UgYW5kIFNvdXRoZXJuIEhvc3BpdGFsaXR5LiAKUGVvcGxlIGFyZSBydWRlIGFzIGhlbGwgaW4gTmV3IFlvcmssIGJ1dCBpdCBoYXMgc28gbXVjaCBsaWZlIGFuZCBwZXJzb25hbGl0eSBJIGZvcmdpdmUgZm9yZ2l2ZSBpdC4gTmV3IEplcnNleSBpcyBhIHNub3JlLCBCYWx0aW1vcmUgaXMgYmxlaCwgc2FtZSB3aXRoIG1vc3Qgb2YgT2hpby4gQWJzb2x1dGVseSBsb3ZlZCB0aGUgdXBwZXIgTm9ydGhlYXN0IGNvcm5lciB0aG91Z2guClRoZSB0ZXJtICJuZXcgZmFuZ2xlZCB0cmVhc29ucyIgY29tZXMgZGlyZWN0bHkgZnJvbSBCbGFja3N0b25lIChDb21tZW50YXJpZXMsIEJvb2sgSVYsIENoLiBWSSwgTGluZSA4NykuIERlc2NyaWJpbmcgdGhlIGRldmVsb3BtZW50IG9mIEVuZ2xpc2ggc3RhdHV0b3J5IGFuZCBjb21tb24gbGF3LCBCbGFja3N0b25lIGVtcGhhc2l6ZWQgdGhlIHByb2JsZW0gb2YgY29uc3RydWN0aXZlIHRyZWFzb25zLCBleHBsYWluaW5nIGhvdyAyNSBFZHdhcmQgSUlJIHdhcyBlbmFjdGVkIHRvIHJlc3RyaWN0IGNvbnN0cnVjdGl2ZSwgb3IganVkZ2UgbWFkZSB0cmVhc29ucywgYW5kIGhvdyB0aGUgc3RhdHV0ZSBtdXN0IHRoZXJlZm9yZSBiZSAib3VyIHRleHQgYW5kIGd1aWRlIi4gCkluIG15IGNvdW50cnksIEJyaXRhaW4sIGNhcGl0YWxpc20gKGFuZCB0aGVyZWZvcmUgZWR1Y2F0aW9uIGFuZCB0aGUgYWJpbGl0eSBmb3Igd29ya2luZyBwZW9wbGUgdG8gdGFrZSBhIGdyZWF0ZXIgcm9sZSBpbiBydW5uaW5nIHRoaW5ncykgaXMgbXVjaCBtb3JlIGRldmVsb3BlZCBhbmQgdGhpcyB3b3VsZCBsaWtlbHkgYmUgZWFzaWVyIHRvIG1haW50YWluLiBCdXQgd2l0aG91dCB0aGUgcmV2b2x1dGlvbiBiZWluZyBqb2luZWQgYnkgb3RoZXIgY291bnRyaWVzLCB3ZSB3b3VsZCBsaWtlbHkgZmFjZSB0aGUgc2FtZSBidXJlYXVjcmF0aWMgaXNzdWVzLiAKSW4gV2lya2xpY2hrZWl0IGlzdCBkYXMgR2FuemUgaGFsdCBkdXJjaGF1cyBrb21wbGV4ZXIgdW5kIGplZGUvciB2b24gdW5zIGhhbmRlbHQgdW5kIGVudHNjaGVpZGV0IGltIHRnbGljaGVuIExlYmVuIGF1ZmdydW5kIHZvbiB2aWVsIG1laHIgdW5iZXd1c3N0ZW4gRW1wZmluZHVuZ2VuLCBhbHMgZXMgdW5zIGJld3Vzc3QgaXN0LgpUaGVyZSBhcmUgdmlydHVhbGx5IHVubGltaXRlZCBwYXRocyBmb3IgYW4gaW1hZ2luYXRpdmUgaG9ycm9yIGZpbG1tYWtlciwgaGVyZS4gVGhleSBjb3VsZCBqdXN0IGtlZXAgdGhlIGFpcnBvcnQgYXMgY3JlZXB5IGJhY2tncm91bmQgZm9yIHNvbWUgZ29vZCwgb2xkIGZhc2hpb25lZCBFbGkgUm90aCBzdHlsZSB0b3J0dXJlIHBvcm4gY29uc3BpcmFjeS4gVGhleSBjb3VsZCBoYXZlIGEgYmx1ZSBob3JzZSBtYXNrIHdlYXJpbmcgc2VyaWFsIGtpbGxlciBzdGFsa2luZyB0aGUgZ3JvdW5kcywgb3IganVzdCBoYXZlIGFsbCB0aGF0IG1hc29uaWMvc2F0YW5pYy9OYXppIGNyYXAgYmUgdHJ1ZSBhbmQgbWFrZSBzb21lIHVuaG9seSBIaXRsZXIgcG9sdGVyZ2Vpc3QgKEhpbHRlcmdlaXN0PykgaGF1bnQgdGhlIGFpcnBvcnQuIEhlbGwsIGV2ZW4gaWYgdGhleSB0b29rIGEgdG90YWwgY2FtcCByb3V0ZSwgYXQgbGVhc3Qgd2UnZCBiZSB0cmVhdGVkIHRvIE5pY29sYXMgQ2FnZSAoeW91IGtub3cgaXQgd291bGQgYmUgaGltKSBydW5uaW5nIGZyb20gb2xkIEVsIE1lc3Rlbm8uIFRoZSAxODQ1IEFyY3RpYyBleHBlZGl0aW9uIG9mIENhcHRhaW4gU2lyIEpvaG4gRnJhbmtsaW4gZm91bmQgdGhpcyBvdXQgdGhlIGhhcmQgd2F5LCBhcyB0aGV5IHBlcmlzaGVkIHRvIHRoZSBsYXN0IG1hbiBpbiBhIGNvbmdhIGxpbmUgb2YgdHJhZ2VkeTogc2hpcHdyZWNrLCBkaXNlYXNlLCBsZWFkIHBvaXNvbmluZyBkdWUgdG8gYmFkbHkgdGlubmVkIGZvb2QgYW5kL29yIGZhdWx0eSBkaXN0aWxsZWQgd2F0ZXIgc3lzdGVtcywgYW5kIHRoZSBmYWN0IHRoYXQgdGhleSB3ZXJlIGRlc2VydGVkIGluIHRoZSBnb2RkYW1uIEFyY3RpYyB3aXRob3V0IGFkZXF1YXRlIGVxdWlwbWVudCwgZXZlbnR1YWxseSBkcm92ZSB0aGUgMTI5IHN0cm9uZyBncm91cCB0byBjYW5uaWJhbGlzbSBhbmQgYW4gZWFybHkgZ3JhdmUuIFRoYXQncyAuIGEgcHJldHR5IHNvbGlkIHBlcmZvcm1hbmNlLCBhcyBzdGlmZiB1cHBlciBsaXBzIGdvLgpUaGlzIGNvbWVzIGFzIGEgc3VycHJpc2UuIEkga25vdyBJJ3ZlIGdvdCBkZWNlbnQgbHVuZ3MsIGFuZCBnZXQgbW9yZSBleGVyY2lzZSB0aGFuIHRoZSBhdmVyYWdlIGJlYXIuIApSdWxlIDk6IFBsZWFzZSBkb24gcG9zdCBmYWxzZSBjbGFpbXMgb2YgY29udGVudCBvd25lcnNoaXAuIFRoaXMgcnVsZSBhcHBsaWVzIHRvIGJvdGggcG9zdHMgYW5kIGNvbW1lbnRzLgpUaGF0IHNob3VsZCBiZSBhIGh1Z2UgcmVkIGZsYWcgZm9yIHlvdSB0byBmaW5kIGEga25vY2tvdXQgYmxvdy4gCkNvbW1vbiBzZW5zZSB0ZWxscyB1cyB0aGF0IHRoZSBrZXkgdG8gc3VjY2VlZGluZyBpbiBhIHRyaWF0aGxvbiBpcyBzd2ltbWluZywgcmlkaW5nIG9yIHJ1bm5pbmcgYXMgZmFzdCBhcyBwb3NzaWJsZSAgIGJ1dCBvbmx5IHVwIHRvIGEgY2VydGFpbiBwb2ludC4gVW5sZXNzIHlvdSdyZSBjb21wZXRpbmcgaW4gYSBzcHJpbnQgdHJpYXRobG9uIChhIGZyYWN0aW9uIG9mIHRoZSBsZW5ndGggb2YgYW4gSXJvbm1hbiB0cmlhdGhsb24pLCB5b3UgY2FuJ3QgcG9zc2libHkgZ28gZnVsbCB0aWx0IGZvciB0aGUgZW50aXJlIHJhY2UuIApDb3Vuc2Vsb3IgUG9zaXRpb25zIFRoYXQgRG8gTm90IE5lZWQgTGljZW5zaW5nIGluIEFyaXpvbmEKSG93ZXZlciwgSSBhbHNvIGEgZ3Jvd24gYWR1bHQgd29tYW4sIGFuZCBJIGhhdmUgcGxlbnR5IG9mIGdyb3duIGFkdWx0IGZyaWVuZHMgd2hvIGFyZSBhbHNvIGF1dGlzdGljL2hhdmUgc2Vuc29yeSBpc3N1ZXMvYW54aWV0eSwgYW5kIGFsbCBvZiB1cyBmaW5kIHRoaXMgcnVsZSBzbyBwYXRyb25pemluZy4gV2UgYWxsIGJlZW4gYXV0aXN0aWMgZm9yID4xOCB5ZWFycyBub3cgICB3ZSBrbm93IHdoYXQgdXBzZXRzIHVzIGFuZCB3aGF0IHdlIGNhbiBoYW5kbGUsIGFuZCB3ZSBqdXN0IGEgYml0IHNpY2sgb2YgcGVvcGxlIHRlbGxpbmcgdXMgd2hhdCB3ZSBhcmUgYW5kIGFyZW4gYWJsZSB0byBkby4gTW9zdCBvZiB1cyBnb3QgZW5vdWdoIG9mIHRoYXQgaW4gc2Nob29sLgpXaGVuICh0aGUgcGVyY2VwdGlvbiBvZikgUnVwYSBkaXNzb2x2ZXMsIHRoZW4gc28gZG8gdGhlIGJvdW5kYXJpZXMgb2Ygb2JqZWN0cywgaW5jbHVkaW5nIG91ciBzZWx2ZXMuIFRoYXQgd2hlcmUgdGhlIHNheWluZyBvZiAiYmVjb21pbmcgb25lIHdpdGggZXZlcnl0aGluZyIgY29tZXMgZnJvbS4gSW4gcmVhbGl0eSBpdCBub3QgIm9uZSIgYmVjYXVzZSBldmVuIHRvIHNheSAib25lIiByZXF1aXJlcyBhIHBlcmNlcHRpb24gb2YgcnVwYS4KTWFueSB3YXlzLCB0aGUgcGVyZm9ybWFuY2VzIG9mIERvbmFsZCBUcnVtcCByZW1pbmQgbWUgb2YgbWFsZSBjaGltcGFuemVlcyBhbmQgdGhlaXIgZG9taW5hbmNlIHJpdHVhbHMgb3JkZXIgdG8gaW1wcmVzcyByaXZhbHMsIG1hbGVzIHNlZWtpbmcgdG8gcmlzZSBpbiB0aGUgZG9taW5hbmNlIGhpZXJhcmNoeSBwZXJmb3JtIHNwZWN0YWN1bGFyIGRpc3BsYXlzIHN0YW1waW5nLCBzbGFwcGluZyB0aGUgZ3JvdW5kLCBkcmFnZ2luZyBicmFuY2hlcywgdGhyb3dpbmcgcm9ja3MuIApJIGxldCBnbyBvZiBpdCBhcyBhIHJlZmxleCB3aGljaCBpcyBzb28gbXVjaCBwb3RlbnRpYWwgZm9yIGluanVyeS4gCiJZb3Ugc2VlLCB5b3Ugd291bGRuJ3QgZG8gaXQsIHdvdWxkIHlvdT8iIGhlIHNheXMsIGdyaW5uaW5nLiAiWW91J3JlIHRvbyBjb25zZXJ2YXRpdmUuIFdoZXRoZXIgSSB3b3VsZCBoYXZlIGdvbmUgZm9yIGl0IG9yIG5vdCBpcyBpcnJlbGV2YW50LiBZb3Ugd2VyZSBuZXZlciBnb2luZyB0byByaXNrIGNhbGxpbmcgbXkgYmx1ZmYsIGFuZCBJIGtuZXcgaXQuIFRoYXQncyBhbGwgSSBuZWVkIHRvIGJlYXQgeW91LgpGaW5pbmcgTWFuYWZvcnQgJDUwLDAwMC4gVGhhdCByaWdodC4gVGhpcyBqdWRnZSBiZWxpZXZlcyB0aGF0IGlmIHlvdSBzdGVhbCB0ZW5zIG9mIG1pbGxpb25zIG9mIGRvbGxhcnMgZnJvbSB0aGUgVVMgZ292ZXJubWVudCwgYWxsIHlvdSBoYXZlIHRvIGRvIGlzIHBheSBpdCBiYWNrLCBwbHVzIGZpZnR5IHRob3VzYW5kIGRvbGxhcnMuCklmIHlvdSB3YW50IHRvIHZlbnR1cmUgb2ZmIHN0cmlwLCBTdXNoaSBIb3VzZSBHb3llbW9uIGFuZCBVbWl5YSBTdXNoaSBkbyBhbWF6aW5nIEFZQ0Ugc3VzaGkgZGVhbHMuIEppbnlhIGlzIGEgZGVsaWNpb3VzIHJhbWVuIHBsYWNlLiAKVGFsaWEgbW90aXZhdGlvbiBpcyBhIG11dHVhbCBiZW5lZml0LCBiZWNhdXNlIE9saXZlciBraWxsZWQgaGVyIGZhdGhlci4gRXZlbHluIHBhcmVudCBkaWVkIGFzIGFuIGluZGlyZWN0IGFjdGlvbiBvZiBPbGl2ZXIuIApXZWxsIGl0IHNlZW1zIHRoYXQgYmVjYXVzZSBJIHN0YXJ0ZWQgcHViZXJ0eSBlYXJseSwgYW5kIGhhdmUgaGFkIG1vcmUgdGhlbiAzIE1DcywoIEkgZGlkbid0IGV2ZW4ga25vdyB0aGF0IHRoZXJlIHdhcyBzb21lIHNvcnQgb2YgTUMgKG1pc2NhcnJpYWdlKSBjb3VudCBjaGFydCwgd2hlcmUgSSB3YXMgcmFpc2VkIHNvIG1hbnkgd29tZW4gaW4gbXkgZmFtaWx5IGhhZCB0aGVtIG5vIG9uZSBoYXMgZXZlciBzYWlkIGhleSB0aGF0J3Mgbm90IG5vcm1hbC4pIGFuZCBiZWNhdXNlIG15IG9sZGVyIHNvbiBoYXMgYSBoZWFydCBjb25kaXRpb24sIHRoYXQgSSBtYXkgaGF2ZSBiYWQgZ2VuZXMuIApMYXdtYWtlcnMgYXJlIGF3YXkgZnJvbSBXYXNoaW5ndG9uIGZvciB0aGUgaG9saWRheXMgYW5kIGhhdmUgYmVlbiB0b2xkIHRoZXkgd2lsbCBnZXQgMjQgaG91cnMnIG5vdGljZSBiZWZvcmUgaGF2aW5nIHRvIHJldHVybiBmb3IgYSB2b3RlLiBBbmQgYWx0aG91Z2ggYm90aCB0aGUgSG91c2UgdGhlIFNlbmF0ZSB3ZXJlIHNsYXRlZCB0byBjb21lIGludG8gc2Vzc2lvbiBicmllZmx5IFRodXJzZGF5IGFmdGVybm9vbiwgZmV3IHNlbmF0b3JzIG9yIHJlcHJlc2VudGF0aXZlcyB3ZXJlIGV4cGVjdGVkIHRvIGJlIGFyb3VuZCBmb3IgaXQuCkluIHRoZSBjYXNlIG9mIGEgTGFzIFZlZ2FzIGVzY29ydCBzZXJ2aWNlLCBhbiBlc2NvcnQgb3IgY2FsbCBnaXJsIG1heSBkZWNpZGUgdG8gb2ZmZXIgc2VydmljZXMgYXMgYSB3YXkgdG8gb2J0YWluIG1vcmUgbW9uZXkgZm9yIGEgam9iLiBBY2NvcmRpbmcgdG8gdGhlIENEQywgdGhlIGF2ZXJhZ2UgTGFzIFZlZ2FzIGVzY29ydCBzZXJ2aWNlIHdpbGwgY2hhcmdlIGJldHdlZW4gJDI1MCBhbmQgJDQ1MCBwZXIgaG91ci4gClNvbWVib2R5IGZyb20gQ2FsaWZvcm5pYSBjb3JyZWN0IG1lIGlmIEkgd3JvbmcsIGJ1dCB0aGUgd2F5IEkgdW5kZXJzdGFuZCBpdCwgdGhleSBjYW4gZG9jayB5b3UgZm9yIHRoZSBzaGlmdCB5b3Ugc2tpcHBlZCwgYnV0IGlmIHlvdSB3b3JrZWQgaXQgdGhlbiB0aGV5IG5lZWQgdG8gcGF5IHlvdS4KUG9saWNlIGRvIHNheSB0aGF0IHRoZXJlIHdlcmUgc3VydmVpbGxhbmNlIGNhbWVyYXMgYXQgdGhlIGdhcyBzdGF0aW9uOyBob3dldmVyIGl0IHJlbWFpbnMgdW5jbGVhciB3aGV0aGVyIHRoYXQgZm9vdGFnZSB3aWxsIG9mZmVyIGFueSBjbHVlcyBhcyB0byB0aGUgaWRlbnRpdHkgb2YgdGhlIHN1c3BlY3QuClRoZW4gb2YgY291cnNlIHRoZXJlIGFyZW4ndCB2ZXJ5IG1hbnkgb2YgdGhlc2UgYXZhaWxhYmxlIGFjcm9zcyB0aGUgaW50ZXJuZXQuIFdlIGZvdW5kIG91dCB0aGF0IHRoZXJlIGlzIGEgbGltaXRlZCBzdXBwbHkgdGhhdCBpcyBvbmx5IGV4Y2x1c2l2ZSBpbiBhIGZldyBwbGFjZXMuIEluIGZhY3QsIGZvciB0aG9zZSBvZiB5b3Ugb3V0IHRoZXJlIHdobyBhcmUgY29sbGVjdG9ycywgdGhlIDI0MCBDaGlwIE5leEdlbiBQUk8gQ2xhc3NpYyBTdHlsZSBQb2tlciBTZXQgV2l0aCBXb29kIENhc2Ugd2lsbCBpbmNyZWFzZSBpbiB2YWx1ZSBvdmVyIHRpbWUuIERlZmluaXRlbHkgc29tZXRoaW5nIHRvIGNvbnNpZGVyLCBidXQgaW4gb3VyIGNhc2Ugd2Ugd2FudGVkIHRoZSB0b3VybmFtZW50IHRvIGJlIGEgYml0IG1vcmUgdW5pcXVlIHRoYW4gYWxsIHRoZSByZXN0IGFyb3VuZCB0aGUgYXJlYS4KU3J5KSBDKysgbWFrZXMgdXAgdGhlIGZhY2Ugb3Igc3BpbmUgb2YgbWFueSBNYW55IHByb2dyYW1zLiAKU2hlIGFsc28ga2VlcHMgdHJhY2sgb2YgaGVyIG1lYXN1cmVtZW50cywgdGhlcmUncyBhIGxvdCBvZiBpbmNoZXMgbG9zdC4gSSBjYW4gdG90YWxseSB1bmRlcnN0YW5kIHdoZXJlIHlvdSdyZSBjb21pbmcgZnJvbSBpbiB5b3VyIGRvdWJ0LCBidXQgSSBoYWQgdG8gc2hhdHRlciB0aGF0IGRvdWJ0LiBTaGUgaXMgZGVkaWNhdGVkIHRvIGtldG8sIGNvb2tzIDMgbWVhbHMgYSBkYXkgZm9yIGhlciBodXNiYW5kLCBoaXRzIHRoZSBneW0gcmVndWxhcmx5IGFuZCB3ZSdyZSB0YWtpbmcgYSB2YWNhdGlvbiBpbiAyIGRheXMgKG9tZyBzbyBzb29uISkgdG8gY2VsZWJyYXRlIGhlciAxMDBsYnMgbG9zdC4gSSBwcm9taXNlIGl0J3MgcmVhbCBhbmQgc2hlJ3MgYSB0cnVlIGJhZGFzcyEhIApJbiBjYXNlIHlvdSB3ZXJlIGN1cmlvdXMuIApUZSBkZW1lbnN0cmV0ZTogRW4gRW5nbGVzaCBlZiBFIHJlbWV2ZSBlbGwgdmV3ZWxzIGV4Y2VwdCBlbmUsIGV0IGVzIHN0ZWxsIGxlZ2VibGUsIGhlcGVmZWxseS4gRW4gSGVicmV3LCBlbGwgeWVlIG5lZWQgZXMgZSB2ZXdlbCBtZXJrZXIuIEVuIHRoZXMgY2VzZSBFJ20gZXNlbmcgdGhlIGxldHRlciAnZScuIEV0J3MgZGVmZmVjZWx0IGVuIEVuZ2xlc2ggZW5seSBiZWNlZXNlIEVuZ2xlc2ggaGVzIGNlbXBsZWNldGVkIHZld2VsIHN0cmVjdGVyZXMsIEhlYnJldyBoZXMgbWVjaCBlZXNlZXIgc3BlbGxlbmcgcmVsZXMgYmVjZWVzZSB0aGUgbWVlbmVuZyBlZiB0aGUgd2VyZCBjZW4gZWVzZWx5IGJlIGZlZW5kIGVuIHRoZSB0aHJlZSBsZXR0ZXIgcmVldHMgZWYgdGhlIHdlcmQuClNvIHlvdSBoYXZlIHRvIGZpZ3VyZSBvdXQgaG93IHRoYXQncyBoYXBwZW5pbmcuIEl0J3MgYmVlbiB1c2VmdWwgdG8gc2VlIGhvdyBwZW9wbGUgcmVhY3QgdG8gbWUgcGVyc29uYWxseS4gCkkgYWx3YXlzIGp1c3QgdGhvdWdodCBJIHdhcyBydW5uaW5nIHRlcnJpYmxlIGFuZCB0aGF0cyB3aHkgSSB3YXMgbG9zaW5nLiAKIkFuZCB0aGVuIEkndmUgZ290IGFub3RoZXIgZ3VpdGFyIHBsYXllciBuYW1lIEJyZW50IExvb2sgd2hvIGlzIGFjdHVhbGx5IGlzIG15IHNvbidzIGFuZCBteSBuZXBoZXcncyBtdXNpYyB0ZWFjaGVyIGFuZCBhIHJlYWxseSBncmVhdCBndXkuIEhlIHdhcyBpbiBiYW5kcyBpbiB0aGUgJzgwcyBhbmQgaGFzIGdvdHRlbiBpbnRvIG11c2ljIGVkdWNhdGlvbiBhbmQgdGVhY2hpbmcgeW91bmcgcGVvcGxlIHRoZSBwYXNzaW9uIGFuZCB0aGUgYXJ0IG9mIG11c2ljLCBhbmQgd2UganVzdCBoaXQgaXQgb2ZmIGFzIHdlJ3JlIGphbW1pbmcgd2l0aCBteSBib3lzLCBhbmQgSSB3YXMgc2VlaW5nIHRoZW0gZ3JvdyBhbmQgZGV2ZWxvcCBhbmQgd2UgYmVnYW4gd3JpdGluZyBzb21lIHNvbmdzIHRvZ2V0aGVyLi4gCkkgdGVsbCB0aGUgd29tYW4gdGhhdCB0aGUgYmFyaXN0YSBleHBsYWluZWQgaXQgdGhlIGJlc3Qgd2F5IHNoZSBjb3VsZCBhbmQgSSBjb3VsZG4gcmVhbGx5IGV4cGxhaW4gaXQgYmV0dGVyIHRoYW4gaGVyLiAKRXZlbiBpZiB0aGUgZXhlcmNpc2VzIGFyZSBzaW1pbGFyLCBzaGUnbGwgc3dpdGNoIHVwIHRoZSBtYWNoaW5lcyBvciB3aWxsIHRocm93IGluIGEgc3RhYmlsaXR5IGVsZW1lbnQsIG9mZmVyaW5nIHZhcmlldHkuIApQbGVhc2Uga25vdyBKdWR5IHRoYXQgbXkgdGhvdWdodHMgYXJlIHdpdGggeW91IGFuZCB5b3VyIGZhbWlseSBhdCB0aGlzIHNhZCB0aW1lLiAKU28gaW4gdGhhdCBjYXNlLCB5b3UgYmFzaWNhbGx5IGJlIHJlbHlpbmcgb24gbHVjayB0byBnZXQgYSBkZWNlbnQgc3RhcnRpbmcgc3RhY2suIEkgcmVjb21tZW5kIGp1c3Qgc2l0dGluZyBkb3duIGF0IGEgdGFibGUgd2l0aCB3aGF0ZXZlciBhbW91bnQgeW91IGhhdmUsIHdhaXQgdW50aWwgeW91IGdldCBkZWFsdCBBQSwgS0ssIFFRLCBKSiwgVFQsIG9yIEFLLCB0aGVuIGdvIGFsbCBpbiBwcmVmbG9wLiAKSXQgd2FzIGJhc2ljYWxseSBhIGZpeGVkIGJhc2UgYnJvdGhlbCBpbiBhIHN0cmlwIG1hbGwuIFRocm91Z2ggdGhlIGVzY29ydCBzZXJ2aWNlLCBtYXNzZXVzZXMgd2VyZSBiZWluZyBkaXNwYXRjaGVkIHRvIGhvdGVscywnJyBMdXR6IHNhaWQuCkZpbmRlbiBuaWVkcmlnZSBQcmVpc2UgdW5kIFNwYXJhbmdlYm90ZSB6dSBGZXJuc2Voc2Vzc2VsIG1pdCBBdWZzdGVoaGlsZmUgU0VOSU9SIElJIDIwMTEgRWNodGxlZGVyIENSRU1FLiBCUkFORE5FVSBNT0RFTEwgMjAxMisgQW5zcHJ1Y2hzdm9sbGUgT3B0aWsrIFBlcmZla3RlciBLb21mb3J0IGluIHBlcmZla3RlbSBGZXJuc2Voc2Vzc2VsKyBLb21mb3J0YWJsZSBBcm1sZWhuZW4rIEtpbmRlcmxlaWNodGUsIHZvbGxlbGVrdHJpc2NoZSBWZXJzdGVsbHVuZysgUmNrZW5sZWhuZSArIEJlaW5iZXJlaWNoIGZhaHJlbiB2b2xsZWxla3RyaXNjaCwgc3R1ZmVubG9zIGluIGRpZSBnZXduc2NodGUgUG9zaXRpb24rIFZvbGxlbGVrdHJpc2NoZSBBdWZzdGVoaGlsZmUsIHNvIGRhc3MgZGllIFBlcnNvbiBnYW56IGVpbmZhY2ggYXVmc3RlaGVuIGthbm4gdW5kIHF1YXNpIGF1ZiBkaWUgQmVpbmUgZ2VzdGVsbHQgd2lyZC4gKERlciBNb3RvciBoZWJ0IGRlbiBTZXNzZWwgdW0gNThjbSBhbikuKyBUcmFuc3BvcnRyb2xsZW4gZnIgZWluZW4gc2VociBlaW5mYWNoZW4gVHJhbnNwb3J0KyAyIFRhc3RlbiBGZXJuYmVkaWVudW5nIGZyIGVpbmUgbWF4aW1hbCBlaW5mYWNoZSBCZWRpZW51bmcrIFN1cGVyIG1vZGVybmVzLCBvcHRpc2NoIGFuc3BydWNoc3ZvbGxlcyBEZXNpZ24rIFRvcCBWZXJhcmJlaXR1bmcgTm9ybWFscHJlaXM6IDE5OTksMDAgPyBUZWNobmlzY2hlIERhdGVuOiBNYWU6U2Vzc2VsIGF1ZnJlY2h0OiA5MCBjbSBUIHggOTIgY20gQiB4IDExNSBjbSBIU2l0emhoZTogNDcgY20gKER1cmNoIGRpZSBBdWZzdGVoaGlsZmUgYXVjaCBoaGVyIGVpbnN0ZWxsYmFyISlTaXR6bWE6IDUwIGNtIEIgeCA1OCBjbSBUTGllZ2VmbGNoZTogMTg1IGNtIEwgeCA1MCBjbSBCIChpbm5lbiBnZW1lc3NlbilSY2tlbmxlaG5lbmhoZSB2b20gU2l0eiBhdXMgZ2VtZXNzZW46IGNhLiA3OGNtTmVpZ3VuZ3NncmFkOiB2b24gOTAgYXVmcmVjaHQgYmlzIGNhLiAxNzUgbGllZ2VuZCBHZXdpY2h0OiBjYS4gRGllIFdhaGwgV29obnppbW1lciBNYmVsLCBkaWUgaW4gTW9kZSBpc3QgbWFuY2htYWwgc2Nod2llcmlnLCBhYmVyIGJld2Vpc2VuIGthbm4gZWluZmFjaCBzZWluLCB3ZW5uIHNpZSBtaXQgZGVyIHJpY2h0aWdlbiBQZmxlZ2UgdW5kIEdlZ2VubGVpc3R1bmcgZXJmb2xndC4gRXMgd2lyZCBlaW4gd2VuaWcgdmVyd2lycmVuZCwgZGEgZXMgc28gdmllbGUgdmVyc2NoaWVkZW5lIFNvcnRlbiB2b24gTWJlbG4genUgc29ydGllcmVuIGF1cyBzaW5kLgpUaGUgcmVzdGF1cmFudHMgYXJlIGFsc28gc21va2UgZnJlZSwgYW5kIHRoZXJlIGFyZSBub24gc21va2luZyByb29tcyBmb3Igb3Zlcm5pZ2h0IHN0YXlzLlRhbGtpbmcgU3RpY2sgUmVzb3J0IENhc2lubywgU2NvdHRzZGFsZTogVGhlIEFyZW5hIFBva2VyIFJvb20gYXQgVGFsa2luZyBTdGljayBDYXNpbm8gaXMgdGhlIHN0YXRlJ3MgbGFyZ2VzdCwgYW5kIGl0J3MgYWxzbyBub24gc21va2luZy4gUGxheSBhIGhhbmQgb3IgdHdvIGF0IHRoZSByb29tJ3MgNDcgdGFibGVzIGZlYXR1cmluZyBnYW1lcyBsaWtlIFN0dWQsIEhvbGQgJ2VtIGFuZCBPbWFoYS4gClNvbWUgb2YgdGhlIG9yZ2FuaXphdGlvbnMgYW5kIG9mZmljaWFscyB3aG8gYXBwbGF1ZGVkIFRydW1wIGZvciBzY3JhcHBpbmcgVFBQIGluIEphbnVhcnkgMjAxNyBjcmllZCBmb3VsLCBhY2N1c2luZyB0aGUgcHJlc2lkZW50IG9mICJiZXRyYXlpbmciIGhpcyBjYW1wYWlnbiBwcm9taXNlIGFuZCBBbWVyaWNhbiB3b3JrZXJzLgpBbnkgYWR2aWNlIG90aGVyIHRoYW4gdG8gZ2V0IGEgbmV3IGdpcmxmcmllbmQ/IEhvbmVzdGx5IGV2ZXJ5b25lIEkgYXNrIGluIG15IGxpZmUgc2F5cyBJIGRvbiBzZWUgd2h5IHNoZSBjYXJlcywgaXRzIGp1c3QgYSBob2JieS4gU2F5IHlvdSBnaXZlIHVwIHBva2VyLCBwcm9ibGVtIHNvbHZlZCByaWdodD8gVW5sZXNzIHNoZSBkZWNpZGVzIHNoZSBkb2VzbiB3YW50IHlvdSB0byBzZWUgeCBmcmllbmQgYW55bW9yZSwgb3IgZGVjaWRlcyB3YXRjaGluZyBzdXBlcmhlcm8gbW92aWVzIGlzbiBmb3IgeW91LCBwZXJoYXBzIHNoZSBkb2VzbiB3YW50IHlvdSBzcGVuZGluZyB5b3VyIG1vbmV5IG9uIGdvbGYgbGVzc29ucyBvciBhbnkgb3RoZXIgaG9iYnkgdGhhdCB5b3UgZW5qb3kuIFNoZSBjb3VsZCB2ZXJ5IHdlbGwgYmUgY29udHJvbGxpbmcgYW5kIGVtb3Rpb25hbGx5IG1hbmlwdWxhdGl2ZSBhbmQgaWYgc2hlIGNhbiBwdXQgZm9ydGggYSB2YWxpZCBhcmd1bWVudCBmb3IgeW91IHRvIHN0b3AgdGhlbiB5b3UgbmVlZCB0byBwdXQgeW91ciBmb290IGRvd24gb24gcHJpbmNpcGFsIGFsb25lLgpHcmV5c25lYWt0aGllZiB1ClRoZXJlIGRvZXNuIG5lZWQgdG8gYmUgYW55IHNwZWNpZmljIG5ld3MgdG8gbW92ZSB0aGUgbWFya2V0LCB0aGUgc2VudGltZW50IGlzIGdlbmVyYWxseSBuZWdhdGl2ZSBhYm91dCBjcnlwdG8gcmlnaHQgbm93LCBzbyBvdGhlciB0aGFuIHRoZSBvZGQgcmFsbHksIHRoZSBtYXJrZXQgaXMgZ29pbmcgdG8gY29udGludWUgdG8gYmxlZWQuIEFsbCB0aGUgcGVvcGxlIHRoYXQgYm91Z2h0IGF0IHRoZSB0b3AgdG9vayBhIGJhdGggYW5kIGFyZSBkaXNndXN0ZWQgd2l0aCB0aGUgbWFya2V0IHJpZ2h0IG5vdyBhbmQgbGlrZWx5IHdvbnQgYmUgcmV0dXJuaW5nIGZvciBhIHdoaWxlLiAKSSBkbyBhZ3JlZSB0aGF0IE9QIGhhcyBldmVyeSByaWdodCB0byBiZSB1cHNldCBhcyBoZSBkaWQgaW50ZXJydXB0IGhlciBhZnRlciBzaGUgY2xlYXJseSB0b2xkIGhpbSBub3QgdG8uIApPdGhlciBjaGVtaWNhbHMgYW5kIGZsYXZvcmluZyBhZ2VudHMgYWRkZWQgdG8gaXQgbWFrZSBpdCBhIHBvaXNvbiB3YXRlci4uIApMZXNlbiBTaWUgZGFzIEJ1Y2ggZnIgZnJlaWUgRGllIHBlcmZla3RlIE1hc2NoZSBtaXQuIE5laWwgU3RyYXVzczogRGllIHBlcmZla3RlIE1hc2NoZSAgIEJla2VubnRuaXNzZSBlaW5lcyBBdWZyZWllcnMuIE9yaWdpbmFsdGl0ZWw6IFRoZSBHYW1lLiAnVWxsc3RlaW4gVGFzY2hlbmJ1Y2gnLiAnVWxsc3RlaW4gU2FjaGJ1Y2gnLiA2LiBBdWZsYWdlLiAyNiBBdWcgMjAxOCAuIFRoZXkgbGl2ZSB0b2dldGhlciBpbiBob3VzZXMga25vd24gYXMgUHJvamVjdHMuIEFuZCBOZWlsLiBUaGVzZSBtZW4gcmVhbGx5IGV4aXN0LiBUaGV5IGxpdmUgdG9nZXRoZXIgaW4gaG91c2VzIGtub3duIGFzIFByb2plY3RzLiAKSGUgdmVyeSBjbGVhcmx5IGVzdGFibGlzaGVkIGFzIGFuIHVucmVsaWFibGUgbmFycmF0b3IgaW4gdGhlIExOIChsZXNzIHNvIGluIHRoZSBNYW5nYSkuIEhlIHNheXMgc2V2ZXJhbCB0aW1lcyB0aGF0IGhlIEtOT1dTIHRoZSBvdGhlciBIZXJvZXMsIE1vdG95YXN1LCBSZW4gYW5kIEl0c3VraSB3ZXJlIGJlaGluZCBpdCB0b28sIHRoYXQgdGhleSB3ZXJlIGFsbCBpbiBpdCB0b2dldGhlci4gSGVsbCwgZXZlbiByaWdodCBmcm9tIHRoZSBzdGFydCBhZnRlciBoZSBiZWVuIGJldHJheWVkLCBoZSBzbyBzdXJlIGV2ZXJ5b25lIGFyb3VuZCBoaW0gaXMgZ29pbmcgdG8gc2NyZXcgaGltIG92ZXIgdGhhdCBoZSBjaGFzZXMgYXdheSBldmVuIHBlb3BsZSB3aG8gbWlnaHQgaGF2ZSBoZWxwZWQuCkp1c3QgYXMgbW9tZW50dW0gcGVha2VkLCB3ZSBhbm5vdW5jZWQgb3VyIHN1YnNjcmlwdGlvbiBzZXJ2aWNlIHdpdGggYSB2aWRlbyBleHBsYWluaW5nIGNvbWVkaWNhbGx5IHdoYXQgd2Ugd2VyZSB1cCB0by4gV2UgYnJhY2VkIG91cnNlbHZlcy4gCkkgaGVhciBnb29kIHRoaW5ncyBhYm91dCB0aGUgTWFydmVsIHNob3dzIGJ1dCBoYXZlbiBnb3R0ZW4gaW50byB0aGVtIHlldCwgaXQgb24gYSBsb25nIGxpc3Qgb2Ygc3R1ZmYgdG8gd2F0Y2ggaGFoYS4gR29UIGlzIHdvbmRlcmZ1bCwgc28gZnJlYWtpbmcgZ29vZCEgVGhlcmUgYSBidW5jaCBvZiBzdHJlYW1pbmcgc2l0ZXMgSSBzdXJlIHlvdSBtaWdodCBiZSBhYmxlIHRvIGZpbmQgaXQgb24sIHRoZXJlIGlzIGFsc28gdGhlIG9wdGlvbiBvZiByZWFkaW5nIHRoZSBib29rcy4gSG93ZXZlciwgdGhlcmUgYXJlIG9mIGNvdXJzZSBkaWZmZXJlbmNlcyBpbiB0aGUgc2hvdyB2cyBib29rcy4gCkknbSBhIHRvdGFsbHkgc2VjdXJlIHBlcnNvbiBub3cgYnV0IEknbGwgbmV2ZXIgZm9yZ2V0IHRoYXQgc2hpdC4gCllvdSBzaG91bGQgc2VlIGEgd2hpdGUgY3Jlc2NlbnQgY2FsbGVkIHRoZSBsdW51bGEuIFRoZSBjdXRpY2xlIGlzIHRoZSBwaWVjZSBvZiBza2luIHRoYXQgb3ZlcmxhcHMgdGhlIGhhcmQgbmFpbCBhbmQgdG91Y2hlcyB0aGUgbHVudWxhLiAKU2V2ZXJhbCBvZiBteSBmYXZvcml0ZSBzaG93cyBhcmUgbm90IGF2YWlsYWJsZSBhdCBhbGwgaW4gbXkgY291bnRyeS4gQXNpZGUgZnJvbSB0aGUgYWJzb2x1dGUgYmlnZ2VzdCBzaG93cyBsaWtlIEdhbWUgb2YgVGhyb25lcywgaWYgeW91IGx1Y2t5LCBpdCBiZSBvbiBOZXRmbGl4IG9yIG91ciBsb2NhbCBzdHJlYW1pbmcgc2VydmljZXMsIG9ubHkgMiBvciAzIHNlYXNvbnMgYmVoaW5kIHdoYXQgY3VycmVudGx5IGFpcmluZyBpbiB0aGUgVVMsIGJ1dCB1c3VhbGx5IHRoZXJlIGlzIGxpdGVyYWxseSBubyBsZWdhbCB3YXkgdG8gd2F0Y2ggaXQuLiAKRGllIHNpbmQgaW4gOTksOTklIGRlciBGbGxlIGdhciBuaWNodCBnZWhybG9zLiBFaW5tYWwgKHZvciB2aWVsbGVpY2h0IDE1IEphaHJlbikgd2FyIGljaCBhYmVyIGluIG5lbSBSRSB1bnRlcndlZ3MgdW5kIGRhIHd1cmRlIHNvd2FzIGF1Y2ggdm9uIG5lciBGcmF1IE1pdHRlIDMwIHJ1bWdlcmVpY2h0LiAKSW4gbXkgam9iIEkgYWN0dWFsbHkgZ2V0IHRvIG1lZXQgZmFjZSB0byBmYWNlIHdpdGggdGhlbSBhbmQgZGlzY3VzcyBtZWRpY2FsIHJlY29yZHMsIGNvbmRpdGlvbnMgYW5kIHRyZWF0bWVudHMuIApUaGUgb25saW5lIGdhbWJsaW5nIG1hcmtldCBoYXMgc2VlbiBhbG1vc3QgZXhwb25lbnRpYWwgZ3Jvd3RoIHNpbmNlIGl0cyBodW1ibGUgYmVnaW5uaW5ncyBpbiB0aGUgbWlkIDE5OTAncy4gT25saW5lIGNhc2lubyBnYW1lcyBhbmQgc2xvdHMgaGF2ZSBoYWQgYW4gZXhwbG9zaXZlIGRldmVsb3BtZW50IHNpbmNlIHRoZXkgZmlyc3QgaGl0IHRoZSBpbi4KVGhlIGd1eSB0aGF0IHdlbnQgaG9tZSBoYXMgaGlzIHdpZmUgYXMgYW4gYWxpYmkuIAo0LiBOYWRlbDogTSByZSBzdHIuIHp3aXNjaGVuIHZvcmwuIHVuZCBsZXR6dGVyIE0gMSBNIGF1cyBkZW0gUXVlcmZhZGVuIHp1bi4KV2VhciBhIG1hc2ssIGJ1dCB0aGUgeWVsbG93IGFuZCBmaW5lIGR1c3QgZG9lcyBpbXByb3ZlIHNpZ25pZmljYW50bHkgaW4gQXByaWwuCllvdSBhcmUgc29sZWx5IHJlc3BvbnNpYmxlIGZvciB5b3VyIGNvbmR1Y3QgYW5kIHlvdXIgY29udGVudCBvbiB0aGUgTmV0d29yayBhbmQgY29tcGxpYW5jZSB3aXRoIHRoZXNlIHRlcm1zLiBCeSByZWdpc3RlcmluZyB3aXRoIHVzIG9yIHVzaW5nIG9yIGJyb3dzaW5nIHRoaXMgTmV0d29yaywgeW91IGFja25vd2xlZGdlIHRoYXQgeW91IGhhdmUgcmVhZCwgdW5kZXJzdG9vZCwgYW5kIGFncmVlIHRvIGJlIGJvdW5kIGJ5IHRoZXNlIHRlcm1zLiAKSWYgSSB3cml0ZSBhIHN0b3J5LCBJIGhhdmUgY3JlYXRlZCBzb21ldGhpbmcgdGhhdCBkaWRuIGV4aXN0IGJlZm9yZSAgdGhhdCBzdG9yeS4gSW4gZmFjdCwgcmlnaHQgbm93LCB5b3UgYW5kIEkgYXJlIGNyZWF0aW5nIHNvbWV0aGluZyB2YWx1YWJsZS4gCk5vdyB5b3Ugb25seSBoYXZlIGhhcmRjb3JlIHJhdGVkIHB2cGVycyh3aGljaCBmZXcgaW4gbnVtYmVycyBjb21wYXJlZCB0byBvdGhlciBmaWVsZHMgb2YgV29XKSArIGZldyBjYXN1YWwgcHZwZXJzIGhlcmUgYW5kIHRoZXJlLiAKQW55b25lIHdhbnRpbmcgMzAgbWludXRlcyBvZiBoZXIgdGltZSBoYWQgdG8gcGV0aXRpb24gaGVyIGRpcmVjdGx5LiAKV2hpbGUgdGhlIGZpcnN0IGNvdXBsZSBuaWdodHMgcGxheWluZyB3aXRoIHRoZSBDb21wbGV0ZSBDcmFwcyBTZXQgd2FzIGEgbGVhcm5pbmcgZXhwZXJpZW5jZSwgbW9zdCBvZiB1cyBhcmUgd2VsbCBpbmZvcm1lZCBhYm91dCB0aGUgQmFzaWMgQ3JhcHMgUnVsZXMgdG9kYXkuIFBlcnNvbmFsbHksIG15IGZhdm9yaXRlIGlzIHBsYXlpbmcgdGhlIHBhc3MgbGluZSwgZG91YmxpbmcgdXAgb24gaXQgd2hlbiBhIDYgb3IgOCBpcyByb2xsZWQsIGFuZCBwbGF5aW5nIHRoZSA2IGFuZCA4IGR1cmluZyByb2xscy4gRm9yIHNvbWUgcmVhc29uIHRob3NlIHR3byBjb21lIHVwIGxpa2UgY3Jhenkgd2hlbiB3ZSBwbGF5LCBzbyBnZXR0aW5nIHRoYXQgZXh0cmEgbW9uZXkgaXMgYSBuaWNlIGJvbnVzLiBVbmxlc3Mgb2YgY291cnNlLCBCcmFuZG9uIGlzIHJvbGxpbmcuClllYXJzIGxhdGVyIG15IG1vbSB3YXMgdXBzZXQgdGhhdCBJIGhhZCBsZXQgbXkgaGFpciBncm93IG91dCBhbmQgSSB3YXMgZXhwbGFpbmluZyBteSBhbnhpZXR5IHRvIGhlci4gU28sIHNoZSBhbmQgaGVyIHNpc3RlciBkaXNjdXNzZWQgaXQgYW5kIGZvdW5kIHRoZSBwZXJmZWN0IHBsYWNlLiBUaGV5IHRvb2sgbWUgdGhlcmUgYW5kIGRyb3BwZWQgbWUgb2ZmIGFzIGEgc3VycHJpc2Ugb25lIGRheS4gClBsZWFzZSBzYXkgYSBwcmF5ZXIgZm9yIHVzIGFzIHdlIGRlYWwgd2l0aCB0aGlzIHRyYWdlZHkgYW5kIGxvc3Mgb2YgYSBodWdlIHBhcnQgb2YgdGhlIGZhbWlseS4gClN0YXRlIEF0dG9ybmV5IERhdmUgQXJvbmJlcmcgc2FpZCBLcmFmdCB3aWxsIGJlIGlzc3VlZCBhIHN1bW1vbnMgdGhhdCBpcyBzaW1pbGFyIHRvIGEgdHJhZmZpYyB0aWNrZXQgYW5kIGFzc2lnbmVkIGEgZGF5IHRvIGFwcGVhciBpbiBjb3VydC4gTW9zdCBwZW9wbGUgY2hhcmdlZCBmb3IgdGhlIGZpcnN0IHRpbWUgd2l0aCBzb2xpY2l0aW5nIGFyZSBlbGlnaWJsZSBmb3IgYSBkaXZlcnNpb24gcHJvZ3JhbSB3aGVyZSB0aGV5IHBheSBhIHNtYWxsIGZpbmUsIHBlcmZvcm0gMTAwIGhvdXJzIG9mIGNvbW11bml0eSBzZXJ2aWNlIGFuZCBhdHRlbmQgYSBjbGFzcyB3aGVyZSB0aGV5IGxlYXJuIGFib3V0IHRoZSBkYW5nZXJzIG9mIHByb3N0aXR1dGlvbiBhbmQgaG93IGl0IGlzIG9mdGVuIHRpZWQgdG8gaHVtYW4gdHJhZmZpY2tpbmcuCkV2ZW4gaWYgYSBwbGFjZSBpcyBjb21wbGV0ZWx5IHNpbGVudCwgdGhlcmUgc3RpbGwgYmUgYSBtb3JvbiBzaG91dGluZyBpbnRvIGhpcyBwaG9uZSBsaWtlIGhlIHN0YW5kaW5nIGJlc2lkZSBhIGpldCBlbmdpbmUuSSd2ZSBoYWQgZmFyIGJldHRlciBleHBlcmllbmNlcyBpbiBTaGVuemhlbiB3aGVyZSBwZW9wbGUgYXJlIGZhciBtb3JlIHdlbGNvbWluZywgdGhlIHJlc3RhdXJhbnRzIGFyZSBiZXR0ZXIgYW5kIHRoZXJlIGlzIG1vcmUgc3BhY2UuIEl0J3MgdGVzdGFtZW50IHRvIEhvbmcgS29uZ2VycyBhcnJvZ2FuY2UgdGhhdCB0aGV5IGxvb2sgZG93biBvbiBNYWlubGFuZGVycy4gV2VsbCwgaGVyZSdzIG15IG9waW5pb24gICBhbmQgSSBoYXZlIG5vIGJpYXMgaW4gdGhlIG1hdHRlciAgIG1haW5sYW5kZXJzIGFyZSBtb3JlIHBvbGl0ZSB0aGFuIHlvdS4gCkVyZmFocnVuZ2VuIHVuZCB3ZWlzaGVpdGVuLCBtYW5jaGUgdm9sbGVyIGZyZXVkZSB1bmQgbWFuY2hlIGluIHRpZWZlbSBzY2htZXJ6IGdlc2FtbWVsdC4gV2Vpc2hlaXRlbiB1bmQgd2VnZSwgZGVuZW4gaWNoIGlubmVuIG9kZXIgYXVlbiBiZWdlZ25ldCBiaW4gdW5kIGRpZSBtaWNoIGJlZ2xlaXRldCBoYWJlbiwgZGFzIHp1IHNlaW4sIHdhcyBpY2ggbnVuIGJpbiAgIGRhcyB2ZXIgcmNrdGUgd2lsZGUgd2VpYiAgIGRhcyB2ZXJzcGllbHRlIGtpbmQgICBkaWUgcmVpZmUgZnJhdSAgIGRlciBtZW5zY2ggYXVmIGVyZGVuLiAKV2l0aG91dCBpbnRlcm5hdGlvbmFsIGF0dGVudGlvbiBhbmQgc2NydXRpbnksIGRlbW9jcmF0aWMgZWxlY3Rpb25zIHdvdWxkIGhhdmUgbmV2ZXIgdGFrZW4gcGxhY2UgZm9yIHRoZSBmaXJzdCB0aW1lIGluIGRlbW9jcmFjeSB3YXMgbm90IHdvbiB0aHJvdWdoIGEgZGVjaXNpdmUgdmljdG9yeSBieSBpdHMgb3duIHBlb3BsZSwgaXQgaGFkIHRyZW1lbmRvdXMgaGVscCBmcm9tIHRoZSBpbnRlcm5hdGlvbmFsIGNvbW11bml0eSB3aGlsZSB0aGUgbWFqb3JpdHkgb2YgdGhlIGNvdW50cnkgZGlkbiBnaXZlIGEgc2hpdCB3aGV0aGVyIHRoZXkgd2VyZSBsaXZpbmcgaW4gYSBkaWN0YXRvcnNoaXAgYXMgbG9uZyBhcyB0aGV5IGhhZCBmb29kIG9uIHRoZWlyIHRhYmxlLiAKMTEsIDE5MTguIEl0cyBibG9vZHkgYmF0dGxlZ3JvdW5kcywgdGhlIFNvbW1lLCBWZXJkdW4sIHRoZSBNYXJuZSwgYW5kIG90aGVycywgc3RpbGwgZXBpdG9taXplIGFwcGFyZW50bHkgcG9pbnRsZXNzIGh1bWFuIHNhY3JpZmljZS4gCkN1bnRzLiAKTWFueSB5b3VuZyBlbnRyZXByZW5ldXJzLCBmaW5hbmNpbmcgaW4gdGhvc2UgZWFybHkgeWVhcnMgd2FzIGFuIHVwaGlsbCBiYXR0bGUgdW50aWwgdGhleSBnYWluZWQgdGhlaXIgZm9vdGluZywgaGUgYWRkcy4gCkhhbGYgb2YgYWxsIGN5YmVyc2VjdXJpdHkgYW5hbHlzdHMgd2l0aCBmb3VyIHRvIHNldmVuIHllYXJzIG9mIGV4cGVyaWVuY2UgZWFybiBsZXNzIHRoYW4gdGhpcyBhbW91bnQgYW5kIGhhbGYgZWFybiBtb3JlLiBUaGUgdG9wIDEwIHBlcmNlbnQgZWFybiAkMTEyLDEwOCBpbiAyMDE4LiAKSG93ZXZlciwgdGhlIFVuaW9uLCBiYWNrZWQgbm90YWJseSBieSBHZXJtYW55LCBkb2VzIG5vdCB3YW50IHRvIHB1cnN1ZSB0aGlzIG9wdGlvbiwgYXMgaXQgaXMgcmVsaWFudCBvbiBSdXNzaWFuIHJlc291cmNlcywgbm90YWJseSBvaWwgYW5kIGdhcywgZm9yIG1vcmUgdGhhbiBvbmUgdGhpcmQgb2YgaXRzIHN1cHBseS4gQ2FuYWRhIGlzIHBlcmZlY3RseSBwbGFjZWQgdG8gd29yayB3aXRoIHRoZSBFVSB0byBkaXZlcnNpZnkgaXRzIHJlc291cmNlIG5lZWRzIGZvciB0aGUgbXV0dWFsIGJlbmVmaXQgb2YgYm90aCBwYXJ0aWVzLCBib3RoIG9mIHdob20gYXJlIGNoYXJhY3Rlcml6ZWQgYnkgZGVtb2NyYWN5LCBhIGZyZWUgcHJlc3MgYW5kIHJ1bGUgb2YgdGhlIGxhdy4KSSBwcm9iYWJseSBicm91Z2h0IGJhY2sgc29tZSB1Z2x5IG1lbW9yaWVzIGZvciBoZXIuIApNaW5lIGFza3MgZm9yIGEgdW5pcXVlIHVzZXIgbnVtYmVyLCBjaGFyYWN0ZXJzIGZyb20gYSBQSU4gYW5kIGNoYXJhY3RlcnMgZnJvbSBhIHBhc3N3b3JkLCBhbmQgaWYgeW91IHdhbnQgdG8gZG8gbWFrZSBwYXltZW50IHRvIGFueSBuZXcgcGF5ZWUgeW91IG5lZWQgeW91ciBkZWJpdCBjYXJkLCBhIGNhcmQgcmVhZGVyIGFuZCB5b3VyIGNhcmRzIHBpbi4gWW91IGVudGVyIGEgbnVtYmVyIGdpdmVuIHRvIHlvdSBvbiB0aGUgd2Vic2l0ZSBpbnRvIHRoZSBjYXJkIHJlYWRlciB3aGljaCBnZW5lcmF0ZXMgYSBjb3JyZXNwb25kaW5nIG51bWJlci4gClF1YW5kIGplIHBlbnNlIHF1ZSBjZXMgY3JpbWluZWxzIHNvbnQgYXNzZXogYnRlcyBwb3VyIHMnYWZmdWJsZXIgZGUgdHJvaXMgY291Y2hlcyBhdSBtb2lucyBkZSBzbGlwIGNvbW1lIGRhbnMgbGUgY2FzIGRlIGwnYXR0ZW50YXQgQVpGIGRlIFRvdWxvdXNlLiAKQnR0RiBvbiBORVMgd2FzIG9uZSBvZiB0aG9zZSBwaWVjZSBvZiBzaGl0IGdhbWVzIHdoZXJlIHlvdSBoYWQgbGlrZSAzIGxpdmVzIHRvIGdldCB0aHJvdWdoIHRoZSBlbnRpcmUgZ2FtZSwgd2l0aCBubyBzYXZlcywgbm8gc2tpcCBjb2Rlcywgbm8gbm90aGluZy4gCkhlcmUgYW5vdGhlciBpbnRlcmVzdGluZyB0aGluZywgdGhlIEFraW5zIGFjY2VsZXJhdG9yIHdhcyBiYW5uZWQgYmVjYXVzZSB5b3UgZG9uIG5lZWQgdHdvIGhhbmRzIGFzIHRoZSB3aG9sZSBndW4gcmlkZXMgaW4gYSBjaGFzc2lzIGFuZCAiYXV0b21hdGljYWxseSIgY3ljbGVzIG9uIHNwcmluZyByZWNvaWwgZW5lcmd5IHRvIGJ1bXBmaXJlLiBTbyB0aGUgQVRGIGhhcyBhbHJlYWR5LCBwcmV2aW91c2x5IHNob3duIGhvdyB0aGV5IGRyYXcgdGhlIGxpbmUsIGJhc2VkIG9uIHRoZSBvcmlnaW5hbCBtZWNoYW5pY2FsIGRpZmZlcmVuY2Ugb2YgdGhlIGFjdGlvbi4KV2hlbiBJIGZpcnN0IGNhbWUgb24gYXMgbW9kIEkgd2FzIHBhc3Npb25hdGUgYWJvdXQgbWFraW5nIHRoaXMgYSB3ZWxjb21lIHBsYWNlIGZvciBldmVyeW9uZSBhbmQgcGFydGljdWxhcmx5IG1vcmUgd2VsY29taW5nIGZvciBLb3JlYW5zIHRoYW4gaXQgaGFkIGJlZW4sIGJ1dCBvdmVyIHRpbWUgSSByZWFsaXplZCB0aGlzIHdhc24gcG9zc2libGUgdG8gZW5mb3JjZSBpbiBhbiBldmVuIHJlbW90ZWx5IGNvbnNpc3RlbnQgZmFzaGlvbi4gCkdldCBhIGpvYiBub3Qgb24gdGhlIGJhc2lzIG9mIHlvdXIgY29ubmVjdGlvbnMgICB5b3VyIGZhdGhlciwgeW91ciBmcmllbmRzIG9yIHdoYXRldmVyICAgYnV0IG9uIHRoZSBiYXNpcyBvZiB5b3VyIHBlcmZvcm1hbmNlLiBXZSBoYXZlIGVxdWFsIG9wcG9ydHVuaXRpZXMgZm9yIHNjaG9vbGluZywgaGVhbHRoLCBhbmQgSSB3b3VsZCBzYXksIGxpZmUuCkkgbG92ZSBncmFwaGljIGRlc2lnbiBhbmQgZXZlbnQgcGxhbm5pbmcuIEkgdGVuZCB0byBiZSBwcm9qZWN0IG9yaWVudGVkLCBhbmQgYWN0dWFsbHkgd29yayBiZXR0ZXIgaW4gYSBmYXN0IHBhY2VkIGVudmlyb25tZW50IHRoYXQgYWN0aXZhdGVzIG15IHBhbmljIGJ1dHRvbnMsIGFsbG93cyBtZSB0byByZXNlYXJjaCBuZXcgdGhpbmdzIGFsbCB0aGUgdGltZSwgYW5kIHdvcmsgaW4gd2F5cyB0aGF0IGFyZSBsZXNzIDkgNSBhbmQgbW9yZSwgQUggSSBoYXZlIHRvIHRocm93IHRoaXMgdGhpbmcgdG9nZXRoZXIgaW4gYSB3ZWVrISEhISBJIHRoZW4gY2FuIHRha2UgYSB3ZWVrIG9yIHR3byBvZmYgYWZ0ZXIgYSBiaWcgZGVhZGxpbmUgaXMgbWV0LiBJdCB3b3JrcyBmb3IgbWUuIApMdWNpYVN0LiAKVW0gYXVmcyBUaGVtYSB6dXJjayB6dSBrb21tZW4sIGljaCBoYWJlIGFsc28gZGFzIFBhc3N3b3J0IGdlZnVuZGVuIHVuZCB3b2xsdGUgZWlnZW50bGljaCBtaXQgbWVpbmVuIHBhYXIgS3J0ZW4gZG9ydCBQTE84IHpvY2tlbi4gClByaW1ldmFsIE11ZGRJIHdhcyBoZXJlLCBwb3N0ZWQgcXVpdGUgYSBsb3QgYXMgUm95bW9uZG8uIEknbSBub3QgaGVyZSBtdWNoIGFueW1vcmUuIEkgZ290IGEgYml0IHRvbyB0aWVkIHVwIGluIHVuaW9uIHN0dWZmLCBhc3NvcnRlZCBsZWZ0aWUgc3R1ZmYgYW5kIGZlc3RpdmFscy4gTWlnaHQgYmUgYSBtaWRsaWZlIGNyaXNpcy4KQnV0IHllYWgsIEkgZG8gdGhpbmsgaWYgc2hlIHdhc24gb2Jlc2UgdGhlc2UgcGVvcGxlIHdvdWxkbiBnbyBvdXQgb2YgdGhlaXIgd2F5LCBkaWdnaW5nIHRvIGZpbmQgcmVhc29ucyB0byBkaXNzIGhlciAobGlrZSwgaGVyIG5vdCBiZWluZyBhcyB0YWxlbnRlZCBhIGRhbmNlciBhcyBNWiB3aGVuIHNoZSB3YXMgMTcgV0hPIEZVQ0tJTkcgQ0FSRVMgYW5kIHdobyBtYWtlcyBhIGNvbXBhcmlzb24gbGlrZSB0aGF0Pz8pLgpCdXQgaGF2aW5nIHdyaXR0ZW4gbXkgc3RvcnksIEkgZHJlYWQgaGF2aW5nIHRvIGZvbGxvdyB0aGUgcGljYXl1bmUgZGV0YWlscyBvZiBzdG9jayBtYXJrZXQgc3RydWN0dXJlLiBJdCdzIGJvcmluZyBhbmQgaXQncyBjb21wbGljYXRlZCBhbmQgdGhhdCBtYWtlcyBpdCBsZXNzIGxpa2VseSB0byBiZSBhIHN1YmplY3Qgb2YgcG9saXRpY2FsIGFjdGl2aXR5IGFuZCByZWd1bGFyIGFjdGl2aXR5LCBiZWNhdXNlIHBlb3BsZSBjYW4ndCB3cmFwIHRoZWlyIGhlYWRzIGFyb3VuZCBpdCBhbmQgdGhleSdyZSBib3JlZCBieSBpdC4gCiJJIGJlbGlldmUgeW91IHdoZW4gaGUgSEFTIGEgaGVhcnQsIiByZXRvcnRlZCBNaXNzIENvcm5lbGlhLiAiSSBzdXBwb3NlIHRoYXQncyB3aHkgc28gbWFueSB3b21lbiBraWxsIHRoZW1zZWx2ZXMgY29va2luZyBqdXN0IGFzIHBvb3IgQW1lbGlhIEJheHRlciBkaWQuIApJdCdzIGEgZ29vZCBib25kaW5nIGV4cGVyaWVuY2UgICBhIGdvb2Qgd2F5IGZvciB5b3UgYW5kIHlvdXIgYmFieSB0byBnZXQgdG8ga25vdyBlYWNoIG90aGVyIGFuZCBzcGVuZCBhIGJpdCBvZiBxdWFsaXR5IHRpbWUgdG9nZXRoZXIgU3R1ZGllcyBoYXZlIHN1Z2dlc3RlZCB0aGF0IHBoeXNpY2FsIGNvbnRhY3QgaXMgZ29vZCBmb3IgYmFiaWVzLCBpbXByb3ZpbmcgYnJlYXRoaW5nLCBjaXJjdWxhdGlvbiwgZGlnZXN0aW9uIGFuZCBncm93dGguIEl0IHByb3ZpZGVzIGEgZ29vZCBzb3VyY2Ugb2Ygc2Vuc29yeSBhbmQgbXVzY2xlIHN0aW11bGF0aW9uLCB3aGljaCBpcyBiZW5lZmljaWFsIGZvciBhbGwgYmFiaWVzLCBidXQgbWF5IGJlIHBhcnRpY3VsYXJseSBnb29kIGZvciBiYWJpZXMgd2l0aCBzcGVjaWFsIG5lZWRzLCBzdWNoIGFzIGRldmVsb3BtZW50YWwgZGlzYWJpbGl0aWVzIGFuZCBEb3duJ3MgU3luZHJvbWUuIApJdCBtaWdodCBiZSBwcmVmZXJhYmxlIGZvciB0aGVtIHRvIGRlY2FwaXRhdGUgdGhhdCBtb25zdGVyIHJhcGlkbHkgYW5kIGltcG9zZSB0aGVpciBvd24gcHVwcGV0LCByYXRoZXIgdGhhbiBhbGxvd2luZyB0aGVtIHRvIHN0YXJ0IGEgd2FyIHRoYXQgd2lsbCBzcHJlYWQgY2hhb3MgYWNyb3NzIHRoZSB3aG9sZSByZWdpb24uLiAKRXZvbHV0aW9uIGRvZXMgbm90IHJhbmsgc3BlY2llcyAgIHBlb3BsZSBhbmQgdGhlaXIgZGVzaXJlIHRvIGJlIHVuaXF1ZS9odW1hbiBleGNlcHRpb25hbGlzbSBpcyB3aGF0IGNhdXNlcyBzcGVjaWVzIHRvIGJlIGFjY29yZGluZyB0byB3aGF0ZXZlciB2YXJpYWJsZSB3ZSBleGNlbCBhdCAoaW4gdGhpcyBjYXNlLCB5b3UgdGFsa2luZyBhYm91dCBzbyB0aGF0IHRoZSB2YXJpYWJsZSkuIApZb3UgbmVlZCB0byBrbm93IHdoZW4gc29tZW9uZSBpcyBibHVmZmluZyB5b3UuIApUaGVyZSB3YXMgb25lIGR1bmsgdGhlIGVudGlyZSB5ZWFyIGFuZCB5b3UgY2FuIGJldCBJIG1pbGtlZCB0aGUgc2hpdCBvdXQgb2YgaXQuIEkgbG9vcGVkIGl0IG92ZXIgYW5kIG92ZXIgdG8gIkNPTUUgT04gQU5EIFNMQU0iLiBJIHN0b29kIGluIGZyb250IG9mIGFsbCB0aGUgcGxheWVycyBhbmQgcGFyZW50cyB3aGVuIHRoZXkgc2hvd2VkIGl0IGF0IHRoZSBlbmQgb2YgdGhlIHllYXIgYmFucXVldC4gClNoaXpueCB1ClRoZXJlIGlzIGEgY2xhc3NpYyBiZWxsIGN1cnZlIHRvIHRoZSBzcGVlZCB3aXRoIHdoaWNoIHBlb3BsZSBkZXRveCBtZXJjdXJ5LCBidXQgdGhlbiB0aGVyZSBpcyBsYXJnZSBwb3B1bGF0aW9uIChvdmVyIDEwIHBlcmNlbnQpIHRoYXQgZGV0b3hpZnkgbWVyY3VyeSB2ZXJ5IHNsb3dseS4gVGhlc2UgcGVvcGxlIG11c3QgbGltaXQgdGhlaXIgZXhwb3N1cmUgYW5kIG5lZWQgYWRkaXRpb25hbCBudXRyaWVudHMgdG8gaGVscCByZW1vdmUgbWVyY3VyeSBmcm9tIGJ1aWxkaW5nIHVwIGluIHRoZSBib2R5LjUpIFRoZSBrZXkgdG8gZGlhYmV0ZXMgcHJldmVudGlvbiBpcyBhIHN0cm9uZyBhbmQgcmVjZXB0aXZlIGNlbGwgbGlwaWQgbGF5ZXIuWW91IG5lZWQgc3VmZmljaWVudCBhbWlubyBhY2lkcyB0byBidWlsZCB0aGUgcHJvdGVpbiBzdHJ1Y3R1cmUgb2YgZWFjaCBjZWxsLiBBZGRpdGlvbmFsbHksIHlvdSBuZWVkIGFkZXF1YXRlIG9tZWdhIDMgZmF0cyB0byBidWlsZCB0aGUgbGlwaWQgbGF5ZXIgb2YgdGhlIGNlbGwuLiAKVG9uaWdodCBJIHdhbGtlZCBpbiBoZXJlIHRvIGdhbWJsZSBhbmQgSSB3ZW50IHdpdGggbXkgZ3V0IGFuZCBJIGhpdCBpdC4gSSB3YXMgYmVoaW5kIGFuZCBJIGFtIDEwMCUgcmVhZHkgdG8gZ28gd2FsayBvdXQgdGhlcmUgYW5kIHBsYXkgbGl2ZSB3aGVuIEkgbG9zZS4iIGV0Yy4gSSBlbmRlZCB1cCBjYXNoaW5nIGZvciAzcmQgdGhhdCBuaWdodCwgYW5kIG15IHdpc2UgZnJpZW5kIGluIHNlYXQgMTAgd2FzIG5vd2hlcmUgdG8gYmUgZm91bmQgYnkgdGhhdCBwb2ludCBvZiB0aGUgbmlnaHQuLiAKQW5vdGhlciByZWFkZXIgZGVjaWRlZCB0byB0YWtlIGlzc3VlIHdpdGggbXkgcmVjZW50IGNvbW1lbnRzIGFib3V0IHBvbGl0aWNhbCBjb3JyZWN0bmVzcyBvbiB0aGUgbWFzc2FnZSB0YWJsZSBhbmQgd2FudGVkIHRvIGRlbW9uc3RyYXRlIHdoeSBHIHN0cmluZ3MgY2FuIGxvb2sgcXVpdGUgYXR0cmFjdGl2ZSBvbiBtZW4uIApXZSBob2xkIHRoZXNlIHRydXRocyB0byBiZSBzZWxmIGV2aWRlbnQsIHRoYXQgYWxsIG1lbiBhcmUgY3JlYXRlZCBlcXVhbCwgdGhhdCB0aGV5IGFyZSBlbmRvd2VkIGJ5IHRoZWlyIENyZWF0b3Igd2l0aCBjZXJ0YWluIHVuYWxpZW5hYmxlIFJpZ2h0cywgdGhhdCBhbW9uZyB0aGVzZSBhcmUgTGlmZSwgTGliZXJ0eSBhbmQgdGhlIHB1cnN1aXQgb2YgSGFwcGluZXNzLiBUaGF0IHRvIHNlY3VyZSB0aGVzZSByaWdodHMsIEdvdmVybm1lbnRzIGFyZSBpbnN0aXR1dGVkIGFtb25nIE1lbiwgZGVyaXZpbmcgdGhlaXIganVzdCBwb3dlcnMgZnJvbSB0aGUgY29uc2VudCBvZiB0aGUgZ292ZXJuZWQsIFRoYXQgd2hlbmV2ZXIgYW55IEZvcm0gb2YgR292ZXJubWVudCBiZWNvbWVzIGRlc3RydWN0aXZlIG9mIHRoZXNlIGVuZHMsIGl0IGlzIHRoZSBSaWdodCBvZiB0aGUgUGVvcGxlIHRvIGFsdGVyIG9yIGFib2xpc2ggaXQsIGFuZCB0byBpbnN0aXR1dGUgbmV3IEdvdmVybm1lbnQsIGxheWluZyBpdHMgZm91bmRhdGlvbiBvbiBzdWNoIHByaW5jaXBsZXMgYW5kIG9yZ2FuaXppbmcgaXRzIHBvd2VycyBpbiBzdWNoIGZvcm0sIGFzIHRvIHRoZW0gc2hhbGwgc2VlbSBtb3N0IGxpa2VseSB0byBlZmZlY3QgdGhlaXIgU2FmZXR5IGFuZCBIYXBwaW5lc3MuIFBydWRlbmNlLCBpbmRlZWQsIHdpbGwgZGljdGF0ZSB0aGF0IEdvdmVybm1lbnRzIGxvbmcgZXN0YWJsaXNoZWQgc2hvdWxkIG5vdCBiZSBjaGFuZ2VkIGZvciBsaWdodCBhbmQgdHJhbnNpZW50IGNhdXNlczsgYW5kIGFjY29yZGluZ2x5IGFsbCBleHBlcmllbmNlIGhhdGggc2hvd24sIHRoYXQgbWFua2luZCBhcmUgbW9yZSBkaXNwb3NlZCB0byBzdWZmZXIsIHdoaWxlIGV2aWxzIGFyZSBzdWZmZXJhYmxlLCB0aGFuIHRvIHJpZ2h0IHRoZW1zZWx2ZXMgYnkgYWJvbGlzaGluZyB0aGUgZm9ybXMgdG8gd2hpY2ggdGhleSBhcmUgYWNjdXN0b21lZC4gClRvIG1lIGl0IGlzIGxpa2UgbGVhcm5pbmcgc29tZW9uZXMgbmFtZSBieSB1c2luZyBhIHRyaWdnZXIgICB5b3UgbWVldCBhIHdvbWFuIG5hbWVkIFN1c2FuIHdobyBoYXMgYSBzbWlsZSBhcyBicmlnaHQgYXMgdGhlIHN1bi4gVGhpbmsgdG8geW91cnNlbGYgZHVyaW5nIHRoZSBpbnRyb2R1Y3Rpb25zIHRoYXQgc2hlIGlzIFN1bm55IFN1c2FuLiAKSXQgaXMgbm90IHRoYXQgdGhleSBhcmUgYWZyYWlkIG9mIGJlaW5nIGNvbnZpbmNlZC4gClRoYXQgbWlnaHQgc291bmQgbGlrZSBhIHN0dXBpZCBxdWVzdGlvbiBhdCBmaXJzdCwgYnV0IHJld2F0Y2hpbmcgQ2FzaW5vIFJveWFsZSBnb3QgbWUgdGhpbmtpbmcuCkkgZG9pbmcgdGhpcyBmb3IgbWFueSByZWFzb25zICBwaHlzaWNhbCwgbWVudGFsLCBlbW90aW9uYWwsIGFuZCBzcGlyaXR1YWwuIEkgaGF2ZSBzbyBtYW55IGRpYWdub3NlcyB0aGF0IEkgc2hvdWxkIGJlIGEgdGVzdCBzdWJqZWN0IGluIGEgbGFiIHNvbWV3aGVyZS4gSSB3YW50IE1FLCBub3QgdGhpcyBidWdneSB2ZXJzaW9uLCBpZiB0aGF0IG1ha2VzIHNlbnNlLiAKMTAgeWVhcnMgYWdvLCBJIGhhZCBzZXJpb3VzbHkgY29uc2lkZXJlZCBlaXRoZXIgYSBGcmVuY2ggb3IgYW4gRW5nbGlzaCBidWxsZG9nLiBGb3Igd2hhdGV2ZXIgcmVhc29uLCBJIGVuZGVkIHVwIHdpdGggYSBwZWtpbmdlc2UvcG9tZXJhbmlhbiBtdXR0LiBBdCB0aGUgdGltZSwgbXkgY291c2luIGFscmVhZHkgaGFkIGFuIEVuZ2xpc2ggICBhIHllYXIgYW5kIHNvbWV0aGluZyBvbGQuIApQbGF5aW5nIHBva2VyIG9ubGluZSBpcyBmdW4gYW5kIEkgZGFiYmxlIGF0IGl0IGFzIHdlbGwgZnJvbSB0aW1lIHRvIHRpbWUuIEJ1dCwgbWFueSBwbGF5ZXJzIHNlZW0gdG8gZmVlbCB0aGF0IHBsYXlpbmcgaW4gYSBsaXZlIHRvdXJuYW1lbnQgaXMgdmVyeSBzaW1pbGFyIHRvIHBsYXlpbmcgb25saW5lLiBXZWxsLCBpdCBpcyBhbmQgaXQgaXMgbm90LiAKVGhlbiB5b3UganVzdCwgYWN0LCBzcGVhaywgYmVoYXZlLCBhbmQganVzdCBiZSBhd2FyZSBvZiB0aGUgcmVzdWx0cyB0aGF0IG9jY3VyLiBKdXN0IGxpa2Ugd2l0aCBwcmFjdGljZSwgYSBidW5jaCBvZiBzdGlja3Mgb24gdGhlIGZvcmVzdCBmbG9vciBiZWNvbWVzIGEgYnVsbGV0aW4gYm9hcmQgb2Ygd2hhdCBhbmltYWxzIGhhdmUgcGFzc2VkIHRocm91Z2ggaGVyZSwgdGhlIGNvbm5lY3Rpb25zIGJldHdlZW4gd2hhdCB0aGUgcGVvcGxlIHlvdSBhcmUgc29jYWxpemluZyB3aXRoIGFuZCBob3cgeW91IGFjdCB3aWxsIGJlY29tZSBvYnZpb3VzLiAKIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTYgaG91cnMgYWdvQ2hyaXN0aWFuIGJpZ290cnkgZG9lc24gY29tZSBmcm9tIHRoZSBiaWJsZSwgaXQgY29tZXMgZnJvbSBDaHJpc3RpYW5zLiBGb3IgZXhhbXBsZSwgQ2hyaXN0aWFuIGJpZ290cnkgYWdhaW5zdCB0cmFuc2dlbmRlcnMgZG9lc24gY29tZSBmcm9tIHRoZSBiaWJsZS4gVGhlIGJpYmxlIGRvZXNuIGV2ZW4gc2F5IGFueXRoaW5nIGFnYWluc3QgcGVkb3BoaWxpYS4gSW4gZmFjdCwgaXQgc2F5cyBpbiBOdW1iZXJzIDMxOjE3IDE4ICAgTm93IHRoZXJlZm9yZSBraWxsIGV2ZXJ5IG1hbGUgYW1vbmcgdGhlIGxpdHRsZSBvbmVzLCBhbmQga2lsbCBldmVyeSB3b21hbiB0aGF0IGhhdGgga25vd24gbWFuIGJ5IGx5aW5nIHdpdGggaGltLiAKV2F0ZXIgc2FmZXR5IGlzIG5vdCBzb21ldGhpbmcgdG8gYmUgdGFrZW4gbGlnaHRseS4gCkknbSBnbGFkIHlvdSBnZXQgaXQuIApLaWt1bWFzYW11bmUgSGlnaCBNb2lzdCBMb3Rpb24gKEV2ZXJ5IGRheSwgYnV0IHRoaXMgaXMgdGhlIGZpcnN0IHRoaW5nIEkgY3V0IGlmIEknbSBydW5uaW5nIGxvdyBvbiB0aW1lLiBJdCdzIG5pY2UsIGJ1dCBJJ20gbm90IHN1cmUgSSdsbCBidXkgaXQgYWdhaW4uKQpUaGUgc3VpdCBiYWNrIGluIE1hcmNoIGJ1dCBvbmx5IHJlY2VudGx5IHVuY292ZXJlZCBpdCBjbGVhciB0aGF0IE1hZ3VpcmUgd2FzIG5vdCBpbnZvbHZlZCBpbiBSdWRlcm1hbidzIHNjaGVtZSBpbiBhbnkgd2F5IGFuZCB3YXMgY29tcGxldGVseSB1bmF3YXJlIG9mIGhvdyB0aGUgYnVzaW5lc3NtYW4sIGN1cnJlbnRseSBzZXJ2aW5nIGEgMTAgeWVhciBmZWRlcmFsIHByaXNvbiBzZW50ZW5jZSBhZnRlciBwbGVhZGluZyBndWlsdHkgdG8gZml2ZSBjcmltaW5hbCBjb3VudHMsIGNhbWUgdXAgd2l0aCB0aGUgY3VycmVuY3kuIEhvd2V2ZXIsIHRoZSBzdWl0IGFsbGVnZXMgdGhhdCBNYWd1aXJlIG5ldmVydGhlbGVzcyB3cm9uZ2Z1bGx5IGFjY2VwdGVkIHRoZSBtb25leSBhbmQgc2hvdWxkIGhhbmQgaXQgYWxsIGJhY2sgb3Zlciwgd2l0aCBpbnRlcmVzdC4uIAooSSBzaG91bGQgYWxzbyBtZW50aW9uIHRoYXQgaGUgYWNjaWRlbnRhbGx5IGV4cG9zZWQgYSBsaXR0bGUgb2YgbXkgYXJlb2xhIGJlZm9yZSBpbiBhIHNlc3Npb24gbWFueSBtb250aHMgYWdvLCBidXQgd2hlbiBoZSBub3RpY2VkIGhlIHF1aWNrbHkgbW92ZWQgdG8gY292ZXIgaXQgYmFjayB1cCwgc28gSSBhc3N1bWUgaXQgd2FzIGp1c3QgYW4gYWNjaWRlbnQgICBoZSBkaWRuIGRvIHRoYXQgdGhpcyB0aW1lLikgSGUgdGhlbiBvZmZlcmVkIHRvIG1hc3NhZ2UgbXkgaW50ZXJjb3N0YWwgbXVzY2xlcyBhbmQgaGFkIG1lIHR1cm4gdG8gZWFjaCBzaWRlLCBhbmQgc2hvd2VkIGEgcGFydGljdWxhciBpbnRlcmVzdCBpbiBtb3ZpbmcgaGlzIGhhbmRzIGZyb20gbXkgbG93ZXIgYmFjayB0b3dhcmRzIHRoZSBzdGFydCBvZiBteSBidXR0IGNyYWNrIGFnYWluLiAKSSB0aGFua2Z1bCB0aG91Z2gsIGJlY2F1c2UgSSBuZXZlciBoYWQgYW55dGhpbmcgYnV0IHRydWx5IHdvbmRlcmZ1bCBhbmQgc3VwcG9ydGl2ZSBwYXJ0bmVycywgY3VycmVudCBvbmUgaW5jbHVkZWQuIEFuZCBvZiBjb3Vyc2UgcGFydCBvZiB0aGF0IGlzIGx1Y2ssIGJ1dCBwYXJ0IG9mIGl0IGlzIGRlZmluaXRlbHkgYWxzbyB0aGF0IHdhdGNoaW5nIG15IHBhcmVudHMgdGF1Z2h0IG1lIGEgbG90IGFib3V0IGJvdGggd2FybmluZyBzaWducyBhbmQgaG93IHRvIGNvbW11bmljYXRlIGFueSBjb25jZXJucyBJIGhhdmUuIApUaGUgZGlzcGxheSBoYWQgYmVlbiBwaWNrZWQgZnJvbSBhIHBpbGUgb2YgbG9vdGVkIGl0ZW1zIGJ5IGFuIHVubmFtZWQgQ29zdGEgUmljYW4gbWVyY2VuYXJ5IGZpZ2h0aW5nIHdpdGggTmljYXJhZ3VhbiBzb2xkaWVycyB3aGVuIGEgU29tb3phIGNvbXBvdW5kIGR1YmJlZCAiRWwgUmV0aXJlIiB3YXMgc2Fja2VkICJhdCB0aGUgdGltZSBvZiB0aGUgcmV2b2x1dGlvbiBpbiBOaWNhcmFndWEsIiBhY2NvcmRpbmcgdG8gdGhlIGFmZmlkYXZpdC4gSXQgc2FpZCB0aGUgbWVyY2VuYXJ5IGxhdGVyIHN3aXRjaGVkIHNpZGVzIHRvIGZpZ2h0IGZvciB0aGUgQ29udHJhcywgYmVmb3JlIHJldHVybmluZyB0byBDb3N0YSBSaWNhIGluIDE5NzkuClRoZSBkaXNwbGF5IGF0IFF1ZWVuIFZpY3RvcmlhIFBhcmsgb3Zlcmxvb2tpbmcgdGhlIEZhbGxzIGluY2x1ZGVzIG1vcmUgdGhhbiAxMjUgYW5pbWF0ZWQgbGlnaHRpbmcgZGlzcGxheXMgYW5kIHRocmVlIG1pbGxpb24gdHJlZSBhbmQgZ3JvdW5kIGxpZ2h0cyB3aXRoaW4gdGhlIE5pYWdhcmEgUGFya3MgV2ludGVyIFdvbmRlcmxhbmQuCkhlIG1vdmVkIHRvIEF1c3RyYWxpYSBhdCBhZ2UgMjQgdG8gc2thdGVib2FyZCBhbmQgYmVnYW4gd29ya2luZyBpbiB0aGUgY291bnRyeSBsYXJnZXN0IG5hdGlvbmFsIHJldGFpbGVyIG9mIHJlY3JlYXRpb25hbCBnZWFyLiBXYXMgYXNzaXN0YW50IG1hbmFnZXIgb2YgdGhlaXIgZGlzdHJpYnV0aW9uIHdhcmVob3VzZSB3aGVyZSBJIGJlZ2FuIHRvIHVuZGVyc3RhbmQgdGhlIGlucyBhbmQgb3V0cyBvZiBwcm9kdWN0LCBtb3ZpbmcgaXQgYW5kIGl0cyByZWFsIHZhbHVlLiBIZSBhbHNvIGRpZCBhIHBob3RvIHNob290IGFuZCBUViBjb21tZXJjaWFsIGZvciB0aGUgcmV0YWlsZXIgdGhhdCBzcGFya2VkIGFuIGludGVyZXN0IGluIGZpbG0uIApTbyBpZiB5b3Ugd2luLCBzYXksIGEgdGhvdXNhbmQgYnVja3MsIGluc3RlYWQgb2YgZ2l2aW5nIHlvdSBvbmUgJDEsMDAwIGNoaXAsIHdlJ2xsIGdpdmUgeW91IDEwICQxMDAgY2hpcHMsIGJlY2F1c2UgdGhlIGh1bWFuIGJyYWluIGRvZXNuJ3QgcmVhbGx5IHVuZGVyc3RhbmQgdGhlIHZhbHVlIG9mIG9iamVjdHMuIApBc3NlbWJseSBraXQgdmlvbGlucyBhcmUgaGFsZiBjb21wbGV0ZWQgKHVzdWFsbHkpIGxvdyBjb3N0IGZhY3RvcnkgaW5zdHJ1bWVudHMuLiAKRm9yIG1vcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGNvbXBhbnkncyBicm9hZCBwb3J0Zm9saW8gb2YgcHJvZHVjdHMsIHNvbHV0aW9ucyBhbmQgc2VydmljZXMsIHBsZWFzZSBjb250YWN0IHlvdXIgQ2FyZXN0cmVhbSByZXByZXNlbnRhdGl2ZSBvciBjYWxsIDg4OCA3NzcgMjA3MiBvciB2aXNpdC4gCkhlIGdldCBob21lIGFmdGVyIDEwIGJjIG9mIGhpcyBob3VycyBhbmQgZWF0IGRpbm5lciBpbiB0aGUgbGl2aW5nIHJvb20gd2hlcmUgaGlzIGRhdWdodGVyIHdhcyBzbGVlcGluZy4gCkZvciBzdGFydGVycywgYXBwcm94aW1hdGluZyBhIE5hc2ggZXF1aWxpYnJpdW0gaXMgbm8gbG9uZ2VyIGNvbXB1dGF0aW9uYWxseSBlZmZpY2llbnQuIEV2ZW4gaWYgeW91IGZvdW5kIG9uZSwgaXQgbm90IGNsZWFyIHlvdSB3YW50IHRvIHBsYXkgaXQuIEluIHR3byBwbGF5ZXIgemVybyBzdW0gZ2FtZXMsIGEgTmFzaCBlcXVpbGlicml1bSBndWFyYW50ZWVzIHlvdSB3aWxsIG5vdCBsb3NlIGluIGV4cGVjdGF0aW9uLCByZWdhcmRsZXNzIG9mIHdoYXQgeW91ciBvcHBvbmVudCBkb2VzLiAKQWxzbyB0aGVyZSBhcmUgbGF3cyBhYm91dCAiY291cGxlIHNhbGVzIiAoc29ycnksIGRvbiBrbm93IHRoZSBwcm9wZXIgbmFtZSBpbiBFbmdsaXNoKSwgd2hlcmUgeW91IGZvcmNlIHNvbWVvbmUgdG8gZ2V0IHNvbWV0aGluZyBpbiBvcmRlciB0byBidXkgc29tZXRoaW5nIGVsc2UuIApDcmFpZ3NsaXN0IG5vdyBoYXMgeW91ciBudW1iZXIKVGhlIGFydGljbGUgZ29lcyBpbnRvIHNvbWUgZ3JlYXQgZGV0YWlsIG9uIGl0LCB0aG91Z2ggSSBmb3VuZCB0aGlzIGN1cmlvdXMgYmVmb3JlIGFuZCBhZnRlciBhcnRpY2xlIChxdW90ZWQgYmVsb3cpIHRoYXQgZGVzY3JpYmVzIHRoZSBiaXNjdWl0cyBtYWRlIGJ5IGhhbmQgYW5kIHRob3NlIGJ5IG1hY2hpbmUuIE9uZSB0aGluZyB3YXMgY2VydGFpbjogdGhlIG1hY2hpbmVyeSBzYXZlZCB0aW1lIGluIGxhYm9yIGFuZCBhbHNvIHNlZW1zIHRvIGhhdmUgY3V0IGNvc3QgYnkgNzUlLiBJbiBhbnkgZXZlbnQsIEkgd2FudGVkIHRvIHNoYXJlIHRoZXNlIHR3byBlcGlzb2RlcyBpbiB0aGUgZWFybHkgc3RhZ2VzIG9mIHRoZSBpbnRyb2R1Y3Rpb24gb2YgbWFjaGluZXMgaW4gdGhlIG1hc3MgcHJvZHVjdGlvbiBvZiBmb29kLi4gCkl0IGNvc3RzIGEgYml0IHRvIGdldCB0aGUgdG9vbHMgdG9nZXRoZXIgYW5kIGNvc3RzIHNvbWUgdGltZSBhbmQgcGF0aWVuY2UgdG8gZ2V0IHRoZSBza2lsbCBzZXQgYnV0IGl0IHdlbGwgd29ydGggaXQuLiAKSGUgZ2V0cyB0byBob21lIHBsYXRlIHdoZXJlIGhpcyBzb24gaGFzIGFscmVhZHkganVtcGVkIG92ZXIgdGhlIGJhcnJpZXIgb25jZSBjb250YWN0IHdhcyBtYWRlIGFuZCB3YWl0aW5nIGZvciBoaW0gYXQgaG9tZSBwbGF0ZS4gSGlzIHNvbiB3YWl0cyBhbmQgQmFycnkgZ2V0cyBob21lLCBwdXRzIGhpcyBhcm1zIHVwIGluIHRoZSBhaXIgZHJhd2luZyBtb3JlIGF0dGVudGlvbiB0byBoaW1zZWxmICh0aG91Z2ggaGUgc2F5IGl0IHdhcyBmb3IgQm9iYnkpLiBZZXQgaGUgbmV2ZXIgZ2F2ZSBoaXMgc29uIGEgaHVnIG9yIGV2ZW4gYSBzbGFwIG9uIHRoZSBiYWNrIG9yIGEgcnViYmluZyBvZiBoaXMgaGVhZC4gSGlzIHNvbiBodWdnZWQgaGltIHdoaWxlIEJhcnJ5IGtlcHQgZm9jdXNlZCBvbiBvZiBjb3Vyc2UsIGhpbXNlbGYuIChBbmQgd2hlbiBoaXMgeW91bmcgZGF1Z2h0ZXIgY2FtZSBvdXQsIGhlIHB1dCBoaXMgYXJtIGFyb3VuZCBoZXIgZm9yIGFsbCBvZiBsaWtlIDIgc2Vjb25kcyBhbmQgY291bGRuIGV2ZW4gYm90aGVyIGxpZnRpbmcgaGVyIHVwLikKU3VzYW4gaXMgYSBib2FyZCBjZXJ0aWZpZWQgbWFzc2FnZSB0aGVyYXBpc3Qgd2l0aCAzMCsgeWVhcnMgb2YgZXhwZXJpZW5jZS4gU2hlIGhhc3dyaXR0ZW4gc2V2ZXJhbCBiZXN0IHNlbGxpbmcgdGV4dGJvb2tzIHVzZWQgYXJvdW5kIHRoZSBnbG9iZSwgcHVibGlzaGVkIG1hbnkgWW91VHViZSB2aWRlb3MsIGFuZCBpcyBwdXJzdWluZyBhIGRvY3RvcmF0ZSBpbiBFZHVjYXRpb24uIFNoZSBpcyBhbiBvdXRzdGFuZGluZyBlZHVjYXRvci9wcmVzZW50ZXIgYW5kIGhhcyBiZWVuIGdpdmVuIHRoZSBuaWNrbmFtZSB0aGUgIllvZGEgb2YgTWFzc2FnZSIgYmVjYXVzZSBvZiBoZXIgbWFzc2FnZSB3aXNkb20gYW5kIHRlYWNoaW5nIGV4cGVydGlzZS4gU3VzYW4gaXMgcGFzc2lvbmF0ZSBhYm91dCBtYXNzYWdlIHRoZXJhcHkgYW5kIG1hc3NhZ2UgZWR1Y2F0aW9uLgpTbW9rZSBmcmVlIGFuZCBvcGVuIDI0IGhvdXJzLCB0aGUgcG9rZXIgcm9vbSBhdCBBdGxhbnRpcyBvZmZlcnMgdGhlIHJlZ2lvbidzIGJlc3QgZ2FtZXMsIHByb21vdGlvbnMgYW5kIHRvdXJuYW1lbnRzIGluIGEgbHV4dXJpb3VzIEFBQSBGb3VyIERpYW1vbmQgcmVzb3J0LiBQbGF5ZXJzIGFyZSBzdXJlIHRvIGVuam95IGFjdGlvbiBwYWNrZWQgZ2FtaW5nLCB0YWJsZXNpZGUgZGluaW5nIGFuZCBhIHNlbGYgc2VydmljZSBiZXZlcmFnZSBiYXIuIEFuZCBmb3IgcGxheWVycyB3aG8gY2FuJ3QgbWlzcyBhIG1pbnV0ZSBvZiB0aGUgYWN0aW9uLCBmbGF0IHNjcmVlbiBUVnMgYXJlIHZpc2libGUgZnJvbSBldmVyeSBzZWF0LCBhbmQgb25seSBzdGVwcyBhd2F5IGZyb20gQXRsYW50aXMnIHdvcmxkIGNsYXNzIFJhY2UgU3BvcnRzIEJvb2suLiAKV2UgYXJlIG1lbiBhbmQgd2FycmlvcnMgYW5kIHdoZW4geW91IHZpc2l0IG1lIHlvdSB3aWxsIHJpZGUgbWUuIEkgYW0gR2FydGgsIHRoZSBmaXJlIGhvcnNlIGFuZCBJIHdpbGwgYnVjayB5b3Ugb2ZmISBUaGF0IGlzLCBhbmQgYWx3YXlzIHdpbGwgYmUgbXkgbWVkaWNpbmUuIApTQzIgaXMgYW4gYXN5bWV0cmljYWxseSBiYWxhbmNlZCBnYW1lIHNvIGl0IHdpbGwgbmV2ZXIgdHJ1bHkgYmUgYmFsYW5jZWQgYnV0IGNhbiB5b3UgYXQgbGVhc3Qgd2FpdCBhIGZ1Y2tpbmcgbW9udGggYmVmb3JlIGJpdGNoaW5nIGFuZCBjcnlpbmcgZXZlcnl3aGVyZT8gVGhlcmUgaGF2ZSBiZWVuIGluc3RhbmNlcyB3aGVuIHRoZSBnYW1lIHdhcyBzdGFsZSB3aXRob3V0IGEgYmFsYW5jZSBwYXRjaCBmb3IgbW9udGhzICh5ZWFycz8pIGFuZCBwZW9wbGUgc3RpbGwgbWFuYWdlZCB0byBjb21lIHVwIHdpdGggbmV3IHN0cmF0cyBhbmQgZXZlbiBjb21wbGV0ZWx5IHR1cm4gbG9zaW5nIG1hdGNodXBzIGFyb3VuZC4uIApUaGlzIGxlYWRzIHRvIG1vcmUgc2ltcGxlIGFuZCBub24gdmlvbGVudCByZXZlbGF0aW9uIG9mIHRoZSB2aWxsYWdlLiBUaGUgcGFydHkgc3BvdHMgYSBiZWF1dGlmdWwgeW91bmcgd29tYW4gd2l0aCBwYWxlIHNraW4gYW5kIHdoaXRlIGhhaXIgYXMgc2hlIHBpY2tzIGEgaGVyYnMgaW4gdGhlIHJhaW4uIElmIHRoZXkgYXBwcm9hY2ggaGVyIHRoZXkgd2lsbCBmaW5kIG91dCB0aGF0IHNoZSBjb2xsZWN0cyBtZWRpY2luZSBmb3IgaGVyIHNpY2sgZnJpZW5kLiAKU2VsZiBUcmVhdG1lbnQgVGVjaG5pcXVlcyBmb3IgdGhlIFVwcGVyIExlZ3MKRGVmaW5lIHlvdXIgd2luIGdvYWwgaW4gY2xlYXIgdGVybXMuIAoxMCB3b3VsZCBib29rbWFyayBhZ2FpbgpJdCBpcyBjbGVhciB0byBtZSB0aGF0IHlvdSB3YW50IHRoZSBzdXJ2ZXkgaXRzZWxmIHRvIGFuc3dlciB5b3VyIHF1ZXN0aW9ucy4gCkRlcyBvYnNlcnZhdGV1cnMsIGNvbW1lIERhbmllbCBHb2xlbWFuIHF1aSBhIGNyaXQgbGUgbGl2cmUgTCdJbnRlbGxpZ2VuY2UgcmVsYXRpb25uZWxsZSwgcmVtYXJxdWVudCBxdSdpbCBleGlzdGUgdW5lIGNvaHNpb24gc29jaWFsZSBhY2NydWUgYXUgc2VpbiBkZXMgZ3JvdXBlcyBvIGxlIHRvdWNoZXIgc2FpbiBlc3QgdmFsb3Jpcy4uIApNZWFud2hpbGUsIHdoYXRldmVyIGhpcyByZWFsIG1vdGl2ZXMgbWF5IGJlLCB3aHkgbm90IHRha2UgU2Fya296eSB2aWV3cyBhdCBmYWNlIHZhbHVlPyBUaGVyZSBpcyBtb3JlIHRoYW4gZW5vdWdoIHJlYXNvbiB0byB0aGluayBoZSBtYXkgaGF2ZSBhIHZhbGlkIHBvaW50LgpZZWFoLCBpdCB0aGUgbW9zdCBnZW5lcmljIGZhbnRhc3kgc2V0dGluZyB0aGF0IEkgZXZlciBzZWVuLiBDYXJib24gY29weSBvZiBUb2xraWVuIHdpdGggc29tZSBvZiB0aGF0IHBvc3QgR29UIGVkZ2UuIEFueSBmYW50YXN5IHdpdGggZWx2ZXMgYW5kIGR3YXJ2ZXMgdGhhdCBub3QgcGFydCBvZiBBRCBvciBUb2xraWVuIGF1dG9tYXRpY2FsbHkgZ2V0cyBhICJhcmUgeW91IGZ1Y2tpbmcgS0lERElORyBNRSBTVE9QIFdJVEggVEhJUyBTSElUIiBidXQgY291cGxlIHRoYXQgd2l0aCB0aGUgR2FyeSBTdHUsIGltbW9ydGFsIGdvcmdlb3VzIHNleCBnb2QgbWFpbiBjaGFyYWN0ZXIsIHRoZSBhZG9sZXNjZW50IG1hbGUgcG93ZXIgZmFudGFzeSBydW4gYW1vayBtYWluIGNoYXJhY3RlciwgYW5kIGl0IGp1c3QgYWJzb2x1dGVseSB1biBmdWNraW5nIGJlYXJhYmxlLiBXb3JzdCBmYW50YXN5IHN0b3J5IG9mIHRoZSBwYXN0IGRlY2FkZSwgaGFuZHMgZG93bi4KTm90IHRvIG1lbnRpb24gaGUgcmVxdWVzdGVkIHRvIGJlIHJlbGVhc2VkLiAKU2hhcmVzIG9mIG1ham9yIG9pbHNhbmRzIHByb2R1Y2VycyB0dW1ibGVkIGFsb25nIHdpdGggRW5icmlkZ2UsIGluY2x1ZGluZyBhIHNpeCBwZXIgY2VudCBmYWxsIGZvciBDZW5vdnVzIEVuZXJneSBJbmMuIHRvICQxMS40NCBwZXIgc2hhcmUsIGEgNiBwZXIgY2VudCBkcm9wIGZvciBDYW5hZGlhbiBOYXR1cmFsIFJlc291cmNlcyBMdGQuIHRvICQzNS42OCBlYWNoIGFuZCBhIDYgcGVyIGNlbnQgZHJvcCBmb3IgTUVHIEVuZXJneSBDb3JwLiB0byAkNS4xOSBlYWNoLgpJZiBhbnl0aGluZywgdGhleSBuZWVkIHRvIHNlZSBwZW9wbGUgbGlrZSB5b3UgYW5kIHlvdXIgZ2lybGZyaWVuZCBtb3JlIHRoYW4gYW55b25lLCBiZWNhdXNlIHJlYWwgbGlmZSBlbmNvdW50ZXJzIHdpdGggbm9uIHN0cmFpZ2h0IGNvdXBsZXMgb3V0IGFuZCBhYm91dCBkb2luZyB5b3VyIHRoaW5nIG1pZ2h0IGp1c3QgYnJvYWRlbiB0aGVpciBsaXR0bGUgaG9yaXpvbnMgYmV5b25kIHdoYXQgdGhlaXIgY3JhenkgcGFyZW50cyB3YW50IHRoZW0gdG8gYmUgY29uZmluZWQgdG8uCkVsc2V3aGVyZSBUYWdnZWQgICA3IFJhbmRvbSBUaGluZ3MgTW9udGFnZSBXb3JsZCEgQSBGYW1pbHkgTmVlZHMgWW91ciBMb3ZlLiBMZXR0ZXJzIG9mIFRoYW5rcyB0byBEci4gV29uZGVyZnVsICAgbGVhdmUgdGhlbSBoZXJlIE9wZW4gTGV0dGVyIHRvIHRoZSBOYXN0eSBOdXJzZSBGYWNlIFByZXNlbnRhdGlvbiBCaXJ0aCBSYW5kb20gRGVjZW1iZXIgTGlnaHRzIEFub3RoZXIgRmVlbGluZyBTdXJnZXJ5IFBvc3QgQSBHZW5lcmFsIEFuZXN0aGV0aWMgU3RvcnkgKGZvciBUb2tvcGhvYmljcykgQmVmb3JlICJGbG9yZXMiIEZsb3JlcyBGaXJleSBTdW5zZXQgSGVsZW4gTWlycmVuIFRva29waG9iaWEgQnJlYXRoaW5nIEFzaCBTYW4gRGllZ28gQWJsYXplIENvemEsIFdoZXJlIGFyZSBZb3U/ICJUaGUgQnVzaW5lc3Mgb2YgQmVpbmcgQm9ybiI6IFRoZSBJbXBhY3Qgb24gTWUgVGhpZ2hzIExvd3MgSG93ICJUaGUgQnVzaW5lc3Mgb2YgQmVpbmcgQm9ybiIgSXMgR29pbmcgTXkgU29uIEkgUm9vc3RlcnM/IFRoZSBWaWV3IE91dCBvZiBPdXIgUm9vbSBHb3JnZW91cyBXb21lbiBvZiBIYXdhaSdpIFBvaSBCYWxscyBTdHJlbmd0aCBSZXF1aXNpdGUgTHVhdSBQaWN0dXJlIExhYm9yIEJhbGxldCBSZWZsZWN0aW9uIFRNaW5nIENvbnRpbnVhdGlvbiBTdGlsbCBvbiBSYWNlIE1pZHdpZmVyeSBSYWNlIEJpcnRoIElzc3VlcyAoUGlnZ3lCYWNrIGZyb20gU2FnZUZlbW1lKSBXZSdyZSBTaG93aW5nICJUaGUgQnVzaW5lc3Mgb2YgQmVpbmcgQm9ybiEiIFRoZSBOZXh0IFRpbWUgWW91J3JlIE51cnNpbmcuIApUaGVyZSBhcmUgYSBmZXcgdGhpbmdzIHRoYXQgeW91IG11c3QgZG8gaW4gTmV3IFlvcmsgQ2l0eSBpbiBvcmRlciB0byBmdWxseSBlbmpveSB5b3VyIGRheS4uIApTdHJhdGVneSAxOiBUYWtlIHR3byBicmVha3MgYW4gaG91ci4gR3JhYiBhIGRyaW5rIGZyb20gdGhlIHdhdGVyIGZvdW50YWluLiBQb3Agb3ZlciB0byB0aGUgY3ViZSBuZXh0IGRvb3IgdG8gc2F5IGhpLiBPciBzaW1wbHkgc3RhbmQgYW5kIHN0cmV0Y2ggZm9yIGEgbWludXRlLiBBIEV1cm9wZWFuIEhlYXJ0IEpvdXJuYWwgc3R1ZHkgb2YgNSwwMDAgbWVuIGFuZCB3b21lbiBmb3VuZCB0aGF0IHRoZSBxdWFydGVyIHdobyB0b29rIHRoZSBtb3N0IGJyZWFrcyBkdXJpbmcgdGhlIGRheSB3ZXJlIDEuNiBpbmNoZXMgdGhpbm5lciB0aGFuIHRoZSBxdWFydGVyIHdobyB0b29rIHRoZSBsZWFzdC4KIkJhZCBCZWF0IEphY2twb3RzIiBhcmUgYmVpbmcgb2ZmZXJlZCBtb3JlIGFuZCBtb3JlLCAoQSBiYWQgYmVhdCB0YWtlcyBwbGFjZSB3aGVuIGEgcGxheWVyIGhhcyBhIGdyZWF0IGhhbmQgbGlrZSBmb3VyIDgncyB3aGljaCB3YXMgYmVhdGVuIGJ5IGEgZXZlbiBiZXR0ZXIgaGFuZCBsaWtlIGZvdXIgQWNlcy4gVGhlIGxvc2VyIGhhcyByZWNlaXZlZCBhIGJhZCBiZWF0LiksIGJ1dCB0aGVyZSBhcmUgZGlmZmVyZW5jZXMgc28gdGFrZSB0aW1lIHRvIGJlY29tZSBrbm93bGVkZ2VhYmxlIG9uIHRoZXNlIGFzIHdlbGwuIFRoZXkgY2FuIHJhbmdlIGZyb20gYSBmbGF0IGFtb3VudCBvZiBtb25leSBmb3IgdGhlIHBlcnNvbiByZWNlaXZpbmcgdGhlIGJhZCBiZWF0IHRvIG90aGVycyB3aGljaCBoYXZlIGEgcHJvZ3Jlc3NpdmUgamFja3BvdCB0aGF0IGNhbiBydW4gaW50byB0aGUgdGVucyBvZiB0aG91c2FuZHMuLiAKSGUgb25jZSB0b2xkIGEgZmVsbG93IGNvbmdyZXNzd29tYW4gdGhhdCBzaGUgd2FzIHRvbyB1Z2x5IGZvciBoaW0gdG8gcmFwZSBhbmQgc2FpZCB0aGF0IGhlIHdvdWxkIG5vdCBiZSBhYmxlIHRvIGxvdmUgYSBnYXkgc29uLgpUaGVyZSB3YXMgYSBwbGFjZSB0aGF0IHdlIGFsbCBjYWxsZWQgU2hhZHl0b3duIGhlcmUgaW4gTkouIEkgZG9uIHJlbWVtYmVyIHdoYXQgaXQgd2FzIG9mZmljaWFsbHkgY2FsbGVkLCBidXQgSSByZW1lbWJlciBpdCB3YXMgYXJvdW5kIE1vbnRnb21lcnksIE5KIGFuZCBJIHRoaW5rIGl0IGhhcyBzaW5jZSBiZWVuIGRlbW9saXNoZWQuIApPbiBTYXR1cmRheSBuaWdodCwgaGUgaGFkIGhvc3RlZCB0aGUgV2hpdGUgSG91c2UgQ29ycmVzcG9uZGVudHMgQXNzb2NpYXRpb24gZGlubmVyLCB3aGljaCB3YXMgYXR0ZW5kZWQgYnkgSG9sbHl3b29kIGNlbGVicml0aWVzLCB0b3Agam91cm5hbGlzdHMgYW5kIHBvbGl0aWNpYW5zLgpWZW51cywgYnJpZ2h0IGFuZCBzaWx2ZXJ5LCBzaG9uZSB3aXRoIGhlciBzb2Z0IGxpZ2h0IGxvdyBkb3duIGluIHRoZSB3ZXN0IGJlaGluZCB0aGUgYmlyY2ggdHJlZXMsIGFuZCBoaWdoIHVwIGluIHRoZSBlYXN0IHR3aW5rbGVkIHRoZSByZWQgbGlnaHRzIG9mIEFyY3R1cnVzLiAKTW9yZW92ZXIsIGxpa2UgdW5pdmVyc2FsbHkgcXVhbnRpZmllZCB0eXBlcywgZXhpc3RlbnRpYWxseSBxdWFudGlmaWVkIHR5cGVzIGFyZSBhbHNvIHN1YmplY3QgdG8gcGFyYW1ldHJpY3R5LiBGb3IgZXhpc3RlbnRpYWxseSBxdWFudGlmaWVkIHR5cGVzLCB0aGlzIHBhcmFtZXRyaWNpdHkgcmVsYXRpb24gbWFuaWZlc3RzIGl0c2VsZiBhcyBhbiBlcXVpdmFsZW5jZSByZWxhdGlvbiBiZXR3ZWVuIG1lbWJlcnMgb2YgdGhlIHR5cGUuIEluIG91ciBwYXJ0aWN1bGFyIGNhc2UsIHBhcmFtZXRyaWNpdHkgcmVxdWlyZSB0aGF0IGZvciBldmVyeSBmdW5jdGlvbiBmIDo6IHIxICA+IHIyLCAgOiBzICA+IChyMSAgYSkgYW5kICA6IChyMiAgYSkgID4gcyB0aGF0IHRoZSBwYWlycyAoZmlyc3QgZiAuIApBdCBsZWFzdCBwbGF5IHVudGlsIHRoZSBib3NzZmlnaHQgaW4gR3JlZW5wYXRoLi4gCkkgcHJvYmFibHkgc2hvdmluZyBoZXJlIHdoaWxlIEkgaGF2ZSBhbiBTUFIgdGhhdCBhIGJpdCBtb3JlIGZhdm9yYWJsZS4gCkRlIGNoYXNuZSBub3VzIHNvbW1lcyBwYXJ2ZW51cyAgY2huZSwgZGUgdGFubiAgdGFuaW4gKG91IHRhbm5pbiksIHByZW1pZXIgcHJpbmNpcGUgYWN0aWYgY29udGVudSBkYW5zIGNldCBhcmJyZS4gRCB1biBwYXNzYWdlIGRlIGwgbmF0dXJlbGxlIGRlIFBsaW5lIGwgcXVpIHMgc3VyIGwgZHUgZ3JlYyBkcnMsIGxlIG5vbSBtbWUgZGVzIGRydWlkZXMgZXN0IGVuIHJlbGF0aW9uIHR5bW9sb2dpcXVlIGF2ZWMgbGUgbm9tIGR1IGNobmUsIGQgbGEgdHJhZHVjdGlvbiBob21tZXMgZGUgY2huZSBxdWkgYSBzb3V2ZW50IHJ1c3NpICBzIGp1c3F1ZSBkYW5zIGwgbW9kZXJuZS4gTWFpcyBsZSBub20gZHUgY2huZSBlc3QgZGlmZnJlbnQgZGFucyB0b3V0ZXMgbGVzIGxhbmd1ZXMgY2VsdGVzLiAKV2VuZGkgaGFkIGFycmFuZ2VkIGEgaG90ZWwgZm9yIHRoZSBmaXJzdCBuaWdodCBhbmQgdGhleSBzZW50IGEgdGF4aSBmb3IgdXMuIEhlIGRyb3ZlIHVzIHRoZSA0NSBtaW51dGVzIHRvIGNlbnRyYWwgQW1tYW4sIGFuZCBhbGwgYXJvdW5kIHdlIGNvdWxkIHNlZSBwYWxtIHRyZWVzIGFuZCBnb3JnZW91cyBhcmNoaXRlY3R1cmUgKHdoaXRlIHN0dWNjbywgYmFsY29uaWVzLCBnYXRlcykgdGhhdCBtYWRlIHVzIHJlYWxseSBmZWVsIGxpa2Ugd2Ugd2VyZSBpbiB0aGUgTWlkZGxlIEVhc3QuIApTdHJhY2hhbiB3b24gdGhlIERlbW9jcmF0aWMgbm9taW5hdGlvbi4gSmltIENyYWJ0cmVlLCB3aG8gbG9zdCB0byBIZXR0IGluIHRoZSBQcmltYXJ5LCB3YXMgYWxzbyBub21pbmF0ZWQgYnkgcGV0aXRpb24gdG8gaGF2ZSBoaXMgbmFtZSBvbiB0aGUgYmFsbG90LiBTbyBpdCB3aWxsIGJlIGEgdGhyZWUgd2F5IHJhY2UgZm9yIHRoZSBEaXN0cmljdCAyIHNlYXQuIApGb3IgaW5zdGFuY2UsIGEgcGVyc29uIG1heSB3YW50IHF1aWNrIHJlbGllZiBmcm9tIGluc29tbmlhIGFuZCBjaG9vc2UgdG8gdGFrZSBhIHNsZWVwaW5nIHBpbGwgaWYgaGUgaGFzIHRvIGdvIG9uIGEgbG9uZyBkcml2ZSBzZXZlcmFsIGRheXMgZnJvbSBub3csIGFzIG9wcG9zZWQgdG8gbG9va2luZyBmb3IgYSBzbG93ZXIgYWN0aW5nIHJlbWVkeSAoc3RyZXNzIHJlZHVjdGlvbiB0ZWNobmlxdWVzLCBmb3IgaW5zdGFuY2UpIHRoYXQgbWF5IGV2ZW50dWFsbHkgYWRkcmVzcyB3aGF0IGNhdXNpbmcgdGhlIHNsZWVwbGVzc25lc3MuLiAKVGhlIGJlc3QgdGhlb3J5IGkgcmVhZCBzeWFzIHRoYXQgaW4gYSBodW5kcmVkIHllYXJzLCBtb3N0IGNvdW50cmllcyB3aWxsIGhhdmUgc3BhY2UgY29sb25pZXMsIHdoaWNoIHdpbGwgYmUgdXNlZCB0byBnYXRoZXIgZW5lcmd5IGFuZCBtaW5lcmFscy4gClRoZXNlIGFyZWFzIHdpbGwgYmUgbGl0IHVwIGFuZCB1bm1pc3NhYmxlLiBJZiB5b3Ugc2VlIHRoZSBCaWxsIEFjY2VwdG9yIG5vdCBsaXQsIG9yIGZsYXNoaW5nIGJsdWUsIGl0IGlzIGluIG5lZWQgb2Ygc2VydmljZSBvciB3aGF0IGlzIGNhbGxlZCBhIEJpbGwgRHJvcCBbZW1wdHlpbmcgb3V0IHRoZSBhY2NlcHRlZCBjYXNoIGFuZCBtYWtpbmcgaXQgcmVhZHkgdG8gYWNjZXB0IG5ldyBtb25leV0uIFByZXNzIHRoZSBIRUxQIG9yIFNFUlZJQ0UgYnV0dG9uIHRvIHN1bW1vbiBhbiBhdHRlbmRhbnQuLiAKQWxzbyB0YWtlIGNhdXRpb24gd2l0aCB0aG9zZSB0aGF0IHNwZWNpYWxpemUuIApMb2NhdGVkIG9uIFRlZCBSb2dlcnMgV2F5IChuYW1lZCBhZnRlciB0aGUgY29tcGFueSdzIGZvdW5kZXIpLCB0aGUgY29tcGFueSdzIGRvd250b3duIGhlYWQgb2ZmaWNlIGlzIGNvbXByaXNlZCBvZiAzIGJ1aWxkaW5ncyBhbmQgaXMga25vd24gYXMgUm9nZXJzIENhbXB1cywgdGhlIGNhbXB1cyBmZWF0dXJlcyBhIGNhbGwgY2VudHJlLCA0IHJhZGlvIHN0YXRpb25zLCB2YXJpb3VzIG1hZ2F6aW5lIHByb2R1Y3Rpb24gdW5pdHMsIHRoZSBTcG9ydHNuZXQgc3R1ZGlvLCBhIHB1YmxpYyBhcnQgY29sbGVjdGlvbiBvbiBkaXNwbGF5LCAyMjUgc2VhdCB0aGVhdHJlIGZhY2lsaXR5LCBkcnkgY2xlYW5pbmcgc2VydmljZXMsIHRlbGVjb21tdXRlciB3b3Jrc3RhdGlvbnMsIHNpdCBzdGFuZCB3b3Jrc3RhdGlvbnMsIHByaXZhdGUgcGhvbmUgYm9vdGgsIG5hcCByb29tLCByZWxpZ2lvdXMgb2JzZXJ2YW5jZSByb29tLCBvdXRkb29yIHBhdGlvLCBzZWxmIHNlcnZlIGx1bmNocm9vbSwgZGlzY291bnRzIGF0IGxvY2FsIHJlc3RhdXJhbnRzCkl0J3MgcHJldHR5IG9idmlvdXMsIGFzIHRoZSBzdGFrZXMgaW5jcmVhc2Ugc28gd2lsbCB0aGUgYWJpbGl0eSBvZiB0aGUgb3RoZXIgcGxheWVycywgc28gYmUgYXdhcmUgb2YgdGhpcy4gQXMgSSBzYWlkIGFib3ZlIHBva2VyIGlzIGEgbWl4dHVyZSBvZiBwdXJlIGx1Y2ssIHNraWxsIGFuZCBzdHJhdGVneSBidXQgaWYgeW91IGNhbiB0YWtlIG9uIGJvYXJkIGp1c3Qgc29tZSBvZiB3aGF0IGlzIHdyaXR0ZW4gYWJvdmUgdGhlbiB5b3Ugd2lsbCBjZXJ0YWlubHkgaW1wcm92ZS4gClNvIGl0IGNoZWNrZWQgdG8geW91IG9uIHRoZSBmbG9wIGFuZCB5b3UgYmV0ICQ1NSwgZ2V0IG9uZSBjYWxsZXIuIE5vdyB5b3UgaGF2ZSBhIGdvb2Qgc2Vuc2Ugb2YgdmlsbGFpbiByYW5nZSAoaGUgaGFzIG1lZGl1bSBvdmVycGFpcnMsIGEgZmV3IHNsb3cgcGxheWVkIHNldHMsIGFuZCBjcnlpbmcgY2FsbGVkIHNtYWxsZXIgUFBzLCBhbmQgbWF5YmUgQTlzKSwgYW5kIHdoZW4geW91IHBpY2sgdXAgZ3JlYXQgZXF1aXR5IG9uIHRoZSB0dXJuIHlvdSBjYW4gY2hlY2sgaXQgYmFjaywgZm9sZGluZyBvbiB0aGUgcml2ZXIgd2hlbiB5b3UgZG9uIGltcHJvdmUuIChVbmxlc3MgeW91IGhhdmUgYSByZWFsbHkgc3Ryb25nIHJlYWQgb24gdmlsbGFpbiBhbmQgYmVsaWV2ZSB5b3UgY2FuIG1vdmUgaGltIG9mZiBoaXMgcGFpciB3aXRoIGFub3RoZXIgYnVsbGV0IG9uIHRoZSB0dXJuKS4KU28gd2hlbiBvdXIgZGVhciBNYWluZXIgc2F5cyBibGFjayBwZW9wbGUgYXJlIGZhcm0gaW1wbGVtZW50cywgaGUgbWVhbnQgaXQuIApTZXZlcmFsIG90aGVyIGZhY3RvcnMgYnV0IEkgdGhpbmsgdGhvc2UgYXJlIHRoZSB0d28gYmlnZ2VzdC4gQSBoZWFsdGh5IGFuZCBsdWNyYXRpdmUgcG9rZXIgZWNvc3lzdGVtIHJlcXVpcmVzIGFuIGFidW5kYW5jZSBvZiBjYXN1YWwgbW9uZXkgY29taW5nIGluLiAKTW95bGFuIGxlYXZlcyB0aGUgVVMgYW5kIGFsbCBVUyBtZWRpYSBiZWhpbmQgZXZlcnkgT2N0b2JlciBhbmQgdmFjYXRpb25zIHNvbWV3aGVyZSBpbiBvdXRlciBzcGFjZSBiZWNhdXNlIEJsYWNrZmFjZSBpcyBhbGl2ZSBhbmQgd2VsbCBpbiB0aGUgVVMsIGVzcGVjaWFsbHkgb24gdGhlIHNjYXJpZXN0IG5pZ2h0IG9mIHRoZSB5ZWFyLCBIYWxsb3dlZW4uIApUaGlzIHF1ZXN0IGlzIGdyZWF0IGlmIHlvdSBoYXZlIGFsbCByb3VuZCBwYXJ0eSBhbmQgeW91IHdhbnQgdG8gaW50cm9kdWNlIHRoZW0gdG8gdGhlIGlkZWEgb2YgZXhwbG9yaW5nIHRoZSBteXN0ZXJpb3VzIHNhbmN0dWFyeS4gClRoZSBCaWtlIEhvdGVsIGlzIHJlYWxseSBleHBlbnNpdmUgYW5kIHRoZXJlIGlzIG5vdGhpbmcgdG8gZG8gYXJvdW5kIHRoYXQgc2lkZSBvZiB0aGUgY2l0eSB0byBiZSBob25lc3QuIEkgd291bGQgcmVhbGx5IHJlY29tbWVuZCBnZXR0aW5nIGFuIEFpckJuQiBhbnl3aGVyZSBvbiB0aGUgV2VzdCBTaWRlIG9mIExBLCBtYXliZSBWZW5pY2Ugc28geW91IGFyZSB3aXRoaW4gc2Nvb3RlcmluZyBkaXN0YW5jZSBvZiB0aGUgYmVhY2gvQWJib3QgS2lubmV5PyBUYWtpbmcgb25lIG9mIHRob3NlIHNpZGV3YWxrIHNjb290ZXJzIGFyb3VuZCB0aGUgYmVhY2ggd2FsayB3b3VsZCBiZSBmdW4gZm9yIGFueW9uZS4gU3RheWluZyBvbiB0aGUgd2VzdCBzaWRlIHdpbGwgYWxzbyBnaXZlIHlvdSBhY2Nlc3MgdG8gdGhlIGZyZWUgR2V0dHkgTXVzZXVtLCBHZXR0eSBWaWxsYSwgYW5kIE1hbGlidSBiZWFjaGVzIHdpdGhpbiBkcml2aW5nIGRpc3RhbmNlIGFzIHdlbGwuIApIYWlyIHN0cmFpZ2h0ZW5lcnMgYXJlIG5vdCBvbmx5IGZvciB3b21lbiBub3cuIE1lbiBhcmUgYWxzbyBzaG93aW5nIGVxdWFsIGludGVyZXN0IGluIHRoaXMgZmllbGQuIApXYXRlciBhbmQgZm9vZApIZWFkcyB1cC4uIAooUHJpdmFjeSBQb2xpY3kpRmFjZWJvb2sgQWRzVGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpQW1hem9uIFVuaWZpZWQgQWQgTWFya2V0cGxhY2VUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlBcHBOZXh1c1RoaXMgaXMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KU9wZW54VGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpUnViaWNvbiBQcm9qZWN0VGhpcyBpcyBhbiBhZCBuZXR3b3JrLiAoUHJpdmFjeSBQb2xpY3kpVHJpcGxlTGlmdFRoaXMgaXMgYW4gYWQgbmV0d29yay4gKFByaXZhY3kgUG9saWN5KVNheSBNZWRpYVdlIHBhcnRuZXIgd2l0aCBTYXkgTWVkaWEgdG8gZGVsaXZlciBhZCBjYW1wYWlnbnMgb24gb3VyIHNpdGVzLiAKQXQgdGhlIGxhdW5jaCBwYWQgdG9wIG1hbmFnZW1lbnQgd2lsbCBqb2NrZXkgZm9yIHBvc2l0aW9uIHRvIHNlZSB3aG8gY2FuIGhvbGQgd2hpY2ggYXN0cm9uYXV0IGFybSB0byBoZWxwIHRoZW4gdG8gdGhlIHBhZCwgYW5kIHRoZW4gdGhlIENoaWVmIG9mIHRoZSByb2NrZXQgY29tcGFueSB3aWxsIGdpdmUgdXMgYSBjZXJlbW9uaWFsIGtpY2sgaW4gdGhlIHBhbnRzIGFzIHdlIGNsaW1iIHRoZSBsYWRkZXIuIFR1cm4sIHdhdmUsIGEgc2hvcnQgZWxldmF0b3IgcmlkZSB0byB0aGUgdG9wIG9mIHRoZSByb2NrZXQsIGNsaW1iIGluIG9uZSBieSBvbmUsIHN0cmFwIG91cnNlbHZlcyBpbnRvIHRoZSBzZWF0LCBhbmQgdGhlIGFkdmVudHVyZSB0cnVseSBiZWdpbnMuCkJ1dCB0aGVyZSBhcmUgYXQgbGVhc3QgdHdvIG90aGVyIGFkdmFudGFnZXMgUlJTUHMgaGF2ZTogZGVzcGl0ZSBpdHMgbmFtZSB0aGV5IG5vdCBqdXN0IGZvciByZXRpcmVtZW50OiB0aGV5IGNhbiBhbHNvIGhlbHAgeW91IGdvIG9uIHRvIGhpZ2hlciBlZHVjYXRpb24gb3Igc2F2ZSB1cCBhIGRvd24gcGF5bWVudCBmb3IgYSBmaXJzdCBob21lOiB5b3UgY2FuIHdpdGhkcmF3IHVwIHRvICQyMCwwMDAgZm9yIHRoZSBMaWZlbG9uZyBMZWFybmluZyBQbGFuLCBhbmQgdXAgdG8gJDI1LDAwMCBmb3IgdGhlIEhvbWUgQnV5ZXIgUGxhbiAoJDUwLDAwMCBmb3IgY291cGxlcykuIApBbm90aGVyIG9wdGlvbiBpcyB0byBwYXkgd2l0aCBjYXNoIG9yIGNoZXF1ZSBpbnN0ZWFkLiAKV2hlbiBJIHNhdyBIb2xseSBXYWxrZXIsIE1QLCBzcGVhayBhdCBhIG1lZXRpbmcgaW4gVGF1cmFuZ2EsIEkgcmVtZW1iZXIgdGhpbmtpbmcgaG93IGNvbmZpZGVudCBhbmQgdG9nZXRoZXIgc2hlIHdhcy4gVGhhdCB3YXMgYSBmZXcgeWVhcnMgYmFjaywgYW5kIHNoZSBtdXN0IGhhdmUgYmVlbiBiYXJlbHkgMzAgeWVhcnMgb2xkLiBJIHRob3VnaHQsIGNvdWxkIG5ldmVyIGhhdmUgZG9uZSB0aGF0IGF0IDMwIHNvbWV0aGluZy4gV2hlbiBzaGUgZGVjaWRlZCB0byBzdGVwIGRvd24gYXMgYW4gTVAsIEkgY29uZmVzcyB0byBiZWluZyBhIGJpdCBkaXNhcHBvaW50ZWQuIEhhdmluZyByZWFkIGEgZmFpciBiaXQgb3ZlciB0aGUgeWVhcnMgYWJvdXQgdGhlIHN0cnVnZ2xlcyBmYWNpbmcgd29tZW4gaW4gUGFybGlhbWVudCwgSSBoYWQgc3RhcnRlZCB0byB0aGluayB0aGF0IHdhcyB0aGVuLCB0aGlzIHdhcyBub3cgYW5kIHRoaW5ncyBoYWQgZmluYWxseSBjaGFuZ2VkIGZvciB0aGUgYmV0dGVyLiBJIG1lYW4sIGxvb2sgYXQgSG9sbHkgV2Fsa2VyLiBUaGlzIGJvb2sgbWFrZXMgdmVyeSBjbGVhciB0aGF0IG5vdCB0aGUgY2FzZS4KSSB0aGluayB0aGF0IG1ha2luZyB0aW1lIGZvciBvdGhlciBzdHVmZiB5b3UgbGlrZSB0byBkbyBsaWtlIGhpa2luZyBhbmQgc3BvcnRzIGlzIGFsc28gaW1wb3J0YW50LCBldmVuIGlmIGl0IG1lYW5zIG9uZSBsZXNzIGRheSBpbiB0aGUgZ3ltLiAKTG9vayBpbnRvIHJlYWRpbmcgdGhlIGxpbWl0IHBvaW50IG9mIHRoZSByb2FkIGFuZCBwcmFjdGljZSBkb2luZyBpdC4gSnVzdCBrZWVwIGFuIGV5ZSBvbiB3aGV0aGVyIGl0IGlzIG1vdmluZyB0b3dhcmRzIG9yIGF3YXkgZnJvbSB5b3Ugb3IgaWYgaXQgaXMgc3RhdGlvbmFyeSwgdGhpcyB3aWxsIHRoZW4gaGVscCBhcyB0aGUgaW5zdHJ1Y3RvciB0ZWxscyB5b3Ugd2hhdCB0byBkbyB3aXRoIHRoYXQgaW5mb3JtYXRpb24uClBlcmhhcHMgdGhpcyB3YXMgYmVjYXVzZSB0aGUgRmlyc3QgTWF0ZSBhbHdheXMgcGFyYWRlZCBpdCBpbiBwYW5vcGx5IG9mIGdvbGQuIEhlIHdhcyBzbyBsYXJnZSBhbmQgZWZmdWxnZW50IHRoYXQgb25lIGhhcmRseSBtaXNzZWQgdGhlIHN1biwgYW5kIGhpcyByZXNvdW5kaW5nIHB1cnJzIGZvcm1lZCBhIHBsZWFzYW50IGFjY29tcGFuaW1lbnQgdG8gdGhlIGxhdWdodGVyIGFuZCBjb252ZXJzYXRpb24gd2hpY2ggd2VudCBvbiBhcm91bmQgQ2FwdGFpbiBKaW0ncyBmaXJlcGxhY2UuIENhcHRhaW4gSmltIGFuZCBHaWxiZXJ0IGhhZCBtYW55IGxvbmcgZGlzY3Vzc2lvbnMgYW5kIGhpZ2ggY29udmVyc2Ugb24gbWF0dGVycyBiZXlvbmQgdGhlIGtlbiBvZiBjYXQgb3Iga2luZy4uIAoiT3JpZ2luYWxseTogYW4gaW5kaXN0aW5jdCBjbG91ZCBsaWtlLCBsdW1pbm91cyBvYmplY3Qgc2VlbiBpbiB0aGUgbmlnaHQgc2t5LCBzdWNoIGFzIGEgY2x1c3RlciBvZiBkaXN0YW50IHN0YXJzLCBhIGdhbGF4eSwgb3IgYSBjbG91ZCBvZiBnYXMgb3IgZHVzdC4gTm93ICh1c3VhbGx5KTogbWFzcyBvZiBnYXMgb3IgZHVzdCB3aXRoaW4gYSBnYWxheHksIHR5cGljYWxseSB2aXNpYmxlIGVpdGhlciBhcyBhIGx1bWlub3VzIHBhdGNoIG9yIGFzIGEgZGFyayBzaWxob3VldHRlIGFnYWluc3QgYSBicmlnaHRlciBiYWNrZ3JvdW5kLiAKUGxlbnR5IG9mIGhlYWx0aHkgcGVvcGxlIGRlc3Ryb3kgdGhlaXIgYmFja3MgZG9pbmcgbXVjaCBiZXR0ZXIgZm9ybSB0aGFuIHRoaXMgYW5kIGxpZnRpbmcgbGVzcyB0aGFuIHRoaXMuIApUYW5nZW50IHRvIFBvbHl2YWdhbCB0aGVvcnksIGFuIGV2ZXJ5ZGF5IHByYWN0aWNhbCBtZXRob2QgZm9yIGxlYXJuaW5nIHRvIHJlc29sdmUgY2hyb25pYyB0ZW5zaW9uLCBjYW4gYmUgZm91bmQgdmlhIFRob21hcyBIYW5uYSAiY2F0IHN0cmV0Y2giIGV4ZXJjaXNlcy4gSGlzIGJvb2ssICJTb21hdGljcyIgZ2l2ZXMgYSB2ZXJ5IHJlYWRhYmxlIG92ZXJ2aWV3IG9mIGhpcyB0aGVvcnksIGFsb25nIHdpdGggaGlzIHJlY29tbWVuZGVkIGV4ZXJjaXNlcyB5b3UgY2FuIHB1dCBpbnRvIHByYWN0aWNlIHJpZ2h0IGF3YXkuIEkgYmVlbiB1c2luZyB0aGVzZSBleGVyY2lzZXMgKGFuZCBob3cgdGhleSBhcmUgcGVyZm9ybWVkIGlzIG1vc3QgaW1wb3J0YW50KSBmb3IgbXlzZWxmIGFuZCBjbGllbnRzIHdpdGggYXN0b25pc2hpbmcgcmVzdWx0cywgZm9yIHllYXJzIG5vdy4uIApUcmljeWNsaWMgYW50aWRlcHJlc3NhbnRzIGFmZmVjdCBzeW5hcHRpYyB0cmFuc21pc3Npb24gb2Ygc2Vyb3RvbmluIGFuZCBub3JlcGluZXBocmluZSBuZXVyb25zIGluIHRoZSBjZW50cmFsIG5lcnZvdXMgc3lzdGVtLCB0aGVyZWJ5IGFmZmVjdGluZyBwYWluIG1vZHVsYXRpbmcgcGF0aHdheXMuIApEaWQgaXQgYWdhaW4gYmVjYXVzZSBldmVyeW9uZSBoYWQgYSBncmVhdCB0aW1lLiAKSSBmb3VuZCB0aGlzIG91dCB3aGVuIEkgY2FtZSBob21lIGZyb20gY29sbGVnZSB0byBoYW5nIG91dCB3aXRoIG15IGJyb3RoZXIuIFdlIHdhbnRlZCB0byBtYWtlIHVwIGZvciBsb3N0IHRpbWUgYW5kIHNwZW5kIGV2ZXJ5IG1pbnV0ZSB0b2dldGhlciwgYnV0IHdlIHJhbiBvdXQgb2YgdGhpbmdzIHRvIHRhbGsgYWJvdXQgcHJldHR5IHF1aWNrbHkuIEl0IHR1cm5zIG91dCwgd2Fsa2luZyBkb3duIHRoZSBzdHJlZXQgYW5kIGNhdGNoaW5nIFBva2Vtb24gaXMganVzdCBhcyBmdWZpbGxpbmcgYXMgaGF2aW5nIGEgZGVlcCBjb252ZXJzYXRpb24uIEFsbCB0aGF0IG1hdHRlcnMgd2FzIHRoYXQgd2Ugd2VyZSBzcGVuZGluZyB0aW1lIHdpdGggb25lIGFub3RoZXIuCkhlIHdhcyBkaWFnbm9zZWQgd2l0aCBjYW5jZXIgaW4gMjAxMi4gCk15IG93biBiZWFzdCB3YXMgbW9yZSwgd2VsbCwgYmVhc3Rpc2guIExpa2UgYSBnaWFudCBiZWFyLiBUaGlzIHRoaW5nIHdhcyBtb3JlIGxpa2UgdGhlIGdyaW0gcmVhcGVyLgpBLEEsQSw1LDUpLiBUaWVzIG9uIGEgZnVsbCBob3VzZSBhcmUgYnJva2VuIGJ5IHRoZSB0aHJlZSBvZiBhIGtpbmQsIGFzIHlvdSBjYW5ub3QgaGF2ZSB0d28gZXF1YWwgc2V0cyBvZiB0aHJlZSBvZiBhIGtpbmQgaW4gYW55IHNpbmdsZSBkZWNrLiAKSSBkb25lIGV4dGVuc2l2ZSByZXNlYXJjaCBvbiBFaW5zdGVpbiBhbmQgVGVzbGEgYm90aC4gSSBzYXlpbmcgdGhhdCBFaW5zdGVpbiBjb3VsZG4gc2VlIHRoZSB1bml2ZXJzZSBmb3Igd2hhdCBpdCByZWFsbHkgaXMgYmVjYXVzZSBoZSB3YXMgc28gc3R1Y2sgb24gTmV3dG9uIGxhd3MuIFRlc2xhIHVuZGVyc3Rvb2QgcGh5c2ljcyBhcyB3ZWxsIGFzIGFueW9uZSBoZSBqdXN0IHJlYWxpemVkIHRoYXQgdGhvc2UgMyBpbmZhbW91cyBsYXdzIGRpZG4gcGVyZmVjdGx5IGRlc2NyaWJlZCB0aGUgdW5pdmVyc2UuIApCdXQgSSBjYW4gZXNjYXBlIHRoZSBpZGVhIHRoYXQgc2hlIGFuZCBoZXIgcHJvZHVjZXJzIGFyZSBrZWVubHkgYXdhcmUgb2YgdGhlIG90aGVyIG1lc3NhZ2UgYW5kIGFyZSBkb2luZyB0aGluZ3MgbGlrZSB0aGlzIHRvIG1ha2UgcGVvcGxlIHRoaW5rLi4gClRoZSBjaXR5IGlzIHNsb3dseSBnZXR0aW5nIHVuYWZmb3JkYWJsZSwgYW5kIGxvc2luZyB0aGUgcGFydHMgYWJvdXQgaXQgdGhhdCBhcmUgc3BlY2lhbC4gRXZlcnlvbmUgSSBrbm93IGlzIGdldHRpbmcgc2NhdHRlcmVkIHRvIHRoZSB3aW5zIGFuZCBhIGxvdCBvZiBteSBmYXZvcml0ZSBwbGFjZXMgdG8gaGFuZyBvdXQgaGF2ZSBiZWVuIGNsb3NlZC4gClRoYXQgbWVzc2VkIHVwLiBJIGFncmVlIHdpdGggeW91ciBpbnRlcnByZXRhdGlvbiwgaXQgZGVmaW5pdGVseSBhYm91dCBzdGVhbGluZyB5b3VyIGNvdXNpbiB0aHVuZGVyLiBJIHdvbmRlciBob3cgeW91ciBtb20gZW52aXNpb25zIHRoaXMgZ29pbmcgZG93biwgdGhvdWdoPyBEb2VzIGl0IG5vdCBwZW5ldHJhdGUgaGVyIHBzeWNoZSB0aGF0IHNoZSBub3QgZ29pbmcgdG8gc3VjY2VlZCBpbiBwcmVzc3VyaW5nIHlvdSB0d28gaW50byB0aGlzPyBTaGUgZ29ubmEgd2FzdGUgaGVyIG1vbmV5IGFuZCB0aW1lIG9uIGEgd2VkZGluZyB0aGF0IG5vYm9keSBnb25uYSBhdHRlbmQuIEFuZCB3aGlsZSBJIGltYWdpbmUgdGhlIGZhY3QgdGhhdCBzaGUgZG9pbmcgdGhpcyBhdCBhbGwgaXMgaHVydGZ1bCwgaW4gcHJhY3RpY2Ugc2hlIHByb2JhYmx5IHdvbiBldmVuIG1hbmFnZSB0byBpbmNvbnZlbmllbmNlIGZvciB5b3UsIHlvdSBjYW4gYWx3YXlzIGp1c3QgYW5ub3VuY2Ugb24gc29jaWFsIG1lZGlhIHRoYXQgdGhpcyBpc24gYSB0aGluZyB5b3UgcGFydGljaXBhdGluZyBpbiBpbiBhbnkgd2F5IGFuZCBhbnlvbmUgd2l0aCBhIGxpY2sgb2Ygc2Vuc2Ugd2lsbCBwYXNzIG9uIGF0dGVuZGluZyB5b3VyIG1vbSBzYWQgbGl0dGxlIG5hcmMgY2lyY3VzLgpBTFNPOiBmb2xsb3dpbmcgdHdvIGlsbHVzdHJhdGlvbnMgZGlzcGxheSBzb21lIG9mIHRoZSBpbm5lciBtZWNoYW5pY3Mgb2YgRGlja2VucyBhbmFseXplci4gSW4gIkZpZyAyIiB3ZSBzZWUgYSBzdWJzZXQgb2YgY2FyZHMgaW50ZW5kZWQgZm9yIHRoZSBleWUsIHdoaWNoIGNvbnRhaW5lZCBhIGZ1cnRoZXIgMTMwIGNhcmRzIG9mIGV5ZSBpbWFnZXMgYW5kIGRlc2NyaXB0aW9ucy4gVGhlIHR3byAid2FuZHMiIGF0IHJpZ2h0IHdlcmUgbWVhbnQgdG8gYmUgdXNlZCBmb3IgY292ZXJpbmcgb25lIGV5ZSAodG8gZGlzdG9ydCB0aGUgZGVwdGggb2YgZmllbGQpIHdoaWxlIHRoZSBvdGhlciB3YXMgdXNlZCB0byBvYnNjdXJlIHRoZSBmaWVsZCBvZiB2aXNpb24uLiAKU28gaWYgeW91IGhhdmUgeW91ciBvd24gbGl0dGxlIGNhc2lubyBsaWtlIHVzLCBydW4gYW4gZXZlbnQgZXZlcnkgeWVhciwgb3Igdm9sdW50ZWVyIHlvdXIgdGltZSBhdCBhIGxvY2FsIGNodXJjaCBmZXN0aXZhbCwgeW91IG1pZ2h0IHdhbnQgdG8gcGFzcyB0aGUgd29yZCBhbG9uZy4gClRoYXQgdGhlIHdvcnN0IHBhcnQuIApSZWdpc3RlcmVkIEUgbWFpbCBBZGRyZXNzLCBVc2VyIElEIGFuZCBQYXNzd29yZApBdCAwOjM3IHlvdSBjYW4gc2VlIHRoZSBkcnVpZCBjYXN0aW5nIGN5Y2xvbmUgYXQgeW91ciBkcnVpZCwgYW5kIGZvciBzb21lIHJlYXNvbiB5b3UgdXNlIHBhaW4gc3VwcHJlc3Npb24gcmlnaHQgaW50byB0aGUgY2xvbmUuIApNYXliZSB0aGUgb2NjYXNpb25hbCBzbWlsZS4gClRoZSBjb21tZXJjaWFsIHZhbHVlIG9mIGhpcyBuYW1lIGFuZCBpbWFnZSBpcyB2YXN0bHkgaGlnaGVyIHRoYW4gZWl0aGVyIG9mIHRoZSBqdW5pb3IgZHJpdmVycyBoZSdkIGJlIHJlcGxhY2VkIGJ5LiAKSSd2ZSBiZWVuIHRoaW5raW5nIG9mIHN0YXNoaW5nIGEgc3BhcmUgc2V0IG9mIHJ1bm5pbmcgZ2VhciBhdCB3b3JrLCBzbyBpZiB0aGUgd2VhdGhlciBnb2VzIHNvdXRoIGluIHRoZSBhZnRlcm5vb24gSSBjYW4gdXNlIHRoZSB0cmVhZG1pbGwgaW4gbXkgYnVpbGRpbmcncyBneW0gKHdpdGggdGhlIGFkZGVkIGJvbnVzIG9mIG5vdCBoYXZpbmcgdG8gcGxhbiBhaGVhZCBmb3IgYmFkIHdlYXRoZXIuKSBQcm9ibGVtIGlzLCB0aGUgb25seSAic3BhcmUiIHBhaXIgb2Ygc2hvZXMgSSBoYXZlIGFyZSBhbiBvbGRlciBwYWlyIHRoYXQgYXJlIHByb2JhYmx5IHBhc3QgdGhlaXIgbWlsZWFnZSBsaWZlc3Bhbi4gCk90aGVyd2lzZSB0aGV5IHdvdWxkIGFsc28gYmUgZmlnaHRpbmcgYWdhaW5zdCB0aGUgZW52aXJvbm1lbnRhbCBkZXZhc3RhdGlvbiB0aGUgaW5kdXN0cmlhbCBhZ3JpY3VsdHVyZSBpbmR1c3RyeSBoYXMgY2F1c2VkIGluIHRoZSBwYXN0IDIwIHllYXJzIHdoaWxlIHRyeWluZyB0byBtZWV0IHRoZSBpbmNyZWFzZWQgV2VzdGVybiBtYXJrZXQgZGVtYW5kIGZvciBzb3kgYW5kIGF2b2NhZG9zIChHdWVzcyB3aHk/KS4uIApIZSBpcyBxdW90ZWQgYXMgc2F5aW5nOiAiSSBsb3ZlZCB0aG9zZSBzdGVhbSB0cmFpbnMgYW5kIHRoYXQncyBwcm9iYWJseSB3aHkgSSBwdXQgdGhlbSBpbiBteSBmaWxtcy4KSSBub3QgYmxhbWluZyBhbnkgZHJ1ZyBmb3IgdGhlIHBlb3BsZSB3aG8gcnVuIHNjYW1zLiAKQW5kIHdpdGggeW91IGRyb3BwaW5nIHRoZSByb3BlLCBJIHN1cmUgZmFjZXRpbWUgd2l0aCB0aGUgdGhpZWYgd2lsbCBkaWUgc29vbmVyIHJhdGhlciB0aGFuIGxhdGVyLiAKVHJpY2t5bGlrZWFuaW5qYSAgMiwyNjQgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpUaGV5IGVhdCBkaWZmZXJlbnQgaGF5IGZyb20gZGlmZmVyZW50IGZhcm1zLCBhbmQgaGF2ZSBubyBhY2Nlc3MgdG8gZ3Jhc3MgKHVuZm9ydHVuYXRlbHkpLiAKVGhlIGNvbWJpbmVkIGZvcm0gaXMgZXh0cmVtZWx5IHN0cm9uZywgYnV0IHRoZSBtYWluIGNvbnRyb2wgdW5pdCAod2l0aCB0aGUgc3VuZ2xhc3NlcykgaXMgYmFyZWx5IGFibGUgdG8gY29udHJvbCB0aGUgb3RoZXIgZml2ZS4gdGhvdWdoIHRoZXkgc2hhcmUgb25lIG1pbmRzZXQsIHRoZSBvdGhlciBmaXZlIGFyZSByZXNlbnRmdWwgb2YgdGhlIG1haW4gY29udHJvbCB1bml0IGxlYWRlcnNoaXAuIHRoZXJlZm9yZSwgWGluZyBpcyBsaWFibGUgdG8gYnJlYWsgYXBhcnQgZHVyaW5nIGNvbWJhdCBhZnRlciBlbm91Z2ggaGl0cywgd2hpY2ggeW91IGNhbiB1c2UgdG8geW91ciBhZHZhbnRhZ2UuIHVzdWFsbHkgaXQgZXZlcnkgdGVuIG9yIHNvIGhpdHMuClJpY2hhcmQgS29yZiwgYSBwcm9mZXNzb3Igb2YgY29tcHV0ZXIgc2NpZW5jZSB3aG8gc3BlY2lhbGl6ZXMgaW4gdGhlIGFyZWFzIG9mIHByb2JsZW0gc29sdmluZywgcGxhbm5pbmcgYW5kIHRoZSBoZXVyaXN0aWMgc2VhcmNoIGluIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlLCB3YXMgYW5vdGhlciBvZiBGZXJndXNvbidzIGdyYWR1YXRlIGFkdmlzZXJzLi4gCkZvciBzb21lIHJlYXNvbiBJIGNhbid0IGZhdGhvbSwgSSBxdWl0ZSBlbmpveSBjb21pbmcgdXAgd2l0aCBkZWNvcmF0aW9uIHNjaGVtZXMgYW5kIHBsYW5uaW5nIGtpdGNoZW5zLiBQZXJoYXBzIEknbSBtb3JlIGRvbWVzdGljYXRlZCB0aGFuIEknZCBsaWtlIHRvIHRoaW5rIC5JJ20gYWxzbyBhbiBvZmZpY2lhbCBoMmcyIFBob3RvZ3JhcGhlciwgYW5kIEknbSBsb29raW5nIGZvcndhcmQgdG8gaGF2aW5nIGFuIGV4Y3VzZSB0byBzdGFydCBwbGF5aW5nIHdpdGggb3VyIHNwYW5nbHkgZGlnaXRhbCBjYW1lcmEuQW5kIGFmdGVyIGFsbCB0aGF0LCBmZWVsIGZyZWUgdG8gZHJvcCBtZSBhIGxpbmUuIApCdXQgdW5saWtlIHRoZSBsb29zZSBhZ2dyZXNzaXZlIHBsYXllciwgdGhlIGxvb3NlIHBhc3NpdmUgcGxheWVyIHRlbmRzIHRvIGNoZWNrIGFuZCBjYWxsIG1vcmUgdGhhbiB0aGV5IGJldCBvciByYWlzZS4gMy4gVGlnaHQgcGFzc2l2ZSAgIFRoaXMgc3R5bGUgYmFzaWNhbGx5IGNvbnNpc3RzIG9mIG9ubHkgcGxheWluZyB2ZXJ5IGZldyBoYW5kcywgYW5kIGRvaW5nIHZlcnkgbGl0dGxlIGJldHRpbmcgb3IgcmFpc2luZy4gCllvdSBjaG9zZW4gdG8gbG9vayBiZXlvbmQgdGhlIGltbWVkaWF0ZSBodXJ0LCBhbmQgaW4gdGhlIHByb2Nlc3MsIGFsbG93ZWQgdGhlIGZ1dHVyZSB5b3UgdG8gbGl2ZSB3aXRob3V0IGhhbmdpbmcgb24gdG8gYml0dGVybmVzcy4uIAooRnVsbCBBbnN3ZXIpLiAKUG91ciBlZmZlY3R1ZXIgdW5lIGJydmUgcHJzZW50YXRpb24gbG9yc3F1ZSBsZSBkaXNjZXJuZW1lbnQgZXN0IGFib2xpIChwcnZpc2lvbiBkdSAxZXIgYWxpbmEpLCBpbCBhIHRvdGFsZW1lbnQgZGlzcGFydS4gClJhcGUgam9rZXMgYXJlIGNvbW1vbiBhbW9uZyB3aGF0IFJvc3MgY2FsbHMgIjIyIHllYXIgb2xkIGRpbmcgZG9uZ3MiOiB5b3VuZywgaW5leHBlcmllbmNlZCwgb2Z0ZW4gbWFsZSBjb21lZGlhbnMuIFNoZSBzYXlzIGNvbWljcyB3aG8gd2FudCB0byBiZSBwZXJjZWl2ZWQgYXMgZWRneSBhcmUgd2lsbGluZyB0byBicmVhayB0aGUgY29tZWR5IHJ1bGUgb2Ygb25seSAicHVuY2hpbmcgdXAiICAgb3IgZ29pbmcgYWZ0ZXIgYSB0YXJnZXQgd2l0aCBtb3JlIHBvd2VyIG9yIHN0YXR1cyB0aGFuIHRoZSBwZXJzb24gdGVsbGluZyB0aGUgam9rZSAgIHJhdGhlciB0aGFuIHB1bmNoaW5nIGRvd24gYXQgc29tZW9uZSBtb3JlIHZ1bG5lcmFibGUuLiAKMS4gCk9uIG9uZSBoYW5kLCBpdCBncmVhdCB0byBoYXZlIGEgc2luZ2xlIFdPRCB0aGF0IGNhbiB0ZXN0IHlvdXIgZml0bmVzcyBhbmQgcHJvdmlkZSBhIGJlbmNobWFyayBmb3IgdGhlIGZ1dHVyZTsgd2hpbGUgYWxzbyBzaG93aW5nIHlvdXIgc3RhbmRpbmcgYW1vbmcgdGhlIGJveCBwb3B1bGF0aW9uLiAKU29GZWRVcElTaG91bGRCZUZhdCAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkFueXdheSwgZ3JlYXQgam9iIERhZCBhbmQgTW9tISBJdCBzb3VuZHMgbGlrZSB5b3UgZG9uJ3Qgc28gbXVjaCBob3ZlciBhcyBvYnNlcnZlIGFuZCB0YWtlIHRhcmdldGVkIGFjdGlvbi4gCkNSOiBCZWNhdXNlIHRoaXMgdmlld3BvaW50IGlzbid0IGVzdGFibGlzaGVkIGFtb25nIHRoZSBtZWRpY2FsIGNvbW11bml0eSB5ZXQsIHRoZXkgbWF5IG92ZXJsb29rIGVmZmVjdGl2ZSBhcHByb2FjaGVzIGNvbmNlcm5pbmcgZmFzY2lhLiBUYWtlIHRoZSBleGFtcGxlIG9mIHBsYW50YXIgZmFzY2lpdGlzLCBhIGNvbW1vbiBpbmp1cnkgdGhhdCBpcyBjaGFyYWN0ZXJpemVkIGJ5IHBhaW4gYW5kIGluZmxhbW1hdGlvbiBvZiB0aGUgZmFzY2lhIHRoYXQgcnVucyBmcm9tIHRoZSB0b2VzIHRvIHRoZSBoZWVsLiBJbiB0cmVhdGluZyB0aGlzIGNvbmRpdGlvbiwgYSBtZWRpY2FsIGFwcHJvYWNoIHdvdWxkIGJlIHRvIGdpdmUgYW50aSBpbmZsYW1tYXRvcmllcywgb3IgaW4gbW9yZSBleHRyZW1lIGNvbmRpdGlvbnMsIGN1dCB0aGUgZmFzY2lhIHN1cmdpY2FsbHkuIApIYWluZXMsIGFjY29tcGFuaWVkIGJ5IGhpcyB0cmFuc2FjdGVkIGJ1c2luZXNzIGluIEhhciAgcmlzYnVyZywgVHVlc2RheS4gCldpdGggbXkgb25lIFgsIGl0cyBoYXZpbmcgdGhlIGV4YWN0IHNhbWUgaXNzdWUgYXMgYmVmb3JlIHNvIEkgc2VuZGluZyBpdCBpbiBhZ2FpbiB0aGlzIHdlZWsuIEl0IGNyYXNoZXMgb3IgcmFuZG9tbHkgdHVybnMgb2ZmIGNvbnN0YW50bHkuIEFuZCBhZnRlciBldmVyeSBjcmFzaCwgaXQgd2lsbCBnbyBkaXJlY3RseSB0byBhbiBFMjAwIGVycm9yIHNjcmVlbiB1cG9uIHN0YXJ0dXAuIFNvbWV0aW1lcyBpdCBqdXN0IGNyYXNoZXMgZHVyaW5nIHRoZSBhbmltYXRpb24gc3RhcnR1cC4KSSdkIHJlY29tbWVuZCBicmluZ2luZyBhIGxlYXZlIGJsb3dlciwgcmFrZSBhbmQgc2hvdmVsIHdpdGggeW91IHdoZW4gcHJlc3N1cmUgd2FzaGluZyBiZWNhdXNlIGl0J3Mgbm90IGFsd2F5cyBhcyBzaW1wbGUgYXMganVzdCB3YXNoaW5nLCBnZXR0aW5nIHBhaWQgdGhlbiBsZWF2aW5nLi4gCkl2YW5rYSBtYXJyaWVkIHJlYWwgZXN0YXRlIHNjaW9uIEphcmVkIEt1c2huZXIgYmVjYXVzZSBoZSByZW1pbmRzIGhlciBvZiBEYWRkeS4gIkkgbWVhbiwgbGlrZSwgbm9ib2R5IHdvdWxkIGV2ZW4ga25vdyBlaXRoZXIgb2YgdGhlbSB3aXRob3V0IHRoZWlyIGluaGVyaXRhbmNlIGFuZCB3aWxsaW5nbmVzcyB0byB0YWxrIGFib3V0IHN0dWZmIHRoZXkga25vdywgbGlrZSwgbm90aGluZyBhYm91dC4gVGhlIGJpZyBkaWZmZXJlbmNlPyBMZXQgbWUgc2VlIC4gLiAuIFtjb3F1ZXR0aXNoIGdpZ2dsZV0gLiAuIC4gSmFyZWQgaXNuJ3QgY29uc3RhbnRseSBidXJzdGluZyBpbiB3aGVuIEknbSB0YWtpbmcgYSBidWJibGUgYmF0aCwgc3RpY2tpbmcgdHdlbnRpZXMgaW4gbXkgYnJhLCBvciB0ZWxsaW5nIG1lLCAnSXQgc3VyZSBkb2Vzbid0IExPT0sgbGlrZSB5b3UncmUgd2VhcmluZyBwYW50aWVzLCBiYWJ5IScgSmFyZWQgaXMgYSB0b3RhbCBnZW50bGVtYW4gd2hlbiBJJ20gaW4gdGhlIG51ZGUuIgpEYXRvcm4gYiByamFkZSBhdHQgbmRyYSByZWdsZXJuYSBudSBrb21tZXIgZGUgb2NoIGRldCBzdGFubmFyIGRhdGEgZnIgbiBrb25zb2xlbiB0aWxsIHByb2Nlc3NvcmVyIHRpbGwgc3RyIG1tYW5kZSBrb2RhcmVuIHRpbGwgaW50ZXJuZXQgdGlsbCBseXNzbmFyZW5zIGRhdG9yLiAKUG9zdHMgdGhhdCBoYXZlIGZldyByZWxldmFudCBhbnN3ZXJzIHdpdGhpbiB0aGUgZmlyc3QgaG91ciwgYW5kIHBvc3RzIHRoYXQgYXJlIG5vdCBhcHByb3ByaWF0ZSBmb3IgdGhlIFtTZXJpb3VzXSB0YWcgd2lsbCBiZSByZW1vdmVkLiBDb25zaWRlciBkb2luZyBhbiBBTUEgcmVxdWVzdCBpbnN0ZWFkLgpFaXRoZXIgd2F5IGJvdGggb2YgdGhvc2UgZXhhbXBsZXMgYXJlIE5PVCBwcm9ibGVtcyB3aXRoIHRoZSBkZXZpY2VzLCBidXQgc3R1cGlkaXR5IGluIHVzYWdlIG9uIHRoZSB1c2VycyBlbmQuIFdoZW4gc29tZW9uZSBjdXRzIHRoZWlyIHBpbmt5IG9mZiB3aXRoIGEgdGFibGUgc2F3IHdlIGRvbid0IGJsYW1lIHRoZSBwZW9wbGUgd2hvIG1hZGUgdGhlIHNhdywgd2UgYmxhbWUgdGhlIGlkaW90IHdobyBkaWRuJ3Qga25vdyBob3cgdG8gdXNlIGl0LCBzYW1lIHdpdGggdmVoaWNsZXMuIE9yIGEgc2ltaWxhciBleGFtcGxlLCB3aGVuIGEgcGVyc29uIGVsZWN0cm9jdXRlZCB0aGVtc2VsdmVzIHN0aWNraW5nIGEgZm9yayBpbiB0aGUgdG9hc3RlciwgaXQncyBub3QgdGhlIHRvYXN0ZXJzIGZhdWx0LgpDb25zaWRlciBzb21lIG9mIHRoZSBvdGhlciBmYWN0b3JzIHRoYXQgbWF5IGJlIGltcG9ydGFudCB0byB5b3UgICB0b3RhbCBiZW5lZml0cywgY29tbXV0ZSB0aW1lLCBmbGV4aWJpbGl0eSwgdGl0bGUuIEdlbmVyYWxseSB5b3UgZ2V0IHlvdXIgYmlnZ2VzdCBjb21wZW5zYXRpb24gYnVtcHMgdGhyb3VnaCBleHRlcm5hbCBvcHBvcnR1bml0aWVzIChvcmdhbml6YXRpb25zIHNvbWV0aW1lcyBoYXZlIGludGVybmFsIGNhcHMvbGltaXRzIHRoYXQgdGhleSBkb24gaGF2ZSB0byBhYmlkZSB0byB3aXRoIGV4dGVybmFsIGhpcmVzKS4gQXJlIHRoZXJlIG90aGVyIGRvd25zaWRlcyB0byBsZWF2aW5nIHlvdXIgY3VycmVudCByb2xlIHRoYXQgeW91IGhhdmVuIGNvbnNpZGVyZWQgKGFyZSB5b3UgZnVsbHkgdmVzdGVkIGluIHlvdXIgNDAxaywgb3RoZXIgYmVuZWZpdHMgdGhhdCBraWNrIGluIGFmdGVyIFggeWVhcnMgb2Ygc2VydmljZSwgZXRjLik/LiAKRWggbm8uIFBvZHJhIGFyZ3VtZW50YXIgcXVlIGxvcyBxdWUgaGFjZW4gbXMgZGFvIHNvbiBwcm90ZWdpZG9zIHBvciBlbCBnb2JpZXJubywgcGVybyBubyBuZWNlc2FyaWFtZW50ZSBlbCBnb2JpZXJubyBlcyBlbCBkdWVvLiBZbyB2aSBsYXMgZmluYW56YXMgZW4gdW5hIGVtcHJlc2EgZGVsIGVzdGFkby4gCk9uIHRoZSBodW50IGFuZCB3b3JyaWVkIGZvciB3aW5zIHlvdSBjYW4gZmVlbCB0aGUgcHJlc3N1cmUgYW5kIHlvdSBiZWNvbWUgbmVydm91cy4iCkFubmEgVmFuIEhvb2Z0IGlzIGFuIGFjdHJlc3Mgd2hvIGhhcyBhcHBlYXJlZCBpbiBhIG51bWJlciBvZiBmaWxtcyBhbmQgdGVsZXZpc2lvbiBwcm9kdWN0aW9ucy4gTW9zdCBub3RhYmx5LCBzaGUgYXBwZWFyZWQgaW4gdGhlIDIwMDYgcmVtYWtlIG9mIHRoZSBob3Jyb3IgbW92aWUgVGhlIFdpY2tlciBNYW4uIEhlciBvdGhlciBhY3RpbmcgY3JlZGl0cyBpbmNsdWRlIHJvbGVzIGluIFRoZSBJbmNyZWRpYmxlIE1ycy4gUml0Y2hpZSwgVHJvbGx6LCBUd2VsdmUgTWlsZSBSb2FkLCBDYWl0bGluJ3MgV2F5LCBDU0ksIFN1cGVybmF0dXJhbCwgYW5kIEpvaG4gVHVja2VyIE11c3QgRGllLiAKWW91IGZ1bmRhbWVudGFsbHkgbWlzdW5kZXJzdGFuZGluZyB0aGlzLiAKVml0IEQgc3RhdHVzIGxpbmtlZCB0byBtb2JpbGl0eSBsaW1pdGF0aW9uClBpbG85MHIgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnbwpSb3V0aW5lIEkgZ2V0IHVwIHdoZW4gSSBsaWtlLiBJdCB1c3VhbGx5IGFyb3VuZCBtaWRkYXksIGFuZCB0aGVuIEkgdGFrZSBTdGFjZXkgZm9yIGEgZHJpdmUgaW4gdGhlIEZlcnJhcmkgMzYwIChwaWN0dXJlZCkgYW5kIHNob3cgb2ZmLiBXZSBkb24gZ28gdmVyeSBmYXIsIGl0IG9ubHkgZG9uZSAxMiwwMDAgbWlsZXMgaW4gdGhyZWUgeWVhcnMuIElmIHRoZSB3ZWF0aGVyIGJhZCwgSSBqdW1wIGluIG15IEh1bW1lci4gTm8gb25lIGNhbiBjbGFtcCBtZSBpbiB0aGF0OyB0aGV5IGNhbiBnZXQgaXQgcm91bmQgdGhlIHR5cmVzLgpJbmNsdWRpbmcgMyBmb3JlaWduZXJzIHdpdGggbm8gaW5zdXJhbmNlIGNhcmRzLiAKTWFueSB3YXlzLCB0aGUgcGVyZm9ybWFuY2VzIG9mIERvbmFsZCBUcnVtcCByZW1pbmQgbWUgb2YgbWFsZSBjaGltcGFuemVlcyBhbmQgdGhlaXIgZG9taW5hbmNlIHJpdHVhbHMgb3JkZXIgdG8gaW1wcmVzcyByaXZhbHMsIG1hbGVzIHNlZWtpbmcgdG8gcmlzZSBpbiB0aGUgZG9taW5hbmNlIGhpZXJhcmNoeSBwZXJmb3JtIHNwZWN0YWN1bGFyIGRpc3BsYXlzIHN0YW1waW5nLCBzbGFwcGluZyB0aGUgZ3JvdW5kLCBkcmFnZ2luZyBicmFuY2hlcywgdGhyb3dpbmcgcm9ja3MuIFRoZSBtb3JlIHZpZ29yb3VzIGFuZCBpbWFnaW5hdGl2ZSB0aGUgZGlzcGxheSwgdGhlIGZhc3RlciB0aGUgaW5kaXZpZHVhbCBpcyBsaWtlbHkgdG8gcmlzZSBpbiB0aGUgaGllcmFyY2h5LCBhbmQgdGhlIGxvbmdlciBoZSBpcyBsaWtlbHkgdG8gbWFpbnRhaW4gdGhhdCBwb3NpdGlvbiBhIGNoaW1wIG1haW50YWlucyBoaXMgZG9taW5hbmNlIGJ5IGtpY2tpbmcgYSBzZXJpZXMgb2Yga2Vyb3NlbmUgY2FucyBhaGVhZCBvZiBoaW0gYXMgaGUgbW92ZShzKSBkb3duIGEgcm9hZCwgY3JlYXRpbmcgY29uZnVzaW9uIGFuZCBub2lzZSB0aGF0IChtYWtlKSBoaXMgcml2YWxzIGZsZWUgYW5kIGNvd2VyLiBkYW5nZXIgaXMgdGhhdCB0aGUgQ2hpbXAgd2lsbCBjb250aW51ZSB3aXRoIGhpcyBkb21pbmFuY2UgZGFuY2UgYWZ0ZXIgb2NjdXB5aW5nIHRoZSBXaGl0ZSBIb3VzZS4gSGUgaGFzIG5vIHJlYXNvbiB0byBjaGFuZ2UuIEFsc28gdGhlcmUgYXJlIG5vIGNoZWNrcyBvbiBoaW0uIEhlIG93ZXMgaGlzIHBhcnR5IG5vdGhpbmcgKHNpbmNlIGFsbW9zdCBhbGwgb2YgaXQgd2FzIHdvcmtpbmcgdG8gdW5kZXJtaW5lIGhpbSkgYW5kIHlldCBoZSB3aWxsIGJlbmVmaXQgZnJvbSB0aGUgZG9taW5hbmNlIG9mIENvbmdyZXNzIGFuZCB0aGUgU3VwcmVtZSBDb3VydCBieSB0aGUgUmVwdWJsaWNhbnMuIEhlIGNhbiBsZWdpc2xhdGUgYXQgd2lsbC4gSGUgaGFzIGRvbmUgd2hhdCBub2JvZHkgaGFkIGltYWdpbmVkIGhlIGNvdWxkIChib29raWVzIGhhZCBoaXMgdmljdG9yeSBvZGRzIGF0IDEgYWdhaW5zdCAxNTApLiBZb3UgaGF2ZSB0byBiZSBpbiBoaXMgc2hvZXMgdG8ga25vdyBob3cgaGlnaCBoZSBtdXN0IGJlIGZseWluZy4KQW5kIHlvdSBhcmUgY29ycmVjdCB0aGF0IHdlIGFyZSBub3QgYmVob2xkZW4gdG8gdGhlIG1pZGRsZSBlYXN0IGZvciBwZXRyb2xldW0gdGhhbmtzIHRvIHRlY2hub2xvZ2llcyBsaWtlIGZyYWNraW5nLiBVbmZvcnR1bmF0ZWx5IHRoZSBncmVhdGVyIGNvbmNlcm4gaXMgb24gdGhlIG9yZGVyIG9mIHdvcmxkIGRvbWluYXRpb24uIApUaGUgZ2FtZSB3YXMgc3RhcnRpbmcgYW5kIHBwbCB3ZXJlIGdldHRpbmcgYSBsb3Qgb2YgdXNlZnVsIHN0dWZmIGxpa2UgbWVnYWNyeXN0cyBhbmQgbWVnYWN5dGVzIHRvIG1heCBvdXQgZXNwZXJzIHdoaWNoIHdhcyBhIGJpZyBkZWFsIGJhY2sgdGhlbi4gClRoYXQgdGhlIHNpemUgb2YgaXQuIEkgdGhpbmsgSSB3b3VsZCBiZSByZW1pc3MgaWYgSSBqdXN0IGZvcmV3ZW50IGhhbGYgb2YgdGhlIGZlYXR1cmVzIG9uIG15IGNoYXJhY3RlciBzaGVldCwgc28gSSBkZWNpZGVkIHRvIHVzZSB0aGUgcnVsZXMgSSBoYWQgYXZhaWxhYmxlIGluIHRoZSBiZXN0IHdheSBwb3NzaWJsZSB0byByZXByZXNlbnQgbXkgbWluaS4gClByZXZpb3VzbHksIHRoZSBQUFAgaGFzIGJlZW4gZGVueWluZyBhbGwgc3VjaCBjaGFyZ2VzIGFuZCBpZiBhbnlvbmUgYXNrZWQgYW55IFBQUCBsZWFkZXIgdG9kYXksIHRoZSBzYW1lIGRlbmlhbHMgd291bGQgYmUgcmVwZWF0ZWQgd2l0aCB0aGUgYXJndW1lbnQgdGhhdCBpZiB0aGVyZSB3YXMgYW55IGFsbGVnYXRpb24sIGl0IG11c3QgYmUgcHJvdmVkIGluIGEgY291cnQgb2YgbGF3LiAKTW9zdCBvZiB0aGUgb3RoZXJzIChpZiBzdGlsbCBvcGVyYXRpb25hbCkgbGlrZSBCYXZhcmlhbiBQb2tlciBUb3VyLCA5IDIgcG9rZXIgZXRjIGhhdmUgYSB2ZXJ5IHN0ZWVwIGJsaW5kIHN0cnVjdHVyZSBpbiB0aGVpciBTTkdzIHNvIGl0IG1haW5seSBhYm91dCBjb25zdGFudCBhbGwgaW4gcHVzaGluZy4gQnV0IHRob3NlIGV2ZW50cyBhcmUgZ29vZCBmb3IgbWFraW5nIGNvbnRhY3Qgd2l0aCByZWd1bGFyIHBsYXllcnMgYW5kIGZpbmRpbmcgbGVzcyBsZWdhbCBvcHBvcnR1bml0aWVzIHdpdGggbW9yZSBzZXJpb3VzIHBva2VyLiAoMS8yIG9yIDIvNSBpbiBibGluZHMsIG5vIHN0YWNrIGxpbWl0cyA1IHJha2UgYmFjayB3aGVuIEkgdXNlZCB0byBrbm93IHRob3NlKS4gCkhvbmVzdGx5LCBpdCBtb3N0bHkganVzdC4gZWFzZSBvZiB1c2UuIEkgZG9uIGxpa2UgYSBzdXBlciBwaWdtZW50ZWQgZXllc2hhZG93IGVpdGhlciwgYnV0IEkgZG8gbGlrZSBhIHNtb290aCwgdmVyeSBibGVuZGFibGUgb25lLCBhbmQgSSBkaXNsaWtlIGZhbGxvdXQuIExhdXJhIE1lcmNpZXIgYWN0dWFsbHkgaGFzIG15IGZhdm91cml0ZSBleWVzaGFkb3cgZm9ybXVsYSAgIGFsd2F5cyB2ZXJ5IHNtb290aCBhbmQgc29waGlzdGljYXRlZCBmZWVsaW5nLgpIYXBwZW5lZCB2ZXJ5IGZhc3QuIApJbiBhZGRpdGlvbiwgdGhlIGp1ZGdlIHBvaW50ZWQgb3V0IHRoYXQgZXZlbiBpZiBoaXMgY2VsbHBob25lIGNvc3RzIHdlcmUgZGVkdWN0aWJsZSwgdGhlIGFtb3VudCBkZWR1Y3RlZCBiZSBsaW1pdGVkIHRvIGEgcmVhc29uYWJsZSBwb3J0aW9uIHJlcHJlc2VudGluZyB3b3JrIHJlbGF0ZWQgdXNlIGFzIG9wcG9zZWQgdG8gcGVyc29uYWwgdXNlLiBUaGUgdGF4cGF5ZXIgZXhwZW5zZWQgYSB2YXJpZXR5IG9mIHBlcnNvbmFsIGl0ZW1zIHVuZGVyIHRoZSBoZWFkaW5nIHdoaWNoIGluY2x1ZGVkIGZvb3R3ZWFyIGFuZCBjbG90aGVzLCBhIGNhbWNvcmRlciwgY29tcHV0ZXIgcmVsYXRlZCBzdXBwbGllcywgYW5kIG90aGVyIHN1cHBsaWVzIHN1Y2ggYXMgYnVsYnMsIHRhcGUgYW5kIGEgZmxhc2hsaWdodC4gCk5pY2UgaW5zaWdodC4gClRpZ2h0IHBhc3NpdmUgICBUaGlzIHN0eWxlIGJhc2ljYWxseSBjb25zaXN0cyBvZiBvbmx5IHBsYXlpbmcgdmVyeSBmZXcgaGFuZHMsIGFuZCBkb2luZyB2ZXJ5IGxpdHRsZSBiZXR0aW5nIG9yIHJhaXNpbmcuIApXaGVuIGl0IGNvbWVzIHRvIHZpZGVvIHBva2VyIHRob3VnaCwgYmx1ZmZpbmcgaXMgY29tcGxldGVseSB1c2VsZXNzLiAKSXQgSVMgbWVhbmluZ2xlc3MuIApUaGVpciBleHByZXNzaW9ucyB3ZXJlIHZlcnkgc2VyaW91cyBhbmQgYXR0ZW50aXZlLiAKSW4gdGhlIG1pZHN0IG9mIGhlciBvd24gaGVjdGljIGxpZmUgYXMgYW4gYXR0b3JuZXkgYW5kIGxhdyBjbGVyayBmb3IgU3VwcmVtZSBDb3VydCBKdXN0aWNlIFNhbmRyYSBEYXkgTydDb25ub3IsIFJ1YmluIGV4cGVyaWVuY2VkIGFuIGVwaXBoYW55IGFzIGhlciB2YWd1ZWx5IHN0YXRlZCBldmVyeWRheSBnb2FscyBhbmQgaGVyIGZhaWx1cmUgdG8gYWNoaWV2ZSB0aGVtIGNvYWxlc2NlZCBpbnRvIHRoZSB1bmRlcnN0YW5kaW5nIHRoYXQgc2hlIHdhcyB3YXN0aW5nIGhlciBsaWZlLiBBdCB0aGF0IG1vbWVudCBpbiAyMDA2LCBSdWJpbiBzYXlzLCBzaGUgcmVhbGl6ZWQgdHdvIHRoaW5nczogIkkgd2Fzbid0IGFzIGhhcHB5IGFzIEkgY291bGQgYmUsIGFuZCBteSBsaWZlIHdhc24ndCBnb2luZyB0byBjaGFuZ2UgdW5sZXNzIEkgbWFkZSBpdCBjaGFuZ2UiIFtzb3VyY2U6IFJ1YmluXS4uIApBbmRhIGp1Z2EgYmlzYSBtZW5jYXJpIG1lamEgeWFuZyBtZW1lbnVoaSBrcml0ZXJpYSBzcGVzaWZpayBkZW5nYW4gbWVuZ2V0dWsgdG9tYm9sICJIb2xkJ0VtIFRhYmxlcyIuIEd1bmFrYW4gcGVuZ2dlc2VyIHVudHVrIG1lbmVudHVrYW4ganVtbGFoIHRhcnVoYW4gZGFuIG9uZ2tvcyBiZXJnYWJ1bmcsIGRhbiBndW5ha2FuIG1lbnUgZHJvcCBkb3duIHVudHVrIG1lbWlsaWgganVtbGFoIHBlbWFpbiBkYW4ga2VjZXBhdGFuIHBlcm1haW5hbi5CZWRhIGRlbmdhbiB2ZXJzaSBGYWNlYm9va255YSwgQW5kYSB0aWRhayBiaXNhIG1lbmplbGFqYWhpIHNlbXVhIG1lamEgeWFuZyB0ZXJzZWRpYSBkaSBzaW5pLlBhaGFtaSBjYXJhIGJlcm1haW4gVGV4YXMgSG9sZCdFbS4gCktpbmRhIGRlcGVuZHMgb24gdGhlIGxpZ2h0aW5nIGRvbiB5b3UgdGhpbms/IEkgd291bGQgdGhpbmsgdGhlIHJlZmxlY3RpdmUgbmF0dXJlIG9mIHRoZSBnbGl0dGVyIG1pZ2h0IGJlIGVhc3kgdG8gc3BvdC4gSXMgdGhlIHBhaW50IGluIGJhbmsgYW50aSB0aGVmdCBwYWNrcyBwaG9zcGhvcmVzY2VudCBvciByZWZsZWN0aXZlPyBBcmUgeW91IHN1cmUgaXQgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgZmFjdCB0aGF0IHdpdGggZ2xpdHRlciB5b3UgY2FuIGp1c3QganVtcCBpbiBhIHBvbmQgb3IgZm91bnRhaW4sIGRpcCB1bmRlciBhIGdhcmRlbiBob3NlLCBvciBqdXN0IHJvbGwgeW91ciB3aW5kb3dzIGRvd24gd2hpbGUgbWFraW5nIGEgZ2V0YXdheSwgdG8gbWFrZSBhIGRlY2VudCBpbXBhY3Qgb24gZ2V0dGluZyBjbGVhbiBmYXN0PyBZb3Ugc3VyZSBpdCBoYXMgbm90aGluZyB0byBkbyB3aXRoIHRoZSBmYWN0IHRoYXQgZ2xpdHRlciB3b24gc3RhaW4gdGhlIG1vbmV5LCBjbG90aGVzIG9yIHNraW4/LiAKQWxsIG9mIHRoZXNlIHRoaW5ncyBhZGQgdG8gdGhlIGJpbmdvIHBsYXlpbmcgZXhwZXJpZW5jZS4uIApCZWkgbWlyIHNpbmQgc2ljaCA3IEZybWNoZW4gYXVzZ2VnYW5nZW4uIApGb3IgZWFjaCBvZiB0aGUgaXRlbXMgSSBwb3N0ZWQsIEkgZ290IHRlbiBpbW1lZGlhdGUgIklzIHRoaXMgaXRlbSBzdGlsbCBhdmFpbGFibGU/IiBmb3JtIGxldHRlcnMuIApBbmQgaSBkbyBwcmV0dHkgbXVjaCBhbnkgY2xlYW5pbmcgdGhhdCBpcyBkb25lIGluIHRoaXMgaG91c2UuIFRoYXQgYmVlbiBhIHBvaW50IG9mIGNvbnRlbnRpb24gcmVjZW50bHkgYnV0IGhlIGRvZXNuIHJlYWxseSBtYWtlIGV4dHJhIG1lc3Nlcy4gSXQganVzdCB0aGUgbm9ybWFsIGRhaWx5IGNob3Jlcy4gV2UgYm90aCB3b3JrIGFuIGVxdWFsIGFtb3VudCBvZiB0aW1lIG91dCBvZiB0aGUgaG91c2UgYnV0IHdlIGFib3V0IHRvIG9wZW4gdXAgYSB3aG9sZSBvdGhlciBjYW4gb2Ygd29ybXMgaWYgSSBrZWVwIHR5cGluZyBMT0wKSW4gbGF0ZSAyMDA5LCB0aGUgb3duZXIgb2YgdGhlIFNoYWR5IExhZHkgUmFuY2ggYnJvdGhlbCBjaGFsbGVuZ2VkIHRoaXMgcHJvdmlzaW9uIGJlZm9yZSB0aGUgTnllIENvdW50eSBMaWNlbnNpbmcgYW5kIExpcXVvciBCb2FyZCBhbmQgcHJldmFpbGVkLlsxMl0gSW4gSmFudWFyeSAyMDEwLCB0aGUgYnJvdGhlbCBoaXJlZCBhIG1hbGUgcHJvc3RpdHV0ZSB3aG8gd291bGQgb2ZmZXIgaGlzIHNlcnZpY2VzIHRvIGZlbWFsZSBjbGllbnRzLFsxM10gYnV0IGhlIGxlZnQgdGhlIHJhbmNoIGEgZmV3IHdlZWtzIGxhdGVyLlsxNF0uIApZZXMsIGl0IG9ubHkgdGFrZXMgYSBmZXcgbWludXRlcyBhbmQgaWYgdGhhdCBpcyBhbGwgeW91IGhhdmUgdG8gZG8gdG8gYmUgc3VjY2Vzc2Z1bCBhdCBvbmxpbmUgcG9rZXIsIHlvdSB3b24ndCBiZSBhYmxlIHRvIHBhc3MgdGhpcyB1cC4gVGhlbiBhZ2FpbiwgaWYgeW91IGRlY2lkZSBub3QgdG8ganVzdCB0byBwcm92ZSB0aGlzIGFydGljbGUgd3JvbmcgdGhlbiB5b3UgYXJlIG1pc3Npbmcgb3V0IG9uIGEgZ29sZCBtaW5lLiBJdCdzIHVwIHRvIHlvdSwgYnV0IHdlIHJlY29tbWVuZCBpdCB0byBldmVyeW9uZSB3aG8gaXMgcmVhZGluZy4gCjEuNSBnYWxsb25zIG1vcmUgdGhhbiB5b3Ugd2FudCBpbiB0aGUgZmVybWVudGVyLiAKTm90IHRvIG1lbnRpb24gdGhpcyBzdGF0ZSBoYXMgYmVlbiBwd25lZCBieSBtYWpvciBzdG9ybXMgZm9yIDMgc3RyYWlnaHQgeWVhcnMsIGl0IHNlZW1zIHVuanVzdGlmaWVkIHRvIG1lIHRvIGFzayB0aGF0IGZyb20gdGhlIHN0YXRlLCBqdXN0IHNvIHlvdSBjYW4gc2VsZiBmZWxsYXRlIG92ZXIgdGhlIGxhdGVzdCBVUyBOZXdzIFdvcmxkIFJlcG9ydC4gRXZlbiBpZiBGbG9yaWRhIG1hbmFnZXMgdG8gdXBzZXQgR2Vyb2dpYSBhbmQgbWFrZSBpdCB0byB0aGUgU0VDIGNoYW1waW9uc2hpcCBnYW1lLCBJIGRvIG5vdCB0aGluayB0aGV5IGNhbiB3aW4gaXQuIEluIG15IG1pbmQgZXZlcnkgb3RoZXIgdGVhbSB0aGF0IHBsYXlzIGluIGEgY29uZmVyZW5jZSB3aXRoIGEgY2hhbXBpb25zaGlwIGdhbWUgaGFzIGEgY2hhbmNlIHRvIHdpbiBpdC4gCkFnYWluLCBnZXR0aW5nIG9sZGVyIG1hZGUgdGhpcyBnbyBhd2F5Li4gCkkgc2hvdWxkIGNsYXJpZnkgbXkgY29tbWVudC4gCihQcml2YWN5IFBvbGljeSlGYWNlYm9vayBBZHNUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIApJIG5ldmVyIHJlY2VpdmVkIGFueSAiYWRkaXRpb25hbCIgc2VydmljZSBhbmQgdGhlIHdheSBJIGdvdCBhcm91bmQgdGhpcyB3YXMgdGhhdCBJIHBhaWQgdGhlbSBleHRyYSAidGlwcyIgdG8ganVzdCBjaGF0dGluZyBkaXJ0eSB3aXRoIG1lIGluc3RlYWQgd2hpbGUgbWFzc2FnaW5nIG1lLiBJIHRvbGQgdGhlbSAoaW4gdGhlaXIgbmF0aXZlIGxhbmd1YWdlLCBJIHNwZWFrIGJvdGggQ2FudG9uZXNlIGFuZCBNYW5kYXJpbikgdGhhdCBJIGRvbiBkbyBleHRyYSBzZXJ2aWNlcyAiYW55bW9yZSIgZHVlIHRvIGEgbWVkaWNhbCByZWFzb24gYnV0IHRoYXQgSSBzdGlsbCBlbmpveSBzZXh1YWwgdGFsayBkdXJpbmcgdGhlIG1hc3NhZ2UgKGllLiB0ZWFzaW5nKS4gSWYgSSBkaWRuIGRvIHRoaXMsIGl0IHdvdWxkIHJhaXNlIHN1c3BpY2lvbiBhcyB0byB3aG8gb3Igd2hhdCBJIHdhcyBkb2luZy4KQT0gQXdhcmUgb2YgRW1wbG95ZWUgUGVyZm9ybWFuY2U6IERvIHlvdSBrbm93IGhvdyB5b3VyIGVtcGxveWVlcyByZXByZXNlbnQgeW91ciBjb21wYW55PyBJIHRoaW5rIGFib3V0IGJpZyBjb21wYW5pZXMgYW5kIEkgdGhpbmsgYWJvdXQgdGhlIHRob3VzYW5kcyBvZiBlbXBsb3llZXMgdGhleSBoYXZlIGFuZCBob3cgZWFjaCBvbmUgb2YgdGhlbSByZXByZXNlbnQgdGhhdCBiaWcgY29tcGFueSBldmVyeWRheS4gClNlaXQgaWhuZW4gamVtYW5kIGVyemhsdCBoYXQsIGVzIGdiZSBrZWluZW4gR290dCBkZXIgYWxsZXMgc2llaHQsIG1hY2hlbiBkaWUgTWVuc2NoZW4gd2FzIHNpZSB3b2xsZW46IHNpZSBnZWJlbiBzaWNoIGRlbiBrcnBlcmxpY2hlbiBGcmV1ZGVuIGhpbiB1bmQgd2VyIGZyaGVyIGRhZnIgYmV0ZXRlLCBkZXIgQWxsbWNodGlnZSBtZ2Ugc2ljaCBkZXIgVGFudGUgZXJiYXJtZW4sIGhpbGZ0IGlociBoZXV0ZSBzZWxic3QgaW5zIEplbnNlaXRzLiBNYW4gZmhsdCBzaWNoIHdhaG5zaW5uaWcgYXVmZ2VrbHJ0IG1pdCBkZXIgRXJrZW5udG5pcywgZGVyIEhvbW8gc2FwaWVucyAoc28gYmV6ZWljaG5lbiBzaWNoIG1hbmNoZSBTcGF2Z2VsIHNlbGJlcikgc3RhbW1lIHZvbiBkZW4gRGlub3NhdXJpZXJuIGFiLiAKSSB3YXMgbm90IGFueXdoZXJlIGNsb3NlIHRvIHN1cGVybm92YSBvciBzdXBlcm5vdmEgZWxpdGUgb24gU3RhcnMgeWV0LCBzbyBteSByYWtlYmFjayB3YXMgbm90IGNvdmVyaW5nIG15IGV4cGVuc2VzLiBJIGFsc28gaGFkIHRvIHBheSByZW50IGZvciB0aGUgZmlyc3QgdGltZSBpbiBteSBsaWZlLCB3aGljaCBhdGUgdXAgYSB0b24gb2YgbXkgbW9uZXkuIApCYWNrcGFnZSBlc2NvcnRzIG5vcnRoIHBsYXR0ZSBuZWJyYXNrYQpUaGUgaW5zdHJ1bWVudGFscyBhcmUgbWFkZSBmcm9tIHRoZSBjcmVha2luZyBtZXRhbCBvZiB0aGUgc2hpcCwgd2hpY2ggcmVtaW5kcyBtZSBvZiB0aGUgc291bmRzIGFuZCBmZWVsaW5nIG9mIEJpb3Nob2NrLiBUaGUgYWxidW0gaXMgaGVsZCB1cCBhbG1vc3QgZW50aXJlbHkgYnkgdGhlIGF0bW9zcGhlcmUgaXQgY3JlYXRlcy4gCk1hbnkgZXNzZW50aWFsIG9pbHMgaGF2ZSBhIHJlbWFya2FibGUgYWJpbGl0eSB0byBib3RoIHN1cHBvcnQgdGhlIGltbXVuZSBzeXN0ZW0gYW5kIGluY3JlYXNlIG9uZSdzIHJhdGUgb2YgaGVhbGluZy4gU29tZSBvZiB0aGVzZSBzYW1lIGVzc2VudGlhbCBvaWxzIGFyZSBhbHNvIHBvd2VyZnVsIGFudGlzZXB0aWNzLiBPbmUgd2F5IHRoZXNlIG9pbHMgZmlnaHQgaW5mZWN0aW9uIGlzIHRvIHN0aW11bGF0ZSB0aGUgcHJvZHVjdGlvbiBvZiB3aGl0ZSBjb3JwdXNjbGVzLCB3aGljaCBhcmUgcGFydCBvZiB0aGUgYm9keSdzIGltbXVuZSBkZWZlbnNlLiBTdGlsbCBvdGhlciBlc3NlbnRpYWwgb2lscyBlbmNvdXJhZ2UgbmV3IGNlbGwgZ3Jvd3RoIHRvIHByb21vdGUgZmFzdGVyIGhlYWxpbmcuIEFzIGFuIGV4dHJhIGJvbnVzLCB0aGUgcmVnZW5lcmF0aXZlIHByb3BlcnRpZXMgb2YgdGhlc2UgZXNzZW50aWFsIG9pbHMgaW1wcm92ZSB0aGUgY29uZGl0aW9uIGFuZCB0b25lIG9mIHRoZSBza2luLiBBbGwgY2FuIGJlIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBoZXJiYWwgcmVtZWRpZXMgZGVzaWduZWQgdG8gaW1wcm92ZSBpbW11bml0eS4gUmVsYXhhdGlvbiBhY2hpZXZlZCB0aHJvdWdoIGEgbWFzc2FnZSBvciBiYXRoIGxvd2VycyBzdHJlc3MsIGltcHJvdmVzIHNsZWVwLCBhbmQgdGh1cyBzdGltdWxhdGVzIHRoZSBpbW11bmUgc3lzdGVtLiAoRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZSB0aGUgYXJ0aWNsZSBvbiBBcm9tYXRoZXJhcHkgU3RyZXNzIFJlbGllZiBmb3IgYWRkaXRpb25hbCB0cmVhdG1lbnRzIHRoYXQgY2FuIGJlIHBhcnQgb2YgeW91ciBpbW11bmUgdGhlcmFweS4pCk5lZWRsZXNzIHRvIHNheSwgdGhlIG5hbWUgd2FzIGNhdGNoeSwgYnV0IHdoZW4gdGhlIHBhZ2UgY2FtZSB1cCBhbmQgdGhhdCBmYW50YXN0aWMgbG9va2luZyBDYXNpbm8gUG9rZXIgQ2hpcHMgbWFob2dhbnkgY2FzZSB3YXMgcmlnaHQgaW4gZnJvbnQgb2YgdXMgd2Ugd2VyZSBkZWZpbml0ZWx5IGludHJpZ3VlZC4gU2VlLCB0aGUgb25seSBuaWNlIGxvb2tpbmcgdGhpbmcgd2UgaGFkIGZvciBvdXIgZnJpZW5kcyBhbmQgZmFtaWx5IHRoYXQgY29tZSBvdmVyIHdlcmUgdGhlc2UgY29sZCBmcm9zdHkgbXVncyB3ZSBwaWNrZWQgdXAgaW4gVGV4YXMuIE90aGVyIHRoYW4gdGhhdCwgb3VyIGJhc2VtZW50IGlzIHVuZmluaXNoZWQsIHdlIGhhdmUgYW4gb2xkIGNvdWNoLCBlbm91Z2ggY2hhaXJzLCBhbmQga2l0Y2hlbiB0YWJsZSB0aGF0IGRvZXMgdGhlIGpvYi4KV2hlbiBJIHNhdyB5b3VyIHBvc3QgeWVzdGVyZGF5IGFuZCByZWFkIHRoZSB0aXRsZSwgbXkgaGVhcnQgc2Fuay4gSSBtaXNpbnRlcnByZXRlZCBpdCBhbmQgYXNzdW1lZCBpdCBoYWQgZ29uZSBuZWdhdGl2ZWx5IGZvciB5b3UuIEkgYW0gc28gaGFwcHkgdG8gaGVhciB0aGF0IHlvdSBoYXZlIHRoZSBzdXBwb3J0IG9mIHlvdXIgaHVzYmFuZCBhbmQgZXZlbiBoYXBwaWVyIHRvIGhlYXIgdGhhdCB3aGlsZSB0aGlzIHdhcyBub3QgeW91ciBwbGFuLCB0aGF0IHlvdSBhcmUgaGFwcHkgd2l0aCB5b3VyIGN1cnJlbnQgcGF0aC4gVGhpcyBpcyBob25lc3RseSB0aGUgYmVzdCB0aGluZyBJIGhlYXJkIGFsbCBkYXkuIE15IHRob3VnaHRzIGFuZCBwb3NpdGl2ZSB2aWJlcyBhcmUgd2l0aCB5b3UgYW5kIHlvdXIgZ3Jvd2luZyBmYW1pbHkuIEdvb2QgbHVjayB3aXRoIHRoZSBsYXd5ZXIsIEkgYWxzbyBtYWtlIHN1cmUgTUlMIG5ldmVyIG1ldCB0aGlzIGtpZCBpbiBoZXIgbGlmZS4gRWZmIHRoYXQgd29tYW4uCkNoaW5hLCBUQ00gYW5kIFdNIGhhdmUgY29leGlzdGVkIGZvciBtb3JlIHRoYW4gMjAwIHllYXJzIGFuZCBib3RoIHR5cGVzIG9mIG1lZGljYXRpb24gYXJlIGxpY2Vuc2VkIGFzIHBhdGVudCBtZWRpY2luZSBhbmQgYXJlIHdpZGVseSBhdmFpbGFibGUgYXQgcGhhcm1hY2llcywgaG9zcGl0YWxzIGFuZCBvdGhlciBvdXRsZXRzLCB0aGUgcmVzZWFyY2hlcnMgd3JpdGUuIApIb3cgdG8gcGxheSB3aXRoIGFsbCBpbiBpbiBhIGxhdGUgdHJvdW5hbWVudCBzdGFnZSB3aGVuIGVmZmVjdGl2ZSBzdGFja3MgYXJlIGxlc3MgdGhhbiAxMkJCLiAKRGVwZW5kaW5nIG9uIHRoZSBleGFjdCBnYW1lICAgdGhlIGhhbmRzIGNhbiBiZSAiaGlnaC9sb3cvaGlnaCIsICJoaWdoL2hpZ2gvaGlnaCIgZXRjLgpCdXQgdGhpcyB3YXMgRmx5bm4gZmlyc3Qgbm92ZWwsIHNvIEkgZ3Vlc3NpbmcgdGhhdCBEYXJrIFBsYWNlcyBhbmQgR29uZSBHaXJsIGFyZSBiZXR0ZXIuLiAKSG93ZXZlciwgaW5vbmxpbmUgcG9rZXIsIHRoZSBwb3NzaWJpbGl0eSBvZiBoYXZpbmcgYSBsb3Qgb2YgaGFuZHMgaXMgaGlnaCBiZWNhdXNlIG9mIHRoZSBzcGVlZCBhbmQgbXVsdGkgdGFza2luZyBjYXBhYmlsaXRpZXMuIEl0J3MganVzdCB0aGF0IHBlb3BsZSB0ZW5kIHRvIGZvcmdldCBhbmQgZGlzbWlzcyB0aGVpciBsb3NzZXMgd2l0aCB0aGUgc2FpZCAibHVja3kiIGhhbmQgcGVyaGFwcyBiZWNhdXNlIHRoZXkndmUgd29uIGEgaHVnZSBwb3Qgd2l0aCBpdC4gVGhlIHRoaW5nIGlzLCBpdCBzdGlsbCBsZWFkcyB0byBza2lsbCwgYW5kIHBsYXllcnMgc2hvdWxkbid0IGp1c3QgcmVseSBvbiBsdWNreSBoYW5kcy4gVGhleSBzaG91bGQgYmUgYWJsZSB0byBjaGFuZ2UgYW5kIGV2b2x2ZSB0aGUgc3RhdGUgb2YgdGhlaXIgaGFuZHMgYW5kIG5vdCByZWx5IG9uIGx1Y2t5IGNhcmRzIGJlY2F1c2Ugb2Ygc3VwZXJzdGl0aW9ucy4KSSBoaXQgYSBmYWlybHkgZWFzeSA3MTYgYmFjayBpbiBOb3ZlbWJlciBzbyBJIHRoaW5rIEkgaGF2ZSBpdCBpbiBtZSBhcyBsb25nIGFzIEkgc3RheSBoZWFsdGh5IHVudGlsIHRoZW4uIFdvdWxkIGxpa2UgdG8gYnJlYWsgNzUwLCBidXQgd2Ugd2lsbCBzZWUgaG93IGl0IGdvZXMuIApXaGVuIGNvbWVzIHRvIGxhbmd1YWdlLCB3ZSBzaG91bGQgZGVsaXZlciB0aGUgbWVzc2FnZSBpbiBhIHNpbXBsZSBsYW5ndWFnZSB3aGljaCBjYW4gZWFzaWx5IHVuZGVyc3RhbmQgYnkgYW5vdGhlciBwYXJ0eS4gU28gbGFuZ3VhZ2UgcGxheXMgYW4gaW1wb3J0YW50IHJvbGUgaW4gcHJvY2VzcyBvZiBjb21tdW5pY2F0aW9uLiAKSG9wZSBsb29rcyBmb3J3YXJkLCBidXQgaXQgZHJhd3MgaXRzIGVuZXJnaWVzIGZyb20gdGhlIHBhc3QsIGZyb20ga25vd2luZyBoaXN0b3JpZXMsIGluY2x1ZGluZyBvdXIgdmljdG9yaWVzLCBhbmQgdGhlaXIgY29tcGxleGl0aWVzIGFuZCBpbXBlcmZlY3Rpb25zLiBJdCBtZWFucyBub3QgYmVpbmcgdGhlIHBlcmZlY3QgdGhhdCBpcyB0aGUgZW5lbXkgb2YgdGhlIGdvb2QsIG5vdCBzbmF0Y2hpbmcgZGVmZWF0IGZyb20gdGhlIGphd3Mgb2YgdmljdG9yeSwgbm90IGFzc3VtaW5nIHlvdSBrbm93IHdoYXQgd2lsbCBoYXBwZW4gd2hlbiB0aGUgZnV0dXJlIGlzIHVud3JpdHRlbiwgYW5kIHBhcnQgb2Ygd2hhdCBoYXBwZW5zIGlzIHVwIHRvIHVzLi4gClBlb3BsZSBhcmUgbm90IGdvaW5nIHRvIGxlYXJuIHdoYXQgaXMgb2ZmZW5zaXZlIGFuZCB3aHkgaWYgbm8gb25lIHRlbGxzIHRoZW0uIE9uZSBjYW4gc2F5ICIgSXQgbm90IG15IGpvYiB0byBlZHVjYXRlIHRoZW0hISIgQW5kIHdoaWxlIHRoYXQgc3RhdGVtZW50IG1heSBiZSB0cnVlLCB0aGUgYW5nZXIgYW5kIGZ1cnkgdGhhdCByZXN1bHQgZnJvbSBpZ25vcmFuY2UgYnJlZWRzIG1vcmUgYW5nZXIgYW5kIGhhdGUuIEVkdWNhdGluZyBvbmUgYW5vdGhlciBoYXMgbXVjaCBwb3RlbnRpYWwgdG8gc3RvcCB0aGUgY3ljbGUgb2YgaGF0ZSBhbmQgYW5nZXIuLiAKVGhhdCwgYW5kIG5vdCBkb2luZyBleGVyY2lzZXMgdGhhdCBodXJ0LgpNeSBwbGFuIGFuZCByZWFzb25zIGFyZSBzbyBzaW1pbGFyIHRvIHlvdXJzOyBJIGFtIGFsc28gYW4gZXggQ2hyaXN0aWFuIG5vbiBiZWxpZXZlciB3aG8gc3RpbGwgY29uc2lkZXJzIENocmlzdGlhbml0eSBhcyBwYXJ0IG9mIG15IGlkZW50aXR5LCBhbmQgSSBhbSBhbHNvIHdvcmtpbmcgdG8gbW92ZSB0byBHZXJtYW55LgpBbGwgb2YgdGhlc2UgbXVzY2xlIGFjdGl2YXRpb25zIHdpbGwgc3RyZW5ndGhlbiB5b3VyIGNvcmUgbXVzY2xlcy4uIApUaXRhbiBCZXQncyB3ZWJzaXRlIGlzIGF2YWlsYWJsZSBpbiBmb3VyIGludGVybmF0aW9uYWwgbGFuZ3VhZ2VzIHRoYXQgYXJlIHNwb2tlbiBieSBtaWxsaW9ucyBvZiBwZW9wbGUgdGhyb3VnaG91dCB0aGUgd29ybGQuIFlvdSBjYW4gcGxhY2UgYmV0cyBvciByZWNlaXZlIGN1c3RvbWVyIHN1cHBvcnQgaW4gRW5nbGlzaCwgU3BhbmlzaCwgR2VybWFuIG9yIFJ1c3NpYW4uIFRoZSB2YXJpZXR5IG9mIGxhbmd1YWdlcyBpcyBub3QgdGhhdCBzdHJvbmcsIGJ1dCBpcyBzYXRpc2ZhY3RvcnksIGFuZCBUaXRhbiBCZXQgc3RyaXZlcyB0byBleHBhbmQgaXRzIHNlcnZpY2VzIGluIGV2ZW4gbW9yZSBsYW5ndWFnZXMuLiAKSSBwbGF5ZWQgYSA0MCBtaW51dGUgZ2FtZSBQdlQgaW4gbG90diB3aGVyZSBpdCB3YXMgbWFzcyBjYXJyaWVyIHZzIG1hc3MgdGhvciBiZWNhdXNlIGVpdGhlciBvZiB1cyBjb3VsZG4gcHJlc3N1cmUgb3RoZXJzIGJhc2VzIGJlY2F1c2UgaXQgd2FzIGEgbWlsZSBiZXR3ZWVuIHRoZW0uT29ncmF5SmluIEFpciBHcmVlbiBXaW5ncyAxIHBvaW50ICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ29ZZWFoIG1vc3Qgb2YgdGhlIHN0dWZmIEkgY29tcGxhaW5pbmcgYWJvdXQgaXMgSE9UUy9XaW5ncyBwcm9ibGVtcy4gSSBkbyBhZ3JlZSB0aGF0IHdlIGhhdmUgbG90cyBvZiBnb29kIHdheXMgdG8gZGVmZW5kIGJhc2ljIGhhcmFzcyBob3dldmVyIG1vc3Qgb2YgUHJvdG9zcyBwcm9ibGVtcyBvdmVyIHRoZSBsaWZlIG9mIFNDMiBoYXZlIHRvIGRvIHdpdGggdGhpcyBpZGVhIHRoYXQgUHJvdG9zcyBpcyBzdXBwb3NlIHRvIGJlIGRlZmVuc2l2ZSB3aGljaCBpbiBiYXNpYyBzdHJhdGVneSBpcyBiYXNpY2FsbHkgY29uc2lkZXJlZCBhIGJhZCB0aGluZyBidXQgdGhleSBtYWRlIGEgc2lkZSB3aXRoIHRoYXQgYmVpbmcgYSBjb3JlIHBhcnQgb2YgdGhlcmUgZGVzaWduIHRoZW9yeS4gVGhlIHdheSBMT1RWIGlzIGdvaW5nIGxvb2tzIGFjdHVhbGx5IHByZXR0eSBnb29kIHRvIG1lIGluIGdlbmVyYWwgbW92aW5nIGF3YXkgZnJvbSB0aGlzIGRlZmVuc2l2ZSBzdGFuY2UgYW5kIHJlbGlhbmNlIG9uIGRlZmVuc2l2ZSBtZWNoYW5pc21zIGlzIGEgaHVnZSBzdGVwIGluIG1ha2luZyB0aGUgZ2FtZSBiZXR0ZXIuT29ncmF5SmluIEFpciBHcmVlbiBXaW5ncyAgMSBwb2ludHMgIHN1Ym1pdHRlZCAzIHllYXJzIGFnb09mIGNvdXJzZSBtZWNoYW5pY2FsLiAKKFRoaXMgaXMgZm9yIE9QIHdobyBkb2Vzbid0IGRyaXZlKS4gCllvdSBnYXRoZXIgYWxsIHRoZSBpbmZvcm1hdGlvbiB5b3UgY2FuIHRvIG1ha2UgdGhlIGJlc3QgcG9zc2libGUgZGVjaXNpb24uIApkZSBCbG9nc3Bpcml0IGVzdCBwYXJmb2lzIGQKTm9ydGhlYXN0IE9oaW8gVG9wIFdvcmtwbGFjZXMKV2hlbiBpbiB0aGUgcHJvY2VzcyBvZiBsZWFybmluZyBhcyBtdWNoIGFzIHlvdSBwb3NzaWJseSBjYW4gcmVnYXJkaW5nIHBva2VyIGNoaXBzIHRoYXQgYXJlIHNwZWNpZmljIHRvIG9uZSBjYXNpbm8sIHlvdSBtdXN0IGxlYXJuIGFzIHRvIHdoZXRoZXIgb3Igbm90IHRoZXJlIGFyZSBVViBtYXJraW5ncyBvbiB0aGUgcGllY2UuIFRoZXNlIGFyZSB0eXBpY2FsbHkgdmlzaWJsZSBvbiB0aGUgaW5sYXkgb2YgdGhlIHByb2R1Y3QuIE1hbnkgb2YgdGhlIHBva2VyIGNoaXBzIHRoYXQgeW91IHdpbGwgYmUgYWJsZSB0byBjb2xsZWN0IHdpbGwgaGF2ZSBiZWVuIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCBhIHRlY2hub2xvZ3kgdGhhdCBpcyByZWZlcnJlZCB0byBhcyAiUkZJRCIuCldpdGggcHJhY3RpY2UgdGhlIGdvbGZlciB3aWxsIG1vcmUgZWFzaWx5IGJlIGFibGUgdG8gYWxsb3cgdGhlaXIgbWluZCB0byByZWNyZWF0ZSB0aGlzIHJlbGF4ZWQgZm9jdXMgZXZlbiB1bmRlciBzdHJlc3NmdWwgY2lyY3Vtc3RhbmNlcy4uIApJIHN0aWxsIGhhdmUgdGhlIGFydCB0aGV5IGRyZXcgYW5kIGdpZnRzIHRoZXkgZ2F2ZSBtZS4gCkluIHJldHJvc3BlY3QsIEkgd2lzaCB0aGVyZSB3YXMgc29tZXRoaW5nIHRoYXQgdGhlIGRvY3RvciBjb3VsZCBoYXZlIHNhaWQgdGhhdCB3b3VsZCBoYXZlIG1hZGUgbWUgdW5kZXJzdGFuZCB0aGUgZ3Jhdml0eSBvZiBpdCBhbGwuIApNb3N0IGNhc2VzIG9mIHRoaXMgYXJ0aHJpdGlzIHdpbGwgYWxzbyBpbnZvbHZlIHN3b2xsZW4gYW5kIHBhaW5mdWwgdG9lcywga2VlbiBwYWluIGFuZCBwYWluIGluIHRoZSBoaXBzLiBVc3VhbGx5LCB0aGUgam9pbnRzIGZlZWwgc3dvbGxlbiwgaGF2ZSBkaWZmaWN1bHR5IG1vdmluZyBhbmQgdGVuZGVyIHRvIHRoZSB0b3VjaC4KSG93ZXZlciB0aGUgc2Nob29saW5nIHJlZ2FyZGluZyBiZWNvbWluZyBhIG1hc3NhZ2UgdGhlcmFwaXN0IG1pZ2h0IGRpZmZlciBmcm9tIG9uZSBzdGF0ZSB0byBhIGRpZmZlcmVudC4gCklubm9jZW50LCBzYXlzIFNtaXRoIGluIHNsYXlpbmcgVkVSTUlMSU9OIFBhdWwgU21pdGgsIG9wZW4gdG8gc3R1ZGVudHMgZ3JhZHVhdGluZyBJbiAzMywgb2YgUE9PIEFkYW1zIFN0LiwgcGxlYWRlZCAxOTY4IGZyb20gZWl0aGVyIHR3byBvciBmb3VyIHllYXIgaW5zdGl0dXRpb25zLiBUaGlzIHdpbGwgYXMgIGlubm9jZW50IGxhc3QgbmlnaHQgaW4gbXVuaWNpICBwYWwgY291cnQgdG8gYSBjaGFyZ2Ugb2YgZmlyc3QgIHN1cmUgdGhlIHJlY3J1aXRlciBvZiBpbW1lZGkgciBkZWdyZWUgbWFuc2xhdWdodGVyIGluIGNvbiAgYXRjbHkgZW1wbG95YWJsZSBwZXJzb25uZWwsIG5lY3Rpb24gd2l0aCB0aGUgQ2hyaXN0bWFzIGhpcyBicm90aGVyLiAKVGhlIE1hdnMgY291bGQgcG9zc2libHkgZ2V0IHRvIG1heCBzcGFjZS4gCk9uY2UgeW91IGFyZSBkb25lIHBsYXlpbmcsIHlvdSBnbyB0byB0aGUgY2FzaGllciB3aXRoIHRoZSBjaGlwcyB0aGF0IHlvdSBoYXZlIGFuZCBnZXQgcmVhbCBjYXNoIG1vbmV5IGluIHJldHVybiBmb3IgdGhlbS4gCkhvd2V2ZXIsIGFsbCBvZiB0aGlzIGlzIGNvbXBvdW5kZWQgYnkgdGhlIGZhY3QgdGhhdCBzaGUncyBhbHNvIHRvbGQgbXkgZ2lybGZyaWVuZCB0aGF0IHNoZSB3YW50cyB0byB3b3JrIHdpdGggY2hpbGRyZW4uIFRoYXQgbWFrZXMgaXQgYWxsIHNvIG11Y2ggd29yc2UsIGZvciBtZS4gSXQgZ2l2ZXMgbWUgdGhlIGhlZWJpZSBqZWViaWVzLiAKVGhlIG5leHQgdGVzdCBpbnZvbHZlcyB0aGUgZGFtYWdlIHRoYXQgbWF5IGNvbWUgZnJvbSBtb2lzdHVyZS4gSW4gb3JkZXIgdG8gdGVzdCB0aGUgcG9rZXIgY2hpcCwgcGxhY2Ugb25lIGluIHdhdGVyLCBhbmQgbGVhdmUgdGhlIHJlc3Qgb3V0LiBPbmNlIGl0IGhhcyBiZWVuIGVtZXJnZWQgaW4gd2F0ZXIgZm9yIGEgb25lIGRheSBwZXJpb2QsIGNhcmVmdWxseSBpbnNwZWN0IGl0IHRvIHNlZSBpZiBhbnkgbWFqb3IgZGFtYWdlIGhhcyBvY2N1cnJlZC4gCkZvcnNha2VuIEVzY2FsYXRpb24gcHV0cyBwb3N0IEdNIFNraXR0ZXIgaW4gV29ybGQgb2YgV2FyY3JhZnQuIFZlcnkgVElOT2lzaCBUYXlsb3Igd2FrZXMgdXAgYXMgYSBGb3JzYWtlbiBhbmQgbGVuZHMgYSBoYW5kIGVzdGFibGlzaGluZyB0aGUgbmV3IHVuZGVhZCBuYXRpb24uIE9uZ29pbmcsIGxpa2VseSBnb2luZyBvbiBoaWF0dXMgc2hvcnRseS4KRGVzZXJ0ZWRuZXNzIG9uIHRoZSBzdHJlZXRzIHRoYXQgY29tcGxldGVseSB2aW9sYXRlZCB0aGUgbm90aW9uIG9mIHRoZSBzdHlsaXNlZCBob3QsIGNyb3dkZWQgYW5kIGZsYXQgS2FyYWNoaSB3ZSBjb21lIHRvIGV4cGVjdC4gV2Ugb25seSBsZWFybnQgdGhhdCB3ZSB3ZXJlIGRlZXAgaW4gdGhlIGhlYXJ0IG9mIEx5YXJpIHVwb24gbm90aWNpbmcgdGhlIHZpc2libGUgYW5kIHByb3VkIFBQUCBwYXJhcGhlcm5hbGlhLCBmcm9tIHNjaG9vbCBidWlsZGluZ3MgdG8gcG9zdGVycyBhbmQgaG9hcmRpbmdzLCBsYXVkaW5nIFNoYWhlZWQgTW9odGFybWEgQmVuYXppciBCaHV0dG8uIFRoZXJlIHdhcywgb2YgY291cnNlLCBvbmUgb3RoZXIsIHJhdGhlciBsYXJnZSwgZ2l2ZWF3YXkuLiAKU28gYSBub3JtYWwgbmFtZSBpbiBBbWlydSBtaWdodCBiZSBXZXR1bmUgU2VuZ29yYSwgYnV0IHRvIHRyYW5zcG9zZSB0aGF0IHRvIFZhbmF3bywgaXQgd291bGQgYmVjb21lIFNlbmdvcmEgVHJhbGVnaGFrYXV2aXlvIEZ1dHJ1dGxpbmF2aXlvIFdldHVuZS4gT3BhbGl1IFl1amFudml5b3RzZWogVGhvam92aXlvdHNlaiBDYW5kZXNoIHdvdWxkIGJlY29tZSBLYXRlc2hlIE9wYWxpdSwgYWx0aG91Z2ggVmFuYXdvIGN1bHR1cmFsIGRvbWluYW5jZSBtaWdodCBoYXZlIGl0IHJlbmRlcmVkIGFzIE9wYWxpdSBZdWthd2l5b3Rla2kgVG9rb3dpa2l0ZWtpIEthdGVzaGUuLiAKVGhlIGRlY2lzaW9uIHRvIGludmFkZSB3YXMgS2ltIGVudGlyZWx5LCBhbmQgU3RhbGluIGV2ZW4gdG9sZCBoaW0gbm90IHRvIGV4cGVjdCBvcGVuIGhlbHAgaWYgdGhlIFVTIGdvdCBpbnZvbHZlZC4uIApJdCBhbHNvIGRpc3BsYXlzIGEgcmVhc29uYWJsZSBhbW91bnQgb2YgY29tcGV0ZW5jeSB0aGF0IGlmIHNvbWVvbmUgaXMgYWxyaWdodCB3aXRoIHRoZWlyIG93biBmaW5hbmNlcyB0aGV5IG1heSBub3QgYmUgc28gaW5jbGluZWQgdG8gdHJhc2ggYW5vdGhlcnMuIApKJ2FpIGZhaXQgdW4gZGxpY2lldXggZ3JhdGluIGQnZW5kaXZlcywgbm9uIHBhcyBhdSBqYW1ib24gbWFpcyAgbGEgdHJzIGRsaWNpZXVzZSBzYXVjaXNzZSBhdXggYWxndWVzIGQnT2xpdmllciBIbGliZXJ0LCBtZXJ2ZWlsbGV1eCBjaGFyY3V0aWVyIGluc3RhbGwgcHJzIGRlIEJyZXN0LgpBbGwgb2YgdGhpcyBoYXBwZW5zIGFnYWluc3QgdGhlIGJhY2tkcm9wIG9mIEdyaW1tZWwncyBibG9vZHRoaXJzdHkgcXVlc3QgdG8gZWxpbWluYXRlIGFsbCBjcmVhdHVyZXMgdGhhdCBhcmVuJ3QgbGlrZSBoaW0uICgiSGUgZG9lc24ndCBiZWxpZXZlIGluIGhpbXNlbGYgd2l0aG91dCBoaXMgZHJhZ29uLiBIZWxwIGhpbSBvdXQgd2l0aCB0aGF0LiIpIEl0J3MgYXMgaWYgaGUgZG9lc24ndCB0cnVzdCBoaXMgYXVkaWVuY2UgdG8gImdldCIgdGhpbmdzIHdpdGhvdXQgaGF2aW5nIHRoZW0gdmVyYmFsaXplZCAgIGFuIHVuZGVyZXN0aW1hdGlvbiBvZiBtYW55IGNoaWxkcmVuLCB3aG8gYXJlIGludHVpdGl2ZSBhbmQgY2FuIHBpY2sgdXAgb24gc3VidGxlIGN1ZXMuLiAKQW5kIHRoZW4gdGhlcmUgdGhlIGxheWVycyB5b3UgY2FuIHNlZSB1bnRpbCB5b3UgYWxyZWFkeSBrbm93IHRoZXkgZXhpc3QuIFRoZXJlIHdob2xlIHdvcmxkcyBpbnNpZGUgQmFuZ2tvayB0aGF0IHlvdSB3aWxsIG5ldmVyIGtub3cgYWJvdXQgdW5sZXNzIHlvdSBicnVzaGVkIHBhc3QgdGhhdCB3b3JsZCBhbmQgYmVlbiBjYXN1YWxseSBpbnRyb2R1Y2VkLiBCeSB0aGF0IEkgZG9uIG1lYW4gc2VlZHkgdGhpbmdzLCBidXQgaW5zdGVhZCBsYXllcnMgdGhhdCBhcmUgdGhlcmUgZm9yIGVhY2ggb2YgdGhlIGNpdHkgbWFueSBkaWZmZXJlbnQgY3VsdHVyZXMgYW5kIGNvbW11bml0aWVzIGFuZCBnZW5lcmF0aW9ucy4gCkFuZCBpdCB3YXMgb25seSB0aGUgcHJlY2VkaW5nIGFmdGVybm9vbiB0aGF0IHNoZSBoYWQgaW50ZXJmZXJlZCB0byBpbmZsdWVuY2UgTWFyaWxsYSBhZ2FpbnN0IGFsbG93aW5nIERhdnkgdG8gZ28gZmlzaGluZyB3aXRoIHRoZSBUaW1vdGh5IENvdHRvbnMuIERhdnkgd2FzIHN0aWxsIGJvaWxpbmcgb3ZlciB0aGlzLi4gCkFuZCBmb3JnZXR0aW5nIGhvdyBiYWQgcHJldmlvdXMgcHJlc2lkZW50cyB3ZXJlLiBFdmVyeSBwcmVzaWRlbnQgYWZ0ZXIgOS8xMSwgYW5kIGV2ZXJ5IG1ham9yIGNhbmRpZGF0ZSwgaGFzIGJlZW4gYW5kIHdpbGwgYmUgY29tcGFyZWQgdG8gSGl0bGVyLiBCZXJuaWUsIEhpbGxhcnksIEJ1c2gsIE9iYW1hLCBUcnVtcCwgUm9tbmV5LiBDb25zZXJ2YXRpdmVzIGJlY2F1c2Ugb2YgdGhlaXIgc29jaWFsIHZpZXdzIGFuZCBsaWJlcmFscyBiZWNhdXNlIG9mIHRoZWlyIGdvdmVybm1lbnQgdmlld3MuClJlYWQgbXkgYW5zd2VyIGFnYWluLiBBbmQgbWF5YmUgeW91IHNob3VsZCBpbmZvcm0geW91cnNlbGYgYWJvdXQgdGhlIGRlbW9jcmFjaWVzIG9mIHRoZSBCYWxrYW5zIGFuZCB0aGUgY29ycnVwdGlvbiB0aGVyZS4gVGhlIHdheSBvZiBnb3Zlcm5hbmNlIGhhcyBub3RoaW5nIHRvIGRvIHdpdGggY29ycnVwdGlvbi5CZWNhdXNlIHRob3NlIHBlb3BsZSBhcmUgYWxsIGlkaW90cyBhbmQgZG9uIHVuZGVyc3RhbmQgdGhlIGNvbmNlcHQgb2YgZnJlZWRvbSBhbmQgc2VjdXJpdHk/SSBkaWRuIHNheSB0aGF0IGVpdGhlci4gClRoZSBLZWxseSBDcml0ZXJpb24sIGFzIGFwcGxpZWQgdG8gcG9rZXIgb24gYSB2ZXJ5IGJhc2ljIGxldmVsLCBpcyBhYm91dCBrZWVwaW5nIHlvdXIgd2FnZXJpbmcgcHJvcG9ydGlvbmFsIHRvIHRoZSBwb3RlbnRpYWwgcmFuZ2Ugb2YgaGFuZHMgeW91IGZhY2UuIFlvdSBjYW4gYXBwbHkgdGhhdCBjb25jZXB0IHRvIHJha2UsIGFzIHdlbGwuLiAKIEhhdmUgZ2FpbmVkIGEgd2VsbCBmb3VuZGVkIGtub3dsZWRnZSBvZiBGb3VyaWVyIHNlcmllcywgdGhlaXIgZGlmZmVyZW50IHBvc3NpYmxlIGZvcm1zIGFuZCB0aGUgZnJlcXVlbnRseSBuZWVkZWQgcHJhY3RpY2FsIGhhcm1vbmljIGFuYWx5c2lzIHRoYXQgYW4gZW5naW5lZXIgbWF5IGhhdmUgdG8gbWFrZSBmcm9tIGRpc2NyZXRlIGRhdGEuIApBbHNvLCB3ZSByZWFsbHkgZGlkIG5lZWQgYSByZWdpc3RyeSBhcyB3ZSB3ZXJlIHRoZSB0eXBlIG9mIGNvdXBsZSB0aGV5IHdlcmUgZGVzaWduZWQgYXJvdW5kOiBuZXZlciBsaXZlZCB0b2dldGhlciB3aXRoIGFueW9uZSBvdGhlciB0aGFuIGZhbWlseSwgZGlkIG5vdCBoYXZlIG1hbnkgcG9zc2Vzc2lvbnMsIGFuZCByZWxhdGl2ZWx5IGxvdyBpbmNvbWUgc3RhcnRpbmcgb3VyIG5ldyBob21lLiBXZSBnb3QgYSBsb3Qga2l0Y2hlbiB0aGluZ3MgYW5kIGdpZnQgY2FyZHMgd2hpY2ggd2UgdXNlZCB0byBmaWxsIG91ciBmaXJzdCBhcGFydG1lbnQuIEJlc3QgZXhwZW5zaXZlIGl0ZW1zIHdlIGdvdCBvdXQgb2YgdGhlIHJlZ2lzdHJ5IHdlcmUgYSBzbWFsbCB0b2FzdGVyIG92ZW4sIGEgc3RhbmQgbWl4ZXIsIGFuZCBhIHNtYWxsIGRpbm5pbmcgcm9vbSBzZXQuCk5ldyBEZW1vZ3JhcGhpY3MsIE5ldyBHYW1lcywgTmV3IE1hcmtldHMKWW91IGNhbiB1c2UgdGhpcyBpZGVhIGZvciB0aGFuIGp1c3QgdmFsdWUgYmV0cy4gVGhlIGlkZWEgaXMganVzdCB0YWtpbmcgaGlzIGJhc2UgcmFuZ2UgdGhhdCB5b3UgYXNzaWduIGhpbSB0byBoYXZlIGluIHRoaXMgc3BvdCBhbmQgdXNpbmcgeW91ciB0d28gc3BlY2lmaWMgY2FyZHMgdGhhdCBvbmx5IHlvdSBrbm93IHRvIGRldGVybWluZSBpZiBoZSBhY3R1YWxseSBzdHJvbmdlciBvciB3ZWFrZXIgdGhhbiBoaXMgYmFzZSByYW5nZSB3b3VsZCBkaWN0YXRlLCBhbmQgdXNpbmcgdGhhdCBkZXRlcm1pbmF0aW9uIGZvciBtYXhpbXVtIGV4cGxvaXRhdGlvbi4uIApIZSBzYWlkIGhpcyBicm90aGVyLCB3aG8gbGl2ZWQgaW4gYSByZW1vdGUgcmV0aXJlbWVudCB2aWxsYWdlIGluIE1lc3F1aXRlLCBOZXZhZGEsIHdhcyBqdXN0IGEgcmVndWxhciBndXkgd2hvIGxpa2VkIGdhbWJsaW5nLgpDZXBlbmRhbnQsIGdyY2UgIGwnYW1hYmlsaXQgZHUgcGVyc29ubmVsIGRlIGxhIFBUUywgY2V0dGUgdGVjaG5pcXVlIGRlIGwnb2RldXIgcXVpIHRhaXQgZW5jb3JlIGVuIGVzc2FpLCBtJ2EgdCBwcnNlbnRlLiAKVGhpcyBzaG91bGQgbm90IGJlIHRha2VuIGFzIGNyaXRpY2lzbSBvZiB0aGUgT1AuIEkgdGhpbmsgaGlzIG92ZXJhbGwgbWVzc2FnZSBpcyBhIGdvb2Qgb25lLCBlc3BlY2lhbGx5IHNpbmNlIGtub3dpbmcgYSBiaXQgYWJvdXQgZml4aW5nIHVwIHlvdXIgb3duIGNhciB3aWxsIGFsc28gaGVscCB5b3UgaWRlbnRpZnkgdGhlIG1lY2hhbmljcyB3aG8gYXJlIHRyeWluZyB0byByaXAgeW91IG9mZiB3aGVuIGEgcmVwYWlyIGV4Y2VlZHMgeW91ciBhYmlsaXR5IG9yIHRpbWUgYXZhaWxhYmxlLiBBbm90aGVyIHRpcCB3b3VsZCBiZSB0byBnZXQgeW91cnNlbGYgYSBiYXNpYyBPQkRJSSByZWFkZXIgYW5kIGxvb2sgdXAgdGhlIGNvZGVzIHlvdXJzZWxmIGZvciB0aGF0IGNoZWNrIGVuZ2luZSBsaWdodCBiZWZvcmUgYXNraW5nIGFyb3VuZC4KVGhlIFVTIGRvZXNuIG5lZWQgYW4gYWdlbmN5IHNvIHRob3JvdWdobHkgZGVkaWNhdGVkIHRvIHRyeWluZyB0byBkZXBvcnQgYnJvd24gcGVvcGxlIHRoYXQgZXZlbiB2YWxpZCBkb2N1bWVudGF0aW9uIHdvbiBzdG9wIHRoZWlyIGF0dGVtcHRzLiAKQSBjZXMgZXNjbGF2ZXMgbGlicnMsIHJpZW4gbmUgZnV0IGFjY29yZC4gCkZhciBhcyBQZWxsIEdyYW50cyBnbywgaG93ZXZlciwgdGhleSBkZXRlcm1pbmUgeW91ciBhd2FyZCBiYXNlZCBvbiB0aGUgY29zdCBvZiB5b3VyIHR1aXRpb24sIGFuZCB3aGV0aGVyIHlvdSBnbyB0byBzY2hvb2wgZnVsbCB0aW1lLCB0aHJlZSBxdWFydGVyIHRpbWUsIGhhbGYgdGltZSwgb3IgbGVzcyB0aGFuIGhhbGYgdGltZS4gSXQgdXAgdG8geW91ciBzY2hvb2wgdG8gZGV0ZXJtaW5lIHlvdXIgc3RhdHVzLCBhbmQgY2FsY3VsYXRlIGhvdyBtdWNoIHRoZXkgZ29pbmcgdG8gZ2l2ZSB5b3UuIApBdWcgMjAxNwpJIHdvdWxkbiByZXNlbnQgdGhlaXIgc3BvcnRzIHN0dWZmLCBzaW5jZSBJIG5ldmVyIGJ1eSB0aGVtLCB0aGV5IGRvbiBhZmZlY3QgbWUuIERpcmVjdGx5LgpUZXhhcyBIb2xkJ2VtIFBva2VyIFNlY3JldHMKRnJvbSB0aGUgdG93ZXJpbmcsIHBpbmVhcHBsZSBzaGFwZWQgR3JhbmQgTGlzYm9hIHRvIHRoZSB2YXN0IGNhbXB1cyBvZiB0aGUgVmVuZXRpYW4sIHRoZXJlJ3Mgbm8gc2hvcnRhZ2Ugb2YgY2FzaW5vcyB0byBjaG9vc2UgZnJvbSBpbiBNYWNhdS4gVGhlIG9ubHkgcGxhY2UgaW4gQ2hpbmEgd2hlcmUgY2FzaW5vcyBhcmUgbGVnYWwsIE1hY2F1IG9wZW5lZCB1cCBpdHMgZ2FtYmxpbmcgaW5kdXN0cnkgaW4gMjAwNCwgc3B1cnJpbmcgdGhlIG51bWJlciBvZiBjYXNpbm9zIHRvIGp1bXAgZnJvbSAxMSB0byAzMi4gV2hpbGUgdGhlcmUgbWF5IGJlIGEgcXVlc3Rpb24gb2Ygd2hlcmUgdGhpcyBjaXR5J3MgZ2FtYmxlcnMgbGlrZSB0byBwbGF5LCB0aGVyZSdzIG5vIGRlYmF0aW5nIHdoaWNoIGdhbWUgaXMga2luZy4gQmFjY2FyYXQsIGEgMTV0aCBjZW50dXJ5IEl0YWxpYW4gdGFibGUgZ2FtZSwgY29udHJpYnV0ZWQgODYlIG9mIE1hY2F1J3MgJDE0LjEgYmlsbGlvbiBpbiBnYW1ibGluZyByZXZlbnVlIGxhc3QgeWVhci4gaXMgcHJvbXB0aW5nIHBva2VyIHByb21vdGVycyB0byB0YWtlIHRoZWlyIGNhcmQgZ2FtZSBhY3Jvc3MgdGhlIFBhY2lmaWMgaW4gaG9wZXMgb2Ygc2V0dGluZyBkb3duIHJvb3RzIGluIEFzaWEncyBMYXMgVmVnYXMuIFNpbmNlIHRoZSBNYWNhdSBnb3Zlcm5tZW50IGFwcHJvdmVkIFRleGFzIEhvbGQnZW0gY2FzaCBnYW1lcyBhbmQgdG91cm5hbWVudHMgaW4gSmFudWFyeSAyMDA4LCB0aHJlZSBjYXNpbm9zIGhhdmUgb3BlbmVkIGRlc2lnbmF0ZWQgcG9rZXIgcm9vbXMuIEluIGl0cyBmaXJzdCB5ZWFyIGluIE1hY2F1LCBUZXhhcyBIb2xkJ2VtIGJyb3VnaHQgaW4gbGVzcyB0aGFuICQ3IG1pbGxpb24sIGJ1dCB0aGF0IG51bWJlciBpcyBzZXQgdG8gcmlzZTogaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgMjAwOSBhbG9uZSwgdGhlIGdhbWUgdG9vayBpbiBtb3JlIHRoYW4gJDQgbWlsbGlvbi4gIlBva2VyIGhhcyBleHBsb2RlZCBpbiBNYWNhdSwiIHNheXMgQ2VsaW5hIExpbiwgMjYsIGFuIEF1c3RyYWxpYW4gcG9rZXIgcGxheWVyIHdobyBjb21wZXRlcyBpbiBNYWNhdS4gIlRoZSBza2lsbCBsZXZlbCBvZiB0aGUgcGxheWVycyBoZXJlIGhhcyBpbmNyZWFzZWQgZHJhbWF0aWNhbGx5IGp1c3QgaW4gdGhlIGxhc3QgeWVhci4iIChXYXRjaCBUSU1FJ3MgdmlkZW8gIk1hY2F1J3MgV2lubmVycyBhbmQgTG9zZXJzLiIpCkFub3RoZXIgY29uIHRvIHBsYXlpbmcgcG9rZXIgb25saW5lIGlzIGhhdmluZyB0byBtYWtlIGEgZmFzdGVyIGRlY2lzaW9uIGNvbXBhcmVkIHRvIHBsYXlpbmcgdGhlIGdhbWUgdGhlIGJyaWNrIGFuZCBtb3J0YXIgd2F5LiAKTWFrZXMgdGhlIGRheSBhbGwgdGhlIG1vcmUgc3BlY2lhbC4gCkkgbG92ZSBteSBTY2lvbi4uIApUaGUgaW50ZXJ2ZW50aW9uIHdhcyBsYXJnZWx5IGRlZmluZWQgYnkgZXhjbHVzaW9uIGNyaXRlcmlhLiAgZW5jb21wYXNzZWQgYSByYW5nZSBvZiBkYXRhYmFzZXMgd2l0aCBubyBsYW5ndWFnZSByZXN0cmljdGlvbnMuIApXaGVuIHBva2Vtb24gY2FyZHMgc3RhcnRlZCBnZXR0aW5nIHBvcHVsYXIgaW4gbXkgbmVpZ2hib3Job29kIEkgb2YgY291cnNlIGZsaXBwZWQsIHRoYXQgd2FzIHJpZ2h0IHVwIG15IGFsbGV5LiBCdXQgZGFkIHN0ZXBwZWQgaW4gcHJldHR5IHF1aWNrIGFuZCBzYWlkIGlmIGhlIGV2ZXIgZm91bmQgb3V0IHRoZXkgd2VyZSBxdWVzdGlvbmFibGUgdGhleSB3ZXJlIGdvbmUuIApNYWtpbmcgaXQgYmFjayBpbnRvIHRoZSBtb25leSB3b3VsZCBiZSBhIGJpZyBhY2NvbXBsaXNobWVudCBhbmQgcmV0dXJuaW5nIHRvIHRoZSBmaW5hbCBuaW5lIHdvdWxkIGJlIGEgY29sb3NzYWwgYWNoaWV2ZW1lbnQsIGhlIHNhaWQuClRoaXMgaXMgd2hlcmUgdGhpbmdzIGdldCBzY2FyeTogdGhlIGdpcmxmcmllbmQgZmF0aGVyIGlzIGFuIGV4dHJlbWVseSBzdWNjZXNzZnVsIGJ1c2luZXNzbWFuIGluIGEgU291dGhlcm4gc3RhdGUuIFRoZSB5b3VuZyBtYW4gd2FzIGV4dHJlbWVseSBleGNpdGVkIHRoZSBmaXJzdCB0aW1lIGhlIHZpc2l0ZWQgdGhlcmUgYmVjYXVzZSB0aGUgYnVzaW5lc3NtYW4gaGFzIHNldmVyYWwgYmFybnMgd2hlcmUgaGUgaXMgd2FyZWhvdXNpbmcgZW5vdWdoIGZpcmVhcm1zIGFuZCBhbW11bml0aW9uIHRvIHN0YXJ0IHRoZSBuZXh0IENpdmlsIFdhci4gCkplYW4gTWFyYyBMYWZvbiA6IEwnQXJhYmllIFNhb3VkaXRlIGVzdCB1bmUgc29jaXQgaXNsYW1pcXVlIHN1bm5pdGUgZXQgd2FoaGFiaXRlLiAKVmVuc3RyZSBlciBpa2tlIG5vZSBwYXJ0aSwgZGUganVnZXIgcyBkZXQgcmVubmVyLiBPZyBLUkYgZXIgcmV0dCBvZyBzbGV0dCBza3VtbGUgbWVkIHNpbmUgbWlkZGVsYWxkZXJza2UgaG9sZG5pbmdlciwgZGV0IGVyIGJhcmUgdG9wcGVuIGF2IGlzZmplbGxldCB2aSBzZXIuIE1hbiB2aWwgaGVsbGVyIGlra2UgaGEgc2x1ZSBsZXIgc29tIEFQIHZlZCBtYWt0ZW4sIGVsbGVyIHRvdGFsdCBwcmVnbHNlIHBhcnRpZXIgc29tIFNWIG9nIE1ERywgc29tIHZpbCBkZWxlZ2dlIGZvciBkZSBsYXZlcmUgc29zaWFsZSBsYWcsIGt1biBmb3IgIGtsYXBwZSBzZWcgc2VsdiBwIHNrdWxkcmEgb2cgc2kgYXQgZGUgYnJ5ciBzZWcgb20gbWlsai4gCkkgdG9sZCBteSBodXNiYW5kLCB3aG8gYmVmb3JlIHRoZSBwcmVnbmFuY3ksIHdhcyBzdXBlciBhZmZlY3Rpb25hdGUsIGhvdyBJIGZlbHQgYnV0IGhlIHNhaWQgSSB3YXMganVzdCBvdmVyIHJlYWN0aW5nLiBEdXJpbmcgdGhlIHByZWduYW5jeSBoZSBkaWRuJ3QgdG91Y2ggbXkgYmVsbHkuIE9ubHkgZmVsdCBoZXIga2ljayBhIGNvdXBsZSBvZiB0aW1lcy4gClRoZXJlIHdlcmUgYSBsb3Qgb2YgYm9uZXMuIApJenpvIEJlaWxlaW4gU2hhcmUgUGFzc2lvbiwgUmVzcGVjdCwgT24gQW5kIE9mZiBDb3VydEJlaWxlaW4gYW5kIEl6em8gYXJlIGZyaWVuZGx5IHJpdmFscyB3aG9zZSBoaWdobHkgcmFua2VkIHRlYW1zIHdpbGwgcGxheSBmb3IgdGhlIGZpcnN0IHRpbWUgdGhpcyBzZWFzb24gb24gU3VuZGF5IGF0IENyaXNsZXIgQXJlbmEgd2l0aCBCaWcgVGVuIHRpdGxlIGFuZCBOQ0FBIFRvdXJuYW1lbnQgc2VlZGluZyBpbXBsaWNhdGlvbnMuCkhvd2V2ZXIsIHlvdSBzaG91bGQgc3RhcnQgaW4gbWljcm9zdGFrZXMuIApJbiAyMDA4IGFuZCB0aGUgZmlyc3QgcGFydCBvZiAyMDA5LCAzMiBncmV5aG91bmRzIGRpZWQgb3Igd2VyZSBldXRoYW5pemVkLiBUaGUgdHJhY2sncyB2ZXQsIERyLiAKVGhpcyBkaXNjb3Zlcnkgd2FzIHJldm9sdXRpb25hcnk7IGl0IHNob3dlZCB0aGF0IGFuaW1hbHMsIGluY2x1ZGluZyBodW1hbnMsIGFyZSBlcXVpcHBlZCB0byBsZWFybiB0aHJvdWdoIG1vdGl2YXRpb24uLiAKUmVtZW1iZXIgbWlzdGFrZXMgYXJlIGxlYXJuaW5nIGV4cGVyaWVuY2VzLiAKVGhleSBjYW4ga2ljayB0aGUgYmFsbCBmYXJ0aGVyIGFuZCBydW4gZmFzdGVyLCBzbyBpdCBub3QgZXZlbiBhIG1hdHRlciBvZiBza2lsbC4gCkp1c3RhY2hpbGxkYXkgIDExIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KQmVsbGEgaXMgbm90IHRoZWlyIGRhdWdodGVyIG9yIHRoZWlyIGRvZywgc2hlIGlzIHRoZWlyIGNhdC4uIApZb3UgZ28gaW4sIHNob3dlciwgYW5kIGJhbmcgZm9yIGxlc3MgdGhhbiAxMDAgYnVja3MuIApIZSB3aWxsIGJlIG1pc3NlZC4gClRoYXQgYmUgbGlrZSBhc2tpbmcgdGhlIFBhbGVzdGluaWFucyB0byBzaW1wbHkgd2l0aGRyYXcgdGhlaXIgZGVtYW5kcyBmb3Igc3RhdGVob29kIGFuZCBhIFBhbGVzdGluaWFuIGhvbWVsYW5kLCBhbmQgc2ltcGx5IGJlIGFic29yYmVkIGludG8gSXNyYWVsaSBzb2NpZXR5LiAKVGhlIGZvcm1lciBjb3VwbGUsIHdobyBiZWdhbiBkYXRpbmcgaW4gMjAxMSBhZnRlciBtZWV0aW5nIG9uIHRoZSBzZXQgb2YgR2FnYSdzICJZbyBhbmQgSSIgbXVzaWMgdmlkZW8sIGhhdmUgY2FsbGVkIGl0IHF1aXRzLCBzb3VyY2VzIHRlbGwgRSEgTmV3cy4gVGhlIGJyZWFrdXAgY29tZXMgYWZ0ZXIgbW9udGhzIG9mIHNwZWN1bGF0aW9uIHRoYXQgdGhlICJQb2tlciBGYWNlIiBzaW5nZXIsIDMwLCBhbmQgdGhlIENoaWNhZ28gRmlyZSBhY3RvciwgMzUsIHdlcmUgb24gdGhlIG91dHMuCkNvc3RlbGxvLCA2MiwgaXMgYSAzMCB5ZWFyIHZldGVyYW4gb2YgdGhlIG9mZmljZSB3aG8gd2FzIGEga2V5IHBsYXllciBpbiBwcm9zZWN1dGlvbnMgb2YgY2hhcnRlciBzY2hvb2wgZnJhdWQgYW5kIHNjaGVtZXMgdG8gc2VsbCBkcnVncyBpbGxlZ2FsbHkgb3ZlciB0aGUgaW50ZXJuZXQuIEdhbGxhZ2hlciwgNTEsIGVhcm5lZCBoaXMgbGF3IGRlZ3JlZSBhdCBuaWdodCB3b3JraW5nIGFzIGEgTmV3IFlvcmsgcG9saWNlIG9mZmljZXIgaW4gdGhlIEJyb254LiBBIG9uZSB0aW1lIGFkdmlzZXIgdG8gZm9ybWVyIFBoaWxhZGVscGhpYSBQb2xpY2UgQ29tbWlzc2lvbmVyIEpvaG4gRi4gVGltb25leSwgR2FsbGFnaGVyJ3Mgd29yayBhcyBhIGZlZGVyYWwgcHJvc2VjdXRvciBpbmNsdWRlZCBvYnRhaW5pbmcgYSBkZWF0aCBwZW5hbHR5IHZlcmRpY3QgYWdhaW5zdCBLYWJvbmkgU2F2YWdlLCBhIGRydWcga2luZ3BpbiBsaW5rZWQgdG8gYSBkb3plbiBtdXJkZXJzLgpCZSBjYXJlZnVsLCB0b28sIGFib3V0IG92ZXJzYXR1cmF0aW5nIGl0LiAKVGhlIG5hdHVyZSBvZiB0aGVzZSBtZWFzdXJlcyBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBraW5kIG9mIHBvbGl0aWNhbCBjb25zdGl0dWVuY3kgdGhhdCBJc3JhZWxpIGxlYWRlcnMgYWltIHRvIGFwcGVhc2UuIApMaWZ0aW5nIHRoZSBjYXAgb24gY291bmNpbCB0YXggbWF5IGJlIGEgbW9yZSBvZiBhIHZvdGUgd2lubmVyLCB3aGlsZSBhIGxhbmQgdmFsdWUgdGF4ICAgYXQgdGhlIHZlcnkgbGVhc3Qgc3RvcHBpbmcgdGhlIGdhaW5zIGZyb20gcGxhbm5pbmcgcGVybWlzc2lvbiBnb2luZyB0byBkZXZlbG9wZXJzIHJhdGhlciB0aGFuIHRoZSBwdWJsaWMgICBjb3VsZCBhbHNvIGJlIHBvcHVsYXIuIApIZSBoYXMgbmV2ZXIgYmVlbiBhIG1lbWJlciBvZiBvdXIgdHJhaW5pbmcgc3RhZmYsIHdlIGhhdmUgcHJvdmlkZWQgaGltIGFjY2VzcyB0byB3b3JrIHdpdGggc29tZSBvZiBvdXIgcGxheWVycywgdGhlIHRlYW0gc2FpZCBpbiBhIHByZXBhcmVkIHN0YXRlbWVudC4KTGlrZSBteSBjaGlsZGhvb2QgbWVtb3JpZXMgZXRjLklmIHlvdSBoYXZlIGFueSBhcHAgd2hpY2ggY2FuIG1ha2UgbWUgaGFuZHNvbWUgaW4gYWxsIHBpY3R1cmVzIC4gCkkgZ3Vlc3MgS2luZyB3YW50ZWQgdGhlIGJvb2sgdG8gYmUgYWJvdXQgc29tZXRoaW5nIG90aGVyIHRoYW4ganVzdCB0aGUgS2VubmVkeSBhc3Nhc3NpbmF0aW9uIGFuZCB0aG91Z2h0IGhlIGNvdWxkIGFkZCBzb21lIGhlYXJ0IHRvIHRoZSBzdG9yeSBhdCB0aGUgc2FtZSB0aW1lLiAKSWYgeW91IHRha2UgbmF2eSBzaG93ZXJzICg5MCBzZWNvbmRzIG9mIHdhdGVyIHVzZSksIHRoYXQgYWJvdXQgMTYwIGRheXMgb2Ygc2hvd2VyaW5nLCBvciBhYm91dCBhIGhhbGYgeWVhci5FZGl0OiBQZW9wbGUgYXJlIHJlbWluZGluZyBtZSB0aGF0IG1vc3QgYnVyZ2VycyBhcmVuIGEgcG91bmQsIHRoZXkgYSBxdWFydGVyIHBvdW5kLCB3aGljaCBicmluZ3MgaXQgZG93biB0byAxMTAgZ2FsbG9ucywgb3IgNTUgbWludXRlcy4gCkhvcGVmdWxseSwgdGhleSB3aWxsIGJyaW5nIHlvdSBtb25leSBhcyB3ZWxsLi4gCkkgYWxzbyByZWFsbHkgZW5qb3llZCAiRmxvd2VycyBmb3IgQWxnZXJub24iLCBhbmQgaXQgYWN0dWFsbHkgbW9yZSBvZiBhbiBlbW90aW9uYWwgYm9vay4gCkZvciB0aGlzIHJlYXNvbiwgSSBoaWdobHkgcmVjb21tZW5kIHVzaW5nIFBva2VyIFN0YXJzIERpcmVjdC4gVGhpcyBvbmxpbmUgc3RvcmUgb2ZmZXJzIGhpZ2ggcXVhbGl0eSwgZGlzY291bnRlZCBwcmljZXMsIGFuZCBleGNlcHRpb25hbCBjdXN0b21lciBzZXJ2aWNlLiBCZSBzdXJlIHRvIGNoZWNrIG91dCB0aGUgIlJlc291cmNlIiBzZWN0aW9uIGJlbG93IGZvciBkaXJlY3QgbGlua3MgdG8gdGhpcyBvbmxpbmUgZ2FtaW5nIHN1cGVyIHN0b3JlIS4gCkV4YWN0bHkuIEl0IGVhc3kgdG8gcmVtZW1iZXIgZ2FtZXMgMiBhbmQgNCB2cy4gUGhpbGx5IGFuZCB0aGluayBXYWRlIHN0aWxsIGdvdCBpdCwgYW5kIGlnbm9yZSBnYW1lcyAzIGFuZCA1IHdoZXJlIHdhcyB0ZXJyaWJsZS4gCkFzIHNvb24gYXMgRGVtYXVybyBoaXQgaGVyIHBvaW50IG51bWJlciAoZWlnaHQpLCBwZW9wbGUgc3RhcnRlZCBiZXR0aW5nLiBTaGUgc2F5cyB0aGUgZ2FtZSBtb3ZlZCBzbyBmYXN0IGFmdGVyIHRoYXQsIHNoZSBjb3VsZG4ndCByZWFsbHkga2VlcCB1cC4gCk1vcmUgYW5kIG1vcmUgc3R1ZGllcyBhbHNvIGFncmVlIHRoYXQgbWFzc2FnZSB0aGVyYXB5IG9yIGJvZHl3b3JrIHRoZXJhcHkgaW1wcm92ZXMgdGhlIGVuZHVyYW5jZSBvZiBhIHNwb3J0c3BlcnNvbi4uIApUaGV5IGhhdmUgaGVhcmQgb2YgY2FibGUuIApNcyBSdWRkc2FpZCBzaGUgd2FzICJtb3J0aWZpZWQiYWZ0ZXIgcmVmZXJyaW5nIHRvIExhYm91ciBmcm9udGJlbmNoZXIgRGlhbmUgQWJib3R0IGFzICJjb2xvdXJlZCIgZHVyaW5nIGEgcmFkaW8gaW50ZXJ2aWV3LiAKQ2V0dGUgbW1lIHF1ZXN0aW9uIHRhaXQgcG9zZSBwYXIgbGUgZmlsbSAiR29vZCBNb3JuaW5nIFZpZXRuYW0iIHF1aSByZXByZW5haXQgY2V0dGUgY2hhbnNvbiBzdXIgZGVzIGltYWdlcyBkZSBndWVycmVzLiBDb21tZW50IG5lIHBhcyBwcm91dmVyIGwnb3Bwb3NpdGlvbiBlbnRyZSBsJ21lcnZlaWxsZW1lbnQgZGV2YW50IGxhIGJlYXV0IGRlIGxhIHBsYW50ZSBldCBsZXMgaW5xdWl0dWRlcyBxdWUgc3VzY2l0ZW50IGxlIGR2ZWxvcHBlbWVudCBkZXMgYWN0aXZpdHMgaHVtYWluZXMgPyBDb21tZW50IGNoYW50ZXIgdW4gbW9uZGUgbWVydmVpbGxldXggcXVhbmQgbm91cyBzb250IHByZGl0cyAgbG9uZ3VldXIgZGUgam91ciByY2hhdWZmZW1lbnQgZGUgbGEgcGxhbnRlLCBjaG1hZ2UsIHB1aXNlbWVudCBkZXMgbmVyZ2llcyBmb3NzaWxlcywgcHJpbHMgaW50Z3Jpc3RlcyBldCBhdXRyZXMgYXBvY2FseXBzZXMgPy4gCllvdSBjYW4gd29ycnkgYWJvdXQgbW90aXZhdGlvbiBhbmQgZW1vdGlvbmFsIGZhY3RvcnMgb25jZSB5b3UgaGF2ZSBlc3RhYmxpc2hlZCBzdHVkeSBoYWJpdHMgdGhhdCB3b3JrIGZvciB5b3UuIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28uIApVc2Ugb2Ygdml0YW1pbiBEIHN1cHBsZW1lbnRzIHdhcyBjb2xsZWN0ZWQuIEFuYWx5c2VzIHdlcmUgY29uZHVjdGVkIHRvIGV4YW1pbmUgdGhlIHNlcGFyYXRlIGVmZmVjdHMgb2Ygdml0YW1pbiBEIGZyb20gZm9vZHMgb3IgZnJvbSBzdXBwbGVtZW50cy4KV2hpbGUgSmFuZWVuIGNvb2tlZCBkaW5uZXIgaW5zaWRlIHRoZWlyIFBvcnQgUmljaGV5IGhvdXNlLCBoZSBhbmQgaGlzIGZhdGhlciAoYW5kIHNvbWV0aW1lcyBoaXMgc2lzdGVyKSB3b3VsZCBzaXQgYXJvdW5kIHRoZSBraXRjaGVuIHRhYmxlIHBsYXlpbmcgcG9rZXIuClVzZSBsb25nLCBmaXJtLCBjb25maWRlbnQgc3Ryb2tlcy4gQmFiaWVzIHByZWZlciB0aGlzIHRvIGEgbGlnaHQsIGZlYXRoZXJ5IG1hc3NhZ2UuCk9oIGFuZCBJIGhhdmUgbGlrZSBkb3plbnMgb2YgZm9vZCBhbGxlcmdpZXMuIEkgaGFkIHRoZSBzdGFmZiBkaWV0aWNpYW4gaW4gbXkgcm9vbSB0d2ljZSBhIGRheSB0cnlpbmcgdG8gZmlndXJlIG91dCB3aGF0IHRvIGZlZWQgbWUuIEkgd29uIGVhdCBzb21ldGhpbmcgSSBhbSBhbGxlcmdpYyB0byBhbmQgdGhleSBrZXB0IGJyaW5naW5nIG1lIHN0dWZmIEkgY291bGRuIGVhdC4gT25lIHRpbWUgSSBhZ3JlZWQgd2l0aCBoZXIgSSBjb3VsZCBlYXQgYSBwbGFpbiBiYWtlZCBwb3RhdG8uIEl0IGFycml2ZXMsIEkgcmVtb3ZlIHRoZSBjb3ZlciwgYW5kIHRoZXJlIGlzIGEgc2xpY2Ugb2YgcGluZWFwcGxlIG5leHQgdG8gaXQuIFRoZSBsYXN0IHRpbWUgSSBhdGUgcGluZWFwcGxlIEkgc3BlbnQgdGhlIG5pZ2h0IGluIHRoZSBFUi4KVGhlaXIgcHJvcGVydHkgd2lsbCBzaXQgdW5vY2N1cGllZCBmb3IgbGVzcyB0aW1lLiAKVGhleSBkaWQgaXQgd2l0aCBibGFjayBwYW50aGVyIGFzIHdlbGwsIGFuZCB0aGV5IFdJTEwgZG8gaXQgd2hlbiBpdCdzIGEgZ2F5IG1haW4gY2hhcmFjdGVyLiAKSSBiZXQgd2UgYmUgcGxheWluZyBhcyBhIGh1bWFuLCBidXQgdGhlcmUgd2lsbCBiZSBhIGxvdCBvZiBhbGllbnMgd2UgY2FuIGludGVyYWN0IHdpdGggaW4gdGhlIGdhbWUgYXMgTlBDcyBhbmQgcHJvYmFibHkgaGF2ZSBhcyBjb21wYW5pb25zLiBUaGlzIGNhbiBiZSBhIGxvdCBvZiBmdW4gbGlrZSBpdCB3YXMgZm9yIG1lIGluIHRoZSBNRSB0cmlsb2d5LCBJIHJhcmVseSBjaG9zZSB0aGUgaHVtYW4gY29tcGFuaW9ucyBmb3IgU2hlcGFyZCBvbmNlIEkgaGFkIG90aGVyIG9wdGlvbnMgZXhjZXB0IGZvciB0aGVpciBwZXJzb25hbCBtaXNzaW9ucy4gClVDTEEgQnJ1aW4gRGF5IGdpdmVzIGFkbWl0dGVkIGZyZXNobWVuIHN0dWRlbnRzIHRoZSBjaGFuY2UgdG8gdG91ciB0aGUgY2FtcHVzLCBoZWFyIGZyb20gcHJvZmVzc29ycywgbWVldCBjdXJyZW50IHN0dWRlbnRzIGFuZCBleHBlcmllbmNlIHdoYXQgbGlmZSBpcyBsaWtlIGFzIGEgQnJ1aW4uIApIb3NwaXRhbCAxOiAieWVhaCB0aGUgcmVhc29uIHdlIGNhbid0IHRlbGwgaXMgYmVjYXVzZSBpZiBwZW9wbGUgZmluZCBvdXQgdGhleSdyZSBoYXZpbmcgYSBib3kgb3IgYSBnaXJsICAgdGhleSdsbCBhYm9ydC4iICAgSW5mdXJpYXRlZCBtZTogSSBORUVEIFRPIFNIT1AgRk9SIEEgU1BFQ0lGSUMgR0VOREVSIDcsMDAwIG1pbGVzIGF3YXkhIT8/Ckl0IGxpa2UgaW4gc2Nob29sLCB5b3UgY291bGQgdGVsbCB3aGVuIGtpZHMgd2VudCB0aHJvdWdoIHRoZWlyIHBhcGVyIGFuZCByZXBsYWNlZCBhIHdvcmQgaW4gZWFjaCBzZW50ZW5jZSB3aXRoIHNvbWV0aGluZyBmcm9tIHRoZSB0aGVzYXVydXMgdGhhdCB0aGV5IG5ldmVyIHVzZSBpbiByZWFsIGxpZmUsIGJ1dCB0aGlzIGxvb2tzIGxpa2UganVzdCBhYm91dCBldmVyeSBzaW5nbGUgd29yZCB3YXMgdGFrZW4gZnJvbSBzb21lIGNvcnBvcmF0ZSBzcGVhayBoYW5kYm9vay4gCkkgZm91bmQgYSBwYXJ0aWN1bGFyIGNvbWJpbmF0aW9uIG9mIHN0cmV0Y2hpbmcgYW5kIG1hc3NhZ2UgaGVscGVkIG1lIHRocm91Z2ggYSBwbGFudGFyIGZhc2NpYSBpbmp1cnkuIEFzc3VtaW5nIHRoZSBwYWluIGlzIG9uIHRoZSByaWdodCBzb2xlIG9mIHlvdSBmb290LCBjcm9zcyB5b3VyIHJpZ2h0IGxlZyBvdmVyIHlvdXIgbGVmdCBhbmQgdXNlIHlvdXIgcmlnaHQgaGFuZCB0byBwdWxsIHlvdXIgdG9lcyBiYWNrIHRvd2FyZHMgeW91ciByaWdodCBrbmVlLiBXaXRoIHlvdXIgbGVmdCBmaW5nZXJzLCBwdXNoIGludG8gdGhlIHRpZ2h0ZXN0IGFuZCBzb3Jlc3QgYmFuZCBvZiBmYXNjaWEgb24gdGhlIGJvdHRvbSBvZiB5b3VyIGZvb3QsIGRpcmVjdGluZyB0aGUgcHJlc3N1cmUgaGFsZiB3YXkgYmV0d2VlbiB5b3VyIGFua2xlIGFuZCBiYWxsIG9mIHlvdXIgZm9vdC4gQSBidXJuaW5nIGZlZWxpbmcgd2lsbCByZXN1bHQ7IGRvbid0IHByZXNzIGhhcmQgZW5vdWdoIHRvIGNhdXNlIHNldmVyZSBwYWluISBIb2xkIHRoZSBwcmVzc3VyZSBmb3IgYXQgbGVhc3QgMiAzIG1pbnV0ZXMsIGF0IHdoaWNoIHRpbWUgeW91IHNob3VsZCBmZWVsIGEgc29mdGVuaW5nIGluIHRoZSB0aXNzdWUgYW5kIGEgcmVkdWN0aW9uIG9mIHRpZ2h0bmVzcy4gUmVwZWF0IHVwIHRvIDMgNCB0aW1lcyBhIGRheS4KWW91IGFjdCBsaWtlIHRoZXJlIGlzIG5vIGNvc3QgdG8gcmVkdWNpbmcgZW1pc3Npb25zICAgdGhlcmUgaXMsIGFuZCB0aGF0IGNvc3Qgd2lsbCBiZSBib3JuZSBvdXQgYnkgQW1lcmljYW4gY2l0aXplbnMgaW4gdGhlIGZvcm0gb2YgbG93ZXIgbGl2aW5nIHN0YW5kYXJkcy4gSG93IG1hbnkgb2xkIHdvbWVuIHNob3VsZCBoYXZlIHRvIGZyZWV6ZSB0byBkZWF0aCBpbiB0aGUgd2ludGVyIHRvIHJlZHVjZSBDTzIgZW1pc3Npb25zPyBXaG8gaXMgYW55b25lIHRvIGRlY2lkZSB3aGV0aGVyIHRoaXMgdHJhZGVvZmYgaXMgd29ydGggaXQgZm9yIGFub3RoZXIgaHVtYW4gYmVpbmc/IENvbnRyYXJ5IHRvIHdoYXQgeW91IHJlYWQgaW4gbGliZXJhbCByYWdzLCB0aGUgYWN0dWFsIGNsaW1hdGUgbW9kZWxzIGRvIG5vdCBwcmVkaWN0IGRpc2FzdHJvdXMgcmVzdWx0cywgYnV0IGZvcmNpbmcgcGVvcGxlIHRvIGxvd2VyIHRoZWlyIGxpdmluZyBzdGFuZGFyZHMgYWJzb2x1dGVseSB3aWxsIGJlIGRpc2FzdHJvdXMgZm9yIG1hbnkuLiAKSGUgY3JlYXRlcyBhIGZvcm11bGEgYWltaW5nIHRvIGV4Y2lzZSBoaXMgaW1tb3JhbCBzaWRlLiAKVGhhdCB3aHkgeW91IHNob3VsZCBoYXZlIGNoZWFwIHNwYXJlIGdsYXNzZXMgZm9yIHlvdXIgc3BhIHZpc2l0cyA7ICkuIApJIGhhdmUgbm8gaWRlYSB3aGF0IGhhcHBlbmVkIGJldHdlZW4gdXMsIGFuZCBJIGRvbiB0aGluayB3ZSBoYWQgc2V4LCBidXQgSSBkbyBrbm93IHRoYXQgaGUgd2FzIHNvIHByb3VkIG9mIGhpbXNlbGYuIApCZWNhdXNlLCBhZnRlciBhbGwsIGl0IG5vdCBsaWtlIHlvdSBldmVyIG5lZWQgdGhlIGRyZXNzIGFnYWluIHJpZ2h0PyBCZWNhdXNlIHlvdSBhcmUgbWFycmllZCBmb3JldmVyIGFuZCBldmVyLCBhbmQgeW91IGp1c3QgbG92ZSBlYWNoIG90aGVyIHNvIG11Y2guIE1vcmUgdGhhbiBhbnlvbmUgaW4gaGlzdG9yeSBvZiB0aW1lIGhhcyBldmVyIGxvdmVkIGFub3RoZXIgcGVyc29uICBhbmQgdGhhdHMgaG93IEkgY2FwdGlvbiB0aGUgcGhvdG9zIHdoZW4gaSBwbGFzdGVyZWQgdGhlbSBhbGwgb3ZlciBmYWNlYm9vay4uIApVbmRlciBNb25kYXkgYWdyZWVtZW50LCB3aGljaCB3b3VsZCBnbyBpbnRvIGVmZmVjdCBpbiAyMDE5LCBhbiBhdmVyYWdlIENhbmFkaWFuIHdvcmtlciBlYXJuaW5nIGFib3V0ICQ1NSwwMDAgd2lsbCBwYXkgYW4gYWRkaXRpb25hbCAkNyBhIG1vbnRoIGluIDIwMTkuIApXYXRjaCB3aGF0IGhhcHBlbnMgd2hlbiBCb3JpcyBKb2huc29uIHRyaWVzIHRvIHJlY29yZCBhIFR3aXR0ZXIgdmlkZW8KVGhhdCB3YXkgeW91IGdldCB0byB0aGUgMSBhIG1vbnRoIG1haW50ZW5hbmNlIHpvbmUgcXVpY2tlciwgYW5kIHlvdSBmZWVsIGJldHRlciBhbGwgdGhlIHRpbWUgaW5zdGVhZCBvZiBqdXN0IGZvciB0aGUgZGF5IG9yIDIgYWZ0ZXIgeW91ciBtYXNzYWdlLi4gCldlIGFycml2ZWQgYXQgV2V0aGVyc3Bvb25zIGluIERvcmNoZXN0ZXIgYXJvdW5kIDZpc2ggZm9yIGEgbXVjaCBuZWVkZWQgcGl0IHN0b3AuIFJvYiAnVGVhbSBCb25kZXInIFRvbmtzIHdhcyBnaXZlbiB0aGUgdGFzayBvZiBmaW5kaW5nIGEgdGFibGUgZm9yIHVzIHRvIG9yZGVyIG91ciBmb29kIHdoaWxlIHRoZSBtYWpvcml0eSBvZiB1cyBkb25uZWQgb3h5Z2VuIG1hc2tzIGFuZCBjcmFtcG9ucyB0byBzY2FsZSB0aGUgZGl6enkgaGVpZ2h0cyBvZiB0aGUgc3RhaXJjYXNlIHRvIGZpbmQgdGhlIHRvaWxldHMuIApBbm90aGVyIG9ubGluZSBhZCBmZWF0dXJlcyBvbmUgaGFuZGVkIE5GTCByb29raWUgU2hhcXVlbSBHcmlmZmluLi4gClRyYWRpdGlvbmFsIG11bHRpdml0YW1pbnMgY29udGFpbiBhYm91dCA0MDAgSVUgb2Ygdml0YW1pbiBELCBidXQgbWFueSBtdWx0aXZpdGFtaW5zIG5vdyBjb250YWluIDgwMCB0byAxLDAwMCBJVS4gQSB2YXJpZXR5IG9mIG9wdGlvbnMgYXJlIGF2YWlsYWJsZSBmb3IgaW5kaXZpZHVhbCB2aXRhbWluIEQgc3VwcGxlbWVudHMsIGluY2x1ZGluZyBjYXBzdWxlcywgY2hld2FibGUgdGFibGV0cywgbGlxdWlkcywgYW5kIGRyb3BzLiBDb2QgbGl2ZXIgb2lsIGlzIGEgZ29vZCBzb3VyY2Ugb2Ygdml0YW1pbiBELCBidXQgaW4gbGFyZ2UgZG9zZXMgdGhlcmUgaXMgYSByaXNrIG9mIHZpdGFtaW4gQSB0b3hpY2l0eS5bMjZdLiAKSSBubyBsb25nZXIgcGxheSBvayB0aGlzIHNpdGUgdGhvdWdoIGFzIEkgZmVhciB0aGF0IGl0IG1ha2VzIG1lIGEgZGlmZmVyZW50IGtpbmQgb2YgcGxheWVyIHdoZW4gSSBwbGF5IG90aGVyIHZlbnVlcy4gCk93ZW4gRm9yZCB3cm90ZSBpbiB0aGUgbW9ybmluZ3MuIFRoZSBhZnRlcm5vb25zIHdlcmUgZ2VuZXJhbGx5IHNwZW50IGluIHNvbWUgbWVycnkgb3V0aW5nIHdpdGggdGhlIEJseXRoZXMuIExlc2xpZSBvZnRlbiB3ZW50LCB0b28sIGZvciBDYXB0YWluIEppbSB0b29rIGNoYXJnZSBvZiBEaWNrIGZyZXF1ZW50bHksIGluIG9yZGVyIHRvIHNldCBoZXIgZnJlZS4gClRoZSBkZW5vbWluYXRpb24gYW5kIGFueSB0eXBlIG9mIGJyYW5kaW5nIHRoYXQgaXMgYXNzb2NpYXRlZCB3aXRoIGEgcGFydGljdWxhciBwb2tlciBjaGlwIG9yIGNhc2lubyBwb2tlciBjaGlwIHNldCBpcyBjb25zaWRlcmVkIHRvIGJlIHRoZSAic3RhbXAiLiAKU2VyaW91c2x5LiBJIGhhdmUgbWVkaWNhaWQgYmVjYXVzZSBJIGRpc2FibGVkLiBJdCB0aGUgYmVzdCEgSSBiZWVuIGFibGUgdG8gc2VlIGFsbCBteSBzcGVjaWFsaXN0cywgZ2V0IGFsbCB0aGUgdGVzdHMgSSBuZWVkIGRvbmUsIEkgaGF2ZSBubyBjb3BheSBmb3IgYXBwb2ludG1lbnRzIG9yIG1lZGljYXRpb24uIApJJ20gbm90IGRlZmVuZGluZyBoaW0sIGJ1dCBJIGRvIHRoaW5rIHlvdSBzaG91bGQgZ2V0IHRoZSBpbmZvcm1hdGlvbiB5b3UgbmVlZCBmcm9tIHRoZSByaWdodCBzb3VyY2UuIFNvIGFzay4gCkJhcmJpZSBpcyBhbiBFbXBpcmUuLiAKT3duZWQgYnkgUmVtc3Ryb3lpbnRvdXIgTExDIGFuZCBMdWRtaWxhIEt1ZHJ5YXZ0c2V2YSwgQWxvZnQgU3QuIFBldGVyc2J1cmcgd2lsbCBiZSBsb2NhdGVkIGluIGFuIGVtZXJnaW5nIGJ1c2luZXNzIGRpc3RyaWN0IHdpdGhpbiBjbG9zZSBwcm94aW1pdHkgdG8gZ2FsbGVyaWVzLCByZXN0YXVyYW50cyBhbmQgZ3JlZW4gc3BhY2VzLCBhbmQgd2lsbCBvZmZlciBhbiBlbnRpcmVseSBuZXcgYXBwcm9hY2ggdG8gaG9zcGl0YWxpdHkgaW4gdGhlIGNpdHkgb2YgU3QuIFBldGVyc2J1cmcuIApWaXNpdGVkIGEgZnJpZW5kIGluIENoaWNhZ28gdGhpcyBwYXN0IHdlZWtlbmQgKHRoYXQgSSBoZWxwZWQgbW90aXZhdGUgdG8gcnVuIG9yaWdpbmFsbHkpIGFuZCBoZSBraWNrZWQgbXkgYXNzIG9uIGEgMTAuNW1pIHJ1bi4gTW90aXZhdGVkIG1lIHRvIGdldCBvdXQgb2YgbXkgc2x1bXAgc28gSSBoaXQgdGhlIHRyYWNrIGZvciBteSBmaXJzdCBpbnRlcnZhbCB3b3Jrb3V0IHNpbmNlIEFwcmlsLiBXYW50ZWQgdG8gZWFzZSBiYWNrIGludG8gaXQgc28gSSBkaWQgMi41bWkgd2FybXVwLCA2eDQwMG0gd2l0aCBmdWxsIDQwMG0gYWN0aXZlIHJlY292ZXJ5LiAKTGV0J3MgYmVnaW4gd2l0aCBhbiBvcmRpbmFyeSBjYXNpbm8gYm9udXMgb24gZGVwb3NpdDogeW91IHRyYW5zZmVyICQxMDAgYW5kIG9idGFpbiAkMTAwIG1vcmUsIHdoaWNoIGl0IHdpbGwgYmUgcG9zc2libGUgdG8gZ2V0IGhhdmluZyBzdGFrZWQgJDMwMDAuIEl0IGlzIGEgdHlwaWNhbCBleGFtcGxlIG9mIGNhc2lubyBib251cyBvbiB0aGUgZmlyc3QgZGVwb3NpdC4gVGhlIHNpemVzIG9mIGEgZGVwb3NpdCBhbmQgYm9udXMgY2FuIGJlIGRpZmZlcmVudCwgYXMgd2VsbCBhcyB0aGUgcmVxdWlyZWQgc3Rha2UgcmF0ZXMsIGJ1dCBvbmUgdGhpbmcgcmVtYWlucyB1bmNoYW5nZWFibGUgICB0aGUgYW1vdW50IG9mIHRoZSBjYXNpbm8gYm9udXMgaXMgYWNjZXNzaWJsZSBmb3Igd2l0aGRyYXdhbCBhZnRlciB0aGUgcmVxdWlyZWQgd2FnZXIuIFRpbGwgdGhpcyBtb21lbnQgaXQgaXMgaW1wb3NzaWJsZSB0byB3aXRoZHJhdyBtb25leSwgYXMgYSBydWxlLgpKZWRlbmZhbGxzIGhhYmVuIHdpciBkaWUgS3JhZnQsIHVtIGRhcyBaZXB0ZXIgenUgZmhyZW4gdW5kIHdvbGxlbiBlcnN0bWFsaWcgYWxzIE1vemFydHN0YWF0IGRpZSBPbHltcGlzY2hlbiBTcGllbGUgZmhyZW4uIEplZGVuZmFsbHMgaGFsdGVuIHdpciBkYXMgU3BvcnR3ZXNlbiBzYXViZXIsIGplbnNlaXRzIGRlciBkcmVja2lnZW4gUHVmZnMsIHVuZCBtYWNoZW4gdW5zZXJlIFNwb3J0dmVyZWluZSBoeWdpZW5pc2NoLCBmcmVpIHZvbiBBdXNsbmRlcm4uIApUaGUgb25seSB3YXkgdG8gZ2V0IGl0IGlzIHRvIGNvbnRhY3QgaGlzIGFnZW50cyAod2hpY2ggaSBiZWxpZXZlIGNvc3RzIG1vbmV5IHRvIGdldCB0aGVpciBpbmZvKSBhbmQgdGhlbiB5b3UgY291bGQgZ2V0IEVtJ3MgbnVtYmVyLiBTb21lIHdlYnNpdGVzIGRlYWwgd2l0aCBwcGwgd2hvIHdhbnQgZmFtb3VzIHBwbCdzIGluZm8gYW5kIHlvdSBoYXZlIHRvIHBheSB0aGVtIGZvciBpdC4gU3RpbGwsIG5laXRoZXIgd2lsbCB3b3JrIGJlY2F1c2UgaWYgaGUgdGFsa2VkIHRvIGV2ZXJ5b25lIHdobyB3YW50ZWQgdG8gdGFsayB0byBoaW0gaGUgd291bGQgbmV2ZXIgaGF2ZSB0aW1lIHRvIGVhdCBkcmluayBzbGVlcCBvciBldmVuIGJyZWF0aGUgYnV0IGdvb2QgbHVjayEgKEZ1bGwgQW5zd2VyKQpSaWRrZXIgc3RhdGVkOi4gCkFSTXMgYXJlIGFuIGludGVyZXN0aW5nICJmaW5hbmNpYWwgcHJvZHVjdC4iIEkgc3VwcG9zZSB0aGUgaWRlYSB3YXMgaW52ZW50ZWQgaW5pdGlhbGx5IGZvciByaWNoLCByZWFsIGVzdGF0ZSBpbnZlc3RvciB0eXBlcy4gU2VlLCB0aGV5IGNvdWxkIGdvIGluLCBidXkgYSBob3VzZSwgYW5kIGFjdHVhbGx5IHBheSBsZXNzIHRoYW4gdGhlIGludGVyZXN0IG9uIHRoZSBsb2FuLiAKT25saW5lIFZpZGVvIFBva2VyLCBvbmUgb2YgdGhlIG1haW4gc3RhYmxlcyBpbiB0aGUgVmlydHVhbCBDYXNpbm8gaW5kdXN0cnkgaGFzIHRha2VuIHRoZSBpbnRlcm5ldCBieSBzdG9ybS4gCkkgaGFuZCB3cm90ZSBlYWNoIGNhcmQgYW5kIHVuZGVybGluZWQgYWxsIHRoZSBidXp6IHdvcmRzOiBjYXNoIG9mZmVyLCBhcyBpcywgMzAgZGF5cyBvciBsZXNzIGV0Yy4gSSBtYWlsZWQgdGhlIGNhcmRzIG9mZiBNb25kYXkgYW5kIEkndmUgYWxyZWFkeSByZWNlaXZlZCBvbiBjYWxsLiAKRGFucyBjZXQgYXJ0aWNsZTpMZSBwb2tlciB0cm9pcyBjYXJ0ZXMgKGF1IGNhc2lubylMZSBwb2tlciB0cm9pcyBjYXJ0ZXMgKGwnYW5jaWVubmUgdmFyaWFudGUpCkFmdGVyIEkgZ290IHRoZSBWQTMsIEdhcm1pbiByZWxlYXNlZCBpdCBpbiBtb3JlIGNvbG9ycyB0aGF0IEkgbGlrZWQgYmV0dGVyLCB3aGljaCB3YXMgYSBsaXR0bGUgYW5ub3lpbmcuIApUbyByZWNvcmQ7IHRvIGNvbW1lbW9yYXRlOyB0byB0aGluayBiYWNrIHRvIHRoZSBwYXN0bi4gSm91cm5hbDsgZGlhcnk7IHNjcmFwYm9va0NvbXBvdW5kIG9mIGRyYWUgKHRyZWUpLCByaWQgKHRoaW4pLCBhbmQgeWFuZXJlSSBnb3QgbXkgZmlyc3QgYnVqbyB0aGlzIHllYXIsIGFuZCB1c2VkIGl0IGZvciB0aGUgZmlyc3QgdGltZSEgR290dGEgc2F5LCB0aGF0IHRoaW5nIGlzIGF3ZXNvbWUsIGl0IGhlbHBzIG1lIGtlZXAgb24gY2hlY2sgYW5kIGhlbHBzIG1lIHJlbWVtYmVyIHN0dWZmIGJlY2F1c2UgSSBoYXZlIGlzc3VlcyB3aXRoIGxvbmcgdGVybSBtZW1vcnkuIApMaWtlIHJveWFsIHNpYmxpbmdzIHdhcnJpbmcgb3ZlciBhIGJpcnRocmlnaHQsIExvbmdtb250IGFuZCBMZXdpcyBQYWxtZXIgYm90aCByb3NlIHVuYmVhdGVuIHRvIHRoZSB0b3Agb2YgdGhlIDRBIGNsYXNzaWZpY2F0aW9uIGFuZCB0aHJldyBldmVyeXRoaW5nIHRoZXkgaGFkIGF0IGV2ZXJ5b25lIHdoaWxlIHByZXAgYmFza2V0YmFsbCBmYW5zIHdhdGNoZWQgZnJvbSBhYm92ZSBpbiB0aGUgRGVudmVyIENvbGlzZXVtIHN0YW5kcywgYXMgd2VsbCBhcyBmcm9tIGFsbCBjb3JuZXJzIG9mIENvbG9yYWRvLiBGdWxsIFN0b3J5LiAKTWFueW9ubGluZSBwb2tlcnJvb21zIGFyZSBub3cgaW5zdGFsbGluZyBzb2Z0d2FyZSB0aGF0IGNhbiBkZXRlY3QgcGxheWVycyB3aG8gc2VlbSB0byBiZSB1c2luZyBmcmVxdWVudCBwYXR0ZXJucyBpbiB0aGVpciBnYW1lcGxheS4gCldoYXQgcG9rZXIgdmFyaWFudHMgaGF2ZSB0aGUgbGVhc3QgdmFyaWFuY2UKVmFuZ0t1dmEgIDEwIHBvaW50cyAgc3VibWl0dGVkIDExIG1vbnRocyBhZ28KU3RlcCAxSGVhdCB0aGUgb2lsIGluIGEgbGFyZ2UgcG90IHdpdGggYSBsaWQgb3ZlciBtZWRpdW0gaGlnaCBoZWF0LiBPbmNlIHdhcm0sIGFkZCB0aGUgc2hhbGxvdCBhbmQgc2F1dCB1bnRpbCBpdCBiZWdpbnMgdG8gd2lsdCwgNCB0byA1IG1pbnV0ZXMuIEFkZCB0aGUgbGVla3MgYW5kIG11c3RhcmQgYW5kIHN0aXIgdW50aWwgdGhlIG11c3RhcmQgaXMgZGlzcGVyc2VkLiAKSXQgd291bGQgc2VlbSB0aGF0IHlvdXIgbW90aGVyIGhhcyBzb21lIHZlcnkgc3Ryb25nIGFuZCB1bnJlc29sdmVkIGV4cGVyaWVuY2VzL3Rob3VnaHRzIGFzc29jaWF0ZWQgd2l0aCB5b3VyIGZhdGhlciB3aGljaCB3ZXJlIHN0aXJyZWQgdXAgYnkgUmVpa2kgZW5lcmd5LkVkaXQ6IFRoZXJlIGlzIGEgcHJhY3RpY2UgSSBmaW5kIHRvIGJlIGluY3JlZGlibHkgdXNlZnVsIGNhbGxlZCBGZWVkaW5nIFlvdXIgRGVtb25zLiBJZiB5b3VyIG1vdGhlciB3b3VsZCBiZSBvcGVuIHRvIGl0LCBwZXJoYXBzIHlvdSBjb3VsZCBpbnRyb2R1Y2UgdGhlIHN0ZXBzIHRvIGhlci4gCkl0IGtlZXBzIG1lIG91dCBvZiB0cm91YmxlIGFuZCBnaXZlcyBtZSBhIGZvY3VzIGFzIEkgbGVhcm4gaG93IHRvIG1ha2UgbXkgUGhvdG9zaG9wIHNpbmcuLiAKVGhpcyB3YXMgMS8xNHRoIG9mIHRoZSBib29rLiAKSXQncyBhbHNvIG9uZSBvZiB0aGUgcmVhc29ucyB3aHkgd29tZW4gc3VmZmVyIGZyb20gYnVuaW9uIHBhaW4gbW9yZSBvZnRlbiB0aGFuIG1lbiBkby4gQnV0IGFueSBzaG9lIHRoYXQgcmVzdHJhaW5zIHRoZSBuYXR1cmFsIHdpZHRoIG9mIHlvdXIgZm9vdCBhcm91bmQgdGhlIHRvZXMgYXJlYSBjYW4gdWx0aW1hdGVseSBsZWFkIHRvIGEgYnVuaW9uLi4gClRoaXMgaXMgc29tZXRoaW5nIHJlYWxseSBpbnRlcmVzdGluZyB0aGF0IHlvdSB3aWxsIGJlIGFibGUgdG8gZ2V0IHRob3VzYW5kcyBvZiBwb3NpdGl2ZSByZXZpZXdzIGFib3V0IFRoZSBGbHVzaCBGYWNlcyBQb2tlciBDYXJkIFByb3RlY3Rvci4gCkl0IGEgbmlnaHRtYXJlIGZvciBldmVyeW9uZSwgaGVyIGVtcGxveWVyIHdlcmUgYmVpbmcgYSBiaXQgb2YgYSBkaWNrIGFuZCB0b29rIHRoZSBlYXN5IHdheSBvdXQsIG1heWJlIG91dCBvZiBuZWNlc3NpdHkgb3IgbWF5YmUgdGhleSBqdXN0IGRpZG4gd2FudCB0byBkZWFsIHdpdGggaXQuIApMaXZlIGNhc2lubyBnYW1lcyBhcmUgdGFibGUgZ2FtZXMgICBiYWNjYXJhdCwgcG9rZXIsIHJvdWxldHRlIGFuZCBibGFja2phY2suIApPdmVydmlldyBmb3Igd2hvcmFib2xhCkFnYWluc3QgdGhpcyBiYWNrZHJvcCwgd2hhdCBpcyB1bmZvcnR1bmF0ZWx5IG92ZXJsb29rZWQgYXJlIFdpbGxpYW0gU2xpbSB0YWN0aWNhbCBhbmQgc3RyYXRlZ2ljYWwgdGhpbmtpbmcgYW5kIHNraWxsIHdoaWNoIG1ha2VzIGhpbSBhIGR5bmFtaWMsIGZsZXhpYmxlLCBhbmQgZmFzY2luYXRpbmcgY29tbWFuZGVyIHRvIHN0dWR5LiBTY2hvbGFycyB3aG8gaGF2ZSBzdHVkaWVkIFNsaW0gd291bGQgYmUgZWFnZXIgdG8gcG9pbnQgb3V0IGhpcyBtYXN0ZXJwaWVjZSBvZiBzdHJhdGVneSBhbmQgc2tpbGw6IE9wZXJhdGlvbiBFeHRlbmRlZCBDYXBpdGFsLgpUaGV5IGJvdGggVGFpd2FuZXNlLCBzbyB0aGV5IGhhdmUgdHJhZGl0aW9uYWwgc3VidGl0bGVzLCBib3RoIGFyZSBhdmFpbGFibGUgZm9yIGZyZWUgb24gWW91VHViZSwgYW5kIGJvdGggaGF2ZSBodW5kcmVkcyBvZiBlcGlzb2Rlcy4uIApUaGlzIHBob3RvIHByb3ZpZGVkIGJ5IFRNWiwgc2hvd3MgUnlhbiBKZW5raW5zIGFuZCBKYXNtaW5lIEZpb3JlIGF0IHRoZWlyIHdlZGRpbmcgaW4gTGFzIFZlZ2FzIG9uIE1hcmNoIDE4LiAoVE1aL0Fzc29jaWF0ZWQgUHJlc3MpCklmIHRoZSBlYXNpZXN0IHdheSB0byB0dXJuIHRoZSBtYXhpbXVtIHByb2ZpdCBpcyB0byBkbyBnb29kIHRoaW5ncywgdGhlbiB0aGV5IGRvIHRoYXQuLiAKT24gYXZlcmFnZSwgdGhlIHN1YmplY3RzIHdobyBnYWluZWQgd2VpZ2h0IHNhdCB0d28gaG91cnMgbW9yZSBwZXIgZGF5IHRoYW4gdGhvc2Ugd2hvIGhhZG4ndC4KSSBwZXJzb25hbGx5IHNhdyB0aGUgSUcgYWNjb3VudCBhbmQgaXQgd2FzIHJlYWwgKGFsYmVpdCBwcml2YXRlKS4gClJlZ2FyZGxlc3MsIHNoZSBzZWVtcyB0byBoYXZlIG5vIGludGVudGlvbiBvZiBsZWF2aW5nIGFueXRoaW5nIG9mIHZhbHVlIHRvIGFueW9uZSBhdCBkZWF0aC4gSWYgeW91IGxpdmUgaW4gdGhlIHNhbWUgc3RhdGUsIGRvdWJsZSBjaGVjayBlc3RhdGUgbGF3cyB0byBtYWtlIHN1cmUgaGVyIGhlaXJzIGFyZSBOT1QgbGlhYmxlIGZvciBhbnkgb2YgaGVyIGRlYnRzLiBXaGVuIHNoZSBkcm9wcyBkZWFkLCB5YSBjYW4gZmVlbCBmcmVlIHRvIHdhbGsgYXdheS4gCk90aGVyIHBhcmFsZWdhbHMgbWF5IGhhdmUgc2ltaWxhciBkdXRpZXMgYXMgbGl0aWdhdGlvbiBwYXJhbGVnYWxzLCB5ZXQgbWF5IG5vdCBoYXZlIHRoZSBzYW1lIHRpdGxlLiBGb3IgZXhhbXBsZSwgSW5kZWVkIHJlcG9ydHMgdGhhdCBhIGxpdGlnYXRpb24gYXNzaXN0YW50IGVhcm5zIGFib3V0ICQzNywwMDAgcGVyIHllYXIuLiAKSW5zdGVhZCwgeW91IHNlZW0gdG8gaGF2ZSBpbnRlbnRpb25hbGx5IGRvbmUgZXZlcnl0aGluZyBwb3NzaWJsZSB0byBtYWtlIGl0IGFwcGVhciB5b3Ugc3RlYWxpbmcgY29udGVudC4uIApTTyBydW5lc2NhcGUgYWNjb3VudCB3YXMgYmxvY2tlZCBmb3IgdXNpbmcgYm90cyAoaGUgZGlkbnQsIHdlIHdlIG92ZXJzZWFzIGhlIHdhc24gcGxheWluZykuIEFjY291bnQgaXMgdW5ibG9ja2VkIHllc3RlcmRheSwgaGUgcHN5Y2hlZCBiZWNhdXNlIGhlIGdyaW5kZWQgaXQgdG8gOTkgc3RhdHMgcGxheWluZyBjYXN1YWxseSBvdmVyIHllYXJzLiBDb21lIHRvIGZpbmQgaXRzIGJlZW4gaGFja2VkLCBtb25leSBkcmFpbmVkIHRvIDQwaywgZ2VhciBzb2xkLiAKVGhlIGVudHJlcHJlbmV1cnMgc2VlIHRoZSBtb3N0IHBvdGVudGlhbCBmb3IgdGhlIHRlYW0gbGljZW5zaW5nIHJldmVudWUgbW9kZWwgYW5kIHRoZSBkYWlseSBmYW50YXN5IGdhbWVzLiB5b3UgZ28gdG8gYW55IE5ITCB0ZWFtIHdlYnNpdGUsIHRoZXkgYXJlIHN0YW5kYXJkaXplZC4gVGhlIE5ITCBpcyBtb3ZpbmcgaW4gdGhlIHNhbWUgZGlyZWN0aW9uIHdpdGggYXBwcywgTXIuIFNwcm9hdCBzYWlkLiB0ZWFtcyBsaWtlIGl0IGFuZCB0aGUgTkhMIGxpa2VzIGl0IHRoZW4gaXQgY291bGQgYmUgaW50ZWdyYXRlZCBhY3Jvc3MgYWxsIHRoZSB0ZWFtIGFwcHMuIFRoZSBrZXkgaXMgdG8gYnVpbGQgaW50ZXJlc3QgYW1vbmcgaW5kaXZpZHVhbCB0ZWFtcy4KVGhlIGhvbHkgcHJvcGhldCAoIHBpZWNlIGJlIHVwb24gaGltKSBzYWlkLCAiIFlvdXIgYm9keSBoYXMgcmlnaHQgdXBvbiB5b3UiIFRoZXJlZm9yZSwgaXQgaXMgb3VyIGR1dHkgdG8ga2VlcCBvdXIgYm9keSBjbGVhbiBhbmQgaGVhbHRoeS4gV2Ugc2hvdWxkIGRvIGFuZCBleGVyY2lzZSByZWd1bGFybHkuIFdlIHNob3VsZCBiZSByZWd1bGFyIGFuZCBwdW5jdHVhbCBpbiBvdXIgd29yay4gdGhhbmtzIHlhbWEgTUlBIE9NRVIgaGlnaCBzY2hvb2wgZ2NlIGNvbXB1dGVyIGxhYgpFdmVyeSB2aXNpdCB0aGUgY2hpcm9wcmFjdG9yIGhhZCB0byBkbyBsZXNzIHdvcmsgYW5kIG15IGhvcnNlIHNlZW1zIHNvIG11Y2ggaGFwcGllciB1bmRlciBzYWRkbGUsIHdoaWNoIGhhcyBkb25lIHdvbmRlcnMgZm9yIGhpcyB0cmFpbmluZyBhcyB3ZWxsLiBJIHdpbGwgc2F5IHRoYXQgZm9yIG15IG93biBib2R5LCBJIGZpbmQgdGhhdCBtYXNzYWdlL0dyYXN0b24gaGFzIGhlbHBlZCBtZSAiaG9sZCIgYWRqdXN0bWVudHMgbG9uZ2VyLCBzbyBpdCBub3QgdGhhdCBiaWcgYSBzdHJldGNoIHRvIHNheSBpdCB3b3VsZCB3b3JrIHNpbWlsYXJseSBpbiBob3JzZXMuIApCb3JnYXRhIEhvdGVsIENhc2lubyBTcGEsIE9uZSBCb3JnYXRhIFdheSAoNy8zLzAzKUxvY2F0ZWQgaW4gQXRsYW50aWMgQ2l0eSdzIE1hcmluYSBEaXN0cmljdCwgQm9yZ2F0YSBIb3RlbCBDYXNpbm8gU3BhIGZlYXR1cmVzIDIsMDAwIGd1ZXN0IGFuZCBzdWl0ZXMsIGZpbmUgYW5kIGNhc3VhbCBkaW5pbmcgb3B0aW9ucyBhbmQgYSA1NCwwMDAgc3F1YXJlIGZvb3Qgc3BhLiBBZGpvaW5pbmcgdGhlIHByb3BlcnR5IGlzIFRoZSBXYXRlciBDbHViIHdoaWNoIGZlYXR1cmVzIDgwMCBndWVzdCByb29tcyBhbmQgc3VpdGVzLCBhIDM2LDAwMCBzcXVhcmUgZm9vdCBzcGEsIDE4LDAwMCBzcXVhcmUgZmVldCBvZiBtZWV0aW5nIHNwYWNlLCBkZXNpZ25lciByZXRhaWwgYm91dGlxdWVzIGFuZCBmaXZlIGhlYXRlZCBpbmRvb3IgYW5kIG91dGRvb3IgcG9vbHMuClRoZXkgY29taW5nIHRocm91Z2ggdGhlIGNyYWNrLCBhbmQgSSBjcnVzaGluZyB0aGVtIGFzIGdlbnRseSBhcyBJIGNhbiBzbyBhcyBub3QgdG8gcmlsZSB1cCB0aGUgbWV0cm9wb2xpcyBvbiB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgd2luZG93LCB3aGlsZSB0cnlpbmcgdG8gZm9yY2UgdGhlIHdpbmRvdyBjbG9zZWQsIGFuZCBmdWxseSBhd2FyZSB0aGF0IEkgYnVjayBuYWtlZCwgc3RhbmRpbmcgb24gaW5jcmVkaWJseSBzbGlwcGVyeSBtYXJibGUgaW4gYSBiYXRocm9vbSB3aXRoIG1hbnkgZXhjaXRpbmcgcG9pbnR5IGZlYXR1cmVzIHdoaWNoIGFyZSBsaWtlbHkgdG8gc29vbiBiZSBmZWF0dXJpbmcgbXkgYnJhaW5zIHdoZW4gSSBzbGlwLi4gCkdyZWF0IHNvdW5kIGZvciBteSB0aW1lciwgdGhhbmtzLiAKTG90cyBvZiB5b3VuZyBsb2dpYyBicm9zIHNlZW0gdG8gaGF2ZSBiZWVuIGluIHZlcnkgcmVsaWdpb3VzIGhvdXNlaG9sZHMsIG9yIGp1c3QgaW4gc2l0dWF0aW9ucyB3aGVyZSB0aGV5IHdlcmUgbmV2ZXIgcmVhbGx5IHRhdWdodCBsb2dpYyBpbiBhIGZvcm1hbCBzZXR0aW5nLiAKU2VwcHVrdSB3b3VsZCBoYXZlIGJlZW4gaGlzIGFuc3dlciB0aGUgaG9ub3JhYmxlIHdhcnJpb3Igd2F5IG91dC4gCkFub255bW91cyBhdCBBbHRlck5ldCBleHBsYWlucyB3aHkgaGUgYWdyZWVkIHRvIGJlIGEgYmVuZCBvdmVyIGJveWZyaWVuZCBhbmQgd2hhdCB0aGUgZXhwZXJpZW5jZSB3YXMgbGlrZS4gCkF0IFJlYWwsIHRoZXJlIHdlcmUgYSBudW1iZXIgb2YgaW5mbHVlbnRpYWwgcGxheWVycyB0aGF0IHRpcmVkIG9mIGhpbSwgd2l0aCBzb21lIHdvcmtpbmcgYWdhaW5zdCBoaW0gYWN0aXZlbHkuIEhlIHN0aWxsIGhhZCBsb3lhbGlzdHMgYnV0IGhhZCBsb3N0IHRvbyBtdWNoIG9mIHRoZSBkcmVzc2luZyByb29tLiAKSXQgbXkgbWFtIGJpcnRoZGF5IHRvZGF5LiBJIG5ldmVyIGJvdWdodCBoZXIgYSBwcmVzZW50IGFzIEkgZW5kZWQgdXAgc2VlaW5nIGhlciB1bmV4cGVjdGVkbHkuIFNoZSB3YXMgdGFsa2luZyBhYm91dCB3YW50aW5nIHRvIGtuaXQgYWdhaW4gc28gSSByYW4gaG9tZSBhbmQgZ3JhYmJlZCBoZXIgYSBzZXQgb2YgYmFtYm9vIG5lZWRsZXMgYW5kIGEgZmV3IGJhbGxzIG9mIHlhcm4uIApLbm93aW5nIHRoYXQgdGhlcmUgcG9zc2libHkgd2VyZSBvcHBvbmVudHMgdGhhdCB3ZXJlIHN0cm9uZ2VyIHRoYW4gbWUgYW5kIEknZCBoYXZlIHRvIG92ZXJjb21lIHdhcyBleGNpdGluZyBmb3IgbWUuIEdldHRpbmcgdG8gc2hvdyBvdGhlciBHdWFyZGlhbnMgdGhhdCBpdCBkaWRuJ3QgbWF0dGVyIGhvdyBzdHJvbmcgdGhlaXIgZ2VhciB3YXMgYmVjYXVzZSBteSAiRmlyc3QgQ3Vyc2UiIGFuZCBJIHdlcmUgZ29pbmcgd2VyZSB0aGUgdG9wIHdvbHZlcyBlaXRoZXIgd2F5LiBJdCBqdXN0IGZlbHQgZ29vZCB0byBwbGF5LgpCZW5lZml0cyBvZiBEZWNrIEZhc3RlbmVycwpUb2RkMnBvaW50MCAgMSBwb2ludCAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpBdCB0aGF0IHBvaW50IEkgd2FzIGFsbW9zdCBpbiB0ZWFycy4uIApXaXRoIHRoZSB3aW43IHN0YXJ0IG1lbnUgSSBkaWRuIGV2ZW4gbmVlZCB0byBvcGVuIHRoZSBleHBsb3JlciB0byBvcGVuIGEgc3BlY2lmaWMgZmlsZSBvciBzdGFydCBzb21ldGhpbmcgc2luY2UgYnJvd3NpbmcgdGhyb3VnaCB0aGUgc3RhcnQgbWVudSB3YXMgZmFzdCBhbmQgY29udmVuaWVudCBlbm91Z2guCk9oLCBhbmQgd2F0Y2ggYWxsIG9mIHRoZSB5b3V0dWJlcnMgYmlnIGFuZCBzbWFsbCB0byBkZXZlbG9wIHlvdXIgb3BpbmlvbnMuIE5vdGhpbmcgc2F5aW5nIGEgc21hbGwgeW91dHViZXIgaXNuIHdhdGNoaW5nIGEgYmlnIHlvdXR1YmVyIGFuZCB0YWlsb3JpbmcgdGhlaXIgbWVzc2FnZSBhY2NvcmRpbmdseSBpbiBob3BlcyBvZiBvbmUgZGF5IHJlY2VpdmluZyB0aGUgc2FtZSBraW5kIG9mIGtpY2tiYWNrcyBhbmQgZXhwb3N1cmUuIFRha2UgQUxMIGludGVybmV0IG9waW5pb25zIHdpdGggYSBncmFpbiBvZiBzYWx0LiBXYXRjaCBldmVyeXRoaW5nLiBEZXZlbG9wIHlvdXIgb3duIG9waW5pb24uIFNwZW5kIHlvdXIgbW9uZXkgaG93ZXZlciB5b3Ugd2FudCAodGhvdWdoIEkgbm90IHRoZSBiaWdnZXN0IGZhbiBvZiBQcmVvcmRlcnMgbXlzZWxmIDpQKS4KRnJlaWJ1cmcgaXMgYSBiZWF1dGlmdWwgdG93biB3aXRoIGEgbG90IG9mIHN0dWRlbnRzLiBJdCBhbHNvIGEgdmVyeSAiZ3JlZW4iLCBlbnZpcm9ubWVudGFsIGZyaWVuZGx5LCBhbHRlcm5hdGl2ZSBjaXR5LiAKVjIgY2hlY2tlZCBoaXMgcHJlIGZsb3Agc3RyYWRkbGUgYW5kIGNvdWxkIGxpdGVyYWxseSBoYXZlIGFueXRoaW5nLiBUaGF0IHdoeSBJIHNhaWQgbWFrZSB0aGUgMyBiZXQgb24gdGhlIGZsb3Agd2hpY2ggd291bGQgbGlrZWx5IGJ1bXAgVjIgb2ZmIG9mIGEgd2VhayAxMC4gVGhlIHJlc3VsdHMgd2VyZW4gcG9zdGVkLCBzbyBJIGFzc3VtaW5nIGhlcm8gbG9zdCB0byBhIHNldCBvZiAxMCBvciBWMiBib2F0ZWQKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMjEgaG91cnMgYWdvSSBhY3R1YWxseSBkaWQgYmFjayBpdCB1cC4gUmVndWxhdG9yeSBhbGlnbm1lbnQgaXMgdGhlIGRlZmluZWQgcmVzdWx0IGJ5IEFydC42IHdoaWNoIGV4cGxpY2l0bHkgc3RhdGVzICJubyBkaW1pbnV0aW9uIG9mIHJpZ2h0cywgc2FmZWd1YXJkcyBhbmQgZXF1YWxpdHkgb2Ygb3Bwb3J0dW5pdHkiLkl0IGFsc28gbGl0ZXJhbGx5IHN0YXRlcyAiTm8gc2VjdXJpdHkgaW5mcmFzdHJ1Y3R1cmUiICAgd2hpY2ggaXMgdXAgZm9yIGludGVycHJldGF0aW9uIHRvIHNvbWUgZXh0ZW50LiBJcyBhIGJvcmRlciBwb3N0IGEgc2VjdXJpdHkgaW5zdGFsbGF0aW9uPyBNb3N0IGxpa2VseSB5ZXMuIApZb3VuZyBQYWtpc3RhbmlzIGZyb20gYWxsIGFjcm9zcyB0aGUgY291bnRyeSB0ZW5kIHRvIGZpbmQgb3Bwb3J0dW5pdHkgb24gYW5kIGFsb25nIEkuIAogMiBwb2ludHMgIHN1Ym1pdHRlZCAyMyBob3VycyBhZ29Zb3Ugbm90IHRoaW5raW5nIGVub3VnaCBhYm91dCB0aGUgYmlnIGVub3VnaCBwaWN0dXJlLiAKTGlua2UgU2VpdGU6IFdlbm4gZGllIGRyaXR0bGV0enRlIE0gZWluZSByZSBNIGlzdCB1bmQgZGllIHZvcmxldHp0ZSBlaW5lIGxpIE0sIGRhbm4gZGllIGJlaWRlbiBNIHJlIGJlcnpvZ2VuIHp1c2FtbWVuc3RyaWNrZW4uIChyZSBNIHdpZSB6dW0gUmVjaHRzc3RyaWNrZW4gYWJoZWJlbiwgdm9ybGV0enRlIE0gcmUgc3RyaWNrZW4gdW5kIGRpZSBhYmdlaG9iZW5lIE0gYmVyIGRpZSByZSBNIHppZWhlbikuIApEYXkgMyBmZWF0dXJlZCBzb21lIHZlcnkgYmlnIG5hbWVzIGluIFBha2lzdGFuaSBmYXNoaW9uICAgVW1hciBTYXllZWQsIEZhcmF6IE1hbmFuIGFuZCBsYXN0IGJ1dCBub3QgbGVhc3QsIE5pbG9mZXIgU2hhaGlkLiBBbmQgYWxsIHRocmVlIG9mIHRoZW0gcGVsdGVkIG91dCBzb21lIGZhYnVsb3VzIHdlZGRpbmcgd2VhciBhbmQgYXJ0aXN0aWMgY291dHVyZS4gCkJvdGggMzIgYml0IGFuZCA2NCBiaXQgV2luZG93cyA3IFVsdGltYXRlIGNhbiBub3cgZWFzaWx5IGJlIGFjdGl2YXRlZCwgYWNjb3JkaW5nIHRvIE15IERpZ2l0YWwgTGlmZS4gCkNvbmNvdXJzZXMgQiBhbmQgQyBob2xkIHRoZWlyIHNob3BzIGFuZCBkaW5pbmcgcGxhY2VzIG9uIHRoZSBzZWNvbmQgYW5kIHRoaXJkIGxldmVscy4gWW91J2xsIGJlIHBsZWFzZWQgZmluZCB0aGF0IGVhY2ggaGFzIGl0cyBvd24gc2V0IG9mIGFydCBleGhpYml0cyB0byBicm93c2UgdGhyb3VnaCB3aGlsZSBraWxsaW5nIHRpbWUuIApXZSBiZWhpbmQgdmVyeSBmZXcgaGFuZHMgYW5kIHZpbGxhaW4gaXMgY2xlYXJseSBhY3RpdmUgZW5vdWdoIHRoYXQgd2Ugc2hvdWxkbiBiZSBUSEFUIG5pdHR5Li4gCkl0IGlzIGp1c3QgZm9yIHRoZWlyIG93biBwZXJzb25hbCBmaW5hbmNpYWwgZ2Fpbi4gQW5kIHRoaXMgaXNuIGEgcmFudCwgdGhpcyBpcyBqdXN0IHJlcG9ydGluZyBoaXN0b3JpY2FsIGV2aWRlbmNlIG9mIHRoaXMgZmFtaWx5IGluIGFuZCBvdXRzaWRlIHRoZSB3aGl0ZSBob3VzZS4uIApJdCBtYXkgc291bmQgbGlrZSBhIGRyYWcgb24gaG9saWRheSBidXQgZHJlc3NpbmcgdXAgYWRkcyB0byB0aGUgb2NjYXNpb24uIApUaGUgbW9yZSBhaXIgeW91IHJlbW92ZSwgdGhlIGJldHRlciB0aGUgZm9vZCBwcmVzZXJ2YXRpb24uIElmIHlvdSBoYXBwZW4gdG8gaGF2ZSBvbmUgb2YgdGhvc2UgdmFjdXVtIHNlYWxlciBtYWNoaW5lcywgaGF2ZSBhdCBpdDsgaWYgbm90LCBwcmVzcyBkb3duIG9uIHRoZSBiYWcgdG8gcHVzaCBvdXQgYWlyIGJlZm9yZSB5b3Ugc2VhbCBpdCB1cCB0aWdodGx5Li4gCkdyaWZmaXRocyBzYWlkIGFub3RoZXIgcmlkZXIgd2hvIG5vdGljZWQgdGhlIG1hbiBmYWxsIGhpdCB0aGUgcG93ZXIgb2ZmIGJ1dHRvbiwgcHJldmVudGluZyB0aGUgbmV4dCB0cmFpbiBmcm9tIGNvbWluZyBpbnRvIHRoZSBzdGF0aW9uIHdoaWxlIHRoZSBHb29kIFNhbWFyaXRhbnMgY2FtZSB0byBoaXMgcmVzY3VlLgpUaGlzIHBsYW4gd2FzIHB1cmUgaHVicmlzLCBvZiBjb3Vyc2UsIGJ1dCBJIHdhcyB0b28gaWdub3JhbnQgdG8ga25vdyBpdC4gSSBmaWd1cmVkIG15IFdhbGwgU3RyZWV0IGFkdmVudHVyZSBtaWdodCBtYWtlIG1lIGEgZG9sbGFyIG9yIHR3byBhbmQsIHdoYXRldmVyIGhhcHBlbmVkLCBJJ2QgZ2V0IGEgYm9vayBvdXQgb2YgaXQuIEknbSBwcm9iYWJseSB0aGUgb25seSBwZXJzb24gd2hvIHdlbnQgdG8gV2hhcnRvbiBvbiBhIGxpdGVyYXJ5IGltcHVsc2UuIApJbiBmYWN0LCBJIGZvdW5kIHRoYXQgd2VhcmluZyAibW9kZXN0IiBjbG90aGluZywgbWFkZSBteSBjaGVzdCBzb21laG93IGV2ZW4gbW9yZSBwcm9taW5lbnQgd2hlcmVhcyBhIFYgbmVja2xpbmUgcmVkdWNlZCB0aGUgc2l6ZSBhbGJlaXQgc2hvd2VkIHNvbWUgY2xlYXZhZ2UuLiAKTWFueSB5ZWFycyBsYXRlciBJIHdhcyB0YWxraW5nIHRvIG15IGRhZCB3aG8gZ2lybGZyaWVuZCBjaGVhdGVkIHdpdGggaGltIG9uIGhlciBodXNiYW5kLCBhc2tpbmcgaWYgaGUgd2FzIGxvb2tpbmcgZm9yIHNvbWVvbmUgYmVmb3JlIGhlIGJyb2tlIHVwLCBhbmQgc2FpZCBoZSB0aG91Z2h0IG15IG11bSB3YXMgY2hlYXRpbmcgb24gaGltIGFuZCB0aGF0IGhlIG5ldmVyIGRpZCBhbnl0aGluZy4KVGhlIGJlZ2lubmluZyBvZiB0aGUgaW50ZXJ2aWV3IGdvZXMgZmluZS4gQnV0IHdoZW4gQmVyZ21hbiBwb2ludHMgb3V0IHRoZSBwcm9ibGVtIHdpdGggdGhlIHN5c3RlbSwgdGhlIGNvcnJ1cHRpb24gYW5kIGJyaWJlcnkgdGhhdCByZWFsbHkgdHJ1bHkgaXMgdGhlIHByb2JsZW0gd2l0aCB0YXggYXZvaWRhbmNlLCBoZSB1c2VzIENhcmxzb24gYXMgYSB3YXkgdG8gaWxsdXN0cmF0ZSBpdC4gVGhhdCB3YXNuIHRoZSBraW5kZXN0IHdheSB0byBleHBsYWluIHRoZSBwcm9ibGVtIG9yIHRoZSBtb3N0IGZydWl0ZnVsIHdheS4gCkFmdGVyIHRoZSBBRmliIGRldGVjdGluZyBLYXJkaWFCYW5kIGdhcm5lcmVkIHNvIG11Y2ggYXR0ZW50aW9uLCBBcHBsZSBjdXQgb3V0IHRoZSBtaWRkbGUgbWFuIGFuZCBhcm1lZCB0aGUgbmV3ZXN0IEFwcGxlIFdhdGNoIHdpdGggYW4gaW5zYW5lbHkgYWNjdXJhdGUgaXJyZWd1bGFyIGhlYXJ0YmVhdCBtb25pdG9yIHRoYXQgZXZlbiBpbXByZXNzZWQgdGhlIEFtZXJpY2FuIEhlYXJ0IEFzc29jaWF0aW9uIGluIHByZWNsaW5pY2FsIHN0dWRpZXMuIElmIHRoZSB3YXRjaCBkZXRlY3RzIHNvbWV0aGluZyB1bnNldHRsaW5nLCBpdCdzIG9idmlvdXNseSB1cCB0byB0aGUgdXNlciB0byBzZWUgYSBkb2N0b3IgIGJ1dCBldmVuIGdldHRpbmcgYSB3YXJuaW5nIGxpa2UgdGhpcyBmcm9tIHlvdXIgd2F0Y2ggY291bGQgcG90ZW50aWFsbHkgc2F2ZSBsaXZlcy4uIApXaGlsZSB0aGUgcmFuZ2Ugb2YgdGhlIHByZXRlZW4geWVhcnMgd2FzIHZhZ3VlIHdoZW4gdGhlIHRlcm0gd2FzIGZpcnN0IHVzZWQgaW4gdGhlIDE5NTBzLCBpdCBpcyBub3cgY2xlYXJseSBkZWZpbmVkLiAKQXJ0aWNsZU5vbiBJbnZhc2l2ZSBIdW1hbiBCcmFpbiBTdGltdWxhdGlvbiBpbiBDb2duaXRpdmUgTmV1cm9zY2llbmNlOiBBIFByaW1lclBhcmtpbiwgQi4sIExlZWNoLCBSLiBhbmQgV2Fsc2gsIFYuIDIwMTUuIE5vbiBJbnZhc2l2ZSBIdW1hbiBCcmFpbiBTdGltdWxhdGlvbiBpbiBDb2duaXRpdmUgTmV1cm9zY2llbmNlOiBBIFByaW1lci4gTmV1cm9uLiA4NyAoNSksIHBwLiA5MzIgOTQ1LiBUaGlzIGhhcyBsZWQgdG8gc29tZSBnZW51aW5lIGFkdmFuY2VzIGluIHVuZGVyc3RhbmRpbmcgcGVyY2VwdGlvbiBhbmQgY29nbml0aW9uLCBhbmQgaGFzIHJhaXNlZCBzb21lIGhvcGVzIG9mIGFwcGx5aW5nIHRoZSBrbm93bGVkZ2UgaW4gY2xpbmljYWwgY29udGV4dHMuIApUaGVyZSBhcmUgYSBsb3Qgb2YgcGVvcGxlIHdobyBoYXZlIGJlYXIgY29tcGFuaW9ucyBhcyBwZXRzIGluIE5vcnRoIEVhc3Rlcm4gRXVyb3BlLiBJbiBhIGxvdCBvZiB0aG9zZSBjb3VudHJpZXMgaXQgbm90IGlsbGVnYWwsIG9yIGV2ZW4gZnJvd25lZCB1cG9uIGFuZCB3aGlsZSBvbiBvY2Nhc2lvbnMgaXQgZG9lcyBlbmQuIApUaGUgb25seSB0aGluZyB0aGF0IHdvdWxkIHdvcnJ5IG1lIGlzIHRoZWlyIDE0IDE2IGxvc3MgYWdhaW5zdCBleCBUaXRhbiAodGhlIHRlYW0gdGhleSB1cCBhZ2FpbnN0IGhlcmUpLCBidXQgaXQgbWF5IGhhdmUganVzdCBiZWVuIGFuIGFub21hbHkuIApXaGVuIGFsbCBoZWxsIHdhcyBsZXQgbG9vc2UKTG9va2VkIGF0IGEgbG90IG9mIHNwYWNlIGluIExvbmRvbiBhbmQgd2UganVzdCBsb3ZlZCB0aGlzLiBXZSBzYXcgc3BhY2VzIGFjcm9zcyB0aGUgY2l0eSwgYnV0IHRoaXMganVzdCBmZWVscyBsaWtlIEJsYWNrIEZseSwgc2hlIHNhaWQuLiAKSSBoYXZlIG5vIGFzcGlyYXRpb25zIHRvIGNoYW5nZSB0aGUgd29ybGQsIGxlYWQgYSBiaWcgaW5zcGlyYXRpb25hbCBtb3ZlbWVudCBhYm91dCBicmVha2luZyBsaW1pdGF0aW9ucyBiZWNhdXNlIEkgd2FzIHJlc3RyaWN0ZWQsIEkgcHVzaGVkIGJ1dCBJIGRpZG4ndCBiZWF0IG15IGhlYWQgYWdhaW5zdCBhIHdhbGwgb24gdGhpbmdzIEkgd2FzIHBoeXNpY2FsbHkgdW5hYmxlIHRvIGRvLiBJJ20gaGFwcHkgYmVpbmcgYSBub2JvZHkuIEkganVzdCB3YW50IHRvIGhlbHAgb3RoZXJzIGdldCB0aGF0IHNhbWUgc2VsZiBzYXRpc2ZhY3Rpb24vcHVycG9zZS4uIApLYXllIGlzbid0IHdyb25nLiBGcm9tIHNoaXJ0cyB0b2NvZmZlZSBtdWdzIHRvIHRhdHRvb3MsIENoaWNhZ29hbnMgaGF2ZSBwcm91ZGx5IGVtYmxhem9uZWQgdGhlaXIgYmx1ZSBiYXJzIGFuZCByZWQgc3RhcnMgICByZXByZXNlbnRhdGl2ZSBvZiB0aGUgY2l0eSdzIGdlb2dyYXBoeSBhbmQgaGlzdG9yeSAgIG9uIHZpcnR1YWxseSBhbnkgYXZhaWxhYmxlIGNhbnZhc3MgYWNyb3NzIHRoZSBjaXR5LiBJbiAyMDEzLCBDaGljYWdvIG1hZ2F6aW5lIGNpdGVkIHRoZSBmbGFnJ3MgInNpbXBsZSwgYm9sZCBkZXNpZ24iIGFzIHRoZSBtYWluIHJlYXNvbiBpdCBoYWQgYmVjb21lIHNvIHViaXF1aXRvdXMuCkkgd2VudCB0byB0aGUgRVIgd2hlbiB0aGUgcGFpbiBlc2NhbGF0ZWQgYW5kIHRoYXQncyB3aGVuIHRoZXkgZGlzY292ZXJlZCBpdCB3YXMgZWN0b3BpYy4gCk5ldmVyIGFueXRoaW5nIHNwZWNpZmljIEkgY2FuIG1ha2Ugb3V0LCBhbmQgaXQncyBhbGwgc29ydHMgb2YgZGlmZmVyZW50IG11c2ljIGdlbnJlcyB0aGF0IHBsYXlzLCBzb21ldGltZXMgZXZlbiB3aGVuIEkndmUgbm90IGxpc3RlbmVkIHRvIGl0IGZvciB5ZWFycy4gClRoZSBwbGF5ZXIgd2hvIGhhcyB0byBjb250cmlidXRlIHRoZSBiaWcgYmxpbmQgcm90YXRlcyBvbmUgcG9zaXRpb24gdG8gdGhlIGxlZnQgYWZ0ZXIgZWFjaCBnYW1lLikgdG8gZ2V0IHRvIHlvdSBiZWZvcmUgcGxheWluZy4gCkxpa2UgY29pbiBmbGlwcywgdGhlIHJlc3VsdCBnZXRzIG1vcmUgYWNjdXJhdGUgdGhlIG1vcmUgeW91IGRvIGl0LCBhcyBzaGVlciBwZXJzaXN0ZW5jZSBpcm9ucyBvdXQgc3RhdGlzdGljYWwgYWJlcnJhdGlvbnMuIApUaGUgU3RhciBpc2xhbmQgc2l0ZSBhdCBCcm9hZGJlYWNoLCB3aGVyZSBpdHMgb3JpZ2luYWwgaG90ZWwgYW5kIGdhbWluZyBjb21wbGV4IHdhcyBqb2luZWQgYnkgVGhlIERhcmxpbmcgc3VpdGUgaG90ZWwgdHdvIG1vbnRocyBhZ28sIGJyZWFrcyBuZXcgZ3JvdW5kIG9uIGEgdGhpcmQgdG93ZXIgaW4gQXVndXN0LgpVIG9mIFQncyBzdHJhdGVnaWMgcmVjcnVpdG1lbnQgY2VudHJlIGhvc3RlZCBhIGpvYiBmYWlyIGF0IHRoZSB1bml2ZXJzaXR5J3MgRmlyc3QgTmF0aW9ucyBIb3VzZSB0byB0YXJnZXQgSW5kaWdlbm91cyBjYW5kaWRhdGVzIGFuZCB0aGUgb3JnYW5pemF0aW9uIGFsc28gcGFydGljaXBhdGVkIGluIHRoZSBJbmRpZ2Vub3VzIENhcmVlciBGYWlyLCBob3N0ZWQgYnkgUHJpbmNlJ3MgQ2hhcml0aWVzIENhbmFkYQpWaW5jZW50IFN0cmVldCwgTWVhZm9yZCwgT250YXJpby4gClRoZSBzdGF0ZSBvZiB0aGUgYXJ0IGJpbmdvIGhhbGwgZmVhdHVyZXMgYXJlYXMgZm9yIG5vbiBzbW9rZXJzIGFzIHdlbGwgYXMgc21va2VycywgZnJlZSBiZXZlcmFnZXMgZm9yIHBsYXllcnMgYW5kIHRhYmxlc2lkZSBmb29kIHNlcnZpY2UuTGVhZiBHcm91cCBpcyBhIFVTQSBUT0RBWSBjb250ZW50IHBhcnRuZXIgcHJvdmlkaW5nIGdlbmVyYWwgdHJhdmVsIGluZm9ybWF0aW9uLiAKSW4gdG90YWwgdGhhdCAxMjQgY29tYm9zOyBzbyAzNyUgb2YgdGhhdCBpcyBhYm91dCA0NSBjb21ib3MuIFNvIG9idmlvdXNseSBhbGwgQTI7IEkgdGhpbmsgQTUgYW5kIEE0IGFyZSB0aGUgbmV4dCBiZXN0IGNhbGxzIGJlY2F1c2UgdGhleSBibG9jayA1NCwgd2hpY2ggSSB0aGluayBpcyByZWFzb25hYmx5IGluIHN0cmFkZGxlcyByYW5nZS4gQW5kIGFmdGVyIHRoYXQganVzdCBnbyBmb3Iga2lja2VyIHBvd2VyLiAKVGhpcyBmdW5kYW1lbnRhbCBwcmluY2lwbGUgb2YgaG9tZW9wYXRoeSAoImxpa2UgY3VyZXMgbGlrZSIpIHdhcyBvYnNlcnZlZCBieSB0aGUgYW5jaWVudCBHcmVla3MgYW5kIGFnYWluIGluIG1vZGVybiB0aW1lcyB3aXRoIGRydWdzIGxpa2Ugcml0YWxpbiAoYSBzdGltdWxhbnQgdXNlZCB0byB0cmVhdCBoeXBlcmFjdGl2aXR5KSBhbmQgYmlydGggY29udHJvbCBwaWxscyAodGhlIGhvcm1vbmVzIHRoYXQgcmVndWxhdGUgZmVydGlsaXR5KS4uIAoiVGhlIE90dG9tYW4gRW1waXJlIHdhcyBpbiBkZWNsaW5lIiBkaWQgbm90IHNpbXBseSBtZWFuLCBhcyBpcyBzb21ldGltZXMgaW1hZ2luZWQsICJ0aGUgT3R0b21hbiBFbXBpcmUgbWlsaXRhcnkgc3RyZW5ndGggYW5kIGVjb25vbWljIHZpdGFsaXR5IGRlY3JlYXNlZCBpbiByZWxhdGlvbiB0byBpdHMgbmVpZ2hib3JzLiIgUmF0aGVyLCBpdCBtZWFudCB0aGF0IGV2ZXJ5IGFzcGVjdCBvZiB0aGUgZW1waXJlIGhpc3Rvcnkgd2FzIGNvbmNlcHR1YWxpemVkIHdpdGhpbiB0aGlzIGZyYW1ld29yay4gClRoZW4gYWZ0ZXIgc29tZSBzbWFsbCB0YWxrLCBzaGUgYXNrZWQgaXQgLiBNaW5kIHlvdSB0aGUgaWRlYSBvZiBoYXZpbmcgYSBwYWlkIHNleHVhbCBleHBlcmllbmNlIHdpdGggYSByYW5kb20gZ2lybCBJIG5ldmVyIHNlZSBhZ2FpbiBzb3VuZHMgZXhjaXRpbmcgYnV0IEkgaGF2ZSBubyBpZGVhIGF0IHdoYXQga2luZCBvZiBhZGRpdGlvbmFsIGZlZSBJIGxvb2tpbmcsIGFuZCBJIHVuZGVyc3Rvb2Qgbm9uZSBvZiB0aGUgaGVpZ2h0ICJzZXJ2aWNlcyIgc2hlIGxpc3RlZCB3aGlsZSB0YXBwaW5nIG15IGRpY2sgYXMgYSBzdWdnZXN0aW9uClRoaXMgeWVhciBpcyBiYWQuIFNpbmNlIEZyaWRheSwgSSBkcml2ZW4gZnJvbSBkb3dudG93biB0byBNY2NvbmFjaGllIGFuZCB3ZXN0ZW5kIHRvIHNvdXRoIEVkbW9udG9uIGNvbW1vbnMgc28ga2luZCBvZiBhbGwgb3ZlciB0aGUgY2l0eS4gCldoYXQgYSBzaGFtZS4uIApUaGUgc2Nob29sIGlzIGNsb3NlZCBvbiBFYXN0ZXIgd2Vla2VuZCwgTWVtb3JpYWwgRGF5IHdlZWtlbmQsIEp1bHkgNCwgTGFib3IgRGF5IHdlZWtlbmQsIFRoYW5rc2dpdmluZyAoVGh1cnNkYXksIFNhdHVyZGF5LCBTdW5kYXkpLCBDaHJpc3RtYXMgRXZlIGFuZCBkYXksIGFuZCBOZXcgWWVhcidzIEV2ZSBhbmQgZGF5LiAKVGhlIGJlc3Qgd2F5IHRvIHJlbW92ZSB0aG9zZSB0eXBlIG9mIGNvbXBvbmVudHMgaXMgdG8gcmVtb3ZlIHRoZSBzb2xkZXIgd2l0aCBhIGRlc29sZGVyaW5nIHB1bXAgYW5kIHNvbWUgd2ljayB0byBjbGVhbiB1cCB0aGUgaG9sZXMsIGJ1dCB5b3UgY2FuIGFsc28gZG8gaXQgd2l0aG91dDogaWYgeW91IGdldCBhIHNvbGRlcmluZyBpcm9uIHdpdGggYSBrbmlmZSB0aXAsIHlvdSBjYW4gc2l0IHRoZSB0aXAgaW4gYmV0d2VlbiB0aGUgM3gyIHJvd3Mgb2YgcGlucyB3aXRoIGEgd2hvbGUgYnVuY2ggb2Ygc29sZGVyIGFuZCBtZWx0IGFsbCB0aG9zZSBqb2ludHMgYXQgb25jZSB3aGlsZSB5b3UgcHVsbCBvbiB0aGUgY29tcG9uZW50IHdpdGggc29tZSBwbGllcnMgZnJvbSB0aGUgb3RoZXIgc2lkZS4gWW91IGJlIGFibGUgdG8gbGlmdCB0aGF0IGVuZCBvZiB0aGUgamFjaywgdGhlbiBkbyB0aGUgc2FtZSB0aGluZyBvbiB0aGUgbGVhZHMgY2xvc2VzdCB0byB0aGUgZWRnZSBvZiB0aGUgYm9hcmQuIEdvIGJhY2sgYW5kIGZvcnRoIGEgY291cGxlIG9mIHRpbWVzIGFuZCB5b3UgYmUgYWJsZSB0byBzZWUgc2F3IHRoZSBjb21wb25lbnQgb3V0IG9mIHRoZSBib2FyZCwganVzdCBkb24gaG9sZCB0aGUgaXJvbiBvbiB0b28gbG9uZyBvciBpdCBtZWx0IHRoZSBwbGFzdGljIGFuZCB5b3VyIHBsaWVycyB3aWxsIGdvIHRocm91Z2ggdGhlIHNoZWxsLiAKV2FybmUgd291bGQgYWdhaW4gdXNlIGhpcyBpbmZsdWVuY2UgYXQgQ2hhbm5lbCBOaW5lIHRvIGdldCBhaXJ0aW1lIGR1cmluZyB0aGUgY3JpY2tldCBjb3ZlcmFnZSB0byBwcm9tb3RlIHRoZSB3b3JrIG9mIHRoZSBmb3VuZGF0aW9uLiAKS3JhZnQsIHdobyBsaXZlcyBpbiBhIGx1eHVyeSByZW50YWwgYXQgVGhlIEJyZWFrZXJzIHJlc29ydCwgaXMgbm90IHRoZSBvbmx5IGxvYWRlZCBjbGllbnQgb2YgdGhlIHNwYS4KSGFja25leSBzYWlkIHBvbGljZSBwbGFuIHRvIGNoZWNrIG5ldyBhcmVhcyBhcyBldmlkZW5jZSBhbmQgdGlwcyBwcm92aWRlIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gYWJvdXQgd2hlcmUgTG9uemllJ3MgYm9keSBtaWdodCBiZS4KU2FtZSB3YXkgTWFyZ290IFJvYmJpZSB3YXMgYWJsZSB0byBnZXQgQmlyZHMgb2YgUHJleSBnb2luZy4gU2hlIGhhcyB0aGUgcG93ZXIgdG8gZG8gc28uIApPZiBvbmUgdGhpbmcgd2UgY2FuIGJlIHN1cmUgICBQaGlsIEl2ZXkgbWlnaHQganVzdCBiZSB0aGUgZ3JlYXRlc3QgUG9rZXIgcGxheWVyIG9mIGFsbCB0aW1lLiAxMCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgYnJhY2VsZXRzIGZhc3RlciB0aGFuIGFueW9uZSBlbHNlICAgZXZlbiBQaGlsIEhlbGxtdXRoIHRvb2sgbG9uZ2VyICAgYW5kIGhpcyAxMCBnb2xkIGJyYWNlbGV0cyBoYXZlIGNvbWUgaW4gbm8gbGVzcyB0aGFuIDkgZGlmZmVyZW50IGRpc2NpcGxpbmVzLiAKRW1wbG95bWVudCBpbmNyZWFzZWQgYnkgNTUsOTAwIGluIEZlYnJ1YXJ5LCBhbGwgZnVsbCB0aW1lIGpvYnMsIFN0YXRpc3RpY3MgQ2FuYWRhIHNhaWQgRnJpZGF5IGluIE90dGF3YSwgYnVpbGRpbmcgb24gYSA2Niw4MDAgZ2FpbiBpbiBKYW51YXJ5LiBUaGUgdHdvIG1vbnRoIGdhaW4gaXMgdGhlIGJlc3Qgc3RhcnQgdG8gYSB5ZWFyIHNpbmNlIDE5ODEuIENhbmFkYSBlY29ub215IGhhcyBhZGRlZCAyOTAsMDAwIGpvYnMgc2luY2UgQXVndXN0LCB0aGUgbGFyZ2VzdCBzaXggbW9udGggaW5jcmVhc2Ugc2luY2UgdGhlIGVhcmx5IDIwMDBzLi4gClRyZXZvciByZWNlbnRseSBnb3QgYW4gdW5kZXJncmFkdWF0ZSBkZWdyZWUgaW4gbWFya2V0aW5nIGFuZCB0b29rIG9uIHRoZSB0YXNrIG9mIGNyZWF0aW5nIHRoZSB3ZWJzaXRlLCB3aGljaCBoYXMgdHVybmVkIGludG8gYSBjYW1wYWlnbiwgQnJpbmcgWW91ciBCb3R0bGVzIEJhY2ssIHRvIGhlbHAgYnJpbmcgcmV0YWlsZXJzLCBjb25zdW1lcnMgYW5kIHRoZSBjb21tdW5pdHkgdG9nZXRoZXIgdG8gcmVjeWNsZSBib3R0bGVzLiAKRmFjaW5nIFNvdXRoIEZsb3JpZGE6IFVucmVzdCBpbiBWZW5lenVlbGFWZW5lenVlbGFuIGFjdGl2aXN0IGFuZCBqb3VybmFsaXN0IEhlbGVuYSBQb2xlbyBqb2lucyBDQlM0IEppbSBEZUZlZGUgdG8gdGFsayBhYm91dCB0aGUgdW5yZXN0IGluIFZlbmV6dWVsYSBvbiBGYWNpbmcgU291dGggRmxvcmlkYSB3aXRoIEppbSBEZUZlZGUuIFJlcC4gUmVwLiAKTWFsaGV1cmV1c2VtZW50LCB0b3VzIGNlcyBwcm9qZXRzIHNvbnQgYWJvcmRzIGRlIG1hbmlyZSBhdXRvbm9tZSwgaWwgbid5IGEgcGFzIGQnYXBwcm9jaGUgZ2xvYmFsZSBuaSBkZSByZmxleGlvbiBkJ2Vuc2VtYmxlLi4gCmFuZCBkZXByZXNzaW9uIGluIG9uY29sb2dpY2FsIHBhbGxpYXRpdmUgY2FyZSBwYXRpZW50cwpTb21lIGFyZSAidHJhZmZpYyIgY2FzZXMgb3IgT1dJIG9yIGRydWdzLiBUaGVyZSBhcmUgY3JpdGVyaWEgKHNlZSB0aGUgc3RhdHV0ZXMgIHlvdSBjYW4gZ29vZ2xlIHRoZW0pIGZvciB0aGUgZXhwdW5nZW1lbnRzIGluY2x1ZGluZyBub3QgaGF2aW5nIGNvbW1pdHRlZCBhbnkgbmV3IGNyaW1lcyBmb3IgWCB5ZWFycyAoYW5kIGEgY2xlYW4gZHJpdmVycyBsaWNlbnNlKSAuIApJIHRoaW5rIGl0IGJlY2F1c2UgdGhlIHJvbGUgb2YgbW90aGVyIGlzIHByZXR0eSBlc3RlZW1lZCBpbiBhIGxvdCBvZiBzb2NpZXRpZXMgc28gdGhlIGluc3VsdCBvZiB0aGVpciBtb3RoZXIgaXMgbGlrZSB0aGUgd29yc3QgaW5zdWx0LiBJbiBWaWV0bmFtZXNlLCAgbSAoaW4gdGhlIG5vcnRoKSBhbmQgIG0gKGluIHRoZSBzb3V0aCkgbWVhbnMgImZ1Y2sgeW91ciBtb20iIGlzIG9uZSBvZiBpZiBub3QgdGhlIG1vc3QgaW5zdWx0aW5nIHRoaW5nIHlvdSBjYW4gc2F5IHRvIHNvbWVvbmUuIApJIGRvbmUuIEkgaGFkIGVub3VnaC4gWW91IGNhbiBqdXN0IHNwYW0gL3IvSGFpbENvcnBvcmF0ZSBhbmQgZXhwZWN0IGFuIHVwdm90ZS4gWW91IGNhbiBqdXN0IGJlIGxpa2UgImR1ZGUsIHlvdSBwbGF5aW5nIGEgZ2FtZT8iIGFuZCBwb3N0IC9yL0hhaWxDb3Jwb3JhdGUuIFlvdSBqdXN0IGNhbiBkb3VidCB5b3UgZXZlbiB3b3JrIGZvciBjb3Jwb3JhdGUgZ2l2ZW4gaG93IGFnYWluc3QgdGhlbSB5b3UgYXJlLiBZb3UgbGl2ZSBpbiBhIGNhcmRib2FyZCBib3gsIHR5cGluZyBvbiB5b3VyIENyYXBCb29rIFBybywgZmVlbGluZyBnb29kIGFib3V0IHlvdXJzZWxmIGJlY2F1c2UgeW91IHRoaW5rIHlvdSBqdXN0ICJjYWxsZWQgc29tZW9uZSBlbHNlIG91dCIgZm9yIGJlaW5nIGEgY29ycG9yYXRlIHNoaWxsLgpXb29kIGNhbiBoZWxwIEZpcmUgdG8gYnVybi4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uU291cmNlOiBOZXdjYXN0bGUgSGVyYWxkIEhVTlRFUiBwb2tlciBtYWNoaW5lcyB0dXJuZWQgb3ZlciAkNC41YmlsbGlvbiBpbiB0aGUgeWVhciB0byBNYXJjaCwgd2l0aCB0aGUgbW9zdCBwcm9maXRhYmxlIG1hY2hpbmVzIGZvdW5kIGluIHNvbWUgb2YgdGhlIHJlZ2lvbidzIG1vc3QgZGlzYWR2YW50YWdlZCBzdWJ1cmJzLiBFeGNsdXNpdmUgZmlndXJlcyBvYnRhaW5lZCBieSB0aGUgTmV3Y2FzdGxlIEhlcmFsZCByZXZlYWwgdGhhdCBwdWJzIGFuZCBjbHVicyBwb2NrZXRlZCAkNDA3IG1pbGxpb24gbmV0IHByb2ZpdCBpbiB0aGUgeWVhciB0byBNYXJjaCBmcm9tIDEwLDA0NiBwb2tlciBtYWNoaW5lcyAgIGEganVtcCBpbiBwcm9maXQgb2YgYWJvdXQgMTAgcGVyIGNlbnQgc2luY2UgMjAxMC4gT3ZlcmFsbCwgcG9raWUgdHVybm92ZXIgZm9yIGNsdWJzIGFuZCBwdWJzIGp1bXBlZCAkNTAwIG1pbGxpb24gaW4gdGhlIHBhc3QgdGhyZWUgeWVhcnMuIApDaGFuZ2UgaW4gdGhlIHNlYXNvbiBvciBhIGdlb2dyYXBoaWNhbCBzaGlmdCBtZWFucyB0aGF0IHlvdSBuZWVkIHRvIGNoYW5nZSB5b3VyIHNoYW1wb28gYW5kIGNvbmRpdGlvbmVycy4gCkkndmUgd2F0Y2hlZCB0aGVtIHBsYXkgYWdhaW5zdCBlYWNoIG90aGVyIGFuZCBJJ3ZlIGNvYWNoZWQgYWdhaW5zdCBoaW0gc2luY2UgaGUgd2FzIHRoaXMgaGlnaC4uIApNYXAgb3V0IHlvdXIgY29sbGFnZS4gClNoZSBjb25mZXNzZWQgdG8gdXNpbmcgdGhlIHNvY2tzIGFmdGVyIGdvaW5nIHRvIHRoZSBiYXRocm9vbS4gCldpbGxpYW0gRGVBbmdlbCBpcyB0aGUgbGF0ZXN0IEhlcm8gQW1vbmcgVXMgaG9ub3JlZCBhdCBhIHJlY2VudCBGbG9yaWRhIFBhbnRoZXJzIGdhbWUuLiAKRW5vdWdoIGFib3V0IHRoZSBTb3ggc25vb2tlcmluZyB0aGUgRG9kZ2Vycy4gCkFueXdheXMsIEkgZG9uIGtub3cgaWYgdGhlIGluZm9ybWF0aW9uIEkgcHJvdmlkZWQgd2lsbCBiZSBzdWZmaWNpZW50IGluIGFuc3dlcmluZyBteSBxdWVzdGlvbiwgYnV0IGFueSBhbnN3ZXIgdGhhdCBwcm92aWRlcyBhIGdlbmVyYWwgaWRlYSB3aWxsIGJlIGdyZWF0bHkgYXBwcmVjaWF0ZWQhIERhbmtlIHNjaG4gOilZb3UgcmVhbGx5IGRvbiBuZWVkIHRvIHdvcnJ5IGFib3V0IHN0ZXJlb3R5cGVzLiAKSmVzdXMgY2hyaXN0IHlvdSBoYXZlIG5vIGlkZWEgd2hhdCB5b3UgYXJlIHRhbGtpbmcgYWJvdXQuIE1hbnkgcGVvcGxlIGhhdmUgYmVlbiBwYXJhbHl6ZWQgb3Igc28gaW5qdXJlZCB0aGV5IGNvdWxkIG5ldmVyIHdyZXN0bGUgYWdhaW4uIEhhdmUgeW91IG5vdCBzZWVuIG1pYyBmb2xleSBnZXQgdGhyb3duIG9mZiB0aGUgY2FnZSBhdCBoZWxsIGluIGEgY2VsbD8KS3lsZSBTaWxlciwgYSBzb2Npb2xvZ3kgZG9jdG9yYWwgc3R1ZGVudCBhdCBDb3JuZWxsIFVuaXZlcnNpdHkgd2hvIHN0dWRpZWQgMjcgbWlsbGlvbiBwb2tlciBoYW5kcyBvbmxpbmUsIHRvbGQgTGl2ZVNjaWVuY2U6ICJHYW1ibGVycyBoYXZlIHRvIGJlIGhvbmVzdCB3aXRoIHRoZW1zZWx2ZXMgYW5kIHJlYWxpemUgd2hlbiB0byB3YWxrIGF3YXkgYW5kIHdoZW4gYSBiZXQgaXMgcHJvZml0YWJsZSAgIGV2ZW4gdW5kZXIgY29uZGl0aW9ucyBvZiB1bmNlcnRhaW50eS4iCkFic2VudCBkZXMgQmFsa2FucywgaWwgYSBwZXV0IHRyZSB0IGNvbnNlcnYgYXUgc2VpbiBkdSBteXRoZSBlbiByYWlzb24gZGUgc29uIGFzc29jaWF0aW9uIHN5bWJvbGlxdWUgYXZlYyBzb24gY29tcGFnbm9uIHZvbGF0aWwsIGxlIHBobml4LiAKVGhlIExpbmVzVGhlIGxpbmVzIG9uIHRoZSBjb3VydCBhcmUgbWFya2VkIG91dCBzbyBpdCBpcyBlYXN5IHRvIHNlZSB3aGVyZSB0aGUgYm91bmRhcmllcyBvZiB0aGUgY291cnQgYXJlLiBPbiBncmFzcyBjb3VydHMsIHRoZSBsaW5lcyBhcmUgZG9uZSBpbiBjaGFsaywgc28gaWYgYSBiYWxsIGxhbmRzIHBsdW1iIG9uIGEgbGluZSwgY2hhbGsgZmxpZXMgdXAgYW5kIG1hcmtzIHRoZSBiYWxsLCByZWR1Y2luZyBkaXNwdXRlcyBvdmVyIGxpbmUgY2FsbHMuIApOaWNob3RpbmUgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMSBtb250aHMgYWdvCkluIHNvbWUgcGFydHMgb2YgRXVyb3BlLCBNaWRkbGUgRWFzdGVybiBmYXJtZXJzIGNvbXBsZXRlbHkgZGlzcGxhY2VkIGxvY2FsIHBvcHVsYXRpb25zLiBJbiBvdGhlciBwbGFjZXMsIGxvY2FsIHBvcHVsYXRpb25zIGNvbnRpbnVlZCBhcyBtYXJnaW5hbGl6ZWQgaHVudGVyIGdhdGhlcmVycyB1bnRpbCB0aGV5IHdlcmUgYWJzb3JiZWQgYnkgdGhlIGZhcm1lcnMuCkJ1dCBpZiBpdCBpcyBwdWJsaXNoZWQgYnkgdGhlIEpvdXJuYWwgc29kaXVtIHNhbHQgb2Ygc2FsaWN5bGljLiBBYm91dCB0d29mb2xkIHRoZXNlIGV2ZW50cyBhcmUgUG9zc28gdG9tYXIgYW5mZXByYW1vbmEgY29tIGNpdGFsb3ByYW0gYW5kIHRoZSBiZSB1c2VkIHRvIGRldGVjdC4KSXQncyBva2F5IHRvIHVzZSB0aGlzIHN0ZWFtIGFzIG9mdGVuIGFzIHlvdSBsaWtlLi4gCkJ1dCBJIGNhbiB0ZWxsIHlvdSB3aGF0IGl0IHdhcy4gSSBiZWVuIGZsaXBwaW5nIHRocm91Z2ggdGhlIGJvb2sgd2hpbGUgbGlzdGVuaW5nIHRvIG15IHZvaWNlbWFpbC4gCkJ1dCB3aGF0IHRvIGRvIHdpdGggdGhvc2UgYm9kaWVzIHRoYXQgc2xpcCB0aHJvdWdoIHRoZSBzZXggcG9saWNlIGF0IHRoZSBob3NwaXRhbD8gV2hhdCB0byBkbyB3aXRoIHRob3NlIHRoYXQgbWFuYWdlIHRvIGdyb3cgdXAgYW5kIGV4aXN0IHdpdGhvdXQgYmVpbmcgY2xlYXJseSBtYWxlIG9yIGZlbWFsZT8gUGVyaGFwcyB0aGUgYmVzdCB0aGluZyB0byBkbyBpcyBtYXJrIHRoZW0gYXMgcmFjaWFsbHkgb3RoZXI/CkkganVzdCBhYnNvbHV0ZWx5IHJlZnVzZSB0byBodXJ0IGhlciBvciBmb3IgaGVyIHRvIGZlZWwgdXNlZCAod2hpY2ggaXMgdHJ1ZSBvZiBhbnkgcG90ZW50aWFsIHBhcnRuZXJzLikgc28gaSBhbSBnb2luZyByZWVhYWwgc2xvdywgdHJ5aW5nIHRvIHNob3cgaGVyIGkgcmVhbGx5IGNhcmUgYWJvdXQgaGVyLCB0aGF0IGkgcmVhbGx5IGxpa2UgaGVyLCB3aGlsZSBhbHNvIG1ha2luZyBpdCBvYnZpb3VzIGkgZmluZCBoZXIgcGFpbmZ1bGx5IGF0dHJhY3RpdmUuLiAKSSB3b3VsZCBwcmVmZXIgdG8gb3JkZXIgb24gQW1hem9uLCBkdWUgdG8gUHJpbWUgYW5kIGEgbmljZSBjaHVuayBvZiBBbWF6b24gY3JlZGl0LiAKVGhpcyBpcyBtb3N0IG9mdGVuIGRvbmUgd2hlbiBwb2xpY2UgbmVlZCBtZWRpY2FsIGluZm9ybWF0aW9uIGluIHJlbGF0aW9uIHRvIHRoZSBpbnZlc3RpZ2F0aW9uIG9mIGEgY3JpbWUuIApJIHRvdGFsbHkgYWdyZWUuIEkgZmVlbCBsaWtlIHRoZSBwaGFybWFjZXV0aWNhbCBjb21wYW5pZXMgaGF2ZSBhIGhhbmQgaW4gYWxsIHRoZSBwcm9wYWdhbmRhIGJlaW5nIHB1c2hlZCBvbiBoZXJlLiBUaGV5IG1ha2UgYSBsb3Qgb2YgbW9uZXkgZnJvbSB2YWNjaW5lcyBhbmQgaWYgcGVvcGxlIHN0YXJ0IG9wdGluZyB0byBub3QgdmFjY2luYXRlIHRoYXQgd2lsbCBhZmZlY3QgdGhlaXIgcHJvZml0cy4gCkFueXdheSBhcyB5b3Ugd2lsbCBhbHJlYWR5IGtub3csIHRoYXQgZmlyc3QgZ2xvcmlvdXMsIHRlcnJpZnlpbmcgZXhwZXJpZW5jZSBvbiBhIG1vdG9yYmlrZSBpcyBhbG1vc3QgYXMgZ29vZCBhcyBzZXggYW5kIGlmIHlvdSBoYXZlIHRvIGVhdCBhIGNoZWVzZSBzYW5kd2ljaCB0byBnZXQgaXQgdGhlbiBmaW5lLiBHb29kYnllIHBva2VyIGFuZCBiZWVyLCBoZWxsbyB0aGUgb3BlbiByb2FkLi4gCkhhdmUgdHdvIHN5c3RlbXMgb2YganVzdGljZSEgYW5kIG90aGVyIGFkdm9jYXRlcyBvZiBjcmltaW5hbCBqdXN0aWNlIHJlZm9ybSB3aG8gd2VpZ2hlZCBpbiBvbiBNYW5hZm9ydCBzZW50ZW5jZSBzdHJlc3NlZCB0aGF0IHRoZXkgd2VyZSBub3QgY2FsbGluZyBmb3IgaGFyc2hlciBvdmVyYWxsIHB1bmlzaG1lbnQgICBzaW1wbHkgYSBqdXN0aWNlIHN5c3RlbSB0aGF0IHdhcyBhIGxpdHRsZSBtb3JlIGp1c3QuLiAKLi4gCkRva29uY2EgbmVtdXN0ZSBzIGRvIGtuaW5pY2UsIGludGVybmV0IHVtb3VqZSB2c2t1bSBtaWVzdCBrZGVrb3ZlayBuYSBzdmV0ZS4gClBldGVyIHdhcyBhIHdlbGNvbWluZyBwZXJzb24sIGFsd2F5cyByZWFkeSB0byBoZWxwIG90aGVycy4gSGUgZW5qb3llZCBwbGF5aW5nIHBva2VyIHdpdGggaGlzIGZyaWVuZHMgYW5kIGtlcHQgYSBzcGVjaWFsIHBsYWNlIGluIGhpcyBoZWFydCBmb3IgIlN1bmRheSBTcGFnaGV0dGkgTHVuY2hlcyIuIFBldGVyJ3MgZ3JlYXRlc3QgbG92ZSB3YXMgZm9yIGhpcyBmYW1pbHksIGVzcGVjaWFsbHkgaGlzIGdyYW5kY2hpbGRyZW4uIEZ1bmVyYWwgU2VydmljZSBpbiB0aGUgUi4gSi4gQmFybmFyZCBDaGFwZWwsIEpBQ0tTT04gQU5EIEJBUk5BUkQgRlVORVJBTCBIT01FICwgMjMzIExhcmNoIFN0LiwgU3VkYnVyeSwgRnJpZGF5LCBEZWNlbWJlciAyMHRoLCAyMDEzIGF0IDExOjMwYW0uIApBIHNlY29uZCBoaWdoIHNjaG9vbCBzdHVkZW50IHRvb2sgdGhlIHN0YW5kIGluIHRoZSBzZXh1YWwgYXNzYXVsdCB0cmlhbCBvZiBmb3JtZXIgS2luZ3N2aWxsZSBmaXJlIGNoaWVmIEJvYiBLaXNzbmVyLCB0ZXN0aWZ5aW5nIE1vbmRheSB0aGF0IGhlLCB0b28sIHdhcyBpbnZpdGVkIHRvIHRoZSBjaGllZiBob21lIGZvciBtYXNzYWdlcyBhbmQgaG90IHR1YmJpbmcuIGhlIGp1c3QgdGhhdCB0eXBlIG9mIHBlcnNvbiBoZSB0b3VjaHksIHdhcyB0aGUgcmVzcG9uc2UsIGhlIHNhaWQuCkkgd29uIGdpdmUgSm9zaCBhbnkgY3JlZGl0IE1hZ2dpZSBkaWQgZXZlcnl0aGluZyBhcm91bmQgdGhlIGhvdXNlLiAKQmxvZyBwYW50dHVhbGR4YWtvCkFURiBoYWQgc29tZSBiYWQgcHJlc3Mgb2YgdGhlaXIgb3duIGFuZCBkZWNpZGVkIHRvIHN0b3JtIHRoZSBjb21wb3VuZCB0byByZWNvdmVyIHdoYXQgdGhleSBzYWlkIHdlcmUgaWxsZWdhbCB3ZWFwb25zIChtYWNoaW5lcnkgdG8gY29udmVydCB0byBhdXRvbWF0aWMgd2VhcG9ucykuIFRoZXkgd2VyZSByYXR0ZWQgb3V0IGJ5IGEgVVBTIGRyaXZlciB3aG8gZmVsdCB3ZWlyZCB0aGF0IHRoZXkgd2VyZSBtYWtpbmcgY2FzaCBwYXltZW50cyBmb3IgbGVnYWxseSBwdXJjaGFzZWQgd2VhcG9ucyBhcnJpdmluZyBvbiBoaXMgdHJ1Y2suIAoiU28geW91IGFyZSB0byBoYXZlIFRIQVQsIHRvbywiIHNoZSBzYWlkIGluIGEgY2hva2VkIHZvaWNlLiBBbmQgd2l0aG91dCBhbm90aGVyIHdvcmQgc2hlIGhhZCB0dXJuZWQgYW5kIGdvbmUgYWNyb3NzIHRoZSBmaWVsZHMgaG9tZXdhcmQuIEFubmUgd2FzIGRlZXBseSBodXJ0OyBmb3IgdGhlIG1vbWVudCBzaGUgZmVsdCBhcyBpZiBzaGUgY291bGQgbmV2ZXIgbGlrZSBMZXNsaWUgYWdhaW4uIApVbmRlcnN0YW5kIHRoZSBncmF2aXR5IG9mIGJlaW5nIHRoZSBmaXJzdCBwZXJzb24gdG8gaG9sZCB0aGlzIGNyaXRpY2FsIHJvbGUsIEthdHogc2FpZC4KUGxheWVycyB3aWxsIGhhdmUgYSBjaGFuY2UgdG8gcGxheSBhZ2FpbnN0IEdhbHdheSB0d28gZ3JlYXRlc3QgcG9rZXIgcGxheWVycyBhcyBKdWRlIEFpbnN3b3J0aCBhbmQgRmludGFuIEdhdmluIHdpbGwgYmUgdGFraW5nIHBhcnQuIEFpbnN3b3J0aCBpcyBhIGZvcm1lciB3aW5uZXIgb2YgdGhlIElyaXNoIFBva2VyIENoYW1waW9uc2hpcCBhbmQgaGFzIHdvbiBtb3JlIHRoYW4gaW4gdG91cm5hbWVudHMuIApXaGF0IHRoZSBoZWxsISBOb3Qgb25seSBkb2VzIHRoYXQgbWVhbiBUb20gaGFzIGEgdmVyeSBnb29kIGhhbmQgYXBwcm94aW1hdGVseSAxMDAlIG9mIHRoZSB0aW1lLCB3ZSBjYW4gZXZlbiBkZXRlcm1pbmUgd2hhdCBoZSBwcm9iYWJseSBoYXMhISBTaW5jZSBldmVyeWJvZHkgaXMgc3VzcGljaW91cyB0aGF0IE5lZWxpeCBoYXMgYSBmbHVzaCwgVG9tIGNhbiBwcm9iYWJseSBiZWF0IGEgZmx1c2guXS4gClNweSBQbGF5aW5nIENhcmRzIENoZWF0aW5nIERldmljZSBEZWxoaSBJbmRpYSBjYW4gZW5zdXJlIHlvdXIgd2lubmluZyBpbiBjYXNpbm9zIG9yIGdhbWJsaW5nIGJ5IGl0cyBsYXRlc3QgdGVjaG5pY2FsbHkgZGVzaWduZWQgcXVhbGl0aWVzLiBKdXN0IGJyaW5nIHRoZXNlIGRldmljZXMgYW5kIHBsYXkgaW4gdmVyeSByZWxheCB3YXkuIFlvdSB3aWxsLgpXYXNuIGFib3V0IE1HTSwgTWFuZGFsYXkgQmF5IG9yIGEgc3BlY2lmaWMgY2FzaW5vIG9yIHZlbnVlLCBBYXJvbiBSb3VzZSwgdGhlIGFnZW50IGluIGNoYXJnZSBvZiB0aGUgRkJJIExhcyBWZWdhcyBvZmZpY2UsIHRvbGQgVGhlIEFzc29jaWF0ZWQgUHJlc3MuIApQb2xpY2UgSWRlbnRpZnkgVmljdGltIE9mIERlYWRseSBEcml2ZSBCeSBTaG9vdGluZyBJbiBNaWFtaSBHYXJkZW5zUG9saWNlIGluIE1pYW1pIEdhcmRlbnMgYXJlIGxvb2tpbmcgZm9yIGhlbHAgaW4gZmluZGluZyB0aGUgcGVyc29uIGJlaGluZCBhIGRlYWRseSBkcml2ZSBieSBzaG9vdGluZy4KQSBmaW5hbCBhdHRlbXB0IGF0IGEgbm9ybWFsIGNvbnZlcnNhdGlvbiB3YXMgbWFkZS4gSSBnYXRoZXJlZCBteXNlbGYgZW5vdWdoIHRvIGFzIGlmIEkgY291bGQganVzdCBzcGVsbCB0aGUgd29yZC4gVGhpcyBjYWxsIHNob3VsZCBoYXZlIHRha2VuIGFib3V0IDEwIG1pbnV0ZXMgYXQgbW9zdC4gSXQgd2FzIG5lYXJseSA0NSBtaW51dGVzIGZyb20gZGlhbCB0byBoYW5nIHVwLiBJIHRoaW5rIGFub3RoZXIgZnVsbCBob3VyIHdlbnQgYnkgYmVmb3JlIG15IGZyaWVuZCBhbmQgSSBjb3VsZCBldmVuIGxvb2sgYXQgZWFjaCBvdGhlciB3aXRob3V0IHN0YXJ0aW5nIHVwIGFnYWluLgpBIGxpc3Qgc3RhcnMgZnJvbSBMZW9uYXJkbyBEaUNhcHJpbyB0byBCZW4gQWZmbGVjayB3YW50ZWQgaW4gb24gdGhlIGFjdGlvbi4gQW5kIHRoZW4sIGluIGEgZmx1cnJ5IG9mIHNjYW5kYWwgYW5kIHJhY2tldGVlcmluZyBjaGFyZ2VzLCBpdCBhbGwgY2FtZSBjcmFzaGluZyBkb3duLgpDZWxhIHJhZnJhaWNoaXIgbGUgY3VsIGRlIHRvdXMgc2VzIGV4Y2l0cyBkZSBzZXhlIHBhciB0cm9wIGluZHRlcm1pbiBldCBwZXJzb25uZSBuZSBzJ2VuIG9mZnVzcXVlcmEgISBJbCBzZXJhaXQgc291aGFpdGUgcXUnZWxsZSBzZSBjb25jZW50cmEgc3VyIGwnYXZhbnVlIGplYW4gTWRlY2luLCBsYSBwbGFjZSBNYXNzbmEgZXQgbGEgY2xicmUgcHJvbWVuYWRlLlByb2NzIERTSywgYWZmYWlyZSBkdSBDYXJsdG9uLCBjJ2VzdCBsYSAiZGJhbmRhbGUiICFBcHJzIHF1ZSBsZSBwcnNpZGVudCBldCBsZSBwcm9jdXJldXIgYWllbnQgInJlY2FkcnMiIGxlcyBkYmF0cyBhdXRvdXIgZHUgYnV0IGluaXRpYWwgZHUgcHJvY3MsIGxlIHByb3hudGlzbWUgYWdncmF2IChkb250IGxhIGRmaW5pdGlvbiBleGFjdGUgbSdjaGFwcGUsIGplIGxlIGNvbmZlc3NlIGVuIHRvdXRlIGh1bWlsaXQuKSBldCBub24gcGFzIGxlIHByb2NzIGRlIGwnYWR1bHRyZSAoc29kb21pdGlxdWUgZW4gcGFydGljdWxpcmVyKSBjZXJ0YWluZXMgInBhcnRpZXMiIG9udCBjb21wcmlzIHF1J2VsbGVzIHJpc3F1YWllbnQgZGVzIGRvbW1hZ2VzIGV0IGludHJ0cyBlbiB2ZXJ0dSBkZXMgcG9zc2libGUgcmV0b3VyIGRlIGJ0b24gbGlzICBsYSBuYXR1cmUgZGUgbGEgcHJvY2R1cmUgYWNjdXNhdG9pcmUgcXVpIHNpZWQgIGxhIG1hdGlyZSBjaXZpbGUuIApBZHZhbnRhZ2VzIG9mIE9ubGluZSBQb2tlciBTaXRlcwpJIGRvbiB0aGluayB0aGVyZSBpcyBvbmUgc2luZ2xlIGV4cGVyaWVuY2UsIGJ1dCBldmVyeSB0aW1lIEkgcmV0dXJuIHRvIFNpbmdhcG9yZSBJIGZlZWwgYXMgdGhvdWdoIEkgYW0gY29taW5nIGJhY2sgdG8gbXkgc2Vjb25kIGhvbWUgb25seSB0aGlzIGhvbWUgaXMgdHJvcGljYWwgYW5kIGh1bWlkLCBub3Qgd2V0IGFuZCBtaXNlcmFibGUgbGlrZSBMb25kb24hIEluIHRlcm1zIG9mIHB1cmUgb25lIG9mZiBleHBlcmllbmNlcywgdmlzaXRpbmcgU2lnaXJpeWEgaW4gU3JpIExhbmthIHdhcyBhd2Vzb21lOyBDYXBwYWRvY2lhIGluIFR1cmtleSB3YXMgYnJpbGxpYW50OyB0aGUgdGVtcGxlcyBvZiBCYWdhbiBpbiBNeWFubWFyIHdlcmUgbWVzbWVyaXNpbmc7IHRoZSBSb21hbiBydWlucyBpbiBJdGFseSB3ZXJlIGZhc2NpbmF0aW5nOyBhbmQgdGhlIEZ1c2hpbWkgSW5hcmkgU2hyaW5lIGluIEt5b3RvLCBKYXBhbixyYW5rcyB1cCB0aGVyZSwgdG9vLiBZb3Uga25vdyBzb21ldGltZXMgeW91IGp1c3Qgc29tZXRoaW5nPyBXZWxsLCBJIEZ1c2hpbWkgSW5hcmksIGFuZCBzcGVudCBhIGxvdCBvZiB0aW1lIHRoZXJlIHBvbmRlcmluZyBsaWZlIHdoaWxlIHRyYWlwc2luZyB0aHJvdWdoIHRoZSB0b3JpaSBnYXRlcy4gClRoZSBhbmltYWxzIHRoYXQgaGFkIG5vdCBydW4gYmVmb3JlIG1vdmluZyBpbiB3aXRoIHRoZSBtZWFuIG1pY2Ugc2hvd2VkIG11Y2ggbGVzcyBuZXVyb25hbCBhY3Rpdml0eSBpbiB0aGVzZSBwb3J0aW9ucyBvZiB0aGUgYnJhaW4uCiJXZWxsLCB5b3UgZGlkbid0IHNsYXAgaGltIG9yIHNlZW0gYSBiaXQgY3Jvc3MsIiByZXRvcnRlZCBEYXZ5LiAiSSdsbCB0ZWxsIGhlciBUSEFULCB0b28sIGlmIHlvdSBkb24ndCBjb21lLiBXZSdsbCB0YWtlIHRoZSBzaG9ydCBjdXQgdXAgdGhpcyBmaWVsZC4iCkkgZm9yZXZlciBpbiBoaXMgZGVidCBhbmQgYWxsIGhlIGRpZCB3YXMgd2F2ZSBhbmQgYm93IGFzIEkgY2FsbGVkIG11bHRpcGxlIHRoYW5rcyBiZWhpbmQgaGltLiBObyB3b3JkcyB3ZXJlIGV4Y2hhbmdlZCBiYWNrIHRvIG1lIHRoZSB3aG9sZSB0aW1lICAgaGUganVzdCBrbmV3IHdoYXQgdG8gZG8uCktpdGNoZW5zIHdpbGwgY29tZSB3aXRoIGEgS29obGVyIHN0YWlubGVzcyBzdGVlbCB1bmRlciBtb3VudCBzaW5nbGUgc2luayBhbmQgS2FsbGlzdGEgc2luZ2xlIGNvbnRyb2wgcHVsbCBkb3duIGZhdWNldCwgYW5kIHJlY2Vzc2VkIHBvdCBsaWdodHMgYW5kIExFRCB1bmRlciBjYWJpbmV0IGFjY2VudCBzdHJpcCBsaWdodGluZy4gVGhlIEJpbm92YSBjYWJpbmV0cnkgaGFzIHNvZnQgY2xvc2UgaGFyZHdhcmUsIHdpdGggY29udmVuaWVudCBhZGRpdGlvbnMsIHN1Y2ggYXMgY3V0bGVyeSBvcmdhbml6ZXJzLCBub24gc2xpcCBsaW5lcnMgYW5kIGFuIHVuZGVyIHNpbmsgcmVjeWNsaW5nIGNlbnRyZS4KQXMgSSBzdG9vZCB1cCBJIGZlbHQgdGhlIGdyb3VuZCB1bmRlcm5lYXRoIG1lIHNxdWlybS4gSSBoYWQgc3RlcHBlZCBvbiBhIHNuYWtlLi4gCkFsc28gYXMgYW4gYXNpZGUsIGlmIHlvdSBob25lc3RseSB0aGluayBDcmFja2Rvd24gMyBsb29rcyBsaWtlIGEgMzYwIGdhbWUsIHlvdSBlaXRoZXIgaGF2ZW4gcGxheWVkIGl0IG9yIGhhdmUgYSB0ZXJyaWJsZSBtZW1vcnkuLiAKSSBsaWtlIHRvIHRoaW5rIHNoZSBnb3QgaXQgZnJvbSBtZS4gCk1haXMgY2hhY3VuIHNhaXQgY29tbWVudCBwcm9jZGVyIGRlcHVpcyBsYSBudWl0IGRlcyB0ZW1wcy4gCklmIHlvdSB3YW50IHRvIHJhaXNlIHRvICQ0IG9yICQ1LCB5b3UgbXVzdCBzYXkgc28gYmVmb3JlIHlvdXIgY2hpcCBoaXRzIHRoZSBmZWx0LiBXaGF0ZXZlciB5b3VyIGFjdGlvbiwgdGhlIGRlYWxlciB3aWxsIG1ha2UgYW55IHJlcXVpcmVkIGNoYW5nZSBhdCB0aGUgZW5kIG9mIHRoZSBiZXR0aW5nIHJvdW5kLiBJZiB0aGlzIGhhcHBlbnMgd2hlbiBhbGwgdGhlIGNhcmRzIGFyZSBvdXQgYW5kIHlvdSBnZXQgaW4gYSByYWlzaW5nIHdhciB3aXRoIHNvbWVvbmUsIGRvbid0IHN0b3AhIFJhaXNlIHVudGlsIG9uZSBvZiB5b3UgcnVucyBvdXQgb2YgY2hpcHMuIApHaXZlbiB0aGF0IHRyYWRpdGlvbnMgaGFzIGFsd2F5cyBjaGFuZ2VkIHRvIHN1aXQgdGhlIGN1bHR1cmUgb2YgdGhlIHRpbWUgYW5kIHBsYWNlLCBJIHdvdWxkIHJlZnJhaW4gZnJvbSBldmVyIGNhbGxpbmcgYmVpbmcgc3RyYWlnaHQgInRyYWRpdGlvbmFsIi4gUGVvcGxlIG5lZWQgdG8gZ3JvdyBhbmQgY2hhbmdlIHdpdGggdGhlIHdvcmxkLiAKSW4gYSBzaW1wbGUgZHJhdyBvZiA1IGNhcmRzIGZyb20gYSBkZWNrIHRoZXJlIGFyZSA2MjQgd2F5cyB0byBnZXQgZm91ciBvZiBhIGtpbmQuIApUaGUgSUdUIFBFIFBsdXMgbXVsdGkgZ2FtZSB2aWRlbyBwb2tlciBpcyBhIGZpdmUgZ2FtZSB2aWRlbyBwb2tlci4gCkxhIG1vbnRhZ25lIG4nZXN0IHBhcyBwYXJnbmUgbm9uIHBsdXMgcGFyIGxlcyByZWRvdXggZXQgbGEgcGx1aWUsIHF1aSBmb3JtZW50IHVuZSBjcm90ZSBkZSBnbGFjZSBzdXIgbGVzIHBpc3Rlcy4gCkJ1Y2tleWUgUmQuIEF0IHRoZSBiYWNrIGdhdGUgb24gTWFyaWNvcGEgU3QuIApXaHkgZWxzZSB3b3VsZCBoZSBkbyB0aGlzPyAiSGUga2VwdCBwdXR0aW5nIGhpcyBhcm0gYXJvdW5kIG1lIGFuZCBteSBodXNiYW5kIGtlcHQgdGVsbGluZyBoaW0gaGUgc2hvdWxkIHB1dCBoaXMgYXJtIGFyb3VuZCBoaW0gaW5zdGVhZC4iClNvIHRoaXMgd2FzIGFsd2F5cyB0aGUgcGxhbiwgcGxvdHRlZCB0aHJlZSBtb3ZlcyBhaGVhZCBieSB0aGUgY2xldmVyIEFtZXJpY2FuIHByZXNpZGVudCwgd2hvIHdhcyBvbmx5IHByZXRlbmRpbmcgdG8gYmUgaW5kZWNpc2l2ZSwgcXVpeG90aWMgYW5kIG91dCBvZiBoaXMgZGVwdGguIApJIHJlY29tbWVuZGluZyBzdGFydGluZyB3aXRoIGEgYmFzZSBvZiBhIG1hcnRpYWwgY2xhc3MsIGxldmVsaW5nIHRvIDMgb3IgNSBkZXBlbmRpbmcgb24gd2hhdCBvbmUgeW91IHBpY2shCklmIHlvdSBhc2sgdGhlIHBlb3BsZSBpbiB0aGUgbG9iYnkgb2YgS2F0YXRoYW5pIHRoZXkgd2lsbCBnaXZlIHlvdSBhIGJ1Z2d5IHJpZGUgb3ZlciB0aGVyZS4gCllvdSBrbm93IHRob3NlIHN0cmFuZHMgdGhhdCBzdGljayBvdXQgb2YgdGhlIGJhbGwgPyBUaGUgbW9yZSB0aGVyZSBhcmUsIHRoZSBtb3JlIHRoZSBiYWxsIHdpbGwgYmUgYWZmZWN0ZWQgYnkgc3Bpbi4gCkpvbmF0aGFuIEdyYXksICQxLjU4IGJpbGxpb24sIFBlbm4sIFdoYXJ0b24uIApUaGUgUFBQJ3MgbmV3bHkgZGlzY292ZXJlZCBhZGRpY3Rpb24gdG8gdGhpcyBtdXRpbGF0ZWQgQ29uc3RpdHV0aW9uIGlzIG5vdCB1bmV4cGVjdGVkLiBHaXZlbiB0aGUgcGVyc29uYWwgdHJpYWxzICh1bmRlc2VydmVkKSwgYW5kIHBvbGl0aWNhbCB0cmlidWxhdGlvbnMgKGRlc2VydmVkKSwgdGhhdCB0aGUgcHJlc2lkZW50IGhhcyBnb25lIHRocm91Z2gsIGhpcyBhZmZpbml0eSBmb3IgYSBzb3VwZWQgdXAgdmVyc2lvbiBvZiB0aGUgcHJlc2lkZW5jeSB3YXMgZW50aXJlbHkgcHJlZGljdGFibGUuIEEgbXV0aWxhdGVkIENvbnN0aXR1dGlvbiB0aGF0IHZhbGlkYXRlcyBhIGh5cGVyIHBvd2VyZnVsIHByZXNpZGVuY3kgaGFzIG1lc2hlZCBwZXJmZWN0bHkgd2l0aCB0aGUgZGVlcGx5IGluc2VjdXJlIG1vZGVsIG9mIGdvdmVybmFuY2UgYWRvcHRlZCBieSB0aGUgcHJlc2lkZW50LiAKV2UgYWN0dWFsbHkgZmlndXJlZCBvdXQgbWluZSBmcm9tIDIzYW5kTWUsIGFuZCBtZSBydW5uaW5nIHRoZSByYXcgZGF0YSB0aHJvdWdoIFByb21ldGhlYXNlLiBUaGVuLCB0aGUgZG9jdG9ycyBjb25maXJtZWQgaXQgKGZpbmRpbmcgYSBsYWIgYXJvdW5kIGhlcmUgY2FwYWJsZSBvZiBkb2luZyB0aGUgdGVzdHMgd2FzIGNvbXBsaWNhdGVkKS4gSSBoYWQgbXkgcGFyZW50cyBkbyB0aGUgc2FtZSB0aGluZywgbmVpdGhlciBvZiB0aGVtIHRlc3RlZCBwb3NpdGl2ZSBmb3IgaXQsIHRob3VnaCB3ZSBmb3VuZCBvdXQgbXkgbW9tIGhhcyBzb21lIGVuenltZSBkZWZpY2llbmN5IGFuZCBteSBkYWQgZ2F2ZSBteSBtaWRkbGUgc2lzdGVyIGx1cHVzLiAKTWFueSBjYXNpbm9zIGFsc28gcmVxdWlyZSBhIHBsYXllciB3aG8gc2VydmVzIGFzIGJhbmtlciB0byBoYXZlIGVub3VnaCBtb25leSB0byBjb3ZlciB0aGUgb3RoZXIgcGxheWVycycgYmV0cy4uIAooQSl0IGEgbW9yZSBwcmltYWwgbGV2ZWwsIGZpZ2h0ZXJzIGluIGEgd2FyIHpvbmUgbXVzdCB0aGluayBvZiB0aGVtc2VsdmVzIGFzIHByZWRhdG9ycyBmaXJzdCAgIG5vdCBiYWl0LiBUaGF0IGZyYW1lIG9mIG1pbmQgYWZmZWN0cyBub3Qgb25seSBob3cgYSBwZXJzb24gdGhpbmtzLCBidXQgd2hhdCBoZSBzZWVzIGFuZCBoZWFycywgZXNwZWNpYWxseSBpbiB0aGUgcHJlc2VuY2Ugb2YgaW1taW5lbnQgZGFuZ2VyLCBvciB0aGUgcGVyY2VwdGlvbiBvZiBhIHRocmVhdC4KUHVzaGVzIHNob3VsZCBiZSBtYWRlIGZvciBmYWlsIHNhZmUgbnVjbGVhciByZWFjdG9ycyB3aXRoIGF0dGFjaGVkIGJyZWVkZXIgcmVhY3RvcnMuIFdlIGNvdWxkIGhhdmUgYSBtaW5kIGJsb3dpbmcgYW1vdW50IG9mIGVuZXJneSBwcm9kdWN0aW9uIGFuZCBhIG1pbmltYWwgYW1vdW50IG9mIHdhc3RlLiAKVGhpcyBpcyBiZWNhdXNlIG9mIHRoZSBmYWN0IHRoYXQgbW9zdCBsaWdodCB3ZWlnaHQgcG9rZXIgY2hpcHMgYXJlIGNvbnN0cnVjdGVkIHdpdGggY2hlYXAgcGxhc3RpYy4gSGlnaGVyIHByaWNlZCBtYXRlcmlhbHMgc3VjaCBhcyBjbGF5IGNvbXBvc2l0ZSwgY2VyYW1pYywgYW5kIHdvb2QgYXJlIHVzZWQgdG8gY3JlYXRlIGNoaXBzIHRoYXQgYXJlIGhlYXZpZXIuIApBZGRpdGlvbiB0byB0aGUgYWR2YW5jZWQgZmlyc3QgYWlkIHN0dWZmIHRoZSBnaXZlIHlvdSBsb3RzIG9mIHNjZW5hcmlvIHRyYWluaW5nIHdoaWNoIHJlYWxseSBoZWxwcyB3aGVuIHlvdSBhcmUgaGVscGluZyBzb21lb25lIGluIDNELgpOYXR1cmUncyBQYXRoIGhvc3RzIGFuIGFubnVhbCBoZWFsdGggYW5kIHdlbGxuZXNzIHdlZWssIGZlYXR1cmluZyBmcmVlIG1hc3NhZ2VzLCB5b2dhIGNsYXNzZXMsIGhvbGlzdGljIG51dHJpdGlvbmlzdHMgYW5kIGJpb21ldHJpYyBzY3JlZW5pbmdzICAgYWRkaXRpb25hbGx5LCB0aGUgY29tcGFueSBvZmZlcnMgYSB3ZWxsbmVzcyBzdWJzaWR5IHdoaWNoIGNhbiBiZSB1c2VkIGZvciByZWxhdGVkIGZpdG5lc3MgYWN0aXZpdGllcyBhcyB3ZWxsIGFzIHRoZSBwdXJjaGFzZSBvZiBob21lIGZpdG5lc3MgZXF1aXBtZW50ClRoZSBzdGF0ZW1lbnQgY29tZXMgaW4gcmVzcG9uc2UgdG8gYW4gb3V0YnJlYWsgb2YgbmluZSBjYXNlcyBvZiBtZWFzbGVzIGluIFZhbmNvdXZlciB0aGF0IGJlZ2FuIGFmdGVyIGFuIHVudmFjY2luYXRlZCBDYW5hZGlhbiBjaGlsZCBjb250cmFjdGVkIHRoZSBkaXNlYXNlIG9uIGEgZmFtaWx5IHRyaXAgdG8gVmlldG5hbS4KVGhlIENoaWxkcmVuIEhvc3BpdGFsIGF0IFdlc3RtZWFkIGhhcyBhY2NlcHRlZCBtb3JlIHRoYW4gJDEyMCwwMDAgaW4gZG9uYXRpb25zIHNpbmNlIDIwMTMsIGZsb3dpbmcgZnJvbSBmaXZlIGFwcHJvdmVkIGFwcGxpY2F0aW9ucy4gCkJ1dCB0aGUgbGluZSBiZXR3ZWVuIHJlZ2lzdGVyaW5nIGFuIG9waW5pb24gb3IgZ292ZXJuaW5nIGJ5IHR3ZWV0IGhhcyBiZWRldmlsZWQgdGhlIFdoaXRlIEhvdXNlIGZyb20gdGhlIHN0YXJ0LCBldmVuIHdoZW4gZm9ybWVyIHByZXNzIHNlY3JldGFyeSBTZWFuIFNwaWNlciBkZWNsYXJlZCB0d2VldHMgY291bGQgYmUgb2ZmaWNpYWwgV2hpdGUgSG91c2Ugc3RhdGVtZW50cy4gRWFybGllciB0aGlzIHllYXIsIFRydW1wIGJsaW5kc2lkZWQgdGhlIERlZmVuc2UgRGVwYXJ0bWVudCB3aGVuIGhlIHR3ZWV0ZWQgb3V0IGEgdHJhbnNnZW5kZXIgYmFuIGZvciB0aGUgbWlsaXRhcnksIHByb21wdGluZyB0aGUgUGVudGFnb24gdG8gc2xvdyB3YWxrIHRoZSBwcm9ncmFtLgpBZnRlciB0aGV5IHdlcmUgbWFycmllZCwgQWxpY2UgYW5kIEZyYW5rIHNldHRsZWQgaW4gTGFrZSBDaXR5IGluIDE4NzUuIEZyYW5rIHdhcyBhIHBhc3Npb25hdGUgY2FyZCBwbGF5ZXIgYW5kIHNwZW50IGEgbG90IG9mIGhpcyBzcGFyZSB0aW1lIGluIG9uZSBvZiB0aGUgbWFueSBnYW1ibGluZyBoYWxscy4gCkhvbmVzdGx5LCBJIHRoaW5rIENvcm5lbGwgaXMgZGFtbWVkIGJ5IGl0cyBsb2NhdGlvbi4gQXMgYSBOWSBzY2hvb2wsIGl0IHdpbGwgaW5oZXJlbnRseSBhdHRyYWN0IHRoZSBraW5kIG9mIFdlc3RjaGVzdGVyL0xJIHJpY2gsIGVudGl0bGVkIGNvbnNlcnZhdGl2ZXMgdGhhdCB3aWxsIGNvbWUgaGVyZSBhbmQgY29tcGxhaW4uCldpdGgga2luZCByZWdhcmRzIGZyb20gdGhlIEIyIHlvdXIgR3Vlc3QgQW1iYXNzYWRvciBOaW5hIFNjaHJvZWRlclJlc3BvbnNlIGZyb20gQjJCb3V0aXF1ZUhvdGVsLCBEaXJlY3RvciBvZiBTYWxlcyBhdCBCMiBCb3V0aXF1ZSBIb3RlbCArIFNwYVJlc3BvbmRlZCBKYW4gMzAsIDIwMTlEZWFyIFNpZ2h0c2VlMTc1NDA0MDkxNjUgSSBhbSBzbyBnbGFkIHRvIGhlYXIgdGhhdCB5b3UgZW5qb3llZCB5b3VyIHN0YXkgd2l0aCB1cy4gSSB3aWxsIGJlIGRlbGlnaHRlZCB0byBmb3J3YXJkIHlvdXIgbG92ZWx5IHdvcmRzIHRvIG15IGVudGlyZSB0ZWFtLiAKSGFyZCB0byBrbm93IHdoYXQgaXMgZ29pbmcgYmVoaW5kIHlvdXIgYmFjaywgc2hlIHNheXMgaW4gaGluZHNpZ2h0LiBXYXMgd29ya2luZyB2ZXJ5IGhhcmQgdG8gaGF2ZSBhIHNvY2lhbCBnYW1lLiAKV2hhdD8gV2hlcmUgZGlkIHlvdSBnZXQgdGhhdCBmcm9tPyBUaGF0IGFic3VyZCBhbmQgaW5hY2N1cmF0ZS4gClRoZSB0cnV0aCBpcyB0aGUgRGVtcyBjb3VsZCBoYXZlIHVzZWQgcG9wdWxpc20gdG8gZ2FpbiBTaW5nbGUgUGF5ZXIgaGVhbHRoIGNhcmUgIHRoYXQgaXMsIGluc3VyYW5jZSBvdXRzaWRlIHRoZSBmb3IgcHJvZml0IG1lZGljaW5lIHdlIGhhdmUgbm93IHBhaWQgZm9yIGJ5IGV2ZXJ5b25lIHRocm91Z2ggaW5jb21lIHRheGVzLiAKVGhpcyBjYW4gaW5jbHVkZSB0cmFuc2xhdGlvbiByZXF1ZXN0cywgY2VsZWJyaXR5IG5ld3MsIG11c2ljIHZpZGVvcywgdGVjaCBuZXdzLCBldGMsIGVzcC4gCkluIHBhcnQgYmVjYXVzZSBDVywgSSBiZWxpZXZlIGlzIGluY2FwYWJsZSBvZiB0ZWxsaW5nIHRoZSB3aG9sZSB0cnV0aC4gCkhlIGhlYXJkIHRoYXQga25vY2sgb24gdGhlIGRvb3IgYW5kIHRoZXkgY2FtZSBpbiBhbmQgYXNrZWQgaWYgYW55b25lIHdhcyB0aGVyZSBhbmQgd2hlbiBubyBvbmUgYW5zd2VyZWQgdGhleSB3ZW50IHRvIGNoZWNrIG91ciByb29tLiAKIkFuZCBJIGd1ZXNzIEkgaGF2ZSBhIHZlcnkgZGlmZmVyZW50IG1hcmtldCBpbiB0aGUgU3RhdGVzIHRoYW4gYW55d2hlcmUgZWxzZSBpbiB0aGUgd29ybGQuIFRoZSByZXN0IG9mIHRoZSB3b3JsZCwgdGhhdCBzb25nJ3Mgbm90IHRoZSBoaWdobGlnaHQgb2YgdGhlIHNob3cuIApJIGhhZCBhIGZldyBvZiB0aGVpciB0aGVyYXBpc3RzIHdvcmsgbWFnaWMgb24gbWUgYWZ0ZXIgdmFyaW91cyBpbmp1cmllcyBvciBqdXN0IGJlaW5nIHNvcmUgZnJvbSBhIGRlc2sgam9iIChFbGxlbiwgQW15LCBEZXJlaywgQ3J5c3RhbCkuIApXZSB3YW5kZWxkZW4gdG90IGhldCBwYXZpbGpvZW4gdmFuIFVrcmEgKGRhdCBpcyBub2cgbmlldCBnZXJlbm92ZWVyZCwgemFnIGVyIHdlbCB6ZWVyIGJpanpvbmRlciB1aXQpLCBlbiBrZWVyZGVuIGRhbiB0ZXJ1Zy4gV2UgaGViYmVuIG9vayBlZW4gcGFhciBwYXZpbGpvZW5lbiB2YW4gZGljaHRlcmJpaiBiZWtla2VuLiBIZWxhYXMgemlqbiB3ZSBtYWFyIGVlbiBkaWsgdXVyIGluIGRlIFZWVCBnZXdlZXN0IGhldCB3YXMgemVrZXIgdmFuIGRlIGxldWtzdGUgdmVycmFzc2luZ2VuIHZhbiBNb3Nrb3Ugdm9vciBvbnMsIG1hYXIgd2UgaGViYmVuIHdlbCBnZW5vdGVuIHZhbiBlZW4gbGVra2VyIGlqc2plIS4gClRoZSBmaXJzdCBzdGVwIHRvIHJlY2VpdmluZyB0YXggY3JlZGl0cyB3aGVuIHlvdSBvcGVyYXRlIGEgMTNnIENsYXkgUG9rZXIgQ2hpcHMgYnVzaW5lc3MgaXMgdG8gZW5zdXJlIHRoYXQgeW91IG9ubHkgdXNlIGJ1aWxkaW5ncyBhbmQgbWF0ZXJpYWxzIHRvIGRldmVsb3AgeW91ciBidXNpbmVzcyB0aGF0IGFyZSBjb25zaWRlcmVkIHRvIGJlICJlbmVyZ3kgZWZmaWNpZW50Ii4gSWYgeW91IGluc3RhbGwgbGlnaHRzIHRvIHVzZSBpbiB5b3VyIG9mZmljZSB0aGF0IGFyZSBkZXNpZ25lZCB0byByZWR1Y2UgZW5lcmd5LCBpbXByb3ZlIHRoZSBidWlsZGluZyB0aGF0IHlvdSBoYXZlIHlvdXIgb2ZmaWNlIGluIGJ5IHVzaW5nIG1hdGVyaWFscyB0aGF0IGFyZSBlbmVyZ3kgZWZmaWNpZW50LCBhbmQgcHVyY2hhc2UgaXRlbXMgdGhhdCBhcmUgZGVzaWduYXRlZCB0byByZWR1Y2UgZW1pc3Npb25zLCB5b3UgY2FuIGFjaGlldmUgdGhpcyBwYXJ0aWN1bGFyIGNyZWRpdC4KRURJVDogRm9yIHBlb3BsZSBjb21tZW50aW5nIG9uIGJpcnRoIGNlcnRpZmljYXRlcywgdG8gY2xhcmlmeTogSSByZWZlcmVuY2luZyBwdWJsaWMgZGlzY2xvc3VyZS4gQXMgbWVudGlvbmVkIGJlbG93LCBhIGJpcnRoIGNlcnRpZmljYXRlIGlzIGEgbWF0dGVyIGZvciBhIGdvdmVybm1lbnQgb2ZmaWNlIHJlZ2lzdGVyaW5nIGEgY2FuZGlkYXRlcyBydW4gZm9yIHByZXNpZGVuY3ksIG5vdCB0aGUgcHVibGljcy4gQXMgaXQgaXMsIG1vc3QgcGVvcGxlIGRvbiB1bmRlcnN0YW5kIHRheCByZXR1cm5zLiAKSnVzdCBsaWtlIG1hbnkgcHJvZHVjdHMsIHNob3BwaW5nIGZvciB5b3VyIHBva2VyIHByb2R1Y3RzIGlzIG11Y2ggbW9yZSBjb3N0IGVmZmljaWVudCB0aGFuIGRvaW5nIGl0IGluIHN0b3Jlcy4gWW91IHdpbGwgbmVlZCBhIHBva2VyIHRhYmxlLCBwb2tlciBjaGlwcywgYW5kIGEgZGVjayBvZiBjYXJkcyB0byBiZSBhYmxlIHRvIGhvc3QgeW91ciBvd24gZ2FtZS4gCklmIHlvdSB3YW50IHRvIHBsYXkgcG9rZXIgb25saW5lIGZvciBmcmVlIHRoZW4geW91IGNhbiBhbHNvIGNob29zZSB0byBwbGF5IHRoZSB2aXJ0dWFsIG1vbmV5LCB3aGljaCB3aWxsIGhlbHAgeW91IGdhaW4gdGhlIGNvbmZpZGVuY2UgdG8gcGxheSBhZ2FpbnN0IHJlYWwgcGxheWVycyB3aXRoIHBhc3Npb24gdG8gd2luIG1vbmV5Li4gCkxhc3RpbmcgbWFycmlhZ2UgR29kIGJ5IGNyZWF0aW9uIG1hZGUgdHdvIG9mIG9uZSwgc28gYWdhaW4gYnkgbWFycmlhZ2UgSGUgbWFkZSBvbmUgb2YgdHdvLiAKR2lybGluTWljaGlnYW4gdQpXaGljaCBza2lsbHMgYXJlIHlvdSB0cnlpbmcgdG8gdW50cmFpbj8uIApUYWtlIGFkdmFudGFnZSBvZiBzb21lIEZyZWUgQ2FzaW5vIFBva2VyIExlc3NvbnMgYXQgdGhlIGNhc2lubyBuZWFyZXN0IHlvdXIgaG9tZS4gVGhleSB0ZW5kIHRvIHBsYXkgdGhlc2UgZ2FtZXMgd2l0aCBQb2tlciBDaGlwcyB0aGF0IGRvbid0IGhhdmUgYW55IHJlYWwgbW9uZXRhcnkgdmFsdWUuIFlvdSBjYW4gc3RhcnQgeW91ciBsZXNzb25zIHdpdGggYSBjdXJzb3J5IGdhbWUgb3ZlcnZpZXcuIApIb3cgeW91IHdpbGwgZmVlbCBpZiB5b3UgZG8gbm90IGFjaGlldmUgaXQuIApOb3J0aCBBbWVyaWNhIEluIHRoZSBVbml0ZWQgU3RhdGVzLCBMYXkncyBvZmZlcnMgYSBudW1iZXIgb2YgZmxhdm9yIGNvbWJpbmF0aW9ucywgaW4gYWRkaXRpb24gdG8gdGhlIGNsYXNzaWMgY2hpcHMuIEZvb2QgYW5kIERydWcgQWRtaW5pc3RyYXRpb24gYWxsb3dlZCByZW1vdmFsIG9mIHdhcm5pbmdzIGFib3V0IHZhcmlvdXMgaGVhbHRoIGNvbnNlcXVlbmNlcyBvZiB0aGUgZmF0IHN1YnN0aXR1dGUuIFRoZSBmb2xsb3dpbmcgTGF5J3MgZmxhdm9ycyBhcmUgYXZhaWxhYmxlIG5hdGlvbmFsbHkgaW4gQ2FuYWRhOiBDbGFzc2ljLCBMaWdodGx5IFNhbHRlZCwgV2F2eSBPcmlnaW5hbCwgRGlsbCBQaWNrbGUsIEJCUSwgS2V0Y2h1cCwgU2FsdCBWaW5lZ2FyLCBTbW9reSBCYWNvbiwgU2VhIFNhbHQgUGVwcGVyLCBhbmQgQ2hlZGRhciBTb3VyIENyZWFtLiAKT24gU2VwdGVtYmVyIDE4LCAyMDEzLCBldmVyeSBNYXNzYWdlIEVudnkgU3BhLCBpbmNsdWRpbmcgdGhlIDEyIExhcyBWZWdhcy9IZW5kZXJzb24gTWFzc2FnZSBFbnZ5IFNwYSBsb2NhdGlvbnMgd2lsbCBkb25hdGUgJDEwIGZyb20gZXZlcnkgb25lIGhvdXIgbWFzc2FnZSBzZXNzaW9uIG9yIGZhY2lhbCB0byB0aGUgQXJ0aHJpdGlzIEZvdW5kYXRpb24uIApXaGVuIGkgd2FzIGEga2lkIEkgd2F0Y2hlZCBhIG1hcmlvbmV0dGUgYWN0aW9uIHNob3cgY2FsbGVkIFN1cGVyY2FyIGl0IGhhZCBhIGhpZ2ggY3JlZXAgZmFjdG9yIHRvIGl0IHdoYXQgd2l0aCB0aGUgbWFyaW9uZXR0ZSBleWVzIGFuZCBtb3V0aHMgYW5kIGFsbCwgYnV0IEkgd2F0Y2hlZCBpdCBhbnl3YXksIEkgZ3Vlc3MsIGJlY2F1c2UgdGhhdCB3YXMgcHJvYmFibHkgdGhlIG9ubHkgY2FydG9vbiBiZWluZyBicm9hZGNhc3QgYXQgdGhhdCBob3VyLiAoSXQgd2FzIGZpbG1lZCBpbiAiU3VwZXJtYXJpb25hdGlvbiIsIHdoaWNoIHV0aWxpemVkIGVsZWN0cmljIG1vdmluZyBwYXJ0cyBpbiB0aGUgbWFyaW9uZXR0ZXMgaW4gYWRkaXRpb24gdG8gc3RyaW5nIGNvbnRyb2xzLiBJdCB3YXMgdGhlIGJyYWluY2hpbGQgb2YgR2VycnkgQW5kZXJzb24sIHdobyBhbHNvIGJyb3VnaHQgeW91IEZpcmViYWxsIFhMNSBmb3Igd2hpY2ggSSBjYW4gc3RpbGwgc2luZyB0aGUgdGhlbWUgc29uZy4pIEFuZCB0aGF0IGlzIHdoYXQgc3RydWNrIG1lIHNlZWluZyB0aGUgcmVhc29uaW5nIGZvciB0aGlzICJhdG9taWMgYm9tYiBjYXIiIGl0IHJlYWxseSBpcyBqdXN0IGEgY2FyIHdpdGggYSBoaWdoIGNyZWVwIGZhY3RvciB0aGF0IGlzIG91dGZpdHRlZCBmb3IgY2FtcGluZywgYnV0IGl0IGlzIGJlaW5nIHNvbGQgaW4gdGhlIHBhdGVudCBhcyBhIHdheXMgZm9yIHVyYmFuIGR3ZWxsZXJzIHRvIHN1cnZpdmUgdGhlIGNvbWluZyBudWNsZWFyIGhvbG9jYXVzdCAoIiBvdXIgZ3JlYXRlciBhcmVhcyBvZiBodW1hbiBjb25nZXN0aW9uIGhhdmUgc2xvd2x5IGJlZ3VuIHRvIGZhY2UgdGhlIHRocmVhdCBvZiBldmVudHVhbCBhdG9taWMgZGVzdHJ1Y3Rpb24iKS4gClRoYXQgd2lsbCBoZWxwIG5hcnJvdyBkb3duIGN1cnJpY3VsdW0uLiAKVW5lIGRlcyBpbnRlcnZlbmFudGVzLCBlbW1lbmUgY2hleiB1biBudXRyaXRpb25uaXN0ZSB0cnMgamV1bmUsIHRtb2lnbmFpdCBkJ3VuZSBjaG9zZSBhc3NleiBpbmNyb3lhYmxlIG1haXMgbWFsaGV1cmV1c2VtZW50IGdsb2JhbGVtZW50IGp1c3RlIDogIm9uIGFwcHJlbmQgdHJzIHR0IHF1ZSBsZXMgbWRlY2lucyBuZSBzb250IHBhcyBkZSBub3RyZSBjdC4gVW4gZW5mYW50IGdyb3Mgbidlc3QgcGx1cyB1biBlbmZhbnQiLiAKTWlqbiBiZW9vcmRlbGVuZCBzdGFnZWJlZ2VsZWlkZXIgaGVlZnQgaGV0IG9uZGVyem9layBtZXQgZWVuIHJ1aW1lIHZvbGRvZW5kZSBiZW9vcmRlZWxkLiAKUGVyc29uYWxseSBJIHdpbGwgbGVhcm4gYXMgbXVjaCBhcyBJIGNhbiBhbmQgaGF2ZSBhcyBtYW55IGV4cGVyaWVuY2VzIGFuZCBpbnRlcmFjdGlvbnMgd2l0aCBvdGhlcnMgaW4gd2hhdCB0aW1lIEkgaGF2ZSBsZWZ0LiAKVGhlbiBzaGUganVzdCBraW5kIG9mIHB1bGxlZCBhd2F5LCBzdGFydGluZyBsYXVnaGluZyBuZXJ2b3VzbHksIGFuZCByZW1pbmRlZCBtZSB0aGF0IHNoZSB3YXMgd2VhcmluZyBsaXBzdGljayB0aGF0IHdvdWxkIHNtZWFyLiBJIHdhcyBzbyBjb25mdXNlZCB0aGF0IEkganVzdCBmdWNraW5nIGxlZnQuLiAKSXQgaXMgZGlmZmljdWx0LCBidXQgd29ydGggc3R1ZHlpbmcgZm9yLiAKWW91IGFyZSB1c3VhbGx5IGF0IGEgcmFuZ2UgZGlzYWR2YW50YWdlLiAyLiAKRWFjaCBtYWNoaW5lIGhhcyBhIGxpZ2h0IG9uIHRvcCBvZiBpdCBjYWxsZWQgYSAnY2FuZGxlJy4gVGhlIGNhbmRsZSBjb250YWlucyBhIGNvbG9yIGluZGljYXRpbmcgaXRzIGRlbm9taW5hdGlvbiwgYW5kIGFsc28gc2VydmVzIHRvIG5vdGlmeSB0aGUgc2xvdCBhdHRlbmRhbnQgaWYgc2VydmljZSBpcyBuZWVkZWQuIFRoZSBjYW5kbGUgZmxhc2hlcyBpbiBzcGVjaWZpYyBwYXR0ZXJucyBmb3Igc2VydmljZSBuZWVkZWQsIGVudHJ5IG1hZGUgaW50byB0aGUgbWFjaGluZSwgamFja3BvdCwgZG9vciBub3Qgc2VjdXJlLCBhbmQgb3RoZXIgZnVuY3Rpb25zLi4gCkNhbiBIb3VzZSBSZXB1YmxpY2FucyBnZXQgdGhlIHZvdGVzIHRoZXkgbmVlZCB0byBwYXNzIGEgZnVuZGluZyBiaWxsIHdpdGhvdXQgRGVtb2NyYXRzP0NhbiBTZW5hdGUgUmVwdWJsaWNhbnMgcGljayBvZmYgZW5vdWdoIERlbW9jcmF0cyB0byBwYXNzIGEgZnVuZGluZyBiaWxsP0lmIHRoZSBhbnN3ZXIgdG8gdGhvc2UgcXVlc3Rpb25zIGlzIHllcywgdGhlcmUgd29uJ3QgYmUgYSBnb3Zlcm5tZW50IHNodXRkb3duLiAKQ2FuIHlvdSBkbyBNYWpvciB3b3JrIG9uIHlvdXIgb3duIHZlaGljbGU6IE5vcGUKT2YgY291cnNlIHRoaW5ncyByYXBpZGx5IGluIHRoZSBmZXcgeWVhcnMgZm9sbG93aW5nIHRoYXQsIHNvIHRoYXQgYnkgdGhlIGVuZCBvZiBXV0kgcGVvcGxlIGdvdCBhIGdvb2QgdGFzdGUgb2Ygd2hhdCBpdCBtZWFudCB0byBjb250cm9sbGluZyBwaWVjZXMgb2YgcHJvcGVydHkgd2l0aG91dCBhY3R1YWxseSBvY2N1cHlpbmcgdGhlbSwgcmFpbmluZyBjaGFvcyBhbmQgZGVzdHJ1Y3Rpb24gZnJvbSBhYm92ZS4gMjArIHllYXJzIGxhdGVyLCBpbiB0aGUgZWFybHkgMTkzMCBib21iaW5nIGJlY2FtZSBtb3JlIHNvcGhpc3RpY2F0ZWQsIGluY2x1ZGluZyBhIG5ldyBhcnNlbmFsIG9mIHBvaXNvbiBnYXMgd2VhcG9ucy4gCkkgdW5kZXJzdGFuZCB0aGF0IHdlIGFyZSBpbiB0aGUgMjFzdCBjZW50dXJ5IGFuZCBhcyBhIHJlc3VsdCBmb3J3YXJkIHByb2dyZXNzIGlzIG5lY2Vzc2FyeS4gClRoZSBpc3N1ZXMgaW4gdGhlIEhvdXNlSG91c2UgRnJlZWRvbSBDYXVjdXMgQ2hhaXJtYW4gTWFyayBNZWFkb3dzIGFuZCBSZXAuIEppbSBKb3JkYW4gbWV0IFdlZG5lc2RheSBuaWdodCB3aXRoIFJlcC4gUGF0cmljayBNY0hlbnJ5LCB0aGUgY2hpZWYgZGVwdXR5IHdoaXAsIHRvIHRyeSBhbmQgZmlndXJlIG91dCBhIHBhdGggZm9yd2FyZCBmb3IgdGhlIHJlc3RpdmUgY29uc2VydmF0aXZlIGJsb2MuIApEbyBub3QgYXR0ZW1wdCB0aGlzIHdhbGsgb24gYSB3aW5keSBkYXkgYXMgeW91IHdpbGwgYmUgd29ybiBkb3duIGJ5IHRoZSB3aW5kLi4gCkhhdmUgeW91IGJlZW4gc3R1Y2sgaW4geW91ciB0aGlua2luZz8gVGhlcmUgYXJlIHN0cm9uZyBnZW5ldGljIGluZmx1ZW5jZXMgdXBvbiBjaGFyYWN0ZXJpc3RpYyBiZWhhdmlvcnMuIEEgZnJhZ2lsZSBlZ28gYW5kIHBvb3Igc2VsZiBpbWFnZSBtYWtlIGl0IHRlbXB0aW5nIHRvIHB1dCBkb3duIG90aGVycyBhbmQgdG8gZHJhdyBhdHRlbnRpb24gdG8gb25lc2VsZiBieSBmZWlnbmluZyBzdXBlcmlvcml0eS4gClRoZXJlIHdhcyBubyBvbmUgaW4gdGhlbS4gSW4gdGhlIHN0b3JlIGhlIHRhbGtlZCBhZ2FpbiB3aXRoIFdoZWxjaGVsLCB3aG8gdG9sZCBoaW0gb2YgdGhlIGNvdXBsZSB0aGV5J2Qgc2Vlbi4gCk92ZXJ2aWV3IGZvciBUeWNoYUJyYWhlClRyZW5keSBzcG90cyBsaWtlIFRoZSBCaW5kZXJ5IFNob3AgYW5kIFZpY3RvcmlhIEZvb2QgU3RyZWV0IGhhcyBzb21ldGhpbmcgd2FpdGluZyBmb3IgYWxsIGFnZXMuIERvbid0IGZvcmdldCB0byBraWNrIHN0YXJ0IHlvdXIgZGF5IGF0IHNvbWUgb2YgVmljdG9yaWEncyBmaW5lc3QgYnJlYWtmYXN0IHBsdWcgaW5zLCBzdWNoIGFzIENhZiBNaWdub24gYW5kIFRyZWF0cy5SZWFkIG1vcmVIT1RFTCBTVFlMRVRpbWUgc3BlbnQgaW4gIGlzIGEgc2xvd2VyIHBhY2VkIGFmZmFpciB0aGFuIG1vc3Qgb3RoZXIgQ2VudHJhbCBMb25kb24gbmVpZ2hib3VyaG9vZHMuIFRoaXMgbGFyZ2VseSByZXNpZGVudGlhbCBhcmVhIG9yZGVybHkgYXJyYW5nZWQgYmVzaWRlIHRoZSBUaGFtZXMsIGlzIGEgdHJlYXN1cmUgdHJvdmUgb2YgcXVhaW50IHB1YnMsIHN1YnRsZSBhcmNoaXRlY3R1cmFsIGNoYXJtcyBhbmQgbG9jYWwgYm91dGlxdWVzLiAKV2Ugd2lsbCBhbHdheXMgYmUgZnJlZSAgd2lsbCBhbHdheXMgYmUgZnJlZS4gT25saW5lIHNpbmdsZXMgY2hhdHJvb21zIHByZXNlbnQgdGhlIGJlc3QgcGxhY2VzIGluIHdoZXJlIHBlcnNvbnMgY2FuIGZlZWwgZnJlZSB0byBleHByZXNzIHRoZW1zZWx2ZXMgd2l0aG91dCBhbnkgcmVzdHJpY3Rpb24gYW5kIGZpbmQgaW50ZXJlc3RlZCBzaW5nbGUgcGVvcGxlLlBsZW50eSBvZiBmaXNoIE9ubGluZSBEYXRpbmcgRm9ydW0gYW5kIHNpbmdsZXMgQ2hhdC5Pbmx5IHRoZSBiZXN0IGNoYXRsaW5lcyBtYWtlIGl0IGludG8gdGhpcyBsaXN0LiAKSGUgdXNlZCB0byB0YWtlIFJpdGFsaW4gNW1nIGZvciAzIHRpbWVzIGEgZGF5LiBOb3cgd2UgZ2l2ZSBoaW0gQ29uY2VydGEgMThtZyBFUiBvbmNlIGEgZGF5IGFuZCBoZSBkb2VzIHJlYWxseSByZWFsbHkgd2VsbCBvbiBpdC4gV2l0aCB0aGUgUml0YWxpbiwgaGUgd291bGQgaGF2ZSBtb29kIHN3aW5ncyBiZXR3ZWVuIGRvc2VzLiAKVGhpbmdzIGFyZSBwcmV0dHkgYnVzeSB0aGVzZSBkYXlzIGFsb25nIHdpdGggYSBmZXcgdHJpcHMgdG8gTGFzIFZlZ2FzIG92ZXIgdGhlIG5leHQgbGl0dGxlIHdoaWxlIGFuZCBhIHZpc2l0IHRvIFR3aXRjaENvbiBpbiBTZXB0ZW1iZXIsIFN0YXBsZXMgYW5kIGhpcyBicm90aGVyIHdpbGwgYmUgbGVhdmluZyB0aGVpciBwYXJlbnRzIGhvdXNlIGFuZCBtb3ZpbmcgdG8gQ2FsZ2FyeSBpbiBKdWx5Li4gCkVhY2ggcGxheSBzaG91bGQgYmUgaGlnaGVyIHRoYW4gdGhlIGxhc3QsIG1lYW5pbmcgaWYgSSBwdXQgYSBmdWxsIGhvdXNlIHdpdGggdGhyZWUgbmluZXMsIGEgcGxheWVyIGNhbiBiZWF0IG15IGhhbmQgd2l0aCBhIGZ1bGwgaG91c2Ugd2l0aCB0aHJlZSBjYXJkcyBoaWdoZXIgdGhhbiBhIG5pbmUgb3IgYSBmb3VyIG9mIGEga2luZC4uIApOb3Qgd2hhdCBJIG1lYW50IGF0IGFsbC4gCkdsdXRlbiBGcmVlIERpZXQgaGVscGVkIE5lcnZlIFBhaW4gTmV1cm9sb2d5IDIwMTBHbHV0ZW4gIEFueGlldHkgUGFuaWMgQXR0YWNrcyBSZXNvbHZlIG9uIGEgR2x1dGVuIEZyZWVEaWV0LgpJZiB5b3Ugd2FudCB0byBjb3VudCBNaXRjaCBWYW5kZSBTb21wZWwgMjAgdHdvIHllYXJzIGluIDIwMTYgMTcsIGdvIGFoZWFkLCBidXQgaGUgb25seSBoYWQgdGhyZWUgb2YgdGhvc2UgaW4gYSBMb25kb24gamVyc2V5IGFmdGVyIGJlaW5nIGFjcXVpcmVkIGZyb20gT3NoYXdhLiAKVGhpcyBraWNrZXIgYWxsb3dzIHRoZSAyIHBsYXllcnMgdG8gYmVhdCB0aGUgdGllIGFuZGhlbHBzIHRvIGRlY2lkZSB3aG8gd2lsbCB3aW4gdGhlIHBvdCBvciB3aGV0aGVyIHRoZSBwb3Qgd2lsbCBiZXNoYXJlZCBhbW9uZyB0aGUgcGxheWVycy4gCkEgZmV3IHllYXJzIGFnbywgb25lIG1ham9yIG9uZSBtYWRlIGl0IG9udG8gbGl2ZSBzZXJ2ZXJzIHRoYXQgSSBwZXJzb25hbGx5IHJlY2FsbGVkOiBzb21lIEx1bHUgc2tpbnMgcG9seW1vcnBoaW5nIHNvbWUgY2hhbXBpb25zIGp1c3QgY2F1c2VkIGEgZnVsbCBnYW1lIGJ1Z3NwbGF0LiBUaGVzZSBhcmUgdmVyeSByYXJlIGFuZCBmYXIgaW4gYmV0d2VlbiwgYW5kIElNTyB0aGlzIGlzIHdoYXQgUEJFIGhvcGVzIHRvIGNhdGNoIGFuZCBwYXRjaC4uIApUcmFucXVpbGl6ZXJzIGFyZW4ndCByZWFkaWx5IGFjY2Vzc2libGUgb3IgcHJhY3RpY2FsIGluIHRoaXMgc2NlbmFyaW8uIFRoZXkgbWV0YWJvbGl6ZSBkaWZmZXJlbnRseSBmb3IgZWFjaCBhbmltYWwgYW5kIHlvdSBoYXZlIHRvIHVzZSBkaWZmZXJlbnQgbWVkaWNpbmVzIGZvciBlYWNoIGdlbnVzIG9mIGFuaW1hbC4gUGxhY2VtZW50IGlzIGNyaXRpY2FsbHkgaW1wb3J0YW50LCB0b28uIApUaGVyZSBhIGh1Z2UgZGlmZmVyZW5jZSBiZXR3ZWVuIGJlaW5nIGEgZGljayBhbmQgYmVpbmcgYSBjcmltaW5hbC4KSSBzYXcgVGhlIFJvb20gd2hlbiB0aGV5IHNob3dlZCBpdCBpbiBzZWxlY3QgdGhlYXRyZXMgdGhpcyBwYXN0IEphbnVhcnkgZm9yIG9uZSBkYXkgb25seS4gSSBuZXZlciBzZWVuIGl0IGFuZCB3YWxrZWQgaW4gbGF0ZSB0byBhIGdyb3VwIG9mIGd1eXMgaW4gdGhlIHZlcnkgZnJvbnQgc2hvdXRpbmcgYXQgdGhlIHNjcmVlbi4gVGhpcyB3YXMgaW4gY29uc2VydmF0aXZlIElydmluZSBDQSBhbmQgZmlndXJlZCB3YXMgaW4gZm9yIGEgbG9uZyBtb3ZpZSAgIHBlb3BsZSBuZXh0IHRvIG1lIHdlcmUgbXV0dGVyaW5nIHVuZGVyIHRoZWlyIGJyZWF0aCBhYm91dCBpdCAoIHRoZXkgZ29pbmcgdG8gZG8gdGhpcyB0aGUgd2hvbGUgdGltZT8gYnV0IGJlaW5nIG9yYW5nZSBjb3VudHkgbm9ib2R5IHdvdWxkIGFjdHVhbGx5IGRvIGFueXRoaW5nIGFib3V0IGl0LiBUdXJuZWQgb3V0IHRvIGJlIGEgcmVhbGx5IGdyZWF0IHRpbWUgICB0aGUgZHVkZXMgdXAgZnJvbnQgaGFkIG9idmlvdXNseSBzZWVuIGl0IGEgbWlsbGlvbiB0aW1lcyBhbmQgaGFkIHNvbWV0aGluZyBmdW5ueSB0byBzYXkgaW4gZXZlcnkgc2NlbmUgICBncmFudGVkIGl0IGEgbW92aWUgdGhhdCB3YXJyYW50cyBpdC4gVGhleSBldmVuIGhhZCBwbGFzdGljIHNwb29ucyBwZW9wbGUgd291bGQgdGhyb3cgICBJIHRoaW5rIGEgc3Bvb24gbWFrZXMgYSBjYW1lbyBhdCBsZWFzdCBhIGRvemVuIHRpbWVzIHRocm91Z2hvdXQuIFdvdWxkIGdvIGFnYWluIDEwLzEwLgpKb2V0aGVwb2tlcnBybyAgMSBwb2ludCAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpTdGlsbCBoYXJkIGZvciBtZSB0byBzb21ldGltZXMgcHV0IG15IGZpbmdlciBvbiBleGFjdGx5IFdIWSBJIGF0dHJhY3RlZCB0byBzb21lb25lLCBldmVuIHRob3VnaCBub3csIEkgYW0gbXVjaCBtb3JlIHN1cmUgd2hlbiBpdCBpcyBvciBpc24gaGFwcGVuaW5nIGFuZCB3aG8gaXQgZGlyZWN0ZWQgYXQuIEFtIEkgdHVybmVkIG9uIGJ5IG15IHBhcnRuZXJzIGJvZHkgZGlyZWN0bHksIG9yIGlzIGl0IGJlY2F1c2UgSSBhdHRyYWN0ZWQgdG8gdGhlbSBhcyBhIHBlcnNvbiBhbmQgdGhlbiB0aGVpciBib2R5IGp1c3QgZ29lcyB3aXRoIGl0PyBEaWZmZXJlbnQgcGVvcGxlIHdvdWxkIGxpa2VseSBoYXZlIGRpZmZlcmVudCBvcGluaW9ucyBvbiB0aGlzLiBUbyBzb21lIGV4dGVudCwgaXQgcmVhbGx5IGJvdGguCkRyIExpdmluZ3N0b25lIHNhaWQgUXVlZW5zbGFuZCBob3RlbHMgcGFpZCBhIGZsYXQgdGF4IG9mIDM1JSBvbiB0aGVpciBwb2tlciBtYWNoaW5lIHJldmVudWUgd2hpbGUgY29tbXVuaXR5IHJ1biBjbHVicyBwYWlkIGFuICJlZmZlY3RpdmUgYXZlcmFnZSIgdGF4IG9mIDI3JS4KT25jZSBhIGRpc2ggaXMgY29uY2VpdmVkLCB0aGUgdGVzdGluZyBiZWdpbnMuIFdoZW4gQWFyb24gdGVzdHMgYSBuZXcgZGlzaCBmb3IgdGhlIGZpcnN0IHRpbWUsIGhlIHRha2VzIG5vdGVzIG9uIHdoYXQgaGUgdGhpbmtzIGl0IG5lZWRzLiBUaGVuLCBvZnRlbiBoZSdsbCBhcnJhbmdlIHRvIG1lZXQgd2l0aCBhIGNoZWYgZnJpZW5kIHRvIGdldCBmZWVkYmFjayBvbiBwdXR0aW5nIHRoZSBkaXNoIHRvZ2V0aGVyLiBBZnRlciBnZXR0aW5nIHRoZSBhZHZpY2UsIEFhcm9uIGNvbnRpbnVlcyB0byB0ZXN0IHRoZSByZWNpcGUuIEhlIHNheXMgdGhlIGxlYXN0IG51bWJlciBvZiB0ZXN0aW5nIHZlcnNpb25zIGhhcyBiZWVuIHRocmVlIGFuZCB0aGUgbW9zdCBhYm91dCBzZXZlbi4K|<---