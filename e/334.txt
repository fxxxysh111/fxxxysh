--->|VGhlIHR3byBwbGF5ZXJzLCBpbiB0aGUgZmlyc3Qgcm91bmQgb2YgYmV0dGluZywgZ2V0IGFsbCB0aGVpciBjaGlwcyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBwb3QgYW5kIGFyZSBub3cgYm90aCBpbiwgYmVmb3JlIHRoZSByZW1haW5pbmcgY2FyZHMgYXJlIGRlYWx0LiAKSGFuZGxpbmcgaXMgYSB2ZXJ5IGltcG9ydGFudCBjb25zaWRlcmF0aW9uIHdoZW4gaXQgY29tZXMgdG8gY2FzaW5vIHBva2VyIGNoaXBzIHdlaWdodC4gUGxheWVycyBhbmQgZGVhbGVycyBhbGlrZSB3YW50IHRvIGVuc3VyZSB0aGF0IGl0IGlzIGVhc3kgdG8gaGFuZGxlIHRoZSBjaGlwcyB0aGF0IGFyZSB1c2VkIGluIHZhcmlvdXMgY2FzaW5vIGdhbWVzLiAKVGhlcmUgYXJlIG5vIHNpbXBsZSBhbnN3ZXJzIHVubGVzcyB5b3UgYXJlIGEgc2l4IHllYXIgb2xkLi4gCldhbHRlciBKLiAKSG93ZXZlciwgSSBjYW4gYmVsaWV2ZSB0aGF0IG5vYm9keSBoYXMgdGFsa2VkIGFib3V0IEJydWRpY2xhZCBtYWluIGlzc3VlcyBhbmQgaG93IHRvIGNvbWJhdCB0aGVtOiBtYW5hIGFuZCBjYXJkIGRyYXcuLiAKTVJJbXBvc3NpYmxlMDkgIDYgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ28KQ29yZSBzdGFiaWxpdHkgaXMgZXNzZW50aWFsIGZvciBydW5uZXJzIGJlY2F1c2UgaXQgcHJldmVudHMgcGFpbiwgcmVkdWNlcyB3ZWFyIGFuZCB0ZWFyIG9mIGpvaW50cywgYW5kIHJlZHVjZXMgdGhlIGNoYW5jZXMgb2YgZGFtYWdlIHRvIG11c2NsZXMgYW5kIGJvbmVzLCB3aGljaCBjYW4gbWFrZSBvciBicmVhayBhbiBhbWF0ZXVyIG9yIHByb2Zlc3Npb25hbCBydW5uZXIncyBjYXJlZXIuIEl0J3MgdGhlIGpvYiBvZiBjb3JlIG11c2NsZXMgbGlrZSB0aGUgcXVhZHJpY2VwcyAoZnJvbnQgdGhpZ2ggbXVzY2xlcykgdG8ga2VlcCB5b3Ugc3RhbmRpbmcgd2hpbGUgZ3Jhdml0eSB0cmllcyB0byBwdWxsIHlvdSBkb3duLiAKTGFzIFZlZ2FzIGF0dG9ybmV5IEphbWVzICJCdWNreSIgQnVjaGFuYW4sIHdobyByZXByZXNlbnRzIFJlbGF4IFNwYSBNYXNzYWdlLCBxdWVzdGlvbmVkIGhvdyB0aGUgY2l0eSBjb3VsZCByZXZva2UgbGljZW5zZXMgYmVmb3JlIGFueSBlbXBsb3llZXMgb2YgYSBidXNpbmVzcyB3ZXJlIGNvbnZpY3RlZCBvZiBwcm9zdGl0dXRpb24uIEhlIHNhaWQgdGhlcmUgaXMgbm8gZXZpZGVuY2UgZm9yIHRoZSBjb3VuY2lsIHRvIGFjdCwgYW5kIHRoYXQgdGhlIG93bmVyLCBKb2huIEsuIApPbmUgd2FzIEN5bnRoaWEgRWFnYW4sIGEgZm9ybWVyIGxpYnJhcmlhbiBpbiBEZXRyb2l0IHdobyB0b2xkIHRhbGVzIG9mIGRlYWxpbmcgd2l0aCBmcmF6emxlZCBwYXRyb25zIGRvaW5nIHJlc2VhcmNoIGZvciB0aGVpciBjb3VydCBjYXNlcy4KQnV0LCBmb3IgZXhhbXBsZSwgcGVvcGxlIGtub3cgaG93IHRvIGNhbGwgOTExIGZvciBlbWVyZ2VuY3kgc2VydmljZXMgKGF0IGxlYXN0IGhlcmUgaW4gdGhlIFVTKSwgYmVjYXVzZSBpdCBiZWVuIHRhdWdodCB0byB1cyBieSByb3RlIHNpbmNlIGNoaWxkaG9vZC4gU29tZW9uZSB3aG8gbmVlZHMgZW1lcmdlbmN5IHNlcnZpY2VzIG1pZ2h0IGJlIGFibGUgdG8gY2FsbCB0aGUgbnVtYmVyIHRoZW1zZWx2ZXMsIGJ1dCBvZnRlbiB0aGV5IGNhbm5vdCBhbmQgbmVlZCBzb21lb25lIGVsc2UgdG8gbWFrZSB0aGUgY2FsbCBmb3IgdGhlbS4KU2FpZCwgdGhlIGlkZWEgb2YgbGlmZSBvbiBNYXJzIGhhZCBtb3N0bHkgbG9zdCBpdHMgcGlua2lzaCBwdWxzZSBieSAxOTIwLCB0aG91Z2ggcGVvcGxlIHN0aWxsIHdlcmUgc3RpbGwgdGlua2VyaW5nIHdpdGggaWRlYXMgb2YgaG93IHRvIGNvbW11bmljYXRlIHdpdGggYWxpZW4gZm9ybXMgb2YgbGlmZSBvdmVyIHZhc3QgZGlzdGFuY2VzLiBDYW1pbGxlIEZsYW1tYXJpb24sIGZvciBleGFtcGxlLCBhZHZvY2F0ZWQgdHVybmluZyBkZXNlcnQgbGFuZCBpbnRvIGEgbWFzc2l2ZSBMYXMgVmVnYXMsIGhlYXRpbmcgdXAgdGhlIGRlc2VydCB3aXRoIG1pbGxpb25zIG9mIGxpZ2h0IGJ1bGJzIGFuZCB0aGVuIHVzaW5nIHRoZW0gdG8gZmxhc2ggc2lnbmFscyB3aG8ga25vd3Mgd2hlcmUuIApGb3VyIFJDVHMgKG49MTg1KSB3ZXJlIGluY2x1ZGVkIC4KQnV0IGluIGZhY3QgaXRzIHNoYXJlIG9mIGludGVybmF0aW9uYWwgcGF5bWVudHMgaGFzIHNsaXBwZWQgZnJvbSAyLjggcGVyIGNlbnQgaW4gMjAxNSB0byAxLjkgcGVyIGNlbnQgdG9kYXkuIApTaG9ydCBwb2ludGVkIHRvIGNoYW5nZXMgaW4gaG93IGZhY3VsdHkgc2VhcmNoIGNvbW1pdHRlZXMgYXJlIHRyYWluZWQgYXMgYW4gZXhhbXBsZSBvZiBob3cgdGhlIGNlbnRlciB3b3JrIGhhcyBiZWNvbWUgaW5zdGl0dXRpb25hbGl6ZWQgYWNyb3NzIGNhbXB1cy4gCiJJdCBpcyBhIHNoYW1lIHRoYXQgaW4gQWZnaGFuaXN0YW4sIG9uY2UgYWNjdXNlZCBvZiBjb3JydXB0aW9uLCBwZW9wbGUgY2FuIHNpbXBseSBnbyBvdmVyc2VhcyBhbmQgY2xhaW0gdGhhdCB0aGVpciBsaWZlIGlzIHVuZGVyIHRocmVhdC4iCk1hbnkgb2YgdGhlIG1haW4gY2hhcmFjdGVycyBhcmUgZmVtYWxlLCBhbmQgYXJlIGEgdmFyaWV0eSBvZiBjaGFyYWN0ZXJzIGluIGRpZmZlcmVudCBkeW5hbWljcyBvZiByZWxhdGlvbnNoaXBzLCBoZWNrIG9uZSBvZiB0aGUgd2F5cyB0aGUgY2hhcmFjdGVycyBmaWdodCBpcyBieSBjb21iaW5pbmcgdGhlbXNlbHZlcyBhbmQgYmVjb21pbmcgdGhlIHBoeXNpY2FsIGVtYm9kaW1lbnQgb2YgdGhlaXIgcmVsYXRpb25zaGlwLiBNb3N0IGFyZSBnYXksIHNvbWUgYXJlIGJpc2V4dWFsLi4gClRoZSBWaWV0bmFtIFdhciBvdmVyc2hhZG93ZWQgaXQgYWxsIGJ1dCB0aGVyZSBpcyBubyB3YXkgaGUgc2hvdWxkIGJlIGxpc3RlZCBhbnl3aGVyZSBuZWFyIFRydW1wLiAKSSBsYXVnaGVkIGF0IHRoZSBwcm9zcGVjdCBVdGFoIHdvdWxkIGV2ZW4gY29uc2lkZXIgMTAlIG11Y2ggbGVzcyBubyBsaW1pdC4gCkRvbnQgbGlzdGVuIHRvIG1lIHRob3VnaCBwZW9wbGUgSSBqdXN0IGJhcmxleSBoYW5naW5nIG9uIGF0IDIwME5MLiBJIGp1c3QgdHJ5aW5nIG15IGJlc3QgdG8gcmVhc29uLyByZWNhbGwgbGVzc29ucyBmcm9tIGJldHRlciBwbGF5ZXJzLiBJIHByb2JhYmx5IGdvaW5nIGEgbGl0dGxlIHdpZGVyLCBidXQgbm90IG11Y2guIEkgdGhpbmsgYXQgbGVhc3QgdGhlIHN1aXRlZCBicm9hZHdheXMgbGlrZSBLVCwgUVQsIGFuZCBKVCxzaG91bGQgYmUgaW4gdGhlcmUuIE1heWJlIGFzIGxvdyBhcyA4OCBvbiB0aGUgUFAgc3BlY3RydW0uIEkgbWFraW5nIG15IHJhaXNlIHByZXR0eSBiaWcgdG9vLiBJZiB0aGlzIGlzIDEvMiBsaXZlIGFuZCB0aGVyZXMgMyBsaW1wcyBhbmQgSSBpbiB0aGUgQkIgSSBnb2luZyB0byAxOCAyMC4gUG9zdGZsb3AgSSBkb250IHRoaW5rIHRoaXMgaXMgYSBzaXR1YXRpb24gd2hlcmUgeW91IGRvbnQgQ2JldCBldmVyLiBJIHdvdWxkIG9ubHkgYmV0IHJlYWxseSBoaWdoIGVxdWl0eSBoYW5kcy4gQmFzaWNhbGx5IEkgd291bGQgYmV0IHRvcCBwYWlyIHNlY29uZCBraWNrZXIgb3IgYmV0dGVyIGFuZCA4IG91dCBkcmF3cyBvciBiZXR0ZXIgYXMgYmx1ZmZzLiBIYW5kcyBsaWtlIGd1dCBzaG90cyB0aGF0IEkgd291bGQgYmx1ZmYgd2l0aCBhIGxvdCBoZWFkcyB1cCB3b3VsZCBubyBsb25nZXIgbWFrZSB0aGUgY3V0IG11bHRpd2F5KHVubGVzcyBtYXliZSBpdCB3YXMgYSBndXRzaG90IGFuZCB0d28gb3ZlcmNhcmRzIGxpa2UgS1Egb24gVDkycikuCklmIHlvdSdyZSBsb29raW5nIGZvciBhIGNvaW4gdHJheSwgeW91IG1heSBiZSBsb29raW5nIGZvciBhIHdoaWxlLiAKOTQgOTYpIEFsbCBvZiB0aGVzZSBzb25ncyBjYW4gYmUgZm91bmQgb24gaVR1bmVzOiBNdXJkZXIgTXkgSGVhcnQgKGZlYXQuIApEdXJpbmcgd29ya291dHM6IHB1c2guIEp1c3QgeCBhbW91bnQgb2YgcmVwcyBsZWZ0LiBTaGl0LCB0b28gZmFzdCwgcmVsYXguIEFscmlnaHQsIHRoYXQgd2FzIGdvb2QsIGRvIHRoYXQgYWdhaW4uIFF1aWNrIGZlZXQuIFJhbmRvbSBleHBsZXRpdmUuCjEzIEJlc3QgRnJlZSBBc2lhbiAgU2l0ZXMgKDIwMTkpCldoaWxlIHRoZSBnYW1lIGlzIGluIHByb2dyZXNzLCB0aGUgcGxheWVyIGNhbiB0YWtlIHBhcnQgaW4gY2hhdCByb29tIGFjdGl2aXRpZXMgb3Igc2hlIGNhbiBwbGF5IHNpZGUgZ2FtZXMuIFRoZXNlIG1heSBpbmNsdWRlIGluc3RhbnQgZ2FtZXMsIHNsb3RzLCB2aWRlbyBwb2tlciwgdGFibGUgZ2FtZXMgYW5kIGFyY2FkZSBnYW1lcy4gCiJBdXJhbCBtZW1vcnkiIGFsb25lIG1ha2VzIGFueSBzdWJqZWN0aXZlIGNvbXBhcmlzb24gbW9yZSBvciBsZXNzIGludmFsaWQsIGFuZCB0aGUgbG9uZ2VyIGl0IHdlbnQgYmV0d2VlbiB0aGUgbGlzdGVucyB0aGUgbGVzcyB2YWxpZCBpdCBpcy4gT2J2aW91c2x5IG9uZSBjYW4gZGVjaWRlIGlmIGl0IHNvdW5kcyBnb29kIG9yIG5vdCB3aGVuIHlvdSBsaXN0ZW5pbmcsIGJ1dCB0cnlpbmcgdG8gY29tcGFyYXRpdmVseSBxdWFudGlmeSB0aGF0IHRvIHNvbWV0aGluZyB5b3UgaGVhcmQgZGF5cyBvciB3ZWVrcyBlYXJsaWVyIGlzIHRvdGFsIGJ1bGxzaGl0LiBIdW1hbnMgYXJlIGlycmF0aW9uYWwgY3JlYXR1cmVzIGF0IGJlc3Qgd2l0aCBleHRyZW1lbHkgZm9nZ3kgYWJpbGl0aWVzIHRvIHJlbWVtYmVyIGFueXRoaW5nIG9iamVjdGl2ZWx5ICAgb3VyIHByZWZlcmVuY2VzIGFuZCBvcGluaW9ucyBhbmQgcHJlY29uY2VpdmVkIG5vdGlvbnMgYXJlIHZhc3RseSBtb3JlIGxpa2VseSB0byBqdXN0IGhhdmUgZG9uZSBhIHJlYWwgbnVtYmVyIG9uIHdoYXRldmVyIG1lbW9yeSB3ZSBoYXZlLi4gCkdvZCBmb3JiaWQgeW91IHVzZSB0aGUgd3JvbmcgdGF4IGNhbGN1bGF0b3IgYW5kIHlvdSBvbmx5IG1ha2UgJDUwLDAwMCBhIHllYXIgYW5kIGNvbWUgQXByaWwgMTV0aCB5b3Ugb3dlIHRoZSBnb3Zlcm5tZW50ICQyLDUwMC4gSSBkb24ga25vdyBhYm91dCB5b3UgYW5kIHlvdXIgYmFkIGlsbG9naWNhbCBsb2dpYyAoZ2V0IHRoZSBqb2tlKSBidXQgdGVsbGluZyBtaWRkbGUgY2xhc3MgdG8gcG9vciBwZW9wbGUgdG8gdHJ5IHRvIGd1ZXN0aW1hdGUgdGhlaXIgZXhhY3QgdGF4ZXMgdXNpbmcgYSB0aGlyZCBwYXJ0eSBpcyBsaXRlcmFsbHkgdGhlIHNhbWUgYXMgdGVsbGluZyBtaWRkbGUgY2xhc3MgdG8gcG9vciBwZW9wbGUgdG8gZ3Vlc3RpbWF0ZSB0aGVpciB0YXhlcyBhbmQgcmlzayBmdWNraW5nIHRoZW1zZWx2ZXMgb3Zlci4gClRoaXMgb3BpbmlvbiBwaWVjZSBpbiBQb2xpdGljbyBNYWdhemluZSBhcmd1ZXMgdGhhdCBSZXB1YmxpY2FucyBob3BpbmcgdGhhdCBmb3JtZXIgT2hpbyBHb3YuIEpvaG4gS2FzaWNoLCBvciBhbnkgb3RoZXIgY2FuZGlkYXRlLCB3aWxsIGNoYWxsZW5nZSBQcmVzaWRlbnQgRG9uYWxkIFRydW1wIGZvciB0aGUgR09QIG5vbWluYXRpb24gInNob3VsZCBiZSBjYXJlZnVsIHdoYXQgdGhleSB3aXNoIGZvci4iIFJpY2ggTG93cnksIGVkaXRvciBvZiBOYXRpb25hbCBSZXZpZXcgYW5kIGEgUG9saXRpY28gY29udHJpYnV0b3IsIGFyZ3VlcywgIkJlY2F1c2UgYSBwcmltYXJ5IGNoYWxsZW5nZSB3b3VsZCBuYXR1cmFsbHkgY29tZSBmcm9tIHRoZSBsZWZ0LCBpcyB1bmxpa2VseSB0byBzdWNjZWVkLCBhbmQgaW52b2x2ZXMgYWxpZW5hdGluZyB0aGUgR09QJ3MgZ3Jhc3Nyb290cywgaXQgaXMgbW9zdCBsaWtlbHkgdG8gYXR0cmFjdCBwZW9wbGUgd2hvIGRvbid0IGhhdmUgYSBmdXR1cmUgaW4gR09QIG5hdGlvbmFsIHBvbGl0aWNzIGFuZCBsYWNrIGNvbnNlcnZhdGl2ZSBib25hIGZpZGVzLiIgSGUgaGFzIHRoaXMgdG8gc2F5IGFib3V0IEthc2ljaDogIk9uIHBhcGVyLCBPaGlvJ3MgSm9obiBLYXNpY2ggaXMgZm9ybWlkYWJsZSwgdGhlIGZvcm1lciB0d28gdGVybSBnb3Zlcm5vciBvZiBhIG1ham9yIHN0YXRlIGFuZCBIb3VzZSBSZXB1YmxpY2FuIGJ1ZGdldCBjaGFpcm1hbi4gQnV0IGhlIHdhcyBhbiBlZGd5IGZpZ3VyZSBjaXJjYSAxOTk1LiAKV2l0aCB0aGF0IHF1aWNrIGNhbGN1bGF0aW9uIGRvbmUgeW91IGxvb2sgYXQgdGhlIHBvdCwgc2F5IHlvdSBhcmUgcmFpc2VkIGJ5IDIwMCBpbiB0byBhIHBvdCBvZiA2MDAgd2l0aCAxIGluIDMuMzUgY2hhbmNlIG9mIHN0cmVuZ3RoZW5pbmcgd2l0aCB0d28gY2FyZHMgeWV0IHRvIGNvbWUgeW91IGZpbmQgeW91cnNlbGYgd2l0aCBhIDU5JSBjaGFuY2Ugb2YgbGVhZGluZyB0aGUgaGFuZCB3aXRoIGEgMyB0byAxIHJldHVybiBvbiB5b3VyIG1vbmV5IGFuZCBvbmx5IDEgdG8gMTAgb24geW91ciBjaGlwIHN0YWNrLCBpdHMgZ29vZCB0byBwbGF5LCBpZiBob3dldmVyIHlvdSBhcmUgcmFpc2VkIDIwMDAgeW91IG5vdyBoYXZlIHRvIGNhbGwgMjAwMCBpbiBhIHBvdCBvZiAyNjAwIHlvdSBhcmUgbG9va2luZyBhdCBhIDEuMyByZXR1cm4gb24geW91ciBtb25leSwgeW91IG11c3Qgbm93IHRoaW5rIG9mIGhvdyBmYXIgYmVoaW5kIGFyZSB5b3UgYW5kIHdoYXQgaXMgYmVhdGluZyB5b3UgaWYgeW91IGhpdCBhbnkgb2YgeW91ciBvdXRzLCBhbmQgaWYgeW91ciByYWlzZXIgaXMgaG9sZGluZyBwb2NrZXQgQWNlcyBvciB0ZW5zIHlvdXIgb3VzdCB0byBiZWF0IGhpbSBkcm9wIGRvd24gdG8gOSB3aGljaCBpcyBhIDM4JSBjaGFuY2UgYW5kIHlvdSBoYXZlIHRvIGNhbGwgY2xvc2UgdG8geW91ciBlbnRpcmUgY2hpcCBzdGFjay4KSSB0aGluayB0aGUgZ3V5IHlvdSByZXNwb25kaW5nIHRvIGp1c3QgaGF0ZXMgY2FwaXRhbGlzbSBiZWNhdXNlIGNhcGl0YWxpc20gcmV3YXJkcyBpbnRlbGxpZ2VudCBsYWJvciwgd2hpY2ggdGhleSBhcmUgaW5jYXBhYmxlIG9mIChvciBhdCBsZWFzdCB0aGV5IHRoaW5rIHNvKS4gClRoZSAiZXZlbnQiIGV2ZW4gdGhvdWdoIGl0IHdhc24ndCBzY2llbnRpZmljYWxseSBhY2N1cmF0ZSBvciBwb3NzaWJsZSByZWFsbHksIGF0IGxlYXN0IHNlcnZlZCBhIHB1cnBvc2UgYW5kIGhhZCBhIHJlYXNvbi4gVGhlIG9ubHkgZHJhd2JhY2tzIGFyZSBob3cgYW5ub3lpbmcgV2FobGJlcmcgYW5kIERlc2NoYW5lbCB0ZW5kIHRvIGJlLi4gClNvIHRoZXkgY2FsbGVkIHVzIGluIGEgbGl0dGxlIHdoaWxlIGxhdGVyIGFuZCBzaG93ZWQgdXMgdGhlIGltYWdlcyBvZiB0aGUgc2NhbnMgYW5kIGRpc2N1c3NlZCBldmVyeSBtaW5vciBkZXRhaWwgd2l0aCB1cy4gSSBtdXN0IHNheSwgaWYgd2UgaGFkIGFueSBkb3VidHMgYWJvdXQgdGhlaXIgY29tcGV0ZW5jZSBiZWZvcmUgd2UgbGVmdCBob21lLCB0aGUgZG91YnRzIGhhdmUgYmVlbiBjb21wbGV0ZWx5IHJlcGxhY2VkIHdpdGggY29uZmlkZW5jZS4gVGhleSBleHBsYWluZWQgdGhlIHR5cGVzIG9mIHRyZWF0bWVudHMgYW5kIHdoYXQgdGhleSBjb25zaWRlcmVkIFBldGUncyBiZXN0IG9wdGlvbiBpcywgc28gSSB3aWxsIHRhbGsgYWJvdXQgdGhpcyBpbiBtb3JlIGRldGFpbCB0b21vcnJvdy4uIAoiTXkgZmlyc3QgdG91cm5hbWVudCB3YXMgb24gbXkgMjFzdCBiaXJ0aGRheSwgRGVjLiAxNy4gWW91IGhhZCB0byBiZSAyMSBqdXN0IHRvIGJlIGVsaWdpYmxlIHRvIHBsYXksIiBSYWNlbmVyIHNhaWQuICJJdCBjYW1lIGRvd24gdG8gdGhyZWUgcGxheWVycyBhbmQgd2UgY2hvcHBlZCB1cCB0aGUgd2lubmluZ3MuIFdoZW4gSSBkaWQgdGhlIHNhbWUgdG91cm5hbWVudCBvbiBteSAyMm5kIGJpcnRoZGF5LCBJIHdvbiBldmVyeXRoaW5nLiBNeSBtb20gYW5kIGRhZCBjb3VsZG4ndCBiZWxpZXZlIGl0LiIKSSB0aGluayBtYXliZSBteSBncmFuZGZhdGhlciwgd2l0aCBoaXMgcGFpZCBvZmYgaG91c2UgbGl2ZXMgb24gc29tZXdoZXJlIGluIHRoYXQgbmVpZ2hib3Job29kIG9mIG1vbmV5IGluIHRoZSBhcmVhLCBidXQgaGUgc3RydWdnbGVzLiAKT24gdGhlIGNvbnRyYXJ5LCBSdWJpbidzIGZvdW5kIHRoYXQgVGhlIEhhcHBpbmVzcyBQcm9qZWN0IGhhcyBtYWRlIGhlciBtb3JlIGNvZ25pemFudCBvZiB0aGUgdW5oYXBwaW5lc3Mgc2hlIGRvZXMgZmVlbC4gClN0YXJmaWVsZCBiZWluZyBhIG5ldyBJUCBtZWFucyB0aGV5IHdpbGwgaGF2ZSBhIGxvdCB0byBzaG93IHVzIG9mIGl0IGFuZCBzdGlsbCBsZWF2ZSBhIGdvb2QgYml0IGZvciB1cyB0byBkaXNjb3ZlciBvbiBvdXIgb3duIG9uY2Ugd2UgaGF2ZSB0aGUgZ2FtZS4gCkZvciBuZWFybHkgdHdvIGRlY2FkZXMsIENvbGluIFN0ZWVyIHdvbmRlcmVkIHdoeSBoaXMgbGl2aW5nIHJvb20gZmxvb3IgZGlwcGVkIGEgbGl0dGxlIG5lYXIgdGhlIHNvZmEuIFdlIGFsbCBoYXZlIHRoYXQgc3BvdCBpbiBvdXIgaG91c2UgICB0aGF0IHdlaXJkIGJ1bXAgYnkgdGhlIGJhdGhyb29tLCB0aGUgZGl2b3QgaW4gdGhlIGtpdGNoZW4gICBhbmQgd2UgbmV2ZXIgcmVhbGx5IHRob3VnaHQgdG8gcXVlc3Rpb24gd2hhdCB0aGF0J3MgYWxsIGFib3V0LiAKKFdoZW4gbmVjZXNzYXJ5LCB0aGV5IGFyZSByZW1pbmRlZCB3aXRoIGV4YW1wbGVzIG9mIG90aGVyIChraWQgc2FmZSkgc2l0dWF0aW9ucyBhYm91dCBhZ2UgYXBwcm9wcmlhdGVuZXNzLCBsaWtlIGNvb2tpbmcgb24gdGhlIHN0b3ZlIHdpdGggLyB3aXRob3V0IHN1cGVydmlzaW9uLikuIApUaGUgc2FtZSB3b3VsZCBhcHBseSBmb3IgdmVyeSAid2hpdGUiIGxvb2tpbmcgZm9sa3Mgb2Ygb3RoZXIgIm5vbiB3aGl0ZSIgcmFjZXMsIHdobyBkbyBub3QgaGF2ZSBhbnkgYWN0dWFsIHdoaXRlIGhlcml0YWdlIChJJ3ZlIG1ldCBwZW9wbGUgZnJvbSBhbGwgb3ZlciB0aGUgTWlkZGxlIEVhc3QgYW5kIFNvdXRoIEFzaWEgd2hvIGNvdWxkIHBhc3MgZm9yIHdoaXRlKS4gQW5kIGF0IHRoYXQgcG9pbnQsIEkgdGhpbmsgeW91J3JlIGNyZWF0aW5nIGRpdmlzaW9ucyB0aGF0IGNvdWxkIGJlIGhhcm1mdWwgZm9yIGNvbW11bml0aWVzIGVzcGVjaWFsbHkgd2hlbiBmYWN0b3JpbmcgaW4gY3VsdHVyZSBhbmQgcmVsaWdpb24sIHdoaWNoIGxpa2UgaXQgb3Igbm90LCBkbyBpbnRlcmFjdCB3aXRoIGFwcGVhcmFuY2UgdG8gZGV0ZXJtaW5lIGhvdyBvbmUgaXMgdHJlYXRlZC4gQmVzaWRlcywgb2Z0ZW4sIHRoZXJlIHdpbGwgYmUgZGlzYWdyZWVtZW50IGFzIGFuIGF2ZXJhZ2Ugd2hpdGUgcGVyc29uLCBJIGRvbid0IHRoaW5rIEpvam8ncyBtb20gbG9va3Mgd2hpdGUuIEJ1dCB5b3UgZG8uIERvZXMgc2hlIGdldCB0byBiZSBhIFBvQyBvciBub3Q/IFdobyBkZWNpZGVzPyBJZGssIEkganVzdCB0aGluayBpdCBjcmVhdGVzIGFuIGF3a3dhcmQgc2l0dWF0aW9uLgpBIHNldCBvZiBmYWN0cyB0ZW5kZXJlZCB0byB0aGUgY291cnQgYWZ0ZXIgSGFycm9kJ3MgZ3VpbHR5IHBsZWEgc2FpZCB0aGUgNDkgeWVhciBvbGQgJydmYWxzaWZpZWQgdmFyaW91cyBjb3Jwb3JhdGUgYm9vayBrZWVwaW5nIHJlY29yZHMnJyBpbiBvcmRlciB0byBkaXNndWlzZSBhbmQgaGlkZSB0aGUgZnJhdWQuIApBIHNvY2lhbGlzdCBnb3Zlcm5tZW50IHdvdWxkIG5hdGlvbmFsaXNlIHRoZSBjb21tYW5kaW5nIGhlaWdodHMgb2YgdGhlIGVjb25vbXkgIHRoZSBodWdlIGJpbGxpb24gZG9sbGFyIGluZHVzdHJpZXMgYW5kIHRoZSBiYW5rcy4gVW5kZXIgYSBuYXRpb25hbGlzZWQgZWNvbm9teSB0aGVzZSBhcnRpc2FucyB3b3VsZCBiZW5lZml0IGZyb20gZGVjZW50IGxvYW5zIG9uIHRoZSBiYXNpcyBvZiBiYW5rcyBydW4gZm9yIG5lZWQgbm90IHByb2ZpdC4uIApVbSwgeWVhaC4gCkRhcyBHdXRhY2h0ZW4gd3VyZGUgbmFjaCBzb3JnZmx0aWdlciBiZXJsZWd1bmcgdW5kIHppZWxnZXJpY2h0ZXQgaW4gQXVmdHJhZyBnZWdlYmVuLCB1bSBlaW4gRmVlZGJhY2sgdm9uIHJ1bmQgMS4zMDAgQ2FzaW5vIEdhbWVzIG4gYmVyIGlocmUgRXJmYWhydW5nZW4gbWl0IHMgdW5kIGlocmUgRXJ3YXJ0dW5nZW4gYW4gZWJlbmRpZXNlIHp1IGVyaGFsdGVuLiAKSSB3YXMgYWxzbyB2ZXJ5IGRpenp5LiAKTGFkeSBHYUdhKSwgR3JlYXRlc3QsIEhvbGx5d29vZCBbTGl2ZSBBdCB0aGUgQml0dGVyIEVuZCAxLzIwLzA2XSAsIFNvbWV0aW1lcyAuIDkzKSBUaGlzIHNvbmcgaXMgb24gdGhlICJCb3JuIFRoaXMgV2F5IiBhbGJ1bSwgYnV0IHRoZSBkaWZmZXJlbnQgdmVyc2lvbnMgdGhhdCBjYW4gYmUgZm91bmQgb24geW91dHViZSBhcmUgdmVyeSB1bmlxdWUgaW4gY29tcGFyaXNvbi4gSXQgaXMgY2FsbGVkOiBZb3UgYW5kIEkuIApTaGUgbm93IGhhcyB0byBmb3Igc29tZXRoaW5nIHRoYXQgYXQgdGhlIHRpbWUgc2VlbWVkIHJpZ2h0LCB3aGljaCBpcyBleHRyZW1lbHkgcmFyZSBpbiB3YXJjcmFmdC4gCkhvcGVmdWxseSB0aGVzZSBmb3JtZXIgdGVhY2hlcnMgd2lsbCBiZWdpbiB0byBzZWUgdGhhdCB1bml2ZXJzaXRpZXMgYXJlIG5vdCBhYm91dCB0aGUgYm90dG9tIGxpbmUgb3IgdGhlICJwZXJmZWN0IiBlZHVjYXRpb24gdHJhZGVkIG9uIHRoZSBmdXR1cmVzIG9mIG91ciBzdHVkZW50cy4gSG9wZWZ1bGx5IGEgdW5pdmVyc2l0eSBwcmVzaWRlbnQgd2lsbCBzdGFuZCB1cCBzb29uIGFuZCBkZW1hbmQgYW4gZW5kIHRvIGRlYnQgZm9yIGRpcGxvbWEgc3RhcnRpbmcgd2l0aCBoaXMgb3IgaGVyIG93biBzYWxhcnkuIApBZnRlciB0aGUgMiBob2xlIGNhcmRzIGFyZSBkZWFsdCB0aGVyZSBpcyBhIHJvdW5kIG9mIGJldHRpbmcuIApTaW5jZSBsYXN0IHllYXIsIHRoZSB3b3JsZCdzIHR3byBsYXJnZXN0IGVjb25vbWllcyBoYXZlIGV4Y2hhbmdlZCB0aXQgZm9yIHRhdCB0YXJpZmZzIG9uIG1vcmUgdGhhbiAkMzYwIGJpbGxpb24gaW4gdHdvIHdheSB0cmFkZSwgd2l0aCB0aGUgbGFyZ2VzdCBhbW91bnQsIG1vcmUgdGhhbiAkMjUwIGJpbGxpb24sIGltcG9zZWQgYnkgV2FzaGluZ3Rvbi4KSWYgdGhleSBkb24gSSBzZW5kIHRoZW0gdG8gYSBkaWdpdGFsIGFnZW5jeS4gCldoZW4geW91IGluIGEgY2FyLCBpdCBsaWtlIGJlaW5nIG9uIHRoZSBJbnRlcm5ldC4gWW91ciBicmFpbiBzd2l0Y2hlcyBvdmVyIHRvIGEgZGlmZmVyZW50IG1vZGUgb2YgdGhpbmtpbmcuIFlvdSBzZWUgZXZlcnlvbmUgZWxzZSBvbiB0aGUgcm9hZCBhcyBjYXJzIGluc3RlYWQgb2YgcGVvcGxlIERyaXZpbmcgdHVybnMgaW50byBhIGdhbWUgd2hlcmUgaXQganVzdCB5b3Ugc3Vycm91bmRlZCBieSBhbiBOUEMgYXVkaWVuY2UuIFRoaXMgaXMgYmVjYXVzZSB0aGVyZSBpcyBubyB0aHJlYXQgb2YgZmFjZSB0byBmYWNlIHBoeXNpY2FsIGNvbmZyb250YXRpb24gd2hlbiB5b3UgZ29pbmcgNjAuIFBlb3BsZSBvZnRlbiBjYW4gc2VlIHlvdXIgZmFjZSwgc28geW91IGhhdmUgYSBkZWdyZWUgb2YgYW5vbnltaXR5LgpCYWVuIEJvb2tzIE1hbnRpY29yZSBBc2NlbmRhbnQgc2VyaWVzIGJ5IERhdmlkIFdlYmVyIGFuZCBUaW1vdGh5IFphaG4uLiAKSGUgaGFzIGxvbmcgYmVlbiBhIHN0YXBsZSBvZiB0aGUgY291bnRyeSBtdXNpYyBzY2VuZSBldmVuIHRob3VnaCBoZSBzZWVtcyB0byBiZSBhIGJpdCBiZWhpbmQgdGhlIHRpbWVzIHdoZW4gaXQgY29tZXMgdG8gdGhlIHBvcCBtdXNpYyB0aGF0IG5vdyBwYXNzZXMgZm9yIGNvdW50cnkuIApJIHN0aWxsIGdvdHRhIHdvbmRlciB3aHkgdGhpcyB3YXNuIHRoZSBiYXNlbGluZSB0byBiZWdpbiB3aXRoLiBWaXJ0dWFsbHkgYWxsIG9mIHRoZSByaXNrIGlzIGluIGxhdW5jaCwgcmVuZGV6dm91cy9kb2NraW5nLCBvciByZWVudHJ5LCBzdHJldGNoaW5nIHRoZSBJU1Mgc3RheSBzaG91bGQgaGF2ZSBiZWVuIGxpdHRsZSB0cm91YmxlLiBNb3ZpbmcgdG8gYSAzIG1lbWJlciBjcmV3IGlzIGEgbXVjaCBiaWdnZXIgcmlzay4gRGVkaWNhdGVkIGRlbW8gZmxpZ2h0cyByZWFsbHkgb25seSBtYWtlIHNlbnNlIHdoZW4gdGhlIGRpZmZlcmVuY2UgZnJvbSB0aGUgZnVsbCBtaXNzaW9uIHByb2ZpbGUgaXMgdmVyeSBzaWduaWZpY2FudCAoQXBvbGxvIDcgdnMgOCB2cyAxMCB2cyAxMSkuIEFuZCBhdCBhIGZldyBodW5kcmVkIG1pbGxpb24gcGVyIGZsaWdodCAoYW5kIGEgbWF4aW11bSBvZiA2IHBvc3QgY2VydGlmaWNhdGlvbiBtaXNzaW9ucyBwZXIgY29udHJhY3RvciBiZWZvcmUgQ0MyKSwgdGhhdHMgYSBiaWcgaGl0CkNFUywgdGhlIHdvcmxkJ3MgbGFyZ2VzdCBhbm51YWwgY29uc3VtZXIgdGVjaG5vbG9neSB0cmFkZSBzaG93LCBydW5zIHRocm91Z2ggSmFudWFyeSAxMSBhbmQgaXMgZXhwZWN0ZWQgdG8gZmVhdHVyZSAzLDEwMCBleGhpYml0b3JzIHNob3dpbmcgb2ZmIHRoZWlyIGxhdGVzdCBwcm9kdWN0cyBhbmQgc2VydmljZXMgdG8gYWJvdXQgMTUwLDAwMCBhdHRlbmRlZXMuLiAKT3Iga2lsbGluZyBhbm90aGVyIHRvIHNhdmUgeW91cnNlbGYuIApUaGVyZSBpcyBubyBldmlkZW5jZSBmb3IgdGhlIE9obG9uZSBjbGFpbSwgYW5kIGV2ZW4gT2hsb25lIGFyZW4ndCBpbnRlcmVzdGVkLgpJIGNhbiBnbyBtb3JlIGludG8gZGV0YWlsIG9uIHRoaXMgaWYgeW91J2QgbGlrZS4gClRlbiBvciBzbyB5ZWFycyBhZ28sIGluc3VyYW5jZSBjb21wYW55IHRyYWlsYmxhemVycywgbGFyZ2VseSBpbiByZXNwb25zZSB0byBjb25zdW1lciBkZW1hbmQsIHNldCB1cCBpbiBob3VzZSBtZW1iZXIgYWNjZXNzIHRvIENBTSBhbmQgaW50ZWdyYXRpdmUgaGVhbHRoIGNhcmUuIEthaXNlciBQZXJtYW5lbnRlIGlzIGEgZ29vZCBleGFtcGxlLiAKVGhlIGZ1bm55IHRoaW5nIHdhcyB0aGF0IHRoZXJlIHdhcyBhbm90aGVyIGFydGljbGUgb24gZXhhY3RseSB0aGF0IHF1aWV0LiBBbmQgdGhpcyB3YXMgYSBkYW5nZXJvdXMgcXVpZXQsIGF0IGxlYXN0IGZvciB0aGUgb3JpZ2luYXRvciBvZiB0aGUgdGhlb2xvZ2ljYWwgbW92ZW1lbnQsIHdobyB3b3VsZCBiZSBjYXN0IGludG8gdGhlIGZsYW1lcyBvZiB0aGUgSW5xdWlzaXRpb24gYW5kIGRpZSBpbiBwcmlzb24gZm9yIHRoZSB0ZW1lcml0eSBvZiBxdWlldHVkZS4KQnV0LCB0aGUgY291cnNld29yayBuZXZlciB0b29rIGEgcmVhbCBkaXZlIGludG8gc3RhdHMsIGJ1dCBqdXN0IHRhdWdodCB2YXJpb3VzIGFsZ29yaXRobXMuIApJIGhhdmUgZ290dGVuIG1hbnkgY29tbWlzc2lvbnMvY29udHJhY3RzIGJlY2F1c2Ugc29tZW9uZSBzYXcgbXkgd29yayBwb3N0ZWQgb24gcmVkZGl0IG9yIHR3aXR0ZXIgKHdoaWNoIEkgZG9uIGV2ZW4gdXNlKSBhbmQgdGhleSBsb29rZWQgbWUgdXAuSSBkb24gZXZlbiB0aGluayBpdCB1cCBmb3IgZGViYXRlIGFueW1vcmUgdGhhdCBwZW9wbGUgYXJlIG1vcmUgbGlrZWx5IHRvIHZpZXcgYSBkaXJlY3QgaW1hZ2UgbGluayB0aGFuIHRvIGJyb3dzZSBzb21lIHdlYnNpdGUgdGhhdCBtaWdodCByZXF1aXJlIGEgbG9naW4gKGxvb2tpbmcgYXQgeW91IFBpeGl2KS4gClRoZWlyIG1hcnJpYWdlIGlzIG9uIHRoZSByb2NrcyBhbmQgc2hlIGlzbid0IHN1cmUgc2hlIHdhbnRzIHRvIHN0YXkgd2l0aCBoaW0uIFNoZSB0aGlua3Mgc2hlIHNob3VsZCBmb3IgdGhlIGtpZHMnIHNha2UuIApDaXRlbGxpIGFuZCBCcmV0emVsIGhhdmUgYmVlbiB3b3JraW5nIG9uIHRoZSBkZXNpZ24gb2YgdGhlIHRyZWUgcG9kIGZvciBhIGRlY2FkZSwgYW5kIHByb2R1Y2VkIGEgaGFuZGNyYWZ0ZWQgcHJvdG90eXBlIGxhc3QgeWVhci4gVGhleSByZWNlbnRseSBzdGFydGVkIGEgS2lja3N0YXJ0ZXIgcGFnZSB0byByYWlzZSBtb25leSBmb3IgdGhlIGluZHVzdHJpYWwgdmVyc2lvbiBvZiB0aGUgY29mZmluLCB3aGljaCB3b3VsZCBtYWtlIGl0IGVhc2llciB0byBwcm9kdWNlIG1hbnkgb2YgdGhlIHBvZHMgYXQgYSBsb3dlciBjb3N0Li4gCkxvY2FsIE5ld3NCcm93YXJkIFNjaG9vbHMgT2ZmaWNpYWxseSBBbm5vdW5jZSBCcmlhbiBLYXR6IEFzIENoaWVmIE9mIFNhZmV0eSBTZWN1cml0eVRoZSBCcm93YXJkIFNjaG9vbCBEaXN0cmljdCBvbiBGcmlkYXkgaGFzIG9mZmljaWFsbHkgYW5ub3VuY2VkIEJyaWFuIEthdHogYXMgdGhlIG5ldyBhbmQgZmlyc3QgZXZlciBDaGllZiBvZiBTYWZldHksIFNlY3VyaXR5LCBhbmQgRW1lcmdlbmN5IFByZXBhcmVkbmVzcy4KQWZ0ZXIgdGhpcyBJIHR1cm5lZCBpdCBvZmYsIGFuZCBhIGNvdXBsZSBvZiB3ZWVrcyBsYXRlciBJIHJldHVybmVkIHRvIGl0LCBhbmQgdGhhdCB3aGVuIEkgY29tcGxldGVseSBmZWxsIGZvciB0aGUgZW50aXJlIGFsYnVtLiBBbmQgdGhhdCByZWFsbHkgaG93IEkgZmVsbCBmb3IgVE1WIGFuZCBQcm9nIGluIGdlbmVyYWwuIApJIHdlbnQgdG8gdGhlIENFTywgYmVjYXVzZSBoZSBzaG91bGQgY2FyZSBqdXN0IGFzIG11Y2ggYXMgSSBkbywgYW5kIHByb2JhYmx5IG1vcmUsIGFib3V0IGJlaW5nIGFibGUgdG8gdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIG1lZ2EgYmFja2Rvb3IgUm90aC4gCkkgd29uICQzMGsgb24gYSBzY3JhdGNoIHRpY2tldCBhIHllYXIgYWZ0ZXIgdGhhdC4KRW5zdWl0ZSBjZSBwcm9jZXNzdXMgaidhcnJpdmUgIGwnYXZvaXIgYXVqb3VyZCdodWksIGNlIG4ndGFpdCBwYXMgbGUgY2FzIGlsIHkgYSB1biBhbi4gSmUgcGVuc2UgcXUnaWwgeSBhIHF1YW5kIG1tZSB1biBlZmZvcnQsIHVuIHRyYXZhaWwgIGZhaXJlIHBvdXIgYXBwcmVuZHJlICBvYnNlcnZlciBldCByZSBjb25zaWRyZXIgbm9zIG1vdGlvbnMgc2FucyBqdWdlbWVudCBuaSBzdXIgY291Y2hlLiAKQmFydGlzZ29kICA5IHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KVmlsbGFpbiB0dXJucyBvdmVyIGhpcyBoYW5kIHNhaWQgaGUgZmxvcHBlZCB0aGUgc3RyYWlnaHQgYXMgd2VsbC4gCiJPdXRzaWRlIHRheCwgd2Uga25vdyB0aGF0IGNsdWJzIGhhdmUgYSBzb2NpYWwgaW1wYWN0IG9mIGFib3V0ICQ4NTAgbWlsbGlvbiBwZXIgYW5udW0gb2Ygd2hhdCB0aGV5IHB1dCBiYWNrIGludG8gdGhlIGNvbW11bml0eS4gVGhhdCBpbmNsdWRlcyBtYWludGFpbmluZyBmb290YmFsbCBmaWVsZHMsIGFzc2lzdGluZyB2ZXRlcmFucywgcHV0dGluZyBlcXVpcG1lbnQgdG8gc3VyZiBsaWZlc2F2ZXJzLiBCb3Mgc2FpZCBjbHVicycgbWVtYmVyc2hpcCByZXF1aXJlbWVudCBwdXQgdGhlbSBpbiBhIHVuaXF1ZSBwb3NpdGlvbiB0byBtb25pdG9yIGhvdyBtdWNoIHBlb3BsZSB3ZXJlIHNwZW5kaW5nIG9uIHBva2VyIG1hY2hpbmVzIGFuZCBpZGVudGlmeSBwb3RlbnRpYWwgcHJvYmxlbSBnYW1ibGVycy4KV2VyIGluIEQgbWFsIEhvdCBQb3QgYXVzcHJvYmllcmVuIG0gZGVtIHNlaSBkYXMgUmVzdGF1cmFudCBTaWNodWFuIGVtcGZvaGxlbi4gCklzIHRoZXJlIGEgc3RvcnkgYmVoaW5kIHRoZSBuYW1lP0EuIFllcyEgQXMgd2Ugd2VyZSB3b3JraW5nIHRvZ2V0aGVyIGluIFZpZW5uYSwgd2Ugd2VyZSBnb2luZyB0aHJvdWdoIGh1bmRyZWRzIG9mIHBvdGVudGlhbCBuYW1lcy4gV2Ugd2FudGVkIGEgRmlubmlzaCByZWZlcmVuY2UsIGJ1dCBldmVyeXRoaW5nIHdlIGxpa2VkIHdhcyB0YWtlbi4gV2Ugc3RhcnRlZCB0byBwbGF5IHdpdGggd29yZHMgYW5kIGNhbWUgdXAgd2l0aCBLdWthbXVrYS4gSXQgRmlubmlzaCB5ZXQgc291bmRzIEphcGFuZXNlLCBpbiBTd2FoaWxpIGl0IG1lYW5zIGdvIGluIHRoZSBUdW1idWthIGxhbmd1YWdlLCBpdCBpcyBvbmUgd29yZCBmb3IgdGhlIHN1biBpdCBhIG5hbWUgeW91IGNhbiBoYXZlIGZ1biB3aXRoISBJdCBzdWl0cyB1cyB3ZWxsLCBpdCBub3QgdG9vIHNlcmlvdXMgYW5kIHdvcmtzIGFueXdoZXJlIGluIHRoZSB3b3JsZC5RLiAKSXQgYWxsIGJlZ2luIHdpdGggYW4gZWFzeSwgb24gdGltZSBmbGlnaHQgdG8gSkZLIHRvIG1lZXQgV2VuZGkgdG8gc3RhcnQgb3VyIGFkdmVudHVyZSB0byBTeXJpYS4gV2hlbiBJIHRvbGQgcGVvcGxlIEkgd2FzIGdvaW5nIG9uIHZhY2F0aW9uIHRvIFN5cmlhLCBldmVyeW9uZSB3YW50ZWQgdG8ga25vdyBvbmUgdGhpbmc6IFdoeT8gRm9yIHNvbWUgcmVhc29uLCBJIGJlZW4gZmFzY2luYXRlZCB3aXRoIFN5cmlhIGZvciAgU3lyaWEgaXMgaG9tZSB0byBzb21lIG9mIHRoZSBvbGRlc3QsIGNvbnRpbnVvdXNseSBpbmhhYml0ZWQgdG93bnMgaW4gdGhlIHdvcmxkLiBVbmZvcnR1bmF0ZWx5IFdlbmRpIGFuZCBJIGFsbW9zdCBkaWRuIG1ha2UgaXQgd2hlbiBvdXIgZmxpZ2h0IHRvIElzdGFuYnVsIHdhcyBkZWxheWVkIGZvdXIgaG91cnMhLiAKQmVmb3JlIHlvdSBibGFtZSB0aGUgY2VudHJhbCBiYW5rIGZvciB0aGUgc2xvd2Rvd24sIGtlZXAgaW4gbWluZCB0aGF0IHRoZSBwb2xpY3kgcmF0ZSB3YXMgYSByaWRpY3Vsb3VzbHkgbG93IDAuNSBwZXIgY2VudCBpbiBlYXJseSAyMDE3LCBhbmQgdGhlIGN1cnJlbnQgcmF0ZSBpcyBvbmx5IDEuNzUgcGVyIGNlbnQuIFBvbG96IGlzIG5vIEpvaG4gQ3JvdywgdGhlIGZvcm1lciBCYW5rIG9mIENhbmFkYSBnb3Zlcm5vciBrbm93biBmb3IgcHV0dGluZyBsb3cgaW5mbGF0aW9uIGFoZWFkIG9mIGVjb25vbWljIGdyb3d0aC4gVGhlIGN1cnJlbnQgaGVhZCBvZiB0aGUgY2VudHJhbCBiYW5rIHNhaWQgYWxsIGFsb25nIHRoYXQgaGUga25ldyBob3VzZWhvbGRzIHdvdWxkIGJlIHNlbnNpdGl2ZSB0byBoaWdoZXIgaW50ZXJlc3QgcmF0ZXMsIGlmIG9ubHkgYmVjYXVzZSBib3Jyb3dpbmcgY29zdHMgaGFkIGJlZW4gc28gbG93IGZvciBzbyBsb25nLiBUaGVyZSB3ZXJlIGdvb2QgYXJndW1lbnRzIGZvciByYWlzaW5nIGludGVyZXN0IHJhdGVzIGV2ZW4gaGlnaGVyLCB5ZXQgUG9sb3ogcmVzaXN0ZWQuIEhlIGtuZXcgdGhlIGVjb25vbXkgd2Fzbid0IHJlYWR5LgpUaGUgNDAgeWVhciBvbGQgQW1lcmljYW4gaGFzIGJlZW4gZmlnaHRpbmcgdG8gcmVjb3ZlciB0aGUgbW9uZXkgc2luY2Ugc3VjY2Vzc2Z1bGx5IHBsYXlpbmcgYSB2ZXJzaW9uIG9mIGJhY2NhcmF0IGtub3duIGFzIFB1bnRvIEJhbmNvIGF0IENyb2NrZm9yZHMgQ2x1YiBpbiBNYXlmYWlyIGluIDIwMTIuCkFwcGFyZW50bHksIHRoZSBHaXJsIFNjb3V0cyB3YW50IHRoZSBCb3kgU2NvdXRzIHRvIGtlZXAgdGhlIG1hc2N1bGluZSBhc3BlY3Qgb2YgdGhlaXIgdGl0bGUgaW50YWN0LCBzbyB0aGF0IGdpcmxzIHdpbGwgYmUgYXR0cmFjdGVkIHRvIHRoZSBub3ZlbHR5IG9mIGJlaW5nIHBhcnQgb2YgYSBib3lzIGdyb3VwLCBhbmQgYmUgZHJhd24gdG8gdGhlIGFsbHVyZSBvZiBlbmdhZ2luZyBpbiBtYXNjdWxpbmUgYWN0aXZpdGllcywgYXMgb3Bwb3NlZCB0byB0aGUgcHJpbWFyaWx5IGZlbWluaW5lIGFjdGl2aXRpZXMgdGhhdCB0aGUgZ2lybHMgdXN1YWxseSBlbmdhZ2UgaW4uCk9uZSBkYXkgaGUgZGVjaWRlZCBoZSB0YWtlIGl0IGZvciBhIHF1aWNrIHRlc3QgZHJpdmUgZG93biB0aGUgc3RyZWV0IGFuZCBiYWNrIGp1c3QgYXMgYSBxdWljayBzaGFrZWRvd24gb24gc29tZSB0cmFuc21pc3Npb24gd29yayBoZSBoYWQgZG9uZSwgYW5kIHdvdWxkbiB5b3Uga25vdyBhIGNvcCBzYXcgaGltIGFuZCBwdWxsZWQgaGltIG92ZXIuIApObywgaXQgd2FzIGEgb25jZSBpbiBhIGxpZmV0aW1lIHRoaW5nLiBHcmltbSB3YXMgZmlsbWVkIGluIFBvcnRsYW5kLCBPUiAobmVhciBtZSkgZm9yIDYgc2Vhc29ucy4gVGhleSBoYWQgdG9ucyBvZiBwcm9wcyB0aGF0IHdlbnQgb24gc2FsZSBhZnRlciB0aGUgc2hvdyBlbmRlZC4gClRoaXMgdGltZSBhcm91bmQgdGhvdWdoLCB3ZSB3ZXJlbid0IHB1cmNoYXNpbmcgdGhlIDMwMCBQYXVsc29uIFBoYXJvYWggQ2FzaW5vIFRvcCBIYXQgUG9rZXIgQ2hpcCBTZXQgd2l0aCBBbHVtaW51bSBDYXNlIGFzIGEgZ2lmdCBmb3Igb3Vyc2VsdmVzLiBJbiBmYWN0LCB3ZSBhbHJlYWR5IG93biBvbmUuIEhvd2V2ZXIsIGEgY291cGxlIG9mIGZyaWVuZHMgb2Ygb3VycyBoYWQgYmVlbiBjb21wbGltZW50aW5nIHRoZSBwcm9mZXNzaW9uYWwgYW5kIHJpY2ggYXBwZWFsIHRoaXMgUG9rZXIgQ2FyZCBDaGlwIFNldCBnYXZlIG9mZiB0byBhbiBlbnRpcmUgcm9vbS4gS2VlcCBpbiBtaW5kIHRoZXkgZGlkbid0IHNheSBpdCBvbmNlLCBidXQgZXZlcnkgc2luZ2xlIHRpbWUgd2UgaGFkIHRoZW0gb3ZlciBmb3IgYSBuaWdodCBvZiBwb2tlci4KUGF0aWVudCBTdG9yaWVzID4KIk5vIHNleCwiIHNoZSByZWNhbGxzIHRoZSBhZCBzYXlpbmcsIGFjY29yZGluZyB0byB0aGUgcmVwb3J0LlRoZSBnaXJsLCB3aG8gd29ya2VkIGF0IENvaWwncyBob21lIGFzIHJlY2VudGx5IGFzIHRoaXMgbW9udGgsIG1ldCBoaW0gaW4gT2N0b2JlciwgdGhlIHJlcG9ydCBzYWlkLiBIZSB0b29rIGhlciB0byBoaXMgaG91c2UsIHNlcnZlZCBoZXIgYWxjb2hvbCBhbmQgZXhwbGFpbmVkIHdoYXQgdGhlIGpvYiB3b3VsZCBlbnRhaWwuIFNoZSB3YXMgaGVzaXRhbnQgYXQgZmlyc3QgYnV0IGFncmVlZCB0byB0aGUgd29yay5UaHJlZSBvdGhlcnMgd2VyZSBlbXBsb3llZCBieSBDb2lsIHdoZW4gc2hlIGpvaW5lZCwgdGhlIHJlcG9ydCBzYWlkLiAKVGhlIG9ubHkgcHJvYmxlbSB3aXRoIHNpbGljb25lIGNhc2VzIGlzIHRoYXQgdGhleSBjYW4gb25seSBwcm90ZWN0IHRoZSBiYWNrIG9mIHRoZSBwaG9uZSwgc28gcXVhbGl0eSBhbmQgZHVyYWJsZSBwbGFzdGljIGFuZCBkZXNpZ24gdG8gZml0IGlQaG9uZSAzRy4gCklmIEkgdW5kZXJzdGFuZCB5b3VyIHF1ZXN0aW9uLCB5b3UgYXJlIHJlZmVycmluZyB0byBhIGhpZXJhcmNoaWNhbCBsYW5ndWFnZSBzdHJ1Y3R1cmUgaW4gd2hpY2ggdGhlcmUgYXJlIGRpZmZlcmVudCBsZXZlbHMgb2YgZm9ybWFsaXR5IGRlcGVuZGluZyBvbiB0aGluZ3MgbGlrZSBzb2NpYWwgc3RhdHVzLCBmcmllbmRzaGlwLCBmYW1pbGlhbCByZWxhdGlvbnNoaXAsIHJhbmsgZXQgYWwuIElmIHNvLCBoZXJlIGlzIGEgbmljZSBxdWljayBhbmQgZGlydHkgYnJlYWtkb3duIG9mIHRoZSBzZXZlbiBsZXZlbHMgb2Ygc3BlZWNoIGluIEtvcmVhbi4gSXQgZ2l2ZXMgYSBzbWFsbCBleGFtcGxlIG9mIHdoZW4gdGhleSBhcmUgdXNlZCwgc28gdGhpcyBzaG91bGQgYmUgYSBnb29kIHN0YXJ0aW5nIHBvaW50IGZvciB5b3UuIFRoZXJlIGFyZSBiZXR0ZXIgcmVzb3VyY2VzLCBidXQgbWFueSBvZiB0aGVtIHByb3ZpZGUgZXhhbXBsZXMgd3JpdHRlbiBvbmx5IGluIEhhbmd1bC4gSW4gcmVhbGl0eSwgb25seSB0aHJlZSBvZiB0aGVtIGFyZSB1c2VkIGluIGV2ZXJ5ZGF5IHNwZWVjaDogZm9ybWFsLCBwb2xpdGUsIGFuZCBpbmZvcm1hbCwgd2hpY2ggaXMgZnVydGhlciBleHBsYWluZWQgaW4gdGhpcyBhcnRpY2xlLiBJIGRvIG5vdCBrbm93IGhvdyB1c2VmdWwgdGhpcyB3b3VsZCBiZSB0byB5b3Ugc2luY2UgS29yZWFuIGlzIGFuIGFnZ2x1dGluYXRpbmcgbGFuZ3VhZ2UsIGJ1dCBpdCBzaG91bGQgc3RpbGwgZ2l2ZSB5b3Ugc29tZSB0aGluZ3MgdG8gY29uc2lkZXIgd2hlbiBpbmNvcnBvcmF0aW5nIHNvbWV0aGluZyBsaWtlIHRoaXMgaW4geW91ciBsYW5ndWFnZS4KNDIgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvaSBsaWtlIHRoZSBpZGVhIG9mIHVzaW5nIG1hcHMgZnJvbSB0aGUgd2hvbGUgeWVhciwgYnV0IHRoZXJlIDIgbWFpbiBwcm9ibGVtcyB3aXRoIGxldHRpbmcgdGhlIHBsYXllcnMgY2hvb3NlIHRoZW06bGlrZSBvdGhlcnMgaGF2ZSBtZW50aW9uZWQsIHRoZXkgZmF2b3IgZXh0cmVtZWx5IHN0YW5kYXJkIG1hcHMsIGxlYWRpbmcgdG8gZ2FtZXMgd2l0aCBsaXR0bGUgZXhwZXJpbWVudGF0aW9ucGxheWVycyBmcm9tIGVhY2ggcmFjZSB3b3VsZCBzcGVjaWZpY2FsbHkgdm90ZSBmb3IgbWFwcyB3aXRoIGZhdm9yYWJsZSB3aW4gcmF0ZXMgZm9yIHRoZW0uIElmIG1vcmUgcGxheWVycyBvZiBvbmUgcGFydGljdWxhciByYWNlIG1ha2UgaXQgdG8gYmxpenpjb24sIHRoZXkgY2FuIGVzc2VudGlhbGx5IHJpZyB0aGUgbWFwIHBvb2wgaW4gdGhlaXIgZmF2b3IuIApIb3cgZG8geW91IGtub3cgdGhhdCB0aGlzIGlzIHRoZSBwcm9ibGVtPyBIYXZlIHlvdSBjb25zdWx0ZWQgYSBkb2N0b3Igb3Igc29tZW9uZSB3aG8gcXVhbGlmaWVkIHRvIG1ha2Ugc3VjaCBhIGp1ZGdlbWVudD8gQXJlIHlvdSBqdXN0IGFzc3VtaW5nIGJlY2F1c2UgeW91IHRoaW5rIHlvdSBhbiBleHBlcnQ/IElmIHlvdSBoYXZlIGNvbnN1bHRlZCBhIGRvY3RvciB0aGVuIGhlL3NoZSBzaG91bGQgdG9sZCB5b3Ugd2hhdCB0byBkby4gClBvbGljZSBzbmF0Y2ggdG9kZGxlciBmcm9tIG1vbSdzIGFybXMgaW4gQnJvb2tseW4gYmVuZWZpdHMgb2ZmaWNlClRoZW4gb24gQXVnLiAzMCwgMTkxOSwgYXMgdGhlIHdvcmxkIHdhcyByZWJ1aWxkaW5nIGFmdGVyIHRoZSBGaXJzdCBXb3JsZCBXYXIsIEVkbW9udG9uIGNpdHkgcG9saWNlIENvbnN0LiAKQ3JvY2tmb3Jkcywgb3duZWQgYnkgTWFsYXlzaWEgYmFzZWQgR2VudGluZywgcHJvYmFibHkgd2Fzbid0IGNvbXBsYWluaW5nIHdoZW4gSXZleSBxdWlja2x5IGxvc3QgJDgwMCwwMDAsIHRoZSBwYXBlciBzYWlkLiBCdXQgdGhlbiBoZSBhbmQgYW4gdW5pZGVudGlmaWVkIGdvcmdlb3VzIGNvbXBhbmlvbiwgd2hvbSBDcm9ja2ZvcmRzIGxlYXJuZWQgaGFkIGhlciBtZW1iZXJzaGlwIHJldm9rZWQgYnkgYW5vdGhlciBjYXNpbm8sIGxhdW5jaGVkIGFuIGltcHJlc3NpdmUgcnVuIG92ZXIgdHdvIG5pZ2h0cy4KMikgaW5zaXN0IHlvdSBnZXQgYSBsYXd5ZXIuSXQgaXMgbm90IGFueW9uZSdzIGpvYiB0byBhc3N1bWUgdGhlIHNldmVyaXR5IG9mIGFuIGFsbGVyZ3kvZGlldGFyeSByZXN0cmljdGlvbi4gQXMgc29tZW9uZSB3aG8gd29ya3MgaW4gYSByZXN0YXVyYW50LCB5b3Ugc2hvdWxkIHRyZWF0IGV2ZXJ5IGd1ZXN0IHdpdGggY2FyZS4gU2FtZSBnb2VzIGZvciBkaWV0IHNvZGEgdnMgcmVndWxhciwgZGVjYWYgY29mZmVlIHZzIHJlZ3VsYXIuIFlvdSBkb24ndCBrbm93IGlmIHNvbWVvbmUgaGFzIGEgaGVhcnQgcHJvYmxlbSBvciBkaWFiZXRlcy4gClJlZ2lzdGVyZWQgYXMgYSBtZWRpY2FsIGNsaW5pYywgaXQgb2ZmZXJzIGEgd2lkZSByYW5nZSBvZiBzcGEgYW5kIGhvbGlzdGljIG1lZGljYWwgdHJlYXRtZW50cywgc3VjaCBhcyBhY3VwdW5jdHVyZSBhbmQgQXl1cnZlZGljIHRoZXJhcGllcywgYW5kIGFjdGl2aXRpZXMgbGlrZSB0YWkgY2hpIGFuZCBQaWxhdGVzIChpbiB0aGUgY291bnRyeSdzIG9ubHkgUGlsYXRlcyBzdHVkaW8pLiAKSG9uZXN0IGZlZWRiYWNrIG9uIHRoZSBTcGVjdHJlOiBpdCBzZWVtcyBsaWtlIHRoZSBzaWxlbmNlIGVmZmVjdCBpbiBpdHMgY3VycmVudCBmb3JtIGlzIHRvbyBnb29kIGF0IG5ldXRyYWxpemluZyBjYXN0ZXJzLCBlc3BlY2lhbGx5IGluIHRoZSBtaWQgZ2FtZSB3aGVyZSBtb3N0IGFyZSBhZmZlY3RlZCBieSBzaWxlbmNlLiAKVGhhbmsgeW91ISBJJ3ZlIGJlZW4gb3V0IG9mIG15IHBhcmVudHMgY2FyZSBzaW5jZSAxNyBhbmQgZnVsbHkgb24gbXkgb3duIChyb29tIHJlbnRpbmcpIHNpbmNlIDE4LiBNeSBodXNiYW5kIChib3lmcmllbmQgYXQgdGhlIHRpbWUpIHdhcyAxNy4gQnkgMTkgYW5kIDIwIHdlIGhhZCB0d28gZGVjZW50IHVzZWQgdmVoaWNsZXMsIGEgMyBiZWRyb29tIGFwYXJ0bWVudCwgc2F2aW5ncyBhbmQgYSBoYXBweSBsaWZlIHRvZ2V0aGVyLiBBbmQgdGhpcyB3YXNuJ3QgdGhhdCBsb25nIGFnbyEgUGVvcGxlIGNvbnN0YW50bHkgdGVsbCBtZSBpdCdzICJuZWFybHkgaW1wb3NzaWJsZSIgdG8gbW92ZSBvdXQgYmVmb3JlIDI1LiBXaGF0IHRoZXkgcmVhbGx5IG1lYW4gaXMsIGl0J3Mgbm90IHBvc3NpYmxlIGZvciB0aGVtIHRvIG1vdmUgb3V0IGFuZCBub3QgdGFrZSBhIGhpdCB0byB0aGVpciBjdXJyZW50IHN0YW5kYXJkIG9mIGxpdmluZy4gSW4gbXkgcGVyc29uYWwgZXhwZXJpZW5jZXMsIHRoZSBwZW9wbGUgY29tcGxhaW5pbmcgdG8gbWUgdGhhdCB0aGV5IGNhbid0IG1vdmUgb3V0IG9mIHRoZWlyIHBhcmVudHMgaG91c2UgYXJlIHRoZSBwZW9wbGUgd2hvIGFyZSByZWFsbHkgYWR2ZXJzZSB0byBwZXJzb25hbCBzYWNyaWZpY2VzLCBzbyB0aGUgc2Vjb25kIHRoaW5ncyBzdGFydCBnZXR0aW5nIGEgYml0IHVuY29tZm9ydGFibGUsIHRoZXkgdGVsbCB0aGVtc2VsdmVzICJJIHNob3VsZG4ndCBoYXZlIHRvIGxpdmUgbGlrZSB0aGlzISIgYW5kIHRlbGwgdGhlbXNlbHZlcyB0aGV5J2xsIGp1c3QgInNhdmUgdXAiIGEgZmV3IG1vcmUgeWVhcnMgYXQgaG9tZSB3aXRoIG1vbSBhbmQgZGFkLiBTdGlsbCBoYXZlIHlldCB0byBzZWUgYW55IG9mIHRoZW0gbW92ZSBvdXQsIGFuZCBtb3N0IGFyZSBvbiB5ZWFyIDYgb2Ygc2F2aW5nLgpTb21ldGltZXMgdGVuIG9yIHR3ZWx2ZSB0aW1lcyBpbiBhIHNpbmdsZSBlcGlzb2RlLgozIHdpdGggdGhlIEluYXVndXJhbCBhbmQgU2FuZHBpcGVyLCBib3RoICQxMDAsMDAwIDYgZnVybG9uZyBzcHJpbnRzIGZvciAyIHllYXIgb2xkcy4gVGhlIDkxIGRheSBtZWV0IGZlYXR1cmVzIHNpeCBncmFkZWQgc3Rha2VzLCB0b3BwZWQgYnkgdGhlIEdyYWRlIElJICQzNTAsMDAwIFRhbXBhIEJheSBEZXJieSBvbiBGZXN0aXZhbCBEYXkgb24gTWFyY2ggMTEuLiAKVGhlIHRoaW5nIGlzIHRoYXQgZXZlcnlib2R5IGhlcmUgaXMgc2F5aW5nIHRoYXQgV2VzdGVybmVycyBkb24gY2FyZSBhYm91dCB0aGUgZ2Vub2NpZGUgYW5kIHRoYXQgVHVya3MgZG9uIGdldCBvZmZlbmRlZCBpZiB0aGV5IGRvLiBCdXQgdGhpcyBpcyBhIGNhc2Ugb2YgeWV0IGFub3RoZXIgRXVyb3BlYW4gY291bnRyeSByZWNvZ25pc2luZyBpdCBhbmQgeWV0IGFub3RoZXIgY2FzZSBvZiBiYWNrbGFzaCBmcm9tIHRoaXMgY29tbXVuaXR5IHdoZW4gaXQgd2FzIG5ldmVyIGFib3V0IHRoZW0gaW4gdGhlIGZpcnN0IHBsYWNlLiBJdCBzZWVtcyBsaWtlIGV2ZXJ5Ym9keSBoZXJlIGlzIGp1c3QgZGlzcHJvdmluZyB0aGVpciBvd24gcG9pbnRzPyBUaGlzIHRocmVhZCBkaWRuIG5lZWQgdG8gYmUgbWFkZSwgYW5kIHlldCBoZXJlIGl0IGlzLiBJdCBhIHNlbGYgZnVsZmlsbGluZyBwcm9waGVjeS4KTXkgbmFtZSBpcyBKYWNrIFdlYmJlci4gSSBob3N0IGEgcG9wdWxhciB0diBzaG93IGFuZCBibG9nIGNhbGxlZCBMZWdlbmRzLiBUb2RheSBJIGFtIG91dCBnYXRoZXJpbmcgdGhlIG1hbnkgc3RvcmllcyBzdXJyb3VuZGluZyB0aGUgc2hvZSB0cmVlIGxlZ2VuZC4gTWFueSBiZWxpZXZlIGl0IGlzIHRoZSB3b3JrIG9mIGEgc2VyaWFsIGtpbGxlci4gT3RoZXJzIGhhdmUgc3RyYW5nZSBzdG9yaWVzIGFib3V0IGNhcnMgbm90IHdvcmtpbmcsIGNlbGwgcGhvbmVzIGdvaW5nIGNyYXp5LCBhbmQgb3RoZXIgc3RyYW5nZSBldmVudHMgc3Vycm91bmRpbmcgdGhlIGFwcGVhcmFuY2Ugb2YgYSBzaG9lIHRyZWUuIEl0IGFwcGVhcnMgdGhhdCBhcyBzb29uIGFzIHRoZXNlIHBlb3BsZSBzYXcgdGhlIHNob2UgdHJlZSwgc3RyYW5nZSBhbmQgYml6YXJyZSBldmVudHMgaGF2ZSBoYXBwZW5lZCBpbiB0aGVpciBsaXZlcy4gSGVyZSBhcmUgYSBmZXcgb2YgdGhlIHN0b3JpZXMgd2Ugd2lsbCBiZSBmZWF0dXJpbmcgb24gb3VyIHNob3cgYW5kIGJsb2cuIFJlbWVtYmVyIHRvIHRha2UgaGVlZCB3aGVuIHNlZWluZyBhIHNob2UgdHJlZS4KU29tZSBzdHVkaWVzIGhhdmUgc2hvd24gbGVzcyBwb3NpdGl2ZSByZXN1bHRzLCBob3dldmVyLiBUaGUgV29tZW4gSGVhbHRoIEluaXRpYXRpdmUgZm91bmQgdGhhdCB3b21lbiB0YWtpbmcgNDAwIElVIG9mIHZpdGFtaW4gRDMgKHBsdXMgY2FsY2l1bSkgdmVyc3VzIHBsYWNlYm8gZGlkIG5vdCBoYXZlIGEgbG93ZXIgcmlzayBvZiBicmVhc3QgY2FuY2VyLlsxMl0gTWFueSBjcml0aWNzIGhhdmUgYXJndWVkIHRoYXQgdGhpcyBkb3NhZ2Ugb2Ygdml0YW1pbiBEIGlzIHRvbyBsb3cgdG8gcHJldmVudCBjYW5jZXIuIFN0dWR5IG9mIG1lbiBhbmQgd29tZW4gKG1vc3RseSBub25zbW9rZXJzKSBkaWQgbm90IGNvbmZpcm0gdGhlc2UgcmVzdWx0cywgZmluZGluZyBubyBhc3NvY2lhdGlvbiBiZXR3ZWVuIHZpdGFtaW4gRCBjb25jZW50cmF0aW9ucyBhbmQgcGFuY3JlYXRpYyBjYW5jZXIgb3ZlcmFsbCwgZXhjZXB0IGluIHN1YmplY3RzIHdpdGggbG93IHN1biBleHBvc3VyZS5bMTRdIEluIHRoaXMgc3ViZ3JvdXAsIGhpZ2hlciB2ZXJzdXMgbG93ZXIgdml0YW1pbiBEIGNvbmNlbnRyYXRpb25zIGhhZCBhIHBvc2l0aXZlIGFzc29jaWF0aW9uIHdpdGggcGFuY3JlYXRpYyBjYW5jZXIuWzE0XSBBIGRlZmluaXRpdmUgY29uY2x1c2lvbiBjYW5ub3QgeWV0IGJlIG1hZGUgYWJvdXQgdGhlIGFzc29jaWF0aW9uIGJldHdlZW4gdml0YW1pbiBEIGNvbmNlbnRyYXRpb24gYW5kIGNhbmNlciByaXNrLCBidXQgcmVzdWx0cyBmcm9tIG1hbnkgc3R1ZGllcyBhcmUgcHJvbWlzaW5nLi4gCkNvc2J5IGhhcyBzYWlkIGhlIGdhdmUgQ29uc3RhbmQgdGhlIGNvbGQgbWVkaWNpbmUgQmVuYWRyeWwgYW5kIHRoYXQgc2hlIGNvbnNlbnRlZCB0byBhIHNleHVhbCBlbmNvdW50ZXIuIFNoZSB3YXMgZXhwZWN0ZWQgdG8gZmFjZSBpbnRlbnNlIGNyb3NzIGV4YW1pbmF0aW9uIGJ5IGEgZGVmZW5jZSB0ZWFtIGludGVudCBvbiBwb3J0cmF5aW5nIGhlciBhcyBhICJjb24gYXJ0aXN0IiB3aG8gZnJhbWVkIGhpbSBmb3IgbW9uZXkuCkl0IGlzIGdyZWF0IGZvciBpbmp1cnkgY2FyZSBhbmQgcHJldmVudGlvbiwgcmVoYWJpbGl0YXRpb24gYW5kIGluanVyeSBtYW5hZ2VtZW50IGFzIHdlbGwgYXMgaW5jcmVhc2VkIGF0aGxldGljIHBlcmZvcm1hbmNlLCBpbmNyZWFzZWQgZmxleGliaWxpdHksIGFuZCBpbmNyZWFzZWQgc3RyZW5ndGguLiAKV2hpbGUgdGhleSBtYXkgYmUgbWlub3IgaXNzdWVzIGFuZCBvbmVzIHlvdSBhbHJlYWR5IGtub3csIGVhY2ggb25lIGxlYWRzIHVwIHRvIHRoZSB1bHRpbWF0ZSBzZWNyZXQuIApFc3BlY2lhbGx5IHBlb3BsZSBpbiB0aGUgcHVibGljIHNwaGVyZS4gV2h5IGhlIGV2ZW4gZG9pbmcgaXQ/IE9uZSBvZiB0d28gcmVhc29uczpIaXMgZmFpbGVkIGJ1aXNpbmVzc2VzIHdlcmUgd29yc2Ugb2ZmIHRoYW4gdGhvdWdodCwgaGUgaXMgdHJ1bHkgYmFua3J1cHQgYW5kIGV4aXN0cyBvZmYgY3JlZGl0LCBsaWtlIHRoYXQgZ3V5IGZyb20gRnlyZS4gVGhhdCB3b3VsZCBodXJ0IGhpcyBpbWFnZSB0byBhZG1pdCwgc28gaGUgZGVzcGVyYXRlbHkgaGlkaW5nIGl0Li4gCiJJdCdzIHRoZSBvbmUgdGhhdCBnaXZlcyB1cyBoZWFkYWNoZXMgYW5kIG1ha2VzIHVzIGZlZWwgbW9yZSBjb25nZXN0ZWQuIi4gClRoZSBQcmVkYXRvcnMgYXJlIG5vdyBsb29raW5nIGZvcndhcmQgdG8gdGhlIDIwMTcgV2luZSBGZXN0aXZhbCBhbmQgVGFzdGluZywgdGFraW5nIHBsYWNlIG9uIE1hcmNoIDMxIGF0IEJyaWRnZXN0b25lIEFyZW5hLiBUaGUgZXZlbnQgd2lsbCBmZWF0dXJlIG1vcmUgdGhhbiAyNTAgd2luZXMgYW5kIGEgdmFyaWV0eSBvZiBjdWlzaW5lLCBhcyB3ZWxsIGFzIGEgc2lsZW50IGF1Y3Rpb24uIE5ITCwgdGhlIE5ITCBTaGllbGQsIHRoZSB3b3JkIG1hcmsgYW5kIGltYWdlIG9mIHRoZSBTdGFubGV5IEN1cCBhbmQgTkhMIENvbmZlcmVuY2UgbG9nb3MgYXJlIHJlZ2lzdGVyZWQgdHJhZGVtYXJrcyBvZiB0aGUgTmF0aW9uYWwgSG9ja2V5IExlYWd1ZS4KSG93ZXZlciwgeW91IGRvbid0IHdhbnQgdG8gY2F0Y2ggd2hhdCB0aGV5J3ZlIGdvdCwgc28ganVzdCBhc2sgZm9yIGEgdGFibGUgY2hhbmdlLi4gCkF1IG1pbGlldSBkZSBub3MgbGFucyBzcGlyaXR1ZWxzIG91IGludGVsbGVjdHVlbHMsIGlsIGRvaXQgZXhpc3RlciB1biBwb2ludCBvIHNlcmFpdCBhbmNyZSBub3RyZSBjb21wcmhlbnNpb24gZGUgbGEgdmllICB1biBuaXZlYXUgc3VwcmlldXIsIHVuIHBvaW50IG8gY2VsbGUgY2kgc2UgbWF0cmlhbGlzZXJhaXQuIApIYXZlIHlvdSBldmVyIGNvbnNpZGVyZWQgbm90IGdpdmluZyBhIHNoaXQgYWJvdXQgY29zbWV0aWNzPyBJIGhhdmVuJ3QgcGFpZCBmb3IgYSBzaW5nbGUgZnVja2luZyBsb290Ym94IHdpdGggYWN0dWFsIG1vbmV5IHNpbmNlIHRoZXkgc3RhcnRlZCBiZWNvbWluZyBidXNpbmVzcyBhcyB1c3VhbC4gCkkga25vdyB3aGVuIEkgc2V0dGluZyB1cCBhIGJvbmZpcmUgdGhlIGZpcnN0IHRoaW5nIEkgcmVhY2ggZm9yIGlzIG15IGhhY2tzYXcgYmxhZGUgdG8gcmVhbGx5IGdldCB0aGUgZmlyZSBzdGFydGVkISEhLiAKVGhlcmUgYXJlIDIgYnVzIHN0b3BzIG5lYXIgdGhlIGhvdGVsLiBUaGUgYnVzZXMgZ28gdGhyb3VnaCB0aGUgTGluY29sbiBUdW5uZWwgd2hpY2ggaXMgdXN1YWxseSBhIDMwIG1pbnV0ZSByaWRlIGlmIHRoZXJlIGFyZW4ndCBhbnkgdHJhZmZpYyBwcm9ibGVtcy5UaGUgY29zdCBpcyAkMy41MCAkNDo1MCBkZXBlbmRpbmcgb24gdGhlIGJ1cyBzdG9wLiBUaGVyZSBpcyB0aGUgb3B0aW9uIG9mIHB1cmNoYXNpbmcgYSByb3VuZCB0cmlwIHRpY2tldC4xIHZvdGVTaG93IGFsbCBhbnN3ZXJzIlJtIDQwNyB3YXMgZ29vZCBFWENFUFQgZm9yIG5vaXNlIHByb2JsZW0uIAo2LjE1IGNyb3JlIGZvciB0aGUgZmlyc3QgcXVhcnRlciBlbmRlZCBKdW5lIDMwLCAyMDE3LCBjb21wYXJlZCB0byBScy4gClRoZXkgc2VlIGxpYmVyYWxzIHRoaW5raW5nIHRoZXkgYXJlIGVuYWJsaW5nIHJhY2lzbSwgYXMgaWYgdGhleSBoYXZlIG9uZSBpb3RhIG9mIHBvd2VyIG9yIG9wcG9ydHVuaXR5IGluIHRoaXMgd29ybGQuIApCdXQgbm93IHdlIGhhdmUgYSBicmFuZCBuZXcgY29hY2hpbmcgc3RhZmYsIHNvIGhvcGVmdWxseSB0aGF0IGdldCBzaGl0IGZpeGVkIHdpdGhvdXQgb3VyIHB1bnQva2ljayBjb3ZlcmFnZSBhbmQgcmV0dXJuaW5nIHN1ZmZlcmluZyB0b28gbXVjaC4gNyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvSUlSQywgS2x1d2UgKHdobyB3YXMgb3VyIFB1bnRlciB3aGVuIGNvYWNoIFByaWVmZXIgc3RhcnRlZCwgYW5kIGhhZCBiZWVuIGZvciBhd2hpbGUgYWxvbmdzaWRlIGtpY2tlciBMb25nd2VsbCBhbmQgTFMgTG9lZmZsZXIpIHNhaWQgaW4gYW4gQU1BIGFib3V0IGhvdyBob3N0aWxlIG9yIHVuZm9yZ2l2aW5nIFByaWVmZXIgd2FzIHdoZW4gaXQgY2FtZSB0byBraWNrZXJzLldhbHNoIGRpZCBva2F5IGhpcyBmaXJzdCB5ZWFyIGJlY2F1c2UgS2x1d2UgYW5kIExvZWZmbGVyIHdlcmUgc3RpbGwgdGhlcmUgdG8gbGVhbiBvbi4gS2x1d2UgZ290IHJlcGxhY2VkIHdpdGggTG9ja2Ugd2hvIGhhZCBzb21lIHVwc2lkZSBpbiB0aGUgcHVudGluZyBnYW1lIGJ1dCBzdHJ1Z2dsZWQgd2l0aCBob2xkaW5nLiAKR1RPIGlzIGEgc2ltcGxlIGNvbmNlcHQsIGl0J3MganVzdCB0aGUgb3B0aW1hbCB3YXkgdG8gcGxheSBldmVuIGlmIHlvdXIgb3Bwb25lbnQga25ldyB3aGF0IHlvdXIgc3RyYXRlZ3kgd2FzLiAKV2UgY2FuIGhlbHAgeW91IGRlc2lnbiB5b3VyIG9wdGltYWwgc3BvbnNvcnNoaXAgcGFja2FnZSB0byBiZXN0IGRldmVsb3AgeW91ciB0aG91Z2h0IGxlYWRlcnNoaXAgcG90ZW50aWFsLiAKMTYgU2VwIDIwMTcgLiBXZXJlIHlvdSBhYmxlIHRvIGZpbmQgdGhlIHNvbHV0aW9uIGZvciBNaXNzb3VyaSBDb21wcm9taXNlIHN1YmplY3Q/IC4gCk1vc3QgcGVvcGxlIHdoaWxlIHByZWZlciBTZXBhcmF0aW9uIChUYWl3YW4gaXMgaXRzIG93biBjb3VudHJ5KSBpdCBkb2VzbiBmYWxsIGludG8gb3VyIGxvY2FsIGRlZmluaXRpb24gb2YgcHJvIHNlcGFyYXRpb24uIFBybyBzZXBhcmF0aW9uIHBlb3BsZSBhcmUgYWdncmVzc2l2ZWx5IHNlcGFyYXRpc3RzLCBnZW5lcmFsbHkgd2FudGluZyBhIG5hbWUgY2hhbmdlIChubyBsb25nZXIgUk9DLCBtYXliZSBSTyBUYWl3YW4gb3Igc29tZXRoaW5nKSwgYW5kIGNoYW5nZWQgY29uc3RpdHV0aW9uLCBjaGFuZ2UgYWxsIGxlZ2FsIGJpbmRpbmcsIGV0YywgYW5kIHNjcmV3IHRoZSByZXBlcmN1c3Npb25zIHRoYXQgQ2hpbmEgbWF5IGhhdmUuIApUaGUgUm95YWwgQ29tbWlzc2lvbiBpbnRvIEluc3RpdHV0aW9uYWwgUmVzcG9uc2VzIHRvIENoaWxkIFNleHVhbCBBYnVzZSB3aWxsIGhvbGQgaXRzIDE3dGggcHVibGljIGhlYXJpbmcgbmV4dCB3ZWVrLCB3aXRoIG1vcmUgdGhhbiAxNiwwMDAgY2FsbHMgYWJvdXQgY2hpbGQgc2V4dWFsIGFidXNlIHNvIGZhciwgYW5kIGFub3RoZXIgdGhyZWUgeWVhcnMgdG8gZ28uIApJbiBmbmYgZXhrbHVzaXZlbiBSZXN0YXVyYW50cyB1bmQgQmFycywgZGFydW50ZXIgZWluIGV4cXVpc2l0ZXMgR3JpbGwgUmVzdGF1cmFudCwgZWluIGtsYXNzaXNjaCBrYW50b25lc2lzY2hlcyBSZXN0YXVyYW50IHVuZCBkZXIgcmVub21taWVydGUgTWFuZGFyaW4gQ2FrZSBTaG9wLCB3aXJkIGZyIGRhcyBrdWxpbmFyaXNjaGUgV29obCBkZXIgR3N0ZSBnZXNvcmd0LiBEYXMgU3BhIGF0ICBtaXQgbmV1biBzZXBhcmF0ZW4gQmVoYW5kbHVuZ3NzcnVtZW4sIGVpbnNjaGxpZWxpY2ggendlaSBDb3VwbGUncyBTdWl0ZXMgdW5kIGVpbmVyIFZJUCBTcGEgU3VpdGUsIHdpcmQgZWluZSBncm9lIEF1c3dhaGwgYW4gV2VsbG5lc3MgLCBCZWF1dHkgIHVuZCBNYXNzYWdlYmVoYW5kbHVuZ2VuIGFuYmlldGVuLiAKVGhlc2UgY2xvdHMgcmVzdWx0IGZyb20gaW5hY3Rpdml0eSBhbmQgdXN1YWxseSBiZWdpbiBpbiB0aGUgbG93ZXIgaGFsZiBvZiB0aGUgYm9keS4gV2hlbiB0aGV5IG1ha2UgdGhlaXIgd2F5IHRvIHRoZSBoZWFydCBvciBsdW5ncywgdGhleSBjYW4gYmVjb21lIGxvZGdlZCBpbiBhIGJsb29kIHZlc3NlbCBhbmQgYmxvY2sgYmxvb2QgZmxvdywgcmVzdWx0aW5nIGluIGNoZXN0IHBhaW4sIHNob3J0bmVzcyBvZiBicmVhdGggYW5kIGRlYXRoLi4gCk9oLCBidXQgaXQgZG9lcyEgQ3VsdHVyYWwgYXBwcm9wcmlhdGlvbiBhcyBhIHRlcm0gb25seSBiZWNhbWUgYSBtYWluc3RyZWFtIHRoaW5nIHdpdGhpbiB0aGUgbGFzdCBkZWNhZGUgb3Igc28sIGJ1dCB0aGUgY29uY2VwdCBoYXMgYmVlbiBhcm91bmQgbXVjaCBsb25nZXIuIEluIHRoZSB0b3duIHdlcmUgSSBjb21lIGZyb20gaW4gR2VybWFueSB0aGVyZSB3YXMgYSB6b28gdGhhdCBleGhpYml0ZWQgIm5lZ3JvIGN1bHR1cmVzIiwgcGVvcGxlIGFiZHVjdGVkIGZyb20gQWZyaWNhLCBkcmVzc2VkIGluIHRyYWRpdGlvbmFsIGF0dGlyZSBhbmQgcHV0IGJlaGluZCBiYXJzLiAKT24gdGhpcyB3ZWVrJ3MgYWxsIG5ldyBUaGUgUm95YWxzLCBIZWxlbmEgZ29lcyBvbiBhIGNvdmVydCBtaXNzaW9uIHRvIGNvbnZpbmNlIHBvd2VyZnVsIGVuZXJneSBtYWduYXRlIE1hcnRpbiBLYW5lIHRvIGhlbHAgdGFrZSBkb3duIEtpbmcgUm9iZXJ0IChNYXggQnJvd24pLgpUaGUgYmVzdCB3YXkgdG8gdmVyaWZ5IHdoYXQgaGFwcGVuaW5nIGlzIHRvIGNvdW50IHlvdXIgY2Fsb3JpZXMgYW5kIGNvbXBhcmUgaXQgdG8geW91ciBUREVFLiBJZiB5b3UgdHJhY2sgaG9uZXN0bHkgYW5kIHlvdXIgY2Fsb3JpZXMgaW4gYXJlIGxlc3MgdGhhbiB5b3VyIFRERUUgeW91IGxvc2Ugd2VpZ2h0LiBZb3UgbWF5IHJlYWxpemUgdGhhdCB5b3UgYXJlIG1pc2NvdW50aW5nIGFuZCB5b3UgYWN0dWFsbHkganVzdCBtYWludGFpbmluZyByaWdodCBub3csIHRoYXQgb2sgYW5kIHlvdSBjYW4gZml4IGl0Li4gCllvdSBzdWNrISBJJ20gZ2V0dGluZyBhIGNhYmxlIG1vZGVtIGFuZCB0aGUgY2hlYXAgYXNzIFZvbmFnZSBwbGFuLiAKRXVubWEyMTEyICAgMTQgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpUaGUgbGFzdCBpcyBhICJyZWFkaW5nIHJvb20iIHdoaWNoIGlzIGtpbmRhIEJTLCBzbyB5b3UgY2FuIHRha2UgbG9uZ2VyIGluIG90aGVyIHNlY3Rpb25zIGFuZCBza2lwIHRoZSByZWFkaW5nIHJvb20gaWYgeW91IHdhbnQuVGhleSBoYXZlIGRheXMgZXZlcnkgd2VlayB3aGVyZSB0aGUgYnVsayBvZiB0aGUgc2F1bmEgc3RhdGlvbnMgYXJlIHNlcGFyYXRlIHNleGVzIGlmIHlvdSBtb3JlIGNvbWZvcnRhYmxlIHdpdGggdGhhdCwgdGhvdWdoIHRoZXJlIGFyZSB0d28gc2hhcmVkIHBvb2xzIGluIHRoZSBtaWRkbGUuWWVhaCwgZG9uIHN0YXJlIHRvbyBtdWNoLiBUaGUgYXRtb3NwaGVyZSBhbmQgYXJjaGl0ZWN0dXJlIGlzIHByZXR0eSBzbyB5b3UgY2FuIGZvY3VzIG9uIHRoYXQgYSBsb3Qgb2YgdGhlIHRpbWUgaWYgeW91IHdhbnQuRG9uIGhvZyBqYWN1enppIGpldHMgb3IgdGhlIGZhbmNpZXN0IHNob3dlciBmb3IgYSBsb25nIHRpbWUuIApWYW5uR2VhdXggdQpEaWQgTWFuYWZvcnQgZ2V0IHN1c3BpY2lvdXMgYW5kIGNvbnRhY3QgdGhlIEZCST8gV2FzIENvbWV5IG9uIHRoZSBzaWRlIG9mIE9iYW1hL0x5bmNoIHRvIGVudHJhcCB0aGVtIGFuZCBnZXQgYSBGSVNBIHdhcnJhbnQ/IFRoaXMgRW1pbiBndXkgcmljaCBSdXNzaWFuIERhZCBpcyBBTlRJIFB1dGluIGFuZCBoaXMgUFIgRmlybSB3YXMgdGhlIFBvZGVzdGEgZ3JvdXAuIFRoZXkgZm91bmQgYSB1c2VmdWwgY29ubmVjdGlvbiB0aHJvdWdoIEdvbGRzdG9uZSBhbmQgaW52aXRlZCBoaW0gdG8gdGhlIFdoaXRlIEhvdXNlIHRoZSB3ZWVrIGJlZm9yZSBoZSBzZW50IHRoZSBlbWFpbC4gVG8gYmUgY29hY2hlZCBvbiB0aGUgZXhhY3Qgd29yZGluZyB0byBnZXQgYSBGSVNBIHdhcnJhbnQ/IFdobyBkaWQgR29sZHN0b25lIG1lZXQgd2l0aD8gRXZlcnkgUnVzc2lhbiBpbiB0aGF0IG1lZXRpbmcgd2FzIEFOVEkgUHV0aW4gYW5kIG9uIHRoZSBDbGludG9uIHRlYW0uIFRoZSBtZWRpYSBjYWxscyB0aGlzIGxpdHRsZSBob25leXBvdCBsYXd5ZXIgYSBLcmVtbGluIGxhd3llci4gClRoZSBiaWxsIGFsc28gd291bGQgaW5jcmVhc2UgdGhlIGRhaWx5IGxpbWl0IGZvciBjaGlwIHNhbGVzIHBlciBjaGFyaXR5IGZyb20gJDE1LDAwMCB0byAkMjAsMDAwLCB3aXRoIHRoZSBhYmlsaXR5IHRvIGdvIGFzIGhpZ2ggYXMgJDUwLDAwMCBpZiBjaGFyaXRpZXMgZnVybmlzaCBhbmQgcnVuIHRoZSBnYW1lcyB0aGVtc2VsdmVzIGluc3RlYWQgb2YgaGlyaW5nIGEgbGljZW5zZWQgc3VwcGxpZXIuIApQZXRlIENvdXJ0bmV5IHNhaWQgaW4gYW4gZW1haWwuIApUaGUgcG9saWNlIHNhaWQ6ICJUaGUgdmljdGltIHdhcyBwbGF5aW5nIGEgZ2FtZSBvZiBjYXJkcyB3aXRoIGZyaWVuZHMgaW4gaGlzIG5laWdoYm91cmhvb2QuIEJ5IHRoZSB0aW1lIHRoZSBnYW1lIGVuZGVkLCBBYmhpbGFzaCB3b24gUnMgNTAwIGZyb20gdGhlIHR3byBzdXNwZWN0cywgRGV2aXByYXNhZCBWZXJtYSwgMTgsIGFuZCBSaXp3YW4gQW5zYXJpLCAyMCwgd2hvIHdlcmUgaGVsbCBiZW50IG9uIGdldHRpbmcgdGhlaXIgbW9uZXkgYmFjay4KUnlhbiBsYWlkIG11Y2ggb2YgdGhlIGZvdW5kYXRpb24gZm9yIHRoZSBzaG93LCBjb250cmlidXRpbmcgc3VjaCBjb25jZXB0cyBhcyBUaGUgVmFuaWxsYSBUZXN0LCBCQ1NNLCBST1RUWSwgYW5kIHRoZSBUaW1lIFRyYXZlbGluZyBTdXBlciBDb21wdXRlci4gCkN1cmlvdXMgb2Ygd2hhdCB3b3VsZCBoYXBwZW4sIEkgb25seSB3b3JlIHBvbnkgdGFpbHMgZm9yIG9uZSB5ZWFyIGFuZCBhZnRlciB0aGF0IHdvdWxkIG9jY2FzaW9uYWxseSB3ZWFyIGl0IGRvd24gICBzdWRkZW5seSBldmVyeW9uZSBjb21wbGltZW50ZWQgbWUgZm9yIHdlYXJpbmcgaXQgZG93bi4gCkV4cGxvcmUgSGlzdG9yaWNhbCBOZXdzcGFwZXIgQXJjaGl2ZXMgT25saW5lCkZvciBtYWludGVuYW5jZSB3aXNlLCBpZiB5b3UgcGVyc3BpcmUgYSBsb3QgaW4geW91ciBjbG90aGVzLCB3YXNoIGl0IGFzIHNvb24gYXMgcG9zc2libGUgd2hlbiB5b3UgY2FuIGFuZCBpdCBzaG91bGQgZHJ5IHRob3JvdWdobHkgZmlyc3QgYmVmb3JlIHlvdSB3ZWFyIGl0IGFnYWluLgpIb3cgdG8gTGVhcm4gUG9rZXIgUGVyY2VudGFnZXMKNW1ha2VzMTBmbSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KTm90d2l0aHN0YW5kaW5nIGltcHJlc3NpdmUgd2lucyBvdmVyIGJvdGggVUNMQSBhbmQgVVNDLCBVdGFoIHN0aWxsIGZpbmlzaGVkIGJlaGluZCBib3RoIHRlYW1zIGF0IG51bWJlciBmaXZlIGluIHRoZSBTb3V0aCBEaXZpc2lvbiwgYW5kIG51bWJlciBzaXggaW4gdGhlIG92ZXJhbGwgY29uZmVyZW5jZSBzdGFuZGluZ3MuIEFzIHRlbXB0aW5nIGFzIGl0IGlzIHRvIHJlaGFzaCB3aGF0IG1pZ2h0IGhhdmUgYmVlbiwgSSBhbSBjb250ZW50IHRvIHNpbXBseSByZXZlbCBpbiB3aGF0IHRoZSBVdGVzIHdlcmUgYWN0dWFsbHkgYWJsZSB0byBhY2NvbXBsaXNoLgpJbmNdLi4gCkkgd2FzIGp1c3QgYXQgdGhlIGdyb2NlcnkgdGhlIG90aGVyIGRheSAoNTEsTSkgYW5kIHRoZSBsYWR5IGluIGZyb250IG9mIG1lIGhhZCBhIG5ld2Jvcm4gYW5kIGEgZnVsbCBjYXJ0IG9mIGdyb2NlcmllcyBhdCB0aGUgY2hlY2tvdXQuIFNoZSB3YXMgaW4gZnJvbnQgb2YgdGhlIGNhcnQgdW5sb2FkaW5nIHdoaWxlIGhlciBiYWJ5IHdhcyBpbiBhIGNhciBzZWF0IGZhY2luZyBtZS4gClBhcnRpY2lwYW50cyB3aWxsIHBheSAkNSBhIGhhbmQuLiAKV2VsY29tZSB0byBvdXIgMTIgbmV3bHkgdHJhaW5lZCBkb3VsYXMhU3VuZGF5J3MgdHJhaW5pbmcsIGxlZCBieSBCQURQIGNvIGNvb3JkaW5hdG9yIFBvb25hbSBEcmV5ZnVzIFBhaSwgb2ZmZXJlZCBhbiBleHBsYW5hdGlvbiBvZiB0aGUgQkFEUCdzIGdvYWxzLCB0aGUgYWJvcnRpb24gZG91bGEgcm9sZSwgYW5kIHByYWN0aWNlIHdpdGggc3BlY2lmaWMgc3VwcG9ydCB0ZWNobmlxdWVzLiAKU2hlIGhhcyBiZWVuIGZlZWxpbmcgYmFkIGFib3V0IGhvdyBoZXIgc2tpbiBpcyBsb29raW5nIGFuZCBJIHdhbnQgaGVyIHRvIGZlZWwgbG92ZWQsIGFuZCBoZXIgc2tpbiBub3VyaXNoZWQuIEkgYW0gdGhpbmtpbmcgSSBvcmdhbml6ZSBhIHNwYSBkYXkgZm9yIGhlciBpbiBvdXIgYmF0aHJvb20gYW5kIHN1cnByaXNlIGhlci4gQnV0IEkgZG9uIGtub3cgdGhlIGZpcnN0IHRoaW5nIGFib3V0IGZhY2UgbWFzc2FnZXMgb3IgZmFjaWFscyBvciBza2luIGNhcmUuIEkgbG9vayB1cCBzb21lIG9mIHRoZSB0ZWNobmljYWwgdGVybXMgSSBkb24gdW5kZXJzdGFuZCBidXQgSSBhcHByZWNpYXRlIGlmIHlvdSBhbGwgZ2F2ZSBtZSBzb21lIGluc3RydWN0aW9ucy9zdWdnZXN0aW9ucyBvbiB3aGF0IEkgY2FuIGRvICh0aGUgbW9yZSBzcGVjaWZpYywgdGhlIGJldHRlciksIGlmIHRoZXJlIGlzIGEgY2VydGFpbiBwcm9kdWN0IEkgbmVlZCB0byBidXksIEkgY2FuIGFsc28gZG8gdGhhdCAobm90aGluZyBleGhvcmJpdGFudCB0aG91Z2gpIERyIEtpZWxzLCBLcnVpZHZhdCBhbmQgTHVzaCBhcmUgYXJvdW5kIHRoZSBjb3JuZXIuCkluIGdyb2VwZW4gbW9jaHRlbiB3ZSBkb29yLCB6YWsgYWZnZXZlbiBpbiBkZSBsdWdnYWdlIHN0b3JhZ2UsIGVuIGRhbiBkb29yIGRlIG1ldGFhbCBkZXRlY3RvcnMuIApIb3dldmVyLCBhZnRlciBuaW5lIG1vbnRocyBvZiBzdXJ2ZWlsbGFuY2UgYnkgYSBncm91cCBvZiBsYXcgZW5mb3JjZW1lbnQgYWdlbmNpZXMsIEZsb3JpZGEgaW52ZXN0aWdhdG9ycyBsb29rIHRvIGhhdmUgYSB2ZXJ5IHN0cm9uZyBjYXNlIGFnYWluc3QgdGhvc2Ugb3BlcmF0aW5nIHRoZSBzZXggdHJhZmZpY2tpbmcgcmluZyBhbmQgdGhlIG1vbmV5IHRyYWlsIGxlYWRpbmcgYmFjayB0byBDaGluYS4gTWFydGluIENvdW50eSBTaGVyaWZmIFdpbGxpYW0gU255ZGVyIGhhcyBzYWlkIHRoZWlyIHN1cnZlaWxsYW5jZSBjYXVnaHQgYXJtZWQgbWVuIGRyaXZpbmcgbHV4dXJ5IHZlaGljbGVzIG1vdmluZyBzZXggc2xhdmVzIGJldHdlZW4gbWFzc2FnZSBwYXJsb3JzIGFjcm9zcyBGbG9yaWRhIGFzIHBhcnQgb2YgYSBodW1hbiB0cmFmZmlja2luZyByaW5nLiAKU28gb25lIGRheSB3ZSBwbGF5aW5nIHRhZyBhcm91bmQgbXkgY2h1cmNoIGJ1aWxkaW5nIChncmV3IHVwIGluIGEgY29uc2VydmF0aXZlIGhvdXNlKSBhZnRlciBtb3N0IHBlb3BsZSBoYWQgYWxyZWFkeSBsZWZ0LCBhbmQgbXkgYnVkZHkgcnVucyBpbnRvIHRoZSBiYXRocm9vbSBhbmQgbG9ja3MgaGltc2VsZiBpbiBhIHN0YWxsLiAKVGhhdCBwcmV0dHkgdmFsdWFibGUgaW4gYSB3b3JsZCB3aGVyZSB0aGUgbGluZXMgYmV0d2VlbiB3b3JrIGFuZCBwZXJzb25hbCB0aW1lIGNvbnRpbnVlIHRvIGJlIGJsdXJyZWQuIEZvciBtZSBpdCBrZWVwcyBtZSBpbiB0aGUgcmlnaHQgbWluZHNldCB3aGlsZSBJIG9uIHRoZSBjbG9jaywgYW5kIEkgdGhpbmsgaGVscHMgbXkgbWVudGFsIGhlYWx0aCBieSByZWR1Y2luZyB0aGUgYW1vdW50IG9mIHRpbWUgSSB0aGlua2luZyBhYm91dCB3b3JrIHByb2JsZW1zIGxhdGUgYXQgbmlnaHQgb3Igb3ZlciB0aGUgd2Vla2VuZC4KSSBnZXQgdGhhdCByYWNpc20gaXMgYmFkLiBJIGRvbiB0aGluayBJIHJhY2lzdCBidXQgSSBkb24ga25vdyBtYW4uIApXaGVuIEkgd2FzIGF0IGFib3V0IDgwIHBvdW5kcyBkb3duIEkgd2FzIHN0aWxsIHRlY2huaWNhbGx5IG92ZXJ3ZWlnaHQuIEkgaGFkIHBlb3BsZSB0ZWxsaW5nIG1lIEkgd2FzIHdhc3RpbmcgYXdheS4gCkNsaXBwZXJlZCBpcyB0aGUgbW9zdCBoYWlyIHlvdSBub3JtYWxseSBzZWUsIGJ1dCB0aGVyZSBhcmUgYSBmZXcgcGVvcGxlIHdobyByb2NrIHRoZSBmdWxsIG5hdHVyYWwgbG9vay4gClJlcXVpcmVzIGFuIGFwcHJvYWNoIG9uIGEgZ2xhY2llciwgdGhvdWdoIGl0IGRyeSBhbmQgcm9jayBjb3ZlcmVkIGFuZCB5b3UgY291bGQgcHJvYmFibHkgZG8gaXQgaW4gdGVubmlzIHNob2VzCkxhc3RseSwgd2hpbGUgSSB0aGluayBpZiB5b3VyIG9wcG9uZW50IGdldHMgdG8gdGhlIHJpdmVyIHdpdGggaGlzIGV4YWN0IGhhbmQsIGl0IG9uZSBvZiBoaXMgYmVzdCBibHVmZnMgaGUgY2FuIGxlYWQvY2FsbCB0aGUgZmxvcCB3aXRoLCBhbnlvbmUgbGltcC9jYWxsaW5nIEo4byBhbmQgbGVhZC9jYWxsaW5nIG1pZGRsZSBwYWlyIGlzIHNvbWVvbmUgSSB3b3VsZG4gdHJ1c3QgdG8gdGllIHRoZWlyIG93biBzaG9lcyB1bnN1cGVydmlzZWQsIG11Y2ggbGVzcyB3b3VsZCBJIHN0ZXcgYWJvdXQgcG9rZXIgZGVjaXNpb25zIHRoZXkgbWFraW5nLiBLZWVwIHBsYXlpbmcgYWdncmVzc2l2ZSB3aXRoIHZhbHVlIGhhbmRzIGFuZCB5b3UgZ29vZC4uIApTbywgZm9sbG93aW5nIHRoYXQgcGF0aCwgaGVyZSBhIGxvb2sgYXQgdGhlIGNvbXBlbGxpbmcgc3RvcnkgbGluZXMgaW4gdGhpcyBmaW5hbCBzdHJldGNoIHJ1bi4KQmVlbiBjb3NwbGF5aW5nIGZvciBhYm91dCAxMCB5ZWFycy4gClNpbWlsYXIgdGhpbmcgaGFwcGVuZWQgdG8gbWUgYXQgNyBvciA4LCBJIHJhbiBvdXQgZnJvbSBiZWhpbmQgYSBidWlsZGluZyBhbmQgaW50byBhIHBhcmtpbmcgbG90IGFuZCBnb3QgaGl0IGJ5IGEgY2FyIChpdCBzb3J0YSBkYW1hZ2VkIG15IGtuZWUgYW5kIGl0IHJhbmRvbWx5IGdpdmVzIG1lIGlzc3VlcyBldmVyIHNpbmNlIGJ1dCBvdmVyIGFsbCBJIHdhcyBub3QgdGVycmlibHkgaHVydCkgSSB3YXMgbW9yZSBhZnJhaWQgb2YgZ2V0dGluZyBpbiB0cm91YmxlIGJ5IG15IHBhcmVudHMgaWYgdGhleSBmb3VuZCBvdXQgSSByYW4gb3V0IGludG8gdHJhZmZpYyB0aGFuIEkgd2FzIG9mIHRoZSBmYWN0IHRoYXQgSSBodXJ0IG15IGtuZWUgc28gSSB3YWxrZWQgYXdheSBldmVuIHRob3VnaCB0aGUgYWR1bHRzIGF0IHRoZSBzY2VuZSB3ZXJlIGFsbCBtaWxkbHkgZnJlYWtpbmcgb3V0IChJIGZlbHQgYmFkIGZvciB0aGUgZHJpdmVyIGluIGhpbmRzaWdodCwgc2hlIHdhcyBtb3JlIHVwc2V0IHRoYW4gSSB3YXMgYnkgYSBsb25nIHNob3QpIC4gSSBkb24ga25vdyBpZiBhbnlvbmUgdHJpZWQgdG8gY2FsbCBhbnl0aGluZyBpbiBhYm91dCBpdCBiZWNhdXNlIEkgYmFzaWNhbGx5IGdvdCB1cCBhcyBzb29uIGFzIEkgY291bGQgYW5kIGJvb2tlZCBpdCBob21lIHRvIG15IGhvdXNlIDIgYmxvY2tzIGF3YXkuLiAKV2FzdGVsYW5kLCBCYWJ5ISB0YXBzIGludG8gYSBtb29kIG9mIGNvbnRlbXBvcmFyeSBwb2xpdGljYWwgbWFsYWlzZSwgc2l0dWF0aW5nIHNldmVyYWwgc29uZ3Mgb24gdGhlIGVkZ2Ugb2Ygc29tZSBydWlub3VzLCBwZXJoYXBzIGNsaW1hdGUgcmVsYXRlZCBjYXRhc3Ryb3BoZSwgYnV0IHRoZSBhbGJ1bSBhbHNvIHN0YXJzIHRoZSBtb2FuaW5nIGxvdmVyYm95IHdobyBjb3ZlcmVkIERlc3RpbnkncyBDaGlsZCdzICJTYXkgTXkgTmFtZSIgaW4gSmFudWFyeS4gU29tZXRpbWVzIHJvbWFuY2UgYW5kIGFwb2NhbHlwc2UgY29sbGlkZSBpbiBQcmluY2VhbiB3YXlzLiBPbiB0aGUgY2xvc2luZyB0aXRsZSB0cmFjaywgSG96aWVyIGFuZCBoaXMgYmVsb3ZlZCBmYWxsIGluIGxvdmUgd2hpbGUgd2F0Y2hpbmcgInRoZSBkZWF0aCBvZiB0aGUgc3VuIjsgb24gIk5vIFBsYW4sIiBoZSBvZmZlcnMgdG8ga2VlcCB5b3UgY29tcGFueSBiZWZvcmUgdGhlIHdvcmxkIGVuZHMsIGFzIHF1aXZlcnkgZnV6eiBndWl0YXIgY3JhY2tsZXMgb3ZlciB0aGUgYmVhdCdzIHN0ZWFkeSBkZWF0aHdhcmQgbWFyY2guCllvdSBjb3VsZCBhbHNvIHBsYXVzaWJseSB1c2UgdGhpcyBwb2xpY3kgdG8gZGVueSBmdW5kaW5nIHRvIGFsbCBjaHJpc3RpYW4gaGlnaCBzY2hvb2xzIGFuZCBjb2xsZWdlcyBpbiB0aGUgY291bnRyeS4gCkJlY2F1c2Ugb2Ygc29jaWFsIG1lZGlhLCBtb2Rlcm4gYnVsbHlpbmcgaW52b2x2ZXMgZ3JvdXBzIG9mIGtpZHMgZ2FuZ2luZyB1cCBvbiBvbmUga2lkIGZvciBubyByZWFzb24sIHJ1aW5pbmcgYWxsIGFzcGVjdHMgb2YgYSBzb2NpYWwgbGlmZSwgYW5kIGJhc2ljYWxseSByZWluZm9yY2luZyB0byB0aGUgdmljdGltIHRoYXQgdGhleSBhcmUgd29ydGhsZXNzIGFuZCBzaG91bGQga2lsbCB0aGVtc2VsdmVzIGF0IGFsbCB0aW1lcy4gVGhpcyBoYXBwZW5pbmcgZHVyaW5nIGEgZGV2ZWxvcG1lbnRhbCBwZXJpb2Qgb2YgYSBwZXJzb24ncyBsaWZlIGNhbiBkbyBub3RoaW5nIGJ1dCBkYW1hZ2UuIEl0J2xsIGZ1Y2sgZW0gdXAgZm9yIGxpZmUuIApJdCBkb2Vzbid0IG1hdHRlciBpZiB5b3UncmUgdGhlIG9sZGVzdCBvciB5b3VuZ2VzdCBldmVyeW9uZSByZXNwZWN0cyBlYWNoIG90aGVyIGFuZCBoYXMgYSBncmVhdCBzZW5zZSBvZiBjb21tdW5pdHkgc3Bpcml0LiAKSXQncyB0aGUgc2FtZSBhcyBub3QgYnV0dG9uaW5nIHRoZSBib3R0b20gYnV0dG9uIG9mIGEgdmVzdCBvciBqYWNrZXQsIG9yIG5vdCBvdmVyIGxhY2luZyBzaG9lcyB3aXRoIGV4dHJhIGV5ZWxldHMuIEl0cyBnZW5lcmFsbHkgc29tZXRoaW5nIHRoYXQgc3RhbmRzIG91dCB0byB0aG9zZSB3aG8gd2VhciBjZXJ0YWluIGtpbmRzIG9mIGNsb3RoaW5nIGFzIGEgbWF0dGVyIG9mIGNvdXJzZSB2cyB0aG9zZSB3aG8gZG8gbm90LCBzbyBJIHN1Z2dlc3RlZCBoZSBub3QgYnV0dG9uIHRoYXQgYnV0dG9uIGJlY2F1c2UgaXQgc3RhbmRzIG91dC4KVGhlIHZhcmlldHkgb2Ygb3Bwb25lbnRzIGlzIGFsc28gYnJvYWRlciBpbiBsaXZlLCBmcm9tIHRoZSA1JSB2cGlwIDElIHBmciBPTUNzIHRvIHRoZSAxMDAlIHZwaXAgZHJ1bmtlbiBtYW5pYWMuIApXYXMgZGVmaW5pdGVseSB0aGUgc2FmZSByb3V0ZSwgaGUgc2F5cy4gT25lIGRheSBJIHdhcyBqdXN0IGxpa2UsIEkgZG9uIHRoaW5rIHRoZXJlIGVub3VnaCB0aW1lIGZvciB0aGF0LiAKQWxsLCBhdCB0aGUgYmFzZSBvZiBhbGwgbGFuZ3VhZ2UgaXMgdGhlIGFjdCBvZiBuYW1pbmcgYW5kIG5hbWluZyBoYXMgYWx3YXlzIGJlZW4gYSBkaXZpbmUgc291cmNlIG9mIHBvd2VyOiBmcm9tIENyZWF0aW9uIHdoZW4gR29kIGdvdCB0byBuYW1lIHRoZSB3b3JsZCBhbmQgYWxsIGl0cyBjcmVhdHVyZXMgdG8gdG9kYXkgd2hlbiBwb2xpdGljYWwgcmVnaW1lcyBnZXQgdG8gbmFtZSB3YXJzICJwZWFjZSBrZWVwaW5nIG1pc3Npb25zIiBhbmQgdGF4IG1vbmV5IGZvciBiYW5rZXIgZmF0IGNhdHMgImVjb25vbWljIHJlY292ZXJ5LiIuIApJZiBjYWxsZWQsIHNob3ZpbmcgbW9zdCBmbG9wcyB0byBkZW55IGhpcyBlcXVpdHkvZ2V0IGEgYmFkIGNhbGwgZnJvbSBBSi9BUS4gCkMgZ3JjZSAgY2UgZGVybmllciBtb3llbiBxdWUgbGUgbWx6ZSBzIGRwbG95ICB1bmUgZ3JhbmRlIHBhcnRpZSBkZSBsIGF1IFhJWCBtZSBzaWNsZS4gClRoYXQncyByaWdodCwgSSdtIGRvd25yaWdodCB2aWNpb3VzLiBBbmQgdGhlIGxvdWRlciB0aGUgY3Jvd2QgYm9vcywgdGhlIG1vcmUgSSBsb3ZlIGl0LCBiZWNhdXNlIGl0IG1lYW5zIEknbSBkb2luZyBteSBqb2IuIFRoYXQgaXMgdG8gc2F5LCBJJ20gZG9pbmcgbXkgam9iIGluIHRoZSByaW5nOiBJJ20gcG9ydHJheWluZyB0aGUgdmlsbGFpbiBhbmQgc2V0dGluZyB0aGUgc3RhZ2UgZm9yIG91ciBoZXJvZXMgdG8gcmlzZSB1cCBhbmQgb3ZlcmNvbWUgdGhlIGFkdmVyc2l0eSBJIHNvIGVhZ2VybHkgcHV0IGluIHRoZWlyIHBhdGhzLgpUaGlzIHNob3VsZCBub3QgYmUgdGFrZW4gYXMgY3JpdGljaXNtIG9mIHRoZSBPUC4gSSB0aGluayBoaXMgb3ZlcmFsbCBtZXNzYWdlIGlzIGEgZ29vZCBvbmUsIGVzcGVjaWFsbHkgc2luY2Uga25vd2luZyBhIGJpdCBhYm91dCBmaXhpbmcgdXAgeW91ciBvd24gY2FyIHdpbGwgYWxzbyBoZWxwIHlvdSBpZGVudGlmeSB0aGUgbWVjaGFuaWNzIHdobyBhcmUgdHJ5aW5nIHRvIHJpcCB5b3Ugb2ZmIHdoZW4gYSByZXBhaXIgZXhjZWVkcyB5b3VyIGFiaWxpdHkgb3IgdGltZSBhdmFpbGFibGUuIEFub3RoZXIgdGlwIHdvdWxkIGJlIHRvIGdldCB5b3Vyc2VsZiBhIGJhc2ljIE9CRElJIHJlYWRlciBhbmQgbG9vayB1cCB0aGUgY29kZXMgeW91cnNlbGYgZm9yIHRoYXQgY2hlY2sgZW5naW5lIGxpZ2h0IGJlZm9yZSBhc2tpbmcgYXJvdW5kLi4gCkFuZCBiZWluZyB0aGUgYW5pbWFsIGxvdmVyIHRoYXQgc2hlIGlzLCBCZXR0eSByZWNlaXZlZCBhIHNwZWNpYWwgc3VycHJpc2UgZnJvbSBNYWRhbWUgVHVzc2F1ZHMgSG9sbHl3b29kLiBUaGUgcG9wdWxhciBhdHRyYWN0aW9uJ3MgR29sZGVuIEdpcmwgY2VsZWJyYXRlZCBhdCB0aGUgTG9zIEFuZ2VsZXMgWm9vIHdpdGggaGVyIGZ1enp5IGJ1ZGR5IENoYXJsaWUgdGhlIExpbm5lJ3MgdHdvIHRvZWQgU2xvdGghIEhvdyBmaXR0aW5nIGZvciBhIHdvbWFuIHdobyBpcyBhbiBhZHZvY2F0ZSBmb3IgZm91ciBsZWdnZWQgZnJpZW5kcy4KRGF5IGNhcmUgY2VudGVycywgZmlyc3QgcmVzcG9uZGVycyBhbmQgbWVkaWNhbCBmYWNpbGl0aWVzIGFsbCByZXF1aXJlIENQUiB0cmFpbmluZyBmb3IgdGhlaXIgZW1wbG95ZWVzLi4gClRoaXMgYml0Y2ggaXMganVzdCBzdHVwaWQgYW5kIGluIHRvIGEgd2VpcmQgZmV0aXNoLi4gCkkgZGlkbid0IGxpa2UgaGltIGZvciB0aGlzLiBZZXQgc29tZWhvdyB5b3UgaGF2ZSBtYW5hZ2VkIHRoZSBtZW50YWwgZ3ltbmFzdGljcyB0byBtYWtlIFRydW1wIGxlYWtzIE9iYW1hJ3MgZmF1bHQuIEhpbGFyaW91cy4gClRoZSBpbnNlY3QgbmVzdHMgYXBwYXJlbnRseSB3ZXJlZ3JvdW5kIGludG8gYSBwYXN0ZSBhbmQgc29sZCBvbiBFdHN5LiBUaGUgbGlzdGluZywgd2hpY2ggaGFzIHNpbmNlIGJlZW4gZGVsZXRlZCwgY2xhaW1lZCB0aGUgcHJvZHVjdGhlbHBlZCBlcGlzaW90b215IGN1dHMsIHJlanV2ZW5hdGUgdGhlIHV0ZXJpbmUgd2FsbCBhbmQgY2xlYW4gb3V0IHRoZSB2YWdpbmEuIEhvdCB0aXA6IFdhc3AgbmVzdHMgZG8gbm90aGluZyBvZiB0aGUgc29ydC4gRG8gbm90IHB1dCB0aGVtIGluIHlvdXIgdmFnaW5hLgpQcm9waGV0aWMgZnVsZmlsbG1lbnQgb2YgYSBkcmVhbSBvZiBBdWd1c3QgMjAgMjAxMjogZWFydGhxdWFrZSBzdHJpa2VzIG5vcnRoZXJuIE15YW5tYXI7IGJyaWRnZSwgZ29sZCBtaW5lIC4KIkkgdGhpbmsgdGhlIEJDTVQgaGFzIGJlZW4gYSByZWFsbHkgaW1wb3J0YW50IGZvcmNlIGluIEJvdWxkZXIgQ291bnR5LCBhbmQgSSBkb24ndCB0aGluayBpdCdzIGdvaW5nIHRvIGVuZCBoZXJlLiIuIApZb3UgbmVlZCB0byBzaWduIHVwIGluaXRpYWxseSBhbmQgbGlrZSB0aGlzIHlvdSBjYW4gbWFrZSB1cCB0aGUgZnVuZGFtZW50YWxzIG9mIHRoZSBzb2Z0d2FyZSBhbG9uZyB1c2luZyBpdHMgdXNlLiBPbmNlIHlvdSBhcmUgZmVlbGluZyBhY3F1YWludGVkIHdpdGggdGhlIHVzYWdlIG9mIHNvZnR3YXJlIGFsb25nIHdpdGggdGhlIGdhbWUgeW91IGFyZSBhYmxlIHRvIGRlcG9zaXQgY2FzaCBhbmQgcGxheSBhcyBhIHJlYWwgcGxheWVyLiAKU2hpdHR5IHNwb3QuIEkgaGF2ZSB0byBpbWFnaW5lIHlvdSB3b3VsZCAzYiBmbG9wIG9yIFhSIHR1cm4gd2l0aCBLUSBvciBROC4gClNvIEkgd2FzIHZlcnkgaGFwcHkgeWVzdGVyZGF5IGFzIHdlIHRyYXZlcnNlZCB0aGUgc3RyZWV0cyBvZiBvdXIgbmVpZ2hib3Job29kIHRvIGhhdmUgYSAidGVhY2hhYmxlIG1vbWVudCIgYXMgd2UgZGlzY3Vzc2VkIHdoeSwgb24gYSBibGF6aW5nIGhvdCBkYXksIHNvIG1hbnkgd29tZW4gd2VyZSB3ZWFyaW5nIGhpamFiLiBNeSBnaXJscyBhY3R1YWxseSBhdHRlbmQgc2Nob29sIGluIEJ1cmxpbmd0b24sIFZUIHdpdGggYSBmYWlyIG51bWJlciBvZiBNdXNsaW0gZ2lybHMsIGJ1dCBzb21laG93IHRoZSBzaGVlciBudW1iZXIgb2Ygd29tZW4gY292ZXJlZCBmcm9tIGhlYWQgdG8gdG9lIGluIHRoZSBibGF6aW5nIHN1biBjYXVnaHQgdGhlaXIgZXllLgpJIHByYXkgdGhhdCBteSBodXNiYW5kcyBib2R5IHdpbGwgYmUgZmlsbGVkIHdpdGggdGhlIGhvbHkgc3Bpcml0IGFuZCBub3QgYWxjb2hvbC4gTG9yZCBJIGtub3cgdGhhdCBpbiBhbmQgb2YgbXlzZWxmIEkgYW0gbm90IGFibGUgdG8gYnJlYWsgZnJlZSBvZiB0aGlzIGRlc3RydWN0aXZlIGhhYml0IGFuZCBhc2sgdGhhdCBpbiBZb3VyIGdyYWNlIGFuZCBtZXJjeSBZb3Ugd291bGQgaGVscCBtZSB0byBiZSBzZXQgZnJlZSBvZiB0aGlzIHVuZ29kbHkgYWRkaWN0aW9uLiBBbGwgeW91IG5lZWQgdG8gZG8gaXMgYWNjZXNzIHRoZSB3aG9sZW5lc3MgdGhhdCBpcyBhbHJlYWR5IHlvdXJzIHRocm91Z2ggcHJheWVyIGFuZCBtZWRpdGF0aW9uIG9uIHRoZSBzY3JpcHR1cmVzLiBMaXRlcmFsbHkgZXZlcnkgb25lIEZyaWRheSwgU2F0dXJkYXkgYW5kIHNvbWV0aW1lcyBldmVuIG9uIFN1bmRheS4gQW5kIExvcmQgZm9yIHRob3NlIHRoYXQgYXJlIG5vdCBiZWxpZXZlcnMgICB3ZSBhc2sgdGhhdCBpbiBZb3VyIGdyYWNlIFlvdSB3b3VsZCBjb252aWN0IHRoZW0gb2YgdGhlaXIgZGFtYWdpbmcgYmVoYXZpb3VyLCBib3RoIGluIHRoZWlyIG93biBib2RpZXMgYW5kIGluIHRoZSBsaXZlcyBvZiB0aG9zZSB0aGF0IHRoZXkga25vdyBhbmQgbG92ZSwgYW5kIHR1cm4gdGhlbSBhd2F5IGZyb20gYWxjb2hvbCBhZGRpY3Rpb24gdG8gYSByaWdodCByZWxhdGlvbnNoaXAgd2l0aCB0aGUgTG9yZCBKZXN1cyAgIGluIFdob3NlIG5hbWUgSSBwcmF5LCBBbWVuIEhlYXZlbmx5IEZhdGhlciwgdGhhbmsgWW91IGZvciBoZWxwaW5nIG1lIGFsb25nIHRoZSB3YXkgdG8gcmVjb3ZlcnkgZnJvbSBteSBhZGRpY3Rpb24gdG8gYWxjb2hvbC4gV2hlbiBoaXMgd29yayBpcyB0b2lsc29tZSwgcHJheSBmb3IgZW5kdXJhbmNlIGFuZCBwZXJzcGVjdGl2ZS4gTGVhZCBtZSB0byB0aGUgcmlnaHQgY2h1cmNoIGFuZCBDaHJpc3RpYW4gZnJpZW5kcyB3aG8gY2FuIHN1cHBvcnQgbWUgaW4gdGhpcyBqb3VybmV5LCBpbiBKZXN1cyBOYW1lLCBBbWVuIFdlIGtub3cgdGhhdCB5b3Ugd2lsbCBuZWVkIHRvIGhhdmUgc29tZSBzdXBwb3J0IGFzIHlvdSBhcmUgZ29pbmcgdGhyb3VnaCB0aGlzIHByb2Nlc3Mgc28geW91IHdpbGwgbmVlZCB0byB3aGVyZSB5b3UgY2FuIGJlIGFjY291bnRhYmxlIHRvIG90aGVyIGJlbGlldmVycyBpbiBDaHJpc3QgYW5kIGEgcGFzdG9yLgpTYXJhIEh1bWUgaXMgQXNzb2NpYXRlIFByb2Zlc3NvcmFuZCBDdXJhdG9yIG9mIEtlbnQgU3RhdGUgVW5pdmVyc2l0eU11c2V1bS4gCkkgc28gc29ycnkgYWJvdXQgYWxsIHRoaXMgYnR3LiBIb3cgaXMgeW91ciBkYXVnaHRlciBkb2luZz8gQW5kIGhvdyBhcmUgdGhpbmdzIHdpdGggeW91ciBTTz8KRWx0b3RzaXJhTG9yZCBvZiB0aGUgRm9ycmVzdApIZXIgbW90aGVyIHN1ZmZlcmVkIHRoZSB3b3JzdCBkYW1hZ2UuIApBZnRlciBvbmUgcmVhY2hlcyBhIGNlcnRhaW4gbGV2ZWwgb2Ygd2VhbHRoIGhhcHBpbmVzcyBsZXZlbHMgb2ZmIGFuZCBzdG9wcyBnb2luZyB1cCBldmVuIGlmIHlvdSBlYXJuIG1vcmUgbW9uZXkuIE1pbGxpb25haXJlcyBhbmQgQmlsbGlvbmFpcmVzIGFyZW4gYW55IGhhcHBpZXIgdGhhbiBwZW9wbGUgc3RhYmx5IGxpdmluZyBpbiB0aGUgbWlkZGxlIGNsYXNzLiBXaGF0IHN0dWRpZXMgbGlrZSB0aGlzIG9uZSBzaG93IGlzIHRoYXQgYmVpbmcgcmljaCB3b24gbWFrZSB5b3UgaGFwcHkgYnV0IGJlaW5nIHBvb3Igd2lsbCBtYWtlIHlvdSBtaXNlcmFibGUuLiAKQSB3ZWxsIGtub3duIG1heGltLCBhdHRyaWJ1dGVkIHRvIENodXJjaGlsbCBpbiB0aGUgZGFya2VzdCBkYXlzIG9mIFdXSUksIGlzIHRoYXQgY2FuIGFsd2F5cyBjb3VudCBvbiBBbWVyaWNhbnMgdG8gZG8gdGhlIHJpZ2h0IHRoaW5nIGFmdGVyIHRoZXkgdHJpZWQgZXZlcnl0aGluZyBlbHNlLiAKSW4gdGhlIHBhc3QsIHRoZSBWRlcncyBmdW5kcyBjYW1lIGxhcmdlbHkgZnJvbSBtZW1iZXJzaGlwIGR1ZXMsIGJ1dCBhcyBXb3JsZCBXYXIgSUkgdmV0cyBwYXNzIG9uLCB0aGVyZSdzIGEgc21hbGxlciBwb29sIG9mIHZldHMgdGFraW5nIHRoZWlyIHBsYWNlLiBXZXN0IHNhaWQgaW4gdGhlIHBhc3QgdHdvIGRlY2FkZXMsIFRleGFzIG1lbWJlcnNoaXAgaGFzIGZhbGxlbiBmcm9tIDEyMCwwMDAgdG8gNzUsMDAwLCBhbmQgdGhlIG51bWJlciBvZiBwb3N0cyBoYXMgZHJvcHBlZCBmcm9tIGFib3V0IDkwMCB0byAzMjYuLiAKMSBociBhZ28gKyBCeSBaYWNoYXJ5IExld2lzLCBUaGUgUGxhaW4gRGVhbGVyClRoZSBmaWd1cmVzIGFsc28gc2hvdyB3aGljaCBsb2NhbCBob3RlbHMgIGJ1dCBub3QgY2x1YnMgIGhhZCB0aGUgbW9zdCB0YWtpbmdzIChzZWUgYmVsb3cpLiAKWW91ciBwYXBlci4gCkxlZSB3YXMgcHJlZGVjZWFzZWQgYnkgaGlzIHNpc3RlciwgQmFyYmFyYSwgYW5kIGlzIHN1cnZpdmVkIGJ5IGhpcyBicm90aGVyIFRlcnJ5IGFuZCBoaXMgYnJvdGhlciBhbmQgc2lzdGVyIGluIGxhdywgV2lsbGlhbSBhbmQgTXVyaWVsIEhhcndvb2QuIApUaGF0IGxpdGVyYWxseSB3aGF0IHRoZSBjb21tZW50IGNoYWluIEkgd2FzIHBvc3RpbmcgaW4gd2FzIGFib3V0IHdoZW4gSSBnb3QgYmFubmVkLiAKVGhlIHdheSBJIGZpZ3VyZSBpdCwgdGhpcyBpcyBteSB3YXkgdG8gc3VwcG9ydCBhIHRlYW0gd2hvIEksIGFzIG9mIHlldCwgaGF2ZSBpbiBubyB3YXkgbW9uZXRhcmlseSBzdXBwb3J0ZWQgZXZlciBiZWZvcmUgKEkgdXNlIGFuIGFkIGJsb2NrZXIsIEkgZG9uIGNhcmUgYWJvdXQgbWVyY2gpLiBBdCB0aGlzIHBvaW50IHRoZXkgaGF2ZSBiYXNpY2FsbHkgcHJvdmlkZWQgbWUgd2l0aCA+MTMwMCBob3VycyBvZiBlbnRlcnRhaW5tZW50IGZvciBmcmVlIChJIHdhdGNoZWQgQzEgdHdpY2UsIGFuZCBDMiAxLjV4LCBhbG9uZyB3aXRoIHRoZSB2YXJpb3VzIHRhbGtzIGVwaXNvZGVzKS4gU28sIGZvci4gCkkgZXhwZWN0IHRoYXQsIHdpdGhvdXQgaGlzIGhhaXIgY2FyZSwgZXhwZW5zaXZlIHN1aXRzLCBzcHJheSB0YW5zLCBhbmQgY29zbWV0aWMgc3VyZ2VyeSBoZSB3aWxsIGxvb2sgaW50byB0aGUgbWlycm9yIGFuZCBzZWUgYSBmYXQsIGJhbGQsIHBhbGUgbWFuIHdobyBoZSBkb2VzIG5vdCBldmVuIHJlY29nbml6ZS4gSSB0aGluayBhYm91dCBoaW0gYXNraW5nIGV2ZXJ5IG1vcm5pbmcgaWYgaGUgaGFzIGFueSB2aXNpdG9ycywgYnV0IGp1c3QgbGlrZSBldmVyeSBvdGhlciBkYXkgdGhleSB0ZWxsIGhpbSBubzsgbm8gb25lIGlzIGhlcmUgdG8gc2VlIGhpbS4gCkFyZSB5b3UgZmluZGluZyB0aGF0IHlvdSBoYXZpbmcgdHJvdWJsZSBtZW1vcml6aW5nIHRoaW5ncyBvciB0aGF0IHlvdSBub3QgdW5kZXJzdGFuZGluZyB0aGUgY29uY2VwdHM/CkZ1cnRoZXJtb3JlLCBzaGUgaGFzIGludGVybnMgKGFuZCB0cnV0aGVycykgdG8gd2FzdGUgdGhlaXIgdGltZSwgc28gaXQgdW5jbGVhciBob3cgbXVjaCB0aW1lIGFuZCBlbmVyZ3kgc2hlIGhhcyBzcGVudCBvbiB0aGUgY2FzZSBvdXRzaWRlIHRoZSBmaWxtaW5nIGZvciBOZXRmbGl4IGFuZCB1bnByb2Zlc3Npb25hbCB0d2VldHMuIEhlciB0aW1lIGlzIGN1cnJlbnRseSBzcGxpdCB3b3JraW5nIG9uIHNldmVyYWwgb3RoZXIgY2FzZXMsIGluY2x1ZGluZyBEYW5pZWwgSG9sdHpjbGF3LCBhIGNvcnJ1cHQgOHggY29udmljdGVkIHJhcGlzdCBjb3AuCkkgaGFkIGEgYm9zcyB3aG8gbG9va2VkIGV4YWN0bHkgbGlrZSBEdXN0aW4gSG9mZm1hbi4gV2l0aGluIG15IGZpcnN0IDEwIG1pbnV0ZXMgb2YgbWVldGluZyBoaW0gaGUgbG9va2VkIGF0IG1lIGFuZCBzYWQgIldvdywgYSBibG9uZCBndXkgbGlrZSB5b3UgbXVzdCBnZXQgYSBsb3Qgb2YgcHVzc3kgYXJvdW5kIGhlcmUiLiBUaGVuIGhlIHByb2NlZWRlZCB0byB0ZWxsIGhpcyBhc3Npc3RhbnQgdGhhdCBJIGhhZCAiYSBodWdlIGNvY2siLiAKRWxpemFiZXRoIFdhcnJlbiAoRCBNQSksIFNlbi4gClVubGVzcyB5b3Ugc3BlY2lmaWNhbGx5IGFzayBmb3IgYSBjZXJ0YWluIGl0ZW0gdGhhdCB5b3UgY2FuIE5lZWQgb24sIGJ1dCBJIGNhbiwgaXQgZ29pbmcgdG8gYmVjb21lIEdDIHNlYWxzIGZvciBtZS4gSSBoYXBweSB0byBwYXNzIG9uIGEgcGllY2Ugb2YgZ2VhciB0aGF0IHlvdSBiZWVuIHRyeWluZyB0byBnZXQsIGJ1dCBJIGNhbWUgaW4gYWNjZXB0aW5nIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgdGFuayByb2xlIG9yIHRoZSBoZWFsZXIgcm9sZS4gWW91IGRvbiBnZXQgdG8gZGVzZXJ2ZSB0aGF0IGFzIGVxdWlwbWVudCBlcXVhbGx5IGFzIEkgZG8uIERvbiBsaWtlIGl0PyBQbGF5IGEgdGFuaywgb3IgcGxheSBhIGhlYWxlciwgYW5kIGFjY2VwdCB0aGUgcmVzcG9uc2liaWxpdHkgdGhhdCBjb21lcyB3aXRoIHRoZSByb2xlLCB0aGVuIHlvdSBnZXQgdG8gZGVzZXJ2ZSBpdCBtb3JlIHRoYW4gdGhvc2UgdGhhdCBjYW4gYW5kL29yIHdvbiBwbGF5IHRoYXQgcm9sZS4gVGhlIHBlb3BsZSBhc2tpbmcgZm9yIHNwZWNpZmljIGl0ZW1zIGNvdWxkIGJlIHVzaW5nIGl0IGZvciBhbnl0aGluZzsgZGVzeW50aCwgZ2xhbW9yLCBldmVuIHR1cm5pbmcgaXQgaW4gZm9yIEdDIHNlYWxzLCB0aGVtc2VsdmVzLgpbVGhlcmUgYXJlIGZvdXIgcGhvdG9ncmFwaHMgaW4gdGhpcyBnYWxsZXJ5LiBUaGUgZmlyc3QgdGhyZWUgYXJlIG9mIHR5cGV3cml0dGVuIGxldHRlcnMgc2VudCB0byB0aGUgZXN0YWJsaXNobWVudCwgb24gd2hpdGUgcGFwZXIgd2l0aCBhbiBBbWVyaWNhbiBmbGFnIGxvZ28gaW4gdGhlIHVwcGVyIGxlZnQgY29ybmVyIGFuZCBhIGJsdWUgc3RyaXBlZCBib3JkZXIgYXJvdW5kIHRoZSBlZGdlcy4gClNvIHRoZSBzcXVhdCBjaGFsbGVuZ2UgaXMgIm9wZW4iIGZvciBsaWZ0ZXJzIHRvIHdlYXIgd2hhdGV2ZXIgdGhleSB0aGluayB3aWxsIHdvcmsgYmVzdCBmb3IgdGhlbS4gU28gd2Ugc2VlIHdobyB0cmllcyB0byB1c2Ugd3JhcHMgb3Igd3JhcHMgYW5kIGEgbG9vc2Ugc3VpdCBvciBqdXN0IGtuZWUgc2xlZXZlcy4gCkF1ZiBzZWluZW4gUmVpc2VuIHVtIGRpZSBXZWx0IG5pbW10IGRlciBmcmFuenNpc2NoZSBGb3RvZ3JhZiBTZXJnZSBCcnVuaWVyIGRpZSBadXNjaGF1ZXIgbWl0IHp1IGRlbiBIaWdobGlnaHRzIGRlciBBc3Ryb25vbWllLiBBbSBSYW5kZSBkZXMgVnVsa2Fua3JhdGVycyBkZXMgQ2FsZGVpcmEgZGUgVGFidXJpZW50ZSBiZWZpbmRldCBzaWNoIGF1ZiBkZXIgSW5zZWwgTGEgUGFsbWEgZWluZXMgZGVyIHdlbHR3ZWl0IGdydGVuIFNwaWVnZWx0ZWxlc2tvcGUuIEJydW5pZXIgaGF0IGVzIGJlc3VjaHQuCllvdXIgc2tpbiBpcyBwcm9iYWJseSByZWVsaW5nIGZyb20gdGhlIHNob2NrIG9mIGJlaW5nIGV4cG9zZWQgdG8gYWlyIHRoYXQgaXMgYm90aCBmcmVlemluZyBjb2xkIGFuZCBib25lIGRyeS4gTXkgYWR2aWNlIGlzIHRvIHN0YXJ0IHBhbXBlcmluZy4gRG9uIGp1c3QgaHlkcmF0ZSwgdGhlIGRyeSBhaXIgaXMgdG9vIHBvd2VyZnVsIGZvciB0aGF0LCB5b3UgYWxzbyBuZWVkIHRvIG1vaXN0dXJpemUgYW5kIG1ha2Ugc3VyZSB0aGUgbW9pc3R1cmUgZ29lcyBkZWVwIGFuZCBzdGF5IHRoZXJlLgpJJ20gc3RpbGwgc2hvY2tlZCBhdCB0aGUgd2hvbGUgdGhpbmcgdG8gYmUgaG9uZXN0LiBJIHN0b29kIHVwIGZvciB0aGUgTkZMIHdpdGggc28gbWFueSBvZiBteSBwZWVycyBkdXJpbmcgdGhlIHdob2xlIGtuZWVsaW5nIHRoaW5nIGFuZCBJIGhhdmUgZ2l2ZW4gaXQgbXkgdGltZSwgbW9uZXksIGFuZCBwYXRpZW5jZS4gQnV0IEknbSBub3QgZXZlbiBnb25uYSB3YXRjaCB0aGUgU3VwZXIgQm93bC4gClNvIG1heWJlIHRoZSBjb3BzIGFyZSBjbG9zaW5nIGluIG9uIGhpcyBpZGVudGl0eSwgYW5kIGlmIGhlIGRvZXNuIGNoYW5nZSBoaXMgZGlzZ3Vpc2UgKGp1c3QgbWFraW5nIHRoaW5ncyB1cCkgaW4gWCByb3VuZHMsIHRoZXkgY2F0Y2ggaGltLiAKSWYgeW91IGtub3cgaGUgc2hvdmUgd2l0aCBBSyBvciBKSiB0byBhdHRhY2sgdGhlIGRlYWQgbW9uZXksIEFORCB5b3Uga25vdyBoZSBmbGF0cyBKSi9RUSB0byBhIDNiZXQsIEkgY291bGQganVzdGlmeSBmb2xkaW5nLiAKVGhlaXIgbWVkaWNhbCBhY3Rpb25zIGluY2x1ZGU6IE51dHJpZW50LCBkaXVyZXRpYywgYW50aSBpbmZsYW1tYXRvcnksIGFudGkgc3Bhc21vZGljLCBhbnRpc2VwdGljLCBhbnRpb3hpZGFudCBhbmQgdmFzY3VsYXIgdG9uaWMuIFRoZSBhY3Rpb25zIHdlIGFyZSBpbnRlcmVzdGVkIGluIGhlcmUgYXJlIHByaW1hcmlseSBhbnRpIGluZmxhbW1hdG9yeSBhbmQgYW50aXNwYXNtb2RpYy4gUmVkdWNlcyBkZXJtYXRpdGlzIGFuZCBpdCBhbHNvIGhhcyBhIG51bWJlciBvZiBhY3Rpb25zIG9uIG1pY3JvIGNpcmN1bGF0aW9uIHRlbmRpbmcgdG93YXJkIHJlcGFpcmluZyB0aGUgbGVha2FnZSBjYXVzZWQgYnkgYWxsZXJnaWMgcmVzcG9uc2VzLi4gCldpdGggdGhpcyBjb25kaXRpb24gYXJpc2luZyBlYXJseSBpbiB0aGUgbW9ybiBpbmcgbWFueSB3ZXJlIHVuYWJsZSB0byBzbGVlcCBhbmQgdGhlIGZhY3QgdGhhdCB0aGUgcG93ZXIgbGluZXMgd2VyZSBjb25zdGFudGx5IHNob3J0aW5nIG91dCBtYWRlIHRoZSBldmVuaW5nIHNlZW0gbW9yZSB0ZXJyaWFibGUgdGhhbiB3b3VsZCBiZSB0aGUgY2FzZSBvdGhlcndpc2UuIApUaHJlZSBvdGhlciBtYXJrZXRzIGVuZGVkIHRoZSBtb250aCB3aXRoIG1vcmUgdGhhbiAzLDAwMCByb29tcyBpbiB0aGUgdG90YWwgYWN0aXZlIHBpcGVsaW5lOiBCZXJsaW4sIEdlcm1hbnkgKDQsMDk1IHJvb21zKTsgTW9zY293LCBSdXNzaWEgKDMsNzgyIHJvb21zKTsgYW5kIFZpZW5uYSwgQXVzdHJpYSAoMywwMDkgcm9vbXMpLi4gClNvbWUgeWVhcnMgYmVmb3JlIGhpbSB0aGVyZSB3YXMgUm9uYWxkIFJlYWdhbi4gCkl0IGFuIGFudGllcGlsZXB0aWMgZHJ1ZyB3aXRoIHNlY29uZGFyeSB0cmFpdHMgYXMgYW4gYW50aXBzeWNob3RpYyBhbmQgbW9vZCBzdGFiaWxpemVyLiAKSm9obiBNYXluYXJkIEtleW5lcywgYSBzaHJld2Qgb2JzZXJ2ZXIgb2YgZmluYW5jaWFsIG1hcmtldHMgYW5kIGEgc3VjY2Vzc2Z1bCBpbnZlc3RvciwgaGlnaGxpZ2h0cyB0aGUgcGFyYWRveCB0aGF0IGJlaGF2aW9yYWwgZmluYW5jZSByZXByZXNlbnRzLiAKVGhlIGNvbnNpc3RlbnQsIGVlcmllIGFkcyB3ZXJlIG5vdGljZWQgYnkgam91cm5hbGlzdCBCcnlhbiBIYW5jZSwgYSBzdHVkZW50IHRoZXJlIGluIHRoZSBsYXRlICc5MHMuIEhlIGJlY2FtZSBpbnRyaWd1ZWQgYW5kIG1hZGUgYSB3ZWJzaXRlIHNvIGhlIGNvdWxkIGRpc2N1c3MgaGlzIGZpbmRzIHdpdGggbGlrZSBtaW5kZWQgcGVvcGxlLiBIb3dldmVyLCBpdCBzb29uIGJlY2FtZSBjbGVhciB0aGF0IHdob2V2ZXIgKHdoYXRldmVyPykgd2FzIGJlaGluZCB0aGUgYWRzIHdhcyBmb2xsb3dpbmcgSGFuY2UncyBpbnZlc3RpZ2F0aW9ucyB0b28uIEluIEphbnVhcnkgMTk5OSwgaGUgd2FzIGNvbnRhY3RlZCBieSBzb21lb25lIGNsYWltaW5nIHRvIHJlcHJlc2VudCBhIG1lbWJlciBvZiBhbiBvcmdhbml6YXRpb24gY2FsbGVkICJUaGUgT3JwaGFuYWdlLCIgdGhlIHNvY2lldHkgYmVoaW5kIHRoZSBhZHMuIFRoZXkndmUgYmVlbiB3YXRjaGluZyBoaW0gZXZlciBzaW5jZSwgb2NjYXNpb25hbGx5IGRyb3BwaW5nIGhpbnRzIGFuZCBnZW5lcmFsbHkgZW5jb3VyYWdpbmcgaGltIHRvIHNvbHZlIHRoZWlyIHJpZGRsZXMsIHNwZWNpZmljYWxseSBzdGF0aW5nOiAiV2hlbiB5b3Ugc2VlIHRoZSBkb29yIHlvdSB3aWxsIGJlIHdlbGNvbWVkIGluc2lkZS4iClNob3VsZCBub3QgYmUgYSBwcm9kdWN0IHNvbGQgaW4gdGhlIG1hcmtldCBmb3IgcHJvZml0LiBJdCBzaG91bGQgYmUgYSBiYXNpYyBodW1hbiByaWdodC4gCkl0IGNvbXBsZXRlbHkgbWlzc2VkIHRoZSBwb2ludC4gCkluIGFkZGl0aW9uIHRvIFNoYWxsb3cgYXQgbnVtYmVyIG9uZSwgdHdvIG90aGVyIHNvbmdzIGZyb20gdGhlIEEgU3RhciBJcyBCb3JuIHNvdW5kdHJhY2sgYXJlIGluIHRoZSB0b3AgNDAgdGhpcyB3ZWVrIEFsd2F5cyBSZW1lbWJlciBVcyBUaGlzIFdheSBhdCAyNSwgYW5kIEkgTmV2ZXIgTG92ZSBBZ2FpbiBhdCBudW1iZXIgMjcuCkhvd2V2ZXIgSCB3YXMgb24gVGlsdC4gSGVybydzIGV5ZXMgbGlnaHQgdXAgdG8gdGhlIGRpYW1vbmRzLiBBbmQgY2FsbHMuIFNCIGNhbGxzIGFzIHdlbGwuCkJ1dCB0aGUgZmFjdCByZW1haW5zIHRoYXQgYSBzbWFsbCBkZWJhdGUgaW4gdGhlIE5hdGlvbmFsIEFzc2VtYmx5IGNsZWFyZWQgdGhlIG1pc3QgZm9yIHdoaWNoIHRoZSBnb3Zlcm5tZW50IHdhcyByZWNlaXZpbmcgZmxhayBmb3IgYWxtb3N0IGEgd2Vlay4gSGVyZWluIGxpZXMgdGhlIGxlc3NvbiBmb3IgdGhlIGdvdmVybm1lbnQuLiAKT25lIFdlZWsgS0Mgc2NoZWR1bGUgbWFrZXMgcm9vbSBmb3IgdGhvc2UgdGhpbmdzLCB0b28uLiAKRm9yY2UgZXN0IGRlIGNvbnN0YXRlciBxdWUgY2VsYSBuIHBhcyBkb25uICB0b3VzIGxlIG1vbmRlIGV0IHF1ZSBsYSBydW5pb24gZGUgY2VzIGRldXggY29uZGl0aW9ucyBuZSBjb25jZXJuZSBxdSBmcmFjdGlvbiBkZSBsYSBwb3B1bGF0aW9uIGZyYW5haXNlLCAgZ3JhbmRlIG1ham9yaXQgdXJiYWluZSAoQ2UgbiBwYXMgdG91dCAgZmFpdCB1biBoYXNhcmQgc2kgVmFsbmV0IGV4ZXJhaXQgIFBhcmlzIGV0IG5vbiBhdSBmaW4gZm9uZCBkZSBsYSBDcmV1c2UgQWluc2ksIHVuIGdyYW5kIG5vbWJyZSBkZSBjZXMgcmVjZXR0ZXMgcmVzdGUgaW51dGlsaXNhYmxlIGVuIGwgQ2VsYSBkb25uZSBsIChtYWxoZXVyZXVzZSkgZGUgZGlzc3VhZGVyIHBsdXMgcXVlIGQgVW4gbGl2cmUgcXVpIG5lIGNvbGxlIHBhcyB2cmFpbWVudCAgbGEgcmFsaXQgZHUgdGVycmFpbiAoYWNjZXNzaWJpbGl0IGF1eCBwcmVzY3JpcHRldXJzIGV0IGF1eCBwcnBhcmF0ZXVycywgY290IGV4b3JiaXRhbnQgZGUgY2VydGFpbmVzIGNvbXBvc2l0aW9ucyAgYmFzZSBkIGVzc2VudGllbGxlcyBub24gaW5zY3JpdGVzIGF1IENvZGV4IDogbm9uIHNldWxlbWVudCBjIGNoZXIsIG1haXMgdm91cyBuZSBzZXJleiBtbWUgcGFzIHJlbWJvdXJzIHBhciBsYSBTY3VyaXQgU29jaWFsZS4gClRoYXQgc2FpZCBJIHdhcyBzdXJwcmlzZWQgdG8gc2VlIHRoZSBhdG9taWMgYm9tYiByZWZlcmVuY2VkIGluIGEgY29taWMgaW4gMTk0MCAoYm9vayBmaXZlIHllYXJzIGJlZm9yZSB0aGUgVHJpbml0eSB0ZXN0KTogIlRoZSBBdG9taWMgQm9tYiwgTHVja3kgQmlyZCwgRmxpZXIgb2YgRzIiMSBkZWZpbml0ZWx5IHN1Z2dlc3RzIGEgYm9tYiBvZiBoaWdoIHBvd2VyLCB3aGljaCBzbyBmYXIgYXMgSSBjYW4gZGV0ZXJtaW5lIGZyb20gbXkgbm9uIGV4aXN0ZW50IGNvbWljIGJvb2sgZXhwZXJ0aXNlIHNlZW1zIHRvIGJlIHRoZSBlYXJsaWVzdCBvZiBpdHMga2luZC4gClRoZXNlIGFyZWFzIHRlbmQgdG8gYmUgcmlza3kgZm9yIGJvdGggdGhlIGNsaWVudCBhbmQgdGhlIHByb3N0aXR1dGUsIGZyb20gYSBsZWdhbCBwZXJzcGVjdGl2ZSB3aGVuIGl0IGlzIGluIGEgcmVnaW9uIHdoZXJlIHN0cmVldCBwcm9zdGl0dXRpb24gb3Igc29saWNpdGF0aW9uIGlzIHByb2hpYml0ZWQgYnkgbGF3LCBvciBhbHNvIGZyb20gYSBzYWZldHkgcGVyc3BlY3RpdmUuIFRoZXNlIGFyZWFzIG1heSBiZSB0YXJnZXRzIGZvciBzdXJ2ZWlsbGFuY2UgYW5kIGFycmVzdHMgYnkgbGF3IGVuZm9yY2VtZW50LiBTb21lIG1hbGUgcHJvc3RpdHV0ZXMgc29saWNpdCBwb3RlbnRpYWwgY2xpZW50cyBpbiBvdGhlciBwdWJsaWMgc3BhY2VzIHN1Y2ggYXMgYnVzIHRlcm1pbmFscywgcGFya3MgYW5kIHJlc3Qgc3RvcHMuQmF0aGhvdXNlcyBhbmQgc2V4IGNsdWJzRWRpdE1hbGUgcHJvc3RpdHV0ZXMgbWF5IGF0dGVtcHQgdG8gd29yayBpbiBnYXkgYmF0aGhvdXNlcywgYWR1bHQgYm9va3N0b3JlcyBvciBzZXggY2x1YnMsIGJ1dCBwcm9zdGl0dXRpb24gaXMgdXN1YWxseSBwcm9oaWJpdGVkIGluIHN1Y2ggZXN0YWJsaXNobWVudHMsIGFuZCBrbm93biBwcm9zdGl0dXRlcyBhcmUgb2Z0ZW4gYmFubmVkIGJ5IG1hbmFnZW1lbnQuIApJIGNhbiBzZWUgaG93IGEgYm90IGxvb2tpbmcgZm9yIHZpc3VhbGx5IHNpbWlsYXIgY29udGVudCB3b3VsZCBmbGFnIHN1Y2ggdmlkZW9zIGFuZCBzaW5jZSBpdCBoYXMgbm8gd2F5IHRvIHRlbGwgdGhhdCBpdCBub3QgYW4gb3JpZ2luYWwgY29tcG9zaXRpb24gaXQganVzdCBmbGFncyBpdC4gTm90IHRoYXQgdGhpcyBpcyByaWdodCBpbiBhbnkgd2F5IGJ1dCBmYWxzZSBwb3NpdGl2ZXMgYXJlIGFsd2F5cyBhIHBvc3NpYmlsaXR5IHdoZW4gZGVhbGluZyB3aXRoIGFuIEFJLiAKRGVwZW5kaW5nIG9uIHlvdXIgc3RhdGUsIHRoZXJlIHNob3VsZCBiZSBhIHdheSB0byBnZXQgaXQgb25saW5lIHRocm91Z2ggeW91ciBzdGF0ZSBwb2xpY2UgZGVwYXJ0bWVudCwgYW5kIGl0IG5lZWRzIHRvIGJlIG5vdGFyaXplZCBhcyB3ZWxsIGJ5IGEgbm90YXJ5IHB1YmxpYyAod2hpY2ggY2FuIGJlIGRvbmUgcmVtb3RlbHkgYXMgd2VsbCkuIApQbGFjZSBhIHJlY29yZGluZyBzdXJ2ZWlsbGFuY2UgZGV2aWNlIGluIHlvdXIgYmVkcm9vbSBvciBuZWFyIHRoZSBwaG9uZSBhbmQgdGhlbiBsaXN0ZW4uIFBhcmsgaW4gYSBmcmllbmQncyBjYXIgd2l0aCBhIGhhdCBhbmQgc3VuZ2xhc3NlcyBvbiBhbmQgZm9sbG93IGhpcyBjYXIgb3Igd2FpdCBmb3Igc29tZW9uZSB0byBjb21lIHRvIHRoZSBob3VzZS4gCkxlYXJuaW5nIHRvIGVzdGltYXRlIGFuZCBhbnRpY2lwYXRlIHRoZSBvcHBvbmVudCBvcHRpb25zIHVzaW5nIGFsbCBhdmFpbGFibGUgaW5mb3JtYXRpb24gKGRlY2sgY29tcG9zaXRpb24sIHVudGFwcGVkIG1hbmEsIGJvYXJkIHN0YXRlLCBldGMpIGFuZCB1c2luZyB0aGF0IGtub3dsZWRnZSB0byByZWR1Y2UgKGJ1dCBuZXZlciBlbGltaW5hdGUpIHVuY2VydGFpbnR5LiAKQnV0IGF0IHRoZSBlbmQgb2YgdGhlIGRheSBmb29kIGFsbGVyZ2llcyBzaG91bGQgZmFsbCBvbiB0aGUgc2hvdWxkZXJzIG9mIHRoZSBwZXJzb24gYW5kIGZhbWlseSBvZiB0aGUgcGVyc29uIHdpdGggdGhlbSwgbm90IG9uIG90aGVyIHN0dWRlbnRzIGFuZCB0aGVpciBmYW1pbGllcy4KRGlkbiB3YW50IHRvIGdldCBpbnRvIHRoZSBudW1iZXJzLCBidXQgc2FpZCB0aGUgdG91cm5hbWVudCBoYXMgYnJvdWdodCBhIGJvb3N0IGluIHNhbGVzLmtpbmQgb2Ygd2lzaCB0aGV5IGRvIHRoaXMgZXZlcnkgeWVhciwgaGUgc2FpZCB3aXRoIGEgZ3Jpbi5PdXRzaWRlIFJvZ2VycyBBcmVuYSwgTWlrZSBIb2xzdCwgMjcsIGEgbG9uZ3RpbWUgRG90YSAyIHBsYXllciB3aG8gdHJhdmVsbGVkIGZyb20gTG9uZG9uLCBPbnQuLCBzYWlkIGhlIHdhdGNoZWQgVGhlIEludGVybmF0aW9uYWwgc2luY2UgaXQgd2FzIGZpcnN0IGhlbGQgaW4gR2VybWFueSBpbiAyMDExLiAKU2hlJ3MgZmVhcmxlc3MsIGFsc28uIApKdXN0IG92ZXIgdHdvIHdlZWtzIGFnbywgQ3JhaWdzbGlzdCBiZWdhbiBjaGFyZ2luZyBhIGZlZSB0byBhZHZlcnRpc2Ugb24gdGhlIHNpdGUncyAiZXJvdGljIHNlcnZpY2VzIiBzZWN0aW9uLiBUaGUgZmVlIGlzIHNtYWxsICAgJDUgICBidXQgdGhlIGNvbnNlcXVlbmNlcyBhcmUgaHVnZS4KT3JmZW8gUG9uc2luIGRpZWQgaW4gMTk1MiwgSnVhbiBNYW51ZWwgU2FudGlzdGViYW4gaW4gMTk3NiBhbmQgRW1pbGlvIFJhdmFzaW8gaW4gMTk4Ni4uIApXb3VsZCB0aGUgYW1vdW50IGJlIGltYmliZWQgZXZlbmx5IHRocm91Z2hvdXQgYSAyNCBob3VyIHBlcmlvZCBvciBtb3JlIGRyYXN0aWNhbGx5IG92ZXIgYSAyIDQgaG91ciBwZXJpb2QsIGZvciBleGFtcGxlLiAKVGhvbWFzIChEeWxhbiBPJ0JyaWVuKSBhbmQgaGlzIGZlbGxvdyBHbGFkZXJzIGhhdmUgZm91Z2h0IHRoZWlyIHdheSBvdXQgb2YgYSBHcmlldmVyIGluZmVzdGVkIGxhYnlyaW50aCwgYWJhbmRvbmVkIHN0cmVldHMgZmlsbGVkIHdpdGggRmxhcmUgaW5mZWN0ZWQgQ3JhbmtzIGFuZCBhdm9pZGVkIGtpZG5hcCBieSBuZWZhcmlvdXMgV0NLRCB0cm9vcHMuIEJ1dCBub3cgY29tZXMgdGhlaXIgYmlnZ2VzdCBjaGFsbGVuZ2Ugb2YgdGhlbSBhbGwuIFRoZXkgY2FuIG5vIGxvbmdlciBydW4gYW5kIGhpZGUgZnJvbSB0aGVpciBmYXRlLiBUaGV5IG11c3QgYmFuZCB0b2dldGhlciB0byB0YWtlIGRvd24gV0NLRCBhbmQgc2F2ZSB0aGVpciBmcmllbmRzLCBhbmQgdGhlIHJlc3Qgb2YgY2l2aWxpc2F0aW9uLCBvbmNlIGFuZCBmb3IgYWxsLgpTZ3QgS2VldmVycyBzYWlkIHBvbGljZSBnYXZlIG5vdGljZSB0byBvd25lcnMgdGhhdCBpdCB3YXMgaWxsZWdhbCB0byBvd24gYSBtYWNoaW5lLCByYXRoZXIgdGhhbiBjaGFyZ2luZyB0aGVtLCBhcyB0aGUgb2ZmZW5jZSBhbmQgcGVuYWx0aWVzIHdlcmUgbm90IHdpZGVseSBrbm93bi4KVGhvc2UgTWFkZSBpbiBDaGluYSBzb2xhciBwYW5lbCBsaWZlc3BhbiBsYXN0cyBhYm91dCA1IHllYXJzLiAKQWhzYW4gSXFiYWwgd2VudCB0byB0aGUgVVMgYW5kIHZpc2l0ZWQgVUNMQSBhbmQgTUlULiAKVG8gdGhlIHRhYmxlJ3MgYW1hemVtZW50LCB0d28gQWNlJ3MgZmFsbCBkb3duIG9uIHRoZSB0YWJsZS4gVGhlIGZpcnN0IHBsYXllcidzIG1vdXRoIGNvbWVzIG9wZW4gYXMgaGUgcmVhbGl6ZXMgdGhhdCBoZSBoYXMgYmVlbiBiZWF0LiAKTGV0IGFzc3VtZSBoaWdoamFjayBpcyBvcGVuaW5nIGEgdmVyeSB0aWdodCByYW5nZSBiZWNhdXNlIG9mIHRoZSBwbGF5ZXIgdGhhdCB3aWxsIGJlIGZvcmNlZCBhbGwgaW4gaW4gdHdvIGhhbmRzLCBzbyBoZSBvcGVuaW5nIDc3IEFBLCBBUW8rLCBBSnMrLCBhbmQgUUtzLiBJZiBoZSB3aWxsIGNhbGwgb3VyIHNob3ZlIHdpdGggb25seSA5OSsgYW5kIEFLLCB3aGljaCBzZWVtcyByZWFzb25hYmxlIGdpdmVuIHRoZSBJQ00gZHluYW1pYywgd2UgYXJlIGxvc2luZyAkMTA3IGJ5IHJlc2hvdmluZyB2cyBoaXMgb3Blbi4gKHRoaXMgYXNzdW1lcyB0aGF0IFNCLCB0aGUgYmlnIHN0YWNrLCB3aWxsIGNvbGQgY2FsbCBvdXIgc2hvdmUgd2l0aCBUVCsgYW5kIEFLLCBhbmQgQkIgd2lsbCBvbmx5IGNhbGwgd2l0aCBRUSsuClBvenVlbG8gaGFzIHNjb3JlZCAyNSBnb2FscyBhbmQgYWRkZWQgNjAgYXNzaXN0cyBpbiAxNzUgYXBwZWFyYW5jZXMgc2luY2Ugam9pbmluZyB0aGUgQmVsZ2lhbiBsZWFndWUgbGVhZGVyIGluIEF1Z3VzdCAyMDE1LgpXYXMgZmluaXNoaW5nIHVwIGEgYm9vayBvbiBqdXN0IHRoYXQgdG9waWMgKEFtZXJpY2FuIFBsYXN0aWMpIGFuZCB0aGUgbW9yZSBJIGtuZXcgYWJvdXQgaG93IGluIGRlYnQgQW1lcmljYW5zIHdlcmUsIHRoZSBtb3JlIGFuZ3J5IEkgYmVjYW1lLiAKSW4gb3JkZXIgZm9yIHRoZSBnYW1lIHRvIGJlZ2luIHR3byBwbGF5ZXJzIG11c3QgcGxhY2UgdGhlIGJpZyBhbmQgdGhlIHNtYWxsIGJsaW5kcy4gVGhlIHNtYWxsIGJsaW5kIHdpbGwgYmUgcGxhY2VkIGJ5IHRoZSBwbGF5ZXIgdG8gdGhlIGltbWVkaWF0ZSBsZWZ0IG9mIHRoZSBidXR0b24uIApIZSBkdWVsaW5nIGluIGZyb250IG9mIE9yZ3JpbW1hciwgInlvdSBrbm93IHlvdSBnb2luZyB0byBsb3NlLiBZb3Ugbm90IGdvb2QgYXQgYW55dGhpbmcuIAoiTWF5YmUgc29tZWRheSB0aGF0IHdpbGwgYmUgbWUsIGJ1dCBmb3IgdGhlIG1vc3QgcGFydCBpbiBteSBjYXJlZXIsIGl0J3MganVzdCBhYm91dCBwbGF5aW5nIGFuZCBwaWNraW5nIHVwIHRoZSBleHRyYXMuIgpUaHJlZSB5ZWFycyBsYXRlciwgUmlpcyByZXBvcnRlZCB0aGUgc3Rvcnkgb2YgdGhpcyBoaWdobHkgc3VjY2Vzc2Z1bCAicGVubnkgc3Vic2NyaXB0aW9uIiBpbiB0aGUgbWFnYXppbmUgVGhlIE91dGxvb2ssIHVyZ2luZyBpdHMgZHVwbGljYXRpb24gaW4gdGhlIFVuaXRlZCBTdGF0ZXMuIFJpaXMgcG9pbnRlZCB0byB0aGUgZmFjdCB0aGF0ICJubyBtaWxsaW9uYWlyZSIgaGFkIHlldCBjb21lIGZvcnRoICJ0byBlbmRvdyIgdGhlIGZpZ2h0IGFnYWluc3QgdHViZXJjdWxvc2lzIGluIEFtZXJpY2EsIGFuZCB3ZW50IG9uIHRvIHNheSB0aGF0ICJubyBtaWxsaW9uYWlyZSIgd2FzICJ3YW50ZWQsIiB0aGF0IHRoZSBqb2Igd291bGQgYmUgImZhciBiZXR0ZXIgZG9uZSBieSB0aGUgcGVvcGxlIHRoZW1zZWx2ZXMuIi4gClRoZSBhbW91bnQgYW5kIGRpc3RyaWJ1dGlvbiBvZiBudXRyaWVudHMgb3VyIGZvcmViZWFycyBhdGUgaXMgYSBmYXIgY3J5IGZyb20gd2hhdCBtb3N0IG9mIHVzIGVhdCB0b2RheS4gT3ZlcmFsbCwgd2UgY29uc3VtZSBmZXdlciBjYWxvcmllcywgYnV0IHZhc3RseSBkaWZmZXJlbnQgb25lcy4KV2hvIFdpbnMgYW5kIFdobyBEb2VzbiBwb2tlciwgcGVvcGxlIHdobyBiZWxpZXZlIHRoYXQgdGhlaXIgY2FyZHMgYXJlIG5vdCB0aGF0IHN0cm9uZyBvciB1cCB0byBwYXIgd2l0aCB0aGVpciBjb21wZXRpdG9ycyBpbW1lZGlhdGVseSBjaG9vc2UgdG8gZm9sZCBvciBnaXZlIHVwLiBJbiBibGFja2phY2ssIHdoaWxlIHRoZXJlIG5vIHN1Y2ggdGhpbmcgYXMgZm9sZGluZywgdGhlcmUgaXMgc3VjaCBhcyB0aGluZyBhcyBhbiBpbW1lZGlhdGUgZ2FtZSBsb3NzICAgdGhpcyBpcyB3aGF0IGhhcHBlbnMgd2hlbiB5b3VyIGNhcmRzIGFyZSBidXN0ZWQuIENhcmRzIGFyZSBidXN0ZWQgd2hlbiB0aGUgdmFsdWUgdG90YWxzIHNvbWV0aGluZyBtb3JlIHRoYW4gdHdlbnR5IG9uZS4gCkl0IGZlbHQgbGlrZSBoZSBqdXN0IGZlbGwgaW50byBpdC5JIGRpZCBsaWtlIGhvdyB0aGV5IGNoYW5nZWQgdXAgdGhlIGNoYWxsZW5nZXMgICBtYWRlIHRoZW0gbW9yZSBhZGFwdGFibGUgZm9yIGEgbW92aWUgYW5kIGV4Y2l0aW5nIHRvIHdhdGNoLiBJIGxpa2VkIGhvdyB0aGV5IGJyb3VnaHQgaW4gdGhlIElyb24gR2lhbnQsIGFuZCBicmluZ2luZyB1cyBpbiB0byB0aGUgcmVhbCB3b3JsZCBtb3JlLiBUaGUgY2hhcmFjdGVyIGRldmVsb3BtZW50IHdhc24gZ3JlYXQsIGJ1dCBzdGlsbCBiZXR0ZXIgdGhhbiB0aGUgYm9vay4gCkEgbG90IG9mIHNxdWF0IGRvbWluYW50IHBvd2VybGlmdGVycyBoYXZlIGJpZyBsZWdzIGV2ZW4gdGhlIGd1eXMgbm90IG9uIGdlYXIuIEl0IGp1c3QgdGhhdCBpbiBwb3dlcmxpZnRpbmcgeW91ciB0b3RhbCBpcyBhbGwgdGhhdCBjb3VudHMgYW5kIHF1YWRzIHBsYXkgYSBzbWFsbCBwYXJ0IGluIHRoYXQgc28gdGhleSBkb24gZ2V0IG11Y2ggZm9jdXMuIElmIHlvdSBkbyBhIHN0cmVuZ3RoIHByb2dyYW0ganVzdCBhZGQgbW9yZSBxdWFkIGFzc2lzdGFuY2Ugd29yayB0byBpbmNyZWFzZSBzaXplIG9uIHRob3NlLiAKIllvdSB3YWxrIGJ5IHRoZXNlIHBsYWNlcyBhbmQgdGhleSBoYXZlIGxvb2tvdXRzIHdobyBzYXksICdNYXNzYWdlLCBtYXNzYWdlLCBtYXNzYWdlLCBjb21lIHVwc3RhaXJzLCciIFBlcmFsdGEgc2FpZC4gIldlIG5lZWQgdG8gcmVndWxhdGUgdGhlc2UgYnVzaW5lc3Nlcy4iCk1lbnRhbGx5IHByZXBhcmVzIHVzIHRvIGhvbGQgc3RpbGwgcG9zZXMgYnkgYnJpbmdpbmcgb3VyIGF0dGVudGlvbiB0byBzZW5zYXRpb25zL2VhY2ggcGFydCBvZiB0aGUgYm9keSBhdCB0aGUgb3BlbmluZyBvZiBjbGFzcwpCdXQgSSBzdXJlIHRoZXNlIGRvbiBtYXR0ZXIgdG8geW91IGJlY2F1c2UgdGhleSBwcm92ZSB0aGF0IHJhY2UgYW5kIGluY29tZSBhcmUgc2VwYXJhdGUgaXNzdWVzIGFuZCBub3Qgb25lIHRoaW5nLiAKQXJlIHRoZSBtaXNzaW5nIHN0aXRjaGVzIHJpZ2h0IGluIHRoZSBtaWRkbGUgb2YgdGhlIGJhZz8gVGhlaXIgcXVpbHRzIGFyZSBidWlsdCAob3IgdXNlZCB0byBiZSBidWlsdCwgYW55d2F5KSB0byBhbGxvdyB5b3UgdG8gdHJhbnNmZXIgZG93biBmaWxsIGJldHdlZW4gdGhlIGxhcmdlIGJhZmZsZSBjaGFtYmVycy4gSSBhbHdheXMgZm91bmQgaXQgYW5ub3lpbmcgYW5kIGRpZmZpY3VsdCB0byBkbyBpbiByZWFsaXR5LCBidXQgSSBiZWxpZXZlIHRoYXQncyB3aGF0IHRob3NlIG9wZW5pbmdzIGFyZSBmb3IuIE1pbmUgaGFkIGl0IHRvby4KSSB3YW50ZWQsIGl0J3MgYSBzaGFtZSB0byBzYXksIEkgYWx3YXlzIHdhbnRlZCB0byBkbyB3cm9uZy4gIi4gCk92ZXJ2aWV3IGZvciA5YW1pbkFUTApFbWFuc1RoZUJlYXUgdQpJZiB5b3UgaGF2ZSBzb21lIHdlaXJkIGZsZXNoIGVhdGluZyBiYWN0ZXJpYSBhbmQgdGhleSB0b2xkIHlvdSBpdCB3YXMgYSBza2luIHJhc2ggYW5kIHNlbnQgeW91IGhvbWUgd2l0aCBhIGNyZWFtIGFuZCB0aGVuIHlvdSBkaWVkIGJlY2F1c2UgdGhleSBuZXZlciBib3RoZXJlZCB0byByZWZlciB0byBkZXJtYXRvbG9neSB0aGVuIHRoYXQgdGhlaXIgYXNzLiBJZiB0aGV5IHJlZmVyIHRvIGRlcm1hdG9sb2d5IGFuZCB5b3UgZG9uIGdvIHRvIHRoZSBhcHBvaW50bWVudCBiZWNhdXNlIHRoYXQgZG9jdG9yIGlzIG91dCBvZiBuZXR3b3JrIHRoZW4gdGhhdCAxMDAlIG9uIHlvdSBidXQgdGhleSBkaWQgdGhlaXIgZHVlIGRpbGlnZW5jZSBpbiByZWZlcnJpbmcgeW91IHRvIHRoZSByaWdodCBwZXJzb24uIApEZXIgaW1wb3NhbnRlIEdvcmlsbGEgaXN0IE5hbWVuc2dlYmVyIGZyIGRhcyBnZW1laW5zYW1lIFByb2pla3QgZGVzIFdXRiBtaXQgRGlzbmV5cyBNdXNpY2FsIFRBUlpBTi5JbSBEemFuZ2EgU2FuZ2hhIFNjaHV0emdlYmlldCBoYWJlbiBNZW5zY2ggdW5kIFRpZXIgZ2VsZXJudCwgVmVydHJhdWVuIHp1ZWluYW5kZXIgYXVmenViYXVlbi4gQXVlcmdld2hubGljaGUgQmVnZWdudW5nZW4gd2VyZGVuIGRhIG1nbGljaC4gCkhpZXIgZmluZGVuIFNpZSBkaWUgLiBBbmRyb2lkIE9TIGF1c3Byb2JpZXJlbjogR2FueiBlaW5mYWNoIHBlciBVU0IgU3RpY2suIApXaWxsIHlvdSBzdWNjdW1iIHRvIHRoZSBwcmVzc3VyZXMgYW5kIGRpY3RhdGlvbnMgb2Ygb3RoZXJzLCBvciB3aWxsIHlvdSB0dXJuIHRoZSB0YWJsZXMgb24gdGhlbSBhbmQgYnJpbmcgdGhlbSBpbnRvIHlvdXIgd29ybGQgd2hlcmUgeW91IHRha2UgY2hhcmdlIG9mIHdoYXQgaGFwcGVucy4gCkl0J3MgZ2V0dGluZyB0b3VnaGVyIGZvciBCdW0gTWFya2V0ZXJzIHRvIHByb21vdGUgY2VydGFpbiBjYXRlZ29yaWVzLiAKR29kIGlzIHRoZSBvbmx5IGFuc3dlci4gSW4gb3JkZXIgdG8gbGV0IEhpbSBtb3ZlIHBvd2VyZnVsbHkgaW4gb3VyIGxpdmVzLCBoZWFydHMsIGFuZCBuYXRpb24sIHRoZXJlIGFyZSBzb21lIHN0ZXBzIHdlIG5lZWQgdG8gdGFrZS4gRmlyc3Qgb2YgYWxsLCB3ZSBtdXN0IHN0aXIgdXAgb3VyIGZpcmUuIFBhdWwgd3JvdGUgdG8gVGltb3RoeSwgIlN0aXIgdXAgdGhlIGdpZnQgb2YgR29kLCB3aGljaCBpcyBpbiB5b3UgLiBGb3IgR29kIGhhcyBub3QgZ2l2ZW4gdXMgdGhlIHNwaXJpdCBvZiBmZWFyLCBidXQgb2YgcG93ZXIsIGFuZCBsb3ZlLCBhbmQgc2VsZiBjb250cm9sIiAoMiBUaW0uIDE6NiA3KS4gV2hlbiB0aGUgZmlyZSBvZiBHb2QgZ2V0cyBsb3cgaW4geW91ciBsaWZlLCB5b3UgbXVzdCBiZSB0aGUgb25lIHRvIGdldCBvdXQgdGhlIHBva2VyIG9mIEdvZCdzIFdvcmQgYW5kIGJlZ2luIHRvIHN0aXIgdXAgdGhlIGZpcmUuCldyaXRpbmcgYSBzb2xpZCB0ZXN0IHBsYW4KQWxzbywgSSBsaWtlIHRvIHNheSB0aGF0IEkgcGVyc29uYWxseSBzdG9wcGVkIHRyZWF0aW5nIE5ld3N3ZWVrIGFzIG5ld3MgZXZlciBzaW5jZSB0aGV5IHdlbnQgd2l0aCB0aGUgc3RvcnkgYWJvdXQgYSByYW5kb20gSmFwYW5lc2UgbWFuIGJlaW5nIHRoZSBmb3VuZGVyIG9mIEJpdGNvaW4uClRoYXQgaXMgc28gbXVjaCBidWxsc2hpdC4gRXNwZWNpYWxseSBpbiBBdXRvLCBjYXJyaWVycyBhbmQgY2xhaW1zIGhhbmRsZXJzIGFyZSBhYnNvbHV0ZWx5IHdvcmtpbmcgdG8gZ2V0IGNsYWltYW50cyBtZWRpY2FsIHRyZWF0bWVudHMsIHJlcGFpcnMsIHJlcGxhY2VtZW50IHZlaGljbGVzIGFuZCBldmVyeXRoaW5nIGVsc2UgbmVlZGVkIGluIHRoZSBtb3N0IGVmZmljaWVudCBhbmQgZWZmZWN0aXZlIG1hbm5lciBwb3NzaWJsZS4gVGhlcmUgaXMgbm90IGEgbWFpbnN0cmVhbSBhdXRvIGNhcnJpZXIgaW4gZXhpc3RlbmNlIHRoYXQgaXMgbWFraW5nIGFueSBzb3J0IG9mIGVmZm9ydCB0byBzaG9ydCBjbGFpbXMgb3IgZmluZCB3YXlzIG5vdCB0byBwYXkuLiAKTXkgZnJpZW5kcyBhcmUgYWxsIGJpZyB0cmF2ZWxsZXJzIGxpa2UgeW91IGFuZCBtZSwgYW5kIHRoZSBvbmVzIGluIG1hcnJpYWdlcy9sb25nIHRlcm0gY29tbWl0bWVudHMgb2Z0ZW4gdHJhdmVsLCBzb21ldGltZXMgd2l0aCB0aGVpciBTTywgc29tZXRpbWVzIGJ5IHRoZW1zZWx2ZXMsIHNvbWV0aW1lcyB3aXRoIGZyaWVuZHMuIFRoZSBTT3Mgb2Z0ZW4gd2VyZW4gYXMgYmlnIGludG8gdHJhdmVsbGluZyBsaWtlIHRoZXkgaGFkIG5vdCBhIGxvdCBvZiBleHBlcmllbmNlLiAKQWJzdHJhY3QgZGlyZWN0bHkgYWJvdmUuIFNpbmNlIHRoZSB0aXRsZSBpc24ndCBjbGVhciwgdGhlIG9ubHkgdmFyaWFibGUgY2hhbmdpbmcgaW4gdGhlIHN0dWR5IGlzIHdoZXRoZXIgdGhlIHdlbGZhcmUgcmVjaXBpZW50cyByZXBvcnRlZGx5IGZvdW5kIHdvcmsgb3Igbm90LiAKQWN0dWFsbHkgdGhlIGJlc3Qgd2F5IHRvIGxlYXJuIGlzIG5vdCBieSBjb2FjaCBmaXJzdCwgYnV0IHdhdGNoaW5nIGNoZXNzIG9wZW5pbmcgdmlzZW9zIG9uIHlvdXR1YmUgZm9yIGJhc2ljcywgYW5kIHRoZW4gcmVhZGluZyBhcnRpY2xlcyBhYm91dCBzb21lIHNwZWNpZmljIG9wZW5pbmdzIGluIHRoZSBpbnRlcm5ldC4KSW4gYW55IGNhc2Ugd2hhdCBldmVyeW9uZSBzaG91bGQgd2F0Y2ggb3V0IGZvciBpcyBTY2FtIGVtYWlscyBhbmQgbWVzc2FnZXMgaW4gZmFjZWJvb2sgd2hlcmUgeW91IGFyZSBzdXBvc2UgdG8gYmUgYXdhcmRlZCBvciBiYW5lZCBmb3IgYW55IHJlYXNvbiwgYW5kIHlvdSBhcmUgYXNrZWQgdG8gY2xpY2sgYSBsaW5rIHRvIHZlcmlmeSB5b3VyIGFjY291bnQsIHdoZXJlIHlvdSB3b3VsZCBuZWVkIHRvIGxvZ2luIG9mIGNvdXJzZTsgd2hlbiB5b3UgbG9naW4gdG8gdGhhdCBsaW5rIHlvdSBkb24ndCBhY3R1YWxseSB2ZXJpZnkgYW55dGhpbmcgeW91IGp1c3QgZ2l2ZSBvdXQgeW91ciBwYXNzd29yZCBhbmQgYWNjb3VudCB0byBzb21lIGhhY2tlcnMuIFRoZSB3ZWJzaXRlIG1heSBsb29rIHZlcnkgd2VsbCBsaWtlIGZhY2Vib29rIG9yIGFueSBvdGhlciBraW5kIG9mIHNlY3VyaXR5IGludmVudGVkIHdlc2JpdGUuIEFtYXpvbiBhbmQgZUJheSBhcmUgZ3JlYXQgdG8gZmluZCBnb29kIGNoaXBzLiBIb3dldmVyLCBtb3N0IG9mIHRoZSBjaGlwcyBvbiBlQmF5IGFuZCBBbWF6b24gYXJlIG1hZGUgb2YgcGxhc3RpYyBhbmQgaGF2ZSBtZXRhbCBpbnNlcnRzLiAKVGhhbmsgeW91LiBJIG1lYW4gYmVmb3JlIHRoZXNlIDIgbXkgY2hpbGRob29kIGRvZ3Mgd2VyZSBicm90aGVyIGFuZCBzaXN0ZXIgYW5kIGhhZCBiZWVuIHRvZ2V0aGVyIHNpbmNlIGJpcnRoLiBBdCAxMywgb25lIGdvdCBoaXAgZHlzcGxhc2lhIGFuZCB3ZSBoYWQgdG8gcHV0IGhlciBkb3duLiBUaGUgYm95IHdobyB3YXMgYWx3YXlzIHRoZSBvbmUgd2hvIG5ldmVyIGRpZCBhbnl0aGluZyB3cm9uZywgc29tZWhvdyBtYW5hZ2VkIHRvIGdldCBvdXQgZm9yIHRoZSBmaXJzdCB0aW1lIGFuZCBnb3QgaGl0IGJ5IGEgY2FyIHdpdGhpbiBhIHdlZWsuIFdlIHRoaW5rIGhlIHdhcyBvdXQgbG9va2luZyBmb3IgaGVyLiBTbyBJIGd1ZXNzIGl0IGlzIGZhaXJseSBjb21tb24gd2l0aCBib25kZWQgcGFpcnMsIEkganVzdCBjYW4gc2NpZW50aWZpY2FsbHkgbWFrZSBzZW5zZSBvZiBpdCBpbiBteSBoZWFkIGFuZCBJIGtlZXAgc2VhcmNoaW5nIGZvciBhIHJlYXNvbiwgb3Igc29tZXRoaW5nIEkgbXVzdCBoYXZlIGRvbmUgd3JvbmcgdG8gcHJvbXB0IGl0IHNvIHF1aWNrbHkuIEJ1dCB5b3UgYXJlIHJpZ2h0LCBzb21ldGltZXMgaXQganVzdCBoYXBwZW5zLCBhbmQgaXQgaXMgZm9yIHRoZSBiZXN0LiBJbiB0aGUgdHdvIGRheXMgaGUgd2FzIHdpdGhvdXQgaGVyIGhlIHdhcyB2ZXJ5IHNhZCBhbmQga2VwdCBsb29raW5nIGZvciBoZXIgd2FpdGluZyBieSB0aGUgZG9vci4gU28gZ2xhZCB0aGV5IGNhbiBiZSB0b2dldGhlciBhZ2Fpbi4KSHVtYW5zIGhhdmUgYmVlbiBjb29raW5nIGZvciB3ZWxsIG92ZXIgYSBodW5kcmVkIHRob3VzYW5kIHllYXJzLiAKRGlzaCBpcyBsaWtlIEZyZW5jaCBzdHlsZSBicmFpc2VkIGxlZWtzIG1ldCBhIGhlYXAgb2YgbXVzc2VscyBhbmQgZmVsbCBpbiBsb3ZlLCB3cml0ZXMgTWFnZ2llIEJhdHRpc3RhLiBTaGUgY2FsbHMgZm9yIGEgY2FuIG9mIHBpbHNuZXIgc3R5bGUgYmVlciBmb3IgdGhlIGJyb3RoLCB3aGljaCBtYXJyaWVzIGJyaW55IGNhcGVycyBhbmQgdGFuZ3kgRGlqb24gbXVzdGFyZC4gQ29tYmluZWQgd2l0aCBzdXN0YWluYWJsZSwgd2FsbGV0IGZyaWVuZGx5IG11c3NlbHMsIGl0IG1ha2VzIGZvciBhbiBhZmZvcmRhYmxlIHlldCBzcGVjaWFsIG1lYWwuCklmIHlvdSB3ZXJlIHRoZXJlIGFuZCByZWFkIHRoZSBleGNoYW5nZXMsIHlvdSBrbm93IGV4YWN0bHkgd2hhdC93aG8gSSB0YWxraW5nIGFib3V0LiAKTWF5YmUgaWYgdGhleSBhcmUgYSBzdXBlciBuaXQgYW5kIGhhdmUgc2hpdHR5IGFjZXMgdGhleSBmb2xkIHRoZW0uIApUaGUgbWludXRlIEkgYmVjYW1lIGEgcGFyZW50LCBJIHdhcyBsaXRlcmFsbHkgaG9ycmlmaWVkLCB0cnVseSBob3JyaWZpZWQsIHRvIHRoaW5rIHRoYXQgdGhleSwgYXMgcGFyZW50cywgZmFjZWQgd2l0aCBhIGJlYXV0aWZ1bCBpbm5vY2VudCBjaGlsZCwgYWxsb3dlZCB0aGVtc2VsdmVzIHRoZSBTSElUIHRoZXkgZGlkLCB0aGUgaG9ycmlibGUsIHRob3VnaHRsZXNzLCBzZWxmaXNoLCB3aWNrZWQsIHNlbGYgaW5kdWxnZW50IHdheSB0aGV5IGFsbG93ZWQgdGhlbXNlbHZlcyB0byBpbnRlcmFjdCB3aXRoIGhlbHBsZXNzIHlvdW5nc3RlcnMgaXQgYWxsIGJlY2FtZSBldmVuIG1vcmUgYXBwYWxsaW5nIHRvIG1lLgpXaGF0IGFib3V0IHlvdXIgb3duIHBlcnNvbmFsIGJsb2c/IFNlZW1zIG1vcmUgdXNlZnVsLiBXaGF0IGFib3V0IGEgYmxvZyB0aGF0IHNvbWVvbmUgZWxzZSwgYSBtYXJrZXRpbmcgcGVyc29uIHdpdGggbm8gY29kaW5nIGtub3dsZWRnZSwgbWFpbnRhaW5zPyBBYnNvbHV0ZWx5LiBUaGUgc2FtZSBnb2VzIGZvciBhbnkgcGFja2FnZSBvciBmcmFtZXdvcmsuLiAKVGhlIGRlY2xpbmUgb2YgdGhlIGNydW5jaCBjYW4gYWxzbyBiZSBzZWVuIGF0IG9yZGluYXJ5IHN3ZWF0IGZpbGxlZCBneW1zLgpNb3N0IG9mIHRoZSB0aW1lIHdoZW4gd2UgdHJ5IHRvIGd1ZXNzIHdoYXQgcGVvcGxlIGFyZSB0aGlua2luZyAob3IgZ3Vlc3Mgd2hhdCB0aGV5IHdhbnQpIHdlIGFyZSB3cm9uZyBhbnl3YXkuIApJIGdvaW5nIHRvIGFzayB5b3UgcXVlc3Rpb25zIGFib3V0IGl0IGFuZCBJIHdhbnQgeW91IHRvIGFzayBtZSBxdWVzdGlvbnMgYWJvdXQgaXQuIApUaGUgcnVsZXMgYW5kIHJlZ3VsYXRpb24gb2YgdGhlIGdhbWVzIGRpZmZlciBmcm9tIHJlZ2lvbiB0byByZWdpb24uIApCdXQgaXMgaXQgYW55IGVhc2llciB0byBhZmZlY3QgYWN0dWFsIGNoYW5nZT8gVGhlIHRoaW5nIHRoYXQgZnJ1c3RyYXRlcyBtZSB0aGUgbW9zdCBhYm91dCB3aGVuZXZlciB0aGUgaW50ZXJuZXQgaGFzIHNvbWUgZnJlYWsgb3V0IGFib3V0IHNvbWUgc29jaWFsIGlzc3VlIHBvcHBpbmcgdXAgaW4gbWVkaWEgaXMgd2hvIG9yIHdoYXQgaXMgdGhpcyBldmVuIGhlbHBpbmc/IFNldHRpbmcgYXNpZGUgdGhlIGZhY3QgdGhhdCB0aGVyZSBhcmUgYWxsIHNvcnRzIG9mIG1vcmUgcHJlc3NpbmcgaXNzdWVzIHdlIGNvdWxkIGJlIGdldHRpbmcgYW5ncnkgYWJvdXQsIGV2ZW4gaWYgd2UganVzdCBuYXJyb3cgb3VyIHNjb3BlIHRvIG9ubHkgY2FyaW5nIGFib3V0IHRoZXNlIGlzc3Vlcywgd2hhdCBpcyBhY2hpZXZlZCBmcm9tIGFsbCBvZiB0aGlzIGludGVybmV0IGZpZ2h0aW5nPyBJIGRvdWJ0IHdlIGNoYW5naW5nIGFueSBwb3NpdGlvbnMgb24gdGhpcy4gVGhlIHBlb3BsZSB3aG8gYWxyZWFkeSBhZ3JlZSBnZXQgdG8gcGF0IHRoZW1zZWx2ZXMgb24gdGhlIGJhY2sgZm9yIG5vdCBiZWluZyBhbiBvdGhlciBhbmQgd2UgYWxsIGdldCB0aGUgY2hhbmNlIHRvIGtpY2sgYW4gZWFzeSB0YXJnZXQuIFRoZSBwZW9wbGUgd2UgYWdhaW5zdCBoYXJkZW4gdGhlbXNlbHZlcyBpbiB0aGVpciBwb3NpdGlvbiBhbmQgaGF2ZSB0aGVpciBpZGVhcyB0aGF0IHRoZSBsZWZ0IGlzIG9ubHkgaW50ZXJlc3RlZCBpbiB0cml2aWFsIGlzc3VlcyBhbmQgaGF0aW5nIG9uIHRoZW0gcmVpbmZvcmNlZCwgd2hpY2ggbWFrZXMgaXQgaGFyZGVyIGZvciB1cyB3aGVuIHdlIHdhbnQgdG8gcHVzaCBmb3Igb3RoZXIsIG1vcmUgc2VyaW91cyBpc3N1ZXMuIApJIGluIG15IDMwIHNvIEkgYW0gYSBiaXQgb2YgYW4gYW5vbWFseSBoZXJlLiBCdXQgSSBsb3ZlIHRvIGhpdCBkb3dudG93biBhbmQgc3R1bWJsZSBvciBMeWZ0IGhvbWUgbGF0ZSwgYW5kIEkgZmVlbCBsaWtlIEkgY2hlYXRpbmcgYmVjYXVzZSBJIGdldCB0aGUgYmVzdCBvZiBib3RoIHdvcmxkcyBieSBsaXZpbmcgaW4gYSBwZWFjZWZ1bCBuZWlnaGJvcmhvb2Qgd2hpbGUgc3RpbGwgaGF2aW5nIGdyZWF0IGFjY2VzcyB0byBkb3dudG93bi4KP1Blb3BsZSBhcmUgZ2V0dGluZyBtb3JlIGVkdWNhdGVkIGFib3V0IHRoZSBzcG9ydC4gUGVvcGxlIGFyZSBub3cgZ2V0dGluZyBmb3J3YXJkIGFzIEluZGlhIGlzIG5vdyBwdXR0aW5nIGl0c2VsZiBvbiB0aGUgZ2xvYmFsIG1hcC4gVGhlIHNhbWUgd2F5LCBwb2tlciBpcyBhbHNvIGdldHRpbmcgaW50ZWdyYXRlZCBpbiB0aGUgc2Vuc2UgdGhhdCBwZW9wbGUgYXJlIGdldHRpbmcgbW9yZSBlZHVjYXRlZCBhYm91dCBpdC4gClVuZSBib25uZSBwYXJ0aWUgZGUgbGEgY2lyY3VsYXRpb24gYXV0b21vYmlsZSBkYW5zIGxhIEdvdXR0ZSBkJ09yIG4nYSBwYXMgZGUgcmFwcG9ydCBhdmVjIGxlIHF1YXJ0aWVyLCBjZXMgdmhpY3VsZXMgc2UgY29udGVudGFudCBkZSB0cmF2ZXJzZXIgbGUgcXVhcnRpZXIsIHRyb3V2YW50IGljaSBkZXMgIml0aW5yYWlyZXMgbWFsaW5zIiBwb3VyIHZpdGVyIGxlcyBib3VsZXZhcmRzLiBNYWlzIGRlcyBydWVzIGF1c3NpIHRyb2l0ZXMgZXQgc2ludWV1c2VzIHF1ZSBjZWxsZXMgZGUgbGEgR291dHRlIGQnT3IgbidvbnQgcGFzIHZvY2F0aW9uICBzZXJ2aXIgZGUgdm9pZXMgZGUgZGxlc3RhZ2UgZGVzIGdyYW5kcyBheGVzIHJvdXRpZXJzIHZvaXNpbnMuIApGZXJuYW5kZXogd2FzIGFjY3VzZWQgb2YgaGVscGluZyBhIGhvdGVsIGNvbXBhbnkgd2l0aCBwZXJtaXR0aW5nIHByb2JsZW1zIGFuZCByZWNlaXZpbmcgZnJlZSBhY2NvbW1vZGF0aW9ucy4gT3J0aXogYWNrbm93bGVkZ2VkIGluIHRoZSBzZXR0bGVtZW50LCBrbm93biBhcyBhIHN0aXB1bGF0aW9uLCB0aGF0IGJlbGlldmluZyBoZXIgaHVzYmFuZCB3YXMgYXBwcm9wcmlhdGVseSBtYW5hZ2luZyB0aGUgaG91c2Vob2xkIGZpbmFuY2VzLCBzaGUgZmFpbGVkIHRvIHRha2UgcmVhc29uYWJsZSBzdGVwcyB0byBzdGF5IGFwcHJpc2VkIG9mIGhlciBmaW5hbmNpYWwgY2lyY3Vtc3RhbmNlcywgaW5jbHVkaW5nIGZhaWxpbmcgdG8gbWFrZSBzcGVjaWZpYyBpbnF1aXJ5IGludG8gaG93IHRoZSB0cmlwcyB3ZXJlIHBhaWQgZm9yLi4gClBsZWFzZSBwdXQgdGhlIHN1YmplY3QgYXMgIklMb3ZlIEdhR2EiLiAKSXQgcmVkdWNlcyB0aGUgcGFpbiB0aGV5IGV4cGVyaWVuY2UsIGl0IHByb21vdGVzIHJlbGF4YXRpb24gYW5kIGl0IGJvb3N0cyB0aGVpciBtb29kLiBNYXNzYWdlIHRoZXJhcHkgYWxzbyBoZWxwcyBwZW9wbGUgdG8gcmVkdWNlIGRlcHJlc3Npb24uIApCdXQgSmFwYW5lc2UgQUkgaXMgc29tZXdoYXQgY29tcGV0ZW50IGFuZCB0aGV5IGV2ZW4gcGFyYWRyb3Agb250byBJbmRvbmVzaWEuLiAKU28gSSBzdGFydCBvZmYgd2l0aCB0aGUgbWFqb3IgcHJlbWlzZTogTGV0IGhhdmUgYSB3b3JsZCBvcmRlciwgdGhlIG9uZSBJIGFjY3VzdG9tZWQgdG8sIChob3BlIGl0KSBzdGlsbCBvYnRhaW5zLgpBbHNvLCBpZGsgaG93IG11Y2ggYSBmcmFwIGlzLiAKSSBlbmRlZCB1cCB3aXRoIHNvbWUgc2VyaW91cyBoZWFsdGggaXNzdWVzIHdoaWNoIHJlcXVpcmVzIG15c2VsZiB0byBiZSBjaGVja2VkIGV2ZXJ5IDYgbW9udGhzIGZvciBibGFkZGVyIGNhbmNlci4gTm9uIGNpZ2FyZXR0ZSBzbW9rZXIuIFRoZSB3aG9sZSBidWxsc2hpdCB0aGF0IHVzaW5nIHdlZWQgc3RvcHMgY2FuY2VyIGlzIGJ1bGxzaGl0LgpIb3BpbmcgdGhpcyB3YXkgc2hlIHdvbiBnZXQgdG9ydHVyZWQgYnkgYW55b25lLiAKSGUgbGl2ZWQgaW4gYW5kIHdoZXJlIGhlIGRlc2lnbmVkIGFuZCBidWlsdCBhbmltYXRlZCBkb2xscywgb3IgdG8gaGVscCBoaXMgZmlybSBzZWxsIHdhdGNoZXMgYW5kIG1lY2hhbmljYWwgYmlyZHMuIiBXaWtpcGVkaWEuIApEZXQgciBodXIgc2thZGxpZyBmdXNrIGVuIHJlbGF0aW9uIGthbiBza2VydCB2YXJhLiAKVGhleSB3b3VsZCBtYWtlIGpva2VzIGFib3V0IHRoZSBvbmx5IHBlcnNvbiB3aG8gd291bGQgc3VjayBoaXMgZGljayBub3cgd2FzIGhpcyBzb24gKHdobyBhbHNvIHJvZGUgdGhlIGJ1cykgdGhleSBnb3QgYSBob2xkIG9mIHBpY3R1cmVzIGZyb20gaGlzIHdpZmUgbWVtb3JpYWwgYW5kIG1hZGUgY29waWVzIGFuZCB3b3VsZCBsaXRlciB0aGUgYnVzIHdpdGggdGhlbSB3aXRoIGF3ZnVsIG1lc3NhZ2VzIEkgY2FuIGJhcmUgcmVwZWF0aW5nLiBUaGV5IHdvdWxkIHNpbmcgYWJvdXQgaG93IGhlIG5lZWRlZCB0byBkaWUgYW5kIGpvaW4gaGlzIHdpZmUgaW4gaGVsbC4gSXQgd2FzIHNvIGJhZCBJIGhhZCB0byBzdG9wIHJpZGluZyB0aGUgYnVzIGJlY2F1c2UgaXQgbWFkZSBtZSBzaWNrIHRvIHNlZS4uIApQcm9kdWN0IHNwZWNpZmljIHRpcHMuIFRoaXMgaW5jbHVkZXMgT3BlcmF0aW5nIFN5c3RlbXMgbGlrZSBXaW5kb3dzIGFuZCBBbmRyb2lkLCBidXNpbmVzc2VzIGxpa2UgQ2hpcG90bGUgb3IgSFIgQmxvY2ssIG9yIHdlYnNpdGVzIGxpa2UgWW91VHViZS4KUmlnaHQgaGVyZSEgWWVhaCwgSSBndWVzcyB5b3UgY291bGQgc2F5IGxvbmcgdGVybS4gCkluZGVlZCwgd2l0aCB0aGUgYWR2ZW50IG9mIHRoZSBpZGVudGlmaWNhdGlvbiBvZiBBbHpoZWltZXIncyBEaXNlYXNlIChBRCkgcmVsYXRlZCBnZW5lcywgcmVzZWFyY2ggaGFzIGJlZ3VuIHRvIGZvY3VzIG9uIHNwZWNpZmljIHBvcHVsYXRpb24gZ3JvdXBzLiAKQ2hpbmVzZSBzcGVha2VycyBhbHNvIG1peCB1cCBwcm9ub3VucyBhIGxvdCwgYnV0IGZvciB0aGUgb3Bwb3NpdGUgcmVhc29uICAgdGhleSB0ZW5kIHRvIG1peCB1cCAiaGUiIGFuZCAic2hlIiBiZWNhdXNlIHRoZXJlIG5vIGRpc3RpbmN0aW9uIGluIHNwb2tlbiBNYW5kYXJpbi4uIApXZSBoYWQgYWN0dWFsbHkgZ29uZSBiYWNrIHRvIG15IHBsYWNlIHRvIHNtb2tlIHNvbWUgd2VlZCAoYXMgY29sbGVnZSBraWRzIGluIHRoZSBQYWNpZmljIE5vcnRoIFdlc3QgZG8pIGFuZCBub3RoaW5nIGhhcHBlbmVkIGJ1dCB0aGVyZSB3YXMgZGVmaW5pdGVseSBzb21lIHRlbnNpb24uIFdlIGhhZCBtZXQgb24gdGluZGVyIGFuZCBoYWQgYmVlbiBmbGlydGluZyBvdmVyIHNuYXBjaGF0IGZvciBhIHdoaWxlLiAKV2hhdCBjaGVhcGVzdCBjaGFuZ2VzIHdpdGggc2Vhc29uLiBXaW50ZXIga2luZGEgc3VjayBhbmQgeW91IGhhdmUgdG8gYmUgY2FyZWZ1bCBzdHVmZiBoYXNuIGFjY2lkZW50YWxseSBmcm96ZW4gaW4gdGhpcyB3ZWF0aGVyLiBTdGlsbCwgeW91IGNhbiBnZXQgYWZmb3JkYWJsZSB0YW5nZXJpbmVzLCBiZWV0cywgcG90YXRvZXMsICwgYW5kIHNvbWUgb3RoZXJzLiAKTmV2ZXIgaGFkIHRoaXMgZ2FtZSBsZWF2ZSBldmVuIHRoZSBzbGlnaHRlc3Qgb2YgYSBiYWQgdGFzdGUgaW4gbXkgbW91dGguIApQUzQgd2VyZSBicmlja2luZyBZb3VUdWJlIGl0IHdoZW4gQW50aGVtIHdhcyBiZWluZyBwbGF5ZWQuIFJlcG9ydHMgb2YgaHVuZHJlZHMgc3RhcnRlZCBwb3VyaW5nIGluIDMvNCBhbmQgb253YXJkCkxhZHkgR2FnYSB0byBzdGFyIGluIFRpZmZhbnkKUGVyZmVjdCB3ZWxsIHRyYWNrZWQgZGlldCwgaGVhdnkgaW50ZW5zZSB3b3Jrb3V0cywgYW5kIHBsZW50eSBvZiByZXN0LiAKVGhlc2UgZGF5cywgdmVyeSByYXJlbHkgZG9lcyBhbnlvbmUgb2JqZWN0IHRvIHdoYXQgaXMgaGFwcGVuaW5nLiBJbnN0ZWFkLCBtb3N0IG9mIHVzIGp1c3Qgc2VlbSB0byBhY2NlcHQgdGhhdCB0aGlzIGNoYW5nZSBpcyAiaW5ldml0YWJsZSwiIGFuZCB3ZSBhcmUgYmVpbmcgYXNzdXJlZCB0aGF0IGl0IHdpbGwgYmUgZm9yIHRoZSBiZXR0ZXIuIEFuZCBubyBtYXR0ZXIgd2hlcmUgaW4gdGhlIHdvcmxkIHlvdSBnbywgdGhlIHByb3BhZ2FuZGEgc2VlbXMgdG8gYmUgdGhlIHNhbWUuIEZvciBleGFtcGxlLCB0aGUgZm9sbG93aW5nIGNvbWVzIGZyb20gYW4gQXVzdHJhbGlhbiBuZXdzIHNvdXJjZSwgVGhlIEFkdmVydGlzZXI6CkF0IHRoaXMgcGhhc2Ugb2YgaHVtYW4gaGlzdG9yeSwgd2Ugd2lsbCB3aXRuZXNzIHRoZSBmdWxmaWxsbWVudCBvZiB3b2VzIG1lbnRpb25lZCBpbiBJc2FpYWggY2hhcHRlciA1LiAKV2UgYXNrZWQgdGhlIGd1eSB3aG8gdHVybmVkIG92ZXIgdGhlIGtleXMgd2hpY2ggd2F5IHRvIEdyYW5hZGEgKG91ciBmaXJzdCBkZXN0aW5hdGlvbikuIFdlbGwsIEplc3MgYW5kIEkgYmFzaWNhbGx5IGRpZCBhIGRyaXZpbmcgdG91ciBvZiBNYW5hZ3VhLgpHdXkganVzdCB0aGlzIHBhc3QgeWVhciBraWxsZWQgaGlzIGdyYW5kbW90aGVyIGFuZCBkdW1wZWQgaGVyIGJvZHkgaW4gdGhlIGxha2UgKG5vdCBldmVuIHRyeWluZyB0byBiZSBzZWNyZXRpdmUpIGFuZCBpdCB3YXMgZGlzY292ZXJlZCBieSBhIGRpdmVyIGEgd2VlayBvciB0d28gbGF0ZXIuIApBIHF1aWNrIGJhdGhyb29tIHVwZGF0ZS4gCldpdGggU3Rhc2gsIHlvdSBtYW51YWxseSBtb3ZlIG1vbmV5IHRvIGl0IG9yIHlvdSBjYW4gc2V0IHVwIHdlZWtseSwgYmkgd2Vla2x5LCBvciBtb250aGx5IGRlcG9zaXRzIGZyb20geW91ciBsaW5rZWQgYmFuayBhY2NvdW50IHRvIHRoZSBhcHAuIE9uY2UgdGhlIG1vbmV5IGlzIGluIHlvdXIgU3Rhc2ggYWNjb3VudCwgeW91IGNhbiB0aGVuIGNob29zZSBkaWZmZXJlbnQgdGhlbWVzIHRvIGludmVzdCBpbiBiYXNlZCBvbiB5b3VyIHBlcnNvbmFsIHByZWZlcmVuY2UsIGJlbGllZnMsIHZhbHVlcywgYW5kIHJpc2sgdG9sZXJhbmNlLiAKSG93ZXZlciBJIGFtIHByZXR0eSB1bmRlcndoZWxtZWQgd2l0aCB3aGF0IHRoZSBwcm9kdWN0IGlzIGxvb2tpbmcgbGlrZSBpdCB0dXJuIG91dCB0byBiZSwgc28gSW0gaG9waW5nIERpY2Ugd2lsbCB1c2UgdGhpcyBuZXcgdGltZSB3aXRoIHRoZSBkZWxheSB0byByZWZvY3VzIHRoZWlyIGVmZm9ydHMgZnJvbSAibWFya2V0aW5nIiB0byBkZXZlbG9waW5nLiBUaGUgZ2FtZSBsYWNrcyBhbnkgc291bCAsIGFuZCBpdCBpc24gYmVjYXVzZSBvZiB0aGUgZmFjdCBpdCBpbiBiZXRhOyB0aGUgQkYzIGJldGEgaGFkIGEgc291bC4gSXQgaGFkIGEgdGhlbWUgb3IgdG9uZSB3ZWxsIGVzdGFibGlzaGVkIGluIGl0cyBnYW1lcGxheS4gQnV0IEJGViBqdXN0IGtpbmRhIGZlZWxzIGdlbmVyaWMgYXRtLiBXaXRoIGhvdyBjb3NtZXRpY2FsbHkgZHJpdmVuIERpY2Ugc2VlbXMgdG8gd2FudCB0byB0YWtlIHNvbGRpZXIgY3VzdG9taXphdGlvbiwgSSBkb24gZmVlbCBsaWtlIGV2ZW4gc29sZGllciBtb2RlbHMgYXJlIGdvaW5nIHRvIGNhcnJ5IGEgY29uc2lzdGVudCB0aGVtZSBvciB2aWJlIHdpdGggdGhlbTsgSSB3b3JyaWVkIGFib3V0IGV2ZW4gaGF2aW5nIGRpZmZpY3VsdHkgaWRlbnRpZnlpbmcgY2VydGFpbiBjbGFzc2VzIG9yIHRlYW1zLiBXYWl0aW5nIHRvIGJlIHByb3ZlbiB3cm9uZyB0aG91Z2ggbGF0ZXIgdGhpcyB5ZWFyIGJ1dCBJIG5vdCBob2xkaW5nIG15IGJyZWF0aApUaXRhbiBRdWVzdCB3YXMgYSBncmVhdCBnYW1lLCBidXQgaXRzIGV2ZW4gb2xkZXIgdGhhbiBEaWFibG8gSUlJIGF0IHRoaXMgcG9pbnQuLiAKNC4gVGhlIG1vcmUgcHJvdGVpbiB5b3UgZWF0LCB0aGUgZWFzaWVyIGl0IGNhbiBiZSBmb3IgeW91ciBib25lcyB0byBhYnNvcmIgY2FsY2l1bSBhbmQgdGhlIHN0cm9uZ2VyIHlvdXIgYm9uZXMgbWF5IGJlY29tZS40CkluIGFkZGl0aW9uLCB5b3Ugd2lsbCBiZSBlbmNvdXJhZ2VkIHRvIGdhaW4gZXh0cmEgY2xpbmljYWwgaG91cnMgd29ya2luZyBjbG9zZWx5IHdpdGggdGhlIGhlYWx0aCBwcm9mZXNzaW9uYWxzIHdobyBzdXBwb3J0IHRoZSBVbml2ZXJzaXR5IHNwb3J0cyB0ZWFtcyBvbiBhIHdlZWtseSBiYXNpcy4gWW91IHdpbGwgYmUgaXNzdWVkIHdpdGggYSBwYXNzcG9ydCBpbiB3aGljaCB0byByZWNvcmQgdGhlc2UgYWRkaXRpb25hbCBob3Vycy4uIApJdCdzIGEgZGlmZmljdWx0IHF1ZXN0aW9uLCBjb25zaWRlcmluZyBob3cgY3Jvd2RlZCB0aGUgaW5kdXN0cnkgICBib3RoIGJyZXdlcmllcyBhbmQgYmFycyBsb29raW5nIHRvIG9mZmVyIGEgcXVhbGl0eSBiZWVyIGxpc3QgICBoYXMgYmVjb21lLi4gCkF2YSB3ZW50IHRvIHdvcmsgb25lIHdlZWtlbmQgKHRoaXMgd2FzIHRoZSA5MHMvZWFybHkgMDBzIGFuZCB3ZSBnb3QgbGVmdCBhbG9uZSBhIGxvdCksIGFuZCBzaGUgY2FtZSBob21lIG9uIGhlciBicmVhayBhbmQgc2F3IG1lIHRoZXJlIGFuZCBzaGUgY2FsbGVkIG15IG1vbSBhbmQgbXkgbW9tIHdhcyBzbyBhbmdyeSB3aXRoIGhlciBiZWNhdXNlIHNoZSdkIGxlZnQgYSB2b2ljZW1haWwgc2F5aW5nICJ0aGlzIGlzIEF2YS4gClRoZXNlZG9nZGF5eiAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnb1RoZSBhdmVyYWdlIGNpdGl6ZW4gb2YgdGhlIFVuaXRlZCBTdGF0ZXMgaXMgY29tZm9ydGFibHkgaW4gdGhlIHRvcCA1IHBlcmNlbnQgb2YgdGhlIHdvcmxkJ3MgaW5jb21lIGRpc3RyaWJ1dGlvbi4gSSBoYXRlIHRoZSBEYWlseSBNYWlsIGJ1dCB0aGV5IGV4cGxhaW4gaXQgcHJldHR5IHdlbGwgaGVyZS4gClNvIHNoZSBkZWNpZGVzIHRvIGtlZXAgdGhlIGJhYnkuLiAKQnV0IEkgbWFkZSBhIHJlY29yZCBmb3IgSW5kaWEgbWFsZSBvciBmZW1hbGUsIG5vYm9keSBoYXMgZXZlciBtYWRlIHRoZSBmaW5hbCB0YWJsZSB3aXRoIHN1Y2ggYSBsYXJnZSBwbGF5ZXIgZmllbGQuLiAKQ29tbWVudCBhdXJhaXQgb24gcHUgaWdub3JlciBsZSBjaG5lIGlsIHkgYSAzMDAwIG91IDUwMDAgYW5zIGVuIGFycmlyZT8gVG91dCBkIGRlIHBhciBsYSB0YWlsbGUgcXUgY2VydGFpbnMgZGUgc2VzIHN1amV0cywgYyB0b3V0ICBmYWl0IGltcG9zc2libGUuIFNpIGwgZW4gY3JvaXQgbGUgcnN1bHRhdCBkZSBmb3VpbGxlcyBhcmNob2xvZ2lxdWVzLCBhdXRyZWZvaXMgaWxzIHRhaWVudCBiZWF1Y291cCBwbHVzIG1vbnVtZW50YXV4IHBhcmNlIHF1IGxlcyBsYWlzc2FpdCBwb3Vzc2VyIGRhdmFudGFnZSBldCBpbHMgbiBwYXMsIGNvbW1lICBsIGFjdHVlbGxlLCBtZW5hY3MgcGFyIHVuIGVmZmV0IHBvaXNzb24gcm91Z2UgZGFucyBzb24gYm9jYWwgZGVzIHBsdXMgcGVybmljaWV1eCAoMSkuCkhlIGdvZXMgYmFjayB0aGF0IG5pZ2h0IHdpdGggYSBzbGlkZWhhbW1lciwgcHVsbHMgdGhlIGxvY2ssIGFuZCBzdGVhbHMgdGhlIGJpa2UuIEhlIGdldHMgaXQgaG9tZSwgcHV0cyBpdCBpbiBoaXMgZ2FyYWdlIGFuZCBjb21wbGV0ZWx5IHN0cmlwcyBpdCBzbyB0aGF0IHRoZSBvbmx5IHRoaW5nIGxlZnQgaXMgdGhlIGZyYW1lIGFuZCB0aGUgYm90dG9tIGhhbGYgb2YgdGhlIGVuZ2luZSAgIHdoaWNoIGhlIGRyYWdzIGludG8gdGhlIHdlZWRzIGF0IHRoZSBib3R0b20gb2YgaGlzIGdhcmRlbiwgdGhlbiBoZSBwb3VycyBmdWVsIG92ZXIgaXQgYW5kIGJ1cm5zIGl0IGEgYml0Li4gClN0dWRlbnRzIGxlYXJuIGFib3V0IGNlbGxzLCBpbmNsdWRpbmcgdGhlaXIgcGFydHMsIHN0cnVjdHVyZSBhbmQgbG9jYXRpb24uIApCdXQgdG8gYmUgaG9uZXN0LCB3aGlsZSByYWlzaW5nIGxvb2tzIHN1cGVyIHN0cm9uZywgamFtbWluZyBpcyB0aGUgY29ycmVjdCBtb3ZlIGJlY2F1c2Ugb2YgaG93IG1hbnkgcGVvcGxlIGFyZSBpbiB0aGUgcG90IGFuZCB0aGUgd2V0bmVzcyBvZiB0aGUgYm9hcmQuIApBbmQgdG9kYXkgY2hhcml0YWJsZSBvcmdhbml6YXRpb25zLCBidXNpbmVzc2VzIG9yIGNvcnBvcmF0aW9ucyBvZmZlciBvbmxpbmUgcG9rZXIgdG91cm5hbWVudHMgZm9yIHByb21vdGlvbiBwdXJwb3Nlcy4gCkFuZCB5b3Ugc291bmQgdmV4ZWQgYnkgbXkgY29tbWVudCBhYm91dCBkYXRpbmcgYXBwcyBiZWluZyBhIG1lYXQgbWFya2V0LiBQbGFjZSB0aG9zZSBkZWxpY2lvdXMgZmVtYm90IHRlYXJzIGluIGEgY3VwIGFuZCBnaXZlIHRoZW0gdG8gbWUuIEkgd2lzaCB0byBxdWVuY2ggbXkgdGhpcnN0LgoiV2Ugd2FudGVkIHRvIHVuZGVyc3RhbmQgaG93IHRoZSBpbmRpdmlkdWFsIGNlbGxzIGluIG91ciBicmFpbnMgICBvdXIgbmV1cm9ucyAgIHdvcmsgdG9nZXRoZXIgdG8gbWFrZSB0aGF0IGhhcHBlbiwiIGxlYWQgcmVzZWFyY2hlciBEci4gCiJXaXIiIHVuZCAiZGllIi4gCkdpdmluZyB0aGVtIGEgd2FnZSBnaXZlcyB0aGVtIGEgc2Vuc2Ugb2YgZGVjZW5jeSBhbmQgd29ydGgsIGFuZCBhdCBsZWFzdCB0aGUgaWxsdXNpb24gdGhhdCB0aGV5IGFyZSB2YWx1ZWQgZm9yIHRoZWlyIGNvbnRyaWJ1dGlvbi4uIApTdG9ybSBHaWFudHMgYXJlbiB0aGUgd29yc3QgbWFnZXMgaW4gdGhlIGdhbWUuIEluIGZhY3QsIHRoZSBleHRyYSBoZWFsdGggY2FuIGJlIGEgbmljZSBtaXRpZ2F0aW5nIGZhY3RvciBmb3IgdGhlIE1hZ2VzIEd1aWxkIG5vdCBwcm92aWRpbmcgYW55OyBhcyBkcm9wcGluZyBpbnRvIHRoZSBuZXh0IGZsb29yIG9mIGFuIFJEIHdpbGwgZnJlcXVlbnRseSBwdXQgeW91IHdpdGhpbiBraXNzaW5nIHJhbmdlIG9mIHdoYXRldmVyIGJhZGFzcyBhbHdheXMgc2VlbXMgdG8gc3Bhd24gb24gdG9wIG9mIHRoZSBzdGFpcnMuIApBbWF6b24gYWxyZWFkeSBvZmZlcnMgYWQgdGFyZ2V0aW5nIHRlY2hub2xvZ3ksIHRoZSBraW5kIHRoYXQgbW9zdCBkaWdpdGFsIGFkIHJpdmFscyBwcm92aWRlLCBsaWtlIGJlaW5nIGFibGUgdG8gdGhlaXIgbWF0Y2ggY3VzdG9tZXIgZSBtYWlsIGxpc3RzIHRvIHBlb3BsZSBzaG9wcGluZyBvbiBBbWF6b24gdG8gdGFyZ2V0IGFkcyB0byB0aGVtLiBBbWF6b24gYWxzbyBoYXMgYmFzaWMgZGVtb2dyYXBoaWMgYW5kIHNob3BwaW5nIGRhdGEgdGhhdCBsZXQgYWR2ZXJ0aXNlcnMgdGFyZ2V0IGNvbnN1bWVycyBiYXNlZCBvbiBjaGFyYWN0ZXJpc3RpY3MgbGlrZSBhZ2UsIGxvY2F0aW9uLCBnZW5kZXIgYW5kIHB1cmNoYXNlIGhpc3RvcnkuClBoeXNpY2FsIGJsYXN0ZXJzIGhhdmUgdG8gYWxzbyBwdW1wIGRleCB0byBjb21wZW5zYXRlIGZvciAzLzQgQkFCLiAKU28gbWFueSBzY2hvb2xzIGluIHRoZSBjb3VudHJ5IGFyZSBhbGwgYm95cyBvciBhbGwgZ2lybHMuIEFuZCBJIG5vdGljZWQgdGhhdCBpbiBvbmUgb2YgbXkgY28gZWQgc2Nob29scyAoSSB0YXVnaHQgaW4gYSBidW5jaCBvZiBtaWRkbGUgc2Nob29scyBpbiB0aGUgY291bnRyeSksIHRoZSBib3lzIGFuZCBnaXJscyB3ZXJlIHN0aWxsIHNlYXRlZCBzZXBhcmF0ZWx5IGluIHRoZSBjbGFzc2VzICAgdGhlIGJveXMgb24gb25lIHNpZGUgYW5kIHRoZSBnaXJscyBvbiB0aGUgb3RoZXIuIEkgYWxzbyBub3RpY2VkIHRoYXQgSSByYXJlbHkgcmFyZWx5IHNlZW1lZCB0byBzZWUgYm95cyBhbmQgZ2lybHMgaGFuZ2luZyBvdXQgaW4gZ3JvdXBzIGFzIGp1c3QgZnJpZW5kcywgdGhleSBzZWVtZWQgdG8gb25seSBnbyBvdXQgdG9nZXRoZXIgaWYgaXQgd2FzIGEgY291cGxlIHRoaW5nLiBBbmQgd2hlbiB0aGF0IGhhcHBlbmVkLCB0aGUgZ2lybHMgaGFkIHRoaXMgb2J2aW91cyByb2xlIG9mIGRyZXNzaW5nIHVwIHRvIHRoZSBtYXggYW5kIGxvb2tpbmcgYmVhdXRpZnVsLCBhbmQgSSBzd2VhciBtb3N0IG9mIHRoZSB0aW1lIEkgd2l0bmVzc2VkIGNvdXBsZXMgdG9nZXRoZXIsIHRoZXkgd2VyZSBmb2N1c2VkIG9uIHRha2luZyBzZWxmaWVzIHRvZ2V0aGVyIGFuZCBub3QgcmVhbGx5IHRhbGtpbmcgbXVjaC4gSXQgc2VlbWVkIGxpa2UgaXQgd2FzIHJlYWxseSBoYXJkIHRvIGZvcm0gYSByZWFsIGZyaWVuZHNoaXAgYm9uZCBhbG9uZyB3aXRoIGEgcm9tYW50aWMgb25lICh0aGlzIGlzIGZyb20gYW4gb3V0c2lkZXJzIG9ic2VydmF0aW9uLCBhdCBsZWFzdC4gSSBub3QgS29yZWFuLCBzbyB0aGlzIGlzIG15ICJmb3JlaWduZXIgdmlldy4iKQpBbWF6b24gYW5kIEdvb2dsZSBkaWQgbm90IGltbWVkaWF0ZWx5IHJlc3BvbmQgdG8gcmVxdWVzdHMgZm9yIGNvbW1lbnQuIEZhY2Vib29rIGRlY2xpbmVkIHRvIGNvbW1lbnQuClNoZSB3YW50ZWQgZmlyc3QgcGxhY2UsIGFuZCBzaGUgd2FudGVkIGl0IHF1aWNrbHkuIApBIGdvb2Qgc2hvd2VyLCBhIG1hbmljdXJlIGFuZCBwZWRpY3VyZSwgYSBtYXNrIGZvciB5b3VyIHNraW4sIGEgZ29vZCB0cmVhdG1lbnQgZm9yIHlvdXIgaGFpciwgbWF5YmUgYW4gYXBwb2ludG1lbnQgdG8gZ2V0IGEgbWFzc2FnZSwgZ28gZm9yIGEgd2FsayAob3IgYW55IG90aGVyIGFjdGl2aXR5IHlvdSBlbmpveSkuIAoxOSkgbWF5YmUgaXQganVzdCBtZSBidXQgSSBnb3QgYSBraWNrIG91dCBvZiBvbmUgb2YgdGhlIHJlZmVyZW5jZXMgKFNGMiBhcmNhZGUgbWFjaGluZSwgdGhhdCBoYXBwZW5lZCB0byBzaG93IE0uIEJpc29uIGRvaW5nIGEgcHN5Y2hvIGNydXNoZXIpIGFuZCB0aGVuIGxhdGVyIHNlZWluZyBoZXIgZG8gYSBwc3ljaG8gY3J1c2hlciB0aHJvdWdoIGFuIGVudGlyZSBzcGFjZXNoaXAuIApJdCB0YWtlbiBtZSB5ZWFycyB0byBnZXQgb2theSB3aXRoIHRoZSBmYWN0IHRoYXQganVzdCB0aGUgd2F5IG15IGJvZHkgaXMgc2hhcGVkLiBJdCBqdXN0IGdldHMgZnJ1c3RyYXRpbmcgd2hlbiBpdCBzZWVtcyBsaWtlIGNsb3RoaW5nIGlzIGFsbCBjdXQgZm9yIG9uZSBib2R5IHR5cGUuIApOb25lIG9mIHRoZXNlIHNvbHV0aW9ucyBhcmUgdHJ1bHkgcmVkdW5kYW50LCBhcyB0aGVyZSBpcyBhIHN3aXRjaG92ZXIgZGVsYXkKSXQgZ29lcyBiYWNrIHRvIHRoZSBkaXN0cmFjdGlvbi9pbnRpbWlkYXRpb24gZmFjdG9yLiAKV2hldGhlciB5b3UgamV0IHNldHRpbmcgd2l0aCB5b3VyIHNpZ25pZmljYW50IG90aGVyIG9yIGxvb2tpbmcgdG8gdHJlYXQgeW91cnNlbGYsIHRoZXNlIGNpdGllcyBhcmUgZ3VhcmFudGVlZCB0byBzd2VlcCB5b3Ugb2ZmIHlvdXIgZmVldC4gCkhlIHRoZW4gcHJvY2VlZGVkIHRvIHBhbmljIHdoZW4gYSBzZWN0b2lkIChiZWxpZXZlIG1lLCBJIHdhcyBmdXJpb3VzIHdoZW4gaXQgaGFwcGVuZWQpIGRpZCBhIHBzeSBwYW5pYyBvbiBoaW0uIApNYWtlIHN1cmUgeW91ciBiZWRkaW5nIGlzIGNvbWZvcnRhYmxlLCB5b3VyIHBpbGxvdyBpcyBpbiBnb29kIGNvbmRpdGlvbiBhbmQgdGhlIHJpZ2h0IHR5cGUgZm9yIHlvdXIgc2xlZXAgc3R5bGUgYW5kIHJpZ2h0IHNpemUgZm9yIHlvdXIgYm9keS4gSSB0dXJuIG9uIG15IGVzc2VudGlhbCBvaWwgZGlmZnVzZXIgd2l0aCBsYXZlbmRlciAobXkgcHJlZmVyZW5jZSksIHR1cm4gb24gbXkgc3VucmlzZSBhbGFybSBjbG9jaydzIGRpbW1pbmcgZmVhdHVyZSBzbyB0aGF0IGl0IGRpbXMgdG8gZGFya25lc3MgaW4gMzAgbWludXRlcy4gCklmIEkgbGF0ZSBldmVuIGJ5IGEgbWludXRlLCB3ZWxsIHRoYXQgYW5vdGhlciBsb25nIGFzcyB3YWl0LiBPbmNlIEkgZ2V0IG9uIHRoYXQgbGFzdCBidXMsIGl0IHRha2VzIG1lIGFib3V0IDEwIG1pbnV0ZXMgdG8gZ2V0IHRvIHdvcmsuLiAKRm9yIE1vcmUgU3R1ZHkgbWF0ZXJpYWwgQWNjb3JkaW5nIHRvIFN5bGxhYnVzIG9mIEdQQVQgIDIwMTcsIFUgQ2FuIEpvaW4gVEFSR0VUIEdQQVQgVEVTVCBTRVJJRVMuIDYgRGVjIDIwMTcgLiAKSSB3b3JrIGFzIGEgbGFuZHNjYXBlci4gSXQgZGVwZW5kcyBvbiB3aGF0IHRoZSByb290cyBhcmUuIElmIHRoZXkgYXJlIGl2eSwgbW9ybmluZyBnbG9yeSBvciBzb21ldGhpbmcgZWxzZSByZWFsbHkgaGFyZHksIGdvb2QgbHVjayB5b3VyIGdvaW5nIHRvIGhhdmUgbnVrZSB5b3VyIGJhY2t5YXJkLiBJZiBpdHMgc29tZXRoaW5nIG1vcmUgZnJhZ2lsZSB0aGV5IHdpbGwganVzdCByb3QgYXdheS4gT25lIHRoaW5nIHRvIGtlZXAgaW4gbWluZCwgbWFueSBvZiB0aGUgZHJvdWdodCB0b2xlcmFudCBsYXduIGdyYXNzZXMgd2lsbCBiZSBraWxsZWQgYnkgd2VlZCBOIGZlZWQgb3Igb3RoZXIgd2VlZCBraWxsZXJzIHRoYXQgYXJlbiBzdXBwb3NlZCB0byB0YXJnZXQgZ3Jhc3MuIEkgbGl2ZSBpbiB0aGUgTm9ydGggV2VzdCB3aGVyZSB3ZSBoYXZlIHdhdGVyIGFuZCBJIGRvbiBoYXZlIGEgbG90IG9mIGxhd24uIE15IHlhcmQgaXMgZGVjb21wb3NlZCBncmFuaXRlIGFuZCByb3VuZCByb2NrIHdpdGggYm9yZGVycyBhbmQgc29tZSBkZWNvcmF0aXZlIHJvY2tzIGFuZCBncmFzc2VzLiBJdHMgbm90IGRvbmUgeWV0LCBhZGRpbmcgYSBjb3VwbGUgdHJlZXMuIEkgaGF2ZSBhIDMwMCBzcXVhcmUgZm9vdCBwaWVjZSBvZiBncmFzcyBmb3IgdGhlIGRvZ3MgdG8gcG9vcCBvbi4gQnV0IHRoZXkgaW5zaXN0IG9uIGdvaW5nIG9uIHRoZSBwYXRpby4KVHVybnRhYmxlOiBoZXlkZXkgKFRhcmdldCBicmFuZCkgKCQ5OS45OSlXb3J0aCBtb3JlIHRoYW4gJDEwMCBJTU8uIEF1ZGlvIFRlY2huaWNhIG5lZWRsZSAoanVzdCByaWdodCwgbWlnaHQgcmVwbGFjZSkgYW5kIGJ1aWx0IGluIHByZSBhbXAuT3ZlcmFsbCwgZm9yIHdoYXQgSSBzcGVudCAodGVjaG5pY2FsbHkgbm90aGluZykgaXQgcXVpZXQgdGhlIGJlZ2lubmVycyBzZXR1cCAoSSBhIG5ld2IsIHBsZWFzZSBnbyBlYXN5IG9uIG1lKS4gTWlnaHQgYWRkIGluIGEgQ2hyb21lY2FzdCBBdWRpbyBzbyBJIGNhbiBhZGQgaXQgdG8gbXkgU3BlYWtlciBHcm91cCBpbiBteSBhcGFydG1lbnQuc2hhZG93czExMjMgIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvaGVsbG8hISBpIG1hZGUgdGhlIGNsYXNzaWMgbWlzdGFrZSBvZiBidXlpbmcgdGhlIGNoZWFwZXN0IHNwZWFrZXJzIGkgY291bGQgZmluZCwgb25seSB0byByZWFsaXplIHRoZXkgYXJlIGF3ZnVsISEhbm93IGkgYW0ganVzdCBwb3NpdGl2ZWx5IGRyb3duaW5nIGluIGluZm9ybWF0aW9uLnRoZXJlIGFyZSBzbyBtYW55IHJldmlld3MsIHNvIG1hbnkgcHJpY2UgcmFuZ2VzLCBzbyBtYW55IGJyYW5kcywgc28gbXVjaCB0byBjaG9vc2UgZnJvbSEhIHdoZXJlIGRvIGkgc3RhcnQ/IHdoZXJlIGRpZCB5b3Ugc3RhcnQ/IHdoeSBkbyB5b3UgbGlrZSB3aGF0IHlvdSBsaWtlP2lmICQxMDAgaXNuIGVub3VnaCwgaG93IG11Y2ggaXM/IHdoZXJlIGRvIHRoZSBkaW1pbmlzaGluZyByZXR1cm4gc3RhcnQ/IGlzIHRoZXJlIGEgZGlmZmVyZW5jZSBiZXR3ZWVuICQyMCwwMDAgc3BlYWtlcnMgYW5kICQyMSwwMDAgc3BlYWtlcnM/aG93IGRvIHlvdSBxdWFudGlmeSAiYmV0dGVyIHF1YWxpdHkiPyB3aGVyZSBzaG91bGQgaSBzdGFydCByZWFkaW5nP2Jlc3QgYmFuZyBmb3IgbXkgYnVjaywgMi4wIHBhc3NpdmUgc3BlYWtlcnMgKyBhbXAgJDIwMCAkMzAwLCBpc2gudHlwZXMgb2YgYXVkaW8sIGJ5IHByaW9yaXR5OiAxLiAKSW4gdGhlIGZpcnN0IHBsYWNlLCB5b3Ugd2lsbCBmaW5kIHRoYXQgbW9zdCBmb2xkaW5nIG92YWwgcG9rZXIgdGFibGVzIGFyZSBnb2luZyB0byBiZSBvZiBhIHRyYWRpdGlvbmFsIHNpemUsIHRoYXQgaXMgdG8gc2F5LCB0aGV5IGFyZSBnb2luZyB0byBiZSBsYXJnZSEgT3ZhbCBpcyB0aGUgdHlwaWNhbCBzaGFwZSB0aGF0IHlvdSBhcmUgZ29pbmcgdG8gc2VlIGluIHRoZSBjYXNpbm9zLCBhbmQgc29tZSBvZiB0aGUgdGFibGVzIHRoYXQgeW91IGNhbiBwdXJjaGFzZSBhcmUgZ29pbmcgdG8gbWF0Y2ggdGhlIHByb2Zlc3Npb25hbCB0YWJsZXMgZm9yIHNpemUgYXMgd2VsbCBhcyBzaGFwZS4KSm9obiBTaXRlcy4gCk1lYW53aGlsZSBwYWlkIHBsYXllcnMgYnVpbGQgdXAgcGVyc29uYWwgICBub3QgdGVhbSAgIHJlcHV0YXRpb25zIG9mdGVuIGFzc2lzdGVkIGJ5IGdvb2QgbG9jYWwgcGxheWVycyBpbiB0aGVyZSBmb3IgdGhlIGxvdmUgb2YgdGhlIGdhbWUuIFRvbyBtYW55IHBsYXllcnMgaGF2ZSBiZWNvbWUgImxhcmdlIGZlZSIgY29hY2hlcyB3aXRoIGxpdHRsZSwgaWYgYW55LCBxdWFsaWZpY2F0aW9uIHRvIGFjdCBpbiB0aGUgbGF0dGVyIGNhcGFjaXR5LiBGcm9tIGEgc3BlY3RhdG9yIHBvaW50IG9mIHZpZXcgbWFueSBnYW1lcyBsYXN0IHNlYXNvbiB3ZXJlIHR5cGljYWwgb2YgdGVhbXMgYmVpbmcgd3JvbmdseSAiY29hY2hlZCIuIApJdCdzIGp1c3Qgbm90IGFjY2VwdGFibGUgdG8ganVzdGlmeSBhIHN1Ym1pc3Npb24gc3RvcHBhZ2UgYnkgc2F5aW5nICJ3ZWxsLCBoZSBwcm9iYWJseSB3YXNuJ3QgZ29pbmcgdG8gZ2V0IG91dC4iIElmIHRoYXQncyB0aGUgY2FzZSwgbGV0IGl0IHBsYXkgb3V0IGFuZCBzZWUgaWYgeW91J3JlIGNvcnJlY3QuIElmIG5vdCwgdGhlbiBKb25lcydzIGVzY2FwZSBmcm9tIFZpdG9ycyBhcm1iYXQsIFBldHRpcydzIGVzY2FwZSBmcm9tIEJlbnNvbidzIFJOQyBpbiB0aGVpciBmaXJzdCBmaWdodCwgSGFyZHkncyBlc2NhcGUgZnJvbSBHU1AncyBhcm1iYXIsIEZpdGNoJ3MgZXNjYXBlIGZyb20gcHJvc3BlY3QgRXJpY2sgU2lsdmEncyBSTkMsIEZlbGRlcidzIGVzY2FwZSBmcm9tIE9saXZlaXJhJ3MgRCdhcmNlIHRvIG1vdW50ZWQgZ3VpbGxvdGluZSBhbGwgc2hvdWxkIGhhdmUgYmVlbiBzdG9wcGVkIGJlZm9yZSB0aGVpciBlc2NhcGVzLgoiV2Ugc29tZXRpbWVzIHNlZSB0aGUgd29ybGQgaW4gZGlmZmVyZW50IHdheXMsIGJ1dCBhcyBPc2NhciBhbmQgRmVsaXggZGlzY292ZXIsIGFuZCBhcyBJIGJlbGlldmUgaXMgdHJ1ZSBmb3Igb3VyIGJpbGF0ZXJhbCByZWxhdGlvbnNoaXAgdGhhdCBldmVuIHdoaWxlIHdlIGF0IHRpbWVzIHBhc3MgdGhyb3VnaCByb3VnaCBwYXRjaGVzLCB3ZSBjYW4gZmluZCBhIHdheSB0byBsaXZlIHRvZ2V0aGVyLCB0byBzdXBwb3J0IGVhY2ggb3RoZXIsIGFuZCB0byBwcm9zcGVyLCIgdGhlIGFtYmFzc2Fkb3IgYWRkZWQuT2JsaXZpb3VzIG9mIHRoZSB0ZW5zaW9ucyBjb29raW5nIGJldHdlZW4gUGFraXN0YW4gYW5kIFVTIGluIHRoZSBjbG9zZSBraXRjaGVuIGNhYmluZXRzIG9mIHBvbGl0aWNhbCBhbmQgbWlsaXRhcnkgYXJlbmEsIHRoZSBhdWRpZW5jZXMgd2VyZSBzcG9udGFuZW91cyBpbiB0aGVpciByZXNwb25zZSBhbmQgYXBwcmVjaWF0aW9uIHdoZW5ldmVyIG5lZWRlZCB3aXRoIHJlc3BlY3RmdWwgc2lsZW5jZSBhbmQgbGF1Z2h0ZXIuIFRoZSBzbG93IHlldCBpbnNwaXJlZCBsdW5hY3kgb2YgdGhlIHRoZW1lIGJyb3VnaHQgaW4gc29tZSB0cnVseSBoaWxhcmlvdXMgbW9tZW50cyB3aXRoIGdyZWF0IGdhZ3MgYW5kIGludGVyYWN0aW9uIGJldHdlZW4gaXRzIHR3byBsZWFkIHN0YXJzLCBPc2NhciBNYWRpc29uIHBvcnRyYXllZCB0aGUgdmVyc2F0aWxlIHN0YWdlIGFjdG9yIEF0aWYgU2lkZGlxdWkgYW5kIEZlbGl4IFVuZ2VyIGVuYWN0ZWQgYnkgRmFpc2FsIEltdGlhei4gVGhvdWdoIHRoZSBzdGFnZSBjaGVtaXN0cnkgYmV0d2VlbiBib3RoIHdhcyB1bmRlbmlhYmxlLCBidXQgdGhlIGxvYWQgd2FzIHN1cGVyYmx5IGNhcnJpZWQgb24gYnkgQXRpZiB3aGlsZSBGYWlzYWwgcmVtYWluZWQgd2VhayBpbiBoaXMgZXhwcmVzc2lvbiBhbmQgZGlhbG9ndWUgZGVsaXZlcnkuQW1vbmcgdGhlIHN1cHBvcnRpbmcgY2FzdCwgSXJ1bSBSZWhtYW4gYW5kIElydW0gQWxpIGdpZ2dsZWQgdGhlaXIgd2F5IHRocm91Z2ggdGhlIHBsYXkgYXMgJ0NlY2lseSBhbmQgJ0d3ZW5kb2x5bicgICB0aGUgY3Vja29vICdQaWdlb24nIHNpc3RlcnMgd2hvIGxpdmUgdXBzdGFpcnMsIGFuZCB3aG9tIEZlbGl4IGxhdGVyIG1vdmVkIGluIHdpdGguIApIYWQgdGhlIHdvcnN0IHJ1biBvZiBteSBsaWZlIHRvZGF5IChTdW5kYXkpLiAKTW9tZW50cyBhZnRlciBTZXJnZWFudCBQaGlsbGlwcyBzcGVkIGF3YXksIEt5bGUgR2liYnMgaGFkIHNlY29uZCB0aG91Z2h0cy4gTWNBbmFsbHkncyBpcyBhIHNtYWxsIGNoYWluIG9mIGNvbnZlbmllbmNlIHN0b3JlcyBpbiB0aGUgcmVnaW9uLiBUaGVyZSBhcmUgdGhyZWUgaW4gQWRhOiBvbmUgb3V0IG9uIE5vcnRoIEJyb2Fkd2F5LCBvbmUgb3V0IG9uIEVhc3QgQXJsaW5ndG9uLCBvbmUgY2xvc2UgdG8gZG93bnRvd24gYXQgRm91cnRlZW50aCBhbmQgTWlzc2lzc2lwcGkuIApQZXJoYXBzIHRob3NlIHRocmVlIHBlb3BsZSB3ZXJlIG1ha2luZyBhIGRlZXBlciwgbW9yZSB3ZWxsIHRob3VnaHQgb3V0IHBvaW50PyBCdXQgdGhleSB3ZXJlIHByb2JhYmx5IGp1c3QgZHVtYiBhc3Nlcy4uIApJdCBycCBiYXNlZCB0aG91Z2ggc28gbG90cyBvZiB0YWxraW5nIGFuZCBsaXR0bGUgY29tYmF0LCBidXQgaG9seSBzaGl0IGlzIGl0IGNvbXBlbGxpbmcuIFVuZm9ydHVuYXRlbHkgaXQgd2FzIGEgc3VwZXIgYW1hdGV1ciBncm91cCBvZiBmcmllbmRzIGFuZCB0aGV5IGp1c3Qgc3RvcHBlZCBtYWtpbmcgZXBpc29kZXMgbGFzdCB5ZWFyIG9yIHNvLiAKV2hldGhlciBwYXN0IGRpc2FncmVlbWVudHMgcmVzdXJmYWNlIHJlbWFpbnMgdG8gYmUgc2Vlbi4gClRoYXQgaXMgcHJldHR5IGdvZGRhbW4gcnVkZS4gSXQgcHJvYmFibHkgd291bGQgaGF2ZSBiZWVuIHdheSBsZXNzIHdlaXJkIGlmIHNoZSBvZmZlcmVkIHBheSwgZXZlbiBpZiBzaGUgaGFkIHN0aWxsIHNhaWQgaXQgd2l0aCB0aGF0IGVudGl0bGVkIHRvbmUsIGJ1dCBaRVJPIG9mZmVyIG9mIHBheT8gWSBoYXZlIGtub3duIGVhY2ggb3RoZXIgNiBtb250aHMuIENvd29ya2VycyBhcmUgVkVSWSByYXJlbHkgZ29vZCBmcmllbmRzLCBhbmQgc2hlIGdvdCBzb21lIHN0b25lcyBhc3N1bWluZyB5b3UgZXZlbiB3YW50IHRoYXQga2luZCBvZiByZWxhdGlvbnNoaXAuIAoxMyB5ZWFycyBvZiBjYXRob2xpYyBzY2hvb2wsIGNodXJjaCBldmVyeSB3ZWVrIHRpbCBpIHdhcyAxOCwgQ2F0aG9saWMgcGFyZW50cy4gR3JldyB1cCBpbiBhbiB1cHBlciBtaWRkbGUgY2xhc3MgTWFyeWxhbmQgc3VidXJiLiAKQm9uZXp6NzkgIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMTAgaG91cnMgYWdvCkltIHdpbm5pbmcgMiwyIGJiIC8gMTAwLiB0aGlzIHllYXJHb29kYnllIGZyaWVuZCwgSSBwbGVhc2UgaG9wZS4geW91IHdpbGwgbm90IGZpbmQgdGhlIHNhbWUgcGFpbiBhcyBJIGRvIGluIHRoaXMgZ2FtZSwgdGhpcyBzbWFsbCwgc21hbGwgd2luLCBvdmVyIGFuZCBvdmVyLCBtYWtpbmcuIHNvIGxpdHRsZSBjb21wYXJlZCB0b2EgcmVhbGwgc2tpbGwsIGEgcmVhbCBjYXJlZXIsIGEgdm9jYXRpb24uV2hhdCBtb3JlIGlzIHRoZXJlIHRvIHNheT8gTXkgZ29kLCBJIGFtIGdvbmUgd2l0aCB0aGlzIHNpdGUsIGdvbmUgd2l0aCB0aGlzIGZvcnVtLCBnb25lIHdpdGggdGhpcyBnYW1lLiAKQWdhaW4sIG5vdCBhbiBpc3N1ZSwgYW5kIGhhdmluZyBhIGZhbWlseSBhcyBhIGJlZHJvY2sgaGFzIGhlbHBlZCBTTyBNVUNILCBhbmQgZ2l2ZW4gbWUgc28gbXVjaCBjb25maWRlbmNlIG92ZXIgc29tZXRoaW5nIEkgaGFkIGNvbmZsaWN0aW5nIHZpZXdzIGFib3V0IGZvciBhbG1vc3QgdHdvIGRlY2FkZXMgbm93LCBiZWNhdXNlIG15IHN1cnZpdmFsIHN0cmF0ZWd5IGhhcyBiZWVuIHRvIGhhdmUgdG8gZmlndXJlIG91dCBob3cgSSBmZWx0IGluIGEgc29jaWV0eSB0aGF0IGtlZXBzIHB1c2hpbmcgbXkgZmVlbGluZ3Mgb25lIHdheSwgQU5EIGJlaW5nIGluIGEgcGFydCBvZiB0aGUgU291dGggd2hlcmUgc29jaWFsIHN1cnZpdmFsIG1lYW50IGhpZGluZyBteSBiaXNleHVhbGl0eS4gSSBzdGlsbCBoYXZpbmcgaXNzdWVzLCBhbmQgdGhpcyBzdWIgaXMgaGVscGluZyBpbW1lbnNlbHkgc2luY2UgSSBmb3VuZCBpdC4gClRoZSBjaGFwdGVyIG1hc3RlcnMgcGVyc29uYWwgZ3VhcmQgYXJlIGRyZWFkbmF1Z2h0IGNhbGxlZCB0aGUgSGVrYXRvbnMuIApDbGV2ZWxhbmQgaXMgb3V0IGFzIDIwMTQgc3RvcCBvbiBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgY2lyY3VpdApUaGUgZ3V5IHdhcyBtb2FuaW5nIGFuZCBncm9hbmluZywgYW5kIHdhcyB0cnlpbmcgdG8gbGlmdCBoaW1zZWxmIG9mZiB0aGUgZ3JvdW5kLCBwcmVzdW1hYmx5IHRvIHRyeSBhbmQgZ2V0IGF3YXkuIFdlIGhhZCB0byBob2xkIGhpbSBkb3duLCBhbmQgSSBjb3VsZCBmZWVsIGhpcyBzbWFzaGVkIGJvbmVzIHNoaWZ0aW5nIHVuZGVyIGhpcyBza2luLCBhbmQgaGUgaGFkIHNldmVyYWwgb3BlbiB3b3VuZHMgdW5kZXJuZWF0aCBoaW0gd2hlcmUgaGlzIHNraW4gaGFkIHNwbGl0IGFuZCB0aGUgZmF0IHVuZGVybmVhdGggd2FzIHNwaWxsaW5nIG91dC4gQWxsIHRoZSB3aGlsZSBoZSB3YXMgb24gdGhlIGZsb29yIGhlIGtlcHQgdHJ5aW5nIHRvIGdldCB1cCBhbmQgY291bGRuIHVuZGVyc3RhbmQgd2h5IGhlIGhhZCB0byBzdGF5IHN0aWxsLgpEaWUgU2F0IEtyaXlhIHJlZ3QgZHVyY2ggZGFzIHJoeXRobWlzY2hlIENoYW50ZW4gZGVuIG5hdHJsaWNoZW4gRW5lcmdpZWZsdXNzIERlaW5lcyBLcnBlcnMgYW4gdW5kIHN0cmt0IERlaW5lIGtycGVybGljaGUgR2VzdW5kaGVpdCwgZGEgYWxsZSBpbm5lcmVuIE9yZ2FuZSBnbGVpY2h6ZWl0aWcgZWluZSBzYW5mdGUgTWFzc2FnZSBlcmhhbHRlbi4gCkhhdmluZyB0aGF0IHNwbGljZSB3aXRoIGEgbGFyZ2UgcGFydCB1bnR3aXN0ZWQgbWVhbnMgdGhhdCBpdCBpcyB2dWxuZXJhYmxlIHRvIGVsZWN0cmljYWwgaW50ZXJmZXJlbmNlLCBhbmQgaXQgbG9va3MgbGlrZSB5b3UgYWxzbyBoYXZlIHBob25lIGxpbmVzICh3aGljaCBhcmUgdW5zaGllbGRlZCB3aXJlcyBjYXJyeWluZyBBQykgaW4gdGhlIHNhbWUgYXJlYS4gCjQ6MzkgLiAKRGllIE9seW1waXNjaGVuIFNwaWVsZSBiZWdpbm5lbiBWZXJhbnN0YWx0dW5nIHdpcmQgbWl0IGRlciBmZWllcmxpY2hlbiBFcmZmbnVuZyBhbSA4LiBBdWd1c3QsIGVzIHdpcmQgdmllbCBQYXJ0eSB1bmQgYW1zYW50IHdocmVuZCBkaWVzZXIgWmVpdC4gT2x5bXBpYSBTdGFkaW9uIGlzdCB2b24gZ3JvZXIgV3VuZGVyaGVpdCwgZGVyIGludGVsbGlnZW50ZW4gS29uemVwdGlvbiAgIGVzIGlzdCBkZXIgQXVmYmF1IHZvbiB2aWVsZW4gU3RhdW5lbiwgZXJzY2hlaW5lbiB3aWUga3N0bGljaCBOZXN0IGRlciBIaGxlbnNjaHdhbGJlISBHZWJhdXQgdm9uIGNoaW5lc2lzY2hlbiBFaW5mYWxsc3JlaWNodHVtLCBBcmJlaXRza3JhZnQgdW5kIGJsZWloYWx0aWdlIEZhcmJlLCBtYWNodCBlcyBlcnN0YXVubGljaCBTdGFuZG9ydCB6dSBCZWdpbm4gT2x5bXBpYSBWZXJhbnN0YWx0dW5nZW4hSW0gQW5zY2hsdXNzIHdlcmRlbiAxNiBUYWdlIHZvbiBlaW5lciBlcnN0YXVubGljaGVuIHNwb3J0bGljaGVuIFdldHRrYW1wZiwgemVpZ2VuIGRpZSBiZXN0ZW4gZGVyIG1lbnNjaGxpY2hlbiBLcmFmdCwgQmV3ZWdsaWNoa2VpdCB1bmQgbWVuc2NobGljaGVuIFdhY2hzdHVtc2hvcm1vbiEKSWYgeW91IGFyZSBsdWNreSBlbm91Z2ggdG8gaGF2ZSBwbGF5ZXJzIHdobyBhcmUgZXhwZXJpZW5jZWQgZW5vdWdoIHRvIGFsc28ga25vdyBob3cgZGVhbCwgc2VlIGlmIG9uZSBvZiB0aGVtIHdvdWxkIGJlIHdpbGxpbmcgdG8gYmUgdGhlIGRlc2lnbmF0ZWQgZGVhbGVyIGZvciBlYWNoIHRhYmxlLiBJZiBzbywgYXV0b21hdGljYWxseSBzaXQgdGhlbSBpbiBzZWF0IDEgaW4gdGhlIG1pZGRsZSBvZiB0aGUgdGFibGUgZ2l2aW5nIHRoZW0gdGhlIGVhc2llc3QgYWNjZXNzIHRvIGRlYWwgdG8gdGhlIGVudGlyZSB0YWJsZS4KT3ZlciB0aGUgeWVhciB0aGF0IHRoZXkgbGl2ZWQgdGhlcmUsIHRoZXkgY3JlYXRlZCBhIHNpbXBsZSwgYmVhdXRpZnVsIGFuZCBmdW5jdGlvbmFsIHNwYWNlIHRoYXQgc3VpdHMgdGhlaXIgbGlmZXN0eWxlLCBhY2NvbW1vZGF0ZXMgdGhlaXIgZ3Vlc3RzLCBhbmQgZXh1ZGVzIHdhcm0gY29uZ2VuaWFsaXR5Li4gCkF0IHRoZSB0aW1lLCBTbm9wZXMgc2F5cywgaXQgd2FzIHVuY2xlYXIgd2hlcmUgdGhlIHNpdGUgaGFkIGNvbWUgZnJvbSBvciB3aG8gd2FzIG9wZXJhdGluZyBpdCwgYnV0IGl0IGNsYWltZWQgdG8gYmUgYSBsb2NhbCBuZXdzcGFwZXIgYW5kIHdhcyBtb3N0bHkgZnVsbCBvZiBmcmVlIGNvbnRlbnQgcHJvZHVjZWQgYnkgb3JnYW5pemF0aW9ucyBiYWNrZWQgYnkgImNvbnNlcnZhdGl2ZSBtZWdhIGRvbm9ycy4iLiAKRXZlbnR1YWxseSBJIGZvdW5kIGEgc3RhcnR1cCB0aGF0IHJlYWxseSBzZWVtZWQgdG8gY2xpY2sgd2l0aCBtZS4gVGhlaXIgZmluYW5jaWFsIHNpdHVhdGlvbiB3YXMgYWJvdXQgdGhlIHNhbWUgYXMgd2hhdCB5b3Ugc2F5aW5nLCBvciBhdCBsZWFzdCBpbiB0aGF0IGJhbGxwYXJrLiBJIHRvb2sgYSAxMCUgcGF5IGN1dCBhbmQgSSBjb3VsZG4gaGF2ZSBiZWVuIGhhcHBpZXIuIE15IGNvd29ya2VycyBhcmUgYWxsIHNtYXJ0LCB0aGV5IGdldCBhIGxvdCBkb25lLCBhbmQgYXJlIGZvY3VzZWQuIFdlIGRvbiB3b3JrIGNyYXp5IGhvdXJzIChJIHByb2JhYmx5IGRvIDQwIDQ1IGEgd2VlaykgYW5kIHRoZXJlIG5vICJ3ZSB3b3JrIGhhcmQgYW5kIHBsYXkgaGFyZCIgYnVsbHNoaXQuIEkgZ290IG9wdGlvbnMgYnV0IHdobyBrbm93cyBpZiB0aG9zZSB3aWxsIGJlIHdvcnRoIGFueXRoaW5nLiBXZSBzZWUuIFN0aWxsIHdvcnRoIGl0IHRvIG1lLgpUaGUgdGFibGUgY29tZXMgaW4gYSB2aW55bCBmaW5pc2guIApGYW1pbHkgbGlmZSBjYW4gbWVhbiBhIGxvdCBvZiBkaWZmZXJlbnQgdGhpbmdzIGluIHRvZGF5J3Mgd29ybGQuIFdlIHdhbnQgdG8gaGVscCB5b3UgZmluZCB3aGF0IGl0IG1lYW5zIHRvIHlvdSB0aHJvdWdoIG91ciBpbnNpZ2h0ZnVsIGFuZCBlYXN5IHRvIHJlYWQgYXJ0aWNsZXMuIFlvdXIgZmFtaWx5IGlzIG1vc3QgY2VydGFpbmx5IGEgcHJpb3JpdHkgaW4geW91ciBsaWZlLCBhbmQgbGVhcm5pbmcgdG8gYmV0dGVyIHByb3ZpZGUgZm9yIHRoZW0gaXMgdmVyeSBpbXBvcnRhbnQuIApKYW1lcyBmaW5pc2hlZCB3aXRoIDMxIHBvaW50cywgc2V2ZW4gcmVib3VuZHMgYW5kIHNldmVuIGFzc2lzdHMuIEhpcyBzdHJ1Z2dsaW5nIExha2VycyByYWxsaWVkIGxhdGUsIGJ1dCBkcm9wcGVkIHRoZWlyIGZvdXJ0aCBzdHJhaWdodCBnYW1lIGluIGEgc2Vhc29uIHRoYXQgYXBwZWFycyB0byBiZSBsb3N0LgpJIGNvdWxkIGdldCBteSByZXZlbmdlIGJ1dCBhdCB0aGUgc2FtZSB0aW1lLCBWYW5lc3NhIHdhbnRzIE1lZyBvdXQuIApJIGRvIHRoaXMgZXZlcnkgZGFuZyB0aW1lIHRvby4gSSBqdXN0IGtub3cgc29tZSBndXkgaXMgaGVhcmluZyBtZSBmbHVzaGluZyBvdmVyIGFuZCBvdmVyIHdoaWxlIHNpdHRpbmcgYW5kIHB1enpsZWQgYWxsIHRvIGhlbGwgb3ZlciB3aGF0IGl0IGlzIEkgdGhpbmsgSSBhY2NvbXBsaXNoaW5nLi4gCktlZXAgZ3JpbmRpbmcgYXdheSBhdCB5b3VyIGpvYiBhbmQgMk5MIHVudGlsIHlvdSBhcmUgY29uc2lzdGVudGx5IGJlYXRpbmcgdGhlIGdhbWUgb3ZlciBhIGdvb2Qgc2FtcGxlIHNpemUuIElmIHlvdXIgZ29hbCBpcyB0byBiZSBzdWNjZXNzZnVsIHRoZW4gdGhpcyBpcyBzbyBmdWNraW5nIGNydWNpYWwgZHVyaW5nIHRoZXNlIGxlYXJuaW5nIGFuZCBkZXZlbG9wbWVudGFsIHN0YWdlcyB0aGF0IEkganVzdCBjYW4gZXZlbiBzdHJlc3MgaXQgZW5vdWdoLiAKUGVjaCBnZWhhYnQuIFRqYSwgbWVociBnaWJ0cyBuaWNodCB6dSBzYWdlbiwgaXN0IGF1Y2ggYmxvICduZSBLbGVpbnN0YWR0LjEwIEtvbWl0ZWVsZXV0ZSBhdXMgRGV1dHNjaGxhbmQsIE1hbHRhLCBSdXNzbGFuZCwgRG9taW5pY2EsIE5vcmRrb3JlYSwgQXVzdHJhbGllbiwgS2VuaWEsIEFsZ2VyaWVuLCBCcmFzaWxpZW4gdW5kIFVTQSBtZWxkZXRlbiBzaWNoIGluIGVpbmVyIFRWIFNvbmRlcnNlbmR1bmcgenUgV29ydCB1bmQgdmVyZ2FiZW4gaWhyZSAzLCA1IHVuZCA3IFB1bmt0ZS4gCklmIHlvdSB3YW50IHRvIHdvcmsgb24gdGhpbmdzIHRvIGluY3JlYXNlIHlvdXIgd2lucmF0ZSBhdCAxLzIsIGxvb2sgYXQgdGhpbiB2YWx1ZSBiZXRzIGFuZCAzYmV0dGluZyBtb3JlIG9mdGVuLiBJbiBteSBleHBlcmllbmNlIDEvMiBwbGF5ZXJzIGRvbiBkZWZlbmQgdnMgM2JldCBlbm91Z2ggYW5kIHdoZW4gdGhleSBkbyB0aGV5IGFsbW9zdCBhbHdheXMgZm9sZCB0byBhIGZsb3AgY2JldCB1bmxlc3MgdGhleSBoaXQgdGhlaXIgc2V0IG9yIDIgcGFpci4uIApBcmUgeW91IGV2ZW4gYmVpbmcgc2Vuc2libGUgcmlnaHQgbm93PyBBY2NpZGVudGFsbHkgc2FsdmFnaW5nIHNvbWV0aGluZyBpcyBjb21wbGV0ZWx5IGRpZmZlcmVudC4gSSBoYWQgYmVlbiBlYWdlcmx5IGFudGljaXBhdGluZyBhIHJlZCBpdGVtIGZvciBkYXlzLiBUaGlzIHdvdWxkbiBqdXN0IGJlIGEgbWlzIGNsaWNrL21pcyByZWFkIHNhbHZhZ2UsIEkgaGF2ZSB0byBjb21wbGV0ZWx5IGlnbm9yZSB0aGUgcmVkIGJlYW0sIGlnbm9yZSB0aGUgcmVkIGJvcmRlcmVkIGl0ZW0gaW4gbXkgaW52ZW50b3J5LCBpZ25vcmUgdGhlIHJlZCBib3JkZXJlZCBpdGVtIGF0IHRoZSBibGFja3NtaXRoLiAKRm9yZWNhc3RlcnMgcGxheWVkIHBva2VyIHdoaWxlIFV0dGFyYWtoYW5kIGRyb3duZWQKQSByZWFsIGNvcCBjYW4gZ2l2ZSB5b3UgYSByZWFsIGNpdGF0aW9uIGZvciBub3QgcGF5aW5nIHlvdXIgZmFyZSB3aGljaCB3aWxsIGFjdHVhbGx5IHJlc3VsdCBpbiB5b3UgYmVpbmcgYXJyZXN0ZWQgaWYgeW91IGZhaWwgdG8gcGF5LiBCdXQgU0ZQRCBkb24gd2FzdGUgdGhlaXIgdGltZSBnaXZpbmcgb3V0IHRpY2tldHMgb24gTXVuaQpMZSB2aWNlIHByc2lkZW50IGF1eCBjb21tdW5pY2F0aW9ucyBldCBhdXggYWZmYWlyZXMgZ291dmVybmVtZW50YWxlcyBkJ0h5ZHJvcG90aGVjYXJ5LCBQaWVycmUgS2lsbGVlbi4gUGhvdG8gOiBSYWRpbyBDYW5hZGEgLyBTaW1vbiBMYXNhbGxlCklmIHlvdSB3YW50IHRvIGJyZWFrIGl0IGRvd24sIHRoZW4gbGV0IGJyZWFrIGl0IGRvd24uIEdhbmcgZ3VuIHZpb2xlbmNlIGlzIHdoYXQgaGFzIGdvbmUgd2F5IGRvd24uIFN0cmVldCBjcmltZSBoYXMgZ29uZSBkb3duLiBCdXQgbWFzcyBzaG9vdGluZ3MgaGF2ZSBnb25lIHVwLiBSaWdodCB3aW5nIHRlcnJvcmlzdHMgc3RvY2twaWxpbmcgZ3VucyBoYXZlIGdvbmUgdXAuIEhhdGUgZ3JvdXBzIGhhdmUgZ29uZSB1cC4gQW5kIHlvdSByaWdodCwgc3VpY2lkZXMgaGF2ZSBnb25lIHVwLiBBbGwgb2YgdGhlc2UgdGhpbmdzIGNvaW5jaWRlIHdpdGggYSByaXNlIGluIHRoZSBhbW91bnQgb2YgZ3VucyBpbiBBbWVyaWNhLiBObyBvdGhlciBjb3VudHJ5IGhhcyB0aGlzIG1hbnkgZ3VucywgYW5kIG5vIG90aGVyIGNvdW50cnkgaGFzIHRoaXMgbWFueSBtYXNzIHNob290aW5ncy4gSXQgdGhlIGd1bnMgZHVkZS4KQ29udHJhcnkgdG8gc29tZSBhc3N1bXB0aW9ucywgYSBtb2R1bGFyIGJ1aWxkaW5nIGlzIG5vdCBhIGJhc2ljLCBjb29raWUgY3V0dGVyIGJveC4gUHJlZmFiIGhvbWVzIGFyZSBpbmNvcnBvcmF0aW5nIG1vZGVybiBhbmQgcGxlYXNpbmcgYXJjaGl0ZWN0dXJhbCBlbGVtZW50cyBwbHVzIGN1c3RvbWl6ZWQsIGVjbyBmcmllbmRseSBhbmQgc21hcnQgaG9tZSB0ZWNobm9sb2d5IGJ5IGRlc2lnbi4gUGVvcGxlIHdvbiBldmVuIGtub3cgdGhleSBtb2R1bGFyLiBjb21tdW5pdGllcyBoYXZlIGFscmVhZHkgd2VsY29tZWQgbW9kdWxhciBob3VzaW5nLCBhcHByb3ZpbmcgcHJvamVjdHMgZm9yIHRoZSBob21lbGVzcyBpbiBhcyBsaXR0bGUgYXMgc2l4IHdlZWtzLiBCdXQsIHVubGlrZSBvdXIgRXVyb3BlYW4gb3IgQW1lcmljYW4gY291bnRlcnBhcnRzLCBDYW5hZGEgaGFzIGJlZW4gc2xvdyB0byBhZG9wdCB0aGlzIGNvbnN0cnVjdGlvbiBtZXRob2QgZm9yIHVyYmFuIGRldmVsb3BtZW50cy4gT25lIG9mIHRoZSB3b3JsZCBsYXJnZXIgaG90ZWwgY2hhaW5zLCBNYXJyaW90dCwgcmVjZW50bHkgb3BlbmVkIGEgbW9kdWxhciBob3RlbCB3aXRoIDk3IHJvb21zLCBjYWxsZWQgdGhlIEZvbHNvbSBGYWlyZmllbGQgSW5uIFN1aXRlcywgaW4gQ2FsaWZvcm5pYSwgd2l0aCBwbGFucyBmb3IgbW9yZS4KSGFyb2xkIFdlc3RwaGFsLiAKUGFydCBvZiB0aGF0IHdhcyB0aGUgNDAgaG91ciB3b3JrIHdlZWsuIFdoaWNoIHdhcyBncmVhdCwgYnV0IGl0IGdhdmUgcGVvcGxlIGFuIEVOT1JNT1VTIGFtb3VudCBvZiBmcmVlIHRpbWUuIApBZGQgdGhlIG92ZW4gYmVpbmcgb24gYXMgYSBodWdlIHJlZCBmbGFnIGJ1dCB0aGUgdGhpbmcgdGhhdCBhbm5veXMgbWUgbW9zdCBpcyB0aGF0IHNoZSB0aGlua3MgaXQgc3VjaCBhIHBhaW4gdG8gcHV0IGhlciBraWQgaW4gdGhlIGNhci4gSWYgZ2V0dGluZyB5b3VyIGtpZCBpbiBhIGNhciBzZWF0IGlzIHN1Y2ggYSBjaGFsbGVuZ2UgZm9yIHlvdSB0aGF0IHlvdSByYXRoZXIgbGVhdmUgdGhlbSBob21lIGFsb25lLCBmdWNraW5nIGRvbiBoYXZlIG9uZS4gCkFuZCBzbyBJIHdhbnRlZCB0byB0YWxrIGFib3V0IGFsbCB0aGUgcGFydHMgb2YgaXQgdGhhdCB3ZXJlIHRvdWNoZWQgaW4gc29tZSB3YXkgd2hlbiBJIHdhcyBnb2luZyB0aHJvdWdoIHRoaXMsIGFuZCBhcyBJIHN0aWxsIGdvIHRocm91Z2ggdGhpcyB0cmFuc2Zvcm1hdGlvbi4gCkEganVkZ2UgaGFzIG5vIHJpZ2h0IHRvIGVudGVyIGp1ZGdlbWVudCBpbiB0aGUgdGVldGggb2YgdGhlIGZpbmRpbmcgb2YgYSBqdXJ5LiAoTGF3IFRpbWVzLCBKdW5lIDEzLCAxODg1KQpFdmVuIGlmIHlvdSBkbyBub3Qga25vdyB0aGUgcnVsZXMsIHlvdSBjYW4ganVzdCBhc2sgYSBkZWFsZXIgdG8gbWFrZSBpdCBjbGVhci4gCkRvdyBKb25lcyBhcHByb3ZlcyBOZXdzIENvcnAgYnV5b3V0CkhpZ2hseSBRdWVzdGlvbmFibGUgVXRpbGl0eSB1ClRvZGF5IE1hYydzIG1hY2hpbmUgaGFzIGJlY29tZSB0aGUgZmlyc3QgY2hvaWNlIGZvciBldmVyeWJvZHkgc3BlY2lhbGx5IHRob3NlIHdobyBsaWtlIHRvIHBsYXkgb25saW5lIGdhbWVzLiBUaGlzIGlzIGFsc28gYSBmYWN0IHRoYXQgTWFjIG1hY2hpbmVzIGFyZSBmYXN0ZXIgYW5kIGFkdmFuY2VkIGluIGNvbmZpZ3VyYXRpb24gc28gcGxheWluZyBnYW1lcyBpbiB0aGVzZSBzeXN0ZW1zIGNvdWxkIGJlIGJlc3QgZm9yIHBsYXllcnMuIFRoaXMgYXBwbGUgc3lzdGVtIGlzIGhhdmluZyBzb21lIHNwZWNpZmljIHJlYXNvbnMgdG8gYWNjZXNzIGludGVybmV0IGFwcGxpY2F0aW9ucyBhbmQgdGhhdCBpcyB0aGUgcmVhc29uIHRoYXQgbWFueSBnYW1pbmcgY29tcGFuaWVzIGFyZSB0b2RheSBjcmVhdGluZyBNYWMncyBwb2tlciBzaXRlcyB0aHJvdWdoIHdoaWNoIHBsYXllcnMgY2FuIGVhc2lseSBlbmpveSB0aGVpciBmYXZvcml0ZSBnYW1lLi4gCldoZW4gYnVyZWF1Y3JhY3kgd2FudHMgdG8gbWFrZSB5b3UgYmVsaWV2ZSB0aGV5IGFzIHJldGFyZGVkIGFzIGEgcm9hZGtpbGwgaXMgYmVjYXVzZSB0aGV5IGhpZGluZyB0aGVpciByZWFsIGludGVudGlvbnMuIElmIHNoZSB3YXMgY29udGFnaW91cywgdGhlcmUgd291bGQgYWxyZWFkeSBiZSBhIHBhbmRlbWljLiBIZWxsLCB0aGV5IGxhY2sgc3VjaCBmb3Jlc2lnaHQgdGhhdCB0aGV5IHdvdWxkbiBiZSBhYmxlIHRvIGNvbnRhaW4gaXQuIFdoZXJlIHRoZSBmdWNrIGlzIEthbmppIGFuZCBIb25hbWkgYW5kIGV2ZXJ5b25lIHRoZXkgaW50ZXJhY3RlZCB3aXRoIGluIGJldHdlZW4/IElzb2xhdGVkIHNlcGFyYXRlbHk/IFRoYXQgYSBoaWdobHkgaW5lZmZpY2llbnQgd2F5IHRvIHF1YXJhbnRpbmUgcGVvcGxlLiBUaGVyZSBzbyBtdWNoIG92ZXJzaWdodCB0aGF0IGl0IGEgbG9hZCBvZiBidWxsc2hpdC4KSSBwaWNrZWQgdXAgZnJvbSBhIGZyaWVuZCBpbiBCZXJsaW4gYW5kIGhlIGdhdmUgbWUgcmVhbGx5IHNoaXR0eSBzdHVmZi4gCkhvd2V2ZXIsIENsdWIgQXVzdHJhbGlhIHN1Ym1pc3Npb24gdG8gdGhlIFByb2R1Y3Rpdml0eSBDb21taXNzaW9uIGNoaWxkY2FyZSBpbnF1aXJ5IHRoYXQgbm90IGZvciBwcm9maXQgY2x1YnMgc2hvdWxkIGJlIGFibGUgdG8gb3BlbiBkYXkgY2FyZSBjZW50cmVzIGF0IHRoZWlyIHZlbnVlcyBpbiByZXR1cm4gZm9yIHRheCBicmVha3Mgb24gdGhlaXIgcG9rZXIgbWFjaGluZSByZXZlbnVlIGhhcyBtZXQgd2l0aCBzd2lmdCBvcHBvc2l0aW9uLiBOU1cgR3JlZW5zIE1QIEpvaG4gS2F5ZSBvcHBvc2VkIGhhdmluZyBjaGlsZHJlbiAiaG9sZWQgdXAgaW4gd2hhdCBhcmUgZXNzZW50aWFsbHkgZ2FtYmxpbmcgZGVucyIgd2hpbGUgVGltIENvc3RlbGxvLCB3aG8gbGVhZHMgdGhlIEF1c3RyYWxpYW4gQ2h1cmNoZXMgR2FtYmxpbmcgVGFza2ZvcmNlLCBzYWlkIHRoZSBtb3ZlIHdvdWxkIG5vcm1hbGlzZSBnYW1ibGluZyBmb3Iga2lkcy4gTXMgQ29zbW9zIHJlZnV0ZWQgdGhlIGNsYWltcywgc2F5aW5nICJjbGV2ZXIgY2x1YnMiIHdlcmUgdGhpbmtpbmcgb3V0c2lkZSB0aGUgc3F1YXJlLiAKSHVtYW5lbWlseSAgMSBwb2ludCAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpJIHVzdWFsbHkgb3V0IGluIGZpdmUgbWludXRlcy4gSXQgbm90IHNvIG11Y2ggd2hhdCBJIGRvIGFzIGl0IGlzIHdoYXQgSSBkb24gZG8sIHdoaWNoIGlzIHRvIHVuZGVyIG5vIGNpcmN1bXN0YW5jZXMgdGhpbmsgYWJvdXQgYW55dGhpbmcgdGhhdCBJIGhhdmUgYW55IGtpbmQgb2YgZW1vdGlvbmFsIHJlYWN0aW9uIHRvIG9yIGNhcmUgYWJvdXQsIGllLiBNeSBqb2IsIG15IGxpZmUsIG15IGZyaWVuZHMsIHRoaW5ncyB0aGF0IGhhcHBlbmVkIHRoYXQgZGF5LCB0aGF0IHRpbWUgaW4gZ3JhZGUgNSB3aGVuIEkgZW1iYXJyYXNzZWQgbXlzZWxmIGluIGZyb250IG9mIHRoZSBjbGFzcywgZXRjLiAKQ2xhc3NpY2FsIG1hc3NhZ2Ugd2FzIGRlZmluZWQgYXMgYSBtYW51YWwgdHJlYXRtZW50IHVzaW5nIGVmZmxldXJhZ2UsIGZyaWN0aW9uLCBwZXJjdXNzaW9uIGFuZCBwZXRyaXNzYWdlLiAKT0ssIHRoYXQgZW5jb3VyYWdlcyBwZW9wbGUgdG8gdXNlIG1vcmUgZW5lcmd5LiBCeSBidW5kbGluZyBtYWludGVuYW5jZSBjb3N0cyBpbiB0byBwZXIga3cvaHIgY29zdHMsIHlvdSBkaXNjb3VyYWdlIHBlb3BsZSBmcm9tIHVzaW5nIHRvbyBtdWNoIGVsZWN0cmljaXR5LiBUaGlzIGltcGFjdHMgdGhlIGVudmlyb25tZW50LCBhbmQgYWxzbyB3b3VsZCByZXF1aXJlIHRoZSBlbGVjdHJpYyBjb21wYW55IHRvIGhhdmUgbW9yZSBjYXBhY2l0eSBvbiBkZW1hbmQgdG8gc3VwcG9ydCB0aGUgaW5jcmVhc2VkIGRlbWFuZC4gSXRzIG1vcmUgZXhwZW5zaXZlIGFsbCBhcm91bmQuClNwZW50IHNvbWUgdGltZSBpbiBCYW5na29rLCBiZXR3ZWVuIHRoZSB0cmFpbiBpbiB0aGUgY2l0eSBhbmQgb3Zlcmx5IGFnZ3Jlc3NpdmUgVHVrIFR1ayBkcml2ZXJzLCBJIHdhbGtlZCBhbG1vc3QgZXZlcnl3aGVyZS4gRm91bmQgYSBwbGFjZSBuZWFyIHdoZXJlIEkgd2FzIHN0YXlpbmcgdGhhdCBkaWQgYW4gYW1hemluZyBqb2Igb24gdGhlIGZlZXQgICBhZnRlciBhIGZldyBkYXlzIG9mIHdhbGtpbmcsIHRoZXkgd29yayB0aGVpciBtYWdpYyBhbmQgYWxsIHRoZSBhY2hlcyB3b3VsZCBiZSBnb25lLiBHcmVhdCBzdHVmZi4KSGUgc2F5cyBKb2huIENsYXJrIHdhcyBhIGJpZyBsb3ZlciBvZiBraWRzLCBjYWxsaW5nIGhpbSBhIGJpZyBraWQgaGltc2VsZiwgc28gdGhlIG1vdG9yY3ljbGUgY2x1YiBoYXMgdm93ZWQgdG8gZG9uYXRlIHRoZSBwcm9jZWVkcyBvZiBpdHMgcnVuIGVhY2ggeWVhciB0byBhIGZhbWlseSB3aXRoIHlvdW5nIGNoaWxkcmVuLgpTaGUgZGl2b3JjZWQsIHNodXQgZG93biBoZXIgYnVzaW5lc3MgYW5kIG1vdmVkIGF3YXkgZm9ybSBOb3ZhIFNjb3RpYSBzZWVraW5nIG5ldyBvcHBvcnR1bml0aWVzIGFuZCBhIGZyZXNoIHN0YXJ0LiAKQW5kIE1ycy4gSGFycnkgUG9rZXIsIG9mIFBoaWxhICBkZWxwaGlhOyBNci4gCkhlciB3aGVlbHM/IEEgMjAwNiBQVCBDcnVpc2VyIHdpdGggYSBmb3Igc2FsZSBzaWduISBBbmQgb25seSAkNyw1MDAgYnVja3MuIApOZWxseSBGdXJ0YWRvIGlzIG9uZSBvZiB0aGUgZmV3IGZlbWFsZXMgd2l0aCB0aGUgbW9zdCBudW1iZXIgb25lcy4gVGhyZWUgb3V0IG9mIGEgdG90YWwgb2YgZml2ZSBvbiB0aGUgeWVhciBlbmQgY2hhcnRzIHdlbnQgdG8gdGhlIHRvcCBvZiB0aGUgSG90IDEwMCB3aXRoICJQcm9taXNjdW91cyIsIGZlYXR1cmluZyBUaW1iYWxhbmQgaW4gMjAwNiBhbmQsICJHaXZlIEl0IFRvIE1lIiBhbmQgIlNheSBJdCBSaWdodCIgaW4gMjAwNy4gSGVyIHN1Y2Nlc3NmdWwgY2FyZWVyIGJlZ2FuIGluIDIwMDAgd2l0aCB0aGUgcmVsZWFzZSBvZiBoZXIgZCBhbGJ1bSBXaG9hLCBOZWxseSEuIFR3byBoaXRzIGZyb20gdGhlIGFsYnVtIHdlcmUgIkknbSBMaWtlIGEgQmlyZCIgYW5kICJUdXJuIG9mZiB0aGUgTGlnaHQiLCB3aGljaCB3ZXJlIHF1aXRlIGRpZmZlcmVudCwgc3R5bGlzdGljYWxseSwgdGhhbiBoZXIgbGF0ZXIsIHNleGllciBoaXRzLgpEcmFnb25zIHBsYXkgU3BpdGZpcmUgbmV4dC4gSSBjYW4gcHJvYmFibHkgcGVuY2lsIHRoYXQgb25lIGluIGFzIGEgbG9zcy4gVGhlbiB0aGV5IG9mZiB1bnRpbCBBcHJpbCB3aGVuIHRoZXkgZ2V0IHRvIHBsYXkgYmFzZW1lbnQgT3ZlcndhdGNoIHRlYW1zLiAKUHJhY3RpY2luZyBlcXVhbmltaXR5IGR1cmluZyBzaXRzIGhlbHBlZCB0byBsZWFybiB0aGF0IHBoeXNpY2FsIHBhaW4gZG9lc24gaGF2ZSB0byBiZSBtZW50YWwgc3VmZmVyaW5nLiBZb3UgZG9uIGhhdmUgdG8gaWRlbnRpZnkgd2l0aCBpdCBvciBoYXZlICJvd25lcnNoaXAiIG9mIGl0LiBUcnkgdG8gb2JqZWN0aXZlbHkgYW5kIGVxdWFuaW1vdXNseSBzdHVkeSB0aGUgcGFpbiB3aGlsZSBpbiBtZWRpdGF0aW9uLCB0cnkgYW5kIGdldCB0byBrbm93IGFsbCBvZiBpdHMgZmFjZXRzLCBhY2NlcHQgaXQsIGFuZCBpZi93aGVuIGl0IGdldHMgdG8gdGhlIHBvaW50IHdoZW4gaXQgdG9vIG92ZXJiZWFyaW5nLCBhY2NlcHQgdGhhdCB0b28gYW5kIG1vdmUgb24uIApTaGVzIG15IG1pbmkgbWUuIFNoZSBsb3ZlcyB0byBwcmV0ZW5kLiAKVG8gbWFueSBpdCBzZWVtcyBjcmF6eSBhZnRlciBhbGwsIHRoZSBvZGRzIGFyZSBzdGFja2VkIGFnYWluc3QgeW91LiBQb2tlciBtYWNoaW5lcywgZm9yIGV4YW1wbGUsIHJldHVybiwgb24gYXZlcmFnZSwgODcgcGVyIGNlbnQgb2Ygd2hhdCB5b3UgcHV0IGluLiBZb3UncmUgcGF5aW5nIHRoZW0gdG8gdGFrZSB5b3VyIG1vbmV5LgpUaGUgb2JzZXJ2YXRpb25zIGFyZSB3aGF0IHRoZSBpbml0aWFsIGh5cG90aGVzaXMgaXMgYmFzZWQgb24gYW5kIHRoZSBwcm9jZXNzIG9mIHRoZSBzY2llbnRpZmljIG1ldGhvZCBlbnN1cmVzIHRoYXQgdGhpcyBoeXBvdGhlc2lzIGRvZXNuJ3QgYmVjb21lIGFuIGFjY2VwdGVkIHRoZW9yeSB3aXRob3V0IG1lYXN1cmluZyB1cCB0byB0aGUgcmVzdCBvZiB0aGUgcmVxdWlyZW1lbnRzLiBIb3dldmVyLCBwcm9wZXIgb2JzZXJ2YXRpb25zIChzZWUgdGhlIHNlY3Rpb24gb24gJ1ByZWRpY3Rpb24gYW5kIEV4cGVyaW1lbnQnKSBhcmUgbW9yZSBsaWtlbHkgdG8geWllbGQgYSB1c2VmdWwgaHlwb3RoZXNpcywgYW5kIHByb3Blcmx5IHJlY29yZGVkIG9ic2VydmF0aW9ucyBhbmQgYSBsb2dpY2FsIGV4cGxhbmF0aW9uIG9mIGhvdyB0aGUgaHlwb3RoZXNpcyB3YXMgZGVyaXZlZCBmcm9tIHRob3NlIG9ic2VydmF0aW9ucyBtYWtlcyBpdCBtb3JlIHVzZWZ1bCB0byBvdGhlciBzY2llbnRpc3RzLi4gCkZyb20gdGhlIEFxdWEgTmV0IHRvIHRoZSBtdXNpYy4gClRoZSBwcmltZSBtaW5pc3RlciB0aGVuIGFza2VkIEFmdGFiIFNoZWlraCB0byBwYXNzIHRoZSBwYXBlciB0byBLaHVyc2hlZWQgU2hhaCB3aG8gaGFkIHRha2VuIGEgcHJheWVyIGJyZWFrIGZyb20gaGlzIG9wZW5pbmcgc3BlZWNoIG9uIHRoZSBwcmVzaWRlbnRpYWwgYWRkcmVzcy4gS2h1cnNoZWVkIHRhbGtlZCB0byBOYXdheiB3aG8gc2F0IGF0IGFybSdzIGxlbmd0aCBhbmQgdGhlbiBzdG9vZCB1cCB0byBwb3N0cG9uZSBoaXMgc3BlZWNoLiAKSXQncyB0aGUgcG9rZXIgZXF1aXZhbGVudCBvZiBXaW1ibGVkb24gdGVubmlzLCBUaGUgTWFzdGVycyBHb2xmLCBob3JzZSByYWNpbmcncyBSb3lhbCBBc2NvdCBvciBDaGVsdGVuaGFtLCBzbm9va2VyJ3MgV29ybGQgQ2hhbXBpb25zaGlwICAgYWxsIG9mIHdoaWNoIGhhdmUgYSBuYXR1cmFsIGhvbWUuIFNhbWUgd2l0aCB0aGUgV1NPUCAgIGl0IGJlbG9uZ3MgaW4gTGFzIFZlZ2FzLiBUaGVyZSBhcmUgbWluaSB2ZXJzaW9ucyBhbmQgY29weWNhdCBldmVudHMgd2hpY2ggZmVlZCBvZmYgdGhlIGJyYW5kIGFuZCB0YWtlIHBsYWNlIGluIEV1cm9wZSBhbmQgZWxzZXdoZXJlLCBidXQgdGhleSBhcmUgc2ltcGx5IG5vdCB0aGUgcmVhbCBkZWFsLiAKTWF5YmUgaGUgbG9zZXMgYXQgY2FyZHMsIHdoaWNoIHNlZW1zIGNyYXp5IHdpdGggaGlzIHBva2VyIGZhY2UsIGJ1dCBoZSBkb2VzbiBsb3NlIG11Y2ggYXQgdGhlIHJpbmsuIEhlIDkgMyAxLCB3aW5uaW5nIGFsbCBzaXggb2YgaGlzIGZpcnN0IHN0YXJ0cyBhdCBSb2dlcnMgUGxhY2Ugd2l0aCBhIC45NzIgc2F2ZSBwZXJjZW50YWdlLiBIZSBnZXQgdGhlIHN0YXJ0IGluIERlbnZlciBvbiBUdWVzZGF5IGFnYWluc3QgdGhlIENvbG9yYWRvIEF2YWxhbmNoZSBiZWNhdXNlIGNvYWNoIEtlbiBIaXRjaGNvY2sga25vd3MgZ29hbGllcyBjb21pbmcgb2ZmIHNodXRvdXRzIHBsYXkgYWdhaW4uLiAKSSBub3QgcmVzcG9uc2libGUgZm9yIHRoZWlyIHNoaXR0eSBzZWN1cml0eSBzeXN0ZW0hIj8uIApMb3VpcyBQaWNoIGZycXVlbnRlIGxlcyBwcm9zdGl0dWVzIGRlcHVpcyB1bmUgZGl6YWluZSBkJ2FubmVzIGRhbnMgbGVzIHNhbG9ucyBkZSBtYXNzYWdlLCBsZXMgc29pcmVzIGNvcXVpbmVzIHByaXZlcyBldCBwYXIgZGlmZnJlbnRzIHNpdGVzIEludGVybmV0LiBBcHJzIGF2b2lyIHJlbmNvbnRyIGRlcyBjZW50YWluZXMgZGUgY2xpZW50cywgZGUgZmlsbGVzIGV0IGRlIG1lbWJyZXMgZHUgcGVyc29ubmVsIHF1aSBsZXMgZW50b3VyZW50LCBpbCBlc3QgY29udmFpbmN1IHF1ZSBsYSBwcm9zdGl0dXRpb24gZXN0ICBwZXUgZGUgY2hvc2VzIHBycyB1biB0cmF2YWlsIGNvbW1lIHVuIGF1dHJlLCB1biBjb21tZXJjZSBjb21tZSB1biBhdXRyZS4gCkkgdGhpbmsgeW91IHdpbGwgZmluZCB0aGF0IGEgd2VsbCBmaXR0aW5nIGJyYSBjYW4gYmUgbW9yZSBzZXh5IHRoYW4gbWFueSB0aGF0IGFyZSBhZHZlcnRpc2VkIHRvIGJlIHNleHVhbC4KUGVyaGFwcyBpdCBhIG5ldyBjb2xsZWFndWUsIG9yIGEgZnJpZW5kIG9mIGEgZnJpZW5kLCBvciBhIHRvdGFsIHN0cmFuZ2VyIHdyaXRpbmcgb3V0IG9mIHRoZSBibHVlOiBFbWFpbCBtYWtlcyB0aGVzZSBleGNoYW5nZXMgcG9zc2libGUuLiAKSXQgc2NhcmVkIHRoZSBzdCBvdXQgb2YgbWUuIE9oLCBub3QgYmVjYXVzZSBJIHJlYWxpemVkIEkgd2FzIGEgc2lubmVyIGFuZCBuZWVkIHRvIGJlIHNhdmVkLiBJIG1hZGUgbXkgcGVhY2Ugd2l0aCBoZWxsIGFzIG15IGZ1dHVyZSByZXNpZGVuY2UgYSBsb25nIHRpbWUgYWdvLiAKQWxzbyBhIGdvb2QgZWFybHkgdGlwIGZvciBuZXcgcGxheWVycyBpcyBub3QgdG8gYnV5IG1vZGlmaWNhdGlvbnMgZm9yIHlvdXIgc2hpcHMgYnV0IHRvIGdldCBtb3JlIHNsb3RzIHRvIGhhdmUgbW9yZSBzaGlwcyB0byBwbGF5IHdpdGggd2hlbiB3YWl0aW5nIGZvciBvdGhlcnMgdG8gYmUgcmVwYWlyZWQuLiAKSm9sbGlmZmUgKDIwMDcpIHByZXNlbnRzIHZhcmlvdXMgc3RhdGlzdGljYWwgbWV0aG9kcyB0byBxdWFudGlmeSB1bmNlcnRhaW50eSBpbiBmb3JlY2FzdCBza2lsbCBhbmQgZGlmZmVyZW5jZXMgaW4gZm9yZWNhc3Qgc2tpbGwuIERlbFNvbGUgYW5kIFRpcHBldHQgKDIwMTQpIHNob3cgdGhhdCBjb21tb25seSB1c2VkIHN0YXRpc3RpY2FsIHRlc3RzIGZvciBjb21wYXJpbmcgc2tpbGwgb2YgY2xpbWF0ZSBmb3JlY2FzdHMgbWFrZSB0aGUgcXVlc3Rpb25hYmxlIGFzc3VtcHRpb24gdGhhdCB0aGUgY29tcGV0aW5nIGZvcmVjYXN0cyBhcmUgaW5kZXBlbmRlbnQuIFRoZXkgc2hvdyB0aGF0IHRoaXMgYXNzdW1wdGlvbiBjYW4gaW52YWxpZGF0ZSB0aGUgdGVzdCByZXN1bHRzLCBhbmQgc3VnZ2VzdCBzdWl0YWJsZSBhbHRlcm5hdGl2ZXMuLiAKSSBmZWVsIGxpa2UgaSdtIHBhcnRpYWxseSB0byBibGFtZSBiZWNhdXNlIGkndmUgYWx3YXlzIHRvbGQgdGhlbSBpdCdzIHRoZSBjaGluc3Ryb2tlcnMgd2hvIGFyZW4ndCB0aGUgbWFpbiBtYXJrZXQgdGhhdCBjYXJlIGFib3V0IEZMQUMgYW55d2F5LkkgbGVnaXRpbWF0ZWx5IGhhdmUgbm8gaWRlYSB3aGVyZSBJIGV2ZW4gZ2V0IG11c2ljIGluIEZMQUMgZm9ybWF0LiBOb25lIG9mIG15IERKIHBvb2xzIGRvIGl0IGFuZCBpJ3ZlIG5ldmVyIGZvdW5kIHRoZSBuZWVkIHRvIHBsYXkgYW55dGhpbmcgaGlnaGVyIHRoYW4gMzIwIG1wM3MgZXZlbiBhdCBiaWcgZmVzdGl2YWxzLiBJIGNhbiBvbmx5IGltYWdpbmUgaXQncyB0aGlzIHRpbnkgbmljaGUgb2Ygdm9jYWwsIGF1ZGlvcGhpbGUgREpzIHRoYXQgd2FudCB0byBwbGF5IEZMQUMgYW5kIGZyb20gYSBidXNpbmVzcyBwZXJzcGVjdGl2ZSwgSSBjYW4gc2VlIHdoeSB0aGV5IGRvbid0IHNvIGl0LlJhdmluZSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnb0FzIGEgTWFuZGFyaW4gc3BlYWtlciwgaXQgYW5ub3llZCBtZSB0byBncmVhdCBsZW5ndGggd2l0aCB0aGUgc3VicyBvbi4gCkFuZCB3aGF0IGtpbmQgb2YgZmV1ZGFscyB3b3VsZCB0YXggdGhlbXNlbHZlcz9GZXVkYWwsIG1pbGl0YXJ5IG9yIGNhcGl0YWxpc3QsIHRoZSBQYWtpc3RhbmkgZWxpdGUgbG92ZSBvdGhlciBwZW9wbGUncyBtb25leS4gVGhlIGNvdW50cnkncyBwZXJlbm5pYWwgaW5kZWJ0ZWRuZXNzIGFuZCB1bnF1ZW5jaGFibGUgYXBwZXRpdGUgZm9yIG90aGVyIHBlb3BsZSdzIG1vbmV5IGhvd2V2ZXIsIGlzIG5vdCBpbmV2aXRhYmxlLiAKSSdkIDNiZXQgYSBsaXR0bGUgYmlnZ2VyIHByZSB0byBsaWtlIDQuNXggYXQgMTUwYmIgRWZmZWN0aXZlLgpaYWhpZCBoYWQgY29tbWl0dGVkIHRvIHRoZSBvcHBvc2l0aW9uIHRoYXQgaGUgd291bGQgZ2V0IFNhcnRhaiBBeml6IGJyaWVmIHRoZSBIb3VzZSBvbiBQYWtpc3RhbiBwb2xpY3kgb24gU3lyaWEuIFRoZSBQTUwgTiBnb3Zlcm5tZW50IHdhcyB0YWtpbmcgYSBkYWlseSBwb3VuZGluZyBpbiB0aGUgbWVkaWEgZm9yIGNoYW5naW5nIGl0cyBwb2xpY3kgb24gU3lyaWEgYWxsZWdlZGx5IGF0IHRoZSBiZWhlc3Qgb2YgYSBwb3dlcmZ1bCBNaWRkbGUgRWFzdGVybiBjb3VudHJ5LiBBIHdpcmUgc2VydmljZSB3ZW50IGFzIGZhciBhcyBhY2N1c2luZyBQYWtpc3RhbiBvZiBhZ3JlZWluZyB0byBzZW5kIGFybXMgdG8gU3lyaWFuIHJlYmVscy4gVGhlIEZvcmVpZ24gT2ZmaWNlIGRlbmllZCB0aGUgcmVwb3J0IGJ1dCB3YXMgcmF0aGVyIHNrZXRjaHkgaW4gZXhwbGFpbmluZyBpdHMgc2lkZSBvZiB0aGUgc3RvcnkuIFRoaXMgaGFkIHRoZSBOYXRpb25hbCBBc3NlbWJseSBmdW1pbmcgb24gTW9uZGF5LiBUaGUgb3Bwb3NpdGlvbiBhY2N1c2VkIHRoZSBnb3Zlcm5tZW50IG9mIG9ibGlnaW5nIHRoZSBTaGVpa2hzIGZvciB0aGVpciBob3NwaXRhbGl0eSBidXQgYXQgdGhlIGNvc3Qgb2YgbmF0aW9uYWwgaW50ZXJlc3RzLiBNYW55IHRob3VnaHQgdGhpcyB3b3VsZCBicmluZyBpbiB0aGUgbWlkZGxlIG9mIHR3byBNdXNsaW0gY291bnRyaWVzIHR1c3NsZSBhbmQgYW1vdW50ZWQgdG8gaW50ZXJmZXJlbmNlIG9uIGludGVybmFsIGFmZmFpcnMgb2YgU3lyaWEuIFRoaXMgd2FzIHNlZW4gYXMgYSBkZXBhcnR1cmUgZnJvbSBvdXIgcG9saWN5IG9mIG5vbiBpbnRlcmZlcmVuY2UuCjExLiBBIERvZyBCcmVha2Zhc3QgYXQgRmVkZXJhbDogQSBmcmVlIGJhcmJlY3VlIGJyZWFrZmFzdCBmb3IgZG9ncyBhbmQgaHVtYW5zIHRvIHByb21vdGUgcmVzcG9uc2libGUgZG9nIG93bmVyc2hpcC4gU3BlY2lhbGlzdCB2ZXRlcmluYXJ5IGFkdmljZSBhbmQgZ2l2ZWF3YXkgZG9nIGdvb2RpZXMuIApJbiB0aGlzIGhhbmQgd2UgYWx3YXlzIGp1c3QgZ2V0dGluZyBpdCBpbiB2cyBidG4va2sgYW55d2F5IHNvIGl0cyBpcnJlbGV2YW50IHdoYXQgd2UgZG8gYnV0IGJ5IGNyYW1taW5nIDUwIGJpZ3Mgd2UgcmVtb3ZlIGhpcyAoYW5kIHRoZSBibGluZHMpIG9wcG9ydHVuaXR5IHRvIHB1bnQgdG8gdXMgd2l0aCBzdHVmZiB3ZSBnb3QgY3J1c2hlZCBsaWtlIGpqIDY2IGFxIGFqIGV0Yy4sIHRoZSBvcmlnaW5hbCBzaG92ZSB3YXMgZm9yIDEwYmIgYXN3ZWxsIHNvIGl0cyBub3QgZXZlbiBsaWtlIHdlIG5lZWQgYSBidW5jaCBvZiBwcm90ZWN0aW9uIHZzIGNhbGxlcnMgYmVoaW5kLCBpZiBpdCB3YXMgbGlrZSA1YmJzIGFuZCB3ZSByaXNrIGdvaW5nIHRvIGEgZmxvcCA0IHdheXMgYnkgZmxhdHRpbmcgdGhlbiB5ZWggM2IgYnV0IHZzIDEwYmIgZXAgamFtIGFuZCBhIGNhbGwgbm8gb25lIGlzIGdvbm5hIGJlIGZsYXR0aW5nIHJhbmRvbSBoYW5kcyB3aXRoIGVxdWl0eSBvciBpZiB0aGV5IGFyZSB0aGVuIGF0IHdvcnN0IHdlcmUgcHJvYnMgZ29pbmcgdG8gYSBmbG9wIEhVIGluIHBvc2l0aW9uIHZzIGEgcmFuZ2Ugd2UgaGF2ZSBjcnVzaGVkLiAKTGUgZG9jdGV1ciBDYXppbiBtZXQgdG91dGUgc29uIG5lcmdpZSBhdSBzZXJ2aWNlIGRlIGwgZGUgY2UgZmxhdSwgbWFpcyBpbCBlbiBlc3QgbHVpIG1tZSBsIGRlcyB2aWN0aW1lcy4gClRoZSB0ZXJtIGNpcyB3YXMgaW50cm9kdWNlZCB0byByZXBsYWNlIHRoZSB1c2FnZSBvZiAibm9ybWFsIiBvciAicmVndWxhciIgaW4gdGhlc2Ugc2l0dWF0aW9ucyB0byBiZSBtb3JlIGluY2x1c2l2ZSBvZiB0cmFucyBwZW9wbGUuIEluIHRoZSBzZW5zZSB0aGF0IGl0IGNvdWxkIGJlIGNvbnNpZGVyZWQgZGVtZWFuaW5nIHRvIGNvbnRyYXN0IGJlaW5nIHRyYW5zIHdpdGggYmVpbmcgbm9ybWFsLiAKR29vZCBmb3IgeW91IGZvciBnb2luZyB0byBiYXQgYXMgbWFueSB0aW1lcyBhcyB5b3UgbmVlZCB0by4gCkkgcmVjb2duaXplIG1hbnkgcGVvcGxlIHNlZSB0aGUgZmFjdHMgYW5kIGFsbCB0aGUgdGhpbmdzIHdyb25nIHdpdGggdGhlIGNhc2UsIGJ1dCBzb21ldGltZXMgdGhlcmUgaXMganVzdCB0aGF0IGd1dCBmZWVsaW5nIGFib3V0IHNvbWVvbmUuIE15IGd1dCB0ZWxscyBtZSBTQSBpcyBpbm5vY2VudC4gSSBrbm93IHRoaXMgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgbGF3LCBJIGRvbiBuZWVkIGEgbGVjdHVyZS4KUmV5bm9sZHMgZ290IGEgcmV0dXJuIGVuZ2FnZW1lbnQgYWZ0ZXIgYmVpbmcgdGhlIGhpZ2hlc3QgcmF0ZWQgQU5BIHByZXNlbnRlciBsYXN0IHllYXIsIHRoYW5rcyB0byBiZWluZyBmdW5ueSBhbmQgZGlzYXJtaW5nbHkgaG9uZXN0LiBUaGlzIHllYXIgaGUgdHJpZWQgdGhhdCBhcHByb2FjaCBhZ2Fpbi4gVGFrZSBSZXlub2xkcycgZGVzY3JpcHRpb24gb2YgdGhlIFNhbGVzZm9yY2UgaGVhZHF1YXJ0ZXJzLCB3aGljaCBoZSBzYWlkOiAiTG9vbXMgb3ZlciBhbGwgb2YgU2FuIEZyYW5jaXNjbyBsaWtlIHRoZSBleWUgb2YgU2F1cm9uLiAKVGhlIENhbnVja3MgZ29hbHRlbmRlciBpcyB0aGUgb2J2aW91cyBmb2N1cyBvZiBvZmZzZWFzb24gaW50cmlndWUgYWZ0ZXIgdGhlIENhbnVja3MgZGVhbHQgQ29yeSBTY2huZWlkZXIgdG8gdGhlIE5ldyBKZXJzZXkgRGV2aWxzIG9uIEp1bmUgMzAgZm9yIHRoZSBuaW50aCBvdmVyYWxsIHBpY2sgaW4gdGhlIE5ITCBkcmFmdCwgd2hpY2ggdGhleSB0dXJuZWQgaW50byBjZW50cmUgQm8gSG9ydmF0LiBXaXRoIG93bmVyIEZyYW5jZXNjbyBBcXVpbGluaSwgZ2VuZXJhbCBtYW5hZ2VyIE1pa2UgR2lsbGlzIGFuZCBuZXcgY29hY2ggSm9obiBUb3J0b3JlbGxhIG9uIHZpc2l0YXRpb24gbWlzc2lvbnMgdG8gdGFrZSB0aGUgcGxheWluZyBwdWxzZSBvZiB0aGUgcmUgYXBwb2ludGVkIHN0YXJ0ZXIgd2hvIGJlY2FtZSBhIGJhY2t1cCBsYXN0IHNlYXNvbiBhbmQgaXMgbm93IGV4cGVjdGVkIHRvIGJlIHRoZSBtYWluIG1hbiBhZ2FpbiB0aGUgb25seSB0aGluZyB0aGF0IHJlYWxseSBjYW1lIHRocm91Z2ggaW4gdGhlIGludGVydmlldyBpcyB0aGF0IEx1b25nbyB3YW50ZWQgdG8gdGFsayBhYm91dCBjYXJkcyBhbmQgbm90IHRoZSBjcmVhc2UuIAo0LiBFdXJvcGUgKENocm9uaWMgTG93IEJhY2sgUGFpbiksIEl0YWx5LCBOZXcgWmVhbGFuZCwgTm9yd2F5LCBVbml0ZWQgS2luZ2RvbSwgMiBmcm9tIHRoZSBVbml0ZWQgU3RhdGVzLgpJcyB5b3VyIGZhdm9yaXRlIHBva2VyIGhhbmQgYmFzZWQgb24gbHVjawpIb3dldmVyLCBpdCBhbHNvIGRlcGVuZHMgb24gd2hldGhlciB0aGUgZGVhbGVyIHF1YWxpZmllZCBvciBub3QsIGFuZCB3aGV0aGVyIHRoZSBwbGF5ZXIgYmV0IG9uIHRoZSBQYWlyIFBsdXMuIApOZXJkeU5UaGljayB1CkkgdGFsayB0byBvdXIgRVMgbWFuYWdlciB0b28gZm9yIGEgZmV3IG1vcmUgZGV0YWlscy4uIApJdCBnZXR0aW5nIHRvIHRoZSBwb2ludCBJIGhhdGUgZ29pbmcgaG9tZSB0byB2aXNpdC4uIApZb3UgbGVmdCBvdXQgc2hvd2Rvd24gd2hlbiB5b3UgdGVsbCB0aGUgcGVyc29uIHdobyB3b24gdGhlIGhhbmQgdGhhdCB5b3Ugd291bGQgaGF2ZSBoYWQgdGhlbSBiZWF0IGFzIHRoZXkgc2Nvb3AgdGhlIHBvdC4KRGVyIFN0YW5sZXkgQ3VwIEdld2lubmVyIHZvbiAyMDExIGlzdCBwcm8gU2Fpc29uIGltbWVyIGYgMzAgVG9yZSBndXQuIERlciAyOCBqIExpbmtzYXUgd2FyIGluIGRlciB6dSBFbmRlIGdlZ2FuZ2VuZW4gUnVuZGUgZGVyIGJlc3RlIEZsIGRlciBLaW5nIG1pdCA1NSBQdW5rdGVuLiBEZXIgV2VjaHNlbCB2b24gZGVuIEJydWlucyBuYWNoIEthbGlmb3JuaWVuIDIwMTUgaGF0IGlobSBndXQgZ2V0YW4uIEx1Y2ljIHVuZCBkaWUgS2luZ3MgYmVmaW5kZW4gc2ljaCBkZXJ6ZWl0IGluIGludGVuc2l2ZW4gVmVyaGFuZGx1bmdlbiB3ZWdlbiBlaW5lciBXZWl0ZXJ2ZXJwZmxpY2h0dW5nLiBTb2xsdGVuIHNpY2ggYmVpZGUgU2VpdGVuIG5pY2h0IGVpbmlnZW4sIGsgZXIgZWluIEthbmRpZGF0IGYgZGllIEVkbW9udG9uIE9pbGVycyB3ZXJkZW4uClRoaW5ncyBjbG9zZSBkb3duIGZvciBob2xpZGF5cyAoSSB3YXMgdGhlcmUgZHVyaW5nIFJhbWFkYW4gYW5kIGhhZCB6ZXJvIGlzc3VlcyBmaW5kaW5nIHRheGlzLCBmb29kLCBldGMgZXhjZXB0IGZvciAzMCBtaW51dGVzIGFyb3VuZCB0aGUgdGltZSB0aGUgZmFzdCBpcyBicm9rZW4pIGFuZCB5b3UgZmluZCBwZW9wbGUgd2hvIGFyZSBkZXZvdXQgYW5kIHRob3NlIHdobyBhcmUgbm90LiBJIHNhdyBNb3JvY2NhbiB3b21lbiB3ZWFyaW5nIHNob3J0cyBhbmQgdGFuayB0b3BzIGFuZCB0aG9zZSB3ZWFyaW5nIGhpamFicywgSSB3ZW50IHRvIGJhcnMgYW5kIGRyYW5rIE1vcm9jY2FuIG1hZGUgYmVlciB3aGlsZSBsaXN0ZW5pbmcgdG8gQW1lcmljYW4gY292ZXIgYmFuZHMgKHNob3V0IG91dCB0byBVcHN0YWlycyBpbiBSYWJhdCkgYW5kIHJvZGUgY2FtZWxzIGluIHRoZSBkZXNlcnQuIEl0J3MgYSB3b25kZXJmdWwgY291bnRyeSB3aXRoIGEgbG90IHRvIG9mZmVyIGJ1dCBsaWtlIGV2ZXJ5IGNvdW50cnkgdGhlcmUncyBnb29kIGFuZCBiYWQuIApCaWVuIG1vaW5zIHNwZWN0YWN1bGFpcmUgcXVlIGxhIGNjaXQsIGwnYW5vc21pZSBuJ2VuIGRlbWV1cmUgcGFzIG1vaW5zIHVuIGhhbmRpY2FwIHF1b3RpZGllbiBwb3VyIGNldXggcXVpIGVuIHNvdWZmcmVudCwgZCdhdXRhbnQgcGx1cyBjcnVlbCBxdWUgbGVzIGNlbGx1bGVzIG9sZmFjdGl2ZXMgc29udCBzdGltdWxlcyBwYXIgZGVzIG1vbGN1bGVzIGFyb21hdGlxdWVzIHNhbnMgcXVlIGwnYW5vc21pcXVlIGVuIGFpdCBjb25zY2llbmNlLiAKT24gU2F0dXJkYXkgbmlnaHQsIEFwcmlsIDI4LCAxOTg0LCBhIGZldyBtaW51dGVzIGFmdGVyIDg6MzAsIGp1c3QgYSBmZXcgaG91cnMgYmVmb3JlIHRoZSB0b3duIHdvdWxkIHNwcmluZyBpdHMgY2xvY2tzIGZvcndhcmQgdG8gZGF5bGlnaHQgc2F2aW5nIHRpbWUsIGEgY2FyIGFuZCBhIHBpY2t1cCB0cnVjayBwdWxsZWQgaW50byB0aGUgcGFya2luZyBsb3Qgb2YgTWNBbmFsbHkncywgYSBjb252ZW5pZW5jZSBzdG9yZSB0aGF0IHN0YW5kcyBhbG1vc3QgYWxvbmUgb3V0IG9uIHRoZSBoaWdod2F5IGF0IHRoZSBlYXN0ZXJuIGVuZCBvZiB0b3duLiBUaGUgY2FyIHdhcyBiZWluZyBkcml2ZW4gYnkgTGVubnkgVGltbW9ucywgdHdlbnR5IGZpdmUgeWVhcnMgb2xkLCBhbiBYIHJheSB0ZWNobmljaWFuLiBCZXNpZGUgaGltIHdhcyBoaXMgYnJvdGhlciBEYXZpZCwgc2V2ZW50ZWVuLCBhIGhpZ2ggc2Nob29sIHN0dWRlbnQuIApGZWxkbWFuIHNwYXJlZCBubyBleHBlbnNlIHRvIGJyaW5nIHRoaXMgaWRlYSB0byBmcnVpdGlvbiwgaGlyaW5nIGJpZyBuYW1lIHN0YXJzIGFyZSB0aGVyZSBzaW1wbHkgZm9yIGZ1biBhbmQgZXhwZWN0IHRvIGxvc2UgZXZlcnl0aGluZy4gCk5vdywgc29tZSBvZiB0aGlzIHdpbGwgZXZlbnR1YWxseSBiZSBtaXRpZ2F0ZWQgYXMgZGVkaWNhdGVkIFNlbnRyeSBwbGF5ZXJzIHdpdGggaGlnaCBsZXZlbCBTZW50cnkgYXJtb3IgZ2FpbiB0aGUgYWJpbGl0eSB0byBtYXJrIGludmFkZXJzIGZvciB0aGVpciB0ZWFtbWF0ZXMsIGJ1dCBJIHN0aWxsIGZlZWwgbGlrZSBHYW1iaXQgUHJpbWUgd291bGQgYmVuZWZpdCBmcm9tIHNwYWNpbmcgb3V0IGludmFzaW9ucyBhIGxpdHRsZSBtb3JlLCByZWR1Y2luZyB0aGUgYW1vdW50IG9mIFByaW1ldmFsIGhlYWwgZnJvbSBpbnZhZGVyIGtpbGxzLCBhbmQgaW5zdGl0dXRpbmcgZGltaW5pc2hpbmcgcmV0dXJucyBvbiBQcmltZXZhbCBoZWFscyBmcm9tIGludmFkZXIga2lsbHMuCk1BSiA6IENldXggcXVpIG9udCBnbGlzcyB1biBtYWlsIGRhbnMgbGEgZmVudGUgcHJ2dWUgcG91ciB0cmUgaW5mb3JtcyBkZSBsJ291dmVydHVyZSBkZSBsYSBib3V0aXF1ZSwgdmllbm5lbnQgZCd0cmUgYXZlcnRpcyBxdSdpbCBuZSBsZXVyIHJlc3RlIHF1ZSAzIGpvdXJzIHBvdXIgcHIgY29tbWFuZGVyIGNhciBvbiBhdXJhaXQgbWFsIGFudGljaXAgZHUgc3VjY3MgZGUgbGEgZ2FtbWUgZGUgc29ydGUgcXUnaWwgZmF1ZHJhIGF0dGVuZHJlIGF2cmlsIHBvdXIgbGEgc2Vjb25kZSBzcmllIGRlIGxpdnJhaXNvbi5FdCBiaWVuIGNvbW1lIGplIHN1aXMgbiBjb250cmFyaWFudCwgaidhaSB0ZW5kYW5jZSAgZmFpcmUgdW5lIGludGVycHJ0YXRpb24gImRpZmZyZW50ZSIgZGUgY2UgcXUnb24gbm91cyByYWNvbnRlLiBBIHNhdm9pciBxdWUgcydpbCBmYXV0IGF0dGVuZHJlIGF2cmlsIHBvdXIgcydhcHByb3Zpc2lvbm5lciAgbm91dmVhdSwgY2VsYSBwb3VycmFpdCB2b3Vsb2lyIGRpcmUgYXUgY29udHJhaXJlIHF1ZSBsZXMgcHIgY29tbWFuZGVzIGRlIGZ2cmllciBtYXJjaGVudCBtYWwgZXQgcXUnaWwgYSBmYWxsdSByYWNvbnRlciB1bmUgaGlzdG9pcmUgcG91ciBsZXMgYm9vc3RlciBwYXJjZSBxdWUgc2kgbGUgc3VjY3MgdGFpdCBhdSBSViwgaWwgbmUgZmF1ZHJhaXQgcGFzIDMgbW9pcyBwb3VyIHJlbGFuY2VyIGxlIGN5Y2xlIGRlIHByb2R1Y3Rpb24gbWFpcyBhdSBtb2lucyB1biBkZSBtb2lucy5PbiB2ZXJyYSBzdXIgbGUgbG9uZyB0ZXJtZS5NYWlzIGJvbiBjaGFjdW4gdm9pdCBtaWRpICBzYSBwb3J0ZSwgZXQgY2Ugbidlc3QgcGFzIGxhIGNvbmZpZGVudGlhbGl0IGRlIGNlIGJsb2cgcXVpIHJpc3F1ZSBkZSBudWlyZSAgc29uIGVudHJlcHJpc2UuIApIdWxsIE1pc3NpbGUgTGF1bmNoZXIgKDIgcG9pbnRzIGJ1dCA0IHdoZW4gaXQgaGl0cyBhbiBlbXB0eSkuIApXYW50IHRvIGhlbHAgbW9kPyBIYXBweSB0byBoYXZlIHlvdSBvbiBib2FyZC4gSSBsb29rIGF0IHRoZSBzdWIgYWxsIHRoZSB0aW1lLCBhbmQgYW5zd2VyIG1vZG1haWwsIGJ1dCBJIG5vdCBhbHdheXMgdXAgdG8gdGhlIHRhc2sgb2YgYmxvd2luZyBvdXQgc3BhbS4gClF1YW50ICBsIHNlbnRpbWVudGFsIHF1IGxhIG1hcmdhcml0YSwgbGEgYmFyYmUgZGUgSnVwaXRlciBjZW5zZSBjYXJ0ZXIgbGEgZm91ZHJlIG91IGxlcyBzb3VyY2lscyBkZSBWbnVzIChjIGFpbnNpIHF1ZSBsIG5vbW1lIGwgZGVwdWlzIGxlIFZJIG1lIHNpY2xlIGF1IG1vaW5zKSwgcXVhbmQgYmllbiBtbWUgb24gbGVzIGRzaWduZSB0b3V0ZXMgY29tbWUgaGVyYmVzIGRlIFNhaW50IEplYW4sIGlsIGVzdCBkaWZmaWNpbGUgZGUgbGVzIGxpZXIgYXUgYmFwdGlzdGUsIGNvdXNpbiBkZSBKc3VzLiBDZWNpIHRhbnQgZGl0LCBjZWxhIG5lIHZldXQgcGFzIGRpcmUgcXUgbmUgbGVzIGVtcGxveWEgcGFzIGxvcnMgZHUgcml0dWVsIHBhZW4gc29sc3RpY2lhbCAocHVpcyBjaHJpc3RpYW5pcykgc2Vsb24gbGVzIG1tZXMgcmFpc29ucyB2b3F1ZXMgcGx1cyBoYXV0LiBQcm9jZGVyICB1biByaXR1ZWwgZGUgbGEgU2FpbnQgSmVhbiwgYyBmYWlyZSBwcmV1dmUgZGUgZHZvdGlvbiBldCBkIExhIG1hZ2llIHMgYXV4IHZlcnR1cyBjdXJhdGl2ZXMgZGUgcGxhbnRlcyBxdSBjb25uYXQgcGx1cyBvdSBtb2lucyBlbXBpcmlxdWVtZW50LCBsZSB0b3V0IHN1ciBmb25kIGQgYXV4IGRpdmluaXRzLiAKR2V0IGV2ZW4gbW9yZSBtb2RzLiBPbmNlIHdlIGhhdmUgZW5vdWdoIG1vZHMgdG8ga2VlcCB0aGUgc3ViIG9yZ2FuaXplZCBhbmQgb24gdG9waWMsIHdlIHdhbnQgdG8gYWRkIGFkZGl0aW9uYWwgbW9kcy4gTW9kcyB3aG8ga25vdyB0aGUgc3ViIGluc2lkZSBhbmQgb3V0LCBhbmQgd2hvIGhhdmUgYmVlbiBzdWJzY3JpYmVycyBoZXJlIGEgd2hpbGUuIFdlIHdhbnQgdGhlbSB0byBoZWxwIHdpdGggbW9kZXJhdGluZywgb2YgY291cnNlLCBidXQgd2UgYWxzbyBoYXZlIHRoZW0gd2VpZ2ggaW4gb24gb3VyIHBvbGljaWVzIGFuZCBydWxlcy4gVGhhdCBzaG91bGQgcHVzaCB0aGUgc3ViIGV2ZW4gZnVydGhlciBieSBtYWtpbmcgc3VyZSB0aGUgc3ViIGlzIGJlaW5nIG1vZGVyYXRlZCB0aGUgd2F5IGl0IHNob3VsZCBiZSBhbmQgdGhhdCB0aGUgc3ViIGxpdmVzIHVwIHRvIGl0cyBuYW1lLgpNYW4gbGFnIGF1Y2h2b3IgZGVyIGxldHp0ZW4gUGFydGllIG1pdCAxMiBQdW5rdGVuIGhpbnRlbiwgc29taXQgbGFnIGFsbGVzIGFuIEZyYXosIGRlciBkdXJjaCBlaW5lbiBTaWVnIHp1bWluZGVzdCBlaW5lbiBQdW5rdCBmciBkZW4gVEhDIHNjaGFmZmVuIGtvbm50ZS4gRmFzdCBzY2hpZW4gZXMgbmFjaCBlaW5lbSBnZXdvbm5lbmVuIFNob3dkb3duc28sIGRhc3MgZGllcyBiZXNjaGxvc3NlbmUgU2FjaGUgd3JlLCBkYSBkZXIgR2VnbmVyIGRhbm4gbnVyIG5vY2ggNDAwIFJlc3QgaGF0dGUsIGRvY2ggZGFzIEJsYXR0IGRyZWh0ZSBzaWNoLCBkcmVpIG9kZXIgdmllciBtYWwga29ubnRlIGRpZXNlciBzaWNoIHdpZWRlciB2ZXJkb3BwZWxuIHVuZCB3YXIgZmFzdCB3aWVkZXJnbGVpY2ggaW0gU3RhY2ssIGJpcyBkYXMgR2xjayBkYW5uIGltIGZpbmFsZW4gU2hvd2Rvd24gRnJhbnogaG9sZCB3YXIsIHRyb3R6IHNjaHdjaGVyZXIgSGFuZCBrb25udGUgZXIgc2ljaCBlaW5lbiBGbHVzaCB6aWVoZW4gdW5kIGdld2FubiBuYWNoIGRpZXNlbSBLcmltaSBnbGNrbGljaGVyd2Vpc2UgZGVuIGVyc3RlbiBQdW5rdGZyIGRlbiBUSEMuRHVyY2ggZGllIGJpc2hlcmlnZSBFcmdlYm5pc2tvbnN0ZWxsYXRpb24gd2FyIGVzIGplZG9jaCBub2NoIHJlY2huZXJpc2NoIG1nbGljaCwgZHVyY2ggZWluZW4gU2llZyBpbiBkZXIgMy4gCldoZW4gTE8gc3RhcnRzIHNvYWtpbmcgdGhlbSAodGhleSB3aWxsIGdldCB3ZXQsIHRoZXkgYXJlIGNvdHRvbiBhZnRlciBhbGwpLCBJIHNpemUgdXAgb3IgZG91YmxlIHRoZW0uIApUYWtlIHlvdXIgdGltZSBhbmQgc2V0dGxlIGluOyB0aGlzIGdvZXMgZm9yIGFueSBuZXcgZ2FtZSByZWFsbHkgYnV0IGdldCBhIGZlZWwgZm9yIHRoZSBnYW1lIGFuZCB3aGF0IGV2ZXJ5b25lIGlzIGRvaW5nLiBhbmQgdGhlbiBmb3JtdWxhdGUgYSBzdHJhdGVneSBmb3IgaG93IHRvIGJlYXQgdGhlIHRhYmxlLgpJIHNhdyBhIGNvdXBsZSBraWRzIHBsYXlpbmcgd2FsbCBiYWxsIGFuZCBkZWNpZGVkIHRvIHNlZSB3aGF0J3MgdXAuIFdlIHNhaWQgaGkgYW5kIHRoZW4gc2hvcnRseSBhZnRlciB0aGUgYm95IHRoZXJlIHdhbnRlZCB0byBzaG93IG15IGxpdHRsZSBzaXN0ZXIgc29tZXRoaW5nLiAoSSBkaWRuJ3Qga25vdyB3aGF0IGFuIEluZGlhbiBydWcgYnVybiB3YXMgYXQgdGhlIHRpbWUpLiBIZSBwcm9jZWVkcyB0byB0aWdodGVuIG9uIG15IHNpc3RlcnMgYXJtIGFuZCBJIHdhaXQgZm9yIGhlciB0byBzaG93IGFueSBkaXNjb21mb3J0IGFuZCBiZWluZyBzbGlnaHRseSBjb25mdXNlZCBhdCB0aGUgcG9pbnQuIFNoZSBzYWlkICJvdyEiIEFuZCB0aGF0IHRyaWdnZWQgdGhlIG9oIGhlbGwgbm8gYWZmZWN0IGFuZCBJIHNob3ZlZCBoaW0gb3ZlciB0aGUgbmVhcmJ5IHBhcmtpbmcgc3RhbGwgY3VyYiBpbnRvIHRoZSBncm91bmQuCkR1cmluZyBhIG1lZGlhbiBmb2xsb3cgdXAgb2YgMTAuNSB5IChJUVI6IDkuOSAxMC44IHkpLCA0NjIgZmF0YWwgYW5kIG5vbmZhdGFsIElIRCBldmVudHMgb2NjdXJyZWQuIApDZXR0ZSBpZGUgZGVtZXVyZSBwcmduYW50ZWRhbnMgbGEgcG9wdWxhdGlvbiwgaWwgeSBhIHVuZSBjb25uZXhpb24gZW50cmUgY2VsYSBldCBsZSBub21icmUgZGUgamV1bmVzIGRpcGxtcyBxdWkgcGFydGVudC4gRW4gcmFsaXQsIGlsIHkgYSB1bmUgZGlmZnJlbmNlIGltcG9ydGFudGUgZW50cmUgdW4gZGlwbG0gc2FvdWRpZW4gcXVpIHBhcnQgZmFpcmUgbGUgZGppaGFkLCBldCB1biB0cmFmaXF1YW50IGRlIGRyb2d1ZSBmcmFuYWlzIHF1aSAiY2hlcmNoZSB1biBzZW5zICBzYSB2aWUiLiAKVGhlIHJlYXNvbiBiZWluZyBpcyB0aGF0IGJ1cmllZCBjYWJsZXMgYXJlIG1lYW50IHRvIGxhc3Qgc2V2ZXJhbCBkZWNhZGVzLiBUaGUgbG9jYWwgdGVsZWNvbXMgYW5kIGNhYmxlIHByb3ZpZGVycyBoYXZlIG5vIGNvbnRyb2wgd2l0aCB0aGUgZ3JhZGUgYW5kIGxhbmRzY2FwaW5nIG9mIHBlb3BsZXMgbGF3bnMuIFRoZSBsaW5lcyBwbGFjZWQgZm9yIGEgaG91c2UgaW4gdGhlIDE5NzAgbWlnaHQgaGF2ZSBiZWVuIDIgZmVldCB1bmRlcmdyb3VuZCwgaG93ZXZlciBzb21lIGhvbWVvd25lciB5ZWFycyBhZnRlciB0aGUgbGluZXMgd2VyZSBidXJpZWQgZGVjaWRlcyB0byByZSBncmFkZSB0aGVpciBmcm9udCBsYXduIHRvIHByZXZlbnQgZmxvb2RpbmcuIApJdCBkZXBlbmRzIGEgbG90IG9uIHlvdXIgcGVyc29uYWwgc2l0dWF0aW9uLCBhbmQgd2hhdCB5b3UgdmFsdWUuIElNTyB0aGUgcGVvcGxlIHdpdGggdGhlIGxvd2VzdCB3YWdlcyBhcmUgYmV0dGVyIG9mZiBpbiBDYW5hZGEgZm9yIG1hbnkgcmVhc29ucyAoaGVhbHRoY2FyZSBiZWluZyBhbiBvYnZpb3VzIG9uZSksIG1lYW53aGlsZSBwZW9wbGUgd2l0aCBoaWdobHkgc3BlY2lhbGl6ZWQgY2FyZWVycyBhcmUgcHJvYmFibHkgYmV0dGVyIG9mZiBpbiB0aGUgVVMgc2luY2UgdGhleSBjYW4gYWZmb3JkIGFsbCB0aGUgY3JhenkgcHJpY2VzIHRoZXJlIEFORCBtYWtlIHdheSBtb3JlIG1vbmV5LiBGb3IgbW9zdCBvZiB0aGUgcGVvcGxlIGluIHRoZSBtaWRkbGUgdGhvdWdoIGl0IGlzIG5vdCBzbyBjbGVhci4gCkkgZ3Vlc3MgSSdsbCBqdXN0IHRha2UgdGhlIGRvd252b3RlcyBmb3IgdGhlIHF1ZXN0aW9uLiBIb3dldmVyLCBJIHRoaW5rIG15IGRvd252b3RlZCBjb21tZW50IHNlcnZlcyBhcyBhIGdvb2QgZXhhbXBsZSBmb3IgaGF2aW5nIG5lZ2F0aXZpdHkgaW1wb3NlZCBvbnRvIHdoYXQgaXMgZXNzZW50aWFsbHkgYSBuZXV0cmFsIHF1ZXN0aW9uLiAKSSBoYWQgdW5pZm9ybSBoYXRzIGF0IHNjaG9vbCBhbmQgYXQgR3VpZGVzLCBidXQgdGhlIGZpcnN0IGhhdCBJIGJvdWdodCBqdXN0IHRvIHdlYXIgKHdoaWNoIEkgbG9zdCBpbiAyMDAwIG9yIHNvICkgd2FzIGEgTGluZHNheSBUYXJ0YW4gSGF0IG1hZGUgYnkgIk1hZCBIYXR0ZXJzIENvLiIgSSBhbHNvIHJlYWxseSBsaWtlIHRoZSBjaGFyYWN0ZXIgb2YgdGhlIE1hZCBIYXR0ZXIgaW4gQWxpY2UgaW4gV29uZGVybGFuZC4gCldhbnQgdG8gc2hvcCBmb3IgdmludGFnZSwgYnV0IGRvbid0IGtub3cgd2hhdCB0byBsb29rIGZvcj8gS2VlcCBpbiBtaW5kIHRoZSBmb2xsb3dpbmcgdGlwcy4gRmlyc3QsbG9vayBmb3IgcXVhbGl0eS4gCkp1c3QgYSBzdHJhaWdodCBkZWFsLCB0aGUgZmlyc3QgY2FyZCB3aWxsIGJlIGFuIGFjZSA0IHRpbWVzIG91dCBvZiA1MiwgdGhlIHNlY29uZCBjYXJkIHdpbGwgYmUgYW4gYWNlIDMgdGltZXMgaW4gNTEuIApBIHdvb2RlbiBmYXJtaG91c2Uga2l0Y2hlbiB0YWJsZSBkb3VibGVkIGFzIGEgc2V0dGluZyBmb3IgbWVhbHMgYW5kIGEgcGxhY2UgdG8gc2V0IGhlciBjbGllbnRzISBBIGhvdCBzYXVuYSB3YXMgb2Z0ZW4gcGFydCBvZiB0aGUgdHJlYXRtZW50LiAKVGhleSB1bmRlcnN0YW5kIGVhY2ggb3RoZXIgb24gYSBmdW5kYW1lbnRhbCBsZXZlbCB0aGF0IG90aGVyIGdyb3VwcyBtaWdodCBub3QgdW5kZXJzdGFuZC4gCkluIDIwMDkgYSBzaG90Z3VuIHdpZWxkaW5nIG1hbiB3YXMuIApTYWxlcyBwcmljZXMgaGF2ZSBhcHByZWNpYXRlZCAyOC4yJSBvdmVyIHRoZSBsYXN0IDUgeWVhcnMgaW4gTmFzaHZpbGxlLiAKSSByZXBvcnRlZCBhbGwgb2YgdGhpcyBiYWNrIHRvIG15IGZyaWVuZHMsIHRoZSBwb3RlbnRpYWwgcGFyZW50cywgYW5kIHdlIHNwZW50IHRoZSByZXN0IG9mIHRoYXQgd2VlayBpbiBEZW52ZXIgZ29pbmcgb3ZlciBldmVyeXRoaW5nLiBXb3VsZCB0aGUgYmFieSBrbm93IHdobyB0aGVpciBiaXJ0aCBwYXJlbnRzIHdlcmU/IFdoYXQgc29ydCBvZiByZWxpZ2lvbiB3b3VsZCB0aGV5IGJlIHJhaXNlZCB3aXRoPyBTcGFua2luZ3M/IEVkdWNhdGlvbj8gTmFtZXM/IEFueXRoaW5nIEkgY291bGQgdGhpbmsgb2YuIEFuZCB3aGVuIEkgcmFuIG91dCBvZiBxdWVzdGlvbnMsIEkgY2FsbGVkIG15IG1vdGhlci4uIApIZSBoYXMgYSBjb250YWN0IGxpc3Qgb2Ygcm91Z2hseSA5MDAgd2hvIGhhdmUgcGxheWVkIGF0IHNvbWUgcG9pbnQgb3ZlciB0aGUgcGFzdCB5ZWFyLiBUaGUgZmFjdCB0aGF0IHRoZXJlIGlzIG5vIGVudHJ5IGZlZSBhdHRyYWN0cyBwbGF5ZXJzLiJQbGF5ZXJzIG5ldmVyIGhhdmUgdG8gcGF5LCIgc2F5cyBNYXh3ZWxsLCA1OC4gIkluIGZhY3QsIHRoZXkncmUgbm90IGFsbG93ZWQgdG8gcGF5IGF0IGEgYmFyLCBvdGhlcndpc2UgaXQgd291bGQgYmUgY29uc2lkZXJlZCBhIGNhc2luby4iQnV0IHBsYXllcnMgY2FuIGFuZCBkbyB3aW4uIApJIHN0dWRpZWQgYWJyb2FkIGluIEl0YWx5LCBhbmQgb25lIHBhcnRpY3VsYXIgZXZlbmluZyBpbiBhIHNtYWxsIHRvd24sIG15IGZyaWVuZHMgYW5kIEkgZ290IHZlcnkgdmVyeSByb3dkeSBhdCBhIGhvdGVsLiBUaGVyZSB3YXMgZHJpbmtpbmcsIHNvbWUgY3Jvc3MgcG9sbGluYXRpb24gd2l0aCBhIGdyb3VwIG9mIENhbmFkaWFuIGFyY2hpdGVjdHVyZSBzdHVkZW50cywgYW5kIHNvbWUgYnJpZWYgZmlzdGljdWZmcyB3aXRoIGEgYmFydGVuZGVyICh1bHRpbWF0ZWx5IHJlc29sdmVkIGFtaWNhYmx5KS4KQmV0dGVyIHRoaW5raW5nIHJlbGVhc2VzIGNoZW1pY2FscyB0aGF0IGhlbHAgd2l0aCBkaWdlc3Rpb24sIGV1cGhvcmlhLCByZWxheGF0aW9uLCBhbmQgb3ZlcmFsbCB3ZWxsIGJlaW5nLiBUaG91Z2h0cyBhcmUgVGhpbmdzLiAoTW9yZSBvbiB0aGF0IGJlbG93KQpZb3UgY2FuIG9ubHkgcG9saXNoIGEgdHVyZCBzbyBtdWNoLiBUb29rIGEgZnVsbCBkYXkgICBub3RoaW5nIHdhcyBsYWJlbGVkIGVpdGhlci4gTWFueSBzbWFsbGVyIGluc3RhbGxlcnMgZmluZCBpdCBjb3N0bHkgdG8gc3RvY2sgYW5kIHB1cmNoYXNlIG1hbnkgY29sb3JzIG9mIGxhYmVscyBpbiBvcmRlciB0byBtZWV0IGEgcmVxdWlyZW1lbnQgdGhhdCBtaWdodCBub3QgZml0IHRoZWlyIHBhcnRpY3VsYXIgc2l0dWF0aW9uLiAKSXQgY2VydGFpbmx5IGEgZ29vZCBpZGVhIHRvIHRha2UgdGhlIGFwcHJvYWNoIGNvbnNjaW91c2x5LiAKTXkgdGhyb2F0IHdhcyBzbyBzb3JlIHRoaXMgbW9ybmluZyBpIGNvdWxkIGJhcmVseSB0YWxrLiBhbmQgd2Ugd2VyZSBzY2hlZHVsZWQgdG8gZ28gdG8gYSByZWdpc3RlcnkgZm9yIHNvbWUgbGFzdCBmb3JtcyBhYm91dCB0aGUgbmV3IGhvdXNlLiBtb20gaGFkIHRvIGRvIG1vc3Qgb2YgdGhlIHRhbGtpbmcuCkFsbCBjb21tZW50cyB3aWxsIGJlIHJldmlld2VkIGJ5IG9uZSBvciBtb3JlIG1vZGVyYXRvcnMgYmVmb3JlIGJlaW5nIHBvc3RlZCB0byB0aGUgc2l0ZS4gVGhpcyBzaG91bGQgb25seSB0YWtlIGEgZmV3IG1vbWVudHMuIFRyZWF0IG90aGVycyBhcyB5b3Ugd2lzaCB0byBiZSB0cmVhdGVkIENyaXRpY2l6ZSBpZGVhcywgbm90IHBlb3BsZSBTdGF5IG9uIHRvcGljIEF2b2lkIHRoZSB1c2Ugb2YgdG94aWMgYW5kIG9mZmVuc2l2ZSBsYW5ndWFnZSBGbGFnIGJhZCBiZWhhdmlvdXIgQ29tbWVudHMgdGhhdCB2aW9sYXRlIG91ciBjb21tdW5pdHkgZ3VpZGVsaW5lcyB3aWxsIGJlIHJlbW92ZWQuIENvbW1lbnRlcnMgd2hvIHJlcGVhdGVkbHkgdmlvbGF0ZSBjb21tdW5pdHkgZ3VpZGVsaW5lcyBtYXkgYmUgc3VzcGVuZGVkLCBjYXVzaW5nIHRoZW0gdG8gdGVtcG9yYXJpbHkgbG9zZSB0aGVpciBhYmlsaXR5IHRvIGVuZ2FnZSB3aXRoIGNvbW1lbnRzLgpJZiB0aGV5IHdpbiwgZm9yIGV4YW1wbGUgNDIgc2VhdHMsIGFuZCBhbm90aGVyIHBhcnR5IGhhcyAxMiBzZWF0cywgdGhleSB3aWxsIHRhbGsgaXQgb3V0IGFuZCBuZWdvdGlhdGUgd2l0aCBlYWNoIG90aGVyLiBJZiB0aGV5IGNhbiBoYXNoIGl0IG91dCwgdGhlbiB0aGV5IHdpbGwgZm9ybSBhIGNvYWxpdGlvbiAoNDIrMTI+NTM9bWFqb3JpdHkpIHdoaWNoIHdpbGwgYWdhaW4gZWxlY3QgdGhlIG5ldyBQTS54VnN3ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnb0kgZG9uIGNhcmUuIApXaGVuIHlvdSBhcmUgbG9va2luZyBmb3IgdGhlIGJlc3QgcHJhY3RpdGlvbmVyIHRvIG1lZXQgeW91ciBlbW90aW9uYWwsIHBoeXNpY2FsIGFuZCBzcGlyaXR1YWwgbmVlZHMgeW91IG5lZWQgdG8gZG8geW91ciBob21ld29yay4gSnVzdCBhcyB5b3Ugd291bGQgY2hlY2sgdGhlIGNyZWRlbnRpYWxzIG9mIHlvdXIgdHJhZGl0aW9uYWwgb3IgbmF0dXJvcGF0aGljIHBoeXNpY2lhbiwgZGVudGlzdCwgb3IgY2hpcm9wcmFjdG9yIHNvIHlvdSBjYW4gYmUgY29uZmlkZW50IGluIHRoZW0sIHlvdSBzaG91bGQgbGVhcm4gYXMgbXVjaCBhcyB5b3UgY2FuIGFib3V0IHlvdXIgbWFzc2FnZSB0aGVyYXBpc3Qgb3IgcHJhY3RpdGlvbmVyLiBBIGZldyBxdWVzdGlvbnMgdG8gYXNrIGluY2x1ZGU6CllvdSB3aWxsIGVuam95IG5vdCBqdXN0IHdoYXQgSSBjYWxsIGEgInN0YXRpYyBhd2FyZW5lc3MiIG9yIGEgdGhlb3JldGljYWwga25vd2xlZGdlIG9mIHlvdXIgbWFya2V0cGxhY2UsIGJ1dCBob3cgdG8gZG8gc29tZXRoaW5nIHZlcnkgY29vbCBhbmQgcHJvZml0YWJsZSB3aXRoIHlvdXIgcHJvc3BlY3RzIGFuZCBjbGllbnRzLiAKV29yayB3YXNuIG9ubHkgaG93IHdlIHBhaWQgdGhlIGZhbWlseSBiaWxscywgYnV0IGhvdyB3ZSB1bmRlcndyb3RlIG91ciBpbnN0aXR1dGlvbnM6IGhvc3BpdGFscywgc2Nob29scywgc3BvcnRzIHZlbnVlcywgZW1lcmdlbmN5IHNlcnZpY2VzLCBsb2NhbCBnb3Zlcm5tZW50IGFuZCBhIGhvc3Qgb2Ygb3RoZXIgYW1lbml0aWVzIHRoYXQgZ3JlYXNlZCB0aGUgd2hlZWxzIG9mIG91ciBldmVyeWRheSBjb2xsZWN0aXZlIGxpZmUgdG9nZXRoZXIuLiAKVXNlIGEgdGhpY2ssIHBsYXN0aWMgc2hvd2VyIGNhcCB0byBwcmV2ZW50IHN0ZWFtIGZyb20gZnJpenppbmcgdXAgeW91ciBoYWlyIGluIHRoZSBzaG93ZXIuCk9mIHRoZXNlIGFzIGludmVzdG1lbnRzIHRoYXQgZW5hYmxlIGEgcHJvZHVjdGlvbiBydW4gdGhhdCBiZWdpbnMgaW4gdGhlIGVhcmx5IDIwMjBzIGFuZCBjb250aW51ZXMgZm9yIGRlY2FkZXMsIGhlIHNhaWQuClR1IHZvaXMgcGFzIGxlIHJhcHBvcnQgYXZlYyBsZSBmYWl0IGQgZGUgbWFzc2FjcmVyIGRlcyBtYW5pZmVzdGFudHMgKGRhbnMgbGV1ciB0b3RhbGl0IHBhY2lmaXF1ZXMsIHNpIGplIG5lIG1lIHRyb21wZSBwYXMpIGV0IGxhIGRzZXNjYWxhZGUgPyBJbCBmYXV0IGFycnRlciBsYSBtYXV2YWlzZSBmb2kuClRoZW4gd2UgaGFkIHRvIHdhaXQgYXJvdW5kIGZvciBhIG5ldyBidXMuIApBZnRlciBteSBjb25mb3JtYXRpb24gc2hlIGNhbGxlZCBsYWRpZXMsIGFuZCA0IGxhZGllcyBhcHBlYXJlZCBmcm9tIGluc2lkZSwgZmlyc3QgSSB3YXMgZGlzYXBwb2ludGVkIGFzIG9ubHkgNCBsYWRpZXMgYXZhaWxhYmxlIGZvciBjaG9pY2UgYW5kIG5vbmUgb2YgdGhlbSB3YXMgYXR0cmFjdGl2ZSwgSSB3YXMgZXZlbiBjb25zaWRlcmluZyBsZWF2aW5nIHRoYXQgcGxhY2UgYW5kIHRyeSBzb21ld2hlcmUgZWxzZSBidXQgbWFtYXNhbiBtaWdodCBndWVzc2VkIG15IHRob3VnaHRzIGFuZCBzaGUgY2FsbGVkICdLb3knLCBhcyBzb29uIGFzICdLb3knIGFwcGVhcmVkIEkgZm91bmQgaGVyIHBlcmZlY3QgYXMgcGVyIG15IGNob2ljZSwgc2hvcnQgYnV0IHN3ZWV0LCBwcmV0dHkgc21pbGluZyBmYWNlLCBubyBmYXQgb24gYm9keSwgSSBpbnN0YW50bHkgc2VsZWN0ZWQgaGVyIGFuZCBwcm9jZWVkIGZvciBwYXltZW50LCB0aGUgcHJpY2Ugd2FzIHByZXR0eSBzdGFuZGFyZCAyMzAwIGJhaHQgZm9yIDEuNSBocnMuIG9mIE51cnUgZ2VsIG1hc3NhZ2UsIGluY2x1ZGluZyBmdWxsIHNlcnZpY2UuCiJJIGp1c3QgZXhjaXRlZCB0byBnbyBvbiB0b3VyIG5vdywgc3RhcnRpbmcgbGF0ZXIgdGhpcyBtb250aCwgYW5kIEkgYWxyZWFkeSBsb29raW5nIGZvcndhcmQgdG8gY29taW5nIGJhY2sgbmV4dCB5ZWFyIGZvciB0aGUgY2hhbmNlIHRvIHJldGFpbiBteSB0aXRsZS4gClN0YXJ0aW5nIGF0IGhvbWUgZ2FtZXMgd2l0aCB5b3VyIGZyaWVuZHMsIG9udG8gbGl2ZSBjYXNpbm8gMS8yLCAyLzMsIDMvNSwgNS8xMC4gCk5vLiBUaGV5IHVuZXF1aXZvY2FsbHkgY2FuIG5vdCBrbm93aW5nbHkgcGVybWl0IGEgcGF0aWVudCBpbiByZXNpZGVuY2UgdW5kZXIgbWVkaWNhbCB0cmVhdG1lbnQgImRvIHdoYXQgaGUgd2FudHMuIgpJc3N1ZXMgb3IgdGhhdCB0aGV5IGFmZmVjdCBkaWZmZXJlbnQgcGVvcGxlIGluIGRpZmZlcmVudCB3YXlzIGRvZXNuIG9mZmVuZCBtZS4gUmlnaHQgd2luZ2VycyB1c2luZyBjb25jZXJuIHRyb2xsaW5nIGFuZCB0cnlpbmcgdG8ganVzdGlmeSBtYWtpbmcgdHJhbnMgcGVvcGxlIHVuYWJsZSB0byBjaGFuZ2UgdGhlaXIgSUQgd2l0aCAiZG9jdG9ycyBuZWVkIHRvIGtub3chIiBvZmZlbmRzIG1lLiAKSXQgcmFpc2VzIHRoZSBjbGllbnQgYXdhcmVuZXNzLCB3aGljaCB3aWxsIGhlbHAgdGhlbSBkZXZlbG9wIGJldHRlciBjb3Bpbmcgc3RyYXRlZ2llcy4gClJlc2lkZW50cyBPZiBOb3J0aGVhc3QgT2hpbyBXaWxsIE9mIENvdXJzZSBSZWNvZ25pemUgVGhlIENhc2lubz9zIEhvbWUgQXMgVGhlIEZvcm1lciBBYm9kZSBPZiBUaGUgSGlzdG9yaWMgSGlnYmVlIENvbXBhbnkgRG93bnRvd24gRGVwYXJ0bWVudCBTdG9yZS4gCkRpcmVjdCBoZWFsdGggY29zdHMgbWF5IGJlIGxlc3Mgb2YgYSByaXNrIGZvciBhIENhbmFkaWFuIHNhdmVyIHRoYW4gYW4gQW1lcmljYW4gaW4gdGhpcyBzdHVkeSBnaXZlbiBvdXIgdW5pdmVyc2FsIGhlYWx0aCBjYXJlIHN5c3RlbSwgYnV0IGFuIGluZGlyZWN0IGhlYWx0aCBjb3N0IGZvciBDYW5hZGlhbnMgY291bGQgaW5jbHVkZSB1bmVtcGxveW1lbnQgb3IgdW5kZXJlbXBsb3ltZW50IGlmIGEgaGVhbHRoIGlzc3VlIGluaGliaXRzIHdvcmsuIFRoaXMgZW1waGFzaXplcyB0aGUgaW1wb3J0YW5jZSBvZiBnb29kIGRpc2FiaWxpdHkgaW5zdXJhbmNlLCBhIHR5cGUgb2YgaW5zdXJhbmNlIGNvdmVyYWdlIHRoYXQgaXMgb2Z0ZW4gb3Zlcmxvb2tlZC4KNC5Ob3YuIDcgZWxlY3Rpb24gYmFsbG90IHNldFRoZSBOb3ZlbWJlciA3IGVsZWN0aW9uIGJhbGxvdCBoYXMgYmVlbiBzZXQgd2l0aCBzb21lIG9mIHRoZSBwcmltYXJ5IHJhY2VzIGJlaW5nIHJlcGVhdGVkIGZvciBIdW1ib2xkdCBDb3VudHkgU3VwZXJ2aXNvciBzZWF0cy5DYXJsIE1hdHRlcywgYSBSZXB1YmxpY2FuLCB3aWxsIGFnYWluIGJlIGNoYWxsZW5nZWQgYnkgRG95bGUgRGFybmFsbC4gCkhlcmVueWExOTg5ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KTWFueSBpbiBNYW5pbGEgZmVhcmVkIEZyaWRheSdzIGF0dGFjayB3YXMgbGlua2VkIHRvIG9uZ29pbmcgYmF0dGxlcyB3aXRoIG1pbGl0YW50cyBhbGlnbmVkIHdpdGggdGhlIElzbGFtaWMgU3RhdGUgZ3JvdXAgaW4gdGhlIHNvdXRoZXJuIFBoaWxpcHBpbmUgY2l0eSBvZiBNYXJhd2kuIApDJ2VzdCB1bmUgdHJhbnNtaXNzaW9uIHJhcmUgZXQgdW5pcXVlIGVuIG9zdG9wYXRoaWUgcXVpIHRvdWNoZSBhdSBzYXZvaXIgdHJlLCBxdWkgcydhZHJlc3NlIGF1eCB0YXRzIGQnbWVzIHRpc3N1bGFpcmVzLiBDZXR0ZSBmb3JtYXRpb24gbSdhIHJlbmR1ZSBiZWF1Y291cCBwbHVzICBsJ2Fpc2UgYXZlYyBsZSB0cmF2YWlsIGludHJhIHBlbHZpZW4gZXQgbGEgZGltZW5zaW9uIHBzeWNobyBjb3Jwb3JlbGxlIGVuIGducmFsZS4gClRoaXMgaXMgbm90IHBlcmZvcm1pbmcgeW91ciBwYWluIGZvciBvdGhlciBwZW9wbGUuIApUaGV5IHdlcmUgc3RvcHBlZCBhdCBhIGxpZ2h0IGFuZCBhIGR1ZGUgcGxvd2VkIGludG8gaGltIGdvaW5nIDU1LiBJdCB3YXMgYSAzIGNhciBwaWxlIHVwLiBUb3RhbGVkIG91ciBjYXIgYW5kIHRoZSBjYXIgaW4gZnJvbnQgb2YgaGltLiAKVGhleSBhcmUgbmV3LCB0aGV5IGFyZSBiZWF1dGlmdWwsIHRoZXkgYXJlIGJlc3Qgb2YgYWxsLCB0aGV5IGFyZSB2ZXJ5IGF0dHJhY3RpdmVseSBwcmljZWQuIApJbiB0aHJlZSB5ZWFycywgd2hlbiB0aGUga2lkcyBoYXZlIGZpbmlzaGVkIHVuaXZlcnNpdHksIHRoaXMgbW9uZXkgY2FuIGdvIHRvIHJldGlyZW1lbnQgc2F2aW5ncywgRWluYXJzb24gYWR2aXNlcy4gVGhvc2Ugc2F2aW5ncyBjYW4gYmUgYWRkZWQgdG8gdGhlaXIgcHJlc2VudCBjYXNoIGJhbGFuY2UsICQ2OSw1OTQuIEZvciBub3csIGlmIHRoZXkgcmVzZXJ2ZSAkMzQsMDAwIGZvciB0aGUgcmVtYWluaW5nIHVuaXZlcnNpdHkgZXhwZW5zZSwgdGhleSB3aWxsIGhhdmUgJDM1LDU5NCBmb3IgbW9ydGdhZ2UgcGF5ZG93bi4gCjEpIEkgdGhvdWdodCBKb2huIEthc2ljaCB3YXMgdGhlIGJlc3Qgb2YgdGhlIGhvcnJpYmxlIGJ1bmNoIHJ1bm5pbmcgZm9yIHByZXNpZGVudCBpbiAyMDE2LCBhbmQgaGUgYWN0dWFsbHkgc2FpZCBzb21ldGhpbmcgdW5pdGluZyBhbmQgcHJlc2lkZW50aWFsIGluIGEgTmV3IEhhbXBzaGlyZSB0b3duIGhhbGwgSSB3YXRjaGVkLiBCZWNhdXNlIG9mIFJlcHVibGljYW4gZmVhciBtb25nZXJpbmcgYnkgb3RoZXIgY2FuZGlkYXRlcywgb25lIHdvbWFuIGluIHRoZSBhdWRpZW5jZSB3YXMgY3J5aW5nICJ0aGlzIGNvdW50cnkgaXMgaW4gdGhlIG1vc3QgZGFuZ2VyIGl0J3MgZXZlciBiZWVuISIgSGUgY2FsbWx5IHRvbGQgaGVyICJubywgaXQncyBub3QsIG1hJ2FtLiBJIGxpdmVkIHRocm91Z2ggdGhlIEN1YmFuIG1pc3NpbGUgY3Jpc2lzLiBXZSBhcmUgbm90IGV2ZW4gY2xvc2UgdG8gdGhlIHdvcnN0IG5vdy4iIEJ1dCBSZXB1YmxpY2FucyB2b3RlcnMgY2hvc2UgVHJ1bXAgb3ZlciBoaW0gYmVjYXVzZSB0aGV5IHdhbnQgZmVhciBhbmQgaHlzdGVyaWEgb3ZlciBjYWxtIHJhdGlvbmFsIHByZXNpZGVudGlhbCB0aG91Z2h0LgpUaGUgaXNsYW5kIG9mIFN2ZXRpIFN0ZWZhbiB3aWxsIGFsc28gb2ZmZXIgc3BhIHRyZWF0bWVudCBzdWl0ZXMgZmVhdHVyaW5nIGEgcmFuZ2Ugb2Ygc2lnbmF0dXJlIEFtYW4gU3BhIHRoZXJhcGllcy4gRmFydGhlciBhZmllbGQsIEFtYW4gU3ZldGkgU3RlZmFuIHByb3ZpZGVzIGd1ZXN0cyB3aXRoIHBlcnNvbmFsaXplZCBndWlkZWQgZXhjdXJzaW9ucyB0byBuYXR1cmFsIGFuZCBjdWx0dXJhbCBhdHRyYWN0aW9ucyBpbiB0aGUgYXJlYSAgIGluY2x1ZGluZyBib2F0aW5nIG9uIHRoZSBBZHJpYXRpYywgdmlzaXRpbmcgdGhlIHRvd24gb2YgQnVkdmEsIHRoZSByb3lhbCBjYXBpdGFsIG9mIENldGluamUsIGFuZCB0aGUgYmVhdXRpZnVsbHkgcHJlc2VydmVkIGJhcm9xdWUgY2l0eSBvZiBQZXJhc3QsIGRpc2NvdmVyaW5nIHRoZSBwZWFjZWZ1bCBTa2FkYXIgTGFrZSBhbmQgZXhwbG9yaW5nIHRoZSBCYXkgb2YgS290b3IsIGEgVU5FU0NPIFdvcmxkIEhlcml0YWdlIFNpdGUuLiAKSXQgYWxsb3dzIHlvdSB0byBnbyBmYXN0ZXIsIHRha2UgY29zdCBvdXQgb2YgdGhlIHN5c3RlbSBhbmQgZ2V0IG91ciBicmFuZHMgb3BlcmF0aW5nIGxpa2UgYSBzdGFydHVwLCBhbmQgdGhhdCdzIGEgbG90IG9mIGZ1bi4iLiAKSGUgb2ZmZXJlZCB0byBzaG93IGhlciBob3cgdG8gcGxheSBjcmFwcy4gCkkgZ290IHlvdS4gClllcy4uIAoxOCsuICQzMC4gClJ1c3NpYSwgaG93ZXZlciwgaW4gMjAwNiBwcm9oaWJpdGVkIGFueSBraW5kIG9mIHJlbW90ZSBnYW1ibGluZy4uIApTaW5jZSB0aGlzIGlzIGEgZ2lmdCBhbmQgYWxsLCB5b3UgY2FuIHBheSB0aGUgJDIwIHN0eWxpbmcgZmVlIGZvciBoaW0sIHRob3VnaCB0aGUga25vd2xlZGdlIGhlJ2xsIG5ldmVyIGhhdmUgdG8gc2hvcCBhZ2FpbiBtYXkgYmUgZW5vdWdoLi4gCkdhbWJsaW5nIHJlc2VhcmNoZXIgQ2hhcmxlcyBMaXZpbmdzdG9uZSBmcm9tIE1vbmFzaCBVbml2ZXJzaXR5IHNhaWQgQXVndXN0IHdhcyBvZnRlbiBhIGhpZ2ggcmV2ZW51ZSBtb250aCBmb3Igb3BlcmF0b3JzLCB3aXRoIHRyZW5kcyBzaG93aW5nIGEgc3Bpa2UgdG93YXJkcyB0aGUgbWlkZGxlIG9mIHRoZSB5ZWFyLCBiZWZvcmUgc3BlbmRpbmcgZHJvcHMgYXQgdGhlIHN0YXJ0IG9mIHN1bW1lci4KSSBzb3JyeSB0aGF0IHlvdSBmZWVsIGxpa2UgeW91IGFyZW4gYXR0cmFjdGl2ZSwgYW5kIGJlZm9yZSB0aGUgYWdlIG9mIDIwIGEgbG90IG9mIHBlb3BsZSBmZWVsIHRoZSBzYW1lIHdheS4gQnV0IGFkdWx0cyBERUZJTklURUxZIGNoYW5nZSBpbiBsb29rcywgYW5kIHNvb29vb28gbWFueSBvZiB0aGVtIGJlY29tZSBzaWduaWZpY2FudGx5IG1vcmUgYXR0cmFjdGl2ZSB3aXRoIGFnZS4KWW91ciBpZGVhIG9uIG1vdmluZyBob21lcyBpcyBncmVhdCwgYXMgbG9uZyBhcyB5b3UgY2FuIHRha2UgdGhlIGFkZGVkIHByZXNzdXJlLiBBIGxvdCBvZiBwZW9wbGUgc2F5IG5vdCB0byBtZXNzIHcvIG1vdmluZyBhIG1vYmlsZSBvbiB5b3VyIGZpcnN0IG9uZS4gSSBhZ3JlZSB3LyB3aGF0IHRoZXkgc2F5IGFzIGl0IHNlZW1zIGxpa2UgYSB0b3VnaCB3YXkgdG8gbW92ZSBpbnRvIHRoZSBidXNpbmVzcy4gClR3byBMYXMgVmVnYXMgbWFzc2FnZSBwYXJsb3JzIGxpbmtlZCB0byBhbGxlZ2VkIHByb3N0aXR1dGlvbiByaW5nCkFob3JhLiBFbCBsdGltbyBpbnZlbnRvIGRlIGxvcyBjYXNpbm9zLCBsYWNpZWdhIGdyYW5kZSBhbnRlLCBhbGdvIG1zIGluanVzdG8gZW4gZWwgcG9rZXIgbm8gZXhpc3RlLCBsYSBjaWVnYSBncmFuZGUgcG9uZSBsYSBjaWVnYSBncmFuZGUgeSBlbCBhbnRlIGRlIHRvZG9zIGxvcyBkZW1zIGp1Z2Fkb3Jlcy4gCkhvdyBIZWFydCBEaXNlYXNlIFdvcmtzClVwb24gcmVjZWl2aW5nIHRoZSBjYXJkcywgdGhlIHBsYXllcnMgY2FuIGZvbGQuIApTYWlkIHRoZSBzaXR1YXRpb24gaGFzIGJlZW4gdmVyeSBkaWZmaWN1bHQgZm9yIHRoZWlyIDkxIHllYXIgb2xkIG1vdGhlciwgd2hvIHRvIGRlYWwgd2l0aCBoZXIgaHVzYmFuZCB3aG8gd2FzIGEgYmFuayByb2JiZXIgYW5kIG5vdyB0aGlzLiAKVHdvIHRyaWJlcyB0aGF0IGFyZSBjb25zaWRlcmVkIHBybyBwb2tlciByZWNlbnRseSB3cm90ZSBhIGxldHRlciB0byBTdGF0ZSBBc3NlbWJseW1hbiBBZGFtIEdyYXksIHRoZSBsYXdtYWtlciBzcGVhcmhlYWRpbmcgYm90aCBpbnRlcm5ldCBwb2tlciBhbmQgREZTIGxlZ2lzbGF0aW9uLCB0byBleHByZXNzIHRoZWlyIGNvbmNlcm4gdGhhdCBEYWlseSBGYW50YXN5IGlzIGlsbGVnYWwgaW4gQ2FsaWZvcm5pYS5TZXZlcmFsIHBva2VyIGluc2lkZXJzIGhhdmUgc3VnZ2VzdGVkIHRoYXQgdGhlIGxldHRlciBpcyBhIHB1YmxpYyBpbmRpY2F0aW9uIHRoYXQgdGhvc2UgdHJpYmVzIGludGVuZCB0byB1c2UgREZTIGFzIGxldmVyYWdlLCBob3BpbmcgdGhhdCBieSBwYXNzaW5nIGJvdGggcG9rZXIgYW5kIERGUyBsZWdpc2xhdGlvbiwgZWFjaCBwYXJ0eSB3aWxsIGZpbmFsbHkgZmVlbCB0aGV5J3JlIGdldHRpbmcgc29tZXRoaW5nIG91dCBvZiBhIGRlYWwuUG90ZW50aWFsbHksIHRoZSBiaWdnZXN0IGh1cmRsZSByZW1haW5zIHRoZSByb2xlIG9mIENhbGlmb3JuaWEncyBob3JzZSByYWNpbmcgaW5kdXN0cnkuIApLaW5nczogU2FjcmFtZW50byBnb3Qgb2ZmIHRvIGEgZmFzdCBzdGFydCwgbWFraW5nIDE0IG9mIDIyIHNob3RzIGluIHRoZSBmaXJzdCBxdWFydGVyIGZvciBhIHNpeCBwb2ludCBsZWFkLiBCdXQgdGhlIEtpbmdzIHdlbnQganVzdCA2IG9mIDIyIGluIHRoZSBzZWNvbmQgYW5kIHdlcmUgdGllZCA0OSBhbGwgYXQgaGFsZnRpbWUuICBTYWNyYW1lbnRvIHJvb2tpZSBNYXJ2aW4gQmFnbGV5IElJSSByZW1haW5zIHNpZGVsaW5lZCBhZnRlciBzcHJhaW5pbmcgaGlzIGxlZnQga25lZSBsYXN0IFdlZG5lc2RheS4gS2luZ3MgY29hY2ggRGF2ZSBKb2VyZ2VyIHNhaWQgQmFnbGV5IGlzIHByb2dyZXNzaW5nIGluIGhpcyByZWhhYiBidXQgdGhlcmUgaXMgbm8gdGltZXRhYmxlIGZvciBoaXMgcmV0dXJuLgpPbmNlIHlvdSd2ZSBkZWNpZGVkIGhvdyBtdWNoIHRvIGJ1ZGdldCBmb3IgdGhlIGRheSwgcGxheSBhdCBhIGxldmVsIGFwcHJvcHJpYXRlIHRvIHlvdXIgYmFua3JvbGwuIElmIHlvdSBoYXZlICQyMCBmb3IgYSBjb3VwbGUgb2YgaG91cnMgaW4gdGhlIGNhc2lubywgeW91IGNhbid0IGFmZm9yZCB0byBwbGF5ICQxIHNsb3RzIG9yICQ1IGJsYWNramFjay4gClRoYXQgYXBwZWFycyB0byBiZSB0aGUgcm9vdCBvZiB0aGUgcHJvYmxlbS4gTXkgcmVjb21tZW5kYXRpb24gaXMgdG8gaW1tZWRpYXRlbHkgY29ycmVjdCB0aGUgc3RyYXRhIHBsYW4gdW5pdCBlbnRpdGxlbWVudCBmb3IgdGhpcyBmaXNjYWwgeWVhciBhcyBpdCByZWxhdGVzIHRvIGVhY2ggc3RyYXRhIGxvdCBhbmQgdW5pdCBudW1iZXIgYW5kIHRhbGsgdG8geW91ciBsYXd5ZXIgYWJvdXQgdGhlIHBvc3NpYmxlIGNvbnNlcXVlbmNlcyBhbmQgcmVtZWRpZXMuIApDZXJ0ZXMgaWwgc2UgbGl0IGZhY2lsZW1lbnQgcG91ciBxdWkgcG9zc2RlIGxlIG1pbmltdW0gZGUgYmFnYWdlIHRlY2huaXF1ZSBtYWlzIHBvdXIgeSByZXRyb3V2ZXIgdW4gcmVuc2VpZ25lbWVudCAgbGEgcmVsZWN0dXJlLCBvbiBlc3QgbGl0dHJhbGVtZW50IG5veS4gQydlc3QgZG9tbWFnZSBjYXIgc2kgaidhdmFpcyB0IGwnZGl0ZXVyIGonYXVyYWlzIGV4aWcgdW5lIHJhcnRpY3VsYXRpb24gZXQgdW4gbWVpbGxldXIgYmFsaXNhZ2UuQ2UgcXVpIG0ndG9ubmUgYmVhdWNvdXAgYydlc3QgcXVlIGxlIERyIEhvcm93aXR6IG5lIHNlbWJsZSBwYXMgYXZvaXIgdm9xdSB1bmUgc2V1bGUgZm9pcyBsJ2FyZ2VudCBjb2xsb2RhbC5TaSBjZSBsaXZyZSBlc3QgcGFzc2lvbm5hbnQsIGxlcyBtZGVjaW5zIHF1aSB2b3Vkcm9udCBzJ2VuIHNlcnZpciBkZXZyb250IHMnYWNjcm9jaGVyIGF1eCBicmFuY2hlcy4gCiJFdXJvcGUgaXMgZG9pbmcgYmV0dGVyIG9uIHRoaXMgZm9yIHN1cmUgd2l0aCB2YWx1aW5nIHZhY2F0aW9uLCByZXNwaXRlLCB3ZWVrZW5kcywiIHNheXMgQmVsYW5nZXIsIGEgcG9zdCBkb2MgcmVzZWFyY2hlciBhdCB0aGUgVW5pdmVyc2l0eSBvZiBDYWxnYXJ5IHdob3NlIHdvcmsgaW5jbHVkZXMgbG9va2luZyBhdCBlZmZlY3RpdmUgYnJlYWsgc3RyYXRlZ2llcy4KV2UgYXJlIGFsbCBzb21ld2hlcmUgb24gYSBsZWFybmluZyBjdXJ2ZSwgaW5jbHVkaW5nIHlvdS4uIApDaGlwIHN0YWNrIHdhcyAzMDAsMDAwLiAKSSBkaWRuIHJlcGVhdCBwcm9wYWdhbmRhLCBJIGp1c3QgdG9vayB3aGF0IEhpbGFyeSBDbGludG9uIGFjdHVhbGx5LCBsaXRlcmFsbHkgc2FpZCwgYXMgeW91IGNhbiBzZWUgaW4gbXkgZWFybGllciByZXBseSwgc2hlIHNhaWQgc2hlIHdhbnRlZCB0byBmb3JjZSBtaWxpdGFyeSBhY3Rpb24gYWdhaW5zdCBSdXNzaWEsIHdpdGggcmVnYXJkcyB0byB0aGUgc2l0dWF0aW9uIGluIEFsZXBwbywgbWFraW5nIFN5cmlhIGEgbm8gZmx5IHpvbmUuIFRoaXMgaXNuIHByb3BhZ2FuZGEsIHNoZSBsaXRlcmFsbHkgc2FpZCB0aGF0LCBJIHNhaWQgbm90aGluZyBhYm91dCBXV0lJSSBvciB3aGF0IGhlciBwbGFucyBhcmUsIG9yIGFueXRoaW5nIGFib3V0IHRoZSBtZWRpYSwganVzdCB0aGF0IHNoZSBzdGF0ZWQgaGVyc2VsZiB0aGF0IHNoZSB3YW50cyB0byBnbyB0byB3YXIgd2l0aCBSdXNzaWEuIEJ1dCBpcyB5b3VyIHBvc2l0aW9uIHRoYXQgd2Ugc2hvdWxkIGFsbG93IFJ1c3NpYSBkbyBkbyB3aGF0IGl0IHdhbnRzPyBTaGFsbCBpdCBjb250aW51ZSB0byBib21iIGNpdmlsaWFucyBpbiBTeXJpYT8gU2hhbGwgaXQgY29udGludWUgdG8gYW5uZXggY291bnRyaWVzPwpMZWFuIGlzIGFsc28gcmVwb3J0ZWQgYXMgc2F5aW5nIHRoYXQgQ2FybmZvcnRoIHdhcyBjaG9zZW4gYmVjYXVzZSwgIlRoZSB3YXIgd2FzIHN0aWxsIG9uIGFuZCB0aGUgcmFpbHdheSBwZW9wbGUgc2FpZCAnIHRoZXJlIG1heSBiZSBhbiBhaXIgcmFpZCBhdCBhbnkgdGltZSBhbmQgeW91J2xsIGhhdmUgdG8gcHV0IG91dCB0aGUgbGlnaHRzIGluIHRoYXQgcmVtb3RlIHBhcnQgdXAgaW4gdGhlIE5vcnRoLiBXZSdsbCBrbm93IHdoZW4gdGhlIHBsYW5lcyBhcmUgY29taW5nJy4gV2Ugd2VyZSBhIGJsYXplIG9mIGxpZ2h0cyBmcm9tIGZpbG1pbmcuIi4gCkluIHRoZSBraW5kZXN0IGFuZCBtb3N0IG5vbiBqdWRnbWVudGFsIHdheSBwb3NzaWJsZSwgSSdtIGRldGVjdGluZyBlbnRpdGxlbWVudCwgZm9yY2VkIGludGVncmF0aW9uLCBhbmQgdGhlIGludmFzaW9uIG9mIHRyYWRpdGlvbmFsbHkgbWFsZSBzcGFjZXMuIEkgdW5kZXJzdGFuZCB0aGF0IHdlIGFyZSBpbiB0aGUgMjFzdCBjZW50dXJ5IGFuZCBhcyBhIHJlc3VsdCBmb3J3YXJkIHByb2dyZXNzIGlzIG5lY2Vzc2FyeS4gTW9kZXJuIHdvbWVuIGNvbnNpc3RlbnRseSBzcGVhayBhYm91dCBzYWZlIHNwYWNlcyBmb3IgZmVtYWxlcy4gV2hlbiBtZW4gc3BlYWsgYWJvdXQgc2FmZSBzcGFjZXMgZm9yIG1hbGVzLCB0aGV5IGFyZSBvZnRlbiBtZXQgd2l0aCB0aGUgcmVzcG9uc2Ugb2YsICJ0aGUgd29ybGQgaXMgYSBzYWZlIHNwYWNlIGZvciBtZW4sIHRoZSBwYXRyaWFyY2h5IGVuc3VyZXMgeW91ciBzYWZldHksIGV0Yy4iLiBXaGF0IGFib3V0IG91ciBib3lzIHdobyBkb24ndCBhbHdheXMgaGF2ZSB0aGUgc2FtZSBwaHlzaWNhbCBhbmQgc29jaWV0YWwgYXNzdXJhbmNlcyBhcyBtZW4gPyBXaHkgY2Fubm90IHRoZXNlIG9yZ2FuaXphdGlvbnMgcmV0YWluIHRob3NlIHRyYWRpdGlvbmFsbHkgbWFsZSBhbmQgZmVtYWxlIHNwYWNlcywgd2l0aG91dCBzdWJqZWN0aW5nIHRoZSBib3lzIGFuZCBnaXJscyB1bmRlciB0aGVpciBjYXJlIHRvIHNleGlzdCBhbmQgc3RlcmVvdHlwaWNhbCBhY3Rpdml0aWVzID8gV2h5IGRvZXNuJ3QgdGhlIEdpcmwgU2NvdXRzIG9yZ2FuaXphdGlvbiBqdXN0IHJlcGxpY2F0ZSB0aGUgQm95IFNjb3V0cyBjdXJyaWN1bHVtIGFuZCBhY3Rpdml0aWVzLCByYXRoZXIgdGhhbiBrZWVwaW5nIHRoZSBHaXJsIFNjb3V0cyBvcmdhbml6YXRpb24gYW5kIHRpdGxlLCBhbmQgZm9yY2luZyBlbnRyeSBpbnRvIGEgdHJhZGl0aW9uYWxseSBtYWxlIHNwYWNlLCBhbmQgcmVqZWN0IHRoZSBwcm9wb3NlZCBnZW5kZXIgbmV1dHJhbCBuYW1lIGNoYW5nZSA/Ckkgd29ya2VkIGRlbGkvYmFrZXJ5LiBBbmQgd2UgZGlkIG1vcm5pbmcgbWFya2Rvd25zLiBJIG5ldmVyIHNhdyB0aGUgbWVhdCBndXlzIG1hcmsgc3R1ZmYgaW4gdGhlIG1vcm5pbmcgYnV0IHRoZXJlIHdhcyBhbHdheXMgc3RpY2tlcnMgb3V0IGR1cmluZyB0aGUgZGF5LiAKSXQgbmljZSB0byBrbm93IHRoYXQgbXkgImJsYW1lIHRoZSBnYXlzIiBsaWZlc3R5bGUgaXMgcGFydCBvZiBVUyBtaWxpdGFyeSBsZWFkZXJzaGlwIGFzIHdlbGwuIFRoZSBjYXNlIGluIHBvaW50IHRoYXQgSSByZWZlcnJpbmcgdG8gaXMgd2hlbiB0aGUgRHV0Y2ggd2VyZSByZXF1aXJlZCB0byBkZWZlbmQgU3JlYnJlbmljYSBhZ2FpbnN0IHRoZSBTZXJicywiIFNoZWVoYW4gc2FpZC4gCkkgYWxzbyB3YXRjaGVkIGEgbnVtYmVyIG9mIGl0ZW1zIG9uIE5ldGZsaXggKEJlZm9yZSB0aGUgRmxvb2QsIEJsYWNrZmlzaCwgQ293c3BpcmFjeSBldGMpIHdoaWNoIGhhcyBoaWdodGVuZWQgbXkgYXdhcmVuZXNzIG9mIHNvbWUgb2YgdGhlIGlzc3VlcyBvdXQgdGhlcmUgYXQgdGhlIG1vbWVudC4gCkZpbmQgS2VubnkgUm9nZXJzIEFydGljbGVzIGF0IEFydGljbGUgU3BoZXJlClRoaXMgaXMgcHVyZWx5IGEgZGlzY3Vzc2lvbiBvbiB0aGUgcHJvdGVpbiBuZWVkcyB0aGUgcGxhbmV0IHdvdWxkIGhhdmUgaWYgaXQgZGVwZW5kZWQgb24gc295IGluc3RlYWQgb2YgbWVhdCBhbmQsIGFzIHN0YXRlZCBiZWZvcmUsIGV2ZW4gbW9yZSBwbGFudCBiYXNlZCBwcm90ZWluIHdvdWxkIGhhdmUgdG8gYmUgY29uc3VtZWQgdG8gbWFrZSBzdXJlIHRoZSBwb3B1bGF0aW9uIGdldHMgYWxsIDkgYW1pbm8gYWNpZHMgKGEgY29tcGxldGUgcHJvdGVpbiBkaWV0KS4gCkkgbm90IHN1cmUgd2hlcmUgdGhlIGJlc3QgcGxhY2UgdG8gcHVyY2hhc2UgYSBsYXB0b3AgaXMuIEkgbWVhbiBJIG9ubHkgYnV5IGEgbmV3IGxhcHRvcCBmb3IgbXlzZWxmIGV2ZXJ5IDMgb3IgNCB5ZWFycywgYnV0IEkgYWx3YXlzIGluZm9ybSBteXNlbGYgYWJvdXQgdGhlIGxhdGVzdCBoYXJkd2FyZSBzbyBJIGtub3cgYSBnb29kIGRlYWwgYWJvdXQgdGhhdC4gSSBhbHdheXMgYnV5IGF0IFBDIFdvcmxkIGFuZCBJIHdhcyBoYXBweSB3aXRoIGl0IHNvIGZhci4gQnV0IHRoZXkgaGF2ZSBhIGJhZCByZXB1dGF0aW9uLCBtb3N0bHkgYWJvdXQgY3VzdG9tZXIgc2VydmljZSBhbmQgcGVvcGxlIHdobyBidXkgY2hlYXAgbGFwdG9wcyAobGlrZSAyMDAgZXVybyBsYXB0b3BzKSBjb21wbGFpbiBhYm91dCBibG9hdHdhcmUsIGJ1dCB0aGF0IG5vdCBhbiBpc3N1ZSBpZiB5b3UgYnV5IGEgZ2FtaW5nIGxhcHRvcC4gQWxzbyB0aGUgcHJpY2VzIGZyb20gUEMgV29ybGQgYXJlIG1vcmUgZXhwZW5zaXZlIHRoYW4gb25saW5lIHN0b3JlcywgYnV0IHBlcnNvbmFsbHkgSSBuZXZlciBjYXJlIG11Y2ggYWJvdXQgdGhlIHByaWNlcy4gSSBwcmVmZXIgdGhlIGNvbnZlbmllbmNlIHRvIGp1c3QgZ28gaW50byBhIHNob3AgYW5kIHBpY2sgdXAgbXkgbGFwdG9wLgpVc2luZyBhIGh5YnJpZCB0b3AgY2FwIGRldmljZSB3aXRoIGEgbm9uIGh5YnJpZCBzYWZlIGF0b21pemVyLiAKSSBhZ3JlZS4gSSB3YW50IHRvIHJlbWFpbiBpbiB0aGUgdW5rbm93biBvZiB0aGUgdHJ1ZSBnbG9yeSBvZiB0aGUgY2hhcGVsIGJ1dCB5ZXQgc3RpbGwgaGVhciBsZWdlbmQgZW5vdWdoIHRvIGVudGljZSBtZSB0byBnZXQgdXAgb2ZmIG15ICwgYW5kIGhhdmUgYSBsaWZlIG1pc3Npb24gdG8gdmlzaXQgc3VjaCBhIGdyYW5kIHBsYWNlIHRoYXQgd2lsbCByZW1haW4gaW4gbXkgbWVtb3J5Li4gCkZpcnN0LCB3aGVyZXMgbXkgaW52aXRlLiAybmQgdW1tIGkgdGhpbmsgdGhlIGJlc3QgcGxhY2UgYXRtIGlzIGZyZXNubyBob3RlbCAuIGkganVzdCB0aGluayB0aGUgY2hhbGxlbmdlIGlzIGFjdHVhbGx5IGdldHRpbmcgYWNjZXNzIHdoaWxlIG5vdCBiZWluZyBzZWVuIG9yIHN0YWJiZWQgYnkgYSB2YWdyYW50LiBhbHNvIHRoZSB0dW5uZWwgZG93biBzYW4gam9hcXVpbiBnb3JnZSBpcyBhIGNvb2wgc3BvdCBhdCBuaWdodC4gYWxzbyB0aGUgYWJhbmRvbmVkIG1pbmUgb2ZmIHRoZSBXZWxsYmFybiB0cmFpbGhlYWQgd291bGQgYmUgYSBjb29sIGZpbmQsIGJ1dCBmb3IgYW55IGFiYW5kb25lZCBtaW5lcyB0aGVyZXMgbnVtZXJvdXMgZGFuZ2VycyB0aGF0IHN0YXJ0IGNyZWVwaW4gdXAuIGJhY2sgaW4gdGhlIGRheSB3ZSB3b3VsZCBkbyB0aGUgcGFsbSBob3VzZSBidXQgdSBoYXZlIHRvIGJlIHN1cGVyIHNuZWFreS4gYmV0dGVyIHRvIGRvIGl0IGFsb25lIGFzIGl0cyBnYXRlZCBuIHNlY3VyaXR5IGlzIG9uIGhpZ2ggYWxlcnQgb3V0IHRoZXJlLiB0aGUgYWNjZXNzIGlzIHNvbWUgbWlzc2luZyBicmlja3MgaW4gdGhlIGJhY2sgb2YgdGhlIGJ1aWxkaW5nIGJ5IHRoZSByb29mLiBzbyBob3BlIHUgaGF2ZSBzb21lIGNsaW1iaW5nIGV4cGVyaWVuY2Ugb3IgdGhhdGxsIGJlIGFuIGVhc3kgc25hcHBlZCBsZWcgZnJvbSBhIGZhbGwuCkhvdXNla2VlcGluZyBUaGUgaG91c2VrZWVwaW5nIGFzcGVjdCBvZiBhIGNodXJjaCBjdXN0b2RpYW4ncyByZXNwb25zaWJpbGl0aWVzIGFmZmVjdHMgdGhlIHB1YmxpYydzIGFuZCBwb3RlbnRpYWwgbmV3IG1lbWJlcnMnIGltcHJlc3Npb24gb2YgdGhlIG9yZ2FuaXphdGlvbi4gT3JnYW5pemF0aW9uIHNraWxscyBhbGxvdyB0aGVzZSBqYW5pdG9ycyB0byBoYW5kbGUgZGFpbHksIHdlZWtseSBhbmQgc2Vhc29uYWwgY2xlYW5pbmcgb2YgdGhlIHNhbmN0dWFyeSwgb2ZmaWNlcywgaGFsbHdheXMgYW5kIGVudHJpZXMsIGFsbCBvZiB3aGljaCBpbnZvbHZlIGR1c3RpbmcsIG1vcHBpbmcsIHZhY3V1bWluZyBhbmQgc3dlZXBpbmcuIFN0b2NraW5nIGFuZCBjbGVhbmluZyBiYXRocm9vbXMgYW5kIGtpdGNoZW5zLCBlbXB0eWluZyB0cmFzaCBhbmQgb3JkZXJpbmcgc3VwcGxpZXMgcm91bmQgb3V0IHRoZSBob3VzZWtlZXBpbmcgc2lkZSBvZiBhIGNodXJjaCBjdXN0b2RpYW4ncyBwcm9mZXNzaW9uYWwgbGlmZS4uIApBcyBmb3IgT1AsIEknbSBzbyBzb3JyeSB5b3UgaGF2ZSB0byBnbyB0aHJvdWdoIHRoaXMgYW5kIElrIHRoaXMgaXMgcGFpbmZ1bCB0byBnbyB0aHJvdWdoLiBJIHdvdWxkIHJlY29tbWVuZCB5b3UgcmVzdCB1bnRpbCB5b3UncmUgZmVlbGluZyB3ZWxsIGVub3VnaCB0byB0YWxrIHRvIGFueW9uZS4gUGxlYXNlIGRvbid0IGh1cnQgeW91ciBzZWxmIGFuZCBwbGVhc2UgY2FsbCB0aGUgc3VpY2lkZSBob3QgbGluZSBpZiB5b3UgZXZlciBhcmUgY29uc2lkZXJpbmcgc3VpY2lkZS4gCkxvbmVsb2JvICAxIHBvaW50ICBzdWJtaXR0ZWQgMjMgZGF5cyBhZ28KSGlsZGFobCwgYSBmb3JtZXIgY2hhaXIgb2YgdGhlIFdpbm5pcGVnIEJsdWUgQm9tYmVycyBib2FyZCBhbmQgQ0VPIG9mIHRoZSBNYW5pdG9iYSBMaXF1b3IgQ29udHJvbCBDb21taXNzaW9uLCBkaWVkIGluIDIwMTEuIEhlIGZpcnN0IGJlY2FtZSBpbnZvbHZlZCB3aXRoIHRoZSBIZWFsdGggU2NpZW5jZXMgQ2VudHJlIEZvdW5kYXRpb24gbWFueSB5ZWFycyBhZ28gYWZ0ZXIgaGlzIHNvbiBKYW1pZSB3YXMgZGlhZ25vc2VkIHdpdGggbGV1a2VtaWEuIExvb2tpbmcgZm9yIGEgd2F5IHRvIGdpdmUgYmFjaywgaGUgaGVscGVkIHN0YXJ0IFByb2plY3QgSG9wZS4uIApUaGUgdGVtcGVyYXR1cmUgc2hvdWxkIGJlIGJldHdlZW4gODVvRiB0byA5MG9GIHdpdGggYWJvdXQgNjAlIGh1bWlkaXR5LiAKVGhpcyBjb250YWlucyB4MzIgeDY0IGJpdCBib3RoIGFuZCBpbmNsdWRlcyBmdWxsIGZlYXR1cmVzLiBKdXN0IHlvdSBuZWVkIHRvLiAKSGljZSB1bmEgYnNxdWVkYSBlbiBHb29nbGUgeSBlbmNvbnRyIHR1IHNpdGlvLiBFcmEgZXhhY3RhbWVudGUgbG8gcXVlIGVzdGFiYSBidXNjYW5kbyB5IGZ1ZSBleGFsdGFkbyBhIGVuY29udHJhciB1bmEgYW1wbGlhIGdhbWEgZGUgYXJ0Y3Vsb3MuIApUaGVyZSBpcyBhIHBvc3Qgb24gaG93IHRvIGRvIGl0IHdpdGggdXNlcnMgb24gaGVyZS5QdXB0ZW50am9lICAyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0kgd2lzaCB0aGVyZSB3YXMgYSB3YXkgdG8gb25seSBzaG93IHN0dWZmIGdyYWJiZWQgYnkgUlNTIHZzIEJhdGNoIGFkZCBiZWNhdXNlIHRoaXMgZ3JhcGggd2lsbCBsb29rIGRpZmZlcmVudC4gCkkganVtcGVkIG9uIHJpZ2h0IGFmdGVyIHRoZSB1cGRhdGUgdG8gcGxheSBhIGNvdXBsZSBvZiBnYW1lcyBvZiBHYW1iaXQgUHJpbWUgYW5kIGEgY291cGxlIG9mIGdhbWVzIG9mIFJlY2tvbmluZy4gSSBoYWQgYSB0b24gb2YgZnVuIHdpdGggdGhlIG5ldyBtb2RlcyBhbmQgdGhlIG5ldyBtYXBzLiAKVXNlIGEgc3RyYXRlZ3kgbGlzdC4gQSBzdHJhdGVneSBsaXN0IGlzIGxpa2UgYSBjaGVhdCBzaGVldCwgdGhhdCBoYXMgYWxsIG9mIHRoZSBkaWZmZXJlbnQgd2F5cyB5b3UgY2FuIHdpbiBpbiBhIHBva2VyIGdhbWUgaW4gYSBsaXN0IHJhbmtlZCBmcm9tIGJlc3QgaGFuZHMgdG8gd29yc2UgaGFuZHMuIFVzaW5nIGEgY2hlYXQgc2hlZXQgd2lsbCBoZWxwIHlvdSBkZXRlcm1pbmUgd2hpY2ggY2FyZHMgdG8ga2VlcCBhbmQgd2hpY2ggY2FyZHMgdG8gZXhjaGFuZ2UgZm9yIG5ldyBjYXJkcy4gRm9yIGV4YW1wbGUsIGlmIHlvdSBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byBnbyBmb3IgYSBzdHJhaWdodCB3aXRoIGFuIG91dHNpZGUgc3RyYWlnaHQsIG9yIHlvdSBoYXZlIHRoZSBvcHBvcnR1bml0eSB0byBnbyBmb3IgdGhyZWUgdG8gZm91ciBvZiBhIGtpbmQgd2l0aCBhIHBhaXIsIGEgbG93IHBhaXIgaXMgcmFua2VkIGhpZ2hlciBvbiB0aGUgbGlzdCBzbyB0aGF0IGlzIHdoYXQgeW91IHNob3VsZCBjaG9vc2UuCldoZW4gSSBzdGFydGVkIGRhdGluZyBUb20gRnJlbmNoLCBJIHdhdGNoZWQgaGltIGxvYWQgdGhlIGRpc2h3YXNoZXIgd2l0aCBoaXMgdHdvIGJveXMgdGhleSBkaWQgYSBzbG9wcHkgam9iIGJ1dCB0aGV5IHNhbmcgdGhlIHdob2xlIHRpbWUgYW5kIEkga25ldyBoZSBzaG91bGQgYmUgaGVyIGRhZC4gCkVpdGhlciBwYWlyIG9yIHBhaXJzIGlzIGNvcnJlY3QsIGJ1dCB0aGUgdXNhZ2Ugd2lsbCBkZXRlcm1pbmUgd2hpY2guIFBhbnRzLCBzaG9lcywgZ2xvdmVzIGFuZCBzb21lIG90aGVyIHRoaW5ncyBjb21lIGluIHBhaXJzLCBhbmQgaW4gZ2VuZXJhbCB1c2FnZSwgYSBwYWlyIGlzIHR3byAoYXMgeW91IHByb2JhYmx5IGFscmVhZHkga25ldykuIEZ1cnRoZXIsIHdlIGNhbiB0YWxrIGFib3V0IG9uZSBwYWlyLCBvciBhIG51bWJlciBvZiBwYWlycyBvZiB0aGluZ3MuIApIZSAxMDAlIGNhcnJpZWQgdGhhdCBPa2xhaG9tYSB0ZWFtLiBUaGF0IHRlYW0gcm9zZSBhbmQgZmVsbCB3aXRoIGhpbSwgaGUgaGFkIG9uZSBvZiB0aGUgaGlnaGVzdCB1c2FnZSByYXRlcyBhbmQgbW9zdCAibGl2ZSBvciBkaWUiIHBsYXlzdHlsZXMgSSBldmVyIHNlZW4gaW4gdGhlIGNvbGxlZ2UgZ2FtZS4gSGUga25ldyB0aGF0IGFuZCByb3NlIHRvIHRoZSBjaGFsbGVuZ2UuIFRoYXQgYSBraWQgdGhhdCBkb2VzbiBqdXN0IGhhdmUgdGhlIGFiaWxpdHksIGJ1dCBoYXMgdGhlIG1pbmRzZXQgdG8gc3VjY2VlZCBpbiB0aGUgTkJBLmpjYXNleXMzNCAgMzkgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29Vc2VkIHRvIHN0YXkgYXQgd29yayBmb3IgYW4gZXh0cmEgaG91ciBvciBtb3JlIHRvIGhlbHAgdGhlIHNoaWZ0IGFmdGVyIG1lIGdldCB0aGVpciBzaGl0IHRvZ2V0aGVyIGlmIHRoZXkgbmVlZGVkIG1lIHRvLiAKMTAgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ29Vc3VhbGx5IHdoZW4gSSB3YXRjaGVkIHRoZSBkZWZlbnNlIGR1cmluZyBnYW1lcywgaSB1c3VhbGx5IHNheSwgIkNvbWUgb24gdGFja2xlIGhpbSEiLCBvciAiM3JkIGFuZCBzaG9ydD8gTWlnaHQgYXMgd2VsbCBtYWtlIGl0IGEgMXN0Ii4gQnV0IGR1cmluZyB0aGUgc2FpbnRzIGdhbWUgSSBqdXN0IHdhdGNoZWQgaW4gZGVqZWN0ZWQgc2lsZW5jZS4gSSB0aG91Z2h0IHRvIG15c2VsZjoiQXVzdGluIGdldHRpbmdmaXJlZC4iIEFuZCBzdXJlIGVub3VnaCwgSXQgaGFwcGVuZWQuIApTdGFuZCwgYmUgbG91ZCwgYW5kIGVuam95IHRoZSBhdG1vc3BoZXJlLiAKSXQgZG9lc24gbWF0dGVyIGlmIHRoZSBwZW9wbGUgdXNpbmcgdGhlIHdvcmQgbWVhbiBpdCB0byBiZSBodXJ0ZnVsIChvciBldmVuIGhhdmUgdGhlIHNsaWdodGVzdCBjbHVlIG9mIHRoZSBvcmlnaW4pLCB3aGF0IG1hdHRlcnMgaXMgaWYgaXQgY2F1c2VzIGEgbmVnYXRpdmUgZWZmZWN0LiAKQ2xldmVsYW5kIGlzIG91dCBhcyAyMDE0IHN0b3Agb24gV29ybGQgU2VyaWVzIG9mIFBva2VyIGNpcmN1aXQKU28gYmFjayB0byAyMiBSb3dsYW5kICAgdGhpcyByZWFsbHkgaXMgdGhlIHJpZ2h0IHR5cGUgb2YgY2FtcGFpZ24gZm9yIHRoZSBzZWxsZXIsIGFzIHRoZSBidXllciBpcyBnb2luZyB0byBiZSBhIHNwZWNpYWwgb25lLiAKPiBFdmVyeXRoaW5nIEkgc2FpZCB3YXMgdGhlIHRydXRoLiBGYXIgZnJvbSB0YWxraW5nIG91dCBteSBhc3MuClRoZSBMaXN0OiBUZWNobm9sb2d5IGNvbXBhbmllcywgTm92LiA1LCAyMDE4IE5vdi4gNSwgMjAxOCBCeSBWRUdBUyBJTkMgc3RhZmYgRmluZCBvdXQgYWJvdXQgdGVjaG5vbG9neSBjb21wYW5pZXMuIFRoaXMgd2Vlaywgd2UgcmFuayB0aGVtIGJ5IG51bWJlciBvZiBlbXBsb3llZXMgYXMgb2YgT2N0LiAxLgpXZSBnb25uYSBiZSBmaW5lLCBNb3J0eSwgcmVsYXguIEkgd2hpcHBlZCB1cCBhbiBhbnRpZG90ZS4gClRoaXMgYWxsb3dzIHlvdSB0byBnYW1ibGUgYnkgc2FjcmlmaWNpbmcgcHJvdGVjdGlvbiBmcm9tIHRoZSBzaWRlcyBhbmQgY29uY2VudHJhdGluZyBvbiBqdXN0IHRoZSBmcm9udCwgZ2l2aW5nIG1vcmUgc3BhY2UgZm9yIHBvd2VyIGFuZCB3ZWFwb25zLiAKQm9udXMgT2ZmZXJzVGhlIG9ubGluZSBwb2tlciBidXNpbmVzcyBpcyBoaWdobHkgY29tcGV0aXRpdmUuIEFzIG1lbnRpb25lZCBhYm92ZSwgcG9rZXIgcm9vbXMgbWFrZSBtb25leSBmcm9tIHBsYXllcnMgaW4gdGhlIGZvcm0gb2YgcmFrZXMgKHRoZSBhbW91bnQgb2YgbW9uZXkgYSBjYXJkIHJvb20gdGFrZXMgZnJvbSBlYWNoIHBvdCkgYW5kIGVudHJ5IGZlZXMuIApTZWVtcyBsaWtlIGdldHRpbmcgaW4gdG91Y2ggd2l0aCBEb25hbGQgVHJ1bXAgd2FzIHZlcnkgdmVyeSBoaWdoIHVwIG9uIEVwc3RlaW5zIGxpc3Qgb2YgdGhpbmdzIGhlIG5lZWQgdG8gYmUgYWJsZSB0byBkby4KSG9zdGVkIGJ5IFNpbGx5IE1pc3MgVGlsbHkuIEFsbCBhZ2VzLiAKQW5vdGhlciBtYWpvciByZWFzb24gZm9yIHRoZSBwb3B1bGFyaXR5IG9mIG9ubGluZSBwb2tlciBpcyB0aGF0IGl0IGNvc3RzIG11Y2ggbGVzcyBpbiBjb21wYXJpc29uIHRvIHRoZSB0cmFkaXRpb25hbCByb29tIHBva2VyLiBQZW9wbGUgc2F2ZSBvbiB0cmF2ZWxsaW5nIGV4cGVuc2VzIGFuZCBvbiB0aXBzIHRoYXQgdGhleSB3b3VsZCB0eXBpY2FsbHkgaGF2ZSB0byBnaXZlIHRoZSBkZWFsZXIuIEEgbWFqb3Igc2F2aW5nIGlzIHRoZSBleHBlbnNlIG9mIGRyaW5rcywgb3IgYmV2ZXJhZ2VzLCBzbyBlbmNvdXJhZ2VkIGF0IG9mZmxpbmUgY2FzaW5vcyBhbmQgcG9rZXIgcm9vbXMsIGJ1dCBoaXR0aW5nIGhhcmQgb24gdGhlIHBvY2tldC4gClBpbGxvdyBiZXR3ZWVuIHRoZSBsZWdzIGhlbHBzIHNvbWUgdG9vLiAKSSBib29rZWQgYSBmbGlnaHQgdG8gYW1zdGVyZGFtIGFuZCB3aWxsIGJlIHRoZXJlIGZvciBvbmUgd2Vla2VuZCBpbiBOb3ZlbWJlci4gCkVsaWFzaGJlcmc6IE5ldGZsaXggaXMgYWxzbyBkb2luZyBhIGhlbGwgb2YgYSBqb2IgZmluZGluZyBsb2NhbCBwcm9kdWNlcnMgaW4gZGlmZmVyZW50IGNvdW50cmllcyBhbmQgcHJvdmlkaW5nIHRoZW0gd2l0aCBmaW5hbmNpYWwgc3VwcG9ydCB0byBkZXZlbG9wIHN0b3JpZXMgdGhhdCBhcmUgbG9jYWxseSBhcHBlYWxpbmcgYW5kIGF0IHRoZSBzYW1lIHRpbWUgaGF2ZSBzb21lIGdsb2JhbCBhcHBlYWwuIApOb20gOiBzJ2lsIHByZW5haXQgZGUgcGxlaW4gZHJvaXQgbGUgbm9tIGR1IHByZSwgbGEgbG9pIGR1IDQgbWFycyAyMDAyICgyMDAyIDMwNCkgcGVybWV0IGF1eCBwYXJlbnRzIGRlIGNob2lzaXIgcydpbHMgZW4gZXhwcmltZW50IGxlIHNvdWhhaXQuIERvbmMsIHNhbnMgaW5kaWNhdGlvbiBwYXJ0aWN1bGlyZSwgbCdlbmZhbnQgcHJlbmQgbGUgbm9tIGR1IHByZS4gClJpY2hhcmQgUHJ5b3IgcHVzaGVkIHRoZSBsaW1pdHMgb2Ygc3RhbmQgdXAgY29tZWR5IGFuZCB3YXMgbm90IGFmcmFpZCB0byBjb3ZlciBjb250cm92ZXJzaWFsIHRvcGljcyBpbiBoaXMgc2hvd3MuIEhlIGNvdmVyZWQgdW5jb21wcm9taXNpbmcgdG9waWNzIG9uIHJhY2lzbSwgY29udGVtcG9yYXJ5IGlzc3VlcyBhbmQgbW9yZSwgYWxsIG9mIHdoaWNoIHdlcmUgcGVwcGVyZWQgd2l0aCBoaXMgdW5pcXVlIGZsYXZvciBvZiB1bmJyaWRsZWQgcHJvZmFuaXR5LiBQcnlvciB3YXMgYm9ybiBpbiBJbGxpbm9pcyBhbmQgbGl2ZWQgaW4gYSBicm90aGVsIG9wZXJhdGVkIGJ5IGhpcyBncmFuZG1vdGhlciwgYnV0IGxhdGVyIG1vdmVkIHRvIEJlcmtlbGV5IHdoZXJlIGhlIGFic29yYmVkIGhpbXNlbGYgaW4gdGhlIGN1bHR1cmUuIApWaWogaXMgdGhlIGZpcnN0IGRyYWdvbiBvZiBjb2xvdXIgZXZlciBvbiB0aGUgRGVuLi4gClRoZSBsaXR0bGUgZ3V5IGJsb3dzIHRoZSBjYXNlIHdpZGUgb3BlbiBhbmQgaW50aW1hdGVzIHRoYXQgaXQncyB0aGUgZ3V5IGNvcCdzIG93biBmYXVsdCBoZSBnb3Qgc2hvdCwgYW5kIGZyYW5rbHksIEkgaGF2ZSB0byBhZ3JlZS4gSGUgaGFkIHRoZSB3aG9sZSB0aW1lIHRoZSBndXkgd2FzIHNob290aW5nIEFkcmlhbiBhbmQgdGhlbiBwaXZvdGluZyBzbG93IGFzIG1vbGFzc2VzIHRoYXQgaGUgY291bGQgaGF2ZSBzaG90IHRoZSBiYWQgZ3V5LiBIb29rZXIgY2FsbHMgdGhlIGd1eSBjb3AgdG8gdGhlIHN0YW5kIGFuZCB0aGUgZ3V5IGlzIG5vdGljZWFibHkgZmx1c3RlcmVkLiAKOC4gU3VjaCBhIGNoYW5nZSBpbiBzdHJhdGVneSBtYXkgaW5kaWNhdGUgb25nb2luZyBwcm9ibGVtcyBhcyBhbHRlcmF0aW9ucyBpbiBjb250cm9sIG9mIGJhY2sgbXVzY2xlcyBsZWFkIHRvIGNoYW5nZXMgaW4gam9pbnQgbG9hZGluZyBraW5lbWF0aWNzIG9mIHQgc3BpbmUuClRydW5maW8gIDE0IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpIb2xpZGF5IElubiBIYW1idXJnIENpdHkgTm9yZCAgIDI5NyBaaW1tZXIgICBFcmZmbnVuZyBFbmRlIDIwMTYKSXMgdGhpcyB3aGF0IHlvdSB3YW50PyBNb3JlIGNvbXBsYWluaW5nIGFuZCBhcmd1aW5nIGJlY2F1c2UgeW91IGFyZSB0cnlpbmcgdG8gdHVybiBhIGNvbXBsZXggc2l0dWF0aW9uIGludG8gYmFzaWMgb25lIGJ5IGlnbm9yaW5nIGRldGFpbHM/LiAKVGhlbiBpdCBiZWNhbWUgZmFzaGlvbmFibGUgdG8gbW9jayB0aGVtLCBhdCB3aGljaCBwb2ludCwgdGhlIGludGVybmV0IGJlaW5nIHRoZSBzdHVwaWQgdGhpbmcgdGhhdCBpdCBpcywgV2VlemVyIGJlY2FtZSB1bmF2b2lkYWJsZS4gU28gbGV0J3MgZ2V0IHRoaXMgb3ZlciB3aXRoLiAKVGhlIEZsYW1pbmcgTGlwcyBkb2N1bWVudGFyeSBGZWFybGVzcyBGcmVha3MgaXMgcHJldHR5IHRlcnJpZmljLiBIaWdobHkgcmVjb21tZW5kZWQuClRvdXQgZCB0YWJsaSAgbGEgY2FtcGFnbmUsIExlY2xlcmMgbmUgcmV2aWVuZHJhICBQYXJpcyBxdSAxOTA4LiBJbCBhY2N1ZWlsbGUgdW5lIGNsaWVudGxlIHJpY2hlIGV0IGh1cHBlIGV0LCBkYW5zIGxlIG1tZSB0ZW1wcywgcHJvZGlndWUgZ3JhdHVpdGVtZW50IHNlcyBzb2lucyAgdW5lIGZvdWxlIGRlIHBhdXZyZXMgZ2Vucy4gCldhcyB0b28gZWFybHkgZm9yIGEgbGFyZ2Ugd2hpc2t5IG9yIGV2ZW4gYSBzbWFsbCBvbmUgc28gSSBqdXN0IHNhdCBkb3duIGFuZCBzaG9vayBteSBoZWFkIGluIGRpc2JlbGllZi4gCkFuZCBpdCBjb3VsZCBvcGVuIHRoZSBkb29yIHRvIHNpbWlsYXIgYWN0aW9uIG92ZXIgdGhlIGRlc2lnbiBvZiBtYW55IG90aGVyIHNpbWlsYXIgcG9rZXIgbWFjaGluZXMuICJBdXN0cmFsaWEgaGFzIHN0cm9uZyBjb25zdW1lciBwcm90ZWN0aW9uIGxhd3MsIiBzYWlkIFRpbSBDb3N0ZWxsbywgb2YgdGhlIEFsbGlhbmNlIGZvciBHYW1ibGluZyBSZWZvcm0sIHN1cHBvcnRpbmcgdGhlIGxhd3N1aXQuICJTbyBwdXR0aW5nIGRhbmdlcm91c2x5IGFkZGljdGl2ZSBwb2tpZXMgb24gdHJpYWwgZm9yIG1pc2xlYWRpbmcgYW5kIGRlY2VwdGl2ZSBjb25kdWN0IGhhcyBnaXZlbiBob3BlIHRvIGV2ZXJ5b25lIGNhbXBhaWduaW5nIHRvIHdpbmQgYmFjayBBdXN0cmFsaWEgdHJhZ2ljIHJlY29yZCBvZiBiZWluZyB0aGUgYmlnZ2VzdCBnYW1ibGVycyBpbiB0aGUgd29ybGQuIiBBdCB0aGUgY29yZSBvZiB0aGUgY2FzZSB3aWxsIGJlIHRocmVlIGtleSBjbGFpbXMuIApJdCB3YXMgZGlzdHJhY3RpbmcgZHVyaW5nIHNleCBiZWNhdXNlIGl0IHdvdWxkIHRha2UgYXdheSBmcm9tIHdoYXQgbXkgaHVzYmFuZCB3YXMgZG9pbmcuIEhlIHdhcyBncmVhdCwgaXQganVzdCB0aGF0IEkgY291bGRuIGdldCBteSBicmFpbiB0byB0dXJuIG9mZi4gSGUgaGFkIGEgbGlnaHRidWxiIG1vbWVudCBhbmQgaGUgcHV0IG9uIHBhbmRvcmEgYW5kIG15IGJyYWluIHdhcyBhYmxlIHRvIGNhbG0gdGhlIGZ1Y2sgZG93biwgYW5kIHdlIGJvdGggaGFkIGFuIGVuam95YWJsZSB0aW1lLiAKRXN0IGNlIHVuZSBzb3J0ZSBkZSB0ZWFzaW5nID8gVW5lIG91dmVydHVyZSBhbnRpY2lwZSA/IFVuZSBjb25vbWllIGRlIHB1YmxpY2l0ID8gT24gZW50cmUsIG9uIGdvdGUsIGMnZXN0IGJvbi4gUXVlIGRpYWJsZSBhIHQgb24gYmVzb2luIGQndW4gbm9tIGRlIGJvdXRpcXVlID8gUGV1dCB0cmUuIE5vdXMgZGVtYW5kZXJvbnMgIGwnb2NjYXNpb24uLiAKVHVybmVkIG91dCB0byBiZSBhYm91dCAxNSBidXJsYXAgcGlsbG93IGNvdmVycyB3aXRoIHZhcmlvdXMgcGljdHVyZXMgb24gdGhlbSAoc2t1bGxzLCBmbG93ZXJzLCBNYXJpbHluIE1vbnJvZSwgUm9sbGluZyBTdG9uZXMgbGlwcywgVG90b3JvLCBkZWVyLiAKVGhlIGV2ZW50IHdpbGwgYWxzbyBiZSBhIGNoYW5jZSBmb3IgcGVvcGxlIHRvIHNob3cgb2ZmIHRoZWlyIHJpZGVzLiAKRGllIFRpYXJhIG1pdCBkZW0gU2NocmlmdHp1ZyAxNzY2IiBpc3QgaW4gU2dyYWZmaXRvIFRlY2huaWsgZWluZSBLcmF0enB1dHp0ZWNobmlrIGhlcmdlc3RlbGx0LiAKU2hlJ3MgYSBtZWFuIGJpdGNoLiBIb25lc3RseSwgSSB3b3VsZG4ndCBsZXQgaGVyIGFyb3VuZCBteSBiYWJ5LiBTaGUgb2J2aW91c2x5IGlzIHN1Y2ggYSBtaXNlcmFibGUgdHdhdCB0aGF0IHNoZSBoYXMgdG8gYmUgbWVhbiB0byBBIEJBQlkgdG8gbWFrZSBoZXJzZWxmIGZlZWwgZ29vZD8gSG93IGxvdyBjbGFzcywgdGFja3ksIG1lYW4gYW5kIHJ1ZGUuClNvIHByYWN0aWNlIGNvbmNlbnRyYXRpbmcgb24geW91ciBvcHBvbmVudHMgYXMgbXVjaCBhcyBwb3NzaWJsZSB3aGlsZSBoaWRpbmcgYW55IHRlbGxzIHlvdSBtYXkgaGF2ZS4gTGVhcm5pbmcgdG8gY29udHJvbCB5b3VyIGVtb3Rpb25zIHVuZGVyIG1hbnkgc2l0dWF0aW9ucyB0YWtlcyBwcmFjdGljZSwgYnV0IGl0IGlzIHZlcnkgaW1wb3J0YW50IGJlY2F1c2UgcG9rZXIgaXMgYSBnYW1lIG9mIGluZm9ybWF0aW9uLCBhbmQgeW91IGRvbid0IHdhbnQgdG8gZ2l2ZSBhbnkgbW9yZSBvZiBpdCBhd2F5IHRoYW4geW91IGhhdmUgdG8uIApCeSB0aGlzIHRpbWUsIEkgd2FzIGF0IHRoZSBFUi4gKFdoaWNoIHdvdWxkIGZpbmUsIGV4Y2VwdCBJIHdhcyBpbiBub3J0aGVybiBBbGFiYW1hLCBpbiBhIHRvd24gY2FsbGVkIFBoaWwgQ2FtcGJlbGwsIGFuZCB0aGUgY2xvc2VzdCBFUiB3YXMgMzAgbWludXRlcyBhd2F5LiBJdCB3YXMgdGhpcyBsaXR0bGUgNCBiZWQgRVIsIGFuZCBpdCBoYWQgbGlrZSA0IHJvb21zIGluIGl0LikgQW55d2F5cywgdGhleSBjYW1lIGluIGFuZCBnYXZlIG1lIGEgc2hvdCBpbiBteSBhc3MsIHdoaWNoIGRpZCBhYnNvbHV0ZWx5IG5vdGhpbmcgZm9yIHRoZSBwYWluLCBqdXN0IG1hZGUgbXkgYXNzIGNoZWVrIHNvcmUuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvblRIRSBDb21tZXJjaWFsIENsdWIgaW4gQWxidXJ5IHdpbGwgc3BlbmQgJDMuNW1pbGxpb24gYWRkaW5nIGEgMzAwIHBlcnNvbiBmdW5jdGlvbiByb29tIHRvIHdoYXQgaGFzIGJlY29tZSBvbmUgb2YgdGhlIGxhcmdlc3QgbGljZW5zZWQgY2x1YnMgaW4gcmVnaW9uYWwgQXVzdHJhbGlhLiBJdCB3aWxsIGFsc28gcmV2YW1wIHRoZSBvdXRkb29yIGNvdXJ0eWFyZCBvbiBEZWFuIFN0cmVldCB0byBiZW5lZml0IG1lbWJlcnMgd2hvIHdpc2ggdG8gc21va2UgYW5kIHBsYXkgcG9rZXIgbWFjaGluZXMuIEEgdGhpcmQgY29tcG9uZW50IHdpbGwgYmUgdG8gcmVjb25maWd1cmUgdGhlIEVsaXphYmV0aCBTdHJlZXQgY2VudHJhbCBmb3llciBhbmQgZW5sYXJnZSB0aGUgRWxpemFiZXRoIFJvb20uIApBIGNvdXAgZGUgZ3JhY2UgbGF0ZXIsIHRoZSBwYXJ0eSBzbGVwdCB3aXRoIGFsYXJtIHNwZWxscyBnb2luZy4uIApOb3Qgb25seSB0aGF0LCB3ZXN0ZXJuIGFybWVuaWFucyBhcmUgbW9yZSB0aGFuIHlvdSwgaWYgd2UgYWxsIHJlcGF0cmlhdGUgc2F5IGdvb2QgYnllIHRvIHlvdXIgZGllc2VsIG1vdG9yIGRpYWxlY3QuLiAKWW91ciBwb2tlciBjYXNlIGlzIGdvaW5nIHRvIGNhcnJ5IHlvdXIgcG9rZXIgY2hpcHMgZnJvbSBwbGFjZSB0byBwbGFjZSwgYW5kIHdoaWxlIHlvdSBrbm93IHRoYXQgaXQgc2hvdWxkIGJlIHN0dXJkeSwgYnV0IGhvdyBhcmUgeW91IGdvaW5nIHRvIGZpbmQgdGhlIGNhc2UgdGhhdCByZWFsbHkgYXBwZWFscyB0byB5b3U/IFRha2Ugc29tZSB0aW1lIHRvIG1ha2Ugc3VyZSB0aGF0IHlvdSBjb25zaWRlciB3aGF0IHlvdXIgb3B0aW9ucyBhcmUgYW5kIHdoaWNoIGNhc2VzIGFwcGVhbCB0byB5b3UhCkVpdGhlciBvZiB0aG9zZSBzaXR1YXRpb25zIG1lYW5zIHdob2V2ZXIgaXMgYXNraW5nIHRoZSB3b21hbiBpcyBub3QgaW50ZXJlc3RlZCBpbiBtYWtpbmcgc3VyZSB0aGUgY29uc2VudCB0aGV5IGdhaW4gaXMgZW50aHVzaWFzdGljIGFuZCBhZmZpcm1hdGl2ZSB3aGljaCBpcyB0aGVpciBwcm9ibGVtIG5vdCB0aGUgd29tYW4gbm8sIHdvbWVuIGRvbiBoYXZlIGEgZHV0eSB0byBwdXQgdGhlbXNlbHZlcyBpbiBoYXJtIHdheSBvciBvdGhlcndpc2UgYXQgcmlzayBieSBhbnN3ZXJpbmcgaG9uZXN0bHkgdG8gbWVuIG9yIHdvbWVuIHdobyBhcmUgdGhyZWF0ZW5pbmcgb3IgYmxhY2ttYWlsaW5nIHRoZW0gdG8gc2F5IHllcy4gClJlbWFpbmluZyB2aWdpbGFudC4gV2F0Y2hpbmcgeW91ciBiYWNrLCBlc3BlY2lhbGx5IGlmIHlvdSBhcmUgYSBwZXJzb24gb2YgY29sb3IgaW4gYSB3aGl0ZSBzb2NpZXR5LiBJbldoYXQgUmVtYWlucywgcG9ldCBDbGF1ZGlhIFJhbmtpbmUsIGNob3Jlb2dyYXBoZXIgV2lsbCBSYXdscywgYW5kIGZpbG1tYWtlciBKb2huIEx1Y2FzIGNyZWF0ZSBhIGhhdW50aW5nIGxhbmRzY2FwZSBvZiBjaGlhcm9zY3VybyBsaWdodGluZywgbW92ZW1lbnQsIGFuZCBzb3VuZCBhcm91bmQgdGhlIGtpbmRzIG9mIHN1cnZlaWxsYW5jZSB0aGF0IGFyZSBwYXJ0IG9mIHRoZSBibGFjayBBbWVyaWNhbiBleHBlcmllbmNlLiAKSSBwYXkgZm9yIGEgc2VydmljZSB0aGF0IHNjYW5zIGFsbCBteSBtYWlsIGFuZCBzZW5kcyBtZSAxIHBkZiBhIGRheSAob3Igd2Vlaywgb3IgbW9udGggd2hhdGV2ZXIgSSBzcGVjaWZ5KSB3aGVyZSBhbGwgbXkgbWFpbCBnb2VzLiBJIGdldCBhIHJlZ3VsYXIgYWRkcmVzcy4gQmV0dGVyIHRoYW4gYSBwbyBib3gsIGFzIHNvbWUgdGhpbmdzIHdvbid0IGFsbG93IHlvdSB0byB1c2UgYSBwbyBib3gsIGFuZCBJIG5ldmVyIGhhdmUgYWxsIHRoaXMgZXh0cmEgcGFwZXIganVuayBpbiBteSBob3VzZS4gSSBoYXRlIGNsdXR0ZXIgYW5kIEknbSBub3QgY29uY2VybmVkIGFib3V0IG15IHByaXZhY3kgYmVjYXVzZSBhbGwgbXkgYmlsbHMvc3RhdGVtZW50cyBhcmUgZWxlY3Ryb25pYyBhbnl3YXkuIEF0IHRoaXMgcG9pbnQgaXQncyBtYWlubHkgbm9ucHJvZml0cy9OR09zIGJlZ2dpbmcgZm9yIG1vcmUgbW9uZXkuIEJ1dCBJIGFsc28gdXNlIGl0IGZvciBteSBwcm9mZXNzaW9uYWwgc3R1ZmYuClRoZW4gSSBub3RpY2VkIGhlIHdhcyBsb29raW5nIGluIGFub3RoZXIgZGlyZWN0aW9uLCBub3QgYXQgbWUhIEhlIHdhcyBsb29raW5nIGF0IGFub3RoZXIgZ2lybCB3aG9tIEkgY29uc2lkZXJlZCB0byBiZSBsZXNzIHByZXR0eSB0aGFuIG1lLiBTaGUgd2FzIHdlYXJpbmcgdGhlIHNhbWUgZHJlc3MgdGhhdCBJIGhhZCBzZWVuIGVhcmxpZXIgaW4gdGhlIG1hbGwgYnV0IGRlY2lkZWQgbm90IHRvIGJ1eSBzaW5jZSBpdCBtYWRlIG1lIGxvb2sgZmF0OyBob3dldmVyLCBvbiBoZXIsIGl0IHdhcyBwZXJmZWN0LiBXaXRob3V0IGJlaW5nIHRoZSBtb3N0IGJlYXV0aWZ1bCBnaXJsIG9mIHRoZSBwYXJ0eSwgc2hlIGhhZCBzb21ldGhpbmcuIFNoZSB3YXMgc21pbGluZyBhbGwgdGhlIHRpbWUgYW5kIGdyYWJiaW5nIGhlciB3aW5lIGdsYXNzIHdpdGggc28gbXVjaCBjbGFzczsgc2hlIGhhZCBiZWF1dGlmdWwgaGFpciBhbmQgbm90IG9ubHkgd2FzIGhlIGxvb2tpbmcgYXQgaGVyLCBtb3N0IGd1eXMgYXQgdGhlIHBhcnR5IHdlcmUgYXR0cmFjdGVkIGJ5IGhlciBpbm5lciBib21ic2hlbGwuIFNoZSBrbmV3IHdoYXQgbG9va2VkIGdvb2Qgb24gaGVyLCBob3cgdG8gbW92ZSwgYW5kIGhvdyB0byBzbWlsZTsgZXZlcnlib2R5IGFkbWlyZWQgdGhhdC4KVG9kYXkgSSBnb2luZyB0byB0ZWxsIHlvdSBhYm91dCBob3cgSSBkZWFsIHdpdGggdGhlIGRhaWx5IGdyaW5kIG9mIFdURiBBTSBJIE1BS0lORyBGT1IgRElOTkVSIFRPTklHSFQgdGhhdCBtYWtlcyBldmVuIHRoZSBtb3N0IGVhZ2VyIGNvb2sgYSBsaXR0bGUsIHNoYWxsIHdlIHNheSwgaXRjaHkuIEkgZG9uIGtub3cgaG93IG1hbnkgb2YgeW91IGhlcmUgYXJlIGFsc28gZm9sbG93aW5nIG1lIG9uIEluc3RhZ3JhbSwgd2hlcmUgSSBtZW50aW9uZWQgdGhpcyBuZXcgd2F5IG9mIG1lYWwgcGxhbm5pbmcgYmFjayBpbiBKYW51YXJ5LCBzbyBmb3JnaXZlIG1lIGlmIHRoaXMgaXMgYSBsaXR0bGUgcmVwZXRpdGl2ZSwgYnV0IEkgcmVhbGx5IGRvIGZpbmQgaXQgc3VjaCBhIGhlbHBmdWwgd2F5IG9mIHdvcmtpbmcgdGhyb3VnaCB0aGUgY29uc3RhbnQgYW5kIHVucmVsZW50aW5nIGNob3JlIG9mIGhhdmluZyBkaW5uZXIgb24gdGhlIHRhYmxlIGV2ZXJ5IGV2ZW5pbmcgdGhhdCBwZXJoYXBzIGl0IGNhbiBiZSB1c2VmdWwgdG8gYSBmZXcgb2YgeW91IHRvby4gTGlrZSB0aGlzOiBPbiBNb25kYXlzLCB3ZSBlYXQgcGFzdGEuIE9uIFR1ZXNkYXlzLCBpdCBiZWFucy4gV2VkbmVzZGF5cyBhcmUgZm9yIGNoaWNrZW4uIFRodXJzZGF5cyBhcmUgc291cHMgb3Igc3Rld3MuIEZyaWRheXMgaXMgZm9yIGZpc2guIChXZWVrZW5kcyBhcmUgYSBmcmVlIGZvciBhbGwuKSBXaGF0IHRoaXMgYWxsb3dzIG1lIGlzIG11Y2ggbW9yZSBmbGV4aWJpbGl0eSBhbmQgYWxzbyBtb3JlIHJpZ2lkaXR5IGF0IHRoZSBzYW1lIHRpbWUsIGJ1dCBpbiBhIHdheSB0aGF0IGZlZWxzIGJvdGggZnJlZWluZyBhbmQgc2FmZS4gRG8geW91IGtub3cgd2hhdCBJIG1lYW4/CkNsZWFybHkgZ2V0dGluZyB0aGUgYXR0ZW50aW9uIG9mIHRoZSBidXllcnMgYW5kIGhhcyBhIG5pY2UgbWl4IG9mIHByb2R1Y3RzLiBBcyBoZSBnZXRzIGxhcmdlciwgdGhlIHRyaWNrIHdpbGwgYmUgaW52ZW50b3J5IG1hbmFnZW1lbnQuIFRoZXJlIHdpbGwgYmUgY2hhbGxlbmdlcyB3aXRoIHRoZSBpbmNyZWFzZWQgbnVtYmVyIG9mIFNLVXMuIEhhdmluZyB0aGUgcmlnaHQgc3lzdGVtcyBpbiBwbGFjZSB0byBkZXRlcm1pbmUgd2hpY2ggZmxhdm91cnMgYXJlIHNlbGxpbmcgYW5kIHVzaW5nIHRoYXQgaW5mb3JtYXRpb24gdG8gZ3VpZGUgcHVyY2hhc2luZyBkZWNpc2lvbnMgd2lsbCBiZSBjcml0aWNhbC4gZm9yIHNlbGxpbmcgaW50byB0aGUgVW5pdGVkIFN0YXRlcywgTXIuIENobyBub3RlcyB0aGF0IHRoZSBtYXJrZXQgaXMgbXVjaCBtb3JlIGNvbXBldGl0aXZlIGFuZCB0aGUgcHJvZHVjdCB3aWxsIG5lZWQgdG8gaGF2ZSBhIGNsZWFyIGRpZmZlcmVudGlhdGlvbi4gbWF5IHdhbnQgdG8gZm9jdXMgbW9yZSBvbiBidWlsZGluZyB1cCBhIENhbmFkaWFuIHByZXNlbmNlIGFuZCB3b3JraW5nIGNhcGl0YWwgZmlyc3QuIG1heSBiZSBwcmVtYXR1cmUsIHBhcnRpY3VsYXJseSBzaW5jZSBoZSBvbmx5IGJlZW4gaW4gYnVzaW5lc3MgZm9yIHN1Y2ggYSBzaG9ydCB0aW1lLgpMdWNraWx5LCBJIHdhcyBvbmx5IHJlbnRpbmcgKHdlcmVuIHdlIGFsbCwgaW4gTlkpLCBhbmQgSSBoYWQgZW5vdWdoIG9mIGEgbmVzdCBlZ2cgdG8gdHJhdmVsIGZvciBhIGZldyBtb250aHMuIApBZnRlciBjYXJkcyBoYXZlIGJlZW4gZHJhd24gYW5kIGJlZm9yZSBhIGJldCBpcyBtYWRlLCBzaG91bGQgYSBwbGF5ZXIgYXNrIHRoZSBkZWFsZXIgaG93IG1hbnkgY2FyZHMgYW55IG90aGVyIHBsYXllciBkcmV3LCB0aGUgbGF0ZXN0IGRlY2lzaW9uIGlzIHRoYXQgdGhlIGRlYWxlciBpcyBib3VuZCB0byBhbnN3ZXIuLiAKU2hlIHdhcyBteSBleHRyZW1lbHkgZ29vZCBmcmllbmQgZm9yIHllYXJzIGFuZCBJIHRob3VnaHQgc2hlIHRha2UgdGhhdCBpbnRvIGFjY291bnQuIFllYWgsIG5vLiBJIGhhZCBuZXZlciBrbm93biBhbiBhYnVzaXZlIHJlbGF0aW9uc2hpcCBiZWZvcmUuIApObyBtYXR0ZXIgaG93IHRpcmVkIHlvdSBhcmUgdGFrZSBhIHNob3dlci4gRG9uIHdlYXIgY2FyY2lub2dlbnMgdG8gYmVkLiAKUXVlIGxvY3VyYSBlcyBzdGEgZGUgcmVjb21wcmFzIGlsaW1pdGFkYXMgZHVyYW50ZSAxMiwgMTMsIDE0IG8gMTUgbml2ZWxlcy4gU29sbyBjYWJlIHVuYSBwcmVndW50YTogIGVzdG8gZXMgcG9rZXIgPwpZZXMsIHdlIGRvLiAKU2hvcnQgb2YgdGhhdCwgSSB3b3VsZCBzZWUgaWYgdGhlcmUgaXMgYW55b25lIGtub3dzIGEgcmVsaWFibGUgdGF4aSBkcml2ZXIgdGhhdCB3b3VsZCBiZSBva2F5IHdpdGggYmVpbmcgJ29uIGNhbGwnIGZvciB0aGlzIGtpbmQgb2YgdGhpbmcuIEkgaGF2ZSBhIGZyaWVuZCB0aGF0IGhpdCBpdCBvZmYgd2l0aCBhIHRheGkgZHJpdmVyIGFuZCBjYWxscyBoaW0gZGlyZWN0bHkgZm9yIGFpcnBvcnQgZmFyZXMuIApTdXBwb3NlZGx5IHRoZXJlIGJlZW4gYSB2ZXJiYWwgY29uZnJvbnRhdGlvbiBhbmQgdGhlIGp1ZGdlIGxldCBoaW0gb2ZmIHdpdGggYSBzbGFwIG9uIHRoZSB3cmlzdCBzdXBwb3NlZGx5IGJlY2F1c2UgaGUgY2xhaW1lZCBpdCB3YXMgaW4gdGhlIGhlYXQgb2YgdGhlIG1vbWVudCwgYnV0IGdhdGhlcmluZyB3b3JrZXJzIGFuZCB0aGVuIGdvaW5nIGxvb2tpbmcgZm9yIHRoZSBndXkgaXNuICJoZWF0IG9mIHRoZSBtb21lbnQiLiAKQmIxNDMyW1NBU10gTWF0dCBCb25uZXIKSSBtYXkgYmUgdW5pcXVlIHNpbmNlIHRoZSBzY2hvb2wgSSBncmV3IHVwIGluIHdhcyB2ZXJ5IHNlbGVjdGl2ZSBhbmQgd2UgaGFkIGEgZGlzcHJvcG9ydGlvbmF0ZWx5IGxhcmdlIHBlcmNlbnRhZ2Ugb2YgZ29vZCBJbmRpYW4gZ3V5cyBhbmQgdGhlIGhvdHRlc3QgZ2lybCBpbiB0aGUgZ3JhZGUgKGEgYmxvbmRlLCBpbnRlcmVzdGluZ2x5KSB3YXMgY3JhenkgZm9yIEluZGlhbiBndXlzIGFuZCBjaGVhdGVkIG9uIGhlciBJbmRpYW4gYm95ZnJpZW5kIHdpdGggYW5vdGhlciBJbmRpYW4gZ3V5IHNvIEkgZ3Vlc3MgSSBuZXZlciBoYWQgdGhlIHRob3VnaHQgdGhhdCBJbmRpYW4gZ3V5cyB3ZXJlIGluaGVyZW50bHkgdWdseSBvciBzb21ldGhpbmcuIApUYXZhcmVzIGdhdmUgdGhlbSBtb3JlIHRvIGNoZWVyIGFib3V0IHdoZW4gaGUgamFtbWVkIGluIGEgbG9vc2UgcHVjayBmb3IgaGlzIDM3dGggZ29hbCBvZiB0aGUgc2Vhc29uLCBnaXZpbmcgdGhlIExlYWZzIGFuIGVhcmx5IGxlYWQganVzdCA0OjIwIGludG8gdGhlIGdhbWUuCk1pY3JvZG9zaW5nIGlzIGEgbmV3IGlzaCB0ZWNobmlxdWUgd2l0aCB0aGUgcG90ZW50aWFsIHRvIGJlbmVmaXQgbWFueSBwZW9wbGUuIExldCBub3QgYWxsb3cgaXQgdG8gYmVjb21lIHBlcmNlaXZlZCBhcyBzb21lIG9sZCB0aXJlZCByaWRpY3Vsb3VzIGhpcHBpZSBzaGl0IHRoYXQgYmVlbiBhIGNsaWNoZSBmb3Igb3ZlciA1MCB5ZWFycy4gCkl0IGhhcnNoLCBidXQgbmVjZXNzYXJ5LiAKT2J2aW91c2x5IGFsbCBzZXRzIGFyZSBwb3NzaWJsZSBhbG9uZyB3aXRoIEpULCBidXQgSSBleHBlY3QgQUosIEtRLCBvciBBUWRkIGEgZ29vZCBwZXJjZW50YWdlIG9mIHRoZSB0aW1lLiBJZiB0aGUgM2Igb24gdGhlIGZsb3Agd2FzIGEgbm8gaGVzaXRhdGlvbiBzbmFwIGphbSB0cmlwcGluZyBvdmVyIGhpbXNlbGYgZ2V0dGluZyB0aGUgY2hpcHMgaW4sIHdlIGNhbiBsZWFuIG1vcmUgdG93YXJkcyBzaWdoIGZvbGRpbmcsIGJ1dCBJIHRoaW5rIHlvdSBwbGF5ZWQgdGhpcyBmaW5lLiAKRWxlbmNlbGkgYW5sYXIgc3VuYW4gb3l1biBheW4gemFtYW5kYSBkb2EgdmUgYWEgc2V2Z2lzaW5pIGRlIG9jdWtsYXJhIGFsYWQuIApCb2FyZCBDaGFpciBEYXZpZCBEZW5pc29uJ3Mgc2FsYXJ5IHdhcyBib29zdGVkIGZyb20gJDI2MCwwMDAgdG8gJDMzMCwwMDAsIHRoZSBkb2N1bWVudCBzaG93cy4KUmVhbGx5IEZ1biAgVGlwICAxOiBXaGVuIFlvdSBQbGF5ICwgWW91IEhhdmUgdG8gUGxheSBIYXBweS4gCkFuZCB0aGUgcGFzc2lvbiB3YWdnb24gcG90ZW50aWFsPyBPbmUgb2YgTmlnZWwncyBmb3JtZXIgYXBwcmVudGljZXMgcmF0aGVyIGZhbmNpZXMgc3BlbmRpbmcgaGlzIGhvbmV5bW9vbiBpbiB0aGUgc2hvd21hbidzIGNhYmluLgpKciBvZiBPY2N1cGF0aW9uYWwgYW5kIEVudmlybyBNZWQKVGhlcmUgYW4gYXBwIEkgdXNlIGNhbGxlZCBNb29kIE5vdGVzLiBJdCAkNC45OSBvbmUgdGltZSBmZWUuIApJbnNpZGUsIHRoZXJlJ3MgYSBoYWlyIHNhbG9uLCBhIG1hc3NhZ2Ugcm9vbSwgYSBzYXVuYSBhbmQgYSBzdGVhbSByb29tLiBBIHNwYWNpb3VzIGdhbWUgcm9vbSBmaXRzIGEgYmlsbGlhcmQgdGFibGUsIGEgd2FsayBhcm91bmQgYmFyIGFuZCBhbiBhbGNvdmUgd2l0aCBhcmNhZGUgZ2FtZXMuIFRoZXJlJ3MgYWxzbyBhIGhhbmRzb21lLCB3b29kIHBhbmVsZWQgbWVkaWEgcm9vbSB3aXRoIHBsdXNoIHNlYXRzIGFuZCBjYXJwZXRpbmcuIE1lYW53aGlsZSwgV2VsbHMnIHJlZCBvYWsgY2xhZCB3aW5lIHJvb20gaGFzIGEgaGlnaCB0ZWNoIGNvb2xpbmcgc3lzdGVtLgpXaGVuIHlvdSBjaG9vc2UgdG8gYmx1ZmYsIHlvdSdyZSBhY3R1YWxseSBob3BpbmcgdGhhdCBldmVyeW9uZSBlbHNlIGZvbGRzLiBJZiBhbnlvbmUgY2FsbHMgeW91J2xsIGJlIG9uIHRoZSBsb3NpbmcgZW5kIG9mIHRoZSByb3VuZC4uIApNZW4gYXJlIGJlZ2lubmluZyB0byBjaG9vc2Ugc2lkZWJ1cm5zIGFzIGEgd2F5IHRvIGZyYW1lIHRoZSBmYWNlIHdpdGhvdXQgaGF2aW5nIHRvIHJlc29ydCB0byBhIGZ1bGwgYmxvd24gYmVhcmQuIApJbSBub3QgZW50aXRsZWQgdG8gYW55b25lcyBtdXNpYy4gSSBuZXZlciBjbGFpbWVkIGFueXRoaW5nIGxpa2UgdGhhdC4gClRoZSBETVYgaGFzIHRvIG1ha2UgaXQgbG9vayBsaWtlIHRoZXkga25vdyB3aGF0IHRoZXkgZG9pbmcgYW5kIGtlZXBpbmcgYW4gZXllIG9uIHRoaW5ncywgYW5kIHRoZSBpbmR1c3RyeSBoYXMgdG8gcmVzcGVjdCB0aGF0LiAKTWVya2VsJ3MgTWFyY2ggMjAxNyB2aXNpdCB0byB0aGUgV2hpdGUgSG91c2Ugd2FzIG1hcmtlZCBieSBUcnVtcCBlaXRoZXIgbm90IGhlYXJpbmcgb3IgaWdub3JpbmcgaGVyIG9mZmVyIHRvIHNoYWtlIGhhbmRzIGluIHRoZSBPdmFsIE9mZmljZS4gQSBzdWJzZXF1ZW50IHZpc2l0IGluIEFwcmlsIHRoaXMgeWVhciB3YXJyYW50ZWQgb25seSBhIHdvcmtpbmcgbHVuY2ggZm9yIHRoZSBHZXJtYW4gbGVhZGVyLCBzZXZlcmFsIGRheXMgYWZ0ZXIgZmVsbG93IEVVIGxlYWRlciBNYWNyb24gZ290IHRoZSBmdWxsLCBmb3JtYWwgc3RhdGUgZGlubmVyIHRyZWF0bWVudCBmcm9tIFRydW1wLi4gClRoZSBpZGVhIGlzIHRvIHB1dCB5b3VyIGhhbmQgdG9nZXRoZXIgdXNpbmcgdHdvIGNhcmRzIG9ubHkgeW91IGNhbiBzZWUgYW5kIHVzZSwgd2l0aCBmaXZlIGNhcmRzIGV2ZXJ5b25lIGVsc2UgY2FuIHNlZSBhbmQgdXNlLiAKR29kIGtuZXcgd2hpY2ggb25lIHlvdSB3b3VsZCBjaG9vc2Ugd2hlbiB5b3Ugd2VyZSBnaXZlbiB0aGUgY2hvaWNlLiAKSSBtZWFuIHJpZ2h0IG5vdyBub2JvZHkgaGFzIHNlZW4gaXQgYnV0IGl0IGEgZ2FzIHRocnVzdGVyIHdoaWNoIG1lYW5zIGl0IGV4cGVscyBnYXMgYXQgdmVyeSBoaWdoIHZlbG9jaXR5IHRvIHByb2R1Y2UgdGhydXN0LiBUaGUgbWFzcyBhbmQgdmVsb2NpdHkgb2YgdGhlIGdhcyBpcyBiaWcgZW5vdWdoIHRvIGFjY2VsZXJhdGUgdGhlIGNhciBvciBjaGFuZ2UgaXQgdHJhamVjdG9yeSB3aGljaCBtZWFucyBpdCB3b3VsZCBhbHNvIGVhc2lseSBiZSBlbm91Z2ggdG8gbGl0ZXJhbGx5IGJsb3cgYXdheSBhbnlib2R5IHN0YW5kaW5nIG5leHQgdG8gaXQuIElmIGRpcnQgZ2V0IG9udG8vaW50byB0aGUgbm96emxlIGl0IHdvdWxkIGxpa2VseSBiZWNvbWUgYSBzaG90Z3VuLi4gCllvdSBmaW5hbGx5IGdldCBBQSBhbmQgYXJlIGdvaW5nIHRvIHNob3cgbWUgd2hvIGJvc3MgYW5kIEkgZmxvcCBhIHNldCBvZiAyMiBhbmQgc3RhY2sgeW91IGFuZCB0aGVuIHlvdSB0aWx0IHNvbWUgbW9yZS4gCk9sZE1hdGVEYXdnICAgNiBwb2ludHMgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCkJ1dCB5b3UgaGF2ZSBzdWdnZXN0ZWQgaXQgd2FzIHRoZSB0cnVja3MgZmF1bHQsIHRoYXQgbG9hZHMgY291bGQgYmUgc3BsaXQgYW5kIHNtYWxsZXIgdmVoaWNsZXMgdXNlZC4gRGlmZmVyZW50IHJvdXRlIG1heWJlPyBUaGUgZmFjdCBpcyBub24gb2YgdGhhdCBtYXR0ZXJzLiAKSGVyZSB0aGVuLCBhcmUgdGhlIGJlc3QgYmVhY2ggdmFjYXRpb25zIG9uIHRoZSBBdGxhbnRpYy4uIApTdCBDbGVyYW5zIHdhcyBpbiBmYWN0IHR3byBidWlsZGluZ3M6IFRoZSBMaXR0bGUgSG91c2UgKGZvcm1lcmx5IHRoZSBzdGV3YXJkIGhvdXNlICksIGJlc2lkZSB0aGUgc3RhYmxlcywgd2FzIHdoZXJlIFJpY2t5LCBUb255LCBBbmplbGljYSBhbmQgYSBudXJzZSBsaXZlZDsgd2hpbGUgdGhlIEJpZyBIb3VzZSwgcmVub3ZhdGVkIGJ5IE1pY2hhZWwgU2NvdHQsIHdhcyBmaWxsZWQgd2l0aCBIdXN0b24gdHJlYXN1cmVzIHdoaWNoIGhlIGhhZCBhY2NydWVkIGR1cmluZyBoaXMgdHJhdmVscy4gV2hlbiBIdXN0b24gd2FzIGhvbWUgaGUgd291bGQgc3RheSBpbiB0aGUgQmlnIEhvdXNlLiAKSW5jb21pbmcgc2VhcmNoIHRlcm1zOiBQaWN0dXJlcyBvZiBTZXh5IEFuZCBJIEtub3cgSXQsIFNleHkgQW5kIEkgS25vdyBJdCBQaW50ZXJlc3QgUGljdHVyZXMsIFNleHkgQW5kIEkgS25vdyBJdCBGYWNlYm9vayBJbWFnZXMsIFNleHkgQW5kIEkgS25vdyBJdCBQaG90b3MgZm9yIFR1bWJsci4gSXQgb2Z0ZW4gdGFrZXMgYSBsb3QgdG8gc3RheSB3aXRoIHlvdXIgaW5uZXIgZ29kZGVzcywgc3RheSB3aXRoIHlvdXIgc2Vuc3VhbGl0eSwgd2hlbiBleHBsb3JpbmcgdGhlIGZpZWxkIG9mIHNlZHVjdGlvbiwgYXMgeW91IGhhdmUgdG8gcmVtZW1iZXIgdGhhdCB5b3VyIGhlYXJ0IGlzIGJlYXV0aWZ1bCB3aGV0aGVyIHlvdXIgZWdvIGNvbWVzIGluIGFuZCBkZXN0cm95cyB0aGUgZGFuY2UgeW91IGp1c3QgcHJlcGFyZWQgYnkgbWFraW5nIHlvdSB0cmlwIHVwLCBvciB5b3UgZG8gdGhlIHBlcmZlY3QgZGFuY2UuIApHcm93aW5nIHVwIGluIFdvbHZlcmhhbXB0b24gaW4gdGhlIGVhcmx5IDcwcyBoZSB3YXMgYSBQZW5kZWZvcmQgSGlnaCBTY2hvb2wgcHVwaWwgc2V0IHRvIHdvcmsgYXQgbG9jYWwgZmlybSBMdWNhcyBBZXJvc3BhY2UsIHdoZW4gaGUgdHVybmVkIHRvIGdhbWJsaW5nIHRvIG1ha2UgYSBsaXZpbmcuCkF0IHRoZSBiaXJ0aCBvZiBtb2Rlcm5pdHksIGFzIHRoZSBydWxpbmcgY2xhc3NlcyBzZXBhcmF0ZWQgdGhlbXNlbHZlcyBmcm9tIHRoZSB3b3JraW5nIGNsYXNzZXMgYW5kIHBvb3IsIHRoZXkgbWFya2VkIHBvb3Igd29tZW4gYXMgbm90IGFzIGdvb2QgYXMgbWlkZGxlIGNsYXNzIHdvbWVuLCB3aG8gd2VyZSBhbHNvIGtub3duIGFzIGxhZGllcy4gV2VyZSBiZXR0ZXIgYmVjYXVzZSB0aGV5IHdlcmUgbW9yZSBwdXJlLCBtb3JlIGlubm9jZW50LCBhbmQgc2V4dWFsbHkgYmxhbmsuIE90aGVyIHdvcmRzLCBsYWRpZXMgKGxpa2UgY2hpbGRyZW4pIHdlcmUgdGhlIHBlcmZlY3QgdmljdGltcy4uIApBIGxvdCBvZiBwZW9wbGUgdHVybiBkb3duIEJNV3Mgb24gaGVyZSAgIGlmIHlvdSByZWFsbHkgd2FudCB0byBkZXBlbmQgb24gdGhlbSBhcyBhIGRhaWx5IEkgdGVuZCB0byBhZ3JlZS4gSG93ZXZlciBoYXZpbmcgdGFrZW4gaW4gYW4gRTQ2IGZyb20gbXkgZ3JhbmRmYXRoZXIsIEkgZmluZCB0aGVtIEVYVFJFTUVMWSBlYXN5IHRvIHdvcmsgb24gYW5kIHdlbGwgZG9jdW1lbnRlZC4gQ29uc2lkZXJpbmcgdGhleSBhIG5pY2UgbWl4IG9mIGNvbWZ5LCBoYW5kbGluZywgcG93ZXIsIGFuZCBtaWxlYWdlLCBJIHRoaW5rIHRoZXkgZml0IHdoYXQgeW91IGxvb2tpbmcgZm9yIGZhaXJseSB3ZWxsLiAKR29pbmcgYmFjayB0byBCb3N0b24sIGhlIGdvdCBraWNrZWQgb3V0IHdpdGhpbiB0aGUgZmlyc3QgY291cGxlIG9mIHNoaWZ0cywgTWFybGVhdSBzYWlkIHdpdGggYSBzbWlsZS4gVHJ5IG5vdCB0byBkbyB0aGF0LiAKSXQganVzdCByZXR1cm5zIHRoaW5ncyB0byBob3cgdGhleSB3b3JrZWQgYmVmb3JlIHRoZXJlIHdhcyBhbiBpbmNvbWUgdGF4IGFuZCBhIGZpYXQgZWNvbm9teS4gCkZ1cnRoZXJtb3JlLCBtYW55IHVzZXJzIHByZWZlciBQb3N0Z2VTUUwgb3ZlciBNeVNRTCBvciBhbHJlYWR5IGhhdmUgUG9zdGdyZVNRTCBpbnN0YWxsZWQuIApUaGUgdHVybiBpcyBwcmV0dHkgc2FmZSwgYW5kIGhlIGNoZWNrcy4gSSB0aG91Z2h0IHRoYXQgd2FzIHdlaXJkLCB0aGlua2luZyBtYXliZSBoZSB3YXMgaG9waW5nIGZvciBhIGZyZWUgcml2ZXIgb24gYSBkcmF3LCBzaW5jZSBoZSBjb3VsZCB0ZWxsIEkgd2FzIGEgbGl0dGxlIHVuY29tZm9ydGFibGUgYW5kIG1pZ2h0IGNoZWNrIGJhY2suIApIb3JyaWZpZWQsIHNoZSB0b29rIGEgY2xpZW50J3MgYWR2aWNlIGFuZCByZWFjaGVkIG91dCB0byBNYW5oYXR0YW4gZGVybWF0b2xvZ2lzdCBNYXJpbmEgUGVyZWRvIHRvIGJhbmlzaCB0aGUgYmxvYXQuICJJIHNlbnQgcGljdHVyZXMgdG8gaGVyIG9mZmljZSBhbmQgdGhleSBzcXVlZXplZCBtZSBpbiBmb3IgYW4gYXBwb2ludG1lbnQsIiBXb29kd29ydGggc2F5cy4gCldpciBoYWJlbiBkYWZyIGVpbiBzcGV6aWVsbCBkYWZyIGVudHdpY2tlbHRlcyBQcm9ncmFtbSB2ZXJ3ZW5kZXQsIGluIHdlbGNoZXMgd2lyIGRpZ2l0YWwgYWxsZSBmciBkZW4gWnVnYW5nIG5vdHdlbmRpZ2VuIEluZm9ybWF0aW9uZW4gaGludGVybGVndCBoYWJlbi5BbnNjaGxpZWVuZCBoYWJlbiB3aXIgZGFzIERpbmcgYXVzZ2VkcnVja3QsIHVudGVyc2NocmVpYmVuIGxhc3NlbiwgdW5kIHBlciBIYXVzcG9zdCBuYWNoIEluZ29sc3RhZHQgZ2VzY2hpY2t0LldpciB3YXJ0ZW4gc2VpdGRlbSBhdWYgQW50d29ydC5EaWdpdGFsaXNpZXJ1bmcgdHRlIGRlbSBMYWRlbiBlY2h0IGd1dC4gCk1hY0N1bGxvY2gsIEd1eSBNdXJwaHksIEVydmluIEpvaG5zb24sIFJheSBDbGFyaywgTWFydmluIFNwZWVyLCBQYWxtZXIgR2lsYmVydHNvbiwgQy4gTS4gCjEwIFJlc3RhdXJhbnRzLCAxIHBvb2wsIDEgaGVhbHRoIHNwYSBhbmQgc2Fsb24sIDUgc2hvcHMsIDExIGJ1cyBiYXlzClRoaXMgcGxhbmV0IHdhcyBjaG9zZW4gc3BlY2lmaWNhbGx5IGJlY2F1c2UgYSByZWFkeSBiYWtlZCwgaHVtYW4gaGFiaXRhYmxlIHdvcmxkIHdhcyBhIG11Y2ggbW9yZSBhdHRyYWN0aXZlIHByb3NwZWN0IHRvIGNvbW1lcmNpYWwgYW5kIG5hdGlvbmFsIHNldHRsZW1lbnQgcHJvamVjdHMsIGFuZCBpbiB0aGUgZWFybGllc3QgZXJhIG9mIG9mZndvcmxkIHNldHRsZW1lbnQgZXZlbiBwYXJ0aWFsIHRlcnJhZm9ybWluZyB3YXMgYSBzb21ld2hhdCBsYWJvcmlvdXMgYW5kIGV4cGVuc2l2ZSBwcm9zcGVjdCB3aGVuIGNvbXBhcmVkIHdpdGggdGhlIHByZXNzaW5nIG5lZWQgdG8gZmluZCBodW1hbiBiZWluZ3MgaG9tZXMuLiAKRGVzcGl0ZSBmZWF0dXJpbmcgaW4gdGhlIFdvcmxkIFR3ZW50eTIwLCBUYWl0IGhhZCBub3QgcGxheWVkIGluIGFuIE9ESSBzaW5jZSBlYXJseSAyMDA5IHdoZW4gaGUgd2FzIGRyYWZ0ZWQgaW50byB0aGUgQXVzdHJhbGlhIHNxdWFkIG1pZHdheSB0aHJvdWdoIHRoZSByZWNlbnQgc2VyaWVzLiBNaW5kZnVsIG9mIGhpcyBzdXNjZXB0aWJpbGl0eSB0byBpbmp1cnksIFJpY2t5IFBvbnRpbmcgdXNlZCBoaW0gaW4gZml2ZSB0d28gb3ZlciBidXJzdHMgaW4gdGhlIHRoaXJkIG1hdGNoIGF0IE9sZCBUcmFmZm9yZCwgYmVmb3JlIGluY3JlYXNpbmcgdGhlIGxlbmd0aCBvZiBoaXMgc3BlbGxzIGFzIHRoZSBzZXJpZXMgcHJvZ3Jlc3NlZC4uIApFZGl0OiBJIGRpZG4gaW50ZW5kIGZvciB0aGUgIndob2xlIGxpZmUiIHRoaW5nIHRvIGNvbWUgb2ZmIGFzIGl0IGRpZCwgYnV0IEkgZ29pbmcgdG8gbGVhdmUgaXQgaW4gICBJIG1lYW50IHRoYXQgdGhlIGFuaW1hbCBpcyByYWlzZWQgKGZvciBtZSkgdG8gZWF0IGl0LgpJZiB5b3UgY2FuIGZpZ3VyZSBvdXQgdGhhdCBtb3N0IGNvbnZlcnNhdGlvbnMgZ28gZG93biB0aGVzZSBmYWlybHkgcHJlZGljdGFibGUgcGF0aHMsIHlvdSBjYW4gZmlndXJlIG91dCBhbG1vc3QgYm9pbGVyIHBsYXRlLCBwcmVkZXRlcm1pbmVkIHJlc3BvbnNlcy4gTm8gb25lIHdpbGwgbm90aWNlIGlmIHlvdSBzYXkgdGhlIHNhbWUgdGhpbmdzIGluIGVhY2ggb2YgdGhlc2Ugc2l0dWF0aW9ucyBvciBtYWtlIHRoZSBzYW1lIGpva2VzLiBTb21ldGltZXMganVzdCBhc2tpbmcgYSBmZXcgcXVlc3Rpb25zIGFuZCB0aGVuIG5vZGRpbmcgYXQgYSByZXNwb25zZSBpcyBlbm91Z2ggdG8gbWFrZSB0aGUgcGVyc29uIGZlZWwgeW91IGFyZSBpbnRlcmVzdGVkIGFuZCBub3Qgc29jaWFsbHkgaW5hZGVxdWF0ZS4gCldoZW4gSmVzcyBjb21lcyBob21lLCBNaWNoYWVsIGlzIHVzdWFsbHkgd2FpdGluZyBmb3IgaGVyIHdpdGggYSBkcmluayBvciBkaW5uZXIuIFRoZXkgcXVhcnJlbCBnb29kIG5hdHVyZWRseSBhbmQgdG91Y2ggZWFjaCBvdGhlciBsb3ZpbmdseSBkdXJpbmcgY29udmVyc2F0aW9uLiBUaGV5IGxlYWQgYSBub3JtYWwgbGlmZSwgdGhleSBzYXksIGFuZCB0aGVyZSBpcyBubyByZWFzb24gZm9yIGFueW9uZSB0byBzdXNwZWN0IGFueSBkaWZmZXJlbnQuIEplc3MgaGVhZHMgdG8gaGVyIHN0dWRpbywgTWljaGFlbCBoZWFkcyB0byBoaXMgY29tcHV0ZXIgd2l0aCBhIG11ZyBvZiBjb2ZmZWUsIHRoZSBraWRzIGdvIHRvIHNjaG9vbC4gVGhlIG1vcnRnYWdlIGdldHMgcGFpZCBhbmQgbGlmZSBnb2VzIG9uLgpUaGUgYnVpbGRpbmcgaXRzZWxmIGlzIG5vdCB0aGVpciBjb25jZXJuIHJlYWxseS4gUHJvdGVjdCBsaWZlLCBwcm90ZWN0IHRoZSBzcHJlYWQgb2YgZGVzdHJ1Y3Rpb24uIFRoZSBidWlsZGluZyBpcyBhbHJlYWR5IGRhbWFnZWQuLiAKSSBnb2luZyB0byByZXZpZXcgeW91ciBwb3N0IG5vdy4uIApIZSBhZGRlZCB0aGF0IHRoZSBjb21wYW55IHdpdGggdGhlIGJlc3QgaW5mcmFzdHJ1Y3R1cmUgdG8gZW5hYmxlIGNvbm5lY3RlZCBhcHBsaWNhdGlvbnMgd2lsbCB3aW4uLiAKVGhleSBsaXZlIHVwIHRoZXJlIGZvciBhIHNob3J0IHRpbWUgdG8gcGxheSBpbiB0aGUgc25vdyBhbmQgdGhlIG1vdW50YWlucy4gWW91IGNhbid0IG1vdGl2YXRlIHRob3NlIHBlb3BsZSB0byBtYWtlIGFuIGVmZm9ydCB3aGVuIHRoZXkgYXJlIHNvIHNob3J0IHNpZ2h0ZWQuIERUUiBpcyBzdGlsbCB3aW5uaW5nIGF3YXJkcyBhbmQgYWNjb2xhZGVzIGV2ZXJ5IHllYXIsIHNvIG9idmlvdXNseSBzb21ldGhpbmcgaXMgd29ya2luZyBmb3IgdGhlbS4uIApMZXMgcmFwcG9ydHMgZW50cmUgRXVyb3BlbnMgZXQgQWZyaWNhaW5zIHNlcm9udCBkb25jIHBlbmRhbnQgbG9uZ3RlbXBzIGNldXggZGUgZG9taW5hbnRzICBkb21pbnMuLiAKSWYgdGhlcm1vbnVjbGVhciByZWFjdGlvbnMgYXJlIHRvIGJlIGluaXRpYXRlZCBvbiBlYXJ0aCwgb25lIG11c3QgdGFrZSBpbnRvIGNvbnNpZGVyYXRpb24gdGhhdCBhbnkgbnVjbGVhciBlbmVyZ3kgcmVsZWFzZWQgd2lsbCBiZSBjYXJyaWVkIGF3YXkgcmFwaWRseSBieSByYWRpYXRpb24sIHNvIHRoYXQgaXQgd2lsbCBub3QgYmUgcG9zc2libGUgdG8ga2VlcCB0aGUgdGVtcGVyYXR1cmUgaGlnaCBmb3IgYSBsb25nIHRpbWUuIFRoZXJlZm9yZSwgaWYgdGhlIHJlYWN0aW9uIGlzIHRvIHByb2NlZWQgYXQgYWxsLCBpdCBtdXN0IHByb2NlZWQgdmVyeSBxdWlja2x5LiAKSGUgYmVjYW1lIGZhbW91cyBmb3IgY3JlYXRpbmcgbWFwIGFuZCBhIGdsb2JlIG9mIHRoZSB3b3JsZCBmb3IgTnVyZW1iZXJnIGNpdHkgY291bmNpbCBpbiAxNDkwIDE0OTIuLiAKS2ltIGxvb2tlZCBzbGlnaHRseSB0YWtlbiBhYmFjayBieSBoZXIgcmVhY3Rpb24sIGFuZCBNaWxsZXIgY2hpbWVkIGluIGFuZCBzYWlkIHNoZSBpcyBmbHVlbnQgaW4gRW5nbGlzaC4KV2hlbiBFbmdsYW5kIGxhc3QgdG91cmVkIEF1c3RyYWxpYSwgaW4gMjAwNiAwNywgdGhlIGd1bGYgYmV0d2VlbiB0aGUgc2lkZXMgdHVybmVkIG91dCB0byBiZSB5YXduaW5nLCBhcyBXYXJuZSBhbmQgR2xlbm4gTWNHcmF0aCBzaWduZWQgb2ZmIGZyb20gVGVzdCBjcmlja2V0IGJ5IHNlYWxpbmcgYSA1IDAgd2hpdGV3YXNoIGluIHRoZWlyIGZpbmFsIG1hdGNoIGF0IFN5ZG5leS4gSnVzdGluIExhbmdlciBhbHNvIGJvd2VkIG91dCBpbiB0aGF0IGdhbWUsIGFuZCB3aXRoIEFkYW0gR2lsY2hyaXN0IGFuZCBNYXR0aGV3IEhheWRlbiBmb2xsb3dpbmcgc3VpdCBwcmlvciB0byBsYXN0IHN1bW1lcidzIHJlbWF0Y2gsIEF1c3RyYWxpYSdzIGdvbGRlbiBnZW5lcmF0aW9uIGhhdmUgYWxsIGRlcGFydGVkIHRoZSBzY2VuZSwgd2l0aCB0aGUgbm90YWJsZSBleGNlcHRpb24gb2YgdGhlIGN1cnJlbnQgY2FwdGFpbiwgUmlja3kgUG9udGluZy4KIkkndmUgbmV2ZXIgaGFkIGFueSBjb252ZXJzYXRpb25zIHdpdGggYW55Ym9keSBhYm91dCB0aGF0IGF0IGFsbC4gSXQgd291bGQgYmUgd3JvbmcgZm9yIG1lIHRvIHJ1biBpZiBJIGludGVuZGVkIHRvIGRvIHRoYXQgd2l0aG91dCB0ZWxsaW5nIHBlb3BsZS4iQ2FsZW5kYXIgOSBTYXQxMCBTdW4xMSBNb24xMiBUdWUxMyBXZWQgTWFuaWxvdyBMYXMgVmVnYXM6IFRoZSBIaXRzIENvbWUgSG9tZSEgV2VzdGdhdGUgTGFzIFZlZ2FzIENhc2luby4gCldoZW4gSSBzYXkgInNpbXBsaWZpZWQiLCBJIG1lYW4gcmVtb3ZlZCBjb2x1bW5zIGZyb20gdGhlIHNlbGVjdCBsaXN0IGFuZCBvbmx5IHB1dCBvbmUgam9pbiBjcml0ZXJpYSBmb3IgdGhlIHNha2Ugb2YgYnJldml0eS4gClNheXMgQ2FyZXksICJGYXNjaWEgYWRhcHRzIHRvIGV2ZXJ5IG1vdmUgeW91IG1ha2UgICBnb29kLCBiYWQgb3IgaW5kaWZmZXJlbnQuIiBPdmVyIHRpbWUsIGEgY29tcGV0aXRpdmUgcm93ZXIsIGZvciBleGFtcGxlLCBtaWdodCBkZXZlbG9wIHRoaWNrZXIgZmFzY2lhIGluIGhlciBiYWNrIGFuZCBzaG91bGRlcnMgdG8gc3VwcG9ydCB0aGUgcmVwZXRpdGl2ZSBtb3ZlbWVudCBvZiBwdWxsaW5nIG9hcnMuIApJIHdhcyB0cmFpbmluZyB0byBiZWNvbWUgYSBnZW5lcmFsIG1hbmFnZXIgb2YgYSB2YXBlIHNob3AgbGFzdCB5ZWFyLCBidXQgc2FkbHkgdGhleSBjbG9zZWQgdGhlaXIgZG9vcnMgZHVlIHRvIGNvbmNlcm5zIHRoYXQgYSBmbGF2b3IgYmFuIHdvdWxkIGhpdCBhbmQgdGhlIHNob3Agd291bGQgZ28gdW5kZXIgZmluYW5jaWFsbHkuIApIdW5nYXJ5LiBLbm93aW5nIHdoYXQgSSBrbm93IG5vdywgYW5kIGhhdmluZyBzcG9rZW4gdG8gb3RoZXIgbW9tcyBoZXJlLCBJIHNob3VsZCBoYXZlIGp1c3QgYXNrZWQgZm9yIGFuIGVsZWN0aXZlIGMgc2VjdGlvbiBmcm9tIHRoZSBiZWdpbm5pbmcgKGJhc2VkIG9uIGJhYnkncyBwb3NpdGlvbiBhdCB3ZWVrIDMzIFVTLCBzaG91bGQgaGF2ZSBrbm93biBzaGUgd2Fzbid0IGhlYWRlZCBmb3IgdGhlIGV4aXQhKS4gCk9uY2UgdGhleSBoYXZlIGEgbWluaW11bSBvZiA3NTAgaG91cnMgb2YgY291cnNlIHdvcmsgYW5kIDI1MCBob3VycyBvZiB3b3JrIGV4cGVyaWVuY2UsIHRoZXkgY2FuIHRha2UgdGhlIGNlcnRpZmljYXRpb24gZXhhbSB0aHJvdWdoIHRoZSBOYXRpb25hbCBDZXJ0aWZpY2F0aW9uIEJvYXJkIGZvciBUaGVyYXBldXRpYyBNYXNzYWdlIEJvZHl3b3JrLiAKNi4gCjkwJSBvZiB0aGUgc2V4dWFsIHJlbGF0aW9uc2hpcHMgZ29pbmcgb24gaW4gaGlnaCBzY2hvb2wgc3VjY2Nra2trLiAKJydTb21lIHBlb3BsZSB3aWxsIGdldCBpbiBzdHJpZmUgc28gdGhleSB0cnkgdG8gZ2FtYmxlIHRoZWlyIHdheSBvdXQgb2YgdHJvdWJsZSBhbmQgb2J2aW91c2x5IHRoZXkgZG9uJ3Qgc3VjY2VlZCwnJyBoZSBzYWlkLiAnJ1RoZSBwZW9wbGUgd2UgcmVhbGx5IHdvcnJ5IGFib3V0IGFyZSB0aGUgcGVvcGxlIG9uIGxvdyBpbmNvbWVzIHdobyBsb3NlIHRoZWlyIHdlZWtseSBtb25leSBpbiBvbmUgYWZ0ZXJub29uIG9uIHRoZSBwb2tlciBtYWNoaW5lcywgaXQncyB2ZXJ5IHNhZCBhbmQgdmVyeSBkZXN0cnVjdGl2ZS4gCiJUaGUgYW1vdW50IG9mIG1vbmV5IHRha2VuIHdhcyB0aGUgZ3JhbmQgc3VtIG9mICQxMSwiIE1yIEhlbXNsZXkgc2FpZC4gCkkgZmVlbCB3ZWxsIGNvbm5lY3RlZCwgYnV0IHdoZW4gSSByZWZsZWN0IGJhY2sgb24gdGhlIHBhcmVudHMgd2hvIHdlcmUgYnVzeSBvbiB0aGVpciBjZWxscGhvbmVzLCBJIGhhdmUgdG8gYXNrIG15c2VsZiwgSSBzbyBjb25uZWN0ZWQsIHRoYXQgSSBtYXkgYmUgZGlzY29ubmVjdGVkPyBiZWxpZXZlIHRoZSBhbnN3ZXIgaXMgeWVzLiBNeSBwaG9uZSBzZW5kcyBtZSBhIEJpYmxlIHZlcnNlIG9mIHRoZSBkYXksIGFuZCBJIGhhdmUgYW4gYXBwIHRvIHJlbWluZCBtZSB0byBwcmF5IGFuZCBldmVuIGdpdmVzIG1lIGEgbGlzdCBvZiBpZGVhcyBmb3Igd2hpY2ggdG8gcHJheS4KSmltOiBZZWFoIHRoZXJlIHdhcy4gCk1pbmltdW0gd2FnZS4gWW91IHRvbyBjYW4gYmUgYSBmdWNraW5nIGlkaW90IGFuZCBkbyBub3RoaW5nLCBhbmQgZ2V0IHBhaWQgdGhlIHNhbWUgYXMgc29tZW9uZSB3aXRoIGEgdXNlZnVsIHNraWxsc2V0LCBlZHVjYXRpb24sIGFuZCB0cmFpbmluZy4gV2h5IHdvcmsgaGFyZD8gV2h5IHdvcmsgYXQgYWxsPwpGb3IgMjQgaG91ciBzdXBwb3J0IGNhbGwgVGhlIEdhbWJsaW5nIEhlbHBsaW5lIG9uIDE4MDAgODU4IDg1OC4KTWFzc2FnZSBFbnZ5IGlzIGRlZGljYXRlZCB0byBwcm92aWRpbmcgcHJvZmVzc2lvbmFsIGFuZCBhZmZvcmRhYmxlIHRoZXJhcGV1dGljIG1hc3NhZ2UgYW5kIHNwYSBzZXJ2aWNlcyB0byBjb25zdW1lcnMgd2l0aCBidXN5IGxpZmVzdHlsZXMgYXQgY29udmVuaWVudCB0aW1lcyBhbmQgbG9jYXRpb25zLiBNYXNzYWdlIEVudnkgb2ZmZXJzIGludHJvZHVjdG9yeSBvbmUgaG91ciBtYXNzYWdlIHNlc3Npb25zIHN0YXJ0aW5nIGF0ICQ0OSBhbmQgaGFzIGEgbWVtYmVyc2hpcCBtb2RlbCBmb3IgdGhvc2UgdGhhdCB3YW50IHRvIHRha2UgYWR2YW50YWdlIG9mIHNwZWNpYWxseSBwcmljZWQgbW9udGhseSBtYXNzYWdlcy5NZW1iZXJzIGFuZCBndWVzdHMgY2FuIGFsc28gY2hvb3NlIGZyb20gZm91ciBNdXJhZCBIZWFsdGh5IFNraW4gRmFjaWFscyBvZmZlcmVkIGV4Y2x1c2l2ZWx5IGF0IE1hc3NhZ2UgRW52eSBTcGEuIApOaWNob2xmcml0eiB1CjEuIFRyeSBsb29zZW5pbmcgdGhhdCBmcm9udCBwYXJ0IGFzIG11Y2ggYXMgeW91IGNhbi4KSSBzdGlsbCBvbmx5IHNsZWVwIDYgNyB1bnJlc3RmdWwgaG91cnMsIGJ1dCBJIGdhdmUgdXAgbmlnaHQgbGlmZSBhZnRlciBtYXJyaWFnZS4gCkl0IHdpbGwgZ28gYXJvdW5kLiBXaGVuIHRoZSBwZXJzb24gaG9sZGluZyBvbiBpcyBhYm92ZSB0aGUgc2lnbiBhbmQgdGhlIG9uZSBpbiB0aGUgY2FydCBpcyBhYm92ZSB0aGUgbGV2ZXIsIGNsaWNrIG9uIHRoZSBvbmUgaG9sZGluZyBvbiB1bnRpbCB0aGV5IGZhbGwgb2ZmLiBUaGV5IHdpbGwgYWxsIGRpZS4gCk1haXMgZ2xvYmFsZW1lbnQsIGplIHN1aXMgZCBjZWxhIG4gcmllbiBkZSBzb3JjaWVyLCBsZXMgaW5ncmRpZW50cyBzb250IHNpbXBsZSBldCBpbCBmYXV0IHVuIHBldSBsZSBjb3VwIGRlIG1haW4gZXQgdm9pbC4gQm9uIGVuIHBsdXMsIG1vbiBwb3RlICB1bmUgcGllcnJlIHBvdXIgbGVzIGZhaXJlIGN1aXIgcHJvcHJlbWVudCBhdSBmb3VyLiAKT2YgdGhlIGFib3ZlLCB0aGUgbGVnIGVsZXZhdGlvbiBhbmQgY29tcHJlc3Npb24gZ2FybWVudHMgYXJlIHdoYXQgSSd2ZSBmb3VuZCB0byBiZSBiZXN0LiBJZiB5b3UgZG9udCBoYXZlIGEgcGVyc29uYWwgbWFzc3VzZSwgc3RyZXRjaGluZyBpcyB0aGUgbmV4dCBiZXN0IHRoaW5nLiAKTGliZXJhbCBncm91cHMgYW5kIGd1biByaWdodHMgYWR2b2NhdGVzIHdvdWxkIGhhdmUgYSBQUiBmaWVsZCBkYXkgcGxheWluZyAid2hhdCBpZiIsIGluc3VyYW5jZSBwcmljZXMgd291bGQgc2t5cm9ja2V0LCBwYW5pYyBhbmQgc2hlZXIgdGVycm9yIHdvdWxkIGdyaXAgdGhvc2Ugd2hvIGtub3cgdGhleSB3b3VsZCBuZXZlciBzdGFuZCBhIGNoYW5jZSwgZmFtaWxpZXMgd291bGQgYnJlYWsgZG93biBhcyBhcmd1bWVudHMgcmFnZSBvdmVyIHdobyB3b3VsZCBwYXJ0aWNpcGF0ZSBhbmQgd2hvIHdvdWxkIG5vdC4gCklmIEkgZGlkLCB5b3Ugd291bGQgY2hhbmdlIHlvdXIgdHVuZSBwcmV0dHkgcXVpY2tseS4gCldoZW4gYW4gYW5pbWFsIGlzIHN0cmVzc2VkLCB3YXRjaCBmb3IgaXQgdHJ5aW5nIHRvIGNoZXcgb24gYmFycyBvciBkb2luZyBvdGhlciB3ZWlyZCBzaGl0LiBTdGVyZW90eXBlIGJlaGF2b2lyIGlzIFRIRSB3YXkgdG8gc2VlIGlmIGFuIGFuaW1hbCBpcyBzdHJlc3NlZCBvciBub3QuIApUaGUgR2lhbnRzIGp1c3QgbG9hZGVkIHRoZSBiYXNlcyB3aXRoIG5vIG91dHMsIGFuZCBQYWRyZXMgbWFuYWdlciBCdWQgQmxhY2sganVzdCByZXBsYWNlZCByaWdodCBoYW5kZWQgc3RhcnRlciBKb3NoIEJhbmtzIGZvciBsZWZ0eSBKdXN0aW4gSGFtcHNvbi4uIApJdCBzYWQgc29tZW9uZSB3b3VsZCBtYWtlIHVwIGEgc3RvcnkgbGlrZSB0aGF0LiBFc3BlY2lhbGx5IHVzaW5nIGEgZGVhZCBiYWJ5IGFzIGEgcGxvdCBkZXZpY2UuIFRoZXkgYSBjZXJ0YWluIGhlYXJ0YnJlYWsgd2hlbiB5b3UgbG9zZSBhIGNoaWxkIHRoYXQgY2FuIGJlIGZha2VkLgpZb3UgcmlnaHQuIEkgZG8gbmVlZCB0byB0YWxrIHRvIGFuIGF0dG9ybmV5LiAKWW91J2QgYmUgc3VycHJpc2VkIHdoYXQgcG9wcyB1cC4gCk1haW5lYmxhY2tiZWFyICAzMiBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpOZXVsaWNoIGJlaSBkZXIgVGhhaSBNYXNzYWdlCllvdSBoYXZlIGp1c3QgZG9uZSBpcyBkZXNjcmliZSBleGFjdGx5IHRoZSB0cmFpbiBvZiB0aG91Z2h0IHRoYXQgY2FuIGxlYWQgTEUgdG8gbWFuaXB1bGF0ZSBldmlkZW5jZS4gCkF0IHRoaXMgcG9pbnQsIGl0J3MgaW50ZXJlc3RpbmcgdG8gY29tcGFyZSB0aGUgc2l0dWF0aW9uIGluIE9yZWdvbiB3aXRoIHRoYXQgb2YgYSBjb3VudHJ5IHdoZXJlIGdhbWJsaW5nIGhhcyBiZWVuIGxlZ2FsIGZvciBtYW55IHllYXJzLiBPdmVyIGluIHRoZSBVSywgdGhlIGZpcnN0IGxpY2Vuc2VkIGJldHRpbmcgc2hvcHMgd2VyZSBzZXQgdXAgaW4gdGhlIGVhcmx5IDE5NjBzIHNvIHRoYXQgd2hlbiB0aGUgZGlnaXRhbCBhZ2UgYXJyaXZlZCBzb21lIDMwIHllYXJzIGxhdGVyLCB0aGUgY291bnRyeSB3YXMgcmVhZHkgZm9yIHRoZSBuZXcgcmV2b2x1dGlvbiBpbiBvbmxpbmUgcGxheS4uIApBbmQgbm8gbWF0dGVyIGhvdyBjYXJlZnVsIHlvdXIgbW92ZXMsIHRoZSBwcm9ncmVzcyBvZiB5b3VyIG93biBjb21wYW55IHdpbGwgbGlrZWx5IGNvbWUgd2l0aCBzb2FyaW5nIGhpZ2hzIGFuZCBndXQgd3JlbmNoaW5nIGRpdmVzLiAKVGhlIFdQVCBUT0MgaXMgc2xhdGVkIHRvIHRha2UgcGxhY2Ugb24gQXByaWwgMjIsIGFuZCBpcyBhbiBpbnZpdGUgb25seSB0b3VybmFtZW50LCBvcGVuIHRvIGFsbCAxMDAgcGx1cyBmb3JtZXIgV1BUIENoYW1waW9ucy4gVGhlICQxNSwwMDAgYnV5IGluIHdpbGwgYmUgcmFrZSBmcmVlLCBhbmQgdGhlIFdQVCBpcyBmdXJ0aGVyIHN3ZWV0ZW5pbmcgdGhlIHBvdCBieSBhZGRpbmcgYSAkMTAwayBjYXNoIG92ZXJsYXksIGFzIHdlbGwgYXMgc29tZSBzZXJpb3VzIHN3YWcgZm9yIHRoZSB3aW5uZXIsIGNvdXJ0ZXN5IG9mIHRoZSBXUFQgc29tZSBvZiB0aGUgdG91ciBzcG9uc29yczouIAoiSmVmZmVyc29uIHZhaSBtb3JyZXIgZW0gYnJldmUgZSwgZW0gc2VndWlkYSwgdmlyIHVtYSBydW5hIGhvcnJ2ZWwgZGUgcGVzc29hcyBlIGFuaW1haXMsIHVtYSB2ZXogdW0gdmFpIHZlciB2aW5nYW5hLCBjZW0gcG9kZXJlcywgc2VkZSwgZm9tZSwgcXVhbmRvIG8gY29tZXRhIHZhaSBwYXNzYXIuIiAoU2N1bG8gMiwgcXVhZHJhIDYyKSAiTyBhbnRpIENyaXN0byBiZW0gY2VkbyBhbmlxdWlsYXIgdHJzLCB2aW50ZSBlIHNldGUgYW5vcyBxdWUgZHVyYXIgc3VhIGd1ZXJyYS4gT3MgaW5jcmR1bG9zIGVzdG8gbW9ydG9zLCBjYXRpdm9zLCBleGlsYWRvczsgY29tIHNhbmd1ZSwgY29ycG9zIGh1bWFub3MsIGd1YSBlIHZlcm1lbGhvIGdyYW5pemFtIGNvYnJpbmRvIGEgdGVycmEuIiAoU2N1bG8gOCwgcXVhZHJhIDc3KS4gU2ltcHNvbiBkb21pbmFuZG8gYSBub3RjaWE/IEdlb3JnZSBCdXNoIGVzdCB0ZW50YW5kbyBwcm92b2NhciBvIEFwb2NhbGlwc2UgZSBjYXB0dXJhIG8gbXVuZG8gcGFyYSBvIGNyaXN0aWFuaXNtbywgcGFyYSBxdWUgZWxlIHBvc3NhIGF0ZW5kZXIgYSBKZXN1cyBDcmlzdG8gZW0gSmVydXNhbG0gICBmYWxhciBzb2JyZSBhbHBpbmlzdGFzIHNvY2lhaXMuIApTaGUgYWxzbyByZW1haW5lZCBmcmllbmRzIHdpdGggYW4gZXggdGhhdCBJIHdvdWxkIG5ldmVyIHNwZWFrIHRvIGFnYWluLCBidXQgdGhhdCBpc24gTVkgZnJpZW5kc2hpcCwgaXRzIGhlcnMsIHNvIHdobyBjYXJlcz8gSXQgZG9lc24gYWZmZWN0IG15IGRhaWx5IGxpZmUsIHRoZSBib3lmcmllbmQgd2UgYm90aCBkYXRlZCBtb3ZlZCBvbiB3aXRoIGhpcyBsaWZlIGFuZCB3ZSBtb3ZlZCBvbiB3aXRoIG91cnMsIGFuZCB3ZSBzdGlsbCBjbG9zZSBmcmllbmRzLiAKSGFpbGV5cm9zZSAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpJZiB5b3Ugc29tZWhvdyBoYWQgYSBzZXQsIGRvbid0IHlvdSB0aGluayB5b3Ugd291bGQndmUgcHV0IGluIGEgc21hbGwgdmFsdWUgYmV0IHdoZW4gaGUgY2hlY2tzIHRvIHlvdT8gSW4gYWRkaXRpb24sIHRoZSB0dXJuIGlzbid0IGEgc2NhcmUgY2FyZCB3aGF0c29ldmVyLiBTbyBpZiB2aWxsYWluIGlzIHBlcmNlcHRpdmUgZW5vdWdoLCB5b3UgY2FuIHNlZSB3aHkgeW91ciBsaW5lIGRvZXNuJ3QgbWFrZSBzZW5zZS4uIAoiT3BpbmlvbnMgb2YgYSBicmFuZCBsaWtlIFdhbG1hcnQgYXJlIHNvIGhhcmRlbmVkIGF0IGJvdGggZW5kcyBvZiB0aGUgc3BlY3RydW0sIiBzYXlzIEJlcm5zdGVpbi4gV2hpY2ggaXMgd2h5LCBoZSBzYXlzLCBoZSBmb2N1c2VzIG9uIGZpbmRpbmcgYW5kIHBlcnN1YWRpbmcgInRob3NlIHN3aW5nIHZvdGVycyBvciBzd2luZyBjb25zdW1lcnMuIiBGb3JnaXZlIGhpbSBmb3IgbWl4aW5nIHBvbGl0aWNhbCBhbmQgbWFya2V0aW5nIG1ldGFwaG9ycyBiZWZvcmUgV2FsbWFydCBoZSBoYWQgYmVlbiBpbiBwdWJsaWMgYWZmYWlycyBhbmQgZ292ZXJubWVudCByZWxhdGlvbnMgaW4gV2FzaGluZ3Rvbi4gCllvdSB3YW50IG1lIHRvIGJlbGlldmUgdGhhdCB0aGUgbW9zdCBwb3dlcmZ1bCBuYXRpb24gaW4gdGhlIHdvcmxkIGlzIGJlaW5nIGhlbGQgaG9zdGFnZSBieSB0aG9zZSBza2lubnksIGxpY2UgY292ZXJlZCwgaWxsaXRlcmF0ZSwgZGlydHkgbWVuIGluIHRob3NlIGNyYWdneSBoaWxscyBvZiB0aGlzIGJyb2tlbiBjb3VudHJ5PyIKRWRpdC4gVGhlIHJlc3BvbnNlcyBiZWxvdyBhcmUgcmVmZXJyaW5nIHRvIHNvbWV0aGluZyBjYWxsZWQgcG9zdCBwYXJ0dW0gcHN5Y2hvc2lzIEkgd2FzIG5vdCBhd2FyZSBvZiwgYW5kIHdhcyBub3Qgc29tZXRoaW5nIHRoZSBjb21tZW50IGFib3ZlIG1lIG1lbnRpb25lZC4gCjguIApGbHVpZCB3aWxsIGRyYWluLCBhbmQgd2hlbiBpdCBzdG9wcyB1bnNjcmV3IGl0IGEgbGl0dGxlIG1vcmUgc28gbW9yZSBjb21lcyBvdXQsIHJlcGVhdCB1bnRpbCBpdHMgb25seSBlbm91Z2ggbGVmdCB0aGF0IHlvdSBjYW4ganVzdCByZW1vdmUgdGhlIGJvbHQgYW5kIGxvd2VyIHRoZSBwYW4gY29tcGxldGVseS4gCkkgbWFkZSBjaG9jb2xhdGVzIGFuZCBndW1taWVzIGFuZCBwZXJzb25hbGx5IHByZWZlciB0aGUgY2hvY29sYXRlcy4gWW91IGNhbiBnZXQgbW9sZHMgZnJvbSBtYW55IHBsYWNlcyBpbmNsdWRpbmcgTWljaGVhbHMvSG9iYnkgTG9iYnkgdHlwZSBwbGFjZXMgYW5kIGdldCBzb21lIGNob2NvbGF0ZSBtZWx0cy4gSSBnb3QgZGFyayBjaG9jb2xhdGUuIApJIGFtIG5vdCBhIG1lZGljYWwgcHJvZmVzc2lvbmFsLCBidXQgbXkgZmF0aGVyIGluIGxhdyBoYWQgc2V2ZXJlIHNraW4gY2FuY2VyLiBIZSBiYXNpY2FsbHkgaGFkIGFuIG9wZW4gc29yZSBvbiBoaXMgYmFjayBmb3Igc2V2ZXJhbCB5ZWFycyB0aGF0IGJsZWQgYW5kIGJsZWQsIHdlIG5ldmVyIGtuZXcgYWJvdXQgaXQgdW50aWwgb25lIGRheSB3ZSBzYXcgYSBwYW5jYWtlIHNpemVkIGNyYXRlciB0aHJvdWdoIGhpcyBzaGlydC4gV2VudCB0byB0aGUgaG9zcGl0YWwgZmluYWxseSBhbmQgdGhleSBiYXNpY2FsbHkgc2FpZCBoZSBoYXMgY2FuY2VyIHRocm91Z2hvdXQgaGlzIHdob2xlIGJvZHkgYXQgdGhpcyBwb2ludC4uIApUaGlzIGlzIGEgcmV2aWV3IG9mIGEgTmV3ZXIgU3RhdGVzbWFuIHJldmlldyBieSBTLiBWYW4gWmFuZHQgb2YgIk9uIHRoZSBEaWZmZXJlbmNlcyBiZXR3ZWVuIFJvYm90cyBhbmQgSHVtYW5zIiwgMzEsIEZlYnJ1YXJ5LCAyMTMwIiBieSBTLiAKV2hlbiBJIGZpcnN0IGdvdCB0byBqYWlsIEkgaGFkIHNldmVyZSBuZXJ2ZSBkYW1hZ2UgaW4gbXkgYXJtLCBjYW1lIHRvIGphaWwgc3RyYWlnaHQgZnJvbSB0aGUgaG9zcGl0YWwgd2l0aCBteSBhcm0gaW4gYSBzbGluZy4gCiJGb3IgZmFyIHRvbyBsb25nLCB0aGUgV29ybGQgQmFuayBHcm91cCBoYXMgY29uc2lkZXJlZCBpdHNlbGYgZXhlbXB0IGZyb20gYW55IGZvcm0gb2YgbGl0aWdhdGlvbiwiIHNheXMgQ2FybGEgR2FyY2EgWmVuZGVqYXMsIFNlbmlvciBBdHRvcm5leSBhdCB0aGUgQ2VudGVyIGZvciBJbnRlcm5hdGlvbmFsIEVudmlyb25tZW50YWwgTGF3IChDSUVMKSwgd2hpY2ggc3VibWl0dGVkIGFuIGFtaWN1cyBicmllZiB0byB0aGUgU3VwcmVtZSBDb3VydCBvcHBvc2luZyBhYnNvbHV0ZSBpbW11bml0eS4gIlRvZGF5J3MgZGVjaXNpb24gaXMgYSB3aW4gZm9yIGNvbW11bml0aWVzIGV2ZXJ5d2hlcmUgd2hvIGZhY2UgdHJlbWVuZG91cyBvYnN0YWNsZXMgc2Vla2luZyBhY2NvdW50YWJpbGl0eSBmb3IgZGV2ZWxvcG1lbnQgcHJvamVjdHMgdGhhdCBoYXJtIHRoZWlyIGVudmlyb25tZW50LCBsaXZlbGlob29kcywgYW5kIHJpZ2h0cy4iLiAKL3IvdGlwb2ZteXRvbmd1ZSBpZiB5b3Uga25vdyBvZiBhIG1vdmllLCBnYW1lLCBzb25nLCBldGMuICAgYnV0IGNhbm5vdCByZWNhbGwgdGhlIG5hbWUuClRoZSBvZGRzIGFyZSBwcmV0dHkgZ29vZCwgYnV0IHRoZXkgYXJlIGVzcGVjaWFsbHkgZ29vZCBmb3IgVUsgcmFjaW5nIGFuZCBVSyBmb290YmFsbCBiZXR0aW5nLiAKUmljaCBldm9sdmUgaW50byBzZXBhcmF0ZSBzcGVjaWVzICAgVGVsZWdyYXBoLgpBcyB5b3UgY2FuIHNlZSwgaXQgc2hvd3MgYSBzY2VuZSB0aGF0IGlzIHByb2JhYmx5IHR5cGljYWwgZm9yIHdhci4gc29sZGllcnMgc2F5IHRoaW5ncywgYWNjb3JkaW5nIHRvIHRoZSBUaW1lcywgbGlrZQpPdmVydmlldyBmb3IgYm9obWVyb3YKTmF6ZW0gS2Fkcmkgc2NvcmVkIGxhdGUgaW4gdGhlIHRoaXJkIGluIGhpcyByZXR1cm4gZnJvbSBhIHRocmVlIGdhbWUgc3VzcGVuc2lvbiBmb3IgZWxib3dpbmcgTWlubmVzb3RhIFdpbGQgZ29hbHRlbmRlciBOaWtsYXMgQmFja3N0cm9tIGluIHRoZSBoZWFkIHRvIHByb3ZpZGUgYSBicmllZiBidXJzdCBvZiBlbmVyZ3kgYW5kIGJyaW5nIHRoZSBjcm93ZCBvZiAxOSwyNTYgdG8gbGlmZS4gVGhlIExlYWZzIHdlcmUgYnV6emluZyB3aXRoIGFuIGV4dHJhIGF0dGFja2VyLCBIb2xsYW5kIGV2ZW4gaGl0IHRoZSBjcm9zcyBiYXIgYW5kIHRoZSBwb3N0LCBidXQgaXQgd2Fzbid0IGVub3VnaCB0byBiZWF0IE1hcmVrIE1hemFuZWMsIHdobyBmaW5pc2hlZCB3aXRoIDI0IHNhdmVzLi4gCkFuZCBpdCB3YXMgYWN0dWFsbHkgZ29vZCBmb29kLiAKQW5vdGhlciBpZGVhIGlzIEFJIHVwZGF0ZSB0byB3ZWFwb24gdHJpZ2dlciBtZWNoYW5pc20uIFdpbGwgYXV0b21hdGljYWx5IHNob3Qgd2hlbiBzZW5zb3Igc2VpbmcgInRhcmdldHMiIHRvIHdoaWNoIEFJIHdhcyBwcm9ncmFtZWQgdG8ga2lsbC4gRG9lc250IGFsbG93IHRvIHNob290ICJ0YXJnZXRzIiB3aGljaCBpdHMgcHJvZ3JhbW1lZCB0byBpZ25vcmUuIHNlbnNvciBvcHRpY2FsIChkb2VzbnQgd29yayBpbiBmb2cpIG9yIGluZnJhcmVkIChkb2VzbnQgcmVhY3QgdG8gY29sZCBibG9vZGVkIG9yIHJvYm90ICJ0YXJnZXRzIikuIFdoZW4gcGxheWVyIHBpY2sgdXAgc3VjaCB3ZWFwb24gZnJvbSBkZWFkIGVuZW15LCBpdCBtdXN0IGJlIGhhY2tlZCB0byBiZWNvbWUgdXNhYmxlIGFnYWluc3QgdGhpcyBlbmVtaWVzLgpJZiB5b3UncmUgY29uY2VybmVkIGFib3V0IHlvdXIgc29uIGJlaW5nIHB1bGxlZCBvdXQgZm9yIHRoZSBtYWpvcml0eSBvZiB0aGUgZGF5LCBtYWtlIHN1cmUgdG8gYWRkcmVzcyBhbmQgc3BlYWsgdXAgYWJvdXQgaGlzIHNlcnZpY2UgZGVsaXZlcnkgdGltZS4gV2hlbiBtYWtpbmcgYW4gSUVQLCB0aGUgc2VydmljZXMgYXJlIGRlc2NyaWJlZCBhcyBYIHRpbWVzIHBlciB3ZWVrIGZvciBYIGFtb3VudCBvZiBtaW51dGVzOyBpZiB5b3UgZmVlbCB0aGF0IHRoZSBzZXJ2aWNlIGRlbGl2ZXJ5IHRoZWlyIG9mZmVyaW5nIGlzIHRvbyBtdWNoLCBhZGRyZXNzIGl0LiBIb3dldmVyLCBJIHdpbGwgc2F5LCB0aGVyZSBhcmUgbWFueSBzcGVjaWFsIGVkdWNhdGlvbiB0ZWFjaGVycyB0aGF0IGRvIHdvbmRlcnMgZm9yIHN0dWRlbnRzIGFuZCBoZWxwIGNsb3NlIHRoZWlyIGVkdWNhdGlvbmFsIGdhcHMuIApNb3N0IHJlZ3VsYXIgdmlld2VycyBwcm9iYWJseSB3b24gc2VlIGl0IGlmIHRoZXkgcHV0IGl0IG9ubGluZS4gSSB0aGluayB0aGV5IGFscmVhZHkgZGlkIGEgRmFjZWJvb2sgc3RyZWFtIGZvciB0aGUgdGVhbSBwaWNraW5nIGFuZCBJIGRpZG4gZXZlbiBoZWFyIGFib3V0IGl0IHVudGlsIHRoZXkgbWVudGlvbmVkIGl0IG9uIHRoZSBzaG93LiBJIGFncmVlIHRoYXQgdGhlIHdheSB0aGV5IGRpZCBpdCBkaXNydXB0ZWQgdGhlIGZvcm1hdCB0b28gbXVjaCwgYnV0IGFpcmluZyB0aGUgZmx1ZmYgYXMgYW4gZXBpc29kZSB3b3VsZCBwcm9iYWJseSBkbyBtb3JlIGdvb2QgdGhhbiBoYXJtLiAKV2l0aG91dCB0aGUgdmVnZXRhYmxlIG9pbCwgdGhpcyByZWNpcGUgaXMgc3VpdGFibGUgZm9yIHVzZSBpbiBhbiBhcm9tYXRoZXJhcHkgZGlmZnVzZXIsIHNpbW1lcmluZyBwYW4gb2Ygd2F0ZXIsIG9yIHBvdHBvdXJyaSBjb29rZXIuIApEdXJiYXIgU3F1YXJlIChIYW51bWFuIERob2thKTogIFRoZSBhc3RvbmlzaGluZyBzaXRlIGlzIGJ1aWx0IG9mIHBhbGFjZXMsIGNvdXJ0eWFyZHMgYW5kIHRlbXBsZXMgZnJvbSAxMnRoIHRvIDE5dGggY2VudHVyaWVzLiBUb2RheSBpdCBzZXJ2ZXMgYXMgdGhlIHNvY2lhbCwgcmVsaWdpb3VzIGFuZCB1cmJhbiBodWIgZm9yIHRvdXJpc3RzIGFuZCBsb2NhbHMuIFRoZSBzcXVhcmUgaXMgZmlsbGVkIHdpdGggb2xkIHdvbmRlcnMgdGhhdCBpbmNsdWRlIFRhbGVqdSBUZW1wbGUsIEphZ25uYXRoIFRlbXBsZSwgS2FsIEJoYWlyYWIsIE5hdXRhbGxlIER1cmJhciwgQ29yb25hdGlvbiBOYXNhbCBDaG93aywgYW5kIHRoZSBzdGF0dWUgb2YgS2luZyBQcmF0YXAgTWFsbGEuCkJlc2lkZXMgc29tZSBidWdzLCB0aGVyZSBhcmUgc29tZSBhbnRzIGFuZCBzdHVmZiB0aGF0IGxheSBtb3JlLiAKS25vd2luZyB3aGF0IHdlIGtub3cgbm93LCBub2JvZHkgd291bGQgY2FsbCB5b3UgY3JhenkgZm9yIG5vdCB3YW50aW5nIHRvIGJlIHB1dCBvbiBPeHkgQ29udGluLiBIb3dldmVyIGlmIDIwIHllYXJzIGFnbyB5b3UgaGFkIGFjY3VzZWQgYmlnIHBoYXJtYSBvZiBwdXNoaW5nIE94eSwgKHdoaWNoIGJhc2ljYWxseSBhbW91bnRzIHRvIGxlZ2FsaXplZCBoZXJvaW4pIG9uIHRoZSBwdWJsaWMgd2hpbGUgdGhleSBjb3ZlcmVkIHVwIHRoZSBhZGRpY3Rpb24gcG90ZW50aWFsIG9mIHRoYXQgZHJ1ZyB5b3UgaGF2ZSBiZWVuIGxhYmVsZWQgY3JhenkuIFNhbWUgdGhpbmcgd2l0aCBzb3VuZGluZyB0aGUgYWxhcm0gb3ZlciBnbHlwaG9zYXRlIGxldmVscyBpbiBvdXIgZm9vZCBjaGFpbiAyMCB5ZWFycyBhZ28uImNyYXp5Ii4gU2FtZSB0aGluZyB3aXRoIHRoZSBvdmVyIHByZXNjcmlwdGlvbiBvZiBhbnRpIGJpb3RpY3MuIFdlIHNlZWluZyBhbnRpIGJpb3RpYyByZXNpc3RhbnQgYmFjdGVyaWEgbm93IGFuZCBpdCBhIGZ1Y2tpbmcgcHJvYmxlbSBtdWNoIGxpa2UgdmFjY2luZSByZXNpc3RhbnQgc3VwZXIgZmx1IGJ1Z3MgYXJlIGEgcmVhbCBmdWNraW5nIHByb2JsZW0uIFRoZSBzdGFuZGFyZHMgZm9yIHRoZSBtYW51ZmFjdHVyaW5nIG9mIGFsbCB0aGlzIGtpbmQgb2Ygc3R1ZmYgaGFzIHRvIGJlIGltcGVjY2FibGUgYW5kIHRoZXNlIHRlY2hub2xvZ2llcyBuZWVkIHRvIGJlIHVzZWQganVkaWNpb3VzbHkuIE1lZGljYWwgbWlzdGFrZXMgYWxvbmUgYWNjb3VudCBmb3IgdGhlIDNyZCBoaWdoZXN0IGNhdXNlIG9mIGRlYXRoIGluIEFtZXJpY2EgcmlnaHQgbm93LiBTb21laG93IEkgZG91YnQgdGhhdCBzdGFzdGljIHRha2VzIGludG8gYWNjb3VudCBhbGwgdGhlIHBlb3BsZSB0aGF0IGFyZSBkeWluZyBmcm9tIG9waW9kIGFkZGljdGlvbiBlaXRoZXIgYnV0IEkgY291bGQgYmUgd3JvbmcgYWJvdXQgdGhhdC4gVGhhdCB0aGUgaW5kdXN0cnkgd2UgYXJlIGRlYWxpbmcgd2l0aCBoZXJlIG1ha2luZyB0aGlzIG1hc3NpdmUgcHJvcGFnYW5kYSBwdXNoIGZvciB2YWNjaW5hdGlvbnMuCkkgc3RpbGwgaGF2ZW4gZ290dGVuIGEgcmVzcG9uc2UgZnJvbSB0aGVtIG9uIGl0ISBBbnkgdGltZSB5b3UgdGFsayB0byBhIGRlbGl2ZXJ5IHBlcnNvbiBvciBjdXN0b21lciBzZXJ2aWNlLCB0aGV5IGFjdCBjb21wbGV0ZWx5IGFwYXRoZXRpYyBhbmQgc29tZXRpbWVzIGhvc3RpbGUuIFRoaXMgdGltZSB0aGV5IGJsYW1lZCBpdCBvbiBub3QgaGF2aW5nIGEgYmlnIGVub3VnaCBkaXN0cmlidXRpb24gY2VudGVyIGluIHRoZSBhcmVhICh0cnVlLCBub3cgZml4IGl0ISkgc28gdGhleSBkb24gY2FyZSBhYm91dCBkcmFnZ2luZyBhc3Mgb24gcmVzaWRlbnRpYWwgZGVsaXZlcmllcyBiZWNhdXNlIHRoZXkgaGF2ZSB0byBmb2N1cyBvbiB0aGUgYnVzaW5lc3MgZGVsaXZlcmllcyBiZWNhdXNlIHRoZXkgc28gc21hbGwuIFllYWgsIHRoYXQgbWFrZXMgYSBsb3Qgb2Ygc2Vuc2UuIApBIFRhc21hbmlhbiBHcmVlbnMgdGhyZWF0IHRvIGJyaW5nIGEgbm8gY29uZmlkZW5jZSBtb3Rpb24gYWdhaW5zdCB0aGUgTGliZXJhbHMgaWYgdGhleSBkb24ndCByZXZlYWwgc291cmNlcyBvZiBwb2xpdGljYWwgZG9uYXRpb25zIGhhcyBiZWVuIHN3aWZ0bHkgYnJ1c2hlZCBvZmYgYnkgdGhlIHN0YXRlJ3MgdHdvIG1ham9yIHBhcnRpZXMuClNpbW9uIHF1aXBzICJJIGp1c3QgbGlrZSB5b3UiIGV4Y2VwdCBoZSBhbiB1cHBlciBtaWRkbGUgY2xhc3Mgd2hpdGUgbWFsZSB3aXRoIGhpcyBvd24gY2FyLCBsb3ZpbmcgZmFtaWx5LCBsb3ZpbmcgZnJpZW5kcywgYW5kIGEgZ3JlYXQgc2Nob29sLiBIZSBoYXMgdG8gc3RydWdnbGUgYmVpbmcgZ2F5LCBhbG9uZSwgYW5kIGJ1bGxpZWQgZm9yIGFib3V0IDIgc2Vjb25kcyBiZWZvcmUgaGlzIGVudGlyZSBzdXBwb3J0IHN5c3RlbSBhbmQgdGhlIHRlYWNoZXJzIGFuZCBzY2hvb2wgcmFsbHkgYmVoaW5kIGhpbS4gSW4gcmVhbGl0eSwgYSBodWdlIGFtb3VudCBvZiB2aWV3ZXJzIGhhdmUgbGl0dGxlIHRvIG5vbmUgb2YgdGhvc2UgdGhpbmdzLiAKRGVlcCBUaXNzdWUgIEEgdHlwZSBvZiBtYXNzYWdlIHRoZXJhcHkgdGhhdCBmb2N1c2VzIG9uIHJlYWxpZ25pbmcgZGVlcGVyIGxheWVycyBvZiBtdXNjbGVzIGFuZCBjb25uZWN0aXZlIHRpc3N1ZS4gSXQgaXMgZXNwZWNpYWxseSBoZWxwZnVsIGZvciBjaHJvbmljYWxseSB0ZW5zZSBhbmQgY29udHJhY3RlZCBhcmVhcyBzdWNoIGFzIHN0aWZmIG5lY2tzLCBsb3cgYmFjayB0aWdodG5lc3MsIGFuZCBzb3JlIHNob3VsZGVycy4gCllvdXIgaGFuZCBpcyBjb21wbGV0ZWx5IHVuZGVyIHJlcHBlZC4gWW91IGZsYXQgY2FsbCB3aXRoIHRvcCBzZXQgb24gYSB3ZXQgYWYgZmxvcCBhbmQgdGhlbiBjaGVjayBiYWNrIHRoZSB0dXJuLiBUaGVyZSBubyB3YXkgaW4gaGVsbCBJIHB1dHRpbmcgeW91IG9uIHN1Y2ggYSBzdHJvbmcgaGFuZCBieSB0aGUgdHVybi4gCkZvciBUdXJrZXksIENoaW5hIG9mZmVycyB1bmZldHRlcmVkIGVjb25vbWljIGRldmVsb3BtZW50IHRvIHRoZSBUdXJraWMgcmVwdWJsaWNzIGluIGNlbnRyYWwgYXNpYSwgdGhpcyBtYWtlcyBUdXJrZXkgc2FsaXZhdGUgYmVjYXVzZSBUdXJraXNoIHN0YXRlIGlkZW9sb2d5IGlzIGV0aG5vIGNlbnRyaWMgVHVya2lzbSB3aXRoIG5ldyBJc2xhbWljIHVuZGVydG9uZXMuIAogMyBwb2ludHMgIHN1Ym1pdHRlZCAyMSBob3VycyBhZ29JIGFjdHVhbGx5IGRpZCBiYWNrIGl0IHVwLiBSZWd1bGF0b3J5IGFsaWdubWVudCBpcyB0aGUgZGVmaW5lZCByZXN1bHQgYnkgQXJ0LjYgd2hpY2ggZXhwbGljaXRseSBzdGF0ZXMgIm5vIGRpbWludXRpb24gb2YgcmlnaHRzLCBzYWZlZ3VhcmRzIGFuZCBlcXVhbGl0eSBvZiBvcHBvcnR1bml0eSIuSXQgYWxzbyBsaXRlcmFsbHkgc3RhdGVzICJObyBzZWN1cml0eSBpbmZyYXN0cnVjdHVyZSIgICB3aGljaCBpcyB1cCBmb3IgaW50ZXJwcmV0YXRpb24gdG8gc29tZSBleHRlbnQuIApBbHRlcm5hdGl2ZWx5LCB5b3UgY2FuIHJlcG9ydCB0aGlzIHBsYXllci4gCk9uIG15IHdheSB0byBhIG1haW4gcXVlc3QgbWlzc2lvbiwgSSB3YXMgYWxlcnRlZCB0byBhIG11bHRpcGxheWVyIG9wcG9ydHVuaXR5IGFuZCB0b29rIGl0LiAKQXMgZm9yIG1vbmV5LCBpdCBwb3NzaWJsZSB0byBwYXkgZm9yIHlvdXIgc3Vic2NyaXB0aW9uIGVudGlyZWx5IHRocm91Z2ggaW4gZ2FtZSBtb25leSwgYW5kIGl0IHF1aXRlIGZlYXNhYmxlIHRvIGRvLiBUaGUgZmlyc3QgYm9uZCAoeW91IGJ1eSBib25kcyB3aXRoIGluZ2FtZSBtb25leSBhbmQgdHJhZGUgaXQgaW4gZm9yIG1lbWJlcnNoaXApIGlzIHRoZSBoYXJkZXN0IHRvIGVhcm4gYXMgbW9uZXkgbWFraW5nIGlzbiBhcyBnb29kIGluIHRoZSBmcmVlIHRvIHBsYXkgd29ybGQsIGJ1dCB0aGV5IGFyZSBxdWl0ZSBlYXN5IHRvIGVhcm4gYmV5b25kIHRoYXQuIFlvdSBkb24gbmVlZCB0byBydXNoIGludG8gbWFraW5nIG1vbmV5IHJpZ2h0IGF3YXkgYXMgdGhlIGZyZWUgd29ybGQgaGFzIGEgbG90IG9mIGNvbnRlbnQsIGFuZCBhIGZhaXIgbnVtYmVyIG9mIHF1ZXN0cyB0byBrZWVwIHlvdSBidXN5IGZvciBhIGZldyBtb250aHMgYXQgbGVhc3QuLiAKSWYgYW55dGhpbmcgbGlrZSB0aGlzIGV2ZXIgaGFwcGVucyBhZ2FpbiB3ZSB3aWxsIGJhbiB0aGVtIGZvciBsaWZlLiAKTW9yYWwgZ3JhbmRzdGFuZGluZyBhbmQgcGVhY29ja2luZy4gQXR0ZW1wdGluZyB0byBiZSBob25lc3QgaGVyZS4gCkkgdGhpbmsgdGhpcyBpcyB3aGVyZSB0aGUgdGVybSBkb2VzIGEgYml0IG9mIGEgZGlzc2VydmljZSB0byB0aGUgdW5kZXJseWluZyBjb25jZXB0LiBUaGUgaW1wcm92ZW1lbnQgZG9lc24gaGF2ZSB0byBiZSBpbnN0YW50YW5lb3VzIHRvIGNvbXBsZXRlbHkgb3V0cGFjZSBodW1hbnMuIApUaG9zZSBhcmUgdGhlIHBsYXllcnMgdGhhdCBjb250aW51ZSBtYWtpbmcgcG9rZXIgcHJvZml0YWJsZS4gCkkgaGF0ZSB0aGF0IEkgY2FuJ3QgdHJ1c3QgcGVvcGxlLiBJIHdhbnQgdG8gdHJ1c3QgcGVvcGxlIGFuZCBiZWxpZXZlIGluIHRoZSBnb29kIGluIG90aGVycywgYnV0IEkganVzdCBmZWVsIGxpa2UgSSBjYW4ndCBub3dhZGF5cy4gTGlrZSBmb3IgaW5zdGFuY2UsIHRoZSBvdGhlciBkYXkgSSBwYXJrZWQgbXkgY2FyIHNvbWV3aGVyZSBhbmQgbGF0ZXIgaGFkIHRoYXQgZmVlbGluZyBvZiBhbnhpZXR5LCAnZGlkIEkgcmVtZW1iZXIgdG8gbG9jayBteSBjYXI/JyBhbmQgY291bGRuJ3QgbGV0IHRoYXQgZmVlbGluZyBnbyB0byB3aGVyZSBJIGZlbHQgdGhlIG5lZWQgdG8gZ28gYmFjayB0byBtYWtlIHN1cmUgSSBoYWQgbG9ja2VkIGl0LiBUaGF0IEkgY2FuJ3QgZXZlbiB0cnVzdCBwZW9wbGUgZW5vdWdoIGluIG15IGNvbW11bml0eSB0byBtYXliZSBsZWF2ZSBteSBjYXIgdW5sb2NrZWQgZm9yIGEgY291cGxlIGhvdXJzLgpXaGVuIHlvdXIgWGJveCBoZWF0cyB1cCBlbm91Z2ggaXQgY2F1c2VzIHRoZSBncmFwaGljcyBwcm9jZXNzaW5nIHVuaXQgKEdQVSkgdG8gbG9vc2VuIGZyb20gdGhlIG1vdGhlcmJvYXJkLCBhbmQgdGhlIGdyZWVuIGxpZ2h0cyBvbiB5b3VyIGNvbnNvbGUgZGlzcGxheSB0aHJlZSBvZiB0aGVtIGluIGZsYXNoaW5nIHJlZC4gCkl0cyBibGFjayBvdXRzaWRlIGFuZCBzbGVlayBib2R5IGZlYXR1cmUgYXJlIG1hZGUgaW4gYSBtb2Rlcm4gc3R5bGlzaCB3YXkgdGhhdCB3aWxsIGRlZmluaXRlbHkgZ3JhYiB5b3VyIGF0dGVudGlvbiBhbmQgbWFrZSB5b3UgZmFsbCBpbiBsb3ZlIHdpdGggaXQgd2hlbiB5b3Ugd2lsbCBsb29rIGF0IGl0IGZvciB0aGUgZmlyc3QgdGltZS4gClNlaXQgZWluaWdlbiBKYWhyZW4gaXN0IGRlciBzIFNwZWNrZyBkZXIgSGF1cHN0c3RhZHQgenVtIFdlbGxuZXNzIFBhcmFkaWVzIGdld29yZGVuLiBNZWhyIGFscyBlaW4gRHV0emVuZCBnZWhvYmVuZXIgSG90ZWxzIHdpcmJ0IHZvciBhbGxlbSB1bSBNYXNzYWdlIGh1bmdyaWdlciBIYXVwdHN0IHZlcnN0IGFiZXIgYXVjaCB1bSBUb3VyaXN0ZW4gYXVzIGFuZGVyZW4gUmVnaW9uZW4uIERhcyBHdXQgaGF0IGVpbmUgYnVudGUgR2VzY2hpY2h0ZTogS2FydCBoYXR0ZW4gaGllciBpbSBNaXR0ZWxhbHRlciBlaW5lIE0gZ2ViYXV0LCBkYW5uIHd1cmRlIGRlciBIb2YgcyBpbSAxOC4gClRoZXJlZm9yZSwgaW5zdGVhZCBvZiBtZWFzdXJpbmcgZWNvbm9taWMgZ3Jvd3RoIGZvciBpdHMgb3duIHNha2UsIHdlIHNob3VsZCBiZSBhc3Nlc3NpbmcgaG93IHdlbGwgdGhlIGVjb25vbXkgZW5hYmxlcyBhbGwgTmV3IFplYWxhbmRlcnMgdG8gbGVhZCAndGhlIGtpbmRzIG9mIGxpdmVzIHRoZXkgdmFsdWUgYW5kIGhhdmUgcmVhc29uIHRvIHZhbHVlJy4uIApTcGVjaWFsIHRoYW5rcyB0byBEaWFuZSwgQ2hyaXN0aW5lLCBKZW5uaWZlciBhbmQgdGhlIFZPTiBmb3IgdGhlaXIgc3VwcG9ydCBhbmQgZ3VpZGFuY2UgYXMgd2VsbCBhcyBEZWJiaWUsIEJyZW5kYSBhbmQgRG9ubmEgZnJvbSB0aGUgRCBXaW5nIGF0IHRoZSBCcmFudGZvcmQgR2VuZXJhbCBIb3NwaXRhbC4gSW50ZXJtZW50IGF0IEZhcnJpbmdkb24gQnVyaWFsIEdyb3VuZC4gCkEgbG90IG9mIGZyYW5jaGlzb3JzIGdyb3cgdGhlaXIgc3RhZmYgYWZ0ZXIgdGhleSBoYXZlIGEgY2VydGFpbiBudW1iZXIgb2YgZnJhbmNoaXNlZXMuIEJ1dCBteSBwb3NpdGlvbiBpcyBoaXJlIHN0YWZmLCBidWlsZCBjYXBhY2l0eSwgc2VydmljZSB5b3VyIGZyYW5jaGlzZWVzIHNvIHRoYXQgdGhleSBjYW4gZ2V0IHVwIGFuZCBydW5uaW5nIGZhc3QgYW5kIGVmZmVjdGl2ZWx5Li4gCkFsdGhvdWdoIGl0IGhhcyBiZWVuIHNob3duIHRpbWUgYW5kIHRpbWUgYWdhaW4gd2l0aCB0aGUgc2FjcmlmaWNlIG9mIGlubm9jZW50IGxpdmVzIHRoYXQgdGhleSBjYW4gYW5kIGRvLCB3aGVuIHlvdSBlbnRlciBhIGNvdXJ0IG9mIGxhdyBhcyB0aGUgYWNjdXNlZCB5b3UgY2FuIHJlc3QgYXNzdXJlZCAgIHRoZSBsaXR0bGUgVmlyZ2luIGlzbiBseWluZy4gCkkgcHJldHR5IHN1cmUgSE1HIHVzZXMgIkR5bmVlbWEgQ29tcG9zaXRlIEh5YnJpZHMiLCBub3Qgc3RyYWlnaHQgRENGLCBmb3IgdGhlaXIgcGFjayBib2RpZXMsIHdoaWNoIGNhbiBkZWZpbml0ZWx5IHRha2UgYSBiZWF0aW5nLiBBY2NvcmRpbmcgdG8gSE1HOlRoZXJlIGEgcmVhc29uIEhNRyBpcyBzbyBwb3B1bGFyIGFtb25nIHRoZSBsb25nIHRyYWlscywgdGhleSBtYWtlIG9uZSBvZiB0aGUgbW9zdCBkdXJhYmxlLCBoYXJkIHdlYXJpbmcgKGFuZCBleHBlbnNpdmUpIHBhY2tzLiBZb3Ugd291bGQgaGF2ZSB0byBzZW5kIGl0IGJhY2sgdG8gSmFwYW4uLiAKWW91IGNhbiBkZWZpbml0ZWx5IG1ha2UgJDUwayBpZiB5b3UncmUgZGVjZW50IGFuZCBkb3VibGUgdGhhdCBpZiB5b3UncmUgaW4gdGhlIHRvcDUlLiAKSXQgbGlrZSB3aGVuIGV2ZXJ5b25lIHdhcyBtYWtpbmcgIm5vdCIgam9rZXMgYWZ0ZXIgYm9yYXQuIEl0IGZpbmUgd2hlbiB1c2VkIGNvcnJlY3RseSwgYnV0IHBlb3BsZSB3aG8gZG9uIGtub3cgd2hhdCB0aGV5IGFyZSBkb2luZyBzdGFydGluZyBhYnVzaW5nIGl0IGFuZCBpdCBiZWNhbWUgZXhjcnVjaWF0aW5nbHkgYW5ub3lpbmcuIApBbHNvIGlzIHRoZXJlIEluZGlhbi92ZWdldGFyaWFuIGZvb2QgYXZhaWxhYmxlIGluIHRoZSByZXNvcnQgb3IgbmVhcmJ5TWFyIDQgVGhpcyBwbGFjZSBpcyBvbiB0aGUgYmVhY2ggc28ganVzdCBmZXcgc3RlcHMgYW5kIHRoZXJlIHlvdSBhcmUgIG9uIHRoZSBiZWFjaC4gU2luY2UgdGhlcmUgYXJlIG5vIGhvdGVsIG93biBiZWFjaGVzIGluIFRoYWlsYW5kIGFsc28gcGVvcGxlIG91dHNpZGUgdGhlIGhvdGVsIGNhbiBjb21lIHRvIHRoaXMgYmVhY2guIEl0IGlzIG9uZSBvZiB0aGUgYmVzdCBvbmUgaW4gdGhlIFBodWtldC4gCldlIGFyZSBubyBsb25nZXIgYWxsb3dpbmcgcG9zdHMgY2VudGVyZWQgYXJvdW5kIHBvbGl0aWNhbCBjdXJyZW50IGV2ZW50cywgZXNwZWNpYWxseSBVUyBwb2xpdGljcy4gTm8gcmFjZSBiYWl0aW5nIG9yIGRlbGliZXJhdGVseSBpbmZsYW1tYXRvcnkgbWF0ZXJpYWwuCk5vcGUuIERpZG4ndCByZWFsaXplIHRoZSBQYWxhY2UgZ3VhcmRzIGNhcnJpZWQgYSBtb2Rlcm4gc2VydmljZSByaWZsZSB3aXRoIG1vdW50ZWQgYmF5b25ldC4gVGhlIHBvbGljZSBhdCAxMCBEb3duaW5nIFN0LiAKVGhpcyBpcyBub3QgbXkgZmlyc3Qgcm9kZW8gc28gSSBhbSBmYW1pbGlhciB3aXRoIHR3ZWx2ZSBzdGVwIHJlY292ZXJ5LiBJdCBhIGxpdHRsZSBkaWZmaWN1bHQgYmVjYXVzZSBJIGhhdmUgYSBoYXJkIHRpbWUgZGVhbGluZyB3aXRoIHRoZSBlZ28gYW5kIGdvc3NpcCwgYnV0IGl0IG15IGJlc3Qgb3B0aW9uIGF0IHRoZSBtb21lbnQuIApXaXIgc3BpZWxlbiBUZXhhcyBIb2xkJ2VtLCB6dXIgRXJpbm5lcnVuZzogNTJlciBCbGF0dCwgZGllIFNwaWVsZXIsIGhpZXIgc2VjaHMgYW4gZGVyIFphaGwsIGVyaGFsdGVuIHp3ZWkgdmVyZGVja3RlIHByaXZhdGUgS2FydGVuIChQcmUgRmxvcCksIGRhbm4gZm9sZ3QgZWluZSBTZXR6cnVuZGUsIGRhbm4gd2VyZGVuIGluIGRlciBNaXR0ZSBkZXMgU3BpZWx0aXNjaGVzIGRyZWkgS2FydGVuIGF1ZmdlZGVja3QgKGRlciBGbG9wKSwgZWluZSB6d2VpdGUgU2V0enJ1bmRlIGZvbGd0LCBlaW5lIHZpZXJ0ZSBLYXJ0ZSB3aXJkIGF1ZmdlZGVja3QgKGRlciBUdXJuKSwgZWluZSBkcml0dGUgU2V0enJ1bmRlIGZvbGd0IHVuZCBkaWUgbGV0enRlIHVuZCBmbmZ0ZSBLYXJ0ZSAoZGVyIFJpdmVyKSB3aXJkIGF1ZmdlZGVja3QuIEVpbmUgdmllcnRlIHVuZCBsZXR6dGUgU2V0enJ1bmRlIGdlaHQgZGVtIFNob3dkb3duIHZvcmF1cywgd29iZWkgZGFubmRlciBTaWVnZXIgZGVyIEhhbmQgYmVzdGltbXQgd2lyZC4gRGVyIFdlcnQgZGVyIEhhbmQgZXJnaWJ0IHNpY2ggYXVzIGRlciBiZXN0ZW4gbWdsaWNoZW4gS29tYmluYXRpb24gZGVyIHp3ZWkgcHJpdmF0ZW4gS2FydGVuIHVuZCBkZXIgZm5mIGZmZW50bGljaGVuIEthcnRlbi4gRGllIGJlc3RlIEhhbmQgZ2V3aW5udCwgc2luZCBkaWUgS2FydGVuIGdsZWljaHdlcnRpZywgd2lyZCBnZXRlaWx0OyBkaWUgRmFyYmVuIHNpbmQgZ2xlaWNod2VydGlnLCBzcGFkZXMgKFBpaykgYWxzbyBic3B3LiBuaWNodCBoaGVyd2VydGlnZXIgYWxzIGRpYW1vbmRzIChDYXJvKS4KRGllIG1laXN0ZW4gTXVzaWtlciwgZGllIGljaCBrZW5uZSwgbWljaCBlaW5nZXNjaGxvc3Nlbiwgd2VuZGVuIGF1Y2ggbnVyIHJlbGF0aXYgZmVzdGUgUmVnZWxuIGRlciBNdXNpa3RoZW9yaWUgYW4sIGJld3Vzc3Qgb2RlciB1bmJld3Vzc3QsIHVtIG5ldWUgTXVzaWsgenUgZ2VzdGFsdGVuLiAKSG93ZXZlciwgdGhlIHN0eWxlIGZhdm91cmVkIGJ5IGFuZCBhaW1lZCBhdCBob3NwaXRhbCBzdGFmZiBoYXMgYSBzb2xpZCB0b3Agd2l0aCBubyBob2xlczUsIGFsdGhvdWdoIHRoZXNlIGFyZSBxdWl0ZSBzaW1pbGFyIHRvIHRoZSBzdGFuZGFyZCBmb290d2VhciB3b3JuIGJ5IG9wZXJhdGluZyB0aGVhdHJlIHN0YWZmLiAKSG93ZXZlciwgdGhlIHN0cm9uZ2VzdCB0aGVvcnkgcmVnYXJkaW5nIHRoZSBvcmlnaW4gb2YgcG9rZXIgZGF0ZXMgYmFjayB0byB0aGUgMTV0aCBDZW50dXJ5IGluIEZyYW5jZSwgd2hlcmUgYSBnYW1lIG5hbWVkIFBvcXVlIHN0YXJ0ZWQgdG8gYmUgdmVyeSBwb3B1bGFyLiBJbiB0aGlzIGdhbWUgYSBkZWNrIG9mIGZvdXIgc3VpdHMgd2FzIGFsc28gdXNlZDogaGVhcnRzLCBkaWFtb25kcywgc3BhZGVzIGFuZCBjbHVicy4gTW9yZW92ZXIsIGJsdWZmaW5nIGFuZCBiZXR0aW5nIHdlcmUgcGFydCBvZiB0aGUgZ2FtZSwgd2hpY2ggd2lsbCBzZWUgaXRzIGJpZ2dlc3QgZXZvbHV0aW9uIGFmdGVyIHRoZSBGcmVuY2ggZXhwb3J0ZWQgaXQgdG8gdGhlIEFtZXJpY2FuIGNvbnRpbmVudC4gVGhlcmUsIGEgcHJvZmVzc2lvbmFsIGdhbWJsZXIgbmFtZWQgSm9uYXRoYW4gSC4gR3JlZW4gY2FtZSBhY3Jvc3MgdGhlIGdhbWUsIHdoaWNoIGhlIHJlZmVycmVkIHRvIGFzIHRoZSAiY2hlYXRpbmcgZ2FtZSIgYXMgaGUgbWVudGlvbmVkIGluIGhpcyBib29rICJBbiBFeHBvc3VyZSBvZiB0aGUgQXJ0cyBhbmQgTWlzZXJpZXMgb2YgR2FtYmxpbmciLiBXaGF0IHdlIHN0aWxsIGRvbid0IGtub3cgaXMgd2hlbiB0aGUgY2hlYXRpbmcgZ2FtZSBiZWNhbWUga25vd24gYXMgcG9rZXIuCkhvcnNlc2hvZSBDYXNpbm8gaXMgcnVuIGxvY2FsbHkgYnkgUm9jayBHYW1pbmcsIExMQyBhbmQgb3duZWQgY29ycG9yYXRlbHkgYnkgQ2Flc2FycyBFbnRlcnRhaW5tZW50LiAKTWFrZXMgbWUgc2FkIHRvIHNlZSBzdHVmZiB0aGF0IGlzIGFsbCBjdXRlIGFuZCBnaXJseSBhbmQgcGFydHkgbGlrZSAgIHNvbWUgd2l0aG91dCBldmVuIGFycm93cywgb3IgdGhlIGxvb2sgb2YgYmVpbmcgaW4gbG92ZS4gVGhlb3JldGljYWxseSwgeW91IGNvdWxkIHRha2UgdGhlIHRoZW1lIHRvIG1lYW4gc29tZW9uZSB3aG8gaGFzIGJlZW4gc2hvdCBieSBDdXBpZCByYXRoZXIgdGhhbiBvZiBDdXBpZCBoaW1zZWxmLgogNDkgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvSSBoYXZlIGhhZCBkcmVhbXMgd2hlcmUgdGhpcyBoYXBwZW5lZCBhIGhhbmRmdWwgb2YgdGltZXMuIEEgZmV3IHJlZ3VsYXJzIGp1c3QgY29tZSBiYWNrIHdpdGggYSBzaG9wcGluZyBiYXNrZXQgZ29pbmcgdGhyb3VnaCB0aGUgYWlzbGVzICJJIHRha2UgYSBib3R0bGUgb2YgQ2xvbmF6ZXBhbSwgc29tZSBBbWxvZGlwaW5lLCBbaW5zZXJ0IG90aGVyIHJhbmRvbSBkcnVnc10iVGhlbiwgYXQgdGhlIHN0YXJ0IG9mIGZsdSBzZWFzb24sIGEgd29tYW4gd2FudGVkIHRvIGdldCBoZXIgZmx1IHNob3QsIEkgdG9sZCBoZXIgdG8gZ28gdG8gdGhlIGRyb3Agb2ZmIHdpbmRvdyB3aGlsZSBwb2ludGluZyB0byB0aGUgZHJvcCBvZmYgd2luZG93LiBTaGUgdHJpZWQgY29taW5nIGludG8gdGhlIHBoYXJtYWN5IGFuZCB3YXMgYWxyZWFkeSBsaWZ0aW5nIHVwIGhlciBzbGVldmUgdG8gZ2V0IGhlciBzaG90LkkgaGF2ZSBoYWQgdG8gYmUgY2FyZWZ1bCBhYm91dCBteSBoYW5kIGdlc3R1cmVzIHNpbmNlIHRoZW4hSSB3b3JrIGluIHJldGFpbCBwaGFybWFjeSBzbyBiYXNpY2FsbHkgZXZlcnlvbmUgaXMgaW4gYSBiYWQgbW9vZCBhbGwgdGhlIHRpbWUgYW5kIHBlb3BsZSBhcmUgdmVyeSByYXJlbHkgbmljZSB0byB0aGUgb25lcyBnaXZpbmcgdGhlbSB0aGVpciBkcnVncyAod2hpY2ggc2VlbXMgY291bnRlcmludHVpdGl2ZSwgYnV0IG1heWJlIEkganVzdCBiaWFzZWQpLCBzbyBJIGNhbiBhc3NvY2lhdGUgbmVnYXRpdmUgZmVlbGluZ3Mgd2l0aCBzbyBtYW55IG5hbWVzLi4gCkhlbmNlLCB0aGUgdGVjdG9yaWFsIG1lbWJyYW5lIGNvbnRyaWJ1dGVzIHRvIGNvbnRyb2wgb2YgaGVhcmluZyBzZW5zaXRpdml0eSBieSBpbmZsdWVuY2luZyB0aGUgaW9uaWMgZW52aXJvbm1lbnQgYXJvdW5kIHRoZSBzdGVyZW9jaWxpYS5EcktvcnZ1cyAgMSBwb2ludCAgc3VibWl0dGVkIDE0IGhvdXJzIGFnb0kgZ2VudWluZWx5IGN1cmlvdXMgbXlzZWxmLCB1bmxlc3MgaGUgaXMgYSBwcm9mZXNzaW9uYWwgcmVkZGl0b3IgKGlzIHRoYXQgZXZlbiBhIHRoaW5nPykgSSBpbWFnaW5lIGl0IGhhcyB0byBiZSBhdCBsZWFzdCBzZW1pIGF1dG9tYXRlZC4gCjEpIExvdyBiYWNrIHBhaW4gKExCUCkgaXMgIm9uZSBvZiB0aGUgY29zdGxpZXN0IHdvcmsgcmVsYXRlZCBpbmp1cmllcyBpbiB0aGUgVW5pdGVkIFN0YXRlcyBpbiB0ZXJtcyBvZiBkaXNhYmlsaXR5IGFuZCB0cmVhdG1lbnQgY29zdHMuIiAiQW4gYWRkaXRpb25hbCwgaW1wb3J0YW50IGNvbXBvbmVudCBvZiB0aGUgaHVtYW4gYW5kIGVjb25vbWljIGNvc3RzIGlzIHRoZSByZWN1cnJlbmNlIG9mIExCUC4iClNldHRpbmcgVXAgWW91ciBQcml2YXRlIE9ubGluZSBQb2tlciBUb3VybmFtZW50IFRhYmxlcyBhbmQgR2FtZXMgZm9yIEZyZWUKSSBzdXJlIHlvdSByZW1lbWJlciwgSm9obiwgaG93IG1hbnkgbGl0dGxlIG9uZSBtYW4gc2hvcHMgZXhpc3RlZCA0MCB5ZWFycyBhZ28sIGFsbCB3aXRoIHRoZWlyIG93biBzcGVjaWFsdHkuIApZb3UgZ290IGNhdWdodCB1cCBpbiBpdC4gClRlbGxpbmcgdGhlIE9QIHRvIHJ1biBiYXNlZCBvbiB0aW1lIHJhdGhlciB0aGFuIG1pbGVzIHdvdWxkIHByb2JhYmx5IGxlYWQgdG8gbGVzcyBtaWxlcywgcmVkdWNpbmcgdGhlIG92ZXJhbGwgZml0bmVzcyAodW5sZXNzIE9QIHN0YXJ0cyBydW5uaW5nIGF0IGEgZmFzdGVyIHNwZWVkKS4uIApGYXRhbCBpcyBwZXJmZWN0bHkgZmluZSwgYnV0IEkgc2F5IHRoaXMgYWJvdXQgcnVuZXMgaW4gZ2VuZXJhbCAgIGl0IGEgcmVhbGx5IGNvbW1vbiBtaXN0YWtlLCBldmVuIGF0IGhpZ2hlciBsZXZlbHMsIHRvIGdldCBtYXJyaWVkIHRvIHRoZSBpZGVhIG9mIHJ1bmluZyBzdHVmZiBpbiBzZXRzLiBUaGVyZSByZWFsbHkgYXJlbiB0aGF0IG1hbnkgdW5pdHMgdGhhdCBIQVZFIHRvIGJlIHJ1bmVkIHdpdGggYSBjZXJ0YWluIHNldCBpbiBvcmRlciB0byBiZSBlZmZlY3RpdmUsIGFuZCB0aGVyZSBhcmUgbG90cyBvZiB1bml0cyB3aG8geW91IGNhbiBzbGFwIGFueSBvbGQgYnJva2VuIHN0dWZmIG9uIGFuZCB0aGV5IHdvcmsgZmluZS4gClNvbWVvbmUgaW4gdGhlIHRlYW0gZGVjaWRlcyB0aGV5IG5lZWQgbW9yZSBwZW9wbGUgc28gaHIgcHV0cyB0b2dldGhlciBhIGZvciBoaXJlIGFuZCBhc2tzIHRoZW0gYWJvdXQgdGhlIHJlcXVpcmVtZW50cy4gSGUgdGhlbiBsaXN0cyBzb21lIHN0dWZmIHRoYXQgcmVxdWlyZWQgYW5kIHNvbWUgdGhhdCBuaWNlIHRvIGhhdmUgYW5kIGhlIG1ha2VzIGEgbGlzdCBvZiAicmVxdWlyZW1lbnRzIiBvdXQgb2YgdGhpcy4gCkhlIGRpZG4gZm9yY2UgbWUgdG8gZ28gdG8gdGhlIGRvY3Rvci4gSGUgc3VwcG9ydGVkIG1lIHdpdGggaHVncyBhbmQga2luZCB3b3JkcyBhbmQgYWx3YXlzIGEgbG92aW5nIGdlc3R1cmUgb2YgdHJ5aW5nIHRvIGdldCBoZXIgdG8gc2VlayBoZWxwLiBIZSBtYWRlIG15IGRvY3RvciBhcHBvaW50bWVudCBhbmQgd2VudCB3aXRoIG1lIGluIG9yZGVyIHRvIGhlbHAgZGVzY3JpYmUgbXkgc3ltcHRvbXMuIApRdWVscyBxdWUgc29pZW50IGwnaW50cnQgb3UgbGEgcXVhbGl0IGRlcyBjaGFuZ2VzLCBlc3NheWV6IGQndHJlIGF0dGVudGlmKHZlKSBhdSBnb3QgZGVzIHBsYXRzIHBvdXIgZW4gcmV0aXJlciBsZSBtYXhpbXVtIGRlIHBsYWlzaXIuIFBhcnRpY2lwZXogYXVzc2kgYXV4IGNvbnZlcnNhdGlvbnMgZW50cmUgbGVzIHBsYXRzIDogbGEgY29udml2aWFsaXQgZXN0IHVuZSBwYXJ0IGVzc2VudGllbGxlIGRlIGNlcyBtb21lbnRzIGV0IHRyZSBwbG9uZyhlKSBkYW5zIGxlcyBjaGFuZ2VzIHZvdXMgdml0ZXJhIGRlIHZvdXMgcmVzc2VydmlyIHBhcyBzaW1wbGUgaW5hY3Rpb24uIFNpIHZyYWltZW50IHZvdXMgdm91cyBlbm51eWV6LCBxdWUgdm91cyBuZSByYWZmb2xleiBwYXMgZGUgY2VzIHJlcGFzICByYWxsb25nZSwgcHJvcG9zZXogZCdhaWRlciBhdSBzZXJ2aWNlLCBjZWxhIHZvdXMgcGVybWV0dHJhIGQndHJlIHVuIHBldSBhY3RpZih2ZSkuCkkgZG9uIHRoaW5rIHlvdXIgd2lmZSBpcyB0aGUgZW1vdGlvbmFsIHJvY2sgeW91IHRoaW5rIHNoZSBpcyAoYXQgbGVhc3QgYXMgSSBkZWZpbmUgaXQpLiBBbiBlbW90aW9uYWwgcm9jayBpcyBzb21lb25lIHdobyBpcyBhYmxlIHRvIHByb2Nlc3MgZW1vdGlvbnMgZm9yIHdoYXQgdGhleSBhcmUgYW5kIG5vdCBsZXQgdGhlbSBjb250cm9sIHRoZWlyIGxpZmUgb3IgYmVoYXZpb3IuIEl0IHNvdW5kcyBtb3JlIGxpa2UgeW91ciB3aWZlIHN1cHByZXNzZXMgdGhpbmdzIGFuZCB0aGVuIHRoZXkgZXJ1cHQsIHdoaWNoIGlzIG5vdCB0aGUgc2FtZSB0aGluZy4uIApWaXNpdCBmcmllbmRzLiAKTXkgb2xkIGJvc3Mgd2FzIG9uZSBvZiB0aGUgZ3V5cyB3aG8gd2FzIHRyYWluZWQgdG8gZG8gdGhpcy4gCkxpa2UsIGJpZyBwaWN0dXJlPyBQYXlpbmcgbXkgYmlsbHMsIGNvbnRpbnVpbmcgbXkgZWR1Y2F0aW9uLCBob3cgdG8gYWR2YW5jZSBteSBjYXJlZXIsIHRoZSBpbmNyZWFzZSBpbiB0aGUgZ2xvYmFsIHdlYWx0aCBnYXAsIHByb3RlY3RpbmcgYSBmcmVlIGFuZCBvcGVuIGludGVybmV0LCBoZWxwaW5nIHRoZSBsZXNzIHByaXZpbGVnZWQgbWVtYmVycyBvZiBteSBjb21tdW5pdHksIGFuZCBnZXR0aW5nIHRvIHVuaXZlcnNhbCBoZWFsdGggY2FyZSBjb3ZlcmFnZSBpbiB0aGUgVW5pdGVkIFN0YXRlcy4KQXNMb3JkIEJ1ZGRoYSBZb3Ugc2hvdyBjb21wYXNzaW9uIHRvd2FyZCBhbGwgdGhlIGxpdmluZyBiZWluZ3Mgc3VmZmVyaW5nIGluIHRoaXMgd29ybGQsIGFuZCBhdCB0aGUgZW5kIG9mIHRoZUthbGkgeXVnYSBZb3UgYXBwZWFyIGFzIEthbGtpIHRvIGJld2lsZGVyIHRoZSBtbGVjY2hhcyBbZGVncmFkZWQgbG93IGNsYXNzIG1lbl0uIk90aGVyIHNjaG9vbHMgd2hvIGZhdm9yIExvcmQgVmVua2F0ZXNod2FyYSAodXN1YWxseSBTcmkgVmFpc2huYXZzIEkgZmluZCksIGNvdW50IEhpbSBhcyBhbiBhdmF0YXIgYW5kIHB1dCBIaW0gbmludGguIApSZWxheCBhbmQgRm9yZ2V0IHRoZSB0cm91YmxlcyBvZiB0aGUgZGF5LiBUaGFua3MgZm9yIHRoZSBuaWNlIHRlc3RpbW9uaWFscyBndXlzISA6KQpUaGUgYmVzdCBleGFtcGxlIG9mIHRoaXMgSU1PIGlzIERlc2hhdW4gV2F0c29uIGluIGNvbGxlZ2UgZm9vdGJhbGwvdGhlIE5GTC4gClRoZSBpbml0aWFsIGNsYWltIHdhcyBhYm91dCB3ZWFsdGggYmVpbmcgaW5oZXJpdGVkLiBSZXNlYXJjaCBoYXMgc2hvd24gbmVhcmx5IDk1JSBvZiB3ZWFsdGggaXMgaW5oZXJpdGVkLiBJIHByb3ZpZGVkIHNvdXJjZXMuIFlvdSBkaXNhZ3JlZWQgYW5kIHByb3ZpZGVkIHZlcnkgZHViaW91cyBhbmVjZG90YWwgZXZpZGVuY2UuIEkgYW0gbWVyZWx5IHF1ZXN0aW9uaW5nIGl0IGFuZCB5b3Uga2VlcCBwcmVzc2luZyB0aGF0IHlvdSBrbm93IG5vbiBwcmFjdGljaW5nIGRvY3RvcnMgYW5kIHByZXNpZGVudHMgdG8gaW5zdXJhbmNlIGNvbXBhbmllcyB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIHNheWluZyBtb3N0IG9mIHRoZW0gdXNlIHR1cmJvIHRheCBhbmQga2VlcCBtb3ZpbmcgdGhlIGdvYWxwb3N0cyBhbmQgY2hhbmdpbmcgdGhlIHN1YmplY3QuIFRoaXMgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCBDdWJhbiBpbW1pZ3JhbnRzIG9yIEl0YWxpYW5zIG9yIHRoZSBJcmlzaCBvciBNZXhpY2Fucy4gTm8gb25lIGluIHRoZWlyIHJpZ2h0IG1pbmQsIHdobyBoYXMgc29sZCBhIGNvbXBhbnkgd29ydGggYSBodW5kcmVkIG1pbGxpb24gKGV2ZW4gYWJvdmUgNyBtaWxsaW9uKSB3aWxsIGJlIHVzaW5nIHR1cmJvdGF4IGlmIHRoZSBzYWxlIGlzIHRocm91Z2ggbGVnYWwgYW5kIGxlZ2l0aW1hdGUsIG1lYW5pbmcgdGhhdCB5b3UgYXJlIHBheWluZyB0aGUgbmVjZXNzYXJ5IHRheGVzIGFuZCBoYXZlIHRoZSBuZWNlc3NhcnkgZG9jdW1lbnRzLiBUaGV5IHdvdWxkIGJlIGxvc2luZyBvdXQgb24gbWlsbGlvbnMgb2YgZG9sbGFycyB3b3J0aCBvZiBpbmNlbnRpdmVzIGFuZCBib251c2VzIGZvciB0aGVtc2VsdmVzLiBTbyBlaXRoZXIgeW91IHNwZXdpbmcgbm9uc2Vuc2UsIG9yIHRoZXNlIHBlb3BsZSB3aG8gaGF2ZSBodW5kcmVkcyBvZiBtaWxsaW9ucyBvZiBkb2xsYXJzIGJ1dCB1c2UgdHVyYm90YXggZGlkIG5vdCBhdHRhaW4gdGhlaXIgbW9uZXkgbGVnYWxseS4KQnV0IHJhY2luZyBzdXBwb3J0ZXJzIHNheSBncmV5aG91bmRzIGFyZSB0cmVhdGVkIGJldHRlciB0aGFuIG1vc3QgcGV0cyBhbmQgYXJlIGhhcHBpZXN0IHdoZW4gY29tcGV0aW5nLiBUaGV5IHNheSBpbmp1cmVkIGRvZ3MgZ2V0IHF1YWxpdHkgdmV0ZXJpbmFyeSB0cmVhdG1lbnQgYW5kIHJhY2luZyBvcHBvbmVudHMgZXhhZ2dlcmF0ZSB0aGUgZnJlcXVlbmN5IG9mIGluanVyaWVzIHRvIGdhcm5lciBkb25hdGlvbnMuIApBcyBzb29uIGFzIGEgY291bnRyeSBoYXMgY3JpdGljaXNtIG9mIENoaW5hIHRoZSBQYXJ0eSBzcG91dHMgYmFjayBub3QgdG8gbWVkZGxlIGluIENoaW5hIGludGVybmFsIGFmZmFpcnMuIApJIHVuZGVyc3RhbmQgdGhhdCBpdCdzIG5hdHVyYWwgZm9yIG91ciBsaXZlcyB0byBmb2xsb3cgYSBwYXR0ZXJuLCBhIGRhaWx5LCB3ZWVrbHkgYW5kIG1vbnRobHkgcm91dGluZSB0aGF0IGN5Y2xlcyBvdmVyIGFuZCBvdmVyIGFnYWluLiBUaGF0J3MgZmluZS4gClRoZXJlIGhhcyBiZWVuIG5vIGNoYW5nZSBvbiB0aGUgcGFya2luZyByZXF1aXJlbWVudHMsIHdoaWNoIHByZXNlbnRseSBzdGFuZCBhdCAzMiBiZWluZyBjcmVhdGVkLgpXaXRoIG91ciBnbyB0aHJvdWdoIHdlIHdlcmUgaW4gYSBwb3NpdGlvbiB0byBmaW5kIG91dCBTa3kzODg4IHdoaWNoIGNhbiBiZSBiZXN0IHN1cHBseSB0byByZWxpc2ggcnVubmluZyBsaWdodCBnYW1lLgpFdmVyeSBmaXJzdCB0aW1lIHBhcmVudCBpcyBjbHVlbGVzcyBhbmQgc29tZXRpbWVzIHRlcnJpZmllZCBhYm91dCB0aGUgcmVzcG9uc2liaWxpdHkuIFdlIG1hbmFnZS4KSGUgaGFzIHNpbWlsYXIgdHlwZSBsaW5lcyB0aGF0IGFyZSBqdXN0IG9uIHRoZSBlZGdlIG9mIHRoZSBmb3VydGggd2FsbCBsaWtlIHRoZSBpcm9uaW5nIG91dCBwbG90cyBsaW5lLCBhbmQgaGltIGJlaW5nIGJhc2ljYWxseSB0aGUgZmFuIGJhc2VzIHZvaWNlIHdoZW4gaGUncyBjb25mdXNlZCBhdCB0aGUgY2FzdGxlLiAKTWlzc2luZyB2YWx1ZSB3aGVuIHlvdSBoYXZlIGl0LCByaXNraW5nIHdheSB0b28gbXVjaCB3aGVuIHlvdSBkb24gVGhlIGJlc3Qgd2F5IHRvIGdldCBtb25leSBpbiB0aGUgcG90IGlzIGJldCB0aGUgc2FtZSBhbW91bnQgcmVsYXRpdmUgdG8gdGhlIHNpemUgb2YgdGhlIHBvdCBvbiBlYWNoIHN0cmVldC4gSWYgaGUgYmV0cyA3NSBpbnRvIDE4MCBhbmQgZ2V0cyBhIGNhbGxlciBoZSBoYXMgMTMwIGJlaGluZCBhbmQgdGhlcmUgMzMwIGluIHRoZSBwb3QsIGFyb3VuZCA0MHBjdCBlYWNoIHN0cmVldC4gCklmLCBhZnRlciBmaW5kaW5nIG91dCBhYm91dCB0aGUgb3RoZXIgb2ZmZXIsIHRoZXkgdHJ5IGFuZCBjb3VudGVyIG9mZmVyIHlvdSBzb21ldGhpbmcgaGlnaGVyLiBEbyBub3QgdGFrZSBpdC4gQXQgdGhpcyBwb2ludCB0aGV5IHdpbGwgb25seSBiZSBidXlpbmcgdGltZSB0byByZXBsYWNlIHlvdSwgcGx1cyB5b3UgZG9uIHdhbnQgdG8gd29yayBmb3IgYSBjb21wYW55IHdobyBpcyB0cnlpbmcgdG8gbmlja2VsIGFuZCBkaW1lIHlvdXIgc2FsYXJ5IChha2EgZG9lcyBub3QgdmFsdWUgeW91ciB3b3JrKS4uIApBbmQgeW91ciBwb2ludD8KS2F0aWUgYW5zd2Vycy4gClRoZSBiZXN0LiAKV2hlbiB5b3Ugc3RhcnQgbG9va2luZyBmb3IgYSByb29tIHdoZXJlIHRvIHBsYXksIHlvdSB3aWxsIG1vc3QgbGlrZWx5IGZpbmQgdGhlIG1vc3QgcG9wdWxhciB3ZWJzaXRlcyBsaWtlIFBva2VyU3RhcnMsIFBhcnR5LCBGdWxsVGlsdCBhbmQgc28gb24uIApNeSBib3lmcmllbmQgd2VudCB0byBNZXhpY28gcmVjZW50bHkgYW5kIGNoZWF0ZWQgb24gbWUgdGhlcmUuIFRoZSBnaXJsIGZvdW5kIG1lIG9ubGluZSBhbmQgdG9sZCBtZSB0aGF0IHRoZXkgaG9va2VkIHVwLiBIZSBoYWQgdG9sZCBoZXIgaGUgZGlkbiBoYXZlIGEgZ2lybGZyaWVuZCBidXQgc2hlIGZvdW5kIG1lIHByZXR0eSBxdWljayBvbmxpbmUuCkFub3RoZXIgdmVyc2lvbiBvZiB0aGlzIGlzIGJlc3QgaWxsdXN0cmF0ZWQgaW4gYW4gYWN0dWFsIGhhbmQgSSBwbGF5ZWQuIEkgWC9SIGJsdWZmZWQgb24gYSB0dXJuIHRoYXQgY29tcGxldGVkIHRoZSBmbHVzaCBkcmF3LiBWaWxsYWluIGNvbnRlbXBsYXRlZCBhIGxvbmcgdGltZSwgYW5kIHRoZW4gdG9vayB0aGUgY2hpcCBvZmYgaGlzIGNhcmRzIGxpa2UgaGUgd2FzIGdvbm5hIGZvbGQsIHRoZW4gY2FsbGVkLiAKSWYgYXQgYW55dGltZSB5b3UgbG93IG9uIGhlYWx0aCwgcnVuIGFsbCB0aGUgd2F5IGJhY2sgdG8gc3BvdCAxIChvciBmdXJ0aGVyKSBhbmQgdXNlIGJsb29kIGJhcnJhZ2UuIEJ1dCBhcyB3aXRoIG1hbnkgYXNwZWN0cyBpbiB0aGlzIGdhbWUsIGEgbG90IG9mIGl0IGNvbWVzIGRvd24gdG8gUk5HLiBTb21ldGltZXMgU2lyZSB3aWxsIGFic29sdXRlbHkgZGVzdHJveSB5b3UgaW4gdGhlIGZpcnN0IHBoYXNlLiBCbG9vZCBCYXJyYWdlIG1pZ2h0IGp1c3Qgbm90IGhlYWwgeW91IGF0IGFsbC4gVGhlIHNjaW9ucyB3aWxsIHNvbWV0aW1lcyBoaXQgbm90aGluZyBhbmQgdGhlIG5leHQgZmlnaHQgd2lsbCBkZXN0cm95IHlvdS4gQXMgc2FpZCBiZWZvcmUsIHlvdSBjYW4gbGVhdmUgdGhlIGZpZ2h0IHdoZW5ldmVyIHlvdSB3YW50LCBqdXN0IG1ha2Ugc3VyZSB0byBydW4gYmFjayBpbW1lZGlhdGVseS4gVGhlIG9ubHkgdGltZSB0aGlzIG1pZ2h0IGNhdXNlIHNvbWUgcHJvYmxlbXMgaXMgZHVyaW5nIHRoZSBwaGFzZSBiZWZvcmUgaGUgdGVsZXBvcnRzIHlvdSwgYXMgaGUgY2FuIHJlZ2VuZXJhdGUgaGlzIGhlYWx0aCBxdWlja2VyIHRoYW4geW91IGNhbiBkbyBkYW1hZ2Ugb25jZSB5b3UgcmV0dXJuLiBUaGlzIGhhcyBvbmx5IGhhcHBlbmVkIG9uY2Ugb3IgdHdpY2UuClBsZWFzZSBsZXQgdXMga25vdyB3aGVuIGhlIGNvbWVzIGhvbWUhIEkgaG9wZSBoZSBpcyBqdXN0IG91dCBoYXZpbmcgYSBzYWZlIGFkdmVudHVyZS4gCllvdSdkIHdpbiBhIGxvdCBvZiBwb3RzLiAKVGhlIGN1cnJlbnQgTkZMIHJldmVudWUgc2hhcmluZyBtb2RlbCBkb2VzIG5vdCBpbmNsdWRlIGx1eHVyeSBzZWF0IHNhbGVzIGFuZCBjZXJ0YWluIG90aGVyIGFtZW5pdGllcywgdGhpcyBtZWFucyBtb3JlIG1vbmV5IGZvciBvd25lcnMgd2l0aCBzdGFkaXVtcyB0aGF0IG9mZmVyIGFzIG1hbnkgb2YgdGhlc2UgdGhpbmdzIHRoZXkgcG9zc2libHkgY2FuLiAKU2hlIHdhcyB1bmZhaXRoZnVsIGFzIHdlbGwsIGFuIHVuZm9ydHVuYXRlIGNvbW1vbiBkZW1vbmlhbnRvciBpbiBtYW55IG9mIG15IHJlbGF0aW9uc2hpcHMgdGhhdCBoYXMgdXNodXJlZCBtZSB0byByZWFzc2VzcyBteSBvd24gcGVyc29uYWxpdHksIHZhbHVlcywgYW5kIHBlcmNlcHRpb24uIApOb3csIEknbSBhdCBhIGRpZmZlcmVudCBzdGFnZSBpbiBteSBsaWZlIHdoZXJlIEkgaGF2ZSBhbGwgb2YgdGhlIGx1eHVyaWVzIHRoYXQgSSB3YW50ZWQuIApUaGV5IHNob3VsZCBiZSBzaG93aW5nIHNpZ25zIG9mIGltcHJvdmVtZW50IG92ZXIgdGhlIGNvdXJzZSBvZiB0aGlzIHNlYXNvbi4gCklmIHlvdSBqdXN0IHNpdCB0aGVyZSBhbmQgb25seSBhZGRyZXNzIHRoZW0gd2hlbiB0aGV5IHRhbGsgdG8geW91LCB0aGV5IHdpbGwgbm90IHJlbWVtYmVyIHlvdSBhdCBhbGwuIApXaGV0aGVyIGhlIGludGVuZGVkIGZvciB0aGUgYmFsbCB0byBtYWtlIGNvbnRhY3Qgd2l0aCBoaXMgYXJtIHdoaWxlIGp1bXBpbmcgKG5vdCB0aGUgb3RoZXIgd2F5IGFyb3VuZCkgd2UgbmV2ZXIga25vdyBhbmQgdGhhdCBkZWJhdGUgY291bGQgcmFnZSBvbiB1bnRpbCB0aGUgZW5kIG9mIHRpbWUgYnV0LCBhcyBpdCBzdGFuZHMsIHRoaXMgc2hvdWxkbiBoYXZlIGJlZW4gZ2l2ZW4gICBieSB0aGVpciBvd24gcnVsZXMuLiAKRG9uIHRyeSB0byBlcmFzZSB0aGUgcGFzdCwganVzdCBkbyBiZXR0ZXIgaW4gdGhlIGZ1dHVyZS4gTmV4dCB0aW1lIGtub3cgbW9yZSBhYm91dCB0aGUgcGVyc29uIHlvdSB3b3JraW5nIHdpdGgsIHNvIHlvdSBkb24gaGF2ZSB0byBiZSBlbWJhcmFzc2VkIGZvciBoYXZpbmcgd29ya2VkIHdpdGggdGhlbS4KVGhlIDE1IG1pbnV0ZSBlbWVyZ2VuY3kgb3B0aW9uIGlzIGdvb2QgaWYgeW91IGRvbiBoYXZlIGRydW5rIGRpY2toZWFkIGZyaWVuZHMgdGhhdCBjYWxsIHlvdSBhdCB0aGUgY3JhY2sgb2YgZGF3biB0byBzYXkgd2hhdHMgdXAuCkkga25vdyBvZiBhdCBsZWFzdCBvbmUgZWFnbGUgbmVzdCBuZWFyIHRoZSBzb3V0aCBlbmQgb2YgTGFrZSBNb25vbmEgYW5kIHRoZSBZYWhhcmEgUml2ZXIgYW5kIGluIHN1bW1lciBmcmVxdWVudGx5IHNlZSBlYWdsZXMgYXQgdGhlIG5vcnRoIGVuZCBvZiBMYWtlIE1vbm9uYSBuZWFyIFNhbiBEYW1pYW5vLiBJIHN0aWxsIHRyZWF0IHNlZWluZyBhbiBlYWdsZSBpbiB0aGUgd2lsZCBhcyBhIHRyZWF0LCBldmVuIGlmIGl0IGlzIGJlY29taW5nIG1vcmUgY29tbW9uLi4gCkFuZCB3aG8gd2FzIGJlaGluZCB0aGUgY3JlYXRpb24gb2YgdGhlIEcgMjA/IGZyaWVuZCBhbmQgbmVvbGliZXJhbCBhcG9sb2dpc3QgTGFycnkgU3VtbWVycy4gUmlnaHQuIFN1bW1lcnMsIGZvcm1lciBIYXJ2YXJkIHByZXNpZGVudCB3aG8gZG9lc24gdGhpbmsgd29tZW4gY2FuIGRvIG1hdGggYW5kIGlzIGFsc28gb25lIG9mIE9iYW1hIHRvcCBlY29ub21pYyBhZHZpc2Vycywgd2FzLCBpbiAxOTk5LCBCaWxsIENsaW50b24gU2VjcmV0YXJ5IG9mIHRoZSBUcmVhc3VyeS4gCkJhc2ljYWxseSwgbm93IG15IGdvYWwgaXMgdG8gcGxheSBhIHBlcmZlY3QgR1RPIGdhbWUsIHJhdGhlciB0aGFuIGJlIG9ic2Vzc2VkIHdpdGggbWFraW5nIG1vbmV5IChvYnZpb3VzbHkgbW9uZXkgc2hvdWxkIGNvbWUgd2l0aCBhIEdUTyBnYW1lKS4gCkRlR3VhcmRpYSwgU21pdGgncyBwcm9tb3Rlciwgc2VlcyB0aGlzIGFzIGFuIGV4Y2VsbGVudCBvcHBvcnR1bml0eSBmb3IgU21pdGggdG8gc2hvY2sgdGhlIHdvcmxkLgpMb29rcyBsaWtlIGl0IHByb2JhYmx5IHNvbWUgc29ydCBvZiBib3QgdGhhdCBpcyBhdCBsZWFzdCBhdHRlbXB0aW5nIHRvIHBvc3QgYW4gSFRNTCBmb3JtYXR0ZWQgbGlzdCBvZiBsaW5rcyB0aGF0IGFyZSBhbGwgdGl0bGVkIGZvciBtYXNzYWdlcyBvciBwb29scyBpbiBkaWZmZXJlbnQgdG93bnMgaW4gS29yZWEuIFRoZSBsb25nIHN0cmluZ3Mgb2YgbnVtYmVycyBhcmUgdGhlIGhleCBjb2RlcyBmb3IgZGlmZmVyZW50IEtvcmVhbiBjaGFyYWN0ZXJzIGFuZCBhbGwgZGlyZWN0IGZvciB0aGVzZSBLb3JlYW4gc3RyaW5ncyB0byBiZSBxdWVyaWVkIGluIHdoYXQgbG9va3MgbGlrZSBhIGJ1bmNoIG9mIHJhbmRvbSB3ZWIgc2l0ZXMgc2VhcmNoIGZ1bmN0aW9ucywgZm9yIGluc3RhbmNlIG9uZSBvZiB0aGVtIHNlYXJjaGVzIGZvciB0aGUgc3RyaW5nIGluIGEgc2VhcmNoIGZvciB0aGUgd2ViIHNpdGUgb2YgUm91bmQgUm9jayBJU0QsIGEgc2Nob29sIGRpc3RyaWN0IGluIFRleGFzLiBXaGF0LCBhcmUgeW91IGdvbm5hIHdyaXRlIGFuIElrZWEgbGlrZSByb29tIHBsYW5uZXIgZm9yIHJlc3RhdXJhbnQgb3duZXJzPyBBbmQgdGhlbiB0aGV5IGdvbm5hIHNwZW5kIGhvdXJzIG9uIGl0PyBBbmQgdGhlbiB0aGV5IGdvaW5nIHRvIGtlZXAgaXQgdXBkYXRlZCB3aGVuZXZlciB0aGV5IGNoYW5nZSBmbG9vciBwbGFucz8gSnVzdCBmb3Igd2hhdCByZWFzb24sIHNvIHBlb3BsZSBjYW4gYmUgc2xpZ2h0bHkgbW9yZSBwaWNreSB3aGVuIHBpY2tpbmcgdGFibGVzIGFuZCBjYW4gcmVzZXJ2ZSBhIHRhYmxlIHRoYXQgY2FuIGJlIGNvbWJpbmVkIHdpdGggdGhlIG5leHQgb25lIGZvciBhIHBhcnR5IG9mIDYgZm9yIHRoZWlyIHBhcnR5IG9mIDM/IEFnYWluLCBhbGwgZm9yIGJhc2ljYWxseSBubyBwYXlvZmYgZm9yIHRoZSByZXN0YXVyYW50IG93bmVyPyBPaCBhbmQgSSBzdXBwb3NlIHRoZSByZXN0YXVyYW50IG93bmVyIGlzIGV4cGVjdGVkIHRvIHBheSBmb3IgaXQgdG9vPyBUaGlzIGlzIHRoZSBoaWdoZXN0IHZvdGVkIGlkZWEgb24gdGhpcyBzaXRlLi4gClRvb2sgbWUgdHdvIDQ1IG1pbiBjbGFzcyBwZXJpb2RzIHRvIGZpbmlzaCBvbmUsIGFuZCB0aGF0IHdpdGggd2FpdGluZyBpbiBsaW5lIGJlaGluZCBhbGwgdGhlIG90aGVyIGtpZHMgdG8gdXNlIHRoZSB0aW4gc25pcHMgYW5kIHNoaXQuIAo5IHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KV2VsbCwgdGhlIGV4YW1wbGUgcHJvdmlkZWQgZm9yICgzKSBraW5kIG9mIHJlZnV0ZXMgKDIpLCBpZSwgZWZmZWN0aXZlbmVzcyBnb2VzIGRvd24gd2hlbiB5b3UgcmVtb3ZlIHRoZSBsZWFkZXJzaGlwLCBidXQgaWYgKDIpIHdlcmUgcmVhbGx5IHRydWUgYW5kIHRoZSBuZXR3b3JrIHdhcyBzZWxmIG9yZ2FuaXppbmcsIGxlYWRlcnNoaXAgd291bGRuIG1hdHRlci4KMSBwb2ludCAgc3VibWl0dGVkIDI4IGRheXMgYWdvCkJleW9uZCBjb21wYXRpYmlsaXR5IHRob3VnaCwgSSBub3Qgc3VyZSBpdCBnaXZlcyB5b3UgYW55IG1vcmUgZGVmaW5pdGl2ZSBpbmZvcm1hdGlvbiBhYm91dCBhIG1hbiB0aGFuIGl0IGRvZXMgYWJvdXQgYSB3b21hbi5TMWF5ZXIgICA0IHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ29UaGlzIGlzIGJlY2F1c2UgZXZlcnlvbmUgaXMgcnVzaGluZyB0byBzdGFydCBhIGZhbWlseS4gCk9mdGVudGltZXMgaXQgc3RyYWlnaHQgb24gYmUgYSBiZXR0ZXIgd2lmZSB0aGFuIHlvdSIgc2VudGltZW50LiAKVGhlIG9idmlvdXMgc29sdXRpb24ga2lsbCBhbGwgdGhlIHJlbWFpbmluZyBQYWxlc3RpbmlhbnMgaXMgb2ZmIHRoZSB0YWJsZSBmb3IgdGhlIHRpbWUgYmVpbmcsIGJ1dCB3aGF0IGNob2ljZSBkbyB0aGV5IGhhdmU/IFRoZXkgYXJlIHVud2lsbGluZyB0byBpbnRlZ3JhdGUgdGhlc2UgcGVvcGxlIGludG8gSXNyYWVsaSBzb2NpZXR5LCBmb3IgZmVhciBvZiBhIE11c2xpbSBtYWpvcml0eS4gUGVyaGFwcyB0aGV5IGNvdWxkIGNvbnF1ZXIgYSBuZWlnaGJvcmluZyBjb3VudHJ5IGFuZCBkbyBhIGZvcmNlZCByZXNldHRsZW1lbnQuIApPbiBkaXQgc291dmVudCBxdWUgbGEgY3Vpc2luZSBlc3QgYWZmYWlyZSBkJ2ludHVpdGlvbiBldCBsYSBwdGlzc2VyaWUgYWZmYWlyZSBkZSBwcmNpc2lvbi4gQ2VydGVzIG1haXMgcXVhbmQgb24gYSBkYW5zIHNhIGJhbnF1ZSBkZSByZWNldHRlcyBxdWVscXVlcyBjbGFzc2lxdWVzIGRlIGJhc2UsIHRlbCBsZSBndGVhdSBhdSB5YW91cnQsIG9uIHBldXQgbGVzIGRjbGluZXIgIGwnaW50dWl0aW9uLiAKVGhlIE1haW5lIEh1bWFuIFJpZ2h0cyBDb21taXNzaW9uLCBkZXNwaXRlIHRoZSBwYW5pYywgc2VlbXMgaW50ZXJlc3RlZCBpbiBrZWVwaW5nIGJpbmFyeSB1cmluYXJ5IHNwYWNlIGluIHBsYWNlLiAKQmV0dGluZyBhdCB0aGUgb2ZmOiBQaW5nIFBvbmcgU2l2b2xhIDEzIDIsIFBlcmNlIFJvY2sgMTUgMiBOb3RhYmxlIEQnRXN0cnV2YWwgOCAxLCBDbGFyaWZpZWQgMTcgMiBUaHJlZSBNaXJyb3JzIDkgMSwgMTAgMSBiYXIKQW5udWFsIEpva2VycyBXaWxkIFBva2VyIFJ1biBsb29rcyB0byBoZWF0IHVwIFZhbGVudGluZQpNYXhpY2F0ICAyOCBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCkhKIEZKIG1heWJlIG1vcmUuIApVQ0xBIFJlY3JlYXRpb24gaXMgY29udGludWluZyBvdXIgcGFydG5lcmluZyB3aXRoIFNwZWNpYWwgT2x5bXBpY3MgU291dGhlcm4gQ2FsaWZvcm5pYSBhbmQgU3BlY2lhbCBPbHltcGljcyBhdCBVQ0xBIHRvIGhvc3QgVW5pZmllZCBTcG9ydHMgbGVhZ3VlcyB0aHJvdWdob3V0IHRoZSAyMDE3IDE4IGFjYWRlbWljIHllYXIhIFVuaWZpZWQgU3BvcnRzIHByb21vdGVzIGluY2x1c2lvbiBieSBqb2luaW5nIGluZGl2aWR1YWxzIHdpdGggYW5kIHdpdGhvdXQgaW50ZWxsZWN0dWFsIGRpc2FiaWxpdGllcyBvbiB0aGUgc2FtZSB0ZWFtLiBUaGUgdGVhbXMgYXJlIG1hZGUgdXAgb2YgdGhvc2Ugd2l0aCBzaW1pbGFyIGFnZSBhbmQgYWJpbGl0eSwgd2l0aCBzcG9ydCBhcyB0aGUgY29tbW9uIGJvbmQuIApBOiBXaGF0IGEgYm96byEgRmlyc3QgaGUgYXNrcywgdGhlbiBjYWxscyB5b3UgaW1tb3JhbCB3aGVuIHlvdSB0ZWxsIGhpbS4gTGV0IGhpbSBrbm93IHRoYXQgeW91ciBoaXN0b3J5IGlzIHlvdXJzLCBub3QgaGlzLCBhbmQgdGhhdCB5b3Ugb3duIGl0LiAKV2hlbiBteSBncmFuZG1vdGhlciB3YXMgZHlpbmcgaW4gaG9zcGl0YWwgaSBicm9rZSBkb3duIGFuZCBiZWdhbiBiYXdsaW5nLiBIb3dldmVyIGEgZmV3IGRheXMgbGF0ZXIgd2hlbiBzaGUgZXZlbnR1YWxseSBwYXNzZWQgdGhlcmUgd2VyZSBubyB0ZWFycyBhdCBhbGwuIEkgZmVsdCBudW1iIGZvciBhIHdlZWsgYW5kIHRoZW4gYWZ0ZXIgdGhlIGZ1bmVyYWwgd2FzIHJlYWR5IHRvIG1vdmUgb24uIApXb3csIGl0IGxpa2UgcmVhZGluZyB0ZXh0cyBmcm9tIG15IHdhaWYgbW9tISBUaGUgIkkgZ29pbmcgdG8gZGllIHNvb24gKGV2ZW4gdGhvdWdoIEkgYW0gYmFyZWx5IDYwKSwgc28geW91IHNob3VsZCBmZWVsIGd1aWx0eSBhYm91dCBpdCIgaXMgYSBmYXZvcml0ZSB0aGVtZSBvZiBoZXJzLCBhbmQgaGFzIGJlZW4gZm9yIHllYXJzLgpUaGUgYmFuIHNlZXMgaGltIHJ1YmJlZCBvdXQgaW1tZWRpYXRlbHkgZm9yIGZpdmUgeWVhcnMsIGJlZm9yZSBhbm90aGVyIGZpdmUgYXJlIHN1c3BlbmRlZCB3aXRoIEhvcG9hdGUgcmVxdWlyZWQgdG8gYXBwbHkgZm9yIGFueSByb2xlIGhlIHdpc2hlcyB0byBmaWxsIGluIHRoYXQgdGltZS4KSW4gcHJhY3RpY2UsIGl0IHByb2JhYmx5IG5vdCBvbmx5IGVhc2llciB0byBtYWtlIG1vbmV5LCBidXQgYWxzbyB0byBwcm9iYWJseSBtYWtlIG1vcmUgbW9uZXkgd2l0aCBub25mcmVlIHNvZnR3YXJlLiBBbmQgYXMgYSBjb25zZXF1ZW5jZSwgbm9uZnJlZSBzb2Z0d2FyZSBlbmRzIHVwIGJlaW5nIG1vcmUgcG9saXNoZWQuIApNb3N0IG9mIHRoZXNlIGluZGl2aWR1YWxzIGFyZSBxdWl0ZSBjb250ZW50IGtlZXBpbmcgdGhlIHdyb25nIGNob2ljZSBiZWNhdXNlIGl0IHRoZSB3cm9uZyBjaG9pY2UsIGJ1dCBiZWNhdXNlIHRoZXkgdW5hd2FyZSBvZiBpdC4uIApSdWxlIDg6IEVsaW1pbmF0ZSBBbGwgRm9ybXMgb2YgRGlzdHJhY3Rpb25zCk9yIHNvbWV0aGluZy4gCkFsbCBDaGlsZHJlbidzIHRvb2sgYmFiaWVzIGZyb20gYXMgZmFyIGF3YXkgYXMgdGhlIENhcmliYmVhbi4gClRoYXQgbWVhbnQgb2NjYXNpb25hbGx5IGRvaW5nIHRoaW5ncyBsaWtlIHNwZW5kaW5nIHRoZSB3aG9sZSBkYXkgaW4gYmVkIHdhdGNoaW5nIE5ldGZsaXggb3IgZ29pbmcgdG8gYSBjYWZlIG9yIHBhcmsgYW5kIGp1c3QgcmVhZGluZyBhIGJvb2sgYWxsIGRheSB3aXRob3V0IGZlZWxpbmcgZ3VpbHR5IGFib3V0IG5vdCAiZG9pbmciIGFueXRoaW5nLiBPdGhlcndpc2UgSSdkIGp1c3QgYnVybiBvdXQgYW5kIGZlZWwgdW5oYXBweS5JJ20gcXVpdGUgaW50cm92ZXJ0ZWQgYW5kIHJlYWxseSBlbmpveSBteSBvd24gY29tcGFueSBhbmQgaXQncyB2ZXJ5IG9mdGVuIEkganVzdCBkb24ndCBwYXJ0aWN1bGFybHkgbGlrZSBwZW9wbGUgaGFoYWggYnV0IGV2ZW50dWFsbHkgSSBzdGFydGVkIHNlZWluZyBhIHBhdHRlcm4gd2hlcmUgaWYgSSBkaWRuJ3QgcmVhbGx5IGNvbm5lY3Qgd2l0aCBwZW9wbGUgZm9yIGEgd2hpbGUgSSB3b3VsZCBmaW5kIG15c2VsZiBmZWVsaW5nIGhvbWVzaWNrIGFuZCBub3QgaGF2aW5nIHRoZSBtb3RpdmF0aW9uIHRvIGdvIGFuZCBkbyB0aGluZ3MgYW5kIG92ZXIgdGhlIG1vbnRocyBJIHB1c2hlZCBteXNlbGYgYSBsb3QgYW5kIGdvdCBhIGxvdCBiZXR0ZXIgYXQgYmVpbmcgYWJsZSB0byBhcHByb2FjaCBwZW9wbGUgYW5kIGdlbnVpbmVseSBlbmpveSB0aGVpciBjb21wYW55IHdpdGhvdXQgdGhlIHNvY2lhbCBhbnhpZXR5IG9yIHJlcHJvYWNoZnVsbmVzcyBjcmVlcGluZyBpbi4gClRoYXQgcmlnaHQuIEluIGludGVybmV0IGZvcnVtcy4gQW5kIHRoZSBleGFtcGxlcyBnbyBvbiwgYW5kIG9uLCBhbmQgb24sIG9mIHRoaXMuIApPYnZpb3VzbHksIGlmIHlvdXIgbWFuIGNoaWxkIHRoaW5rcyBoaXMgaWRlYSBvZiBhIG1lYWwgaXMgYSBib3cgb2YgRG9yaXRvcyB3aXRoIGEgZ2xhc3Mgb2YgTW9uc3RlciBlbmVyZ3kgZHJpbmssIHRoZW4gaG9uZXksIHdhdmUgdGhvc2UgcmVkIGZsYWdzIGFuZCBnZXQgdGhlIGhlbGwgYXdheSBmcm9tIHRoYXQgcmVsYXRpb25zaGlwISBUaGlzIGNhbiBiZSB3YWl0cmVzc2VzLCByYW5kb20gcGVvcGxlLCBjYXNoaWVycywgb3IgcmVhbGx5IGFueW9uZSB3aG8gaXMgc3VwcG9zZWQgdG8gYmUgZG9pbmcgYSBzZXJ2aWNlIGZvciBoaW0uIEVtb3Rpb25hbGx5IGltbWF0dXJlIHBlb3BsZSBlbmpveSBwbGF5aW5nIHRoZSByb2xlIG9mIHZpY3RpbS4gClRoZSBwbGF5ZXIgdG8gdGhlIGxlZnQgb2YgdGhlIHNtYWxsIGJsaW5kIHBvc3RzIHRoZSBiaWcgYmxpbmQgKHRoZSBtaW5pbXVtIGJldCkgLgpTb21lIHJlYWxpemUgdGhpcyB0cnV0aCAsIG90aGVycyBmYWlsIHNob3J0IC5UaGUgc2NpZW5jZSBvZiBib3hpbmcgaXMgc28gdmFzdCBhbmQgcmljaCwgdGhhdCBuYXJyb3dpbmcgdGhlIG1lYW5pbmcgb2YgZ3JlYXRuZXNzIHRvIHdpbnMgbG9zc2VzIGlzIGFuIGlubm9jZW50IGJ1dCBub25ldGhlbGVzcyBtYWpvciBtaXN0YWtlLiAKRm9yIFVzZXIgUHJvdmlkZWQgQ29udGVudCwgd2UgYXJlIG1lcmVseSBob3N0aW5nIGFuZCBwcm92aWRpbmcgYWNjZXNzIGFzIHdlbGwgYXMgcHJvdmlkaW5nIHRvb2xzIHRvIHBvc3QgYW5kIHNoYXJlIGNvbnRlbnQsIGFuZCB3ZSBjYW5ub3QgYWNjZXB0IGFueSBsaWFiaWxpdHkgd2l0aCByZWdhcmQgdG8gc3VjaCBtYXRlcmlhbCAoaW5jbHVkaW5nIHdpdGggcmVzcGVjdCB0byBpdHMgYWNjdXJhY3kpLiAKUm9ubmllIGhhcyBtaWxsaW9ucyBtb3N0IGxpa2VseS4gUmljaCBndXlzIGdldCBnaXJscy5TYWwgY2FuIGJ1bGxzaGl0IGhpcyB3YXkgdGhyb3VnaCBsaWZlIGFuZCB0aGF0IGlzIHdoYXQgbWFrZXMgaGltIHN1Y2Nlc3NmdWwgd2l0aCB3b21lbi4gSGUgYWxzbyBoYWQgYSBqb2IgYXMgYSBzdWNjZXNzZnVsIHN0b2NrYnJva2VyLlJpY2hhcmQgbWFrZXMgYSAxMDBrLCBoYXMgYSBwZXJzb25hbGl0eSwgYW5kIGhlIHdvdWxkIG9mIGJlZW4gYSBzdGFnZSBoYW5kIG9yIHN0cmF0ZWdpc3QgZm9yIHNlbGxpbmcgYmFuZCB0c2hpcnRzIHdoaWNoIHBheXMgZGVjZW50LkpEIGlzIGEgY29tcGxldGUgbG9zZXIgZXhjZXB0IGZvciBoaXMgam9iIHRoYXQgcGF5cyBhYm91dCAxMDBrIGFuZCBpcyBzZW1pIGZhbW91cy4gCkluIHRoaXMgc3BvdCwgaW4gYSBkYWlseSB0b3VybmV5LCBJIGFtIDQgYmV0L2NhbGxpbmcgaW4gdGhpcyBzcG90LiBGaXJzdCB5b3UgZG8gaGF2ZSAyIGJsb2NrZXJzIHRvIEFBL0tLIHNvIHRoZSBvZGRzIGFyZSBsZXNzIGxpa2VseSBoZSBoYXMgdGhhdC4gClRoZXJlIGFyZSBhbHNvIGRlcG9zaXQgYm9udXNlcyB3aGVyZSBwbGF5ZXJzIGNhbiBoYXZlIGEgYm9udXMgdGhhdCB3b3VsZCBtYXRjaCB0aGUgYW1vdW50IG9mIHRoZWlyIGRlcG9zaXQgdG8gYSBjZXJ0YWluIHBlcmNlbnRhZ2UuIApXb3JsZCBjb3VsZCBiZSBhIGdhbWUgdGhhdCByZXF1aXJlcyBwbGF5ZXJzIHRvIG1haW50YWluIHRoYXQgYmFsYW5jZS4gCkZlYnJ1YXJ5IDIyOiBBIGZldyBkYXlzIG9sZCBiYWJ5IGdpcmFmZmUgc3RpY2tzIG91dCBpdHMgdG9uZ3VlIGF0IHRoZSBPcGVsem9vIGluIEtyb25iZXJnIGluIHRoZSBUYXVudXMgcmVnaW9uLCB3ZXN0ZXJuIEdlcm1hbnksIG9uIEZlYnJ1YXJ5IDIyLCAyMDExLiAKU29tZW9uZSBzaHV0IHRoaXMgcGxhY2UgZG93biBhbmQgbGV0IHRoZXNlIGdpcmxzIGdvIHdvcmsgc29tZXdoZXJlIGVsc2UuIEkgaGF2ZSB0byBhZGQgdGhhdCBJIFdBUyBoYXZpbmcgYSBnb29kIG1hc3NhZ2UsIGJ1dCBvYnZpb3VzbHkgdGhpcyBwbGFjZSBpcyBiZWluZyByYW4gaW50byB0aGUgZ3JvdW5kIGJ5IGJhZCBtYW5hZ2VtZW50LiBOb3RlOiBXaGVuIHlvdSBlbnRlciwgbG9vayBhdCB0aGUgbWFuYWdlciBmYWNlLiAKV2U/ZCBsaWtlIHRvIHNlZSBNYWpvciBQb2tlciBUb3VybmV5cyBzdWNoIGFzIFdQVCwgV29ybGQgU2VyaWVzIG9mIFBva2VyLCBldGMuLCBiZWluZyBoZWxkIGluIE11bWJhaSBhcyB3ZWxsLiAKV2hpbGUgdGhlcmUgd2lsbCB1bmRvdWJ0ZWRseSBiZSBwbGVudHkgb2Ygc3VycHJpc2UgYWR2ZXJ0aXNlbWVudHMgcG9wcGluZyB1cCBkdXJpbmcgdGhlIGJpZyBnYW1lLCBjb21wYW5pZXMgaGF2ZSBiZWd1biB0byB0cmVhdCB0aGUgbGVhZCB1cCB0byBTdXBlciBCb3dsIFN1bmRheSBhcyBpdHMgb3duIGFkdmVydGlzaW5nIG9wcG9ydHVuaXR5LCByZWxlYXNpbmcgdGVhc2VycyBhbmQgc29tZXRpbWVzIGZ1bGwgY29tbWVyY2lhbHMgZGF5cyBvciB3ZWVrcyBiZWZvcmVoYW5kLiBXaXRoIHRoYXQgaW4gbWluZCwgd2UndmUgcHV0IHRvZ2V0aGVyIGFuIHVwZGF0aW5nIGd1aWRlIHRvIHRoZSBtb3N0IGludGVyZXN0aW5nLCBpbXBhY3RmdWwsIGFuZCBidXp6d29ydGh5IDIwMTkgU3VwZXIgQm93bCBjb21tZXJjaWFscywgd2l0aCBhIHBhcnRpY3VsYXIgZXllIHRvd2FyZCBhZHMgdGhhdCBCb3N0b25pYW5zIG1heSBlbmpveS4uIApCZWVuIG1hbnkgdGltZXMgYW5kIG5ldmVyIGxlZnQgbm90IGhhcHB5LiAKUmVzdWx0cyBTZWNvbmQgaGFuZCAgIHZpbGxpYW4gZGVjaWRlcyB0byB0aHJvdyBpbiBhIGNoaXAgd2l0aCBhICJJIG5lZWQgdG8gZ28gaG9tZSBhbnl3YXkiIGFuZCByb2xscyBvdmVyIDQsNiBvZmYgYWZ0ZXIgSSBzaG93ZWQgbXkgZnVsbCBob3VzZS4gCkFjdXByZXNzdXJlIGFuZCBhY3VwdW5jdHVyZSwgYXMgd2VsbCBhcyBvdGhlciB0aGVyYXBpZXMgc3VjaCBhcyBTaGlhdHN1IGFuZCByZWZsZXhvbG9neSwgYXJlIGJhc2VkIG9uIHRoZSBjb25jZXB0IG9mIGEgcGVyc29uJ3MgZW5lcmd5LCBvciBsaWZlIGZvcmNlLiBUaGlzIGJlbGllZiBzeXN0ZW0gdGhlb3JpemVzIHRoYXQgYSBsaWZlIGZvcmNlLCBrbm93biBhcyBjaGkgb3IgcWkgKHByb25vdW5jZWQgY2hlZSkgdHJhdmVscyB0aHJvdWdoIHRoZSBib2R5IGFsb25nIHBhdGh3YXlzIGNhbGxlZCBtZXJpZGlhbnMuIFRyYWRpdGlvbmFsIENoaW5lc2UgbWVkaWNpbmUgZGljdGF0ZXMgdGhhdCB0aGVyZSBhcmUgMjAgbWVyaWRpYW5zLiAKSW4gdGhlIHNlY29uZCBzZWN0aW9uLCBkcmF3IHRoZSBrbmlnaHRzIGFuZCBJcm9uY2xhZHMgb25lIGJ5IG9uZSBieSBzaG9vdGluZyB0aGVtLiBIYWxmIHRoZSB0aW1lIHRoZXkgYnVybiB0aGVtc2VsdmVzIHRvIGRlYXRoIGluIHRoZSBmaXJlIG9uIHRoZSB3YXkgdG8geW91Li4gCktub3cgdGhpcyB2aWRlbyB3YXMgYSBiaWcgd29yayBpbiBwcm9ncmVzcyBhbmQgdW5jbGVhciwgYnV0IEkgaGF2ZSBtYW55IG1vcmUgaWRlYXMgdGhhdCB3aWxsIGJlIG1vcmUgbnVhbmNlZCBhbmQgY2xlYXIgYW5kIGNvbmNpc2UgYXMgdGhpcyB3YXMganVzdCBteSBlbnRyeSBhbmQgdHJ5aW5nIHRvIGdldCBjb21mb3J0YWJsZSBhbmQgbGVhcm5pbmcgaG93IHRvIGNvbnZleSBteSBpZGVhcyBvbiB2aWRlby4KSW5kZWVkLCB0aGUgZGVncmVlIHRvIHdoaWNoIHdoaXRlIHBlb3BsZSBlbXBoYXNpemVkIG1lcml0IGZvciBjb2xsZWdlIGFkbWlzc2lvbnMgY2hhbmdlZCBkZXBlbmRpbmcgb24gdGhlIHJhY2lhbCBtaW5vcml0eSBncm91cCwgYW5kIHdoZXRoZXIgdGhleSBiZWxpZXZlZCB0ZXN0IHNjb3JlcyBhbG9uZSB3b3VsZCBzdGlsbCBnaXZlIHRoZW0gYW4gdXBwZXIgaGFuZCBhZ2FpbnN0IGEgcGFydGljdWxhciByYWNpYWwgbWlub3JpdHkuIApJZiB0aGUgZ292ZXJubWVudCB3b3VsZCB0YXggdW5oZWFsdGh5IGZvb2Qgd2l0aCBsaWtlIDUlIG1vcmUgYW5kIHVzZSB0aGF0IG1vbmV5IHRvIHN1YnNpZGl6ZSBvciBwcm9tb3RlIGhlYWx0aHkgZm9vZC9lYXRpbmcsIHRoYXQgd291bGQgcHJvYmFibHkgbWFrZSBpdCBlYXNpZXIgZm9yIHRoZSBwb29yIHRvIGNob3NlIGEgYmV0dGVyIGRpZXQgZm9yIHRoZW1zZWx2ZXMuLiAKSGUgc2FpZCB0aGUgc2hpcmVwbGFubmluZyBzY2hlbWUgaGFkIG5vIHByb3Zpc2lvbiBmb3Igd2hlcmUgcG9rZXIgbWFjaGluZXMgY291bGQgYmUgc2l0ZWQgaWYgYSBkZXZlbG9wbWVudCBhcHBsaWNhdGlvbiB3YXMgc3VjY2Vzc2Z1bC4gClRoaXMgaXMgZG93bnRvd24gc28gYWJvdXQgYSAzMCBtaW51dGVzIGJ1cyByaWRlIGZyb20gdGhlIHN0cmlwIGRlcGVuZGluZyBvbiB0cmFmZmljLiAKSnVuaSAyMDEzLi4gCk9uZSBvZiB0aGUgZmF2b3JpdGVzIGlzIHRoZSBzdWl0ZWQgd2F0ZXJwcm9vZiBzdGFsd2FydCB0YWJsZSBmZWx0IGNsb3RoLiBUaGlzIGV5ZSBjYXRjaGluZyBkZXNpZ24sIHdoaWNoIGZlYXR1cmVzIGEgcGF0dGVybiBtYWRlIHVwIG9mIHRoZSBmb3VyIGRpZmZlcmVudCBjYXJkIHN1aXRlcywgY29tZXMgaW4gY29sb3JzIGxpa2UgYmxhY2tiZXJyeTsgcm95YWwgYmx1ZTsgbWlkbmlnaHQgYmx1ZTsgcG9sbzsgcGxhdGludW07IGVtZXJhbGQ7IGZvcmVzdDsgYnVyZ2FuZHk7IHJlZDsgZ29sZDsgYnJvbnplOyBwdXJwbGU7IHNpbHZlcjsgY2hvY29sYXRlOyB5ZWxsb3c7IGFuZCBsYXZlbmRlci4gWW91IGNhbid0IGdvIHdyb25nIHdpdGggdGhpcyBwb2tlciB0YWJsZSBjbG90aC4gClRoZSBQc3ljaG9sb2dpY2FsIENvc3Qgb2YgTGVhcm5pbmcgdG8gS2lsbCBpbiBXYXIgYW5kIFNvY2lldHkKSW4gc21hbGwgc2hpcmVzIGxpa2UgTm9ydGhlcm4gR3JhbXBpYW5zIGFuZCBBcmFyYXQgICB3aXRoIGZvdXIgdmVudWVzIGJldHdlZW4gdGhlbSAgIGNvbWJpbmVkIGdhbWJsaW5nIGxvc3NlcyBvZiBtb3JlIHRoYW4gJDkgbWlsbGlvbiBhcmUgZXhwZXJpZW5jZWQgeWVhciBvbiB5ZWFyLgpNdWNoIG9mIHRoZSBjb250cm92ZXJzeSBjb25jZXJuaW5nIHRoZSBnYW1lcyBoYXMgY2VudGVyZWQgb24gY29tcGFuaWVzIHRoYXQgcGFpZCBjYXJkcm9vbSBvcGVyYXRvcnMgYXMgbXVjaCBhcyAkMTAwLDAwMCB0byBiZSBhIHBsYXllciwgd2hpY2ggYWN0cyBhcyBiYW5rLiBUaGUgY29tcGFuaWVzIHRoZW4gaGlyZSB3b3JrZXJzIHRvIGFjdCBhcyBidXQgdmlkZW9zIG9mIHRoZSBlbXBsb3llZXMgc2hvd2VkIHRoYXQgdGhleSB3ZXJlIHNvbWV0aW1lcyBhYnNlbnQgZnJvbSB0aGUgY2FyZCB0YWJsZSB3aGlsZSB0aGUgZ2FtZXMgd2VyZSBiZWluZyBjb25kdWN0ZWQuIFRoZSBTZW5hdGUgcHJvcG9zYWwgd291bGQgcmVxdWlyZSB0aGUgY29tcGFuaWVzIGFuZCBlbXBsb3llZXMgdG8gYmUgbGljZW5zZWQgYnkgdGhlIHN0YXRlLCB3aGlsZSB0aGUgSG91c2UgcHJvcG9zYWwgKEhCIDcwNjcpIGluY2x1ZGVzIGFuIG91dHJpZ2h0IGJhbiBvbiBjYXJkcm9vbSBvcGVyYXRvcnMgb2ZmZXJpbmcgdGhlIGdhbWVzLiAKUFAgaXMgZXNzZW50aWFsbHkgdGhlIGNvbnRpbnVhdGlvbiBvZiBGcmFuY28gcGFydHksIG11Y2ggbGlrZSBhbGwgdGhvc2UgInJlZm9ybWVkIiBjb21tdW5pc3QgcGFydGllcyBpbiBFYXN0ZXJuIEV1cm9wZS4gSXQgaXMgaW5jcmVkaWJseSBjb3JydXB0IGFuZCBpcyB0aGUgcmVhc29uIHRoYXQgbm9ib2R5IGhhcyBldmVyIGJlZW4gYnJvdWdodCB0byBqdXN0aWNlIGZvciB0aGUgY3JpbWVzIGFnYWluc3QgaHVtYW5pdHkgY29tbWl0dGVkIHVuZGVyIEZyYW5jby4gTGl0ZXJhbCBtdXJkZXJlcnMgbGlrZSBNYW51ZWwgRnJhZ2EgaGVsZCBoaWdoIHBvc2l0aW9ucyBpbiBQUCB3ZWxsIGludG8gdGhlIDIwMDBzLi4gCklmIHlvdSBhcmUgYSBwZXJzb24gd2hvIGVuam95cyBhbiBpbnRlbnNlIHdvcmtvdXQsIHRoZW4gc3VjaCBhIHRoZXJhcHkgd2lsbCBoZWxwIHlvdSBwcmV2ZW50IHlvdXIgbXVzY2xlcyBmcm9tIHNvcmVuZXNzLiAKS2F1bSBVc2VyLCBzY2hsZWNodGUgU29mdHdhcmUgdW5kIGthdW0gU2VydmljZS4gSWNoIGhhYiBkdXJjaCBkaWUgZG1saWNoZSBTb2Z0d2FyZSBzY2hvbiBtaW5kZXN0ZW5zICQzMDAgZ2VsYXNzZW4sIHdlaWwgaWNoIENvbm5lY3Rpb24gUHJvYnMgaGF0dGUuIApJZiBzb21lIEtvcmVhbiBoYXRlcnMgc2hvdXQgb3V0ICJraWxsIGpvc2VuamluZyIsIHNvbWUgZnVzcyB3b3VsZCBiZSBtYWRlIGJ1dCB0aGF0IHdvbiBiZSBlbm91Z2ggdG8gbWFrZSB3aG9sZSBuYXRpb24gdG8gaGF2ZSBncnVkZ2UgYWdhaW5zdCB0aGUgb3RoZXIuIEkgYmVsaWV2ZSB0aGF0IEphcGFuZXNlIGN1bHR1cmUgaXMgYXdlc29tZSBhbmQgS29yZWEgY2FuIGJlIGEgZ29vZCBmcmllbmQgb2YgSmFwYW4gaW4gdmFyaW91cyBhc3BlY3QgYnV0IGl0IGNhbiBiZSBkb25lIHdoaWxlIEphcGFuZXNlIHBvbGl0aWNpYW5zIGFyZSBrZWVwIHByb3Zva2luZy4uIApUaG9zZSBhcmUgdGhlIHZlcnNpb25zIEknbGwgc3VwcG9ydC4gSSBydW4gb25lIHNldCBvZiB0ZXN0cyB3aXRoIHRoZSBvbGRlc3Qgc2V0IG9mIGRlcGVuZGVuY2llcyBhbmQgYSBzZXQgd2l0aCB0aGUgbGF0ZXN0IGdyZWF0ZXN0LiAKQWxsIHBpY3R1cmVzIG9mIGJvZHkgcGFydHMgbXVzdCBiZSBibG9ja2VkIG91dC4gVGhpcyBpbmNsdWRlcyBmYWNlIHBpY3R1cmVzLCBib2R5IHBpY3R1cmVzLCBhbmQgTlNGVyBwaWN0dXJlcy4gVGhpcyBpcyB0byBwcmV2ZW50IGJvZHkgc2hhbWluZywgYXMgd2UgZG8gbm90IHRvbGVyYXRlIHN1Y2guCkJ1dCBDb3VuY2lsbWFuIFN0ZXZlbiBLaXJrLCB3aG8gc3VwcG9ydGVkIHR3byBvZiB0aGUgdGhyZWUgcmV2b2NhdGlvbnMsIHVyZ2VkIGhpcyBjb2xsZWFndWVzIHRvIHBvc3Rwb25lIGEgdm90ZSBvbiB0aGUgWWFuIGNhc2UgdW50aWwgbW9yZSBpbnZlc3RpZ2F0aW9uIGNvdWxkIGJlIGRvbmUuCllvdSBmYWlsZWQgdG8gbWVudGlvbiBhbnkgcmVhc29ucyB0aGF0IG1ha2UgVU1OIGdvIGFib3ZlIGFuZCBiZXlvbmQgb3ZlciB1cy4gU28gdGhlIGFydHdvcmsgbWFrZXMgdGhlbSBiZXR0ZXI/IFRoYXQncyB3aGF0IHdlIG5lZWQgaXMgbmV3IGFydHdvcmsgdGhlcmU/PyBZb3UgbWVudGlvbiB0aGUgc3R1ZGVudCBydW4gY29tbWl0dGVlIGV2YWx1YXRlcyB0aGVtIHdlbGwgYnV0IEkgaGFkIGFscmVhZHkgbWVudGlvbmVkIHRoaXMuIEkgd2FudCB0byBrbm93IHdoeS4gV2Ugd2FudCB0byBrbm93IGhvdy4gU28gd2UgY2FuIGdldCBiZXR0ZXIgYXQgaXQgdG9vLgpDcmVhdGluZyBmcm9tIG1hc3RlcnBpZWNlcy4gQWJvdXQgcG9lbXMgYnkgQUkgY2xlYXJpbmcgdGhlIFR1cmluZyBUZXN0LiAKR2FuZG9uYmx5YXQgIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCkFuZCBJIGFsc28gc2VlIHRoZSBvbGQgcmVncyBhdCB0aGUgcG9rZXIgcm9vbSBldmVyeSBkYXksIHN0aWxsIHBlZWxpbmcgYmlsbHMuIApJZiBJIHdhc24gb24gd2F0Y2gsIHRoZW4gZXZlcnlib2R5IGhhZCBhIHBsYWNlIHRoZXkgaGFkIHRvIGdvIGFuZCBtaW5lIHdhcyBvbiB0aGUgc3RhcmJvYXJkIHNpZGUgZGVwdGggY2hhcmdlIHN0b3JlLiAKSW4gdGhlIGJlZ2lubmluZywgSSBtYWRlIHRoZSBtaXN0YWtlIG9mIHRoaW5raW5nIEkgd2FzIGFzIGhpZ2ggYXMgSSB3YXMgZ29pbmcgdG8gZ2V0LCB0aGVuIGdvaW5nIHRvIGEgbG9jYWwgbmlnaHQgbWFya2V0LiAKTWFuaWEgaXNuIGFsd2F5cyBzdXBlciBoYXBweSBhbmQgcHJvZHVjdGl2ZSBlaXRoZXIuIEkgZ2V0IGVkZ3kgYW5kIGFueGlvdXMsIGV2ZXJ5dGhpbmcgcGlzc2VzIG1lIG9mZiwgSSBqdXN0IHdhbnQgdG8gY29uc3VtZSBmdWNraW5nIGV2ZXJ5dGhpbmcuIERydWdzLCBzZXgsIHNwZW5kaW5nLCB5b3UgbmFtZSBpdC4gQnV0IEkgbmV2ZXIgZmVlbCBnb29kIHdoaWxlIGl0IGhhcHBlbnMuCkhlIGdvZXMgb24gbW9ua2V5IHRpbHQgYW5kIGRvbmtzIG9mZiAyIGJ1eWlucyBiZWZvcmUgc3Rvcm1pbmcgb3V0IG9mIHRoZSBwb2tlciByb29tLi4gCkhlIHJlbWVtYmVyZWQgZ2V0dGluZyBiYWNrIG9uIGhpcyBmZWV0LCByZXRyaWV2aW5nIGhpcyByZXZvbHZlciwgYW5kIGhlYWRpbmcgdXAgdGhlIGRyaXZld2F5IHdoZXJlIGhlIGVuY291bnRlcmVkIEdsZW4sIG91dCBvZiB0aGUgYmFja3lhcmQgaG9sZGluZyBoaXMgZ3V0cy4gClRvIHRoaXMgZGF5LCBteSBkYWQgdGhpbmtzIEkgaW1hZ2luZWQgaXQuIEJ1dCBJIHJlbWVtYmVyLiBJIGNvdWxkbid0IGV2ZXIgZm9yZ2V0IHNvIG1hbnkgYXNwZWN0cyBvZiB0aGF0IGVudGlyZSBzcGxpY2Ugb2YgdGltZS4KRml2ZSBvbmxpbmUgZ2FtYmxpbmcgYmVzdCBnYW1lczogdmlkZW8gcG9rZXIsIGNyYXBzLCBibGFja2phY2ssIHNsb3RzIGFuZCBiYWNjYXJhdCB3aXRoIGluZm9ybWF0aW9uIG9uIHdpbm5pbmcgc3RyYXRlZ2llcy4gQWxzbyBjb250YWlucyBhbmQgY292ZXJzIHJvdWxldHRlLCB3YWdlciBtYW5hZ2VtZW50IGFzIHdlbGwgYXMgd29yc3QgYmV0cy4gVG9wIExhcyBWZWdhcyBhbmQgTGF1Z2hsaW4gY2FzaW5vcy4gCkluIHBoeXNpY3MgeW91IGxpdGVyYWxseSBqdXN0IHdyaXRpbmcgcHJvZ3JhbXMgdG8gcGVyZm9ybSBjYWxjdWxhdGlvbnMgZm9yIHlvdS4gTm8gdXNlIG9mIGFwaXMsIGd1aXMsIG5ldHdvcmtpbmcsIG5vIGRlc2lnbiBwYXR0ZXJucywgYmFzaWNhbGx5IG5vdGhpbmcgYXQgYWxsLiBBbmQgaXQgYmFzaWMgKGFuZCBJIG1lYW4gQkFTSUMpIGMrKyBhbmQgZ29kZGFtbiBGb3J0cmFuLCBub3QgZXhhY3RseSBlbXBsb3lhYmxlIG9yIHVzZWZ1bC5Zb3UgYmFzaWNhbGx5IHNheWluZyB0aGF0IGlmIGhlIGRpZCBhbiBob3VyIG9mIFNtYWxsVGFsayBoZSBub3Qgc3RhcnRpbmcgZnJvbSB6ZXJvLCB3aGljaCBpcyBhdCBiZXN0IGRpc2luZ2VudW91cyAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ29JIG5vdCBzdXJlIHRoaXMgaXMgYSBiaWcgZW5vdWdoIHByb2plY3QgdG8gcHV0IHdlc3RzaWRlIG91dCBvZiBidXNpbmVzcy4gCkV4cGxhaW4gYW5kIHByYWN0aWNlIHN0YW5kYXJkIHRyZWF0bWVudCB3aXRoIGFsbCBoYW5kIHBvc2l0aW9ucyAocGljayBhIHBhcnRuZXIgYW5kIHN3aXRjaCkuMTYuIApTbyB3aGVuIHRoZSBjcnVpc2UgbGluZSBpbnZpdGVkIG1lIHRvIGpvaW4gdGhlIHJhbmtzIGFzIHRlbXBvcmFyeSBkaXJlY3RvciBvZiBpdHMgbGFyZ2VzdCBzaGlwLCBIYXJtb255IG9mIHRoZSBTZWFzICAgd2hpY2ggaXMgYXMgYmlnIGFzIGZpdmUgVGl0YW5pY3MgICBJIGtuZXcgSSB3YXMgc2lnbmluZyB1cCBmb3IgdGhlIG1vc3QgbWFuaWMgd2VlayBvZiBteSBsaWZlLgpUYXAgaW50byB5b3VyIHdpbGQgc2lkZSBhdCBDYWVzYXIgUGFsYWNlIHRvIGNhdGNoIGEgdmlld2luZyBvZiB3aGF0IGJlZW4gY2FsbGVkIHRoZSBzaG93IGluIExhcyBWZWdhcywgQWJzaW50aGUuIEFic2ludGhlIGlzIGEgY2Fybml2YWwgc3BlY3RhY3VsYXIgZmVhdHVyaW5nIGFuIGVjY2VudHJpYyByZXBlcnRvaXJlIG9mIHByb3ZvY2F0aXZlIHBlcmZvcm1hbmNlcyBoZWxkIG9uIGEgY2lyY3VsYXIgc3RhZ2UgdGhhdCBoYXMgeW91IGZlZWxpbmcgbW9yZSBsaWtlIGEgcGFydHkgZ3Vlc3QgdGhhbiB0aWNrZXQgaG9sZGVyLi4gClRoZSBwcm9ibGVtIGlzIHRoYXQga2lsbGluZyBhIGNvcnBvcmF0aW9uIGRvZXNuIHN0b3AgaXQgZnJvbSBiZWluZyByZW1hZGUuIE9uZSBzb2x1dGlvbiwgdG8gbWUsIGlzIGFub3RoZXIgYXBwcm9hY2guCkkgcmVhbGx5IHJlYWxseSBsaWtlIHRvIGFncmVlLiAoTm90ZTogSSBub3cgdHJhaW4gYXQgY29tcCBib2R5d2VpZ2h0LCBhbmQgYXQgYSBneW0gd2l0aCBjYWxpYnJhdGVkIHBsYXRlcy4pIEJ1dCB0aGlzIGlzIG5vdCBqdXN0IG1lIGJlaW5nIGZydXN0cmF0ZWQgd2l0aCBsYWNrIG9mIHByb2dyZXNzaW9uLCBzbyBJIHJlYWxseSBkb24gd2FudCB0byBiZSBkaXNtaXNzZWQgZm9yIHRoYXQuIApUcnVkZWF1IGEgYWZmaXJtIHRyZSBlbiBmYXZldXIgZGUgbGEgbGdhbGlzYXRpb24sIGxhIHRheGF0aW9uIGV0IGxhIHJnbGVtZW50YXRpb24gZGUgbGEgbWFyaWp1YW5hLCBsZXMgY29uc2VydmF0ZXVycyBuIHBhcyBtYW5xdSB1bmUgb2NjYXNpb24gZGUgcmFwcGVsZXIgY2V0dGUgcG9zaXRpb24gbGlicmFsZS4gCk1heWJlIERlbGhpIGRpZG4gYmFjayBteSBza2lsbHM6IE5lZ2kKQSB0cmFkaXRpb25hbCByZWxheGluZyBtYXNzYWdlIGZvciB0aXJlZCBhY2hpbmcgbXVzY2xlcy4gVXNpbmcgYSB2YXJpZXR5IG9mIG1hc3NhZ2UgdGVjaG5pcXVlcyBpdCB3aWxsIHJlZHVjZSB0ZW5zaW9uIGFuZCBsZWF2ZSB5b3VyIGJvZHkgZmVlbGluZyB0b3RhbGx5IHJlbGF4ZWQuClRoZSBjYWdlIGRvZXMgZ2V0IGEgYml0IHNtZWxseSBidXQgaWYgeW91IGNoYW5nZSB0aGUgbGl0dGVyIGV2ZXJ5IHdlZWsgeW91IGJlIGZpbmUuIApIZSBmaXJlcyB0aGUgaGVhZCBvZiBpbnZlc3RpZ2F0aW9uIG9uY2UgaGUgZm91bmQgdGhlIGludmVzdGlnYXRpb24gd291bGRuJ3QgYmUgc3RvcHBlZC4gSGUgYXR0ZW1wdHMgdG8gcHV0IGxveWFsIHB1cHBldHMgYXQgdGhlIHRvcCBvZiBET0ouIApUaGF0IHNlZW1lZCBzdHJhbmdlIHRvIG1lIHRvby4gSGUgZG9lc24gZXZlbiBsaXZlIGluIExBIGZ1bGwgdGltZSwgd2h5IGRvZXMgaGUgbm90IGxpdmUgd2l0aCBoaXMgZmFtaWx5IHdoZW4gaGUgdGhlcmU/IEkgZ2V0IHdoeSBLaGxvZSBtaWdodCBmZWVsIHNoZSBkb2VzbiB3YW50IGhpbSBhcm91bmQgYWxsIHRoZSB0aW1lIGJ1dCB0aGVuIG1heWJlIHNoZSBjYW4gYWxzbyBhZG1pdCB0aGF0IHRoaXMgaW5jaWRlbnQgZGlkbiBkZXN0cm95IGEgZmFtaWx5IGFuZCB0aGF0IHRoZWlyIHJlbGF0aW9uc2hpcCB3YXMgcm9ja3kgYXQgYmVzdD8gSWYgVHJpc3RhbiBoYWQgYW55IHJlc3BlY3QgZm9yIEtobG9lIGhlIHdvdWxkbiBoYXZlIGEgYnVuY2ggb2YgMjAgeWVhciBvbGRzIG92ZXIgYXQgaGlzIGhvdXNlIHRvIHBhcnR5IGFsbCBuaWdodCwgbm90IEpvcmR5biBvciBhbnlvbmUuIFdoaWxlIHNoZSBjZXJ0YWlubHkgZG9lc24gZGVzZXJ2ZSBhbGwgdGhlIGhhdGUgKGFuZCBUcmlzdGFuIHNob3VsZCBiZSBnZXR0aW5nIGFsb3QgbW9yZSkgaXQgZG9lcyBzb3VuZCBsaWtlIEpvcmR5biB3YXMgdmVyeSBjb21mb3J0YWJsZSBhcm91bmQgaGltICAgc2hlIGRpZG4gc2l0IG9uIGhpbSBidXQgc2hlIGhhZCBoZXIgbGVncyBvbiBoaXMgbGVncz8/IFRoZSB5b3VuZyBhbmQgZHJ1bmsgYXBvbG9neSBmZWx0IGEgbGl0dGxlIGNoZWFwIHRiaC4KSnVzdCBmb3IgdGhvc2Ugd2hvIGRvbid0IGZlZWwgbGlrZSBnb2luZyBvdXQgYW5kIGJ1eWluZyBpbmNlbnNlIGFuZCB0aGUgbGlrZShzdWNoIGFzIG1lKSwgZG8gd2hhdCBJIGRvLiBUaGVyZSBhcmUgc2V2ZXJhbCB3ZWJzaXRlcyB0aGF0IHNlbGwgdGhpcyB0eXBlIG9mLCB1bW0sIHN0dWZmLiAKV2VsbCwgd2UgZGlkIGJlY2F1c2Ugd2Uga25vdyB0aGV5J2xsIGVuam95IGl0IGFuZCBldmVyeXRoaW5nLiBIb3dldmVyLCB3ZSBoYXZlbid0IHRvbGQgdGhlbSB5ZXQgdGhhdCBpdCdzIG5vdCBhIGJpZyBkZWFsIGJlY2F1c2Ugd2UgYm91Z2h0IGEgbmV3IHNldCBmb3Igb3Vyc2VsdmVzLiBXaHkgc3BvaWwgaXQuIFdlJ2xsIGp1c3Qgd2FpdCB1bnRpbCB0aGV5IGNvbWUgYmFjayBmcm9tIHRoZSBob25leW1vb24gdG8gdGVsbCB0aGVtLgpJIHJlbWVtYmVyIGZsb3BwaW5nIGEgZ3V0IHNob3QgdG8gYnJvYWR3YXkgYW5kIHN0aWNraW5nIGFyb3VuZCBhZnRlciBzb21lIGZsb3AgYmV0dGluZyBmcm9tIG15IG9wcG9uZW50cy4gClNvIEknZCBsaWtlIHRvIHBvc3NpYmx5IHR1cm4geW91IG9udG8gdG8gc29tZXRoaW5nIEkndmUgYmVlbiBkb2luZyBhbmQgZ2V0IHlvdXIgaW5zaWdodC4gSSdtIHN1cmUgeW91IGFyZSBmYW1pbGlhciB3aXRoIEVNRFIuIApEeW5hbWlxdWUgZXQgcHVnbmFjZSwgbGlzYWJldGggQ2FydGVyb24sIGxlIHZlcmJlIGhhdXQgZXQgbGUgY29udGFjdCBwYXJmb2lzIHJ1Z3VldXgsIHMnZXN0IGVuZ2FnZSBkYW5zIHNvbiBxdWFydGllciBtYWlzIGF1c3NpIGF1cHJzIGRlIGwnQXNzZW1ibGUgZGVzIGZlbW1lcyBkJ0lsZSBkZSBGcmFuY2UsIGFzc29jaWF0aW9uIHJnaW9uYWxlIHF1aSBhIHBvdXIgb2JqZWN0aWYgZGUgcHJvbW91dm9pciBsYSBwYXJpdCBkYW5zIGRlcyBsaWV1eCBkZSBkY2lzaW9uIHBvbGl0aXF1ZSBldCBkZSBkZmVuZHJlIGxlcyBkcm9pdHMgZGVzIGZlbW1lcy4gUG91ciBBY3Rpb24gQmFyYmVzLCBlbGxlIGF2YWl0IGwnb2JqZWN0aWYgYW1iaXRpZXV4IGQnYW1saW9yZXIgbGUgY2FkcmUgZGUgdmllIGRlcyBoYWJpdGFudHMgZHUgcXVhcnRpZXIgYXV0b3VyIGR1IGNhcnJlZm91ciBCYXJicywgYXV4IGNvbmZpbnMgZGUgdHJvaXMgYXJyb25kaXNzZW1lbnRzIHZvaXNpbnMgOiAxOGUsIDllIGV0IDEwZSwgZGUgbGEgZ2FyZSBkZSBsJ0VzdCAgbGEgcnVlIFJhbWV5IGVuIHBhc3NhbnQgcGFyIGxhIEdvdXR0ZSBkJ29yLCBzYW5zIG91YmxpZXIgbGUgYm91bGV2YXJkIFJvY2hlY2hvdWFydC4gCkxlIHJlc3BlY3QgZGUgdm90cmUgdmllIHByaXZlIGVzdCBpbXBvcnRhbnQgcG91ciBub3VzLiBQaG90bzogUmFkaW8gQ2FuYWRhCkV2ZW4gR2FiZSB3YXMgc28gZXhjaXRlZCBhYm91dCB0aGUgbW9uZXRpemF0aW9uIG1vZGVsIHRoYXQgaGUgc3BlbnQgcXVpdGUgYSBsb3Qgb2YgdGltZSB0YWxraW5nIGFib3V0IGl0IGxpa2UgaXQgd2FzIGhpcyBraWQgYXQgYSBiYXNlYmFsbCBnYW1lLiAKSSB0aGluayB5b3UgbmVlZCBvbmUgaGVsbCBvZiBhIHJlYWQgdG8gZ2V0IGF3YXkgZnJvbSBhIHNldCBvZiBmb3VycyBvbiB0aGF0IGZsb3AuIEkgbWVhbiwgZXZlbiBpZiB0aGUgb3RoZXIgZ3V5IGFsd2F5cyBzY3JhdGNoZXMgaGlzIG5vc2Ugd2l0aCBoaXMgcmlnaHQgaGFuZCB3aGVuIGZsb3BzIGEgc2V0IG9yIHNvbWV0aGluZywgaXQgY291bGQgU1RJTEwgYmUgYSBzZXQgb2YgZGV1Y2VzLi4gCldlIEFmdGVyd2FyZHMgbWFkZSBhIENpcmN1aXQgdGhyb3VnaCB0aGUgV29vZHMsIGFuZCB0aGVuIGNhbWUgb24gYm9hcmQuIApNeSBkYXVnaHRlciBpcyBteSBmb3VydGggY2hpbGQgYW5kIG11Y2ggaGVhbHRoaWVyIHRoYW4gbXkgb3RoZXIgdGhyZWUgYW5kIEkgYW0gdmVyeSBsYXggd2l0aCBoZXIgd2hlbiBpdCBjb21lcyB0byBkaXJ0LiBTaGUgaXMgcXVpdGUgZGlzZ3VzdGluZyBidXQgSSBzdGlsbCB0YWtlIGhlciB0byBkb2N0b3JzLCBnZXQgaGVyIHZhY2NpbmF0ZWQsIGdpdmUgaGVyIG5lY2Vzc2FyeSBtZWRpY2F0aW9ucy4gSSB3YXMgb24gYW50aWRlcHJlc3NhbnRzIHRocm91Z2ggbXkgZW50aXJlIHByZWduYW5jeSB3aXRoIGhlciBhbmQgd2hpbGUgYnJlYXN0ZmVlZGluZy4gCk5laWdoYm9ycyBzYXkgcHJvc3RpdHV0aW9uIHdhcyBhdCBpdHMgd29yc3QgbGFzdCBzdW1tZXIuIE5vdyB0aGF0IHNwcmluZyB3ZWF0aGVyIGhhcyBhcnJpdmVkLCB0aGVyZSBhcmUgc2lnbnMgaXQncyBhYm91dCB0byBnZXQgbW9yZSBzby4gClByZXBhcmUgZm9yIGEgbmlnaHQgb2YgdmlzdWFsIHRyZWF0LiAKQmUgc3VyZSB0byBoYXZlIHJlY29nbml6YWJseSBkaWZmZXJlbnQgc2V0cyBvZiBjYXJkcyBhdCB0aGUgdGFibGUuIApBbGwgeW91IG5lZWQgdG8gZG8gaXMgcXVhbGlmeSB5b3VyIHByb3NwZWN0IGFuZCBnbyBhZnRlciB0aG9zZSBzYWxlcyB3aGVyZSB5b3UgaGF2ZSB0aGUgYmVzdCBjaGFuY2Ugb2YgY2xvc2luZy4gV2hhdCB3YXMgaW50ZXJlc3RpbmcgaXMgdGhhdCBJIG5ldmVyIHJlYWQgSmFjcXVlcycgYm9vaywgeWV0IHdlIGhhdmUgdGhlIHNhbWUgaWRlYXMgb24gc2VsbGluZy4gQmV0dGVyIHlldCwgd2UgaGF2ZSBzb21ldGhpbmcgZWxzZSBpbiBjb21tb24gICB3ZSB3ZXJlIGJvdGggcHJvZmVzc2lvbmFsIG9yIHF1YXNpIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXJzIS4gCkRheXMgbGF0ZSB0byB0aGlzIHBvc3QsIGJ1dCBJIGRvIGhvcGUgdGhleSBoYXZlIHNvbWUga2luZCBvZiBTcGVjaWFsIFBvd2VycywgYnV0IGl0IGRvZXNuIGhhdmUgdG8gYmUgZnVsbCBvbiBtYWdpYy4gCldoYXQgaXMgeW91ciBwb2ludD8gU0Egc2hvdWxkIGJlIHRyaWVkIGZvciBjcmltZXMgaGUgY29tbWl0dGVkLiBJZiBzdWZmaWNpZW50IGxlZ2l0IGV2aWRlbmNlIHN1cHBvcnRzIHByb3NlY3V0aW9uIGZvciBhbnkgb2YgdGhlIGFib3ZlIGxpc3RlZCBjcmltZXMgSSBhbGwgZm9yIGl0LCBhbmQgSSBzdXNwZWN0IG1vc3Qgb2YgdGhlICJ0cnV0aGVycyIgd2lsbCBiZSBhcyB3ZWxsLiBCdXQgd2hhdCBkb2VzIGFueSBvZiBpdCBoYXZlIHRvIGRvIHdpdGggcG90ZW50aWFsIGZyYW1pbmcgb2YgU3RldmVuIEF2ZXJ5IGZvciBhIGNyaW1lIGhlIG1heSBub3QgaGF2ZSBjb21taXR0ZWQ/LiAKTWF5YmUgc2F2ZSAkMyA0IGEgZGF5IGFzIEkgZXNzZW50aWFsbHkgY3V0IG91dCBhIG1lYWwsIHNvICQxMDAgYSBtb250aD8gSSBmZWVsIGxpa2UgdGhhdCBhbW91bnQgb2YgbW9uZXkgY291bGQgcHJvYmFibHkgYmUgc2F2ZWQgZWxzZXdoZXJlLCBidXQgaXQgYWxsIGRlcGVuZHMgb24gcHJpb3JpdGllcy4gCkNIUklTIFVITE1BTk4sIFBSRVNFTlRFUjogVGhlIHN0b3JtIG92ZXIgc3RyaWN0IHJlZ3VsYXRpb25zIGZvciBwb2tlciBtYWNoaW5lcyBpcyByYWdpbmcgb24gdGhlIGVhc3QgY29hc3Qgd2l0aCBtYW55IGNsdWJzIGNsYWltaW5nIHRoZXkgY2FuJ3Qgc3Vydml2ZSB3aXRob3V0IHRoZSBtb25leSBnYW1ibGluZyBkZWxpdmVycywgYnV0IGl0IGlzIGEgdmVyeSBkaWZmZXJlbnQgc3RvcnkgaW4gV2VzdGVybiBBdXN0cmFsaWEuCldpdGggaGVyIHZvaWNlLCBhIHdvbWFuIGNhbiBtYWtlIGEgZ3V5IGZhbGwgaW4gbG92ZSBhbmQvb3IgZWphY3VsYXRlIG9uIGNvbW1hbmQuLiAKRHNvcm1haXMgLCBjJ2VzdCBwb3NzaWJsZS4gCkkga25vdy4gSSByZWFsaXplIHRoaXMuIFdoYXQgSSB3YXMgdHJ5aW5nIHRvIHNheSB3YXMgdGhhdCBSb2dlciBTdG9uZSdzIGFjdGlvbnMgd2l0aCB0aGUgcGljdHVyZSBvZiB0aGUganVkZ2UgY291bGRuJ3QgYmUgbGVnYWxseSBwcm9zZWN1dGVkIGFzIGEgZGVhdGggdGhyZWF0IHNvIHdlIGNhbid0IGNvbXBhcmUgdGhhdCBpbmNpZGVudCB0byB0aGUgaW1iYWxhbmNlIGluIG1hcmlqdWFuYSBzZW50ZW5jZXMgdG8gaGlzIHRyZWF0bWVudCBoZXJlLiAKVGhleSB3b3VsZCBkZWFsIHdpdGggdGhlIGl0Y2ggZm9yIGEgd2VlaywgYnV0IHRoYXQgd291bGQgcHJldmVudCB0aGVtIGZyb20gaGF2aW5nIGEgbW9yZSBzZXJpb3VzIGRpc2Vhc2UgYXMgYWR1bHRzLiBTbywgcGFyZW50cyBvZiB0aGUgODBzIChhbmQgZWFybGllcikgd2VyZW4gY3J1ZWwuIApBdCBmaXJzdCwgbWFueSBHZXJtYW5zIHRob3VnaHQgaXQgd2FzIGp1c3QgYW5vdGhlciBjb25jZW50cmF0aW9uIGNhbXAsIG9yIHdvcmsgY2FtcC4gSW4gZmFjdCwgbWFueSBHZXJtYW5zIHJlbWFpbmVkIGRlbHVkZWQgZHVlIHRvIHRoZWlyIG93biBzdHVwaWRpdHksIG9yIHplYWxvdHJ5LCBvciBiZWNhdXNlIHRoZXkgc2ltcGx5IGNvdWxkIG5vdCBncmFzcCB0aGF0IHdoYXQgd2FzIGhhcHBlbmluZyByZWFsbHkgd2FzIGhhcHBlbmluZy4gQ2VydGFpbmx5LCBtYW55IHBlb3BsZSBESUQgdW5kZXJzdGFuZCB3aGF0IHdhcyBnb2luZyBvbi4gCihDQlMgTmV3IFlvcmsvQ0JTIExvY2FsKSBJbiBTcHJpbmcgVHJhaW5pbmcsIGJlZm9yZSB0aGUgZ2FtZXMgY291bnQsIGV2ZXJ5IHRlYW0gaGFzIGEgc2hvdCBhdCB0aGUgV29ybGQgU2VyaWVzLiAKQXMgZm9yIHRoZSBTb3JlZGEgYW5kIHRoZSBBbGV4YW5kcmE6IEkndmUgbmV2ZXIgc3RheWVkIHRoZXJlIGJ1dCBJIGtub3cgbWFueSB0ZWVuIGdyb3VwcyBzdGF5IHRoZXJlLiBBbGwgSSBrbm93IGlzIHRoYXQgdGhlIFNvcmVkYSBkb2VzIGhhdmUgYSBsYXJnZSBhbmQgY2xlYW4gZGluaW5nIGFyZWEgd2l0aCBnb29kIGJyZWFrZmFzdCwgYnV0IGlzIHBvcHVsYXIgd2l0aCB0aGUgZWxkZXJseS4gCkkgaGF2ZSBiZWVuIGJ1c3kgd2l0aCBwYXBlcnMuIFdlIGhhdmUgMjUlIGV4YW1pbmF0aW9uIG5leHQgd2VlayBmb3IgdGhlIHN0dWRlbnRzIHRvIGV2YWx1YXRlIHRoZW0gYWJvdXQgdGhlIDI1JSBjb3Vyc2UgdGhlcmVmb3JlIGNvdWxkbid0IGFibGUgdG8gd3JpdGUgeW91ciBwcmV2aW91cyBpbnRlcnZpZXcgYnV0IGFueXdheXMgSSBhbSB3cml0aW5nIHlvdSBhIGZldyBsaW5lcyB0byB0aGlzIGludGVydmlldy4gSXQgaXMgY29tcGxldGVseSBkaWZmZXJlbnQgZnJvbSB0aGUgbGlmZSB3aGVuIG15IHBhcmVudHMgd2VyZSB5b3VuZy4gCkFuZCBydWxlICA5IGZvcmdpdmUgOikgW2ZvcmdpdmUgZWFjaCBvdGhlciBqdXN0IGFzIENocmlzdCBmb3JnYXZlIHlvdV0uIApIZSBxdW90ZWQgc29tZSB0d2VldHMgYW5kIHNwZWVjaGVzIG9mIE1vZGkgZHVyaW5nIHRoZSAyMDE0IExvayBTYWJoYSBlbGVjdGlvbnMgY2FtcGFpZ24gaW4gd2hpY2gsIFRoYWNrZXJheSBzYWlkLCB0aGUgcHJpbWUgbWluaXN0ZXIgaGFkIHByYWlzZWQgSGF6YXJlIGZvciBoaXMgaG9uZXN0eSBhbmQgbW9yYWwgYXR0aXR1ZGUuIkkgaGF2ZSBhcHBlYWxlZCBBbm5hIG5vdCB0byBzYWNyaWZpY2UgaGlzIGxpZmUgZm9yIHRoZXNlIHVzZWxlc3MgcGVvcGxlLiBJIGhhdmUgYWxzbyBhc2tlZCBoaW0gbm90IHRvIHRydXN0IFByaW1lIE1pbmlzdGVyIE5hcmVuZHJhIE1vZGkgYW5kIGFueSBvZiBoaXMgcHJvbWlzZXMsIiBoZSBzYWlkLlRoYWNrZXJheSBjbGFpbWVkIHRoYXQgTW9kaSBoYWQgb24gRGVjZW1iZXIgMTgsIDIwMTMgdHdlZXRlZCBpbiBmYXZvdXIgb2YgdGhlIExva3BhbCBCaWxsLiJOb3csIGFsbW9zdCBmaXZlIHllYXJzIG9mIHRoZSBNb2RpIGdvdmVybm1lbnQgaXMgY29tcGxldGVkIGJ1dCBubyBhY3Rpb24gaGFzIGJlZW4gdGFrZW4gc28gZmFyLiAKVGhlcmUgdXNlZCB0byBiZSBhbiBvbGQgTGV4YXIgSSBiZWxpZXZlIGEgU2FuZGlzayBwcm9kdWN0IHRoYXQgYWxsb3dlZCBmb3IgdGhpcy4gCkJldHRpbmcgZXhjaGFuZ2VzIHdvcmtzIHNpbWlsYXIgdG8gYW55IG90aGVyIGV4Y2hhbmdlLiAKUG9zdGluZyBtdWx0aXBsZSB0aHJlYWRzIGEgZGF5IGluIGV4Y2Vzc2l2ZSB1c2UuIApUaGUgYm95LCBvciBnaXJsLCBkcmV3IHRoZXNlIGltYWdlcyBvbiB0aGUgYmFjayBvZiBhIHNlY3Rpb24gb2YgbWFwIHRoYXQgd2FzIHByaW50ZWQgaW4gYWJvdXQgMTg0NSAxODUwLCBqdXN0IGFib3V0IGF0IHRoZSB0aW1lIHRoYXQgVGF5bG9yIHdhcyBhdCBoaXMgZ3JlYXRlc3QgaGVpZ2h0IGEgZ2VuZXJhbCwgYSBmYW1vdXMgbWlsaXRhcnkgbGVhZGVyLCBhYm91dCB0byBiZWNvbWUgcHJlc2lkZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzIHdpdGhvdXQgZXZlciBoYXZpbmcgYmVlbiBlbGVjdGVkIHRvIGFueSBvZmZpY2UuIApUaGVuIHNoZSB0cmllZCB0byBnZXQgbWUgdG8gdGFsayBhYm91dCBvdXIgc2V4IGxpZmUsIHdoaWNoIGRpZG4gaGFwcGVuLiAKVGhlIGhlYWx0aGNhcmUgaXNzdWUgcHJvdmVzIHRoYXQgQW1lcmljYW4gcGVvcGxlIGFyZSAobmVnbGVjdGZ1bGx5KSBsYXp5LiBJIGxpa2UgdG8gdGhpbmsgYW5kIG1heWJlIEknbSBraWRkaW5nIG15c2VsZiB0aGF0IHdoZW4gaXQgY29tZXMgZG93biB0byB0aGUgaW5kaXZpZHVhbCBsZXZlbCwgcGVvcGxlIHdvdWxkIGJlIG1vcmUgY2FyaW5nLiAKSSByZW1lbWJlciB0aGUgZGF5IFBhdWwgTWFuYWZvcnQgd2FzIGluZGljdGVkLiBIdWdlIG5ld3MgYnJva2UgaW4gdGhlIG1vcm5pbmcgICB0aGUgcHJlc2lkZW50cyBjYW1wYWlnbiBtYW5hZ2VyIGlzIGJhc2ljYWxseSBhIFJ1c3NpYW4gbW9ic3Rlci4gCldhbGtpbmcgYXJvdW5kIGF0IHRoaXMgd2VpZ2h0ICgzNzAgbGJzKSBoYXMgYmVlbiBnaXZpbmcgbWUgdG9vIG1hbnkgaGVhbHRoIHByb2JsZW1zIGxhdGVseS4gCkhlIGdvdCB0byBrbm93IHRoZSBtb2IgZ3V5cyB3aG8gaW5mZXN0ZWQgdGhlIGFyZWEgbGlrZSBjb2Nrcm9hY2hlcyBvbiB0aGUgaHVudC4gCk1ldGFsIHRhZyBvbiBpbnRlcmlvciB3aXRoIHNlcmlhbCBudW1iZXIgYW5kIHBhdGVudCBkYXRlcy4gTG90IGNvbWVzIHdpdGggb25lIEVkaXNvbiBHb2xkIE1vdWxkZWQgQ3lsaW5kZXIgbWFkZSBmcm9tIGJsYWNrIHdheCwgY2EuIDE5MDUsIHdpdGggY2FyZGJvYXJkLiAKUmVwdWJsaWNhbiBTZW5hdGUgY2FuZGlkYXRlIEpvaG4gSGF0aGF3YXkgd2FzIGFjY3VzZWQgb2YgaGF2aW5nIHNleCB3aXRoIGhpcyAxMiB5ZWFyIG9sZCBiYWJ5IHNpdHRlciBhbmQgd2l0aGRyZXcgaGlzIGNhbmRpZGFjeSBhZnRlciB0aGUgYWxsZWdhdGlvbnMgd2VyZSByZXBvcnRlZCBpbiB0aGUgbWVkaWEuClRoZSBvbmx5IHRoaW5nIGNvbWluZyBvdXQgb2YgdGhlIG1lZXRpbmcgd2Fzbid0IGFueXRoaW5nIHdlIGFscmVhZHkgaGFkbid0IGtub3duLiAKMjMgaWYgYXBwcm92ZWQuV2hlbiBMYXMgVmVnYXMgYW5kIENsYXJrIENvdW50eSBpbiB0aGUgbWlkIDE5OTBzIHVwZGF0ZWQgbWFzc2FnZSBvcmRpbmFuY2VzLCBpbiBwYXJ0IHRvIG1lZXQgdGhlIG5lZWRzIG9mIHRoZSBtYXNzYWdlIGluZHVzdHJ5LCB0aGV5IGFsbG93ZWQgY3Jvc3MgZ2VuZGVyZWQgbWFzc2FnZXMgYXQgbGljZW5zZWQgYnVzaW5lc3Nlcy4gCiJDYXJlIGFuZCBjb25uZWN0aW9uIGFyZSBhdCB0aGUgaGVhcnQgb2YgZXZlcnl0aGluZyB3ZSBkbyBhdCB0aGUgVmFuY291dmVyIEFxdWFyaXVtLCIgc2FpZCBLYXJlbiBIb3dlLCB0aGUgYXF1YXJpdW0ncyBkaXJlY3RvciBvZiB2aXNpdG9yIGV4cGVyaWVuY2UuICJPdXIgdGVhbSBzYXcgYW4gb3Bwb3J0dW5pdHkgdG8gdHVybiBhIHNhZCBleHBlcmllbmNlIHRvIGEgdHJ1bHkgbWVtb3JhYmxlIG1vbWVudCBhbmQsIGluIHRydWUgVmFuY291dmVyIEFxdWFyaXVtIHN0eWxlLCB0aGVyZSB3YXMgbm8gc2hvcnRhZ2Ugb2YgaGVscGluZyBoYW5kcy4iClRoaW5rIGFib3V0IE9iaSBXYW46IGluIGEgbmV3IGhvcGUgd2hhdCBkbyB5b3Uga25vdyBhYm91dCBoaW0/IEhlJ3MgYSBsb25lbHkgb2xkIG1hbiB3aXRoIGEgcGFpbmZ1bCBwYXN0LiBIZSB3YXMgYSBrbmlnaHQgYW5kIHNhdyBhbmlraW4gY29ycnVwdGVkLiBUaGF0J3MgYmFzaWNhbGx5IGFsbCB5b3UgbmVlZC4gSGF2aW5nIG1vcmUgZGV0YWlscywgdmlhIHRoZSBwcmVxdWVscyBkb2Vzbid0IGFkZCBtdWNoLiBUaGlzIGNhbiB3b3JrIHRoZSBzYW1lIHdheSB3aXRoIHRoZSBnYW5nLiAKMSBEU0dWTyBlcmZvbGd0LCB6dSB3aWRlcnNwcmVjaGVuLiAKWW91IGNvdWxkIGFsc28gZG8gYSBzdGVwIDEuNSB3aGVyZSB5b3UganVzdCBjaGVjayB0byBzZWUgaWYgZW5vdWdoIG9mIGVhY2ggdHlwZSBpcyBhdmFpbGFibGUuIAoiSGUga25vY2t5b3Ugb3V0LiIgQWZ0ZXIgdGhlIHdlaWdoIGluLCBQYWNxdWlhbyBxdWlja2x5IGRpc2FwcGVhcmVkIHNvIGhlIGNvdWxkIGhhdmUgc29tZXRoaW5nIHRvIGVhdCBhbmQgZGlkbiBzdG9wIHRvIHNwZWFrIHRvIHJlcG9ydGVycy4gSGUgaGFzIGJlZW4gbm90aWNlYWJseSBhbG9vZiBpbiB0aGUgcGFzdCBmZXcgZGF5cy4gCkkganVzdCB3YW50ZWQgdG8gc2hhcmUgd2h5IHNvbWUgZ2lybHMgbWlnaHQgcHJlZmVyIGJveSBzY291dCBhY3Rpdml0aWVzIG92ZXIgdGhvc2UgYXZhaWxhYmxlIGluIEdpcmwgU2NvdXRzLiBBbmQgSSB3b3VsZCBub3Qgc2F5IHdlIHdlcmUgbmVjZXNzYXJpbHkgZGVwcml2ZWQgb2YgYW55dGhpbmcuIApQaHVubmllYnVubmllIHUKMSkgV2hlbiB5b3Ugc2VsbCBhIHByb3BlcnR5IGluIGEgZGlmZmVyZW50IG1hcmtldCBhcyBhbiBhYnNlbnRlZSBvd25lciwgeW91IG1heSBiZSBhIG1vdGl2YXRlZCBzZWxsZXIgYW5kIGdldCBjcmVhbWVkIGJ5IGEgbG9jYWwgaW52ZXN0b3IuCkJvdGggbWVuIHdhbnRlZCB0byBnYWluIHBvd2VyIG5vdCBieSBicmluZ2luZyBwZW9wbGUgdG8gaGVlbCwgYnV0IGJ5IHByb3BhZ2FuZGEgYW5kIGJyYWlud2FzaGluZy4gClNvIGJ5IG5vdyB5b3UgbWF5IGJlIHdvbmRlcmluZyB3aGF0IENhc2lubyBQb2tlciByZWFsbHkgaXMsIGFuZCBob3cgZG8geW91IHBsYXkgaXQ/IE1heWJlIHlvdSBwbGF5ZWQgdGhpcyBnYW1lIGJlZm9yZSBpbiB5b3VyIG93biBob3VzZS4gSG93ZXZlciByZW1lbWJlciB0aGF0IHdoZW4geW91IHBsYXkgQ2FzaW5vIFBva2VyIG9ubGluZSBpdCBpcyBtdWNoIGRpZmZlcmVudCB0aGFuIHBsYXlpbmcgaXQgaW4geW91ciBob21lLiAKWW91IGNvdWxkIGJlIG9uIHRoZSBiYWQgZW5kIG9mIHRoZSBzdGljayBpbmFkdmVydGVudGx5LiAKVGhlIGZldWRhbCBjZW50cmlmdWdlIG9mIFBha2lzdGFuaSBwb2xpdGljcywgdGhlIFBQUCwgaGFzIHNoZWQgYmxvb2QgaW4gc2VydmljZSBvZiBkZW1vY3JhY3ksIGJ1dCBpdHMgcmVjb3JkIGlzIGZhciBmcm9tIHByaXN0aW5lLiBJdCBoYXMgYmVlbiBlbmFibGVkIGJ5IGFuZCBoYXMgYmVlbiBhbiBlbmFibGVyIG9mIHRoZSBtaWxpdGFyeSdzIHBvd2VyIHBsYXlzIHRocm91Z2hvdXQgaGlzdG9yeS4gWnVsZmlrYXIgQWxpIEJodXR0byByb3NlIHRvIHByb21pbmVuY2UgYXMgYSB0cnVzdGVkIHN0dWQgb2YgRmllbGQgTWFyc2hhbGwgQXl1YiBLaGFuLiAKQWZ0ZXIgdGhlIGJ1aWxkaW5nIG9mIHRoZSBncmVhdCB3YWxsLCBNb25nb2xzIGp1c3Qgd2VudCBhcm91bmQgaXQgYW5kIG92ZXJ0b29rIENoaW5hIGFueXdheSwgZXN0YWJsaXNoaW5nIHRoZSBIYW4gZHluYXN0eS4gQW5kIHdoaWxlIHRoZSBTcGFydGFucyB3ZXJlIGFibGUgdG8gZWZmZWN0aXZlbHkgZnVubmVsIHRoZSBQZXJzaWFucyBhdCBUaGVybW9wYWx5ZSwgdGhleSBwcmV0dHkgZmFtb3VzbHkgc3RpbGwgbG9zdCBhbmQgZ290IHNsYXVnaHRlcmVkIHRvIGEgbWFuLiAKU28geW91IHN0aWxsIG5lZWQgdG8gZXN0aW1hdGUgdGhlIHByb2plY3QgaW4gZHVyYXRpb24gYXMgd2VsbCwgdGhpcyB3aWxsIGdpdmUgeW91IHRoZSBjb3N0LiAKVGhlIFJveWFsCkxhIENvdXIgZGVzIENvbXB0ZXMsIGplIGwnZXNwcmUgdGlyZXJhIGxlcyBjaG9zZXMgYXUgY2xhaXIuIExhIG5vdXZlbGxlIE1haXJlc3NlLCBzJ2lsIGxlIGZhdXQgYXVyYSBjb25nZGkgdG91cyBjZXMgZXNjb3J0cyBib3lzIGRvbnQgZWxsZSBuJ2EgcXVlIGZhaXJlIGV0IHF1aSBvbnQgZHUgY290ZXIgdW4gYXJnZW50IGZvdSBhdXggcGFyaWdvdHMuIElsIHJlc3RlICBlc3ByZXIgcXUnaWwgbmUgc2U7IHNlcmFpdCBhZ2kgcXVlIGRlIENERHMuU2kgdm91cyBhdmV6IGNvbm5haXNzYW5jZSBkJ2F1dHJlcyBibGFndWVzLCBqZSBtZSBjaGFyZ2UgZGUgbGVzICJhY2NvbW1vZGVyIiAgbWEgc2F1Y2UuIApBajAyMjAgIDAgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwoxIDIgc2hvdHMgZnJvbSBhIHJpZmxlIGNhbGliZXIgdG8gdW4gYXJtb3JlZCBjaGVzdCBzaG91bGQgYmUgYSBraWxsLiAKSSBhbHdheXMgaGFkIHNvbWUgc2tlcHRpY2lzbSBhYm91dCB3ZXRoZXIgVHJ1bXAgd2FzIHJhY2lzdC4gRXZlcnl0aGluZyBJIHNhdyBpbiB0aGUgbmV3cyBJJ2QgdGhpbmsgbW9yZSB0aGFuIGxpa2VseSBzb21ldGhpbmcgaGUgc2FpZCBidXQgbm8gd2F5IHRvIGNvbmZpcm0uIApBc2hrZW5hemkgaXMgYW4gZXhwZXJpZW5jZWQgZ2FtaW5nIGluZHVzdHJ5IGV4ZWN1dGl2ZSBhbmQgam9pbnMgUmF0aW9uYWwgR3JvdXAgZnJvbSBQbGF5dGVjaCwgYSBnbG9iYWwgZ2FtaW5nIHNvZnR3YXJlIGNvbXBhbnksIHdoZXJlIGhlIHNlcnZlZCBhcyBDT08gYW5kIGJvYXJkIG1lbWJlci4gQXNoa2VuYXppIHNwZW50IHNldmVuIHllYXJzIHdpdGggUGxheXRlY2gsIGRpcmVjdGluZyB0aGUgZGF5IHRvIGRheSBvcGVyYXRpb25hbCBhbmQgYnVzaW5lc3MgYWN0aXZpdGllcyBhcyB0aGUgY29tcGFueSBncmV3IHJhcGlkbHkgZnJvbSAyMDAgdG8gbW9yZSB0aGFuIDIsNDAwIGVtcGxveWVlcy4KUHJlbGltaW5hcnkgYW5pbWFsIHN0dWRpZXMgcG9pbnRlZCB0byBhIHJvbGUgb2YgbWFnbmVzaXVtIGluIGRlcHJlc3Npb24sIGFzIGRlcGxldGlvbiBvZiBtYWduZXNpdW0gaW4gdGhlIGRpZXQgb2YgbWljZSBsZWFkIHRvIGVuaGFuY2VkIGRlcHJlc3Npb24gIGFuZCBhbnhpZXR5IHJlbGF0ZWQgYmVoYXZpb3Igc3VjaCBhcyBpbmNyZWFzZWQgaW1tb2JpbGl0eSB0aW1lIGluIHRoZSBmb3JjZWQgc3dpbSB0ZXN0ICgxMikuIEluIHRoZSBmb3JjZWQgc3dpbSB0ZXN0LCBhIGNvbW1vbiBhc3NheSBmb3IgZXhhbWluaW5nIGRlcHJlc3Npb24gbGlrZSBiZWhhdmlvciBpbiByb2RlbnRzLCB0aGUgYW5pbWFsIGlzIGNvbmZpbmVkIHRvIGEgY29udGFpbmVyIGZpbGxlZCB3aXRoIHdhdGVyIGFuZCBvYnNlcnZlZCBhcyBpdCBhdHRlbXB0cyB0byBlc2NhcGUuIFRoZSB0aW1lIGluIHdoaWNoIHRoZSBhbmltYWwgZXhoaWJpdHMgaW1tb2JpbGl0eSBpcyB1c2VkIGFzIGEgYmFyb21ldGVyIG9mIGRlc3BhaXIsIGluZGljYXRpbmcgdGhhdCB0aGUgYW5pbWFsIGhhcyBzdWNjdW1iZWQgdG8gYSBmYXRlIG9mIGRyb3duaW5nICgxKS4uIApNaWNoYWwgU3JhbQpUaGUgZG9ncyBvbiB0aGUgb3RoZXIgaGFuZCwgQ3JvcHBpbmcgZG9ncyBlYXJzIHNlcnZlcyBub3RoaW5nIGJ1dCBhZXN0aGV0aWMsIFVubGVzcyB5b3VyIGRvZyBpcyBkb2cgZmlnaHRpbmcsIHRoZXJlIGlzIG5vIHBvaW50IGluIGNyb3BwaW5nIGl0cyBlYXJzIG9yIGRvY2tpbmcgaXRzIHRhaWwgYW5kIHBlb3BsZSBzaG91bGRudCBiZSBkb2cgZmlnaHRpbmcgc28gdGhhdCBzaG91bGQgbmV2ZXIgaGFwcGVuLi4gCkRlYXRoIGFuZCBkZXN0cnVjdGlvbi4gSG9wZSwgcGVhY2UgYW5kIHByb3NwZXJpdHkuIApPbmNlIG1vcmUgd2UgdGhhbmsgeW91IGZvciB0YWtpbmcgdGhlIHRpbWUgdG8gbm90aWZ5IHVzIG9mIHlvdXIgcGVyc29ubmVsIGV4cGVyaWVuY2VzLiBZb3VyIHJldmlldyB3aWxsIGJlIHNoYXJlZCBhbmQgZGlzY3Vzc2VkIHdpdGggdGhlIHJlbGV2YW50IGRlcGFydG1lbnQgbWFuYWdlcnMgYXMgd2VsbCBhcyB3aXRoIHRoZSBleHRlcm5hbCBUaGVybWFsYmF0aCBTcGEgbWFuYWdlciB0byB0YWtlIHRoZSBuZWNlc3NhcnkgYWN0aW9ucy4gV2UgdHJ1bHkgaG9wZSB5b3Ugd2lsbCBnaXZlIHVzIGFuZCBvdXIgZnJpZW5kcyBvZiB0aGUgVGhlcm1hbGJhdGggU3BhIGEgc2Vjb25kIGNoYW5jZS4gCkFub3RoZXIgaXMgdGhhdCBpdCBpcyBQaXNjZXMsIGFuZCBQaXJhdGUgbmVpdGhlciB3YW50cyB0aGF0IHRvIGJlIGEgc3VycHJpc2Ugbm9yIGEgY2VydGFpbnR5IGZvciB1cy4gRm9yLiBSZWFzb25zPyBUaGlzIGlzIHBvc3NpYmxlLCBidXQgSSBzdHJ1Z2dsZSB0byBjb21lIHVwIGZvciBhIHBvc3NpYmxlIGV4cGxhbmF0aW9uIGZvciBXSFkgdGhhdCB3b3VsZCBiZSBkZXNpcmFibGUgICBpZiB5b3UgaGF2ZSBvbmUgSSBsb3ZlIHRvIGhlYXIgaXQuLiAKU29tZSByZXNpZGVudHMgaGF2ZSBzdG9wcGVkIHNpbWlsYXIgaG9tZSBpbXByb3ZlbWVudHMgaW4gdGhlIHdha2Ugb2YgdGhlIHVuY2VydGFpbnR5IHRoYXQgdGhlIGFubmV4YXRpb24gaGFzIGJyb3VnaHQsIHNoZSBzYWlkLi4gCkJ1dCBpZi93aGVuIGl0IGdldHMgdG8gdGhlIHBvaW50IHRoYXQgeW91IG5lZWQgdG8gZmlsZSBhIGNsYWltIGZvciBhIGxvc3QgcGFja2FnZSwgeW91IGhhdmUgdG8gZmlsZSB3aXRoIHlvdXIgcG9zdGFsIHNlcnZpY2UsIG5vdCB0aGUgb25lIGluIHRoZSBjdXN0b21lciBjb3VudHJ5LCBhbmQgdGhhdCB3aGVuIHRoZSBwZW9wbGUgd2hvc2Ugam9iIGl0IGlzIHRvIGNvbW11bmljYXRlIHdpdGggb3RoZXIgcG9zdGFsIHNlcnZpY2VzIGNvbWUgaW50byBwbGF5Li4gCjE1MiAxOTg0LCBUaGUgR3JlYXQgU291dGhlcm4gUHJpbnRpbmcgYW5kIE1hbnVmYWN0dXJpbmcgQ29tcGFueSBGcmVkZXJpY2ssIE1hcnlsYW5kIDIxNzAxIFRodXJzZGF5LCBKdW5lIFByZXNzIFJ1biBpIFBvc3QgdiBUb3RhbCAzNyA5NzUgNlNlY3Rpb25zIFRvZGF5IClOZXdzIGkgbG90YWwgMTUnIFRoZSBXb3JsZCBicmllZmx5LiBGb3VydGggYm9tYiBmb3VuZCBpbiBDaGljYWdvIHRoaXMgd2VlayBDSElDQUdPIChBUCkgQSBwaXBlIGJvbWIgc2ltaWxhciB0byBuZWFybHkgYSBzY29yZSBvZiBvdGhlcnMgcGxhbnRlZCBpbiB0aHJlZSBzdGF0ZXMgd2FzIGZvdW5kIGluIGEgbGFrZWZyb250IHBhcmsgV2VkbmVzZGF5IGFuZCBkaXNtYW50bGVkLCBhbmQgcG9saWNlIHNhaWQgdGhleSBoYXZlICJubyBjbHVlcywgbm8gdGlwcyIgYWJvdXQgdGhlIGRldmljZXMgZGlzY292ZXJlZCBpbiBDaGljYWdvIGluIHRoZSBwYXN0IHdlZWsuIApEdWRlIGFuc3dlcnMuLiAKSWYgeW91IGNvbWUgd2l0aCBwcm9wb3NlZCBzb2x1dGlvbnMsIGl0IGNhbiBnbyBvdmVyIGEgbG90IGJldHRlciB0aGFuIGp1c3QgY29taW5nIHdpdGggbmVnYXRpdmVzIGFuZCBubyBzdWdnZXN0aW9ucyB0byBpbXByb3ZlLi4gCkp1c3Qgd2F0Y2guIApJdCBtYWRlIGEgbG90IG9mIHNlbnNlLiAKVGhlIGZvcmVzdCBpbmR1c3RyeSBpcyBiaWcgdXAgdGhlcmUgc28gdGhlcmUgaXMgYWxvdCBvZiBtaWxscyB3aGljaCB3b3VsZCBiZSBnb29kIGZvciBiZWluZyBhYmxlIHRvIHJlYnVpbGQgb3IgbWFpbnRhaW4gYW5kIGZvciB0cmFkZS4gCk5vdCB0aGUgY2FzZSB3aXRoIG1vcnBoaW5lLCB3aGljaCBoYXMgYSB2ZXJ5IGxvdyBvcmFsIGJpb2F2YWlsYWJpbGl0eS9zdGFiaWxpdHkuLiAKVGhpcyBoYXBwZW5zIHRvIG1lIGFsbCB0aGUgdGltZSEgSSBldmVuIGZvdW5kIG91dCBhYm91dCBhIG51bWJlciBvZiBnYW1lcyB0aGF0IHNlZW0gaW50ZXJlc3RpbmcganVzdCBmcm9tIHRoZSBjb21wb3NlcnMgY29taW5nIGhlcmUgdG8gL3IvZ2FtZW11c2ljIGFuZCBwb3N0aW5nIHRoZWlyIG93biB3b3JrLgpJIGhhdmUgdG8gc2F5IEkgYnV0IEkgYWdyZWUgd2l0aCBhIGxvdCBvZiB3aGF0IHlvdSBzYWlkLiBPbmUgb2YgdGhlIHRoaW5ncyBhYm91dCBtaWxpdGFyeSB2cyBwb2xpY2UgaG93ZXZlciBpcyB0aGUgcHJlc2VuY2Ugb2YgbGFyZ2Ugc2NhbGUgZm9yY2UuIFJ1bGVzIG9mIEVuZ2FnZW1lbnQgZXhpc3QgYmVjYXVzZSBtb3N0IGxvZ2ljYWwgaW5kaXZpZHVhbHMga25vdyB0aGF0IHdoZW4gdGhleSBhcmUgYXR0YWNraW5nIG9yIGFzc2F1bHRpbmcgYSBncm91cCBvZiBtaWxpdGFyeSBwZXJzb25uZWwsIHdoYXQgZXhhY3RseSB0aGV5IGdldHRpbmcgaW50by4gUGVyc29ubmVsIGhhdmUgZXhjZXNzaXZlIHRyYWluaW5nIGFuZCBob3cgdG8gY29tcGxldGVseSBkZWxldGUgYSB0aHJlYXQgZnJvbSB0aGUgZmFjZSBvZiB0aGUgRWFydGguClRoZXkgd2VyZSBydXNoaW5nIGF0IHRoZSBsYXN0IG1pbnV0ZS4gQWJvdXQgMTAgZGF5cyBhZnRlciBjbG9zaW5nIEkgcmVjZWl2ZWQgYW4gZW1haWwgZnJvbSB0aGUgdGl0bGUgY29tcGFueSBzdGF0aW5nIHRoYXQgdGhleSB3ZXJlIGNvbnRhY3RlZCBieSB0aGUgbGVuZGVyIHJlcXVlc3RpbmcgdGhleSB1cGRhdGUgdGhlIEhVRCBhbmQgdGhleSBhcmUgdW5hYmxlIHRvIHNlbGwgdGhlIGxvYW4gdW50aWwgSSBkby4uIApXaGlsZSB0aGUgZmVtYWxlIHBsYXllcnMgaGF2ZSBiZWVuIGJvb2tlZCB1bmRlciBTZWN0aW9uIDQ2IChEKSBvZiBDUlBDIGFuZCBsYXRlciByZWxlYXNlZCBhZnRlciBpc3N1aW5nIG5vdGljZSBvbiB0aGVpciBuYW1lcywgODEgcGVyc29uIHdlcmUgYm9va2VkIHVuZGVyIFNlY3Rpb24gNCAoYSkgYW5kIFNlY3Rpb24gNSBvZiBNYWhhcmFzaHRyYSBBbnRpIEdhbWJhbGluZyBBY3QsIHNhaWQgQXNzaXN0YW50IENvbW1pc3Npb25lciBvZiBQb2xpY2UgKEpBUFUpIGRlcGFydG1lbnQgUkIgTWFuZS4uIApCTFVFUyBCUk9USEVSUzogSm9hcXVpbiBQaG9lbml4IGFuZCBDYXNleSBBZmZsZWNrLCBjaGVja2luZyBvdXQgdGhlIE1ldGhvZCBNYW4gYW5kIFJlZCBNYW4gc2hvdyBhdCBIb3VzZSBvZiBCbHVlcyBpbiBXZXN0IEhvbGx5d29vZC4KSSBub3Qgc2F5aW5nIHRoYXQgVWdhbmRhbiBwb2xpdGljYWwgbGVhZGVycyBjYW4gY29tZSB1cCB3aXRoIGJsYW1pbmcgdGhlIGdheXMgb24gdGhlaXIgb3duLiBPYnZpb3VzbHkgdGhleSBhcyBzbWFydCBhcyB0aGUgR09QLiBJIG1lYW4sIGlmIHlvdSBjYW4gYmxhbWUgdGhlIEpld3Mgb3IgdGhlIEJsYWNrcywgdGhlbiBHYXlzIGFyZSB0aGUgbmV4dCBvYnZpb3VzIGNob2ljZS4KWW91IHNlbGxpbmcgeW91cnNlbGYsIHNvIHlvdSBuZWVkIHRvIG1ha2UgeW91cnNlbGYgbWVtb3JhYmxlLiBFbmdhZ2UgYW5kIGhhdmUgc29tZSBzb3J0IG9mIGNvbm5lY3Rpb24sIHdoZXRoZXIgaXQgbWFraW5nIHRoZW0gbGF1Z2ggb3Igc2hhcmluZyBhIG1vdmluZyBwZXJzb25hbCBleHBlcmllbmNlLi4gCkl0IHRvdGFsZWQgJDMwMDAuIApJIHRvdXJlZCB0aGF0IGNvbnN0cnVjdGlvbiBzaXRlIHNldmVyYWwgdGltZXMuIApJdCB1bmtub3duIGhvdyBtdWNoIGhlIHdhZ2VyZWQsIGJ1dCBoZSBhcHBhcmVudGx5IGhhZCBiZWVuIHdhZ2VyaW5nIG1vcmUgdGhhbiAkMTAsMDAwIGEgZGF5IGluIHNvbWUgY2FzZXMuIFRoZSB0aWVyZWQgcHJvZ3JhbSBhbGxvd3MgcGxheWVycyB0byBhY2N1bXVsYXRlIGNyZWRpdHMgYW5kIGdldCBwZXJrcyBzdWNoIGFzIGJvbnVzZXMgb24gcG9pbnRzIGVhcm5lZCBwbGF5aW5nIHNsb3RzLCBwcmlvcml0eSBob3RlbCBjaGVjayBpbiBhbmQgICBmb3IgdGhvc2Ugd2hvIGJlbG9uZyB0byB0aGUgaGlnaGVzdCBhbmQgYnkgaW52aXRhdGlvbiBvbmx5IGxldmVsICAgbGltb3VzaW5lIHNlcnZpY2UgdG8gYW5kIGZyb20gdGhlIGFpcnBvcnQuCllvdSBqdW1wIHRvIGNvbmNsdXNpb25zIGFib3V0IHBlb3BsZSB3aG8gYXJlIGFsc28ganVtcGluZyB0byBjb25jbHVzaW9ucyBhYm91dCBzdHVmZi4gCkFmdGVyIGFuIGFwcGVhbCB0byBzY2hvb2xzIGFjcm9zcyBBdXN0cmFsaWEgdG8gY29tYiB0aGVpciBlbnJvbG1lbnQgcmVjb3JkcyBmb3IgZ2lybHMgdGhlIHNhbWUgYWdlIGFzIExhbmUgY2hpbGQsIGhlIHNwb2tlIHRvIHRoZSBwYXJlbnRzIG9mIGEgZmFpciBoYWlyZWQgZWlnaHQgeWVhciBvbGQgaW4gc291dGggZWFzdCBRdWVlbnNsYW5kLiAKQmliaSBsYXRlciBjbGFyaWZpZWQgaGlzIHN0YXRlbWVudHMgYWZ0ZXIgY29uZGVtbmF0aW9uIGFuZCBwcmVzc3VyZS4gSSBjYW5ub3QgaW1hZ2luZSBhbnl0aGluZyBzaW1pbGFyIGluIEFybWVuaWFuIHBvbGl0aWNzLCBhbmQgdGhhdCBpcyBhIGdvb2QgdGhpbmcuLiAKU3QgS2lsZGEgc3RhciBOaWNrIFJpZXdvbGR0IGhhc24ndCBmb3Jnb3R0ZW4gdG91cmluZyBDb2xsaW5nd29vZCdzIExleHVzIENlbnRyZSB3aGlsZSB0cmFpbmluZyB3aXRoIHRoZSBBdXN0cmFsaWFuIGludGVybmF0aW9uYWwgcnVsZXMgc2lkZSBhIGZldyB5ZWFycyBhZ28uICJHb2luZyB0aHJvdWdoIHRoZXJlIGFuZCBsb29raW5nIGF0IHRoZSBmYWNpbGl0aWVzIHRoYXQgdGhleSBoYWQsIGl0IHJlYWxseSBoaXQgaGFyZCBob3cgZmFyIGJlaGluZCB0aGUgZWlnaHQgYmFsbCB3ZSB3ZXJlIHdpdGggcmVzcGVjdHMgdG8gdGhhdCBzb3J0IG9mIHN0dWZmLCIgUmlld29sZHQgc2FpZC4gCkhlcmUgaXMgYSBsaXN0IG9mIHdoYXQgYWxsIGlzIGluY2x1ZGVkIGluIHlvdXIgTG90dGVyeSBBbmQgQ2FzaW5vIEVib29rLiBUaGlzIHBhY2thZ2UgY29udGFpbnMgYSBjb2xsZWN0aW9uIG9mIGVpZ2h0IGd1aWRlcyB0aGF0IHdpbGwgdGVsbCB5b3UgZWFjaCBhbmQgZXZlcnkgc3RyYXRlZ3kgdGhhdCB5b3UgbmVlZCB0byBrbm93IGJlZm9yZSBwbGF5aW5nLiBXaXRoIHRoZSBoZWxwIG9mIHRoZXNlIGd1aWRlcywgeW91IHdpbGwgbm90IG9ubHkgbGVhcm4gdGhlIHN0cmF0ZWdpZXMgYnV0IHRoZXkgd2lsbCBhbHNvIGd1aWRlIHlvdSBob3cgdG8gaW1wcm92ZSB5b3VyIGdhbWUgYW5kIHJlYWNoIGEgaGlnaGVyIGxldmVsLiAKWW91IHNlZSBtb3JlIGZvcmVpZ25lcnMgaW4gSG9uZ2RhZSB0aGFuIEl0YWV3b24uIApUaGlzIGlzIGxvbmcgdGVybSBtZW1vcnkuIApGb3IgdGhlIG1vbWVudCwgS2Vya29yaWFuIGlzIGJpZGluZyBoaXMgdGltZS4gT24gRnJpZGF5LCBLZXJrb3JpYW4ncyBpbnZlc3RtZW50IGNvbXBhbnksIFRyYWNpbmRhIENvcnAuLCBpc3N1ZWQgYSBwb2xpdGUgc3RhdGVtZW50IHRoYXQgdGhhbmtlZCBHTSBmb3IgYWdyZWVpbmcgdG8gZXhwbG9yZSBhIHBvc3NpYmxlIHBhcnRuZXJzaGlwLgpBdCB0aGUgdGltZSwgdGhlIGNpdHkgZGVjaWRlZCB0byByZWx5IG9uIGJ1c2luZXNzIGxpY2Vuc2luZyB0byBjaGFzZSBhd2F5IGlsbGVnYWwgbWFzc2FnZSBwYXJsb3JzLiAKRHUgbXVzc3QgYXVjaCBuaWNodCBydW5kIHVtIGRlbiBHbG9idXMgZHNlbiB1bSBQb2tlcnByb2ZpIHp1IHNlaW4gICBkdSBtdXNzdCBlcyBudXIgenUgZGVpbmVtIEhhdXB0YmVydWYgbWFjaGVuLiAKQ29sZSdzIHNtYWxsIGJsb2NrIFYgOCB3YXMgb2ZmZXJlZCBpbiB0aGUgMTk1NSBDaGV2eS4gTW92aW5nIHVwIGZyb20gY2hpZWYgZW5naW5lZXIsIGhlIHdhcyBuYW1lZCB0aGUgZGl2aXNpb24ncyBnZW5lcmFsIG1hbmFnZXIgaW4gMTk1Ni4gRnJvbSBGZWIuIDUgdG8gTWFyY2ggOCwgMTk1NywgQ29sZSBiZWdhbiBhIGdydWVsaW5nLCBuYXRpb253aWRlIHNlcmllcyBvZiBkZWFsZXIgbWVldGluZ3MuCldhcyBkdSBhdWYgamVkZW4gRmFsbCBhYmVyIG5lYmVuIHNvbGx0ZXN0IGlzdCBTcG9ydC4gCkFuZCB5b3UgYXJlLCB0b28sIEkgYW0gYWJzb2x1dGVseSBzdXJlLiBJIGFtIGNsdW1zeS4gSSBjYW4gZG8gMTIgIDYgaW4gbXkgaGVhZC4gCkhlIG1haW50YWluZWQgY29udGFjdCB3aXRoIGEgbnVtYmVyIG9mIGhpcyBVIG9mIFQgY2xhc3NtYXRlcywgZW5qb3lpbmcgZmlzaGluZyBpbiBBbGdvbnF1aW4gUGFyayB1bnRpbCBzZXZlcmFsIHllYXJzIGFnby4gCkluIGFsbCwgdGhlcmUgd2VyZSA3IHBob3RvcyBJIGNvdWxkIHBsYWNlLCBhIGZldyBtb3JlIHdoaWNoIEkgYmVsaWV2ZSBJIGhhdmUgc2VlbiBlbHNld2hlcmUgYnV0IGNvdWxkbiBwbGFjZSwgYW5kIGEgZmV3IG1vcmUgc3RpbGwgd2hpY2ggYXQgbGVhc3QgbG9va2VkIGZhbWlsaWFyLiAKSG9sZGluZyB0d28gcGFpciBpbiBhIGhvbWUgZ2FtZSBpcyBhbHNvIGhhcmQuIApHaXZlbWVsaWIgdQpMdWdlIGhhcyB0aGUgZGlzam9pbnRlZCwgY2hhb3RpYyBzb3VuZCwgYnV0IHdvdWxkIG1vc3RseSBmaXQgdW5kZXIgdGhlIG5vIHdhdmUgZ2VucmUuIElmIHlvdSBsaWtlIHRoaXMgZGlyZWN0aW9uLCBhbmQgd2FudCBtb3JlIG9mIHRoYXQsIGNoZWNrIG91dCBHdWVyaWxsYSBUb3NzIGFzIHdlbGwuCkF0IHNvbWUgcG9pbnQgaW4gaHVtYW4gaGlzdG9yeSwgdGhleSB3aWxsIGxvb2sgYmFjayBvbiB0aXBwaW5nIGFuZCB0aGluayBpdCB3YXMgYSByaWRpY3Vsb3VzIGNvbmNlcHQgYW5kIGJpemFycmUgaG93IHdlIGp1c3QgYWNjZXB0ZWQgaXQgYXMgYSB3YXkgb2YgbGlmZS4gCllvdSBjbGVhcmx5IGRpZG4ndCByZWFkIG15IGNvbW1lbnQgd2VsbCBlbm91Z2ggICBJIGV4cGxhaW5lZCB0aGV5IGRpZG4ndCByZWFsbHkgY2FyZSBhbGwgdGhhdCBtdWNoLCBidXQgdGhleSB3ZXJlIHN1cnByaXNlZC4uIApCb3RoIG9mIHRoZXNlIGNvbW11bmljYXRpb24gcGF0aHdheXMgYXJlIGFjdGl2YXRlZCBpbiBzdHJlc3NmdWwgc2l0dWF0aW9ucyBhbmQgaW5mbHVlbmNlIGd1dCBmdW5jdGlvbi4gV2hhdCBpcyBleGNpdGluZyBhbmQgbmV3IGlzIHRoZSBjb25zaWRlcmF0aW9uIG9mIGJvdHRvbSB1cCBjb250cm9sIHRoYXQgaXMsIGhvdyB0aGUgZ3V0LCBvciBtb3JlIHByZWNpc2VseSB0aGUgbWljcm9iaW90YSBpbiB0aGUgR0kgdHJhY3QsIGNhbiBpbmZsdWVuY2UgYnJhaW4gZnVuY3Rpb24uIFJlc2VhcmNoZXJzIGhhdmUgcmVjZW50bHkgc2hvd24gdGhhdCB0aGUgcHJlc2VuY2Ugb2YgZ3V0IG1pY3JvYmlvdGEgZHVyaW5nIGVhcmx5IGRldmVsb3BtZW50IGluZmx1ZW5jZXMgdGhlIGJyYWluJ3MgbmV1cmFsIGNvbm5lY3Rpdml0eSByZWxhdGVkIHRvIGFueGlldHkgYW5kIGRlcHJlc3Npb24uIApNYXBsZXMgdG9sZCB0aGUgQVAgdGhhdCBzaGUgc3VjaCBhIGJpZyBmYW4gb2YgU2FyYWggUGFsaW4gdGhhdCBzaGUgdHJhdmVsZWQgdG8gQWxhc2thIHR3aWNlIGJlZm9yZSB0byBtZWV0IGhlci4gU2luY2UgdGhlIHJlYXNvbiB0aGF0IE1zLiAKR3JhbnRlZCwgeW91IHRha2luZyBhIGdhbWJsZSBpZiB5b3UgdHJ5IHRvIHJvYiBhIGd1YXJkLiAKSXQncyB0aGUgZGVmZW5zZSdzIHRoZW9yeSB0aGF0IE9ydGl6IGtpbGxlZCBPZGluIExsb3lkIGluIGEgUENQIGluZHVjZWQgcHN5Y2hvc2lzIEp1bmUgMTcsIDIwMTMuIEp1ZGdlIEUuIFN1c2FuIEdhcnNoIHJ1bGVkIEdyZWVuYmxhdHQgY291bGQgbm90IHNwZWN1bGF0ZSBvbiB0aGUgd2hldGhlciBPcnRpeiBvciBXYWxsYWNlIHdlcmUgb24gUENQIGF0IHRoZSB0aW1lIG9mIHRoZSBtdXJkZXIsIG9ubHkgc3BlYWsgb24gdGhlIGdlbmVyYWwgYmVoYXZpb3JhbCBlZmZlY3RzIG9mIHRoZSBkcnVnLgpUaGF0IHdvdWxkIG1lYW4gc28gZG9lcyBMU0QsIDJDIEIsIHBzaWxvc2luLCBldmVyeSBvdGhlciBwc3ljaGVkZWxpYy4gMjV4IE5CT01lIGlzIHRveGljL2ZhdGFsIGluIGhpZ2ggZG9zZXMgYmVjYXVzZSBvbiB0b3Agb2YgYWN0aXZhdGluZyB0aGUgUExBMiBwYXRod2F5IG9mIHRoZSA1IEhUMmEgcmVjZXB0b3IsIGl0IGFsc28gYWN0aXZhdGVzIHRoZSBhZHJlbmFsaW5lIHJlY2VwdG9ycywgY2F1c2luZyB2YXNvY29uc3RyaWN0aW9uLiBUaHJvbWJveGFuZSBBMiBpcyBwcm9kdWNlZCBieSBhbGwgUExBMiBhY3RpdmF0aW9uLCBidXQgdGhlIGFkZGVkIGFkcmVuZXJnaWMgYWdvbmlzbSBzZWFscyB0aGUgZGVhbC4uIApUaGUgY2FzaW5vIGFsc28gaGFzIGEgcmV3YXJkcyBwcm9ncmFtIHRoYXQgcGFydG5lcnMgd2l0aCB0ZW4gZG93bnRvd24gcmVzdGF1cmFudHMsIGluY2x1ZGluZyBCb2NhLCBKZWFuIFJvYmVydCdzIFRhYmxlLCBNYWhvZ2FueSdzIGF0IHRoZSBCYW5rcywgTWV0cm9wb2xlLCBNb2VybGVpbiBMYWdlciBIb3VzZSwgTW9udGdvbWVyeSBJbm4gQm9hdGhvdXNlLCBOYWRhLCBTb3R0bywgTmljb2xhJ3MgUmlzdG9yYW50ZSBJdGFsaWFubyBhbmQgVmlhIFZpdGUuClR3byB5ZWFycyBhZ28sIGFzIHJlbnRzIGluIHNvbWUgbmVpZ2hib3Job29kcyBhcHByb2FjaGVkIGhpc3RvcmljIGhpZ2hzIG9mICQxMDAgYSBzcXVhcmUgZm9vdCByZWFjaGluZyBldmVuIGdpZGRpZXIgc3VtbWl0cyBpbiB0aGUgUGxhemEgRGlzdHJpY3QgbmVhciBDZW50cmFsIFBhcmsgYSBkZXZlbG9wZXIgd291bGQgaGF2ZSBzd29vbmVkIG92ZXIgYWxsIHRob3NlIGNyaXNwIG5ldyBjdWJpY2xlcyBoaXR0aW5nIHRoZSBtYXJrZXQuIApBbHNvIHRlYW1zIGRvbid0IHVzdWFsbHkgZ3JvdXAgaW5zaWRlIGEgcmFkaXVzIGFzIHRpZ2h0IGFzIGEgZ3JlbmFkZSBleHBsb3Npb24uIApUaGFua3MgZm9yIHRoYXQuIEkgaGFkIGdvb2QgZmVlbGluZ3MgYWJvdXQgaXQsIGJ1dCBpdCB3YXMgd2hlbiBJIHdhcyBkb2luZyB0aGUgcGFwZXJ3b3JrIHRoYXQgSSB3YXMgbGlrZSAiYWhoaGhoaGhoaCIuCkFsc28gbWFraW5nIGFuIGFwcGVhcmFuY2Ugd2FzR2lnaSdzIHlvdW5nZXIgc2lzdGVyIEJlbGxhLCB3aG8gY29tbWFuZGVkIGF0dGVudGlvbiBpbiBhIGZvcm0gZml0dGluZyBuZW9uIGVuc2VtYmxlLCB3aGljaCBzaGUgcGFpcmVkIHdpdGggY29tZnkgbWF0Y2hpbmcgc2FuZGFscy4K|<---