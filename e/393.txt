<!DOCTYPE html>
<head>
 <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
 <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
 <meta content="sketchbook5_elkha" name="module_skin"/>
 <meta content="no" http-equiv="imagetoolbar"/>
 <title>
  [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
 </title>
 <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
 <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="description"/>
 <meta content="ko_KR" property="og:locale"/>
 <meta content="article" property="og:type"/>
 <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
 <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
 <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
</head>
<body>
 <div class=" ce center ko_">
  <div id="wrap">
   <div id="header">
    <div class="Wrapper">
     <div class="logo">
      <h1 class="mpReset">
       <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
      </h1>
      <p class="mpReset about">
       에펨코리아 - 유머, 축구, 게임, 풋볼매니저 통합 커뮤니티
      </p>
      <hr/>
     </div>
     <div class="mpReset" id="gnb">
      <div class="ul1">
       <ul class="ul1">
        <li class="li1 on on1 ">
         <a class="a1 on on1" href="/best">
          <span>
           포텐터짐<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li><li>[search]</li><li>[search]</li><li>[search]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 on on2 ">
            <a class="a2 on on2" href="/best">
             <span>
              포텐터진 게시판<li>[link]</li>[link][search][link]<li>[search]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
            </a>
           </li>
           <li class="li2 ">
            <a class="a2" href="/index.php?mid=humor&amp;sort_index=pop&amp;order_type=desc">
             <span>
              - 유머/이슈 인기글
             </span>
            </a>
           </li>
           <li class="li2 ">
            [ahref]
            
           </li>
           <li class="li2 ">
            [link]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 ">
         [link]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            [link]
            
           </li>
           <li class="li2 ">
            [ahref]
            
           </li>
           <li class="li2 ">
            [link]
            
           </li>
           <li class="li2 ">
            [ahref]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 ">
         [ahref]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            [link]
            
           </li>
           <li class="li2 ">
            [link]
            
           </li>
           <li class="li2 ">
            <a class="a2" href="/football_korean">
             <span>
              국내축구<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>
             </span>
            </a>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 ">
         <a class="a1" href="/hotdeal">
          <span>
           쇼핑
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            [link]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 ">
         [link]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            [link]
            
           </li>
           <li class="li2 ">
            [ahref]
            
           </li>
           <li class="li2 ">
            [ahref]
            
           </li>
           <li class="li2 ">
            [ahref]
            
           </li>
           <li class="li2 ">
            [link]
            
           </li>
           <li class="li2 ">
            [ahref]
            
           </li>
           <li class="li2 ">
            [link]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         [link]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            <span style="display:block; height:1px; margin:-8px 0 0;">
             [search][link]<li>[ahref]</li>[ahref]<li>[search]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               [link]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
             </ul>
            </div>
           </li>
           <li class="li2 ">
            <span style="display:block; height:1px; margin:-8px 0 0;">
             <li>[search]</li><li>[ahref]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[ahref]<li>[search]</li><li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 ">
               <a class="a3" href="/notice">
                <span>
                 공지
                </span>
               </a>
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [search]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         [ahref]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            <span style="display:block; height:1px; margin:-8px 0 0;">
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               [ahref]
               
              </li>
              <li class="li3 ">
               <a class="a3" href="/other_sports">
                <span>
                 기타스포츠
                </span>
               </a>
              </li>
              <li class="li3 ">
               <a class="a3" href="/basketball">
                <span>
                 농구
                </span>
               </a>
              </li>
              <li class="li3 ">
               <a class="a3" href="/assapig">
                <span>
                 건강/아싸/돼지
                </span>
               </a>
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               <a class="a3" href="/personacon">
                <span>
                 퍼스나콘/로고[link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[link]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]
                </span>
               </a>
              </li>
              <li class="li3 ">
               [link]
               
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         [ahref]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 menu_ext_mid">
            [ahref]
            
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               [ahref]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               <a class="a3" href="/fm19tactic">
                <span>
                 전술자료실[ahref]<li>[ahref]</li>[link]<li>[ahref]</li>[search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                </span>
               </a>
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
             </ul>
            </div>
           </li>
           <li class="li2 ">
            <span class="a2">
             <span>
              FM2018[ahref]<li>[search]</li><li>[ahref]</li>[ahref][link][link]<li>[ahref]</li>
             </span>
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 ">
               <a class="a3" href="/fm18free">
                <span>
                 에펨자유
                </span>
               </a>
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
             </ul>
            </div>
           </li>
           <li class="li2 ">
            <span class="a2">
             <span>
              통합/자료실
             </span>
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 ">
         [link]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            [link]
            
           </li>
           <li class="li2 ">
            [ahref]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         <a class="a1" href="/lostark">
          <span>
           게임
          </span>
         </a>
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            <span class="a2">
             PC/기타<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[link]</li><li>[search]</li>[link]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               [ahref]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [ahref]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               <a class="a3" href="/Hearthstone">
                <span>
                 하스스톤
                </span>
               </a>
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
             </ul>
            </div>
           </li>
           <li class="li2 ">
            <span class="a2">
             <span>
              모바일
             </span>
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 ">
               <a class="a3" href="/gf">
                <span>
                 소녀전선
                </span>
               </a>
              </li>
              <li class="li3 ">
               [link]
               
              </li>
              <li class="li3 ">
               [link]
               
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 menu_ext_mid">
         [ahref]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2 ">
            <span style="display:block; height:1px; margin:-8px 0 0;">
             <li>[link]</li><li>[ahref]</li>[search][link][link]
            </span>
            <div class="ul3">
             <ul class="ul3">
              <li class="li3 menu_ext_mid">
               <a class="a3" href="/newboard">
                <span>
                 2군 목록
                </span>
               </a>
              </li>
             </ul>
            </div>
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 li_bookmark">
         [link]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            [ahref]
            
           </li>
          </ul>
         </div>
        </li>
        <li class="li1 li_bookmark2">
         [link]
         
         <div class="ul2">
          <ul class="ul2">
           <li class="li2">
            <a class="a2" href="/board">
             <span>
              전체 게시판 목록
             </span>
            </a>
           </li>
          </ul>
         </div>
        </li>
       </ul>
      </div>
      <hr/>
     </div>
     <div class="logged_info">
      <span class="li2">
       회원 가입<li>[link]</li><li>[ahref]</li>[link][search]<li>[search]</li>[search][link][search][search]
      </span>
      <span class="li2">
       [link]
       
      </span>
      <span class="li2">
       [link]
       
      </span>
      <form action="/" class="li2 mpReset" method="post" onsubmit="return GS_LOGIN_FILTER(this)">
       <span class="keep">
        [search]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
       </span>
       <button type="submit">
        로그인
       </button>
      </form>
     </div>
     <div class="search mpReset">
      <form action="/" method="get">
      </form>
      <hr/>
     </div>
    </div>
   </div>
   <div class="content_padding_true" id="container">
    <div class="Wrapper">
     <div id="banner3">
      <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="4409588696" style="display:inline-block;width:160px;height:600px">
      </ins>
     </div>
     <div id="sidebar">
      <div class="padding">
       <div style="height:20px">
       </div>
       <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="9749548788" style="display:inline-block;width:160px;height:600px">
       </ins>
       <div class="fm_hot_key">
        <div class="title">
         단축키
        </div>
        <div class="more">
         [ahref]
         
        </div>
        <div class="ul">
         <div class="li">
          [ahref]
          
         </div>
         <div class="li">
          [link]
          
         </div>
         <div class="li">
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
     </div>
     <div id="content">
      <div class="content_dummy">
       <p style="text-align: center;">
        [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search][search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>
       </p>
      </div>
      <div style="clear:both;">
      </div>
      <div class="bd small_lst_btn1 bd_pc" data-bdfilestype="" data-default_style="webzine" id="bd_189545458_1440993036" style='font-family:돋움,Dotum,Arial,나눔고딕,"Malgun Gothic",맑은고딕,굴림,sans-serif;'>
       <div id="adpost" style="height:100px">
        [link]
        
       </div>
       <div class="tl_srch clear">
        <div class="bd_tl">
         <h1 class="ngeb clear" style="padding-left:0; opacity:.8;">
          [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
         </h1>
         <div class="pop_more">
          <span class="a">
           <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
          </span>
         </div>
         <div class="clear">
         </div>
        </div>
       </div>
       <div class="rd rd_nav_style2 clear" data-docsrl="1440993036">
        <div id="bd_capture">
         <div class="rd_hd clear" style="margin:0 -15px 20px">
          <div class="board clear " style=";">
           <div class="top_area ngeb" style=";">
            <span class="date m_no">
             2018.12.11 03:28<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search][ahref][link]<li>[link]</li>
            </span>
            <h1 class="np_18px">
             <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
            </h1>
            <div class="clear">
            </div>
           </div>
           <div class="btm_area clear">
            <div class="side">
             [ahref]
             
            </div>
            <div class="side fr">
             <span>
              조회 수
              <b>
               83596
              </b>
             </span>
             <span>
              <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][ahref][search]
             </span>
             <span>
              댓글
              <b>
               49
              </b>
             </span>
            </div>
           </div>
          </div>
          <div class="rd_nav_side">
           <div class="rd_nav img_tx fr m_btn_wrp">
            <div class="m_no_533">
             <a class="back_to bubble m_no" href="p" title="위로">
              <i class="fa fa-arrow-up">
              </i>
              <b class="tx">
               위로
              </b>
             </a>
             [ahref]
             
             <a class="scrap bubble m_no" href=";" onclick="if(confirm('스크랩 하시겠습니까?')) doCallModuleAction('document','procMemberScrapDocument',1440993036); " title="스크랩">
              스크랩
             </a>
             [link]
             
             [link]
             
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
         <div class="rd_body clear">
          <div class="document_address">
           [link]
           
           <span class="btn_pack small">
            <button data-clipboard-text="https://www.fmkorea.com/best/1440993036" id="copy-button">
             복사
            </button>
           </span>
          </div>
          <article>
           <div class="document_1440993036_650244542 xe_content">
            <div class="pi__2147631790" id="pi_2147631790">
             <div style="UO5pLG:180px">
              <video autoplay="" loop="" muted="" playsinline="" poster="//media5jvqbd.fmkorea.com/files/attach/new/20181211/486616/650244542/1440993036/0030793c86e9ec05211624d40917f90d.gif.thumb.jpg" width="320">
               <source src="//media5jvqbd.fmkorea.com/files/attach/new/20181211/486616/650244542/1440993036/0030793c86e9ec05211624d40917f90d.gif.mp4" type="video/mp4"/>
               Video 태그를 지원하지 않는 브라우저입니다.
              </video>
             </div>
            </div>
            <div>
             <br class="pi__2147631790" id="pi__2147631790">
              <li>[search]</li>[ahref][ahref][ahref][link]<li>[ahref]</li><li>[link]</li><li>[ahref]</li>[link]<li>[search]</li>
             </br>
            </div>
            <div>
             1. 부인이 남편에게 가정폭력 당했다고 다급하게 경찰에 신고
            </div>
            <div>
             <br>
              [search]<li>[search]</li>[search][ahref]<li>[ahref]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[search]</li>[link][link]
             </br>
            </div>
            <div>
             2. 신고 당한 남편 가정폭력으로 체포후 기소당함
            </div>
            <div>
             <br>
              <li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </br>
            </div>
            <div>
             3. 남편 자비로 2천 만원 들여서 CCTV 복원 부인 원맨쇼 드러남
            </div>
            <div>
             <br/>
            </div>
            <div>
             4. 사건 전모 드러나자 부인 현재 도망중
            </div>
            <p>
             [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]<li>[link]</li><li>[ahref]</li><li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>
            </p>
           </div>
          </article>
         </div>
        </div>
        <div class="rd_ft">
         <div class="fm_vote">
          <span class="vote">
           [ahref]
           
           <label for="fm_vote1440993036">
            포텐 터졌네요!
           </label>
          </span>
          <span class="vote vote2">
           [ahref]
           
           <label for="fm_vote21440993036">
            다른 구단에 제의
           </label>
          </span>
         </div>
         <div class="humor_history">
         </div>
         <div style="margin:-5px 0 10px">
          <div style="text-align:center">
           <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="2675697016" style="display:inline-block;width:728px;height:90px">
           </ins>
          </div>
         </div>
         <div class="rd_fnt rd_file" id="files_1440993036">
          <table class="bd_tb">
           <caption class="blind">
            첨부 파일
           </caption>
           <tr>
            <th class="ui_font" scope="row">
             <strong>
              첨부파일
             </strong>
            </th>
            <td>
             <ul>
              <li>
               [ahref]
               
               <span class="comma">
                ,
               </span>
              </li>
             </ul>
            </td>
           </tr>
          </table>
         </div>
         <div class="rd_fnt rd_file" id="files_1440993036">
          <table class="bd_tb">
           <caption class="blind">
            짤줍
           </caption>
           <tr>
            <th class="ui_font" scope="row">
             <strong>
              짤줍
             </strong>
            </th>
            <td>
             <ul>
              <li>
               [ahref]
               
               <span class="comma">
                ,
               </span>
              </li>
             </ul>
            </td>
           </tr>
          </table>
         </div>
         <div class="rd_ft_nav clear">
          <div class="doc_sns">
           <a class="a facebook" href=";" onclick="doc_sns(0,1440993036,'%EB%82%A8%ED%8E%B8%EC%97%90%EA%B2%8C+%ED%8F%AD%ED%96%89+%EB%8B%B9%ED%95%9C+%EB%B6%80%EC%9D%B8+%EA%B9%9C%EC%A7%9D+%EB%B0%98%EC%A0%84...gif')" title="페이스북에서 공유하기!">
            페이스북에서 공유하기!
           </a>
           <a class="a twitter" href=";" onclick="doc_sns(1,1440993036,'%EB%82%A8%ED%8E%B8%EC%97%90%EA%B2%8C+%ED%8F%AD%ED%96%89+%EB%8B%B9%ED%95%9C+%EB%B6%80%EC%9D%B8+%EA%B9%9C%EC%A7%9D+%EB%B0%98%EC%A0%84...gif')" title="트위터에서 공유하기!">
            트위터에서 공유하기!
           </a>
           <span class="a" data-url="https://www.fmkorea.com/1440993036" id="kakaostory-share-button" title="카카오 스토리 공유하기!">
            [link][search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
          </div>
          <div class="rd_nav img_tx fr m_btn_wrp">
           <div class="m_no_533">
            <a class="back_to bubble m_no" href="p" title="위로">
             <i class="fa fa-arrow-up">
             </i>
             <b class="tx">
              위로
             </b>
            </a>
            [link]
            
            <a class="scrap bubble m_no" href=";" onclick="if(confirm('스크랩 하시겠습니까?')) doCallModuleAction('document','procMemberScrapDocument',1440993036); " title="스크랩">
             스크랩
            </a>
            [link]
            
            [link]
            
            [link]
            
           </div>
          </div>
         </div>
        </div>
        <div id="comment">
        </div>
        <div class="fdb_lst_wrp ">
         <div class="fdb_lst clear cmt_wrt_btm" id="1440993036_comment">
          <div aria-live="polite" id="cmtPosition">
           <div class="fdb_tag bg_f_f9 css3pie">
            [link]
            
           </div>
           <ul class="fdb_lst_ul ">
            <li class="fdb_itm clear comment_best comment-2" id="comment_1441007609_">
             <div class="meta">
              <span class="icon-hit">
               <i class="fa fa-star">
               </i>
               BEST
              </span>
              <a class="member_650244542" href="a" onclick="return false">
               겸손찡
              </a>
              <span class="date">
               2018.12.11 03:35
              </span>
             </div>
             <div class="document_writer">
              <div class="comment_1441007609_650244542 xe_content">
               [link]
               
               저 사건 호주에서 일어난 사건이고 부부 둘다 아랍인이라
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              [ahref]
              
              <span class="vote ui_font">
               [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment_best comment-2" id="comment_1441106448_">
             <div class="meta">
              <span class="icon-hit">
               <li>[ahref]</li>[search]<li>[search]</li>[search][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]
              </span>
              <a class="member_8926732" href="a" onclick="return false">
               뭐지
              </a>
              <span class="date">
               2018.12.11 06:42<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </span>
             </div>
             <div>
              <div class="comment_1441106448_8926732 xe_content">
               전세계적으로 하는짓이 똑같구먼.....
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              [ahref]
              
              <span class="vote ui_font">
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[search]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][ahref]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment_best comment-2" id="comment_1441122352_">
             <div class="meta">
              <span class="icon-hit">
               <i class="fa fa-star">
               </i>
               BEST
              </span>
              [link]
              
              <span class="date">
               2018.12.11 07:14[ahref][search][search][search][link][link]
              </span>
             </div>
             <div>
              <div class="comment_1441122352_1170680676 xe_content">
               저런일 줜나많음 나도 거짓진술로 감옥서 이틀지내다 풀려남 줮같음
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              [ahref]
              
              <span class="vote ui_font">
               [link]<li>[link]</li>[search][search][search][ahref][link]<li>[search]</li><li>[ahref]</li><li>[link]</li>[ahref]<li>[ahref]</li><li>[link]</li><li>[link]</li>[link]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment_border comment-1441004792" id="comment_1441004788">
             <div class="meta">
              <a class="member_742086499" href="a" onclick="return false">
               예나민주채원데용
              </a>
              <span class="date">
               2018.12.11 03:32[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li>[search][link][ahref][ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
              </span>
             </div>
             <div>
              <div class="comment_1441004788_742086499 xe_content">
               소름돋는다 진짜
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li>[search]<li>[search]</li>[link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[link]</li><li>[ahref]</li><li>[link]</li><li>[search]</li><li>[search]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441006390" id="comment_1441006385">
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 03:34[ahref][ahref]<li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[ahref]</li>
              </span>
             </div>
             <div>
              <div class="comment_1441006385_1394683459 xe_content">
               한자나오는데 부인은 서양인처럼 생김
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment_best comment-1" id="comment_1441007609" style="margin-left:2%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              <span class="icon-hit">
               <i class="fa fa-star">
               </i>
               BEST
              </span>
              [link]
              
              <span class="date">
               2018.12.11 03:35[link]<li>[ahref]</li>[ahref][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[ahref][search]<li>[link]</li>[search]
              </span>
             </div>
             <div class="document_writer">
              <div class="comment_1441007609_650244542 xe_content">
               [link]
               
               저 사건 호주에서 일어난 사건이고 부부 둘다 아랍인이라
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 1441007609, this);" title="추천">
                <em>
                 <i class="fa fa-thumbs-o-up color">
                 </i>
                 <span class="voted_count">
                  77		[search][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li><li>[search]</li>
                 </span>
                </em>
               </a>
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441115407" id="comment_1441115404" style="margin-left:4%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 07:02
              </span>
             </div>
             <div>
              <div class="comment_1441115404_306041444 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441007609);">
                겸손찡
               </a>
               그거 뭐였지 그영화생각나네
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441118463" id="comment_1441118460" style="margin-left:6%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 07:08
              </span>
             </div>
             <div>
              <div class="comment_1441118460_6259364 xe_content">
               [ahref]
               
               너를 찾아줘
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[search]</li>[search]<li>[ahref]</li><li>[search]</li><li>[link]</li>[ahref]<li>[search]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441118661" id="comment_1441118658" style="margin-left:8%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              <a class="member_306041444" href="a" onclick="return false">
               쩝시티
              </a>
              <span class="date">
               2018.12.11 07:08
              </span>
             </div>
             <div>
              <div class="comment_1441118658_306041444 xe_content">
               [ahref]
               
               앗 맞다 근데스폰가
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441118948" id="comment_1441118944" style="margin-left:10%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              <a class="member_6259364" href="a" onclick="return false">
               렉스오렌지카운티
              </a>
              <span class="date">
               2018.12.11 07:08
              </span>
             </div>
             <div>
              <div class="comment_1441118944_6259364 xe_content">
               [link]
               
               사실 나를 찾아줘임
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[ahref]</li><li>[search]</li>[ahref][search]<li>[link]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441119207" id="comment_1441119203" style="margin-left:12%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 07:09
              </span>
             </div>
             <div>
              <div class="comment_1441119203_306041444 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441118944);">
                렉스오렌지카운티
               </a>
               사실 나도 알고있었음
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[search]</li><li>[ahref]</li><li>[search]</li>[ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[link]</li><li>[link]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441119351" id="comment_1441119348" style="margin-left:14%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 07:09
              </span>
             </div>
             <div>
              <div class="comment_1441119348_6259364 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441119203);">
                쩝시티
               </a>
               도리는?
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441119703" id="comment_1441119700" style="margin-left:16%">
             <h2>
              <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
             </h2>
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 07:10
              </span>
             </div>
             <div>
              <div class="comment_1441119700_306041444 xe_content">
               [link]
               
               나닛?pophub
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441123722" id="comment_1441123719" style="margin-left:4%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 07:17[search]<li>[search]</li>[ahref]<li>[search]</li>[link][ahref]
              </span>
             </div>
             <div>
              <div class="comment_1441123719_762755526 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441007609);">
                겸손찡
               </a>
               아랍인인데 여자가 저런짓이 가능??
               <br/>
               ㄹㅇ루 목숨걸었네
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441171201" id="comment_1441171198" style="margin-left:6%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 08:25
              </span>
             </div>
             <div>
              <div class="comment_1441171198_20335069 xe_content">
               [ahref]
               
               이건 뭔 편견이여 ㅋㅋㅋㅋ
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441182398" id="comment_1441182395" style="margin-left:6%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 08:38
              </span>
             </div>
             <div>
              <div class="comment_1441182395_291997294 xe_content">
               [ahref]
               
               아랍인이랑 뭔상관???
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 1441182395, this);" title="추천">
                <em>
                 <i class="fa fa-thumbs-o-up color">
                 </i>
                 <span class="voted_count">
                  <li>[link]</li>[link]<li>[link]</li><li>[ahref]</li><li>[search]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                 </span>
                </em>
               </a>
               <a class="bd_login" href=";" onclick="return fm_vote_comment2(0, 1441182395, this);" title="비추천">
                <i class="fa fa-thumbs-o-down">
                </i>
                <span class="blamed_count">
                 <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li>[search][link]<li>[search]</li><li>[search]</li><li>[search]</li>[search]
                </span>
               </a>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441282688" id="comment_1441282685" style="margin-left:8%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 10:09<li>[link]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
              </span>
             </div>
             <div>
              <div class="comment_1441282685_762755526 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441182395);">
                유나이
               </a>
               아랍인들 대다수가 이슬람인데 이슬람놈들이 여자 어떻게 대하는지 아는데도 묻는거?
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441349889" id="comment_1441349886" style="margin-left:10%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 10:57
              </span>
             </div>
             <div>
              <div class="comment_1441349886_68759857 xe_content">
               [ahref]
               
               존나 편협한 시야네 ㅋㅋ
               <br>
                <li>[search]</li>[link]<li>[search]</li>[ahref]<li>[search]</li><li>[ahref]</li>[link][ahref]
               </br>
               해외에선 우리보고 아직도 남녀칠세부동석이며 여자들은 부엌에서 밥먹는다고 하냐 ㅋㅋㅋ
               <br/>
               그런나라가 있고 아닌나라가 있는거지
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               <a class="bd_login" href=";" onclick="return fm_vote_comment2(0, 1441349886, this);" title="비추천">
                <i class="fa fa-thumbs-o-down">
                </i>
                <span class="blamed_count">
                </span>
               </a>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441526794" id="comment_1441526791" style="margin-left:10%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 12:49
              </span>
             </div>
             <div>
              <div class="comment_1441526791_426095178 xe_content">
               [ahref]
               
               이슬람 대다수가 그런줄 아는가 설마?
               <br/>
               그런건 이란 등 강경한 나라나 그런거지
               <br>
                [link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][ahref][ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
               </br>
               서양 문명에 많이 노출된 터키나, 서양에 이민온 이슬람은 전혀 안그럼. 마치 우리나라가 유교 국가라고 '항국놈들은 남녀가 겸상 안해' 혹은 아직도 개고기 먹는 줄 아는 거랑 다를게 없음
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441714375" id="comment_1441714372" style="margin-left:12%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 14:33
              </span>
             </div>
             <div>
              <div class="comment_1441714372_39336177 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441526791);">
                고훈정
               </a>
               개고기는 아직 먹는데...?
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441007007" id="comment_1441007003">
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 03:34
              </span>
             </div>
             <div>
              <div class="comment_1441007003_1246489730 xe_content">
               신개념 자해공갈이네 시발
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 1441007003, this);" title="추천">
                <em>
                 <i class="fa fa-thumbs-o-up color">
                 </i>
                 <span class="voted_count">
                  <li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[ahref][search]<li>[ahref]</li><li>[link]</li><li>[link]</li><li>[search]</li>
                 </span>
                </em>
               </a>
               <a class="bd_login" href=";" onclick="return fm_vote_comment2(0, 1441007003, this);" title="비추천">
                <i class="fa fa-thumbs-o-down">
                </i>
                <span class="blamed_count">
                </span>
               </a>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441018466" id="comment_1441018463">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 03:49
              </span>
             </div>
             <div>
              <div class="comment_1441018463_1367454521 xe_content">
               왜저럴까
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441022371" id="comment_1441022366">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 03:54[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[search]</li>[ahref]<li>[link]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[ahref][ahref]<li>[ahref]</li>[ahref][ahref]<li>[link]</li>
              </span>
             </div>
             <div>
              <div class="comment_1441022366_947347961 xe_content">
               왜 자비를 들여서 복원해야 할까.. 그 돈을 벌기 위해 들인 시간과 노동의 의미는 무엇이며 그 보다 더 큰 상처는 누가 보상해줄까.
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[link]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][ahref]<li>[link]</li>[ahref]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441028657" id="comment_1441028653" style="margin-left:2%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 04:04
              </span>
             </div>
             <div>
              <div class="comment_1441028653_2706790 xe_content">
               [ahref]
               
               저거도 뭐 이제 기소하면 다 받을수 있지않을까
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[link]</li>[link][search][search][ahref]<li>[ahref]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[link]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441140992" id="comment_1441140989" style="margin-left:4%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 07:45
              </span>
             </div>
             <div>
              <div class="comment_1441140989_1123669593 xe_content">
               [link]
               
               못잡으면.. 흑흑 ㅠㅠ
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[link]</li><li>[search]</li>[link]<li>[ahref]</li><li>[link]</li><li>[link]</li>[search]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441169118" id="comment_1441169115" style="margin-left:4%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 08:22
              </span>
             </div>
             <div>
              <div class="comment_1441169115_594191817 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441028653);">
                TuttimeloE
               </a>
               돈없다고 배째라면 못받지
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 1441169115, this);" title="추천">
                <em>
                 <i class="fa fa-thumbs-o-up color">
                 </i>
                 <span class="voted_count">
                  <li>[ahref]</li>[search][ahref]<li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]
                 </span>
                </em>
               </a>
               <a class="bd_login" href=";" onclick="return fm_vote_comment2(0, 1441169115, this);" title="비추천">
                <i class="fa fa-thumbs-o-down">
                </i>
                <span class="blamed_count">
                 <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[ahref]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li>
                </span>
               </a>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441100363" id="comment_1441100360">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 06:28<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][ahref][search]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[link]</li>[search][ahref][link][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][link][link][search][link]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]
              </span>
             </div>
             <div>
              <div class="comment_1441100360_180839870 xe_content">
               여자의 눈물이 증거입니다
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441104307" id="comment_1441104303">
             <div class="meta">
              <a class="member_20496659" href="a" onclick="return false">
               윤화평
              </a>
              <span class="date">
               2018.12.11 06:37[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
              </span>
             </div>
             <div>
              <div class="comment_1441104303_20496659 xe_content">
               미친년ㅋㅋㅋㅋ
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment_best comment-1" id="comment_1441106448">
             <div class="meta">
              <span class="icon-hit">
               <i class="fa fa-star">
               </i>
               BEST
              </span>
              [link]
              
              <span class="date">
               2018.12.11 06:42[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </span>
             </div>
             <div>
              <div class="comment_1441106448_8926732 xe_content">
               전세계적으로 하는짓이 똑같구먼.....
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [search]<li>[search]</li><li>[ahref]</li><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441120112" id="comment_1441120109">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 07:10
              </span>
             </div>
             <div>
              <div class="comment_1441120109_1429006289 xe_content">
               어메이징 에이미
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441120182" id="comment_1441120179">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 07:11
              </span>
             </div>
             <div>
              <div class="comment_1441120179_1245752140 xe_content">
               착
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441121153" id="comment_1441121149">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 07:12
              </span>
             </div>
             <div>
              <div class="comment_1441121149_15180984 xe_content">
               나를 찾아줘..
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment_best comment-1" id="comment_1441122352">
             <div class="meta">
              <span class="icon-hit">
               [link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link][search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][link]<li>[ahref]</li><li>[link]</li>[ahref][ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </span>
              <a class="member_1170680676" href="a" onclick="return false">
               bkldnlbk
              </a>
              <span class="date">
               2018.12.11 07:14[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li>[link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
              </span>
             </div>
             <div>
              <div class="comment_1441122352_1170680676 xe_content">
               저런일 줜나많음 나도 거짓진술로 감옥서 이틀지내다 풀려남 줮같음
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441128661" id="comment_1441128658" style="margin-left:2%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              <a class="member_47827062" href="a" onclick="return false">
               RHCE
              </a>
              <span class="date">
               2018.12.11 07:25<li>[link]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </span>
             </div>
             <div>
              <div class="comment_1441128658_47827062 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441122352);">
                bkldnlbk
               </a>
               시발 진짜 일상을 녹음하고 다녀야겠구만
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 1441128658, this);" title="추천">
                <em>
                 <i class="fa fa-thumbs-o-up color">
                 </i>
                 <span class="voted_count">
                 </span>
                </em>
               </a>
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441487012" id="comment_1441487008" style="margin-left:4%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 12:25
              </span>
             </div>
             <div>
              <div class="comment_1441487008_1170680676 xe_content">
               [ahref]
               
               녹화를 해야돼
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               <a class="bd_login" href=";" onclick="return fm_vote_comment2(0, 1441487008, this);" title="비추천">
                <i class="fa fa-thumbs-o-down">
                </i>
                <span class="blamed_count">
                 <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search][link][search]
                </span>
               </a>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441856552" id="comment_1441856545" style="margin-left:2%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 15:50
              </span>
             </div>
             <div>
              <div class="comment_1441856545_1029730392 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441122352);">
                bkldnlbk
               </a>
               사회경험했구만 건실하게 살게
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg0 comment-1441968996" id="comment_1441968991" style="margin-left:4%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 16:47
              </span>
             </div>
             <div>
              <div class="comment_1441968991_1170680676 xe_content">
               [link]
               
               진짜 거짓진술 당해서 감옥 가면 기분더러울 새도 없음. 가서 내가 왜 여기있지 생각하고 도움받을 수 있는 것도 없도 하지도 않은거라 증거도 없는데 왜 나를 여기다 가둬놨지하는 온갖생각들어서 첫날에 잠 제대로 못잠
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[ahref]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1442192838" id="comment_1442192835" style="margin-left:6%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 18:46
              </span>
             </div>
             <div>
              <div class="comment_1442192835_1029730392 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441968991);">
                bkldnlbk
               </a>
               그래 당신의 잘못이야
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441123658" id="comment_1441123655">
             <div class="meta">
              <a class="member_1014342557" href="a" onclick="return false">
               위닝피파에펨피온
              </a>
              <span class="date">
               2018.12.11 07:17[link][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search][search][search]<li>[link]</li>[search]<li>[search]</li><li>[link]</li><li>[link]</li>[search]
              </span>
             </div>
             <div>
              <div class="comment_1441123655_1014342557 xe_content">
               가정폭력 당했다고 남편 나쁜놈으로 몰아가서 이혼후 위자료 엄청 뜯겠다는 계획인가
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441128383" id="comment_1441128379">
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 07:25
              </span>
             </div>
             <div>
              <div class="comment_1441128379_1089624623 xe_content">
               여자란 대체..
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441130002" id="comment_1441129999">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 07:27
              </span>
             </div>
             <div>
              <div class="comment_1441129999_1129682932 xe_content">
               미쳤네 ㅋㅋㅋㅋㅋ
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[search]</li>[search]<li>[ahref]</li><li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441138665" id="comment_1441138662">
             <div class="meta">
              <a class="member_824346142" href="a" onclick="return false">
               지나가던햇반
              </a>
              <span class="date">
               2018.12.11 07:41
              </span>
             </div>
             <div>
              <div class="comment_1441138662_824346142 xe_content">
               어느나라든 여자가저러는일이많은거냐..왜그럴까
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 1441138662, this);" title="추천">
                <em>
                 <i class="fa fa-thumbs-o-up color">
                 </i>
                 <span class="voted_count">
                 </span>
                </em>
               </a>
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441162615" id="comment_1441162612">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 08:14
              </span>
             </div>
             <div>
              <div class="comment_1441162612_772135818 xe_content">
               저런거 보면서 드는생각은 옛날에는 저런걸로 억울하게 죽은사람이 얼마나 많을까...
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441162740" id="comment_1441162735">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 08:15<li>[ahref]</li>[search][search][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][search]
              </span>
             </div>
             <div>
              <div class="comment_1441162735_353105512 xe_content">
               이래서 미친년을 만나면 삼대가 꼬여버림
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [ahref]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441164710" id="comment_1441164707">
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 08:17
              </span>
             </div>
             <div>
              <div class="comment_1441164707_1086495561 xe_content">
               cctv 복원에 2천만원 들였다는게 먼말이여??
               <br/>
               복원이란 말은 누가 손상시켰고 그걸 또 사람 써서 복원시켰다는건가??
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear re bg1 comment-1441168776" id="comment_1441168772" style="margin-left:2%">
             <i class="fa fa-share fa-flip-vertical re">
             </i>
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 08:22
              </span>
             </div>
             <div>
              <div class="comment_1441168772_5510191 xe_content">
               <a class="findParent" href=";" onclick="return findComment(1441164707);">
                냥농
               </a>
               기간지나면 삭제하니깐
               <br/>
               그거 복구했다는거아닐까?
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[search]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441195312" id="comment_1441195309">
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 08:52
              </span>
             </div>
             <div>
              <div class="comment_1441195309_6734757 xe_content">
               중국??
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 1441195309, this);" title="추천">
                <em>
                 <i class="fa fa-thumbs-o-up color">
                 </i>
                 <span class="voted_count">
                  <li>[link]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
                 </span>
                </em>
               </a>
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441249855" id="comment_1441249852">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 09:42<li>[search]</li><li>[link]</li>[ahref][ahref][search]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </span>
             </div>
             <div>
              <div class="comment_1441249852_1176627372 xe_content">
               역시
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[link]<li>[link]</li><li>[ahref]</li>[link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[ahref]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441273499" id="comment_1441273496">
             <div class="meta">
              <a class="member_854383280" href="a" onclick="return false">
               영어로말하는사람
              </a>
              <span class="date">
               2018.12.11 10:01
              </span>
             </div>
             <div>
              <div class="comment_1441273496_854383280 xe_content">
               CCTV는 기본 삼개월 보관인데?
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [ahref]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441390575" id="comment_1441390572">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 11:23
              </span>
             </div>
             <div>
              <div class="comment_1441390572_1051313382 xe_content">
               남친도 아니고 결혼까지해놓고 구라로 고소하는이유가 뭐지
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<li>[ahref]</li><li>[link]</li>[search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[link]</li><li>[link]</li>[ahref]<li>[link]</li>[search]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[search]
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441394435" id="comment_1441394431">
             <div class="meta">
              [ahref]
              
              <span class="date">
               2018.12.11 11:25<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><li>[link]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>
              </span>
             </div>
             <div>
              <div class="comment_1441394431_455007502 xe_content">
               https://www1.president.go.kr/petitions/443174?navigation=best-petitions
               <br/>
               <br>
                [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[search]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]
               </br>
               이수역 청원이다. 아직 16만이야. 이게 말이 되냐? 이렇게 억울한데 16만이야?
               <br/>
               근데 진짜 말도 안되네 어떻게 16만이지? 누가 여기 해킹좀 해주면 안되냐 이거 조작 아닌가 의심될지경이다 진짜.
               <br/>
               이제 3일밖에 안남았다.. 껄껄 재밌는 소리니 뭐니 그새1끼가 뭐라고하든
               <br/>
               우리 한번 지1랄한번 해보자고 응? 여성부 1조원 받은거 봤지? 요즘 여성부 힘 쎄지는거 보이지?
               <br>
                [link]<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
               </br>
               가만히 있을거야 정말? 억울하지도 않아? 우리가 혜택받은게 뭔데
               <br>
                [search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
               </br>
               우리 전세대 여성분들이 희생하신걸 왜 우리가 갚아야해? 우리는 왜 희생만 해야해?
               <br>
                [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[ahref]</li><li>[ahref]</li>
               </br>
               씨1발 진짜 한번 해보자. 이런거 사소한거 하나하나 다 들고 일어나 보자고 제발
               <br>
                [search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
               </br>
               꼴1페1미 그새1끼한테 보여주자고 한번!!!
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               [link]
               
               [link]
               
              </span>
             </div>
            </li>
            <li class="fdb_itm clear comment-1441489040" id="comment_1441489034">
             <div class="meta">
              [link]
              
              <span class="date">
               2018.12.11 12:26
              </span>
             </div>
             <div>
              <div class="comment_1441489034_995802806 xe_content">
               ㄷㄷㄷㄷㄷ
              </div>
             </div>
             <div class="fdb_nav img_tx ">
              <span class="vote ui_font">
               <a class="bd_login" href=";" onclick="return fm_vote_comment(0, 1441489034, this);" title="추천">
                <em>
                 <i class="fa fa-thumbs-o-up color">
                 </i>
                 <span class="voted_count">
                 </span>
                </em>
               </a>
               [link]
               
              </span>
             </div>
            </li>
           </ul>
           <div class="socket_button">
            [link]
            
           </div>
          </div>
          <div class="cmt_editor" style="margin-top:15px; ">
           <label class="cmt_editor_tl fl" for="editor_1440993036">
            <strong style="padding-left:5px;">
             댓글 쓰기
            </strong>
           </label>
           <div class="bd_wrt clear">
            <div class="simple_wrt">
             <div class="text">
              [ahref]
              
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <hr class="rd_end clear" id="rd_end_1440993036"/>
       <div style="text-align:center">
        <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="6796082386" style="display:inline-block;width:728px;height:90px">
        </ins>
       </div>
       <div class="bd_lst_wrp">
        <div class="tl_srch clear">
         <div class="bd_tl">
          <h1 class="ngeb clear">
           <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
          </h1>
          <div class="clear">
          </div>
         </div>
        </div>
        <div class="cnb_n_list">
         <div>
          <div class="bd_cnb clear css3pie pop_more0 category0 pop_on0 best1">
           <a class="home" href="/best">
            <i class="home ico_16px">
             Category
            </i>
           </a>
           <div class="dummy_ie fr">
           </div>
           <ul class="bubble bg_f_f9 css3pie" style="overflow:visible;">
            <li class="cnbMore">
             [link]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="lst_btn fr ">
          <ul>
           <li class="classic">
            <a class="bubble" href="/index.php?mid=best&amp;listStyle=list&amp;page=42" title="텍스트 형식">
             <b>
              텍스트 형식
             </b>
            </a>
           </li>
           <li class="zine on">
            [link]
            
           </li>
          </ul>
         </div>
        </div>
        <table class="bd_lst bd_tb_lst bd_tb common_notice">
        </table>
        <div class="fm_best_widget _bd_pc">
         <ul>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [ahref]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [ahref]
              
              -
              <a href="/index.php?mid=football_news&amp;category=49214627">
               번역기사
              </a>
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 산첵스초코
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [link]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              <a href="l">
               야구
              </a>
              -
              [ahref]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 이문동대머리<li>[search]</li>[link]<li>[search]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [link]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              <li>[link]</li>[search][link][link][ahref]<li>[link]</li>[ahref][ahref][search]<li>[ahref]</li><li>[link]</li>[link]<li>[search]</li><li>[ahref]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 황의조<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link][ahref]<li>[link]</li>
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            <a href="/best/1439352445">
            </a>
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [link]
              
              -
              [link]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              [search][link]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[ahref][link]<li>[search]</li><li>[ahref]</li>
             </span>
             <span class="author">
              / 무식함<li>[search]</li>[link]<li>[search]</li>[link][search]<li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [link]
            
            [link]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [link]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 슬기가사는세상
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [ahref]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              <li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[search]</li><li>[search]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 588974<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[search]</li>[ahref][ahref]<li>[link]</li>[search][ahref]<li>[link]</li><li>[ahref]</li><li>[link]</li>[search]
             </span>
            </div>
           </div>
          </li>
          <li class="li on ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [link]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              <a href="r">
               유머
              </a>
              -
              [ahref]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 겸손찡
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [ahref]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              <a href="s">
               축구소식
              </a>
              -
              <a href="/index.php?mid=football_news&amp;category=49214618">
               국내기사
              </a>
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 하이버리.[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [link]
            
            [ahref]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [ahref]
              
              -
              [link]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][link]<li>[search]</li><li>[ahref]</li>[link][ahref]<li>[ahref]</li>[link][ahref]<li>[search]</li><li>[ahref]</li>[search][link]<li>[search]</li><li>[search]</li><li>[ahref]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[ahref]</li>[link]<li>[link]</li><li>[link]</li>[search][ahref][search]
             </span>
             <span class="author">
              / H.Wilson
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            <a class="pc_voted_count pc_voted_count_plus pc_voted_count_short" href="/best/1440840930">
             <span class="label">
              추천 <li>[ahref]</li>[search]<li>[link]</li><li>[link]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search]<li>[ahref]</li>
             </span>
             <span class="count">
              232
             </span>
            </a>
            [ahref]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [ahref]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 상승백골<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li><li>[search]</li><li>[link]</li>[link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[ahref]</li>
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [ahref]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              <li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][link]<li>[search]</li>[search][ahref]<li>[link]</li><li>[search]</li>
             </span>
            </div>
            <div>
             <span class="regdate">
              [link][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
             <span class="author">
              / 뺑오쇼콜라
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            <a href="/best/1440978364">
            </a>
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [ahref]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              <li>[ahref]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
             </span>
             <span class="author">
              / 드라이마티니.[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[ahref]</li>[search]<li>[search]</li><li>[link]</li>
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [link]
            
            [link]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [ahref]<li>[link]</li><li>[ahref]</li>[ahref][ahref][link][search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search]<li>[ahref]</li>[ahref]<li>[search]</li><li>[search]</li><li>[ahref]</li>[link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li>[ahref]<li>[link]</li>[search]<li>[link]</li>
             </span>
            </div>
            <div>
             <span class="regdate">
              [ahref][ahref][link]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]<li>[ahref]</li>
             </span>
             <span class="author">
              / 무한도전전문가
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [link]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [link]<li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 알등이콥등이[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            <a href="/best/1439584981">
             <span class="thumb" style="width:70px;height:50px;">
             </span>
            </a>
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[ahref]</li><li>[ahref]</li>[link]<li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><li>[search]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link][search][search]<li>[ahref]</li><li>[search]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link]
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 히보<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][link]<li>[link]</li>[ahref]<li>[search]</li>[link]
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [link]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [ahref]
              
              -
              [ahref]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 쐬주<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[link][search][search]
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [ahref]
            
            [ahref]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [ahref]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              <li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li><li>[ahref]</li>
             </span>
             <span class="author">
              / ASO
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            <a class="pc_voted_count pc_voted_count_plus pc_voted_count_short" href="/best/1440978209">
             <span class="label">
              추천
             </span>
             <span class="count">
              323
             </span>
            </a>
            [ahref]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              <li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[link]</li><li>[link]</li>
             </span>
            </div>
            <div>
             <span class="regdate">
              <li>[search]</li><li>[ahref]</li>[ahref]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[link]</li>[search][search]<li>[search]</li><li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
             </span>
             <span class="author">
              / 애덤스미스
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [link]
            
            <a href="/best/1440473716">
            </a>
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [link]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              2018.12.11
             </span>
             <span class="author">
              / 김세정채연<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[ahref]</li>[search]
             </span>
            </div>
           </div>
          </li>
          <li class="li ">
           <div class="li" style="padding-left:120px;position:relative;">
            [link]
            
            [link]
            
            <h3 class="title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
            <div>
             <span class="category">
              [ahref]
              
             </span>
            </div>
            <div>
             <span class="regdate">
              <li>[search]</li><li>[search]</li>[link]<li>[search]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[search]</li>
             </span>
             <span class="author">
              / 영차고지랄이고
             </span>
            </div>
           </div>
          </li>
         </ul>
        </div>
        <div class="btm_mn clear">
         <div class="fl">
          <form action="/" class="bd_srch_btm on" method="get" no-error-return-url="true" onsubmit="return procFilterSearch(this, search)">
           <span class="btn_img itx_wrp">
            [link][ahref][ahref][ahref][search]<li>[search]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
           <span class="btn_img select">
            <select name="search_target">
             <option value="title">
              제목
             </option>
             <option value="content">
              내용
             </option>
             <option value="title_content">
              제목+내용
             </option>
             <option value="comment">
              댓글
             </option>
             <option value="nick_name">
              닉네임
             </option>
            </select>
           </span>
          </form>
         </div>
        </div>
        <form action="/" class="bd_pg clear" method="get">
         <fieldset>
          <legend class="blind">
           게시판 목록 페이징
          </legend>
          <a class="direction" href="/index.php?mid=best&amp;page=32">
           <i class="fa fa-angle-left">
           </i>
           이전
          </a>
          [ahref]
          
          <span class="bubble">
           [link]
           
          </span>
          <a href="/index.php?mid=best&amp;page=37">
           37
          </a>
          [link]
          
          [ahref]
          
          [ahref]
          
          [link]
          
          <strong class="this">
           42
          </strong>
          [ahref]
          
          <a href="/index.php?mid=best&amp;page=44">
           44
          </a>
          [link]
          
          [link]
          
          <span class="bubble">
           [ahref][search]<li>[ahref]</li>[ahref][ahref][search]
          </span>
          <a class="direction" href="/index.php?mid=best&amp;page=52">
           다음
           <i class="fa fa-angle-right">
           </i>
          </a>
          <div class="bd_go_page tg_cnt2 wrp">
           <button class="tg_blur2" type="button">
           </button>
           / 11501
           <button class="bd_btn" type="submit">
            페이지
           </button>
           <span class="edge">
            [link][link][search][link][link]<li>[ahref]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
           <i class="ie8_only bl">
           </i>
           <i class="ie8_only br">
           </i>
           <button class="tg_blur2" type="button">
           </button>
          </div>
         </fieldset>
        </form>
        <div style="padding-top:15px;">
         <div style="text-align:center">
          <ins class="adsbygoogle" data-ad-client="ca-pub-2430764006993310" data-ad-slot="5045910021" style="display:inline-block;width:728px;height:90px">
          </ins>
         </div>
        </div>
       </div>
      </div>
      <hr/>
     </div>
    </div>
   </div>
  </div>
  <div id="footer">
   <div class="Wrapper">
    <div class="sta mpReset">
     <ul class="ul">
     </ul>
     <hr/>
    </div>
    <div class="copyright">
     <address>
      <span style="width:100%">
       <li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
      </span>
     </address>
     <div id="about-us">
     </div>
    </div>
   </div>
  </div>
 </div>
 <b style="color:black;background-color:#a0ffff">
  jnice12-ipp11-we-ze-0397
 </b>
</body>
<div id="waitingforserverresponse">
</div>
