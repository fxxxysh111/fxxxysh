<!DOCTYPE html>
<html class="no-js" lang="en">
 <head>
  <meta charset="utf-8"/>
  <meta content="IE=edge" http-equiv="X-UA-Compatible"/>
  <meta content="width=device-width, user-scalable=no" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-P2BPCT" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description">
   <meta content="Discover the Boss boutique at Kildare Village" property="og:title">
    <meta content="BOSS offers sophisticated, modern collections focused on quality and design to create an impeccable look – be it business, casual or athleisure.

BOSS Menswear has reached icon status for its tailoring, but offers more than the perfect suit. The collections also feature casual and athleisure pieces, presenting a complete wardrobe for fast-paced modern lifestyles. Tailoring and sportswear are brought together in a look that is ready for whatever the day may hold." property="og:description">
     <meta content="https://vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/2510/kv_sop_12_2000x370.jpg" property="og:image"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
     <meta content="website" property="og:type"/>
     <meta content="summary_large_image" name="twitter:card"/>
     <meta content="@kildarevillage" name="twitter:site"/>
     <meta content="@kildarevillage" name="twitter:creator"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:title"/>
     <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="twitter:description"/>
     <meta content="https://vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/2510/kv_sop_12_2000x370.jpg" name="twitter:image"/>
     <meta content="https://vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/2510/kv_sop_12_2000x370.jpg" itemprop="image">
      <meta content="Discover the Boss boutique at Kildare Village" itemprop="name">
       <meta content="BOSS offers sophisticated, modern collections focused on quality and design to create an impeccable look – be it business, casual or athleisure.

BOSS Menswear has reached icon status for its tailoring, but offers more than the perfect suit. The collections also feature casual and athleisure pieces, presenting a complete wardrobe for fast-paced modern lifestyles. Tailoring and sportswear are brought together in a look that is ready for whatever the day may hold." itemprop="description">
        <meta content="app-id=1320810784" name="apple-itunes-app"/>
       </meta>
      </meta>
     </meta>
    </meta>
   </meta>
  </meta>
 </head>
 <body class="microsite" data-facebook-app-id="211905862678467 " data-site-title="Kildare Village">
  <noscript>
   <iframe height="0" src="//www.googletagmanager.com/ns.html?id=GTM-P2BPCT" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <a class="skip" href="t" tabindex="1">
   Skip to content
  </a>
  <div class="site-wrapper">
   <div class="site-canvas" style="">
    <header class="main-header sticky-nav noPrint">
     <div class="nav-container">
      <div class="logo-container">
       [link]
       
      </div>
      <div class="off-canvas-wrapper">
       <div class="header-lrs">
        <div class="user-nav">
         <div class="login-register off-canvas-block">
          <ul>
           <li class="register-menu">
            [link]
            
           </li>
           <li class="login-menu">
            <a href="/en/sign-in/">
             Sign in
            </a>
            <div class="dropdown" id="login">
             <div class="dropdown-container">
              [ahref]
              
              <div class="dropdown-menu dropdown-select">
               <form action="/en/shopping/brands/boss/" class="super-labels" enctype="multipart/form-data" method="post">
                <div class="input-wrapper">
                </div>
                <div class="input-wrapper">
                </div>
                [link]
                
               </form>
               [ahref]
               
              </div>
             </div>
            </div>
           </li>
          </ul>
         </div>
        </div>
        <div class="search off-canvas-block">
         <button class="search-button webfont-search">
         </button>
         <form action="/en/search/" class="search-form">
         </form>
        </div>
       </div>
       <div class="nav-main noPrint">
        <ul>
         <li class="nav-navItem off-canvas-block home-link">
          <div class="nav-main-links">
           <div class="nav-parent nav-navLink">
            [link]
            
           </div>
          </div>
         </li>
         <li class="nav-navItem off-canvas-block nav-pin-to-top">
          <div class="nav-main-links">
           <div class="nav-parent nav-navLink">
            Shopping
            <span class="nav-arrow-active">
            </span>
           </div>
           <span class="nav-subnav-trigger webfont-cheveron">
            [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><li>[search]</li><li>[link]</li>
           </span>
          </div>
          <div class="nav-subnav">
           <div class="nav-subnav-tray">
            <div class="nav-subnav-tray-wrapper">
             <div class="tray-title hidden-medium-down">
              Shopping
             </div>
             <div class="tray-section-wrapper">
              <div class="tray-section tray-section-sep">
               <ul>
                <li class="nav-navItem">
                 [link]
                 
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/shopping/products/" target="_self">
                  Products
                 </a>
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/shopping/shopping-services/" target="_self">
                  Shopping Services
                 </a>
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/your-visit/corporate-services/" target="_self">
                  Corporate Services
                 </a>
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
               </ul>
              </div>
              <div class="tray-section tray-section-sep">
               <ul>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/shopping/gift-card/" target="_self">
                  Gift Card
                 </a>
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/shopping/products/category/shoes" target="_self">
                  Shoes
                 </a>
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
               </ul>
              </div>
              <div class="tray-section hidden-medium-down">
               <h2>
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
               <div class="ellipsis-new">
                <div class="featured-content-description">
                 <p>
                  Discover new and exciting brands in the Village including Roberto Cavalli, Dune London, Michael Kors and Magee 1866.<li>[search]</li>[search][ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
                 </p>
                </div>
               </div>
               [link]
               
              </div>
              <div class="tray-section hidden-medium-down">
              </div>
             </div>
            </div>
           </div>
          </div>
         </li>
         <li class="nav-navItem off-canvas-block nav-pin-to-top">
          <div class="nav-main-links">
           <div class="nav-parent nav-navLink">
            Christmas
            <span class="nav-arrow-active">
             [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link][ahref]<li>[link]</li>
            </span>
           </div>
           <span class="nav-subnav-trigger webfont-cheveron">
            [link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[link]</li>[link][search][link]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
          </div>
          <div class="nav-subnav">
           <div class="nav-subnav-tray">
            <div class="nav-subnav-tray-wrapper">
             <div class="tray-title hidden-medium-down">
              Christmas
             </div>
             <div class="tray-section-wrapper">
              <div class="tray-section tray-section-sep">
               <ul>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/christmas/" target="_self">
                  All things Christmas
                 </a>
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
               </ul>
              </div>
              <div class="tray-section hidden-medium-down">
               <h2>
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
               <div class="ellipsis-new">
                <div class="featured-content-description">
                 <p>
                  The twinkling lights, the scent of hot chocolate in the air and the added festive treat of finding all your favourite brands in one place![ahref]<li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link]
                 </p>
                </div>
               </div>
               <a class="nav-featured-link arrow-anim-wrapper" href="/en/christmas/">
                Discover More
                <span class="arrow-anim">
                </span>
               </a>
              </div>
              <div class="tray-section hidden-medium-down">
              </div>
             </div>
            </div>
           </div>
          </div>
         </li>
         <li class="nav-navItem off-canvas-block nav-pin-to-top">
          <div class="nav-main-links">
           <div class="nav-parent nav-navLink">
            Food &amp; Drink
            <span class="nav-arrow-active">
            </span>
           </div>
           <span class="nav-subnav-trigger webfont-cheveron">
           </span>
          </div>
          <div class="nav-subnav">
           <div class="nav-subnav-tray">
            <div class="nav-subnav-tray-wrapper">
             <div class="tray-title hidden-medium-down">
              Food &amp; Drink
             </div>
             <div class="tray-section-wrapper">
              <div class="tray-section tray-section-sep">
               <ul>
                <li class="nav-navItem">
                 [link]
                 
                </li>
               </ul>
              </div>
              <div class="tray-section hidden-medium-down">
               <h2>
                <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
               </h2>
               <div class="ellipsis-new">
                <div class="featured-content-description">
                 <p>
                  <span>
                   Your gift, their choice from the world’s finest designer brands and up to 60% off the RRP[ahref][ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link][link]<li>[ahref]</li>[link][ahref]<li>[search]</li><li>[ahref]</li><li>[link]</li>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]
                  </span>
                 </p>
                </div>
               </div>
               <a class="nav-featured-link arrow-anim-wrapper" href="/en/shopping/gift-card/">
                Buy Now
                <span class="arrow-anim">
                </span>
               </a>
              </div>
              <div class="tray-section hidden-medium-down">
              </div>
             </div>
            </div>
           </div>
          </div>
         </li>
         <li class="nav-navItem off-canvas-block nav-pin-to-top">
          <div class="nav-main-links">
           <div class="nav-parent nav-navLink">
            Plan Your Visit
            <span class="nav-arrow-active">
             <li>[ahref]</li><li>[search]</li>[search][link]<li>[ahref]</li>[ahref]<li>[link]</li><li>[search]</li>[search][ahref]
            </span>
           </div>
           <span class="nav-subnav-trigger webfont-cheveron">
            [search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][link]
           </span>
          </div>
          <div class="nav-subnav">
           <div class="nav-subnav-tray">
            <div class="nav-subnav-tray-wrapper">
             <div class="tray-title hidden-medium-down">
              Plan Your Visit
             </div>
             <div class="tray-section-wrapper">
              <div class="tray-section tray-section-sep">
               <ul>
                <li class="nav-navItem">
                 [link]
                 
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/your-visit/tourist-information/" target="_self">
                  Tourist Information
                 </a>
                </li>
               </ul>
              </div>
              <div class="tray-section tray-section-sep">
               <ul>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/basic-content-container/valet-service/" target="_self">
                  Valet Service
                 </a>
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/your-visit/local-information/local-attractions/" target="_self">
                  Local Attractions
                 </a>
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
               </ul>
              </div>
              <div class="tray-section hidden-medium-down">
               <h2>
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
               <div class="ellipsis-new">
                <div class="featured-content-description">
                 <p>
                  Browse the interactive Village Map to find your favourite boutiques and restaurants.[search][search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                 </p>
                </div>
               </div>
               [ahref]
               
              </div>
              <div class="tray-section hidden-medium-down">
              </div>
             </div>
            </div>
           </div>
          </div>
         </li>
         <li class="nav-navItem off-canvas-block nav-pin-to-top">
          <div class="nav-main-links">
           <div class="nav-parent nav-navLink">
            Rewards
            <span class="nav-arrow-active">
             [ahref]<li>[link]</li>[ahref][link]<li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[ahref]</li><li>[search]</li>
            </span>
           </div>
           <span class="nav-subnav-trigger webfont-cheveron">
            <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li><li>[link]</li>
           </span>
          </div>
          <div class="nav-subnav">
           <div class="nav-subnav-tray">
            <div class="nav-subnav-tray-wrapper">
             <div class="tray-title hidden-medium-down">
              Rewards
             </div>
             <div class="tray-section-wrapper">
              <div class="tray-section tray-section-sep">
               <ul>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink " href="/en/register/" target="_self">
                  Join Privilege
                 </a>
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink webfont-lock" href="/en/sign-in/" target="_self">
                  Sign In to Privilege
                 </a>
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 <a class="nav-navLink deeplink webfont-lock" href="/en/member/your-treats/" target="_self">
                  Your Treats
                 </a>
                </li>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
               </ul>
              </div>
              <div class="tray-section hidden-medium-down">
               <h2>
                [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
               </h2>
               <div class="ellipsis-new">
                <div class="featured-content-description">
                 <p>
                  <span>
                   Sign up to the Privilege rewards programme and enjoy enhanced shopping experiences.<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li>[search][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
                  </span>
                 </p>
                </div>
               </div>
               [ahref]
               
              </div>
              <div class="tray-section hidden-medium-down">
              </div>
             </div>
            </div>
           </div>
          </div>
         </li>
         <li class="nav-navItem off-canvas-block nav-pin-to-top">
          <div class="nav-main-links">
           <div class="nav-parent nav-navLink">
            Careers
            <span class="nav-arrow-active">
            </span>
           </div>
           <span class="nav-subnav-trigger webfont-cheveron">
           </span>
          </div>
          <div class="nav-subnav">
           <div class="nav-subnav-tray">
            <div class="nav-subnav-tray-wrapper">
             <div class="tray-title hidden-medium-down">
              Careers
             </div>
             <div class="tray-section-wrapper">
              <div class="tray-section tray-section-sep">
               <ul>
                <li class="nav-navItem">
                 [ahref]
                 
                </li>
                <li class="nav-navItem">
                 [link]
                 
                </li>
               </ul>
              </div>
              <div class="tray-section hidden-medium-down">
               <h2>
                <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
               </h2>
               <div class="ellipsis-new">
                <div class="featured-content-description">
                 <p>
                  Looking for a new challenge in a luxury retail environment? [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link][link][search][search][ahref]
                 </p>
                </div>
               </div>
               [ahref]
               
              </div>
              <div class="tray-section hidden-medium-down">
              </div>
             </div>
            </div>
           </div>
          </div>
         </li>
        </ul>
       </div>
       <div class="nav-weather off-canvas-block">
        <div class="weather-thumb">
         <p class="weather-thumb-temp">
          10
          <sup>
           °C
          </sup>
         </p>
        </div>
        <div class="weather-main">
         <div class="weather-main-inner">
          <div class="weather-large">
           <p class="weather-large-title">
            Forecast<li>[search]</li><li>[search]</li>[link]<li>[search]</li>[ahref]<li>[search]</li><li>[link]</li>[link]<li>[link]</li>[ahref]<li>[search]</li><li>[search]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </p>
           <p class="weather-large-temp">
            <li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][ahref]<li>[ahref]</li><li>[search]</li><li>[ahref]</li>[search]<li>[link]</li>
           </p>
           <p class="weather-large-highLow">
            [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search][ahref]<li>[link]</li><li>[link]</li>[link]
           </p>
          </div>
          <div class="weather-extended">
           <div class="weather-extended-col">
            <p class="weather-extended-day">
             Wed
            </p>
            <p class="weather-extended-highLow">
             <span class="weather-extended-high">
              10<li>[search]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[search]</li>
             </span>
             <span class="weather-extended-low">
              8
             </span>
            </p>
           </div>
           <div class="weather-extended-col">
            <p class="weather-extended-day">
             Thu
            </p>
            <p class="weather-extended-highLow">
             <span class="weather-extended-high">
              7
             </span>
             <span class="weather-extended-low">
              5<li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search][ahref]
             </span>
            </p>
           </div>
           <div class="weather-extended-col">
            <p class="weather-extended-day">
             Fri[search]<li>[link]</li><li>[search]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li><li>[link]</li>
            </p>
            <p class="weather-extended-highLow">
             <li>[search]</li><li>[search]</li>[link]<li>[search]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<li>[search]</li>
            </p>
           </div>
           <div class="weather-extended-col">
            <p class="weather-extended-day">
             Sat<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>
            </p>
            <p class="weather-extended-highLow">
             <span class="weather-extended-high">
              12<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
             </span>
             <span class="weather-extended-low">
              6<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search]<li>[link]</li>[link][search][ahref][search]<li>[link]</li>[ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
             </span>
            </p>
           </div>
           <div class="weather-extended-col">
            <p class="weather-extended-day">
             Sun
            </p>
            <p class="weather-extended-highLow">
             <span class="weather-extended-high">
              8
             </span>
             <span class="weather-extended-low">
              2
             </span>
            </p>
           </div>
          </div>
         </div>
        </div>
       </div>
       <nav class="sidenav noPrint">
        <ul>
         <li class="sidenav-navItem sidenav-navItem-sidenav-opening-times off-canvas-block">
          <div class="sidenav-navItem-trigger" title="Village Opening Hours">
           <span class="webfont-sidenav-opening-times">
           </span>
           <h5>
            Village Opening Hours
           </h5>
          </div>
          <div class="sidenav-item-content">
           <div class="sidenav-item-header">
            <h5>
             Village Opening Hours
            </h5>
           </div>
           <div class="sidenav-opening-hours-table opening-hours">
            <ul>
             <li>
              <div class="day">
               Monday
              </div>
              <div class="hours">
               <span>
                09.00<li>[link]</li>[link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
               </span>
               -
               <span>
                20.00
               </span>
              </div>
             </li>
             <li>
              <div class="day">
               Tuesday
              </div>
              <div class="hours">
               <span>
                09.00
               </span>
               -
               <span>
                20.00
               </span>
              </div>
             </li>
             <li>
              <div class="day">
               Wednesday
              </div>
              <div class="hours">
               <span>
                09.00[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>[link]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li>
               </span>
               -
               <span>
                20.00[link]<li>[search]</li>[ahref]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
               </span>
              </div>
             </li>
             <li>
              <div class="day">
               Thursday
              </div>
              <div class="hours">
               <span>
                09.00[ahref]<li>[search]</li>[link]<li>[search]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link]
               </span>
               -
               <span>
                21.00
               </span>
              </div>
             </li>
             <li>
              <div class="day">
               Friday
              </div>
              <div class="hours">
               <span>
                09.00[search]<li>[ahref]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][ahref]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
               </span>
               -
               <span>
                21.00
               </span>
              </div>
             </li>
             <li>
              <div class="day">
               Saturday
              </div>
              <div class="hours">
               <span>
                09.00<li>[link]</li><li>[ahref]</li><li>[link]</li><li>[link]</li>[ahref]<li>[search]</li>[link]<li>[ahref]</li>[ahref]<li>[link]</li>[search][link][search][search]
               </span>
               -
               <span>
                20.00
               </span>
              </div>
             </li>
             <li>
              <div class="day">
               Sunday
              </div>
              <div class="hours">
               <span>
                09.00<li>[ahref]</li><li>[search]</li>[ahref]<li>[ahref]</li>[ahref][search][search]
               </span>
               -
               <span>
                20.00[link]<li>[search]</li>[search]<li>[link]</li>[search]<li>[search]</li>[ahref]
               </span>
              </div>
             </li>
            </ul>
            <div class="tooltip-wrapper">
             <div class="tooltip-trigger webfont-tooltip">
             </div>
             <div class="tooltip-content tooltip-bottom-xsm">
              Please note that  Le Pain Quotidien, L'Officina, Starbucks, Alchemy Juice Co. and the Kildare Village Tourist Information open 30 minutes before boutique opening times.
             </div>
            </div>
            <div class="opening-time-extra">
             Please note that  Le Pain Quotidien, L'Officina, Starbucks, Alchemy Juice Co. and the Kildare Village Tourist Information open 30 minutes before boutique opening times.
            </div>
           </div>
          </div>
         </li>
         <li class="sidenav-navItem sidenav-navItem-sidenav-getting-here off-canvas-block">
          <div class="sidenav-navItem-trigger" title="Getting here">
           <span class="webfont-sidenav-getting-here">
            [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[ahref]</li>[ahref][link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][link][link]<li>[link]</li><li>[search]</li>[search]
           </span>
           <h5>
            Getting here
           </h5>
          </div>
          <div class="sidenav-item-content">
           <div class="sidenav-item-header">
            <h5>
             Getting here
            </h5>
           </div>
           <ul class="sidenav-subnav">
            <li class="sidenav-subnav-navItem">
             [ahref]
             
            </li>
            <li class="sidenav-subnav-navItem">
             [link]
             
            </li>
            <li class="sidenav-subnav-navItem">
             [ahref]
             
            </li>
            <li class="sidenav-subnav-navItem">
             <a href="/en/getting-here/#by-bus">
              By Bus
             </a>
            </li>
            <li class="sidenav-subnav-navItem">
             <a href="/en/getting-here/#from-northern-ireland">
              From Northern Ireland
             </a>
            </li>
           </ul>
          </div>
         </li>
         <li class="sidenav-navItem sidenav-navItem-sidenav-village-map off-canvas-block">
          <div class="sidenav-navItem-trigger" title="Village map">
           <span class="webfont-sidenav-village-map">
           </span>
           <h5>
            Village map
           </h5>
          </div>
          <div class="sidenav-item-content">
           <div class="sidenav-item-header">
            <h5>
             Village map
            </h5>
           </div>
           <ul class="sidenav-subnav">
            <li class="sidenav-subnav-navItem">
             [ahref]
             
            </li>
            <li class="sidenav-subnav-navItem">
             [link]
             
            </li>
           </ul>
          </div>
         </li>
         <li class="sidenav-navItem sidenav-navItem-sidenav-personalisation-rewards off-canvas-block">
          <div class="sidenav-navItem-trigger" title="Privilege &amp; Rewards">
           <span class="webfont-sidenav-personalisation-rewards">
           </span>
           <h5>
            Privilege &amp; Rewards
           </h5>
          </div>
          <div class="sidenav-item-content">
           <div class="sidenav-item-header">
            <h5>
             Privilege &amp; Rewards
            </h5>
           </div>
           <ul class="sidenav-subnav">
            <li class="sidenav-subnav-navItem">
             <a href="/en/register/">
              Register
             </a>
            </li>
            <li class="sidenav-subnav-navItem">
             <a href="/en/sign-in/">
              Sign In
             </a>
            </li>
            <li class="sidenav-subnav-navItem">
             [link]
             
            </li>
           </ul>
          </div>
         </li>
         <li class="sidenav-navItem sidenav-navItem-sidenav-food-drink off-canvas-block">
          <div class="sidenav-navItem-trigger" title="Food &amp; Drink">
           <span class="webfont-sidenav-food-drink">
            <li>[search]</li>[link]<li>[ahref]</li><li>[ahref]</li><li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>
           </span>
           <h5>
            Food &amp; Drink
           </h5>
          </div>
          <div class="sidenav-item-content">
           <div class="sidenav-item-header">
            <h5>
             Food &amp; Drink
            </h5>
           </div>
           <ul class="sidenav-subnav">
            <li class="sidenav-subnav-navItem">
             [link]
             
            </li>
            <li class="sidenav-subnav-navItem">
             <a href="/en/food-and-drink/cafes/">
              Cafés
             </a>
            </li>
            <li class="sidenav-subnav-navItem">
             [ahref]
             
            </li>
           </ul>
          </div>
         </li>
         <li class="sidenav-navItem sidenav-navItem-sidenav-social-media-links off-canvas-block">
          <div class="sidenav-navItem-trigger" title="Follow us">
           <span class="webfont-sidenav-social-media-links">
            [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]<li>[link]</li><li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
           </span>
           <h5>
            Follow us
           </h5>
          </div>
          <div class="sidenav-item-content">
           <div class="sidenav-item-header">
            <h5>
             Follow us
            </h5>
           </div>
           <div>
            <div class="sidenav-subnav-social-media">
             <p>
              Stay up to date with our latest news and trends
             </p>
             <ul>
              <li class="social-navItem">
               <a alt="Facebook" class="social-linkItem webfont-facebook" href="/KildareVillage/" target="_blank">
               </a>
              </li>
              <li class="social-navItem">
               [ahref]
               
              </li>
              <li class="social-navItem">
               [link]
               
              </li>
              <li class="social-navItem">
               <a alt="youtube" class="social-linkItem webfont-youtube" href="/user/KildareVillage" target="_blank">
               </a>
              </li>
              <li class="social-navItem">
               [link]
               
              </li>
             </ul>
            </div>
           </div>
          </div>
         </li>
        </ul>
       </nav>
       <div class="lang-vill">
        <div class="dropdown off-canvas-block nav-pin-to-top" id="language">
         <div class="dropdown-container">
          <a class="dropdown-button desktop webfont-cheveron" href="#">
           English
          </a>
          <a class="dropdown-button offcanvas webfont-cheveron language-subnav-trigger" href="#">
           English
          </a>
          <ul class="dropdown-menu dropdown-select">
           <li class="active">
            [link]
            
           </li>
           <li class="">
            [link]
            
           </li>
           <li class="">
            [ahref]
            
           </li>
           <li class="">
            <a href="/ru/">
             русский
            </a>
           </li>
          </ul>
         </div>
        </div>
        <div class="dropdown off-canvas-block nav-pin-to-top last" id="village">
         <div class="dropdown-container">
          [ahref]
          
          [ahref]
          
          <ul class="dropdown-menu dropdown-select">
           <li>
            <a href="m">
             <span class="dd-location">
              London
             </span>
             Bicester Village
            </a>
           </li>
           <li class="active">
            <a href="/">
             <span class="dd-location">
              Dublin
             </span>
             Kildare Village
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a href="/">
             <span class="dd-location">
              Frankfurt[link][ahref]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
             </span>
             Wertheim Village
            </a>
           </li>
           <li>
            <a href="/">
             <span class="dd-location">
              Munich[link][link][link][link][link]<li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>
             </span>
             Ingolstadt Village
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a href="/">
             <span class="dd-location">
              Milan • Bologna<li>[link]</li><li>[search]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]<li>[link]</li><li>[link]</li><li>[search]</li>
             </span>
             Fidenza Village
            </a>
           </li>
           <li>
            <a href="/">
             <span class="dd-location">
              Barcelona<li>[search]</li><li>[ahref]</li><li>[ahref]</li>[ahref][ahref]
             </span>
             La Roca Village
            </a>
           </li>
           <li>
            <a href="/">
             <span class="dd-location">
              Madrid
             </span>
             Las Rozas Village
            </a>
           </li>
           <li>
            <a href="/">
             <span class="dd-location">
              Suzhou
             </span>
             Suzhou Village
            </a>
           </li>
           <li>
            <a href="/">
             <span class="dd-location">
              Shanghai
             </span>
             Shanghai Village
            </a>
           </li>
          </ul>
         </div>
        </div>
       </div>
      </div>
      <button class="hamburger" id="navTrigger" tabindex="-1">
       <span>
        toggle menu[ahref][ahref]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[link]</li>[search]
       </span>
      </button>
      [ahref]
      
     </div>
    </header>
    <main class="page-brand-single" id="mainContent">
     <section class="hero hero-brand-single">
      <article class="component-wrapper-new module-new module-img-content module-hero-new module-hero-new-no-spacing contains-video">
       <div class="module-image">
       </div>
       <div class="module-content-wrapper">
        <div class="module-content">
         <header>
          <h1 class="module-title">
           [area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]
          </h1>
          <p class="brand-state module-title-deco">
           [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li>[link][link][link][link]
          </p>
         </header>
         <p>
          <p>
           <strong>
            BOSS
           </strong>
           <br>
            <li>[search]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<li>[link]</li>[link][link]<li>[ahref]</li><li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
           </br>
           BOSS offers sophisticated, modern collections focused on quality and design to create an impeccable look – be it business, casual or athleisure.
          </p>
          <p>
           <br/>
           <strong>
            BOSS Menswear
           </strong>
           <br/>
           BOSS Menswear has reached icon status for its tailoring, but offers more than the perfect suit. The collections also feature casual and athleisure pieces, presenting a complete wardrobe for fast-paced modern lifestyles. Tailoring and sportswear are brought together in a look that is ready for whatever the day may hold.
          </p>
          <p>
           <br/>
           <strong>
            BOSS Womenswear
           </strong>
           <br>
            [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][search][search][ahref][link]<li>[search]</li><li>[ahref]</li>[link][link][search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>[link]
           </br>
           BOSS Womenswear touches all bases for modern-day living, from business and casual attire to eveningwear, with an emphasis on beautifully tailored pieces. Timeless styles with a fresh, modernist twist are an essential part of the collection, as are luxe leisure pieces. These two sides of the BOSS woman often meet in looks that combine tailoring with a casual ease.
          </p>
         </p>
         <ul class="brand-contact">
          <li>
           <a class="tel-link" href="0">
            +353 (0) 45 520 860
           </a>
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           <a href="/en/your-visit/village-map/#lease10">
            View On Map
           </a>
          </li>
         </ul>
         <div class="brand-logo">
          <a href="m" target="_blank">
          </a>
         </div>
        </div>
       </div>
      </article>
     </section>
     <section class="page-wrapper-wide">
      <div class="row">
       <section class="module-new module-product-carousel-new module-widget-carousel-wrapper">
        <div class="row slider-widget-header">
         <h4 class="module-editorial-header section-title">
          Eveningwear
         </h4>
        </div>
        <div class="widget-carousel-new product-carousel" data-slick='{"respondTo":"slider","slidesToScroll":1,"responsive":[{"breakpoint":330,"settings":{"slidesToShow":2}},{"breakpoint":600,"settings":{"slidesToShow":3}},{"breakpoint":786,"settings":{"slidesToShow":4}},{"breakpoint":1000,"settings":{"slidesToShow":5}}] }'>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Slim-fit suit in virgin wool" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18457/hugobosshoustentuxedodarkbluemen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861480400000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18457/hugobosshoustentuxedodarkbluemen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861480400000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47447" data-target="#product-modal" data-title="Housten/Glorious Tuxedo " data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18457/hugobosshoustentuxedodarkbluemen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861480400000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             <a href="/en/shopping/brands/boss/">
              Boss
             </a>
            </h5>
           </div>
           <div class="in-store">
            Housten/Glorious Tuxedo
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Slim-fit Popeline shirt with wing collar and double cuffs" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18456/hugobossillikshirtwhitemen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861479540000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18456/hugobossillikshirtwhitemen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861479540000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47445" data-target="#product-modal" data-title="Illik Shirt" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18456/hugobossillikshirtwhitemen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861479540000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             [link]
             
            </h5>
           </div>
           <div class="in-store">
            Illik Shirt
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Structured leather Derby shoes" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18452/hugobossunprioshoesblackmen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861473320000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18452/hugobossunprioshoesblackmen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861473320000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47437" data-target="#product-modal" data-title="Unprio Shoes" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18452/hugobossunprioshoesblackmen2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861473320000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             <a href="/en/shopping/brands/boss/">
              Boss
             </a>
            </h5>
           </div>
           <div class="in-store">
            Unprio Shoes
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Regular-fit tuxedo in wool with silk details on shawlcollar, pockets, galonband, waistband and silk covered buttons" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18458/hugobosssky1tuxedoblackmens2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861481900000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18458/hugobosssky1tuxedoblackmens2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861481900000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47449" data-target="#product-modal" data-title="The Sky1/Gala1 Tuxedo" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18458/hugobosssky1tuxedoblackmens2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861481900000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             <a href="/en/shopping/brands/boss/">
              Boss
             </a>
            </h5>
           </div>
           <div class="in-store">
            The Sky1/Gala1 Tuxedo
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Set bow tie and cummerbund in solid jackard silk" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18453/hugobosssetbowtieandcummerbund2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861476320000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18453/hugobosssetbowtieandcummerbund2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861476320000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47439" data-target="#product-modal" data-title="Set Bow Tie &amp; Cummerbund" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18453/hugobosssetbowtieandcummerbund2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861476320000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             <a href="/en/shopping/brands/boss/">
              Boss
             </a>
            </h5>
           </div>
           <div class="in-store">
            Set Bow Tie &amp; Cummerbund
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Italian made lace-up shoe in patent calf leather" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18498/50210245.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865924760000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18498/50210245.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865924760000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47537" data-target="#product-modal" data-title="Cristallo Shoe" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18498/50210245.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131865924760000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             [ahref]
             
            </h5>
           </div>
           <div class="in-store">
            Cristallo Shoe
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Leather belt with silver plaque, 3 cm" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18501/50129166.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925320000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18501/50129166.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925320000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47538" data-target="#product-modal" data-title="Adam Belt" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18501/50129166.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131865925320000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             [link]
             
            </h5>
           </div>
           <div class="in-store">
            Adam Belt
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Pocket square in jackard silk" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18506/50231948.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925670000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18506/50231948.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925670000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47539" data-target="#product-modal" data-title="Pocket Square" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18506/50231948.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131865925670000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             [ahref]
             
            </h5>
           </div>
           <div class="in-store">
            Pocket Square
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Bow tie in solid jackard silk" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18504/50231918-black.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925450000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18504/50231918-black.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925450000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47540" data-target="#product-modal" data-title="Bow Tie" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18504/50231918-black.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131865925450000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             [link]
             
            </h5>
           </div>
           <div class="in-store">
            Bow Tie
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Slim-fit Popeline shirt with kent collar and double cuffs" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18500/50159273.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925210000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18500/50159273.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925210000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47546" data-target="#product-modal" data-title="Ilias Shirt" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18500/50159273.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131865925210000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             <a href="/en/shopping/brands/boss/">
              Boss
             </a>
            </h5>
           </div>
           <div class="in-store">
            Ilias Shirt
           </div>
          </div>
         </article>
         <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Slim-fit Popeline shirt with kent collar and double cuffs" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18499/50229382-white.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925160000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18499/50229382-white.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925160000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47547" data-target="#product-modal" data-title="Jacques Shirt" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18499/50229382-white.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131865925160000000" title="">
          <div class="product-image-wrapper">
          </div>
          <div class="product-details-wrapper">
           <div class="product-brand">
            <h5 data-brand="Boss">
             [link]
             
            </h5>
           </div>
           <div class="in-store">
            Jacques Shirt
           </div>
          </div>
         </article>
        </div>
        <div class="component-latest-footer">
         [link]
         
        </div>
       </section>
       <div class="modal product-modal" data-share-image="" data-share-title="" data-share-url="" id="product-modal" role="dialog" tabindex="-1">
        <div class="modal-dialog" role="document">
         <div class="modal-content">
          <div class="modal-header">
           <button class="modal-close webfont-close" data-dismiss="modal" type="button">
           </button>
          </div>
          <div class="modal-body">
           <div class="product-info-overlay grid-wrap">
            <section class="grid-item grid-half product-info-overlay__gallery">
             <div class="zoom-container">
              <div class="zoom-tap">
               <span>
                +
               </span>
               Tap to zoom
              </div>
              <span class="zoom-tooltip">
               Click to zoom[link]<li>[link]</li>[search][link][ahref]<li>[link]</li><li>[ahref]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li>[link]<li>[link]</li><li>[search]</li>
              </span>
              <div class="zoom-large">
               [ahref]
               
               <div class="zoom-img-container">
               </div>
               <div class="zoom-pinch">
                <span class="webfont webfont-pinch">
                 <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>[search][link]<li>[ahref]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[search]</li><li>[link]</li>[search][ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
                </span>
                Pinch to zoom
               </div>
               <div class="zoom-spinner">
               </div>
              </div>
             </div>
            </section>
            <section class="grid-item grid-half product-info-overlay__info">
             <div class="product-info-overlay__brand">
              <h2 id="product-brand">
               [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
              </h2>
             </div>
             <div class="product-info-overlay__title">
              <p id="product-title">
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][ahref][search][ahref][search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[search]</li><li>[ahref]</li><li>[link]</li>[ahref]<li>[ahref]</li><li>[link]</li>[search][search][search]<li>[link]</li>[link][search]<li>[link]</li>
              </p>
             </div>
             <p class="product-info-overlay__product-description" id="product-description">
             </p>
             <p class="product-price" id="product-price">
             </p>
             <hr/>
             <div class="grid-wrap">
              <div class="grid-item-2col product-info-overlay__cta">
               <h3>
                [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
               </h3>
               [link]
               
               [link]
               
              </div>
              <div class="grid-item-2col product-info-overlay__share">
               <h3>
                [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
               </h3>
               <ul class="share-list">
                <li class="share-item">
                 [ahref]
                 
                </li>
                <li class="share-item hidden-desktop">
                 <a aria-label="Messenger" class="webfont-messenger" data-social-platform="messenger" href="#">
                 </a>
                </li>
                <li class="share-item">
                 [ahref]
                 
                </li>
                <li class="share-item">
                 <a aria-label="Pinterest" class="webfont-pinterest" data-social-platform="pinterest" href="#">
                 </a>
                </li>
                <li class="share-item hidden-desktop">
                 [ahref]
                 
                </li>
               </ul>
              </div>
             </div>
            </section>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </section>
     <section class="page-wrapper-wide">
      <div class="row">
       <div class="widget-slot">
        <div class="widget grid-item " data-colsize="OneCol">
         [ahref]
         
        </div>
       </div>
      </div>
     </section>
     <aside class="page-wrapper-wide">
      <div class="row">
       <div class="widget-slot">
        <div class="widget grid-item grid-2" data-colsize="TwoCol">
         <div class="module full-video">
          <div class="video-cover" data-video-client="brightcove" data-video-trigger="5859524408001" style="background-image: url('/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18465/2000x700bossherobannerkildarevillage.jpg?center=0.42196531791907516,0.354251012145749&amp;mode=crop&amp;width=630&amp;height=370&amp;rnd=131861893380000000');">
           <div class="video-cover-overlay">
            <div class="video-cover-content">
            </div>
            <h3 class="video-widget-title">
             [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
            </h3>
           </div>
          </div>
          <div class="video-embed">
           <video class="video-brightcove video-js" controls="" data-account="640445624001" data-embed="default" data-player="default" data-video-id="5859524408001">
           </video>
          </div>
         </div>
        </div>
        <div class="widget grid-item grid-3" data-colsize="ThreeCol">
         <section class="module-new module-product-carousel-new module-widget-carousel-wrapper">
          <div class="row slider-widget-header">
           <h4 class="module-editorial-header section-title">
            Gifting
           </h4>
          </div>
          <div class="widget-carousel-new product-carousel" data-slick='{"respondTo":"slider","slidesToScroll":1,"responsive":[{"breakpoint":330,"settings":{"slidesToShow":2}},{"breakpoint":600,"settings":{"slidesToShow":3}},{"breakpoint":786,"settings":{"slidesToShow":4}},{"breakpoint":1000,"settings":{"slidesToShow":5}}] }'>
           <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Leather belt with silver plaque" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18460/hugobossopatriosbeltblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861484190000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18460/hugobossopatriosbeltblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861484190000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47453" data-target="#product-modal" data-title="Opatrios Belt " data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18460/hugobossopatriosbeltblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861484190000000" title="">
            <div class="product-image-wrapper">
            </div>
            <div class="product-details-wrapper">
             <div class="product-brand">
              <h5 data-brand="Boss">
               <a href="/en/shopping/brands/boss/">
                Boss
               </a>
              </h5>
             </div>
             <div class="in-store">
              Opatrios Belt
             </div>
            </div>
           </article>
           <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Wallett in buffalo leather" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18464/hugobosstrevikowalletblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861489480000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18464/hugobosstrevikowalletblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861489480000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47462" data-target="#product-modal" data-title="Treviko Wallet" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18464/hugobosstrevikowalletblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861489480000000" title="">
            <div class="product-image-wrapper">
            </div>
            <div class="product-details-wrapper">
             <div class="product-brand">
              <h5 data-brand="Boss">
               [link]
               
              </h5>
             </div>
             <div class="in-store">
              Treviko Wallet
             </div>
            </div>
           </article>
           <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Leather belt with silver plaque" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18461/hugobossotanobeltblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861486780000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18461/hugobossotanobeltblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861486780000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47455" data-target="#product-modal" data-title="Otano Belt" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18461/hugobossotanobeltblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861486780000000" title="">
            <div class="product-image-wrapper">
            </div>
            <div class="product-details-wrapper">
             <div class="product-brand">
              <h5 data-brand="Boss">
               [link]
               
              </h5>
             </div>
             <div class="in-store">
              Otano Belt
             </div>
            </div>
           </article>
           <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Gift-set wallet and cardholder in grainy saffiano leather" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18462/hugobossgiretgiftsetblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861487500000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18462/hugobossgiretgiftsetblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131861487500000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47457" data-target="#product-modal" data-title=" Giret Gift-set" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18462/hugobossgiretgiftsetblack2000x2000.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131861487500000000" title="">
            <div class="product-image-wrapper">
            </div>
            <div class="product-details-wrapper">
             <div class="product-brand">
              <h5 data-brand="Boss">
               [link]
               
              </h5>
             </div>
             <div class="in-store">
              Giret Gift-set
             </div>
            </div>
           </article>
           <article aria-label="Boss" class="product" data-brand="Boss" data-brand-url="https://www.kildarevillage.com/en/shopping/brands/boss/" data-category-list=",," data-description="Two-pack socks in cotton mix" data-image-src="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18505/50319261-black.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925670000000" data-map-url="/en/your-visit/village-map/#lease10" data-share-image="https://www.kildarevillage.com/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18505/50319261-black.jpg?anchor=center&amp;mode=crop&amp;width=250&amp;height=250&amp;rnd=131865925670000000" data-share-url="https://www.kildarevillage.com/en/shopping/products/featured/47548" data-target="#product-modal" data-title="Socks" data-toggle="modal" data-zoom-image-src="/remote.axd/vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/18505/50319261-black.jpg?anchor=center&amp;mode=crop&amp;width=760&amp;height=760&amp;rnd=131865925670000000" title="">
            <div class="product-image-wrapper">
            </div>
            <div class="product-details-wrapper">
             <div class="product-brand">
              <h5 data-brand="Boss">
               [ahref]
               
              </h5>
             </div>
             <div class="in-store">
              Socks
             </div>
            </div>
           </article>
          </div>
          <div class="component-latest-footer">
           [link]
           
          </div>
         </section>
         <div class="modal product-modal" data-share-image="" data-share-title="" data-share-url="" id="product-modal" role="dialog" tabindex="-1">
          <div class="modal-dialog" role="document">
           <div class="modal-content">
            <div class="modal-header">
             <button class="modal-close webfont-close" data-dismiss="modal" type="button">
             </button>
            </div>
            <div class="modal-body">
             <div class="product-info-overlay grid-wrap">
              <section class="grid-item grid-half product-info-overlay__gallery">
               <div class="zoom-container">
                <div class="zoom-tap">
                 <span>
                  +[ahref]<li>[ahref]</li>[search][search]<li>[search]</li>
                 </span>
                 Tap to zoom
                </div>
                <span class="zoom-tooltip">
                 Click to zoom
                </span>
                <div class="zoom-large">
                 [link]
                 
                 <div class="zoom-img-container">
                 </div>
                 <div class="zoom-pinch">
                  <span class="webfont webfont-pinch">
                  </span>
                  Pinch to zoom
                 </div>
                 <div class="zoom-spinner">
                 </div>
                </div>
               </div>
              </section>
              <section class="grid-item grid-half product-info-overlay__info">
               <div class="product-info-overlay__brand">
                <h2 id="product-brand">
                 <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
                </h2>
               </div>
               <div class="product-info-overlay__title">
                <p id="product-title">
                 <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[ahref]</li>
                </p>
               </div>
               <p class="product-info-overlay__product-description" id="product-description">
                <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><li>[search]</li><li>[link]</li><li>[link]</li>
               </p>
               <p class="product-price" id="product-price">
               </p>
               <hr/>
               <div class="grid-wrap">
                <div class="grid-item-2col product-info-overlay__cta">
                 <h3>
                  [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                 </h3>
                 <a class="arrow-anim-wrapper" id="product-brand-map-url">
                  View Map
                  <span class="arrow-anim">
                   [ahref]<li>[link]</li>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                  </span>
                 </a>
                 [link]
                 
                </div>
                <div class="grid-item-2col product-info-overlay__share">
                 <h3>
                  [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
                 </h3>
                 <ul class="share-list">
                  <li class="share-item">
                   [ahref]
                   
                  </li>
                  <li class="share-item hidden-desktop">
                   <a aria-label="Messenger" class="webfont-messenger" data-social-platform="messenger" href="#">
                   </a>
                  </li>
                  <li class="share-item">
                   <a aria-label="Twitter" class="webfont-twitter" data-social-platform="twitter" href="#">
                   </a>
                  </li>
                  <li class="share-item">
                   [ahref]
                   
                  </li>
                  <li class="share-item hidden-desktop">
                   <a aria-label="WhatsApp" class="webfont-whatsapp" data-social-platform="whatsapp" href="#">
                   </a>
                  </li>
                 </ul>
                </div>
               </div>
              </section>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </aside>
    </main>
    <div class="back-to-top-wrap noPrint">
     <div class="back-to-top webfont-cheveron-thin">
      Top
     </div>
    </div>
    <footer class="main-footer" role="contentinfo">
     <div class="page-wrapper-wide footer-content-wrapper noPrint">
      <div class="row component footer-content">
       <aside class="opening-hours">
        <h4>
         Opening Hours
        </h4>
        <ul>
         <li>
          <div class="day">
           Monday
          </div>
          <div class="hours">
           <span>
            09.00
           </span>
           -
           <span>
            20.00
           </span>
          </div>
         </li>
         <li>
          <div class="day">
           Tuesday
          </div>
          <div class="hours">
           <span>
            09.00
           </span>
           -
           <span>
            20.00<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
           </span>
          </div>
         </li>
         <li>
          <div class="day">
           Wednesday
          </div>
          <div class="hours">
           <span>
            09.00
           </span>
           -
           <span>
            20.00
           </span>
          </div>
         </li>
         <li>
          <div class="day">
           Thursday
          </div>
          <div class="hours">
           <span>
            09.00
           </span>
           -
           <span>
            21.00
           </span>
          </div>
         </li>
         <li>
          <div class="day">
           Friday
          </div>
          <div class="hours">
           <span>
            09.00[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
           </span>
           -
           <span>
            21.00<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref]<li>[link]</li><li>[search]</li><li>[ahref]</li><li>[link]</li>
           </span>
          </div>
         </li>
         <li>
          <div class="day">
           Saturday
          </div>
          <div class="hours">
           <span>
            09.00
           </span>
           -
           <span>
            20.00
           </span>
          </div>
         </li>
         <li>
          <div class="day">
           Sunday
          </div>
          <div class="hours">
           <span>
            09.00
           </span>
           -
           <span>
            20.00[ahref][search][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]
           </span>
          </div>
         </li>
        </ul>
        <div class="tooltip-wrapper">
         <div class="tooltip-trigger webfont-tooltip">
         </div>
         <div class="tooltip-content tooltip-bottom-xsm">
          Please note that  Le Pain Quotidien, L'Officina, Starbucks, Alchemy Juice Co. and the Kildare Village Tourist Information open 30 minutes before boutique opening times.
         </div>
        </div>
        <div class="opening-time-extra">
         Please note that  Le Pain Quotidien, L'Officina, Starbucks, Alchemy Juice Co. and the Kildare Village Tourist Information open 30 minutes before boutique opening times.
        </div>
       </aside>
       <nav class="f-site-map">
        <div class="f-site-map-col ">
         <div class="f-site-map-group">
          <h4 class="f-sm-company-list">
           Company
          </h4>
          <ul class="f-sm-company-list">
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a class="" href="#" target="_self" title="TripAdvisor Certificate of Excellence">
             TripAdvisor Certificate of Excellence
            </a>
           </li>
           <li>
            <a class="" href="/en/basic-content-container/app/" target="_self" title="Download App">
             Download App
            </a>
           </li>
          </ul>
         </div>
        </div>
        <div class="f-site-map-col ">
         <div class="f-site-map-group">
          <h4 class="f-sm-company-list">
           Travel
          </h4>
          <ul class="f-sm-company-list">
           <li>
            <a class="" href="/en/your-visit/travel-partners/" target="_self" title="Our Partners">
             Our Partners
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
          </ul>
         </div>
        </div>
        <div class="f-site-map-col ">
         <div class="f-site-map-group">
          <h4 class="f-sm-company-list">
           Legal
          </h4>
          <ul class="f-sm-company-list">
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a class="" href="/en/footer/legal/privacy-notice/" target="_self" title="Privilege Privacy Notice">
             Privilege Privacy Notice
            </a>
           </li>
           <li>
            <a class="" href="/en/footer/legal/accessibility/" target="_self" title="Accessibility">
             Accessibility
            </a>
           </li>
           <li>
            <a class="" href="/en/frequently-asked-questions/" target="_self" title="Frequently Asked Questions">
             Frequently Asked Questions
            </a>
           </li>
           <li>
            <a href="#" onclick="event.preventDefault(); window.evidon.notice.showConsentTool();">
             Cookie Consent
            </a>
           </li>
          </ul>
         </div>
         <div class="f-site-map-group">
          <h4 class="f-sm-faqs-title">
           [ahref]
           
          </h4>
         </div>
        </div>
       </nav>
       <ul>
        <li>
         <div class="day">
          Monday
         </div>
         <div class="hours">
          <span>
           09.00
          </span>
          -
          <span>
           20.00[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[ahref]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
          </span>
         </div>
        </li>
        <li>
         <div class="day">
          Tuesday
         </div>
         <div class="hours">
          <span>
           09.00[link][search]<li>[search]</li>[search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>
          </span>
          -
          <span>
           20.00
          </span>
         </div>
        </li>
        <li>
         <div class="day">
          Wednesday
         </div>
         <div class="hours">
          <span>
           09.00
          </span>
          -
          <span>
           20.00[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[ahref]</li>[ahref]<li>[link]</li>
          </span>
         </div>
        </li>
        <li>
         <div class="day">
          Thursday
         </div>
         <div class="hours">
          <span>
           09.00
          </span>
          -
          <span>
           21.00[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[link]</li><li>[link]</li><li>[link]</li><li>[link]</li>
          </span>
         </div>
        </li>
        <li>
         <div class="day">
          Friday
         </div>
         <div class="hours">
          <span>
           09.00
          </span>
          -
          <span>
           21.00
          </span>
         </div>
        </li>
        <li>
         <div class="day">
          Saturday
         </div>
         <div class="hours">
          <span>
           09.00[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][search][search][search][search]
          </span>
          -
          <span>
           20.00
          </span>
         </div>
        </li>
        <li>
         <div class="day">
          Sunday
         </div>
         <div class="hours">
          <span>
           09.00
          </span>
          -
          <span>
           20.00
          </span>
         </div>
        </li>
       </ul>
       <div class="tooltip-wrapper">
        <div class="tooltip-trigger webfont-tooltip">
        </div>
        <div class="tooltip-content tooltip-bottom-xsm">
         Please note that  Le Pain Quotidien, L'Officina, Starbucks, Alchemy Juice Co. and the Kildare Village Tourist Information open 30 minutes before boutique opening times.
        </div>
       </div>
       <div class="opening-time-extra">
        Please note that  Le Pain Quotidien, L'Officina, Starbucks, Alchemy Juice Co. and the Kildare Village Tourist Information open 30 minutes before boutique opening times.
       </div>
      </div>
     </div>
     <div class="page-wrapper-wide footer-extra-wrapper noPrint">
      <div class="row component footer-extra">
       <div class="footer-legal">
        <p>
         Kildare Village is a member of The Bicester Village Shopping Collection®[search]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[search]</li><li>[ahref]</li><li>[search]</li>
        </p>
        <p>
         © Kildare Village 2018
        </p>
       </div>
       <div class="chickoutlet-link">
        [ahref]
        
       </div>
      </div>
     </div>
    </footer>
   </div>
  </div>
  <div class="modal" data-share-image="https://vrdigitalprodcmsmedia.blob.core.windows.net/prod01-kv/2510/kv_sop_12_2000x370.jpg" data-share-url="" data-title="Discover the Boss boutique at Kildare Village" id="share-modal" role="dialog" tabindex="-1">
   <div class="modal-dialog" role="document">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close " class="modal-close webfont-close" data-dismiss="modal" type="button">
      </button>
      <h4 class="modal-title">
      </h4>
     </div>
     <div class="modal-body">
      <ul class="share-list">
       <li class="share-item">
        [ahref]
        
       </li>
       <li class="share-item hidden-desktop">
        [link]
        
       </li>
       <li class="share-item">
        [link]
        
       </li>
       <li class="share-item">
        <a class="webfont-twitter" data-social-platform="twitter" href="#">
        </a>
       </li>
       <li class="share-item hidden-desktop">
        [link]
        
       </li>
      </ul>
     </div>
    </div>
   </div>
  </div>
  <div class="modal registration-modal " data-share-url="" data-triggerdelay="4" id="registration-modal" role="dialog" tabindex="-1">
   <div class="modal-dialog" role="document">
    <div class="modal-content">
     <div class="modal-header">
      <button aria-label="Close" class="modal-close webfont-close" data-dismiss="modal" type="button">
      </button>
     </div>
     <div class="modal-body">
      <div class="registration-modal-image">
      </div>
      <div id="result">
      </div>
      <div class="registration-modal-content modal-registration-form-content">
       <form action="/Layout/RegistrationOverlay" class="module-new module-text-new module-text-simple-new inpage-form" id="registration-modal-form" method="post">
        <div class="module-text-content custom-scroll" data-scroll-theme="minimal-dark">
         <header>
          <h3 class="module-text-header module-title-deco">
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
         </header>
         <div class="module-text-copy rich-text">
          <p>
           <p>
            Sign up for member-only privileges including private sales, exclusive offers and monthly treats.
           </p>
          </p>
         </div>
         <div class="failure" id="registration-error-message" style="display: none;">
         </div>
         <label for="Email" value="Email ">
          Email
         </label>
         <div class="password-show-wrapper">
          <label for="Password" value="Password">
           Password
          </label>
          <span>
           Password (6 characters minimum)
          </span>
          <div class="password-show-inner">
           [link]
           
          </div>
         </div>
         <div class="dropdown-container">
          [link]
          
          <div class="dropdown-menu dropdown-select">
           <p>
            The Value Retail Villages will process your personal data in order for you to participate in the Privilege programme. As a member of Privilege, your personal data will be collected and used in accordance with our
            <a data-id="2652" href="/en/footer/legal/privacy-notice/" title="Privacy Notice">
             Privacy Notice
            </a>
            .
           </p>
          </div>
         </div>
         <div class="checkbox-wrap">
          <label for="TermsAndConditions">
           <p>
            I confirm that I have read and agree to the
            <a data-id="17565" href="/en/footer/legal/membership-terms-and-conditions/" title="Membership terms and conditions">
             Privilege Terms and Conditions
            </a>
            and confirm that I am aged 18 or over*.
           </p>
          </label>
         </div>
        </div>
        <div class="button-wrapper">
        </div>
       </form>
      </div>
      <div class="registration-modal-content modal-registration-thanks-content">
       <div class="module-new module-text-new module-text-simple-new">
        <div class="module-text-content custom-scroll" data-scroll-theme="minimal-dark">
         <header>
          <h3 class="module-text-header module-title-deco">
           [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
          </h3>
         </header>
         <div class="module-text-copy rich-text">
          <p>
           Now check your inbox and look out for the activation email - you will have to click on the link to join the club.<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><li>[search]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]
          </p>
         </div>
        </div>
        <div class="button-wrapper">
         [ahref]
         
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0262
  </b>
 </body>
</html>