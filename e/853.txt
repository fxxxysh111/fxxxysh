--->|VGhlIHJlc3VsdCBpcyB0aGF0IHlvdSBzaG91bGQgcGxheSB2ZXJ5IHRpZ2h0IGVhcmx5IG9uLCBldmVuIHRpZ2h0ZXIgdGhhbiBpbiBob2xkJ2VtIHNuZyB0b3VybmFtZW50cywgd2FpdGluZyBmb3Igb25seSB0aGUgbW9zdCBhYnNvbHV0ZSBwcmVtaXVtIGhhbmRzIGxpa2UgYSBwYWlyIG9mIGFjZXMgd2l0aCBhIHdoZWVsIGNhcmQsIG9yIEEyM3guIApJZiB5b3VyIGRvZyB0dXJucyB1cCBoZXIgbm9zZSBhdCBmb29kIGZvciBtb3JlIHRoYW4gdHdvIGRheXMsIGNhbGwgeW91ciB2ZXQgcmlnaHQgYXdheS4gClRoZXNlIGJvZGllcyAibmVlZCIgdG8gYmUgZml4ZWQ7IHRoZSBzdXJnZXJ5IG9uIHRoZW0gaXMgInJlY29uc3RydWN0aXZlIiByYXRoZXIgdGhhbiAiY29zbWV0aWMuIiBBZ2luZyB3aGl0ZSB3b21lbiwgaG93ZXZlciwgY29tZSBpbiBvdmVyIGFuZCBvdmVyIGZvciB0aGUgc2lnbnMgb2Ygb3JkaW5hcnkgdWdsaW5lc3MgIHNhZ2dpbmcgYnJlYXN0cywgd3JpbmtsZXMsIHR1bW1pZXMgdGhhdCBidWxnZSwgYW5rbGVzIHRoYXQgYXJlIHNvIHN0dXJkeSBhcyB0byBiZSB0YW5rbGVzLCBldmVuIHZhZ2luYXMgdGhhdCBzYWcuLiAKQWxleCBSZWVkIG9mIHRoZSBzZWNyZXRhcnkgb2Ygc3RhdGUncyBvZmZpY2Ugc2F5cyB0aGUgTmFuY3kgVG9kZCBQb2tlciBQYWxhY2UgY29uc3RpdHV0aW9uYWwgYW1lbmRtZW50IHRvIGdpdmUgZXhjbHVzaXZlIGNhc2lubyBsaWNlbnNlcyBmb3IgZm91ciBjYXNpbm9zIHRvIGFuIGVudGVycHJpc2UgYmFja2VkIGJ5IEJyYW5zb24sIE1vLiwgaW52ZXN0b3JzIGlzIGFsc28gc2hvcnQgb2Ygc2lnbmF0dXJlcyBvZiByZWdpc3RlcmVkIHZvdGVycy4gCk1hc3NhZ2VsZSBtYWNoZW4gZGFzIE1hc3NpZXJlbiBlaW5mYWNoZXIgdW5kIGRpZSBNYXNzYWdlIGFuZ2VuZWhtZXIuIERlbm5vY2ggc29sbHRlbiBTaWUgYmVpIGRlciBBdXN3YWhsIGRlciBsZSBmciBkaWUgR2VidXJ0IHZvcnNpY2h0aWcgc2Vpbi4gS2F1ZmVuIFNpZSBrZWluZSB0aGVyaXNjaGVuIGxlIG9obmUgZGVuIFJhdCBlaW5lcyBBcm9tYXRoZXJhcGV1dGVuLiB0aGVyaXNjaGUgbGUgZW50aGFsdGVuIHNlaHIgd2lya3VuZ3N2b2xsZSBTdWJzdGFuemVuLiBNYW5jaGUgdm9uIGlobmVuIGtubmVuIGRpZSBXZWhlbiBuZWdhdGl2IGJlZWluZmx1c3Nlbiwgd2VubiBzaWUgZmFsc2NoIGFuZ2V3YW5kdCB3ZXJkZW4uIEVpbmlnZSBBcm9tYXRoZXJhcGV1dGVuIGVtcGZlaGxlbiBkZXNoYWxiIGVpbiBlaW5mYWNoZXMgQmFzaXNsIGZyIGRpZSBHZWJ1cnQuIEJhc2lzbGUgd2VyZGVuIHp1bSBCZWlzcGllbCBhdXMgc2VuIE1hbmRlbG4gb2RlciBUcmF1YmVua2VybmVuIGhlcmdlc3RlbGx0LiBNYW5kZWxsIGlzdCBuaWNodCBlbXBmZWhsZW5zd2VydCBiZWkgKFZlcmRhY2h0IGF1ZikgZWluZSBOdXNzYWxsZXJnaWUuIFRyYXViZW5rZXJubCBpc3QgZ2VuYXVzbyBndXQgdW5kIHNlbGJzdCBPbGl2ZW5sLCBkYXMgc2NobmVsbCB2b24gZGVyIEhhdXQgYXVmZ2Vub21tZW4gd2lyZCwga2FubiBiZW51dHp0IHdlcmRlbi4gRGllIFNjaHVsdGVybWFzc2FnZQpEci4gSmVzcyBpcyBtYXJyaWVkIHRvIE1hdHQgQnVobGVyLCBhbmQgdGhleSBoYXZlZm91ciBjaGlsZHJlbjogRXZpYSwgQWxseSwgSGVucnkgYW5kIFJlbmxlZS4gClRoZXJlIGFyZSBsaW1pdHMgdG8gdGhlIGNlbnRyYWwgYmFuayBhYmlsaXR5IHRvIG1hbmFnZSBsb25nIHRlcm0gaW50ZXJlc3QgcmF0ZXMgdGhyb3VnaCBhc3NldCBwdXJjaGFzZXMsIHNpbmNlIHVsdGltYXRlbHkgdGhlIG1hcmtldCBpcyBzdWJqZWN0IHRvIG90aGVyIGluZmx1ZW5jZXMsIHRvby4gV2hpbGUgeWllbGRzIGZvciBKYXBhbmVzZSBnb3Zlcm5tZW50IGJvbmRzIChKR0JzKSBhcmUgYm91bmQgdG8gZGVjbGluZSBhcyB0aGUgcHJpY2UgcmlzZXMgZHVlIHRvIHRoZSBzdXJnZSBpbiBwdXJjaGFzZXMgYnkgdGhlIEJPSiwgaWYgdGhlIDIlIGluZmxhdGlvbiB0YXJnZXQgaXMgcmVhY2hlZCwgdGhlIGNlbnRyYWwgYmFuayBoYXMgc2FpZCBpdCB3aWxsIGFkanVzdCBwb2xpY3kgZm9yIHRoZSBzYWtlIG9mIHByaWNlIHN0YWJpbGl0eS4uIApTZXJpb3VzbHksIHRoZXJlIG11c3QgYmUgYSBsYXcgdGhhdCB3YWxscyB0YXggcGF5ZXIgZG9sbGFycyBmcm9tIG5lcG90aXNtLiBCZWNhdXNlIHRoaXMgaXMgY3JhenkuIApJbiBvdXIgZmFtaWx5IGZvdW5kIHRoZSBlbnRpcmUgc2NlbmUgInJpZGljdWxvdXMsIiBidXQgSSBhY3R1YWxseSB0aG91Z2h0IGl0IHdhcyBva2F5LiBUaGUgcHJpZXN0cyBzaG91bGQgYmUgd29ycmllZCBhYm91dCBnaXZpbmcgbW90b3JjeWNsZXMgYSBwcmF5ZXIgYW5kIHNvbWUgaG9seSB3YXRlciB0aGFuIGJhc2hpbmcgZmFncyBhbmQgZmVtaW5pc3RzLiBDb3Vyc2UsIEkgc2hvdWxkIGhhdmUga25vd24gdGhhdCB0aGlzIHNtYWxsIGFjdCBvZiBraW5kbmVzcyB0b3dhcmQgbGVhdGhlciBjbGFkLCBIT0cgcmlkaW5nIHNvcnRzIHdhcyBhIG1vbWVudGFyeSBibGlwIGluIHRoZSBoYXRlIG1hY2hpbmUgdGhhdCBpcyB0aGUgQ2F0aG9saWMgaGllcmFyY2h5Li4gCkh1YmJhcmQgQnJvYWRjYXN0aW5nOiAkMTQgbWlsbGlvbiB3aXRoICQxMCBtaWxsaW9uIGVhcm1hcmtlZCBmb3IgdGhlIFNjaG9vbCBvZiBKb3VybmFsaXNtIGFuZCBNYXNzIENvbW11bmljYXRpb24gZm9yIGEgdGVjaG5vbG9neSBlbmRvd21lbnQsIHRoZSBEaWdpdGFsIEluZm9ybWF0aW9uIFJlc291cmNlIENlbnRlciwgYW5kIHRoZSBJbnN0aXR1dGUgZm9yIE5ldyBNZWRpYSBTdHVkaWVzLiAKRGllZG1hc3RlcngzICAgNiBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvCkR1IGxpZWJzdCBQb2tlciB1bmQgd2lsbHN0IGRpZSBFaW5zdHplIGVpbiB3ZW5pZyBlcmhoZW4/IFZlcnN1Y2ggZXMgbWFsIG1pdCBkZXIgaGVpZW4gVmVyc2lvbiBmciBFcndhY2hzZW5lLCBiZWkgZGVyIGR1IGJ1Y2hzdGJsaWNoIGRlaW4gbGV0enRlcyBIZW1kIHZlcmxpZXJlbiBrYW5uc3QgICB1bmQgdmllbGxlaWNodCBzb2dhciBub2NoIG1laHIuIApUcnVtcCB0ZW1wZXJzIGV4cGVjdGF0aW9ucyBmb3IgcG9zc2libGUgVVMKTWVtb3JpYWxzIGFyZSBub3Qgc3ViamVjdCB0byBpIHZldG8gYnkgdGhlIEdvdmVybm9yLiAKTGlzYSBLdWRyb3csIHdobyBwbGF5ZWQgZGl0c3kgUGhvZWJlIEJ1ZmZheSwgc2FpZDogIkJ1cnJvd3MgZ2F2ZSBoaXMgZHJlc3Npbmcgcm9vbSBiZWNhdXNlIGl0IHdhcyBiaWcuIApUaGF0IHB1dHMgdGhlIGN1dG9mZiBpbiBhIHJlYWxseSB1bmNvbWZvcnRhYmxlIHNwb3QuIEhlIGNhbiBmb2xkIGFuZCBnaXZlIHVwIHNvbWUgc3Vic3RhbnRpYWwgZXF1aXR5LCBoZSBjYW4gY2FsbCwgd2hpY2ggY2FwcyBoaXMgcmFuZ2UgYW5kIHB1dHMgaGltIGluIHBvc2l0aW9uIHRvIGdldCByZXNxdWVlemVkLCBvciBoZSBjYW4gNSBiZXQsIHdoaWNoIGF0IHRoaXMgdGFibGUgYWdhaW5zdCB0aGF0IG9wcG9uZW50IGd1YXJhbnRlZXMgYWNlcyBvciBraW5ncyBhbmQgeW91IGNhbiBzYWZlbHkgZm9sZC4uIApZZXMsIHNvbWUgb2YgaXQgaXMgc2F0dXJhdGVkLCBidXQgYXMgbG9uZyBhcyB5b3UgYXJlIGJlaW5nIHNtYXJ0IGFib3V0IGNhcmIgaW50YWtlIGFuZCBtYW5hZ2luZyB5b3VyIGluc3VsaW4gYXBwcm9wcmlhdGVseSwgc2F0dXJhdGVkIGZhdCBpcyBiZW5pZ24uIE1vZGVyYXRlIGZhdCBpbnRha2UsIG9mIHdoaWNoIGEgcmVhc29uYWJsZSBkb3NlIGlzIHNhdHVyYXRlZCwgaGFzIHJlcGVhdGVkbHkgYmVlbiBmb3VuZCB0byBjb3JyZWxhdGUgd2l0aCBmcmVlIHRlc3Rvc3Rlcm9uZSBhbmQgbXVzY2xlIGRldmVsb3BtZW50Li4gCkJ1dCBJIGFsc28gdGhpbmsgc2hlIG1pZ2h0IGhhdmUganVzdCByZWdyZXR0ZWQgaXQgYW5kIHNpbmNlIHNoZSBpcyBpbmNhcGFibGUgb2YgYWRtaXR0aW5nIHNoZSBtYWRlIGEgbWlzdGFrZSBvciBkaWQgc29tZXRoaW5nIHdyb25nLCBjYW4ndCBqdXN0IGFkbWl0IHRvIGhlcnNlbGYgdGhhdCBzaGUgc2hvdWxkbid0IGhhdmUgc29sZCBoZXIgc2hhcmUsIGJ1dCBkaWQsIGFuZCByZWdyZXR0ZWQgaXQuIApMZWRlcmVyIGlzIGRlc2NyaWJlZCBvbiBoaXMgd2Vic2l0ZSBhcyAiVGhlIFBva2VyIFByb2Zlc3NvciIgYW5kIEZlcmd1c29uIGhhcyB3b24gZml2ZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgZXZlbnRzLiBUaGUgbWVuIGFyZSBkaXJlY3RvcnMgYW5kIG93bmVycyBvZiBGdWxsIFRpbHQgUG9rZXIuClNjaG9uIG9mdCB3dXJkZSB2ZXJzdWNodCBkYXMgR2xjayBmciBzaWNoIHp1IHBhY2h0ZW4uIEJlaSBQb2tlciB3aXJkIHZpZWwgbWl0IEZhbHNjaCBzcGllbGVuIHZlcmJ1bmRlbi4gRGFzIGthbm4gYmVpbSBtaXNjaGVuLCBhYmhlYmVuIHVuZCBhdXN0ZWlsZW4gZGVyIEthcnRlbiBwYXNzaWVyZW4uIERhZHVyY2ggd2lyZCB2ZXJzdWNodCBkaWUgS29udHJvbGxlIHp1IGJlaGFsdGVuIHVuZCB6dSB3aXNzZW4gd2FzIGRlciBHZWduZXIgaGF0LiBlaW4gQXNzIHp1IG1hcmtpZXJlbi4gRGF6dSBnZWhydCBkZXIgRmluZ2VycmluZywgZGVyIGF1ZiBzZWluZXIgUmNrc2VpdGUgZWluZSBOYWRlbCBvZGVyIFJhc2llcmtsaW5nZSBiZXNpdHp0IHVtIGRpZSBLYXJ0ZSBhbnp1cml0emVuLiBJbiBkZW4gUmhvbWJlbiB1bmQgS3JpbmdlbG4gd2VyZGVuIHdpbnppZ2UgTWFya2llcnVuZ2VuIGFuZ2VicmFjaHQgdW5kIGtubmVuIHNwdGVyIGR1cmNoIGVpbmVuIGJlc3RpbW10ZW4gQ29kZSBnZWxlc2VuIHdlcmRlbi4gRGFkdXJjaCBrYW5uIGtvbnRyb2xsaWVydCB3ZXJkZW4sIHdlbGNoZSBLYXJ0ZW4gaW0gVW1sYXVmIHNpbmQuIERpZSBiZWthbm50ZXN0ZSBNaXNjaG1ldGhvZGUgYmVpbSBQb2tlcm4gaXN0IGRhcyBSaWZmZWwgIG9kZXIgYXVjaCBGYXJvbWlzY2hlbiBnZW5hbm50LiBNaXQgdmllbCBidW5nIHdlcmRlbiBkaWUgS2FydGVuIGluZWluYW5kZXIgdmVyemFobnQuIEthbm4gbWFuIGRpZXNlIE1ldGhvZGUsIGRhbm4gaGF0IG1hbiBiZWkgendlaW1hbCBtaXNjaGVuIGRlbiBVcnNwcnVuZ3N6dXN0YW5kIGRlciBLYXJ0ZW4gd2llZGVyIGhlcmdlc3RlbGx0LiBEaWVzZSBBcnQgZGVzIE1pc2NoZW5zLCBkaWVudCBsZWRpZ2xpY2ggZGVtIEltcG9uaWVyZ2VoYWJlIHVuZCB6dXIgVmVydW5zaWNoZXJ1bmcgZGVzIEdlZ25lcnMuIERhbm4gZ2lidCBlcyBub2NoIGRhcyBEcmVpcGNrY2hlbm1pc2NoZW4gdW5kIGRhcyBDaGFybGllciBNaXNjaGVuLiBEYXMgRGVjayB3aXJkIGJlaSBiZWlkZW4gaW4ga2xlaW5lcmUgUGNrY2hlbiBnZWhhbHRlbiB1bmQgZWluIE1pc2Nodm9yZ2FuZyBzaW11bGllcnQuIERhenUgbXVzcyBlciBuYXRybGljaCB6dXZvciBmYWxzY2ggZ2VtaXNjaHQgdW5kIGFiZ2Vob2JlbiBoYWJlbiB1bSBkaWUgTGFnZSBkZXIgS2FydGVuIHp1IGVya2VubmVuLiBEaWUgYmVrYW5udGVzdGVuIE1ldGhvZGVuIHNpbmQgZGVyIHNlY29uZCBkZWFsIHVuZCBkZXIgYm90dG9tIGRlYWwuIEJlaW0gYm90dG9tIGRlYWwgd2lyZCBhbnN0YXR0IGRpZSBvYmVyc3RlLCBkaWUgdW50ZXJzdGUgS2FydGUgYXVzZ2V0ZWlsdC4gQmVpbSBzZWNvbmQgZGVhbCB3aXJkIGRpZSB6d2VpdGUgS2FydGUgdm9uIG9iZW4gYXVzZ2V0ZWlsdCwgd2llIGRlciBOYW1lIHNjaG9uIHZlcnJ0LiBEaWVzIHNldHp0IGFiZXIgZ3JvZSBGaW5nZXJmZXJ0aWdrZWl0IHVuZCBqYWhyZWxhbmdlIGJ1bmcgdm9yYXVzLiBTb2xsdGVuIGRpZXNlIGFiZXIgYmVpIGVpbmVtIFR1cm5pZXIgdW50ZXJsYXNzZW4sIGRhIGRlciBQcm9maSBkZW4gQmV0cnVnIHNvZm9ydCBlcmtlbm50LiBJbiBUZXhhcyBnYWIgZXMgZGEgc2Nob24gdmllbGUgZGllIG5pY2h0IG1laHIgdm9tIFBva2VydGlzY2ggYXVmZ2VzdGFuZGVuIHNpbmQuIE1vZGVybmUgQ2FzaW5vcyB1bmQgUG9rZXJ0dXJuaWVyZSBoYWJlbiBzdHJlbmdlIEtvbnRyb2xsZW4gdW5kIG1hY2hlbiBkYXMgQmV0cmdlbiBkdXJjaCBkZW4gRWluc2F0eiB2b24gS2FydGVuc2NobGl0dGVuIHVubWdsaWNoLgoiSSB3YW50IHRvIHRhbGsgYWJvdXQgaG93IHRoZXJlIGlzIG5hdHVyYWxseSBhIGNoYW90aWMsIG1lc3N5LCB1bnByZWNlZGVudGVkIHNvY2lvIGN1bHR1cmFsLCBzZXh1YWwgY2hhbmdlICAgdGhlIHJlY2tvbmluZyBhcyBzb21lIGZvbGtzIGFyZSBjYWxsaW5nIGl0ICAgaGFwcGVuaW5nIGFyb3VuZCB1cywiIHNoZSBhZGRlZC4gIkFuZCBpdCB3b24ndCBiZSB0aWR5LCBhbmQgaXQgd29uJ3QgYmUgZWFzeSwgYW5kIHdlIGRvbid0IGhhdmUgYSBwbGF5Ym9vay4gV2UgY2FuJ3QgZ28gdG8gcGFnZSA0NjMgYW5kIHRlYXIgaXQgb3V0IGFuZCBzYXkgdGhpcyBpcyBob3cgd2UgbmF2aWdhdGUgd2hhdCdzIGdvaW5nIG9uLiIuIApJdCdzIHN0aWxsIHBvc3NpYmxlIHRvIHBhbXBlciBhIG1hbiwgYnV0IHRoZSBhY3Rpdml0aWVzIHdpbGwgZGlmZmVyIGdyZWF0bHkuLiAKWWVzLCBJIGNsZWFybHkgcG9zdGVkIHRoaXMgd2l0aCAidGVhcnMgcnVubmluZyBkb3duIG15IGZhY2UuIiBMaXN0ZW4gaGVyZSwgbGlmZSBoYXMgd29ya2VkIG91dCBmb3IgbWUgaGVyZSwgYmV0dGVyIHRoYW4gSSBjb3VsZCwgb3Igd291bGQgaGF2ZSBleHBlY3RlZC4gSSBoYXZlIGp1c3QgZ3Jvd24gdGlyZWQgb2YgdGhlIG1hbnkgZmxhd3MgdGhhdCBwbGFndWUgdGhpcyBjb3VudHJ5LiAKSSB3b3VsZCBkbyB0ZXJyaWJsZSBhbmQgSSB3b3VsZCBndWVzcyB0aGUgdmFzdCBtYWpvcml0eSBvZiB0aG9zZSBoZXJlIHdvdWxkIHRvLiAKVG8gc2hpcCBIYWl0aWFuIG9ycGhhbnMgdG8gdGhlIFVTLCBhcyBpcyBhbHJlYWR5IGJlaW5nIGRvbmUsIGluc3RlYWQgb2Ygd29ya2luZyB0byBrZWVwIHRoZW0gb24gdGhlIGdyb3VuZCwgc2FmZSBhbmQgZmVkIGFuZCBob3VzZWQsIGlzIHByb2JhYmx5IGxlc3MgYWJvdXQgYmVpbmcgZXRoaWNhbCBhbmQgbW9yZSBhYm91dCBvdXIgb3duIGRlc2lyZXMgYW5kIGZhbnRhc2llcyAgZGVzaXJlcyBhbmQgZmFudGFzaWVzIHRoYXQgY2FuIGJlc3QgYmUgZGVzY3JpYmVkLCBnaXZlbiB0aGUgVVMgcm9sZSBpbiBIYWl0aSwgYXMgcG9zdCBjb2xvbmlhbC4uIApQb3B1bGlzdCBwcm90ZXN0cyBpbiBDaGljYWdvIG1pZ2h0IGp1c3QgYmUgdGhlIGFsYXJtIHRoYXQgd2FrZXMgdXMgdXBXaG8ga25ldyB0aGF0IHRoZSBzY29yZSBmcm9tICJBbm5pZSIgY291bGQgYmUgYSByYWRpY2FsIGNyaXRpcXVlIG9mIGNvcnBvcmF0ZSBncmVlZD8gQWZ0ZXIgYWxsLCAiQW5uaWUiIHdhcyBhYm91dCBhIGhlcm9pYyByaWNoIGd1eSB3aG8gc2F2ZXMgYSBzaW5nbGUgb3JwaGFuIGdpcmwgZnJvbSBwb3ZlcnR5LiAKVW5sZXNzIHlvdSBhcmUgYSBub24gcHJvZml0LCB5b3UgbXVzdCBoYXZlIGEgT3JlZ29uIEdhbWluZyBsaWNlbnNlIHRvIHJ1biBtb25leSBnYW1lcy4gSG9tZSBnYW1lcyBhcmUgcHJpdmF0ZSBhbmQgbm90IHN1YmplY3QgdG8gYSBsaWNlbnNlLiBGcmVlIHBva2VyIGxlYWd1ZXMgYXJlIGV2ZXJ5d2hlcmUgaW4gUG9ydGxhbmQuIEdhbWVzIG91dHNpZGUgb2YgaG9tZXMgZm9yIGFueSB0eXBlIG9mIG1vbmV0YXJ5IG9yIGNhc2ggdmFsdWUgYXJlIGlsbGVnYWwgdW5kZXIgT3JlZ29uIGxhdyB1bmxlc3MgeW91IGhhdmUgYXBwbGllZCBmb3IgYSBub24gcHJvZml0IE1vbnRlIENhcmxvIGxpY2Vuc2UgZnJvbSB0aGUgZGVwYXJ0bWVudCBvZiBqdXN0aWNlIGFuZCBhcmUgZ3JhbnRlZCB0aGUgbGljZW5zZSB0byBob2xkIGFuIGV2ZW50IGZvciBmdW5kIHJhaXNpbmcgZm9yIHRoZSBub24gcHJvZml0IG9yZ2FuaXphdGlvbi4gSXQgYWxzbyByZXF1aXJlcyB0aGF0IG11c3QgdXNlIHN0YWZmIGZyb20gdGhhdCBub24gcHJvZml0IHRvIHJ1biB0aGUgZXZlbnQsIG5vdCB2b2x1bnRlZXJzIG9yIGhpcmUgYSBsaWNlbnNlZCBNb250ZSBDYXJsbyBjb250cmFjdG9yIHRoYXQgaXMgYWxzbyByZWdpc3RlcmVkIHdpdGggdGhlIFN0YXRlIG9mIE9yZWdvbiB0byBydW4gdGhlIGV2ZW50LiBUaGVyZSBhcmUgdmVyeSBzcGVjaWZpYyBsYXdzLCBsaW1pdHMgYW5kIHJ1bGVzIHRoYXQgbXVzdCBiZSBhZGhlcmVkIHRvIHVuZGVyIHRoZXNlIGxpY2Vuc2VzIGFuZCBmYWlsdXJlIHRvIG9idGFpbiB0aGUgcGVybWl0cyBvciBmb2xsb3cgdGhlc2UgcnVsZXMgbWF5IHJlc3VsdCBpbiBhIGZlbG9uaW91cyBhY3QgZm9yIHRob3NlIGludm9sdmVkLiBPcmVnb24gR2FtaW5nIGxpY2Vuc2VzIGFyZSBvbmx5IGdyYW50ZWQgdG8gY2FzaW5vcyBpbiB0aGUgc3RhdGUuICJTb2NpYWwgZ2FtaW5nIiBhbGxvd3MgZm9yIGEgdmVyeSBsaW1pdGVkIHJhbmdlIG9mIHBva2VyIGFuZCBwb2tlciB0b3VybmFtZW50cyBpbiBhIHBsYWNlIG9mIHB1YmxpYyBhY2Nlc3Mgb3IgYnVzaW5lc3MgT05MWSBJRiBhIGxvY2FsIGVuYWJsaW5nIGNpdHkgb3IgY291bnR5IG9yZGluYW5jZSBpcyBpbiBwbGFjZSBhbGxvd2luZyBmb3IgInNvY2lhbCBnYW1pbmciIFRoZSBDaXR5IG9mIFBvcnRsYW5kIGRvZXMgaGF2ZSBhbiBvcmRpbmFuY2UgZm9yICJzb2NpYWwgZ2FtaW5nIiBhbmQgaGFzIGxpY2Vuc2VkIGEgc21hbGwgaGFuZGZ1bCBvZiAic29jaWFsIGdhbWluZyIgY2x1YnMgd2l0aGluIHRoZSBjaXR5IGxpbWl0cy4gSUYgTk8gZW5hYmxpbmcgb3JkaW5hbmNlIGlzIGluIHBsYWNlIHRoZW4gc3RhdGUgbGF3IGFwcGxpZXMgd2hpY2ggcHJvaGliaXRzIGdhbWJsaW5nLCBwb2tlciwgcG9rZXIgZ2FtZXMgb3IgcG9rZXIgdG91cm5hbWVudHMuIChGdWxsIEFuc3dlcikKSXQgdHVybnMgb3V0IHlvdSBndXlzIGhhdmUgaGlnaGVyIHdhdHRhZ2UgbWljcm93YXZlcywgYW5kIHRoYXQgZGlyZWN0IGZyb3plbiA+bWljcm93YXZlIG1lYWxzIGFyZSBhIG5vcm1hbCB0aGluZyBvdmVyIHRoZXJlLCBhbmQgZXZlcnlvbmUgY29tcGxhaW5pbmcgaXMgZm9yIHNvbWUgcmVhc29uIG5vdCBmb2xsb3dpbmcgaW5zdHJ1Y3Rpb25zLiAKVGhlIHRoZXJhcGlzdCB3aWxsIGZvY3VzIG9uIGtuZWFkaW5nIG11c2NsZSBncm91cHMsIHRlbmRvbnMsIGxpZ2FtZW50cywgY29ubmVjdGl2ZSB0aXNzdWUsIGFuZCBqb2ludHMuIApDaHVuZHJpZ2FyIFJvYWQsIGJ1dCBmZXcgeW91bmdzdGVycyBmcm9tIEx5YXJpIGV2ZXIgZG8uIFRoaXMgcG9saWNlIG9wZXJhdGlvbiB3aWxsIGRlZXBlbiB0aGUgc2Vuc2Ugb2YgYWxpZW5hdGlvbiBpbiBMeWFyaS4uIApBcyBtdWNoIGFzIERpYWJsbyBpcyB0aGUgYWJzb2x1dGUgZGVmaW5pdGlvbiBvZiBwb2ludCBhbmQgY2xpY2ssIGl0IGFkYXB0cyBwcmV0dHkgcmVzcGVjdGFibHkgdG8gdGhlIGNvbnRyb2xsZXIsIGluIHRoYXQgY2FzZS4gCkRUb3duRm9yZXZlciAgW3Njb3JlIGhpZGRlbl0gIHN1Ym1pdHRlZCAxOSBob3VycyBhZ28KQWxzbyBkYXRhIHJldGVudGlvbiBkdWUgdG8gbm90ZXMgYmxhaCBibGFoLiAKRmluYWxseSBIb2xkZW0gUG9rZXIgdGFrZXMgY29tbWl0bWVudCBhbmQgcGF0aWVuY2UuIEV2ZW4gaWYgeW91IGVuZCB1cCB3aXRoIGEgcGFpciBvZiBBY2VzIG9yIEtpbmdzIGtub3cgdGhhdCB5b3Ugc2hvdWxkIG1vdmUgZm9yd2FyZCBhZ2dyZXNzaXZlbHkgd2l0aCBhIGhhbmQgbGlrZSB0aGlzLiAKR2VvZ3JhcGhpYyBzaXRlLCBlZHVjYXRpb24sIGdlbmRlciwgYW5kIGluY29tZSB3ZXJlIGluZGVwZW5kZW50IHBhdGllbnQgZmFjdG9ycyBwcmVkaWN0aW5nIGNoaXJvcHJhY3RpYyB1c2UuIAo3LjI6IExld2QgbG9saSBjb250ZW50IHdpbGwgbm90IGJlIHRvbGVyYXRlZC4gV2Ugd2lsbCByZW1vdmUgYW55IHBvc3RzLCBjb21tZW50cywgb3IgbGlua3MgdGhhdCBhcHBlYXIgdG8gYmUgaW4gdmlvbGF0aW9uIG9mIFJlZGRpdCBwb2xpY2llcy4gSW50ZW50aW9uYWxseSBkaXNyZWdhcmRpbmcgdGhpcyBydWxlIHdpbGwgcmVzdWx0IGluIGEgcGVybWFuZW50IGJhbi4KRm9yIGEgd2hpbGUgaGUgYmVjYW1lIG9mIGFsbCB0aGluZ3MsIGEgdGFpbG9yLiAKVHVya2lzaCB2aWxsYXMgPS89IHlvdXIgaWRlYSBvZiBBbWVyaWNhbi9XZXN0ZXJuIEV1cm9wZWFuIHZpbGxhcy4gVGhleSB3ZXJlIG9yIGJhaGVsaWV2bGVyIHRoYXQgaG91c2VkIHlvdSwgeW91ciBmYW1pbHksIHlvdXIgZ3JhbmRwYXJlbnRzLCBhbmQgbWF5YmUgYSBkYXlpL3RleXplLiBJdHMgZXh0ZW5kZWQgZmFtaWx5LCBzbyBpdCBpcyBub3QgYXMgaWYgdGhleSB3ZXJlIGp1c3QgMiBwZW9wbGUgd2l0aCAxIG9yIDIga2lkcy4gClNldGggTWlsbGVyLCBhIGpvdXJuYWxpc3Qgd2hvIHdyb3RlIGFib3V0IHRoZSBpc3N1ZSBpbiAyMDE3LCB0aGlua3MgdGhhdCBlcXVpcG1lbnQgbWFrZXJzIGRpZG4ndCBjb25zaWRlciB0aGUgcHJpdmFjeSBpbXBsaWNhdGlvbnMuIFRoZXJlIHdlcmUgYWxyZWFkeSBjYW1lcmFzIG9uIHBsYW5lcyAgIGFsdGhvdWdoIG5vdCBzbyBpbnRydXNpdmUgICBhbmQgdGhlIGNvbXBhbmllcyBhc3N1bWVkIHRoYXQgcGFzc2VuZ2VycyB3b3VsZCB0cmFkZSB0aGVpciBpbWFnZXMgZm9yIGNvbnZlbmllbmNlLCBhcyB0aGV5IGRvIHdpdGggZmFjaWFsIHJlY29nbml0aW9uIHRlY2hub2xvZ3kgYXQgaW1taWdyYXRpb24gY2hlY2twb2ludHMsIGhlIHNhaWQuLiAKUG9rZXJTdGFycyBhbGxvdyBVUyBwbGF5ZXJzLCBleGNlcHQgaW5XYXNoaW5ndG9uIFN0YXRlLiBTaW1wbHkgcHV0LCBhbGwgb25saW5lIHJvb21zIChhcyB3ZWxsIGFzIGxpdmUgY2FzaW5vcykgY2hhcmdlICdyYWtlJywgd2hpY2ggaXMgYSBwZXJjZW50YWdlIG9mIHRoZSBwb3QuIFJha2ViYWNrIGFsbG93cyB5b3UgdG8gZ2V0IHNvbWUgb2YgdGhpcyBtb25leSBiYWNrIGluIHRoZSBmb3JtIG9mICdyYWtlYmFjaycuIApJIG5vdCBzYXlpbmcgQnVybnMgaXNuIGJ1dCBpZiB5b3UgbG9vayBlbHNld2hlcmUgaW4gdGhpcyB0aHJlYWQgdGhlcmUgYXJlIGFyZ3VtZW50cyB0byBiZSBtYWRlIHRoYXQgaGUgaGFzIGhhZCBhbiBlYXNpZXIgcmlkZSB0aGFuIG90aGVyIGRlZmVuZGVycyBpbiB0aGUgbGVhZ3VlLgpBIGdyYXZlc2lkZSBzZXJ2aWNlIHdpbGwgYmUgaGVsZCBhdCBMaXR0bGUgQnJpY2sgQ2VtZXRlcnksIE9ybyBTdGF0aW9uIG9uIFR1ZXNkYXksIE1heSA2dGggYXQgMyBwbS4gCldoZW5ldmVyIChvciBob3dldmVyKSB5b3UgbG9zZSB3ZWlnaHQgb3Igc2l6ZSwgdGhlIG51bWJlciBvZiBmYXQgY2VsbHMgeW91IGhhdmUgd2lsbCByZW1haW4gdGhlIHNhbWUgICBpdCBpcyB0aGUgdm9sdW1lIG9mIHRoZSBjZWxscyB0aGF0IGNoYW5nZXMuIExpcG9zbGltIGFjdGl2YXRlcyBsaXBvbHlzaXMsIG1ha2luZyB5b3VyIGZhdCBjZWxscyBhcHBlYXIgc21hbGxlci4gSXQgZG9lcyB0aGlzIGJ5IGJyZWFraW5nIHVwIHRoZSBsaXBpZHMgaW5zaWRlIHRoZSBmYXQgY2VsbHMgaW50byB0aG91c2FuZHMgb2YgdGlueSBkcm9wbGV0cyB3aGljaCBncmFkdWFsbHkgZGlzc29sdmUgYW5kIHZpc2libHkgc2hyaW5rIHRoZSB2b2x1bWUgb2YgZmF0IGluIGVhY2ggY2VsbC4gClllcywgaXQncyBhIGh1Z2UgY2l0eSwgYW5kIHllcywgdGhlcmUgYXJlIHNvbWUgZGF5cyBvZiBwcmV0dHkgYmFkIHBvbGx1dGlvbiwgYnV0IEkgbGl2ZSBpbiBhbm90aGVyIGNpdHkgY2xvc2UgdG8gU2hhbmdoYWkgbm93IGFuZCB0aGUgcG9sbHV0aW9uIGhlcmUgaXMgcHJldHR5IG11Y2gganVzdCBhcyBiYWQgYXMgaW4gQmVpamluZy4gClRvZGF5LDEgaW4gMTMzIHBlb3BsZSBoYXZlIGNlbGlhYyBkaXNlYXNlLCBhIGdlbmV0aWNhbGx5IGxpbmtlZCwgYXV0b2ltbXVuZSByZXNwb25zZSB0byBnbHV0ZW4uIEZhc2FubyBhYm91dCBnbHV0ZW4sIG91ciBib2RpZXMnIHJlc3BvbnNlKHMpIHRvIGl0LCBhbGxlcmdpZXMsIENlbGlhYyBEaXNlYXNlLCBhbmQgd2hhdCBEci4gRmFzYW5vIGNhbGxzICJ0aGUgbmV3IGtpZCBvbiB0aGUgYmxvY2ssIiBHbHV0ZW4gU2Vuc2l0aXZpdHkuIApDb29wZXJhdGlvbiBDb3VuY2lsIGZvciB0aGUgQXJhYiBTdGF0ZXMgb2YgdGhlIEd1bGYKU3RhdGUgQ2hhbXBpb25zaGlwIFNhdHVyZGF5IFJlc3VsdHNTdGF0ZSBDaGFtcGlvbnNoaXAgU2F0dXJkYXkgUmVzdWx0c0hpZ2ggc2Nob29sIHRlYW1zIGNvbXBldGVkIGZvciBjaGFtcGlvbnNoaXBzIG9uIFNhdHVyZGF5LgpUaGUgc2VydmljZSBncmluZHMgb24gYnV0IEkgc3RpbGwgdW5hYmxlIHRvIHNpdCBzdGlsbCBkZXNwaXRlIHRoZSB0cmFucXVpbCBtdXNpYyBhbmQgdGhlIGFuZ2VsaWMgdm9pY2VzLiAKTW9tZW50cyBsaWtlIHRoYXQganVzdCBsZXRzIHlvdSBrbm93IHRoYXQgdGhlcmUgYXJlIHBlb3BsZSBvdXQgdGhlcmUgd2hvIHBsYXkgZm9yIGZ1bi4gSW4gb3VyIGNhc2Ugd2UgbGlrZSB0byBwcm92aWRlIGEgbmljZSBwbGF5aW5nIGFyZWEgZm9yIG91ciBmcmllbmRzIGFuZCBmYW1pbHksIG9yIGFueW9uZSBlbHNlIHdobyBzdG9wcyBieS4gU28gd2hlbiB3ZSB3ZXJlIHJlYWR5IHRvIHVwZ3JhZGUgb3VyIHBva2VyIGFjY2Vzc29yaWVzLCB0aGUgMjAwIFBva2VyIENoaXAgVHJpIENvbG9yIFN1aXQgU2V0IHdpdGggQ2xlYXIgQWx1bWludW0gQ2FzZSBjYW1lIGFjcm9zcyBvdXIgcGF0aC4gTm93LCBzaW5jZSBKYXF1aWUgYW5kIEkgaGF2ZSBmYW50YXN0aWMgZmFzaGlvbiBzZW5zZSwgd2Ugd2FudGVkIGEgc2V0IHRoYXQgb2ZmZXJlZCBjb2xvciBjaG9pY2VzLiBJbiB0aGlzIGNhc2Ugd2Ugd2VyZSBhYmxlIHRvIG1hdGNoIHRoZSBwb2tlciBjaGlwcyB0byB0aGUgdGhlbWUgb2Ygb3VyIGZpbmlzaGVkIGJhc2VtZW50LgpSdWxlIG5vLjkgICBJcyBib3JkZXJsaW5lIGFjY2VwdGFibGUsIGV4Y2VwdCBmb3IgdGhpcyBzZW50ZW5jZSAiIC9yL2FydCBpcyBub3QgYSBwbGFjZSB0byBzZWxsIHlvdXIgd29yayBvciBncm93IHlvdXIgZm9sbG93aW5nIiBMaWtlLCByZWFsbHk/IFdoeSBldmVuIGFkZCB0aGF0IGluPyBJIGJlZ2lubmluZyB0byB0aGluayB0aGUgY3JlYXRvciBvZiB0aGVzZSBydWxlcyBpcyBqdXN0IGEgbmVnYXRpdmUgbXkgd2F5IG9yIHRoZSBoaWdod2F5IHR5cGUgb2YgcGVyc29uLCB0aGlzIGlzIG9uZSBvZiB0aGUgYmVzdCBwbGFjZXMgdG8gZ3JvdyBhbiBhcnQgZm9sbG93aW5nLgpCYWF6b3YgbGF3eWVyLCBTb3BoaWUgTWVsY2hlcnMsIGhhcyBzYWlkIHRoYXQgMTYgbWlsbGlvbiBmaWxlcyB3ZXJlIHJlbGVhc2VkIHRvIHRoZSBkZWZlbmNlIGluIG1pZCBTZXB0ZW1iZXIgYW5kIHRoYXQgdGhlIGNhc2Ugd29uIGJlIGFibGUgdG8gcHJvY2VlZCBpbiBhIHRpbWVseSBmYXNoaW9uLgpFeHBlcmllbmNlZCBwb2tlciBwbGF5ZXJzIG1heSBzZWxlY3Qgb25saW5lIHBva2VyIHRvdXJuYW1lbnRzIHdpdGggZ3VhcmFudGVlZCBwcml6ZSBwb29sIGluIHRoZSByYW5nZSBvZiB1cCB0byAkIDEwMCwwMDAgaW4gZGFpbHkgYXNzdXJhbmNlcy4gCkkgd2FzIDE5IGFuZCBJIHdhcyB0YXNrZWQgd2l0aCB0aGUgam9iIG9mIGludGVydmlld2luZyBwb3RlbnRpYWwgaGlyZXMuIE15IGZpcnN0IGludGVydmlldyBJIG5vdGljZWQgdGhlIGdpcmwgY29taW5nIGluIHdhcyBuZXJ2b3VzIGFzIGZ1Y2sgYW5kIEkgd2FzIGp1c3QgbGlrZSAid2hhdCB0aGUgaGVsbCBpcyBzaGUgc28gbmVydm91cyBmb3IsIEknbSBqdXN0IHNvbWUgMTkgeWVhciBvbGQgc2NobXVjayIgYW5kIG1ha2luZyB0aGF0IGNvbm5lY3Rpb24gdGhhdCBib3RoIHNpZGVzIG9mIHRoZSBzaXR1YXRpb24sIGludGVydmlld2VyIGFuZCBpbnRlcnZpZXdlZSBhcmUgYm90aCBwZW9wbGUuIApJdCBkb2VzIG5vdCBpbmNsdWRlIGRhdGEgd2hlcmUgdGhlIGlkZW50aXR5IGhhcyBiZWVuIHJlbW92ZWQgKGFub255bW91cyBkYXRhKS4gSW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBDaGlsZHJlbidzIE9ubGluZSBQcml2YWN5IFByb3RlY3Rpb24gQWN0IHdlIGRvIG5vdCBrbm93aW5nbHkgY29sbGVjdCBvciBzdG9yZSBhbnkgUGVyc29uYWwgSW5mb3JtYXRpb24gZm9yIGNoaWxkcmVuIHVuZGVyIHRoZSBhZ2Ugb2YgMTMuIElmIHlvdSBhcmUgdW5kZXIgMTMsIHBsZWFzZSBkbyBub3QgcHJvdmlkZSB1cyBhbnkgcGVyc29uYWxseSBpZGVudGlmeWluZyBpbmZvcm1hdGlvbi4uIApJdCB1c3VhbGx5IGEgcXVlc3Rpb24gb2YgaG93IG11Y2ggZmVsdCBpcyBvbiB0aGUgYmFsbC4gWW91IGtub3cgdGhvc2Ugc3RyYW5kcyB0aGF0IHN0aWNrIG91dCBvZiB0aGUgYmFsbCA/IFRoZSBtb3JlIHRoZXJlIGFyZSwgdGhlIG1vcmUgdGhlIGJhbGwgd2lsbCBiZSBhZmZlY3RlZCBieSBzcGluLiBTbyBpZiB5b3Ugd2FudCB0byBnbyBmb3Igc3BlZWQsIHBpY2sgdGhlIGJhbGwgd2l0aCB0aGUgbGVzcyBmZWx0LiBJZiB5b3Ugd2FudCB0byBkbyBhIGtpY2sgc2VydmUsIGdvIGZvciB0aGUgYmFsbCB3aXRoIHRoZSBtb3N0IGZlbHQuCkljaCBob2ZmZSwgYmVpbSBuY2hzdGVuIE1hbCBtZWhyIHNpbm52b2xsZXMgenUgYmVyaWNodGVuLCBiaXMgZGFoaW4sClRoZSBZb3Jrc2hpcmUgVGVycmllciBpcyBvbmUgb2YgdGhlIG1vc3QgbG92ZWQgdG95IGRvZ3MuIFdoaWxlIHRoZXkgYXJlIGFzIGN1ZGRseSBhcyBhbnkgb3RoZXIgbGFwZG9nLCBZb3Jrc2hpcmUgVGVycmllcnMgYXJlIGFsc28gc21hbGwgZG9ncyB3aXRoIGEgYmlnIGF0dGl0dWRlLiBUaGV5IGNhbiBiZSBwcm91ZCBhbmQgc3R1YmJvcm4sIGlmIGxlZnQgd2l0aG91dCBwcm9wZXIgb2JlZGllbmNlIHRyYWluaW5nLiBOZXZlcnRoZWxlc3MsIGEgWW9ya3NoaXJlIHRlcnJpZXIgd2l0aCBnb29kIHRlbXBlcmFtZW50IHdpbGwgbWFrZSB0aGUgcGVyZmVjdCBhcGFydG1lbnQgZG9nICAgc21hbGwsIHNvY2lhYmxlIGFuZCBlbmpveXMgYmVpbmcgaW4gdGhlIG1pZHN0IG9mIGEgYnVzdGxpbmcgbGlmZXN0eWxlLgpNYWlzIHZvaWwgbGVzIGdlbnMgbmUgc2F2ZW50IHBsdXMgb3UgbmUgdmV1bGVudCBwYXMgbGlyZS4gSWwgbGV1ciBmYXV0IGRlcyAidmlkb3MiIG9yIGwnYXVkaW8gdmlzdWVsIHRyYXZhaWxsZSBzdXIgbCdpbGx1c2lvbiwgbGEgc2R1Y3Rpb24gcGFyIGwnbW90aW9ubmVsLiAKTWVtYmVycyBvZiBDUEFWIGNvbnRlbmQgdGhhdCBBcmthbnNhbnMsIGV2ZW4gdGhlIG1vc3QgYXJkZW50IGdhbWJsaW5nIHN1cHBvcnRlcnMsIHdpbGwgYmUgdW53aWxsaW5nIHRvIGdpdmUgYW55IGVudGl0eSB0aGUgZXhjbHVzaXZlIHJpZ2h0IHRvIG93biBhbmQgb3BlcmF0ZSBjYXNpbm9zIHdpdGhvdXQgc3RhdGUgb3ZlcnNpZ2h0IGFuZCByZWd1bGF0aW9uLiAKVGhlIGdvb2QgbmV3cyBpcyBubyBvbmUgaGFkIGEgcHJvYmxlbSB3aXRoIGl0IGVpdGhlci4uIApJdCBpcyBuYSB0byBleHBlY3QgdGhhdCB0aGVyZSB3aWxsIGJlIGFueSBmb2xsb3cgdXAgb3Igb2ZmaWNpYWwgcHJvYmUgdW5sZXNzIHRoZSBuZXcgYXJteSBjaGllZiwgdGhlIG1hbiBhZ2FpbnN0IHdob20gdGhpcyBhdHRhY2sgd2FzIGRpcmVjdGVkLCBkZXNpcmVzIG90aGVyd2lzZSwgd2hpY2ggaXMgdW5saWtlbHkgdG8gaGFwcGVuIGNvbnNpZGVyaW5nIGhpcyBwcmVmZXJlbmNlIGZvciBjb21wYXNzaW9uIG92ZXIgdGhlIG90aGVyIGJhc2ljIGluc3RpbmN0cyB0aGF0IHNvbWUgb2YgaGlzIHByZWRlY2Vzc29ycyBhcmUgaW5mYW1vdXMgZm9yLi4gClRyYWRpdGlvbmFsIGJ1cmlhbCBtZXRob2RzIHVzdWFsbHkgcmVxdWlyZSBjdXR0aW5nIGRvd24gdHJlZXMgZm9yIGNvZmZpbnMsIG1pbmluZyByb2NrIGZvciBoZWFkc3RvbmVzIGFuZCBjb25jcmV0ZSBiYXJyaWVycywgYW5kIHRoZSBwcm9kdWN0aW9uIG9mIGNoZW1pY2FscyBsaWtlIGZvcm1hbGRlaHlkZSBmb3IgZW1iYWxtaW5nIGZsdWlkLgpJdCBsaWtlIGdpdmluZyBvZmYgYSBmYWtlIHRlbGwgd2hpY2ggTWlrZSBDYXJvIG1lbnRpb25zIGluIFBva2VyIEJvb2sgb2YgVGVsbHMuLiAKTm8gY2hhbmNlLCBzYXlzIER3aWdodCBCeWVycywgZGlyZWN0b3Igb2YgdGhlIEludGVybmF0aW9uYWwgSW5zdGl0dXRlIG9mIFJlZmxleG9sb2d5LiAKRXZlbiBpZiBpbiB5b3VyIGhlYWQgeW91IGRvbiBsaWtlIGhvdyB5b3UgbG9vayB5b3UgaGF2ZSB0byBiZWxpZXZlIHRoYXQgYnkgYmVpbmcgYSBnb29kIHBlcnNvbiBvdGhlcnMgd2lsbCBiZSBhdHRyYWN0ZWQgdG8geW91LiBVZ2x5IGlubmFyZHMgbWFrZSB1Z2x5IHBlb3BsZSwgYW5kIHRoZSByZXZlcnNlIGlzIGFsc28gdHJ1ZS4gCkEgY291cGxlIG9mIGh1bmRyZWQgYmV0dG9ycyB3YXRjaCBmcm9tIGFpciBjb25kaXRpb25lZCBzdGFuZHMgYnVpbHQgZm9yIHRob3VzYW5kcy4gTGVhbiBzcGVlZCBtYWNoaW5lcyB3aXRoIG5hbWVzIGxpa2UgQnVsbCBHYXRvciBhbmQgT3BlbiBUaHJvdHRsZSBjaGFzZSBhIG1lY2hhbmljYWwgbHVyZSBmb3IgYSB0aGlyZCBvZiBhIG1pbGUgKDQ1MCBtZXRlcnMpLCB0aGVpciBsb25nIHN0cmlkZXMgcHJvcGVsbGluZyB0aGVtIHBhc3QgNDAgbXBoICg2NSBrcGgpLiBUaGUgZ3JleWhvdW5kcyBjcm9zcyB0aGUgZmluaXNoIGxpbmUgd2l0aCB0YWlscyB3YWdnaW5nICAgZXhjZXB0IGZvciB0aGUgb2NjYXNpb25hbCBpbmp1cmVkIGRvZyBjYXJyaWVkIG9mZiBieSB3b3JrZXJzLgpTaWkgdG90YWxlLCBjaW8gY29tcGxldGFtZW50ZSBwcmVzZW50ZSBhIGNpIGNoZSBzdGFpIGZhY2VuZG8uIApJdCBkaWQgbm90IHByb3Bvc2UgdGFraW5nIDEgZ3VuIGF3YXkgZnJvbSBhbnlvbmUsIGFuZCBpdCBkaWQgbm90IGJhbiBhbGwgZ3Vucy4gSXQgc2VlbXMgbGlrZSB5b3UgYXJlIGp1c3QgZG9pbmcgbWVudGFsIGd5bW5hc3RpY3Mgbm93IGFzIGFuIGV4Y3VzZSB0byBub3Qgdm90ZSBEZW1vY3JhdC4gSWYgeW91IGFncmVlIHdpdGggZXZlcnkgb3RoZXIgaXNzdWUgdGhhdCBEZW1vY3JhdHMgYmVsaWV2ZSBpbiBhc2lkZSBmcm9tIHRoaXMgb25lLCB3aHkgbm90IGp1c3Qgc3VwcG9ydCBhIERlbW9jcmF0IHdpdGggZ3VuIHZpZXdzIG1vcmUgYWxpZ25lZCB3aXRoIHlvdXJzPyBFdmVuIGlmIHNvbWUgRGVtb2NyYXRzIGRpZCBiZWxpZXZlIGluIHRha2luZyBhbGwgdGhlIGd1bnMgYXdheSwgaXQgbm90IGxpa2UgYWxsIG9mIHRoZW0gZG8uCk1vc3QgRGlmZmljdWx0IFBhcnQgb2YgSm9iIEEgcmVzdGF1cmFudCBtYW5hZ2VyIG1pZ2h0IHRyeSB0byB0ZXN0IHlvdXIgaW5kdXN0cnkga25vd2xlZGdlIGJ5IGFza2luZywgIldoYXQgaXMgdGhlIG1vc3QgY2hhbGxlbmdpbmcgYXNwZWN0IG9mIHJlc3RhdXJhbnQgd29yaz8iIFdoaWxlIHRoZXJlIG1pZ2h0IGJlIHNldmVyYWwgYXBwcm9wcmlhdGUgcmVzcG9uc2VzLCBjb25zaWRlciBhIHJlc3BvbnNlIGFib3V0IGN1c3RvbWVycy4gCkkgZG9uIHRoaW5rIGVub3VnaCBhdHRlbnRpb24gaXMgYmVpbmcgcGFpZCB0byBteSBkaXN0cmljdCAoU0MxKSBmbGlwcGluZyBkZW1vY3JhdC4gSGFzbiBiZWVuIGRvbmUgc2luY2UgMTk4MS4gCkQgNyBwcm9wZXJ0eSBtYW5hZ2VtZW50IGlzIGFuIGFic29sdXRlIG5pZ2h0bWFyZSB0byBkZWFsIHdpdGguIEkgYmVsaWV2ZSB0aGVpciBzcGVjaWFsdHkgaXMgcnVuIGRvd24gb2xkZXIgYnVpbGRpbmdzIHRoYXQgYXJlIHBvb3JseSBtYWludGFpbmVkLiBUaGV5IGhhdmUgaGFkIGEgInRlbXBvcmFyeSAiIHNjYWZmb2xkIG91dHNpZGUgYSBidWlsZGluZyBvbiBob21lIHN0cmVldCBmb3Igb3ZlciB0aHJlZSB5ZWFycy4gClNoZSBleHBsYWluZWQgdGhhdCBzaGUgd2FzIG9uIHRvcCBvZiBhIGJhbmsgb2YgbG9ja2VyIGluIGhpZ2ggc2Nob29sIGhhbmdpbmcgYSBiYW5uZXIuIFdoZW4gc2hlIGp1bXBlZCBvZmYgdGhlIGxvY2tlciBiYW5rLCBzaGUgZ290IGEgcmluZyBvbiBoZXIgZmluZ2VyIHN0aWNrIG9uIHRoZSB0b3Agb2YgdGhlIGxvY2tlciBiYW5rLiAKS2VlcCB0aGlzIG1vdmllIGF3YXkgZnJvbSB5b3VyIGZhbWlseSBhbmQgeW91cnNlbGYuIApJIGxlYXJuZWQgaXMgdGhhdCBpZiBteSBoYWlyIGlzIGJsb25kZXIgdGhhbiAiZGFyayBibG9uZCIgcGVvcGxlIHRyZWF0IG1lIGRpZmZlcmVudGx5ICBhcyBpZiBJIHN0dXBpZCBvciBhIGNoaWxkLiAKV2hlbiBwaG90b3N5bnRoZXRpYyBvcmdhbmlzbXMgYmVnYW4gc3Bld2luZyBveHlnZW4gaW50byB0aGUgYWlyLCBhIHBvaXNvbm91cyBnYXMsIGl0IGtpY2tlZCBvZmYgb25lIG9mIHRoZSBiaWdnZXN0IG1hc3MgZXh0aW5jdGlvbnMgb24gcmVjb3JkLiBXZSBkb24ndCBjb25zaWRlciB0cmVlcyBldmlsIGZvciB0aGF0LiBXZSBkb24ndCBjb25zaWRlciBiZWF2ZXJzIGV2aWwgZm9yIHJhemluZyBmb3Jlc3RzIHdpdGggdGhlaXIgYmFyZSB0ZWV0aCBhbmQgZmxvb2Rpbmcgb3RoZXJ3aXNlIG5pY2Ugc3RyZWFtcy4gV2UgZG9uJ3QgaG9sZCBjYXJpYm91IGFjY291bnRhYmxlIGZvciBhbGwgdGhlIGdyYXNzIHRyYW1wbGluZyBhbmQgZWF0aW5nIGluIHRoZSB0dW5kcmEgd2hpY2ggZHJhc3RpY2FsbHkgYWx0ZXJzIHRoYXQgbGFuZHNjYXBlLgpIZWxwcyByZWR1Y2Ugb2NjdXJyZW5jZSBvZiBpbmp1cmllcyBhbmQgc29yZW5lc3MKQmFua3MsIERyLiAKQW5kIHJlZ2FyZGluZyBzaG9jayB2YWx1ZTogU28gZXZlcnl0aGluZyB0aGF0IGNvdWxkIG9mZmVuZCBzb21lb25lIHNob3VsZCBvbmx5IGJlIGltcGxpZWQ/IEhvdyBib3JpbmcuIEFuZCBpbiBteSBvcGluaW9uLCB0aGVyZSBhcmUgcGxlbnR5IG9mIHJlYW9ucyB0byB3cml0ZSBleHBsaWNpdCByYXBlIHNjZW5lcyBvdGhlciB0aGFuIHNob2NrIHZhbHVlLiBKdXN0IGFzIHRoZXJlIGFyZSBwbGVudHkgb2YgcmVhc29ucyB0byB3cml0ZSBhbnl0aGluZyBhdCBhbGwgaW4gYW4gZXhwbGljaXQgbWFubmVyLiAKTWV0YSByZWdyZXNzaW9uIGFuYWx5c2VzIHdlcmUgdXNlZCB0byBhc3Nlc3MgYXNzb2NpYXRpb25zIGJldHdlZW4gZWZmZWN0IHNpemVzIGFuZCBxdWFsaXR5LCBzZXNzaW9uIG51bWJlciBhbmQgaG91cnMsIGF0dHJpdGlvbiByYXRlcyBhbmQgcGVyY2VudGFnZSBvZiBtZW4gaW4gdGhlIHNhbXBsZS4gU2Vuc2l0aXZpdHkgYW5hbHlzZXMgd2VyZSBwZXJmb3JtZWQgdG8gcmVtb3ZlIHN0dWRpZXMgdGhhdCBwcm92aWRlZCBmb2xsb3cgdXAgZGF0YSBvbmx5LiAKU3R1ZGllcyB3aXRoIGFuaW1hbHMgaGF2ZSBzaG93biBpbW1vYmlsaXR5IGlzIGEgc2VwYXJhdGUgcmlzayBmYWN0b3IgZm9yIG5lZ2F0aXZlIGVmZmVjdHMgb24gaGVhbHRoLiAiVGhpcyBpcyB0aGUgZmlyc3QgcGllY2Ugb2Ygb2JqZWN0aXZlIGV2aWRlbmNlIHRoYXQgY29ycm9ib3JhdGVzIHRoZSBhbmltYWwgZGF0YSwiIER1bmxvcCBzYWlkLgpUaGUgJDcuNDcyIG1pbGxpb24gInRvdGFsIGFtb3VudCBsb3N0IGJ5IHBsYXllcnMiIGlzIHNwcmVhZCBhY3Jvc3MgZml2ZSB2ZW51ZXMgaW4gdGhlIFdvZG9uZ2EgbG9jYWwgZ292ZXJubWVudCBhcmVhLiAKT1AsIHNocmlua2luZyBhIGRpc2sgYXQgdGhlIE9TIGxldmVsIGhhcyBhbHdheSBiZWVuIGEgZGFuZ2Vyb3VzIHRoaW5nIHRvIGRvLCB3aGljaCBpcyB3aHkgaXQgZ2VuZXJhbGx5IGlzbiBlYXN5IHRvIGRvLiAKTGF0ZXIgdGhlIHByZXNpZGVudCBpbnZva2VkIG9uZSBvZiB0aGUgbmF0aW9uJ3MgbW9zdCBub3RvcmlvdXMgY3JpbWluYWxzLCAxOTIwcyBnYW5nc3RlciBBbCBDYXBvbmUsIGFuZCBwb3NlZCB0aGUgcXVlc3Rpb24gIndobyB3YXMgdHJlYXRlZCB3b3JzZSIgd2hpbGUgYWlyaW5nIGhpcyBncmlldmFuY2UgYWJvdXQgTWFuYWZvcnQgYmVpbmcgaGVsZCBpbiBzb2xpdGFyeSBjb25maW5lbWVudCBhaGVhZCBvZiBhIGNvbnZpY3Rpb24uIApCaWxsaW9uYWlyZSBDYXJsIEljYWhuIHdhbnRzIENhZXNhcnMgRW50ZXJ0YWlubWVudCB0byBzZWxsIGl0c2VsZiBCaWxsaW9uYWlyZSBpbnZlc3RvciBDYXJsIEljYWhuIGRpc2Nsb3NlZCBoZSBoYXMgdGFrZW4gYSAxMCBwZXJjZW50IHN0YWtlIGluIENhZXNhcnMgRW50ZXJ0YWlubWVudCBhbmQgaXMgcHVzaGluZyB0aGUgY2FzaW5vIGdpYW50IHRvIHNlbGwgaXRzZWxmLiBUaGUgYWN0aXZpc3QgaW52ZXN0b3Igc2FpZCBoZSB3YW50cyAuIGVtcGxveWVycyBmb3IgZGl2ZXJzaXR5LiBNR00gUmVzb3J0cyBJbnRlcm5hdGlvbmFsIGFuZCBXeW5uIFJlc29ydHMgcmFua2VkIDI2M3JkIGFuZCAzNjZ0aCwgcmVzcGVjdGl2ZWx5LCBvbiB0aGUgLgpTdXJlLCBpdCBDYW5hZGEgYW5kIHdpbnRlciBoYXBwZW5zLiBCdXQgaXQgQ0FOQURBLiBZb3Ugc2hvdWxkIGtub3cgaG93IHRvIGNsZWFyIGEgc2lkZXdhbGsgYnkgbm93LgpUaGUgcHJvYmxlbXMgd2l0aCB0aGUgb2xkZXIgc2lzdGVyIHdlbnQgYmFjayBmdXJ0aGVyOiBzaGUgaGFkIGJlaGF2aW9yYWwgcHJvYmxlbXMgZ3Jvd2luZyB1cCBhbmQgYmFyZWx5IGdyYWR1YXRlZCBoaWdoIHNjaG9vbC4gV2hlbiBzaGUgbW92ZWQgYmFjayBob21lIHNoZSBiYXNpY2FsbHkgc2hvcHBlZCBvbmxpbmUgYW5kIHNhdCBvbiBzb2NpYWwgbWVkaWEgYWxsIGRheSwgYW5kIHNsZXB0IGEgbG90LiAKSXQgaXMgbm90IHRoZSBMZWZ0cyBqb2IgdG8gZGVyYWRpY2FsaXplLCB0aGV5IGp1c3QgbmVlZCB0byBob25lc3RseSBkaXNhZ3JlZSBhbmQgbm90IGxlYW4gaW50byBoeXBlcmJvbGljIGRlaHVtYW5pemluZyBwcmFjdGljZXMuIApHZXQgdHJhdmVsIGJyb2NodXJlcyBhbmQgYSBtYXAuIFlvdSBtaWdodCBoYXZlIGJlZW4gbGl2aW5nIGZvciBhZ2VzIGluIHlvdXIgY3VycmVudCB0b3duIHlldCBoYXZlIG5vIGlkZWEgdGhhdCBpdCdzIGFjdHVhbGx5IGhvbWUgdG8gb25lIG9mIHRoZSBiZXN0IHJpdmVyc2lkZSB2aWV3cyBpbiB5b3VyIGNvdW50cnkuIFRha2UgeW91ciB0aW1lIHRvIGRvIHNvbWUgcmVzZWFyY2ggYWJvdXQgeW91ciB0b3duIChhbmQgbmVhcmJ5IG9uZXMgYXMgd2VsbCkgdG8gZ2V0IGFjcXVhaW50ZWQgd2l0aCB0aGUgYXR0cmFjdGlvbnMgdGhhdCB5b3UgbmV2ZXIga25ldyBhYm91dCBiZWZvcmUuIExvb2sgdXAgeW91ciB0b3duIGF0dHJhY3Rpb25zIG9ubGluZSwgb3IgYXNrIGZvciB0cmF2ZWwgYnJvY2h1cmVzIGZyb20geW91ciBsb2NhbCB0b3VyaXN0IGluZm9ybWF0aW9uIGNlbnRlci4gRXhwYW5kIHlvdXIgc2VhcmNoIHRvIHRoZSBzdXJyb3VuZGluZyBhcmVhcyAoYXJvdW5kIDEgdG8gMiBob3VycyBkcml2ZSBhd2F5KSBhbmQgYmUgcGxlYXNhbnRseSBzdXJwcmlzZWQgYXQgeW91ciBkaXNjb3Zlcmllcy4KVGhlIHRydXRoIGlzIHdlIGRvbid0IHBsYXkgYSBsb3Qgb2YgcG9rZXIgYW55bW9yZS4gCkhlIHdhcyBhbHNvIHByZWNlZGVkIGluIGRlYXRoIGJ5IHR3byBicm90aGVycywgTmVsc29uIEMuIFdpbGxpYW1zIGFuZCBHZW9yZ2UgUi4gCkFsbCBvZiBvdXIgdGFzdGVyIHNlc3Npb25zIGFyZSBjb21wbGV0ZWx5IGZyZWUgYW5kIGFsbCBsb2NhdGVkIGF0IFN1dHRvbiBCb25pbmd0b24gb24gYSBmaXJzdCBjb21lIGZpcnN0IHNlcnZlZCBiYXNpcy4KUGFpbiBkaWRuIGdvIGF3YXksIGtlcHQgc2thdGluZyB0aHJvdWdoIGl0IGZvciBhIGNvdXBsZSBtb250aHMuIEZpbmFsbHkgZGVjaWRlIHRvIGdldCBuZXcgc2thdGVzIGFuZCBJIG9yZGVyZWQgMTEuNSBOZXh1cywgMTIgTmV4dXMsIGFuZCAxMiBTdXByZW1lIHRvIHRyeSAobm8gb25lIGhhcyBhbnl0aGluZyB0byB0cnkgb24gaW4gbXkgc2l6ZSBhcm91bmQgbWUpLiBUaGUgbmV4dXNlcyB3ZXJlIHRvbyBiaWcsIGJ1dCB0aGUgU3VwcmVtZSB3YXMgcGVyZmVjdC4gCkNvbGxlY3RpdmVseSwgVGhlIEtpZHMgaGF2ZSBubyBjaGlsZHJlbiwgYnV0IGhhdmUgYSBiaWcgeWVsbG93IGNhdCAgIHdobyBJIHJlZmVyIHRvIGFzIG15IEdyYW5kIEtpdHR5LkkgbGl2ZSBpbiBhIGh1Z2UgYXBhcnRtZW50IGJ1aWxkaW5nLCBpbiBhIGJyaWdodCwgc3BhY2lvdXMgYXBhcnRtZW50IG9uIHRoZSAxMHRoIGZsb29yLCB3aXRoIHdvbmRlcmZ1bCB2aWV3cy4gCllvdSdkIGhhdmUgdG8gYmUgZGVsdXNpb25hbCB0byBhbnRpY2lwYXRlIHRoYXQgc29tZXRoaW5nIGxpa2UgdGhpcyB3b3VsZCBoYXBwZW4gd2hlbiB5b3UgZW1iYXJrIG9uIGEgcHJvamVjdCBsaWtlIHRoaXMuIEkgY2FtZSBpbiB3aXRoIG5vIGV4cGVjdGF0aW9ucyBhbmQgSSBkaWRuJ3Qga25vdyBhbnl0aGluZyBhYm91dCBwb2tlciBhbmQgaGFkIHplcm8gYmFja2dyb3VuZC4gSSBkaWRuJ3QgZ3Jhc3Agd2hhdCBhIGNvbXBsZXggZ2FtZSBpdCB3YXMgd2hlbiBJIGdvdCBpbnRvIGl0LiAKU3dlZGlzaCBNYXNzYWdlIEJhY2ssIE5lY2sgU2hvdWxkZXJzICAgMzAgbWludXRlcyAgMTguNTAgRnVsbCBCb2R5ICAgNjAgbWludXRlcyAgMzIuNTAKT3RoZXIgc3R1bnRzIGluY2x1ZGUgYW4gYWQgZm9sbG93aW5nIHRoZSBtdWNoIHB1YmxpY2l6ZWQgJDQ1MCBtaWxsaW9uIHNhbGUgb2YgRGEgVmluY2kncyAiU2FsdmF0b3IgTXVuZGksIiB3aGljaCBzdWdnZXN0ZWQgdGhhdCB0aGUgbmV3IG93bmVyIG1vdW50IGl0IGluIGFuIElrZWEgZnJhbWUuLiAKQWxsIFlvdSBoYXZlIHRvIGRvIGlzIHRvIG9wZW4gYW4gYWNjb3VudCBhdCBhIHBva2VyIHJvb20gb24gd2hpY2ggWW91IGhhdmUgbm90IHBsYXllZCBiZWZvcmUuIApJIGhhdmUgYmVlbiB0aHJvdWdoIGl0IGFsbCB3aGVuIGl0IGNvbWVzIHRvIGhlYXJ0LgpUYWtlIHRoZSBleGFtcGxlIG9mIHBsYW50YXIgZmFzY2lpdGlzLCBhIGNvbW1vbiBpbmp1cnkgdGhhdCBpcyBjaGFyYWN0ZXJpemVkIGJ5IHBhaW4gYW5kIGluZmxhbW1hdGlvbiBvZiB0aGUgZmFzY2lhIHRoYXQgcnVucyBmcm9tIHRoZSB0b2VzIHRvIHRoZSBoZWVsLiAKT24gc2l0ZSBhbWVuaXRpZXMgaW5jbHVkZSBhIHJlc3RhdXJhbnQsIGNvY2t0YWlsIGxvdW5nZSwgZml0bmVzcyBjZW50ZXIsIGdpZnQgc2hvcCBhbmQgb3V0ZG9vciBwb29sLiAKQWxzbyBteSBlbnRpcmUgYmFnIG9mIEhhbGxvd2VlbiBjYW5keSB3YXMgdG8gYmUgcmF0aW9uZWQgdG8gb25lIGEgd2Vlay4gSSBqdXN0IGdvdCByZWFsbHkgZ29vZCBhdCBwYWxtaW5nIGNhbmR5LiBNeSBjaGlsZGhvb2QgaXMgYSBzZXJpZXMgb2YgbWV0YXBoeXNpY2FsIG9yIGhlYWx0aCBmYWRzIG9mIGhlcnMgSSB3YXMgZm9yY2VkIHRvIGdvIGFsb25nIHdpdGggb3Igc2hlIHdvdWxkIGxvc2UgaGVyIHNoaXQgYXQgbWUuLiAKR3JlZW53YWxkIGlzIGEgaGFjayBhbmQgd2lsbCBkaXNyZWdhcmQgam91cm5hbGlzdGljIHN0YW5kYXJkcyB0byBjYXRlciB0byBhc3N1bXB0aW9ucyBhbmQgb3BpbmlvbnMgb2YgaGlzIHJlYWRlcnMuIFRoaXMgZ29lcyBiYWNrIGVhcmx5IGluIGhpcyBjYXJlZXIgdG8gd2hlbiBoZSB3YXMgY2F1Z2h0IHVzaW5nIHNvY2twdXBwZXQgYWNjb3VudHMgb24gcG9saXRpY2FsIGZvcnVtcy4gSW4gdGhpcyBpbnN0YW5jZSB0aGUgZm9ydW0gYWRtaW4gbm90aWNlZCBtdWx0aXBsZSB1c2VycyBsb2dnaW5nIGluIGZyb20gdGhlIHNhbWUgSVAgYWRkcmVzcyBhcyBHcmVlbndhbGQgZGlkLCBvbmx5IHRvIGRlZmVuZCBoaW0gaW4gaWRlbnRpY2FsIGxhbmd1YWdlLi4gCkRlYWRIb25vciAgNyBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KV2hlbiBpdCBjb21lcyB0byBoYW5kbGluZyB5b3VyIHJlY2VpcHRzIGZvciB5b3VyIERpc2NvdW50IENsYXkgUG9rZXIgQ2hpcHMgYnVzaW5lc3MsIGl0IGlzIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3Uga2VlcCB1cCB3aXRoIHlvdXIgYnVzaW5lc3MgZmluYW5jZXMgb24gYSBtb250aCB0byBtb250aCBiYXNpcy4gSXQgaXMgbm90IHByb2R1Y3RpdmUgdG8gd2FpdCB1bnRpbCBpdCBpcyB0aW1lIHRvIGZpbGUgdGF4ZXMgdG8gY29udGVuZCB3aXRoIHJlY2VpcHRzIGFuZCBvdGhlciBmaW5hbmNpYWwgbWF0dGVycyB0aGF0IGFyZSByZWxhdGVkIHRvIHlvdXIgYnVzaW5lc3MuIElmIHlvdSBkbyB0aGlzLCB5b3Ugd2lsbCBmaW5kIHRoYXQgaXQgaXMgbm90IGF0IGFsbCBlZmZlY3RpdmUuIApJIHN1ZGRlbmx5IGJlY2FtZSBhd2FyZSBvZiBhbGwgdGhlIGNvbG91cnMgYXJvdW5kIG1lLCBub3RpY2luZyBtaW51dGUgZGV0YWlsIG9mIG15IHN1cnJvdW5kaW5ncyBJIGhhZG4ndCBub3RpY2VkIGJlZm9yZS4gCkxldCBtZSBiZSBjbGVhcjogb25lIHNpZGUgYW5kIG9uZSBzaWRlIG9ubHkgaGFzIHBvaXNvbmVkIHRoZSB3ZWxsLiBUaGUgRGVtb2NyYXRzIGhhdmUgdHJpZWQsIGZvciBkZWNhZGVzLCB0byBwbGF5IHRoZSBnYW1lIGluIGdvb2QgZmFpdGguIFN1cmUsIHRoYXQgbWVhbnMgc29tZXRpbWVzIHNsaW5naW5nIG11ZCwgc29tZXRpbWVzIGJlaW5nIGRpcnR5LCBidXQsIGZvciB0aGUgbW9zdCBwYXJ0LCB0aGV5IGhhdmUgZ29uZSB3ZWxsIG91dCBvZiB0aGVpciB3YXkgdG8gdHJ5IGFuZCBhZGhlcmUgdG8gdGhlIHJ1bGVzIG9mIGRlY29ydW0uLiAKV2hlbiBpdCBjb21lcyB0byBtZW50aW9uaW5nIGFtcGxlIGZhY3RzIGFib3V0IHBva2VyIG9ubGluZSBnYW1lcyB2aWEgdGhlIGludGVybmV0IHdlIGhhdmUgdG8gc3RhcnQgdGhpbmtpbmcgYWJvdXQgdHdvIHZlcnkgaW1wb3J0YW50IHBvaW50cy4gCkNoaXAgb24gVGhlIFNob3VsZGVyICh3aGVuZXZlciBhIGNyZWF0dXJlIGZhaWxzIGFuIEludGltaWRhdGUgY2hlY2sgYWdhaW5zdCB5b3UsIHlvdSBnYWluIGEgKzIgYm9udXMgb24geW91ciBuZXh0IEludGltaWRhdGUgY2hlY2sgYWdhaW5zdCB0aGF0IGNyZWF0dXJlKSwgb3IgQ2l2aWxpemVkIChnYWluIGEgKzEgdHJhaXQgYm9udXMgb24gS25vd2xlZGdlIChub2JpbGl0eSkgYW5kIEtub3dsZWRnZSAobG9jYWwpIGNoZWNrcykgd291bGQgZml0IERvYyBxdWl0ZSB3ZWxsLCBhbHNvLiBBbmQsIGlmIHlvdSBhcmUgbG9va2luZyBmb3Igc29tZXRoaW5nIHRoYXQgZHVwbGljYXRlcyBoaXMgbGlmZXN0eWxlLCB5b3UgbWlnaHQgd2FudCB0byB0cnkgdGhlIEhlZG9uaXN0aWMgZHJhd2JhY2sgKGlmIGEgZGF5IGdvZXMgYnkgd2l0aG91dCBhIHJld2FyZCBvZiBhdCBsZWFzdCAxMCBnb2xkIHBpZWNlcywgb3IgMSBob3VyIG9mIGVudGVydGFpbm1lbnQsIHlvdSBtdXN0IG1ha2UgYSBEQyAyMCBGb3J0aXR1ZGUgY2hlY2suIApIb3dldmVyLCBhIGxvbmcgdGVybSBzb2x1dGlvbiBpcyBzdGlsbCBsaWtlbHkgdG8gYmUgZm91bmQgaW4gYSBub24gbWVkaWNhbCBhcHByb2FjaC4gV2UgYXJlIGFsbCBhIHVuaXF1ZSBiaW9tZWNoYW5pY2FsIGFuZCBwaHlzaW9sb2dpY2FsIG1hY2hpbmUuIFdlIGFsbCBoYXZlIG91ciBpbXBlcmZlY3Rpb25zIGFuZCBhc3ltbWV0cmllcy4gClBva2VyIHBsYXllciBncmFicyBjYXNoIGF0IEZpcmVLZWVwZXJzIENhc2lubwo4LiAKSnVzdCB0byBiZSBjbGVhciwgYmVjYXVzZSB0aGlzIGlzIGEgdG9waWMgSSBjb3VsZCBzdGFuZCB0byBoYXZlIGEgYmV0dGVyIGdyYXNwIG9mLCB0aGUgcmVhc29uIFdhbG1hcnQgY2FuIHVzZSBwb2ludCBvZiBzYWxlIGRhdGEgaW4gdGhlIHNhbWUgd2F5IGlzIHRoYXQgdGhleSBkb24gaGF2ZSBhY2Nlc3MgdG8sIHNheSwgQ29zdGNvIHByYWN0aWNlcyBvbiB0aGUgc2FtZSBsZXZlbCwgYmVjYXVzZSB0aGV5IGRvbiB0aGVtc2VsdmVzIHNlbGwgQ29zdGNvIGdvb2RzIGZvciB0aGVtOyB0aG9zZSB0d28gc3VwZXJtYXJrZXRzIGFyZSBkaXJlY3RseSBjb21wZXRpbmcgc2FsZSBwb2ludHMsIG5vdCBhIGh1YiBmb3IgbXVsdGlwbGUgc2VsbGVycyBvbmUgdGllciBhYm92ZSB0byBjb25ncmVnYXRlLiAKVGFrZSBhIGNoYW5jZSBvbiBhIGNhc2lubyBmb3IgeW91ciBuZXh0IG1lZXRpbmcKV2l0aCBTYW4gRGllZ28ncyBub3RhYmxlIE5hdGl2ZSBBbWVyaWNhbiBwb3B1bGF0aW9uICAgMTggdHJpYmVzIHJlc2lkaW5nIG9uIGV4cGFuc2l2ZSByZXNlcnZlcyAgIGdhbWluZyBpcyBiaWcgYnVzaW5lc3MgaW4gdGhlIHNvdXRoZXJuIENhbGlmb3JuaWEgcmVnaW9uIFtzb3VyY2U6IFNEVEFdLiBBYm91dCAzMCBtaW51dGVzIGZyb20gdGhlIGNpdHkgY2VudGVyLCBvbiBpbmRlcGVuZGVudCB0cmliYWwgZ3JvdW5kcywgdGhlIGdhbWJsaW5nIGluZHVzdHJ5IHRocml2ZXMgW3NvdXJjZTogU0RUQV0uIApJIGRvbid0IGhhdmUgc29saWQgcHJvb2YgZm9yIHRoaXMgYnV0IEkgYmVsaWV2ZSBpdCBiZWNhdXNlIHBlYWNvY2tzIGFyZSBmcmlnZ2luZyBMT1VEIS4gCkJ1dCBJIGRvbiByZW1lbWJlciBzZWVpbmcgYW55dGhpbmcgdGhhdCBpbXBsaWVzIERla3UgaXMgYSAxMCB0b25uZXIgYXQgMjAlLiAKSW4gZXNzZW5jZSwgdGhpcyBzaG93IGlzIGxpa2UgYW4gZXh0ZW5kZWQgdmVyc2lvbiBvZiBIYXJyeSBFbmZpZWxkJ3MgSSBTYXcgWW91IENvbWluZyBza2V0Y2guIEkgdHJpZWQgdG8gZmluZCBhIGxpbmsgdG8gYSBza2V0Y2ggd2hpY2ggZGlkbid0IGNvbnRhaW4gc3dlYXJpbmcsIGJ1dCBmYWlsZWQuIEluIHBhcnRpY3VsYXIsIGxvb2sgb3V0IGZvciBHcmFjaWUgdGhlIEJ1bGxkb2csIHdob3NlIHNoYW1lIGlzIGV2aWRlbnQuCkFsdGhvdWdoIHRoZSBwcmljaW5nIGFuZCB0aGUgZnJvbnQgZW5kIHN0eWxpbmcgaXJrIG1lLCBJIGhhdmUgdG8gc2F5IHRoYXQgSSBMb3ZlLCB3aXRoIGEgY2FwaXRhbCB0aGlzIGNhci4KVGhlIG51Z3Mgd2VyZSBicm9rZW4gdXAgYW5kIGNydW1ibGVkIGFuZCBJIGNvdWxkbiBtYWtlIG91dCBhbnkgc3RpY2t5IFRIQyBjcnlzdGFsIGdvb2RuZXNzLiAKSWYgdGhlcmUgaXNuIGJhY2tncm91bmQgbm9pc2UsIEkgc2xvd2x5IGJlZ2luIHRvIGZvY3VzIG9uIGhlYXJpbmcgbXkgaGVhcnRiZWF0LCBvciBteSBicmVhdGhpbmcsIG9yIHNvbWUgc3RhdGljIGxhbXAgbm9pc2UgaW4gdGhlIHJvb20uIEl0IGZlZWxzIGxpa2UgZXZlcnl0aGluZyBhcm91bmQgbWUgc2xvd3MgZG93biwgYW5kIHRoZSBhZHJlbmFsaW5lIGp1c3QgcmlzZXMuIEFuZCB0aGVuIHRoZSBoZWFydCBiZWdpbnMgYmVhdGluZyBmYXN0ZXIgYW5kIGZhc3RlciBhbmQgSSBzdGFydGluZyB0byBxdWlldGx5IHBhbmljIGluc2lkZS4gCkluIHRoZSBJU0lTIHRyaWFsIHRoZSBwcm90b2NvbCB3YXMgbm90IGZvbGxvd2VkIGluIHRoYXQgbWFnbmVzaXVtIHdhcyBub3QgdGhlIGZpcnN0IGRydWcgZ2l2ZW4sIGFuZCBvZnRlbiBpdCB3YXMgbm90IGdpdmVuIGZvciBtYW55IGhvdXJzIG9yIGRheXMgYWZ0ZXIgYSBoZWFydCBhdHRhY2sgd2FzIHdlbGwgZXN0YWJsaXNoZWQsIGNhdXNpbmcgd2lkZXNwcmVhZCBkYW1hZ2UgYW5kIGJsb29kIGNsb3R0aW5nLi4gCkJmb3J0ZTQwIHUKQmVsb3cgYXJlIHRoZSBzdGVwcyB0byBzaG93IHlvdXIgbG92ZSwgYXBwcmVjaWF0aW9uIGFuZCBhZmZlY3Rpb24gdG8geW91ciB3aWZlIHRocm91Z2ggYSByZXN0ZnVsIG1hc3NhZ2UuLiAKQWxzbywgd2l0aCB5b3VyIHdlZGRpbmcgY29taW5nIHVwLCBmaW5kIGEgcmVhbGx5IGdvb2QgcGhvdG9ncmFwaGVyIHlvdSBjYW4gdHJ1c3QgYW5kIGRvIGFuIGVuZ2FnZW1lbnQgcGhvdG8gc2Vzc2lvbiB3aXRoIHRoZW0hIFRoZXJlIG5vdGhpbmcgbGlrZSBhIHBybyBwaG90b2dyYXBoZXIgdG8gbWFrZSBhbnlvbmUgZmVlbCBiZWF1dGlmdWwvaGFuZHNvbWUuCkl0J3MgYSBzaGFtZSB5b3UgcGlja2VkIHRoZSBVU0EgZm9yIHlvdXIgZXhhbXBsZSBiZWNhdXNlIGRlc3BpdGUgYWxsIG9mIGl0cyBmbGF3cyBhbmQgZXZpbCBjYXBpdGFsaXNtLCBpdCBpcyBvbmUgb2YgdGhlIGNvdW50cmllcyB3aGljaCBoYXMgYmVuZWZpdGVkIHRoZSBtb3N0IGZyb20gYXV0b21hdGlvbiBzbyBmYXIuIApJIHJlbWVtYmVyIHdoZW4gSSBzYXcgdGhlIGNvbWljLCBteSByZWFjdGlvbiB3YXMgdGhhdCBpdCBub3Qgc3BlbGxpbmcgb3V0IHRoZSBtb3N0IGltcG9ydGFudCBhc3N1bXB0aW9uIGZvciB0aGUgcHJvcG9zYWwgdG8gd29yazogdGhlIGZvdXIgY29tbW9uIHdvcmRzIG11c3QgYmUgY2hvc2VuIHRydWx5IGF0IHJhbmRvbS4gSWYgeW91IGFsbG93IGFueSBpbnB1dCBmcm9tIHRoZSB1c2VyIChsaWtlLCAiZG8geW91IGFjY2VwdCB0aGlzIG9uZSBvciBzaG91bGQgSSBnZW5lcmF0ZSBhbm90aGVyPyIpLCB0aGUgZW50cm9weSBvZiB0aGUgcGFzc3BocmFzZSBwbHVtbWV0czoKUmVtaW5ndG9udGhlc2hvdGd1biB1CkkgU3VwcG9ydGVkIEEgRmFtaWx5IFBsYXlpbmcgUG9rZXIKIkkgYW0gdGhyaWxsZWQgdGhhdCB0aGUgaW52ZXN0b3JzIGhhdmUgZGVtb25zdHJhdGVkIHN1Y2ggYSBzdHJvbmcgY29tbWl0bWVudCB0byBDaXJxdWUncyB1bmlxdWUgUXVlYmVjIGN1bHR1cmFsIGhlcml0YWdlIGFuZCB0aGUgY3JlYXRpdml0eSBhbmQgaW1hZ2luYXRpb24gb2Ygb3VyIHBlb3BsZSwiIHNhaWQgTGFsaWJlcnRlIGluIGEgc3RhdGVtZW50LgpJdCBpcyBub3QgYW55bW9yZS4gClRoZSAxOTQzIHNlbGYgcG9ydHJhaXQgIkxlIE1hcmluLCIgb3IgIlRoZSBTYWlsb3IsIiB3YXMgd2l0aGRyYXduIGJ5IENocmlzdGllJ3MgZnJvbSBpdHMgVHVlc2RheSBhdWN0aW9uIGZvciByZXN0b3JhdGlvbiBhZnRlciBpdCB3YXMgYWNjaWRlbnRhbGx5IGRhbWFnZWQsIEZvcnR1bmUgcmVwb3J0ZWQuCkNCU04gTGl2ZSBCcm9hZGNhc3QKTGlzdCB3aGF0IGlzIGluc2lkZSBvbiB0aGUgb3V0c2lkZSBvZiB0aGUgYm94ZXMuIApXZSBhdXRpc3RzIGFyZSBub3Qgc3R1cGlkLiBXZSBqdXN0IGZ1bmN0aW9uIGRpZmZlcmVudGx5IGFuZCBzZWUgdGhlIHdvcmxkIGZlb20gYW5vdGhlciB2aWV3cG9pbnQuClRoaXMgd2FzIGEgZGlzaCB0aGF0IEkgaGFkIHByZXBhcmVkIGZvciBteSBmYW1pbHkgZGlubmVyIGhlbGQgb24gU2luZ2Fwb3JlIE5hdGlvbmFsIERheSAoOSBBdWcpLiAKVGhlIGd1eSB3aG8gd2lucyB0aGUgbW9zdCBoYW5kcyBpcyBub3QgdGhlIGd1eSB3aG8gbWFrZXMgdGhlIG1vc3QgbW9uZXkgaW4gdGhlIGxvbmcgcnVuLgpNZXRhbCB0ZWEga2V0dGxlICAgcGxhY2VkIGRvd24gd2l0aCB0aHVkICg2KS4gKyBtb3JlIGluZm8uIApJdCB3YXMgYmFkLiBTbyB0aGlzIGlzIGdvaW5nIG9uIGZvciBtb250aHMuIE90aGVyIGtpZHMgaW4gdGhlIHNjaG9vbCBzdGFydCBkb2luZyBzaGl0IHRvIG1lIHRvby4gTWluZCB5b3UsIG15IGZvcm1lciBmcmllbmQgQSBpcyBmZWVkaW5nIGhpbSBpbmZvIGFib3V0IG1lLCBzbyBoZSBrbm93cyBteSBidXR0b25zIGFuZCBmZWFycyBhbmQgZXZlcnl0aGluZy4gSSBnZXQgYmxhbWVkIGZvciBzZW5kaW5nIGEga2lkIHRvIGphaWwgYmVjYXVzZSBzb21lb25lIHRvbGQgdGhlIHZpY2UgcHJpbmNpcGFsIGhlIGhhZCB3ZWVkLiAKU2luY2UgaXQgYW4gb2ZmZW5zaXZlIHdhciwgeW91IHdvbiByZWFsbHkgbG9zZSBhbnl0aGluZyB3aGVuIHlvdSBmaW5hbGx5IGhhdmUgdG8gc3VycmVuZGVyLCBhbmQgaGUgc2hvdWxkIGJlIGN1dCBkb3duIHRvIHNpemUgd2hlbiB0aGUgd2FyIGVuZHMuLiAKTWFqb3IgdGhlbWVzIGF0IEZyYW5rZnVydCBpbmNsdWRlIGVsZWN0cmljIGFuZCBoeWJyaWQgYXV0b3MsIG9mdGVuIGluIGhpZ2hlciBwZXJmb3JtYW5jZSBhbmQgcHJpY2UgY2F0ZWdvcmllcywgYW5kIG5ldyBzbWFsbCBTVVZzLCBhbiBpbmNyZWFzaW5nbHkgcG9wdWxhciBjYXRlZ29yeSBpbiBFdXJvcGUuIEFub3RoZXIgZnJlcXVlbnQgdG9waWMgaXMgYXV0b25vbW91cyBkcml2aW5nIHN0aWxsIGEgbG9uZyB3YXkgb2ZmIGR1ZSB0byBsZWdhbCByZWFzb25zIGJ1dCBpbmNyZWFzaW5nbHkgdGVjaG5vbG9naWNhbGx5IHBvc3NpYmxlIGJ5IGVxdWlwcGluZyBjYXJzIHdpdGggY2FtZXJhcyBhbmQgY29tcHV0ZXJzLi4gCklmIHlvdSB3YW50IHRvIHNlZSB3aGF0IEkgaGF2ZSB3cml0dGVuIHlvdSBjYW4gYWx3YXlzIGJyb3dzZSB0aGUgbGliYXJ5LgpBbmQgb25lIGluIENhbmFkYSBvbiB0aGUgTW9uZGF5IGFmdGVyIFRoYW5rc2dpdmluZyBhcyBwYXJ0IG9mIGEgc3dlZXBpbmcgcmVzdHJ1Y3R1cmluZyBwbGFuLiBHTSBpcyBjYXJlZnVsIHRvIHVzZSB0aGUgd29yZCAidW5hbGxvY2F0ZWQiIHRvIGluZGljYXRlIHRoYXQgdGhlIHByb2R1Y3RzIGN1cnJlbnRseSBidWlsdCBhdCB0aGUgcGxhbnRzIHdvdWxkIHN0b3AgcHJvZHVjdGlvbiB3aXRob3V0IGJlaW5nIGltbWVkaWF0ZWx5IHJlcGxhY2VkLiAKQnV0IGl0J3Mgbm90IGV4YWN0bHkgcGVyZmVjdCwgYW5kIHNpbmNlIGl0J3MgYmVlbiBmYWlybHkgZWFzeSB0byB0aGlzIHBvaW50LCB5b3UgZGVjaWRlIHRvIGtlZXAgbWFzc2FnaW5nIHRoZSBhcmVhIHRvIG1ha2UgaXQgZmxhd2xlc3MuIEFmdGVyIGEgZmV3IG1vcmUgbWludXRlcyBvZiBtYXNzYWdpbmcsIHlvdSByZWFsaXplIHRoYXQgeW91J3ZlIHB1c2hlZCBpdCBqdXN0IGEgbGl0dGxlIHRvbyBmYXIuIEFuZCBub3cgeW91J3ZlIGdvdCB0aGlzIGZsYWJieSBhcmVhIG9uIHRoZSBob29kIHdoZXJlIHlvdSBzdHJldGNoZWQgb3V0IHRoZSBtZXRhbC4gCk9ubGluZSBwb2tlciBPbmxpbmUgcG9rZXIgZml0cyBhbnlvbmUncyBzY2hlZHVsZSBiZWNhdXNlIHlvdSBjYW4gcGxheSAyNCBob3VycyBhIGRheS4gVGhlcmUgaXMgbm8gdHJhdmVsaW5nIHRpbWUgaW52b2x2ZWQsIGFuZCB0aGVyZSBpcyBsaXR0bGUgb3Igbm8gd2FpdGluZyB0byBnZXQgaW50byBhIGdhbWUgb25jZSB5b3UgYXJlIGxvZ2dlZCBvbi4gV2l0aCB0aGUgZ3Jvd2luZyBwb3B1bGFyaXR5IG9mIHBva2VyLCBpZiB5b3UgY2hvb3NlIHRvIHBsYXkgYXQgYSBsaXZlIGNhcmRyb29tIHlvdSB3aWxsIG1vc3QgbGlrZWx5IHdhaXQgaG91cnMganVzdCB0byBnZXQgc2VhdGVkIGF0IGEgdGFibGUuIApGb3Igc3VyZSAoSSBoYWQgcmVzZXJ2YXRpb25zIGFib3V0IHBvc3RpbmcgaXQpLiBJIGhhZCBhIGNvbnZlcnNhdGlvbiB3aXRoIHNvbWVib2R5IGFuZCBpdCByZWFsbHkgdXBzZXQgbWUsIHNoZSBjb25mZXNzZWQuIHdhcyBhY3R1YWxseSBpbiB0aGUgc3R1ZGlvIHRoYXQgZGF5IGFuZCBJIGNvdWxkbiBmb2N1cyBiZWNhdXNlIEkgd2FzIHNvIHVwc2V0LCBzbyBJIG1hZGUgdGhlIHZpZGVvLCBidXQgSSBkZWNpZGVkIG5vdCB0byBwb3N0IGl0IGJlY2F1c2UgSSB3YXMgc2NhcmVkIGl0IHdvdWxkIGhhdmUgYmFja2xhc2guIEJ1dCB3aGVuIEkgd29rZSB1cCB0aGUgbmV4dCBkYXksIEkgc3RpbGwgZmVsdCByZWFsbHkgYnVtbWVkIGFib3V0IHRoaXMgYW5kIHdhcyBsaWtlLCBoYXZlIHRvIHBvc3QgdGhpcyB2aWRlby4gSSBiZWVuIHNlbnQgdGhpbmdzIChiZWZvcmUpIGFuZCBub25lIG9mIGl0IGZpdCwgd2hpY2ggd2FzIGFubm95aW5nLgpUaGUgZmlyc3Qgb25lIGFwb2xvZ2l6ZWQgZm9yIHRoZSBkZWxheSwgYW5kIHNhaWQgdGhleSBkbyB0aGVpciBiZXN0IHRvIHNoaXAgaXQgYXMgcXVpY2tseSBhcyBwb3NzaWJsZS4gCkJ1dCBJIGhhZCBrbm93biBmb3IgeWVhcnMgdGhhdCBJIGRpZCBub3Qgd2FudCB0byBiZSBvbmUsIHRoYXQgSSBoYWQgbm8gaW50ZW50aW9uIG9mIGV2ZXIgaGF2aW5nIGNoaWxkcmVuLiAKWWVhaCwgYnV0IDUwIG1pbGxpb24gc2VlbXMgbGlrZSB3YXkgdG9vIG11Y2ggbm93LiAKVGhpcyBiaXRjaCBpcyBqdXN0IHN0dXBpZCBhbmQgaW4gdG8gYSB3ZWlyZCBmZXRpc2guLiAKSGF2aW5nIGdyb3duIHVwIGluIGEgc21hbGwgY291bnRyeSB0b3duIEkgY2FuIHVuZGVyc3RhbmQgeW91ciBkYWQuIEl0IHRvb2sgbWUgeWVhcnMgdG8gZmVlbCBjb21mb3J0YWJsZSBpbiBjcm93ZHMuClNvIGhlIGZlZCB0aGUgbWFuLCBnYXZlIGhpbSBjbG90aGVzIGFuZCBhbHNvIGdhdmUgaGltIGEgam9iLiAKRGlzY3VzcyB0aGUgcG9saXRpY2FsIHNpdHVhdGlvbiB3aXRoIEtodXJzaGVlZCBTaGFoIHdobyB3YXMgdG8gbWVldCBJbXJhbiBLaGFuIGxhdGVyLiBUaGUgUFBQIHNlZW1lZCB0byBoYXZlIGJlY29tZSB2ZXJ5IHJlbGV2YW50IHRvIHRoZSBjdXJyZW50IGNyaXNpcy4gCkttZmNvc3R1bWVkZXNpZ25lciAgMTEgcG9pbnRzICBzdWJtaXR0ZWQgMjkgZGF5cyBhZ28KQXR0ZW1wdCB0byBsb2NhdGUgYWlyZWQuIFRoZSB2ZWhpY2xlIHdhcyBsaXN0ZWQgYXMgc3RvbGVuIGluIHRoZSBhcHByb3ByaWF0ZSBkYXRhYmFzZXMuIEludmVzdGlnYXRpb24gY29udGludWluZy4uIAoiSXQgd2FzIGFtYXppbmcganVzdCB0byBrbm93IHRoYXQgSSBjb3VsZCBkbyBpdCwiIFJvYmVydHMgc2FpZC4gIkkgZ2V0IHJlc3RsZXNzIGxlZ3MgYW5kIGxvc2UgYmFsYW5jZSBhIGxvdCBhcyBhIHJlc3VsdCBvZiBteSBNUywgYnV0IEkgZm91bmQgdGhhdCBldmVuIGlmIG15IGxlZ3MgaHVydCBhbmQgYXJlIHNvcmUgd2hpbGUgSSdtIHJpZGluZywgSSBmZWVsIGJldHRlciBib3RoIG1lbnRhbGx5IGFuZCBwaHlzaWNhbGx5IGFmdGVyd2FyZHMuIApGciBkaWUgRW50d2lja2x1bmcgbmV1ZXIgTWVkaWthbWVudGUgZ2lidCBlaW5lIGdyb2UgRmlybWEgamhybGljaCBiaXMgenUgOSBNaWxsaW9uZW4gRG9sbGFyIGF1cyEgV296dSBzb2xsIG1hbiBzaWNoIGFsc28gZGFtaXQgYXJyYW5naWVyZW4sIGRhc3MgaXJnZW5kZWluIFBmZW5uaWcgIEFydGlrZWwgbWdsaWNoZXJ3ZWlzZSB3ZXNlbnRsaWNoIGVmZmVrdGl2ZXIgaXN0LCBhbHMgZXh0cmVtIHRldXJlIFBycGFyYXRlP1p1bSBWYXRlciBkZXIgaW5uZXJlbiBBbndlbmR1bmcgZGVzIFdhc3NlcnN0b2ZmcGVyb3hpZHMgSDJPMiBpbiBSdXNzbGFuZCB3dXJkZSBQcm9mLiBJd2FuIFBhd2xvdml0c2NoIE5ldW1pd2FraW4sIE1lbnNjaCBkZXMgSmFocmVzIDIwMDIuIEVyIGJlZ2FubiBiZXJlaXRzIDE5NjYgbWl0IGRlciBFcmZvcnNjaHVuZyB2b24gSDJPMiAsIGFscyBlciBzaWNoIGFtIE5JSSBtaXQgZGVuIG1lZGl6aW5pc2NoICBiaW9sb2dpc2NoZW4gUHJvYmxlbWVuIGJlbWFubnRlciBSYXVtZmxnZSBiZXNjaGZ0aWd0ZS4uIApQbGVhc2Uga2VlcCBpbiBtaW5kIHRoYXQgbWFueSBvZiB0aGVzZSBkZXNjcmlwdGlvbnMgYXJlIGZvciBzZXZlcmUgdmVyc2lvbnMgb2YgdGhlIHN5bmRyb21lcy4gCkhlIHRvbGQgdGhlbSBhbGwgdGhhdCB0aGVyZSBoYWQgYmVlbiBhbiBpc3N1ZSB3aXRoIHRoZSBjb21wdXRlcnMgYW5kIHRoYXQgdGhlIHRlY2ggdGVhbSBoYWQgZXN0aW1hdGVkIGl0IHdvdWxkIHRha2UgYWJvdXQgMzAgbWludXRlcyBiZWZvcmUgdGhlIGlzc3VlIHdvdWxkIGJlIHJlc29sdmVkIGFuZCB0aGF0IHRoZXkgY291bGRuIG9wZW4gdW50aWwgdGhlbi4uIApIaWdoIGdyb3d0aCBmaXJtcyBjb250cmlidXRlIGRpc3Byb3BvcnRpb25hdGVseSB0byBDYW5hZGlhbiBlY29ub21pYyBncm93dGggYW5kIGFyZSBpbiB1cmdlbnQgbmVlZCBvZiB0aGUgcmlnaHQgdGFsZW50IHRvIHNjYWxlLi4gCkkgZmVlbCBhcyB0aG91Z2ggZXZlcnl0aGluZyB5b3Ugc2FpZCB3YXMgYSBnaXZlbi4gCkFuZCB3aGF0IGEgc3RhcnQgaXQgaXMuIApJIGV4cGxhaW5lZCB0aGF0IGlmIHRoYXQgd2FzIGRpZmZlcmVudCBmcm9tIGhpcyBpZGVhLCB0aGVuIHRoYXQgd2FzIHBlcmZlY3RseSBmaW5lIHdpdGggbWUsIGJ1dCBJIHdvdWxkIGJlIHJlbmV3aW5nIG15IGxlYXNlIG9uIG15IGFwYXJ0bWVudCBpbnN0ZWFkLiBJIGFsc28gbWFkZSBzdXJlIHRoYXQgaGUga25ldyBpZiB0aGVyZSB3YXMgbm8gcHJvcG9zYWwgYXQgdGhlIDEgeWVhciBtYXJrLCB0aGF0IEkgd291bGQgYmUgZmluZGluZyBteSBvd24gcGxhY2UgYWdhaW4gdW50aWwgaGUgd2FzIHJlYWR5IGZvciBtYXJyaWFnZS4gCkludGVyZXN0aW5nOyBJIGd1ZXNzIHdlIGhhdmUgZGlmZmVyZW50IHVuZGVyc3RhbmRpbmcgb2Ygd2hhdCBtYWtlcyBhIGNvdW50cnkgV2VzdGVybiA9IGNvdW50cmllcyB0aGluayB5b3Ugc2hvdWxkIGRvIHNvbWUgcmVhZGluZyBvbiB3b3JsZCAgIFdpa2lwZWRpYSAoYW5kIHRoZSBlY29ub21pYyBkZWZpbml0aW9uIG9mIHdvcmxkIG1lLCBpdCBub3QgYWJvdXQgdGhlIG5hbWVzLCBvciByZWZ1c2FsIHRvIHRlYWNoIGEgbGFuZ3VhZ2UgKGJzPyBFdmVyeW9uZSBrbm93cyBUYWdhbG9nOyBub3QgZXZlcnlvbmUga25vd3MgRW5nbGlzaCBpbiBQaGlscykuIEJ1dCBpdCBtb3JlIGFib3V0IHdlYWx0aCAodGhleSBhcmUgd2VhbHRoeSksIGJ1dCBBTFNPIGh1bWFuIHJpZ2h0cywgZGVtb2NyYXRpYyB2YWx1ZXMsIGRlbW9jcmF0aWMgZ292ZXJubWVudCwgYW5kIGFsbGllZCB0byBXZXN0IHRoZXNlIGFyZSBhbGwgY29tbW9uIHZhbHVlcy4gU28sIGNvdW50cmllcyBsaWtlIEphcGFuLCBTb3V0aCBLb3JlYSwgSXNyYWVsIGNhbiBiZSBjb25zaWRlcmVkIGlmIHlvdSBtYWRlIGl0IHRvIHRoZSBPRUNEIChha2EgcmljaCBjb3VudHJpZXMgLyBnb29kIGxpdmluZyBjbHViKSwgeW91IGNhbiBhcmd1YWJseSBiZSBjb25zaWRlcmVkICAgc2VlIFdpa2lwZWRpYSBhZ2Fpbi4uIApBbHNvLCBtaWNlbGxhciB3YXRlciBiZWNhdXNlIHlvdSBuZWVkIHRvIHRyZWF0IHlvdXIgc2tpbiByaWdodCBhbmQgdGFrZSBvZmYgeW91ciBtYWtldXAgYXQgdGhlIGVuZCBvZiB0aGUgZGF5LCBldmVyeWRheS4gCkRpdmlzaWJsZSBieSAyIFRoZSB3aG9sZSBudW1iZXIgaXMgZGl2aXNpYmxlIGJ5IDIgaWYgdGhlIG51bWJlciBpcyBldmVuIHdoaWNoIGlzIHNob3duIGJ5IHRoZSBsYXN0IGRpZ2l0IGJlaW5nIGRpdmlzaWJsZSBieSAyLiAKVGhlIHBvcHVsYXJpdHkgb2Ygb25saW5lIHBva2VyIGNhbiBiZSBtZWFzdXJlZCBieSB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZSBtb3JlIHRoYW4gMTAwIG1pbGxpb24gcGxheWVycyBwbGF5aW5nIGZyZWUgb25saW5lIHBva2VyIGdhbWVzIGFuZCByZWFsIG1vbmV5LiAKSGF2aW5nIHN1Y2ggbWFzc2l2ZSBzb2NpYWwgbWVkaWEgZm9sbG93aW5ncyBjb21lcyB3aXRoIHRoZSB0ZXJyaXRvcnkgb2YgZGVhbGluZyB3aXRoIGhhdGVycyBhbmQgcnVkZSBjb21tZW50cyBib3RoIGluIHRoZSBwdWJsaWMgZXllIGFuZCB2aXJ0dWFsbHkuIEV2ZW4gS2hsb2UgZW5qb3lzIGEgaGlhdHVzIGZyb20gc29jaWFsIHBsYXRmb3JtcyBldmVyeSBvbmNlIGluIGEgd2hpbGUgdG8gdGFrZSBhIGJyZWF0aGVyIGZyb20gdGhlIGNvbW1lbnRzLiAKU28gdGltZSBoYXMgbWVsbG93ZWQgd2hhdGV2ZXIgaG9zdGlsaXRpZXMgdGhlcmUgd2VyZSB3aGVuIHRoZSBib29rIGNhbWUgb3V0Li4gCkVUQTogU29tZXRpbWVzIGd1eXMgZG9uJ3QgZ2V0IHRoaXMsIHNvIHRlbGwgeW91ciBESCB0aGF0IGl0J3MgYmFzaWNhbGx5IGxpa2UgeW91ciBicm90aGVyIG9yIGRhZCBzYXlpbmcgInlvdSB3b24ndCB3YW50IHRvIGdvIHRvIHRoZSBneW0gd2l0aCBtZSBhbmQgbXkgZnJpZW5kcyBiZWNhdXNlIHlvdSBoYXZlIHN1Y2ggYSBzbWFsbCBkaWNrIGFuZCB3ZSBhbGwgaGF2ZSBhdCBsZWFzdCBkZWNlbnQgc2l6ZWQgZGlja3MuIFlvdSdkIGJlIGh1bWlsaWF0ZWQuIEFuZCB5b3VyIHNvbiBpcyBnb2luZyB0byBoYXZlIGEgc21hbGwgZGljaywgYmUgYmFsZCBhbmQgZmF0LCBhbmQgYSBsb3Nlci4iIFRoYXQncyB0aGUgbWFsZSB0cmFuc2xhdGlvbi4uIApUaGV5IGhhZCBhIGNhcm5pdmFsIHNldCB1cCwgYW5kIGFsbCBvZiB0aGUgcmlkZXMgd2VyZSBydW4gYnkgaGFuZC4gU28gcGljdHVyZSBOaWNhcmFndWFuIGNhcm5pZXMgYWN0dWFsbHkgaGFuZCBzcGlubmluZyB0aGUgZmVycmlzIHdoZWVsICh3aGljaCBpbmNpZGVudGFsbHkgdGhlIGtpZHMgaGFkIHRvIGR1Y2sgc28gYXMgdG8gbm90IGhhdmUgdGhlaXIgaGVhZCBzbWFjayB0aGUgY2FydCBhYm92ZSB0aGVtKS4uIAoiSSBjZXJ0YWlubHkgaG9wZSBzbywiIGhlIHJlc3BvbmRlZCwgbm90aW5nIHRoYXQgaGUgd2FzIGNhcmVmdWwgYWJvdXQgaGlzIHNlY3VyaXR5LCBhIHJlbWFyayB0aGF0IHdhcyBiYWNrZWQgdXAgYnkgYSBzdGVybiwgcG9rZXIgZmFjZWQgUGFraXN0YW5pIHdobyBzdG9vZCBwcm90ZWN0aXZlbHkgZGlyZWN0bHkgYmVoaW5kIGhpbSBhbmQgd291bGQgaGF2ZSBiZWVuIHNwb3R0ZWQgYXMgYSBndW5tYW4gaW4gYW55IGNpcmN1bXN0YW5jZS4KVGhlIGRlY2xhcmF0aW9uIG9mIEhlbHNpbmtpIGFuZCBJQ0ggR0NQIGFyZSB0aGVyZSB0byBwcm92aWRlIGEgZnJhbWV3b3JrIHRvIGVuc3VyZSB0aGUgcXVhbGl0eSBpbnRlZ3JpdHkgYW5kIHNhZmV0eSBvZiBhbGwgcmVzZWFyY2guIFRoZXNlIHByaW5jaXBsZXMgYXJlIGZ1bmRhbWVudGFsIGFuZCBiZXlvbmQgcXVlc3Rpb24uIFRoZXkgaGF2ZSBub3QgY2hhbmdlZCwgaG93ZXZlciB0aGUgcHJvY2Vzc2VzIHVzZWQgdG8gZW5zdXJlIGNvbXBsaWFuY2UgdG8gdGhlc2UgcHJpbmNpcGxlcyBoYXZlIGJlZW4gYWxsb3dlZCB0byBydW4gb3V0IG9mIGNvbnRyb2wgYW5kIGFyZSBpbiBkYW5nZXIgb2YgZGVmZWF0aW5nIHRoZWlyIHB1cnBvc2UuIApNYXJzaGFscyBTZXJ2aWNlIGNvbmZpcm1lZCB0aGF0IFNjYWxpYSBoYXMgZGllZCBhdCB0aGUgYWdlIG9mIDc5LiAKU2hlIHdhcyBzdXBlciBnbHVlZCB0byBtZSBhbmQgd2hlbiBJIHdhcyBsYXlpbmcgZG93biwgc2hlIHdhcyBjdXJsZWQgYXJvdW5kIG15IHN0b21hY2guIFdoZW4gSSBmZWx0IHRoZSBmaXJzdCBjb250cmFjdGlvbiBzaGUgbG9va2VkIGF0IG1lIGFuZCBJIHdvdWxkIHN3ZWFyIHNoZSBzYWlkICJkdWguIiB3aGlsZSBwdXJyaW5nIGFuZCBpbiBnZW5lcmFsIGJlaW5nIHN3ZWV0bHkgYW5ub3lpbmcuIEkgbWlzcyBoZXIgYnVuY2hlcy4uIApDYXNpbm8gNiBkZWNrIGF1dG9tYXRpYyBjYXJkIHNodWZmbGVycyBhcmUgaGVhdnkgZHV0eSBzaHVmZmxlcnMuIEV2ZW4gYWZ0ZXIgcmFuZG9tIHVzZSwgdGhlc2UgbWFjaGluZXMgc2VydmUgcHJvcGVybHkuIEV2ZW4gdGhlc2UgbWFjaGluZXMgY29uc3VtZSB2ZXJ5IG1pbmltYWwgYmF0dGVyeSBwb3dlciBhcyB3ZWxsLiAKVGhlIGVuZCBvZiBwcm9jZXNzIG9mIGNvbW11bmljYXRpb24gaXMgZGVwZW5kcyBvbiB0aGUgcmVjZWl2ZXIgYmVjYXVzZSBpbiBjYXNlIGlmIHJlY2VpdmVyIGlzIG5vdCBzYXRpc2ZpZWQgd2l0aCBtZXNzYWdlLCBoZSBtYXkga2VlcCBvbiBhcmd1aW5nIG9uIHRoYXQgcGFydGljdWxhciBpc3N1ZSB3aXRoIHNlbmRlci4gU28gdGhlIHByb2Nlc3Mgb2YgYXJndW1lbnRzIG1heSBsZWFkIHRvIHByb3BlciBvciBlZmZlY3RpdmUgY29tbXVuaWNhdGlvbiBvciBpdCBtYXkgbGVhZCB0byBpbmVmZmVjdGl2ZSBjb21tdW5pY2F0aW9uLiBSZWNlaXZlci4uIApTb21lIGFyZSBsdXhlIHZlcnNpb25zIG9mIGV2ZXJ5ZGF5IGl0ZW1zLCB3aGlsZSBvdGhlcnMgYXJlIHB1cmUgcmVjcmVhdGlvbi4gCldoYXQgdGhleSBhcmUgcGF5aW5nIGZvciBpcyB0aGUgcGllY2Ugb2YgcGFwZXIgdGhhdCBhY3RzIGFzIGEgZ2F0ZWtlZXBlciBmb3IgdGhlIG1ham9yaXR5IG9mIGVtcGxveW1lbnQgb3Bwb3J0dW5pdGllcyBvdXQgdGhlcmUuIApJdCBub3QganVzdCBhIGhlYWRzaG90LCBpdCBhaW1pbmcgZm9yIHRoZWlyIGdsYXNzIGphdy4gSGl0IHRoZW0gcmlnaHQgaW4gdGhlIHRlZXRoIGFuZCB5b3UgZ2V0IHRoZSBzdHVuIGV2ZXJ5IHRpbWUuIApTaGUgc2FpZCB0aGF0IHRoZSBkZXBhcnRtZW50IHZpY2UgdW5pdCB3YXMgd29ya2luZyBvbiB0aGUgaW52ZXN0aWdhdGlvbiBwYXJ0IHRpbWUuCkJveWZyaWVuZCB3YXMgaW4gbGlrZSA4dGggZ3JhZGUgd2hlbiBoZSBoYWQgdG8gZG8gYSBwcmVzZW50YXRpb24gb24gdGhlIEV1cm9wZWFuIFVuaW9uLCB0aGUgREFZIEFGVEVSIGhlIGdvdCBhIHBhbGF0ZSBleHBhbmRlci4gCkhlJ3MgYmVlbiBjb25kaXRpb25lZCBmb3IgMjArIHllYXJzIHRoYXQgYmFuZ2luZyB5b3VyIGF1bnQgaXMgZ3Jvc3MgYW5kIHdyb25nLCBzbyBJIGhvcGUgdGhlIHNob3cganVzdCBkb2Vzbid0IGhhbmQgd2F2ZSBpdCBhd2F5IGFzIGEgbm9uIGlzc3VlIHdpdGggSm9uIHNpbXBseSBwb2ludGluZyBvdXQgIkknbSBhIFRhcmdhcnllbiBub3csIHNvIEknbSBEVEYuIi4gCihQcm9jZWR1cmFsIG5vdGU6IEJlY2F1c2UgaXQgdGFrZXMgTmllbHNlbiBhcHByb3hpbWF0ZWx5IDIxIGRheXMgdG8gcHJvY2VzcyB0aGUgZmlyc3QgYmF0Y2ggb2YgY3VycmVuY3kgZGF0YSwgdGhlIHJlbGV2YW50IGRlbGl2ZXJpZXMgZm9yIHRoZSBPY3QuIDE2IHNlcmllcyBwcmVtaWVyZSBvZiB0aGUgIlJvc2Vhbm5lIiBzcGlub2ZmICJUaGUgQ29ubmVycyIgYXJlIGN1cnJlbnRseSB1bmF2YWlsYWJsZS4pCkxHIGlzIG5vdyB1cCB3aXRoIGZldyBuaWNlIHNwbGl0IGFpciBjb25kaXRpb25lcnMgZm9yIHRoaXMgc3VtbWVyIGFuZCBoYXZlIGNvbWUgdXAgd2l0aCBuZXcgZmVhdHVyZXMgYXMgd2VsbC4gU3BsaXQgYWlyIGNvbmRpdGlvbmVycyBzcGVjaWFsbHkgZ2V0IGEgZ29vZCBwcmVmZXJlbmNlIGFzIHRoZXkgc2VlbSB0byBiZSBtdWNoIG1vcmUgY29udmVuaWVudC4gVG8gaGF2ZSBhIGxvb2sgZm9yd2FyZCBhcyB0byB3aGljaCBhcmUgdGhlIHRvcCBzcGxpdCBhaXIgY29uZGl0aW9uZXJzIGluIEluZGlhIGZyb20gTEcgaGF2ZSBhIExvb2suCkkgbGlrZSBsZWdhbCBjaGVhdGluZyB1c2luZyBhbGwgdGhlIGxlZ2FsIHRvb2xzIHRvIGdldCBjb2lucywgeHBzIGFuZCBuZWlnaGJvcnMgYXMgc29vbiBhcyBwb3NzaWJsZS4gdG8gZ2V0IGNvaW5zIHRoZSBiZXR0ZXIgaXMgVG9tYXRvZXMuIHRvIGdldCBjb2lucyBhbmQgeHBzIHRoZSBiZXR0ZXIgaXMgQmx1ZWJlcnJ5cy4gRmlyc3Qgb2YgYWxsIHlvdSBtdXN0IHN0YXJ0IGEgbWlzc2lvbiBvciBzdXJ2aXZhbC4gQ2hvb3NlIHRoZSBwbGFudHMgeW91IHdhbnQuIFdoZW4gdGhlIGdhbWUgc3RhcnRzIHlvdSBtdXN0IG1ha2UgY2hlYXQgZW5naW5lIHNlYXJjaCBmb3IgdGhlIHZhbHVlIDUwLiBUaGVuIHlvdSB3aWxsIGhhdmUgNTAgc3VuIGF0IHRoZSBzdGFydCBwdXQgaW4gYSBwbGFudCB3b3J0aCA1MC8yNS4gKEZ1bGwgQW5zd2VyKQpDZSBxdWkgcGV1dCBub3VzIGFwcGFyYXRyZSBjb21tZSBkaXNwcm9wb3J0aW9ubiBwYXJjZSBxdWUgc2FucyBkb3V0ZSBmYW50YWlzaXN0ZSAoMTApLCBkIHF1ZSBsZXMgY2huZXMgdG1vaW5zIGRlIHRlbGxlcyBhc3NlcnRpb25zIG5lIGNvdXJlbnQgcGFzIGxlcyBydWVzLCBuZSBzZXJhaXQgY2UgcXUgRnJhbmNlOiBwYXIgZXhlbXBsZSwgbGUgY2huZSBwZG9uY3VsIGQgKFNlaW5lIE1hcml0aW1lKSBlc3QgdW4gcmlnb2xvIGF2ZWMgc2VzIHNldWxlbWVudCAyLDUgbSBkZSBkaWFtdHJlICB1biBtdHJlIGR1IHNvbCEgU2FjcnMsIGNlcyBhcmJyZXMgdGFpZW50IHByb3RncyBjb250cmUgbCBldCBsIGNvbmRhbW5haXQgZnJvaWRlbWVudCBjZWx1aSBxdWkgcyBhdHRhcXVhaXQsIGQgcXVlIGR1IGJvaXMgZGUgY2huZSBsIHRpcmFpdCBsZXMgb2JqZXRzIHNhY3JzIGV0IHZvdGlmcy4gRXhwcmVzc2lvbiBkZSBsYSBzYWdlc3NlIHN1cHJtZSBldCBkZSBsYSB2cml0IGRpdmluZSwgbGUgY2huZSB0YWl0IGF1c3NpIGFyYnJlIGRlIHBhaXggZXQgZGUganVzdGljZSwgY29tbWUgbCBsIHByb3ZlbmFudCBkZXMgU2xhdmVzLCBkZXMgR2VybWFpbnMgZXQgZGVzIENlbHRlcywgcXVpIHNlIHRyYW5zcG9zZSAgbCBkZSBTYWludCBMb3VpcyBkb250IG9uIHNlIHJhcHBlbGxlIHF1IHJlbmRhaXQganVzdGljZSBzb3VzIHVuIGNobmUgZGUgVmluY2VubmVzLiBBIGNlbGEgcyBxdWUsIHBhciBzb24gdHJvbmMsIHBhciBzZXMgbGFyZ2VzIGJyYW5jaGVzIHF1aSByZXNzZW1ibGVudCAgZGVzIGJyYXMsIHBhciBzb24gZmV1aWxsYWdlIHRvdWZmdSwgbGUgY2huZSBlc3QgZW1ibG1lIGQgZXQgam91ZSwgcGFyIHF1aXZhbGVuY2UsIGxlIHJsZSBkZSB0ZW1wbGUgZW4gcGxlaW4gYWlyLCBtYWlzIGlsIG4gamFtYWlzIHF1IGFib3JkcyBkZXMgbGlldXggc2FjcnMgcXVlIHNvbnQgbGVzIG5lbWV0b25zLCBwdWlzcXVlIGNlcyBlc3BhY2VzIHNvbnQgZGVzIHpvbmVzIGRnYWdlcyBlbiBoYXV0ZXVyLCBkb25jIHNhbnMgYXJicmUgc3VyIGxldXIgc3VyZmFjZSAobmVtOiBjaWVsLCBjaWV1eCkuIApJIGxpa2UgdGhlIDMvMiBwbGFjZSB3aXRoIDYgamFjdXp6aXMgb2YgZGlmZiB0ZW1wLCBncmVhdCBzdGVhbSByb29tLCBhIHNhbHQgcm9vbSwgZ2V0IGEgc2hhdmUsIGZhY2UgbWFzc2FnZSwgYSAoY3JhcHB5KSBidWZmZXQgaW5jbHVkZWQsIGNvbWZ5IGNoYWlycyB3aXRoIHR2IGFuZCBpbnRlcm5ldCwgMjAgb3RoZXIgdGhpbmdzLCBhbmQgYSBnb29kIG1hc3NhZ2UuIEdyZWF0IGZvciBoYW5nb3ZlcnMsIHlvdSBjYW4gc3BlbmQgNiA4IGhvdXJzIGluIHRoZXJlIGVhc2lseS4KQW55IGdvb2QgdGVhY2hlciBtYWtlcyBzdXJlIHRoYXQgdGhlIG9wcG9ydHVuaXR5IGZvciBhbGwgb2YgdGhlaXIgc3R1ZGVudHMgdG8gbGVhcm4gaXMgdGhlcmUgZXZlcnkgZGF5LiAKSXQgd291bGQgYmUgd29ydGggeW91ciB3aGlsZSB0byBnZXQgb24gaGVyIG1haWxpbmcgbGlzdCBub3cgYW5kIHN0YXJ0IHNvYWtpbmcgdXAgaGVyIHdvcmRzIG9mIHdpc2RvbSwgZXZlbiBpZiB5b3UgZG9uIHBsYW4gdG8gZ28gaW50byBiaXogZm9yIHlvdXJzZWxmIGp1c3QgeWV0LiAKUmV2ZWFsIHRoZSBjYXJkcyBvbiB0aGUgdG9wIG9mIHRoZSBkZWNrcyBhbmQgdGhlbiBwdXQgdGhlc2UgY2FyZHMgaW4gdGhlIG1pZGRsZSBvZiB0aGUgZGVja3MgYW5kIHRhbGsgdG8gdGhlIGF1ZGllbmNlIHRvIGRpdmVydCB0aGVpciBhdHRlbnRpb24gYW5kIGZvcmdldCBhYm91dCB0aGUgdmFsdWUgb2YgdGhlIGNhcmRzLiAKUmVhZCBvbiB0byBmaW5kIG91dCBob3cgdG8gcGxheSByZWFsIG1vbmV5IG9ubGluZSBwb2tlciBmcmVlIC4gUG9rZXIgaXMgYm9vbWluZy4gQW5kIG1hbnkgcGVvcGxlIHBsYXkgZnJlZSBwb2tlciBnYW1lcyBvbmxpbmUuIApEZWZlbmRpbmcgY2hhbXBpb24gTWFydHkgU215dGggZnJvbSBCZWxmYXN0IGhhcyByZXR1cm5lZCB0byB0cnkgYW5kIHJldGFpbiBoaXMgY3Jvd24sIHdoaWxlIERhdmUgIkRldmlsZmlzaCIgVWxsaW90dCB3aWxsIGJlIGZhbWlsaWFyIHRvIHZpZXdlcnMgb2YgVFYncyBMYXRlIE5pZ2h0IFBva2VyLgpXaGVuIGhvbGRpbmcgdG9wIHBhaXIgZ29vZCBraWNrZXIgdmVyc3VzIGEgc2hvcnQgc3RhY2sgZmlzaCBrZWVwIGJldHRpbmcuIFNsb3cgcGxheWluZyBvciB0cmFwcGluZyBpcyBmYW5jeSBwbGF5IHN5bmRyb21lIHdoZW4gcGxheWluZyBhZ2FpbnN0IHRoZXNlIG9wcG9uZW50cy4gV2UgbWFrZSBtb25leSBmcm9tIG91ciBoYW5kcyB0aGF0IGdvIHRvIHNob3dkb3duIGFuZCB0aGVyZWZvcmUgbmVlZCB0byBlbnN1cmUgd2UgZ2V0IGFzIG11Y2ggbW9uZXkgaW4gYXMgcG9zc2libGUgd2hlbiBob2xkaW5nIGEgcmVsYXRpdmVseSBzdHJvbmcgaGFuZC4uIApJIHdhbGtlZCBhdCB0aGUgZWRnZSBvbiB0aGlzIGNhbXBpbmcgZ3JvdW5kIGxvb2tlZCBhcm91bmQuIAo4OCA5MCkgIiBCb3JuIFRoaXMgV2F5IChEZWx1eGUgQWxidW0gQm9udXMgVHJhY2tzKSIgQmxhY2sgSmVzdXMgKyBBbWVuIEZhc2hpb24sIEZhc2hpb24gb2YgSGlzIExvdmUsIFRoZSBRdWVlbi4gCkFTTyBjb25kdWN0b3IgRGlhbmUgV2l0dHJ5IHRvb2sgYSB3ZWxsIGRlc2VydmVkIHJlc3Qgd2hpbGUgdGhlIE1hcnRpbnMgZW5nYWdlZCBlYWNoIG90aGVyIGluIHRoZSAiQnJhemlsZWlyYSIgZnJvbSBEYXJpdXMgTWlsaGF1ZCdzIFNjYXJhbW91Y2hlIFN1aXRlIGZvciB0d28gcGlhbm9zLiBJdHMgbHlyaWNhbCBtaXggb2YgTGF0aW4gZmxhdm9yZWQgamF6eiwgbGlrZSBhIHNsb3cgZGFuY2UsIGNvb2xlZCB0aGluZ3Mgb2ZmIGJlZm9yZSBhIGxpdmVseSBlbmNvcmUgICB0aGUgbGFzdCBtb3ZlbWVudCBvZiBTYWludCBTYW5zJyAiQ2Fybml2YWwgb2YgdGhlIEFuaW1hbHMuIi4gCkRlcyBncmFpbnMgcmFkaW9hY3RpZnMgc29udCB1dGlsaXNzIHBvdXIgdHJhaXRlciBjZXJ0YWlucyBjYW5jZXIuIFBob3RvIDogUmFkaW8gQ2FuYWRhClNrZXRjaHlQYWR6IHUKV2l0aCAxLjYzNSBwZW9wbGUgcGFzc2luZyB0aHJvdWdoIHRoZSBmcm9udCBkb29yIG9uIFNhdHVyZGF5LiBNYXkgMjcuIApDb25jbHVzaW9uOiBJbiBhIHN1Ymdyb3VwIG9mIHBhdGllbnRzIHdpdGggYWN1dGUgbm9uIHNwZWNpZmljIExvdyBCYWNrIFBwYWluICBzcGluYWwgbWFuaXB1bGF0aW9uIHdhcyBzaWduaWZpY2FudGx5IGJldHRlciB0aGFuIE5TQUlEIERpY2xvZmVuYWMgYW5kIGNsaW5pY2FsbHkgc3VwZXJpb3IgdG8gcGxhY2Viby4KNGsgbGlmZSwgMm5kLzNyZCBhc2NlbmRlbmN5LCBjYXBwZWQgcmVzaXN0YW5jZXMgYW5kIDIgNCBleHRyYSBkZWZlbnNpdmUgbGF5ZXJzIChCbGFzaHBlbXkgRW5mZWVibGUsIGhpZ2ggZnJlZXplIGNoYW5jZSwgNTArIGJsb2NrIGNoYW5jZSwgTWluZCBvdmVyIE1hdHRlciwgY3dkdCBwaGFzZSBydW4gKyBpbW1vcnRhbCBjYWxsLCBUYXVudCB0b3RlbSwgMjArIERvZGdlIGNoYW5jZSwgaGlnaCBsaWZlIGxlZWNoLCBhbnRpIGJsZWVkL2lnbml0ZS9ldGMgZmxhc2tzLCBoaWdoIGhlYWx0aCByZWdlbiBldGMpLiAKVHdvIHByb2JsZW1zLiBUYXggZnJlZXplIGFuZCBzcHJhd2wuIFRoaXMgaGFzIHJlc3VsdGVkIGluIGFuIGluZnJhc3RydWN0dXJlIGRlZmljaXQgZXN0aW1hdGVkIGF0ICQ2IEJpbGxpb24gYW5kIGdyb3dpbmcuCkkgcmVjZW50bHkgY2hhbmdlZCBqb2JzIGFuZCBteSBuZXcgam9iIGRvZXNuJ3Qgb2ZmZXIgaW5zdXJhbmNlLCB3aGljaCBpcyBhIGZpcnN0IGZvciBtZS4gQWZ0ZXIgbG90cyBvZiBzZWFyY2hpbmcsIEkgZmluYWxseSBmb3VuZCBhIHJlbGF0aXZlbHkgImFmZm9yZGFibGUiIEJDQlMgcGxhbiBmb3IgJDM3MCBhIG1vbnRoLiBNb3N0IHBlb3BsZSdzIHJlYWN0aW9uIHRvIHRoYXQgcHJpY2UgaXMgIm9oLCB0aGF0J3MgYWN0dWFsbHkgbm90IHNvIGJhZCIgYmVjYXVzZSB0aGV5IGFsbCBwYXkgbGlrZSAkNTAwICQxNTAwIGEgbW9udGguLiAKRGVhbiBhbmQgWm9tYmllIFNhbSB0aGVuIGdvIHRvIGZpZ2h0IHRoZSBZZWxsb3cgRXllZCBEZW1vbiwgdXNpbmcgdGhlIGFuY2llbnQgZmlnaHRpbmcgdGVjaG5pcXVlIG9mIEhvcGluZyBUaGUgRXZpbCBEdWRlIEdldHMgUmVhbGx5IEJhZCBBdCBGaWdodGluZyBBbGwgT2YgQSBTdWRkZW4gVG8gQWR2YW5jZSBUaGUgUGxvdC4gTHVja2lseSwgaXQgd29ya3MuIApBaG9yYSBlbCBwdW50bywgZ2VudGUgY29tbyB0IGVzdGEgbXV5IGEgbGEgZGVmZW5zaXZhIGRlIGxhIHZpZGEgZGVzZGUgbGEgY29uY2VwY2luLCBwZXJvIHlhIGN1YW5kbyBuYWNlbiBlcyBjYWRhIHF1aWVuIHBvciBzdSBsYWRvLCBwb3IgbG8gcXVlIGVzdG8gZGUgbGEgIm1vcmFsIiBxdWUgdHJhdGFuIGRlIHByZXNlbnRhciBub21hcyBkZW5vdGEgcXVlIHF1aWVyZW4gbWV0ZXIgc3VzIGlkZWFzIHJldHJvZ3JhZGFzIHkgbm8gc2FiZW4gbmFkYSBkZSBsYSBjYWxpZGFkIGRlIHZpZGEuLiAKQXMgcGFydCBvZiB0aGUgcHJpemUsIENocmlzdGlhbiB3aWxsIGFsc28gYmUgcGxheWluZyBpbiB0aGUgbWFpbiBldmVudCwgcHJhY3RpY2luZyBoaXMgc2tpbGxzIGJlZm9yZSB0YWtpbmcgcGFydCBpbiB0aGUgdG91cm5hbWVudCBpbiB0aGUgQmFoYW1hcy4gClRoZSBwb3dlciBvZiBmYW50YXN5LiBXb25kZXIgcm9tYW5jZSBpcyB0aGUgYmVzdCBzZWxsaW5nIGdlbnJlIG9mIGxpdGVyYXR1cmUuLiAKUG91ciA0NSBkJ2V4dHJhaXQgZG9udCBvbiBuZSBjb25uYWl0IHBhcyBsZSByYXRpbyBhIGZhaXQgY2hlciAhRGVzIHJlc3RyaWN0aW9ucyBvbnQgdCBwdWJsaWVzIHBhciBsJ09NUyAgcHJvcG9zIGRlIGwnYXJ0bWlzaW5pbmUuIApXaGF0IG1pZ2h0IGVzdGFibGlzaCB0aGUgcGVyaXBoZXJpZXMgb2YgdGhpcyBxdWVzdGlvbiBhcmUgYm9va3MgdGhhdCBrZWVwIGludGFjdCBhIGJlbGllZiBzeXN0ZW0sIG9yIHdheSBvZiBsaWZlLCBhIHNlY3JldCBvciBub3QgY29kaWZpY2F0aW9uIG9mIGEgc3RhdGUgb2Ygd2VsbCBiZWluZz8gQSBCaWJsZT8gQWxjb2hvbGljcyBBbm9ueW1vdXM/IFByb2JhYmx5IHRoYXQgaXMgdGhlIGZpcnN0IHBsYWNlIHRvIHZpc2l0LCB0aGUgcmVsaWdpb3VzIGJvb2ssIHRob3VnaCBvZmZoYW5kIGl0IHNlZW1zIHRoYXQgdGhlIHRyYXZlbCBvZiB0aGlzIHNvcnQgb2YgYm9vayB3b3VsZG4gdHJhbnNjZW5kIG9uZSBvd25lci4gVGhlIEJpYmxlIGFuZCBjb21wYW55IGFyZSBlbm9ybW91c2x5IHBvcHVsYXIgYm9va3MgYW5kIGhhdmUgYmVlbiBwcmludGVkIG5vIGRvdWJ0IGluIHRlcm1zIG9mIGJpbGxpb25zIG9mIGNvcGllcywgc28gdGhleSBoYXZlIGEgbXVjaCBiZXR0ZXIgY2hhbmNlIG9mIGJlaW5nIHRoZSBsZWFkZXIgb2YgdGhlIGNhdGVnb3J5IGJ5IHNoZWVyIG51bWVyaWNhbCBwb3NzaWJpbGl0eS4gCkkgbGVhbiB0byBmb2xkIG1haW5seSBiZWNhdXNlIG9mIGhpcyBlbm9ybW91cyByaXZlciBzaXppbmcgcGx1cyBwb3B1bGF0aW9uIHJlYWQgc2F5aW5nIHRoYXQgcml2ZXIgeHJhaXNlcyBhcmUgbnV0dGVkIG1ham9yaXR5IG9mIHRpbWUuCldoaWNoIHB1dCB1cyBpbiBhIGxvd2VyIGJyYWNrZXQuIApUaGUgb3JpZ2luYWwgbW92aWVzLCBldmVuIHRoZSBwcmVxdWVscywgZXhwbGFpbmVkIGVub3VnaCB0byBtYWtlIHNlbnNlIG9uIHRoZWlyIG93biwgYnV0IHRoZSBuZXcgbW92aWVzIHNlZW0gdG8gdGhpbmsgaXQgb2sgdG8gaGFuZCB3YXZlIGV2ZXJ5dGhpbmcgYXdheSB0byBhZGQgaW4gYSBjYXNpbm8gc2NlbmUgYW5kIHRoZSB2aWV3ZXIgY2FuIGluc3RlYWQgYnV5IDIgMyBzdXBwbGVtZW50YXJ5IGJvb2tzIHRvIGdldCA1MCUgbW9yZSBpbmZvIHRoYXQgc2hvdWxkIGJlIGluY2x1ZGVkIGluIHRoZSBtb3ZpZXMuUmVtaW5ndG9udGhlc2hvdGd1biAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxNiBkYXlzIGFnb0kgc2F5IEhpdG1hbiwgSSBqdXN0IHBsYXllZCB0aHJvdWdoIGl0IGFuZCBpdHMgcHJldHR5IGRpZmZpY3VsdCBiZWZvcmUgeW91IGdldCB0aGUgcnl0aHltIGRvd24uIElmIHlvdSBkb24gZG8gc3RlYWx0aCB0aGVuIGV2ZXJ5dGhpbmcgaW5zdGFudGx5IGdldHMgaGFyZGVyIGJlY2F1c2UgY29tYmF0IGlzIGRpZmZpY3VsdCBhZ2FpbnN0IGFuIGVudGlyZSBiYXNlIG9mIGFuZ3J5IGd1YXJkcyBsb2wuIApBbmQgeWV0LCBsaWtlIHRoZSBVUyBkZWZlYXQgYXQgdGhlIFdvcmxkIEN1cCwgdGhlIGJlc3QgZGVmZW5zZSBpcyBhIGdvb2Qgb2ZmZW5zZS4gV2hvIHdhbnRzIHRvIHBsYXkgaXQgYW55d2F5PyBBZmdoYW5pc3Rhbj8gTGV0IGVpdGhlciB0dXJuIGl0IGludG8gYSByZWFsIEFtZXJpY2FuIHN0eWxlIGZvb3RiYWxsIG1hdGNoIGFuZCBraWxsIHRoZSBiYXN0YXJkcyBvciBnZXQgdGhlIGhlbGwgb3V0IG9mIHRoZSBnYW1lLiAKVGhpcyBpcyB5b3VyIGZyaWVuZGx5IG5laWdoYm9yaG9vZCB2YW1waXJlIG1vZCBoZXJlLCB1bmxpa2UgdmFtcGlyZSBiYXRzIHdlIGRvbid0IGdldCB0aGUgd2luZ3MuIApFZHVjYXRpb25hbGx5LCBJIHdhcyAyMywgMjQuIFNvY2lhbGx5IGFuZCBlbW90aW9uYWxseSwgSSB3YXMgYSBzY2FyZWQgbGl0dGxlIGtpZC4uIAogTGlxdW9yZW50bmFobWUgKGthbm4gaGVsZmVuLCBhYmVyIG5pY2h0IGltbWVyKS4uIApCZWZvcmUgb25saW5lIHBva2VyLCBwZW9wbGUgd291bGQgcmVhbGx5IGhhdmUgdG8gd2FpdCBhbmQgZXZlbiBwYXkgZm9yIGhvdGVsIHJvb21zLCBhaXJmYXJlIGFuZCBtZWFscyBpbiBvcmRlciB0byBwbGF5IHBva2VyIG9yIGdldCBhY2Nlc3MgdG8gYSBsaXZlIHBva2VyIGdhbWUuIFdpdGggdGhlIGhlbHAgb2Ygb25saW5lIHBva2VyLCB5b3UgZG9uJ3QgaGF2ZSB0byBzcGVuZCBtb25leSBvbiB0aG9zZSB1bm5lY2Vzc2FyeSB0aGluZ3MuIFlvdSBjYW4gbm93IHBsYXkgb25saW5lIHBva2VyIGluIHlvdXIgcGFqYW1hcyByaWdodCBpbiB5b3VyIGhvbWUuLiAKVGhlIERldHJvaXQgMyBsZWFkZXJzCk15IHByb3BlciBuYW1lIGlzIExpbmRzYXksIGFsdGhvdWdoIEknbSBrbm93biBhcyBSYWlucy4gClRoZSBkaXN0YW5jZSBiZXR3ZWVuIHRoZSBvbGQgZ3JhbmRzdGFuZCBhbmQgdGhlIGN1cnJlbnQgcGFyaSBtdXR1ZWwgd2FnZXJpbmcgYXJlYSByb3VnaGx5IHRoZSBzYW1lIGFzIGl0IHdhcyBiZWZvcmUgdGhlIGdyYW5kc3RhbmQgd2FzIHRvcm4gZG93biwgU3RldmVuc29uIHdyb3RlLgpJdCBzYWlkIGl0IHdvdWxkIGRldGVjdCBtaXNpbmZvcm1hdGlvbiBmcm9tIGdyb3VwcyB3aXRoIG5hbWVzIHRoYXQgbWF5IG5vdCBzdWdnZXN0IG9wcG9zaXRpb24gdG8gaW1tdW5pemF0aW9uIHRocm91Z2ggaXRzIGFydGlmaWNpYWwgaW50ZWxsaWdlbmNlIHN5c3RlbSwgd2hpY2ggaXMgc2Nhbm5pbmcgcG9zdHMgYW5kIGxpbmtzIHNoYXJlZCBvbiBGYWNlYm9vaywgYW5kIHRoYXQgYSB0ZWFtIHdvdWxkIGNvbmZpcm0gaWYgdGhlIGNvbnRlbnQgdmlvbGF0ZXMgdGhlIGNvbXBhbnkgcG9saWNpZXMuClR3byB3ZWVrcyBhZnRlciBzZWN1cmluZyB0aGUgMjAxMiBEZW1vY3JhdGljIE5hdGlvbmFsIENvbnZlbnRpb24sIGEgbG90IG9mIHdvcmsgaXMgYWxyZWFkeSB1bmRlcndheS4gdGhpcyBvbmUgZmFuIGRpZCBmb3IgdGhlIGNvbnZlbnRpb24uIFBlcnNvbmFsbHksIEkgbGlrZSB0aGUgIldlIHB1dCB0aGUgTkMsIGluIEROQyIgYnV0dG9uLgpBbmQgbm93IHRvIGJlZ2luLi4gCkNobWlseiB1ClJvYmVydCBUaWJibywgbGVmdCwgYW5kIEVkd2FyZCBTbm93ZGVuIGluIE1vc2NvdyBvbiBKdWx5IDI2LCAyMDE2LiBhdHRlbXB0cyB0byBhcnJlc3QgU25vd2RlbiBjb3VsZCBoYXZlIGJlZW4gcmlwcGVkIGZyb20gdGhlIHBhZ2VzIG9mIGEgc3B5IHRocmlsbGVyLgpJdCB0cmVuZHMgeW91ciBtb3N0IGNvbW1vbiBtb29kcyBhbmQgY29nbml0aXZlIGRpc3RvcnRpb25zLiBJIGZvdW5kIGl0IGhlbHBmdWwgdG8gc25hcCBtZSBvdXQgb2YgYW54aWV0eSBhbmQgY2F0YXN0cm9waGljIHRoaW5raW5nLCBhcyB3ZWxsIGFzIGlycmF0aW9uYWwgZ3VpbHQgYW5kIHdvcnJ5Li4gCkkgdGhvdWdodCB0byBteXNlbGYgJ0knbSBwcmV0dHkgc3VyZSBJIGRvJy4gV2hlbiBJIHJlYWxpc2VkIEkgZGlkIEkgZ290IHByZXR0eSBleGNpdGVkIGJ1dCBJIHN0aWxsIGRpZG4ndCB1bmRlcnN0YW5kIHdoYXQgSSBoYWQgd29uIHVudGlsIHRoZSBwaXQgYm9zcyBjYW1lIG92ZXIgdG8gdGVsbCBtZSB0byBzZXR0bGUgZG93biBhbmQgZXhwbGFpbmVkIHRoYXQgaWYgSSBkaWQgaW4gZmFjdCBoYXZlIHdoYXQgSSBzYWlkIEkgaGFkLCBJIHdvdWxkIHdpbiB3aGF0IHdhcyBkaXNwbGF5ZWQgb24gdGhlIHNjcmVlbi4gVGhhdCBkaWQgbm90IHNldHRsZSBtZSBkb3duIGF0IGFsbCBhcyBJIHRoZW4gcHJvY2VlZGVkIHRvIGRvIHNvbWUgdmljdG9yeSBsYXBzIGFyb3VuZCB0aGUgY2FzaW5vLiBJIHdvdWxkIGxvdmUgdG8gc2VlIHRoZSB2aWRlbyBmb290YWdlIGhhIGhhLi4gClNvIHRoaXMgc3ViIHdpbGwgZG8gZXZlcnl0aGluZyB0byBkZWxlZ2l0aW1pemUgY2hpbmEsIHdoZXRoZXIgYnJpbmdpbmcgdXAgaHVtYW4gcmlnaHRzLCBzcHlpbmcsIGNvdW50ZXJmZWl0aW5nLCBkaXNndXN0aW5nIENoaW5lc2UgYmVoYXZpb3IsIHRoZSBsaXN0IGdvZXMgb24uCkFjdGlvbnMgeW91IHRha2UuIFdlIGNvbGxlY3QgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGFjdGlvbnMgeW91IHRha2Ugd2hlbiB1c2luZyB0aGUgU2VydmljZXMuIFRoaXMgaW5jbHVkZXMgeW91ciBpbnRlcmFjdGlvbnMgd2l0aCBjb250ZW50LCBsaWtlIHZvdGluZywgc2F2aW5nLCBoaWRpbmcsIGFuZCByZXBvcnRpbmcuIApCdXQgRGVwdXR5IE1heW9yIE5hdGhhbiBXaWxsaXMgbW92ZWQgYW4gYW1lbmRlZCBtb3Rpb24gdG8gb2ZmZXIgQ2x1YiBMZW5ub3ggYSA3NSBwZXIgY2VudCBkaXNjb3VudCBvbiB0aGUgcmVudGFsIGZvciByZWR1Y2luZyBwb2tlciBtYWNoaW5lIG51bWJlcnMgYnkgMTAgcGVyIGNlbnQsIG9yIGNvbnZlcnNpb24gdG8gYSAkMSBwZXBwZXJjb3JuIHJlbnRhbCBpZiBtYWNoaW5lIG51bWJlcnMgd2VyZSBkZWNyZWFzZWQgYnkgMjAgcGVyIGNlbnQuCkkgc21pbGVkIGJhY2sgYW5kIGFjdGVkIGFsbCBjb29sIGJlY2F1c2UgaSB3YXMgYSBza2F0ZXIgYm95IHdpdGggc2thdGVyIGhhaXIgYW5kIG15IHZpc2lvbiBzdHJlZXQgd2VhciBhbmQgc29tZSBzaGlydCB3aXRoIGEgc2t1bGwgb24gaXQgb3Igc29tZXRoaW5nLiBJdCB3YXMgd29ya2luZyB0b28uIApPbmNlIHlvdSBhcmUgZG9uZSBwbGF5aW5nLCB5b3UgZ28gdG8gdGhlIGNhc2hpZXIgd2l0aCB0aGUgY2hpcHMgdGhhdCB5b3UgaGF2ZSBhbmQgZ2V0IHJlYWwgY2FzaCBtb25leSBpbiByZXR1cm4gZm9yIHRoZW0uIEkgYW0gdHJ5aW5nIHRvIGdhdWdlIHlvdXIgb3Bwb25lbnQncyByZWFjdGlvbi4gCkhhbmRsZSB5b3VyIGJ1c2luZXNzIGVmZmljaWVudGx5ICAgZ2l2ZSB5b3VyIGRldGFpbHMsIHB1Ymxpc2ggcGhvdG9zLCBjb250YWN0IGRldGFpbHMsIGFuZCBtdWNoIG1vcmUuIApUeXBpY2FsbHksIGFyZ3VtZW50cyBmb2N1cyBvbiByb2xlIGNvbmdydWl0eSB0aGVvcnksIHdoaWNoIHBvc2l0cyB0aGF0IGluZGl2aWR1YWxzIGZhY2UgZGlzY3JpbWluYXRpb24gd2hlbiB0aGV5IGJlaGF2ZSBjb250cmFyeSB0byBwcmVzY3JpYmVkIHNvY2lldGFsIHJvbGVzIChFYWdseSBLYXJhdSwgMjAwMikuIC9zClRoZXJlJ3MgYSBsb3Qgb2YgbmljZSBsaXR0bGUgYXJ0IGV2ZW50cyBkb3dudG93biBhbmQgc29tZXRpbWVzIGEgcmVhbGx5IGludGVyZXN0aW5nIGd1ZXN0IGxlY3R1cmUgYXQgVVNNLiAKR2VnZW5iZWlzcGllbC4gQWxzIGljaCBhbiBlaW5lciBTY2h1bGUgZnIgU2Nod2VybWVocmZhY2hiZWhpbmRlcnRlIGdlYXJiZWl0ZXQgaGFiZSwgd2FyIGRhIGF1Y2ggV2lja2VsbiBhbmdlc2FndC4gRGllIFNjaGxlciB3YXJlbiAxNyAyMCBKYWhyZSBhbHQuIApJIGN1cnJlbnRseSBsaXZlIGluIG15IGNoaWxkaG9vZCBob21lIGJ5IG15c2VsZiB0aGF0IEkgZG8gbm90IGhhdmUgdGhlIG1vbmV5IHRvIHJlcGFpciBteXNlbGYuIApBZnRlciBiYW5naW5nIGl0IG9mZiBvbiB0aGUgdHVybiwgSSBzaG92ZWQgb3ZlciBhbiBvcHBvbmVudHMgYmV0LCB3aG8gY2FsbGVkIGl0IG9mZiB3aXRoIHRvcCBhbmQgYm90dG9tIHBhaXIsIGFuZCB0aGUgcml2ZXIgYnJpY2tlZC4gSSByZW1lbWJlciBsb29raW5nIHVwIGF0IHRoZSByYWlsIGFuZCBteSBtYXRlIGJlaW5nIGluIGFic29sdXRlIGF3ZSBvZiB3aGF0IEkgaGFkIGp1c3QgcHVsbGVkIG9mZi4gCk1vcmUgb3IgbGVzcyBvZiBhIHNoaXQgc3Rvcm0gdGhhbiBicmFnZ2luZyBvbiB0YXBlIGFib3V0IHNleHVhbCBhc3NhdWx0LCBtYWtpbmcgZnVuIG9mIGEgZGlzYWJsZWQgcGVyc29uLCBtYWtpbmcgZnVuIG9mIGEgd29tYW4ncyBwZXJpb2QsIG1ha2luZyBmdW4gb2YgZGVhZCB2ZXRlcmFucywgbWFraW5nIGZ1biBvZiBwcmlzb25lcnMgb2Ygd2FyLCBzdGFyaW5nIHRoYXQgd2Ugc2hvdWxkIG11cmRlciB0ZXJyb3Jpc3RzIGZhbWlsaWVzLCBhc2tpbmcgYWJvdXQgbnVjbGVhciB3YXIsIGZpcmluZyBwZW9wbGUgaW52ZXN0aWdhdGluZyBoaW0sIGRlY2xhcmluZyBhIG5hdGlvbmFsIGVtZXJnZW5jeSBvdmVyIGFuIGludmVzdGVkIHJhY2lzdCBjcmlzaXMsIGV4cGFuZGluZyBpbGxlZ2FsIGltbWlncmFudCBjb25jZW50cmF0aW9uIGNhbXBzLCBvciBzaWRpbmcgd2l0aCBuYXppcyBhbmQgd2hpdGUgc3VwcmVtYWNpc3RzPy4KSW1tZWRpYXRlbHkgc2VsZWN0IEVYSVRHQU1FLC4gQmFjayBhdCB0aGUgbWFpbiBtZW51LiBDbGljayBUVVRPUklBTCwuIApUaGF0LiBJc24gaG93IGl0IHdvcmtzLCBhdCBsZWFzdCBub3QgZm9yIGVsZXBoYW50cyBhZmFpay4gVGhleSBzbG93ZXIgbWV0YWJvbGlzbSBhbmQgbm90IGJ1aWx0IGZvciB0aGUgY29sZCAodGhlIG90aGVyIHdheSB0byBiZSBleGFjdCwgdGhhdCB3aHkgdGhleSB0aG9zZSBiaWcgZWFycywgYnV0IHRoZXkgc3RpbGwgZ2V0IHN1bmJ1cm50KS4gClNoZSB3b3JrcyBzbyBmcmVha2luZyBoYXJkIGFuZCBzaGUgY2FuIGJhcmVseSBwYXkgaGVyIHN0dWRlbnQgbG9hbnMsIG5vbmV0aGVsZXNzIGhlciBoZWFsdGggaW5zdXJhbmNlLiAKRHVyaW5nIE1zIEJ1cm5zJyAxNCBtb250aCB0ZW51cmUgYXMgdGhlIHNvbGUgcmVzaWRlbnQgbWFnaXN0cmF0ZSBpbiBQb3J0IE1hY3F1YXJpZSBhbmQgS2VtcHNleSwgc2hlIGhhZCA3MCBkYXlzIG9mIGFzc2lzdGFuY2Ugb3IgcmVsaWVmIHdoZW4gb24gbGVhdmUsIE1zIFN0ZXJuIHNhaWQuCldhbGtpbmcgdG8gd29yayB0aGlzIG1vcm5pbmcgY3J5aW5nIEkgc2F3IHRoaXMgbGVmdCBhdCB0aGUgZG9vcnN0ZXAgdG8gbXkgam9iLiAKQnV0IHdoZW4gdGhleSBmb3VuZCBvdXQgdGhleSdkIGJvdGggYmUgYXR0ZW5kaW5nIHRoZSBVbml2ZXJzaXR5IG9mIENvbG9yYWRvIGluIEJvdWxkZXIsIHRoZXkgYmVjYW1lIGZhc3QgZnJpZW5kcy4gVGhlbiwgYmVzdCBmcmllbmRzLiBBbmQsIG5vdywgcm9vbW1hdGVzIGluIGEgV2lsbGlhbXMgVmlsbGFnZSB0b3dlci4KNSkgVGhlICJubyBjcmltaW5hbCBpcyB0aGF0IHN0dXBpZCIgYXJndW1lbnQgaGFwcGVucyBpbiBldmVyeSBjcmltaW5hbCBjYXNlICAgeWVzLCB0aGV5IGFyZSB0aGF0IHN0dXBpZC4gCkpvaG4gb2YgR29kIG1hZGUgdHdvIG1vdmllcyB3aXRoIE1hcmluYSBBYnJhbW92aWMsIHdobyBpcyBtZW50aW9uZWQgaW4gdGhlIGVtYWlscyBvZiBCaWxsIENsaW50b24gZm9ybWVyIGNoaWVmIG9mIHN0YWZmIGFuZCBIaWxsYXJ5IGNhbXBhaWduIG1hbmFnZXIsIEpvaG4gUG9kZXN0YS4KVGhpcyBwbGF5cyBsaWtlIHRoZSBraW5kIG9mIGdlbmVyaWMgY29taWMgYm9vayBtb3ZpZSB0aGF0IHdhcyBpbiB2b2d1ZSAxNSB5ZWFycyBhZ28uIAo4LiAiTiAzIGZhdHR5IGFjaWRzIGFyZSBlc3NlbnRpYWwgZm9yIG5vcm1hbCBncm93dGggYW5kIGRldmVsb3BtZW50IGFuZCBwbGF5IGFuIGltcG9ydGFudCByb2xlIGluIHRoZSBwcmV2ZW50aW9uIGFuZCBtYW5hZ2VtZW50IG9mIGNvcm9uYXJ5IGhlYXJ0IGRpc2Vhc2UgKENIRCksIGFuZCBhcmUgYmVuZWZpY2lhbCBpbiB0aGUgbWFuYWdlbWVudCBvZiBoeXBlcnRlbnNpb24sIGRpYWJldGVzLCBhcnRocml0aXMgYW5kIG90aGVyIGF1dG9pbW11bmUgZGlzb3JkZXJzLCBhbmQgY2FuY2VyLiIKV2UgdXNlIEFCIFRhc3R5IHRvIGhlbHAgdXMgdW5kZXJzdGFuZCBob3cgdXNlcnMgbmF2aWdhdGUgb3VyIHdlYnNpdGUgYW5kIHRvIGFsbG93IHVzIHRvIHRlc3QgZGlmZmVyZW50IHZlcnNpb25zIG9mIG91ciBzaXRlIG9uIHBhcnRpY3VsYXIgYXVkaWVuY2VzLiBUaGUgdG9vbCB1c2VzIGNvb2tpZXMgdG8gaWRlbnRpZnkgcmV0dXJuaW5nIHVzZXJzIGFuZCBjYW4gdXNlIElQIGFkZHJlc3NlcyB0byBkZXRlcm1pbmUgZ2VuZXJhbCBsb2NhdGlvbiwgYnV0IG5vIG90aGVyIHBlcnNvbmFsbHkgaWRlbnRpZmlhYmxlIGRhdGEgaXMgY29sbGVjdGVkLiAKSXQgd2FzIHJlY2VudGx5IGFubm91bmNlZCB0aGF0IFBhcGFyYXp6aSB3b3VsZCBiZSByZWxlYXNlZCBhcyBMYWR5IEdhR2EncyBuZXh0IHNpbmdsZSBpbiBJcmVsYW5kLiBMb3ZlR2FtZSB3YXMgaW5pdGlhbGx5IHBsYW5uZWQgdG8gYmUgdGhlIDNyZCBzaW5nbGUgZnJvbSB0aGUgYWxidW0gYnV0IGR1ZSB0byBBdXN0cmFsaWEgYmFubmluZyB0aGUgY29udHJvdmVyc2lhbCB2aWRlbyBhbmQgbHlyaWNzLCBHYUdhIGRlY2lkZWQgdG8gY2hhbmdlIHRoZSBJcmlzaCBzaW5nbGUgcmVsZWFzZSB0byBQYXBhcmF6emkuLiAKUkVBRCBNT1JFOiBXaG8gaXMgU3RlcGhlbiBQYWRkb2NrPwpJdCBjYW4gYWxzbyBpbXByb3ZlIGltbXVuZSBmdW5jdGlvbiBhbmQgaGVscCB0aGUgYm9keSBlbGltaW5hdGUgd2FzdGUgZnJvbSB0aXNzdWVzIGFuZCBjZWxscy4gClNvbWUgb2YgaGVyIGhpdHMgd2VyZSAiVHJ5IEFnYWluIiBpbiAyMDAwLCB3aGljaCB3ZW50IHRvIG51bWJlciBvbmUsICJNb3JlIFRoYW4gQSBXb21hbiIgYW5kICJSb2NrIFRoZSBCb2F0IiBpbiAyMDAyLCBhbmQgIk1pc3MgWW91IiBpbiAyMDAzLiAKQmFzaWNhbGx5LCB5b3UgZG9uJ3QgY2hhbmdlIHlvdXIgc3RyYXRlZ3kganVzdCBiZWNhdXNlIHlvdSBsb3NlLiBBbmQgb24gdGhlIG90aGVyIHNpZGUsIHlvdSBkb24ndCBjaGFuZ2UgeW91ciBzdHJhdGVneSBpZiB5b3Ugd2luLCBlaXRoZXIuIApBcyBpdCB0dXJucyBvdXQsIEhhcHBpbmVzcyBQcm9qZWN0IGNyZWF0b3IgR3JldGNoZW4gUnViaW4gYWdyZWVzLiBTaGUgYXNzZXJ0cyB0aGF0IGhlciBleHBlcmltZW50IGlzbid0IGEgcXVlc3QgdG8gZXJhZGljYXRlIHVuaGFwcGluZXNzIGZyb20gaGVyIGxpZmUuIApHb2QgZGlkIG5vdCBmb3JtIGFueXRoaW5nIGVsc2UgYW1vbmcgYWxsIG9mIEhpcyBjcmVhdGlvbiBpbiB0aGUgd2hvbGUgdW5pdmVyc2Ugb24gSGlzIGltYWdlOyBub3QgZXZlbiBhbmdsZXMgVGVsbCBtZSBvbmUgdGhpbmc7IHdobyBkbyB5b3UgbG92ZSBtb3N0IGluIHlvdXIgbGlmZT8gSWYgeW91IGFyZSBhIHBhcmVudDsgZGVmaW5pdGVseSB5b3Ugd2lsbCBzYXkgY2hpbGQgV2h5PyBCZWNhdXNlLCB5b3VyIGJhYnkgaXMgeW91ciBmbGVzaCBibG9vZC4gWW91ciBiYWJ5IGlzIHlvdXIgaW1hZ2UuIFdlIGFyZSBhbHdheXMgc28gcHJvdWQgdG8gc2F5IHRoYXQsIGhpcyBvciBoZXIgZXllcyBhcmUganVzdCBsaWtlIG1vbSwgZGFkLCBncmFuZCBwYSBvciBncmFuZCBtb20uLiAKIlRoZSBmaW5hbCB3ZW50IGZvciA0NSBtaW51dGVzLCIgRnJhbmNpcyBzYWlkLgpVbHRpbWF0ZWx5LCB5b3UgY2FuIGNob29zZSBmcm9tIGEgbnVtYmVyIG9mIHBva2VyIGNoaXAgc2V0cyBvbiB0aGUgbWFya2V0LiBJZiB5b3Ugd2FudCB0byBtYWtlIHRoZSByaWdodCBjaG9pY2UsIHlvdSB3aWxsIHdhbnQgdG8gc2VsZWN0IHRoZSAxMDAgMTEuNWcgVGV4YXMgSG9sZGVtIFBva2VyIENoaXAgU2V0LgpJZiB5b3UgYW1vbmcgdGhlIG1hc3NpdmUgY3Jvd2QgdHVybmluZyBvdXQgZm9yIFN5ZG5leSBNYXJkaSBHcmFzIHBhcmFkZSB0aGlzIHdlZWtlbmQsIHlvdSBtaWdodCBub3RpY2UgYSBzbGlnaHQsIHBlcmhhcHMgbGVzcyBzcGFya2x5IGRpZmZlcmVuY2UgY29tcGFyZWQgd2l0aCBwcmV2aW91cyB5ZWFycy4KTmV2ZXIgZ2V0cyBmcmF6emxlZCwgaGUgc2FpZC4gClRoaXMgbWFrZXMgc2Vuc2UgZ2l2ZW4gdGhlIHV0dGVyIGFuZCBjb21wbGV0ZSBzYXR1cmF0aW9uIG9mIHBvcHVsYXIgY3VsdHVyZSB3aXRoIGJsb29kc3Vja2Vycy4gQmV0d2VlbiAiVHdpbGlnaHQiIGFuZCAiVGhlIFZhbXBpcmUgRGlhcmllcyIgYW5kIHRoZSBtb3JlIGFkdWx0ICJUcnVlIEJsb29kLCIgc2hlIGFsbW9zdCBoYWQgbm8gY2hvaWNlIGJ1dCB0byBzdWNjdW1iIHRvIHRoZSBzcGVsbCBvZiBibG9vZCBzdWNraW5nIG1vbnN0ZXJzLi4gCktlaXRoIGhvbGRzIGEgQkEgZnJvbSBOZXcgWW9yayBVbml2ZXJzaXR5Li4gCkdlcmFsZCBKb3NlcGggVW5pYWMKQnVpbGRpbmcgb24gaXRzIGV4aXN0aW5nIGNvbW1pdG1lbnRzIGFzIHBhcnQgb2YgdGhlIFN1c3RhaW5hYmxlIFN0b2NrIEV4Y2hhbmdlIEluaXRpYXRpdmUsIE5FTyBhbm5vdW5jZWQgdHdvIG5ldyBjb21taXRtZW50cyB0aGF0IGFmZmlybSBpdHMgZGVkaWNhdGlvbiB0byBnZW5kZXIgZXF1YWxpdHkgaW4gQ2FuYWRpYW4gY2FwaXRhbCBtYXJrZXRzLiBJbiBKYW51YXJ5LCBORU8gYmVjYW1lIHRoZSBmaXJzdCBDYW5hZGlhbiBzdG9jayBleGNoYW5nZSB0byBzaWduIGEgQ0VPIFN0YXRlbWVudCBvZiBTdXBwb3J0IGZvciB0aGUgLCBhbiBpbml0aWF0aXZlIHNwZWFyaGVhZGVkIGJ5IHRoZSBFdXJvcGVhbiBVbmlvbiBpbiBwYXJ0bmVyc2hpcCB3aXRoIFVOIFdvbWVuIGFuZCBVTiBHbG9iYWwgQ29tcGFjdC4gClRoZSBydWxlIGl0c2VsZiBpcyB2ZXJ5IGxpZ2h0LCBhbmQgd2FzIGEgZmlyc3Qgc3RlcCB0byBmaXhpbmcgdGhlIHRpdGxlIHByb2JsZW0gdGhlIHN1YiBkZWZpbmF0ZWx5IGhhcyBieSB0YXJnZXRpbmcgdGhlIGNvbXBsZXRlbHkgaXJyZWxldmFudCBkZXRhaWxzLiBJdCBhbHNvIHdoeSB3ZSBtYWRlIHRoYXQgcnVsZSB0aGF0IGRvZXNuIGxldCBwZW9wbGUgc2hhcmUgYXJ0d29yayB0aGVpciBmYW1pbHkgZG9lcy4KTXkgbGlmZSwgbXkgcnVsZXMuIApTaGUgYWxzbyBzY3J1YmJlZCBteSBib2R5IHdpdGggYSBob3QgY2xvdGggYW5kIGRpZCBzb21lIFRoYWkgc3RyZXRjaGluZyBleGVyY2lzZXMuIEF0IHRoZSBlbmQgc2hlIGdhdmUgbWUgc29tZSBjb2xkIHdhdGVyIGFuZCBJIGNoZWNrZWQgbXkgd2F0Y2ggKDE6MTAgbGF0ZXIhKS4gSSByZWFsbHkgZmVsdCBncmVhdCBhdCB0aGUgZW5kIHRoZXJlIGFuZCB3aWxsIGRlZmluaXRlbHkgYmUgZ29pbmcgYmFjay5GdWxsIGRpc2Nsb3N1cmUgdGhvdWdoLCBzaGUgZGlkIGdlbnRseSBvZmZlciBhIGhhcHB5IGVuZGluZyBuZWFyIHRoZSBlbmQgb2YgdGhlIG1hc3NhZ2UuIApJIGxvb2sgZm9yd2FyZCB0byB3b3JraW5nIHdpdGggbXkgY2xpZW50cywgbWVldGluZyBuZXcgb25lcyBhbmQgYnVpbGRpbmcgbGlmZWxvbmcgcmVsYXRpb25zaGlwcy4uIApJIGRpZCBmaW5kIGEgcHJldHR5IGdyZWF0IHJlc291cmNlIGZvciB0cnlpbmcgdG8gZmlndXJlIG91dCB3aGF0IHRoZSBoZWxsIHRvIGRvIHRob3VnaDpUaGVyZSBhcmUgc29tZSBjaGVlc2V5IHRlc3RzIHRvIGhlbHAgbmFycm93IGRvd24geW91ciBza2lsbHMgYW5kIGludGVyZXN0cy4gSWYgeW91IGRpZyBhIGxpdHRsZSB0aGVyZSBhcmUgYSB0b24gb2Ygb2NjdXBhdGlvbiBwcm9maWxlcyB0aGF0IGdpdmUgeW91IGEgZ29vZCBvdmVydmlldyBvZiBwb3RlbnRpYWwgd2FnZXMvc2FsYXJpZXMgYW5kIGhvdyBtdWNoIHNjaG9vbGluZyBpdCB0YWtlcyB0byBnZXQgdGhlcmUuCkhlciBib2R5IHdhcyBraW5kIG9mIGJveWlzaC4gU2hlIGRpZG4gcmVhbGx5IGhhdmUgYW55IGN1cnZlcyBidXQgaGVyIHNraW4gZmVsdCBuaWNlLCBzaGUgaGFkIGEgZmxhdCBiZWxseSBhbmQgZGVjZW50IGJyZWFzdHMuIEhlciBidXR0IHdhcyBraW5kIG9mIGZsYXQgYW5kIGhlciBsZWdzIHdlcmUgc2hvcnQgYnV0IHNsaW0uIEhlciBwdXNzeSB3YXMgcHJldHR5IHdlbGwga2VwdCBhbmQgZmVsdCBPSyBpbnNpZGUgYnV0IHdhc24gZXNwZWNpYWxseSB0aWdodC42LzEwCiJQb3NpdGl2ZSBmaW5hbmNpYWwgcmVzdWx0cyBhbmQgb3BlcmF0aW9uYWwgc3RhYmlsaXR5IGRvbid0IGhhcHBlbiB3aXRob3V0IHRoZSBkZWRpY2F0aW9uIGFuZCBlZmZvcnRzIG9mIHN0YWZmaW5nIGdpdmluZyB0aGVpciBiZXN0LCBib3RoIGZyb250bGluZSBhbmQgYmVoaW5kIHRoZSBzY2VuZXMuIiBUaGUga2l0Y2hlbiwgYmlzdHJvIGFuZCBjYWZlIHdvcmtzIGFyZSBkdWUgdG8gYmUgY29tcGxldGVkIHRoaXMgbW9udGguIAoiRHVyaW5nIHRoZSBjb3Vyc2Ugb2YgdGhhdCBpbnZlc3RpZ2F0aW9uLCB3ZSB3ZXJlIGVuY291cmFnZWQgYnkgYWdlbmNpZXMgdGhhdCB3ZXJlIGhlbHBpbmcgdXMgICBMb25nbW9udCBhbmQgb3RoZXIgYWdlbmNpZXMgICB0byBoYXZlIGEgbG9jYWwgb3JkaW5hbmNlIGFzIG9wcG9zZWQgdG8gcmVseWluZyBvbiBhIHN0YXRlIHN0YXR1dGUsIiBCYXJib3VyIHNhaWQuIApJJ2QgaGF2ZSB0aGUgc2FtZSByZWFjdGlvbiB3aGVuIG15IFNPIChzaWduaWZpY2FudCBvdGhlcikgdG9sZCBoZSB3YXMgZ29pbmcgb3V0IEZyaWRheSBmb3IgYSBkaW5uZXIgSSBhc2tlZCBpZiBoZSBjb3VsZCB0cnkgYmUgaG9tZSBhdCBhbiBva2F5IHRpbWUgYXMgSSBuZWVkZWQgaGVscCBiYXRoaW5nIExPIChsaXR0bGUgb25lKSB3ZXJlIHRyeWluZyBpbiBnZXQgaGVyIGluIGEgcm91dGluZSBhcyBzaGUncyBub3Qgc2xlZXBpbmcgZ3JlYXQgYW5kIGEgcm91dGluZSBpcyBzdXBwb3NlZCB0byBoZWxwLiAKSnVzdCBsaWtlIFlvc2VtaXRlIFNhbSwgVGhvbWFzIEZyaWVkbWFuIGFsd2F5cyBiYXJrcyBtdWNoIGxvdWRlciB0aGFuIGhlIGNhbiBiaXRlLiAKQW4gT3ZlcnZpZXcgb2YgTWFraW5nIEl0IEZyb20gQmVnaW5uZXIgdG8gRXhwZXJ0IFBva2VyIFBsYXllcgpBZnRlciBzcGVuZGluZyBhIHdoaWxlIGluIFRva3lvLCBpdCBpcyBhbHdheXMgYSBydWRlIGF3YWtlbmluZyB0byBjb21lIGJhY2sgaG9tZSAodG8gdGhlIFVTQSkuIFBlb3BsZSBkb24gdGhpbmsvY2FyZSBhYm91dCB5b3Ugd2hlbiB0aGV5IG1ha2UgZGVjaXNpb25zIChmb3IgdGhlIG1vc3QgcGFydCAgIEkga25vdyB0aGlzIGlzIGEgaHVnZSBnZW5lcmFsaXphdGlvbikuIApObyB3YXkhISEgSSBhbSBiYXNpY2FsbHkgb24gdGhlIGJvYXJkZXJsaW5lLCBqdXN0IGxpa2UgeW91LiAKSSB3aWxsIGFkbWl0IHRoYXQgQnJlZ21hbiB3YXNuIGEgZ29vZCBpbnRlcnZpZXdlZS4gVGFsa2luZyBvdmVyIHBlb3BsZSBpcyBkaXNyZXNwZWN0ZnVsLiBCdXQgQ2FybHNvbnMgcmVzcG9uc2UgdG8gdGhlIGluc2ludWF0aW9uIHdhc24gYW55dGhpbmcgbGlrZSAiUGxlYXNlIHN0YXkgb24gdG9waWMuIApXaGF0ZXZlciB5b3VyIGFjdGlvbiwgdGhlIGRlYWxlciB3aWxsIG1ha2UgYW55IHJlcXVpcmVkIGNoYW5nZSBhdCB0aGUgZW5kIG9mIHRoZSBiZXR0aW5nIHJvdW5kLiAKTmVlZGxlc3MgdG8gc2F5LCB0aGF0IGJhY2tmaXJlZCBzcGVjdGFjdWxhcmx5Li4gClNoZSBpcyB0cmVtZW5kb3VzbHkgcnVkZSB0byBwZW9wbGUgdGhhdCBhc2sgaGVyIHF1ZXN0aW9ucyB0cnlpbmcgdG8gdW5kZXJzdGFuZCB3aGF0J3MgZ29pbmcgb24uIApUaGV5IG5vdyBoYXZlIHNpZ25pZmljYW50bHkgbW9yZSBpbnZlc3RtZW50IGFzc2V0cyBhbmQgdGF4YWJsZSBpbmNvbWUgdGhhbiB0aGV5IGRpZCBiZWZvcmUgc2VsbGluZyB0aGUgaG91c2UuIFN1ZGRlbmx5IHRoZWlyIHRheCByYXRlIGdvZXMgdXAgYW5kIHRoZXkgbG9zZSB0aGVpciBPQVMuIApJIHJlY2tvbiB0aGUgZ29kcyBsYXVnaCBtYW55IGEgdGltZSB0byBoZWFyIHVzLCBidXQgd2hhdCBtYXR0ZXJzIHNvIGxvbmcgYXMgd2UgcmVtZW1iZXIgdGhhdCB3ZSdyZSBvbmx5IG1lbiBhbmQgZG9uJ3QgdGFrZSB0byBmYW5jeWluZyB0aGF0IHdlJ3JlIGdvZHMgb3Vyc2VsdmVzLCByZWFsbHksIGtub3dpbmcgZ29vZCBhbmQgZXZpbC4gSSByZWNrb24gb3VyIHBvdyAgd293cyB3b24ndCBkbyB1cyBvciBhbnlvbmUgbXVjaCBoYXJtLCBzbyBsZXQncyBoYXZlIGFub3RoZXIgd2hhY2sgYXQgdGhlIHdoZW5jZSwgd2h5IGFuZCB3aGl0aGVyIHRoaXMgZXZlbmluZywgZG9jdG9yLiIuIApGaW5hbGx5LCB0aGVpciBlZHVjYXRpb24gaXMgbm90IGFzIGFkdmFuY2VkIGFzIGEgcGh5c2ljYWwgdGhlcmFwaXN0OyBpbiB0aGUgVVMgbW9zdCBwcmFjdGljaW5nIFBUcyBoYXZlIGEgcmVhbCBkb2N0b3JhdGUuIApEdXBsaWNhdGUgc2VsZWN0aW9uIGFuZCBkYXRhIGV4dHJhY3Rpb24gd291bGQgaGF2ZSBiZWVuIGFkdmlzYWJsZSB0byByZWR1Y2UgdGhlIGNoYW5jZXMgb2YgcmV2aWV3ZXIgZXJyb3IgYW5kL29yIGJpYXMuIApBcyB0cnVlIGFzIHRoYXQgaXMsIE9QIGlzbiBoaXMgYnJvdGhlciBnaXJsZnJpZW5kIHRoZXJhcGlzdCBhbmQgaGVyIHByb2JsZW1zIGFyZW4gaGlzIHRvIHNvbHZlLiBIZXIgY29uZGl0aW9uIGlzbiBhbiBleGN1c2UgZm9yIGVhdGluZyBzb21lb25lIGVsc2UgZm9vZCBlaXRoZXIuIApUaGUgdGVtcGxlIG9mIHRpbWUgdGhlbWUgaXMganVzdCB0aGUgc29uZyBvZiB0aW1lIGJ1dCBtaXNzaW5nIGVudGlyZSBjaG9yZHMsIGFuZCB0aGUgbWFpbiB0aGVtZSBpcyBhY3R1YWxseSB2ZXJ5IHNpbWlsYXIgdG8gdGhlIHR5cGljYWwgWmVsZGEgbWFpbiB0aGVtZSwgYnV0IGFnYWluIG1pc3NpbmcgY2hvcmRzIGFuZCBub3Rlcy5JbiBtb3N0IFplbGRhIGdhbWVzLCB0aGUgZ2FtZSBpcyBtZWFudCB0byByZXByZXNlbnQgTGluayBqb3VybmV5IHRvIHN0b3AgR2Fub24uIApTbyB0aGUgZmFjdHMgc3VwcG9ydGluZyBhIG1pc2RlbWVhbm9yIGNoYXJnZSBvZiBzb2xpY2l0YXRpb24gcmVhbGx5IGRvbid0IGp1bXAgb3V0IGF0IHlvdS4uIApUaGUgd2F5IHlvdSBmb3JtIHlvdXIgaGFuZCBwcm9kdWNlcyBhIGRpZmZlcmVudCBzb3VuZCBmcm9tIHNsYXBwaW5nIHRvIGNob3BwaW5nIHRvIGN1cHBpbmcuIApVbmxpa2UgdGhlIFVTLCB3aGVyZSB0aGlzIHNoYWR5IHBhc3QgYW5kIGlsbGVnYWwgaW52YXNpb24gYXJlICJiZXN0IGxlZnQgYWxvbmUsIiBoZXJlIGluIExvbmRvbiB0aGUgbGVnYWxpdHkgb2YgdGhlIHdhciBpcyBzdGlsbCBiZWluZyBpbnZlc3RpZ2F0ZWQgYW5kIGRlYmF0ZWQuIApFdmVuIHByb2Zlc3Npb25hbHMgbXVzdCBwbGF5IGEgc3R5bGUgdGhhdCBpcyBuYXR1cmFsIGZvciB0aGVtLCBidXQgb3ZlcmFsbCB0aGV5IGFyZSBmYXIgbW9yZSBmbGV4aWJsZSBpbiByZWFjdGluZyB0byB0aGUgZW52aXJvbm1lbnQgdGhhbiBhbWF0ZXVycy4gCk9mZmVyaW5nIGEgYnJvYWRlciByYW5nZSBvZiBnb29kcyBhbmQgc2VydmljZXMgaXMgdGhlIG5hbWUgb2YgdGhlIGdhbWUgaW4gcmV0YWlsIGFzIGNvbnN1bWVycyBkZW1hbmQgbW9yZSBleHBlcmllbmNlcyBhcyB0aGV5IHNob3AuIApMaWtlLCBpZiB5b3UgbW92ZSBzb21lb25lIHNob2VzIHRvIGEgZGlmZmVyZW50IHNwb3QsIHlvdSBjb3VsZCBjYXRhc3Ryb3BoaWNhbGx5IGNoYW5nZSB5b3VyIHRpbWVsaW5lLiAKU2NoaW1wZiBoYXMgYmVlbiBzdXNwZW5kZWQgZnJvbSBoaXMgaW52ZXN0aWdhdGlvbiBwZW5kaW5nIGFuIGludmVzdGlnYXRpb24uIE5laWdoYm9ycywgbWVhbndoaWxlLCB0b2xkIFdGTVogdGhhdCB0aGV5IHJlZ3VsYXJseSBzYXcgcGFyZW50cyBkcm9wIG9mZiB0aGVpciBjaGlsZHJlbiBhdCB0aGUgYmFuZCBkaXJlY3RvciBob21lIGZvciBtdXNpYyBsZXNzb25zLiAKQm90aCBzdGF0cyBwbGFjZSBoaW0gaW4gdGhlIENvbmZlcmVuY2UgdG9wIDEwLiAKSSdkIHJlZ3VsYXJseSBoaXQgMTB0YiBhIG1vbnRoIGFuZCBub2JvZHkgYmxpbmtlZCBhbiBleWUuIFRoYXQgd2FzIDMgeWVhcnMgYWdvIHRob3VnaC4KV2l0aCBjcmVtYXRpb24gdG8gZm9sbG93LiAKSSBhZHZpc2VkIGEgZ3JvdXAgMiAzIHllYXJzIGFnbyB0aGF0IGhhZCB0aGUgZXhhY3Qgc2FtZSBpZGVhLiBJIGtub3cgb3RoZXJzIGhhZCBpdCB0b28uIApJZiB5b3VyIGNsaWVudCBpcyBwcmVnbmFudCwgZG8gbm90IHByb2NlZWQgd2l0aCB0aGUgaG90IHN0b25lIG1hc3NhZ2UuIFRoZSBpbmNyZWFzZSBpbiB0ZW1wZXJhdHVyZSBjYXVzZWQgYnkgdGhlIGhvdCBzdG9uZXMgY2FuIGNhdXNlIHN0cmVzcyBvbiB0aGUgYm9keSBvZiB0aGUgcHJlZ25hbnQgcGVyc29uLCBhbmQgY29uc2VxdWVudGx5LCBjYW4gcG90ZW50aWFsbHkgY2F1c2UgZmV0YWwgZGlzdHJlc3MuCk15IHBoeXNpY2FsIHRoZXJhcGlzdCBkaWFnbm9zZWQgYW5kIHRyZWF0ZWQgbXkgc2NpYXRpY2Egd2l0aCBzb21lIHNpbXBsZSBjaGFuZ2VzIGluIHBvc3R1cmUsIHVzaW5nIGEgbHVtYmFyIHJvbGwgd2hpbGUgc2l0dGluZywgc29tZSBzdHJldGNoaW5nIGV4ZXJjaXNlcywgYW5kIHN0cmVuZ3RoZW5pbmcgb2YgZ2x1dGVzLiBJdCB0b29rIGFib3V0IDMgdmlzaXRzIHRvIGdldCBtZSBpbiBnb29kIGVub3VnaCBzaGFwZSB0aGF0IGhlIHNhaWQgSSBvbmx5IG5lZWRlZCB0byByZXR1cm4gaWYgdGhlIHBhaW4gcmV0dXJucy4KMCBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnb01hdnMgYXJlbiB0cmFkaW5nIEtQIG9yIEx1a2EgYW55IHRpbWUgc29vbi4gS1AgZ29ubmEgc2lnbiBhIG1heCBkZWFsIG9uIEp1bHkgMS4gCkl0IGFsbW9zdCBzaWxseSB0byBoYXZlIHRvIHBvaW50IG91dCBhIGZldyBleGFtcGxlcyAgIGJ1dCB3aGF0IHRoZSBoZWxsLiBBbGwgb2YgdGhlIEdyZWVrIGNpdHkgc3RhdGVzIGluIHRoZSBjbGFzc2ljYWwgZXJhLCBJbXBlcmlhbCBSb21lLCBOYXppIEdlcm1hbnkgICBJIG1lYW4sIGNvbWUgb24uIFRoZSBVUyBpcyBub3QgZXZlbiB0aGUgbW9zdCBtaWxpdGFyaXN0aWMgc29jaWV0eSBjdXJyZW50bHkgZXh0YW50LiAKSSBkbyBsb3ZlIG1lIHNvbWUgYmFieSBraWxsaW5ncywgYnV0IG90aGVyIHRoYW5rIHRoYXQgSSB0ZW5kIHRvIGNhbGwgb3V0IHJhY2lzdHMgYW5kIHNlZWsgdG8gaG9sZCB0aGVtIGFjY291bnRhYmxlIHJlZ2FyZGxlc3Mgb2YgcGFydHkuIEdlbmVyYWxseSBzcGVha2luZyB0aGUgZGVtb2NyYWN5J3MgaGF2ZSBiZWVuIGNvbnNpZGVyYWJseSBtb3JlIGVmZmVjdGl2ZSBpbiBob2xkaW5nIHRoZWlyIG93biB0byBhIGhpZ2ggc3RhbmRhcmQsIHdoZXJlYXMgcmVwdWJsaWNhbnMgdHJhZGUgaW4gY292ZXJ0IGRvZyB3aGlzdGxlcyBhbmQgbGFyZ2VseSBpZ25vcmUgdGhlIG92ZXJ0IHJhY2lzbS4gKE9iYW1hIGlzIGEgTXVzbGltIGZyb20gS2VueWEuIApUaGlzIGluZGljYXRlcyBpaGF0IHRoZSBwZW9wbGUgYXJlIHBsYW5pbmcgdG8gbWFrZSBTaXRrYSBwZXJtYW5lbnRseSB0aGVpciBob21lLiBNcnMuIApHbGVubiBSLiBEYXZpcyBvZiBXYXVrZXNoYSwgUmVwdWJsaWNhbiwsIGp1c3QgcmUgZWxlY3RlZCBmb3IgaGlzIGZvdXJ0aCB0ZXJtIGluIHRoZSBIb3VzZSBvZiBSZXByZXNlbnRhdGl2ZXMsIHdpbGwgYmUgc3BlYWtlciBUdWVzZGF5IGV2ZW5pbmcgYXQgdGhlIG9wZW5pbmcgbWVldGluZyBvZiB0aGUgSmFuZXN2aWxsZSBUd2lsaWdodCBjbHViIGZvciB0aGlzIHNlYXNvbi4gVGhlIGFkZHJlc3MsIGEgcHJldmlldyBvZiBjb25ncmVzc2lvbmFsIGFjdGl2aXR5IGZvciB0aGUgc2Vzc2lvbiBqdXN0IGFoZWFkLCB3aWxsIGZvbGxvdyBhIDY6MzAgZGlubmVyIGluIHRoZSBDb25ncmVnYXRpb25hbCBDaHVyY2ggZGluaW5nIHJvb20uIApMaWwgQm9vc2llIGZvdW5kIG5vdCBndWlsdHkKVGhhdCBzYWlkIGl0IGFsbCBhZGRzIHRvIHRoZSBjb3N0LiAKSG90YmFyZnBpY2tsZSB1CkFuZWNkb3RhbGx5LCBJIGRvIGJlbGlldmUgdGhhdCBzb21ldGltZXMgcGVvcGxlIGNhbiBkaWUgICBJIHdvcmsgaW4gaGVhbHRoY2FyZSBhbmQgaGF2ZSBkZWFsdCB3aXRoIHBhdGllbnRzIHdobyBqdXN0IGdhdmUgdXAuIApUaGUgQm9yZ2F0YSBpcyBhbHNvIGEgZ3JlYXQgcG9rZXIgcm9vbSBhcyB3ZWxsIHdpdGggODUgdGFibGVzIGFuZCBhIExhcyBWZWdhcyBmZWVsLi4gClRoZSBwbGF5ZXIgd2l0aCB0aGUgaGlnaGVzdCBoYW5kIHNob3dpbmcgYWN0cyBmaXJzdCBhbmQgY2FuIGJldCBvZiBjaGVjay4gCklkZWE6IEFyZSB5b3VyIGFjY291bnRzIHNldCBzbyBvbmx5IGZyaWVuZHMgb2YgZnJpZW5kcyBjYW4gbWFrZSBmcmllbmQgcmVxdWVzdHM/IFNoZSBzdGlsbCBjb3VsZCBmcmllbmQgdGhlIERlZmluaXRlbHkgTm90IFZKUyB0aGUgVHdlbGZ0aCBvZiBIZXIgTmFtZSBhY2NvdW50IG9uIEFjdHVhbGx5IFZKUyBhY2NvdW50IGFuZCB0aGVuIHNlbmQgYSByZXF1ZXN0LCBidXQgdGhlIGV4dHJhIHN0ZXAgbWlnaHQgaXJyaXRhdGUgaGVyIGVub3VnaCB0byBtYWtlIGhlciBzdG9wLiBBbmQgaWYgbm90LCB5b3UgZ2V0IHRoZSBwZXR0eSBqb3kgb2YgbWFraW5nIGhlciB3b3JrIGhhcmRlci4KT3ZlcnRoZWhpbGx0b3RoZWxlZnQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMSBkYXlzIGFnbwpbR2l2ZW4gdGhlIHN0YXRlIGZhaWx1cmUgdG8gcHJlc2VydmUgZXZpZGVuY2UsIHRoZSBqdXJ5IG1pZ2h0XSAiaW5mZXIgdGhhdCB0aGUgdHJ1ZSBmYWN0IGlzIGFnYWluc3QgdGhlIFN0YXRlIGludGVyZXN0LiIKVXN1YWwgcHJlY2F1dGlvbnMgaGF2ZSB0byBiZSB0YWtlbiBidXQgdGhlcmUgaXMgbm8gcGxhbiBmb3IgdXNpbmcgZXh0cmEgZm9yY2UuIApCcmFkeSBoYXMgYmVlbiBnZXR0aW5nIGFsb3Qgb2YgY3JlZGl0IGZvciB0aGVtLiAKUGVvcGxlIGNvbnN0YW50bHkgZmVlZCBhbmQgcGxheSBzaGl0dGlseSBhbmQgbG9zZSBpbiA1djVzLCBpdCBoYXBwZW5zIGF0IGxlYXN0IG9uY2UgaW4gYSB2YXN0IG1ham9yaXR5IG9mIGFsbCA1djVzIHBsYXllZC4gCldhc3NlcnN0b2ZmcGVyb3hpZCBiZXN0ZWh0IGdlbSBzZWluZXIgRm9ybWVsIEgyTzIgYXVzIFdhc3NlciB1bmQgYXRvbWFyZW0gU2F1ZXJzdG9mZi4gQXRvbWFyZXIgU2F1ZXJzdG9mZiBkcmluZ3QgaW0gR2VnZW5zYXR6IHp1IGF0bW9zcGhyaXNjaGVtIFNhdWVyc3RvZmYgZGlyZWt0IGluIGRpZSBaZWxsZW4gZGVzIE9yZ2FuaXNtdXMgZWluLgpQZW9wbGUgd2l0aCBnbHV0ZW4gc2Vuc2l0aXZpdHkgc29tZXRpbWVzIGV4cGVyaWVuY2UgdGhlc2UgZmFyIHJlYWNoaW5nIHN5bXB0b21zIGFzIHdlbGwsIHRob3VnaCBpdCBsZXNzIGNsZWFyIHdoeS4KRXZlcnlvbmUgZ29pbmcgdG8gZXhwZXJpZW5jZSBkaWZmZXJlbnQgdGhpbmdzIGF0IGRpZmZlcmVudCB0aW1lcyBhbmQgZGlmZmVyZW50IHBsYXlzdHlsZXMgd2lsbCBwbGF5IGJldHRlciBhdCBkaWZmZXJlbnQgdGltZXMgZXRjIHNvIEkgZG9uIHRoaW5rIHlvdSB3aWxsIGV2ZXIgZmluZCB0aGUgYW5zd2VyIHRvIHRoaXMgcXVlc3Rpb24uIEFuZCBpZiBJIGRvIGhhdmUgbXkgZmF2b3JpdGUgdGltZXMgdG8gcGxheSwgd2hpY2ggSSBkbywgSSBub3QgZ29pbmcgdG8gc2hhcmUgaGVyZS4KUHJpbmNpcGFsIHNhaWQsIHlvdSBrbm93IHRoaXMgUm9iIEF0a2luc29uIGZlbGxvdz8gSGUgd2FudHMgdG8gY29tZSBiYWNrIHRvIExvbmRvbi4gCkVkaXQ6IEkgY29tbWVudGVkIHRoaXMgYmVsb3csIGJ1dCBzaW5jZSBwZW9wbGUgYXJlIGFza2luZy4gSSB3YXNuJ3Qgd29ya2luZyBhdCB0aGUgYmFyIGF0IDE1LiBJIHdhcyB3b3JraW5nIGluIGEgc2VwYXJhdGUgaG90ZWwgcmVzdGF1cmFudCBhcyBhIGJ1c3NlciwgYW5kIHRoZXJlIHdhcyBhbHNvIGEgYmFyIGluIHNhaWQgaG90ZWwuIFRoZSBtYW5hZ2VtZW50IHdhcyB0aGUgc2FtZSBmb3IgdGhlIHdob2xlIHBsYWNlLiBMb25nIHN0b3J5IHNob3J0LCBvdXIgaG90ZWwgbWFpbnRlbmFuY2UgZ3V5IHdhcyBvdXQgc2ljaywgYSBibGl6emFyZCBoaXQsIGFuZCB0aGUgb25lIG1hbmFnZXIgd2hvIGNvdWxkbid0IHRlbGwgaGlzIGhlYWQgZnJvbSBoaXMgYXNzIHdhcyB3b3JraW5nIHRoYXQgbmlnaHQuIFRoZSByZXN0YXVyYW50IHdhcyBzbG93LCBzbyBuYXR1cmFsbHkgaGUgZGVjaWRlZCB0aGUgYmFyZWx5IDUgZm9vdCwgMTUgeWVhciBvbGQgZmVtYWxlIHdhcyB0aGUgYmVzdCBwZXJzb24gdG8gc2hvdmVsIHRoZSBlbnRpcmUgY29ybmVyIG9mIHNpZGV3YWxrIG91dHNpZGUgdGhlIGhvdGVsLiBUaGUgZ3V5IHdobyBzYWlkIHdoYXQgaGUgZGlkIHdhcyBzb21lIGRydW5rIGd1eSBpbiBoaXMgNDBzIG9yIDUwcyB3aG8gc3R1bWJsZWQgb3V0dGEgdGhlIGJhciB3aGlsZSBJIHdhcyBzaG92ZWxsaW5nIHRoYXQgc2lkZSBvZiB0aGUgd2Fsa3dheS4KQXNrZWQgd2hhdCBsZXNzb25zIHRoZSBicmFuZCBoYXMgbGVhcm5lZCBpbiB0aGUgcGFzdCB5ZWFyLCBNci4gRWNoZXZlcnJpYSBzdGF0ZWQ6ICJPbmNlIHRoZSBjYW1wYWlnbiB3YXMgdGVzdGVkIGFuZCBsYXRlciBhaXJlZCBpbiBldmVyeSBjb3VudHJ5IGFyb3VuZCB0aGUgd29ybGQsIHdlIGxlYXJuZWQgdGhhdCB0aGUga2V5IHRvIG91ciBzdWNjZXNzIHdhcyB0byB3aXNlbHkgY29tYmluZSB1bml2ZXJzYWwgaW5zaWdodHMgd2l0aCBhIGNlcnRhaW4gZGVncmVlIG9mIGxvY2FsIHR3ZWFraW5nLiBUaGVzZSB1bml2ZXJzYWwgaW5zaWdodHMgYXJvdW5kIHBlcnNvbmFsIHJlbGF0aW9uc2hpcHMgYW5kIGh1bWFuIHRydXRocyBlbnN1cmVkIHRoYXQgY29uc3VtZXJzIGFyb3VuZCB0aGUgd29ybGQgaWRlbnRpZmllZCB3aXRoIHRoZSBvdmVyYWxsIHN0b3J5LCB3aGlsZSB0aGUgc2VsZWN0aXZlIGFkanVzdG1lbnRzIHRoYXQgc29tZSBjb3VudHJpZXMgZGlkIG9uIHRoZSBjYXN0aW5nLCBtdXNpYyBhbmQgc2NlbmUgc2VsZWN0aW9uLCBndWFyYW50ZWVzIHRoZSBjb21wcmVoZW5zaW9uIGFuZCByZWxldmFuY2Ugb2YgdGhlIGZpbG0gdG8gdGhlIGxvY2FsIGN1bHR1cmVzLiIKVGhlIGJhc2ljIHNwYSBtZW51IGRlcGVuZHMgb24geW91ciBsb2NhdGlvbiBidXQgd2lsbCB0eXBpY2FsbHkgaW5jbHVkZSBhIGZhY2lhbCwgbWFzc2FnZSwgbWFuaWN1cmUsIGFuZCBwZWRpY3VyZS4gVGhlc2UgYmFzaWMgdGhlcmFwaWVzIGFyZSB0aGUgY29yZSBzZXJ2aWNlcyB0aGF0IGEgc3BhIG9mZmVycy4gCldoZXJlYXMgaW4gdGhlIHNpdHVhdGlvbiBpbiB0aGUgcG9zdCwgdGhleSBhcmUgc2ltcGx5IGludGVyZmFjaW5nIHdpdGggdGhlIHNvZnR3YXJlIHdoZW4gaXQgaXMgdW5zZWN1cmVkLiBHcmFudGVkLCBieSBjb21tb24gZGVmaW5pdGlvbiwgdGhlIGFjdGlvbnMgaW4gdGhpcyBwb3N0IHdvdWxkIGNvdW50IGFzIGhhY2tpbmcuLiAKRmFjaW5nIFNvdXRoIEZsb3JpZGE6IFVucmVzdCBpbiBWZW5lenVlbGFWZW5lenVlbGFuIGFjdGl2aXN0IGFuZCBqb3VybmFsaXN0IEhlbGVuYSBQb2xlbyBqb2lucyBDQlM0IEppbSBEZUZlZGUgdG8gdGFsayBhYm91dCB0aGUgdW5yZXN0IGluIFZlbmV6dWVsYSBvbiBGYWNpbmcgU291dGggRmxvcmlkYSB3aXRoIEppbSBEZUZlZGUuIFJlcC4gClRoYXQgcmFpc2VkIGNvbmNlcm5zIGFib3V0IHRoZSB2aWFiaWxpdHkgb2YgbXVsdGkgc3RhdGUgb25saW5lIHBva2VyIGFncmVlbWVudHMsIGFzIHdlbGwgYXMgc3RhdGUgbG90dGVyaWVzLCBhbmQgZGVwYXJ0bWVudCBsYXd5ZXJzIGFja25vd2xlZGdlZCBpbiB0aGVpciBvcGluaW9uIHRoYXQgaXQgd2FzIGxpa2VseSB0byBiZSBjaGFsbGVuZ2VkIGluIGNvdXJ0LiAKVGhpcyBUaGFua3NnaXZpbmcsIGFzIHdlIGdhdGhlciBpbiBwbGFjZXMgb2Ygd29yc2hpcCBhbmQgYXJvdW5kIHRhYmxlcyBzdXJyb3VuZGVkIGJ5IGxvdmVkIG9uZXMsIGluIGh1bWJsZSBncmF0aXR1ZGUgZm9yIHRoZSBib3VudGlmdWwgZ2lmdHMgd2UgaGF2ZSByZWNlaXZlZCwgbGV0IHVzIGtlZXAgaW4gY2xvc2UgbWVtb3J5IG91ciBmZWxsb3cgQW1lcmljYW5zIHdobyBoYXZlIGZhY2VkIGhhcmRzaGlwIGFuZCB0cmFnZWR5IHRoaXMgeWVhci4gSW4gdGhlIHNwaXJpdCBvZiBnZW5lcm9zaXR5IGFuZCBjb21wYXNzaW9uLCBsZXQgdXMgam95ZnVsbHkgcmVhY2ggb3V0IGluIHdvcmQgYW5kIGRlZWQsIGFuZCBzaGFyZSBvdXIgdGltZSBhbmQgcmVzb3VyY2VzIHRocm91Z2hvdXQgb3VyIGNvbW11bml0aWVzLiBMZXQgdXMgYWxzbyBmaW5kIHdheXMgdG8gZ2l2ZSB0byB0aGUgbGVzcyBmb3J0dW5hdGUgd2hldGhlciBpdCBiZSBpbiB0aGUgZm9ybSBvZiBzaGFyaW5nIGEgaGVhcnR5IG1lYWwsIGV4dGVuZGluZyBhIGhlbHBpbmcgaGFuZCwgb3IgcHJvdmlkaW5nIHdvcmRzIG9mIGVuY291cmFnZW1lbnQuLiAKQW1tYSBhbmNlc3RvcnMgQXJjaGFuZ2VsIG1lZGl0YXRpb24gQkNSQyBCcmFjbyBCcmVhc3QgQ2FuY2VyIFJlc291cmNlIENlbnRlciBCcmlkZ2VzIHRvIFdlbGxuZXNzIENhbmNlciBTdXBwb3J0IGNvbm5lY3RlZG5lc3MgRWxpeGlyIEZ1bmQgZW5lcmd5IGhlYWxpbmcgRmFtaWx5IENvbnN0ZWxsYXRpb25zIGhlYWxlciBoZWFsaW5nIEhlYWx0aHkgU3R1ZGVudCBJbml0aWF0aXZlIEhlbGxpbmdlciBIb2xpc3RpYyBUaGVyYXBpZXMgSHVnZ2luZyBTYWludCBvZiBJbmRpYSBJbmRyYSdzIG5ldCBJbnRlZ3JhdGl2ZSBNZWRpY2luZSBJbnRlZ3JhdGl2ZSBUaGVyYXBpZXMgSmluIFNoaW4gSnl1dHN1IEppbiBTaGluIEp5dXRzdSBIb2xkIHRoZSBGaW5nZXJzIEthYmJhbGFoIEtlbmRhbGwgUGFyayBsb3Zpbmcga2luZG5lc3MgbWVkaXRhdGlvbiBsb3Zpbmcga2luZG5lc3MgbWFzc2FnZSBtZWRpdGF0aW9uIG1ldHRhIG1lZGl0YXRpb24gbWluZGZ1bG5lc3MgbWVkaXRhdGlvbiBOZXcgSmVyc2V5IE9uc2VuIEZvciBBbGwgUWlnb25nIFJlbmUgRGF1bWFsIFNlbGYgaGVhbGluZyBTZWxmIEhlbHAgc29jaWFsIGNvbm5uZWN0ZWRuZXNzIHNvdW5kIHRoZXJhcHkgdGFpIGNoaSBUYW5nbyBUYW8gRGUgQ2hpbmcgdm9vZG9vIFdlbGxuZXNzIENlbnRlciB5b2dhClBva2VyIHNlZW1zIHJpZ2dlZApUaGUgb25seSB0aGluZyBJIHJlbWVtYmVyIGlzIHRoZSB0ZWFjaGVyIGdpdmluZyB1cyBhZHZpY2VzIGxpa2UgImdldCBhIGNyZWRpdCBjYXJkLCBidXkgZXZlcnl0aGluZyB3aXRoIHRoYXQgY3JlZGl0IGNhcmQgYW5kIHBheSBpdCBiYWNrIGltbWVkaWF0ZWx5LCBpdCBnaXZlIHlvdSBsaXR0bGUgdGlueSBmcmVlIHBvaW50cyB0byB1c2UgdG8gYnV5IHRyYXZlbHMgYW5kIHdhdGNoZXMgYW5kIHNoaXRzLiIKVGhlbiBHdXkgQSByZSByYWlzZXMuIApNaWNyb3NvZnQgV29yZCAyMDEwLiBMaWNlbnNlOiBidXkuIFRoZSB0cmlhbCB2ZXJzaW9uIGZvciBNaWNyb3NvZnQgV29yZCAyMDEwIGlzIG5vIGxvbmdlciBhdmFpbGFibGUuIFlvdSBjYW4gLiBZb3UgY2FuIGRvd25sb2FkIGEgZnJlZSB0cmlhbCBvZiBNaWNyb3NvZnQgT2ZmaWNlIDIwMTYgaW5zdGVhZC4gVmlldyBmdWxsIGRlc2NyaXB0aW9uLiBEZWMgMTcsIDIwMTIgLiBEb3dubG9hZCB0aGUgZnVsbCB2ZXJzaW9uIG9mIE1pY3Jvc29mdCBPZmZpY2UgMjAxMCwgVmlzaW8gYW5kIC4gdXNlIFB1Ymxpc2hlciBhbmQgSW5mb3BhdGggMjAxMCBhcyB3ZWxsIGluIGFkZGl0aW9uIHRvIHRoZSByZWd1bGFyIFdvcmQsIEV4Y2VsLC4gCkZvdXIgc3RvcnkgYXRyaXVtIHdpdGggaW5kb29yIHBvb2wsIG9wZW4gYWlyIHJlc3RhdXJhbnQsIGZpdG5lc3MgY2VudGVyLCBhbmQgZ2FtZSByb29tLiAKQ3JhenksIGJ1dCBJJ3ZlIGhlYXJkIG9mIGl0IGhhcHBlbmluZyBpbiBtdWx0aXBsZSBzdGF0ZXMgdG8gbXVsdGlwbGUgb2ZmaWNlcy4uIApJIHN0YXJ0ZWQgcGxheWluZyBCYWNoLiBJIHdhbnRlZCB0byBmaW5pc2ggcXVpY2tseSBhbmQgbGVhdmUuIApUaGVyZSBhcmUgYWxsIHNvcnRzIG9mIHRvdXJuYW1lbnRzIGxpa2UgdGhpcyBhdCBtYW55IGRpZmZlcmVudCBvbmxpbmUgcG9rZXIgc2l0ZXMgYW5kIHRoZXkgYWxsIGZvbGxvdyB0aGUgc2FtZSBiYXNpYyBwYXR0ZXJuLiBZb3UgYnV5IGluIGF0IGEgbG93IGxldmVsIHRvIHdpbiBlbnRyeSBpbnRvIGEgaGlnaGVyIGxldmVsIHRvdXJuYW1lbnQuIEkgbmFycm93bHkgbWlzc2VkIG1ha2luZyBpdCB0byB0aGUgUGFydHlQb2tlciBtaWxsaW9ucyB0b3VybmFtZW50IHdpdGggYSAkMTAsMDAwIGJ1eSBpbiBhbmQgYSBwcml6ZSBwb29sIG9mICQ3LjUgTWlsbGlvbi4gCiQxMzAgaXNoIGluIHRoZSBwb3Qgb24gZmxvcCBhbmQgdmlsbGFpbiBsZWFkcyBvdXQgZm9yICQ3NS4gSWYgSSByYWlzZSwgaG93IG11Y2g/CllvdSBsb29rIGF0IHRoZSBVbml2ZXJzaXR5IG9mIEhvdXN0b24sIHlvdSBjYW4gc2VlIHRoZSBQb3dlcmhvdXNlIGdyb3dpbmcgYW5kIHlvdSBjYW4gYmUgY2VydGFpbiBpdCB3b3VsZCBub3QgYmUgcG9zc2libGUgd2l0aG91dCB0aGUgZ2VuZXJvdXMgc3VwcG9ydCBvZiBvdXIgYWx1bW5pIGJhc2UgYW5kIG91ciBjb3Jwb3JhdGUgbmVpZ2hib3JzIG5lYXIgYW5kIGZhciB3aG8gY29udGludWUgdG8gaGVscCB1cyBtYWtlIHRyYW5zZm9ybWF0aW9uYWwgY2hhbmdlcyB0byB0aGUgVW5pdmVyc2l0eSwgc2FpZCBFbG9pc2UgQnJpY2UsIFVIIFN5c3RlbSB2aWNlIGNoYW5jZWxsb3IgZm9yIHVuaXZlcnNpdHkgYWR2YW5jZW1lbnQuIEFtIG1vc3QgaW5zcGlyZWQgdGhhdCAxNzgsOTA5IHBlb3BsZSBoYXZlIGFscmVhZHkgY29tbWl0dGVkIHN1cHBvcnQgdG8gdGhlIFVuaXZlcnNpdHkgYW5kIEkgYW0gZXhjaXRlZCBhYm91dCB3aGF0IHRoYXQgbWVhbnMgZm9yIHRoZSByZXN0IG9mIG91ciBjYW1wYWlnbi4gCkhvdyBoYXMgdGhlIHRvdXJuYW1lbnQgY2hhbmdlZCBzaW5jZSB0aGUgZ29vZCBvbGQgZGF5cz8KV2hlbiBoZSByYW4gb3V0IG9mIG1vcnBoaW5lLCBoZSB0cmVhdGVkIHRoZSBzb2xkaWVycyB3aXRoIGEgc2FsaW5lIHNvbHV0aW9uLCBidXQgaGUgZGlkbid0IG1lbnRpb24gdGhlIHN3aXRjaC4gClBsZWFzZSwgYnVja2xlIHlvdXIgYmVsdCB1cCBhbmQgc2l0IHRpZ2h0LiAKS2VlcGluZyBhIHZhcmlhYmxlIGZsb3JhIGlzIGtleS4uIApXaXRoIHRocmVlIHJvb2Z0b3Agc2l0ZXMgdXAgYW5kIHJ1bm5pbmcsIExhdXJlbiBSYXRobWVsbCwgZ3JlZW5ob3VzZSBkaXJlY3RvciBhbmQgY28gZm91bmRlciwgc2F5cyB0aGV5IHNvb24gYmUgcmVhZHkgdG8gdGFrZSB0aGVpciBjb25jZXB0IG9uIHRoZSByb2FkIHRvIG90aGVyIG1ham9yIGNpdGllcyBhY3Jvc3MgQ2FuYWRhLiB1cmJhbiBhZ3JpY3VsdHVyZSBhdCBpdHMgYmVzdC4gR3Jvd2luZyBpbiBhIGNvbnRyb2xsZWQgZW52aXJvbm1lbnQgYWxsb3dzIHVzIHRvIHByb2R1Y2UgY3JvcHMgYWxsIHllYXIgcm91bmQsIGNsb3NlciB0byB3aGVyZSBwZW9wbGUgbGl2ZSwgaW4gYSBzdXN0YWluYWJsZSB3YXkuIFRoZSBiZWF1dHkgb2YgbW92aW5nIHRvIHJvb2Z0b3BzIGlzIHRoYXQgbm8gbmV3IGxhbmQgaXMgcmVxdWlyZWQuClRoZSBvcmlnaW5hbCByZWFzb24gZm9yICJ0aG91IiBiZWluZyB1c2VkIGluIHRoZSBCaWJsZSBhbmQgb3RoZXIgcmVsaWdpb3VzIGNvbnRleHRzIHdhc24gdG8gc291bmQgZmFuY3ksIGJ1dCByYXRoZXIgdG8gaW5kaWNhdGUgdGhhdCB5b3UgY291bGQgZHJvcCBhbGwgZm9ybWFsaXNtcyB3aXRoIEdvZC4gCkFzIHNvbWVvbmUgd2hvIHNsb3dseSBvdmVyIHRoZSBzZWFzb25zIGNsaW1iZWQgZnJvbSBzaWx2ZXIgdG8gbWFzdGVycyBpbiBzb2xvIHF1ZXVlIHBsYXlpbmcgOTAlIHN1cHBvcnQsIEkgdGhpbmsgbWFueSBoZWFsZXIgbWFpbnMgc3RhZ25hdGUgYmVjYXVzZSB0aGV5IHRoaW5rIG9mIHRoZW1zZWx2ZXMgYXMgZ29vZCBwbGF5ZXJzIGp1c3QgYnkgdmlydHVlIG9mIHBsYXlpbmcgYSBsZXNzIHdhbnRlZCByb2xlLiAKVGhyZWUgeWVhcnMgbGF0ZXIsIFJpaXMgcmVwb3J0ZWQgdGhlIHN0b3J5IG9mIHRoaXMgaGlnaGx5IHN1Y2Nlc3NmdWwgInBlbm55IHN1YnNjcmlwdGlvbiIgaW4gdGhlIG1hZ2F6aW5lIFRoZSBPdXRsb29rLCB1cmdpbmcgaXRzIGR1cGxpY2F0aW9uIGluIHRoZSBVbml0ZWQgU3RhdGVzLiBSaWlzIHBvaW50ZWQgdG8gdGhlIGZhY3QgdGhhdCAibm8gbWlsbGlvbmFpcmUiIGhhZCB5ZXQgY29tZSBmb3J0aCAidG8gZW5kb3ciIHRoZSBmaWdodCBhZ2FpbnN0IHR1YmVyY3Vsb3NpcyBpbiBBbWVyaWNhLCBhbmQgd2VudCBvbiB0byBzYXkgdGhhdCAibm8gbWlsbGlvbmFpcmUiIHdhcyAid2FudGVkLCIgdGhhdCB0aGUgam9iIHdvdWxkIGJlICJmYXIgYmV0dGVyIGRvbmUgYnkgdGhlIHBlb3BsZSB0aGVtc2VsdmVzLiIKU2hpZnQgYnkgd2lyZSBpcyBvbmx5IHVzZWQgd2l0aCB0d2luIGNsdXRjaCBzZXQgdXBzLCB3aGljaCwgYWdhaW4sIHRoZSBTdWJhcnUgaW4gdGhlIHBpYyBkb2VzbiBoYXZlLiBJIGRvbiB0aGluayB0aGF0IGJyYWtlIGJ5IHdpcmUgZXZlbiBleGlzdHMgeWV0LiAKV2VubiBpY2ggZWluIFplaWNoZW4gbWVpbmVzIEtycGVycyB3aHJlbmQgZGVzIGJlbnMgYmVyaHJlLCBrYW5uIGRpZSBCbHV0dW5nIHNjaG9uIHN0cmtlciB3ZXJkZW4sIHNvIGRhIG1laW5lIEVuZXJnaWUgbnVyIHNvIGRhaGluc2lja2VydC4gCkZvciBpbnN0YW5jZSwgd2hlbiB5b3UgYXJlIGluIGEgc3RyZXNzZnVsIHNpdHVhdGlvbiAgIG9yIGV2ZW4gd2hlbiB5b3UgYXJlIGp1c3QgdGhpbmtpbmcgYWJvdXQgb25lICAgeW91ciBoZWFydCByYXRlIHRlbmRzIHRvIHNwZWVkIHVwLCB5b3VyIGJyZWF0aGluZyBxdWlja2VucywgeW91ciBibG9vZCBwcmVzc3VyZSBpbmNyZWFzZXMsIGFuZCB5b3VyIG11c2NsZXMgdGVuc2UgdXAuIENvbnZlcnNlbHksIGJ5IHNoaWZ0aW5nIHlvdXIgdGhvdWdodHMgdG8gY2FsbWluZyBzY2VuZXMgb3Igc2l0dWF0aW9ucyBvciBieSBjb25zY2lvdXNseSB0YWtpbmcgc2xvdywgZGVlcCBicmVhdGhzLCB5b3UgY2FuIHNsb3cgeW91ciBoZWFydCByYXRlLCBsb3dlciB5b3VyIGJsb29kIHByZXNzdXJlLCBhbmQgZWFzZSBtdXNjbGUgdGVuc2lvbi4gCkFzIHRvIHlvdXIgc2NlbmFyaW8sIEkgZG9uIHRoaW5rIGl0IHRoYXQgY3JhenkuIEZpcnN0IEkgZG9uIHRoaW5rIFRlcmVzYSB3YXMgc3RhYmJlZCBpbiB0aGUgYmVkcm9vbSAgdGhhdCBvbmx5IGNvbWVzIGZyb20gQnJlbmRhbi4gQnV0IGl0IG1ha2VzIHNlbnNlIHRvIHJhcGUgVGVyZXNhIGluIHRoZSB0cmFpbGVyICBzaGUgY2FtZSB1cCB0byB0aGUgdHJhaWxlciBhZnRlciBwaG90b2dyYXBoaW5nIHRoZSB2YW4gdG8gZ2V0IHBheW1lbnQuIEVhc3kgdG8gZ3JhYiBoZXIgYW5kIHB1bGwgaGVyIGluc2lkZSwgYW5kIGRvIHdoYXRldmVyIGhlIHdhbnRlZCB0byBkby4gSGUgd291bGQgdGFrZSBoZXIgdG8gdGhlIGdhcmFnZSB0byBzaG9vdCBoZXIgdG8gYXZvaWQgbGVhdmluZyBibG9vZCBzcGF0dGVyIGFsbCBvdmVyIGhpcyB0cmFpbGVyICBpdCBvYnZpb3VzbHkgbXVjaCBlYXNpZXIgdG8gY2xlYW4gbGlxdWlkIG9mZiBhIGNlbWVudCBmbG9vciB0aGFuIG9mZiBjYXJwZXQuIEFuZCBoZSB0b29rIGhlciAxMCB5YXJkcyB0byB0aGUgYnVybiBwaXQgYmVjYXVzZS4gd2hhdCBlbHNlIHdhcyBoZSBnb2luZyB0byBkbz8gQnVybiBoaXMgZ2FyYWdlIGRvd24/IEl0IGRvZXNuIHNlZW0gbGlrZSBhIGNyYXp5IHNlcXVlbmNlIG9mIGV2ZW50cyAgcHVsbCBoZXIgaW5zaWRlIHdoZW4gc2hlIGNvbWVzIHRvIHRoZSBkb29yLCByYXBlIGhlciwgYnJpbmcgaGVyIG91dCB0byB0aGUgZ2FyYWdlIHRvIHNob290IGhlciAocGVyc29uYWxseSBpIHRoaW5rIHNoZSB3YXMgYWxyZWFkeSBjaG9rZWQgdG8gZGVhdGggYnkgdGhlbiBhbmQgdGhlIHNob290aW5nIHdhcyByZWxlYXNpbmcgcmFnZSBidXQgdGhhdCBqdXN0IHBlcnNvbmFsIHRoZW9yeSksIGJ1cm4gaGVyIGluIHRoZSBwaXQgcmlnaHQgYmVoaW5kIHRoZSBnYXJhZ2UuCk11bWJhaSwgT2N0IDAzOiBNb3N0IHdpbGwgYmUgYXdhcmUgdGhhdCBUaGUgRGFyayBLbmlnaHQgaGFzIGFtYXNzZWQgb3ZlciBVU0QgNTAwIG1pbGxpb24gaW4gQm94IE9mZmljZSBlYXJuaW5ncyBpbiB0aGUgVVMuIEhvd2V2ZXIsIHdoYXQncyBub3QgY29tbW9ubHkga25vd24gaXMgdGhlIG1vb2xhaCBpdHMgbWFrZXJzIHdpbGwgcmFrZSBpbiB3aXRoIHRoZSBzYWxlIG9mIERhcmsgS25pZ2h0IG1lcmNoYW5kaXNlIGFuZCBzcGVjaWFsIGVkaXRpb24gRFZEcy4gClByb2N0ZXIgR2FtYmxlIENvLidzIGJyaWVmIGZvciBTYWF0Y2hpIFNhYXRjaGksIHJlY2FsbHMgS2ltYmVybHkgRG9lYmVyZWluZXIsIGRpcmVjdG9yIG9mIGJyYW5kIGJ1aWxkaW5nIGFuZCBpbnRlZ3JhdGVkIGNvbW11bmljYXRpb25zIGF0IFAgIk1ha2UgVGlkZSB0aGUgbW9zdCBsb3ZlZCBicmFuZCBpbiB0aGUgU3VwZXIgQm93bC4iIEFuZCBpdCBqdXN0IG1pZ2h0IGhhdmUgc3VjY2VlZGVkLiBVbmRlciBFeGVjdXRpdmUgQ3JlYXRpdmUgRGlyZWN0b3IgUGF1bCBCaWNobGVyLCBlYWNoIFRpZGUgU3VwZXIgQm93bCBhZCBwcmV0ZW5kZWQgdG8gYmUgZm9yIGFub3RoZXIgYnJhbmQuIApJIHVzZWQgdG8gbGl2ZSBpbiBhIHRvd25ob3VzZSBhbmQgaSB3aGl0ZS4gClNlcmlvdXNseSBJIGFtIHNvIGJhZCBhdCBtYXRoLiBUaGlzIGlzIHdoeSBJIGJlY2FtZSBhIHByb2dyYW1tZXIgaW4gcGFydCAoSSBjYW4gZ29vZ2xlIHRvIGdldCBhbnN3ZXJzIHRvIG1hdGggc2NlbmFyaW9zLikgLiBBbHNvIGlmIHlvdSBlbmQgdXAgaW4gdGhlIEVjb21tZXJjZSBzZWN0aW9uIG9mIHRoZSB3b3JsZCBvZiBwcm9ncmFtbWluZyB5b3Ugd2lsbCBiZSBkb2luZyBhIGxvdCBvZiBGcm9udCBFbmQvQmFjayBlbmQgd29yayBhbmQgbm90IG5lY2Vzc2FyaWx5IGhhdmUgdG8gdXNlIGNvbXBsZXggbWF0aGVtYXRpY3MuCiJUb2RheSB3ZSByZXF1aXJlIHRheCByZXR1cm5zLCBidXQgd2hhdCB3b3VsZCBiZSBuZXh0PyIgZm9ybWVyIEdvdi4gSmVycnkgQnJvd24gb2YgQ2FsaWZvcm5pYSwgYSBEZW1vY3JhdCwgd3JvdGUgaW4gdmV0b2luZyBhIHNpbWlsYXIgbWVhc3VyZSBpbiBoaXMgc3RhdGUgaW4gMjAxNywgYWNjb3JkaW5nIHRvIFRoZSBBc3NvY2lhdGVkIFByZXNzLiAKQXQgdGhlIHNhbWUgcG9pbnQgaW4gdGltZSwgYSBkZWxpZ2h0ZnVsIHNlbnNhdGlvbiBvZiBsaXF1aWQgbW92ZW1lbnQgb3JpZ2luYXRpbmcgZnJvbSBkZWVwIHdpdGhpbiB5b3VyIHNpbnVzIGFsZXJ0cyB5b3UgdG8gYW5vdGhlciBtb3N0IGV4aGlsYXJhdGluZyBkZXZlbG9wbWVudCAgIHRoaXMgb25lIGhhcyB0aGUgbXVjaCBzb3VnaHQgYWZ0ZXIgc2VtaSBsaXF1aWQgdGFpbCEgQSBib25hIGZpZGUgQnJhaW4gVGlja2xlciAgIHRoZSB1bmljb3JuIG9mIHRoZSBib29nZXIgcGlja2luZyBwdXJzdWl0ISBZb3Ugc2hpdmVyIHdpdGggZGVsaWdodCBhcyB0aGUgZ29vZXksIHZpc2NvdXMgdGFpbCBzbGlkZXMgYWxvbmcgdGhlIGJvdHRvbSBvZiB5b3VyIG5hc2FsIHBhc3NhZ2UsIHNuYWlsIGxpa2UsIGZvbGxvd2luZyBhbG9uZyBiZWhpbmQgaXRzIHNvbGlkIGxlYWRlciBhdHRhY2hlZCB0byB5b3VyIGZpbmdlcm5haWwuIFRoZSBpbndhcmQgcnVzaCBvZiBjb29sIGFpciBtZWV0aW5nIHlvdXIgZnJlc2hseSBleHBvc2VkIGludGVyIG5hc2FsIHN1cmZhY2UgZmVlbHMgcG9zaXRpdmVseSBvcmdhc21pYy4uIApMZXMgZ3JhbmRlcyB2aWRvcyBxdWkgb250IGRmcmF5IGxhIGNocm9uaXF1ZSAoMiAgbWEgY29ubmFpc3NhbmNlKSBub3VzIG9udCAiY2FjaCIgYSA6TidhdHRlbmRleiBwYXMgZGUgbW9pIHF1ZSBqZSBkaXNzZXJ0ZSBzdXIgbGUgcHJvYmxtZSBwb3MgOiBkZXMgdm9pdHVyZXMgIG1vaXRpIGdyaWxsZXMgY29tbWUgc2kgZWxsZXMgYXZhaWVudCB0IGVuIHBhcnRpZSBwcm90Z2VzIGQnb25kZXMgaW5jZW5kaWFpcmVzIG15c3RyaWV1cmVzIHBhciBkZXMgb2JzdGFjbGVzIHBoeXNpcXVlLCBkZSBsZSBmZXJyYWlsbGUgcXVpIHNlIGNvbnN1bWUgc2FucyBxdWUgbGEgc2VsbGVyaWUgZGVzIHZvaXR1cmVzIHNvaWVudCBicmxlcywgZXQgYmllbiBpbCBuJ2VzdCBwYXMgZG91dGV1eCBxdSdpbCBzZSBzb2l0IHBhc3MgcXVlbHF1ZSBjaG9zZSBkJ2Fzc2V6IGV4dHJhb3JkaW5haXJlLiAKU2ljaGVybGljaCBrYW5uIG1hbiBzaWNoIGRhcyB2ZXJtaXR0ZWx0ZSBXaXNzZW4gYXVjaCBhdXMgZGVuIHphaGxyZWljaGVuIE9ubGluZSBGb3JlbiBzdWNoZW4sIGljaCBwZXJzbmxpY2ggZXJ6aWVsZSBhYmVyIG1pdCBkZW0gc3R1ZGllcmVuIGVpbmVzIEJ1Y2hlcyBlaW5lbiBoaGVyZW4gTGVybmVmZmVrdCwgYWxzIHZvciBkZW0gUEMgZGllIFNlaXRlbiByYXVmIHVuZCBydW50ZXIgc2Nyb2xsZW5kLiBVbmQgbWFuIG10ZSBzY2hvbiB2aWVsZSBGb3JlbiBkdXJjaHN0YmVybiwgdW0gYW4gMjAwIGdlc3BpZWx0ZSBQcm9maSBIbmRlIHp1IEdlbGFuZ2VuLCBpbiBkZW5lbiBkaWUgU3BpZWxlciBpaHJlIEdlZGFua2VuZ25nZSB3aHJlbmQgZGVzIFNwaWVscyBwcmVpc2dlYmVuLgpEZXBhcnRtZW50IG9mIERlZmVuc2UKUGFydGljdWxhcmx5IHdoZW4gdGhleSBhcmUgaW4gYSBwb3NpdGlvbiBvZiBpbmZsdWVuY2UuIE1ha2luZyBhIHN0YXRlbWVudCBvZiBiZWxpZWYgaXMgb25lIHRoaW5nLiAKTGVzIHNhbG9ucyBkZSBtYXNzYWdlIGZvbnQgcGFydGllIGludGdyYW50ZSBkZSBsIGR1IHNleGUuIApNb3N0IHBsYWNlcyBpbiBvdXIgY291bnRyeSBkb24ndCByZXF1aXJlIHRoYXQgeW91IHNwZW5kICQ1MDBrIG9uIHlvdXIgZmlyc3QgaG9tZS4uIApJdCBub3QgYSB2aW9sYXRpb24gdG8gc2F5ICJ0aGlzIGRlZmVuZGFudCBpcyBndWlsdHkgb2YgdGhpcyBjcmltZSIsIGFuZCBhcHBhcmVudGx5IGl0IG5vdCBhIHZpb2xhdGlvbiB0byBzYXkgInJlYXNvbmFibGUgZG91YnQgaXMgZm9yIGlubm9jZW50IHBlb3BsZS4iIE5vdCB0aGUgc2FtZSB0aGluZyBhdCBhbGwgYXMgdGhlIGJhc2lzIGZvciB0aGlzIFNDIGRlY2lzaW9uLi4gClthbm90aGVyIHNpZGUgbm90ZTogRHIuIEphbmRhIHRhdWdodCBEci4gU3R1YXJ0IE1jR2lsbCAob25lIG9mIHRoZSB3b3JsZCdzIGJlc3Qgd2hlbiBpdCBjb21lcyB0byB1bmRlcnN0YW5kaW5nIHRoZSBiYWNrIGFuZCBzcGluZSkgaG93IHRvIGFzc2VzcyBkaWZmZXJlbnQga2luZHMgb2YgbW92ZW1lbnQgZGlzb3JkZXJzIGFuZCBzeW5kcm9tZXMuXSBMaW5rIG9uIERyLiBNY0dpbGwgYXJ0aWNsZSBieSBtZToKQWxzbywgd2hhdCBhYm91dCBsb25nIHRlcm0sIHdpbGwgdGhpcyB0b3hpYyBlbnZpcm9ubWVudCBkbyBtb3JlIGhhcm0gdGhhbiBnb29kIHRvIHlvdXIgcGVyc29uYWwgZ3Jvd3RoIHdoaWxlIHlvdSAicHV0IHlvdXIgaGVhZCBkb3duIGZvciBhIHllYXIgb3IgdHdvIi4gCllvdSdkIGJlIGx1Y2t5IHRvIGhpdCBhIGhlbmNobWFuIGlmIHRoZSBkdWVsIHRvb2sgcGxhY2UgaW4gYSBjbG9zZXQuLiAKQSBnb29kICJIZXkgeW91LiIgd291bGQgZG8gdGhlIGpvYiBmYW50YXN0aWNhbGx5LiAKSGFuZCAyKSBJIHRoaW5rIHlvdSBjYW4gbWFrZSBhIGNhc2UgZm9yIGNiZXQgb3IgY2hlY2sgaGVyZSBidXQgSSBsaWtlIGNiZXQgYSBsaXR0bGUgbW9yZSwgZXNwZWNpYWxseSBpZiB5b3UgaGF2ZSBhIGNsdWIgaW4geW91ciBoYW5kLiAKQXMgc29tZW9uZSB3aG8gcGxheXMgMTIgaG91ciBzZXNzaW9ucyBhbmQgaGFzIHRoZSBtZXRhYm9saXNtIG9mIGEgdGVlbmFnZXIgdHJhaW5pbmcgZm9yIGEgbWFyYXRob24sIHRoZXJlIHBsZW50eSBvZiBkb3dudGltZSB0byBlYXQgaW4gbGl2ZSBwb2tlci4gVGhlIGtleSBpcyB0byBiZSBmdWxseSBlbmdhZ2VkIGFueSB0aW1lIHlvdSBoYXZlIGNhcmRzIGluIGZyb250IG9mIHlvdSwgZXZlbiBpZiB5b3UgaGF2ZW4gVlBJUGVkIG9yIGZ1bGx5IGludGVuZCB0byBmb2xkIHdoZW4gdGhlIGFjdGlvbiBnZXRzIHRvIHlvdS4gV2hpbGUgdGhlIGRlYWxlciBpcyBnZXR0aW5nIHRoZSBuZXh0IGRlY2sgcmVhZHksIHdpcGUgeW91ciBoYW5kcywgcHVzaCB0aGUgZm9vZCB0YWJsZSBhd2F5LCBjYXRjaCB0aGUgY2FyZHMgd2hpbGUgdGhleSBwaXRjaGVkIHRvIHlvdSBhbmQgZ2V0IHJlYWR5IGZvciB5b3VyIG5leHQgYWN0aW9uLi4gCkkgaGF2ZSBzY29saW9zaXMgYW5kIGEgZm9ybSBvZiBreXBob3NpcyAoYWthIGh1bmNoYmFjaykgYW5kIG15IHNwaW5lIHVzZWQgdG8gbG9vayBsaWtlIGEgYml0IGxpa2UgYW4gUy4gSW4gMjAwOSwgYXQgMTksIEkgaGFkIHJvZHMgaW5zZXJ0ZWQgdG8gc3RyYWlnaHRlbiBteSBzcGluZSwgaW1wcm92aW5nIG15IGNvbmRpdGlvbiBieSA4NSUgYW5kIGdhaW5pbmcgMiBpbmNoZXMgaW4gaGVpZ2h0LiBSZWNvdmVyeSB3YXMgaGVsbCwgYnV0IGl0IHdhcyB3ZWxsIHdvcnRoIGl0Li4gClJhbmRvbWlzaW5nIGVmZmVjdGl2ZWx5IGp1c3QgZW5zdXJlcyB0aGF0IHlvdSBwbGF5aW5nIEdUTyAobGlrZSBpbiBSUFMpIGluIGdhbWVzIChvciBtaW5pIGdhbWVzKSB3aXRoIGZldyBwb3NzaWJsZSBhY3Rpb25zICAgdGhhdCB5b3Ugd29uIGxvc2UgaW4gdGhlIGxvbmcgcnVuLiBCdXQgc2luY2UgdGhlIGdhbWUgaXMgY29udGludW91cyBhbmQgaGlnaGx5IHZhcmllZCwgYW5kIHNtYWxsIGxlYWRzIGdlbmVyYWxseSBncm93IHRvIGxhcmdlIGxlYWRzLCBpdCBzaW1wbHkgYmV0dGVyIHRvIHBsYXkgZXhwbG9pdGF0aXZlbHkuIApPdmVydmlldyBmb3Igbm90YW5vdGhlcmxvdWRhc2lhbgpMZXMgbGFjcnltb3MsICBsYSBsaW1pdGUgYyBkZSBib25uZSBndWVycmUgcG91ciBkaXNwZXJzZXIgdW5lIGZvdWxlIChxdWFuZCBjIGp1c3RpZmksIGV0IGxlcyBzcXVlbGxlcyBzb250IHRycyByYXJlcyksIG1haXMgbGVzIGV4cGxvc2lmcz8gQyB1biBwZXUgcmlzcXUgZXQgZGlzcHJvcG9ydGlvbm4gbm9uPwpBbiBvbmxpbmUgY2FzaW5vIGRvZXNuJ3QgaGF2ZSBzbyBtYW55IHByb2JsZW0gYW5kIG9ubGluZSBjYXNpbm8gcHJvcG9zZSB1bnRpbCA1MDAgZ2FtZXMgb24ganVzdCBvbmUgd2Vic2l0ZXMuIFdoZW4geW91IHBsYXkgb25saW5lIHlvdSBjYW4gcGxheSBpbW1lZGlhdGVseSB0byBhIHNsb3QgbWFjaGluZSBhdCB0aGUgcmVhbCBjYXNpbm8sIHRoZSBtYWNoaW5lIGhhcyB0byBiZSBmcmVlIGJlZm9yZSBwbGF5aW5nIHdpdGggaXQuIE9ubGluZSBjYXNpbm8gb2ZmZXJzIHlvdSB0aGUgcG9zc2liaWxpdHkgdG8gZ2V0IGEgbG90IG9mIGJvbnVzZXMgdG8gYXR0cmFjdCB5b3UgYnV0IGJlY2F1c2UgdGhleSBkbyBub3QgbmVlZCB0byBlbXBsb3kgYW55b25lIHRvIGRvIHRoYXQuIApKdXN0aW4gVGltYmVybGFrZSBMYWR5IEdhR2FdIGlzIGFjb21lZHkgc2luZ2xlIHdpdGggY29tZWRpYW5zIGZlYXR1cmluZyB0aGUgb25lIGFuZCBvbmx5IExhZHkgR2FHYSFDYW4gZ2V0IHRoaXMgc29uZyBvbiBpVHVuZXMuIApBbHRlcm5hdGl2ZSBzY2VuYXJpb3MgaW5jbHVkZSBoaW0gYnJlYWtpbmcgb3V0LCBvciBnZXR0aW5nIGEgbmV3IGltbXVuaXR5IGFncmVlbWVudCB3aXRoIHRoZSBibGVzc2luZyBvZiB0aGUgcHJlc2lkZW50Li4gCkEgZmVsbG93IE5hbmN5IG93bnMgdGhpcyBjYWZlLiBTaGUgaGFzIGEgdG9uIG9mIGJvb2tzIGZvciB5b3UgdG8gcmVhZCwgbGl2ZSBlbnRlcnRhaW5tZW50IHNvbWUgZGF5cy9uaWdodHMsIGFuZCB0aGV5IG1ha2UgYW1hemluZyBzYW5kd2ljaGVzLiBJZiB5b3UgYXJlIGNyYXZpbmcgcGl6emEsIGdvIHRvIFBpY3R1cmVkIFJvY2tzIFBpenphLiAKSXQncyB0cnVseSBhbiBpbnZlc3RtZW50IGluIHlvdXIgaGVhbHRoLi4gCkl0IG5vdCBqdXN0IGEgaGVhZHNob3QsIGl0IGFpbWluZyBmb3IgdGhlaXIgZ2xhc3MgamF3LiBIaXQgdGhlbSByaWdodCBpbiB0aGUgdGVldGggYW5kIHlvdSBnZXQgdGhlIHN0dW4gZXZlcnkgdGltZS4gVHJ5IGEgZmV3IGFlcmlhbCBzaG90cyBzbyB5b3UgZ2V0IHRoZSBidWxsZXQgdGltZSBlZmZlY3QgdG8gYWltLiBJIGFsc28gZmluZCBoYXZpbmcgYSBtdWx0aSBzaG90IGJvdyB0byBiZSB2ZXJ5IGhlbHBmdWwgZm9yIHRoZSAiYnVja3Nob3QiIGVmZmVjdDsgaXQgdGhhdCBtdWNoIGVhc2llciB0byBqdXN0IHN3aW5nIHVwIGFuZCBzbmFwIG9mZiBhIHF1aWNrIHNob3QgcmlnaHQgYXMgdGhleSBjaGFyZ2UgeW91IGZyb20gbWVkaXVtIHJhbmdlLiBUaGlzIGlzIGhvdyBJIGRvIGl0LgpTb21lIHNpdGVzIGp1c3QgZG9uIGFsbG93IHlvdSB0byB1c2UgcHJveHkgc2l0ZXMuIFRoZSBzdHJvbmdlc3QgYmxvY2sgdGhhdCBjYW4gb2NjdXIgaXMgdGhlIDQwMyBGb3JiaWRkZW4sIHdoaWNoIEkgaGF2ZSBubyBpZGVhIHRvIGdldCBhcm91bmQuIApJIGluY2x1ZGUgc29tZSBjb21iaW5hdGlvbiBvZiBSZW4gMTIsIFJlbiA2LCBTdG9tYWNoIDI1LCBTdG9tYWNoIDM2LCBhbmQgU3BsZWVuIDMgZm9yIHRoaXMuLiAKWW91IHdpbGwgbmV2ZXIgc2VlIGEgZmluZXIgY29sbGVjdGlvbiBvZiB3ZWxsIHByZXNlcnZlZCAxOTUwcyA2MHMgQnJpc3RvbHMuLiAKUGFtcGVyIHlvdXJzZWxmOiBXaGVuZXZlciB5b3UgaGF2ZSBhIGZyZWUgYWZ0ZXJub29uLCBubyB3b3JrLCBubyBvYmxpZ2F0aW9ucywgdGFrZSB0aGlzIHRpbWUgdG8gc3BvaWwgeW91cnNlbGYuIEEgZ29vZCBzaG93ZXIsIGEgbWFuaWN1cmUgYW5kIHBlZGljdXJlLCBhIG1hc2sgZm9yIHlvdXIgc2tpbiwgYSBnb29kIHRyZWF0bWVudCBmb3IgeW91ciBoYWlyLCBtYXliZSBhbiBhcHBvaW50bWVudCB0byBnZXQgYSBtYXNzYWdlLCBnbyBmb3IgYSB3YWxrIChvciBhbnkgb3RoZXIgYWN0aXZpdHkgeW91IGVuam95KS4gWW91IHdpbGwgZmVlbCByZW5ld2VkLCByZWZyZXNoZWQgYW5kIGhhcHB5IGFuZCB5b3Ugd2lsbCBwcm9qZWN0IHRoZXNlIGZlZWxpbmdzIHRvIG90aGVycy4uIAoiV2VsbCwiIHNhaWQgRGlhbmEgd2l0aCBhIGNlcnRhaW4gaGF1Z2h0aW5lc3MuICJZb3UgbWlnaHQgYmUgZm9yZ2V0dGluZyBJJ20gYSB0cmFpbmVkIGFjY291bnRhbnQuIgpUUCBob2xkZXJzIGJ1dCBubyBUUC4gCkFueW9uZSB3aG8gcGF5cyBodW5kcmVkcyBvZiBkb2xsYXJzIHRvIGdvIHRvIEdhbGF4eSBFZGdlIChlc3BlY2lhbGx5IGluIHRoZSBmaXJzdCBmZXcgbW9udGhzIGJlZm9yZSBJWCBjb21lcyBvdXQpIHdpbGwgbGlrZWx5IHBheSAkMTUgdG8gc2VlIElYIGluIHRoZWF0ZXJzLiBUaGV5IG5vdCBleGFjdGx5IGNvbnZpbmNpbmcgYW55b25lIHRvIHNlZSB0aGUgZmlsbSBieSBkb2luZyB0aGF0IGVpdGhlci4gTm90IHRvIG1lbnRpb24sIGFmdGVyIElYIGNvbWVzIG91dCB0aGUgd2hvbGUgImJldHdlZW4gVExKIGFuZCBJWCIgdGhpbmcgd2lsbCBiZSBwcmV0dHkgcG9pbnRsZXNzLi4gClBob3RvIGJ5IEVkd2FyZCBKb2huIEFsbGVuCkl0J3MgYW1hemluZyBob3cgbXVjaCBvZiB5b3VyIHNob3cgeW91IGNyZWF0ZSB5b3Vyc2VsZiwgYW5kIGhvdyBwYXNzaW9uYXRlIHlvdSBhcmUgYWJvdXQgdGhlIHByb2R1Y3Rpb24uIFlvdSBhcmUgdGhlIGJpZ2dlc3QgcmVhc29uIEknbSBhdHRlbmRpbmcgVWx0cmEgZm9yIHRoZSBmaXJzdCB0aW1lIHRoaXMgeWVhciwgdG8gc2VlIHlvdSBwbGF5LiBZb3UgYXJlIGEgdHJ1bHkgaW5jcmVkaWJsZSBhbmQgdGFsZW50ZWQgYXJ0aXN0Li4gCldlIGhhZCBhIGdpcmwgZnJvbSBTb3V0aCBDYXJvbGluYSB1cCBoZXJlIGxhc3QgeWVhci4gU2hlIGhhZCBuZXZlciBzZWVuIHNub3csIGFuZCBpdCB3YXMgIDIwIG91dCBpbiBKYW51YXJ5LiAKQWxzbywgYSByZWFsIGNhc2lubyBoYXMgdG8gcmVzcGVjdCBzZWN1cml0eSBsZWdpc2xhdGlvbiB0aHJvdWdoIHRoZSBmYWN0IHRoYXQgdGhleSByZWNlaXZlIGFuIGF1ZGllbmNlLiBUaHVzLCBjYXNpbm8gaGFzIHRvIGxpbWl0IHRoZSBudW1iZXIgb2YgcGxheWVycyBpbiBhIHJlYWwgY2FzaW5vLiAKTWF5YmUgd2hlbiB5b3UgaGF2ZW4gYnVpbHQgeW91ciBwdXJwb3NlLCB5b3VyIHdvcmRzIGFyZSBqdXN0IGxpdHRsZSBncmFiYmVyIHRvb2xzIHlvdSB1c2UKU3RvcCBTdGF0aWMgU3RyZXRjaGluZyBCZWZvcmUgV29ya291dHMKSSBob3BlIHRoZSBiaW9sb2dpY2FsIHBhcmVudHMgc2VlayBzb21lIHN1cHBvcnQgaGVyZSBhcyBpdCBzZWVtcyBvbGRlciBhZHVsdHMgYXJlIGp1c3QgdGVsbGluZyB0aGVtIHdoYXQgdG8gZG8uIApPdmVydmlldyBmb3IgZmllbGRzClYgVGhlIGNsdWIgbGVuZ3RoIHByb2JsZW0gaXMgbm90IHJlc3RyaWN0ZWQgdG8gZHJpdmVycywgaXQgYWxzbyBleGlzdHMgaW4gaXJvbnMuIApJdCB3YXMgbmV2ZXIgbXkgaW50ZW50aW9uIHRvIGdvIHRvIGEgc3dpbmdlcnMgY2x1YiBvbiBteSBvd247IGl0IGp1c3Qgd29ya2VkIG91dCB0aGF0IHdheS4gVG8gYmUgY2xlYXIsIEknbSBub3QgYSBzd2luZ2VyLiBNb25vZ2FteSBoYXMgYWx3YXlzIGJlZW4gbXkgdGhpbmcuIEkgYW0sIGhvd2V2ZXIsIGEgY3VyaW91cyBwZXJzb24uCklmIGh1bWFucyB3ZXJlIHJlYWR5IHRvIGRvIGEgdGhpbmcgYmVjYXVzZSBpdCB3YXMgZ29vZCBmb3IgdGhlIHJlc3Qgb2YgaHVtYW5pdHkgd2UgY291bGQgZG8gYXdheSB3aXRoIGEgd2hvbGUgbG90IG9mIHBlc2t5IGFubm95aW5nIGxhd3MgdGhhdCBiYXNpY2FsbHkgc2F5ICJkb24gYmUgYSBkaWNrLiIgU2FkbHkgd2Ugbm90IHRoZXJlIHlldCwgYW5kIHdlIHN0aWxsIHRha2UgYm90aCBvdXIgZmVsbG93IGh1bWFucyBhbmQgbW9zdCBvZiB0aGUgYW1hemluZyB0aGluZ3Mgd2UgY3JlYXRlZCB0b3RhbGx5IGZvciBncmFudGVkLiBTbyBzb21lYm9keSBoYXMgdG8gc2F5ICJkbyB0aGlzIGZvciB0aGUgZ29vZCBvZiBodW1hbml0eSIgYmVjYXVzZSBpbmRpdmlkdWFsIGh1bWFucyB3aWxsIG5vdC4KVGhlIGNlcmFtaWMgdGlsZSByb29maW5nIGlzIGFuIG9sZCBpZGVhIG1hZGUgbmV3IGFnYWluLiBUaGVzZSByb29mcyB3aWxsIGxhc3QgZm9yZXZlciBhbmQgdGhlcmUgaXMgcHJhY3RpY2FsbHkgbm8gdXBrZWVwLiBXZSBoYXZlIGFsbCB0aGUgdXN1YWwgIm1vZCBjb25zIiwgbG93IGZsdXNoIHRvaWxldHMsIHJhaW5mb3Jlc3Qgc2hvd2VyIGhlYWRzIHRoYXQgYXJlIGFjdHVhbGx5IHdhdGVyIG1pc2VycyBhbmQsIG9oIHllcywgdGhlIGhlYXRlZCBiYXRocm9vbSBmbG9vcnMsIHNvIG5pY2UuLiAKQnV0IGxvb2sgYSBsaXR0bGUgY2xvc2VyIGF0IHRoYXQgcmVkIHNwb3QgICBpdCBtYXkgbm90IGJlIGEgcGltcGxlIGF0IGFsbCwgYnV0IHJhdGhlciByZWQsIGluZmxhbWVkIHNraW4uIApUaGUgZ2FtZSBwbGF5ZWQgaW4gdG9kYXlzIHBva2VyIHRlbGV2aXNpb24gc2hvd3MsIGFuZCBhbHNvIHRoZSBnYW1lIHBsYXllZCBpbiBXb3JsZCBQb2tlciBUb3VyIGFuZCBpbiB0aGUgbWFpbiBldmVudCBvZiB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyLCBUZXhhcyBIb2xkZW0gcG9rZXIgaXMgYSBmdW4gYW5kIGVhc3kgdG8gbGVhcm4gcG9rZXIgZ2FtZSB0aGF0IGlzIGV4dHJlbWVseSBhZGRpY3RpdmUuIFdhdGNoIG91dCBpZiB5b3Ugc3RhcnQgcGxheWluZyBiZWNhdXNlIGl0IG1pZ2h0IGp1c3QgZ2V0IHlvdS4gSXQncyBhIGZ1biwgSSBtZWFuIHJlYWxseSwgcmVhbGx5IGZ1bi4KVGhhdCBpcyB0aGUgcHJvYmxlbSB3aXRoIGJpdGNvaW4gbm90IG11Y2ggb2YgaXQgd2FzIG1hZGUgc28gaXRzIGVhc3kgdG8gbWFuaXB1bGF0ZSB0aGUgcHJpY2Ugb2YgaXQgZnJvbSAyMGsgZG93biB0byAxNTAgZG9sbGFycyBhIGNvaW4uIApUaGF0IHlvdXIgZmFtaWx5LiBTbyB5b3UgY29tZSBoZXJlIHRvZGF5IGFuZCB5b3UgICBkZWVwIGluIG15IGhlYXJ0LCB5b3Uga25vdywgd2hlbiBJIHByYWN0aWNlZCBsYXcgSSByZXByZXNlbnRlZCBhIGxvdCBvZiBsYXd5ZXJzIHdobyBnb3QgaW4gdHJvdWJsZSwgYW5kIHlvdSBjb21lIHNheWluZyBJIGhhdmUgbWFkZSBteSBtaXN0YWtlcywgYnV0IG5vdyBJIHdhbnQgdG8gY2hhbmdlIG15IGxpZmUuIEFuZCwgeW91IGtub3csIGlmIHdlICAgaWYgd2UgYXMgYSBuYXRpb24gZGlkIG5vdCBnaXZlIGhpbSBhbiBvcHBvcnR1bml0eSBhZnRlciB0aGV5IG1hZGUgbWlzdGFrZXMgdG8gY2hhbmdlIHRoZWlyIGxpdmVzLCBhIHdob2xlIGxvdCBvZiBwZW9wbGUgd291bGQgbm90IGRvIHZlcnkgd2VsbC4gCk5vLCBpdCB3YXMgYSBvbmNlIGluIGEgbGlmZXRpbWUgdGhpbmcuIApUaGVyZSBpcyBhbiBpbmZvcm1hbCBTYWxvbW9uIGFsdW1uaSBhc3NvY2lhdGlvbi4gSSB0aGluayB0aGF0IGJlY2F1c2UgZXZlcnlvbmUgd2hvIHdhcyB0aGVyZSB0aGlua3MgYWJvdXQgaXQgYXMgYSBwbGFjZSB0aGF0IGhhZCBhIHJlYWwgZWZmZWN0IG9uIHRoZW0uIEl0IHdhcyBhIHJlYWxseSBkaXN0aW5jdGl2ZSBwbGFjZSwgbG92ZSBpdCBvciBoYXRlIGl0LCBpdCB3YXMgcHVuZ2VudCwgYW5kIHRoZXJlIHdhcyBub3RoaW5nIGxpa2UgaXQuIFNvIGFsbCBvZiB1cywgSSB0aGluayBhdCBsZWFzdCBpbiByZXRyb3NwZWN0LCB0aGluayBvZiBpdCBmb25kbHkuCkV2ZXJ5b25lIHdobyBkb2VzIHRoZSBZb3V0dWJlIGFkcyBwcm9ncmFtICgxMGsgc3VicyArIGNlcnRhaW4gYW1vdW50IG9mIHZpZXdzIGV2ZXJ5IHZpZGVvKSBoYXMgdG8gc2lnbiB0aGUgbmV3IFRPUyBiZWNhdXNlIHdpdGggWW91dHViZSBSZWQgdGhleSB1cGRhdGUgdGhlaXIgWW91dHViZSBhZHMgcHJvZ3JhbSB0aGF0IGVmZmVjdHMgYWxsIHdobyBhcmUgaW4gaXQuIApNIGFwcGVhcmVkIHRvIHRoZSBTdXBlciBCb3dsIGluIDIwMTggZm9yIHRoZSBmaXJzdCB0aW1lIGluIHRocmVlIHllYXJzIHdpdGggYSBodW1vcm91cyBzcG90IHN0YXJyaW5nIERhbm55IERlVml0by4KR2FtYmxpbmcgcmVndWxhdGlvbnMgYmVnYW4gdG8gYmUgbW9vdGVkIGFyb3VuZCB0aGUgdGltZSBvZiB0aGUgZXN0YWJsaXNobWVudCBvZiB0aGUgSXJpc2ggRnJlZSBTdGF0ZSBpbiAxOTIyLiAKSWNoIGtlbm5lIGVpbmUgSW5nZW5ldXJpbiwgZGllIG1pdCBlaW5lbSBNYXN0ZXIgZWluZ2VzdGllZ2VuIGlzdCB1bmQgYWxsZSBpaHJlIEtvbWlsbGl0b25lbiBoYXR0ZW4gYXVjaCBpbiBldHdhIGVpbiBFaW5zdGllZ3NnZWhhbHQgdm9uIGV0d2EgNjBrLiBEaWVzZSBpc3QgaW0gYWxsZ2VtZWluZW0gc2VociBzcGFyc2FtIGF1ZXIgYmVpIHNvbGNoZW4ga28gRXJuaHJ1bmdzc2FjaGVuLiBVbSBlaW4gQmlsZCBtaXQgSGlsZmUgdm9uIENsaWNoZXMgenUgemVpY2huZW4gaXN0IHNpZSB6dWRlbSBub2NoIGVpbiB6aWVtbGljaGVyIEFmcmlrYSBmYW4sIG1pdCBIaXBwaWUgS2xhbW90dGUgdW5kIGFsbGVzIGRydW0gdW5kIGRyYW4gc28gd2llIG1hbiBzaWNoIGluIGV0d2EgTGV1dGUgbWl0IFJhc3RhbG9ja2VuIHZvcnN0ZWxsdCwgbnVyIGRhc3Mgc2llIGpldHp0IGtlaW5lIGhhdCBhYmVyIGFuc29uc3RlbiBiZWRpZW50IHNpZSBpbiBldHdhIGRhcyBDbGljaGUuIApXaGVuIE9ydGVnYSBjb25uZWN0ZWQsIEhvbGxvd2F5IG5vZGRlZCBhcyBpZiB0byBnaXZlIGhpbSBwcm9wcy4gT3J0Z2VhIHNob3dlZCBoZSBjYW4gdGFrZSBhIHB1bmNoLgpXaGF0IHJlYWxseSBncmluZHMgbXkgZ2VhcnMgaXMgd2hlbiBmcmllbmRzIGluIGhpZ2ggc2Nob29sIHdlcmUgbGlrZSBidXQgeW91IHByYWN0aWNhbGx5IHdoaXRlIHdoeT8gQmVjYXVzZSBJIG9ubHkga25vdyBmb29kIGFuZCB0b2RkbGVyc3BlYWsgaW4gQ2hpbmVzZT8gQmVjYXVzZSB5IHRoaW5rICJBc2lhbiIgbWVhbnMgbmV3IGltbWlncmFudD8gdWdoLiAKQnV0IHRoZSBjb21lZGlhbnMgd2hvIGFyZSBsYW1lbnRpbmcgdGhlIHN0aWZsaW5nIHJlc3RyaWN0aW9ucyBvZiBwb2xpdGljYWwgY29ycmVjdG5lc3MgYXJlbiB1cHNldCBiZWNhdXNlIHRoZWlyIGFydCBoYXMgYmVlbiByZXByZXNzZWQuClNpbmNlIGl0IGhhcyAiZmV3ZXIgY2Fsb3JpZXMiIHBlb3BsZSB0aGluayBpdCBpcyAic2FmZSIgYW5kIHRodXMgdGhleSBlbmQgdXAgZHJpbmtpbmcgaXQgbW9yZS4gVGhlIHBvaW50IGlzIHNvZGFzIGFyZSBub3QgdG94aWMgdG8gdGhlIGJvZHkgT05MWSBiZWNhdXNlIG9mIHRoZWlyIGNhbG9yaWZpYyBjb250ZW50LiBPdGhlciBjaGVtaWNhbHMgYW5kIGZsYXZvcmluZyBhZ2VudHMgYWRkZWQgdG8gaXQgbWFrZSBpdCBhIHBvaXNvbiB3YXRlci4uIApMaXZlIFBva2VyIFRvdXJuYW1lbnQgQm9udXMgT2ZmZXJpbmdzCihJJ20gb25seSBhIGNhc3VhbCBSZWRkaXQgdXNlciBzbyBteSBhcG9sb2dpZXMgZm9yIG5vdCBwdXR0aW5nIHRoZSBxdWVzdGlvbiBoZXJlIGZpcnN0ICkKSGVyIHBhbnRzIHdlcmUgc3RpbGwgb24gZmZzLiBBbnlvbmUgZWxzZSBvbiByL3NleCBldmVyIGhhdmUgdGhpcyBoYXBwZW4gdG8gdGhlbT8uIApDaGluYSBhbmQgSG9uZyBLb25nIGRvbid0IGhhdmUgY2xvdGhlcyBsaW5lcyAgIGFsbCB0aGVpciBjbG90aGVzIGFyZSBodW5nIG91dCB0aGUgd2luZG93cyBvciBvbiBiYWxjb25pZXMsIHNvIGV2ZXJ5d2hlcmUgeW91IGxvb2sgdGhlcmUgYXJlIGJ1aWxkaW5ncyB3aXRoIGh1bmRyZWRzIG9mIGNsb3RoaW5nIGl0ZW1zIGhhbmdpbmcgb24gdGhlbS4gClRoaXMgbWVhbnMgeW91IGNhbiB3YWl0IHVudGlsIHlvdSBoYXZlIGEgc3Ryb25nIGhhbmQgYW5kIGp1c3QgYm9tYiBpdC4gVGhpcyB3aWxsIHdpbiB5b3UgYSBsb3Qgb2YgbW9uZXksIGhvd2V2ZXIsIHRoZSBzdHJhdGVneSBpcyBleHBsb2l0YWJsZS4gClNoZSBhbHNvIHJlYWxpc2VkIHRoYXQgaGVyIGZlYXJzIHdlcmUgaXJyYXRpb25hbCBhbmQgdGhlIHJlYWxpdHkgb2Ygd2hhdCBzaGUgaGFkIHdpdGggeW91IHdhcyBzb21ldGhpbmcgYW5kIHNvbWVvbmUgc2hlIHdhbnRlZCAgIChhcyBmb3IgaGltIGJlaW5nIGFuIGFsbGVnZWQgMTAvMTAsIEkgZG9uIGtub3cgd2hhdCB0byBzYXkuIEl0IGxpa2UgcGFydG5lcnMgYWx3YXlzIGhhdmUgYSBmbGluZyB3aXRoIHNvbWVvbmUgdGhhdCBzZWVtcyB0byBiZSBiZXR0ZXIgYnV0IHR1cm5zIG91dCB0byBiZSB3b3JzZT8gU2VlIENoYXJsZW1hZ25lIHRoYSBnb2Qgc3Rvcnkgb24gaGlzIGdmIHdobyBzbGVwdCB3aXRoIHNvbWVvbmUgZWxzZS4gClRoZSBiZXN0IHdheSB0byBwbGF5IHBva2VyIGlzIHRvIGFkanVzdCBhY2NvcmRpbmcgdG8geW91ciBvcHBvbmVudC4gV2hlbiBwbGF5aW5nIGFnYWluc3QgYmFkIHBsYXllcnMsIGl0IGlzIHVzdWFsbHkgY29ycmVjdCB0byBwbGF5IGJ5IGJldHRpbmcgYWxvdCBhbmQgb25seSBwbGF5aW5nIGdvb2QgaGFuZHMuIFdoZW4geW91IGtub3cgdGhlc2UgZnJlcXVlbmNpZXMgYW5kIGlmIHlvdXIgb3Bwb25lbnQgYmx1ZmZzIG1vcmUgb3IgbGVzcyB0aGFuIHRoaXMgYW1vdW50IHlvdSBrbm93IHdoYXQgdG8gZG8gYnV0IGRvbid0IGFsd2F5cyBkbyBpdCB1bmxlc3MgdGhleSB3b24ndCBub3RpY2UuIApSZWdhcmRsZXNzIG9mIHdoaWNoIGl0IHRheGluZyB0aG91Z2gsIEhlYXJ0aHN0b25lIGlzIGEgZ2FtZSB0aGF0IHJ1bnMganVzdCBhcyB3ZWxsIG9uIG1vYmlsZSBwaG9uZXMgd2l0aCBmZXcgY2hhbmdlcyBhc2lkZSBmcm9tIGhhdmluZyBubyBjaG9pY2UgaW4gZ3JhcGhpY2FsIHNldHRpbmdzLiAKRGlmZmVyZW5jZSBvZiBGcmVlIFRleGFzIEhvbGRlbSBQb2tlciBmcm9tIE90aGVyIENhcmQgR2FtZXMKSGUgYmUganVzdCBzb21lIHJpY2ggZHVkZSB3aXRoIGhpcmVkIHNlY3VyaXR5LiBTbyB3aHkgbm90IGdvIGFsbCB0aGUgd2F5IGFuZCBzYXZlIGh1bmRyZWRzIChpZiBub3QgdGhvdXNhbmRzKSBvZiBsaXZlcyBieSBraWxsaW5nIHRoZSBKb2tlciBhbmQgb3RoZXIgdmlsbGFpbnM/IEF0IHRoaXMgcG9pbnQgSSBjb252aW5jZWQgdGhpcyBpcyBvbmx5IGJlY2F1c2UgaXQgYSBzZXJpZXMgYW5kIG5lZWRzIGFub3RoZXIgc2VxdWVsLi4gCkkgaGF2ZSB0byB0YWtlIGEgbG9vayBhdCBtaW5lIHRvIHNlZSBpZiB0aGUgc2xpZGUgaXMgbWFya2VkIHdpdGggdGhlIGNhbGliZXIsIGFzIG9wcG9zZWQgdG8ganVzdCB0aGUgZW5kIG9mIHRoZSBiYXJyZWwuLiAKQydlc3QgbGUgcmxlIGRlIGxhIERpcmVjdGlvbiBkZSBsJ3VyYmFuaXNtZSAoZXQgbm91cyBzYXZvbnMgZCdleHByaWVuY2UgcXVlIGwnZWZmaWNhY2l0IG4nZXN0IHBhcyBhdSByZW5kZXogdm91cyAhKS4uIApJZiB5b3UgaGF2ZSBhIGNhcmVlciBmb3IgbW9uZXkgdGhlbiB5b3VyIGhlYWxpbmcgaG9iYnkgY2FuIGdyb3cgd2l0aG91dCBwcmVzc3VyZS4uIApJdCBnb2luZyB0byBkZXBlbmQgb24gdGhlIHByb2dyYW0uIEF0IHRoaXMgcG9pbnQgdGhlIHdvcnN0IHRoZXkgY2FuIGRvIGlzIGRlY2lkZSBub3QgdG8gcmFuayB5b3UuIFlvdSBjYW4ga25vdyB3aGljaCBvbmVzIHdvbiByYW5rIHlvdSBiYXNlZCBvbiBhIGZhaWxlZCBlbGVjdGl2ZSwgc28gaXQgc2hvdWxkIG5vdCBhZmZlY3QgdGhlIHdheSB5b3UgYnVpbGQgeW91ciBSYW5rIE9yZGVyIExpc3QuIApFdmVuIHdoZW4gaXQgaXMgcmV2ZWFsZWQgdGhhdCBKb3NoIGlzIG9ubHkgMTMsIHRoZSB3b21hbiB3aG8gaXMgc2xlcHQgd2l0aCBzZWVtcyB0byBoYXZlIG5vIHByb2JsZW0gd2l0aCBpdC4gCjIyIHdpdGggdGhlIGlubm9jZW50IGV5ZXMgb2YgYSAxNCB5ZWFyIG9sZC4gU3RpbGwgd2VhcmluZyBsaXR0bGUgZ2lybHMgY2xvdGhlcyBJIHNlZS4gTWFzc2l2ZSBzZWNyZXRhcnkgYnV0dCBob3dldmVyIHNvIHlvdSBoYXZlIGNsZWFybHkgcmVhY2hlZCB0aGUgaGVpZ2h0IG9mIHlvdXIgcHJvZmVzc2lvbmFsIGNhcmVlciBhbHJlYWR5LiBBbnN3ZXJpbmcgcGhvbmVzIGFuZCBtYWtpbmcgdGhlIGJvc3NlcyBjb2ZmZWUuIEFzIHlvdXIgeW91dGggZmFkZXMgdGhlIGZldyBndXlzIHRoYXQgc2hvdyBhbnkgaW50ZXJlc3QgaW4geW91IHdpbGwgc3RvcCBjb21wbGV0ZWx5LiBZb3Ugd2lsbCBlbmQgdXAgd2l0aCBhIHJlYWwgdWdseSBndXkgdGhhdCB3YXMgc2ltcGx5IGRlc3BlcmF0ZSBhbmQgd2lsbGluZyB0byBidXkgeW91IGRpbm5lciBhZnRlciB5ZWFycyBvZiBub3QgZGF0aW5nLiBZb3UnbGwgZG8gYW55dGhpbmcgaGUgYXNrcyBiZWNhdXNlIHlvdXIgc3BpbmVsZXNzIGFuZCBkZXNwZXJhdGUgZm9yIGFueSBhdHRlbnRpb24uIFlvdXIga2lkcyB3aWxsIGJlIHV0dGVybHkgYXZlcmFnZSBqdXN0IGxpa2UgeW91IGFzIHdlbGwuIERhbW4gSSdtIGdldHRpbmcgZGVwcmVzc2VkIGp1c3QgbG9va2luZyBhdCB5b3VyIHBpY3R1cmUgYW5kIHRhbGtpbmcgYWJvdXQgeW91LgpUaGF0IGlzIHByZXR0eSBnb2RkYW1uIHJ1ZGUuIEl0IHByb2JhYmx5IHdvdWxkIGhhdmUgYmVlbiB3YXkgbGVzcyB3ZWlyZCBpZiBzaGUgb2ZmZXJlZCBwYXksIGV2ZW4gaWYgc2hlIGhhZCBzdGlsbCBzYWlkIGl0IHdpdGggdGhhdCBlbnRpdGxlZCB0b25lLCBidXQgWkVSTyBvZmZlciBvZiBwYXk/IFkgaGF2ZSBrbm93biBlYWNoIG90aGVyIDYgbW9udGhzLiAKRmVlbCBmb3IgYWxsIGFzc2F1bHQgdmljdGltcyBidXQgYSBzeXN0ZW0gbGlrZSB0aGF0IGlzIGNsZWFybHkgZXhwbG9pdGFibGUgYnkgYW55b25lIHdobyB3YW50cyB0byBnZXQgYSBoYW5kIHVwIG92ZXIgY29tcGV0aXRpb24uIEFuZCB3aGlsZSBpdHMgYWxsIGdvb2QgdG8gaGF2ZSB0aGVtIHRhdWdodCBhYm91dCBkYW5nZXJzLCBzdHJlZXRzLCBldGMgc29tZSB0aW1lcyB0aGV5IGFyZSBqdXN0IHN0dXBpZCBhdCB0aGF0IGFnZSB0aGV5IGZvcmdldCwgdGhleSBhcmUgbG9va2luZyBmb3Igc29tZXRoaW5nIGFuZCBkb24gcmVhbGl6ZSB0aGV5IGFyZSB3YWxraW5nIG9udG8gYSBzdHJlZXQuIApUaGlzIGlzbiB0byBzYXkgYSBkZWFkbGlmdCBiYXIgaXMgdXNlbGVzcy9zaG91bGQgYmUgYmFubmVkLCBvciBhbnkgb2YgdGhhdCBjcmFwLCBJIGp1c3QgdGhpbmsgdGhhdCB1bmxlc3MgeW91IHB1bGxpbmcgYSBzaGl0bG9hZCBvZiB3ZWlnaHQgKERMIGJhciBiZWNvbWVzIG1vcmUgYW5kIG1vcmUgbm90aWNlYWJseSBiZW5keSBhcyB0aGUgd2VpZ2h0IGdvZXMgdXApIGFuZCBwbGFubmluZyB0byBjb21wZXRlIHVzaW5nIGEgREwgYmFyLCB0aGUgbW9uZXkgd291bGQgYmUgYmV0dGVyIHNwZW50IG9uIGEgZGlmZmVyZW50IGJhci4KQWx0aG91Z2ggaXQgbWF5IHNlZW0gYSBsaXR0bGUgZXhjZXNzaXZlLCB0aGVyZSBhcmUgYSBjb3VwbGUgb2YgcmVhc29ucyB3aHkgeW91IG1pZ2h0IGJlbmVmaXQgZnJvbSB1c2luZyBzZXBhcmF0ZSBjcmVhbXMgZm9yIHlvdXIgaGFuZHMgYW5kIGN1dGljbGVzLiBXZSBtYXkgbm90IGFsd2F5cyByZWNvZ25pemUgdGhlaXIgaW1wb3J0YW5jZSwgYnV0IGN1dGljbGVzIGFyZSB1bmlxdWUgYW5kIHNlcnZlIGEgc3BlY2lmaWMgZnVuY3Rpb246IFRoZXkgaGVscCB0byBwcm90ZWN0IGFuZCBub3VyaXNoIG91ciBuYWlscyBhcyB0aGV5IGdyb3cuIFdoZW4geW91ciBjdXRpY2xlcyBkcnkgb3V0LCB0aGV5IGxvc2UgdGhlIG5hdHVyYWwgZmF0cyB0aGF0IHVzdWFsbHkga2VlcCB0aGVtIHNvZnQuIApObyBicm9uemUgb3IgaXJvbiBwbGF5ZXIgaXMgZ29pbmcgdG8gZG8gdGhpcy4gVGhleSBhcmUgaW4gYnJvbnplIGFuZCBpcm9uIGJlY2F1c2UgdGhleSBjYW4ndC4gSnVzdCBsaWtlICJkcml2ZSBiZXR0ZXIiIGlzbid0IGdvb2QgYWR2aWNlIHRvIGEgbmV3IGRyaXZlciBuZWl0aGVyIGlzIHRoaXMuLiAKVGhlcmUgYXJlIG51bWVyb3VzIG1vcmUgdmFyaWFudHMgb2YgZWFjaCBvZiB0aGUgdHJhZGl0aW9uYWwgYXMgd2VsbCBhcyBtb2Rlcm4gcG9rZXIgdHlwZXMuIApEZXBlbmRpbmcgb24gd2hhdCB5b3UncmUgb3Bwb25lbnQgaXMgaG9sZGluZywgYW5kIHdoYXQgdGhleSBoYXZlIGhhcyBhbHJlYWR5IGhpdCwgeW91ciBvZGRzIHdpbGwgY2hhbmdlLiBJbiB0aGUgYWJvdmUgZXhhbXBsZSBpZiB5b3UncmUgb3Bwb25lbnQgaXMgaG9sZGluZyBwb2NrZXQgQUEsIGFuZCBoYXMgYSBtYWRlIHNldCwgeW91IHN0aWxsIGhhdmUgYSAyNyUgY2hhbmNlIHRvIHdpbiBpZiB5b3UgZ28gdG8gdGhlIHJpdmVyLiBUaGlzIGlzIHdoeSBvcGVuIGVuZGVkIHN0cmFpZ2h0IGFuZCBmbHVzaCBkcmF3cyBhcmUgc28gcG93ZXJmdWwsIGFuZCBuZWVkIHRvIGJlIHBsYXllZCB2ZXJ5IGFnZ3Jlc3NpdmVseS4gCiJzcG9ydHMiIHdlcmUgaW52ZW50ZWQgIGFzIHBhcnQgb2Ygc2Nob29scyBhcyB3ZWxsIGFzIGNvbW11bml0aWVzICB0byB0dXJuIGJveXMgaW50byBtZW4uLiAKUHJvZmVzc2lvbmFsczogcGxlYXNlIGFuc3dlciB0aGUgcHJvZmlsZSBxdWVzdGlvbnMgc28gcHJvZmlsZXMgY2FuIGJlIHNlYXJjaGVkIGJ5IGxvY2F0aW9uIGFuZCBib2R5d29yayB0eXBlLiAKSSBhIG1vZCBvZiAvci9yYWlzZWRieW5hcmNpc3Npc3RzIGFuZCBJIHdhbnRlZCB0byBsZXQgeW91IGtub3cgdGhhdCBmb3Igc29tZSByZWFzb24sIHlvdXIgYWNjb3VudCBpcyBzaGFkb3diYW5uZWQuIAovci9HdW5EZWFscyBpcyBhIGNvbW11bml0eSBkZWRpY2F0ZWQgdG8gdGhlIGNvbGxlY3Rpb24sIGFuZCBzaGFyaW5nLCBvZiBmaXJlYXJtIHJlbGF0ZWQgc2FsZXMuIEluIHRoaXMgc3VicmVkZGl0IHlvdSBmaW5kIHZhcnlpbmcgZGlzY291bnRzIG9uIHlvdXIgZmF2b3JpdGUgKGFuZCBzb29uIHRvIGJlIGZhdm9yaXRlKSBmaXJlYXJtcywgYWNjZXNzb3JpZXMsIGFuZCByZWxhdGVkIGVxdWlwbWVudC4gCkZ0LiBTaW5nbGUgZmFtaWx5IGhvbWUuIApUaGUgb25seSB3YXksIGFwYXJ0IGZyb20gdHVybmluZyBvZmYgaGFsZiB0aGUgZW50aXJlIGVsZWN0cmljYWwgc3lzdGVtLCB3b3VsZCBiZSB0byBnbyBpbnRvIHRoZSBFL0UgYmF5IGFuZCBwdWxsIHRocmVlIHBhcnRpY3VsYXIgY2lyY3VpdCBicmVha2Vycy4gSXQgaXMgYSBtYW5ldXZlciB0aGF0IG9ubHkgYSBzb3BoaXN0aWNhdGVkIG9wZXJhdG9yIHdvdWxkIGtub3cgaG93IHRvIGV4ZWN1dGUsIGFuZCB0aGUgb25seSByZWFzb24gSSBjb3VsZCB0aGluayBmb3Igd2FudGluZyB0byBkbyB0aGlzIHdhcyBzbyB0aGF0IElubWFyc2F0IHdvdWxkIGZpbmQgdGhlIHJlY29yZHMgYW5kIG1pc2ludGVycHJldCB0aGVtLiBUaGV5IHR1cm5lZCBvbiB0aGUgc2F0Y29tIGluIG9yZGVyIHRvIHByb3ZpZGUgYSBmYWxzZSB0cmFpbCBvZiBicmVhZCBjcnVtYnMgbGVhZGluZyBhd2F5IGZyb20gdGhlIHBsYW5lJ3MgdHJ1ZSByb3V0ZS4uIApJIHNob3ZlIGZvciBteSByZW1haW5pbmcgJDE5MCB3aXRoIG9ubHkgbXkgMiw0IHR3byBwYWlyLCBob3BpbmcgYWdhaW5zdCBob3BlIFZpbGxpYW4gZGlkbiBhbHNvIGhpdCAyIHBhaXIgd2l0aCB0aGUgSiBvbiB0aGUgcml2ZXIuIFZpbGxpYW4gdGFrZXMgYWJvdXQgNSBzZWNvbmRzLCB0aGVuIGtpbmQgb2YgZmxpcHMgaGlzIGhhbmQgb3ZlciBpbmZyb250IG9mIGhpbSB0b3dhcmQgdGhlIG1pZGRsZSBidXQgbm90ICByZWFsbHkgIGEgc3RyYWlnaHQgdXAgZm9sZC4gRGlkIG5vdCBoaXQgdGhlIG11Y2sgcGlsZSwgaGVhZHMgdXAgSSBhbGwgaW4sIEkgdGhpbmsgaGUgY2FuIHN0aWxsIGNhbGwgZXZlbiB0aG91Z2ggaGUgc2hvd2VkIHdoYXQgaGUgaGFkLiAKU28gSSBmaWd1cmVkLCBpZiBJIGNvdWxkIHJlY3JlYXRlIHRoaXMgYnV0IHdpdGggYSBzZWxmIHN1c3RhaW5lZCB3aW5nIGluIHRoZSBmb3J0LiBtYXliZSBJIGNvdWxkIGJlYXQgdGhlIGdhbWU/IEkgZGVjaWRlZCB0byBtYWtlIGFuIHVuZGVyZ3JvdW5kIG1vbmFzdGVyeSwgY2FsbGVkIHRoZW0gInNpc3RlcnMgb2YgZXZlIih3YXMgYWxzbyBwbGF5aW5nIGV2ZSkuIFNPLCBJIHRvb2sgbWFueSB3b21lbiwgbWFkZSB0aGVtIG51bnMgYW5kIGEgY291cGxlIG1lbiwgYWxsIHRoZSBjaGlsZHJlbiwgYXNzaWduZWQgdGhlbSB0byB0aGlzIGFyZWEgd2l0aCBhbGwgdGhlIHNldCB1cCByZXNvdXJjZXMuIFJlYWR5IHRvIHRlc3Qgb3V0IG15IHRoZW9yeS4gZ2FtZSBjb3JydXB0cy4gTGlrZSA2MCBob3VycyBvZiB3b3JrIGludG8gb25lIHNhdmUgYW5kIGl0IGdvbmUuClNtYWxsIGNsdWJzIGFyZSBpZGVudGlmaWVkIGFzIHRob3NlIG1vc3QgbGlrZWx5IHRvIHN0cnVnZ2xlLiBCdXQgTXIgQmFsbCBpcyBvcHRpbWlzdGljIHRoYXQgbWFueSBjbHVicyBhcmUgdGFraW5nIHRoZSByaWdodCBhcHByb2FjaCB0byBtYWtlIHN1cmUgdGhleSBzdXJ2aXZlLiAKVGhlIHR1bmdzdGVuIGZpbGFtZW50IGJ1bGIgbm90IG9ubHkgZW1pdHMgdGhlIGNvcnJlY3Qgd2F2ZWxlbmd0aHMgb2YgbGlnaHQgbmVjZXNzYXJ5IGZvciBsaWdodCB0aGVyYXB5LCB0aGV5IGVtaXQgZXhjbHVzaXZlbHkgbmVhciBpbmZyYXJlZCBsaWdodCBhbmQgcmVkIGxpZ2h0LiBUdW5nc3RlbiBkb2VzIG5vdCBlbWl0IGFueSBzaWduaWZpY2FudCBhbW91bnQgb2YgbWlkIGluZnJhcmVkIG9yIGZhciBpbmZyYXJlZCB3YXZlbGVuZ3RocyBvZiBsaWdodC4gClRoaXMgd2lsbCBoZWxwIGJ1aWxkIHlvdXIgY29uZmlkZW5jZSBhbmQgZ2V0IHlvdSBpbiB0aGUgcnl0aHltIG9mIHRoZSBnYW1lIGJlZm9yZSB5b3UgZW50ZXIgYSByZWFsIHBva2VyIHBsYXlpbmcgZW52aXJvbm1lbnQuLiAKRGllIEJhbmQgc3BpZWx0IGVpbmUgc2VociBpbnRlcmVzc2FudGUgTWlzY2h1bmcgdm9uIGtsYXNzaXNjaGVtIFJlZ2dhZSwgU2thIHVuZCBUZXh0ZW4gaW4gS2htZXIsIEZyYW56b2VzaXNjaCB1bmQgRW5nbGlzY2guIApSb3lhbCBjaGFyZ2VzOiBFbGl6YWJldGggYW5kIE1hcmdhcmV0IGluIDE5MzIgd2l0aCBNYXJpb24gQ3Jhd2ZvcmQKQ29tcGFyZSB0aGlzIHRvIG1vc3QgQW1lcmljYW4gaW1taWdyYW50cywgd2hvIGxvc2UgdGhlaXIgbmF0aXZlIGxhbmd1YWdlIGluIHR3byBvciB0aHJlZSBnZW5lcmF0aW9ucywgSSB0aGluayB0aGUgbG9zcyBvZiBDaGluZXNlIGxvY2FsIGRpYWxlY3QgaXMgdGhlIGxlYXN0IHRvIHdvcnJ5IGFib3V0LiAKWW8gSSBqdXN0IGRyb3BwZWQgd2VsbCByZWFzb25lZCBhbmQgd3JpdHRlbiAoZm9yIG1lKSwgbm9uIHNoaXRwb3N0IGNvbW1lbnRzIG9uIHdoYXQgbWlnaHQgaGF2ZSBiZWVuIHRoZSBzYW1lIG9pbmtkb2cgcG9zdCwgYW5kIGFsbCB0aHJlZSBkaXNhcHBlYXJlZC4gUG9zc2libGUgdGhhdCBpdCB3YXMgbG9ja2VkIGJlZm9yZSBJIGNsaW1heGVkIGFuZCBoaXQgdGhvc2UgcG9zdCBjb21tZW50IGJ1dHRvbnMgYW5kIG15IGFwcCBqdXN0IGhhZG4ndCByZWZyZXNoZWQuIE9uZSBvZiB0aG9zZSB3YXMgbmljZSBhbmQgbG9uZyBhbmQgaGFkIHNvbWUgdGhvdWdodCBwdXQgaW50byBpdC4gRmVsdCBnb29kLiBOb3cgaXQgZ29uZSwgc2tpbiBkdXN0IGludG8gdGhlIGhlbGxtb3NwaGVyZS4KS2FybWVsIHByb2plY3RzIHRoYXQgY291bGQgY2F1c2UgdXAgdG8gYSAxMCBwZXJjZW50IHJlZHVjdGlvbiBpbiBhbnRpY2lwYXRlZCByZXZlbnVlcywgd2hpY2ggaW5pdGlhbGx5IHdlcmUgZXN0aW1hdGVkIGF0ICQ2MDAgbWlsbGlvbiBhbm51YWxseS4gQnV0IHRoYXQgZmlndXJlIGNvdWxkIGJlIHJldmlzZWQgZG93bndhcmQsIGF0IGxlYXN0IGluaXRpYWxseSwgZHVlIHRvIHRoZSB3ZWFrIGVjb25vbXkgYW5kIHRlcGlkIGludGVyZXN0IHRvIG9wZXJhdGUgdGhlIGZpdmUgdmVudWVzIHByb3Bvc2VkIGZvciBBbm5lIEFydW5kZWwsIEFsbGVnYW55LCBDZWNpbCBhbmQgV29yY2VzdGVyIGNvdW50aWVzIGFuZCBCYWx0aW1vcmUgY2l0eS4uIApXZSByb3VuZGVkIHVwIHRoZSBsYXRlc3QgcmVudGFsIGxpc3RpbmdzIHZpYSByZW50YWwgc2l0ZSBadW1wZXIgdG8gZ2V0IGEgc2Vuc2Ugb2Ygd2hhdCB0byBleHBlY3Qgd2hlbiBpdCBjb21lcyB0byBodW50aW5nIGRvd24gYW4gYXBhcnRtZW50IGluIE1pYW1pIGlmIHlvdSBnb3QgJDIsNzAwL21vbnRoIGVhcm1hcmtlZCBmb3IgeW91ciByZW50LgpCdXQgVVMgaGVhbHRoY2FyZSwgYXMgd2UgYWxsIGtub3csIGlzIG1vcmUgb3IgbGVzcyB1bnJlZ3VsYXRlZC4gCk9uIHRoZSBub3RlIG9mIHRoZSBjb21tdXRlLCBWaWN0b3JpYSBoYXMgYSB1bmlxdWUgb3BpbmlvbiBvbiB3aGF0IGEgdmVyeSBsb25nIGRyaXZlIHRvIHRoZSBvZmZpY2UgaXMuIEZvciBleGFtcGxlIEkgdXNlZCB0byBoYXZlIHRvIGRyaXZlIDI1IG1pbnV0ZXMgZWFjaCB3YXkgdG8gd29yayBhbmQgSSBnb3QgYSBsb3Qgb2Ygc3ltcGF0aHkgZm9yIG15IHVucmVhc29uYWJsZSBjb21tdXRlLiBUaGUgNDAgaXNoIG1pbnV0ZXMgaXQgdGFrZXMgdG8gZ2V0IGZyb20gTGFuZ2ZvcmQgdG8gZG93bnRvd24gZG9lcyBzZWVtIHN1cGVyIGZhciB0byBwZW9wbGUgdGhhdCBhcmUgdXNlZCB0byAzIDUgbWludXRlIHdhbGtzIGZvciBtb3N0IG9mIHRoZSB0aGluZ3MgdGhleSBuZWVkLiAKVG9kYXksIHRoZSBwZW9wbGUgaW4gcG93ZXIgYXJlIHRoZXJlIGJlY2F1c2Ugb2YgQW5uYSdzIGFnaXRhdGlvbiBpbiAyMDEzLiAKTm93IGxldCBzYXkgdGhleSBoYXZlIGRlZHVjdGlvbnMgd29ydGggNTAlIG9mIHRoYXQgc28gdGhleSBnZXQgJDI4NjcuNSBiYWNrIGF0IHRoZSBlbmQgb2YgdGhlIHllYXIuIApFcmRpbmdzIFdlYnNlaXRlCkJlYXJkbzEwMTAgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KS2VuIGlzIGdvaW5nIHVwIHRoZXJlIGFzIGEgY29tZWRpYW4uIFBlb3BsZSBrbm93IGhlIG1ha2luZyBqb2tlcy4gSGUgbm90IGRvaW5nIHRoaXMgaW4gYSBjcmltZSBteXN0ZXJ5IHRocmlsbGVyIG1vdmllLgpNcyBXaWxsaWFtcyBpcyBob3BpbmcgdG8gY3JlYXRlIGEgZnJpZW5kbHkgYW5kIHdlbGNvbWluZyBhdG1vc3BoZXJlIGZvciB0aGUgSGF2YW5uYWggU3QgdmVudWUuICJXZSBkb24ndCB3YW50IHRvIHNlZSBhbm90aGVyIHB1YiBpbiB0b3duIGRpZSwgc28gd2UncmUga2VlcGluZyB0aGUgUmFpbHdheSBIb3RlbCdzIGRyZWFtIGFsaXZlLCIgc2hlIHNhaWQuIApJdCBzZWVtcyB0byBiZSBhIGhhbmdvdmVyIGZyb20gdGhhdCBidXQgSSBqdXN0IGRvbiBzZWUgaG93IGdldHRpbmcgInRoaW5uZXIiIGhlbHBzIGFueW9uZSBhbnltb3JlIGJlY2F1c2Ugd2Ugbm93IGxpbWl0ZWQgYnkgdGhlIHdpZHRoIG9mIHRoZSBwaG9uZSBWcyBoYW5kIHNpemUgcmF0aGVyIHRoYW4gdGhlIHRoaWNrbmVzcyBvZiBwaG9uZXMgVnMgaGFuZCBzaXplLgpUaGUgZ2FtZSBvZiBwb2tlciBpcyBtdWx0aWRpbWVuc2lvbmFsLiBJdCByZWxpZXMgb24geW91ciBtYXRoZW1hdGljYWwgYW5kIHN0YXRpc3RpY2FsIHByb3dlc3MsIHlvdXIgc2hyZXdkbmVzcyBhbmQgY3VubmluZywgYmVoYXZpb3VyYWwgcHN5Y2hvbG9neSwgYW5kIHlvdXIgZW1vdGlvbmFsIGJhbGFuY2UuIEl0J3MgdG91Z2ggbWFzdGVyaW5nIGFsbCB0aGVzZSBkaXNjaXBsaW5lcyBpbiBvbmUgZ2FtZS4gTWFueSBwbGF5ZXJzIGFyZSBncmVhdCBhdCBidWxseWluZyBvdGhlciBwbGF5ZXJzIGludG8gc3VibWlzc2lvbiwgYnV0IHRoZXkgb2Z0ZW4gZmFsbCBzaG9ydCB3aGVuIHRoZXkgcmVhZCB0aGUgZ2FtZSB3cm9uZy4gSW50aW1pZGF0aW9uIGNhbiBvbmx5IGdvIHNvIGZhciBpbiBhIHBva2VyIGdhbWUuCkFzIHlvdSBjYW4gc2VlIHRoZXJlIGlzIGEgZ3JlYXQgZGVhbCBvZiBpbmZvcm1hdGlvbiBjb2xsZWN0ZWQuIEFsbCB0aGlzIGluZm9ybWF0aW9uIGFsbG93cyBmb3IgdmVyeSBzb3BoaXN0aWNhdGVkIFByb2ZpbGVzIHRvIGJlIGNyZWF0ZWQuIE9uZSBwYXJ0aWN1bGFyIE1UVCBwcm9maWxlIGhhcyA1IGRpZmZlcmVudCBzdGFnZXMsIG1lYW5pbmcgdGhhdCBpdCBzd2l0Y2hlcyBiZXR3ZWVuIGRpZmZlcmVudCBzZWN0aW9ucyBvZiBjb2RlIGRlcGVuZGluZyBvbiB0aGUgc2l6ZSBvciB5b3VyIHN0YWNrLiAKSSBhbSBub3QgYSBtZWRpY2FsIHByb2Zlc3Npb25hbCwgYnV0IG15IGZhdGhlciBpbiBsYXcgaGFkIHNldmVyZSBza2luIGNhbmNlci4gSGUgYmFzaWNhbGx5IGhhZCBhbiBvcGVuIHNvcmUgb24gaGlzIGJhY2sgZm9yIHNldmVyYWwgeWVhcnMgdGhhdCBibGVkIGFuZCBibGVkLCB3ZSBuZXZlciBrbmV3IGFib3V0IGl0IHVudGlsIG9uZSBkYXkgd2Ugc2F3IGEgcGFuY2FrZSBzaXplZCBjcmF0ZXIgdGhyb3VnaCBoaXMgc2hpcnQuIFdlbnQgdG8gdGhlIGhvc3BpdGFsIGZpbmFsbHkgYW5kIHRoZXkgYmFzaWNhbGx5IHNhaWQgaGUgaGFzIGNhbmNlciB0aHJvdWdob3V0IGhpcyB3aG9sZSBib2R5IGF0IHRoaXMgcG9pbnQuLiAKVGhpcyB5b3VuZyBsYWR5IHdhcyBzZXQgdG8gcnVuIGZvciBDaXR5IENvdW5jaWwuIFNoZSB3YXMgZWR1Y2F0ZWQsIGluIHRoZSByaWdodCBjaXJjbGVzIGFuZCB0byB0b3AgaXQgb2ZmLCBzaGUgd2FzIGVhc3kgb24gdGhlIGV5ZXMuV2VsbCByaWdodCB3aGVuIHNoZSB3YXMgYWJvdXQgdG8gZ2V0IG9mZiB0aGUgYmxvY2tzLCBSb25pIHRoZSAiaW50ZWdyaXR5IiBjYW5kaWRhdGUgdGhyZWF0ZW5lZCB0byBleHBvc2UgaGVyIGV4IGxvdmVyIGluIHdheXMgdGhhdCBNYXggd291bGQgbG92ZSBidXQgdGhhdCB3b3VsZCBoYXZlIGRhbWFnZWQgaGVyIHBlcnNvbmFsbHkuQnV0IG9mIGNvdXJzZSwgZm9yIElvd2EgdG8gaGFwcGVuIEJldG8gd291bGQgbmVlZCB0byBsb3NlIGhpcyBzZW5hdGUgcmFjZSwgd2hpY2ggbWF5IGV4cGxhaW4gd2h5IGhlIGlzIHByb2JhYmx5IGluIG5vIHJ1c2ggdG8gc3BlbmQgbW9uZXkgZGVzcGl0ZSBoYXZpbmcgYSBsb3QgaXQuV2l0aG91dCBhIGRvdWJ0LCB5b3VyIGV4IENvbmdyZXNzbWFuIGlzIHdpbm5pbmcgdGhlIGFpciB3YXIgaW4gaGlzIHJhY2UgZm9yIFNlbmF0ZS4gCkkgd291bGQgYWRkIGEgY291bnRlciwgYXNzb2NpYXRlZCB0byBlYWNoIGxpbmUgd2l0aCB0aGUgcHJvYmFiaWxpdHkgb2Ygb2NjdXJyZW5jZS4gCldlIGFycml2ZWQgYXQgV2V0aGVyc3Bvb25zIGluIERvcmNoZXN0ZXIgYXJvdW5kIDZpc2ggZm9yIGEgbXVjaCBuZWVkZWQgcGl0IHN0b3AuIFJvYiAnVGVhbSBCb25kZXInIFRvbmtzIHdhcyBnaXZlbiB0aGUgdGFzayBvZiBmaW5kaW5nIGEgdGFibGUgZm9yIHVzIHRvIG9yZGVyIG91ciBmb29kIHdoaWxlIHRoZSBtYWpvcml0eSBvZiB1cyBkb25uZWQgb3h5Z2VuIG1hc2tzIGFuZCBjcmFtcG9ucyB0byBzY2FsZSB0aGUgZGl6enkgaGVpZ2h0cyBvZiB0aGUgc3RhaXJjYXNlIHRvIGZpbmQgdGhlIHRvaWxldHMuIApSZWFsaXppbmcgdGhhdCBuZWl0aGVyIG9mIHVzIGhhcyBhbnkgY2hhbmNlIG9mIGltcHJlc3NpbmcgaGVyLCB3ZSB0ZWxsIGhlciwgeWVzLCB3ZSBhcmUgZG9pbmcgb3VyIGhvbWV3b3JrLi4gCkkgd2VudCB0byB0aGUgQ0VPLCBiZWNhdXNlIGhlIHNob3VsZCBjYXJlIGp1c3QgYXMgbXVjaCBhcyBJIGRvLCBhbmQgcHJvYmFibHkgbW9yZSwgYWJvdXQgYmVpbmcgYWJsZSB0byB0YWtlIGFkdmFudGFnZSBvZiB0aGUgbWVnYSBiYWNrZG9vciBSb3RoLiBBZnRlciBnZXR0aW5nIGRpcmVjdGx5IGludm9sdmVkIHdpdGggdGhlIFRQQSAodGhpcmQgcGFydHkgYWRtaW5pc3RyYXRvcikgb2Ygb3VyIDQwMWsgcGxhbiwgSSBxdWlja2x5IGZpZ3VyZWQgb3V0IHRoYXQgbmVpdGhlciBIUiwgbm9yIHRoZSBUUEEsIHJlYWxseSBoYWQgYW55IGlkZWEgd2hhdCBJIHdhcyB0YWxraW5nIGFib3V0IGFuZCB3YXMganVzdCBmZWVkaW5nIG1lIGdhcmJhZ2UgdG8gZ2V0IG1lIHRvIGxlYXZlIHRoZW0gYWxvbmUuLiAKSWYgd2UgYWxsIGxpdmVkIGluIHZpbGxhcywgaWYgSSBoYWQga2lkcyBJIHdvdWxkbid0IGV4cGVjdCB0aGVtIHRvIHNlZSAyNSBiZWZvcmUgd2UgY29tcGxldGVseSBpcnJldmVyc2libHkgZnVja2VkIHRoZSBlYXJ0aC4gCkxlc3NvbiBsZWFybmVkLiAKQ3JvdGVhdSBpbmRpcXVlIHF1ZSBsZXMgbW95ZW5zIGRlIGwgc29udCBsaW1pdHMgcG91ciBzdmlyIGNvbnRyZSB1biBzYWxvbiBkZSBtYXNzYWdlLiAKRWRpdDogdGhpcyBpcyBub3Qgd29ya2luZyBmb3Igc29tZSBwZW9wbGUuIEkgcmVhZCBpbiBhbm90aGVyIGd1eXMgY29tbWVudHMgdGhhdCB0aGUgcHJvYmxlbSB3YXMgZHVlIHRvIG9uZSBvZiBoaXMgbGF1bmNoIG9wdGlvbnMgYW5kIEkgc3RhcnRlZCBoYXZpbmcgdGhlICJuZXcgdXBkYXRlIiBwcm9ibGVtIHllc3RlcmRheSwgdGhlIHNhbWUgZGF5IEkgYWRkZWQgc29tZSBsYXVuY2ggb3B0aW9ucywgc28gdGhhdCBtaWdodCBiZSB0aGUgcHJvYmxlbS4gSSBkZWxldGVkIGFsbCBteSBsYXVuY2ggb3B0aW9ucyBlYXJsaWVyLgpBbmQgdGhlIHNob3J0IHRlcm0gbGFjayBvZiBzdWNoIGhhbmRzIGFsdGVycyB0aGUgcmV0dXJuIHlvdSBjYW4gZXhwZWN0IHdoZW4geW91IHBsYXksIHNheSwgMTAwMCBoYW5kcyBvZiB2aWRlbyBwb2tlciwgd2hpY2ggaXMgdHdvIG9yIHRocmVlIGhvdXJzIG9mIGdhbWluZy4gSSBkb24ndCB3YW50IHRvIGdldCB0b28gaW52b2x2ZWQgd2l0aCBtYXRoZW1hdGljcyBoZXJlLCBidXQgdGhlIFJveWFsIEZsdXNoIGFuZCBTdHJhaWdodCBGbHVzaCBhZGQgYSB0b3RhbCBvZiAyLjUzJSB0byB0aGUgOTkuNTQlIHJldHVybiBvZiB0aGUgZnVsbCBwYXkgSmFja3Mgb3IgQmV0dGVyIHZpZGVvIHBva2VyIGdhbWUgdGhhdCBJIG1lbnRpb25lZCBlYXJsaWVyLiAKVGhhdCByZWFsbHkgZXhjaXRpbmcgbmV3cyEgV2hlbiBJIGhlYXJkIGFib3V0IHRoaXMgZmlsbSBJIHdhcyB3b3JyaWVkIEkgd291bGRuIGdldCB0byBzZWUgaXQgYXQgYWxsIGJlY2F1c2UgbGl2aW5nIG9uIGFuIGlzbGFuZCBpbiBOb3J0aCBBdGxhbnRpYyBDYW5hZGEgLiAuIC4gd2VsbCAuIC4gLiB3ZSBhcmVuIGV4YWN0bHkgdGhlIGZpcnN0IHBsYWNlIGNvbnNpZGVyZWQgd2hlbiBpdCBjb21lcyB0byBhY2Nlc3MgdG8gdGhpbmdzLgpDaG9vc2UgZnJvbSBkYXJrIG9yIG1pbGsgZHJpbmtpbmcgY2hvY29sYXRlLCBwbHVzIG5hYiBmcmVlIG11ZmZpbnMgZnJvbSBPQUsgTG9uZyBCYXIgKyBLaXRjaGVuJ3MgcGFzdHJ5IGNoZWYgb24geW91ciB3YXkgdG8gd29yay4gClNpcmkgcHJvZHVjdGlvbiBpcyBob2JibGVkIGJ5IG1pc21hbmFnZW1lbnQuIFRyeWluZyB0byBwZXJmb3JtIGFzIHdlbGwgYXMgR29vZ2xlIEFzc2lzdGFudCBvciBBbGV4YSB3aXRoIGxlc3MgZGF0YSBhbmQgb2JmdXNjYXRlZCBkYXRhIGlzIGhhcmQuIFB1bGxpbmcgaXQgb2ZmIHdpbGwgcmVxdWlyZSB0aGUgYmVzdCBlbmdpbmVlcnMuIApEZWdlbmVyYXRpdmUgY2hhbmdlcyB3ZXJlIHByb21pbmVudCBpbiB2ZXRlcmFuIHBsYXllcnMsIGFuZCB0aGUgc2FnaXR0YWwgZGlhbWV0ZXIgb2YgdGhlaXIgc3BpbmFsIGNhbmFsIGF0IEMyIHRvIEM2IHdhcyBsb3dlciB3aGVuIGNvbXBhcmVkIHRvIGFjdGl2ZSBwbGF5ZXJzIGFuZCBjb250cm9scy4KQSBUZXhhcyB3b21hbiBpbiBoZXIgNjBzIHJlY2VudGx5IHJlY2VpdmVkIGEgYm94IG9mIGNob2NvbGF0ZXMgYW5kIGEgdGhhbmsgeW91IG5vdGUuIFNoZSBvcGVuZWQgdGhlIGJveCwgaXQgZXhwbG9kZWQgd2l0aCBhIHNwcmF5IG9mIG5haWxzIGFuZCB0YWNrcyBhbmQgdGhlIHdvbWFuIHdhcyBmb3JjZWQgdG8gdW5kZXJnbyBlbWVyZ2VuY3kgc3VyZ2VyeS4gClR1cm5zIG91dCB0aGF0IGFmdGVyIEkgd2VudCB0byBiZWQgYXJvdW5kIDEwcG0sIGhlIHdlbnQgdG8gcG9rZXIhIEkgd29rZSB1cCBhdCAzMzAgYmVjYXVzZSBMTyAobGl0dGxlIG9uZSkgd2FzIGNyeWluZyBhbmQgdGhhdCdzIHdoZW4gSSBmb3VuZCBoZSB3YXMgZ29uZS4gClRoZSBjYXNlIGFnYWluc3QgZ2x1dGVuIHNlZW1zIHRvIGhhdmUgYmVlbiBjbG9zZWQgd2l0aCByZWNlbnQgcmVzZWFyY2ggZnJvbSBhIEJyYXppbGlhbiByZXNlYXJjaCB0ZWFtIHRoYXQgcHVibGlzaGVkIGEgcmVwb3J0IGluIHRoZSBKYW51YXJ5IDIwMTMgSm91cm5hbCBvZiBOdXRyaXRpb25hbCBCaW9jaGVtaXN0cnkuCllvdSBjYW4gY29hY2ggaGltIGFsb25nLiAKWW91ciBwb3N0IGlzIGFwcHJvdmVkLiBIYXZpbmcgc2FpZCB0aGF0LCB0aGVyZSBhIGxvdCBpbiB5b3VyIGFjY291bnQgYWJvdXQgeW91ciBTTyB0aGF0IGlzIHdvcnJpc29tZS4gSSB3b3VsZCBsaWtlIHRvIGludml0ZSB5b3UgdG8gbWFrZSBhIHBvc3Qgb3ZlciBhdCByL0p1c3ROb1NPIGFzIHdlbGwsIHNpbXBseSBjdXQgYW5kIHBhc3RpbmcgeW91ciBPUCBvdmVyIHRoZXJlIGFzIGEgbmV3IHBvc3Qgd291bGQgYmUgZmluZS4gVGhlcmUgYXJlIGxpbWl0cyB0byB3aGF0IHRoZSBydWxlcyBhbGxvdyBwZW9wbGUgdG8gc2F5IHRvIHlvdSBhYm91dCB5b3VyIFNPIGhlcmUuIElmIHlvdSB3YW50IG1vcmUgZXhwYW5kZWQgZGlzY3Vzc2lvbiBvZiBoaXMgcm9sZSBpbiBhbGwgdGhpcywgcG9zdCBvdmVyIGluIEp1c3ROb1NPIGFzIHdlbGwuCkZhdGFsaXM4OSAgMTAwIHBvaW50cyAgc3VibWl0dGVkIDUgZGF5cyBhZ28KRm9yIGRlYWxlcnMgd2hvIGhhdmUgZG9uZSBpdCBsb25nIGVub3VnaCwgaXQncyBhIHNhZmUgYmV0IHRoYXQgdGhleSBoYXZlIG9uZSBvciB0d28gc3RvcmllcyB0aGF0IGNvbWUgZnJvbSB0aGVpciBsaW5lIG9mIHdvcmsuClNvIHlvdSdyZSBhIHJlYWwgYXNzIHNjaWVudGlzdCBhbmQgSSdtIGp1c3QgYSBndXkgc3R1ZHlpbmcgdG8gYmUgb25lLiAKT1RUQVdBIFN0YXRpc3RpY3MgQ2FuYWRhIHNheXMgdGhlIGNvdW50cnkgbWVyY2hhbmRpc2UgdHJhZGUgZGVmaWNpdCBncmV3IHRvIGEgcmVjb3JkICQ0LjYgYmlsbGlvbiBpbiBEZWNlbWJlciBhcyBsb3dlciBjcnVkZSBvaWwgcHJpY2VzIHByb21wdGVkIGEgZHJvcCBpbiBleHBvcnRzLgpEZXNoYWxiIGlzdCBlcyBtZWluZSBQZmxpY2h0IGFscyBCdXJnZXIgdW5kIHZvciBhbGxlbSBQcm9maXNwb3J0bGVyLCBkaWVzZXMgRXZlbnQgd2llZGVyIHp1bSBMZWJlbiB6dSBlcndlY2tlbiB1bmQgZGFiZWkgenUgc2VpbiwgdW0gZGVyIFdlbHQgenUgemVpZ2VuLCBkYXNzIGRlciBGbHVtbWkgU3BvcnQgYW0gQW5mYW5nIGVpbmVyIGJ1bnRlbiB1bmQgc3BydW5naGFmdGVuIFp1a3VuZnQgc3RlaHQhIEkgbG92ZSBGbHVtbWkhIi4gCk1pZ3JhaW5lICAgTWlncmFpbmUgaGVhZGFjaGVzIGNhbiBiZSBjYXVzZWQgYnkgcmVkdWNlZCBibG9vZCBmbG93IHRvIHZhcmlvdXMgYXJlYXMgb2YgdGhlIGNlcmVicmFsIGNvcnRleC4gU3ltcHRvbXMgb2YgbWlncmFpbmVzIGluY2x1ZGUgc2Vuc2l0aXZpdHkgdG8gbGlnaHQgYW5kIG5vaXNlLCBuYXVzZWEsIHZvbWl0aW5nIGFuZCBpbnRlbnNlIHRocm9iYmluZyBwYWluIHRoYXQgaXMgdXN1YWxseSBvbiBvbmUgc2lkZSBvZiB0aGUgaGVhZC4gQSBuZXVyb3RyYW5zbWl0dGVyLCBzZXJvdG9uaW4gLCBpcyB0aG91Z2h0IHRvIGJlIGludm9sdmVkIGluIG1pZ3JhaW5lcyBiZWNhdXNlIG1hbnkgb2YgdGhlIGRydWdzIHVzZWQgdG8gdHJlYXQgbWlncmFpbmVzIGFsdGVyIHRoZSBiaW5kaW5nIG9mIHNlcm90b25pbiB0byB2YXJpb3VzIHJlY2VwdG9ycy4gCkZpbmFsbHkgTWljaGFlbCB3YWxrcyB1cCB0byBtZSBhbmQgc2F5cywgeW91LiBXaGF0IGdvaW5nIG9uPyBjYW4gdGVsbCB5b3UgcmlnaHQgbm93LCBidXQgd2lsbCB5b3UgY2FsbCB0aGUgb3RoZXJzLiBJIHdhbnQgdG8gdGVsbCB5b3UgYWxsIGF0IHRoZSBzYW1lIHRpbWUuIApNZWRpYSBwZXJzb24gYW5kIG1lZGlhIGNvbnRlbnQgb2YgdGhlIHllYXIgYXJlIG9mIHBhcnRpY3VsYXIgaW50ZXJlc3QgdG8gdGhvc2Ugb2YgdXMgaW4gdGhlIG1lZGlhLCBvZiBjb3Vyc2UsIGJ1dCB0aGUgcG9rZXIgaW5ub3ZhdGlvbiBhbmQgY2hhcml0YWJsZSBpbml0aWF0aXZlIGNhdGVnb3JpZXMgYWxzbyBoaWdobGlnaHQgdGhlIGJlc3Qgb2Ygb3VyIGluZHVzdHJ5LiBJdCBpcyBpbnNwaXJpbmcgdG8gaG9ub3IgdGhlIHdpbm5lcnMgYW5kIGNlbGVicmF0ZSB0aGUgZ2FtZSBhdCB0aGUgc2FtZSB0aW1lLgpUaGVyZSB3aWxsIGJlIG5ldyBtdXNpY2FsIGZpcmV3b3JrcyB0byBraWNrIG9mZiB0aGUgMzV0aCBhbm51YWwgZmVzdGl2YWwgdGhhdCBoYXMgdGhlIGxvbmdlc3Qgc2thdGluZyByaW5rLCB0aGUgZnJvemVuIFJpZGVhdSBDYW5hbCBhcyBpdHMgY2VudHJlIHBpZWNlLgpQb3VyIGNsdHVyZXIgbGEgcHJlbWlyZSBwYXJ0aWUgZGUgY2V0IGFydGljbGUsIHZvaWNpIHVuIGV4dHJhaXQgZCBsaXZyZSBxdWUgaiBiZWF1Y291cCwgUGxhaWRveWVyIHBvdXIgbCBkYW5zIGxlcXVlbCBGcmFuY2lzIEhhbGwgdm9xdWUgbGUgY2FzIGQgZGF0dGllciBiaWVuIHBhcnRpY3VsaWVyOiBDaGV6IGNlIGRhdHRpZXIsIGxvcnNxdSBwYWxtZSB2aWVpbGxpdCBvdSBzZSBkdGFjaGUsIG91IGxvcnNxdSBlc3QgbGFndWUgcGFyIGxlcyBlbXBsb3lzIG11bmljaXBhdXgsIGVsbGUgbGFpc3NlIHN1ciBsZSB0cm9uYyB1bmUgbGFyZ2UgYmFzZSBlbmdhaW5hbnRlIGVuIGZvcm1lIGRlIHZhc3F1ZSByZXRvdXJuZSB2ZXJzIGxlIGNpZWwsIGRhbnMgbGFxdWVsbGUgcyBkZXMgcGFydGljdWxlcyBkIGFwcG9ydGVzIHBhciBsZSB2ZW50LCBkZXMgZmV1aWxsZXMgbW9ydGVzIGV0LCBiaWVuIGVudGVuZHUsIGRlcyBncmFpbmVzIGRlIHBsYW50ZXMgZGl2ZXJzZXMuIElsIHNlIGNyZSBhaW5zaSwgZW4gaGF1dCBkdSB0cm9uYywganVzdGUgc291cyBsYSBjb3Vyb25uZSBkZXMgcGFsbWVzIHZpdmFudGVzLCB1biBlc3NhaW0gZGUgcGV0aXRzIGphcmRpbnMgc3VzcGVuZHVzLCBvbWJyYWdzLCBodW1pZGVzLCBkYW5zIGxlc3F1ZWxzIHBvdXNzZW50IGRlIG5vbWJyZXVzZXMgaGVyYmVzLCBtaXNyZXMsIHJpZ3JvbnMsIGJhbHNhbWluZXMsIHB0dW5pYXMsIG5vbWJyaWxzIGRlIFZudXMsIHZhbHJpYW5lcywgZXRjLiBEZSB0ZW1wcyAgYXV0cmUsIG9uIHkgb2JzZXJ2ZSB1biBwZXRpdCBhcmJyZSwgdW4gY3lwcnMsIHVuIGZpZ3VpZXIsIHVuIHBpdHRvc3BvcnVtIG91IGVuY29yZSB1biBwaW4gZCBkb250IGxlcyBncmFpbmVzIG9udCB0IGFwcG9ydGVzIHBhciBsZSB2ZW50IG91IGxlcyBvaXNlYXV4LiAKVGhlIGJlc3Qgd2F5IEkgY2FuIGRlc2NyaWJlIGthcm1hIGlzIHRoZSBzdW0gb2YgbXkgYWN0aW9ucyAoaW5jbHVkaW5nIG15IHdvcmRzIGFuZCB0aG91Z2h0cykgaW5mbHVlbmNlIG15IG93biBkZXZlbG9wbWVudCAoYW5kIHRoZXJlYnkgaW5mbHVlbmNlIHRoZSBjaXJjdW1zdGFuY2VzIG9mIHRob3NlIGFyb3VuZCBtZSkuIElmIG15IGludGVudGlvbiBhbmQgcHJhY3RpY2UgaXMgY29tcGFzc2lvbiwgSSBjYW4gY3JlYXRlIGEgbGlmZSB3aGVyZSBpdCBpcyBwcm9iYWJseSBlYXNpZXIgZm9yIG1lIHRvIGJlIGNvbXBhc3Npb25hdGUgYW5kIGpveWZ1bCwgYW5kIHByb2JhYmx5IGVhc2llciBmb3Igb3RoZXJzIGFyb3VuZCBtZSB0byBiZSBjb21wYXNzaW9uYXRlIGFuZCBqb3lmdWwuIApJIGhhdmUgaGFkIHRvIGNvbWUgdG8gd29yayB3aGlsZSBmZWVsaW5nIGRlcHJlc3NlZCwgd2hpbGUgZ29pbmcgdGhyb3VnaCBhIGhvcnJpYmxlIGRpdm9yY2UsIGV0Yy4gVGhlIGNvbXBhbnkgZG9lc24gY2FyZS4gVGhleSBwYXkgbWUgdG8gZG8gYSBqb2IsIGFuZCBJIGRvIGl0LgpJIGp1c3Qgd2VudCB0aHJvdWdoIHRoaXMgcmVjZW50bHkgd2l0aCBhIGZyaWVuZC4gQ2hhbmdlZCBvdmVyIDQwKyBkZXZpY2VzIHRvIGEgbmV3IHNzaWQvcHdkIGJlY2F1c2UgdGhlIG5laWdoYm9yIG1pc3VzZWQgdGhlIGNvbm5lY3Rpb24gYW5kIGtuZXcgaG93IHRvIGdldCBhcm91bmQgbWFjIGFkZHJlc3MgZmlsdGVycy4gSXQgdG9vayBob3VycyBhbmQgd2FzIGEgbWFqb3IgcGFpbiBpbiB0aGUgYnV0dC4KUG9rZXIgdG91cm5hbWVudHMgYXJlIHZlcnkgbHVjcmF0aXZlLCBidXQgdGhhdCdzIG5vdCB0aGUgb25seSByZWFzb24gd2h5IHJlZ3VsYXIgcGxheWVycyBzaG91bGQgam9pbiB0aGVtLiBEdXJpbmcgcmluZyBnYW1lcywgeW91IGFuZCB5b3VyIHRhYmxlIG1hdGVzIGNhbiBqb2luIGEgdGFibGUgb3IgbGVhdmUgaXQgd2hlbmV2ZXIgeW91IGZlZWwgbGlrZS4gWW91IGRvbid0IGFsd2F5cyBoYXZlIGEgY2hhbmNlIHRvIHJlYWxseSBnZXQgdG8ga25vdyB0aGUgb3RoZXIgcGxheWVycycgc3R5bGUgYW5kIGFwcGx5IHlvdXIgc3RyYXRlZ3kgb24gdGhlbS4gSGVyZSwgeW91IGtub3cgdGhhdCB0aGVzZSBhcmUgZGVkaWNhdGVkIHBsYXllcnMgd2hvIGFyZW4ndCBoZXJlIHRvIGhpdCBhIGZldyBsdWNreSByb3VuZHMgYW5kIHNwbGl0LiBTaXR0aW5nIGRvd24gYW5kIHBsYXlpbmcgZm9yIHNldmVyYWwgaG91cnMgdGlsbCB5b3VyIGNoaXBzIHJ1biBvdXQgcmVxdWlyZXMgZm9jdXMgYW5kIHN0cmF0ZWd5IGlzIGEgbXVzY2xlIHRoYXQgbW9zdCBwbGF5ZXJzIGRvbid0IGZsZXggaW4gcmVndWxhciByaW5nIGdhbWVzLiBUaGUgdmVyeSBleHBlcmllbmNlIGJ1aWxkcyBhIGJldHRlciBwbGF5ZXIuIFRoZSB0b3VybmFtZW50IGNyZWF0ZXMgYW4gaW50ZW5zaXZlIGludGVyYWN0aW9uIHdpdGggdGhlIG90aGVyIHBsYXllcnMsIGFuZCB0YWtlcyB5b3VyIGRlYWxpbmdzIHdpdGggdGhlbSB0byBhIHdob2xlIG5ldyBsZXZlbC4gVGhpcyBlbnZpcm9ubWVudCBjcmVhdGVzIGEgbW9yZSB0aHJpbGxpbmcgYW5kIGludGVyZXN0aW5nIGdhbWUuIFRoaXMgdmVyeSBpbnRlbnNpdHkgaXMgd2hhdCBtYWtlcyB0b3VybmFtZW50cyB0aGUgdWx0aW1hdGUgcG9rZXIgZXhwZXJpZW5jZS4KSSBnb3QgYSBnaXJsIHRoYXQgY291bGQgc3BlYWsgYnJva2VuIEVuZ2xpc2guIFRoZSBtYXNzYWdlIHdhcyB0ZXJyaWJsZS4gCiJJIHRob3VnaHQgdGhhdCwgcXVpdGUgZnJhbmtseSwgdGhlIE1hcmNlbCB0aGluZyB3YXMganVzdCBwdXJlIGh5cGUuIFdlIG5lZWQgbW9yZSBzdWJzdGFuY2UgaW4gb3VyIGluZHVzdHJ5IHJpZ2h0IG5vdyB0byBiZWF0IG9mZiBhbGwgdGhlIGNvbXBldGl0aXZlIHNldHMgb3V0IHRoZXJlLiAKU3RhcnQgZWFjaCByb3VuZCB3aXRoIHRoZSBzZXZlbiBvZiBkaWFtb25kcy4gV2hvZXZlciBoYXMgdGhlIHNldmVuIG9mIGRpYW1vbmRzIGxheXMgaXQgZG93biBvbiB0aGUgdGFibGUuIFdoZW4gYSBzZXZlbiBvZiBhbnkgc3VpdCBpcyBwbGF5ZWQgaXQgc3RhcnRzIGEgImxheW91dC4iIEEgbGF5b3V0IGlzIG1hZGUgYnkgbGF5aW5nIGNhcmRzIGRvd24gb25lIGJ5IG9uZSBuZXh0IHRvIHRoZSBzZXZlbiBpbiBzZXF1ZW50aWFsIG9yZGVyLgpUaGUgbGVhZ3VlIHJ1bnMgZm9yIDEyIHdlZWtzLCB3aXRoIHBsYXllcnMgcXVhbGlmeWluZyBmb3IgdGhlIGdyYW5kIGZpbmFsIGV2ZXJ5IGZvdXIgd2Vla3MuIFRoZSBncmFuZCBmaW5hbCB3aWxsIGJlIGhlbGQgb3ZlciBhIHdlZWtlbmQgdG8gYmUgY29uZmlybWVkLCB3aXRoIGEgZ3VhcmFudGVlZCBwcml6ZSBwb29sIG9mIGluY2x1ZGluZyBhIFdvcmxkIFNlcmllcyBvZiBQb2tlciBQYWNrYWdlLCBhbmQgZml2ZSB0cmlwcyB0byBib3RoIExhcyBWZWdhcyBhbmQgRmxvcmlkYS4KVG8gbWUsIHRoZSBjb250ZW50cyBvZiB0aGUgbHlyaWNzIGRvZXNuIHJlYWxseSBtYXR0ZXIuIEkgdHJlYXQgdm9jYWxzIGFzIGp1c3QgYXMgYW5vdGhlciBpbnN0cnVtZW50LiAKUm9kZ2VycyBsYXVnaGVkLiBDYW4gb3V0cnVuIHRob3NlIG1vdGhlciBhbnkgZGF5LCBoZSBzYWlkLCB0aGV5IGNhbiBzaG9vdCBzdHJhaWdodCBhbnl3YXkhIHJlcHV0YXRpb25Ob3QgdGhlIG1vc3QgcmVhc3N1cmluZyB3b3JkcywgZXNwZWNpYWxseSB3aGVuIHdlIGhhZCBiZWVuIHRlYXJpbmcgYXJvdW5kIGZyb20gb25lIG1pbGxpb24gZG9sbGFyIGhvbWUgdG8gYW5vdGhlciwgd2l0aCBSb2RnZXJzIGRyb3BwaW5nIG9mZiBhIGZ1bGwgYnJpZWZjYXNlIGhlcmUgYW5kIHBpY2tpbmcgdXAgYW5vdGhlciB0aGVyZS4gR2l2ZW4gaGlzIHdpbGQgcmVwdXRhdGlvbiBpbiBNb250cmVhbCwgSSB3YXMgc3VyZSB0aGUgYnJpZWZjYXNlcyB3ZXJlIGZpbGxlZCB3aXRoIHRoZSBjb250cmFiYW5kIG9mIHlvdXIgY2hvaWNlLCBidXQgaXQgdHVybmVkIG91dCB3ZSB3ZXJlIGNhcnJ5aW5nIG5vdGhpbmcgbW9yZSByaXNreSB0aGFuIGxlZ2FsIHBhcGVycy4uIApUaHJlZSBFcmljIEhhbWJlciBHcmFkZSAxMiBzdHVkZW50cyBzdXNwZW5kZWQgb3ZlciBob21vcGhvYmljIGxpc3QKSGVhdCB0byBib2lsaW5nIG92ZXIgbWVkaXVtIGhlYXQsIHN0aXJyaW5nIGNvbnN0YW50bHkuIFNwcmlua2xlIHdpdGggYXBwbGVzIGFuZCB3YWxudXRzLiAKSSBkb24gYmVsaWV2ZSBJIG1lbnRpb25lZCB0aGlzIG9uIHRoaXMgc3ViIGJlZm9yZSwgYnV0IEkgb25seSBzdGFydGVkIHBsYXlpbmcgc2VyaW91c2x5IGFyb3VuZCA3IG1vbnRocyBhZ28sIHN0YXJ0aW5nIGZyb20gYW4gYWJzb2x1dGVseSBtaW5pbWFsIGJhc2Ugb2Yga25vd2xlZGdlLiAKQXMgc29vbiBhcyBJIHN3YWxsb3dlZCBteSBwdW1wa2luIHBpZSBvbiBUaGFua3NnaXZpbmcsIEkgc3dlYXIgSSBmZWx0IHRoZSBhaXIgYXJvdW5kIG1lIGdyb3cgY29sZCBhbmQgYW5ncnkuLiAKRm94IG5ldHdvcmsgYW5kIHRoZSBzdHVkaW8gdGhhdCBwcm9kdWNlcyBFbXBpcmUgaGFkIG5vIGltbWVkaWF0ZSBjb21tZW50IG9uIHRoZSBsYXRlc3QgaW5kaWN0bWVudC4uIApCaWcgMiBpcyBhIGdhbWUgdGhhdCBteSBmcmllbmRzIGFuZCBJIGxpa2UgdG8gcGxheSB3aGVuIHdlIGhhdmUgYSBkZWNrIG9mIGNhcmRzIGhhbmR5LiBTb21lIHBlb3BsZSBjYWxsIHRoaXMgZ2FtZSBDaGluZXNlIFBva2VyIGJlY2F1c2UgaXQgb3JpZ2luYXRlZCBpbiBBc2lhLiAKQ2FuIHlvdSBpbWFnaW5lLCBXaWxsIFJvZ2VycywgV2lsZXkgUG9zdCwgSm9obiBEIFJvY2tlZmVsbGVyPyBBbGwgcGxheWVkIHBva2VyIGhlcmUuIFdpbGxpYW0gU2tlbGx5LiAKU28geW91IGNhbiBtYXliZSB0cnkgdG8gc3dpbmcgdHJhZGUgaXQgb24gdGhlIHNob3J0L21lZGl1bSB0ZXJtLCBidXQgbG9uZyB0ZXJtIGl0IG5vdCBhbiBpbnZlc3RtZW50LlNwb250YW5lb3VzRHJlYW0gIDMgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnb0JpdGZpbmV4IGhhcyBiZWVuIHBsYXlpbmcgdGhpcyBjcnlwdG8gaG9zdGFnZSBnYW1lIGZvciBhIHdoaWxlIG5vdy4gVGhleSBnaXZlIHlvdSBhIHNvbmcgYW5kIGRhbmNlIHRvIGp1c3RpZnkgdGhlaXIgYWN0aW9ucywgYnV0IEkgbG9uZyBzdXNwZWN0ZWQgdGhpcyBpcyBhbiBleHRvcnRpb24gc2NoZW1lIGhvcGluZyBhIHBlcmNlbnRhZ2Ugb2YgdXNlcnMgYXJlIHRvbyBpbnRpbWlkYXRlZCB0byBjb21lIGZvcndhcmQsIGFuZCB0aGV5IGtlZXAgdGhlIGZ1bmRzLiAKQnV0IGl0IGlzIGEgcmVhbCBmbGF3LiBPdGhlcndpc2UgdGhlIHdyaXRpbmcgaXMgZ29vZCB0byBncmVhdCBieSBDUlBHIHN0YW5kYXJkcy4gClRoaXMgZ2l2ZXMgcGFzc2VuZ2VycyBwbGVudHkgb2YgdGltZSB0byBhY3F1YWludCB0aGVtc2VsdmVzIHdpdGggdGhlIHNoaXAuIEFmdGVyIGhlYXJpbmcgc28gbWFueSBjcnVpc2Ugc2hpcCBob3Jyb3Igc3RvcmllcywgSSB3YXMgc2NlcHRpY2FsLiBBZnRlciBzZXZlbiBkYXlzIG9uIHRoZSBDZWxlYnJpdHkgQ2VudHVyeSwgSSBhIGNydWlzaW5nIGNvbnZlcnQuClRoZSBwcmltYXJ5IHJlYXNvbiBhcyB0byB3aHkgY2FyZCBnYW1lcyBhcmUgc28gZnVuIGFuZCBoYXZlIHdpdGhzdG9vZCB0aGUgdGVzdCBvZiB0aW1lIGlzIHRoYXQgdGhleSBoYXZlIGdhbWUgcGxheSBkZXB0aCBhcyB3ZWxsIGFzIHBsYXllciBpbnRlcmFjdGlvbi4gVGhpcyBtZWFucyB0aGF0IHRob3VnaCBwZW9wbGUgd2lsbCBtb3N0IGxpa2VseSBiZSBpbnRyb2R1Y2VkIHRvIGNhcmQgZ2FtZXMgYXQgc29tZSBwb2ludCBpbiB0aGVpciBsaXZlcywgdGhleSB3aWxsIGNvbnRpbnVlIHRvIHBsYXkgdGhvc2Ugc2FtZSBjYXJkIGdhbWVzIGJlY2F1c2UgaXQgb2ZmZXJzIHRoZW0gc3RpbXVsYXRpb24uIApMaW5kYSBIYXNlbmZyYXR6LCBhY2NvbXBhbmllZCBieSBodXNiYW5kIEVkIE5ld3RvbiBhbmQgZGF1Z2h0ZXIgT2xpdmlhLCBpcyB0aGUgZmlyc3Qgd29tYW4gdG8gYmUgaG9ub3VyZWQgd2l0aCB0aGUgR3VzdGF2c29uIFNjaG9vbCBvZiBCdXNpbmVzcyBUTXMgRGlzdGluZ3Vpc2hlZCBFbnRyZXByZW5ldXIgb2YgdGhlIFllYXIgQXdhcmQuIEhhc2VuZnJhdHogYW5kIGhlciBmYXRoZXIsIEZyYW5rLCB3ZXJlIGFsc28gcmVjZW50bHkgYXBwb2ludGVkIHRvIHRoZSBDYW5hZGlhbiBCdXNpbmVzcyBIYWxsIG9mIEZhbWUgZm9yIHRoZWlyIGdsb2JhbCBzdWNjZXNzLiBDYW5jZXIgQWdlbmN5LiBUaGUgYnJhaW5jaGlsZCBvZiBKYW5lWW91bmcsIHRoZSB5ZWFybHkgZmFzaGlvbiBzaG93LCBsdW5jaGVvbiBhbmQgYXVjdGlvbiBoYXMgcXVpY2tseSBiZWNvbWUgYSBsZWFkaW5nIGRhdGUgb24gVmFuaGF0dGFuIHNvY2lhbCBjYWxlbmRhci4KRGV0ZXJtaW5lIHRoZSB0eXBlIG9mIG1hc3NhZ2UgdGhlcmFweSB5b3UnZCBsaWtlLiBUaGVyZSBhcmUgZGlmZmVyZW50IHR5cGVzIG9mIG1hc3NhZ2UgdGhlcmFweSwgYW5kIHRoZSBtb3N0IHBvcHVsYXIgb25lcyBpbmNsdWRlIHRoZSBmb2xsb3dpbmc6IFN3ZWRpc2ggbWFzc2FnZSwgd2hpY2ggbWFrZXMgdXNlIG9mIGxvbmcgc3Ryb2tlcyBhbmQgZnJpY3Rpb24gb24gdGhlIG11c2NsZXMgb2YgdGhlIGJvZHk7IFNoaWF0c3UgbWFzc2FnZSwgd2hpY2ggbWFrZXMgdXNlIG9mIHJoeXRobWljIHByZXNzdXJlIGZyb20gdGhlIGZpbmdlcnMgdG8gZGlmZmVyZW50IGJvZHkgcGFydHMgdG8gcHJvbW90ZSB0aGUgZmxvdyBvZiBjaGk7IGRlZXAgdGlzc3VlIG1hc3NhZ2UsIHdoaWNoIGFwcGxpZXMgcHJlc3N1cmUgb24gZGVlcCBsYXllcnMgb2YgbXVzY2xlczsgYW5kIHByZXNzdXJlIHBvaW50IG1hc3NhZ2UsIHdoaWNoIGZvY3VzZXMgb24gZWFzaW5nIHRoZSBzdHJlc3MgImtub3RzIiBvbiB0aGUgYm9keS4gT25jZSB5b3UndmUgZGV0ZXJtaW5lZCB0aGUgdHlwZSBvZiBtYXNzYWdlIHRoYXQgeW91IGxpa2UsIGZpbmQgYSBtYXNzYWdlIHRoZXJhcHkgd2hvIHNwZWNpYWxpemVzIG9uIHRoaXMuLiAKSXQgbm90IGFuIG9waW5pb24uIApUaGV5IGhhdmUgbm93IGRlbW9saXNoZWQgdGhlIGJ1aWxkaW5nIHdoZXJlIHRoZSBTcGFuaXNoIGZhbWlseSBsaXZlZC4gVGhlIGJsdWUgY2FyIGlzIGdvbmUgYW5kIG9ubHkgYSBwaWxlIG9mIHdoYXQgd2FzIHJlbWFpbnMgb24gdGhlIGNvcm5lciB3aGVyZSB3ZSBvbmNlIGhlYWRlZCBkb3duIG91ciBzZWNyZXQgcGF0aC4gClRoZSBCZWFjaCBCb3lzIGlzIG15IGZhdm9yaXRlIGJhbmQgYW5kIEkgYWxzbyByZWFsbHkgbG92ZSBBbmltYWwgQ29sbGVjdGl2ZS4gSWYgeW91IG9ubHkgbGlzdGVuZWQgdG8gTWVycml3ZWF0aGVyIFBvc3QgUGF2aWxsaW9uLCBhIGRlZXAgZGl2ZSBpbnRvIEFuQ28gZGlzY29ncmFwaHkgaXMgdmVyeSBtdWNoIHdvcnRoIHlvdXIgdGltZS4gVGhlaXIgYWxidW1zIEZhbGwgQmUgS2luZCBhbmQgUGFpbnRpbmcgV2l0aCAoYW5kIE1QUCkgcmVtaW5kIG1lIHRoZSBtb3N0IG9mIFRoZSBCZWFjaCBCb3lzIGR1ZSB0byB0aGVpciBmb2N1cyBvbiB2b2NhbHMuIFBhbmRhIEJlYXIgc29sbyBhbGJ1bSBQZXJzb24gUGl0Y2ggaXMgYWxzbyB2ZXJ5IEJlYWNoIEJveXMgaW5zcGlyZWQgYW5kIGhhcyBhIG5pY2Ugc3VtbWVyeSBmZWVsLgpUaWdodCBpcyByZWFsbHkgdGlnaHQgYnR3LiBBQSwgS0ssIFFRIGZyb20gYW55IHBvc2l0aW9ucywgQUsgYWx3YXlzIHJhaXNlIGJ1dCBkb24gZ28gYnJva2Ugd2l0aCB0aGlzIGhhbmQuIFNtYWxsIHBvY2tldCBwYWlycyBhcmUgd29ydGggbGltcGluZyBvbiBhIHRpZ2h0IHRhYmxlIGJ1dCBmb2xkIHRvIG92ZXJjYXJkcy4KU28gQ29ybWFubiBpcyBzdGVhZGlseSB3b3JraW5nIG9uIHRoZSBjcm9zc2JlbmNoZXJzLCBwaWNraW5nIHRoZW0gb2ZmIG9uZSBieSBvbmUuIApJZiBzaGUgbWVzc2FnaW5nIHlvdSBiYWNrIHdpdGggYW55dGhpbmcgYnV0IGEgc3VwZXIgc2hvcnQgcmVzcG9uc2UsIHNoZSBhbG1vc3QgZGVmaW5pdGVseSBpbnRlcmVzdGVkIGFueXdheS4uIApTbyBoZSB0b2xkIHRoZW0gd2hhdCBoZSBkaWQsIHRoYXQgaGUgbGVmdCB0aGUgQVNZIGFib3V0IDMgcG0uIFdoaWNoIGlzIHdoYXQgaGUgZG9lcyBldmVyeSBkYXksIGFuZCB3aGF0IEF2ZXJ5IHNheXMgQm9iYnkgZGlkLiBBbmQgdGhhdCBoZSBhbmQgU1QgcGFzc2VkIGVhY2ggb3RoZXIgb24gdGhlIHJvYWQuCkhlIHdhcyBzdWJiZWQgb3V0IGFsbW9zdCBpbW1lZGlhdGVseSBhZnRlciBoZSBmdWNraW5nIG1pc3NlZCBhIGJhc2ljIHBhc3MgdG8gU2lnZ3kuIApNeSBwYXJlbnRzIG93bmVkIG91ciBob21lLCB3ZSB3ZXJlIGxpdmluZyBmYWlybHkgY29tZm9ydGFibHkuIApIZWFsdGhpZXIgb2ZmZXJpbmdzIG1pZ2h0IGJlIGNvc3RsaWVyLCBidXQgQmFyaWNoZWxsbyBzYWlkIGl0IG11Y2ggbW9yZSBhbmQgdGhhdCByZWNlbnQgZnVuZHJhaXNpbmcgZWZmb3J0cywgaW5jbHVkaW5nIGFuIGFubnVhbCBnb2xmIHRvdXJuYW1lbnQgYW5kIGJlcXVlc3RzIGluIHdpbGxzLCBoYXZlIGFsbG93ZWQgdGhlIGNoYXJpdHkgcnVuIGFsbW9zdCBlbnRpcmVseSBieSB2b2x1bnRlZXJzICh0aGVyZSBpcyBvbmx5IG9uZSBwYWlkIGVtcGxveWVlKSB0byBsb29rIGF0IGFuIHVwZGF0ZWQgZm9vZCBiYW5rIHByb2dyYW0gd2l0aCBtb2Rlcm4gZGF5IG51dHJpdGlvbmFsIHZhbHVlcy4gCkl0IHdhcyBhbiAiYSBoYSEiIG1vbWVudC4gSXQncyBuYW1pbmcgdGhlIHZhbHVlIHByb3AgaW4gYSBzbmFwcHkgd2F5IHRoYXQgcGVvcGxlIGFjdHVhbGx5IHJlY29nbml6ZSBhbmQgdW5kZXJzdGFuZC4uIApUaGUgc2l0ZSBhbHNvIGFjdHMgYXMgYSBtaWRkbGVtYW4gYnkgaGFuZGxpbmcgc3Vic2NyaXB0aW9ucyAgIFZhbGVudGluYSBNYXJpYSBsYW5kcyAxMCB0byAxNSBuZXcgc3Vic2NyaWJlcnMgYSBkYXksIGFjY29yZGluZyB0byBhIGNvbXBhbnkgc3Bva2Vzd29tYW4gICBhbmQgdXNlciBmZWVzLiAKTGUgY2xpZW50IHN1aXQgIHF1ZWxxdWVzIHBhcyBkZXJyaXJlLiBMZSBwb3JjaGUgcmVzdGUgb3V2ZXJ0IGdyY2UgIHVuZSBjb21iaW5lIGV0IGxlIGNvbW1lcmNlIGRlcyBjaGFybWVzIGEgbGlldSBkYW5zIGRlcyBsb2dlbWVudHMgcXVpIGFwcGFydGllbm5lbnQgbGUgcGx1cyBzb3V2ZW50ICBsYSBjb21tdW5hdXQuIApTbyBpZiB2aWxsYWluIGlzIHBlcmNlcHRpdmUgZW5vdWdoLCB5b3UgY2FuIHNlZSB3aHkgeW91ciBsaW5lIGRvZXNuJ3QgbWFrZSBzZW5zZS4uIApIaXN0b3J5IGFuZCBmb3VuZCBoaW0gZGVhZCwgd2l0aCBhIGNhY2hlIG9mIGFzc2F1bHQgc3R5bGUgd2VhcG9ucyBhbmQgYnJva2VuIHdpbmRvd3MgdGhhdCBoYWQgYSB2aWV3IG9mIGEgY29uY2VydCB2ZW51ZSBraWxsaW5nIGZpZWxkLCBhY2NvcmRpbmcgdG8gcG9saWNlIGJvZHkgY2FtZXJhIHZpZGVvcy4KVGhlIHJhdyBvbmlvbiByZW1lZHkgICB0YWtlIGhhbGYgYSByYXcgb25pb24gYW5kIG1hc3NhZ2UgdGhlIHNjYWxwIHdpdGggaXQ7IGNvdmVyIHRoZSBoZWFkIG92ZXJuaWdodCwgc2hhbXBvbyBhbmQgcmluc2UgaW4gdGhlIG1vcm5pbmcuIApJZiB5b3UgcGxheWVkIHBsYXkgbW9uZXkgcG9rZXIsIHlvdSBwcm9iYWJseSBrbm93IHdoYXQgSSBhbSB0YWxraW5nIGFib3V0LiAKVGhpcyBjYW4gYmUgdXNlZnVsIGZvciBib3RoIGN1dHRpbmcgdGhlIGRlY2sgYW5kIHByZXZlbnRpbmcgdGhlIGJvdHRvbSBvZiB0aGUgZGVjayBmcm9tIGJlaW5nIGV4cG9zZWQuIApPbiBhIHBlcmZlY3RseSBleWUgaGVhbHRoeSBraWQuIApBbWF6b24gYWxzbyBvd25zIElNREIsIHdoaWNoIHNob3dzIHZpZGVvIGFkcywgYW5kIGFsc28gaGFzIHB1Ymxpc2hlciBzZXJ2aWNlcyB0aGF0IGRlYWwgd2l0aCB3ZWJzaXRlcyBqdXN0IGxpa2UgR29vZ2xlJ3MgcHVibGlzaGVyIGFkIG5ldHdvcmssIHdoZXJlIGl0IGNhbiB0YXJnZXQgYWRzIG91dHNpZGUgdGhlIHdlYnNpdGVzIGl0IGRpcmVjdGx5IG93bnMuLiAKV2hhdCBiZXR0ZXIgd2F5IHRvIHBpY2sgaW50byAyMDE5IHRoYW4gYSBwZXJmb3JtYW5jZSBieSBHcmFtbXkgbm9taW5hdGVkIHN0ZWVsIHN0cmluZyBndWl0YXIgaGVybyBNYXJ0aW4gVGF5bG9yPyBBIHByb2RpZ2lvdXMgcGxheWVyLCBjb21wb3NlciBhbmQgZWR1Y2F0b3Igd2hvIGhhcyByZWNvcmRlZCB3aXRoIHN1Y2ggbHVtaW5hcmllcyBhcyBHZW9yZ2UgSGFycmlzb24sIENoZXQgQXRraW5zLCBKZWZmIEJlY2sgYW5kIFN0ZXBoYW5lIEdyYXBwZWxpLCBUYXlsb3IgaXMgYSBmaW5nZXJwaWNraW5nIGFjZSB3aG9zZSBvbmxpbmUgdGVhY2hpbmcgY2xhc3NlcyBhcmUgYW4gaW50ZXJuZXQgaGl0LiAKRGlhYmxvIElJIHdhcyBhIGxlZ2VuZGFyeSBnYW1lLCBpdCBzdGlsbCBpcyBhIGxlZ2VuZGFyeSBnYW1lIHRoYXQgc2VlcyBzb21lIGhhcmRjb3JlIEFSUEdlcnMgc3RpY2sgd2l0aCBpdC4gClRhY2sgdmFyZSBlbiBsaXRlbiBsaXRlbiBlbGVrdHJvbmlzayBrb21wb25lbnQgc29tIGthbGxhcyByIGFtYnVsYXRvcnkgZWZ0ZXJzb20gcGFya2VyaW5nZW4gaW50ZSByIHMgcnNraWx0IHN0b3IuIAoiS25vd24gVlBOcyIgb25seSBibG9ja3MgYW1hdGV1ciB0aW5mb2lsIGhhdHRlcnMsIHlvdSB0aGluayB0aGUgUnVzc2lhbiBnb3Zlcm5tZW50IHVzZXMgTm9yZFZQTj8gTG9sLgpBbHNvLCB5b3UgZG8gdW5kZXJzdGFuZCB0aGF0IHRoZXJlIGEgYml0IG1vcmUgdGhhbiBsYWlzc2V6IGZhaXJlIGNhcGl0YWxpc20gYW5kIHNvY2lhbGlzbT8KQmV0IGEgYnVuY2ggb24gYnV5IGEgcGF5cy4gClRvIGRvIHRoaXMgYSBnb29kIHRpcCBpcyB0aGF0IHlvdSBuZWVkIHRvIGhhdmUgYXQgbGVhc3QgdGhpcnR5IHRvIGZvcnR5IG1heCBidXkgaW5zLiAKSSBwb2ludGVkIG91dCB0aGF0IGl0IGNyZWF0ZWQgYSBjb3VwbGUgaG91cnMgZXh0cmEgd29yayBmb3IgbWUgc2luY2UgSSBoYWQgdG8gcmUgZG8gaGFsZiBoaXMgd29yay4gCk5vdyBsZXQncyBjb3VudGVyIHdpdGggdGhlIHZlcnkgbmV4dCBjb21pbmcgdXAgaW5xdWlyeSByYWlzZWQsIGFzIHRvIGhvdyB0aGUgY2FyZCBnYW1lcyBjYW1lIGludG8gZXhpc3RlbmNlIG9yIHdoYXQgaXMgdGhlIG5hcnJhdGlvbiBjb25jZXJuZWQgdG8gaXQ/IFRoZSBzdG9yeSBnb2VzIGxpa2UgdGhpcyB0aGF0IHRoZSBjYXJkcyBhcmUgc2FpZCB0byBiZSBnaXZlbiBiaXJ0aCBpbml0aWFsbHkgaW4gQ2hpbmEsIHRoZSBjb3VudHJ5IHdoaWNoIGJvYXN0cyBvZiBhbiBhd2Vzb21lIGludmVudGlvbiBvZiBwYXBlciBhcyB3ZWxsLiBBbmQgd2hlbiB0aGlzIGhhcHBlbmVkIGlzIGFsc28gYW4gaW1wb3J0YW50IHBvaW50IHRvIGJlIHBvbmRlcmVkIG9uIGFzIHRoZSBzYW1lIHdhcyBicm91Z2h0IGludG8gdGhlIHBpY3R1cmUgYXMgZWFybHkgYXMgaW4gdGhlIDd0aCBvciAxMHRoIGNlbnR1cnkuIEFuZCBpdCBpcyBub3QgdGhhdCB0aGUgdXNlIG9mIGNhcmQgZ2FtZXMgd2FzIGNvbmZpbmVkIHRvIHRoYXQgcGVyaW9kIG9ubHkgYXMgc3RpbGwgdGhlcmUgYXJlIHBhY2tzIGF2YWlsYWJsZSBpbiBDaGluYSBpbiB3aGljaCB0aGVyZSBpcyBhIHZpb2xlbnQgdXNlIG9mIHN1aXRzIG9mIGNvaW5zIGFuZCBjb3JkcyBvZiBjb2lucyB3aGljaCB0aGUgcGxheWVycyBvZiBNYWggSm9uZyB0ZXJtIGFzIGNpcmNsZXMgYW5kIGJhbWJvb3MgKGtub3duIGJ5IHVzIGFzIHN0aWNrcykuIApSYWNoZWwgTWFkZG93OiBXaHkgRG8gMS8zIG9mIE5ldyBKZXJzZXkgQ29uc2VydmF0aXZlcyBUaGluayBPYmFtYSBNaWdodCBCZSB0aGUgQW50aSBDaHJpc3Q/ICBQb2xpdGljcyAgQWx0ZXJOZXQuCkhlcmUgYXJlIG15IHRvcCBmaXZlIHBvc3RzIG9uIGZlbWFsZSBhbmFsIHBsZWFzdXJlLiAKV2hlbiB5b3UgcmVjZWl2ZSBtYXNzYWdlIG9yIGJvZHl3b3JrLCBjZWxsIHdhc3RlICh3aGljaCBpcyBhbHJlYWR5IGluIHlvdXIgc3lzdGVtKSBnZXRzIHJlbGVhc2VkIGF0IGEgbW9yZSByYXBpZCByYXRlIHRoYW4gbm9ybWFsLiAKQ29uc2lkZXJpbmcgYWxsIG9mIHRob3NlIG9wdGlvbnMgZWl0aGVyIGltcHJvdmUgY29vbGluZyBwZXJmb3JtYW5jZSBhbmQgdGh1cyBkZWNyZWFzZXMgdGhlIGNoYW5jZSBhIEdQVSB3aWxsIHVuZGVyY2xvY2sgaXRzZWxmIGZyb20gZ2V0dGluZyB0byBob3QsIHByb3ZpZGVzIG1heGltdW0gcG93ZXIgZm9yIHRoZSBHUFUgdG8gdXRpbGl6ZSBvciBqdXN0IHVzaW5nIGxlc3MgR1BVIHJlc291cmNlcy4uIApFdmVudHVhbGx5LCBTaGFja2xlZm9yZCBzYWlkLCBpZiBwbGF5ZXJzIHN0YXkgdHJ1ZSB0byBhIHBlcmZlY3Qgc3RyYXRlZ3kgb25lIGRlc2lnbmVkIHRvIG1heGltaXplIHRoZWlyIHBlcmZvcm1hbmNlIG92ZXIgdGhlIGxvbmcgaGF1bCwgc3VjaCBhcyBieSBnZXR0aW5nIHJpZCBvZiBwb3RlbnRpYWxseSBkZWNlbnQgY2FyZHMgbGlrZSBsb3cgcGFpcnMgdG8gaW5jcmVhc2UgY2hhbmNlcyBvZiBhIGJpZyBwYXlvdXQgcm95YWwgZmx1c2ggdGhlaXIgbHVjayB3aWxsIHR1cm4sIGJhc2VkIG9uIHN0YXRpc3RpY3MsIGFuZCB0aGV5IGJyZWFrIGV2ZW4gb3IgY29tZSBjbG9zZSB0byBpdC4KRm9yIHdoYXQgYW5kIHdoeT8gSSBkb24gd2FudCBraWRzIGhlcmUgbW9zdGx5IGJlY2F1c2Ugb2YgdGhlIGFueGlldHkuIApJcyBhIHN1aWNpZGUgdGhyZWF0IHByb2NlZHVyYWxseSBkZWZpbmVkLCBhbmQgaG93IGlzIHRoYXQgZGVmaW5pdGlvbiBjb21tdW5pY2F0ZWQgdG8gYSBsb3cgc2tpbGxlZCBmcm9udGxpbmUgd29ya2VyIHdpdGggbm8gYmFja2dyb3VuZCBpbiB0aGUgdG9waWMgdGhleSBwcm92aWRpbmcgYWR2aWNlIG9uPyBpZiBJIGhhdmUgYW4gYW5zd2VyIGZvciB0aGF0IHF1ZXN0aW9uLCBhbmQgSSBiZWVuIHdvcmtpbmcgb24gaXQgZm9yIGFsbW9zdCB0d28geWVhcnMuIE9ubHkgaWRlYSBJIGhhdmUgaXMgcmVseSBvbiBsb3cgc2tpbGxlZCBmcm9udGxpbmUgd29ya2VycyBJIGhhZCBwZW9wbGUgdGVsbCBtZSB0aGV5IGdvaW5nIHRvIGtpbGwgdGhlbXNlbHZlcywgZGlyZWN0bHkgYW5kIGluZGlyZWN0bHkuIEFuZCBteSBUTHMgc2hydWcgaXQgb2ZmIGFuZCBkZWNpZGUgbm90IHRvIHJlZmVyIGl0IHVwIHRoZSBjaGFpbiAodW5sZXNzIHRoZXkgeW91bmcgYW5kIGVudGh1c2lhc3RpYyBhYm91dCB0aGUgcm9sZSwgZ29vZCBvbiB5YSB5b3Ugb25lIHBlcnNvbiB3aG8gZGlkIHNob3cgaW50ZXJlc3QgaW4gZm9sbG93aW5nIHVwIHRoYXQgb25lIHRpbWUpLiAKSm9zZXBoJ3MgSG9zcGljZSBvbiBTYXR1cmRheSwgTWFyY2ggMTIsIDIwMTEgSm9obiBEYXZpZCBKYW1pZXNvbiBwYXNzZWQgYXdheSBhdCB0aGUgYWdlIG9mIDg2LiAKTW9zY293IGlzIGhlYXZpbHkgaW52ZXN0ZWQgaW4gQ3lwcnVzIGJ1dCBpcyBpbiBubyBydXNoIHRvIGhlbHAgb3V0LCB3cml0ZXMgRmVsaXggU2FsbW9uCk9uIHRoaXMgU3VuZGF5IG1vcm5pbmcsIGhlIHdhcyB0b2xkIHRoYXQgdGhpcyB3YXMgdGhlIGRheS4gTGlrZSBhbiBhc3Ryb25hdXQgYmVmb3JlIGxhdW5jaGluZywgaGUgZmVhc3RlZCBvbiBlZ2dzLCBiYWNvbiBhbmQgdG9hc3QgdG8ga2VlcCBoaW1zZWxmIGFsZXJ0OiBoZSB3b3VsZCBub3QgZWF0IG9yIGRyaW5rIGFnYWluIHVudGlsIGxhbmRpbmcgaW4gTm9yd2F5IHRoaXJ0ZWVuIGhvdXJzIGZyb20gbm93LiBXaXRoIGEgcGFja2FnZSBvZiBLZW50cyBpbiBoaXMgcG9ja2V0LCBQb3dlcnMgd2FzIHN0cmFwcGVkIGludG8gdGhlIHNjb3JjaGluZyBjb2NrcGl0IG9mIE51bWJlciAzNjAuIApJcyBoZSB0aGUgYmVzdCBib3hlciBldmVyIG1hZGUsIGFic29sdXRlbHkuIE5vIG9uZSB3aWxsIGV2ZXIgYmUgYXMgc21hcnQgYXMgTWF5d2VhdGhlciB3aGVuIGl0IGNvbWVzIHRvIHRoZSBhcnQgb2YgYm94aW5nLiBNYXl3ZWF0aGVyIGlzIG9uZSBvZiBhIGtpbmQgYW5kIHRoZXJlIHdpbGwgbmV2ZXIsIGV2ZXIsIGV2ZXIgYmUgYW5vdGhlciBib3hlciBsaWtlIGhpbS4gCk9uIHRoZSBaeW5xIHRoZXJlIGFyZSBhbHNvIHNvbWUgYWRkcmVzcyBzcGFjZSBnb3RjaGFzLiBJIHRoaW5rIHRoYXQgcGFydCBvZiB3aHkgdGhleSBsYXllZCBvdXQgdGhlIGludGVyY29ubmVjdCBpbiB0aGlzIHdheSBpcyBzbyB0aGF0IHRoZXJlIGlzbiBhIGxvb3BiYWNrIHBhdGggZnJvbSB0aGUgUFMgR1AgbWFzdGVyIGJhY2sgdG8gdGhlIFBTIEhQIHNsYXZlLiAKQXMgbW9zdCBvZiBvdXIgZmFtaWx5IGFuZCBmcmllbmRzIGFyZSBhd2FyZSwgb3VyIGpvdXJuZXkgdG8gQ2hpbmEgaGFzIGNvbWUgYWJvdXQgYmVjYXVzZSBvZiBQZXRlcidzIGNhbmNlci4gV2UgYXJlIHRyeWluZyBhIGRpZmZlcmVudCB0cmVhdG1lbnQsIFN5c3RlbWljIFBob3RvZHluYW1pYyBUaGVyYXB5IHdoaWNoIHRyZWF0cyB0aGUgd2hvbGUgYm9keSwgbm90IGp1c3Qgb25lIGFyZWEgYXMgd2l0aCByYWRpYXRpb24uIFRoaXMgdGhlcmFweSBpcyBub3cgbm90IGF2YWlsYWJsZSBpbiBBdXN0cmFsaWEsIGFuZCBiZWNhdXNlIG9mIHNldmVyYWwgcmVjb21tZW5kYXRpb25zIGFuZCB3ZWVrcyBhbmQgd2Vla3Mgb2YgcmVzZWFyY2gsIHdlIGhhdmUgZGVjaWRlZCB0aGlzIGlzIHRoZSBiZXN0IHRyZWF0bWVudCBmb3IgUGV0ZS4gSSB3b3VsZCBsaWtlIHRvIG1ha2Ugc3BlY2lhbCBtZW50aW9uIG9mIGEgZ3V5IG5hbWVkIEFuZHJldyB3aG8gaGFzIGJlZW4gdG8gQ2hpbmEgZm9yIHRoaXMgdHJlYXRtZW50IGFuZCBoYXMgaGFkIGFtYXppbmcgc3VjY2Vzcy4gQW5kcmV3IGhhcyBiZWVuIHNvIGZvcnRoY29taW5nIGFuZCB2ZXJ5IGdlbmVyb3VzIHdpdGggaGlzIGluZm9ybWF0aW9uICAgSSBmZWVsIGV4dHJlbWVseSBsdWNreSBhbmQgdmVyeSBncmF0ZWZ1bCB0byBoYXZlIG1hZGUgY29udGFjdCB3aXRoIEFuZHJldy4KSXQgd2FzIGJlYXV0aWZ1bCwgYW5kIEkgbG92ZWQgaXQsIGJ1dCBldmVuIGFmdGVyIHRoZSBkZXByZXNzaW9uIGJvZ2dlZCBtZSBkb3duLi4gCkVzIGhlaXQgRW50d2lja2x1bmcuLiAKV2hlbiB3ZSBnZXQgNSBEUFMgaW4gUVAgSSBnbyBNZXJjeSBhbmQgY2FsbCBpdCAiTWVyY3kgYW5kIGhlciA1IElycmVzcG9uc2libGUgRFBTIE1haW5zIiBhbmQgaXQgaG9uZXN0bHkgbWFkZSBpdCAzMDAlIG1vcmUgZW5qb3lhYmxlIGZvciBtZS4gCk5vIHdvbmRlciBJIGNhbiBmaW5kIHRydWUgbG92ZSwgYW5kIEkgZ29pbmcgdG8gZW50ZXIgbXkgNDBzIGFzIHRoZSBjcmVlcHkgZHVkZSBhdCB0aGUgYmFyIGhpdHRpbmcgb24gdGhlIGJhcnRlbmRlcnMgaGFsZiBoaXMgYWdlLCBJIGNhbiBldmVuIGRlY2lkZSBvbiBhIHR5cGUgb3RoZXIgdGhhbiAidW5mb3J0dW5hdGUgZW5vdWdoIHRvIHRoaW5rIEkgYSBnb29kIGNob2ljZSBhcyBhIHBhcnRuZXIiLiA1OTcgcG9pbnRzICBzdWJtaXR0ZWQgMTYgZGF5cyBhZ28uIApJIGdldCB0aGF0IHRoZXkncmUgY292ZXJpbmcgdGhlaXIgYXNzZXMsIGJ1dCBpdCBsZWdpdGltYXRlbHkgZmVlbHMgbGlrZSBJIGdldCBhIHJlcG9ydCB0aGF0IGlzbid0IDEwMCUgc3RyYWlnaHQgb2ZmIHRoZSBNQVIgb25jZSBhIG1vbnRoICh3b3JkIGZvciB3b3JkLCBvYnZpb3VzbHkgSSBkb24ndCB3YW50IHRoZW0gbWFraW5nIHNoaXQgdXApIGFuZCBpdCdzIGxpa2UgdGhleSd2ZSBuZXZlciBzZXQgZXllcyBvbiB0aGUgcGF0aWVudCBpbiB0aGVpciBsaXZlcy4gSXQgY291bGQgbGVnaXRpbWF0ZWx5IGp1c3QgYmUgdGhlaXIgY2hhcmdlIGNhbGxpbmcgcmVwb3J0cyBldmVyeSB0aW1lIGZvciBhbGwgSSBrbm93Li4gCkJ5IFNjb3R0IEhhbWlsdG9uTGFzdCBtb250aCBhIGNvdXBsZSBvZiB2YW1waXJlcyBrbm9ja2VkIG9uIG15IGRvb3IuIEl0IHdhcyBhZnRlciBlaWdodCBvJ2Nsb2NrIGluIHRoZSBldmVuaW5nLCBhbmQgSSBoYWQgZmFsbGVuIGFzbGVlcCwgYXMgdGhlIGZhdGhlcnMgb2YgdGhyZWUgc21hbGwgYm95cyBzbyBvZnRlbiBkbywgb24gdGhlIGNvdWNoLiBJIG9wZW5lZCB0aGUgZG9vciBhbmQgc3dhbGxvd2VkIG15IHlhd24gaW4gYWxhcm0gd2hlbiBJIHNhdyB0aGUgYmxhY2sgcm9iZXMgYW5kIGJsb29kIHNwZWNrbGVkIGNoZWVrcyBvZiBteSB2aXNpdG9ycy4gCkxlIFNpdGUgd2ViIGNvbnRpZW50IGRlcyBoeXBlcmxpZW5zIHZlcnMgZGVzIHNpdGVzIHRpZXJzIChsZXMgU2l0ZXMgdGllcnMgcXVpIHZvdXMgZm9udCBxdWl0dGVyIGxlIFNpdGUgd2ViLiAKSW4gZXhjaGFuZ2UsIHRoZXkgYnJvdWdodCB1cyBhbG9uZyB3aXRoIHRoZW0gdG8gcGxhY2VzIHVuaW1hZ2luZWQuIApUaGVyZSdzIG5vdGhpbmcgd3Jvbmcgd2l0aCB0aGF0LCIgR2lsbGVzcGllIHNhaWQsIGFkZGluZyB0aGF0IERvdWdoZXJ0eSBoYXMgYWNjb3VudGFudHMgImFuZCB2ZXJ5IGdvb2QgbGF3eWVycyB3aG8gbWFrZSBzdXJlIGhlIGRvZXNuJ3QgY29tZSBhbnl3aGVyZSBuZWFyIHRoZSBtYXJnaW5zIG9mIGltcHJvcHJpZXR5LiJVbmlvbiBkdWVzIGNhbid0IGdvIGZvciBkaXJlY3QgcG9saXRpY2FsIGNvbnRyaWJ1dGlvbnMsIGJ1dCB1bmlvbiBmdW5kcyBjYW4gZ28gdG8gcG9saXRpY2FsIGFjdGlvbiBjb21taXR0ZWVzIChQQUNzKSwgd2hpY2ggc3VwcG9ydCBjYW1wYWlnbnMuU28gdGhlIG1vcmUgdGhhbiAkMS41IG1pbGxpb24gaW4gMjAxNSBzdXBwb3J0IHRvIERvdWdoZXJ0eSdzIGJyb3RoZXIgS2V2aW4ncyBzdWNjZXNzZnVsIGNhbXBhaWduIHRvIGJlY29tZSBhIFBlbm5zeWx2YW5pYSBTdXByZW1lIENvdXJ0IGp1ZGdlIGNhbWUgZnJvbSB0aGUgdW5pb24ncyBQQUMuU3RhcnRpbmcgaW4gMjAxNCwgdGhlIHVuaW9uJ3MgUEFDIGdhdmUgVG9tIFdvbGYgZm9yIEdvdmVybm9yICQxNjAsMDAwIGluIGRpcmVjdCBjb250cmlidXRpb25zIGFuZCBhbm90aGVyICQ0NCwwMDAgaW4gY2FtcGFpZ24gc3VwcG9ydCwgaW5jbHVkaW5nIGNhdGVyaW5nIGFuZCBvZmZpY2Ugc3VwcGxpZXMuQnVpbGRpbmcgYSBCZXR0ZXIgUGVubnN5bHZhbmlhIEZ1bmQgd2FzIGFub3RoZXIgYmlnIGJlbmVmaWNpYXJ5IG9mIExvY2FsIDk4J3MgbGFyZ2Vzc2UuIApIb3cgZ3JpcHBpbmcgYW5kIG1lYW5pbmdmdWwgd2VyZSB0aG9zZSBtb21lbnRzLiAKIlJlZ2FyZGUgY2UgZ2FtaW4sIGMnZXN0IHVuIHBobm9tbmUiLCBhc3N1cmUgY2UgZGVzY2VuZGFudCBkJ0l0YWxpZW5zLCA3NyBhbnMsIHZ0dSBkJ3VuIHN1cnZ0ZW1lbnQgYmxldSBldCBqYXVuZSwgbGVzIGNvdWxldXJzIGRlIEJvY2EgSnVuaW9ycywgc29uIHByaW5jaXBhbCBjbGllbnQuLiAKUmVzcGVjdCBpcyBlYXJuZWQsIG5vdCBhdXRvbWF0aWNhbGx5IGdpdmVuLiBCZWluZyBjaXZpbCB0byBldmVyeW9uZSBpcyBncmVhdCwgYnV0IGJvd2luZyBkb3duIHRvIHRoZSBuZWVkcyBvbiBhbiBvbGQgbGFkeSB3aGVuIHNoZSB3YXMgaW4gdGhlIHdyb25nIGlzIGluY29ycmVjdCAoaW4gbXkgb3BpbmlvbikuCkp1c3QgZml2ZSBkYXlzIGFmdGVyIGhpcyBpbnRlcnJvZ2F0aW9uLCBFcm5pZSBTY2hlcmVyIGhpdCB0aGUgb3BlbiByb2FkIGZvciBwYXJ0cyB1bmtub3duLiAiRGlkIGhlIHNheSB3aGVyZSBoZSB3YXMgZ29pbmc/ICIgUGV0ZXIgVmFuIFNhbnQgYXNrZWQgRXJuaWUncyB3aWZlLCBSb2J5bi4gIk5vLCBoZSBqdXN0IHNhaWQgaGUgaGFkIHRvIGdyaWV2ZSwgIiBzaGUgcmVwbGllZC4gRXJuaWUgdG9vayBvZmYgaW4gaGlzIGRhZCdzIGNhciBsZWF2aW5nIGJlaGluZCB0aGUgcmVkIENhbWFybyBjb3BzIGJlbGlldmUgaXMgc2VlbiBvbiB0aGlzIHN1cnZlaWxsYW5jZSB2aWRlby4gV2hlbiBjb3BzIHNlYXJjaCBFcm5pZSdzIENhbWFybyBmb3IgZXZpZGVuY2UsIHRoZXkgbGVhcm4gaGUgaXMgb25lIHN0ZXAgYWhlYWQgb2YgdGhlbS4KT25lIG9mIHRoZSBmaXJzdCB0aGluZ3MgU3RhbGluLCBIaXRsZXIsIE1hbyBhbmQgb3RoZXIgdG90YWxpdGFyaWFucyBkaWQgZHVyaW5nIHRoZWlyIHJlaWduIHdhcyByZXdyaXRlIHRoZSBoaXN0b3JpZXMgb2YgdGhlaXIgbmF0aW9ucywgcmVtYWtpbmcgdGhlIHBhc3QgdG8gZm9zdGVyIHRoZWlyIGNvbnRyb2wgb2YgdGhlIHByZXNlbnQuCk1hcnJpYWdlIG9uIHRoZSByb2Nrcz8gSG9uZXltb29uIGJ5IHRoZSBiZWFjaDogTWFsYXlzaWEgc3RhdGUgb2ZmZXJzIGZyZWUgdmFjYXRpb25zIHRvIGNvdXBsZXMuCkwzIFcxNSAgMjUsNzM4IHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KWW91IGFsc28gaGF2ZSB0byBjb252aW5jZSBhIGxvdCBvZiBkZXZzIHRvIGFjdHVhbGx5IGJ1aWxkIHRoZSBjaGFuZ2UgaW50byB0aGVpciBiaXRjb2luIGNsaWVudC4gWW91IGhhdmUgdG8gZ2V0IHRoZSBleGNoYW5nZXMsIGhhcmR3YXJlIHdhbGxldCBwZW9wbGUsIG1lcmNoYW50cywgZXRjLiB0byBhbHNvIHJ1biB0aGF0IG5ldyBjb2RlLgpUaGV5IGRvbiBnZXQgc2hpdCBiZWNhdXNlIHBlb3BsZSB0cnkgdG8gcmVtZW1iZXIgdGhlbSBmb3IgdGhlIGdvb2Qgc3R1ZmYgdGhleSBkb25lLiBEYW5pZWwgZG9uZSBzb21lIGdvb2QgZm9yIHBva2VyLiAKVGVycmUgZG9sdHJlcG8gICBjYW50aW5hIGRpIGNhc3RlZ2dpbyBhIHdpbmUgbWFraW5nIGNlbnRyZSBpbi4gClNlY3JldGFyeSBvZiBTdGF0ZSBNYXJrIE1hcnRpbiBpc3N1ZWQgYSBkZWNsYXJhdGlvbiBsYXN0IFRodXJzZGF5IGZpbmRpbmcgdGhlIGJhbGxvdCB0aXRsZSB0byBiZSBzdWZmaWNpZW50IGFuZCBkaXNtaXNzZWQgdGhlIGNvbXBsYWludCBmcm9tIGhpcyBvZmZpY2UuIApGaW5kIGEgYm9hcmQgZ2FtZSB0aGUgdHdvIG9mIHlvdSBsaWtlIHRvIHBsYXkgdG9nZXRoZXIgICBpdCBoZWxwcyBpZiBpdCBoYXMgYSB0aGVtZSB5b3UgYm90aCBvciBleHBhbnNpb25zIHRoYXQgbWFrZSBpdCBhbiBvbmdvaW5nIHRoaW5nLiAKTWF5YmUgaWYgeW91IGZseSBzb21ld2hlcmUgZGlmZmVyZW50IChvciBqdXN0IG1lZXQgZGlmZmVyZW50IGZsaWdodCBhdHRlbmRhbnRzIHRvIG1lKSwgeW91IG5vdCBnZXQgcXVlc3Rpb25lZCBhYm91dCBmbGlnaHQgdGlja2V0cy4gCk15IGV4IGRpZCB0aGUgc2FtZSB0aGluZywgdHdvIHNlcGFyYXRlIGluY2lkZW50cyAgSSBmb3VuZCBhbm90aGVyIGdpcmwncyB0aG9uZyBpbiBoaXMgYmVkc2hlZXRzLCBhbmQgdGhlbiBhIGdpcmwgbWVzc2FnZWQgbWUgYXBvbG9naXppbmcgZnJhbnRpY2FsbHkgdGhhdCBzaGUgZGlkbid0IGtub3cgaGUgd2FzIGluIGEgcmVsYXRpb25zaGlwLiAKSXQgd2lsbCBiZSBkZWZlYXRlZCBieSBBbWVyaWNhLCB0aGUgRWFzdCBBc2lhbiBhbGxpYW5jZSwgRWFzdGVybiBFdXJvcGVhbiBhbGxpYW5jZSwgYW5kIHR1cmtleS4gCkhvbmVzdGx5LCBJIHRoaW5rIHlvdSBndXlzIHNvbHZlZCBpdC4gSSBzdG9wcGVkIGV4Zm9saWF0aW5nIGEgeWVhciBvciB0d28gYWdvIHdoaWxlIEkgd2FzIHRyeWluZyB0byBnZXQgbXkgYWNuZSB1bmRlciBjb250cm9sLCBhbmQgaXQgc2VlbWVkIHRvIGhlbHAuIEkgdGhpbmsgSSBuZWVkIHRvIGJyaW5nIGl0IGJhY2sgYW5kIGZpbmQgb25lIHRoYXQgd29ya3MgZm9yIG1lLgpUaGF0IGFuZCB0aGVyZSB3aWxsIGFsd2F5cyBiZSBjZXJ0YWluIGdhcHMgeW91IGNhbiBmaWxsIHdpdGggYW55dGhpbmcgZXhjZXB0IHNvbWV0aGluZyB3aGV0aGVyIHlvdSBsaWtlIHRoYXQgd29yZCBvciBub3QuLiAKVGhpcyBpbmxheSBpcyBhY3R1YWxseSBpbmZ1c2VkIG9udG8gdGhlIGNoaXAgZmFjZSBtYWtpbmcgaXQgcGFydCBvZiB0aGUgY2hpcCwgYW5kIG5vdCBzb21lIHN0aWNrZXIgb3IgaW1wcmVzc2lvbiB0aGF0IHdpbGwgd2VhciBvZmYgd2l0aCB0aW1lLiBUbyBtYWludGFpbiB0aGF0IGJlYXV0aWZ1bCBjYXNpbm8gbG9vayBlYWNoIGNoaXAgaGFzIHRoZSBtdWx0aWNvbG9yZWQgZWRnaW5nIHRoYXQgeW91IHdvdWxkIHNlZSBpbiBjYXNpbm8gY2hpcHMuIEVhY2ggNTAwIFBhdWxzb24gVG9waGF0IGFuZCBDYW5lIFBva2VyIENoaXAgU2V0IGFsc28gY29tZXMgd2l0aCBhIGx1eHVyaW91cyBtYWhvZ2FueSBjYXNlLgpFdmVuIGlmIHRoZXkgYXJlIHRlY2huaWNhbGx5IGZyb20gYSBzb3VyY2Ugb3RoZXIgdGhhbiBUaGUgT25pb24sIGFueSBhcnRpY2xlIHN1Ym1pc3Npb24gd3JpdHRlbiBhcyBzYXRpcmUgb3IgZXZlbiB0cnVlIHN0b3JpZXMgd3JpdHRlbiBpbiBhIHNhdGlyaWNhbCBtYW5uZXIgYXJlIG5vdCBhbGxvd2VkLiBQbGVhc2Ugbm90ZSB0aGF0IHNvbWUgbWFqb3IgbmV3cyBvdXRsZXRzIGhhdmUgc2F0aXJpY2FsIHNlY3Rpb25zLCBzdWNoIGFzIHRoZSBCb3Jvd2l0eiBSZXBvcnQgb24gdGhlIE5ldyBZb3JrZXIsIHdoaWNoIGFyZSBhbHNvIG5vdCBhbGxvd2VkLiAKQ29tbXVuaXR5LCBJbmNsdXNpb25zIGFuZCBEZXZlbG9wbWVudCwgcGlvbmVlcmluZyBldmVudHMgaW4gdGhlIFNwb3J0IFNoZWZmaWVsZCBjb21tdW5pdHkuCldobyB1bmRlcnN0YW5kcyB0aGVzZSB0aGluZ3M/IEkgZGlkbiBhbmQgSSBkb24gbm93LiBJIGRpZG4gbWFrZSBhIGxvdCBvZiBpdCBhdCB0aGUgdGltZSBhbmQgSSBkb24gbm93LiBJIHdpc2ggSSBrbmV3IHdobyBkaWQgaXQgYW5kIHdoeSwgYnV0IEkgaGF2ZSBubyBpZGVhLiIuIApUaGF0IHN0YXllZCBjb25zaXN0ZW50IHRocm91Z2ggdGhlIHllYXJzLCBoZSBzYWlkLkVhY2ggb2YgdGhlIGhvc3RzIHNhaWQgUGFkZG9jayBuZXZlciBzaGFyZWQgbXVjaCBhYm91dCBoaXMgbGlmZSBhbmQga2VwdCB0aGUgdGFsayBtb3N0bHkgdG8gZ2FtYmxpbmcuUGFkZG9jayB0d2ljZSB3b24gY29udGVzdHMgd2l0aCBiaWcgcGF5b3V0cy4gCllvdSB3b24gbmVlZCB0aGUgMTAwMCBjaGlwcyB3aXRoIGEgMTUwMCBzdGFjay4gQXQgMTUgbWluIHlvdSBtYXkgbm90IGdldCBhIGZ1bGwgb3JiaXQgb2YgdGhlIGJ1dHRvbiBpbiBhIGxpdmUgZ2FtZSwgZGVwZW5kaW5nIG9uIHRoZSBwYWNlIG9mIHlvdXIgZ2FtZS4gCkppbTogWWVhaCB0aGVyZSB3YXMuIApHRiB3aWxsIGJlIG1vdGl2YXRlZCB0byBkbyBldmVyeXRoaW5nIHNoZSBjYW4gdG8gImZpeCIgaGVyIGJveWZyaWVuZCByZWxhdGlvbnNoaXAgd2l0aCBoaXMgbW9tICAgaXQganVzdCBhIG1pcyB1bmRlcnN0YW5kaW5nLi4gCkknbSBsaXRlcmFsbHkgc2l0dGluZyBpbiB0aGUgZXhhY3Qgc2FtZSBzaXR1YXRpb24gcmlnaHQgbm93LiAKSXQgaXMgdmVyeSBzdHJlbnVvdXMgYW5kIGlzIGNoYWxsZW5naW5nIGF0IHRpbWVzIGJ1dCBkZWZpbml0ZWx5IGRvYWJsZS4gClBva2VyIGFzIGEgc3VwcGxlbWVudGFyeSBpbmNvbWUKIkl0IHRha2VzIGZvcmVzaWdodCB0byBiZSBhYmxlIHRvIHNlZSBzb21ldGhpbmcgYXMgYSBsYW1wLCIgU3RydW1pbmdlciBzYWlkLiAiWW91IGhhdmUgdG8gYmUgZWdvdGlzdGljYWwgdG8gZG8gdGhpcy4gWW91IGhhdmUgdG8gdGhpbmsgc29tZXRoaW5nIG9mIHlvdXJzZWxmIGluIG9yZGVyIHRvIGJlIGFibGUgdG8gY3JlYXRlIHNvbWV0aGluZy4iClVzaW5nIGFuIGVhcmxpZXIgZXhhbXBsZSBpbiB0aGlzIGFydGljbGUsIGFzc3VtZSB5b3UgaGF2ZSBhIHBhaXIgb2YgYWNlcywgYW5kIHlvdSBwbGFjZSBhICQxMDAgYmV0IGFuZCBvbmUgcGxheWVyIGNhbGxzIHdpdGggQUsuIFRoZSB3YXkgdG8gZGV0ZXJtaW5lIHlvdXIgRVYgaXMgYXMgZm9sbG93czogUHV0IHlvdXJzZWxmIGluIHRoaXMgc2l0dWF0aW9uIDEwMCB0aW1lcy4gCkV2ZXJ5IG1vbnRoIHRoYXQgdGhlIG5lZ290aWF0aW9ucyBkcmFnZ2VkIG9uLCB0aGUgcmViZWxzIGJlY2FtZSB3ZWFrZXIgYW5kIG1pbGxpb25zIG9mIHJlZnVnZWVzIGJlY2FtZSBtb3JlIGRlc3BlcmF0ZS4gIlRoZSBVUyBhbmQgUnVzc2lhIGhhdmUgYWdyZWVkIG9uIHN0ZXBzIHdoaWNoIHdlIHdpbGwgdGFrZSwgcHJvdmlkaW5nIHRoZXJlIGlzIGEgc3VzdGFpbmVkIHBlcmlvZCBvZiByZWR1Y2VkIHZpb2xlbmNlLCIgS2VycnkgY2xhaW1lZC4gWWV0LCB0aGUgU3lyaWFuIHJlZ2ltZSBkb2VzIG5vdCByZWR1Y2UgdmlvbGVuY2UsIGFuZCBmaXZlIHllYXJzIGhhdmUgcHJvdmVkIHRoYXQuLiAKVGhlIFBlZXIgUmV2aWV3IHByb2Nlc3MgaGFzIGZvdXIgbWFpbiBzdGVwczpXcml0ZSBZb3VyIEVudHJ5ICAgYSBSZXNlYXJjaGVyIHdyaXRlcyBhbiBFbnRyeSB0aGF0IGlzIHN1aXRhYmxlIGZvciB0aGUgRWRpdGVkIEd1aWRlOiB0aGUgQXBwcm92ZWQgdmVyc2lvbiBvZiBoMmcyLlN1Ym1pdCBZb3VyIEVudHJ5ICAgdGhlIFJlc2VhcmNoZXIgc3VibWl0cyB0aGVpciBFbnRyeSB0byBQZWVyIFJldmlldy5HZXQgQWNjZXB0ZWQgICB0aGUgRW50cnkgaXMgUGlja2VkIGJ5IGEgU2NvdXQsIGFjY2VwdGVkIGJ5IHRoZSBoMmcyIEd1aWRlIEVkaXRvcnMgYW5kIGhlYWRzIG9mZiBmb3IgaW5jbHVzaW9uIGluIHRoZSBBcHByb3ZlZCB2ZXJzaW9uIG9mIHRoZSBzaXRlLlBlZXIgUmV2aWV3IGlzIG5vdCB0aGUgcGxhY2UgZm9yIEVudHJpZXMgdGhhdCBhcmUgdW5maW5pc2hlZCwgd29ya3MgaW4gcHJvZ3Jlc3MsIHJhbnRzLCBmaWN0aW9uLCBvbmUgbGluZXJzLCBqb2tlcyBvciBwZXJzb25hbCB0aGVvcmllcy5Xcml0aW5nIGFuIEVudHJ5SWYgeW91J3JlIHdyaXRpbmcgYW4gRW50cnkgZm9yIFBlZXIgUmV2aWV3LCBpdCBuZWVkcyB0byBiZSBzdWl0YWJsZSBmb3IgaW5jbHVzaW9uIGluIHRoZSBBcHByb3ZlZCBwYXJ0IG9mIHRoZSBzaXRlLiAKIHVtIG1vbWVudG8gcGFyYSBvcyBjcmlzdG9zIGNlbGVicmFyIGEgdmlkYSBlIGEgcmVzc3VycmVpbyBkZSBKZXN1cyBDcmlzdG8uIApQb3N0bWVkaWEgd2FudHMgdG8gaW1wcm92ZSB5b3VyIHJlYWRpbmcgZXhwZXJpZW5jZSBhcyB3ZWxsIGFzIHNoYXJlIHRoZSBiZXN0IGRlYWxzIGFuZCBwcm9tb3Rpb25zIGZyb20gb3VyIGFkdmVydGlzZXJzIHdpdGggeW91LiBUaGUgaW5mb3JtYXRpb24gYmVsb3cgd2lsbCBiZSB1c2VkIHRvIG9wdGltaXplIHRoZSBjb250ZW50IGFuZCBtYWtlIGFkcyBhY3Jvc3MgdGhlIG5ldHdvcmsgbW9yZSByZWxldmFudCB0byB5b3UuIFlvdSBjYW4gYWx3YXlzIGNoYW5nZSB0aGUgaW5mb3JtYXRpb24geW91IHNoYXJlIHdpdGggdXMgYnkgZWRpdGluZyB5b3VyIHByb2ZpbGUuClRoaXMgZ2FtZSBpcyBwbGF5ZWQgd2l0aCBhIDUyIGNhcmQgZGVjayBhbmQgaXMgcGxheWVkIGJldHdlZW4gYSBkZWFsZXIgYW5kIGEgc2luZ2xlIHBsYXllci4KTWlqbiB6b29uIGlzIHZhbiB6aWpuIDYgamFhciBhbCBpbiBiZWhhbmRlbGluZywgaGlqIGhlZWZ0IGRlIHp3YWFyc3RlIHZvcm0gdmFuIEFESEQuIEhpaiBoZWVmdCBuaWV0cyBhbmRlcnMgZ2VrZW5kIGRhbiBpbiBpbnN0ZWxsaW5nZW4gd29uZW4gZW4ga2VudCBnZWVuIGdlemluIG9mIHdhcm1lIHRodWlzLiIuIAoxLiBJIGRvbiB0aGluayB1bml2ZXJzaXR5IHNob3VsZCBoYXZlIHRvIGFsbG93IHVubGltaXRlZCBmcmVlIHNwZWVjaCB0aGUgcG9pbnQgb2Ygc2Nob29sIGlzIHRvIGxlYXJuIGZhY3RzIG5vdCBkZWJhdGUgdGhlbSwgaWYgeW91IHdhbnQgdG8gZ28gdG8gYSBtb3JlIG9wZW4gbWluZGVkIG9yIGNvbnNlcnZhdGl2ZSBzY2hvb2wgeW91IGNhbiBkbyB0aGF0LiBUaGVyZSBpcyBsaXRlcmFsbHkgbm8gZWR1Y2F0aW9uYWwgdmFsdWUgaW4gZGViYXRpbmcgZmxhdCBlYXJ0aCBvciBjcmVhdGlvbmlzdCB0aGVvcnkgYW5kIGFsc28gbm90IHByb2R1Y3RpdmUgZm9yIHNlbWluYXJpZXMgdG8gYmUgZm9yY2VkIHRvIGhvc3QgUmljaGFyZCBEYXdraW5zLCBob3dldmVyIGVhY2ggb25lIG9mIHRoZXNlIGluc3RpdHV0aW9ucyBoYXMgdmFsdWUuIApTb21lIHJlbGlnaW9ucyBpbiBwYXJ0aWN1bGFyIHJlcXVpcmUgd29yc2hpcCBhcyBhIHdheSBvZiBlbnRlcmluZyBoZWF2ZW4sIGFuZCB3aGF0IGtpbmQgb2YgYmVpbmcgd291bGQgY29uZGVtbiBhIGdvb2QgcGVyc29uIHRvIGFuIGV0ZXJuaXR5IG9mIHN1ZmZlcmluZyBiZWNhdXNlIHRoZXkgZGlkbiBmYWxsIHRvIHRoZWlyIGtuZWVzIGFuZCBiZWcgZm9yIGl0IGNvbnNpc3RlbnRseT8gQW5kIHdoYXQgc29ydCBvZiBoZWF2ZW4gd291bGQgdGhpcyBiZWluZyBoYXZlIGNyZWF0ZWQ/LiAKVGhlcmUncyBubyBxdWVzdGlvbiBiZXR3ZWVuIHRoZSBpbnRlbnNlIHBhaW4gYW5kIGludGVuc2UgcHJlc3N1cmUgdGhhdCBnb2VzIGFsb25nIHdpdGggaXQuIApObywgbW9zdCBEZW1zIHN0aWxsIGFyZW4gImxlZnRpc3RzIiwgZXZlbiBpbiB0aGUgQW1lcmljYW4gY29udGV4dC4gU2FuZGVycywgQU9DLCBhbmQgdGhlIGxpa2UsIHN1cmUgKHRob3VnaCBTYW5kZXJzIGFsc28gaXNuIGEgRGVtb2NyYXQuKSwgYnV0IG5vdCBtb3N0IG9mIHRoZSBwYXJ0eS4gbXkgZmFjdHMgYXJlIHJpZ2h0IHlvdSBoYXZlIHRvIGRpc3Byb3ZlIHRoZW0pLiBCdXQuIEkgYW0ganVzdCBjdXJpb3VzIGFzIHRvIHlvdXIgcmVzcG9uc2UgdG8gdGhpcyBvbmUueW91IHRydWx5IGZlZWwgdGhhdCB0aGUgcmFuZ2Ugb2Ygb3V0Y29tZXMgZnJvbSBDQUdXIGlzIGJldHdlZW4gInZlcnkgYmFkIiBhbmQgImZ1Y2tpbmcgaG9ycmlmaWMiIHRoZW4gd2h5IGRvIHlvdSBmZWVsIHRoYXQgd2F5PyBJcyB0aGVyZSBvbmUgc3BlY2lmaWMgc3R1ZHkgdGhhdCB5b3UgdGhpbmsgYWJvdXQgb3IgcG9pbnQgdG8/IE9yIGlzIHRoZXJlIG9uZSBvcGluaW9uIG9yIHBvaW50IG9mIHZpZXcgdGhhdCByZWFsbHkgc3RpY2tzIG91dD90aGluayB0byBzYXkgdGhhdCBhbGwgcHJveGllcyBhcmUgInNheWluZyB0aGUgc2FtZSB0aGluZyIgaXMgZmxhdCBvdXQgd3JvbmcuIApUaGF0IHRoZSBwYXJ0IEkgcmVhbGx5IGZhaWxlZCBvbiBpbiBteSB0cmlwLCBhbmQgYmVpbmcgaW4gYSBob3N0ZWwgb25seSBleGFjZXJiYXRlZCBpdCBiZWNhdXNlIEkgc3RpbGwgZGlkbiBpbnRlcmFjdCwgb25seSBub3cgSSBmZWx0IGxpa2UgSSB3YXMgYSBmYWlsdXJlIGZvciBpdCByYXRoZXIgdGhhbiBqdXN0IGEgc29sbyB0cmF2ZWxlciBsYWNraW5nIG9wcG9ydHVuaXRpZXMuIEluIG15IGNhc2UsIEkgd2FudCB0byBpbnRlcmFjdCB3aXRoIG90aGVycyBhbmQgbWVldCBuZXcgcGVvcGxlLCBidXQgSSBhbHNvIGtpbmQgb2YgZW1iYXJyYXNzZWQvYXdrd2FyZCBhcm91bmQgc3RyYW5nZXJzLCBzbyBpdCBjYW4gYmUgZGlmZmljdWx0IG9yIHVucGxlYXNhbnQuIApVbiBhdXRyZSBncm91cGUgZGUgbmV1ZiBib3VsZWF1eCBzb250IHBsYW50cyBlbiByYW5nLiAKIkl0J3MgdmVyeSBuaWNlIHRvIGJlIGJhY2sgaW4gU2luZ2Fwb3JlIGFuZCBJJ20gdmVyeSwgdmVyeSBoYXBweSB3aXRoIHRoZSBtYXRjaCB0b25pZ2h0LCB3aXRoIHRoZSBwZXJmb3JtYW5jZSB0b25pZ2h0LCIgU3ZpdG9saW5hIHRvbGQgdGhlIGNyb3dkLiAiSSBoYWQgdG8gc3RheSBmb2N1c2VkIGFuZCBiZSBzdHJvbmcgbWVudGFsbHkuIEkgaGFkIHRvIHBsYXkgcXVpY2tseSBhbmQga2VlcCBtb3ZpbmcgbXkgZmVldCBzbyBJIG5lZWQgYSBtYXNzYWdlIG5vdy4KSC4gTHlubiBDaGFwZWwgb2YgQ2Fyc29uIEZ1bmVyYWwgSG9tZXMuLiAKV2UgdGhlbiBjb250YWN0ZWQgdGhlIFNoZXJpZmYgT2ZmaWNlIHRvIHJlcG9ydCB3aGF0IHdlIGhhZCBzZWVuIGFuZCBqdXN0IGEgZmV3IGRheXMgbGF0ZXIgdGhleSBidXN0ZWQgdGhyZWUgYmFycywgaW5jbHVkaW5nIFBsYXllcnMuLiAKSG93ZXZlciB0aGV5IGVuZCB1cCB3aXRoIGFsbCB0aGUgY2hpcHMgYnkgdGhlIHRpbWUgdGhlIGdhbWUgYnJlYWtzLiAKVGhhdCdzIHJpZ2h0ICAgODAgcGVyY2VudCBvZiB0aGUgdGltZSwgdGhleSdyZSBzcGVjdGF0b3JzLiAKV2UgcmVzZXJ2ZSBhbGwgcmlnaHRzIG5vdCBleHByZXNzbHkgZ3JhbnRlZCB0byB5b3UgYnkgdGhlc2UgVGVybXMuIApJdCBhbHdheXMgYSBzaGl0eSBzaXR1YXRpb24gYmVjYXVzZSBldmVyeWJvZHkgaXMgaHVtYW4sIHdlIGFsbCBwcm9uZSB0byBtYWtlIHJhc2ggZGVjaXNpb25zIHRoYXQgYXJlIGZhbGxpYmxlIGFuZCB3cm9uZyBiYXNlZCBvbiBlbW90aW9uLiBBZHJlbmFsaW5lIGlzIGEgaGVsbCBvZiBhIGRydWcuIApXb3JsZCBQb2tlciBUb3VyIGhpZ2ggc3Rha2VzIHBva2VyIC4gc3RhcnRlZCBhIC4gaW4gdGhlIHdheSB0aGUgZ2FtZSBpcyB2aWV3ZWQsIGVuam95ZWQsIGZvbGxvd2VkIGFuZCBwbGF5ZWQuIEV2ZW4gdGhvdWdoIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgaGFkIGJlZW4gLiB5ZWFycyBiZWZvcgpJIHJlYWxpemUgdGhhdCBJIGFtIHRoZSB1bnBvcHVsYXIgb25lIGhlcmUuIEJ1dCBubyBvdGhlciBjaG9pY2U/IExhdW5jaCB0aGUgZGVhdGggcHVuY2ggYmVjYXVzZSB5b3Ugd2FybmVkIGhpbSBhIGZldyB0aW1lcz8gSSBkb24gdGhpbmsgdGhpcyBpcyBiZWNhdXNlIG9mIGNpcmN1bXN0YW5jZXMgSSB0aGluayBpdCBiZWNhdXNlIHRoaXMgYmVoYXZpb3IgaGFzIGJlY29tZSBwb3B1bGFyaXplZC4gClRoZXkgd2VyZSBhbGwgYXQgbGVhc3QgYWNjZXB0YWJsZSAobm9uZSB3ZXJlIHVuYXR0cmFjdGl2ZSksIGFsbCB3ZXJlIHlvdW5nICh0aGUgcGFwYXNhbiB0b2xkIG1lIGV2ZXJ5b25lIG91dHNpZGUgdGhlIGZpc2hib3dsIGlzIDE4IDIwLCB3aGlsZSB0aGUgZmlzaGJvd2wgZ2lybHMgd2VyZSAyMCspLCBhbmQgc2V2ZXJhbCB3ZXJlIGhvdC4gSSBoYWQgdG8gbWFrZSB0aHJlZSBjaXJjdWl0cyBvZiB0aGUgcm9vbSBiZWZvcmUgSSBjb3VsZCBjaG9vc2UuIDEwLzEwLiAKQW1lcmljYW5zIHJlYWxseSBkb24gd2FudCB0byBhZG1pdCB0aGF0IHdlIHN0aWxsIHBhcnRpY2lwYXRlIGluIGJvdGggdGhlIGlkZW9sb2d5IG9mIGV1Z2VuaWNzIGFuZCB0aGUgcHJhY3RpY2Ugb2YgaXQgdGhyb3VnaCBtZWRpY2luZS4gVGhlIGlkZW9sb2d5IG9mIGV1Z2VuaWNzIHNhaWQgdHJhaXRzIHN1Y2ggYXMgaW50ZWxsaWdlbmNlIG9yIG11c2ljYWwgc2tpbGxzIGFyZSBpbmhlcml0YWJsZSBhcyBvcHBvc2VkIHRvIHRoZSByZXN1bHQgb2YgdXBicmluZ2luZy4gQXMgd2UgYWxsIGtub3csIEFtZXJpY2FucyBhcmUgaGVsbGJlbnQgb24gZmluZGluZyB0aGUgc3VwcG9zZWQgZ2VuZXRpYyBjYXVzZSBmb3IgZXZlcnl0aGluZyBmcm9tIGhvbW9zZXh1YWxpdHkgdG8gc2h5bmVzcyB0byBhdGhsZXRpYyBhYmlsaXR5LgpXZSBoYXZlIHRoZSBjb21pY3MgKGtpbmRhKSBhbmQgdGhlIHNob3J0cyBhcyB0cnVlIGxvcmUsIGV2ZXJ5dGhpbmcgZWxzZSBpcyBxdWVzdGlvbmFibGUuSSB0aGluayBzb21lIHNvcnQgb2YgT3ZlcndhdGNoIGRhdGFib29rIHdvdWxkIGJlIGF3ZXNvbWUgaWYgZG9uZSBjb3JyZWN0bHksIGNvdWxkIGNvbnRhaW4gYWxsIGNvbWljcyB0byBkYXRlIGFzIHdlbGwgYXMgbW9yZSBpbiBkZXB0aCBjaGFyYWN0ZXIgYmlvcyB3aXRoIG5ldyBsb3JlLCBhIGZhbWlseSB0cmVlIHR5cGUgdGhpbmcgdGhhdCBzaG93cyBob3cgZWFjaCBjaGFyYWN0ZXIgY29ubmVjdHMgdG8gZWFjaG90aGVyIGFzIHdlbGwgYXMgbWF5YmUgYmVoaW5kIHRoZSBzY2VuZXMgc2VjdGlvbnMgZm9yIGFuaW1hdGVkIHNob3J0cy4gSSB0aGluayBpdCBzZWxsIGEgdG9uIGlmIHRoZXJlIHdhcyBlbm91Z2ggcHJvbW90aW9uLkhlIGlzIHNvIHN1Ym1pc3NpdmUgd2hlbiBpdCBjb21lcyB0byB0aGUgbG9yZSwgaXQgYXMgaWYgaGUgaGltc2VsZiBoYXMgbm8gaWRlYSBhYm91dCB3aGF0IGlzIHRvIGJlIHRha2VuIHNlcmlvdXNseSBvciBub3QuIEl0IG15IGJpZ2dlc3QgcHJvYmxlbSB3aXRoIHRoZSBsb3JlIHRvIGJlIGhvbmVzdC5yY292NTI1ICAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxIHllYXIgYWdvWWVzdGVyZGF5IEkgd2F0Y2hlZCBhbiBPV0wgbWF0Y2ggZm9yIHRoZSBmaXJzdCB0aW1lLCBteSBmaXJzdCBwcm8gT3ZlcndhdGNoIGV4cGVyaWVuY2UuIApHZW5lcmFsbHksIGZvciB3b21lbiwgdGhlIHBsZWFzdXJlIGRlcml2ZWQgZnJvbSBhbmFsIGludGVyY291cnNlIGlzIGR1ZSB0byB0aGUgc2hhcmVkIG5lcnZlIGVuZGluZ3MgbG9jYXRlZCBiZXR3ZWVuIHRoZSByZWN0YWwgd2FsbCBhbmQgdGhlIHZhZ2luYSwgYW5kL29yIGZyb20gaW5kaXJlY3Qgc3RpbXVsYXRpb24gb2YgdGhlIEcgc3BvdC4gCldlbGwgZmVkIGluIEVkbW9udG9uCldoaWxlIHRoZSB0d28ga25vdyB0aGUgaGFyZCB3b3JrIGFuZCBzYWNyaWZpY2VzIHRoZXkndmUgZW5kdXJlZCBpbiBhbmQgb3V0IG9mIHRoZSByaW5nLCB0aGV5IGVxdWFsbHkgc2hhcmUgcGFzc2lvbnMgZm9yIHBva2VyIGFuZCBtb3RvcnNwb3J0cywgYSBiaWcgZmFjdG9yIGluIGNvbGxhYm9yYXRpbmcgb24gcHJvamVjdHMgb3V0c2lkZSBvZiBib3hpbmcuIFdoZW4geW91IGxvb2sgYXQgdGhlIHNjb3BlIG9mIHRoZSBLd2FuIG9mZmljZSwgeW91IGFyZSBxdWlja2x5IHJlbWluZGVkIGJ5IHRoZSBkaXZlcnNpdHkgaW4gYWxsIHRoYXQgaXQgcmVwcmVzZW50cy4gUmF0aGVyIHRoYW4gc2VlaW5nIHByb21pbmVudCBib3hpbmcgY29tcGFuaWVzIGRpc3BsYXllZCBmcm9tIHdhbGxzIGFuZCByYWZ0ZXJzLCB5b3Ugc2VlIG1ham9yIGF1dG9tb3RpdmUgaW5mbHVlbmNlcyAgIHRvIHRoZSB0dW5lIG9mIEFlcm9tb3RpdmUgRnVlbCBTeXN0ZW1zLCBhIHNwb25zb3Igb2YgQ2hyaXN0aW5hJ3MgMTggZm9vdCAxMzAwIGhvcnNlcG93ZXIgZHJhZyBib2F0IHRoYXQgc2hlIHdpbGwgcmFjZSBpbiB0aGUgdGVsZXZpc2VkIEx1Y2FzIE9pbCBzZXJpZXM7IFNFTUEsIHdoZXJlIENocmlzdGluYSBpcyBjdXJyZW50bHkgc2VydmluZyBoZXIgdGhpcmQgZWxlY3RlZCB0ZXJtIHRvIHRoZSB3b21lbidzIGJvYXJkOyBhbmQgU3dpc3N0cmF4LCBSYWNlIFJhbXBzIGFuZCBUUkUgUmFjaW5nLiAKU28gbXkgcXVlc3Rpb24gaXMgc2luY2UgeW91IGFyZSBzbyB5b3VuZyBmb3IgdGhlIGZpZWxkIGRvIHlvdSBkZWZpbmUgYW4gYW50aXF1ZSBhcyBhIDIwIDUwIHllYXIgb2xkIG1hc3MgcHJvZHVjZWQgaXRlbXMgb3IgdGhlIG1vcmUgdHJhZGl0aW9uYWwgMTAwIHllYXIrIGhhbmQgY3JhZnRlZCBpdGVtcz8gSXQganVzdCBzZWVtcyB0aGF0IHRoZSBlbmQgbWFya2V0IGZvciB3aGF0IHVzZWQgdG8gYmUgY29uc2lkZXJlZCAiSGlnaCBlbmQiIGFudGlxdWVzIGhhcyBhbGwgcGFzc2VkIGF3YXkgb3IganVzdCBwbGFpbiBvbGQgZG9lc24ndCBleGlzdC4gCkluIEFmcmljYSBhbmQgc29tZSBwbGFjZXMgaW4gcnVyYWwgQ2hpbmEgeW91ciBraWRzIGhhdmUgZm9yIHRoZSBtb3N0IHBhcnQgdW50aWwgdmVyeSB2ZXJ5IHJlY2VudGx5IGhhZCBhIGxvdyBjaGFuY2Ugb2YgbWFraW5nIGl0IHRvIGFkdWx0aG9vZCwgYW5kIHRoZSBvbmUgdGhhdCBkbyBzdXJ2aXZlIGFyZSByYWlzZWQgZm9yIHRoZSBwdXJwb3NlIG9mIGJlaW5nIHlvdXIgcmV0aXJlbWVudCBmdW5kIGluc3RlYWQgb2YgYXMgdGhlaXIgb3duIHBlcnNvbi4KRG9uIHRoaW5rIG9mIGl0IGFzIGFwcGx5aW5nIGFuaW1hbCBjb25jZXB0cyB0byBodW1hbnMuIApUaGUgQW1lcmljYW4gTGVhZ3VlIGlzIGxvb2tpbmcgYSBsaXR0bGUgdG9wIGhlYXZ5IGdvaW5nIGludG8gdGhlIHNlYXNvbi4gVGhlIFdvcmxkIFNlcmllcyBjaGFtcGlvbiBCb3N0b24gUmVkIFNveCBhbmQgdGhlIE5ldyBZb3JrIFlhbmtlZXMgYXJlIGJhc2ViYWxsIGJlc3QgdHdvIHRlYW1zLiBCb3RoIHNob3VsZCB3aW4gaW4gdGhlIG5laWdoYm9yaG9vZCBvZiAxMDAgZ2FtZXMsIGJ1dCB3aWxsIHN1ZmZlciByZWNvcmQgd2lzZSBmcm9tIGhhdmluZyB0byBwbGF5IGVhY2ggb3RoZXIsIGFzIHdlbGwgYXMgYSBzb2xpZCBUYW1wYSBCYXkgUmF5cyB0ZWFtLiAKTW9zdCBpbXBvcnRhbnRseSwgaXQgY29udGFpbnMgYSBydWxlLCBhbHNvIGtub3duIGFzIGFuIHByb3RlY3Rpb24gcnVsZSwgbWVhbnQgdG8gYXNzdXJlIHRoZSBiZXN0IHByaWNlcy4gCk5vdCBpcyBhIGJhZCB3YXkgYnV0IGluIGEsICJPaCB3b3cuIApUaGV5IGRpZCBub3Qgd2FudCB0byBiZSBsb3JkZWQgb3ZlciBieSAiZ3JhbmFkaW5vcyBhbHphZG9zIiBsaWtlIEZyYW5jaXNjbyBkZSBQYXVsYSBTYW50YW5kZXIsIHRoZSBWaWNlIHByZXNpZGVudCBvZiBHcmFuIENvbG9tYmlhLCBsZWZ0IGluIGNoYXJnZSB3aGlsZSBCb2xpdmFyIGNhbXBhaWduZWQgaW4gUGVydS4gR3JhbmFkaW5vcyB3ZXJlIHNlZW4gYnkgVmVuZXp1ZWxhbnMgYXMgY291bnRyeSBidW1wa2lucywgd2hvIGNvdWxkbiBjb21wYXJlIHRvIHRoZWlyIGFyaXN0b2NyYXRpYyBtYW5uZXJzLiAKSSB3aXNoIEkgd2FzIGEgYmFjayBzbGVlcGVyIHNvIEkgY291bGQgdXNlIGEgQ0NGIHBhZC5JIGhpa2UgdGhlIGZpcnN0IDIzMCBtaWxlcyBvZiB0aGUgUENUIGluIGVhcmx5IEphbnVhcnkgYmVmb3JlIHdvcmtpbmcgZm9yIDIgbW9yZSB3ZWVrcy4gVGhlbiBkbyB0aGUgQ29uZG9yIFRyYWlsIGFuZCBnZXQgYm94ZXMgc2V0IHVwIGZvciB0aGUgQVpUL2Nvbm5lY3Rpb24gdG8gdGhlIFBDVC9QQ1QgdG8gaGlrZXIgaGVhdmVuLiAKWW91IGdldCBpbiBpdCB0byB0cmF2ZWwuIApTaWRlIGVmZmVjdHMgZnJvbSBwcm9zdGF0ZSBjYW5jZXIgdHJlYXRtZW50IGFyZSBkaWZmZXJlbnQgZnJvbSBvbmUgbWFuIHRvIHRoZSBuZXh0LiBUaGV5IG1heSBhbHNvIGJlIGRpZmZlcmVudCBmcm9tIG9uZSB0cmVhdG1lbnQgdG8gdGhlIG5leHQuIApMZWdlbmQuTGF0ZXIgSSBwbGF5IG9uZSBvZiB0aGUgYmlnZ2VyIHBvdHMgSSBoYXZlIHBsYXllZCBsaWZldGltZTpMaW1wIFVURywgQ2hpbmVzZSBndXkgbWFrZXMgaXQgMTAwLCBJIGhhdmUgQXNRcyBuZXh0IHRvIGFjdCBhbmQgSSBoYXZlIDEuN0suIApNb3VudCBCZWF1dHlzIG9ubHkgcG9rZXIgbWFjaGluZSB2ZW51ZSBzaHV0cwpJIHN0YW5kIHVwLCBhbGwgNiAyMjAgbGJzIG9mIG1lIGFuZCBzdGFydCB0byB3YWxrIG91dHNpZGUuIAoiU2hlIGRpZG4ndCB3YW50IHRvIGRvIHNvbWV0aGluZyB0b28gc2VudGltZW50YWwuIEFuZCBzaGUgYWxzbyB3YW50ZWQgdG8ga2VlcCBhIGNlcnRhaW4gbGlnaHRbbmVzc10gdG8gdGhlIGZpbG0uIFRoaXMgaXMgc29tZXRoaW5nIHNoZSBjb25zdGFudGx5IG9yaWVudGVkIG15IHBlcmZvcm1hbmNlIHRvLiBNYXliZSBteSBkZWVwIHRlbmRlbmN5IHdvdWxkIGJlIHRvIGRhcmtlbiB0aGluZ3MgYSBsaXR0bGUgYml0LiBBcyBOYXRoYWxpZSBuYXZpZ2F0ZXMgaGVyIGxpZmUgYWZ0ZXIgaGVyIHNwb3VzZSdzIGRlcGFydHVyZSAgIGEgcHJvY2VzcyB0aGF0IGluY2x1ZGVzIGRlZXBlbmluZyBoZXIgdGllcyB0byBoZXIgZmF2b3JpdGUgZm9ybWVyIHN0dWRlbnQsIEZhYmllbiAoUm9tYW4gS29saW5rYSksIGluIGEgbG92ZWx5IGRlcGljdGlvbiBvZiBpbnRlcmdlbmVyYXRpb25hbCBmcmllbmRzaGlwICAgdGhlIGFjdHJlc3MgcGVyZmVjdGx5IGNhbGlicmF0ZXMgaGVyIHJlc3BvbnNlcywgbmV2ZXIgb3ZlcnBsYXlpbmcgdGhlbSB3aGlsZSBidXJyb3dpbmcgZGVlcCBpbnRvIGhlciBjaGFyYWN0ZXIncyBlbW90aW9ucy4gCkkgYmlhc2VkLCBvZiBjb3Vyc2UsIGFuZCBJIHdvbiBkZW55IGl0LiBJIHZvdGVkIGVhcmx5IGZvciBUcnVtcCwgdGhlbiBkZW1vY3JhdGljIGRvd24gdGlja2V0LCBhbGwgYWZ0ZXIgZXh0ZW5zaXZlIGNvbnNpZGVyYXRpb24uIApUTDtEUjogWW91IG1pZ2h0IGFzIHdlbGwgY29tcGxhaW4gdGhhdCB0aGUgVmF0aWNhbiBpcyB1bmNvbnN0aXR1dGlvbmFsbHkgcnVuIGJ5IHRoZSBDYXRob2xpYyBjaHVyY2ggaWYgeW91IGdvaW5nIHRvIGNvbXBsYWluIGFib3V0IFV0YWggYmVpbmcgdW5jb25zdGl0dXRpb25hbGx5IHJ1biBwcmUgMTg5NiwgYmVjYXVzZSBpdCBkb2VzbiBhcHBseSB0byBlaXRoZXIgb2YgdGhlbS4gTm8gb25lIG91dHNpZGUgb2YgdGhlIGNvdW50cnkgZ2l2ZXMgYSBzaGl0IGFib3V0IG91ciBjb25zdGl0dXRpb24ganVzdCBsaWtlIHlvdSBkb24gY2FyZSBhYm91dCBTcGFpbi4gCldlIGRvIG5lZWQgbmV3IG1vZGVscyBmb3Igc3VyZSwgZm9yIGV4YW1wbGUgbXkgZ2YgZGlkIGEgY29kaW5nIGJvb3RjYW1wIGFuZCBnb3QgYSB3ZWxsIHBheWluZyBqb2IgYWZ0ZXJ3YXJkcywgaXQgY29zdCBsaWtlICQxNWssIHRvb2sgMyA0IG1vbnRocz8gYW5kIGFwcGFyZW50bHkgdGhleSBwbGFjZSBsaWtlIDkwJSArIG9mIHRoZWlyIGdyYWR1YXRlcy4KTm90aGluZyBJIGhhdGUgbW9yZSBpbiBsaWZlIHRoYW4gdGhlIGZsaWdodCBiYWNrIGZyb20gVmVnYXMuIEx1Y2tpbHksIEkgaGFkIGFuIGF3ZXNvbWUgdGltZSBvdXQgdGhlcmUsIGFjdHVhbGx5IHdvbiBzb21lIG1vbmV5LCBmb3IgYSBjaGFuZ2UsIGFuZCBwaWNrZWQgdXAgc29tZSBob3Qga25vd2xlZGdlIGZyb20gdGhlIHN0YXJzIGF0IFNob1dlc3QuIEhlcmUgYXJlIHNldmVuIGZyZXNoIGZhY3RvaWRzOiAxLiAKVGhlIE1hc3NhY2h1c2V0dHMgc3RhdGUgdHJlYXN1cmVyIHNodXQgZG93biB0aGUgQ2FzaCBXaW5mYWxsIGdhbWUgYW5kIGNhbGxlZCBmb3IgYW4gaW52ZXN0aWdhdGlvbi4gSXQgd2FzIGxlZCBieSB0aGVuIHN0YXRlIGluc3BlY3RvciBnZW5lcmFsLCBHcmVnIFN1bGxpdmFuLiAKSSB3b3VsZCBjYWxsIHN0cmlwIGNsdWJzIGRvaW5nIG15ICJ0cnVja2VyIHZvaWNlIiAoaXQgd2FzIGNvbnZpbmNpbmcpIGFuZCBhc2sgaG93IHRvIGFwcGx5IHRvIGJlIGEgZGFuY2VyLiAKSSByZW1lbWJlciB0aGVyZSB3YXMgYSB3YXZlIG9mIGV0aG5pY2FsbHkgSmFwYW5lc2UgQnJhemlsaWFucyB3aG8gaW1taWdyYXRlZCB0byBKYXBhbiBpbiB0aGUgMTk5MHMuIApGb3IgYSBxdWljayBzbmFjayBzdG9wIHRocm91Z2ggdGhlIGxvYmJ5IGZvciBsZW1vbmFkZSBhbmQgY29va2llcyBhcyBhbiBhZGRlZCB0cmVhdC4gQmVmb3JlIGRpbm5lciwgbW9zZXkgZG93biB0byB0aGUgcmVzdGF1cmFudCBmb3IgaGFwcHkgaG91ciBuaWdodGx5IHdoaWxlIG92ZXJsb29raW5nIHRoZSBHdWxmIENvYXN0J3MgbW9zdCBiZWF1dGlmdWwgYmVhY2hlcyBhbmQgY29sb3JmdWwgc3Vuc2V0cy5IZXkhIEkndmUgcHJldmlvdXNseSBzdGF5ZWQgaGVyZSBidXQgaXQncyBiZWVuIGEgZmV3IHllYXJzLiBJIHdhcyBqdXN0IGN1cmlvdXMgYWJvdXQgc29tZSB0aGluZ3Mgbm93IHdpdGggdGhlIGFkZGl0aW9uIG9mIHRoZSBIZW5kZXJzb24gUmVzb3J0LiAKWW91IHdpbGwgZ2V0IGRvd252b3RlZCBmb3IgQU5ZVEhJTkcgdGhhdCBkb2VzbiAxMDAlIHN1cHBvcnQgZXZlcnl0aGluZyB0aGF0IGNvbW11bml0eS4gClNvdXJjZXMgZXQgUmVzc291cmNlcwpTZXZlcmFsIG1vbnRocyBhZ28sIEkgd3JvdGUgdG8gdGhlIG9yZ2FuaXNlcnMsIHRoZSBNaW5pc3RlcnMgZm9yIEhlYWx0aCBhbmQgRWR1Y2F0aW9uLCBhbmQgb3RoZXIgc3Rha2Vob2xkZXJzIHdpdGggbXkgY29uY2VybnMuIEkgaW5jbHVkZWQgYSAxNSBwYWdlIFNjaG9vbHMgTm90aWZpY2F0aW9uIERvY3VtZW50IHdpdGggZGV0YWlsZWQgZG9jdW1lbnRhcnkgZXZpZGVuY2Ugb2YgVU0gcmlza3MgdG8gY2hpbGRyZW4uIFdoZW4gSSBjaGVja2VkIHRoZSBQQVNIIHNpdGUgc2V2ZXJhbCB3ZWVrcyBhZ28sIFNhcmFoIERhdmlzIG5hbWUgaGFkIGJlZW4gcmVtb3ZlZCBmcm9tIHRoZSBjb25zb3J0aXVtIGV4ZWN1dGl2ZSBwYWdlLCBzbyBJIGluY29ycmVjdGx5IGFzc3VtZWQgdGhlIGNvbnNvcnRpdW0gaGFkIHRoZSBnb29kIHNlbnNlIGFuZCBpbnRlZ3JpdHkgdG8gbWFrZSBzdXJlIHNoZSBhbmQgaGVyIGNvbGxlYWd1ZXMgd291bGQgbm90IGJlIGdpdmVuIGEgcGxhdGZvcm0uIApJIHN3ZWFyIHRvIHRoZSBhbG1pZ2h0eSBkZW1vbnMgb2YgYWRkaWN0aW9uIHRoYXQgY2lnYXJldHRlcyBhcmUgaGFyZGVyIHRvIHF1aXQgdGhhbiBvcGlhdGVzLiAKT24gU2F0dXJkYXkgQXByaWwgMjEsIG5vdmVsaXN0IEpvbmF0aGFuIExldGhlbSB3aWxsIGRlbGl2ZXIgYSBzdGF0ZSBvZiBjaW5lbWEgYWRkcmVzcyBvbiB0aGUgImVjc3Rhc2llcyBvZiBpbmZsdWVuY2UiIGNvbnN0aXR1dGluZyBjb250ZW1wb3JhcnkgZmlsbS4gVGhlIG9sZCBhZGFnZSAidGhlcmUncyBzb21ldGhpbmcgZm9yIGV2ZXJ5b25lIiBoYXMgbmV2ZXIgYmVlbiBzbyB0cnVlLiBUaGUgZmVzdGl2YWwgcnVucyBmcm9tIEFwci4gMTkgdG8gTWF5IDMuIEFzIGEgZmFtaWx5IG1hbiwgaGUgYWRvcmVzIGhpcyBjaGlsZHJlbiBhbmQsIG1vcmUgdHJhZ2ljYWxseSwgaGUgaGFzIG5ldmVyIHNlZW4gdGhlIGFjY3VzZXJzIHdobyBkZW1vbml6ZSBoaW0uIFRvIGFkZCBhbiBpcm9uaWMgdHdpc3QgdG8gdGhlIHdhcnBlZCBzaXR1YXRpb24sIE1hcmVjYXV4IGlzIGEgYmFpbGlmZiwgd2hvIGlzIG5vdyBtYW5pcHVsYXRlZCBieSB0aGUgc3lzdGVtIHRoYXQgaGUgZ2VudWluZWx5IHRydXN0ZWQuCkVpbmUgZGVyIGJlaWRlbiBMdXh1c2hlcmJlcmdlbiBkZXIgS2F0ZWdvcmllIDUrIHNvbGwgMTUwIFppbW1lciBoYWJlbiB1bmQgdW50ZXIgZGVyIE1hcmtlIEhpbHRvbiBnZWZocnQgd2VyZGVuLiAKTWF5YmUgeW91J3ZlIGp1c3Qgb3V0Z3Jvd24gaGltLi4gClByb2JhYmx5IHRoZSB0b3VnaGVzdCB2YXJpZXR5IGFuZCB0aGUgZWFzaWVzdCB0byBncm93IGlzICdBcnAuJyBUaGF0J3MgdGhlIG9uZSBJIHVzZSB0byBjcmVhdGUgc2hvcnQgcm9zZW1hcnkgImhlZGdlcyIgYWxvbmcgZHJ5aXNoIGVkZ2VzIG9mIHRoZSBnYXJkZW4uIEkndmUgYWxzbyBlbmpveWVkIGNyZWVwaW5nICh0cmFpbGluZykgcm9zZW1hcnkgaW4gY2xheSBwb3RzIG9uIHRoZSBwYXRpby4gRm9yIHRoZSB3aW50ZXIsIEkgc2V0dGxlIHRoZSBwbGFudHMgb24gYSBiZW5jaCBhZ2FpbnN0IHRoZSBwYXRpbydzIHNvdXRoIGZhY2luZyBob3VzZSB3YWxsLCB3aGVyZSB0aGV5IGFyZSBwcm90ZWN0ZWQgZnJvbSBoZWF2eSB3aW50ZXIgcmFpbnMuCiAxMCBwb2ludHMgIHN1Ym1pdHRlZCA2IGRheXMgYWdvQ2FydGVyIHdhcyB0b28gZ29vZCBvZiBhIG1hbiB0byBsZWFkIHN1Y2ggYW4gaW1wZXJmZWN0IHNvY2lldHkuIFRydW1wIGlzIHRvbyBob3JyaWJsZSBvZiBhIHBlcnNvbiB0byBsZWFkIGEgbmF0aW9uIGJ1aWx0IG9uIHN1Y2ggaWRlYWxpc3RpYyBhc3BpcmF0aW9ucy5UbyBhbnN3ZXIgeW91ciBxdWVzdGlvbiwgSSB3b3VsZCBzYXkgdGhhdCBGb3ggYW5kIHJpZ2h0IHdpbmcgbWVkaWEgaW4gZ2VuZXJhbCBhbGxvd2VkIGFuIGFsdGVybmF0ZSByZWFsaXR5IHRvIGluY3ViYXRlIG92ZXIgdGhlIGNvdXJzZSBvZiBhIGNvdXBsZSBvZiBkZWNhZGVzIG9yIHNvLiBFbnRlciBUcnVtcEpheURvbmtzR2FtaW5nICA3IHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ29UaGV5IGNhbi4gQnV0IGlmIHlvdSBsaXN0ZW4gdG8gbGFuZGxvcmRzIG9uIGhlcmUgb3IgRmFjZWJvb2sgeW91IGdldCB0aGUgaW1wcmVzc2lvbiB0aGF0IGFueW9uZSB1bmZvcnR1bmF0ZSBlbm91Z2ggdG8gaGF2ZSB0byByZW50IGlzIHRoZSBkZXZpbCBpbmNhcm5hdGUuVGhhdCBzYXlzIHRvIG1lIGxhbmRsb3JkcyBhcmUgbGF6eSBhbmQgZG9uIHByb3Blcmx5IHZldCB0ZW5uYW50cyBub3IgYXJlIHRoZXkgdGFraW5nIGFkdmFudGFnZSBvZiB0aGVpciByaWdodHMgdG8gaW5zcGVjdCB0aGUgdW5pdCBldmVyeSAzMCBkYXlzSSBqdXN0IGZpbmQgaXQgYW11c2luZyBsYW5kbG9yZHMgc2hpdCB0YWxrIGxvY2FsIHRlbm5hbnRzIGFuZCBnbyBvZmYgdHJ5aW5nIHRvIG1ha2UgbW9yZSBwcm9maXQgYW5kIGluc3RlYWQgZ2V0IGJ1cm5lZC4gSSBoYXZlIG5vIHN5bXBhdGh5IGZvciB0aG9zZSBjb250cmlidXRpbmcgdG8gdGhlIHJlbnRhbCBjcmlzaXMuIFRoZXkgY2FuIGhhdmUgZnVuIHBheWluZyByZXBhaXJzIG9uIHRoZWlyIHBlcnNvbmFsIGhvdGVscy4KVGhlIHB1YmxpYyBkb21haW4gc3RhdHVzIG9mIHRoZSB3b3JrIGlzIGlycmVsZXZhbnQgaGVyZSBhIGxpZSBpcyBhIGxpZS4uIApUaGUgZmFjdCB0aGF0IHNoZSBpcyB0cnlpbmcgdG8ganVzdGlmeSBjaGVhdGluZyBzaG91bGQgdGVsbCB5b3UgYWxsIHlvdSBuZWVkIHRvIGtub3cuIApSZXBocmFzZSwgeW91IHdvdWxkbiB0aGluayBpdCBpbmNlc3R1b3VzIGlmIHR3aW4gZ2lybHMgd2VyZSBsb29raW5nIGF0IGVhY2ggb3RoZXIgYW5kIG9uZSBzYWlkICJJIHdpc2ggbXkgYm9vYnMgd2VyZSBhcyBiaWcgYXMgaGVycyIuIEl0IG5vdCBhIHN0YXRlbWVudCBvZiBhdHRyYWN0aW9uLCBvbmx5IGVudnkuIApTaW5jZSB0aGVuLCBpdCBoYXMgYmVlbiB2aWV3ZWQgd2VsbCBvdmVyIDgwMCwwMDAgdGltZXMsIGdhaW5pbmcgbmV3IHZpZXdlcnMgYXQgYSByYXRlIG9mIGFib3V0IDUwLDAwMCBwZXIgbW9udGgsIGZhaXJseSByZW1hcmthYmxlIG51bWJlcnMgZm9yIGEgOTAgbWludXRlIGRpc2N1c3Npb24gb2YgdGhlIG51YW5jZXMgb2YgZnJ1Y3Rvc2UgYmlvY2hlbWlzdHJ5IGFuZCBodW1hbiBwaHlzaW9sb2d5LgpJdCdzIGEgdW5pcXVlLCB0aHJpdmluZyBlY29zeXN0ZW0gaGVscGluZyBoYW5kcyBhY3Jvc3MgYWdlcywgZnVsbCBvZiBjb21wYXNzaW9uIGFuZCBnZW5lcm9zaXR5IGFuZCB0aW5nZWQgd2l0aCBhIHRvdWNoIG9mIHJ1dGhsZXNzbmVzcy4gClRoZSBzb2xldXMgaXMgdW5kZXIgdGhlIGdhc3Ryb2MsIGFuZCBpcyB0aGUgbW9yZSBwb3dlcmZ1bCBtdXNjbGUuIApCZXJiYWdpIENoZWF0IEdhbWUgUGMsUGFzc3dvcmQgZ2FtZSBwcyAyLGNoZWF0IGdhbWUgb25saW5lIGZhY2Vib29rIGRhbiBjYXJhIGRvd25sb2FkIHZpZGVvIHlvdXR1YmUgdGVyYmFydSBncmF0aXMuIEdhbWUgUHMgMiAuIENoZWF0IE1pZG5pZ2h0IENsdWIgMyBEVUIgRWRpdGlvbiBSZW1peCBQUzIgUG9zdCBieSBXYXlhbiBLYXRlbCAuIENoZWF0IEdhbWUgVG9ueSBIYXdrcwpUaGUgd2VpcmRlc3QgdGhpbmcgYWJvdXQgYWxsIHRoaXMga2luZCBvZiBtZXJjaGFuZGlzZSBpcyB0aGUgYWJzb2x1dGUgZmFsc2UgcmVwdXRhdGlvbiBvZiBtYWNoaXNtby4gVHJ1bXAgbGl0ZXJhbGx5IGNhdmVzIHdpdGggYW55b25lIGluIG9uZSBvbiBvbmUgc2l0dWF0aW9ucy4gSGUgZ2l2ZXMgcGVvcGxlIHdoYXRldmVyIHRoZXkgd2FudCBpbiBwcml2YXRlIGRlYWxzIGFuZCB0aGVuIGp1c3QgY2FzdWFsbHkgZnVja3MgdGhlbSBvdmVyIHdoZW4gdGhleSBjYW4gY29uZnJvbnQgaGltLiBIaXMgZW50aXJlIGJ1c2luZXNzIG1vZGVsIGlzIGJhc2VkIG9uIGJlaW5nIHR3byBmYWNlZCBhbmQgYSBsaWFyLiBBc2sgYW55IGNvbnRyYWN0b3IgdGhhdCB3b3JrZWQgZm9yIGhpbS4KVGhpcyBpcyBtb3N0IG9mdGVuIGFwcGFyZW50IGluIGl0cyBoYWxmIGhlYXJ0ZWQgaW52b2NhdGlvbnMgb2YgdGhlIGluaW1pdGFibGUgQ2FyZGkgQiAoa2V5IHdvcmQ6IGluaW1pdGFibGUpLCBhcyB3ZWxsIGFzIGl0cyBhdHRlbXB0cyBhdCBjb25jZXB0dWFsaXppbmcgYSBibGFjayBmZW1hbGUgbGVhZCB3aXRoIGEgc2VsZiB3aW5raW5nIChhbmQgdG9vIHNlbGYgY29uZ3JhdHVsYXRvcnkpIGF3YXJlbmVzcyBvZiBvdXIgY3VycmVudCBjdWx0dXJhbCBjbGltYXRlLiAKV2FzIGEgc3RpZ21hIGZvciBhIGxvbmcgdGltZSB3aGVyZSBndXlzIGRpZG4gZ28gZ2V0IHBlZGljdXJlcywgYW5kIHRoZW4gZ3V5cyBsaWtlIFNoYXEgYW5kIER3eWFuZSBXYWRlIGFuZCBMZUJyb24sIHRoZXkgbWFkZSBpdCBwb3B1bGFyLiAKSG93IGRvIHlvdSBjaGVhdCBhdCBnb3Zlcm5vciBvZiBwb2tlciAyClRoaXMgd2FzIG9mZmljaWFsIHdyaXR0ZW4gUE9MSUNZLiBXZSBoYXZlIHBsZW50eSBvZiByZWNvcmRzIG9mIEJyaXRpc2ggb2ZmaWNlcnMgaW5zdHJ1Y3RpbmcgdGhlaXIgc3Vib3JkaW5hdGVzIHRvIGxldmVyYWdlIHRoZSBuYXR1cmFsIGFudGlwYXRoaWVzIGJldHdlZW4gZGlmZmVyZW50IHJlbGlnaW91cywgZXRobmljLCBsaW5ndWlzdGljIGdyb3Vwcy4gSXQgaGFwcGVuZWQgdG8gRVZFUlkgcmVsaWdpb24gaW4gSW5kaWEsIGl0IHdhcyBkaXZpZGUgYW5kIHJ1bGUuIEhvdyBlbHNlIGNvdWxkIDIwLDAwMCBCcml0cyBydWxlIGEgY291bnRyeSBvZiAzMDAgbWlsbGlvbj8KTWlmZnkgd2FzIHRoZSBmaXJzdCBib29rIEkgcmVtZW1iZXIgZ2V0dGluZyBob29rZWQgb24uIFNvbWUgb2Ygb3VyIGJvb2tzIGF0IGhvbWUgaGFkIGJlZW4gaW4gYSBzY2hvb2wgZmlyZSBhbmQgdGhleSBoYWQgc21va2UgbWFya3Mgb24gdGhlIHBhZ2VzLCBhbmQgc21lbHQgc21va3kgYnV0IEkgbG92ZWQgdGhlbSBqdXN0IHRoZSBzYW1lLiBEciBTZXVzcyB3YXMgdXR0ZXJseSBhd2Vzb21lLiAKSGUgaGFkIGFuIGF1dGhlbnRpY2F0b3Igb24gaGlzIHBob25lIGFuZCBJIGVuY291cmFnZWQgaGltIHRvIGJ1eSBhIG5ldyBvbmUgaW4gTWFsYXlzaWEgKHNlYWxlZCBicmFuZCBuZXcgZnJvbSBhIHByb3BlciBodWEgV2VpIHN0b3JlKS4gClRoZSBmb2xsb3dpbmcgZGF5IHdhcyBvdXIgImJlYWNoIGRheSIuIFdlIGhlYWRlZCBvdXQgb2YgdG93biBhbmQgcGlja2VkIHVwIHR3byBoaXRjaGhpa2VycyAoYmFja3BhY2tlcnMpIHdobyBuZWVkZWQgdG8gZ28gdG8gdGhlIGJlYWNoIHRvby4gV2UgZHJvcHBlZCB0aGVtIG9mZiBhdCBhIGhvc3RlbCB3aXRoIGhhbW1vY2tzIGFuZCBhbGwgSSBjb3VsZCB0aGluayB3YXMgdGhhdCBJIGFtIGRlZmluaXRlbHkgdG9vIG9sZCB0byBzdGF5IGluIHBsYWNlcyB0aGF0IGFyZSAkNCBhIG5pZ2h0ISBPdXIgaG90ZWwgaGFkIHJlY29tbWVuZGVkIHdlIGdvIHRvIFBsYXlhIFJvY2EgaW4gTGFzIFBlbml0YXMuIApUaGF0IG5vdCBhbHdheXMgdGhlIGNhc2UsIGFuZCBqdXN0IGJlY2F1c2UgdGhleSBoYXZlbiBleHBlcmllbmNlZCBpdCBkb2VzbiBnaXZlIHRoZW0gdGhlIHJpZ2h0IHRvIGJlcmF0ZSB5b3UgZm9yIHNvbWV0aGluZyB0aGV5IGRvbiB1bmRlcnN0YW5kLiAKSW4gV2lzY29uc2luLCBpdCB3YXMgZGlzY292ZXJlZCB0aGF0IHNvbWUgYmVlIGVnZ3MgbGF5ZXJlZCBpbiBwb2xsZW4gZGlkIG5vdCBzdXJ2aXZlIGJlY2F1c2UgdGhlcmUgd2VyZSBubyBtaWNyb2JlcyBpbiB0aGF0IHBvbGxlbi4gVHJhY2luZyBiYWNrLCBpdCB3YXMgZGlzY292ZXJlZCB0aGF0IHNvbWUgb2YgdGhlIGZ1bmdpY2lkZXMgdXNlZCB0byBjb250cm9sIGRpc2Vhc2VzIHdlcmUgYWxzbyBraWxsaW5nIG1pY3JvYmVzIGluIHBvbGxlbi4gCldoYXQgaGUgZm91bmQsIGhlIHdvdWxkIHJlY2FsbCwgd2FzICJzbyB1bmJlbGlldmFibHkgZXhjaXRpbmciIHRoYXQgaGUgY291bGQgYmFyZWx5IHB1dCBpdCBkb3duLiAKIldlJ3JlIGFsbCAyMSBub3csIHNvIHdlIGdvdCB0byBnbyBnYW1ibGUgYSBsaXR0bGUgYml0LiIKVGhlIHByZXNjcmlwdGlvbiBvZiBkaWV0cyBvbiB0aGUgYmFzaXMgb2YgSWdHIGJsb29kIHRlc3RzIHNob3VsZCBiZSBkaXNjb3VyYWdlZC4uIApJIGxpdmVkIGFicm9hZCBpbiBzZXZlcmFsIGNvdW50cmllcyBmb3Igb3ZlciBhIGRlY2FkZSBhbmQgbm93IHNwZWFrIGZvdXIgbGFuZ3VhZ2VzLiBJIHZvbHVudGVlcmVkLiAKVGhlIGRlYXJlc3QgaG9wZSBvZiB0aGUgQW1lcmljYW4gcmlnaHQgZm9yIGZpZnR5IHllYXJzIHdhcyBlc3NlbnRpYWxseSByZWFsaXplZCBiZWNhdXNlIGluIHRoZSBlbmQgY29hbCBpcyBhdCB0aGUgY2VudGVyIG9mIEFtZXJpY2EgZWNvbm9teS4oT2JhbWEpIGZvcm1lZCBhIGxlYWd1ZSBvZiBzdXBlciBwb2xsdXRlcnMsIGFuZCB3b3VsZCBiZSBzdXBlciBwb2xsdXRlcnMuIApUaGlzIGVkdWNhdGlvbmFsIGdhcCBjb250aW51ZXMgaW50byBwb3N0Z3JhZHVhdGUgdHJhaW5pbmcuIEZvciBpbnN0YW5jZSwgbW9yZSB0aGFuIGhhbGYgb2YgVVMgYWNhZGVtaWMgZmFjdWx0eSBwcmFjdGljZXMgYWNjcmVkaXRlZCBieSB0aGUgTGlhaXNvbiBDb21taXR0ZWUgb24gTWVkaWNhbCBFZHVjYXRpb24gZG8gbm90IGhhdmUgYW55IExHQlRRIGNvbXBldGVuY3kgdHJhaW5pbmcuIEluIGEgc3VydmV5IG9mIHBhZWRpYXRyaWMgcHJpbWFyeSBjYXJlIHByb3ZpZGVycywgNTQlIG9mIHJlc3BvbmRlbnRzIGRpZCBub3Qga25vdyBvZiB0aGUgZXhpc3RlbmNlIG9mIHByb2Zlc3Npb25hbCBndWlkZWxpbmVzIHRvIHN1cHBvcnQgcHViZXJ0eSBibG9ja2luZyBtZWRpY2F0aW9ucyBpbiB0cmFuc2dlbmRlciBjaGlsZHJlbiA4MyUgb2YgdGhlIHJlc3BvbmRlbnRzIHdlcmUgcGh5c2ljaWFucy4KUGxlYXNlIGZhbWlsaWFyaXplIHlvdXJzZWxmIHdpdGggdGhlIG9mZmljaWFsIHJ1bGVzIGFuZCByZWRkaXF1ZXR0ZS4gV2Ugd2lsbCByZW1vdmUgYW55IHBvc3RzIHZpb2xhdGluZyByZWRkaXQgb2ZmaWNpYWwgcnVsZXMgKHNwYW0sIHBlcnNvbmFsIGluZm9ybWF0aW9uLCB2b3RlIG1hbmlwdWxhdGlvbiwgZXRjLikgYW5kIHJlZGRpcXVldHRlIGp1c3QgbWFrZXMgcmVkZGl0IGEgYmV0dGVyIHBsYWNlIHRvIHZpc2l0LgpPTEcgc3Bva2VzbWFuIFRvbnkgQml0b25pIHNhaWQgcGxheWVycyB3aWxsIGJlIGFibGUgdG8gdHJ5IHRoZWlyIGhhbmQgYXQgYSB2YXJpZXR5IG9mIHZpZGVvIHNsb3QgZ2FtZXMsIGJsYWNramFjaywgYmFjY2FyYXQgYW5kIHJvdWxldHRlLgpUaGUgcGxheWVycyBnYWluIGEgbGV2ZWwgaWYgdGhleSBmaWxsIGVpdGhlciBvZiB0aGUgYmFycywgYW5kIGtlZXAgYW55IHByb2dyZXNzIHRoYXQgdGhleSBtYWRlIG9uIHRoZSBvdGhlciBiYXIuIApUaGUgc2Vjb25kIHJvdW5kIG9mICJFbmNyeXB0aW5nIHRoZSBkZWNrIiBpcyB3aGVyZSBlYWNoIHBsYXllciBlbmNyeXB0cyBlYWNoIGluZGl2aWR1YWwgY2FyZCB3aXRoIHRoZWlyIG93biBlbmNyeXB0aW9uIGtleS4gQW5kIGZvbGxvd2luZyB0aGlzIHJvdW5kIG9mIGVuY3J5cHRpb24sIGVhY2ggcGxheWVyIGlzIGFzc2lnbmVkIGNhcmRzIGluIHRoZSBkZWNrLiBGb3IgZXhhbXBsZSwgbGV0IHNheSAiamZhIiBpcyBhc3NpZ25lZCBjYXJkcyA1IGFuZCA2LgpLaXNhaCBDYXJsbyBpcyBpc24gZXhhY3RseSB3aGF0IHlvdSBsb29raW5nIGZvci4gKEp1c3QgbG9va2VkIGl0IHVwICAgc3VidGl0bGVzIGluIEVuZ2xpc2gsIG5vdCBCSSAgIEkgbWlzcmVtZW1iZXJlZC4pIEl0IGEgMTAgZXBpc29kZSB3ZWIgc2VyaWVzIGFib3V0IGEgaG9zcGl0YWwgd2FyZCBpbiBKYWthcnRhIHRoYXQgdHJlYXRzIHBhdGllbnRzIHdpdGggSElWL0FJRFMuIEl0IG1heSBzdGlsbCBiZSBoZWxwZnVsIHRvIHlvdXIgcHJvY2VzcyBiZWNhdXNlIHRoZSBzcG9rZW4gbGFuZ3VhZ2UgaXMgcHJldHR5IGVhc3kgdG8gZm9sbG93L3VuZGVyc3RhbmQuIApHSFJQIDIgY2FuIGJlIHRha2VuIG9yYWxseSwgYW5kIHRoZXJlJ3MgYSB2ZXJzaW9uIHRoYXQgaGFzIGJlZW4gZGV2ZWxvcGVkIHRoYXQgY2FuIGJlIHRha2VuIHZpYSBub3NlIHNwcmF5LCBidXQgaXQgaXMgbW9zdCBjb21tb25seSBpbmplY3RlZC4KQW5kIGlmIGl0IGlzIGhpcyBvd24gYmxvb2QgaXQgaXMgcmVhbGx5IGhhcmQgdG8gdHJhY2suIAooUHJpdmFjeSBQb2xpY3kpQW1hem9uIFVuaWZpZWQgQWQgTWFya2V0cGxhY2VUaGlzIGlzIGFuIGFkIG5ldHdvcmsuIChQcml2YWN5IFBvbGljeSlBcHBOZXh1c1RoaXMgaXMgYW4gYWQgbmV0d29yay4gCkxhdyBlbmZvcmNlbWVudCBhZ2VuY2llcyBoYXZlIG1hZGUgc29tZSBpbnJvYWRzLiBNYWkgTGUgSG8sIGEgbGVjdHVyZXIgb24gQXNpYW4gQW1lcmljYW4gYW5kIHdvbWVuJ3Mgc3R1ZGllcyBhdCBTYW4gSm9zZSBTdGF0ZSBVbml2ZXJzaXR5IGluIENhbGlmb3JuaWEsIHNhaWQgcG9saWNlIGhhdmUgY3JhY2tlZCBkb3duIG9uIEFzaWFuIG1hc3NhZ2UgcGFybG9ycyBpbiB0aGUgU2FuIEZyYW5jaXNjbyBCYXkgQXJlYSB0aGF0IHNlcnZlZCBhcyBmcm9udHMgZm9yIHByb3N0aXR1dGlvbi4gQnV0IHNoZSBzYWlkIHRoZSBvZmZlbmRlcnMgZWl0aGVyIG9wZW4gdXAgYSBuZXcgYnVzaW5lc3MgdW5kZXIgYSBkaWZmZXJlbnQgbmFtZSBvciBtb3ZlIG91dCBvZiB0b3duLgpKb2luIHVzIGZvciB0aGUgZmlyc3QgVVNBIGVkaXRpb24gb2Ygb3VyIG5ldyAnQnJpbmdpbmcgQmlybWluZ2hhbSB0byBZb3UnIGV2ZW50cyBzZXJpZXMuIEpvaW4gUHJvIFZpY2UgQ2hhbmNlbGxvciAoSW50ZXJuYXRpb25hbCkgUHJvZmVzc29yIFJvYmluIE1hc29uLCBmb3IgYSBzaG9ydCwgaW5mb3JtYWwgdGFsayBvbiBoaXMgYXJlYSBvZiBleHBlcnRpc2UgR2FtZSBUaGVvcnkuIFJvYmluIHdpbGwgZGlzY3VzcyB0aGUgZ2FtZSB0aGVvcnkgb2YgaW50ZXJuYXRpb25hbCBuZWdvdGlhdGlvbnM6IHdpbGwgQnJleGl0IGFuZCBOQUZUQSBlbmQgdXAgYXMgd2luIHdpbiBvciBhbGwgbG9zZT8gVGhlIHNlc3Npb24gd2lsbCBiZSBsZWQgaW4gYW4gZWFzeSB0byB1bmRlcnN0YW5kIHN0eWxlIHdpdGggbG90cyBvZiBhdWRpZW5jZSBpbnRlcmFjdGlvbiBhbmQgZ2FtZXMuIApWYW5jb3V2ZXIgZmVtaW5pc3QgbGl0ZXJhcnkgZmVzdGl2YWwgc2hvd3MgYSBsb3Qgb2YgZ3Jvd2luZyByb29tClNvIGJlIHZlcnkgYXdhcmUgb2YgaW5kaWNhdGlvbnMgb2YgcGFpbiBzdWNoIGFzIHRyeWluZyB0byBvZmZsb2FkIHdlaWdodCBmcm9tIHRoZSBsZWcsIG5vdCBqdXN0IGNvcnJlY3RuZXNzIG9mIHN0cmlkZS5TaGUgaGFzIGhhZCBhdCBsZWFzdCBhIHllYXIgb2YgcmVzdC4gCkV4Y2VwdGlvbnMgYXJlIG1hZGUgZm9yIGV4Y2x1c2l2ZSByZWxlYXNlcyBvciB0cmFja3Mgbm90IGF2YWlsYWJsZSBvbiBhbiBhcnRpc3Qgb2ZmaWNpYWwgY2hhbm5lbC4gQXJ0aWNsZXMgZGlzY3Vzc2luZyBldmVudHMgaW4gbXVzaWNpYW4gbGl2ZXMgYXJlIHN1YmplY3QgdG8gbW9kIGRpc2NyZXRpb24uIApBY2NvdW50IEJhbm5lZCBvbiBnbG9iYWwgcG9rZXIgZm9yIDAgcmVhc29uCkluIHRoZSBlbmQsIGlmIHlvdSBkb24ndCBtYWtlIHRoZSBtb25leSB3ZSBzdGF0ZWQgYWJvdmUgZHVyaW5nIHRoYXQgdGltZSBwZXJpb2QsIGhlIHdpbGwgcmVmdW5kIHlvdXIgbW9uZXkuIFlvdSBoYXZlIGFsbW9zdCB0d28gZnVsbCBtb250aHMgdG8gdHJ5IGl0IG91dCwgc28gdGhlcmUgcmVhbGx5IGlzbid0IGFueXRoaW5nIHlvdSBjYW4gbG9zZSBleGNlcHQgdGltZSByZWFkaW5nIGV2ZXJ5dGhpbmcgb3Zlci4gCkkgMzQgeWVhcnMgb2xkIGFuZCBJIGhhdmUgbW9zdGx5IGdyYXkgaGFpciwgYW5kIG5vYm9keSBoYXMgbWFkZSBmdW4gb2YgbWUuLiAKSGVybWFuIGlzIHN1cnZpdmVkIGJ5IGhpcyB3aWZlLCBQb2xseSBEdW5haG9lIEx1bmVicmluZzsgZGF1Z2h0ZXIsIFBhdWxhOyBzb24sIEJvYiBhbmQgd2lmZSwgQ2Fyb2x5bjsgZml2ZSBncmFuZGRhdWdodGVycywgRGViYmllIGFuZCBoZXIgZnJpZW5kLCBEYXZpZCwgUGFtLCBBbmdlbGEsIEplbm5pZmVyLCBhbmQgQ2Fyb2xpbmU7IGJyb3RoZXIsIEJpbGwgTHVuZWJyaW5nOyBzaXN0ZXIgaW4gbGF3LCBNYXJ5IFlvdW5nIGFuZCBmYW1pbHk7IGFuZCBudW1lcm91cyBuaWVjZXMgYW5kIG5lcGhld3Mgd2hvIGxvdmVkIFVuY2xlIEx1bnkuCk11aGFtbWFkIEFsaSwgSm9lIExvdWlzLCBTdWdhciBSYXkgUm9iaW5zb24sIEhlenphcmQgQ2hhcmxlcywgU3VnYXIgUmF5IExlb25hcmQsIGp1c3QgdG8gbmFtZSBhIGZldy4gV2hhdCB3YXMgaXQgdGhhdCBlbmFibGVkIHRoZW0gdG8gYmVjb21lIG1hc3RlciBib3hlcnM/IFdoYXQgd2FzIHRoZSBmaXJlIHRoYXQgZHJvdmUgdGhlbT8gV2hhdCBwbGVhc3VyZSBkaWQgdGhleSBkZXJpdmUgZnJvbSB0aGUgc2NpZW5jZT9PYnNlcnZlZCBzdHJpY3RseSBvbiBncm91bmRzIG9mIGEgcHJhZ21hdGljIGlucXVpcnksIHR3byBodW1hbnMgd2lsbGZ1bGx5IGZpZ2h0aW5nIHRpbGwgb25lIG9mIHRoZW0gaXMgcGh5c2ljYWxseSB1bmFibGUgdG8gY29udGludWUgY2Fubm90IGNvbmZlciBtdWNoIGNvbnN0cnVjdGl2ZSBiZW5lZml0cy4gCk1lcmNoYW50aW5nICA2IHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwoiV2h5IGRvbid0IHlvdSB0cnkgeW91ciBoYW5kIGF0IGl0IHlvdXJzZWxmLCBBbm5lPyIKRmlyc3QsIHlvdSBhcmUgYWJzb2x1dGVseSBnb2luZyB0byBuZWVkIGEgcmFpZGJvdHMgcHJlbWl1bSBhY2NvdW50IHRvIG1ha2UgdGhpcyBzbW9vdGhlci4gSGF2aW5nIHRoZSBtYXggaXRlcmF0aW9ucyByZWFsbHkgY3V0cyBkb3duLiBTZWNvbmQsIHlvdSBzYXkgeW91IHBsYXkgYWxsIDMgc3BlY3MgYnV0IGhhdmUgYSBzaW5nbGUgc2V0IG9mIEF6ZXJpdGUgZ2Vhci4gSSBwcm9taXNlIHlvdSB0aGlzIGlzIG5vdCBzdXN0YWluYWJsZS4gUGljayBhIHNwZWMgeW91IGxpa2UgbW9zdCBvciBjb21wcm9taXNlIG9uIHRyYWl0cywgb3RoZXJ3aXNlIHlvdSB3aWxsIGhhdGUgeW91cnNlbGYuCkRvbWluaXF1ZSBpcyBwYXNzaW9uYXRlIGFib3V0IGhlciBqb2IgYW5kIGFib3V0IG1ha2luZyB0aGUgd29ybGQgYSBiZXR0ZXIgcGxhY2UuIFNoZSBpcyBwYXJ0IG9mIGEgdGVhbSBtYWtpbmcgZGVjaXNpb25zIGFib3V0IHdoZXJlIGFuZCBob3cgdG8gaW52ZXN0IGZ1bmRzIGVudHJ1c3RlZCBieSByZXRhaWwgY2xpZW50cy4gCkkgaGF2ZW4ndCB3b3JrZWQgZm9yIFJvZ2VycyBmb3IgYXJvdW5kIHRocmVlIHllYXJzIG5vdyBidXQgSSB3YXMgYXZlcmFnaW5nICQxNDAwIGEgbW9udGggZGVhbGluZyB3aXRoIGEgbGFyZ2UgY29ycG9yYXRlIGFjY291bnQgYW5kIG5vdGhpbmcgZWxzZSwgb24gdGhlIGNvbnN1bWVyIHNpZGUgaXQgd2FzIGp1c3QgdW5kZXIgJDEwMDAgYW5kIHRoaXMgd2FzIGEgbG93IHRyYWZmaWMgbG9jYXRpb24uIEkgaGF2ZSBhIGZyaWVuZCB0aGF0IHdvcmtzIGluIGEgY2xhc3MgQSBmbGFnc2hpcCBzdG9yZSBhbmQgZWFybnMgYXJvdW5kIDY1IDcwayBhIHllYXIgZG9pbmcgY29uc3VtZXIgc2FsZXMuIApZb3Ugd2lsbCBlbmpveSBub3QganVzdCB3aGF0IEkgY2FsbCBhICJzdGF0aWMgYXdhcmVuZXNzIiBvciBhIHRoZW9yZXRpY2FsIGtub3dsZWRnZSBvZiB5b3VyIG1hcmtldHBsYWNlLCBidXQgaG93IHRvIGRvIHNvbWV0aGluZyB2ZXJ5IGNvb2wgYW5kIHByb2ZpdGFibGUgd2l0aCB5b3VyIHByb3NwZWN0cyBhbmQgY2xpZW50cy4gUmVtZW1iZXIgdGhhdCB1bnRpbCB5b3UgY29udmluY2UgdGhlbSB0byBtYWtlIGEgbW92ZSwgdGhleSBjYW4ganVzdCBhcyBlYXNpbHkgc2l0IG9uIHRoZWlyIHdhbGxldHMuIApUaGUgVVMgaXMgb24gZmlyZSB3aXRoIGZlYXIgYW5kIHVuY2VydGFpbnR5IGFuZCB0aGVyZSBhcmUgbWlsbGlvbnMgd2hvIHNpbXBseSBjYW5ub3QgZ2V0IG92ZXIgdGhlIGZhY3QgdGhhdCB0aGV5IGhhdmUgYmVlbiBUcnVtcGVkLiAKSGUgdG91Y2hlZCBzbyBtYW55IHBlb3BsZSBpbiBhIG1pbGxpb24gd2F5cy4gClNwZW5kaW5nIG1vcmUgbW9uZXkgYW5kIHRpbWUgb24gZ2FtYmxpbmcgdGhhbiB5b3UgY2FuIGFmZm9yZApXeW5kbW9vciB1ClNlbGVjdCBhIHNtYWxsIHBvcnRpb24gb2YgdGhlIGhhaXIgZnJvbSB0aGUgdW5jbGlwcGVkIHNlY3Rpb24gdG8gc3RyYWlnaHRlbi4KQSBwZXJzb24gd2l0aCBuYXJjaXNzaXNtIGNhbiBjaGFuZ2UgdGhlaXIgbWluZCwgZG8gYSBjb21wbGV0ZSAxODAgICBidXQgdGhlIG5hcnJhdGl2ZSBpbiB0aGVpciBvd24gaGVhZCBpcyB0aGF0IHRoZXkgd2VyZSBuZXZlciB3cm9uZy4uIApIb3dldmVyLCBoaXMgdHVybiBjaGVjayBjYXBzIGhpcyByYW5nZSB0byBvbmUgcGFpci4gVGhpcyByZWcgYWxtb3N0IGFsd2F5cyBjb250aW51ZXMgd2l0aCBLSyBhbmQgdHVybiBGRHMgb24gdGhlIHR1cm4uIApUZXRhbnVzIGlzIGFjdHVhbGx5IG5vdCBmcm9tIHJ1c3QuIFRldGFudXMgaXMgc3ByZWFkIGZyb20gZGlydCBhbmQgYW5pbWFsIGZlY2VzLiAKSSB0aG91Z2h0IGFib3V0IHBpY2tpbmcgdXAgYSBob3VzZSBpbiB0aGUgbmVpZ2hib3Job29kIGFzIGFuIGludmVzdG1lbnQuIEkgaGF2ZW4gcGFpZCBtdWNoIGF0dGVudGlvbiBsYXRlbHkgb3RoZXIgdGhhbiB0byBnbyB0byBMYWNpIG1pZ2h0IGJlIHNsaW0gcGlja2luZ3MgZm9yIHVwZGF0ZWQgYW5kIHdlbGwgdGFrZW4gY2FyZSBvZiBob3VzZXMsIGJ1dCB5b3UgbWlnaHQgZmluZCBhIGdyZWF0IGRlYWwuIEkgYWxzbyBjb252aW5jZWQgdGhhdCBHcmVlbiBTdCBpcyB0aGUgbGFzdCBzdHJlZXQgaW4gdGhlIGNpdHkgdG8gZ2V0IHBsb3dlZCBhbnkgdGltZSBpdCBzbm93cy4uIApPbmUgbWFpZCBwdXRzIEd1bGxpdmVyIHJpZ2h0IG9uIGhlciBuaXBwbGUsIHdoaWNoIHdpbGwgbm8gZG91YnQgYWZmb3JkIHNvbWUgb2YgeW91IG1hbnkgYW4gZXhoaWxhcmF0aW5nIG1hc3R1cmJhdGlvbiBmYW50YXN5IHRvbmlnaHQuIApBIHNwZWNpYWwgZGlldC4gClN1ZGRlbmx5LCB0aGUgc3Rha2VzIHdlcmUgdmVyeSBoaWdoLiAKQW1vbmcgdGhlbSB3YXMgTWFvcmkgZGlyZWN0b3IgQmFycnkgQmFyY2xheSwgd2hvIGhhZCBhIDIwIHllYXIgd29ya2luZyByZWxhdGlvbnNoaXAgd2l0aCBKb2huIE8nU2hlYSAgIHRoZWlyIFRhbmdhdGEgV2hlbnVhIGRvY3VtZW50YXJ5IHNlcmllcyAoUmVpZCB3cml0ZXMpIHRyYW5zcG9ydGVkIHRoZSB2YXN0IG1ham9yaXR5IG9mIGl0cyBQYWtlaGEgYXVkaWVuY2UgdG8gYSBjb3VudHJ5IHRoZXkgbmV2ZXIga25ldyBleGlzdGVkLiBBbm90aGVyIGhpZ2hsaWdodCB3YXMgdGhlIGZlYXR1cmUgZmlsbSBOZ2F0aSAod2l0aCBXaSBLdWtpIEthYSBpbiBhIHBvd2VyZnVsIGNlbnRyYWwgcm9sZSkgd2hpY2ggd29uIE5ldyBaZWFsYW5kJ3MgYmVzdCBmaWxtIGF3YXJkIHdoZW4gaXQgd2FzIHJlbGVhc2VkIGluIDE5ODcuLiAKQXMgeW91IGNhbiBzZWUsIHlvdSBjYW4gZ2V0IGEgbG90IG1vcmUgb3V0IG9mIHlvdXIgc3RvcmllcyBieSB0aGlua2luZyBhYm91dCB0aGUgZGV0YWlscyB5b3VyIGNoYXJhY3RlciBpcyBnb2luZyB0byBiZSBkb2luZyBvciBmYWNpbmcgc3RlcCBieSBzdGVwIG9yIHNlY29uZCBieSBzZWNvbmQuIFRoaW5rIG9mIGVhY2ggc3RlcCB5b3UgdGFrZS4gCllvdSBhcmUgYXNraW5nIGZvciBhZHZpY2Ugb24gd2hhdCBwcm9qZWN0IHlvdSBzaG91bGQgbWFrZSAoIndoYXQgY2FuIEkgbWFrZSB3aXRoaW4gbXkgYnVkZ2V0PyIpCkkgaGF2ZSwgYXQgdGhpcyBwb2ludCwgb2J2aW91c2x5IHJlY29nbmlzZWQgdGhlcmUgd291bGQgYmVlbiBhbiBlYXNpZXIgc2VsZWN0aW9uIG9mIHdvcmRzIHRvIGRlY2xhcmUgdGhlIHVuaGFybWVkIGVuZCBvZiB0aGlzIEkgZG9uIHRoaW5rIEkgZXZlciBiZWVuIGRvd252b3RlZCBhcyBtdWNoIGFzIEkgaGF2ZSBpbiB0aGlzIHRocmVhZCwgc28gdGhlIG1hc3NlcyBoYXMgZGVjbGFyZWQgdGhhdCBJIHRoZSBvbmUgdGhhdCBuZWVkcyB0byBsZWFybiBmcm9tIHRoaXMgZXhwZXJpZW5jZSwgYXBwYXJlbnRseS4uIApJc3JhZWwgaXMgZmxvdXJpc2hpbmcsIGp1c3QgbG9vayBhdCBpdHMgZWNvbm9teSwgdGVjaG5vbG9naWNhbCBhZHZhbmNlbWVudHMsIHNjaWVudGlmaWMgZGlzY292ZXJpZXMsIEhESSBpbmRleCBldGMgZXRjLiAKSSB3b25kZXJlZCB3aGF0IHdhcyBoYXBwZW5pbmcuIApJdCB3YXMgbGlrZSB3YWxraW5nIGludG8gYSByb29tIGZ1bGwgb2YgY3JpY2tldHMuLiAKVHdvIG90aGVyIHBlb3BsZSwgWW9lbCBBbHRtYW4gYW5kIEJlbmphbWluIEFoZG9vdCwgYW5kIHRocmVlIGNvbXBhbmllcyBmYWNlIDE4IGFkZGl0aW9uYWwgY2hhcmdlcyBzdGVtbWluZyBmcm9tIHRoZSByZWd1bGF0b3IncyBpbnZlc3RpZ2F0aW9uIGFuZCBoYXZlIGFsc28gcGxlYWRlZCBub3QgZ3VpbHR5LgpEYWQgYmxhbWVzIEluc3RhZ3JhbSBmb3IgZGF1Z2h0ZXIncyBzdWljaWRlCkluIHRoZSBjb3JuZXIgb2YgdGhlIHJvb20gd2FzIGEgcGllY2Ugb2YgZ3Jhbml0ZSwgd2VpZ2hpbmcgc2V2ZXJhbCBwb3VuZHMuIApJdCBsaWtlIHlvdSBqdXN0IHJlZnVzZSB0byByZWFkIHRoZSBXaWtpIGFydGljbGUgYW5kIGhvdyBpdCBlbmNvbXBhc3NlcyBsaXRlcmFsbHkgZXZlcnl0aGluZyB5b3Ugc2F5aW5nLiAKMTcuIFRoZSBhZXN0aGV0aWMgZmVlbCBvciB0YWN0aWxlIHF1YWxpdHkgb2Ygc29tZXRoaW5nLCBzdWNoIGFzIGEgZmFicmljLCB0ZXh0aWxlLCBvciBjYXJwZXRpbmcsIHRoYXQgaW5kaWNhdGVzIGl0cyBmaW5lbmVzcywgdGV4dHVyZSwgYW5kIGR1cmFiaWxpdHkuCkJ1dCBpdCBpcyBub3QgdGhhdCBjb21tb24gYnV5aW5nIHJlcHMgaW4gS29yZWEuIApSdWxlIDI6IFBsZWFzZSBkb24gcG9zdCBjb21pY3MsIGNhcHRpb25lZCBwaWN0dXJlcy92aWRlb3MgKHRyeSAvci9sb2xjYXRzKSwgb3IgcGhvdG9zIG9mIGp1c3QgdGV4dC4gVGhpcyBpbmNsdWRlczoKSSBoYXZlIHdvbmRlcmVkIGZvciBhIGxvbmcgdGltZSB3aHkgdGhleSB3b3VsZG4gcHVyc3VlIGEgY291cnNlIGxpa2UgdGhpcyBiZWNhdXNlIGluIHRoZSBlbmQgaXQgd291bGQgc28gZ3JlYXRseSBiZW5lZml0IHRoZSBwZW9wbGUgYW5kIHRoZSBjb3VudHJ5IGFzIGEgd2hvbGUuIApJIGdhdmUgeW91IHRoZSBzb2x1dGlvbiwgeW91IGRvbiB3YW50IHRvIHJlYWQuIFdpdGggTGludXggeW91IGFyZSBvbiBvd24gbW9zdGx5IHdpdGggdGhlIGRpc3RyaWJ1dGlvbnMgZm9ydW1zLCBMaW51eCBib29rcyBhbmQgaGVscCBmcm9tIHRoZSBjb21tdW5pdHkuCktpbGwgYSBjaXZpbGlhbiBpbiBQYXlkYXksIGxvc2UgbW9uZXkgKHdoaWNoIHNjYWxlcyB3aXRoIGRpZmZpY3VsdHkpLi4gClRoZSByZWNvdmVyeSB0aW1lIGZvciByZW1vdmluZyB5b3VyIGNlcnZpeCBpc24gdG9vIGxvbmcgYW5kIHRoZXJlIGEgZ29vZCBjaGFuY2Ugc2hlIGJlIGFibGUgdG8gd29yayBhZ2FpbiBpbiA2IDggd2Vla3MgdGltZSwgYnV0IHNjaGVkdWxpbmcgZm9yIHN1cmdlcnkgd2lsbCBhbHNvIHRha2Ugd2Vla3MgYW5kIHRoZXJlIG5vIGd1YXJhbnRlZSB0aGF0IHRoZSBjYW5jZXIgd2lsbCBiZSBnb25lIGFmdGVyIHN1cmdlcnkuLiAKTXkgZ3JhbmRwYSBhbHNvIGhhZCBhIHZpbmV5YXJkIGFuZCB0aGF0IGlzIHdoZXJlIHdlIHdlbnQgdG8gcGljayBncmFwZXMgYW5kIG1ha2UgdGhlIHdpbmUuIE15IHVuY2xlcyBtYXNoZWQgdGhlIGdyYXBlcyBhbmQgZ3JhbmRtYSBhbmQgbW9tIGNvb2tlZCBzYXVzYWdlIG92ZXIgdGhlIGNhbXBmaXJlIGNhdGNoaW5nIHRoZSBkcmlwcGluZ3Mgd2l0aCBhIHNsaWNlIG9mIHRoaWNrIGJyZWFkIGFuZCBwYXJjZWxsaW5nIGl0IG91dCB0byB1cyBiZWZvcmUgZGlubmVyLi4gCkhlJ3MgaW4gdGhlIHN0YWdlIGFmdGVyIGEgZGVhdGggd2hlcmUgeW91IGhhdmUgc28gbXVjaCB0byBkbyB0aGF0IHlvdSBzZWVtIHNhZCBidXQgb2theS4gClNvIGZpbmFsbHkgaW4gcHJvY2VzcyBvZiBjb21tdW5pY2F0aW9uIHdlIHNob3VsZCBhYmxlIHRvIGNvbW11bmljYXRlIGVhY2ggb3RoZXIuIFdlIHNob3VsZCB1bmRlcnN0YW5kIGVhY2ggb3RoZXIuIFdoZW5ldmVyIHdlIGNvbW11bmljYXRlIHdpdGggZWFjaCBvdGhlciB0aGVyZSBpcyBzb21ldGhpbmcgd2hpY2ggd2UgZ2FpbmVkIGZyb20gaXQgYW5kIHRoYXQga25vd2xlZGdlIHdpbGwgYmUgdXNlZCBpbiBmdXR1cmUgY29tbXVuaWNhdGlvbi4gClNvbWUgcGVvcGxlIHVzZSB0aGVzZSBwb2tlciBjb2xsZWN0aWJsZXMgYXMgcGllY2VzIG9mIGZvcnR1bmUuIApPYnRhaW4gbGljZW5zaW5nIGlmIHlvdXIgc3RhdGUgcmVxdWlyZXMgaXQgZm9yIHdvcmsgaW4gYSBsZWdhbCBlbnZpcm9ubWVudC4gSWYgeW91ciBzdGF0ZSByZXF1aXJlcyBpdCwgeW91IHdpbGwgaGF2ZSB0byBwYXNzIGFuIGV4YW0gdG8gYmUgbGljZW5zZWQsIGFuZCBzb21lIHN0YXRlcyBtYXkgYWxzbyByZXF1aXJlIHlvdSB0byBiZWNvbWUgYSBub3RhcnkgcHVibGljLiBVc3VhbGx5LCB5b3UnbGwgaGF2ZSB0byBjb21wbGV0ZSBhIHNob3J0IHRyYWluaW5nIHByb2dyYW0sIHdoaWNoIHlvdSBtaWdodCBiZSBhYmxlIHRvIGNvbXBsZXRlIGF0IGhvbWUsIGFuZCB0aGVuIHBhc3MgYW4gZXhhbSBmb3Igbm90YXJ5IHB1YmxpYyBsaWNlbnNpbmcuIApBbmQgZm9yZ2V0dGluZyBob3cgYmFkIHByZXZpb3VzIHByZXNpZGVudHMgd2VyZS4gRXZlcnkgcHJlc2lkZW50IGFmdGVyIDkvMTEsIGFuZCBldmVyeSBtYWpvciBjYW5kaWRhdGUsIGhhcyBiZWVuIGFuZCB3aWxsIGJlIGNvbXBhcmVkIHRvIEhpdGxlci4gQmVybmllLCBIaWxsYXJ5LCBCdXNoLCBPYmFtYSwgVHJ1bXAsIFJvbW5leS4gQ29uc2VydmF0aXZlcyBiZWNhdXNlIG9mIHRoZWlyIHNvY2lhbCB2aWV3cyBhbmQgbGliZXJhbHMgYmVjYXVzZSBvZiB0aGVpciBnb3Zlcm5tZW50IHZpZXdzLgpJdCBkb2VzbiBtZWFuIHRoZXkgd3JvbmcsIGJ1dCBpdCBwcm92ZXMgbm90aGluZy4gCklmIG5vdCwgd2hhdCB3b3VsZCB5b3UgY29tcGFyZSBpdCB0bz8KV2UgYWxzbyBmaW5kIG91dCB0aGF0IHRoZSBNY0NhaW4gY2FtcCBrZXB0IGhlciAibXV6emxlZCIgYWJvdXQgYSB2YXJpZXR5IG9mIGlzc3VlcyBhbmQgd291bGRuIGxldCBoZXIgc3BlYWsgaG9uZXN0bHkgdG8gdGhlIHByZXNzLlBlcmhhcHMgdGhlIG9ubHkgaW50ZXJlc3RpbmcgdGhpbmcgY29tZXMgZnJvbSB0aGUgYm9vayBwdWJsaWNpdHkgY2FtcGFpZ24uIApXZSBoYWQgYSBtYWlkLiBCZWNhdXNlIHRoZSBmaXZlIG9mIHVzIGNvdWxkbiBsZWF2ZSBvdXIgc2VhdHMgd2l0aCBzbyBtdWNoIGFjdGlvbiBvbiBvdXIgc2NyZWVucywgd2UgbmVlZGVkIHNvbWVvbmUgdG8gcHJlcGFyZSBhbmQgYnJpbmcgdXMgYnJlYWtmYXN0IGFuZCBsdW5jaC4gIkthenphIiB3YXMgdGhlIG11bSBvZiB0aGUgaG91c2UgYW5kIGdhdmUgb3VyIGxpdmVzIGEgY2VydGFpbiBzdHJ1Y3R1cmUuIApUaGVyZSBhcmUgdHJ1bHkgd2lsZCBvbmVzIHdobyBhcmUgYWJsZSB0byBjb25mcm9udCB5b3VyIGNhdC4gCkkgdGhpbmsgd2l0aCBTdGFyZmllbGQgdGhleSB3aWxsIGdpdmUgdXMgYWJvdXQgYSB5ZWFyIHdvcnRoIG9mIHRpbWUgYmVmb3JlIHJlbGVhc2Ugb25jZSB0aGV5IHJlYWxseSBzdGFydCBtYXJrZXRpbmcgaXQuLiAKSXQgY2FuIGJlIHRlbXB0aW5nIHRvIGtlZXAgd29ya2luZyB0aHJvdWdoIGEgYnJlYWssIHRvIGVhdCBsdW5jaCBhdCB5b3VyIGRlc2ssIG9yIGV2ZW4gc2tpcCBpdCBjb21wbGV0ZWx5LCBpZiB5b3UgaGF2ZSB0byBnZXQgc29tZXRoaW5nIGRvbmUuIEhvd2V2ZXIsIHlvdXIgYm9keSBuZWVkcyBhIGJyZWFrLCBhbmQgbm90IHRha2luZyBvbmUgY2FuIGxlYWQgdG8gZXhoYXVzdGlvbiBhbmQgYW54aWV0eSwgYW5kIGNhdXNlIHlvdXIgcGVyZm9ybWFuY2UgdG8gZGV0ZXJpb3JhdGUgYXMgeW91IHN0cnVnZ2xlIHRvIGNvbmNlbnRyYXRlLiAKRXBpcnVzUmVkdXggIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGRheXMgYWdvCkkgc2VlaW5nIG15IHRpbWVzIGdvIHVwIGFuZCB1cCBkZXNwaXRlIHRyYWluaW5nLiAKSWYgSSB3ZXJlIHRoZSBmaXJzdCBjb3AgSSB3b3VsZCBsZXZlbCB3aXRoIHRoZSBndXkuIEkgdGFrZSBteSBoYW5kIGF3YXkgZnJvbSBteSBob2xzdGVyIGFuZCBzYXkgc29tZXRoaW5nIG5ldXRyYWwgb3IgZXZlbiBjb21mb3J0aW5nIGxpa2UgIkhleSBtYW4gSSBnZXQgaXQsIEkgYXBvbG9naXplLiBJIGp1c3Qgb3V0IGhlcmUgcmVzcG9uZGluZyB0byBhIGNhbGwuIApBbmQgdGhlIHdob2xlICJBIGxhdyA9Lz0gcG93ZXIgZ2l2ZW4gdG8gYSBncm91cCB0byBjb250cm9sIHRoZSBzeXN0ZW0uIiBKdXN0IGRvZXNuIHBhcnNlIGZvciBtZS4gSSBoYXZlIG5vIGNsdWUgd2hhdCB5b3UgYXJlIHRhbGtpbmcgYWJvdXQuIApBbnl3YXksIGhlcmUgaXMgdGhlIHRoaW5nLApJIGRvbiB0aGluayBpdCBpbXBvc3NpYmxlIHRoZXkgaGFkIGEgZGlzYWdyZWVtZW50IGFuZCBoZWF0ZWQgYXJndW1lbnQ7IGl0IG1vcmUgdGhhdCBoZSBsb3N0IHRoZSBkcmVzc2luZyByb29tIHJhdGhlciB0aGFuIGp1c3QgYSBmZXcgcGxheWVycy4gClRoZSAuIGFydGljbGUgaXMgb2ZmZXJlZCBmb3IgZnJlZSB1c2UgaW4geW91ciBlemluZSwgcHJpbnQgLiB3aXRoIC4gLiBpcyBtb3JlIC4gYW5kIG1vcmUgYXJyb2dhbnQgdGhhbiBvciBsZXNzIHRoYW4geW8KT2YgY291cnNlIHdlIGFyZSBub3QgdGhlIGludmVudG9yIG9mIHRoZSBDYXNpbm8gUG9rZXIgVGFibGUgRmVsdCBhbmQgd2UgY2VydGFpbmx5IGFyZSBub3QgdGhlIG1hbnVmYWN0dXJlcnMgdGhhdCBtYWtlIHRoZW0uIApXZSBkb3VibGUgdGhlIHByaXppbmcgZm9yIHRoaXMgICB0aGVyZSBiZSA2IHdpbm5lcnMgbm93ICgyeCBSYXplciBCbGFja1dpZG93IEVsaXRlLCAyeCBSYXplciBEZWF0aEFkZGVyIEVsaXRlIGFuZCAyeCBSYXplciBLcmFrZW4gVG91cm5hbWVudCBFZGl0aW9uKS4gClRvIG1lIGl0IHNlZW1zIGEgbGl0dGxlIGluc2VjdXJlIGFuZCBuYXJjaXNzaXN0aWMgdG8gZXhwZWN0IHNvbWVvbmUgd2hvIHlvdSBqdXN0IG1ldCBmb3IgYSBkcmluayB0byBzd2lmdGx5IGRlY2lkZSBob3cgdGhleSBmZWVsIGFib3V0IHlvdSwgdGhlbiB2ZXJiYWxpemUgaXQgdG8geW91IGluIGEgZGlwbG9tYXRpYyB3YXksIHNvIHRoZXkgZG9uIGh1cnQgeW91ciBmcmFnaWxlIGZlZWxpbmdzLgpCaWdnZXN0IGlzc3VlIGlzIHRpbWVsaW5lcy4gVGltZWxpbmVzIGluIHRoZSB1bml2ZXJzZSwgc2FpZCBSZXlub2xkcywgd2hvIHN0YXJzIGluIHRoZSBpbmRpZSBjb21lZHkgZHJhbWEgTWlzc2lzc2lwcGkgR3JpbmQgaGl0dGluZyBzZWxlY3QgY2luZW1hcyBhbmQgYXZhaWxhYmxlIG9uIGRlbWFuZCB0aGlzIEZyaWRheS4gClRoZSB3YXkgdGhhdCB5b3UgcGxheSB0aGUgY2FyZHMgeW91IGFyZSBkZWFsdCBkaWZmZXJzIGdyZWF0bHkgZGVwZW5kaW5nIG9uIHRoZSBzaXR1YXRpb24geW91IGFyZSBpbi4uIApJZiBoZSBkb2VzLCBpdCB3aWxsIGdpdmUgcmlnaHQgd2luZyBtZWRpYSB0aGUgc3BhcmsgdGhleSBuZWVkIHRvIGdvIGZ1bGwgb24gIkZyZWVkb20gb2YgU3BlZWNoIiwgIlBvbGl0aWNhbCBQcmlzb25lciIgd2l0aCBpdCBhbmQgdGhlbiBUcnVtcCBqdXN0IHBhcmRvbnMgaGltIHRvIGNoZWVycyBhbmQgY2VsZWJyYXRpb24gZnJvbSBoaXMgYmFzZQpIaWdod2F5cyAgIHNsb3cgdHJhZmZpYyBjYXVzZXMgY29uZ2VzdGlvbi4gVG9vIG1hbnkgYm90dGxlbmVja3MuIFRoaXMgaXMgYmVmb3JlIGV2ZW4gY29uc2lkZXJpbmcgYWNjaWRlbnRzLiAKVGhlIDggZm9vdCA2IGluY2ggY2VpbGluZ3MgZ2l2ZSBhZGRpdGlvbmFsIHNwYWNlIG5vdCBqdXN0IGluIHRoZSB3YXJkcm9iZXMgYnV0IGNyZWF0ZSBhIHNlbnNlIG9mIHNwYWNlIHRocm91Z2hvdXQgdGhlIHVuaXQuLiAKSnVzdCB0byByZW1vdmUgYWxsIGRvdWJ0LCBzaW5jZSAvdS9lZ2FuaXN0IGdvdCBoaXQgd2l0aCBhbiBpbmNpdGVmdWwgY29tbWVudCB0cm9waHkgbGFzdCB0aW1lIGFyb3VuZDogdGhpcyBpcyBhIGRlY2lzaW9uIGJ5IHRoZSBlbnRpcmUgbW9kIHRlYW0sIG5vdCBhIHVuaWxhdGVyYWwgYWN0aW9uIG9uIGhpcyBwYXJ0LgpJIGdvaW5nIHRvIGNoYW5nZSB0aGUgc2V0dGluZ3Mgc28geW91IHdpbGwgYWxzbyBnZXQgYSBjb21tZW50IGV4cGxhaW5pbmcgdGhhdCBpdCB3YXMgcmVtb3ZlZCwgYW5kIHRoYXQgaXQgd2lsbCBiZSBtYW51YWxseSBjaGVja2VkIGFuZCBlaXRoZXIgcmVpbnN0YXRlZCBvciBhIHJlYXNvbiBmb3IgaXRzIHJlbW92YWwgZ2l2ZW4uIApQZW9wbGUsIEFubmEgRmFyaXMgZ290IGhlciBmaXJzdCBkb2cgYXMgYSBnaWZ0IGZyb20gaGVyIGh1c2JhbmQgaW4gMjAwOS4gQXMgVXMgV2Vla2x5IHJlcG9ydHMsIFByYXR0IHJlc3BvbmRlZCB0byB0aGUgY3JpdGljaXNtIG9uIGhpcyBub3cgZGVmdW5jdCBvZmZpY2lhbCB3ZWJzaXRlLiBBcyBVcyBXZWVrbHkgcmVwb3J0cywgUHJhdHQgcmVzcG9uZGVkIHRvIHRoZSBjcml0aWNpc20gb24gaGlzIG5vdyBkZWZ1bmN0IG9mZmljaWFsIHdlYnNpdGUuIApXZSBuZWVkIHRvIHRlYWNoIG91ciBkYXVnaHRlcnMgaG93IG1lbiBzaG91bGQgYmUgdHJlYXRpbmcgd29tZW4uIE5vdCBtYWtpbmcgdGhyZWF0cyBhZ2FpbnN0IGd1eXMgdGhhdCB3YW50IHRvIGRhdGUgdGhlbS4gSXQgZG9lc24gbG9vayBnb29kIGZvciB1cyBhcyBmYXRoZXJzIGFuZCB0ZWFjaGVzIHRoZW0gdGhhdCB2aW9sZW5jZSBpcyBhbiBhY2NlcHRhYmxlIHBhdGguCkluc2lkZXJzIGFsc28gaGF2ZSBncmVhdGVyIG9wcG9ydHVuaXRpZXMgaW4gZWF2ZXNkcm9wcGluZyBvbiB0aGUgcGxheWVycycgYWN0aW9ucyBhbmQgY291bGQgdXNlIGFuZCBzZWxsIHRoaXMgaW5mb3JtYXRpb24gc28gdGhhdCBvdGhlciBwbGF5ZXJzIGNhbiBjaGVhdC4uIApGb3IgbWUgdGhlIGxvdyBsaWdodCBjYXBhYmlsaXR5IGFuZCB0aGUgc2hhcnBuZXNzIHRydW1wIHRoZSB3ZWlnaHQgaXNzdWUuIEV2ZW4gd2l0aCB0aGUgaWJpcyBpdCBjb21wYXJlcyBuaWNlbHkgdG8gMTIgMzUuIE1ha2UgdGhlIGp1bXAsIHlvdSdsbCBiZSBnbGFkIS4gCkl0J3MgZ29vZCB0byB0YWtlIGEgYnJlYWsgYW5kIGRpc2Nvbm5lY3QgYmVjYXVzZSBpdCBkb2Vzbid0IG1hdHRlciBpbiBteSByZWFsIHdvcmxkLiIuIApPZiBjb3Vyc2UsIG9uY2UgeW91IHN0YXJ0IHRvIG1hbmRhdGUgd2hhdCBpcyBvciBpc24gcHJvcGVyIGJlaGF2aW91ci5CdWJiYUNoYW5lbCAgNDcgcG9pbnRzICBzdWJtaXR0ZWQgMTMgZGF5cyBhZ29JJ20gZG9pbmcgbXkgYmVzdCwgYnV0IEkndmUgZ290IHRvIHdhaXQgZm9yIExvZ28gdG8gY2F0Y2ggdXAhIEl0J3MgYWxsIERyYWcgUmFjZSBhbGwgZGF5IHVudGlsIHRoZSBwcmVtaWVyZSBvZiBzZWFzb24gMTEuIE15IGR2ciBpcyBub3QgcmVhZHkhSSd2ZSB3YXRjaGVkIHNvIG11Y2ggSSBmZWVsIGxpa2UgSSdtIGhvdCBnbHVpbmcgYW5kIHNld2luZyBpbiBteSBzbGVlcCwgdGVsbGluZyBteSBjYXRzIHRvIHNhc2hheSB5b3Ugc3RheSBhbmQgc2FzaGF5IHlvdSBnby4gSSBoYXZlIGFzc2lnbmVkIHRoZW0gdGhlIGRyYWcgbmFtZXMgb2YgVGhlIElyaWRlc2NlbnQgVGFic3RlciBhbmQgTGFkeSBUb290IFRvb3QuIApPbmUgdHJvdWJsZXNvbWUgZ3JheSBhcmVhIGlzICJzdGF0ZSBsZWQgbGVhcm5pbmcsIiBvciB0aGUgaW5kaWdlbm91cyBpbm5vdmF0aW9uIHB1c2ggaW4gQ2hpbmEuIFN0YXRlIG93bmVkIGVudGVycHJpc2VzIGluIENoaW5hIGNvbXBlbCBNTkNzIHRoYXQgd2FudCB0byB0YXAgdGhlIENoaW5lc2UgbWFya2V0cyB0byBwYXJ0IHdpdGggdGhlaXIgdGVjaG5pY2FsIGtub3dob3cgaW4gd2hhdCBoYXMgYmVlbiB0ZXJtZWQgYXMgImZvcmNlZCB0ZWNobm9sb2d5IHRyYW5zZmVyLiIgVHdlbnR5IHllYXJzIGFnbywgQ2hpbmVzZSBjb21wYW5pZXMgd291bGRuJ3QgZXZlbiBoYXZlIGJvdGhlcmVkIHRvIGluZm9ybSB0aGVpciBNTkMgcGFydG5lcnMgYWJvdXQgdGhlaXIgcGxhbnMgZm9yIHN1Y2ggdGVjaG5vbG9neSB0cmFuc2ZlcnMgICAidGhleSBqdXN0IHRha2UgaXQgYW5kIHN0YXJ0IHByb2R1Y2luZywiIHNhaWQgWmhhby4gCkkgbm90IHF1aXRlIHN1cmUgd2hlcmUgdGhlIGNvbnNlcnZhdGl2ZXMgb24gY2FtcHVzIGdldCB0aGlzIHNlbnNlIG9mIHZpY3RpbWl6YXRpb24gZnJvbSwgYnV0IHd0di4KTmljb2xhcyBIdWxvdCwgbWluaXN0cmUgZCdFdGF0LCBtaW5pc3RyZSBkZSBsYSBUcmFuc2l0aW9uIGNvbG9naXF1ZSBldCBTb2xpZGFpcmVTb3VzIGxlIGhhdXQgcGF0cm9uYWdlIGRlClJpc2UgYmFjayB1cCBvbmUgbW9yZSB0aW1lIGFuZCBkbyBhIDM2MCBmcm9udGZsaXAuIApUaW0gSG9ydG9ucyBmcmFuY2hpc2VlcyB0byByZWNlaXZlIHNldHRsZW1lbnQgb2ZmZXIgaW4gdHdvIGNsYXNzCkNhbiB5b3UgdmVyYmFsbHkgc3VycmVuZGVyIHlvdXIgaGFuZCBpbiBwb2tlcj8KVGhlIGlycml0YXRpbmcgY29udmVyc2F0aW9uIHdpdGggQnJvb21lIHdvcmUgb24gYW5kIEkgdG9sZCBoaW0gYWJvdXQgdGhlIG92YXJpYW4gcmVhZGluZyB0cmllZCBvbiBtZSBieSBTZXJnZSBCZW5oYXlvbiwgYW5kIHRoZSBncmltIGV4Y29yY2lzdGljIG1pbmQgZnVjayB0aGF0IHdlbnQgb24gYXQgdGhlIFNhY3JlZCBFc290ZXJpYyBoZWFsaW5nIHdvcmtzaG9wLiBJIHRvbGQgaGltIEkgc3VibWl0dGVkIGNvbXBsYWludHMgdG8gdGhlIE5TVyBIQ0NDLiAKSXQgaXMgY2xlYXIgdG8gbWUgdGhhdCB5b3Ugd2FudCB0aGUgc3VydmV5IGl0c2VsZiB0byBhbnN3ZXIgeW91ciBxdWVzdGlvbnMuIAooMTk5OCkgU2hhaCBSdWtoIEtoYW4gYW5kIE1hbmlzaGEgS29pcmFsYSBpbiBEaWwgU2UuIApXZSBhcHByZWNpYXRlIGFsbCB5b3VyIGZlZWRiYWNrIGFuZCB3YW50IHRvIGNvbnRpbnVlIHRvIG1ha2UgdGhpcyBzdWJyZWRkaXQgYXMgZ3JlYXQgYXMgaXQgcG9zc2libHkgY2FuLiAKIkkga25vdyB5b3UgZ3V5cyBjYW4ndCBjb21wcmVoZW5kIGhhbGYgdGhhdCBzaGl0LiBXaG8gZ2l2ZXMgYSBmdWNrPyBJdCBpcyBhIGdhbWUuIElmIHlvdSBnbyB0byBjbGFzcywgc3RheSBvZmYgeW91ciBmdWNraW4gcGhvbmUsIHNpdCBpbiB0aGUgZnJvbnQsIHR1cm4gaW4geW91ciBob21ld29yaywgeW91J2xsIGdldCBhIEMhIFlvdSBndXlzIGNhbid0IGV2ZW4gZG8gdGhhdCBzaGl0LCBtYW4uIEFuZCBJJ21hIHRlbGwgeWEgcmlnaHQgbm93LCBvbiBjYW1lcmEsIEkgZG9uJ3QgZ2l2ZSBhIGZ1Y2suIEkgZGlkbid0IGxlYXJuIG9uZSB0aGluZyBpbiBoaWdoIHNjaG9vbCBvciBjb2xsZWdlLiBPbmUgZnVja2luIHRoaW5nLiBJIGNvdWxkbid0IHRlbGwgeW91IHdoYXQgYSBmdWNraW4gYXRvbSBpcywgSSBjb3VsZG4ndCB0ZWxsIHlvdSB3aGF0IGEgZnVja2luIG1pY3JvYmUgaXMuIEkgY291bGRuJ3QgdGVsbCB5b3Ugd2hhdCB0aGUgZnVjayBhbnkgb2YgdGhhdCBzaGl0IGlzLiBCdXQgSSdtIGEgY29sZCBodXN0bGVyLCBzbyBJIGZpZ3VyZWQgaXQgb3V0LiIKRGVyIFVybGF1YiBpc3QgZ2VyZXR0ZXQuIApHb2QsIGl0IGxvbmcgQUYgSSBzb3JyeSBndXlzLiAKQXMgZ3JlYXQgb2YgdGhlIHNlcnZpY2UgaXMgdG8gdGhlIGNvbnN1bWVyLCBJIGRvbiB0aGluayBwZW9wbGUgaW4gdGhpcyBzdWIgcmVhbGl6ZSBob3cgdW5zdGFibGUgdGhlaXIgY3VycmVudCBidXNpbmVzcyBpcy4gVGhleSBhcmUgaGVtb3JyaGFnaW5nIG1vbmV5LCB5ZXQgc29tZWhvdyBhcmUgcHJpY2VkIHNpbWlsYXIgdG8gRGlzbmV5LkkgYWx3YXlzIHNhaWQgdGhpcywgYW5kIGl0IGhhcHBlbmVkIHdpdGggRnJpZW5kcyB3LyBXYXJuZXJNZWRpYSwgTmV0ZmxpeCBjYW4gRUFTSUxZIGdvIHVuZGVyIHdhdGVyIGFzIGVudGl0aWVzIGNvbnRpbnVlIHRvIHVwIHRoZWlyIGxpY2Vuc2luZyBmZWVzLiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBJdCBteSBmYXZvdXJpdGUgb25lIHRvIHVzZS4gVGhleSBoYXZlIHZlcnkgbmljZSBzaWduIHVwIGJvbnVzZXMgd2hpY2ggSSByZWNvbW1lbmQgdGFraW5nIGFkdmFudGFnZSBvZi4KMikgRmVkb3IgSG9seiAganVzdCBzbyBuYXR1cmFsbHkgdGFsZW50ZWQgaGUgY29tZXMgaW4gYXQgbXkgbnVtYmVyIHR3by4gSGlzIGFnZ3Jlc3NpdmUgYmVoYXZpb3IgYW5kIHJlYWRpbmcgYWJpbGl0aWVzIGFyZSBpbnNhbmUgZm9yIGEgcGVyc29uIGhpcyBhZ2UuIEhlIGJ1c3RlZCBpbnRvIHRoZSBzY2VuZSB2ZXJ5IHlvdW5nLCBhbmQgSSBiZWxpZXZlIHRoaXMgd2lsbCBsZWFkIGhpbSB0byBvbmUgZGF5IHRvcCB0aGUgYWxsIHRpbWUgbW9uZXkgbGlzdC4KV2UgZGlkbiB3YW50IGEgc29saWQgY29sb3VyIHRoZSB3aGl0ZSBjYWJpbmV0cyBpdCBjb3VsZCBiZSBoYXJzaCB3ZSBsb29rZWQgZm9yIHNvbWV0aGluZyB3aXRoIGEgYml0IG9mIGEgZ3JhZGllbnQgYW5kIHdlIGZvdW5kIGl0IGluIGEgKG1vc2FpYykgZnJvbSBEYWx0aWxlIHRoYXQgaW5jbHVkZXMgdHdvIGJsdWVzIGFuZCBhIHdoaXRlLiAKVmlldG5hbSBoYXMgZXZlcnkgcmlnaHQgdG8gYmUgcHJvdWQgb2YgdGhlIGpvYiBpdCBkaWQgd2l0aCBob3N0aW5nIHRoZSB1bnN1Y2Nlc3NmdWwgc3VtbWl0LCBlc3BlY2lhbGx5IG9uIHN1Y2ggc2hvcnQgbm90aWNlLCBidXQgaXQgY2FuIGJlIHByb3VkIHdpdGhvdXQgdGhlIG5lZWQgZm9yIEFtZXJpY2FuIGFwcHJvdmFsIG9uIHRoZSBtYXR0ZXIgKGVzcGVjaWFsbHkgd2hlbiBpdCBub3QgYWN0dWFsbHkgZ2l2ZW4gaW4gdGhlIHZpZGVvKS4uIApXaGlsZSB0aGUgcmVhbCBQYXR0aSBTbWl0aCBtYWRlIG91ciBzdG9tYWNocyBhY2hlIHdpdGggZGVzY3JpcHRpb25zIG9mIGhlciBwZXJwZXR1YWwgaHVuZ2VyLCBhIGxpdGVyYWwgc3RhcnZpbmcgYXJ0aXN0IHdobyBjb3VsZCBvbmx5IGRlbGlnaHQgaW4gdGhlIHJhcmUgY3VwIG9mIGNvZmZlZSBkb3duIHRoZSBzdHJlZXQsIHRoZSB2ZXJzaW9uIGhlcmUgaXMgdG9vIGluIHRoZSBrbm93LiAKQ0lCQyBzYWlkIGl0cyByZXN1bHRzIHdlcmUgYWZmZWN0ZWQgYnkgYSBmZXcgaXRlbXMsIHN1Y2ggYXMgJDIyNyBtaWxsaW9uIHRvIHNlY3VyZSBpdHMgcGxhY2UgaW4gQWlyIENhbmFkYSBuZXcgbG95YWx0eSBwcm9ncmFtLiAKVGhlcmUgcGxlbnR5IHdyb25nIHdpdGggdGhlIGp1c3RpY2Ugc3lzdGVtLiBUaGVyZSBwbGVudHkgd3Jvbmcgd2l0aCBEUkVzIGFuZCB0aGUgcHJldmFsZW5jZSBvZiBwc2V1ZG9zY2llbmNlIGluIHRoZSBjb3VydHMsIHRob3VnaCB0aGUgbGF0dGVyIGlzIGF0IGxlYXN0IGFzIGxpa2VseSB0byBnZXQgYW4gYWNxdWl0dGFsIG9yIGZhbHNlIGZpbmRpbmcgb2YgaW5jb21wZXRlbmNlIGFzIGl0IGlzIHRvIGdldCBhIGNvbnZpY3Rpb24uIEJ1dCBpZiBUSElTIGlzIGFuIGV4YW1wbGUgb2Ygb3VyIHRlcnJpYmxlIHN5c3RlbSB3b3JraW5nIGFnYWluc3QgdGhlIHBvb3IsIEkgbm90IHN1cmUgaG93IHdvcnJpZWQgSSBhbS4gClRoZSBib29tIGhhcyBiZWVuIHN1Y2ggdGhhdCBTdHJhdGhyb3kgQ2FyYWRvYyBhbHNvIHJlY2VudGx5IGNyZWF0ZWQgdGhlIHBvc2l0aW9uIG9mIG1hbmFnZXIgb2YgYnVpbGRpbmcgYW5kIHBsYW5uaW5nIHRvIGVuc3VyZSB0aGUgbXVuaWNpcGFsaXR5IHRvIGtlZXAgdXAgd2l0aCBpdHMgZXhwYW5zaW9uLgpUbyBkZXRlY3QgdGhlIHN0aWZmIG9yIHBhaW5mdWwgbXVzY2xlIHBvaW50cyB0aGF0IHJlcXVpcmUgYXR0ZW50aW9uLCBuZXVyb211c2N1bGFyIG1hc3NhZ2UgbWV0aG9kcyBhcmUgYXBwbGllZCwgdXRpbGl6aW5nIHNwZWNpYWwgaGFuZCBwb3NpdGlvbnMsIHN0cm9rZXMgYW5kIG1ldGhvZHMgdG8gZW5oYW5jZSBmbGV4aWJpbGl0eSBhbmQgY29tZm9ydC4gCk1heWJlIGFuIEVhc3Rlcm4gV2hpdGUgQ2VkYXIgaW4gdGhlIHBlcmZlY3QgZW52aXJvbm1lbnQuIApEaWZmZXJlbmNlIEJldHdlZW4gVHVybm92ZXIgUmV2ZW51ZQpUaGVzZSB0eXBlcyBvZiBwcm9qZWN0cyB3ZXJlIGNvbW1vbiB0aHJvdWdob3V0IHRoZSBzb3ZpZXQgZXJhLCBhcyBmb3IgcGxhbm5lZCBlY29ub21pZXMgYW4gZXh0ZW5zaXZlIGdyb3d0aCBpbiB0aGUgaW5wdXRzIG9mIHByb2R1Y3Rpb24gaXMgbXVjaCBlYXNpZXIgdG8gYWNjb21wbGlzaCB0aGVuIHRoZSBpbnRlbnNpdmUgZ3Jvd3RoIHdpdGggZXhpc3RpbmcgaW5wdXRzIGFzIHdlIHNlZSBpbiBtb2Rlcm4gZWNvbm9taWVzLlRoZSBlYXJseSBzdXJnZSBpbiBmYXJtIHByb2R1Y3Rpb24gZW5jb3VyYWdlZCBoaW0gdG8gdGFsayBpbiAxOTU3IG9mIG92ZXJ0YWtpbmcgQW1lcmljYW4gcGVyIGNhcGl0YSBtZWF0IHByb2R1Y3Rpb24gYnkgMTk3NSwgc29tZXRoaW5nIHRvIHdoaWNoIHRoZSBTb3ZpZXQgVW5pb24gbmV2ZXIgY2FtZSBjbG9zZS4gCkRlbnRhbCBjaGVja3MgcmV2ZWFsZWQgdGhlIHJlbWFpbnMgd2VyZSB0aGF0IG9mIFNhYnJpbmEuIFNoZSBoYWQgYmVlbiBzaG90LCBmb3JlbnNpYyBleHBlcnRzIGJlbGlldmVkLiBUaGlzdGxlcyBncm93aW5nIGF0IHRoZSBzY2VuZSBtYXRjaGVkIHRob3NlIGZvdW5kIGluIHRoZSBodXNiYW5kJ3MgdmVoaWNsZS4KQW5uIEIuIApJdCdzIGFsbCBhYm91dCB0aGUgcHJvZml0IGFuZCB3aG8gZ2V0cyBiZW5lZml0LiBUaGVyZSdzIGEgZGlyZWN0IGNvcnJlbGF0aW9uIGJldHdlZW4gY29ycG9yYXRpb25zIHRoYXQgYXJlIGdldHRpbmcgcmljaCwgYW5kIHRoZSBmYWN0IHRoYXQgd2UgaGF2ZSBzdHVkZW50cyB3aG8gYXJlIHNoYWNrbGVkIHdpdGggZGVidC4gCkVhY2ggd29tYW4gY29udHJvbHMgaGVyIG93biBhcHAsIHBvc3RzIHdoYXQgc2hlIHdhbnRzLCBhbmQgZGVjaWRlcyBleGFjdGx5IGhvdyBOU0ZXIHNoZSB3YW50cyB0byBiZS4uIApOZXcgb3IgdXNlZDogVXNlZApFZGl0OiBUaGFua3MgZm9yIHRoZSBzaWx2ZXIgYW5kIGdvbGQhCk1vcm5pbmcgb2YgdGhlIE1vIFN1cmYgQ29tcCBpbiBCYWxsaW5hOiBNb3JuaW5nIG9mIHRoZSBNbyBpcyBhIGxvY2FsIGdyYXNzIHJvb3RzIGV2ZW50IHdpdGggYWxsIGVudHJhbnRzIHJlcXVpcmVkIHRvIHNwb3J0IGEgTW8sIHJpZGUgYSBwcmUgMTk4MHMgc3VyZmJvYXJkIGFuZCByb2NrIGFuIG91dGZpdCByZWxldmFudCB0byB0aGUgMTk3MHMuIEFsdGVyIGVnb3MgYXJlIGVuY291cmFnZWQuIEFsbCBwcm9jZWVkcyBmcm9tIHRoZSBldmVudCBhcmUgZG9uYXRlZCB0byB0aGUgTW92ZW1iZXIgRm91bmRhdGlvbiBhbmQgaW52ZXN0ZWQgaW4gcHJvZ3JhbXMgZm9jdXNlZCBvbiBwcm9zdGF0ZSBjYW5jZXIsIHRlc3RpY3VsYXIgY2FuY2VyLCBhbmQgbWVuIG1lbnRhbCBoZWFsdGguIApEYXMgRHVyY2hzY2huaXR0c2FsdGVyIGRlciBHIGJlZmluZGV0IHNpY2ggaW0gRWlua2xhbmcgbWl0IGRlciBha3R1ZWxsZW4gZGVtb2dyYXBoaXNjaGVuIE5vcm1hbHZlcnRlaWx1bmcgc28gd2llIHdpci4gCkkgZmVlbCBsaWtlIHlvdSBqdXN0IG5lZWQgdG8gY29udGludWUgdG8gZ2l2ZSBoaW0gdGltZSB0byByZWxheCB3aGVuZXZlciBoZSBpcyBob21lLiAKVGhlIERQVCBBcHJpbCAyMDE3IG9wZW5zIGRvb3JzIHRvIHBsYXllcnMgYXQgRGVsdGluIFJveWFsZSBHb2Egd2l0aCBpdHMgRFBUIDE1SyBLaWNrb2ZmIG9uIDE5dGggQXByaWwgYXQgN1BNLCB3aGljaCBpcyBhIHJlIGVudHJ5IHRvdXJuYW1lbnQgdGhhdCBwcm9taXNlcyBScy4gMjAsMDAsMDAwIGd1YXJhbnRlZS4gT24gMjB0aCB0byAyMm5kIEFwcmlsLCBwbGF5ZXJzIGNhbiB0YWtlIHBhcnQgaW4gQWRkYTUyIDM1SyBNYWluIEV2ZW50LCBhIGhpZ2hsaWdodCBldmVudCB3aGVyZWluIHBsYXllcnMgY2FuIGVudGVyIHRoZSB0b3VybmFtZW50IG92ZXIgdHdvIGRheXMgRGF5IDFBICgyMHRoIEFwcikgYW5kIERheSAxQiAoMjFzdCBBcHIpIGFuZCBpZiBhIHBsYXllciBidXN0cyBvbiBEYXkgMUEsIGhlL3NoZSBjYW4gcmUgZW50ZXIgb24gRGF5IDFCLgpGZWF0dXJpbmcgdGhlcmVsZWFzaW5nIG9mIHRoZSB6ZXJvIElCVSBoYXp5IElQQSB0aXRsZWQ6IEhhcyB0aGF0IGxpbmUgZXZlciB3b3JrZWQgZm9yIHlvdSBiZWZvcmU/ISBPbmUgZG9sbGFyIG9mIGVhY2ggcGludCBzb2xkIGJlbmVmaXRzIFBpbmsgQm9vdHMgU29jaWV0eSBhbmQgYW5vdGhlciAkMSB3aWxsIGJlIGRvbmF0ZWQgdG8gQW5kIE5vdyBTaGUgUmlzZXMuIAoxMCkgVGhlIG1heGltdW0gc2FmZSBsZXZlbHMgZm9yIHZpdGFtaW4gMjUoT0gpRDMgaW4gdGhlIGJsb29kIGlzIDI3NSBubW9sL2wgKDEwMCBtZy9kbCkuCihQbGVhc2Ugbm90ZSB0aGF0IE5TRlcgdGFncyBkbyBub3QgY292ZXIgdGhlIGFmb3JlbWVudGlvbmVkIGNvbnRlbnQuKS4gCkFuZCB0aGF0IG9rYXkuIApJZiB5b3Ugd2FudCB0byBnZXQgR1dBTU0oMzAgbWF4IHRpdGxlcykgaXQgY29zdHMgaHVuZHJlZHMgb2YgaG91cnMgb2YgdGltZSBhbmQgYWxvdCBvZiBnb2xkIGVzcGVjaWFsbHkgaWYgeW91IGRvbiBrbm93IGFueW9uZSBhbmQgc3RhcnRpbmcgZnJvbSBzY3JhdGNoLiBJZiB5b3Ugd2FudCBDaGFtcGlvbiBvZiB0aGUgR29kcyAoNTAvNTAgSGFsbCBvZiBNb251bWVudHMpIGl0cyBldmVuIGxvbmdlciBidXQgc29tZSBzdHVmZiBmcm9tIEdXQU1NIGNhcnJpZXMgb3Zlci4gCk9mIGNvdXJzZSwgdGhlcmUgYXJlIHdvbWVuIHdobyBoYXZlIGZhbHNlbHkgYWNjdXNlZCBvdGhlcnMgb2YgYXNzYXVsdC4gCkkgd291bGQgYWRkIGEgY291bnRlciwgYXNzb2NpYXRlZCB0byBlYWNoIGxpbmUgd2l0aCB0aGUgcHJvYmFiaWxpdHkgb2Ygb2NjdXJyZW5jZS4gVW5pZm9ybSBwcm9iYWJpbGl0eSBkaXN0cmlidXRpb24pLiAKVGhlcmUgaXMgYXRtb3NwaGVyZSBhbmQgaXRzIGEgY2xhc3NpYyBtZWxib3VybmUgYXJlYSwgYW5kIHNvbWUgb2YgdGhlIHJlc3RhdXJhbnRzIGFyZSBncmVhdC4gCkZpbGVkIFVuZGVyOiAxMDkwIFRoZSBGYW4sIENvdWdhcnMsIFNwb3J0cwpTbyBmYXIgaXQgbG9va3MgbGlrZSBpdCBmYXVsdHkgc2luY2UgeW91IGFscmVhZHkgdHJpZWQgcmUgaW5zdGFsbGluZyB0aGUgZHJpdmVycyBldGMuRG8geW91IGhhdmUgYSBDUFUgd2l0aCBpbnRlZ3JhdGVkIGdyYXBoaWNzPyBJZiB5ZXMsIHlvdSBjb3VsZCByZW1vdmUgdGhlIGdyYXBoaWNzIGNhcmQgZnJvbSB0aGUgUEMgYW5kIGNoZWNrIGlmIHRoZXNlIGlzc3VlcyBwZXJzaXN0IHdpdGggdGhlIGludGVncmF0ZWQgZ3JhcGhpY3MuQXZhdGFyVHVuZXIgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ29UaGUgaW5mb3JtYXRpb24gZnJvbSBhYm92ZSBjb21tZW50ZXIgaXMgbm90IDEwMCUgYWNjdXJhdGUuIApXaGVuIGl0IGNvbWVzIHRvIGF3YXJkcywgaXQncyBoYXJkIHRvIGNvbXBldGUgd2l0aCBBcm1zYnkgQWJiZXkuIEluIEphbnVhcnksIGl0IHJlY2VpdmVkIHRoZSBzYW1lIGFjY29sYWRlIGZyb20gUmF0ZUJlZXIgcmV2aWV3ZXJzICAgZm9yIHRoZSBmaWZ0aCBjb25zZWN1dGl2ZSB5ZWFyLiAKRWFjaCBvbmUgd2FzIHNldmVyYWwgZGF5cyBhbmQgYSBkZXN0aW5hdGlvbixyZXF1aXJlZCBhIGdpZnQsIGFuZCByZXF1aXJlZCB0aGUgYnJpZGFsIHBhcnR5IHRvIGZ1bmQgdGhlbSBpbmNsdWRpbmcgdGhlIGJyaWRlcyBwb3J0aW9ucy4gCkFzIHdlbGwuIEFsdGhvdWdoIGl0cyBoYXJkIHRvIGV4YWN0bHkgY29tcGFyZSB0aGUgc2NvcGVzIG9mIGRhbWFnZSBhbmQgZWZmZWN0IG9uIHRoZSBwZXJzb24gdGhlIHN1cmdlcnkgaGFzIGJldHdlZW4gdGhlIGJvZHkgdHlwZXMuIApXaHkgZG8gd2UgdHJlYXQgc2V4IGRpZmZlcmVudGx5PyIuIApCcmVmLiBEYW5zIGwgZHUgYm9uLCBkdSBtb2lucyBib24sIHF1ZWxxdWVzIGNvcXVpbGxlcywgaW5leGFjdGl0dWRlcyBldCBhdXRyZXMgYm91cmRlcy4gUXVlbHF1ZXMgZXhlbXBsZXMgOiBsIGRlIGRyb2l0ZSwgcGFnZSAyNiwgbmUgcmVwcnNlbnRlIHBhcyB1bmUgaHlzb3BlIG9mZmljaW5hbGUgY29tbWUgaW5kaXF1IGRhbnMgbGEgbGdlbmRlIG1haXMgdW5lIGVzcGNlIGRlIHNhdWdlIDsgcGx1cyBsb2luLCBwYWdlIDMwLCBsIGR1IGNlbnRyZSBuIHBhcyB1bmUgYmVyY2UgZHUgQ2F1Y2FzZSBtYWlzIHVuZSBhbmdsaXF1ZSA7IHBhZ2UgNDEsIHVuZSBjb25mdXNpb24gZXN0IGZhaXRlIGVudHJlIG1hY3J0IGh1aWxldXggZXQgaHVpbGUgdmd0YWxlLCBkZSBtbWUgcXUgbGEgcGFnZSA0MyA7IHBhZ2UgNDIsIGxlIGpvam9iYSBuIHBhcyB1bmUgaHVpbGUgdmd0YWxlIG1haXMgdW5lIGNpcmUgdmd0YWxlIDsgbCBuZSBkaXN0aW5ndWUgcGFzIGxlcyBub3Rpb25zIGQgZXQgZCBlc3NlbnRpZWxsZSwgZXRjLgpXaGlsZSBiZWluZyBidWZmZXRlZCBieSBxdWVzdGlvbnMgYWJvdXQgaGlzIGJlaGF2aW9yLCBGYXZyZSBhbHNvIGhhcyBiZWVuIGJhdHRlcmVkIGJ5IGluanVyaWVzIHRvIGhpcyBhbmtsZSwgY2hpbiwgcmlicywgYmFjaywgaGVhZCBhbmQgdGhyb3dpbmcgc2hvdWxkZXIgICB0aGUgb25lIHRoYXQgZm9yY2VkIHRoZSBmYW1vdXNseSBoYXJkeSA0MSB5ZWFyIG9sZCBxdWFydGVyYmFjayB0byBtaXNzIGEgc3RhcnQsIGFnYWluc3QgdGhlIEdpYW50cyBvbiBEZWMuIDEzLgpJcyBpdCBqdXN0IHVzIG9yIHdhcyB0b25pZ2h0J3MgUml2ZXJkYWxlIGxlc3MgcmlkaWN1bG91cyB0aGFuIHVzdWFsPwpXYXluZSBXZW50d29ydGggYW5kIEppbW15IE9sc29uLCBXaGl0ZXdhdGVyLCBhbmQgQWRhbGUgR29lZ2xlaW4sIEZvcnQgQXRraW5zb24uIE1PTlJPRSBIT1NQSVRBTCBUaGllZiBMZWF2ZXMgR0kgJDE1MCBhbmQgVGlja2V0cyBPQUtMQU5ELCBDYWxpZi4gClBhdHJpY2sgUm9nZXIgdm9pdCBlbiBwYXJ0aWUgdW5lIG9yaWdpbmUgZ250aXF1ZSAgc29uIGFwcHJvY2hlIGludHVpdGl2ZSBkdSBnb3QgcHVpcyBsZSBtb2RlbGFnZSBwYXIgbGUgcG90YWdlciwgbGEgY3Vpc2luZSBkZSBzZXMgcGFyZW50cy4gUGF0cmljayBSb2dlciBzZSByZXZlbmRpcXVlIGNsYWlyZW1lbnQgYXR5cGlxdWUgZXQgc2VtYmxlIHMnYW11c2VyICBhZmZpcm1lciBxdSdpbCBlc3QgImV4dHJtZW1lbnQgZmVybSIgcXVlc3Rpb24gZ290IHF1YW5kIHRhbnQgZCdhdXRyZXMgcHJuZW50IGwnb3V2ZXJ0dXJlIGV0IGxhIGN1cmlvc2l0LiBBaW5zaSwgbCdpbmZsdWVuY2UgZGNpc2l2ZSBkdSBwb3RhZ2VyIGx1aSByZW5kIHRyYW5nZXIgbGUgcG9pc3NvbiBldCBpbCBuJ3Byb3V2ZSBwYXMgZGUgY3VyaW9zaXQgcG91ciBsYSBjdWlzaW5lIGphcG9uYWlzZS4gClRoZSAybmQgbGFyZ2VzdCBVbml2ZXJzaXR5IFJMIENsdWIgaW4gdGhlIGNvdW50cnkgKGFmdGVyIHN0cnVnZ2xpbmcgdG8gZmllbGQgYSAxNyBpbiAyMDEyKS4KUmVzcGF3biBrbm93cyB3aGF0IHRoZXkgYXJlIGRvaW5nIHRoZXJlLiBJcm9uaWNhbGx5LCBJIHRoaW5rIGl0IGFsc28gcnVucyBhdCBhIDIwSHogdGlja3JhdGUuIFdoZXJlIEkgdGhpbmsgaXQgc3VjY2VlZHMgaXMgYWRkaW5nIGEgbG90IG1vcmUgZ29pbmcgb24gKGFpIHBsYXllcnMsIFRpdGFuIGRyb3BzLCBiYWNrZ3JvdW5kIGFjdGl2aXR5KSBzbyBpdCBtYWtlcyBpdCBhIGxvdCBsZXNzIG5vdGljZWFibGUuIFJlc3BvbnNpdmVuZXNzIGlzIGF0IGl0cyBwZWFrIGluIHRoZSBnYW1lIGFuZCB5b3UgcmFyZWx5IGZlZWwgbGlrZSB5b3UgYXJlIGF0IHRoZSBtZXJjeSBvZiB0aGUgZ2FtZSwgdW5sZXNzIHNvbWVvbmUgaXMgc3R1cGlkIGdvb2Qgd2l0aCBhIFJvbmluIGFuZCBkZXN0cm95cyBldmVyeW9uZSBpbiBhIG1hdGNoIFhELiAKUXVlc3Rpb25zIGFib3V0IGhvdyBhIGp1c3RpY2UgaXMgcmVpbWJ1cnNlZCBhbmQgYnkgd2hvbSwgb3IgYWJvdXQgdGhlIHRydWUgc291cmNlIG9mIHRoZWlyIGRlYnQsIGFyZSBub3QgaW1tYXRlcmlhbCB0byB0aGUgam9iLiAKTWVhbndoaWxlLCB0aGUgZGVncmVlIG9mIG92ZXJhbGwgdnVsbmVyYWJpbGl0eSByZW1haW5zIGhpZ2ggaW4gSGFtaWx0b24sIE9udC4sIGFuZCBhbHNvIGluIFZhbmNvdXZlciwgd2hlcmUgdGhlIGhvdXNpbmcgbWFya2V0IGhhcyBjb29sZWQgaW4gcmVjZW50IHF1YXJ0ZXJzIGJ1dCBwcm9wZXJ0eSBwcmljZXMgcmVtYWluIGhpZ2ggY29tcGFyZWQgdG8gdGhlc2UgZWNvbm9taWMgZnVuZGFtZW50YWxzLgpGaW5hbGx5LCBhIDIyIHllYXIgb2xkIFBlbm5zeWx2YW5pYSB3b21hbiB3YXMgYXJyZXN0ZWQgYWZ0ZXIgc2hlIHNjb3JjaGVkIGhlciBtYW4gZ2VuaXRhbHN3aGlsZSBoZSB3YXMgaW4gdGhlIHNob3dlci4uIApDaGluYSBhbHJlYWR5IGxldCB1cyB0YXN0ZSB3aGF0IGl0IGxvb2sgbGlrZSBpZiB3ZSBkYXJlIHRvIGZlY2sgd2l0aCB0aGVtIHdoZW4gdGhlIHdob2xlIFNBQUQgaGFwcGVuZWQuIAoiRXZlcnlvbmUgd2FudHMgdG8gd29yayBoZXJlLCIgc2hlIHNheXMuIEZpdmUgeWVhcnMgbGF0ZXIsIHNoZSBpcyBub3cgdGhlIFBhbmNoYWthcm1hIG1hbmFnZXIuClZpYSBub2cgZWVuIGtsZWluIHNjaGF0dGlnIGthcGVsbGV0amUgcmVkZW4gd2UgU2xvd2FraWplIHdlZXIgYmlubmVuLiAKR29vZCBsdWNrIGFuZCBJIGhvcGUgb25lIGRheSBHb2QgZ2l2ZSBhbGwgb2YgdXMgZ3VpZGFuY2UgYW5kIEkgc2luY2VyZWx5IGhvcGUgd2UgYWxsIHVuaXRlIHdpdGggZWFjaCBvdGhlciBhZ2FpbnN0IG91ciBlbmVteSAoWmlvbmlzbSBhbmQgd2VzdGVybiBhdGhlaXN0IGNvdW50cmllcykgaW4gb3JkZXIgdG8gYmUgcmVhbGx5IGZyZWUgb2YgdGhlaXIgY29udHJvbCBhbmQgc2xhdmVyeS4KSW4gdGhlIG1ham9yaXR5IG9mIHN0dWRpZXMgdGhlIGNvbXBvdW5kcyB1bmRlciBpbnZlc3RpZ2F0aW9uIGFyZSBhIG1peHR1cmUgb2YgaW5ncmVkaWVudHMgaW4gd2hpY2ggdGhlIG1vc3QgcG90ZW50IGZhY3RvciBpcyBsaWtlbHkgdG8gYmUgZGlsdXRlZC4gCk9uIHRoZSBQYWlyIFBsdXMgaXQgZG9lcyBub3QgbWF0dGVyIHdoYXQgdGhlIGhhbmQgaXMsIGlmIGl0IGlzIGEgcGFpciBvciBiZXR0ZXIsIGl0IGdldHMgcGFpZC4gClZhcmllZCBhcmNoaXRlY3R1cmUgcGF0dGVybnMgdGhyb3VnaCB0aGUgY2l0eSBhcmUgd2hhdCBtYWtlcyBOWSwgTlkuIApPaCByZWFsbHk/IFNvIGRhdGluZy9yZWxhdGlvbnNoaXBzIGRvZXNuIGludm9sdmUgYnV5aW5nIGRpbm5lciwgZHJpbmtzLCBnaWZ0cywgdGlja2V0cyB0byBzaG93cywgY2xvdGhlcywgZmxvd2VycywgamV3ZWxyeT8gT3IgcGVyaGFwcyB5b3VyIG1vc3QgdmFsdWFibGUgYXNzZXQgb2YgYWxsLCB0aW1lPyBQZXJoYXBzIHlvdSBhcmUgYSBncmFkdWF0ZSBvZiBMZXlraXMgMTAxIGFuZCBoYXZlIGxlYXJuZWQgdG8gc3BlbmQgbWluaW1hbCBjYXNoLiBCdXQgZXZlbiB0aGVuLCB5b3Ugc3RpbGwgc3BlbmRpbmcgbW9uZXkuIAooU2VlIHJlbGF0ZWQgbGluaykgQ2xpY2sgb24gQk9USCBidW1wZXIgY2Fycy4gVGhlbiwgY2xpY2sgb24gdGhlIGxpdHRsZSBjcmFjayBvbiB0aGUgQ2FuZGllcyBzaWduLiBUaGVuLCBjbGljayBvbiB0aGUgZ3V5IG9uIHRoZSByaWdodCwgdG8gZ28gdG8gdGhlIENhbmRpZXMgc3RhbmQuIApCdXQgc2VyaW91c2x5LCB0aGFuayB5b3UgZm9yIGFsbCB5b3VyIGNvbW1lbnRzIGFuZCBzdWdnZXN0aW9ucyBmb3IgbWFraW5nIHRoZW0gb24gbXkgb3duLiBJIGdvaW5nIHRvIGJlIHNwZW5kaW5nIGEgbG90IG9mIHRpbWUgZXhwZXJpbWVudGluZyB0byBwZXJmZWN0IHRoZSByZWNpcGUuCkNvbnNpZGVyIHRoaXMsIGlmIGV2ZXJ5IHVzZXIgb2YgQm9zdG9uIGdsb2JlIHJlZnVzZXMgdG8gcGxheSBieSB0aGlzIHJ1bGUsIGxldHMgc2F5IHRoaXMgcHJpdmF0ZSBicm93c2luZyBvbmUgb25seS4gTm90IGFib3V0IGFkcyBidXQgYW4gaWRlYS4gVGhlIHdlYnNpdGUgbG9vc2VzIGEgZ29vZCBjaHVuayBvZiB2aXNpdG9ycyBhbmQgcGVvcGxlIGdlbmVyYWxseSBkZWNpZGUgdGhhdCBCb3N0b24gZ2xvYmUgaXMgbm90IHdvcnRoIHRoZWlyIHRpbWUuIApZb3Ugc2hvdWxkIGhhdmUgYm9sZGVkIHRoZSBrbSwgcmF0aGVyIHRoYW4gdGhlICJvbmNlIi4gSSByYXJlbHkgZ2V0IHB1bGxlZCBvdmVyLCBidXQgbGFzdCA0dGggb2YgSnVseSwgSSB3YXMgcHVsbGVkIG92ZXIgdHdpY2UgaW4gdW5kZXIgYW4gaG91ci4gTm8sIEkgd2FzbiBkb2luZyBhbnl0aGluZyB3cm9uZyBhbmQgbm8sIEkgZGlkIG5vdCByZWNlaXZlIGFueSB0aWNrZXRzLiAKVGhyZWUgQ2FyZCBQb2tlciBCYXNpY3MKVG8gd2luIGEgc2l0IGFuZCBnbyB0b3VybmFtZW50IHlvdSB3aWxsIGJlIGluIHNldmVyYWwgaGFuZHMgYWxvbmcgdGhlIHdheSB0aGF0IGFyZSBnYW1lIGNyaXRpY2FsIGludGVyc2VjdHMuIApXZSB3ZXJlIG9sZGVyIHN0dWRlbnRzIHdobyBoYWRuJ3Qgd29ya2VkIGluIGZpbmFuY2UsIHNvIHdlIHdhbnRlZCBhbiBlZGdlLiAKQXQgZGF5Y2FyZSBvbiBoZXIgbWF0IG9yIGlmIHNoZSBvbiBteSBiZWQgYW5kIEkgdGhlcmUsIHNoZSBkbyAyIDMgaG91cnMuIApJIG5vdyBmaW5hbGx5IGhhdmUgYSBwbGFjZSBhbmQgdG9vbHMgZG8gc29tZSBvZiBteSBvd24gd29yazsgYnV0IHRpbWUgaXMgYW4gaXNzdWUuIEkgZG9uIGFsd2F5cyBoYXZlIHRoZSB0aW1lLi4gCkJhY2twYWNrZXJzIFBpbGxvdzogWWVzIGV4YWN0bHkuIFlvdSBjYW4gZmluZCB0aGVtIGF0IHlvdXIgbG9jYWwgb3V0ZG9vciBzdG9yZSBvciBvbmxpbmUgb2YgY291cnNlLiBUaGUgb25lIEkgaGF2ZSBpcyBhIGxvY2FsIGJyYW5kIGZyb20gb3VyIE91dGRvb3IgRXF1aXBlbWVudCBzdG9yZSwgYW5kIGl0IHNlbGYgaW5mbGF0aW5nLCBhbmQgcGFja3MgZG93biB0byB0aGUgc2l6ZSBvZiBhIHNtYWxsIE5hbGdlbmUgQm90dGxlLiAKQmUgYXR0ZW50aXZlIHRvIGhvdyB5b3VyIGJvZHkgYW5kIHlvdXIgbWluZCBmZWVsIGFzIHlvdSBicmVhdGhlLiAKTWVtb3JpZXNvZmxpZ2h0ICA1IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvClByaW1ldGltZTIyICA2LDk3NiBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvClBlcmhhcHMgSSBtIG92ZXIgZXhhZ2dlcmF0aW5nLi4gClJlbWF0Y2gsIG5vIHJlYXNvbiB0byBnbyBiYWNrd2FyZHMuIFRoYW5rIEdvZCBmb3IgdGhpcyB2aWN0b3J5LCBidXQgSSBub3QgZ29pbmcgdG8gZ2l2ZSBoaW0gYSByZW1hdGNoIGp1c3QgYmVjYXVzZS4KVHlwaWNhbGx5IEkgYWRkIDIgdHNwIHJlZCBtaXNvIGFuZCAxIHRzcCBvZiB3aGl0ZSBhbHRob3VnaCBmb3IgdGhpcyAxIHRzcCBvZiBhIGJyYW5kIGNhbGxlZCB5dXRha2Egd2VudCBpbiB0b28uIEkgdGhpbmsgaXQgYSBibGVuZCBidXQgSSBub3Qgc3VyZS4KSSB0aGluayB5b3UgZm91bmQgb25lIG9mIHRoZSBmZXcgaGFuZHMgaGUgc3RhY2tzIG9mZiB3aXRoIHRoYXQgeW91IGRvbWluYXRlLiAKSXQgc2F5cyBhIGxvdCBhYm91dCB5b3UgdGhhdCB5b3Ugc2VlIHRoZSBwZW9wbGUgb24gdGhlIHNob3cgYXMgYW5pbWFscyBhdCB0aGUgem9vIHdpdGggcGVvcGxlIGdhd2tpbmcgYXQgdGhlbS4gSW4gcmVhbGl0eSBpdCdzIG1vcmUgbGlrZSB0aGVpciBzdG9yaWVzIGJlaW5nIHJlbGF5ZWQgdG8gbWlsbGlvbnMgb2YgcGVvcGxlIHdobyBhcmUsIG1vc3Qgb2YgdGhlIHRpbWUsIGdvaW5nIHRocm91Z2ggdGhlaXIgb3duIGRheSB0byBkYXkgc3RydWdnbGVzIGFuZCB3YW50IHRvIHNlZSB0aGVtIHN1Y2NlZWQuCkkgZG8gOTklIG9mIG15IHdvcmsgaW4gc3dlYXRzLiAKSSBoYXZlIG5ldmVyIGhhZCBhIEJ1ZCBpbiBLb3JlYS4gClRlbCBpYmlzIGxlIHRvdXF1ZXQKKGxhdWdocylUaGF0IGZlYXR1cmUgd2FzIGNhbGxlZCBhICJSb2xsZG93biAiLCBhbmQgdGhlIGxvdHRlcnkgYW5ub3VuY2VkIHdoZW4gaXQgd2FzIGNvbWluZy4gVW5saWtlIHRoZSBNZWdhIE1pbGxpb25zIGdhbWVzIHlvdSd2ZSBwcm9iYWJseSBoZWFyZCBvZiB3aGVyZSB0aGUgamFja3BvdCBrZWVwcyBidWlsZGluZyB1bnRpbCBzb21lb25lIGhpdHMgYWxsIHNpeCBudW1iZXJzIGFuZCB3aW5zIHRoZSBiaWcgcHJpemUsIGluIFdpbmZhbGwsIGlmIHRoZSBqYWNrcG90IHJlYWNoZWQgJDUgbWlsbGlvbiwgYW5kIG5vIG9uZSBtYXRjaGVkIGFsbCBzaXggbnVtYmVycywgYWxsIHRoZSBtb25leSAncm9sbGVkIGRvd24nIHRvIHRoZSBsb3dlciB0aWVyIHByaXplIHdpbm5lcnMsIGRyYW1hdGljYWxseSBib29zdGluZyB0aGUgcGF5b3V0cyBvZiB0aG9zZSB3aG8gbWF0Y2hlZCBmaXZlLCBmb3VyIG9yIHRocmVlIG51bWJlcnMuIFNvdW5kIGNvbXBsaWNhdGVkPyBXZWxsLCBpdCB3YXNuJ3QgdG8gSmVycnkuIApBbW11bml0aW9uIGlzIGRlc2lnbmVkIHRvIGJlIHVzZWQgaW4gcGFydGljdWxhciB3ZWFwb25zLCBzbyB5ZWFoLCB0aGUgd291bGQgaGF2ZSB0byBoYXZlIHRoYXQgd2VhcG9ucyBzeXN0ZW0gdG8gYmUgYWJsZSB0byB1c2UgdGhlIGFtbW8uIApXZW5uIGRhbm4gbm9jaCBlaW4gd2VuaWcgYXVzZ2Vwcmd0ZXIgQmFieWJhdWNoIGRhenUga29tbXQgb2RlciBkaWUgRnJhdSBvaG5laGluIHNjaG9uIGJlcmdld2ljaHRpZyBpc3QsIGZsbHQgZGFzIGF1Y2ggbmljaHQgdW5iZWRpbmd0IGF1Zi4gCkhlbGxvLCBJIGFtIGEgY3VycmVudGx5IGVtcGxveWVkIGFzIGEgZGVzaWduIGVuZ2luZWVyIHdvcmtpbmcgaW4gdGhlIGFlcm9zcGFjZSBzZWN0b3IgZm9yIHRoZSBwYXN0IDIgeWVhcnMsIGxvY2F0ZWQgaW4gbm9ydGhlcm4gQ2FsaWZvcm5pYS4gCklmIHlvdSBydW4gYSBtYXNzYWdlIGJ1c2luZXNzLCB0aGUgd29yayB5b3UgZG8gZG9lc24ndCByZWFsbHkgZGVwbGV0ZSBhbnkgYXNzZXQgdGhhdCBuZWVkcyB0byBiZSByZXBsZW5pc2hlZCwgb3IgdHVybmVkIG92ZXIuIApOb2JvZHkgcmVhbGx5IHdhbnRzIHRvIGxvc2UgaW4gZ2FtYmxpbmcgYnV0IHlvdSBoYXZlIHRvIGFjY2VwdCB0aGUgZmFjdCB0aGF0IHlvdSBjYW4gYW5kIHdpbGwgbG9zZSBtb25leS4gSWYgeW91IHdpbiwgdGhhdHMgZ3JlYXQuIApJIGhhdmUgc2VlbiBzb21lIG9uIHRyZWUgdHJ1bmtzIGEgbGl0dGxlIGZhcnRoZXIgZnJvbSB0aGUgbGFrZSwgYW5kIHRoZXJlIHdhcyBvbmUgcmlnaHQgb3ZlciBteSBzaG91bGRlciBpbiB0aGUgb3V0aG91c2Ugb25jZS4gQ2hyaXN0LCB0aGF0IGZyZWFrZWQgbWUgb3V0LiAKQWxzbyBtZW4gc21va2UgZGlzcHJvcG9ydGlvbmF0ZWx5IG1vcmUgdGhhbiB3b21lbiBpbiBrb3JlYSAoc3VwcG9zZWRseSB0aGlzIGlzIGJlY2F1c2UgeW91bmcgd29tZW4gc2VlIHdoYXQgY2hhaW4gc21va2luZyBvbGQgbGFkaWVzIGxvb2sgbGlrZSBhbmQgZ2V0IHNjYXJlZCwgZ28gZmlndXJlKSBzbyBzbW9raW5nIGhhcyBhIGNvb2wsIG1hc2N1bGluZSBpbWFnZSBhc3NvY2lhdGVkIHdpdGggaXQuIApVbmxpa2UgdGhlIG1vbnVtZW50IGVyZWN0ZWQgaW4gdGhlIHllYXJzIGltbWVkaWF0ZWx5IGZvbGxvd2luZyB0aGUgQ2l2aWwgV2FyLCB0aGV5IGFyZW4ndCBtZW1vcmlhbCBwaWVjZXMuIFRoZXkncmUgZ2xvcmlmaWNhdGlvbiBwaWVjZXMgbGFyZ2VseSBjaG9zZW4gdG8gcmVwcmVzZW50IENvbmZlZGVyYXRlIGxlYWRlcnMgYW5kIGNoYW1waW9uL2p1c3RpZnkgdGhlIHZhbHVlcyBhbmQgY2F1c2Ugb2YgdGhlIENpdmlsIFdhciBhbmQgc2VjZXNzaW9uLiBWZXJ5IGZldyBvZiB0aGVzZSBtb251bWVudHMgZXZlbiBtZW50aW9uIHRoZSBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2Ygb3RoZXIgZmFsbGVuIHNvbGRpZXJzLiAKSSBoYXZlIGhlYXJkIG11bHRpcGxlIHN0b3JpZXMgb2YgZm9yZWlnbmVycyBoYXZpbmcgaW1taWdyYXRpb24gY29tZSB1cCB0byB0aGVtIGFuZCBmaW5lIHRoZW0gMTAwayB0aGIuIElmIGEgVGhhaSB0YWtlcyBhIHBpY3R1cmUgb2YgeW91IGRvaW5nIHNvbWUgdHlwZSBvZiBmb3JiaWRkZW4gZm9yZWlnbmVyIHdvcmssIGV2ZW4gd2l0aCBhIHdvcmsgcGVybWl0LCB5b3UgbWF5IGdldCBjaGFyZ2VkLiBFdmVuIHdoZW4gaXQgY29tZXMgdG8gcGFpbnRpbmcgeW91ciBvd24gb2ZmaWNlIHdpdGggYSB3b3JrIHBlcm1pdCB5b3UgcmlzayBnZXR0aW5nIGluIHRyb3VibGUuIApTdmVuZHNlbiwgTVM7IFlpc2NhaCBCcmFjaGEsIE1TOyBhbmQgUmljaGFyZCBILiAKVHJ1bXAgaGFzIHNwZW50IG1vcmUgdGhhbiBhIHllYXIgdHJ5aW5nIHRvIGRpc3RhbmNlIGhpbXNlbGYgZnJvbSBoaXMgb25lIHRpbWUgdG9wIHBvbGl0aWNhbCBhaWRlLCBhbmQgdG8gbWluaW1pemUgdGhlIHJvbGUgTWFuYWZvcnQgcGxheWVkIGluIGhpcyBjYW1wYWlnbi4gCkkgZmVsdCBzb3JyeSBmb3IgaGltIGFuZCBtaXNzZWQgaGltIGFuZCBzaW5jZSBoZSB3YXMgYSBncmVhdCBmYXRoZXIgSSBmb3JnYXZlIGhpbSBhbmQgbW92ZWQgYmFjayBpbiB3aXRoIGhpbSBpbiBEZWNlbWJlci4gQnV0IEkgbmV2ZXIgZm9yZ290Li4gCjMyUmVkJ3MgTGl2ZSBDYXNpbm8gb2ZmZXJzIGVhY2ggcGxheWVyIGFuIGVuZ2FnaW5nIGFuZCBmdWxseSBpbW1lcnNpdmUgZ2FtaW5nIGV4cGVyaWVuY2UgdGhhdCBpcyBub3QgdG8gYmUgbWlzc2VkLkVuam95IG91ciBnbG9iYWwgY2FzaW5vIGV4cGVyaWVuY2UgdGhhdCBpcyBub3Qgb25seSBhd2FyZCB3aW5uaW5nLCBidXQgdGhhdCBvZmZlcnMgYSB3aG9sZSBuZXcgd29ybGQgb2YgdG9wIHF1YWxpdHkgZ2FtZXBsYXkuIAoiUG9rZXIgbWFjaGluZSByZXZlbnVlIGlzIGRvd24gYWxpdHRsZSBiaXQgWzEuMyBwZXIgY2VudF0sIGJ1dCB0aGF0IGlzY29uc2lzdGVudCB3aXRoIHRoZSB0cmVuZCBhbmQgaW4gbGluZSB3aXRoIHRoZSBlY29ub215IGFuZCBmaWd1cmVzIHJlbGVhc2VkIGJ5IENsdWJzTlNXIGZvciB0aGUgQ2VudHJhbCBXZXN0LCIgaGUgc2FpZC4gCkkganVzdCBkaWRuIGdldCBoZXIgcG9pbnQgdGhhdCAic29vbiIgd2UgIndpbGwgc2VlIiBob3cgc2NpZW5jZSB3aWxsIHJldmVyc2UgaGlzIGNvbnZpY3Rpb24uIApJdCBjb21tb24gZm9yIHdvbWVuIHRvIGdvIGxvb2tpbmcgZm9yIGl0IGFuZCB0aGluayB0aGVyZSBpcyBzb21ldGhpbmcgd3Jvbmcgd2l0aCB0aGVtIG9yIHRoZXkgYXJlbiBkb2luZyBpdCByaWdodCwgd2hlbiBpbiBmYWN0IGl0IGp1c3Qgbm90IHNvbWV0aGluZyB0aGF0IHdvcmtzIGZvciB0aGVtLiAKU1QuIEdFT1JHRSBSZWQgUm9jayBDZW50ZXIgZm9yIEluZGVwZW5kZW5jZSBhbG9uZyB3aXRoIHNwb25zb3JzIFppb24ncyBIYXJsZXkgRGF2aWRzb24gYW5kIERlc2VydCBUaHVuZGVyIEN5Y2xlIFdvcmtzIGhhdmUgdGhlaXIgZmlyc3QgYW5udWFsIFJpZGUgYW5kIERyaXZlIGZvciBJbmRlcGVuZGVuY2UgY2hhcml0eSBwb2tlciBydW4gdG9kYXkuCkkgdGhvdWdodCB0aGUgZ2FtZSB3b3VsZCBoYXZlIHN1ZmZlcmVkLiBXZSB3YW50ZWQgdG8gdGFrZSB0aGUgdGltZSB0byBkZWxpdmVyIHdoYXQgd2UgcHJvbWlzZWQuIAoyMDExIG1hcmtlZCB0aGUgZmlyc3QgeWVhciBGVFAgaGFzIGdyb3duIHRoZWlyIG93biBwcm9kdWNlIGZvciBkaXN0cmlidXRpb24uIFBhcnRuZXJpbmcgd2l0aCBEb3VnIGFuZCBIZWlkaSBNb2lyIGF0IFJlZHRhaWwgRmFybSwgdGhlIGRvbmF0ZWQgbGFuZCBwcm9kdWNlZCAxLDUwMGxicyBvZiBjYXJyb3RzLCBncmVlbmJlYW5zLCByYWRpc2hlcyBhbmQgbW9yZS4gVGhlIGxhbmQgaXMgd29ya2VkIGJ5IGJvdGggUmVkdGFpbCwgRlRQIGJvYXJkIG1lbWJlcnMgYW5kIGEgYmFuayBvZiB2b2x1bnRlZXJzIGNvb3JkaW5hdGVkIGJ5IFZvbHVudGVlciBDb25uZWN0LgpIZSBvZmZlcnMgYSBudW1iZXIgb2Ygb3B0aW9ucyB0byBtYWtlIHBhdGllbnRzIGZlZWwgbW9yZSByZWxheGVkIGR1cmluZyB0aGVpciBwcm9jZWR1cmVzLiAKVVNBIHJlYWxseSBuZWVkcyB0byBnZXQgb3ZlciB0aGVpciBvYnNlc3Npb24gd2l0aCBkcnVncy4KVGhlIGVtYWlsIGFkZHJlc3Mgd2FzIG5vdCBzdWNjZXNzZnVsbHkgc2F2ZWQhIFRoZSBlbWFpbCBhZGRyZXNzIHdhcyBzdWNjZXNzZnVsbHkgc2F2ZWQuIApJdCBkb2VzIHNlZW0gdGhhdCB0aGUgZG9jdG9yIGp1c3Qgd2FudGVkIHRoZSBvZmZpY2VycyB0byBzYXkgImFsbCBkb25lIiBhbmQgbGVhdmUuIEFsc28gdGhlIG9mZmljZXJzIGRpZG4gc2VlbSBsaWtlIHRoZXkgcmVhbGx5IGZlbHQgc3Ryb25nbHkgYWJvdXQgdGhlIHNlYXJjaC4gCkxpc3QgZ29lcyBvbi5UaGUgc3VicmVkZGl0IGlzIGFyZ3VhYmx5IGV2ZW4gd29yc2UuIApUaGlzIGlzIG9uZSBvZiB0aGUgdHJpY2tpZXN0IGJldHRpbmcgaGVhdHMgb2YgdGhlIHdlZWsgd2l0aCBmaXZlIGhvcnNlcyBiYXR0bGluZyBmb3IgZmF2b3VyaXRpc20uIFRocmVlIE1pcnJvcnMsIENsYXJpZmllZCwgUGVyY2UgUm9jaywgUGluZyBQb25nIFNpdm9sYSBhbmQgTm90YWJsZSBEJ0VzdHJ1dmFsIGFyZSB0cmFkaW5nIGFyb3VuZCB0aGUgOCAxIG1hcmsuCiQxLzMgZ2FtZSwgZWZmZWN0aXZlIHN0YWNrcyAkMWsuIFRoZXJlIGlzIGEgcmF0aGVyIGxhcmdlIHJhaXNlIHRvICQ0MCBmcm9tIGEgc29tZXdoYXQgY29tcGV0ZW50IHJlZy4gCkx1Y2lhIEJ1c2luZXNzIEhvdGVsc1N0LiAKRXZlbiBpZiB0aGVyZSBhcmUgcGVvcGxlIGFyb3VuZCB0byBoZWxwIHlvdSwgeW91IGRvbid0IHN1ZmZlciB3aXRoIGFuIGF1ZGllbmNlLCB5b3UgZG9uJ3QgdHJpdW1waCB3aXRoIGFuIGF1ZGllbmNlLiBCdXQgdGhpcyB3YXMuIEFuZCBpdCB3YXMgYW4gZXh0cmFvcmRpbmFyeSBuaWdodC4iLiAKSG9uZXN0bHksIEkgdGhvdWdodCBHbG9rdGEgd2FzIHRoZSBjbGVhcmVzdCBleWVkIHBlcnNvbiBpbiB0aGUgd2hvbGUgc2VyaWVzIGFuZCBjb3VsZCBob25lc3RseSBiZSBjb25zaWRlcmVkIHRvIGhhdmUgY29tZSBvdXQgb24gdG9wIG9mIHRoZSB3aG9sZSB0aGluZywgYnV0IGhlIHN0aWxsIGEgc3RhdGUgdG9ydHVyZXIgd2hvIHNvIGNyaXBwbGVkIGNoaWxkcmVuIHJ1biBzY3JlYW1pbmcgZnJvbSBoaW0uCldoYXQgaXQgd2lsbCBkbyB0aG91Z2ggaXMgZ2l2ZSB5b3UgYSBmb3VuZGF0aW9uIGFuZCBtYWtlIHlvdSByZWFsaXplLCBvayBpIG5lZWQgdG8gZG8geCBvbiB5IGJvYXJkIGJ1dCB0aGVuIHlvdSBhbHNvIG5lZWQgdG8gZmFjdG9yIHlvdXIgb3Bwb25lbnQsIGxldCBzYXkgeW91ciBvcHBvbmVudCBjYmV0cyAxMDAgcGVyY2VudCBhbmQgZ3RvIGlzIGMvcmluZyBhIGJvYXJkIDQwIHBlcmNlbnQgb2YgdGhlIHRpbWUgeW91IGNhbiBwcm9iYWJseSB1c2UgdGhhdCBzdHJhdGVneSB0byBjL3Igd2l0aCBhIG11Y2ggaGlnaGVyIGZyZXF1ZW5jeSBhcyB5b3UgYmUgZXhwbG9pdGluZyB5b3VyIG9wcG9uZW50IHRoYXQgd2F5Li4gCkJ1dCBJIGJlbGlldmUgdGhhdCB0aGV5IGFyZSBzaW1pbGFyIGVub3VnaCB0byBiZSBhIHZhbGlkIGNvbXBhcmlzb24uIFdoeT8gVGhlIGNvbnN0YW50IGFuZCBmdW4gZW5nYWdlbWVudC4gWW91ciBuZXh0IHJvbGwgb2YgaGVyb2VzLCBmaW5hbGx5IGdldHRpbmcgdGhhdCB0aHJlZSBzdGFyIGhlcm8sIHRoZSBzdHJlYWsgb2YgZmlnaHRzIGJlaW5nIHdvbiwgc2xvd2x5IG92ZXJjb21pbmcgc3Ryb25nIG9wcG9uZW50cywgYWRhcHRpbmcgeW91ciBzdHJhdGVneSBiZWNhdXNlIGFub3RoZXIgcGxheWVyIGhhcyBzbmFnZ2VkIHNvbWV0aGluZyB5b3UgbmVlZCwgZXRjLiAKVWJlciBpcyBncmVhdCBhbmQgeW91IGJlIGZpbmUgd2l0aCBqdXN0IHViZXJpbmcuIApJbnRlcmVzc2FudCBmaW5kZSBpY2gsIGRhc3MgaGllciBhdWYgTGEgUGFsbWEgZGllIElkZWUgenVyIEJpbGR1bmcgZWluZXMgQWxscGFydGVpZW4gU3RhZHRyYXRlcyBhbHMgU2Nocml0dCB6dSBtZWhyIERlbW9rcmF0aXNpZXJ1bmcgYmV3ZXJ0ZXQgd2lyZCBiZWkgdW5zIGluIHN0ZXJyZWljaCBpc3QgbWFuIGdlcmFkZSBkYWJlaSBhdWYgTG5kZXIgIHVuZCBHZW1laW5kZWViZW5lIGdlbmF1IGRpZXNlIFJlZ2VsdW5nIGFienVzY2hhZmZlbiwgd2FzIGRvcnQgZWJlbmZhbGxzIGFscyBTY2hyaXR0IHp1IG1laHIgRGVtb2tyYXRpZSB1bmQgYWxzIGxuZ3N0IGJlcmZsbGlnZSBBYnNjaGFmZnVuZyBkZXMgZ2VmZWllcnQgd2lyZCBqZWRlbmZhbGxzIHJlZ2llcnQgZGllIFBQIExvcyBMbGFub3MgYWxzIE1pbmRlcmhlaXRzcmVnaWVydW5nIHVuZCBiZWkgZGVyIGVyc3RlbiBhdWVyb3JkZW50bGljaGVuIEdlbWVpbmRlcmF0c3NpdHp1bmcgYW0gRGllbnN0YWcgMjMuNi4gR2FiIGVzIG5vY2gga2VpbmUgRWluaWd1bmcgaGluc2ljaHRsaWNoIGRlciBQb2xpdGlrZXJnZWhsdGVyIGJlcmljaHRldCBkaWUgZGlnaXRhbGUgTG9rYWxwcmVzc2UuIApQZW9wbGUgd2l0aCBtb3JlIG1vbmV5IGFuZCBoaWdoZXIgbGV2ZWxzIG9mIGVkdWNhdGlvbiB0ZW5kIHRvIGdldCBtYXJyaWVkLiBNYXJyaWFnZSBpcyBub3QgcmFuZG9tbHkgZGlzdHJpYnV0ZWQgdGhyb3VnaG91dCB0aGUgcG9wdWxhdGlvbi4gClRoZSBzZW50ZW5jZSB3YXMgYSBqb2tlLiBNYW5hZm9ydCBhc2tlZCB0aGUganVkZ2UgaWYgaGUgY291bGQgZm9yY2UgdGhlIG5leHQganVkZ2UgdG8gaGF2ZSBoZXIgc2VudGVuY2UgcnVuIGF0IHRoZSBzYW1lIHRpbWUgYXMgaGlzLCBhbmQgdGhlIGp1ZGdlIGJhc2ljYWxseSBzYWlkIEkgZG9uJ3QgdGhpbmsgSSBoYXZlIHRoYXQgcG93ZXIgYnV0IGlmIHlvdSBmaW5kIG90aGVyd2lzZSBsZXQgbWUga25vdy4gClR1cm5zIG91dCwgSSBkaWRuJ3QgaGF0ZSBkcml2aW5nIHNvIG11Y2ggYXMgSSBoYWQgYW54aWV0eSBvdmVyIGl0IGJlY2F1c2UgSSBkaWRuJ3QgcHJhY3RpY2UgaXQgYW5kIHNvIGRpZG4ndCBmZWVsIGNvbmZpZGVudCBhYm91dCBkb2luZyBpdC4gCiAzIHBvaW50cyAgc3VibWl0dGVkIDE0IGhvdXJzIGFnb0l0IGFzIGVhc3kgdG8gbWFrZSBmcmllbmRzIHdoZW4geW91IG9sZGVyIGFzIGl0IGlzIHdoZW4geW91IHlvdW5nZXIuIFRoZSBvbmx5IGRpZmZlcmVuY2UgaXMgeW91IGhhdmUgYSBtdWNoIHdpZGVyIHBvb2wgb2YgcGVvcGxlIGZyb20gd2hpY2ggdG8gcGljayAgIHlvdSBub3QgbGltaXRlZCBieSB0aGUgc2Nob29sLCBhY3Rpdml0aWVzIG9yIG5laWdoYm9yaG9vZCBvZiB5b3VyIGZhbWlseSAgIHRoZSB3b3JsZCBpcyB5b3VyIG95c3Rlci4gQXMgSSBnb3R0ZW4gb2xkZXIgSSBtZXQgbW9yZSBpbnRlcmVzdGluZyBwZW9wbGUgZnJvbSBtb3JlIGRpdmVyZ2VudCBiYWNrZ3JvdW5kcyB0aGF0IEkgaG9wZSB3aWxsIGJlIGluIG15IGxpZmUgZm9yIGEgbG9uZyBsb25nIHRpbWUuIApMdXh1cnkgYWxsIHN1aXRlIGhvdGVsIGxvY2F0ZWQgZGlyZWN0bHkgb24gdGhlIGJlYWNoIGJvYXJkd2Fsay4gT3ZlciBzaXplZCBzdWl0ZXMgd2l0aCBzZXBhcmF0ZSBsaXZpbmcgcm9vbSwgYmVkcm9vbSwgYW5kIGtpdGNoZW5zIGluY2x1ZGluZyByZXNpZGVudGlhbCBzaXplIGRpc2h3YXNoZXIsIHJhbmdlLCByZWZyaWdlcmF0b3IsIG1pY3Jvd2F2ZSwgYW5kIHRvbnMgb2YgY2FiaW5ldCBzcGFjZSBmaWxsZWQgd2l0aCBkaXNoZXMsIHV0ZW5zaWxzLCBhbmQgY29va3dhcmUuIFByaXZhdGUgYmFsY29uaWVzIG92ZXJsb29raW5nIHRoZSBvY2VhbiBmZWF0dXJlIGEgZGluaW5nIHRhYmxlIGFuZCBjaGFpcnMgZm9yIGZvdXIgcGVyc29uLiBFbGVnYW50LCBsYXJnZSBiYXRocm9vbXMgd2l0aCBKYWN1enppIHR1YnMgaW4gZXZlcnkgcm9vbS4gRWxldmF0ZWQgb3V0ZG9vciBwb29sIGFuZCBleHBhbnNpdmUgZGVjayBvdmVybG9va2luZyB0aGUgYmVhY2guIEZvdXIgc3RvcnkgYXRyaXVtIHdpdGggaW5kb29yIHBvb2wsIG9wZW4gYWlyIHJlc3RhdXJhbnQsIGZpdG5lc3MgY2VudGVyLCBhbmQgZ2FtZSByb29tLiBNZWV0aW5nIGZhY2lsaXRpZXMuIEd1ZXN0IGxhdW5kcnkgb24gZXZlcnkgZmxvb3IsIGZyZWUgSEJPIERpc25leSBjaGFubmVsLCBjb21wbGltZW50YXJ5IG5ld3NwYXBlciwgY29mZmVlIGFuZCBmcnVpdC4gVmlkZW8gdGFwZSBwbGF5ZXJzIGNvbXB1dGVyIGRhdGEgcG9ydHMgaW4gZXZlcnkgcm9vbS4KIk9ubGluZSBnYW1pbmcgaXMgbm90IHNvY2lhYmxlLiBZb3UncmUgbWlzc2luZyB0aGUgc2l0dGluZyBhbmQgdGFsa2luZyB0byBwZW9wbGUuIkQgc2Vzc2lvbnMsIGhlIHNheXMsIGludm9sdmUgbW9yZSB0aGFuIGp1c3QgZ2FtaW5nLiBBIGdyb3VwIG9mIGZyaWVuZHMgZ2V0IHRvZ2V0aGVyIGFuZCBjYXRjaCB1cCBvbiBlYWNoIG90aGVyJ3MgbGl2ZXMgYW5kIHNoYXJlIGpva2VzIGFuZCBjb21wYW5pb25zaGlwLCBzaW1pbGFyIHRvIGEgcG9rZXIgbmlnaHQuIlRoZXJlIGFyZSBsYXJnZSBjb21tdW5pdGllcyBvZiBwZW9wbGUgd2hvIGxpa2UgdG8gcGxheSBEIHNheXMgU2Nod29scywgMzgsIGFuZCBoZSBzaG91bGQga25vdy4gCldlIGFsbCBodW1hbi4uIApKT05BVEhBTiBEVUhBTUVMOiBJIGJlZW4gYSBIYWJzIGZhbiBzaW5jZSBJIHdhcyBib3JuLiBPbmUgb2YgbXkgZmlyc3QgbWVtb3JpZXMgaXMgdGhlIDE5OTMgU3RhbmxleSBDdXAgd2luLiBJIHdhcyBib3JuIGluIDE5ODcsIHNvIEkgZGlkbiBnZXQgdG8gc2VlIHRoZSAxOTg2IFN0YW5sZXkgQ3VwIHZpY3RvcnkuIApLbm93IHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdHJhY2hlYWwgY29sbGFwc2UgYW5kIHJldmVyc2Ugc25lZXppbmcuIFRyYWNoZWFsIGNvbGxhcHNlIGlzIHRoZSB0aWdodGVuaW5nIG9mIHRoZSB0cmFjaGVhIG9yIHdpbmRwaXBlIGNhdXNlZCBieSBhIHNvZnRlbmluZyBvZiB0aGUgY2FydGlsYWdlIHJpbmdzIGluIHRoZSB0aHJvYXQuIEluIHRoaXMgY29uZGl0aW9uLCB0aGUgZGlhbWV0ZXIgb2YgdGhlIHdpbmRwaXBlIG5hcnJvd3MsIGJyaW5naW5nIGFib3V0IGRpZmZpY3VsdHkgaW4gYnJlYXRoaW5nIGZvciBtaW5pYXR1cmUgZG9nIGJyZWVkcyBzdWNoIGFzIFlvcmtzaGlyZSB0ZXJyaWVyLCBNYWx0ZXMsIFBvbWVyYW5pYW4sIENoaWh1YWh1YSwgVG95IFBvb2RsZSBhbmQgb3RoZXIgdG95IGRvZ3MuIApERVVYSU1FIFBBUlRJRS4gTEEgRElNRU5TSU9OIFZFUlRJQ0FMRSA6IERFUyBPUkdBTklTQVRJT05TIEFVWElMSUFJUkVTIEVVUk9QRU5ORVMgIExBIERJU1BPU0lUSU9OIERFUyBTRVJWSUNFUyBOQVRJT05BVVgKIkl0J3MgYWxsIGFib3V0IG5vdCBzYXlpbmcgSSBjYW4ndCBkbyBpdCBidXQgSSB3aWxsIGRvIGl0LiAKWW91ciBwb3N0IGhhcyBiZWVuIHJlbW92ZWQgYmVjYXVzZSBjbGFpbXMgYWJvdXQgb3IgYWdhaW5zdCBkaXN0aW5jdCBlbnRpdGllcyBtdXN0IGhhdmUgc291cmNlcyBvciBwcm9vZiBzdXBwb3J0aW5nIHRoZW0KU2l0dGluZyBhdCBvbmUgcGxhY2Ugb24gc2NyZWVuLiAKSGVyZSBhcmUgdGhlIFRvcCA1IENvbmNlcnRzIG9mIHRoZSBjb21pbmcgd2VlawpCdXQgYSBteXN0ZXJpb3VzIGNhdGFzdHJvcGhlIHByZXNhZ2VzIHRoZXJlIG1heSBiZSBtb3JlIHRvIGNvbWUuIkl0J3Mga2luZCBvZiBsaWtlIHNvbWVvbmUncyBkcm9wcGVkIGFuIGF0b21pYyBib21iLCBidXQgbm9ib2R5IGtub3dzIHdobywiIEJha2VyIHNheXMuICJJdCBoYXMgdGhpcyBmZWVsIG9mIHRoZSBlbmQgb2YgV29ybGQgV2FyIEkgYW5kIHRoZSBiZWdpbm5pbmcgb2YgV29ybGQgV2FyIElJLiJFYmVycm9uIG9mZmVycyBtb3JlIGFjdGlvbiBhZHZlbnR1cmUgYW5kIGVzcGlvbmFnZSB0aGFuIHRyYWRpdGlvbmFsIEQgd29ybGRzIGR1ZSB0byBCYWtlcidzIGxvdmUgb2YgcHVscCBmaWN0aW9uIGFuZCBmaWxtIG5vaXIuIApTaGUgaGFzIHdvcmtlZCBpbiByZWFsIGVzdGF0ZSBzaW5jZSAyMDA0IGFuZCBoYXMgZXhwZXJ0aXNlIGluIHBvcCBjdWx0dXJlIGFuZCBoZWFsdGggcmVsYXRlZCB0b3BpY3MuIFNoZSBoYXMgYWxzbyBzZWxmIHB1Ymxpc2hlZCBhIGJvb2sgb24gaG93IHRvIG92ZXJjb21lIGNocm9uaWMgaGVhbHRoIGNvbmRpdGlvbnMuIFNjb3R0IGhvbGRzIGEgTWFzdGVyIG9mIEFydHMgaW4gaGlnaGVyIGVkdWNhdGlvbiBhZG1pbmlzdHJhdGlvbiBmcm9tIEJhbGwgU3RhdGUgVW5pdmVyc2l0eS4uIApJIGRvbiB0aGluayBoaXMgZGFkIGlzIGdvaW5nIGFib3V0IGRpc2NpcGxpbmUgcmlnaHQgQVQgQUxMLiBIZSBqdXN0IHNob3V0aW5nIGFuZCB0ZWxsaW5nIGhpbSBoZSBkb2luZyBpdCB3cm9uZy4gCkFzIGEgdHV0b3IsIHlvdSBtdXN0IGhhdmUgcGF0aWVuY2UsIGFzIG1hbnkgc3R1ZGVudHMgeW91IHdvcmsgd2l0aCB3aWxsIGhhdmUgdHJvdWJsZSB1bmRlcnN0YW5kaW5nIHRoZSBjb250ZW50IHlvdSBhcmUgdHJ5aW5nIHRvIGhlbHAgdGhlbSB3aXRoLiAKVGhlIG90aGVyIDIgZGluZXJzIHJ1bmxlZnQgb250byB0aGUgYmFsY29ueSB3aXRoIHRoZSB3YWl0cmVzcy4gCk1ha2Ugc3VyZSBzaGUgaGFzIFBFUXMgb24gaWYgc2hlIGdvaW5nIGluIGF0IG5pZ2h0LiAKSW4gYSBjb2xsYWJvcmF0aW9uIGJldHdlZW4gTkFTQSBhbmQgdGhlIEV1cm9wZWFuIFNwYWNlIEFnZW5jeSBHYWlhIG9ic2VydmF0aW9uIGNyYWZ0LCBhIHRlYW0gb2YgZXhwZXJ0cyBjYWxjdWxhdGVkIG91ciBnYWxheHkgdG8gYmUgYXJvdW5kIDEuNSB0cmlsbGlvbiBzb2xhciBtYXNzZXMuIEhpZ2ggcmVzb2x1dGlvbiBzYXRlbGxpdGUgaW1hZ2VzIHJldmlld2VkIGJ5ICBvbiBXZWRuZXNkYXkgYWxzbyBzaG93ZWQgdGhhdCB0aGUgbWFkcmFzYSwgc2FpZCB0byBiZSBydW4gYnkgbWlsaXRhbnQgZ3JvdXAgSmFpc2ggZSBNb2hhbW1hZCwgYXBwZWFycyB0byBiZSBzdGlsbCBzdGFuZGluZyBhbmQgdmlydHVhbGx5IHVuY2hhbmdlZCBmcm9tIGFuIEFwcmlsIDIwMTggc2F0ZWxsaXRlIHBob3RvIG9mIHRoZSBmYWNpbGl0eS4gCkhlYmFyZCBhbHNvIG5vdGVzIHRoYXQgcGVvcGxlIHdobyBhcmUgaGVzaXRhbnQgYWJvdXQgaHVtYW4gdG91Y2ggYW5kL29yIHBoeXNpY2FsIGJvdW5kYXJpZXMgc2hvdWxkIGJlIGNhdXRpb3VzIGFzIHdlbGwuVGhlcmUgYXJlIG5vIGhhcmQgYW5kIGZhc3QgZ3VpZGVsaW5lcywgYnV0IG1vc3QgcGVvcGxlIGNhbiBlbmpveSBhY3JveW9nYSBpZiB0aGV5J3JlIGluIGEgc2FmZSwgbWV0aG9kIGJhc2VkIGVudmlyb25tZW50LiBCZWNhdXNlIGFjcm95b2dhIGVtcGhhc2l6ZXMgdGVhbXdvcmssIGl0J3MgYSBmbHVpZCBwcm9jZXNzIHRoYXQgcmVxdWlyZXMgaW5kaXZpZHVhbHMgdG8gYWRqdXN0IGZvciB0aGVpciBwYXJ0bmVycyB0aHJvdWdob3V0IHRoZSBwcmFjdGljZS4gCkV2ZW4gb25jZSBhIGJyZWF0aGFseXplciBpcyBhdmFpbGFibGUsIHRoZSBtYWNoaW5lIHdvdWxkIGhhdmUgdG8gcGFzcyBmZWRlcmFsIHJlZ3VsYXRpb25zIGZvciB0aGUgZGVwYXJ0bWVudCBvZiB0cmFuc3BvcnRhdGlvbiwgYXMgd2VsbCBhcyByZWd1bGF0aW9ucyBmb3IgZWFjaCBwYXJ0aWN1bGFyIHN0YXRlLCBDbGFmbGluIG5vdGVzLiAKRWluaWdlIEFyb21hdGhlcmFwZXV0ZW4gZW1wZmVobGVuIGRlc2hhbGIgZWluIGVpbmZhY2hlcyBCYXNpc2wgZnIgZGllIEdlYnVydC4gCkFjY29yZGluZyB0byBXYWxrIFNjb3JlLCB0aGUgYXJlYSBhcm91bmQgdGhpcyBhZGRyZXNzIGlzIG1vZGVyYXRlbHkgd2Fsa2FibGUsIGhhcyBzb21lIGJpa2UgaW5mcmFzdHJ1Y3R1cmUgYW5kIGhhcyBnb29kIHRyYW5zaXQgb3B0aW9ucy4KUmVtZW1iZXIgd2hlbiBFbGxlbiB3YXMgc3RyYWlnaHQ/IHdobyB3cm90ZSBhYm91dCB0aGF0IGxvbmcgYmVmb3JlIHNoZSBiZWNhbWUgRWxsZW4gdGhlIGxlc2JpYW4/IHdoZW4gaXQgc2VlbWVkIGxpa2UgQnVzaCB3YXMgdW50b3VjaGFibGU/IHdobyB3cm90ZSBhYm91dCBoaXMgZHJpbmtpbmcgcHJvYmxlbXMgYW5kIGhvdyBMYXVyYSB3YW50cyB0byBsZWF2ZSBoaW0gbG9uZyBiZWZvcmUgaGlzIHBvcHVsYXJpdHkgaW4gdGhlIHBvbGxzIHN0YXJ0ZWQgdG8gc2xpcD8gTmF0aW9uYWwgRW5xdWlyZXIuIApJIGRpZG4ndCBrbm93IHdoZXJlIHRvIGxvb2sgYW5kIGp1c3QgdHJpZWQgdG8gYWN0IG5hdHVyYWwsIHRlbGxpbmcgdGhlIGdpcmxzIGl0IHdhcyBmaW5lLi4gCkkgYW0gaG9waW5nIHRoaXMgd29uIGJlIHRoZSBjYXNlLCBidXQgSSBqdXN0IGNhbiBoZWxwIGJ1dCBnZXQgdGhlIGZlZWxpbmcgZm9yIGFsbCBmdXR1cmUgQkdTIHRpdGxlcyB0aGV5IHdpbGwgc3RhcnQgaGVhdmlseSByZXN0cmljdGluZyBtb2RzIGJlZm9yZSBkb2luZyBhd2F5IHdpdGggdGhlbSBpbiBmYXZvciBvZiBDQy4gVGhlcmUgaXMgYWxzbyB0aGUgZmFjdCB0aGV5IGhhdmUgdGhlaXIgb3duIGxhdW5jaGVyIG5vdyBhbmQgSSBhbG1vc3QgYmV0IGFueXRoaW5nIFN0YXJmaWVsZCBhbmQgRVM2IHdpbGwgYmUgZXhjbHVzaXZlIHRvIHRoZSBCR1MgbGF1bmNoZXIuIEkgZG8gc3RpbGwgaGF2ZSBzb21lIHNtYWxsIGhvcGUgU3RhcmZpZWxkIHdpbGwgYmUgZ3JlYXQsIGFuZCBJIHJlYWxseSB3YW50IGl0IHRvIGJlLCBidXQgSSBhbSBjYXV0aW91cyBvZiBpdC4gCkdvZCBoZWxwIHVzIGFsbC4gSm9zZXBoIFNoYXVuIEdvb2RtYW4gaXMgZnJlZSwgYW5kIHBvc3NpYmx5IG9uIHRoZSByb2FkLCBkZXNwaXRlIGVpZ2h0IGFycmVzdHMgZm9yIGRyaXZpbmcgdW5kZXIgdGhlIGluZmx1ZW5jZSwgdGhlIG1vc3QgcmVjZW50IG9uZSBsYXN0IFNhdHVyZGF5LCB3aGVuIGhpcyBTVVYgY3Jhc2hlZCBpbnRvIGEgc2lnbiBuZWFyIEVsbGlvdHQgQXZlbnVlIGFuZCBwb2xpY2UgZm91bmQgaGltIGhpZGluZyBpbiBhbiBhbGxleSwgcmVkIGZhY2VkLCByZWVraW5nIG9mIGFsY29ob2wgYW5kIHdoaW1wZXJpbmcgbGlrZSBhIGNoaWxkLgpHb25uYSBhbHNvIGFncmVlLiBIZWFkcGhvbmVzIGFyZSBncmVhdCBmb3Igd2hlbiB5b3UgYXJlIGF0IHRoZSBsZXZlbCB3aGVyZSB5b3Uga25vdyB5b3VyIGdhbWUgYW5kIGFyZSByZWFkeSB0byBncmluZC4gVW5saWtlIG1vc3QgaG9iYmllcywgcG9rZXIgcGxheWVycyBhcmUgYWN0dWFsbHkgcXVpdGUgbmljZSB0byBuZXdiaWVzIGJlY2F1c2UgdGhleSBrbm93IHlvdSBhcmUgcmVsYXRpdmVseSBlYXN5IG1vbmV5LiAKVGhlICQxNSwwMDAgaW52ZXN0bWVudCBhY2NvdW50IHdpdGggbm8gZnVydGhlciBjb250cmlidXRpb25zIGJ1dCB0aGUgc2FtZSBncm93dGggYXNzdW1wdGlvbnMgd291bGQgYmVjb21lICQzNSwzNDguIApFYXJsaWVyIHRoaXMgbW9udGgsIHRoZSBBTkEgcmV2ZWFsZWQgdGhhdCB0aGUgRkJJIGhhZCByZWNlbnRseSBjb250YWN0ZWQgUmVlZCBTbWl0aCBhYm91dCB0aGUgaW52ZXN0aWdhdGlvbiBpbiBhdHRlbXB0IHRvIGdldCBjb29wZXJhdGlvbiBmcm9tIEFOQSBtZW1iZXJzLCB3aGljaCBpbmNsdWRlIHNvbWUgb2YgdGhlIGxhcmdlc3QgbWVkaWEgc3BlbmRlcnMgaW4gdGhlIG5hdGlvbi4gVGhlIEFOQSBpcyBsZWF2aW5nIHRoZSBkZWNpc2lvbiB1cCB0byBpbmRpdmlkdWFsIGFkdmVydGlzZXJzLCBidXQgc3VnZ2VzdGluZyB0aGV5IGRvIG5vdCB0YWxrIHRvIHRoZSBGQkkgd2l0aG91dCBhIGxhd3llci4uIApBdXRvYmFobiB2ZXJoaW5kZXJ0CldhcyBkb2luZyBhIHB1YiBjcmF3bCBpbiBteSBjaGlsZGhvb2QgaG9tZXRvd24gaW4gTkMgd2l0aCBteSBicm90aGVyIGFuZCBzb21lIG9sZCBmcmllbmRzLiBTb21ld2hhdCBlYXJseSBvbiwgbWF5YmUgdGhlIDJuZCBvciAzcmQgYmFyLCBteSBicm90aGVyIGRlY2lkZWQgdG8gc3R1ZmYgYSBUIHNoaXJ0IGRvd24gaGlzIHBhbnRzIHRvIHByZXRlbmQgbGlrZSBoZSBoYWQgYSBnaWFudCBtYWdudW0gZG9uZy4gCkxpa2UsIGlmIHlvdSBtb3ZlIHNvbWVvbmUgc2hvZXMgdG8gYSBkaWZmZXJlbnQgc3BvdCwgeW91IGNvdWxkIGNhdGFzdHJvcGhpY2FsbHkgY2hhbmdlIHlvdXIgdGltZWxpbmUuIEkgYmVsaWV2ZSBpdCBjYWxsZWQgdGhlICJCdXR0ZXJmbHkgRWZmZWN0LiIgVGhlbiwgdGhlIHBlcnNvbiB3b3VsZCB0YWtlIGFuIGV4dHJhIDEwIHNlY29uZHMgdG8gZ2V0IHRoZWlyIHNob2VzIG9uLCB3aGljaCBtaWdodCBtZWFuIHRoYXQgdGhleSBkb24gbWFrZSBhIGxpZ2h0IHRoYXQgdGhleSBkaWQgYmVmb3JlLiBHb2luZyBpbnRvIHdvcmssIG1heWJlIHRoYXQgcGVyc29uIGRvZXNuIG1lZXQgc29tZW9uZSBhbmQgaGF2ZSBhIGNvbnZlcnNhdGlvbiB3aXRoIHRoZW0gYmVjYXVzZSB0aGV5IGNhbWUgbGF0ZXIuIApUaGlzIHdhcyBteSBjb25jZXJuIHdpdGggU3BlY2lhbGlzdCBmb3JtYXQuIApUaGUgRmFjZTogVGhlIGZhY2UgaXMgb24gb25lIGhhbmQgdGhlIG1vc3QgZXhwcmVzc2l2ZSBib2R5IHBhcnQgd2UgcG9zc2VzLCBhbmQgb24gdGhlIG90aGVyIGhhbmQsIHRoZSBtb3N0IGVhc2lseSBtYW5pcHVsYXRlZC4gCkdyZWF0IGZvb2QsIHNvbGlkIGJhcnMuIFRoZSBydXN0aWMgaGFzIGdyZWF0IGJyZWFrZmFzdC4gR28gdG8gV2hpdGUgUm9jayBsYWtlIGFuZCBrYXlhay4gSSBhbHdheXMgZW5qb3kgdGhlIFBlcm90IE11c2V1bS4gVGhlIERhbGxhcyBNdXNldW0gb2YgQXJ0IGlzIGZyZWUuIEtub3ggSGVuZGVyc29uIG9uIGJvdGggc2lkZXMgb2YgNzUgaXMgcmVhbGx5IGRhbW4gY29vbC4gRGVlcCBFbGx1bSBpcyBhIHRvdGFsbHkgZGlmZmVyZW50IHZpYmUgYW5kIGxvdHMgb2YgZnVuICAgdGhlIERhbGxhcyBDb21lZHkgSG91c2UgY2FuIGJlIGludGVyZXN0aW5nIGFuZCB0aGUgSHVuZ2FyaWFuIHJlc3RhdXJhbnQgd2FzIGdyZWF0IElNTyAgIGJ1dCBpZiB5b3UgZG93biB0aGVyZSBpbiBEZWVwIEVsbHVtIG1ha2Ugc3VyZSB5b3UgaGl0IHVwIERlZXAgRWxsdW0gQnJld2luZyBDb21wYW55IGFuZCBncmFiIGEgZmxpZ2h0IG9mIGJlZXIuCkRpZXNtYWwgZWluIFVwZ3JhZGUgbnVyIHVtIGVpbmUgS2F0ZWdvcmllLiAKVGhlIGZvbGxvd2luZyByZWNvbW1lbmRhdGlvbnMgYXJlIGFsc28gZ2VhcmVkIHRvd2FyZCBsb3cgbGltaXQgVGV4YXMgSG9sZCdlbSwgc3VjaCBhcyAxLzIsIDIvNCwgMy82LCA0LzgsIGFuZCA1LzEwLiBPZiBjb3Vyc2UsIHNvbWUgMjAvNDAgZ2FtZXMgcGxheSBsaWtlIDUvMTAgZ2FtZXMsIGFuZCBzb21lIDUvMTAgZ2FtZXMgcGxheSBsaWtlIDUwLzEwMCBnYW1lcy4gR2V0dGluZyBhIGZlZWwgZm9yIHlvdXIgb3Bwb25lbnRzIGlzIGltcG9ydGFudCB3aGVuIHlvdSBjb25zaWRlciB5b3VyIHN0YXJ0aW5nIGhhbmQgcmVxdWlyZW1lbnRzLgoyLiAKWWV0IGl0IG1vc3QgbGlrZWx5IHBvc3NpYmxlIGFueXRoaW5nIG9uICJpVHVuZXMiY2FuIGJlIGZvdW5kIG9uIFZpbnlsL0NEIGZvciBoaWdoZXIgcXVhbGl0eS4gCkkga25vdyBsYXNlciB0cmVhdG1lbnQgY2FuIGJlIGV4cGVuc2l2ZSAoaXQgcHJvYmFibHkgb25lIG9mIHRoZSBjaGVhcGVzdC9lYXNpZXN0IHRoaW5ncyB0byBzdGFydCB3aXRoIHRob3VnaCkgYnV0IGl0IHJlYWxseSB3b3J0aCBpdC4gSSBkb24ga25vdyB3aGVyZSB5b3UgZnJvbSBvciBob3cgZXhwZW5zaXZlIGl0IGlzIHRoZXJlLCBidXQgSSBwYWlkIGFyb3VuZCAzMDAgZm9yIGl0LiAKRmlyc3QsIEkgZ2xhZCB0aGF0IHlvdSBmb3VuZCB5b3VyIHJvb20gdG8gYmUgY2xlYW4gKGJlc2lkZXMgdGhlIG1vc3F1aXRvZXMpLCBhbmQgdGhhdCB0aGUgbG9jYXRpb24gYW5kIGFtZW5pdGllcyB3ZXJlIGEgYmVuZWZpdCB0byB5b3UuIApIZSBoYXMgcmV0dXJuZWQgdG8gaGlzIFN0b2tlIG9uIFRyZW50IGhvbWUgZnJvbSBhIExhcyBWZWdhcyBjYXNpbm8gYWxtb3N0IDEgbWlsbGlvbiB0aGUgcmljaGVyIGFmdGVyIHRyaXVtcGhpbmcgb3ZlciA0NDggb2YgdGhlIGdsb2JlJ3MgdG91Z2hlc3QgcGxheWVycyB0byBjb21lIHNlY29uZCBpbiB0aGUgV29ybGQgUG9rZXIgVG91ciBDaGFtcGlvbnNoaXAuIApJIGFjdHVhbGx5IGhhdmUgYSBsaWZlIG91dHNpZGUgb2YgUmVkZGl0IHVubGlrZSB5b3UgZnVja2luZyBkd2VlYnMuIApPdXIgaG91c2Vob2xkIHNhdmluZyByYXRlIHNpbmNlIDE5ODEgaGFzIGF2ZXJhZ2VkIDcuMyBwZXIgY2VudCwgYW5kIHRoZSBhbm51YWwgc2F2aW5nIHJhdGUgaGFzIG5vdCBnb25lIG5lZ2F0aXZlIHNpbmNlIDE5MzMuIEFzIGludGVyZXN0IHJhdGVzIGNvbnRpbnVlIHRvIG5vcm1hbGl6ZSBhbmQgd2UgZW50ZXIgb3VyIHRlbnRoIHllYXIgc2luY2UgdGhlIGxhc3QgcmVjZXNzaW9uLCBpdCBtYXkgYmUgdGhhdCAyMDE5IGlzIGFuIHVucHJlY2VkZW50ZWQgeWVhciBpbiB0aGUgaGlzdG9yeSBvZiBDYW5hZGlhbiBzYXZpbmcgKG9yIGxhY2sgdGhlcmVvZikuCkhvdyBUbyBQcmVwYXJlIGZvciBCcmFjZXMKTWFueSBwbGF5ZXJzLCB3aGVuIG9uIGEgZHJhdywgd2lsbCBjYWxsIGJldHMgb24gdGhlIGZsb3AgYW5kIHR1cm4uIFRoZW4sIHRoZXkgd2lsbCBhbHdheXMgcmFpc2Ugb24gdGhlIHJpdmVyIHdoZW4gdGhleSBoaXQgdGhlaXIgaGFuZCwgYW5kIGNoZWNrIG9yIGZvbGQgd2hlbiB0aGV5IGRvbid0LiAKQWNjb3JkaW5nIHRvIHRoZSBwb2xpY2UsIGxhc3QgeWVhciwgdGhpcyBraW5kIG9mIHN3aW5kbGVzIHN0b2xlIG92ZXIgMzU3MDAwIG1pbGxpb24geWVuLiAKSSdtIGFsd2F5cyBnb25uYSBiZSBhIHNhaW50cyBmYW4uIEJ1dCBJIGp1c3QgY2FuJ3QgZmVlbCBsaWtlIHN1cHBvcnRpbmcgdGhlIE5GTCBpbiBhbnkgd2F5IHJpZ2h0IG5vdy4gClRoZSBUd2lsaWdodGVycyBhbGwgb3ZlciB0aGUgd29ybGQ6IHRoZSBVUywgQ2FuYWRhLCB0aGUgVUssIEZyYW5jZSwgSXRhbHksIEphcGFuLCBDaGluYSwgSmFtYWljYSwgVmVuZXp1ZWxhLCBCcmF6aWwsIGFuZCwgb2YgY291cnNlLCBJdGFseSBpdHNlbGYuIApTbywgaWYgeW91ciBmcmFncmFuY2UgZG9lcyBnZXQgcGVyY2VpdmVkLCBpdCdkIGJlIGxpa2VseSB0aGUgY2FzZSB5b3UncmUgd2VhcmluZyB0b28gbXVjaC5JIGJlbGlldmUgSSBtYXkgaGF2ZSBjYXVzZWQgc29tZXRoaW5nIHNpbWlsYXIgdG8gdGhlIGxhc3Qgc2l0dWF0aW9uIGF0IHdvcmsgcmVjZW50bHkuIApEZWFkd29vZCBzZXJpZXMgdmlld2VycyBhbmQgbXVzZXVtIHZpc2l0b3JzIHdpbGwgYWxzbyBiZSBrZWVubHkgYXdhcmUgb2YgdGhlIHNob2RkeSB0cmVhdG1lbnQgYWZmb3JkZWQgdGhlIENoaW5lc2Ugd2hvIGxpdmVkIHRoZXJlIGR1cmluZyB0aGUgZ29sZCBydXNoLCBtb3N0bHkgcHJvdmlkaW5nIGxhdW5kcnkgc2VydmljZXMuIEEgbmV0d29yayBvZiB0dW5uZWxzIGNvbm5lY3RzIHRoZSBDaGluZXNlIGxhdW5kcnkgYnVzaW5lc3Nlcywgb3Igc29tZSBtaWdodCBzYXkgcHJvdmlkZWQgYW5vbnltb3VzIHBhc3NhZ2UgdG8gb3BpdW0gZGVucy4KVGFrZSBhZHZhbnRhZ2Ugb2Ygc29tZSBGcmVlIENhc2lubyBQb2tlciBMZXNzb25zIGF0IHRoZSBjYXNpbm8gbmVhcmVzdCB5b3VyIGhvbWUuIApQcmV0ZW5kIHlvdSBhcmVuJ3QgYW5kIGp1c3Qgc3RyaWtlIHVwIHRoZSBjb252ZXJzYXRpb24uIApJIGFzayBleGFjdGx5IHdoYXQgdGhleSBtZWFuIHdoZW4gSSB0cnlpbmcgdG8gY28gb3JkaW5hdGUgYmVjYXVzZSBJIHdhbnQgdGhpbmdzIHRvIGJlIGFjY3VyYXRlIGFuZCBJIG5vdCBhbiBlbmdpbmVlciwgaG93ZXZlciwgSSBkb24gYXBwcmVjaWF0ZSBkdW0gZHVtIGFuYWxvZ2llcy4gSSBleGVyY2lzZSB0aGUgc2FtZSBwYXRpZW5jZSB3aXRoIHRoZXNlIHRpcmVzb21lIGFuYWxvZ2llcyBhcyBJIGRvIHdoZW4gZXhwbGFpbiBteSB3b3JrIHRvIHRob3NlIG5vdCBpbiB0aGUgZmllbGQgYmVjYXVzZSBjb21tdW5pY2F0aW5nIHdlbGwgaXMgYmV0dGVyIHRoYW4gYmVpbmcgcmlnaHQgYWxsIHRoZSB0aW1lLiBGaXJzdCBzdGVwIGlzIHRvIGFzayB3aGF0IHRoZXkgYXJlIGZhbWlsaWFyIHdpdGggdG8gZ2F1Z2UgaG93IG11Y2ggdGhleSBjYW4gZm9sbG93IHlvdXIgc3Vic2VxdWVudCBleHBsYW5hdGlvbnMuLiAKRHJhY2FyeXNIaWppbmtzICAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnbwpTbyB3aGV0aGVyIGl0IEFia2hhemlhIG9yIE9zc2V0aWEsIHRoZXJlIHdpbGwgbm90IGJlIGEgdW5pdGVkIHJlc3BvbnNlLiAKV29yayB0aGVyZSB1bnRpbCB5b3UgZ290dGVuIGEgZmVlbCBmb3Igd2hhdCBwZW9wbGUgZG8gaW4gdGhhdCB3b3JrcGxhY2UuIApUaGUgY3Jvd2Qgcm9hcmVkIG9uIENvdXJ0IDUgd2hlbiBJc25lciBmaW5hbGx5IHdvbiBhIGdhbWUgYWZ0ZXIgMzIgbWludXRlcyB0byB0cmFpbCAyIDEgaW4gdGhlIHNlY29uZCBzZXQuIApHdXkgSSB1c2VkIHRvIHBsYXkgd2l0aCBpcyBkcnVuayBhcyBmdWNrIGFuZCBzbW9raW5nIHdlZWQgYWxsIG5pZ2h0LiAKQmVhdHJpY2VibHl0aGUgdQoiVGhlIGxhdGVzdCBmaWd1cmVzIHN0aWxsIHNob3cgd2UgYXJlIHRoZSBudW1iZXIgb25lIHVuaXZlcnNpdHkgZm9yIGdyYWR1YXRlIGVtcGxveWVlcy4iIEJlbiBCcmFkbGV5LCB3aG8gaGFzIGJlZW4gd2l0aCBDU1Ugc2luY2UgMTk5OCwgd2FzIGF3YXJkZWQgdGhlIHRpdGxlIG9mIGVtZXJpdHVzIHByb2Zlc3NvciBvbiBGcmlkYXkuICJJJ20gbWlnaHRpbHkgY2h1ZmZlZCwiIGhlIHNhaWQuICJJdCdzIGEgbG92ZWx5IHRoaW5nLCB0byBiZSByZWNvZ25pc2VkIGZvciBhIGdyZWF0IGNhcmVlciBhbmQgdGhlIG9wcG9ydHVuaXR5IENTVSBoYXMgZ2l2ZW4gbWUuIApEb24ndCBsaXN0ZW4gdG8gcGVvcGxlIHNheWluZyBqYW0gdGhlIGZsb3AuIEFzc3VtaW5nIHlvdSdyZSBib3RoIHBsYXlpbmcgcmVsYXRpdmVseSBub3JtYWwgNGIgYW5kIDRiIGNhbGwgcmFuZ2VzIHV0ZyB2cyBCVE4sIHlvdSBzaG91bGQgYmUgY2FsbGluZyB5b3VyIGVudGlyZSBmbG9wIGNvbnRpbnVpbmcgcmFuZ2UuClVzZSBhIHByb2dyYW0gdG8gbWFrZSBhIGtpbmQgb2YgcGl4ZWwgdmVyc2lvbiB3aXRoIGdyaWRsaW5lcywgdGhlbiBqdXN0IGRyYXcgdGhlIGdyaWRsaW5lcyBvbiB0aGUgYWlkYSAob3IgbG9vc2VseSBzdGl0Y2ggc29tZSB0aHJlYWQgb24gdGhlcmUgdG8gbWFrZSB0aGUgZ3JpZHMgYW5kIHB1bGwgdGhlbSBvdXQgYXMgeW91IGdvKS4uIApGaW5hbGx5IEkgcmVhbGl6ZWQgdGhhdCBJIG5lZWRlZCB0byBpbXByb3ZlLCBkcm9wcGVkIHRoZSB0YWJsZSBhbW91bnQgYW5kIG1vdmVkIHRvIGhlYWRzIHVwLiBBZnRlciBhcm91bmQgYSB5ZWFyIG9mIGJyZWFrZXZlbiByYWtlYmFjayBncmluZGluZywgdGhpcyBpcyB3aGF0IHByb3BlbGxlZCBtZSBpbnRvIGhpZ2ggc3Rha2VzIGluIGxhdGUgMjAwOS4uIApJbiBvcmRlciBmcm9tIGJlc3QgaGFuZCB0byB3b3JzdDogQSByb3lhbCBmbHVzaCAoQWNlIEhpZ2ggc3RyYWlnaHQgb2Ygb25lIHN1aXQpIFN0cmFpZ2h0IEZsdXNoIChBIHN0cmFpZ2h0IG9mIG9uZSBzdWl0KSBGb3VyIE9mIEEgS2luZCAoU2FtZSByYW5rKSBGdWxsIEhvdXNlIChUaHJlZSBvZiBhIGtpbmQgYW5kIGEgcGFpcikgRmx1c2ggKCBGaXZlIG9mIHRoZSBzYW1lIHN1aXQpIFN0cmFpZ2h0IChGaXZlIGNhcmRzIGluIHNlcXVlbmNlLiBUaGVzZSBzaXRlcyBzcGVjaWFsaXplIGluIGZsYXNoIGJhc2VkIG9yIHZpZGVvIHBva2VyZ2FtZXMuIFRoZXkgYWxzbyBhbGxvdyBwbGF5ZXJzIHRvIGJydXNoIHVwIG9uIHRoZWlyIHNraWxscywgd2hpbGVjb21wZXRpbmcgYWdhaW5zdCBwb2tlciBlbnRodXNpYXN0cyBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZC4gCk1yIEhvZGdtYW4gc2FpZCBoaXMgcGFydHkgd291bGQgaW52ZXN0IGhlYXZpbHkgaW4gbWVudGFsIGhlYWx0aCBpZiByZXR1cm5lZCB0byBvZmZpY2UuIApGaXJzdCwgc3RhcnRpbmcgYXMgYSBtaW5lLiAKWW91IG1heSBmaW5kIHlvdXJzZWxmIG9uIGEgZ2FsYWN0aWMgY3J1aXNlIGZyb20geW91ciBvZmZpY2UsIHBhcmsgYmVuY2gsIG9yIHNlYXQgb24gdGhlIDkuMzUgbG9jYWwuICcgbm93LCB0byB0aGUgJDIwIHF1ZXN0aW9uLCAnQW0gSSBpbiB0aGlzPyBNZWFuaW5nLCBkbyBJIHdhbnQgdG8gYnV5IGl0PycgeW91J3ZlIGNvbnRyaWJ1dGVkIGEgcG9lbSwgZXNzYXksIDQyIHdvcmQgc3RvcnksIG9yIHBpZWNlIG9mIGZpY3Rpb24gdG8gaDJnMiwgeW91IHN0YW5kIGEgZ29vZCBjaGFuY2UuIApEbyBhbiBvY3VsYXIgb2YgdGhlIG1hc3NhZ2UgdGhlcmFwaXN0J3Mgb2ZmaWNlLiBCZWZvcmUgeW91IHNjaGVkdWxlIGFuIGFwcG9pbnRtZW50LCBtYWtlIHN1cmUgdGhhdCB5b3UgdGFrZSB0aGUgdGltZSB0byBsb29rIHRocm91Z2ggdGhlIG1hc3NhZ2UgdGhlcmFwaXN0J3Mgb2ZmaWNlLiBXaXRoIGEga2VlbiBleWUsIG9ic2VydmUgdGhlIGxldmVsIG9mIGNsZWFubGluZXNzIGFuZCBoeWdpZW5lOiBhcmUgdGhlIHNoZWV0cyBjbGVhbj8gSXMgdGhlIGZsb29yIHBvbGlzaGVkPyBBcmUgbWF0ZXJpYWxzIGNsdXR0ZXJlZCBvciB3ZWxsIG9yZ2FuaXplZD8gSG93IGRvZXMgdGhlIHBsYWNlIHNtZWxsIGxpa2U/IFlvdSBzaG91bGQgYWxzbyBsb29rIGF0IHRoZSBtYXNzYWdlIHRoZXJhcGlzdCBoZXJzZWxmLiAKR2V0IHVwIGZhc3Rlci4gClllYWgsIHJpZ2h0LiBHdXlzLCBiZWluZyBwZW9wbGUgd2hvIHdvcmsgb2ZmIG9mIFdhbGwgU3RyZWV0LCBhcmUgcHJvdmlkaW5nIGFjdHVhbCBnb29kcyBhbmQgc2VydmljZXMgYnV0IHRoZXkgImp1c3Qgd2FudCBtb25leSIgd2hpbGUgdGhlIHNjaG11Y2tzIG9uIFdhbGwgU3QuLCB3aG8gZ2l2ZSB1cyBOT1RISU5HIGJ1dCBjaGFyZ2UgdXMgYW4gYXJtIGFuZCBhIGxlZyBmb3IgaXQgLGp1c3Qgd2FudCB3aGF0PyBQZWFjZSBhbmQgcHJvc3Blcml0eSBmb3IgYWxsPyBvZiB0aGUgQUZMIENJTyBwZW9wbGUgYXQgdGhlIHByb3Rlc3Qgd29yayBpbiBzZWN0b3Igam9icyBsaWtlIG1ha2luZyB0aGUgc3Vid2F5IHJ1biBldmVyeSBtb3JuaW5nIHdpdGhvdXQgbWFraW5nIGl0IHNvIGV4cGVuc2l2ZSB0aGF0IG9yZGluYXJ5IHBlb3BsZSBjYW4gYWZmb3JkIHRvIGdvIHRvIHNjaG9vbC4gUHVibGljIHNlY3RvciB3b3JrIGlzICJiYWQgZm9yIHRoZSBlY29ub215IiBidXQgbGV0dGluZyB0aGVzZSBndXlzIHN1Y2sgdXMgYWxsIGRyeSB3aXRoIHRheHBheWVyIGJhaWxvdXRzIGFuZCBjb3Jwb3JhdGUgdGF4IHJhdGVzIHRoYXQgY2FuIG9ubHkgYmUgZGVzY3JpYmVkIGFzIGNvcnBvcmF0ZSB3ZWxmYXJlIGlzIGdvb2QgZm9yIHRoZSBlY29ub215PyBpcyBleGFjdGx5IHRoZSBzb3J0IG9mICJncmVlZCBpcyBnb29kIiBzdHVwaWRpdHkgdGhhdCBsZWQgdG8gdGhpcyBtZXNzIGluIHRoZSBmaXJzdCBwbGFjZSAgdGhhdCBhbmQgdGhlIGZhY3QgdGhhdCBvdXIgcmVwcmVzZW50YXRpdmVzIGluIFdhc2hpbmd0b24gYmFja2VkIGF3YXkgZnJvbSB0aGVpciByb2xlIGFzIHJlZ3VsYXRvcnMuLiAKQ29uY2VybmFudCB0b24gZW1wbG9pLCB0dSBib3NzZXMgcGV1dCB0cmUgZGFucyB1biBzZWN0ZXVyIHF1aSBuZSByZWNydXRlIHBhcy9wbHVzIG91IHF1aSBlc3Qgc2F0dXIgZW4gRnJhbmNlID8gSmUgc3VpcyBkZXYgd2ViICh1biBkZXMgcGlyZXMgZXhlbXBsZXMgamUgc2FpcyksIGV0IGF1Y3VuIHByb2JsbWUgcG91ciBjaGFuZ2VyIGRlIHRhZmYgcXVhbmQgamUgdmV1eC4KWW91IHBsYXlpbmcgaW4gYSBsaXZlIDEvMiBnYW1lIHdpdGggYSBidW5jaCBvZiBsYWdzIEkgdGhpbmsgeW91IHNob3VsZCBvcGVuIHRvIG1vcmUgdGhhbiAxMiBoZXJlIGZhY2luZyB0aGUgc3RyYWRkbGUuIEkgbWFrZSBpdCAkMjAuIEVpdGhlciBjYWxsaW5nIG9yIDRiZXR0aW5nIGlzIHBlcmZlY3RseSBmaW5lLiAKVGhlIEFzc29jaWF0aW9uIG9mIFByb2Zlc3Npb25hbCBBbmltYWwgV2FzdGUgU3BlY2lhbGlzdHMgb2ZmZXJzIGJ1c2luZXNzIHJlc291cmNlcywgaW5jbHVkaW5nIGFuIGFubnVhbCBpbmR1c3RyeSBjb25mZXJlbmNlLgpZb3UgY2FuIHN0YXJ0IG9mZiB3aXRoIHNpbXBsZSwgc21hbGwgdGhpbmdzLCBhbmQganVzdCBraW5kYSBncm93IGZyb20gdGhlcmUuIFRoZSBiZWF1dHkgb2YgaXQgaXMgdGhhdCBzb21ldGhpbmcgdGhhdCBsb29rcyBzbyBjb21wbGV4IGNhbiBhY3R1YWxseSBiZSBjb25zdHJ1Y3RlZCBxdWl0ZSBzaW1wbHkuIEV2ZW4gaWYgdGhlIHByb2plY3QgdHVybnMgb3V0IHRlcnJpYmxlLCBpdCBjYW4gc3RpbGwgYmUgZnVuY3Rpb25hbCBhbmQgbG92ZWQgYnkgc29tZW9uZSBvciBzb21ldGhpbmcgKHBldHMgbG92ZSB3YXJtIHF1aWx0cyEpLiAKWW91IENhbiBCdXkgU3B5Q2hlYXRpbmcgTWFya2VkIFBsYXlpbmcgQ2FyZHMgRnJvbSBUaGUgUmVwdXRlZCBEZWFsZXJzIEFuZCBUaGUgU3VwcGxpZXJzIE9mIENoZWF0aW5nIENhcmQgRGV2aWNlcy4uIApTbyB0aGVyZSBhcmUgYSBmZXcgcmVhc29uIHdoeSBwZW9wbGUgd2FudCB0aGUgYmF0dGxlIHBhc3Mgb3ZlciBzaGl0dHkgbG9vdCBib3hlcy4gUGVyc29uYWxseSBJIGhhdGUgbG9vdCBib3hlcyBhbmQgd29uIGJlIHRvdWNoaW5nIHRoZW0gd2l0aCBteSB3YWxsZXQgZXhjZXB0IGFueSBmcmVlIG9uZXMgSSBnZXQgd2hpbHN0IHBsYXlpbmcuLiAKTm93LCB5b3UganVzdCBuZWVkIHRvIHN0YXkgYWxpdmUgYW5kIHlvdSB3aWxsIHdpbi4gCkxpdmluZyBpbiBXZXN0IENoZXN0ZXIsIE9oaW8gb3VyIGtpZHMgZ28gdG8gTGFrb3RhIEhpZ2ggU2Nob29sIGFuZCB0aGUgc2Nob29sIGNvbG9ycyBhcmUgYmxhY2sgYW5kIHJlZC4gTXkgd2lmZSBhbmQgSSBib3RoIGhhZCB0aGUgb3Bwb3J0dW5pdHkgdG8gZ28gdGhlcmUgd2hlbiB3ZSB3ZXJlIHlvdW5nZXIgYXMgd2VsbCBzbyB3ZSBhbGwgYmxlZWQgcmVkIGFuZCBibGFjay4gCk9ubGluZSBwb2tlciBnYW1lcyBjYW4gaGVscCBwbGF5ZXJzIHRvIHBsYXkgaW4gdGhlIGNvbWZvcnQgb2YgdGhlaXIKUGluayBNYXNzYWdlIGlzIHdlbGwgbG9jYXRlZCwgdmVyeSBjbG9zZSB0byBQaHJvbSBQaG9uZyBCVFMsIG9yIGFib3V0IDEwIG1pbnV0ZXMgd2FsayBvciBhIHNob3J0IG1vdG9yY3ljbGUvdGF4aSByaWRlIGZyb20gU3VraHVtdml0IHN1YndheSBzdGF0aW9uLiBGcm9tIHRoZSBtb3V0aCBvZiBTdWtodW12aXQgUm9hZCwgdHVybiBpbiB0byBTb2kgMjQgYW5kIGFmdGVyIGFib3V0IDEwMCBtZXRyZXMgb24geW91ciBsZWZ0IHlvdSB3aWxsIGZpbmQgYSBzbWFsbCBwbGF6YSBjb25zaXN0aW5nIG1vc3RseSBvZiBtYXNzYWdlIHNob3BzLiAKRm9yIHN0YXJ0ZXJzLCB0aGUgYnV5aW4gd2FzICQxMDAgdG8gJDUwMCwgd2hpY2ggaGVscGVkIHRoZSBnYW1lIHBsYXkgYmlnZ2VyLiBJdCBkaXNhbGxvd2VkIHBlc2t5IHNob3J0c3RhY2tlcnMgZnJvbSBiZWluZyBhbGxvd2VkIHRvIGJ1eSBpbiBmb3IgJDUwIGxpa2UgdGhleSBjYW4gYXQgc29tZSBwbGFjZXMuIEl0IGFsc28gYWxsb3dlZCBzb21lIHBsYXllcnMgdG8gYnV5IGluIGZvciBtb3JlIHRoYW4gMTAwIGJpZyBibGluZHMuIApEb24gd29ycnkgYWJvdXQgaGltIHBlciBzZSwgYnV0IHRoZSBmbGlwIHNpZGUgb2YgaGVyIGJlaGF2aW9yIGlzIGFyZSAxOCwgeW91ciBwYXJlbnRzIGNhbiBjaGFyZ2UgeW91IHJlbnQgbm93IG5lZWQgdG8gc2l0IGRvd24gd2l0aCBoZXIgYW5kIGFkbWl0IHRoYXQgeWVzLCBzaGUgaXMgYW4gYWR1bHQsIGJ1dCB0aGF0IGFjdHVhbGx5IG1vcmUgcmVzcG9uc2liaWxpdHksIG5vdCBsZXNzLgpUaGUgVGVhIFBhcnR5IG1vdmVtZW50IGVydXB0ZWQgaW4gMjAwOSwgc29vbiBhZnRlciB0aGUgZWxlY3Rpb24gb2YgdGhlIGZpcnN0IEFmcmljYW4gQW1lcmljYW4gcHJlc2lkZW50IGluIEFtZXJpY2FuIGhpc3RvcnksIGEgRGVtb2NyYXQgd2hvIHdhcyBtYXJrZWRseSBtb3JlIGxpYmVyYWwgdGhhbiBoaXMgUmVwdWJsaWNhbiBwcmVkZWNlc3Nvci4gCldpdGggbW9zdCBzbG90cyB0aGUgcG9ydGFscyBvZmZlciB5b3UgZnJlZSBzbG90cyBhbG9uZyB3aXRoIGZyZWUgc3BpbnMuIApIZSBzYWlkIHRoYXQgRm94IHNhY3JpZmljZWQgdGhlIEZveCBzdHVkaW8ncyBidXNpbmVzcyBmb3IgdGhlIHNha2Ugb2YgSHVsdSdzIHN1Y2Nlc3MsIHdpdGggdGhlIG5ldHdvcmsgaGFuZGluZyBvdmVyIHJpZ2h0cyB0byAiQm9uZXMiIGZvciBhIHNoYXJlIG9mIGFkIHJldmVudWUgdGhhdCB3b3VsZCBub3QgYmUgc2hhcmVkIHdpdGggdGhlIHN0dWRpby4gVGhhdCBodXJ0IHRoZSBoYXVsIG9mIHRoZSBwcm9kdWNlcnMuCkFkIEFnZSBjYXVnaHQgdXAgd2l0aCBIYXRjaCBmb3IgYSBxdWljayB2aWRlbyBjaGF0IGFuZCBhIGdhbWUgZGVzaWduZWQgdG8gZ2V0IGZyYW5rLCBvZmYgdGhlIGN1ZmYgYW5zd2VycyB0byBzb21lIG9mIHRoZSBiaWdnZXIgcXVlc3Rpb25zIHRvZGF5IChwbHVzIG9uZSBvciB0d28gc29mdGJhbGxzKS4gV2F0Y2ggYmVsb3cgdG8gc2VlIHdoYXQgc2hlIGhhZCB0byBzYXkgb24gdGhlIGV2b2x1dGlvbiBvZiB0aGUgbW9kZXJuIENNTy4gICBCcmlhbiBCcmFpa2VyQU5BIGhhcyBydW4gaXRzICJNYXN0ZXJzIG9mIE1hcmtldGluZyIgY29uZmVyZW5jZSBpbiB0aGUgc2hhZG93IG9mIERpc25leSBXb3JsZCBmb3IgeWVhcnMsIGJ1dCBEaXNuZXkgaGFzIHR5cGljYWxseSBub3QgaGFkIG11Y2ggb2YgYSBwcmVzZW5jZSBoZXJlIGF0IHRoZSBPcmxhbmRvIGV2ZW50LiAKQW5vdGhlciBpcyB0aGF0IGl0IGlzIFBpc2NlcywgYW5kIFBpcmF0ZSBuZWl0aGVyIHdhbnRzIHRoYXQgdG8gYmUgYSBzdXJwcmlzZSBub3IgYSBjZXJ0YWludHkgZm9yIHVzLiBmb3IuIHJlYXNvbnM/IFRoaXMgaXMgcG9zc2libGUsIGJ1dCBJIHN0cnVnZ2xlIHRvIGNvbWUgdXAgZm9yIGEgcG9zc2libGUgZXhwbGFuYXRpb24gZm9yIFdIWSB0aGF0IHdvdWxkIGJlIGRlc2lyYWJsZSAgIGlmIHlvdSBoYXZlIG9uZSBJIGxvdmUgdG8gaGVhciBpdC4KSGUgc3BlbnQgbWFueSB5ZWFycyBhdCBDYW5wYXIsICJkcmlua2luZyB0aGUgV29vZGllcyBhbmQgZGVsaXZlcmluZyB0aGUgZ29vZGllcyIgYW5kIG9uY2UgaGUgcmV0aXJlZCwgc3RhcnRlZCB0YWtpbmcgZnJlcXVlbnQgd2Fsa3MgZnJvbSB0aGUgY291Y2ggdG8gdGhlIGZyaWRnZSBiZXR3ZWVuIGlubmluZ3MgYW5kIHBlcmlvZHMuIApJbiBvcmRlciB0byBiZSBhIGZ1bGwgdGltZSBwbGF5ZXIgeW91IGhhdmUgdG8ga25vdyB5b3UgY2FuIHN1c3RhaW4gYSBsaWZlc3R5bGUgYXQgaXQuIElmIHlvdSdyZSB1bmNlcnRhaW4geW91J3JlIG5vdCB0aGVyZSB5ZXQuIApJdCdzIG5vdCBtZSwgdGhvdWdoLCB3aG8gYnJpbmdzIHRoZSBzdWJqZWN0IHVwLiBCZWZvcmUgdGhlIGludGVydmlldywgU2lyIFJvY2NvIGhhcyBwcmVzaWRlZCBvdmVyIHRoZSBvZmZpY2lhbCBvcGVuaW5nIG9mIGEgV2VzdCBFbmQgVHJhdmVsb2RnZSAgIGFuIGV2ZW50IHRoYXQgaGFzIGRlZXBlciBjb25ub3RhdGlvbnMgdGhhbiBoaWdoIHByb2ZpbGUgaG90ZWxpZXIgb3BlbnMgaG90ZWwuIFRyYXZlbG9kZ2Ugd2FzIHNldHVwIGJ5IHRoZSBGb3J0ZSBmYW1pbHkgYW5kIHRoZW4gc29sZCBvZmYgYWZ0ZXIgdGhlIEdyYW5hZGEgYWNxdWlzaXRpb24oaXQgaXMgbm93IG93bmVkIGJ5IHRoZSBwcml2YXRlIGVxdWl0eSBmaXJtIFBlcm1pcmEpLiAKVGhleSBDT1VMRCBiZSBjcmVhdGluZyBhIHdlbGNvbWluZyBlbnZpcm9ubWVudCB3aGVyZSBnb29kIGNvbWVzIG9mIGl0OiBJdCBjb3N0IG1lIGFib3V0IDEwIG1pbnV0ZXMgb2YgY2xhc3MgdGltZSwgYW5kIGVhcm5lZCBtZSBqb3ksIGEgZ3JlYXQgc3RvcnksIHRoZSByZXNwZWN0IG9mIG15IHN0dWRlbnRzLCBhbmQgdGhlIGdyYXRpdHVkZSBmb3IgYSBzYWZlIHNwYWNlIGZyb20gYm90aCBvZiB0aG9zZSB0d28gZ2lybHMuIApNYXliZSBJIHBpY2tlZCBkaWZmZXJlbnQgdGltZXMgdG8gZ28gbGFzdCB5ZWFyLCBiZWNhdXNlIEkgY291bGRuIGV2ZW4gZ2V0IHVwc3RhaXJzIHRvIHRoZSBETUYgYXJlYS4gVGhlIGxpbmVzIHdlcmUgY29uc3RhbnRseSBjYXBwZWQgZXZlcnkgdGltZSBJIHRyaWVkIGluIGJldHdlZW4gZG9pbmcgb3RoZXIgdGhpbmdzLgpMb2NhdGVkIGluIHNvdXRoZWFzdGVybiBWaXJnaW5pYSwgd2hlcmUgdGhlIG1vdXRoIG9mIHRoZSBDaGVzYXBlYWtlIEJheSBtZWV0cyB0aGUgQXRsYW50aWMgT2NlYW4sIFZpcmdpbmlhIEJlYWNoIGhhcyBhbGwgdGhlIG1ha2luZ3MgZm9yIGFuIHVuZm9yZ2V0dGFibGUgc2Vhc2lkZSB2YWNhdGlvbi4gQ29uc2lkZXJlZCB0byBiZSB0aGUgd29ybGQgTG9uZ2VzdCBQbGVhc3VyZSBCZWFjaCBieSB0aGUgR3Vpbm5lc3MgQm9vayBvZiBSZWNvcmRzLCBWaXJnaW5pYSBCZWFjaCBoYXMgMzUgbWlsZXMgb2Ygc2NlbmljIGNvYXN0bGluZSB0byBleHBsb3JlLCBpbmNsdWRpbmcgeWV0IGFub3RoZXIgZmFtb3VzIGJvYXJkd2FsaywgdGhlIFZpcmdpbmlhIEJlYWNoIEJvYXJkd2Fsaywgb3V0ZG9vciBhY3Rpdml0aWVzIGxpa2Uga2F5YWtpbmcgYW5kIHBhcmFzYWlsaW5nLCBhbmQgaHVuZHJlZHMgb2YgZGluaW5nIGFuZCBsb2RnaW5nIG9wdGlvbnMuIFdoaWxlIHJhdGVzIHdpbGwgY2VydGFpbmx5IGJlIGhpZ2hlciBkdXJpbmcgdGhlIHBlYWsgc3VtbWVyIG1vbnRocywgdGhlcmUgYXJlIG1hbnkgZ3JlYXQgcGxhY2VzIHRvIHN0YXkgaW4gVmlyZ2luaWEgbGFyZ2VzdCBjaXR5LCBtb3N0IG5vdGFibHkgdGhlIEhpbHRvbiBWaXJnaW5pYSBCZWFjaCBPY2VhbmZyb250LCBXZXN0aW4gVmlyZ2luaWEgQmVhY2ggYW5kIHRoZSBoaXN0b3JpYyBDYXZhbGllciBIb3RlbCwgYW4gaWNvbmljIHByb3BlcnR5IHRoYXQgcmVjZW50bHkgcmVvcGVuZWQgYWZ0ZXIgYSBuZWFybHkgJDg1IG1pbGxpb24gcmVub3ZhdGlvbi4gSGVhZHF1YXJ0ZXJzIGFuZCB0aGUgVmlyZ2luaWEgQXF1YXJpdW0uIEFzIHRoZSBzdGF0ZSBsYXJnZXN0IGNpdHksIHRoZXJlIGFyZSBodW5kcmVkcyBpZiBub3QgdGhvdXNhbmRzIG9mIHBsYWNlcyB0byBkaW5lLCB3aXRoIHN1Z2dlc3RlZCBwbGFjZXMgbGlrZSBDYXB0YWluIEdlb3JnZSBTZWFmb29kIFJlc3RhdXJhbnQsIERvYyBUYXlsb3IgV2F0ZXJtYW4gU3VyZnNpZGUgR3JpbGxlIGFuZCBCZWNjYSwgdGhlIGhvdHRlc3QgbmV3IGN1bGluYXJ5IGRlc3RpbmF0aW9uIGluc2lkZSB0aGUgQ2F2YWxpZXIgSG90ZWwuIFZpc2l0b3JzIHdobyBoYXZlIG1vcmUgdGltZSB0byBleHBsb3JlIHRoZSBDb21tb253ZWFsdGggb2YgVmlyZ2luaWEgbWlnaHQgYWxzbyB3YW50IHRvIGNvbnNpZGVyIHZpc2l0aW5nIE5vcmZvbGssIGFub3RoZXIgb3V0c3RhbmRpbmcgd2F0ZXJmcm9udCBjaXR5IGp1c3QgYSBoYWxmIGhvdXIgYXdheSBmcm9tIFZpcmdpbmlhIEJlYWNoIGFuZCBmdWxsIG9mIGxlYWRpbmcgYXR0cmFjdGlvbnMgbGlrZSB0aGUgVmlyZ2luaWEgWm9vLCB0aGUgQmF0dGxlc2hpcCBXaXNjb25zaW4gYW5kIHRoZSBDaHJ5c2xlciBNdXNldW0gb2YgQXJ0LCBhbG9uZyB3aXRoIGV4Y2VwdGlvbmFsIGZpbmUgZGluaW5nIGF0IHBsYWNlcyBsaWtlIEZyZWVtYXNvbiBBYmJleSBSZXN0YXVyYW50IGFuZCBDaGFydHJldXNlIEJpc3Ryby4KV2UgaGFkIGEgcHJvYmxlbSB3aXRoIGEgImNhcmluZyBuZWlnaGJvci9mcmllbmQiIHdoZW4gbXkgaHVzYmFuZCdzIGdyYW5kbW90aGVyIGRpZWQuIEltbWVkaWF0ZWx5IGFmdGVyIGhlciBmdW5lcmFsIHNoZSBmb2xsb3dlZCB1cyBiYWNrIHRvIHRoZSBob3VzZSBhbmQganVzdCBzdGFydGVkIHB1bGxpbmcgc3R1ZmYgZnJvbSBjdXBib2FyZHMgYW5kIGNhYmluZXRzIGFuZCBldmVuIGdvaW5nIHNvIGZhciBhcyB0byB0ZWxsIHVzIHRoYXQgYSBVaGF1bCB3b3VsZCBiZSB0aGVyZSB0aGUgbmV4dCBkYXkgZm9yIGNlcnRhaW4gaXRlbXMgb2YgZnVybml0dXJlLiBXZSBoYWQgdG8gdGhyZWF0ZW4gdG8gY2FsbCB0aGUgcG9saWNlIGJlZm9yZSBzaGUgd291bGQgc3RvcC4gClRocm91Z2hvdXQgdGhlIG5pZ2h0LCBTdGFwcCBzaG93ZWQgY29udHJpdGlvbiBvZiB0aGUgaGVhcnQsIHRoYW5raW5nIGZhbnMgZm9yIHN0YXlpbmcgd2l0aCBoaW0gdGhyb3VnaCB5ZWFycyBvZiBzdWJzdGFuY2UgYWJ1c2UgYW5kIHRoZSBicmVha3VwIG9mIHRoZSBiYW5kIGFuZCBpdHMgMjAwOSByZXVuaW9uLiAiR29kIGJsZXNzIHlvdSwiIGhlIHNhaWQgc2V2ZXJhbCB0aW1lcy4KRG9uJ3QgbGV0IHRoaXMgbW9tZW50IGdldCBzdG9sZW4gZnJvbSB5b3UuLiAKRm9yIE1hcmNoLCB0aGUgc3RvcmUgb3JkZXJlZCA2MDAgcG91bmRzIG9mIGNyYXdmaXNoIGFuZCBoZWxkIGEgZnJlZSBjcmF3ZmlzaCBib2lsIHRoYXQgYXR0cmFjdGVkIGFyb3VuZCAxLDAwMCBwZW9wbGUuCkkgdGhpbmsgdGhleSBnbyBmb3IgYXJvdW5kICQzMDAgYW5kIEkgd291bGQgbm90IGhlc2l0YXRlIHRvIHNwZW5kICQ1MDAgb24gdGhlbSBiZWNhdXNlIHRoZXkgYXJlIGFtYXppbmchLiAKQm9yaXMgQmVja2VyIHNlIG1ldCBhdSBwb2tlcgpUbyBidWlsZCBjaGFubmVscyBrZWVwIHByYWN0aWNpbmcgYW5kIGdldCBiZXR0ZXIgYXQgbGlmZSBiaXQgYnkgYml0IGFuZCB3b3JrIG9uIHNvbWV0aGluZyB5b3UgcGFzc2lvbmF0ZSBhYm91dCBvciBldmVuIGp1c3QgdmFsdWUgdGhlIGxpZmUgZXhwZXJpZW5jZSB5b3UgY29sbGVjdC4gVGhlc2Ugc21hbGwgdGhpbmdzIGJ1aWxkIHlvdXIgbW9tZW50dW0gd2l0aG91dCBiZWluZyB0b28gb3ZlcndoZWxtaW5nIHVudGlsIHlvdSBmZWVsIGJldHRlciB0aGFuIGV2ZXIuIApJdCBub3QgZnVsbHkgY2xlYXIgaG93IG1hbnkgcGVvcGxlIG9yIGhvdyBsb25nIGEgdGltZWZyYW1lICh0aG91Z2ggZ2l2ZW4gdGhlIGd1eSB0aGF0IGdvdCBhIHRydWNrIGl0IHNvdW5kcyBsaWtlIDZpc2ggeWVhcnMpLiBJIHNheSBhIGZldyB3ZWVrcyB0byB1bnRhbmdsZSB0aGF0IG1lc3MsIGZpZ3VyZSBvdXQgd2VlayBieSB3ZWVrIHdoYXQgd2FzIG93ZWQsIHdoYXQgd2FzIHBhaWQsIHdoYXQgd2FzIG92ZXJwYWlkLCB3aGF0IHN0aWxsIG5lZWRlZCB0byBiZSBwYWlkIGFuZCBnZXQgY2hlY2tzIGN1dCBpcyB3b3JraW5nIHJlYWxseSB2ZXJ5IHZlcnkgZmFzdC4gCkkgcmVtZW1iZXIgbXkgZWFybHkgeWVhcnMgaW4gdGhlIDkwcyAoYm9ybiBpbiA4NykuIE15IHJvb20gZGlkbid0IGxvb2sgYSBsb3QgbGlrZSB0aGlzIGFuZCBJIHRoaW5rIG15IHZpZGVvIGdhbWVzIHdlcmUgaW4gYSBjb21tb24gYXJlYSBhbmQgbm90IG15IHJvb20uIEJ1dCB3aGF0IHRoZSBwaWN0dXJlIGNhcHR1cmVzIGlzIHRoZSB3b25kZXIgb2YgbGlmZSBhbmQgdGhlIHVuaXZlcnNlIGF0IGFuIGVhcmx5IGFnZSwgZXNwZWNpYWxseSBpZiB5b3UgaGFkIGFuIG90aGVyd2lzZSBoYXBweSBsaWZlIChhbmQgSSBkaWQsIGF0IGhvbWUpLi4gCkkgc2VlIHRoZSBsb2dpYyBpbiB0aGUgYXJndW1lbnQuIFRob3VnaCBvbmUgY291bGQgYXJndWUgdGhhdCBkdWUgdG8gYSBzdGFnbmF0aW9uIG9mIHdhZ2VzLCBtaW5pbXVtIHdhZ2UgaGFzIGZhaWxlZCB0byByaXNlIHdpdGggaW5mbGF0aW9uIGFuZCBoYXMgYWN0dWFsbHkgZHJvcHBlZC4gCg==|<---