--->|Ikl0IHdpbGwgY2F1c2UgdXB3YXJkIHByZXNzdXJlIG9uIHByaWNlLCBidXQgaXQgd2lsbCBiZSBpbiB0aGUgc2luZ2xlIGRpZ2l0cywgbm90IHRoZSBkb3VibGUgZGlnaXRzLiAKSXQgYWxzbyBoYXBwZW5lZCB0byBtZSBhdCBhbm90aGVyIGNsdWIgaW4gSG9uZ2RhZSB3aGVuIEkgd2FzIGludml0ZWQgdG8gdGhlIFZJUCBzZWN0aW9uLiBJIGhhdmUgbXkgc3VzcGljaW9ucyB0aGF0IHRoZSBzdGFmZiBjb3VsZCBwb3NzaWJseSBoYXZlIGJlZW4gaW52b2x2ZWQgaW4gYm90aCBjYXNlcywgZXNwZWNpYWxseSB3aXRoIHRoZSBzY2FuZGFsIHN1cnJvdW5kaW5nIFNldW5ncmkgY2x1YiBpbiBHYW5nbmFtIGhhcHBlbmluZyByaWdodCBub3cuLiAKMiBkYXlzIGFnbyArIEJ5IFRlcnJ5IFBsdXRvLCBUaGUgUGxhaW4gRGVhbGVyQ2xldmVsYW5kIEluZGlhbnMsIGJhc2ViYWxsIGFuZCAnc3R1cGlkIG1vbmV5JyAgIFRlcnJ5IFBsdXRvIENsZXZlbGFuZCBJbmRpYW5zLCBiYXNlYmFsbCBhbmQgJ3N0dXBpZCBtb25leScgICBUZXJyeSBQbHV0byBCaWcgdGltZSBmcmVlIGFnZW50cyBhcmUgc2lnbmluZyAkMzAwIG1pbGxpb24gZG9sbGFyIGRlYWxzLiBBbmQgdGhleSBydW4gYXQgYXQgbGVhc3QgMTAgeWVhcnMuIApBdWNoIHdocmVuZCBlaW5lcyBUdXJuaWVycywgaW0gQ2FzaGdhbWUgb2RlciBiZWkgZWluZW0gU2l0biBHbyBlcmdlYmVuIHNpY2ggdmllbGUgSGVhZHMgVXAgU2l0dWF0aW9uZW4uIFVuZCBlYmVuIHNvbGNoZSBFbnRzY2hlaWR1bmdlbiB3ZXJkZW4gZWluZW0gZXJsZWljaHRlcnQsIHdlbm4gbWFuIGVpbmVuIEJsaWNrIGluIGRhcyBCdWNoIHdpcmZ0LiAKIkV5ZXMgcGVhayB1bml2ZXJzYWwgbGFuZ3VhZ2UuIFRoZXkgYWxzbyBpbmRpY2F0ZSB0aGUgYW50aXF1aXR5IG9mIHRoZSBzb3VsLiIuIApMaWNlbnNpbmcgY2FuIGJlIGFjaGlldmVkIHRocm91Z2ggbWFueSBtZWFucy4gCkZvciBwZXJzcGVjdGl2ZSwgdGhlIGhvbWVsZXNzIHNoZWx0ZXIgc29ydCBvZiBzaXRzIGJldHdlZW4gdGhlIGV4cGVuc2l2ZSAoYm91Z2llKSB0b3duIGNlbnRlciBhcmVhIChsdXh1cnkgYXBhcnRtZW50cywgcmV0YWlsLCByZXN0YXVyYW50cywgb2ZmaWNlIGJ1aWxkaW5nLCBjb3Jwb3JhdGUgaGVhZHF1YXJ0ZXJzLCBldGMpIGFuZCB0aGUgc3VidXJicyAoZ2FyZGVuIHN0eWxlIGFwYXJ0bWVudHMsIHNpbmdsZSBmYW1pbHkgaG9tZXMsIHRvd24gaG9tZXMsIHNjaG9vbHMsIGdyb2Nlcnkgc3RvcmVzIGFuZCBmcm95byBzaG9wcywgZXRjKS4gVGhlIGFyZWEgaXMgZGV2ZWxvcGluZyByYXBpZGx5LCBuZXcgYXBhcnRtZW50cyBhbmQgY29uZG9zIGFyZSBiZWluZyBidWlsdCwgbmV3IGJ1c2luZXNzZXMgY29tZSBpbiBhbGwgdGhlIHRpbWUsIHNvIHRoZSBob21lbGVzcyBoYXZlbiBhZmZlY3RlZCBhbnl0aGluZyBidXNpbmVzcyAgb3IgcHJvcGVydHkgd2lzZS4gTW9tcyBwdXNoIGFyb3VuZCBzdHJvbGxlcnMsIHRlZW5hZ2VycyB3YW5kZXIsIGVsZGVybHkgbWVuIGFuZCB3b21lbiBnbyBmb3Igd2Fsa3MsIG1lbiBqb2cgYXQgNmFtLiAKTm9ib2R5IGhlcmUgd2FzIGV4cGVjdGluZyBhIHdpbiBhbmQgbm9ib2R5IGlzIGJ1dHRodXJ0IGFib3V0IGxvc2luZy4gSSBib29rZWQgYSBmbGlnaHQgdG8gYW1zdGVyZGFtIGFuZCB3aWxsIGJlIHRoZXJlIGZvciBvbmUgd2Vla2VuZCBpbiBOb3ZlbWJlci4gMyB0aGluZ3MgYXR0cmFjdGVkIG1lIHRvIHlvdXIgY2l0eTogdmFuIGdvZ2ggbXVzZXVtLCBoZWluZWtlbiBicmV3ZXJ5LCBhbmQgY29mZmVlc2hvcHMuIEhvdyByZWFsaXN0aWMgd291bGQgaXQgYmUgdG8gd2FudCB0byBzZWUgYW5kIGV4cGVyaWVuY2UgYWxsIHRocmVlPyBJIGFycml2ZSBqdXN0IGJlZm9yZSBub29uIG9uIHRoZSBGcmlkYXkgYW5kIGxlYXZlIFN1bmRheSBtb3JuaW5nLgpPbiBEZWMgMTAsIDIwMTUKT25lIGNvbW1vbmFsaXR5IGlzIHRoYXQgbWFueSBvZiB0aGVtIGxpdmUgYW5kIGJyZWF0aGUgZ29vZCBzdGF0aXN0aWNzLCBzaW5jZSBpdCdzIHNvIGNlbnRyYWwgdG8gdW5kZXJzdGFuZGluZyBhZ2dyZWdhdGUgaW5mb3JtYXRpb24gb3IgZGF0YSBvbiBsaW1pdGVkIHNhbXBsZXMuIE1hbnkgb2YgdGhlc2UgZ3V5cyBjb3VsZCBmaWxsIGluIGZvciBhbiBpbGwgcHJvZmVzc29yIHRlYWNoaW5nIGFuIGFwcGxpZWQgc3RhdCBjb3Vyc2Ugb24gdGhlIHVuaXZlcnNpdHkgbGV2ZWwgYW5kIG5vdCBtaXNzIGEgYmVhdC4gCkxpa2UgZ29vZCBndXlzIGFuZCBiYWQgZ3V5cy4gTGlrZSB1bmlsaW5lYXIgbmFycmF0aXZlcyB3aGVyZSBhIHN0b3J5IHByb2dyZXNzZXMgYW5kIGlzIHJlc29sdmVkLiBBcmUgYSBjb3VudHJ5IHRoYXQgYmVsaWV2ZXMgaW4gcmVuZXdhbCBhbmQgZXZlbiAicmVzZXR0aW5nIiBmb3JlaWduIHBvbGljeS4gCmhlbHAgbG93ZXIgaW5zdWxpbiBhbmQgQ29udHJvbCBBcHBldGl0ZQpUaGUgY3VzdG9tZXIgd2FzIHNvIHV0dGVybHkgYXBwYWxsZWQgdGhhdCBzaGUgd2FzIHN0aWxsIHNvbGQgYW4gaXRlbSB0aGF0IGhhZCB0b3VjaGVkIHRoZSBmbG9vci4gSSBvZmZlcmVkIHRvIHJlcGxhY2UgdGhlIGl0ZW0gZm9yIGhlciwgc2hlIHdhcyBub3Qgc2F0aXNmaWVkLiBUaGlzIHdhcyBzaW1wbHkgbm90IHNhdGlzZnlpbmcgZW5vdWdoIGZvciBoZXIgYmVjYXVzZSBub3Qgb25seSBkaWQgd2UgZ2l2ZSBoZXIgdGhlIGNoaWNrZW4gYnV0IGl0IHdhcyB0aGUgd29yc3QgY2hlY2tvdXQgZXhwZXJpZW5jZSBvZiBoZXIgbGlmZSwgc2hlIHdhcyBuZXZlciBnb2luZyB0byBzaG9wIGhlcmUgZXZlciBhZ2FpbiwgZXRjLiAKV2lsbGlhbXMgYW5kIGh1c2JhbmQsIEx0LiAKSSBub3QgYSBmaW5hbmNpYWwgd2l6YXJkLCBidXQgSSBhIGJpdCBza2VwdGljYWwgYWJvdXQgdGhlaXIKWWV0IGhpcyBjb25maWRlbmNlIGNvc3QgaGltIGRlYXJseS4gSGlzIHR3byBlYXJseSBkZWZlYXRzIGNhbiBiZSBwdXQgZG93biB0byBvdmVyY29uZmlkZW5jZS4gCkkgdG9vIHdvbmRlcmVkIGFib3V0IHRoaXMgYSB5ZWFyIGFnbywgb24gaG93IEphcGFuIG1hZ2ljYWxseSB3ZW50IGZyb20gJDM1LDAwMCBwZXIgY2FwaXRhIGluY29tZSB0byAkNDEsMDAwIHBlciBjYXBpdGEgaW5jb21lIGluIGp1c3Qgb25lIHllYXIuIApJIGRpc2xpa2UgcmVkdW5kYW5jeSAgIEJ1dCBkb24gdGFrZSBhbnkgbGVzcyB0aGFuIHlvdSBuZWVkIGVpdGhlci5FZGl0OiBQZXJoYXBzIG1vcmUgdml0YWwgdGhhbiBhbnkgb2YgdGhlIGFib3ZlIGlzIGEgc29saWQgcGxhbiBCLiBDb21tdW5pY2F0aW9uIGRldmljZXMgYW5kIHNhZmUgcHJhY3Rpc2VzIGxpa2UgY29tbXVuaWNhdGluZyB5b3VyIHJvdXRlIHRyYXZlbCBpbnRlbnRpb25zIGdvIGEgbG9uZyB3YXkuIEhhdmluZyBhIHJlbGlhYmxlIHdheSB0byBiYWlsIGlzIHdvcnRoIGEgZmV3IGV4dHJhIGdyYW1zIGFsd2F5cy4gCkZvciBleGFtcGxlLCBpZiB5b3UgY2FsbCBwcmUgd2l0aCA3NyBhbmQgdGhlIGZsb3AgY29tZXMgS0o3LCB5b3Ugc2hvdWxkIGJlIGZpc3RwdW1wIGphbW1pbmcgaWYgeW91IGdldCByYWlzZWQvM2JldC4gMm5sIGZpc2ggZ2V0IHJlYWxseSBzcGV3eSB3aGVuIHRoZXkgbGlrZSB0aGVpciBoYW5kLCB0aGV5IGNhbiBmbGlwIG91dCB3aXRoIHdlYWsgdG9wIHBhaXJzIG9jY2FzaW9uYWxseSBhbmQgMiBwYWlyIG9yIGJldHRlciB0aGV5IHdpbGwgYWx3YXlzIEdJSS4gWW91IHdpbGwgZnJlcXVlbnRseSBzZWUgZGVlcHN0YWNrZWQgZmlzaCByYWlzZS9HSUkgZm9yIDJCSSBvciBtb3JlIHdpdGggd2VhayAyIHBhaXJzLCBzb21ldGltZXMgZXZlbiBhIG1lZGlvY3JlIHRvcCBwYWlyLCBhbmQgc29tZXRpbWVzIGp1c3Qgd2l0aCBzb21ldGhpbmcgaW5zYW5lIGxpa2UgYWNlIGhpZ2ggKHNvbWUgb2YgdGhlbSBqdXN0IGZhbGwgaW4gbG92ZSB3aXRoIEFLIG9yIEFRIGFuZCB3aWxsIGxpdGVyYWxseSBqdXN0IGNhbGwgb2ZmIHRoZWlyIHdob2xlIHN0YWNrIG9yIGV2ZW4gamFtIG9uIHlvdSBldmVuIHdoZW4gaXQgZG9lc24gaW1wcm92ZSBhbmQgaXMganVzdCBBIGhpZ2gpLgpObyBwYWlycyAoZG9uIHdhbnQgdG8gYmxvY2sgdGhlIGhhbmRzIHRoZXkgZ290IHRoaXMgZmFyIHdpdGgpCldhc2hpbmcgbWFjaGluZXMgdGhhdCBzcGVjaWZpY2FsbHkgdXNlIG1vcmUgZXhwZW5zaXZlIG1ldGFscyBsaWtlIFppbmMgdG8gbW91bnQgdGhlIHNwaW5kbGUgdG8gc3RlZWwgZHJ1bXMgc28gdGhhdCB0aGUgWmluYyBjb3Jyb2RlcyBhbmQgdGhlIHdhc2hlciBmYWlscyB3aXRoaW4gYSBzZXQgbnVtYmVyIG9mIHdhc2hlcy4KSSBoYXZpbmcgdHJvdWJsZSBzZWVpbmcgd2hhdCBhdHRpdHVkZSB3YXMgc3VwZXJjaWxpb3VzLiBUaGF0IGp1c3Qgc2VlbXMgaGFyc2ggYW5kIHVud2FycmFudGVkLgpUb3JvbnRvIGFkZGVkIGZvcm1lciBNTFMgZGVmZW5kZXIgb2YgdGhlIHllYXIgTGF1cmVudCBDaW1hbiwgdmV0ZXJhbiB3aW5nZXIgTmljayBEZUxlb24gYW5kIGZvcndhcmQgVGVycmVuY2UgQm95ZCBkdXJpbmcgdGhlIG9mZiBzZWFzb24uIFF1ZW50aW4gV2VzdGJlcmcgYWRkcyBkZXB0aCBpbiBnb2FsLgpJdCBpc24gY2hhbGxlbmdpbmcgYWVyb2JpY2FsbHkgYXQgYWxsLCBidXQgbXkgbGVncyBmZWVsIGxpa2UgdGhleSBhcmUgZGVhZCB3ZWlnaHRzLCBhbmQgbXkgZW5lcmd5IGxldmVscyBhcmUgcmVhbGx5IGxvdyB0aGUgcGFzdCBmZXcgZGF5cy4gUmVhbGx5IGVhZ2VyIHRvIGdldCBiYWNrIGF0IGl0Li4gCkl0IHdhcyBhIG5vbiBzdGFydGVyLiBBc2tlZCBhYm91dCB0aGUgbWFueSBwaWNrcyB0aGUgdGVhbSBwYXJ0ZWQgd2l0aCwgS2VrYWxhaW5lbiBzYWlkIHBpY2tzIGFyZSBkcmFmdCBwaWNrcy4gT3RoZXIgd29yZHMsIHRoZXkgbWlnaHQgdHVybiBpbnRvIHNvbWV0aGluZy4gCkl0J3MgZXZlcnlvbmUgZXhjZXB0IHRob3NlIGF0IHRoZSB0b3AuIApMYWR5IEdhR2EpLCBCaWcgR2lybCBOb3cgKGZlYXQuIApIZWFsdGh5IGhhaXIgaXMgYSBzaWduIG9mIG92ZXJhbGwgZ29vZCBoZWFsdGguIElmIHlvdXIgaGFpciBpcyBkdWxsLCBsaWZlbGVzcywgYnJpdHRsZSBvciBsYW5rLCBzb21lIGNvbW1vbiBzZW5zZSBkaWV0YXJ5IGNoYW5nZXMgY291bGQgbGl2ZW4geW91ciBsb2NrcyBhbmQgaW1wcm92ZSB5b3VyIG92ZXJhbGwgaGVhbHRoLiBIZWFsdGh5IGhhaXIgY29tZXMgZnJvbSBoZWFsdGh5IGhhaXIgZm9sbGljbGVzLCBhbmQgaGFpciBmb2xsaWNsZXMgdGhyaXZlIG9uIGEgYmFsYW5jZWQgZGlldCBvZiBwcm90ZWluLCBjb21wbGV4IGNhcmJvaHlkcmF0ZXMsIGZhdHR5IGFjaWRzIGFuZCBlc3NlbnRpYWwgdml0YW1pbnMuIApQaGlsYWRlbHBoaWEgQXZlLiwgQm95ZXJ0b3duLiAxMzogTW9vbiBDYWZlLCBDbGF5IE9uIE1haW4sIDMxMyBNYWluIFN0LiwgT2xheVJldmlld2luZyBzZXZlcmFsIHBlb3BsZSByZWFjdGlvbnMgdGhlcmUgd2VyZSBzb21lIG1peGVkIHJlYWN0aW9ucyBjb25jZXJuaW5nIHRoZSBOaWtlIFRyaWF4IE1lbiBzaG9lLiBNYW55IHdlYXJlcnMgaW5jbHVkaW5nIG15c2VsZiBmb3VuZCB0aGUgc2hvZSBhIGJpdCB0aWdodCBhdCBmaXJzdCBidXQgYSBkZWNlbnQgZml0IHdoZW4gd29ybiBmb3IgYSBsb25nZXIgcGVyaW9kLiAKTm90ZSB0byBNaWtlIFBlbmNlOiBJdCdzIHByZXR0eSByYXJlLi4gCkFzIHdlbGwsIHRoZXknZCBuZWVkIHRvIG1lZXQgdGhlIFZQRCdzIHRocmVlIG90aGVyIGhhcm0gcmVkdWN0aW9uIHN0cmF0ZWdpZXMgb2YgcHJldmVudGlvbiwgZW5mb3JjZW1lbnQgYW5kIHRyZWF0bWVudC4KTCBkdSBybGUgZGUgbm9zIHBpZWRzIHBldXQgbm91cyBhcHBhcmF0cmUgcGx1cyB2aWRlbnRlIHNpIG5vdXMgcmZsY2hpc3NvbnMgdGFudCBzb2l0IHBldSAgdG91dGVzIGxldXJzIGZvbmN0aW9ucy4gSWxzIHNvbnQgbm90cmUgbGllbiBhdmVjIGxhIHRlcnJlLCB1biBwb250IGVudHJlIGxlcyBzcGhyZXMgc3VwcmlldXJlcyBldCBsZXMgc3BocmVzIHBoeXNpcXVlcyBkZSBub3RyZSB0cmUuIEF1IG1pbGlldSBkZSBub3MgbGFucyBzcGlyaXR1ZWxzIG91IGludGVsbGVjdHVlbHMsIGlsIGRvaXQgZXhpc3RlciB1biBwb2ludCBvIHNlcmFpdCBhbmNyZSBub3RyZSBjb21wcmhlbnNpb24gZGUgbGEgdmllICB1biBuaXZlYXUgc3VwcmlldXIsIHVuIHBvaW50IG8gY2VsbGUgY2kgc2UgbWF0cmlhbGlzZXJhaXQuIE5vcyBwaWVkcyBzeW1ib2xpc2VudCBjZXQgYW5jcmFnZTsgbm90cmUgZG1hcmNoZSwgbm90cmUgcG9zdHVyZSwgbm90cmUgZmFvbiBkZSBub3VzIG1haW50ZW5pciBlbiBxdWlsaWJyZSBpbmRpcXVlbnQgY2xhaXJlbWVudCBub3RyZSBwb3NpdGlvbm5lbWVudCBkYW5zIGxlIG1vbmRlLCBub3RyZSBjaGVtaW5lbWVudCwgbGEgZGlyZWN0aW9uIHF1ZSBub3VzIGVtcHJ1bnRvbnMuIE5vcyBwaWVkcyByc3VtZW50IGRvbmMgbm90cmUgdHJlIHRvdXQgZW50aWVyLgpWaXQgRDMgYW5kIHRoZSBGbHUgRXBpZGVtaW9sb2d5IGFuZCBJbmZlY3Rpb24gMjAwNwpTdXJlIGlmIHlvdSBzZW5kIHRoaXMgdG8gdGhlIG1lZGlhIHRoZXJlIG1pZ2h0IGJlIGEgY3JhY2tkb3duLCBidXQgdGhlcmUgbWlnaHQgYmUgbWFueSB0aGluZ3MgdGhhdCB5b3UgY291bGQgaGF2ZSBjbG9zZWQgdGhlIG9wcG9ydHVuaXR5IGZvciB0aGUgcG9saWNlLiBNeSBhZHZpY2UgaXMgdG8gZ28gdG8gdGhlIHBvbGljZSB3aXRoIHRoaXMgaW5mby4gCklmIHRoZSBpbmNpZGVuY2UgcmF0ZSBlc2NhbGF0ZXMgYW5kIHRoZSBzaXR1YXRpb24gcmVhY2hlcyBPUFAzLCBndWVzdHMgbG9zZSB0aGUgYWJpbGl0eSB0byBoYW5kbGUgdGhlaXIgb3duIGZvb2QuIApBbmQgUGFsaW4gd2FudHMgdG8gZXhwbG9pdCB0aGF0IGNvbW1vbiBzZW5zZSB0byBicmVhayB1cCB0aGUgR09QIGVsaXRlcyB1cCBhcyB3ZWxsIGFzIGF0dHJhY3QgbWFueSBvZiB0aGUgd2hpdGUsIHJ1cmFsLCBzdHJhaWdodCBEZW1zIHRvIGhlciBzaWRlLiBJdCB3YXMgY29tbW9uIHNlbnNlIHRoYXQgZHVyaW5nIHRoZSBRIGFuZCBBIHNlc3Npb24sIGEgY2hhbnQgcm9zZSB1cCBmb3IgUHJlc2lkZW50IFBhbGluLi4gClRoZSBvdGhlciBtdXNpY2lhbnMgaGVscCB0byBicmluZyBpbiB0aGUgbGF5ZXJzIGFuZCB0ZXh0dXJlIHRvIHRoZSBhbGJ1bSBhbmQgaXQgaGFzIHNvbWUgcG9pbnRzIHdpdGggaGVhdnksIGdyb292eSBiYXNzIGxpbmVzLiAKQSBsb3Qgb2YgcGVvcGxlIHRhbGsgc2hpdCBhYm91dCBFcmRvZ2FuLiBPZiBjb3Vyc2UgSSB3b3VsZCBub3QgYWR2aXNlIGFueSBmb3JlaWduZXIgdG8gZG8gc28sIGp1c3QgaW4gY2FzZS4gClRoZSBvbmx5IHF1ZXN0aW9uIGlzIHdpbGwgdGhlIGp1ZGdlIGdvIGVhc3kgb24gaGltIGJlY2F1c2UgaGUgcmljaCwgZmFtb3VzLCBhbmQgaGFzIGEgbG90IG9mIGhpZ2ggcHJvZmlsZSBjb25uZWN0aW9ucy4uIApMZXQncyBzYXkgSSBoYXZlIDYgYW5kIDcgb2YgaGVhcnRzLCBhbmQgdGhlIGZsb3AgY29tZXMgQTU0IHdpdGggbm8gaGVhcnRzLiAKTm90IHRvIG1lbnRpb24sIE1leGljbyBoYXMgc2lnbmVkIG9uIHRvIHRoZSBUcmFucyBQYWNpZmljIFBhcnRuZXJzaGlwIEFncmVlbWVudCwgYW5kIGlzIGFuIGFjdGl2ZSBtZW1iZXIgb2YgdGhlIFdUTywgYW5kIHRoZSBPRUNELiAKQnV0IGFzIHdlIHNhdyBNaXNmaXRzIGRpc21hbnRsZSB0aGF0IHRhY3RpYyBieSByZWNvZ25pc2luZyB0aGUgcGVybWFuZW50IHRocmVhdCBhbmQgcHJlZGljdGFiaWxpdHkuIApMZXZlbCAzIGF0IFRoZSBQbGF5Z291bmQgICBoZXJlLCBmaW5kIGdyZWF0IHRhc3RpbmcgbWVudXMgYXQgcmVzdGF1cmFudHMgbG9jYXRlZCBpbiBUaGUgUGllciBTaG9wcyBhdCBDYWVzYXJzLiAKVGhlIHRyYWRpdGlvbmFsIHBva2VyIHJvb21zIGFyZSBzb21ldGltZXMgbG9jYXRlZCBvbiBzdWNoIGdlb2dyYXBoaWNhbCBsb2NhdGlvbnMgdGhhdCBjYW4gbm90IGJlIGVhc2lseSByZWFjaGVkIGJ5IHRoZSBjb21tb24gbWFuIG9yIGFyZSBlaXRoZXIgc28gZXhwZW5zaXZlIGFuZCBsdXh1cmlvdXMgdGhhdCB0aGUgY29tbW9uIG1hbiBjYW5ub3QgZXZlbiB0aGluayBhYm91dCBlbnRlcmluZyB0aGUgcHJlbWlzZXMgb2Ygc3VjaCBhIHBsYWNlLiAKQ29uc2lkZXJlZCB0aGUgUGFydGl0byBDb211bmlzdGEgSXRhbGlhbm8gdGhlIGxhcmdlc3QgY29tbXVuaXN0IHBhcnR5IGluIHRoZSBXZXN0ZXJuIHdvcmxkLiBJdCByZWNlaXZlZCBtaWxsaW9ucyBvZiBkb2xsYXJzIGZyb20gdGhlIFNvdmlldCBVbmlvbiwgd2hpY2ggYXQgb25lIHBvaW50IGJlZ2FuIHRyYWluaW5nIFBDSSBtZW1iZXJzIGluIHVyYmFuIGd1ZXJyaWxsYSB3YXJmYXJlIHRvIGhlZGdlIGFnYWluc3QgdGhlIHBvc3NpYmlsaXR5IG9mIHJpZ2h0IHdpbmcgY291cHMgKG5lbyBmYXNjaXN0cyBkaWQgcGxvdCBhbiBhYm9ydGVkIGNvdXAgaW4gMTk3MCkuCk9uZSB3YXkgaXMgdG8gc2VuZCBhIHNhbXBsZSBvZiB5b3VyIG9pbCB0byBhIGNvbXBhbnkgdGhhdCB0ZXN0cyBvaWwgY2hlbWljYWxseS4gSWYgdGhleSBkZXRlY3Qgd2F0ZXIgYnV0IG5vIGV0aHlsZW5lIGdseWNvbCAoY29vbGFudCksIGl0IHByb2JhYmx5IGp1c3QgY29uZGVuc2F0aW9uLiBJZiB0aGV5IGRldGVjdCBjb29sYW50IGluIHRoZSBvaWwsIGl0IGEgcG9zc2liaWxpdHkgdGhhdCB5b3UgbmVlZCBhIGhlYWRnYXNrZXQgZG9uZS4KVGhlIHNlY29uZCBIb3RlbCBJbmRpZ28gaW4gRXVyb3BlLCBpbiBMb25kb24gVG93ZXIgSGlsbCBvcGVuZWQgZWFybGllciB0aGlzIG1vbnRoLiAKVGhlcmUgaXMgYSBmcmVlcm9sbCBydW5uaW5nIGFsbCB0aGUgdGltZSBvbiB0aGUgaW50ZXJuZXQuIEluIG1vc3Qgb2YgdGhlbSB0aGUgd2hvbGUgcHJpemVwb29sIGlzIGFyb3VuZCBvbmUgaHVuZHJlZCBkb2xsYXJzLiAKQSBsb3Qgb2YgdGhlIHRpbWVzIGluIGNhc2VzIGxpa2UgdGhpcyBwZW9wbGUga2VlcCB0aGVpciBzdGFuY2UsIGJlY2F1c2UgInRoaXMgaXMgaG93IHdlIGJlZW4gZG9pbmcgaXQgZm9yIGEgbG9uZyB0aW1lLiIgU28gd2hhdD8gRG9lc24gbWVhbiBpdCBhIGdvb2Qgd2F5IHRvIGhhbmRsZSB0aGUgc2l0dWF0aW9uLgpJdCBwcm9iYWJseSBzZWVtcyB0b3RhbGx5IG5vcm1hbCB0byB0aG9zZSBpbnZvbHZlZCBpbiB0aGF0IHNjZW5lLCBidXQgdG8gdGhlIHJlc3Qgb2Ygc29jaWV0eSwgaXQncyB3YWFhYWFheSBvdmVyIGluZHVsZ2VudCwgYW5kIGl0IHNlZW1zIHNlbGYgc2VydmluZyB0byBpbnNpc3QgdGhhdCBpdCdzICJwYXJ0IG9mIHdvcmsgY3VsdHVyZSIuIEZ1cnRoZXJtb3JlLCB0aGVyZSBlbmRzIHVwIGJlaW5nIGEgTE9UIG9mIHNlcmlvdXMgc3Vic3RhbmNlIGFidXNlIGlzc3VlcyB3aXRoaW4gdGhhdCBjdWx0dXJlOyBhbGNvaG9saXNtIGJlaW5nIHRoZSBvYnZpb3VzLiAKSXQgc2VlbXMgb2RkIHRoYXQgYWxsIHlvdXIgY29uZmxpY3QgcmV2b2x2ZXMgYXJvdW5kIHRoaXMgY2FzdCB3aGljaCBpcyBwcmV0dHkgY2xvc2UgdG8geW91LiBBbGwgb2Ygd2hvbSBlbmQgdXAgam9pbmluZyB5b3UgYXQgTW90aGVyIEJhc2UsIGluIG9uZSBmb3JtIG9yIGFub3RoZXIuIFRoZXJlIHNlZW1zIHRvIGJlIGEgbGFjayBvZiBzaWRlcywgdGhleSBhbGwganVzdCBraW5kIG9mIHlvdXIgY3Jldy4KVGhleSBzdXJlIGFzIGhlbGwgZG9uIHdhbnQgdG8gbG9zZSB0aGF0IHByb2ZpdC4uIApIZSBmb2xkZWQuIApCdXQgaGlzIGRvbWluYW5jZSBpcyBtYWtpbmcgdGhlIHNwb3J0IGEgYml0IGJvcmluZyBsaWtlIFJvc3NpIGRpZCBhdCB0aGUgcGVhayBvZiBoaXMgY2FyZWVyLi4gCkhlJ2xsIGNhbGwgYW55dGhpbmcgYW5kIHBsYXkgYW55IGhhbmQuLiAKU29tZXRpbWVzIGxpc3RlbmluZyBhbmQgc2F5aW5nICJJIGxvdmUgeW91LiAKQW5kIG5vIHRoaXMgaXNuIGp1c3QgYSBzaW1wbGVyIHdheSB0byBkdW1wIHdhc3RlLiBUaGlzIHByb2Nlc3MgaXMgcHJvYmFibHkgbW9yZSBleHBlbnNpdmUgYW5kIGNvbXBsZXggdGhlbiB0byBqdXN0IHNjcmFwIHRoZW0gZm9yIG1ldGFsLgpMYXRpbm8gYW5kIExhdGluIEFtZXJpY2FuIGNvbW11bml0aWVzIGFyZSB0aGUgZmFzdGVzdCBncm93aW5nIGRlbW9ncmFwaGljLCBzYWlkIEFudG9uaW8gRC4gQW5kZXJzb24gUHJvZmVzc29yIG9mIEhpc3BhbmljIFN0dWRpZXMuIGFtIGVzcGVjaWFsbHkgZXhjaXRlZCB0byB3aXRuZXNzIHRoZSB3YXlzIGluIHdoaWNoIExhdGlubyBBcnQgTm93ISB3aWxsIGVuZ2FnZSBhbmQgaW5zcGlyZSBIb3VzdG9uaWFucyBvZiBhbGwgYWdlcyBhbmQgZXRobmljaXRpZXMuIEhvdXN0b24gZmVhdHVyZXMgbW9yZSB0aGFuIDcwIGFydCBleGhpYml0aW9ucyBhbmQgb3RoZXIgZm9ybXMgb2YgY3VsdHVyYWwgZW5nYWdlbWVudCBhdCBVSCwgYXJlYSBtdXNldW1zLCBnYWxsZXJpZXMgYW5kIGN1bHR1cmFsIGNlbnRlcnMgYmVnaW5uaW5nIEZyaWRheSwgRmViLiAxIHRocm91Z2ggRnJpZGF5LCBNYXkgMzEuIEEgc3BlY2lhbCBmZWF0dXJlIG9mIExBTiEgaXMgdGhlIFNwcmluZyBvZiBMYXRpbm8gQXJ0IChTT0xBKSwgYW4gb3V0Z3Jvd3RoIG9mIHBhcnRuZXJzaGlwcyB3aXRoIGFyZWEgYXJ0cyBvcmdhbml6YXRpb25zIGFuZCBhcnRpc3RzLgpCbGVzc2VkIHdpdGggYnJlYXRodGFraW5nIG5hdHVyYWwgYmVhdXR5LCBhIHdlYWx0aCBvZiBvdXRkb29yIGFjdGl2aXRpZXMgYW5kIHBoZW5vbWVuYWwgZGluaW5nIGFuZCBsb2RnaW5nLCB0aGUgU291dGh3ZXN0IGNsZWFybHkgaGFzIGFsbCBvZiB0aGUgbWFraW5ncyBmb3IgYW4gdW5mb3JnZXR0YWJsZSB2YWNhdGlvbi4gClRvIHN0YXRlIHRoYXQgdGhlcmUgaXMgYSBidXNpbmVzcyBlbGl0ZSBpcyBhIGJpdCBtaXNsZWFkaW5nLiAKSnVzdCBwdXQgdGhlIGl0ZW0gb24gc2FsZSB1bnRpbCBzb21lb25lIHdhbnRzIHRvIGJ1eSBpdC4gCk15bGlmZXN1Y2tzaGVscCB1Ck9uIHZhbmdsaXNlcmEgbW1lIGxlcyBtZW5oaXJzIGRvbnQgY2VydGFpbnMgc29udCBlbmNvcmUgc3VybW9udHMgZCBjcm9peCBhdWpvdXJkIE9uIGF1cmEgY29uc2VydiBsZXMgbW1lcyBsaWV1eCB0b3V0IGVuIG1vZGlmaWFudCBxdWVscXVlIHBldSBsZSBkY29yLiBEIGRpdmluaXRzIG9uIGF1cmEgZmFpdCBkZXMgc2FpbnRzLiAKVGhhbmsgeW91IGZvciB0YWtpbmcgdGhlIHRpbWUgdG8gd3JpdGUgYWJvdXQgeW91ciBleHBlcmllbmNlIGF0IHRoZSBTb3V0aCBQb2ludCBDYXNpbm8gU3BhLiBJIHNvcnJ5IHRoZSBjYXNpbm8gc2VlbWVkIHZlcnkgc21va3kgZHVyaW5nIHlvdXIgc3RheSBhbmQgSSBoYXZlIHNoYXJlZCB5b3VyIGNvbW1lbnRzIHdpdGggdGhlIGFwcHJvcHJpYXRlIG1hbmFnZXJzIG9mIG91ciBzdGFmZiBmb3IgdGhlaXIgcmV2aWV3LiBJIGdsYWQgeW91IHdlcmUgYWJsZSB0byBoYXZlIGEgZ29vZCB0aW1lIGluIHNwaXRlIG9mIHRoZSBzbW9rZSBhbmQgd2UgY2FuIHdhaXQgdG8gaGF2ZSB5b3UgYmFjayB3aXRoIHVzIGFnYWluIHZlcnkgc29vbiEgSGF2ZSBhIGdyZWF0IGRheSEgU2luY2VyZWx5LCBIb3RlbCBPcGVyYXRpb25zCkl0IHJlcG9ydHMgdGhhdCBBZnJpY2FuIGNvbnN1bWVyIHNwZW5kaW5nIGhhcyByaXNlbiBmcm9tICQ4NjAgYmlsbGlvbiBpbiAyMDA4IHRvIGFsbW9zdCAkMXRyaWxsaW9uIG5vdywgYW5kIHdpbGwgcmVhY2ggJDEuNHRyaWxsaW9uIGluIDIwMjAuUHJvZi4gCk1yLiBNJ3Mgd2FzIGxvY2F0ZWQgaW4gYSBzdHJpcCBtYWxsIHRoYXQgY29udGFpbmVkIGEgc2V4IHRveSBkdW5nZW9uLCBhIGdheSBiYXIgY2FsbGVkIHRoZSBOdXR0eSBCdWRkeSB3aXRoIGEgcGljdHVyZSBvZiBMYXVyZWwgYW5kIEhhcmR5IG9uIHRoZSBzaWRlLCBhIHRyYXZlbCBhZ2VuY3ksIGFuZCBhIEtCIFRveXMuIEl0IHdhcyB0aGUgc2l0ZSBvZiBhIGZ1dHVyZSBzdG9wIG9uIGEgZ2hvc3Qgd2Fsay4gCkkgYWxyZWFkeSBoYWQgYW4gYXJ0IHByb2plY3QgcGxhbm5lZCBmb3IgdGhpcyB5ZWFyIGJlZm9yZSBJIGtuZXcgSSBnb3QgREdTLCBzbyBnZXR0aW5nIERHUyBmb3IgbmV4dCB5ZWFyIGlzbiBteSBtb3RpdmF0aW9uIGZvciBkb2luZyBhcnQgaW5zdGFsbGF0aW9ucy4gSSBsb3ZlIGFydCBhbmQgQk0gaXMgc3BlY2lhbCB0byBtZSBmb3IgdGhhdCByZWFzb24uIFRoaXMgeWVhciB3ZSBnb2luZyBiaWdnZXIgYW5kIGhhcmRlciwgSSBjb3VsZG4gYmUgbW9yZSB0aHJpbGxlZC4KU29tZXRpbWVzIHRoYXQgYmFja2ZpcmVzIG9uIG1lIGFuZCBoZSB5ZWxsIG91dCBhZ2FpbiAiRGlkIHlvdSBoZWFyIG1lPz8gSSBzYWlkICJCeWUgRmVsaWNpYSEiIEFuZCBJIGp1c3Qgc3RhcmUgYXQgaGltIGFuZCBzaHJ1ZyBhbmQgbW92ZSBvbi4gClNvIGl0IGZlbGwgb3V0IHRoYXQgTWFyaWxsYSBhbmQgTXJzLiBSYWNoZWwgTHluZGUgYW5kIHRoZSB0d2lucyBjYW1lIHRvIEZvdXIgV2luZHMgZm9yIENocmlzdG1hcy4gTWFyaWxsYSBoYWQgdGhlIGZhY2Ugb2YgYSB3b21hbiB3aG8gaGFkIGNpcmN1bW5hdmlnYXRlZCB0aGUgZ2xvYmUuIFNoZSBoYWQgbmV2ZXIgYmVlbiBzaXh0eSBtaWxlcyBhd2F5IGZyb20gaG9tZSBiZWZvcmU7IGFuZCBzaGUgaGFkIG5ldmVyIGVhdGVuIGEgQ2hyaXN0bWFzIGRpbm5lciBhbnl3aGVyZSBzYXZlIGF0IEdyZWVuIEdhYmxlcy4KVGhlcmUncyBoYXJkbHkgZXZlciBhIGNhc2UgZm9yIGNhbGxpbmcga2luZ3MgcHJlIHVubGVzcyB5b3VyIHBvc2l0aW9uaW5nIHRvIHN0YWNrIHNvbWVvbmUgd2hvIGlzIHNob3J0IGluIGEgdG91cm5leSBvciBsaXZlIGNhc2ggZ2FtZXMsIGV2ZW4gc3RpbGwgbm90IHRoZSBiZXN0IGlkZWEuIApTbyB3aGVuIG91ciBkZWFyIE1haW5lciBzYXlzIGJsYWNrIHBlb3BsZSBhcmUgZmFybSBpbXBsZW1lbnRzLCBoZSBtZWFudCBpdC4gCk9idmlvdXNseSwgYm90aCBNYXN0ZXIgYW5kIFllc2h1YSBhcmUgZXhhbXBsZXMgb2Ygc3RhdGUgdHJhbXBsaW5nIG9uIHJpZ2h0cyBvZiBjaXRpemVucyBpbiB0aGUgbmFtZSBvZiBpdHMgY29udGludWVkIGV4aXN0ZW5jZS4gQnV0IHRoZXJlIGFyZSBvdGhlciBhY3RvcnM6IFBpbGF0ZXMgYW5kIFNvdmlldCBidXJlYXVjcmF0cywgSnVkYXMgYW5kIHRoZSBndXkgd2hvc2UgbmFtZSBJIGZvcmdvdCwgd2hvIGdvdCBNYXN0ZXIgYXBhcnRtZW50LCBldGMuIEhvdyB0aGUgY29uZmxpY3QgYmV0d2VlbiBzdGF0ZSBhbmQgY2l0aXplbiBpcyByZXNvbHZlZCwgd2hhdCBjaGFuZ2VzIGl0IGJyaW5ncyB0byB0aGUgY2hhcmFjdGVycyAgIGV2ZXJ5dGhpbmcgaXMgaW50ZXJjb25uZWN0ZWQgYW5kIHlldCBkZWVwbHkgcGVyc29uYWwuLiAKRXh0cmVtZSB3YXRlciBmaWdodHM6IG1ha2UgYSBjYW5vbiBvdXQgb2YgUFZDIHBpcGVzIChha2Egc3B1ZCBndW4pLCB1c2UgZGVvZG9yYW50IGFzIGEgcHJvcGVsbGFudCBhbmQgc2hvb3Qgd2F0ZXIgYmFsbG9vbnMgYXQgeW91ciBvcHBvbmVudHMuIFlvdSdkIHB1dCBhIHdldCBzcG9uZ2UgYmV0d2VlbiB0aGUgYmFsbG9vbnMgYW5kIHRoZSBnYXMgcGFydCB0byBwcmV2ZW50IHRoZW0gcG9wcGluZy4KQm9sdG9uIGFwcHJvYWNoIGhhcyBkcmF3biBzb21lIGNoYXJnZXMgb2YgaGVhdnkgaGFuZGVkbmVzcyBmcm9tIG90aGVyIGNvcm5lcnMgb2YgdGhlIGFkbWluaXN0cmF0aW9uLCBhcyBzb21lIFRydW1wIGxveWFsaXN0cyBhcmd1ZSBoZSB1c2luZyB0aGUgTlNDIHRvIGltcGxlbWVudCBoaXMgb3duIHByaW9yaXRpZXMgb3ZlciB0aGUgcHJlc2lkZW50IFNvbWUgaW4gdGhlIFdoaXRlIEhvdXNlIHdlcmUgc2hvY2tlZCB0aGF0IHRoZSBOU0MgdG9vayBob3VycyB0byBleHBsYWluIFRydW1wIFN5cmlhIGRlY2lzaW9uLCBjaGFsa2luZyBpdCB1cCB0byBCb2x0b24gb2JqZWN0aW9uIHRvIHRoZSBwb2xpY3kuIEJ1dCBCb2x0b24gYWxsaWVzIGNvbnRlbmQgaGUgZnVsZmlsbGluZyB0aGUgcHJlc2lkZW50IHdpc2hlcyBpbiBmbGVzaGluZyBvdXQgdGhlIHByZXNpZGVudCB0b3AgbGluZSBkZWNpc2lvbnMsIGFuZCBXaGl0ZSBIb3VzZSBvZmZpY2lhbHMgaW5zaXN0IHJlcG9ydHMgb2YgYmFkIGJsb29kIGJldHdlZW4gdGhlIHR3byBhcmUgbWlzZ3VpZGVkLi4gCkFuIGVtb3Rpb25hbCByb2NrIGlzIHNvbWVvbmUgd2hvIGlzIGFibGUgdG8gcHJvY2VzcyBlbW90aW9ucyBmb3Igd2hhdCB0aGV5IGFyZSBhbmQgbm90IGxldCB0aGVtIGNvbnRyb2wgdGhlaXIgbGlmZSBvciBiZWhhdmlvci4gCk15IGJyYWluIGlzIGNvbnN0YW50bHkgcnVubmluZyB3aXRoIGlkZWFzLCB0YXNrcywgZXRjLiwgbm90IHRvIG1lbnRpb24gZ2VuZXJhbCBzZWxmIGNvbnNjaW91cyB0aGluZ3MgbGlrZSAiR29kIEkgaG9wZSBoZSBkb2VzbiB0aGluayB3ZSBoYXZlIGEgYm9yaW5nIHNleCBsaWZlIi4gCklmIHlvdSBzdWIgNTBOTCB3aGljaCBtb3N0IGFyZSBvciBwbGF5aW5nIHN1YiAkMjAgTVRUcywgdGhlIHJha2ViYWNrIGRvZXMgdmVyeSBsaXR0bGUsIHRoZWlyIHN0cnVjdHVyZXMgYW5kIHN0YWNrIHNpemVzIGFyZSBhdHJvY2lvdXMgZHVlIHRvIGJlaW5nIGN1Y2tlZCBieSBQYWRzIGFuZCB0aHVzIHRhaWxvcmluZyB0aGVpciB3ZWJzaXRlIHRvIGEgc3RhYmxlIGFuZCB0b3VybmllcyB0YWtlIGZhciB0b28gbG9uZy4gRnVydGhlcm1vcmUsIHRoZWlyIHpvb20gZnVuY3Rpb25hbGl0eSBpcyBwb29yLCB5b3UgY2FuIGV2ZW4gdGFrZSBub3RlcyBpbiBhIHByZXZpb3VzIGhhbmQgb25jZSB5b3UgbW92ZSB0byBhIG5ldyBvbmUsIHRoZXkgaGF2ZSBubyB6b29tIHRvdXJuaWVzIGFuZCB0aGVpciBsaXZlIGV2ZW50cyBoYXZlIGJlZW4gY2F1Z2h0IGRvaW5nIGV4dHJlbWVseSBzaGFkeSBzdHVmZi4KVHVlc2RheS4gQnV0IGF0IHRoYXQgdGltZSBpdCBjYW1lIHVwIGEgZm9vdCBhbiBob3VyLiAKTWFueSBhcmUgd2FpdGluZyBvbmxpbmUgcmlnaHQgbm93Lk1lZXQgU2luZ2xlcyBOZWFyIE1lTWUsIGFuZCBnZXQgY2hhdHRpbmcgdG8gbG9jYWwgc2luZ2xlcyB0b2RheS4gRmluZCBTaW5nbGUgR2lybHMgRm9yIEdldCBMYWlkIFRvbmlnaHQgVGhlIEludGVybmV0LiBOZWFyIE1lIGlzIGZ1bGwgb2Ygc2luZ2xlIG1lbiBhbmQgd29tZW4gbGlrZSB5b3UgbG9va2luZyBmb3IgZGF0ZXMsIGxvdmVycywgZnJpZW5kc2hpcCwgYW5kIGZ1bi4gQmVzdCBvZiBhbGwsIHRoZXJlIGFyZSB3ZWJzaXRlcyB0aGF0IGFyZSBzcGVjaWFsbHkgZGVzaWduZWQgZm9yIHNlbmlvciB1c2VycywgbWVhbmluZyBtb3N0IG9mIHRoZSBtZW1iZXJzIGFyZSBvZiBhIHNpbWlsYXIgYWdlLiAKTlROVSBzdXJwcmlzaW5nbHkgZGlkbiByZWFsbHkgaGF2ZSBhbnl0aGluZyB0aGF0IGFwcGVhbGVkIHRvIG1lOyB0aGUgaW5mb3JtYXRpb24gc2VjdXJpdHkgcHJvZ3JhbSBkaWRuIHNlZW0gcGFydGljdWxhcmx5IHRlY2huaWNhbC4gCjYgQWJzLiAxIFMuIDEgbGl0LiAKV291bGQgYWxsIGxpa2UgdG8gdGhhbmsgZXZlcnkgZGV0ZWN0aXZlIG91dCB0aGVyZSB0aGF0IGJlZW4gb24gdGhpcyBjYXNlIHdvcmtpbmcgZW5kbGVzcyBob3VycyB0byBoZWxwIHdpdGggYSBjaGFyZ2UsIHNhaWQgQW1iZXIgUG9ydGVyLCB3aG8gYWRkZWQgU2l4IE5hdGlvbnMgSW5kaWdlbm91cyBTZXJ2aWNlcyBoYXMgaGVscGVkIHRoZW0gdGhyb3VnaCB0aGVpciBzb3Jyb3cuCkR1cmluZyB0aGUgbW92aW5nIG1lZGl0YXRpb24sIHdlIHdlcmUgaW52aXRlZCB0byB3YWxrIGFyb3VuZCB0aGUgc3BhY2lvdXMgYmFja3lhcmQuIEkgd2Fsa2VkIHRocm91Z2ggdGhlIHdldCBncmFzcyBiYXJlZm9vdCwgYWJvdmUgdGhlIHJvb3RzIG9mIGEgbGFyZ2UgdHJlZSwgYWxvbmcgYSBzdG9uZSB3YWxrd2F5IHBhc3QgYSBnYXJkZW4gICBJIGxpdGVyYWxseSBzdG9wcGVkIHRvIHNtZWxsIHRoZSByb3Nlcy4gSSBkb24ndCByZW1lbWJlciB0aGUgbGFzdCB0aW1lIEkgc3BlbnQgc2lsZW50IHRpbWUgaW4gbmF0dXJlIHdpdGggbm93aGVyZSB0byBiZSwgZmVlbGluZyBjb25uZWN0ZWQgYW5kIGFsZXJ0IGFuZCByZWxheGVkLiAKVGhpcyBpcyBhIG1ham9yIGRpZmZlcmVuY2UuIEluIGltcGVyZmVjdCBpbmZvcm1hdGlvbiBnYW1lcyB0aGUgcGxheWVycyBjYW4gaGF2ZSBwcml2YXRlIGluZm9ybWF0aW9uLCBmb3IgZXhhbXBsZSwgcHJlZmVyZW5jZXMgaW4gbmVnb3RpYXRpb24sIGNhcmRzIGluIHBva2VyLCB2YWx1YXRpb25zIGluIGF1Y3Rpb25zLCB3aGF0IHplcm8gZGF5IHZ1bG5lcmFiaWxpdGllcyBhIHBsYXllciBoYXMgdW5jb3ZlcmVkIGluIGN5YmVyc2VjdXJpdHksIGFuZCBzbyBvbi4gTW9zdCByZWFsIHdvcmxkIGludGVyYWN0aW9ucyBhcmUgaW1wZXJmZWN0IGluZm9ybWF0aW9uIGdhbWVzLkZvciBhIGdpdmVuIGdhbWUgc2l6ZSwgaW1wZXJmZWN0IGluZm9ybWF0aW9uIGdhbWVzIGFyZSBtdWNoIGhhcmRlciB0byBzb2x2ZSBiZWNhdXNlIG9uZSBoYXMgdG8gYmFsYW5jZSB0aGUgc3RyYXRlZ2llcyBhbW9uZyBzdWJnYW1lcy4gClByaXRjaGFyZDogIldlJ3ZlIGJlZW4gb3V0c291cmNpbmcgc28gbXVjaCB3b3JrIHRvIGFnZW5jaWVzIGZvciBzbyBtYW55IHllYXJzLCBhbmQgdGhlcmUgYXJlIHNvIG1hbnkgdG91Y2hwb2ludHMgYmV0d2VlbiB0aGUgYnJhbmQgYW5kIHRoZSBjb25zdW1lci4gV2hhdCB3ZSdyZSBmaW5kaW5nIGluY3JlYXNpbmdseSwgd2l0aCBkYXRhIGFuZCB0ZWNobm9sb2d5IGFuZCBhbmFseXRpY3MsIHdlIGNhbiBkbyBpdCBvdXJzZWx2ZXMuIFNvIHdlJ3JlIGJyaW5naW5nIG1lZGlhIHBsYW5uaW5nIGluIGhvdXNlLiBXZSdyZSBkb2luZyBtdWNoIG1vcmUgY3JlYXRpdml0eSBpbiBob3VzZS4gVGhlc2UgaGFuZHMgb24gdGhlIGtleWJvYXJkIHBlcmZvcm1hbmNlIG1hcmtldGluZyBleHBlcmltZW50cywgc2FtZSB0aGluZy4gWWVzLCBpdCBjaGFuZ2VzIHRoZSBuYXR1cmUgb2YgaG93IHdlIHdvcmsuIEl0IGFsbG93cyB5b3UgdG8gZ28gZmFzdGVyLCB0YWtlIGNvc3Qgb3V0IG9mIHRoZSBzeXN0ZW0gYW5kIGdldCBvdXIgYnJhbmRzIG9wZXJhdGluZyBsaWtlIGEgc3RhcnR1cCwgYW5kIHRoYXQncyBhIGxvdCBvZiBmdW4uIgpUaGUgZGVtb2NyYXRpYyBwb2xpcyBjb250aW51ZWQgdG8gc3VwcG9ydCB0aGUgYXJ0cy4gTW9yZSBhbmQgbW9yZSBzY3VscHR1cmVzIGFuZCBwaWN0dXJlcyBzaG93ZWQgZmVtYWxlIGZpZ3VyZXMgaW5zdGVhZCBvZiBvbmx5IGZvY3VzaW5nIG9uIHRoZSBtYWxlIGJvZHkuIApJIHN1cmUgeW91ciBGT08gd2lsbCBmcmFtZSBpdCBhbiBhdHRhY2sgb24gWVMsIGJ1dCBJIGRvbiB0aGluayBpdCBpcy4gRGlkIHRoZSBsZXR0ZXIgc2F5IFlTIHdhcyBhIGhvcnJpYmxlLCBldmlsIHBlcnNvbj8gTm8uIERpZCBpdCBhY2tub3dsZWRnZSB0aGUgdmVyeSByZWFsIGZhY3QgdGhhdCBZUyBoYXMgZW1vdGlvbmFsIHJlZ3VsYXRpb24gaW1wdWxzZSBjb250cm9sIGlzc3Vlcz8gWWVzLiBEaWQgaXQgYWNrbm93bGVkZ2UgdGhhdCB0aG9zZSBpc3N1ZXMgaGF2ZSBwcmV2aW91c2x5IHJlc3VsdGVkIGluIGhlciB0aHJlYXRlbmluZyB0aGUga2lkcz8gWWVzLiBEaWQgaXQgYWNrbm93bGVkZ2UgdGhhdCB5b3VyIHBhcmVudHMgZG9uIGFsd2F5cyBzdXBlcnZpc2UgaGVyIHdlbGw/IFllcy4KSGUgY291bGQgdGFrZSBpdCBhbGwgb3V0IHdoZW4gaGUgZGVjaWRlZCB0byBhY3R1YWxseSBkbyB0aGUgd29yay4gTm8gYmlnZ2llIHdlIHRob3VnaHQuIEEgZmV3IHdlZWtzIGdvIGJ5IGFuZCBoZSBlbWFpbHMgc2F5aW5nIGhlIHdhcyBzb3JyeSBoZSB3YXMgYnVzeSBldGMgYW5kIGhlJ2QgcHV0IGhpcyBpbiB0aGF0IG5pZ2h0LiBIZSB0aGVuIGhhcyBhIGxpdHRsZSBsYXVnaCBhdCB3aGF0IHdlJ2QgZG9uZSBhbmQgdGhlbiBwdXRzIGluIGhpcyB3b3JrLiAKRWRpdDogdG8gYW5zd2VyIHlvdXIgcXVlc3Rpb24sIEkgdXN1YWxseSBqdXN0IHRlbGwgcGVvcGxlIHdoYXQgdGhlIG5ldyBwbGFuIGlzIGFuZCB3aHkgICBicmllZmx5LiBJIG9ubHkgdGVsbCB0aGVtIHdoYXQgdGhleSBuZWVkIHRvIGtub3cgaW4gb3JkZXIgdG8gYmUgdXAgdG8gZGF0ZSB3aXRoIHdoYXQgSSdtIGRvaW5nLiBJJ2xsIGV4cGFuZCBtb3JlIGlmIHRoZXkgYXNrIGJ1dCBpZiBJIHNlbnNlIGp1ZGdlbWVudCBvbiBzb21ldGhpbmcsIEkgc3RhbmQgYnkgbXkgZGVjaXNpb24uIEV2ZW4gaWYgSSdtIG5vdCBoYXBweSB3aXRoIHRoZSByZWFzb24gZm9yIHRoZSBjaGFuZ2UuCk1vaGF0bWFwYW5kYSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KRlJDIGhhcyBoYWQgbm8gY29udGFjdCB3aXRoIERyLiAKV2lsIGppaiBqZSBob2VzdGRyYW5rIGdvZWRrb29wIGVuIG9ubGluZSBrb3Blbj8gQmVzdGVsIG51IG9ubGluZSBqZSBob2VzdGRyYW5rIGVuIGVydmFhciBoZXQgZ2VtYWsuIFN0b3AgbnUgbWV0IGhvZXN0ZW4hClRoZSBWaWN0b3IgUG9rZXIgQ3VwIHdpbGwsIGFjY29yZGluZyB0byBDaGFpcm1hbiwgVmljdG9yIENoYW5kbGVyLCAiYmUgYSB0cnVseSBncm91bmQgYnJlYWtpbmcgZXZlbnQgdGhhdCB3aWxsIGdpdmUgRXVyb3BlYW4gcG9rZXIgYW4gZXZlbnQgdG8gcmFuayBhbG9uZ3NpZGUgYW55dGhpbmcgc2VlbiBpbiB0aGUgVW5pdGVkIFN0YXRlcy4iIE1yIENoYW5kbGVyIGdvZXMgb24gdG8gYWRkICJXZSdyZSBwcm91ZCB0byBiZSBzcG9uc29yaW5nIGEgdG91cm5hbWVudCB0aGF0IHdpbGwgYmVjb21lIHN5bm9ueW1vdXMgd2l0aCB0aGUgZ2xhbW91ciBhbmQgZXhjaXRlbWVudCBvZiBoaWdoIHN0YWtlcyBwb2tlci4gQXQgZXZlcnkgc3RlcCB3ZSdsbCBiZSBlbnN1cmluZyB0aGF0IFRoZSBWaWN0b3IgUG9rZXIgQ3VwIGlzIHRoZSBSb2xscyBSb3ljZSBvZiBwb2tlciB0b3VybmFtZW50cy4iCk9mIGNvdXJzZSBldmVyeSBhbmltYWwgaXMgZGlmZmVyZW50LCBzb21lIGRvZ3MgYW5kIGNhdHMgZG8ganVzdCBmaW5lIGVhdGluZyBhbHBvIG9yIGZyaXNraWVzIGFuZCBoYXZlIGxpbWl0ZWQgaGVhbHRoIGlzc3VlcyBidXQgdGhlcmUgaXMgYSB0cmVuZCB3aXRoIGRvZ3MgYW5kIGNhdHMgdGhhdCBhcmUgZmVkIHB1cmluYSBoYXZpbmcgbW9yZSBoZWFsdGggcHJvYmxlbXMgdGhhbiBhbmltYWxzIGZlZCBvbiBoaWdoZXIgcXVhbGl0eSBmb29kcy4uIApUaGUgRG9KIGhhZCBjbGFpbWVkIHRoZSBDRkEgSW5zdGl0dXRlIGRpc2NyaW1pbmF0ZWQgYWdhaW5zdCBBbWVyaWNhbiB3b3JrZXJzIGJ5IGJyaW5naW5nIGluIHN0YWZmIGZyb20gb3ZlcnNlYXMgdG8gZ3JhZGUgaXRzIGV4YW0gcGFwZXJzLiAKTG9vayBhdCBmaWdodCB0aW1lbGluZXMgaWYgeW91IGdvIGludG8gc2F2YWdlLiAKQydlc3QgcGFzIGNoZXIgZW4gYXBwYXJlbmNlIG1haXMgZW4gZmFpdCBwb3VyIGxlIGRvdWJsZSB2b3VzIGF2ZXogYXVwcnMgZCd1biBsYWJvIHNwY2lhbGlzIG5vbiBwYXMgNjAgZyBtYWlzIDEwMCBncmFtbWUgZCd1bmUgcG91ZHJlIGluZmluaW1lbnQgcGx1cyBjb25jZW50cmUgcXVlIGwnb24gZG9pdCBwcmVuZHJlIGRhbnMgdW4gcGV1IGQnZWF1IGNoYXVkZSBjYXIgbGEgcGVyY2VwdGlvbiBkZXMgc2F2ZXVycyBlc3QgcHJpbW9yZGlhbGUgZGFucyBsZSBtb2RlIGQnYWN0aW9uLiBMYSBwb3VkcmUgZGUgcGVybGUgZXRzIHVuIHJlbWRlIGRlc3RpbiAgbGEgcGVhdS4gCiJXZWxsLCB3ZSBvbmx5IHBsYXkgS29yZWFuIG11c2ljIGhlcmUsIGFuZCB5b3UgbWlnaHQgYmUgdW5jb21mb3J0YWJsZS4iIEkgbG92ZSBLb3JlYW4gbXVzaWMhIExldCBtZSBpbiEgIldlbGwsIHRoZSBjbGllbnRzIGFyZSBLb3JlYW4gaGVyZSwgeW91IG1pZ2h0IG5vdCBmaXQgaW4uIiBJIGxvdmUgaW50ZXJhY3Rpbmcgd2l0aCBLb3JlYW5zIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiB0aGlzIGN1cnJlbnQgbW9tZW50LCBsZXQgbWUgaW4hICJXZWxsLCB5b3UgaGVyZSBieSB5b3Vyc2VsZi4gCkkgaGlnaGx5IHJlY29tbWVuZCBpdCBpZiB5b3Ugd2FudCB0byBsZWFybiBob3cgdG8gbmF0dXJhbGx5IGF0dHJhY3Qgd29tZW4gd2l0aCBob25lc3R5ICAgbm90IGdhbWVzLi4gCldoYXQgbWlzc2luZyBpbiBjcmVlcHlwYXN0YSBhcyBhIGdlbnJlIGlzIHRoYXQgc29ydCBvZiBkaWRhY3RpYyBjb3JlIHRoYXQgb25seSBoYWQgcmVzb25hbmNlIGJlY2F1c2UgdGhlIHVyYmFuIGxlZ2VuZCBjb3VsZCBiZSBiZWxpZXZlZCB0byBiZSB0cnVlLi4gCkJ1dCBtb3N0IG9mIHRoZXNlIHRoaW5ncyBzZWVtZWQgbGlrZSB0aGV5IHJlcXVpcmUgZWl0aGVyIGp1c3QgamFja3BvdCBvZGRzIGFuZCBiZWluZyBib3JuIHRoYXQgd2F5LCBvciBBIExPVCBvZiB3b3JrLiBTbyBJIGdvdCBvbGRlciwgYW5kIHdhcyBzdGlsbCBlbmpveWluZyBkb2luZyB5b3VuZyBraWQgc3R1ZmYgdGhhdCB3YXNuIGFib3V0IHNldHRpbmcgd29ybGQgcmVjb3Jkcy4gVGhlbiBIaWdoIHNjaG9vbCBjYW1lIGFuZCBJIHdhcyBtb3JlIGFib3V0IGN1dHRpbmcgY2xhc3MgdGhhbiBicmVha2luZyBzb21lIHN0dXBpZCB3b3JsZCByZWNvcmQgd2hhdGV2ZXIuIFdoaWxlIEkgcGFja2luZyBteSBzdHVmZiB0byBnbyBvZmYgZm9yIGZyZXNobWFuIHllYXIgb2YgY29sbGVnZSwgSSBmaWd1cmUgSSBzaG91bGQgcGFjayBzb21lIGJvb2tzIHRvIG5vdCBsb29rIGxpa2UgYSB0b3RhbCBkdW1teSAgIGNhbWUgYWNyb3NzIGEgY29weSBvZiBhIDE5ODUgV29ybGQgUmVjb3JkIGNvcHkgYW5kIHRocmV3IGl0IGluIHdpdGggbXkgc3R1ZmYuIDE5ODUgd2FzIGEgcmVhbGx5IHdvcm4gY29weS4KTWFydGluZ2FsZSB1c3VhbGx5IGludm9sdmVzIGRvdWJsaW5nIHlvdXIgYmV0IHdpdGggZWFjaCBsb3NzLCBhbmQgaXQgZG9lc24gd29yayBiZWNhdXNlIHlvdSBkb24gaGF2ZSBhbiB1bmxpbWl0ZWQgYmFua3JvbGwuIDEgb3V0IG9mIDMyIHRyaWFscyB5b3Ugd2lsbCBsb3NlIDUgY29uc2VjdXRpdmUgY29pbiBmbGlwcywgYW5kIGdpdmUgdXAgdGhlIHByb2ZpdCBmcm9tIHRoZSBwcmV2aW91cyAzMSB3aW5zLiAxIG91dCBvZiAyNTYgdHJpYWxzIHlvdSB3aWxsIGxvc2UgNyBpbiBhIHJvdywgYW5kIHlvdSB3aWxsIGdpdmUgdXAgdGhlIHByb2ZpdCBmcm9tIHRoZSBsYXN0IDI1NSBmbGlwcywgZXRjLiAKQnV0IGdlbmVyYWxseSwgaXMgdGhpcyBhIHNwb3Qgd2hlcmUgaXQgd29ydGggaXQsIGV2ZW4gaWYgbXkgcG90IG9kZHMgYXJlIHJpZ2h0LCB3aGVuIEkgZmVlbCBsaWtlIEkgYmV0dGVyIHRoYW4gdGhlIHRhYmxlPyBJIHRoaW5rIEkgaGF2ZSBlbm91Z2ggb2YgYW4gZWRnZSB0aGF0IEkgZmluZCBiZXR0ZXIgc3BvdHMgd2hlcmUgSSBmYXJ0aGVyIGFoZWFkLCBhbmQgdGhhdCBJIG1ha2luZyBnb29kIG1vbmV5IG9uIHN0ZWFscy9hZ2dyZXNzaXZlIHBsYXkgcG9zdCBmbG9wIHdpdGhvdXQgc2hvd2Rvd24uIApJIGNvbXBsZXRlbHkgYWdyZWUgd2l0aCB5b3UuIApTaXIgRGF2aWQgTGVhbiwgTGlmZSBhbmQgV29ya3MgY2hhcnRzIHRoZSBjZWxlYnJhdGVkIGRpcmVjdG9yJ3MgY2FyZWVyIGFuZCBmZWF0dXJlcyByYXJlIGltYWdlcyBmcm9tIEJyaWVmCllvdSBjYW4gcGxheSBmdWxsIG9uIGJvMyBjb21wZXRpdGl2ZSBtYWdpYyBpbiBhcmVuYS4uIApUaGUgYmVzdCBhZ2VuY2llcyBhcmUgb25seSByZWFsbHkgZ29pbmcgdG8gZGVsaXZlciB0aGUgYmVzdCB3b3JrIHdoZW4gdGhleSdyZSB2YWx1ZWQgYW5kIGJyb3VnaHQgdW5kZXIgdGhlIGZvbGQgdG8gcmVhbGx5IHVuZGVyc3RhbmQgdGhlIGJ1c2luZXNzIGR5bmFtaWNzIGFuZCB3aGF0J3MgaGFwcGVuaW5nLiIuIApOb3QgcmljaCBlbm91Z2ggdG8gZ2V0IHJlYWxseSByaWNoIGJ5IGxldmVyYWdpbmcgZ292ZXJubWVudCBzdWJzaWRpemVkIGNhcGl0YWxpc20uCk9yaWdpbmFsbHksIHRoZXNlIG1hY2hpbmVzIHVzZWQgdG8gaGF2ZSBhIHNpbmdsZSBsZXZlciBhc3NvY2lhdGVkIG9uIG9uZSBzaWRlIG9mIHRoZSBtYWNoaW5lIHdoaWNoIG9uZSBoYWQgdG8gcHVzaCBpbiBvcmRlciB0b28gbWFrZSB0aGUgd2hlZWwgc3Bpbi4gClRoZSBwbGF5IGFyZWEgaXMgYmFjayBsaXQgYnkgYnJpZ2h0IExDRCBsaWdodCBidWxicy4gClVuZW1wbG95bWVudCByaXNrIG1hbmFnZW1lbnQgY2FuIGluY2x1ZGUgYW4gZW1lcmdlbmN5IGZ1bmQgd2hldGhlciBjYXNoIG9yIGFuIHVudXNlZCBsb3cgaW50ZXJlc3QgcmF0ZSBsaW5lIG9mIGNyZWRpdC4gQSByZXRpcmVtZW50IHBsYW4gc2hvdWxkIHByb2JhYmx5IGFsc28gYmUgYmFzZWQgdXBvbiBhbiBlYXJseSByZXRpcmVtZW50LCBqdXN0IGluIGNhc2UgYSBjYXJlZXIgaXMgY3V0IHNob3J0IGR1ZSB0byB1bmZvcmVzZWVuIGNpcmN1bXN0YW5jZXMuIFRoZW4gd29ya2luZyBsb25nZXIgaW50byBvbmUgNjBzIG9yIDcwcyBpcyBhIGNob2ljZSByYXRoZXIgdGhhbiBhIG5lY2Vzc2l0eS4uIApBbmQgeW91IGtub3cgd2hhdD8gSWYgdGhlIHN0YXJzIGNhbiBkbyBpdCwgdGhlbiBpdCBPSy4gU28sIGl0IHJlYWxseSBnb3R0ZW4gYmV0dGVyLiAKU2luZ2xlIGZhbWlseSBtYXJrZXQgd2lsbCByZW1haW4gc2xvdyBhbmQgY29udGludWUgdG8gZXhwZXJpZW5jZSBmdXJ0aGVyIHByaWNlIGNvcnJlY3Rpb25zLCBhbmQgSSBob25lc3RseSBiZWxpZXZlIHRoaXMgaXMgYSBnb29kIHRoaW5nLCBoZSBhZGRlZC4gUHJpY2UgYWRqdXN0bWVudHMgYXJlIGxvbmcgb3ZlcmR1ZSBhbmQgcXVpdGUgZnJhbmtseSBuZWNlc3NhcnkgYmVmb3JlIHRoZSBtYXJrZXQgY2FuIG1vdmUgZm9yd2FyZCBhZ2Fpbi4gCkFyZSBwbGVudHkgb2Ygc3RyYXRlZ2llcyB0aGF0IGFyZSBub24gbWFya2V0IGNvcnJlbGF0ZWQgdGhhdCBmaXQgdGhpcyBleGFjdCBwb2ludCBpbiB0aW1lIHdlbGwgYW5kIHRoZXJlIGdvaW5nIHRvIGJlIHBlb3BsZSB3aG8gYXJlIHRyeWluZyB0byBnZXQgdGhvc2Ugc29sdXRpb25zIHRvIG1hcmtldC4gRnVuZHMgYXJlIHVzdWFsbHkgYXNzb2NpYXRlZCB3aXRoIGhpZ2ggcmlzayBzdHJhdGVnaWVzIGFuZCBzbyBpdCB3b3VsZCBiZSBlYXN5IHRvIHBhaW50IGxpcXVpZCBhbHRzIHdpdGggdGhlIHNhbWUgYnJ1c2gsIEFpemFubWFuIHNhaWQsIGJ1dCB0aGF0IG5vdCBuZWNlc3NhcmlseSB0aGUgY2FzZS4gCkdlbmVydnQgdW5kIHVtIGRpZSBFcmZhaHJ1bmcgcmVpY2hlciwgZGFzcyBlcyBpbSBHcmllY2hpc2NoZW4ga2VpbiBXb3J0IGYgUiBnaWJ0LCBoYWJlbiB3aXIgdW5zIGVybmV1dCBhdWYgWmltbWVyc3VjaGUgYmVnZWJlbi4uIApDcmVtYXRpb24gaGFzIHRha2VuIHBsYWNlIGFuZCBpbnRlcm1lbnQgd2lsbCBiZSBhdCBXaWxsaWFtc2J1cmcgQ2VtZXRlcnkgYXQgYSBsYXRlciBkYXRlLi4gClJlZ2luYWxkQmFyY2xheTcgIDMzIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpGb3ggaXMgcGxlYXNlZCB3aXRoIHRoZSB3YXkgdGhhdCBDb2hlbiB3YXMgZGlzY3JlZGl0ZWQgYnkgdGhlIFJlcHVibGljYW5zIG9uIHRoZSBjb21taXR0ZWUuSSBhbSBub3Qgc2VlaW5nIHRoaXMgY2F0Y2ggZmlyZSB0aGUgd2F5IHdlIG1pZ2h0IGhhdmUgaG9wZWQuIApJZiB5b3UgaGF2ZSBzcGVjaWZpYyBxdWVzdGlvbnMgZG9uJ3QgaGVzaXRhdGUgdG8gUE0gbWUuIApJIHVuZGVyc3RhbmQgaG93IGltcGFjdGZ1bCBpdCB3YXMgdG8gcmVsZWFzZSB0aG9zZSBsZXR0ZXJzLCBidXQgd291bGRuIGl0IGFsc28gYmUgcmVhbGx5IGRhbmdlcm91cyBmb3IgYWxsIHRoZSB3b21lbiB3aG8gd3JvdGUgdGhlbSBhbmQgZ2F2ZSB0aGVpciBuYW1lcz8gSSBjb3VsZCBlYXNpbHkgc2VlIGFueSBub24gaGFuZG1haWQgYmVpbmcga2lsbGVkIGFuZCBoYW5kbWFpZHMgYmVpbmcgbWFpbWVkL3RvcnR1cmVkLiBJIGRvbiBrbm93IGV4YWN0bHkgaG93IG1hbnkgdGhlcmUgd2VyZSAoY291bGRuIGhhdmUgYmVlbiBtb3JlIHRoYW4gNDAgNTApIGJ1dC4gClRoZSBub25kaXNjcmltaW5hdGlvbiB0aGluZyBpcyB0byBlbnN1cmUgdGhhdCB0aGUgNDAxayBpc24gYmVpbmcgdXNlZCBleGNsdXNpdmVseSB0byBzaGVsdGVyIGhpZ2ggY29tcGVuc2F0aW9uIGVtcGxveWVlcyAoMTIwayspIGluY29tZSBmcm9tIHRheGF0aW9uLiBJdCBiYXNpY2FsbHkgYSBsYXcgc2V0IHVwIHRvIHByZXZlbnQgYSBjb21wYW55IGZyb20gZ2l2aW5nIGl0cyBleGVjdXRpdmVzIGEgJDUwLDAwMCBwcmUgdGF4IDQwMWsgY29udHJpYnV0aW9uIGFuZCBpdHMgcmVndWxhciBlbXBsb3llZXMgJDEuCldha2FuZGEgY291bGQgaGF2ZSBzdG9wcGVkIHRoZSBzbGF2ZSB0cmFkZSBhbmQgY29sb25pYWxpc20uIFRoZXkgY291bGQgaGF2ZSBlbmRlZCBXV0lJIHdlbGwgYmVmb3JlIDEwcyBvZiBtaWxsaW9ucyBvZiBwZW9wbGUgZGllZC4gVGhleSBjb3VsZCBoYXZlIGN1cmVkIHNvIG1hbnkgZGlzZWFzZXMuIEJ1dCB0aGUgZmlsbSBlbmRzIHdpdGhvdXQgYW55b25lIGxvb2tpbmcgYXQgV2FrYW5kYSBhbmQgc2F5aW5nICJmdWNrIHlvdSIgZm9yIHRoZW0gYmVpbmcgeGVub3Bob2JpYy4KU29jczAgIDM2IHBvaW50cyAgc3VibWl0dGVkIDI0IGRheXMgYWdvClRoZXJlIGFyZSBodW5kcmVkcyBvZiBwZW9wbGUgd2hvIG1ha2UgZ29vZCB0byBncmVhdCBsaXZpbmdzIGRvaW5nIGJvdGggYW5kIGFsc28gaHVuZHJlZHMgd2hvIHVzZSBib3RoIGFzIGEgZm9ybSBvZiBlbnRlcnRhaW5tZW50IGFuZCBhcyBzaWRlIGluY29tZS4gCjI4IGxldHRlciBwdWJsaXNoZWQgYnkgdGhlIE1pbm5lYXBvbGlzIGJhc2VkIHRlbGV2aXNpb24gc3RhdGlvbi4gUGF0dGVyc29uIHdhcyBjaGFyZ2VkIGluIEZlYnJ1YXJ5IHdpdGggbXVyZGVyIGZvciB0aGUgT2N0LiBUaGV5IHdlcmUgdGhlIGxhdGVzdCBncm91cCB0byBzdXJyZW5kZXIgZnJvbSB0aGUgYmVzaWVnZWQgZmluYWwgcG9ja2V0IG9mIFN5cmlhbiB0ZXJyaXRvcnkgaGVsZCBieSB0aGUgbWlsaXRhbnQgZ3JvdXAuIFdpbGxpYW0gTWNMZW9kLCBhIDR0aCBncmFkZSBzdHVkZW50IGF0IFZhbGxleSBWaWV3IEVsZW1lbnRhcnkgU2Nob29sIGluIEJvdW50aWZ1bCwgVXRhaCwgdG9sZCBLU1RVIHRoYXQgd2hlbiBoZSBhcnJpdmVkIGF0IHNjaG9vbCBvbiBBc2ggV2VkbmVzZGF5LCBoZSB3YXMgdGhlIG9ubHkgc3R1ZGVudCB3ZWFyaW5nIGFuIGFzaCBjcm9zcywgYSBzeW1ib2wgd2hpY2ggZGVzaWduYXRlcyB0aGUgc3RhcnQgb2YgdGhlIExlbnRlbiBzZWFzb24sIG9uIGhpcyBmb3JlaGVhZC4gClRoZWlyIG1hdGNoIGFnYWluc3QgU2hha2h0YXIgRG9uZXRzayBhdCBPbGQgVHJhZmZvcmQgbWF5IGNvbWUgYXMgYSB3ZWxjb21lIGJyZWFrIGZyb20gZG9tZXN0aWMgdHJvdWJsZXMuIFVuaXRlZCdzIDUgMCB3aW4gb3ZlciBCYXllciBMZXZlcmt1c2VuIHB1dCB0aGVtIHRocm91Z2ggdG8gdGhlIGtub2Nrb3V0cywgYW5kIHRoZXkgbmVlZCBqdXN0IGEgcG9pbnQgdG8gcHJldmVudCB0aGUgVWtyYWluaWFucyB0YWtpbmcgdGhlaXIgcGxhY2UgYXQgdGhlIHRvcCBvZiBHcm91cCBBLgpUdXJucyBvdXQgSSB3YXMganVzdCB3cm9uZywgb3IgYXQgbGVhc3Qgd3JvbmcgYWJvdXQgb25lIG9mIHRoZSBwb3NzaWJsZSBpbnZlc3RtZW50czogQm90b3guLiAKTGFkeSBHYWdhIGhhcyB3cml0dGVuIG1hbnkgc29uZ3MuIEFsbCBoZXIgc29uZ3MgaGF2ZSBiZWVuIHdyaXR0ZW5ieSBoZXIgd2l0aCBsaXR0bGUgaGVscC4gCkkgdGhpbmsgdGhhdCBtaWdodCBoZWxwIHF1aXRlIGEgYml0ISBVbmZvcnR1bmF0ZWx5LCBpdCBqdXN0IG1lICgyNSB5byBNYWxlKSBpbiBhIDMgYmVkcm9vbSBob3VzZS4gCkFsdGVyUmljbyAgNDQgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpXaGF0IGFsc28gdHJ1bHkgZW50ZXJ0YWluZWQgYW5kIHN1cnByaXNlZCBtZSB3YXMgdGhlIHVuaXF1ZSB3b3JsZCBpdCB3YXMgc2V0IGluLCBzdXJlIGl0IHdhcyBFYXJ0aCBpdHNlbGYgYnV0IHdoYXQgbWFkZSBpdCB1bmlxdWUgd2FzIHRoZSB1bmRlcmx5aW5nIGFtb3VudCBvZiBmYW50YXN5IGNyZWF0dXJlcyBhbmQgbXl0aHMgYWxsIGFib3VuZCB0byB0aGUgd29ybGQsIHN1Y2ggYXMgbW9uc3RlcnMsIGdob3N0cywgZnJhZ21lbnRzIG9mIGltYWdpbmF0aW9ucywgZWN0LiBPbmUgZXhhbXBsZSBvciB0d28gdG8gYmUgc2FpZCBpbiBmYWN0IGlzIGhvdyB0aGV5IGhhdmUgc3Bpcml0cyBhbmQgeW91a2FpIGFsbCBhcm91bmQgdGhlIHdvcmxkIG9ubHkgdG8gYmUgdW5iZWxpZXZlZCBieSBzb21lIGJlY2F1c2UgdGhleSBjYW5ub3Qgc2VlIGFzIHRvIG9ubHkgY2VydGFpbiBwZW9wbGUgY2FuLiBUaGV5IGNhbiBzb21ldGltZXMgZXZlbiBlYXQgbXl0aGljYWwgY3JlYXR1cmVzIGFuZCBnYWluIHRoZWlyIHBvd2VycyBzdWNoIGFzIHRoZSBtZXJtYWlkIHdoaWNoIEt1cm91IGF0ZSB0byBuZXZlciBvciB3aGVuIGhlIGdldHMgaHVydCBkb2VzbiBhY3R1YWxseSBnZXQgaHVydCBvciBmZWVscyBpdCBhbmQgYWxzbyByZWdlbmVyYXRlcy4gSXQgbWFrZXMgZXZlcnl0aGluZyBmcm9tIHRoZSBtYW5nYSBtb3JlIGludGVyZXN0aW5nIGFzIGl0IGFkZHMgdGhlc2UgdHlwZXMgb2YgdGhpbmdzIGJlY2F1c2UgaXQgY3JlYXRlcyBhIHNlbnNlIG9mIHNvbWV0aGluZyBvdXRzdGFuZGluZyBhbmQgYSBmYW50YXN5IGxpa2UgZmVlbGluZyBlc3BlY2lhbGx5IHNpbmNlIGl0IHRha2VzIHBsYWNlcyBpbiBhIHNldHRpbmcga25vdyBhcyBFYXJ0aCwgb3VyIG93biB3b3JsZC4gVGhvc2Ugc3RvcmllcyB0aGF0IHdlIGh1bWFucyBjcmVhdGUgYW5kIGdvc3NpcCBhYm91dCBzb21ldGhpbmdzLCBteXRocywgbGVnZW5kcywgY29tZSBhbGl2ZSBpbiBhIHN0b3J5LgpJZiB5b3UgYXJlIHJlbGlnaW91cyBhbmQgdW5kZXJzdGFuZCB3aGF0IHNhdGFuaXNtIGFjdHVhbGx5IGlzLiAKU2NhbGlhIHNob3dlZCBhIGRlZXAgY29tbWl0bWVudCB0byBvcmlnaW5hbGlzbSwgd2hpY2ggaGUgbGF0ZXIgYmVnYW4gY2FsbGluZyB0ZXh0dWFsaXNtLiAKSSBzZWVuIGxhdWdoaW5nLCBjcnlpbmcsIGFuZ2VyLiBZb3UgbmFtZSBpdC4gVGhpcyBzaG91bGQgYmUgY2F0aGFydGljOyB0aGUgcGF0aWVudCBzaG91bGQgZmVlbCBiZXR0ZXIgYWZ0ZXIgaW4gdGhpcyBzaXR1YXRpb24uLiAKSSB0aGluayB5b3UganVzdCBoYXZlIHRvIHJlbWVtYmVyIHRoYXQga29yZWEgd2lsbCBiZSB0aGVyZSBmb3IgeW91IHdoZW4vaWYgeW91IHdhbnQgdG8gY29tZSBiYWNrLiBJdCdzIHNvIGVhc3kgdG8gZ2V0IG5lcnZvdXMgYWJvdXQgdGhpbmdzIHRoYXQgaGF2ZW4ndCBoYXBwZW5lZC4gQnV0IHdlIHJlYWxseSBjYW4ndCBrbm93IGhvdyB0aGV5IHdpbGwgdHVybiBvdXQuLiAKQmF5IENpdGllcyBEZWxpIGluIFNhbnRhIE1vbmljYSBpcyB0aGUgc3RvY2sgYW5zd2VyIGZvciBhIGdvb2Qgc3ViIChmb3IgdmVyeSBnb29kIHJlYXNvbiwgaXQgYW1hemluZykuIENhbiByZW1lbWJlciBpZiB0aGV5IGN1dCBhbGwgdGhlIHdheSB0aHJvdWdoLCBJIHN1cmUgYW55d2hlcmUgeW91IGdvIHlvdSBjb3VsZCByZXF1ZXN0IGl0IHRob3VnaC4KWW91IHNlZSB0aGF0IGNoYW5naW5nPyBQcm9mZXNzb3IgUGFudCBhc2tlZC4gdGFsZW50IGdvaW5nIHRvIGJlY29tZSBldmVuIG1vcmUgZnVuZ2libGUgdGhhbiBiZWZvcmUgYmVjYXVzZSBjdWx0dXJhbCBiYXJyaWVycyB0byBzdWNjZXNzIGdvIGRvd24/CkZsb3AgaXMgQSAyIDYgYW5kIEkgZmlndXJlIGhpcyBnYXJiYWdlIEFjZSBqdXN0IGdvdCB0aGVyZS4gCkxlYXZlIGVjb25vbXkgdG8gdGhlIHVud2FzaGVkIG1hc3NlcyB3aG8gaGF2ZSBubyBvdGhlciBjaG9pY2UgYnV0IHRvIGJyaW5nIGhlciBiYWJ5IG9uIHRoZSBwbGFuZS4gCkkgZ3JlZXQgcGVvcGxlIHdobyBzaXQgZG93biwgSSB0cnkgdG8gbWFrZSBhIGJpdCBvZiBjb252ZXJzYXRpb24gYW5kIGhhdmUgZnVuLiAKU2hlYm95Z2FuIFByZXNzLCBUaGUgKE5ld3NwYXBlcikgICBBdWd1c3QgOCwgMTk2OSwgU2hlYm95Z2FuLCBXaXNjb25zaW4KQXQgbGVhc3Qgb25lIHdvbWFuIGRpc2Nsb3NlZCBiZWluZyBzZXh1YWxseSBhc3NhdWx0ZWQgYnkgY3VzdG9tZXJzIGFuZCBhbm90aGVyIHNhaWQgc2hlIGhhZCBiZWVuIHJvYmJlZDsgb3RoZXJzIHJlcG9ydGVkIGJlaW5nIHNsYXBwZWQgYW5kIHZlcmJhbGx5IGFidXNlZCwgdGhlIGNoYXJnZXMgc2F5LgpUaGVyZSBhcmUgZ3VpZGVsaW5lcyBjb25jZXJuaW5nIHRoaXMgZnJvbSB0aGUgVGhlIEFsY29ob2wgYW5kIFRvYmFjY28gVGF4IGFuZCBUcmFkZSBCdXJlYXUuLiAKU2hlIHdhcyB1cHNldCB0aGF0IHNoZSBkaWRuJ3Qga25vdyBKYWNrIHdhcyBkcmlua2luZyAoYW5kIGRyaXZpbmcpIGFnYWluICgiVGhhdCB3b3VsZCBiZSBzb21lIHdheSB0byBsZWF2ZSB1cy4iKSwgYW5kIHRoZW4gZXZlbiBtb3JlIHVwc2V0IHdoZW4gSmFjaydzIHJlc3BvbnNlIHdhcyB0aGF0IHNoZSBoYWRuJ3QgYmVlbiBhcm91bmQuIApZb3UnbGwgbmVlZCBhIC4gdGhlbXNlbHZlcyBmcm9tIHRoZSBodWJidWIgb2YgZGFpbHkgbGlmZSBpbiBvcmRlciB0bywgaW4gZXNzZW5jZSwuIHJlYWRpbmcgVGhlIE1vbmFzdGVyeSBvZiB0aGUgSGVhcnQ6IEFuIEludml0YXRpb24gdG8gYSBNZWFuaW5nZnVsIExpZmUuIEl0IGVuICAuIFRob3NlIHdobyBhcmUgcGFydGljaXBhdGluZyBpbiB0aGUgZ3JvdXAgc2hvdWxkIGhhdmUgdGhlIGJvb2sgYXQgbGVhc3QgYSB3ZWVrIGJlZm9yZSB5b3VyIGZpcnN0IC4gCkkgc3VwcG9zZSBpdCBiZWNhdXNlIEkgZW5qb3kgdGhlIGZlZWxpbmcgb2YgbGVhcm5pbmcsIGFuZCB0aGF0IGl0IHNlZW1zIGxpa2UgdGhlIG9ubHkga2luZCBvZiBtZWFuaW5nZnVsIGZvcm0gc29jaWFsIGludGVyYWN0aW9uIHRvIG1lLiAKSWYgdGhlcmUgYXJlIG1vcmUgdGhhbiA1IHdhcm5pbmdzIG9uIHRoZSBsaXN0LCBoZSBpcyBwcm9iYWJseSBjaGVhdGluZy4gCkkgZm91bmQgdGhhdCBJIGNhbiB3ZWFyIGZvdXIgYXQgYSB0aW1lIG5vdyBiZWZvcmUgSSBzdGFydCB0byBsb3NlIHRyYWNrIG9mIHRoaW5ncywgYWx0aG91Z2ggdXN1YWxseSBJIHN0aWNrIHdpdGggdHdvLiBVc2Ugd2hpY2hldmVyIGNvbG91ciBwYWlyaW5ncyBtYWtlIHNlbnNlIHRvIHRvIHlvdS4KV2h5PyBCZWNhdXNlIHBva2VyIG1hY2hpbmUgbG9jYXRpb25zIGRlbGliZXJhdGVseSB0YXJnZXQgdGhlc2UgY29tbXVuaXRpZXMuIEZvciBleGFtcGxlLCBHZWVsb25nIGhhcyB0aGUgbW9zdCBwb2tpZXMgYW5kIHBva2VyIG1hY2hpbmUgdmVudWVzIG9mIGFueSBWaWN0b3JpYW4gY291bmNpbC4gCiBOSEwgMjAxOS4uIApJIGNhbGwsIG90aGVyIGd1eSBvdXQuIApPbiBOb3YuIDE5LCAyMDE4LCBWaW9sYSBEZXNtb25kIG9mZmljaWFsbHkgYmVnYW4gYXBwZWFyaW5nIG9uIENhbmFkYSAkMTAgYmlsbC4gSGVyIGltYWdlIHJlcGxhY2VzIFNpciBKb2huIEEuIApUaGUgcHJvYmFiaWxpdHkgb2YgZGVhbGluZyB0aGUgUXVlZW4gb2YgU3BhZGVzIG5leHQgaXMgMSBpbiA1MC4gCkludGVyZXN0ZWQgaW4gaGVhcmluZyB5b3VyIHRob3VnaHRzLmhhdmUgcHJlbWl1bSB0aW1lIGFuZCBpdCBzdGlsbCBmZWVscyBsaWtlIG5vdCBuZWFybHkgZW5vdWdoLiAKTGFzdCB5ZWFyJ3Mgd2lubmVyLCBQaGlsIEhlbGxtdXRoIEpyLiwgMjQsIGEgdGFsbCwgd2VlZHkgeW91dGggd2hvc2Ugc29mdCBmYWNlIHByb2plY3RzIGFuIHVuc2V0dGxpbmcgZXhwcmVzc2lvbiBvZiBzd2VldCBkZWNheSwganVrZXMgYW5kIHR3aXRjaGVzIHRvIHRoZSBtdXNpYyBvZiBoaXMgV2Fsa21hbi4gCkkgaGFkIHRvIGN5Y2xlIHRocm91Z2ggc28gbWFueSBkaWZmZXJlbnQgam9icyBzbyBmYXIgd2hpbGUgZ29pbmcgYmFjayB0byBzY2hvb2wuIEkgZG9uIG1pbmQgd29ya2luZyB0aHJvdWdoIHNjaG9vbCBhbmQgZXZlcnl0aGluZywgYnV0IGl0IGhhcmQgdG8gZmluZCBhIGpvYiB0aGF0IHdpbGwgcGF5IGZvciBzY2hvb2wvcmVudC9iaWxscy9mb29kIGFuZCBnaXZlIG1lIGEgc2NoZWR1bGUgdGhhdCBmaXRzIHdpdGggdGhlIGNsYXNzZXMgSSBoYXZlIHRvIHRha2UsIGVzcGVjaWFsbHkgdGhlIGZ1cnRoZXIgSSBnZXQgYWxvbmcgaW4gbXkgbWFqb3IgYW5kIGhhdmUgaGlnaGVyIGxldmVsIHJlcXVpcmVtZW50cyB0aGF0IG9ubHkgaGF2ZSBvbmUgc2VjdGlvbiBhdCB0aGUgbW9zdCBpbmNvbnZlbmllbnQgdGltZSBhbmQgdGhlIHByb2Zlc3NvciBoYXMgaXQgZGlhbGVkIGluIHRvIGJlIGF0IHRoYXQgZXhhY3QgdGltZSBldmVyeSBzZW1lc3Rlci4uIApTaGUgc2VlbXMgdG8gb25seSBwb3N0cyBvbmNlIGV2ZXJ5IGZldyBtb250aHMuIApJIHdhcyBqdXN0IHByYWN0aWNpbmcgbXkgaW5zdHJ1bWVudCBhZ2FpbiA6ICkuIApUaGUgUHVibGljIEhlYWx0aCBBZ2VuY3kgb2YgQ2FuYWRhIHNhaWQgdGhlIDE4IHBlb3BsZSB3aG8gZmVsbCBpbGwgaW4gY29ubmVjdGlvbiB0byB0aGUgb3V0YnJlYWsgaW4gQ2FuYWRhIHJlcG9ydGVkIHRoZWlyIGNhc2VzIGJldHdlZW4gbWlkIE9jdG9iZXIgYW5kIGVhcmx5IE5vdmVtYmVyLCBhbmQgb25lIGNvbXBsYWluZWQgb2Ygc3VmZmVyaW5nIGEgc2V2ZXJlIGNvbXBsaWNhdGlvbiByZWxhdGVkIHRvIGl0LgpUaGUgbWFpbiBwcm9ibGVtIHdpdGggdGhlIHVuaXQgaXMgdGhhdCB5b3UgaGF2ZSB0byBzdXBwbHkgYWxsIHlvdXIgb3duIGNvb2tpbmcgZ2VhciBldGMsIHNvIG9mZiB3ZSB0b2RkbGVkIHRvIHRoZSBodWdlIHZhcmlldHkgc3RvcmUgdG8gYnV5IHNvbWUgdW50ZW5zaWxzLCBwb3RzLCBjdXBzLCBwbGF0ZXMsIGV0YyAgIGl0IHdhcyBhIGJpdCBsaWtlIHNldHRpbmcgdXAgaG9tZSBhZ2Fpbi4gClRoZXJlZm9yZSwgeW91ciAkMTAsMDAwIGludmVzdG1lbnQgbmV0cyB5b3UgJDgsNDAwIGluIHByb2ZpdCAoJDE4LDQwMCBtaW51cyAkMTAsMDAwKS4gCkV2ZW4gaWYgeW91IG1hZGUgdGhlIG1vdmUsIHlvdSBwb3RlbnRpYWxseSBjb3VsZCBiZSBvbmUgb2YgdGhlIG9uZXMgd2hvIGVuZHMgdXAgbm90IGJlaW5nIGFibGUgdG8gbWFrZSBpdCBpbiB0aGUgbmV3IHRvdWdoZXIgb25saW5lIGNsaW1hdGUgKG5vdCBzYXlpbmcgdGhhdCB5b3UgYXJlIG9mIGNvdXJzZSBJIGNhbiBrbm93KS4gVGhlcmUgbWlnaHQgYmUgYSBsb3QgbW9yZSBtb25leSB0byBiZSBtYWRlIGZvciB5b3UgbGl2ZSwgYm90aCBub3cgYW5kIG92ZXIgdGhlIG5leHQgaGFuZGZ1bCBvZiB5ZWFycywgYXMgdGhlIG9ubGluZSBnYW1lcyB3aWxsIGdldCB0b3VnaGVyIGF0IGEgcXVpY2tlciBwYWNlIHRoYW4gdGhlIGxpdmUgZ2FtZXMuLiAKQnV0LCBsb3cgc3Rha2VzLCBjYWxsZWQgIm5vIGZvbGQgZW0iIHBva2VyLCBpcyBoYXJkIHRvIGJsdWZmLCB3aGVyZSBwZW9wbGUgYXJlIHBsYXlpbmcgZm9yIGp1c3QgYSBmZXcgZG9sbGFycywgdGhlIG1vbmV5IHJpc2tlZCBpcyB0b28gbG93LiAKSWwgYWNjZXB0ZSBkZSBkb25uZXIgbGVzIDYwICQgcG91ciBsZSBzZXJ2aWNlIGRlIGJhc2Ugc2FucyBleHRyYS4uIApUaGlzIHdhcyBodWdlIG5ld3MgYW5kIHRoZXJlIHdlcmUgc3RvcmllcyBhYm91dCBob3cgaXQgd2FzIGFsbCBmb3JjZWQgc2V4IGxhYm9yLiAKRnJvbSB0aGUgYmVnaW5uaW5nLCB0aG91Z2gsIGl0IHdhcyBvYnZpb3VzIHRoZSBwYWlyIHNoYXJlZCBhIGRlZXAgYW5kIG1lYW5pbmdmdWwgY29ubmVjdGlvbi4gCkl0IGFsd2F5cyBmZWx0IHVuZmFpciB0aGF0IHRoYXQgZ3JhbmRtb3RoZXIgbGl2ZWQgbG9uZ2VyIHRoYW4gbXkgb3RoZXIgZ3JhbmRtYSB3aGVuIHNoZSB3YXMgc28gbmVnYXRpdmUsIGJ1dCBJIGd1ZXNzIHRoYXQgaGFwcGVucy4gCkdldCByZWRkaXQgcHJlbWl1bUJlc3QgTm9uZmljdGlvbiBvZiAyMDE4IFJ1bm5lciBVcApCdXQgd2Fsa2luZyBpbXByb3ZlcyB5b3VyIG92ZXJhbGwgaGVhbHRoIGluIGFuIGV2ZW4gbW9yZSBpbXBvcnRhbnQgd2F5OiBJZiB5b3UgZG8gaXQgYnJpc2tseSAoYXQgYSByYXRlIG9mIGJldHdlZW4gdGhyZWUgYW5kIGZpdmUgbWlsZXMgcGVyIGhvdXIpIGFuZCBjb250aW51b3VzbHkgZm9yIGF0IGxlYXN0IDIwIHRvIDMwIG1pbnV0ZXMsIGl0IGJlY29tZXMgYW4gYWVyb2JpYyBleGVyY2lzZS4gCk9mZmljZXJzIHNhaWQgaW4gYm90aCBjYXNlcyB0aGF0IHRoZXkgd2VyZSByZXNwb25kaW5nIHRvIGNvbXBsYWludHMuIApUaGF0IG1pZ2h0IHNvdW5kIGxpa2UgYSBzdHVwaWQgcXVlc3Rpb24gYXQgZmlyc3QsIGJ1dCByZXdhdGNoaW5nIENhc2lubyBSb3lhbGUgZ290IG1lIHRoaW5raW5nLgpIaXN0b3JpY2FsbHkgd2UgaGF2ZSBlc3NlbnRpYWxseSBtYWRlIGFuIGF0dGVtcHQgdG8gcHJldGVuZCBpbnRlcnNleCBkb2Vzbid0IGV4aXN0LCBldmVuIG11dGlsYXRpbmcgZ2VuaXRhbGlhIGF0IGJpcnRoIHRvIGZvcmNlIGEgYmFieSBpbnRvIG9uZSBzZXggb3IgYW5vdGhlci4gCkZvZXMgYXJlIGNvdW50ZXJpbmcgd2l0aCB0aGUgYXJndW1lbnQgdGhhdCB0aGUgaW5jcmVhc2VkIG1hcmtldGluZyBidWRnZXQgaXNuIHdvcnRoIHRoZSBleHBhbnNpb24gb2YgZ2FtYmxpbmcuIFRoZSBwcm9wb3NhbCB3b3VsZCBhZGQgdGhlIHZpZGVvIGdhbWluZyB0ZXJtaW5hbHMgaW4gTG92ZWxhbmQsIENvbW1lcmNlIENpdHksIEF1cm9yYSwgQ29sb3JhZG8gU3ByaW5ncyBhbmQgUHVlYmxvLgpXaXRoIHRoaXMgbGFzdCBvcHRpb24gdGhlcmUgaXMgbm8gbGltaXQgdG8gdGhlIGFtb3VudCBvZiBtb25leSBZb3UgY2FuIHdpbiBwbGF5aW5nIGZyZWUgcG9rZXIgZ2FtZXMgb25saW5lLiAKQW5kIHRvbnMgb2YgYWR2aWNlIGFib3V0IHNob2UgY2hvaWNlcywgY2xvdGhlcyBjaG9pY2VzLCByYWNlIHBhY2Ugc3RyYXRlZ3ksIHdhdGNoaW5nIG91dCBmb3Igb3ZlcnVzZSBpbmp1cmllcywgaG93IG11Y2ggd2F0ZXIgdG8gZHJpbmssIHdoZXRoZXIgdG8gdXNlIGNhcmIgZ2VscywgaG93IHRvIHRyYWluIGZvciBoaWxscywgYW5kLCB5ZXMsIHdoYXQvd2hlbiB0byBlYXQgc28gYXMgdG8gYXZvaWQgbmVlZGluZyBiYXRocm9vbSBicmVha3MuIApFZGl0OiBBbHNvLCB0aGVyZSBpcyBrbm93IHdheSBvZiB0ZWxsaW5nIGlmIHRoZXJlIGFyZSBkYW5nZXJvdXMgY29udGFtaW5hdGVzIGluIHRoZSB3YXRlciBmcm9tIGEgcGhvdG8uIFlvdSB3aWxsIG5lZWQgdG8gaGF2ZSB0aGUgd2F0ZXIgc2FtcGxlZCBhbmQgdGVzdGVkIGJ5IGEgbGFiLiAKR2V0IFNvdW5kIG9mIGEga2V0dGxlIHdoaXN0bGluZyBvbiBhIHN0b3ZlLiBOaWNlIHRlYSBwb3Qgd2hpc3RsZSBzb3VuZC4gClRydW1wLCBhIGxvbmd0aW1lIGZyaWVuZCBvZiBLcmFmdCBhbmQgUGF0cmlvdHMgYWRtaXJlcixpcyBzZWVuIGxlYW5pbmdiYWNrIGluIGhpcyBjaGFpciBhbmQgc21pbGluZyB3aXRoIFlhbmcgYW5kIGFub3RoZXIgd29tYW4gd2hvIGFyZSBzZWF0ZWQgYXQgYSB0YWJsZSBiZWhpbmQgdGhlIHByZXNpZGVudGluIHRoZSBibHVycnkgcGhvdG8uLiAKRXZlcnlvbmUgd2hvIHdhcyBkb2luZyBxdW90ZXMgKHRlbiBvZiB1cykgaGFkIHRvIGhhdmUgdHdvIHF1b3RlcyBhbmQgaGUgbWl4ZWQgdXMgdXAgaW50byBncm91cHMgb2YgZml2ZSBhbmQgdG9sZCB1cyB0byBwaWNrIHF1b3RlcyBhbmQgbWl4IHVwIHdoYXQgb3JkZXIgd2Ugc2FpZCB0aGVtIGluLlNvIEkgYW0gZ29pbmcgd2l0aCB0aGUgZm9sbG93aW5nOihhKSAiQnV0IHRoZSBwcm9ibGVtIGlzIHRoYXQgd2hlbiBJIGdvIGFyb3VuZCBhbmQgc3BlYWsgb24gY2FtcHVzZXMsIEkgc3RpbGwgZG9uJ3QgZ2V0IHlvdW5nIG1lbiBzdGFuZGluZyB1cCBhbmQgc2F5aW5nLCAiSG93IGNhbiBJIGNvbWJpbmUgY2FyZWVyIGFuZCBmYW1pbHk/IiAgR2xvcmlhIFN0ZWluZW0uIEkgdGhpbmsgSSBhbSBnb2luZyB0byBhdHRlbXB0IGEgYml0IG9mIGEgZHVkZSB2b2ljZSBvbiB0aGUgbGFzdCBwYXJ0IG9mIHRoYXQgcXVvdGUuKGIpICJObyB3b21hbiBnZXRzIGFuIG9yZ2FzbSBmcm9tIHNoaW5pbmcgdGhlIGtpdGNoZW4gZmxvb3IuIiAgQmV0dHkgRnJpZWRhbi5NdWNoIHRvIG15IGRlbGlnaHQsIHdlIGFyZSBnb2luZyB0byBoYXZlIHRoZXNlIGludGVycHJldGVkIGluIHNpZ24gbGFuZ3VhZ2UgKHNxdWVlISEhKSwgc28gbm93IHByZXN1bWFibHkgZXZlcnlvbmUgZ2V0cyB0byBzZWUgd2hhdCAib3JnYXNtIiBpcyBpbiBzaWduIGxhbmd1YWdlIG5vdy4gU08gRVhDSVRFRC4gCk9obmUgZGllIHZpZWxlbiBFaW5zcHJjaGUgd3JlIGRhcyBBdXRvYmFobnByb2pla3QgamV0enQgd29obCBkdXJjaGdlZ2FuZ2VuIHVuZCB6dSBlaW5lbSBzcHRlcmVuIFplaXRwdW5rdCwgbmFjaCBTaWNoZXJzdGVsbHVuZyBkZXIgRmluYW56aWVydW5nLCBodHRlIGRhbm4gamVkZXJ6ZWl0IG1pdCBkZW0gQmF1IGJlZ29ubmVuIHdlcmRlbiBrbm5lbi4gCjQpIFRvIGdldCBhbiBpZGVhIG9uIHNwZWVkd29yayBidXkgdGhlIGJvb2sgQWR2YW5jZWQgTWFyYXRob25pbmcgYnkgUGV0ZSBQZml0emluZ2VyLiBEb24gbGV0IHRoZSB0aXRsZSBzY2FyZSB5b3UuIFdoaWxlIGxvdHMgb2YgdGhlIGJvb2sgaXMgZ2VhcmVkIHRvd2FyZHMgdGhlIG1vcmUgZXhwZXJpZW5jZWQgbWFyYXRob25lciwgdGhlcmUgaXMgbG90cyBvZiBpbmZvIGZvciB0aGUgZmlyc3QgdGltZXIuCkluIGZhY3QsIEdvZCBoYXMgYWxyZWFkeSBmb3JnaXZlbiBhbnkgc2luIHlvdSBtaWdodCBjb21taXQgaW4gdGhlIGZ1dHVyZS4gVGhhdCBkb2VzbiBtZWFuIHlvdSBjYW4gZG8gd2hhdGV2ZXIgeW91IGxpa2Ugd2l0aCBpbXB1bml0eS4gCkdvb2QgbHVjay4gCkN1YW5kbyBmaW5hbGl6YSB1biB0b3JuZW8gcG9kcnMgdmVyIHF1ZSBsYSBjdWVudGEgbnVuY2EgZGEgbGEgY2lmcmEgY29ycmVjdGEgcG9ycXVlIGFsZ3Vub3MgaGFicm4gYWdyZWdhZG8gZmljaGFzIHkgb3Ryb3MgbGFzIGhhYnJuIHJvYmFkbyBwYXJhIHV0aWxpemFybGFzIGVuIHByeGltb3MgdG9ybmVvcy4gRW4gYWxndW5vcyBjYXNvcyBsYXMgZGlmZXJlbmNpYXMgc3VlbGVuIHNlciBtdXkgaW1wb3J0YW50ZXMgZGViaWRvIGEgbGEgZmFsc2lmaWNhY2luLgpUaGUgbmFtZSBFcm5pZSBLb3ZhY3MgbWF5IG5vdCBiZSB3aWRlbHkgcmVjb2duaXphYmxlLCBidXQgaGlzIGJyYW5kIG9mIHRlbGV2aXNpb24gaHVtb3IgaW5zdGFudGx5IGlzOiBGYWtlIGNvbW1lcmNpYWxzLCBibGFja291dCBnYWdzLCBib2d1cyB0YWxrIHNob3dzIGFuZCBzYXRpcmUuIEV2ZW4gd2hlbiB2aWV3ZWQgdGhyb3VnaCBncmFpbnkgYmxhY2sgYW5kIHdoaXRlLCB0aGUgZ29uem8gdHJhaWwgaGUgYmxhemVkIGZvciAiTGF1Z2ggSW4sIiBNb250eSBQeXRob24sICJTYXR1cmRheSBOaWdodCBMaXZlIiBhbmQgSm9obm55IENhcnNvbiBhbmQgYWxsIGhpcyB3YW5uYWJlcyAgIGVzcGVjaWFsbHkgTkJDIGVyYSBEYXZpZCBMZXR0ZXJtYW4gICBpcyBwbGFpbiB0byBzZWUuIEJvcm4gSmFudWFyeSAyMywgMTkxOSwgaGlzIGRlYXRoIGF0IGFnZSA0MiBwcmVzZXJ2ZWQgaGlzIGxhcmdlbHkgdW5yZWFsaXplZCBnZW5pdXMgaW4gYW1iZXIsIGxlYXZpbmcgVFYgaGlzdG9yaWFucyB0byBnYXRoZXIgdGhlIGNydW1icy4uIApCYWxscGxheWVycyB3aXRoIG90aGVyIGJhbGxwbGF5ZXJzLiBJdCdzIG5vdCBzdXJwcmlzaW5nIHRoYXQgY3JpbWluYWxzIGdyYXZpdGF0ZSBiYWNrIHRvd2FyZCBvdGhlciBjcmltaW5hbHMuIApUaGUgbWV0YSBhbmFseXNpcyBzdHVkeSB3YXMgbGVkIGJ5IFByb2Zlc3NvciBEci4gR29yYW4gQmplbGFrb3ZpYy4KTXkgY2xpZW50IHdvdWxkIGxpa2UgdG8gbWVldCBoaW0gaW4gYSBjaGFyaXR5IGV4aGliaXRpb24gYm94aW5nIGJvdXQgaW4gUG9ydGxhbmQsIE9yZWdvbi4gCldlbGwgdGhlbiwgd2hhdCBkZXNpZ24gaW4gcG9rZXIgdGFibGUgY2xvdGggc2hvdWxkIHlvdSBzZWxlY3QgaW4gb3JkZXIgdG8gbWFrZSBhbiBhdHRyYWN0aXZlIHBva2VyIHJvb20/IFNpbXBseSBwdXQsIHRoZSBvbmUgdGhhdCB3aWxsIGdvIHRoZSBiZXN0IHdpdGggeW91ciByb29tJ3Mgb3ZlcmFsbCB0aGVtZS4gQW5kIHRoZXJlIGlzIHF1aXRlIGEgc2VsZWN0aW9uIGF2YWlsYWJsZSB0byB5b3UuCkkgaW1hZ2luZSB0ZWNobmlxdWUgd2lsbCBiZSBhbW9uZyB0aGUgZmlyc3QgdGhpbmdzIGhlIHdhbnRzIHRvIGFkZHJlc3MsIGJ1dCBubyBpZGVhLiAKU2V0IGluIHRoZSBzaGFkb3dzIG9mIHRoZSByZWQgcm9jayBjbGlmZnMgb2YgU25vdyBDYW55b24gU3RhdGUgUGFyaywgdGhpcyBmaXRuZXNzIGZvY3VzZWQgc3BhIHB1dHMgaGlraW5nIGZyb250IGFuZCBjZW50ZXIuIEd1ZXN0cyBjaG9vc2UgZnJvbSAzMCBkaWZmZXJlbnQgZ3VpZGVkIHRyZWtzIGVhY2ggd2Vlaywgc29tZSBvZiB3aGljaCBleHBsb3JlIG5lYXJieSBaaW9uIGFuZCBCcnljZSBDYW55b24gbmF0aW9uYWwgcGFya3MsIGFzIHdlbGwgYXMgdGhlIEdyYW5kIENhbnlvbiAoYWJvdXQgMTAwIG1pbGVzIGF3YXkpLiBBbiBhZHZlbnR1cmUgY29uY2llcmdlIGlzIG9uIGhhbmQgdG8gaGVscCBndWVzdHMgc2VsZWN0IHRoZSByaWdodCBkaWZmaWN1bHR5IGxldmVsOiBFeHBsb3JlciB0cmVrcyBjb25zaXN0IG9mIGxlaXN1cmVseSB3YWxrcyBpbiB0aGUgZm9vdGhpbGxzLCB3aGlsZSBFbmR1cmFuY2Ugb3V0aW5ncyBhcmUgcmVjb21tZW5kZWQgZm9yIGh1bWFuIGJpbGx5IGdvYXRzLi4gCkhvd2V2ZXIsIHRoaXMgaW4gaXRzZWxmIGlzIGEgYmlnIHJlZCBmbGFnIGRlcGVuZGluZyBvbiB3aGV0aGVyIG9yIG5vdCBWUE5zIGFyZSByZXF1aXJlZCBmb3IgdGhlIHBvc2l0aW9uLiAKT3VyIGNhdCBmaWd1cmVkIG91dCBob3cgdG8gdXNlIHRoZSBwcmludGVyIGFuZCB3b3VsZCBtYWtlIGJsYW5rIGNvcGllcyBhbmQgd291bGQgZ28gdGhyb3VnaCBlbnRpcmUgcmVhbXMgb2YgcGFwZXIuIE15IGRvZyB3b3VsZCBnbyBudXRzLi4gClRoZSBnYW1lIGlzIG9mdGVuIHVzZWQgYXMgYSBjaG9vc2luZyBtZXRob2QgaW4gYSB3YXkgc2ltaWxhciB0byBjb2luIGZsaXBwaW5nLCBkcmF3aW5nIHN0cmF3cywgb3IgdGhyb3dpbmcgZGljZS4gVW5saWtlIHRydWx5IHJhbmRvbSBzZWxlY3Rpb24gbWV0aG9kcywgaG93ZXZlciwgcm9jayBwYXBlciBzY2lzc29ycyBjYW4gYmUgcGxheWVkIHdpdGggYSBkZWdyZWUgb2Ygc2tpbGwgYnkgcmVjb2duaXppbmcgYW5kIGV4cGxvaXRpbmcgbm9uIHJhbmRvbSBiZWhhdmlvciBpbiBvcHBvbmVudHMuCldoYXQncyB3b3JrZWQgZm9yIHlvdXIgZmFtaWx5P0kgYW0gbG9va2luZyBmb3IgdGhlIGZ1bGwgZGF0YXNldCBvbiB0aGUgcmVjZW50IFdvcmxkIFNlcmllcyBvZiBQb2tlciBtYWluIGV2ZW50IGZpbmFsIHRhYmxlLiBJZGVhbGx5IHRoaXMgd291bGQgaW5jbHVkZSBmb2xkZWQgaGFuZHMsIHN0YWNrIHNpemVzLCBwb3Qgc2l6ZXMsIGJldHMsIGZsb3BzIGV0Yy4gClRoZSBtb3JlIHRoYW4gMTAwIFBpbGdyaW1zIHdobyBhcnJpdmVkIGF0IFBseW1vdXRoLCBNYXNzYWNodXNldHRzLCBvbiB0aGUgTWF5Zmxvd2VyLCBpbnN0aWxsZWQgaW4gb3VyIE5hdGlvbiBhIHN0cm9uZyBmYWl0aCBpbiBHb2QgdGhhdCBjb250aW51ZXMgdG8gYmUgYSBiZWFjb24gb2YgaG9wZSB0byBhbGwgQW1lcmljYW5zLiAKQ3VycmVudGx5LCBwb2tlciBmYWxsc2luIGEgZ3JheSBhcmVhIGFzIHRoZXJlIGFyZSBzdGlsbCBzb21lIG15dGhzIGFzc29jaWF0ZWQgd2l0aCB0aGVnYW1lIG9mIHNraWxsLiAKTGVmdCB0byBnbyBzdHVkeSBjdWxpbmFyeSBhdCBBdXN0aW4gYW5kIHRvb2sgaGVyIGJveWZyaWVuZCB3aXRoIGhlci4gClNpbWlsYXJseSwgd2hpbGUgZXZlcnkgaW5kaXZpZHVhbCBtYXR1cmVzIGF0IHRoZWlyIG93biByYXRlIGl0IHN0aWxsIGZhbGxzIHdpdGhpbiBhIG5vcm1hbCBkaXN0cmlidXRpb24sIHNvIHRoZSBtYWpvcml0eSBvZiBraWRzIGRvIHJvdWdobHkgbWF0Y2ggZWFjaCBvdGhlciBpbiB0ZXJtcyBvZiBzb2NpYWwsIHBoeXNpY2FsIGFuZCBjb2duaXRpdmUgZGV2ZWxvcG1lbnQuIFNvIHllcywgd2hpbGUgZ3JvdXBpbmcgc3R1ZGVudHMgYnkgYWdlIHJhdGhlciB0aGFuIGFiaWxpdHkgZG9lcyBuZWdhdGl2ZWx5IGFmZmVjdCBzdHVkZW50IGxlYXJuaW5nIGF0IHRoZSBoaWdoZXN0IGFuZCBsb3dlc3QgZW5kcyBvZiB0aGUgYWJpbGl0eSBjdXJ2ZSwgaXQgYWxzbyBtYXhpbWl6ZXMgZGV2ZWxvcG1lbnRhbCB1bmlmb3JtaXR5IHdoaWNoIHBvc2l0aXZlbHkgYWZmZWN0cyB0aGVpciBzb2NpYWwgZGV2ZWxvcG1lbnQgYW5kIHRoZWlyIGFiaWxpdHkgdG8gYm9uZCB3aXRoIG90aGVycyAoYW5kIHRvZ2V0aGVyIHRoZXNlIHRoaW5ncyBhcmUgZXF1YWxseSBpZiBub3QgbW9yZSBpbXBvcnRhbnQgdGhhbiBoYXJkIHNraWxsIGRldmVsb3BtZW50KS4gClRoZXNlIGluZGl2aWR1YWxzIHBhcnRpY2lwYXRlZCBpbiBhIHBhbmVsIGRpc2N1c3Npb24gb24gdGhlIGdlbmRlciBiYXNlZCBpbnZlc3RtZW50IHRoZXNpcyB0aGF0IHBhcnRpYWxseSBpbmZvcm1zIGZvdXIgQ2FuYWRpYW4gRVRGcywgaW5jbHVkaW5nIHRoZSBSQkMgVmlzaW9uIFdvbWVuJ3MgTGVhZGVyc2hpcCBNU0NJIENhbmFkYSBJbmRleCBFVEYgKC4gClRoZSBlYXNpZXN0IHdheSB0byBkbyB0aGlzIGlzIHRvIGZpcnN0IGNhbGN1bGF0ZSB0aGUgcHJvYmFiaWxpdHkgb2YgZHJhd2luZyBzcGFkZS9oZWFydC9jbHViL2RpYW1vbmQgaW4gb3JkZXIuIApUaGVyZSB3ZXJlIHNldmVuIGtpZHMgaW4gdGhlIGZhbWlseS4gCihUaGUgd2VzdGVybm1vc3Qgc3RhdGlvbiBvdmVyYWxsIHdvdWxkIGJlIHRoZSB3ZXN0ZXJubW9zdCBzdGF0aW9uIG9uIHRoZSBNZW5lbWVuIGNvbW11dGVyIHJhaWwgbGluZSAgIGJ1dCBub3QgTWVuZW1lbiBpdHNlbGYuKS4gCkJhc2ljYWxseSwgbXkgcXVlc3Rpb24gaXMgb25jZSB2aWxsYWluIGNhbGxzIHR1cm4gcmFpc2UgZG8gSSBnaXZlIHVwIG9yIGRvIEkgaGF2ZSBhbnkgZm9sZCBlcXVpdHkgaW4gZmlyaW5nIHRoZSByZXN0IG9mIG15IHN0YWNrIG9uIHRoZSB0dXJuPy4gClBhc3RvciB2cwpJIHdvdWxkIGFkZCAgIGdldCBwYXN0IHBhcGVycyBhbmQgd29yayB0aHJvdWdoIHRoZW0uIEFzIHlvdSBmb3VuZCBvdXQsIGtub3dpbmcgdGhlIGxhdyBpcyBub3QgdGhlIHNhbWUgYXMga25vd2luZyBob3cgdG8gYXBwbHkgdGhlIGxhdy4gCk1hdHQgY29uc3VsdGluZyBjb21wYW55IGhhcyAkMTAwLDAwMCBpbiB0aGUgYmFuay4gSWYgdGhhdCBtb25leSBpcyBpbnZlc3RlZCBhdCAzIHBlciBjZW50IG92ZXIgdGhlIHJhdGUgb2YgaW5mbGF0aW9uIGFuZCBoZWxkIGZvciB0aGUgbmV4dCAxNiB5ZWFycyB0byBoaXMgYWdlIDY1LCBpdCB3b3VsZCByaXNlIHRvICQxNTYsMjAwIGFuZCBiZSBjYXBhYmxlIG9mIHByb2R1Y2luZyBhIHBheW91dCBvZiBhbGwgY2FwaXRhbCBhbmQgaW5jb21lIGluIHRoZSBmb2xsb3dpbmcgNDAgeWVhcnMgb2YgJDYsNTYwIHBlciB5ZWFyLgpJIGFza2VkIG15IGZyaWVuZCB0byBkbyB0aGlzIHdoZW4gc2hlIHdhcyBiaWtpbmcgdG8gaGVyIGNhciBvbiBhIHJvYWQgd2l0aCBubyBiaWtlIGxhbmUgbGF0ZSBhdCBuaWdodC4gSSBmZWxsIGFzbGVlcCBiZWZvcmUgZ2V0dGluZyBhIHJlcGx5IGFuZCB3b2tlIHVwIGEgZmV3IGhvdXJzIGxhdGVyIHdpdGggbm8gcmVzcG9uc2UuIEkgdGV4dGVkIGhlciBhbmQgY2FsbGVkIGhlciBtdWx0aXBsZSB0aW1lcyB3aXRoIG5vIHJlc3BvbnNlLiBJIHRoZW4gd2FzIGNoZWNraW5nIG5ld3Mgd2Vic2l0ZXMgYW5kIGRpZG4ndCBzZWUgYSByZXBvcnQgYWJvdXQgYW4gYWNjaWRlbnQuIEkgdGV4dGVkIGhlciBtb20gKGF0IGFib3V0IDIgQU0pIGFza2luZyBpZiBzaGUgd2FzIGF0IGhlciBob3VzZS4gU2hlIHdhc24ndC4gU28gSSBoYWQgaGVyIG1vbSBjYWxsIGhlciBkYWQgdG8gc2VlIGlmIHNoZSB3YXMgYXQgaGlzIGhvdXNlLiBTaGUgd2FzLiBBbGwgb2YgdGhpcyB0byBmaWd1cmUgb3V0IHNoZSBoYWQgaGVyIHBob25lIG9uIHNpbGVudCBhbmQgZmVsbCBhc2xlZXAgcmlnaHQgd2hlbiBzaGUgZ290IGJhY2sgKGFuZCBzaGUgd2FzIG5vdCBkZWFkIG9uIHRoZSBzaWRlIG9mIHRoZSByb2FkIG9yIGFueXRoaW5nIGVsc2UgaW5zYW5lIG15IG1pbmQgY2FtZSB1cCB3aXRoKS4KV2UgZW5mb3JjZSBhIHN0YW5kYXJkIG9mIGNvbW1vbiBkZWNlbmN5IGFuZCBjaXZpbGl0eSBoZXJlLiBQbGVhc2UgYmUgcmVzcGVjdGZ1bCB0byBvdGhlcnMuIFBlcnNvbmFsIGF0dGFja3MsIGJpZ290cnksIGZpZ2h0aW5nIHdvcmRzLCBvdGhlcndpc2UgaW5hcHByb3ByaWF0ZSBiZWhhdmlvciBvciBjb250ZW50LCBjb21tZW50cyB0aGF0IGluc3VsdCBvciBkZW1lYW4gYSBzcGVjaWZpYyB1c2VyIG9yIGdyb3VwIG9mIHVzZXJzIHdpbGwgYmUgcmVtb3ZlZC4gUmVndWxhciBvciBlZ3JlZ2lvdXMgdmlvbGF0aW9ucyB3aWxsIHJlc3VsdCBpbiBhIGJhbi4KSWYgeW91IHdhbnQgc29tZXRoaW5nIHVuaXF1ZSwgeW91IGhhdmUgdG8gdGhpbmsgb3V0c2lkZSB0aGUgYm94LiAKSXQncyBmaW5lIGlmIHlvdSB3YW50IGl0IHRoYXQgd2F5LCBidXQgSSB0aGluayB0aGUgZnJhbWV3b3JrIGNhbiBhbHNvIGJlIGV4dGVuZGVkIGZvciB0aGluZ3MgbGlrZSB0aGF0LiAKVGhlcmUgaXMgbm8gbmVlZCB0byBzaG93IGhpcyBoYW5kIHNvIHRoZSBvdGhlciBwbGF5ZXJzIHdvdWxkbid0IGtub3cgaWYgaGUgd2FzIGp1c3QgYmx1ZmZpbmcgb3IgcmVhbGx5IGhhcyB0aGUgd2lubmluZyBoYW5kLiAoRnVsbCBBbnN3ZXIpLiAKU2hlIGFsc28gc2hvdWxkIGNoZWNrIHdpdGggaGVyIHByb3ZpZGVyIGJlZm9yZSB0YWtpbmcgYW55IG5ldyBtZWRpY2luZS4gClE5cyBRdWVlbiBhbmQgbmluZSwgc3VpdGVkLiAoVGhlICJzIiBtZWFucyBzdWl0ZWQsIHNvIGlmIGl0IHdlcmUgUTkgd2l0aG91dCB0aGUgInMsIiB0aGF0IGluZGljYXRlcyB0aGUgY2FyZHMgYXJlIG9mIGRpZmZlcmVudCBzdWl0cy4pClN4Y3M4NiAgMSBwb2ludCAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwpPZiBjb3Vyc2UsIGlmIHlvdSB1bmluc3RhbGwgYW5kIHRoZW4gcmVpbnN0YWxsIHRoZSBzb2Z0d2FyZSwgeW91IHdpbGwgaGF2ZSB0byBlbnRlciBpdCBhZ2FpbiBvbiB0aGF0IGluaXRpYWwgc3RhcnQuIApTdG9uZXdhbGwgSW50ZXJsYWtlIFNwZWN0YXRvciBBcmNoaXZlcwpUaGlzIGlzIG15IHRoaXJkIGJvb2suIEkgaGFkIG5vIGJhY2tncm91bmQgaW4gcG9rZXIgYW5kIG15IGtub3dsZWRnZSBjYW1lIGZyb20gUm91bmRlcnMuIApUaGV5IGhhZCBhIGpvaW50IGFjY291bnQgd2hlbiB0aGV5IGxpdmVkIHRvZ2V0aGVyLCBidXQgaXQgaGFzIHNpbmNlIGJlZW4gY2xvc2VkLiBBZ2FpbiwgdGhhbmtmdWxseS4gCldoaWxlIHRoZXJlIGFyZSBtYW55IHR5cGVzIG9mIHlvZ2EsIHRoZSBtYWpvcml0eSBvZiB0aGVtIHJlbWFpbiByb290ZWQgaW4gdGhlIHNhbWUgcHJhY3RpY2UuIApTaGUgd2FzIHRha2VuIHRvIEtlbmRhbGwgUmVnaW9uYWwgTWVkaWNhbCBDZW50ZXIsIHdoZXJlIHNoZSBkaWVkLiAKTm93LCB0aGlzIGlzIFBVUkVMWSBwZXJzb25hbCBwcmVmZXJlbmNlLCBidXQgSSB0aGluayBoYXZpbmcgTWF0dCBhbmQgdGhlICJiYXR0bGUgY2FtZXJhIiBhYm92ZS9iZWxvdyBvbmUgYW5vdGhlciB3b3VsZCBiZSBhIGJldHRlciBsYXlvdXQsIHNpbmNlIGl0IGNvbnZleXMgdGhlICJ0aGlzIHNpZGUgaXMgdGhlIGdhbWUsIHRoYXQgc2lkZSBpcyB0aGUgcGxheWVycyIuIEkgdW5kZXJzdGFuZCBpZiB0aGlzIHdhcyBhbiBpbnRlbnRpb25hbCBkZWNpc2lvbiB0byBoYXZlIHRoZSBsYXlvdXQgc2VlbXMgbGVzcyBsaWtlIENSLCBhbmQgbWF5YmUgaXQganVzdCB0aGUgbGF5b3V0IEkgdXNlZCB0bywgYnV0IGl0IGp1c3QgYSB0aG91Z2h0LkIvWCBEIEFEIDFlIGFuZCAyZSBhcmUgYWxsIGluIGEgdGllciB0b2dldGhlcjogY2xhc3NlcyBnZXQgdmFyaWFibGUgaGl0IGRpY2UsIHNvIFdhcnJpb3JzIGdldCBiZXR0ZXIgd2hpbGUgc3BlbGwgY2FzdGVycyBnZXQgd29yc2UsIGJ1dCB0aGVuIGFsc28geW91IGdldCB2YXJpYWJsZSB3ZWFwb24gZGFtYWdlIGRpY2UuIApVbmZvcnR1bmF0ZWx5IGhpcyB0ZXJtcyBhcmVuIHZlcnkgd2VsbCBkZWZpbmVkIHdhcyBoZSBhZGRyZXNzaW5nIHRoZSBjb2FsIHByb2R1Y3Rpb24gb2YgUHJ1c3NpYSBvciBFdXJvcGUgb3IgdGhlIHdvcmxkIHdoZW4gZGlzY3Vzc2luZyAidGhlIHF1YW50aXR5IG9mIGNvYWwgZHVnIGluIDE4NTciPyBXaGVuIHN0YXRpbmcgInRoZSBsYW5kcyBmcm9tIHdoaWNoIHRoZSBjb2FsIGlzIHByb2N1cmVkIiBtYXkgYmUgOCwwMDAgc3F1YXJlIG1pbGVzLCBkaWQgdGhhdCBtZWFuIGFuIDgsMDAwIHNxdWFyZSBtaWxlIHN3YXRoIG9mIEdlcm1hbnksIG9yIDgsMDAwIHNxdWFyZSBtaWxlcyBvZiBtaW5lZCBjb2FsIGluIEV1cm9wZSwgb3IgZXRjLj8gTmV3IEhhbXBzaGlyZSBpcyBhYm91dCA4LDAwMCBzcXVhcmUgbWlsZXMsIGFuZCB0aGUgZW50aXJlIFBydXNzaWFuIE1vbmFyY2h5IHdhcyBhYm91dCAxMTAsMDAwIHNxdWFyZSBtaWxlcywgc28gbWF5YmUgdGhhdCBtZWFudCBwYWNrZXRzIG9mIG1pbmluZyBzdXJmYWNlcyBoZXJlIGFuZCB0aGVyZT8gZG9uIGtub3cuIFRoaXMgb25lIHdhcyBhIHRhYnVsYXIgcHJlc2VudGF0aW9uIG9mIDM0IG1ldGFscywgbGlzdGVkIGFscGhhYmV0aWNhbGx5LCBhbmQgbGlzdGluZyB0aGUgeWVhciBvZiBkaXNjb3ZlcnkgYW5kIGRpc2NvdmVyeSBmaXJzdCB0aGF0IHdhcyB0aGUgdW51c3VhbCBwYXJ0LiAKSXRzIHN0aWxsIGJldHRlciB0aGFuIG5vdGhpbmcgd2hlbiBhbmFseXppbmcgaGFuZHMgYW5kIHVzdWFsbHkgZm9sZGluZyBhIGJpdCBtb3JlIGdldHMgeW91IGNsb3NlIGVub3VnaC4uIApXZSB0aGluayBpdHMgaGFyZCBmb3IgdXMgYW5kIGVhc3kgZm9yIHRoZW0gd2hlbiBpbiByZWFsaXR5IHRoZXkgaGF2ZSB0aGUgaGFyZGVyIGpvYiBvZiB0cnlpbmcgdG8gZmluZCB3aGF0IGlzIHJpZ2h0IGZvciB0aGVtLi4gClRoZSBzdG9yeSBvZiBLaW5nIFJhbWEgaW4gZm91ciB2b2x1bWVzIE1haGFiaGFyYXRhIGFsbCB2b2x1bWVzIGluIDEyIFBERiBmaWxlcyBUaGUgLiAKV2Ugd2lsbCBtYWtlIHRoZSBzYW1lIGZvdXIgcGVyIGNlbnQgcmV0dXJuIGFzc3VtcHRpb24gb24gYSBiYWxhbmNlZCBpbnZlc3RtZW50IHBvcnRmb2xpbyBhbmQgYXNzdW1lIHJlc2lkZW5jZSBpbiB0aGUgcHJvdmluY2Ugb2YgT250YXJpby4uIApJIHdhbnRlZCB0byBkaWN0YXRlIHdpdGggbXkgamFiIGFuZCBrZWVwIGhpbSBtaXNzaW5nLCBzbyBoZSBzZWNvbmQgZ3Vlc3Mgb24gdGhyb3dpbmcgaGlzIHBvd2VyLiBUaGUgbGVzcyBwb3dlciBzaG90cyBoZSB0aHJldyB0aGUgbGVzcyBwb3dlciBzaG90cyBoZSBjb3VsZCBoaXQgbWUgd2l0aC4uIApUaGVuIG1heWJlIHdlIGNhbiBzdGFydCBvdmVyIHdpdGggYSBjbGVhbiBzbGF0ZS4uIApUaGUgcHJvcG9zZWQgY29uY2Vzc2lvbiBjYW1lIGZyb20gRVUgQnJleGl0IG5lZ290aWF0b3IgTWljaGVsIEJhcm5pZXIganVzdCBkYXlzIGJlZm9yZSBhIHNlY29uZCBtZWFuaW5nZnVsIHZvdGUgb24gVGhlcmVzYSBNYXkgQnJleGl0IGRlYWwgaW4gdGhlIEhvdXNlIG9mIENvbW1vbnMuIApUaGUgb25seSBwcm9ibGVtPyB3ZSBhcmUgZnVkZHkgZHVkZHlzIGFuZCBkb250IGtub3cgYW55IGZvcmVwbGF5LiBXaGF0IHdvdWxkIHlvdSB1c2UgYXMgYmV0cyBpbiBzZXh1YWwgcG9rZXI/IFRoaXMgaXMgc28gYXdrd2FyZCB0byBhc2sgYW5kIEkgZG9udCB1c3VhbGx5IHB1dCBvdXIgcHJpdmF0ZSBzZXggbGl2ZXMgb24gdGhlIGludGVybmV0IGJ1dCBJIGhhcHBlbiB0byBrbm93IGEgZmV3IG9mIHlvdSB3aG8gd291bGQgZmluZCBlbmpveW1lbnQgb3V0IG9mIHRoaXMgcG9zdC4gCkZ1bGwgaG91c2UgZXhwZWN0ZWQgYXMgUG9rZXIgT3BlbiBwb3QgaGl0cyA0bQpFaXRoZXIgd2F5LCB0aGUgYm9udXMgaXMgZGV0ZXJtaW5lZCBieSB5b3VyIGNvbnRyaWJ1dGlvbnMsIHdoaWNoIGJyaW5ncyBvbmUgdG8gdGhlIG5leHQgcG9pbnQuIApVTyBUZWNobm9sb2d5IFRyYW5zZmVyIEluY29tZSBHcm93cyB0byBOZWFybHkKSSB3aWxsIHRyeSB0byBnaXZlIHNvbWUgYWR2aWNlICAgYnV0IEkgYW0gZ29pbmcgdG8gbGltaXQgaXQgdG8gUml2ZXIgZGVjaXNpb25zLiBPbiBhIHJpdmVyIHRoYXQgaW5jbHVkZXMgYSA0IGxpbmVyIChhbmQgYXNzdW1pbmcgbm8gZmx1c2ggYXZhaWwpLCB0aGUgb25seSB2YWx1ZSBiZXRzIHNob3VsZCBiZSBzdHJhaWdodHMuIFlvdSBzaG91bGQgbm90IGJldCBiZXR0aW5nIHNldHMgLyAyIHBhaXIgZm9yIHZhbHVlIHVubGVzcyB5b3UgaGF2ZSBzb21lIGNyYXp5IHJlYWQgYW5kIGFyZSBsb29raW5nIHRvIG1lcmdlLi4gCkdyZWV0aW5ncywgVGhpcyBpcyBhIGdyZWF0IHF1ZXN0aW9uLiAKTGlrZSBLYXRyaW5hLCB0aGVyZSB3ZXJlIHdhcm5pbmdzLiBUaGlzIHdhcyBub3QgbGFzdCBtb250aCB0aGF0IEdpbWVpbiB3YXMgd2FybmluZyBhYm91dCBleHBsb2RpbmcgIkFSTXM7IiBpdCB3YXMgQXByaWwgb2YgMjAwOC4gQW5kIGhlIHdhcyBub3QgYWxvbmUgaW4gd2FybmluZyB1cyBhYm91dCB0aGUgc3VicHJpbWUgbW9ydGdhZ2UgY3Jpc2lzIG9mIHRoZSBtaWRkbGUgYW5kIHVwcGVyIGNsYXNzZXMuIEJ1dCBsaWtlIE5ldyBPcmxlYW5zLCB0aGUgcGVvcGxlIHdobyB3ZXJlIHN1cHBvc2VkIHRvIGJlIG1ha2luZyBzdXJlIHdlIHdlcmUgc2FmZSAgd2hpY2ggaXMgdG8gc2F5LCB0aGUgZ292ZXJubWVudCAgd2VyZSBsb29raW5nIHRoZSBvdGhlciB3YXkuIFdoeT8gQmVjYXVzZSB0aGUgIm1hcmtldCB3b3VsZCBzb2x2ZSBldmVyeXRoaW5nLiIgVGhlIG1hcmtldCwgYWxzbyBrbm93biBhcyB1bmZldHRlcmVkIGdyZWVkLCB3YXMgdGhlIGh1cnJpY2FuZS4gTm93IGhvbWVvd25lcnMgYXJlIGJlaW5nIHRvbGQgdG8gc3VjayBpdCB1cCBhbmQgc29tZWhvdyBwYXkgb2ZmIHRoZSBtb3J0Z2FnZXMuIEJ1dCB0aGV5IGJlIGJldHRlciBvZmYgYWJhbmRvbmluZyB0aGVpciBkb29tZWQgaG9tZXMgYW5kIGZpbmRpbmcgc2hlbHRlciBlbHNld2hlcmUuClRoaXMgaXMgbm90IHRoZSBkcmlua2luZyBnYW1lIG9mIHRoZSBzYW1lIG5hbWUuIApHZXQgYW5zd2VycyB0byBvdXIgbW9zdCBjb21tb24gcXVlc3Rpb25zLCBwb2ludGVycyB0byBvdGhlciBzaXRlcyBhYm91dCB0aGUgbGF3LCBhbmQgaW5mb3JtYXRpb24gYWJvdXQgZmluZGluZyBhIGxhd3llciBvZiB5b3VyIG93biBhdCB0aGUgL3IvbGVnYWxhZHZpY2Ugd2lraS4KV2hlbiB0aGV5IHRlbGwgeW91LCB5b3UgY2FuIG1ha2UgdGhlIHByb2JsZW0gaGFyZGVyIGJ5IHNheWluZyB0aGF0IDMgZXh0cmEgZ3Vlc3RzIHdpbGwgYmUgY29taW5nLiBIb3cgc2hvdWxkIHlvdSBmaWd1cmUgaXQgb3V0IG5vdz8uIApNYW5hZ2UgYW5kIHN3aXRjaCBidWZmZXJzIHJhcGlkbHksIGFuZCBzcGxpdCBwYW5lcyB0byB3b3JrIG9uIHR3byBkaWZmZXJlbnQgdGhpbmdzIGF0IG9uY2UuLiAKRmFsbCBnZWxzdC5IYWIgYW4gZGVyIFN0ZWxsZSBhdWNoIGF1ZmdlaHJ0IHp1IGxlc2VuLiBEaWUgd2lpaWljaHRpZ2UgRnJhZ2UgIndpZXZpZWwgdm9yaGVyIiwgc3RhdHQgZ3J1bmRzdHpsaWNoIGFuIGVpbmVtIGdlc25kZXJlbiBMZWJlbiBpbnRlcmVzc2llcnQgenUgc2Vpbi5EYXMgbmVubnQgbWFuIGRhbm4gaW5kb2t0cmluaWVydCBvZGVyIHdlcmJldmVyYmxkZXQuV2VubnMgZ3V0IGx1ZnQgd2VyZGVuIGRlaW5lIEtpbmRlciBnYXIgbmljaHQgZXJzdCB2b2xsamhyaWcuIApJIHdhbnRlZCB0byByZWZyYWluIGZyb20gYSByYW50IG9uIGhlcmUgc2luY2UgcGVvcGxlIHdpbGwgZ3VmZmF3IGFuZCBzYXkgdGhlcmUgaXMgbm8gY3JpbWUgaW4gc3BlYWtpbmcgdGhlaXIgbWluZCwgYW5kIHRpbWUgZnJlZXppbmcgd291bGQgbm90IGhhcHBlbiBhbnl3YXlzLi4gCllvdSBoYXZlIGV2ZXJ5IHJpZ2h0IHRvIGJlIGhhdGVmdWwgYW5kIHRoaXJzdCBmb3IgYmxvb2QuIApUaGUgZnVuIGNhc2lubyBvZmZlcnMgYSBzcGFjaW91cyBnYW1pbmcgZmxvb3IgYW5kIG1vcmUgdGhhbiAzLDAwMCBzbG90IG1hY2hpbmVzLiBTaGUgaGFzIGEgQkZBIGluIHdyaXRpbmcgZnJvbSB0aGUgU2Nob29sIG9mIFZpc3VhbCBBcnRzLiAKRGl2aW5lIHNwZWxsIGNhc3RlcnMgYW5kIGRydWlkcyBkbyBub3QgbGVhcm4gc3BlbGxzIHRoZSBzYW1lIHdheS4gCkl0IHdhcyB3aGlsZSBzaGUgd2FzIGRlYWxpbmcgZmFybyB0aGF0IGEgZ2FtYmxlciBuYW1lZCBNYXJpb24gU3BlZXIgd2F0Y2hlZCBoZXIgY2xlYW4gb3V0IGEgbm90ZWQgZ2FtYmxlciBuYW1lZCBKYWNrIEhhcmRlc3R5Oi4gCiJXaGF0IGRvIHlvdSBleHBlY3Qgd2hlbiB5b3UgdGhyZWF0ZW4gdG8gYnJpbmcgMTAgbWlsbGlvbiBtb3RvcmN5Y2xlcyB0byB0YWtlIG92ZXIgdGhlIENhcGl0YWwsIiByb2FyZWQgQWZ0YWIgU2hlaWtoIHdobyBwZXJmb3JtZWQgYXMgbmlnaHQgd2F0Y2htYW4gaW4gdGhlIGFic2VuY2Ugb2Ygc2VuaW9yIGNvbGxlYWd1ZXMuIApMb3VfX0Nyb3cgIDExNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpXaXRoIHRoZSBoZWxwIG9mIGFsbCB0aG9zZSBpbiBhdHRlbmRhbmNlLCBHbmFzaFZlZ2FzIHJhaXNlZCAkMjAwLDAwMCAgIGEgd2hvcHBpbmcgJDUwLDAwMCBtb3JlIHRoYW4gdGhlIHByZXZpb3VzIHllYXIgICB3aXRoIGFsbCBwcm9jZWVkcyBiZW5lZml0aW5nIHRoZSBOYXNodmlsbGUgUHJlZGF0b3JzIEZvdW5kYXRpb24uCkZvY3VzIG9uIHRoZSBwcmVzZW50IGluc3RlYWQgb2YgdGhlIHBhc3QuIApUaGVyZSBhcmUgbm8gbWlyYWNsZXMuIApFYWNoIHN0YXRlIGFuZCBpbiBzb21lIHBsYWNlcywgZXZlbiB0aGUgY291bnR5IHlvdSBsaXZlIGluIGhhdmUgbGF3cyByZWdhcmRpbmcgZ2FtYmxpbmcuIAoiVGhpcyBtYXkgYmUgdGhlIHllYXIgdGhhdCB0aGUgc3RhcnMgYWxpZ24gSSBob3BlIHNvLCIgQmFydG9uIHRvbGQgdGhlIEFQIGluIGFkdmFuY2Ugb2YgYSBuZXdzIGNvbmZlcmVuY2UgaW4gV2FzaGluZ3Rvbi4KQXJub2xkIE1pbHN0ZWluLCBNRCwgTVBIIE1lcmNlciBIZWFsdGggYW5kIEJlbmVmaXRzLCBTYW4gRnJhbmNpc2NvCiJJdCB3aWxsIGJsdXIgdGhlIGxpbmVzIGZvciBvdXIgZ3Vlc3RzIGJldHdlZW4gZmFudGFzeSBhbmQgcmVhbGl0eSBhbmQgcHV0IHRoZW0gcmlnaHQgaW4gdGhlIG1pZGRsZSBvZiB0aGUgUmViZWxsaW9uLCIgSWdlciBzYWlkLiAiTm8gb25lIGhhcyBldmVyIGF0dGVtcHRlZCBhbnl0aGluZyBvZiB0aGlzIG1hZ25pdHVkZSBbdGhleSBhcmVdIGJ5IGZhciB0aGUgbGFyZ2VzdCBsYW5kcyB3ZSBldmVyIGJ1aWx0LiAKIkV2ZXJ5b25lIHdhcyB0aWdodCBvbiB0aGVpciBtYW4sIiBIYXl3YXJkIHNhaWQuICJJdCB3YXMgYWxtb3N0IGp1c3QgbGlrZSAxIG9uIDEuIFRoZSBsYW5lIGtpbmQgb2YgY2xlYXJlZCBvdXQgYW5kIEkgd2FzIGFibGUgdG8gbWFrZSB0aGUgbW92ZS4iQ2VsdGljczogSXJ2aW5nIHdhcyBtb3JlIHNvcmUgdGhhbiBleHBlY3RlZCBhZnRlciBiYW5naW5nIGhpcyB0aGlnaCB0aGUgcHJldmlvdXMgbmlnaHQgYXQgR29sZGVuIFN0YXRlIGFuZCB3YXMgaGVsZCBvdXQuIEJvc3RvbiBoYXMgd29uIHNldmVuIHN0cmFpZ2h0IGdhbWVzIHdpdGhvdXQgaXRzIGxlYWRpbmcgc2NvcmVyIGluIHRoZSBsaW5ldXAuICBUaGUgQ2VsdGljcyBoYWQganVzdCB0aHJlZSBvZmZlbnNpdmUgcmVib3VuZHMgb24gMzkgbWlzc2VzIGZyb20gdGhlIGZpZWxkIGFzIHRoZXkgcGxhY2VkIGEgcHJpb3JpdHkgb24gZ2V0dGluZyBiYWNrIG9uIGRlZmVuc2UgYWdhaW5zdCB0aGUgc3BlZWR5IEtpbmdzLgpPciBjbGljayBvbiBvbmUgb2YgdGhlIGZlYXR1cmVkIGFydGljbGVzIGZvciB0aGUgd2Vlay4gQWZ0ZXIgeW91J3ZlIHJlYWQgdGhhdCBvbmUsIHNjcm9sbCBkb3duICAgaGVyZSdzIHRoZSBob3QgdGlwICAgdG8gdGhlIGJvdHRvbSBvZiB0aGUgcGFnZS4gQ2xpY2sgb24gJyh0aGlzIHdlZWsncyBkYXRlKSBGcm9udCBQYWdlJy4gVGhpcyB3aWxsIG1hZ2ljYWxseSB0YWtlIHlvdSB0byB0aGUgUG9zdCBGcm9udCBQYWdlIGZvciB0aGUgd2Vlay4gClRoZSBib251cyBzdW1tYXJ5IG9mIHRoZSBGdWxsIFRpbHQgUG9rZXIgcmV2aWV3IHNheXMgeW91IGdldCBhIDEwMCUgdXAgdG8gJDYwMCBib251cy4gTWF5YmUgeW91J3ZlIHdhdGNoZWQgYSBmZXcgcG9rZXIgc2hvd3Mgb24gdGVsZXZpc2lvbiBhbmQgdGhlIG5hbWUgcmluZ3MgYSBiZWxsLCBzbyB5b3UgZGVjaWRlIHRvIGNsaWNrIG92ZXIgdG8gdGhlIGNvbXBsZXRlIEZ1bGwgVGlsdCByZXZpZXcuIFRoaXMgaXMgd2hlcmUgeW91IHJlYWxseSBuZWVkIHRvIHBheSBhdHRlbnRpb24uCiJUbyBiZSBob25lc3QsIGNob3Jlb2dyYXBoeSBpdHNlbGYgaXNuJ3QgYSB2ZXJ5IHRvdWdoIGpvYi4gClRpdGxlcyBtdXN0IGFjY3VyYXRlbHkgYW5kIHRydXRoZnVsbHkgcmVwcmVzZW50IHRoZSBjb250ZW50IG9mIHRoZSBzdWJtaXNzaW9uClRoZXkgYXJlIG9mdGVuIGVsZGVybHksIG1pZGRsZSBjbGFzcywgcnVyYWwgb3Igc3VidXJiYW4sIGFuZCBnZW5lcmFsbHkgd2FudCBhIHNtYWxsZXIgZ292ZXJubWVudCBwcmVzZW5jZSBpbiB0aGVpciBvd24gbGl2ZXMgKHRoZXkgZmFsbCBmb3IgdGhlICJicmFuZGluZyIgb2YgdGhlIEdPUCkuIApDaG9pY2Ugd2FzIGVhc3kgd2hlbiBkZWNpZGluZyBvbiB0aGUgQmVsbCA0MDdHWCBzYWlkIEtpbmcgQ2FzaW5vIFByZXNpZGVudCBMZW9uIFRzb3VrZXJuaWsuIEhhdmUgZmxvd24gQmVsbCBoZWxpY29wdGVycyBpbiB0aGUgcGFzdCwgYW5kIHRoZSBleGNlcHRpb25hbCBwZXJmb3JtYW5jZSBhbmQgc2VydmljZSBpbiBFdXJvcGUgaGF2ZSBtYWRlIG1lIGEgbG95YWwgY3VzdG9tZXIuIE9uIHRoZSBwcm92ZW4gcGVyZm9ybWFuY2UgYW5kIHJlbGlhYmlsaXR5IG9mIHRoZSBCZWxsIDQwNyBwbGF0Zm9ybSwgdGhlIEJlbGwgNDA3R1ggZmVhdHVyZXMgdGhlIEdhcm1pbiBHMTAwMEggZmxpZ2h0IGRlY2ssIHByb3ZpZGluZyBjcml0aWNhbCBmbGlnaHQgaW5mb3JtYXRpb24gYXQgYSBnbGFuY2UgZm9yIGdyZWF0ZXIgc2l0dWF0aW9uYWwgYXdhcmVuZXNzIGFuZCBpbmNyZWFzZWQgc2FmZXR5LiAKT3IgYW55d2hlcmUgbiBHb3JlbWUuIApDZSBwb3N0IGRib3JkZSBsZSBjYXMgZGUgQ2FzYXNub3ZhcyBjYXIgamUgdGVybWluZSBwYXIgdW4gY2hhcGl0cmUgc3VyIGxlIHByb2JsbWUgZGVzICJ0cmFuc2ZlcnRzIiBldCBqJ2FpIGR1IHJhYm9ubmVyIHVuIGxlY3RyaWNlIGxlIHRlbXBzIGRlIGNlIHBvc3QgY2FyIGNlIGNoYXBpdHJlIHRlcm1pbmFsIGxhIGNvbmNlcm5lIGV0IGplIHRpZW5zICBjZSBxdSdlbGxlIGxlIGxpc2UuIAoiQnV0IHlvdSdyZSBYIiBjb21tZW50cywgd2hldGhlciBYIGlzICJhbHJlYWR5IHNraW5ueSwiICJiZWF1dGlmdWwsIiAiZG9uJ3QgbG9vayBsaWtlIHlvdSBoYXZlIGFuIGVhdGluZyBkaXNvcmRlciwiIGV0Yy4gCkJlZm9yZSB3ZSBiZWdpbiwgSSdsbCBzdGF0ZSB0aGUgb2J2aW91cyBhbmQgc3VnZ2VzdCB5b3UgZ2V0IHNvbWUgaGlnaCBxdWFsaXR5IHBva2VyIGNoaXBzLiBQZXJzb25hbGx5LCBJIHByZWZlciBtZWRpdW0gaGVhdnksIGNsYXkgcG9rZXIgY2hpcHMuIApBcyBhIHZpc3VhbCBwZXJzb24sIEkgYXBwcmVjaWF0ZWQgdGhlIGFsdGFycyAgIGFuZCB0aGUgaW50ZW50aW9uIGFuZCB0aG91Z2h0ZnVsbmVzcyB0aGF0IExhd3JlbmNlIHB1dCBiZWhpbmQgdGhlbS4KSSBoYXZlIGNocm9uaWMgcGFpbi4gCkRldmVsb3BlZCBhcyBhIGNvbXByb21pc2UgbWVhc3VyZSBiYWNrIGluIDIwMDcsIEMzIGJsZW5kcyBhIHZlcnkgcm91Z2ggZXN0aW1hdGUgb2YgYXZlcmFnZSBjb21tZXJjaWFsIHJhdGluZ3Mgd2l0aCB0aHJlZSBkYXlzIG9mIHRpbWUgc2hpZnRlZCB2aWV3aW5nOyBhcyBzdWNoLCBpdCBvZmZlcnMgbmV0d29ya3MsIGJ1eWVycyBhbmQgYWR2ZXJ0aXNlcnMgdGhlIGJlc3QgYXBwcm94aW1hdGlvbiBvZiBhY3R1YWwgYWQgZGVsaXZlcmllcy4gCkFKIGJlYXRzIG91dCBKMTAgKGhpZ2ggY2FyZCkuIEkgY2FuIGV2ZW4gaW1hZ2luZSB0aGUgaWRpb3QgaGFuZHMgeW91IHBsYXlpbmcgZm9yIHRoaXMgdHlwZSBvZiBoYW5kIHRvIGdvIHRvIHNob3dkb3duIHdpdGggYW55IGFtb3VudCBvZiByZWd1bGFyaXR5LiBJbiBhIHBva2VyIGhhbmQgbm90IGZpbGxlZCB3aXRoIGRvbmtleXMsIGVpdGhlciB5b3Ugd2luIHRoZSBibGluZHMgb3IgbWF5YmUgYSBzaW5nbGUgcHJvYmUgYmV0LiBMZW1tZSBndWVzcyB0aG91Z2gsIHlvdSBjYWxsZWQgaGltIGRvd24gYmVjYXVzZSB5b3UganVzdCAia05lVyBoRSB3QXMgQmxVZkZpTmc/IiBJZiB0aGlzIGtpbmQgb2Ygc2hvd2Rvd24gb2NjdXJyZWQgd2l0aCBhbnkgYW1vdW50IG9mIHJlZ3VsYXJpdHksIEkgYmV0IG1vbmV5IHlvdSBtYWRlIGhvcnJpYmxlIGNhbGwgZG93bnMgYW5kIGp1c3Qgc2xhdGhlcmVkIHRoYXQgY29uZmlybWF0aW9uIGJpYXMgYWxsIG92ZXIgeW91cnNlbGYgd2hpbGUgcHJvamVjdGluZyB0aGF0IHNhbWUgYmlhcyBvbiB0aGUgZ3V5IHdobyBtYWRlIGEgZ28gb2YgaXQgd2l0aCBhIGRlY2VudCBibHVmZi4KSGVyIHRpbWUgbm93IGlzIHNwZW50IGRyaWZ0aW5nIGFyb3VuZCB0aGUgY3J1bWJsaW5nIGVtcGlyZSwgTGFkeSBIYXZlcnNoYW0gc3R5bGUsIHJlY291bnRpbmcgdGhlIGRheXMgb2Ygb2xkLiAKSXQgbWFrZXMgeW91IHNlZW0gaW5zZWN1cmUuIEZ1cnRoZXJtb3JlLCBpZiB5b3UncmUgaW5zaW51YXRpbmcgdGhhdCBhcnRpc3RzIGRlc2VydmUgdG8gZ2V0IHBhaWQgZm9yIGNyZWF0aW5nIGFueXRoaW5nIHRoYXQncyBhIG1vcmUgZW50aXRsZWQgYXR0aXR1ZGUgdGhhbiB0aGUgcGVvcGxlIHRvcnJlbnRpbmcgdGhlIGFydC4gClRoZSBkdWRlIHdhYSB3YXMgc2NyZWFtaW5nIGZvciBoZWxwLCBhbmQgaGlzIGJyb3RoZXIgd2FzIGluIHRoZSBvdGhlciByb29tLCBidXQgYnkgdGhlIHRpbWUgaGlzIGJyb3RoZXIgY2FtZSwgaXQgd2FzIHRvbyBsYXRlIHNhdyBoaW0gZ2V0IHN3YWxsb3dlZCB1cC4gClRoZSB0aXRsZSBvZiBhbGwgc3VibWlzc2lvbnMgbmVlZHMgdG8gbWF0Y2ggdGhlIGFydGljbGUgaGVhZGxpbmUgZXhhY3RseS4gQ29weSBhbmQgcGFzdGUgZnJvbSB0aGUgbWFpbiBoZWFkbGluZSBvbmx5LCBkbyBub3QgaW5jbHVkZSBhbnl0aGluZyBiZXlvbmQgdGhlIHByaW1hcnkgaGVhZGxpbmUgc3VjaCBhcyBieWxpbmVycywgc3VidGl0bGVzLCBmbGF2b3IgdGV4dCwgcXVvdGVzIGZyb20gdGhlIGFydGljbGUsIG5ld3Mgb3V0bGV0LCBsb2NhdGlvbiwgY3Jvc3MgcG9zdCB0YWdzLCAodmlkZW8pIHRhZ3MsIGFuZCBzbyBvbi4gRG8gbm90IHVzZSB0aGUgInN1Z2dlc3QgdGl0bGUiIG9wdGlvbiBmb3IgcG9zdGluZyBhcyBpdCBvZnRlbiBkb2VzIG5vdCBtYXRjaCB0aGUgaGVhZGxpbmUuIEFzIGEgbWF0dGVyIG9mIGZhaXJuZXNzLCBhbnkgc3VibWlzc2lvbiB3aXRoIGFuIGFsdGVyZWQgdGl0bGUgd2lsbCBiZSByZW1vdmVkLiBUaGUgb25seSBleGNlcHRpb24gaXMgdGhhdCwgaWYgYW4gYXJ0aWNsZSBoYXMgYSB0aXRsZSBpbiBhbGwgY2FwcywgeW91IG1heSBjaGFuZ2UgdGhlIGNhcGl0YWxpemF0aW9uIHRvIHRpdGxlIGNhc2UsIGJ1dCBldmVyeXRoaW5nIGVsc2UgbXVzdCByZW1haW4gdGhlIHNhbWUuCllvdSBoYXZlIHRvIHNlZWsgdGhlbSBvdXQuIEFuZCBzdGFydCBlYXJseSEgSSBkZWYgcmVjb21tZW5kIHN0YXJ0aW5nIHRvIGludGVybiBhcyBhIHNvcGhvbW9yZS5JdCB2ZXJ5IGVhc3kgdG8gZG91YmxlIG1ham9yIGluIHRoZSBidXNpbmVzcyBzY2hvb2wgYmMgeW91ciBjb3JlIGJ1c2luZXNzIGNsYXNzZXMgYXJlIHRoZSBzYW1lLiAKSG93IG1hbnkgcGVvcGxlIGRvIHlvdSBuZWVkIHRvIHBsYXkgcG9rZXI/CksydG9ndGJsICAyIHBvaW50cyAgc3VibWl0dGVkIDEyIGRheXMgYWdvCkl0IHJlYWxseSBoZWxwcyB0byBjaGFuZ2UgdXAgeW91ciBwbGF5c3R5bGUgYXQgdGhlIHRhYmxlLCBhbHNvLiBHZXQgYSByZXB1dGF0aW9uIGZvciBiZWluZyByYXNoLCBnZXQgY2F1Z2h0IGJsdWZmaW5nIG9uY2Ugb3IgdHdpY2UuIApPbmxpbmUgUG9rZXIgYW5kIGFkcmVuYWxpbmUgcnVzaCAgIGhlbHAgcGxlYXNlLiBJbSB3aWRlIGF3YWtlLiBBdCA2cG0gSSBzdGFydGVkIGEgdG91cm5hbWVudCB0aGF0IEkgbWFuYWdlZCB0byBnZXQgcXVpdGUgZmFyIGluIGFuZCBwbGF5ZWQgZm9yIDUgaG91cnMuIApUaGVyZSBhbHNvIHRoZSBsZXNzIHdlbGwga25vd24gY2FyaWNhdHVyZSBtdXNldW0gY2FyaWNhdHVyYSByaWdodCBieSB0aGUgY2VudHJhbCBzdGF0aW9uLgpUaGUgcGxhY2VzIHdoZXJlIHN1Y2ggYWN0aXZpdHkgaXMgbm90IHNhbmN0aW9uZWQgcHV0cyBvbmUgaW4gZGFuZ2VyIG9mIHByb3NlY3V0aW9uIGhvd2V2ZXIuIApCeSBjb250cmFzdCwgSW5zdWxhciBDZWx0aWMgbGFuZ3VhZ2VzIGRldmVsb3BlZCBhIHN5c3RlbSBvZiBpbml0aWFsIG11dGF0aW9uIHRoYXQgaXMgY29tcGxldGVseSBhYnNlbnQgaW4gQ29udGluZW50YWwgbGFuZ3VhZ2VzLCBhIHN0cmljdCB2ZXJiIHN1YmplY3Qgb2JqZWN0IHdvcmQgb3JkZXIgKGluIGNvbnRyYXN0IHRvIEdhdWxpc2ggc3ViamVjdCB2ZXJiIG9iamVjdCAgIHRobyB0aGlzIGlzIGxlc3MgaW1wb3J0YW50IGluIEdhdWxpc2ggYXMgaXQgcmVsaWVzIG1vcmUgb24gY2FzZSBpbmZsZWN0aW9uKSBhbmQgYSBsb3NzIG9yIHNpbXBsaWZpY2F0aW9uIG9mIGNhc2UgaW5mbGVjdGlvbi4gCk9mIGNvdXJzZSwgdGhlIGZhY3QgdGhhdCBWZXJhIHdlbnQgdG8gdGhlIHBvbGljZSBhYm91dCBpdCBhbmQgdGhlbiBhIGZldyBkYXlzIGxhdGVyIHRvbGQgdGhlIHBvbGljZSBoZSB3YXMgcHJldHR5IHN1cmUgaGUgaGFkIGJlZW4gZHVwZWQgYW5kIG5vbmUgb2YgaXQgd2FzIHRydWUgaXMgTk9UIHRoZSBzdG9yeS4gVGhlIHN0b3J5IGlzIHRoYXQgQUNPUk4gZW1wbG95ZWVzIGFyZSBydW5uaW5nIHByb3N0aXR1dGlvbiBhbmQgaHVtYW4gc211Z2dsaW5nIHJpbmdzLiAKMy4xIFlvdSBzaGFsbCBub3QgdXBsb2FkIHRvLCBvciBkaXN0cmlidXRlIG9yIG90aGVyd2lzZSBwdWJsaXNoIG9uIHRvIHRoZSBTZXJ2aWNlcyBhbnkgbGliZWxvdXMsIGRlZmFtYXRvcnksIG9ic2NlbmUsIHBvcm5vZ3JhcGhpYywgYWJ1c2l2ZSwgb3Igb3RoZXJ3aXNlIGlsbGVnYWwgbWF0ZXJpYWwuIEJlIGNvdXJ0ZW91cy4gWW91IGFncmVlIHRoYXQgeW91IHdpbGwgbm90IHRocmVhdGVuIG9yIHZlcmJhbGx5IGFidXNlIG90aGVyIE1lbWJlcnMsIHVzZSBkZWZhbWF0b3J5IGxhbmd1YWdlLCBvciBkZWxpYmVyYXRlbHkgZGlzcnVwdCBkaXNjdXNzaW9ucyB3aXRoIHJlcGV0aXRpdmUgbWVzc2FnZXMsIG1lYW5pbmdsZXNzIG1lc3NhZ2VzIG9yICJzcGFtLiIuIApZZWFoLCBpayB2b2xnIGRlemUgc29hcCBhbCBlZW4gdGlqZGplLCBtYWFyIGFscyBqZSBkaXQgc29vcnQgZGluZ2VuIGxlZXN0IGRhbiBkZW5rIGlrIHRvY2ggZGF0IGRlIEJyYW5kd2VlciBtYW5uZW4gaHVuICJwcml2aWxlZ2VzIiB0ZXJlY2h0IGVuaWd6aW5zIGFhbmdldGFzdCB6aWVuLiBXYXQgaWsgd2VsIGludGVyZXNzYW50IHZpbmQgaXMgZGF0IGVyIGVlbiBlbm9ybWUgaG9ldmVlbGhlaWQgb3BoZWYgcm9uZG9tIFNjaGFhcCBpcyAgIG1hYXIgaGlqIHRvY2ggbm9nIGluIGZ1bmN0aWUgaXMgICBkdXMgZGF0IGJldGVrZW5kIGRhdCBoaWogaW4gZGUgb2dlbiB2YW4gYmlqdi4gZGUgR2VtZWVudGUgdG9jaCBnb2VkIHdlcmsgdmVycmljaHQ/IEVyIGludGVyZXNzYW50IHZvb3Igdm9vciBlZW4gSUFNQSwgYWxzIGVyIHRvZXZhbGxpZyBlZW4gQW1zdGVyZGFtc2UgYnJhbmR3ZWVyIG1hbiBvcCByZWRkaXQgeml0IGRpZSBlZW4gb25hZmhhbmtlbGlqa2UgaW5zaWRlIHZpZXcga2FuIGdldmVuLgpEb24ndCBiZSBhZnJhaWQgb2YgdGhlIGZhdC4gCkluIHRoZSA5MHMgTWljaGFlbCBKb3JkYW4gbWFya2V0ZWQgaGltc2VsZiBhcyB0aGUgInJvbGUgbW9kZWwiIGJhc2tldGJhbGwgcGxheWVyIGZvciBraWRzIHdoaWxlIENoYXJsZXMgQmFya2xleSwgd2hvIHdhcyBraW5kIG9mIGEgdHJvdWJsZW1ha2VyLCBmYW1vdXNseSB0b2xkIGtpZHMgaGUgd2FzICJub3QgdGhlaXIgcm9sZSBtb2RlbCIuCkhvdyBUbyBBcHBseSBhIFBhcmFmZmluIEZhY2lhbApVbmxlc3MgeW91J3JlIG5ldyB0byBjYXJkIGdhbWVzIG9yIHN0cmF0ZWd5IGdhbWVzIGluIGdlbmVyYWwsIEkgc3VzcGVjdCBTdGltaGFjayB3b24ndCBiZSB3aGF0IHlvdSdyZSBsb29raW5nIGZvciBJIHRoaW5rIHRoZSB3cml0ZSB1cHMgbWFrZSByZWxhdGl2ZWx5IHNpbXBsZSwgaW50dWl0aXZlIGFuYWx5c2VzLiBJdCdzIGEgZ3JlYXQgcmVzb3VyY2UgaWYgeW91J3JlIGp1c3Qgc3RhcnRpbmcgdG8gdGhpbmsgYWJvdXQgc29tZSBvZiBOZXRydW5uZXIncyBzdHJhdGVnaWMgY29tcGxleGl0eSwgYnV0IG90aGVyd2lzZSB5b3UgbWF5IGJlIGRpc2FwcG9pbnRlZC4uIApUaGUgaW5hdWd1cmFsIEpvaG4gYW5kIEtpbWJlcmx5IENsYXJrIFJ1biB3aWxsIHRha2Ugb2ZmIGZyb20gdGhlIEJhcmJhcmlhbnMgY2x1YmhvdXNlIGF0IDE1MjcwIENhc3MgVG93bnNoaXAgUm9hZCAyMTUgYXQgbm9vbiBTYXR1cmRheS4gCldobyBjYXJlcyBpZiBoZSBpcyByaWdodCBvciB3cm9uZywgaGUgaW50ZXJlc3RpbmcgYW5kIGhlIHVzdWFsbHkgZmFpcmx5IGhvbmVzdCB3aXRoIGhpcyBvcGluaW9ucy4gCkRlc3BpdGUgdGhyZWUgZGlmZmVyZW50IHBlb3BsZSBmcm9udGluZyB0aGUgYmFuZCBvdmVyIHRoZSBzcGFuIG9mIGRlY2FkZXMsIHRoZXJlIGlzIGEgY2VydGFpbiBteXN0ZXJpb3VzLCAib3RoZXIgd29ybGRseSIgc291bmQgdGhhdCBoYXVudHMgYWxsIHRoZSBiYW5kcyB3b3JrLiAKU2hlIGRvZXNuIGhhdmUgYSBjaG9pY2UgaW4gdGhpcyBzaXR1YXRpb24uIEV2ZW4gaWYgYXMgb3V0c2lkZXJzIGl0IHNlZW1zIGxpa2Ugc2hlIGRvZXMuIHNoZSBkb2VzbiBUaGUgZmFtaWx5IGFuZCBjdWx0dXJhbCBwcmVzc3VyZSBpcyB0b28gbXVjaC4gSSBrbm93IHNvIG1hbnkgYWR1bHRzIHdobyBhcmUgb3V0cmlnaHQgYWJ1c2VkIGJ5IHRoZWlyIHBhcmVudHMsIGFuZCB0aGV5IHdpbGwgc3RpbGwgbmV2ZXIgbGVhdmUgdGhlbS4gVGhleSBjYW4gZXZlbiBzZWUgdGhlIGFidXNlIGZvciB3aGF0IGl0IGlzLiBpdCBqdXN0IG5vcm1hbC4KVmFzZWxpbmUgSW50ZW5zaXZlIENhcmUgRGVlcCBNb2lzdHVyZSArIDQgZHJvcHMgcm9zZWhpcCBvaWwgKFByZXR0eSBtdWNoIGV2ZXJ5IG5pZ2h0LiBJZiBJIHNraXAgdGhpcyBtb2lzdHVyaXplciwgSSBhZGQgdGhlIHJvc2VoaXAgb2lsIHRvIHRoZSBMRykKSkYgUHRhayBTY2llbmNlIEJvb2tzIDIzMTgKMSBub3RjaCBkb3duIGZyb20gInRvcCIsIGFzIHRoZSAidG9wIiBpcyB1c3VhbGx5IHRoZSBzYW1lIHRoaW5nIHdpdGggYSBmYW5jaWVyIGxhYmVsLiAKSSB3YXMgOCwgYW5kIGNhbid0IHN0cmVzcyBob3cgbG91ZCBhbmQgdW51c3VhbCB0aGUgbm9pc2Ugd2FzLiAKQ2UgbWFzdGVyIHMnaW5zY3JpdCBkYW5zIGNlcyByZmxleGlvbnMgZXQgY2VzIHZvbHV0aW9ucy4uIApEYW5keSBsaWVzIHRvIG9idGFpbiB0aGUgcHJpc29uZXIuIFRoaXMgYWxsIHNlZW1zIGxpa2UgaXQgKGluIGEgcm91bmRhYm91dCwgdW5rbm93aW5nIHdheSkgdG8gaGVscCBMeW1vbmQuIApCdXQgT1AgZGVmaW5pdGVseSBuZWVkcyB0byB3b3JkIGl0IGNvcnJlY3RseS4gTm90IHN1cmUgaG93IEkgZW5kZWQgdXAgbWFraW5nIHRoaXMgc3VjaCBhIGxvbmcgc3RhdGVtZW50LiAKVGhlIHF1YWxpdHkgb2YgcGVvcGxlJ3MgY2FyZHMgKGJsdWZmL3NlbWkgYmx1ZmYvcmVhc29uYWJsZSBoYW5kKSB3aGVuIHRoZXkgY2FsbCBnaXZlcyBvdGhlciBwbGF5ZXJzIGFuIGluc2lnaHQgaW50byB0aGVpciBnYW1lLiBJIHRoZXJlZm9yZSBjb25zaWRlciBpdCB2ZXJ5IHF1ZXN0aW9uYWJsZSBnYW1lc21hbnNoaXAgdG8gY2FsbCBhbmQgdGhlbiBub3Qgc2hvdyBjYXJkcy4uIApZb3VyIG9ubGluZSBwb2tlciBjYWxjdWxhdG9yIGlzIHByb2JhYmx5IHRoZSBiZXN0IGludGVybmV0IGZyaWVuZCB5b3UgY291bGQgZXZlciBoYXZlLCBidXQgYXMgd2l0aCBtb3N0IGZyaWVuZHMsIHNvbWV0aW1lcyB5b3UgaGF2ZSB0byB1c2UgeW91ciBvd24gYmV0dGVyIGp1ZGdtZW50LiBZb3Ugc2VlLCB0aGUgbWFnaWMgb2YgdXNpbmcgYW4gb25saW5lIHBva2VyIGNhbGN1bGF0b3Iga2VlcHMgeW91IGluIGNoZWNrIG1vcmUgb2Z0ZW4gdGhhbiB5b3UgY2FuIGtlZXAgdHJhY2sgb2YsIGJ1dCB0aGVyZSBhcmUgY2VydGFpbiBzaXR1YXRpb25zIHdoZXJlIHlvdXIgcG9rZXIgY2FsY3VsYXRvciBNVVNUIGJlIHZldG9lZC4gWWVzLCBJIHdyb3RlIE1VU1QhLiAKQXMgYSByZXN1bHQsIHBldCBqb2JzIGZvciBhbmltYWwgY2FyZSBhbmQgc2VydmljZSB3b3JrZXJzIGFyZSBleHBlY3RlZCB0byBvdXRwYWNlIGpvYnMgaW4gb3RoZXIgc2VjdG9ycyBhbmQgZ3JvdyBieSAyMSBwZXJjZW50IGZyb20gMjAwOCB0byAyMDE4LCBhY2NvcmRpbmcgdG8gdGhlIEJ1cmVhdSBvZiBMYWJvciBTdGF0aXN0aWNzLgpCYXNpY2FsbHkgbGlrZSwgd2hhdCB3b3VsZCB0aGUgd2FybmluZyBzaWducyBsb29rIGxpa2Ugb3IgYmUgaWYgTEFPUCByb3N5IHZlcnNpb24gaXNuIGFjdHVhbGx5IHRoZSBjYXNlPyBXaGF0IGFyZSB0aGluZ3MgTEFPUCBtaWdodCBiZSBzdHJ1Z2dsaW5nIHdpdGgvdGhlaXIgInJlbGF0aW9uc2hpcCIgc3RydWdnbGluZyB3aXRoIGFuZCB3aGF0IG1pZ2h0IHRoYXQgbG9vayBsaWtlLCBldGMuIApTb21lIG9mIG91ciBmYW1pbHkgaXMgY2hyb25pY2FsbHkgbGF0ZSBhbmQgbGFzdCBtaW51dGUgcGxhbm5lcnMuIApXaGljaCBpcyBqdXN0IHNvIHNhZC4gClVzZXJzIGluIHRoZSBFdXJvcGVhbiBFY29ub21pYyBBcmVhIGhhdmUgdGhlIHJpZ2h0IHRvIHJlcXVlc3QgYWNjZXNzIHRvLCByZWN0aWZpY2F0aW9uIG9mLCBvciBlcmFzdXJlIG9mIHRoZWlyIHBlcnNvbmFsIGRhdGE7IHRvIGRhdGEgcG9ydGFiaWxpdHkgaW4gY2VydGFpbiBjaXJjdW1zdGFuY2VzOyB0byByZXF1ZXN0IHJlc3RyaWN0aW9uIG9mIHByb2Nlc3Npbmc7IHRvIG9iamVjdCB0byBwcm9jZXNzaW5nOyBhbmQgdG8gd2l0aGRyYXcgY29uc2VudCBmb3IgcHJvY2Vzc2luZyB3aGVyZSB0aGV5IGhhdmUgcHJldmlvdXNseSBwcm92aWRlZCBjb25zZW50LiAKTm91cyBpbnNwaXJvbnMgZGUgbCdveHlnbmUgZXQgbm91cyBleHBpcm9ucyBkdSBnYXogY2FyYm9uaXF1ZSBldCwgZGFucyBub3RyZSBoYWxlaW5lLCBhdSBtb21lbnQgZGUgbCdleHBpcmF0aW9uLCBpbCB5IGEgdW5lIHRyZW50YWluZSBkZSBmb2lzIHBsdXMgZGUgQ08yIHF1ZSBkYW5zIGwnYWlyICEgU3VyIGwnYXVnbWVudGF0aW9uIGR1IHRhdXggZGUgQ08yIGRhbnMgbCdhdG1vc3BocmUsIHNpIGwnb24gZmFpdCB1biBtaWNybyB0cm90dG9pciwgcmFyZXMgc29udCBsZXMgZ2VucyBxdWkgY29ubmFpc3NlbnQgbGEgcnBvbnNlLCBpbCBmYXV0IHNhdm9pciBxdWUgbGUgdGF1eCBkZSBDTzIgZGFucyBsJ2FpciBlc3QgcGFzcyBlbiB1biBzaWNsZSBkZSAwLDAzICUgIDAsMDQgJSAhIEVuZmluLCBpbCBmYXV0IHNhdm9pciBxdWUgcydpbCBuJ3kgYXZhaXQgcGFzIGRlIENPMiBkYW5zIGwnYXRtb3NwaHJlLCBpbCBuJ3kgYXVyYWl0IHBhcyBkZSB2Z3RhdGlvbiBzdXIgVGVycmUgQydlc3QgYXVzc2kgc2ltcGxlIHF1ZSBjZWxhLi4gClN1Y2ggYSBkeW5hbWljIG1heSBzZWVtIGFyY2hhaWMgYW5kIHBhdHJpYXJjaGFsIHRvIHlvdSBhbmQgbWUsIGJ1dCBpdHMgbWFueSBnaXJscyByZWFsaXR5LiBUaGlzIGlzIGV2aWRlbnQgaW4gTGluZHNheSBtb3RoZXIgdGVhY2hpbmcgaGVyIGhvdyB0byBjb29rLCBoZXIgbWVudGlvbmluZyB0aGVpciAibGl0dGxlIG9uZXMiIGFuZCBMaW5kc2F5IGZydXN0cmF0aW9uIHdpdGggdGhlIHJvYXN0IGluIHRoZSBzZWFzb24gNSBwcmVtaWVyZS4gTGluZHNheSB3YXMgcHJvYmFibHkgbmV2ZXIgZ2l2ZW4gdGhlIGlkZWEgdGhhdCBzaGUgY291bGQgb3Igc2hvdWxkIGZ1bmN0aW9uIGFzIGFueXRoaW5nIG1vcmUgdGhhbiBhIGhvdXNld2lmZS4gCldoYXQgaWYgc2hlIGdvdCB1bmRpYWdub3NlZCBhdXRpc20sIGRlcHJlc3Npb24sIG9yIGV2ZW4gYW4gZWF0aW5nIGRpc29yZGVyPyBXaGF0IGlmIHNoZSBzdWZmZXJlZCBhIHJhcGUgb3Igb3RoZXIgYXNzYXVsdCBhbmQgaGFzbiBiZWVuIGFibGUgdG8gdGVsbCBhbnlvbmU/IFdlIGRvbiBrbm93IGFuZCBuZWl0aGVyIGRvZXMgT1AuIApCZWV2YXViZWUgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMiBob3VycyBhZ28KVGhlIHdlYnNpdGUgbWF5IGxvb2sgdmVyeSB3ZWxsIGxpa2UgZmFjZWJvb2sgb3IgYW55IG90aGVyIGtpbmQgb2Ygc2VjdXJpdHkgaW52ZW50ZWQgd2VzYml0ZS5SZWFkIG1vcmU6IEdldCBGYWNlYm9vayBQb2tlciBDaGlwc1doYXQgYXJlIHRoZSB2YWx1ZXMgb2YgcG9rZXIgY2hpcHM/VGhleSByZXByZXNlbnQgbW9uZXkuIFRoZXkgY29tZSBpbiBkaWZmZXJlbnQgdmFsdWVzIG9mIG1vbmV5LiBEZXNwaXRlIHRoZSBwb3B1bGFyaXR5IG9mIHBva2VyLCB0aG91Z2gsIHZlcnkgZmV3IHBlb3BsZSBrbm93IG11Y2ggYWJvdXQgcG9rZXIgY2hpcHMgb3IgdGhlaXIgc3RhbmRhcmQgZGVub21pbmF0aW9ucy4gCkFsbW9zdCBzZWVtcyBsaWtlIGFuIGV4cGxvc2lvbiBvZiB2aW9sZW5jZSB3aXRoIHlvdW5nIHBlb3BsZSwgc2FpZCBNYXJpYSBDYXJyb2NjaWEsIHByZXNpZGVudCBvZiB0aGUgQ3JpbWluYWwgTGF3eWVycyBBc3NvY2lhdGlvbiBvZiBXaW5kc29yIGFuZCBFc3NleCBDb3VudHksIHdobyBpcyByZXByZXNlbnRpbmcgb25lIG9mIHRoZSBhY2N1c2VkIGluIERhcnJpb24gbXVyZGVyLiBzZWUgYSBsb3QgbW9yZSBjaGFyZ2VzIHdpdGggeW91bmcgcGVvcGxlIGFuZCB3ZWFwb25zLiBUaGVyZSB3YXMgYSB0aW1lIHdoZW4gd2UgZGVhbHQgd2l0aCBmaXN0IGZpZ2h0cy4gTm93IHdlIGRlYWwgd2l0aCBrbmlmZSBmaWdodHMuCjM3KSBObyBXYXkgLiBBc3N1bWVkIG91dHRha2UgZnJvbSAiVGhlIEZhbWUgTW9ucyBlci4iIENhbiBiZSBmb3VuZCBvbiBZb3V0dWJlLiAzOCA0NSkgQmFkIFJvbWFuY2UvQWxlamFuZHJvL01vbnN0ZXIvU3BlZWNobGVzcy9EYW5jZSBJbiBUaGUgRGFyay9UZWxlcGhvbmUgKEZlYXQuIAoiSGUgaGFkIG5vIHJlbGlhYmxlIHN0cmVhbSBvZiBpbmNvbWUgYW5kIGhlIGRlY2lkZWQgdG8gYWN0LiAiIEludmVzdGlnYXRvcnMgc2F5IEVybmllIHdhbnRlZCBhIGd1bi4gVGhlIGRheSBiZWZvcmUgaGlzIHBhcmVudHMgd2VyZSBtdXJkZXJlZCwgRXJuaWUgY2FtZSB0byB0aGUgTWFzdGVyIGF0IEFybXMsIGluIFBhaHJ1bXAsIE5ldmFkYS4gCkFueXdheSwgSSBkb24ga25vdyBob3cgbXVjaCBhbnkgb2YgdGhpcyBtYXR0ZXJzIHdpdGhvdXQgbGVhcm5pbmcgZnVuZGFtZW50YWxzIGZpcnN0LiBXaGljaCBUR00gaXMgd2hhdCBtYWpvcml0eSBvZiBwZW9wbGUgcmVjb21tZW5kIG90aGVyIG9wdGlvbiB3b3VsZCBiZSB0byB0YWtlIG9uZSBvZiB0aGUgb25saW5lIGNvdXJzZXMuIEkga25vdyBSZWQgQ2hpcCBpcyBjaGVhcGVyIGFuZCBoYXMgYSBjb3JlIHRyYWluaW5nIHRoYXQgSSBiZWVuIHRoaW5raW5nIGFib3V0IGRvaW5nIGFzIGEgbmV3YmllIG15c2VsZi4uIApMb3R0byBOTCBKdW1ibyBhbmQgTW92aXN0YXIgYXJlIG1vc3QgbGlrZWx5IHRvIGF0dGFjayBlYXJseS4gVGhleSBoYXZlIHRoZSBvcHRpb25zIGFuZCBSb2dsaWMgaXMgdGhlIHdpbGRjYXJkLgpUaGVyZSB3YXMgYSBmbHVzaCBkcmF3IG9uIHRoZSBib2FyZCBzbyB0aGlzIHJlYWxseSB3YXNuJ3QgdGhhdCBzaWNrLCBidXQgSSBqdXN0IHJlbWVtYmVyIGJlaW5nIDEwMCBwZXJjZW50IHN1cmUgSSB3YXNuJ3QgZ29pbmcgdG8gaG9sZC4gT25lIG9mIHRoZXNlIHZpbGxhaW5zIHdhcyBnb2luZyB0byBoaXQgdGhlaXIgZmx1c2ggb3IgYm9hdCB1cCBvciBnbyBydW5uZXIgcnVubmVyIHF1YWRzLiAKIlNoZSB3YXMgYWx3YXlzIGEgdmVyeSBoYXBweSBnbyBsdWNreSwgZW50aHVzaWFzdGljIHBlcnNvbiB3aG8gcmVhbGx5IHRvb2sgbGlmZSBvbiB3aXRoIGEgbG90IG9mIGd1c3RvLCIgYWN0b3IgQWxsaXNvbiBDcmF0Y2hsZXkgc2F5cyBpbiB0aGUgd2l0bmVzcyBib3guIApXaXRob3V0IHN1ZmZpY2llbnQga25vd2xlZGdlLCBpdCBpcyBub3Qgd2lzZSB0byBwbGF5IHRvdXJuYW1lbnRzIG9mIHBva2VyIGdhbWVzLiBPbmxpbmUgY2FzaW5vIHBva2VyIGhhcyBtdWx0aSBwbGF5ZXIgc3lzdGVtLiBPbiBsaXZlIGNhc2lubywgaXQgbWF5IGJlIHRlbiBhc3BpcmFudHMgb3Igb25saW5lIGl0IG1heSBiZSB0aG91c2FuZHMuIApUaGUgb3RoZXIgZ3V5IGZvbGRzLCBhbmQgSSByYWlzZS4gQWdhaW4sIEkgaGFkIGJlZW4gcGxheWluZyB2ZXJ5IHRpZ2h0IHRoZSB3aG9sZSBuaWdodCwgaGFkIHJlIHJhaXNlZCB0aGUgcG90IGJlZm9yZSB0aGUgZmxvcCwgYW5kIGhhZCBjaGVjayByYWlzZWQgaGltIHdoZW4gYW4gQSBoaXRzLiBIZSByZSByYWlzZXMgbWUsIEkgZ28gYWxsIGluLCBoZSBjYWxscy4gClRoZSBjZWxlYiByYWcgZ29lcyBvbiB0byBzYXkgdGhhdDoKV2l0aCB0aGlzIGFjY29tcGxpc2hlZCBpdHMgc3BlbnQgdGhlIGxhc3QgZmV3IGh1bmRyZWQgeWVhcnMgZ3Jvd2luZyB1bmNoZWNrZWQgYXQgYW4gZXZlciBpbmNyZWFzaW5nIHBhY2UuIEhhbGlzdGVyIGhhcyBtb21lbnRzIG9mIGx1Y2lkaXR5IHdoZXJlIGhlIGNhbiBzZWUgaXRzIHBsYW4gdG8gYmFzaWNhbGx5IHR1cm4gZXZlcnl0aGluZyBpbnRvIHVuZGVybW91bnRhaW4gYW5kIGhlIHVuZGVyc3RhbmRzIHRoYXQgdG8gc3RvcCBpdCBoZSBuZWVkcyB0byBkaWUgcGVybWFuZW50bHkgc28gdGhlIGtub3QgY2FuIGJlIHNoZWFyZWQgb2ZmIGhpcyBkZXBhcnRpbmcgc291bCBhbmQgZGVzdHJveWVkLi4gClNoZSBzdGFydGVkIGNyeWluZyBhbmQgc2NyZWFtaW5nIERPTiBXQU5UIFlPVVIgQ0hJQ0tFTiBJIFdBTlQgTVkgTU9ORVkgQWZ0ZXIgcmVwZWF0aW5nIG11bHRpcGxlIHRpbWVzIHRoYXQgc2hlIG5ldmVyIHBhaWQgZm9yIGl0IGkgZXZlbnR1YWxseSBnYXZlIHVwIGFuZCBjYWxsZWQgdGhlIHN0b3JlIG1hbmFnZXIgYW5kIGxldCB0aGVtIGRlYWwgd2l0aCBoZXIuIExpa2UgdGhlIHRpbWUgbXkgbWFuYWdlciBjYXZlZCB0byBhIGN1c3RvbWVyIHdobyByZXR1cm5lZCBhIHRocmVlIHllYXIgb2xkIHNjcmF0Y2hlZCwgc2N1ZmZlZCwgYnJva2VuIHdhdGNoIGZvciBhIGZ1bGwgcmVmdW5kIGJlY2F1c2UgaGVyIHNvbiAiZGlkbiB3YW50IGl0IGFueW1vcmUuIiBPciB0aGUgdGltZSBteSBtYW5hZ2VyIGNhdmVkIHRvIGEgY3VzdG9tZXIgd2hvIHJldHVybmVkIGEgdHdvIHllYXIgb2xkIHdvcm4gb3V0IHBhaXIgb2YgcGFudHMgZm9yIGEgZnVsbCByZWZ1bmQgYmVjYXVzZSBoZXIga2lkIG91dGdyZXcgdGhlbS4gVGhhbmtzIGZvciBnZXR0aW5nIG1lIHllbGxlZCBhdCBhbmQgYWxsb3dpbmcgdGhlIGN1c3RvbWVyIHRvIGNvbnRpbnVlIGluIHRoZWlyIGRlbHVzaW9uIG9mIHRoaW5raW5nIHRoYXQgSSB3YXMgdGhlIHVucmVhc29uYWJsZSBqZXJrLi4gClRoZSBMYW90aWFuIHBvc3QgYXQgTmFtJyBCYWMsIG5vcnRoIG9mIEx1YW5nIFByYWJhbmcsIHRoZSBSb3lhbCBMb2F0aWFuIGNhcGl0YWwsIGlzIHdpdGhpbiAxMDAgbWlsZXMgb2Ygd2hlcmUgUHJhICBwaGFzIHNhaWQgdGhlIHRocmVlIFJlZCBiYXR0YWwgIGlvbnMgd2VyZSBhcnJheWVkIGFnYWluc3QgaFUgZm9yY2VzLiBJbiBXYXNoaW5ndG9uIGVhcmxpZXIsIHNvdXJjZXMgYXQgdGhlIFBlbnRhZ29uIGFuZCB0aGUgU3RhdGUgRGVwYXJ0bWVudCB3ZXJlIGluICBjbGluZWQgdG8gc2VlIG5vdGhpbmcgcGFydGljdSAgbGFybHkgc2VyaW91cyBpbiB0aGUgcmVwb3J0IG9mIENvbW11bmlzdCBhY3Rpdml0eSBoaSBMYW9zOyBUaGVyZSB3ZXJlIHN1Z2dlc3Rpb25zIHRoYXQgdGhlIENvbW11bmlzdHMgd2VyZSByYWlkaW5nIHRvIGdldCBwcm92aXNpb25zIGZyb20gdGhlIHJpY2UgaGFydmVzdCBhbmQgdGhhdCB0aGV5IHdlcmUgdGlnaHRlbmluZyB0aGVpciBkZWZlbnNlcyBhbG9uZyB0aGUgSG8gQ2hpIE1pbmggdHJhaWwgdGhyb3VnaCBlYXN0ZXJuIExhb3MsIHdoaWNoIE5vcnRoIFZpZXRuYW1lc2UgdHJvb3BzIHVzZSBnb2luZyB0MyBTb3V0aCBWaWV0bmFtLiAKQWZ0ZXIgeWVhcnMgb2Ygc2F5aW5nIG90aGVyd2lzZSwgSG9sbHl3b29kIGhhcyBmaW5hbGx5IHJlYWxpemVkIHRoYXQgdGVsbGluZyBtb3JlIGluY2x1c2l2ZSBzdG9yaWVzIGlzIGp1c3QgZ29vZCBidXNpbmVzcy4gCklmIHlvdSBzZXBhcmF0ZSBlbW90aW9ucyBmcm9tIHRoZSBzaXR1YXRpb24gYW5kIGxvb2sgYXQgaXQgbG9naWNhbGx5OiB5ZXMsIGl0IGlzIHlvdXIgY2hvaWNlIDEwMCUsIGFuZCB5ZXMsIHRoZXkgd291bGQgZW5kIHVwIGluIHRoZSBwb3NpdGlvbiB0aGV5IGJlIGluIHRocm91Z2ggYXQgbGVhc3Qgc29tZSBmYXVsdCBvZiB0aGVpciBvd24uIFlvdSBtYWtpbmcgdGhlIGNob2ljZSB0byBjb250aW51ZSB0byBzdXBwb3J0IHRoZW0sIGp1c3QgYXMgeW91IG1ha2luZyB0aGUgY2hvaWNlIHRvIGNob29zZSB0byBub3QgaGF2ZSBraWRzLiBJIG5vdCBzYXlpbmcgZWl0aGVyIGFyZSBhIGJhZCBjaG9pY2UgYXQgYWxsIChhbmQgSSBkb24gdGhpbmsgL3UvcHV0ZXJUREkgd2FzIGVpdGhlciksIGp1c3QgZXhwbGFpbmluZyB0aGF0IGl0IGlzIGluIGZhY3QgeW91ciBjaG9pY2UgMTAwJSwgYXMgYXJlIHRoZSBjb25zZXF1ZW5jZXMgb2YgeW91ciBjaG9pY2UuIENvbnNlcXVlbmNlcyBhcmVuIGFsd2F5cyBiYWQgZWl0aGVyLCB0aGV5IGp1c3QgdGhlIG91dGNvbWUgb2YgYSBkZWNpc2lvbi4gT2J2aW91c2x5IHlvdSB2YWx1ZSB5b3VyIGN1bHR1cmUgYW5kIGRvaW5nIHdoYXQgeW91IGZlZWwgaXMgcmlnaHQgZm9yIHlvdXIgZmFtaWx5IG92ZXIgYSBzZW5zZSBvZiBjcnVzaGluZyBndWlsdCwgd2hpY2ggaXMgZmluZSwgYnV0IHlvdSBjYW4gYWN0IGxpa2UgYWxsIG9mIHRoYXQgaXMgb3V0c2lkZSB5b3VyIGNvbnRyb2wuClRoZXJlIGp1c3Qgbm90IGVub3VnaCBpbmNlbnRpdmUgZm9yIHRoZSBDVS4gCkkgdGhpbmsgdGhhdCBRdWVlbmllIGlzIHVuZGVyIHRoZSBpbXBlcmlvdXMgY3Vyc2Ugd2hlbiBzaGUgaXMgd2l0aCBHcmluZGV3YWxkLiBXZSBzZWUgaGVyIGJhc2ljYWxseSBmaWdodGluZyBpdCBhcyBzaGUgZ29lcyB0aHJvdWdoIHRoZSBmbGFtZXMgYW5kIGl0IG1ha2VzIFNPIG11Y2ggc2Vuc2UgIGl0IGdpdmVzIEdyaW5kZXdhbGQgYSBwZXJmZWN0IGVkZ2UgaW4gaGlzIG1hbmlwdWxhdGlvbiB0YWN0aWNzIGZvciBhbnlvbmUsIGJ1dCBlc3BlY2lhbGx5IGZvciBDcmVkZW5jZSBBTkQgaXQncyBhIHBlcmZlY3QgY2hlZWt5IG5vZCB0byBoZXIgZmlyc3Qgc2NlbmUgd2hlbiBzaGUgaGFzIEphY29iIGNoYXJtZWQgdG8gZG8gaGVyIGJpZGRpbmcsIHRoZSBwb2V0aWMganVzdGljZSBpcyBqdXN0IHRoZSB0eXBlIG9mIHRoaW5nIFJvd2xpbmcgd291bGQgc25lYWsgaW4gcmlnaHQgaW4gZnJvbnQgb2Ygb3VyIGV5ZXMuIEl0IGFsc28gd291bGQgZXhwbGFpbiBob3cgcXVpY2tseSBRdWVlbmllIHR1cm5zLCBhIGxvdCBvZiBjb21tZW50cyBvbiBob3cgaXQgd2FzIHBvb3IgcGxvdCBkZXZlbG9wbWVudC9jaW5lbWF0b2dyYXBoeSBidXQgSSdtIHRlbGxpbmcgeWEgaXQncyBnb3R0YSBiZSB0aGUgaW1wZXJpb3VzIGN1cnNlLgpUaGUgdGltZSBjb21lcywgd2Ugd2VyZSBhbGwgaG9zdGVkIGluIGEgYmlnIG1lZXRpbmcgaGFsbCB3aXRoIGJpZyBzY3JlZW4gc2hvd2luZyBteSB2ciBzY3JlZW4gcHJldmlldy4gSW0gYWxsIGZ1bGwgZ2VhcmQgd2l0aCBteSBWSVZFIGFuZCBjb250cm9sbGVycyBsb29raW5nIGZ1dHVyaXN0aWMgb24gdGhlIHN0YWdlLiBNYWRlIHdpdGggVW5pdHkgbG9nbyBhcHBlYXJzIG9uIHRoZSBzY3JlZW4uIGNvb2wgc28gZmFyLiBUaGVuIGNvbWVzIHRoZSBhY3R1YWwgc2ltdWxhdGlvbi4gYSBzY2VuZSB3aGVyZSAyIGFuaW1hdGVkIGNoYXJhY3RlcnMgaW4gYSBzY2VuZSBzdXBwb3NlZCB0byBlbmFjdCBzb21lIHNhZmV0eSBzZXF1ZW5jZS4gR3Vlc3Mgd2hhdC4gdGhlIHBoeXNpYyBzeXN0ZW0gY3Jhc2ggYW5kIHRoZSByYWcgZG9sbCBwaHlzaWMga2lja3MgaW4gb24gb3ZlcmRyaXZlLiBUaGV5IHRoZSAzZCBjaGFyYWN0ZXJzIHdlcmUgZm9yIHNvbWUgZ29kIGZvcnNha2VuIHJlYXNvbiB3ZXJlIHR3aXRjaGluZyBhcm91bmQgYW5kIGRlY2lkZWQgdG8gZW5hY3QgYSBzZXggc2NlbmUuIFBvdW5kaW5nIGVhY2ggb3RoZXIgaW4gVlIuIG15IGhlYXJ0IHN0b3BwZWQgOk8gLgpCcm9va2U6IHRob3NlIG9mIHVzIHdobyBsaXZlIGhlcmUgaGF2ZSBwcmV0dHkgbXVjaCBrbm93biB3aGF0IGhhcHBlbmVkIHRvIEJyb29rZSBzaW5jZSBzaGUgZGlzYXBwZWFyZWQuIEl0IGtpbmQgb2YgYW4gb3BlbiBzZWNyZXQgaGVyZS4gCkhpaiBzdGVsdCB6aWNoIHRvZXRzYmFhciBvcC4gClRoZWlyIHNpc3RlciBwYXJ0eSBpbiBFbmdsYW5kIGhhcyBzdWZmZXJlZCBwb2xpY2UgaW5maWx0cmF0aW9uIGFuZCBibGFja2xpc3Rpbmcgb2YgbWVtYmVycy4gCkFsb25nc2lkZSB0aGUgcmVzdGF1cmFudCBpcyB0aGUgUGlhbm8gQmFyIHdoaWNoIGlzIG9wZW4gZnJvbSAxMWFtIHVudGlsIGxhdGUgd2l0aCBvdXIgcmVzaWRlbnQgcGlhbmlzdCBwbGF5aW5nIHVwIHRvIDQgZGF5cyBhIHdlZWsgYW5kIFNreS9CVCBTcG9ydHMgYWxzbyBhdmFpbGFibGUgZm9yIFNwb3J0cyBmYW5zLiAKQ3phckVnZ2JlcnQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpXZSBib3RoIGtub3cgdGhhdCBibGFjayBwZW9wbGUgZ2VuZXJhbGx5IGhhdmUgbW9yZSBtZWxhbmluIHRoYW4gd2hpdGUgcGVvcGxlLiBUaGF0IGEgcGh5c2ljYWwgZGlmZmVyZW5jZS4gWW91IGNhbiBzdXJtaXNlIHRoYXQgZGlmZmVyZW5jZSBhcyBvbmUgZGlmZmVyZW5jZSB0byBiZSBwdXQgZG93biB0byAicmFjZSIgYXMgbW9zdCByZWFzb25hYmxlIG1pbmRlZCBwZW9wbGUgZG8gd2hvIGFyZW4gbG9va2luZyB0byBiZSBhbmdyeSB0aGF0IHBlb3BsZSBsb29rIHRvIGNhdGVnb3Jpc2UgdGhpbmdzLgpCZWZvcmUgZmFsbGluZyBwcmVnbmFudCBJIGFsc28gd2FzIGRpYWdub3NlZCBhcyBiaXBvbGFyLiBJIHdvcmtlZCBoYXJkIHRvIGJlIGFibGUgdG8gbWFuYWdlIGl0IGFuZCBmaW5hbGx5IGFmdGVyIHllYXJzIG9mIG1lZGljYXRpb24gYW5kIHRoZXJhcHkgZ290IHRvIGEgZ29vZCBwbGFjZS4gCldlIHdlcmUgc28gZ3JhdGVmdWwgdG8gc2hvd2VyIG9mZiB0aGUgZHVzdCBmcm9tIFBldHJhIGFuZCBlYXQgYSBob21lIGNvb2tlZCBtZWFsIG1hZGUgYnkgSWJyYWhpbSBtb3RoZXIuIApDdXJyZW50IHJvdXRpbmUgaXMgKGJlZW4gdXNpbmcgaXQgc2luY2UgYSBmZXcgbW9udGhzIG5vdyk6CldoeT8gQmVjYXVzZSBJIG5vdCBjb250ZW50IHRvIGp1c3QgaGlkIGh1ZGRsZWQgYmVoaW5kIG15IGJsYW1lIGJsYW5rZXQgYW5kIHdhbnQgd2FudCB0byBtYWtlIHNvbWV0aGluZyBhdCBsaWZlLi4gCldoZW4gdGhlIGNyaXRpYyBhcnJpdmVzIHRoZSBNQyBjaGFyYWN0ZXIgaXMgaG9ycmlmaWVkIHRvIHNlZSB0aGUgTU1PUlBHIGRldmlsIGhpbXNlbGYuIFdpdGggYSBzbmVlciwgdGhlIGNhcnRvb25pc2hseSByZWQgc2tpbm5lZCBkZXZpbCBvcmRlcnMgdGhlIG1vc3QgY29tcGxpY2F0ZWQgZGlzaCBvbiB0aGUgbWVudSwgdGhlIGhhbSBzYW5kd2ljaC4gQW4gaW1wb3NzaWJsZSBjb21iaW5hdGlvbiBvZiBwcmUgc2xpY2VkIGJyZWFkLCBwcmUgc2xpY2VkIGNoZWVzZSwgYW5kIHByZSBzbGljZWQgaGFtIHdpdGggbXVzdGFyZCBhbmQgbWF5b25uYWlzZS4uIApFbiBjZSBxdWkgY29uY2VybmUgbGUgcGhub21uZSBkZSBwcm9zdGl0dXRpb24gZGFucyBsZSBxdWFydGllciBDaHRlYXUgcm91Z2UgTWFyY2FkZXQsIEouIFJpZ29uIHMnZXN0IGRwbGFjIGRlIG51aXQgcG91ciBvYnNlcnZlciBsYSBzaXR1YXRpb24uIFVuZSBwcmVtaXJlIG9wcmF0aW9uIGRlIGNvbnRybGVzIGEgZXUgbGlldSBmaW4gZGNlbWJyZSwgZCdhdXRyZXMgZGV2cmFpZW50IHN1aXZyZS4gClRoZSBhYm92ZSB3b3JkcyB3ZXJlIHdyaXR0ZW4gYnkgRG91Z2xhcyBBZGFtcyBvbiBIMkcyIGEgZmV3IG1vbnRocyBhZnRlciB0aGUgc2l0ZSdzIGNyZWF0aW9uLiBGb3IgdGhlIGZpcnN0IHRpbWUsIHRoaXMgcGFnZSBjb2xsZWN0cyB0b2dldGhlciBhbGwgdGhlIGFydGljbGVzIHdyaXR0ZW4gYnksIGFuZCBhYm91dCwgRG91Z2xhcyB0byBiZSBmb3VuZCBvbiBIMkcyLiAKTG9yZCBDIGlzIHZlcnkgaGFuZHkgd2l0aCBhIGhhbW1lciwgc2F3LCBldGMuIEhlIGhhcyBjb21wbGV0ZWx5IHJlbW9kZWxlZCB0aGUgYmFzZW1lbnQuIApJdCBiZWVuIGEgZ3JlYXQgcGhvbmUuIApBbWVyaWNhIGlzIHRoZSBtb3N0IHNlY3VyZSBuYXRpb24gb24gZWFydGggYmVjYXVzZSBpdCB0aGUgb25seSBvbmUgdGhhdCBjYW5ub3QgYmUgY29udGFpbmVkIGluIHRoYXQgd2F5LiBDaGluYSBpcyB0aGUgb25seSBzdGF0ZSBpbiB0aGUgd29ybGQgdGhhdCBpcyBldmVuIGNsb3NlIHRvIGJlY29taW5nIGEgcmVnaW9uYWwgaGVnZW1vbiBpbiBpdHMgc3BoZXJlIG9mIGluZmx1ZW5jZS4gV2UgY2FuIGxldCB0aGF0IGhhcHBlbi4gCkZvciBoaXAgZmxleG9yIHN0cmV0Y2hlcywgc2VlIG15IFVwcGVyIExlZyBzZWN0aW9uLi4gClRoZSAyMDA1IFdvcmxkIFNlcmllcyBvZiBQb2tlciBicm9hZGNhc3RzIHdpbGwgaGF2ZSBvdmVyIDIsMDAwLDAwMCBwZW9wbGUgd2F0Y2hpbmcgZWFjaCB0ZWxldmlzZWQgZXBpc29kZSB3aGVuIEVTUE4gc3RhcnRzIHNob3dpbmcgdGhlbSBpbiBKdW5lLiAKTGV0dGVycyBVbmxpbWl0ZWQKNC4gTGVncyBhbmQgRmVldDogUHJpbWFyaWx5LCB3aGF0IHdlIGFyZSBsb29raW5nIGZvciBoZXJlIGlzIHN0YW5jZS4gQXMgb2Z0ZW4gaGFwcGVucyBzdWJjb25zY2lvdXNseSwgcGVvcGxlIHdpbGwgdGVuZCB0byBibGFkZSB0aGVtc2VsdmVzIHRvd2FyZHMgYSBwZXJjZWl2ZWQgdGhyZWF0LiAKSWYgSSB3YXMgdGhlbSwgSSB3b3VsZG4gYmUgYWJsZSB0byBsb29rIGluIHRoZSBtaXJyb3IuIApGcmFuY2lzIG9uIFN0YXRlbiBJc2xhbmQsIFJpY2sgdXNlZCB0byBqb2tlIHRoYXQgaGlzIHJlY29yZHMgd2VyZSBzZWFsZWQgYnV0IHRoZXkgdXNlZCBoaXMgZXhwZXJpZW5jZSB0byB0aWdodGVuIHVwIGZ1dHVyZSBzZW1pbmFyeSBhZG1pc3Npb25zLiAKUGxheWluZyBjb21wdXRlciBnYW1lcyAgIHByZWZlcmFibHkgb25lcyB0aGF0IGludm9sdmUgc29tZSBtZW50YWwgd29yay4gCkVpdGhlciBtdXJkZXJlZCBvciBpdCBhIGNhc2Ugb2Ygb25lIG9mIHRoZSBtZW4gZ2F2ZSBoZXIgaGVyb2luIHRoYXQsIHVuYmVrbm93bnN0IHRoZW0gdGhlbSwgd2FzIGxhY2VkIHdpdGggRmVudGFueWwgYW5kIHNoZSBkaWVkLiBLZW50dWNreSBoYXMgYmVlbiBwcm9zZWN1dGluZyBkcnVnIGRlYWxlcnMgYXMgbXVyZGVyZXJzIGxhdGVseSBzbyB0aGVyZSBjb3VsZCBiZSBhIGZlYXIgb2YgdGhhdC4gSU1PIG9ubHkgb25lIG9mIHRoZSBtZW4gdHJ1bHkga25vd3Mgd2hhdCBoYXBwZW5lZCB0byBoZXIuIApXZSBuZWVkIHRvIHZvdGUgZm9yIEFMTCBqdWRnZXMgYmVjYXVzZSBhbGxvd2luZyBnb3Zlcm5tZW50IG9mZmljaWFscyB0byBjaG9vc2UgdGhlbSBoYXMgYmVlbiB3ZWFwb25pemVkIGZvciBwZXJzb25hbCBwb2xpdGljYWwgZ2FpbiBhbmQgbmVlZHMgdG8gYmUgdGFrZW4gYXdheS4uIApEbyB5b3UgdGhpbmsgZGV2ZWxvcGVycyB3YW50IHRvIHNoaXAgb3V0IGEgYnJva2VuIGdhbWU/IFRoaXMgcG9zdCBpcyByaWRpY3Vsb3VzLiAKVGhlIG5ld3Mgd2lsbCB0YWtlIGFuIGludGVyZXN0IGluIDUwMCwwMDAgcGVvcGxlIHdpdGggYmxvb2R5IHVyaW5lLiBGcm9tIGEgbWlsaXRhcnkgcGVyc3BlY3RpdmUsIHlvdSBoYXZlIGEgaGlnaGVyIGNoYW5jZSBvZiBnZXR0aW5nIGV4cG9zZWQgdG8gYmlvbG9naWNhbCB3ZWFwb25zIChzbWFsbCBwb3ggb3IgYW50aHJheCBmb3IgaW5zdGFuY2UpLCBhbmQgc28gdGhlIHJpc2sgb2YgeW91IHBpc3NpbmcgYmxvb2QgZm9yIGEgY291cGxlIG9mIGRheXMgaXMgYmV0dGVyIHRoYW4gdGhlIDMwJSBjaGFuY2Ugb2YgeW91IGR5aW5nIGlmIHlvdSBjb250cmFjdCBzbWFsbCBwb3ggKHByb2JhYmx5IGJldHRlciB3aXRoIG1vZGVybiB0cmVhdG1lbnQpIG9yIDgwJSBmb3IgaW5oYWxlZCBhbnRocmF4Li4gClRoZSBmbG9wIGlzIGxvdyBhbmQgSSBza3VsayBvdXQgdGhlIGRvb3IuIApUbyBiZWNvbWUgZ29vZCBhdCBibHVmZmluZyBpbiBwb2tlciB5b3UgbmVlZCB0byBjb25zaWRlciBtYW55IHRoaW5nczogV2hvIFNob3VsZCBJIEJsdWZmPyBXaGVuIFNob3VsZCBJIEJsdWZmPyBXaGVuIFNob3VsZCBJIE5vdCBCbHVmZj8gU2VtaSBCbHVmZmluZz8gQ2FuIEdldHRpbmcgQ2F1Z2h0IEJsdWZmaW5nIEJlIFByb2ZpdGFibGU/IEhlcmUgYXJlIGEgZmV3IHVzZWZ1bCB0aXBzIHRvIHN0YXJ0IHdpdGg6IDEuIDIuIEFzIGEgZ2VuZXJhbCBydWxlLCB5b3Ugd2lsbCBiZSBtb3JlIHN1Y2Nlc3NmdWwgYmx1ZmZpbmcgaWYgeW91ciBsYXN0IGFjdGlvbiB3YXMgc3Ryb25nIChiZXQgb3IgcmFpc2UpIGFuZCB5b3VyIG9wcG9uZW50J3MgbGFzdCBhY3Rpb24gd2FzIHdlYWsgKGNoZWNrIG9yIGNhbGwpLiBjaG9vc2UgRk9MRCBBTkQgU0tJUCwuIHRoZW4sLiBpbW1lZGlhdGVseSBzZWxlY3QgRVhJVEdBTUUsLiBiYWNrIGF0IHRoZSBtYWluIG1lbnUuIGNsaWNrIFRVVE9SSUFMLC4gdGhlbi4gY2xpY2sgdGhlIHRvcHR1dG9yaWFsIGNhbGxlZCB0dXRvcmlhbCwuIGFuZCB3aGVudGhleSBhcmUsLiBpdCBzaG93cyBhbGwgdGhlIHBsYXllcnMgaGFuZHMuIFRoZW4gY2xpY2sgZXhpdCBnYW1lYWdhaW4sLiBiYWNrIHRvIHRoZSBtYWluIG1lbnUsLiBvbmx5IG5vdyBhbGwgdGhlaXIgY2FyZHNhcmUgc2hvd24uIEdvb2QgbHVjayBpdCB3b3JrcyBmb3IgbWUuIG1ha2Ugc3VyZSB0byBrZWVwIHlvdXIgaGVhbHRoIHBhY2tzIGJ5IHlhIGJveXMuIGFuZCByZW1lbWJlciBpZiBpdCBtb3ZlcyBzaG9vdCBpdC4gZXNwZWNpYWxseSBiZWFycyA0IGhpdHMgeW91cmUgZGVhZCBUYWNpIEx5biAoRnVsbCBBbnN3ZXIpClByaXNrYSBIYXVldGVyIGFuIGRlciBTcGl0emUgZGVyIENoaXJvU3Vpc3NlCk9uIEFwciAyNSwgMjAxMyAgVG9tb3Jyb3csIFplbnlhdHRhIHdpbGwgYXR0ZW1wdCB0byB3aW4gaGVyIDIwdGggYW5kIGZpbmFsIHJhY2UgYXQgQ2h1cmNoaWxsIERvd25zLiAKSWYgeW91IGNvbnNpZGVyIHlvdXJzZWxmIGEgc3BvcnQgYmV0dGluZyBlbnRodXNpYXN0LCBidXQgaGF2ZSBuZXZlciBwbGFjZWQgYSBiZXQgb24gc3BvcnRzIG9ubGluZSwgdGhlbiBUaXRhbiBCZXQgaXMgdGhlIHBsYWNlIGZvciB5b3UuIApPbmUgZGlmZmVyZW5jZSBJIGNhbiBzcG90IHdvdWxkIGJlIHRoZSBhYmlsaXR5IHRvIGJ1eSBhIHJhcmUgY2FyZCBpbiByZWFsIGxpZmUgdGhhdCB5b3Ugc291Z2h0IGFmdGVyLCBjb21wYXJlZCB0byBzb21lIGdhbWVzIHdoaWNoIG1ha2UgaXQgaW1wb3NzaWJsZSB0byBhY2Nlc3Mgc29tZSBjb250ZW50IHVubGVzcyBpdCBpcyBwdWxsZWQgdGhyb3VnaCBhIGxvb3QgYm94IHN5c3RlbSwgd2hpY2ggSSBhZ3JlZSBpcyBpbnNhbmUgYW5kIHNob3VsZCBiZSBsb29rZWQgaW50by4KV2UgZ2V0IHRvIHRoZSBFUiBhbmQgdGhlIGNvcHMgaGF2ZSB3b3JrZWQgaGltIHVwIGFuZCBzY2FyZWQgaGltIHNvIGJhZGx5IHRoYXQgdGhlIEVSIGRycyBpbnR1YmF0ZWQgaGltIGZvciB0d28gZGF5cy4gClRoZSBwdXNoIHRvd2FyZHMgcHJlbWl1bS9sdXh1cnkgc2VhdGluZyBoYXMgYmVlbiBnb2luZyBvbiBmb3IgYXdoaWxlIGFscmVhZHkgaW4gdGhlIE5GTC4gSnVzdCBsb29rIGF0IHRoZSBuZXdlciBzdGFkaXVtcyBidWlsdCBmb3IgTkZMIHRlYW1zIGluIHRoZSBsYXN0IDEwIDE1IHllYXJzLiBUaGUgb3duZXJzIG9mIHRoZXNlIHRlYW1zIChhcyB3ZWxsIGFzIG93bmVycyBjdXJyZW50bHkgbG9va2luZyBmb3IgbmV3IHN0YWRpdW1zIGxpa2UgdGhlIENoYXJnZXJzKSBhcmd1ZSB0aGF0IHRoZWlyIG9sZCBzdGFkaXVtcyB3ZXJlIG9ic29sZXRlLCBvbmUgcmVhc29uIHRoZXkgY2l0ZTogYmVjYXVzZSB0aGV5IGxhY2sgbHV4dXJ5IHNlYXRpbmcgb3B0aW9ucy4gVGhlIGN1cnJlbnQgTkZMIHJldmVudWUgc2hhcmluZyBtb2RlbCBkb2VzIG5vdCBpbmNsdWRlIGx1eHVyeSBzZWF0IHNhbGVzIGFuZCBjZXJ0YWluIG90aGVyIGFtZW5pdGllcywgdGhpcyBtZWFucyBtb3JlIG1vbmV5IGZvciBvd25lcnMgd2l0aCBzdGFkaXVtcyB0aGF0IG9mZmVyIGFzIG1hbnkgb2YgdGhlc2UgdGhpbmdzIHRoZXkgcG9zc2libHkgY2FuLiBUaGUgUmVkc2tpbnMgYXJlIGEgcGVyZmVjdCBleGFtcGxlIG9mICwgdGhleSBjaGFyZ2UgeW91IGV4dHJhIGZvciBqdXN0IGFib3V0IGFueXRoaW5nIHRoYXQgdGhleSBwb3NzaWJseSBjYW4uClJlYWxseSB3YW50ZWQgdG8gd2F0Y2ggaXQsIiBFc3F1aWxpbiByZWNhbGxlZCB0byBwb2xpY2UuICJCdXQgc2hlIHdhcyB2ZXJ5IGZsaXJ0YXRpb3VzIGFuZCBzaGUgZ3JhYmJlZCBtZSBhbmQgd2UgZGlkbid0IHN0b3AuIFBhaXIgbGF0ZXIgZ290IGludGltYXRlIGluIHNldmVyYWwgbG9jYXRpb25zLCBpbmNsdWRpbmcgdGhlaXIgaG9tZXMgYW5kIGluc2lkZSB0aGUgYmFuZCByb29tIGF0IFNvdXRoIEJyb3dhcmQgSGlnaCBTY2hvb2wsIHRoZSBzdHVkZW50IHRvbGQgcG9saWNlLiAKSSBkb24gaGF2ZSB0aGUgcGFwZXJ3b3JrIHRoYXQgdGhlIHBhdGllbnRzIHNpZ24gd2hlbiB0aGV5IGFkbWl0dGVkIHRvIHRoaXMgc3BlY2lmaWMgaG9zcGl0YWwgKGl0IHdvdWxkIGJlIHdlaXJkIGlmIEkgZGlkKSwgYnV0IEkgbGlrZSB0byBiZWxpZXZlIGl0IGNsZWFybHkgc3RhdGVkIHRoYXQgcGF0aWVudHMgY2Fubm90IGJyaW5nIG91dHNpZGUgbWVkaWNhdGlvbiBpbnRvIHRoZSBob3NwaXRhbC4gSXQgbm90IG9ubHkgaGFzIHRoZSBwb3RlbnRpYWwgZm9yIGludGVyZmVyaW5nIHdpdGggdHJlYXRtZW50LCBpdCBjb3VsZCBicmluZyBoYXJtIHRvIG90aGVyIHBhdGllbnRzIGluIHRoZSBob3NwaXRhbC4gCkZvciBleGFtcGxlLCBhIHBlcnNvbiB3aG8gaGFzIGEgd2luZCBjb2xkIGNvbmRpdGlvbiB3aXRoIGV4Y2Vzc2l2ZSBjbGVhciBtdWN1cyBtaWdodCBiZSB0b2xkIHRvIGNvbnN1bWUgaG90IHNvdXAgbWFkZSBmcm9tIG9uaW9ucyBhbmQgbXVzdGFyZCBncmVlbnMuIApBIERKIHdpbGwga2VlcCB0aGUgcGFydHkgcHVtcGluZyB1bnRpbCAxYW0gYW5kIHRpY2tldHMgY2FuIGJlIHB1cmNoYXNlZCBhdCBSeWRnZXMgcmVjZXB0aW9uIG9yIG9uIDY1ODkgMjg4OC4KSHVtYW5zIGxpa2UgdGhhdCwgaXQgbm90IHRoYXQgaGUgYSBiYWQgcGVyc29uLiBIZSBqdXN0IHdhbnRlZCB0aGUgYXR0ZW50aW9uLiBJdCBub3QgdGhhdCBiYWQuIApJIHVzdWFsbHkgbGV0IGl0IGdldCBwcmV0dHkgZGlydHkgdG8gYnVpbGQgdXAgcmVjbGFpbSwgdGhlbiBJIG1ha2Ugc3RlbSBtaWxrIHdpdGggaXQuIApTZXZlcmFsIHBlb3BsZSBuYW1lZCBDaHJpcyBXYWxsYWNlICAgYXMgd2VsbCBhcyBDaHJpc3RpbmUgYW5kIENocmlzdGluYSBXYWxsYWNlcyAgIGRvIGhhdmUgVHdpdHRlciBhY2NvdW50cywgYnV0IG9ubHkgb25lIGhhcyB1c2VkIGl0IHRvIHByZXNlcnZlIHB1YmxpYyBjb25maWRlbmNlIGluIG91ciBlbGVjdG9yYWwgcHJvY2Vzcy4gCkluIGZhY3QgdGhlIG1pc3RlcnMgYXJlIHByYWlzaW5nIHRoZSBjb21tZW50IGFzIGlmIGhlIHNwb2tlbiBzb21lIGtpbmQgb2Ygc2VjcmV0IHRydXRoLCB0aGUgb25seSBjb21tZW50cyB0aGF0IHRha2UgaXQgdG8gdGFzayBhcmUgZG9pbmcgaXQgb3ZlciB3aGV0aGVyIG9yIG5vdCBzaGUgYWN0dWFsbHkgaGF0ZXMgbWVuLiBObyBvbmUgaXMgZHJhZ2dpbmcgT1AgZm9yIGNvbXBhcmluZyBhIEpld2lzaCB3b21hbiB0byBhIGdyb3VwIHdobyB3b3VsZCBtb3N0IGNlcnRhaW5seSB0b3J0dXJlIGFuZCBraWxsIGhlciBoYWQgdGhleSB0aGUgY2hhbmNlLi4gClRoZXkgd2VyZSBhdCBoZXIgaG9tZSBmb3Igc2V2ZXJhbCBob3VycyBiZWZvcmUgQ29sbGlucyBzdWdnZXN0ZWQgdGhleSBhc3NhdWx0IGhlciBhbmQgc3RlYWwgaGVyIGNhciwgb2ZmaWNpYWxzIHNhaWQuSGlzIGNvbXBhbmlvbnMgcmVidWZmZWQgdGhlIGlkZWEsIGFjY29yZGluZyB0byB0aGUgc2hlcmlmZidzIG9mZmljZSwgYnV0IGEgc2hvcnQgdGltZSBsYXRlciBoZSBhc3NhdWx0ZWQgdGhlIHdvbWFuLiAKUGFzdGVsIG9yIGJyaWdodCBjb2xvcmVkIHQgc2hpcnQsIGhpZ2ggbmVja2xpbmUgYW5kIHNoYXBlbGVzcyBwYW50cy4gCkl0IGRvZXMgbm90IHJlYWxseSBtYXR0ZXIgd2hhdCBjYXJkcyB5b3UgZ2V0IGRlYWx0IGJlY2F1c2UgeW91IGtub3cgdGhhdCB5b3UgaGF2ZSB0aGUgc2tpbGxzIHRvIHJlYWQgdGhlIG90aGVyIHBsYXllcnMsIGFuZCB0byBibHVmZiB5b3VyIHdheSBpbnRvIHRha2luZyB0aGUgcG90IGlmIHlvdSBuZWVkIHRvLiAKSXMgQ3JlZGVuY2UgRHVtYmxlZG9yZSdzIGJyb3RoZXI/IENvcnJlY3QgbWUgaWYgSSdtIHdyb25nIGJ1dCBJIHRob3VnaHQgaGUganVzdCBzYWlkICJ5b3VyIG93biBmbGVzaCBhbmQgYmxvb2QgaXMgdHJ5aW5nIHRvIGtpbGwgeW91Ii4gQ291bGQgaGUgYmUgYSBOZXBoZXcsIG1heWJlIEFiZXJmb3J0aCBoYWQgYSBzb24gYW5kIGl0IHdhc24ndCBqdXN0IEFyaWFuYSdzIGRlYXRoIHRoYXQgbWFkZSB0aGVtIHNvIGRpc3RhbnQgaW4gdGhlIEhQIHNlcmllcy4gCkEgYml0IG9mIG9yZSwgYSBiaXQgb2YgYWNpZC4gCkdvbGRlbiwgUGF0ZWwncyBhdHRvcm5leSwgc2FpZCBkZXB1dGllcyB3ZW50IHRvIGhpcyBob21lIGFuZCB0b2xkIFNvbmFsIGhlciBodXNiYW5kIHdhcyBjYXVnaHQgb24gdmlkZW8gcGF5aW5nIG1vbmV5IGZvciBzZXggYWN0cy4KRGVhZHdvb2QgTW91bnRhaW4gR3JhbmQgaXMgYSAkNTAgbWlsbGlvbiBlbmRlYXZvdXIsIG9uZSBvZiB0aGUgbGFyZ2VzdCBoaXN0b3JpY2FsIHByZXNlcnZhdGlvbiBwcm9qZWN0cyBpbiB0aGUgVW5pdGVkIFN0YXRlcy4gSGFsbG93YXkgYW5kIHRvIHNldmVyYWwgZ2FtYmxpbmcgaGFsbHMsIGVhY2ggd2l0aCAkMTAwIGJldCBsaW1pdHMuIApKb2huIFJvY2tlciwgb24gdGhlIG90aGVyIGhhbmQsIGNvbXBsZXRlbHkgZ2l2ZXMgaGltc2VsZiBhd2F5IGFzIGFuIGlnbm9yYW50IGJpZ290IGltbWVkaWF0ZWx5LiAKUGxheSBiZXR0ZXIgcG9rZXIgd2l0aCBjdXN0b21lcnMuIApQcmljZSBvZiBwb2tlciBpcyBnb2luZyB1cCBoZXJlIGEgbGl0dGxlIGJpdCBhbmQgSSBtaWdodCBwbGF5IG15IGhhbmQgYSBsaXR0bGUgdGlnaHRlciwgS3J5c3Rrb3dpYWsgc2FpZCBNb25kYXkgYWZ0ZXJub29uLiAoc29ycnkgZWFybHkgYmlyZHMsIHRoaXMgaXMgYSBuYXRpb25hbGx5IHRlbGV2aXNlZCBnYW1lKSBpbiB0aGUgZnJpZW5kbHkgY29uZmluZXMgb2YgdGhlIEh1bnRzbWFuIENlbnRlci4gCkRpZCB5b3UgZW5qb3kgcGxheWluZyBob2NrZXkgYXMgYSB5b3VuZ3N0ZXI/CkF1c3RyYWxpYSBoYXMgYSB2ZXJzaW9uIG9mIEZveCBOZXdzICAgaXRzIGNhbGxlZCBTa3kgTmV3cyAocnVuIGJ5IE11cmRvY2gpIGFuZCBzZXJ2ZXMgdXAgdGhlIHNhbWUgcmlnaHQgd2luZyBCUy4gWW91IGRpZCBoYXZlIHRvIHBheSBmb3IgdGhpcyBjaGFubmVsIGJ1dCBub3cgaXRzIGZyZWUuIApXZSByZXNlcnZlIHRoZSByaWdodCwgYXQgYW55IHRpbWUgYW5kIGZyb20gdGltZSB0byB0aW1lLCB0ZW1wb3JhcmlseSBvciBwZXJtYW5lbnRseSwgaW4gd2hvbGUgb3IgaW4gcGFydCwgdG8gbW9kaWZ5LCBzdXNwZW5kIG9yIGRpc2NvbnRpbnVlIHRoZSBTZXJ2aWNlczsgY2hhcmdlIGZlZXMgaW4gY29ubmVjdGlvbiB3aXRoIHRoZSBTZXJ2aWNlczsgbW9kaWZ5IGFuZC9vciB3YWl2ZSBhbnkgZmVlcyBjaGFyZ2VkIGluIGNvbm5lY3Rpb24gd2l0aCB0aGUgU2VydmljZXM7IGFuZC9vciBtYWtlIGF2YWlsYWJsZSBvcHBvcnR1bml0aWVzIHRvIHNvbWUgb3IgYWxsIHVzZXJzIG9mIHRoZSBTZXJ2aWNlcy4gWW91IGFncmVlIHRoYXQgbmVpdGhlciB3ZSBub3IgYW55IG9mIG91ciBhZmZpbGlhdGVzIHNoYWxsIGJlIGxpYWJsZSB0byB5b3Ugb3IgdG8gYW55IG90aGVyIHBlcnNvbiBmb3IgYW55IG1vZGlmaWNhdGlvbiwgc3VzcGVuc2lvbiBvciBkaXNjb250aW51YW5jZSBvZiB0aGUgU2VydmljZXMgb3IgYW55IGNvbXBvbmVudCB0aGVyZW9mLgpFaXRoZXIgb25lIG1heSBoZWxwIHRvIHNvbWUgZXh0ZW50IHRvIG1ha2UgeW91ciBob3JzZSBtb3JlIGNvbWZvcnRhYmxlIGFuZCBzZWxmIGJhbGFuY2VkLCBidXQgeW91IHJlYWxseSBzZWUgdGhlIGJlc3QsIG1vc3QgZXh0cmVtZSByZXN1bHRzIGlmIHlvdSB1c2UgYm90aCB0b2dldGhlciBhbmQgdXNlIHRoZW0gY29uc2lzdGVudGx5LiBJZiB5b3UgY29tZSB1cCB3aXRoIGEgbWFpbnRlbmFuY2Ugcm91dGluZSwgdGhlIHRoZXJhcGllcyBjYW4gaGVscCBwcmV2ZW50IGluanVyaWVzIGxpa2UgbXVzY2xlIHRlYXJzLCBwdWxscywgc3RyZXNzZWQgdGVuZG9ucywgYW5kIG11Y2ggbW9yZS4gOilFZGl0OiBUaGUgdHlwaWNhbCBtYWludGVuYW5jZSBzY2hlZHVsZSBJIHN1Z2dlc3QgdG8gY2xpZW50cyBpcyBvbmNlIGV2ZXJ5IDQgOCB3ZWVrcyB0byBnZXQgYSBtYXNzYWdlIGFuZCBhbiBhZGp1c3RtZW50IGZvciBob3JzZXMgaW4gYXZlcmFnZSB3b3JrLCBhbmQgb25jZSBldmVyeSAxIDMgd2Vla3MgZm9yIGEgaGlnaCBwZXJmb3JtYW5jZSBob3JzZS4oSWYgeW91IGhvcnNlIGhhcyBsb3RzIG9mIHNwYXNtcyBvciBhbGlnbm1lbnQgaXNzdWVzLCB0aGUgdGhlcmFwaXN0IG9yIGNoaXJvIG1heSBzdWdnZXN0IGEgbW9yZSBmcmVxdWVudCBzY2hlZHVsZSB1bnRpbCB0aGUgaXNzdWVzIGhhdmUgYmVlbiByZXNvbHZlZC4pIEEgbG90IG9mIG1hc3NhZ2UgdGhlcmFwaXN0cyBhbmQgY2hpcm9wcmFjdG9ycyBpbiBteSBhcmVhIGhhdmUgYSByZXR1cm4gY2xpZW50IGZlZSwgc28gaWYgeW91IGdldCBvbiBhIHJlZ3VsYXIgc2NoZWR1bGUgdGhleSBnaXZlIHlvdSBhIHByZXR0eSBnb29kIGRpc2NvdW50IHZlcnNlcyBwYXlpbmcgdGhlIG5vcm1hbCBmZWUgYW5kIHVzaW5nIHRoZWlyIHNlcnZpY2VzIG1heWJlIG9uY2UgZXZlcnkgMyA0IG1vbnRocy4gCjIsIDIwMTguUGV0ZXJzb24gZmlyc3Qgd29yZHMgdG8gbWUgd2VyZSwgYXJlIHdlIGdvaW5nIHRvIGdldCBkb25lPyBTYW5kZWZlciByZWNhbGxzLiB0aGUgc21hbGwgdGFsaywgd2hpbGUgaGUgYXRlIHR3byBzdGVha3MgYW5kIEkgYXRlIG9uZSB3ZSB3ZXJlIGJvdGggb24gbm8gY2FyYiBkaWV0cyB3ZSBjb3ZlcmVkIGFuIGVpZ2h0IGhvdXIgbWVldGluZyBpbiBsZXNzIHRoYW4gdHdvIGhvdXJzLiBtZWV0aW5ncyB3ZXJlIGFycmFuZ2VkIGluIEF1c3RpbiwgaW52b2x2aW5nIFNhbmRlZmVyIGFuZCBQZXRlcnNvbiB0ZWFtLCBhIHNtYWxsIGNvdGVyaWUgb2YgY29kZXJzIGFuZCBiaWcgdGhpbmtpbmcgcHN5Y2hvbG9neSBQaERzIHRhc2tlZCB3aXRoIGRldmVsb3Bpbmcgb25saW5lIGVkdWNhdGlvbmFsIHByb2dyYW1zLkFsbCB3ZW50IHdlbGwgZHVyaW5nIHRob3NlIFRleGFzIG1lZXRpbmdzLCBzbyB3ZWxsIHRoYXQgYnkgdGhlIHRpbWUgUGV0ZXJzb24gcGVvcGxlIHJldHVybmVkIHRvIFRvcm9udG8gdGhlIGlkZWEgb2YgZ2V0dGluZyBzb21ldGhpbmcgaW4gQXVzdGluIGhhZCBiZWNvbWUgdGhlIFBldGVyc29uIEZlbGxvd3NoaXAgYXQgQWN0b24uVGhlIEFjdG9uIFNjaG9vbCBvZiBCdXNpbmVzcyBpbiBBdXN0aW4sIFRleGFzLkNvdXJ0ZXN5IEFjdG9uIFNjaG9vbCBvZiBCdXNpbmVzc1BldGVyc29uIHNwb2tlIHdpdGggdGhlIEZpbmFuY2lhbCBQb3N0IGZyb20gWnVyaWNoLCB3aGVyZSBoZSB3YXMgKG1vc3RseSkgY29va2luZyBhbmQgY2FyaW5nIGZvciBoaXMgMjcgeWVhciBvbGQgZGF1Z2h0ZXIsIE1pa2hhaWxhLCBhcyBzaGUgcmVjb3ZlcnMgZnJvbSBhbmtsZSBzdXJnZXJ5LiAKRXhlcmNpc2Ugd2VsbC4gVGhpcyB3aWxsIG5vdCBvbmx5IHRvbmUgeW91ciBtdXNjbGVzIGJ1dCB3aWxsIGFsc28gYXdha2VuIHlvdXIgc2Vuc2VzLiAKT0JKRUNUSVZFOiBMb3cgdml0YW1pbiBEIHN0YXR1cyBoYXMgYmVlbiBhc3NvY2lhdGVkIHdpdGggbXVsdGlwbGUgc2NsZXJvc2lzIChNUykgcHJldmFsZW5jZSBhbmQgcmlzaywgYnV0IHRoZSB0aGVyYXBldXRpYyBwb3RlbnRpYWwgb2Ygdml0YW1pbiBEIGluIGVzdGFibGlzaGVkIE1TIGhhcyBub3QgYmVlbiBleHBsb3JlZC4gT3VyIGFpbSB3YXMgdG8gYXNzZXNzIHRoZSB0b2xlcmFiaWxpdHkgb2YgaGlnaCBkb3NlIG9yYWwgdml0YW1pbiBEIGFuZCBpdHMgaW1wYWN0IG9uIGJpb2NoZW1pY2FsLCBpbW11bm9sb2dpYywgYW5kIGNsaW5pY2FsIG91dGNvbWVzIGluIHBhdGllbnRzIHdpdGggTVMgcHJvc3BlY3RpdmVseS4uIApIZSBmZWVsIGV4dHJhIHZhbGlkYXRlZCwgYW5kIGkgd291bGRuIGJlIHN1cnByaXNlZCB0byBleHBlY3QgdGhlIGtpZHMgdG8gYmVjb21lcyB0YXJnZXRzIGZvciBtYW5pcHVsYXRpb24gaWYgeW91IHNldCB0aGlzIHByZWNlZGVudCBub3cuIApEbyB5b3VyIGZyaWVuZHMgcmF2ZSBhYm91dCB0aGUgbG9jYWwgYmFyIGFuZCBzd2VhciB0aGF0IGl0J3Mgb25lIG9mIHRoZSBiZXN0IHdheXMgdG8gbWVldCBzb21lb25lLCB5ZXQgeW91IG5ldmVyIGhhdmUgc3VjY2VzcyB0aGVyZT8gVGltaG9wIGlzIGFsc28gYSBzb2NpYWwgbmV0d29yayBmb3Igc2luZ2xlIGdpcmxzLCB3b21lbiwgbWVuLCBnYXlzIGFuZCBzZW5pb3JzIGZvciBiZXN0IGRhdGluZyBzaXRlcyBpbiBnZXJtYW55IHJvbWFuY2UuIApTb2FrIHVwIHRoZSBzdW5zaGluZSwgZ28gZm9yIGEgYmlrZSByaWRlIG9yIHRha2UgYSBsb25nIHdhbGsgZm9yIGEgcmVsYXhpbmcgc3Ryb2xsIGRvd24gdGhlIGJlYWNoLiAKVGhlIEJhbHRpbW9yZSBNYXJyaW90dCBXYXRlcmZyb250ICg3MDAgQWxpY2Vhbm5hIFN0LikKQnV0IGlmIGZvdXIgaGVsaXVtIG51Y2xlaSB3ZXJlIGZ1c2VkIGludG8gb3h5Z2VuLCB0aGUgbWFzcyB3b3VsZCBkZWNyZWFzZSBieSBvbmx5IC4xIHBlciBjZW50OyBhbmQgdGhlIGZ1c2lvbiBvZiB0d28gdHdvIHNpbGljb24gYXRvbXMsIGlmIGl0IGV2ZXIgY291bGQgb2NjdXIsIHdvdWxkIHJlbGVhc2UgbGVzcyB0aGFuIC4wMiBwZXIgY2VudGVyIG9mIHRoIGVtYXNzLiAKV2FudCB0byBzcGVuZCB0aGUgbmlnaHQgb3V0IHVuZGVyIHRoZSBzdGFycywgZ28gZm9yIGl0IS4gCjopIFdlIHdpbGwgYWx3YXlzIGFpbSB0byBwbGVhc2UgYXQgYW4gQSsrIGxldmVsLiBFc3BlY2lhbGx5IGJlY2F1c2UgeW91ciBraW5kIHdvcmRzIG1ha2UgaXQgYWxsIHdvcnRoIGl0ISEgSWYgd2UgZG9uIHNlZSB5b3UgYnkgdGhlbiwgd2UgaG9wZSB5b3UgaGF2ZSBhIEZBQlVMT1VTIE5ldyBZZWFyISBBa2hpbGEuIApJdCB3b3VsZCBiZSBtZSBhbmQgdGhlIGJhYnkuLiAKSSBsaXZlZCBpbiBydXJhbCBpb3dhIChzdGV2ZSBraW5ncyBkaXN0cmljdCkgZHVyaW5nIHRociAyMDE2IGVsZWN0aW9uLiBUaGlzIHNlbnRpbWVudCB3YXMgdmVyeSBjb21tb24uIApPaCwgSSB0YWtlIGl0IGJhY2suIEFkcmlhbiBoYXMgYSBiYW5kYWlkICAgeWVzLCBsaXRlcmFsbHkgYSBiYW5kYWlkLCBvbiBoaXMgZm9yZWhlYWQsIG92ZXIgaGlzIHJpZ2h0IHRlbXBsZS4gClRoZXkgZ290IGhpbSBzb21lIHJlYWxseSBjb29sIGdlYXIsIGxpa2UgYSBkYWRkeSBjaGFuZ2UgYmFnIGFuZCBmdW5reSBiYWJ5IGJvdHRsZXMgaW4gY2Ftb2ZsYWdlIGFuZCB3aXRoIHNrdWxscyBvbi4gClN0YXJzIGdvdCBkZWZpbmV0bHkgYSB3aG9sZSB0ZWFtIGxvb2tpbmcgZm9yIHRoZXNlIHRoaW5ncy4gQm90aCBrZWVwaW5nIGVhciB0byB0aGUgZ3JvdW5kIGFyb3VuZCBwbGF5ZXJzIGFzIHdlbGwgYXMgc29mdHdhcmUgdGVhbS4KSG93IHRvIFRyYWluIFlvdXIgRHJhZ29uOiBUaGUgSGlkZGVuIFdvcmxkIGlzIHRoZSB3ZWFrZXN0IGNoYXB0ZXIgb2YgdGhlIHRocmVlIG1vdGlvbiBwaWN0dXJlIGFkYXB0YXRpb25zIG9mIENyZXNzaWRhIENvd2VsbCdzIHNlcmllcyBhbmQsIGRlc3BpdGUgdGhlIHN0cm9uZyBhbmltYXRpb24sIHRoZXJlJ3MgYSBzZW5zZSB0aGF0IHRoZSBzdG9yeSBoYXMgcnVuIG91dCBvZiBzdGVhbS4gQWx0aG91Z2ggY2hpbGRyZW4gbWF5IGVuam95IHRoaXMgb25lIGFzIG11Y2ggYXMgdGhlIG90aGVycyAodGhlIGxpZ2h0ZXIgdG9uZSwgaW4gZmFjdCwgbWF5IG1ha2UgaXQgdGhlIGZhdm9yaXRlKSwgYWR1bHRzIGFyZSBsaWtlbHkgdG8gZmluZCBpdCBsZXNzIGFic29yYmluZy4gCk1hZGFiYSBoYXMgYmVlbiBpbmhhYml0ZWQgZm9yIDQsNTAwIHllYXJzISBXZSBzYXcgdGhlIHNpZ2h0cyB0aGVyZSBhbmQgdGhlbiB3ZW50IGZvciBhIGxhdGUgbHVuY2guIApQcm9kdWNlcnMgd2FudGVkIHRvIHNlZSBpZiByYWNlIHBsYXllZCBhIGRpZmZlcmVuY2UsIGJ1dCB0aGV5IGFsc28gaGFkIGFuIGlkZWEgdGhhdCBjbGFzcyBtaWdodCBiZSBpbXBvcnRhbnQgYXMgd2VsbC4gSW4gb25lIHNjZW5lIHRoZSBhY3RyZXNzZXMgbG9va2VkIGJydWlzZWQsIGJ1dCBtaWRkbGUgY2xhc3MuIApNeSBob3VzZSBpcyBpbiB0aGUgbm9ydGhlYXN0IHNlY3Rpb24gb2YgTW9yaW9oLCB3aGVyZSBhbGwgdGhlIGFwYXJ0bWVudHMgYXJlLCBhbmQgSSBhbSBub3QgbWFycmllZC4gCldlIHdhbnQgdG8gc3RheSAod2l0aCkgdGhlIHN0YXR1cyBxdW8/IEl0IGFsbW9zdCBsaWtlIHRoYXQgdGhlIHF1ZXN0aW9uIGJlaW5nIGFza2VkIHdpdGggdGhlc2UgaW1wb3J0YW50IGRlY2lzaW9ucyBpbiBmcm9udCBvZiB1cywgSG9wa2lucyBzYWlkLgpUaGV5IGxvb2sgbGlrZSBpcnJpdGF0aW9uIGFuZCB0aGV5IGtpbmRhIGhhdmUgcHVzIGluIHRoZW0gYnV0IHRoZXkgbmV2ZXIgZmxhcmUgdXAgbW9yZSB0aGFuIHRoZXNlIHNtYWxsIHB1bXBzLiBTb21lIG9mIHRoZW0gY29tZSB0byBhIHNtYWxsIHdoaXRlaGVhZCwgYnV0IHNvbWUganVzdCBzdGF5IHNtYWxsIGFuZCByZWQuIApBZnRlciBiYWNrIHRvIGJhY2sgNSA3IHNlYXNvbnMsIFV0YWggaXMgYm93bGluZyBvbmNlIGFnYWluIGR1cmluZyB0aGUgaG9saWRheXMuIFdoaWxlIG5vIGludml0YXRpb24gaGFzIGJlZW4gZm9ybWFsbHkgZXh0ZW5kZWQgeWV0LCBpdCBhcHBlYXJzIHRoYXQgdGhlIFV0ZXMgbWF5IGJlIGhlYWRlZCB0byB0aGUgU3VuIEJvd2wgaW4gRWwgUGFzbywgVGV4YXMsIG9uIERlYy4gMjcuIApNY0xlYW4gc3BlbnQgZml2ZSB5ZWFycyBpbiBKYXBhbiBpbiB0aGUgbGF0ZSBiZWZvcmUgc3R1ZHlpbmcgYXJjaGl0ZWN0dXJlLgpDb2xsZWdlIG9mIExpYmVyYWwgQXJ0cwpFdmVyeSBvdGhlciBnYW1lIG9uIG15IHN5c3RlbSBpcyB3b3JraW5nIGZpbmUuIENhbiB5b3UgaGVscCBtZSBnZXQgdGhpcyByZXR1cm5lZCBhbmQgcmVmdW5kZWQsIHBsZWFzZT8uIApSZWNlbnRseSwgdGhvdWdoLCBoZSBiZWd1biB0byByZWFsaXplIGhvdyBsZWZ0IG91dCBoZSBpcywgYW5kIG9uY2UgdGhhdCBiZWdhbiB0byBoYXBwZW4gb3ZlciB0aGUgbGFzdCBmZXcgbW9udGhzLCBJIGJlZ2FuIGxvb2tpbmcgZm9yIHdheXMgaGUgY291bGQgaW50ZXJhY3Qgd2l0aCB0aGUgc2FtZSBraWQocykgb3ZlciBhIGxvbmdlciBwZXJpb2Qgb2YgdGltZSB0byBkZXZlbG9wIGF0IGxlYXN0IG9uZSBvciB0d28gZnJpZW5kc2hpcHMgdGhhdCBhcmUgYSBiaXQgZGVlcGVyIChyZWxhdGl2ZWx5IHNwZWFraW5nKS4uIApCdXQgbWFzcyBiaXJkIGRlYXRocyBlYXJsaWVyIHRoaXMgeWVhciBoYXZlIGxlZCByZXNlYXJjaGVycyB0byB3b3JyeSBhYm91dCB0aGUgZWZmZWN0cyBvZiBjbGltYXRlIGNoYW5nZSBoZXJlLCBhIDIwIG1pbnV0ZSBib2F0IHJpZGUgZnJvbSBtYWlubGFuZCBXYWxlcy4KTWFueSBhIHBva2VyIHBsYXllciBoYXMgbG9zdCBhIGdvb2QgcG9ydGlvbiBvZiBoaXMgb3IgaGVyIGJhbmtyb2xsIGF0IGJsYWNramFjaywgY3JhcHMsIHBhaSBnb3csIGV0Yy4gCkR5aW5nIExpZ2h0IFtSRUxPQURFRF0gRlVMTCBJbmRpciBUb3JyZW50IEhJWkxJIEluZGlyIC4gMjYgVGhuZyBObSAyMDE1IC4gRHlpbmcgTGlnaHQgVXBkYXRlIHYxLjIuMSBJbmNsIERMQyBSRUxPQURFRC4gCkFuZCB0aGUgbGlzdCBnb2VzIG9uLiBpcyBleWVpbmcgYSBzdW1taXQgYXMgc29vbiBhcyBtaWQgTWFyY2ggYmV0d2VlbiBUcnVtcCBhbmQgaGlzIENoaW5lc2UgY291bnRlcnBhcnQsIFByZXNpZGVudCBYaSBKaW5waW5nLCB3aXRoIFdoaXRlIEhvdXNlIGVjb25vbWljIGFkdmlzZXIgTGFycnkgS3VkbG93IGhhaWxpbmcgYSBwb3RlbnRpYWxseSBkZWFsLiBJZiBhbiBhZ3JlZW1lbnQgaXMgcmVhY2hlZCwgdGhlIHJlbGllZiBtYXkgYmUgc2hvcnQgbGl2ZWQgaWYgQnJpdGFpbiBjcmFzaGVzIG91dCBvZiB0aGUgRVUgb24gTWFyY2ggMjkgd2l0aG91dCBhIGRpdm9yY2UgZGVhbCwgY29tcG91bmRpbmcgYSBicm9hZGVyIHNsb3dkb3duIGFjcm9zcyB0aGUgcmVnaW9uLgpEYWlseSBtYXNzYWdlIG9mIGNhcnJpZXIgb2lsIGludG8gc2NhbHAgd2l0aCBvciB3aXRob3V0IGEgbWl4dHVyZSBvZiBlc3NlbnRpYWwgb2lscy4gTW9yZSB0aGFuIG9uZSB0cmlhbCBmb3IgZWFjaCBpbnRlcnZlbnRpb24pIHBhcnRpY2lwYW50cyByZWNlaXZlZCB2YXJpb3VzIGZvcm1zIG9mIG1hc3NhZ2Ugd2l0aCBvciB3aXRob3V0IHRoZSBhZGRpdGlvbiBvZiBvaWxzIG9yIGFyb21hcyB0byB0aGUgZm9vdCwgbGltYnMsIGhlYWQsICdhcmVhcyBhdmFpbGFibGUgdG8gdGhlIHRoZXJhcGlzdCcsIG9yIGZ1bGwgYm9keS4gCk92ZXIgbWFueSB5ZWFycywgd2UgaG9uZWQgb3VyIGRpc2NpcGxpbmUgYW5kIHNlbGYgY29uZmlkZW5jZSwgYW5kIGxlYXJuZWQgYSB3YXkgb2YgdGhpbmtpbmcgdGhhdCByZWxpZWQgb24gc3RyYXRlZ3ksIHN1cnByaXNlIGFuZCBhZGFwdGFiaWxpdHkuIApUaGF0IHdhcyBuZWFybHkgMjAgeXJzIGFnbyBhcyBhIGxhbmd1YWdlIGxvdmVyLCBJIHRoaW5rIG9mIGl0IG9mdGVuIHdoZW4gc3R1ZHlpbmcgbGFuZ3VhZ2VzLiBJIGZyZXF1ZW50bHkgdHJ5IHRvIG5vdGljZSB3aGF0IEVuZ2xpc2ggc291bmRzIGxpa2UgZXZlbiB0aG91Z2ggaXQgbXkgbW90aGVyIHRvbmd1ZS4gSXQgcmVhbGx5IGRvZXMgaGF2ZSB0aG9zZSBoYXJzaCBzb3VuZHMgbGlrZSBHZXJtYW4sIHJhdGhlciB0aGFuIFNwYW5pc2ggb3IgRnJlbmNoIChJIGFsc28gc3R1ZGllZCkgdGhhdCB0ZW5kcyB0byByb2xsIG9mIHRoZSB0b25ndWUgbW9yZSByYXRoZXIgdGhhbiBoYXZlIGhhcnNoZXIsIGNob3BweSBzb3VuZHMuLiAKTm90aGluZyBpbiB0aGUgY29tbWVudHMgSSBtYWRlIGluIGVpdGhlciBvZiB0aGVzZSB0aHJlYWRzIHdlcmUgcnVkZSBvciBzYXJjYXN0aWMuIEkgdG9vayB0aW1lIHRvIHdyaXRlIHRob3VnaHRmdWwgcmVwbGllcyB0aGF0IHdvdWxkIGdpdmUgcGVvcGxlIG1lYW5pbmdmdWwgaW5mb3JtYXRpb24gdG8gY29uc2lkZXIuIFlldCBldmVuIHN0aWxsLCB0aG9zZSBjb21tZW50cyBhcmUgaGVhdmlseSBkb3dudm90ZWQuIApQcm9ibGVtcyBhcmlzZSB3aXRoIHRoZXNlIHR3byB0eXBlcyBjb2xsaWRlLiBUaGUgb2ZmZXIgY3VsdHVyZSBzZWVzIHRoZSBhc2sgY3VsdHVyZSBhcyBiZWluZyBwdXNoeSBhbmQgZW50aXRsZWQuIEFuZCBpZiB0aGV5IGdpdmUgb2ZmIHRoYXQgcmVhY3Rpb24sIHRoZSBhc2sgY3VsdHVyZSB0eXBlcyB0ZW5kIHRvIGdvLCAibm8gbmVlZCB0byBiZSBzbyBzZW5zaXRpdmUuCkl0IHJlYWxseSBtZWFudCBhIGxvdC4gRXNwZWNpYWxseSBzaW5jZSB0aGUgdGhlbiBib3lmcmllbmQgd2FzIGNvbXBsZXRlbHkgb2JsaXZpb3VzLi4gCkkgc3RpbGwgU1VQRVIgbmV3IHRvIHNleCwgYnV0IG9uZSB0aGluZyBteSBGV0IgYW5kIEkgZG8gdGhhdCBuZWF0IGlzIHdlIGhhbmcgb3V0IGFuZCB0b3VjaCwgZ2V0IHNvbWUgZm9yZXBsYXksIGhlIGdldHMgbWUgb2ZmIHdpdGggaGlzIGZpbmdlcnMsIGFuZCB0aGVuIHdlIGhhdmUgc2V4LiBNeSB2YWdpbmEgaXMgcmVhbGx5IHRpZ2h0IHJpZ2h0IGF0IHRoZSBvcGVuaW5nIChoZW5jZSBubyBzZXggZXZlciB0aWwgYSBmZXcgbW9udGhzIGFnbyAgIHRvbyBwYWluZnVsIGFuZCBJIGhhZCBvdGhlciBzaGl0IGluIG15IGxpZmUgZ29pbmcgb24pLCBzbyBhbGwgdGhlIHRpbWVzIHdlIGhhZCBzZXggd2l0aG91dCBzb21lIGV4cGxvcmF0b3J5IGZpbmdlcnMgZmlyc3QsIEkgYmxlZWQuIApUaGUgbWFpbiByZWFzb24gZm9yIHJlbW92YWwgdGhvdWdoLCBhcyBzdGF0ZWQgZWFybGllciBpcyB0aGF0IGl0IHdhcyBzaW1wbHkgc2hvd2luZyB5ZXQgYW5vdGhlciBjaGVhdGluZyB2aWRlbywgYW5kIHdhcyBhIGR1cGxpY2F0ZSB0b3BpYy4gCk9yIGl0IG1lYW5zIGFkbWl0dGluZyB0aGV5IGhhdmUgZmxhd3Mgd2hpY2ggaXMgZXF1YWxseSBpbnRvbGVyYWJsZS4uIApPYmFtYSwgaGFpbGVkIGJ5IG1hbnkgc3VwcG9ydGVycyBhcyBzb21lb25lIHdobyBjYW4gcnVsZSBmcm9tIHRoZSBtaWRkbGUsIGhhcyBzaG93biBvbmNlIGFnYWluIHdoYXQgYSBtdWRkbGVkIG1lc3Mgc3VjaCBhIHN0cmF0ZWd5IG9mIGNvbXByb21pc2UgY3JlYXRlcy4gVGhlIFByZXNpZGVudCBuZWFybHkgbmV1cm90aWMgZGVzaXJlIHRvIG5vdCBvZmZlbmQgYW55b25lLCBhbmQgdGhlcmVieSBtYW5hZ2luZyB0byBvZmZlbmQgZXZlcnlvbmUsIG1ha2VzIE9iYW1hIGxvb2sgYXMgaWYgaGUgaGFzIGEgYmFja2JvbmUgbWFkZSBvZiBtYXJzaG1hbGxvd3MsIG5vdCBldGhpY2FsIHByaW5jaXBhbHMuIFRoZSBsYXRlc3QgZGlzYXN0ZXIgb3ZlciBnYXkgcmlnaHRzIGlzIGEgY2FzZSBpbiBwb2ludC4uIApUaGUgZG9jdG9ycyB3ZXJlIGF0IGEgbG9zcyBhcyB0byB3aGF0IHRvIGRvLCBzbyBzaGUgc3VnZ2VzdGVkIHRoYXQgdGhleSB0cnkgdGhlIHRyZWF0bWVudCB3aXRob3V0IHRoZSBhbmVzdGhlc2lhLiAKQ2V0IGFycm9uZGlzc2VtZW50IGVzdCBsZSBzZXVsICBQYXJpcyAgYXZvaXIgY2hhbmcgZGUgbWFqb3JpdCBlbiAyMDE0LCBwYXNzYW50IGQndW5lIGdhdWNoZSAgbW9kcmUgICB1bmUgZHJvaXRlICBtb2RyZSAsIERlbHBoaW5lIEJya2xpIChMUikgbCdlbXBvcnRhbnQgYWxvcnMgYXZlYyB1bmUgdHJzIGNvdXJ0ZSBtYWpvcml0LiBDZXR0ZSBtYWpvcml0IGhvbW9nbmUgVU1QIFVESSBlbiAyMDE0IGEgcGx1cyBvdSBtb2lucyBjbGF0LiAKTm8gbGltaXQgUG9rZXIgYmFua3JvbGwuIEJlaW0gTm8gbGltaXQgZ2lidCBlcyBrZWluZSBTdGFuZGFyZCBSZWdlbC4gQWxzIEZhdXN0cmVnZWwga2FubiBtYW4gdm9uIG1heGltdW0gYnV5IGlucyB2b24gMjAgMjUgYXVzZ2VoZW4uIFdlbm4gZHUgZGVyIE1laW51bmcgYmlzdCwgZHUgbXNzdGVzdCA1MDAgbWF4IGJ1eSBpbiBzcGllbGVuIHVtIHp1IHZlcmRpZW5lbiwgZGFubiBlbnRzcHJjaGUgZGllcyBlaW5lciAxMiw1MDAgYmFua3JvbGwuClN3aWZ0LCB3aG8gd2FzIHNlY29uZCB0byBCZXlvbmNlIGluIEdyYW1teSBub21pbmF0aW9ucyB3aXRoIGVpZ2h0IG5vZHMsIGFsc28gd29uIGJlc3QgY291bnRyeSBhbGJ1bSBhbW9uZyBoZXIgb3RoZXIgYXdhcmRzLiBUaGUgdmljdG9yeSBjYXBwZWQgYW4gYW1hemluZyBydW4gZm9yIFN3aWZ0LCB3aG9zZSAiRmVhcmxlc3MiIGlzIG9ubHkgaGVyIHNlY29uZCBhbGJ1bS4gCkFsbCBGT0lzIG11c3QgYmUgbWFkZSBpbiB3cml0aW5nIHRvIHRoZSAuIFRoZSBVbml2ZXJzaXR5IGhhcyAyMCB3b3JraW5nIGRheXMgaW4gd2hpY2ggdG8gZGVhbCB3aXRoIHRoZSByZXF1ZXN0LgpLZXJyIGFuZCBMZWVwZXIgd2VyZSBjaG9zZW4gdG8gcmVjZWl2ZSB0aGUgb3JnYW5zIG9wZXJhdGlvbiB0byBkaW1pbmlzaCBjaGFuY2VzIG9mIHJlamVjdGlvbi4gCkluIG1vc3QgcGxheWVyIHJld2FyZHMgY2x1YnMsIHBsYXllcnMgZWFybiBwb2ludHMgZm9yIHBsYXkgYW5kIGNhbiByZWRlZW0gdGhlIHBvaW50cyBmb3IgY29tcHMuIFdoZW4gdGhlIGNhcmQgaXMgaW5zZXJ0ZWQgaW50byBhIHJlYWRlciBhdCBhIHNsb3Qgb3IgdmlkZW8gcG9rZXIgbWFjaGluZSwgYSBkaXNwbGF5IG9uIHRoZSByZWFkZXIgbWlnaHQgc2F5IHNvbWV0aGluZyBsaWtlLCAiV2VsY29tZSwgbWVtYmVyLiBZb3UgaGF2ZSA0MiBwb2ludHMuIApQZXJoYXBzIGhlIGJlZW4gYnVybmVkIGJ5IHByb3N0aXR1dGVzIGJlZm9yZSwgd2hvIHRyaWVkIHRvIGV4cGxvaXQgaGltIGZvciBtb3JlIG1vbmV5IGFmdGVyIHRoZXkgZmlndXJlZCBvdXQgd2hvIGhlIHdhcywgc28gaGUgcHJlZmVycyB0aGlzIG1hc3NhZ2UgcGFybG9yIGFycmFuZ2VtZW50IGJlY2F1c2UgaGUgcGVyY2VpdmVzIGl0IGFzIHNhZmVyLiAKU28geW91IGFkZCAkMzMgYmlsbGlvbiAobW9zdGx5IGluIGFkdmVydGlzaW5nIGRvbGxhcnMpIHRvIGVsZWN0aW9ucyBlYWNoIHllYXIuIFRoYXQgY2FtcGFpZ24gbW9uZXkgZW5kcyB1cCBtb3N0bHkgaW4gdGhlIGhhbmRzIG9mIG1lZGlhIGNvbXBhbmllcywgbGlrZSBGYWNlYm9vay4KVW5lIGNvbnRlc3RhdGlvbiBkZSBzb24gcHJvamV0IGRlIGxvaSBzdXIgbGEgcHJvc3RpdHV0aW9uCkRvbid0IGJlIG9uZSBvZiB0aG9zZSBtYW5hZ2VycyB3aG8gaW5hZHZlcnRlbnRseSBtYWtlcyBhbiBlbXBsb3llZSBmZWVsIGxpa2UgdGhleSdyZSBib3RoZXJpbmcgeW91IHdoZW4gdGhleSBicmluZyB1cCBhIHF1ZXN0aW9uIG9yIGNvbmNlcm4uIEluc3RlYWQgb2Ygc2VlaW5nIGl0IGFzIGFub3RoZXIgY3Jpc2lzIHRvIG1hbmFnZSwgbG9vayBhdCBpdCBhcyBhbiBvcHBvcnR1bml0eSB0byBzaG93IHlvdXIgZW1wbG95ZWUgaG93IG11Y2ggeW91IHdhbnQgdGhpcyBvcmdhbml6YXRpb24gdG8gYmUgYSBmdWxmaWxsaW5nIHBsYWNlIHRvIHdvcmsuCkxvY2FsIHN1cHBvcnQgbGlrZSB0aGUgQXJ0IFdhbGssIEdST1cgTG9jYWwgU291dGggVGV4YXMsIENDIEJsaXNzIEJveCwgRG93bnRvd24gRmFybWVycyBNYXJrZXQsIGV0Yy4gWW91IHRhbGsgYWJvdXQgZG93bnRvd24gd2UganVzdCBoYWQgQ29ycHVzIENocmlzdGkgRGluZSBEb3dudG93biwgcHJvbW90aW5nIGVhdGluZyBhdCBsb2NhbCByZXN0YXVyYW50cyBpbiBvdXIgZG93bnRvd24gYXJlYS4gSGVyZSBpcyBhIGxpc3Qgb2Ygc29tZSBvZiB0aGUgdXBjb21pbmcgdGhpbmdzIGZvciBkb3dudG93biBhcyB3ZWxsLgpUaGUgJDE1LDAwMCBpbnZlc3RtZW50IGFjY291bnQgd2l0aCBubyBmdXJ0aGVyIGNvbnRyaWJ1dGlvbnMgYnV0IHRoZSBzYW1lIGdyb3d0aCBhc3N1bXB0aW9ucyB3b3VsZCBiZWNvbWUgJDM1LDM0OC4gVGhlIGNhc2ggYmFsYW5jZSBvZiAkNzcsNDUwIHdpdGggdGhlIHNhbWUgYXNzdW1wdGlvbnMgd291bGQgZ3JvdyB0byAkMTgyLDUxNi4uIApOZXcgY2FzaW5vIGNydWlzZSB0byBzYWlsIG91dCBvZiBNYXlwb3J0CklmIHRoaXMgdG93biBjYW4gbGlrZSBtZSwgd2hlcmUgb24gZWFydGggY291bGQgSSBwb3NzaWJseSBmaW5kIHNvbWUgdGhhdCBjYW4/IiBUaGVzZSB3ZXJlIG15IHRob3VnaHRzLiAKRGV6ZSBTVEFSUlQgYW5hbHlzZXMgd29yZGVuIG9uZGVyc3RldW5kIGRvb3IgYmlqYmVob3JlbmQgYmV3aWpzLiAKT25seSBsYXRlciwgb25jZSBJIGJlY2FtZSBzdXNwaWNpb3VzIHRoYXQgbm8gbWFsZmVhc2FuY2Ugd2FzIHRha2luZyBwbGFjZSwgZGlkIEkgZXhhbWluZSB0aGUgY29udHJhY3RzIGFuZCB0aGUgd29yayByZW5kZXJlZC4gVGhlIGNvbnRyYWN0b3Igd2FzIHRvdGFsbHkgaW4gdGhlIHJpZ2h0IGFuZCBJIHdhcyBmdXJpb3VzIGF0IHRoZSBwZXJzb24gSSBoZWxwZWQgdG8gInR1cm4gaW4iIHRoZSBjb250cmFjdG9yIGZvciB0aGlzIGFsbGVnZWQgZnJhdWQuLiAKVGhlIHByb251bmNpYXRpb24gc3R1ZmYgaXMgYWN0dWFsbHkgbm90IHZlcnkgY29tcGxpY2F0ZWQuIApKdXN0IHN1cGVyIHVuaW50ZXJlc3RlZCBhdCB0aGlzIHBvaW50LiBNaXNzIHRoZSBvbGQgZGF5cyB3aGVuIHRoZSB3aG9sZSBjb25jZXB0IG9mIHRoZWlyIHZpZGVvcyB3YXMgc2ltcGx5IHRyaXBweSBsaWdodGluZyBhbmQgcHJvamVjdGlvbnMgYW5kIHRoZW0gcGxheWluZy4gCkluZHVzdHJpYWwgdGVjaG5vbG9naWNhbCBhcnQKWWVzLCB5b3UgZmFsbCBvZmYgdGhlIGJhbGFuY2UgYmVhbSBvY2Nhc2lvbmFsbHkgYnV0IHlvdSBnb3R0YSBwdXQgeW91cnNlbGYgYmFjayBvbiBpdCBhbmQga2VlcCBnb2luZy4gCiJJdCdzIGludGVyZXN0aW5nIHNlZWluZyB3aGF0IGhhcHBlbnMgd2hlbiB0aGV5IHRyeSB0byB0YWtlIGEgYm9vayBhbmQgdHVybiBpdCBpbnRvIGEgbW92aWUsIiBoZSBzYWlkIG9mIHRoZSBleHBlcmllbmNlIG9mIHNlZWluZyBoaXMgd29yayBhZGFwdGVkIGZvciB0aGUgc2NyZWVuLiAiQmVjYXVzZSBldmVudHVhbGx5IHRoZXkgZmlndXJlIG91dCB0aGF0IGEgbW92aWUgaXMgbm90IGEgYm9vay4gQSBtb3ZpZSBpcyBhIHNob3J0IHN0b3J5LiAgVGhleSd2ZSB3b3JrZWQgYmVjYXVzZSB0aGUgZmlsbW1ha2VycyBzYWlkLCAnSSdtIGdvaW5nIHRvIGdldCByaWQgb2YgdGhlIGJvb2sgYW5kIGRvIHdoYXQgSSB3YW50IHRvIGRvLiciClRoZSBkb3dudG93biBjYXNpbm8gaXMgaG91c2VkIGluIHRoZSBIaWdiZWUgQnVpbGRpbmcsIGJ1aWx0IGluIDE5MzEgYXMgYSBkZXBhcnRtZW50IHN0b3JlLiAKSXMgdGhlIEFudGljaHJpc3QgTm93IG9uIHRoZSBXb3JsZCBTdGFnZQpBIHF1aWNrIGJhdGhyb29tIHVwZGF0ZS4gSXQgY29taW5nIGFsb25nLCBidXQgc3RpbGwgbm90IGRvbmUuIENoZWNrIG91dCB0aGUgcHJlc2VudCBkYXkgYmVmb3JlIGFuZCBhZnRlci4gU3RpbGwgbmVlZCBzb21ldGhpbmcgZm9yIHRoZSBmbG9vciBhbmQgdGhlIHdpbmRvdy4gVHJ5aW5nIHRvIGZpZ3VyZSBvdXQgd2hhdCB0byBkbyB3aXRoIHRoZSBvbGQsIGJ1aWx0IGluIGNlcmFtaWMgdG9vdGhicnVzaCBhbmQgc29hcCBob2xkZXJzLiBOZWVkIG5ldyB0b3dlbHMuIEJ1dCBpdCBTTyBtdWNoIGJldHRlciB0aGFuIHdoYXQgaXQgd2FzLiBDaGVjayBpdDoKUm9iZXJ0IFRpYmJvLCBsZWZ0LCBhbmQgRWR3YXJkIFNub3dkZW4gaW4gTW9zY293IG9uIEp1bHkgMjYsIDIwMTYuIGF0dGVtcHRzIHRvIGFycmVzdCBTbm93ZGVuIGNvdWxkIGhhdmUgYmVlbiByaXBwZWQgZnJvbSB0aGUgcGFnZXMgb2YgYSBzcHkgdGhyaWxsZXIuCkluIHRoaXMgc2VjdGlvbiwgd2Ugd2lsbCBzaG93IGhvdyB5b3UgY2FuIHJlZHVjZSB5b3VyIGNhdCdzIHJpc2sgZm9yIGN5c3RpdGlzLiAKVGhlIGZpZ3VyZXMsIGZyb20gTlNXIExpcXVvciBhbmQgR2FtaW5nLCBzaG93IHRoYXQgY2x1YnMgdHVybmVkIG92ZXIgYWxtb3N0IGZvdXIgdGltZXMgYXMgbXVjaCBhcyBwdWJzIGluIHRocmVlIG1vbnRocywgd2l0aCB0aGUgZm9ybWVyIHR1cm5pbmcgb3ZlciAkNDg0LjggbWlsbGlvbi4gCk51biBoYWJlIGljaCBiZWkgZGVyIFN1Y2hlIHp1IEFESFMgdW5kIFBva2VyIChtZWluZW0gZGVyemVpdGlnZW4gSHlwZXJmb2t1cykgZGVuIFByb2ZpIE1pa2UgTWF0dXNvdyBnZWZ1bmRlbi4gRGVyIGltbWVyaGluIHNpY2ggYWxzIEFESEQsIEJpcG9sYXIgdW5kIFN1Y2h0a3Jhbmsgb3V0ZXRlIHVuZCBlaW4gQnVjaCBkYXJiZXIgZ2VzY2hyaWViZW4gaGF0LiBNYXR1c293IE1vdXRoIGlzdCBlaW5lciBkZXIgYmVzdGVuIFBva2VyIFNwaWVsZXIgZGVyIFdlbHQgZ2V3ZXNlbiwgd2FzIHNpY2ggZWluZXJzZWl0cyBpbiBzZWluZW0gUHJlaXNnZWxkIGJ6dy4gCkFzIGEgd2hpdGUgbWFuLG9mIEdlcm1hbmljIGFuZCBDZWx0aWMgYW5jZXN0cnksIEkgY2FuIGVtcGF0aGl6ZSB3aXRoIHdoYXQgeW91IHNhaWQuIEkgYW0gcHJvdWQgb2YgbXkgY3VsdHVyZSBhbmQgbm90IHRoZSBsZWFzdCBiaXQgcmFjaXN0LCBidXQgZm9yIHNvbWUgcmVhc29uIHBlb3BsZSB0YWtlIHRoYXQgcHJpZGUgaW4gdGhlIHdyb25nIHdheS4gSXQgaW50ZXJlc3RpbmcgdGhhdCBoZXJlIGluIEFtZXJpY2EgIkJyb3duIFByaWRlIiBhbmQgIkJsYWNrIFByaWRlIiBhcmUgdG90YWxseSBhY2NlcHRhYmxlLCBidXQgaWYgSSB3ZXJlIHRvIGhhdmUgIldoaXRlIFByaWRlIiBhbnl3aGVyZSBpdCB3b3VsZCBiZSBjb25zaWRlcmVkIHJhY2lzdC4gSSBtZWFuIEkgZ2V0IHRoZSBzZW50aW1lbnQgYW5kIHdvdWxkIG5ldmVyIHVzZSB0aGF0IHRlcm0gYmVjYXVzZSBXaGl0ZSBTdXByZW1hY2lzdHMsIGEgdGlueSBwZXJjZW50YWdlIG9mIHdoaXRlIHBlb3BsZSwgaGF2ZSBydWluZWQgaXQgZm9yIGV2ZXJ5b25lLiBGdWNrIHRoZW0uIEkgd291bGQgcmF0aGVyIHdlIGNvdWxkIGp1c3QgaGF2ZSBwcmlkZSBpbiBodW1hbml0eSwgYnV0IHRoYXQgd2lsbCByZXF1aXJlIGEgY2hhbmdlIGluIHRoaW5raW5nIHNwZWNpZXMgd2lkZS4KVGhleSBtYXkgYWxzbyBiZSBkaWZmZXJlbnQgZnJvbSBvbmUgdHJlYXRtZW50IHRvIHRoZSBuZXh0LiAKVml0byB3YXMgdGhlcmUsIGJ1dCBoZSB3YXNuIHRoZXJlIHBoeXNpY2FsbHkuIFRoZSB0aG91Z2h0IHByb2Nlc3MgY2hhbmdlZCBvbmNlIEphY2tpZSBKci4gCktub3cgeW91ciBib3VuZGFyaWVzLiBEb24ndCBvdmVyc3RlcCBhbmQgYXNrIHlvdXIgZW1wbG95ZWVzIGFib3V0IGFueXRoaW5nIHRvbyBwZXJzb25hbCwgc3VjaCBhcyByZWxpZ2lvbiwgcG9saXRpY3MsIG9yIHBlcnNvbmFsIHJlbGF0aW9uc2hpcHMuIFlvdSBjYW4ga2VlcCB1cCBhIGZyaWVuZGx5IHJhcHBvcnQgd2l0aG91dCBiZWluZyBpbnZhc2l2ZS4KV2Ugc3RvbmRlbiBwYXMgb20gOHUgb3AsIGVuIGhldCB3YXMgZGFuIG9vayBhbCBuYSAxMHUgdG9lbiB3ZSBoZXQgUm9kZSBQbGVpbiBvcHdhbmRlbGRlbi4gT3AgaGV0IHByb2dyYW1tYSBzdG9uZCBoZXQgTGVuaW4gTWF1c29sZXVtOiBoZXQgaG9la2lnZSByb2RlIGdlYm91d3RqZSBvcCBoZXQgUm9kZSBQbGVpbiB3YWFyIGRlIHZvb3JtYWxpZ2UgU292amV0IGxlaWRlciBhbCBzaW5kcyAxOTI0IGdlYmFsc2VtZCBsaWd0LiBIZXQgaXMgbmlldCB6byBoZWVsIHZlZWwgb3BlbiwgdmFuZGFhciBkYXQgaGV0IG51IG9wIGhldCBwcm9ncmFtbWEgc3RvbmQuIFZlcmRhY2h0IGRhdCBlciBiaWpuYSBnZWVuIHJpaiBzdG9uZCwgbWFhciB0b2VuIHdlIG5pZXQgZG9vciBtb2NodGVuIHZhbiBkZSBwb2xpdGllIHZpZWwgcm9lYmVsIGRhdCB3ZSB2YW5hZiBoZXQgTWFuIHBsZWluIG1vZXN0ZW4gYWFuc2NodWl2ZW4uIEhpZXIgc3RvbmQgd2VsIGVlbiBsYW5nZSByaWosIG1hYXIgYWwgYmlqIGFsIHNjaG9vdCBoZXQgZ29lZCBvcC4gSW4gZ3JvZXBlbiBtb2NodGVuIHdlIGRvb3IsIHphayBhZmdldmVuIGluIGRlIGx1Z2dhZ2Ugc3RvcmFnZSwgZW4gZGFuIGRvb3IgZGUgbWV0YWFsIGRldGVjdG9ycy4gTGFuZ3MgZWVuIHJlc2VtIGdyYXZlbiBnaW5nIGhldCBuYWFyIGhldCBtYXVzb2xldW0sIHdhYXIgd2UgaW4gZWVuIHJpanRqZSBkZSB0cmFwcGVuIGFmc2NodWl2ZWxkZW4sIHZsYWsgbGFuZ3MgTGVuaW4sIGVuIHRlcnVnIG5hYXIgYnVpdGVuLiBFZW4gYmVldGplIGNyZWVweSwgbWFhciB0b2NoIGVlbiBiaWp6b25kZXJlIG5pZXQgdGUgbWlzc2VuIGVydmFyaW5nIGhpZXIgaW4gUnVzbGFuZC4gRGFhcm5hIGdlbm90ZW4gd2Ugbm9nIHZhbiBlZW4ga29mZmlldGplIHZhbiBkZSBnZWxlIE0gbGFuZ3MgaGV0IHdhdGVyIGluIEFsZXhhbmRlciBwYXJrLgpBaGVtLiBJIGNhbGwgYnVsbHNoaXQuIEhlIGFsc28gZXhwbG9pdHMgbG9uZyBnb25lIHRpZXMgd2l0aCBHcmVlbnBlYWNlIHRvIHNlbGwgaGltc2VsZiBhcyBhIHNwZWFrZXIgYW5kIHBybyBjb3Jwb3JhdGUgc3Bva2VzcGVyc29uLCB1c3VhbGx5IHRha2luZyBwb3NpdGlvbnMgdGhhdCBHcmVlbnBlYWNlIG9wcG9zZXMuCkFuZ2VsaW5hIEpvbGllCkV4Y2VwdCBHb2QgaXMgbXVjaCBtb3JlIHRoYW4gdGhhdC4gSW1hZ2luZSB0aGF0IHdoZW4geW91IGRpZSB5b3UgZ28gdG8gYSBwbGFjZSB3aGVyZSB5b3UgY2FuIGRvIHdoYXRldmVyIHlvdSB3YW50LiAKRGVjIDE2LCAyMDE3ICAgNCBtaW4gICBVcGxvYWRlZCBieSBNYXggUGF0Y2hzQW5kcm9pZCA4LjAgaW4gdGhlIHZpZGVvIGxpbms6IGRDVVhaOHowcWFkcGpZYnpqSkpkeGQ4bDQgLiBBdWcgMTksIDIwMTcgLiBQaG9lbml4IE9TIGlzIGFub3RoZXIgQmVzdCBBbmRyb2lkIE9TIGZvciBQQyB3b3JrcyBwZXJmZWN0bHkgb24gbGFyZ2UgLiAKV2luZG93cyA3IFVsdGltYXRlICAgMzIgQml0IChBdXRvIEFjdGl2YXRpb24pICAgQ3IuIDIgRGVjIDIwMTcgICAzIG1pbiAgIFVwbG9hZGVkIGJ5IFR1dG8ySW5mbyBWaWRlb3NIaSBmcmllbmRzIGluIHRoaXMgdmlkZW8gdHV0b3JpYWwgb2YgQWN0aXZhdGUgV2luZG93cyA3IFVsdGltYXRlIEZvciBGUkVFIFBlcm1hbmVudGx5IGkgd2lsbCBzaG93IC4gRG93bmxvYWQgZnJlZSBhY3RpdmF0b3IgV2luZG93cyA3IFVsdGltYXRlIHg2NCBhbmQgeDg2IGZyb20gb3VyIHNpdGUsIGFjdGl2YXRlIGl0IGZvciAxIG1pbnV0ZSBhbmQgZW5qb3kuIApZb3Ugd2lsbCBiZSBhYmxlIHRvIHVzZSBhbGwgc2VydmljZXMgYW5kIG9mZmVycyBvZiBXUFQgUG9rZXIgQ2x1Yi4gCkZvciBkZWNhZGVzLCB0aGUgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciB3YXMgYSByYXJlIGJyZWVkLiAKV2hlbiBJIHJlYWQgdGhhdCwgSSBnb3QgYSBsaXR0bGUgamVhbG91cyB0aGVvcmV0aWNhbGx5LCBkdXJpbmcgc2V4LCB0aGUgcGVvcGxlIHdobyBncnVudCBlbnRodXNpYXN0aWNhbGx5IGNhbiBhZGQgZm9yY2UgdG8gdGhlaXIgaHVtcC4gcXVlc3Rpb24sIGhlIHNhaWQuIHNvdW5kcyBhcmUgYSBwaHlzaW9sb2dpY2FsIHJlc3BvbnNlIHRvIGV4ZXJ0aW9uLiBUbyB0ZWxsIG1lIGhvdyBzZXggc291bmRzIGV2b2x2ZWQgZnJvbSBhIHNtYWxsIGdydW50IGludG8gdGhlIHNjcmVhbWluZyBzcGVjdGFjbGUgd2Uga25vdyB0aGVtIHRvIGJlIHRvZGF5LCBoZSBiZWdhbiBieSB0ZWxsaW5nIG1lIGEgc3RvcnkgYWJvdXQgc2VhZ3VsbHMuIGEgc2VhZ3VsbCBiZWdpbnMgdG8gdGFrZSBvZmYsIGl0IGZsYXBzIGl0cyB3aW5ncywgaGUgc2FpZC4gdGltZSBpdCBmbGFwcyBpdHMgd2luZ3MsIGl0IG1ha2VzIGEgc291bmQuIEhlIHBhdXNlZCBmb3IgZHJhbWF0aWMgZWZmZWN0LiBhaGggYWhoLCBLb21pc2FydWsgc3F1YXdrZWQsIGltaXRhdGluZyB0aGUgYmlyZC4gdm9jYWxpemF0aW9uIGlzIHN5bmNocm9uaXplZCB3aXRoIHRoZSBtb3ZlbWVudCBiZWNhdXNlIHRoZSBleGVydGlvbiBjcmVhdGVzIHNvdW5kLgpJZiB0aGVyZSBpcyBvbmUgdmlsbGlhbiBhbmQgaXQgZ29lcyBjaGVjaywgYmV0LCByYWlzZSwgamFtLCB5b3UgbWF5IHN0aWxsIGJlIGluIG9rYXkgc2hhcGUgb2Z0ZW4sIGFzIHRoZXJlIG1pZ2h0IGJlIGhhbmRzIHRoYXIgYXJlIHN0cm9uZyBidXQgdnVsbmVyYWJsZSBpbnZvbHZlZCB0aGF0IHdhbnQgdG8gcHVzaCBwZW9wbGUgb3V0LCBsaWtlIHRvcCBzZXQgYW5kIHN1Y2guIE9yIHlvdSBnZXQgYSByYW5kb20gc3Bhei4gTm90IHNheWluZyBhbHdheXMsIGJ1dCB0aGVyZSBhIGNoYW5jZS4uIApJIGJlIGludGVyZXN0ZWQgaW4ga25vd2luZyBzb21lIHNwZWNpZmljIGV4YW1wbGVzIG9mIGNvbXBhbmllcyB0aGF0IHlvdSBrbm93IHVzZSBTY2FsYSBzcGVjaWZpY2FsbHkgaW4gVG9yb250bywgc28gdGhhdCBJIGNhbiBnZXQgYSBmZWVsIG9mIHdoZXRoZXIgdGhlcmUgbWlnaHQgYmUgYSBkaWZmZXJlbmNlIGluIHRoZSBpbmR1c3RyaWVzLiBUb3JvbnRvIGlzIGFsc28gYSByZXNwZWN0YWJsZSB0ZWNoIGh1Yi4gSSB3b3VsZG4gYmUgc3VycHJpc2VkIGlmIGl0IGlzIG1vcmUgYWtpbiB0byB0aGUgdGVjaCBzY2VuZSBpbiBjaXRpZXMgd2l0aCBhIGxvdCBtb3JlIHRlY2ggc3RhcnR1cHMgdGhhbiBhdmVyYWdlLCB3aGljaCBtaWdodCBtZWFuIHlvdSBhIGxpdHRsZSBsZXNzIGZhbWlsaWFyIHdpdGggIm1haW5zdHJlYW0iLCBidXQgbm93IEkganVzdCBwb2tpbmcgYmFjayBhdCB5b3UuIDspIEl0IGRvZXNuIHJlYWxseSBtYXR0ZXIsIGJ1dCBJIGFsd2F5cyBjdXJpb3VzIGFuZCB3YW50IHRvIGxlYXJuIHdoZW4gcGVvcGxlIHNheSB0aGluZ3MgdGhhdCBJIGp1c3QgZGlkbiB0aGluayBhcHBsaWVkIHNvIGJyb2FkbHkuCk5vdyBnZXQgaW4gdGhlcmUgd2l0aCB5b3VyIGd1dHRpbmcgc3Bvb24gYW5kIHNjcmFwZSBhbGwgdGhhdCBzb2Z0IGZsZXNoIG91dC4gCk5ldyBNYWZpYXMKQWx0aG91Z2ggSSBoYXZlIG5vdCBoYWQgdG8gdGFrZSB0aGVtIG15c2VsZiBJIGhhdmUgc2VlbiB0aGUgZWZmZWN0cyB0aGV5IGhhdmUgb24gcGVvcGxlIGNsb3NlIHRvIG1lICAgbXkgYnJvdGhlciwgbXkga2lkcyBtb20sIHNvbWUgb2YgdGhlIHBlb3BsZSBJIGRhdGVkLgpCdXQgd2hlbiBoZSBzYXlzICJJJ2xsIGRvIHRoZSBmaW5nZXJpbmciIEknbSBiYXJlbHkgaG9sZGluZyBvbiBhbmQgdGhlbiBzb21lIGd1eSBhIGZldyByb3dzIHVwIGxldCdzIG91dCB0aGlzIHJpZGljdWxvdXMgc25vcnQuIApEZXZlbG9wIHlvdXIgcGllY2VzLgpEYXZyaWVsIGlzIGp1c3Qgc28gd2VsbCB3cml0dGVuLiBUYmggSSBjYW4gcmVhbGx5IHNheSBhbGwgb2YgdGhlIHJlYXNvbnMgd2h5IGJlY2F1c2UgaXQgd291bGQgc3BvaWwgdGhpbmdzLCBidXQgaGUganVzdCBzbyBhYnN1cmQgc29tZXRpbWVzIGFuZCBoaXMgb3BpbmlvbnMgYWJvdXQgcGVvcGxlIGFyZSBxdWl0ZSByaWdodC4gCkNhcnJleSBpcyBvbmUgb2YgdGhlIGhpZ2hlc3QgcGFpZCBhY3RvcnMgaW4gSG9sbHl3b29kLCBlYXJuaW5nICQyNSBtaWxsaW9uIGZvciAyMDAzIEJydWNlIEFsbWlnaHR5LiAKT2gsIEkga25vdywgU2FyYWggYW5kIHRoZSBGaXJzdCBEdWRlIGFyZSBkb2luZyBwcmV0dHkgd2VsbCB3aXRoIG1vbmV5LiAKVGhhbmsgeW91IG9uY2UgYWdhaW4gZm9yIG1ha2luZyB0aGlzIGd1eSBmZWVsIHNwZWNpYWwgZm9yIGEgY291cGxlIG9mIGRheXMhClNvIGluIG9yZGVyIHRvIHdpbiwgeW91J3ZlIGdvdCB0byByZWFkIHNvbWUgb2Ygb3VyIHRpcHMuLiAKU2hlIGd1dHRlZCBldmVyeXRoaW5nIGFuZCBhZGRlZCBkcnl3YWxsOyBpbnN0YWxsZWQgbmV3IHdpbmRvd3MsIGRvb3JzIGFuZCBwbHVtYmluZzsgbGFuZHNjYXBlZCB0aGUgeWFyZDsgYW5kIGJ1aWx0IGEgc2hlZC4gCkp1c3QgZ29ubmEgbGVhdmUgdGhpcyByaWdodCBoZXJlLiBJdCBzdGF0ZWQgcGxhaW5seSB0aGF0IHNoZSBkaWQgbm90IGVuam95IHRoZSBiYWJ5IGFnZSBhdCBBTEwsIGJ1dCBpcyBjdXJyZW50bHkgbG92aW5nIGhhdmluZyBhIDUgeWVhciBvbGQuIElmIHlvdSB3YW50IHRvIHN0YXJ0IGZyb20gdGhlIGJlZ2lubmluZywgaXQgaGVyZS4gSXQgYSBncmVhdCBjb21pYywgYW5kIGhlciBhcnQgc3R5bGUgaW1wcm92ZXMgb3ZlciB0aW1lLCB0b28uIDopIllvdSBzbyBza2lubnkhIChJIGxvc3Qgc29tZSB3ZWlnaHQgIEkgdGVuZCB0byBsb3NlIG15IGFwcGV0aXRlIHdoZW4gSSBodXJ0aW5nLCBteSBkb2N0b3IgaXMgYXdhcmUsIGFuZCBJIG5vdCBvdXRzaWRlIG9mIHRoZSBoZWFsdGh5IHJhbmdlIHlldC4pIEFyZW4geW91IGVhdGluZz8gWW91IHNob3VsZCBlYXQgbW9yZS4iIGJsYW5rIHN0YXJlcyBpbnRvIHRoZSBhYnlzcwpTbyBpZiB5b3UgY291bGQgbWFrZSBhIFRodXJzZGF5IG5ld2JpZSBydW4gaXQgbWlnaHQgYmUgYSBiZXR0ZXIgZXhwZXJpZW5jZS4gCkVkdWNhdGlvbiBpcyBhIGJ1c2luZXNzLCB0aGV5IGhhdmUgZXZlcnkgaW5jZW50aXZlIHRvIHRlbGwgeW91IHlvdSBnb2luZyB0byBlYXJuIG1vbmV5IHdpdGggdGhlaXIgZGVncmVlLiBUaGlyZCBwYXJ0eSB2ZXJpZnkuLiAKVGhpcyBpcyBub3QgYSB0cmlsb2d5IHRoYXQgcmVxdWlyZXMgYW4gb3JkZXJlZCwgY29uc2VjdXRpdmUgdmlld2luZyBvZiB0aGUgdGhyZWUgZmlsbXMuIApIZSBzdG9vZCwgbGlzdGVuZWQsIGFuZCBnYXplZCBzb21ldGltZXMgZG93biBhdCB0aGUgd2V0IG1vc3N5IGdyb3VuZCwgc29tZXRpbWVzIGF0IExhc2thIGxpc3RlbmluZyBhbGwgYWxlcnQsIHNvbWV0aW1lcyBhdCB0aGUgc2VhIG9mIGJhcmUgdHJlZSB0b3BzIHRoYXQgc3RyZXRjaGVkIG9uIHRoZSBzbG9wZSBiZWxvdyBoaW0sIHNvbWV0aW1lcyBhdCB0aGUgZGFya2VuaW5nIHNreSwgY292ZXJlZCB3aXRoIHdoaXRlIHN0cmVha3Mgb2YgY2xvdWQuLiAKSGlzIGJvZHkgd2FzIGxhdGVyIGZvdW5kIGluc2lkZSBhIGJ1cm5lZCBvdXQsIHZhY2FudCBob3VzZSBpbiBEZXRyb2l0LiAKVGl0bGVzIGFuZCBjb21tZW50cyB3aXRoIGFuIGV4Y2VzcyBvZiBjYXBzIGxvY2ssIGJvbGQgdGV4dCwgbGFyZ2UgZm9udHMsIHRleHQgY29sb3JzLCBleGFnZ2VyYXRlZCBwdW5jdHVhdGlvbiBhbmQgb3RoZXIgYXR0ZW50aW9uIHNlZWtpbmcgZGV2aWNlcyB3aWxsIGJlIHJlbW92ZWQuCkhhdmUgeW91IHRyaWVkIFZhc2VsaW5lL2FxdWFwaG9yPyBJIHVzZSBpdCBzb21ldGltZXMgd2hlbiBteSBlY3plbWEgaXMgZmxhcmluZyB1cCBvciB3aGVuIG15IGV5ZXMgYXJlIHN1cGVyIGlycml0YXRlZCBmcm9tIG1ha2V1cCB0aGF0IG1pY2VsbGFyIHdhdGVyIGJ1cm5zIHRvIHJlbW92ZSBteSBtYWtldXAuIFlvdSBjYW4gYWxzbyB1c2UgaXQgYXQgbmlnaHQgdG8gbW9pc3R1cml6ZSBhbmQgaG9wZWZ1bGx5IGdldCB5b3VyIHNraW4gcmVhZHkgZm9yIGhlYXZ5IG1ha2V1cCB0aGUgbmV4dCBkYXkuClRvIGlsbHVzdHJhdGUsIGNvbnNpZGVyIHRoZSBzdHVkeSBkYXRhIHJlcG9ydGVkIGJ5IGEgZ3JvdXAgb2YgZW5kb2NyaW5vbG9naXN0cyBpbiAxOTk3LlszMF0KU28gZm9yIGEgJDIwTSBwcm9ncmFtIGF0IGEgNSUgY29uZmlkZW5jZSBsZXZlbCwgdGhlIHRhcmdldHMgYXJlIHNldCBhdCAkMU0uIFRoZSByZXN0IG9mIHRoZSB0YXJnZXRzIHdlcmUgc2V0IG9uIHNtYWxsZXIgcHJvZ3JhbXMgd2l0aCBoaWdoZXIgY29uZmlkZW5jZSBsZXZlbHMuVGhlIGNvbmZpZGVuY2Ugd2FzIHNvIGxvdyBiZWNhdXNlIHdlIGhhZCBjb21wZXRpdG9ycyBjb21pbmcgaW50byB0aGUgc3BhY2Ugd2l0aCBhIGRpZmZlcmVudCB2YWx1ZSBwcm9wb3NpdGlvbiBhbmQgbWFuYWdlbWVudCBzYXcgdXMgbG9zaW5nIHRoZSBiaWQuSSBzcGVudCBhIGxhcmdlIGFtb3VudCBvZiB0aW1lIGFuZCBlZmZvcnQgYnVpbGRpbmcgY29uZmlkZW5jZSB3aXRoIGN1c3RvbWVyIHN0YWtlaG9sZGVycyBpbiBlbmdpbmVlcmluZywgcHVyY2hhc2luZywgYW5kIHByb2dyYW0gbWFuYWdlbWVudC4gSSB3YXMgaGVhdmlseSBpbnZvbHZlZCB3aXRoIHRoZWlyIGZhdm9yaXRlIGNoYXJpdHksIGdvbGZlZCB3aXRoIG91ciBwdXJjaGFzaW5nIGNvdW50ZXJwYXJ0cyBhdCBvdXRpbmdzLCBzZW50IHRoZW0gZW1haWxzIGFib3V0IG1hbnkgb2YgdGhlIGltcHJvdmVtZW50cyBvdXIgY29tcGFueSBtYWtpbmcgdG8gb3VyIG1hbnVmYWN0dXJpbmcgcHJvY2Vzc2VzIGFuZCB0byBvdXIgcmVzZWFyY2ggKHNlbnQgU01FcyB3aGl0ZXBhcGVycykuV2hpbGUgdGhlc2UgYWN0aXZpdGllcyBrZXB0IHVzIHRvcCBvZiBtaW5kLCBtdWNoIG9mIHRoZSB3b3JrIGludm9sdmVkIHdhcyByZWFsbHkgZ2V0dGluZyBvdXIgU01FcyBpbiBmcm9udCBvZiB0aGVpciBTTUVzIGFuZCBrZWVwaW5nIHB1cmNoYXNpbmcgaW4gdGhlIGxvb3AgYXMgb3VyIGJpZCBwcm9ncmVzc2VkLiAKQW5vdGhlciBjb25zaWRlcmF0aW9uIGlzIHRoYXQgdGhlIGhhbmQgc3RhcnRlZCBvdmVyIDIwMCBiaWcgYmxpbmRzIGRlZXAgc28gaXQgaXMgYSByZWFzb25hYmxlIGFzc3VtcHRpb24gdGhhdCBwZW9wbGUgZG9uIGdldCB0b28gb3V0IG9mIGxpbmUgd2l0aCBibHVmZnMgaGVyZSBpbiB0aGlzIHNwb3QgdGhpcyBkZWVwLi4gCkkgbm90IGFibGUgdG8gY29tcGxldGVseSB3cml0ZSBoaW0gb2ZmIGFzIGFuIGFzc2hvbGUgYmVjYXVzZSBoZSBjYW4gYmUgc29tZXdoYXQgZW5nYWdpbmcgYWJvdXQgYmFzZWJhbGwuIApUaGUgaW5mb3JtYXRpb24gb24gdGhlIERpYWJldGVzIGRpZXQgc3RhdGVkIHRoYXQgaXQgc2hvdWxkIGFpbSBhdCBldmVubHkgZGlzdHJpYnV0ZWQgbWVhbHMgd2l0aCBpbmNyZWFzZWQgaW50YWtlIG9mIHZlZ2V0YWJsZXMsIHJvb3QgdmVnZXRhYmxlcywgZGlldGFyeSBmaWJlciwgd2hvbGUgZ3JhaW4gYnJlYWQgYW5kIG90aGVyIHdob2xlIGdyYWluIGNlcmVhbCBwcm9kdWN0cywgZnJ1aXRzIGFuZCBiZXJyaWVzLCBhbmQgZGVjcmVhc2VkIGludGFrZSBvZiB0b3RhbCBmYXQgd2l0aCBtb3JlIHVuc2F0dXJhdGVkIGZhdC4gVGhlIG1ham9yaXR5IG9mIGRpZXRhcnkgZW5lcmd5IHNob3VsZCBjb21lIGZyb20gY2FyYm9oeWRyYXRlcyBmcm9tIGZvb2RzIG5hdHVyYWxseSByaWNoIGluIGNhcmJvaHlkcmF0ZSBhbmQgZGlldGFyeSBmaWJlci4gClRoaXMgc21hbGwgaGFuZHkgZXF1aXBtZW50IHdlaWdocyBvbmx5IDEgcG91bmQuIFlvdSB3aWxsIG5lZWQgMiBDIGJhdHRlcmllcyBpbiBjYXNlIHlvdSBkb24ndCBoYXZlIGVsZWN0cmljYWwgc3VwcGx5IGF2YWlsYWJsZS4gCkkndmUgaGFkIHNvbWUgcGVvcGxlIHNheSB0byBtZSB0aGF0IHRoZXkgd291bGQgcHJlZmVyIGEgYyBzZWN0aW9uIHRvIGEgdmFnaW5hbCB0ZWFyIGFuZCBJJ2xsIG5ldmVyIHVuZGVyc3RhbmQgaXQuIApPdXIgcmVhbHRvciwgd2hvIGlzIGFsc28gaW4gY29uc3RydWN0aW9uLCBlc3RpbWF0ZWQgdGhlIGhpZ2ggZW5kIHRvIGRvIHRoZSBiYXNlbWVudCB3b3VsZCBiZSA4MGsuIApXaGVuIHRoZSByZXNlYXJjaGVycyB0ZXN0ZWQgdGhlbSBpbiBhIHNlcmllcyBvZiBzdHJlc3NmdWwgc2l0dWF0aW9ucyBhd2F5IGZyb20gdGhlIGNhZ2VzLCB0aGUgbWljZSByZXNwb25kZWQgd2l0aCwgYXMgdGhlIHNjaWVudGlzdHMgY2FsbCBpdCwgImFueGlldHkgbGlrZSBiZWhhdmlvci4iIFRoZXkgZnJvemUgb3IgcmFuIGZvciBkYXJrIGNvcm5lcnMuIEV2ZXJ5dGhpbmcgdXBzZXQgdGhlbS4gIldlIGRvbid0IHVzZSB3b3JkcyBsaWtlICdkZXByZXNzZWQnIHRvIGRlc2NyaWJlIHRoZSBhbmltYWxzJyBjb25kaXRpb24sIiBzYWlkIE1pY2hhZWwgTC4KSSB3b3JrIGluIE1hc3NhY2h1c2V0dHMgd2hlcmUgY2hhcnRlcnMgYW5kIHByaXZhdGUgc2Nob29scyBhcmUgbWFuYWdlZCBhbmQgcGFpZCBmb3Igb3V0IG9mIHRoZSBwdWJsaWMgZWR1Y2F0aW9uIGJ1ZGdldC4gVGhlcmUgdmVyeSBsaW1pdGVkIG92ZXJzaWdodCBhbmQgdGhleSBzd2VlcCBhIGxvdCB1bmRlciB0aGUgcnVnIGJlY2F1c2UgdGhleSBjYW4uIFNjaG9vbHMgYWJzb2x1dGVseSBzaG91bGQgYmUgbWFuYWdlZCBieSBhIGhpZ2hlciBnb3Zlcm5pbmcgYm9hcmQsIGJlY2F1c2UgaWYgdGhleSBhcmVudCwgYWJ1c2VzIHJ1biByYW1wYW50LiAKQ29uc2lkZXJhdGlvbnMgV2hlbiBQdXJjaGFzaW5nIENhc2lubyBRdWFsaXR5IFBva2VyIENoaXBzCllvdSBuZXZlciByZWdyZXQgZ29pbmcgdG8gYSBwaHlzaW8gc28gaWYgeW91IGhhdmUgYSBsb25nIHRlcm0gbmlnZ2xlICAgZG9uIGRvIHdoYXQgaSBkaWQgYW5kIHdhaXQgZm9yIHllYXJzIGJlY2F1c2UgaXQganVzdCB3YXNuIGJhZCBlbm91Z2ggICBoYXZlIGl0IGxvb2tlZCBhdCwgaXQgY291bGQgYmUgaG9sZGluZyB5b3UgYmFjay4KVG8gc3VtbWFyaXNlIHRoZSByYW5kb21pc2VkIGludGVydmVudGlvbiBzdHVkaWVzIHRoYXQgaGF2ZSBiZWVuIGNhcnJpZWQgb3V0IG9uIHRoZSB1c2Ugb2YgYXJvbWF0aWMgcGxhbnQgZXh0cmFjdHMgKGVzc2VudGlhbCBvaWxzKSBmb3IgYSB2YXJpZXR5IG9mIGNvbmRpdGlvbnMuIFRyaWFscyB3ZXJlIGV4Y2x1ZGVkIGlmIHRoZXkgaGFkIG5vIGNvbnRyb2wgZ3JvdXAgb3Igd2VyZSBub3QgcmFuZG9taXNlZC4gCkluIHRoZSBzYW1lIG9yZGVyIGFzIHRoZSBzYW1wbGUgYmFsbG90IChBc3BlbiBUaW1lcyBXZWVrbHksIE9jdC4gMTYpOgpBY2hpZXZpbmcgYmFsYW5jZSBtZWFucyBtb3JlIHRoYW4ganVzdCBwZXJmb3JtaW5nIHdlbGwgaW4gYWxsIHRocmVlIHNwb3J0czsgaXQgYWxzbyBleHRlbmRzIHRvIGJhbGFuY2luZyB5b3VyIGxpZmUgd2l0aCB0cmlhdGhsb24gdHJhaW5pbmcgYW5kIGZpbmRpbmcgbWVudGFsIGJhbGFuY2UuIFRoZSB2YXJpZXR5IG9mIG11bHRpc3BvcnQgdHJhaW5pbmcgY2FuIGhlbHAgdG8gYnJlYWsgdGhlIG1vbm90b255IG9mIHRyYWluaW5nIGZvciBqdXN0IG9uZSBzcG9ydCwgYW5kIHRoaXMgaGVscHMga2VlcCBhdGhsZXRlcyBpbnRlcmVzdGVkIGFuZCBlbmdhZ2VkLiBIb3dldmVyLCBtb3N0IHRyaWF0aGxldGVzIG5hdHVyYWxseSBmYXZvciBvbmUgb2YgdGhlIHRocmVlIHNwb3J0cywgbWFraW5nIHRoZW0gd2Vha2VyIGluIG90aGVycy4gU2Vhc29uZWQgdHJpYXRobGV0ZXMgd2lsbCBhZ3JlZSB0aGF0IHlvdSBjYW4ndCBhZmZvcmQgdG8gb3Zlcmxvb2sgYW55IG9mIHRoZSB0aHJlZSBzcG9ydHMsIGFuZCBmaWd1cmluZyBvdXQgaG93IHRvIGp1Z2dsZSBhbGwgdGhyZWUgaXMga2V5IHRvIGNvbXBldGluZyBpbiBhIHRyaWF0aGxvbi4KVGhlaXIgbGFjayBvZiByZXNwb25zZSBpcyBjb25zaXN0ZW50IHdpdGggc2NyYW1ibGluZyBoYXZpbmcgdGhpcyBkcm9wcGVkIG9uIHRoZW0gdGhyZWUgZGF5cyBiZWZvcmUgdGhlIGJyaWVmcyB3ZXJlIGRvICAgYWdhaW4sIGNvbnNpc3RlbnQgd2l0aCB0aGlua2luZyB0aGV5IHJlYWxseSBoYWQgdGhlIGJvbmVzLiBUaGUgQ29BIHdhcyB3cm9uZyB0aGlzIHdvdWxkIGJlIHdhaXZlZCBpZiB0aGlzIHdhcyB0cnVseSBuZXdseSBkaXNjb3ZlcmVkIGluIERlY2VtYmVyIChhbHNvLCBzaGUgc2hvdWxkIGhhdmUgZGlzY292ZXJlZCB0aGlzIGJlZm9yZSBaZWxsbmFtaSksIGJ1dCB0aGVyZSBhcmUgZWZmaWNpZW5pZXMgdG8gZG9pbmcgdGhpcyBub3cuIApEaWVkIFRodXJzZGF5IGF0IGhpcyBob21lIGluIEJ1cmxpbmd0b24sIE9udC4sIG5vdCBmYXIgZnJvbSB0aGF0IGZpcnN0IHNob3AgaGUgYm91Z2h0LCBhbGwgdGhvc2UgeWVhcnMgYWdvLiBIZSB3YXMgODggeWVhcnMgb2xkIGFuZCBzdXJyb3VuZGVkIGJ5IGZhbWlseS5mYXRoZXIgaGFkIGEgYmlnIHZpc2lvbiBhbmQgYSBiaWcgaGVhcnQsIEpveWNlIHNvbiwgU3RldmVuLCBzYWlkIGluIGEgc3RhdGVtZW50IG9uIGJlaGFsZiBvZiB0aGUgZmFtaWx5LiAKSSB3b3VsZG4gdHJ5IG1ha2luZyBoaW0gc3RheSB1cCwgeW91IGp1c3QgZ29ubmEgaGF2ZSBhIGJhbmFuYXMgYXNzIG92ZXJ0aXJlZCBraWQgd2hvIGlzIGEgdG90YWwgbW9uc3Rlci4gSSBtZWFuLCBpdCBjb3VsZCB3b3JrLCBJIHN1cHBvc2UuIApEdXJyaW5nIHRoZSBncnVuZ2UgYXJlYSBoYWlyIG1ldGFsIGJhbmRzIHRoYXQgY2hhbmdlZCB0aGVpciBzdHlsZSB0byBzZWxsIGFsYnVtcy4gS3VydCBDb2JhaW4gYWNjdXNlZCBtYW55IGFydGlzdHMgb2Ygam9pbmluZyB0aGUgYmFuZHdhZ29uIGFuZCBzZWxsaW5nIG91dCBkZWNsYXJpbmcgIkdydW5nZSBpcyBkZWFkIi4gClRlY2hub2xvZ3kgaXMgbGlnaHQsIGRvZXMgbm90IGNvbnN1bWUgbXVjaCBlbmVyZ3kgYW5kIGlzIGVhc3kgdG8gbWFpbnRhaW4uIFdoaWxlIHRoZSBmb2N1cyBoYXMgYmVlbiBvbiByZWZyaWdlcmF0aW9uLCBNci4gRGVzamFyZGlucyBzYWlkIHRoZSB0ZWNobm9sb2d5IGNhbiBhbHNvIGNyZWF0ZSBoZWF0LCB3aGljaCBvcGVucyB1cCBuZXcgb3Bwb3J0dW5pdGllcyBmb3IgcHJvZHVjdCBkZXZlbG9wbWVudC4uIApXaGVuIHlvdSBuZWVkIHRvIGxldmVsIHVwLCB3aGF0IGRvIHlvdSBkbz8gWW91IHRha2UgeW91ciBQb2tlbW9uIG91dCBhbmQgYmF0dGxlIHdpdGggaXQgc29tZXdoZXJlLiAKQnV0IGV2ZW4gdGhlbiwgQmVybmllIGhhcyB0aGUgYmVzdCBoaXN0b3J5LiBQb2ludCB0byBhIGNhbmRpZGF0ZSB3aXRoIGEgYmV0dGVyIGhpc3RvcnkuIEJlcm5pZSAyMDIwIGlzbiBhYm91dCBvbmUgcG9saXRpY2lhbiBnb2luZyB0byBXYXNoaW5ndG9uIHRvIGNoYW5nZSB0aGluZ3Mgb24gaGlzIG93bi4gCkkgY3Jvc3Mgc2hvcHBlZCBQaWxvdCBiZWZvcmUgYnV5aW5nIHRoZSBTb3JlbnRvIGFuZCBkaWRuIGxpa2UgaXQsIGJ1dCBJIGtub3cgaXQgYSBncmVhdCB2ZWhpY2xlLiBJIGtpbmQgb2Ygc3VycHJpc2VkIEhvbmRhIGlzIHNvIGxvdyBvbiBDUiByZWxpYWJpbGl0eSBsaXN0LiBUb3lvdGEgYXJlIHNvIGJvcmluZyBidXQgSSBoYXZlIGEgZmVlbGluZyBJIGVuZCB1cCB3aXRoIGEgaHlicmlkIGhpZ2hsYW5kZXIuCkNhdG1hbjM2MCB1CkhlIGhhZCBubyBwcmVjZWRlbnQgZm9yIHNwZW5kaW5nIHN1Y2ggYSBodWdlIHN1bSBvZiBtb25leS4gCkp1c3QgYmVjYXVzZSB5b3UgY2FuIHJlcCBhIGxvdCBvZiBoYW5kcyBkb2VzbiBtYWtlIGl0IGEgZ29vZCBibHVmZi4gCkkgZG9uIGtub3cgaG93IEJldGhlc2RhIHZpZXdzIEUzIG5vdywgYnV0IEUzIGlzIHVzdWFsbHkgbWVhbnQgbW9yZSBmb3IgaW52ZXN0b3JzIGFuZCBpbnNpZGVycyB0aGFuIGFjdHVhbCBmYW5zLCBldmVuIHdpdGggdGhlIHJlY2VudCB5ZWFycyB3aGVyZSB0aGV5IHNlbGwgdGlja2V0cyBmb3IgdGhlIGV2ZW50LiAKRG8gdGhleSB0aGluayB0aGF0IHBlb3BsZSBjYW4gb25seSBiZSBmcmFjdGlvbnMgb2YgYW4gaW5jaCBpbiBoZWlnaHQsIGJ1dCB0aGV5IGNhbiBiZSB3aG9sZSBpbmNoZXMgb3Igd2hvbGUgZmVldCBpbiBoZWlnaHQ/IEF0IGEgY2VydGFpbiBsZXZlbCBvZiBwcmVjaXNpb24gdGhleSBhcmUgcHJvYmFibHkgY29ycmVjdC4gCkl0IG5vdCBoYXJkIGF0IGFsbCB0byBiZWF0IHRoYXQgcHJpY2UgcmVsb2FkaW5nLCBlc3BlY2lhbGx5IGlmIHlvdSBjYXN0ICh3aGljaCBpcyBwZXJmZWN0IGZvciBsb3dlciB2ZWxvY2l0eSBoYW5kZ3VuIHJvdW5kcykuIApFZmZsZXVyYWdlICAgbWFraW5nIGxvbmcgYW5kIGdsaWRpbmcgc3Ryb2tlcyBhbG9uZyB0aGUgYm9keS4gCkFuZCBpdCBhbHNvIHNlcnZlcyB0byBrZWVwIHRoZSBmcmVxdWVuY3kvIHZpYmUgb2YgdGhlIHdob2xlIGh1bWFuaXR5IG9uIHRoZSBsb3dlc3QgbGV2ZWwgYXMgd2UgbGV0IG91cnNlbHZlcyBnZXQgcHVzaGVkIGludG8uLiAKQmlsb3hpLCBNUyAzOTUzMEJlYXUgUml2YWdlIENhc2lubyBUaGUgQmVhdSBSaXZhZ2UgQ2FzaW5vIGlzIGxvY2F0ZWQgYXBwcm94aW1hdGVseSAxNCBtaWxlcyBmcm9tIHRoZSBHdWxmcG9ydCBCaWxveGkgSW50ZXJuYXRpb25hbCBBaXJwb3J0LiBUaGUgY2FzaW5vIGZlYXR1cmVzIG92ZXIgMiwxMDAgcmVlbCwgdmlkZW8sIGFuZCBwcm9ncmVzc2l2ZSBzbG90IG1hY2hpbmVzLCBpbmNsdWRpbmcgRG91YmxlIERpYW1vbmRzLCBGb3h3b3J0aCwgVG9wIERvbGxhciwgYW5kIEhvdCBTaG90cy4gU2xvdCBtYWNoaW5lcyByYW5nZSBpbiBkZW5vbWluYXRpb25zIGZyb20gMSBjZW50IHRvICQ1MDAuIFRoZSBCZWF1IFJpdmFnZSBDYXNpbm8gYWxzbyBoYXMgdGhlIG1vc3QgdGFibGUgZ2FtZXMgb2YgYW55IGNhc2lubyBpbiB0aGUgQmlsb3hpIGFyZWEgaW5jbHVkaW5nIEJsYWNramFjaywgQmFjY2FyYXQsIFBhaSBHb3cgYW5kIE1pc3Npc3NpcHBpIFN0dWQuIFRoZSBjYXNpbm8gaGFzIGEgc2VwYXJhdGUgcG9rZXIgcm9vbSB3aXRoIGRhaWx5IHRvdXJuYW1lbnRzLiBUaGUgQmVhdSBSaXZhZ2UgQ2FzaW5vIGFsc28gaGFzIGEgaGlnaCBsaW1pdCBsb3VuZ2UgYW5kIG9mZmVycyBjYXNpbm8gY3JlZGl0IHRvIHF1YWxpZmllZCBpbmRpdmlkdWFscwpIZSB3aWxsIGRpc2NhcmQgdGhlIGNvbGQgdGhlIEhPVCBkZXNpcmUgcmVsYXRpb24sIGxvdmUgbWVyY2lmdWwgc2FsdmF0aW9uIHRocm91Z2ggSmVzdXMgQ2hyaXN0LiAKVGhhdCBjb21lcyBvdXQgdG8gYWJvdXQgNyBtaWNyb2dyYW1zIG9mIG1hc3MgbG9zdC4gU2luY2UgMC4xIGxiIGlzIDQ1LjQgZ3JhbXMsIGl0IG1lYW5zIHRoZSBhaXIgaXMgdG9vIGxpZ2h0IGJ5IGEgZmFjdG9yIG9mIDE1IG1pbGxpb24gb3Igc28uIElmIHlvdSByZW1lbWJlciBlYXJsaWVyIHdoZW4gSSBzYWlkIHlvdSBjYW4gZnVjayB1cCB5b3VyIGVzdGltYXRpb24gYSBsb3Qgb2YgdGltZXMgYW5kIHN0aWxsIHNlZSBpZiB5b3UncmUgb24gdGhlIHJpZ2h0IHRyYWNrLCB0aGF0J3Mgd2hhdCBJIG1lYW4uIApNYXliZSBhIHNpbWlsYXIgYXBwcm9hY2ggd291bGQgd29yayBmb3IgeW91LiBQcmV0dHkgbXVjaCBldmVyeW9uZSB3aG8ga25vd3MgdXMgYWxyZWFkeSB0aGlua3Mgd2UgYXJlIGEgYml0IG51dHR5IGZvciBoYXZpbmcgYSBob3VzZSBmdWxsIG9mIGNhdHMuIEkganVzdCBsZWFuIGluIHRvIHRoZSBjcmF6eSBhbmQgaXQgc2VlbXMgdG8gd29yay4KU28gdGhlIG5hbm55IHN0YXRlIGRpZCBpdC4uIApKZXN1cyB3YXMgc2F5aW5nLCAiSWYgeW91IHdhbnQgdG8ga25vdyB0aGUgYW5zd2VyIHRvIHRoZSBkaXZvcmNlIHF1ZXN0aW9uLCB0aGVuIGxldCdzIGxvb2sgYXQgR29kJ3Mgb3JpZ2luYWwgcGxhbiBmb3IgbWFycmlhZ2UuIEdlbmVzaXMgc2F5cyBtYXJyaWFnZSBpcyBvbmUgbWFuIHdpdGggb25lIHdvbWFuIGZvciBhIGxpZmV0aW1lLiIgQnkgYWZmaXJtaW5nIEdvZCdzIHN0YW5kYXJkLCBKZXN1cyB3YXMgc2F5aW5nIHRoYXQgYW55IGRldmlhdGlvbiBmcm9tIHRoYXQgc3RhbmRhcmQgbm90IGp1c3QgZ2F5IG1hcnJpYWdlIGJ1dCBhbnkgZGV2aWF0aW9uLCBzdWNoIGFzIGFkdWx0ZXJ5LCBwcmVtYXJpdGFsIHNleCwgb3IgdW5iaWJsaWNhbCBkaXZvcmNlIGlzIHNpbiBiZWNhdXNlIGl0IGRvZXNuJ3QgbWVhc3VyZSB1cCB0byB0aGUgcGVyZmVjdCBzdGFuZGFyZCBvZiBHb2QuIEplc3VzIHNhaWQgbWFycmlhZ2UgaXMgb25lIG1hbiB3aXRoIG9uZSB3b21hbiBmb3IgYSBsaWZldGltZS4gCldoYXQgT25UaGluZ3MgdG8gZG9Gb29kIGFuZCBEcmlua0ZhbWlseSBhbmQgS2lkc1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uSSBXT1VMRCBsaWtlIHRoZSBjb21tdW5pdHkgdG8gYmUgYXdhcmUgb2YgdGhlIGZvbGxvd2luZzogICBXaGVuIHRoZSBDb3Jvd2EgQm93bGluZyBDbHViIHdlbnQgaW50byByZWNlaXZlcnNoaXAsIGEgZ3JvdXAgb2YgY29uY2VybmVkIGNpdGl6ZW5zIHB1cmNoYXNlZCB0aGUgbGFuZCBsZWFzZSBhbmQgYnVpbGRpbmcgd2l0aCB0aGUgaW50ZW50aW9uIG9mIGdldHRpbmcgaXQgYmFjayB1cCBhbmQgcnVubmluZyBhcyBhIGNvbW11bml0eSBjbHViOyAgIE5pbmUgc3BvcnRpbmcgY2x1YnMgcmVwcmVzZW50aW5nIHRoZSBjb21tdW5pdHkgb2YgQ29yb3dhIHRvb2sgb24gdGhlIGNoYWxsZW5nZSBhbG9uZyB3aXRoIEl2YW4gUm9zcyBhbmQgZ290IHRoZSBjbHViIG9wZXJhdGluZyBvbmNlIGFnYWluOyAgIEFmdGVyIGZpdmUgeWVhcnMgb2Ygb3BlcmF0aW9uIHRoZSBzcG9ydGluZyBjbHVicyBzb2xkIHRoZSBsZWFzZSBhbmQgYnVpbGRpbmcgdG8gdGhlIFJTTCBDbHViIGZvciAkNTAwLDAwMCB3aGljaCB3YXMgcGFpZCBiYWNrIHRvIHRoZSBvcmlnaW5hbCBncm91cCBvZiBjb25jZXJuZWQgY2l0aXplbnM7ICAgVGhlIFJTTCBDbHViIHdhcyBhbHNvIGhhbmRlZCBtb3JlIHRoYW4gJDEsMDAwLDAwMCB3b3J0aCBvZiBwb2tlciBtYWNoaW5lIGxpY2VuY2VzIGZyb20gdGhpcyBjb21tdW5pdHkgZ3JvdXA7ICAgVGhlIFJTTCBzdGF0ZWQgdGhhdCB0aGV5IHdvdWxkIHJ1biB0aGUgY2x1YiBmb3IgYSBtaW5pbXVtIG9mIGZpdmUgeWVhcnMgdG8gc2hvdyB0aGF0IHRoZSBwdXJjaGFzZSB3YXMgZ2VudWluZTsgYW5kLCAgIEp1c3Qgb24gZml2ZSB5ZWFycyBsYXBzZWQsIGFuZCB0aGUgUlNMIGNsb3NlZCB0aGUgY2x1Yi4gSSBmZWVsIHRoYXQgdGhlIFJTTCBDbHViIG93ZXMgYSBkZWJ0IHRvIHRoZSBjb21tdW5pdHkgb2YgQ29yb3dhIGJlY2F1c2Ugd2UgaGF2ZSBnaXZlbiB0aGVtIHRoZSBwb2tlciBtYWNoaW5lIGxpY2VuY2VzIHRvIGNvbnRpbnVlIHRvIG9wZXJhdGUgdGhlIGNsdWIsIHdoaWNoIHRoZXkgaGF2ZSBub3QgZG9uZS4gCiJJdCdzIHVuZmF0aG9tYWJseSB1bmZhdGhvbWFibGUsIiBHdXB0YSBzYWlkLiBZZXQsIG5vdCBpbXBvc3NpYmxlLgo2KSBQYXRpZW50cyBpbiB0aGUgc3RyZW5ndGhlbmluZyBleGVyY2lzZSBncm91cCByZWNlaXZlZCBhIHN1cGVydmlzZWQsIHByb2dyZXNzaXZlIHBoeXNpY2FsIHRyYWluaW5nIHByb2dyYW0sIHdpdGggbXVzY2xlIHN0cmVuZ3RoZW5pbmcgb2YgdGhlIHVwcGVyIGFuZCBsb3dlciBsaW1iIG11c2NsZXMgYW5kIHRydW5rIG11c2NsZXMsIGluaXRpYWxseSB3aXRoIDQgNSByZXBldGl0aW9ucyBhbmQgcHJvZ3Jlc3NpbmcgdG8gMTIgcmVwZXRpdGlvbnMgZ3JhZHVhbGx5LiBQYXRpZW50cyBiZWdhbiB3aXRoIHJlc2lzdGFuY2UgbGV2ZWxzIHRoZXkgY291bGQgZG8gZWFzaWx5LCBhbmQgd2VpZ2h0IHdhcyBpbmNyZWFzZWQgZ3JhZHVhbGx5IGFjY29yZGluZyB0byBwYXRpZW50J3MgdG9sZXJhbmNlLi4gCkFuZCBmZWVsIEkgYW0gbm90IGEgaHVnZSB1bmRlcmRvZyBhbmQgbWF5IGV2ZW4gYmUgc2xpZ2h0bHkgZmF2b3JlZC4uIApNeSBjb21wbGljaXR5IGlzIG5vdCBhdCB0aGUgc2FtZSBsZXZlbCBhcyBhbiBvaWwgZXhlY3V0aXZlIGFuZCBuZWl0aGVyIGlzIHlvdXJzLiAKTm9uZSBvZiB0aGlzIGlzIG5ld3MuIEl0J3MgYSBzbG93IGRhbmNlIHRoYXQgaGFzIGxhc3RlZCB0aHJvdWdoIGVpZ2h0IGRpZmZlcmVudCBwcm9tIG5pZ2h0cy4gRXZlcnkgbm93IGFuZCB0aGVuIHRoZSBjbHVtc3ksIGJ1dCBzdGFyIGF0aGxldGUgYm95IHN0ZXBzIG9uIHRoZSB0b2VzIG9mIHRoZSB3aGltc2ljYWwgYW5kIHBldGl0IHByb20gcXVlZW4gd2hvIGRvZXNuJ3QgcXVpdGUga25vdyBob3cgc2hlIGdvdCB0byB0aGUgcHJvbSwgYnV0IHdpbGwgZG8gYW55dGhpbmcgdG8gc3RheS4KIkl0IGlzIHdpdGggYSBoZWF2eSBoZWFydCwgc2FkbmVzcyBhbmQgZ3JlYXQgZGlzYXBwb2ludG1lbnQgdGhhdCBJIGhhdmUgdG8gYW5ub3VuY2UgRlROIHdpbGwgYmUgY2xvc2luZyB0aGUgY2x1YiBNb25kYXksIiBGVE4gUG9rZXIncyBvd25lciBKb2R5IFdoZWVsZXIgcG9zdGVkIG9uIEZhY2Vib29rIG92ZXIgdGhlIHdlZWtlbmQuCldhcm0gbWFzc2FnaW5nIHNob3dlcnMsIHdoaXJscG9vbHMsIG9yIGZvb3Qgc29ha3Mgd2l0aCBtYXJibGVzIGhlbHAgaW5jcmVhc2UgdGhlIGJvZHkncyBjaXJjdWxhdGlvbiBhbmQgY2FuIHByb2R1Y2Ugc29tZSBwYWluIHJlbGllZi4gVGhyb3cgaW4gYSBmZXcgc2Nvb3BzIG9mIHNjZW50ZWQgc2FsdHMgdG8gZ2V0IHRoZSBkb3VibGUgIndhdGVyL2Fyb21hdGhlcmFweSIgZWZmZWN0Li4gCiAxMyBwb2ludHMgIHN1Ym1pdHRlZCA3IG1vbnRocyBhZ29JIHRoaW5rIGl0IG1vcmUgdGhlIHBvaW50IHRoYXQgdGhlcmUgYW4gZW5vcm1vdXMgY2xhc3MgZGlmZmVyZW5jZSBiZXR3ZWVuIHRoZW0uIFNoZSB0aGUgdHJ1ZWJvcm4gZGF1Z2h0ZXIgb2YgYSBncmVhdCBob3VzZSwgd2hpbGUgaGUgYSBiYXN0YXJkIGJsYWNrc21pdGggd2l0aCBubyBwcm9vZiBvZiBoaXMgaGVyaXRhZ2UuIE9uY2UgdGhleSBubyBsb25nZXIgaGFuZ2luZyBvdXQgaW4gdGhlIHdvb2RzLCBoaW0gcmVmZXJyaW5nIHRvIGhlciBhcyAiQXJyeSIgb3IgZXZlbiAiQXJ5YSIgd291bGQgZHJhdyBzb21lIHNlcmlvdXMgc2hhZGUgZnJvbSBhbnkga25pZ2h0cyBvciBtaW5vciBsb3JkcyBoYW5naW5nIGFyb3VuZCAgaXQgd291bGQgYmUgc2VlbiBub3QgYXMga2luc2hpcCwgYnV0IGFzIG9wZW4gZGlzcmVzcGVjdC5JdCBpcyBiaWcgaGVhcnRlZCBvZiBBcnlhIHRvIHRyeSB0byBwb3J0cmF5IHRoZSB0d28gb2YgdGhlbSBhcyBlcXVhbHMsIGJ1dCBHZW5kcnkgcmVzcG9uc2UgaXMgYSBzcGxhc2ggb2YgY29sZCB3YXRlcjogaXQgYWxzbyBuYWl2ZS4gCkxpdGNoZWRTd2V0dGVycyAgNTEgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpLYXJsIE1hcnggYmVsaWV2ZWQgbWFueSB0aGluZ3MsIGJ1dCBoZSBkaWQgbm90IHNldCB1cCB0aGUgYmx1ZXByaW50IGZvciB0aGUgc3RhdGUgdGhhdCBhbGwgdGhvc2UgbmF0aW9ucyB5b3UgbWVudGlvbmVkIHVzZWQgbm9yIGRpZCB0aGV5IGZvbGxvdyBoaXMgaWRlYXMuIE1hcnggd2FzIGEgc3Ryb25nIGJlbGlldmVyIGluIEhlZ2VsaWFuIERpYWxlY3RpY3MsIHdoaWNoIGlzIGEgd2F5IG9mIHZpZXdpbmcgaGlzdG9yeSBhcyBhIHNlcXVlbmNlIG9mIGNvbmZsaWN0cywgd2hlcmUgb25lIHNpZGUgcHJlc2VudHMgYSB0aGVzaXMgYW5kIHRoZSBvcHBvc2luZyBhbiBhbnRpdGhlc2lzLCBhbmQgdGhlIHR3byBjbGFzaCwgbWVyZ2luZyBhc3BlY3RzIG9mIGJvdGggdG8gZm9ybSBhIHN5bnRoZXNpcyB0byBjcmVhdGUgdGhlIG5leHQgY29uZmxpY3QuIFNvcnQgb2YgbGlrZSByZXB1YmxpY3MgdnMgbW9uYXJjaGllcyBpbiB0aGUgMTcwMCdzIGFuZCAxODAwJ3MsIG1hbnkgcmVwdWJsaWNzIGhhZCBhc3BlY3RzIG9mIHRoZSBtb25hcmNoaWVzIGFuZCBtYW55IG1vbmFyY2hpZXMgYWRvcHRlZCByZXB1YmxpY2FuIGlkZWFzLiBGb3IgTWFyeCBpdCB3YXMgYWJvdXQgdGhlIHRyYW5zaXRpb24gb2Ygc29jaWV0eSwgZnJvbSB0aGUgaHVudGVyIGdhdGhlcmVyIGxpZmVzdHlsZSB0byBhZ3JpY3VsdHVyZSB0byBmZXVkYWxpc20gdG8gY2FwaXRhbGlzbSB0aGVuIHRvIGNvbW11bmlzbS4gSW4gaGlzIG1pbmQsIENhcGl0YWxpc20gd2FzIHRoZSBjdXJyZW50IHN0YWdlLiBJdCBoYWQgcmVwbGFjZWQgRmV1ZGFsaXNtIGJlY2F1c2UgdGhlIG1lcmNoYW50IGFuZCBiYW5raW5nIGNsYXNzZXMgYmVnYW4gdG8gcmlzZSBpbiB3ZWFsdGggYW5kIHBvd2VyIGRpc3BsYWNpbmcgdGhlIG5vYmxlcywgYW5kIGFzIHN1Y2ggc29jaWV0eSBjaGFuZ2VkIHRvIG1hdGNoIHRoYXQsIGJlY29taW5nIGEgZGVtb2NyYXRpYyByZXB1YmxpYyBpbiB0aGUgcHJvY2VzcyBvZiBhZG9wdGluZyByZXB1YmxpY2FuIGlkZWFscy4gRm9yIGhpbSBpdCB3YXMganVzdCBhIG5vcm1hbCB0cmFuc2l0aW9uLiBTbyBpZiBoZSB3ZXJlIGluIGNoYXJnZSBvZiBSdXNzaWEgaW5zdGVhZCBvZiBMZW5pbiwgaGUgcHJvYmFibHkgd291bGQndmUgbWFkZSB0aGUgY291bnRyeSBjYXBpdGFsaXN0LiBIZSB3YXNuJ3QgZW50aXJlbHkgd3JvbmcgZWl0aGVyLCBjYXBpdGFsaXNtIHdhcyBjYXVzaW5nIHByb2JsZW1zIHdoZXJlIHRoZSB3b3JraW5nIGNsYXNzIGtlcHQgZ3Jvd2luZyBsYXJnZXIgYW5kIHBvb3JlciwgdGhlIGNvbXBldGl0aW9uIHdhcyBmb3JjaW5nIG1hbnkgY2FwaXRhbGlzdHMgdG8gdGhlbXNlbHZlcyBkcm9wIG91dCBvZiB0aGUgYnVzaW5lc3MgYW5kIGJlY29tZSB3b3JrZXJzLiBUaHVzIG92ZXIgdGltZSB0aGUgd29ya2luZyBjbGFzcyBncm93cyB0b28gbGFyZ2UgdGhhdCB0aGV5IGVuZCB1cCByZXZvbHRpbmcgYW5kIG92ZXJ0aHJvd2luZyB0aGUgQ2FwaXRhbGlzdHMuIFRoaXMgaXNuJ3Qgd3JvbmcsIG1hbnkgd29ya2VycyByZXZvbHV0aW9ucyBvY2N1cnJlZCBpbiB0aGUgMTgwMCdzIGFuZCBlYXJseSAxOTAwJ3MuIFRoZXNlIHdlcmVuJ3QgbmVjZXNzYXJpbHkgQ29tbXVuaXN0LCBidXQgdGhleSBkaWQgbWFrZSB0aGUgbmVlZCBhcHBhcmVudCBmb3IgcmVmb3JtLgpQb2xpdGljYWwgc2NpZW50aXN0IEphbWVzIFEuIFdpbHNvbiB3cm90ZSB0aGF0LCAiSW4gRGV0cm9pdCwgTWF5b3IgQ29sZW1hbiBZb3VuZyByZWplY3RlZCB0aGUgaW50ZWdyYXRpb25pc3QgZ29hbCBpbiBmYXZvciBvZiBhIGZsYW1ib3lhbnQsIGJsYWNrIHBvd2VyIHN0eWxlIHRoYXQgd29uIGhpbSBsb3lhbCBmb2xsb3dlcnMsIGJ1dCBoZSBsZWZ0IHRoZSBjaXR5IGEgZmlzY2FsIGFuZCBzb2NpYWwgd3JlY2suIgoiR2l2ZW4gdGhlIHN0cmljdCBzdGF0dXRvcnkgcHJvaGliaXRpb24gYWdhaW5zdCBnYW1ibGluZywgdGhlIGludHJpY2F0ZSByZWd1bGF0b3J5IHNjaGVtZSBpbXBvc2VkLCBhbmQgdGhlIG5hcnJvdyBjYXJ2ZSBvdXQgZm9yIGNhcmRyb29tcywgdGhlIGdhbWVzIGNhbm5vdCBiZSBhbGxvd2VkIHRvIGNvbnRpbnVlIHRvIG9wZXJhdGUgaW4gdGhlIGN1cnJlbnQgbWFubmVyLCIgVmFuIFd5ayB3cm90ZSBpbiBhIDU0IHBhZ2Ugb3JkZXIuIEFzIGN1cnJlbnRseSBvcGVyYXRlZCwgdGhlIGRlc2lnbmF0ZWQgcGxheWVyIGlzIGEgcGxheWVyIGluIG5hbWUgb25seS4gClRvIGNsYXJpZnksIHRoaXMgd2FzIG15IGZpcnN0IGdyYW5kIG1hbCBzZWl6dXJlLiBNeSBmYXRoZXIgaGFkIHRoZW0gcHJpb3IsIGFuZCBteSBtb3RoZXIgd2l0bmVzc2VkIGJvdGggaGltIGhhdmluZyBvbmUgYW5kIG15c2VsZiBoYXZpbmcgbWluZS4gQWNjb3JkaW5nIHRvIGhlciwgaXQgd2FzIGlkZW50aWNhbC4gSSBldmVuIGhpdCBhbGwgdGhlIHRleHRib29rIG1hcmtzIG9mIGhhdmluZyBoYWQgYW4gZXBpbGVwdGljIHNlaXp1cmUsIGZyb20gdGhlIG1lbW9yeSBsb3NzIHRvIHRoZSBwb3N0aWN0YWwgZmF0aWd1ZS4KS2ltIGhhcyBhIHByZXR0eSBsb29zZSByZWxhdGlvbnNoaXAgd2l0aCB0aGUgdHJ1dGgsIGVzcGVjaWFsbHkgd2hlbiBzaGUncyBtYWQgb3IgY2F1Z2h0IGluIHRoZSBhY3QgKGxpa2Ugd2hlbiBzaGUgd2Fzbid0IHNvYmVyIGF0IEVpbGVlbidzIHBva2VyIG5pZ2h0IGFuZCBzYWlkIGhlciBleCBnYXZlIGhlciBvbmUgb2YgaGlzIHBhaW4gcGlsbHMgICBhbmQgYmVmb3JlIGhlIGRpZWQsIGhlIHdlbnQgb24gcmVjb3JkIHRvIHNheSBoZSBkaWRuJ3QpLiAKSW4gbXkgb3BpbmlvbiBEci4gUmlsZXkgaXMgYW4gYWJzb2x1dGUgZXhwZXJ0IS4gCkVzIGthbm4gYXVjaCB2b3Jrb21tZW4sIGRhc3N6d2VpIG9kZXIgbWVocmVyZSBTcGllbGVyIGVpbiBQb2tlcmJsYXR0IG1pdCBnbGVpY2hlciBXZXJ0aWdrZWl0IGhhYmVub2RlciBkaWUgNSBHZW1laW5zY2hhZnRza2FydGVuIG1hY2hlbiBkaWUgYmVzdG1nbGljaGUgU3BpZWxrb21iaW5hdGlvbiBhdXMuIApBbnlvbmUgd2FudGluZyAzMCBtaW51dGVzIG9mIGhlciB0aW1lIGhhZCB0byBwZXRpdGlvbiBoZXIgZGlyZWN0bHkuIE1hbiwgd2hhdCBhbiBlbnRpdGxlZCBhc3Mgc2hlIHdhcy4uIApJIHdhcyBhdCBhIGZhaXJseSBsYXJnZSBwYXJ0eSBhcyBjcm93ZCBjb250cm9sLiBUaGlzIHBhcnR5IGhhZCBhYm91dCA4MCUgb2YgdGhlIGNvdW50eSBtb3N0IHdhbnRlZC4gTG90cyBvZiBkcnVncywgZ3VucywgZHJpbmtpbmcgYnkgZm9sa3MgdW5kZXIgMjEuIApJIGd1ZXNzIG15IGFkdmljZSBpcyB0byBqdXN0IHRha2UgdGhlIHN0ZXBzIHlvdSBrbm93IHlvdSBjYW4gdGFrZSB3aXRoIHlvdXIgZmluYW5jZXMgZXRjLiBCeSBkb2luZyBmcmVlIHRoaW5ncyBvciwgaWYgeW91IGNhbiBhZmZvcmQgaXQgSSByZWFsbHkgcmVjb21tZW5kIGxhc2VyIHRyZWF0bWVudCAoaWYgeW91IGV2ZW4gaGF2ZSBoYWlyIHRvIHdvcnJ5IGFib3V0KS4gCkxlYXJuIHRvIGRvIGNvbGQgYXByb2FjaCBwaWNrIHVwIChZb3VUdWJlIGl0KSBzaW5jZSBpdCB0aGUgYmVzdCBjb25maWRlbmNlIGJ1aWxkZXIuIEdvaW5nIG91dCBhbG9uZSBpcyBhIGh1Z2UgYm9vc3QgdG8gY29uZmlkZW5jZSBldmVuIGlmIHlvdSBkb24gc2NvcmUgdGhlIGZpcnN0IHRpbWVzLiAKSm9pbiB1cyBhcyB3ZSB0b2FzdCB0aGUgc3Vuc2V0IGV2ZXJ5IGV2ZW5pbmcgd2l0aCBmcmVlIHN1bnNldCBzaG9vdGVycyEgV2Ugb2ZmZXIgY29tcGxpbWVudGFyeSBiaWtlIHJlbnRhbHMuIApPbmx5IHRpbWUgSSBoYWQgYW4gaXNzdWUgd2FzIHdoZW4gdGhlcmUgd2FzIGEgc3Vic3RpdHV0ZSBudXJzZSBmb3Igb25lIGRheSwgSSBlbmRlZCB1cCBnZXR0aW5nIHRoZSBwcmluY2lwYWwgdG8gY29tZSBpbnRvIHRoZSBudXJzZSBvZmZpY2Ugc28gaGUgY2FuIGNsZWFyIHRoaW5ncyB1cC4uIApCZWluZyBiYWNrc3RhZ2UgYXQgdGhlIE1HTSBBcmVuYSwgZm9yIHNvbWUgcmVhc29uLCB0cmFuc3BvcnRlZCBtZSB0byBhbm90aGVyIGVyYSB3aGVuIGJveGluZyB3YXMgYm9oZW1pYW4uIFRoZSBwYXNzaW9uIG9mIHdoaWNoIGV4dGVuZHMgd2F5IGJleW9uZCBtb25leSwgd2hlbiB5b3UgZmVsdCB0aGF0IHByaWRlLCBob25vciBhbmQgZ2xvcnkgd2FzIHRoZSBtYWluIHRhcmdldCBpbiB0aGUgcmluZy4uIApZb3UgY2FuIHNheSB0aGF0IGl0IGlzIGEga2luZCBvZiBNZWNjYSBmb3IgcG9rZXIgcGxheWVycyB0aGF0IGRvbnQgaGF2ZSB0aGUgdGltZSB0byBnbyB0byBjYXNpbm9zLiAKVGhlIGdyb29tIGdvdCB3YXN0ZWQgYW5kIGdvdCBhbGwgZW1vdGlvbmFsIGFuZCBzdGFydGVkIGNvbmZlc3Npbmcgc2hpdCB0byBtZSB3aGVuIEkgd2FzIGRyaXZpbmcgaGltIGhvbWUuIApBZnRlciBhbGwgYmV0dGluZyBpcyBjb21wbGV0ZWQsIGEgZm91cnRoIGNhcmQgaXMgZGVhbHQgZmFjZSB1cCB0byBlYWNoIHBsYXllciB3aG8gaGFzIG5vdCBmb2xkZWQuIApXZSBub3cgaGF2ZSBhIHRvbiBvZiBkaWFwZXJzIGl0IGlzIGdyZWF0LiBJdCBzZWVtZWQgbGlrZSBzZXZlcmFsIG9mIHRoZSBndXlzIGNvbXBldGVkIHRvIHNlZSB3aG8gY291bGQgYnJpbmcgdGhlIGJpZ2dlc3QgYm94IG9mIGRpYXBlcnMsIHNvIHRoYXQgd2FzIGdyZWF0LiAKIlRoZXJlIGlzIG5vIHNob3J0YWdlIG9mIHJlYXNvbnMgd2h5IEhhcnJhaCdzIEphenogQ28uLCB0aGUgcGFydG5lcnNoaXAgdGhhdCB3YXMgZm9ybWVkIHRvIGRldmVsb3AgYW5kICQ4NTUgbWlsbGlvbiBsYW5kIGJhc2VkIGNhc2lubyBpbiBOZXcgT3JsZWFucyB3YXMgZm9yY2VkIHRvIGZpbGUgZm9yIENoYXB0ZXIgMTEgYmFua3J1cHRjeSBwcm90ZWN0aW9uIGluIGxhdGUgTm92ZW1iZXIgQnV0IHNvbWUgYXJlIG1vcmUgcmVsZXZhbnQgdG8gdGhlIG92ZXJhbGwgY2FzaW5vIGluZHVzdHJ5IHRoYW4gb3RoZXJzLiBDaGllZiBhbW9uZyB0aGVtIGlzIHdoZXRoZXIgY2FzaW5vcyBhcmUgcmVhbGx5IG1lYW50IHRvIHN1Y2NlZWQgaW4gY2l0aWVzIHRoYXQgYXJlIGFscmVhZHkgd2VsbCBwb3NpdGlvbmVkIGluIHRoZSBtaW5kcyBvZiB0b3VyaXN0cyBhbmQgbG9jYWxzIGFzIHNvbWV0aGluZyBvdGhlciB0aGFuIGEgZ2FtaW5nIGRlc3RpbmF0aW9uLiIgKENoYXJsZXMgQW5kZXJlciwgMTk5NiwgIldoYXQgTmV3IE9ybGVhbnMgVGVsbHMgVXMiIGluIEludGVybmF0aW9uYWwgR2FtaW5nIFdhZ2VyaW5nIEJ1c2luZXNzLCBWb2wuIApBbHNvIHRoZSByaXNrIG9mIHdvcnNlIG5pZ2h0IHZpc2lvbiBhbmQgZ3JlYXRlciBzZW5zaXRpdml0eSB0byBsaWdodCB3YXMgYSBiaWcgZGVhbCBicmVha2VyLiBJIGFsc28ga2VwdCByZWFkaW5nIHRoZSBiYWQgc3RvcmllcyBhYm91dCBpdCB3aGljaCBkaWRuIGhlbHAuLiAKUGxheWluZyBpbiB0aGUgd3NvcCBjaXJjdWl0IG1haW4gaW4gMyB3ZWVrcywgbGl0dGxlIG92ZXIgdHdpY2UgbXkgbGFyZ2VzdCBidXkgaW4gdG8gZGF0ZS4gSSBoYXZlIHB1dCBpbiB3b3JrIG9uIG15IHN0cmF0ZWd5IG92ZXIgdGhlIGxhc3QgbW9udGggYW5kIHN0aWxsIGFtIGV2ZXJ5IG5pZ2h0IGZvciBhdCBsZWFzdCBhbiBob3VyLiBBbnkgaW5mb3JtYXRpb24gSSBzaG91bGQgbG9vayB1cCBvciBhZHZpY2UgZm9yIG11bHRpIGRheSB0b3VybmFtZW50cyB3b3VsZCBiZSBtdWNoIGFwcHJlY2lhdGVkLiBJIG9ubHkgbmF2aWdhdGVkIGEgMzAwKyBwZXJzb24gbGl2ZSBtdHQgb25jZSwgYWJvdXQgMyBtb250aHMgYWdvLCBmb3IgYSBtaW4gY2FzaC4gVGhlIGxhc3QgNSA2IGhvdXJzIEkgd2FzIGluIGNvbXBsZXRlIHN1cnZpdmFsIG1vZGUgYW5kIHdhcyBtZW50YWxseSBkcmFpbmluZy4gV2hlbiBJIGJ1c3RlZCBJIHdhcyAxMisgaG91cnMgaW4gYW5kIHdhcyBubyBsb25nZXIgcGxheWluZyBteSBBIGdhbWUsIGFkdmljZSBvbiB0aGF0IHNwZWNpZmljYWxseSB3aWxsIGFsc28gYmUgYXBwcmVjaWF0ZWQuIFRoYW5rcy4KQWJvdXQgZmlmdGVlbiBtaW51dGVzIGxhdGVyLCBhIGd1eSBhcm91bmQgaGVyIGFnZSBjb21lcyBpbiwgdGhyb3dzIHNvbWUgY2FzaCBvbiB0aGUgdGFibGUgYW5kIGV4Y3VzZXMgdGhlbS4gU2hlIGNpdGVzIHNvbWUgdmFndWUgZW1lcmdlbmN5IGFuZCBpcyBlc2NvcnRlZCBvdXQuLiAKV2hlbiB5b3UgaGF2ZSBlbm91Z2ggc3BhY2UsIGEgZ29vZCB0YWJsZSBvZiB0aGlzIHNoYXBlIHdpbGwgc2VhdCB5b3VyIGd1ZXN0cyBhbmQgbWFrZSBpdCBlYXN5IHRvIGhhdmUgYSBmZXcgZ2FtZXMgb2YgcG9rZXIgdGhhdCBmZWVsIGFzIHByb2Zlc3Npb25hbCBhcyB3aGF0IHlvdSBjYW4gZmluZCBhdCBhIGNhc2lubyEuIApSdXNzaWEgYW5kIFVrcmFpbmUgQmFuIEdhbWJsaW5nCklsIHJzaWRlICBsIGwgbyBsZSBzb2xlaWwgc2UgY291Y2hlLiBJbCBlc3QgY2VucyBwcm90Z2VyICBsYSBUZXJyZSBldCBsYSB2Z3RhdGlvbiBjb250cmUgbGEgc2NoZXJlc3NlIGV0IGxhIG1vcnQgIGVuIGFwcG9ydGFudCBsZXMgcGx1aWVzLiAKQXMgd2FzIG9mdGVuIHRoZSBjYXNlLCB0aGUgdHdvIHBvd2VycyBmZWQgb2ZmIG9mIGVhY2ggb3RoZXIncyBkaXBzaGl0dGVyeS4gCklmIHlvdSBoYXZlIDggb3V0cyAoaW4gdGhlIGZsb3ApIHRoZW4geW91IGhhdmUgYXJvdW5kIDMyJSBjaGFuY2UgdG8gaW1wcm92ZSB5b3VyIGhhbmQgYWZ0ZXIgdGhlIGZsb3AsIHdoaWNoIG1lYW5zIHlvdSBpbiBwcm9maXQgSUYgdmlsbGFpbiBvbmx5IGJldCBpbiB0aGUgZmxvcCBhbmQgY2hlY2sgdHVybi4gCk9zdG9wYXRoaWUgIE1vbnRyYWwgNi4gCkZyaWVkcmljaCBOaWV0enNjaGUsIExlIEdhaSBTYXZvaXIKVGhlIG90aGVyIHB1cnBvc2Ugb2YgaGlnaGVyIGVkIGJlY2FtZSAiZnVuZHJhaXNpbmciICBhZ2Fpbiwgbm90IHRvIGVkdWNhdGUsIGJ1dCB0byBwdXNoIHRoZSB1bml2ZXJzaXRpZXMgaW50byBhIGNvcnBvcmF0ZSBtb2RlbCBvZiBldmVyIGluY3JlYXNpbmcgcHJvZml0IChlbmRvd21lbnRzKSBzbyB0aGF0IHRoZSB0b3AgYWRtaW5pc3RyYXRvcnMgY291bGQgZ2V0IGhpZ2hlciBhbmQgaGlnaGVyIGFtb3VudHMgb2YgcGF5IHNvIHRoZXkgY291bGQgcmFpc2UgbW9yZSBtb25leSBhbmQgYnVpbGQgbW9yZSBjbGltYmluZyB3YWxscy4KUnVtb3VyIHdhcyB0aGF0IHRoZSBnb3Zlcm5tZW50IGhhcyBjaGFuZ2VkIElzbGFtYWJhZCdzIElHIGJlY2F1c2UgaGUgaGFkIHJlZnVzZWQgdG8gY3JhY2sgZG93biBvbiB0aGUgYWdpdGF0b3JzLiBXZSBjYW4ndCBzYXkgd2hldGhlciBoZSBwb3N0cG9uZWQgdGhlIHBsYW4gYWZ0ZXIgSW1yYW4ncyB0b3VnaCByZXNpc3RhbmNlIG9yIHRoZSBwbGFuIGRpZCBub3QgZXhpc3QgaW4gdGhlIGZpcnN0IHBsYWNlLiBXZSB3ZXJlIHRvbGQgdGhhdCB0aGUgSUcgd2FzIGNoYW5nZWQgYmVjYXVzZSBoZSBmYWlsZWQgdG8gY29yZG9uIG9mZiB0aGUgQ2FiaW5ldCBCbG9jayBvcGVuaW5nIG9mIHRoZSBDYWJpbmV0LiAKS3VybzAxMyAgMTQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSBkaWQgd2hhdCBldmVyeSByZXNwb25zaWJsZSBlbGVjdGVkIG9mZmljaWFsIHNob3VsZCBkbywgd2hpY2ggaXMgZ2V0IHNvbWV0aGluZyBkb25lLiJVbmRlciBhIGNvbXByb21pc2UgYnJva2VyZWQgYnkgUmVubyBiYXNlZCBicm90aGVsIGxvYmJ5aXN0IEdlb3JnZSBGbGludCwgUmljaGFyZHMgb24gVHVlc2RheSBoYWQgYWxyZWFkeSByZW1vdmVkIHR3byBhZHZlcnRpc2VtZW50cyBmZWF0dXJpbmcgbmFrZWQgd29tZW4gdGhhdCBhZG9ybmVkIHRoZSBvdXRzaWRlIG9mIGhpcyBLaW5nZG9tIEdlbnRsZW1lbidzIENsdWIsIGEgY2FzdGxlIHNoYXBlZCBzdHJ1Y3R1cmUgdGhhdCBncmVldHMgdmlzaXRvcnMgdG8gUGFocnVtcCBhcyB0aGV5IGVudGVyIG9uIFN0YXRlIFJvdXRlIDE2MC5UaGUgY2x1Yiwgd2hpY2ggZmVhdHVyZXMgYWxsIG51ZGUgZmVtYWxlIGRhbmNlcnMsIGhhcyBjYXVzZWQgbXVjaCBhbmd1aXNoIGFtb25nIFBhaHJ1bXAgcmVzaWRlbnRzLCB3aG8gc2F5IFJpY2hhcmRzIHNvbGQgdGhlbSBhIGJpbGwgb2YgZ29vZHMgd2hlbiBoZSBwcm9taXNlZCB0byBidWlsZCBhIG1lcmUgYmFyIGFuZCByZXN0YXVyYW50IG9uIHRoZSBzaXRlLkZsaW50IHNhaWQgUmljaGFyZHMgaGFkIGFsc28gIm1hZGUgYXJyYW5nZW1lbnRzIiB0byByZW1vdmUgdHdvIDUwIGZvb3Qgd2lkZSBiaWxsYm9hcmRzIGFsb25nIDE2MCBhbmQgdG8gdGVhciBkb3duIGEgc21hbGwgbWFzc2FnZSBwYXJsb3Igb24gdGhlIEtpbmdkb20gcHJvcGVydHkuIApUaGF0IGJlaW5nIHNhaWQsIEkgYSB2ZXJ5IGdyZWVkeSBwbGF5ZXIuIEV2ZW4gaWYgeW91IHdlcmUgdGhlIHBsYXllciBpbW1lZGlhdGVseSBmb2xsb3dpbmcgdGhlIEJCLCBzdGFiYmluZyBvbmNlIGl0IGNoZWNrZWQgdG8geW91IHdvdWxkIGJlIGEgdG90YWxseSBmaW5lIHBsYXksIGFzIHdvdWxkIGdvaW5nIGZvciBhIGNoZWNrIHJhaXNlLklmIHlvdSBoYWQgYSBsaXZlIHJlYWQgdGhhdCBzdHJvbmcgdGhlbiB0aGF0IGNoYW5nZXMgdGhpbmdzLCBidXQgeW91IHNob3VsZCBhbHdheXMgYmUgY2F1dGlvdXMgYWJvdXQgdGhlIGJhbGFuY2UgYmV0d2VlbiBtYWtpbmcgYSBzdHJhdGVnaWNhbGx5IHNvdW5kIHBsYXkgYW5kIHRydXN0aW5nIHlvdXIgaW5zdGluY3RzLiAKQmVpbmcgYSBkeW5hbWljIHdheSBvdXQgdG8gYnJlYWtvdXQsIHdvbWVuIGF0dGVtcHRlZCBtb3JlIHRvd2FyZHMgdGhlIHNvbGUgZm9ybSBvZiBnYW1ibGluZyBzdWNoIGFzIHNsb3QgbWFjaGluZXMgYW5kIHZpZGVvIHBva2VyLiBUaGUgcGVvcGxlIHdobyBoYXZlIHJlc2VhcmNoZWQgb24gdGhlIGNvbmNlcm4gb2YgZ2FtYmxpbmcgaGF2ZSBmaWd1cmVkIG91dCB0aGF0IG1vc3RseSB3b21lbiB3aXRoIGxvdyBzZWxmIGVzdGVlbSBsb3ZlIHRvIGdhbWJsZSBhcyB0aGV5IGZpbmQgaXQgbW9yZSBlYXN5IHdheSBvdXQgdG8gc3VjY2VzcyBpbiB3aW5uaW5nIGFuZCBhbHNvIGJyYWNrZXQgdG9nZXRoZXIgd2l0aCBhIGZlZWxpbmcgb2YgYWNoaWV2ZW1lbnQuCldoZXJlIERpZCBUaGV5IENvbWUgRnJvbT9Dcm9jcyBzdGFydGVkIGxpZmUgYXQgc2VhIGFzIGEgZGVjayBzaG9lICAgaGVuY2UgdGhlIGhvbGVzIGFuZCB0aGUgbm9uIHNsaXAgc29sZXMuIApXZSB3aXNoIGZvciBhbGwgbmV3IGltbWlncmFudHMgYW5kIGNpdGl6ZW5zIHRvIHVuZGVyc3RhbmQgYW5kIGFwcHJlY2lhdGUgdGhlIHZhcmlvdXMgYW5kIGRpdmVyc2UgY3VsdHVyYWwgYXNwZWN0cyBvZiB0aGUgdmFyaW91cyBldGhuaWMgbWlub3JpdHkgZ3JvdXBzIHdlIGhhdmUgaGVyZS4uIApZb3UgdGFsa2luZyBhYm91dCBwZW9wbGUgd2hvIGdldCBvZmYgb24gcG93ZXIuIApUaGlzIGlzbiBuaXRwaWNreSwgaXQgYSBsZWdpdGltYXRlIGNvbXBsYWludCB0aGF0IEF1YnJleSBpcyBiZWluZyB0b2xkIHNoZSBjYW4gYmUgc2FkLiBJIG1lYW4gd3RmLiAKU2kgdm91cyBhdmV6IGRlcyBxdWVzdGlvbnMgc3VyIGxlIGxpdnJlIG91IGF1dHJlcyBzdWpldHMsIG4naHNpdGV6IHBhcyAhCklSRUxBTkRNYW4gZHVlIGluIGNvdXJ0IGluIGNvbm5lY3Rpb24gd2l0aCA4NjUsMDAwIGRydWcgc2VpenVyZSBpbiBDbyBNZWF0aERyaXZlcnMgdXJnZWQgdG8gdGFrZSBjYXJlIGFtaWQgc25vdyBhbmQgd2luZCB3YXJuaW5ncyBTUE9SVFdvbWVuJ3MgU2l4IE5hdGlvbnM6IElyZWxhbmQgc3VmZmVyIHNlY29uZCBob21lIGRlZmVhdCBhZnRlciAxMCB0cnkgdHVzc2xlIHdpdGggRnJhbmNlTGltZXJpY2sgc3Ryb2xsIHBhc3QgTGFvaXMgaW4gaHVybGluZyBsZWFndWUgcXVhcnRlciBmaW5hbFdPUkxETWF5IHdhcm5lZCBCcmV4aXQgZGVmZWF0ICdpbmV2aXRhYmxlJyB3aXRob3V0IGNoYW5nZXMgdG8gdGhlIGJhY2tzdG9wRG96ZW5zIGh1cnQgb24gSmFwYW5lc2UgZmVycnkgYWZ0ZXIgcG9zc2libGUgd2hhbGUgY29sbGlzaW9uQlVTSU5FU1NTdGVybGluZyB3b2JibGVzIGFoZWFkIG9mIGNydW5jaCBCcmV4aXQgd2VlayBhcyBCYXJuaWVyIG9mZmVycyBiYWNrc3RvcCBhc3N1cmFuY2VBSUIgJ3Nob3VsZCBhZGQgNiwwMDAgY3VzdG9tZXJzJyB0byB0cmFja2VyIG1vcnRnYWdlIGJpbGxMSUZFU1RZTEVUaHJlZSByZWNpcGVzIGZyb20gTWFyeSBCZXJyeSdzIG5ldyBib29rLCBRdWljayBDb29raW5nV2Vla2VuZCBGb29kIHdpdGggRGFyaW5hIEFsbGVuOiBIb3cgQmFsbHltYWxvZSBjcmVhdGVzIHRoYXQgYXdhcmQgd2lubmluZyBkZXNzZXJ0IHRyb2xsZXkKIkluIHRoZSBwcml2YWN5IG9mIG91ciBvd24gaG9tZXMsIGNvbnNlbnRpbmcgYWR1bHRzIHNob3VsZCBiZSBhYmxlIHRvIGRvIHdoYXRldmVyIHRoZXkgd2FudCwiIFJheW1lciBzYWlkLiAKSSBoYWQgc29tZW9uZSB0ZWxsIG1lIEkgaGFyZCB3b3JraW5nIGZvciBnZXR0aW5nIHRoZSBoaWdoZXN0IGdyYWRlIG9uIG91ciBlc3NheSBhbmQgSSBqdXN0IHRvbGQgdGhlbSAiSSBiYXJlbHkgc3BlbmQgdGltZSB3aXRoIG15IGVzc2F5cywgSSBqdXN0IGdvb2QgYXQgaXQuIiBJIG5ldmVyIHRob3VnaHQgb2YgaXQgaW4gdGhhdCB3YXksIHVzdWFsbHkgdGhlIHBlb3BsZSB0aGF0IHdhbnQgdG8gY29tcGV0ZSB3aXRoIG1lIHRob3VnaCBpcyBmb3IgY3JlYXRpdmUgd3JpdGluZyBwYXBlcnMgbm90IGxlZ2l0IGVzc2F5cyBvciByZXNlYXJjaCBwYXBlcnMuIEFuZCBtaW5kIHlvdSB0aGF0IGJhc2ljYWxseSBvbmx5IG9uZSBvdGhlciBwZXJzb24gdGhlcmUgd2FzbiBhIG1vbSBvciBkYWQsIGhlIHdvdWxkIGFsd2F5cyB1c2UgaGlzIGtpZHMgYXMgYW4gZXhjdXNlIHRvIGJlIGN1dCBlYXJseSBhbmQgdGhlbiB0aGUgYm9zcyB3b3VsZCBhbHdheXMgY2F2ZSBpbiEuIApQLiBTIG9idmlvdXNseSBub25lIG9mIHRoaXMgYXBwbGllcyB0byB0ZWFjaGVycyB3aG8gZG9uIGdpdmUgYSBzaGl0IGFuZCBhcmUganVzdCBnb2luZyB0aHJvdWdoIHRoZSBtb3Rpb25zLgpKdWRnZSBIYWx2ZXJzb24gd2FzIHN1c3BlbmRlZCBmcm9tIHRoZSBiZW5jaCBpbiBKdWx5IDIwMDcuIFNoZSBsb3N0IGFuIEF1Z3VzdCBiaWQgZm9yIHJlIGVsZWN0aW9uIGluIHRoZSBwcmltYXJpZXMuClNhbSBBYmVybmF0aHkgY29tcGxldGVzIGhlYWx0aHkgcHJvcCBiZXQKRmlyc3QsIGEgY2VydGFpbiBhcmNoaXRlY3R1cmUgb2YgYm9yZGVycyBtdXN0IGJlIGJ1aWxkLiBCdWlsZGluZ3MsIGZsYWcgcG9sZXMgd2l0aCB0aGUgQW1lcmljYW4gYW5kIENhbmFkaWFuIGZsYWdzLCBzZWN1cml0eSBjYW1lcmFzLCBhbmQgcm9hZCBibG9ja3MgbXVzdCBhbGwgYmUgcHV0IGludG8gcGxhY2UuIApUaGV5IHRlbmQgdG8gYmUgdGhlIHNjcnViYmllc3Qgb2YgdGhlIGJ1bmNoIGJ1dCB5b3UgY2FuIGJlYXQgdGhlIHZhbHVlLi4gCiJHcmVhdGVyIGxhdGl0dWRlIGluIG9uZSBtZWFzdXJlICAgZm9yIGV4YW1wbGUsIHBlcm1pdHRpbmcgcHJvc3RpdHV0ZXMgdG8gb2J0YWluIHRoZSBhc3Npc3RhbmNlIG9mIHNlY3VyaXR5IHBlcnNvbm5lbCAgIG1pZ2h0IGltcGFjdCBvbiB0aGUgY29uc3RpdHV0aW9uYWxpdHkgb2YgYW5vdGhlciBtZWFzdXJlICAgZm9yIGV4YW1wbGUsIGZvcmJpZGRpbmcgdGhlIG51aXNhbmNlcyBhc3NvY2lhdGVkIHdpdGgga2VlcGluZyBhIGJhd2R5IGhvdXNlLgpNZXRyb2lkIEZ1c2lvbiAoR0JBKVN0aWxsIGEgZ29vZCBnYW1lLCBidXQgYSBiaWcgZGlzYXBwb2ludG1lbnQgYWZ0ZXIgcGxheWluZyBaTS4gCllvdSBhcmUgbGVhcm5pbmcgYWJvdXQga2FybWEgICB0aGUgZWZmZWN0cyBvZiB5b3VyIGFjdGlvbnMgaGF2ZSBjb25zZXF1ZW5jZXMuIFNpZ25pbmcgYSBjb250cmFjdCBiaW5kcyB5b3UgdG8gdGhlIHRlcm1zIG9mIHRoZSBjb250cmFjdCB5b3Ugc2lnbmVkLiAKIkJyYWluIGluanVyaWVzIGluIHNvY2NlciBhcmUgd2VsbCBkZWZpbmVkLCBidXQgdGhvc2Ugb2YgdGhlIGNlcnZpY2FsIHNwaW5lIGFyZSByYXJlbHkgZGV0ZXJtaW5lZC4iClN1ZGRlbmx5LCB0aGUgbmluZSBtb250aHMgcHJlZ25hbnQgd29tYW4gd2FzIHRyYXZlbGxpbmcgdG8gQ2FsZ2FyeSwgZmFyIGZyb20gaGVyIGRvY3RvciBhbmQgYWxsIHRoZSBiYWJ5IGdlYXIgc2hlIGFuZCBoZXIgYm95ZnJpZW5kIGhhZCBib3VnaHQgZm9yIHRoZWlyIGZpcnN0Ym9ybiBjaGlsZCwgaGVyIHNpc3RlciBzYWlkLgpGb3VuZGVkIGluIDE5OTYsIFBhY2lmaWMgUG9rZXIgc2hvd2Nhc2VzIHRoZSBleGNpdGVtZW50IG9mIGNvbXBldGluZ2FnYWluc3QgeW91ciBmcmllbmRzIGFuZCBmZWxsb3cgbWVtYmVycyBpbiBhbnkgb2YgdGhlIHBva2VyIHJvb21zLgpUaGUgc3RhY2tlZCBsZWF0aGVyIHNvbGUgaXMgY29tZm9ydGFibGUgYW5kIGxpZ2h0LCBidXQgaGFzIHdvcm4gZG93biBwcmV0dHkgcXVpY2tseSBpbiB0aGUgaGVlbCBmb3IgbWUuIApIZSB3YXMgYWJsZSB0byBwbGF5IHdpdGggdGhlIGJpZyBib3lzIHRoZW4gYW5kIEkgYmV0IGhlIGNvdWxkIHBsYXkgd2l0aCBNY0RhdmlkIG5vdywgaGUgYSBzbWFydCBndXkgYW5kIGEgZ29vZCBwYXNzZXIuIApLZWVwIGF0IGl0IC4gVGhlIG1vbmV5IGlzIG5vdCBnb25lLiAKSGUgcHV0IGEga2V5IGxvZ2dlciBvbiBteSBjb21wdXRlciBhbmQgcmVhZCBhbGwgbXkgcHJpdmF0ZSBtZXNzYWdlcyBiZXR3ZWVuIG15IGxvbmcgZGlzdGFuY2UgZmIgYW5kIEkuIApEZXByZXNzaW9uIGlzIGtpbmQgb2YgbGlrZSBhIHdhcm0gYmxhbmtldC4gSXRzIHJlYWxseSBjb21mb3J0aW5nIGFuZCB5b3UganVzdCB3YW50IHRvIGtlZXAgbmFwcGluZyBzbyBpdCdzIGhhcmQgdG8gZ2V0IHVwIGFuZCBkbyB0aGUgdGhpbmdzIHlvdSB3YW50IHRvIGRvLiBJdCdzIHJlYWxseSBlYXN5IHRvIGp1c3QgY3VybCB1cCBhbmQgc3RheSBpbiBpdCBzbyB5b3UgaGF2ZSB0byBmb3JjZSB5b3Vyc2VsZiB0byBqdXN0IHJpcCBpdCBvZmYgYW5kIHN0YXJ0IHRoZSBkYXkuIFRoZW4geW91IGdldCB0byBhIHBvaW50IHdoZXJlIHlvdSdyZSBub3QgZm9yY2luZyB5b3Vyc2VsZiBhbnltb3JlLiBPciB5b3UgbWF5IG9ubHkgaGF2ZSB0byBmb3JjZSB5b3Vyc2VsZiBzb21lIG9mIHRoZSBkYXlzLiBBcyBjbGljaCBhcyBpdCBpcywgaXQgZG9lcyBnZXQgYmV0dGVyLgpKdXN0IGdvdCBiaWxsIGZyb20gb25lIG9mIHRob3NlIHNtYWxsIEVSIGZhY2lsaXRpZXMgKG15IHNtYWxsIHRvd24gaGFzIGxpa2UgNSBvZiB0aGVtKS4gSSBoYWQgc3VwZXIgYmFkIHBhaW4gaW4gbXkgc2lkZS4gQXMgc29vbiBhcyB0aGUgZG9jIHNhdyBtZSBoZSBrbmV3IGl0IHdhcyBhIGtpZG5leSBzdG9uZS4gR2F2ZSBtZSBhIENUIHNjYW4sIE1vcnBoaW5lLCBibG9vZC91cmluZSB0ZXN0IGFuZCBzYWlkIHRvIGdvIGhvbWUgYmVjYXVzZSB0aGVyZSBpcyBub3RoaW5nIHRvIGRvIGJ1dCBwYXNzIGl0LiAkMTIsMDAwIGJpbGwuIE15IGluc3VyYW5jZSBzdWNrcywgSSdtIHJlc3BvbnNpYmxlIGZvciBhYm91dCAkNiwwMDAuClRoZXJlIHdhcyBubyBzaW5nbGUgVUsgcmVjb3JkIGNoYXJ0IHVudGlsIHRoZSBtaWQgMTk2MHMuIFdoaWxlIHRoZSBhYm92ZSBzdGF0ZW1lbnQgaXMgdHJ1ZSwgdGhlcmUgd2VyZSBpbmRpY2F0b3JzIGFzIHRvIEJyaXRpc2ggc29uZyBwb3B1bGFyaXR5IGRhdGluZyBmcm9tIHRoZSAxOTMwcy4gRWFzaWVyIHRvIGFuc3dlciBpcyBXSEFUIHdhcyBOdW1iZXIgT25lIGluIE9jdG9iZXIgMTk0OS4gSW5mb3JtYXRpb24gcmVsZWFzZWQgaW4gMjAxMyBzdGF0ZSB0aGF0IHRoZSBiZXN0IHNlbGxpbmcgVUsgcmVjb3JkcyB0aGF0IG1vbnRoIHdlcmUgQmluZyBDcm9zYnkncyAiVGhlIExhc3QgTWlsZSBIb21lIiBhbmQgQW50b24gS2FyYXMnICJIYXJyeSBMaW1lIChUaGlyZCBNYW4pIFRoZW1lIi4gKEZ1bGwgQW5zd2VyKQpUaGVzZSBwb2xpY2llcyBhcmUgcGFydCBvZiBvdXIgc3RhdGUncyBhZG1pbmlzdHJhdGl2ZSBjb2RlIGFuZCBhcmUgYmluZGluZyBvbiBhbGwgbGljZW5zZWQgZGF5Y2FyZXMgYW5kIHByZXNjaG9vbHMuIEkgYW0gbm90IGZyb20gYSB2ZXJ5IHByb2dyZXNzaXZlIGFyZWEgZWl0aGVyLiBMb29rIGludG8geW91ciBsb2NhbCBsYXdzIGFuZCBpZiB5b3UgZG9uJ3QgZmluZCBhbnl0aGluZyB5b3UgY291bGQgdHJhY2sgZG93biB0aGUgb3duZXJzIG9yIGJvYXJkIG9mIHRoZSBwcmVzY2hvb2wuIApNb3N0IGxpa2VseSB5b3UncmUgZ29pbmcgdG8gaGF2ZSBhIGRpZmZlcmVudCByZWFzb24gZm9yIHB1cmNoYXNpbmcgYSAyMDAgVGV4YXMgSG9sZCdlbSBQb2tlciBDaGlwIFNldCB3aXRoIENsZWFyIENvdmVyIEFsdW1pbnVtIENhc2UgeW91cnNlbGYuIFdoZXRoZXIgaXQncyBhIGdpZnQgZm9yIHNvbWVvbmUgZWxzZSBvciB5b3UganVzdCB3YW50IHRvIHNwaWNlIHVwIHlvdXIgZ2FtZSBhdCBob21lLCB5b3UgaGF2ZSB0byBzZWUgdGhpcyBwb2tlciBzZXQuIENoYW5jZXMgYXJlIGlmIHlvdSB0YWtlIHRoZSB0aW1lIHRvIGRvIGEgbGl0dGxlIHJlc2VhcmNoIG9uIHRoZW0geW91IHdpbGwgZmluZCB0aGF0IHRoZXkgYXJlIGJ5IGZhciB0aGUgbW9zdCBpbmV4cGVuc2l2ZSBzZXQgZm9yIGV2ZXJ5dGhpbmcgeW91IHJlY2VpdmUuLiAKRXNwZWNpYWxseSBpZiB5b3UgaGF2ZSBtdWx0aXBsZSBjaGFyYWN0ZXJzL3N0b3J5bGluZXMganVtcGluZyB0aHJvdWdoIHRpbWUuIApMaW5kbmVyIGtvbXBlbnNpZXJ0IGRlbiBBYmdhbmcgZGVzIFJoZWluIFJlc2lkZW5jZSBIb3RlbHMgZHVyY2ggZWluIG5ldWVzIEhhdXMuIApJZiBkcmF3aW5nIE9OTFkgMiBjYXJkcyB0aGVyZSBpcyBhIDEgaW4gMTMgY2hhbmNlIG9uIHRoZSBmaXJzdCBraW5nIGFuZCBhIDEgaW4gMTcgb24gdGhlIHNlY29uZCBraW5nLCBob3dldmVyIGl0IGlzIGEgMSBpbiAyMjEgY2hhbmNlIG9mIGRyYXdpbmcgMiBraW5ncyBiYWNrIHRvIGJhY2suIEhtbW0gc28gYSBLUyBmb2xsb3dlZCBieSBLRCB3b3VsZCBiZSBtb3JlIGxpa2UgMSBjaGFuY2UgaW4gYWJvdXQgMjYwMCBBbnN3ZXIgVGhlcmUgYXJlIDYgd2F5cyBpbiB3aGljaCBhIHBhaXIgb2YgS2luZ3MgY2FuIGJlIHB1bGxlZCBmcm9tIGEgZGVjayBvZiBjYXJkczogSGVhcnQvQ2x1YiwgSGVhcnQvU3BhZGUsIEhlYXJ0L0RpYW1vbmQgQ2x1Yi9TcGFkZSwgQ2x1Yi9EaWFtb25kIFNwYWRlL0RpYW1vbmQuIApJIGRlY2lkZWQgdG8gcGxheSBhIHZpZGVvIGdhbWUgdG8gZ3JvdW5kIG15c2VsZiAgIGZvY3VzIG9uIG9uZSB0aGluZyB0byB0YWtlIGNvbnRyb2wgYW5kIHJpZGUgdGhlIHdhdmUuIApIZSB0YWxrZWQgdG8gcGVvcGxlIHdobyBoYWQgc2VlbiBpdCBhcyBmYXIgYmFjayBhcyB0aGUgMTk0MHMsIGJ1dCBoZSBjb3VsZG4gdHJhY2sgZG93biBpdHMgaGlzdG9yaWMgb3JpZ2lucy5MdW0gaXMgbm93IGNoYWlyIG9mIGZpbmUgYXJ0cyBhdCB0aGUgVW5pdmVyc2l0eSBvZiBQZW5uc3lsdmFuaWEgU2Nob29sIG9mIERlc2lnbiBpbiBQaGlsYWRlbHBoaWEuIApUaGlzIGltcGFjdGVkIG1lIGJlY2F1c2UgSSBvbmNlIGF0dGVuZGVkIGEgbWluaXN0cnkgdHJhaW5pbmcgc2Nob29sIHdoZW4gSSB3YXMgc3RyYWlnaHQgb3V0IG9mIGhpZ2ggc2Nob29sLiBPdXIgUHJpbmNpcGFsIGhhcyB2aXNpdGVkIE5hZ2FsYW5kIGFuZCBzcG9rZSBhcyBpZiBpdCB3ZXJlIGEgZmFpcnl0YWxlIHBsYWNlICAgb3ZlciA5MCUgb2YgTmFnYSBwZW9wbGUgYXJlIENocmlzdGlhbnMsIGFuZCBzcGVjaWZpY2FsbHkgQmFwdGlzdHMuIFRoZSBwcmluY2lwYWwga2VwdCBleHRvbGxpbmcgdGhlIHdvbmRlcmZ1bCB0aGluZ3MgYWJvdXQgdGhlIGNvdW50cnksIGVzcGVjaWFsbHkgYXMgdGhlIHBvcHVsYXRpb24gaGFkIG1vc3RseSBjb252ZXJ0ZWQuLiAKWW91IGNhbiB1c2UgaW1hZ2VzICAgcGljdHVyZSB5b3Vyc2VsZiBzdXJyb3VuZGVkIGJ5IGJlYXV0aWZ1bCBjb2xvdXJzLCBvciBpbWFnaW5lIHlvdXJzZWxmIGluIHRoZSBtb3N0IHBlYWNlZnVsIHBsYWNlLCBob3dldmVyIGxvdmluZyBraW5kbmVzcyBsb29rcyB0byB5b3UuCk9yIGp1c3QgYnJpbmcgdGhlIGNoaXBzIHRvIGZpbmQgb3V0LiAKVXNlIHRoZSB0aXAgb2YgYWxsIHRoZSBmaW5nZXJzIG9uIG9uZSBoYW5kIHRvIGNvbWUgZG93biB0aGUgc3BpbmUsIGFuZCBpbiBhIGN1cnZlIGZyb20gdGhlIG91dGVyIGVkZ2Ugb2YgdGhlIHNob3VsZGVycyBhbmQgZG93biB0aGUgc3BpbmUuIElmIHlvdXIgYmFieSBpcyBseWluZyBkb3duIHlvdSBjYW4gY29udGludWUgdGhlc2Ugc3Ryb2tlcyBvdmVyIHRoZSBib3R0b20gYW5kIGRvd24gdGhlIGxlZ3MuIApUaGVyZSBpcyBidXQgSSBkb24ndCByZW1lbWJlci4gU3RheWluZyBvbiBGYWNlYm9vayhzdGF5IG9uIHRoZSB3ZWJzaXRlIEkgZGlkbid0IHdlbnQgYW55d2hlcmUgZWxzZSkgYW5kIGxvb2tpbmcgZm9yIGl0IHdoaWxlIHBsYXlpbmcgdGhlIGdhbWUsIHlvdSB3b3VsZCBwcm9iYWJseSBmaW5kIHRoZSBzdXJ2ZXkuIEJlbGlldmUgb3Igbm90IGl0IGRpZG4ndCB0YWtlIGxvbmdlciB0aGVuIDUgbWludXRlcy4gCkkgY29uY2x1ZGVkIHRoYXQgdGhlcmUgYXJlIGJvdGggZ29vZCBhbmQgcHJlZGF0b3J5IGFsaWVuIGZvcmNlcyBhdCB3b3JrIGluIHRoaXMgd29yaywgYW5kIGh1bWFuIGJlaW5ncyBhcmUgc3R1Y2sgaW4gdGhlIG1pZGRsZS4gCkNlbGVicml0eSBwb2tlciBwbGF5ZXIgRGFuIEJpbHplcmlhbiBhcnJlc3RlZCBpbiBMQSBvbiB3ZWFwb25zIGNoYXJnZQpUaGUgY3VycmVudCBzeXN0ZW0gZmF2b3VycyBhcHBsaWNhbnRzIGJ5IHJlcXVpcmluZyBhIGNvdW5jaWwgdG8gcHJvdmUgdGhlcmUgaXMgIm5vIG5ldCBkZXRyaW1lbnQiIHRvIHRoZSBjb21tdW5pdHkuIApGb3JjaWxsbyBzYWlkIHRoYXQgQmFsZGVycmFtYSBvZmZpY2lhbGx5IG1vdmVkIHRvIHRoZSBjaXR5IG9uIE9jdC4gCkhlIG5leHQgZmFjZWQgTWF0dCBLdWNoYXIsIHdobyBnb3QgYWhlYWQgZWFybHkgb2YgYmlnIGhpdHRpbmcgTmljb2xhc0NvbHNhZXJ0cyBhbmQgd29uLCA0IGFuZCAzLgpZb3VyIHRvIGRvIGxpc3QgaXMgbGlrZWx5IGdldHRpbmcgc3VwZXIgbG9uZyBhdCB0aGlzIHBvaW50LCBhbmQgSSdtIHNvcnJ5IGlmIHRoaXMgZmVlbHMgb3ZlcndoZWxtaW5nLiBCdXQgcGVvcGxlIGxpa2UgeW91ciBtb20gb3BlcmF0ZSBvdXQgb2YgdGhlIHNhbWUgcGxheWJvb2ssIGdlbmVyYWxseSwgYW5kIHRoaXMgaXMgc3R1ZmYgdGhhdCwgdGFrZW4gY2FyZSBvZiBhcyBhIHByZXZlbnRhdGl2ZSBtZWFzdXJlLCB3aWxsIG1ha2UgdGhpbmdzIGVhc2llciBpbiB0aGUgbG9uZyBydW4uIEl0IHdpbGwgZm9ybSBhIHdhbGwgZm9yIGhlciB0byBydW4gaW50bywgYW5kIHRoYXQncyBhIGxvdCBiZXR0ZXIgdGhhbiB3YWl0aW5nIGZvciBhIG1lc3MgdGhhdCB3aWxsIG5lZWQgY2xlYW5pbmcgdXAuCkZvciBleGFtcGxlLCBpdCBtYXkgYmUgcG9zc2libGUgdG8gdXNlIGEgY2hlYXAgKGNvdXBsZSBvZiAvJCkgQmx1ZXRvb3RoIHNodXR0ZXIgcmVtb3RlIGRlc2lnbmVkIGZvciBzbWFydHBob25lcyBhbG9uZyB3aXRoIHNvbWUgc29ydCBvZiBhcHAgb24gYSBwaG9uZSB0byBzdGFydCBhIHRpbWVyIHdoZW4geW91IGJlZ2luIGZpbG1pbmcuIApTaGUgc2FpZCBpIGFtIGxpa2Ugb25lIG9mIHRoZSByZWFsZXN0IHBlb3BsZSBvdXQgdGhlcmUuIFNoZSBzYWlkIG1lIGFuZCBoZXIgd2lsbCByb2NrIHRvZ2V0aGVyIGZvcmV2ZXIuIApIb3NwaXRhbHMgU29tZSBob3NwaXRhbHMgYWxzbyBlbXBsb3kgbWVkaWNhbCBtYXNzYWdlIHRoZXJhcGlzdHMuIApBbWF6b24gYWxyZWFkeSBvZmZlcnMgYWQgdGFyZ2V0aW5nIHRlY2hub2xvZ3ksIHRoZSBraW5kIHRoYXQgbW9zdCBkaWdpdGFsIGFkIHJpdmFscyBwcm92aWRlLCBsaWtlIGJlaW5nIGFibGUgdG8gdGhlaXIgbWF0Y2ggY3VzdG9tZXIgZSBtYWlsIGxpc3RzIHRvIHBlb3BsZSBzaG9wcGluZyBvbiBBbWF6b24gdG8gdGFyZ2V0IGFkcyB0byB0aGVtLiBBbWF6b24gYWxzbyBoYXMgYmFzaWMgZGVtb2dyYXBoaWMgYW5kIHNob3BwaW5nIGRhdGEgdGhhdCBsZXQgYWR2ZXJ0aXNlcnMgdGFyZ2V0IGNvbnN1bWVycyBiYXNlZCBvbiBjaGFyYWN0ZXJpc3RpY3MgbGlrZSBhZ2UsIGxvY2F0aW9uLCBnZW5kZXIgYW5kIHB1cmNoYXNlIGhpc3RvcnkuLiAKSW4gZmFjdCwgbW9zdCBiYWQgYnJlYXRoIGZvbGxvd3MgYSBnZW5lcmFsIHJ1bGUgb2YgdGh1bWI6IFRoZSBtb3JlIHBvdGVudCB0aGUgc21lbGwgb2YgdGhlIGxpcXVpZCBvciBmb29kIHRoYXQgaXMgaW5nZXN0ZWQsIHRoZSBtb3JlIHBvdGVudCBpdHMgZWZmZWN0IG9uIHlvdXIgYnJlYXRoLiBJdCdzIHRoZSBzYW1lIHJlYXNvbiB3aHkgZWF0aW5nIG9uaW9ucyBvciBnYXJsaWMgd2lsbCBsZW5kIHlvdXIgYnJlYXRoIGFuIHVuc2F2b3J5IHNtZWxsIGZvciBob3VycyBvbiBlbmQgW3NvdXJjZXM6IE1heW8gQ2xpbmljLCBMaXZlIFNjaWVuY2VdLi4gCkxlIGZycmUgZXN0IGxhIHNvZXVyIHNvbnQgaXNzdXMgZCd1bmUgZnJhdHJpZSBkZSA0IGVuZmFudHMgZG9udCBpbHMgc29udCBsZXMgc2V1bHMgc3Vydml2YW50cy4gCkEgZ2VudWluZWx5IGV4Y2VwdGlvbmFsIG1lbWJlciBvZiB0aGUgcHJvZmVzc2lvbi4gCkkgbG9va2VkIGJhY2sgYW5kIHNhdyB0aGUgZHVkZSBoYWQgcHJvamVjdGlsZSB2b21pdGVkIGFsbCBvdmVyIHRoZSBwbGFjZSBhbmQgd2FzIHNpdHRpbmcgaHVuY2hlZCBvdmVyIHdpdGggaGlzIGhlYWQgYnkgaGlzIGtuZWVzLiAKRGV0ZXJtaW5lIHdoZXJlIHRoZSBuYWlscyBzaG91bGQgZ28gYW5kIG1hcmsgaXQgb24gZWFjaCBzaGVldC4uIApUbyBiZSBzdXJlLCB0aGlzIHdvbiBiZSB0aGUgZmlyc3QgdGltZSBpZGlvY3kgd291bGQgaW52YWRlIHRoZSBXaGl0ZSBIb3VzZS4gV2UgaGF2ZSB2aXZpZCBtZW1vcmllcyBvZiBHZW9yZ2UgVyBCdXNoIChlaWdodCB5ZWFycykgYXQgdGhlIGhlbG0uIFRoZSBtYW4sIGxpdGVyYWxseSwgY291bGQgbm90IHRlbGwgcmlnaHQgZnJvbSBsZWZ0LCBhbmQgd2hlbiBoZSB3YXMgbm90IHNwZW5kaW5nIHRpbWUgcHVraW5nIG9uIGRpbm5lciB0YWJsZXMsIGhlIHdhcyBidXN5IHR1cm5pbmcgdGhlIHdvcmxkIHVwc2lkZSBkb3duIGEgYml0IGxpa2UgdGhlIGJvb2tzIGhlIGhlbGQgYmVmb3JlIGNhbWVyYXMuLiAKSXQgd2FzIGZ1Y2tpbmcgaGVsbC4gCkFuYWVyb2JpYyBnbHljb2x5c2lzIG9ubHkgZ2l2ZXMgeW91IHR3byBtaW51dGVzIG9mIGxlc3MsIGJ1dCBzdGlsbCB2ZXJ5IGludGVuc2UgYWN0aXZpdHkuIApOaSBsIG5pIGwgbmUgZnVyZW50IHJvbWFuaXNlcywgZXQgY2VzIGRldXggcGF5cyBhaW5zaSBxdWUgbGUgcGF5cyBkZSBHYWxsZXMgZnVyZW50IGxlcyB2cml0YWJsZXMgZm95ZXJzIGR1IENlbHRpc21lLCBkZSBzb3J0ZSBxdWUgIGxlcyBsZXMgYnJpdGFubmlxdWVzIHNlcnZpcmVudCBkZSBkcHQgZXQgc2F1dnJlbnQgbGVzIHBhdHJpbW9pbmVzIGN1bHR1cmVscyBldCBzcGlyaXR1ZWxzIGRlcyBwZXVwbGVzIGV1cm9wZW5zIGQgIChSLiBSZXpuaWtvdiwgbGVzIENlbHRlcyBldCBsZSBEcnVpZGlzbWUsIHAuMTIzKS4uIAoyIG1vc3QgbGlrZWx5IHJlYXNvbnMgd2h5IHNvbHZlcnMgZG9udCBvdmVyYmV0IGZsb3BzIGFyZSB0aGF0IG9uIHRoZSBmbG9wIHJhbmdlcyBhcmUgbW9zdCBvZnRlbiBhdCB0aGVpciB3aWRlc3QgbWVhbmluZyB0aGVyZSBpcyBhbG90IG9mIG1lcmd5IHN0dWZmIGZvciBib3RoIHBsYXllcnMuIFRoaXMgbWVhbnMgc29sdmVyIGNhbnQgYnVpbGQgYSBiYWxhbmNlZCBvdmVyYmV0dGluZyBzdHJhdGVneSBiYyBpdCBsb3NlcyBldiB0cnlpbmcgdG8gYmFsYW5jZSBvdXQgdXIgc3Ryb25nIG92ZXJiZXR0aW5nIHJhbmdlLiBTZWNvbmQgcmVhc29uIGlzIHRoYXQgc3RhY2tzIGFyZSBvbmx5IDEwMGJiIHNvIGVhcmx5IG92ZXJiZXR0aW5nIG9mdGVuIGNvbW1pdHMgdXIgb3Bwb25lbnQgdG8gdGhlIHBvdCBtZWFuaW5nIGhpcyBmdXR1cmUgZGVjaXNpb25zIGJlY29tZSBtb3JlIGNsZWFyIGFuZCB1ciBvcHRpb25zIGJlY29tZSB3b3JzZS4uIApTbywgSSBoYXZlIG5hcmNvbGVwc3ksIHdoaWNoIGlzIGxpa2UgbGl2aW5nIGxpa2UgeW91J3ZlIGJlZW4gYXdha2UgZm9yIDI0IDQ4IGhvdXJzIHJlZ2FyZGxlc3Mgb2YgaG93IG11Y2ggc2xlZXAgeW91IGdldC4gCk9oLCBhbmQgaW4gY2FzZSB5b3UgZG9uIGtub3cgdGhlIFRoaXJkIFdpbmRvdyBGaWxtIHJlbGVhc2Ugb2YgMTAwMSBOaWdodHMgaGFzIGEgY29tbWVudGFyeSB0cmFjayBieSBIZWxlbiBNY0NhcnRoeSBvbiBpdCB0aGF0IHdpbGwgbGlrZWx5IGJlIHZlcnkgaGVscGZ1bCBmb3IgeW91LiAKR28gZm9yIGZyZXNoIGZydWl0cyBhbmQgdmVnZXRhYmxlcy4gClRvcCBvbiB0aGUgbGlzdCBvZiBwb3RlbnRpYWwgdmVudWVzIGZvciB0aGUgbmV4dCBzaGFsZSBib29tIGFyZSBDaGluYSwgUnVzc2lhIGFuZCBBcmdlbnRpbmEsIGJ1dCB0aGUgd29ybGQgbmV4dCBzaGFsZSByZXZvbHV0aW9uIGxpa2VseSB3aWxsIGJlIGluIEF1c3RyYWxpYSwgd2hpY2ggYXBwZWFycyB0byBiZSB0aGUgbW9zdCBhdHRyYWN0aXZlIHBsYWNlIGZvciBjb21wYW5pZXMgdG8gcHVyc3VlIHRpZ2h0IG9pbCBhbmQgZ2FzLCBhY2NvcmRpbmcgdG8gYSBMdXggUmVzZWFyY2ggYW5hbHlzaXMgcmVsZWFzZWQgcmVjZW50bHkuIApFbGxlIGEgcHJpcyBjb25nIEVsbGUgYSBmYWl0IGRldXggaGV1cmVzIGRlIHJvdXRlIHBvdXIgYWxsZXIgU2hlcmJyb29rZS4gVW5lIGZvaXMgc3VyIHBsYWNlLCBvbiBsdWkgYSBkaXQgOiBDZSBuIHBhcyBpY2ksIGlsIGZhdXQgYWxsZXIgUmljaG1vbmQuIFMgcmVuZHVlIFJpY2htb25kLiAKVGhlIHRhYmxlIGNvbWVzIHdpdGggMTYgcHJlbWl1bSBwaGVub2xpYyBiYWxscywgd29vZCByYWlsIGJydXNoLCBjaGFsayBjdWUgcmVwYWlyIGtpdCwgcG9vbCB0YWJsZSBjb3ZlciwgY2hhbGssIGNoYWxrIGhvbGRlcnMsIGEgYnJpZGdlIHN0aWNrLCB0b3VybmFtZW50IGxlbmd0aCBjdWUgc3RpY2tzLCBwb29sIGJhbGxzLCBhbmQgYSB3b29kIHRhYmxlIGJydXNoLiBJdCdzIGEgcHJvZmVzc2lvbmFsIHBvb2wgdGFibGUgdGhhdCdzIGVhc2lseSBjb252ZXJ0ZWQgaW50byBhIGRpbmluZyB0YWJsZSBmb3Igc2l4IHBlb3BsZSB0byBlYXQgZGlubmVyIG9uLiBJdCdzIDcgZmVldCBpbiBkaWFtZXRlci4gClRoZSBnb3Zlcm5tZW50IGNhbiBhZmZvcmQgdG8gc2hlZCB0d28gc2VhdHMsIHdoaWxlIExhYm9yIG11c3QgbmVhcmx5IGRvdWJsZSBpdHMgc2V2ZW4gc2VhdHMgdG8gYm91bmNlIGJhY2sgaW50byBwb3dlciBmb2xsb3dpbmcgYSBkcnViYmluZyBpbiAyMDE0LiBUaGUgVGFzbWFuaWFuIEdyZWVucyBjb3VsZCBsb3NlIG9uZSBvZiB0aGVpciB0aHJlZSBzZWF0cyBhZnRlciBhIGNhbXBhaWduIGRldm9pZCBvZiBhIGNlbnRyYWwgZW52aXJvbm1lbnRhbCBpc3N1ZSB0byByYWxseSBhcm91bmQsIHdoaWxlIHRoZSBKYWNxdWkgTGFtYmllIE5ldHdvcmsgcHJlZmVyZW5jZXMgbWF5IG1ha2UgdGhpbmdzIGludGVyZXN0aW5nLiAKV2hhdCB3aWxsIHByb2JhYmx5IGhhcHBlbiBpcyB0aGF0IHRoZXkgd2lsbCB1c2UgZmVtYWxlIHByb25vdW5zIHVudGlsIHRoZSAicmV2ZWFsIiBhbmQgdGhlbiBzdGFydCB1c2luZyBtYWxlLgpNZWxpc3NhIEFyc2VuaXVrIHdyaXRlcyBhYm91dCBMYXMgVmVnYXMgZW50ZXJ0YWlubWVudCBhbmQgY2VsZWJyaXR5IGV2ZW50cy4gU2hlIGNhbiBiZSByZWFjaGVkIGF0IDcwMiA5NDggNzgyMyBvciBieSBlIG1haWwgYXQgW2VtYWlsIFJpbyBBbGwgU3VpdGUgSG90ZWwgYW5kIENhc2lubyBDYXJuaXZhbCBsYXN0cyBhbGwgeWVhciBhdCB0aGUgUmlvLiAKU291dGhsYW5kIGlzIGFub3RoZXIgbWF0dGVyLCBjZXJ0YWlubHkgaW4gdGVybXMgb2YgYXR0ZW5kYW5jZS4gVG90YWwgZG9nIHdhZ2VyaW5nIGluIDIwMTMsIHRoZSBtb3N0IHJlY2VudCBmaWd1cmUgSSBjYW4gZGlnIHVwIG9uIGEgaG9saWRheSwgd2FzIGRvd24gdG8gJDE4IG1pbGxpb24gb24gYWxtb3N0IDYsMDAwIGRvZyByYWNlcywgb3IgYmFyZWx5IG1vcmUgdGhhbiAkMywwMDAgd2FnZXJlZCBwZXIgcmFjZS4gR3JleWhvdW5kIHRyYWNrcyBhY3Jvc3MgdGhlIGNvdW50cnkgYXJlIHN0cnVnZ2xpbmcgYW5kIHNvbWUgaGF2ZSBnaXZlbiB1cCBkb2cgcmFjaW5nIGVudGlyZWx5IGZvciBhIHN3aXRjaCB0byBjYXNpbm9zLi4gCkZyb20gdGhlIDE5NjBzIHRocm91Z2ggdGhlICc4MHMgaGUgb3BlcmF0ZWQgRWlmZXJtYW4ncyBHeW1zIGluIEhhd2FpaSwgVmlzdGEsIENhbGlmLiwgYW5kIGluIExhcyBWZWdhcy4gRnJvbSB0aGUgbWlkIDE5NjBzIHRvIHRoZSBsYXRlIDE5NzBzIHRoZSBsb2NhbCBneW0gd2FzIG5leHQgdG8gdGhlIFNob3dib2F0IGhvdGVsLCBub3cgdGhlIENhc3Rhd2F5cy4gRnJvbSB0aGUgbGF0ZSAxOTcwcyB0byAxOTkwIHRoZSBneW0gd2FzIGluIHRoZSBDb21tZXJjaWFsIENlbnRlciBvbiBFYXN0IFNhaGFyYSBBdmVudWUuLiAKU28sIHdoYXQgcGVvcGxlIGFyZSBhZnJhaWQgb2YgaXMgbm90IHRoYXQgdGhlcmUgYXJlIHR3byBNdXNsaW1zIGluIENvbmdyZXNzLiAKSXQgaXMgYWxzbyB0aGUgcGVyZmVjdCBnaWZ0IGZvciB0aG9zZSB3aXRoIHBvc3R1cmUgcHJvYmxlbXMgb3IgcmVjb3ZlcmluZyBmcm9tIHNldmVyZSBzdXJnZXJ5OiBhbiBvdW5jZSBvZiBjb21mb3J0IGZvciB0aGUgdXN1YWxseSBzdWZmZXJpbmcgaW5kaXZpZHVhbHMuIApJIGhhdmUgYmVlbiBtb2xlc3RlZCBhcyBhIGtpZCBvbiBhbmQgb2ZmIGJ5IGRpZmZlcmVudCBwZW9wbGUgYW5kIGV2ZW4gcGVvcGxlIG9mIG15IG93biBhZ2UgZ3JvdXAuIEkgd291bGQgc2F5IHRoZSByYW5nZSB3b3VsZCBiZSBsaWtlIDQgMjEuIEkgMjMgbm93LiBJdCBoYXBwZW5lZCBzbyBtdWNoIGFzIGEga2lkIEkgYmVjYW1lIGxlc3MgZmF6ZWQgYnkgaXQgb3ZlciB0aW1lIGFuZCBJIG5ldmVyIGxvb2tlZCBmb3IgaGVscCBvciB0b2xkIGFueW9uZSBhYm91dCBpdC4gSSBqdXN0IGtlcHQgaXQgdG8gbXlzZWxmIGFuZCBtb3ZlZCBmb3J3YXJkLiBBbHdheXMgc21pbGluZyBhbmQgYWN0aW5nIGxpa2Ugbm90aGluZyBoYXBwZW5lZC4KRmFyIGFzIHRoZSB3cml0aW5nIGZvY3VzIGZvciB0aGUgc2l0ZSBpcyBjb25jZXJuZWQsIEkgY291bGQgbm90IGFncmVlIG1vcmUgd2l0aCBzb21lIG9mIHRoZSBjb21tZW50cyBtYWRlIGFuZCB0aGUgcmVxdWlyZW1lbnRzIGxpc3QgaXMgdmVyeSBtdWNoIGJhc2VkIG9uIHdoYXQgd2UgY2FuIGRvIHRvIG1ha2Ugd3JpdGluZyBlYXNpZXIuIApVbnRpbCBhcHJpbCAyMDA2IG15IEJhbmtyb2xsIG5ldmVyIHJvc2UgYWJvdmUgJDEwMDAsIHNvIEkgd2FzIGJyZWFrIGV2ZW4gYXQgYmVzdC4gVGhlbiBJIHdvbiBhIHNtYWxsIHRvdXJuYW1lbnQgZm9yICQxMTAwIGFuZCBkZWNpZGVkIHRvIGZvY3VzIG15IGF0dGVudGlvbiBvbiBOTEggaW5zdGVhZCBvZiB0aGUgbGltaXQgZ2FtZXMsIGl0IHdhcyBhdCB0aGF0IHRpbWUgSSBkaXNjb3ZlcmVkIDIrMiBhbmQgbW9zdCBpbXBvcnRhbnRseSB3YXRjaGVkIGEgdmlkZW8gZnJvbSBUYXlsb3IgQ2FieSBvbiBDYXJkcnVubmVycy4KUmVjZW50IHN0dWRpZXMsIHJlc2VhcmNoZXJzIGhhdmUgc2hvd24gdGhhdCBzdWNoIGRpc3RhbmNlIHRlbXB0cyBwZW9wbGUgdG8gc2NyaXB0IGhvdyB0aGV5IHdvdWxkIGFjdCBpbiB0aGUgc2FtZSBwbGFjZSwgYW5kIG92ZXJlc3RpbWF0ZSB0aGUgZm9yY2Ugb2YgdGhlaXIgb3duIHByb2Zlc3NlZCBtb3JhbCBwcmluY2lwbGVzLi4gClVubGVzcyB5b3UgYXJlIHNpZ25lZCBpbiB0byBhIEh1YlBhZ2VzIGFjY291bnQsIGFsbCBwZXJzb25hbGx5IGlkZW50aWZpYWJsZSBpbmZvcm1hdGlvbiBpcyBhbm9ueW1pemVkLiBBbWF6b24gV2ViIFNlcnZpY2VzVGhpcyBpcyBhIGNsb3VkIHNlcnZpY2VzIHBsYXRmb3JtIHRoYXQgd2UgdXNlZCB0byBob3N0IG91ciBzZXJ2aWNlLiAoUHJpdmFjeSBQb2xpY3kpQ2xvdWRmbGFyZVRoaXMgaXMgYSBjbG91ZCBDRE4gc2VydmljZSB0aGF0IHdlIHVzZSB0byBlZmZpY2llbnRseSBkZWxpdmVyIGZpbGVzIHJlcXVpcmVkIGZvciBvdXIgc2VydmljZSB0byBvcGVyYXRlIHN1Y2ggYXMgamF2YXNjcmlwdCwgY2FzY2FkaW5nIHN0eWxlIHNoZWV0cywgaW1hZ2VzLCBhbmQgdmlkZW9zLiAKTWU6IEJ1dCBJIGFjdHVhbGx5IGJlIHJpZ2h0IG92ZXIgaGVyZS4gSSBoYXZlIHRvIGp1bXAgaW4gaWYgc29tZXRoaW5nIGhhcHBlbmVkLiBJIGZlZWwgbXVjaCBtb3JlIGNvbWZvcnRhYmxlIHdpdGggREggaW4gdGhlIHdhdGVyIHNvIHdlIGdvaW5nIHRvIHdhaXQgZm9yIERIIGJlZm9yZSBwdXR0aW5nIHRoZSBiYWJ5IGluIHRoZSBwb29sLgpZb3UgY2FuIGFsc28gcHV0IG5vdGVzIGluIHRoZWlyIGZpbGVzIHdpdGggcmVtaW5kZXJzIGFib3V0IHRoZWlyIHBlcnNvbmFsIHN0dWZmLiAiRGF1Z2h0ZXIgSmFuZSBpcyBhdCBjb2xsZWdlIiBvciB3aGF0ZXZlci4gVGhleSB3aWxsIGFwcHJlY2lhdGUgd2hlbiB5b3UgYXNrIGhvdyBKYW5lIGlzIGRvaW5nIGF0IHNjaG9vbC4KQmVmb3JlIHBlbm5pbmcgUnVubmVyIFJ1bm5lciwgdGhleSB3cm90ZSB0aGUgTWF0dCBEYW1vbiBkcmFtYSBSb3VuZGVycywgdGhlIGNhc2lubyBoZWlzdCBjYXBlciBPY2VhbidzIFRoaXJ0ZWVuIChhbHNvIHdpdGggRGFtb24gYW5kLCB3ZWxsLCBldmVyeW9uZSksIGFuZCB0aGUgcG9rZXIgVFYgc2VyaWVzIFRpbHQuIERpcmVjdG9yIEJyYWQgRnVybWFuIGNvbWVzIHRvIHRoZSB0YWJsZSB3aXRoIG5vIHByZXZpb3VzIGV4cGVyaWVuY2Ugb24gYSBnYW1ibGluZyBtb3ZpZSwgYnV0IGhlIGRpZCBoZWxtIHRoZSBNYXR0aGV3IE1jQ29uYXVnaGV5IGxlZ2FsIHRocmlsbGVyIFRoZSBMaW5jb2xuIExhd3llci4gCk5vdyB0YWtlIGEgY2xvc2VyIGxvb2sgICBub3QgYXQgeW91ciBuYWlscywgYnV0IGF0IHlvdXIgY3V0aWNsZXMuIExvb2sgYXQgdGhlIGJhc2Ugb2YgeW91ciBuYWlsICAgdGhlIGFyZWEgd2hlcmUgdGhlIG5haWwgbWVldHMgeW91ciBza2luLiBZb3Ugc2hvdWxkIHNlZSBhIHdoaXRlIGNyZXNjZW50IGNhbGxlZCB0aGUgbHVudWxhLiAKQWRkaXRpb25hbGx5IGFzIGZhciBhcyBJIGNhbiB0ZWxsIHRoZXJlIGlzIG5vIGFjdHVhbCBpbmZvcm1hdGlvbiB0aGF0IE1PUkUgY29uc2VydmF0aXZlcyBhcmUgYmVpbmcgZGVuaWVkIHNwZWFraW5nIHRpbWUgdGhhbiBMaWJlcmFsIGp1c3QgdGhhdCBTT01FIGNvbnNlcnZhdGl2ZXMgaGF2ZSBiZWVuIGRlbmllZCBzcGVha2luZyB0aW1lLiBBZGRpdGlvbmFsbHkgYSBzY2hvb2wgc3BlYWtlciBsaXN0IHNob3VsZCBiZSBkZXRlcm1pbmVkIGJ5IG1heGltdW0gZWR1Y2F0aW9uYWwgYmVuZWZpdCAoZGV0ZXJtaW5lZCBieSB0aGUgdW5pdmVyc2l0eSkgaXMgaXQgYW50aSBmcmVlIHNwZWVjaCB0byByZWZ1c2UgdG8gaG9zdCBhIGZsYXQgZWFydGhlciBvciBhIGhvbG9jYXVzdCBkZW5pZXIgaW4gZmF2b3Igb2YgYW4gYXN0cm9waHlzaWNpc3QgYW5kIGFuIGV4cGVydCBvbiBHZXJtYW4gaGlzdG9yeS4gQWdhaW4gSSBub3Qgc2F5aW5nIGFueSBwYXJ0aWN1bGFyIG9yZ2FuaXphdGlvbiBJUyB0aG9zZSB0aGluZ3MgYnV0IFdITyBnZXRzIHRvcCBkZXRlcm1pbmUgdGhhdCwgaWYgeW91IGxldCBpdCBiZSB0aGUgcHJlc2lkZW50IHRoZSBuZXh0IGxpYmVyYWwgcHJlc2lkZW50IGlzIGRlZmluaXRlbHkgZ29ubmEgZnVjayBldmVyeSBzY2hvb2wgeW91IGxpa2UgdG8gZGVhdGggd2l0aCB0aGVzZSByZXF1aXJlbWVudHMuLiAKQnV0IEkgZG9uIHVuZGVyc3RhbmQgZW5vdWdoIG9mIHRoaXMgaXNzdWUsIHNvIEkgdHJ1c3QgdGhlIHBvbGl0aWNpYW5zIG9uIHRoaXMgb25lLgpJIHVzZWQgdG8gaGF2ZSBhIGNsZWFuaW5nIGxhZHkgd2hvIGxvb2tlZCBsaWtlIE5vcmEgQmF0dHkgc2hlIGhlbGQgaXQgYnkgb25lIGhhbmRsZSB3aGlsZSBzaGUgc2NydWJiZWQgaXQgd2l0aCB0aGUgb3RoZXIgaGFuZCwgYW5kIGRyb3BwZWQgaXQuIApSZWFwZXIgaXMgdGhlIGxlYWRlciBvZiBMb3MgTXVlcnRvcywgb3IsIHdhcyBhbnl3YXksIGFuZCBoaXMgTWFyaWFjaGkgc3VpdCB3YXMgaGlzIExvcyBNdWVydG9zIG91dGZpdC4gSXQgYWxzbyBtYWtlcyBzZW5zZSBiZWNhdXNlIHdoZW4gdGhlIG90aGVyIG1lbWJlcnMgb2YgTG9zIE11ZXJ0b3MgZ2V0IHphcHBlZCwgaXQgc2hvd3Mgc2tlbGV0b24gdGF0dG9vcyAob3Igc29tZXRoaW5nIGxpa2UgdGhhdCwgdGhleSBhcmUgVGhlIERlYWQiLiAKSHJhYnJhU3JjYSB1ClllYWggdGhhdCdzIGl0IEkgd2Fzbid0IGZhbWlsaWFyIHdpdGggdGhlIHRlcm0uIEkgZ3Vlc3MgSSdsbCBqdXN0IGtlZXAgdXNpbmcgaXQgYXQgdGhlIHNtYWxsIHN0YWtlcyB0YWJsZXMgSSBwbGF5IGF0IHdoZXJlIHBlb3BsZSBtb3JlIGxpa2VseSBjYW4ndCBzZWUgdGhyb3VnaCBpdC4gSSBzdGlsbCBmZWVsIGxpa2UgaXQgY291bGQgYmUgYmVuZWZpY2lhbCBpbiBoaWdoZXIgc3Rha2VzIHRvIGNhdGNoIHRoZSBwcmUgZmxvcCByYWlzZXIgb2ZmIGd1YXJkLiAKRmFjZWJvb2sgcG9rZXIgcGxheWVycyBjb21wZXRlIGFnYWluc3QgZWFjaCBvdGhlciB0byBkZXRlcm1pbmUgd2hvIGNhbiBidWlsZCB0aGUgbGFyZ2VzdCBzdGFjayBvZiBmYWNlYm9vayBwb2tlciBjaGlwcywgenluZ2EgcG9rZXIgY2hpcHMsIHdzb3AgcG9rZXIgY2hpcHMgb3IgYW55IG51bWJlciBvZiBvdGhlciBkaWdpdGFsIHBva2VyLlNob3cgRGV0YWlsc05lY2Vzc2FyeUh1YlBhZ2VzIERldmljZSBJRFRoaXMgaXMgdXNlZCB0byBpZGVudGlmeSBwYXJ0aWN1bGFyIGJyb3dzZXJzIG9yIGRldmljZXMgd2hlbiB0aGUgYWNjZXNzIHRoZSBzZXJ2aWNlLCBhbmQgaXMgdXNlZCBmb3Igc2VjdXJpdHkgcmVhc29ucy4gTG9naW5UaGlzIGlzIG5lY2Vzc2FyeSB0byBzaWduIGluIHRvIHRoZSBIdWJQYWdlcyBTZXJ2aWNlLiBHb29nbGUgUmVjYXB0Y2hhVGhpcyBpcyB1c2VkIHRvIHByZXZlbnQgYm90cyBhbmQgc3BhbS4gCjUsNiBhcmUgY3VycmVudGx5IGJlaW5nIGJ1aWx0LiAgMyw0IGhhdmUgY2Vhc2VkIGNvbnN0cnVjdGlvbiBhcyBvZiBKdW5lIDIwMTguIFRoZSBnb3Zlcm5tZW50IGN1cnJlbnRseSBlc3RpbWF0ZXMgbnVjbGVhciBlbmVyZ3kgcHJvZHVjdGlvbiB3aWxsIHJpc2UgMjUlIGZyb20gMjIuNUdXIGluIDIwMTcgdG8gMjcuNUdXIGluIDIwMjIuCkkgZm9sZGVkIHByZXR0eSBxdWlja2x5IGFuZCBzYWlkIHNvbWV0aGluZyBhYm91dCByZXNwZWN0aW5nIGhpcyBiZXQ7IGhlIHNob3dlZCBBQS4uIApUaGUgdHJhaWwgc3RhcnRzIGluIGEgdGhpY2sganVtYmxlIG9mIHJlZHdvb2QgYW5kIERvdWdsYXMgZmlyLiBTaW5jZSBpdCdzIG9ubHkgNSBtaWxlcyAoOCBraWxvbWV0ZXJzKSBsb25nLCB5b3UncmUgbm90IGV4cGVjdGluZyBkcmFtYXRpYyBjaGFuZ2VzIGluIHNjZW5lcnkuIEJ1dCBiZWZvcmUgbG9uZywgdGhlIHBhdGggbGVhZHMgeW91IG91dCBvZiB0aGUgZm9yZXN0IGFuZCB1cCAxLDQ2NiBmb290ICg0NDcgbWV0ZXIpIEJhcm5hYmUncyBQZWFrLCB3aGVyZSB5b3UncmUgdHJlYXRlZCB0byBzd2VlcGluZyB2aWV3cyBvZiB0aGUgY291bnRyeXNpZGUuIApUaGUgZGFuY2VycyB3ZXJlIGRlZmluaXRlbHkgdGhlIHdvcnN0IHBhcnQgb2YgaXQuIFNvbWUgZGFuY2VycyBhcmUgbm9ybWFsIHBlb3BsZSwgYnV0IGEgbG90IG9mIHRoZW0gYXJlIGVnbyBkcml2ZW4gbG9vbnMgdGhhdCB0aGluayB0aGUgZXZlbnQgaXMgYWJvdXQgdGhlbSwgY29tcGxldGVseSBmb3JnZXR0aW5nIHRoZSB3aG9sZSBraWQgYW5kIGNhbmNlciB0aGluZy4gCkxpZ2h0c2hvYXggIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGhvdXJzIGFnbwpUaGUgbmV4dCBzZXNzaW9uIHN0YXJ0cyB3aXRoIHRoZSBEU00gViBzaXR0aW5nIHNxdWFyZWx5IGluIHRoZSBtaWRkbGUgb2YgdGhlIHJvb20sIHNvIHdlIGhhdmUgdG8gdGFsayBhYm91dCBpdC4gSSByZWFkIHdvcmQgZm9yIHdvcmQgIGVhY2ggZGlhZ25vc3RpYyBjcml0ZXJpYSwgaGVscGluZyB0aGVtIHVuZGVyc3RhbmQgaXQgaW4gbGF5bWFucyB0ZXJtcy4gCkhlIGhhZCBhIHNlY29uZCBob21lIGluIE1lc3F1aXRlLCBOZXZhZGEsIHdoZXJlIG5laWdoYm9ycyByZWNhbGxlZCBzZWVpbmcgbGl0dGxlIG9mIFBhZGRvY2sgYWZ0ZXIgaGUgYm91Z2h0IGEgaG91c2Ugb24gYSBjdWwgZGUgc2FjLgpJbiBhbnkgZXZlbnQgaXQgc2VlbXMgdGhhdCBhdCB0aGlzIHBvaW50IG9mIHRoZSBkZWNhZGUgdGhhdCB0aGUgcG9zc2liaWxpdHkgb2YgbGlmZSBvbiBNYXJzIHdhcyB2ZXJ5IGRpc3RpbmN0IGFsbW9zdCBpbiBzb21lIGNhc2VzIGEgZm9yZWdvbmUgY29uY2x1c2lvbi4gVG8gaWxsdXN0cmF0ZSB0aGlzLCBoZXJlIGlzIGEgc2hvcnQgc3RvcnkgYWJvdXQgYSBzaG9ydCBub3RpY2Ugb2YgYSBjb25zaWRlcmFibGUgcHJpemUgb2ZmZXJlZCBieSBhIGNpdGl6ZW4gb2YgRnJhbmNlIGZvciBzY2llbnRpZmljIGFjaGlldmVtZW50LiAKQWJzb2x1dGUgUG9rZXIgY3VycmVudGx5IGhhdmUgYSAkNTAgZnJlZXJvbGwgZXZlcnkgdHdvIHRvIHRocmVlIGhvdXJzIHdoaWNoIHBheXMgJDEwIHRvIHRoZSB3aW5uZXIgYW5kICQ1IHRvIHRoZSBvdGhlciBwbGF5ZXJzIHdobyBtYWRlIHRoZSBmaW5hbCB0YWJsZS4gVGhlcmUgY2FuIGJlIHVwIHRvIDIwMDAgcGxheWVycyBpbiB0aGVzZSBmcmVlcm9sbHMgYXQgdGltZXMgc28gdGhlIGNvbXBldGl0aW9uIGlzIGhvdCwgYnV0IGl0cyBhIHJpc2sgZnJlZSB3YXkgdG8gZ2V0IGFjcXVhaW50ZWQgd2l0aCBNdWx0aSBUYWJsZSB0b3VybmFtZW50cy4KQW5kIHlvdSBvYnZpb3VzbHkgZG8gbm90IGtub3cgYW55dGhpbmcgYWJvdXQgY2FubmFiaXMgZXh0cmFjdHMgYW5kIHRlcnBlbmVzLiBUaGUgcHJvb2YsIHlvdSBhcmUgdGFsa2luZyBnb29kIGZsYXZvciBhbmQgeW91IHB1dCBkaWFtb25kcyBpbiB0aGF0IG5hc3R5IHN0YWlubGVzcyBzdGVlbCBjb2lsICh0aGF0IHlvdSBzaG93IG1lIGluIHBpY3R1cmUpLiAKSSBzdGlsbCBsaXN0ZW4gdG8gR2FHYSBidXQgYXQgdGhpcyBwb2ludCBpdHMgc2ltcGxlIHRvIGtub3cgYWxsIGhlcnNvbmdzIGJ5IGxpc3RlbmluZyB0byBoZXIgYWxidW1zLiAKQ2hlY2sgd2hlbiB5b3VyIG9sZGVzdCBjYW4gdXNlIGEgYm9vc3RlciBzZWF0LCBhbmQgbG9vayBmb3IgMTcgMTgiIHdpZGUgc2VhdHMuIApJIHdvdWxkIGxpa2UgdG8gdHJ5IGl0LCBob25lc3RseSwgYnV0IEkgd291bGQgaGF2ZSByYXRoZXIgc2VlbiBzb21lb25lIGZyb20gSG9tZXJvb20gb3IgSGFybGVtIFB1YmxpYyAocGxhY2VzIGZhbW91cyBmb3IgbWFjIGFuZCBjaGVlc2UpLiBTdGlsbCwgSSB0aGluayB0aGlzIHZpZGVvIHNlcmllcyBpcyBwcmV0dHkgY29vbC4uIApXaGlsZSBUaXNzb3QgcHJlc2NyaWJlZCBhIHJlZ2ltZW4gb2YgdGVubmlzLCBiYWRtaW50b24gYW5kIGNyb3F1ZXQgdG8gY29tYmF0IHRoZXNlIGVmZmVjdHMsIG90aGVycyBhZHZvY2F0ZWQgc3RhbmRpbmcgd29yay4KQSByZWFsIHNoaXQgc2hvdy5BbmQgdGhlbiB0aGlzIHRoaW5nIGNvbWVzIG91dCBhbmQgSSBjYW4gaGVscCBidXQgbm90ZSBvbmUgb2YgdGhlIHR3byBtZW4gdGVzdGlmaWVkIHllYXJzIGJhY2suIApQb2xpY2Ugc2F5IHRoZXkgcmVjb3ZlcmVkIGEgdG90YWwgb2YgMzQgd2VhcG9ucyBiZWxvbmdpbmcgdG8gUGFkZG9jaywgaW5jbHVkaW5nIDE2IGZyb20gdGhlIGhvdGVsIHJvb20gYW5kIDE4IGF0IGhpcyBob21lIGluIE1lc3F1aXRlLCBhIHNtYWxsIGRlc2VydCB0b3duIHBvcHVsYXIgd2l0aCBnb2xmZXJzIGFuZCBnYW1ibGVycy4gU29tZSB3ZXJlIGF1dG9tYXRpYyB3ZWFwb25zIG9yIHNlbWkgYXV0b21hdGljIHJpZmxlcyBpbGxlZ2FsbHkgbW9kaWZpZWQgaW50byBtYWNoaW5lIGd1bnMuCjUyMzE2WE8gIDc0IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpEZW5uIHZvbiBBdGhlbiBhdXMgZiBrZWluZSBGIGF1ZiBkaWUgU3BvcmFkZW4uIFdvbWl0IGFiZXIgenVtaW5kZXN0IHNjaG9uIGVpbm1hbCBnZWtsIHcgZGFzcyBlcyBzaWNoIGJlaSBkZW4gU3BvcmFkZW4gdW0gZ3JpZWNoaXNjaGUgSW5zZWxuIGhhbmRlbHQuIApJIGFncmVlIG9uIHRoZSBpbmZpbml0eS4gVGhlcmUgYXJlIGEgbG90IG9mIHZlcnkgZmxleHkgbW92ZXMgSSBlbmpveSwgYnV0IEkgaSBrbm93IHdoYXQgeW91IG1lYW4gd2l0aCB0aGUgImxvb2sgd2hhdCBJIGNhbiByZWFjaCIuIEkgd2VudCB0byBzZWUgUG9sZSBBcnQgaW4gSGVsc2lua2kgdGhpcyB5ZWFyIGFuZCBhdCBvbmUgcG9pbnQgdGhlIGhvc3Rlc3MgYXNrZWQgdGhlIGp1ZGdlcyB3aGF0IHRoZXkgd2FudCB0byBzZWUgbW9yZSBmcm9tIHBvbGUgZGFuY2luZy4gCkkgY29vbCB3aXRoIGEgdGhyaWZ0eSBpbnRpbWF0ZSB3ZWRkaW5nLCBidXQgSSBkb24gd2FudCBpdCB0byBmZWVsIGxpa2UgYSBqb2tlIG9yIGEgInRocm93YXdheSIga2luZGEgdGhpbmcuIApJbiB0aGF0IGNhc2UsIGJlIHByZXBhcmVkIHRvIGNvb2xseSBmb2xkIHVudGlsIHlvdSBhcmUgaG9sZGluZyBzb21lIGR5bmFtaXRlLiAKSXQgaGFwcGVucy4gCk1heWJlIHlvdSBjb3VsZCB0cnkgdG8gaW1hZ2luZSBob3cgdGhpcyB3b3JrcyBpZiB5b3UgZXh0cmFwb2xhdGUgZnJvbSB0aGUgd29yayBvZiBhIHNtYWxsIHNob3AgbWFuYWdlci4gVGhleSBnZW5lcmFsbHkgaGF2ZSBhIHZlcnkgZ29vZCBpZGVhIG9mIGhvdyB0aGUgc2hvcCB3b3Jrcywgd2hlbiBpdCBvcGVucyAod2hlbiBlbXBsb3llZXMgYXJyaXZlIHRvIG9wZW4gaXQgdXApLCB3aGVuIHRoZSB2ZW5kb3JzIHRydWNrcyBhcnJpdmUgd2l0aCBmcmVzaCBwcm9kdWNlIGFuZCBkaWFyeSBhbmQgYnJlYWQsIHlvdSBhcmUgYXdhcmUgb2YgdGhlIGNvbXBldGl0aW9uLCBhYm91dCB0aGUgc2VudGltZW50IGFib3V0IHRoZSBtaW5pbXVtIHdhZ2UsIGNvbnN1bWVyIHByb3RlY3Rpb24sIHRheCBsYXdzLCBldGMuIEJ1dCB0aGV5IGNoYW5nZSwgdGhlcmUgYWx3YXlzIHNvbWUgY2hhbmdlLCBhbHdheXMgcHJvYmxlbXMsIGFsd2F5cyBvcHBvcnR1bml0aWVzLi4gCllvdSBkbyBub3Qgd2FudCB0byBkaXN0cmFjdCB0aGUgbGlzdGVuZXIgd2l0aCB5b3VyIGdlc3R1cmVzLiAKU2V4IGFuZCBhZmZlY3Rpb24gaXMgYSBodW1hbiBuZWVkLCBqdXN0IGxpa2UgZm9vZCBpcy4gSWYgeW91IGRvbiBmZWVkIHNvbWVvbmUgZW5vdWdoLCB0aGVuIG5vIGFtb3VudCBvZiAianVzdCB3b3JrIGhhcmRlciIgaXMgZ29pbmcgdG8gbWFrZSB0aGVtIGEgYmV0dGVyIGF0aGxldGUuIApXaGF0IGFyZSBzYXRlbGxpdGVzIGFuZCBob3cgZG8gdGhleSB3b3JrPyBCYXNpY2FsbHkgYSBzYXRlbGxpdGUgaXMgYSB3YXkgdG8gZW50ZXIgYSBtYWpvciB0b3VybmFtZW50IGFuZCBwbGF5IGZvciBiaWcgbW9uZXkgd2l0aG91dCBoYXZpbmcgdG8gcGF5IHRoZSBsYXJnZSBidXkgaW4gcmVxdWlyZWQuIEZvciBleGFtcGxlLCB0aGUgYnV5IGluIGZvciB0aGUgV29ybGQgU2VyaWVzIG9mIFBva2VyIChXU09QKSBpcyAkMTAsMDAwLiBBbiBvbiBsaW5lIHBva2VyIHJvb20gY291bGQgc3BvbnNlciBhIHRvdXJuYW1lbnQgd2l0aCBhICQxLDM1MCBidXkgaW4gKHRoZXkgd2lsbCBhbHNvIGNoYXJnZSBzb21ld2hlcmUgYXJvdW5kIDkgMTAlIGZvciBhIHJlZ2lzdHJhdGlvbiBmZWUpLiAKSGUgaXMgYSBwbGF5ZXIgY2hhbXBpb24uIApTaGUgZG9lcyBoYXZlIHByb3RvY29scyB5b3UgbXVzdCBmb2xsb3cgdG8gZ2V0IGluIHdpdGggaGVyLCBidXQgdGhleSBzZWVtIHRvIGFsbCBiZSBib3JuIG91dCBvZiBjb21tb24gc2Vuc2UgaW4gdGhlIGVuZC4gQnV0IG9uY2UgeW91J3ZlIHJlZ2lzdGVyZWQgd2l0aCBoZXIsIGl0J3MgdmVyeSBlYXN5IHRvIGdldCBiYWNrIGluIHdpdGggcHJvcGVyIG5vdGljZS4uIApQb3N0ZWQgYnkgQm91cmJvbmVzcXVlIGF0IDg6MzEgUE0gb24gT2N0b2JlciAxOCwgMjAxMCBbMSBmYXZvcml0ZV0KRXZlbiB0aGUgb25lcyB3aXRoIERTTCBoYXZlIHJlcG9ydGVkIHNwZWVkcyBvZiBvbmx5IGFib3V0IDMgTWJwcy4gCkRha2dhbGJpIChmaXJzdCB0aGluZyB3ZSBkaWQgd2hlbiB3ZSBnb3Qgb2ZmIHRoZSBwbGFuZSkKQW5kIEkgc2FpZCwgJ0hleSwgeW91IGtub3cgd2hhdD8gSSB3YW50IHRvIHB1cnN1ZSB0aGlzIGEgYml0IGZ1cnRoZXIuIApBcyBhbiBlbmdpbmVlciBhYm91dCB0byBlbnRlciBteSBmaW5hbCB5ZWFyIG9mIHVuZGVyZ3JhZHVhdGUgc3R1ZHksIEkgbmF0dXJhbGx5IGJlZW4gZmFudGFzaXppbmcgYWJvdXQgYW55IGtpbmQgb2YgdWx0cmFsaWdodCBkZXNpZ24vYXBwbGljYXRpb25zIHRoYXQgSSBjYW4gbG92aW5nbHkgdGhyb3cgbXlzZWxmIGludG8uIEkganVzdCBmb3VuZCBvdXQgdGhhdCB0aGVyZSBhIGNoYW5jZSB0aGF0IEkgY2FuIGRvIG15IGZpbmFsIGNhcHN0b25lIHByb2plY3Qgb24gYW4gQUxJQ0UgcGFjay9wYWNrIGZyYW1lIHJlZGVzaWduIHRvIHJlZHVjZSB3ZWlnaHQgZm9yIG1pbGl0YXJ5IGFwcGxpY2F0aW9ucywgd2l0aCB0aGUgY2hhbmNlIG9mIGhlbHBpbmcgdGhvc2UgcG9vciBzb3VscyBVbmNsZSBTYW0gZm9yYmlkcyB0byBnbyB1bHRyYWxpZ2h0LiBJIGVjc3RhdGljIGF0IG15IGx1Y2ssIGFuZCB5b3UgYmV0dGVyIGJlbGlldmUgSSBkb2luZyBldmVyeXRoaW5nIEkgY2FuIHRvIHdvcmsgb24gdGhpcyBwcm9qZWN0IQpJbiBBbGJlcnRhLCBhIGNvdXBsZSB3ZSBjYWxsIEVtaWx5LCA0MCwgYW5kIFJvYmJpZSwgMzcsIGFyZSByYWlzaW5nIHRocmVlIGNoaWxkcmVuIG9uIGEgY29tYmluZWQgbW9udGhseSBhZnRlciB0YXggaW5jb21lIG9mICQxMSw0NDcuIFN0b2NrcywgbWFueSBvZiB3aGljaCBhcmUgbm90IGZvciB0aGUgZmFpbnQgb2YgaGVhcnQuIApMbWFvLCBubyBpdCBub3QuIFRoZSBrZXkgdGhpbmcgdG8ga2VlcCBpbiBtaW5kIGlzIHRoYXQgaXQgdGFrZXMgMS42IGttL3Mgb2YgZGVsdGEgdiB0byBsYW5kIG9uIHRoZSBzdXJmYWNlIG9mIHRoZSBNb29uIGZyb20gTHVuYXIgb3JiaXQuIFRoZXJlIG5vIGdldHRpbmcgYXJvdW5kIHRoYXQsIGJlY2F1c2UgdGhlcmUgbm8gYXRtb3NwaGVyZSB0byBoZWxwIHNsb3cgeW91IGRvd24uIApIZSB3YXMgcGh5c2ljYWxseSBhYnVzaXZlLCBhbmQgYXQgb25lIHBvaW50IHNhaWQgaGUgY3V0IGhlciB1cCBhbmQgZmx1c2ggaGVyIGRvd24gdGhlIHRvaWxldCBhbmQgbm8gb25lIHdvdWxkIGV2ZXIga25vdy4gCkNyIEhlbmsgdmFuIGRlIFZlbiwgQ3IgSm9obiBTdHVjaGJlcnkgYW5kIENyIERhdmlkIFRodXJsZXkgc3VwcG9ydGVkIHRoZSBwcm9wb3NhbC4KSGUgdGhlIGJlYXJkZWQgZ3V5IHRhbGtpbmcgdG8ga2lkcy4gSSBjb25maWRlbnQgaWYgeW91IGNvbnRhY3QgdGhlIG1pbGwgYW5kIGFzayBhYm91dCB0YXBwaW5nIHRyZWVzLCB0aGV5IHdvdWxkIHB1dCB5b3UgaW4gdG91Y2ggd2l0aCBoaW0uLiAKTVNJIEdQICAgc2VyaWVzLCBsb3cgYnVpbGQgcXVhbGl0eQpJIGFjdHVhbGx5IGZvdW5kIHRoZSBzcGVlY2ggYSBsb3QgbW9yZSByZWFzb25hYmxlIHRoYW4gSSB0aG91Z2h0IEkgd291bGQuIApUaGUgZGF5cyBhcmUgZnVsbC4gClJlYWxseSwgYWxjb2hvbGljcyB0aG91Z2guIFNvIGVhc3kgdG8gc2VsZiBkZXN0cnVjdC4gU2VlbiBpdCBoYXBwZW4gYSBmZXcgdGltZXMuCkl0IG1ha2VzIHVzIGZlZWwgY29tZm9ydGFibGUgdG8gcmVhZCBhbiBlY29ub21pc3QgcHJlZGljdGlvbnMgb24gd2hlcmUgc2hlIHRoaW5rcyB0aGUgZWNvbm9teSB3aWxsIGJlIGluIGEgeWVhci4gSWYgeW91IHRvb2sgZWNvbm9taXN0cyBmb3JlY2FzdHMgZm9yIDIwMDcsIG1vc3Qgd291bGQgaGF2ZSBzYWlkIHRoZSBlY29ub215IHdvdWxkIGNvbnRpbnVlIHRvIGdyb3cgYXQgYSBoZWFsdGh5IHBhY2UuIFdlbGwsIHRob3NlIGZvcmVjYXN0cyB3ZXJlIHdyb25nIGJlY2F1c2UgdGhlIG51bWJlcnMgYmxpbmRlZCB0aGUgZWNvbm9taXN0cy4gCkFueWhvbywgSSdtIHByZXR0eSBzdXJlIHRoZSBwZXJzb24gd2hvIGRpZCB0aGF0IGNvbW1lbnQgc3BlbnQgdG9vIG11Y2ggdGltZS9lbmVyZ3kvIG1vbmV5IG9uIGhlciBvdXRmaXQgYW5kIHN0aWxsIHdhc24ndCBzYXRpc2ZpZWQgd2l0aCBpdCwgc28gZmVsdCBsaWtlIHB1dHRpbmcgeW91IGRvd24gd2lsbCBnaXZlIGhlciBzZWxmIGVzdGVlbSBhIGxpZnQsIGNsYXNzaWMgYnVsbHkgbW92ZS4gClRoYXQgbWFrZXMgaXQgYWxsIHNvIG11Y2ggd29yc2UsIGZvciBtZS4gCllvdSBoYXZlIGtpZHMuIFlvdSBoYXZlIGJlZW4gdG9nZXRoZXIgYSBsb25nIHRpbWUuIApZb3UgbmVlZCB0cmljayBhbmQgaW50ZWxsaWdlbmNlIHRvIHdpbiB0aGUgZ2FtZSBvZiBwbGF5aW5nIGNhcmQuIENoZWF0aW5nIGRldmljZXMgaW4gZ2FtZSBvZiBwbGF5aW5nIGNhcmQgd2lsbCBlbnN1cmUgeW91ciB2aWN0b3J5LiBQdXJjaGFzZSBhYm92ZSBkZXZpY2VzIGZyb20gYmVzdCBkZWFsZXIgc2hvcCBhdCByZWFzb25hYmxlIHByaWNlLgpUaGUgQmVzdCBXZXN0ZXJuIElzbGFuZCBCZWFjaCBIb3RlbCBpbiBMYWdvcywgTmlnZXJpYSwgaXMgYWxzbyBuZXdseSBjb25zdHJ1Y3RlZC4gVGhlIHByb3BlcnR5IGlzIGxvY2F0ZWQgaW4gdGhlIGhlYXJ0IG9mIExhZ29zIGZpbmFuY2lhbCBhbmQgYnVzaW5lc3MgaHViIG9uIFZpY3RvcmlhIElzbGFuZCBCYXIgQmVhY2gsIHdoaWNoIG92ZXJsb29rcyB0aGUgQXRsYW50aWMgT2NlYW4uIApIaSBhbGwsIG5ld2JpZSB3YXRjaCBlbnRodXNpYXN0IGhlcmUuIFBsZWFzZSBjb3VsZCB5b3UgZ2l2ZSBtZSBzb21lIHJlY29tbWVuZGF0aW9ucyB0byBncm93IG15IGNvbGxlY3Rpb24/IFVuZm9ydHVuYXRlbHkgYnVkZ2V0IGlzIGFuIGlzc3VlLCBzbyBtYXguIHdvdWxkIGJlIGMuIDUwMC4gSSB1c2VkIHRvIGJlIHNvbGVseSBhIGxlYXRoZXIgc3RyYXAgZ3V5IGJ1dCBub3cgYW0gbG9va2luZyB0byBicmFuY2ggb3V0IGludG8gbWV0YWwgYXMgd2VsbC4gQW55dGhpbmcgR3JleSBvciBHcmVlbiAoZXNwZWNpYWxseSBhIGdyZWVuIHdhdGNoIGZhY2UsIGR1bm5vIHdoeSBidXQgbG92ZSBpdCkuIElmIGFueW9uZSBjb3VsZCBoZWxwIHRoYXQgd291bGQgYmUgdmVyeSBtdWNoIGFwcHJlY2lhdGVkLgpEaWQgeW91IG1pc3MgdGhlIHBhcnQgd2hlcmUgSSBoYXZlIGEgcHJpbWFyeSBjYXJlIGRvY3RvciBhbmQgYW4gZW5kb2NyaW5vbG9naXN0IG1vbml0b3JpbmcgbXkgaGVhbHRoIGFuZCBkb2luZyByZWd1bGFyIGNoZWNrIHVwcyBhbmQgbW9uaXRvcmluZyBhbGwgdGhlIHBhcnRzIHJlZ2FyZGluZyBiZWluZyB0cmFucz8gRGlkIHlvdSBldmVuIGtub3cgdGhpcyBpcyByZXF1aXJlZCB0byB0YWtlIGhvcm1vbmVzIGFuZCB0cmFuc2l0aW9uPyBJIG5vdCBhZHZvY2F0aW5nIGZvciBuZXZlciB0ZWxsaW5nIGRvY3RvcnMgYW5kIHRyYW5zIHBlb3BsZSBnZXR0aW5nIHRyZWF0ZWQgYXMgaWYgdGhleSB3ZXJlIGNpcyBwZW9wbGUuIApMQVMgVkVHQVMgKEFQKSBTdGVwaGVuIFBhZGRvY2sgdXN1YWxseSBrZXB0IGEgY2lnYXIgYXQgaGFuZCwgZXZlbiB0aG91Z2ggaGUgZGlkbiBzbW9rZS4gQnV0IGhlIHdhcyBxdWljayB0byBub3RpY2Ugd2hlbiBzb21lYm9keSBzYXQgZG93biBiZXNpZGUgaGltIGFuZCBsaXQgdXAuCkp1c3QgYXMgZGVmaW5pdGlvbnMgb2YgaGFwcGluZXNzIGNoYW5nZSwgc28gdG9vIGRvZXMgb3VyIGFiaWxpdHkgdG8gaGFuZGxlIGFkdmVyc2l0eS4gCldlaXJkIGhvdyB3aGVuIGEgVHVya2lzaCBoaXN0b3JpYW4gd2hvIGRvZXNuIGFjY2VwdCB0aGUgd29yZCBnZW5vY2lkZSBpcyB0YWxrZWQsIHMvaGUgaXMgYWx3YXlzIGJyYW5kZWQgYXMgYSBUdXJraXNoIHByb3BhZ2FuZGEgYWdlbnQgd2hlcmVhcyBBa2NhbSBpcyBpbnN0YW50bHkgcmVjb2duaXplZCBhcyB0aGUgb2JqZWN0aXZlIGhpc3Rvcmlhbi5JbiB0aGF0IGhhcnZhcmQgdmlkZW8sIGhlIGtlcHQgcmVmZXJyaW5nIHRvIGhpcyBib29rIGluIHRoYXQgbGVjdHVyZSB3aXRob3V0IHNob3dpbmcgYW55dGhpbmcgc3VwcG9ydGluZyB0byBoaXMgYXJndW1lbnRzLiBFdmVyeSBxdWVzdGlvbiBoZSBhbnN3ZXJlZCwgaGUgZW1waGFzaXplZCB0aGF0IGluIGhpcyBvd24gb3BpbmlvbiBiYXNlZCBvbiBob3cgaGUgaW50ZXJwcmV0ZWQgdGhlICJtZW50YWxpdHkiIG9mIGdvdmVybm1lbnQgb2ZmaWNpYWxzIGFuZCBkb2N1bWVudHMsIHdlIGNhbiBjYWxsIGl0IGEgZ2Vub2NpZGUuIApWb2ljaSwgZW4gb3JkcmUgY2hyb25vbG9naXF1ZSwgbGVzIHJjaXRzIGRlIGNlcyBmZW1tZXMgcXVpIGRpc2VudCB0cmUgdmljdGltZXMgZCBob21tZSBkZSBwb3V2b2lyLgpXZSBzdGFydGVkIG9mZiB3aXRoIHRoZSBiYXNpYyBzaG93ZXIsIHdoZXJlIHRoZSBnaXJsIGNsZWFucyB5b3UgZnJvbSBoZWFkIHRvIHRvZSBhbmQgdGhlbiBzZW5kcyB5b3UgdG8gdGhlIGJlZC4gU2hlIHRoZW4gZ2F2ZSBtZSBhIHNraWxsZnVsIGlmIG5vdCBzdHJvbmcgTnVydSBtYXNzYWdlLiAKRnJvbSBhbm90aGVyIHBlcnNwZWN0aXZlLCBvbmxpbmUgcG9rZXIgaXNhIGdyZWF0IHdheSB0byBhbmFseXplIHlvdXIgZ2FtZSBhbmQgZXJyb3JzIGF0IHRoZSBzYW1lIHRpbWUuIEJ1dCxsZXQncyBnZXQgYSBjbG9zZXIgbG9vayBhbmQgc3R1ZHkgYm90aCBmb3JtcyBvZiBwb2tlciBzbyB0aGF0IHlvdWhhdmUgYSBjbGVhciB2aWV3LiAKRmluZ2VycHJpbnRzIGFyZSBkZXRlcm1pbmVkIGJ5IGdyb3d0aCBjb25kaXRpb25zIGluIHRoZSB3b21iLGFuZCBhcmUgICBhcyBmYXIgYXMgd2Uga25vdyB0b2RheSAgIHVuaXF1ZSB0byB0aGUgaW5kaXZpZHVhbC4gLgpJdCB3YXMgc2F0aXNmeWluZy4gCkJhY2sgYnkgcG9wdWxhciBkZW1hbmQgYW5kIGZvbGxvd2luZyBhIGh1Z2VseSBzdWNjZXNzZnVsIGZpcnN0IG91dGluZyBpbiBzZW1lc3Rlcjogb25lIEpVR1MgZG9kZ2ViYWxsIHByb3ZlZCB0byBiZSBvbmUgb2YgdGhlIGhpZ2hsaWdodHMgb3VyIGNhbGVuZGFyLiBDb21wZXRpdGlvbiBwcm92ZWQgdG8gYmUgZmllcmNlIGNvbnNpZGVyaW5nIHRoZSB1bmZhbWlsaWFyIHN1cnJvdW5kaW5ncyBvZiB0aGUgZG9kZ2ViYWxsIGFyZW5hIGZvciBtb3N0LCBhbmQgd2Ugc2F3IHRoZSBEb2RnZXJzIGJlY29tZSB3b3J0aHkgd2lubmVycy4gVGhpcyB3aWxsIHN1cmVseSBiZSBhIHBlcm1hbmVudCBmaXh0dXJlIG9uIHRoZSBKVUdTIGNhbGVuZGFyIS4gClRoZXJlIG5vIHRhbmsgSSBsaWtlIHBsYXlpbmcsIHdpdGggUmVpbiBjb21pbmcgdXAgdG8gYWxtb3N0IHRvbGVyYXRlcmFibGUgbGV2ZWxzIGJlY2F1c2Ugb2YgaGlzIGhhbW1lciBhbmQgZmlyZSBzdHJpa2UsIG91dCBvZiBoZWFsZXJzIEkgZG9uIGFjdGl2ZWx5IGhhdGUgQnJpZyBiZWNhdXNlIHNoZSBkb2VzbnQganVzdCBrZWVsIG92ZXIgYW5kIGRpZSBhdCB0aGUgbGlnaHRlc3QgdG91Y2gsIGFuZCBoZXIgd2VhcG9uIGNvbXBlbnNhdGVzIGZvciBteSBsYWNrIG9mIGFpbSwgYW5kIHNoZSBjYW4ga2luZCBvZiBkaXNyZWdhcmQgdGhlIHJlc3Qgb2YgdGhlIHRlYW0gYnkgYmVpbmcgYWJsZSB0byBzZWxmIGhlYWwuIFRoZXJlIHNvIG1hbnkgdGhpbmdzIEkgdGhvdWdodCBvZiB0aGF0IHdvdWxkIG1ha2UgdGhlIHJlc3Qgb2YgdGhlIGNhc3QgdG9sZXJhYmxlIGZvciBtZSwgbGlrZSBpbnRyb2R1Y2luZyBzb21lIGFjdHVhbCBjdXN0b21pemF0aW9uIGVsZW1lbnRzIGxpa2UgYWx0ZXJuYXRpdmUgd2VhcG9ucyB0byB0aGUgZ2FtZSwgYnV0IHRoYXQgd291bGQgcmVxdWlyZSBzdWNoIGEgY29tcGxldGUgb3ZlcmhhdWwgb2YgdGhlIGhlcm8gc3lzdGVtIHRoYXQgaXQgd291bGQgcHJvYmFibHkgcnVpbiB0aGUgZ2FtZSBmb3IgcGVvcGxlIHdobyBhY3R1YWxseSBsaWtlIGl0LiAyMSBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvLiAKSW4gb25lIG9mIFN5ZG5leSdzIG1vc3QgZGlzYWR2YW50YWdlZCBhcmVhcywgd2l0aCBoaWdoIHVuZW1wbG95bWVudCBhbmQgbGFyZ2UgaW1taWdyYW50IHBvcHVsYXRpb25zIGZvciB3aG9tIEVuZ2xpc2ggaXMgbm90IGEgZmlyc3QgbGFuZ3VhZ2UsIGl0IGFsbW9zdCBzZWVtcyBhcyB0aG91Z2ggdGhlIGRpc2VuZnJhbmNoaXNlZCBhcmUgYmVpbmcgdGFyZ2V0ZWQuLiAKQ29sZCBXYXIgMi4wClRvZGF5LCBwZXJmdW1lLCBmb29kLCBtZWRpY2luZSwgYW5kIGFyb21hdGhlcmFweSBwcm9kdWN0cyBhcmUgdmlld2VkIGFzIHNlcGFyYXRlIGVudGl0aWVzLCBhbHRob3VnaCBhcm9tYXRoZXJhcHkgaXMgc2xvd2x5IHJlY2xhaW1pbmcgaXRzIG1lZGljaW5hbCBoZXJpdGFnZS4gClBudHJleiBkYW5zIGxhIGRlbWV1cmUgZGUgY2UgcGV1cGxlLCB2b3VzIGxlIHRyb3V2ZXJleiBkYW5zIHVuZSBhZmZyZXVzZSBtaXNyZSwgZmFpc2FudCBsaXJlIHVuIGxpdnJlIG15c3RyaWV1eCAgZGVzIGVuZmFudHMgcXVpLCAgbGV1ciB0b3VyLCBsZSBmZXJvbnQgbGlyZSAgbGV1cnMgZW5mYW50cy4gQ2UgcXUnaWwgZmFpc2FpdCBpbCB5IGEgY2lucSBtaWxsZSBhbnMsIGNlIHBldXBsZSBsZSBmYWl0IGVuY29yZS4gSWwgYSBhc3Npc3QgZGl4IHNlcHQgZm9pcyAgbGEgcnVpbmUgZGUgSnJ1c2FsZW0sIGV0IHJpZW4gbmUgcGV1dCBsZSBkY291cmFnZXI7IHJpZW4gbmUgcGV1dCBsJ2VtcGNoZXIgZGUgdG91cm5lciBzZXMgcmVnYXJkcyB2ZXJzIFNpb24uLiAKSSd2ZSBqdXN0IGJlZW4gZmFzY2luYXRlZCBieSB0aGUgaW5lcHRpdHVkZSBvZiB0aGUgc3R1ZGlvJ3MgaWRlYSB0byByZW5hbWUgdGhlIGZpbG0gdG8gc29tZXRoaW5nIHRoYXQsIGFzIG11Y2ggYXMgdGhlIGZpbG0ncyBjb250ZW50IHRyaWVzLCBpcyAoSU1PKSBhbW9uZyB0aGUgYmVzdCBleGFtcGxlcyBvZiB3aGF0IHRoZSBmaWxtIHdhcyBtZWFudCB0byBzYXkuCk9mdGVudGltZXMgaXQgc3RyYWlnaHQgb24gYmUgYSBiZXR0ZXIgd2lmZSB0aGFuIHlvdSIgc2VudGltZW50LiBJIGhhdGUgaXQgYW5kIGhhdmUgc3RvcHBlZCBvcGVubHkgY29tcGxpbWVudGluZyBteSBodXNiYW5kIGluIGZyb250IG9mIG15IGZlbWFsZSBhY3F1aW50YW5jZXMgYmVjYXVzZSBvZiB0aGlzIGF0dGl0dWRlLiAKNCkgVGhpcyBzdHVkeSBvbmx5IGxvb2tlZCBhdCB0aGUgbWVyY3VyeSBjb250ZW50IG9mIGhpZ2ggZnJ1Y3Rvc2UgY29ybiBzeXJ1cCBhbmQgZm91bmQgc29tZSBzYW1wbGVzIHRvIGJlIHNpZ25pZmljYW50bHkgaGlnaCBpbiBtZXJjdXJ5IGNvbnRlbnQuCkkgYWR2aXNlIG5vdCBoYXZpbmcgYW55IHBsYW5zIGZvciB0aGUgZGF5L25pZ2h0IHlvdSBmaXJzdCB0cnkgZWF0aW5nLiBJbiB0aGUgYmVnaW5uaW5nLCBJIG1hZGUgdGhlIG1pc3Rha2Ugb2YgdGhpbmtpbmcgSSB3YXMgYXMgaGlnaCBhcyBJIHdhcyBnb2luZyB0byBnZXQsIHRoZW4gZ29pbmcgdG8gYSBsb2NhbCBuaWdodCBtYXJrZXQuIEl0IHdhcyB0ZXJyaWZ5aW5nLCBJIGtlcHQgZ2V0dGluZyBjb21wbGV0ZWx5IGRpc29yaWVudGVkIGFuZCBJIGZlbHQgYXMgdGhvdWdoIEkgYmVlbiB0aGVyZSBmb3IgNCBob3VycyB3aGVuIGl0IHdhcyByZWFsbHkgb25seSA0MCBtaW51dGVzLiAKQSBOZXcgWW9yayBUaW1lcyBhcnRpY2xlICh3aGljaCBpbmNsdWRlcyBhIGdyZWF0IGNoYXJ0IG9uIHRoZSBjaGFuZ2UgaW4gVVMgam9icyBiZXR3ZWVuIDE5ODAgYW5kIDIwMTIsIHNob3dpbmcgdGhhdCBqb2JzIHJlcXVpcmluZyBzb2NpYWwgc2tpbGxzIGFyZSBnZW5lcmFsbHkgdGhlIGpvYnMgdGhhdCBncmV3KSBkaXNjdXNzZXMgaG93IHdvcmsgaXMgY2hhbmdpbmcgYW5kIGhvdyB0aGUgc2tpbGxzIHJlcXVpcmVkIGZvciB0aGUgZnV0dXJlIG9mIHdvcmsgYXJlIGFsc28gY2hhbmdpbmcuClNvIG1hbnkgcGVvcGxlIG1pc3NpbmcgdGhlIHBvaW50LiBUaGlzIGlzIG5vdCBtZWFudCB0byBiZSBzb21lIHByaXN0aW5lIHBlcmZvcm1hbmNlLiBNb3JlIGxpa2VseSBpdCB3YXMganVzdCBhIG9uZSBvZmYgYXQgYSBjb25mZXJlbmNlLiBFaXRoZXIgdG8gc3RhcnQgb3IgZW5kIHRoZSBkYXkgb24gYSBuaWNlIG5vdGUgKHB1biBpbnRlbmRlZCkuIFNvIHJlbGF4IGFuZCBlbmpveSBpdCBmb3Igd2hhdCBpdCBpcyAgIGEgYnVuY2ggb2Ygdm9jYWwgZW50aHVzaWFzdHMgc2hvd2luZyB3aGF0IGNhbiBiZSBkb25lIHdpdGggYSBjb2xsZWN0aXZlIGh1bWFuIHZvaWNlLiBTdXJlLCBJIHByZWZlciBhIGJldHRlciByZWNvcmRpbmcgYW5kIEkgcmVhbGx5IHdpc2ggYWxsIHRob3NlIHBlb3BsZSB3aXRoIHRoZWlyIHBob25lcyB3b3VsZG4gZG8gdGhhdCwgYnV0IGRhbW4gSSB1c2VkIHRvIGxpdmUgZm9yIGNob3JhbCBtb21lbnRzIGxpa2UgdGhhdC4gVGhleSB3ZXJlIHJhcmUgYW5kIGFtYXppbmcgZXhwZXJpZW5jZXMuClRoaXMgZ2FtZSBpcyBzbyBwZXJmZWN0IGFuZCBmdW4gZm9yIGV2ZXJ5b25lLiAKSSBoYWQgYW4gZW5jb3VudGVyIHdoZXJlIEkgd29rZSB1cCBhbmQgZmVsdCBsaWtlIHNvbWVvbmUgd2FzIHVuZGVyIG15IGNvdmVycyBsYXlpbmcgdXAgYWdhaW5zdCBtZS4gV2hlbiBJIHNhaWQgc29tZXRoaW5nLCBteSBibGFua2V0IHZpc2libHkgZGVmbGF0ZWQgYW5kIEkgbm8gbG9uZ2VyIGZlbHQgYW55dGhpbmcuIChJIGluY2x1ZGUgdGhpcyB3aXRoIERvcHBlbGdhbmdlcnMgYmVjYXVzZSB0aG91Z2ggSSBkaWRuIHNlZSB3aGF0IEkgZmVsdCB1bmRlciB0aGUgYmxhbmtldCwgaXQgbGF5ZWQgbGlrZSBteSBnZiB3b3VsZCBoYXZlIGxheWVkIGFnYWluc3QgbWUpLi4gCkZvciBjb25kb2xlbmNlcywgZnVsbCBvYml0dWFyeSBhbmQgZnVuZXJhbCBsaXN0aW5ncyBwbGVhc2UgdmlzaXQgU3BpbHNidXJ5IE1vcnR1YXJ5IG9ubGluZS4KIldlIGluIGl0IGZvciB0aGUgbG9uZyBoYXVsIiB3YXMgYSBwcmV0dHkgYmxhdGFudCBhdHRlbXB0IGF0IHRlbGxpbmcgdGhlIGNvbW11bml0eSB0aGF0IHRoZXkgd2lsbCBjb250aW51ZSB0byB3b3JrIHRvIGFkZHJlc3MgdGhlIGN1cnJlbnQgY29uY2VybnMgcmVnYXJkaW5nIHJhbmsgYW5kIGJhbGFuY2UgKHdpdGhvdXQgb3V0cmlnaHQgc2F5aW5nIGl0KS4gV2UgYWxsIGtub3cgd2h5IHRoZXkgd29uIGNvbW11bmljYXRlIG1vcmUgZGlyZWN0bHksIGxldCBqdXN0IGdpdmUgaXQgc29tZSB0aW1lIGJlZm9yZSB3ZSB3cml0ZSBpdCBvZmYuIApJIGhhdmUgaG9iYmllcyBhbmQgSSBkbyBjcmFmdHMgYnV0IHd0ZiBkb2VzIHRoYXQgbWF0dGVyIHdoZW4gODAlIG9mIG15IGxpZmUgaXMgV09SSy4gCkkgdGhpbmsgdGhhdCBjb3VsZCBiZSBpbnRlcmVzdGluZyBzdGlsbC4gCkkgcXVpdGUgbGlrZWQgYSBjb2NrdGFpbCBiYXIsIHRoZW4gdGhleSBkaWQgdGhpcy4gCkNhbm5vdCBiZSBhbG9uZSBpbiB0aGlzIGZlZWxpbmcgYWJvdXQgb3VyIGNvbW11bml0eS4gCkFuZCBhbHNvLCBJIHVzZWQgdG8gYmUgYSB3YWl0cmVzcyBiZWZvcmUgSSBiZWNhbWUgYSBtYXNzYWdlIHRoZXJhcGlzdC4gTGF0ZXIgb24sIEkgZXhwcmVzc2VkIHRvIG15IGNvdXNpbiB0aGF0IEkgdGhvdWdodCBoZXIgZnJpZW5kcyB3ZXJlIHJ1ZGUgdG8gbWUgYW5kIG1hZGUgbWUgZmVlbCBiYWQgYWJvdXQgbXlzZWxmLiBIZXIgcmVzcG9uc2Ugd2FzICJ3ZWxsLCBtYXliZSB5b3Ugc2hvdWxkIHRhbGsgbW9yZSIuIApMYSBydW5pb24gZGVzIGRvY3VtZW50cyBkJ3VuZSBoaXN0b2lyZSBkJ2Ftb3VyIGVudHJlIHVuIHBldXBsZSBldCBsdWkgbW1lLCBlbnRyZSB1biBwZXVwbGUgZXQgbGEgdmllLCBldCBzdXJ0b3V0IGVudHJlIHVuIHBldXBsZSBldCBzb24gRGlldS4gCklmIHlvdSBjaG9vc2Ugd2VlZCB5b3UgYXJlIGFsc28gY2hvb3NpbmcgdGhlIGN1bHR1cmUgdGhhdCBnb2VzIHdpdGggaXQgYW5kIGNhbiBkZXN0cm95IHRob3NlIGFyb3VuZCB5b3UgY2FyZSBhYm91dCB3aXRob3V0IHlvdSBub3RpY2luZy4KSW0gdXBzZXQgcmFuZGxlIGlzIGdvbmUgdG9vIGJ1dCB0aGF0IGR1ZGUgd2FudGVkIG11bHRpcGxlIHllYXJzIGFuZCBoaWdoIHBheSBhbmQgYmVpbmcgYSBiZW5jaCBwbGF5ZXIgZ2V0cyBub3doZXJlLiAKV2l0aCBtYW50aXMgQSBvciBnZW5lcmFsPyBJZiBpdCBpc24gZXZlbiBnb25uYSBib2FyZCB5b3UgKGlzIHRoYXQgYm9hcmRpbmcgZHJvbmUgaW4gcGhhc2UgMiBvciB0ZWxlIGxvb2tlZCBhdCBzY3JlZW5zIG5vdykgdGhlbiBJIHByb2JhYmx5IHRyeSB0byBoYWNrIGFuZCBndW5zaGlwIGl0LiBBbmQvb3IgdXNlIHNvbWUgc2hpcCB3aXRoIGEgZHJvbmUgc3lzdGVtIHNvIEkgY2FuIHVzZSBhIGRlZmVuc2UgZHJvbmUgb24gdGhvc2UgbWlzc2lsZXMsIGFuIG9mZmVuc2l2ZSBkcm9uZSB0byBicmVhayB0aHJvdWdoIHNvbWV0aGluZyBhcyByaWRpY3Vsb3VzIGFzIGNsb2FrICsgem9sdGFuIHNoaWVsZC4gTWF5YmUgZW5naSBDLgpBbmQsIGhvbmVzdGx5LCBzbyBkbyB5b3UuLiAKS2VsbGVyIEF0IExhcmdlOiBUaGUgQ3VycmVudCBTdGF0ZSBPZiBUaGUgTWFzc2FjaHVzZXR0cyBEZW1vY3JhdGljIFBhcnR5Sm9uIEtlbGxlciBpcyBqb2luZWQgYnkgTWFzc2FjaHVzZXR0cyBEZW1vY3JhdGljIFBhcnR5IGNoYWlybWFuIEd1cyBCaWNrZm9yZC41IEJlc3QgU3BvdHMgVG8gU2NvcmUgU2VhZm9vZCBJbiBDYW1icmlkZ2VMb29raW5nIHRvIHNhbXBsZSBzb21lIG9mIHRoZSBiZXN0IHNlYWZvb2QgYXJvdW5kPyBDYW1icmlkZ2UgaGFzIHBsZW50eSBvZiB0b3Agc2VhZm9vZCBzcG90cy4KQXMgZm9yIG15IGdpZnQgZ2l2aW5nLCBJIGJlZW4gbGl2aW5nIHdpdGggbXkgaHVzYmFuZCBmb3IgZGVjYWRlcywgYW5kIEkgbm90IGEgYml0IGNvbmNlcm5lZCBhYm91dCBiZWluZyBhYmxlIHRvIG1ha2UgaGltIGhhcHB5IG9uIFZhbGVudGluZSBEYXkuIEEgZ2xhc3Mgb2YgaGlzIGZhdm9yaXRlIE1vbnRlcG9sY2lhbm8gZGUgQWJydXp6aSwgYSBob21lbWFkZSBjcmFiIGNha2UgYW5kIGhlIG1pbmUuIEVhc3kgcGVhc3kuCkZvciB0aG9zZSB3aG8gYXJndWUgc2hlIGNvdWxkIGhhdmUgcnVuIGEgaG9zcGl0YWwsIGdvIHRlbGwgdGhhdCB0byBhbnlvbmUgd2hvIHJ1bnMgYSBob3NwaWNlIGFuZCBzZWUgdGhlIHJlc3BvbnNlIHlvdSBnZXQuIEZvciB0aG9zZSB3aG8gY2xhaW0gc2hlIGRpZG4gZWFzZSBhbnlvbmUgc3VmZmVyaW5nLCBJIGNhbGwgYnVsbHNoaXQgICB3b3VsZCB5b3UgcmF0aGVyIGRpZSBpbiB0aGUgZ3V0dGVyIG9yIGluIGEgd2FybSwgY29tZm9ydGFibGUgYmVkIHdpdGggY2xvdGhlcyBhbmQgYSBiYXRoPyBHZXQgcmVhbC4KIk9uZSBvZiB0aGUgc2lnbnMgdGhhdCB0aGUgbWFya2V0IGlzIGNoYW5naW5nIGlzIHRoYXQgd2Ugc2VlIG1vcmUgYW5kIG1vcmUgb25saW5lIGNhc2lubyBjb21wYW5pZXMgd2FudGluZyB0byBkbyB0aGluZ3MgdG9nZXRoZXIuIEV4Y2hhbmdlIHNlcnZpY2VzIGJldHdlZW4gdGhlIGRpZmZlcmVudCBjb21wYW5pZXMgYW5kIGxvb2tpbmcgZm9yIHdheXMgdG8gaW1wcm92ZSBib3RoIGNvbXBhbmllcycgYnJhbmRzLiBUaGlzIGlzIHF1aXRlIGEgbmV3IHRoaW5nIGJ1dCBzb21ldGhpbmcgd2UgaGF2ZSBiZWVuIGxvb2tpbmcgdG8gZG8gZm9yIHNvbWUgdGltZSBzbyB3ZSBtaWdodCBhY3R1YWxseSBiZSBhdCB0aGUgcmlnaHQgcGxhY2UgYXQgdGhlIHJpZ2h0IHRpbWUuIgpJZiB5b3Ugd2FrZSB1cCByZWd1bGFybHkgKG11bHRpcGxlIHRpbWVzIGEgd2Vlaykgb3IgZnJlcXVlbnRseSAobXVsdGlwbGUgdGltZXMgcGVyIG5pZ2h0KSBiZWNhdXNlIHlvdSBoYXZlIHRvIHBlZSwgeW91IHNob3VsZCBwcm9iYWJseSB0YWxrIHRvIGEgZG9jdG9yLiBZb3VuZyBtZW4gZXNwZWNpYWxseSBzaG91bGQgdGFrZSB0aGlzIHZlcnkgc2VyaW91c2x5LCBlc3BlY2lhbGx5IGlmIHRoZSBjaGFuZ2UgaXMgc3VkZGVuLiBGb3Igb3RoZXIgcGVvcGxlLCBkcmluayBsZXNzIHdhdGVyL2NhZmZlaW5lL2FsY29ob2wgY2xvc2UgdG8gYmVkIHRpbWUgb3IgaXQgY291bGQganVzdCBiZSBwYXJ0IG9mIGFnaW5nLCBvciBhIGhvcm1vbmUgaW1iYWxhbmNlLiBJZiBJIGJlZ2lucyB0byBhZmZlY3QgeW91ciBkYWlseSBsaWZlLCBzZWUgYSBkb2N0b3IuCkluanVyaWVzIG9mdGVuIGRlbmllZCBTdCBLaWxkYSBpdHMgYmVzdCBzaWRlIG92ZXIgdGhlIHBhc3QgZm91ciB5ZWFycyBhbmQgdGhleSBiZWxpZXZlIGJldHRlciB0cmFpbmluZyBmYWNpbGl0aWVzIHdpbGwgaGVscCB0aGVpciBwdXJzdWl0IG9mIGFkZGluZyBhbm90aGVyIHByZW1pZXJzaGlwIHRvIHRoZWlyIDE5NjYgdHJpdW1waC4KIkVhY2ggY291bmNpbGxvciBpcyBvcHBvc2VkIHRvIHRoZSBtYWNoaW5lcywgc28gaWYgdGhlcmUgd2FzIGFuIGFwcGxpY2F0aW9uIHRoZSBjb3VuY2lsIHdvdWxkIG9wcG9zZSBpdCwiIENyIEdhZmZuZXkgc2FpZC4gIldlIGFyZSBzbyBtdWNoIGJldHRlciB3aXRob3V0IHRoZW0uIiBDaGFpcm1hbiBvZiB0aGUgQXVzdHJhbGlhbiBDaHVyY2hlcyBHYW1ibGluZyBUYXNrZm9yY2UsIFRpbSBDb3N0ZWxsbywgc2FpZCBncmVhdGVyIGVmZm9ydHMgd2VyZSBuZWVkZWQgdG8gbGltaXQgdGhlIGRhbWFnZSBvZiBwb2tpZXMuIApJdCB3b3VsZCBsaXRlcmFsbHkgYmU6IFdlIHdpbGwgbm93IG5vIGxvbmdlciByZXNwZWN0IHByb3BlcnR5IHJpZ2h0cy4gQWxsIGJlbG9uZ3MgdG8gYWxsLiAKSW4gRnJlbmNoLCBhbG1zb3QgYW55IGNvbWJpbmF0aW9uIG9mIENWIGhhcyBhIHdvcmQgcmVsYXRlZCB0byBpdC4gQWxsIHRoZXNlIHdvcmRzIEkganVzdCB0eXBlZCBhcmUgcGhvbmV0aWNhbGx5IENWIGZvciB7QiwgSywgRH0gc291bmQsIGFuZCBtb3N0IG9mIHRoZW0gYXJlIGRhaWx5IHdvcmRzLCB2ZXJ5IHNpbXBsZSwgY29tbW9uLCBhbmQga25vd24gYnkgYWxsLiAKWW91J2QgaGF2ZSB0byBiZSBkZWx1c2lvbmFsIHRvIGFudGljaXBhdGUgdGhhdCBzb21ldGhpbmcgbGlrZSB0aGlzIHdvdWxkIGhhcHBlbiB3aGVuIHlvdSBlbWJhcmsgb24gYSBwcm9qZWN0IGxpa2UgdGhpcy4gSSBjYW1lIGluIHdpdGggbm8gZXhwZWN0YXRpb25zIGFuZCBJIGRpZG4ndCBrbm93IGFueXRoaW5nIGFib3V0IHBva2VyIGFuZCBoYWQgemVybyBiYWNrZ3JvdW5kLiAKVGhlcmUgY29tZXMgYSBwb2ludCB3aGVyZSBpdCdzIG5vdCBhIGxhY2sgb2YgdW5kZXJzdGFuZGluZyBhbnltb3JlIHRob3VnaDsgRGFkJ3MgNjQgdGhpcyB5ZWFyIGFuZCBoZSdzIG1hZGUgYSBodWdlIGVmZm9ydCB0byBsaXN0ZW4gYW5kIHRyeSB0byB1bmRlcnN0YW5kLiAKUmVkIGxlZnQgaG9tZSBhdCBhZ2UgMTEsIGV2ZW50dWFsbHkgc2V0dGxpbmcgaW4gS2lya2xhbmQgd2hlcmUgaGUgaGFzIGxpdmVkIHVudGlsIGhpcyBwYXNzaW5nLiAKSSBjYW4ndCBvdmVyY29tZSB0aGUgbWFnbml0dWRlIG9mIHRoZSBudW1iZXJzLiAKV2UncmUgb25lIG9mIHRoZSB0b3BzIGF0IGd1bm5pbmcgMydzIGFuZCB3ZSBnbyBmYXIgdG9vIGNvbGQgdG9vIG9mdGVuIGZyb20gZG93bnRvd24gdG8gYmUgcGxheWluZyB0aGF0IHdheS4gV2UgYXJlIDNyZCB0byBsYXN0IGF0IGdldHRpbmcgdG8gdGhlIGxpbmUgYXMgYSByZXN1bHQuIEl0J3MgZXh0cmVtZWx5IGZydXN0cmF0aW5nIHRvIHdhdGNoLkRKUnlHdXkyMCAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxNyBkYXlzIGFnb0kgd2FzIGluIFZlZ2FzIGZvciBteSBiYWNoZWxvciBwYXJ0eSB3aXRoIDMgZnJpZW5kcyBvZiBtaW5lLiAKQWxzbyBuZXZlciB1c2UgYW55dGhpbmcgbGlrZSByaWRleCBvciBzZXB0aWMgdHJlYXRtZW50LiAKQSBkZWF0aCBjZXJ0aWZpY2F0ZSBzaG93cyB0aGF0IFZpbmNlbnQgZGllZCBvZiBjYXJkaWFjIGFycmVzdCBvbiBGZWIuIDEwLCAyMDE5LCBpbiBhbiBBc2hldmlsbGUsIE5vcnRoIENhcm9saW5hLCBob3NwaXRhbC4gCkl0IGxlZnQgbWUgZmVlbGluZyBsaWtlIEkgY2FuJ3QgZW5qb3kgYSBzaW1wbGUgd2FsayB0byB0aGUgZ3JvY2VyeSBzdG9yZSB3aXRob3V0IGJlaW5nIGhhc3NsZWQuIApBbnlob3csIG91ciBnbyB0byBvZiBhY3Rpb24gc3BvcnRzIGlzIG9mZiB0aGUgdGFibGUgZHVlIHRvIGEga25lZSBpbmp1cnkuIEFuZCB3ZSBjYW4gc3RheSBvdXQgdGhhdCBsYXRlIG9yIGltYmliZSBoZWF2aWx5IGJlY2F1c2Ugd2UgaGF2ZSB3b3JrIHRvbW9ycm93IGFuZCBtb3N0IFViZXIgb3IgTHlmdCBkcml2ZXJzIHdvbiBiZSBhYmxlIHRvIG1ha2UgaXQgdG8gb3VyIGhvdXNlICAgNHdkIG1hbmRhdG9yeSB1cCBoZXJlIGluIHRoZSBtb3VudGFpbnMuCkZsZXhvbG9naWUgcGxhbnRhaXJlIGNoaW5vaXNlIG91IHRoYQoiICJBbmQgeW91J3JlIHRoaW5raW5nIHdoYXQgdG8geW91cnNlbGYgYXQgdGhhdCBwb2ludD8gSSdtIGJhcnJpY2FkZWQgaW4gYSByb29tIHdpdGggYSBndXkgd2l0aCBhIGJ1bmdlZSBjb3JkIHdob3NlIG5hbWUgd2FzIEJpbGwsIGJ1dCBub3cgaXQncyBFcm5pZT8gIiAiSXQgc3RpbGwgZGlkbid0IGdvIG9mZiwgIiB0aGUgd29tYW4gdG9sZCBWYW4gU2FudC4gCkJ1dCB3aGVuIHRoZXkgbWFkZSBjb250YWN0IHdpdGggdGhlIHdvbWFuLCBzaGUgY291bGRuJ3Qgc3BlYWsgRW5nbGlzaC4gSW52ZXN0aWdhdG9ycyB1c2VkIGEgdHJhbnNsYXRpb24gc2VydmljZSBvbiBhIGNlbGxwaG9uZSwgYnV0IHNoZSBuZXZlciBpbmRpY2F0ZWQgc29tZW9uZSB3YXMgZm9yY2luZyBoZXIgdG8gZG8gdGhpcywgQnJvd24gc2FpZC4gCkRpZG4gcHJhY3Rpc2UgaXQgZm9yIG1vc3Qgb2YgdGhlIHllYXIgdGhvc2UgZ29vZCBoYWJpdHMgYW5kIGF0IHRoZSBlbmQgb2YgdGhlIGRheSB3aGVuIHB1c2ggY2FtZSB0byBzaG92ZSBhbmQgdGhlIGFkdmVyc2l0eSBjb21lcyBvdXQsIHRoYXQgdGhlIGJlc3QgZWZmb3J0IHdlIGhhZC4gVGhhdCByZWFsbHkgZGVqZWN0aW5nIHRvIHNlZSB0aGF0LCBlc3BlY2lhbGx5IGluIGEgc2VyaWVzIHdoZXJlIHlvdSBoYXZlIGFuIGVsaW1pbmF0aW9uIGdhbWUgYXQgaG9tZSBhbmQgd2UgYWxyZWFkeSBsb3N0IHR3byBob21lIGdhbWVzLiAKVGFwaW9jYXRhcGlvY2EgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28KRm9yIGJlZ2lubmVycywgaXQgbWF5IGJlIHF1aXRlIGhhcmQgdG8gdW5kZXJzdGFuZCB0aGUgdGVybXMgdGhhdCBhcmUgb2Z0ZW4gdXNlZCBpbiBvbmxpbmUgcG9rZXIuIApJdCBpcyBhIGJvdXRpcXVlIHRvd2VyIHRoYXQgaXMgYSB2ZXJ5IGh1bWFuIHNjYWxlLiAKRGllc2VzIFNjaHVwcHNlbiBtYWNodCBTcGEsIHN0cmVuZ3QgbmljaHQgYW4gdW5kIGVpbiBwYWFyIEdyb3NjaGVuIHNwcmluZ2VuIGRhYmVpIGF1Y2ggcmF1cy4gUG9rZXIgYmVyIGRhcyBHZXNjaHVwcHNlIGhhYiBpY2ggamEgc2Nob24gZ2VzY2hyaWViZW4sIGFsc28gaGllciBtYWwgZXR3YXMgenVtIHp3ZWl0ZW4gVGhlbWEuIApZb3UgY2FuIG1lc3MgYXJvdW5kIGluIHRoZSBwb2tlcmRvcGUgdmFyaWFuY2UgY2FsY3VsYXRvciB0byBzZWUgd2hhdCBraW5kIG9mIHN3aW5ncyBhcmUgdG8gYmUgZXhwZWN0ZWQgd2l0aCBkaWZmZXJlbnQgd2lucmF0ZXMuCkl0IHdhcyBhbiBlbGFib3JhdGUgc2NoZW1lIHRoYXQgcGxheWVkIG91dCBmb3IgdGhlIGJlc3QgcGFydCBvZiAxOCBtb250aHMsIHVudGlsIEhhcnJvZCdzIGZhdGhlciBwaWNrZWQgdXAgdGhlIGlycmVndWxhcml0aWVzIGluIEphbnVhcnkgMjAxMiBhbmQgY2FsbGVkIHRoZSBEZXBhcnRtZW50IG9mIEZhaXIgVHJhZGluZy4KQW5uZSBmb3VuZCBpdCBhZnRlciBzaGUgd2FzIGdvbmUgYW5kIG9wZW5lZCBpdCB3b25kZXJpbmdseS4gSW4gaXQgd2FzIGEgdGlueSB3aGl0ZSBkcmVzcyBvZiBleHF1aXNpdGUgd29ya21hbnNoaXAgIGRlbGljYXRlIGVtYnJvaWRlcnksIHdvbmRlcmZ1bCB0dWNraW5nLCBzaGVlciBsb3ZlbGluZXNzLiAKVGhlIENodXJjaCBpcyB3YWxraW5nIGluIGZhaXRoIGluIEhpcyB3aWxsLCBhbmQgaW4gSGlzIHJpZ2h0ZW91c25lc3MuIApUaGUgMyBpbiAxIGNvbnZlcnNpb24gdGFibGVzIGFyZSBob3QgY29tbW9kaXRpZXMgZm9yIHRob3NlIHdobyBlbmpveSBhIGdhbWUgb2YgcG9rZXIsIGFuZCBhIGdhbWUgb2YgcG9vbC4gClNvbWUgZXNzZW50aWFsIGZ1bmN0aW9ucyBvZiBvdXIgV2Vic2l0ZXMgYW5kIEFwcHMgYXJlIG9ubHkgcG9zc2libGUgaWYgaW5mb3JtYXRpb24gaXMgc3RvcmVkIHBlcnNpc3RlbnRseSBiZXR3ZWVuIGVhY2ggcGFnZSB5b3UgbG9vayBhdC4gCkp1c3QgYmVjYXVzZSB0aGV5IGxvc2Ugb25lIGFkdmFudGFnZSBkb2VzbiBtZWFuIHRoZXkgd2lsbCBzdG9wLiBUaGUgYWR2YW50YWdlcyBvZiBhbGxvd2luZyB0aGUgd2hvbGUgd29ybGQgdG8gcHJvZHVjZSB1bmZldHRlcmVkIGlzIGZhciB3b3J0aCB0aGUgaW5jb252ZW5pZW5jZSBvZiBub3QgZ2l2aW5nIG9uZSBjb21wYW55IGEgZHJ1ZyBtb25vcG9seS4gRHJ1ZyBjb21wYW5pZXMgd291bGQgc3RpbGwgbWFrZSBkcnVncy4gCkRpc3RpbGxlZCBwYXJ0bmVycyB3aXRoIFBhY2lmaWMgQXNzaXN0YW5jZSBEb2dzIFNvY2lldHksIGFuZCB2b2x1bnRlZXJzIHdpdGggZG9ncyB3aWxsIGJlIHJvYW1pbmcgdGhlIGV2ZW50IHdoaWxlIG9mZmVyaW5nIHRpY2tldHMgdG8gYSA1MC81MCBkcmF3LiBMYXN0IHllYXIgdGhlIGZlc3RpdmFsIHJhaXNlZCBjbG9zZSB0byAkNTAwMCBmb3IgdGhlIG9yZ2FuaXphdGlvbi4gCjQgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb2kgdGhpbmsgdGhlcmUgYSBiaXQgb2YgYSBzb2NpZXRhbCBwcm9ibGVtIHdpdGggdGhpcyBraW5kIG9mIHRoaW5nLiAKSXQncyBub3QgYmVjYXVzZSBpdCB3b24ndCB3b3JrLCBidXQgYmVjYXVzZSB1c2luZyBpdCBjYW4gYmUgcXVpdGUgZGlmZmljdWx0LiBIb3dldmVyLCB0aGlzIHNvZnR3YXJlIGlzIG9ubHkgdHdvIHN0ZXBzLiBGaXJzdCB5b3Ugb3BlbiB1cCB0aGUgcG9rZXIgcm9vbSB5b3UgYXJlIGdldHRpbmcgcmVhZHkgdG8gcGxheSBpbiBhbmQgc2Vjb25kLCB5b3Ugc2ltcGx5IG9wZW4gdXAgdGhlIFBFUCBzb2Z0d2FyZS4gCnN0YWtlcyBmaWdodCBvdmVyIGFsbG93aW5nIG9ubGluZSBwb2tlcgpBcyBoYXMgYWxyZWFkeSBiZWVuIG1lbnRpb25lZCwgaXQgaGFzIGFsbCB0aGUgcG93ZXIgb2YgYSBMYWR5U2hhdmUgYW5kIHdpdGggYSB0b3Agc3BlZWQgb2YgNTVtcGgsIHdvbid0IGZvcmdpdmUgeW91IGZvciB0cnlpbmcgdG8gbWFrZSBpdCBnbyBhbnkgZmFzdGVyLiAKVGhlcmUgYXJlIHZhcmlhbnRzIHdoaWNoIGFsbG93IHVwIHRvIDMgZHJhd3MuIEluIHRoaXMgdmFyaWFudCB0aGVyZSBhcmUgbm8gc2hhcmVkICAgb3IgY29tbXVuaXR5ICAgY2FyZHMgZGVhbHQuKSAoRnVsbCBBbnN3ZXIpLiAKSSBqdXN0IHBvaW50aW5nIG91dCB0aGF0IHRoZSB2ZXJ5IGZvdW5kYXRpb24gb2YgZWFjaCBwbGF5ZXIgc3VjY2VzcyBhdCB0aGlzIGdhbWUgaXMgdGhlIHJhbmRvbSBudW1iZXIgZ2VuZXJhdG9yLCBub3QgdGhlIHBsYXllcnMgc2tpbGwuIApJIGFtIHRyeWluZyB0byBnYXVnZSB5b3VyIG9wcG9uZW50J3MgcmVhY3Rpb24uIApBc3NpZ25pbmcgVmFsdWVzVGhlIGhvc3Qgb2YgdGhlIGdhbWUgaXMgdGhlIG9uZSB3aG8gZGVjaWRlcyB0aGUgdmFsdWUgb2YgZWFjaCBjaGlwLiBJZiB0aGVyZSBhcmUgbW9yZSBjaGlwcyBvZiBvbmUgY29sb3IsIGl0IG1ha2VzIHNlbnNlIHRvIG1ha2UgdGhlIHZhbHVlIG9mIHRoaXMgY2hpcCBsb3dlc3QuIFRoZSBjaGlwcyB0aGF0IGFyZSBsZWFzdCBhYnVuZGFudCBzaG91bGQgaGF2ZSB0aGUgaGlnaGVzdCB2YWx1ZXMuCjE0IHllYXJzIGxhdGVyPyBIZSBnZXRzIHRvIHRha2UgaG9tZSAkNTI2LDc3OCBhcyBhIGNvbnNvbGF0aW9uIHByaXplIGFzIHBva2VyIGZhbnMgYXJlIGFsbCBsZWZ0IHdvbmRlcmluZyB3aGF0IGlmIE5lZ3JlYW51IGhhZCBtYWRlIHRoZSBOb3ZlbWJlciBOaW5lPyBPbmUgdGhpbmcgaXMgZm9yIHN1cmUsIEVTUE4gcmF0aW5ncyB3b3VsZCBoYXZlIGJlZW4gdGhyb3VnaCB0aGUgcm9vZiBhcyBsaXZlIGNvdmVyYWdlIG9mIHRoZSBmaW5hbCB0YWJsZWJlZ2lucyBvbiBTdW5kYXksIE5vdmVtYmVyIDggYXQgODozMHBtIEVULi4gClRoaXMgaXMgdGhlIGJlc3QgZGF5IG9mIGhpcyBsaWZlIGFuZCBoZSBjYW4gd2FpdCB0byBwdXQgdGhlIGF3YXJkIG9uIGhpcyBkZXNrLiAKV2lsbCBzdGlsbCBuZWVkIGJvdGguIApPbmUgb2YgdGhlc2Ugc2VjdGlvbnMgd291bGQgaGF2ZSBvbiBhdmVyYWdlIGFuIGFzc29jaWF0ZWQgZG96ZW4gY2FyZHMgb2YgcGljdG9yaWFsIGFuZCB0ZXh0dWFsIGRlc2NyaXB0aW9uIG9mIHRoYXQgc2VjdGlvbiBvZiB0aGUgaGVhZCBvciBmYWNlLiAKQWxsIHBheSAkN2sgYW5kIGV2ZXJ5b25lIGdldHMgYSAkMWsgZGlzY291bnQgZnJvbSB0aGUgbmV3IGJ1eWVycy4gQWxsIGlzIHJpZ2h0IGluIHRoZSB3b3JsZC4KV2hhdCdzIG5lZWRlZCBhcmUgd29ya291dHMgdGhhdCB0YXJnZXQgc3BlY2lmaWMgbXVzY2xlIGdyb3VwcyBpbiB5b3VyIGxlZ3MuIApNeSBtYW5hZ2VyIGRpZG4gZ2V0IGJhY2sgdG8gbWUgcmlnaHQgYXdheSwgbm8gYmlnIGRlYWwgc2luY2UgaXQgd2FzIDcgbW9udGhzIG91dC4gU28gYWJvdXQgYSBtb250aCBsYXRlciwgSSBnZXQgYW4gZW1haWwgZnJvbSBteSBtYW5hZ2VyIHRlbGxpbmcgbWUgdGhhdCB0aGV5IGNvdWxkbiBncmFudCBtZSBteSByZXF1ZXN0IHRoZW4gYW5kIHRoZXJlIGJ1dCB3b3VsZCByZXZpZXcgaW4gYSBjb3VwbGUgbW9udGhzLiAKSWYgeW91IHdhbnQgdGhlbSB0byBmb2N1cyBvbiB0aGUgUGVyc29uYWxpemVkIENsYXkgUG9rZXIgQ2hpcHMgdGhhdCB5b3UgaGF2ZSwgdGhlbiBkbyBub3QgbWFrZSB0aGUgbWlzdGFrZSBvZiB0YWxraW5nIGFib3V0IFBva2VyIEpld2VscnkgaW4gdGhlIGVtYWlsLiAKT25lIGRheSB3ZSB3ZXJlIHdhbGtpbmcgYXJvdW5kIHRoZSBjaXR5IHRoZSBjb24gd2FzIGluIGxvb2tpbmcgZm9yIGEgcGxhY2UgdG8gZWF0IHRoYXQgd2Fzbid0IHBhY2tlZCB3aXRoIHBlb3BsZS4gCk5hbWV3aXRobm91c2VyICAyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KVGhlIGZpcnN0IGFuZCBtb3N0IGltcG9ydGFudCByZWFzb24gdG8gZm9jdXMgb24gZGl2aWRlbmQgcGF5aW5nIHN0b2NrcyBpcyB0byBjYXBpdGFsaXplIG9uIHRoZSBlbm9ybW91cyBlZmZlY3RzIG9mIGNvbXBvdW5kaW5nLiAKRWFjaCBjZWxsIHByb2R1Y2VzIHdhc3RlIGR1cmluZyBpdHMgbm9ybWFsIGFjdGl2aXR5IGFuZCBtZXRhYm9saXNtLCBhbmQgZXhjcmV0ZXMgdGhpcyBvdXRzaWRlIGl0cyBjZWxsIG1lbWJyYW5lLiBGcm9tIHRoZXJlIGl0IGlzIGxvY2F0ZWQgaW4gd2hhdCBpcyBjYWxsZWQgdGhlICJpbnRlcnN0aXRpYWwgc3BhY2UiIHdoaWNoIGlzIHRoZSBzcGFjZSBsb2NhdGVkIGJldHdlZW4gdGhlIGNlbGxzLiBUaHJvdWdoIHRoZSBhY3Rpdml0eSBvZiB5b3VyIG11c2NsZXMsIHRoZSBjZWxscyBhbmQgdGhlIGludGVyc3RpdGlhbCBzcGFjZXMgYXJlIHNxdWVlemVkIChvciBwdW1wZWQpIGFuZCB0aGUgZmx1aWQgaXMgbW92ZWQgb3V0IG9mIHRoZSBhcmVhLiBUaGUgZmx1aWQgdGhlbiBpcyB0eXBpY2FsbHkgZGlyZWN0ZWQgdG8gdGhlIGx5bXBoIHN5c3RlbSwgd2hlcmUgaXQgZ2V0cyBjb2xsZWN0ZWQsIGNvbmNlbnRyYXRlZCwgYW5kIGRlYWx0IHdpdGguIApJbiBhIHByb3RlY3RlZCBhcmVhIGl0IHByb2JhYmx5IGEgYmV0dGVyIGlkZWEgdG8gdXNlIHRoZSBvdGhlciByb2NrZXQgZGVzaWducyB0byBpbmNyZWFzZSB5b3VyIGZpcmVwb3dlci4uIApOaWNodCB3aWVkZXIgYXVmIGVpbmVuIE5vcm1hbHp1c3RhbmQga29tbWVuIGthbm4sIGRlciBmciBkYXMgUG9rZXJuIGFiZXIgZXJmb3JkZXJsaWNoIGlzdC4gRGllIEtlcm5zY2htZWx6ZSBpbiBlaW5lbSBlbW90aW9uYWxlbiBBdXNuYWhtZXp1c3RhbmQgaGFsdGUgaWNoIGZyIGV4dHJlbSBnZWZocmxpY2ggYmVpIEFESFMuIApCdXQgdGhlcmUgaXMgdGhpcyBnYXAuIEZvciB0aGUgZmlyc3QgY291cGxlIHllYXJzIHlvdSBtYWtlIHN0dWZmLCBhbmQgaXQncyBqdXN0IG5vdCB0aGF0IGdvb2QuIApJZiB5b3UgYSBzdHVwaWQgb3duZXIgc3R1cGlkbHkgY29uc2lkZXJpbmcgQm9uZHMsIHdvdWxkbiB0aGlzIGxhbWUgYWN0IHRlbGwgeW91IGV2ZXJ5dGhpbmcgeW91IG5lZWRlZCB0byBrbm93PyBIZSBhIGRpdmEuIEhlIGJyaW5ncyBhIHBvc3NlLiBIZSBkb2VzIGludGVtcGVyYXRlLCBlbWJhcnJhc3NpbmcgdGhpbmdzIHRvIGhpcyB0ZWFtLiAKQ29tZSB0byBmaW5kIGl0cyBiZWVuIGhhY2tlZCwgbW9uZXkgZHJhaW5lZCB0byA0MGssIGdlYXIgc29sZC4gSXQgc3RpbGwgcHJldHR5IGZyZXNoIGFuZCBpIHdhbnQgdG8gYm9tYmFyZCBoaW0gd2l0aCBxdWVzdGlvbnMgYnV0IGkgdGhpbmsgaXRzIGJldHRlciB0byBnaXZlIGhpbSBzcGFjZSBSTi4gClRoZSBzaXplIGFuZCBzdGFiaWxpdHkgb2YgdGhlIHByb2plY3QgeW91IGFyZSB3b3JraW5nIG9uIG1heSBpbXBhY3QgeW91ciBhYmlsaXR5IHRvICJjbGltYiB0aGUgbGFkZGVyIiB3aGlsZSBzdGF5aW5nIG9uIG9uZSBwcm9qZWN0LCBidXQgaXQgc2hvdWxkIG5vdCBkaXJlY3RseSBpbXBhY3QgeW91ciBzYWxhcnkuIFRoZSBvbmx5IHdheXMgSSBzZWUgdGhpcyBub3QgYmVpbmcgdHJ1ZSBpcyBpZiB5b3UgYXJlIGluIGEgbWFuYWdlbWVudCBvciBidXNpbmVzcyBkZXZlbG9wbWVudCByb2xlIGF0IGEgY29udHJhY3RvciwgYW5kIHlvdXIgYm9udXMgaXMgdGllZCB0byB0aGUgc2l6ZSBvZiB0aGUgY29udHJhY3QgdGhhdCB5b3UgbWFuYWdlL2dlbmVyYXRlLCBvciBpZiB5b3UgaGF2ZSBhIHZlcnkgc3BlY2lmaWMgc2tpbGwgc2V0IHRoYXQgd2FycmFudHMgYSBjZXJ0YWluIHNhbGFyeSwgYW5kIHBvc2l0aW9ucyB3aXRoIHlvdXIgdGVjaG5pY2FsIHNraWxsIHNldCBkbyBub3QgZXhpc3Qgb24gb3RoZXIgcHJvZ3JhbXMuClRoYXQgc2FtZSBwYyBpcyBzdGlsbCBmdW5jdGlvbmluZyAoYWxiZWl0IHNsb3dlciB0aGFuIGJlZm9yZSkgYnV0IHN0aWxsIGdvaW5nIHN0cm9uZy4uIApCdXQgaWYgaGUgbm90aWNlZCBoZXIgZ2FpbmluZyBhbmQgbG9zaW5nIHdlaWdodCwgaGUgaGFkIG5vIHJlYXNvbiB0byBsZWFwIHRvIHRoZSBjb25jbHVzaW9uIHRoYXQgc2hlIHdhcyBwcmVnbmFudCwgaGUgYXJndWVzLiBIZSBrbmV3IHNoZSB3YXMgb24gdGhlIHBpbGwsIGhhZCBvZnRlbiBzZWVuIGhlciB0YWtpbmcgaXQuIEFuZCBoZSB0aG91Z2h0IHRoZWlyIHJlbGF0aW9uc2hpcCB3YXMgYmFzZWQgb24gdHJ1c3QuIApUaGUgcG9pbnQgaXMsIGl0J3MgYSBmdWNraW5nIG1vdmllLiAKSSBrbmV3IEkgaGFkIGFuIGl0Y2ggZm9yIHJlYWwgZXN0YXRlIGJ1dCAzIHllYXJzIGFnbyB3YXNuJ3QgZXZlbiBzdXJlIGlmIElkIGV2ZXIgcHVsbCB0aGUgdHJpZ2dlci4gQW5hbHlzaXMgUGFyYWx5c2lzIGFuZCBmZWFyIG9mIGZhaWx1cmUgcHJldHR5IG11Y2ggaGFkIGEgc3RyYW5nbGVob2xkIG9uIG1lLiBCdXQgQmlnZ2VyUG9ja2V0cyAoZXNwZWNpYWxseSB0aGUgcG9kY2FzdCkgd2FzIGEgaHVnZSBoZWxwIGZvciBtZSB0byBqdXN0IGp1bXAgaW4uIApObyBSZWFjdGlvbiwgSElGVywgQW5hbG9neSwgQ2FrZSBEYXksIG9yIFVwdm90ZSBnaWZzLiBUaGVyZSBhcmUgYWxyZWFkeSBzdWJyZWRkaXRzIG1vcmUgc3VpdGVkIGZvciB0aGlzIGtpbmQgb2YgY29udGVudC4gKFRoaXMgcnVsZSBkb2VzIG5vdCBhcHBseSB0byBjb21tZW50cykKTm92ZWwgVGVhIEFjY291bnQgIDcgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpUYXN0eXRhc3R5YXZvY2FkbyB1CkJlYXQgdGhlIGVnZyB3aXRoIGEgd2lyZSB3aGlzay4gCkJhc2ljYWxseSwgdGhlIGhvdXNlIGJlbG9uZ2VkIHRvIHRoZWlyIG1vdGhlciBhbmQgd2hlbiBzaGUgZGllZCB0aGV5IGFsbCBpbmhlcml0ZWQgaXQuIEthdGh5IGFuZCBLaW0gc29sZCB0aGVpciBzaGFyZXMgdG8gS3lsZSwgbGVhdmluZyBoZXIgYXMgdGhlIHNvbGUgb3duZXIuIEl0IHNvdW5kZWQgbGlrZSBuZWl0aGVyIEthdGh5IG9yIEtpbSByZWFsbHkgd2FudGVkIHRvIHRoZSByZXNwb25zaWJpbGl0eSBvZiB0aGUgaG91c2UsIGJ1dCBLeWxlIHdhcyB3aWxsaW5nIHRvIHRha2UgaXQgb24uVGhlIG9ubHkgdGhpbmcgSSBjYW4gdGhpbmsgb2YgdGhhdCBtaWdodCBoYXZlIGJlZW4gc2hhZHkgd2FzIEtpbSdzIHN0YXRlIG9mIG1pbmQgd2hlbiB0aGlzIGFsbCB3ZW50IGRvd24uIAoxLiAKRXhwbGFpbiBSZWlqaSBobyBhbmQgdGhhdCBpdCBpcyBtb3JlIGFkdmFuY2VkIGFzIG9uZSB1c2VzIGludHVpdGlvbiBkaXJlY3RseSByYXRoZXIgdGhhbiB0aGUgaGFuZC4xNS4gRXhwbGFpbiBhbmQgcHJhY3RpY2Ugc3RhbmRhcmQgdHJlYXRtZW50IHdpdGggYWxsIGhhbmQgcG9zaXRpb25zIChwaWNrIGEgcGFydG5lciBhbmQgc3dpdGNoKS4xNi4gCkl0IHtjZW5zb3JlZH0uIApJbmRlc2NyaWJhYmxlLiAKSGFsZiBvZiBET3MgY2FudCBldmVuIHBhc3MgdGhlIHVzbWxlLjMpIE5vLCBlbGVjdGl2ZSBwcm9jZWR1cmVzIGxpa2UgY2lyY3VtY2lzaW9uIHNob3VsZCBub3QgYmUgY292ZXJlZC4gQW5kIE9NTSBpcyBhYm91dCBhcyB3b3J0aHkgb2YgaW5zdXJhbmNlIGNvdmVyYWdlIGFzIGNoaXJvcHJhY3RvcnMgYW5kIG5hdHVyb3BhdGhzLiAKTXkgZXhwZXJpZW5jZSBvdmVyIHRoZSBsYXN0IDUrIHllYXJzIGluIGJ1c2luZXNzIGlzIHRoYXQgdGhlcmUgYXJlIHBlb3BsZSB3aG8gd2FudCB0byBvd24gdGhlaXIgb3duIGJ1c2luZXNzIGJ1dCBub3Qgd2lsbGluZyB0byBwdXQgdGhlIHdvcmsgaW50byBpdCwgc28gYWxsIHRoZXkgZG8gaXMgdGFsayBhYm91dCBpdC4gVGhlcmUgYXJlIHNvbWUgd2hvIGF0dGVtcHQgaXQgYnV0IHJlYWxpemUgdGhleSBhcmUgaW4gb3ZlciB0aGVpciBoZWFkcyBhbmQgYmFpbC4gU29tZXRpbWVzIHRoZSBmaXJzdCBnbyBhdCBhIGJ1c2luZXNzIGlzIGEgbG9zcyBhbmQgdGhleSBnaXZlIHVwLiAKQXMgcGFydCBvZiBFcHN0ZWluJ3MgYWdyZWVtZW50LCBoZSB3YXMgcmVxdWlyZWQgdG8gcmVnaXN0ZXIgYXMgYSBzZXggb2ZmZW5kZXIsIGFuZCBwYXkgcmVzdGl0dXRpb24gdG8gdGhlIHRocmVlIGRvemVuIHZpY3RpbXMgaWRlbnRpZmllZCBieSB0aGUgRkJJLiBJbiBtYW55IGNhc2VzLCB0aGUgY29uZmlkZW50aWFsIGZpbmFuY2lhbCBzZXR0bGVtZW50cyBjYW1lIG9ubHkgYWZ0ZXIgRXBzdGVpbidzIGF0dG9ybmV5cyBleHBvc2VkIGV2ZXJ5IGRhcmsgY29ybmVyIG9mIHRoZWlyIGxpdmVzIGluIGEgc2NvcmNoZWQgZWFydGggZWZmb3J0IHRvIHBvcnRyYXkgdGhlIGdpcmxzIGFzIGdvbGQgZGlnZ2Vycy4KIkl0IGhhcyBiZWVuIGdyZWF0IHdvcmtpbmcgd2l0aCB0aGUgdGFsZW50ZWQgc3RhZmYgYXQgdGhlIExvbmdtb250IEVjb25vbWljIERldmVsb3BtZW50IFBhcnRuZXJzaGlwLCBhcyB3ZWxsIGFzIHRoZSBib2FyZCwgbWF5b3IgYW5kIGNpdHkgY291bmNpbCwgYW5kIGNpdHkgc3RhZmYsIiBKYW5pbmUgc2FpZC4gIlRoZSBjaXR5IGlzIG9uIGEgZ3JlYXQgZ3Jvd3RoIHRyYWplY3RvcnkgYW5kIHRoYXQgaGFzIGJlZW4gZnVuIHRvIGJlIGEgcGFydCBvZi4iClNoZSB2ZW50dXJlZCBpbnRvIHRoZSBwb2tlciByb29tIHRvIGNvbGxlY3QgaGVyIGZyaWVuZCwgd2hvIHdhcyBsb3NpbmcgbW9uZXkuIEhlIG9mZmVyZWQgdG8gc2hvdyBoZXIgaG93IHRvIHBsYXkgY3JhcHMuIApJdCdzIGEgc2ltcGxlIEkga25vdyBidXQgaXRzIGVmZmVjdGl2ZSBhbmQgSSBjYW4gYnVpbGQgb24gdGhhdC4KR2l2aW5nIGl0IHVwIHRvIE1lc3NpbmEgZm9yIGEgc3RlbGxhciBwZXJmb3JtYW5jZS4uIApJdCB0YXVnaHQgbWUgdG8gYmUgdmVyeSBmZWFybGVzcyAgIG1heWJlIHRvbyBmZWFybGVzcyBpbiB0aGUgZW5kIi4uIApXZWxsLCBJIGp1c3QgdGhvdWdodCB0aGF0IEkgd2lsbCBnaXZlIGF3YXkgYSBsaXR0bGUgbW9yZSBpbmZvIGFib3V0IG1lISEKVmVsb2NpdHkwMTAgdQpJIGEgc29jaW9sb2dpc3QsIHNvIEkgc2VlIHRoZSBkZWJhdGUgb3ZlciBXaWxsaWFtIFJlaG5xdWlzdCBhbmQgU29uaWEgU3RvdG9tYXlvciB0aHJvdWdoIG15IHBhcnRpY3VsYXIgYW5kIHBlY3VsaWFyIGRpc2NpcGxpbmUuIFRoZSBkZWJhdGUgb3ZlciB3aGV0aGVyIG9iamVjdGl2aXR5IGlzIGV2ZXIgcG9zc2libGUgd2FzIHByZXNlbnQgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIHNvY2lvbG9neS4gMTUwIHllYXJzIGFnbyBLYXJsIE1hcnggdG9sZCB1cyB0aGF0IHRoZSBpZGVhcyBvZiB0aGUgcnVsaW5nIGNsYXNzZXMgYXJlIGV2ZXJ5d2hlcmUgdGhlIHJ1bGluZyBpZGVhcy4gCiJJZiBvbmUgbXkgZnJpZW5kcyB3ZXJlIGF0IG15IGV4ZXMgaG91c2UsIHRoZSBmYXRoZXIgb2YgbXkgY2hpbGRyZW4iIGFuZCBoZXIgc2F5aW5nICJJIGtub3cgZm9yIGEgZmFjdCBJJ20gbm90IHRoZSByZWFzb24gdGhlaXIgZmFtaWx5IGlzIGJyb2tlbiB1cCIuIFNlZW1zIGxpa2UgS2hsb2UgaXMganVzdCByZWFsbHkgdXBzZXQgYW5kIGVtYmFycmFzc2VkIGJlY2F1c2UgZXZlcnl0aGluZyBpcyBzbyBwdWJsaWMgd2hlbiB0aGUgcmVsYXRpb25zaGlwIHdhcyBkb29tZWQuIE5vdCB0byBtZW50aW9uIHRoZSBmYWN0IHRoYXQgVHJpc3RhbiBoYXMgaGlzIG93biBwbGFjZSBpbiBMQT8gV291bGRuJ3QgdGhleSBiZSBsaXZpbmcgdG9nZXRoZXIgdGhlcmUgaWYgdGhleSBhbHNvIGhhdmUgYSBwbGFjZSBpbiBDbGV2ZWxhbmQgdG9nZXRoZXIgYWxyZWFkeT8gSG9uZXN0bHkgaGUgaGFzIHplcm8gcmVzcGVjdCBmb3IgdGhlaXIgZmFtaWx5IHRoZWlyIGRhdWdodGVyIGFuZCB0aGVpciByZWxhdGlvbnNoaXAuLiAKRmlqaVRlYXJ6ICA0MDYgcG9pbnRzICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnbwpJbnZlc3RpbmcgaW4gYSBuZXcgc3BvcnQgY2FuIGJlIGNvc3RseS4gSG93ZXZlciB3aGVuIHlvdSBkZWNpZGUgdG8gdGFrZSB1cCBicmlkZ2UgYWxsIHlvdSBuZWVkIGlzIGEgZGVjayBvZiBjYXJkcyBhbmQgdGhyZWUgb3RoZXIgcGxheWVycyBhIHZlcnkgaW5leHBlbnNpdmUgcGFzdGltZS4gQWx0ZXJuYXRpdmVseSwgeW91IG1heSBqb2luIHRoZSBtaWxsaW9ucyBvZiBwZW9wbGUgd29ybGQgd2lkZSwgd2hvIHBsYXkgYnJpZGdlIGZvciBmcmVlIG9uIHRoZSBpbnRlcm5ldCwgYXQgYW55IGdpdmVuIHRpbWUsIGZyb20gdGhlIGNvbWZvcnQgb2YgdGhlaXIgb3duIGhvbWVzLgpXZSBjYW5ub3Qgb3ZlcmVtcGhhc2l6ZSB0aGF0IGlkZW50aWZ5aW5nIHN1c3RhaW5hYmxlIGFscGhhIGluIHRoZSBtYXJrZXQgaXMgbm8gY2FrZXdhbGsuIEV2ZW4gd2l0aCB0aG9zZSB0b29scywgeW91IGFyZSBzdGlsbCBvbmx5IG9uZSBzaGFyayBpbiBhIHRhbmsgZmlsbGVkIHdpdGggb3RoZXIgc2hhcmtzLiBGcm9tIGEgZmFuY3kgc2Nob29sLCBhbmQgYWxsIHRoZSBzaGFya3Mga25vdyBob3cgdG8gYW5hbHl6ZSBhIGNvbXBhbnkuIApUaGUgdHdvIGJhdHRsaW5nIHByb2dyZXNzaXZlIERlbW9jcmF0cyBhcmUgcm9sbGluZyBvdXQgdGhlIHJlZCBjYXJwZXQgZm9yIHByb3NwZWN0aXZlIHZvdGVycyB3aXRoIGVtcHR5IHBvY2tldHMsIHdoaWxlIGV4cGVjdGluZyB0aG9zZSB3aXRoIGRlZXBlciBvbmVzIHRvIHBpY2sgdXAgdGhlIHRhYnMuIEJ1dCBzb21lIHdpdGggZGVlcCBwb2NrZXRzIGFuc3dlciB0byB2b3Rpbmcgc3RvY2tob2xkZXJzIHdobyB3YW50IGxhcmdlciBib3R0b20gbGluZXMgYW5kIGNoYXJpdHkgdG8gYmVnaW4gYXQgaG9tZS4KQnV0IHdoaWxlIGdvb2Qgc3VycHJpc2VzIGRlbGlnaHQsIGJhZCBzdXJwcmlzZXMgY2F1c2UgYW54aWV0eS4gVGhhdCB3aHkgY2FtcGFpZ25zIHNwZW5kIGEgbG90IG9mIHRpbWUgcG9ydHJheWluZyB0aGVpciBvcHBvbmVudHMgaW4gYSBjZXJ0YWluIHdheS4gRm9yIGluc3RhbmNlIGp1c3QgYXMgZG9ncyBhcmVuIHN1cHBvc2VkIHRvIHdlYXIgc3VpdHMsIHNtb2tlIGNpZ2FycyBhbmQgcGxheSBwb2tlciwgcGVvcGxlIHdobyBhc3BpcmUgdG8gYmUgcHJpbWUgbWluaXN0ZXIgc2hvdWxkbiBmYXduIG92ZXIgQ2hpbmEsIHNsYW0gQWxiZXJ0YSBvciBnbyBzcXVpc2h5IG9uIHRlcnJvcmlzbSBpbiB0aGUgd2FrZSBvZiB0aGUgQm9zdG9uIGJvbWJpbmcuIFRoYXQgYSBiYWQgc3VycHJpc2UgYW5kIGl0IHdoeSB0aGUgQ29uc2VydmF0aXZlcyByZWxlbnRsZXNzbHkgZXhwbG9pdCBKdXN0aW4gZ2FmZmVzLgpTdGFydCB0aGUgbHVuY2ggbWVldGluZyBiZWZvcmUgeW91IHNpdCBkb3duLiAiQXJlIHlvdSByZWFkeSB0byBhcG9sb2dpemUgdG8gbWU/IiBhbnl0aGluZyBzaG9ydCBvZiBhbiAieWVzIiwgYW55ICJ3aGF0IGZvcj8iIG9yICJJIGRpZG4gZG8gYW55dGhpbmciIGFuZCB5b3UgdHVybiB0byBESCBhbmQgc2F5ICJ3ZSBkb25lIGhlcmUiIHRoZW4geW91IGxlYXZlLiAKS2FyZW46ICJTbyB5b3UganVzdCBnb2luZyB0byBpZ25vcmUgbWUgdGhlbiBhbmQgbm90IHRha2UgY2FyZSBvZiBpdD8iCllvdSBjYW4gZG8gd2hhdCBCaWcgVGluIEZvaWwgd2FudHMgYW5kIGJlbGlldmUgdGhhdCBzaGl0IGZyb20gdGhlIGJvdHRvbSBvZiB5b3VyIGhlYXJ0LiAKUmVhbGlzdGljYWxseSBlaXRoZXIgeW91ciBlc3RpbWF0ZWQgVERFRSBvciB5b3VyIGludGFrZSBpcyB3cm9uZywgaWYgeW91IHdlcmUgaW4gYSBjYWxvcmllIGRlZmljaXQgdGhlIHNjYWxlIHdvdWxkIGJlIG1vdmluZy4uIApQb3dlciBhbmQgdXRpbGl0eSBzaG91bGQgYmUgdGhlIGRlY2lzaW9uIGJldHdlZW4gdGhlIEZvcmRzLiBJIHNlZW4gY2xhaW1zIHRocm93biBhcm91bmQgdGhhdCB0aGUgRm9jdXMgdG9ycXVlIGlzIGxpa2UgZmxvb3JpbmcgaXQgaW4gYSBNdXN0YW5nLCBhbmQgSSBzZWVuIGNsYWltcyB0aGF0IHRoZSBGaWVzdGEgZmVlbHMgbGlrZSBhIE1pYXRhIGhhdGNoLiBLZWVwIGluIG1pbmQgdGhhdCB3aWxkLCB0aWdodCB0dW5pbmcgb24gdGhlIEZpZXN0YSBtZWFucyBpdCBhbHNvIGEgdmVyeSBidW1weSByaWRlICAgWVQgcmV2aWV3ZXIgc2F2YWdlZ2Vlc2Ugbm90ZWQgdGhhdCBpdCB3YXMgdG9vIHJvdWdoIGZvciBoaW0gdG8gY29uc2lkZXIgYXMgYSBkYWlseS4gQnV0IGl0IHN1cHBvc2VkIHRvIGJlIHJpZ2h0IGJlaGluZCB0aGUgTWlhdGEgaW4gZGF5IHRvIGRheSBjb21tdXRpbmcgZnVuLCBhbmQgSSB0aGluayBpdCBtaWdodCBiZSBhIGdvb2QgaWRlYSB0byBnZXQgb25lIHdoaWxlIGRlY2VudCBleGFtcGxlcyBhcmUgb24gdGhlIG1hcmtldC4gQWxzbyBkb24gZXhwZWN0IGFueXRoaW5nIGdvb2Qgb3V0IG9mIHRoZSBGb3JkIGludGVyaW9ycy4KVGhlIG90aGVyLCB3aG8gYXR0ZW5kZWQgYSBkaWZmZXJlbnQgc2Nob29sLCBzYXlzIHRoYXQgRmFyYmVyIHRvbGQgaGVyIGFib3V0IHRoZSByZWxhdGlvbnNoaXAgaW4gMjAxMi5dLiAKSSBoYWQgbXkgU0tYMDA3IGZvciBhYm91dCB0d28geWVhcnMgYW5kIHdlYXIgaXQgb2Z0ZW4uIEl0IHN0YXJ0ZWQgcnVubmluZyBhYm91dCAgMzBzIHNsb3cgYW5kIGJlY2FtZSBkaWZmaWN1bHQgdG8gbW92ZSB0aGUgc3RlbSBkdWUgdG8gZHJpZWQgb3V0IHNlYWxzLiAKVGhlcmUgYXJlIHByb2JhYmx5IHN0aWxsIG1hbnkgb2YgdGhvc2UgZnVuZGFtZW50YWwgc2tpbGxzIHlvdSBjYW4gY2xlYW4gdXAgbGlrZSBiYWNraW5nIHRpbWluZ3MsIHdhdmUgbWFuYWdlbWVudCwgYW5kIHByb2JhYmx5IENTaW5nIGdpdmVuIHRoZSBhZHZpY2UgeW91IGdpdmUuIApGcm9tIFNlYXNvbiAxNSBFcGlzb2RlIDA1LCBDcmFjayBCYWJ5IEF0aGxldGljIEFzc29jaWF0aW9uLiAKU28gbm93IGxvYW5zIGFyZSBiZWluZyBzZWN1cml0aXplZCBhZ2FpbiwgdGhhdCBpcywgcmVwYWNrYWdlZCBhbmQgc29sZCB0byBpbnZlc3RvcnMuIApJIHRoaW5rIHlvdSBzbWFydCBhbmQgcGVzc2ltaXN0aWMgZW5vdWdoIHRvIGhhdmUgcHJlZGljdGVkIHRoYXQga2luZCBvZiByZXNwb25zZSBsb2wuIEkgZG9udCB0aGluayB5b3Ugd291bGQgcmVzcG9uZCB3ZWxsIHRvIHRoZXJhcHkgc2VlaW5nIGFzIHlvdSBoYXZlIGFuIG9iamVjdGl2ZSBvdXRsb29rIG9uIGVtb3Rpb25zLCBidXQgaXQgbWF5IGJlbmVmaXQgeW91IHRvIGVhc2UgdXAgYSBiaXQgYW5kIGJlIG1vcmUgb3BlbiB0byB0aGUgcG9zc2liaWxpdHkgb2YgZm9ybWluZyBtZWFuaW5nZnVsIHJlbGF0aW9uc2hpcHMgaW4gdGhlIGZ1dHVyZS4KUGVyc29ucyB3aG8gYXJlIGludGVyZXN0ZWQgaW4gY2FzaW5vIGVxdWlwbWVudCBmb3IgYSBwcml2YXRlIGdldCB0b2dldGhlciwgYSBjb3Jwb3JhdGUgZXZlbnQsIGEgZ2FtYmxpbmcgdG91cm5hbWVudCBvciBvdGhlciBzaW1pbGFyIGV2ZW50cyBzaG91bGQgcmVzb3J0IHRvIGNhc2lubyBwYXJ0eSByZW50YWxzLiAKQnV0dG9uIG9wZW4gaXMgZmluZSB3aXRoIHRoZXNlIHN0YWNrIHNpemVzIGFuZCBhIGZpc2ggaW4gYmxpbmRzLiBGbG9wIHBsYXkgaXMgb2sgd2l0aCBhIG5pY2UgZGlzZ3Vpc2VkIGd1dHNob3QgYW5kIGdyZWF0IGltcGxpZWQgb2RkcyBoZXJlLCBpZiB0aGUgZmlzaCBpcyByYWlzaW5nIGZvciB2YWx1ZSBoZXJlLCBoZSBpcyBuZXZlciBnb2luZyB0byBmb2xkIHdoZW4geW91IGhpdC4KU2l0dGluZyBhdCBvbmUgcGxhY2Ugb24gc2NyZWVuLiBJdCBvbmx5IGEgbWF0dGVyIG9mIHRpbWUgdW50aWwgdGhlIGltYWdlIHF1YWxpdHkgd2lsbCBkZXRlcmlvcmF0ZS5JcyBpdCBqdXN0IG1lIG9yIHdhcyBSYWNlIENvbnRyb2wgYSBsaXR0bGUgQW50aSBQb3JzY2hlIGJpYXNlZCBpbiB0aGlzIG9uZT8gSXQgc2VlbXMgUG9yc2NoZSBnb3QgcGVuYWx0aWVzIGZvciBldmVyeSBuaXR0eSBncml0dHkgc2hpdCwgd2hpbGUgTG90dGVyZXJzIGRpY2sgbW92ZSB3YXMgbm90IGV2ZW4gY29uc2lkZXJlZCBmb3IgYmVpbmcgdW5kZXIgaW52ZXN0aWdhdGlvbj9JIGxvdmUgTG90dGVyZXIsIGhlIGlzIHRoZSBiZXN0IHNwb3J0c2NhciBkcml2ZXIgaW4gdGhlIHdvcmxkIHJpZ2h0IG5vdywgYnV0IHRoYXQgbW92ZSBpbiB0aGUgdGlnaHQgbGVmdCBoYW5kIGNvcm5lciBhZ2FpbnN0IHRoZSAyIFBvcnNjaGUgd2FzIHByZXR0eSBzaGl0dHkgaW4gbXkgb3Bpbmlvbi4gClRoZXJlIGFyZSBhIGZldyBhZHZhbnRhZ2VzIHRob3VnaC4gRmlyc3Qgb2YgYWxsIHlvdSBjYW4gZGlzY2FyZCBmcm9tIHlvdXIgaGFuZCBhbnkgY2FyZHMgdGhhdCB5b3UgZG8gbm90IHdhbnQgdG8ga2VlcC4gCkkgYWdyZWUgdGhhdCBidXNpbmVzc2VzIHNob3VsZCBwYXkgdGhlIGxlYXN0IGFtb3VudCB0YXhlcyBwb3NzaWJsZSwgYnV0IHRoZSB0YXggY29kZSBuZWVkcyB0byBiZSBtb2RpZmllZCB0byBhZmZlY3QgYWxsIGJ1c2luZXNzZXMgZXF1YWxseS4gCkxhdXQgRGllc2VyIEJyb3NjaHJlIG11c3MgZGFzIE1pZXR2ZXJobHRuaXMgYmVyZWl0cyB2b3IgS2VubnRuaXMgZGVzIEVpbnN0ZWxsdW5nc2RhdHVtcyBiZXN0YW5kZW4gaGFiZW4uIElzdCBhdWNoIGdhbnogaW50ZXJlc3NhbnQgenUgd2lzc2VuIHdhcyBkaWUgbm9jaCBhbGxlcyBmaW5hbnppZWxsIGJlcm5laG1lbiB1bmQgZnJkZXJuLCBpY2ggaGFiIGRhbWFscyBudXIgZGFzIHdlbmlnc3RlIGluIEFuc3BydWNoIGdlbm9tbWVuLCB2b3IgYWxsZW0gbWFuZ2VscyBLZW5udG5pcy4KSXQgbm8gc2VjcmV0IHRoYXQgdGhpcyBzdWIgaXNuIG1ham9yaXR5IEtvcmVhbi4gClRncmFuZGlmbG9yYSAgMTUgcG9pbnRzICBzdWJtaXR0ZWQgMjAgZGF5cyBhZ28KQ2FsbCB0aGUgY29wcy4gCkl0IHJlYWxseSBpcyBhIGdyZWF0IHdheSB0byBwYXNzIHRpbWUgYW5kIGJhc2ljYWxseSBiZSBhd2FyZSBhbmQgcHJhY3RpY2UgdGhlIGJhc2ljcyBvZiB0aGUgZ2FtZSB3ZSBhbGwgbG92ZSBwb2tlciEuIApUZWtzIENlcmFtYWggQWdhbWEgSXNsYW0gVGVudGFuZyBNZW5naW5nYXQgS2VtYXRpYW4gLiAKSXQgbWVhc3VyZXMgYXBwcm94aW1hdGVseSAxNS4gMSwgRURJU09OIFNUQU5EQVJEIFBIT05PR1JBUEggREFUQSwgY29tcGlsZWQgYnkgTWFydGluIEthdXBlciwgMDcwMjE2IC4gTm8gc2VyaWFsIG51bWJlciBvbiBzdHJhaWdodCBlZGdlLCByZXByb2R1Y2VyIGNsaXBzIGhhdmUgdHdvIHNjcmV3cyBlYWNoLCBBdXRvbWF0aWMgLiAKVGhlIG1lcmdpbmcgb25lLCB5b3VyZSBjdXR0aW5nIHRoZSBsYW5lcyBpbiB0aGUgcm91bmRhYm91dCwgYmFkIGhhYml0LiBZb3UgZG9pbmcgaXQgZW5jb3VyYWdlcyBjYXJzIHRvIGRvIGl0IGFuZCBvbmUgZGF5LCBhIGNhciBpcyBnb2luZyB0byBkbyBpdCB3aGlsZSB5b3Ugd2FudCB0byBiZSBpbiB0aGUgaW5zaWRlIGxhbmUuIFlvdSBkaWRudCByZWFsbHkgbG9vayBlaXRoZXIsIGp1c3QgYXNzdW1lZCBvbGQgbWF0ZSBpbiB0aGUgbmlzc2FuIHdhc250IHRoZXJlLiAKVXNlZCB0byBlbmpveSBhIHNhbmR3aWNoIGNyYWZ0ZWQgYnkgYSBmcmllbmQ6IFRvYXN0ZWQgYnJlYWQsIHdpdGggZWdnIHNhbGFkIG9uIG9uZSBzbGljZSwgdG9wcGVkIHdpdGggYSBzbGljZSBvZiBoYW0sIHRoZW4gYSBodWdlIGRvbGxvcCBvZiBmcmVzaCBjaG9wcGVkIHNhbHNhIC8gcGljbyBkZSBnYWxsbyBvbiB0aGUgb3RoZXIsIGEgdGhpY2sgb25pb24gc2xpY2UsIGFuZCBzb21lIHNocmVkZGVkIGNhYmJhZ2Ugb3IgbGV0dHVjZS4gSXQgd2FzIGJhc2ljYWxseSBhIENPTEQgdmVyc2lvbiBvZiB0aGUgc2FtZSBmbGF2b3IgcHJvZmlsZSBvZiBtaWdhcyBvciBodWV2b3MgcmFuY2hlcm9zIHdpdGhvdXQgdGhlIHRvcnRpbGxhcy4gCkZyZWQgaGFzIG1hZGUgcXVpdGUgYSBmZXcgc3R1cGlkLCByaXNreSBkZWNpc2lvbnMgbGF0ZWx5IHRoYXQgY291bGQgYmxvdyBiYWNrIG9uIGhpbSwgbGlrZSBiZWF0aW5nIFNlcmVuYSwgcmFwaW5nIGhpcyA5IG1vbnRocyBwcmVnbmFudCBoYW5kbWFpZCwgY2Fycnlpbmcgb24gYW4gYWZmYWlyIHdpdGggaGlzIGhhbmRtYWlkLCBidWlsZGluZyBhIHByaWNleSBSZWQgQ2VudGVyIHRoYXQgaW1tZWRpYXRlbHkgZ290IGJsb3duIHRvIGJpdHMsIHRoZSBmYWlsZWQgZGlwbG9tYXRpYyBtaXNzaW9uIHRvIENhbmFkYSwgZmFpbGluZyB0byByZXBvcnQgdGhhdCBoaXMgaGFuZG1haWQgaGFkIGVzY2FwZWQgaGlzIGhvdXNlaG9sZCwgYW5kIGZpbmFsbHkgbHlpbmcgdG8gR2lsZWFkIG9mZmljaWFscyB3aGVuIGhlIHNwaW5zIHRoYXQgIkp1bmUgd2FzIGtpZG5hcHBlZCIgc3RvcnkuIAogNiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1JlZ2FyZGluZyBrYXJtYTogUGF5aW5nIHRheGVzIGluIGEgY291bnRyeSBlbmdhZ2VkIGluIGVuZGxlc3Mgd2FycyBzdXBwb3J0cyBraWxsaW5nIHRvby4gSXQgZ29pbmcgdG8gYmUgaGFyZCB0byB0b3RhbGx5IGFic29sdmUgeW91cnNlbGYgb2YgdGhhdC4gCklmIHlvdSBhcmUgbm90IGludGVuZGluZyB0byBkcm9wIGEgYnVuY2ggb2YgZ2lsIG9uIGxvZ29ncmFtcywgeW91IGFsc28gbmVlZCB0byB0cnkgYW5kIGRvIHRoZSBidW5ueSBmYXRlIGFzIG11Y2ggYXMgcG9zc2libGUuIEl0IGEgYml0IHRyaWNreSB0byBtb3ZlIGFyb3VuZCB0aGUgYXJlYSB0byBnZXQgdGhlIGNoZXN0cyB1bnRpbCB5b3UgaW50byB0aGUgNDBzLCB0aG91Z2guIFRoaXMgaXMgb25seSBuZWNlc3NhcnkgaWYgeW91IHdhbnQgdGhlIGVsZW1lbnRhbCBnZWFyOyB0aGUgMzAgbW5lbWVzIHRoYXQgeW91IG5lZWQgdG8gZ2V0IHRoZSB3ZWFwb24gdXBncmFkZWQgY2FuIGJlIHZlcnkgY2hlYXBseSBvYnRhaW5lZCBieSBwdXJjaGFzaW5nIGRpcnQgY2hlYXAgc3RhY2tzIG9mIHRoZSAyIG1vc3QgY29tbW9uIGxvZ29ncmFtcyBvbiB0aGUgbWFya2V0Ym9hcmQuClBva2VyIGdhbWVzIGhhdmUgYmVlbiBhcm91bmQgZm9yIGEgbG9uZyB0aW1lIGFuZCB1c2VkIHRvIGV2b2tlIGltYWdlcyBvZiBhIHNtYWxsIGdyb3VwIG9mIG1lbiBzaXR0aW5nIGFyb3VuZCBhIHNtYWxsIHRhYmxlIHN0dWNrIGluIHRoZSBiYWNrIG9mIGEgZ2FyYWdlIG9yIGJhc2VtZW50IHdpdGggdGhlIGluZXZpdGFibGUgdGFwZXN0cnkgb2YgZG9ncyBwbGF5aW5nIHBva2VyIG9uIHRoZSB3YWxsIGFib3ZlIHRoZW0uIFBva2VyIGhhcyBiZWNvbWUgZXZlbiBtb3JlIHBvcHVsYXIgcmVjZW50bHkgYW5kIGl0IGlzIG5vdyBub3QgdW5jb21tb24gZm9yIGEgbGFyZ2UgZ3JvdXAgdG8gZ2V0IHRvZ2V0aGVyIGZvciBhIGZ1bGwgbmlnaHQgb2YgdG91cm5hbWVudHMgYW5kIGNhc2ggZ2FtZXMgb25jZSBhIHdlZWsgb3IgbW9yZS4gT25lIG9mIHRoZSBiaWdnZXN0IGNoYW5nZXMgaGFzIGJlZW4gdGhlIGluY2x1c2lvbiBvZiB3b21lbiBpbnRvIHdoYXQgd2FzIG9uY2UgdGhvdWdodCBvZiBhcyBhIG1vc3RseSBtYWxlIGFjdGl2aXR5LiAKWW91IHdvdWxkIGJlIHN1cnByaXNlZCBob3cgbWFueSB0ZXJyaWJsZSBwbGF5ZXJzIGFyZSB3aWxsaW5nIHRvIGdhbWJsZSB3aXRoIHlvdSBvbiB0aGVzZSBmbGlnaHRzLiAKQW55IHBhaXIgYmVhdHMgYSBub24gcGFpci4gKGVkaXQpIEJlZm9yZSB0aGUgZmxvcCB0aGUgcGFpciBvZiB0aHJlZXMgd2luIGJlY2F1c2UgYSBwYWlyIGlzIGJldHRlciB0aGFuIGEgaGlnaCBjYXJkLiAKMm5kIENoaW5lc2UgZ3V5IHdobyBoYXMgMmsgbmV4dCB0byBtZSBzbmFwIGNhbGxzLiAKSGUgc2FpZCBjbHVicyB3ZXJlIGEgdml0YWwgcGFydCBvZiB0aGUgcmVnaW9uJ3MgZWNvbm9teSwgZW1wbG95aW5nIHRob3VzYW5kcyBhbmQgY29udHJpYnV0aW5nIG1pbGxpb25zIGluIHRheGVzLiAKSSBkaWRuJ3QgcmVhbGlzZSB0aGF0IHRoZXJlIHdhcyBzb21ldGhpbmcgdHJ1bHkgZnVja2VkIHVwIGFib3V0IG1lIHVudGlsIHRoYXQgcG9pbnQuIEknbSBnZXR0aW5nIGJldHRlciwgYW5kIGhhdmUgbm90IGJyb3VnaHQgYSBrbmlmZSB0byBhbnlvbmUgd2l0aCB0aGUgaW50ZW50aW9uIG9mIGh1cnRpbmcgYW55b25lIHNpbmNlLCBub3IgZG8gSSBldmVyIHBsYW4gdG8uIFN1aWNpZGFsIGlkZWF0aW9uIGlzIHN0aWxsIHRoZXJlIGJ1dCBJJ20gZGV0ZXJtaW5lZCB0byBnZXQgYmV0dGVyLCBJJ20gc2ljayBvZiBsaXZpbmcgbGlrZSB0aGlzLi4gCkdyb3VwIHRhcCBkYW5jZSBsZXNzb25zLiBldmVyeSBGcmkuIEZyZWUuIENhbiBDYW4gV29uZGVybGFuZCwgNzU1IFByaW9yIEF2ZS4gTi4sIFN0ZS4gNCwgU3QuIFBhdWw7IDY1MSA5MjUgMjI2MS4KQWx0aG91Z2ggdGhlcmUgaXMgbm8ga25vd24gZm91bnRhaW4gb2YgeW91dGggdGhlcmUgYXJlIGEgZmV3IHNpbXBsZSBzdGVwcyB0aGF0IGNhbiBiZSB0YWtlbiBieSBhbnlvbmUgdG8gaGVscCB0aGVtIG1haW50YWluIGJldHRlciBwaHlzaWNhbCBoZWFsdGggYW5kIGFwcHJlY2lhdGUgdGhlIGZhY3QgdGhhdCBnZXR0aW5nIG9sZGVyIGlzIHRydWx5IGdldHRpbmcgYmV0dGVyLgpUaGUgbXVzaWMgdmlkZW8gZm9yIGxlYWQgc2luZ2xlICJEYW5jaW5nIiBldmVuIGZpbmRzIHRoZSBBdXNzaWUgc29uZ3N0cmVzcyBkb2luZyBoZXIgYmVzdCBsaW5lIGRhbmNpbmcgYm9vdCBzY29vdGluZyBib29naWUuLiAKQSBnb29kIGV4YW1wbGUgb2YgdGhpcyBpcyBGbmF0aWMgd2hvIHVzZWQgdG8gdXRpbGlzZSB0aGVpciBwbGF5cyBhcm91bmQgdGhlIGJhcm9uIGFsd2F5cyBjYXRjaGluZyB0aGUgb3Bwb25lbnQgb2ZmIGd1YXJkLiAKRm9yIHRoZSBmaXJzdCA3IHllYXJzIG9mIG15IGNoaWxkIGxpZmUsIEkgd2FzIGhpcyBvbmx5IHBhcmVudC4gSGlzIGZhdGhlciB3YXMgbmV2ZXIgaW4gdGhlIHBpY3R1cmUgYXQgYWxsLiBUaGlzIG1hZGUgZGF0aW5nIGEgY2hhbGxlbmdlLiAKQUxBQSdEQSBPQ1VLTEFSQSBaRUwgRUxFTkNFIERFVkFNIEVEWU9SQWxpYWEgQmVsZWRpeWVzaSduaW4ga2x0ciBzYW5hdCBldGtpbmxpa2xlcmkga2Fwc2FtbmRhIG9jdWtsYXJhIHplbCBvbGFyYWsgaGF6cmxhZCAnb2N1a2xhciBpbiBUaXlhdHJvIFBhemFyJ25kYSAiT3JtYW5uIEdjIiBpc2ltbGkgdGl5YXRybyBveXVudSBnc3RlcmltZSBzdW51bGR1LiBNYXZpeWxlIHllaWxpbiBidWx1dHV1IEF2YyBSYW1hZGFuIG9jdWsgT3l1biB2ZSBSZWtyZWFzeW9uIEFsYW4nbmEga3VydWxhbiBzdG1hbCBnZWljaSBnc3RlcmkgbWVya2V6aW5kZSBzYWhuZWxlbmVuIG95dW51IGl6bGVtZWsgaXN0ZXllbiBtaW5payB0aXlhdHJvc2V2ZXJsZXIgYWlsZWxlcml5bGUgYmlybGlrdGUgZ3N0ZXJpIG1lcmtlemluZSBha24gZXR0aS4gRWxlbmNlbGkgYW5sYXIgc3VuYW4gb3l1biBheW4gemFtYW5kYSBkb2EgdmUgYWEgc2V2Z2lzaW5pIGRlIG9jdWtsYXJhIGFsYWQuIApZb3Ugc2hvdWxkIGdldCBmZWVsaW5ncyB0aGF0IHdhbnQgdG8gbWFrZSB0aGVtIGxhdWdoIHdpdGggYSBqb2tlLCBidXQgd2hhdCBJIGp1c3QgYWJvdXQgdG8gc2F5IHdvbnQgZG8gaXQgb3IgSSBkb24gcmVhbGx5IHdhbnQgdG8gaml0dGVyIGFyb3VuZCwgc3RvcCBpbnRlbGxlY3R1YWwgcGFydHMgY29tZSBpbiBmcm9tIGhlbHBpbmcgeW91IHRvIGRlY2lkZSB3aGF0IHRvIHB1dCBpbnRvIGF3YXJlbmVzcy4gCkNvbXBsYWluZWQgdGhhdCBDYW5hZGlhbiBlbnRyZXByZW5ldXJzIHRlbmQgdG8gc2VsbCB0aGVpciBidXNpbmVzcyB0b28gc29vbiwgYmVmb3JlIHRoZXkgcmVhY2ggdGhlaXIgZnVsbCBwb3RlbnRpYWwuIEdldCBzZWR1Y2VkIGJ5IHRoZSBxdWljayBkb2xsYXJzLCBoZSB3YXJuZWQuIENhbiBob2xkIHRoZWlyIG93biB3aXRoIGFueSBlbnRyZXByZW5ldXJzIGluIHRoZSB3b3JsZC4gCkhvcnNlc2hvZSBDYXNpbm8gaXMgcnVuIGxvY2FsbHkgYnkgUm9jayBHYW1pbmcsIExMQyBhbmQgb3duZWQgY29ycG9yYXRlbHkgYnkgQ2Flc2FycyBFbnRlcnRhaW5tZW50LiBIYXJrZW5yaWRlciBzYWlkIGhlJ3Mgbm90IHN1cmUgd2hvIGlzIHRvIGJsYW1lIGZvciBub3QgY29tcGx5aW5nIHdpdGggdGhlIHN0YXRlJ3MgY2FzaW5vIGxhd3MgdGhhdCBsZWQgdG8gdGhlIGNhbmNlbGxhdGlvbiwgYnV0IHNhaWQgYm90aCBvd25lcnNoaXAgZ3JvdXBzIGtuZXcgd2hhdCB0aGV5IGRpZCB3aXRoIHRoZSBzdXJ2ZWlsbGFuY2UgY2FtZXJhcyBpbiAyMDEzIHdhc24ndCBnb2luZyB0byB3b3JrIGluIDIwMTUuLiAKMTIwMCBpcyBzdGlsbCBzdGVlcCBmb3Igc29tZW9uZSBzaGFyaW5nIGFuIGFwYXJ0bWVudCB1bmxlc3MgeW91ciBpbmNvbWUgaXMgMTUwaysuLiAKQ2hlYXRpbmcgbWV0aG9kOyBjb29wZXJhdGlvbiwgYXMgaW4gdGVzdDsgY2xldmVybmVzczsgcXVpY2sgd2F5IG9mIHNvbHZpbmcgc29tZXRoaW5ndi4gClJlYXNvbmFibHksIEkgZXhwZWN0IG1vcmUgcGVvcGxlIChwcm9iYWJseSByb3VnaGx5IDMgNHggbW9yZSkgdG8gZ28gZm9yIHRoYXQgcHJpY2UgdGhhbiAkMTguIApFeHB1bHMgZXQgaW50ZXJyb2cgaWwgbidhdXJhaXQgY2VzcyBkZSBycG9uZHJlIGxhIG1tZSBjaG9zZSA6ICJBIHF1b2kgc2VydmVudCBkb25jIGNlcyBnbGlzZXMsIHNpIGVsbGVzIG5lIHNvbnQgcGFzIGxlcyB0b21iZXMgZXQgbGVzIG1vbnVtZW50cyBkZSBEaWV1ID8iLiAKVGhlIHBlcnNvbmFsaXRpZXMgb2Yga2V5IHBsYXllcnMgbWF5IHBhcnRpYWxseSBleHBsYWluIHdoeSBncmlkbG9jayBvY2N1cnMuIEhvd2V2ZXIsIHNvbWUgaGlnaGx5IHN1Y2Nlc3NmdWwgcG9saXRpY2FsIGxlYWRlcnMgaW4gdGhlIHBhc3Qgd2VyZSBoYXJkbHkgZ3JlYXQgbmVnb3RpYXRvcnMuIE1vcmVvdmVyLCBCYXJhY2sgT2JhbWEgaGFzIGV4cXVpc2l0ZSBvcmF0b3JpY2FsIGFiaWxpdHkgYW5kIEpvaG4gQm9laG5lciBoYXMgZGVtb25zdHJhdGVkIHRoZSBhYmlsaXR5IHRvIG9idGFpbiBzdWZmaWNpZW50IHN1cHBvcnQgZnJvbSBoaXMgdHJvb3BzIGZvciBjaG9pY2VzIHRoZXkgZm91bmQgaGlnaGx5IGRpc3Rhc3RlZnVsLiBJdCBpcyBub3QgcGVyc3Vhc2l2ZSB0byByZWR1Y2UgV2FzaGluZ3RvbidzIGN1cnJlbnQgZHlzZnVuY3Rpb24gdG8gdGhlIGZhaWxpbmdzIG9mIHBvbGl0aWNhbCBsZWFkZXJzLgpUaGUgYmlnIHByb2JsZW0gdGhlcmUgaXMgdGhhdCB2YXBlIHNob3BzIGFyZSBnZW5lcmFsbHkgbm90IHRoZSBvbmVzIHNlbGxpbmcgdW5kZXJhZ2VkIHVzZXJzIHRoZSBwcm9kdWN0cy4gWW91IGNhbiBmaW5kIEp1dWxzIGluIGdhcyBzdGF0aW9ucywgNyAxMSdzLCBhbmQgbWFueSBjaGFpbnMgYWNyb3NzIHRoZSBjb3VudHJ5LiAKSW4gYSBib2lzdGVyb3VzIGZhbWlseSBvZiBvdXRzaXplZCBvcHBvcnR1bmlzdGljIGdyaWZ0ZXJzLCBJdmFua2EgaGFzIHN1Y2Nlc3NmdWxseSBkaXN0aW5ndWlzaGVkIGhlcnNlbGYgYXMgInRoZSBuaWNlIG9uZS4iIFNvbWUgYXR0cmlidXRlIHRoaXMgbHVja3kgYnJhbmRpbmcgYXMgdGhlIHNocmV3ZCBkZWNpc2lvbiB0byBvYmxpdGVyYXRlIGhlciBUcnVtcCBETkEgd2l0aCBhIHRyYW5zYWN0aW9uYWwgY29udmVyc2lvbiB0byBzZWN1bGFyIEp1ZGFpc20sIGNvdXBsZWQgd2l0aCBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgZG9sbGFycyBvZiBwbGFzdGljIHN1cmdlcnkuIApTaGF6ZWVuIHUKSSBhZ3JlZSwgYnV0IEknbSB0cnlpbmcgdG8gc3RyaXAgaXQgZG93biBhcyBtdWNoIGFzIHBvc3NpYmxlIGFuZCBwcmV0ZW5kIEknbSBwbGF5aW5nIGFnYWluc3QgYSBjb21wdXRlciBhbmQgaXQncyBteSBmaXJzdCBoYW5kIHNvIEkgaGF2ZSBubyBpZGVhLgpOVGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBzdG9ja3MgYW5kIGhvdXNlcyBpcyBlbm9ybW91cy4gVGhpbmsgYWJvdXQgdGhpczogTm8gb25lIGlzIGxpa2VseSB0byBjb250ZXN0IHlvdXIgb3duZXJzaGlwIG9mIDUwMCBzaGFyZXMgb2YgSUJNLiAKWW91IHNvdW5kIHZlcnkgd2VsbCBtaW5kZWQuIEkgbm8gdGhlcmFwaXN0LCBidXQgSSBzYXkgeW91IG9uIHRoZSByaWdodCB0cmFjayBmb3Igc3VyZS4gSSB3YXMgcHJldHR5IGhlYXZ5IG9uIG9waWF0ZXMgZnJvbSAxNSAxNiBhbmQgSSBtdXN0IHNheSB0aGF0IHRoYXQgcGxheWVkIGEgaHVnZSBwYXJ0IGluIG15IHNlbGYgY29uZmlkZW5jZSBkZWZsYXRpbmcgbGlrZSBpdCBkaWQuIEkgcGxheWVkIFdvVzsgbG9nZ2VkIG9uIHRvIHJhaWQgYW5kIGdyaW5kLCBjcnVzaGVkIHdoYXRldmVyIGFuZCBub2RkZWQgdG8gc2xlZXAuIFRoaXMgd2FzIGEgZGVzdHJ1Y3RpdmUgY3ljbGUsIGJ1dCBJIHdhcyBmb3J0dW5hdGUgbm90IHRvIGVuY291bnRlciBkZXBlcnNvbmFsaXphdGlvbiB1bnRpbCBsYXRlciBvbiAocG9zc2libHkgYmVjYXVzZSB0aGlzIHN0aW50IG9ubHkgbGFzdGVkIHRocmVlIG9yIGZvdXIgbW9udGhzLikgR2V0dGluZyBvdXQgbW9yZSBhbmQgaW52b2x2ZWQgaW4gbmljaGUgY29tbXVuaXRpZXMgaGVscGVkLiBGb3IgaW5zdGFuY2UsIEkgc3RhcnRlZCBwbGF5aW5nIGEgbG90IG9mIGJvYXJkIGdhbWVzIHdoaWNoLCBpbiB0dXJuLCBsZWQgdG8gbWUgcGFpbnRpbmcgbWluaWF0dXJlIGZpZ3VyZXMgZm9yIHVzZSBpbiBib2FyZCBnYW1lcyBhbmQgZ2FtZXMgbGlrZSBXYXJoYW1tZXIuIERvIHlvdSBoYXZlLCBvciBoYXZlIHlvdSBjb25zaWRlcmVkLCBhbnkgb3V0bGV0cz8gSSBlbmpveSBlbnRocmFsbGluZyBteXNlbGYgaW4gc21hbGwgb3V0bGV0cywgYW5kIGZpbmRpbmcgb25lcyB0aGF0IGFsc28gaGF2ZSBncmVhdCBjb21tdW5pdGllcyB0byByZWFjaCBvdXQgdG8gb3RoZXJzIGlzIGEgaHVnZSBiZW5lZml0IGFsbCBhcm91bmQhIEkgbWFkZSBzbyBtYW55IGNsb3NlIGZyaWVuZHMgZHVlIHRvIHRoYXQgb25lIHNpbXBsZSBsaXR0bGUgaG9iYnksIGFuZCBJIHRoaW5rIHlvdSBiZSBoYXJkIHByZXNzZWQgdG8gTk9UIGZpbmQgb25lIHRoYXQgaW50ZXJlc3RzIHlvdS4KQnV0IHdoaWxlIGdvb2Qgc3VycHJpc2VzIGRlbGlnaHQsIGJhZCBzdXJwcmlzZXMgY2F1c2UgYW54aWV0eS4gCkxvdyBlZmZvcnQgcG9zdHMgd2lsbCBiZSBkZWxldGVkLiBSZXBlYXQgb2ZmZW5kZXJzIHdpbGwgYmUgYmFubmVkLiBJZiB5b3UgaGF2ZSBhIHNpbXBsZSBxdWVzdGlvbiwgeW91ciBmaXJzdCBzdG9wIHNob3VsZCBiZSBHb29nbGUsIG5vdCBoZXJlLgpUaGVyYXBpc3RzIGFyZSBhdmFpbGFibGUgZm9yIG9uIHNpdGUgY2hhaXIgbWFzc2FnZSB0byB0aGUgY29tcGxldGUgUGVubiBHcm91cCBhdCB2ZXJ5IGNoZWFwIGNoYXJnZXMuLiAKVGhlIEVhc3QgaGFzIGl0IG93biBwcm9ibGVtcywgYnV0IG9uZSB0aGluZyB0aGF0IHJlYWxseSBzZXRzIHRoZSBXZXN0IGFwYXJ0IGlzIGluIHRoZSBXZXN0IHRoZSB3b3VuZCBvZiBzaGFtZSBydW5zIGV4dHJlbWVseSBkZWVwLiBUaGUgaXJvbnkgaXMgdGhlIFVTQSB3YXMgZm91bmRlZCB1cG9uIGJvdGggYSBkZXNpcmUgZm9yIGZyZWVkb20gZm9yIGV2ZXJ5b25lIGFuZCBkZWVwIHNlYXRlZCBzaGFtZS4gVGhlIFB1cml0YW5zIGFuZCBDYWx2YW5pc3RzIHRoYXQgZm91bmRlZCBBbWVyaWNhIHdlcmUgcGVvcGxlLCB3ZWxsIGludGVudGlvbmVkIGJ1dCB5ZXQgaWdub3JhbnQsIHdobyBzcHJlYWQgdGhlIHBhaW4gb2Ygc2hhbWUuIApJbiBjb250cmFzdCwgaW4gc2VsZiBwZXJzdWFzaW9uIHRoZW9yeSwgdGhlIGRlZ3JlZSBvZiBwZXJzdWFzaW9uIGlzIGxpbmtlZCB0byB0aGUgd2F5IHJlY2VpdmVycyBiZWNvbWUgaW52b2x2ZWQgd2l0aCBhbmQgcmVhY3QgdG8gdGhlIG1lc3NhZ2UuIFRob3NlIGZvbGxvd2luZyB0aGlzIHNjaG9vbCBvZiB0aG91Z2h0IGNvbnRlbmQgdGhhdCByZWNlaXZlcnMgYmVjb21lIGludm9sdmVkIHdpdGggYW4gYWQgYW5kIGVsYWJvcmF0ZSBvbiB0aGUgbWVzc2FnZS4gVGhleSB0YWtlIGFuIGFjdGl2ZSByb2xlIGluIGVzdGFibGlzaGluZyB0aGUgYWR2ZXJ0aXNlbWVudCdzIG1lYW5pbmcgYW5kIHBlcnN1YWRpbmcgdGhlbXNlbHZlcyB0byBib2xzdGVyLCBhY2NlcHQsIGRpc3RvcnQsIGRlcm9nYXRlIG9yIHJlamVjdCB0aGUgYWR2aWNlIGNvbnRhaW5lZCBpbiB0aGUgbWVzc2FnZS4KV2hhdCBpcyBtb3JlIHdvcnJpc29tZSBpcyB0aGF0IHRoaXMgZXhwb3N1cmUgaGlnaGxpZ2h0cyB0aGUgdW5jaGFuZ2luZyB1bmRlcmN1cnJlbnRzIG9mIFBha2lzdGFuJ3MgaW5zdGl0dXRpb25hbCBkeW5hbWljcy4gVGVuIHllYXJzIGFmdGVyIEdlbiBQZXJ2ZXogTXVzaGFycmFmIGVuZ2luZWVyZWQgYSBtaWxpdGFyeSBvcGVyYXRpb24gYWdhaW5zdCBhbm90aGVyIGxlZ2l0aW1hdGUgZGVtb2NyYXRpYyBnb3Zlcm5tZW50IGluIE9jdG9iZXIgMTk5OSwgYW5kIG92ZXIgYSB5ZWFyIHNpbmNlIHRoZSBzYW1lIEdlbiBNdXNoYXJyYWYgaGFkIHRvIHN0ZXAgZG93biBmcm9tIHRoZSBvZmZpY2UsIG5vdGhpbmcgaGFzIGNoYW5nZWQuIApBZnRlciBzZXR0aW5nIHRoZSBBZ2VuIFBva2VyLCB5b3UgbmVlZCB0byBiZSB0cnV0aGZ1bCB3aXRoIHlvdXJzZWxmIHJlZ2FyZGluZyB3aGV0aGVyIHRoZXNlIGFyZSByZWFsbHkgeW91ciBvd24gY29tbWl0bWVudHMgYW5kIGJlbGllZnMuLiAKSSBrbm93IHRoYXQgdGhlcmUgYXJlIHNvbWUgaG9sZXMgaW4gdGhpcyB0aGVvcnkgYnV0IHdpdGggdGhlIHJlY2VudCBtaXNzaW5nIHBlcnNvbiBjYXNlIG9mIFNhdmFubmFoIFNwdXJsb2NrIGluIExleGluZ3Rvbiwgd2hvbSBhbHNvIGZpdHMgdGhlIHBldGl0IGJsb25kZSBkZXNjcmlwdGlvbiwgaXQgcmVhbGx5IG1ha2VzIG1lIHdvbmRlci4KSGVyIGFkdmljZSwgd2hpY2ggd29ya2VkIHN1cGVyIHdlbGwsIHdhcyB0byBuZXZlciBzYXkgdGhlIHdvcmQgZm9yIGhpbSBhbmQgdG8gbGV0IGhpbSB3b3JrIGl0IG91dCBvbiBoaXMgb3duLiAKQW1heWEgaXMgdGhlIENhbmFkaWFuIG93bmVyIGFuZCBvcGVyYXRvciBvZiBQb2tlclN0YXJzIGFuZCBGdWxsIFRpbHQgUG9rZXIsIHRoZSB3b3JsZCBsYXJnZXN0IG9ubGluZSBwb2tlciBidXNpbmVzcyBoYXMgbWFkZSBhIGJpZCB0byB0YWtlIG92ZXIgcml2YWwgQndpbiAoTFNFOkJQVFkpIGluIGEgam9pbnQgZWZmb3J0IHdpdGggR1ZDIEhvbGRpbmdzIChBSU06R1ZDKSwgYW5vdGhlciBvbmxpbmUgZ2FtaW5nIGNvbXBhbnksIG9mZmVyaW5nIEMkMS43IGJpbGxpb24uCkJ1dCBJIGNvbG9yIGNvZGUgYSBsb3QuIApDZSBzb3V0aWVuIGZpbmFuY2llciBkZSBLYXJsIExhZ2VyZmVsZCBwb3VyIGxlcXVlbCBlbGxlIGx1aSBzZXJhIHRvdWpvdXJzIHJlY29ubmFpc3NhbnRlCkNvbWVkaWFuIFNldGggTWV5ZXJzIGhhZCBldmVuIHF1aXBwZWQgdGhhdCBPc2FtYSBiaW4gTGFkZW4gd2FzIGhpZGluZyBpbiBwbGFpbiBzaWdodCBieSBob3N0aW5nIGFuIG9ic2N1cmUgQyBTUEFOIHNob3cgdGhhdCBubyBvbmUgZXZlciB3YXRjaGVkLgpIZSBkaWQgaGF2ZSB3ZXJlIGRlc2lnbnMgaGUgaGFkIGRldmVsb3BlZCBmb3IgaG9tZSB0b29scywgYnV0IGhhZCBzaGVsdmVkIHNpeCBtb250aHMgZWFybGllciBiZWNhdXNlIGhpcyBzdGFmZiB3YXMgd29ya2luZyBmdWxsIG91dC4gCk5vdCBqdXN0IHdoYXQgeW91IGVhdCBhbmQgZHJpbmssIGl0IHdoYXQgeW91IHdlYXIuIApUaGUgTGlmZSBhbmQgV29ya3Mgb2YgdGhlIENlbGVicmF0ZWQgVGhpcnRlZW50aCBDZW50dXJ5IEluZGlhbiBNeXN0aWMgUG9ldCAuIEEgUHJhY3RpY2FsIEd1aWRlIHRvIE1pbmRmdWxuZXNzIG9mIEJyZWF0aGluZyBhbmQgVHJhbnF1aWwgV2lzZG9tIE1lZGl0YXRpb24uIApvdXQgb2YgSG90YmxhY2sgRGVzaWF0byBtb2RlIGFnYWluCkJhbmdsYWRlc2hpIFByZXNpZGVudCBhbmQgQXJteSBDaGllZiwgSHVzc2FpbiBNdWhhbW1hZCBFcnNoYWQsIHdhcyBlbGVjdGVkIGZyb20gcHJpc29uIGluIHRoZSAxOTkxIGFuZCAxOTk2IGVsZWN0aW9ucy4gSGUgd2FzIGJlaGluZCBiYXJzIG9uIHNldmVyYWwgY291bnRzIG9mIGNvcnJ1cHRpb24sIGJ1dCBoYWQgcmV0dXJuZWQgdmljdG9yaW91cyBmcm9tIGZpdmUgZGlmZmVyZW50IGNvbnN0aXR1ZW5jaWVzIGFjcm9zcyBCYW5nbGFkZXNoLi4gCkFuZCB3aGVuIEkgd2FzIGx1Y2t5IGVub3VnaCB0byBnZXQgdGhlIHN1Y2Nlc3NmdWwgaW1tb3J0YWxpdHkgZXZlbnQgb24gbXkgc3RhcnRpbmcgY2hhcmFjdGVyIGluIHRoZSByZWNlbnQgSmlucXVhbiBwbGF5dGhyb3VnaCwgaW4gSXJvbm1hbiBubyBsZXNzLCBJIGtuZXcgdGhhdCB0aGlzIHdhcyBtZWFudCB0byBiZSBpdC4gCk15IHdpZmUgdG9sZCBtZSBJIGNhbnQgc2hhdmUgbXkgYmVhcmQsIHNvIEkgcGFpbnRlZCBpdCBwdXJwbGUgdG8gbWF0Y2ggdGhlIHdpZy4gCldlIHVzZSBzdGF0ZSBvZiB0aGUgYXJ0IEZBQ1MgQWN0aW9uIFVuaXQgZGV0ZWN0b3JzIHRvIGF1dG9tYXRpY2FsbHkgYW5ub3RhdGUgdGhlIHBsYXllcnMgZmFjaWFsIGV4cHJlc3Npb25zLCB3aGljaCBoYXZlIGJlZW4gcmVjb3JkZWQgb24gdmlkZW8uIApUaGUgY29tbXVuaXR5IGV4Y2l0ZW1lbnQgZm9yIE9uZSBXZWVrIEtDLCBDb29tZXMgc2FpZCwgaXMgcGFscGFibGUuIHRoZSBjb252ZXJzYXRpb25zIEkgaGFkIHdpdGggcGVvcGxlIGEgbG90IG9mIHRoZW0gYXJlIHJlYWxseSBleGNpdGVkIGFib3V0IGdldHRpbmcgb3V0IHRoaXMgd2VlaywgaGUgc2FpZC4gcGVvcGxlIGV2ZW4gc2FpZCwgSSBtaWdodCB0YWtlIG9mZiB3b3JrIGZvciBhIGZldyBkYXlzIGFuZCBtYWtlIHN1cmUgSSBjYW4gZ2V0IHRvIGEgbG90IG9mIHRoZXNlIGV2ZW50cy4gc2FpZCBPbmUgV2VlayBLQyBvcmdhbml6ZXJzIGRyZXcgaW5zcGlyYXRpb24gZnJvbSB0aGUgbGlrZXMgb2YgQm91bGRlciBTdGFydHVwIFdlZWsgYW5kIENoaWNhZ28gSWRlYXMgV2VlaywgYnV0IHRoZSBldmVudCB3aWxsIGZlYXR1cmUgYSBkaXN0aW5jdCBLYW5zYXMgQ2l0eSBmbGF2b3IuIEFuZCBDb29tZXMgaG9wZXMgaXQgY2FuIGNoYW5nZSBzb21lIHBlcnNwZWN0aXZlcyBvbiB0aGUgYWJpbGl0eSB0byBidWlsZCBhIGJ1c2luZXNzIGluIHRoZSBtZXRybyBhcmVhLgpUaGlzIGlzIHdoZXJlIHRoZSB0b3J0dXJlIGRyZWFtIGNhbWUgZnJvbS4gSWYgSSBjb3VsZCBqdXN0IGdldCBoaW0gdG8gYWRtaXQgdGhhdCBoZSBoYXMgYmVlbiBseWluZywgdGhhdCBoZSBoYXMgcHV0IHRoaXMgY291bnRyeSBhbmQgdGhlIHdvcmxkIGF0IHJpc2sgd2l0aCBoaXMgc29jaW9wYXRoaWMgbmVlZCBmb3IgcG93ZXIgYW5kIG1vbmV5LCB0aGVuIGhlIGNvdWxkIG5ldmVyIGJlIFByZXNpZGVudCBiZWNhdXNlIGhlIHdvdWxkIGJlIHJldmVhbGVkIHRvIGJlIHRoZSBldmlsIGRvZXIgaGUgdHJ1bHkgaXMuIApOb3Qgc3VyZSBob3cgYXBwYXJlbnQgaXQgaXMgbGlzdGVuaW5nIHRvIGl0LCBidXQgbWFraW5nIHRoZSByZWNvcmQgZmVsdCBkaWZmZXJlbnQgZnJvbSB0aGUgcHJldmlvdXMgb25lcy4gV2UgcmVjb3JkZWQgaXQgbXVjaCBtb3JlIGNhc3VhbGx5LiBJdCB3YXMgcmVhbGx5IGEgbG9vc2UgYXRtb3NwaGVyZS4gClBsYXllcnMsIGZ1bGwgdGltZSBvbmxpbmUgcHJvIElzYWFjIEhheHRvbiBzdGFydGVkIHRoaW5raW5nIGFib3V0IG1vdmluZyBvdmVyc2Vhcy4gCkkgd2lsbCBzYXkgdGhhdCBJIGp1c3QgaGF2ZSB0YW5nbGUgcHJvbmUgaGFpci4gTm90IGEgbG90IEkgY2FuIGRvIGFib3V0IGl0LiAKTGEgY3VyaW9zaXQgZXQgbCdvdXZlcnR1cmUgOiBZYW5uaWNrIEFsbGVubyBhIGF2b3Ugc2UgbGFzc2VyIGFzc2V6IHZpdGUgZXQgYydlc3QgY2UgcXVpIGxlIHBvdXNzZSAgc2UgcmVub3V2ZWxlciBldCBsYW5jZXIgZGUgbm91dmVhdXggcHJvamV0cy4gCk9uZSB0aGluZyBJIHJhcmVseSBoZWFyIHRhbGtlZCBhYm91dCBpcyBhIHRocmVlIHN0YXRlIHNvbHV0aW9uICAgR2F6YSwgSXNyYWVsIGFuZCB0aGUgV2VzdCBCYW5rLiBUaGUgcG9saXRpY2FsIGNsaW1hdGUgYmV0d2VlbiB0aGUgdGVycml0b3JpZXMgaXMgcHJldHR5IGZhciBvZmYsIGFuZCBGYXRhaCBhbmQgSGFtYXMgZm91Z2h0IGEgYmxvb2R5IHdhciBpbiAyMDA2LiBJZiBhIG9uZSBzdGF0ZSBzb2x1dGlvbiBpcyBpbXBvc3NpYmxlLCB3aGljaCBJIHRoaW5rIGl0IHByb2JhYmx5IGlzLCBhIHRocmVlIHN0YXRlIHNvbHV0aW9uIG1heSBhY3R1YWxseSBiZSBtb3JlIHByYWdtYXRpYyB0aGFuIGEgdHdvIHN0YXRlLCB0aG91Z2ggaXQgZmFpbHMgdG8gcHJvdmlkZSBhIHVuaWZpZWQgUGFsZXN0aW5pYW4gc3RhdGUsIHdoaWNoIG1heSBiZSBhIHNpbWlsYXIgbm9uIHN0YXJ0ZXIuCkV4cGVjdCB0b25zIG9mIG1pbmlnYW1lcyBhbmQgc2lkZXF1ZXN0cy4gSSBiYXJlbHkgcGxheWVkIGFsbCBvZiB0aGVtLCBidXQgcGxheWVycyBjYW4gZW5nYWdlIGluIGRyaW5raW5nIGdhbWVzIG9yIHJlc2N1ZSByYW5kb20gc3RyYW5nZXJzIHRoYXQgdGhlIGN0T1MgZmluZHMuIApJbiBUZXhhcyB0aGUgbW9ydGdhZ2UgYmVjb21lcyB0b290aGxlc3Mgd2hlbiBhIHByb3BlcnR5IGlzIHNvbGQgZm9yIHRheGVzLiBXaGF0IEkgbWVhbiBieSB0b290aGxlc3MsIGlzIHRoYXQgdGhlIG1vcnRnYWdlcmNhbiBubyBsb25nZXIgZm9yZWNsb3NlIGFuZCB0YWtlIHRoZSBwcm9wZXJ0eS4gCkkgZG8gdW5kZXJzdGFuZCBhbnRpc2VtaXRpc20sIHdoYXQgeW91IGFyZSBub3QgZ2V0dGluZyBpcyB3aHkgaXRzIG9rIHRvIGNhbGwgb3V0IHdoZW4gaXRzIHVzZWQgaW1wcm9wZXJseSBhbmQgZm9yIHNlbGZpc2ggcmVhc29ucy4gCkZsb3JlbmNlIEthdGhlcmluZSBSb21lc2J1cmcgT2JpdHVhcnkKRGFucyBsIG8gdm91cyBhdXJpZXogYXV0b3JpcyB1bmUgcGVyc29ubmUgZCBtaW5ldXIgbmF2aWd1ZXIgc3VyIGxlIFNpdGUgd2ViIG91IHV0aWxpc2VyIGxlcyBGb25jdGlvbm5hbGl0IHZvdXMgcmVjb25uYWlzc2V6IHF1ZSB2b3VzIHJlc3BvbnNhYmxlIDogaSkgZGUgc29uIGNvbXBvcnRlbWVudCBlbiBsaWduZTsgaWkpIGRlIGNvbnRyIHNvbiBhY2MgZXQgc29uIHV0aWxpc2F0aW9uIGR1IFNpdGUgd2ViIGV0IG91IGRlcyBGb25jdGlvbm5hbGl0IGV0IGlpaSkgZGVzIGNvbnMgZGUgdG91dGUgbWF1dmFpc2UgdXRpbGlzYXRpb24gZHUgU2l0ZSB3ZWIgZXQgb3UgZGVzIEZvbmN0aW9ubmFsaXQgZGUgc2EgcGFydC4gVm91cyByZWNvbm5haXNzZXogcXVlIGNlcnRhaW5lcyBzZWN0aW9ucyBkdSBTaXRlIHdlYiBldCBkZXMgRm9uY3Rpb25uYWxpdCBwZXV2ZW50IGNvbnRlbmlyIGR1IENvbnRlbnUgaW5hcHByb3ByaSBwb3VyIHVuZSBwZXJzb25uZSBkIG1pbmV1ci4KIlRoaXMgd2FzIG5vdCBhICdoZSBzYWlkLCBzaGUgc2FpZCcgc2l0dWF0aW9uLiBUaGlzIHdhcyA1MCBzb21ldGhpbmcgJ3NoZXMnIGFuZCBvbmUgJ2hlJyAgIGFuZCB0aGUgJ3NoZXMnIGFsbCBiYXNpY2FsbHkgdG9sZCB0aGUgc2FtZSBzdG9yeSwnJyBzYWlkIHJldGlyZWQgUGFsbSBCZWFjaCBQb2xpY2UgQ2hpZWYgTWljaGFlbCBSZWl0ZXIsIHdobyBzdXBlcnZpc2VkIHRoZSBwb2xpY2UgcHJvYmUuClRoZSBhcmd1bWVudCBpcyB0aGF0IHRoZXJlIGFyZSBzeXN0ZW1pYyBpc3N1ZXMgdGhhdCBtYWtlIGl0IHNvIG9ubHkgY2VydGFpbiBncm91cHMgaGF2ZSB0byBkbyB0aGF0LiBNaWRkbGUgdG8gdXBwZXIgY2xhc3Mgd2hpdGUgcGVvcGxlIGRvbiBoYXZlIHRvIHdvcmsgaGFyZCBvciBiZSBwYXJ0aWN1bGFybHkgc21hcnQgdG8gc3RheSBvdXQgb2YgcG92ZXJ0eSAoSSBhbSBvbmUsIGFsdGhvdWdoIEkgbGlrZSB0byB0ZWxsIG15c2VsZiBJIGFtIHNtYXJ0IGFuZCBoYXJkIHdvcmtpbmcpLiAKU3RpbGwsIGFmdGVyIGFsbCB0aGVzZSB5ZWFycywgYWZ0ZXIgc2h1dHRpbmcgZG93biBudW1lcm91cyBpbGxlZ2FsIHJhZmZsZXMgYW5kIHJhaXNpbmcgYXdhcmVuZXNzIHN0YXRld2lkZSB0aGF0IHJhZmZsZXMgbmVlZCB0byBiZSBsb2NhbGx5IGxpY2Vuc2VkLCBHaWxyb3kgc2FpZCBzaGUgdGFrZXMgYWR2YW50YWdlIG9mIHN3ZWVwc3Rha2VzIHdoZW5ldmVyIHNoZSBjYW4uClNpbXBsZSBIaXN0b3J5IE9mIFdoeSBXZSBDYWxsIERvbGxhcnMKSWwgYWNjdWVpbGxlIHVuZSBjbGllbnRsZSByaWNoZSBldCBodXBwZSBldCwgZGFucyBsZSBtbWUgdGVtcHMsIHByb2RpZ3VlIGdyYXR1aXRlbWVudCBzZXMgc29pbnMgIHVuZSBmb3VsZSBkZSBwYXV2cmVzIGdlbnMuIApVbmZvcnR1bmF0ZWx5LCB1bmxpa2UgVGhvbWFzIEZyaWVkbWFuJ3MgaGVsaWNvcHRlciB2aXNpdHMgdG8gQWZnaGFuaXN0YW4sIEkgZGlkIG5vdCBoYXZlIGFuIGFybWVkIGVzY29ydCBhbmQgYSBuYXJyYXRpdmUgc3Bld2luZyBtYWNoaW5lIGFjY29tcGFueWluZyBtZSB0byBMeWFyaS4gSSBlbmRlZCB1cCBpbiBMeWFyaSBiZWNhdXNlIG15IGhvc3RzIGluIEthcmFjaGksIGJyaWxsaWFudCB5b3VuZyByZXBvcnRlciBTaGVocnlhciBNaXJ6YSBhbmQgZW50cmVwcmVuZXVyIChhbmQgc29tZXRpbWVzIGNvbHVtbmlzdCkgU2hha2lyIEh1c2FpbiBjb25zdW1lZCBzdWJzdGFudGlhbGx5IG1vcmUgbmFoYXJpIHRoYW4gSSBkaWQgb24gQnVybnMgUm9hZCB0aGF0IG5pZ2h0LiBUaGlzIG1lYW50IHRoYXQgSSwgYW4gVXJkdSBzcGVha2luZyBNb2hhamlyIHdobyBoYXMgbm90IGxpdmVkIGluIEthcmFjaGkgc2luY2UgdGhlIGVhcmx5IDE5ODBzLCB3YXMgYXNzaWduZWQgdGhlIHJlc3BvbnNpYmlsaXR5IHRvIGRyaXZlIHRoZSBmZXN0aXZlIGdyb3VwIGhvbWUuIAoxIFMuIDEgbGl0LiAKSGkgZ3V5cyAuIEkgdHJpZWQgaGFyZCBsYXRlcmx5IHRvIGZpbmQgYSB3YXkgdG8gZ2V0IGJvbnVzIGluIHRlc2F4IGhvbGRlbSAuIApPciBhdCBhbGwgaW4gc29tZSBjYXNlcy4gCiJUaGlzIHRlbmRlbmN5IHRvIGRpc21pc3MgdGhpcyBmb29kLCB0byBkZW5pZ3JhdGUgaXQgaGFzIGJlY29tZSBzbyBjb21tb24sIiBzaGUgYWRkcy4gCkhvdyBUbyBLZWVwIGEgTG9uZyBUZXJtIFJlbGF0aW9uc2hpcCBGdW4KQW5kIEkga25vdyBqdXN0IHdoYXQgeW91IGRvOiB5b3Uga2VlcCBkZWJhc2luZyB5b3Vyc2VsZiB0cnlpbmcgdG8gZ2V0IHRoZSBsYXN0IHdvcmQsIGJlY2F1c2UgeW91IGFic29sdXRlbHkgbmVlZCB0byBoYXZlIHRoZSBsYXN0IHdvcmQgYmVjYXVzZSB0byB5b3UsIHRoaXMgaXMgYWJvdXQgd2lubmluZyBzb21ldGhpbmcuIFNvIGdvIGFoZWFkIGFuZCBwcm92ZSBteSBwb2ludCB0aGF0IHlvdSBjYW4gbGVnaXRpbWF0ZWx5IGRlZmVuZCBqdXN0aWNlIGJ5IGRvaW5nIHNvLiBUaGUgZmxvb3IgaXMgeW91cnMuIApIZSBzZW50IHRlcnJvcmlzdGljIHRocmVhdHMgKGdyb3VuZCB1cCB3aGl0ZSBwb3dkZXIgaW4gdGhlIG1haWw/IFllYS4gVGhhdCBzaGl0IHNlcmlvdXMpLiAKQ29tcGV0ZSBpbiB0aGUgVGV4YXMgaG9sZCAnZW0gYW5kIE9tYWhhIHRvdXJuYW1lbnRzIG9yIGNob29zZSBmcm9tIGEgdmFyaWV0eSBvZiBiaW5nbyBnYW1lcy4gCllvdSBkb24ndCBoYXZlIHRvIGJlIGFueSBnb29kIGlmIHlvdSdyZSBhIGNoZWYuIApUTDtEUjogYW55IHJlZ3VsYXRpb24gdGhhdCBzaW5nbGVzIG91dCByZWxpZ2lvdXMgb3JnYW5pemF0aW9ucyBmb3Igc3BlY2lhbCB0cmVhdG1lbnQgaXMgc3VzcGVjdC4gSWYgaXQgcG9zaXRpdmUgdHJlYXRtZW50LCBpdCBwb3RlbnRpYWxseSBhbiBFc3RhYmxpc2htZW50IENsYXVzZSB2aW9sYXRpb24uIApDcmFwcmljb3JuaWEgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnbwpIZXJlJ3MgdGhlIHdvbmRlcmZ1bGx5IGVjY2VudHJpYyBMYWR5IEdhZ2EgaW4gSm8ncyBMaXZlIExvdW5nZSBiYWNrIGluIDIwMDksIHRhbGtpbmcgdGVhIGN1cHMgYW5kIHBvcCBtdXNpYywgYmVmb3JlIHBsYXlpbmcgUG9rZXIgRmFjZSBhbmQgYSBjb3ZlciBvZiAncyBWaXZhIGxhIFZpZGEuIExhc3QgeWVhciwgdGhvdWdoLCBIb3ppZXIgY292ZXJlZCAsIHdobywgbGlrZSBHYWdhLCBoYXZlIGFsc28gY2xvY2tlZCB1cCAxMCBjb3ZlcnMuIApQcm9jZWVkcyBmcm9tIHRoZSBuaWdodCBvZiBjZWxlYnJhdGlvbiB3b3VsZCBnbyB0b3dhcmQgYSAkMSBtaWxsaW9uIGxlZ2FjeSBmdW5kIGluIE1pbGxlcmQgbmFtZSB0byBwcm92aWRlIHRyYWluaW5nIGFuZCBwcm9mZXNzaW9uYWwgZGV2ZWxvcG1lbnQgZm9yIHRoZWF0cmUgYXJ0aXN0cyBvZiBhbGwgZGlzY2lwbGluZXMgYWNyb3NzIENhbmFkYS4KVGhleSBoYWQgYmVlbiBtYXJyaWVkIGZvciBzaXggeWVhcnMgYW5kIGhhdmUgYSB5b3VuZyBzb24uIApTbyBtYXliZSBpdCB0aW1lIHdlIEFtZXJpY2FucyB0YWtlIHRoZSBwdXJzdWl0IG9mIGhhcHBpbmVzcyBiYWNrIGludG8gb3VyIG93biBoYW5kcz8gSXQgdGltZSB0byBhZG1pdCB0aGF0IHdvcmtpbmcgYWxsIHRoZSB0aW1lIGlzIGEgZGVhZCBlbmQgZm9yIGV2ZXJ5b25lIGJ1dCB0aGUgcGVvcGxlIHdobyBvd24gdGhlIG1lYW5zIG9mIHByb2R1Y3Rpb24uIFdlIHNob3VsZCBkZW1hbmQgbm90IGp1c3QgYW4gZW5kIHRvIGVuZGxlc3Mgd2FyLCBub3QganVzdCBoZWFsdGggY2FyZSBmb3IgYWxsIGFuZCBzb21lIHJlZ3VsYXRpb24gb2YgdGhlIGdyZWVkIHRoYXQgY29tZXMgd2l0aCB1bnJlZ3VsYXRlZCBjYXBpdGFsLCBidXQgcGFpZCB2YWNhdGlvbiBhbmQgZGF5IG9mZiBsYXdzLCBtYXhpbXVtIGhvdXJzIGZvciB3b3JrIHdlZWtzLCBhbmQgYSBjaGFuY2UgdG8gdHVybiBvdXIgZnJvd25zIHVwc2lkZSBkb3duLgpJIHJlZ3JldCBhbG1vc3QgbW9yZSB0aGFuIGFueXRoaW5nIG5vdCB0YWtpbmcgcG9rZXIgc2VyaW91c2x5IGJhY2sgdGhlbiwgYnV0IGFsYXMsIGhlcmUgd2UgYXJlLiAKV2hlbiBJIHN0YXJ0ZWQgdG8gc2F5IGdvb2RieWUgc2hlIGNhbWUgdG93YXJkcyBtZS4gSSBmaWd1cmVkIHNoZSB3YXMgZ29pbmcgaW4gZm9yIGEgaHVnIG9yIHNvbWV0aGluZyBidXQgc2hlIHN0b3BwZWQgYW5kIGp1c3QgbG9va2VkIGF0IG1lIGZvciBhIHdoaWxlLCBsaWtlIHNoZSB3YXMgd2FpdGluZyBmb3Igc29tZXRoaW5nLiBJIGZpZ3VyZSBub3cgaXMgbXkgY2hhbmNlLCBzbyBJIHB1dCBvbmUgaGFuZCBvdXQgb250byBoZXIgaGlwIGFuZCBwdWxsIGhlciBjbG9zZXIsIHB1dHRpbmcgbXkgb3RoZXIgaGFuZCBvbiB0aGUgb3RoZXIgaGlwLCBhbmQgZ28gaW4gZm9yIGEga2lzcy4gCkl0J3MgZWFzeSB0byBzYXksICJJJ20gZ29pbmcgdG8gc3RhcnQgdGFraW5nIGJldHRlciBjYXJlIG9mIG15c2VsZiIsIGJ1dCB1bnRpbCB5b3UgbWFrZSBhIGNvbW1pdG1lbnQsIGl0J3MgcmVhbGx5IGp1c3Qgd29yZHMuIApJbiB0aGlzIHRvdXJuYW1lbnQsIGhlIGZpbmlzaGVkIHVwIHdpbm5pbmcgMTIwLDgwMCBVUyBkb2xsYXJzLiAKUGVyaGFwcyB0aGV5IGhhdmUgbGVzcyB0b2xlcmFuY2UgZm9yIGh5cG9jcmlzeSBhbmQgYSBkaXNjb25uZWN0IGJldHdlZW4gcHJvbWlzZXMgYW5kIGFjdGlvbnMuVGhhdCBpcyBub3Qgd2hhdCB0aGUgbWFpbnN0cmVhbSBwcmVzcyBpcyBzdWdnZXN0aW5nLiBXaGVuIGFza2VkIHdoeSB0aGUgRGVtcyB3ZXJlIGxvc2luZyB0aGUgcG9wdWxhcml0eSBjb250ZXN0LCB0aGUgaGVhZCBvZiB0aGUgQ05OIHBvbGxpbmcsIEtlYXRpbmcgSG9sbGFuZCwgc2FpZCBpdCB3YXMgYmVjYXVzZSBBbWVyaWNhbnMgZG8gbm90IHRoaW5rIE9iYW1hIGlzIGRvaW5nIGVub3VnaCB0byBjb29wZXJhdGUgd2l0aCBSZXB1YmxpY2Fucy5UcmFkaXRpb25hbGx5LCB0aGUgcHVibGljIGxpa2VzIHRvIHNlZSBiaXBhcnRpc2FuIGNvb3BlcmF0aW9uIGluIFdhc2hpbmd0b24uIFNvLCB0aGUgcGVyY2VwdGlvbiB0aGF0IHRoZSBHT1AgaXNuIHJlYWNoaW5nIGFjcm9zcyB0aGUgYWlzbGUgbWF5IGJlIGhvbGRpbmcgdGhlIHBhcnR5IGJhY2sgaW4gaXRzIGVmZm9ydHMgdG8gY2FwaXRhbGl6ZSBvbiBkaXNjb250ZW50IHdpdGggdGhlIERlbW9jcmF0aWMgdHJhY2sgcmVjb3JkIHNvIGZhci4iQXMgc29tZW9uZSB3aG8gc3BlbmRzIGEgZmFpciBhbW91bnQgb2YgdGltZSB3aXRoIHlvdW5nIHBlb3BsZSwgSSByYXRoZXIgZG91YnQgdGhhdCBtb3N0IDIwIHNvbWV0aGluZ3MgYXJlIG9uIHR3aXR0ZXIgcmlnaHQgbm93IHNheWluZyAiT01HLCBPYmFtYSBNVVNUIHdvcmsgaGFyZGVyIGF0IGJpcGFydGlzYW5zaGlwISIgQXMgYSB0cmFpbmVkIHNvY2lvbG9naXN0LCBsZXQgbWUgc3VnZ2VzdCB0aGF0IHRoaXMgaW50ZXJwcmV0YXRpb24gb2YgdGhlIGRhdGEgaXMgY29tcGxldGUgYW5kIHV0dGVyIG5vbnNlbnNlLiBBcyBCZW5qYW1pbiBEaXNyYWVsaSBwb2ludGVkIG91dCBsb25nIGFnbyxUaGVyZSBhcmUgbGllcywgZGFtbiBsaWVzIGFuZCB0aGVuIHRoZXJlIGFyZSBzdGF0aXN0aWNzLiJUaGUgcHJvYmxlbXMgd2l0aCBzdGF0aXN0aWNzIGFyZSBtYW55LiBUaGUgcmVzdWx0cyBhcmUgaW4gd2hhdCB3ZSBhc2ssIGhvdyB3ZSBhc2sgaXQsIHdob20gd2UgYXNrLCBhbmQgbW9zdCBpbXBvcnRhbnRseSwgaG93IHdlIGludGVycHJldCBpdC4gSWYgd2UgYXNrIHZvdGVycyAiRG8geW91IHRoaW5rIE9iYW1hIHNob3VsZCBiZSBkb2luZyBtb3JlIHRvIGNvb3BlcmF0ZSB3aXRoIFJlcHVibGljYW5zIGluIENvbmdyZXNzIiB0aGV5IHdpbGwgb2Z0ZW4gc2F5ICJ5ZXMiIGFuZCB0aGVuIHdlIGludGVycHJldCB0aGF0IGFzIHRoZSBjYXVzZSBmb3IgdGhlIGxvc3Mgb2YgcG9wdWxhcml0eSBhbW9uZyB0aGUgRGVtcy5CdXQgaWYgd2UgYXNrZWQgdm90ZXJzICJEbyB5b3UgdGhpbmsgT2JhbWEgcG9saWNpZXMgYXJlIHNpZ25pZmljYW50bHkgZGlmZmVyZW50IHRoYW4gQnVzaCBhbmQgcGVvcGxlIHNhaWQgIm5vIiB0aGVuIHdlIGNvdWxkIHVzZSB0aGF0IHRvIGV4cGxhaW4gdGhlIGRyb3AgaW4gdGhlIERlbXMgcG9wdWxhcml0eS5UaGUgdHJ1dGggaXMsIGlmIHRoZSBuZXcgYWRtaW5pc3RyYXRpb24gYW5kIHRoZSBEZW1vY3JhdGljIGNvbnRyb2xsZWQgQ29uZ3Jlc3MgZG8gbm90IHRha2UgdGhpcyBtb21lbnQgdG8gY3JlYXRlIGEgcmFkaWNhbCBicmVhayB3aXRoIHRoZSBmb3JtZXIgYWRtaW5pc3RyYXRpb24gIGVuZCB0aGUgd2Fycywgc3RvcCBnaXZpbmcgd2VhbHRoIHRvIHRoZSBiYW5rcyByYXRoZXIgdGhhbiB0aGUgcGVvcGxlLCBob2xkIHRoZSBCdXNoaWVzIGFjY291bnRhYmxlLCBldGMuIApWaWRlbyBzbG90cyBoYXZlIGEgSEVMUCBvciBJTkZPIGJ1dHRvbiB0aGF0IHdpbGwgd2FsayB5b3UgdGhyb3VnaCB0aGUgdmFyaW91cyBwYXlvdXRzLCBwbGF5IGxpbmVzLCBib251cyBnYW1lcyBhbmQgc3BlY2lhbCBmZWF0dXJlcy4uIApJbiB0aGUgZmlyc3QgeWVhciwgeW91IHdpbGwgc3R1ZHkgaW4gYSAgZW52aXJvbm1lbnQgd2l0aCBleHBlcnRzIHRocm91Z2ggZXhwZXJpZW5jZSwgZXhwZXJ0IG51cnNlcyBhbmQgdW5pdmVyc2l0eSBsZWN0dXJlcnMgdG8gZGV2ZWxvcCBjb21tdW5pY2F0aW9uIGFuZCBleHRlbmRlZCBudXJzaW5nIHNraWxscyB0byBwcmVwYXJlIHlvdSBmb3IgbnVyc2luZyBwcmFjdGljZS4uIApJIGdyZXcgdXAgaW4gTmV3IEhhbXBzaGlyZSBiYWNrIGluIHRoZSA5MCBOb3QgbXVjaCBkaXZlcnNpdHkuIApGQzIgd2lsbCBub3RpZnkgdXNlcnMgYWJvdXQgbmVjZXNzYXJ5IGluZm9ybWF0aW9uLCBpbiBhIG1hdHRlciBGQzIgY29uc2lkZXJzIGFwcHJvcHJpYXRlLCBpbmNsdWRpbmcgdGhyb3VnaCBGQzIgd2Vic2l0ZSBvciBlIG1haWwgZXRjLiAKSXQgaW50ZXJlc3RpbmcgaG93IGZvciBzb21lIGluZHVzdHJpZXMsIHdlIGJhc2ljYWxseSBhY2NlcHQgY29weWluZyAgIGZhc2hpb24gZGVzaWduIGFuZCBnYW1lIGNvbmNlcHRzLCB0byBuYW1lIGp1c3QgdHdvICAgd2hpbGUgZm9yIG90aGVycywgd2UgY29uc2lkZXIgaXQgc3RlYWxpbmcuIFdoYXQgd2UgcGVyaGFwcyBzaG91bGQgbm90IGJlIHRvbyBzdXJwcmlzZWQgYWJvdXQgaXMgaG93IHdoZW4gYSBjb3VudHJ5IGhhcyBiZWVuIHVzZWQgZm9yIGRlY2FkZXMgYXMgdGhlIHdvcmxkIHF1YXNpIGNvbnN0cnVjdGlvbiBiYWNreWFyZCwgdGhhdCBjb3VudHJ5IGlzIG5vdyBlbWVyZ2luZyBhcyBhIG5ldyBpbmR1c3RyeSBwbGF5ZXIgdGhlbXNlbHZlcy4gClRyYXZlbCBUaXBzIEFydGljbGVzIEJlc3QgUGxhY2VzIGZvciBMYXMgVmVnYXMgQ29tcHMgQmlsb3hpIENhc2lubyBUcmlwcyBDYXNpbm8gU3RyaXAgUmVzb3J0cyBhbmQgUGxhY2VzIHRvIFN0YXkgaW4gVHVuaWNhLCBNUyBUaGUgQmVzdCBQbGFjZXMgZm9yIFBva2VyIGluIEF0bGFudGljIENpdHkgVGlwcyBvbiB0aGUgTGFzIFZlZ2FzIE1HTSBHcmFuZCBDaGFydGVyIEJ1cyBHYW1lcyBmb3IgUGFzc2VuZ2VycyBIb3cgdG8gVmFjYXRpb24gQ2hlYXAgaW4gVmVnYXMgSG93IHRvIEdldCBIb3RlbCBDb21wcyBmb3IgQXRsYW50aWMgQ2l0eQpUaGV5IGhhZCAobGlrZSBtZSkgYSBwYXJlbnQsIG9yIChhZ2FpbiBsaWtlIG1lKSBhIGNoaWxkIHdobyB3YXMgYSB0ZWFjaGVyLiBTb21lIGhhZCBiZWVuIHNob2NrZWQgaW50byBpdCBieSBhIGJlcmVhdmVtZW50LCBvdGhlcnMgaGFkIGhhZCB0aGVpciBvd24gbGl2ZXMgY2hhbmdlZCBieSBlZHVjYXRpb24uIFBob25nIERpbmgsIHdob3NlIGZhbWlseSBmbGVkIHRvIHRoZSBVUyBmcm9tIFZpZXRuYW0gYWZ0ZXIgdGhlIGZhbGwgb2YgU2FpZ29uLCB3YXMgc2V0IG9uIGEgcGF0aCB0byBsYXcgc2Nob29sIGJ5IHRoZSB3b25kZXJmdWwgcGVvcGxlIHdobyB0YXVnaHQgaGltLiAKSGUgd2FzIG5vdCBnb29kIGF0IHBva2VyLiAKSSBnb3QgZGl2b3JjZWQgYW5kIHN0YXJ0ZWQgZGF0aW5nIGFub3RoZXIgbWFuLiBUaGUgZmlyc3QgdGltZSB3ZSBoYWQgc2V4LCBJIHJlbWVtYmVyIHRoaW5raW5nIHRoaXMgZmVlbHMgd2F5IGRpZmZlcmVudC4gClRoZSBhY3RpdmUgaW5ncmVkaWVudCBpbiBtb3V0aHdhc2gga2lsbHMgMTAwJSBvZiBhbGwgYmFjdGVyaWEgdGhhdCBpdCBjb21lcyBpbnRvIGNvbnRhY3Qgd2l0aC4gV2hlbiB5b3Ugc3dpc2ggYW5kIHN3b29zaCwgdGhlcmUgYSB2ZXJ5IGdvb2QgY2hhbmNlIHRoYXQgeW91IGRvbiBtYW5hZ2UgdG8gZ2V0IHRoZSBtb3V0aHdhc2ggaW50byBjb250YWN0IHdpdGggMTAwJSBvZiB0aGUgYmFjdGVyaWEgaW4geW91ciBtb3V0aC4gRm9yIGV4YW1wbGUsIHNvbWUgb2YgaXQgaXMgaGlkaW5nIGluIGNyYWNrcyBvciBmb2xkcy4KQWxzbywganVzdCBiZWNhdXNlIGhlIG1pZ2h0IGJlIHByb2ZpdGFibGUgd2l0aCBhIGhpZ2ggUEZSIC4gRG9lc24gbWVhbiB0aGF0IGhlIHdpbGwgYmUgZXZlbiBtb3JlIHByb2ZpdGFibGUgaWYgaGUgdGlnaHRlbnMgdXAgaGlzIG9wZW5pbmcgcmFuZ2UgKGVzcGVjaWFsbHkgYXMgcmFrZSB3aWxsIGVhdCB1cCBsZXNzIGFuZCBsZXNzIG9mIGhpcyBwcm9maXRzKS4uIApZb3VyIGZyaWVuZHMgbWlnaHQgdHJ5IHRvIHBlcnN1YWRlIHlvdSwgYW5kIHRoZXkgbWlnaHQgZXZlbiBwb2tlIGZ1biBhdCB5b3UsIGJ1dCB0aGV5IHdvbiBiZSBzZXJpb3VzLiAKUXVhbmQgb24gaGFzYXJkZSBzZXMgeWV1eCBzdXIgZGl2ZXJzIG91dnJhZ2VzIGRlIHBoeXRvdGhyYXBpZSBnbnJhbGUsIG9uIHJlbmNvbnRyZSAgZXQgbCBiaWVuIGRlcyBwZXJzb25uYWdlcyBheWFudCBhbmltIGwgbWRpY2FsZSBkZSBsYSB0aHJhcGllIHBhciBsZXMgcGxhbnRlcywgZXQgY2UgZGUgbCBqdXNxdSBub3VzOiBEaW9zY29yaWRlLCBHYWxpZW4sIEhpbGRlZ2FyZGUsIE1hdHRoaW9sZSwgTG1lcnksIENhemluLCBGb3VybmllciwgVmFsbmV0IEV0IGlsIHkgYSBMZWNsZXJjLCBkb250IGwgcHJpbmNpcGFsLCBqZSBjcm9pcywgc2UgdHJvdXZlIHRyZSBzb24gUHJjaXMgZGUgcGh5dG90aHJhcGllLiAKQm91bGRlciBIZWFsdGggRml0bmVzcwpUaGUgNiBpbmNoIGxvc3MgaXMgYWxzbyBndWFyYW50ZWVkIHRvIHN0YXkgb2ZmIGZvciBhdCBsZWFzdCAzMCBkYXlzIHNvIHlvdSBjYW4gYmUgY29uZmlkZW50IG9mIGxvb2tpbmcgZ3JlYXQgbG9uZyBhZnRlciBsZWF2aW5nIHRoZSBzcGEuIFRoaXMgbWF5IHNvdW5kIHRvbyBnb29kIHRvIGJlIHRydWUgYnV0IHdpdGggYXZlcmFnZSBsb3NzZXMgb2YgMTAgMTQgaW5jaGVzIGZyb20ganVzdCBvbmUgdHJlYXRtZW50LCBTZXJlbml0eSBDb250b3VyIFdyYXAgQ2xhc3NpYyBpcyB0aGUgaW5jaCBsb3NzIHRyZWF0bWVudCB5b3UgY2FuIHRydXN0LkJ1dCBDbGFzc2ljIGRvZXNuIGp1c3QgZGVsaXZlciBleGNlcHRpb25hbCBpbmNoIGxvc3M7IHRoZSB1bmlxdWUgY2xheSBmb3JtdWxhIGFuZCBzcGVjaWFsIHdyYXBwaW5nIHRlY2huaXF1ZXMgdGhlIHRoZXJhcGlzdHMgdXNlLCBhbHNvIHRpZ2h0ZW4gYW5kIHRvbmUgeW91ciBib2R5IHdoaWxlIGV4Zm9saWF0aW5nIGFuZCBjbGVhbnNpbmcgdGhlIHNraW4gc28geW91IHdpbGwgbm90IG9ubHkgbG9vayBncmVhdCwgeW91IGZlZWwgZmFidWxvdXMgdG9vLCBhZnRlciBqdXN0IG9uZSB0cmVhdG1lbnQuU28gd2hldGhlciB5b3UgbG9va2luZyB0byBraWNrIHN0YXJ0IGEgc2xpbW1pbmcgcGxhbiBvciB0YXJnZXQgYSBmZXcgc3R1YmJvcm4gaW5jaGVzIHlvdSBjYW4gcmVseSBvbiBTZXJlbml0eSBDb250b3VyIFdyYXAgdG8gZGVsaXZlciBpbnN0YW50IHJlc3VsdHMgdGhhdCB3aWxsIGtlZXAgZnJpZW5kcyBhbmQgZmFtaWx5IHdvbmRlcmluZyBob3cgeW91IGRvIGl0LgpJdCBsaWtlIEluZGlhbmEgSm9uZXMgYXJjaGFlb2xvZ3kgbWVldHMgRmFzdCBhbmQgRnVyaW91cyByaWRpY3Vsb3VzbmVzcyB3aXRoIGEgaGVhbHRoeSBkb3NlIG9mIG1hY2hpc21vLiBXaXRoIGNoYXJhY3RlcnMgbmFtZWQgYWZ0ZXIgY2xhc3NpYyByb2NrL3BvcCBiYW5kcyBhbmQgYW4gZW5kaW5nIHRoZXJlIGZyb20gYSBjbGFzc2ljIHByb2cgcm9jayBiYW5kIHRvbywgYXQgbGVhc3QgZm9yIHRoZSBmaXJzdCBzZWFzb24uIApMZXNlbiB1bmQgRG93bmxvYWQgT25saW5lIFVubGltaXRlZCBlQm9va3MsIFBERiBCdWNoLCBIcmJ1Y2ggb2Rlci4gMTMuIApJIGdyYWJiZWQgbXkgaGVhdGVkIGJsYW5rZXQgYW5kIHdlbnQgdW5jb25zY2lvdXMgb24gdGhlIGNvdWNoIGZvciBsaWtlIDQgaG91cnMuIFdva2UgdXAgYW5kIGZlbHQgbGlrZSBzb21lb25lIGhhZCBiZWF0IG1lIHdpdGggYSBjcm93YmFyIHdoaWxlIEkgc2xlcHQuIEkgbmV2ZXIgZXhwZXJpZW5jZWQgYW55dGhpbmcgbGlrZSBpdC4gCkl0IHN0aWxsIG9mZmVycyB0aGUgc2FtZSBncmVhdCBhZHMgZnJlZSBicm93c2luZyBleHBlcmllbmNlIGFuZCBhY2Nlc3MgdG8gci9sb3VuZ2UsIGJ1dCBub3cgeW91IHdpbGwgYWxzbyByZWNlaXZlIDcwMCBDb2lucyBtb250aGx5IHNvIHlvdSBjYW4gYXdhcmQgZXhjZXB0aW9uYWwgY29udHJpYnV0aW9ucy4uIApPdXQgb2YgdGhhdCBncm91cCBvZiBndXlzIHdobyBoYXZlIGdvb2QgdGFwZSB0ZWFtcyBhcmUgbG9va2luZyBmb3Igc29tZSBzcGVjaWZpYyB0aGluZ3MuIFRoZXkgaGF2ZSBhIHJhbmdlIG9mIG51bWJlcnMgaW4gc3BlY2lmaWMgZHJpbGxzIGZvciBlYWNoIHBvc2l0aW9uIGFuZCB0aGV5IHdhbnQgdG8gdmVyaWZ5IHRoZSBndXlzIHdpdGggZ29vZCB0YXBlIGFyZSBpbiB0aGF0IHBvd2VyIGJhbmQuIApTb21lIHBsYXllcnMgYXJlIGFjdHVhbGx5IHN0dXBpZCBlbm91Z2ggdG8ga2VlcCB0aGUgZ2xhc3NlcyBvZmYgd2hlbiB0aGV5IHBsYXkgZnJpbmdlIGhhbmRzIGFuZCBwdXQgdGhlbSBvbiB3aGVuIHRoZXkgc2VlIGEgcHJlbWl1bSBoYW5kIG9yIGRlY2lkZSB0byBtYWtlIGEgbW92ZS4gS2VlcCB0aGlzIGluIG1pbmQuIEl0IGEgbWlub3JpdHkgb2YgdGhlbSBidXQgY29tbW9uIGVub3VnaCB0byBsb29rIGZvci4gSWYgeW91IG5vdGljZSB0aGlzIGEgY291cGxlIHRpbWVzLCBnZXQgb3V0IG9mIHRoZWlyIHdheSB3aGVuIHRoZSBnbGFzc2VzIGdvIG9uIHByZSBmbG9wLCBidXQgY29uc2lkZXIgY2hlY2sgY2FsbGluZyBkb3duIGV2ZW4gaW4gdGhlIGZhY2Ugb2YgYWdncmVzc2lvbiB3aGVuIHRoZXkgcHV0IHRoZW0gb24gcG9zdCBmbG9wIHdpdGggYSBraW5kIG9mIHN1c3BlY3QgbGluZS4KT24gbGVzIHRyb3V2ZSBkYW5zIGRpZmZyZW50ZXMgZmFtaWxsZXMgYm90YW5pcXVlcyA6LiAKSSBmaW5hbGx5IGdldCBteSBleWVzIG9wZW4gYW5kIGl0IGNsZWFybHkgaGVyIHdpdGggbXkgZGljayBpbiBoZXIgbW91dGguIApTdXBwb3J0IGR1cmluZyBhbGwgdGhlc2UgeWVhcnMuIApDYWxnYW1lciAgMSBwb2ludCAgc3VibWl0dGVkIDE0IGRheXMgYWdvCllvdSBtYWtlIHRoZSBhc3N1bXB0aW9uIHRoYXQgdGhleSB3b3VsZCBtYXJrZXQgYmFzaWMgZml4ZXMgZm9yIGVtYmFycmFzc2luZyBidWdzLCBJIG1ha2UgdGhlIGFzc3VtcHRpb24gdGhhdCB0aGVzZSBhcmUgbm90IHNvbWV0aGluZyB3b3J0aCBhZHZlcnRpc2luZyBhbmQgaW5zdGVhZCBpdCBzaG91bGQgYmUgYSBnaXZlbiB0aGF0IHRoZXkgd2VyZSBmaXhlZCB3aGVuIGl0IGxpa2UgdGhlIDV0aCB2ZXJzaW9uIG9mIHRoZSBnYW1lIG9yIHNvbWV0aGluZyBsaWtlIHRoYXQuIApJbiAyMDAxLCBmb3IgZXhhbXBsZSwgTm9yZHN0cm9tIG9mZmljaWFscyBjaGFuZ2VkIHRoZWlyIG1pbmRzIGFib3V0IGRldmVsb3BpbmcgYSAxNjUsMDAwIHNxdWFyZSBmb290IHN0b3JlIGluIE5hc2h2aWxsZSB0aGF0IHdvdWxkIGhhdmUgb3BlbmVkIGluIDIwMDMuCk1lbGxvbiBDb2xsaWUgYW5kIHRoZSBJbmZpbml0ZSBTYWRuZXNzLCBpbiBwYXJ0aWN1bGFyLCBpcyBhIGZhbnRhc3RpYyBwaWVjZSBvZiBzb25pYyBhcnQuIApIZXJlIHRoZSB0aGluZy4gRG9uYWxkIFRydW1wLCBhcyBtdWNoIG9mIGFuIGFzcyBhcyBoZSBpcywgaGFzIHRoZSBzYW1lIHJpZ2h0IHRvIHJlbWFpbiBzaWxlbnQgYXMgZXZlcnkgb3RoZXIgVVMgQ2l0aXplbi4gSGUgZG9lcyBub3QgaGF2ZSB0byBwcmVzZW50IGV2aWRlbmNlIHdlcmUgaGUgdG8gZ28gdG8gY291cnQuIEhlIGNvdWxkIHJlbWFpbiBzaWxlbnQgdGhlIHdob2xlIHRpbWUuIFRoZXJlIGlzIG5vIHJlcXVpcmVtZW50IGluIFVTIGNvdXJ0cyB0byBwcm92ZSBpbm5vY2VuY2UuIFRoYXQgd2h5IHRoZSB2ZXJkaWN0IGlzIGVpdGhlciAiZ3VpbHR5IiBvciAibm90IGd1aWx0eS4iIFRydW1wIGRvZXMgbm90IGhhdmUgdG8gYW5zd2VyIHF1ZXN0aW9ucyB1bmRlciBvYXRoIHRvIHByb3ZlIGhpcyBpbm5vY2VuY2UuCkVsbGUgc2VyYSBsaWJyZW1lbnQgZXhlcmNlIGVuIEZyYW5jZSBldCBwdWJsaXF1ZW1lbnQgZGFucyBsZSByZXNwZWN0IGRlcyByZ2xlbWVudHMgZGUgcG9saWNlIChBcnRpY2xlIDFlcikuIExlIFByZW1pZXIgQ29uc3VsIG5vbW1lIGxlcyB2cXVlcyAoQXJ0aWNsZSBJViksIHF1aSBwcnRlcm9udCBzZXJtZW50IGRlIGZpZGxpdCBhdSBHb3V2ZXJuZW1lbnQgdGFibGkgcGFyIGxhIENvbnN0aXR1dGlvbiBkZSBsYSBScHVibGlxdWUgZnJhbmFpc2UgKEFydGljbGUgVkkpLiAKU2hlIGhhcyBwYXJ0aWNpcGF0ZWQgMTggdGltZXMgYXQgdGhlIFdTT1AsIGZvciBmb3VyIHRpbWVzIHNoZSBnb3QgdG8gdGhlIGZpbmFsIHRhYmxlIGluIE5vIExpbWl0IEhvbGRlbSBhbmQgU2V2ZW4gQ2FyZCBTdHVkLiBBbHNvIHNoZSByZWd1bGFybHkgcGxheWVkIGluIFdQVCB0b3VybmFtZW50cywgd2hlcmUgdGhlIGxhcmdlc3QgYW1vdW50IHNoZSB3b24gY291bnRzICQ0NzIsMjI4IGZvciB0aGlyZCBwbGFjZSBpbiAyMDA2Li4gCkl0J3Mgc3RyYW5nZSB0byBtZSB0aGF0IHBlb3BsZSBzdXBwb3J0IFRydW1wIGFuZCB0aGluayBoZSBpcyBvbiB0aGVpciBzaWRlIGJlY2F1c2UgaGUgaGFzIGNvbXBsZXRlbHkgZW5hYmxlZCB0aGUgb2xkIGd1YXJkIGFuZCBjb21wbGV0ZWx5IHJlbW92ZWQgYW55IHByb2dyZXNzIHRoYXQgT2JhbWEgdHJpZWQgdG8gaW1wbGVtZW50LCBhbGJlaXQgcG9vcmx5Li4gCkknbSByaWRpY3Vsb3VzLkJsYWNrd2FsbCBTaWdoLiAKQXNzdW1lZG91dHRha2UgZnJvbSAiVGhlIEZhbWUgTW9ucyBlci4iIENhbiBiZSBmb3VuZCBvbiBZb3V0dWJlLiAKVGhpcyBhZHZlbnR1cm91cyBzdHJlYWsgcmVzdXJmYWNlZCBpbiAxOTk0LCB3aGVuIFNodWxtYW4gcXVpdCBoaXMgam9iIGF0IGEgbm9ucHJvZml0IHRoYXQgcHJvbW90ZWQgZW52aXJvbm1lbnRhbCBwcm9ncmFtcyBpbiBTYW4gRGllZ28gYW5kIHdlbnQgb24gYSB0cmlwIHRoYXQgYmVnYW4gaW4gSW5kaWEgYW5kIGVuZGVkIGluIGEgeWVzaGl2YSB0dWNrZWQgaW50byB0aGUgbGltZXN0b25lIG1hemUgb2YgSmVydXNhbGVtJ3MgT2xkIENpdHkuIFNodWxtYW4gc3RheWVkIGFuZCBzdHVkaWVkIEp1ZGFpc20gdGhlcmUgZm9yIHRoZSBuZXh0IGZldyB5ZWFycy4gCkl0IGZlbHQgbGlrZSBhIHdlaXJkIEJHUy9CaW93YXJlIGh5YnJpZC4gCkhvd2V2ZXIsIEkgZGlkIG5vdCBnaXZlIG15c2VsZiB0aGlzIG5pY2tuYW1lICAgaXQgd2FzIGdpdmVuIHRvIG1lIGJ5IHRoZSBHdWlkZXMgb24gR3VpZGUgY2FtcCBvbmUgeWVhciwgSSBsaWtlIHRoZSBuaWNrbmFtZSwgd2hpY2ggaXMgbHVja3kgYXMgaXQgc3R1Y2suLiAKIldpdGggdGhlIGxhcmdlc3QgZm9vdHByaW50IGFtb25nIFN0YXJ3b29kJ3MgcG9ydGZvbGlvIGFuZCBvbmUgb2YgdGhlIHdvcmxkJ3MgbW9zdCByZWNvZ25pc2VkIGhvdGVsIGJyYW5kcywgU2hlcmF0b24gaXMgb2Z0ZW4gdGhlIGJyYW5kIHRoYXQgYWxsb3dzIFN0YXJ3b29kIHRvIGVudGVyIGtleSBtYXJrZXRzLCIgc2FpZCBSb2VsYW5kIFZvcywgUHJlc2lkZW50LCBTdGFyd29vZCBIb3RlbHMgUmVzb3J0cywgRXVyb3BlLCBBZnJpY2EgYW5kIE1pZGRsZSBFYXN0LiAiTm93aGVyZSBpcyBTaGVyYXRvbidzICdmaXJzdCBtb3ZlciBhZHZhbnRhZ2UnIG1vcmUgZXZpZGVudCB0aGFuIGluIFJ1c3NpYSBhbmQgQ0lTIHdoZXJlIHRoZSBTaGVyYXRvbiBicmFuZCBpcyBkcml2aW5nIG91ciBncm93dGggaW4ga2V5IFJ1c3NpYW4gYW5kIFVrcmFpbmlhbiBtYXJrZXRzLCBzdWNoIGFzIFBlcm0sIFJvc3RvdiBvbiBEb24gYW5kIEtpZXYuIi4gClJlYWQgdGhlIEVudGlyZSBBcnRpY2xlSG93IHRvIFBsYXkgVmlkZW8gUG9rZXI6IFJ1bGVzIGFuZCBGZWF0dXJlcwpZb3UgZWFybiBpdCBieSBiZWluZyBjb25zaXN0ZW50IGFuZCB3aW5uaW5nLiBUaGF0IHdoYXQgd2UgaGF2ZSB0byBkby4uIApJdCBhIGh1bWFuIGJlaW5nLiBIZSBwcm9iYWJseSByb2xsaW5nIGR1ZSB0byBoaXMgc3dlYXQgYW5kIGRpc3RhbnQgc3RhcmUgZGVzcGl0ZSB0aGUgY29tbW90aW9uIGFyb3VuZCBoaW0sIGFuZCBoaXMgbm90IGdpdmluZyBhIGZ1Y2sgYWJvdXQgaXQgdG9vLiBKdWRnaW5nIGJ5IGhpbSB3ZWFyaW5nIG5lYXJseSBub3RoaW5nLCByb2xsaW5nIHRvIG5vdCBjYXJlLCBhbmQgaGlzIGZpZ3VyZSwgaGUgcHJvYmFibHkgdXNlcyB0aGUgZXhwZXJpZW5jZSBhcyBhIHRoZXJhcGV1dGljIG9wcG9zaXRlIG9mIGhpcyBkYWlseSBsaWZlICAgZXZlcnl3aGVyZSBoZSBnb2VzLCBjbG90aGVkLCBmZWVsaW5nIHNoYW1lIGFib3V0IGhpcyBiZW50IGxlZ3MgYW5kIHNtYWxsIHN0YXR1cmUsIGFsbCBvZiBpdCBtYWduaWZpZWQgYnkgb25lIG91dCBvZiBldmVyeSB0d28gcGVvcGxlIGhlIHdhbGtzIHBhc3QgYmVpbmcgYW4gb25sb29rZXIuIApJIHRoaW5rIHRoZXkgYXJlIHdyb25nLCBidXQgdGhhdCBkb2VzbiByZWFsbHkgbWVhbiBpdCBhIGxpZS4gCkFmdGVyIGVhY2ggZXZpY3Rpb24sIGl0IGJhc2ljYWxseSBhIHJlc2V0LiAKSXQgYSByZWxhdGl2ZWx5IHNpbXBsZSBpbXByb3ZlbWVudCB0byBhIG5lY2Vzc2FyeSBhbmQgbGFib3Jpb3VzIGpvYiBhZGRpbmcgdGhlIHNwcmVhZGVyIG1hZGUgdGhlIGFwcGxpY2F0aW9uIG9mIG1hbnVyZSBmYXIgZWFzaWVyIHRoYW4gaGF2ZSBpdCBzbGlkZSB0aHJvdWdoIGEgamFtYWJsZSBzbHVpY2UgaW4gdGhlIGJvdHRvbSBvZiBhIHdhZ29uLCBhbmQgY2VydGFpbmx5IGEgbG90IGVhc2llciBhbmQgbW9yZSB0aG9yb3VnaCB0aGFuIHNwcmVhZGluZyBpdCBieSBoYW5kLiBSZWdpb25hbCAoc291dGhlcm4pIG1hbnlvKS4gCkl0IGNyZWF0ZXMgbWVudGFsIGNvbmZ1c2lvbiwgbGlrZSB0cnlpbmcgdG8gcnViIHlvdXIgc3RvbWFjaCB3aGlsZSBwYXR0aW5nIHlvdXIgaGVhZC4gVGhlIGZpcnN0IHN0ZXAgdG93YXJkcyBvdmVyY29taW5nIHRoaXMgaXMgdmVyeSBzaW1wbGU7IHRha2UgYSBtb3V0aGZ1bCBvZiB3YXRlciwgYW5kIGxlYW4gb3ZlciB0aGUgc2luayBvciBhIGJ1Y2tldC4gCkJ1dCBhZnRlciBhIGxvdCBvZiByZXNlYXJjaCBiZWZvcmUgQ2hyaXN0bWFzLCBJIGRlY2lkZWQgb24gdGhlICQxNjAgWkNDMTAgaW5zdGVhZC4gQ29tcGFyZWQgdG8gdGhlIGNoZWFwZXIgQ2hpbmEgbWFkZSBUU0MgbW9kZWxzLCB0aGUgWkNDIGlzIG1hZGUgaW4gSmFwYW4sIGhhcyBhIHNwaGVyaWNhbCBoZWF0aW5nIGVsZW1lbnQsIGFuZCBoYXMgYSBjb3VwbGUgbW9yZSBzZW5zb3JzIGZvciBiZXR0ZXIgdGVtcCBjb250cm9sLiAKUG9iYXV0aXN0YSAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCkxpa2UgbW9zdCBjbGllbnRzLCBXaWxzb24gdXN1YWxseSBzdGF5cyBmb3IgYSB3ZWVrLiAKQnV0IGRvZXMgaGF2aW5nIG1vcmUgImd1dHR1cmFsIiBzb3VuZHMgKHNheSwgc291bmRzIGFydGljdWxhdGVkIGluIHRoZSB0aHJvYXQsIHN1Y2ggYXMgcGhhcnluZ2VhbHMgYW5kIGdsb3R0YWxzKSBtYWtlIGEgbGFuZ3VhZ2Ugb2JqZWN0aXZlbHkgaGFyc2g/IEkgZG91YnQgaXQuIE1vcmUgbGlrZWx5IHBlb3BsZSBzdGFydGVkIGFzc29jaWF0aW5nIHRoZW0gd2l0aCBoYXJzaG5lc3MgYmVjYXVzZSBwZW9wbGUgdGhleSBzdGVyZW90eXBlZCBhcyBoYXJzaCBoYXBwZW5lZCB0byBoYXZlIHRoZXNlIHNvdW5kcywgYW5kIHRoZW4gdGhlIHRlcm0gc29ydCBvZiBzaGlmdGVkLi4gCkEgdGVybWUsIGVsbGUgYXBwcm92aXNpb25uZXJhIGxlcyBoYWJpdGFudHMgZGUgbGEgdmlsbGUuIERlcyBtaWNybyBqYXJkaW5zIG9udCB2dSBsZSBqb3VyICBEYWthciwgZXQgIEJhbmdrb2ssIGxlIGJ0b24gZGlzcGFyYXQgc291cyBsYSB2Z3RhdGlvbiBkZXB1aXMgbG9uZ3RlbXBzLi4gCkkgdGVsbCB5b3Ugd2h5LCBLb3JlYSBpcyBhIHNtYWxsIG1hcmtldCBhbmQgbGFyZ2UgVVMgY29tcGFuaWVzIGRvbiB3YW50IHRvIHdhc3RlIHRoZWlyIHRpbWUgb3IgcmVzb3VyY2VzIGZvciBzdWNoIHNtYWxsIG1hcmtldHNoYXJlLiBTbywgS29yZWFuIGNvbXBhbmllcyBwaWNrIHVwIHRoZSBzbGFjayBhbmQgbGF1bmNoIHRoZWlyIG93biBwcm9kdWN0cyB0aGF0IHdpbGwgY29udGludW91c2x5IGJlIHVwZGF0ZWQgdG8gbWVldCB0aGUgbmVlZHMgb2YgdGhlaXIgb3duIG1hcmtldC4KQV93aWxkX2RydW5rX2FwcGVhcnMgIDEgcG9pbnQgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KQ2FuIFBva2VyIFN0cmF0ZWd5IEJlIEltcGxlbWVudGVkIGluIEJ1c2luZXNzIEFjdGl2aXR5Cg==|<---