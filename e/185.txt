--->|SnVyb3JzIHdlcmUgdG9sZCBvZiBTbWl0aCdzIGludGVyZXN0IGluIHBva2VyLCBZb3VUdWJlLCBJc2xhbSBhcyB3ZWxsIGFzIGd1bnMsIGV4cGxvc2l2ZXMgYW5kIG90aGVyIHdlYXBvbnMuCk1zLiBUZXF1aWxhIGlzIGEgVmlldG5hbWVzZSBBbWVyaWNhbiBxdWVlciB3b21hbiB3aG9zZSBwb3RlbnRpYWwgbG92ZXJzIHdlcmUgb2Z0ZW4gZWl0aGVyIHF1ZWVyIGFuZCBvciBvZiBjb2xvci4gClBoaWwgS2VhZ2d5LCBUb255IExldmluLCBKZXJyeSBNYXJvdHRhICAgVGhlIEJ1Y2tldCBMaXN0OiBJIHdhc24gc3VyZSB3aGF0IHRvIGV4cGVjdCBmcm9tIHRoaXMgYWxidW0gZ29pbmcgaW50byBpdC4gVGhlIG9ubHkgcGVyc29uIEkgd2FzIGZhbWlsaWFyIHdpdGggd2FzIFRvbnkgTGV2aW4gYW5kIHRoYXQgZnJvbSBoaXMgd29yayB3aXRoIHByb2cgYmFuZHMuIApUaGUgZ2xlYW1pbmcgYmlrZSBpcyBvbiBkaXNwbGF5IGluIHRoZSBDb21tb253ZWFsdGggQmFyIGFuZCBMb3VuZ2Ugb24gdGhlIGdhbWJsaW5nIGZsb29yLCB3aGVyZSB0aGUgY29ja3RhaWwgaXMgb24gdGhlIG1lbnUuIFRoZXkgc2hpcCB0aGUgbW90b3JjeWNsZSB0byB5b3VyIGhvdXNlLCBhcHBhcmVudGx5OyB5b3UgZG9uIGdldCB0byBmaXJlIGl0IHVwIGFuZCByb2FyIG91dCBvZiB0aGUgY2FzaW5vLCB3aGljaCB3b3VsZCBiZSBtdWNoIGNvb2xlci4gKERpZCBJIGdldCBwYWlkIHRvIHN0YXkgdXAgYWxsIG5pZ2h0IHBhcnR5aW5nPyBOb3BlLiAKWW91ciBEVyBuZWVkIHRvIHB1dCBoZXIgcGFyZW50cyBvbiBhbiBpbmZvcm1hdGlvbiBkaWV0LiAKWW91IGNhbiBwbGF5IGZvciBob3VycyBhbmQgc29tZXRpbWVzIGZpbmlzaCB1cCBhIGxpdHRsZSBiaXQgdXAgb3IgYSBsaXR0bGUgYml0IGRvd24sIGFsbCB0aGUgd2hpbGUgaGF2aW5nIHJpc2tlZCBsaXR0bGUgbW9yZSB0aGFuICQ1LiAKTGUgYm52b2xhdCBhc3NvY2lhdGlmIGRlbWFuZGUgcGFyZm9pcyBkZSBsJ2VuZHVyYW5jZSAhLiAKVGhlIHBsYXllcnMgZ2FpbiBhIGxldmVsIGlmIHRoZXkgZmlsbCBlaXRoZXIgb2YgdGhlIGJhcnMsIGFuZCBrZWVwIGFueSBwcm9ncmVzcyB0aGF0IHRoZXkgbWFkZSBvbiB0aGUgb3RoZXIgYmFyLiAKTWF4IGJ1eSBpbiwgYXZlcmFnZSBidXkgaW4vc3RhY2sgc2l6ZXMgb2Ygb3RoZXIgcGxheWVycywgcG9wdWxhdGlvbiB0ZW5kZW5jaWVzIC8gcGxheXN0eWxlIG9mIG90aGVyIHJlZ3VsYXJzLCBmcmVxdWVuY3kgb2Ygc3RyYWRkbGVzLCBhbmQgc28gb24uIApBbWVuZG9sYSBoYWQgc2lnbmVkIGEgMiB5ZWFyLCAkMTIgbWlsbGlvbiBkZWFsIHdpdGggTWlhbWkuCkh1bXBocmV5IERhdnkgaW50cm9kdWNlZCB0aGUgaWRlYSBvZiB0aGUgY2FyYm9uIGFyYyBlbGVjdHJpYyBsaWdodCBpbiB0aGUgZmlyc3QgZGVjYWRlIG9mIHRoZSAxOXRoIGNlbnR1cnkuIEhpcyBsaWdodCB3YXMgc3VjY2Vzc2Z1bCBpZiBub3QgcHJhY3RpY2FibGUsIGFzIHRoZSBlbGVjdHJpYyBzb3VyY2Ugd2FzIGEgYmF0dGVyeSBtYWRlIG9mIGEgc2VyaWVzIG9mIGEgdGhvdXNhbmQgb3IgdHdvIGxpcXVpZCBjZWxscywgdGhvdWdoIHRoZXJlIHdhcyBhIG11Y2ggbW9yZSBwcmFjdGljYWwgcHVibGljIGRpc3BsYXkgb2YgdGhlIGlkZWEgaW4gdGhlIFRoZSBzdWJqZWN0IG9mIHRoaXMgc2hvcnQgcG9zdCwgV2lsbGlhbSBTdGFpdGUxLCBlbnRlcnMgdGhlIGVsZWN0cmljIGxpZ2h0IGFyZW5hIGluIHRoZSAxODQwIHdpdGggbm8gcmVhbCBzY2llbnRpZmljIGJhY2tncm91bmQgYW5kIHByb2NlZWRlZCB0byBtYWtlIHNvbWUgaW1wcmVzc2l2ZSBpbXByb3ZlbWVudHMsIHByb3ZpbmcgaGltc2VsZiBhIHRoaW5rZXIgd2l0aCB0aGUgYWJpbGl0eSB0byBkZXNpZ24gYW5kIGNvbnN0cnVjdCB0aGUgcHJlY2lzaW9uIGVsZW1lbnRzLgpIdWRzb24gY291bGQgaGF2ZSBiZWVuIHNlbnRlbmNlZCB0byBmaXZlIHllYXJzIGJlaGluZCBiYXJzIGlmIGZvdW5kIGd1aWx0eSBhdCB0cmlhbC4uIApHcnViYiwgQS4sIFR1cm5lciwgRS4gKDIwMTIpLiBBdHRyaWJ1dGlvbiBvZiBibGFtZSBpbiByYXBlIGNhc2VzOiBBIHJldmlldyBvZiB0aGUgaW1wYWN0IG9mIHJhcGUgbXl0aCBhY2NlcHRhbmNlLCBnZW5kZXIgcm9sZSBjb25mb3JtaXR5IGFuZCBzdWJzdGFuY2UgdXNlIG9uIHZpY3RpbSBibGFtaW5nLiBBZ2dyZXNzaW9uIGFuZCBWaW9sZW50IEJlaGF2aW9yLCAxNyg1KSwgNDQzIDQ1Mi4KQmFzZSBvaWxzIGFyZSB2ZWdldGFibGUgb2lscyB0aGF0IGFyZSBuZXV0cmFsICAgc2NlbnRsZXNzIGFuZCBub24gcmVhY3RpdmUgaW4gZ2VuZXJhbC4gVGhlICdzZWVkJyBvaWxzIGFyZSB0aGUgbW9zdCBwb3B1bGFyOiBhcHJpY290IGtlcm5lbCBvaWwsIGdyYXBlc2VlZCBvaWwgYW5kIHNvIG9uLiBUaGV5IGFyZSBmYXIgbGVzcyBleHBlbnNpdmUgdGhhbiB0aGUgZXNzZW50aWFsIG9pbHMsIHNvIHlvdSBjYW4gYnV5IHRoZW0gaW4gbGFyZ2VyIGJvdHRsZXMuIEV2ZW4gb2xpdmUgb2lsIHdpbGwgd29yayBpbiBhIHBpbmNoLgpJdCdzIGVhc2llciBpZiBwZW9wbGUgY2FuIHRlbGwgd2hvIHRoZSBzYW5kYm94IGJlbG9uZ3MgdG8gYnkgcmVhZGluZyB0aGUgdGl0bGUuUmF0aW5nIG1vZHVsZXMgYXJlIGRpc2FibGVkIG9uIHRoZSBzYW5kYm94LiBXaGlsZSB0aGUgbW9kdWxlIHdpbGwgYXBwZWFyIGlmIHRoZSBjb2RlIGlzIHByZXNlbnQsIG5vIG9uZSBjYW4gdm90ZSBvbiB0aGVtLi4gCkpPVklDSEVWSUNILCBHZW9yZ2UgICBHZW9yZ2UgSm92aWNoZXZpY2gsIGFnZWQgNzgsIGRpZWQgcGVhY2VmdWxseSBhdCBob21lIG9uIFN1bmRheSwgQXVndXN0IDUsIDIwMTguIEdlb3JnZSB3aWxsIG5ldmVyIGJlIGZvcmdvdHRlbiBieSB0aG9zZSB3aG8ga25ldyBoaW0uIEhlIGxpdmVkIGhpcyBsaWZlIHRvIHRoZSBmdWxsZXN0LCBkb2luZyBleGFjdGx5IHdoYXQgaGUgd2FudGVkIHRvIGRvLiBHZW9yZ2UgcGxheWVkIGZvb3RiYWxsIGZvciB0aGUgTG9uZG9uIExvcmRzIGZvciAxMyB5ZWFycyBkdXJpbmcgd2hpY2ggdGltZSBoZSBtZXQgTWFyeSwgaGlzIHdpZmUgb2YgNTQgeWVhcnMgd2l0aCB3aG9tIGhlIHNoYXJlZCB0d28gY2hpbGRyZW4sIEJyb25jbyAoQ29yZW5lKSBhbmQgSmlsbCAoVGltIFBvdHRlcikuIApUaGUgcmVzaWRlbnQgZGllZCBhYm91dCA4IG9yIDkgbW9udGhzIGxhdGVyIHdpdGhvdXQgaW5jaWRlbnQgYW5kIGxpZmUgbW92ZWQgb24uIApBY3R1YWxseSBnb29kIG5ldGNvZGUgY29tcGFyZWQgdG8gUFVCRywgYSBqdW1wIG1hc3RlciBzbyB0aGUgZ3JvdXAgY2FuIGRyb3AgdG9nZXRoZXIsIGFiaWxpdHkgdG8gcGluZyB0aGUgbG9jYXRpb24gb2YgZW5lbWllcyBhbmQgaXRlbXMgaW5zdGVhZCBvZiBqdXN0IGNhbGxpbmcgY29tcGFzcyBkaXJlY3Rpb25zLCBhdHRhY2htZW50cyB0aGF0IGF1dG9tYXRpY2FsbHkgc3dpdGNoIHRvIHlvdXIgbmV3IHdlYXBvbiwgYW4gaW52ZW50b3J5IHN5c3RlbSB3aXRoIGljb25zIHRoYXQgdGVsbHMgeW91IHdoYXQgeW91IGFscmVhZHkgaGF2ZSwgcG9wdXBzIHdoZW4geW91IHBpY2t1cCBhbiBpdGVtIHRoYXQgdGVsbCB5b3UgaG93IG11Y2ggaW52ZW50b3J5IHNwYWNlIHlvdSBoYXZlIGxlZnQsIG5vdCBoYXZpbmcgdG8gZHJhZyBpdGVtcyBmcm9tIHRoZSBncm91bmQgaW50byB5b3VyIGludmVudG9yeSwgdm9pY2UgbGluZXMgdGVsbGluZyB5b3Ugd2hlbiB0aGUgY2lyY2xlIGlzIGNsb3NpbmcsIHZvaWNlIGxpbmVzIHRlbGxpbmcgeW91IHdoZW4geW91IGZpbmlzaGVkIGtpbGxpbmcgYSBzcXVhZC4gSSBzdXJlIHRoZXJlIG1vcmUgdGhhdCBJIGNhbiB0aGluayBvZiBhdCB0aGUgbW9tZW50LgpNYWd1aXJlIGF0dG9ybmV5LCBSb2JlcnQgQmFydGEsIGRpZCBub3QgaW1tZWRpYXRlbHkgcmV0dXJuIGEgcGhvbmUgbWVzc2FnZSBzZWVraW5nIGNvbW1lbnQgYnV0IHdhcyBleHBlY3RlZCB0byBmaWxlIGEgcmVzcG9uc2UgdG8gdGhlIHN1aXQgbGF0ZXIgdGhpcyB3ZWVrLgpTaSBsZSBtb21lbnQgZXN0IHBlc2FudCwgc3RyZXNzYW50IGR1IGZhaXQgZGUgcmVsYXRpb25zIHBldSBzZXJlaW5lcyBhdmVjIGxlcyBhdXRyZXMgY29udml2ZXMsIGplIHNhaXMgcXVlIGNlbGEgYXJyaXZlLCBzb3lleiAgbCdjb3V0ZSBkZSBjZSBxdWUgdm91cyByZXNzZW50ZXosIGRlIGNlIHF1aSBzZSBwYXNzZSBlbiB2b3VzIGV0IGVzc2F5ZXosIHNpIHBvc3NpYmxlLCBkZSBuZSBwYXMgdm91cyByZnVnaWVyIGRhbnMgbGUgdHJvcCBwbGVpbiBkZSBub3Vycml0dXJlLgpBdCBhIGxvdyByaWdodCBub3cgYW5kIGl0IGdvaW5nIHRvIHRha2UgYSB3aGlsZSB0byBnZXQgb3ZlciB0aGlzLCBNYXJ0aW4gdG9sZCBQb3N0bWVkaWEgTmV0d29yayBkdXJpbmcgYSBwaG9uZSBpbnRlcnZpZXcuIApEYXZpZCBtYWRlIGEgbGl2aW5nIHNlbGxpbmcgZnVybml0dXJlIGFuZCBkb2luZyBsYW5kc2NhcGluZy95YXJkIG1haW50ZW5hbmNlLiBCb3RoIERhdmlkIGFuZCBNYXJpbGxhIGVhcm5lZCB0aGVpciBCYWNoZWxvcidzIGRlZ3JlZXMgYXQgU1VVLi4gCkl0IGNvbWVzIHdpdGggcHJvcHJpZXRhcnkgdGFibGUgZHJhdyBvZmYgbWVjaGFuaXNtLCBzcGVjaWFsIHBva2VyIGF0dGFjaG1lbnQgZm9yIGNoaXBzLCBoaWdoIHNwZWVkIGNvbGxhciBzeXN0ZW0gdG8gaGFuZGxlIHZhcmlldHkgb2YgcGFja2luZyBmaWxtcy4gCkJhcm5hcmQgQ2hhcGVsLCBKQUNLU09OIEFORCBCQVJOQVJEIEZVTkVSQUwgSE9NRSAsIDIzMyBMYXJjaCBTdC4sIFN1ZGJ1cnksIEZyaWRheSwgRGVjZW1iZXIgMjB0aCwgMjAxMyBhdCAxMTozMGFtLiAoRnJpZW5kcyBtYXkgY2FsbCAyIDU7IDcgOXBtIFRodXJzZGF5IG9yIGFmdGVyIDEwOjMwYW0gRnJpZGF5LikgSW50ZXJtZW50IGluIHRoZSBDaXZpYyBNZW1vcmlhbCBDZW1ldGVyeS4gCkl0IGlzIGNvbWZvcnRhYmxlIGFuZCBJIHRoaW5rIGl0IGRpZCBoZWxwIHdpdGggbXkgcG9zdHVyZSBhbmQgYmFjayBwcm9ibGVtcyB3aGljaCB3YXMgbXkgbWFpbiByZWFzb24gb2YgYnV5aW5nIGl0LiAKWW91IHdhbnQgYXJvdW5kIDYwIGJ1Y2tzIGZvciBpdD8gTGlzdCBmb3IgNjUuIApZb3Ugb25seSBmbG9wIGEgcGFpciAxLzNyZCAoaXNoKSBvZiB0aGUgdGltZSwgc28gaXQgZ29pbmcgdG8gYmUgaGFyZCB0byBjb250aW51ZSBqdXN0IHdoZW4geW91IGhpdC40KSBDIGJldCBtb3JlIHdoZW4gT09QICBkZXBlbmRzIG9uIHRoZSBzdGFrZXM7IGF0IGxvd2VyIHN0YWtlcyBpdCBwcm9iYWJseSBkb2VzbiBtYXR0ZXIgbXVjaC5Zb3UgbmVlZCB0byBzdGFydCB0aGlua2luZyBhIGJpdCBtb3JlIHRob3JvdWdobHkgYWJvdXQgdGhlIGdhbWUsIHRob3VnaC4gCkl0IHdpbGwgYmUgdXNlZCB0byBob3VzZSBib3RoIHRoZSBtZW50YWxseSBlbGwgYW5kIHRoZSBtZW50YWxseSBpbmZpcm0uIAoiVGhpcyBncm91cCBpcyBlYWdlciB0byBnZXQgYmV0dGVyIGV2ZXJ5IHNpbmdsZSBkYXkgYW5kIHRoYXQgZ29lcyB0byB0aGUgY2hhcmFjdGVyIG9mIHRoZSBncm91cCwiIGhlIGNvbnRpbnVlZC4gIkkgdGhpbmsgaXQncyB3aGVyZSB3ZSB3ZXJlIGEgY291cGxlIG9mIHllYXJzIGFnby4gTGFzdCB5ZWFyLCBJIHRoaW5rLCBpbiB0aGUgcHVyc3VpdCBvZiBjaGFtcGlvbnNoaXBzLCB0byB0cnkgdG8gYmFjayB1cCB0aGUgY2hhbXBpb25zaGlwcywgd2UgZ290IGEgbGl0dGxlIGJpdCBvdXRjb21lIG9yaWVudGVkIGFuZCBub3QgZW5vdWdoIHByb2Nlc3Mgb3JpZW50ZWQuIgpJZiBhbiBhcnRpc3QgbWFrZXMgcG9wdWxhciBtdXNpYyB0aGVpciBlbnRpdGxlZCB0byBwcmFpc2UgZnJvbSB0aGVpciBhdWRpZW5jZSBpbiB0ZXJtcyBvZiBoYXZpbmcgdGhlbSBhcyB0aGVpciBhdWRpZW5jZS4gClRoZSBudW1iZXIgb2YgZWxkZXJseSBwZW9wbGUsIGVzcGVjaWFsbHkgdGhlIGdlbmVyYXRpb24gb2YgYmFieSBib29tZXJzIGlzIGdyb3dpbmcgcmFwaWRseS4gCkFzIGEgUmVpa2kgTWFzdGVyL1RlYWNoZXIsIEkgaGVhciBhIGxvdCBvZiBzdHJhbmdlIGJlbGllZnMgYW5kIG1pc2NvbmNlcHRpb25zIGFib3V0IFJlaWtpLiAKT25lIHN0b3J5LCBwb3NzaWJseSBjbG9zZXIgdG8gdGhlIHRydXRoLCBoYXMgWWFuZyBMdSBDaGFuIHZpc2l0aW5nIHRoZSB2aWxsYWdlIG9mIENoZW5qaWFrb3UsIEh1bmFuIHByb3ZpbmNlLCBDaGluYSwgaW4gdGhlIDE5dGggQ2VudHVyeSwgd2hlcmUgaGUgZm91bmQgdGhleSBwcmFjdGlzZWQgYSBmb3JtIG9mICdzb2Z0JyBtYXJ0aWFsIGFydC4gSGUgbGVhcm5lZCB0aGlzIGFydCwgYW5kIHRhdWdodCBpdCB0byB0aGUgc29tZXdoYXQgZWZmZXRlIG1lbWJlcnMgb2YgdGhlIE1hbmNodSBDb3VydC4gCkEgbG90IG9mIHRoZSB0aW1lLCB0aGUgc3VidGV4dCBvZiB0aGUgam9rZSBpcyB0aGF0IGRpc2FibGVkIHBlb3BsZSBhcmUgZWl0aGVyIG9ibm94aW91cyBvciBzdHVwaWQuIApIb3cgYWJvdXQgQW1lcmljYT8gWW91IGNhbiBzYXkgYW55dGhpbmcgYW5kIHlvdSBhcmUgcHJvdGVjdGVkLgpJZiB5b3UgYXJlIGRvaW5nIHNvbWV0aGluZyBwcm9hY3RpdmUgYWJvdXQgaXQgdGhlbiB5b3Ugd2lsbCBmZWVsIG1vcmUgaW4gY29udHJvbCBhbmQgeW91IHdpbGwgZmVlbCBsaWtlIHlvdSBhcmUgYXQgbGVhc3Qga25vd2xlZGdlYWJsZSBvciBncm93aW5nIHlvdXIga25vd2xlZGdlIGJhc2Ugb24gdGhlIHRhc2sgYXQgaGFuZCBpbnN0ZWFkIG9mIGxldHRpbmcgeW91ciB3b3JyeSBzbm93YmFsbCBpbnRvIGFueGlldHkgYW5kIHRoZW4gYW4gYW54aWV0eSBhdHRhY2suIApTb21lIHRpcHMgdGhhdCB3aWxsIGhlbHAgeW91IHdpbiBvbmxpbmUgcG9rZXIgd2l0aG91dCBsb3NpbmcgbXVjaCBkb3VnaCBieSByZXZlYWxpbmcgbXl0aHMgYWJvdXQgb25saW5lIHBva2VyIHNvIHRoYXQgeW91IHN0b3AgYmFua2luZyBvbiB0aGVtLiAgcG9rZXIgd2lucyB5b3UgbW9yZSBjYXNoIHRoYW4gbGl2ZSBwb2tlci4gClBhcmFkaXNlIEJlYXV0eSBQYXJsb3VyCkFyZSB5b3Ugb25lIG9mIHRoZSBtYW55IHdobyB3b25kZXIgaG93IHRvIHBsYXkgVGV4YXMgSG9sZCdlbT8gTWFueSBwb2tlciBmYW5zIHdvdWxkIHJlY29tbWVuZCBwcmFjdGljaW5nIHdpdGggdGhlIENhc2lubyBIb2xkJ2VtIGdhbWUsIHdoaWNoIHlvdSBjYW4gZmluZCBpbiBqdXN0IGFib3V0IGFueSBvbmxpbmUgY2FzaW5vIGFuZCBwbGF5IGZvciBmcmVlLiAKRm9yIG1lIHBlcnNvbmFsbHksIHRoZSBncm91cCBwaG90byB3aGVyZSBzaGUgZG9pbmcgdGhlIHNxdWF0IHBvc2Ugd2FzIHdoZXJlIGl0IGZlbHQgbGlrZSBpdCB3YXMgYSBjb3N0dW1lIHRvIGhlciAoYW5kIHRoZW4gSSBnb3QgYW4gaW5ib3ggb2YgImJ1dCBpdCBwYXBhIGJsZXNzIG1lbWUiLCB3aGljaCBvaywgdGhhdCBhIHRoaW5nLCBidXQgdmlzdWFsbHkgcmVtaW5kcyBtZSBvZiB0aGUgIk9oaGhoIGNvbmZ1Y2l1cyBzYXkgdGhpcyEiIGNhcnRvb255IG5vbnNlbnNlKS4KSSBrbm93IHRoYXQgYWxsIHRoaXMgcG9rZXIgdGFsayBoYXMgZ290IHlhIGl0Y2hpbicgdG8gdGhyb3cgc29tZSBjaGlwcyBhcm91bmQuIEFsbCB5b3UgbmVlZCBpcyBhbiBlIG1haWwgYWRkcmVzcyB0byBwbGF5IGZvciBmcmVlIGluIHlvdXIgYnJvd3NlciBhdCBUaGVGcmVlUG9rZXJSb29tLgpJIHRoaW5rIEkgYWN0dWFsbHkgbWFraW5nIHNvbWUgbWlzdGFrZXMgb24gdGhlIHR1cm4gYnkgbm90IGJhcnJlbGluZyBjb21ib3MgdGhhdCB3b3VsZCBiZSBnb29kIHJpdmVyIGJsdWZmIGNhbmRpZGF0ZXMgb24gdGhpcyBjYXJkIHNwZWNpZmljYWxseS4gCkonYWkgZW4gcGFydGljdWxpZXIgYWRvciBsZSBwbGF0IHByaW5jaXBhbCwgIGJhc2UgZGUgaGFyaWNvdHMgcm91Z2VzLCBxdWkgbidlc3QgcGFzIHZyYWltZW50IHVuIGRlIG1lcyBtZXRzIHByZnJzLCBkZXMgIkZyaWpvbGVzIENoYXJyb3MiLCB1bmUgc29ydGUgZGUgc291cGUgcGFpc3NlIGF2ZWMgaGFyaWNvdHMgcm91Z2VzLCBjaG9yaXpvLCBjb2Nob24sIG9pZ25vbnMsIHBpbWVudC4uIApTbywgdGhlIHRvdGFsIGJlY29tZXMgNTI1MTUwNDk0OC8xMjAgPSAyNTk4OTYwLiBOb3RlIHRoaXMgaXMganVzdCAoNTIgY2hvb3NlIDUpLiBOb3cgdGhhdCB3ZSBrbm93IHRoZSBudW1iZXIgb2YgcG9zc2libGUgaGFuZHMsIHdlIHNpbXBseSBkaXZpZGUgdGhlIG51bWJlciBvZiByb3lhbCBmbHVzaGVzICg0KSBieSB0aGUgYWJvdmUgMjU5ODk2MDogNC8yNTk4OTYwID0gMC4wMDAwMDE1MzksIHRoZSBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIGEgcm95YWwgZmx1c2ggaW4gdGhlIGZpcnN0IDUgY2FyZHMgb2ZmIHRoZSBkZWNrLiAKV2hlbiBjaG9vc2luZyBhIHRhYmxlLCBpdCBpcyBhbHNvIGltcG9ydGFudCB0byBlbnN1cmUgdGhhdCB5b3UgY29uc2lkZXIgdGhlIGFtb3VudCBvZiBwZW9wbGUgdGhhdCB3aWxsIGJlIHVzaW5nIHlvdXIgdGFibGUgb24gYSByZWd1bGFyIGJhc2lzLiBZb3Ugd2lsbCB3YW50IHRvIGVuc3VyZSB0aGF0IHlvdSBtYWtlIHN1cmUgdGhhdCB0aGUgdGFibGUgaGFzIHJvb20gZm9yIGFsbCBvZiB0aGUgcGVvcGxlIHRoYXQgcmVndWxhcmx5IHZpc2l0IHlvdSBmb3IgcG9rZXIgZ2FtZXMgYW5kIGl0IGlzIGEgZ29vZCBpZGVhIHRvIGhhdmUgYSBsaXR0bGUgZXh0cmEgcm9vbSBhcyB3ZWxsLgpBbmQgaXQgaXMgc3RydWdnbGluZyB0byBvZmZsb2FkIHRoZSBsaWNlbmNlcyBiZWNhdXNlIG90aGVyIGNsdWJzIGFuZCBwdWJzIGluIHRoZSBzdGF0ZSBhcmUgaW4gdGhlIHNhbWUgcG9zaXRpb24uIApEZWNpc2lvbiBtYWtpbmcgdW5kZXIgbWVudGFsIHByZXNzdXJlIGlzIGV4cGxvcmVkIGluIHRoaXMgc2FtcGxlLiBEdXJpbmcgcGVyZm9ybWFuY2UgYW4gYXRobGV0ZSBlbmNvdW50ZXJzIGEgd2lkZSBhcnJheSBvZiBtZW50YWwgcHJlc3N1cmVzOyB0aGVzZSBpbmNsdWRlIHRoZSBwc3ljaG9sb2dpY2FsIGltcGFjdCBvZiBlcnJvcnMsIG5lZ2F0aXZlIGZlZWRiYWNrLCBhbmQgcmVxdWlyZW1lbnRzIGZvciBzdXN0YWluZWQgYXR0ZW50aW9uIGluIGEgZHluYW1pYyBlbnZpcm9ubWVudCAoQW5zaGVsIGFuZCBXZWxscywgMjAwMDsgTWVsbGFsaWV1IGV0IGFsLiwgMjAwOSkuIApJIGRpc2NvdmVyZWQgdGhpcyB0b3RhbGx5IGJ5IGFjY2lkZW50LiBJIHRyaWVkIGEgbGVnYWwgImRydWciIHRoZXkgc2VsbCBhdCBzZXggc2hvcHMgKEkgZ290IGl0IHRoYXQgc2FtZSBuaWdodCB3aXRoIG15IGV4IGJlZm9yZSBJIGtuZXcgc2hlIHdvdWxkIGhhdmUgYWNjZXNzIHRvIGFsbCB0aGUgb3RoZXIgc2hpdCkuIE9uIHRoZSB3YXkgaG9tZSBJIGhhZCBhIGJhZCBoYW5nb3ZlciBhbmQgc28gSSBzdG9wcGVkIGFuZCBnb3Qgc29tZSBlcGhlZHJpbmUgYXMgSSB1c2VkIHRvIGFsd2F5cyBkbyBpZiBJIHdhcyByZWFsbHkgc2xlZXB5LiAKU2FpZCBJIGFza2VkIGhlciB0byB0YWtlIHRoZW0gZG9uZSwgdGhhdCBJIGhhZG4gZ2l2ZW4gaGVyIHBlcm1pc3Npb24gdG8gdXNlIHRoZW0sIGFuZCBwcm92aWRlZCBsaW5rcyBmb3Igd2hlcmUgc2hlIHN0b2xlIHRoZW0gZnJvbS4gCkJ1dCBpbiB0aGUgZ3JhbmQgc2NoZW1lIG9mIHRoaW5ncywgSSdtIHZlcnkgcHJvdWQgb2Ygd2hhdCB3ZSBkaWQgdGhpcyB3ZWVrLiAKVGhleSBoYXZlbiBiZWVuIG15IHBhcnRuZXJzLCBmb3J0dW5hdGVseS4gClRoZSBpbnRlbnRpb24gYmVoaW5kIHRoaXMgaXMgdG8gZ3JhbnQgYWNjZXNzIG9mIG15IHRoZXJhcHkgdG8gZXZlcnlvbmUgcmVnYXJkbGVzcyBvZiB0aGVpciBpbmNvbWUuLiAKVGhlIFBvcnR1Z3Vlc2UgY2hhbXBpb25zIHRyYWlsZWQgYXQgdGhlIGJyZWFrIGJ1dCBhbiBpbnNwaXJlZCBzZWNvbmQgaGFsZiBkaXNwbGF5IHB1dCBQb3J0byBvbiB0aGUgYnJpbmsgb2YgYSBwbGFjZSBpbiBuZXh0IG1vbnRoJ3MgZmluYWwgaW4gRHVibGluLgpUaGUgZmluYWwgZXZlbnQgaXMgYSAzIGRheSBldmVudCBzdGFydGluZyBvbiBKdWx5IDIsIGFmdGVyIHdoaWNoIHBsYXllcnMgZW50ZXIgdGhlIGNoYW1waW9uc2hpcCByb3VuZHMgZnJvbSBKdWx5IDV0aC4gVGhlIGZpcnN0IE9tYWhhIEhpIExvdyBzcGxpdCA4IG9yIEJldHRlciBldmVudCwgYSAzIGRheSBhZmZhaXIsIGJlZ2lucyBvbiBTdW5kYSBNYXkgMzB0aC4gCkluc3VyYW5jZSBjbGFpbXMgZm9ybXMgd2VyZSBleGFtaW5lZCBmb3IgYWxsIHZpc2l0cyBzcGVjaWZpZWQgYnkgdGhlIHBhdGllbnQgYXMgb2NjdXJyaW5nIGZvciBiYWNrIHBhaW4uLiAKVGhlIG5ldyBoYXJkIGxpbmUgc3RhbmNlIGZvciBiZXR0ZXIgcHJpY2luZyBpcyB0aGUgcmVzdWx0IG9mIHN0cm9uZyBkZW1hbmQsIGxpbWl0ZWQgY2FwYWNpdHkgYW5kIGEgcmVmb2N1cyBvbiBzaGFyZWhvbGRlciBpbmZsdWVuY2UsIGV4cGVydHMgc2F5LgpUaGV5IGNhbiBzdGFydCB3aGF0ZXZlciB2ZW50dXJlIHRoZXkgd2FudCBhbmQgaWYgaXQgZmFpbHM/IFN0YXJ0IGEgbmV3IG9uZS4gCkl0IHdvdWxkIGFsbW9zdCByZXNvcnQgdG8gZ3VlcmlsbGEgc3R5bGUgdGFjdGljcyBhbmQgaW5zdXJnZW5jeSwgbm90aGluZyByZWFsbHkgbmV3IGhlcmUuIApJdCBsaWtlIHRoYXQgc29uZy4gCkFkYW0gQm9xdmlzdCBuZXh0IGdvYWwgd2lsbCBwdXQgaGltIGF0IDIwLCBhIG5pZnR5IGZlYXQgZm9yIGEgU3dlZGlzaCBpbXBvcnQgaW4gaGlzIGZpcnN0IE9ITCBzZWFzb24uIApSb2RnZXJzIGluIGEgc2ltaWxhciB3YXkgdG8gdGhlIHJlZGlzY292ZXJ5IG9mIEJvYiBSb3NzIGluIHRoZSBsYXN0IGZldyB5ZWFycy4gVGhlIGZpbG0gaXMgYSBjcml0aWNhbCBkYXJsaW5nIGFuZCBhIGRvbWVzdGljIGJveCBvZmZpY2Ugc21hc2guIAoyMjAgcGFnZXMsIGludHJpZXVyIG5vaXIgYmxhbmNMJ29sZmFjdG90aHJhcGllIGVzdCB1bmUgbXRob2RlIHF1aSBpbnRncmUgdGFudCBsYSBwcm9wcml0IHZvbGF0aWxlIGRlcyBodWlsZXMgZXNzZW50aWVsbGVzIGV0IGRlcyBlc3NlbmNlcyBxdWUgbGV1cnMgY2FwYWNpdHMgIGFnaXIgZ2xvYmFsZW1lbnQgc3VyIGxhIHNwaHJlIHBzeWNobyBtb3Rpb25uZWxsZSBkZSBsJ3RyZSBodW1haW4uIApNb3Jlb3ZlciwgdGhlcmUgc2VlbXMgdG8gYmUgbm8gY2xlYXIgb3IgZGlyZWN0IGVhcmx5IGFuY2VzdG9yIG9mIHRoZSBnYW1lLiAKQXMgYSByZXN1bHQsIGFsaWVuYXRlZCBzaG9wcGVycyBkaWQganVzdCAiZ28sIiBhbmQgdGhlIGJyYW5kIGxvc3Qgc2lnbmlmaWNhbnQgdm9sdW1lIG92ZXJuaWdodC4gCktvYmxlbnogaW4gb25lIGluc3RydWN0aW9uIHNoZWV0IHNheXM6T25lIHNtYWxsIHByb2JsZW0uIApQaHJvenRieXQzIHUKTXlsZXMnIGZhbWlseSBtZW1iZXJzICAgaW5jbHVkaW5nIHR3byByZXRpcmVkIGNvcnJlY3Rpb24gb2ZmaWNlcnMgICBhdHRlbmRlZCBoaXMgYXJyYWlnbm1lbnQgU2F0dXJkYXkgYWZ0ZXJub29uLCBjb3VydCBvZmZpY2lhbHMgc2FpZC4KVGhlIHNlbGYgZGVzY3JpYmVkICJhdmVyYWdlIEFzaWFuIHRydW1wZXQgcGxheWVyIHR1cm5lZCByYXBwZXIgdHVybmVkIGFjdHJlc3MsIiB3YXMgYSBicmVha291dCBzdGFyIG9mIDIwMTguIEFzIGFuIGFjdHJlc3MsIHNoZSBwbGF5ZWQgdGhlIHphbnkgZnJpZW5kIGluICJDcmF6eSBSaWNoIEFzaWFucyIgYW5kIGEgcGlja3BvY2tldCBpbiAiT2NlYW4ncyA4LCIgc3RlYWxpbmcgc2NlbmVzIGluIGJvdGggbW92aWVzLiBBcyBhIHJhcHBlciwgc2hlIHJlbGVhc2VkICJJbiBGaW5hIFdlIFRydXN0LCIgYWZ0ZXIgeWVhcnMgb2YgbWFraW5nIHByb2ZhbmUgYW5kIGhpbGFyaW91cyB2aXJhbCByYXAgdmlkZW9zIGluIGhlciB0cmFkZW1hcmsgcmFzcHkgdm9pY2UuIApPZiBjb3Vyc2UgdGhlIHJlZ2ltZSB3b3VsZCBoYXZlIG1hZGUgZXZlcnkgZWZmb3J0IHRvIGluZG9jdHJpbmF0ZSBjaGlsZHJlbiBsaWtlIHlvdXIgYXVudCwgdG8gdHVybiB0aGVtIGludG8gbG95YWwgY2l0aXplbnM6IHRoZSBsYXN0IHRoaW5nIHRoZXkgd291bGQgaGF2ZSB3YW50ZWQgd291bGQgaGF2ZSBiZWVuIHRvIGxldCB5b3VyIGdyYW5kcGFyZW50cyByYWlzZSBoZXIgdG8gaGF0ZSB0aGUgR2VybWFucy4KRG9taW51c0ViYWQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpZb3UgYXJlIHRyeWluZyB0byBtZXJnZSB0d28gZGlmZmVyZW50IGNvbmNlcHRzOiBzdHJhdGVneSBhbmQgdGFjdGljcyBpbnRvIG9uZSBjb25jcmV0ZSBwbGFuLiBUaGlzIGNhbnQgYmUgZG9uZSBiZWNhdXNlIGFzIHlvdSBoYXZlIGVsdWRlZCB0bzogZGlmZmVyZW50IHZpbGxhaW5zIHBsYXkgZGlmZmVyZW50IHN0eWxlcy4gCllvdSBhbGwgbmV2ZXIgZmlnaHQsIG5ldmVyIGhhdmUgY3Jvc3Mgd29yZHMsIHlvdSBoYXZlIG5vIHJhcGlzdHMgYW5kIG11cmRlcmVycywgeW91IGhhdmUgbm8gc3R1cGlkIHBlb3BsZS4gCkFuZCB0aGVuIGxvb2sgYXQgTUlMLCB3aG8gaXMgc28gc25pdmVsaW5nIGFuZCBiaXR0ZXIgdGhhdCBzaGUgY291bGRuIGJlIGhhcHB5IGZvciBoZXIgb3duIHNvbiBhbmQgZGF1Z2h0ZXIgaW4gbGF3IG9uIHRoZWlyIHdlZGRpbmcgZGF5LiBBbmQgc2hha2UgeW91ciBoZWFkIGluIHBpdHkgYW5kIHNheSAiWW91IGhhdmUgbm8gcG93ZXIgb3ZlciBtZS4iIFNheSBpdCB1bnRpbCB5b3UgYmVsaWV2ZSBpdCwgc2F5IGl0IHVudGlsIGl0IHNvIHRydWUgdGhhdCBpdCBkb2VzbiBuZWVkIHNheWluZyBhbnltb3JlLiBBbmQgbGV0IGhlciBwYXRoZXRpYyBodXNrIGRyaWZ0IGF3YXkgb24gdGhlIGJyZWV6ZS4uIApUaGUgT0FBIGlzLCBhY2NvcmRpbmcgdG8gR29vZ2xlLCAiYSBnbG9iYWwgYWxsaWFuY2Ugb2YgdGVjaG5vbG9neSBhbmQgYXV0byBpbmR1c3RyeSBsZWFkZXJzIGNvbW1pdHRlZCB0byBicmluZ2luZyB0aGUgQW5kcm9pZCBwbGF0Zm9ybSB0byBjYXJzIHN0YXJ0aW5nIGluIDIwMTQuIiBBbHRob3VnaCBHb29nbGUgZG9lc24ndCBzcGVjaWZpY2FsbHkgZnJhbWUgdGhlIHNpdHVhdGlvbiBhcyBhIG1hdHRlciBvZiBjb21wZXRpdGlvbiBvciBjb25mbGljdCwgb3IgZXZlbiBhZGRyZXNzIGl0cyByaXZhbHMgYnkgbmFtZSwgaXQncyBjbGVhciB0aGF0IGdhaW5pbmcgbWFya2V0IHNoYXJlIHdvdWxkIGJlIGEgYmVuZWZpdCBvZiB0aGUgT0FBJ3Mgc3VjY2Vzcy4gVGhpcyBtZWFucyB0aGF0IGV2ZW4gaWYgQXBwbGUgaGFzIGEgbGVhZCBvbiB2ZWhpY2xlIGludGVncmF0aW9uLCBHb29nbGUgYW5kIEFuZHJvaWQgYXJlIHBsYW5uaW5nIHRvIGZpZ2h0IGJhY2ssIGFuZCB0aGV5IGFscmVhZHkgaGF2ZSBhIGdyb3VwIG9mIGF1dG8gbWFudWZhY3R1cmVycyB3aG8gd2FudCB0byB1c2UgdGhlaXIgaW5ub3ZhdGlvbnMgaW4gbmV3IGNhciBtb2RlbHMuIFRoZSBmaXJzdCBtZW1iZXJzIHRvIGpvaW4gR29vZ2xlIGluIHRoZSBPQUEgd2VyZSBhdXRvIG1hbnVmYWN0dXJlcnMgQXVkaSwgR2VuZXJhbCBNb3RvcnMsIEhvbmRhIGFuZCBIeXVuZGFpLCBhbmQgdGhlIGNvbXB1dGVyIGNoaXAgbWFrZXIgTlZJRElBLiBCdXQgdGhlIGJhdHRsZSBpc24ndCBlbnRpcmVseSBhYm91dCB3aXJlbGVzcyBkZXZpY2VzIGFueW1vcmUuIEdvb2dsZSBpc24ndCBjb250ZW50IHdpdGggc2ltcGx5IHN5bmNpbmcgc21hcnRwaG9uZXMgICB0aGUgY29tcGFueSB3YW50cyB0byBnZXQgaXRzIHRlY2hub2xvZ3kgbXVjaCBkZWVwZXIgaW50byB0aGUgY2FyLgpJbnRlcmVzdGluZy4gVGhlIGxhc3QgcmVwb3J0IGhlIGZpbGVkIG9uIGhpcyBjb21taXR0ZWUncyBiYWxsb3QgcXVlc3Rpb24gYWN0aXZpdHkgd2FzIGluIE1hcmNoLiAKSWYgdGhlIGdvdmVybm1lbnQgcHJvdmlkZXMgbm8gdW5lbXBsb3ltZW50IGJlbmVmaXQgYW5kIHlvdSBwdXQgYXdheSA0JSBvZiB5b3VyIHNhbGFyeSBpbnRvIGEgYmFuayBhY2NvdW50IGluIGNhc2UgeW91IGxvc2UgeW91ciBqb2IsIHRoYXQgaXMgd2VhbHRoLiBIb3dldmVyLCBpZiB5b3UgbG9zZSB5b3VyIGpvYiwgdGhlIDQlIG9mIHlvdXIgaW5jb21lIHRoYXQgeW91IHB1dCBhd2F5IG1pZ2h0IG5vdCBjb3ZlciBleHBlbnNlcyBhcyB3ZWxsIGFzIHRoZSAyJSB0aGUgZ292ZXJubWVudCBoYXMgcHV0IGF3YXkgZnJvbSBldmVyeW9uZSB0byBzcHJlYWQgdGhlIHJpc2sgb3ZlciBtb3JlIHBlb3BsZS4gClNvIHNlbGVjdGlvbiBvZiBjaGFubmVsIGlzIGRlcGVuZHMgb24gdGhlIG1lc3NhZ2UgYW5kIHJlY2VpdmVyLiBGb3IgbG9uZyBkaXN0YW5jZSB3ZSB1c3VhbGx5IHVzZSB0aGUgZWxlY3Ryb25pYyBmb3JtIG9mIGNvbW11bmljYXRpb24uIE9uZSBvZiB0aGUgYWR2YW50YWdlcyBvZiB0aGlzIHR5cGUgb2YgY29tbXVuaWNhdGlvbiBpcyB2ZXJ5IGZhc3QuIApJJ3ZlIHdvcmtlZCBpbiByZXRhaWwgbXkgZW50aXJlIGxpZmUgYW5kIG1vcmUgcmVjZW50bHkgaW4gdGhlIGxlZ2FsIGNhbm5hYmlzIGluZHVzdHJ5LiAKSWYgdGhlIHR3byBvZiB0aGVtLCBhbmQgdGhlaXIgYmFzZXIgaW1wdWxzZXMgc3RhcnRzIHRvIHdlYXIgb24gdGhlIHZpZXdlciBhZnRlciBhIHdoaWxlLCB0aGVyZSBhbHdheXMgYSB3aW5kb3cgdG8gbG9vayBvdXQgb2YuIEZsZWNrIGFuZCBCb2RlbiBwYWludHMgYW4gaW50ZXJzdGF0ZSBJbnRlcnN0YXRlIHBvcnRyYWl0IG9mIHRoZSBoZWFydCBvZiBBbWVyaWNhLgpJZiB5b3UgZG8gbGlrZSBpdCwgSSB0aGluayBpdCB3YXMgJDMuMTcgZm9yIGV2ZXJ5dGhpbmcgKEMyNUssIDVLIHRvIDEwSywgSGFsZiBNYXJhdGhvbiwgTWFyYXRob24gYW5kIEZhc3RlcjVLIHByb2dyYW1zKS4gSSBsaWtlZCBpdCBhbmQgbmV2ZXIgaGFkIGFueSBpc3N1ZXMgd2l0aCBpdCBjcmFzaGluZyBsaWtlIHNvbWUgb2YgdGhlIG90aGVyIGFwcHMuLiAKQWdhaW4sIEknbGwgdHJ5IHRvIHJlcGx5IHRvIGV2ZXJ5b25lIGJ1dCB0aGF0IGNvdWxkIHRha2UgYSB3ZWVrLCBJIGRvIGhhdmUgb3RoZXIgdGhpbmdzIHRvIGRvLgpJZiB5b3UgZmVlbCBhIHNoYXJwIHBhaW4gd2hlbiB5b3UgYml0ZSBkb3duLCBmb3IgaW5zdGFuY2UsIHlvdSBtYXkgaGF2ZSBhIGNhdml0eSwgYSBsb29zZSBmaWxsaW5nLCBhIGNyYWNrZWQgdG9vdGgsIG9yIGRhbWFnZWQgcHVscCAodGhhdCdzIHRoZSBpbm5lciBjb3JlIG9mIHRoZSB0b290aCB0aGF0IGNvbnRhaW5zIHRoZSBibG9vZCB2ZXNzZWxzIGFuZCBuZXJ2ZXMpLiAKSSBiZWVuIHJlYWRpbmcgYSBib29rIGNhbGxlZCBDYW5vbiBSZXZpc2l0ZWQgYnkgTWljaGFlbCBLcnVnZXIuIEluIGl0LCBoZSByZXZpZXdzIHZhcmlvdXMgY2Fub25pY2FsIGNyaXRpY2FsIG1ldGhvZHMsIGFuZCBhcnRpY3VsYXRlcyB3aGF0IEkgZm91bmQgdG8gYmUgYSBjb21wZWxsaW5nIHBvaW50LiAKU28gYWZ0ZXIgYWxsIHRoaXMgYW5kIHRvIGV2ZXJ5b25lJ3MgYW1hemVtZW50IEkgd2FzIHN0aWxsIGF0IHRoZSBjYXNpbm8gYXQgNmFtIFN1bmRheSBtb3JuaW5nIGFuZCB0aGF0J3Mgd2hlbiBpdCBhbGwgaGFwcGVuZWQuIApJdCBub3QgdGhhdCBoYXJkIHRvIGZpbGwgb3V0IHBhcGVyd29yayBhbmQgdGhlIGRvY3RvciBjYW4gZ2V0IGludG8gc29tZSB0cm91YmxlIGZvciBub3Qgd29ya2luZyB3aXRoIGEgZmVkZXJhbCBjb21wYW55IGlmIGl0IGlzIFNTSS4uIApJbmRlZWQsIGNsZXZlcmx5IGRlc2lnbmVkIHdpbmRvd3Mgb24gdGhlIHBhY2thZ2UgcmV2ZWFsIHBhc3RlbCBwYWNrZXRzIGluc2lkZSwgYSBjdWUgdG8gY2F0ZWdvcnkgbm9ybXMuIFRodXMgYSBuZXcgdG8gdGhlIGNhdGVnb3J5IGJyYW5kIGVmZmVjdGl2ZWx5IGNvbW11bmljYXRlcyB0byBjb25zdW1lcnMgYnkgYmVpbmcgYm90aCBkaWZmZXJlbnRpYXRlZCBmcm9tIHRoZSBjYXRlZ29yeSBhbmQgcmVsZXZhbnQgYXQgdGhlIHNhbWUgdGltZS4uIApMYWR5IEdhR2EpLCBHcmVhdGVzdCwgSG9sbHl3b29kIFtMaXZlQXQgdGhlIEJpdHRlciBFbmQgMS8yMC8wNl0gLFNvbWV0aW1lcyAuIDkzKSAzIFdheSAoVGhlR29sZGVuIFJ1bGUpIFtmZWF0LiAKRG9udCBwbGF5IHBva2VyIHdpdGggU2hhcmFwb3ZhCklmIHlvdSBqdXN0IGdvdCBBTUEsIEFpcm1pbGVzLCBDb3N0Y28sIGV0YyBwYXNzZXMsIHRoZW4ganVzdCBicmluZyB0aGUgcmVjZWlwdCB3aXRoIHRoZSBiYXJjb2RlLCBhbmQgeW91ciBwaWN0dXJlIElELCBhbmQgdGhlIHNhbWUgcHJvY2VzcyBhYm92ZSBhcHBsaWVzIChvdGhlciB0aGFuIGJyaW5naW5nIHlvdXIgcGFzc3BvcnQpLgpJayB6ZWcgOiAnR2VsZCB0cmVrdCBhbGxlcyByZWNodCB3YXQga3JvbSBpcycuIFdJSiBXSUxMRU4gTlUhIFdJSiBXSUxMRU4gTlUhIFdJSiBXSUxMRU4gTlUhIFdhdCB2b29yIGRlIGthbiBtb2V0IG9vayB2b29yIGRlIGFuZGVyIGt1bm5lbiB3YW50IG1pam4ga2luZGVyZW4gZW4gbWlqbiBlY2h0Z2Vub3RlIHppZW4gbWlqIG9vayBncmFhZyBlbiB3aWxsZW4gbWUgZXZlbm1pbiB6aWVuIGFmdGFrZWxsZW4gZW4gc3RlcnZlbi4gSWsgYmVuIG9vayBub2cgbWFhciAzNiBqYWFyLiBrZXJlbiBuaWV0IHRlcnVnIG5hYXIgQmVsZ2kgdm9vciBkb2t0ZXIgSHVhbmcgb25zIHplZ3QgZGF0IGhpaiBvbnplIEphbiBzbmVsIGthbiBvcGVyZXJlbiB6ZWd0IEphbnMgYnJvZXIgUmFmICgyMykgZGllIG1lZXJlaXN0LCBzYW1lbiBtZXQgZWVuIHZyaWVuZCBlbiBlZW4gQ2hpbmVzZSBrZW5uaXMuIEphbiBoZWVmdCBnZWVuIGRhZyB0ZSB2ZXJsaWV6ZW4uIE51IGZ1bmN0aW9uZWVydCBoaWogbm9nIG5vcm1hYWwuIEFscyBoaWogb3AgZGUgd2FjaHRsaWpzdCBtb2V0IGdhYW4gc3RhYW4sIHppam4gd2UgcnVpbSBlZW4gamFhciB2ZXJkZXIgZW4gemFsIGRlIHppZWt0ZSB0ZSB2ZXIgemlqbiBnZXZvcmRlcmQuIFdlIHdpbGxlbiBkYXQgZGUgZG9rdGVyIEphbiBuIHN0YWJpbGlzZWVydC4KV2VzdCBDb2FzdCBBbWVyaWNhbiBoZXJlLiBCZWVuIHRvIDM5IG9mIHRoZSA1MCBzdGF0ZXMgYW5kIGludGVyYWN0ZWQgd2l0aCBhIHZhc3QgcmFuZ2Ugb2YgcGVvcGxlLiBFdmVuIGhhZCBhIHByaXZhdGUgY2F0aG9saWMgaGlnaCBzY2hvb2wgbmVhciB3aGVyZSBJIHdlbnQgdG8gSFMuIE5ldmVyIGhlYXJkIG9mIG9yIHNlZW4gc29tZW9uZSBwcmFjdGljaW5nICdhc2ggV2VkbmVzZGF5LicKU21lcmtzMTAxICAxIHBvaW50ICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCldoZW4gSm9obiBBYnJhaGFtIGdvdCBjYXJyaWVkIGF3YXkgaW4gYSBzZXggc2NlbmUgd2l0aCBLYW5nYW5hIFJhbmF1dCBsZWF2aW5nIGhlciBicnVpc2VkQXBwYXJlbnRseSwgSm9obiBnb3QgY2FycmllZCBhd2F5IGluIG9uZSBvZiB0aGUgc2NlbmVzIGFuZCBsZWZ0IEthbmdhbmEgYnJ1aXNlZCBhbmQgYmxlZWRpbmcuIEl0IHdhcyB0aGUgYmFuZ2xlcyB0aGF0IHRoZSBhY3RyZXNzIHdvcmUgd2hpY2ggbWFkZSBjdXRzIG9uIHRoZWlyIChib3RoIGFjdG9ycykgaGFuZHMuCkNhbiB5b3UgdmVyYmFsbHkgc3VycmVuZGVyIHlvdXIgaGFuZCBpbiBwb2tlcj8KQSBwcm9ncmFtbWluZyBjb21wZXRpdGlvbi9leGVyY2lzZS4gCkl0IGRpcmVjdGx5IGluZmx1ZW5jZXMgaG93IG11Y2ggeW91IHdpbiBvbiB0b3RhbCwgbm90IGp1c3Qgb24gdGhhdCBvbmUgc3RyZWV0Li4gClRoZXJlIHdhcyBubyBzaW5nbGUgVUsgcmVjb3JkIGNoYXJ0IHVudGlsIHRoZSBtaWQgMTk2MHMuIFdoaWxlIHRoZSBhYm92ZSBzdGF0ZW1lbnQgaXMgdHJ1ZSwgdGhlcmUgd2VyZSBpbmRpY2F0b3JzIGFzIHRvIEJyaXRpc2ggc29uZyBwb3B1bGFyaXR5IGRhdGluZyBmcm9tIHRoZSAxOTMwcy4gRWFzaWVyIHRvIGFuc3dlciBpcyBXSEFUIHdhcyBOdW1iZXIgT25lIGluIE9jdG9iZXIgMTk0OS4gSW5mb3JtYXRpb24gcmVsZWFzZWQgaW4gMjAxMyBzdGF0ZSB0aGF0IHRoZSBiZXN0IHNlbGxpbmcgVUsgcmVjb3JkcyB0aGF0IG1vbnRoIHdlcmUgQmluZyBDcm9zYnkncyAiVGhlIExhc3QgTWlsZSBIb21lIiBhbmQgQW50b24gS2FyYXMnICJIYXJyeSBMaW1lIChUaGlyZCBNYW4pIFRoZW1lIi4gKEZ1bGwgQW5zd2VyKQpJIGtub3cgYSBiaXQgYWJvdXQgYnVybGVzcXVlLiBJbiBmYWN0LCBpbiBUaGUgRW5jeWNsb3BlZGlhIG9mIFNleCBhbmQgR2VuZGVyLCBJIHdyb3RlIHRoZSBlbnRyeSBvbiBidXJsZXNxdWUuCkZvcnR1bmF0ZWx5LCB0aGVyZSBpcyBhIHBvdGVudGlhbCBzb2x1dGlvbiB0byB0aGUgd2VsbG5lc3MgbWFkbmVzcy4gSWYgeW91J3JlIGRldGVybWluZWQgdG8gbWFrZSB5b3VyIGhlYWx0aGdvYWxzIGhhcHBlbiwgZml0bmVzcyB0cmFja2VycyB3aXRoIGhlYXJ0IHJhdGUgbW9uaXRvcnMgY2FuIGJlIGEgbWFqb3IgaGVscC4gVGhlc2Ugd2VhcmFibGUgZGV2aWNlcyBhcmUgZ2FtZSBjaGFuZ2VzIGZvciBrZWVwaW5nIHRhYnMgb24gcGh5c2ljYWwgYW5kIG1lbnRhbCB3ZWxsYmVpbmcuIApJIGdvdCBpbnRvIHRoZSBtZWRpb2NyZSB1bml2ZXJzaXR5LCBvbiB0aGUgc2Vjb25kIHJvdW5kLiAKTmljY29sLCB3aG8gcHJldmlvdXNseSByYW4gVGFjbyBCZWxsLCBoYXMgc2FpZCBoZSB0aG91Z2h0IENoaXBvdGxlIG5lZWRlZCB0byBiZWNvbWUgbW9yZSB2aXNpYmxlLiBIZSBicm91Z2h0IGluIGFub3RoZXIgZm9ybWVyIFRhY28gQmVsbCBleGVjdXRpdmUsIENocmlzIEJyYW5kdCwgYXMgQ01PIHRvIGhlbHAgbGVhZCB0aGUgZWZmb3J0LgpMYXJnZSB3aW5kb3cgbG9va3Mgb250byB0aGUgYmFjayBwYXRpbyBzbyBpZiB0aGUga2lkcyBhcmUgcGxheWluZyBvdXQgdGhlcmUsIG9yIHlvdSBoYXZlIGd1ZXN0cywgeW91IGNhbiBvcGVuIHRoZSB3aW5kb3cgYW5kIHNwZWFrIHdpdGggdGhlbSwgc2F5cyBIYXdrLCBhZGRpbmcgdGhhdCB0aGUgcG9zaXRpb25pbmcgb2YgdGhpcyAyNTAgc3F1YXJlIGZvb3QgcGF0aW8gbWFrZXMgdGhlIGtpdGNoZW4gZmVlbCBsYXJnZXIgdGhhbiBpdCBpcy4uIApBcyBmb3IgeW91ciBvd24gdGFua3MgcmFuZ2UsIGtlZXAgcGxheWluZyBhbmQgcGF5IGF0dGVudGlvbiB0byBpdCBlYWNoIGdhbWUsIG92ZXIgdGltZSB5b3UgZ2V0IGEgYmV0dGVyIGZlZWwgZm9yIHRoZSBkaXN0YW5jZS4uIApUaXRsZTogQmxhY2sgV2hpdGUgQnVzaGlkbwpMYXMgVmVnYXMgZ2FkZ2V0IHNob3cgZWRnZXMgY2xvc2VyIHRvIGdlbmRlciBlcXVpdHkKUGxlYXNlIGRvIG5vdCBsaW5rIHRvIHlvdXIgYmxvZywgb3RoZXIgYWN0aXZlIFJlZGRpdCB0aHJlYWRzLCBvciBzb2NpYWwgbWVkaWEgcGFnZXMuIApCYXNlZCBvbiB0aGlzIGluZm9ybWF0aW9uLCBpdCBjYW4gZ2l2ZSB5b3UgYWR2aWNlIGhvdyB0byBwbGF5IGEgaGFuZC4gSXQgZ2l2ZXMgeW91IGFkdmljZSBvYmplY3RpdmVseSBhbmQgeW91IGFyZSBmcmVlIHRvIGFjY2VwdCBpdCBvciBkZW55IGl0LiAKTWFzc2FnZSB0aGVyYXB5IGlzIGdyZWF0IHdoZW4geW91IGFyZSBlbW90aW9uYWxseSBjaGFyZ2VkIGZyb20gYSBoYXJkIGRheSBhdCB3b3JrLCBwaHlzaWNhbGx5IHdvcm4gb3V0IGZyb20gdG9vIG11Y2ggZXhlcmNpc2UsIHN1ZmZlcmluZyBmcm9tIG1pZ3JhaW5lcywgdHJ5aW5nIHRvIHF1aXQgc21va2luZyBvciBqdXN0IHRyeWluZyB0byBtYWludGFpbiBhIGhlYWx0aHkgbGlmZXN0eWxlIGJ5IHRha2luZyBnb29kIGNhcmUgb2YgeW91ciBib2R5LiBXaGV0aGVyIHlvdSBoYXZlIGNocm9uaWMgYmFjayBwYWluLCBvciBhcmUgc2ltcGx5IHVzaW5nIGl0IGFzIGEgd2F5IHRvIGtlZXAgeW91ciBib2R5IHdvcmtpbmcgYXQgaXRzIGJlc3QsIHRoZSBiZW5lZml0cyBvZiByZWd1bGFyIG1hc3NhZ2UgYXJlIGVuZGxlc3MhClRoZWlyIGlzIGJyYW5kIG1hbmFnZW1lbnQuSXQgaXMgaGlnaGx5IGxpa2VseSBMdWtha3Ugc2lnbmVkIGZvciB0aGUgZnVsbCBzZXJ2aWNlLiBXZSBhbGwga25vdyBpbiBhIGZldyBkYXlzLlJvYmluc29uIENhbm86IFdobyB3YXMgdHJhZGVkIHRvIFNlYXR0bGUgYW5kIGdvdCBhIG1heCBkZWFsIHZpYSBSb2MgTmF0aW9uLiJBbmQgdGhlIG1hbiB3aG8gbWFkZSAidGhlIFlhbmtlZSBoYXQgbW9yZSBmYW1vdXMgdGhhbiBhIFlhbmtlZSBjYW4iIGhhcyBraWNrZWQgdGhpbmdzIG9mZiBieSBzaWduaW5nIGEgWWFua2VlOiBSb2JpbnNvbiBDYW5vLCB0aGUgWWFua2VlcyBBbGwgU3RhciBzZWNvbmQgYmFzZW1hbi4gCldoZW4gYSByb2xsZG93biB3YXMgYW5ub3VuY2VkLCBKZXJyeSBzcHJhbmcgaW50byBhY3Rpb24uIApUbyByZWxlYXNlIHRpZ2h0IHNwb3RzIGluIHRoaXMgbXVzY2xlLCB1c2UgeW91ciB0aHVtYiBhbmQgZmlyc3QgMiBmaW5nZXJzIHRvIHB1c2ggaW50byBzb3JlIHNwb3RzIGFsb25nIHRoZSBvdXRzaWRlIG9mIHlvdXIgcmlicy4gQnJlYXRoZSBkZWVwbHkgb3Igcm9jayBmcm9tIHNpZGUgdG8gc2lkZSB0byBzdHJldGNoIHJlbGVhc2UgdGhpcyBtdXNjbGUuLiAKaGVyYmVzIGRlIGxhIHNhaW50IGplYW4KTUlOTkVBUE9MSVMgICBBcyB0aGVpciBkZWxpcmlvdXMgZmFucyBzYW5nIHRoZWlyIHRoZW1lIHNvbmcgYW5kIHRoZWlyIG93bmVyIGxpZnRlZCB0aGUgTG9tYmFyZGkgVHJvcGh5LCB0aGUgUGhpbGFkZWxwaGlhIEVhZ2xlcycgZmluYWxseSBjb3VsZCBicmVhdGhlIGZyZWVseS4KQWdyZWVkLCBhbmQgeW91IGFsc28gc2VlIHRoaXMgaW4gdGhlIHJpc2luZyBjb3N0IG9mIGVkdWNhdGlvbi4gU2luY2UgdGhlIGFsdGVybmF0aXZlcyBhcmUgbGVzcyBhbmQgbGVzcyBwYWxhdGFibGUsIG1vcmUgYW5kIG1vcmUgcGVvcGxlIHJlZ2FyZCBjb2xsZWdlIGFuZCBwcm9mZXNzaW9uYWwgZGVncmVlcyBhcyB0aGUgb25seSByb3V0ZSB0byB0aGUgZ29vZCBsaWZlLiBEZW1hbmQgZ29lcyB1cCwgcHJpY2Ugc2Vuc2l0aXZpdHkgZG93biwgYW5kIHByaXZhdGUgY29sbGVnZSB0dWl0aW9uIGhpdHMgJDUwSyAvIHllYXIuIApEb24ndC4gT25seSB0b3VjaCB5b3VyIG93biBjYXJkcyBhbmQgY2hpcHMuIE90aGVyIHBsYXllcnMnIGNoaXBzIGFuZCBjYXJkcywgZGlzY2FyZHMsIGJvYXJkIGNhcmRzLCB0aGUgcG90IGFuZCBldmVyeXRoaW5nIGVsc2UgYXJlIG9mZiBsaW1pdHMuIEl0IGlzIGN1c3RvbWFyeSBmb3IgdGhlIHdpbm5lciBvZiBlYWNoIHBvdCB0byB0aXAgdGhlIGRlYWxlciA1MCBjZW50cyB0byBhIGRvbGxhciwgZGVwZW5kaW5nIG9uIGxvY2FsZSBhbmQgdGhlIHN0YWtlcy4gU29tZXRpbWVzIHlvdSB3aWxsIHNlZSBwbGF5ZXJzIHRpcCBzZXZlcmFsIGRvbGxhcnMgZm9yIGEgYmlnIHBvdCBvciBhbiBleHRyZW1lbHkgdW5saWtlbHkgc3VjayBvdXQuIFNvbWV0aW1lcyB5b3Ugd2lsbCBzZWUgcGxheWVycyBzdGlmZiB0aGUgZGVhbGVyIGlmIHRoZSBwb3Qgd2FzIHRpbnkgb3Igc3BsaXQgYmV0d2VlbiB0d28gcGxheWVycy4gSWYgeW91IGFyZSB0aGUgdmljdGltIG9mIHN1Y2ggYSBtaXN0YWtlLCBjYWxsIGl0IG91dCBpbW1lZGlhdGVseSBhbmQgZG8gbm90IGxldCB0aGUgZ2FtZSBwcm9jZWVkLiBJZiB5b3VyIG9wcG9uZW50IGlzIHRoZSB2aWN0aW0sIGxldCB5b3VyIGNvbnNjaWVuY2UgYmUgeW91ciBndWlkZTsgbWFueSBzZWUgbm8gZXRoaWNhbCBkaWxlbW1hIGluIHJlbWFpbmluZyBzaWxlbnQuIElmIHlvdSBhcmUgbm90IGludm9sdmVkIGluIHRoZSBwb3QsIHlvdSBtdXN0IGp1ZGdlIHRoZSB0ZXh0dXJlIG9mIHRoZSBnYW1lIHRvIGRldGVybWluZSB3aGV0aGVyIHRvIHNwZWFrIHVwLiBJbiBnZW5lcmFsLCB0aGUgaGlnaGVyIHRoZSBzdGFrZXMsIHRoZSBtb3JlIGxpa2VseSB5b3Ugc2hvdWxkIGtlZXAgeW91ciBtb3V0aCBzaHV0LgpCdXQgaXQganVzdCBzbyBoYXBwZW5zIHRoYXQgQ2hyaXN0eSBhbmQgSmFrZSBtb3RoZXJzIGFyZSBiZXN0IGZyaWVuZHMuIFRoYXQgd2h5IHdoZW4gSmFrZSBzdXJwcmlzZWQgaGVyIGJ5IGFza2luZyBoZXIgdG8gdGhlIHByb20sIENocmlzdHkgZm91bmQgaGVyc2VsZiBzYXlpbmcgeWVzLiAKVGhlcmUgYXJlIHRpbWVzIHdoZXJlIEkgd2lsbCBnZXQgYW4gYW54aWV0eSBhdHRhY2sgZHVlIHRvIGEgc2l0dWF0aW9uIG9yIHRob3VnaHQgYW5kIGZlZWwgZXhhY3RseSBob3cgeW91IGRvLiAKT25jZSB5b3UgZ2V0IGEga25hY2sgZm9yIEdvb2dsaW5nIHN0dWZmIGl0IGJhc2ljYWxseSBESVkgYW5kIHlvdSBiZSBmaW5lLiAKVGhlX01pZ2h0eV9Hb3BoZXIgIDIyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwoiV2hhdCBraW5kIG9mIG1hc3NhZ2UgZG8geW91IHdhbnQ/IiBoZSBzYXlzIHRvIHRoZW0uICJEZWVwIHRpc3N1ZT8gU3dlZGlzaD8gT25lIGhvdXI/IgpGb3IgZXhhbXBsZTogdGhlIHJlY2VudCBDaGluYSBkcmFtYS4gV2UgYXBwcm92ZWQgZXZlcnkgcG9zdCB0aGF0IG1ldCBvdXIgcnVsZXMsIHN0YXRlZCBzbyBwdWJsaWNseSwgYW5kIGxldCB0aGUgY29tbXVuaXR5IHRha2Ugb3ZlciB0aGUgZnJvbnQgcGFnZSBmb3IgMiBkYXlzLiBXZSBkaWRuIGRlbGV0ZSBhbGwgb2YgaXQgbGlrZSBvdGhlciBzdWJzLCBhbmQgd2UgZGlkbiB0aHJvdyB0b2dldGhlciBvciBhbHRlciBvdXIgcnVsZXMgcXVpY2tseSB0byBtYWtlIGl0IGdvIGF3YXkuCkFzIHNvbWVvbmUgd2hvIGdvdCBpbnRvIHJ1bm5pbmcgZm9yIHRoZSBzb2xlIHJlYXNvbiBvZiBzdHJlc3MgcmVsaWVmIGFuZCBtZW50YWwgaGVhbHRoLCBJIHJlYWxseSB0aGluayB0aGF0IGVhY2ggaW5kaXZpZHVhbCB3aWxsIGhhdmUgdGhlaXIgb3duIGFuc3dlci4gRm9yIG1lIHBlcnNvbmFsbHksIEkgdGhpbmsgdGhhdCB3aGlsc3QgYSA1LzEwS00gaGFzIGdyZWF0IGJlbmVmaXRzIGZvciBteSBtb29kLCBpdCBub3QgdW50aWwgSSBiZWVuIG9uIG15IGZlZXQgZm9yIGFuIGhvdXIgb3IgbW9yZSB0aGF0IEkgcmVhbGx5IGZlZWwgdGhlIG1lbnRhbCBnYWlucy4uIApIb3cgb2Z0ZW4gZG8geW91IHRyYWNrIHRoZSBhY3Rpb25zIG9mIHlvdXIgb3Bwb25lbnRzLCBndWVzc2luZyB3aGF0IGhlIGlzIGhvbGRpbmcgYmVnaW5zIGJ5IHJlYWRpbmcgaGlzIGJldHMuIE9mdGVuIHBsYXllcnMgZm9yZ2V0IHdobyBhY3R1YWxseSByYWlzZWQgb3IgY2hlY2tlZCBpbiB0aGUgRmxvcCBvciBQcmUgRmxvcC4gS2VlcCBhIGNsb3NlIGV5ZSBvbiB0aGUgYmV0dGluZyBpbiB0aGUgZWFybHkgcm91bmRzIGFuZCB1c2UgdGhpcyBpbmZvcm1hdGlvbiB0byBhZGQgdG8gaW4gbGF0ZXIgcm91bmRzLi4gClN1cmUsIHZpcmdpbiBzaGFtaW5nIGlzIHJlbGV2YW50IG5vIG1hdHRlciB5b3VyIHNleHVhbCBvcmllbnRhdGlvbiwgYnV0IHRoYXQgZG9lc24gbWVhbiB0aGF0IHRoZSBleHBlcmllbmNlIGlzIHRoZSBzYW1lIGZvciBldmVyeW9uZS5JIHRvdGFsbHkgZGlzYWdyZWUgdGhhdCBoYXZpbmcgdGhpcyB2aWV3cG9pbnQgc2hhcmVkIHdpbGwgbWVhbiB0aGF0IG5vIG9uZSBpcyBnb2luZyB0byB0YWxrIGFib3V0IHRoZSBlZmZlY3RzIHZpcmdpbiBzaGFtaW5nIGhhcyBvbiBub24gYXNleHVhbCBtZW4uQmFzaWNhbGx5LCBpZiB5b3Ugd2FudCB0byBoYXZlIGEgbm9uIGFzZXh1YWxpdHkgZm9jdXNlZCBkaXNjdXNzaW9uIG9mIHZpcmdpbiBzaGFtaW5nLCBwbGVhc2UgZWl0aGVyIGZpbmQgYSByZWxldmFudCBhcnRpY2xlIGFuZCBwb3N0IGl0LCBvciBjcmVhdGUgYSBzZWxmIHBvc3QgdG8gZ2FybmVyIGRpc2N1c3Npb24uIApJdCBpc24ndCBmdW5ueSBmb3IgZmFucywgZXZlbiB0aG91Z2ggdGhlIG1vcmUgcmVhc29uYWJsZSBvbmVzIGRvIHRyeSB0byBtYWtlIGxpZ2h0IG9mIHRoZSByZW1hcmthYmxlIHN0cmluZyBvZiBpbmp1cmllcyB0aGF0IGhhdmUgYmVmYWxsZW4gaGltIGFjcm9zcyBmaXZlIHllYXJzIGluIHBpbnN0cmlwZXMgICBhIGNocm9ub2xvZ2ljYWwgbGlzdDogc3RyYWluZWQgY2FsZiwgc3RyYWluZWQgaGFtc3RyaW5nLCBzdHJhaW5lZCBvYmxpcXVlICh0d2ljZSksIHNwcmFpbmVkIGtuZWUsIGJydWlzZWQgd3Jpc3QsIHRpZ2h0IGhpcCwgY29uY3Vzc2lvbiwgdG9ybiBsYWJydW0uIApBbmQganVzdCB3aGVuIEkgdGhvdWdodCBJIG5ldmVyIGNvdWxkIG1ha2UgaXQsIEkgZGlkLiAKQXBwbGljYXRpb24gZGVwbG95bWVudCBzdHJhdGVnaWVzIGFyZSBkaXNjdXNzZWQgYW5kIHdlIHNlZSBob3cgdG8gdXNlIEFXUyBFbGFzdGljIEJlYW5zdGFsayB0byBxdWlja2x5IGRlcGxveSBhbmQgdXBkYXRlIGFwcGxpY2F0aW9uIGNvZGUuIFRoZW4gc3R1ZGVudHMgZm9jdXMgb24gcGVyZm9ybWFuY2UgYnkgaW50cm9kdWNpbmcgQ29udGVudCBEZWxpdmVyeSBOZXR3b3JrcyAoQ0ROcykgYW5kIGFwcGxpY2F0aW9uIGNhY2hlIHRvIHRoZSBzb2x1dGlvbi4gCkVuZ2FnaW5nIGluIGZvcmVwbGF5IG9yIGV2ZW4gaW50ZXJjb3Vyc2UgYmVmb3JlIHRyeWluZyBhbmFsIHNleCBmb3IgdGhlIGZpcnN0IHRpbWUgY2FuIGhlbHAgeW91IHJlbGF4LiAKVHdpdHRlciBmb2xsb3dlcnMgY2FuIHBhcnRpY2lwYXRlIGluIHRoZSBjb252ZXJzYXRpb24gYWJvdXQgUmFmYSdzIHBva2VyIHBsYXlpbmcgYnkgdXNpbmcgbmFkYWxwb2tlci4uIApJdHMgc3R1ZGVudHMgYWxzbyBjb25zaXN0ZW50bHkgc2NvcmUgaGlnaGx5IG9uIG51bWVyb3VzIG5hdGlvbmFsIGFuZCBpbnRlcm5hdGlvbmFsIG1hdGggYW5kIHNjaWVuY2UgY29udGVzdHMuLiAKTWluaW1pemUgY3VtdWxhdGl2ZSBuZWdhdGl2ZSBlZmZlY3RzIGFuZCBpbmNyZWFzZSBwb3NpdGl2ZSwgcHJvdGVjdGl2ZSBmYWN0b3JzLiBFYXQgYSBoZWFsdGh5IGRpZXQgd2l0aCBQcmltYWwgZG9zZXMgb2YgcHJvYmlvdGljcywgcHJlYmlvdGljcyBhbmQgZ29vZCBmYXRzLiAKSXQgZG9lc24ndCBjaGVjayBvdXQgd2l0aCBhbnkgb3RoZXIgY3JlZGlibGUgc291cmNlcy4gCkhpZXIgRm90b3MgZGVyIFRyYW5zdnVsY2FuaWEgMjAxMyBzb3dpZSBlaW4gc2NobmVzIFZpZGVvLiAKVGhlIGZvcm1lciBWaXRhbCBPdWVsbGV0dGUgaG91c2UsIGxvY2F0ZWQgb24gdGhlIDEwMCBibG9jayBvZiBDaGF0aGFtIFN0LiBFYXN0IGluIGRvd250b3duIFdpbmRzb3IsIGlzIHBpY3R1cmVkIFRodXJzZGF5LCBNYXJjaCA3LCAyMDE5LgpCZWluZyBhIHBsYWNlIGZvciBhY3Rpb24sIHRoZWlyIGdhbWVzIGFyZSBvZiBzdXBlciBncmFwaGljcyB0aHVzIGxvYWQgb2YgYWN0aW9uIGlzIGV4cGVjdGVkLiAKIllvdW5nIHBlb3BsZSBpbiBwYXJ0aWN1bGFyIGFyZSBiZWNvbWluZyBhY2NsaW1hdGlzZWQgdG8gdGhlIHZpZXcgdGhhdCBldmVyeXRoaW5nIGlzIGFuIG9wZW4gbWFya2V0IGZvciBnYW1ibGluZyBvbiwiIHRoZSBTeWRuZXkgTW9ybmluZyBIZXJhbGQgcXVvdGVkIE1vbmFzaCBVbml2ZXJzaXR5IGdhbWJsaW5nIGV4cGVydCBDaGFybGVzIExpdmluZ3N0b25lLCBhcyBzYXlpbmcuClRoZSBoZWFkIGNvYWNoIHNldHMgdGhlIGZvcndhcmQgbGluZXMgYmVmb3JlIGVhY2ggZ2FtZSwgYmFzZWQgb24gYSBudW1iZXIgb2YgZmFjdG9ycywgc3VjaCBhcyBpbmp1cmllcywgd2hvIGhhcyBiZWVuICJob3QiIGFuZCB3aG8gaGFzIG5vdCBiZWVuIHBsYXlpbmcgd2VsbC4KSWYgeW91IGxpa2UgYmVlciBhbmQgd2FudCB0byB0cnkgc29tZXRoaW5nIGRpZmZlcmVudCBmb3IgZGlubmVyIEkgcmVjb21tZW5kIHRoZSBUcmFwcGUgRG9vci4gClNsYXZlbiBhbmQgU2hhdyBhbmQgdGhlaXIgUGFpbiBhbmQgU3ltcHRvbSBNYW5hZ2VtZW50IFRlYW0gYXQgdGhlIEp1cmF2aW5za2kgQ2FuY2VyIENlbnRyZSwgSmFuZSBMYW5nbG90eiBhbmQgaGVyIFBhbGxpYXRpdmUgQ2FyZSBUZWFtIGF0IHRoZSBMSElOLCB0aGUgY2FyaW5nIFBTVydzIGZyb20gSG9tZSBJbnN0ZWFkLCBhbmQgdGhlIHdvbmRlcmZ1bCBzdGFmZiBhdCB0aGUgRW1tYW51ZWwgSG91c2UgSG9zcGljZS4gWW91IGFsbCBwcm92aWRlZCBoZXIgY29tZm9ydCB0byB0aGUgZW5kLiAKTWluaXN0ZXIgZm9yIFNlbmlvcnMgYW5kIEFjY2Vzc2liaWxpdHkgUmF5bW9uZCBDaG8gZGlkIG5vdCByZXNwb25kIHRvIE9ubGV5J3Mgb3RoZXIgcmVjb21tZW5kYXRpb25zLCBidXQgdGhhbmtlZCBoaW0gZm9yIHRoZSByZXBvcnQuClRoYXQgaW5jbHVkZXMgbG90cyBvZiBzZW5zaXRpdmUgYW5kIGNsYXNzaWZpZWQgc3R1ZmYgdGhhdCBpcyBub3cgaW4gdGhlIGhhbmRzIG9mIGZvcmVpZ24gZ292ZXJubWVudHMuLiAKIkVpbGVlbiIgZG9lc24gd2FudCB1cyB0byBzaG93IGhlciBmYWNlIG9yIGdpdmUgaGVyIHJlYWwgbmFtZSBidXQgc2hlIGRvZXMgd2FudCBwZW9wbGUgdG8ga25vdyBob3cgaWxsZWdhbCB2aWRlbyBnYW1pbmcgaGFzIHJpcHBlZCBoZXIgZmFtaWx5IGFwYXJ0LiBTaGUgYWRtaXRzLCAiSSBoYXZlIHBhd25lZCB0byBnbyBnYW1ibGluZy4gV2hlbiBJIHJhbiBvdXQgb2YgbW9uZXkgSSB3b3VsZCBzdGFydCBncmFiYmluZyBhbnl0aGluZyBJIGNhbiBnZXQgbXkgaGFuZHMgb24gYW5kIHN0YXJ0IHBhd25pbmcuIgpCb2Igc2VydmVkIGZvciBtYW55IHllYXJzIGFzIHRoZSB0cmVhc3VyZXIgb2YgdGhlIGJvYXJkIG9mIHRydXN0ZWVzLCBhbmQgaW4gbWFueSBvdGhlciBsZWFkZXJzaGlwIHJvbGVzLCBjYXJlZnVsbHkgc2hlcGhlcmRpbmcgdGhlIGZpbmFuY2VzIG9mIHRoZSBjaHVyY2guIApNZWlzdGVyIHUKRWRpdG9yJ3MgTm90ZTogVGhlIGd1dCBicmFpbiBheGlzIGFuIGltYWdpbmFyeSBsaW5lIGJldHdlZW4gdGhlIGJyYWluIGFuZCB0aGUgZ3V0IGlzIG9uZSBvZiB0aGUgbmV3IGZyb250aWVycyBvZiBuZXVyb3NjaWVuY2UuTWljcm9iaW90YSBpbiBvdXIgZ3V0LCBzb21ldGltZXMgcmVmZXJyZWQgdG8gYXMgdGhlICJzZWNvbmQgZ2Vub21lIiBvciB0aGUgInNlY29uZCBicmFpbiwiIG1heSBpbmZsdWVuY2Ugb3VyIG1vb2QgaW4gd2F5cyB0aGF0IHNjaWVudGlzdHMgYXJlIGp1c3Qgbm93IGJlZ2lubmluZyB0byB1bmRlcnN0YW5kLlVubGlrZSB3aXRoIGluaGVyaXRlZCBnZW5lcywgaXQgbWF5IGJlIHBvc3NpYmxlIHRvIHJlc2hhcGUsIG9yIGV2ZW4gdG8gY3VsdGl2YXRlLCB0aGlzIHNlY29uZCBnZW5vbWUuQXMgcmVzZWFyY2ggZXZvbHZlcyBmcm9tIG1pY2UgdG8gcGVvcGxlLCBmdXJ0aGVyIHVuZGVyc3RhbmRpbmcgb2YgbWljcm9iaW90YSdzIHJlbGF0aW9uc2hpcCB0byB0aGUgaHVtYW4gYnJhaW4gY291bGQgaGF2ZSBzaWduaWZpY2FudCBtZW50YWwgaGVhbHRoIGltcGxpY2F0aW9ucy5hIHNjaWVudGlzdCwgSSBvZnRlbiBmaW5kIG15c2VsZiBjaGF0dGluZyB3aXRoIGZyaWVuZHMgYW5kIG5laWdoYm9ycyBhYm91dCB0aGUgbGF0ZXN0IGFkdmFuY2VzIGluIG5ldXJvc2NpZW5jZS5JbiB0aGUgcGFzdCBmZXcgeWVhcnMgSSBoYXZlIGZvdW5kIG1vcmUgYW5kIG1vcmUgcGVvcGxlIGFza2luZyBhYm91dCBtaWNyb2Jpb3RhIHRoZSBtaWNyb29yZ2FuaXNtcyB0aGF0IHR5cGljYWxseSBpbmhhYml0IGEgYm9kaWx5IG9yZ2FuLkluIHRoZSBsYXN0IDEwIHllYXJzLCBJJ3ZlIGJlZW4gb25lIG9mIG1hbnkgbmV1cm9zY2llbnRpc3RzIGFkdmFuY2luZyBuZXcgaWRlYXMgYWJvdXQgaG93IG1pY3JvYmlvdGEgaW4gdGhlIGd1dCBhZmZlY3RzIGJyYWluIGZ1bmN0aW9uLlRoZSBtZWRpYSBoYXMgdGFrZW4gbm90aWNlIGFzIHdlbGwuUmVjZW50IHN0b3JpZXMgb24gdGhlIGd1dCBicmFpbiBheGlzIGFtb25nIHRoZSBtb3N0IGV4Y2l0aW5nIG5ldyBmcm9udGllcnMgaW4gbmV1cm9zY2llbmNlIGluY2x1ZGUgIlNvbWUgb2YgTXkgQmVzdCBGcmllbmRzIEFyZSBHZXJtcyIgaW4gdGhlIE5ldyBZb3JrIFRpbWVzIE1hZ2F6aW5lIGFuZCAiR3V0IE1pY3JvYmVzIENvbnRyaWJ1dGUgdG8gTXlzdGVyaW91cyBNYWxudXRyaXRpb24iIGluIE5hdGlvbmFsIEdlb2dyYXBoaWMuSW4gMjAxMiwgdGhlIGVkaXRvcnMgb2YgU2NpZW5jZSB0aG91Z2h0IHRoZSByZXNlYXJjaCBpbXBvcnRhbnQgZW5vdWdoIHRvIGRldm90ZSBhIHNwZWNpYWwgaXNzdWUgdG8gdGhlIHRvcGljLldoeSBpcyB0aGUgaXNzdWUgc28gZmFzY2luYXRpbmc/IEZvciBvbmUgdGhpbmcsIGl0J3MgaGVpZ2h0ZW5lZCBjb25zY2lvdXNuZXNzIG9mIGhvdyBkaWV0IGFuZCBudXRyaXRpb24gaW1wYWN0IG91ciBoZWFsdGguRm9yIGFub3RoZXIsIGl0J3Mgc2hlZXIgbnVtYmVycy5PdXIgYnJhaW5zIGNvbnRhaW4gYmlsbGlvbnMgb2YgbmV1cm9ucywgYnV0IHdlIGxlc3Mgb2Z0ZW4gdGFsayBhYm91dCB0aGUgZmFjdCB0aGF0IHRyaWxsaW9ucyBvZiAiZ29vZCIgYmFjdGVyaWEgYXJlIGFsaXZlIGFuZCB3ZWxsIGluIG91ciBpbnRlc3RpbmFsIHRyYWN0cy5SZW1hcmthYmx5LCB0aGVzZSBuYXR1cmFsbHkgb2NjdXJyaW5nLCBldmVyIHByZXNlbnQgY29tbWVuc2FsIGJhY3RlcmlhIG1heSBiZSBpbnN0cnVtZW50YWwgaW4gaG93IG91ciBicmFpbiBkZXZlbG9wcywgaG93IHdlIGJlaGF2ZSwgcmVhY3QgdG8gc3RyZXNzLCBhbmQgcmVzcG9uZCB0byB0cmVhdG1lbnQgZm9yIGRlcHJlc3Npb24gYW5kIGFueGlldHkuV2l0aCBzdWNoIHNlcmlvdXMgbWVudGFsIGhlYWx0aCBpbXBsaWNhdGlvbnMgdG8gY29uc2lkZXIsIHRoZXJlIGlzIHN1YnN0YW50aWFsIGJ1enogYW1vbmcgbmV1cm9zY2llbnRpc3RzIGFib3V0IHRoZSBiaWRpcmVjdGlvbmFsIG5hdHVyZSBvZiB0aGVzZSBzZWVtaW5nbHkgaW5maW5pdGUgcmVsYXRpb25zaGlwcy5JIGFtIGNvbnRpbnVhbGx5IGltcHJlc3NlZCBieSB0aGUgY3JlYXRpdmUgd2F5cyB0aGF0IG15IGNvbGxlYWd1ZXMgYXJlIG1ha2luZyBkaXNjb3ZlcmllcywgZXNwZWNpYWxseSBpbiBob3cgbWljcm9iaW90YSBtYXkgaW5mbHVlbmNlIHRoZSBicmFpbiBhbmQgdGhlIGltbXVuZSBzeXN0ZW0gZHVyaW5nIGVhcmx5IGxpZmUuQW5kIGp1c3QgbGFzdCB3ZWVrIHJlc2VhcmNoZXJzIGF0IFVDTEEgZm91bmQgdGhhdCByZWd1bGFybHkgZWF0aW5nIHlvZ3VydCB3aXRoIHByb2Jpb3RpY3MsIHdoaWNoIGNvbnRhaW4gImdvb2QiIGJhY3RlcmlhLCBzZWVtcyB0byBhZmZlY3QgYnJhaW4gZnVuY3Rpb25pbmcgaW4gd29tZW4uU2NpZW50aXN0cyBoYXZlIHJlY29nbml6ZWQgY29tbXVuaWNhdGlvbiBiZXR3ZWVuIHRoZSBicmFpbiBhbmQgdGhlIGd1dCBmb3IgbW9yZSB0aGFuIDEwMCB5ZWFycywgd2l0aCBzdHVkaWVzIGluIHRoZSBlYXJseSAxOXRoIGFuZCAyMHRoIGNlbnR1cmllcyBzaG93aW5nIHRoYXQgYSBwZXJzb24ncyBlbW90aW9uYWwgc3RhdGUgY2FuIGFsdGVyIHRoZSBmdW5jdGlvbiBvZiB0aGUgZ2FzdHJvaW50ZXN0aW5hbCAoR0kpIHRyYWN0LjEgMyBPbmUgb2YgdGhlIGJlc3QgZXhhbXBsZXMgaXMgdGhlIHdvcmsgb2YgV2lsbGlhbSBCZWF1bW9udCwgYW4gYXJteSBzdXJnZW9uLCB3aG8gYmVjYW1lIGtub3duIGFzIHRoZSAiRmF0aGVyIG9mIEdhc3RyaWMgUGh5c2lvbG9neS4iIEluIHRoZSAxODMwcywgQmVhdW1vbnQsIHdobyB3YXMgYWJsZSB0byBtb25pdG9yIGdhc3RyaWMgc2VjcmV0aW9ucyB0aHJvdWdoIGEgZmlzdHVsYSAoYSBwZXJtYW5lbnQgb3BlbmluZyBpbiB0aGUgc3RvbWFjaCB3YWxsKSwgbm90ZWQgYW4gYXNzb2NpYXRpb24gYmV0d2VlbiBjaGFuZ2luZyBtb29kcyBhbmQgZ2FzdHJpYyBzZWNyZXRpb25zLiBJbiB0aGUgbWlkIHRvIGxhdGUgMTkwMHMsIHJlc2VhcmNoIGV4YW1pbmluZyBzdHJlc3MgYmlvbG9neSBhbmQgaXRzIGltcGFjdCBvbiBodW1hbiBoZWFsdGggdW5jb3ZlcmVkIGNsZWFyIGNvbm5lY3Rpb25zIGJldHdlZW4gYW4gaW5kaXZpZHVhbCdzIHN0cmVzcyByZXNwb25zZSBhbmQgZ3V0IGZ1bmN0aW9uLiBUaGlzIGNsYXNzaWNhbCB2aWV3IG9mIHRvcCBkb3duIGNvbnRyb2wgdGhhdCBpcywgdGhlIGJyYWluJ3MgYWJpbGl0eSB0byBjb250cm9sIGd1dCBmdW5jdGlvbiBpcyBzdXBwb3J0ZWQgYnkgZXZpZGVuY2UgcmV2ZWFsaW5nIHRoYXQgdGhlIGJyYWluIGluZmx1ZW5jZXMgYm9keSBzeXN0ZW1zLCBpbmNsdWRpbmcgdGhlIEdJIHRyYWN0LCB0aHJvdWdoIG5ldXJhbCBjb25uZWN0aW9ucyBvZiB0aGUgYXV0b25vbWljIG5lcnZvdXMgc3lzdGVtIGFuZCB0aHJvdWdoIGh1bW9yYWwgc3lzdGVtcyBpbiB0aGUgYmxvb2RzdHJlYW0uIApFYXN0IG9mIG1haW4uIApBbmQgdGhleSBiZSBsdWNreSB0byBmaW5kIGEgam9iIHdpbGxpbmcgdG8gaGlyZSB0aGVtIGR1ZSB0byB0aGVpciBoaXN0b3J5IG9mIGluY2FyY2VyYXRpb24uIApBbnlvbmUgd2hvIHJlYWxseSBsaWtlcyBteSB3b3JrIHdpbGwgcHJvYmFibHkgc2VhcmNoIG15IHBvcnRmb2xpbyBhbnl3YXkuVW5sZXNzIHlvdSBhcmUgYSBtYWpvciBsZWFndWUgYXJ0aXN0IGxpa2UgU2FraW1pY2hhbiwgd2hvIG5lZWRzIHRvIGNvbnRyb2wgdGhlaXIgSVAgZm9yIGxlZ2FsIGFuZCBmaW5hbmNpYWwgcHVycG9zZXMsIHlvdSBzaG91bGQganVzdCBleHBlY3QgeW91ciBhcnR3b3JrIHRvIGJlIHNoYXJlZCB3aXRob3V0IHlvdXIgY29uc2VudCAod2hpY2ggaXMgd2h5IHlvdSBhbHdheXMgYnJhbmQgdGhlIGFydHdvcmsgY2xlYXJseSkuVW5mb3J0dW5hdGVseSwgdGhlIGxpbmtzIG9yIHBob3RvcyB5b3UgcG9zdGVkIGNvdWxkIGhhdmUgYmVlbiBwb3N0ZWQgYnkgYW55b25lLCBhbmQgdGhleSBkb24gcHJvdmUgdGhhdCB5b3UgYXJlIHRoZSBwZXJzb24gZG9pbmcgdGhlIEFNQS4gCkNocmlzIEJyb3duIGZyaWVuZCBhbmQgb25ldGltZSBtb3ZpZSBjb3N0YXIgTWVraGkgUGhpZmVyIHNheXMgbm8gbWF0dGVyIHdoYXQgaGFwcGVucyBiZXR3ZWVuIEJyb3duIGFuZCBSaWhhbm5hLCBoZSB3aXNoZXMgYm90aCB0aGUgYmVzdC4gbm90IG1ha2luZyBhbnkgYXBvbG9naWVzIGZvciBCcm93bidzIGFsbGVnZWQgYXNzYXVsdCwgUGhpZmVyIHRoaW5rcyBoaXMgYWdlLCAxOSwgd2FzIGEgYmlnIGZhY3RvciBpbiB3aGF0IHdlbnQgZG93biBiZXR3ZWVuIHRoZSB0d28gc2luZ2Vycy4KR2V0IHJlYWR5IGZvciB3ZXN0ZXJuIHN0eWxlIGxpdmluZyBieSBmaXJzdCBjaG9vc2luZyBhIHBhcnRpY3VsYXIgd2VzdGVybiB0aGVtZSB0aGF0IGlzIHRvIHlvdXIgbGlraW5nLiBDb25zaWRlciBhIGNvd2JveSB0aGVtZSBjb21wbGV0ZSB3aXRoIGEgY293Ym95IGhhdCBzd2l0Y2ggcGxhdGUsIGEgd2VzdGVybiBhbnRsZXIgcm9wZSBiYXNrZXQsIGEgc291dGh3ZXN0IGNsb2NrIChpbnN0ZWFkIG9mIHVzaW5nIHRoZSBzdW4gYW5kIG1vb24pLCBhbmQgYSBmaWd1cmluZSBvZiBhIGhhcmQgd29ya2luZyB3ZXN0ZXJuIGhlcm8uIE9mIGNvdXJzZSwgeW91IGNhbiBhZGQgYSBjb3VwbGUgb2Ygc3B1ciBib29rZW5kcyBvdmVyIHRoZSBmaXJlcGxhY2UgYW5kIHNvbWUgY293Ym95IHN0b3J5Ym9va3MgdG8gcGxheSB1cCB0aGUgdGhlbWUuLiAKV2hhbGVtYW5nbyAgIDEgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KQnV0LCBpZiB5b3Ugd2FudCBhIGNsYXNzaWMgbG9vayBmb3IgeW91ciBwb2tlciByb29tLCB0aGUgcG9rZXIgdGFibGUgY2xvdGggeW91IG1heSB3YW50IHRvIGdvIHdpdGggaXMgdGhlIGNhc2lubyBncmFkZSBzaW5nbGUgY29sb3IuIFdoZXRoZXIgeW91IGdvIHdpdGggcmVkLCBncmVlbiwgb3IgYmx1ZSAodGhlIGNsYXNzaWMgY2FzaW5vIGNvbG9ycyksIHlvdSdsbCBiZSBzdXJlIHRvIGdpdmUgeW91ciBwb2tlciByb29tIHRoYXQgcHJvZmVzc2lvbmFsIGxvb2suIE5ldmVydGhlbGVzcywgeW91IHdpbGwgaGF2ZSB5b3VyIHBva2VyIHRhYmxlcyBkcmVzc2VkIGZvciBzdWNjZXNzIQpJbiBhZGRpdGlvbiB0byB0aGUgQmVzdCBFbnNlbWJsZSBub2QsIEdhZ2EsIEJyYWRsZXkgYW5kIFNhbSB3ZXJlIG5vbWluYXRlZCBmb3IgT3V0c3RhbmRpbmcgUGVyZm9ybWFuY2UgYnkgYSBGZW1hbGUgQWN0b3IgaW4gYSBMZWFkaW5nIFJvbGUsIE91dHN0YW5kaW5nIFBlcmZvcm1hbmNlIGJ5IGEgTWFsZSBBY3RvciBpbiBhIExlYWRpbmcgUm9sZSBhbmQgT3V0c3RhbmRpbmcgUGVyZm9ybWFuY2UgYnkgYSBNYWxlIEFjdG9yIGluIGEgU3VwcG9ydGluZyBSb2xlcmVzcGVjdGl2ZWx5LgpUaGUgQ2FuYWRpYW4gZ292ZXJubWVudCB3YXMgZmlyc3QgaW4gdGhlIHdvcmxkIHRvIHBhc3MgYSBsYXcgcmVxdWlyaW5nIG9uZSByZWd1bGF0aW9uIChhbmQgZXF1aXZhbGVudCBidXJkZW4pIGJlIGVsaW1pbmF0ZWQgZm9yIGV2ZXJ5IG5ldyBvbmUgaW50cm9kdWNlZC4gVGhlIGxhdyBwYXNzZWQgd2l0aCBhbGwgcGFydHkgc3VwcG9ydCBpbiAyMDE1LiAKTG9vayBhdCBnb3JnZW91cyBob21lcyBvbiBUViwgaW4gbWFnYXppbmVzLCBvciBvbiBzb2NpYWwgbWVkaWEgYW5kIHdlIGdldCBsdWxsZWQgaW50byB0aGlua2luZyB0aGF0IHdoYXQgd2Ugc2hvdWxkIGhhdmUsIHNheXMgVGFsYm90LiBpZiB3ZSBkcmlsbCBkb3duIGludG8gdGhlIGNvcmUgaWRlYSBiZWhpbmQgTG92ZSBJdCBvciBMaXN0IEl0LCBpdCBpcyB0aGlzOiBXaGF0IGFyZSB0aGUgcHJpbWFyeSBmdW5jdGlvbmFsIGVsZW1lbnRzIHRoYXQgYXJlIG5lZWRlZCB0byBzdXBwb3J0IHRoZSBsaWZlc3R5bGUgdGhhdCB3ZSB3YW50IHRvIGxpdmU/IFRoYXQgd2hhdCBvdXIgaG9tZSBpcyBkZXNpZ25lZCB0byBkby4gYWRkcyB0aGF0IGdyZWF0IGRlc2lnbiBhbmQgY2hvaWNlcyBhcm91bmQgbG9jYXRpb24gYW5kIHN0cnVjdHVyZSBzdXBwb3J0IGEgbGlmZXN0eWxlLgpXb21lbiBhcmUgZGlzY291cmFnZWQgZnJvbSBiZWluZyBkaXJlY3QsIHRlbGxpbmcgcGVvcGxlIHdoYXQgdGhleSB3YW50IG9yIHRoaW5rLCBvciBiZWluZyBjcml0aWNhbCBvZiBvdGhlcnMgYXQgdGhlIHJpc2sgb2Ygc2VlbWluZyAiYm9zc3kiIG9yICJvdmVyYmVhcmluZyIuIEluc3RlYWQsIHRoZXkgb2Z0ZW4gZmVlbCBtb3JlIGNvbWZvcnRhYmxlIGRyb3BwaW5nIGhpbnRzLCBiZWluZyBtYW5pcHVsYXRpdmUsIG9yIGp1c3QgcmVzb3J0aW5nIHRvIHZlbnRpbmcgdGhlaXIgZnJ1c3RyYXRpb25zIGJlaGluZCBzb21lb25lIGJhY2suIFdvbWVuIGFyZW4gc29tZSBteXN0aWNhbCBzcGVjaWVzLCB3aGVuIHlvdSB0cmVhdCBzb21lb25lIGEgY2VydGFpbiB3YXkgYW5kIGV4cGVjdCBjZXJ0YWluIGJlaGF2aW9ycyB0aGV5IHdpbGwgYWN0IHRoYXQgd2F5LgpXaXRoIGl0cyBtYW55IHVzZXMsIGJsZWFjaCBpdHMgYSB2ZXJ5IGZhbWlsaWFyIHByb2R1Y3QgdG8gbW9zdCBwZW9wbGUuIApJIG92ZXIgZGlkIGl0IHdoZW4gSSBiZWdhbiBhIGZhbGwgcnVubmluZyBwcm9ncmFtIGFuZCBteSBnbHV0ZXMgYmVjYW1lIHNvIHNvcmUgdGhleSB3ZXJlIHBhaW5mdWwgdG8gdGhlIG1vZGVzdCBwcmVzc3VyZS4gSSB3ZW50IHRvIFNNSSAoUGFsbyBBbHRvLCBDQSkgYW5kIGFmdGVyIGEgcmF0aGVyIHBhaW5mdWwgc2Vzc2lvbiwgYnkgdGhlIG5leHQgZGF5IEkgd2FzIGZlZWxpbmcgbXVjaCwgbXVjaCBiZXR0ZXIuIApJIGhhdmUgYmVlbiBsb29raW5nIGF0IHNvbWUgZnJlZWxhbmNlIGpvYnMgdG8gaGVscCBnZXQgc29tZSBleHRyYSBjYXNoLiBJIHJlYWxseSBsaWtlIG9uZSB3aGljaCBpcyB3cml0aW5nIGFib3V0IGNvZmZlZS4gWW91IGFsbCBrbm93IGhvdyBtdWNoIEkgZW5qb3kgbXkgamF2YSwgd2VsbCwgbWF5YmUgbm90IHNpbmNlIHRoaXMgaXNuIGZhY2Vib29rLiAKVGhlbiBoZSB3YXMgcGxheWluZyBncmVhdCBhdCB0aGUgYmVnaW5uaW5nIG9mIHRoaXMgc2Vhc29uLCBidXQgZ290IGluanVyZWQgYWdhaW4gKGFsb25nIHdpdGggU3ViYmFuLCBGb3JzYmVyZywgQXJ2aWRzc29uLCBTbWl0aCwgU2lzc29ucywgU2Fsb21ha2ksIFJpbmFsZG8gYW5kIHNvbWUgb3RoZXJzIEkgc3VyZSBJIGZvcmdldHRpbmcgICB3aG8gd2VyZSBhbGwgb3V0IGZvciBleHRlbmRlZCBwZXJpb2RzIHNpbmNlIERlY2VtYmVyL0phbnVhcnkgYXQgdGhlIHNhbWUgdGltZSkgYW5kIGhhcyBiZWVuIGNvbXBsZXRlbHkgaW52aXNpYmxlIHNpbmNlIGhlIHJldHVybmVkLkkgd2lsbCBzYXkgaXQgbm90IG9ubHkgaGltLiBNb3N0IG9mIHRoZSBwbGF5ZXJzIHdobyByZXR1cm5lZCBmcm9tIGluanVyeSBoYXZlIGJlZW4gcGxheWluZyBwb29ybHkgc2luY2UgdGhleSByZXR1cm5lZCwgbW9zdCBub3RpY2VhYmx5IEZvcnNiZXJnLiBTdGlsbCwgaXQgc2VlbXMgbGlrZSB3ZSBvbmx5IGdvdHRlbiBhYm91dCBhIGdvb2QgMyA0IG1vbnRocyBvZiBzb2xpZCBob2NrZXkgZnJvbSBoaW0gc2luY2UgaGUgd2FzIHRyYWRlZCB0byB1cyBsYXN0IHNlYXNvbi5JIHJlY29tbWVuZCBhIDM0MGkgb3IgNDQwaSwgY2hlYXBlciB0aGFuIG0yLiAKQSBjb21meSBhbmQgY296eSBCIGlzIGRpZmZlcmVudCB0byBhIGhvdGVsLCBldmVuIGEgc21hbGwgaG90ZWwsIGluIHNldmVyYWwgd2F5cy4gQSBsaWNlbnNlZCBCIGlzIGEgcHJpdmF0ZSBob21lIHdpdGggZ3Vlc3Qgcm9vbXMsIHByb3ZpZGluZyBhIHJlYWwgc2Vuc2Ugb2YgcGxhY2UgZm9yIHRyYXZlbGVycy4gQiBndWVzdHMgdmFsdWUgYXV0aGVudGljIGV4cGVyaWVuY2VzLCBidXQgdGhleSBsb29raW5nIGZvciBldmVuIG1vcmUuIApFZmZlY3RpdmVtZW50LCBub3MgcmZsZXhpb25zIHN1ciBsJ2FsaW1lbnRhdGlvbiBzZSByZWpvaWduZW50IHN1ciBiZWF1Y291cCBkZSBwb2ludHMsIGNvbW1lIHBhciBleGVtcGxlIGwnaW1wb3J0YW5jZSBkZSBsJ2F1dG9ub21pZSBjdWxpbmFpcmUuIApBbGwgc2FpZCB0aGV5IGFsbW9zdCBuZXZlciBzYXcgUGFkZG9jay4uIApJZiBKIGZlZWRzIGZhaWwgdGhlIG5leHQgc3RlcCBpcyB1c3VhbGx5IElWIG51dHJpdGlvbiB3aGljaCBoYXMgaXRzIG93biBwaXRmYWxscy4gClR3byBhY2VzIHR3byBlaWdodHMsIGNhbGxlZCBhIGRlYWQgbWFuJ3MgaGFuZC4gVGhpcyB0ZXJtIGlzIGFsc28gdXNlZCBmb3IgYSBoYW5kIHRoYXQgaXMgdmVyeSBnb29kLCBidXQgbm90IGEgd2lubmVyIChzbyB5b3UgYXJlIGRlZmluaXRlbHkgZ29pbmcgdG8gbG9zZSBtb25leSBvbiBpdCkuIEV4YW1wbGU6IFlvdSBhcmUgaG9sZGluZyBBQSBpbiBIb2xkZW0sIGFuZCB0aGUgZmxvcCBicmluZ3MgQUtLLiBOb3cgaWYgeW91ciBvcHBvbmVudCBpcyBob2xkaW5nIEtLLCB3aGljaCBnaXZlcyBoaW0gZm91ciBvZiBhIGtpbmQsIHlvdSBhcmUgaG9sZGluZyBhIGRlYWRtYW4ncyBoYW5kLCBzaW5jZSB5b3UgYXJlIHZlcnkgbGlrZWx5IHRvIHB1dCBsb3RzIG9mIG1vbmV5IGluIHRoZSBwb3QsIG9yIGV2ZW4gZ28gYWxsaW4sIHdpdGggYSBsb3NpbmcgaGFuZC4gKEZ1bGwgQW5zd2VyKQpJJ20gbm90IGEgbWVkaWNhbCBkb2N0b3Igb3Igc29tZW9uZSB3aG9zZSBsaW5lIG9mIHdvcmsgZXZlciBpbnZvbHZlcyBjcmltZSBzY2VuZXMsIGJ1dCBJIHRoaW5rIHdoZW4gdGhleSBvcmlnaW5hbGx5IHJlbGVhc2VkIHRoYXQgaW5mb3JtYXRpb24sIHRoZXkgc2FpZCB0aGF0IHRoZSBCQUMgd2FzIGhpZ2ggZXZlbiBmb3IgZGVjb21wb3NpdGlvbiAoaW5kaWNhdGluZyB0aGUgdGluaWVzdCBhbW91bnQgb2YgZG91YnQpLiBJIHJlYWQgYSBzY2llbnRpZmljIGFydGljbGUgdGhhdCBzYWlkIHRoZXJlIGlzIG5vdCBhbHdheXMgYWxjb2hvbCBwcmVzZW50IGluIGEgc3RvbWFjaCBiZWNhdXNlIG9mIGRlY29tcG9zaXRpb24sIGJ1dCBzb21lIGZhY3RvcnMsIGxpa2UgZXhwb3N1cmUgdG8gZXh0cmVtZSBoZWF0LCB3ZXJlIG1vcmUgbGlrZWx5IHRvIGNhdXNlIGEgcG9zdCBtb3J0ZW0gaGlnaCBCQUMuIApXZSB1c2UgZGF0YSBhbG9uZyB3aXRoIHByb3ZlbiBpbmR1c3RyeSBzb2x1dGlvbnMgdG8gZHJpdmUgbWVhc3VyYWJsZSByZXN1bHRzIGZvciBvdXIgY3VzdG9tZXJzLiAKVGhlIExhbWFzIExpZmUKU28gSSBnaXZlIHRoZSBnaXJsIGFuIGVuZW1hLCBhc2sgaGVyIHRvIHRyeSB0byBob2xkIGl0IGZvciAyMCBtaW5zIGlmIHBvc3NpYmxlLCB0aGVuIEkgbGVhdmUgdGhlIGJlZHNpZGUgdG8gY2hlY2sgb24gYW5vdGhlciBwYXRpZW50LiAKSG93ZXZlciBDZWRhcnMgYXJlIE5PVCB1c2VkIGluIHRoZSBwYXBlciBtYWtpbmcgcHJvY2Vzcy4gQmxhY2sgU3BydWNlIGlzIHRoZSBsYXJnZXN0IHNwZWNpZXMgdXNlZCwgd2hpY2ggbWlnaHQgbGl2ZSB0byAxNTAgeXJzLiBNYXliZS4gCkFsbCBudW1iZXJzIG11c3QgYmUgaW4gYSByb3csIGhvd2V2ZXIuICgyLDMsNCw1IGFuZCA2IG9yIDgsOSwxMCwgamFjaywgcXVlZW4gZm9yIGV4YW1wbGUpLiAKQXJlIHlvdSBsb29raW5nIGZvciBhIGdyZWF0IGNvdmVyIGZvciB5b3VyIHBva2VyIHRhYmxlPyBUaGUgR3JlZW4gUG9rZXIgVGFibGUgRmVsdCBDbG90aCBpcyBtYWRlIG9mIHRoZSBzYW1lIHF1YWxpdHkgbWF0ZXJpYWwgY2FzaW5vcyB1c2UgYW5kIGJveSB3ZSBrbm93IHRoZSB1c2UgdGhleSBnZXQhIFRoZXNlIHdvb2wgYmxlbmQgY2xvdGhzIGFyZSBzb2xkIGJ5IHRoZSBsaW5lYXIgeWFyZCBzbyBpZiB5b3Ugd2FudCAzIHVuaXRzLCB5b3Ugd2lsbCBnZXQgYSBwaWVjZSBvZiBjbG90aCB0aGF0IGlzIDMgeWFyZHMgb3IgOSBmZWV0IGJ5IDU5IGluY2hlcyB3aWRlLiBUaGlzIGR1cmFibGUgZmVsdCBjbG90aCBpcyB1dGlsaXplZCBmb3IgaXRzIGVuZHVyYW5jZSB0byB3ZWFyIGFuZCB0ZWFyLi4gClRoZSBNb3JuaW5nIENhbGwgIEF1Z3VzdCA2LCAxOTg2ClBoYXJtYW5pbmphICA0OCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkVkb2FyZG8gRmF6emlvbGk6IEdlbWFsdGUgVyAoMjE0IGNoaW5lc2lzY2hlIFNjaHJpZnR6ZWljaGVuIHZvbSBCaWxkIHp1bSBCZWdyaWZmLiBCZWkgZGllc2VuIDIxNCBTY2hyaWZ0emVpY2hlbiBoYW5kZWx0IGVzIHNpY2ggdW0gZGllIHNvZ2VuYW5udGVuIFJhZGlrYWxlIChLbGFzc2lmaWthdGlvbnN6ZWljaGVuKS4gQW5oYW5kIGRpZXNlciAyMTQgUmFkaWthbGUgayBkaWUgZ2ViciAxMC4wMDAgU2NocmlmdHplaWNoZW4gaW0gVyBnZWZ1bmRlbiB3ZXJkZW4gKHNjaGxpZSBnaWJ0IGVzIGphIGtlaW4gQWxwaGFiZXQgbmFjaCBkZW0gZ2VzdWNodCB3ZXJkZW4ga2Fubil1bmQgc2llIGdlYmVuIGF1IGplZGVtIFNjaHJpZnR6ZWljaGVuIGVpbmVuIEhpbndlaXMgYXVmIHNlaW5lIEJlZGV1dHVuZy4pClRoZSBudW1iZXIgb2YgaW5jbHVkZWQgc3R1ZGllcyBkaWZmZXJlZCBiZXR3ZWVuIHRhYmxlcyBhbmQgdGV4dDsgb25lIHN0dWR5IHdhcyBkZXNjcmliZWQgYXMgYm90aCBhIHNpbmdsZSBhcm0gc3R1ZHkgYW5kIGFuIFJDVC4gCkJ1dCBpdCdzIGVhc3kgdG8gbG9zZSBzaWdodCBvZiB5b3Vyc2VsZiBpbiB0aGlzIHByb2Nlc3MuIEknbSBub3Qgc3VyZSB0aGF0IHBlb3BsZSB1bmRlcnN0YW5kIHRoZSBlZmZlY3Qgb2Ygc3BlbmRpbmcgOTUlIG9mIHlvdXIgdGltZSB3aXRob3V0IGFueSBzb3J0IG9mIGludGVyYWN0aW9uIHdpdGggYW5vdGhlciBwZXJzb24gd2hvIGNhbiBhdCBsZWFzdCB0YWxrIHRvIHlvdS4gCldoZW4gYSBjdXN0b21lciBsYW5kcyBvbiBhIHBhZ2UsIHRoZXkgd2FudCBpdCB0byBsb2FkIHF1aWNrbHkuIApUaGUgUzcncyBtb3RvciwgYW4gNy4wIGxpdGVyIFY4LCBpcyBsb29zZWx5IGJhc2VkIG9uIEZvcmQncyBOQVNDQVIgVjggYmxvY2ssIGJ1dCBTYWxlZW4gaGFzIHRob3JvdWdobHkgcmUgd29ya2VkIHRoZSBwb3dlcnBsYW50LiAKTkFIIFdlbGwsIG1heWJlIHRoZSBzb24ncyBtb3RoZXIsIGJ1dCBJJ20gZ2l2aW5nIGhlciBhIGdyaWVmIHBhc3MgYmVjYXVzZSBJIGRvbid0IGtub3cgZW5vdWdoIGFib3V0IGhlciBhbmQgbWF5YmUgc2hlJ3Mgbm90IGFsd2F5cyBsaWtlIHRoaXMuIEFuZCBJIHN1cHBvc2UgeW91ciBodXNiYW5kIGZvciBob2xkaW5nIGEgZ3J1ZGdlIGFnYWluc3QgaGlzIHNvbiB3aG8gd2FzIGEgY2hpbGQgYXQgdGhlIHRpbWUgb2YgdGhlIGRpdm9yY2UsIGJ1dCBJIGRvbid0IGtub3cgdGhlIGRldGFpbHMgaXQgc291bmRzIGxpa2UgaXQgd2FzIG1heWJlIGJlY2F1c2UgaGUgbWlzdGFrZW5seSB0aG91Z2h0IGhpcyBzb24gZGlkbid0IGNhcmUgYWJvdXQgaGltLgpNYW55IHN0YXRlcyBoYXZlIG1vdmVkIHF1aWNrbHkgdG8gYWxsb3cgb25saW5lIHNhbGVzIGFuZCB0aGUgbGVnaXNsYXRpb24gaXMgZGVzaWduZWQgdG8gcHV0IE1haW5lIGluIHRoZSBwb3NpdGlvbiB0byByZWFjdCB0byBJbnRlcm5ldCBsb3R0ZXJ5IHNhbGVzIGluIG90aGVyIHN0YXRlcy4gClRoZXJlIGFyZSBzbyBtYW55IHBvc3NpYmlsaXRpZXMgaGVyZS4gTW9zdCBvZiB0aGVtIHN1Z2dlc3QgdGhhdCB5b3UgbWF5IGhhdmUgc3BlbnQgeW91ciBsaWZlIHVuZGVyIGEgZnJhdWR1bGVudCBpZGVudGl0eS4gClRoZSByaWZsaW5nIHdlYXIgaXMgYSBwcm9ibGVtIGFic29sdXRlbHksIGJ1dCB0aGUgc29sdXRpb24gaXMgdG8gc3RvcCBiZWluZyBzdHViYm9ybiBhbmQgbW92ZSB0byBtZXRhbGx1cmd5IHRoYXQgaXNuIGRhdGVkIGZyb20gdGhlIDUwcy4gVGhlIE00QTEgYmFycmVsIHN0ZWVsIGlzIHVuY2hhbmdlZCBmcm9tIGl0IG9yaWdpbmFsIGNvbXBvc2l0aW9uIGluIHRoZSBNMTZBMS4gCk9oIEdvZCwgSSBhbnN3ZXJlZCBhbiBhZCBmb3IgYSByb29tIGZvciByZW50IGluIGEgaG91c2UgaW4gQmVhdmVydG9uLiBUaGUgb3duZXIgb2YgdGhlIGhvdXNlIGRpZG4gaGF2ZSBhIHRvbiBvZiBwaWN0dXJlcyBvZiB0aGUgcm9vbSBpdHNlbGYgYW5kIEkgYXNrZWQgZm9yIHNvbWUgbW9yZSBiZWZvcmUgSSBkcm92ZSBvdXQgdG8gYSBzaG93aW5nLiBUd28gb2YgdGhlIHdhbGxzIHdlcmUgdG90YWxseSB1bmZpbmlzaGVkLiBUaGVyZSB3YXMgbm8gZHJ5d2FsbC4gSXQgd2FzIGNsZWFyIGhlIGhhZCBidWlsdCB0aGlzIHJvb20gYnkgY3V0dGluZyB3aGF0IGxvb2tlZCBsaWtlIGEgbGFyZ2UgZGVuIG9yIGZhbWlseSByb29tIGluIGhhbGYgYnV0IHRoZW4ganVzdCBwdXQgdXAgcGFwZXIvY3VydGFpbnMgb3ZlciB0aGUgIndhbGxzIiAoc3R1ZHMpLgpUaGUgY2xhc3NpYyBjbGF5IGNoaXAgc2V0cyB0aGF0IGhhdmUgYmVlbiBoaXN0b3JpY2FsbHkgdXNlZCwgYW5kIHRoYXQgYXJlIHN0aWxsIGVtcGxveWVkIGluIHNvbWUgcGxhY2VzIGV2ZW4gY3VycmVudGx5LCB3ZXJlbid0IGNyZWF0ZWQgZW50aXJlbHkgb2YgY2xheSBleGNlcHQgYXQgdGhlIHZlcnkgYmVnaW5uaW5nLiAKSGUgcmVjZWl2ZWQgYSBiYWNoZWxvciBvZiBzY2llbmNlIGRlZ3JlZSB3aXRoIGEgbWFqb3IgaW4gZWNvbm9taWNzLiAKQnV0IHRoZSBiZWF1dHkgaXMsIEkgY2FuIHNpbXBseSBob3Agb24gbXkgY29tcHV0ZXIgZmlyZSB1cCBzb21lIHNvZnR3YXJlLCBhbmQgaW4gYSBmZXcgbW9tZW50cyBJJ20gcGxheWluZyBvbmxpbmUgdmlkZW8gcG9rZXIgKGFuZCBsb3NpbmcgbXkgc2hpcnQgYXQgaXQuKUZvciB0aG9zZSBvZiB1cyB3aG8gaGF2ZSB0aG9zZSB0cmF2ZWwgcmVzdHJpY3Rpb25zLCBvbmxpbmUgdmlkZW8gcG9rZXIgaXMgdGhlIHVsdGltYXRlIHN1YnN0aXR1dGUuIFRoZSBob21lIG9mIHRoZXNlIHdvbmRlcmZ1bCBtYWNoaW5lcywgb25saW5lIGNhc2lub3MsIHVzdWFsbHkgb2ZmZXIgdmVnYXMgc3R5bGUgb2Rkcywgc28geW91IGdldCB0aGF0IFZlZ2FzIGZlZWwgd2l0aG91dCB0aGUgZml2ZSBodW5kcmVkIGRvbGxhciBhIG5pZ2h0IGhvdGVsIHJhdGUuIFBsdXMgeW91IGRvbid0IGhhdmUgdG8gcGF5IGZvciBhbGwgdGhvc2UgZXh0cmFzLiAKSXQgaXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCB0byBmb2xsb3cgYWxsIHRoZSBuZXcgc2l0ZXMgdGhhdCBzZWxsIGJ1dCBJIGFzc3VyZSB5b3UgdGhlIG9sZGVyIGFuZCBtb3JlIGV4cGVyaWVuY2VkIHNpdGVzIHdpbGwgbW9zdCBsaWtlbHkgZG8geW91IHdlbGwgZm9yIGEgY29tcGV0aXRpdmUgcHJpY2UuIApIZSB3b3VsZCBsaWtlIHRvIGVuam95IGEgZGVjZW50IGNhcmVlciB0b28uIEhlIG5vdCBnb2luZyB0byBiYWNrIEZhbGxvbi4gTXkgZ3Vlc3MgaXMgdGhhdCB0aGVyZSBpcyBwbGVudHkgb2Ygc3RhbmRpbmcgcm9vbSBhcm91bmQgRmFsbG9uIGJlY2F1c2UgZXZlcnlvbmUgaGFzIGRpc3RhbmNlZCB0aGVtc2VsdmVzIGZyb20gaGltLiAKRWFybHkgaW4gaGlzIGNhcmVlciBSb2dlcnMgd2FzIG9mdGVuIHRpbWVzIHRlYXNlZCBhYm91dCBoaXMgd2VpZ2h0LiBXaGlsZSBoZSBoYXMgbmV2ZXIgYmVlbiB3aGF0IHlvdSB3b3VsZCBjYWxsIGZhdCwgaGUgaGFzIGJlZW4gaGVhdnkgYW5kIHNvbWV0aW1lcyBsb29rZWQgYSBiaXQgYmxvYXRlZC4gClRoaXMgaXMgYmFzaWNhbGx5IHdoYXQgSSBoYXZlIGJlZW4gZG9pbmcgc2luY2UgQXByaWwgbGFzdCB5ZWFyLiBTaGUgbWFkZSBpdCBjbGVhciBpbiBhIGRpc2N1c3Npb24gd2Ugd2VyZSBoYXZpbmcgdGhhdCBzaGUgZG9lc24gbGlrZSB0byB0ZWxsIG1lIHdoZW4gc2hlIGZlZWxzIG5lZ2F0aXZlbHkgYWJvdXQgc29tZXRoaW5nIHdoZW4gc2hlIGtub3dzIGl0ICJub3QgYSBwb3B1bGFyIG9waW5pb24iIHNvIHNoZSByYXRoZXIgcHJldGVuZC4gV2hlbiBJIHRvbGQgaGVyIHRoYXQgbm90IGhvdyBhZHVsdHMgaGF2ZSBoZWFsdGh5IHJlbGF0aW9uc2hpcHMgYW5kIHdlIHNob3VsZCB0YWxrIHRoaW5ncyBvdXQgdG9nZXRoZXIgKHRoZSBob3Jyb3IpIHNoZSBvcHRlZCBvdXQuIApEaWRuIHNlZSBhIHByb2JsZW0gd2l0aCBhIDYwIHllYXIgb2xkIG1hbiBydWJiaW5nIHRoZSBsZWdzIG9mIGEgMTYgeWVhciBvbGQgYm95IGluIGEgaG90IHR1Yj8gSG9sbWVzIGFza2VkLgpJdCB3aWxsIGJlIG1vcmUgaW50ZXJlc3RpbmcgaWYgdGhlIHJlc3VsdCB3aWxsIGJlIGd1YXJhbnRlZWQuIApObyB0aW1lLCBoZSB3YXMgc29hcmluZyBvdmVyIDYwLDAwMCBmZWV0LiBVcCBoZXJlLCB3aXRob3V0IGEgcHJlc3N1cml6ZWQgZmxpZ2h0IHN1aXQgb3IgY29ja3BpdCwgYmxvb2Qgd291bGQgYm9pbCBhbmQgaW50ZXN0aW5lcyBidXJzdC4gT3V0c2lkZSB0aGUgdGVtcGVyYXR1cmUgaGFkIHBsdW5nZWQgMTYwIGRlZ3JlZXMuIEhpcyB1bmRlcndlYXIgd2FzIHN0aWxsIHNvYWtlZCBidXQgbm93IGhlIHNoaXZlcmVkLiBCeSBoaXMgbGF0ZXIgYWNjb3VudCwgaGUgc3dpdGNoZWQgb24gdGhlIGF1dG9waWxvdCBhbmQgd3JvdGUgaW4gaGlzIGZsaWdodCBsb2csIG9uZSBoYWxmIGhvdXIuIG1pbnV0ZXMgaW50byBoaXMgbWlzc2lvbiwgaGUgbmVhcmVkIHRoZSBhaXIgZnJvbnRpZXIgb2YgdGhlIFNvdmlldCBVbmlvbi4gVGhlIHJhZGlvIGNvdWxkIG5vdCBiZSB1c2VkIHRvIGxldCBjb2xsZWFndWVzIGluIFBha2lzdGFuIGtub3c6IHRoYXQgY291bGQgYWxlcnQgdGhlIFJ1c3NpYW5zLiBJbnN0ZWFkIGhlIGJyb2FkY2FzdCB0d28gY2xpY2tzLiBQZXNoYXdhciBzZW50IGJhY2sgYSBzaW5nbGUgY2xpY2s6IHByb2NlZWQgYXMgcGxhbm5lZC4KVGhlIHJlYXNvbiBJIGRpZCBpdCB3YXMgYmVjYXVzZSB0aGUgdG9wbGV2ZWwgdGVuZHMgdG8gaGF2ZSBhIGxvdCBvZiBmaWxlcyBhbHJlYWR5LiBJIGZvdW5kIG15c2VsZiBnZXR0aW5nIGFubm95ZWQgYnkgaGF2aW5nIHRvIHJlYWQgdGhyb3VnaCB0aGUgdG9wbGV2ZWwgYml0cyB0byBmaW5kIHRoZSBhY3R1YWwgcmVsZXZhbnQgZmlsZS4gClRoZXkgY2hhc2VkIGhpbSBhbmQgdHJpZWQgdG8gbmFpbCBoaW0gZG93biBmb3IgeWVhcnMuIEV2ZW4gcHV0IGhpbSB1cCBvbiB0aGVpciBUb3AgV2FudGVkIExpc3Qgb24gTWF5IDI4dGggMTk1NiwgYXQgbnVtYmVyIG5pbmV0eSBlaWdodCwgd2hlcmUgaGUgd291bGQgcmVtYWluIGZvciB0d28geWVhcnMuIApIZSB3YW50ZWQgdG8gc2VkYXRlIGhpbSwgdGFrZSB4cmF5cywgYW5kIGZpeCB0aGUgZnJvbnQgdGVldGgsIGFuZCBsb29rIGFyb3VuZCwgYXMgaGUgdGhvdWdodCBpdCB3YXMgIm5lcnZlIGRhbWFnZSIgY2F1c2luZyBpdCBiZWNhdXNlIGhlIHdhcyBwcmVtYXR1cmUuIFdoZW4gd2UgZ290IHRoZXJlIGl0IHdhcyBhIGRpZmZlcmVudCBkZW50aXN0IGRvaW5nIHRoZSBwcm9jZWR1cmUsIGhlIGNhbWUgb3V0IGFza2VkIHVzIGlmIHdlIGtuZXcgd2hhdCB0aGUgcGxhbiB3YXMgSSBzYWlkIHllcywgcmVwZWF0ZWQgdGhhdCBiYWNrIHRvIGhpbSwgaGUgc2FpZCB5ZXMgYW5kIHNob29rIG15IGhhbmQuIEFuIGhvdXIgbGF0ZXIgYW4gb2ZmaWNlIG1hbmFnZXIgY29tZXMgb3V0IGFuZCB0ZWxscyBtZSB0aGV5IGRpZCA4IGNyb3ducyBvbiB0aGUgYm90dG9tIGFuZCA2IG9uIHRoZSB0b3AuIApUaGUgZWR1Y2F0aW9uIHN5c3RlbSBjb25zaXN0cyBvZiB0aHJlZSB0aWVyczogcHJpbWFyeSBlZHVjYXRpb24gKGdyYWRlcyAxIDYsIGFwcHJveGltYXRlbHkgYWdlcyA2IDEyKSwgbWlkZGxlIHNjaG9vbCAoZ3JhZGVzIDcgOSwgYXBwcm94aW1hdGVseSBhZ2VzIDEyIDE1KSBhbmQgaGlnaCBzY2hvb2wgKGdyYWRlcyAxMCAxMiwgYXBwcm94aW1hdGVseSBhZ2VzIDE0IDE5KS4gCiJXaGlsZSBNciBIYXNzYW4ncyBib2R5IGxheSB1bmRldGVjdGVkIGluIGhpcyBmbGF0LCBoaXMga2lsbGVycyB3ZXJlIGxpdGVyYWxseSB0aHJvd2luZyBoaXMgbW9uZXkgYXJvdW5kLiIKSSB3YXMgbWFkZSBmdW4gb2YgcmVsZW50bGVzc2x5LiBJIHRyaWVkIHRvIGtpbGwgbXlzZWxmIHNob3J0bHkgYWZ0ZXIuIApDdXJ0aXMsIHdobyBqb2luZWQgVEZDIGluIEphbnVhcnkgYWZ0ZXIgVGltIEJlemJhdGNoZW5rbyBsZWZ0IHRvIHRha2Ugb3ZlciBDb2x1bWJ1cyBDcmV3IFNDLCBjYWxsIHRoZSBwcm9jZXNzIG9mIHNlY3VyaW5nIHRoZSBTcGFuaWFyZCAidGhlIG1vc3QgZGlmZmljdWx0IGFuZCBjb21wbGljYXRlZCBzaWduaW5nIEkgaGF2ZSBldmVyIGJlZW4gYSBwYXJ0IG9mIGFuZCBhY3R1YWxseSBoYXZlIGV2ZXIgc2Vlbi4iCldpbmUgQW5kIERpbmU6IDQgTmV3IENhc3VhbCBTcG90cyBJbiBTZWF0dGxlLCBXaXRoIEEgVGFzdGluZyBSb29tIEFuZCBQaXp6ZXJpYUxvb2tpbmcgZm9yIHRoZSBTZWF0dGxlIHdpbmUgYmFyIG9mIHlvdXIgZHJlYW1zPyBXZSBmb3VuZCBhIGxpbmV1cCBvZiBlYXRlcmllcyBhbmQgYSB2aW5leWFyZCB3b3J0aCBjaGVja2luZyBvdXQuIEhlcmUgYXJlIHRoZSBuZXdlc3QgcGxhY2VzIHRvIGNoZWNrIG91dCB0aGUgbmV4dCB0aW1lIHlvdSBnb3Qgd2luZSBvbiB0aGUgbWluZC4uIApUaGV5J2xsIG5ldmVyIHNvdW5kIGxpa2UgdGhlaXIgdm9jYWwgcm9sZSBtb2RlbHMsIGJ1dCBib3ksIHdpbGwgdGhleSBzY3JlYW0sIHBhbnQsIGFuZCBiZWxsb3cgdHJ5aW5nLi4gCkducnA0NSB1CkFuZCB0aGF0IG1lYW5zIE5PVCB3YWl0aW5nIGZvciB5b3VyIHNvZnR3YXJlIHRvIHRlbGwgeW91IHRvIGRvIHNvLiAKS2VyciBhbmQgTGVlcGVyIHdlcmUgY2hvc2VuIHRvIHJlY2VpdmUgdGhlIG9yZ2FucyBvcGVyYXRpb24gdG8gZGltaW5pc2ggY2hhbmNlcyBvZiByZWplY3Rpb24uIFByZWNhdXRpb25zIHN0cmV0Y2ggdG8gdHJhbnMgICdwb3J0YXRpb24gYWxzby4gIFRoZSBraWRuZXlzLCB1c2VkJ2luIHRoZSB3ZXJlIiBrZXB0IGZyZXNoIEogYW5kICdzYWZlIG9uJ3RoZSBsb25nIHJpZGUgaW4gY29uICB0YWluZXJzIHBhY2tlZCB3aXRoIGljZS4gCiJXZSBhcmUgY3JlYXRpbmcgYSBDYW5hZGlhbiBjaGFtcGlvbiBjb21wYW55IGFuZCBJIHdvdWxkIGJlIHZlcnkgZGlzYXBwb2ludGVkIHRvIHNlZSBpZiB0aGVyZSB3YXMgYW4gZWZmb3J0IHRvIGltcGFpciB0aGF0IGJ1dCB0aGUgZmFjdCBpcyB3ZSBhcmUgZm9jdXNlZCBvbiBidXNpbmVzcy4gV2UnbGwgc3RheSBmb2N1c2VkIG9uIGJ1c2luZXNzLiIKVGhlIGdpc3QgSSBnZXQgZnJvbSByZWRwaWxsIG1hdGVyaWFsIGlzIHRoYXQgd29tZW4gYXJlIGdlbmVyYWxseSBpbmZlcmlvciBhdCBtb3N0IHRoaW5ncyBvdXRzaWRlIG9mIHRoZSBob21lIGFuZCBjaGlsZHJlbiwgYW5kIHRoYXQgdGhlIGJlc3QgcGxhY2UgZm9yIG1lIGlzIGluIHRoZSBob21lLCByYWlzaW5nIGNoaWxkcmVuLgpKb3JkYW4gdmlld3MgdGhlIG1haW50ZW5hbmNlIGFzIGEgdml0YWwgcGFydCBvZiBoaXMgcHJvZmVzc2lvbmFsIHJvdXRpbmUuIApJdCB0aGUgYmVzdCB3YXkgdG8gdGVzdCB0aGUgcm9vbS4uIApCVVQsIHNoZSB3YXMgbmljZSBhbmQgc2hlIHdhcyBzbWFydCBhbmQgc2hlIGZvdW5kIHVzIG91ciBwYXJ0LiBXZSBoYWQgdG8gc3BlY2lhbCBvcmRlciB0aGUgZGFtbiB0aGluZy4gClRoZSBkb2N0b3Igd2hvIHRvbGQgbWUgdGhpcyBzYWlkIHRoYXQgSSB3YXMgaW4gcGFpbiBiZWNhdXNlIG9mIG15IGRpZXQgYW5kIHRoYXQgSSBzaG91bGQgZ28gdmVnZXRhcmlhbi4uIApJIHVzZWQgdG8gbGV0IG15IGRhZCB3aW4gYXQgdmlkZW8gZ2FtZXMgYWxsIHRoZSB0aW1lIHdoZW4gSSB3YXMgbGl0dGxlLiBIZSBsb3ZlZCBwbGF5aW5nIGJ1dCBoZSB3YXMgaG9wZWxlc3MgYW5kIEkgZmVsdCBiYWQgYnVsbHlpbmcgaGltIHdoZW4gd2UgcGxheWVkIGFnYWluc3QgZWFjaCBvdGhlci4gU28gZXZlcnkgb3RoZXIgZ2FtZSBvciBzbyBJIHdvdWxkIHB1cnBvc2VseSBtYWtlIGh1Z2UgbWlzdGFrZXMuIEkgc3dpbmcgYXQgYmFkIHBpdGNoZXMgdG8gc3RyaWtlIG91dCBpbiBiYXNlYmFsbCwgaG9sZCB0aGUgYmFsbCB0b28gbG9uZyBhbmQgZ2V0IHNhY2tlZCBpbiBmb290YmFsbCwgcHVycG9zZWx5IHJ1biBvdmVyIGhpcyB0cmFwcyBvciBsZXQgaGltIHJ1biBtZSBvZmYgdGhlIHJvYWQgaW4gcmFjaW5nIGdhbWVzLCBwdXJwb3NlbHkgd2hpZmYgYmlnIG1vdmVzIGluIGZpZ2h0aW5nIGdhbWVzLCBldGMuIEhlIHdvdWxkIGxhdWdoIGFuZCBsYXVnaCB3aGVuIEkgbWFkZSBhIGR1bWIgbWlzdGFrZSBvciBoZSBnb3QgdGhlIHVwcGVyIGhhbmQgYW5kIHNheSwgIkkgZ290Y2hhIHRoYXQgdGltZSwgYnVkZHkhIiBTb21ldGltZXMgaGUgcGF0IG1lIG9uIHRoZSBiYWNrIGFuZCBzYXkgIkNhbiB3aW4gYWxsISIgSXQgbWFkZSBoaW0gc28gaGFwcHkgdGhhdCBJIGFjdHVhbGx5IGVuam95ZWQgbG9zaW5nLCBidXQgSSB3YXMgY2FyZWZ1bCBub3QgdG8gZG8gaXQgc28gb2Z0ZW4gaGUga25ldyBJIHdhcyBsZXR0aW5nIGhpbS4KRG9lcyBpdCBmZWVsIGxpa2UgYSByZWFsIG1hc3NhZ2U/IEl0J3MgY2xvc2UsIGJ1dCBpdCBzdGlsbCBwcm92aWRlcyBzb21lIHJlbGllZiwgYW5kIGl0cyBwb3J0YWJpbGl0eSBpcyBhIG5pY2UgZmVhdHVyZS4gClRvbyBmYXQgdG8gcnVuIGEgMTAgbWludXRlIG1pbGU/IE5vIGRpcGxvbWEgdW50aWwgeW91IGNhbi4gClJ1bmZheWZ1biAgMyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkNvbmZpcm0geW91J3JlIHJ1bm5pbmcgdGhlIG1vc3QgcmVjZW50IHZlcnNpb24gb2YgdGhlIEh1bHUgYXBwIChvbiBpT1MgdGhhdCdzIHY1LjM2KS4KVGhpcyBpcyBsaXRlcmFsbHkgYSBjaXR5IGZvbGsgdnMgY291bnRyeSBmb2xrIGJhdHRsZS4gClRoZSBvdGhlciB0aGluZyB3YXMsIHRoYXQgVHlzb24gd2Fzbid0IGluIGNoYXJnZSBvZiBoaXMgb3duIHdlYWx0aC4gRG9uIEtpbmcgd2FzIHJlc3BvbnNpYmxlIGZvciBtYW5hZ2luZyBUeXNvbidzIGFsbCBtb25leSBoZSB3YXMgbWFraW5nIG9uIGZpZ2h0cy4gU28sIGltYWdpbmUgYSBwb29yIGJsYWNrIGtpZCBmcm9tIEJyb29rbHluIHdobyBuZXZlciBrbmV3IHRoZSB2YWx1ZSBvZiBkb2xsYXIgYW5kIHN1ZGRlbmx5IGlzIGdpdmVuIGEgMSBtaWxsaW9uIGluIGNhc2ggdG8gc3BlbmQgYW5kIHdoZW4gaXQgY29tZXMgdG8gdGhlIG90aGVyIDI5IG1pbGxpb25zIGZvciB0aGUgZmlnaHQsIERvbiB3YXMgdGFraW5nIGhpcyBwaWVjZSBvZiAxLzMsIGFuZCAyLzMgd2VyZSBkaXZpZGVkIGJldHdlZW4gVHlzb24ncyBtYW5hZ2VycyAoSm9obiBIb3JuZSkgYW5kIGhpcyB0ZWFtLiAKVGhlIGNvdW50cnkncyBiaWdnZXN0IHJpdmVyLCB0aGUgUG8sIGN1dHMgaG9yaXpvbnRhbGx5IHRoZSB0ZXJyaXRvcnksIGlzIG11Y2ggbW9yZSBjb3N0IGVmZmVjdGl2ZSB0aGFuIHlvdSBtaWdodCB0aGluay4gCkJ1dCB1bnRpbCBJIHdhcyBjbGVhbmVkIG91dCwgdGhlIG9jY2FzaW9uYWwgc3VyZ2UgaW4gY2hpcHMgYnVveWVkIG15IHNwaXJpdHMgYW5kIGtlcHQgbWUgYXQgdGhlIHRhYmxlLiAKTE9TIEFOR0VMRVMgVHdvIENhbGlmb3JuaWEgbWVuIHdobyBwbGVhZGVkIGd1aWx0eSB0byBoYWNraW5nIGludG8gdGhlIGVtYWlsIGFjY291bnQgb2YgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyIGFuZCB0cnlpbmcgdG8gZXh0b3J0IGhpbSB3aXRoIG5ha2VkIHBpY3R1cmVzIGZvdW5kIHRoZXJlIGhhdmUgYmVlbiBzZW50ZW5jZWQgdG8gcHJpc29uIHRlcm1zLCBmZWRlcmFsIHByb3NlY3V0b3JzIHNhaWQgb24gTW9uZGF5LgpUaGUgZXZlbnQgd2FzIGZvdXIgaG91cnMgbG9uZyBhbmQgc29tZSBwZW9wbGUgd2FpdGVkIHRocmVlIHRvIGdldCBhIHBpY3R1cmUgb2YgZGFya3dpbmcgZHVjay4gSSB3YXMgc3R1Y2sgb24gcGlyYXRlcyBvZiB0aGUgQ2FyaWJiZWFuIGZvciBvdmVyIGFuIGhvdXIgdW50aWwgYWZ0ZXIgY2xvc2UuIApJdCB0aGUgYmVzdCEgSSBiZWVuIGFibGUgdG8gc2VlIGFsbCBteSBzcGVjaWFsaXN0cywgZ2V0IGFsbCB0aGUgdGVzdHMgSSBuZWVkIGRvbmUsIEkgaGF2ZSBubyBjb3BheSBmb3IgYXBwb2ludG1lbnRzIG9yIG1lZGljYXRpb24uIAoiV2UgYWxyZWFkeSBoYXZlIGtub3duIHdoYXQgb3VyIGxpbWl0cyBhcmUsIGFzIGhhdmUgdGhlIGxvY2FscyBwdWJzLiIgVGhlIEdvdmVybm1lbnQgd2lsbCB1c2UgYSBuZXcgbG9jYWwgaW1wYWN0IGFzc2Vzc21lbnQgdG8gbGFyZ2VseSBzdG9wIHBva2VyIG1hY2hpbmUgaW5jcmVhc2VzIGluIEFsYnVyeS4gT3RoZXIgbG9jYWwgZ292ZXJubWVudCBhcmVhcyBoaXQgYnkgdGhlIHJlc3RyaWN0aW9uIGluY2x1ZGUgTmV3Y2FzdGxlLCBXb2xsb25nb25nIGFuZCBCdXJ3b29kLiBOU1cgR2FtaW5nIE1pbmlzdGVyIEdyYWhhbSBXZXN0IHNhaWQgdGhlIDUwMDAgcG9rZXIgbWFjaGluZXMgY3V0IHdlcmUgZnJvbSB0aGUgZm9yZmVpdHVyZSBwb29sIG9mIG1hY2hpbmVzLCB3aGljaCBob3RlbHMgY291bGQgYWNjZXNzLiAKUGF0dG9uIGdvdCBpbnRvIHRoZSBmcmF5IHdpdGggaGlzIDNyZCBBcm15LCBpdCB3YXMgY2xlYXIgdGhhdCB0aGUgQXhpcyBwb3dlcnMgZGF5cyB3ZXJlIGV2ZW4gbW9yZSBsaW1pdGVkIHRoYW4gaGFkIGJlZW4gdGhvdWdodC4gQ2hvb3NlIEZPTEQgQU5EIFNLSVAsLiAKSSB1c2UgSW5zdGFjYXJ0IGZvciBteSB3ZWVrbHkgZ3JvY2VyaWVzLiBXaGlsZSBnZXR0aW5nIGdyb2NlcmllcyBkZWxpdmVyZWQgZmVlbHMgbGlrZSBhIGx1eHVyeSwgaXQgYWN0dWFsbHkgc2F2ZXMgbWUgbW9uZXkgc2luY2UgSSBub3Qgd2FuZGVyaW5nIHRoZSBhaXNsZXMgcGlja2luZyB1cCBhbGwgdGhlIGZ1biBjaGlwcyBhbmQgc25hY2tzIHRoYXQgSSB3YW50IGJ1dCBkb24gbmVlZC4gCllvdSBjcmFjayBhIGRvemVuIGVnZ3MgYW5kIHBvdXIgaXQgb24gdGhlIGJvdHRvbSBvZiB0aGUgd2luZHNoaWVsZC4gCjE1IENvbW1lbnRzCldlJ2QgYmUgd2lsbGluZyB0byBwdXQgaW4gdGltZSBsZWFybmluZyB0aGUgcnVsZXMgYnV0IEJyaWRnZSBpcyB0b28gcmlnaWQsIFVubyB3YXkgdG9vIHNpbXBsZS4gCkEgZmV3IG1lZ2EgZm9yZWlnbiBjb25nbG9tZXJhdGVzIGFyZSBhbGxvd2VkIHRvIG1ha2UgbW9uZXkgdGhlcmUuIEEgZmV3IDElZXIgdGFsZW50cyBjYW4gYmVjb21lIHBlcm1hbmVudCByZXNpZGVudHMobm90IGNpdGl6ZW5zKS4gCjQwMS4gCiA1IHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvVGhlIHByb2JsZW0gd2l0aCBwcm9wIDQ3IGlzIGl0IG9ubHkgYSBmaXJzdCBzdGVwLiBQcm9wIDQ3IGlzIG9ubHkgdHJlYXRpbmcgYSBwYXJ0IG9mIGEgc3ltcHRvbSBub3QgdGhlIHJvb3QuIApJdCB3YXMgb2ZmIHRvIGEgcm9ja3kgc3RhcnQuLiAKT1A6ID8gSSBoYXZlIG5vIHdvcmRzLiBJIHRvbGQgeW91IG15IGZlZSBhbmQgbm8gSSB3aWxsIG5vdCBhY2NlcHQgJDI1LiBJIGhhdmUgYmVlbiB0cnlpbmcgdG8gYmUgcHJvZmVzc2lvbmFsIGFuZCBuaWNlIGJ1dCBJIHdpbGwgc2F5IGl0IG9uZSBtb3JlIHRpbWUsIE5PLgpBbG1vc3QgbWFrZXMgbWUgdGhyb3cgdXAgc2F5aW5nIHRoaXMgaW4gc3VjaCBhIHByZXRlbnRpb3VzIHdheSBsaWtlIGl0IG1ha2VzIG1lIGEgc3VwZXIgc3BlY2lhbCBzbm93Zmxha2UsIGJ1dCBJIGp1c3QgY29weWluZyB5b3VyIHdvcmRzLiBNYXRlLCB5b3Ugbm90IHNwZWNpYWwsIHRoZXJlIGFyZSBwbGVudHkgb2YgcGVvcGxlIGxpa2UgdXMgc28gc3RvcCB0YWxraW5nIGxpa2UgeW91IGFyZS4KT3dlcyBtb3JlIHRoYW4gYSB0aG91c2FuZCBkb2xsYXJzIHRvIHRoZSBzY2hvb2wgYW5kIGhhcyB0byBwYXkgJDQwMCB0byBhIGRvcm0gc2hlIGlzbiBpbmhhYml0aW5nIGFueW1vcmUuIApGcmVlIG1lZGljYWwgc2Nob29sPyBHcmVhdGVyIGFjY2VzcyB0byBjYXJlPyBQZW9wbGUgZm9yZ2V0IHRoYXQgbWVkaWNhbCBzY2hvb2wgaXMgbGl0ZXJhbGx5IGp1c3QgdGhlIGZyb250IGRvb3IuIE5vIHdheSBpbiBoZWxsIHdvdWxkIEkgdHJ1c3QgbXlzZWxmIG9yIGFueSBvZiBteSBjb2xsZWFndWVzIGlmIHRoZXkgaGF2ZW4gZXZlbiBjb21wbGV0ZWQgYSByZXNpZGVuY3kgcHJvZ3JhbS4gTGV0IGdvIHB1bXAgb3V0IG1vcmUgbWVkaWNhbCBzdHVkZW50cyBhbmQga2VlcCB0aGUgcmVzaWRlbmN5IHByb2dyYW1zIGxpbWl0ZWQsIGNhdXNlIHRoYXQgZml4IGFjY2VzcyAvcy4gUmVhbGlzdGljYWxseSwgeW91IGR1bWIgZG93biBhbmQgc2F0dXJhdGUgdGhlIHF1YWxpdHkgb2YgbWVkaWNhbCBzY2hvb2wgYW5kIG1ha2UgcmVzaWRlbmN5IHByb2dyYW1zIEVWRU4gTU9SRSBjb21wZXRpdGl2ZS4gTm8gd2F5IGluIGhlbGwgZnJlZSBtZWRpY2FsIHNjaG9vbHMgYXJlIGdvaW5nIHRvIGluY3JlYXNlIGFjY2Vzcy4gTG9vayBhdCBhbGwgdGhlICJmcmVlIG1lZGljYWwgc2Nob29scyIgb3V0IHRoZXJlICAgdGhvc2UgYXJlIGVsaXRlLiBZb3UgZG9uIGdldCBpbnRvIHRob3NlIHdpdGggZ2FyYmFnZSBncmFkZXMuIFBvb3IgcGVvcGxlIGFyZW4gZ29pbmcgdG8gcmVhbGl6ZSB5b3UgbmVlZCB0byBidXkgdGhvc2UgJDUwMCsgcXVlc3Rpb24gYmFua3MgdG8gY2h1cm4gdGhyb3VnaCBiZWNhdXNlIG1lZGljYWwgc2Nob29scyBkb24gZXZlbiB0ZWFjaCB5b3Ugd2hhdCB5b3Ugc2hvdWxkIGJlIHN0dWR5aW5nIGZvciB5b3VyIGJvYXJkcy4gT2gsIHlvdXIgYm9hcmRzIGFyZW4gY2hlYXAgZWl0aGVyLgpUaGF0IGVuaGFuY2VkIHBlcmNlcHRpb24gd291bGQgdGhlbiBsZW5kIGl0c2VsZiB0byBuZXcgZm9ybXMgb2Ygc29jaWFsIHNpZ25hbGxpbmcuIFJlZCBza2luIGNhdXNlZCBieSBibG9vZCBwdW1waW5nIG5lYXIgdGhlIHN1cmZhY2Ugb2YgdGhlIHNraW4gaXMgYW4gaW1wb3J0YW50IHNpZ24gb2YgZG9taW5hbmNlIGZvciBtYW55IHByaW1hdGVzLiBNYW5kcmlsbCBtb25rZXlzIGFyZSBwZXJoYXBzIHRoZSBtb3N0IGZhbW91cyBleGFtcGxlLCB3aXRoIHZpdmlkIG1hcmtpbmdzIG9uIHRoZWlyIGZhY2UgYW5kIGJvdHRvbSB0aGF0IHNpZ25hbCB0aGVpciBwb3NpdGlvbiBpbiB0aGUgZ3JvdXAgc3RyaWN0IGhpZXJhcmNoeTsgdGhlIGZpdHRlciwgYW5kIG1vcmUgZG9taW5hbnQgYW4gaW5kaXZpZHVhbCBpcywgdGhlIHJlZGRlciBoZSBhcHBlYXJzLiAKSSBncmV3IHVwIHdhdGNoaW5nIGhpbSBpbiBoaXMgcHJpbWUuIEEgZmV3IHllYXJzIGJhY2sgSSBzdHVtYmxlZCBvbiBhIHZpZGVvIG9mIGFsbCBvZiBoaXMgZWFybGllciBmaWdodHMgc3RydW5nIHRvZ2V0aGVyIGluIGEgc2luZ2xlIHZpZGVvIChtb3N0IHdlcmUgc2hvcnQgZmlnaHRzIG9idmlvdXNseSkuIApSZWFsIGhhcmR3YXJlIGhhcyBhIHRvdGFsIG9wZW4gbG9vcCBkZWxheSBvZiAxIDEuNSBjb250cm9sIHBlcmlvZHMgYmV0d2VlbiB0aGUgcGxhbnQgKFBXTSByZWdpc3RlciBzZXR0aW5ncyB0YWtpbmcgZWZmZWN0KSBhbmQgdGhlIGZlZWRiYWNrIHBhdGggKEFEQyBzYW1wbGluZyBsYXRlbmN5LCBvdmVyc2FtcGxpbmcsIGV0YykgZGVwZW5kaW5nIG9uIHlvdXIgc2V0dXAuClBlcmF3YXRhbiBQYXNjYSBNZWxhaGlya2FuICAgUGlqYXQgL0JvZHkgTWFzc2FnZQpIZXJlIGFyZSBqdXN0IGEgZmV3IG9mIHRoZSBsZXNzb25zIEkndmUgbGVhcm5lZCB3aGlsZSBiZWluZyBhIGhvcnJpYmxlIGJvc3MgaW4gdGhlIHJpbmcgYW5kIGhvdyBkb2luZyB0aGUgb3Bwb3NpdGUgaGVscHMgbWUgYmUgdGhlIGJlc3QgYm9zcyBJIGNhbiBiZSBvdXRzaWRlIG9mIGl0Li4gClRoZSBpZGVhIHRoYXQgdGhlcmUgYXJlIG1vcmUgdGhhbiAxMDAgdHlwZXMgb2YgYXJ0aHJpdGlzLCBhbmQgdGhhdCBtYW55IGNhbiBiZSBkZXZhc3RhdGluZywgZGViaWxpdGF0aW5nIGFuZCBldmVuIGZhdGFsLCBpcyBzaG9ja2luZy4gYW5kIFl1a29uIGNoYXB0ZXIgb2YgdGhlIEFydGhyaXRpcyBTb2NpZXR5IHByZXNlbnRlZCBpdHMgaW5hdWd1cmFsIEFsbCBpbiBmb3IgQXJ0aHJpdGlzIFBva2VyIEdhbGEuCkFuZCBoZSBwcm9iYWJseSB3b3VsZCBoYXZlIGJlZW4gcmVtZW1iZXJlZCBmb3Igb3VyIHdpdGhkcmF3YWwgZnJvbSBWaWV0bmFtIGhhZCBOaXhvbiBub3Qgc2Fib3RhZ2VkIHRoZSBQYXJpcyBQZWFjZSBUYWxrcyBvbmx5IHRvIGFncmVlIHRvIHNpbWlsYXIgdGVybXMgNCB5ZWFycyBhbmQgdGhvdXNhbmRzIG9mIEFtZXJpY2FuIChhbG9uZyB3aXRoIGh1bmRyZWRzIG9mIHRob3VzYW5kIFZpZXRuYW1lc2UsIENhbWJvZGlhbiBhbmQgTGFvdGlhbiB2aWN0aW1zKS4uIApVTlYsIDIwMTlHcmFjZSBPdGllbm8sIFVOIFZvbHVudGVlciBBaXIgT3BlcmF0aW9ucyBQbGFubmluZyBPZmZpY2VyIGF0IHRoZSBNT1ZDT04gQXZpYXRpb24gc2VjdGlvbiBvZiBNT05VU0NPIGluIEdvbWEsIERSQywgZG9pbmcgYSBwcmUgZmxpZ2h0IGNoZWNrLiBQb3N0ZWQgaW4gR29tYSwgR3JhY2UgaXMgd29ya2luZyBpbiBhIGxhcmdlbHkgbWFsZSBkb21pbmF0ZWQgc2VjdG9yLiAKUG9rZXIgcGxheWVycyBoYXZlIHdpbm5pbmcgaGFuZCBpbiBOWSBjYXNlCjM0KSBBZ2FpbiwgQWdhaW4gLiBDYW4gYmUgZm91bmQgb24gWW91dHViZS4gMzUpIERpc2NvIEhlYXZlbiAuIAo3LiBOb3QgbWFraW5nIG1lIGZlZWwgd2FudGVkIHNleHVhbGx5LiAKSSB3YXMgZXhjaXRlZCBhcyBoZWxsIHRoYXQgaGUgd2FzIGFsbG93aW5nIHRoZW0hIEkgZ290IGEgMyBwcm9uZyBmb2xkZXIgYW5kIGNhcmQgc2xlZXZlcyBhbmQgc3RhcnRlZCBjb2xsZWN0aW5nLiBJIGNvbGxlY3RlZCBhbG1vc3QgZXZlcnkgc2luZ2xlIHBva2Vtb24gb3ZlciB0aGUgbmV4dCBmZXcgbW9udGhzLCAxNDkuIApBdCB0aGUgTW90b3IgQ2l0eSBDYXNpbm8sIGluIFRleGFzIEhvbGQgJ2VtIHBva2VyLCBpZiBhIHBsYXllciBoaXRzIGFueSBmb3VyIG9mIGEga2luZCBhbmQgaXMgYmVhdGVuIGJ5IGFub3RoZXIgcGxheWVyJ3MgZm91ciBvZiBhIGtpbmQsIHRoZXkgaGl0IHRoZSBiYWQgYmVhdCBqYWNrcG90LiBCb3RoIHBsYXllcnMgbXVzdCBoYXZlIHBvY2tldCBwYWlycy4gVGhlIGZvdXIgb2YgYSBraW5kIG11c3Qgb25seSBiZSBiZWF0ZW4gYnkgYW5vdGhlciBmb3VyIG9mIGEga2luZC4gQSBzdHJhaWdodCBmbHVzaCBvbmx5IHdpbnMgdGhlbSB0aGUgbXVjaCBzbWFsbGVyIGJhZCBiZWF0IGphY2twb3QuIFRoZSBydWxlcyBhcmUgc2xpZ2h0bHkgZGlmZmVyZW50IGF0IHRoZSBNR00gR3JhbmQgRGV0cm9pdCBhbmQgR3JlZWt0b3duLiBUaGUgYmFkIGJlYXQgamFja3BvdCBjYW4gYmUgaGl0IGlmIGEgcGxheWVyJ3MgZm91ciBvZiBhIGtpbmQgbG9zZXMgdG8gYSBzdHJhaWdodCBmbHVzaC4gVGhhdCBtYWtlcyBpdCBzbGlnaHRseSBlYXNpZXIgdG8gd2luLiBUaGUgb2RkcyBvZiBoaXR0aW5nIGVpdGhlciBhcmUgYXN0cm9ub21pY2FsLCBidXQgaXQgZG9lcyBoYXBwZW4uCk0ncyBzdXJlIGlzIGEgc3RyYW5nZSBuYW1lIGZvciBhIHNhbmR3aWNoIHNob3AhIiB5b3UgbWlnaHQgYmUgc2F5aW5nIHRvIHlvdXJzZWxmLCBhbmQgSSBjb3VsZG4ndCBhZ3JlZSBtb3JlLiBUaGUgb25seSByZWFzb24gdGhlIHBsYWNlIHdhcyBuYW1lZCBNci4gTSdzIGlzIGJlY2F1c2UgdGhlIGJ1c2luZXNzIHRoYXQgd2FzIHRoZXJlIGJlZm9yZSB1cyB3YXMgYSBzdWIgc2hvcCBjYWxsZWQgTXIuIApJdCBhYm91dCA2IGhvdXJzIHRvIFppb24sIHNvIHBsYW4geW91ciBmaXJzdCBvdmVybmlnaHQgaW4gU3ByaW5nZGFsZSwgVVQsIGp1c3Qgb3V0c2lkZSBvZiB0aGUgcGFyaywgb3IgY2FtcGluZyBpbiB0aGUgcGFyayBpdHNlbGYuIEdldCB5b3VyIHJlc2VydmF0aW9ucyBBU0FQLiBJbiBBcHJpbCwgd2UgaGF2ZSBlYXJseSBzdW5zZXRzIHN0aWxsLCBzbyB5b3UgYmVzdCBvZmYganVzdCBlbmpveWluZyBTcHJpbmdkYWxlIHlvdXIgZmlyc3QgbmlnaHQuClllYSB0aGUgZm9yZXN0IGlzIHN0aWxsIGNvbnRhbWluYXRlZCBiZWNhdXNlIGl0IGlzIG9uIHRoZSB0cmVlcy9sZWF2ZXMuIApXaGF0J2QgdGhleSBkbz8gR2F2ZSBtZSBmcmVha2luZyBOb3Jjby4gQ291bGRuJ3Qgc2xlZXAgKGVzcGVjaWFsbHkgd2l0aCBteSBsZWcgZWxldmF0ZWQgYW5kIGljaW5nIG15IGtuZWUgZXZlcnkgMzAgbWludXRlcyksIGNvbnN0YW50bHkgcHVraW5nLCBhbmQgbXkgdG9uZ3VlIHN0YXJ0ZWQgdHdpdGNoaW5nIHdoaWNoIHdhcyByZWFsbHkgYml6YXJyZSwgem9mcmFuIGRpZCBub3RoaW5nLiAKSSBhbHdheXMgaGFkIGxhY2tsdXN0ZXIgc2tpbiwgd2l0aCBicmVha291dHMgaGVyZSBhbmQgdGhlcmUsIG5ldmVyIG1vcmUgdGhhbiA0IG9yIHNvIHBpbXBsZXMgYXQgYSB0aW1lLiBMYXN0IEZlYnJ1YXJ5L01hcmNoIEkgc3RhcnRlZCBzbG93bHkgZGV2ZWxvcGluZyBhIHNldmVyZSBob3Jtb25hbCBicmVha291dC4gCkknZCBoYXZlIGl0IGdpdmUgaGltIGEgcmVhc29uYWJsZSBidWZmIHdpdGggYSBkZWxheWVkIG5lZ2F0aXZlIHNpZGUgYWZmZWN0LiAKSW4gdGhlc2UgbmV3IGV4cGVyaW1lbnRzIHdlIHNlZSBhY2NvbW1vZGF0aW9uLiBJZiBhIGNoaWxkIGxldCdzIGdvIG9mIGEgaGVsaXVtIGJhbGxvb24gYW5kLCBjb250cmFyeSB0byB0aGVpciBzY2hlbWEsIHdhdGNoZXMgcmlzZSBpbnN0ZWFkIG9mIGZhbGwgdGhpcyBpcyBhbHNvIGFuIGV4YW1wbGUgb2YgYWNjb21tb2RhdGlvbi4uIApDdXQgaW50byBiYXJzIG5leHQgbW9ybmluZy4gCkhvd2V2ZXIsIGluIHRoZSBjYXNlIG9mIHRoaXMgYWR2ZXJ0aXNlbWVudCwgd2UgYmVsaWV2ZSB0aGF0IHdlIG11c3QgdGFrZSBhIHN0YW5kLiAKWWVhaC4gQnV0IGZpcmluZyBldmVyeW9uZSBhbmQgc3RhcnRpbmcgb3ZlciBmcmVzaCBjb21lcyB3aXRoIGNvc3RzIGFuZCBub3cgaXNuIHRoZSB0aW1lIHRvIHJlYnVpbGQgZnJvbSBzY3JhdGNoICAgbm90IGFmdGVyIDYrIHllYXJzIG9mIHRyeWluZyB0byBnZXQgaXQgcmlnaHQuIFdlIGhhdmUgc29tZXRoaW5nIHRvIGJ1aWxkIG9uLCBob3dldmVyIGZsYXdlZCBpdCBtYXkgYmUuIApJIHNpZ25lZCB1cCBmb3IgYSBwbGFjZW1lbnQgdGVzdCBpbiBBdWd1c3QsIHRvb2sgdGhlIHRlc3QgaW4gTm92ZW1iZXIsIHN0YXJ0ZWQgbGV2ZWwgNCBpbiBGZWJydWFyeSBhbmQgZmluaXNoZWQgbGV2ZWwgNSBieSBKdWx5LiAKRmV3IGFyZSBiZXR0ZXIgdGhhbiBQcm9zcGVyaXR5IFNvY2lhbCBDbHViJ3MgTGVudGVuIG1lYWwuMiBkYXlzIGFnbyArIEJ5IExhdXJhIERlTWFyY28sIFRoZSBQbGFpbiBEZWFsZXJHcmVhdGVyIENsZXZlbGFuZCBGaXNoIEZyeSBHdWlkZSAyMDE5OiBOb3J0aGVhc3QgT2hpbydzIG1vc3QgY29tcGxldGUgbGlzdCBHcmVhdGVyIENsZXZlbGFuZCBGaXNoIEZyeSBHdWlkZSAyMDE5OiBOb3J0aGVhc3QgT2hpbydzIG1vc3QgY29tcGxldGUgbGlzdCBDaGVjayBvdXQgdGhlIG5vbnByb2ZpdCBmaXNoIGZyeSBldmVudHMgaGFwcGVuaW5nIGluIE5vcnRoZWFzdCBPaGlvIHRoaXMgTGVudGVuIHNlYXNvbi4zIGRheXMgYWdvICsgQnkgbWJvbmEgYW5pY2tvbG9mZkNvdXBsZSBtYWtlcyBhIGxpdmluZyBmYXJtaW5nIGluIENsZXZlbGFuZCBDb3VwbGUgbWFrZXMgYSBsaXZpbmcgZmFybWluZyBpbiBDbGV2ZWxhbmQgQW5uYWJlbCBLaG91cmkgYW5kIEVyaWMgU3RvZmZlciBncm93IHZlZ2V0YWJsZXMgZm9yIGZhbWlsaWVzIGFuZCB0b3AgcmVzdGF1cmFudHMgaW4gQ2xldmVsYW5kIGFuZCBMYWtld29vZC5CbHVlIEhlcm9uIEJyZXdlcnkgb3BlbnMgb2ZmaWNpYWxseSB3aXRoIDEgYmVlciAgIGZvciBub3cgQmx1ZSBIZXJvbiBCcmV3ZXJ5IG9wZW5zIG9mZmljaWFsbHkgd2l0aCAxIGJlZXIgICBmb3Igbm93IEJsdWUgSGVyb24gQnJld2VyeSBpbiBNZWRpbmEgQ291bnR5IGlzIG9wZW4uIApBbHNvIEkgdGhvdWdodCB3aGF0IGNhdXNlZCB0aGUgcHJvYmxlbSB3YXMgcHV0dGluZyBoZWFsdGggaW5zdXJhbmNlIGludG8gYW4gb3JnYW5pemF0aW9uIHdobyBwcmltYXJ5IGNvbmNlcm4gaXMgdG8gbWFrZSBtb25leS4gWW91IGhhdmUgYW4gRiBUT04gb2YgbWlkZGxlbWVuIGluIHlvdXIgaGVhbHRoY2FyZSBzeXN0ZW0gcmlnaHQgbm93LiBBbmQgbXVjaCBtb3JlIHRoYW4gdGhhdC4gClJlbWVtYmVyIHRoYXQgd2UncmUgZXhpc3RpbmcgaW4gYSB0ZXh0IGJhc2VkIHNwYWNlLiBXaGF0IHlvdXIgaW5uZXIgdm9pY2UgcmVhZHMgb25lIHdheSBtYXkgcmVhZCBlbnRpcmVseSBkaWZmZXJlbnRseSB0byBvdGhlcnMuIFRoaXMgZG9lc24ndCBtZWFuIHRoYXQgeW91ciBjb21tZW50IGlzIG5lY2Vzc2FyaWx5IHdyb25nLCBob3dldmVyIGl0IG1heSBnZXQgcmVtb3ZlZCBmdWxseSBpZiBpdCdzIHByZXR0eSBibGF0YW50LCBvciBpdCBtYXkgYmUgcmVtb3ZlZCBhbmQgaGFzIGJlZW4gbGlua2VkIGluIG91ciBNb2QgSHViLCBmb3IgcmV2aWV3IGJ5IGEgU2VuaW9yIG1vZC4gCkFueW9uZSB3aG8gaXMgZmFtaWxpYXIgd2l0aCBTb3V0aGVhc3QgRmxvcmlkYSBrbm93cyB0aGUgc3RvcmllcyBvZiByYW1wYW50IGFidXNlIG9mIHJlaGFiaWxpdGF0aW9uIGZhY2lsaXRpZXMuIEkgaGFkIGxvZnR5IGFzcGlyYXRpb25zLiBJIHdhbnRlZCB0byB0YWtlIG9uZSB0aGF0IHdhcyBsb2NhdGVkIG5lYXIgYSB0ZXJyaWZpYyBwYXJrIG5leHQgdG8gdGhlIG9jZWFuIGFuZCBjb252ZXJ0IGl0IGludG8gcmVudGFsIGFwYXJ0bWVudHMuIFdlIHB1cmNoYXNlZCB0aGUgcHJvcGVydHkgZm9yICQzNTUsMDAwLCBzcGVudCAkNDAsMDAwIG9uIHJlaGFiIGNvc3RzLCBhbmQgdHVybmVkIHRoZSBidWlsZGluZyBhcm91bmQuIEl0IGhhcyBkb3VibGVkIGluIHZhbHVlIGFuZCBjYXNoIGZsb3dzIHBoZW5vbWVuYWxseS4gV2Ugc2VsZiBtYW5hZ2UgdGhlIHByb3BlcnR5IGFuZCB0YWtlIGltbWVuc2UgcHJpZGUgZm9yIHBsYXlpbmcgYSByb2xlIGluIGdlbnRyaWZ5aW5nIHRoZSBhcmVhLiBPdmVyIGEgdGhyZWUgeWVhciBwZXJpb2Qgd2hpbGUgb3BlcmF0aW5nIHRoZSByZW50YWxzLCBJIHdlbnQgdGhlIERhdmUgUmFtc2V5IHJvdXRlIGFuZCBwYWlkIG9mZiBhbnkgZGVidCBwb3NzaWJsZS4KT25lIGNhbiBhcmd1ZSB0aGF0IGl0IGlzIGJlY2F1c2Ugb2YgdGhpcyB2YWd1ZW5lc3MgaW4gdGhlIGNvbnN0aXR1dGlvbiBhbmQgaW4gdGhlIGxhdywgdGhhdCBDaGluYSBpcyBhYmxlIHRvIGJlY29tZSBhbiBlY29ub21pYyB3b3JsZCBwb3dlciBpbiBzdWNoIGEgc2hvcnQgdGltZS4gKEluZnJhc3RydWN0dXJlIGRldmVsb3BtZW50LCByZXNvdXJjZSBkaXN0cmlidXRpb24sIGdvdmVybm1lbnQgc3BvbnNvcmVkIGVudGVycHJpc2UgYW5kIHByaXZhdGUgc2VjdG9yIGludGVyZmVyZW5jZSBhcmUgYWxsIGV4dHJlbWVseSAnZWZmaWNpZW50Jywgd2hlcmVhcyBpbiBhIGRldmVsb3BlZCBjb3VudHJ5LCByZWd1bGF0aW9ucywgbGF3cywgYW5kIGJsb2F0ZWQgYWRtaW5pc3RyYXRpb25zIHdpbGwga2lsbCBhbnkgc29ydCBvZiBlZmZpY2llbmN5KQpVS2JldHRuZyBoYXMgYSBncmVhdCBmZWF1dHVyZSAgIEJldHRpbmcgZXhjaGFuZ2VzLiBCZXR0aW5nIGV4Y2hhbmdlcyB3b3JrcyBzaW1pbGFyIHRvIGFueSBvdGhlciBleGNoYW5nZS4gQmV0dGluZyBleGNoYW5nZSBpcyBhIGJldCB3aGVyZSB0aGUgYmV0cyBhcmUgYm91Z2h0IGFuZCBzb2xkLCBhbmQgdGhlIGNvbnRyYWN0cyBtYWRlLiAKIklmIHdlIGNhbiBnZXQgYSBiYWJ5IHNpdHRlciwiIGhlIHNhaWQuICJXZSdsbCBoYXZlIGEgbmljZSBkaW5uZXIuIEEgYm90dGxlIG9mIHdpbmUuIENvbWUgaG9tZSBhbmQgcHJhY3RpY2UgbWFzc2FnZS4iCkVhcmxpZXIgYW5zd2VyIHdhcyBiZXR0ZXIgdGhhbiBtaW5lLiBUaGUgUG9rZXIgcm9vbSBpcyAiTCIgc2hhcGVkLCBzbyBpdCBkZXBlbmRzIG9uIHdoaWNoIHNpZGUgb2YgdGhlIHJvb20geW91IGZpbmQgZmlyc3QuIApBIHRveSBjYW4gaGVscCBtYWtlIHRoZSBzY2FyeSBvYmplY3Qgb3Igc2l0dWF0aW9uIHNlZW0gbGVzcyBzaWduaWZpY2FudCwgYXMgaXQgc2hpZnRzIHRoZSBkb2cgZm9jdXMgZnJvbSB3aGF0cyBmcmlnaHRlbmluZyB0byBzb21ldGhpbmcgdGhhdCBzb21lIGRvZ3MgYmVjb21lIGV4Y2l0ZWQgb3Zlci4gCllvdSBjYW4gd2FpdCB0byB0ZWxsIHRoZSB3b3JsZCEgSW4geW91ciBleGNpdGVtZW50IHlvdSB0ZWxsIHlvdXIgcGFyZW50cyB0aGUgZ29vZCBuZXdzLiAKIkknbSBvbmUgb2YgdGhvc2UgcGVvcGxlIHdobyB0aGlua3MgdGhhdCBhY3Rpb25zIHNwZWFrIGxvdWRlciB0aGFuIHdvcmRzLCIgc2F5cyBPZGEuIApDbGllbnQgcmVhbGx5IGxvdmVzIHRoZSBnb2xkLCBidXQgSSBkaWRuIHRoaW5rIGEgZ29sZCBsb2dvIHdvdWxkIHRyYW5zbGF0ZSB3ZWxsIGFzIGEgbG9nbyAoeW91IHJpZ2h0IEkgYW0gZ29pbmcgdG8gbG9zZSBzb21lIG9mIHRob3NlIHllbGxvdyBhbmQgc2hhZGluZyBkZXRhaWxzIGFzIGl0IGlzIG5vdyB3aGVuIGlzIHNjYWxlZCBkb3duKS5JIGZpZ3VyZWQgdGhpcyB3b3VsZCBiZSBhIGdvb2Qgd2F5IHRvIHJlcHJlc2VudCBhIHN1biBzb2FrZWQgYmFybiBhbmQgdXNlIGNvbG9ycyB0aGF0IHJlc29uYXRlIHdpdGggdGhlIGJ1c2luZXNzIChzdW4gaXMgY3JpdGljYWwgdG8gZmFybWluZywgZXNwZWNpYWxseSBpbiB0aGUgUE5XOyBiYXJuIHJlZCBhbmQgZ29sZCBsb29rIG5pY2UgYW5kIGZpdCB0aGUgZmFybWVyIGxvb2sgd2VsbDsgdGhlcmUgYSAxMjAgeWVhciBvbGQgYmFybiBvbiB0aGUgY2xpZW50IHByb3BlcnR5IG92ZXJsb29raW5nIHRoZSB2ZWdldGFibGUgZmllbGQ7KVllYWgsIEkgYmVlbiB0cnlpbmcgdG8gc29ydCBvdXQgdGhvc2Ugc2hhcGVzLiAKSXQgc2hvdWxkIGJlICAgYnV0IGlzbid0IGFsd2F5cy4uIApDaGluYSBhbmQgZWFzdCBhc2lhIGFyZSB0aGUgdGlnZXJzIG9mIHRvZGF5IGFuZCB0b21vcnJvdy4gCk92ZXJhbGwgdGhvdWdoIGl0IHdpbGwgYmUgYSBuZXQgbG9zcyBmb3IgdGhlIGNvdW50cnkvd29ybGQuLiAKVXNpbmcgQSBNZXRhbCBEZXRlY3RvciBUbyBTZWFyY2ggRm9yIEdvbGQKV2Ugd2VyZSB3b3JyaWVkIGhlIG1pZ2h0IG5vdCBnaXZlIGhlciBhcyBtdWNoIGxvdmUgYXMgc2hlIHVzZWQgdG8gYnV0IHRoZXkgYmVlbiBnb2luZyBmb3IgaGlrZXMgYW5kIGN1ZGRsaW5nIGFuZCBoZSBmaW5hbGx5IHJlYWxpemVkIHdoYXQgYW4gYXdlc29tZSBkb2cgc2hlIGlzLiBIZSBtYWRlIGl0IHRocmVlIHllYXJzLCBhbmQgYWx3YXlzIHNhaWQgaGlzIGdvYWwgd2FzIHRvIHNlZSBtZSBnZXQgdG8gS2luZGVyZ2FydGVuLiBIZSBtYWRlIGl0IHRocm91Z2ggbXkgd2hvbGUgS2luZGVyZ2FydGVuIHllYXIgYW5kIGhhbGYgb2YgZmlyc3QgZ3JhZGUgICBJIHN0aWxsIHJlbWVtYmVyIGhpbSBtYWtpbmcgbWUgcG9wIHRhcnRzIGZvciBicmVha2Zhc3QgYW5kIGJvbG9nbmEvbXVzdGFyZCByb2xsIHVwcyBmb3IgbHVuY2gsIGV2ZW4gd2hlbiB0aGUgY2hlbW8gYW5kIHN1cmdlcmllcyBoYWQgaGltIGF0IGhpcyB3b3JzdC4gCiJTdXIgdW5lIHpvbmUgZm9ydGVtZW50IHVyYmFuaXNlIGNvbW1lIGxhIEN0ZSBkJ0F6dXIsIHVuZSB2YWd1ZSBkZSAxIG10cmUgcXVpIGVudmFoaXJhaXQgbGEgUHJvbWVuYWRlIGRlcyBBbmdsYWlzIG91IGxhIHZpbGxlIGRlIENhbm5lcyBwb3NlcmFpdCBkaiB1biBncm9zIHByb2JsbWUuIERhbnMgbCdpbmNvbnNjaWVudCBjb2xsZWN0aWYsIGxlcyBnZW5zIHBlbnNlbnQgcXUnaWxzIG9udCBkaiBjb25udSBjZWxhIGxvcnMgZCd1bmUgdGVtcHRlLiBNYWlzIGwsIG9uIHBhcmxlIGQndW5lIHZhZ3VlIHF1aSBlbnZhaGl0IGxlIGxpdHRvcmFsIGF2ZWMgdW5lIHZpdGVzc2UgZCdhcnJpdmUgZGUgcGx1c2lldXJzIGRpemFpbmVzIGRlIGttL2guIApEb2VzIGFueW9uZSBoYXZlIGFueSBleHBlcmllbmNlIHdpdGggdGhlc2Uga2luZHMgb2YgdGhpbmdzPyBTZWFyY2hpbmcgdGhlIGludGVybmV0IGJyaW5ncyB1cCBhIGxvdCBzcGFtbXkgc3R5bGUgc2l0ZXMgdGhhdCBJIG5vdCB3aWxsaW5nIHRvIHRydXN0LiAKWW91J2xsIHNlZSBwaHJhc2VzIGxpa2UgImJyb3VnaHQgdG8geW91IGJ5LCIgInByZXNlbnRlZCBieSwiIG9yICJzcG9uc29yZWQgYnkuIi4gClN1cGVyTWFkQ293ICAxIHBvaW50ICBzdWJtaXR0ZWQgMjQgZGF5cyBhZ28KTG9vdCBhbmQgTG9vdGVyIFNob290ZXIuIApDb21wYXJlZCB0byBBbmRyb21lZGEsIHdoZXJlIHdlIHdlbnQgdG8gYSBuZXcgcGxhY2UgYW5kIGV2ZXJ5IHBsYW5ldCBsb29rIHByZXR0eSBtdWNoIHRoZSBzYW1lIGFuZCB0aG9zZSBwbGFjZXMgcmVhbGx5IGhhZCBubyBzdG9yeSBvciBoaXN0b3J5IGJlaGluZCB0aGVtIChBbmRyb21lZGEganVzdCBmZWx0IGRlYWQgYW5kIGVtcHR5LCB3ZSBvbmx5IGVuY291bnRlcmVkIDIgbmV3IGFsaWVuIHNwZWNpZXMsIEkgd2FzIGFsbCBmb3IgZ29pbmcgdG8gYSBuZXcgZ2FsYXh5IGJ1dCBhZnRlciBwbGF5aW5nIE1FQSBJIHRoaW5rIGl0IHdhcyBhIGh1Z2UgbWlzdGFrZSkuSSB0aGluayBKYXdzIG9mIEhha2tvbiBoYWQgdGhlIGJlc3QgIm9wZW4gd29ybGQiIGFyZWEgb2YgdGhlIGdhbWUuIApUaGUgV2hpdGVjYXBzIGhhdmUgZG9uZSBhIGxvdCBvZiB0cmF2ZWxsaW5nIHNvIGZhciB0aGlzIHNlYXNvbiBhbmQgaGF2ZSBvbmx5IHR3byBsb25nIGRpc3RhbmNlIGdhbWVzIHJlbWFpbmluZyB0byB0aGUgRWFzdCBDb2FzdCBhdCBOZXcgWW9yayBDaXR5IEZDIG9uIEF1Zy4gNCwgYW5kIHRvIFRvcm9udG8gb24gT2N0LiAKSWYgeW91IHdhbnQgdG8gY291bnQgTWl0Y2ggVmFuZGUgU29tcGVsIDIwIHR3byB5ZWFycyBpbiAyMDE2IDE3LCBnbyBhaGVhZCwgYnV0IGhlIG9ubHkgaGFkIHRocmVlIG9mIHRob3NlIGluIGEgTG9uZG9uIGplcnNleSBhZnRlciBiZWluZyBhY3F1aXJlZCBmcm9tIE9zaGF3YS4gQWRhbSBCb3F2aXN0IG5leHQgZ29hbCB3aWxsIHB1dCBoaW0gYXQgMjAsIGEgbmlmdHkgZmVhdCBmb3IgYSBTd2VkaXNoIGltcG9ydCBpbiBoaXMgZmlyc3QgT0hMIHNlYXNvbi4gVGhlIEJsYWNraGF3a3Mgd2lsbCBzcGVuZCB0aGlzIHN1bW1lciBhbmQgdHJhaW5pbmcgY2FtcCBpbiB0aGUgZmFsbCBkZWNpZGluZyBpZiBoZSByZWFkeSBmb3IgdGhlIHBybyByYW5rcyBvciBuZWVkcyBhbm90aGVyIHllYXIgb2Ygc2Vhc29uaW5nIGJhY2sgaW4gTG9uZG9uLiAKSSBsb3N0IHdlaWdodCB3aGVuIEkgam9pbmVkIG15IG1pZGRsZSBzY2hvb2wvaGlnaCBzY2hvb2wgcnVubmluZyBjbHVicy4gClRoZSBkb2N1bWVudHMgd2VyZSByZWxlYXNlZCBhbmQgcHVibGlzaGVkIHRoaXMgd2VlayBieSB0aGUgV29vZHJvdyBXaWxzb24gQ2VudGVyIGZvciBTY2hvbGFycyBhcyBwYXJ0IG9mIHRoZSBDb2xkIFdhciBJbnRlcm5hdGlvbmFsIEhpc3RvcnkgUHJvamVjdCBUaGUgcHJldmFpbGluZyBjb252ZW50aW9uYWwgd2lzZG9tIGhhcyBiZWVuIHRoYXQgU292aWV0IGxlYWRlciBKb3NlZiBTdGFsaW4gcGxhbm5lZCBhbmQgb3JkZXJlZCBOb3J0aCBLb3JlYSAxOTUwIGFzc2F1bHQgb24gU291dGggS29yZWEgYXMgYSBkZWxpYmVyYXRlIHRlc3Qgb2YgV2VzdGVybiByZXNvbHZlLiAKV2h5IG5lZWQgdG8gY2FtcCBvdXQgYXQgc29tZW9uZSBlbHNlJ3MgcGxhY2U/IE15IE1JTCBHcmltaGlsZGUgaXMgZm9yZXZlciBkZW1hbmRpbmcgaGVyIGdyYW5kY2hpbGQgdG8gc3RheSBvdmVyIGFuZCBJIGxhdWdoIGNveiBzaGUgY2FuIGJhcmVseSBsb29rIGFmdGVyIGhlcnNlbGYhLiAKVGhlU2lsZW50V2F5ICAzIHBvaW50cyAgc3VibWl0dGVkIDExIG1vbnRocyBhZ28KTG9vayBhdCB3aGF0IGhhcHBlbmVkIGluIFBhcmlzIGFuZCBNaWxhbiB3aXRoIHRoZSBzbW9nIGxhc3Qgd2ludGVyLiBJIGFscmVhZHkgYmVhdCB0aGlzIHN1YmplY3QgdG8gZGVhdGggd2l0aCBhbm90aGVyIGtpbmQgRHV0Y2h5IHRoaXMgbW9ybmluZywgYnV0IHJlYWxseSwgSSBkb24gZ2V0IGl0LiBQZW9wbGUgd2hvIGxvdmUgdGFsa2luZyBhYm91dCBoZWFsdGggYWxsIHRoZSB0aW1lLCBoZWFsdGh5IGZvb2QsIHVuaXZlcnNhbCBoZWFsdGhjYXJlLCBjbGltYXRlIGNoYW5nZSwgbnVrZXMgPSBiYWQsIGJ1dCBub3QgYSB3b3JkIGFib3V0IGRpZXNlbCB3aGljaCBpcyBraWxsaW5nIHBlb3BsZSByaWdodCBub3cuIApNeSBjdXJyZW50IHNvbHV0aW9uIGlzIHRvIHVzZSBvbmUgb2YgdGhlIFppbmcgbmVvcHJlbmUgY2FtZXJhIGNhc2VzIGFuZCBrZWVwIHRoZSBjYW1lcmEgaW4gYSB3YXRlciBib3R0bGUgcG9ja2V0IChTb255IGE3aWkgd2l0aCAzNW1tIHByaW1lIGxlbnMpLiBJbGwgYmUgZ2V0dGluZyBhIGxvdCBvZiBtaWxlcyB1bmRlcm5lYXRoIHdpdGggdGhhdCBzZXR1cCBpbiB0aGUgbmV4dCBmZXcgd2Vla3MgYW5kIHBsYW4gdG8gd3JpdGUgc29tZXRoaW5nIHVwIGFib3V0IGl0IGNvbXBhcmVkIHRvIHRoZSBQRCBDbGlwLiBJbml0aWFsbHkgSSBmZWVsIGxpa2UgSSBoYXZlIGEgdG9uIG1vcmUgcHJvdGVjdGlvbiBmcm9tIGR1c3QgYW5kIGNvbnRhY3QsIGZvciBzbGlnaHQgcGVuYWx0aWVzIGluIHdlaWdodCBhbmQgYWNjZXNzaWJpbGl0eS4uIApNeSBxdWVzdGlvbiBpcyB3aHkgd291bGQgYW55b25lIGNob29zZSB0byBzdXJyb3VuZCB0aGVtc2VsdmVzIHdpdGggc3VjaCBiYWQgZW5lcmd5PyBJIGdldCBpdCBjYW4gYmUgdXNlZnVsIHRvIHZlbnQsIGJ1dCBzdWJzY3JpYmluZyB0byBhIHN1YiBsaWtlIHRoYXQsIHlvdSBvbmx5IGV2ZXIgc2VlIHRoYXQga2luZCBvZiBzaGl0IHRoYXQgYW5ub3lzIHlvdS4gSXQgbGlrZSBzb21lb25lIHdobyBoYXRlcyB0aGUgTWluaW9ucyBzdWJzY3JpYmluZyB0byByL21pbmlvbmhhdGUgLCBhbGwgeW91IGRvaW5nIGlzIHN1cnJvdW5kaW5nIHlvdXJzZWxmIHdpdGggbW9yZSBvZiB3aGF0IHlvdSBkZXNwaXNlLiBJIGp1c3QgZG9udCBnZXQgdGhlIHN1YnJlZGRpdHMgdGhhdCBmZWVkIG9mZiBvZiBuZWdhdGl2aXR5LCBlc3BlY2lhbGx5IHdoZW4gbG90cyBvZiB0aGUgcG9zdHMgYXJlIGp1c3Qgc3Rva2luZyBhIHN0dXBpZGl0eSBmaXJlIGZvciB0aGUgc2FrZSBvZiBtb3JlIG9yYW5nZSBhcnJvd3MKV2FzIGtpbmQgb2Ygc2VhbGVkIGZvciBtZS4gCkkgaGlnaGx5IHJlY29tbWVuZCBpdCBpZiB5b3Ugd2FudCB0byBsZWFybiBob3cgdG8gbmF0dXJhbGx5IGF0dHJhY3Qgd29tZW4gd2l0aCBob25lc3R5ICAgbm90IGdhbWVzLi4gCkl0IG1pZ2h0IGJlIHdvcnRoIGxvb2tpbmcgaW50byBnZXR0aW5nIGEgcHJlc2NyaXB0aW9uIGZvciB4YW5heCBvciBwb3NzaWJseSBldmVuIHN0YXJ0IG9uIHNvbWUga2luZCBvZiBTU1JJLiBBdCBsZWFzdCBmb3IgbWUgSSBuZXZlciBiZWVuIGFibGUgdG8ganVzdCBjaGlsbCBvdXQgYW5kIHRva2UgbGlrZSBJIHVzZSB0byBzaW5jZSB0aGF0IGZpcnN0IHBhbmljIGF0dGFjay4gR2l2ZSB5b3VyIGhlYWQgYSBsaXR0bGUgdGltZSB0byBnZXQgcmlnaHQgYW5kIHlvdSBiZSBvaywgYnV0IHlvdSBtYXkgaGF2ZSBhIGxvbmcgcm9hZCBhaGVhZCBvZiB5b3UgYmVmb3JlIHlvdSBjYW4gc21va2Ugd29ycnkgZnJlZSBhZ2Fpbi4gCkdHIE5ldHdvcmsgaG9uZXN0IHJldmlldwoiV2UncmUgaW50ZXJlc3RlZCBpbiBnZXR0aW5nIHJpZCBvZiBjYXNoLCIgc2FpZCBNYXRhcyBJVCBEaXJlY3RvciBUaG9tYXMgR3JhbmUuICJUaGUgaGFuZGxpbmcsIHNlY3VyaXR5IGFuZCBldmVyeXRoaW5nIGVsc2UgaXMgZXhwZW5zaXZlOyBzbywgZGVmaW5pdGVseSB3ZSB3YW50IHRvIHB1c2ggZGlnaXRhbCBwYXltZW50cywgYW5kIHRoYXQncyBvZiBjb3Vyc2Ugd2h5IHdlIGludHJvZHVjZWQgbW9iaWxlIHBheW1lbnRzIHRvIGhlbHAgdGhpcyBwcm9jZXNzLiIKTm90IHRoYXQgSSBoYXZlIGtpZHMgYnV0IEkgaW1wcmVzc2VkIGF0IGhvdyBkb3VibGUgaW5jb21lIGZhbWlsaWVzIGhhbmRsZSB0aGUgbG9naXN0aWNzIG9mIGtpZHMsIHRob3VnaCwgd2hlbiBzY2hvb2wgZW5kcyBhdCB0aHJlZSwgdGhlIGRlbnRpc3QgYW5kIHBvc3Qgb2ZmaWNlIGNsb3NlIGF0IGZpdmUgZXRjLiB3ZWxsLCBub3QgdG9vIGxvbmcgYWdvIHRoZSBzdXBlcm1hcmtldCB3YXMgY2xvc2luZyBhdCBmaXZlIGFzIHdlbGwsIGFsdGhvdWdoIGdvaW5nIHRvIHRoZSBzaG9wcyB3aGVuZXZlciB5b3UgbmVlZCB0byBpcyBhbHNvIGEgbW9kZXJuIGNvbmNlcHQuCkkgb25jZSB0cmllZCBncmluZGluZyBhdCB0aGUgY2FzaW5vIGFuZCB3b24gcmlnaHQgYXQgJDIwL2hyIG92ZXIgYWJvdXQgMTUwaHJzLiAKTm93IHdoZXJlIGVsc2UgY2FuIHdlIGRyYXcgc2ltaWxhcml0aWVzPyBXZWxsLCBhbm90aGVyIGJpZyBvbmUgSSBiZWxpZXZlIHdlIHNob3VsZCBsb29rIGF0IGlzIHRoZSBmdW5kYW1lbnRhbCBzdHJhdGVnaWVzIG9mIHRoZSBnYW1lcy4gSW4gYm90aCwgcGxheWVycyBiZW5lZml0IGZyb20ga25vd2luZyB3aGVuIHRvIHBsYXkgYWdncmVzc2l2ZWx5IGFuZCB3aGVuIGl0IGlzIHNtYXJ0ZXIgdG8gc2FjcmlmaWNlIG5vbiBjcml0aWNhbCByZXNvdXJjZXMgaW4gb3JkZXIgdG8gZm9jdXMgb24gYSBsb25nZXIgdGVybSBnb2FsLiBJbiBib3RoLCBhIGNvcmUgc2tpbGwgaXMgbGV2ZXJhZ2luZyByYW5kb20gb3V0Y29tZXMgdG8geW91ciBhZHZhbnRhZ2UuIApNeSB3aWZlIGlzIGJsYWNrIGFuZCB0aGUgYW1vdW50IG9mIGFidXNlIHNoZSBlbmR1cmVkIG92ZXIgdGhlIHllYXJzIG1ha2VzIHRoZSBzaGl0ZSBJIGdvdCBzZWVtIGxpa2Ugbm90aGluZy4uIApEZWdsaSBlc3RyZW1pIGlkZW50aWZpY2F0aXZpIGRlbCB0aXRvbGFyZSwgZGVpIHJlc3BvbnNhYmlsaSBlIGRlbCByYXBwcmVzZW50YW50ZSBkZXNpZ25hdG8gYWkgc2Vuc2kgZGVsbCA1LCBjb21tYSAyOwpFeHBlcnQgb3BpbmlvbiBKb2huIENobywgcGFydG5lciwgVHJhbnNhY3Rpb24gU2VydmljZXMsIEtQTUcgRW50ZXJwcmlzZSwgbGlrZXMgdGhlIGNhdGVnb3J5LCB3aGljaCBpcyBhbiBpbmNyZWFzaW5nIGZvY3VzIGZvciBtYW55IHBlb3BsZSBsb29raW5nIHRvIGxpdmUgaGVhbHRoaWVyIGxpZmVzdHlsZXMuIFRoYXQgYWxzbyBtZWFucyBpdCB2ZXJ5IGNvbXBldGl0aXZlLiBUaGUgYmlnIHF1ZXN0aW9uIGlzIGhvdyBkbyB5b3UgZGlmZmVyZW50aWF0ZSB5b3Vyc2VsZiBvbiB0aGUgc2hlbGY/IFRoZSBvdGhlciBjb25jZXJucyBJIGhhdmUgYXJlIGFyb3VuZCB0aGUgc2Vhc29uYWxpdHkgb2YgcHJvZHVjdGlvbiBhbmQgd2hhdCB0aGF0IG1lYW5zIGZvciBzaGVsZiBsaWZlLCBzZWxsaW5nLCBjYXNoIGZsb3cgYW5kIGZpbmFuY2lhbCBtYW5hZ2VtZW50LCBzYXlzIE1yLiAKVGhpcyBpcyB0aGUgd29yayBvZiBFdGllbm5lIE1hcmV5ICh3aG8gaGFzIG1hZGUgYSBudW1iZXIgb2YgYXBwZWFyYW5jZXMgb24gdGhpcyBibG9nKSwgYSB2ZXJ5IHNtYXJ0IGFuZCB2ZXJzYXRpbGUgZ3V5IHdobyB3b3VsZCBnbyBmcm9tIHBoeXNpb2xvZ3kgdG8gY2luZW1hdG9ncmFwaHkgdG8gYWVyb2R5bmFtaWNzIGluIHRoZSBjb3Vyc2Ugb2YgaGlzIGxpZmUgYW5kIGJlIGEgbGVhZGVyL3Bpb25lZXIgaW4gZWFjaCBmaWVsZC4gTWFyZXkgcHVibGlzaGVkIHRoaXMgInN0cm9ib3Bob3RvZ3JhcGgiIGluIGhpcyBhcnRpY2xlICJBbmFseXNlIGNpbmVtYXRpcXVlIGRlIGxhIG1hcmNoZSIgaW4gdGhlIENvbXB0ZXMgUmVuZHVzIG9uIDE5IE1heSAxODg0IHRoaXMgd2FzIGEgYnJpbGxpYW50IGVmZm9ydCBpbiB0aGUgYW5hbHlzaXMgb2YgaHVtYW4gbG9jb21vdGlvbiBieSBtYWtpbmcgYSBkb3plbiBvciB0d28gZXhwb3N1cmVzIG9uIGEgc2luZ2xlIHBob3RvIHNoZWV0cyBvZiBhIHJlZmxlY3RpdmUgb3V0bGluZWQgd2Fsa2luZyBmaWd1cmUuIFRoaXMgd2FzIGRpZmZlcmVudCBmcm9tIE1hcmV5IGJpcnRoeWVhciBhbmQgZGVhdGh5ZWFyIGJ1ZGR5LCB0aGUgb3RoZXIgbW90aW9uIHBpY3R1cmUgcGlvbmVlciwgRWFkd2VhcmQgTXV5dGJyaWRnZSAoMTgzMCAxOTA0IGZvciBib3RoKS4gClRlbnNpb24gcmlzZXMgaW4gdGhlIGtpdGNoZW4sIGFjY29tcGFuaWVkIGJ5IGVub3VnaCBiYWQgbGFuZ3VhZ2UgdG8gc2F0aXNmeSBldmVuIHRoZSBtb3N0IGZvdWwgbW91dGhlZCBzdXBlciBjaGVmLiAKSWYgaWYgdGhlIE9QIGRvZXNuJ3QgaGF2ZSB0aW1lIHRvIGhhbmcgb3V0IG1vcmUgbWF5YmUgdGhlcmUgaXNuJ3QgbXVjaCBvbmUgb24gb25lIGNvbnZlcnNhdGlvbiBlaXRoZXIuIApBbmQgSSBiZWxpZXZlIGl0IGlzIHRpbWUgZm9yIHlvdSB0byBmb2xsb3cgeW91ciBkcmVhbXMuIFRpbWUgdG8gc3RvcCBiZWluZyBhIGJhcmlzdGEgb3Igd2hhdGV2ZXIgdGhleSBjYWxsIHlvdSBkb3duIGF0IHRoYXQgY29mZmVlIHNob3AgYW5kIGdldCBhIGNhcmVlciB5b3UgbG92ZS4gClNoZSBzdGFydGVkIGRhdGluZyBhIG1hbiBmcm9tIHRoZSBzYW1lIGNodXJjaC4gClRoZSAxMDAgUGF1bHNvbiBDbGF5IFBva2VyIENoaXAgU2V0IGlzIG1vc3QgZGVmaW5pdGVseSBhIHZpc3VhbGx5IGltcHJlc3NpdmUgY29sbGVjdGlvbiB0aGF0IGxvbmcgdGltZSBmYW5zIG9mIGxheWluZyBwb2tlciB3aWxsIGNlcnRhaW5seSBmaW5kIGhlbHBmdWwgYW5kIGFwcGVhbGluZy4gRmFyIHRvbyBtYW55IG9mIHRoZSBjaGlwcyB0aGF0IGhhdmUgYmVlbiBzb2xkIG9uIHRoZSBtYXJrZXQgaGF2ZSBtZXJlbHkgYmVlbiBwbGFzdGljIGNoaXBzLgpDb21wbGV0ZWx5IGltcGF0aWVudCwgbm8gaGFuZCByZWFkaW5nIHNraWxscywgYW5kIG9uZSBkaW1lbnNpb25hbC4gSXQgd2FzIGEgc2FkIHBlcmlvZCB3aGVuIEkgbGVhcm5lZCB0aGF0IG15IGRhZCB3YXMgYSBmaXNoLiAKVGhhbmtzIGZvciByZWFkaW5nLiBZZWFoLCBsYW5ndWFnZSByZWFsbHkgaXMganVzdCBhIGNydWRlIGFwcHJveGltYXRpb24gb2YgdHJ1dGguIFVuZm9ydHVuYXRlbHkgaXQgaG93IHdlIGNvbW11bmljYXRlIG1vc3RseS4gClRoZSBncmVhdCBFZ3lwdGlhbiBRdWVlbiBIYXRzaGVwc3V0LCBmb3Igb25lLCBrbmV3IGEgYnVzaW5lc3Mgb3Bwb3J0dW5pdHkgd2hlbiBzaGUgc2F3IG9uZS4gCkpfRGlsbGFfICAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpKdXN0IGdldHRpbmcgdGhhdCBuZXcgbG9vayBpcyBlbm91Z2ggdG8gbWFrZSBldmVyeW9uZSBlbmpveSB0aGUgZ2FtaW5nIHRoYXQgbXVjaCBtb3JlLiAKVGhlIFVGQyBiaWxscyBpdHNlbGYgYXMgdGhlIHByZW1pZXIgTWl4ZWQgTWFydGlhbCBBcnRzIChNTUEpIG9yZ2FuaXphdGlvbiwgYnV0IGl0cyBoaXN0b3J5IGlzIGZpbGxlZCB3aXRoIGhpZ2hzLCBsb3dzIGFuZCBjb250cm92ZXJzeS4gQWZ0ZXIgbmVhcmx5IGZvbGRpbmcgaW4gdGhlIGxhdGUgMTk5MHMsIHRoZSBVRkMgcmVpbnZlbnRlZCBpdHNlbGYgYW5kIGF0dHJhY3RlZCBuZXcgbGVnaW9ucyBvZiBmYW5zLgpJbiAxOTc2LCBidXNpbmVzc2VzIHRvb2sgYSBwdW50IG9uIHNsb3QgbWFjaGluZXMgd2l0aCB2aWRlbyBkaXNwbGF5cyBhbmQgYnkgMTk5NCBnYW1ibGVycyBjb3VsZCBjaG9vc2UgZnJvbSB0aHJlZSBkaWZmZXJlbnQgcG9raWUgZ2FtZXMgb24gdGhlIG9uZSBtYWNoaW5lLgpJdCBiZWVuIGEgbG9uZyB0aW1lIHNpbmNlIEkgYmVlbiB0byBIaWxsc2Jvcm8gVmlsbGFnZSwgYnV0IEkgcmVtZW1iZXIgdGhlcmUgYmVpbmcgc29tZSBib3V0aXF1ZSBzaG9wcyB0aGVyZS4gRm9yIHRoZSBtb3N0IHBhcnQgeW91IGhhdmUgdG8gaGF2ZSBhIGNhciB0byBnZXQgYW55d2hlcmUsIHRoZXJlIG5vdCBhIGxvdCBkb3dudG93biBiZXNpZGVzIGNoZWVzeSBob25reSB0b25rcyBldGMuIFRoZXJlIHVzZWQgdG8gYmUgYSB2aW50YWdlIHN0b3JlIEkgbGlrZWQgY2FsbGVkIExvY2FsIEhvbmV5IGJ1dCBJIGp1c3QgZ29vZ2xlZCBpdCBhbmQgbm93IGl0IGEgaGFpciBzYWxvbj8/LiAKR28gdG8gQ29tcG9zZSBNYWlsIDQuIFN1YmplY3QgcGFzc3dvcmQgNi4gVGhlbiBTZW5kIDguIApCdXQsIHByYWlzZSBpcyB0byBIaXMgTmFtZSwgd2hvIHByb21pc2VzIEhpcyBiZWxvdmVkIHRvIHByb3RlY3Qgd2l0aCBISVMgb3duIG1pZ2h0eSBIYW5kLi4gClRoZSBzcG90cyBvbiBwYWkgZ293IHRpbGVzIGFyZSBhcnJhbmdlZCBpbiBkaWZmZXJlbnQgcGF0dGVybnMsIGFuZCB0aGVzZSBwYXR0ZXJucyBjYW4gbWFrZSBhIGRpZmZlcmVuY2UgaW4gaG93IHRoZSB0aWxlcyBhcmUgcGxheWVkLiAKVGhlIGdvZCB0aWVyIHNvbHV0aW9uIHdvdWxkIGJlIHRvIGF1dG9tYXRlIHRoZSByZWNvcmRpbmcgb2YgZGF0YXBvaW50cywgYWdncmVnYXRlIGFsbCBkYXRhIGludG8gdGhlIGFwcCwgZGV2ZWxvcCBLUElzL2Rhc2hib2FyZCBmb3IgdGhlIDEwLDAwMCBmdCB2aWV3IG9mIHRoZSBicmV3ZXJ5LgpQbGF0Zm9ybSBjcmVhdGVzIGEgYmV0dGVyIHdheSB0byBjb21tdW5pY2F0ZSBiZXR3ZWVuIGZhbiBhbmQgYXRobGV0ZS4gVGhlIGZhY3QgdGhhdCB0aGV5IHdhbnQgdG8gZ2V0IHRoZSBOSEwgb3IgdGhlIGFjdHVhbCB0ZWFtcyBhcyB3ZWxsIGFzIGZhbnMgdG8gcGF5IGZvciB0aGUgdXNlIG9mIHRoZSBwbGF0Zm9ybSBpcyBzbWFydCBiZWNhdXNlIHRoZXJlIGlzIGEgdmFsdWUgcHJvcG9zaXRpb24gb24gYm90aCBzaWRlcy4gVGhlIGNoYWxsZW5nZSB3aWxsIGJlIHRvIGJ1aWxkIGNyaXRpY2FsIG1hc3Mgb24gYm90aCBzaWRlcywgc2ltdWx0YW5lb3VzbHkuIFRoZXJlIGlzIGdyZWF0IHBvdGVudGlhbCB0byBtb3ZlIGludG8gb3RoZXIgc3BvcnRzIGlmIHRoZXkgY2FuIGVzdGFibGlzaCBhIHNvbGlkIGJ1c2luZXNzIG1vZGVsIHdpdGggaG9ja2V5LgpNb25kYXkgYW5kIGZvdW5kIEt1bHBhLCB3aG8gaGFkIHN1ZmZlcmVkIGEgbWFzc2l2ZSBoZWFkIGluanVyeSwgYm9uZSBmcmFjdHVyZXMgYW5kIGxhY2VyYXRpb25zLlRoZSBzaGVyaWZmJ3Mgb2ZmaWNlIHNhaWQgdGhlIHdvbWFuIHBpY2tlZCB1cCBDb2xsaW5zIGFuZCB0d28gY29tcGFuaW9ucyB3aGlsZSB0aGV5IHdlcmUgaGl0Y2hoaWtpbmcgbmVhciBXYXJkLiAKWnVyIEJlZ3JuZHVuZyB2ZXJ3aWVzIGRlciBFdUdIIHUuIApUaGlzIGlzIGFuIGF0dGFjayBvbiBJbnRlcm5ldCBwb2tlciBhbmQgQW1lcmljYW4gcG9rZXIgcGxheWVycyBsaWtlIG1lLiBUaHJvdWdoIHRoZXNlIHN0cm9uZyBhcm0gdGFjdGljcywgcHJvc2VjdXRvcnMgdGhpbmsgdGhleSBjYW4gYmFuIEludGVybmV0IHBva2VyLiBJbnN0ZWFkLCB0aGV5IGFyZSBtYWtpbmcgbWlsbGlvbnMgb2YgQW1lcmljYW5zIHZpY3RpbXMgaW4gYW4gYXR0ZW1wdCB0byBtYWtlIG9ubGluZSBwb2tlciBpbGxlZ2FsIHdpdGhvdXQgdGhlIHN1cHBvcnQgb2YgbGVnaXNsYXRvcnMgb3IgdGhlIHB1YmxpYy4KRmFsayB0aHJvd3MgMyBURHMsIE5vLiAxOSBXYXNoaW5ndG9uIFN0YXRlIGJlYXRzIFV0YWggMzMgMjVXYXNoaW5ndG9uIFN0YXRlIHYgVXRhaFNBTFQgTEFLRSBDSVRZLCBVVCAgIE5PVkVNQkVSIDExOiBEYXZvbnRhdmVhbiBNYXJ0aW4gMSBvZiB0aGUgV2FzaGluZ3RvbiBTdGF0ZSBDb3VnYXJzIGNhdGNoZXMgYSBwYXNzIGR1cmluZyB0aGVpciBnYW1lIGFnYWluc3QgdGhlIFV0YWggVXRlcyBhdCBSaWNlIEVjY2xlcyBTdGFkaXVtIG9uIE5vdmVtYmVyIDExLCAyMDE3IGluIFNhbHQgTGFrZSBDaXR5LCBVdGFoLiAKSG9sbG93cyBkaWVkIGluIDE5OTMgb2YgY2FuY2VyLCBidXQgdGhlIHNpZ2h0IGhlIGdhdmUgb3RoZXJzIGxpdmVzIG9uIGZvcmV2ZXIuLiAKRmxveWQgTWF5d2VhdGhlciBKci4gV2lsbCBjb21lIGludG8gdGhlIHJpbmcgdG8gcmVtYWluIHRoZSBzb2xlIEtJTkcgb2YgdGhlIHdlbHRlcndlaWdodHMsIHdoaWxlIEd1ZXJyZXJvIHdpbGwgdHJ5IHRvIG92ZXJjb21lIHRoZSBvZGRzIGFnYWluc3QgaGltIGluIHdpbm5pbmcgdGhlIHVuZGlzcHV0ZWQgV0JDIHdlbHRlcndlaWdodCBjaGFtcGlvbnNoaXAgb2YgdGhlIHdvcmxkLiBIZSB3YW50cyB0byBlbnRlciBicmlsbGlhbnRseSB0aGUgdGhlIGVsaXRlIGNpcmNsZSBvZiBib3hpbmcuIApJTkRJQU5BUE9MSVMsIElOIERlYy4gMTQsIDIwMTMgV2hlbiBpdCdzIHlvdXIgdHVybiB0byBhY3QgYXQgdGhlIHBva2VyIHRhYmxlICAgaXQncyB0aGUgbW9tZW50IGZvciBjbGFyaXR5LCBmb3Igd2lzZG9tLCBmb3IgZXhwZXJpZW5jZSBhbmQgZm9yIGxvZ2ljIHRvIHN1cmZhY2UuIEl0J3MgbWluZCBvdmVyIG1hdHRlci4gCkV2YWx1YXRpb24gYXQgYmFzZWxpbmUgYW5kIGFmdGVyIHRyZWF0bWVudCBjb25zaXN0ZWQgb2Ygc3RhbmRhcmRpemVkIGhpc3RvcnkgYW5kIHByZXZpb3VzbHkgdmFsaWRhdGVkIHByb3N0YXRpdGlzIHNwZWNpZmljIFN5bXB0b20gRnJlcXVlbmN5IFF1ZXN0aW9ubmFpcmUgKFNGUSkgYW5kIFN5bXB0b20gU2V2ZXJlcml0eSBJbmRleCAoU1NJKSwgSW50ZXJuYXRpb25hbCBQcm9zdGF0ZSBTeW1wdG9tIFNjb3JlIChJIFBTUykgYW5kIFF1YWxpdHkgb2YgTGlmZSAoUW9MKSBxdWVzdGlvbm5haXJlLCB0aGUgTydMZWFyeSBTZXh1YWwgRnVuY3Rpb24gSW52ZW50b3J5IChTRkkpIGFuZCBhIFN1YmplY3RpdmUgR2xvYmFsIEFzc2Vzc21lbnQgKFNHQSkuIFRyZWF0bWVudCBpbiBNYW5pbGEgY29uc2lzdGVkIG9mIHRyaXdlZWtseSBwcm9zdGF0aWMgZHJhaW5hZ2VzIGNvbWJpbmVkIHdpdGggc3BlY2lmaWMgY3VsdHVyZSBkaXJlY3RlZCBhbmQvb3IgZW1waXJpYyBhbnRpbWljcm9iaWFsIHRoZXJhcHkgZm9yIDYgMTIgd2Vla3MuLiAKVGhpcyBJUyBOT1Qgd2hhdCB3ZSBleHBlY3Qgb3VyIGd1ZXN0cyB0byBleHBlcmllbmNlIGhlcmUgd2l0aCB1cywgYnV0IEkgZG8gd2FudCB0byB0aGFuayB5b3UgZm9yIHByb3ZpZGluZyB1cyB0aGlzIGZlZWRiYWNrIGFuZCBnaXZpbmcgdXMgdGhlIGNoYW5jZSB0byBpbXByb3ZlLiBUaGFuayB5b3UsIGFuZCBJIGxvb2sgZm9yd2FyZCB0byBzcGVha2luZyB3aXRoIHlvdSBzb29uLiBTaW5jZXJlbHksIFRoZSBUcm9waWNhbCBCcmVlemUgUmVzb3J0IFRlYW0uIApPaCBtYW4sIEkgd2FzIGJhc2ljYWxseSByYWlzZWQgb24gZGVsaXZlcnksIGJvdGggcGFyZW50cyB3b3JrZWQgYW5kIHdoZW4gd2UgbW92ZWQgdG8gTm9ydGggQW1lcmljYSwgbm8gbW9yZSBsaXZlIGluIG1haWQuIApNeSBodWJieSB3YW50cyB0byBob3N0IGEgZGlhcGVyIHBhcnR5L3Bva2VyIHBhcnR5LiBIYXMgYW55b25lIGVsc2UgZG9uZSB0aGlzPyBBcmUgdGhlcmUgYW55IGV0aXF1dHRlIHRoaW5ncyBJIHNob3VsZCBiZSB0aGlua2luZyBvZj8gSSB3YXMgdGhpbmtpbmcgd2Ugd291bGQgcHJvdmlkZSBhIGtlZyBhbmQgcGFja3Mgb2YgZGlhcGVycyBvciB3aXBlcyBnZXQgeW91IGEgZnJlZSBjdXAgYW55IG90aGVyIGlkZWFzPyBIaXMgYnJvdGhlciBpcyB3aWxsaW5nIHRvIGhvc3QsIGJ1dCBoaXMgaG91c2UgaXMgdG9vIHNtYWxsLiAKQW5kIHNvIER1YmJ5YSBudW1iZXIgb25lIGxhd3llciB3aWxsIHByb2JhYmx5IGFsc28gYmUgdGhlIGdheSBtYXJyaWFnZSBtb3ZlbWVudCBzYXZpb3IuIHdpbGwgcHJvYmFibHkgc2VlIHRoZSBjYXNlIGdvIHRvIHRoZSBTdXByZW1lIENvdXJ0IGFuZCBoZSB3aWxsIHByb2JhYmx5IHdpbi4gd2UgY2FuIGFsbCAiY2VsZWJyYXRlIiB3aXRoIGEgYmlnIHdoaXRlIHdlZGRpbmcgKGFuZCB0aGUgY3luaWNhbCB1bmRlcnN0YW5kaW5nIHRoYXQgeW91IGNhbiBnZXQgYSBsb3QgZnVydGhlciBpbiB0aGUgQW1lcmljYW4gcG9saXRpY2FsIHN5c3RlbSBieSBwdXNoaW5nIGEgbmFycm93LCBzcGVjaWFsIGludGVyZXN0IGFnZW5kYSB0aGFuIGFueXRoaW5nIGFzIHRydWx5IHJldm9sdXRpb25hcnkgYXMgZ2F5IGxpYmVyYXRpb24pLgpTb21icmVybzg4IHUKSSBhbG1vc3QgNSB3aXRoIGEgdmVyeSBzaG9ydCB0b3JzbyAobWF5YmUgMS41IiBiZXR3ZWVuIGhpcCBib25lIGFuZCBib3R0b20gb2YgbXkgcmliIHdoZW4gbWVhc3VyaW5nIGZyb20gdGhlIHNpZGUpLiAKVG8gYmUgZWxpZ2libGUgZm9yIGEgcGh5c2ljYWwgdGhlcmFweSBwcm9ncmFtLCB0aGUgbWFzc2FnZSB0aGVyYXBpc3QgbXVzdCBoYXZlIGEgYmFjaGVsb3IncyBkZWdyZWUuIFRoZSBwaHlzaWNhbCB0aGVyYXB5IHRyYWluaW5nIHByb2dyYW0gdGFrZXMgdGhyZWUgeWVhcnMsIGFuZCBjdWxtaW5hdGVzIGluIGEgRG9jdG9yIG9mIFBoeXNpY2FsIFRoZXJhcHkgZGVncmVlIG9yIERQVC4gClJlZHBvY2tldCBkb2VzIGEgJDYwIGEgeWVhciBwbGFuIG9uIGViYXkgd2l0aCAxMDAgbWlucyBhIG1vbnRoLiBTb21ldGltZXMgZWJheS9yZWRwb2NrZXQgaGFzIHNhbGVzIHRvIG1ha2UgaXQgZXZlbiBjaGVhcGVyIGVzcGVjaWFsbHkgYXJvdW5kIGJsYWNrIGZyaWRheS4gUGljayBhbnkgbmV0d29yay4gTWlnaHQgYmUgd29ydGggaXQgaWYgeW91IHRoaW5rIHlvdSBldmVyIHdpbGwgZ28gb3ZlciAzMCBtaW5zLgpUaGUgbmV3cyBhbmQgdGhlIGZpcmUgZGVwYXJ0bWVudCBoYXZlIGRvbmUgdGhpcyBib3kgYW5kIGhpcyBmYW1pbHkgYSBncmVhdCBkaXNzZXJ2aWNlLiBIb3cgaGFyZCBpcyBpdCB0byBzYXkgIlRoZSBkb2cgYml0IHRoZSBib3kuIAoiSm9obiB3YXMgY29vcGVyYXRpdmUgd2l0aCB0aGUgYWdlbnRzIGR1cmluZyB0aGVpciBzZWFyY2ggdGhyb3VnaG91dCB0aGUgZGF5LCIgSG9ja2VpbWVyIHNhaWQuCkFsc28sIGhvdyBkb2VzIHdvbmRlcmJveSBkZXNlcnZlIHRvIGJlIG9uIHRoaXMgbGlzdCB3aGVuIGhlIGxpdGVyYWxseSBoYWQgVHlyb24gb24gdGhlIGNhZ2UgZm9yIHJvdW5kcywgbmV2ZXIgdG9vayBhZHZhbnRhZ2UsIGFuZCB0aGVuIGFsbW9zdCBnZXQga29kIG11bHRpcGxlIHRpbWVzPyBBbmQgaGUgbWFkZSBubyBhZGp1c3RtZW50cyBnb2luZyBpbnRvIHRoZSBzZWNvbmQgZmlnaHQgb3RoZXIgdGhhbiBub3Qga2lja2luZy4KVGhlbiBzaGUgYXNrcyB0byBiZSBwZXR0ZWQgc3BlY2lmaWNhbGx5IG9uIHRoYXQgc3BvdCBvbiBoZXIgYmFjayBjYXRzIGxvdmUgc28gbXVjaCwgYW5kIHRoZW4gcnVicyBoZXIgZmFjZSBhbmQgdGFpbCBhZ2FpbnN0IGhpbS4gClNvIGp1c3QgaHVzaCBiYWJ5IHNodXQgdXAKVW5icjNha2FibGUgIDEgcG9pbnQgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KTW9iaWxlIG9wZXJhdGluZyBzeXN0ZW1zLCBzbyB5b3UgY2FuIGFjdHVhbGx5IGRvd25sb2FkIGEgZnVsbCBmbGVkZ2VkIHZlcnNpb24gb2YgTWljcm9zb2Z0IFdvcmQgd2l0aG91dCBuZWVkaW5nIHRvIGdldCBFeGNlbCwgUG93ZXJQb2ludCwgYW5kIHRoZSBvdGhlcnMuIApJIHN0YW5kIG15IHBvaW50IGZvcmV2ZXIgdGhhdCBlcm9nZXMgbWFrZSB0aGUgYmVzdCBvdG9tZXMuIFRoZXkgYXJlIHVzdWFsbHkgbG9uZyBzaW5jZSBlYWNoIHJvdXRlIG11c3QgY292ZXIgYm90aCBmaXJzdCB0aGUgbG92ZSBzdG9yeSBhbmQgdGhlbiB0aGUgImdlbmVyYWwiIHN0b3J5IHdoaWxlIHRoZXkgYXJlIGFscmVhZHkgaW4gYW4gaW50aW1hdGUgcmVsYXRpb25zaGlwICh3ZWxsLCBpdCBkZXBlbmRzIG9mIHRoZSBnYW1lIGJ1dCB0aGUgZ29vZCBvbmVzIGFyZSB1c3VhbGx5IGxpa2UgdGhpcykuIFRoZXNlIGdhbWVzIGRvbiBlbmQgdXAgd2l0aCBhICJraXNzIGFuZCBob3BlIGZvciBtb3JlIjsgdGhlc2UgZ2FtZXMgdXN1YWxseSBlbmQgd2l0aCBhICJldmVyeXRoaW5nIHdpbGwgYmUgYWxyaWdodCwgYW5kIHlvdSBhbHJlYWR5IHNhdyB0aGUgcHJvdmUgb2YgaXQiIGtpbmQgb2YgZmVlbGluZy4KQSBsb3Qgb2Ygb25saW5lIHBva2VyIHBsYXllcnMgYmVsaWV2ZSB0aGF0IHBva2VyIGlzIG1vc3RseSBhIGdhbWUgb2Ygc2tpbGwsIGFuZCB0aGV5IHRoaW5rIHRoZXkgaGF2ZSB0aGUgcmlnaHQgc2V0IG9mIHNraWxscyB0byB3aW4gdGhlIHBvdCB3aXRoIG5vdCBtdWNoIGVmZm9ydC4gQSBudW1iZXIgb2YgcGVvcGxlIGFsc28gdGhpbmsgdGhhdCB0aGlzIGlzIG5vdGhpbmcgbW9yZSB0aGFuIGEgZmFsbGFjeSBpbiBvbmxpbmUgcG9rZXIgZ2FtYmxpbmcuCjkuIEVuZ2xpc2ggYXJ0aWNsZXMgb25seS4KVGhlcmUgaXMgbm8gbGV2ZWwgb2Ygbm9uIG1vbmV0YXJ5IHN1cHBvcnQgdGhhdCBpcyBub3QgaGVscGZ1bCBmb3IgYSBzaW5nbGUgcGFyZW50LiAKV2Vla3MuIApSZXNpZGVudHMgT2YgTm9ydGhlYXN0IE9oaW8gV2lsbCBPZiBDb3Vyc2UgUmVjb2duaXplIFRoZSBDYXNpbm8/cyBIb21lIEFzIFRoZSBGb3JtZXIgQWJvZGUgT2YgVGhlIEhpc3RvcmljIEhpZ2JlZSBDb21wYW55IERvd250b3duIERlcGFydG1lbnQgU3RvcmUuIFNvIGltYWdpbmUgYSBiZWF1dGlmdWwgZXZlbmluZyB3aXRoIGEgbG92ZWQgb25lLCBhIHN3ZWV0IHNpeC90d2VsdmUgcGFjayB0byB0YWtlIG91ciBkcmluayBvcmRlciBhbmQgcmV0dXJuZWQgaW1tZWRpYXRlbHkgZXZlcnkgdGltZSBwbGF0ZXMgd2VyZSBlbXB0eS4gQnkgSmFtZXMgU21pdGggVGhlIGFyZ3VtZW50IHRoYXQgc29tZWhvdyBDYXNpbm8gaXMgdG8gYmUgZGlzY2FyZGVkIGJlY2F1c2UgaXQ/cyA/TWFydGluIFNjb3JzZXNlIHJlbWFraW5nIEdvb2RmZWxsYXMgaW4gTGFzIFZlZ2FzPywgaXMgMjEgYW1vbmcgdGhlIHBsYXllcnMgc3RpbGwgaW4gdGhlIGhhbmQgYXQgdGhlIHNob3dkb3duIHdpbGwgc3BsaXQgdGhlIHBvdC4gClRoaXMgZ290IHNvIGJhZCB0aGF0IExvTSBtb2RlcmF0b3JzIGhhZCB0byBtYWtlIGEgYm90IHNvIHRoYXQgbW9kcyBjb3VsZCByZXNwb25kIGluIGEgc3RpY2t5IGNvbW1lbnQgYmVjYXVzZSBjb21tZW50cyB3b3VsZCBiZSBtYXNzIGRvd252b3RlZCByZWdhcmRsZXNzIG9mIGNvbnRlbnQuU29tZXRpbWVzLCB5b3Ugd2lsbCBoYXZlIGdvb2QgY29udGVudCB0aGVyZSBzdWNoIGFzIHRoaXMgdGhyZWFkIHdoZXJlIHBlb3BsZSB3aWxsIGVuZ2FnZSB3aXRoIGdvb2QgcG9pbnRzIGFuZCBtb2RlcmF0b3JzIHdpbGwgcmVzcG9uZC4gClRoZSBzdGFuZGFyZCByYXRlcyBhcmUgJDYwIGZvciBhIGhhbmRqb2IgKGFuZCB0aGV5IHVuZHJlc3MpLCAkODAgZm9yIGEgYm9keXNsaWRlLCAkMTAwIGZvciBhIGJsb3dqb2IsICQxMjAgZm9yIGZ1bGwgc2VydmljZSAoc2V4KS4gCklmIHlvdSBjYW4ndCBzcG90IHRoZSBzdWNrZXIgYXQgdGhlIHRhYmxlLCBpdCdzIHByb2JhYmx5IHlvdS4gQSBtaXggb2YgcGFzc2l2ZSBhbmQgYWdncmVzc2l2ZSBwbGF5IGlzIG5lZWRlZCBpbiBhIGdhbWUgb2YgcG9rZXIgYXMgbXVjaCBhcyBpdCBpcyBpbiB0aGUgZ2FtZSBvZiBsaWZlLiBCdXNpbmVzcyBwZW9wbGUgdW5kZXJzdGFuZCB0aGlzIGFsbCB0b28gd2VsbC4gWW91IG5lZWQgdG8gZ2l2ZSBhbmQgdGFrZSB0byBuZWdvdGlhdGUgdGhlIGJlc3QgcG9zc2libGUgZGVhbC4gVGhpcyBpcyB3aGVyZSBsZXZlcmFnZSBwbGF5cyBhIHBhcnQuIElmIHlvdSBoYXZlIHNvbWV0aGluZyB0aGF0IG90aGVycyBwcm9iYWJseSB3YW50LCB5b3UgY2FuIHVzZSB0aGUgY2Fycm90IGFuZCBzdGljayBtZW50YWxpdHkgdG8gZ2V0IHdoYXQgeW91IG5lZWQuIEl0IGlzIHBvc3NpYmxlIHRvIGxldmVyYWdlIHRoZSBydWxlcyBvZiBwb2tlciB0byB5b3VyIGFkdmFudGFnZS4KWW91ciAicHVyaXR5IiBpcyBub3QgYXQgcmlzayBmcm9tIHRoZSBsaWtlcyBvZiBBQ09STi4gQW5kIHNleCBwYW5pY3MgYXJlIG5ldmVyIGEgZ29vZCB3YXkgdG8gbWFrZSBwb2xpY3kuLiAKWW91IGNhbiBzdG9yZSB0aGVzZSBiZWhpbmQgd2FyZHJvYmVzIG9yIGluIHRoZSBnYXJhZ2UgYW5kIHByaWNlcyBzdGFydCBhdCBhcm91bmQgJDE1MC4uIApHcmVhdCwgZXh0cmEgd2VpZ2h0IGZvciBub3RoaW5nISBUaGF0J3Mgd2hhdCBJIGdldCBmb3IgbWFraW5nIGEgbGFzdCBtaW51dGUgZGVjaXNpb24uIApZb3UgY2FuIGdldCB5b3VyIGJhbGFuY2Ugb24gbGluZTsgaG93ZXZlciwgSSBnZXQgbXkgYmFsYW5jZSBzZW50IHRvIG15IHBob25lIGRhaWx5IHZpYSBhIHRleHQgbWVzc2FnZS4gWW91IGNhbiBhbHNvIHRleHQgdGhlIHdvcmQgYmFsYW5jZSB0byAyMjYyMiBhbmQgaXQgd2lsbCBzZW5kIHlvdSBhIHJlcGx5LiBHbyBvbmxpbmUgZmlyc3QgYW5kIHNldCB1cCBhIG9ubGluZSBhY2NvdW50LiAKSSBoZWFyZCB0aGUgIkkgZ290IGEgbGl2ZSBiYWJ5IHJ1YmJlZCBvbiBtZSIgc3Rvcnkgb24gbXkgbG9jYWwgcmFkaW8gYW5kIHRoZXkgaWRlbnRpZmllZCBpdCB3YXMgUmVkZGl0IGFuZCBpdCBqdXN0IHN1Y2tzIChub3RlLCBub3Qgc2F5aW5nIEkgYmVsaWV2ZSB0aGF0IHN0b3J5IHdhcyBmYWtlKS4gCkNvbWUgb24sIGp1c3Qgb25lIG1vcmUgd2VlayExMC8xNy8yMDA4IDk6Mzc6NTQgQU0KIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGhvdXIgYWdvVGhpcyBpcyB3aGF0IEkgZGlkbiBxdWl0ZSBnZXQuIFJlYWwgTWFkcmlkIHNob3VsZCBoYXZlIHNjb3JlZCBtb3JlLiBUaGV5IGhhZCBzb21lIGFtYXppbmcgY2hhbmNlcyB0byBwdXQgdGhpcyBnYW1lIHRvIGJlZCBzZXZlcmFsIHRpbWVzLiBCdXQgU29sYXJpIGtuZXcgUmVhbCBNYWRyaWQgZGlkbiBoYXZlIGEgZ3JlYXQgc3RyaWtlciBhbmQgaGUga25ldyB0aGV5IGFyZSB1bnN0YWJsZSBpbiBkZWZlbnNlLiAKQnV0IG15IHBhcmVudHMgaGF0ZWQgZWFjaCBvdGhlciBkZXNwaXRlIHRoYXQgdGhvdWdoIHRoZXkgYWx3YXlzIHdvcmtlZCBvdXQgdGhpbmdzIGxpa2UgdmFjYXRpb25zIGV2ZW4gaWYgdGhleSB3ZXJlIG9uIGVhY2hvdGhlcnMgd2Vla3MuIApCZWlkZSBzb2xsZW4gYWJlciBoaW50ZW4gc2l0emVuLiBUb20gZGFyZiBuaWNodCBuZWJlbiBKZXJyeSwgZGVyIHdpZWRlcnVtIHZvcm5lIGFtIGJlc3RlbiBhdWZnZWhvYmVuIGlzdC4gRGFzIFBsYW5lbiBuaW1tdCBnYW56IHNjaG4gdmllbCBBbnNwcnVjaCBpbiBaZWl0LiBXaXJkIGRhbm4gZGVyIG5ldWUgUGxhbiBpbiBkZXIgS2xhc3NlCkkgdGhvdWdodCBiYWNrIHRvIHRoZSBzY2VuZSB3aGVyZSBzaGUgd2FzIHNob3dpbmcgb25lIG9mIGhlciBtYWxlIGZyaWVuZHMgdGhlIGRvbGxob3VzZSBkdXJpbmcgdGhlIENhbGhvdW4gRGF5IGNlbGVicmF0aW9uLiBJIHRob3VnaHQgaG93IHN0cmFuZ2UgaXQgd2FzIGZvciBhIHRlZW5hZ2UgYm95IHRvIGNhcmUgZXZlbiBhIGxpdHRsZSBiaXQgYWJvdXQgYSBkb2xsIGhvdXNlIGJ1dCBub3cgd29uZGVyIGlmIHRoZXkgd2VyZSB0ZWxsaW5nIGNlcnRhaW4gZnJpZW5kcyBhbmQgc2hlIHdhcyBzaG93aW5nIGhpbSB0aGUgZmxvb3IuIAoiQXRvbWljIEJvbWIiIGFwcGVhcmVkIGluIHByaW50IGZvciB0aGUgZmlyc3QgdGltZSB0aGlydHkgeWVhcnMgYmVmb3JlIHRoZXJlIHdhcyBvbmUuIFdlbGxzIFRoZSBXb3JsZCBTZXQgRnJlZSwgd3JpdHRlbiBpbiAxOTEzIGFuZCBwdWJsaXNoZWQgaW4gMTkxNCwgZXZpZGVudGx5IGJlZm9yZSB0aGUgYXBwZWFyYW5jZSBvZiB0aGUgZ3VucyBvZiBBdWd1c3QgbGF0ZXIgaW4gdGhhdCB5ZWFyLiBUaGUgInNldCBmcmVlIiBwYXJ0IG9mIHRoZSB3b3JsZCBpbiBXZWxscyBoYW5kcyBkb2VzbiBjb21lIHdpdGhvdXQgYW4gYXRvbWljIHN0cnVnZ2xlLCB0aG91Z2gsIG11Y2ggb2YgdGhlIG5vdmVsIGJlaW5nIGEgc3RhZ2UgdXAgZm9yIHRoZSBsYXN0IGJpdCBpbiB3aGljaCBwZW9wbGUgcmVhbGl6ZSB0aGF0IGF0b21pYyBib21iaW5nIGV2ZXJ5dGhpbmcgZXZlcnl3aGVyZSBpcyBub3QgdGhlIHdheSB0byBnby4uIApQdXQgaW4gb3V0IG9mIHlvdXIgaGVhZCBmb3JldmVyIGFuZCBmb2N1cyBvbiBiZWluZyBhIGdvb2Qgc3BvdXNlLi4gClNvIGl0IGltcG9ydGFudCB0byBnZXQgdGhlIGdvdmVybmFuY2UgcmlnaHQuIFN0YXJ0IHdpdGggdGhlIHJpZ2h0IHRoaW5ncywgZm9jdXMgb24gdGhlIHJpZ2h0IGdvYWxzIGFuZCBzZXQgdGhlIHJpZ2h0IGluY2VudGl2ZXMgdG8gYWN0dWFsbHkgVVNFIHRoZSBzeXN0ZW0uIApJdCBhbiBpbmZ1cmlhdGluZyBtb21lbnQgZm9yIHRoZSBwbGF5ZXIsIGJlY2F1c2UgZ29kZGFtbiBpdCwgd2Ugd2VyZSB0aGVyZSwgYW5kIHNoZSBmdWNraW5nIHdhc24gQW5kIHRoYXQgd2hhdCB0aGlzIHJlbWluZHMgbWUgb2YuIEdpdmVuIHRoZSBhYnNvbHV0ZWx5IHJpZGljdWxvdXMgd2F5IHRoZSBnYW1lIHRyaWVzIGF0IHRoZSB2ZXJ5IGVuZCBvZiBGb3JzYWtlbiB0byBtYWtlIG91dCBsaWtlIHNvbWVob3cgeW91ICJqdXN0IGFzIGJhZCIgYXMgVWxkcmVuIGZvciBraWxsaW5nIGhpbSBhZnRlciBoZSBzaG93cyBubyByZW1vcnNlIHdoYXRzb2V2ZXIgZm9yIHVubGVhc2hpbmcgeGVub2NpZGFsIG51dGpvYnMgb24gdGhlIFJlZWYsIEkgY2FuIGhlbHAgYnV0IGZlZWwgbGlrZSBCdW5naWUgaXMgZ29pbmcgdG8gcnVuIHdpdGggdGhpcyByaWRpY3Vsb3VzIHN0b3J5IHdoZXJlIHRoZSBoYXBsZXNzIGNhc3Qgb2YgTlBDcyBhcmUgZ29pbmcgdG8gcXVlc3Rpb24gdGhlIG9yZGVyIG9mIGV2ZW50cyB0aGF0IHdlIHdlcmUgbGl0ZXJhbGx5IHRoZXJlIGZvci4uIApJdCBsaWtlIHlvdSB0aGlua2luZyB3aXRoIGFsbCB0aGUgcGF0aWVuY2UgYW5kIHBlcnNldmVyYW5jZSB0aGF0IHlvdSBnb2luZyB0byBjb21lIG91dCBhaGVhZCBhZnRlciBhbGwgdGhlIEJTIHlvdSBoYWQgdG8gZGVhbCB3aXRoIGFuZCBpdCBmZWVscyBsaWtlIHRoZSBQb2tlciBHb2RzIHRha2UgYSBnaWFudCBkdW1wIG9uIHlvdS4gClRvIG1lIGNvZmZlZSBmcm9tIHRoZSBhZXJvcHJlc3MgaXMgZXZlbiBiZXR0ZXIgdGhhbiBzdGFyYnVja3MsIGFuZCBJIGJ1eWluZyB0aGUgJDYuOTkvbGIgcHJlZ3JvdW5kIGNoZWFwIHN0dWZmIGF0IHRyYWRlciBqb2UgYW5kIHVzaW5nIGEgcmV1c2FibGUgbWV0YWwgY29mZmVlIHRoZXJtb3MgdG8gdGFrZSBpdCB0byB3b3JrLgpUYWtlIGV4aXQgMyBvdXQgb2YgdGhlIHN0YXRpb24gYW5kIHdhbGsgaW4gdGhlIHNhbWUgZGlyZWN0aW9uIHRoYXQgeW91IGNvbWUgb3V0IG9mIHRoZSBleGl0IChvcHBvc2l0ZSB0byB0aGUgZmxvdyBvZiB0cmFmZmljKS4gCkluZGllbiBlZW4gZnlzaW90aGVyYXBldXQgbmlldHMga2FuIG1ldCBoZXQgZ2V6b25kaGVpZHNwcm9ibGVlbSB2ZXJ3aWpzdCBkZXplIGRhbiBvb2sgZG9vciBuYWFyIGVlbiBhbmRlcmUgZGlzY2lwbGluZS4gVG90IHNsb3QgaGFuZGVsdCBlZW4gYmVrd2FtZSBmeXNpb3RoZXJhcGV1dCBvcCBlZW4gcHJvZmVzc2lvbmVsZSB3aWp6ZSwgZGV6ZSBzdGVsdCB6aWpuIHBhdGludGVuIG9wIGh1biBnZW1hayBlbiBnZWVmdCB6ZSBoZXQgZ2V2b2VsIGRhdCB6ZSBnZWhvb3JkIHdvcmRlbiBlbiBkYXQgZGUgdGhlcmFwZXV0IGVyIGlzIG9tIHplIHRlIGhlbHBlbi4uIApNZWFud2hpbGUsIG1lYXQgYW5kIHNlYWZvb2QgcHJpY2VzIGFyZSBleHBlY3RlZCB0byBmYWxsLCB3aXRoIHRoZSBtZWF0IGNhdGVnb3J5IHRvIGRlY2xpbmUgYnkgb25lIHRvIHRocmVlIHBlciBjZW50IGFuZCBzZWFmb29kIGNvc3RzIHRvIHJlbWFpbiB0aGUgc2FtZSBvciBmYWxsIHVwIHRvIHR3byBwZXIgY2VudC4KVGhhdCBtYWtlcyBpdCBzbGlnaHRseSBlYXNpZXIgdG8gd2luLiAKIldlIHNlZSBwZW9wbGUgdGhyb3VnaCB0aGVpciB3aG9sZSBsaWZlIGN5Y2xlLCIgTXIgS2lwcCBzYWlkLCBhZGRpbmcgdGhhdCBnZXQgdG9nZXRoZXJzIGF0IGNsdWJzIHJhbmdlZCBmcm9tIHRoZSBmaXJzdCBkYXRlIHRvIDIxc3QgYmlydGhkYXlzLCBiYWJ5IHNob3dlcnMsIHdlZGRpbmdzIGFuZCB3YWtlcy4gVGhlIElsbGF3YXJyYSBhbmQgU2hvYWxoYXZlbiA3MyBjbHVicyBtYWtlIGFuIGFubnVhbCBzb2NpYWwgY29udHJpYnV0aW9uIG9mICQ1MS43IG1pbGxpb24sIGhhdmUgMzE5LDM1NyBtZW1iZXJzaGlwcywgcHJvdmlkZSAyMjggc3BvcnRpbmcgZmFjaWxpdGllcyBhbmQgZW1wbG95IG1vcmUgdGhhbiAyNzUwIHBlb3BsZS4gClNobmFycGVkIEhvY2tleSBsZXRzIGZhbnMgY29ubmVjdCB3aXRoIHByb2Zlc3Npb25hbCBwbGF5ZXJzIGFjcm9zcyBtb2JpbGUgYXBwbGljYXRpb25zIGFuZCB0cmFjayBwbGF5ZXIgbmV3cywgc3RhdHMsIHR3ZWV0cyBhbmQgaGlnaGxpZ2h0cy4gSXRzIHNpZ25hdHVyZSBmZWF0dXJlIGlzIHRoZSBpbnRlcmFjdGl2ZSB3aGljaCBhbGxvd3MgZmFucyB0byBzZW5kIGEgdmlydHVhbCBmaXN0IHB1bXAgaW4gcmVhbCB0aW1lIHRvIHRoZWlyIGZhdm91cml0ZSBob2NrZXkgcGxheWVycyBhZnRlciBhbiBpbXByZXNzaXZlIHBsYXkuIAoiVGhlIE90dG9tYW4gZGVjbGluZSB0aGVzaXMiIGlzIGEgdGVybSB3ZSB1c2UgdG8gcmVmZXIgdG8gYSBwYXJhZGlnbSBpbiBPdHRvbWFuIGhpc3RvcnkgdGhhdCB3YXMgcHJlZG9taW5hbnQgZm9yIG1vc3Qgb2YgdGhlIHR3ZW50aWV0aCBjZW50dXJ5LiBUaGUgZGVjbGluZSB0aGVzaXMgZGl2aWRlZCBPdHRvbWFuIGhpc3RvcnkgaW50byB0d28gYnJvYWQgZXJhczogYSAicmlzZSIgaW4gd2hpY2ggdGhlIGVtcGlyZSBib3JkZXJzIHdlcmUgZXhwYW5kaW5nLCBpdHMgaW5zdGl0dXRpb25zIHdlcmUgZnVuY3Rpb25pbmcgc21vb3RobHksIGFuZCBpdHMgbGVhZGVyc2hpcCB3YXMgY2FwYWJsZSwgYW5kIGEgImRlY2xpbmUiIGluIHdoaWNoIHRoZSBlbXBpcmUgYm9yZGVycyB3ZXJlIHNocmlua2luZywgaXRzIGluc3RpdHV0aW9ucyB3ZXJlIGRlY2F5aW5nLCBhbmQgaXRzIGxlYWRlcnNoaXAgd2FzIGluY29tcGV0ZW50LiBUaGUgcGVyaW9kIGluIHdoaWNoIHRoZSBlbXBpcmUgYmVnYW4gc2hpZnRpbmcgZnJvbSBvbmUgc3RhdGUgdG8gdGhlIG90aGVyIHdhcyB1c3VhbGx5IHBsYWNlZCBhcm91bmQgdGhlIGRlYXRoIG9mIFNsZXltYW4gdGhlIE1hZ25pZmljZW50IGluIDE1NjYuIE5vdCBhbGwgaGlzdG9yaWFucyBhcHByb2FjaGVkIHRoZSBlbXBpcmUgaGlzdG9yeSBpbiB0aGUgc2FtZSB3YXksIGJ1dCB0aGlzIGdlbmVyYWwgdmlldyBiZWNhbWUgdmVyeSB3aWRlc3ByZWFkIGFzIGEgYmFzaWMgZnJhbWV3b3JrIGZvciBPdHRvbWFuIGhpc3RvcnkgYXMgYSB3aG9sZS4gVGhlIGlkZWEgd2FzLCBpbiBlZmZlY3QsIHRoYXQgdGhlIGVtcGlyZSAid29ya2VkIiBwcm9wZXJseSBkdXJpbmcgdGhlIGZpcnN0IGhhbGYgb2YgaXRzIGhpc3RvcnksIGFuZCB3YXMgZHlzZnVuY3Rpb25hbCBkdXJpbmcgdGhlIHNlY29uZCBoYWxmIG9mIGl0cyBoaXN0b3J5LCB0aGUgb2NjYXNpb25hbCBzdHJvbmcgbGVhZGVyIGFzaWRlLiBUaGUgVGFuemltYXQgYW5kIGl0cyBhY2NvbXBhbnlpbmcgcmVmb3JtcyBkdXJpbmcgdGhlIG5pbmV0ZWVudGggY2VudHVyeSB3ZXJlIGludGVycHJldGVkIGFzIGFuIHVsdGltYXRlbHkgdW5zdWNjZXNzZnVsIGVmZm9ydCB0byBzdG9wIHRoaXMgaW5leG9yYWJsZSBkZWNsaW5lLgpUaGlzIGlzIHRoZSBsaXN0IHRoYXQgcGxhY2VzIGFsbCBvZiB0aGUgcG9zc2libGUgcG9rZXIgaGFuZHMgaW4gdmFsdWUgb3JkZXIgZnJvbSBSb3lhbCBGbHVzaCB0byBIaWdoIENhcmQuIApMZWdlbmQuTGF0ZXIgSSBwbGF5IG9uZSBvZiB0aGUgYmlnZ2VyIHBvdHMgSSBoYXZlIHBsYXllZCBsaWZldGltZTpMaW1wIFVURywgQ2hpbmVzZSBndXkgbWFrZXMgaXQgMTAwLCBJIGhhdmUgQXNRcyBuZXh0IHRvIGFjdCBhbmQgSSBoYXZlIDEuN0suIApJIGJsZXcgb3V0IG15IHRpcmVzIHdoaWxlIEkgd2FzIGRyaXZpbmcgYWJvdXQgODVtcGggb24gNzVOIGluIERhbGxhcy4gV2hlbiB0aGUgZmlyc3QgdGlyZSBibGV3LCBJIG92ZXJjb3JyZWN0ZWQgYW5kIG15IGNhciB2ZWVyZWQgc3RyYWlnaHQgZm9yIHRoZSBjb25jcmV0ZSBiYXJyaWNhZGUgKEkgd2FzIGluIHRoZSBzZWNvbmQgbGFuZSBmcm9tIHRoZSBsZWZ0IG91dCBvZiBmb3VyKS4gClRvIGlsbHVzdHJhdGUsIE1NIExlZSBzaGFyZWQgaGlzIGxvbmcgdGltZSBvYnNlcnZhdGlvbnMgb2YgQ2hpbmEgYW5kIEluZGlhLCBzYXlpbmc6IGNhbiB0YWtlIGEgQ2hpbmVzZSBvciBhbiBJbmRpYW4sIGJyaW5nIHRoZW0gdG8gQW1lcmljYSBhbmQsIGFzIGEgbWlub3JpdHkgaW4gdGhlIEFtZXJpY2FuIG1pbGlldSwgaGUgd2lsbCBiZWdpbiB0byBhYnNvcmIgdGhlIEFtZXJpY2FuIGV0aG9zLgpNciBXaWxzb24gc2FpZCB0aGUgY2x1YiBhbmQgbGFuZCB3b3VsZCBiZSBvZmZlcmVkIGZvciBzYWxlIGFmdGVyIGZhaWxlZCBhdHRlbXB0cyB0byBzZWxsIGl0IGFzIGEgZ29pbmcgY29uY2Vybi4gClRoaXMgYWxidW0gaXMgdGhlIGZpcnN0IG9mIHRoZSBkb3plbnMgSSByZWFkIG9uIGhlcmUgKHRyeWluZyB0byBzb2FrIEZGQSB1cCBsaWtlIGEgc3BvbmdlKSB0aGF0IEkgY2FuIGFjdHVhbGx5IHNlZSBteXNlbGYgd2VhcmluZyBzb21ldGltZSBpbiB0aGUgbmV4dCBmZXcgbW9udGhzLCBpbnN0ZWFkIG9mIHRoaW5raW5nIHdoZW4gSSBsb29rIG1vcmUgZmVtaW5pbmUgSSBjYW4gd2VhciB0aGlzIEkgY2FuIHRlbGwgeW91IGhvdyBob3BlZnVsIGFuZCBoYXBweSB0aGlzIG1hZGUgbWUuIEFuZCB0aGlzIGxvdW5nZXkgc2hpcnRzIGFyZSB0byBkaWUgZm9yLiAKVGhlcmUgaXMgYSBtaXhlZCBhcmVhIGFuZCBhIGxhZGllcyBvbmx5IGFyZWEuIFRoZSBGS0sgYXJlYSBlbmNvbXBhc3NlcyBtYW55IHNhdW5hcywgYSBzdGVhbSByb29tLCBhIGJhciwgYSBjb3VwbGUgb2YgcGx1bmdlIHBvb2xzIHVuZGVyIHJldHJhY3RhYmxlIHJvb2ZzIGFuZCBhIGxhcmdlIG91dGRvb3IgYXJlYSwgZWl0aGVyIGZvciBjaGlsbGluZyBhZnRlciBhIHNhdW5hIGluIHdpbnRlciBvciBzdW5iYXRoaW5nLiAKVGhpcyBpcyBhbGwgd2hpbGUgaGUgd29ya2luZyBpbiBhIGZhc3QgZm9vZCBkcml2ZSB0aHJvdWdoLCBieSB0aGUgd2F5Li4gCkluIG9yZGVyIHRvIGhhdmUgdGhlIE5ldCBOZXV0cmFsaXR5IHRoZXkgc2V0dXAgcmVxdWlyZXMgaGF2aW5nIHNvbWVvbmUgImVuZm9yY2UiIE5OLiBCdXQsIHRoZSBwcm9ibGVtIGlzIHRoZXkgYXJlIGdpdmVuIGZ1bGwgbGVnYWxpdHkgb2YgTk4gYW5kIGdldCB0byBkZXRlcm1pbmUgd2hhdCBpcyBmYWlyLiBUaGF0IGNhbiBlYXNpbHkgYmUgYWJ1c2VkIGFuZCB0aGUgcGVvcGxlIHNob3VsZCBoYXZlIHRoZSByaWdodCB0byBkZXRlcm1pbmUgd2hhdCBpcyBmYWlyLiBOb3QgdGhlIEZDQyBhbmQgd2hhdCB0aGV5IGRldGVybWluZS4gSXQgbm90IGEgbGF3LCBpdCB0aGUgRkNDIGFuZCB3aGF0IHRoZXkgZGV0ZXJtaW5lIHRvIGJlIHJlZ3VsYXRpb25zLgpJIGltYWdpbmluZyBydW5uZXJzIGJ1bXBpbmcgaW50byBlYWNoIG90aGVyLiBUaGlzIHdob2xlIHRoaW5nIGlzIGEgbWVzcy4gTm93LCBJIG5ldmVyIGRpcmVjdGVkIGEgcmFjZSBiZWZvcmUgYW5kIEkgc3VyZSB0aGluZ3MgY2FuIGdvIHdyb25nLCBidXQgd2FpdGluZyB0aWxsIGEgY291cGxlIHdlZWtzIG91dCB0byB0ZWxsIHVzP0kgZG9uIHRoaW5rIEkgZ29pbmcgdG8gYm90aGVyIHdpdGggdGhpcy4gCkEgbG90IG9mIGRlZmVuc2UgaXMgcG9zaXRpb25pbmcgYW5kIGhlIGRvZXMgYSBnb29kIGpvYiBvZiBjdXR0aW5nIG9mZiBwYXNzaW5nIGxhbmVzIGFuZCBhYnNvcmJpbmcgdGhlIGF0dGFjay4gQSBwcm9wZXIgY2xvZyBpbiB0aGUgY2VudGVyIG9mIHRoZSBwaXRjaCBhbmQgZG9lc24gZ2V0IGNhdWdodCBvdXQgb2YgcG9zaXRpb24uIEhlIGRvZXNuIGhhdmUgdGhlIG1vc3QgdGFja2xlcyBidXQgaGUgZG9lcyBzZWVtIHRvIG1ha2UgdGhlIG90aGVyIHRlYW0gbWFrZSB0aGUgaGFyZGVzdCBwYXNzIGFuZCBnaXZlIHVzIGEgdHVybm92ZXIuLiAKIkkgd291bGQgbG92ZSB0byBnbyB0byBJbmRpYSBhbmQgd2F0Y2ggdGhlIEluZGlhbiBTdXBlciBMZWFndWUgb25jZS4gQnV0IHRoaXMgdGltZSwgSSBoYXZlIHRvIGdvIGJhY2sgdG8gQnJhemlsLiBTbyBJIHdvdWxkIG5vdCBiZSBhYmxlIHRvIG1ha2UgaXQgdG8gSW5kaWEgdGhpcyB5ZWFyLiBCdXQgZm9yIHN1cmUsIEkgYW0gY29taW5nIHRvIEluZGlhIGluIHRoZSBuZXh0IHNlYXNvbiwiIFJvbmFsZG8sIHdobyBpcyBjdXJyZW50bHkgcGxheWluZyBhdCB0aGUgb25nb2luZyBBc2lhbiBQb2tlciBDaGFtcGlvbnNoaXAgaGVyZSwgb24gVHVlc2RheSB0b2xkIFBUSS4gT25lIG9mIHRoZSBiZXN0IHN0cmlrZXJzIG9mIGFsbCB0aW1lLCBSb25hbGRvLCBob3dldmVyLCBkZW5pZWQgdGhhdCBoZSB3b3VsZCBiZSBzZWVuIGluIGFjdGlvbiBhdCB0aGUgZm9vdGJhbGwgZmllbGQuClNoZSB0b2xkIG1lIHRoYXQgaGF2aW5nIGEgcGFuaWMgYXR0YWNrIGFuZCBzcGVuZGluZyB0aHJlZSBob3VycyB0aGUgbmlnaHQgcHJlY2lvdXMgY3J5aW5nIGFuZCB0cnlpbmcgdG8gcmVtZW1iZXIgaG93IHRvIGJyZWF0aGUgbm9ybWFsbHkgaXMgIm5vdCBhbiBleGN1c2UiIGZvciB0dXJuaW5nIGluIGEgMTAgcG9pbnQgaG9tZXdvcmsgYXNzaWdubWVudCBsYXRlLiBTaGUgc2FpZCB0aGF0ICJncm93biB1cHMgZG9uJ3QgbWFrZSBleGN1c2VzIGZvciBiZWluZyBsYXp5IiBhbmQgaSAianVzdCBuZWVkZWQgdG8gdHJ5IGhhcmRlci4iLiAKQXMgaW4gYWxsIGZvcm1zIG9mIHBva2VyLCB0aGVyZSBhcmUgb25seSB0d28gcmVhc29ucyB0byByYWlzZSBiZWZvcmUgdGhlIGZsb3AuIFlvdSBhcmUgZWl0aGVyIHRyeWluZyB0byBidWlsZCB0aGUgcG90IG9yIG5hcnJvdyB0aGUgZmllbGQuIEluIGxvdyBsaW1pdCBPbWFoYS84LCB5b3Ugd2lsbCByYXJlbHkgbmFycm93IHRoZSBmaWVsZCBieSByYWlzaW5nLiAKU3VnYXJ0cmVlZTggIDQzIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkFjY29yZGluZyB0byB0aGUgYWNjb3VudHMgb2YgdGhlIGRheSwgc2hlIGhhZCBiZWVuIGRvaW5nIGEgbGFuZCBvZmZpY2UgYnVzaW5lc3Mgb24gYSBTYXR1cmRheSBuaWdodCBhbmQgdHJpZWQgdG8gc2h1dCBoZXIgZG9vciBvbiBTdW5kYXkgbW9ybmluZywgdHVybmluZyBhd2F5IGEgcmFuZHkgYnVuY2ggb2Ygc29sZGllcnMuIApUbyBnaXZlIG9uZSBpbnN0YW5jZS4gSGUgdXNlZCB0byBiZSB2ZXJ5IGZvbmQgb2YgY2F0Y2hpbmcgZmxpZXMgdXBvbiB0aGUgd2luZG93IHBhbmVzLCBhbmQgaWYgcmlkaWN1bGVkIHdoZW4gdW4gc3VjY2Vzc2Z1bCwgd2FzIGV2aWRlbnRseSBtdWNoIGFubm95ZWQuIApJREsuTGl0ZXJhbGx5RXZvbHV0aW9uICAzIHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvQ2l0aWVzIHNlbGwgYm9uZHMgYWxsIHRoZSB0aW1lIGZvciB0aGluZ3MuIE5ZQyBjb3VsZCBzZWxsIDNiaWxsaW9uIGluIGJvbmRzIGZvciBoaWdoZXIgZWR1Y2F0aW9uIGFuZCBtYWtlIGl0IGJhY2sgd2l0aCB3aXRoIHRoZSBncm93dGggdGhhdCBjb21lcyBmcm9tIGEgYmV0dGVyIGVkdWNhdGVkIHdvcmtmb3JjZS4gClBob25lIGNhbGxzIGFyZSBwcmljZWQgYXQgZXh0b3J0aW9uYXRlIHJhdGVzLCBhbmQgb2YgY291cnNlLCBKTk1vbW15IGp1c3QgaGFzIHRvIHRhbGsgdG8gaGVyIG1vc3QgZmF2b3JpdGUsIHB3ZWNpb3VzIGJhYWFhYWJ5IGF0IGxlYXN0IG9uY2UgYSBkYXkuIAoiSXQgd2FzIGEgZnVsbCBzd2luZywgcmlnaHQgaW50byB0aGUgYmFjayBvZiB0aGUgaGVhZC4iVGhlIHR3byBvdGhlciB0ZWVucyB0b2xkIHBvbGljZSB0aGV5IHRoZW4gZmxlZCB0aGUgc2NlbmUgdG8gZ2V0IGhlbHAgYXMgQ29sbGlucyBnb3QgaW50byBhIHdoaXRlIGhhdGNoYmFjay4iVGhleSB0aG91Z2h0IHRoZXkgd2VyZSBuZXh0LCIgU2hhdGVrIHNhaWQuVGhlIHR3byBvdGhlciB0ZWVucyB3ZXJlIGFibGUgdG8gZ2V0IGEgbmVpZ2hib3IsIHdobyB3ZW50IHRvIEt1bHBhJ3MgY2FiaW4gYW5kIGZvdW5kIGhlciBibGVlZGluZyBpbiB0aGUgYmVkcm9vbS4gCk92ZXJ2aWV3IGZvciBnYWZmZXI4OApIZSBoYWQgc2ltaWxhciB0YXN0ZXMgdG8gbWUgYW5kIGp1c3Qgc2VlbWVkIGxpa2UgYSBuaWNlIGd1eS4gSSdtIGFuIGF1ZGlvcGhpbGUgaG9iYmllc3Qgd2hvIHJvdGF0ZXMgdGhyb3VnaCBnZWFyIGZyb20gdGltZSB0byB0aW1lIGJ1dCB0aGUgTGEgU2NhbGFzIHNlZW1lZCBsaWtlIGJ1Y2tldCBsaXN0IGdlYXIgdG8gaGltLiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiAKUGhpbGxpcHMgc3d1bmcgdGhlIHNxdWFkIGNhciBhcm91bmQsIGhlYWRlZCBlYXN0IGluc3RlYWQgb2Ygbm9ydGguIEhlIHJlYWNoZWQgdGhlIHNjZW5lIG9mIHRoZSByb2JiZXJ5IHRoZSBNY0FuYWxseSdzIG91dCBvbiBFYXN0IEFybGluZ3RvbiBCb3VsZXZhcmQgYWJvdXQgdGVuIG1pbnV0ZXMgYWZ0ZXIgbGVhdmluZyBoZWFkcXVhcnRlcnMsIGFib3V0IHR3aWNlIHRoZSB0aW1lIGEgZGlyZWN0IHJvdXRlIHdvdWxkIGhhdmUgdGFrZW4uLiAKWndpa3N6b25lIHdweXd5IHBvZGF0a293ZSBkemlraSBha3R5d2l6YWNqaSB6YXdvZG93ZWogbm93eWNoIG9zYjogMyBtaWxpYXJkeSB6b3R5Y2ggZGxhIGJ1ZGV0dQpPbmUgb25seSBub3cgcmVhbGlzZXMgaGUgd2FzIGFjdHVhbGx5IGFidXNlZCB3aGVuIGluIHRoZSBwYXN0IGhlIHNhaWQgaGUgbmV2ZXIgd2FzLiAKU2hlIHdhcyB0aGUgc2FmZXN0IG91dCBvZiB0aGUgdGhyZWUgb2YgdGhlbSwgYW5kIEkgdGhhdCB3YXMgYSBmYWN0b3Igc2hlIGNvbnNpZGVyZWQgd2hlbiBzaGUgZ290IG9mZiB0aGUgdHJhaW4uTGlvblR3ZWV0ZXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29Db21wbGFpbnQ6IHdoeSBjYW4gSSBydW4gNyBtaWxlcyB3aXRoIG5vIHByb2JsZW0gb24gU3VuZGF5LCBidXQgYSB0aHJlZSBtaWxlIHJ1biBsYXN0IG5pZ2h0IG1ha2VzIG15IGNhbGYgZmVlbCBsaWtlIGl0J3MgYmVlbiBzZXQgb24gZmlyZSBzZXZlcmFsIHRpbWVzIG92ZXI/IEl0J3MgYmVlbiBhIHdlaXJkIG5pZ2dsaW5nIHBhaW4gIGp1c3QgYmVsb3cgdGhlIG1lYXQgb2YgbXkgY2FsZiBtdXNjbGUgb24gdGhlIGluc2lkZSBvZiBteSByaWdodCBsZWcgIG9mZiBhbiBvbiBmb3IgYSB5ZWFyIG5vdywgYW5kIEknbSB0ZXJyaWZpZWQgcnVubmluZyBvbmUgbW9yZSBtaWxlIGNvdWxkIG1ha2UgbXkgbGVnIGJyZWFrIGluIGhhbGYuVHJhaW5pbmcgZm9yIHRoZSBOWUMgSGFsZiBpbiBNYXJjaCBhbmQgcmVsaWdpb3VzbHkgZm9sbG93aW5nIHRoZSBOWVJSIHRyYWluaW5nIHByb2dyYW0gSSBzaGVsbGVkIG91dCAkMzAgZm9yLCBhbmQgbHVja2lseSBpdCBjYWxscyBmb3IgYSAiZmxleC9yZXN0IiBkYXkgdG9kYXkgYW55d2F5cywgc28gc3RheWluZyBvZmYgbXkgZmVldCB0byBnaXZlIG15IGNhbGYgYSBicmVhay5Db25mZXNzaW9uOiBJIGZlZWwgc28gZ3VpbHR5IHRha2luZyB0b2RheSBvZmYgZnJvbSBhbnkgZ3ltIHdvcmsgICBubyBjYXJkaW8sIG5vIHN0cmVuZ3RoIHRyYWluaW5nLiBJIGNhbiB0ZWxsIEknbSBnb2luZyB0byBnbyBhIGJpdCBudXRzIHRvZGF5IHdpdGhvdXQgdGhhdCBvdXRsZXQuTGlvblR3ZWV0ZXIgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29ZZWFoIEkgYWdyZWUgYWJvdXQgdGhlIG5lZWQgdG8gc3RyZWFtbGluZSBzb21lIG9mIHRoZSBwbG90cy4gCllldCBvbmNlIHRoZSB0aHJvYXQgY2FuY2VyIGhhZCBtb3ZlZCBpbnRvIGhpcyBsdW5ncyBhbmQgYnJhaW4sIG5vdCBldmVuIGJyYXZlIE9saXZpYSwgd2hvIGxvdmVkIGhpbSBzbyBtdWNoLCBjb3VsZCBzYXZlIGhlciBodXNiYW5kIGZvciBhIHNlY29uZCB0aW1lLiBTaGUgYW5kIHRoZWlyIHNvbiwgRGhhbmksIHdobyB3YXMgYm9ybiBpbiAxOTc4LCB0aGUgeWVhciBoaXMgcGFyZW50cyBtYXJyaWVkLCB3ZXJlIGF0IGhpcyBiZWRzaWRlIHdoZW4gR2VvcmdlIGRpZWQuIEl0IHdhcyBhcyBwZWFjZWZ1bCBhbmQgYmVhdXRpZnVsIGFzIGl0IGNvdWxkIHBvc3NpYmx5IGJlLCBmb3IgdGhhdCB3YXMgd2hhdCBIYXJyaXNvbiBoYWQgbWV0aWN1bG91c2x5IHBsYW5uZWQuLiAKSXQgcGFpbmVkIG1lIHRvIGRyYXcgdGhhdCBkZXRhaWwuIFRoZSBxdWljayBzdHJva2VzIG9mIG15IHBlbmNpbCBkcmV3IHRoZSByaW5nIGluIHBsYWNlIGFuZCBJIGh1cnJpZWQgYXdheSBmcm9tIHRoZSBoYW5kIHRvIGZpbGwgaW4gb3RoZXIgZGV0YWlscyB0cnlpbmcgdG8gcHVyZ2UgdGhlIGlkZWEgb2YgaXQgZnJvbSBteSBtaW5kLiAKVXNldGhlc2UgdQpQb3N0ZWQgYnkgTGFtZV91c2VybmFtZSBhdCAxOjIyIEFNIG9uIE9jdG9iZXIgMzAsIDIwMDcgWzEgZmF2b3JpdGVdCk1pdCAyMCByaWVzaWdlbiBCaWxkc2NoaXJtIHVuZCBnZWZsc2NodGUgaVBvZCBrb21wYXRpYmVsIFNpdHosIHdpcmQgZXMgSWhuZW4gbmljaHQgZmVobGVuIGtlaW5lcyBkZXIgR2VudXNzIS4uIApJIGRvbid0IHdhbnQgYW55b25lIHRvIHRoaW5rIHRoYXQgaWYgYSBwcm9mZXNzb3Igb3IgYm9zcyBjb21lcyB0byB0aGVtIGFuZCBzYXlzICJoZXksIHlvdXIgZ3JhZGUgaXMgc2xpcHBpbmcveW91ciBqb2IgaXMgaW4gZGFuZ2VyLCBidXQgeW91IGNhbiBtYWtlIGl0IHVwIHRvIG1lIiB0aHJvdWdoIHNleCB0aGF0IGEpIHRoYXQncyBpbiBhbnl3YXkgYWNjZXB0YWJsZSBmb3Igc29tZW9uZSB3aXRoIHBvd2VyIG92ZXIgdGhlbSB0byBkbyBhbmQgYikgdGhhdCB0aGV5IGhhdmUgbm8gb3B0aW9ucyB0byBnZXQgdGhhdCBhYnVzZSBvZiBwb3dlciB0byBzdG9wLiAKSSBjYW5ub3QgbGVhdmUgdGhpcyB3aXRob3V0IG1lbnRpb25pbmcgdGhhdCBKb25lcyBuZXBoZXcgd2FzIG5hbWVkIENhdGVzYnkgYXAgUm9nZXIgSm9uZXMgKDE4MjEgMTg3NykuMS4gZ29vZCBzb3VyY2Ugb2YgaW5mb3JtYXRpb24gb24gdGhpcyBhY3Rpb246IFBvc3Nlc3Npb24gb2YgTW9udGVyZXkuIDIyLCAxODQzLiBIb3VzZSBvZiByZXByZXNlbnRhdGl2ZXMgRXhlY3V0aXZlIERvY3VtZW50IE51bWJlciAxNjYsIDI3dGhDb25ncmVzcywgM3JkIDlYNiIsIDExN3BwLiBIb3dlcyBNIENvd2FuIDMxNwpIZXJlIGEgbG9uZ2VyIGxpc3Qgd2l0aCBleHBsYW5hdGlvbnMgb2YgdGhlIHJlYXNvbnMgd2h5IHBlb3BsZSBib3ljb3R0IE5lc3RsZS4KSnVzdCBvbmUgb2YgdGhvc2UgbmlnaHRzIHdoZXJlIHdlIHdlcmUgZ2V0dGluZyB0aGUgbHVja3kgYm91bmNlcy4gCk9uIGFuIG91dGRvb3IgYmVkIERGSywgY2FyZXNzaW5nLCA3IG1pbiBEQVRZIHdpdGggaGVyIHNpbGVudCBPLCBtaXNzaW9uYXJ5LCBkb2dnaWUsIGF0IDIyIG1pbiBtYXJrLCBteSBzZWNvbmQgREFUWSB3aXRoIGhlciBzZWNvbmQgc2lsZW50IE8sIG15IG1hc3NhZ2Ugb24gaGVyIGFuZCBoZXIgZ29vZCBtYXNzYWdlIG4gbWUuIApUaGlzIGlzIGRvbmUgZXZlcnkgb3RoZXIgZGF5ICh0byBwcm9tb3RlIGRyYWluYWdlIGFuZCBwcmV2ZW50IHRoZSBkdWN0cyBmcm9tIGNsb3NpbmcgdXApIFdCQyBhcmUgbW9uaXRvcmVkLiAKSSBhbHNvIGRpc2xpa2UgdHN1bmRlcmUgYnV0Y2ggZmVtYWxlIGNvbXBhbmlvbnMgdGhhdCBhY3QgbGlrZSB0b3VnaCBiaXRjaGVzIHdoZW4gdGhleSBmaXJzdCBtZWV0IHRoZSBNYy4gCldlbGwgaGUgcHVsbHMgYmFjayB0b28gZmFyIGFuZCBjYW4gbm93IHNoZSBpcyBidXR0IG5ha2VkIHVuZGVyIHRoZXJlLiAKQ2hvb3NlIGEgc21hbGwgZGFyayB2aWFsLiAKTGlrZSBtZSwgRHVmZiBtYW5hZ2VkIHRvIHNxdWVlemUgaW50byBNb3JnYW4gU3RhbmxleSBQcml2YXRlIENsaWVudCBTZXJ2aWNlcyBHcm91cCAoYWthIGhpZ2ggbmV0IHdvcnRoKSB2aWEgdGhlIHNpZGUgZG9vci4gQXMgd2UgbGVhcm4gaW4gVGhlIEJ1eSBTaWRlLCBEdWZmIGtub3dsZWRnZSBvZiB0aGUgY3VycmVudCBzdG9yeSBsaW5lIG9mIE1lbHJvc2UgUGxhY2UsIGFzIHdlbGwgYXMgaGlzIGdpZnQgb2YgZ2FiLCBnb3QgaGltIGVudHJhbmNlIGludG8gdGhlIHByaXZhdGUgY2x1Yi4gSGUgc3RhcnRlZCBhcyBhIHNhbGVzIGFzc2lzdGFudCBpbiBQQ1MgaGUgd2FzIGluIHRoZSByaWdodCBwbGFjZSBhdCB0aGUgcmlnaHQgdGltZS4gVGhlc2Ugd2VyZSBoZWFkeSB0aW1lcyBkdXJpbmcgdGhlIENsaW50b24gYWRtaW5pc3RyYXRpb24uIFRoZSBtYXJrZXQgd2FzIHJhbGx5aW5nIHJlbWVtYmVyPwpCZSBzdXJlIHRvIGFycml2ZSBzbGlnaHRseSBiZWZvcmUgeW91ciBzY2hlZHVsZWQgYXBwb2ludG1lbnQsIGFib3V0IDUgbWludXRlcy4gSWYgeW91IGFyZSBsYXRlIGl0IHdpbGwgcmVmbGVjdCBpbiB5b3VyIG1hc3NhZ2UgYmVpbmcgY3V0LiBJZiB5b3UgYXJlIHJ1bm5pbmcgbGF0ZSB0byB5b3VyIHNjaGVkdWxlZCBhcHBvaW50bWVudCwgd2UgY2Fubm90IGV4dGVuZCB0aGUgdGltZSBvZiB5b3VyIHNlc3Npb24uIFdlIGFzayB0aGF0IHlvdSBhbGxvdyBlbm91Z2ggdGltZSBmb3IgeW91IHRvIGZpbmQgdXMsIG9yIGZvciB0cmFmZmljIGRlbGF5cy4gMTIzODggV2Fyd2ljayBCbHZkLiwgU3RlLiAxMDcsIE5ld3BvcnQgTmV3cywgVkEgMjM2MDYgIElOIFRIRSBDTlUgQVJFQSwgQlRXTiBIQVJSSVMgVEVFVEVSIFBBTkVSQSBCUkVBRC4KUHVibGljIFJlbGF0aW9ucyBBbG1vc3QgYWxsIG1ham9yIGdvdmVybm1lbnQgYWdlbmNpZXMgaGF2ZSB0aGVpciBvd24gcHVibGljIHJlbGF0aW9ucyBzdGFmZiwgYW5kIGluIG1hbnkgY2FzZXMgaXQgaXMgYSBzdGFuZCBhbG9uZSBkZXBhcnRtZW50IHdpdGggYSBwdWJsaWMgcmVsYXRpb25zIG9yIG1lZGlhIGRpcmVjdG9yIGFuZCBzZXZlcmFsIHN1cHBvcnQgc3RhZmYuIApUYWNrIHZhcmUgZW4gbGl0ZW4gbGl0ZW4gZWxla3Ryb25pc2sga29tcG9uZW50IHNvbSBrYWxsYXMgciBhbWJ1bGF0b3J5IGVmdGVyc29tIHBhcmtlcmluZ2VuIGludGUgciBzIHJza2lsdCBzdG9yLiAKSGUgd2VudCBvdXQgYW5kIHdpdGhvdXQgdGhpbmtpbmcgYWJvdXQgd2hhdCBoZSB3YXMgZG9pbmcgb3IgbWUsIGhlIGNoZWF0ZWQuIApGcmVlIHBva2VyIGNhcmQgZ2FtZXMgaGF2ZSBiZWVuIGludHJvZHVjZWQgaW4gdGhlIGludGVybmV0IGZvciBxdWl0ZSBhIGxvbmcgdGltZS4gQSBudW1iZXIgOCBjYXJkIHBva2VyIGdhbWUgb2YgZ2FtZSBob3N0aW5nIHNpdGVzIGhhdmUgb3BlbmVkIHRoZSBvcHRpb24gZm9yIHRoZSBzdXJmZXJzIHRvIGRvd25sb2FkIC4KU29tZSBzdXN0YWluZWQgdGVycmlibGUgYnVybnMuIApGYXN0IGZvcndhcmQgdG8gVGF0b29pbmUuIEJvYmEsIGluIHRoZSBlbXBsb3ltZW50IG9mIHRoZSBwb3dlcmZ1bCBIdXR0cywgd2F0Y2hlcyBhcyBhIEplZGkgbWVldHMgaGlzIGRvb20gaW4gdGhlIFNhcmxhYWMgcGl0LiAKIlRoZXJlIHdlcmUgMS40IG1pbGxpb24gYmxvZ3MgdGhlbi4gClNhY2hleiB2b3VzIGNvdWNoZXIuIFNpIHZvdXMgdm91bGV6IHRyZSBib24gYXUgcG9rZXIsIHZvdXMgZGV2ZXogc2F2b2lyIHF1YW5kIHZvdXMgZGV2ZXogdm91cyBjb3VjaGVyIGV0IGFjY2VwdGVyIGRlIHBlcmRyZSB1bmUgcGV0aXRlIG1pc2UgZXQgcXVhbmQgdm91cyBwb3V2ZXogam91ZXIgZXQgcmlzcXVlciBkZSBwZXJkcmUgdW5lIGdyb3NzZSBzb21tZSBlbiBzYWNoYW50IHF1ZSB2b3VzIGF2ZXogZGUgYm9ubmVzIGNoYW5jZXMgZGUgZ2FnbmVyLgpXZXJlIHlvdW5nIGFuZCBib3RoIGdvdCB0YWtlbiBhZHZhbnRhZ2Ugb2YgYW5kIHJhbiBpbnRvIGNoYWxsZW5nZXMuIApVbmRlciBjZXJ0YWluIGNvbmRpdGlvbnMgc3BlY2lmaWVkIGJ5IHRoZSBQcml2YWN5IFNoaWVsZCBwcmluY2lwbGVzLCB5b3UgbWF5IGFsc28gYmUgYWJsZSB0byBpbnZva2UgYmluZGluZyBhcmJpdHJhdGlvbiB0byByZXNvbHZlIHlvdXIgY29tcGxhaW50LiBXZSBhcmUgc3ViamVjdCB0byB0aGUgaW52ZXN0aWdhdG9yeSBhbmQgZW5mb3JjZW1lbnQgcG93ZXJzIG9mIHRoZSBGZWRlcmFsIFRyYWRlIENvbW1pc3Npb24uIApUaGUgYm90dG9tIDEwIHBlcmNlbnQgb2YgZWFybmVycyBtYWRlIGxlc3MgdGhhbiAkMjAsMzAwLCBhbmQgdGhlIHRvcCAxMCBwZXJjZW50IG1hZGUgbW9yZSB0aGFuICQ3Nyw0NzAuIFNoZSBob2xkcyBhIG1hc3RlcidzIGRlZ3JlZSBpbiBsaWJyYXJ5IGFuZCBpbmZvcm1hdGlvbiBzY2llbmNlIGZyb20gRG9taW5pY2FuIHVuaXZlcnNpdHkgYW5kIHNwZW50IG1hbnkgeWVhcnMgd29ya2luZyBpbiB0aGUgcHVibGlzaGluZywgbWVkaWEgYW5kIGVkdWNhdGlvbiBpbmR1c3RyaWVzLiAKWW91IHdpbGwgc2VlIHRoZSBhZGRyZXNzIGFwcGVhcnMgYXQgdGhlIGJvdHRvbSBvZiBvdXIgc2NyZWVuIGluIGEgYm94LiBXZSB3YW50IHRvIHJpZ2h0IGNsaWNrIGl0IGFuZCB0aGVuIHByZXNzIGNoYW5nZSByZWNvcmQsIHRoZW4gY2hhbmdlIHZhbHVlLiAKSW4geW91ciBhcmd1bWVudCB5b3Ugc2VlbSB0byB0aHJvdyBldmVyeXRoaW5nIGluIGJ1dCB0aGUga2lkcyBOc3luYywgYW5kIGV2ZW4gdGhvdWdoIHlvdSBhcmUgaGF2aW5nIGEgZmVlbCBkYXkgd2l0aCB0aGlzIEkgYW0gaGVyZSB0byBicmluZyB5b3UgYmFjayBpbnRvIHJlYWxpdHkuIApJIGxlYXJuZWQgcHJldHR5IGVhcmx5IG9uIEkgbmVlZCB0aGUgZ2FtZSB0aGVvcnkgaWYgSSB3YW50IHRvIGJlIGNvbXBldGl0aXZlIGF0IGhpZ2hlc3QgbGV2ZWxzLiBJJ3ZlIGJlZW4gc3R1ZHlpbmcgdGhhdCB0aGUgaGFyZGVzdCBiZWNhdXNlIEkgZG9uJ3QgaGF2ZSB0aGF0IGJhY2tncm91bmQuCldoaWNoIG1ha2VzIHRoZSBuZXh0IGNvbW1lbnQuLiAKVGhlIG1peCBhbmQgbWF0Y2ggbmF0dXJlIG9mIHRoZSBtb25zdGVyIGNvbnRlc3Qgd2FzIGluc3BpcmVkIGJ5IGEgdG95IGZyb20gdGhlICc4MHMsIFRvbXkncyBNaWdodHkgTWVuIGFuZCBNb25zdGVyIE1ha2VyIEtpdC4gIkkgaGFkIGl0IGFzIGEga2lkLCIgUGFya2VyIHNheXMuIApXcml0aW5nICAgb25lIGRheSBJJ2xsIGZpbmlzaCB0aGF0IG5vdmVsLiAKSGUgZXZlbiBjb25jZW50cmF0ZWQgcmlnaHQgb24gbXkgYXJlb2xhL25pcHBsZSBhdCBvbmUgcG9pbnQsIGJ1dCB0aGF0IG9ubHkgbGFzdGVkIGEgZmV3IHNlY29uZHMuIEhlIHdlbnQgYmFjayB0byBtYXNzYWdpbmcgbXkgZ3JvaW4gYXJlYSBzb21lIG1vcmUgYW5kIGF0IG9uZSBwb2ludCBldmVuIHJ1YmJlZCBoaXMgcGFsbSBsaWdodGx5IG92ZXIgbXkgZW50aXJlIGNyb3RjaCBhdCBvbmUgcG9pbnQgKG92ZXIgbXkgcGFudGllcykuIEkgd2FzIGV4dHJlbWVseSB1bmNvbWZvcnRhYmxlIGFuZCBoYXZpbmcgYSBzbGlnaHQgcGFuaWMgYXR0YWNrIHNpbmNlIEkgd2FzIHdvcnJpZWQgdGhpcyB3b3VsZCBlc2NhbGF0ZSBmdXJ0aGVyLCBhbmQgZGlkbiBrbm93IGhvdyB0byBnZXQgb3V0IG9mIHRoaXMuIApNYXJ5J3MsIFN0LiBQYXRyaWNrJ3MgYW5kIFN0LiAKUHJpbmNlIEdlb3JnZSBDb3VudHkgZmlyZSBjb21wYW5pZXMgYW5kIGNoYXJpdGllcyBhcmUgYXNraW5nIHRoZSBNYXJ5bGFuZCBHZW5lcmFsIEFzc2VtYmx5IGZvciBwZXJtaXNzaW9uIHRvIHN0YXJ0IGhvc3RpbmcgcG9rZXIgY2FyZCBnYW1lIHRvdXJuYW1lbnRzIGF0IG1lZXRpbmcgaGFsbHMgdG8gaGVscCB3aXRoIGZ1bmRyYWlzaW5nLgpGb3IgYWJvdXQgNSBtb250aHMgc2hlIHdhcyBnb2luZyBiYWNrIGFuZCBmb3J0aCBiZXR3ZWVuIG1lIGFuZCBoZXIgY293b3JrZXIuIExhc3Qgd2VlayBzaGUgYnJva2UgZG93biBtZW50YWxseSBhbmQgd2FzIGNhbGxpbmcgYW5kIHRleHRpbmcgbWUgbm9uIHN0b3Agc2F5aW5nIHNoZSB3YW50ZWQgdG8gaHVydCBoZXJzZWxmIGFuZCBzaGUgZmVsdCBsaWtlIGEgcGllY2Ugb2Ygc2hpdCBmb3IgZG9pbmcgdGhpcyB0byBtZSwgc2hlIHdhbnRlZCBtZSB0byBjb21lIG92ZXIgdG8gaGVscCBoZXIgb3V0IHdpdGggaGVyIGJyZWFrZG93biBzbyBJIHRvbGQgaGVyIHNoZSBuZWVkZWQgdG8gdGV4dCBoZXIgY293b3JrZXIgYW5kIGhhdmUgaGltIGRlYWwgd2l0aCBpdCBiZWNhdXNlIEkgd2FzIHJlYWxseSB1cHNldCBhYm91dCB0aGUgbGFzdCBmZXcgbW9udGhzLiAKQWxzbyBsaWtlIG1hbnkgb3RoZXIgaW50ZXJuYXRpb25hbCB1bml2ZXJzaXRpZXMsIElJTSBLb3poaWtvZGUgaXMgb2ZmZXJpbmcgYSBjb3Vyc2UgaW4gcG9rZXIsIHdoaWNoIGVzdGFibGlzaGVzIHRoYXQgaXQgaXMgYSBnYW1lIHRoYXQgaXMgcGxheWVkIHdpdGggc2tpbGwuClN1Z2FybG9hZiBjaXRpemVucyB0byBqb2luIGZpZyBhZ2FpbnN0IFBvaW50IG9mIFJvY2tzIHBvd2VyIHBsYW50IEJ5IFNPTklBIEJPSU4gTW9udGdvbWVyeSBDb3VudHkgQnVyZWF1IEJBUk5FU1ZJTExFIFRoZSBTdWdhcmxvYWYgQ2l0aXplbnMgQXNzb2NpYXRpb24gaXMgb24gdGhlIHZlcmdlIG9mIGpvaW5pbmcgZm9yY2VzIHdpdGggdGhlIENpdGl6ZW5zIGZvciB0aGUgUHJlc2VydmF0aW9uIG9mIFNvdXRoZXJuIEZyZWRlcmljayBDb3VudHkgaW4gdGhlIGJhdHRsZSB0byBrZWVwIGEgbGFyZ2UgY29hbCAgZmlyZWQgcG93ZXIgcGxhbnQgb3V0IG9mIFBvaW50IG9mIFJvY2tzLiAKSXQgd2FzIGFtYXppbmcgdG8gc2VlIHRoZWlyIGxvdmUgZGV2ZWxvcCBhbmQgbWFuaWZlc3QgaXRzZWxmLiAKVG91cyBuZSBzZXJhaWVudCBpbHMgcGFzIGF1IG1vaW5zIHRlbnVzICBkZSBsJ2NvdXRlIGV0IGV0IGRlIGxhIGJpZW52ZWlsbGFuY2UgPyBFdCBhdSByZXNwZWN0IGRlIGNoYWN1biwgcXVlbCBxdWUgc29pdCBzYSBzaWxob3VldHRlLiAKTmF6YXJpIHNhaWQgdGhhdCB0aGUgYXJyZXN0IHdhcnJhbnQgZm9yIEZpdHJhdCBoYWQgYmVlbiBzZW50IHRvIEludGVycG9sIGFuZCB0aGUgVVMgZW1iYXNzeSBpbiBLYWJ1bCB0byByZXR1cm4gRml0cmF0IHRvIEFmZ2hhbmlzdGFuIGZvciBxdWVzdGlvbmluZy4KUmVhbF9Qb29weUJ1dHRob2xlICA3MiBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KQnV0IGhpdCBhIGxvbmdib3cgc2hvdCBvbiBhIGJhbmdhbG9yZSBhdCAyNTBtPyBTSEUgU1RBUlRTIFJVTk5JTkcgRkFTVEVSIS4gCkkgZG9udCBraWNrIGFueSBvbmUgb3IgaW52aXRlIGFueW9uZSwgaSBrZWVwIGV2ZXJ5dGhpbmcgdGhlIHNhbWUgYW5kIGkgc3RpbGwgY2hlY2sgb2NjYXNpb25hbGx5IHRvIHNlZSBpZiBzaGUgbG9nZ2VkIG9uIHRocm91Z2ggdGhlIGd1aWxkIHBhbmVsLiAKU28gcmF0aGVyIHRoYW4gdmVudCBteSBhbmdlciBhbmQgZ2V0IHRvbGQgdGhhdCBpdCBub3QgdmFsaWQgYW5kIHRoYXQgSSBzaG91bGQgYmUgdGhlIG9uZSBhcG9sb2dpemluZyBmb3IgYmVpbmcgYSBiYWQgcGVyc29uIGJ5IGJlaW5nIGFuZ3J5LiAKQW4gdW50cmVhdGVkIGVhciBtaXRlIGluZmVzdGF0aW9uIGNhbiBsZWFkIHRvIGEgc2tpbiBkaXNlYXNlIG9yIHRvIGFuIGVhciBpbmZlY3Rpb24uIApTYXlpbmcgSSB3b3J0aHkgb2YgYmVpbmcgYSBsZWFkaW5nIGxhZHkgZG9uIGxpa2UgaXQgd2hlbiBhIHdvbWFuIGFzc2VydHMgaGVyIHdvcnRoLiAKUG9saWNlIGxhdW5jaCBtaXNjaGllZiBpbnZlc3RpZ2F0aW9uIG92ZXIgY2FyIHN1c3BlbmRlZCBmcm9tIGJyaWRnZSBuZWFyIERWUApBcHJpbHNNb3N0QW1hemluZyB1CldoZW4gZG9pbmcgY29tcGxleCBjYWxjdWxhdGlvbnMsIGhhdmluZyBldmVyeXRoaW5nIGJlIG11bHRpcGxlcyBvZiAxMCBpcyBWRVJZIHVzZWZ1bC4gTWFraW5nIGEga2lsb21ldGVyIGludG8gYSBtZXRlciBtZWFucyBtb3ZpbmcgdGhlIGRlY2ltYWwgcG9pbnQgMyB0byB0aGUgcmlnaHQsIHdoaWxlIG1ha2luZyBhIG1pbGUgaW50byBhIGZvb3QgbWVhbnMgbXVsdGlwbHlpbmcgYnkgNTI4MCAgIHRyeSBkb2luZyB0aGF0IGluIHlvdXIgaGVhZCBpbiA1IHNlY29uZHMuCkNlbnRyYWwgUGFyayBUb3dlclRoZSAxLDU1MCBmb290IHRhbGwgQ2VudHJhbCBQYXJrIFRvd2VyICAgcmlzaW5nIG9uIEJpbGxpb25haXJlcycgUm93IGF0IDIxNyBXLiA1N3RoIFN0LiAKU2F5aW5nIHRoYXQgdGhlIHNlbnRlbmNpbmcgZ3VpZGVsaW5lcyByZWNvbW1lbmRlZCBieSBNdWVsbGVyIHdlcmUgImV4Y2Vzc2l2ZSIsIHdoZW4gaGUgZXZhZGVkIG1pbGxpb25zIGluIHRheGVzLCB3b3JrZWQgZm9yIHBybyBQdXRpbiBpbnRlcmVzdHMgaW4gVWtyYWluZSwgYW5kIHdhcyB1bnJlcGVudGFudCB0byB0aGUgZW5kLiBXaGVuIE1hbmFmb3J0cyBvd24gZnVja2luZyBhdHRvcm5leXMgcmVjb21tZW5kZWQgRklWRSB5ZWFycy4KVGhpcyBpc24gZ29vZC5UdXJuIFRkLiAKSGUgc2F5cyB0aGUgZmluZSBtb3RvciBza2lsbHMgd2VyZSBvYnZpb3VzbHkgdGhlIHRvdWdoZXN0IGJ1dCB0aGUgdGhpbmcgdGhhdCBib3RoZXJlZCBoaW0gbW9zdCB3YXMgcmVsZWFybmluZyBoaXMgbWFydGlhbCBhcnRzIGJlY2F1c2Ugb2YgdGhlIG11c2NsZSBtZW1vcnkgbGlrZSB5b3Ugc2FpZC4gSGUgc2FpZCB0aGF0IHRvb2sgYSBnb29kIGZldyB5ZWFycyBiZWZvcmUgaGUgZmVsdCBhdCBhbGwgY29tZm9ydGFibGUgYW5kIHByb2JhYmx5IHRlbiBiZWZvcmUgaGUgZmVsdCBoZSB3YXMgYXQgdGhlIHNhbWUgbGV2ZWwgb2YgcmVzcG9uc2l2ZW5lc3MgYW5kIHJlYWN0aW9uIHdpdGggdGhlIGNvcnJlY3QgaGFuZC4KUmVndWxhciB2ZXRlcmluYXJ5IHZpc2l0cy4gV2hlbiB5b3UgdGFrZSB5b3VyIGRvZyBpbiBlYWNoIHllYXIgZm9yIGhpcyB2ZXRlcmluYXJ5IGV4YW0sIHRoZSB2ZXQgZG9lc24ndCBqdXN0IGdpdmUgaGltIHNvbWUgdmFjY2luYXRpb25zIGFuZCBzZW5kIGhpbSBvbiBoaXMgd2F5LiBIZSBkb2VzIGEgdGhvcm91Z2ggZXhhbTogcGFscGF0aW5nIHRoZSBib2R5IHRvIG1ha2Ugc3VyZSBhbGwgdGhlIGludGVybmFsIG9yZ2FucyBmZWVsIG5vcm1hbCBhbmQgdGhlcmUgYXJlIG5vIHdvcnJpc29tZSBsdW1wcyBvciBidW1wczsgY2hlY2tpbmcgdGhlIGNvbmRpdGlvbiBvZiB0aGUgZXllcyBhbmQgZWFyczsgbGlzdGVuaW5nIHRvIHRoZSBoZWFydCBhbmQgbHVuZ3M7IGNoZWNraW5nIHRoZSB3ZWlnaHQ7IGFuZCB0YWtpbmcgdGhlIHRlbXBlcmF0dXJlLiBCZWNhdXNlIGRvZ3MgYWdlIGRpZmZlcmVudGx5IHRoYW4gcGVvcGxlLCB0aGlzIGFubnVhbCBwaHlzaWNhbCBpcyBjb21wYXJhYmxlIHRvIHlvdSBoYXZpbmcgYSBwaHlzaWNhbCBleGFtIGV2ZXJ5IGZpdmUgb3Igc2l4IHllYXJzLiBUaGlzIGlzIGVzcGVjaWFsbHkgaW1wb3J0YW50IGlmIHlvdXIgZG9nIGlzIG1pZGRsZSBhZ2VkIG9yIG9sZGVyIGJlY2F1c2UgaXQgZ2l2ZXMgdGhlIHZldGVyaW5hcmlhbiBhIGNoYW5jZSB0byBmaW5kIGFuZCB0cmVhdCBoZWFsdGggcHJvYmxlbXMgYmVmb3JlIHRoZXkgYmVjb21lIHNlcmlvdXMuCllvdSBob2xkaW5nIHRoZSBKIG9mIHNwYWRlcyBpcyBub3QgaW5zaWduaWZpY2FudCBidXQgdGhlcmUncyBzdGlsbCBhIGxvdCBvZiBmbHVzaCBjb21ib3Mgb3V0IHRoZXJlIHRoYXQgd291bGQgYmUgY2FsbGluZyBwcmUgZmxvcCBpbiAxLzIuIApTdWNoIGludGFrZXMgYWxzbyBhcmUgZXhwZWN0ZWQgdG8gcmVkdWNlIGNhc2UgZmF0YWxpdHkgcmF0ZXMgb2YgcGF0aWVudHMgd2hvIGhhdmUgYnJlYXN0LCBjb2xvcmVjdGFsLCBvciBwcm9zdGF0ZSBjYW5jZXIgYnkgaGFsZi4KQXV0cmVtZW50IGRpdCwgbGEgcGxhY2UgZGUgbGEgUnB1YmxpcXVlIGVzdCBsZSBzaWdlIGRlIG5vbWJyZXV4IHJzZWF1eCwgZG9udCBub3RhbW1lbnQgY2VsdWkgZGVzIGdhbGVyaWVzIHNvdXRlcnJhaW5lcyBkZSBsYSBSQVRQLiBBIGwnb2NjYXNpb24gZGUgc2EgcmVxdWFsaWZpY2F0aW9uIHBsYW5pZmllIGRzIDIwMTEsIFNvZ2VhIElsZSBkZSBGcmFuY2Ugc291cyBtYXRyaXNlIGQndXZyZSBkZXMgYXJjaGl0ZWN0ZXMgdXJiYW5pc3RlcyBUVkssIGEgcmFsaXMgbCdpbXBsYW50YXRpb24gZGUgZGV1eCBwdWl0cyBkJ2luZmlsdHJhdGlvbiBkZXMgZWF1eCBwbHV2aWFsZXMgcXVpLCBzdXIgdW5lIHByb2ZvbmRldXIgZGUgMTMgbSwgdmFjdWVudCBsZXMgZWF1eCBkZSBwbHVpZSAgcHJveGltaXQgZGUgbGEgbmFwcGUgcGhyYXRpcXVlLiIuIApJJ20gc3VyZSBoZSB3b3VsZG4ndCBoYXZlIGEgcHJvYmxlbSB0YWtpbmcgc29tZSB0aW1lIG9mZiBlaXRoZXIuIApUaGUgZGVzdHJ1Y3RpdmUgcGVyc29uIGlzIGFjdGl2ZWx5IGFuZCBpbnRlbnRpb25hbGx5IHJlZHVjaW5nIHRoZSBxdWFsaXR5IG9mIHRoZWlyIHNvY2lldHkgZnJvbSB0aGUgc3RhdHVzIHF1byBhbmQgdGhlIGNoYXJpdGFibGUgcGVyc29uIGlzIGFjdGl2ZWx5IGFuZCBpbnRlbnRpb25hbGx5IGltcHJvdmluZyBpdCwgYnV0IHlvdSBob2xkIHRoYXQgdGhlIGNoYXJpdGFibGUgb25lIGlzIG1vcmFsbHkgaW5mZXJpb3I/LiAKKElmIHlvdSBsb29rIGNsb3NlbHkgeW91IGNhbiBzZWUgdGhlIGRydW0gbWFqb3IgaXMgY2FycnlpbmcgYW4gYW50ZW5uYSwgYW5kIHRoZSBzb3VzYXBob25pc3QgaXMgYWN0dWFsbHkgY2FycnlpbmcgYSBsb3Vkc3BlYWtlciwgYW5kIHNvbWV3aGVyZSBpbiB0aGVyZSBhcmUgZm9sa3MgY2FycnlpbmcgdGhlIGJhdHRlcnkgc2V0LCBhbmQgc28gb24uIFRoZXJlIG5vIGNsdWUgaW4gdGhpcyBzaG9ydCBhcnRpY2xlIHdoeSB0aGlzIGRlbW9uc3RyYXRpb24gd2FzIHRha2luZyBwbGFjZSwgYnV0IGl0IGRpZC4gCk9SLCB5b3UgY2FuIGp1c3QgZm9sZCB5b3VyIDEgZG9sbGFyIFNCIHRvIGEgbm9uIGJsdWZmeSAzIGJldCBhbmQgZmluZCBhIGJldHRlciBzcG90LgpJbiBvdGhlciB3b3JkcywgaXQncyBzb21lIHNvcnQgb2YgYSBjYXNpbm8gYm9udXMgcHJvbW90aW9ucyBmb3IgdGhlIG1vc3QgcmVsaWFibGUgcGxheWVycy4gSXQncyBjbGVhciB0aGF0IHRoZSBjYXNpbm8gcGxheWVycyB3aG8gYXJlIG1ha2luZyBiaWcgc3Rha2VzIGhhdmUgbW9yZSBjaGFuY2VzIHRvIHdpbiBpbiBzdWNoIHRvdXJuYW1lbnRzLiBUbyBwbGF5IGhpZ2ggc3Rha2VzIGEgcGxheWVyIG5lZWRzIHRvIGhhdmUgYSBsb3Qgb2YgbW9uZXkgb3IgdG8gYmUgZXh0cmVtZWx5IGx1Y2t5LiBTb21lIGNhc2lub3MgaG9sZHMgdG91cm5hbWVudHMgb24gc3BlY2lmaWMgZ2FtZXMsIGJ1dCBvdGhlcnMgd291bGQgb2ZmZXIgdG8gcGxheSBhbnkgZ2FtZS4gU29tZXRpbWVzIGl0IGlzIGp1c3Qgb25lIHRpbWUgYWN0aW9uIGRldm90ZWQgdG8gdGhlIGJpcnRoZGF5IG9mIHRoZSBjYXNpbm8gb3Igc29tZSBvdGhlciBldmVudHMuIE90aGVyIGNhc2lub3MgcHJhY3RpY2Ugc3VjaCBldmVudHMgYXMgdGhlIG1haW4gaW5jZW50aXZlIG1ldGhvZCB0byBlbnRpY2UgdGhlIHBsYXllcnMuIEZvciBleGFtcGxlLCBmcm9tIHRpbWUgdG8gdGltZSBNaWNyb2dhbWluZyBjYXNpbm9zIGhvbGQgc3VjaCB0b3VybmFtZW50cy4gU28sIGlmIHlvdSBhcmUgYW4gY2FzaW5vIGhpZ2ggcm9sbGVyLCB0aGVuIGl0IG1ha2VzIHNlbnNlIHRvIHBhcnRpY2lwYXRlIGluIHN1Y2ggdG91cm5hbWVudHMsIG90aGVyd2lzZSBpdCBpcyBqdXN0IGRvZXMgbm90IHBheS4KSSB1c2VkIHdvcmQgcHJlc3MgcHJlc3MgdGhpcyBidXR0b24gdGhlIG90aGVyIGRheSB0byBzZWUgaG93IGl0IHdvcmtlZC4gSSBjb3BpZWQgaW4gYW4gYXJ0aWNsZSBhbmQgc2V0IHdoYXQgSSBjb3VsZCBmb3IgaXQuIFdoZW4gSSBnb3QgYmFjayB0byBteSBwYWdlLCBJIGZvdW5kIG91dCBJIGNvdWxkbiBjaGFuZ2Ugd2hlcmUgSSB3YW50ZWQgaXQgc2VudCB0byB1bmRlciB0aGUgc2hhcmluZyBjb2x1bW4uIApUaGUgc2Nob29sIHdhcyBzbyBwcm91ZCBvZiB0aGVpciByYWNpYWwgZGl2ZXJzaXR5LCBidXQgOTUlIG9mIHRoZSBzdHVkZW50cyBjYW1lIGZyb20gZmFtaWxpZXMgaW4gdGhlIHRvcCAxJSBvZiBpbmNvbWUuaGFuZHlzY2Fldm9sYSAgMSBwb2ludCAgc3VibWl0dGVkIDE1IGRheXMgYWdvSSByZWFkIEF0bGFzIFNocnVnZ2VkIHRvIHRyeSB0byB3aW4gYSBzY2hvbGFyc2hpcCBmcm9tIGFuIEF5biBSYW5kIEFkbWlyZXIgU29jaWV0eS4gCkkgbG92ZSBsZWFybmluZy5JIGtub3cgb25lIG9mIHlvdXIgYmVzdCBmcmllbmRzLGluIHJlYWwgbGlmZSwgYW5kIEkgbm90aWNlIHlvdSBhcmUgdmVyeSBwcm90ZWN0aXZlIG9mIHlvdXIgZnJpZW5kcyBhbmQgZmFtaWx5LCBpcyB0aGF0IGEgbmF0dXJhbCB0aGluZyB0byB5b3U/VGhhdCdzIHNvbWV0aGluZyBJIG5ldmVyIGtuZXcgYWJvdXQgbXlzZWxmIHVudGlsIHJlY2VudGx5LiAKSSBoYWQgZHJpdmVycyBzbG93IGRvd24gYW5kIHBhY2UgbWUgd2hpbGUgeWVsbGluZyBvYnNjZW5pdGllcyBhdCBtZS4gSSBoYWQgZHJpdmVycyBkZWxpYmVyYXRlbHkgZGlwIGNsb3NlciB0byBtZSBhcyB0aGV5IHBhc3MsIHRyeWluZyB0byBkcml2ZSBtZSBvZmYgdGhlIHJvYWQuIApBcyBJIHRob3VnaHQgdGhhdCBwYXJ0aWN1bGFyIHNob3cgd2FzIHV0dGVyIHdoaXRlIGdpcmwgdHJhc2gsIEkgdmFjYXRlZCBvdXIgcm9vbSBmb3IgdGhlIHZpZXdpbmcgYW5kIHRvbGQgaGVyIEkgYmUgYmFjayBpbiBhIGJpdC4uIApEb3dubG9hZCBXaW5kb3dzIDcgdWx0aW1hdGUgcGVyIGFjdGl2YXRlZCB3aXRoIHNwMSBmb3IgZnJlZS4gCiJJIGFsc28gd2FudCB0byB0aGFuayBlYWNoIG9mIG15IG9wcG9uZW50cy4gQWxsIG9mIHRoZW0gYXJlIGluY3JlZGlibGUgYXRobGV0ZXMgd2hvIGJyb3VnaHQgb3V0IHRoZSBiZXN0IGluIG1lLiBJIHJldGlyZSBmcm9tIGNvbXBldGl0aW9uIHdpdGggZ3JlYXQgcHJpZGUgYXQgaGF2aW5nIGhhZCBhIHBvc2l0aXZlIGltcGFjdCBvbiBteSBzcG9ydC4gCk1pdCBkZXIgVmVya25wZnVuZyBsb2thbGVyIHVuZCBpbnRlcm5hdGlvbmFsZXIgQXJvbWVuLCBkZWtvcmF0aXZlbiBLcmlzdGFsbGVsZW1lbnRlbiBkZXIgdHJraXNjaGVuIFRyYWRpdGlvbnNtYXJrZSBQYXNhYmFoZSBzb3dpZSBlaW5lbSBwcml2YXRlbiBTcGVpc2ViZXJlaWNoIGZyIGJpcyB6dSAxNSBQZXJzb25lbiBwcnNlbnRpZXJ0IHNpY2ggZGFzIFJlc3RhdXJhbnQgUGx1cyBhbHMgZ2Vob2JlbmVyIE9ydCBmciBHZXNjaGZ0c2Vzc2VuLiBEaWUgaG9oZSBRdWFsaXR0IGRlciBHZXJpY2h0ZSB1bmQgZGFzIGd1dGUgUHJlaXMgTGVpc3R1bmdzdmVyaGx0bmlzIHNpbmQgZGFyYmVyIGhpbmF1cyBlYmVuc28gZnIgR3N0ZSBhdXMgQW5rYXJhIHVuZCBkZXIgVW1nZWJ1bmcgYXR0cmFrdGl2Li4gClBlcnNvbmFsaXR5IGlzIGFsc28ganVkZ2VkIGJ5IHRoZSBoYW5kc2hha2UuIEEgZmlybSBhbmQgd2FybSBoYW5kc2hha2UgaXMgYSBtYWpvciBpbmRpY2F0b3Igb2YgaG93IHRoZSBtZWV0aW5nIGJldHdlZW4gdHdvIHN0cmFuZ2VycyB3aWxsIHVuZm9sZC4gVGhlIGN1cnJlbnQgcGFzc2VkIHRocm91Z2ggdmlhIGhhbmRzaGFrZSBjYW4gYmUgbGl2ZSBvciBkZWFkLiBJZiBpdCBpcyBsaXZlLCB0aGUgcmVzcG9uc2Ugd2lsbCBiZSBtb3N0IGxpa2VseSwgYSB3YXJtZXIgcmVhY3Rpb24uIFNlbmRpbmcgY29sZCBlbmVyZ3kgYWNyb3NzIGlzIGFuIGluZGljYXRpb24gb2YgYSBsYWNrIG9mIGludGVyZXN0LiBJIGhhZCBhIGZyaWVuZCBhdCB1bml2ZXJzaXR5LCB3aG8gaGFkIHRoZSBtb3N0IHNvZnQgaGFuZHNoYWtlOyB3aGVuZXZlciBoZSB2aXNpdGVkIG91ciBob3VzZSwgbXkgZmF0aGVyIHdvdWxkIHNheSwgImhlIGRvZXNuJ3Qgc2hha2UgaGFuZHMgaGUgaGFuZHMgb3ZlciBoaXMsIGhhbmRzIHNoYWtlIGl0LCBpZiB5b3Ugd2lzaCB0bywgaXMgdGhlIG1lc3NhZ2UuIiBDaGluZXNlIHByZW1pZXIgWmhvdSBFbmxhaSB3YXMga25vd24gZm9yIGhpcyBleGNlZWRpbmdseSBsb25nIGFuZCB3YXJtIGhhbmRzaGFrZS4gSW5mYWN0LCBoaXMgdW53aWxsaW5nbmVzcyB0byBsZXQgZ28gb2YgdGhlIGhhbmQgb2YgQmVndW0gTnVzcmF0IEJodXR0bywgdXBvbiBhcnJpdmFsIGF0IEJlamluZyBhaXJwb3J0LCBhbG9uZ3NpZGUgaGVyIGh1c2JhbmQsIFp1bGlmcWFyIEFsaSBCaHV0dG8sIGhhZCBiZWNvbWUgdGhlIGJ1dHQgb2YgbWFueSBqb2tlcy4gQnV0IGFsbCBMZWFkZXJzLCBmcm9tIFNvdmlldCBMZW9uaWQgQnJlemhuZXYgdG8gQW1lcmljYW4gUmljaGFyZCBOaXhvbiBhY2tub3dsZWRnZWQgdGhhdCBaaG91J3MgaGFuZHNoYWtlIHdhcyB3YXJtIGFuZCBmcmllbmRseSwgbWFraW5nIGhpbSBhZG1pcmFibGUuCjEuMDAwIHkgdGVuYSByZWNvbXByYXMgaWxpbWl0YWRhcywgYWRlbXMgZGUgZG9zIGFkZCBvbnMuIApCbHVmZmluZyBpcyBhbiBpbXBvcnRhbnQgcGFydCBvZiB5b3VyIGdhbWUgYnV0IGlmIHlvdSBhcmUgYmVnaW5uZXIsIGRvbid0IHRyeSB0byBob25lIHlvdXIgc2tpbGxzIG9mIGJsdWZmaW5nIGluIGJpZyBzdGFrZXMgZ2FtZXMgb3IgdG91cm5hbWVudHMuIFRoYXQncyB3aGF0IGZyZWUgb25saW5lIHBva2VyIGlzIGZvci4gClNob3VsZCB3ZSBhbHNvIGJlIGNvbmNlcm5lZCBhYm91dCBvdXIgaW52ZXN0bWVudHM/IFRoYXQgcXVlc3Rpb24gaXMgdXAgdG8geW91Li4gCkJ1dCB3aGF0IGlmIFRpbGEgVGVxdWlsYSBkb2VzIG1hdHRlciBpbiBzb21lIGRlZXBlciB3YXkuIEFmdGVyIGFsbCwgdGhlIHdob2xlIHBvaW50IG9mIGNlbGVicml0eSBjdWx0dXJlIGlzIGJlaW5nIGZhbW91cyBmb3IgYmVpbmcgZmFtb3VzLiAKTm8gZ2FtYmxpbmcgb24gYW4gZW1wdHkgc3RvbWFjaCB3aXRoIHRoZSB0YXN0eSBhbGwgeW91IGNhbiBlYXQgYnVmZmV0LiAKU2VlbXMgbGlrZSBpdCB3b3VsZCBiZSBlYXN5IHRvIGtlZXAgYWxsIG15IG1wM3Mgb24gb25lIHRodW1iIGRyaXZlIGFuZCB0YWtlIGl0IHdpdGggbWUgcmF0aGVyIHRoYW4gaGF2aW5nIG11bHRpcGxlIGNvcGllcyBmbG9hdGluZyBhYm91dCBvbiBhbGwgZGV2aWNlcy4gCkFuZCByZWxheGVkLiBXaGljaCBpc24gdG8gc2F5IHRoYXQgdGhleSBkaWRuIGhhdmUgdGhlaXIgcHJvYmxlbXMuIEp1c3QgdGhhdCB0aGV5IHdlcmVuIGNvbnN0YW50bHkgcHJlb2NjdXBpZWQgYnkgb25lIGZhbWlseSBtZW1iZXIgd2hvIHJlcXVpcmVzIG1vcmUgY2FyZSBhbmQgYXR0ZW50aW9uIHRoYW4gb3RoZXJzLiBBdCBhbGwgdGltZXMuClRoaXMgaXMgdGhlIHByYWN0aWNhbCBhcmd1bWVudCBmb3IgbW9yZSBldmVuIGdlbmRlciBhbmQgcmFjaWFsIHNwcmVhZHMgYXQgdGhlIGdvdmVybm1lbnRhbCBsZXZlbCwgYnkgdGhlIHdheS4gClRoZSBIb3VzZSBiaWxsLCB3aGljaCBtb3ZlZCB0aHJvdWdoIGl0cyBmaW5hbCBjb21taXR0ZWUgc3RvcCBvbiBUaHVyc2RheSBhcyB3ZWxsLCBtb3ZlcyBpbiBhbiBvcHBvc2l0ZSBkaXJlY3Rpb24gZnJvbSB0aGUgU2VuYXRlIGxlZ2lzbGF0aW9uLiBJdCB3b3VsZCBhbGxvdyB0aGUgdHJpYmUgdG8ga2VlcCBpdHMgc2xvdCBtYWNoaW5lcyBhbmQgYmxhY2tqYWNrIHRhYmxlcyBmb3IgMjAgeWVhcnMsIGJ1dCBpdCB3b3VsZCBub3QgYWxsb3cgdGhlbSB0byBhZGQgYWRkaXRpb25hbCBnYW1lcy4gVGhlIGxlZ2lzbGF0aW9uIHdvdWxkIGFsc28gbWFrZSBpdCBjbGVhciB0aGF0IHNsb3QgbWFjaGluZXMgd291bGQgYmUgY29uZmluZWQgdG8gdHJpYmFsIHJ1biBjYXNpbm9zIGFuZCB0cmFja3MgaW4gU291dGggRmxvcmlkYS4KVGhleSBldmVudHVhbGx5IGJlZnJpZW5kIHRoZSBjcm9jLCBmaW5kIG91dCBoaXMgbmFtZSBpcyAiTGFnaSwiIGZhc2hpb24gYSBuZWNrbGFjZSBmb3IgaGltIG91dCBvZiBicmlnaHQgYmx1ZSBzaG9lIHN0cmluZyBhbmQgdGVldGggdGhleSBvYnRhaW5lZCBmcm9tIGNvcnBzZXMgZWFybGllciAoYW5vdGhlciBxdWlyayBvZiB0aGUgYmFyZCkgYW5kIHRoZXkgYXR0YWNoZWQgaXQgdG8gdGhlIGNyb2Mgbm9zdHJpbHMgYXMgaXQgd2FzIHdheSB0b28gbGFyZ2UgdG8gd2VhciBpdCBhcyBhbiBhY3R1YWwgbmVja2xhY2UuLiAKUG91ciBzZXVsZSBpbGx1c3RyYXRpb24gZW4gcmFwcG9ydCBhdmVjIGNldHRlIHByb3Bvc2l0aW9uIGRlIGxvaSA6IGNvbW1lbnQgcmFnaXIgcXVhbmQgbCdpbmRpdmlkdSBuJ2VzdCBwYXMgbWVudGFsZW1lbnQgY2FwYWJsZSBkZSBjb21wcmVuZHJlIGwnaW1wb3J0YW5jZSBldCBsJ2ludHJ0IGRlcyBzb2lucyA/IENlbGEgYWJvdXRpcmEgIHVuIGVtcHJpc29ubmVtZW50IHBsdXMgbG9uZywgc2FucyBwb3VyIGF1dGFudCBhdm9pciB1biBhY2NzIGF1eCBzb2lucyBhZHF1YXRzIDsgcHVpcywgIHVuZSBsaWJyYXRpb24gZW4gZXNwcmFudCB1biBydGFibGlzc2VtZW50IG91IGVuIGF0dGVuZGFudCB1biB2bmVtZW50IHBsdXMgZHJhbWF0aXF1ZS4gClB1YmxpYyBTcXVhcmUgYW5kIEdhcmRlbnMgICBUaGUgcGFyayBsaWtlIGdyb3VuZHMgcnVuIG5vcnRoIHRvIHNvdXRoIGJlaGluZCB0aGUgMTB0aCBBdmVudWUgYnVpbGRpbmdzLiAKVGhlIFNhbmRiYXIgc2l0cyBvbiBJbnN0YWdyYW0gd29ydGh5IEFubmEgTWFyaWEgQmVhY2ggb24gdGhlIEd1bGYgZW5kIG9mIFBpbmUgQXZlbnVlLCBzb2Z0IHNhbmQgZWRnZWQgd2l0aCBwYWxtIHRyZWVzIGFuZCBzZWEgZ3JhcGVzIGFuZCBibHVlIGdyZWVuIHdhdGVyIHN0cmV0Y2hpbmcgYWxsIHRoZSB3YXkgdG8gdGhlIGhvcml6b24uIFRoZSBtZW51IGluY2x1ZGVzIG9yZ2FuaWMgcHJvZHVjZSBmcm9tIENoaWxlcydzIEdhbWJsZSBDcmVlayBGYXJtICh0aGluayBTZW1pbm9sZSBwdW1wa2lucyBhbmQgZWRpYmxlIGhpYmlzY3VzIGJsb3Nzb21zKSwgYWxvbmcgd2l0aCBsb2NhbCBmaXNoLCBzdWNoIGFzIGdyb3VwZXIsIHNuYXBwZXIsIGFuZCBib3R0YXJnYSwgbWFkZSBmcm9tIHRoZSByb2Ugb2Ygd2VzdCBGbG9yaWRhIHN0cmlwZWQgZ3JheSBtdWxsZXQuIApTcGVha2luZyBhcyBzb21lYm9keSB3aG8gaXMgcm9ja2luZyA2IE5hZGhpbiBhbmQgZ3JlYXRlciBlc3NlbmNlcy4gVGhlIE5hZGhpbiBmYXJtIGp1c3QgZ2l2ZXMgeW91IHNvbWV0aGluZyB0byBkbyB3aGVuIHlvdSB3YW50IHRvIGFic29sdXRlbHkgbWluL01heCB5b3VyIGNoYXJhY3Rlci4gTXkgUksgaXMgcm9ja2luZyA5ayBob3cgd2l0aCBNYXggaGVhbGluZywgTWF4IGNyaXQgY2hhbmNlIGFuZCAxNzUlIHRhY3RpY2FsIGRhbWFnZSBib29zdC4uIApUaGV5IGFsc28gbG9vayBhdCB0aGUgd29ybGQgYXMgdHdvIGdyb3Vwcy4gCkkgaGF2ZSBhIHNldmVyZSBkaXNsaWtlIGZvciBib29tZXJzLCBhcyBhIGdlbmVyYXRpb24sIHRvbyBidXQgSSB0cnkgdG8gYmUgbmljZSB0byB0aG9zZSB3aG8gSSBjb21lIGFjcm9zcyB0aGF0IHVuZGVyc3RhbmQgd2hhdCBoYXMgaGFwcGVuZWQvaXMgaGFwcGVuaW5nIHdpdGggdGhlaXIgZ2VuZXJhdGlvbi4gSW1hZ2luZSBob3cgdG91Z2ggaXQgaXMgdG8gc2VlIHdoYXQgeW91ciBnZW5lcmF0aW9uIGhhcyBkb25lLCBhbmQgYmUgdGhlIG1pbm9yaXR5IG9waW5pb24gd2l0aGluIHRoYXQgZ3JvdXA/IEkgZmVlbCBsaWtlIHRoYXQgd291bGQgYmUgcHJldHR5IHRvdWdoLCBzbyBJIHRyeSB0byBicmlkZ2UgdGhhdCBnYXAgYW5kIGxlYXJuIGZyb20gdGhlbSBhcyBtdWNoIGFzIHBvc3NpYmxlLiAKSSBzYXcgaGltIHJlZ3VsYXJseSBmb3IgYWJvdXQgYSB5ZWFyIGFuZCBhIGhhbGYuIEhpcyBtb3RoZXIgd2FzIGFsc28gYXdhcmUgaGUgd2FzIHNlZWluZyBtZSBhbmQgd2FzIHZlcnkga2luZCB0byBtZS4gCkZvciBmb2xrcyBsaWtlIFdpbGxpYW0gTGFuZSBDcmFpZyBSYXkgY29tZm9ydCBhbmQgS2VuIEhhbSBJIHN1c3BlY3QgaXQgbWlnaHQganVzdCBiZSBhcyBzaW1wbGUgYXMgYW4gZWNvbm9taWMgdGhpbmcuIApUaGF0IHN1Y2Nlc3MsIHdyaXRlcyBWcmFudHNpZGlzLCB3aG8gY3JlZGl0cyBoZXIgY2FyZWVyIGluIG1hdGggdG8gc3BhcmsgdGhhdCB3YXMgaWduaXRlZCBpbiBNYXNzZXkgZW5yaWNoZWQgbWF0aCBjbGFzc2VzLCBpcyBkdWUgdG8gdGhlIHNjaG9vbCBmdWxsIHllYXIgY291cnNlcy4gU2hlIG5vdGVzIHRoZSBJbnRlcm5hdGlvbmFsIEJhY2NhbGF1cmVhdGUgUHJvZ3JhbSwgd2hpY2ggY2l0ZXMgdGhlIG5lZWQgZm9yIGJvdGggaW50ZW5zaXZlIGxlc3NvbnMgdG8gbGVhcm4gbWF0ZXJpYWwgYW5kIGxlc3NvbnMgdGhhdCBhcmUgc3ByZWFkIG92ZXIgdGltZSB0byByZXRhaW4gaXQuCk9ubGluZSBQb2tlciBTdHJhdGVneQpJbXByb3ZlZCB0aGVpciBzaXRlcyByZWNlbnRseSwgaXQgaGFzIG5pY2UgYW5kIGxvb3NlIGdhbWluZyB2aWJlLi4gCklmIHlvdSBjYW4gcHJvdmlkZSBzb21lIGhpc3RvcmljYWwgZGF0YSAoYWNjb3JkaW5nIHRvIHRoZSBNaW5pc3RyeSBvZiBFbnZpcm9ubWVudCwgc3RhdHMgaGF2ZSBiZWVuIGtlcHQgc2luY2UgYXQgbGVhc3QgMjAwNSkgdGhhdCBwcm92ZXMgdGhhdCBteSBvd24gbWVtb3JpZXMgYXJlIGZhdWx0eSwgSSdkIGJlIGhhcHB5IHRvIGVudGVydGFpbiB5b3VyIGFyZ3VtZW50LgpIYXZlIHlvdSBldmVyIHNlZW4gYSBuYWtlZCBwZXJzb24gcnVubmluZyBhcm91bmQgdGhlIHN0cmVldHMgb2YgYW1lcmljYSBiZWNhdXNlIHRoZXkgaGFkIG5vIGNsb3RoZXMgdG8gd2VhciBiZWNhdXNlIGl0IGFsbCBnb3QgYm91Z2h0IHVwIGJ5IHBlb3BsZSByZXNlbGxpbmc/IE5vLCB0aGF0J3Mgd2hhdCBJIHRob3VnaHQuLiAKVHJ1bXAgaXMgZ29pbmcgdG8gZ2V0IHNsYW1tZWQgb24gTm9ydGggS29yZWEgYnkgaGlzIGRldHJhY3RvcnMgbm8gbWF0dGVyIHdoYXQgaGUgZG9lcy4gSWYgaGUgZG9lcyBub3QgbWVldCB3aXRoIEtpbSBoZSBhIHdhciBtb25nZXIsIGVhZ2VyIHRvIGRlYWwgd2l0aCB0aGUgc2l0dWF0aW9uIG1pbGl0YXJpbHkuIFdoZW4gdGhlIG1lZXRpbmcgYnJlYWtzIGRvd24gaGUgYSBmYWlsdXJlLiAKMjIgaHJzIGFnbyArIEJ5IEFuZHJldyBKLiBJdCByZXN1bHRlZCBmcm9tIEdNJ3Mgb3duIG1pc21hbmFnZW1lbnQgYW5kIGZsYXdlZCBwdWJsaWMgcG9saWNpZXM6IFN1c2FuIEhlbHBlciAoT3BpbmlvbikgQ2xvc3VyZSBvZiBHZW5lcmFsIE1vdG9ycycgTG9yZHN0b3duIHBsYW50IHdhcyBub3QgaW5ldml0YWJsZS4gSXQgcmVzdWx0ZWQgZnJvbSBHTSdzIG93biBtaXNtYW5hZ2VtZW50IGFuZCBmbGF3ZWQgcHVibGljIHBvbGljaWVzOiBTdXNhbiBIZWxwZXIgKE9waW5pb24pIFdlIGNhbid0IGVhc2lseSBjdXJlIEdlbmVyYWwgTW90b3JzIENvcnAuJ3MgcG9vciBkZWNpc2lvbnMgYW5kIGl0cyB1bmRlcnZhbHVpbmcgb2YgaXRzIG93biBwZW9wbGUuIERlcGFydG1lbnQgb2YgQ29tbWVyY2UuCiJJIGZlbHQgdGhhdCBpdCB3YXMgaW1wb3J0YW50IHRvIGNvbWUgb3V0IGFuZCBub3QgZ2l2ZSBpbiB0byBmZWFyLCIgc2FpZCBMYWlsYSBIYXdyeWx5c2h5biwgd2hvIGF0dGVuZGVkIGJvdGggdGhlIHByYXllciBzZXJ2aWNlIGFuZCB0aGUgd2FsayBkb3duIERhbmZvcnRoLiAiSSB3YXMgb3V0IGVhcmxpZXIgdG9kYXkgYW5kIGl0IHdhcyB2ZXJ5IGVlcmllIGFuZCBJIGp1c3QgZGVjaWRlZCB0aGF0IHRoaXMgaXMgYWJvdXQgY29tbXVuaXR5IG1vcmUgdGhhbiBhbnl0aGluZy4iClRha2UgdGVlbnMgcGVyY2VwdGlvbiBvZiByaXNrLiBJdCBjZXJ0YWlubHkgZGlmZmVyZW50IGZyb20gdGhhdCBvZiBhZHVsdHMsIGJ1dCBub3QgaW4gdGhlIHdheXMgeW91J2QgZXhwZWN0LiBSZXNlYXJjaCBzaG93cywgZm9yIGluc3RhbmNlLCB0aGF0IHRlZW5zIHRlbmQgdG8gd2lsZGx5IG92ZXJlc3RpbWF0ZSBjZXJ0YWluIHJpc2tzICAgb2YgdGhpbmdzIGxpa2UgdW5wcm90ZWN0ZWQgc2V4IGFuZCBkcnVnIHVzZSAgIG5vdCB0byBsb3diYWxsIHRoZW0gYXMgb25lIHdvdWxkIHByZWRpY3QuIFNvLCBpdCBtYXkgYmUgdGhhdCB0ZWVucyBub3RvcmlvdXMgcmlzayB0YWtpbmcgYmVoYXZpb3Igc3RlbXMgbm90IGZyb20gc29tZSBpbW11bml0eSB0byBrbm93biByaXNrcywgYnV0IHJhdGhlciwgYXMgYSBuZXcgc3R1ZHkgbm93IHN1Z2dlc3RzLCBmcm9tIHRoZWlyIGdyZWF0ZXIgdG9sZXJhbmNlIHRvIHVuY2VydGFpbnR5IGFuZCBhbWJpZ3VpdHkgICB0aGF0IGlzLCB1bmtub3duIHJpc2tzLiBUZWVucywgaXQgc2VlbXMsIGxvdmUgdGhlIHVua25vd24uCkZvciB0aG9zZSBvZiB5b3Ugd2hvIHNhaWQgSSdtIG5vdCByZWFsLCBJIHN1cmUgZG8gZmVlbCByZWFsLiAKVGhlcmUgYXJlIG1hbnkgc2FtcHJhZGF5YXMgd2hvIGRvbiBldmVuIGRvIHRoYXQsIGFuZCBqdXN0IGFyZ3VlIHRoYXQgdGhlIG9wcG9zaXRpb24gYXJlIHBsYWluIHdyb25nLiAKSSBhbSBub3QgbWFkIGF0IGhlciBvciBob2xkIGFueSBncnVkZ2VzLiAKQ3JvY2twb3QgbWVhbHMgY291bGQgYmUgbWFkZSB0aGF0IGRvbid0IHJlcXVpcmUgdG9vIG11Y2ggd29yay4gSXQgc291bmRzIGxpa2UgZXZlbiBhIGZldyBsaXR0bGUgdGhpbmdzIHdvdWxkIHJlYWxseSB0YWtlIHRoZSBsb2FkIG9mZiBvZiB0aGUgT1AuLiAKWW91IGluIHRoZSBCQiwgdGhlcmUgYXJlIDQgbGltcGVycywgYW5kIHlvdSBjaGVjay4gCldoYXQgc2VydmljZXMgZG8geW91IHByb3ZpZGUgdGhhdCBzaGUgdXNlcyBmcmVlbHk/IFlvdSBuZWVkIGxpc3QgZXhhY3RseSBob3cgbXVjaCB5b3UgcGF5IHRvIHN1cHBvcnQgaGVyLiBHaXZlIGhlciBhIGJpbGwsIGFuZCB0aGVuIGRpc2N1c3MgaWYgc2hlIGxpa2UgeW91IHRvIGNvdmVyIGl0LiBEaXNjdXNzIGhvdyBtdWNoIGEgYmFieSBjb3N0cyBvbiB0b3Agb2YgdGhhdC4gCkhvcGVmdWxseSB0aGVpciByZWNvbmNpbGlhdGlvbiBtYXJrcyB0aGUgZW5kIG9mIEJldHR5J3MgdGltZSBhcyBhIGNhbSBnaXJsLCBiZWNhdXNlIHRoZXJlIGFyZSBvdGhlciBzdG9yaWVzIHdlJ2QgcmF0aGVyIHdhdGNoIHRoYW4gYW4gdW5kZXJhZ2UgZ2lybCBjYXRlcmluZyB0byBsb25lbHkgbWVuIG9uIHRoZSBpbnRlcm5ldCBhcyBhIHdheSBvZiBjb3Bpbmcgd2l0aCBoZXIgbWVudGFsIGhlYWx0aCBzdHJ1Z2dsZXMuIE9uY2UgYWdhaW4sIGNhbiB5b3UgcGxlYXNlIGdvIHNlZSBhIHRoZXJhcGlzdCwgQmV0dHkgQ29vcGVyPy4gCiJUaGlzIHR5cGUgb2YgYWN0aXZpdHkgd2l0aCB5b3VuZyBtYWxlcyBoYXMgdGhlIHBvdGVudGlhbCB0byBjb3JydXB0IHRoZW0sIiB0aGUgcmVwb3J0IGFkZGVkLgpUaGVyZSBhIG51bWJlciBvZiB3YXlzIHRoYXQgdGhlIHNob3cgY291bGQgd29ya2VkLiBPbmUga2V5IGRpZmZlcmVuY2Ugd291bGQgYmUgdG8gbWFrZSBpdCBtb3JlIHNlcGFyYXRlIGZyb20gRWFydGggYW5kIHRoZSBNaWxreSBXYXkuCldlIHN0dW1ibGUgaW4ganVzdCBiZWZvcmUgdGhleSBiZWdpbiBjbGVhbmluZyB1cCBhbmQgb3JkZXIgYSBmaXNoIGZyeS4gV2UgY2FuJ3QgZWF0IGF0IHRoZSBiYXIgYnV0IHRoZSBvd25lciB3aWxsIGxldCBtZSBzbW9rZSBhdCB0aGUgdGFibGUgd2hlbiBubyBvbmUgZWxzZSBpcyBhcm91bmQuIApNZWFucyBwZW9wbGUgd29uIGFjdHVhbGx5IGhhdmUgdG8gYmUgYXQgYW4gZXZlbnQgb3IgYSBnYW1lIHRvIHB1cmNoYXNlIGEgcmFmZmxlIHRpY2tldCBhbmQgc3VwcG9ydCBhIGxvY2FsIGNhdXNlIC4gQW5kIGl0IHdpbGwgYWxsb3cgYW55IGdyb3VwIHRvIHNlbGwgdGhlaXIgdGlja2V0cyB0byBhIG11Y2ggd2lkZXIgbWFya2V0LiAKQnVzaCBoYXMgZW5kb3JzZWQgTWNDYWluIGZvciB0aGUgR09QIG5vbWluYXRpb24uIApQZW9wbGUgaW4gcnVyYWwgT3JlZ29uIGJlbmVmaXQgZnJvbSB1cmJhbiBPcmVnb24gaW4gbWFueSB3YXlzLiBJbWFnaW5lIHlvdXIgdmVuZG9ycyBiZWluZyBmdXJ0aGVyIGF3YXkuIEJhbmtzIGJlaW5nIGxlc3Mgd2lsbGluZyB0byBsZW5kIHRvIHlvdSBiZWNhdXNlIHRoZXkgaGF2ZSBsZXNzIGluZm9ybWF0aW9uIGFib3V0IHBsYWNlcyBvdXRzaWRlIHRoZWlyIHN0YXRlLiBBbmQgb2YgY291cnNlLCBsZXNzIHBlb3BsZSB3aWxsaW5nIHRvIGJ1eSBmcm9tIHlvdSBiZWNhdXNlIHlvdSdyZSBzbyBmYXIgZnJvbSBtYXJrZXQuIChUaGUgSW50ZXJuZXQgZG9lc24ndCBmaXggZXZlcnl0aGluZykuCk5hdGFsaWUgaXN0IG5pY2h0IG51ciBlaW5lIHRhbGVudGllcnRlIFBlcmZvcm1lcmluLCBzaWUgaGF0IFBoaWxvc29waGllIHN0dWRpZXJ0IHVuZCBoYXQgdW5nbGF1YmxpY2ggVGFsZW50IHplaXRyZWxldmFudGUgcGhpbG9zb3BoaXNjaGUgSW5oYWx0ZSBmciBkaWUgTWFzc2VuIHp1IGVya2xyZW4uIEFiZXIgdW50ZXJoYWx0c2FtLi4gCkluIEphcGFuIGNhc2UgdGhlIGFyZ3VtZW50IGlzIG1hZGUgdGhhdCBzaW5jZSB0aGUgcG9wdWxhdGlvbiBpcyBzaHJpbmtpbmcgKHBvcHVsYXRpb24gZHJvcHBlZCBieSAxIG1pbGxpb24gc2luY2UgNSB5ZWFycyBhZ28pIHRoZXJlIGlzIGZld2VyIGRlbWFuZHMgb24gZ29vZHMgYW5kIHNlcnZpY2VzLiBBbmQgbW9yZSBob21lcyBlbnRlcmluZyB0aGUgbWFya2V0IHRoYW4gYXJlIGJlaW5nIGJvdWdodCBjYXVzaW5nIGEgY3Jhc2ggaW4gcHJpY2VzIHRoYXQgbGVhZHMgdG8gZGVmbGF0aW9uYXJ5IGVmZmVjdHMuCk9uY2UgYWdhaW4sIGNvbXBvc3VyZSBpbnRhY3QgSSBwaWNrZWQgdXAgdGhlIHBob25lIGFuZCBpbiBhIHZlcnkgc29iZXIgdG9uZSBzYWlkLCAib2suIiBUaGUgcmVwIHNhaWQsICJ3ZWxsLCBJIHdpc2ggc29tZW9uZSB3b3VsZCB0ZWxsIG1lIHRoZSBqb2tlISBJIHdhbnQgdG8gbGF1Z2gsIHRvbyEiIEFuZCB0aGF0IHNlbnQgbWUgaW50byBhbm90aGVyIGZpdCB3aGlsZSBteSBmcmllbmQga2VwdCBtb3V0aGluZyAid2hhdD8gV2hhdD8iIFNvLCBJIHRyaWVkIGV4cGxhaW5pbmcsICJzaGUgc3Nzc2FhYWFpZC4gClRoZSBtb3N0IGNvbW1vbmx5IHNvdWdodCB0cmVhdG1lbnQgbW9kYWxpdGllcyB3ZXJlIG9uIGJhc2UgbWVkaWNhbCBhbmQgcGh5c2lvdGhlcmFweSBzZXJ2aWNlcy4KSGF2aW5nIGVzdGFibGlzaGVkIHRoZSBiZWdpbm5pbmcgYW5kIHRoZSBlbmQgb2YgTW9sbHkgQmxvb20gc3RvcnkgZnJvbSB0aGUgb3V0c2V0ICAgc2hlIHdyb3RlIGEgYmVzdCBzZWxsaW5nIGJvb2sgdGhhdCBhbGwgYnV0IGRhcmVkIHRoZSBGQkkgdG8gY29tZSBhZnRlciBoZXIgICB0aGVyZSBpcyBldmVyeSBjaGFuY2UgTW9sbHkgR2FtZSBtYXkgaGF2ZSBwYWludGVkIGl0c2VsZiBpbnRvIGEgdGlnaHQgbmFycmF0aXZlIGNvcm5lci4KVGhlIDU0IHllYXIgb2xkIHdhcyBzZW50ZW5jZWQgdG8gMTAgeWVhcnMgaW4gamFpbCwgd2l0aCBhIG5vbiBwYXJvbGUgcGVyaW9kIG9mIHNldmVuIGFuZCBhIGhhbGYgeWVhcnMuClRvIGJlZ2luIHdpdGggSSBjb3VsZCBzZWUgdGhlIHBvaW50LCBidXQgdGhlbiBpdCBqdXN0IHN0YXJ0ZWQgZ2V0dGluZyBzaWxseSBhbmQgdG8gdGhlIHBvaW50IG9mICJhbSBJIGV2ZW4gZ29pbmcgdG8gbm90aWNlPyIuIApNb3JlIGdlbmVyYWxseSB5b3UgY2FuIHRlbGwgd2hlbiBtZW4gYXBwbHkgZG91YmxlIHN0YW5kYXJkcyB0byB3b21lbiBhbmQgZG9uIHNlZSB0aGVtIGFzIGZ1bGx5IGh1bWFuLiBUaGV5IGluc2lzdCBvbiB3YWxraW5nIHlvdSBob21lIGV2ZW4gd2hlbiB5b3Ugc2F5IG5vLCB5b3UgZmluZS4gVGhleSBzdWJ0bHkgYm91bmRhcnkgcHVzaCBhbmQgY2FuIHRha2UgeW91ciBmaXJzdCBubyBmb3IgYW4gYW5zd2VyLiAKTWljaGFlbCBBdmVuYXR0aSBvcmRlcmVkIHRvIHBheSBmb3JtZXIgZW1wbG95ZWUKSWYgYSBzZWF0IGRvZXMgbm90IHBhc3MgdGhlaXIgcmlnb3JvdXMgdGVzdGluZywgaXQgZG9lc24/dCBtYWtlIGl0IHRvIHRoZSBtYXJrZXQsIHNvIHdoZW4geW91IHRoZWlyIG1pbmRzIHdpdGhvdXQgYmVhdGluZyBhcm91bmQgdGhlIGJ1c2ggb3IgdXNpbmcgZXVwaGVtaXNtcy4gQnkgZm9sbG93aW5nIHRoaXMgYWR2aWNlLCB0aGV5IHdpbGwgPz8/Pz8/ID8/PyBiZSBhYmxlIHRvIHJlc3RhdXJhbnRzLCBhbmQgY2x1YnMgaGF2ZSBtdXNocm9vbWVkIGFsb25nIHRoZSBsb25nIHN0cmV0Y2ggb2YgYmVhY2guIApUaGVyZWZvcmUgU0sgc2hvdWxkIGFwb2xvZ2l6ZSBhZ2Fpbi4KVGhhdCBhIGdvb2QgdGhpbmcuR3JpbGwgYW5kIEtpbGwgd2FzIHByZXR0eSBtdWNoIGEgbXVzdCBwaWNrIG9uIDcsIGFuZCBpdCBnZXRzIG5lcmZlZCB3aGlsZSB0aGUgb3RoZXIgdGFsZW50cyBnZXQgYnVmZmVkLlBlcm5hbWFuU29tZW9uZSBlbHNlIHN3aXRjaCBJIGhhdmUgZ29sZCB3ZWFwb24uIApUb2RheSBJIGdvaW5nIHRvIHRlbGwgeW91IGFib3V0IGhvdyBJIGRlYWwgd2l0aCB0aGUgZGFpbHkgZ3JpbmQgb2YgV1RGIEFNIEkgTUFLSU5HIEZPUiBESU5ORVIgVE9OSUdIVCB0aGF0IG1ha2VzIGV2ZW4gdGhlIG1vc3QgZWFnZXIgY29vayBhIGxpdHRsZSwgc2hhbGwgd2Ugc2F5LCBpdGNoeS4gSSBkb24ga25vdyBob3cgbWFueSBvZiB5b3UgaGVyZSBhcmUgYWxzbyBmb2xsb3dpbmcgbWUgb24gSW5zdGFncmFtLCB3aGVyZSBJIG1lbnRpb25lZCB0aGlzIG5ldyB3YXkgb2YgbWVhbCBwbGFubmluZyBiYWNrIGluIEphbnVhcnksIHNvIGZvcmdpdmUgbWUgaWYgdGhpcyBpcyBhIGxpdHRsZSByZXBldGl0aXZlLCBidXQgSSByZWFsbHkgZG8gZmluZCBpdCBzdWNoIGEgaGVscGZ1bCB3YXkgb2Ygd29ya2luZyB0aHJvdWdoIHRoZSBjb25zdGFudCBhbmQgdW5yZWxlbnRpbmcgY2hvcmUgb2YgaGF2aW5nIGRpbm5lciBvbiB0aGUgdGFibGUgZXZlcnkgZXZlbmluZyB0aGF0IHBlcmhhcHMgaXQgY2FuIGJlIHVzZWZ1bCB0byBhIGZldyBvZiB5b3UgdG9vLiAKSXJvbmljYWxseSwgd2hpbGUgbmljZSBndXlzIHRoaW5rIHRoZXkgaGF2ZSB0byBrZWVwIGhlciBmcm9tIGJlY29taW5nIGVtb3Rpb25hbCB0byBtYWtlIHRoZSBjb25kaXRpb25zIHJpZ2h0IGZvciBzZXggdG8gb2NjdXIsIHRoZSBleGFjdCBvcHBvc2l0ZSBpcyB0cnVlLiBUaGUgbW9yZSBlbW90aW9uYWxseSBzdGltdWxhdGVkIGEgd29tYW4gaXMsIHRoZSBtb3JlIHNleHVhbCBzaGUgZmVlbHMgICBldmVuIGlmIHRoZXkgbm90IHBvc2l0aXZlIGVtb3Rpb25zLiBUaGVyZSBpcywgb2YgY291cnNlLCBhIGxpbmUsIGJ1dCB0aGF0IGNvbWVzIHdpdGggY29tbW9uIHNlbnNlLgpTbywgYWx3YXlzIGJlIGhhcHB5IHNvIHlvdSBkbyBub3QgbG9zZSBhbGwgeW91ciBtb25leSEuIApTZXZlcmFsIG5ld3NwYXBlcnMgaGF2ZSByZXBvcnRlZCB0aGF0IG1vbmV5IGZyb20gdGhlIE1pc3Npc3NpcHBpIGNhc2lub3MgbWF5IGhhdmUgbWFkZSBpdHMgd2F5IHRvIEFsYWJhbWEgYW5kIGludG8gdGhlIGhhbmRzIG9mIEpvaG4gR2lsZXMuIFRoZSBhbGxlZ2F0aW9ucyBhcmUgdGhlIEluZGlhbiBjYXNpbm9zIGFjcm9zcyB0aGUgY291bnR5IHBhaWQgdHdvIHBlb3BsZSBhdCBsZWFzdCAkNDUsMDAwLDAwMCB0byBzdG9wIGFsbCB0aGVpciBnYW1ibGluZyBjb21wZXRpdGlvbi4gTW9zdCBvZiB0aGF0IG1vbmV5ICQzMSwwMDAsMDAwIGFsbGVnZWRseSB3ZW50IHRvIGEgcHVibGljIHJlbGF0aW9ucyBleGVjdXRpdmUgTWljaGFlbCBTY2FubG9uIHRvIGxlYWQgdGhlIGZpZ2h0LiBIZSB0aGVuIHJlcG9ydGVkbHkgcGFpZCBhIG1hbiB3aG8gaGFzIGZvdWdodCBnYW1ibGluZyBmb3IgeWVhcnMgICB0aGUgZm9ybWVyIGhlYWQgb2YgdGhlIG5hdGlvbmFsIENocmlzdGlhbiBDb2FsaXRpb24sIFJhbHBoIFJlZWQsIGFsbW9zdCAkNCwwMDAsMDAwIGZvciBoaXMgaGVscC4gSXQgaXMgYmVsaWV2ZWQgc29tZSBvZiB0aGF0IG1vbmV5IHdlbnQgdG8gSm9obiBHaWxlcyB0byBkZWZlYXQgZ2FtYmxpbmcgaW4gQWxhYmFtYSBzbyB0aGF0IHdvdWxkbid0IGJlIGNvbXBldGl0aW9uIHRvIGdhbWJsaW5nIGluIE1pc3Npc3NpcHBpLgpUaGVyZSBzaG91bGQgbm90IGJlIG11Y2ggbGVmdCB0byBhZGQgdG8gYSBmdWxsIHByaWNlZCBnYW1lLkkgYWxzbyBkaXNhZ3JlZSB0aGF0IGl0IGFsd2F5cyBvbmx5IG5vc3RhbGdpYSBiZWNhdXNlIG1hbnkgZmFucyBoYXZlIHJlcGxheWVkIHRoZSBIRCB2ZXJzaW9ucyByZWNlbnRseSAobXlzZWxmIGluY2x1ZGVkKSBhbmQgc3RpbGwgaGFkIGEgYmxhc3Qgd2hpY2ggaXMgbm90IGV4Y2x1c2l2ZWx5IGJlY2F1c2UgdGhleSBwbGF5ZWQgdGhlIEZNLiAKTGFjb2IgcmVhc3NlcnRlZCB0aGF0IGhlIHBsYW5zIHRvIGJlIGEgdmVyeSBoYW5kcyBvbiBvd25lciwgYW5kIGhlIGNvbmZpcm1lZCBoZSBtYWRlIHRoZSBjYWxsIHRvIHNpZ24gSmVyZW15IExpbi4uIApBcmUgeW91IHN1YnNjcmliZWQgdG8gdHJhaW5pbmcgc2l0ZXM/IERlZmluaXRlbHkgZG8gYSBkZWVwIGRpdmUgb24geW91ciBkYXRhYmFzZS4gQW5kIHRiaCwgYXQgdGhpcyBzdGFnZSwgSSB3b3VsZG4ndCB3b3JyeSB0b28gbXVjaCBhYm91dCBQSU8uIExpdmUgcG9rZXIgaXMgZm9yIG1ha2luZyAkJCQgLCBub3QgbmVjZXNzYXJpbHkgaW1wcm92aW5nLiBEb24ndCBzd2l0Y2ggdG8gUExPIHlldCwgeW91J3JlIGhvbmVzdGx5IHNvIGNsb3NlIHRvIGJlYXRpbmcgdGhpcyBzdGFrZS4KSm9zaWVUaWVybmV5ICAyIHBvaW50cyAgc3VibWl0dGVkIDIxIGhvdXJzIGFnbwpOZXdlc3Qgc3VibWlzc2lvbnMKRXZlbiB0aG91Z2ggeW91IGFuZCBJIGFyZSBub3QgYmx1ZSBjb2xsYXIgd29ya2Vycywgb3VyIHdhZ2VzIGFyZSBhZmZlY3RlZCBieSB0aGUgYWx0ZXJuYXRpdmVzIHdlIGhhdmUsIGFuZCBhcyB0aG9zZSBhbHRlcm5hdGl2ZXMgYmVjb21lIGZld2VyIGFuZCBsZXNzIGF0dHJhY3RpdmUsIHdoaXRlIGNvbGxhciB3b3JrIHdpbGwgYmUgaGVhZGVkIGludG8gdGhlIHNhbWUgZGVhdGggc3BpcmFsIGFzIGJsdWUgY29sbGFyIHdvcmsuIApJZiB5b3Ugbm90IGRvaW5nIEJsaW5rIHNob3BwaW5nLCB5b3UgY2FuIGNvbXBsYWluIGFib3V0IHRoZSBzdG9yZSBsaW5lICAgdGhvc2UgcGVvcGxlIGFyZSBjaG9vc2luZyB0byBiZSB0aGVyZS4gClVsbGlvdHQgZWFybmluZ3MgdmFyaWVkIGVub3Jtb3VzbHkuIApUaGlzIGhpZ2ggcmF0ZSBvZiBob21lIG93bmVyc2hpcCwgY291cGxlZCB3aXRoIGFjY3VtdWxhdGVkIENQRiBzYXZpbmdzLCBoYXMgbWFkZSBTaW5nYXBvcmVhbnMgc3Vic3RhbnRpYWwgc3Rha2Vob2xkZXJzLCB3aGljaCBlbmFibGVkIHRoZSBQZW9wbGUgQWN0aW9uIFBhcnR5IHRvIGNvbnNvbGlkYXRlIGl0cyBwb3dlciBiYXNlLiAKSWYgdGhvc2UgY3JpdGVyaWEgd2VyZSBmb2xsb3dlZCwgaGVhcnQgbXVzY2xlIGRhbWFnZSB3YXMgZ3JlYXRseSByZWR1Y2VkLCBhbmQgbmVpdGhlciBoeXBlcnRlbnNpb24gbm9yIGFycmh5dGhtaWEgZGV2ZWxvcGVkLgpXZSBhbGwgc2F3IGFuZCBtYW55IG9mIHVzIHdlcmUgZmVkIHVwIG9mIE5hd2F6IFNoYXJpZiBjcm9uaWVzIGhvbGRpbmcgbGVuZ3RoeSBwcm9wYWdhbmRhIHNwZWVjaGVzIGV2ZXJ5IGRheS4gCkxpdmluZyBpbiBydXJhbCBBbGFiYW1hIG15IHdob2xlIGxpZmUsIEkgaG9uZXN0bHkgZG9uIGJlbGlldmUgeW91IGNhbiByZWFjaCB0aG9zZSBwZW9wbGUuIApObywgcHJldHR5IG11Y2ggYWxsIGFyZ3VtZW50cyBvZiBzaXplIGJlaW5nIGEgYmlnZ2VyIGlzc3VlIHRvIFVTQSB0aGFuIG90aGVyIGNvdW50cmllcyBpcyBmYWxzZS4gVGhlcmUgYXJlIGNhc2VzIG9mIGl0LCBidXQgaXQgbm90IGJ5IGFueSBtZWFucyBhbiBpbXBvcnRhbnQgZmFjdG9yLgpFZGl0OiBUaGFuayB5b3UgYWxsIGZvciB0aGUgZ29sZCBhbmQgc2lsdmVyIGFuZCB0aGUgbGl2ZWx5IGRpc2N1c3Npb24uIEkgc3VwcG9zZSBpdCBwZXJmZWN0bHkgdGltZWx5IGFuZCBmaXR0aW5nIHRoYXQgd2UgaGF2ZSBqdXN0IG5vdyB3aXRuZXNzZWQgYSBNQUdBIGp1ZGdlIGdpdmUgYW4gaW1wb3NzaWJseSBsaWdodCBzZW50ZW5jZSB0byBhIGxpdGVyYWwgdHJhaXRvci4gVGhlIGxhdyBkb2VzIG5vdCBtYXR0ZXIgdG8gdGhlbS4gRG9uIGZvcmdldCBpdC4KTW9zdCBDYW5hZGlhbnMgdGF4IHJldHVybnMgYXJlIGR1ZSBvbiBBcHJpbCAzMCwgMjAxOS4gCkRvaW5nIDUvMy8xIGZvciBiZWdpbm5lcnMgYW5kIEkgZG9uIGZlZWwgbGlrZSBJIG1ha2luZyBwcm9ncmVzcyBvbiBteSBzcXVhdHMuIEkgbWFraW5nIHByb2dyZXNzIG9uIGJlbmNoIChsaWtlIGRvaW5nIG9uZSBtb3JlIHJlcCBkdXJpbmcgdGhlIHNlY29uZCB3b3Jrb3V0IG9mIGVhY2ggd2VlayBhbmQgdHJ5aW5nIHRvIGtlZXAgdGhlIHJlcHMgY29uc3RhbnQgZm9yIHRoZSBmaXJzdCBhbmQgc2Vjb25kIHdvcmtvdXQgb2YgZWFjaCB3ZWVrIHdoZW4gSSBtb3ZlIHVwIHRoZSBuZXh0IHdlZWsuIERlYWRsaWZ0cyBhbmQgT0hQIGhhdmUgYmVlbiBtYWtpbmcgcHJvZ3Jlc3MgYnV0IE9IUCBpcyBzbG93ZXIgYW5kIGRlYWRsaWZ0IGlzIGF2ZXJhZ2UgSSB3b3VsZCBzYXkuIApJIHdhcyBob21lc2Nob29sZWQgYnkgbXkgcmVsaWdpb3VzIHBhcmVudHMgdW50aWwgSSB3YXMgMTQsIGFuZCB0aGUgInNjaWVuY2UiIHRleHRib29rcyBJIHdhcyBnaXZlbiB3ZXJlIEVYQUNUTFkgbGlrZSB0aGlzLiAKTm93LCBiYWNrIHRvIHJlYWxpdHk6IHlvdSBhcmVuIG1ha2luZyAyIDN4IHlvdXIgY3VycmVudCBpbmNvbWUgb24gYW4gaG91cmx5IGJhc2lzIHdpbm5pbmcgeW8geW8gY29tcGV0aXRpb25zIChub3IgYXJlIHlvdSBpbmNsdWRpbmcgdHJhaW5pbmcgdGltZSBpbiB5b3VyIGhvdXJseSksIGJ1dCB5b3UgYXJlIHRyeWluZyB0byBjb252aW5jZSB5b3VyIGdmIChvciBzb29uIHRvIGJlIGV4KSB0aGF0IHlvdSBzcGVudCAocmVhZDogd2FzdGVkKSBlbm91Z2ggdGltZSBsZWFybmluZyBob3cgdG8gd2luIHlvIHlvIGNvbXBldGl0aW9ucyB0aGF0IHlvdSBjb3VsZCByZWxpYWJseSB3aW4gdGhlbSBvZnRlbiBlbm91Z2ggdG8gc3VzdGFpbiB5b3Vyc2VsZiBmaW5hbmNpYWxseS4gSSBzYXkganVzdCBzdGFydCB0cmFja2luZyB5b3VyIHBva2VyIHBsYXlpbmcgaG9iYnkuIFRoZSBudW1iZXJzIHdpbGwgdGVsbCB5b3UgaWYgeW91IG5lZWQgdG8gZ28gcHJvLiAKTXkgdmlldyBpcyB0aGF0IGlmIHlvdSBhcmUgYWdyZXNzaW5nIHlvdSBuZWVkIGxlc3Mgc2tpbGwgdG8gdGFrZSB0aGVtIG91dCB0aGVuIGlmIHlvdSBhcmUgZGVmZW5zaXZlIGFuZCB0aGV5IGFyZSB0aGUgb25lcyBjb21pbmcgZm9yIHlvdSAod2hpY2ggaXMgd2hhdCB0ZW5kcyB0byBoYXBwZW4gd2l0aCBsZXNzIGFnZ3JvIHBsYXllcnMvbmV3ZXIgcGxheWVycykuIApUaGVuIGZpbmQgY292ZXIgYW5kIHN0YXkgaW4gdGhlIG5ldyBjaXJjbGUgYXMgbXVjaCBhcyBwb3NzaWJsZS4gVHJ5IHRvIHRoaXJkIHBhcnR5IG90aGVycyBiZWNhdXNlIHRoZXkgYmUgd2Vha2VyIGFuZCBub3QgcmVhZHkgZm9yIHlvdS4gClRoZSBhZGRlZCBiZW5lZml0IHRvIHRoaXMgZWFybHkgUlJTUCB3aXRoZHJhd2FsIGFwcHJvYWNoIGlzIHRoYXQgaXQgbWluaW1pemVzIHRoZSBhbW91bnQgb2YgdGltZSBvdXIgc2luZ2xlIHJldGlyZWUgbmVlZHMgdG8gbWFuYWdlIHRoZWlyIFJSU1AvUlJJRiBpbnZlc3RtZW50cyBhbmQgbWF4aW1pemVzIHRoZWlyIGdvdmVybm1lbnQgZ3VhcmFudGVlZCwgaW5mbGF0aW9uIHByb3RlY3RlZCBDUFAgYW5kIE9BUyBwZW5zaW9uIGluY29tZS4KQSByZWNvcmQgc2V0dGluZyAkMS43NSBtaWxsaW9uLCBvciBtb3JlIHRoYW4gOTAgcGVyY2VudCBvZiB0aGUgbGljZW5zaW5nIGluY29tZSwgd2FzIHJlaW52ZXN0ZWQgaW4gVU8gcmVzZWFyY2ggYnkgZGlzdHJpYnV0aW5nIGl0IHRvIGZhY3VsdHkgaW52ZW50b3JzIGFuZCBhY2FkZW1pYyBwcm9ncmFtcy4gCkVudGVydGFpbm1lbnQgQXJ0aWNsZXMgIFNlcHRlbWJlciA3LCAyMDEyCkl0IHdhcyB0aGUgYmlnZ2VzdCBiYWl0IGFuZCBzd2l0Y2ggaW4gdGhlIGhpc3Rvcnkgb2YgdGVsZXZpc2lvbiBhbmQgcm9kZSBvbiBub3RoaW5nIGJ1dCB1bmZvdW5kZWQgaHlwZS4gU2l4IHNlYXNvbnMsIDE2MSBlcHMgb2YgaGF2aW5nIHlvdXIgYmFsbHMgYnV0IG9ubHkgdGhlIGJhbGxzIHRpY2tsZWQgYW5kIGJhcmVseSBhIGNvaGVyZW50IHBsb3QgbGluZSBiZXR3ZWVuIHRoZW0uIApJbiBjb250ZXh0LCBpdCBtYWtlcyBzZW5zZSB0byB3ZWFyIGEgZm9ybWFsIGRyZXNzIGZvciBhIGZvcm1hbCBkYW5jZSwgdGhhdCBmaW5lLiBCdXQgZm9yIGhlciAoYmFzZWQgb24gaW50ZXJ2aWV3cyksIGl0IHdhcyBhIHByZXR0eSBkcmVzcyBzaGUgZm91bmQgYXQgYSB2aW50YWdlIHNob3AgYW5kIHNoZSBjb3VsZCB3ZWFyIGl0IHdpdGhvdXQga25vd2luZyBjb250ZXh0cy4gCiA3IHBvaW50cyAgc3VibWl0dGVkIDkgaG91cnMgYWdvVGhlcmUgYWxzbyBoaWdoIGNob2xlc3Rlcm9sLCBpbmNyZWFzZWQgYWdlLCBwb29yIGRpZXQsIHBvb3Igc2xlZXAgc2NoZWR1bGUsIGFuZCB1bmNoZWNrZWQgYW5nZXIgaXNzdWVzIHRoYXQgcHV0IGhpbSBhdCBoaWdoIHJpc2sgZm9yIGEgaGVhcnQgYXR0YWNrLiBQbHVzLCBzaW5jZSBGcmVkIGRlYWQsIHRoZXJlIG5vYm9keSBsZWZ0IHRvIGJhaWwgaGltIG91dCwgYW5kIG5vIHdheSB0byBldmVyIGFjdHVhbGx5IHdpbiBoaXMgbG92ZS5PaCwgcmlnaHQuIFBsdXMgdGhlIG1hc3NpdmUgYW1vdW50IG9mIGludmVzdGlnYXRpb25zIGludG8gZXZlcnkgYXNwZWN0IG9mIGhpcyBsaWZlIGFuZCBidXNpbmVzcywgdGhlIGluZGljdG1lbnRzL2d1aWx0eSBwbGVhcy9jb252aWN0aW9ucyBvZiBwZW9wbGUgaW4gaGlzIG9yYml0LCB0aGUgZmxpcHBpbmcgb2YgaGlzIGxvbmcgdGltZSBmaXhlciwgYW5kIHRoZSBvbmx5IHdheSB0byBrZWVwIHRoZSB3b2x2ZXMgYXQgYmF5IGFyZSBoYW5naW5nIHByZWNhcmlvdXNseSBvbiBoaW0gd2lubmluZyByZSBlbGVjdGlvbiBkZXNwaXRlIGhpcyByYXRpbmdzIG5ldmVyIGV4Y2VlZGluZyBtaWQgdG8gaGlnaCA0MCBhbmQgZ3Jvd2luZyBmcnVzdHJhdGlvbiBmcm9tIGFsbCBzaWRlcyBhdCBoaXMgdXR0ZXIgaW5lcHRpdHVkZS4gCkRhdGEgc2NpZW5jZSBpcyBub3QgaW4gcmlnaHQgbm93LiBUaGlzIGlzIHNvbWV0aGluZyB0aGF0IGhhcyBleGlzdGVkIGZvciAzMCB5ZWFycyBub3cuIApXaGVuIGEgcG9rZXIgcGxheWVyIHBsYXlzIHRoaXMgd2F5IGNvbnNpc3RlbnRseSwgaGUgb3Igc2hlIHVzdWFsbHkgYmVjb21lcyBkZXNwZXJhdGUgZHVlIHRvIHRoZSBzaW1wbGUgZmFjdCB0aGF0IHlvdSdyZSBnb2luZyB0byBtaXNzIG1vcmUgaGFuZHMgdGhhbiB5b3UncmUgZ29pbmcgdG8gd2luLi4gClNvLCBob3cgZG8geW91IGdvIGFib3V0IGdldHRpbmcgYSByb3VuZCBmb2xkaW5nIGNhcmQgdGFibGU/IFRoYXQncyBwcmV0dHkgZWFzeTsgdGhlIEludGVybmV0IG1ha2VzIGl0IHByZXR0eSBlYXN5IHRoZXNlIGRheXMgdG8gZmluZCBvbmUgaWYgdGhhdCdzIHdoYXQgeW91IHdhbnQuIE5vdywgYmUgYWR2aXNlZCB0aGF0IGl0IG1heSBub3QgYmUgY2FsbGVkIGEgY2FyZCB0YWJsZSwgYnV0IHlvdSBjYW4gc3RpbGwgZ2V0IHRoZW0gcm91bmQsIGFuZCB5b3UgY2FuIGdldCB0aGVtIGluIGp1c3QgYWJvdXQgYW55IHNpemUuLiAKRGllIE9seW1waXNjaGVuIFNwaWVsZSBiZWdpbm5lbiBWZXJhbnN0YWx0dW5nIHdpcmQgbWl0IGRlciBmZWllcmxpY2hlbiBFcmZmbnVuZyBhbSA4LiBBdWd1c3QsIGVzIHdpcmQgdmllbCBQYXJ0eSB1bmQgYW1zYW50IHdocmVuZCBkaWVzZXIgWmVpdC4gClNhZGx5IHdlIHByb2JhYmx5IG5ldmVyIGtub3cgdGhlIGZ1bGwgdHJ1dGggYWJvdXQgbWFueSBhbmNpZW50IHNvY2lldGllcyBiZWNhdXNlIG9mIHRoaW5ncyBsaWtlIHRoaXMsIG5vdCBqdXN0IENocmlzdGlhbnMgaW4gUm9tZS4KSXMgdGhlcmUgYSBsZWdpdGltYXRlIHJlYXNvbiB3aHkgdGhlIEtvcmVhbiBnb3Zlcm5tZW50IGhhcyBzdWNoIHN0cmljdCBjZW5zb3JzaGlwIHJ1bGVzClNlYWJyb29rIHNheXMuLiAKV2VsbCBldmVyeSBOaW50ZW5kbyBzeXN0ZW0gc2luY2UgdGhlIE5FUy4gClBhdGhkYjIgdQpMZSBqb3VyIG8gamUgbWUgc3VpcyB2dWUgZmFpcmUgJ2NvbW1lIG1vbiBwcmUnLCBqJ2FpIGNvbW1lbmMgIG1lIHBvc2VyIGRlcyBxdWVzdGlvbnMgY2FyIGMndGFpdCBleGFjdGVtZW50IGNlIHF1ZSBqJ2F2YWlzIHRvdWpvdXJzIHZvdWx1IHZpdGVyICEKSGUgd2VudCB0aHJvdWdoIGEgKHRoYW5rZnVsbHkgdmVyeSBicmllZikgcGVyaW9kIHdoZXJlIGhlIHdvdWxkICJjaGVjayBvdXIgZGlhcGVycyIgZm9yIHVzLCBlc3BlY2lhbGx5IGhpcyBtb20gSGUgZ28gYXJvdW5kIGJlaGluZCBhbmQgeWFuayBvbiB0aGUgYmFjayBvZiBoZXIgamVhbnMgYW5kIGxvb2sgZG93biBhdCBoZXIgYnV0dC4gCkEgcGltcCBpbiBUZXhhcyB3aG8gcmVjcnVpdGVkIHRlZW5hZ2UgZ2lybHMgb24gRmFjZWJvb2sgYW5kIHBvc3RlZCBwcm9mYW5pdHkgbGFjZWQgdmlkZW9zIGJvYXN0aW5nIG9mIGlsbCBnb3R0ZW4gcHJvZml0cyAgIGhpcyAiaG8gbW9uZXkiICAgaGFzIGJlZW4gc2VudGVuY2VkIHRvIGxpZmUgaW4gcHJpc29uLgpHb2xmIE15cnRsZSBCZWFjaCAuICAgbG9jYWxzIGluIE15cnRsZSBCZWFjaCBrbm93IGFsbCB0aGUgYmVzdCBjb3Vyc2VzLCBiZXN0IGdvbGYgZGVhbHMgYW5kIGNhbiBwbG90IGV2ZXJ5IHNob3QuIFZlZ2FzIGluIHRoZSBwYXN0IHdhcyBrbm93biBmb3IgdGhlIDMgRydzICAgZ2xpdHosIGdsYW1vdXIsIC4gQXJpem9uYSAgICJUaGUgTW9zdCBXZXN0ZXJuIFRvd24iLCBhcmUgd2UgbG9zaW5nIGl0IG9yIHdoYXQ/IElzIC4gLiB0byBsb29rIGEgbGl0dGxlIGxpa2UgVHVzY2FueT8gSWYgaXQgd2VyZSB1cCB0byBhbGwgdGhlIC4gYW5kLCAuIGluIHRvd24sIEkgdGhpbmsgdGhlCktpbGxlciBRdWVlbiBleHBsb2RlcyB0aGVtIHdpdGhvdXQgdGhlbSByZWFsaXNpbmcuIApJbiBKYW51YXJ5LCBORU8gYmVjYW1lIHRoZSBmaXJzdCBDYW5hZGlhbiBzdG9jayBleGNoYW5nZSB0byBzaWduIGEgQ0VPIFN0YXRlbWVudCBvZiBTdXBwb3J0IGZvciB0aGUgLCBhbiBpbml0aWF0aXZlIHNwZWFyaGVhZGVkIGJ5IHRoZSBFdXJvcGVhbiBVbmlvbiBpbiBwYXJ0bmVyc2hpcCB3aXRoIFVOIFdvbWVuIGFuZCBVTiBHbG9iYWwgQ29tcGFjdC4gCkNldHRlIGZvaXMsIGxhIG1haXJpZSBkdSAxMGUgbidhdmFpdCBwYXMgdCBvdWJsaWUgZXQgdGFpdCByZXByc2VudGUgcGFyIFN0cGhhbmUgQnJpYmFyZCwgbHUgY2hhcmcgZGUgbGEgcHJ2ZW50aW9uIGV0IGRlIGxhIHNjdXJpdC4gUGFzIGQnbHUgY3QgMThlLCBzZXVsZSBsYSBkaXJlY3RyaWNlIGRlIGNhYmluZXQgZHUgbWFpcmUsIEp1ZGl0aCBIZXJ2aWV1LCB0YWl0IGwuIApTZWNvbmQgTm9ydGggQW1lcmljYW4gQ2Vydmljb2dlbmljIEhlYWRhY2hlIENvbmZlcmVuY2Ugd2lsbCBiZSBoZWxkIGluIExhcyBWZWdhcywgTWFyY2ggMjIgMjMuIERyLiAKVGhlcmUgYXJlIGFsc28gdGVhbXMgdGhhdCBoYXZlIGRlZmluaXRlbHkgZGlzcGxheWVkIGFuIHVuZGVyc3RhbmRpbmcgb2YgdmFsdWUgdGFraW5nIGV4cGxvaXRhYmxlIGFnZ3Jlc3NpdmUgYWN0aW9ucyB0byBla2Ugb3V0IGFuIGV4dHJhIHR1cnJldCBvciBleHAgZGVuaWFsIGdpdmVuIHRoZSBiZWxpZWYgeW91IHVuZGVyc3RhbmQgdGhlIHNpdHVhdGlvbiBiZXR0ZXIgdGhhbiB5b3VyIG9wcG9uZW50LiBGbmF0aWMgbWFjcm8gZ2FtZSBvZnRlbiByZWxpZXMgb24gdGhpczsgZm9yIG1lIGl0IGV4cGxhaW5zIHRoZSBNaXNmaXRzIHRvd2VyIHRyYWRpbmcgc2NlbmFyaW8gdGhhdCBsb29rZWQgaG9ycmlibGUgICB0aGVpciBibHVmZiBnb3QgY2FsbGVkIGFzIHRoZXkgd2VyZW4gZXhwZWN0aW5nIE1TRiB0byByZXB1c2ggc28gaGFyZCAgIHRoZXkgd2VyZSBleHBlY3RpbmcgTVNGIHRvIGxldmVsIHRoZW1zZWx2ZXMgb3V0IG9mIHRoZSBwbGF5LgpDb2ZhZ2EgIDQgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCldoZW4gYSBob3JzZWZseSB1bndpdHRpbmdseSBlbnRlcnMgaGlzIGFpcnNwYWNlLCBpdCBtZWV0cyBhIHJ1dGhsZXNzIGVuZCBhcyBOaW5vIHR3byB3b3JrIGhhcmRlbmVkIGhhbmRzIGNydXNoIGl0IHRvIGRlYXRoIHdpdGggYSBsb3VkIGNsYXAuIFNpbGVuY2VzIHJ1bGVzIG9uY2UgbW9yZSBhbmQgdGhlIHBvbmRlcmluZyBjb250aW51ZXMuIApSZWZyaWdlcmF0ZSB0byBzZXQuIE1lbHQgMSBwa2cgY2hvY29sYXRlIGNoaXBzIGFuZCBzcHJlYWQgb24gcGVhbnV0IGJ1dHRlciBtaXh0dXJlLiBSZWZyaWdlcmF0ZSBhZ2FpbiB1bnRpbCBjaG9jb2xhdGUgaGFyZGVucy4gUmVtb3ZlIGZyb20gcmVmcmlnZXJhdG9yIGEgbGl0dGxlIHdoaWxlIGJlZm9yZSBzZXJ2aW5nLCBzbyBpdHMgZWFzaWVyIHRvIGN1dCB0aHJvdWdoIHRoZSBjaG9jb2xhdGUuLiAKVGhlIEFtZXJpY2FuIFBva2VyIEF3YXJkcyB3aWxsIGhvbm9yIHRoZSBiZXN0IG9mIHRoZSAyMDE1IHBva2VyIHllYXIuCkE6IEEgY291cGxlLiAKUmVndWxhcmx5IGdyb29tIHlvdXIgZG9nLiAKQnVrYSBGYWNlYm9vayBwYWRhIHBlcmFtYmFuIGludGVybmV0IGRpIHNlYnVhaCBrb21wdXRlciwgZGFuIG1hc3Vra2FuIGthdGEga2F0YSAiVGV4YXMgSG9sZEVtIFBva2VyIiBkaSBiaWxhaCBwZW5jYXJpYW5ueWEuIFBpbGloIGhhc2lsIHBlcnRhbWEgeWFuZyBtdW5jdWwgKGRlbmdhbiB0dWxpc2FuIDEwLjAwMC4wMDArIGp1dGEgcGVuZ2d1bmEgYnVsYW5hbiBkaSBiYXdhaG55YSkuQW5kYSBha2FuIG1lbmRhcGF0a2FuIHBlbWJlcml0YWh1YW4gYmFod2EgVGV4YXMgSG9sZEVtIFBva2VyIG1lbWludGEgYWtzZXMga2UgcHJvZmlsIHVtdW0gZGFuIGRhZnRhciB0ZW1hbiBBbmRhLiBBbmRhIGhhcnVzIG1lbnlldHVqdWlueWEgamlrYSBpbmdpbiBiZXJtYWluLiAKQWxsIEkgY291bGQgZG8gdGhlIGZpcnN0IGZldyBkYXlzIG9mIGJlaW5nIGRpYWdub3NlZCB3YXMgbGF5IG9uIG15IGNvdWNoIGRvaW5nIG5vdGhpbmcgYmVjYXVzZSB0aGUgcGFpbi4gCkFtZXJpY2EgZm91Z2h0IGEgd2FyIGFnYWluc3QgdGhlIEJyaXRpc2ggYW5kIHdvbiB0aGVpciBpbmRlcGVuZGVuY2UuIFRoZSBGcmVuY2ggaGFkIHRoZWlyIHJldm9sdXRpb24gYW5kIHRoZSBib3VyZ2VvaXNpZSBjaG9wcGVkIGFsbCB0aGUgaGVhZHMgb2ZmIHRoZSBtb25hcmNocyBhbmQgYXJpc3RvY3JhdHMuIEV2ZW4gQ2hpbmEgYW5kIFJ1c3NpYSwgdGhlaXIgY29tbXVuaXN0IHJldm9sdXRpb25hcmllcyBmb3VnaHQgZm9yIGRlY2FkZXMgYmVmb3JlIHN1Y2NlZWRpbmcgaW4gdGhlaXIgZmlnaHQgZm9yIGNvbnRyb2wgb2YgdGhlaXIgY291bnRyaWVzLiAKQSBsaXR0bGUgbW9yZSBteXN0ZXJ5IHN1cnJvdW5kcyB0aGUgaGVyaXRhZ2UgYW5kIGN1cnJlbnQgd2hlcmVhYm91dHMgb2YgdGhlIGh1Z2UgZGVlciBodW50ZXIgc3RhdHVlIHRoYXQgdG9vayBwcmlkZSBvZiBwbGFjZSBhdCByZWNlcHRpb24uIApPbiBBcHJpbCAyMSwgVUNMQSBPbmUgQnVzLCBPbmUgQ2F1c2Ugdm9sdW50ZWVycyBlbmRlZCB0aGUgd2VlayBieSBoZWxwaW5nIEhvcGUgR2FyZGVucyBGYW1pbHkgQ2VudGVyIGluIHRoZWlyIG1pc3Npb24gdG8gcHJvdmlkZSBhIHRyYW5zaXRpb25hbCBob3VzaW5nIGNhbXB1cyBhbmQgc2FuY3R1YXJ5IHNwYWNlIHRvIHNpbmdsZSB3b21lbiBhbmQgY2hpbGRyZW4gZXhwZXJpZW5jaW5nIGhvbWVsZXNzbmVzcy4gCkZpcnN0IHBsYXllciBiZXRzICQxMDAuIFRoZSBuZXh0IHBsYXllciBvbmx5IGhhcyAkMjAgdG8gY2FsbC4gCkl0IGRvZXNuIG1hdHRlciBpZiB5b3UgZ28gZm9yIGRyaW5rcyB3aXRoIGVzY29ydHMgYXQgdGhlIHRob3VzYW5kcyBvZiBkaXJ0eSBzIG9uIHRoZSByZWcsIGJlY2F1c2UgdGhhdCBndXlzIHRpbWUgYW5kIGl0IGJlaGluZCBjbG9zZWQgZG9vcnMuIApCYXJyYXVkIGhhcyBnYXRoZXJlZCBhIHdlYWx0aCBvZiBpbnRlcmVzdGluZyBpbmZvcm1hdGlvbiBhbmQgZmFjdHMgICBzb21lIHdlbGwga25vd24gYW5kIG90aGVycyBzdXJwcmlzaW5nICBhYm91dCB0aGUgY3JlZXB5IGNyYXdsaWVzIHRoYXQgaW5oYWJpdCBvdXIgZ2FyZGVucywgcGFpcmluZyB0aGVzZSB3aXRoIGhpcyBnb3JnZW91cyByZWFsaXN0aWMgYXJ0d29yayB0byBicmluZyB0aGUgaW5zZWN0cyB0byBsaWZlLi4gCkFmdGVyIHRoYXQgSSBkbyB0ZW5kIHRvIGdldCBsb25lbHkgYW5kIHdpbGwgd2FudCB0byBnbyBvdXQuLiAKVHdpdHRlciBoYXMgcmVtb3ZlZCBtYW55IHBlb3BsZSBmcm9tIG15IGFjY291bnQgYW5kLCBtb3JlIGltcG9ydGFudGx5LCB0aGV5IGhhdmUgc2VlbWluZ2x5IGRvbmUgc29tZXRoaW5nIHRoYXQgbWFrZXMgaXQgbXVjaCBoYXJkZXIgdG8gam9pbiAgIHRoZXkgaGF2ZSBzdGlmbGVkIGdyb3d0aCB0byBhIHBvaW50IHdoZXJlIGl0IGlzIG9idmlvdXMgdG8gYWxsLiBBIGZldyB3ZWVrcyBhZ28gaXQgd2FzIGEgUm9ja2V0IFNoaXAsIG5vdyBpdCBpcyBhIEJsaW1wISBUb3RhbCBCaWFzPwpJbiBNYXkgMjAxOCBteSBib3NzIHByb21vdGVkIG1lIHRvIHRlYWsgbGVhZCBhbmQgZ290IGEgcmFpc2UgdG8gNDVrLiBNeSAyMDE5IHJhaXNlIGp1c3QgY2FtZSBpbiBub3cgSSA0OGsgKyAxMiUgYm9udXMuLiAKQSBib2FyZCBvZiBlbGVjdGlvbnMgbWVtYmVyIHRoZW4gZHJldyBZYW5jZXkncyBuYW1lLCBhbmQgaGUgd2FzIGRlY2xhcmVkIHRoZSBuZXcgcmVwcmVzZW50YXRpdmUuLiAKJDEwIHN0cmFkZGxlIGlzIG9uLiAKSSB1c2VkIHRvIGZlZWwgdGhhdCBzb21ldGltZXMgd2hlbiBJIHdhcyBsZXNzIG9mIGEgaGFiaXR1YWwgc21va2VyLiBJdCBqdXN0IHRoZSBwYXJhbm9pYSBidXQgYmUgY2FyZWZ1bCwgY2F1c2UgdGhhdCBzaGl0IGNhbiBmZWVsIHNvIHJlYWwuIEkgd2F0Y2hlZCBhIGdvb2QgZnJpZW5kIHNtb2tlIGEgcCB0aGVuIGJlZyBoaXMgbW9tIHRvIGNhbGwgYW4gYW1idWxhbmNlIGNhdXNlIGhlIHdhcyBzdG9uZWQgYW5kIHRob3VnaHQgb3VyIHdlZWQgd2FzIGxhY2VkLiBJIHdhcyBhbHNvIHJlYWxseSBwYXJhbm9pZC9zY2FyZWQgYnV0IG5vdCBlbm91Z2ggdG8gYmUgYmVnZ2luZyBmb3IgYW4gYW1idWxhbmNlLiBIaXMgc3RlcGRhZCBlbmRlZCB1cCBzb3J0IG9mIGRpZmZ1c2luZyB0aGUgc2l0dWF0aW9uIGJ5IHNtb2tpbmcgYSBmdWxsIGdyYW0gb2Ygb3VyIHdlZWQgdG8gcHJvdmUgdG8gdXMgaXQgd2FzIGhhcm1sZXNzLgpJIGUgdHJhbnNmZXJyZWQgaXQgdG8gaGVyIGFuZCBuZXZlciBoZWFyZCBmcm9tIHRoZW0gYWdhaW4uLiAKVGhlIFJFIG1hcmtldCBpcyBzbyB2ZXJ5IGxvY2FsLCBvbmUgY2FuJ3QgcHJvdmlkZSBzb21lIGJsYW5rZXQgc3RhdGVtZW50IHRoYXQgIml0J3MiIGEgYnV5ZXIncyBvciBzZWxsZXJzIG1hcmtldC4gTlBSIGp1c3QgcHJvZmlsZWQgb25lIGxpdHRsZSBjb21tdW5pdHkgdGhlcmUgaW4gQXRsYW50YS4gCkluIENhbmFkYSwgcHVibGljIGhlYWx0aGNhcmUgaXMgZ29vZCBhbmQgYWxsIHVudGlsIHlvdSBoYXZlIHRvIHdhaXQgZm9yIHRoZSBkb2N0b3IgaW4gdGhlIGNsaW5pYy4gVHlwaWNhbGx5IEkgZXhwZWN0IHRvIHdhaXQgYXJvdW5kIDQwIG1pbnMgdG8gZ28gaW50byBhIGV4YW1pbmF0aW9uIHJvb20gYW5kIGV2ZW4gYW5vdGhlciAyMCBtaW5zIGluIHRoZSByb29tLiBJZiBJIGhhdmUgdG8gZ2V0IHVsdHJhc291bmQsIGdvdHRhIHdhaXQgYW5vdGhlciAyMCBtaW5zIHRvIGJvb2sgYW4gYXBwb2ludG1lbnQuIApCdXQgY2l0aWVzIGluY2x1ZGluZyBEYWxsYXMsIERlbnZlciBhbmQgTG9zIEFuZ2VsZXMgc2hvdWxkIGhhdmUgb3B0aW1hbCB2aWV3aW5nLiBOQVNBIHNhaWQgdGhlIGVudGlyZSBldmVudCBjYW4gYmUgdmlld2VkIGJ5IHBlb3BsZSBpbiB0aGUgQW1lcmljYXMsIHdoaWxlIG9ic2VydmVycyBpbiB0aGUgd2VzdGVybiBQYWNpZmljIHdpbGwgY2F0Y2ggdGhlIHNlY29uZCBoYWxmIG9mIHRoZSBldmVudC4KSWYgYWdncmVzc2l2ZSBoZSBjYW4gYmUgcHV0dGluZyBwcmVzc3VyZSBvbiB5b3Ugd2l0aCBBeCBRZCAoQWNlIHdpdGggdHVybmVkIGhpZ2ggZmx1c2ggZHJhdykuIApJdCB3YXMgcHJldHR5IHNpY2sgdG8gc2VlLiAKOikuIApTaG9wcGluZyBjaGFubmVsIFFWQy4gSXQgd2FzIG9uZSBvZiBpdHMgYmVzdCBzZWxsZXJzIGxhc3QgeWVhciwgYW5kIHdhcyBwaWNrZWQgdXAgYnkgVGhlIFNob3BwaW5nIENoYW5uZWwgaW4gQ2FuYWRhLiBJbiBvbmUgb2YgbGlmZSBjb2luY2lkZW5jZXMsIE1yLiAKTS4gR2lsYmVydHNlbiwgdm9sdW50ZWVycy4gQWRhbXMgICBUdWVzZGF5OyBEcnMuIApZb3UgY2FuIHZpZXcgdGhlIGVudGlyZSBOQ0FBIFRvdXJuYW1lbnQgYnJhY2tldCwgaW4gcHJpbnRhYmxlIGZvcm0sIGhlcmUuCkl0IHRvbyBtdWNoIGdvIGdvIGludG8gd2hhdCBJIHNlZW4gY28gd29ya2VycyBkby4gVGhvdWdoIGFmdGVyIDI0IG1vbnRocyBvZiBnZXR0aW5nIHRvIGtub3cgdGhvc2UgVExzLCB0aGV5IGRvbiBldmVuIGtub3cgd2hhdCBhIHdpbmRvdyBvZiB0b2xlcmFuY2UgaXMsIGhvd2V2ZXIgd2VsbCBpbnRlbnRpb25lZCB0aGV5IG1heSBiZS4gQW5kIHRoZXNlIGFyZSB0aGUgVExzIHdobyB0cmFpbmVkIGFzIG1lbnRhbCBoZWFsdGggZmlyc3QgYWlkIG9mZmljZXJzLi4gCkluIHRoZSBtb250aGx5IG1lZGFsLCB3aXRoIGZvdXJiYWxscyByYW1tZWQgb24gdGhlIGNvdXJzZSwgSSBub3QgZXhwZWN0aW5nIHRvIGZseSByb3VuZC4gCldlIHN0aWxsIGRvbiBrbm93IGlmIHRoZSBsaXF1b3IgY29udHJvbCBib2FyZCBpbiBPbnRhcmlvIG9yIGFueSBvZiB0aGUgcHJvdmluY2VzIHdpbGwgY2FycnkgaXQuIFNvIG11Y2ggY2hvaWNlIGF2YWlsYWJsZSwgTXIuIApJIGd1ZXNzIEkgd2FzIGJlaW5nIGEgYml0IGh5cGVyYm9saWMsIGl0J3Mgbm90IHRoYXQgbXkgZmFtaWx5IGFuZCBkb2N0b3IgdGhpbmsgaXQncyBhbGwgaW4gbXkgaGVhZC4gClRoZXkganVzdCBkbyBpdCBvZiBoYWJpdEFuZCwgdGhpcyBjb3N0cyBtZSB0byBhZG1pdCBpdCwgYnV0IEkgYWRtaXQgaXQ6IEkgZmVsdCBhIHR3aW5nZSBvZiBwaXR5LiBUaGVzZSB5b3VuZywgdGFsZW50ZWQgcGxheWVycywgYnkgYWxsIG1lYW5zIG1vcmUgYWNjb21wbGlzaGVkIGFuZCBzdWNjZXNzZnVsIHRoYW4gSSBldmVyIGJlLCBkZXZlbG9waW5nIHNwcmF5aW5nIGFzIGEgdGljLkkgcmVmdXNlIHRvIGJlbGlldmUgY2FuIGhlbHAgaXQgSSBkb24gYnV5IHRoZSBBUE0gZXhwbGFuYXRpb24gZWl0aGVyLCBpZiBhbnl0aGluZyBzcHJheWluZyBjb3VsZCBnZXQgaW4gdGhlIHdheSBvZiBzb21lIG90aGVyIGFjdGlvbiBpZiB3ZSBjb25zaWRlcmluZyB0aW55IGFkdmFudGFnZXMgc3RpbGwuIApZb3UgbmVlZCB0byBzaWduIHVwIGluaXRpYWxseSBhbmQgbGlrZSB0aGlzIHlvdSBjYW4gbWFrZSB1cCB0aGUgZnVuZGFtZW50YWxzIG9mIHRoZSBzb2Z0d2FyZSBhbG9uZyB1c2luZyBpdHMgdXNlLiBPbmNlIHlvdSBhcmUgZmVlbGluZyBhY3F1YWludGVkIHdpdGggdGhlIHVzYWdlIG9mIHNvZnR3YXJlIGFsb25nIHdpdGggdGhlIGdhbWUgeW91IGFyZSBhYmxlIHRvIGRlcG9zaXQgY2FzaCBhbmQgcGxheSBhcyBhIHJlYWwgcGxheWVyLiAKSm9pbmluZyBmb3JjZXMgd2l0aCBLYWxpZXNoYSwgc29tZSBzYXkgdGhhdCB0aGVzZSB0d28gbWF5IHZlcnkgd2VsbCBiZSB0aGUgbW9zdCBtdWx0aSBkaW1lbnNpb25hbCBib3hlcnMgdGhlIHNwb3J0IGhhcyBldmVyIHNlZW4uIFJlYWNoaW5nIG5ldyBsZXZlbHMgYW5kIGJyZWFraW5nIHRocm91Z2ggdGhlIGdsYXNzIHdhbGxzLCBpdCBpcyBDaHJpc3RpbmEncyBkZXRlcm1pbmF0aW9uIGFuZCB3aWxsaW5nbmVzcyB0byBwdXQgaXQgYWxsIG9uIHRoZSBsaW5lIHRoYXQgbWFrZXMgZXZlcnkgZWZmb3J0IGEgY29tbWl0dGVkIG9uZS4gU2hlIGNhbiBzdW0gaXQgdXAgaW4gdGhyZWUgd29yZHMsICJJJ20gYWxsIGluLiIuIApEb2VzbiBldmVuIEhBVkUgdG8gaGF2ZSBhbiBlZmZlY3QuIApIZSBsZWF2ZXMgaGlzIGRldm90ZWQgd2lmZSBvZiA0MyB5ZWFycywgU3lsdmlhIE1hcnRpbmV6IERhbG9pYTsgdHdvIGRhdWdodGVycywgS3Jpc3RpbmEgKEZyYW5rKSBEZWxpYSwgSmVzc2ljYSAoTWljaGFlbCkgRmF2YTsgaGlzIGJlbG92ZWQgc2lzdGVyLCBSb3Nhbm5lIChEYXZpZCkgQmF0dGFnbGlhOyBuZXBoZXcsIE1pY2hhZWwgYW5kIG5pZWNlLCBNYXJpc3NhIEJhdHRhZ2xpYTsgaGlzIHR3byBhZG9yZWQgZ3JhbmRjaGlsZHJlbiwgTG9yZW56byBKb3NlcGggYW5kIEdpYW5uYSBSb3NlIEZhdmEuIEFsbCB0aG9zZSB3aG8ga25ldyBoaW0sIGtub3cgaGUgaGFkIGEgYmlnIGhlYXJ0LCBmdWxsIG9mIGxhdWdodGVyIGFuZCBqb2tlcy4gSGUgbG92ZWQgdG8gd2F0Y2ggc3BvcnRzLCBwbGF5IHBva2VyIGFuZCBwaXRjaCwgYW5kIHdhcyBhbHdheXMgIk1yLiAKTm90IHBpY3R1cmVzIG9mIGEgc2tpbm55IGZhcm1lciwgYnV0IHBpY3R1cmVzIG9mIGR5aW5nIHBlb3BsZS4gTm90IHBpY3R1cmVzIG9mIGNyYXBweSBidWlsZGluZ3MsIGJ1dCBwaWN0dXJlcyBvZiBsYWJvciBjYW1wcy4gCkkga25ldyB0aGF0IEkgd2FzIGdvaW5nIHRvIGdvIGJyb2tlIHNvb24gaWYgSSBkaWRuIGZpbmQgc29tZSB3YXkgdG8gZ2V0IGJldHRlci4gCldlIHdlcmUgYWJsZSB0byBlbGltaW5hdGUgcG9saXRpY2FsIGVuZW1pZXMsICIgRGV0ZWN0aXZlIFNjb3R0IER1ZGVrIGV4cGxhaW5lZC4gIkl0IGp1c3QgY29uc3RhbnRseSB3b3VsZCBjb21lIGJhY2sgdG8gd2UgY291bGRuJ3QgZWxpbWluYXRlIHRoZWlyIHNvbi4gIiBJbnZlc3RpZ2F0b3JzIGJlZ2FuIHRvIGZvY3VzIGluIG9uIEVybmVzdCBhbmQgQ2hhcmxlbmUgU2NoZXJlcidzIHNvbiwgRXJuaWUsIHdobyB0cmF2ZWxlZCB0aGUgY291bnRyeSBhcyBhIHByb2Zlc3Npb25hbCBwb2tlciBwbGF5ZXIuIApCb3RoIHRpbWVzIEkgc2VlbiBCaWdmb290IGNvaW5jaWRlZCB3aXRoIHRoZSBodWdlIGZsb2NrcyBvZiBzaGVlcCBiZWluZyBtb3ZlZCBhcm91bmQgaW50byBzb21lIHJlbW90ZSBncmF6aW5nIGFyZWFzLiBUaGUgc2hlZXAgaGVyZGVycyB0ZW5kIHRvIGlnbm9yZSBpbmp1cmVkIGFuaW1hbHMgYW5kIGxlYXZlIHRoZW0gYmVoaW5kIGFzIHRoZSBmbG9jayBtb3ZlcyBvbi4gU2V2ZXJhbCB0aW1lcyBJIGNvbWUgYWNyb3NzIGxvbmUgc2hlZXAgbGltcGluZyBhcm91bmQgb3V0IGluIHRoZSBoaWdoIGNvdW50cnkgKFdlc3Rlcm4gQ29sb3JhZG8pIHNjcmVhbWluZyBhbmQgZHJhd2luZyBhdHRlbnRpb24gdG8gdGhlaXIgcGxpZ2h0LiAKT2ssIG9uZSB0aXA7IHRoZSBiYXNpcyBmb3IgZXZlcnl0aGluZyBlbHNlIGluIHBva2VyIGlzIG1hdGguIFlvdSBuZWVkIHRvIGJlIGFibGUgdG8gcXVpY2tseSBjYWxjdWxhdGUgaW4geW91ciBoZWFkIHRoZSBsaWtlbHkgb2RkcyBvZiB5b3VyIGhhbmQgd2lubmluZyB0aGUgcG90LiAKT2gsIGxvb2tzIGxpa2UgdGhleSB1c2luZyB0aGUgb2xkIHNjaG9vbCBtZXRob2Qgb2YganVzdCBzaG92aW5nIGV2ZXJ5b25lIGludG8gMSBzZXNzaW9uIHdpdGggYSBidW5jaCBvZiBmbGlnaHRzIGFuZCB0YWtpbmcgYWxsIGRheS4gQSBsb3Qgb2YgbWVldCBkaXJlY3RvcnMgdGhlc2UgZGF5cyBzcGxpdCB0aGUgZGF5IHVwIGludG8gMiBzZXNzaW9ucyB3aXRoIGEgMSBob3VyIGJyZWFrIGluIGJldHdlZW4uIFNvIHRoZW4gZWFjaCBzZXNzaW9uIGlzIHR5cGljYWxseSBqdXN0IDIgZmxpZ2h0cyBhbmQgdGFrZXMgMyA0IGhvdXJzLiBUaGF0IGdldHMgdGhlIGxpZnRlcnMgb3V0IGVhcmxpZXIsIGdpdmVzIHZvbHVudGVlcnMgYSBicmVhayBmb3IgbHVuY2ggYW5kIGNhbiBldmVuIHN3aXRjaCBvdXQgdm9sdW50ZWVycyBmb3IgdGhlIDJuZCBzZXNzaW9uLiAxIHBvaW50ICBzdWJtaXR0ZWQgMTIgZGF5cyBhZ28KSSBiZWdhbiBwbGF5aW5nIG9ubGluZSBwb2tlciBvbiBGZWJydWFyeSAyMDA2IGFuZCBoYXZlIGJlZW4gZG9pbmcgc28gZXZlciBzaW5jZS4gCkhhZ2VuIHBhcmVudHMgbG9hbmVkIGhpbSB0aGUgZmFtaWx5IFZXICJDYWRkeSIgZm9yIG91ciByb2FkdHJpcCBhcm91bmQgR2VybWFueSBhbmQgQXVzdHJpYSwgd2hpY2ggd2FzIGFtYXppbmcuIHdhcyBzcGFjaW91cyBhbmQgYmVjYXVzZSBpdCB3YXMgYSBkaWVzZWwsIHdlIGdvdCBncmVhdCBtaWxlYWdlIHRoZSBlbnRpcmUgdGltZS4gY2FuIGJlIGEgYml0IHBhcnRpY3VsYXIgYW5kIHNwcmVhZCBhIGJsYW5rZXQgb24gdGhlIGJhY2tzZWF0LCB0aGVvcmV0aWNhbGx5IHNvIHdlIHdvdWxkIGJlIG1vcmUgY29tZm9ydGFibGUgYWx0aG91Z2ggSSB0aGluayBpdCB3YXMgbW9yZSBzbyB3ZSB3b3VsZG4gZ2V0IGl0IGRpcnR5LiBmZWx0IGxpa2Ugd2Ugd2VyZSBkb2dzIGFuZCBrZXB0IHJlZmVycmluZyB0byBpdCBhcyAidGhlIGRvZyBibGFua2V0Ii4gd2l0aCBIYWdlbiBjaGlsZGhvb2QgZnJpZW5kIE1hcmN1cyBhbmQgU2FiaW5lLCB3ZSBsb2FkZWQgdXAgYW5kIGRyb3ZlIHRvIEFscGJhY2gsIEF1c3RyaWEuIEFscGJhY2ggaXMgdGhpcyBnb3JnZW91cyBtb3VudGFpbiB2aWxsYWdlIGluIHRoZSBBbHBzIHdoZXJlIElyZW5lIGlzIGZyb20uCk1vdmUgb3V0LiBHZXQgcm9vbW1hdGVzLiAKU2hlJ3MgcmVjZW50bHkgcmVhY2hlZCBvdXQgdG8gYXBvbG9naXplLCBidXQgdGhlIGxldHRlciB3YXMgbm90IGEgc2luY2VyZSBhcG9sb2d5LiBNb3JlIG9mIGEgIkknbSBzb3JyeSB5b3VyIHVwc2V0IiB0eXBlIG9mIGFwb2xvZ3kgd2l0aCBhIGxvdCBvZiB2aWN0aW0gY29tcGxleCB0aHJvd24gaW4gdGhlcmUsIHNvIEkgd29uJ3QgZW5nYWdlIGFzIHNoZSBjbGVhcmx5IGhhcyBub3QgY2hhbmdlZC4KTHVja2lseSBmb3IgbWUgYW5kIG15IHNpc3RlcnMsIGFzIGhhbGYgQXNpYW4gZ2lybHMsIHdlIGhhdmUgaXQgZWFzeSBhbmQgYXJlIGRpdmVyc2UgZnJvbSB0aGUgZ2V0IGdvLCBzbyBtdWx0aXBsZSBpZGVudGl0aWVzIGFyZSBub3QgcHJvYmxlbWF0aWMgYW5kIGFyZSBub3QgY29uc3RydWN0ZWQgb3IgcHJlIG1lZGl0YXRlZCAgdGhleSBqdXN0IGFyZS4uIApDb250YWN0IFNhbmRyYSBhdCA3NTcuNTM0LjgwNTYgb3IgW2VtYWlsClNpbXBzb24gZG9taW5hbmRvIGEgbm90Y2lhPyBHZW9yZ2UgQnVzaCBlc3QgdGVudGFuZG8gcHJvdm9jYXIgbyBBcG9jYWxpcHNlIGUgY2FwdHVyYSBvIG11bmRvIHBhcmEgbyBjcmlzdGlhbmlzbW8sIHBhcmEgcXVlIGVsZSBwb3NzYSBhdGVuZGVyIGEgSmVzdXMgQ3Jpc3RvIGVtIEplcnVzYWxtICAgZmFsYXIgc29icmUgYWxwaW5pc3RhcyBzb2NpYWlzLiAKVGhlIExpYmVyYWwgRGVtb2NyYXRzIGluIEJyaXRhaW4gYXJlIHRha2luZyBhaW0gYXQgYWR2ZXJ0aXNlcnMgd2hvIGFpcmJydXNoIHBob3RvcyB0byBhIHBlcmZlY3Rpb24gdW5hdHRhaW5hYmxlIGluIHRoZSB3b3JsZCBvZiByZWFsIGJvZGllcy4gCkdhbWUgaXMgb25lIG9mIHB1cmUgY2hhbmNlLCB3aXRoIGNhcmRzIGRlbGl2ZXJlZCBlbnRpcmVseSBhdCByYW5kb20gYW5kIHVua25vd2FibGUgYnkgdGhlIFtwbGF5ZXJdIG9yIHRoZSBob3VzZSwgcmVhZCB0aGUgb3Bpbmlvbi4gTXIuIApXYWxtYXJ0IGFuZCBUYXJnZXQgbGlrZWx5IG1ha2UgdXAgdGhlIGxpb24gc2hhcmUgb2YgdGhlIGxvc3QgY3VzdG9tZXIgYmFzZSBmcm9tIEdhcCBhbmQgSkNQZW5uZXkgICBib3RoIHJldGFpbGVycyBoYXZlIGxhcmdlLCBjaGVhcCBjbG90aGluZyBkZXBhcnRtZW50cyB0aGF0IHJvdWdobHkgdGFyZ2V0IHRoZSBzYW1lIGRlbW9ncmFwaGljIHdobyB3b3VsZCBiZSBidXlpbmcgZnJvbSBHYXAgYW5kIEpDUGVubmV5LgpTaWRlIE5vdGU6IEJ1eSBmcm9tIHJlcHV0YWJsZSBjb21wYW5pZXMhIEl0IGRvZXNuJ3QgcGF5IHRvIGZpbmQgdGhlIGNoZWFwZXN0IGZpc2ggb2lscHJvZHVjdHMuIFlvdSB3b3VsZG4ndCBzaG9wIGZvciBjaGVhcGVzdCBoZWFydCBzdXJnZW9uIGZvciBhIGxvdmVkIG9uZSB3b3VsZCB5b3U/IFJlYWQgdGhpcyBsaW5rIG9uIGZpc2ggb2lsIGxhd3N1aXQgaW4gMjAxMC4gClRoZSBiYW50ZXIgc2VlbXMgZ2VudWluZSwgdXAgdG8gYW5kIGluY2x1ZGluZyB0aGUgaW1wb3J0YW5jZSBvZiB0aGUgbmFtZXMgb2YgYW5pbWFscyB0aGV5IGJldCBvbiAobXVjaCBkZXBlbmRzIG9uIHRoZWlyIHJlbGF0aW9uIHRvIGEgcGFydGljdWxhcmx5IGJlYXV0aWZ1bCByYWluYm93IHRoZSB0d28gc2F3IG9uIHRoZSBkYXkgdGhleSBtZXQpLi4gCkkgZG8gaG9wZSB0aG91Z2ggdGhhdCB3ZSBjYW4gc2VwYXJhdGUgb25saW5lIHBva2VyIGZyb20gdGhlIGxhdy4gCklmIHlvdSBhcmUgdGFsa2luZyBhYm91dCBvdGhlciBwbGF5ZXJzIG9uIHRoZSB0YWJsZSwgaXQgZG9lcyBub3QgbWF0dGVyLCBpbiBUaHJlZSBDYXJkIFBva2VyIHRoZSBwbGF5ZXJzIHBsYXkgYWdhaW5zdCB0aGUgZGVhbGVyIGFuZCBub3QgZWFjaCBvdGhlci4gClRoaW5rIG9mIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdXNpbmcgYSBiYXIgYW5kIHVzaW5nIGR1bWJiZWxscy4gRHVtYmJlbGxzIGFyZSBtb3JlIGRpZmZpY3VsdCB0byBjb250cm9sLCBiZWNhdXNlIHlvdSBoYXZlIHRvIGNvbnRyb2wgdGhlaXIgbW92ZW1lbnQgaW4gYWxsIGRpcmVjdGlvbnMuIAoiV2Ugd2VyZSBsb29raW5nIHRvIGNyZWF0ZSBhIGxhcmdlLCBvdXQgb2YgdGhlIGJveCBwcm9tb3Rpb24gdGhhdCB3YXMgdW5pcXVlIG5vdCBvbmx5IHRvIFR1bmljYSwgYnV0IGFsc28gdG8gdGhlIGdhbWluZyBpbmR1c3RyeSBhcyBhIHdob2xlLCIgc2FpZCBKZXNzZSBLZWF2ZW55LCBDYWVzYXJzIHJlZ2lvbmFsIHZpY2UgcHJlc2lkZW50IG9mIG1hcmtldGluZyBmb3IgdGhlIE1pZCBTb3V0aCByZWdpb24uICJXZSd2ZSBiZWVuIHJlYWxseSBwbGVhc2VkIHdpdGggdGhlIHJlc3BvbnNlIGl0IGhhcyBnb3R0ZW4uIFRoZXJlIGhhdmVuJ3QgYmVlbiBtYW55IG5ldyBhbmQgZXhjaXRpbmcgdGhpbmdzIGluIFR1bmljYSByZWNlbnRseSwgc28gd2Ugd2FudGVkIHRvIGJlIHRoZSBtYXJrZXQgbGVhZGVyIGluIHRoYXQgcmVzcGVjdC4iLiAKSGUgd2lucyBtaWxsaW9ucyBvbmxpbmUuIApBbiBkZXIgUmV6ZXB0aW9uOiBQZXJmZWt0aW9uIHB1ci4gClRha2UgdGhlIG1pYnIgVlMgYXN0cmFsaXMgc2VtaSBmaW5hbC4gT3ZlcnBhc3Mgd2FzIGluY3JlZGlibHkgZXhjaXRpbmcsIHdoaWxlIGluZmVybm8gd2FzIGJvcmluZyBhcyBmdWNrLiBJdHMgYmVjYXVzZSBvbiBvdmVycGFzcyB0aGUgQnJhemlsaWFucyBhcmUgYXQgYSBzaW1pbGFyIGxldmVsIHRvIGFzdHJhbGlzLCB3aGlsZSB0aGV5IGRvbiBnZXQgZXZlbiBjbG9zZSB0byB0aGVtIG9uIGluZmVybm8uClRoZXJlIGFyZSBhIG51bWJlciBvZiB3ZWJzaXRlcyBvbiB0aGUgaW50ZXJuZXQgd2hpY2ggaGF2ZSBob3N0ZWQgZnJlZSBvbmxpbmUgY2FzaW5vIHRvdXJuYW1lbnRzIGFuZCB0aGV5IGFyZSBxdWl0ZSBmYW1vdXMgYW1vbmcgY2FzaW5vIGxvdmVycyBhbmQgb25saW5lIHBsYXllcnMuIFRoZSBiZXN0IHdheSB0byBzZWFyY2ggZm9yIG9ubGluZSBmcmVlIGNhc2lubyB0b3VybmFtZW50cyBpcyB0byB2aXNpdCB0aGVzZSB2YXJpb3VzIHdlYnNpdGVzIGFuZCBsb29rIHVwIGZvciBhbnkgY3VycmVudCB0b3VybmFtZW50cyBnb2luZyBvbi4uIApQUzogVGhlIGNvbnN0aXR1dGlvbiBkb2VzbiBhcHBseSB0byBhcmVhcyBvdXRzaWRlIG9mIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCBVdGFoIHdhc24gcGFydCBvZiB0aGUgVW5pdGVkIFN0YXRlcyB1bnRpbCB0aGUgcG9seWdhbWlzdHMgaGFkIGJlZW4gb3V0bGF3ZWQuIFRoZXJlIHdhcyBubyBjb25jZXB0IG9mIHNlcGFyYXRpb24gb2YgY2h1cmNoIGFuZCBzdGF0ZSBpbiB0aGUgVXRhaCB0ZXJyaXRvcnkgYmVjYXVzZSB0aGV5IGRpZG4gZm9sbG93IHRob3NlIHJ1bGVzLiBVdGFoIHdhcyBhIHN0cmFpZ2h0IHVwIGRpZmZlcmVudCBuYXRpb24gd2l0aCB0aGVpciBvd24gbGF3cyBhbmQgb3duIGFybXkgYW5kIGNvbnN0YW50bHkgb24gdGhlIHZlcmdlIG9mIHdhciB3aXRoIHRoZSBVU0EgdGhyb3VnaG91dCB0aGUgMTgwMHMuLiAKWmhlYXR3YXZleiAgNTcgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ28KVGhleSBsb29rIGZhbmNpZXIgYnV0IEkgYmVsaWV2ZSB0aGV5IGRvIHRoZSBleGFjdCBzYW1lIHRoaW5nLCBhbmQgdGhleSBtdXN0IGJlIG1ha2luZyBhIG1hc3NpdmUgYW1vdW50IG9mIG1vbmV5IG9uIHRoZXNlIHBhbmVscyB3aGljaCBvbmx5IGhhdmUgYSB0d28geWVhciB3YXJyYW50eSBvbiB0aGVtLiAKSSBzbyBzb3JyeSB0byBoZWFyIGFib3V0IHRoZSBsb3NzIG9mIHlvdXIgZGF1Z2h0ZXIuIEkgY2FuIGltYWdpbmUgbG9zaW5nIGEgY2hpbGQuIEFuZCBnb29kIGZvciB5b3UgZm9yIHRoZSBzdHJlbmd0aCB0byBub3QgZHJpbmsgICBpdCB3b24gaGVscCB5b3Ugb3ZlcmNvbWUgeW91ciBncmllZi4gCkluIEphbnVhcnksIDU2JSBvZiBBbWVyaWNhbnMgdGhvdWdodCB3ZSB3ZXJlIGJldHRlciBvZmYgd2l0aCB0aGUgRGVtb2NyYXRzIGluIGNoYXJnZSBvZiBDb25ncmVzcywgbm93IGl0IG9ubHkgNDklLiAKSm1vc2V5ICAyIHBvaW50cyAgc3VibWl0dGVkIDE4IGhvdXJzIGFnbwpUaGUgdHJpY2sgaXMgZm9yIGVhY2ggb2YgdXMgdG8gbGVhcm4gdG8gdXNlIGJvdGggZW5lcmdpZXMgc28gdGhhdCBvbmUgZW5lcmd5IGNhbiBtaXRpZ2F0ZSB0aGUgb3RoZXIsIHByZXZlbnRpbmcgbmVpdGhlciBmcm9tIGdldHRpbmcgb3V0IG9mIHdoYWNrLiBUbyBwbGF5IGFsbCB0aGUgY2FyZHMgaW4gb3VyIGhhbmQgd2UgaGF2ZSB0byBzdGFydCBieSB1bmRlcnN0YW5kaW5nIHRoZSBwb3dlciBvZiBib3RoIGVuZXJnaWVzLiBXZSBhbHNvIG5lZWQgdG8gYmUgYXdhcmUgb2Ygb3VyIG5hdHVyYWwgaW5jbGluYXRpb24gICB3aGVyZSB3ZSBmZWVsIHRoZSBtb3N0IGNvbWZvcnRhYmxlLiBUaGF0J3MgdGhlIGZpcnN0IFN0aWxsZXR0byBTdGVwIG9mIFNlbGYgQXdhcmVuZXNzLiBUaGVuIGl0J3MgaW1wb3J0YW50IHRvIHRha2UgdGhlIHNlY29uZCBTdGlsbGV0dG8gU3RlcCBhbmQgYWNjZXB0IHRoZSBjaGFyYWN0ZXJpc3RpY3Mgb2YgZWFjaCBlbmVyZ3kgd2l0aG91dCBsYWJlbGluZyBvbmUgInJpZ2h0IiBhbmQgdGhlIG90aGVyICJ3cm9uZy4iIEJ5IGFjY2VwdGluZyB0aGF0IGJvdGggaGF2ZSB2YWx1ZSwgd2UgY2FuIGNvbnNjaW91c2x5ICJ0cnkgdGhlIG90aGVyIGVuZXJneSBvbiBmb3Igc2l6ZS4iIEp1c3QgbGlrZSBhdCB0aGUgcG9rZXIgdGFibGUsIGNoYW5naW5nIHlvdXIgcGF0dGVybiBvZiByYWlzZXMgYW5kIGJldHMgaW5jcmVhc2VzIHRoZSBvcHBvcnR1bml0aWVzIGZvciB0aGUgY2FyZHMgaW4geW91ciBoYW5kLgpKb2huc29uIHNhaWQgdGhlIG9yaWdpbmFsIHR1bmVzIHRvdWNoIG9uIHRoZSBzYW1lIHRoZW1lcyBzaGUgYWx3YXlzIHdyaXR0ZW4gYWJvdXQsIGNoYW5nZSBpcyBoYXJkLCBidXQgbmVjZXNzYXJ5IGFuZCBjb3VyYWdlIGlzIHNvbWV0aGluZyB3ZSBhbGwgaGF2ZS4gSW4gMTk1OSwgSm9obnNvbiBoYXMgYmVlbiBvbiB0aGUgZW50ZXJ0YWlubWVudCBzY2VuZSBzaW5jZSBzaGUgd2FzIGEgY2hpbGQsIHBlcmZvcm1pbmcgaW4gUG9yZ3kgYW5kIEJlc3MgYXQgdGhlIFJveWFsIEFsZXhhbmRyYSBUaGVhdHJlLCBTb3V0aCBQYWNpZmljLCBGaW5pYW4gUmFpbmJvdyBhbmQgb3RoZXIgbXVzaWNhbHMuIFNoZSBzdHVkaWVkIGF0IHRoZSBOYXRpb25hbCBCYWxsZXQgU2Nob29sIGFuZCB0aGUgQmFuZmYgQ2VudHJlIGZvciBBcnRzIGFuZCBDcmVhdGl2aXR5ICh0aGVuIHRoZSBCYW5mZiBTY2hvb2wgb2YgRmluZSBBcnRzLikgVGhlbiwgbXVzaWMgYW5kIHNvbmd3cml0aW5nIGNhcHR1cmVkIGhlciBpbWFnaW5hdGlvbiBhbmQgYnkgMTUgc2hlIHdhcyBwZXJmb3JtaW5nIGluIGJhbmRzLi4gCldlbGwsIGl0IGhvdyBhIHNvY2lldHkgZnVuY3Rpb25zIGFuZCBob3cgZ292ZXJubWVudCByZWd1bGFyaXplcyBpdCBpbnRlcmZhY2VzIHRvIGJlbmVmaXQgY29tbWVyY2UuIApLZWxseSBvbiByZWNlbnQgcG9zdCBiYWlsIE1jRG9uYWxkJ3MgcnVuIkRhZGR5LCBubyEiIE1hbiBjb25mZXNzZXMga2lsbGluZyBmYW1pbHkgaW4gZGlzdHVyYmluZyBhY2NvdW50Q2hlbHNlYSBNYW5uaW5nIGphaWxlZCBmb3IgcmVmdXNpbmcgdG8gdGVzdGlmeSBvbiBXaWtpTGVha3MuIApJIHJlbWVtYmVyZWQgdGhhdCBpdCB3YXMgT2N0b2JlciB0aGUgMzFzdCwgSGFsbG93ZWVuLCBhbmQgdGhhdCwgYWNyb3NzIEF1Y2tsYW5kIGFuZCB0aGUgb3RoZXIgY2l0aWVzIG9mIE5ldyBaZWFsYW5kLCBncm91cHMgb2Yga2lkcyB3ZXJlIGh1cnJ5aW5nIHVwIGFuZCBkb3duIHN0cmVldHMgcG91bmRpbmcgb24gZG9vcnMsIGxpa2UgSmVob3ZhaCdzIFdpdG5lc3NlcyBvciBkZXNwZXJhdGUgaW5zdXJhbmNlIHNhbGVzbWVuLiBJIHlhd25lZCBhZ2FpbiBhbmQgd2FuZGVyZWQgaW5zaWRlIHRvIGxvb2sgZm9yIHNvbWUgY2hvY29sYXRlIGluIHRoZSBmcmlkZ2UuSW4gTmV3IFplYWxhbmQgYW5kIGluIG1hbnkgb3RoZXIgV2VzdGVybiBuYXRpb25zLCB2YW1waXJlcyBhcmUgaW4gZmFzaGlvbi4gTW92aWVzIGxpa2UgdGhlIFR3aWxpZ2h0IFNhZ2EsIHRlbGV2aXNpb24gc2VyaWVzIGxpa2UgVmFuIEhlbHNpbmcgYW5kIFByZWFjaGVyLCBhbmQgYSBzbG91Z2ggaGVhcCBvZiBub3ZlbHMgYWxsIGRlc2NyaWJlIHRoZSBkcmVzcywgZGlldCwgYW5kIHNvY2lhbCBjb2RlcyBvZiB0aGUgY3JlYXR1cmVzLiAKSXQgdGhlIHVzZSBvZiBVUyB0YXhkb2xsYXJzIHRvIGtlZXAgaXRzZWxmIG9uIHRvcCBhbmQgdGhlbiB1c2luZyB0aGUgcHJvZml0cyBmcm9tIHRob3NlIHRheCBkb2xsYXJzIHRvIHBheSBldmVuIGJpZ2dlciBzYWxhcmllcyB0byB0aGUgR29sZG1hbiBTYWNocyBiYW5rZXJzIHRoYXQgbWFrZXMgdGhlIE9iYW1hIGJhaWxvdXQgbG9vayBsaWtlIGEgYmFpbG91dCBmb3IgYmFua2VycyBhbmQgbm90IHRoZSBwZW9wbGUuIEl0IGlzIGFsc28gd2h5IE1hdHQgVGFpYmJpIHJlZmVycmVkIHRvIEdvbGRtYW4gU2FjaHMgYXMuIApJdCBkb2VzbiBmaXQgYmVjYXVzZSB5b3UganVzdCBmb3VuZCBmb290cHJpbnRzIGluIHRoZSBzbm93LiBOb3RoaW5nIGFjdHVhbGx5IGhhcHBlbmVkIHRvIHlvdS4gCkdob3N0aW5nIGhhcyBiZWVuIGEgdGhpbmcgc2luY2UgdGhlIGJlZ2lubmluZyBvZiB0aW1lLiBUaGlzIHN1YnJlZGRpdCBpcyBub3QgYSBjcm9zcyBzZWN0aW9uIG9mIHRoZSBhdmVyYWdlIHBvcHVsYXRpb24uIFRoaXMgc3ViIHJlZGRpdCBpcyBhIGNvbGxlY3Rpb24gb2Ygc2FkIHBlb3BsZSB3aG8gbWFrZSBiYWQgZGVjaXNpb25zIGFuZCB3b3VsZCByYXRoZXIgYXNrIGZvciBoZWxwIGZvcm0gY29tcGxldGVseSB1bnF1YWxpZmllZCBzdHJhbmdlcnMgdGhlbiBnZXQgYWN0dWFsIGhlbHAgdGhhdCB3b3VsZCByZXF1aXJlIHRoZW0gdG8gcHV0IGluIGVmZm9ydC5pZmVlZWxzb2R1bWIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ29JIHBvc3QgdGhpcyBub3QgZnJvbSB3aGF0IEkgb2JzZXJ2ZSBvbiB0aGlzIHN1YnJlZGRpdC4gCklmIHlvdXIgb3Bwb25lbnQgYmV0cyByYWlzZSBoaW0uIElmIHlvdXIgb3Bwb25lbnQgZm9sZHMgeW91IHdpbGwgd2luIGl0IHRoZXJlIGFuZCB0aGVuIGlmIGhlIGRvZXNuJ3QgeW91IHdpbGwgc3RpbGwgaGF2ZSBhIGNoYW5jZSB0byB3aW4gaXQgb24gYSBsYXRlciBzdHJlZXQuIApFYXJsaWVyIGJsb2dzIGhhdmUgY29tZSBmcm9tIFJvYmVydCBQZWF0IGF0IHRoZSBDYXJlIEluc3BlY3RvcmF0ZSBhbmQgSmFuZSBEZXZpbmUgYXQgU29jaWFsIFdvcmsgU2NvdGxhbmQgICBhbmQgdGhpcyB3ZWVrJ3MgZ3Vlc3QgYmxvZyBpcyBmcm9tIEFubmEgRm93bGllLCBDaGllZiBFeGVjdXRpdmUgb2YgdGhlIFNjb3R0aXNoIFNvY2lhbCBTZXJ2aWNlcyBDb3VuY2lsIChTU1NDKS4uIApBbW9uZyBhbGwgdGhlIHBva2VyIGNvbGxlY3RpYmxlcyB3aGljaCBhcmUgb24gdGhlIHRvcCBvZiB0aGUgYXR0cmFjdGlvbiBpcyBkZWZpbml0ZWx5IHRoZSBwb2tlciBjYXJkIGNvdmVycyBhbmQgZ2VuZXJpYyBwcm90ZWN0b3JzLiAKU2luY2UgMjAxMSB0aGUgdHdvIGZvcm1lciB3YXIgZm9lcyBoYXZlIGJlZW4gaW4gYSBFVSBmYWNpbGl0YXRlZCBkaWFsb2d1ZSwgYWltaW5nIGF0IHJlc29sdmluZyB0aGUgbG9uZyBzdGFuZGluZyBCYWxrYW4gZGlzcHV0ZS4gQnJ1c3NlbHMgaGFzIHRvbGQgYm90aCBjb3VudHJpZXMgdGhleSBtdXN0IG5vcm1hbGl6ZSB0aGVpciB0aWVzIGJlZm9yZSB0aGV5IGNhbiBob3BlIHRvIGpvaW4gdGhlIGJsb2MuCkRhbCAyMDA5IGhhIGluc2VnbmF0byBpbCBtZXRvZG8geW9nYSAicmFqYWRpcmF5YSIgYSBjZW50aW5haWEgZGkgYWxsaWV2aSBwcmVzc28gc3RydXR0dXJlIHByaXZhdGUgZGkgVHJhbmkgQmFybGV0dGEgQmlzY2VnbGllIGUgUnV2bwpPdXIgZ29hbCBpcyB0byBwYWNrIGFsbCBVQ0xBIGhhcyB0byBvZmZlciBpbnRvIG9uZSBzcGlyaXRlZCBhbmQgdW5mb3JnZXR0YWJsZSBkYXkuIFZvbHUuLiAKIldlIGRlYWx0IHdpdGggdGhhdCBkZWF0aCBvbiAnU2VzYW1lIFN0cmVldCwnIGJ1dCBpbiBhIHN3ZWV0IHdheS4gSSBhbHdheXMgdGhvdWdodCB3aGVuIHdlIHdlcmUgbWFraW5nIGl0IGl0IHdvdWxkIGJlIGdvb2QgdG8gaGF2ZSBwZW9wbGUgdW5kZXJzdGFuZCB3aG8gQmlnIEJpcmQgaXMgYW5kIGhvdyBoZSdkIHRyeSB0byB1bmRlcnN0YW5kIHdoYXQgZGVhdGggd2FzLiIgRm9yIHRoZSBmaXJzdCB0aW1lIGR1cmluZyB0aGUgaW50ZXJ2aWV3IGhlIHNsaXBwZWQgaW50byB0aGUgQmlnIEJpcmQgdm9pY2UsIGZsYXdsZXNzbHkgdGFsa2luZyBhYm91dCB0aGUgZGVhdGggb2YgTXIuIApJcyBhcm15IGFjdGlvbiBhZ2FpbnN0IGdlbmVyYWxzIGEgd2FybmluZyB0byBwb2xpdGljaWFucz8KVGhlIHBsYXllciBnaXZlbiB0aGUgdHVybiBpcyB0aGUgb25lIHdpdGggdGhlIGhpZ2hlc3QgY2FyZC4gSWYgdGhlIHBsYXllciBoYXMgYSBwYWlyIGluIGhpcyBoYW5kLCB0aGVuIHRoZSBiZXQgd2lsbCBiZSBzbWFsbC4gSWYgcGxheWVycyBvbiB0aGF0IHRhYmxlIGhhdmUgYSBwYWlyLCB0aGVuIHRoZSB0YWJsZSBpcyBvcGVuIGZvciBhIGJpZyBiZXQgd2hpY2ggZXF1YWxzIFVTJDQgaW4gYSAyLzQgZ2FtZS4KIlRoZSBzdHJlc3MgaXMganVzdCBlYXRpbmcgcGVvcGxlIHVwIHJpZ2h0IG5vdywiIHNheXMgRGF2aWQgR3JlZW4sIHByZXNpZGVudCBvZiBVbml0ZWQgQXV0byBXb3JrZXJzIExvY2FsIDExMTIsIHdoaWNoIHJlcHJlc2VudHMgd29ya2VycyBhdCB0aGUgcGxhbnQuIApUcnVtcCBtYWRlIGl0IGNsZWFyIHRoYXQgaGUgd2FudHMgd2FsbCBmdW5kaW5nIGFzIGEgcmVzcG9uc2UgdG8gcGVyY2VpdmVkIGJvYXJkZXIgc2VjdXJpdHkgaXNzdWVzLiAKVHdvIHllYXJzIGFnbywgd2hlbiBhIGJ1bmNoIG9mIHVzIHdlcmUgaW4gY29sbGVnZSwgd2UgaGFkIHB1cmNoYXNlZCBwb2tlciBjaGlwcy4gCkxBUyBWRUdBUyAoQVApIFBlcmhhcHMgeW91IHdlcmVuIHN1cmUgb3IgZGlkbiBjYXJlIGlmIEdpc2VsZSBCdW5kY2hlbiBodXNiYW5kIGFuZCB0aGUgTmV3IEVuZ2xhbmQgUGF0cmlvdHMgd29uIHRoZSBTdXBlciBCb3dsIHRoaXMgbW9udGguIEJ1dCB5b3Uga25vdyB3aHkgIlRoZSBGYXZvdXJpdGUiIGlzIGEgZmF2b3JpdGUgdG8gd2luIGFuIE9zY2FyIGZvciBiZXN0IGNvc3R1bWUgZGVzaWduIGFuZCB5b3Ugd2lsbGluZyB0byBiZXQgb24gTGFkeSBHYWdhIHNuYWdnaW5nIHNvbWUgaGFyZHdhcmUgZm9yIGhlciBwZXJmb3JtYW5jZSBpbiAiQSBTdGFyIGlzIEJvcm4uIgpUaGlzIGdpdmVzIHlvdSB0aGUgc3BhY2UgdG8gcmVmaW5lIGFuZCBhZGp1c3QsIGJhc2VkIG9uIHRoZSBzcGVjaWZpYyBudWFuY2Ugb2YgR01BQyB0ZXN0aW5nIHN0eWxlLiBUaGVuIHlvdSBjYW4gc3R1ZHkgYWdhaW4sIGFuZCB0YWtlIHlvdXIgb3RoZXIgZnJlZSB0ZXN0LgpUaGlzIGlzIGEgbW9kZXJhdGVkIHN1YnJlZGRpdC4gSWYgeW91IGxvb2tpbmcgZm9yIGhlbHAgd2l0aCBhIHBlcnNvbmFsIGJvb2sgcmVjb21tZW5kYXRpb24sIGNvbnN1bHQgb3VyIFN1Z2dlc3RlZCBSZWFkaW5nIHBhZ2Ugb3IgYXNrIGluOiAvci9zdWdnZXN0bWVhYm9va1Byb21vdGlvbmFsIHBvc3RzLCBjb21tZW50cyBmbGFpcnMsIG1lZGlhIG9ubHkgcG9zdHMsIHBlcnNvbmFsIHJlY29tbWVuZGF0aW9uIHJlcXVlc3RzIGluY2wuICdTaG91bGQgSSByZWFkID8nLCAnV2hhdCdzIHRoYXQgYm9vaz8nIHBvc3RzLCBzYWxlcyBsaW5rcywgcGlyYWN5LCBwbGFnaWFyaXNtLCBsb3cgcXVhbGl0eSBib29rIGxpc3RzLCB1bm1hcmtlZCBzcG9pbGVycyAoaW5zdHJ1Y3Rpb25zIGZvciBzcG9pbGVyIHRhZ3MgYXJlIGluIHRoZSBzaWRlYmFyKSwgc2Vuc2F0aW9uYWxpc3QgaGVhZGxpbmVzLCBub3ZlbHR5IGFjY291bnRzLCBsb3cgZWZmb3J0IGNvbnRlbnQuIApBcyBjdWx0dXJhbCBzb2Npb2xvZ2lzdCBKZWZmcmV5IEFsZXhhbmRlciBwb2ludHMgb3V0LCBpZiB3ZSBkbyBub3QgcHVibGljbHkgZGVjaWRlIHdoYXQgaXMgZXZpbCwgdGhlbiB3ZSBjYW4gbmV2ZXIga25vdyB3aGF0IGlzIGdvb2QuIAoiRG8geW91IGJlbGlldmUgdGhhdCBFcm5lc3QgYW5kIENoYXJsZW5lIGtuZXcgdGhlaXIgYXR0YWNrZXIsIHRoYXQgdGhleSBvcGVuZWQgdGhlIGRvb3IgYW5kIGxldCB0aGF0IHBlcnNvbiBpbj8gIiBWYW4gU2FudCBhc2tlZCBEZXRlY3RpdmUgU2NvdHQgRHVkZWsuIApDYWxscyBvZmYgYSA0MEJCIHNob3ZlIHdpdGggSzlzIGFuZCBmbG9wcyB0aGUgZmx1c2guIEZsb3BzIHF1YWRzIGFuZCBnZXRzIHBhaWQgb2ZmLiBTb21laG93IGhhcyB0aGUgYmlnZ2VzdCBzdGFjayBpbiB0aGUgdG91cm5hbWVudCBkZXNwaXRlIGJlaW5nIG9uZSBvZiB0aGUgd29yc3QgcGxheWVycy4gCk1heWJlIHNlYXNvbiAxIHNoZSB3YXMgYSBiaXQgbW9yZSBpbm5vY2VudCBidXQgYnkgc2Vhc29uIDIgc2hlIGlzIGFscmVhZHkgdGhyZWF0ZW5pbmcgdG8gYnVybiBjaXRpZXMgYW5kIGtpbGwgZXZlcnlvbmUgd2hvIGxpdmVzIHRoZXJlIGJlY2F1c2UgdGhlaXIgbGVhZGVycyB3b3VsZG4gbGV0IGhlciBpbi4uIApHcmFudGVkLCBJIGFjdHVhbGx5IHN0dWRpZWQgU2hha2VzcGVhcmUgd2hpbGUgSSBvbmx5IHJlYWQgdGhlIE5pYmVsdW5nZW5saWVkIGluIHRyYW5zbGF0aW9uLCBzbyB0aGF0IHByb2JhYmx5IGEgdmVyeSBzdWJqZWN0aXZlIHBlcnNwZWN0aXZlLiAKQ3VtdWxhdGl2ZSBkYWlseSBtdXNjbGUgYWN0aXZpdHkKVGV4YXMgSG9sZGVtIFBva2VyIGlzIHZlcnkgZWFzeSB0byBsZWFybiBhbmQgZm9yIHRoaXMgcmVhc29uIHlvdSdsbCBvZnRlbiBmaW5kIG5ldyBob2xkZW0gcG9rZXIgcGxheWVycyBhdCBhbiBvbmxpbmUgY2FzaW5vIGxpa2UgVHJpZGVudCBQb2tlciwgd2hpY2ggb2ZmZXJzIFBvdCBMaW1pdCBQb2tlciB0YWJsZXMgYXMgd2VsbCBhcyBmcmVlIG9ubGluZSBwb2tlciBnYW1lcy4gCkFuZCBzbyBpdCBnb2VzLiBDb3ZlcmluZyB0aGUgZGUgQmxhc2lvIGFkbWluaXN0cmF0aW9uIGlzIGxpa2UgdGhyb3dpbmcgZGFydHMgYXQgYSB3YWxsIGNvdmVyZWQgd2l0aCBwYXJ0eSBiYWxsb29uczogSnVzdCBhYm91dCBldmVyeSB0b3NzLCBzb21ldGhpbmcncyBnb2luZyB0byBwb3AuCkRyb3BobGl4IHUKSW4gdGhlIFRob21hcyBDb3ZlbmFudCBzZXJpZXMgdGhlIG1haW4gY2hhcmFjdGVyIGlzIGEgbGVwZXIgd2hvIGRldmVsb3BzIGFuIGV4dHJlbWVseSByaWdpZCByb3V0aW5lIG9mIGNoZWNraW5nIGV2ZXJ5IHBhcnQgb2YgaGlzIGJvZHkgdG8gbWFrZSBzdXJlIGhlIGhhc24gZG9uZSBpbmp1cmVkIGhpbXNlbGYgd2l0aG91dCByZWFsaXNpbmcuIApMZSBjb3VycyBlc3QgZ3JhdHVpdC4gQSBsYSBjaGFyZ2UgZGUgbCd0dWRpYW50IGVuIGRidXQgZGUgcHJlbWlyZSBhbm5lLCBpbCBuJ3kgYSBxdWUgbCdhY2hhdCBkJ3VuIHNldWwgbWFudWVsIGQndW5lIHRyZW50YWluZSBkJ2V1cm9zIHF1aSBzZXJ0IGRlIGdyYW1tYWlyZSBldCBkZSBsZXhpcXVlIGF2ZWMgZGUgdHJzIG5vbWJyZXV4IGV4ZXJjaWNlcy4gVW4gbGl2cmV0IGRlIGNvcnJpZyBkZSBjZXMgZXhlcmNpY2VzIGVzdCBjb21wcmlzIGRhbnMgbGUgcHJpeCBkdSBtYW51ZWwuIElsIGNvbnZpZW5kcmEgYXVzc2kgZCdhY2hldGVyIGVuIG1pbGlldSBkZSAxcmUgYW5uZSB1biB2b2x1bWUgZHUgTm91dmVhdSBUZXN0YW1lbnQgZW4gZ3JlYyA6IGNvbXB0ZXIgZW50cmUgMTAgZXQgNDAgdXJvcywgc2Vsb24gbGVzIGRpdGlvbnMuIENlcyBkZXV4IG91dnJhZ2VzIHNvbnQgdXRpbGlzcyBhdXNzaSBlbiAybWUgYW5uZS4gVW5lIG1vZGVzdGUgcGFydGljaXBhdGlvbiBwb3VyIGxlcyBmcmFpcyBkZSBwaG90b2NvcGllIHBvdXJyYSB0cmUgZGVtYW5kZSBjYXIgZGVzIGRvY3VtZW50cyBzb250IHJlbWlzIGF1eCB0dWRpYW50cyAgY2hhcXVlIGNvdXJzLgpBIHllYXIgbGF0ZXIgdGhlIENvbW1pdHRlZSB0byBFbmQgRWxkZXIgSG9tZWxlc3NuZXNzIG9wZW5lZCBCaXNob3AgU3RyZWV0LCB0aGUgZmlyc3Qgb2Ygc2l4IHJlc2lkZW5jZXMsIHdoaWNoIGhvdXNlcyAxMzAgZWxkZXJzLiBPbmUgb2YgdGhlIHJlc2lkZW5jZXMsIGluIHRoZSBoZWFydCBvZiBCb3N0b24ncyBTb3V0aCBFbmQsIGlzIG5hbWVkIHRoZSBBbm5hIEJpc3Nvbm5ldHRlIEhvdXNlLCBhbmQgcHJvdmlkZXMgcGVybWFuZW50IGhvdXNpbmcgZm9yIDQwIGZvcm1lcmx5IGhvbWVsZXNzIGVsZGVycy4gCkl0IGVuZGVkIGluIGRlYXRocyBhbmQgc3VpY2lkZXMgZm9yIHRoZW0gKG5vdCB0aGVtc2VsdmVzIGJ1dCB0aGVpciBmYW1pbHkgbWVtYmVycykgdGhlIGRlc3RydWN0aW9uIG9mIGEgYnVzaW5lc3MsIHRoZSBsb3NzIG9mIGEgbWFycmlhZ2UsIE5DIHdpdGgga2lkcy4gVGhleSB3ZW50IGZyb20gaGF2aW5nIHN0YWJsZSBsaXZlcyB0byBzdWRkZW5seSBldmVyeXRoaW5nIGdvbmUgdG8gaGVsbCBhZnRlciB0aGV5IHN0YXJ0ZWQgY2FzdGluZyBzcGVsbHMgYW5kIGN1cnNlcyBhdCBlYWNoIG90aGVyLiBQb2ludCBiZWluZywgaWYgeW91IGRvbiBiZWxpZXZlPyBOb3RoaW5nIHdpbGwgaGFwcGVuIGFuZCBpdCBqdXN0IGEgc3Rpbmt5IGFubm95YW5jZS4gCkdpdmVuIHRoZSBtYW55IGRlbWFuZHMgcGxhY2VkIG9uIHRoZW0sIHdlIHdhbnQgdG8gbWFrZSBpdCBlYXN5IGZvciBNZW1iZXJzIHRvIGZvY3VzIG9uIHRoZWlyIGltcG9ydGFudCB3b3JrIGFzIHBhcmxpYW1lbnRhcmlhbnMuIi4gCkdvIHRvIHRoaXMgd2Vic2l0ZS4gVGhlcmUgaGF2ZSBiZWVuIGFtZXJpY2FuIHBvcCBzdGFycyB3aG8gd2VyZSB5b3VuZyB0ZWVuYWdlcnMuIApJdCBjb3VsZCBiZSB0aHJlZSBwaGFzZSwgbWFueSBzd2FwIGFuZCBzaG9wcyBhcmUgZnVsbCBvZiB0aHJlZSBwaGFzZSBtb3RvcnMganVua2VkIGZyb20gY2xvc2VkIHBsYW50cyBhbmQgbWFudWZhY3R1cmVycyBhbmQgdGhlIHNlbGxlciBoYXMgbm8gaWRlYSB3aGF0IHRoZSBtb3RvciBpcyBvciBjYW1lIGZyb20sIGhvd2V2ZXIsIGZpdmUgd2lyZXMgYXMgdGhlIHF1ZXN0aW9uIHN0YXRlcywgaW5kaWNhdGVzIHRoZSBmaXZlIHdpcmVzIGNvbWUgZnJvbSB0aGUgd2luZGluZ3MgYW5kIG5vbmUgYXJlIGNoYXNzaXMgZ3JvdW5kLCBsZWF2aW5nIG9ubHkgZm91ciBtb3RvciB3aXJlcywgaW4gc2luZ2xlIHBoYXNlLCB0aHJlZSB3aXJlcyBjb3VsZCBiZSBhIGNvbW1vbiwgdG8gb25lIGxlYWQgZm9yIG9uZSBkaXJlY3Rpb24sIGFuZCB0byBhbm90aGVyIGZvciB0aGUgb3Bwb3NpdGUgZGlyZWN0aW9uIGFuZCB0aGUgcmVtYWluaW5nIHR3byB3aXJlcyBjb3VsZCBiZSBleHRlcm5hbCB0aGVybWFsIGxlYWRzLCBpdCBjb3VsZCBiZSBtdWx0aXBsZSBzcGVlZCBhcyBub3RlZCBhYm92ZSwgaW4gYSBzaW5nbGUgcGhhc2UgdmFyaWV0eSwgVGhlIHByb2JsZW0gd2l0aCBlbGVjdHJpYyBtb3RvcnMgd2hlcmUgdGhlIG5hbWVwbGF0ZSBvciBjb25uZWN0aW9uIHBsYXRlIGlzIG1pc3NpbmcgaXMgcHJvYmxlbWF0aWMsIGFzIHRoZXJlIGFyZSB0aG91c2FuZHMgb2YgdmFyaWF0aW9ucyBvZiBtb3RvcnMsIGJ1aWx0IGZvciBzcGVjaWZpYyBhcHBsaWNhdGlvbnMsIGlmIHRoZSBxdWVzdGlvbiBpcyB3aGF0IE5FTUEgZGVzaWduIDUgbGVhZCBtb3RvciBjb25uZWN0aW9ucyBhcmUsIHRoYXQgY291bGQgZHJpbGwgZG93biB0aGUgcG9zc2libGUgYW5zd2VycywgQnV0IGJhY2sgdG8gc2luZ2xlIHBoYXNlIGZvciBhIG1vbWVudDogU2luZ2xlIFBoYXNlIFRlcm1pbmFsIE1hcmtpbmdzIElkZW50aWZpZWQgQnkgQ29sb3I6IChORU1BIFN0YW5kYXJkcykgMSBCbHVlIDUgQmxhY2sgUDEgTm8gY29sb3IgYXNzaWduZWQgMiBXaGl0ZSA2IE5vIGNvbG9yIGFzc2lnbmVkIFAyIEJyb3duIDMgT3JhbmdlIDcgTm8gY29sb3IgYXNzaWduZWQgNCBZZWxsb3cgOCBSZWQgTW9zdCB0aHJlZSBwaGFzZSBORU1BIG1vdG9ycyBhcmUgdGhyZWUsIHNpeCwgbmluZSBvciB0d2VsdmUgbGVhZHMsIHJhcmVseSBhcmUgdGhlIGVuZHMgb2YgZWFjaCBwaGFzZSBicm91Z2h0IG91dCwgcGx1cyB0aGUgbmV1dHJhbCBbaW50ZXJuYWwgd3llIGNvbm5lY3Rpb24gb25seV0gYW5kIHRoZW4gYSBjaGFzc2lzIGdyb3VuZCwgbWFraW5nIGEgdG90YWwgb2YgZml2ZS4gSW50ZXJuYWxseSBkZWx0YSBjb25uZWN0ZWQgbW90b3JzIHdvdWxkIG5vdCBoYXZlIGEgc2luZ2xlIG5ldXRyYWwgcG9pbnQsIHNvIHRob3NlIHRocmVlIHBoYXNlIG1vdG9ycyB0aGF0IGFyZSBjb25uZWN0ZWQgZGVsdGEgaW50ZXJuYWxseSBhcmUgb2Z0ZW4ganVzdCB0aHJlZSwgb3IgaWYgdGhlIG5lZWQgZXhpc3RlZCBmb3IgYSB3eWUgZGVsdGEgZXh0ZXJuYWwgY29ubmVjdGlvbiwgdGhlbiBib3RoIGVuZHMgb2YgZWFjaCBwaGFzZSB3b3VsZCBiZSBicm91Z2h0IG91dCwgdGhlIG1vdG9yIHRoZW4gd291bGQgYmUgY29ubmVjdGVkIGV4dGVybmFsbHkgd2l0aCB0aHJlZSB3aXJlcyBpbiBhIGJ1bmRsZSBbZWxlY3RyaWNhbGx5IGNvbm5lY3RlZCBhbmQgaXNvbGF0ZWRdIHVzaW5nIHRoZSBsYXN0IHRocmVlIHRvIHRoZSBpbmNvbWluZyBwb3dlciwgb3IgaWYgZXh0ZXJuYWxseSBjb25uZWN0ZWQgZGVsdGEgdGhlIGRlbHRhIHBvaW50cyB3b3VsZCBiZSBtYWRlIHVwIGJ5IHRha2luZyB0aGUgZW5kIG9mIG9uZSBwaGFzZSB0byB0aGUgYmVnaW5uaW5nIG9mIHRoZSBuZXh0LCB0aGUgZW5kIG9mIHRoZSBsYXN0IHRvIHRoZSBiZWdpbm5pbmcgb2YgdGhlIGZpcnN0LiAKWW91IGNhbiBkbyB0aGlzLiBJdCB0b3VnaCBidXQgeW91IGNhbi4KTmlrb2xpIEJvZ2R1ayB3aG8gaXMgYW4gYW5hdG9taXN0IGFuZCBzdXJnZW9uIGZyb20gUXVlZW5zbGFuZCBBdXN0cmFsaWEuIApJIGRvIG5vdCBrbm93IHdoYXQgeW91IG5lZWQgdG8gc3RhcnQgY3V0dGluZyBwcmVjaW91cyBtZXRhbHMgb2YgdGhhdCBnYXVnZSwgYnV0IEkgYW0gaW50ZXJlc3RlZCB0byBoZWFyIHlvdXIgZXhwZXJpZW5jZS4gCkl0J3MgYWxsIGdvb2QgaWYgeW91IGd1eXMgZG9uJ3QgYmVsaWV2ZSBpbiBnb2QgYW5kIHByYXlpbmcuIEFzIGEgY2F0aG9saWMgbXkgcmVsaWdpb24gdGVhY2hlcyBtZSBub3QgdG8ganVkZ2Ugb3IgYmUgcHJvdWQgc28gSSB3b3VsZG4ndCBqdWRnZS4gQnV0IHRoZXJlJ3Mgbm8gcmVhc29uIGZvciB5b3UgdG8gYmUgZm9yY2luZyBhdGhlaXNtIGRvd24gc29tZW9uZSdzIHRocm9hdCBiZWNhdXNlIHRoZWlyIHNvbiB3YXMgcHJheWluZy4gSGUgd2lsbCBmaWd1cmUgb3V0IHNvb25lciBvciBsYXRlciB3aGV0aGVyIGl0J3Mgd2hhdCBoZSByZWFsbHkgYmVsaWV2ZXMgaW4gb3Igbm90LiBKdXN0IHJlYWQgdGhlIHN0b3J5PyBBbmQgZ2V0IG92ZXIgaXQuIFN0b3AgZm9yY2luZyBhdGhlaXNtIGRvd24gcGVvcGxlJ3MgdGhyb2F0cyBiZWNhdXNlIHlvdSB0aGluayB0aGV5IGFyZSBmb3JjaW5nIENocmlzdGlhbml0eSBkb3duIHRoZWlyIGtpZHMgdGhyb2F0cy4gVHdvIHdyb25ncyBkb24ndCBtYWtlIGEgcmlnaHQuCldlIGNvdWxkIHRyYWRlIHBsYWNlcyBmb3IgYXdoaWxlIGlmIHlvdSB3YW50LiBJIGhhdmUgZml2ZSBjYXRzLCB1bmVtcGxveWVkLCBhbmQgSSBiaW5nZSBlYXQuIApFeHBlcnQncyBvcGluaW9uIFRoZXJlIGFyZSBjaGFsbGVuZ2VzIGJleW9uZCB0aGUgdGltZSBmcmFtZSBmb3IgdGhlIFJPSSBhbmQgdGhlIHJpc2ssIHNhaWQgSm9obiBDaG8sIHBhcnRuZXIgaW4gdHJhbnNhY3Rpb24gc2VydmljZXMgYXQgS1BNRyBFbnRlcnByaXNlLiAKWW91IG1pZ2h0IGJlIHJpZ2h0LCBJIGhhdmVuIHBhaWQgYXR0ZW50aW9uIHRvIHRoaXMgc29ydCBvZiByZXNlYXJjaC4gQnV0IGlmIHlvdSBoYXZpbmcgbGFyZ2UgZW5vdWdoIHNlYXJjaCBzZXQsIHlvdSBtaWdodCBub3QgYmUgYWJsZSB0byBndWFyYW50ZWUgdGhhdCB5b3UgZXZlciBmaW5kIG9uZSBvZiB0aGUgc29sdXRpb25zLiAKICA1IHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnb0hlJ3MgcmFtcGluZyB1cCBoaXMgYmFzZSBzbyB0aGF0IGhlIGNhbiBzdGFydCB0byBwdXNoIGEgbmFycmF0aXZlIHRoYXQgaXQncyBpbGxlZ2l0aW1hdGUuIApBZ3Jlc3NpdmUgYWJvdXQgd2FudGluZyB0byBqb2luIGFybWVkIGRyaWxsLiAKRGF6dSBtdXNzIG1hbiBhdWNoIG5vY2ggc2FnZW4sIGRhc3MgQUtLIGF1Y2ggaW5oYWx0bGljaCBub2NobWFsIGVpbiBnYW56ZXMgU3RjayBrb25zZXJ2YXRpdmVyIGFscyBNZXJrZWwgaXN0IG9kZXIgenVtaW5kZXN0IGlocmUga29uc2VydmF0aXZlbi9zcGllYnJnZXJsaWNoZW4gUG9zaXRpb25lbiBkZXV0bGljaCBzdHJrZXIgdmVydHJpdHQuIFZpZWxsZWljaHQgc2Nod2NodCBzaWUgZGFtaXQgZWluIGJpc3NjaGVuIGRpZSBBZmQgdW5kIGhpbGZ0IGRlciBTUEQgc2ljaCB2b24gZGVyIFVuaW9uIGFienVncmVuemVuIGFiZXIgaW5oYWx0bGljaCBnZWZhbGxlbiB0dXQgbWlyIGRhcyBhdWNoIG5pY2h0IHZvcmFsbGVuLCB3ZWlsIGljaCBhdWYgQnVuZGVzZWJlbmUgbWlyIGVpbmUgUmVnaWVydW5nIG9obmUgVW5pb24gbnVyIHNjaHdlciB2b3JzdGVsbGVuIGthbm4uLiAKTyBtb3RvciBwYXJlY2UgbWUgYmVtLiBRdWFudG8gIHR1YSBkdXZpZGEuIApDaGFuY2VzIGFyZSwgeW91IGVuam95IHBsYXlpbmcgcG9rZXIgd2l0aCBwZW9wbGUgb3RoZXIgdGhhbiB0aGUgb25lcyB0aGF0IHJlc2lkZSBpbiB5b3VyIGhvbWUuIApMZWFmbm9vZCB1CiJXaGF0IHdlIGFyZSB1bHRpbWF0ZWx5IGxvb2tpbmcgdG8gZG8gaXMgZ2l2ZSB0aGUgaW5zdXJhbmNlIGNvbXBhbmllcyBlbm91Z2ggZXZpZGVuY2UgdGhhdCB0aGV5IHdpbGwgc3RhcnQgYWRkaW5nIG1hc3NhZ2UgdGhlcmFweSBpbnRvIHRoZWlyIHBvbGljaWVzIGZvciBwcmV2ZW50YXRpdmUgaGVhbHRoIGNhcmUsIHNvIHBlb3BsZSBjYW4gZ2V0IHRoZXNlIHRyZWF0bWVudHMgcGFpZCBmb3IgYnkgdGhlaXIgaW5zdXJhbmNlLCIgR2lsYmVydCBzYXlzLgpNYWtldXA6IHVzZSBhIGxpZ2h0IGZvdW5kYXRpb24sIEkgdXNlIGEgdGludGVkIFNQRiB0aGVuIGEgY29uY2VhbGVyIGZvciBwaW1wbGVzIG9yIHVuZGVyIGV5ZSBkYXJrbmVzcyBhbmQgZmluaXNoIHdpdGggYSBsaWdodCBwb3dkZXIuIEV5ZWxpbmVyIGFsb25lIGNhbiBsb29rIHRvbyBoZWF2eS4gCkxldCBhbnkgZGlzdHJhY3Rpb25zIGdvLiAKVGhlIHdvcnRoIG9mIGZlbWFsZSBjaGlwcyBpbiBhIG1hbGUgcG9rZXIgZ2FtZS4uIApJIHRoaW5rIHdlIGNhbiBzZWxsIHNvbWUgaW5oZXJpdGVkIGpld2VscnkgdG8gY292ZXIgbW9zdCBvZiB0aGUgJC4gSSBob3BlLiAKT25jZSB0aGUgbGVnYWxpdGllcyBoYXZlIGJlZW4gcmVzZWFyY2hlZCwgdGhlIGluZGl2aWR1YWwgbXVzdCBmaW5kIGFuIGFjY3JlZGl0ZWQgbWFzc2FnZSB0aGVyYXB5IHNjaG9vbC4gCldlIGhhdmUgdHJpZWQgdG8gZXhwbGFpbiB0byBoZXIgd2hhdCB0aGF0IGFjdHVhbGx5IG1lYW5zLCB5ZXQgc2hlIGRvZXMgbm90IHNlZW0gdG8gZ2V0IGl0LiBJIGFtIDM1IG5vdyBhbmQgdGhpcyBoYXMgYmVlbiBnb2luZyBvbiBmb3IgYXQgbGVhc3QgMjUgeWVhcnMuIEl0IGlzIGtpbmQgb2YgbW9ydGlmeWluZy4gClRoZSByZWFzb24gSSBoYXZlbid0IHRhbGtlZCBhYm91dCBpdCBpcyB0aGF0IGl0cyBub3QgYSBiaWcgZGVhbCB0byBtZS4gClRoZSBndXkgd2hvIHJhbiB0aGUgZ2FtZSBjbGFpbWVkIGhlIG9ubHkgdG9vayBlbm91Z2ggcmFrZSBzbyBoZSBjb3VsZCBwbGF5IGZvciBmcmVlIChzbyAkMzAsIGJ1dCB3aG8ga25vd3MgaWYgdGhhdCBob3cgaGUgYWN0dWFsbHkgZGlkIGl0ICBtYXliZSBvbmUgb2YgeW91IHNoYXJwZXIgci9wb2tlciBndXlzIGNhbiBkbyB0aGUgbWF0aCByZWFsIHF1aWNrICA4MCBwbGF5ZXJzLCAkMzAgYnV5IGluLCBmaXJzdCB3YXMgYWx3YXlzICQ5MDAsIHNlY29uZCAkNDAwaXNoLCB0aGlyZCBpIHRoaW5rICQzMDBpc2gsIGZvdXJ0aCAkMTAwaXNoIGFuZCBmaWZ0aCBnb3QgdGhlaXIgbW9uZXkgYmFjaykgYW5kIHdhcyBuYW1lZCAic3RldmUiIGJ1dCBldmVyeW9uZSBoYWQgdG8gY2FsbCBoaW0gImFsb256bywiIGFzIGlmIHRoYXQgd291bGQgcmVhbGx5IG1ha2UgYSBkaWZmZXJlbmNlLCBzYWZldHkgd2lzZSAodGhhdCBhbmQgaGFsZiBvZiBoaXMgZnJpZW5kcyB3b3VsZCBmdWNrIHVwIGFuZCBjYWxsIGhpbSBzdGV2ZSBvbiBhY2NpZGVudCBhbnl3YXlzKS4gClRoZXJlIGFyZSBhbGwgZ2VuZXJhbGl6YXRpb25zIG9mIGNvdXJzZSBidXQgaG9wZSBpdCBoZWxwcy4gRGVmIHN1Z2dlc3QgY2hlY2tpbmcgb3V0IHRoZSBQTE8gTWFzdGVybWluZCBmb3IgYSBsb3QgbW9yZSBpbmZvLiBGb3IgYmV0IHNpemluZyBzcGVjaWZpY2FsbHkgY2hlY2sgb3V0IHRoZSBwb3N0ZmxvcCBzaG9ydGN1dHMgd2hpY2ggY292ZXIgMjg0IGRpZmZlcmVudCBmbG9wcyBlYWNoIGFuZCBnaXZlcyB5b3UgR1RPIGZyZXF1ZW5jaWVzIGZvciBlYWNoIGZsb3AgKGluY2x1ZGluZyBiZXQgc2l6aW5nKS4gVGhlcmUgYXJlIGN1cnJlbnRseSBmb3I6IEJUTiB2cyBCQiBTUlAsIFNCIHZzIEJUTiAzYmV0IHBvdCwgYW5kIEJUTiB2cyBDTyAzYmV0IHBvdC4KTWNodGUgbWFuIHRyb3R6ZGVtIGVpbiBiaXNzY2hlbiBGYXJiZSByZWluYnJpbmdlbiwgZGFubiBrbm50ZSBtYW4gZWluIHBhYXIgVHJvcGZlbiBTYW5kZG9ybmZydWNodGZsZWlzY2hsIG9kZXIgS2Fyb3RpbmwgdmVyd2VuZGVuLiBBYmVyIGljaCBmaW5kZSBzaWUgYXVjaCBzbyBoYnNjaC4gTmV0dCB2ZXJwYWNrdCwgekIgaW4gZWluZW0gQ2VsbG9waGFuc2NrY2hlbiBtaXQgU2NobGVpZmUgdW5kIEdlc2NoZW5rc2FuaG5nZXIgc2luZCBzaWUgYnJpZ2VucyBhdWNoIGVpbiBzY2huZXMgTWl0YnJpbmdzZWwgYmVpbSBuY2hzdGVuIEJlc3VjaCAuIApJIHRoaW5rIHRoaXMgaXMgd2hlcmUgdGhlIHRlcm0gZG9lcyBhIGJpdCBvZiBhIGRpc3NlcnZpY2UgdG8gdGhlIHVuZGVybHlpbmcgY29uY2VwdC4gCkhpLCBJIGtub3cgdGhpcyBpcyBhIGJpdCBsYXRlIGJ1dCBJIGN1cnJlbnRseSBhIHN0dWRlbnQgaW4gdGhlIGZpbG0gcHJvZ3JhbSBzbyBJIGNhbiBvZmZlciBzb21lIGluc2lnaHQuIApDYWxpZm9ybmlhIGxhdyBwbGFjZXMgcmVzdHJpY3Rpb25zIG9uIGdhbWJsaW5nLCBidXQgYXMgd2l0aCBtYW55IG90aGVyIHN0YXRlcywgaXQgYWxsb3dzIEluZGlhbiB0cmliZXMgdG8gb3BlcmF0ZSBjYXNpbm9zLiBBdCB0aGUgdGltZSBvZiBwdWJsaWNhdGlvbiwgQ2FsaWZvcm5pYSBoYWQgNTggSW5kaWFuIGNhc2lub3MgYW5kIDkwIHBva2VyIGNhc2lub3MuIENhcmQgcm9vbXMgb3IgY2FzaW5vcyBwcm92aWRlIGxlZ2FsIGNhcmQgdmFyaWF0aW9ucyBvbiBnYW1lcyBzdWNoIGFzIGNyYXBzIHRoYXQgdHJhZGl0aW9uYWxseSB1c2UgZGljZSBvciBvdGhlciBtZWFucyBvZiBnYW1pbmcuIApBc2lkZSBmcm9tIGVuaGFuY2luZyBhbnkgZ2FtZSB0aGF0IHlvdSBwbGF5IGluIHlvdXIgb3duIGhvbWUsIHlvdSBtYXkgd2FudCB0byBicmluZyB0aGVtIHRvIG90aGVyIGxvY2F0aW9ucy4gCkkgbWVhbiwgY29tZSBvbiwgYWxsIFlvdSBoYXZlIHdpdGhpbiBvcmRlciB0byBkbyBoYXMgYmVjb21lIGdldCBPTkUsIGp1c3QgQSBwZXJzb24gcGVyc29uIGZvciBiZWxpZXZlIGV2ZW4gYXMgSSBleHBlcmllbmNlICAgdGhyb3VnaCB3aGljaCBERVNJUkVTIGFueSBjaGFuY2UgZm9yIGp1c3QgY2F1c2UgYSByZWFzb25hYmxlIGxpdmluZyB3aXRoIGhvbWUsIHJlc2VtYmxpbmcgSSBkbywgYW5kIFNvIGknbSBbV0UgYXJlXSBpbiBqdXN0IGxpa2UgRmx5bm4sIHRoZSBwZXJzb24gd2hvIHRoZSBkYXlsaWdodHMgRmx5bm4gZGVmaW5pdGVseSBpcyBvciB3YXMgaW5pdGlhbGx5LiAKUkVQRVJFUiBMRVMgQ0FTIERFIFNZTkRST01FIERVIEJFQkUgU0VDT1VFU291cyBsYSBwcnNpZGVuY2UgZGUgTS4gSmFjcXVlcyBTSVpVTiwgUHJvZmVzc2V1ciwgU2VydmljZSBkZSBub25hdGFsb2dpZSBldCByYW5pbWF0aW9uIHBkaWF0cmlxdWUgICBQbGUgZGUgbGEgZmVtbWUsIGRlIGxhIG1yZSBldCBkZSBsJ2VuZmFudCwgQ0hSVSBCcmVzdDloIExhIGNvbnNjcmF0aW9uIGRlIGxhIHJhbGl0IGR1IHN5bmRyb21lTGF1cmVudCBNSVNFUlksIHByb2Zlc3NldXIgZGUgZGVybWF0b2xvZ2llIGV0IGRpcmVjdGV1ciBkdSBsYWJvcmF0b2lyZSBkZSBuZXVyb3NjaWVuY2VzICBsJ1VuaXZlcnNpdCBkZSBCcmVzdDloMzAgUmVwcmVyIGV0IHNpZ25hbGVyIGNlIHR5cGUgZGUgbWFsdHJhaXRhbmNlTW1lIFBhdWxpbmUgTEUgTU9OTklFUiBERSBHT1VWSUxMRSwgbWF0cmUgZGUgY29uZnJlbmNlcyBlbiBkcm9pdCBwcml2IGV0IGRpcmVjdHJpY2UgZGVzIHR1ZGVzIGRlIGwnSW5zdGl0dXQgZGVzIHR1ZGVzIGp1ZGljaWFpcmVzIFBpZXJyZSBSYXluYXVkICBsJ1VuaXZlcnNpdCBQYW50aG9uIEFzc2FzIFBhcmlzIDIxMGggQXNwZWN0cyBwaWRtaW9sb2dpcXVlcyBkdSBzZWNvdWVtZW50MTBoNTAgUGF1c2UxMWggTGEgcHJvdGVjdGlvbiBkZSBsJ2VuZmFuY2UgcGFyIGxlIGRyb2l0IGNpdmlsICAgUmVnYXJkcyBjcm9pc3MgOiBhcHByb2NoZSBkdSBtYWdpc3RyYXROaWNvbGFzIEJJSEFOLCBqdWdlIGRlcyBlbmZhbnRzIGF1IHRyaWJ1bmFsIGRlIGdyYW5kZSBpbnN0YW5jZSBkZSBRdWltcGVyMTFoMzAgTGEgcHJvdGVjdGlvbiBkZSBsJ2VuZmFuY2UgcGFyIGxlIGRyb2l0IGNpdmlsICAgUmVnYXJkcyBjcm9pc3MgOiBhcHByb2NoZSBkZSBsJ2F2b2NhdE1lIEFubmUgQ0hBTlRFVVggQ0FST04sIGF2b2NhdGUgYXUgYmFycmVhdSBkZSBCcmVzdFRSQUlURVIgTEVTIENBUyBERSBTWU5EUk9NRSBERSBCRUJFIFNFQ09VRVNvdXMgbGEgcHJzaWRlbmNlIGRlIE0uIEdpbGRhcyBST1VTU0VMLCBtYXRyZSBkZSBjb25mcmVuY2VzIGVuIGRyb2l0IHByaXYgZXQgc2NpZW5jZXMgY3JpbWluZWxsZXMgZXQgZGlyZWN0ZXVyIGRlIGwnSW5zdGl0dXQgZCd0dWRlcyBqdWRpY2lhaXJlcyBkZSBsJ1VuaXZlcnNpdCBkZSBCcmVzdDE0aCBEdSBkaWFnbm9zdGljIGNsaW5pcXVlIGF1eCBjb25zcXVlbmNlcyBkdSBzZWNvdWVtZW50TW1lIFN5bHZpYW5lIFBFVURFTklFUiwgbmV1cm9sb2d1ZSBwZGlhdHJlLCBwcmF0aWNpZW4gaG9zcGl0YWxpZXIgYXUgcGxlIGRlIGxhIGZlbW1lLCBkZSBsYSBtcmUgZXQgZGUgbCdlbmZhbnQsIENIUlUgQnJlc3QxNGgzMCBMYSBkYXRhdGlvbk1tZSBBbm5lIExBVVJFTlQgVkFOTklFUiwgY2hlZiBkdSBwbGUgcmR1Y2F0aW9uIGRlIGwnZW5mYW50LCBIcGl0YXV4IGRlIFNhaW50IE1hdXJpY2UsIGV4cGVydCBqdWRpY2lhaXJlIHBycyBsYSBDb3VyIGQnYXBwZWwgZGUgUGFyaXMgZXQgcHJzIGxhIENvdXIgZGUgY2Fzc2F0aW9uMTVoIEFuYWx5c2UgdGhvcmlxdWUgZGVzIHBvdXJzdWl0ZXMgcG5hbGVzIGVudmlzYWdlYWJsZXNGcmFub2lzIFhhdmllciBST1VYIERFTUFSRSwgbWF0cmUgZGUgY29uZnJlbmNlcyBlbiBkcm9pdCBwcml2IGV0IHNjaWVuY2VzIGNyaW1pbmVsbGVzIGV0IGRpcmVjdGV1ciBkdSBtYXN0ZXIgMiBEcm9pdCBkZXMgcGVyc29ubmVzIHZ1bG5yYWJsZXMgIGwnVW5pdmVyc2l0IGRlIEJyZXN0MTVoNTAgUGF1c2VNbWUgQ2hhbnRhbCBDT01CRUFVLCB2aWNlIHByc2lkZW50ZSBjaGFyZ2UgZGUgbCdhcHBsaWNhdGlvbiBkZXMgcGVpbmVzIGF1IHRyaWJ1bmFsIGRlIGdyYW5kZSBpbnN0YW5jZSBkZSBNb250IGRlIE1hcnNhbiwgcHJjZGVtbWVudCBjaGFyZ2UgZGUgbWlzc2lvbiBhdSBkcGFydGVtZW50IHJlY2hlcmNoZSBkZSBsJ0Vjb2xlIG5hdGlvbmFsZSBkZSBsYSBtYWdpc3RyYXR1cmUuIApUaHJlZSBvZiBhIGtpbmQgaXMgd2hlbiB5b3UgZG9uJ3QgaGF2ZSBhbnkgcGFpciB0byBtYWtlIGl0IGEgZnVsbCBob3VzZSwgd2hpbGUgdHdvIHBhaXIgaXMgaGF2aW5nIHR3byBzZXRzIG9mIHBhaXIgaW4gYSBoYW5kLCBzdWNoIGFzIGhvbGRpbmcgamFjayBvZiBkaWFtb25kcyBhbmQgY2x1YnMsIGFuZCBhbm90aGVyIHBhaXIgb2YgdHdvIG9mIGhlYXJ0cyBhbmQgdHdvIG9mIGRpYW1vbmRzLiBPbmUgcGFpciBpcyB3aGVuIHlvdSBvbmx5IGhhdmUgb25lIHNldCBvZiBhIHBhaXIuIEFuZCBsYXN0bHksIHRoZSBsb3dlc3QgaGFuZCBpcyB3aGVuIHlvdSBvbmx5IGhhdmUgaGlnaCBjYXJkcyBzdWNoIGFzIHRoZSBhY2UsIHRoZSBraW5nLCB0aGUgcXVlZW4uIAo1LiBDbGljayBhbmQgZHJhZyB0aGUgYmF0Y2ggZmlsZSBvdmVyIHRoZSBTdGFydCBtZW51LCBob2xkIGl0IG92ZXIgIkFsbCBQcm9ncmFtcyIgYW5kIGRyb3AgaXQgb3ZlciB0aGUgIlN0YXJ0dXAiIGZvbGRlci4gT25jZSBhZGRlZCwgdGhlIG1lc3NhZ2UgYm94KGVzKSB3aWxsIGJlIGRpc3BsYXllZCBvbnNjcmVlbiBhdCBldmVyeSBsb2dpbi4gCldoZW4geW91IHdhbnQgdG8gbWFrZSBzdXJlIHRoYXQgeW91IGFuZCB5b3VyIGd1ZXN0cyBhcmUgcmVhbGx5IGVuam95aW5nIHRoZSBnYW1lIGluIGdlbmVyYWwsIGZpZ3VyZSBvdXQgd2hhdCBhIGdyZWF0IDk2IEluY2ggVGV4YXMgSG9sZGVtIFRhYmxlIFdpdGggUmVkIEZlbHQgY2FuIGRvIGZvciB5b3VyIGdhbWluZyBlbnZpcm9ubWVudC4uIApBbHNvLCBkb2VzIHRoYXQgbWVhbiBndWlsdHkgcGVvcGxlIHNob3VsZCBub3QgYmUgZ2l2ZW4gc2Vjb25kIGNoYW5jZXM/IFRoZXJlIGFyZSBjb252aWN0cyB3aG8gdHVybiB0aGVpciBsaXZlcyBhcm91bmQgY29tcGxldGVseS4gVGhlcmUgYXJlIG11cmRlcmVycyB0aGF0IGFyZSBtZW50YWxseSBpbGwgYW5kIGtpbGxlZCBiZWNhdXNlIHRoZXkgYXJlIGluc2FuZTsgZG8geW91IHRoaW5rIHRoZXkgZGVzZXJ2ZSBkZWF0aD8gT3ZlcmFsbCwgSSBkb24gdGhpbmsgeW91IGFyZSB3cm9uZyBiZWNhdXNlIEkgdmFsdWUgb3RoZXIgcGVvcGxlIG9waW5pb25zIGJ1dCB0aGVyZSBhcmUgYWx3YXlzIG90aGVyIGFzcGVjdHMgdG8gbG9vayBhdC4gClRoZSB0aW1lIHdhcyByaWdodCB0byBzZWxsIHRoZSBjYXNpbm8sIEdpbGJlcnQgc2FpZC4KU2luY2UgaXQncyB2aWRlbyBwb2tlciwgd2UgY2FuIGFzc3VtZSB0aGF0IHRoZSBvbmx5IGNhcmRzIGRyYXduIGFyZSB0aGUgb25lcyB5b3Ugc3RhcnRlZCB3aXRoLiAKTm90IG9ubHkgY29uc3VtZXJzIHdpbGwgcGF5IGhpZ2hlciBwcmljZXMuIEJ1c2luZXNzZXMgaW1wb3J0IG1vc3Qgb2YgdGhlaXIgbWFjaGluZXJ5IGFuZCBlcXVpcG1lbnQuIEZhY2VkIHdpdGggaGlnaGVyIHByaWNlcywgZmlybXMgd2lsbCB0cmltIHRoZWlyIG91dGxheXMgZm9yIG1hY2hpbmVyeSBhbmQgZXF1aXBtZW50LCB3aGljaCB1bHRpbWF0ZWx5IHdpbGwgZGVwcmVzcyBwcm9kdWN0aXZpdHkgYW5kIHdhZ2VzIGluIHRoZSBmdXR1cmUuIGRvbGxhcnMuCkl0IHJlbWFpbnMgaW4gY29tbWl0dGVlLiAKSXQgcmVtaW5kZWQgbWUgb2YgUmljaGFyZCBOaXhvbidzIHdlbGwgY29uY29jdGVkIG1hZG1hbiBzdHJhdGVneSB0byBtYWtlIHRoZSBWaWV0bmFtZXNlIHRoaW5rIGhlIHdhcyBjcmF6eSBlbm91Z2ggdG8gYmxvdyB1cCB0aGVpciBkeWtlcyBvciBldmVuIGRyb3AgdGhlIGJpZyBvbmUuIApDb3VwbGUgdGhpcyB3aXRoIHRoZSBmYWN0IHRoYXQgTmludGVuZG8gaW4gcHJldmlvdXMgeWVhcnMgKGFzIFNreSBtZW50aW9uZWQgaW4gdGhlIHRocmVhZCkgd2FzIGFjdGl2ZWx5IGFnYWluc3QgYnJvYWRjYXN0aW5nIGNvbXBldGl0aXZlIE1lbGVlIGFuZCBkaWQgYWxsIGl0IGNvdWxkIHRvIHByZXZlbnQgaXQgZnJvbSBoYXBwZW5pbmcsIGFuZCByZWNvbnNpZGVyLllvdSBjYW5ub3QgcG9zc2libHkgdGVsbCBtZSBVbHRpbWF0ZSB3b3VsZCBleGlzdCB0aGUgd2F5IGl0IGRvZXMgdG9kYXkuIEl0IGlzIHNvbGVseSBiZWNhdXNlIHRoZSBNZWxlZSBjb21wZXRpdGl2ZSBzY2VuZSBuZXZlciBxdWl0IHRoYXQgU2FrdXJhaSBhbmQgTmludGVuZG8gbm93IGFja25vd2xlZGdlIChhbmQgYXBwcmVjaWF0ZSwgSSBob3BlKSB0aGUgY29tcGV0aXRpdmUgc2NlbmUgZm9yIHRoZWlyIGZyYW5jaGlzZSwgYW5kIGl0IGlzIHByZWNpc2VseSB3aHkgVWx0aW1hdGUgZXhpc3RzIGluIHRoZSBzdGF0ZSBpdCBkb2VzIHRvZGF5LiAKTmljb2xhaSwgd2l0aCBoaXMgd2lmZSBIb2xseSwgYW5kIGdyYW5kY2hpbGRyZW4gSWxpYW5hIGFuZCBOYXRoYW47IGFuZCBNYXJjdXMgYW5kIGhpcyB3aWZlIFNhcmFoLiBJIHdvdWxkIGxpa2UgdG8gZ2l2ZSBzcGVjaWFsIHJlY29nbml0aW9uIHRvIG15IHNpc3RlciBDaHJpc3RpbmUgR2VydGggKEdhcnkpIGZvciBhbGwgdGhlIHN1cHBvcnQgc2hlIGdhdmUgbWUgb3ZlciB0aGUgbGFzdCBzaXggeWVhcnMuIApUaGlzIGlzIGVub3VnaCBtb3RpdmF0aW9uIGZvciBwZW9wbGUgdG8gam9pbiBhbmQgaGF2ZSBmdW4gd2hpbGUgcGxheWluZy4gSXQgaXMgaW5ldml0YWJsZSB0aGF0IHBlb3BsZSB3aWxsIGxvb2sgZm9yIGEgdGFuZ2libGUgcmV3YXJkLCBidXQgaW4gbW9zdCBjYXNlcywgaW5kaXZpZHVhbHMgYXJlIGhhcHB5IHdpdGggdGhlIGxpdHRsZSB0aGluZ3MgdGhhdCB0aGV5IGdldC4uIApEdWUgdG8gem9uaW5nIHJlZ3VsYXRpb25zLCBhbmQgcHJvcGVydHkgY29zdHMsIHRoZXNlIGJ1c2luZXNzZXMgYXJlIHByZXR0eSBtdWNoIGx1bXBlZCB0b2dldGhlci4gCk90aGVyIHdvcmRzLCBsYWRpZXMgKGxpa2UgY2hpbGRyZW4pIHdlcmUgdGhlIHBlcmZlY3QgdmljdGltcy4uIApUaGUgaW5pdGlhbCBwbGFuIG9mIGNhc2lubyBkZXZlbG9wZXIgRGFuIEdpbGJlcnQgd2FzIHRvIGJ1aWxkIGEgY2FzaW5vIGF0b3AgYSBwYXJraW5nIGdhcmFnZSBvdmVybG9va2luZyB0aGUgQ3V5YWhvZ2EgUml2ZXIgYmVoaW5kIHRoZSBUZXJtaW5hbCBUb3dlci4gVGhlIGNvbXBsaWNhdGlvbnMgYW5kIGxpa2VseSBzbG93bmVzcyBvZiBidWlsZGluZyBvbiBhIHJpdmVyYmFuayBtb3ZlZCB0aGUgY2FzaW5vIHRvIHdoYXQgY2FtZSB0byBiZSBjYWxsZWQgSSBpbiB0aGUgSGlnYmVlIEJ1aWxkaW5nLiBQaGFzZSBJSSB3b3VsZCBjb21lIGxhdGVyLiBUaGF0IHdhcyBiZWZvcmUgcmFjaW5vcyB3ZXJlIGxlZ2FsaXplZCwgaG93ZXZlciwgYW5kIGNlcnRhaW5seSBkaWRuJ3QgdGFrZSBpbnRvIGFjY291bnQgYSBwbGFubmVkLCBmdWxsIHNlcnZpY2UgY2FzaW5vIGluIE5ldyBDYXN0bGUsIFBhLiwgbmVhciB0aGUgT2hpbyBib3JkZXIuIFRoZSBQZW5uc3lsdmFuaWEgR2FtaW5nIENvbnRyb2wgQm9hcmQgaGFzIGEgbGljZW5zZSBmb3IgYSBjYXNpbm8gdGhlcmUsIGJ1dCBoYXMgeWV0IHRvIGFwcHJvdmUgYSBkZXZlbG9wbWVudCBwbGFuLiBXaGlsZSBHaWxiZXJ0IGhhcyBjb250aW51ZWQgdG8gc2F5IHRoZSBuZXcgY2FzaW5vLCB3aGljaCBjb3VsZCBvZmZlciB0aGUga2luZCBvZiBhbWVuaXRpZXMgbm93IGF2YWlsYWJsZSBhdCB0aGUgcmFjaW5vcywgaXMgaW4gdGhlIG9mZmluZywgbm8gdGltZXRhYmxlIGlzIGJlaW5nIG9mZmVyZWQuIExhc3Qgd2VlaywgTW9ydGxhbmQgd291bGQgb25seSBzYXkgdGhhdCBub3RoaW5nIGhhcyBjaGFuZ2VkIGluIHRob3NlIHBsYW5zLiBCdXQgTWVjemthIGlzbid0IHNvIHN1cmUuIGRvbid0IHRoaW5rIHRoZXkgY2FuIGdlbmVyYXRlIGVub3VnaCByZXZlbnVlIHRvIGp1c3RpZnkgYSBuZXcgZmFjaWxpdHksIGhlIHNhaWQuIGFuIHVubmVjZXNzYXJ5IGludmVzdG1lbnQuCklmIHlvdSBoYXZlIHJoeXRobSBnYW1lIGV4cGVyaWVuY2UsIGx2LiAKWW91IGNhbiBhc2sgdGhlbSB0byBjb3VudCB0aGUgbGVncyBvZiBhbGwgdGhlIGNoaWxkcmVuIGluIHRoZSByb29tIGFuZCBhZGQgaXQgdG9nZXRoZXIuIFlvdSBjYW4gYWxzbyBhc2sgdGhlbSB0byBhbnN3ZXIgcXVlc3Rpb25zIGJ5IHNob3dpbmcgdGhlIGNvcnJlY3QgbnVtYmVyIHVzaW5nIHRoZWlyIGZpbmdlcnMuIEZvciBleGFtcGxlLCBpZiB5b3UgYXNrLCAiRG8gSSBoYXZlIDMgYXJtcyBvciAyIGFybXM/IiBUaGVuIGFzayB0aGUgY2hpbGRyZW4gdG8gc2hvdyB5b3UgaG93IG1hbnkgYXJtcyB5b3UgaGF2ZSB1c2luZyB0aGVpciBmaW5nZXJzLi4gCk9uY2UgdGhleSBjaGVjayB0byB5b3Ugb24gdGhlIHR1cm4gYmV0IGFib3V0IDMvNCBvZiB0aGUgcG90IGFuZCB0aGV5IHNob3VsZCBmb2xkLiBJZiB0aGV5IHN0YXJ0IHRvIGRvdWJsZSBiYXJyZWwgdGhleSBlaXRoZXIgaGF2ZSBpdCBvciBoYXZlIGNhdWdodCBvbiB0byB5b3UuIFlvdSBzaG91bGQgdGFrZSBub3RlIG9mIHRoZSBib2FyZHMgeW91IGZsb2F0IGFzIHdlbGwgYXMgaXQgbWF5IGhlbHAgdGhlaXIgaGFuZCBncmVhdGx5Li4gCkJ1bXdpbmUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMjggZGF5cyBhZ28KRmlndXJpbmcgb3V0IHBsYWNlbWVudCBmb3IgdGhlIHBvdCBsaWdodHMgYXJvdW5kIHRoZSBleGlzdGluZyBza3lsaWdodHMgd2FzIGVhc3kgY29tcGFyZWQgdG8gY2FsY3VsYXRpbmcgdGhlIGFuZ2xlcyBmb3IgdGhlIGN1c3RvbSBzdGFpbmxlc3Mgc3RlZWwgZHVjdCBhYm92ZSB0aGUgaG9vZCBmYW4gdGhhdCBoYWQgdG8gYmUgbWl0cmVkIHRvIGZpdCB0aGUgc2xvcGUgb2YgdGhlIGNlaWxpbmcsIEplbnNlbiBzYXlzLlRvIGVuc3VyZSBhbGwgdGhlIHdvb2Qgd2FzIGNvbXBsZW1lbnRhcnksIEplc3Qgc2F5cyB0aGV5IGNvbnNpZGVyZWQgMTUgZGlmZmVyZW50IHNoYWRlIG9wdGlvbnMgYmVmb3JlIGRlY2lkaW5nIG9uIGp1c3QgdGhlIHJpZ2h0IGNvbG91ciBmb3IgdGhlIHdoaXRlIG9hayBlbmdpbmVlcmVkIGhhcmR3b29kIGZsb29yIHRoYXQgcnVucyB0aHJvdWdob3V0IHRoZSBob21lIGxpdmluZyBzcGFjZXMuIApPdXIgdGF4IGRydmVyIGxvb2tlZCBsa2UgdGhlIFR1cmtzaCB2ZXJzb24gb2YgUmNreSBNYXJ0biEgU2Vyb3VzbHkuIApXYXMgb25jZSBiaXR0ZW4gYnkgYSBkb2cgd2l0aCByYWJpZXMgYW5kIHNoZSB0b29rIGEgcmVkCkFuZCBNcnMuIEhlbnJ5IHRpbW9yZSAgYW5kIE1ycy4gCkluIGVpdGhlciBjYXNlLCB0aGUgbmV4dCB0aW1lIHlvdSdyZSBpbiB0aGUgQ3plY2ggUmVwdWJsaWMsIGhlYWQgdG8gdGhlIENob2RvdmFyIGZhbWlseSBicmV3ZXJ5IGZvciBhIHRoZXJhcGV1dGljIGJlZXIgYmF0aC4gU2luY2UgMjAwNiwgdGhlIGJyZXdlcnkncyAiYmVlciB3ZWxsbmVzcyBsYW5kIiBoYXMgYmVlbiBvZmZlcmluZyB2aXNpdG9ycyBhIDIwIG1pbnV0ZSBzb2FrIGluIGEgdHViIG9mIGEgc3BlY2lhbCAiYmF0aGluZyBiZWVyIiBzcGVjaWFsbHkgYnJld2VkIHRvIHN0aW11bGF0ZSB0aGUgc2tpbiBhbmQgaW50ZXJuYWwgb3JnYW5zLCBmb2xsb3dlZCBieSBhIGNvbXBsaW1lbnRhcnkgbXVnIG9mIHRoZSBicmV3ZXJ5J3Mgcm9jayBsYWdlciwgZm9yIGp1c3QgJDI5LiBGb3IgYSBmZXcgZG9sbGFycyBtb3JlLCB5b3UgY2FuIGFsc28gZ2V0IGEgbWFzc2FnZSBhbmQgc3RheSBpbiBhbiBhZGphY2VudCBob3RlbCBmb3IgdGhlIGV2ZW5pbmcgW3NvdXJjZTogQ2hvZG92YXJdLi4gCkkgYW0gcGxhbm5pbmcgdG8gdHJhdmVsIHRvIFR1cmtleSBpbiBEZWNlbWJlciB3aXRoIG15IHdpZmUgZm9yIGFyb3VuZCAxMCBkYXlzLiAKRnVydGhlcm1vcmUsIGEgZm9yd2FyZCBwb3N0dXJlZCBoZWFkIGFkZHMgMTUgMzAgbGIgb2YgYWRkaXRpb25hbCB0ZW5zaW9uL3N0cmVzcyBvbiBpdHMgc3VwcG9ydGluZyBtdXNjbGVzIGluIHRoZSBiYWNrIG9mIHRoZSBuZWNrIGZvciBlYWNoIGluY2ggb2YgZm9yd2FyZCBwcm90cnVzaW9uIG9mIHRoZSBoZWFkLgpJIGNhbm5vdCByZW1lbWJlciB0aGUgZGV0YWlscyBhYm91dCB0aGF0IHNvIGRlZmluaXRlbHkgZG91YmxlIGNoZWNrIHRoYXQgd2l0aCB0aGUgSmFwYW5lc2UgZW1iYXNzeSBvciB0aGUgV0hWIHBhZ2UuIDEgMyBtb250aHMgc2hvdWxkIG5vdCBiZSBhbiBpc3N1ZSB0aG91Z2guIApWZXJ5IGZydXN0cmF0aW5nIGZvciBtZSBhcyBJIGhhZCBuZXZlciBkb25lIGFueXRoaW5nIGxpa2UgdGhpcyBiZWZvcmUuIFRoYXQgYmVpbmcgc2FpZCwgaWYgYSBudW1wdHkgbGlrZSBtZSBjYW4gZmlndXJlIGl0IG91dCwgaXQgdmVyeSBkb2FibGUuIEkgZm9sbG93ZWQgLCB3aGljaCB3YXMgZXh0cmVtZWx5IGhlbHBmdWwuIApNYWpvcndhcmUgcGRmIHRvIGV4Y2VsIGNvbnZlcnRlciBrZXlnZW47IGRvd25sb2FkIHhpbGlzb2Z0IHZpZGVvLiAKIkl0J3Mgc3RyZW5ndGhlbmluZy4gCk15IGNoaWh1YWh1YS9yYXQgdGVycmllciBtaXggaXMgdmVyeSBtb3V0aHkuIFNoZSB3YXMgbGVzcyBzbyB3aXRoIG1lIGJlY2F1c2UgSSB3YXMgdmVyeSBjb25zaXN0ZW50LCBidXQgaXQgY2FuIHN0aWxsIGJlIGFuIGlzc3VlIHdpdGggbXkga2lkcy4gVGhlIHRoaW5nIHRoYXQgd2FzIHdvcmtlZCBiZXN0IGhhcyBiZWVuIHRvdGFsbHkgaWdub3JpbmcgaGVyIHdoZW4gc2hlIHN0YXJ0cyB3aXRoIHRoZSBuaXBweSBiZWhhdmlvci4gCkZyIGRpZSBUZXJtaW5rYXJ0ZW4gd3JlIGVpbiBMYWJlbFByaW50ZXIgbWl0IGRlbiBzcGV6aWVsbGVuIEthcnRlbiB2b24gVm9ydGVpbC4gRGVyIE5vdGVib29rIG1pdCBXaW5kb3dzIFhQIGdlbmd0ZSBhdWNoIG5pY2h0IG1laHIuIEVpbiBrbGVpbmVzIE1iZWwgbXVzc3RlIGhlciwgZGEgZGVyIG5ldWUgRHJ1Y2tlciBrZWluZW4gUGxhdHogbWVociBoYXR0ZSBhdWYgZGVtIFRyZXNlbi4gCkkgYWx3YXlzIHBsYXllZCBkZWZlbnNlLiAKRnVjayBvZmYuIApBbmdvbGEsTG91aXNpYW5hICBUaGUgQW5nb2xhIHJvZGVvIGluIExvdWlzaWFuYSAgIHJ1bm5pbmcgc2luY2UgMTk2NCAgIGlzIG5vIG9yZGluYXJ5IGFmZmFpci4gRm9yIGEgc3RhcnQsIHRoZSBldmVudCBpcyBoZWxkIGluc2lkZSBhIGhpZ2ggc2VjdXJpdHkgcHJpc29uIHdpdGggbW9yZSB0aGFuIDYsMDAwIGlubWF0ZXMsIGFuZCBpbnN0ZWFkIG9mIHdhdGNoaW5nIHRyYWluZWQgY293Ym95cyBhbmQgY293Z2lybHMsIHRoZSBwYXJ0aWNpcGFudHMgYXJlIHNvbWUgb2YgdGhlIHN0YXRlJ3MgbW9zdCBkYW5nZXJvdXMgY3JpbWluYWxzLi4gCldlIGV2ZW4gZ290IHBlYW51dHMgYW5kIHdhdGVyIGdpdmVuIHRvIHVzIGNvbXBsaW1lbnRhcnkgb24gb3VyIHRyYWluIHRyaXAhISEgV2UgYXJyaXZlZCBpbiBHdWFuZ3pob3Ugc2hvcnRseSBhZnRlciAzLjAwcG0sIGFuZCBvaCBib3ksIHdlcmUgd2UgaW4gZm9yIGEgY3VsdHVyZSBzaG9jay4gVGhlcmUgaXMgc3VjaCBhIG1peCBvZiBwb29yIGFuZCB3ZWxsIHRvIGRvIGluIHRoZSBzYW1lIGFyZWFzLCBpdCdzIGp1c3QgaW5jcmVkaWJsZS4gCktub3gsIENocmlzIEJyb3duIGFuZCBwcm9kdWNlciBQaGxpcCBTYXRjaGVsbCBsb3N0IHRoZWlyIGpvYnMgYXQgdGhlIEJ1enogaW4gdGhlIGFmdGVyc2hvY2sgb2YgU2F0Y2hlbGwgYWxsZWdlZGx5IGhhbmRpbmcgb3V0IHBvcm5vZ3JhcGhpYyB2aWRlb3MgYXQgYSBHYXkgUHJpZGUgcGFyYWRlIGluIENvbndheSBvbiBKdW5lIDI3LCBpbmNsdWRpbmcgYWxsZWdlZGx5IGdpdmluZyBvbmUgdG8gYSAxNiB5ZWFyIG9sZC4gS25veCwgdGhvdWdoIGhlIHdhcyBhdCBhIGxha2UgaG91c2Ugd2l0aCBmcmllbmRzIHRoYXQgd2Vla2VuZCwgYXBwYXJlbnRseSB3YXMgZGlzbWlzc2VkIGJ5IEtBQlogb3duZXIgUGhpbGlwIEpvbnNzb24gYmVjYXVzZSBoZSBsZWQgdGhlIE1vcm5pbmcgQnV6eiBzaG93LiBCcm93biB3YXMgaW4gQ29ud2F5IHdpdGggU2F0Y2hlbGwgdGhlIGRheSBvZiB0aGUgcGFyYWRlLgpSdXNzaWEgYmlnZ2VzdCBob3BlIHdvdWxkIGJlIHRvIHR1cm4gdGhlIHdvcmxkIGFnYWluc3QgQ2hpbmEgc28gdGhhdCBDaGluYSBhbmQgUnVzc2lhIHdvdWxkIGJlIGxlZnQgd2l0aCBsaXR0bGUgbW9yZSB0aGFuIGVhY2ggb3RoZXIgYW5kIG90aGVyIHN1cnJvdW5kaW5nIGVhc3Rlcm4gQXNpYW4gbmF0aW9ucy4gVGhlIHByb2JsZW0gdGhlcmUgaXMgdGhhdCBuYXRpb25zIGxpa2UgSW5kaWEgYW5kIFBha2lzdGFuIGFuZCBvdGhlcnMgd291bGQgc3RpbGwgYmUgaW4gdGhlIHdheS4KQW55d2F5LCB0aGVyZSB3YXMgYSBoZWFydCBtZWx0aW5nIG1vbWVudCB3aGVuIHdlIHdlcmUgd2FpdGluZyBpbiBsaW5lIGZvciBlcXVpcG1lbnQgcmVudGFscyBiZWhpbmQgYSBkYWQgYW5kIGEgbGl0dGxlIGdpcmwgd2hvIHdhcyBwcm9iYWJseSB0aHJlZSBvciBmb3VyIHllYXJzIG9sZC4gVGhlIGxpdHRsZSBnaXJsIHdhcyB3ZWFyaW5nIGEgaGVsbWV0IHdpdGggRWxzYSBhbmQgQW5uYSBmcm9tIEZyb3plbiBwcmludGVkIG9uIGl0LCBhbmQgZXhjaXRlZGx5IHR1cm5lZCBhcm91bmQgdG8gdGVsbCB1cyBzaGUgZGlkbiBuZWVkIHRvIHJlbnQgYSBoZWxtZXQsIGJlY2F1c2Ugc2hlIGFscmVhZHkgaGFkIGEgaGVsbWV0ISBUaW5kZXIgTGF3eWVyIGhhcyBiYWJ5IG5lcGhld3MsIHNvIGhlIGtub3dzIGhvdyB0byB0YWxrIHRvIGtpZHMgYW5kIGltbWVkaWF0ZWx5IGp1bXBlZCBpbiBhbmQgYXNrZWQgaGVyIHdobyB3YXMgb24gaGVyIGhlbG1ldC4gU2hlIHByb3VkbHkgYW5zd2VyZWQsICJJdCBFbHNhIGFuZCBBbm5hIGZyb20gRnJvemVuISIgVGluZGVyIExhd3llciByZXNwb25kZWQsICJXb3csIEkgbG92ZSBGcm96ZW4hIiBhbmQgc2hlIGdpZ2dsZWQgYW5kIHNhaWQsICJXaGF0PyEgWW91IGxpa2UgYSBnaXJsIG1vdmllPyIKU28sIFlFUywgSSBkbyByZWFsbHkgZG8gZmVlbCBnb29kLiAKR29vZ2xlIHBsYW5zIHRvIGJlZ2luIHRoZSBzaXggIHRvIGVpZ2h0IHdlZWsgbW92ZSBpbiBwcm9jZXNzIGluIERlY2VtYmVyLCBjb21wYW55IG9mZmljaWFscyBzYWlkIHRoaXMgd2VlaywgYXMgY29uc3RydWN0aW9uIG5lYXJzIGNvbXBsZXRpb24uIENvbnN0cnVjdGlvbiBvbiBQaGFzZSAyIG9mIFBlYXJsIFBsYWNlIGNvdWxkIGJlZ2luIHNvb24gYWZ0ZXIuCkkgZW5saXN0ZWQgaW4gdGhlIEd1YXJkIGluIDE5OTgsIGFuZCBJIGFtIHN0aWxsIGluLiBXZSB3ZXJlIGNhbGxlZCB1cCB0byBwdWxsIGFpcnBvcnQgc2VjdXJpdHkgYSBmZXcgZGF5cyBhZnRlciA5LzExLCB3aGVuIHRoZSBhaXJwb3J0cyBzdGFyZWQgb3BlbmluZyBhZ2Fpbi4gV2UgaGFkIHVuaXRzIGdldHRpbmcgY2FsbGVkIHVwIGNvbnN0YW50bHksIGZvciBtaXNzaW9ucyBib3RoIGluIHRoZSBVUyBhbmQgb3V0IG9mIGl0LiBOb3RpY2Ugd2FzIHNob3J0LiBJbiAyMDAzIEkgd2FzIGNhbGxlZCB1cCBmb3IgSXJhcSwgd2l0aCBqdXN0IGEgYml0IG92ZXIgNDggaG91cnMgb2Ygbm90aWNlLiBXaGVuIEkgd2FzIGF0IG1vYiBzaXRlIHdlIHNhdCBpbiB0aGUgYmFycmFja3Mgd2F0Y2hpbmcgdGhlIHN0YXJ0IG9mIHRoZSBib21iaW5nIG9mIEJhZ2hkYWQgb24gdGVsZXZpc2lvbi4gT2J2aW91c2x5LCBteSBleHBlcmllbmNlIHdhcyB2ZXJ5IGRpZmZlcmVudCBmcm9tIHRoZSBhY3RpdmUgZHV0eS4gQXQgdGhhdCBwb2ludCwgdGhlIGd1YXJkIHdhcyB2ZXJ5IHVucHJlcGFyZWQuIE91ciB2ZWhpY2xlcyBhbmQgZXF1aXBtZW50IHdlcmUgZXh0cmVtZWx5IG91dGRhdGVkLCBpbiBiYWQgc2hhcGUsIGFuZCBwb29ybHkgbWFpbnRhaW5lZC4gTWVkaWNhbCBleGFtcyBoYWQgbm90IGJlZW4gZG9uZSwgbWFueSBwZW9wbGUgd2VyZSBpbml0aWFsbHkgbm9uIGRlcGxveWFibGUgZHVlIHRvIG1lZGljYWwgYW5kIGRlbnRhbCBpc3N1ZXMuIE9uZSBndXkgaW4gbXkgdW5pdCBjb3VsZG50IGRlcGxveSBiZWNhdXNlIGhlIHdhcyBsaXRlcmFsbHkgdG9vIGZhdCBmb3IgYW55IGNoZW1pY2FsIHByb3RlY3RpdmUgc3VpdCB0aGUgQXJteSBtYWRlLiBXZSBoYWQgc29sZGllcnMgd2hvc2UgUFQgdGVzdHMgaGFkIGJlZW4gInBlbmNpbCB3aGlwcGVkIiBmb3IgdGhlIGJldHRlciBwYXJ0IG9mIGEgZGVjYWRlLiBUaGUgYW1vdW50IG9mIHdvcmsgaXQgdG9vayB0byBnZXQgdW5pdHMgcmVhZHkgdG8gZ28gdG8gd2FyIHdhcyBjcmF6eS4KVGhlIGZhbmZhcmUgd2FzIGRlZGljYXRlZCB0byBSb2JlcnQgYW5kIEFuZ2VsaW5lIFBlYXJjZSwgSm9hbm5lIEFsbCB0aGUgZmFuZmFyZXMgaGF2ZSBiZWVuIGRlZGljYXRlZCB0byBpbXBvcnRhbnQgcGVvcGxlIGluIHRoZSBoaXN0b3J5IG9mIHRoZSBvcmNoZXN0cmEuIFJvYmVydCBoYXMgYmVlbiBhIGJvYXJkIG1lbWJlciBzaW5jZSAxOTYyIGFuZCBzZXJ2ZWQgYXMgYm9hcmQgcHJlc2lkZW50LiBCdXQgYmx1ZXN5IFBoaWxhZGVscGhpYSBzaW5nZXIgU2hhcm9uIExpdHRsZSBjYXB0dXJlZCB0aGF0IGF0bW9zcGhlcmUgU2F0dXJkYXkgYXQgUHViIG9uIE1haW4gaW4gTWFjdW5naWUuCkMnZXN0IHF1YW5kID8KU2hlJ3MgbGVhcm5lZCB5b3UgY2FuJ3QgZmlsbCBvdXQgYSByZWdpc3RyYXRpb24gZm9ybSBhbmQgc2lnbiBwZXRpdGlvbnMgdGhlIHNhbWUgZGF5LCB5b3UgbXVzdCBmaXJzdCBiZSByZWdpc3RlcmVkIHdpdGggYSBjb3VudHkgY2xlcmsuIApPbmUgZGF5IEkgaG9wZSB0byBiZSBhbiBleHBlcnQgYXQgc29tZSB0aGluZyBsaWtlIHlvdSBoYXZlIHRob3VnaCwgY3liZXIgc2VjdXJpdHkgaXMgYSBncmVhdCBmaWVsZCB0byBiZSBhIG1hc3RlciBhdCEuIApGd2l3IEkgdG9vayBtaW5lIHRvIElzbGFuZCBEZXRhaWwgQ29sb3VyIGZvciBhIGRldGFpbGluZyBhbmQgdGhlaXIgcGFpbnQgc2hvcCBhZGRlZCBhIGZldyB0b3VjaCB1cHMgZm9yIHByZXR0eSBjaGVhcC4gCkVESVQ6IEkgZmVlbCBJIHNob3VsZCBwb2ludCBvdXQgdGhhdCBPUCBpcyB0aGUgc2VyaWVzIHRoYXQgZ290IG1lIGludG8gbWFuZ2EgaXRzZWxmLCByYXRoZXIgdGhhbiBqdXN0IGFuaW1lLiAKT3IgbWF5YmUgaGUgZG9lc24gbGlrZSB0aGUgaWRlYSBvZiBhIHNleCB3b3JrZXIgaW4gaGlzIGhvbWUgYmVjYXVzZSBoZSBpcyBvbGQgc2Nob29sIGFuZCB0aGlua3MgdGhleSBkaXJ0eS4gCkJ1dCBJIGhhdmVuIGZvcmdvdHRlbiB3aGF0IGl0IHdhcyBsaWtlIGdyb3dpbmcgdXAuLiAKR3JvdW5kYnJlYWtpbmc/IERlZmluaXRlbHkuIEJ1dCBmb3IgbW9zdCB2aXNpdG9ycywgd2hhdCByZWFsbHkgbWF0dGVycyBpcyB0aGF0IGl0IGFsbCBtYWtlcyBmb3IgYW4gaW52aXRpbmcgYW5kIHJlbGF4aW5nIG9sZCBGbG9yaWRhIGV4cGVyaWVuY2UuCkxhc3QgeWVhciwgYSBzdHVkeSBvZiAxMDAgbWlsbGlvbiByZWRkaXQgY29tbWVudHMgYW5kIHN1YmltaXNzaW9ucyBzaG93ZWQgdGhhdCBiYW5uaW5nIGhhdGUgY29tbXVuaXRpZXMgd29yay4KRmluYWxseSBjaGVjayBvdXQsIGhlYWQgdG8gdGhlIGNhciB0byBsZWF2ZSwgYW5kIHRoZSByb2FkIEkgbmVlZGVkIHRvIHRha2UgYmFjayBob21lIGhhZCBjbG9zZWQgZG93biBkdWUgdG8gYSBmYXRhbCBhY2NpZGVudC4gCldlIGFsbCBoYXZlIHRvIGNob29zZSB0aGUgYmF0dGxlcyB3ZSBmaWdodCwgbWFraW5nIGEgcHJpbmNpcGxlZCBwZXJzb25hbCBzdGFuZCBvbiBldmVyeSBsYXN0IHRoaW5nIGluIGxpZmUgZ2V0cyBvbGQgdmVyeSBmYXN0LnRhbGtjeW5pYyAgMSwyMDAgcG9pbnRzICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvSW4gZmFpcm5lc3MgTWVnYW4gS2VsbHkgd2FzIGZsb3VuZGVyaW5nIGF0IHRoZSBuZXR3b3JrIGZvciBhIHdoaWxlIG5vdy4gUGVyc29uYWxseSwgSSBkaWRuJ3QgZmluZCBhbnl0aGluZyBvYmplY3Rpb25hYmxlIHdpdGggaGVyIGNvbW1lbnRzIGluIGNvbnRleHQuIApMb290IGV4aXN0ZWQgYnV0IGl0IHdhcyBtb3N0bHkganVuayBjb21wYXJlZCB0byBjcmFmdGVkIHN0dWZmLiBGcm9tIHdlYXBvbnMvYXJtb3IsIHRvIGhvdXNlcyBhbmQgZmFjdG9yaWVzLCBzcGVlZGVycywgYW5kIGV2ZW50dWFsbHkgc3RhcnNoaXAgcGFydHMgd2hlbiB0aGV5IGFkZGVkIEp1bXAgdG8gTGlnaHRzcGVlZC4gRXZlbiBmYXJtaW5nIE1hbmRhbG9yaWFuIGFybW9yIG9yIGpldHBhY2tzIG1lYW50IGZhcm1pbmcgdGhlIHBhcnRzLCB3aGljaCBhIGNyYWZ0ZXIgdGhlbiBoYWQgdG8gdXNlIHRvIG1ha2UgdGhlbS5FYWNoIHJlc291cmNlIGhhZCBzdGF0cywgYW5kIHdhcyBvbmx5IGF2YWlsYWJsZSBpbiB0aGUgd29ybGQgZm9yIGEgbGltaXRlZCB0aW1lLiAKVGhlcmUgaXMgYSBsb3Qgb2YgY2hhZmYgZnJvbSBvdGhlciBhcHBsaWNhbnRzIHdpdGgga2luZGEgZHViaW91cyBvbmxpbmUgcHJvZ3JhbXMgYW5kIGNlcnRpZmljYXRlcyBpbiBkYXRhIHNjaWVuY2UuIApZb3UgbWFrZSBpdCB0aHJvdWdoLiBJZiB5b3UgZXZlciBoYXZlIGFub3RoZXIga2lkIGFmdGVyIHRoZXNlIG9uZXMsIHlvdSBoYXZlIDIgbWluaW9ucyB0byBkbyB5b3VyIGJpZGRpbmcuIApGb3IgMTUgeWVhcnMgc2hlIGVhcm5lZCBoZXIgcGxhY2UgaW4gcG9rZXIgY29tbXVuaXR5IHByZWZlcnJpbmcgdG8gcGxheSBpbiB0b3VybmFtZW50cyB3aXRoIHNtYWxsIGJ1eSBpbnMuIApSZXBlYXQ6IG5ldmVyIGJlIGhlYXJkIHRhbGtpbmcgc2hpdC4gWW91J2xsIGJlIG1vcmUgdW5pcXVlIGFuZCBhZG1pcmVkIGlmIHlvdSB3YWcgdGhlIGZpbmdlciBhZ2FpbnN0IGl0IGFueWhvdy4gVmlydHVlIHBvc3R1cmUgYmVmb3JlIHRob3NlIHdlZW5pZXMgbGVhcm4gaG93LgpMZSBuaWhpbGlzbWUgZXN0IGJpZW4gcGx1dHQgcGVucyBlbiBzb24gZXNzZW5jZSwgbGUgbW91dmVtZW50IGZvbmRhbWVudGFsIGRlIGwnSGlzdG9pcmUgZGUgbCdPY2NpZGVudC4gSWwgbWFuaWZlc3RlIHVuZSB0ZWxsZSBpbXBvcnRhbmNlIGRlIHByb2ZvbmRldXIgcXVlIHNvbiBkcGxvaWVtZW50IG5lIHNhdXJhaXQgZW50cmFuZXIgYXV0cmUgY2hvc2UgcXVlIGRlcyBjYXRhc3Ryb3BoZXMgbW9uZGlhbGVzLiAKQXQgQ2luIENpbiwgTG9yZW56byBHdWNjaSBmcm9tIHRoZSBNb250YWxjaW5vIHN1cGVyc3RhciBBbHRlc2lubyBlbnRocmFsbGVkIHRoZSByb29tIHdpdGggaGlzIEJydW5lbGxvIGRpIE1vbnRhbGNpbm8ocyksIGluIHBhcnRpY3VsYXIsIHRoZSBBbHRlc2lubyAyMDEzIEJydW5lbGxvIGRpIE1vbnRhbGNpbm8oJDU4Ljk5KS4gQWdhaW4sIHRoZSBhdHRlbnRpb24gdG8gZGV0YWlsLCB0aGUgZm9vZCwgYW5kIHRoZSBzZXJ2aWNlIGF0IENpbiBDaW4gd2FzIHNlcmlvdXNseSBvZmYgdGhlIGNoYXJ0cy4KSXQgZ290IGphenosIHNlZW1pbmdseSBBZnJpY2FuIG1vdGlmIG11c2ljIHdpdGggU3BhY2UgTGlvbiwgb3JnYW5zKFdhbGsgaW4gdGhlIFJhaW4pLCBhbmQgYSBkZWNlbnRseSB3aWRlIHZhcmlldHkgb2Ygb3RoZXIgdHlwZXMgb2YgbXVzaWMuIFNvIHRoZSBPU1Qgb2YgQmVib3AgaXMgaW5kZWVkIGluY3JlZGlibGUsIGJ1dCBpdCBub3QgYXMgY29oZXNpdmUoYW5kIHRoZXJlZm9yZSBzbGlnaHRseSBsZXNzIG1lbW9yYWJsZSkgYXMgYW4gZW50aXJlIE9TVCBieSBUaGUgUGlsbG93cyB3aGljaCByZWFsbHkgb25seSBoYXMgb25lIGNvcmUgc3R5bGUgdG8gaXQsIG9yIHNvbWV0aGluZyBsaWtlIENoYW1wbG9vIHdoaWNoLCB3aGlsZSBkb25lIGJ5IHNldmVyYWwgY29yZSBhcnRpc3RzLCBhZGhlcmVzIHRvIGEgdmVyeSBzcGVjaWZpYyBnZW5yZSBvZiBtdXNpYy4KTGV0IHNlZSB0aGUgcG9pbnRzIHRoYXQgeW91IGJvdGggZ290IHRpbGwgbW92ZSA3MywgYmVmb3JlIGFub3RoZXIgZmlnaHQgc3RhcnRlZC4gKE1heWJlIEkgbm90IHByZXR0eSBjb25jaXNlIGhlcmUpIFdoaXRlIGhhcyAxMyBwb2ludHMgaW4gdGhlIHJpZ2h0IGJvdHRvbSwgMTAgcG9pbnRzIGluIHRoZSByaWdodCB0b3AsIDkgcG9pbnRzIGluIHRoZSBsZWZ0IHRvcCwgMjIgcG9pbnRzIGluIHRoZSBsZWZ0IGJvdHRvbS4gClRob3NlIHNhbWUgbGl0dGxlIHdoaXRlIGZsYWtlcyB0aGF0IHNlbGwgbWlsbGlvbnMgb2YgZG9sbGFycyBvZiBtZWRpY2F0ZWQgc2hhbXBvbyB0byBodW1hbiBjb25zdW1lcnMgY2FuIGFmZmxpY3QgY2F0cyBhcyB3ZWxsLiBTaW5jZSBhIGNhdCBoYXMgaGFpciBhbGwgb3ZlciBoaXMgYm9keSwgZGFuZHJ1ZmYgaXMgZWFzeSB0byBzcG90LiAKV2UgYXJlIGFsbCBhd2FyZSB0aGF0IHRoZSBmZWVkIHdpbGwgbm90IGluZnJpbmdlIHVzZXIgcHJpdmFjeS4gSXQganVzdCBjb2xsZWN0cyBvdXIgcGFnZSBpbmZvIHRoYXQgd2UgcmVhZCBvbiBGYWNlYm9vaywgYW5kIG9ic2VydmVycyBhbHNvIGZvdW5kIHRoYXQgdGhlIGZvcm0gb2YgaW5mb3JtYXRpb24gZmxvdyBzaG93aW5nLCBhbGxvd3MgdXNlcnMgdG8gZWFzaWx5IGJlIGFkZGljdGVkLiBVc2VyIHJlc2lkZW5jZSB0aW1lIGlzIGluY3JlYXNlZCBzdWJzdGFudGlhbGx5LCBzbyBpdCB3aWxsIGhhdmUgc29jaWFsIGVtcGlyZSB3ZSBjYW4gc2VlIHRvZGF5LgpWaW5uaWVzIGVzcGVjaWFsbHkgYXJlIGRpZmZpY3VsdCBiZWNhdXNlIGlpcmMgdGhleSBzaG93IHVwIGluIHRoZSBtaWRkbGUgaW4gdGhlIGluZ3JlZGllbnRzIGxpc3QgaW5zdGVhZCBvZiBhcyBhIHNpZGUgbGlrZSBtb3N0IHRoaW5ncyBkbywgc28gd2hlbiB5b3UgbG9va2luZyBmb3IgY29sZCBzdHVmZiB0byBhc3NlbWJsZSBpbiB0aGUgYmFnLCBpdCBub3Qgd2hlcmUgeW91IGV4cGVjdCBpdC5JZiBpdCBhbiBpbiBzdG9yZSBvcmRlciwganVzdCBtYWtlIHN1cmUgeW91IGFzayBmb3IgaXQgYXQgdGhlIGJlZ2lubmluZyBvZiB0aGUgbGluZSBhbmQgaXQgZm9sbG93IHlvdXIgb3JkZXIgZG93biB0aGUgbGluZSwgc28gaXQgc2hvdWxkbiBiZSBmb3Jnb3R0ZW4uIE1vcmUgcGVvcGxlIHdpbGwgYmUgaW52b2x2ZWQgaW5jcmVhc2luZyB0aGUgY2hhbmNlcyBvZiBtaXNjb21tdW5pY2F0aW9uL2ZvcmdldGZ1bG5lc3MsIGFuZCB0aG9zZSBwZW9wbGUgd2lsbCBhbGwgYmUgaW4gdGhlIG1pZGRsZSBvZiBkb2luZyBvdGhlciB0aGluZ3MpIGFuZCB0aGV5IGhhdmUgbGlrZSBmb3VyIG90aGVyIHRoaW5ncyBnb2luZyBvbi4gClNhdmluZyBhIGhhbGYgYmV0IHdpbGwgcGF5IGZvciB5b3VyIG5leHQgc21hbGwgYmxpbmQuIC4uIApTZWUgYWJvdmU6IEtpa3VtYXNhbXVuZSB0aHJvdWdoIFN0cmF0aWEgTEcgZ28gaGVyZQoiIEFza2VkIGlmIHNoZSB3YXMgbGl2aW5nIGluIGZlYXIgb2YgaGVyIGh1c2JhbmQsIFJvYnluIFNjaGVyZXIgc2FpZCwgIlllYWguIApIb3cgdGhlIGNvbG91ciByZWQgd2FycHMgdGhlIG1pbmQKV0FTSElOR1RPTiAoU0JHKSBQcmVzaWRlbnQgRG9uYWxkIFRydW1wIGlzIHdvcmtpbmcgb24gZ2V0dGluZyBhIGJldHRlciBkZWFsIHdpdGggQ2hpbmEsIHJlZmxlY3RpbmcgYmlwYXJ0aXNhbiB1cmdlbmN5IHRvIHJlc29sdmUgdGhlIG9uZ29pbmcgdHJhZGUgZGlzcHV0ZSBpcyBoYXZpbmcgYSBkZXZhc3RhdGluZyBpbXBhY3Qgb24gdGhlIEFtZXJpY2FuIGVjb25vbXkuCkJ1dCB0aGlzIG9uZSwgbm9ib2R5IGhlbHBlZCB0aGVtLiAKRXhwZXJpZW5jZWQgcG9rZXIgcGxheWVycyBtYXkgc2VsZWN0IG9ubGluZSBwb2tlciB0b3VybmFtZW50cyB3aXRoIGd1YXJhbnRlZWQgcHJpemUgcG9vbCBpbiB0aGUgcmFuZ2Ugb2YgdXAgdG8gJCAxMDAsMDAwIGluIGRhaWx5IGFzc3VyYW5jZXMuIEluIGFkZGl0aW9uIHRvIHRoaXMgdGhlIGxhcmdlc3Qgb25saW5lIHBva2VyIHJvb21zIHdpdGggdGhlaXIgd2Vla2x5IGFuZCBtb250aGx5IHRvdXJuYW1lbnRzIGNhbiBvZmZlciBpbmNyZWRpYmxlIHByaXplIHZhbHVlIHVwIHRvIHRoZSByYW5nZSBvZiAkMiwgNSBtaWxsaW9uIGd1YXJhbnRlZWQuIFRoZXNlIG9ubGluZSBwb2tlciB0b3VybmFtZW50cyBjYW4gYmUgdmVyeSB1c2VmdWwgd2hlbiBjb21wYXJlZCB0byB0aGUgcmVhbCBjYXNpbm8gcG9rZXIuIFlPIGNhbiBzdGFydCB0aGUgZ2FtZSBmcm9tIGEgZmV3IGJ1Y2tzIGFuZCBnZXQgdG8gcXVhbGlmeWluZyBmb3IgdG91cm5hbWVudHMgd2l0aCBtb3JlIHRoYW4gJCAxLDAwMCwwMDAgZ3VhcmFudGVlZCBwcml6ZSB0b3VybmFtZW50LiBXaXRoIG9ubGluZSBwb2tlciByb29tcyB5b3UgY2FuIHF1YWxpZnkgcmlzayBmcmVlIHRocm91Z2ggZnJlZSByb2xsIHF1YWxpZmllcnMuCjcpIEluZmxhbW1hdGlvbiBoYXMgYSBjZW50cmFsIHJvbGUgaW4gdGhlIGRldmVsb3BtZW50IGFuZCBwcm9ncmVzc2lvbiBvZiBjb3JvbmFyeSBhcnRlcnkgZGlzZWFzZS4KVml0YW1pbiBEIEl0cyBSb2xlIGluIFdvbWVuIENoaWxkcmVuIFdoZW4gRG9nbWEgVHJ1bXBzIENvbW1vbiBTZW5zZSBQb3N0IERhdGVzICAgVGhpbmtpbmcgQWxvdWQvQWxsb3dlZCBEaXNjb3JkYW5jZSBSZXNwb25zZSB0byBBQ09HJ3MgdGhlIEFNQSdzIEhvbWViaXJ0aCBSZXNvbHV0aW9uIEJsb2cgc2lkaW5ncyBJJ20gR2V0dGluZyBNYXJyaWVkISAoYWdhaW4pIE9uZSBEb3NlIG9mIEFudGliaW90aWNzLiAKSXQncyBiZWVuIGZ1biBidXQgSSdtIG5vdCBoZXJlIHRvIGNvbnZpbmNlIGFueW9uZSBhbnl0aGluZy4gClRoZXkgd2VyZSBhbiBvaWwgYW5kIGdhcyBvbmUgdHJpY2sgcG9ueS4gClRoaXMgQWxiZXJ0YSBjb3VwbGUgaGFzIGFsbCB0aGVpciBraWRzCll1cCwgeW91IGhhdmVuIGRpc2NvdmVyZWQgd2hpY2ggc2l0dWF0aW9ucyBhcmUgZ29vZCBmb3IgYnViYmxpbmcgeWV0LiAKSW4gcXVvdGVzIGJlY2F1c2UgaW0gbm90IHNvbGQgaXRzIHRoZSAicmlnaHQgdGhpbmciIHRvIGRvLiAKVGhlIHBsZWFzdXJlIGlzIG9uIHRoZSB0aGlua2luZy4gCk1vcmdhbiBSaWVsbHksIE5pa2l0YSBaYWl0c2V2IGFuZCBNaXRjaCBNYXJuZXIsIHdpdGggYW4gZW1wdHkgbmV0dGVyLCBhbHNvIHNjb3JlZCBmb3IgdGhlIExlYWZzICg0MCAyMSA0KS4gRnJlZGVyaWsgQW5kZXJzZW4gbWFkZSAzNSBzYXZlcyBmb3IgdGhlIHdpbi4KW01dICBbc2NvcmUgaGlkZGVuXSAgc3VibWl0dGVkIDEgbW9udGggYWdvSW5pdGlhbGx5IHRoaXMgcG9zdCB3YXMgbm90IGFwcHJvdmVkLCBidXQgYWZ0ZXIgbW9kIGRpc2N1c3Npb24sIHNpbmNlIGFub3RoZXIgc2ltaWxhciBwb3N0IHdhcyBhcHByb3ZlZCwgd2UgZGVjaWRlZCB0byBhcHByb3ZlIHBvc3RzIHRoYXQgYWltIHRvIHRyeSBhbmQgaGVscCBvdXIgZmVsbG93IG1hc3NhZ2UgdGhlcmFwaXN0cy5TZWxmIGFkdmVydGlzaW5nLCBidXNpbmVzcyBhZHZlcnRpc2luZyBwb3N0cyBhcmVuIGFsbG93ZWQsIHNvIGlmIHlvdSBndXlzIHRoaW5rIGlmIHRoZXJlIGFyZSBzaW1pbGFyIHBvc3RzIHRoYXQgaGF2ZSB2ZXJ5IGhpZ2ggYWdlbmRhIGluIGFkdmVydGlzaW5nIGluc3RlYWQgb2YgdHJ5aW5nIHRvIGdpdmUgYWR2aWNlIGFuZCBoZWxwLCBwbGVhc2UgbGV0IHVzIGtub3cgdGhyb3VnaCB0aGUgcmVwb3J0IGJ1dHRvbiBvciBtZXNzYWdlIHRoZSBtb2RzLltNXSAgMCBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb3RoZSBvdGhlciBwb3N0IHdhc24gcHVzaGluZyBwcm9kdWN0cyBidXQgaXQgd2FzIGEgc2VsZiBhZHZlcnRpc2luZyBmb3IgdGhlaXIgb3duIHlvdXR1YmUgY2hhbm5lbC5ib3RoIGFyZSBzaW1pbGFyIGluIGFkdmVydGlzaW5nIHBvc3QsIGhvd2V2ZXIgd2Ugc2VlIHRoYXQgdGhlcmUgaXMgYSBwb3NzaWJpbGl0eSBpdCBjb3VsZCBiZSBiZW5lZmljaWFsIHRvIHZpZXdlcnMuaXQgZG9lcyBoYXZlIDEwIHVwdm90ZXMsIHNvIHNvbWUgcGVvcGxlIGRvIHRoaW5rIGl0IGJlbmVmaWNpYWwud2Ugd2lsbCBrZWVwIGEgZGlzY3Vzc2lvbiBiZXR3ZWVuIHRoZSBtb2RzIGFuZCBkZWNpZGUgaG93IHdlIHNob3VsZCBlbmZvcmNlIHRoaXMgcnVsZSwgaWYgYW4gYWR2ZXJ0aXNpbmcgcG9zdCBpcyBiZW5lZmljaWFsLCB0aGF0IHdlIHNob3VsZCByZW1vdmUgb3Igbm90LjggQml0QmFrZXIgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29JIGhhdmUgYWN0dWFsbHkgZm91bmQgaW4gdGhlIGxhc3QgeWVhciB0aGF0IHNhbHQgcmVhbGx5IGRvZXMgaGF2ZSBhIGRpZmZlcmVudCB0YXN0ZSB0byBpdCB2ZXJzdXMgcGxhaW4gb2xkIHRhYmxlIHNhbHQuIApDaGVyeWwgc2hlcnJvZApJZiB5b3UncmUgYSBiaWtlciwgdGhlIGJlc3QgbG9jYXRpb24gZm9yIHlvdXIgbWFuIGNhdmUgbWF5IHdlbGwgYmUgeW91ciBnYXJhZ2UuIFRoZXJlJ3Mgbm8gcmVhc29uIHlvdSBjYW4ndCBzcHJ1Y2UgaXQgdXAgd2l0aCBhbiBvcmFuZ2UgYW5kIGJsYWNrIGNvbG9yIHNjaGVtZSBhbmQgc29tZSBzd2VldCBmbGFtZSBkZXRhaWxpbmcgb24gdGhlIHdhbGxzLiAKRGVmaW5pdGVseSBub3Qgd29ydGggaXQsIGF0IGxlYXN0IGZvciBtZS4uIApGYXg6ICs0OSA2OSA3MTcxIDIyNCAzMEdhc3RhdXRvciBKIFNjaGllYiBiZXNjaCBzaWNoIGJlcnVmbGljaCBnYW56IHZpZWwgbWl0IENvbXB1dGVybi4gUHJpdmF0IHJlaXN0IGVyIGdlcm4gdW5kICAgc2VpdCBlciBWYXRlciBpc3QgICBuaWNodCBtZWhyIGdhbnogc28gdmllbC4gRXIgbWFnIERlc2lnbmhvdGVscyBtaXQgZGVtIGdld2lzc2VuIEV0d2FzICAgbWl0IGd1dGVtIFNlcnZpY2UsIHZpZWwgUnVoZSB1bmQgd2VuaWcgQW5nZWJlcm4uCkkgcmVtZW1iZXIgcGlja2luZyBpdCB1cCB3aGVuIEkgd2FzIGEgbG90IHlvdW5nZXIgYW5kIEkgcmVhbGx5IGRpZCBub3QgZnVsbHkgdW5kZXJzdGFuZCB3aGF0IEkgd2FzIHN1cHBvc2VkIHRvIGRvIG91dCB0aGUgZ2F0ZS4gCldlIGRvIG5vdCBoYXZlIGEgc3dpbW1pbmcgcG9vbCBvbiB0aGUgcHJvcGVydHkuIEhvd2V2ZXIsIGR1cmluZyBoaWdoIHNlYXNvbiwgdGhlIGJlYWNoIGlzIGV4Y2VsbGVudCBmb3Igc3dpbW1pbmcuLiAKRW4gYWNjb3JkIGF2ZWMgbGEgdHJhZGl0aW9uIGp1aXZlLCAgbGFxdWVsbGUgaWwgZXN0IGZpZGxlLCBpbCBwdWlzZSBzYSBycG9uc2UgZGFucyBsYSBUb3JhaCBvIG9uIGxpdCA6ICJbIC4gXSBjYXIgbW9pIGwnRXRlcm5lbCwgamUgc3VpcyB0b24gbWRlY2luIChyb3BoKSIgKEV4b2RlIDE1IDogMjYpLiBNYWltb25pZGUgcGVuc2UgcXVlICJzaSBEaWV1IGRpdCBxdSdpbCBzb2lnbmUsIGlsIGVzdCBwZXJtaXMgIHVuIGhvbW1lIGRlIGRldmVuaXIgbWRlY2luIGV0IGRlIHByYXRpcXVlciBzb24gYXJ0IiAoIkxhIG1kZWNpbmUgZGUgTWFtb25pZGUiLCBQci4gCkZvciBoaXMgbWFueSB5ZWFycyBvZiBjb21taXRtZW50IHRvIFN0LiBKb2huJ3MgQW5nbGljYW4gQ2h1cmNoLCBQZXRlciB3YXMgYXdhcmRlZCB0aGUgT3JkZXIgb2YgTmlhZ2FyYSBmcm9tIHRoZSBkaW9jZXNlLiBQZXRlciB3YXMgYSBkZWRpY2F0ZWQgbWVtYmVyIG9mIHRoZSBjaG9pciBhbmQgc2VydmVkIGFzIHdhcmRlbiBzZXZlcmFsIHRpbWVzLiAKTGlzdGUgZGVzIGFjcm9ueW1lcyBldCBkZXMgYWJydmlhdGlvbnMuIDE1UHJmYWNlLiAyM1BSRU1JUkUgUEFSVElFLiBMQSBESU1FTlNJT04gSE9SSVpPTlRBTEUgOiBMRVMgU0VSVklDRVMgTkFUSU9OQVVYIEVUIExFVVJTIE1USE9ERVMgREUgQ09MTEFCT1JBVElPTgpJZiB5b3UgZG9uIHdhbnQgdG8gYnJhbmNoIG91dCBpbnRvIGFuIElHIGxveWFsIDMyIChJIGRvbiBhbmQgbmV2ZXIgd2lsbCksIHRoZW4gMTAgMTUgc2NvdXRzIGlzIGEgZ29vZCBpZGVhLiBTbmlwZXIgc2NvdXRzIGFyZSBhIGxvdCBjaGVhcGVyIGFmdGVyIENBLiAKKE1heWJlIEkgc2hvdWxkIHRlbGwgaGltIHRoYXQgaGlzIGJ1cyBzdG9wIGlzIG9uIHRoZSBkcml2ZSB0byBteSBkYXVnaHRlciBkYXljYXJlIGFuZCBJIHNlZSBoaW0gdGhlcmUgZXZlcnkgYWZ0ZXJub29uIG9uIHRoZSB3YXkgdG8gcGljayBoZXIgdXAgc28gSSBrbm93IGhlIG91dCBvZiB0aGUgb2ZmaWNlIGFzIHNvb24gYXMgSSBsZWF2ZS4pLiAKWW91IHdpbGwgaGF2ZSBvdGhlciBsZW5kZXJzIHRvIGNob3NlIGZyb20uIApHcmFudGVkLCBhIHJlbGF0ZWQgYXJ0aWNsZSAobGlua2VkIGluIHRoaXMgb25lKSBkb2VzIG1lbnRpb24gImxvdyB3YWdlIGZlZGVyYWwgY29udHJhY3RvcnMiLCB3aGljaCBJIGFtIG5vdCwgYnV0IEkgY2FuIHNheSB0aGF0IEkgZG9uIGtub3cgYW55IGNvbnRyYWN0b3JzIHRoYXQgYXJlbiBnZXR0aW5nIHBhaWQgcmlnaHQgbm93LCBhbmQgYWZ0ZXIgZG9pbmcgdGhpcyBmb3IgNSB5ZWFycywgSSBrbm93IGEgZ29vZCBhbW91bnQgaW4gbXkgYXJlYS4gSW4gZmFjdCwgaGF2aW5nIGJlZW4gZG9pbmcgdGhpcyBmb3IgNSB5ZWFycywgdGhyb3VnaCBhIG51bWJlciBvZiBzaHV0ZG93bnMsIEkgbmV2ZXIgc2VlbiBhIGNvbnRyYWN0b3Igbm90IGdldCBwYWlkIGR1cmluZyBhIHNodXRkb3duLgpBbWEgdSBrYWRuIHlsZSBwb3ogdmVybWkgdGFiaWkgYnVubGFyIGRubWV5ZSBoaSBnZXJlayB5b2suIEdvb2Qgb2xkIGRheXMuIEF5bmVuIGdvb2Qgb2xkIGRheXMgdGFiaWkgYW1pbmEga295aW0uLiAKU2hlIHdhcyB3b3JraW5nIG9uIHN0cmVuZ3RoZW5pbmcgbXkgaGlwcyBhbmQgcXVhZHMgYnV0IHRob3NlIHdlcmVuJ3Qgd2VhayBpbiB0aGUgZmlyc3QgcGxhY2Ugc28gSSdtIG5vdCBzdXJlIHdoYXQgdGhlIHBvaW50IHdhcy4uIApJIGJlZW4gIm91dCBvZiBpdCIgZm9yIG92ZXIgNyB5ZWFycyBub3cgYW5kIEkgZGVzcGVyYXRlbHkgd2FudCBiYWNrIGluLgpKdXN0IGJlY2F1c2UgaHVtYW5zIHRoaW5rIHRoZXkgYXJlIGJldHRlciBkb2VzbiBtZWFuIHRoZXkgYXJlLiAKSGUgYmF0dGxlcyBvbiBzaW11bHRhbmVvdXMgc3BoZXJlcy4gCkl0IHRoZSBjb3JyZWxhdGlvbiB2ZXJzdXMgY2F1c2F0aW9uIGRpc3RpbmN0aW9uIHRoYXQgbWFueSBwZW9wbGUgZmFpbCB0byBncmFzcC4gWW91ciBkYWQgbWF5IGhhdmUgYmVlbiBhIGJhZCBwZXJzb24sIG9yIGEgZGVjZW50IHBlcnNvbiB3aG8gbWFkZSB0ZXJyaWJsZSBkZWNpc2lvbnMgdGhhdCBodXJ0IGhpcyBmYW1pbHkuIApUaGUgbGFzdCB3YXMgV29ud29vLiAKSSBmaW5pc2hlZCBGb3h5IGV4Y2VwdCBmb3IgdGhlIHRhaWwuIEkgd2FudCB0byBnZXQgc29tZSBvZiB0aGF0IHNwZWNpYWwgeWFybiB0aGF0IHdpbGwgbWFrZSBpdCBsb29rIG1vcmUgZmx1ZmZ5IGxpa2UgYSBmb3ggdGFpbCBzaG91bGQuIEJ1dCBoZSBpcyBmaW5pc2hlZCEgSSBmb3VuZCBJIGRpZG4gbmVlZCB0aGUgcGlwZSBjbGVhbmVyIGV2ZW4gdGhvdWdoIEkgdXNlZCBpdC4gSSBjb3VsZCBoYXZlIGp1c3QgbWFkZSBhIHN0cmFpZ2h0IGNpcmNsZSBhbmQgcHV0IGEgY291cGxlIG9mIHN0aXRjaGVzIGluIHRvIGJlbmQgaXQgbGlrZSBhIGhvb2suIE5pY2UgdG8ga25vdyBzaW5jZSBldmVyeW9uZSBtYWtlcyBhIGNhbmR5IGNhbmUgd2l0aCBhIHBpcGUgY2xlYW5lciBidXQgSSBmaWd1cmVkIG91dCBhIGRpZmZlcmVudCB3YXkhIFlBWSB0byB0aGUgTUUhCkdlZSwgSSB3b25kZXIgd2hhdCBraW5kIG9mIGdvdmVybm1lbnQgdGhleSB3b3VsZCBsaWtlIHRvIHNlZSBpbiBBZmdoYW5pc3Rhbj8gSSB3b25kZXIgaWYgaXQgd291bGQgaW52b2x2ZSBXYWxtYXJ0IGFuZCBNY0RvbmFsZCBub3QgdG8gbWVudGlvbiBTaGVsbCBPaWw/IEkgd29uZGVyIHdoeSB0aGUgVGltZXMgZG9lcyBub3QgaWRlbnRpZnkgaXQgYXMgYSAiY29uc2VydmF0aXZlIiB0aGluayB0YW5rPwpMYXkgb25lIHNvYWtlZCBjb3R0b24gYmFsbCBvdmVyIGVhY2ggb2YgeW91ciBhY3J5bGljIGZpbmdlcm5haWxzLgpJdCdzIGtpbmQgb2YgdGhlICJpcm9uIHNoYXJwZW5zIGlyb24iIG9mIFByb3ZlcmJzLi4gCkF1dHJlIGJvbm5lIG5vdXZlbGxlLCBsYSBQUCBtYXRyaXNlIGRzb3JtYWlzIGxlIHBobm9tbmUgZGVzIHNhdXZldHRlcyBkZSBsYSBQb3J0ZSBNb250bWFydHJlIGV0IGxlIGNhcnIgZGVzIGJpZmZpbnMgcmV0cm91dmUgc2EgZm9uY3Rpb24uIElsIG4neSBhIHBsdXMgZGUgIGZyb250aXJlICBhdmVjIGxhIFNlaW5lIFNhaW50IERlbmlzIGNhciBsZXMgZm9yY2VzIGRlIHBvbGljZSBuYXRpb25hbGUgZXQgbXVuaWNpcGFsZSBkZSBTYWludCBPdWVuIG9udCB0IG11dHVhbGlzZXMuIApZb3UgYWx3YXlzIGdldHRpbmcgaW5zaWdodHMsIGlkZWFzIGFuZCBncmVhdGVyIGRldGFpbHMsIHdoaWNoIHBlcnRhaW4gdG8gdGhlIGdvYWxzIGFsbCBvdmVyIHRoZSBkYXkuIEFmdGVyIHlvdSBkZWNpZGUgdG8gZm9jdXMgb24gdGhlIGdvYWwgc2V0dGluZyB5b3VyIGFjaGlldmVtZW50IHdpbGwgYmVjb21lIHZlcnkgbXVjaCBub3RpY2VhYmxlLiAKV2hlbiBoZXIgZmF0aGVyIHBhc3NlZCBhd2F5IHN1ZGRlbmx5IDIxIHllYXJzIGFnbywgTXMuIERhdmlkc29uIGJlZ2FuIHdvcmtpbmcgZm9yIExvYmxhdywgd2hlcmUgc2hlIGxlYXJuZWQgYWxsIHNoZSBjb3VsZCBhYm91dCB0aGUgZ3JvY2VyeSBpbmR1c3RyeSBpbmNsdWRpbmcgaG93IHRvIGJlIGEgYnV5ZXIgYW5kIGhvdyB0byBzb3VyY2UgcHJvZHVjdHMsIHdoaWNoIGxlZCB0byBoZXIgYmVjb21pbmcgYSBjYXRlZ29yeSBtYW5hZ2VyIGJlZm9yZSBtb3ZpbmcgdG8gYSByb2xlIGFzIHByb2R1Y3QgYnJhbmQgbWFuYWdlciBmb3IgUHJlc2lkZW50IENob2ljZS4gCllvdSBhcmUgeW91ciBvd24gcGVyc29uIHdpdGggeW91ciBvd24gc2tpbGxzLCB0YWxlbnRzLCBkcmVhbXMgYW5kIGdvYWxzLiBBbHdheXMgZG8gdGhlIGJlc3QgdGhhdCB5b3UgY2FuIG5vdCBvbmx5IGZvciB5b3Vyc2VsZiBidXQgZm9yIG90aGVycy4gSGF2aW5nIGFuIGlubmVyIGNvbmZpZGVuY2UgaXMgd2hhdCB3aWxsIG1ha2UgeW91IGZlZWwgc2V4eS4uIApQYXIgZXhlbXBsZSwgbGUgY2hpZmZyZSB0cm9pcyBlc3QgbCd1biBkJ2VudHJlIGV1eC4gTWFpcyBpbCBlbiBleGlzdGUgYmllbiBkJ2F1dHJlcyBlbmNvcmUsIHF1ZSBub3VzIGF1cm9ucyBsJ29jY2FzaW9uIGRlIHJlbmNvbnRyZXIgYXUgZnVyIGV0ICBtZXN1cmUgZGUgbm9zIHByZ3JpbmF0aW9ucyBxdWkgbm91cyBtbmVyb250IHBhcm1pIGxlcyBwbGFudGVzIHF1J2Ficml0ZSBsZSBib2lzIHNhY3IgZGUgbGEgZGVzc2UuLiAKQWgsIHRoYXQgd2hlcmUgeW91IHdyb25nLiBUaGV5IHNhaWQgc2hlIHdhcyBzaG90IG11bHRpcGxlIHRpbWVzLCBub3QganVzdCB0d2ljZSBpbiB0aGUgc2t1bGwuIFRoZXkgcmVjb3ZlcmVkIDEwIHNoZWxsIGNhc2luZ3MuIFRoZXkgbmV2ZXIgc2FpZCB0aGF0IHNwZWNpZmljIGJ1bGxldCB3YXMgb25lIG9mIHRoZSB0d28gdGhhdCB3ZW50IHRocm91Z2ggaGVyIHNrdWxsLiBZb3UgY2FuIHNlYXJjaCB0aGUgdHJpYWwgdHJhbnNjcmlwdHMgeW91cnNlbGYgaWYgeW91IGxpa2UgIG5ldmVyIGhhcHBlbmVkLiBUaGVyZWZvcmUgdGhlIGJ1bGxldCBub3QgaGF2aW5nIGJvbmUgZnJhZ21lbnRzIGlzIG1lYW5pbmdsZXNzLgpTaG91bGRuIHlvdSBhbHNvIGJveWNvdHQgdGhlIGNvbXBhbmllcyB0aGF0IGJ1eSB0aGVpciBvaWwgZm9yIG5vbiBmdWVsIHB1cnBvc2VzPyBDaGVtaWNhbHMsIHBsYXN0aWNzLCBwaGFybWFjZXV0aWNhbHM/IEhvdyBhYm91dCB0aGlyZCB0aWVyIHB1cmNoYXNlcnMgbGlrZSBmYXJtcyB0aGF0IGJ1eSBmZXJ0aWxpemVyIG1hZGUgZnJvbSBwZXRyb2xldW0gYmFzZXM/CldlIHB1bGxlZCBCYXJyeSBmcm9tIGEgY291bnR5IHNoZWx0ZXIgaW4gYSBzbWFsbCB0b3duIGNhbGxlZCBDb2xsaWVydmlsbGUgaW4gVGVubmVzc2VlLiAKTXkgcXVhcnJlbHMgd2l0aCB0aGUgZ2FtZSBoYXZlIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGUgZ2VucmUgb2YgZ2FtZS4gCkhhcyBhIHZlcnkgZ2VuZXJvdXMgcG9pbnRzIHN5c3RlbSAgIEkgdXNlZCB0aG9zZSBwb2ludHMgYW5kIGZyZWUgbmlnaHRzIHRvIHBheSBmb3IgaG90ZWwgcm9vbXMgZHVyaW5nIGludGVydmlld3M7IGl0IGVhc3kgdG8gZmluZCBhIHJvb20gZm9yIDE1ayBvciBmZXdlciBwb2ludHMsIGFuZCBtb3N0IG9mIHRoZSB0aW1lIHRoZXJlIGEgNTBrIHBvaW50IHNpZ24gdXAgYm9udXMgb24gdGhlIGNhcmQuIENhbiB3YWl0IHRvIGJlIGp1c3Qgb25lIHJ1bmcgaGlnaGVyIG9uIHRoaXMgdG90ZW0gcG9sZSBhbmQgdHJlYXQgbXkgTTRzIHdpdGggc3ltcGF0aHkuIDE5IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJIHF1ZXN0aW9uIHRoZSBjaGFyYWN0ZXJpemF0aW9uIG9mICJ3aGl0ZSBwZW9wbGUgam9rZXMiIGFzIGEgcHJvYmxlbS4gCkJyb2tlIG15IHJlbGF0aW9uc2hpcCB3aXRoIGV4IGJlY2F1c2Ugb2YgbXkgZGVwcmVzc2lvbiwgY291bGRuIHN0YW5kIHNlZWluZyBoZXIgYmVpbmcgdW5oYXBweSBrbm93aW5nIGkgYW0gdGhlIHJlYXNvbiBmb3IgdGhhdCwgYWZ0ZXIgaSB0b2xkIGhlciBhYm91dCBzdWljaWRhbCB0aG91Z2h0cyBzaGUgc3RhcnRlZCBsb29raWNuZyBhdCBtZSBkaWZmZXJlbnRseS4gSSBkaWRudCB3YW50IHRvIGJlIHRoZSByZWFzb24gZm9yIGhlciBsaWZlIGdvaW5nIGRvd25oaWxsIGxpa2UgbWUgc28gaSBsZXQgaGVyIGdvLiBTaGUgY2FuIGhhdmUgYW4gYXdlc29tZSBsaWZlIGJlY2F1c2Ugc2hlIGlzIGFuIGF3ZXNvbWUgZ2lybCBhbmQgaSB3aWxsIHJvdCBhd2F5IGJlY2F1c2UgdGhhdHMgdGhlIGxpZmUgaSBjaG9zZS4gRmFzdCBmb3J3YXJkIDIgeWVhcnMgYW5kIGkgc28gZGVlcCBpbnRvIHRoZSBkZXByZXNzaW9uIGFieXNzIHRoYXQgaSBjYW50IGZpbmQgYSB3YXkgYmFjay4KQmVhbCBhbHNvIGFkZGVkIGFub3RoZXIgYXNzZXQgdG8gaGlzIHJlYWwgZXN0YXRlIHBvcnRmb2xpbyBlYXJsaWVyIHRoaXMgbW9udGggd2hlbiBoZSBmb3JrZWQgb3V0ICQxMDAgbWlsbGlvbiBmb3IgYSAyOCwwMDAgc3F1YXJlIGZvb3QgbWFuc2lvbiBpbiBEYWxsYXMgb3duZWQgYnkgVG9tIEhpY2tzLCBmb3JtZXIgY28gb3duZXIgb2YgdGhlIERhbGxhcyBTdGFycyBhbmQgVGV4YXMgUmFuZ2Vycy4KIlRoZXJlIHdlcmUgdHdvIGVwaXNvZGVzIGluIHRoZSAxOTgwc3doaWNoIHdlcmUgZGVzY3JpYmVkIGJ5IGEgZ3JvdXAgZnJvbSBNZWxib3VybmUgVW5pdmVyc2l0eSxhbmQgSSd2ZSBiZWVuIGF3YXJlIG9mIGl0IHNpbmNlIHRoZW4uIApTdGV2ZSBXb3puaWFrICAgQ28gZm91bmRlciBvZiBBcHBsZQpZb3Ugc2FpZCBpdCB3YXMgdGhlIEJCIHdobyAzIGJldCB5b3UgcHJlIGFuZCB5b3Ugd2VyZSBVVEcuIApNb3N0IG9mIHRoZSBjYXB0YWlucyB0aGF0IGFyZSBzaG9vdGluZyBhdCB5b3UgY2FuIGJlIGRlYWx0IHdpdGggYnkgcmFuZ2VkIGRhbWFnZS4gUG9pc29uIEFycm93cyBhcmUgdGhlIGJlc3QsIHNpbmNlIHlvdSBjYW4gZmlyZSBvZmYgZm91ciBpbiBvbmUgZ28sIHRoZW4gc3RhbmQgYmVoaW5kIGEgcGlsbGFyIChvciBiZWhpbmQgeW91ciBzaGllbGQpIGFuZCBibG9jayB0aGUgMSAyIHNob3RzIHRoZXkgZ2V0IG9mZiBiZWZvcmUgdGhleSBkaWUuIApVbHRpbWF0ZWx5LCBJIGZlbHQgbWl4ZWQgYWJvdXQgYWxsIHRoaXMgbmV3cy4gClRoZSBBQyBsYXN0IHllYXIgd2FzIGEgZ29vZCBleGFtcGxlIG9mIHR5cGljYWwgQW1lcmljYW4gZXhhZ2dlcmF0ZWQgd2F5cyB3aGVuIHRoZSBjcm93ZCByYW5kb21seSBzdGFydGVkIHNob3V0aW5nICJVU0EgVVNBIFVTQSIgb24gU2hhdyB0aGlyZCBkZWFkbGlmdC4gVGhpcyBpcyBzZWVuIGFzIGNvbXBsZXRlbHkgcmlkaWN1bG91cyBiZWhhdmlvciBieSBvdGhlciBjb3VudHJpZXMsIGFuZCB0aGlzIGJhcnJpZXIgaXMgd2h5IHBlb3BsZSBzZWVtIHRvIHRoaW5rIFRob3IgaXNuIHN1cHBvcnRpdmUganVzdCBiZWNhdXNlIGhlIGlzbiBqdW1waW5nIGluIHRoZSBhaXIgYW5kIGNsYXBwaW5nIHdoaWxlIGNyeWluZyB3aGVuIGEgZmVsbG93IHN0cm9uZ21hbiBjb21wbGV0ZXMgYSBsaWZ0Li4gCkkgYW0gb24gdGhlIGludGVybmV0IGFueXdheSwgbWlnaHQgYXMgd2VsbCBzcGVhayB0byBvbGQgZnJpZW5kcyBhbmQgc2VlIHdoYXQgdGhleSBhcmUgZG9pbmcuIE1heWJlIEkgY2FuIGdldCBvbmUgdGhhdCBsaXZlcyBoZXJlIGluIHRvd24gdG8gZ28gd2l0aCBtZSBmb3IgY29mZmVlLiBObyBzdWNoIGx1Y2sgdGhleSBhbGwgaGF2ZSBsaXZlcy4gUGVvcGxlIGFyZSBhbHdheXMgdG9vIGJ1c3kgd2hlbiBzb21lb25lIHJlYWxseSBuZWVkcyBhIGRpc3RyYWN0aW9uIGZyb20gcmVhbGl0eS4KVGhlIHRoaXJkIG1ldGhvZCBJbnRlcm5ldCBwb2tlciBzaXRlcyBkbyBpcyB0byBvYnRhaW4gbGljZW5zZXMgZnJvbSBLYWhuYXdha2UgR2FtaW5nIENvbW1pc3Npb24sIGEgcmVndWxhdG9yeSBhZ2VuY3kgd2hpY2ggcmVxdWlyZXMgSW50ZXJuZXQgcG9rZXIgc2l0ZXMgdG8gY29tcGx5IHdpdGggcmVndWxhdGlvbnMgc28gdGhhdCB0aGV5IGNhbiBnZXQgdGhlaXIgbGljZW5zZSBhbmQgbWFpbnRhaW4gdGhpcyB0byBhdm9pZCBpdCBmcm9tIGJlaW5nIHN0cmlwcGVkLi4gCk1hZGUgYnkgbWFya2V0IGxpc3RlZCBzbG90cyBtYW51ZmFjdHVyZXIgQXJpc3RvY3JhdCwgRG9scGhpbiBUcmVhc3VyZSBpcyBqdXN0IG9uZSBvZiBhbnkgbnVtYmVyIG9mIHBva2VyIG1hY2hpbmUgYnJhbmRzIHRoYXQgYXJlIGF2YWlsYWJsZSB0byBBdXN0cmFsaWFuIHB1bnRlcnMuIApIZWxsIGV2ZW4gdGhlIGd1eSB0aGF0IG9ubHkgd29uIDIzIG91dCBvZiAyNiBpc24gbHVjay4gWW91IGRvbiB3aW4gdGhhdCBtdWNoIGFuZCBjYWxsIGl0IGx1Y2suIAoiV2VsY29tZSB0byB0aGUgbmV3IGVyYSBpbiBzcGFjZWZsaWdodCwiIGhlIHNhaWQuCk9uIHByc3VtZSBhbG9ycyBsYSBuYWlzc2FuY2UgcGVuZGFudCBsYSBwcmlvZGUgZHUgMzAwZSBhdSAxODBlIGpvdXIgYXZhbnQgY2VsbGUgY2kgKGFydC4uIApJIHRoaW5rIGEgbG90IG9mIHJldGFpbCBidXNpbmVzc2VzIGRvbiB0ZWxsIHRoZWlyIGVtcGxveWVlcyB0aGVzZSB0aGluZ3MgYW5kIEkgdGhpbmsgaXQgd291bGQgaG9uZXN0bHkgaGVscCB0aGVtIHVuZGVyc3RhbmQgdGhlc2Ugc2l0dWF0aW9ucyBiZXR0ZXIgaWYgdGhleSBkaWQuLiAKRmlyc3QgaXQgY2FuIHRha2Ugd2Vla3MgZm9yIGVsZWN0aW9uIHJlc3VsdHMgdG8gYmUgb2ZmaWNpYWxseSBjZXJ0aWZpZWQuIFRoZW4gaXQgdGFrZXMgdGltZSBmb3IgbmV3IGFkbWluaXN0cmF0aW9ucyBhbmQgbGVnaXNsYXRvcnMgdG8gZ2V0IGV2ZXJ5dGhpbmcgc2V0IHVwLiBTdGFmZiBoYXZlIHRvIGJlIGhpcmVkIGFuZCB0cmFpbmVkLiBOZXcgbWVtYmVyIG9mIENvbmdyZXNzIGhhdmUgdG8gZ28gdGhvdWdoIG9yaWVudGF0aW9ucyBhbmQgYmUgYnJvdWdodCB1cCB0byBzcGVlZC4gT3V0IGdvaW5nIGxlZ2lzbGF0b3JzLCBlc3BlY2lhbGx5IG9uZXMgd2hvIGxvc3QgdGhlIGVsZWN0aW9uIGFuZCB3ZXJlbiBqdXN0IHJldGlyaW5nLCBoYXZlIHRvIHRpZSB1cCBsb29zZSBlbmRzLCBwYWNrIHVwIG9mZmljZXMgYW5kIG1vdmUgZXZlcnl0aGluZyBvdXQuIFBsdXMgdGhlcmUgdGhlIFRoYW5rc2dpdmluZyBhbmQgd2ludGVyIGhvbGlkYXlzIHRoYXQganVzdCBzbG93IGV2ZXJ5dGhpbmcgZG93biBhbnl3YXkuCkxpa2UgbG9vayBhdCB5b3VyIHBhbG0sIG5vdyBncmlwIGxpa2UgeW91IGhhZCB5b3VyIGhhbmRzIGluIHlvdXIgYm93bGluZyBiYWxsLCB5b3VyIHdyaXN0IHNob3VsZCBuYXR1cmFsbHkgY3VwLiAKSXQgaW5jbHVkZXMgd29yZCBjaG9pY2Ugd29yZCBjb25ub3RhdGlvbnMsIHB1bmN0dWF0aW9uLCBjYXBpdGFsaXphdGlvbiwgZm9ybWFsaXR5LCBhbmQgb3RoZXIgbGluZ3Vpc3RpYyBhc3BlY3RzLlRvbmUgY2FuIGJlIGdlbmVyYWxseSBiZSBzb2Z0ZW5lZCBieSBhZGRpbmcgY29udGV4dCwgYnkgY2hvb3NpbmcgeW91ciB3b3JkcyBtb3JlIGNhcmVmdWxseSwgYW5kIGJ5IHJlcmVhZGluZyB5b3VyIGNvbW1lbnRzIGJlZm9yZSBwb3N0aW5nLiAKSW4gYmV0d2VlbiBtYW55IG9mIHRoZXNlIHN0ZXBzIGlzIGRyeSB0aW1lcy4gQW55IHRpbWUgSSBwYXN0aW5nIEkgYWx3YXlzIHVzaW5nIHNjcmFwIHBhcGVyIG9uIHRoZSBvdGhlciBzaWRlIGFzIHRvIG5vdCBnZXQgbW9pc3R1cmUgaW50byB0aGUgdGV4dCBibG9jay4gCk1lcmtlbCBzYWlkIFdlZG5lc2RheSB0aGF0IGxlYWRlcnMgbmVlZCB0byB3b3JrIGFnYWluc3QgZnJhZ21lbnRhdGlvbiBvZiB0aGUgaW50ZXJuYXRpb25hbCBhcmNoaXRlY3R1cmUuIGRheXMgc29tZSB0aGluayBpdCBiZXN0IGV2ZXJ5b25lIHRoaW5rcyBvbmx5IGFib3V0IGhpbXNlbGYsIHNoZSBzYWlkLiBoYXZlIGRvdWJ0cyBhYm91dCB0aGF0LiBzYWlkIGVmZm9ydHMgdG8gY29tYmF0IGdsb2JhbCBwcm9ibGVtcyBvbmx5IGZ1bmN0aW9uIGlmIHdlIGFyZSBhYmxlIHRvIGNvbXByb21pc2UsIGNpdGluZyBhcyBleGFtcGxlcyBvZiBjb29wZXJhdGlvbiB0aGUgZnJlZSB0cmFkZSBkZWFsIGJldHdlZW4gdGhlIEVVIGFuZCBKYXBhbiB0YWtpbmcgZWZmZWN0IEZlYi4gMS4KVGhpc3RsZURvd24gaXMgcXVhZHJ1cGxpbmcgdGhlIHNpemUgb2YgaXRzIHBhdGlvLCBhbiBvdXRkb29yIHBhdmlsaW9uIHdoZXJlIGdhbWJsZXJzIGNhbiBzbW9rZSBhbmQgd2F0Y2ggdGhlIGhvcnNlIHJhY2luZyB3aGlsZSB0aGV5IGdhbWJsZS4gU2hhbm5vbiBNb3J0bGFuZCwgcHVibGljIHJlbGF0aW9ucyBtYW5hZ2VyIGZvciBIb3JzZXNob2UgQ2FzaW5vIENsZXZlbGFuZCBhbmQgVGhpc3RsZURvd24sIHNhaWQgdGhlIGV4cGFuc2lvbiB3aWxsIGFkZCA5NyBWTFRzIHRvIHRoZSBjdXJyZW50IDMyIG1hY2hpbmVzLiAKRGVzIHZhY2FuY2VzLCBvdWksIG1haXMgcGFzIGVuIGF2aW9uLiBBdSBwaXJlLCBlbiBjaGFyIGRlIHBvIGJvaXMuCkN1cnJlbnQgRDEgcnVubmVyIGhlcmUuIFRoZSBzcGVjaWZpY3Mgb2YgZW52aXJvbm1lbnQgYW5kIHdvcmtsb2FkIHdpbGwgdmFyeSBmcm9tIHNjaG9vbCB0byBzY2hvb2wgYW5kIGRpdmlzaW9uIHRvIGRpdmlzaW9uLCBzbyBpdCBkZXBlbmRzIHByZXR0eSBoZWF2aWx5IG9uIHlvdSBhbmQgdGhlIHNjaG9vbCB5b3UnZCBiZSBydW5uaW5nIGF0LiBJZiB5b3UgbG92ZSBydW5uaW5nIGFuZCB3b3VsZCBzdGlsbCBydW4gcmVnYXJkbGVzcyBvZiB3aGV0aGVyIHlvdSB3ZXJlIG9uIGEgdGVhbSBvciBub3QsIHlvdSBtaWdodCBhcyB3ZWxsIGdpdmUgaXQgYSB0cnkuIFlvdSBjYW4gYWx3YXlzIGxlYXZlIHRoZSB0ZWFtIGlmIGl0J3Mgbm90IHdoYXQgeW91J3JlIGludG8uCkkgd2FzIHJlbGlldmVkIG15IGxlZ3Mgd2VyZSBzdGlsbCB3b3JraW5nLiAKVGhlIGdvYWwgaXMgdG8gZXZlbnR1YWxseSBiZSBwbGF5aW5nIDUvMTAgaGFoYSwganVzdCBkb24ndCBrbm93IHdoZXJlIG15IHNraWxsIHN0YWNrcyB1cCBhbmQgZG9uJ3QgaGF2ZSB0aGUgYmFua3JvbGwuIEkgaGF2ZSBhIGRheSBqb2IgYW5kIGFsbCwgc28gSSdtIG5vdCBkb2luZyBiYW5rcm9sbCBtYW5hZ2VtZW50IG91dCBvZiBuZWNlc3NpdHksIGJ1dCBtb3JlIGFzIGEgY2hhbGxlbmdlIGFuZCAiZG9pbmcgaXQgcHJvcGVyIi4gSSB3YW50ZWQgdG8gc3RhcnQgYXQgMS8zIGFuZCB0cnkgdG8gc2VlIGhvdyBmYXIgSSBjb3VsZCBidWlsZCBhIHJvbGwgc29sZWx5IGRlZGljYXRlZCBmb3IgcG9rZXIuIApNeSBxdWVzdGlvbiBpczogd291bGQgaXQgYmUgd2lzZSB0byBzcGVuZCBhIGJpdCBtb3JlIGFuZCBnZXQgYSBQQ0llIHRvIE0uMiBhZGFwdGVyIGxpa2UgdGhpcyBhbmQgcHV0IGEgc21hbGwgc2l6ZWQgTlZNZSBTU0Qgb24gdGhlcmUgKGZvciBleGFtcGxlIDMyIG9yIDY0R0IpIHRvIHB1dCBGcmVlTkFTIG9uLiBCdXQgSSBqdXN0IGdvdCBhIHJlcGx5IGluIG15IEZyZWVOQVMgZm9ydW1zIHRocmVhZCB0aGVyZSB3b3VsZCBiZSBubyBiZW5lZml0IGZyb20gdXNpbmcgdGhpcyBhcyBhIGJvb3QgZGV2aWNlIG92ZXIgYSBVU0Iga2V5Li4gCkkgcG9wIG91dCwgYW5kIHNlZSBzYWlkIHR3ZWVuYWdlciBwYXJrb3VyKCEhISkgaGlzIHRhaWwgb3ZlciBvbmUgb2YgdGhlIGZpdHRpbmcgYmVuY2hlcy4gCkxhIGNvbmNvcmRhbmNlIGRlIGNlcyBkZXV4IGRvbm5lcyBhIGZhaXQgbmF0cmUgbCdpZGUgZCd1biBicnVuY2ggaW5kaWVuIChxdWkgYSByZXNzZW1ibCBlbiBmYWl0IGRhdmFudGFnZSAgdW4gZGpldW5lcikuIERlIHBsdXMsIGNlbGEgcyd0YWl0IGlsIGltcHJpbSBkYW5zIG1vbiBpbmNvbnNjaWVudCBvdSBwdXIgaGFzYXJkLCBqZSBkY291dnJlIHF1ZSBsJ21pc3Npb24gT24gdmEgZGd1c3RlciBkZSBGcmFuY2UgSW50ZXIgdGFpdCBqdXN0ZW1lbnQgY29uc2FjcmUgbGUgbW1lIGpvdXIgIGxhIGN1aXNpbmUgaW5kaWVubmUgZXQgcXVlLCBwYXJtaSBsZXMgaW52aXRzLCBpbCB5IGEganVzdGVtZW50IEJlZW5hIFBhcmFkaW4uLiAKRXRoZXJldW0gaXMgZ2V0dGluZyBtb3JlIHRyYWRpbmcgcGFpcnMgbm93IGFuZCBjbG9zaW5nIGluIG9uIGJpdGNvaW4gYXMgb25lIGRheSBvdGhlciBjb2lucyB3aWxsIGJlIHRyYWRpbmcgd2l0aCBhbnkgY29pbi4gCkN1bW1pbnMgaXMgY3VycmVudGx5IHRoZSBmYXN0ZXN0IHJlY29yZGVkIHJvYWQgcmFjZXIgaW4gdGhlIHdvcmxkIGZvbGxvd2luZyBoaXMgZXhwbG9pdHMgYXQgbGFzdCB5ZWFyJ3MgVWxzdGVyIEdyYW5kIFByaXggYW5kIGlzIG9uZSBvZiB0aGUgbGVhZGluZyBjb250ZW5kZXJzIGZvciBob25vdXJzIGF0IHRoZSAyMDEwIFRUIHJhY2VzIG9uIHRoZSBNY0Fkb28gS2F3YXNha2kuClpnZXJuZCBiZWdhbm4gc2llIGlocmUgZXJzdGUgTWFpbCBhbiBkaWVzZW4gRG9jIENhcmxvcy4gRGFzcyBzaWUgc2ljaCBnYXIgbmljaHQgc2ljaGVyIHNlaSwgb2Igc2llIGRlbm4gZGFzIHdpcmtsaWNoIHJlYWwgZXJsZWJlbiBtY2h0ZS4gClNvIGl0IGlzIGEgdGhlYXRyaWNhbCBzdGFnZSwgd2l0aCBjdXJ0YWlucyByaXNpbmcgdG8gcmV2ZWFsIHRoZSBjaGFyYWN0ZXJzIGF0IGJyZWFrZmFzdCBhbmQgdHJhaW4gam91cm5leXMgaW4gZnJvbnQgb2YgcGF0ZW50bHkgZmFrZSBiYWNrZHJvcHMuIApNaW5pbXVtIHJhaXNlIGZvciBwbGF5ZXIgQiBpcyBub3cgJDYwIChpbiBzb21lIHNlbnNlLCBwbGF5ZXIgQSB3YXMgInJhaXNpbmciIGEgemVybyBkb2xsYXIgYmV0IGJ5ICQzMCwgc28gcGxheWVyIEIgbXVzdCBkbyBhdCBsZWFzdCB0aGUgc2FtZS4pIGlmIHBsYXllciBCIHJhaXNlcyB0byAkNjAsIHRoZSBuZXh0IHBsYXllciwgd2hldGhlciBpdCBpcyBQbGF5ZXIgQSBvciBwbGF5ZXIgYywgd291bGQgYmUgYWxsb3dlZCB0byByYWlzZSB0byBhcyBsaXR0bGUgYXMkOTAgaWYgdGhleSBlbGVjdCB0byByYWlzZS4uIApDZXR0ZSBhc2NlbnNpb24sIGMgY2UgcXVpIHZhIHBlcm1ldHRyZSBkZSBkaXN0aW5ndWVyIGxlcyBjaGFtYW5zICBkZSBsYSBncmFuZGUgbWFzc2UgZGVzIHByb2ZhbmVzIGV0IGRlcyBub24gaW5pdGlzIDogaWxzIHBldXZlbnQgcG50cmVyIGRhbnMgbGVzIHJnaW9ucyBvdXJhbmllbm5lcywgc2F0dXJlcyBkZSBzYWNyLCBldCBkZXZlbmlyIHNlbWJsYWJsZXMgYXV4IGRpZXV4ICAoNCksIGF2ZWMgbGVzcXVlbHMgaWxzIHBldXZlbnQgZHNvcm1haXMgY29tbXVuaXF1ZXIsIGFwcnMgcyBsZXZzLCByaXR1ZWxsZW1lbnQgZXQgY3Jtb25pZXVzZW1lbnQsICB0cmF2ZXJzIGxlcyBkaXZlcnNlcyBzcGhyZXMgcGxhbnRhaXJlcyBldCBjbGVzdGVzLiAKSG93IFRvIEhhdmUgVGhlIE1vc3QgRnVuIFBsYXlpbmcgSG9sZGVtIFBva2VyIEF0IEhvbWUKVGhlcmUgYXJlIHRoZSBjZXJ0YWluIHRpbWVzIHdoZW4gdGhlIHNhbWUgbW9kIG1heSByZXBseSwgYnV0IHRoYXQgaXMgZ2VuZXJhbGx5IHRvIGFzY2VydGFpbiB5b3VyIG5lZWQsIGFuZCB0byBsZXQgeW91IGtub3cgdGhhdCB3ZSd2ZSBzZWVuIHlvdXIgbWVzc2FnZSBhbmQgaGF2ZSBoaWdobGlnaHRlZCBpdCBmb3IgdGhlIG90aGVyIG1vZGVyYXRvcnMuLiAKSXQgbWFrZXMgdXMgZmVlbCBpbnNlY3VyZSBhYm91dCBvdXJzZWx2ZXMsIGNyZWF0ZXMgYXJ0aWZpY2lhbCBuZWVkcyBmb3IgY29uc3VtcHRpb24sIGFuZCBzbyB3ZSBidXkgaXQuLiAKTWF5YmUsIGluIGEgd2F5IG9mIGxvb2tpbmcgYXQgaXQuIEhvd2V2ZXIsIHdpdGggdGhhdCwgSSBjYW4gaGVscCBidXQgYnJpc3RsZSBhdCBiaXQgYXQgYW4gaW1wbGllZCBmYWxzZSBlcXVpdmFsZW5jeSBoZXJlLCBpbiB0aGlzIGlkZWEgb2YgdGhlIFVTIGFuZCBSdXNzaWEgYmVpbmcgbW9yYWxseSBlcXVhbC4gVGhlIFVTIGhhcyBub3QgZm9yY2VkIGFueXRoaW5nIG9uIFJ1c3NpYSwgaXQgdGhlIGZvcm1lciBTb3ZpZXQgVW5pb24gc2F0ZWxsaXRlcyBhbmQgY29uc3RpdHVlbnRzIHRoYXQgaGF2ZSBhbHdheXMgYW5kIHNvIGRlc3BlcmF0ZWx5IHdhbnRlZCBvdXQgb2YgdGhpcyBJbiB0aGF0IHdheSwgbWF5YmUgdGhlIHRocmVhdCBSdXNzaWEgcG9zZXMgaXNuIHNvIHNwZWNpZmljIG9yIGRpc2NyZXRlIGFzIHRoZSBjb21wbGV0ZSBhbm5paGlsYXRpb24gb2Ygb25lIHBlb3BsZSBvciBuYXRpb24gb3IgYW5vdGhlciwgYnV0IG1vcmUgbmVidWxvdXMgYW5kIGRpZmZ1c2VkLCBhdCB0aGUgZXhwZW5zZSBvZiB0aGUgd29ybGQgYXMgYSB3aG9sZS4KRGVhbCBNci4gCkFuZCBUaGFuayB5b3UgQ2FzZSBGaWxlIFJldmlld2VyISEhLiAKTXIuIEhlaXIgZ2V0cyAxNiB3ZWVrcyBmdWxseSBwYWlkISBJJ20gY2hvb3NpbmcgdG8gc2VlIGl0IGFzIGEgbWFqb3IgcGx1cyB0aGF0IGhlIGdldHMgdG8gYmUgbXIuIG1vbSBmb3IgYSBtb250aC4gU2hvdWxkIGdpdmUgaGltIGEgcmVhbGx5IGdvb2QgaWRlYSBvZiB3aGF0IGl0J3MgbGlrZSBiZWluZyBob21lIHdpdGggYmFieSBhbGwgZGF5IQpUaGUgbGFjayBvZiB0ZWFycyBhcmUgbm90IGEgc2lnbiB0aGF0IGVtb3Rpb25hbCBoZWFsaW5nIGhhcyBub3Qgb2NjdXJyZWQuLiAKSWYsIGluc3RlYWQsIHdlIHRheGVkIHRoZSBzaGl0IG91dCBvZiB0aGVtLCB0aGUgZ292ZXJubWVudCB3b3VsZCBmdW5kIHByb2dyYW1zIHRvIGhlbHAgY2xvdGhlLCBmZWVkLCBhbmQgaG91c2UgcGVvcGxlLiBUaGlzIHdvdWxkIGluY3JlYXNlIGRlbWFuZCBmb3IgdGhlc2UgaXRlbXMsIHNvIGNvbXBhbmllcyB3b3VsZCByYW1wIHVwIHByb2R1Y3Rpb24gdG8gbWVldCB0aGF0IGRlbWFuZC4gCkluIG90aGVyIHdvcmRzLCAiaWYgeW91IGRvbiB3YW50IHRoZSBpdGVtcywgZG9uIGJ1eSB0aGVtIi4gClRoZSB0d28gRGFsbGFzIEh5YXR0IGhvdGVscyBhcmUgc2VwYXJhdGVkIGJ5IGEgcnVud2F5LCB3aGljaCBtYWtlcyB0aGUgdmlldyBmcm9tIHRoZSByb29mdG9wIHBvb2wgYXQgZWl0aGVyIGhvdGVsIHByZXR0eSBzcGVjdGFjdWxhci4gVGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgdHdvIGhvdGVscyBpcyBsb2NhdGlvbiBhbmQgcHJpY2UuIFRoZSBHcmFuZCBIeWF0dCwgdGhlIG1vcmUgZXhwZW5zaXZlIG9mIHRoZSB0d28sIGlzIGluc2lkZSB0aGUgYWlycG9ydCBhdCB0aGUgZW50cmFuY2UgdG8gVGVybWluYWwgRC4gCkkgaGF2ZSBiZWVuIGludG8gZml0bmVzcyBhbmQgaGVhbHRoIHNpbmNlIGNoaWxkaG9vZCBhbmQgc3dhbSBjb21wZXRpdGl2ZWx5IHRocm91Z2gganVuaW9yIGhpZ2ggYW5kIGhpZ2ggc2Nob29sLiAKQyByZWFsbHk/IFdlIGRvbiBrbm93IHRoZSB3aG9sZSBzdG9yeSBoZXJlLiBCYXNlZCBvbiB0aGF0IGFsb25lIG5vbmUgb2YgdXMgY2FuIGdpdmUgcHJvcGVyIGFkdmljZS4gSWYgeW91IHdhbnQgdG8gZ2l2ZSBhIGtpZCBhIHRlZGR5IGJlYXIgdG8gbWFrZSBoaW0gZmVlbCBiZXR0ZXIgSSB0aGluayBpdCBhIGRpc3NlcnZpY2UgdG8gbm90IG9ubHkgaGltIGJ1dCBzb2NpZXR5IGluIGdlbmVyYWwuIEZhbWlsaWVzIGFyZSBzdXBlciBjb21wbGljYXRlZC4gSSBtYXkgbm90IGJlIHJpZ2h0IGJ1dCBpbiB0aGUgbG9uZyBydW4gSSBiZXQgSSBjbG9zZXIgdG8gdGhlIHRydXRoIHRoYW4geW91IGFyZS4gVHVybmluZyBhIGtpZCBhZ2FpbnN0IGhpcyBvd24gYmxvb2Qgd2l0aG91dCB0aGUgd2hvbGUgc3RvcnkgaXMgbm90IHNvbWV0aGluZyBJIGNvbmRvbmUuIFdoZW4gdGhlIHNoaXQgaGl0cyB0aGUgZmFuIGFuZCB0aGUga2lkIGlzIGluIHNlcmlvdXMgY3Jpc2lzIGFyZSB5b3UgZ29pbmcgdG8gYmUgdGhlcmU/IFRoZSB0ZWRkeSBiZWFyPyBOb3BlLiBPbmx5IGhpcyBmYW1pbHkgd2lsbCBiZS4KIlNlZWluZyBhIFdhcnJpb3JzIHN1cGVyIHRlYW0gYnVpbHQgYWNyb3NzIGdlbmVyYXRpb25zIGZlZWxzIGxpa2UgdGhlIHVsdGltYXRlIGdpZnQgdG8gdGhlIGZhbnMsIGFuZCBhIG5hdHVyYWwgZml0IGZvciBhIHRlYW0gdGhhdCByb3V0aW5lbHkgYWNrbm93bGVkZ2VzIHRoZSB3b3JrIGFuZCBoaXN0b3J5IHRoYXQgcHJlY2VkZXMgdGhlaXIgYWNjb21wbGlzaG1lbnRzIHRvZGF5LCIgY28gZm91bmRlciBQYXJrZXIgQ2hhbm5vbiBzYWlkIGluIGEgc3RhdGVtZW50Li4gClVua25vd24gTWFraW5nIE1vbmV5IEZhY3RzIGFib3V0IFZpZGVvIFBva2VyCkl0IG11c3QgZmVlbCBncmVhdCB0byBiZSBuYWtlZCBhbmQgbm90IGNhcmUgYXQgYWxsLCBnaXZlbiB3aGF0IGhpcyBsaWZlIGlzIGxpa2UuIApJdCBtaWdodCBzZWVtIHRyaXRlLCBidXQgSSd2ZSBoZWFyZCBvZiwgYW5kIHRyaWVkIGluIHRoZSBwYXN0LCBhbiBlbnZlbG9wZSBzeXN0ZW0gZHVyaW5nIHNob3J0IHRyaXBzIHRvIFZlZ2FzLiBUYWtlIHR3byBlbnZlbG9wZXMgZm9yIGVhY2ggZGF5IG9mIHRoZSB3ZWVrIG9mIHlvdXIgc3RheS4gCldoZXJlIENhbiBJIExlYXJuIE1vcmU/VGhlIEhpc3RvcmljIEVuZ2xhbmQgV2Vic2l0ZSBjb250YWlucyBhIHdlYWx0aCBvZiBpbmZvcm1hdGlvbiBhYm91dCBMaXN0ZWQgc2l0ZXMgYW5kIGhvdyB0byBhZGQgdG8gVGhlIExpc3QuIEl0IGFsc28gY29udGFpbnMgVGhlIExpc3QgaXRzZWxmLCB3aGljaCBjYW4gYmUgc2VhcmNoZWQgaW4gYSB2YXJpZXR5IG9mIHdheXMsIHN1Y2ggYXMgYnkgbmFtZSwgdHlwZSwgbG9jYXRpb24sIGFuZCBkYXRlIG9mIGxpc3RpbmcuIAogMCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KQW5uZXJldmVuYW50ICAxIHBvaW50ICBzdWJtaXR0ZWQgMTQgaG91cnMgYWdvClRoZSBwcm9ibGVtIHdhcyB0aGF0IG9uIHRoaXMgcGxheSwgdGhlIERCIHdhc24ndCB0dXJuZWQgYmFjayB0b3dhcmRzIHRoZSBsaW5lLCBzbyB3aGVuIHRoZXJlJ3MgY29udGFjdCB0aGF0J3MgZ29ubmEgZ2V0IGNhbGxlZCBldmVyeSB0aW1lLiBJdCBtaWdodCBiZSBhIGJldHRlciBjb21wYXJpc29uIGlmIHRoZSBEQiB3YXMgZmFjaW5nIHRvd2FyZHMgdGhlIGJhbGwgYW5kIG1ha2luZyBhIHBsYXkgb24gaXQgZXZlbiBtb3JlIHNvLCBpbiB0aGF0IHNpdHVhdGlvbiwgSSdkIHNheSBHb3Jkb24gd291bGQndmUgYmVlbiBjYWxsZWQgb24gT1BJLiAKQSBQcm8gQm93bGVyIGluIDIwMTQsIGlzIGNvbWluZyBvZmYgYSBzZWFzb24gc3BsaXQgYmV0d2VlbiBEZXRyb2l0IGFuZCBQaGlsYWRlbHBoaWEsIGEgdHJhZGUgZGVhZGxpbmUgYWNxdWlzaXRpb24gd2hvIGN1bXVsYXRpdmVseSB0b3RhbGVkIDc0IGNhdGNoZXMgZm9yIDc5NSB5YXJkcyBhbmQgZm91ciB0b3VjaGRvd25zLiAKSXQgaXMgZm9yIHRoaXMgcmVhc29uIHdlIHJlYWRpbHkgZW1icmFjZSBwcm9ncmFtcyB0aGF0IHByb21vdGUgZXF1YWxpdHkgYXQgZXZlcnkgbGV2ZWwgb2YgYW4gb3JnYW5pemF0aW9uLiAKUmVsYXRpb25zaGlwcyBvZiBudXRyaXRpb24gYW5kIHZpdGFtaW5zIHRvIHRoZSBnZW5lc2lzIGFuZCBwcmV2ZW50aW9uIG9mIGNhbmNlciBhcmUgaW5jcmVhc2luZ2x5IGV2aWRlbnQuIApUaGUgY2x1YidzIHBsYW5zIHRvIGhhdmUgNTAgcG9rZXIgbWFjaGluZXMgYXQgaXRzIG5ldyBoZWFkcXVhcnRlcnMgaGFkIGRpdmlkZWQgV2FuZ2FyYXR0YSBDb3VuY2lsLgpGb3IgeWVhcnMgKGRlY2FkZXMpIHdlIGJlZW4gdG9sZCBob3cgcGVvcGxlIGFyZSB2aW9sYXRlZCwgdG9ydHVyZWQsIGtpbGxlZCBieSBjYXJ0ZWxzLiBUaGVuIHdlIHRyeSB0byBub3QgZ2l2ZSBwZW9wbGUgYXN5bHVtPyBIb3cgZG9lcyB0aGF0IG1ha2Ugc2Vuc2U/Ck1vbWVudHMgYWZ0ZXIgU2VyZ2VhbnQgUGhpbGxpcHMgc3BlZCBhd2F5LCBLeWxlIEdpYmJzIGhhZCBzZWNvbmQgdGhvdWdodHMuIApUaGUgb25seSBhY3Rpb24gY29udGludWl0eSBpc3N1ZSBpcyBoZXJlIGFyZSBhbGllbnMsIGJ1dCBQaGFzZSAyICh0ZXNzZXJhY3Qgd2VhcG9ucykgd2FzIHN1cHBvc2VkbHkgYmVjYXVzZSBvZiBUaG9yIGFuZCBBdmVuZ2Vycywga25vd2luZyBodW1hbnMgYXJlIG5vdyBvdXRndW5uZWQuIFRoZXkgaGFkIGtub3duIHRoYXQgZm9yIGRlY2FkZXMuIApUb3V0ZSBwZXJzb25uZSBmb3Vybmlzc2FudCBzZXMgaW5mb3JtYXRpb25zIHBlcnNvbm5lbGxlcyBwYXIgbCdpbnRlcm1kaWFpcmUgZGUgY2UgcnNlYXUgZGNsYXJlIHRyZSBnZSBkJ2F1IG1vaW5zIDEzYW5zLiAKVGhlIGdpcmxzIGFycml2ZWQsIHNvbWV0aW1lcyBieSB0YXhpLCBmb3IgdHJ5c3RzIGF0IGFsbCBob3VycyBvZiB0aGUgZGF5IGFuZCBuaWdodC4gClRoZXkgdGVsbCB5b3UgdGhlIGNhbG9yaWVzIG9uIGZhc3QgZm9vZCBub3cuIFdhdGNoIHRoaXMgc2hpdDogeW91IGNhbiBlYXQgYSBub3JtYWwgc2l6ZWQgYnVyZ2VyIGZvciBhYm91dCA0MDAgY2Fsb3JpZXMuIFRoYXQgYSBub3JtYWwgbWVhbCBzaXplLiAKTm8sIGJlY2F1c2Ugc21hcnRwaG9uZXMgYXJlIGJhc2ljYWxseSBhIG5lY2Vzc2l0eSBmb3IgZXhpc3RpbmcgaW4gYW4gQW1lcmljYW4gc29jaWV0eSBhdCB0aGlzIHBvaW50LiBUaGUgVW5pdGVkIE5hdGlvbnMgaGFzIGxpc3RlZCBpbnRlcm5ldCBhY2Nlc3MgYXMgYSBiYXNpYyBodW1hbiByaWdodC4gQW5kIHdoZW4geW91IGhhdmUgcGxhbm5lZCBvYnNvbGVzY2VuY2Ugb2YgdGhlc2UgZGV2aWNlcyBpdCBiZWNvbWVzIG5lY2Vzc2FyeSB0byBidXkgbmV3IG9uZXMgZXZlcnkgY291cGxlIHllYXJzLgpDYXBpdGFsaXNtIGlzIGEgcHJveHkgZm9yIGdvZC9mYXRlL2Rlc3RpbnkgYW5kICJ0aGUgd2F5IGxpZmUgaXMiIGJ1dCBjb21tdW5pc20gYWN0dWFsbHkgdHJpZXMgdG8gYWx0ZXIgdGhlIHN0YXR1cyBxdW8gd2hlcmUgcGVvcGxlIHN1ZmZlciBhbmQgZGllIG5lZWRsZXNzbHkuIEJlY2F1c2UgY29tbXVuaXNtIGFjdHVhbGx5IHRyaWVkIHRvIG1ha2UgbGlmZSBiZXR0ZXIgYW5kIHNvbWV0aW1lcyBkaWRuJ3Qgc3VjY2VlZCwgaXQncyBtdWNoIG11Y2ggd29yc2UgdGhhbiBjYXBpdGFsaXNtLCB3aGljaCBuZXZlciBjbGFpbWVkIHRvIHZhbHVlIGh1bWFuIGxpZmUgaW4gdGhlIGZpcnN0IHBsYWNlLiBUaGVpciBsb2dpYyBpcyB1bmRlbmlhYmxlOyBqdXN0IGtlZXAgcGFycm90aW5nICIxMDAgbWlsbGlvbiBmdWNraW5nIGRlYXRocyIgd2hpbGUgYnVybmluZyBmb3NzaWwgZnVlbHMsIGNvb2tpbmcgdGhlIHBsYW5ldCwgYW5kIHByb2ZpdGluZyBmcm9tIHRoZSBob3Jyb3JzIHRoYXQgYXdhaXQuLiAKTmV2ZXJ0aGVsZXNzLCBoaXMgdGl0bGVzIHdlcmUgaW1wb3J0YW50IHRvIGhpbSwgYW5kIHRoZXkgYXJlIG5ldmVyIG5ldXRyYWwuIApTdXJyZWFsIGF0bW9zcGhlcmUgZXZpZGVudCBidXQgY2l0eXMgc3Bpcml0IGhhcyBub3QgYmVlbiBicm9rZW4KRWxsZSBsZSB0cmFuc2Zvcm1lcmEgZ2FsZW1lbnQgZW4gYWV0aGVyLCBvdSB0aHJpcXVlIC47LiBDIHVuIGNpbnF1aW1lIGxtZW50LCBsYSBRdWludGVzc2VuY2UgcXVpIHMgYXV4IHF1YXRyZSBsbWVudHMgdHJhZGl0aW9ubmVscy4gQ2V0IGxtZW50IG1lbnRpb25uIGRhbnMgbGUgQnJpaGFkYXJhbnlha2EgVXBhbmlzaGFkMyBlc3QgIG5lIHBhcyBjb25mb25kcmUgYXZlYyBwcmFrcml0aSBxdWkgbCBlbmdlbmRyIGV0IHF1aSBhdXJhaXQgc2Vsb24gUmVuIEd1bm9uIGRlcyBwcm9wcml0cyBjb21wYXJhYmxlcyAgY2VsbGVzIGQgWW9naSBheWFudCBhdHRlaW50IGxhIGRsaXZyYW5jZTouIApUaGUgcGxheWVyIGNhbiBkbyBtb3JlIGJpbmdvIHBsYXlpbmcgYW5kIHdhZ2VyaW5nIHVzaW5nIGxlc3Mgb2YgaGVyIG93biBtb25leSB3aGVuIHNoZSByZWNlaXZlcyBib251c2VzLiAKQW5kIGhleSwgdGhlcmUgYWxzbyB0aGUgc29jaWFsIGNvc3RzIHRoYXQgeW91IGltcG9zZSBvbiB5b3VyIGZlbGxvdyBjb21tdXRlcnMsIGluIHRlcm1zIG9mIGNvbmdlc3Rpb24sIHJvYWQgd2VhciBhbmQgdGVhciwgZXRjLiAKVGhlIGF2ZXJhZ2Ugbm9uIHBhcnR5IHZvdGVyIGRvZXMgY2FyZS4gCldoaWxlIGhlIHRob3JvdWdobHkgZW5qb3llZCB0aGUgcmVsYXRpb25zaGlwcyBoZSBkZXZlbG9wZWQgd2l0aCB0ZWFjaGVycywgY29sbGVhZ3VlcyBhbmQgdGhlIHBhcmVudCBjb21tdW5pdHksIHdvcmtpbmcgd2l0aCBzdHVkZW50cyB3YXMgaGlzIHRydWUgcGFzc2lvbi4gClNoZSB1dHRlcmVkIG5vdCBhIHdvcmQgb2YgYXBvbG9neSB3aGlsZSByb2xsaW5nIGhlciBleWVzIGF0IG1lLiAKU2xlZXBlcmludXRhaCB1CkZ1cnRoZXJtb3JlLCBVbmliZXQgaXMgbWVtYmVyIG9mIHRoZSBFR0JBIChFdXJvcGVhbiBHYW1pbmcgYW5kIEJldHRpbmcgQXNzb2NpYXRpb24pLCBhbmQgUkdBIChSZW1vdGUgR2FtYmxpbmcgQXNzb2NpYXRpb24gaW4gdGhlIFVLKS5EZXBvc2l0IEJvbnVzIFByb21vdGlvbnNVbmliZXQgb2ZmZXJzIDEwMCUgZmlyc3QgZGVwb3NpdCBib251cyB1cCB0byB0aGUgdmFsdWUgb2YgMjUgdG8gcHVudGVycyB0aGF0IHJlZ2lzdGVyIGZvciB0aGUgZmlyc3QgdGltZS4gMTgrLiBUIEFwcGx5LiBUbyBiZWNvbWUgZWxpZ2libGUgZm9yIHRoZSBwcm9tb3Rpb24gYWxsIHlvdSBuZWVkIHRvIGRvIGlzIGRlcG9zaXQgYSBtaW5pbXVtIG9mIDEwIGludG8geW91ciBhY2NvdW50LiAKSSBkb25lLiAKUG9vciBwbGF5ZXJzIGdlbmVyYWxseSBkb24gYmx1ZmYuIApEbyB5b3UgZXZlciBtaXNzIHRoZSBzY2VudCBvZiBvcmFuZ2UgYmxvc3NvbXMgPyBJZiBzbywgdGhpcyxtYXkgYmUgdGhlIHNjcnViIHlvdSBoYXZlIGJlZW4gc2VhcmNoaW5nIGZvciAhIFRoaXMgaGFzIGhlcmJhbCBpbmZ1c2lvbnMgLCB2aXRhbWluIEUgYW5kIG9yZ2FuaWMgYnJvd24gc3VnYXIgLCBhbG1vbmQgb2lsICwgb3JhbmdlIHplc3QgYW5kIGhvbmV5IHRvIGhlbHAgd2l0aCBpbXByb3ZpbmcgY2lyY3VsYXRpb24gdGhyb3VnaCB5b3VyIGJvZHkuLEFic29yYnMgLCBleGNlc3Mgb2lscyBhbmQgaGFzIGFudGlveGlkYW50cyB0aGF0IG1heSBoZWxwIHNsb3cgdGhlIHNraW4gYWdpbmcgcHJvY2Vzcy4gSWYgeW91ciBza2luIGlzIHJvdWdoIG9yIGRyeSB0aGlzIHRyZWF0bWVudCBpcyBmb3IgeW91LiBUaGUga2V5IGluZ3JlZGllbnQgaXMgU2hlYSBCdXR0ZXIgZXh0cmFjdCB3aGljaCBwcm90ZWN0cyB0aGUgc2tpbiBmcm9tIGVudmlyb25tZW50YWwgY29uZGl0aW9ucyBhbmQgc2VhbHMgaW4gbW9pc3R1cmUuIApEaWV0LiBJbiBzb21lIGNhc2VzLCB0aGUgY2F1c2Ugb2Ygc3dvbGxlbiBoYW5kcyBpcyBkaWV0LiAKSSB3YXMgYXQgYSBjb21pYyBjb24gd2l0aCBhIGJ1ZGR5IG9mIG1pbmUuIE9uZSBkYXkgd2Ugd2VyZSB3YWxraW5nIGFyb3VuZCB0aGUgY2l0eSB0aGUgY29uIHdhcyBpbiBsb29raW5nIGZvciBhIHBsYWNlIHRvIGVhdCB0aGF0IHdhc24ndCBwYWNrZWQgd2l0aCBwZW9wbGUuIApJdCBhbHNvIGZlZWxzIG5pY2UgdG8gZ28gYmFjayB0byBhbiBvbGQgbWFpbiBodWIgYW5kIHRoZXkgc3RpbGwgZnVsbGZpbGwgYSBwdXJwb3NlLCBldmVuIGl0cyBvbmx5IGZvciB0ZWxlcG9ydGF0aW9uLiBJZiBJIGNvbWUgdG8gRGFybGFyYW4gSSBmZWVsIG5vc3RhbGdpYyBhYm91dCBpdCBhbmQgYW0gYWxzbyBnbGFkIHRvIHNlZSBtYW55IG90aGVyIHBlb3BsZSBpZGxpbmcgdGhlcmUgc3RpbGwgKG9mIGJvdGggZmFjdGlvbnMhKS4gV2hlbiBJIGFtIGFma2luZyBvbiBmbGlnaHQgaSBqdXN0IGZlZWwgYW5ub3llZCB0aGF0IEkgY2FudCBnZXQgdG8gbXkgZGVzdGluYXRpb24gZmFzdGVyLiAKTWFueSBvZiB0aGUgcHJvZmVzc2lvbmFsIHdpbGwgcG9pbnQgb3V0IHRoYXQgSmltbXkgV2hpdGUgd2FzIGx1Y2t5IHRvIHdpbiB0aGUgZmlyc3QgUG9rZXIgTWlsbGlvbiAgIFRoZSBNYXN0ZXJzLiBUaGUgb3RoZXIgbWFpbiByZWFzb24gaGUgd29uLCB3YXMgYmVjYXVzZSB0aGUgYmxpbmRzIHYgYXZlLiBTdGFjayByYXRpbyBnb3QgdG8gdGhlIHN0YWdlIHdoZXJlIHRoZSBwcm9mZXNzaW9uYWxzIHdlcmUgZm9yY2VkIHRvIGdhbWJsZSBpbiBzaXR1YXRpb25zIHRoZXkgd291bGQgcmF0aGVyIGF2b2lkLiAKSWYgeW91IHdhbnQgdG8gY2hhbmdlIHRvIHVzaW5nIHN0b3J5IHBvaW50cyBpbnN0ZWFkIG9mIGR1cmF0aW9uLCB5b3UganVzdCBnb3QgdG8gc3RhcnQgZXN0aW1hdGluZyBpbiBzdG9yeSBwb2ludHMuIElmIHlvdSBzdGFydCBjaGFuZ2luZyB0aGUgc2NhbGUgZnJvbSBvbmUgdG8gdGhlIG90aGVyIHRoZW4gdmVsb2NpdHkgYmV0d2VlbiBzY2FsZXMgaXMgbm90IGdvaW5nIHRvIGJlIGNvbXBhcmFibGUgKGllIGRvbnQgZG8gaXQpLiBUaGVzZSBlc3RpbWF0ZXMgc2hvdWxkIGludm9sdmUgYWxsIHlvdXIgU2NydW0gdGVhbS4uIApUaGUgcHJvYmxlbSBmb3IgdGhlIFRvcmllcyBpcyB0aGF0IHRoZSBjb25zb3J0aXVtIG9mIGJpZyBicm9hZGNhc3RlcnMgY29udHJvbHMgVFYgYmFuZHdpZHRoLCBhbmQgdGhleSBhcmUgcmVmdXNpbmcgdG8gY2VkZSBjb250cm9sIHRvIHRoZSBvdGhlciBtZWRpYSBvcmdhbml6YXRpb25zLgpSZW1vdmVkOiBObyBtYXR0ZXIgaG93IGFuIE9QIHJlcGxpZXMgb24gdGhlaXIgcG9zdCwgbmFtZSBjYWxsaW5nIGlzIGFic29sdXRlbHkgbm90IG9rLiBJZiBPUCBuZWVkcyB0byBqdXN0IHllbGwgdGhlaXIgaXNzdWVzIGludG8gdGhlIHZvaWQgdGhlbiB3ZSBjYW4gYmUgaGVyZSB0byBzYXkgInRoYXQgc3Vja3MsIHlvdSdyZSBzdHJvbmdlciB0aGFuIHlvdSByZWFsaXplLCBldGMiIGJhc2ljYWxseSBhbGwgb2YgdGhlIHRoaW5ncyBoZXIgbW90aGVyIGFuZCBTTyBhcmUgdGFraW5nIGF3YXkgZnJvbSBoZXIgY29uZmlkZW5jZS4gQ2FsbGluZyBzb21lb25lICJiaXRjaHkiIGJlY2F1c2UgdGhleSBhcmVuJ3QgaW4gYSBzaXR1YXRpb24gd2hlcmUgdGhleSBjYW4gZXZlbiBkbyBhbnkgb2YgdGhlIHN1Z2dlc3Rpb25zIGlzIGxpa2UgdGFraW5nIGEgaHVnZSBzaGl0IG9uIHRoZW0uIEkndmUgYmVlbiBpbiBhIHNpbWlsYXIgc2l0dWF0aW9uIHRvIE9QIGFuZCBmb3IgYXdoaWxlIGl0IHdhcyBhIGRhbW5lZCBpZiBJIGRvLCBkYW1uZWQgaWYgSSBkb24ndCBraW5kYSB0aGluZy4KRW4gR3JjZSwgZGFucyBsZXVyIGRlc2NyaXB0aW9uIGRlIDE0IG5pdmVhdXggZGUgbCdhbW91ciwgbGUgMWllciBzJ2FwcGVsbGUgbCdhbW91ciAiUG9ybm9lIiwgYydlc3QgIGRpcmUgImwnYW1vdXIgZGUgcGVhdSAgcGVhdSIgZXQgaWwgc2UgZHZlbG9wcGUgZHVyYW50IGxhIHBldGl0ZSBlbmZhbmNlIGRlIDAgIDMgYW5zLiAKVGhlIGRpZ2l0YWwgY29uc29sZSBnYW1lcyBjYW4gdGFrZSB1cCBhYm91dCAyMyUgb2YgdGhlIGdhbWluZyBpbmR1c3RyeSBhcmVuYS4gCkdyb3dpbmcgdXAsIG15IHBhcmVudHMgZGVjbGF3ZWQgc29tZSBjYXRzLCBidXQgbm90IG90aGVycy4gCkdlb3JnZSBXYXNoaW5ndG9uLCBKYW1lcyBNb25yb2UsIEFuZHJldyBKYWNrc29uLCBKYW1lcyBQb2xrLCBKYW1lcyBCdWNoYW5hbiwgQW5kcmV3IEpvaG5zb24sIEphbWVzIEdhcmZpZWxkLCBXaWxsaWFtIE1jS2lubGV5LCBUaGVvZG9yZSBSb29zZXZlbHQsIFdpbGxpYW0gVGFmdCwgV2FycmVuIEhhcmRpbmcsIEZyYW5rbGluIFJvb3NldmVsdCwgSGFycnkgVHJ1bWFuLCBMeW5kb24gSm9obnNvbiwgYW5kIEdlcmFsZCBGb3JkIHdlcmUgYWxsIEZyZWVtYXNvbnMsIG1hbnkgc3ltYm9scyBvZiB3aGljaCBhcmUgZm91bmQgb24gQW1lcmljYW4gY3VycmVuY3kuIExpbmNvbG4gd2FzIHRoZSBvbmx5IHByZXNpZGVudGlhbCBjYW5kaWRhdGUgd2hvIHdhcyBub3QgYSBGcmVlbWFzb24gaW4gdGhlIDE4NjAgZWxlY3Rpb24uCkJ1dCBpdCdzIHBpY2tlZCB1cCBjb25zaWRlcmFibHkgaW4gcmVjZW50IHllYXJzLiAKTmVidWxhOiBzZWUgdGhlIGZpcnN0IGVsZW1lbnQuIi4gClNwZWFraW5nIG9mIGxpZXMgYW5kIHN0YXRpc3RpY3MsIENOTiByZWxlYXNlZCBhIHBvbGwgdGhhdCBzdXBwb3NlZGx5IHNob3dzIE9iYW1hIHN0YW5kaW5nIHdpdGggdGhlIEFtZXJpY2FuIHBlb3BsZSBzbGlwcGluZyBieSBtb3N0IG1lYXN1cmVzU2V2ZW50eSB0d28gcGVyY2VudCBvZiBwZW9wbGUgcXVlc3Rpb25lZCBpbiBhIENOTi9PcGluaW9uIFJlc2VhcmNoIENvcnAuIFN1cnZleSByZWxlYXNlZCBUaHVyc2RheSBiZWxpZXZlIE9iYW1hIGluc3BpcmVzIGNvbmZpZGVuY2UuIFRoYXQgZG93biB0aHJlZSBwZXJjZW50YWdlIHBvaW50cyBmcm9tIGEgQ05OL09waW5pb24gUmVzZWFyY2ggQ29ycC4gCldlIGFyZSBvbmx5IGFuIGFkdmVydGlzaW5nIHNwYWNlLCB3ZSBhcmUgbm90IGFuIGVzY29ydCBhZ2VuY3ksIG5vciBldmVuIGluIHRoZSBlc2NvcnRpbmcgb3IgdGhlIGJ1c2luZXNzIG9mIHByb3N0aXR1dGlvbi4gSW4gc29tZSBjb3VudHJpZXMsIHBlb3BsZSBkbyBub3QgbGVnYWxseSBoYXZlIHRoZSBjaG9pY2UgdG8gZGVjaWRlIGFueSBvZiB0aGUgYWJvdmU7IGl0IGlzIHlvdXIgcmVzcG9uc2liaWxpdHkgdG8gY29tcGx5IHdpdGggbG9jYWwgbGF3cy4gQnVzYW4gYW5kIGVzY29ydHMgV29ybGQgRXNjb3J0cyAgIGluZGVwZW5kZW50LCBmZW1hbGUsIG1hbGUsIGNvdXBsZXMsIGdheSwgdHJhbnNzZXh1YWwgYW5kIGVzY29ydCBhZHVsdCBzZXJ2aWNlcyBGb3IgbW9yZSBkZXRhaWxlZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY2l0eSwgdmlldyB0aGUgZGVmaW5pdGl2ZSBXaWtpIHBhZ2UgaGVyZXdpdGggYWxsIHRoZSB1cCB0byBkYXRlIGRldGFpbHMgeW91J2xsIGV2ZXIgbmVlZC4uIApJIHNheSB0byBoZXIgdGhhdCBJIHNlZSBzaGUgdGFrZXMgaGVyIHBvb2wgc2VyaW91c2x5IGFuZCBoYWxmIGpva2luZ2x5IHRlbGwgaGVyIHRoYXQgSSBub3QgdGhhdCBnb29kLCBidXQgSSBjb21wZXRpdGl2ZS4gClRoZSBtb21lbnQgSSBhY3RpdmVseSB0cnkgdG8gZWNob2xvY2F0ZSB0aGUgZGlyZWN0aW9uIG9mIHRoZSBzb3VuZCwgaXQgZ29lcyBhd2F5IGNvbXBsZXRlbHkuIApZb3VyIGFuc3dlciBpcyB0aGUgZmlyc3QgSSBoYXZlIGhlYXJkIHRvIGJlIGV4cGxhaW5lZCBpbiB0aGlzIHdheSwgYmVjYXVzZSB0aGUgd2F5IGl0IGhhcyBiZWVuIGV4cGxhaW5lZCB0byBtZSBhbmQgaG93IGxpYWJpbGl0eSB3b3JrcyBpbiBvdXIgY291bnRyeSwgdGhlIG1hbmFnZXIgd2FzIGxpYWJsZSBhcyBzb29uIGFzIGhlIGFjY2VwdGVkIHRoZSBkZXZpY2UgYXMgaGlzIHJlc3BvbnNpYmlsaXR5LiBBbHNvIHRoZSBoeXBvdGhldGljYWwgc2l0dWF0aW9uIHlvdSBzdWdnZXN0IGRvZXMgbm90IGNvaW5jaWRlIHdpdGggdGhlIHNpdHVhdGlvbiB0aGF0IGhhcHBlbmVkLiBIZSB3YXNuIHdhbGtpbmcgZG93biB0aGUgc3RyZWV0LCBoZSB3YXMgYXQgaGlzIHBsYWNlIG9mIGJ1c2luZXNzIHdoZXJlIGhlIGhhcyBhc3N1bWVkIGEgcm9sZSBvZiByZXNwb25zaWJpbGl0eSB3aXRoaW4gdGhlIGNvbXBhbnkuIApEbyBJIHdhcyB0aGlua2luZywgd2hhdCBjb3VsZCBoZWxwIHdpdGggdGhpcyBzaXR1YXRpb24sIGhhcyB5b3VyIHRoZXJhcGlzdCB0YWxrZWQgdG8geW91IGFib3V0IHNlbGYgY2FyZT8gWW91IHNvdW5kIGxpa2UgeW91IGJvdGggcmVhbGx5IG5lZWQgaXQuCk1pbmR5OiBXZSdyZSBkb2luZyBnb29kLiBJJ20gZG9pbmcgZ29vZC4gSSBzaG91bGRuJ3Qgc3BlYWsgZm9yIFNjb3R0LiBTY290dCwgaG93IGFyZSB5b3UgZG9pbmcgdG9kYXk/Ckhvb2tlciBhbmQgQWRyaWFuIG1lZXQgdXAgd2l0aCBIZWF0aGVyIGFuZCBCb2JieSBhdCBQaW5rcyAob3Igc29tZSBvdGhlciBob3QgZG9nIHN0YW5kKSBhbmQgdHJhZGUgaW5mb3JtYXRpb24gYnJpZWZseS4gTm8gb25lIGhvbGRzIGEgaG90IGRvZyBsaWtlIFdpbGxpYW0gU2hhdG5lciwgbWFuLiBTZXJpb3VzbHksIHRoYXQgZ3V5IGtub3dzIGhvdyB0byB3b3JrIGEgcHJvcC4uIApBIGNvdXBsZSB5ZWFycyBhZ28gSSB3ZW50IHRvIHRoZSBtYWxsIHdpdGggc29tZSBmcmllbmRzIGFuZCB0aGV5IHdlcmUgaGF2aW5nIGEgeW95byBjb21wZXRpdGlvbi4gSSB3YXMganVzdCBzbyBhbWF6ZWQgYXQgdGhlIHRoaW5ncyB0aGV5IHdlcmUgZG9pbmcgSSBsZXQgbXkgZnJpZW5kcyBnbyBvbiBhbmQgSSBzdGF5ZWQgYW5kIHdhdGNoZWQuIFRoaXMgZ3V5IHdhcyBkb2luZyA0YSBhbmQgSSBqdXN0IGNvdWxkbiB1bmRlcnN0YW5kIGhvdyBpdCB3b3JrZWQgaXQgd2FzIGF3ZXNvbWUuIEkgd2VudCBhbmQgZm91bmQgYSB0b3kgc3RvcmUgYW5kIGJvdWdodCBhIFlZRiBPbmUgYW5kIG5ldmVyIHRvdWNoZWQgaXQgb25jZS4KSSBkbyBzdXBwb3J0IG5ldCBuZXV0cmFsaXR5IGZvciB0aGUgZmFjdCB0aGF0IHRvIGdldCB0byB0aGlzIHBlZXIgdG8gcGVlciByZWFsbSB5b3Ugc3BlYWsgb2Ygd2UgbXVzdCBnbyB0aHJvdWdoIHRoZSBzdGVwcyBtdWNoIGxpa2UgYSByZWNpcGUuIApEaXN0cmVzcyBhdCBzb21lIHRpY2sgaGFzIGluY3JlYXNlZCwgYW5kIHRoZW4gdmFuaXNoZWQuIApQb2tlcidzIEhPUlNFIGEgc2VyaW91cyBnYW1lCldlIHdvdWxkbid0IHdhbnQgdG8gZXhjbHVkZSBhbnlvbmUgYW5kIGF0IHRoYXQgcG93ZXIgbGV2ZWwgZG9uJ3QgdGhpbmsgd2Ugd291bGQuIApIb2xkIHRoZSBwYW4gdXAgdG8gdGhlIHRyYW5zIGFuZCBsaW5lIHVwIHRoYXQgYm9sdCBob2xlLiBTdGFydCB0aGUgdGhyZWFkcyBhbmQgbWFrZSBhIGNvdXBsZSB0dXJucy4gClRoZSBnZW5lcmFsIGFuYWVzdGhldGljIG1hZGUgbWUgdmVyeSBncm9nZ3kgYW5kIGEgYml0IGFsbCBvdmVyIHRoZSBwbGFjZS4gSSBzdGFydGVkIG91dCB3aXRoIHNvbWUgbWlub3IgcGFpbiBraW5kIG9mIGhpZ2ggdXAgdW5kZXIgbXkgbGVmdCBicmVhc3QsIGFuZCBpdCBjb21lcyBhbmQgZ29lcy4gClNlaXQga25hcHAgZHJlaSBKYWhyZW4gbHVmdCBEaXNuZXlzIE11c2ljYWwgVEFSWkFOIGVyZm9sZ3JlaWNoIGltIFN0YWdlIFRoZWF0ZXIgTmV1ZSBGbG9yYSBpbiBIYW1idXJnLiAKTWF5YmUgdGhleSBkbywgbW9zdCBwcm9iYWJseSB0aGV5IGRvIG5vdC4gClRoaXMgY29tbWVudCBoYXMgYmVlbiBvdmVyd3JpdHRlbiBieSBhbiBvcGVuIHNvdXJjZSBzY3JpcHQgdG8gcHJvdGVjdCB0aGlzIHVzZXIgcHJpdmFjeS4gSXQgd2FzIGNyZWF0ZWQgdG8gaGVscCBwcm90ZWN0IHVzZXJzIGZyb20gZG94aW5nLCBzdGFsa2luZywgaGFyYXNzbWVudCwgYW5kIHByb2ZpbGluZyBmb3IgdGhlIHB1cnBvc2VzIG9mIGNlbnNvcnNoaXAuClRoaXMgc3luY2luZyB1cG9uIGNyYXNoIGZvbGxvd2VkIGJ5IHN0YXJ0aW5nIGV2ZXJ5dGhpbmcgdXAgYWdhaW4gaGFwcGVuZWQgZXZlbiBpZiB0aGUgc2F2ZSB3YXNuIG1vZGlmaWVkIHNlZW1pbmdseSwgYXMgd2FzIHRoZSBjYXNlIHdpdGggV2F0Y2ggRG9ncyAyLCB0aG91Z2ggaXQgaGFyZCB0byB0ZWxsIGlmIFViaXNvZnQgc29tZWhvdyBtb2RpZmllcyB0aGUgc2F2ZSB1cG9uIGxvYWRpbmcuIEJhc2ljYWxseSwgdGhlIFhib3ggc29tZWhvdyBmaW5kcyBvdXQgdGhhdCB0aGVyZSB3YXMgbm8gcHJvcGVyIGNvbW11bmljYXRpb24gd2l0aCB0aGUgc2VydmVycyAoZHVlIHRvIHVuZXhwZWN0ZWQgY3Jhc2ggYW5kIGhhcmQgc2h1dCBkb3duISkgYW5kIG1ha2VzIHN1cmUgdGhhdCBldmVyeXRoaW5nIGlzIGluIHN5bmMuLiAKRm9ybWVyIERldmlscyBncmVhdCBLZW4gRGFuZXlrbyBtYWtlcyB0cmFuc2l0aW9uIHRvIHBva2VyCkxtZmFvIHJhcGUgaXNuIHRha2VuIHNlcmlvdXNseSBpbiBzb2NpZXR5PyBXaGF0IGZ1Y2tpbmcgd29ybGQgZG8geW91IGxpdmUgaW4/IEkgdHJ5aW5nIHNvIGhhcmQgdG8gcmF0aW9uYWxpemUgdGhpcyBidXQgbm9uZSBvZiB3aGF0IHlvdSBzYWlkIG1ha2VzIGFueSBzZW5zZS4gClRoZSBwcmV2aWV3IGZvciBuZXh0IHdlZWsgbGVhZHMgdXMgdG8gYmVsaWV2ZSB0aGF0J3Mgd2hlbiBoaXMgZmlyc3QgdHJpcCB0byB0aGUgaG9zcGl0YWwgcG9zc2libHkgb2NjdXJzLiBJbiB0aGUgYm9vaywgdGhlIHJlYWRlciBmaW5kcyBvdXQgdGhhdCBoZSBoYWQgYmVlbiBhdCB0aGUgaG9zcGl0YWwgYXQgdGhlIGV4YWN0IHNhbWUgdGltZSB0aGF0IENhbWlsbGUgZmluZHMgb3V0LCBhbmQgZnJvbSB0aGVyZSBpcyB3aGVuIGV2ZXJ5dGhpbmcga2luZCBvZiBzcGlyYWxzLi4gCkkgaGFkIHRoZSBiZW5lZml0IG9mIGxlYW5pbmcgdG8gYmVhdCBib3ggYWJvdXQgdGVuIHllYXJzIGFnby4gSSBhbHNvIHN0YXJ0ZWQgcHJhY3RpY2luZyB0aGF0IHdoaWxlIGRyaXZpbmcuIApOZXdiaWUuIE9ubHkgc3RhcnRlZCBwcmFjdGlzaW5nIFBob3RvZ3JhcGh5IGFib3V0IDQgbW9udGhzIEFnby4gCkVkaXQ6IE90aGVyIHBlb3BsZSBoYXZlIGxpbmtlZCB0aGUgY29tbWVudCBJIHdhcyB0YWxraW5nIGFib3V0IGJlbG93LiBJZiB0aGlzIGlzbiBwcm9vZiBwb3NpdGl2ZSB0aGF0IEplZGkgaXMgZnVsbCBvZiBzaGl0IHRoZW4gSSBkb24ga25vdyB3aGF0IGlzLgpDYW4gYmUgZm91bmRvbiBZb3V0dWJlLiAKTXkgZGFkIHdhcyBoaXQgYnkgYSBkcnVuayBkcml2ZXIgYW5kIHdhcyBpbiBhIGNvbWEgZm9yIHNldmVyYWwgbW9udGhzLiBUaGV5IHRvbGQgdXMgcmVwZWF0ZWRseSBoZSB3b3VsZCBkaWUgdG9kYXkuIEJ1dCBoZSBuZXZlciBkaWQuIEhlIGZpbmFsbHkgd29rZSB1cCBvbmUgZGF5IGJ1dCBjb3VsZG4gc3BlYWsuIFRoZXkgc2FpZCBoZSBjb3VsZCBjb21lIGhvbWUsIGFuZCBhZnRlciBzZXZlcmFsIG1vbnRocyBoZSBzdGlsbCBoYWRuIHNhaWQgYSB3b3JkLiBJIGhlYXJkIGhpbSB1cCBsYXRlIHdvcmtpbmcgaW4gdGhlIGdhcmFnZSBvbmUgbmlnaHQgb24gc29tZXRoaW5nLCBzbyBJIHNuZWFrZWQgaW4gdG8gc2VlIHdoYXQgaXQgd2FzLiBIZSB3YXMgZW5ncmF2aW5nIHdvcmRzIG9uIGEgcGllY2Ugb2Ygd29vZC4gSSBnb3QgY2xvc2VyIGFuZCBjbG9zZXIgdG8gc2VlIHdoYXQgaXQgc2FpZCwgYW5kIHdoZW4gSSBjb3VsZCBmaW5hbGx5IG1ha2Ugb3V0IGEgc2VudGVuY2Ugb3IgMiwgaGUgaGVhcmQgbWUgY29taW5nLiBJdCBzdXJwcmlzZWQgaGltLCBhbmQgaGUgc3B1biBhcm91bmQgYW5kIHNhaWQsICJEb24geW91IGV2ZXIgc25lYWsgdXAgb24gbWUgbGlrZSB0aGF0IGFnYWluLCB5b3UgbGl0dGxlIGJhc3RhcmQhIiBUaGVuIGhlIGdyYWJiZWQgc29tZSBqdW1wZXIgY2FibGVzIGFuZCBwcm9jZWVkZWQgdG8gYmVhdCB0aGUgbGl2aW5nIHNoaXQgb3V0IG9mIG1lLgpUaGUgc2Vjb25kIGFuZ2xlIGZyb20gd2hpY2ggdGhlIGRlY2xpbmUgdGhlc2lzIHdhcyBhdHRhY2tlZCB3YXMgbW9yZSBwcmFjdGljYWwuIApObyEgWW91IG1heSBub3Qgc2hhcmUgaGVyIGZlZWxpbmdzLCBidXQgdGhleSBhcmUgdmVyeSByZWFsIHRvIGhlci4gCkVpbnN0ZWluIHNhaWQ6ICJJZiBhIHlvdW5nIG1hbiBzaXRzIG9uIGEgaG90IHN0b3ZlIGZvciAzIHNlY29uZHMsIGl0IHNlZW1zIGxpa2UgMzAgbWludXRlcy4gQnV0IGlmIGhlIHNpdHMgaW4gdGhlIG1vb25saWdodCB3aXRoIGhpcyBnaXJsIGZvciAzMCBtaW51dGVzLCBpdCBzZWVtcyBsaWtlIDMgc2Vjb25kcy4iCkFuZCwgZXZlcnkgdGltZSAobmlnaHQgdGltZSkgSSBwdWxsIHVwIGxpdmUgdmlldyBvbiBteSBwaG9uZSwgaXQgYXV0b21hdGljYWxseSBraWNrcyB0aGUgZmxvb2QgbGlnaHRzIG9uLiAKRWFjaCBvZiBBbWVyaWNhIHR3byBiaWdnZXN0IGVjb25vbWljIGNyYXNoZXMgb2NjdXJyZWQgaW4gdGhlIHllYXIgaW1tZWRpYXRlbHkgZm9sbG93aW5nIHRoZXNlIHR3aW4gcGVha3MgaW4gMTkyOSBhbmQgMjAwOC4gVGhpcyBpcyBubyBtZXJlIGNvaW5jaWRlbmNlLiBhbmQgQ2FuYWRhIHNhdyB0aGVpciB3ZWFsdGggaW5jcmVhc2UgMTUgcGVyY2VudCBpbiAyMDA5LCB0byBhIHRvdGFsIG9mIDQuNiB0cmlsbGlvbiBkb2xsYXJzLiIKV29sZmllIGFuZCB0aGUgbmVvY29ucyBuZWVkIHBlcm1hbmVudCB3YXIgdG8gYm90aCBrZWVwIHRoZSBBbWVyaWNhbiBwb3B1bGFjZSBmcm9tIHBheWluZyBhdHRlbnRpb24gdG8gdGhlIGRpc3RyaWJ1dGlvbiBvZiB3ZWFsdGggYXQgaG9tZSwgYnV0IGFsc28gdG8gY3JlYXRlIG5ldyBtYXJrZXRzIGZvciB0aGVpciBlY29ub21pYyBleHBsb2l0YXRpb24gYWJyb2FkLiAKQWNjb3JkaW5nIHRvIHRoZSBTcXVhcmUgVmFsbGV5IFRyYWlsYmxhemVyczoKVGhlIGZpcnN0IHJvdW5kIHdhcyByZWFsbHkgcHJldHR5IHNldCBhbmQgSSBrbmV3IEkgd291bGQgbGFuZCBaaW5ubyBhdCBmaXZlLiBGcm9tIHRoZXJlIHRoZSBkcmFmdCBraW5kIG9mIGp1c3QgZmxvd2VkLiIuIApUaGlzIHNlbWluYXIgYWltcyB0byBpbnRyb2R1Y2UgdGhlIHRoZXJhcGV1dGljIGJlbmVmaXRzIG9mIFR1aW5hIG1hc3NhZ2UgYW5kIGV4cGxhaW4gaG93IGl0IGhlbHBzIGJhbGFuY2Ugb3VyIGhlYWx0aCBob2xpc3RpY2FsbHkuIEZyb20gMjAxNCAyMDE2LCBoZSB3b3JrZWQgYXMgYSBUcmFkaXRpb25hbCBDaGluZXNlIE1lZGljaW5lIChUQ00pIGRvY3RvciBhbmQgdGF1Z2h0IHJlZ3VsYXIgY291cnNlcyBhdCBMb25kb24gU291dGggQmFuayBVbml2ZXJzaXR5IENsaW5pYywgd2hlcmUgQ2hpbmVzZSBNZWRpY2luZSBpcyBiZWluZyB0YXVnaHQgYXMgYSBkZWdyZWUgcHJvZ3JhbW1lLCBhY2NyZWRpdGVkIGJ5IHRoZSBCcml0aXNoIEFjdXB1bmN0dXJlIEFjY3JlZGl0YXRpb24gQm9hcmQuLiAKTW9zdCB2ZXRzIGFyZSBleHRyZW1lbHkgdHlwZSBBIHBlcmZlY3Rpb25pc3RzLCBiZWNhdXNlIHRoYXQncyB3aGF0IGl0IHRha2VzIHRvIGdldCBpbnRvIHZldCBzY2hvb2wuLiAKVGhhdCBpcyBleGFjdGx5IHdoeSB3ZSBoYXZlIDEwLDAwMCB2b2x1bnRlZXJzIG9uIGNvdXJzZSAgIG9uZSBmb3IgZXZlcnkgMiAzIHJ1bm5lcnMgICB3aXRoIHdhdGVyLCBHYXRvcmFkZSwgbWVkaWNhbCBhaWQsIGV0Yy4gCk1pc2FudGhyb3BpY3Bvc3RlciAgNSBwb2ludHMgIHN1Ym1pdHRlZCAxMCBkYXlzIGFnbwpBbGljZSBJbiBXb25kZXJsYW5kIFdlZGRpbmcgVGhlbWUKSW4gdGhlc2Uga2luZHMgb2YgZ2FtZXMsIHRoZSBoYW5kIHdpdGggdGhlIGhpZ2hlc3QgY29tYmluYXRpb24gd2lucyB0aGUgcG90LiBFWEFNUExFOiBKSjU2MSBpcyBiZWF0ZW4gYnkgUVE3ODksIG9uZSBob2xkcyBhIHBhaXIgb2YgSmFja3MgKEopLCB0aGUgb3RoZXIgb25lIGEgcGFpciBvZiBRdWVlbnMgKFEpLiAKSSBsb3ZlIHRyYXZlbGluZyBldmVyeXdoZXJlLCBpZ25vcmluZyB0aGUgc3RvcnkgYW5kIGp1c3Qgd2FuZGVyaW5nIGFyb3VuZCBleHBsb3JpbmcgYW5kIGh1bnRpbmcgYW5kIGZpc2hpbmcuIApSb2RlbmJlcmcgd3JvdGUgdGhhdCBzdGF0ZSBzdGF0dXRlcyByZXF1aXJlIHBhcmVudHMgdG8gcHJvdmlkZSBuZWNlc3NhcnkgbWVkaWNhbCBjYXJlIGZvciBhIGNoaWxkLiBUaGUgc3RhdHV0ZXMgc2F5IGFsdGVybmF0aXZlIGFuZCBjb21wbGVtZW50YXJ5IGhlYWx0aCBjYXJlIG1ldGhvZHMgYXJlbid0IGVub3VnaC4KRm9yIHRvbyBtYW55IHllYXJzIHdlIGJlZW4gZXhwZWN0ZWQgdG8gYWNjZXB0IGhhbGYgYSBsb2FmLCB0aGVuIGhhbGYgdGhhdCBsb2FmLCB0aGVuIGhhbGYgb2YgdGhhdCwgd2UgZmluYWxseSBsZWZ0IHdpdGggY3J1bWJzLiAKVGhlcmUgYXJlIDUgaGVhcnRzIG9uIHRoZSBib2FyZCwgaW5jbHVkaW5nIHRoZSBhY2UuIApHb2luZyBmb3J3YXJkIEkgbWFkZSBzdXJlIEkgYXZvaWRlZCB0aGlzIG1hc3NhZ2UgdGhlcmFwaXN0LiBIb3dldmVyLCBJIHRvb2sgYSBicmVhayBmcm9tIGdldHRpbmcgYSBtYXNzYWdlIGZvciBhIGNvdXBsZSBtb250aHMgYW5kIEkgY2FuY2VsbGVkIG15IG1lbWJlcnNoaXAgYW5kIGp1c3Qgd2FudGVkIHRvIHVzZSB0aGUgbWFzc2FnZXMgdGhhdCBJIGFscmVhZHkgcGFpZCBmb3IuIEkgY2FsbCBhbmQgYXNrIHRoZSByZWNlcHRpb25pc3QgdG8gYm9vayBtZSBhIG9uZSBob3VyIG1hc3NhZ2Ugd2l0aCBhbnkgb2YgdGhlIGF2YWlsYWJsZSB0aGVyYXBpc3RzLiAKU2l4dGVlbiBtb250aHMgb24sIHRoZSBicmFjZXMgYXJlIGdvbmUgYW5kIEJlYXRvbiBpcyBqdWdnbGluZyBvdmVyc2VlaW5nIENyaW1zb24gZnJvbSBCb3N0b24sIHN0dWR5aW5nIGF0IEhhcnZhcmQsIHdoZXJlIGhlIGhhcyBjbG9zZSB0byBkb3VibGUgYSBub3JtYWwgY291cnNlIGxvYWQsIGFuZCBhIGpvYiBmaW5kaW5nIGludmVzdG1lbnRzIGZvciBXYWxsIFN0cmVldCBoZWF2eXdlaWdodHMgVGlnZXIgTWFuYWdlbWVudC4KRm9ydHVuZSBQb2tlciBwbGF5cyAxLzMgTm8gTGltaXQuIApTdXJ2ZXlzIHJldmVhbCB0aGF0IHRob3NlIHNwb3J0cyBjaGFubmVscyB0ZWxlY2FzdCBnb29kIG51bWJlciBvZiBwb2tlciB0b3VybmFtZW50cyBhcmUgbW9zdCBsaWtlZCBieSBwZW9wbGUuIFRoZSBiZXN0IHNob3cgaXMgc3VwcG9zZWQgdG8gYmUgVGhlIFdvcmxkIFBva2VyIFRvdXIsIHdoaWNoIGNhbiBiZSB2aWV3ZWQgb24gdGhlIFRyYXZlbCBDaGFubmVsLiAKWmlwU2lwWmlwcCAgOCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVGhlIHNhZGRlc3QgdGhpbmcsIHRob3VnaCwgaXMgdGhhdCB0aGVyZSBhcmUgYSBsb3Qgb2Ygc2l0ZXMgb3V0IHRoZXJlIHRoYXQgZG8gbW9yZSBiYWQgdGhhbiBnb29kLiBXaHkgaXMgRGlzY2tyZWV0IG9uZSBvZiB0aGUgYmVzdCBzZXggYXBwcz8gTW9zdCBvZiB0aGUgaW1wb3J0YW50IGZlYXR1cmVzIGFyZSBmcmVlLiAKVGhlIG9idmlvdXMgbm8gbm8gbGlzdCBpbmNsdWRlcyBiZWVyLCBicmVhZCwgY2FrZSwgY29va2llcywgcGllcywgYW5kIHNveSBzYXVjZS4gQnV0IGl0IGRvZXNuIHN0b3AgdGhlcmUuIE1hbnVmYWN0dXJlcnMgbWF5IHVzZSBnbHV0ZW4gYXMgYSB0aGlja2VuaW5nIGFnZW50IGluIHN1cnByaXNpbmcgZm9vZHMgbGlrZSBpY2UgY3JlYW0gYW5kIHNhbGFkIGRyZXNzaW5nLgpUaGVyZSB3YXMgbm8gaW5mbHVlbmNlIG9mIG1lbnRhbCBwcmVzc3VyZSBvbiBkZWNpc2lvbiBtYWtpbmcgdW5kZXIgdW5jZXJ0YWluaXR5LiAKUmVhbCB0YWNvcyBhcmUgc29mdCBhbmQgY2FuIGhhdmUgYSBtdWx0aXR1ZGUgb2YgdGhpbmdzIGluc2lkZS4gQnV0IHRoZSB0b3J0aWxsYXMgYXJlIHNvZnQuLiAKQ2UgcXVlIGNldHRlIHR1ZGUgbm91cyBlbnNlaWduZSwgYydlc3QgcXVlIGxlcyBjYWRyZXMgZGVzIG9yZ2FuaXNhdGlvbnMgZGppaGFkaXN0ZXMgc29udCBwbHVzIHByb2NoZXMgZGUgY2V0IGNoYW50aWxsb24gc2FvdWRpZW4gcXVlIGRlcyBkamloYWRpc3RlcyBvY2NpZGVudGF1eC4gCk9uIHRoZSBvdGhlciBoYW5kLiAKTWFueSBvZiB0aGUgbWVkaWNhdGlvbnMgZ2l2ZW4gaW4gdGhlIGhvc3BpdGFsIGFsc28gY2F1c2VkIHJlZHVjZWQgdmVudGlsYXRpb24sIGFuZCBuYXJjb3RpY3MgYXJlIHRoZSB3b3JzdCBvdXQgb2YgdGhlc2UuIApEb2luZyBhbnl0aGluZyBlbHNlIGlzIG92ZXJraWxsLCBhbmQgd2lsbCBub3QgeWllbGQgbWVhbmluZ2Z1bCByZXN1bHRzIG9uIGFjdHVhbCBwZXJmb3JtYW5jZSwgYnV0IGl0IHdpbGwgZHJhaW4geW91LiBBbmQgdW5sZXNzIHlvdSBoYXZlIEF6ZXJpdGUgZ2VhciBmb3IgYWxsIDMgc3BlY3MgZG8gbm90IGJvdGhlci4gRXZlbiB0b3AgcGVyZm9ybWVycyBkb24gZG8gdGhhdCBzaGl0LCBzbyBkb24gc3dlYXQgaXQuIDQgcG9pbnRzICBzdWJtaXR0ZWQgOSBtb250aHMgYWdvCklmIHlvdSdyZSBjdW5uaW5nLCB5b3Ugc2hvdWxkIGJlIHJlYWR5IHRvIGV4cGxvaXQgdGhpcy4gCkkgbGlrZSB0aGUgY29uY2VwdCBvZiBKb3lhIGFuZCBBZG9yYSBiZWluZyBjYWxsZWQgd2l0Y2hlcy4gSSBzdGFydGVkIHRoaW5raW5nIGFib3V0IHRoaXMgbGFzdCB3ZWVrIHdoZW4gQWRvcmEgd2FzIG1peGluZyBoZXIgcG9pc29ucyBhbmQgZGFuY2luZywgc21pbGluZywgYW5kIGxhdWdoaW5nIGxpa2Ugd2UgbmV2ZXIgc2VlbiBiZWZvcmUuIApZZXMsIGJ1dCBpdCB3aWxsIHRha2UgcGF0aWVuY2UgYW5kIHRpbWUuIE9ubGluZSBwb2tlciBzaXRlcyBhbmQgZG93bmxvYWRpbmcgYSBmZXcgYXQgZmlyc3QuIE5vdyBnZXR5b3VyIHByYWN0aWNlIGluIGp1c3QgcGxheWluZyB3aXRoIHBsYXkgbW9uZXkuIApUaGV5IGFyZSB0aGUgYmVzdCBvdXQgdGhlcmUgYnV0IGJvdGggYXJlIG5vdCB0aGUgZmlnaHRlcnMgdGhleSBvbmNlIHdlcmUuIApUaGUgbmV4dCBwbGF5ZXIgZ29lcyBhbGwgaW4gd2l0aCAkNDUuIApJJ20gYWN0dWFsbHkgbW9yZSBjb21wZXRpdGl2ZSB3aGVuIEkgcGxheSB3aXRoIGZyaWVuZHMgb3ZlciByYW5kb21zLiBEb2Vzbid0IG1lYW4gSSBkb24ndCBzaG9vdCB0aGUgc2hpdCBhbmQga2VlcCBpdCBmdW4gYW5kIGxpZ2h0Li4gCkFzIHdlIHdlcmUgd2Fsa2luZyBkb3duIGFuIGFsbGV5LCBhIG1hbiBhdCBhIGZhbGFmZWwgc3RhbmQgc3R1Y2sgcGllY2VzIG9mIGZhbGFmZWwgaW4gb3VyIGhhbmRzLiAKQnVzYW4gYW5kIGVzY29ydHMKTHVja2lseSwgcGFzc2VuZ2VycycgZWF0aW5nIGhhYml0cyBhcmUgZmFpcmx5IHByZWRpY3RhYmxlLiBPbiB0aGUgYXZlcmFnZSB3ZWVrbG9uZyBjcnVpc2UsIFJveWFsIENhcmliYmVhbiBlc3RpbWF0ZXMgaXRzIGd1ZXN0cyB3aWxsIGJlIDgwIHBlciBjZW50IEFtZXJpY2FuLCBjb25zdW1pbmcgYXJvdW5kIDMsMDAwIGJvdHRsZXMgb2Ygd2luZSwgNywwMDAgcG91bmRzIG9mIGNoaWNrZW4gYnJlYXN0LCBhbmQgYWxtb3N0IDEwMCwwMDAgZWdncy4KUG9vbCBkaW5pbmcgdGFibGVzIGJyaW5nIHNvbWV0aGluZyBhIGxpdHRsZSBkaWZmZXJlbnQgdG8gdHJhZGl0aW9uYWwgYmlsbGlhcmQgdGFibGVzLiBUaGV5J3JlIGhpZ2ggY2xhc3MgYmlsbGlhcmQgdGFibGVzIHRoYXQgYXJlIG5ldyBhbmQgaG90IHByb2R1Y3RzIG91dCBvbiB0aGUgbWFya2V0LiAKRURJVDogVGhlIGV2ZW50IGluIHF1ZXN0aW9uIGlzIGEgU3R1ZGVudCBbc2ljXSBEYXkgYXQgSmFtc2lsIFN0YWRpdW0sIGFuZCBpdCB3YXMgbGFzdCBTYXR1cmRheSwgc28gZm9ydHVuYXRlbHkgeW91IG1pc3NlZCBpdC4gVGhlIGV2ZW50IHdhcyBob3N0ZWQgYnkgdGhlIEludGVybmF0aW9uYWwgWW91dGggRmVsbG93c2hpcCwgd2hpY2ggaXMgcGFydCBvZiB0aGUgR29vZCBOZXdzIE1pc3Npb24sIGEgQ2hyaXN0aWFuIGN1bHQuIE5vdGhpbmcgb24gdGhlIGZseWVyIHNheXMgYW55dGhpbmcgYWJvdXQgQ2hyaXN0aWFuaXR5IChvdGhlciB0aGFuIGl0cyBpbmZhbnRpbGUgZm9yIGV2ZXJ5dGhpbmcgdmlzdWFsIHN0eWxpbmcpLiAKSSBjYW4gc2VlIE5vcnRoIEtvcmVhIGJlaW5nIGR1bWIgZW5vdWdoIHRvIHRoaW5rIFRydW1wIHdvdWxkIGJlIGluIHNlcmlvdXMgY29uc2lkZXJhdGlvbiBmb3IgYSBOb2JlbCBhd2FyZCBnaXZlbiBhbGwgaGlzIHRocmVhdHMgYWJvdXQgdXNpbmcgbnVrZXMgYW5kIGhpcyB3b3JrIHRvIHBpc3Mgb2ZmIGJhc2ljYWxseSBhbGwgb2Ygb3VyIGFsbGllcyBieSB0aHJlYXRlbmluZyB0byB0b3NzIGFzaWRlIHRyZWF0aWVzIGxlZnQgYW5kIHJpZ2h0LCBpbmNsdWRpbmcgYnJlYWtpbmcgdGhlIG9uZSB0aGF0IGlzIHJlc3RyYWluaW5nIElyYW4gbnVjbGVhciBwcm9ncmFtLgo=|<---