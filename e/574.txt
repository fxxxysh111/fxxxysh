--->|SSB3b3VsZG50IGJlIHN1cnByaXNlZCBpZiBhIGxvdCBvZiB0aGUgdG9wIHBsYXllcnMgY2hlYXQvYW5nbGUgc2hvb3QgYWxsIHRoZSB0aW1lLiBXZSBoYXZlIHNlZW4gYSB0b24gb2YgcGVvcGxlIGNhdWdodCBhbmQgdGhleSBhcmUgdGhlIG9uZXMgc3R1cGlkIGVub3VnaCB0byBkbyBpdCBvbiBjYW1lcmEuIApJIHRoaW5rIGEgbG90IG9mIHRoZSAid2VpZ2h0IG9mIE10IEV2ZXJlc3QiIGFuZCAiVm9sdW1lIG9mIE10IEV2ZXJlc3QiIGNvbWUgZnJvbSBzdGFydGluZyBhdCBiYXNlIGNhbXAub2hmYWlsICAyNyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvQSBiaXQgb2YgYm90aC4gClRoZSBpbnNwZWN0aW9uIHdhcyBkb25lIGluIEphbiAyMDE4LiAKQ2xhaXIgQmVhY2ggUmV0aXJlbWVudCBSZXNpZGVuY2UgYWRkcyBwdXR0aW5nIGdyZWVuLCBmb3JtcyBnb2xmIGxlYWd1ZSBtYXkgbm93IGtpc3MgeW91ciBzcG91c2UgS2luZ3N2aWxsZSByZXRpcmVtZW50IGhvbWUgaGVscHMgcmVzaWRlbnRzIHJlbmV3IHZvd3NEaVBvbnRpIHNhaWQgdGhlIGVtcGxveWVlcyBhcmUgYWxzbyBzaG9ydCBzdGFmZmVkIGFuZCBvdmVyIHdvcmtlZCBiZWNhdXNlIG5vdCBlbm91Z2ggbmV3IHBlb3BsZSBhcmUgZW50ZXJpbmcgdGhlIGluZHVzdHJ5Li4gCk9uZSBvZiB0aGUgbW9yZSBpbnRlcmVzdGluZyBkZXZlbG9wbWVudHMgaW4gYWxsIHRoaXMgd2FzIHRoZSBwcm9wb3NhbCBvZiBhIHJlcG9ydCBvbiB0aGUgb25saW5lIHBva2VyIGluZHVzdHJ5IHRoYXQgd2FzIHRvIGJlIHB1Ymxpc2hlZCBpbiBTZXB0ZW1iZXIgMjAxNy4gVGhlIHJlcG9ydCB3YXMgYWltZWQgYXQgZXhhbWluaW5nIHBsYXllciBwZXJjZXB0aW9uIG9mIHRoZSBpbmR1c3RyeS4gCkJlaW0gS29jaGVuLCBkYW5uIHN0ZWhlIGljaCB2b3IgZGVtIEhlcmQgdW5kIGdyZWlmZSBtaXIgaW5zIEhzY2hlbi4gSGF1cHRzY2hsaWNoIHN0aW11bGllcmUgaWNoIG1pdCBkZW0gRmluZ2VybiBtZWluZW4gS2l0emxlciwgYWJlciBpY2ggaGFiZSBhdWNoICAgb2ggTkVJTiEgICBldHdhIDEwIHVudGVyc2NoaWVkbGljaGUgVmlicmF0b3JlbiwgZGllIGljaCBqZSBuYWNoZGVtLCB3aWUgbWlyIHp1bXV0ZSBpc3QsIGF1c3dobGUuIFVuZCBkYW5uIC4gCkkgY2FuJ3QgcGlucG9pbnQgZXhhY3RseSB3aHkgdGhhdCBpcywgYnV0IEknbSBndWVzc2luZyBpdCdzIGJlY2F1c2UgbWlsbGVubmlhbHMgYXJlIHN0aWxsIG11Y2ggcG9vcmVyIHRoYW4gdGhlaXIgcHJlZGVjZXNzb3JzIGFuZCBkb24ndCBoYXZlIHRoZSBleGNlc3MgaW5jb21lIHRvIHNwZW5kIG9uIHByaWN5IGZhc2hpb24gd2hlbiB0aGVyZSBpcyBhIGNvbXBhcmFibGUgY2hlYXBlciBvcHRpb24uIFNvIHRoZXNlIGNvbXBhbmllcyBhcmUgcHJvZHVjaW5nIGxlc3MgZXhwZW5zaXZlIHBpZWNlcywga2VlcGluZyBzaW1pbGFyIHJldGFpbCBwcmljZXMsIGJ1dCBwbGFubmluZyB0byBtYWtlIGEgcHJvZml0IGV2ZW4gd2hlbiB0aGVpciBtZXJjaGFuZGlzZSBpcyBpbiBkZWVwIGRpc2NvdW50Li4gCkJvbmpvdXIgbGUgZGlzY2VybmVtZW50ICFKZSBuJ2hhYml0YWlzIHBhcyBkYW5zIHVuZSAiY2FiYW5lICBsYXBpbnMiIGV0IGplIG1lIHNvdXZpZW5zIGQndW4gaW5jZW5kaWUgbW1vcmFibGUgZGFucyBsYSB2aWVpbGxlIHZpbGxlIGRhbnMgbGUgcHQgZGUgbWFpc29uIGQnIGN0LiBBIHMnZXN0IHByb2R1aXQgYXUgcGV0aXQgbWF0aW4gZXQgdW4gbm91cnJpc3NvbiBhIHQgY2FyYm9uaXMuIApTVFYgYW5kIDI1T0hEIGNvbmNlbnRyYXRpb24gd2VyZSBhc3Nlc3NlZCBpbiA0MTEgY29tbXVuaXR5IGR3ZWxsaW5nIG9sZGVyIGFkdWx0cyAobWVhbiBhZ2UgNzAuNCAgMS44IHllYXJzLCA1Ny45JSB3b21lbikuIFRoZSBmb2xsb3dpbmcgZXN0YWJsaXNoZWQgMjVPSEQgdGhyZXNob2xkcyB3ZXJlIHVzZWQ6IHNldmVyZSAyNU9IRCBpbnN1ZmZpY2llbmN5IDMwIG5nL21MLiBBZ2UsIG51bWJlciBvZiBkcnVncyB1c2VkIHBlciBkYXksIHVzZSBvZiBwc3ljaG9hY3RpdmUgZHJ1Z3MsIGRlcHJlc3NpdmUgc3ltcHRvbXMsIGNvZ25pdGl2ZSBkZWNsaW5lLCBoaXN0b3J5IG9mIGZhbGxzLCBkaXN0YW5jZSB2aXN1YWwgYWN1aXR5LCBsb3dlciBsaW1iIHByb3ByaW9jZXB0aW9uLCBjZW50ZXIgb2YgbWFzcyAoQ29NKSBtb3Rpb24sIGFuZCB3YWxraW5nIHNwZWVkIHdlcmUgY29uc2lkZXJlZCBhcyBwb3RlbnRpYWwgY29uZm91bmRlcnMuLiAKVGFjb2xpa2Vzd2VlZCAgMSBwb2ludCAgc3VibWl0dGVkIDE2IGhvdXJzIGFnbwpIZSBpcyBjdXJyZW50bHkgZmluaXNoaW5nIHRoZSBjcmVhdGlvbiBvZiBhIHRoaXJkIGV4cGFuc2lvbiBmb3IgdGhlIGNhcmQgZ2FtZS4gCkkgcGVyc29uYWxseSBiZWxpZXZlIFNjaWVuY2UgaXMganVzdCBhbm90aGVyIGJvb2sgb2YgR29kLiBCdXQsIEhleSwgdGhhdCBqdXN0IG15IG9waW5pb24gbWFuLgpXYWxudXQgR3JvdmUgZ290IDI4IHBvaW50cyBhbmQgMTMgcmVib3VuZHMgZnJvbSBXaXNvdHpraSwgd2hvIGlzIGNvbW1pdHRlZCB0byBTRlUsIGFuZCAxOSBwb2ludHMgYW5kIG5pbmUgcmVib3VuZHMgZnJvbSBwb2ludCBndWFyZCBUYXZpYSBSb3dlbGwsIHdobyBpcyBoZWFkaW5nIHRvIEdyYW5kIENhbnlvbiBVbml2ZXJzaXR5LiAKUm9vbXMgb24gdGhjIG1haW4gZmxvb3JzIG9mIGJvdGggdGhjIGVuZ2luZWVyaW5nIHRlY2huaWNhbCBhbmQgcGh5c2ljYWwgc2NpZW5jZSBidWlsZGluZ3Mgd2lsbCBiZSBpbiB1c2UuIEhvbWV0b3duIENhcmVlcnMgY29tbWl0ICB0ZWUgbWVtYmVycyB3aWxsIGJlIGF2YWlsYWJsZSBpbiB0aGUgbWFpbiBsb2JieSB0aHJvdWdob3V0IHRoZSBkYXkgdG8gYXNzaXN0IHN0dWRlbnRzLiAKU2hlIHdhcyBhcnJlc3RlZCBmb3Igc29saWNpdGF0aW9uIG9mIHByb3N0aXR1dGlvbiBvbiBOb3YuIDI0LCAyMDEwLiBNZXRybyBQb2xpY2UsIHdoaWNoIGFnZ3Jlc3NpdmVseSBwdXJzdWVzIHBpbXBzIHRocm91Z2ggaXRzIFBhbmRlcmluZyBJbnZlc3RpZ2F0aW9uIFRlYW0sIGFza2VkIExhdXJlbiB0byB0dXJuIGluIGhlciBwaW1wLiBTaGUgZGlkbid0LgpJIGRvbiB0aGluayB5b3UgY2FuIGdvIHdyb25nIHdpdGggRHIuIFdpZW5zIGZyb20gSW1hZ2UgUGx1cyBvciBEci4gR2RpaCBmcm9tIEFxdWEgaUxhc2VyLiAKTWFueSBzaXRlcyB3b3VsZCBzdWJtaXQgY29udGVudCB0byBvdXIgc3VicmVkZGl0IHdpdGggYSBwYXl3YWxsIGFuZCBpdCB3b3VsZCBtYWtlIHZlcmlmeWluZyBvciBmYWN0IGNoZWNraW5nIGEgc3VibWlzc2lvbiBpbXBvc3NpYmxlLiAKSXQgdGhlbiB0aGF0IHBlb3BsZSB3aWxsIHNlZSBpdCBpcyBtZXJlIHNvcGhpc3RyeS4uIApKdXN0IGFzIGltcG9ydGFudCwgdGhleSBwcm9kdWNlZCBhIHJldm9sdXRpb24gaW4gcGhpbGFudGhyb3B5LiBBdCB0aGF0IHRpbWUsIHRoZSAxIHBlcmNlbnQgb2YgdGhlIGxhdGUgR2lsZGVkIEFnZSwgbWVuIHdpdGggbmFtZXMgbGlrZSBDYXJuZWdpZSBhbmQgUm9ja2VmZWxsZXIsIHdlcmUgY3JlYXRpbmcgbWFqb3IgbmV3IHBoaWxhbnRocm9waWMgaW5zdGl0dXRpb25zLiBDaHJpc3RtYXMgU2VhbHMsIGluIGEgd2F5LCB3YXMgdGhlIHJlc3BvbnNlIGZyb20gdGhlIG90aGVyIDk5IHBlcmNlbnQ6IGJ5IG1hcmtldGluZyBzb21ldGhpbmcgYXMgaW5leHBlbnNpdmUgYXMgYSBzdGFtcCBhbmQgdXNpbmcgdGhlIHByb2NlZWRzIHRvIGF0dGFjayBhIG1ham9yIGRpc2Vhc2UsIHRoZSBmb3VuZGVycyBvZiB0aGUgQ2hyaXN0bWFzIFNlYWxzIHByb2dyYW0gZGVtb25zdHJhdGVkIHRoZSBjb2xsZWN0aXZlIHBvd2VyIG9mIHRoZSBBbWVyaWNhbiBwdWJsaWMuLiAKSWYgeW91IGFyZSBhbHNvIGF0dHJhY3RlZCB0byB0aGUgb25saW5lIGdhbWUgb2YgcG9rZXIgdGhlbiB5b3UgYXJlIHJlYWRpbmcgdGhlIHJpZ2h0IGFydGljbGUgc2luY2Ugd2Ugd2lsbCBkaXNjdXNzIHdoYXQgZmVhdHVyZXMgb2YgYW4gb25saW5lIHBva2VyIHNpdGUgeW91IG11c3QgbG9vayBmb3IgYmVmb3JlIHNpZ25pbmcgdXAgdG8gb25lLiBSZXNlYXJjaGluZyBhbiBvbmxpbmUgcG9rZXIgc2l0ZSBtYXkgdGFrZSBhIHdoaWxlLCBidXQgaXQgaXMgd2VsbCB3b3J0aCBpdC4uIApVbmxpa2UgdGhlIG9uIGdvaW5nIGZhZCBub3dhZGF5cyBieSBzd2l0Y2hpbmcgdG8gbW9yZSBjb252ZW5pZW50IHdheXMgb2YgZW5qb3lpbmcgYSBwb2tlciBnYW1lLCBwbGF5aW5nIGxpdmUgcG9rZXIgaXMgc3RpbGwgdGhlIGJlc3QuIApUaGUgYXBwYXJlbnQgc2ltcGxpY2l0eSBvZiBUZXhhcyBIb2xkZW0gZHJhd3MgdGhlIFRWIGF1ZGllbmNlIGFuZCBob2xkcyB0aGVtLCBsaWtlIGFsbCBncmVhdCBnYW1lcyBhbmQgc3BvcnRzIGl0IGlzIGluY3JlZGlibHkgc2ltcGxlIHRvIHVuZGVyc3RhbmQgYnV0IGV4dHJlbWVseSBkaWZmaWN1bHQgdG8gbWFzdGVyLiAKSSBsb3ZlIHRoZSBmZWVsaW5nIG9mIHNleCBhbmQgZmVlbGluZyBoaW0gc2xhbSBpbnRvIG1lIGFuZCBydWJiaW5nIGFuZCBldmVyeXRoaW5nLiBJdCdzIG9uZSBvZiBteSBmYXZvcml0ZSB0aGluZ3MsIGJ1dCBpdCBkb2Vzbid0IGFsd2F5cyBsZWFkIHRvIG9yZ2FzbS4gSSdtIG5vdCBnb2luZyB0byBtaXNzIHRoYXQgZmVlbGluZyBiYyBJJ20gdG9vIHdvcnJpZWQgYWJvdXQgYSBwZWFrIHRoYXQncyBvbmx5IHBhcnQgb2YgdGhlIGV4cGVyaWVuY2UuLiAKUGFsZXN0aW5lIHNob3VsZCBub3QgYmUgdGhlIGF0dHJhY3RpdmUgZ2FtZSBmb3IgdGhvc2Ugd2hvIHBsYXkgY2hlc3MgcHJvZmVzc2lvbmFsbHkuIApTdHJhaWdodCAuCkpvbiBMb3Vja3M6IEFuIG9sZCBob3N0IG9mIHRoZSBMUiBwb2RjYXN0LCBhbmQgbm93IGhvc3Qgb2YgdGhlIENvbnN0cnVjdGVkIFJlc291cmNlcyBwb2RjYXN0LiBBIGZvcm1lciBSIGVtcGxveWVlIGF0IFdvdEMsIGhlIGhhcyBleHBlcmllbmNlIHdpdGggYm90aCBkZXZlbG9wbWVudCBhbmQgcGxheSAoYm90aCBjb25zdHJ1Y3RlZCBhbmQgbGltaXRlZCkuIEkgd291bGRuIHBsYXkgdGhlIHBhbnRoZXIgaXQgdG9vIHdlYWsgaWYgeW91IGRvbiBkcmF3IHlvdXIgYmxhY2sgc291cmNlcy4gCkFsc28gYml0cyBvZiBzdHJlc3MuIEkgZmlsZWQgZm9yIGRpc2FibGl0aXkgaW4gMjAxMi4gKEkgd2VudCB0byBjb3VydCBmb3IgdGhpcyBhbG1vc3QgZXhhY2x0eSAxIHllYXIgYWdvKSBGTUwuIApBZGp1c3RlZCBuZXQgaW5jb21lIGZvciB0aGUgZm91cnRoIHF1YXJ0ZXIgY2FtZSBpbiBhdCAkMjMyLDAwMCwgdXAgZnJvbSAkMTU1LDAwMCBmb3IgdGhlIHNhbWUgcXVhcnRlciBhIHllYXIgZWFybGllci4gQW5hbHlzdHMgaGFkIGV4cGVjdGVkIGVhcm5pbmdzIG9mICQxMzQsMDAwLgpUaGV5IHdpbGwgb2Z0ZW4gcHVzaCB0aGVtc2VsdmVzIHRocm91Z2ggcGFpbiByYXRoZXIgdGhhbiBhYmFuZG9uIHRoZSBtaXNzaW9uIG9yIGxlYXZlIHRoZWlyIGNvbXJhZGVzIHRvIGNvbXBsZXRlIHRhc2tzIHdpdGhvdXQgdGhlbS4gCk1lYW53aGlsZSwgYmFjayBhdCB0aGUgcmFuY2gsIHRoZSBSdW5uaW4nIFV0ZXMnIGJhc2tldGJhbGwgc2Vhc29uIGlzIGp1c3Qgc3RhcnRpbmcgdG8gaGVhdCB1cC4gQWx0aG91Z2ggdGhlIGZvb3RiYWxsIHRlYW0gc2hvd2VkIGNvbnNpZGVyYWJsZSBpbXByb3ZlbWVudCBvdmVyIHByaW9yIHllYXJzLCB0aGUgYmFza2V0YmFsbCB0ZWFtIGlzIHBvaXNlZCB0byBub3Qgb25seSBiZSBpbXByb3ZlZCBvdmVyIGxhc3QgeWVhciwgYnV0IHBvdGVudGlhbGx5IGNoYWxsZW5nZSBmb3IgYSBjb25mZXJlbmNlIGNoYW1waW9uc2hpcC4KTG9vayBhdCB0aG9zZSBkZWFkIGJhc3RhcmRzLCIgb25lIHNhaWQuIFRoZSBzb2xkaWVycyBpbiB0aGUgaGVsaWNvcHRlciBzdXNwZWN0IGl0IHRvIGJlIGhvc3RpbGUgYW5kLCBhZnRlciBnZXR0aW5nIGNsZWFyYW5jZSBmcm9tIGJhc2UsIGZpcmUgYWdhaW4uIFR3byBjaGlsZHJlbiBpbiB0aGUgdmFuIGFyZSB3b3VuZGVkLCBhbmQgb25lIG9mIHRoZSBzb2xkaWVycyByZW1hcmtzLCAiV2VsbCwgaXQncyB0aGVpciBmYXVsdCBmb3IgYnJpbmdpbmcgdGhlaXIga2lkcyBpbnRvIGEgYmF0dGxlLiIKSGVhbHRoIEZpdG5lc3MKRm9yIG1vc3QgcGVvcGxlLCB0aGVyZSBhIGJhc2VsaW5lIGFtb3VudCBvZiBtb25leSB0aGF0IHlvdSBuZWVkIHRvIHNwZW5kIHRvIGJlIGFibGUgdG8gZW5qb3kgeW91ciBsaWZlLiBGb3Igc29tZSBwZW9wbGUgdGhhdCBiYXNlbGluZSBpcyBoaWdoZXIsIGZvciBzb21lIGl0IGxvd2VyLiBQZW9wbGUgaW50ZXJlc3RlZCBpbiBMZWFuRklSRSBhcmUgcHJvYmFibHkgb24gdGhlIGxvd2VyIGVuZCBvZiB0aGUgc3BlY3RydW0gYW5kIGFibGUgdG8gZW5qb3kgdGhlbXNlbHZlcyB3aXRob3V0IHNwZW5kaW5nIGEgbG90Li4gCiJUaGUgc2hpZnQgdG8gY2Fsb3JpY2FsbHkgc3dlZXRlbmVkIGJldmVyYWdlcywgbGFyZ2VyIHBvcnRpb24gc2l6ZXMsIG1vcmUgZWF0aW5nIG9jY2FzaW9ucywgYW5kIHRoZSBpbmNyZWFzZWQgYXZhaWxhYmlsaXR5IG9mIHN3ZWV0ZXIgYW5kIGZhdHRpZXIgZm9vZHMgd2hpY2ggYXJlIGEgcmVzdWx0IG9mIHRlY2hub2xvZ2ljYWwgYW5kIGVjb25vbWljIGNoYW5nZXMgYXJlIGNhdXNpbmcgdGhlIG9iZXNpdHkgZXBpZGVtaWMsIG5vdCBnZW5lcyBwZXIgc2UuIApBZ2FpbiwgYXNrIGEgZnJpZW5kIHRvIGhlbHAgeW91IGNlbnRlciB5b3VyIGZhYnJpYyBvdmVyIHRoZSB0b3Agb2YgdGhlIGZvYW0gYW5kIHRoZSBuZXcgY29hdCBvZiBnbHVlLiBMYXkgaXQgZ2VudGx5IHVwb24gdGhlIGdsdWUuIFB1bGwgdGhlIGNsb3RoIGFuZCBzbW9vdGggaXQgd2l0aCB5b3VyIGhhbmRzLCB0byBlbnN1cmUgdGhlcmUgYXJlIG5vdCBhbnkgd3JpbmtsZXMgb3IgYWlyIGJ1YmJsZXMuIEFsbG93IHRoZSBnbHVlIHRvIGRyeSBhY2NvcmRpbmcgdG8gcGFja2FnZSBkaXJlY3Rpb25zLiBZb3Ugd2lsbCBoYXZlIGEgdGFibGUgdG9wIHdpdGggYSBzdGlmZiBza2lydCBvZiBmb2FtIGFuZCBmYWJyaWMgaGFuZ2luZyBvdmVyIHRoZSBlZGdlLgpUaGV5IHdpbGwgYmUgaXNzdWluZyBtb3JlIHN1YnBvZW5hcywiIGhlIHNhaWQuIApBIGxhd3llciB3aWxsIGJlIGFibGUgdG8gbmF2aWdhdGUgdGhpcyBmb3IgeW91LiBBIGxhd3llciBjYW4gYWxzbyBhc3Npc3Qgd2l0aCB5b3UgKE9QKSBzdGF5aW5nIE5DIHdpdGggYSBjZWFzZSBhbmQgZGVzaXN0IGxldHRlciBvciBvdGhlciBsZWdhbCBiZWFnbGUgdGhpbmdzIHRoYXQgbWF5IGNvbWUgdXAuIApCdXQgbXkgbW90aGVycyBzaWRlLCBub3QgbWFueSBvZiB0aGVtIG1hZGUgaXQgdG8gZXZlbiB0aGVpciBtaWQgc2V2ZW50aWVzIGFuZCB3aXRoIG15IG1vbSBiZWluZyBzaWNrIGhlcnNlbGYgYW5kIHRoZSBhbW91bnQgb2YgdGhpbmdzIHNoZSBmb3JnZXRzIHRoZXNlIGRheXMgbWFrZXMgbWUgcmVhbGx5IGFueGlvdXMuIFNoZSA2NCBhbmQgaGVyIG1vbSBvbmx5IG1hZGUgaXQgdG8gNzIuIEl0IGZlZWxzIGxpa2UgSSBoYXZlIGxlc3MgdGhhbiBhIGRlY2FkZSB3aXRoIGhlciBub3csIGV2ZW4gdGhvdWdoIEkga25vdyBoZXIgcGFyZW50cyBhZ2VzIGRvbiBuZWNlc3NhcmlseSBoYXZlIGEgY29ycmVsYXRpb24gdG8gd2hhdCBhZ2Ugc2hlIHdpbGwgbWFrZSBpdCB0bywgc2ltcGx5IGJlY2F1c2Ugb2YgYmV0dGVyIGFjY2VzcyB0byBtZWRpY2FsIGNhcmUuIEkgc3RpbGwgZ2V0IGdyZWF0IHN3b29waW5nIHN1cmdlcyBvZiBhbnhpZXR5IHRoaW5raW5nIGFib3V0IHRoZSBmdXR1cmUgYW5kIGhlciBhZ2UuCkJ1dCBJIHdhcyBoZXJlIHRvIHRoZSBmaXJzdCBDaHJpc3RtYXMgZGlubmVyIHRoYXQgd2FzIGV2ZXIgZWF0ZW4gaW4gdGhpcyBob3VzZSBhbmQgdGhlIHNjaG9vbG1hc3RlcidzIGJyaWRlIGNvb2tlZCBpdC4gVGhhdCB3YXMgc2l4dHkgeWVhcnMgYWdvIHRvZGF5LCBNaXN0cmVzcyBCbHl0aGUgYW5kIGEgZGF5IHZlcnkgbGlrZSB0aGlzIGp1c3QgZW5vdWdoIHNub3cgdG8gbWFrZSB0aGUgaGlsbHMgd2hpdGUsIGFuZCB0aGUgaGFyYm9yIGFzIGJsdWUgYXMgSnVuZS4gClRoZSBwb2tlciBjaGFuZ2UgY2FtZSBvbiB0aGUgaGVlbHMgb2YgYSBkZWFsIHN0cnVjayBiZXR3ZWVuIHRoZSBsZWdpc2xhdHVyZSBhbmQgdGhlIFNlbWlub2xlcyB0byBnaXZlIHRoZSB0cmliZSBleGNsdXNpdmUgcmlnaHRzIGZvciBmaXZlIHllYXJzIHRvIHNwcmVhZCBibGFja2phY2sgdG8gbW9zdCBvZiBpdHMgc2V2ZW4gcmVzZXJ2YXRpb25zIGFuIGFycmFuZ2VtZW50IHRoYXQgZ3VhcmFudGVlcyB0aGUgcmVjZXNzaW9uIHJhdmFnZWQgc3RhdGUgYXQgbGVhc3QgJDEgYmlsbGlvbiBpbiByZXZlbnVlLiAKV2hlbiBjb21lcyB0byBtZXNzYWdlIGl0IG5lZWQgbm90IGJlIGEgd29yZHMgaGF2aW5nIGEgcGFydGljdWxhciBsYW5ndWFnZS4gClNoZSBpcyBwcm91ZCBoZXIgZ292ZXJubWVudCBoaWtlZCBjb3Jwb3JhdGUgdGF4ZXMgc28gYSAiZmFpciBzaGFyZSIgaXMgcGFpZC4KTmlja2kgaGFzIGFuIGFsYnVtIGNvdmVyIHdpdGggaGVyIGVudGlyZSBib2R5IG9uIGRpc3BsYXksIGxpdHRsZSBuaXAgY292ZXJzIGFuZCBzaGl0LiBJZiBEcmFrZSwgYmlnZ2VzdCBkdWRlIGluIHRoZSBnYW1lLCBwdXQgb3V0IGFuIGFsYnVtIHdoZXJlIGhlIGNvdmVyaW5nIGhpcyBkaWNrIHdpdGggYSBsZWFmLCB0aGF0IHNoaXQgd291bGQgcHJvYmFibHkgYmUgc3VwZXIgY29udHJvdmVyc2lhbCAoaXQgd291bGQgYmUgd2VpcmQgdG9vLCBidXQgdGhpcyBwcm92ZXMgbXkgcG9pbnQuIApRdWFudCAgbGEgZGF0dGUsIHNpIGwgcHJlbmQgY29ubmFpc3NhbmNlIGRlIGNlcnRhaW5zIHBhc3NhZ2VzIGR1IENhbnRpcXVlIGRlcyBjYW50aXF1ZXMsIGVsbGUgZXN0IGluZHViaXRhYmxlbWVudCBmbWluaW5lLCBuZSBzZXJhaXQgY2UgcXVlIHBhciBsYSBmb3JtZSBkZSBzb24gbm95YXUgcmFwcGVsYW50IHVuZSB2dWx2ZS4gCkdvb2RtYW4gaGltc2VsZiwgdGhlIGZpcnN0IG9uZSByZWdhcmRpbmcgdGhlIG9uZSBvZiB0aGUgcHJpbWFyeSBleGVyY2lzZXMgZmVhdHVyZWQgaW4gdGhpcyB0cmFpbmluZyBzeXN0ZW06LiAKRmlsZWQgVW5kZXI6IExvY2FsLCBOZXdzLCBQaG90byBHYWxsZXJpZXMKU29sYW5kZXIgbGF5cyBhc2hvcmUgdG8gbmlnaHQgZm9yIHRoZSBmaXJzdCB0aW1lLCB0aGVpciBNYXJrZWUncyBiZWluZyBzZXQgdXAgd2l0aGluIHRoZSBXYWxscyBvZiB0aGUgRm9ydCBhbmQgZml0IGZvciB0aGVpciByZWNlcHRpb24uLiAKU29tZSBvZiB0aGUgcGVvcGxlIHJlcGx5aW5nIG5vdCB1bmRlcnN0YW5kaW5nIGhvdyB5b3UgY291bGRuICJqdXN0IHJlcGx5IGJhY2siIG9yICJ5b3UgYW4gaW1tYXR1cmUgYnJhdCIgaGF2ZSBjbGVhcmx5IE5PIElERUEgd2hhdCBpdCBsaWtlIHdoZW4geW91ciBvd24gcGFyZW50cyBhcmUgZGFtYWdpbmcgYW5kIGFidXNpdmUuIEp1c3QgYmVjYXVzZSBzb21lIHBlb3BsZSBoYXZlIGdvb2QgcmVsYXRpb25zaGlwcyB3aXRoIHRoZWlyIHBhcmVudHMsIGRvZXNuIG1ha2UgaXQgaW1wb3NzaWJsZSB0aGF0IHRoZXJlIGFyZSBwYXJlbnRzIHdobyB3aWxsIG1pc3RyZWF0IGFuZCBhYnVzZSB0aGVpciBjaGlsZHJlbiBsaWtlIG5vIHRvbW9ycm93LiBMb3RzIG9mIHByb2plY3Rpb24gY29taW5nIGZyb20gcGVvcGxlIHdobyBjYW4gZXZlbiBpbWFnaW5lIHdoYXQgaXQgbGlrZSB0byBiZSBhIGNoaWxkIG9mIGFidXNlIGF0IHlvdXIgb3duIGZhbWlseSBoYW5kLiBObyBlbXBhdGh5IGZyb20gdGhlbSBiZWNhdXNlIGxvdHMgb2YgcGVvcGxlIGJlbGlldmUgYmxpbmRseSBpbiB0aGUgbmFycmF0aXZlIG9mIHBhcmVudHMgYXJlIG5vdCBwZXJmZWN0IGJ1dCBpbmhlcmVudGx5IGFsd2F5cyBsb3ZlIHRoZWlyIGtpZHMuIFRoYXQgbm90IGFsd2F5cyB0aGUgY2FzZSwgYW5kIGp1c3QgYmVjYXVzZSB0aGV5IGhhdmVuIGV4cGVyaWVuY2VkIGl0IGRvZXNuIGdpdmUgdGhlbSB0aGUgcmlnaHQgdG8gYmVyYXRlIHlvdSBmb3Igc29tZXRoaW5nIHRoZXkgZG9uIHVuZGVyc3RhbmQuIFlvdSBhcmUgZG9pbmcgdGhlIHJpZ2h0IHRoaW5nIGZvciB5b3UgYW5kIGVuZm9yY2luZyBib3VuZGFyaWVzLgoxLiAKVGhlIGNpdHkgcmVjb21tZW5kcyBjb21wbGV0aW5nIHByZXZlbnRhdGl2ZSBzcHJheWluZyBuZXh0IHllYXIgYmVmb3JlIEp1bHkuIFRyZWVzIHRoYXQgYmVldGxlcyBoaXQgdGhpcyB5ZWFyIHNob3VsZCBiZSBtb25pdG9yZWQgZm9yIGhlYWx0aCBpbiB0aGUgc3ByaW5nIGFuZCBlYXJseSBzdW1tZXIgb2YgMjAwOC4gSWYgaW5mZXN0ZWQgdHJlZXMgYXJlIGR5aW5nLCB0aGV5IG11c3QgYmUgcmVtb3ZlZCBiZWZvcmUgdGhlIGJlZXRsZXMgZmx5IGZyb20gdGhlbSBsYXRlIEp1bHkgdGhyb3VnaCBBdWd1c3QgbmV4dCB5ZWFyLCB0aGUgY2l0eSBzYWlkLgpUaGF0J3Mgbm90IGhvdyB0aGF0IHdvcmtzLiBZb3Ugc3RpbGwgbmVlZCB0byBwYXkgZm9yIHRoZSBmaXJzdCBkaXNoIHlvdSBvcmRlcmVkIGJlY2F1c2UgdGhleSBjYW4ndCBzZXJ2ZSBpdCB0byBhbnlvbmUgZWxzZSBhbmQgdGhleSB1c2VkIHRoZSBpbmdyZWRpZW50cyB0byBtYWtlIGl0IHNvIGl0J3Mgb3V0IG9mIGludmVudG9yeS4gQ2FuJ3QgZGlzYXNzZW1ibGUgdGhlIGZvb2QgZnJvbSB0aGUgcGxhdGUgYW5kIHB1dCBpdCBiYWNrLgpOb3RyZSBzaWduYWxlbWVudCBhIGVudHJhaW4gdW5lIHNyaWUgZCdpbnRlcnZlbnRpb24gZGUgbGEgRFBTUCBldCBwbHVzaWV1cnMgdmVyYmFsaXNhdGlvbnMsIGNlIHF1aSBuJ2EgcGFzIGRpc3N1YWQgT3JhbmdlIEJhbmsgZGUgY29udGludWVyIHNvbiBhY3Rpdml0IHB1YmxpY2l0YWlyZS4gTCdhZGpvaW50ZSAgbGEgbWFpcmUgcydlc3QgZW5zdWl0ZSBkaXJlY3RlbWVudCBhZHJlc3NlICBsYSBkaXJlY3Rpb24gZGUgbGEgYmFucXVlIGVuIGxpZ25lLiBMZSBjYWJpbmV0IGRlIENvbG9tYmUgQnJvc3NlbCBub3VzIGEgY29tbXVuaXF1IGxlIGNvdXJyaWVyIGFkcmVzcyBsZSA1IGZ2cmllciBkZXJuaWVyIHBhciBjZXR0ZSBkZXJuaXJlICBQYXVsIGRlIExldXNzZSwgcXVpIHNlIHByc2VudGUgc3VyIGxlcyByc2VhdXggc29jaWF1eCBjb21tZSAiRGVwdXR5IENoaWVmIEV4ZWN1dGl2ZSBPZmZpY2VyIGZvciBGaW5hbmNpYWwgU2VydmljZXMgRGlnaXRhbCBCYW5raW5nIE1vYmlsZSBCYW5raW5nIi4gCkluc3RlYWQgb2YgbWFraW5nIGEgYmlnIHJhaXNlLCBzYXkgJDUwLDAwMCBmcm9tIHRoZSBidXR0b24sIEkgZm9sZGVkIG15IGhhbmQuIApJIGRvbid0IGhhdmUgdGhlIGFuc3dlcnMgYXMgdG8gaG93IHdlIHN0b3AgaXQsIGJ1dCBiYXNlZCBvbiBoaXN0b3J5IHNpbXBseSAiZGVtb25pemluZyIgb3IgYmFubmluZyBkb2VzIG5vdGhpbmcuIApJbiBzb21lIGNhc2VzIGl0IG1heSBldmVuIGFsbG93IGZvciByZW50YWwgaW5jb21lLi4gCldlIGZvY3VzIG91ciBmdW5kcmFpc2luZyBvbiB0d28gYW5udWFsIGV2ZW50cywgdGhlIFBva2VyIFRvdXJuYW1lbnQgaW4gTWFyY2ggYW5kIHRoZSBTbm93bWFzcyBXaW5lIEZlc3RpdmFsIGluIFNlcHRlbWJlci4uIApTaGUgYWxzbyB0b2xkIHRoZSBqdXJ5IEhhdGNoIHdyb3RlIGluIGEgbGV0dGVyIHRvIGhpcyBtb3RoZXIgdGhhdCBoZSBtaWdodCBoYXZlIHNhaWQgc29tZSB0aGluZ3MgdGhhdCBpbmNyaW1pbmF0ZSBoaW0uIEN1bW1pbmdzIHNhaWQgdGhlIGx5cmljcyBpbiBIYXRjaCdzIHNvbmdzIGFnYWluIHByb3ZlIGhpcyBpbnRlbnQuIFNoZSBzYWlkIGluIHRoZSBwaHJhc2UgIllvIE1hcmxvIiBoZSBldmVuIGNhbGxzIG91dCBoaXMgaGl0IG1hbi4gClRvbSBDb25uYUpseSwgdmV0ZXJhbiAib2xkICBqIHNjaG9vbCIgbGF3bWFrZXIgd2hvIHN0ZWVyZWQgSSBtb3N0IG9mIChoZSBuYXRpb24ncyBtYWpvciBmb3JlaWduIGxhd3MgdGhyb3VnaCB0aGUgU2VuYXRlIGkgZHVyaW5nIGFuZCBzaW5jZSBXb3JsZCBXYXIgSUksIHRvbmlnaHQgaGUgd2lsbCBub3QgYmUgO2EgY2FuZGlkYXRlIGxvciByZSBlbGVjdGlvbiB0aGlzIHllYXIuIAoiQXVzdHJhbGlhIGhhdmUgbm90IGJlZW4gcXVpdGUgYXMgZG9taW5hdGluZyBzaW5jZSB0aGVuLCBidXQgdGhleSBhcmUgdGhyb3VnaCB0aGF0IHRyYW5zaXRpb25hbCBwZXJpb2Qgbm93LCIgaGUgc2FpZC4gCk1vc3QgbWFjaGluZXMgbm8gbG9uZ2VyIHNwaXQgb3V0IGNvaW5zLiAKSWYgeW91IGxldCBleHRlcm5hbCBmYWN0b3JzIGdldCB0aGUgYmV0dGVyIG9mIHlvdSwgeW91IGRlYWQgbWVhdC4gQnV0IGlmIHlvdSBzdWNjZWVkIGluIHJlbGF4aW5nIGFuZCBmb2N1c2luZyBjb21wbGV0ZWx5IG9uIHlvdXIgZ2FtZSwgeW91IG1heSBqdXN0IGhhdmUgZ290dGVuIHJpZCBvZiB5b3VyIG5lcnZlcyBmb3IgdGhlIGZpbmFsIHRpbWUuLiAKRG9lcyBhbnlvbmUga25vdyBvZiBhIGdvb2QgSnVubyBjbG9uZSBmcm9tIHRoZSA4MCBvciA5MCBJIGJlZW4gc2xvd2x5IGJ1aWxkaW5nIHVwIGEgcmF2ZS90ZWNobm8gc3RhdGlvbiBiYXNlZCBtYWlubHkgYXJvdW5kIGdlYXIgYXZhaWxhYmxlIGJlZm9yZSB0aGUgeWVhciAyMDAwLCBpdCBiZWVuIGludGVyZXN0aW5nIGZpbmRpbmcgbG90cyBvZiB1bmRlcmFwcHJlY2lhdGVkIGdlbXMgdGhhdCBjYW4gYmUgZm91bmQgcHJldHR5IGNoZWFwLiBCZWVuIGxvb2tpbmcgYXQgdGhlIEFscGhhIEp1bm8gc2VyaWVzLCBidXQgd291bGQgcHJlZmVyIHRvIGdvIGEgYml0IGNoZWFwZXIgYW5kIGEgYml0IG1vcmUgYWNjdXJhdGUgdG8gdGhlIEp1bm8gNiBvciA2MCBpZiBwb3NzaWJsZS4gRG9lcyBhbnlvbmUgaGF2ZSBhbnkgc3VnZ2VzdGlvbnMsIG9yIGRvIHlvdSB0aGluayBJIGJlIGJldHRlciBvZmYganVzdCBnb2luZyBmb3IgdGhlIEFscGhhIEp1bm8/IEFuYWxvZyBvciBkaWdpdGFsIGlzbiBpbXBvcnRhbnQgdG8gbWUgZm9yIHRoaXMsIGp1c3QgbG9va2luZyBmb3IgZ29vZCBzb3VuZHMuClRoZSBwcm9ibGVtIGhhZCBzdGVhZGlseSB3b3JzZW5lZCBzaW5jZSAyMDExIHVuZGVyIHRoZSBsYXN0IHRocmVlIGNoaWVmIGV4ZWN1dGl2ZXMgYXBwb2ludGVkIGJ5IFdhcm5lICAgaGlzIGJyb3RoZXIgSmFzb24sIENyb3duIENhc2lubyBwb2tlciBleGVjdXRpdmUgYW5kIG1hdGUgSm9ubm8gUGl0dG9jaywgYW5kIGZvcm1lciBNZWxib3VybmUgU3Rvcm0gY29tbXVuaXR5IHJlbGF0aW9ucyBtYW5hZ2VyIFN0YWNpZSBDaGlsZHMsIENoaWxkcyBoYWQgcmVjZW50bHkgcXVpdCBhcyBDRU8uIApBbHNvLCBmdWNrIHRpY2tldG1hc3Rlcj8gSSBjaGVja2VkIHRoZSBib3ggZm9yIGluc3VyYW5jZSBiYyBpdCBtYWRlIGl0IHNlZW0gbGlrZSBhbGwgaXQgc2VlbWVkIGxpa2Ugd2FzIGEgY29uc2VudCByZWxlYXNlIGFuZCBub3cgSSBzaG9ydCBsaWtlICQ0MCBtb3JlIGJ1Y2tzClRoaXMgd2FzIHRoZSByZXN1bHQgb2YgY2FsbG91cyBkZXJlZ3VsYXRpb24uIFRoZSBpbnRlcmVzdGluZyB0aGluZyBpcyB0aGF0IG5vIG9uZSBvZiB0aGVzZSByZWd1bGF0b3J5IGVmZm9ydHMgYnJvdWdodCBkb3duIHRoZSBob3VzZS4gCkkgd291bGRuIHNheSB0aGUgc2lnbnMgYXJlIGFjY3VyYXRlLCB0aGUgcG9zaXRpb25pbmcgb2YgdGhlIGNvbnN0ZWxsYXRpb25zIGFjdHVhbGx5IGNoYW5nZWQgc2luY2UgdGhlaXIgaW5jZXB0aW9uIHNvIHRoZSB6b2RpYWMgY2FsZW5kYXIgdGhhdCBwZW9wbGUgdXNlIHRvZGF5IGlzbiBldmVuIHRoZSBhY2N1cmF0ZS4gClByZWNhdXRpb25zIGFyZSBlc3NlbnRpYWwgZm9yIHBva2VyIGdhbWVzLiAKSW4gcmVhbCBlc3RhdGUsIHlvdSB3aWxsIG1pc3Mgc29tZSBncmVhdCBkZWFscyB0aGF0IHdlcmUgbWFkZSBncmVhdCBtb3JlIHNvIGJlY2F1c2Ugb2YgdGhlIHRlcm1zIHRoYW4gdGhlIHByaWNlLi4gClBlb3BsZSBhcmUgZnJlcXVlbnRseSBwb2lzb25lZCBieSB0aGUgc3Vic3RhbmNlcyB0aGV5IHVzZSB0byBjb3BlIHdpdGggbGlmZSBjaGFsbGVuZ2VzLCBpbmNsdWRpbmcgdHJhdW1hLCBpbmp1cmllcyBhbmQgYWJhbmRvbm1lbnQgdGhlIHByb2ZvdW5kIHN1ZmZlcmluZyB3aGljaCBzbyBvZnRlbiBsZWFkcyB0byBsaWZlIG9uIHRoZSBzdHJlZXRzIGluIHRoZSBmaXJzdCBwbGFjZS4gClRoZSBmaXJzdCB0aGluZyB0aGF0IHlvdSBuZWVkIHRvIGNvbnNpZGVyIHdoZW4geW91IGFyZSB0aGlua2luZyBhYm91dCBnZXR0aW5nIHN0YXJ0ZWQgd2l0aCB0aGUgY2xvdGggZm9yIHlvdXIgcG9rZXIgdGFibGUgaXMgdGhhdCB0aGVyZSBhcmUgbWFueSBkaWZmZXJlbnQga2luZHMgZm9yIHlvdSB0byBjb25zaWRlci4gVGhleSBjb21lIGluIGRpZmZlcmVudCB2YXJpZXRpZXMgYW5kIHRoZXkgY29tZSB3aXRoIGRpZmZlcmVudCBxdWFsaXRpZXMsIGFuZCBpbiBtYW55IGNhc2VzLCB0aGV5IGhhdmUgdmFzdGx5IGRpZmZlcmVudCBjb3N0cyBhcyB3ZWxsLgpBbmQgdGhlbiBsaWZlIHdlbnQgb24uIFRoZSBtZW1vcmllcyBvZiB0aGF0IHRpbWUgaW4gbXkgbGlmZSBhcmUgc28gZGlzdGFudCBhbmQgc28gdmFndWUuIApTdXByZW1lIENvdXJ0IGRpc21pc3NlcyB0b3AgcG9rZXIgcGxheWVyCkl0IG9mdGVuIG5lZWRzIG1vcmUgdGhhbiB0aGF0LCB0aG91Z2gsIHRvIGZ1bGx5IGRldmVsb3AgdGhvc2UgdG9mZmVlLCBzcGljZSwgbnV0dHkgYW5kIGRyaWVkIGZydWl0IG5vdGVzIHdlIGxvdmUgc28gbXVjaC4gCk9uY2UgeW91IGhhdmUgdGhhdCBkb25lLCBub3cgeW91IGNhbiB0b3AgY29hdC4gSWYgeW91IHN0YXRlIHNpZGUsIHlvdSBzdGlsbCBoYXZlIHRoZSBvcHRpb24gb2Ygb2lsIGJhc2VkIHBhaW50cyBmb3IgcmVndWxhciBpbnRlcmlvciB1c2UsIGdvIGZvciB3aGljaCBldmVyIHNoZWVuIHlvdSB3YW50LCBjdXBib2FyZHMgYXJlIHR5cGljYWxseSBhdCBsZWFzdCBzZW1pZ2xvc3MsIG1vc3RseSBmb3IgbG9va3MgYW5kIGVhc2Ugb2YgY2xlYW5pbmcuIEJlIHdhcmUgdGhhdCB0aGUgaGlnaGVyIHRoZSBnbG9zcyB0aGUgZWFzaWVyIGl0IGlzIHRvIHNwb3QgYW5kIG1pc3Rha2VzLiAKVGhleSBjYW1lIGJhbmdpbmcgbGlrZSB0aGUgZGV2aWwgb24gb3VyIGRvb3IsIGJ1dCBvdXIgdHdvIHNob3J0ZXN0IGd1YXJkcyB3ZXJlIG9uIEVDLCBzbyB0aGV5IGNvdWxkbid0IHNlZSB3aGF0IHdhcyBnb2luZyBvbi4gClRoYXQgc2FpZCwgd2hhdCBpcyB0aGUgcG9pbnQgb2YgeW91ciBBTUE/IFRvIGdldCBzb21lIGF0dGVudGlvbj8gVG8gZHJ1bSB1cCBidXNpbmVzcz8gVG8gc2NhcmUgcGVvcGxlIGJ5IGluYWNjdXJhdGVseSB1c2luZyBmYW5jeSBzb3VuZGluZyB0ZXJtcyBhbmQgdHJ5aW5nIHRvIGNyZWF0ZSB0aGUgYXBwZWFyYW5jZSBvZiBhIGNvbnNwaXJhY3k/IEkgYXNzdXJlIHlvdSwgdGhlcmUgaXMgbm8gRUNUIGNvbnNwaXJhY3kuIApHcmVlbndhbGQgaXMgYSBoYWNrIGFuZCB3aWxsIGRpc3JlZ2FyZCBqb3VybmFsaXN0aWMgc3RhbmRhcmRzIHRvIGNhdGVyIHRvIGFzc3VtcHRpb25zIGFuZCBvcGluaW9ucyBvZiBoaXMgcmVhZGVycy4gVGhpcyBnb2VzIGJhY2sgZWFybHkgaW4gaGlzIGNhcmVlciB0byB3aGVuIGhlIHdhcyBjYXVnaHQgdXNpbmcgc29ja3B1cHBldCBhY2NvdW50cyBvbiBwb2xpdGljYWwgZm9ydW1zLiBJbiB0aGlzIGluc3RhbmNlIHRoZSBmb3J1bSBhZG1pbiBub3RpY2VkIG11bHRpcGxlIHVzZXJzIGxvZ2dpbmcgaW4gZnJvbSB0aGUgc2FtZSBJUCBhZGRyZXNzIGFzIEdyZWVud2FsZCBkaWQsIG9ubHkgdG8gZGVmZW5kIGhpbSBpbiBpZGVudGljYWwgbGFuZ3VhZ2UuCldoZW4gd2F0Y2hpbmcgVFYgcHJvZ3JhbXMsIG9yIG1vdmllcywgeW91J2xsIGNvbWUgYWNyb3NzIHNjZW5lcyB3aGVyZWluIHBlb3BsZSBhcmUgcGxheWluZyBwb2tlciwgbW9yZSBvZnRlbiB0aGFuIG5vdCwgVGV4YXMgaG9sZCAgIGVtLiAKUG9pbnQgaXMgbm90IHRvbyB0aGluayB0b28gbXVjaC4gS25vdyBzb21lIGJhc2ljIGZvb2RzIHlvdSBzaG91bGQgY29uc3VtZSBtb3JlIGFuZCB0aGF0cyBpdC4gCkR1dGllcyBQYXN0b3JzIGdlbmVyYWxseSBvdmVyc2VlIG9yIHN1cGVydmlzZSB0aGUgYWN0aXZpdGllcyBvZiBhIGNodXJjaC4gVGhleSBhcmUgZXNzZW50aWFsbHkgInNoZXBoZXJkcyIgd2hvIG1pbmlzdGVyIHRvIHRoZWlyICJmbG9jaywiIHRoYXQgaXMsIHRoZSBjaHVyY2hnb2VycyB3aG8gYXR0ZW5kIHNlcnZpY2VzIGFuZCBhY3Rpdml0aWVzLiAKU2Vsb24gbCBsZXMgcG9saWNpZXJzIG4gcGFzIGRhbnMgY2V0IHRhYmxpc3NlbWVudCBwYXJjZSBxdSBuIGF1cmFpdCBwYXMgZGUgdHJhaXRlIGRlIHBlcnNvbm5lcywgZGUgcHJveG50aXNtZSBvdSBkZSBwcm9zdGl0dXRpb24ganV2bmlsZS4gTWFyZGksIFJhZGlvIENhbmFkYSBuIHBhcyB0IGVuIG1lc3VyZSBkIHVuZSBlbnRyZXZ1ZSBhdmVjIGxlIFNlcnZpY2UgZGUgcG9saWNlIGRlIGxhIFZpbGxlIGRlIE1vbnRyYWwuCkhlciBkYXlzIG9mZiB3ZXJlIHJhbmRvbSBieSB0aGUgd2F5LiAKQ29sbGVnZSBkZWdyZWVzIGluIGJ1c2luZXNzLCBhY2NvdW50aW5nLCBtYXJrZXRpbmcgYW5kIG1hbmFnZW1lbnQgYXBwbHkgdG8gdGhlIHJldGFpbCBlbnZpcm9ubWVudCwgb2ZmZXJpbmcgYW4gYWNhZGVtaWMgYmFja2dyb3VuZCB0aGF0IG1vc3QgY29tcGFuaWVzIGNhbid0IG1hdGNoIHdpdGggdGhlaXIgb3duIHRyYWluaW5nLiAKVGhleSBuZXZlciBjaGVja2VkIG1lIG91dC4gSSBjb3VsZCBoYXZlIGJlZW4gYSBob2FyZGVyIG9yIGFuIGFidXNlci4gClVuZW1wbG95bWVudCBpcyBoaWdoIGluIHRoZSBkZWZlY3RvciBjb21tdW5pdHksIGFuZCB0aGUgY3VsdHVyZSBnYXAgYmV0d2VlbiB0aGUgdHdvIGNvdW50cmllcyBpcyBzbyBiaWcsIGFuZCB0aGUgZXh0ZW50IHRvIHdoaWNoIHRoZWlyIGV4cGVyaWVuY2VzIGluIE5vcnRoIEtvcmVhIGNvbG91cmVkIHRoZWlyIG1pbmRzLCB0aGF0IG1hbnkgZGVmZWN0b3JzIGZpbmQgdGhlbXNlbHZlcyBzdHJ1Z2dsaW5nIG1hc3NpdmVseSB0byBjb3BlIHdpdGggcmhlIFNLIGN1bHR1cmUuLiAKSSB3YXMgY29uY2VybmVkIHdoZW4gSSBzYXcgcGVvcGxlIGJyaW5naW5nIGdpZnRzIChkaWRuJ3Qgc2VlIHRoZSBpbnZpdGVzIGFuZCBJIGhvcGUgdGhleSBkaWRuJ3QgY29tZSBvZmYgZ3JlZWR5KSwgYnV0IGFsbCB0aGUgZ3V5cyB3ZXJlIHN1cGVyIGV4Y2l0ZWQgdG8gYmUgYXQgdGhlaXIgZmlyc3QgYmFieSBzaG93ZXIuIFRoZSBiZXN0IHBhcnQgd2FzIHdoZW4gbXkgaHVzYmFuZCBvcGVuZWQgYWxsIHRoZSBnaWZ0cyBpbiBmcm9udCBvZiBldmVyeW9uZSBhZnRlciBhIGNvdXBsZSBob3VycyBvZiBkcmlua2luZy4gClBlcmNlcHRpb24gb2YgcmVkIGhhcyBldm9sdmVkIGluIHN1Y2ggaW1wb3J0YW50IGV2ZW50cyBhbmQgZXhwZXJpZW5jZXMsIHNheXMgRWxsaW90LiAKSGUgYnVpbHQgYSBkZXRlcnJlbnQsIHRyeWluZyB0byBjdXJiIG9yIGV2ZW4gbWF5YmUgcHV0IGFuIGVuZCB0byB0aGUgbmV2ZXIgZW5kaW5nIGRlc3RydWN0aW9uIHRoZXNlIG11cmRlcm91cyByZXByb2JhdGVzIGJyb3VnaHQgdG8gaGlzIGJlbG92ZWQgZ2FsYXh5ICAgYW5kIFJvdEogc2hvd3MgdXMgaG93IHJpZ2h0IGhlIHdhcyB3aXRoIHN1Y2ggZXh0cmVtZSBtZWFzdXJlcywgYXMgdGhlIHRlcnJvcmlzdCBub3Qgb25seSBzaGFtZWxlc3NseSBtYW5pcHVsYXRlIHRoZSBwZWFjZWZ1bCwgaW5ub2NlbnQgaW5oYWJpdGFudHMgb2YgYSBwbGFuZXQsIGJ1dCBhbHNvIGJsb3cgdXAgYSBnaWdhbnRpYyBvYmplY3QgYWJvdmUgdGhlaXIgd29ybGQsIGRvb21pbmcgdGhlIHBsYW5ldCBhbmQgaXQgaW5oYWJpdGFudHMgdG8gY2VydGFpbiBkZXN0cnVjdGlvbi4gYW5kIHRoZXkgZGlkIHNvIHdpdGhvdXQgYSBjYXJlIGluIHRoZSB3b3JsZC4KUG9rZXIgUHJvYmxlbXNQb2tlciBwcm9ibGVtcyBhcmUgdmVyeSBjb21tb24gaW4gcHJvYmFiaWxpdHksIGFuZCBhcmUgaGFyZGVyIHRoYW4gdGhlIHNpbXBsZSBxdWVzdGlvbiB0eXBlcyBtZW50aW9uZWQgYWJvdmUuIFRoZSBtb3N0IGNvbW1vbiB0eXBlIG9mIHBva2VyIHF1ZXN0aW9uIGludm9sdmVzIGNob29zaW5nIGEgZml2ZSBjYXJkcyBmcm9tIHRoZSBwYWNrIGFuZCBhc2tpbmcgdGhlIHN0dWRlbnQgdG8gZmluZCB0aGUgcHJvYmFiaWxpdHkgb2YgYSBjZXJ0YWluIGFycmFuZ2VtZW50LCBjYWxsZWQgYSBwb2tlciBoYW5kLiBUaGUgbW9zdCBjb21tb24gYXJyYW5nZW1lbnRzIGFyZSBkaXNjdXNzZWQgaW4gdGhpcyBzZWN0aW9uLgpJJ20gYSBiaXRjaC4gSSdtIGEgbG92ZXIuIEknbSBhIGNoaWxkLiBJJ20gYSBtb3RoZXIuIEknbSBhIHNpbm5lci4gSSdtIGEgc2FpbnQuIEkgZG8gbm90IGZlZWwgYXNoYW1lZCwgSSdtIHlvdXIgaGVsbC4gSSdtIHlvdSBkcmVhbS4gSSdtIG5vdGhpbmcgaW4gYmV0d2VlbiwgWW91IGtub3cgeW91IHdvdWxkbid0IHdhbnQgaXQgYW55IG90aGVyIHdheSEKUGFzc3QgYmVpIGRpZXNlciBWYXJpYW50ZSBiZXNvbmRlcnMgYXVmLCBkYXNzIG5pZW1hbmQgenUgZWlmZXJzY2h0aWcgb2RlciBiZXNpdHplcmdyZWlmZW5kIHdpcmQuIEVzIGthbm4gaW4gZWluZXIgR3J1cHBlIHZvbiBGcmV1bmRlbiB2aWVsIFNwYSBtYWNoZW4gaGVyYXVzenVmaW5kZW4gd2VyIGdlcm5lIGJlaSB3ZW0gZWluIGJpc3NjaGVuIG1laHIgSGF1dCBzZWhlbiB3aWxsLCBhYmVyIG5pY2h0LCB3ZW5uIGRpZSBBbnR3b3J0IGplbWFuZGVuIHNhdWVyIG1hY2h0LgoiV2Ugc3RpbGwgYmVsaWV2ZSB0aGF0IHRoZXJlIGlzIGEgbG90IG9mIHJvb20gdG8gY29udGludWUgdG8gaW1wcm92ZSB0aGUgcHJlc2VudGF0aW9uLCIgc2FpZCBCcmlhbiBPbHNhdnNreSwgQW1hem9uJ3MgY2hpZWYgZmluYW5jaWFsIG9mZmljZXIsIGFkZGluZyB0aGUgY29tcGFueSB3b3VsZCBhbmFseXplIHRoZSBhbW91bnQgb2YgYWRzIGFuZCB0eXBlIG9mIGFkcyBzaG9wcGVycyB3b3VsZCBmaW5kIHVzZWZ1bC4KSmFxdWVzIENISVJBQyBhIHJwb25kdSBmYXZvcmFibGVtZW50ICBjZXR0ZSBkZW1hbmRlIGV0IGRibG9xdWVyYSBwbHVzaWV1cnMgY2VudGFpbmUgZGUgbWlsbGlvbnMgZCdldXJvcy4uIApUaGVyZSBubyBzaGFtZSBpbiB0YWtpbmcgaXQsIGV2ZW4gaWYgaXQgUE9TU0lCTEUgeW91IGNvdWxkIGdldCBieSB3aXRob3V0IGl0LiBUaGVyZSBubyByZWFzb24gdG8gc3RydWdnbGUgd2l0aCB0aGluZ3MgdGhhdCBuZXVyb3R5cGljYWwgcGVvcGxlIG5ldmVyIGV2ZW4gaGF2ZSB0byB0aGluayBhYm91dC5JZiB3ZSBjb21wYXJlIEFESEQgdG8gc29tZSBtb3JlIHZpc2libGUgZGlzYWJpbGl0aWVzLCBpbWFnaW5lIHNvbWVvbmUgd2hvIHVzZXMgYSB3aGVlbGNoYWlyIGJ1dCB0ZWNobmljYWxseSBpcyBjYXBhYmxlIG9mIHdhbGtpbmcuIApCdXQgYWZ0ZXIgdGhhdCwgSSBwbGF5ZWQgbW9yZSBhbmQgbW9yZSBhbmQgbm93IEkgdXN1YWxseSBwbGF5IDE1IG1pbnV0ZXMgcGVyIG5pZ2h0LCBhbG1vc3QsIHNhaWQgTmlrdSwgd2hvIHNjb3JlZCBoaXMgc2Vjb25kIE5ITCBnb2FsIG9uIFN1bmRheSBhZ2FpbnN0IHRoZSBDb2x1bWJ1cyBCbHVlIEphY2tldHMuIApBIG1lc3NhZ2UgZm9yIGFsbCBDQnMgZnJvbSBteSBCYXJiZXJzaG9wClRpZ2VyU296ZSAgMjkgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkV4Y2hhbmdlcyBhcmUgYnVzaW5lc3NlcywgdGhleSBjYW4gZG8gd2hhdGV2ZXIgdGhleSB3YW50IGlmIHRoZXkgZGVlbSBpdCB0byBiZSBwcm9maXRhYmxlLiAKQW5kIEhhbXBzaGlyZSwgQS4gMjAxNS4gSm91cm5hbCBvZiBOZXVyb3NjaWVuY2UuIDM1ICgyMCksIHBwLiA3NjYwIDc2NzMuUGFya2luLCBCLiwgTGVlY2gsIFIuIApIb3cgY29tbW9uIHByb3BlcnR5IGlzIGFkbWluaXN0ZXJlZCBpcyBkZXRlcm1pbmVkIHRocm91Z2ggdGhlIGJ5bGF3cyBhbmQgcnVsZXMgb2YgdGhlIGNvcnBvcmF0aW9uIG9yIHRoZSByZXNvbHV0aW9ucyBhcHByb3ZlZCBieSB0aGUgb3duZXJzIGF0IGdlbmVyYWwgbWVldGluZ3MuQW55IHNpZ25pZmljYW50IGNoYW5nZSBpbiB0aGUgdXNlIG9yIGFwcGVhcmFuY2Ugb2YgY29tbW9uIHByb3BlcnR5IHJlcXVpcmVzIHRoZSBhcHByb3ZhbCBvZiB0aGUgb3duZXJzIGJ5IGEgdGhyZWUgcXVhcnRlcnMgdm90ZSBhdCBhbiBhbm51YWwgb3Igc3BlY2lhbCBnZW5lcmFsIG1lZXRpbmcuSWYgdGhlIHN0cmF0YSBjb3Jwb3JhdGlvbiBpcyBoZWFkaW5nIGludG8gYSBkZWZpY2l0LCB0aGUgY291bmNpbCBoYXMgc2V2ZXJhbCBvcHRpb25zLiAKV2hpbGUgSSBhZ3JlZSB3aXRoIHRoZSBzb2xhci93aW5kIHByYWN0aWNlLCBpdCBzaG91bGQgYmUgbm90ZWQgdGhhdCBHZW9yZ2V0b3duIGdhdmUgdXMgdGhlIFNoZXJpZmYgd2hvIGJhcmtzIG9uIHN0YWdlIGF0IGEgZ2VudGxlbWFucyBjbHViLCB0aGVuIHB1YmxpY2x5IHVyaW5hdGVzIGFzIGhlIHdhbGtzIGhvbWUgZHJ1bmsgZnJvbSB0aGUgYmFyLiAKUmFkaWNhbCBkZW1vY3JhY3kgaW52b2x2ZXMgYWxsIEFtZXJpY2FucyB2b3RpbmcgYW5kIGFsbCBBbWVyaWNhbnMgZW5nYWdlZCBpbiB0aGUgcG9saXRpY2FsIHByb2Nlc3MuIElzIG5vdCBzb21ldGhpbmcgdGhhdCBhIGxvdCBvZiBwb3dlcmZ1bCBwZW9wbGUgZmVlbCBjb21wbGV0ZWx5IGNvbWZvcnRhYmxlIHdpdGguIAokMzkgJDEzNS4gClRoZXkgbmVlZCB0byBnbyBiYWNrIHRoZWlyIG93biBjb3VudHJ5LCBmaXggd2hhdGV2ZXIgcHJvYmxlbXMgdGhleSByYW4gYXdheSBmcm9tIGFuZCB0aGVuIGFpbSBmb3IgdGhlaXIgY291bnRyaWVzIHZlcnNpb24gb2YgdGhlIEFtZXJpY2FuIERyZWFtLiAKVG9tbXkgSHVudGVyLCA4MSwgbm90aWNlcyBhIGxhcmdlIHByaW50IG9mIGEgcG9zdGFnZSBzdGFtcCBmZWF0dXJpbmcgaGlzIGltYWdlIGluIHRoZSB3aW5kb3cgb2YgdGhlIExvbmRvbiBNdXNpYyBIYWxsIG9mIEZhbWUuIEh1bnRlciByZW1pbmlzY2VkIGFib3V0IHRoZSBwcmVkZWNlc3NvciB0byB0aGUgSnVubyBBd2FyZHMgaW4gMTk3MCB3aGVuIGhlIHdvbiB0aGUgYXdhcmQgZm9yIG1hbGUgY291bnRyeSB2b2NhbGlzdC4gKERlcmVrIFJ1dHRhbi9UaGUgTG9uZG9uIEZyZWUgUHJlc3MpCkV2ZW4gaWYgeW91IGNvdWxkIHRydXN0IGl0IGluIHByaW5jaXBsZSwgd2hhdCBoYXBwZW5zIHdoZW4gYSBEb25hbGQgVHJ1bXAgd2lucyBlbGVjdGlvbiBhbmQgaXMgcHV0IGluIGNoYXJnZSBvZiB0aGlzIHNoaXQ/IFRoaXMgc29ydCBvZiB0aGluZyBoYXBwZW5zIGFsbCB1cCBhbmQgZG93biB0aGUgcG9saXRpY2FsIHNjYWxlIGZyb20gdGhlIFdoaXRlIEhvdXNlIGRvd24gdG8gY291bnR5IGFuZCBzY2hvb2wgYm9hcmQgbGV2ZWwuLiAKQXMgd2UgYWRkcyB1cCBhbGwgdGhlIHVuY2VydGFpbnRpZXMgd2UgYXJlIGxlc3Mgc3VyZSBvZiB3aGF0IHRoZSBob3VycyBhY3R1YWxseSBzaG91bGQgYmUuIEl0IGVuZHMgdXAgZWFzaWVyIGlmIHdlIGNhbiBqdXN0IGdhdWdlIGlmIHRoaXMgdGFzayBpcyBsYXJnZXIvc21hbGxlciB0aGFuIGFub3RoZXIgb25lIHdoZXJlIHdlIGdhdmUgYSBlc3RpbWF0ZSBvZiBhbHJlYWR5LiBBcyB3ZSB1cCB0aGUgc2l6ZS9jb21wbGV4aXR5IG9mIHRoZSB0YXNrIHRoZSBlZmZlY3Qgb2YgdW5jZXJ0YWludHkgaXMgYWxzbyBhbXBsaWZpZWQuIEkgd291bGQgYmUgaGFwcGlseSB0YWtpbmcgYW4gZXN0aW1hdGUgb2YgMTMgaG91cnMgZm9yIGEgdGFzayB0aGF0IHNlZW1zIHR3aWNlIGFzIGxhcmdlIGFzIG9uZSBJJ3ZlIHByZXZpb3VzbHkgZXN0aW1hdGVkIGF0IDUgaG91cnMuCkkgbWVhbiwgeW91IGZyZWUgdG8gdGhpbmsgdGhlIFNlaWtvIGJyYW5kIGRlc2VydmVzIGEgcHJpY2UgcHJlbWl1bSwgYnV0IGl0IHNlZW1zIHRvIG1lIHRoYXQgcnVucyBjb250cmFyeSB0byB3aGF0IFNlaWtvIGhhcyBhbHdheXMgc3Rvb2QgZm9yIGFuZCBpcyBwcmFpc2VkIGZvciAob2ZmZXJpbmcgZ29vZCB2YWx1ZSBhdCBsb3dlciBwcmljZXMpIGFuZCBhbW91bnRzIHRvIGhhdmluZyB5b3VyIGNha2UgYW5kIGVhdGluZyBpdCB0b28uLiAKV2UgbW92aW5nIGF3YXkgZnJvbSB0aGUgbW9yZSBzdHJ1Y3R1cmVkIGZsb3JhbCBjZW50cmVwaWVjZXMgYW5kIGJvdXF1ZXRzIGFuZCBtb3ZpbmcgdG93YXJkIHBpZWNlcyB0aGF0IGhhdmUgbW9yZSBtb3ZlbWVudCBhbmQgbG9vayBtb3JlIG9uIHRoZSBuYXR1cmFsIHNpZGUuIDI6IEEgdG91Y2ggb2YgZHJhbWEgc2VlaW5nIG92ZXJzaXplZCBib3dzIGluY29ycG9yYXRlZCBpbnRvIGJyaWRhbCBnb3duIGRlc2lnbnMuIFdlIGFsc28gc2VlaW5nIGEgbG90IG9mIHNwYXJrbGUgYW5kIDMgRCBjb21wb25lbnRzIGxpa2UgZmxvcmFsIGFwcGxpcXUgVGhlIGlsbHVzaW9uIG5lY2tsaW5lLCBhcyB3ZWxsIGFzIG9mZiB0aGUgc2hvdWxkZXIgZGVzaWducyBhcmUgd2hhdCB5b3UgY2FuIGV4cGVjdCB0byBzZWUgd2hlbiBzaG9wcGluZyBmb3Igd2VkZGluZyBkcmVzc2VzLi4gCkRvIG5vdGUgdGhhdCBpdCB0b29rIGRlY2FkZXMgZm9yIHRoZSByb3QgZnJvbSB3aXRoaW4gdGhlIFNvdmlldCBVbmlvbiB0byBjYXVzZSBpdCB0byBjb2xsYXBzZS4gClRoYXQgYWxsIGNvbXB1bHNvcnksIG5vIG1hdHRlciBpZiB5b3UgYWN0dWFsbHkgdGFrZSBhZHZhbnRhZ2Ugb2YgdGhlIHNlcnZpY2Ugb3Igbm90Li4gClNldmVyYWwgUXVlYmVjIG1lZGlhIGhhdmUgcmVwb3J0ZWQgaGlzIHN1c3BlbnNpb24gd2FzIGNvbm5lY3RlZCB0byBhbiBpbnZlc3RpZ2F0aW9uIGludG8gbGVha3MgdG8gam91cm5hbGlzdHMgaW4gMjAxNyBhYm91dCBhIGhpZ2hseSBzZW5zaXRpdmUgVVBBQyBwcm9iZSBvZiB0aGUgUXVlYmVjIExpYmVyYWxzIGFuZCBmb3JtZXIgcHJlbWllciBKZWFuIENoYXJlc3QuIE1lZGlhIGhhdmUgcmVwb3J0ZWQgdGhhdCB0d28gZm9ybWVyIFVQQUMgb2ZmaWNlcnMgd2hvIHdlcmUgaW52b2x2ZWQgaW4gdGhlIHVuaXQgaW50ZXJuYWwgaW52ZXN0aWdhdGlvbiBpbnRvIHRoZSBzb3VyY2Ugb2YgdGhlIGxlYWtzIGFuZCBoYXZlIHNpbmNlIHJldHVybmVkIHRvIHRoZSBwcm92aW5jaWFsIHBvbGljZSBoYXZlIGJlZW4gYXNzaWduZWQgdG8gZGVzayBkdXRpZXMuCkkgZ290IHZlcnkgYW5ncnkgYXQgaGltIGZvciB0aGlzLCBsb2NrZWQgbXlzZWxmIGluIG15IHJvb20gYW5kIGRpZG4ndCBjb21lIG91dC4gCkxhIHNldWxlIHNvbHV0aW9uIGR1IFByb2N1cmV1ciBkZSBsYSBScHVibGlxdWUgZXN0IGRlIGxlcyByYXBhdHJpZXIgcGFyIGxlIHRyYWluLiAKQW5kIHRoZXkgbmVlZCB0byBiZSBzcHJlYWQgb3V0LiAKU29tZSBvZiBteSBjb3dvcmtlcnMgYXJlIHV0dGVyIGJsb2JzIHdobyBoYXZlIG5vIGNsdWUgaG93IGdvb2QgdGhleSBoYXZlIGl0LiBTZXJpb3VzbHkuIEkgd29ya2VkIGhhcmRlciBzaGVsdmluZyBncm9jZXJpZXMgYW5kIG1hZGUgV0FBQUFZIGxlc3MuLiAKSSBhbSBhYnNvbHV0ZWx5IGJsb3duIGF3YXkuIApGb3VyIG9wcG9ydHVuaXRpZXMgdG8gY2VsZWJyYXRlIEludGVybmF0aW9uYWwgV29tZW4KWW91IG11c3Qga2VlcCB5b3VyIGV5ZXMgYW5kIGVhcnMgb3BlbiBkdXJpbmcgdGhpcyB0byBnYXVnZSBoZXIgcmVzcG9uc2UuIElmIHNoZSBtb2FucyBhIGxpdHRsZSBsb3VkZXIsIHNxdWlybXMgYSBsaXR0bGUgYml0IG1vcmUsIG9yIHByb3ZpZGVzIHNvbWUgb3RoZXIgcG9zaXRpdmUgZmVlZGJhY2ssIHRoZW4gZ28gb24gdG8gdGhlIG5leHQgc3RlcC4gCkkgbGlrZSB0byBzYXkgdGhleSBtb3JvbnMsIGJ1dCB0aGV5IGhpZ2hseSBlZHVjYXRlZCBwcm9mZXNzaW9uYWxzLiAKQ29tcGxpbWVudGFyeSBzdWl0ZSBhdCB0aGUgUmlvIHdhcyBsYXJnZXIgdGhhbiBoaXMgaG9tZS4gCk9uZSBuaWdodCBJIHNhaWQgZnVjayBpdCBhbmQgd2VudCBpbi4gCkxlYXRoZXIgb25lcyBhcmUgbmljZSBidXQgSSBuZXZlciBmZWx0IGxpa2UgdGhleSBwcm92aWRlZCBhcyBtdWNoIHN1cHBvcnQgYXMgY290dG9uL255bG9uIHN0cmFwcyAodGhvdWdoIHRoaXMgbWlnaHQgYmUgYmV0dGVyIHNvIHlvdSBkb24gcmVseSBvbiBzdHJhcHMgZnVsbHkgZm9yIGxhY2sgb2YgZ3JpcCBzdHJlbmd0aCkuIFRoZXkgYWxzbyB0ZW5kIHRvIHN0cmV0Y2ggb3V0L2dldCBkYW1hZ2VkIGVhc2llci4uIApIZWxwaW5nIHBlb3BsZSBzZWxsIHRoZXJlIGhvbWVzIHF1aWNrbHkgZXRjIGV0Yy4gSGUgdHJpZXMgdG8gY29udmluY2UgbWUgaXQgaXMgaGlzIGhvbWUsIGV0Yy4gCldlIGNhbiBzYXkgd2hldGhlciBoZSBwb3N0cG9uZWQgdGhlIHBsYW4gYWZ0ZXIgSW1yYW4gdG91Z2ggcmVzaXN0YW5jZSBvciB0aGUgcGxhbiBkaWQgbm90IGV4aXN0IGluIHRoZSBmaXJzdCBwbGFjZS4gV2Ugd2VyZSB0b2xkIHRoYXQgdGhlIElHIHdhcyBjaGFuZ2VkIGJlY2F1c2UgaGUgZmFpbGVkIHRvIGNvcmRvbiBvZmYgdGhlIENhYmluZXQgQmxvY2sgb3BlbmluZyBvZiB0aGUgQ2FiaW5ldC4gCklmIEkgaGFkIHRvIGd1ZXNzLCBJIHdvdWxkIHRoaW5rIHlvdSBhcmUgbG9va2luZyBhdCBhIDE6MjUgMTozMCBzd2ltLCB3aGljaCBwdXRzIHlvdSBhdCB0aGUgYmFjayBvZiBvciBqdXN0IGJlaGluZCB0aGUgbWFpbiBwYWNrLkkgaGF2ZSBubyByZWFsIGlkZWEgb2YgeW91ciBiaWtlIGZpdG5lc3MsIGJ1dCB5b3Ugd2lsbCBiZSB3ZWxsLCB3ZWxsIGFib3ZlIGF2ZXJhZ2UgaW4geW91ciBydW4gZml0bmVzcy4gCkF1dGFyY2EgaXN0IGZyIG1pY2ggZWluIGZhc3ppbmllcmVuZGVzIFByb2pla3QgbWl0IGdyb3NzZXIgQXVzc3RyYWhsdW5nc2tyYWZ0LiBCYXJiYXJhIHVuZCBFcmljaCBzZXR6ZW4gZ2FuemhlaXRsaWNoZSBMc3VuZ2VuIGtvbmtyZXQgdW0sIHNjaGxpZWVuIGF1ZiBpaHJlciBGaW5jYSBBdXRhcmNhIHVuZCBpbiBpaHJlbSBVbWZlbGQgYXVmIExhIFBhbG1hIHVuemhsaWdlIEtyZWlzbHVmZSB1bmQgdmVya25wZmVuIGRpZXNlIGluIHVuZ2xhdWJsaWNoIGludGVsbGlnZW50ZXIgdW5kIGtyZWF0aXZlciBBcnQgdW5kIFdlaXNlISBBdXRhcmNhCkJ5IHRoZSBzb3VuZHMgb2YgaXQsIHlvdSBoYXZlIGJlZW4gaW52aXRlZCB0byB3ZWRkaW5nIGFuZCB0ZWEsIHNvIHdlYXIgeW91ciBiZXN0IGF0dGlyZSB3aXRoIGEgc3BsYXNoIG9mIGNvbG9yLi4gCkFsc28sIGJlZm9yZSBhbnlvbmUgZ2V0cyBvZmZlbmRlZCwgeW91IHZlcnkgd2VsbCBtYXkgYmUgaW4gdGhhdCAxMCUgd2hvIHVzZXMgeW91ciBza2lkIHBsYXRlcyBvbiB5b3VyIGJyYW5kIG5ldyB0cnVjayBhbmQgdGhhdCBncmVhdC4gCkluIDIwMDYsIGEgcHVibGljaXN0IGluIExvcyBBbmdlbGVzIHBpY2tlZCB1cCBhIGNhbWVyYSBmb3IgdGhlIGZpcnN0IHRpbWUsIHVuc3VyZSBvZiBoZXIgbW90aXZhdGlvbi4gIkkgZG9uJ3Qga25vdyB3aGF0IHBvc3Nlc3NlZCBtZSwiIHNoZSByZWNhbGxlZCByZWNlbnRseS4gIkkgZGlkbid0IHRoaW5rIGl0IHdvdWxkIGxlYWQgdG8gYW55dGhpbmcgZ3JlYXQuIEkganVzdCB3YW50ZWQgdG8gbWFrZSB0aGlzIGxpdHRsZSBzdG9yeSB0aGF0IEkgcmVtZW1iZXJlZCBhYm91dCBtZSBhbmQgbXkgbW9tIGFuZCBteSBzaXN0ZXJzLiIKRXZlcnkgcGxheWVyIGVuam95cyBvbmUgb3IgbW9yZSB2YWx1ZSBhZHZhbnRhZ2VzLiAKSXQgY2FuIGJlIHRyYW5zZm9ybWVkIGludG8gZWl0aGVyIHBvc2l0aXZlIGVuZXJneSwgd2hpY2ggaXMgd2FybXRoLiBPciBuZWdhdGl2ZSBlbmVyZ3ksIHdoaWNoIGlzIHRlbnNpb24uIApIZSByZWFsbHkgZG9lcyBoYXZlIG5hdGl2ZSBwZW9wbGUgY2xlYXIgYSBwYXRoIHVwIHRoZSBzaWRlIG9mIGEgbW91bnRhaW4sIGFuZCB0aGV5IERPIGhhdWwgdGhpcyBzaGlwIHVwIGFuZCBvdmVyLiAKSnVyb3JzIHdlcmUgdG9sZCB0aGF0IHRoZSBza2luIHdhcyB0b3JuIGZyb20gb25lIG9mIE1yIEd1bWJsZXkncyBoYW5kcyBhcyBhIHdhdGNoIHdhcyBwdWxsZWQgZm9yY2libHkgZnJvbSBoaXMgd3Jpc3QsIGxlYXZpbmcgYSAiYnJ1dGFsIGFuZCBzdHJpa2luZyIgaW5qdXJ5LgpIb3cgbXVjaCBkb2VzIEZPWCBTcG9ydHMgR08gY29zdD8KRGVjaWRlIHRoZSBhbW91bnQgdGhhdCB5b3UncmUgY29tZm9ydGFibGUgYmV0dGluZyBlYWNoIHB1bGwuIApUaGUgdGlwIG9mIHRoZSBjcnV0Y2ggd2FzIHVzZWQgdG8gamFiIGFuIG9wcG9uZW50IGluIHRoZSBtaWRyaWZmLiBXaXRoIHRoZSBlbmVteSBnYXNwaW5nIGZvciBicmVhdGgsIHRoZSBjcnV0Y2ggd291bGQgYmUgcmV2ZXJzZWQgYW5kIHRoZSBtZXRhbCBzaG9kIGFybXJlc3Qgd291bGQgYmUgdXNlZCBhcyBhIGNsdWIuIgpBcyBJJ3ZlIHNhaWQgYmVmb3JlLCBwZW9wbGUgbG92ZSB0byBydW4gd2l0aCBteXRocywgYW5kIHNhZGx5LCB0aGlzIG9uZSBpcyBzZWxmIHN1c3RhaW5pbmc6IFRoZSBtaXNpbmZvcm1hdGlvbiBicmluZ3MgYSBsb3Qgb2Ygdml0cmlvbCwgdGhlIHZpdHJpb2wgcHJvbXB0cyByZW1vdmFscywgYW5kIHRoZSByZW1vdmFscyByZXN1bHQgaW4gbW9yZSBtaXNpbmZvcm1hdGlvbi4gRXZlcnkgdGltZSBzb21lb25lIHRyaWVzIHRvIGV4cGxhaW4gdGhlIHRydXRoLCB0aGV5IGdldCBkb3dudm90ZWQgZm9yIGdvaW5nIGFnYWluc3QgdGhlIG1vYi4gd2hpbGUgYXQgdGhlIHNhbWUgdGltZSwgY29tbWVudHMgYmVnaW5uaW5nIHdpdGggIkkndmUgaGVhcmQuIiBvciAiSSd2ZSBzZWVuLiIgZ2V0IHVwdm90ZWQsIHJlYWQsIGFuZCByZXBlYXRlZCBieSBwZW9wbGUgd2hvIGRvbid0IGFjdHVhbGx5IGtub3cgYW55dGhpbmcgYWJvdXQgdGhlIHNpdHVhdGlvbi4KVGhlIGFtb3VudCBnYW1ibGVkIGF3YXkgaXMgYWJvdXQgJDQsODE5LjgyIGZvciBldmVyeSBvbmUgb2YgU291dGhlcm4gRG93bnMgMjcsNzM2IGFkdWx0IHJlc2lkZW50cy4KIkFsbCBndW4gcmVndWxhdGlvbiBpcyBhIHJlc3VsdCwgbm90IGEgY2F1c2Ugb2YgZ3VuIHZpb2xlbmNlLiBHdW4gdmlvbGVuY2UgaXMgbm90IHdvcnNlIG9ubHkgYmVjYXVzZSBvZiB0aGF0IHJlZ3VsYXRpb24uIAoiRXZlcnlvbmUgd2hvIGJyaW5ncyBpbiB0aGVpciBwaWN0dXJlIHdpbGwgZ2V0IGFuIGV4Y2x1c2l2ZSBNaXN0ZXIgTWFrZXIgc3RpY2tlciBidXQgYWxzbyB5b3UgbWlnaHQgZ2V0IHRoZSBjaGFuY2Ugb2YgcHV0dGluZyB5b3VyIHBpY3R1cmUgdXAgb24gd2hhdCBJIHRoaW5rIGlzIHRoZSBncmVhdGVzdCBhcnQgZ2FsbGVyeSBpbiB0aGUgd29ybGQuIiBNaXN0ZXIgTWFrZXIgaGFzIHBhY2tlZCB0aGUgTWFrZXJtb2JpbGUgd2l0aCBldmVyeXRoaW5nIGhlIG5lZWRzLCBhcyB3ZWxsIGFzIGhpcyBraXRjaGVuIGZyaWRnZSB3aGljaCB3aWxsIGJlIGFkb3JuZWQgd2l0aCBmYW4gcGljdHVyZXMuICJJJ3ZlIGJyb3VnaHQgbXkgZnJpZGdlIGFsbCB0aGUgd2F5IGZyb20gdGhlIFVLIGFuZCB3ZSdyZSBnb2luZyB0byBicmluZyB0aGUgZnJpZGdlIG91dCBvbiBzdGFnZSBhbmQgaXQgaXMgZXhhY3RseSB3aGF0IHlvdSdkIHRoaW5rIGEgTWlzdGVyIE1ha2VyIGZyaWRnZSB3b3VsZCBsb29rIGxpa2UsIGl0J3MgYSB2ZXJ5IGNvbG91cmZ1bCB0aGluZyBhbmQgd2UncmUgZ29pbmcgdG8gYmUgc3RpY2tpbmcgdXAgYXJ0d29yayBvbnRvIG15IGZyaWRnZSwiIGhlIHNheXMuIEZvciBtb3JlIHRoYW4gYSBkZWNhZGUgUGhpbCBHYWxsYWdoZXIgaGFzIHB1bGxlZCBvbiBNaXN0ZXIgTWFrZXIncyBjb2xvdXJmdWwgcG9rZXIgZG90IHZlc3QgYW5kIHF1aXJreSB0YW4gamFja2V0IGFuZCBoZSBzYXlzIHBlcmZvcm1pbmcgbGl2ZSBhbGxvd3MgZ3JlYXQgaW50ZXJhY3Rpb24gZm9yIGZhbnMgb2YgYWxsIGFnZXMuIApTYXkgYSByaXZlciBicmluZ3MgaW4gdGhlIGZyb250IGRvb3IgZmx1c2ggYXMgd2VsbCBhcyBwYWlyaW5nIHRoZSBib2FyZCBvbiBzb21ldGhpbmcgbGlrZSBBc0tzMjQycy4gSSBubyBsb25nZXIgZ29pbmcgdG8gYmUgZ29pbmcgZm9yIHZhbHVlIGFzIHRoZSBQRlIgd2l0aCBoYW5kcyBsaWtlIEF4IChBUSwgQUosIGV0Yy4pIGJ1dCB3aWxsIHdhbnQgdG8gZ2V0IGEgbGFyZ2VyIGFtb3VudCBvZiB2YWx1ZSBmcm9tIHRoZSByYW5nZSBJIGFtIHN0aWxsIGJldHRpbmcgKGxpa2UgQUEsIEtLLCBBMikuLiAKSSBnb2luZyB0byBndWVzcyB0aGF0IHRoZSBlcGlzb2RlIG9mIHdoaWNoIHlvdSBzcGVhayBpcyAiSW4gVGhlb3J5IiwgYW5kIEkgYWdyZWUuIAooIHRoYXQncyBtZSBhbmQgQnJpYW4gTGFyaG9sbSkuIEFsdGhvdWdoIGl0IGlzIHJhcmUgZm9yIGEgZGVjaXNpb24gYWJvdXQgcHJlIG1vZGVyYXRpb24gdG8gYmUgZXNjYWxhdGVkIHRoYXQgZmFyLCBpdCBoYXMgaGFwcGVuZWQgb24gb2NjYXNpb24uIFNvIGV2ZXJ5Ym9keSBjYW4gYXNzdW1lIHRoYXQgaWYgc29tZWJvZHkgaXMgaW4gcHJlIG1vZGVyYXRpb24gaXQgaXMgbmVpdGhlLiAKSSBkb24gaGF2ZSBhIGNvbXByZWhlbnNpdmUgZmlyc3QgZHJhZnQgeWV0LCBzbyBub3RoaW5nIHRvIGxpbmssIGJ1dCBJIHdvcmtpbmcgb24gbXkgb3duIFJQRytzZXR0aW5nLiBSaWdodCBub3cgSSBjYWxsaW5nIGl0ICJTZXZlbiBXaW5kcyBvZiBHZW4sIiBhbmQgaXQgYmFzZWQgb2YgYSBsb3Qgb2YgZWFzdGVybiBjdWx0dXJlLiBNeSBjdXJyZW50IHJ1bGVzZXQgdXNlcyBhbiBhdHRyaWJ1dGUgKyBza2lsbCBzeXN0ZW0uIApTYWRseSwgc2hlIGRpZG4gd2luLiAKTWFueSBlbXBsb3kgbWlkZGxlIGFnZWQgd29tZW4gd29ya2luZyB0byBwYXkgb2ZmIGRlYnRzIGluY3VycmVkIGluIHRoZWlyIG5hdGl2ZSBjb3VudHJpZXMsIHRoZSBuZXdzcGFwZXIgcmVwb3J0ZWQuLiAKSWYgeW91IGFyZSBwbGF5aW5nICQxMCAkMjAsIHdpdGggYSBiaWcgYmV0IG9mICQ0MCwgaXQgd291bGQgcmVzdWx0IGluIGFuIGVhcm4gcmF0ZSBvZiAoYXQgNDAgaG91cnMgcGVyIHdlZWspICQxLDYwMCwgYW5kIHlvdSB3b3VsZCBuZWVkIGEgYmFua3JvbGwgb2YgJDEyLDAwMC4uIApUZWlyZXNpYXMsIEpvY2FzdGEsIHRoZSBoZXJkc21hbiwgZWFjaCBpbiB0dXJuIHRyaWVzIHRvIHN0b3AgaGltLCBidXQgaW4gdmFpbjogaGUgbXVzdCByZWFkIHRoZSBsYXN0IHJpZGRsZSwgdGhlIHJpZGRsZSBvZiBoaXMgb3duIGxpZmUuIAoiWW91IGNhbid0IHRha2UgYW55dGhpbmcgYXdheSBmcm9tIHRoZW0sIiBOb3J2ZWxsIHNhaWQuIApNaWxmb3JkSGF2ZW4gIDEgcG9pbnQgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCkFuZCB0aGF0IGp1c3QgYSBiaWcgZG93bnNpZGUgdG8gdGhpcyBhd2Vzb21lbHkgY29vbCBzYW5kYm94IGdhbWUuLiAKSGUgbGVhdmVzIGJlaGluZCBoaXMgcGFyZW50cyBSb2dlciBhbmQgRG9ubmEgTWFydGVucywgYW5kIGhpcyBzaXN0ZXIgU2FuZHJhIChTdGV2ZW4pIEdhYnJ5ZWxza2kuIApCeSBqdWRnaW5nIGFub3RoZXIncyBzdHJlbmd0aHMsIHdlYWtuZXNzZXMsIGFuZCBtb3RpdmF0aW9ucywgeW91IGNhbiBhc2NlcnRhaW4gdGhlICJwYXRoIiB0aGV5IGFyZSBvbiBhbmQgc2Fib3RhZ2UgaXQgZm9yIHlvdXIgcGVyc29uYWwgYmVuZWZpdC4gCkhpcyBoYW5kIGJydXNoZXMgaGVyIGJ1dHQsIHNlZW1pbmdseSBvbiBhY2NpZGVudC4gClRoZSBvbmx5IHRoaW5nIGkgY2FuIHNheSBpcyB0aGF0IGkga25vdyBleGFjdGx5IGhvdyB5b3UgZmVlbC4gCkluZGVlZCwgY2xldmVybHkgZGVzaWduZWQgd2luZG93cyBvbiB0aGUgcGFja2FnZSByZXZlYWwgcGFzdGVsIHBhY2tldHMgaW5zaWRlLCBhIGN1ZSB0byBjYXRlZ29yeSBub3Jtcy4gVGh1cyBhIG5ldyB0byB0aGUgY2F0ZWdvcnkgYnJhbmQgZWZmZWN0aXZlbHkgY29tbXVuaWNhdGVzIHRvIGNvbnN1bWVycyBieSBiZWluZyBib3RoIGRpZmZlcmVudGlhdGVkIGZyb20gdGhlIGNhdGVnb3J5IGFuZCByZWxldmFudCBhdCB0aGUgc2FtZSB0aW1lLi4gCk9ubHkgaGVyZSBpdCB3aWxsIGJlIG1vcmUgaW50ZWdyYWwgcGFydCBvZiB0aGUgZ2FtZS4gT2J2aW91c2x5IHlvdSBjYW4gb25seSBidXkgcGFja3Mgd2l0aCBtb25leS4gU28gaXQgbWFrZXMgbm8gZGlmZmVyZW5jZSB0aGF0IHRoZXkgY2hhcmdlIHBhY2tzIGluc3RlYWQgb2YgY2FzaC4gCkZyb20gd2hhdCB5b3Ugc2FpZCwgdGhhdCBhbGwgeW91IGRvbmUuClNpIGNlIG4gbGEgcHJpbmNpcGFsZSwgZHUgaGlhdHVzIG5vbGl0aGlxdWUgYXZlYyBsZXMgdGFib3VzIHN1ciBsZXMgbXRhdXggKGV0IHByb2JhYmxlbWVudCBzdXIgbCBxdWkgb250IGxvbmd0ZW1wcyBzdXJ2Y3UuIApUaGUgSGFyZCBSb2NrIGlzIGEgcGFydG5lcnNoaXAgYmV0d2VlbiB0aGUgTWlsc3RlaW4gZmFtaWx5IHRoYXQgb3ducyBOb3J0aGZpZWxkIFBhcmsgcmFjZSB0cmFjayBhbmQgSGFyZCBSb2NrIEludGVybmF0aW9uYWwgb2YgT3JsYW5kbywgRmxhLiBUaGUgZG93bnRvd24gSG9yc2VzaG9lIGhhcyBzdWZmZXJlZCByZXZlbnVlIGRvd250aWNrcyB3aXRoIGVhY2ggb2YgdGhlIHJhY2lubyBvcGVuaW5ncy4gCkRSQUdPIEFGRlJPTlRFIExFIEJBUk9OIFpPRElBQwpTaHJ1Zy4gClRvZGF5LCBpdCBoYXMgZXhwYW5kZWQgdG8gb3ZlciA4MCBjb3VudHJpZXMsIG1vc3RseSBsZWFzdCBkZXZlbG9wZWQgYW5kIGRldmVsb3BpbmcgZWNvbm9taWVzLCBhcyBCZWlqaW5nIHNlZWtzIHRvIGJvbHN0ZXIgaXRzIE1hZGUgaW4gQ2hpbmEgMjAyNSBpbmR1c3RyaWFsIHBvbGljeS4gCiJUaGUgc29jaWV0eSBiZWxpZXZlcyB0aGF0IHRoZSBnYW1pbmcgbWFjaGluZSBleHBhbnNpb24gbW9kZWwgc2hvdWxkIG5vdCBiZSBsaW5rZWQgdG8gZnVuZGluZyBvZiBsb2NhbCBncm91cHMsIGNoYXJpdGllcyBvciBjb21tdW5pdHkgcHJvamVjdHMuIApUaGUgdXNlIG9mIDNEIHByaW50aW5nIGlzIGFscmVhZHkgdHJhbnNmb3JtaW5nIG1hbnkgY29udmVudGlvbmFsIGluZHVzdHJpZXMuIApFdmVuIGFzIHRoZSByYWluIHBlbHRzIGRvd24sIGhvcmRlcyBvZiBiaXJkd2F0Y2hlcnMsIHRvdXJpc3RzLCBhbmQgbmF0dXJlIG9ic2Vzc2VkIHBob3RvZ3JhcGhlcnMgbGVhdmUgU2tvbWVyIHNtaWxpbmcuIE9uY2UgdGhlIGFmdGVybm9vbiBib2F0IHB1bGxzIGF3YXksIHNuYXAgaGFwcHkgdG91cmlzdHMgdGFrZSBvbmUgbGFzdCBzaG90IG9mIHRoZSBjbG93bnMgb2YgdGhlIHNlYSAgIGJvYmJpbmcgaW4gdGhlIHdhdGVycywgc3dvb3BpbmcgZG93biBmcm9tIHRoZSBjbGlmZnMsIHRoZWlyIGJyaWdodCBvcmFuZ2UgYmVha3Mgc2hpbmluZyBsaWtlIGJlYWNvbnMgYWdhaW5zdCBhbiBvdmVyY2FzdCBza3kuCkZVQ0tJTkcgWUVTISEgR29kIGl0J3Mgc28gZ29vZCB0byBoZWFyIHBlb3BsZSBzYXkgdGhpcy4gSSBoYWQgYSBzYWQgcmVhbGlzYXRpb24gYSB3aGlsZSBhZ28gd2hlbiBJIHNhdyB0d28gYm95cyBwb2ludGluZyBhdCBhIHBhaXIgb2YgZmxvd2VyZWQgc2hvZXMgYW5kIGRhcmluZyBlYWNoIG90aGVyIGxhdWdoaW5nbHkgdG8gcHV0IHRoZW0gb24uIFRoZSBib3lzIHdlcmUgYWJvdXQgNCBidXQgZWFjaCBvZiB0aGVtIGFscmVhZHkga25ldyB0aGF0IGZsb3JhbCBzaG9lcyB3ZXJlICJnaXJscyIgc2hvZXMgYW5kIHRoZSBpZGVhIG9mIGEgYm95IHdlYXJpbmcgdGhlc2Ugd2FzIG91dGxhbmRpc2hseSBmdW5ueS4gSSB3YXMgc28gc2FkLCB3aHkgYXJlIGZsb3dlcnMgZm9yIGdpcmxzPyBXaHkgaXMgYmVhdXR5IGdlbmRlcmVkPyBXaHkgZG8gd2UgdGVhY2ggYmFiaWVzIHRoYXQgc29mdCB0aGluZ3MgYXJlIGZvciBnaXJscyAoa2l0dGVucywgdW5pY29ybnMsIGZsb3dlcnMsIGN1cGNha2VzKSBhbmQgaGFyZCB0aGluZ3MgYXJlIGZvciBib3lzICh0cnVja3MsIHNrdWxscywgbW90b3JiaWtlcywgbGlvbnMpPyBXZSBjb25kaXRpb24gb3VyIGJhYmllcyBmcm9tIHRoZSBzdGFydC4KMSBwb2ludCAgc3VibWl0dGVkIDkgbW9udGhzIGFnbwpTbHB1Y2tldHQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KVGhpcyByZXZpZXcgY29uY2x1ZGVkIHRoYXQgdGhlcmUgd2FzIG1vZGVzdCBzdXBwb3J0IGZvciB0aGUgdXNlIG9mIG1hc3NhZ2UgdGhlcmFweSBmb3Igc3ltcHRvbSByZWxpZWYgaW4gcGF0aWVudHMgd2l0aCBmaWJyb215YWxnaWEuIFRoZSByZXZpZXcgc3VmZmVyZWQgZnJvbSBzZXZlcmFsIG1ldGhvZG9sb2dpY2FsIGxpbWl0YXRpb25zLCBpbmNsdWRpbmcgdGhlIHBvdGVudGlhbCBmb3IgZXJyb3IgYW5kIGJpYXMgaW4gdGhlIHNlYXJjaCBhbmQgcmV2aWV3IHByb2Nlc3NlcywgdG9nZXRoZXIgd2l0aCB0aGUgdW5jbGVhciBxdWFsaXR5IG9mIGluY2x1ZGVkIHN0dWRpZXMuIApOb3J0aHJvcCBHcnVtbWFuCk5pY2Ugd29yayBvbiB5b3VyIGZpcnN0IHNvbmchIEkgYWdyZWUgd2l0aCBGdWNraW5nIEdsb3Jpb3VzLCBwZXJzb25hbCBleHBlcmllbmNlIGFsd2F5cyBldm9rZXMgbW9yZSBlbW90aW9uIGFuZCBpbWFnZXJ5IHRoYW4gZ2VuZXJhbCBzdGF0ZW1lbnRzLiBNb3N0IHBlb3BsZSB3aWxsIGluZmVyIHdoYXQgZ29pbmcgb24gb3Igd2hhdCBoYXBwZW5lZCBiYXNlZCBvbiB0aGUgY29udGV4dC4gQWxzbywgZG9uIGJlIGFmcmFpZCB0byBOT1Qgcmh5bWUgYXQgdGhlIGVuZCBvZiBldmVyeSBwaHJhc2UuIApTbGVlcCBpcyBhIG5hdHVyYWwgcHJvY2VzcyBkZWZpbmVkIGFzIGEgcmVjdXJyZW50IHN0YXRlIG9mIHJlZHVjZWQgYXR0ZW50aW9uIHRvIHRoZSBzdXJyb3VuZGluZyBlbnZpcm9ubWVudC4gVGhlIG1vc3QgaW1wb3J0YW50IHNsZWVwIGZ1bmN0aW9ucyBhcmU6IHJlc3RvcmF0aW9uIG9mIGJvZHkgZnVuY3Rpb25zLCBzeW50aGVzaXMgb2YgcHJvdGVpbiBhbmQgcHJldmVudGlvbiBvZiBsZXRoYXJneS4gVGhlIGFtb3VudCBvZiBuZWVkZWQgc2xlZXAgdmFyaWVzIGZyb20gaW5kaXZpZHVhbCB0byBpbmRpdmlkdWFsLiBBZHVsdHMgbmVlZCBzZXZlbiB0byBuaW5lIGhvdXJzIG9mIGdvb2Qgc2xlZXAgdG8gYmUgYWxlcnQgZHVyaW5nIHRoZSBkYXkuCkFuZCB0aGVuIG9uIHRoZSBvdGhlciBoYW5kIHRoZXJlIGFyZSBoYXBhcyB3aG9zZSBBc2lhbiBwYXJlbnQgaXMgc2Vjb25kIG9yIHRoaXJkIGdlbmVyYXRpb24sIHdobyBhcmUgcHJldHR5IG11Y2ggcmVtb3ZlZCBmcm9tIHRoZWlyIEFzaWFuIGxhbmd1YWdlIGFuZCBjdWx0dXJlIGFuZCBkb24gaGF2ZSBtdWNoIGF0dGFjaG1lbnQgdG8gdGhlaXIgQXNpYW5uZXNzLiBJIGNhbiBvbmx5IGltYWdpbmUgdGhhdCBkaWZmZXJlbnQgaGFwYXMgaGF2ZSB2ZXJ5IGRpZmZlcmVudCBleHBlcmllbmNlcyBvZiBiZWluZyAiQXNpYW4iLiAKSXQgbm90IGVub3VnaCBmb3IgdGhlcmUgdG8gbWVyZWx5IGJlIGVxdWFsIGFjY2VzcyB0byBDYXRhbGFuIGFuZCBTcGFuaXNoIGN1bHR1cmUuIFRoYXQgbGlrZSBwaXR0aW5nIGEgZmVhdGhlcndlaWdodCBhZ2FpbnN0IGFuIG9seW1waWMgaGVhdnl3ZWlnaHQuIApEaXNhcHBvaW50aW5nLCBhbmQgbW92ZWQgdG9vIGZhc3QuIApJIGxpa2Ugc291cCBhbnl3YXkuIApDb21wYW5pZXMgdGhhdCBhbm51YWxseSBnZXQgcmFua2VkIGFzIG1vc3QgaW5ub3ZhdGl2ZSBzcGVuZCB0aHJlZSB0byBmb3VyIHRpbWVzIG1vcmUgb24gUk5EIHRoYW4gbWFya2V0aW5nLCB0aGUgcmV2ZXJzZSBvZiBtb3N0IGNvbnN1bWVyIHByb2R1Y3QgZ29vZHMgY29tcGFuaWVzLCBoZSBjbGFpbXMgYXMgYSB0ZWxsdGFsZSBzaWduIG9mIHRoaXMgY2hhbmdlLiBEYXlzLCB2ZW50dXJlIGNhcGl0YWwgaXMgc2VydmluZyBhcyB0aGUgZnVuZGluZyBhZ2VudCBvZiBSTkQuIExpa2UgRG9taW5vcy4gClRoaXMgaXNuJ3QgbXkgd29ya3BsYWNlIHdoZXJlIEkgYW0gcGFpZCBmb3IgbXkgYXR0ZW5kYW5jZSwgSSBwYWlkIGZvciBteSBlZHVjYXRpb24gYW5kIGlmIEkgd2FudCB0byBtaXNzIG91dCBvbiB0aW1lIEkgcGFpZCBmb3IsIHRoYXQgaXMgdXAgdG8gbWUuIApBIGNvbnZlcnNhdGlvbiB3aXRoIEplc3Mgc2hpZnRzIGZsdWlkbHkgZnJvbSBiYXdkeSBjb25mZXNzaW9ucyAoIkkgc3VjayBjb2NrIGxpa2UgYSBjaGFtcGlvbiIpIHRvIGluc2lnaHRmdWwgb25lcy4gIk1lbiBhbmQgd29tZW4gb3V0IHRoZXJlIGFyZSBodXJ0aW5nLCIgc2hlIHNheXMuICJJIHNlZSB3aGVyZSB0aGluZ3MgYXJlIG1pc3NpbmcgdGhhdCB3ZSBuZWVkIHRvIGFkZHJlc3MsIGFuZCBhcmVuJ3QsIGFzIGEgc29jaWV0eS4iCk1hbnkgZW1wbG95ZWVzIGZlZWwgdGhhdCB0aGV5IGFyZSBsZWF2aW5nIGNydWNpYWwgcGllY2VzIG9mIHRoZW1zZWx2ZXMgYXQgaG9tZSBqdXN0IHNvIHRoZXkgY2FuIGJsZW5kIGluLiAKQ290dG9uY2FuZHlza3lsaW5lcyAgMjMgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkkgZG9uIGtub3cgd2hhdCByb21hbnRpYyB2aWV3cyB5b3UgaGF2ZSBvbiBjb2xvbmlhbGlzbSwgYnV0IGlzIHdhcyBuZXZlciBhYm91dCB1cGxpZnRpbmcgdGhlIGluZGlnZW5vdXMgcG9wdWxhdGlvbi4gCkZha2UgcGhvbmVzIGNhbGxzIGFuZCBlbWFpbHMgdGhhdCB0cmljayB5b3UgdG8gc3dpbmRsZSBtb25leSBhcmUgY29udGludWluZy4gQWNjb3JkaW5nIHRvIHRoZSBwb2xpY2UsIGxhc3QgeWVhciwgdGhpcyBraW5kIG9mIHN3aW5kbGVzIHN0b2xlIG92ZXIgMzU3MDAwIG1pbGxpb24geWVuLiBXaXRoaW4gdGhvc2UsIHN3aW5kbGVzIHRoYXQgdGVsbCBwZW9wbGUgdG8gcGF5IGZvciBzaXRlcyB0aGV5IGRvbiB1c2UgYXJlIGluY3JlYXNpbmcuIApJbiAyMDEzLCBGZWRlcmFsIGFnZW50cyBidXN0ZWQgYW4gInVsdHJhZXhjbHVzaXZlLCBoaWdoIHN0YWtlcywgaWxsZWdhbCBwb2tlciByaW5nIiBydW4gYnkgUnVzc2lhbiBnYW5nc3RlcnMgb3V0IG9mIFRydW1wIFRvd2VyLiBJbiBhZGRpdGlvbiB0byBjYXJkIGdhbWVzLCB0aGV5IG9wZXJhdGVkIGlsbGVnYWwgZ2FtYmxpbmcgd2Vic2l0ZXMsIHJhbiBhIGdsb2JhbCBzcG9ydHMgYm9vayBhbmQgbGF1bmRlcmVkIG1vcmUgdGhhbiAkMTAwIG1pbGxpb24uIApMYWR5IEdhZ2EgaGFzIHNsYW1tZWQgTWFkb25uYSBmb3IgZmV1ZGluZyB3aXRoIGhlciB0aHJvdWdoIHRoZSBtZWRpYSByYXRoZXIgdGhhbiBzb3J0aW5nIG91dCB0aGVpciBkaWZmZXJlbmNlcyBmYWNlIHRvIGZhY2UuIG5ldHdvcmsgQUJDLCBiYWNraW5nIGNsYWltcyBpdCB3YXMgYSByaXAgb2ZmIG9mIGhlciAxOTg5IHNvbmcgRXhwcmVzcyBZb3Vyc2VsZi4KSSBmbG93biBmcm9tIG9uZSBzaWRlIG9mIHRoZSBjb3VudHJ5IHRvIHRoZSBvdGhlciBqdXN0IHRvIHNlZSB0aGVtLi4gCk1vbnRobHkgQ29pbnNBcyBhIHRoYW5rIHlvdSB0byBvdXIgUHJlbWl1bSBtZW1iZXJzLCB5b3UnbGwgZ2V0IGEgc3BlY2lhbCBvbmUgdGltZSBib251cyBvZiAxLDAwMCBDb2lucyBqdXN0IGZvciBqb2luaW5nLCBhbmQgdGhlcmVhZnRlciBlYXJuIDcwMCBldmVyeSBtb250aC4gVXNlIHlvdXIgQ29pbnMgdG8gYXdhcmQgZXh0cmFvcmRpbmFyeSBjb250cmlidXRpb25zIHRvIFJlZGRpdC4KVEhPTiBvcmdhbml6YXRpb25zIChzdHVkZW50IHJ1biAiY2x1YnMiIGJhc2ljYWxseSkgZ2V0IHRvIGNob29zZSBhIGNlcnRhaW4gbnVtYmVyIG9mIGRhbmNlcnMgZXZlcnkgeWVhciwgdXN1YWxseSBiYXNlZCBvbiB3aG8ncyBwYXJ0aWNpcGF0ZWQgaW4gdGhlaXIgb3JnIGFuZCBjb250cmlidXRlZCBhIGxvdCB0byBUSE9OIHNpbmNlIGF0dGVuZGluZyBQZW5uIFN0YXRlLiAKTGFkeSBHYUdhKSAuIDk3IDk5KSAiIEJvcm4gVGhpcyBXYXkgKERlbHV4ZSBBbGJ1bSBCb251cyBTb25ncykiIEJsYWNrIEplc3VzICsgQW1lbiBGYXNoaW9uLCBGYXNoaW9uIG9mIEhpcyBMb3ZlLCBUaGUgUXVlZW4uIENhbiBuYWIgdGhlc2UgbmV3ZXN0IGRlbHV4ZSBhbGJ1bSBzb25ncyBmcm9tIGlUdW5lcyEgMTAwKSAzIFdheSAoVGhlIEdvbGRlbiBSdWxlKSBbZmVhdC4gCldlIGxpdmVkIGluIFNvdXRoZXJuIENhbGlmb3JuaWEgbmVhciBhIGxvdCBvZiBtaW5vcml0aWVzLiAKSGVhcnRoc3RvbmUgaXMgcmFuZG9tIGFzIGZ1Y2sgc28gYW55b25lIGNhbiBiZSAiZ29vZCIgYXQgaXQgaWYgdGhleSBwYXkgZm9yIGRlY2tzLiAKSkQ6IEkgaGFkIGEgY291cGxlIG9mIHRoaW5ncywgSSBndWVzcy4gCiJJIHZlcnkgbXVjaCB3YW50IHRvIGxvdmUgb3BlbiBwbGFucywgYmVjYXVzZSB0aGV5IGZlZWwgY29vbC4gQnV0IGluIHByYWN0aWNlLCB0aGV5IHNlZW0gdG8gYmUgZGlzdHJhY3Rpb24gZmFjdG9yaWVzLCIgaGUgc2F5cy4gIk9uY2UsIEkgd2FzIHRyeWluZyB0byBnZXQgd29yayBkb25lIGFuZCB3YXMgd2VhcmluZyBoZWFkcGhvbmVzICAgdGhlICdvcGVuIG9mZmljZScgZXF1aXZhbGVudCBvZiBoYXZpbmcgeW91ciBkb29yIHNodXQgICBhbmQgc29tZW9uZSBsaXRlcmFsbHkgdGhyZXcgYSBjcnVtcGxlZCBwaWVjZSBvZiBwYXBlciBhdCBtZSB0byBnZXQgbXkgYXR0ZW50aW9uLiAKVGhhdCBpcyBteSBjb250cmlidXRpb24uIApCYXNlZCBvbiB0aGF0LCBzYXZlIHlvdXIgcGF5Y2hlY2suLiAKR29pbmcgaW50byB3b3JrLCBtYXliZSB0aGF0IHBlcnNvbiBkb2VzbiBtZWV0IHNvbWVvbmUgYW5kIGhhdmUgYSBjb252ZXJzYXRpb24gd2l0aCB0aGVtIGJlY2F1c2UgdGhleSBjYW1lIGxhdGVyLiBUaGVuIHRoZSBpZGVhcyB0aGV5IGV4Y2hhbmdlZCBkdXJpbmcgdGhhdCBjb252ZXJzYXRpb24gd291bGRuIGJlIHdpdGggZWl0aGVyIHBlcnNvbiwgd2hpY2ggY291bGQgcmVzdWx0IGluIGVhY2ggcGVyc29uIGFjdGluZyBkaWZmZXJlbnRseSBhdCB0aGVpciBtZWV0aW5nLCB3aGljaCB3b3VsZCBpbiB0dXJuIGNhdXNlIGV2ZXJ5b25lIGVsc2UgYXQgdGhlIG1lZXRpbmdzIHRvIGFjdCBkaWZmZXJlbnRseSwgYW5kIHNvIG9uLiAKREFURTogTkFTQSB3aWxsIHRha2Ugbm8gZmluYWwgYWN0aW9uIG9yIHJlYWNoIGEgZmluYWwgZGVjaXNpb24gb24gY29udGludWF0aW9uIG9mIHRoZSBTUlAgcHJvZ3JhbSBhbmQgdXNlIG9mIFdhbGxvcHMgRmxpZ2h0IEZhY2lsaXR5LCBXYWxsb3BzIElzbGFuZCwgVmlyZ2luaWEsIFdoaXRlIFNhbmRzIE1pc3NpbGUgUmFuZ2UsIE5ldyBNZXhpY28sIGFuZCBQb2tlciBGbGF0IFJlc2VhcmNoIFJhbmdlLCBBbGFza2EgYmVmb3JlIE1hcmNoIDIwLCAyMDAwIG9yIDMwIGRheXMgZnJvbSB0aGUgZGF0ZSBvZiBwdWJsaWNhdGlvbiBpbiB0aGUgRmVkZXJhbCBSZWdpc3RlciBvZiB0aGUgVVMgRW52aXJvbm1lbnRhbCBQcm90ZWN0aW9uIEFnZW5jeSBzIG5vdGljZSBvZiBhdmFpbGFiaWxpdHkgb2YgdGhlIFNSUCBGU0VJUywgd2hpY2hldmVyIGlzIGxhdGVyLgpJdCB3YXMgd2l0aCB0aGlzIGJhY2tkcm9wIHRoYXQgRGVubmlzIHRyaWVkIHRvIGxvd2VyIEJ1dHRvbidzIHNhbGFyeS4gVGhlIGltcGxpY2F0aW9uIHdhcyB0aGF0IGhlIHdvdWxkIGluaXRpYXRlIHRoZSBjb250cmFjdCBicmVhaywgbnVsbGlmeWluZyB0aGUgY3VycmVudCBhZ3JlZW1lbnQuIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbkFMQlVSWSdTIFNTIENsdWIgaGFzIHJlY29yZGVkIGEgZmlmdGggc3VjY2Vzc2l2ZSBwcm9maXQgZGVzcGl0ZSBhIG1pbm9yIGRvd250dXJuIHBva2VyIG1hY2hpbmUgcmV2ZW51ZS4gClRoZSBmaXJzdCB3YXkgdG8gZW5oYW5jZSBvdXIgZnVuIGlzIHRvIGNyZWF0ZSB0aGUgcHJvcGVyIGF0bW9zcGhlcmUuIE5vLCB3ZSdyZSBub3QgZ29pbmcgdG8gYnVpbGQgYSByb29tIHRoYXQgd2lsbCBob2xkIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgb3IgdGhlIFdvcmxkIFBva2VyIFRvdXIuIEJ1dCwgd2l0aG91dCBhIGxvdCBvZiB0cm91YmxlIGFuZCBub3QgdG9vIG11Y2ggZXhwZW5zZSwgd2UgY2FuIGNyZWF0ZSBvdXIgb3duIHBva2VyIHJvb20gZW52aXJvbm1lbnQuCiJJbm5vY2VudCBwZXJzb25zIHdlcmUgaW5jYXJjZXJhdGVkLCBndWlsdHkgcGVyc29ucyBoYXZlIGJlZW4gcmVsZWFzZWQgdG8gZnVydGhlciBlbmRhbmdlciB0aGUgcHVibGljLCBtaWxsaW9ucyBhbmQgbWlsbGlvbnMgb2YgcHVibGljIGRvbGxhcnMgYXJlIGJlaW5nIGV4cGVuZGVkIHRvIGRlYWwgd2l0aCB0aGUgY2hhb3MgTXMuIApJbiBhbiBpZGVhbCBzaXR1YXRpb24sIHlvdSB1c2Ugd2VsbCBzdXBwb3J0ZWQgcGFydHMgdGhhdCBhcmUgZGVzaWduZWQgZm9yIHNlcnZlciB1c2FnZSBidXQgYXMgbG9uZyBhcyB0aGUgaGFyZHdhcmUgeW91IHVzZSBpcyBzdXBwb3J0ZWQgYnkgRnJlZUJTRCwgdGhlbiBJIHRha2UgdGhlIHN0YW5jZSB0aGF0IGhhdmluZyBhbiBpbXBlcmZlY3QgYmFja3VwIHNlcnZlciBpcyBiZXR0ZXIgdGhhbiBoYXZpbmcgbm8gYmFja3VwIGF0IGFsbC4uIApIYWhhKSAoRnVsbCBBbnN3ZXIpLiAKQW5vdGhlciBncmVhdCByZWFzb24gb25saW5lIHBva2VyIGlzIHdvcnRoIHRyeWluZyBpcyB0aGUgZmFjdCB0aGF0IHRoZSB0ZWNobm9sb2d5IG5vd2FkYXlzIGlzIHZlcnkgc2VjdXJlLCBhbmQgZmFpci4gTWFqb3IgYnJhbmRzIGFyZSBjb25zdGFudGx5IGJlaW5nIG1vbml0b3JlZCBieSBnYW1ibGluZyBjb21taXNzaW9ucyB0byBlbnN1cmUgcXVhbGl0eSBzdGFuZGFyZHMsIGFuZCB0byBtZWV0IGNsaWVudCBuZWVkcyBpbiBhbGwgYXJlYXMsIHNwZWNpYWxseSBmYWlybmVzcyBhbmQgc2VjdXJpdHkuIAooSSB3YXMgc2FsYXJpZWQgYW5kIGFueSB0aW1lIG92ZXIgNDAgaHJzIGEgd2VlayB3YXMgT1QgKHN0cmFpZ2h0IHBheSkuKQpUaGV5IHdpbGwgbGl2ZSBsb25nZXIsIGxlc3Mgc3RyZXNzZnVsLiAKSGUgaGFkIHN0YXJ0ZWQgaGlzIG5ld3NsZXR0ZXIgaW4gMTk3MSBhbmQgaGlzIGhlZGdlIGZ1bmQgaW4gMTk4NCwgd2VsbCBiZWZvcmUgdGhvc2UgbGltaXRlZCBoaWdoIGVuZCBpbnZlc3RvcnMgYmVjYW1lIHRoZSByYWdlLiAKVGhlIGJvb2sgb3BlbnMgd2l0aCBhIGdlbmVyYWwgaW50cm9kdWN0aW9uIHRvIG91ciBuYXR1cmFsIGhhYml0YXRzIGFuZCB0aGUgZGlmZmVyZW50IHdheXMgYW5pbWFscyB0dXJuZWQgdXAgaW4gTmV3IFplYWxhbmQgKEkgd291bGQgaGF2ZSBsb3ZlZCBhbiBpbGx1c3RyYXRpb24gc2hvd2luZyBHb25kd2FuYWxhbmQgYW5kIE5ldyBaZWFsYW5kIGJyZWFraW5nIGF3YXkgZnJvbSBlYWNoIG90aGVyIDgwIG1pbGxpb24geWVhcnMgYWdvKSwgYW5kIGFsc28gcmFpc2VzIHNvbWUgY29uc2VydmF0aW9uIGlzc3Vlcy4gCldoaWxlIHRoZSB0ZWNoIHdhcyBhbWF6aW5nIHdobyBhbHdheXMgZGlkIGZ1biBzdHVmZiB3aXRoIGhlciBoYWlyLCBpdCBpcmtlZCB0aGUgb2ZmaWNlIG1hbmFnZXIgYSBiaXQpLi4gCiJJdCBoYWQgbm90aGluZyB0byBkbywgYW5kIG5vIG9uZSBldmVyIHNhaWQsIGl0IGhhZCBhbnl0aGluZyB0byBkbyB3aXRoIFJ1c3NpYW4gY29sbHVzaW9uLiBUaGF0IGRvZXMgbm90IG1lYW4sIGhvd2V2ZXIsIGFzIHRoZSBwcmVzaWRlbnQgc2VlbWVkIHRvIGluZGljYXRlLCB0aGF0IHRoZSBqdWRnZSB3YXMgZ2l2aW5nIGhlLCB0aGUgcHJlc2lkZW50LCBhIGNsZWFuIGJpbGwgb2YgaGVhbHRoIG9uIFJ1c3NpYW4gY29sbHVzaW9uLiBIZSB3YXMganVzdCBzYXlpbmcgdGhlIE1hbmFmb3J0IGNhc2UgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCB0aGF0LiIKSGUncyBwZXJmZWN0bHkgYWJsZSB0byBjcml0aWNpemUgYSByZWxpZ2lvdXMgaWRlYSwgZXZlbiBpZiBpdCBoYXBwZW5zIHRvIGJlIGZyb20gYSByZWxpZ2lvbiBoZSB0aGlua3MgY29udGFpbnMgb3RoZXIgaWRlYXMgdGhhdCBhcmUgc2FsdmFnZWFibGUgYXMgYSBzZWN1bGFyaXN0LCBhbmQgcGVyZmVjdGx5IHdpbGxpbmcgdG8gZmluZCB0aG9zZSB0aGluZ3MgaW4gYSByZWxpZ2lvbiBoZSdzIHN1cHBvc2VkbHkgInBob2JpYyIgYWdhaW5zdC4gCkRpZSBzaW5kIENoZWYgZGVyIFdlbHQsIGRhIGRhcmYga2VpbiBrbGVpbmVyIFJldm9sdXp6ZXIgZWluZW4gYW5kZXJlbiBXZWcgdmVyc3VjaGVuLiBTbyBtaXQgV2FobGJlb2JhY2h0ZXJuIHVuZCBzby4gCkEgc291cmNlIGNsb3NlIHRvIHRoZSBmb3VuZGF0aW9uIHNhaWQgdGhlcmUgaGFkIGJlZW4gImlzc3VlcyIgd2l0aCB0aGUgZm91bmRhdGlvbidzIGV4cGVuc2VzIGFuZCBmaW5hbmNpYWwgbWFuYWdlbWVudCBpbiB0aGUgcGFzdCwgYnV0IHRoZXkgaGFkIHJlY2VudGx5IGJlZW4gYWRkcmVzc2VkIGFuZCBtYWpvciBjaGFuZ2VzIGhhdmUgYmVlbiBtYWRlIHRvIGl0cyBvcGVyYXRpb25zLgoxNS4gIk4gMyBmYXR0eSBhY2lkcyBhcmUgZXNzZW50aWFsIGZvciBvdmVyYWxsIGhlYWx0aCBvZiB0aGUgYXRobGV0ZS4iClRoYXQgbm90IGVtcG93ZXJtZW50LCBpdCBhIG1hcnR5ciBjb21wbGV4LiAKIlRoaXMgY2FzZSBpcyBhIHBhcnRpY3VsYXJseSB1bmlxdWUgY2FzZSBpbiB0aGF0IHRoZSBjb25kdWN0IG9mIHRoZSBkZWNlYXNlZCB3YXMgYSBzaWduaWZpY2FudCBjb250cmlidXRpbmcgZmFjdG9yLCIgSnVkZ2UgUm95IEVsbGlzIHNhaWQuICJPZnRlbiBbYSBmYXRhbCBjcmFzaF0gaXMgdGhlIGNhdXNlIG9mIHJ1aW4gZm9yIHR3byBmYW1pbGllcywiIEp1ZGdlIEVsbGlzIHNhaWQuIApCb2IgQmxha2UgMTkyNSAgIDIwMTYgQWZ0ZXIgOTEgeWVhcnMgb2YgZGVkaWNhdGlvbiB0byBoaXMgZmFtaWx5LCBmcmllbmRzIGFuZCBjb21tdW5pdHksIEdlb3JnZSBSb2JlcnQgKEJvYikgQmxha2UgZGllZCBwZWFjZWZ1bGx5IGluIGhpcyBzbGVlcCBhdCBIb3NwaWNlIFdlbGxpbmd0b24sIEd1ZWxwaC4gCkdvdmVybm1lbnQgZG9lcyBub3Qgd2FudCBwb29yIHBlb3BsZSBpbiBMYXRpbiBBbWVyaWNhIHRvIGJlIGJldHRlciBvZmYsIGJlY2F1c2UgQW1lcmljYSdzIGdpYW50IGNvbXBhbmllcyB3b24ndCBoYXZlIGNoZWFwIGxhYm9yIHRvIGV4cGxvaXQgYW55bW9yZS4gCkhlIHNhaWQgdGhlIFRlYW1zdGVycyB3ZXJlIHRvbGQgZHVyaW5nIGEgcmVjZW50IG1lZXRpbmcgd2l0aCBnb3Zlcm5tZW50IG9mZmljaWFscyB0aGF0IHRoZSBsYXcgd291bGQgYmUgdGFibGVkIGJ5IHRoZSBlbmQgb2YgdGhlIHllYXIsIGJ1dCBoZSBkaWRuIHJlYWxpemUgaXQgd291bGQgY29tZSBzbyBzb29uLi4gClRoZSBtaXNzaW9uIG9mICBpcyB0byBwcm92aWRlIGNvbXByZWhlbnNpdmUgcHJldmVudGF0aXZlIGFuZCBjbGluaWNhbCBtZW50YWwgaGVhbHRoIHNlcnZpY2VzIHRvIGVuaGFuY2UgdGhlIHBzeWNob2xvZ2ljYWwgd2VsbCBiZWluZyBvZiBpbmRpdmlkdWFsIHN0dWRlbnRzLCBhcyB3ZWxsIGFzIHRoZSBicm9hZGVyIGNhbXB1cyBjdWx0dXJlLiAgcHJvdmlkZXMgYnJpZWYgaW5kaXZpZHVhbCB0aGVyYXB5LHVubGltaXRlZGdyb3VwIHRoZXJhcHksIGFuZCBwc3ljaGlhdHJpYyBzZXJ2aWNlc3RvIGFkZHJlc3MgdGhlIGVtb3Rpb25hbCwgZGV2ZWxvcG1lbnRhbCBhbmQgbWVudGFsaGVhbHRoIHJlbGF0ZWQgY29uY2VybnMgb2Ygc3R1ZGVudHMuIApTbyBJIGxldCB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGRlYWwgd2l0aCB0aGVtIGluc3RlYWQuIEkgZ290IGEgbmFzdHkgbGV0dGVyIGEgZmV3IHdlZWtzIGxhdGVyIGFib3V0IGhvdyB0aGV5IGhhZCByZXNvbHZlZCB0aGUgaXNzdWUgZXZlbiB0aG91Z2ggSSBiZWVuIHVuY29vcGVyYXRpdmUgKGFwcGFyZW50bHkpIGFuZCBJIG5ldmVyIGdvdCBhbm90aGVyIGJpbGwgYWdhaW4uLiAKU3RvcCBzcGlubmluZyB0aGUgZGViYXRlLiBJIHZlcnkgYXdhcmUgdGhhdCB5b3UgYXJlIHRyeWluZyB0byB0YWtlIHRoaXMgY29udmVyc2F0aW9uIHRvIHdoZXJlIFlPVSB3YW50IGl0IHRvIGJlIHJhdGhlciB0aGFuIHdoYXQgbXkgYWN0dWFsIHBvaW50IHdhcyBhbmQgdGhhdCBpcyByZWplY3RlZC4gCkl0IGlzIHVuZmF0aG9tYWJsZSB0aGF0IHBvbGljeW1ha2VycyB3b3VsZCB0ZWxsIGFkdWx0cyB0aGF0IHRoZXkgY2Fubm90IGVuam95IGEgZ2FtZSBvZiBUZXhhcyBob2xkICdlbSAgIGluIHdoaWNoIHRoZSBwbGF5ZXIncyBhYmlsaXR5IGhhcyBkaXJlY3QgaW1wYWN0IG9uIHRoZSBvdXRjb21lICAgaW4gdGhlIHByaXZhY3kgb2YgdGhlaXIgaG9tZXMgb24gY29tcHV0ZXJzIGFuZCBJbnRlcm5ldCBjb25uZWN0aW9ucyB0aGV5IHBheSBmb3IuIFlldCB0aGVzZSBzYW1lIGxhd21ha2VycyB0aGluayBpdCdzIHBlcmZlY3RseSBmaW5lIGZvciBwZW9wbGUgdG8gYmV0IG9uIGhvcnNlcyBvciBwbGF5IHRoZSBsb3R0ZXJ5LCB0d28gb3RoZXIgZm9ybXMgb2YgZ2FtYmxpbmcuIApJIHRoaW5rIHRoZSBwb2ludCBvZiB0aGUgbW92aWUgaXMgZGVtb25zdHJhdGVkIHByZXR0eSB3ZWxsIGluIHRoZSBzb25ncy4gCktpbmdzIHNjb3JlZCB0aHJlZSBzdHJhaWdodCBnb2FscyBpbiB0aGUgc2Vjb25kIHBlcmlvZCBmb3IgYSA0IDEgbGVhZCwgdGhlbiBwb3R0ZWQgdHdvIG1vcmUgb24gcG93ZXIgcGxheXMgbWlkd2F5IHRocm91Z2ggdGhlIHRoaXJkLi4gCkNsaWNrIFRVVE9SSUFMLC4gCk5TVyByYWNpbmcgbWluaXN0ZXIgUGF1bCBUb29sZSBhbm5vdW5jZWQgdGhlIHBva2llcyBjYXAgb24gVHVlc2RheSwgd2hpY2ggbWVhbnN0aGUgZ292ZXJubWVudCB3aWxsbm90IGFsbG93IHRoZSBudW1iZXIgb2ZnYW1pbmcgbWFjaGluZXMgdG8gaW5jcmVhc2UgaW4gImhpZ2hlciByaXNrIiBjb21tdW5pdGllcyBhY3Jvc3MgdGhlIHN0YXRlLiAKQWxzbywgaGFsZiB0aGUgY291bnRyeT8gQ291bGQgeW91IGNpdGUgdGhhdD8gSSBrbm93IFRPTlMgb2YgcmVsaWdpb3VzIHBlb3BsZSB3aG8gYmVsaWV2ZSBpbiBldm9sdXRpb24uIEkgZG9uIHRoaW5rIGJpYmxlIGxpdGVyYWxpc3RzIGFyZSBhcyBjb21tb24gYXMgeW91IHRoaW5rLgpHaXZlbiB5b3VyIGJ1ZGdldCBpdCBiZSBoYXJkIHNvIHlvdSBtaWdodCB3YW50IHRvIGxvb2sgZm9yIGEgdXNlZCBndW4uIEEgTWFyaW4gbGV2ZXIgYWN0aW9uIC4zMC8zMCBjb3VsZCBwcm9iYWJseSBiZSBmb3VuZCBpZiB5b3UgbG9vayBoYXJkIGVub3VnaCBhbmQgd2lsbCBnaXZlIHlvdSB0aGUgYmVzdCBiYW5nIGZvciB5b3VyIGJ1Y2suIEFsc28gYW55IGJvbHQgYWN0aW9uIC4zMDggbWFkZSBieSBSdWdlciwgU2F2YWdlLCBUaWtrYSwgTW9zc2JlcmcsIG9yIFJlbWluZ3RvbiB3aWxsIGRvIHRoZSB0cmljay4gCkRvIHlvdSB0aGluayBwbGF5aW5nIG9uIHBhcnR5cG9rZXIgd2l0aCBubyBodWQgaXMgd29ydGggZG9pbmc/IEFuZCB3aGF0IGFib3V0IHBsYXlpbmcganVzdCA2MCBob3VycyBhIG1vbnRoLiBJIGhlYXIgcGVvcGxlIHNheSB5b3UgZ290dGEgcGxheSBsaWtlIDIwMCsgaG91cnMgYSBtb250aCB0byByZWFsbHkgZ3JpbmQgYW5kIGdldCBnb29kLiAKR2VudGx5IHN0cmV0Y2ggeW91ciBuZWNrIGFuZCBlYXNlIHlvdXIgc2hvdWxkZXJzIGFuZCBzcGluZS4gClNldmVyYWwgZmFjdG9ycyBhZmZlY3QgdGhlIHJhcGlkaXR5IG9mIG5haWwgZ3Jvd3RoLiAKVGhlIEd1aWRlIHdhcyB3cml0dGVuIGJ5IHR3byBwb3N0Z3JhZHVhdGUgc3R1ZGVudHMgd2hvIGJldHdlZW4gdGhlbSBoYXZlIHdvbiBvdmVyIGZyb20gNTUgZGlmZmVyZW50IGNoYXJpdHkgYXdhcmRzLiBJdCBjb250YWlucyBtb2RlbCBwZXJzb25hbCBhbmQgZmluYW5jaWFsIHN0YXRlbWVudHMsIGFuZCBvdmVyIDMwMCBsaW5rcyB0byB2b2x1bnRhcnkgc2VjdG9yIGZ1bmRpbmcgc291cmNlcy4gVGhlIEFsdGVybmF0aXZlIEd1aWRlIGlzIGluZGVwZW5kZW50bHkgcHVibGlzaGVkIGJ5IEdyYWRGdW5kaW5nLgpHaW92YW5uaSBQYXNzZXJpbmkgYSBiaWVuIHNyIHJhcHBlbCBxdSdpbCBuJ3RhaXQgcGFzIHB0aXNzaWVyLiAKQWxzbywgdGhleSBkb24ndCBkbyB0aGlzLiBUaGVyZSBpcyBhIGxvdCBvZiBpbnR1aXRpb24gYW5kIGd1ZXNzd29yayBiZWNhdXNlIHlvdSBoYXZlIGltcGVyZmVjdCBpbmZvcm1hdGlvbi4gCkFsIEphemVlcmEncyBBbmR5IEdhbGxhY2hlcixyZXBvcnRpbmdmcm9tIFRhbXBhLHNhaWQ6ICIuIHdpdGhpbiB0aGUgcG9saXRpY2FsIHBhcnRpZXMgdGhlaXIgW3RoZSBUZWEgUGFydHlddm9pY2UgaXMgdmVyeSBsb3VkIGluZGVlZC4gQW5kIHRoZXkgZGlkIHBsYXkgdGhhdCB2aXRhbCByb2xlIGluIGxhc3QgeWVhcidzIG1pZCB0ZXJtIGVsZWN0aW9ucy4KVGhlIFM3J3MgbW90b3IsIGFuIDcuMCBsaXRlciBWOCwgaXMgbG9vc2VseSBiYXNlZCBvbiBGb3JkJ3MgTkFTQ0FSIFY4IGJsb2NrLCBidXQgU2FsZWVuIGhhcyB0aG9yb3VnaGx5IHJlIHdvcmtlZCB0aGUgcG93ZXJwbGFudC4gCkhvdyBUbyBIZWxwIGFuIEVnZyBCb3VuZCBQZXQgQmlyZApUaGlzIHNlcnZpY2UgaXMgbm90IG1lYW50IHRvIGNpcmN1bXZlbnQgb3Igc3VwZXJzZWRlIGVzdGFibGlzaGVkIHJlcG9ydGluZyBtZXRob2RzLCBzdWNoIGFzIGNvbW11bmljYXRpbmcgd2l0aCBhIHN1cGVydmlzb3IsIGJ1dCByYXRoZXIgc2VydmUgYXMgYW4gYWRkaXRpb25hbCByZXBvcnRpbmcgbWV0aG9kIGZvciBpbmRpdmlkdWFscyB0byByZXBvcnQgdGhlaXIgY29uY2VybnMuCkFmdGVyIGEgY2VydGFpbiBwb2ludCB0aGF0IGxpZmUgYmVjb21lcyBzbyBub3JtYWxpemVkIGFuZCB0aGV5IGFyZW4gcGhhc2VkIGJ5IGl0LCBzbyBpdCBub3QgYSBzdWZmaWNpZW50IGRldGVycmVudCB0byByZSBvZmZlbmRpbmcgICBhbmQgdGhleSBtYXkgZXZlbiBwcmVmZXIgaXQgYW5kIHJlIG9mZmVuZCBzaW1wbHkgdG8gYmUgYmFjayB3aGVyZSB0aGV5IGFyZSBjb21mb3J0YWJsZS4uIApBbmQgc2Vjb25kIGJlY2F1c2Ugb2YgRG91ZyBvdmVyYWxsIGFwcHJvYWNoIHdpdGggaGlzIFlvdVR1YmUgY2hhbm5lbCwgaGUgYWN0cyBsaWtlIGEgY2hpbGQgYWJvdXQgZXZlcnl0aGluZywgbWF5YmUgaGUgZG9lcyB0aGF0IGZvciBlbnRlcnRhaW5tZW50IGJ1dCBzdGlsbCBzYXlzIGEgbG90IGFib3V0IGhpbS4gQWxyZWFkeSB1bnN1YnNjcmliZWQgZnJvbSBoaXMgY2hhbm5lbCBhbmQgZG9uIHBsYW4gb24gd2F0Y2hpbmcgYW55IG9mIGhpcyBjb250ZW50IGFueW1vcmUuIApJIGhhdmUgYSB0cmlwIHRvIFBhcmlzIHBsYW5uZWQgd2l0aCBteSBwYXJlbnRzLCBnaXJsZnJpZW5kIGFuZCBoZXIgZGF1Z2h0ZXIgKDl5bykuIFJlY2VudGx5IHdlIGZvdW5kIG91dCB0aGF0IG15IGZhdGhlciBoYXMgcHJvc3RhdGUgY2FuY2VyIGFuZCB3aWxsIG5lZWQgdG8gdW5kZXJnbyByYWRpYXRpb24gdHJlYXRtZW50LiBIZSB3b250IGJlIGFibGUgdG8gY29tZS4gU2hvdWxkIHRoZSByZXN0IG9mIHVzIHN0aWxsIGdvPyBNeSBmYXRoZXIgaGFzIG15IGJyb3RoZXIgYW5kIHNpc3RlciB3aG8gd2lsbCBiZSBhYmxlIHRvIHN1cHBvcnQgaGltIHdoaWxlIHdlIGFyZSBnb25lLiBJIGFtIGdvaW5nIHRvIGZlZWwgYmFkIGlmIHdlIGdvIHdpdGhvdXQgaGltIGJ1dCBhbHNvIGlmIHdlIGRvbid0IGdvIGF0IGFsbC4gTXkgZ2lybGZyaWVuZCwgaGVyIGRhdWdodGVyLCBhbmQgbXkgbW90aGVyIGFyZSByZWFsbHkgbG9va2luZyBmb3J3YXJkIHRvIHRoZSB0cmlwIGFuZCBzdGlsbCB3YW50IHRvIGdvLiBTaG91bGQgd2Ugbm90IGdvPyBNeSBzaXN0ZXIgaXMgZ2l2aW5nIG15IG1vbSBhIGhhcmQgdGltZSBhYm91dCBpdC4gVGhlIHRyaXAgaXMgaW4gYSBtb250aC4gVGhvdWdodHM/ClRoYXQgYSBraWQgdGhhdCBkb2VzbiBqdXN0IGhhdmUgdGhlIGFiaWxpdHksIGJ1dCBoYXMgdGhlIG1pbmRzZXQgdG8gc3VjY2VlZCBpbiB0aGUgTkJBLmpjYXNleXMzNCAgMzkgcG9pbnRzICBzdWJtaXR0ZWQgMTQgZGF5cyBhZ29Vc2VkIHRvIHN0YXkgYXQgd29yayBmb3IgYW4gZXh0cmEgaG91ciBvciBtb3JlIHRvIGhlbHAgdGhlIHNoaWZ0IGFmdGVyIG1lIGdldCB0aGVpciBzaGl0IHRvZ2V0aGVyIGlmIHRoZXkgbmVlZGVkIG1lIHRvLiAKVGhlIG9yaWdpbmFsIHJlY2lwZSBzcGVjaWZpZXMgY2hpY2tlbiB0aGlnaHMgKHNraW5sZXNzLCBidXQgYm9uZSBpbikgYW5kIGl0IGlzIGRlZmluaXRlbHkgdGhlIHdheSB0byBnby4gSE9XRVZFUiwgYmVjYXVzZSBvZiBjb3Vyc2UsIEkgaGF2ZSBhbHNvIHRyaWVkIHRoaXMgd2l0aCBza2lubGVzcywgYm9uZWxlc3MgY2hpY2tlbiBicmVhc3RzIGFuZCB3aGlsZSBpdCBub3QgbmVhcmx5IGFzIGp1aWN5IGFuZCB0b290aHNvbWUgYW5kIHJpY2gsIGl0IHRvdGFsbHkgZmluZS4gSnVzdCByZWR1Y2UgdGhlIGNvb2tpbmcgdGltZSB0byAyMCBtaW51dGVzIGFuZCB0aGVuIHVzZSB0aGUgYnJvaWxlciBmb3IgMyBtaW51dGVzIGF0IHRoZSBlbmQgdG8gYnJvd24gYW5kIGNyaXNwIHRoZSBicmVhZGNydW1icy4gClRoZSBnaXJscyBoYXZlIGJlZW4gcmVhbGx5IGN1dGUgdG9vIHdoaWNoIHJlYWxseSBzdXJwcmlzZWQgbWUgYmVjYXVzZSBJIHVzdWFsbHkgZG9uIHRoaW5rIG9mIHRoZW0gbGlrZSB0aGF0LiAKTGlrZSBDaHJpc3RtYXMgYW5kIHBhaW50ZWQgd2VhcG9ucyBtYWtpbmcgaXQgaGFyZGVyIHRvIHRlbGwgd2hhdCB0aGV5IGFyZSwgb3IgY2xhc3NlcyB3ZWFyaW5nIGxhcmdlIGNvYXRzLCBtYXNzaXZlIGhhdHMsIGFuZCBnbG93aW5nIGdvZ2dsZXMgd2hpbGUgc2hvb3RpbmcgbWUgd2l0aCB3ZWFwb24gdmFyaWFudHMgdGhhdCBJIGRpZG4ga25vdyB0aGV5IGV2ZW4gaGFkIHNvIEkgY2FuIGV2ZW4gdGVsbCBpZiBJIHdhcyBoaXQgYnkgYSByb2NrZXQgb3IgYSBncmVuYWRlIChEb24gZXZlbiBnZXQgbWUgc3RhcnRlZCBvbiBob3cgcGVyZmVjdGx5IHRoZXkgbmFpbGVkIHRoZSBhdWRpbyBjdWVzIG9yaWdpbmFsbHksIHRoZW4gdGhyZXcgdGhlbSBhd2F5IGJlY2F1c2UgZXZlcnkgY2xhc3NlcyBhbHQgd2VhcG9ucyBoYXZlIGRpZmZlcmVudCBzb3VuZHMgc28gdGhlcmUgZXZlbiBtb3JlIHNvdW5kcyBJIGdvdHRhIGxlYXJuIHRvIHJlY29nbml6ZSkgaGVjayBJIGNhbiBldmVuIHRlbGwgd2hhdCBhIGRlbW9tYW4gaXMgZ29ubmEgZG8gd2hlbiBJIHNlZSBvbmUgdW5sZXNzIEkgY2FuIGdsaW1wc2UgYSBzaGllbGQgb24gaGlzIGFybSBhbmQgZXZlbiB0aGVuIGl0IG5vdCBhIGd1YXJhbnRlZSB0aGF0IGhlIGZ1bGwgZGVtbyBrbmlnaHQgb3IganVzdCB1c2luZyBpdCBmb3Igc29tZSBleHRyYSBocC4gCkJlc3Qgb2YgYWxsIGl0cyBsaWdodHdlaWdodCBhbmQgd2lsbCBmaXQgbmljZWx5IGludG8gYSBiYWcsIHN1aXRjYXNlLCBsYXB0b3AgY2Fycmllciwgb3IgYW55IG90aGVyIGNvdmVyLiAKT25lIG90aGVyIGlzc3VlIHRoYXQga2VwdCBjb21pbmcgdXAgZHVyaW5nIHRoZXJhcHkgd2FzIGhpcyBiaW5nZSBkcmlua2luZyB3aXRoIGZyaWVuZHMgYW5kIGhlIHN0YXJ0ZWQgZG9pbmcgdGhpcyBhIGxvdCBsZXNzIGR1cmluZyB0aGVyYXB5LiBCdXQgZXZlcnkgb25jZSBpbiBhIHdoaWxlLCBJIGNhdGNoIGhpbSBpbiBhIGxpZSAgIHR3aWNlIGFib3V0IHRoZSBwb2tlciBhbmQgb25jZSBhYm91dCBoaW0gaGFuZ2luZyBvdXQgd2l0aCBoaXMgd29tYW5pemluZyBmcmllbmQgICBhbmQgZWFjaCB0aW1lLCBJIGdldCBTVVBFUiB1cHNldCwgYnV0IEkgZG9uJ3Qga25vdyBpZiBJIGFtIG92ZXJyZWFjdGluZyBiZWNhdXNlIG9mIGhpcyBoaXN0b3J5IG9mIGx5aW5nIGFuZCBhbHNvIGJlY2F1c2UgSSB0aGluayBob25lc3R5IGlzIFJFQUxMWSBpbXBvcnRhbnQgYW5kIEkga25vdyB0aGF0IG5vdCBldmVyeW9uZSBmZWVscyB0aGF0IHdheS4gREggbGllcyBiZWNhdXNlIGhlIGhhdGVzIGNvbmZsaWN0IGhlIHdvdWxkIHJhdGhlciB0cnkgdG8gZ2V0IGF3YXkgd2l0aCBzb21ldGhpbmcgdGhhbiB0cnkgdG8gdGFsayB0aGluZ3MgdGhyb3VnaCB3aXRoIG1lIChoZSBoYXRlcyB0aGVzZSBjb252ZXJzYXRpb25zKS4gCldoaWNoIGJhY3RlcmlhIG1lZXQgdGhlIGNyaXRlcmlhPwpUaGF0IHdoeSBJIGRvbiByZWNvbW1lbmQgYXNraW5nIGEgd29tYW4gZm9yIGFuYWwgc2V4IHdpdGhvdXQgc29tZSBjYXJlZnVsIHByZXBhcmF0aW9uLiBJbnN0ZWFkIG9mIGFza2luZyBoZXIgdG8gdHJ5IGFuYWwgc2V4LCBpdCBiZXR0ZXIgdG8gbWFrZSBoZXIgd2FudCBhbmFsIHNleC4gV2hldGhlciB5b3UganVzdCBjdXJpb3VzIGF0IHRoaXMgc3RhZ2Ugb3IgYWxyZWFkeSB3aWxsaW5nIHRvIGluZHVsZ2UgeW91ciBhZHZlbnR1cm91cyBzaWRlLCBjaGVjayBvdXQgdGhlc2Ugc2l4IGRvIGFuZCBkb24gb2YgYW5hbCBzZXguLiAKRnJlZSBQQyBvcHRpbWl6ZWQgdmVyc2lvbiBvZiBBbmRyb2lkIGJhc2VkIG9uIEFuZHJvaWQgeDg2IG9wZW4gc291cmNlIE9TIHByb2plY3QuIApXZWFrZXIgcGxheWVycyB3aWxsIGRvIHRoaXMgd2l0aCBzdHJvbmcgYnV0IHZ1bG5lcmFibGUgaGFuZHMuIFRoZXkga25vdyB0aGV5IGhhdmUgdGhlIGJlc3QgaGFuZCBub3csIGJ1dCBhcmUgd29ycmllZCBvZiB0aGF0IG9idmlvdXMgZmx1c2ggZHJhdy4gRXhhbXBsZXMgYXJlIGFsbCBzZXRzIGFuZCAycCAoSkosIDg4LCBBSiwgSjgsIEE4KS4gQWxzbyBBSyBhbmQgQVEgYXJlIHBvc3NpYmxlIGhlcmUuCkhlIGlzIHN1cnZpdmVkIGJ5IGhpcyBiZWxvdmVkIHdpZmUgR3dlbiwgYnJvdGhlcnMgRGF2aWQgKENhcm9saW5lKSBpbiB0aGUgVUsgYW5kIFJpY2hhcmQgKEhlbGVuKSBpbiBBdXN0cmFsaWEuIApXZSB0aHJvdyBvdXQgd29yZHMgbGlrZSBkZXJpdmF0aXZlcyBhbmQgdG94aWMgYXNzZXRzIGFuZCB0aGV5IG5vZCB0aGVpciBoZWFkcyBhbmQgYWdyZWUgdG8gbm8gcmVndWxhdGlvbiBiZWNhdXNlIHRoZXkgd29uIHdhbnQgdG8gbG9vayBsaWtlIHRoZXkgaGF2ZSBubyBpZGVhIHdoYXQgZ29pbmcgb24uLiAKSSB3YXMgYSBiaXQgcGVldmVkIGF0IHRoZSB3YXkgbW9kcyB3ZXJlIGNob3NlbiwgYnV0IHdoYXRldmVyLiBUaGVuIHdlIHdlcmUgYnJpbmdpbmcgaW4gYSBuZXcgc2V0IG9mIG1vZHMsIHdlIHdlcmUgZWFjaCBhbGxvd2VkIDEgdmV0by4gClRoZSBjcmVhdG9ycyBiYXNpY2FsbHkgTXVsYW4gdGltZSBjcm9zc2RyZXNzZXIiIGhlci4gTWlnaHQgdGFrZSBhIGxpbmUgY2hhbmdlIG9yIGxpbmUgYWRkaXRpb24gYnV0IHRoZXkgY291bGQgcm9sbCB3aXRoIGl0IHRoYXQgd2F5Li4gCldoeSBkbyBJIG5lZWQgdG8gcHJvdmUgdGhhdCBJIGtpbGxlZCBteSBjb21ibyBhbmQgc2lkZWJvYXJkZWQgaW4gdW5tb29yZWQgZWdvIHNvIEkgY2FuIHRha2Ugb3V0IG5leHVzLCBvciBob3N0YWdlIHRha2VycyBmb3Iga3Jhc2lzPyBJcyB0aGVyZSBzb21lIHNraWxsIGluIHRoYXQ/LiAKT3ZlcnZpZXcgZm9yIGZyYW5jb3F1ZXoKRG96ZW5zIG9mIFdvb2x3b3J0aHMgcHVicyBhcmUgYmVpbmcgaW52ZXN0aWdhdGVkIG92ZXIgY2xhaW1zIHN0YWZmIGlsbGVnYWxseSBnYXZlIGZyZWUgZHJpbmtzIHRvIHBva2llIHBsYXllcnMgdG8ga2VlcCB0aGVtIGdhbWJsaW5nIGxvbmdlciwgYXMgYSB3aGlzdGxlYmxvd2VyIGFsbGVnZXMgc3RhZmYgd2VyZSBpbnN0cnVjdGVkIG9uIGhvdyB0byBjb3ZlciB1cCB0aGUgcHJhY3RpY2UuCkkgZG9uIG5lZWQgdG8gc3RhcmUgYXQgbXkgZ3VuIHRvIHJlbG9hZCBpdCwgSSBjYW4gZG8gaXQgcHVyZWx5IGJ5IGZlZWwgYmVjYXVzZSB0aGUgdHJpZ2dlcnMgZm9yIHJlbG9hZGluZyBhcmUgdmVyeSBnZW5lcm91cy4gCkEgTWVzc2FnZSBGcm9tIE91ciBTcG9uc29yCldoYXQgaXMgbW9zdCBjZXJ0YWlubHkgbm90IHVuZGVyc3RhbmRhYmxlIGlzIHRoZSB3aWxsaW5nbmVzcyBvZiBHT1AgbGVhZGVycywgaW5jbHVkaW5nIEpvaG4gTWNDYWluLCB0byBleHBsb2l0IHRoaXMgc29ydCBvZiB3aGl0ZSBmdXJ5IGZvciB0aGVpciBvd24gcG9saXRpY2FsIGVuZHMuIE1jQ2FpbiBzaG91bGQgYmUgZW5nYWdlZCBpbiBDb25ncmVzc2lvbmFsIGRlYmF0ZSwgbm90IGZhbm5pbmcgdGhlIGZsYW1lcyBvZiBtaXNpbmZvcm1lZCBmYW5hdGljcyB3aXRoIGhpcyBvd24gaGVhbHRoIGNhcmUgdG93biBoYWxsIHdoZXJlIGhlIGlzIGVuY291cmFnaW5nICJwcm90ZXN0LiIKVGhlc2UgYXJlIGZhbnRhc3RpYyBpZGVhcyBhbmQgSSBhbSBpbnNwaXJlZCBieSB0aGVtLiAKV2VsbCBxdWl0ZSBhIGZldyBvZiBoZXIgbGFkeSBmcmllbmRzIHdobyBhcmUgbGF0ZSA0MHMvZWFybHkgNTBzIGFyZSBkaXZvcmNlZCBhbmQgdXNpbmcgZGF0aW5nIGFwcHMgYW5kIGJveSBkbyB0aGV5IGZpbHRlciB0aGUgc2hpdCBvdXQgb2YgdGhlaXIgZmFjZXMgaW4gb3JkZXIgdG8gImNvbXBldGUiIHdpdGggdGhlIHlvdW5nZXIgZ2lybHMuIApHb2QgbWFuLCBJIGFtIHJlYWR5IGZvciBSZWQgRGVhZC4KTW9zdCB5b3VuZyBtYW1tYWxzLCBlc3BlY2lhbGx5IHdoZW4gdGhlaXIgZnVyIGhhcyBub3QgZ3Jvd24gb3V0IHlldCwgY2Fubm90IG1haW50YWluIHRoZWlyIHJlZ3VsYXIgYm9keSB0ZW1wZXJhdHVyZS4gQXMgc3VjaCwgdGhleSBhcmUgbW9yZSBwcm9uZSB0byBlaXRoZXIgaHlwb3RoZXJtaWEgb3IgaHlwZXJ0aGVybWlhLiAKRWFybGllciB0aGlzIG1vbnRoLCBBbmRlcnNvbiBzZWN1cmVkIGEgdGVtcG9yYXJ5IHJlc3RyYWluaW5nIG9yZGVyIGFnYWluc3QgU2Fsb21vbiB0byBwcmV2ZW50IGhpbSBmcm9tIGNvbnRhY3RpbmcgaGVyIGluIGFueSB3YXksIGFsbGVnaW5nIHRoYXQgaGVyIGV4ICJlbmdhZ2VkIGluIHJlcGVhdGVkIGFjdHMgb2YgaGFyYXNzbWVudCBhbmQgYWJ1c2UiIHRoYXQgY2F1c2VkIGhlciB0byBleHBlcmllbmNlICJzZXZlcmUgZW1vdGlvbmFsIGRpc3RyZXNzLiIKVHJlbnQgRnJhbmtzIChSIEFaKSBsb29rIG9uIGluIFdhc2hpbmd0b24sIERDLiAKSGFsIGluaSBkaXNlYnV0IGRlbmdhbiBpc3RpbGFoICJibGluZHMiLlVudHVrIG1lbXBlbGFqYXJpIGluc3RydWtzaSBtZW5kZXRhaWwgdGVudGFuZyBjYXJhIGJlcm1haW4gVGV4YXMgSG9sZCdFbSwgY2FyaWxhaCBwYW5kdWFubnlhLlBpbGloIHRpbmRha2FuIEFuZGEuIFNhYXQgcGVybWFpbmFuIGJlcmxhbmp1dCBkaSBzZXB1dGFyIG1lamEsIEFuZGEgYWthbiBtZWxpaGF0IGp1bWxhaCB0YXJ1aGFuIHNldGlhcCBwZW1haW4gdW50dWsgcm9uZGUgeWFuZyBzZWRhbmcgYmVybGFuZ3N1bmcuIFNhYXQgZ2lsaXJhbiBBbmRhIHRpYmEsIEFuZGEgYmlzYSBtZW1pbGloIENhbGwgKG1lbnlhbWFrYW4gdGFydWhhbiksIENoZWNrIChtZWxld2F0a2FuIGdpbGlyYW4gamlrYSB0aWRhayBhZGEganVtbGFoIHRhcnVoYW4geWFuZyBiaXNhIGRpc2FtYWthbiksIEJldC9SYWlzZSAobWVuaW5na2F0a2FuIGp1bWxhaCB0YXJ1aGFuKSwgYXRhdSBGb2xkIChtZW55ZXJhaCBkYW4gbXVuZHVyIGRhcmkgcGVybWFpbmFuKS5BbmRhIGJpc2EgbWVuZW50dWthbiB0aW5kYWthbiBzZWJlbHVtIGdpbGlyYW4gQW5kYSB0aWJhLCBqaWthIEFuZGEgc3VkYWggdGFodSBhcGEgeWFuZyBBbmRhIGluZ2luIGxha3VrYW4gc2ViZWx1bW55YS4gCkkgdGhpbmsgd2UgaGF2ZSBhcm91bmQgNDAwIHVuZGVyZ3JhZHMgd2hpbGUgdGhlIGJpZ2dlc3Qgc2Nob29sIGhhcyBsaWtlIDQwMDAuIApBbGwgcGF0aWVudHMgcmVjZWl2ZWQgdGhlcmFweSBmb3IgNiAxMiB3ZWVrcyAocmVjZWl2aW5nIGFuIGF2ZXJhZ2Ugb2YgMjAgbWFzc2FnZSB0cmVhdG1lbnRzKSBhbmQgd2VyZSBldmFsdWF0ZWQgNC4yICsvICAwLjUgKGZpcnN0IGZvbGxvdyB1cCkgYW5kIDIxLjggKy8gIDEuNCBtb250aHMgKGZpbmFsIGZvbGxvdyB1cCkgYWZ0ZXIgdGhlcmFweS4gClBlb3BsZSB0cnkgdG8gYmUgdG91Z2ggaW4gdGhlIGJhcmJlcnNob3AgW2J1dF0sIHdoZW4geW91IGdvIHRvIHRoZSBuYWlsIHNhbG9uLCBJIGZlZWwgbGlrZSB5b3UganVzdCBnb3QgdG8gbGV0IGl0IGFsbCBvdXQuIENoaWxsIG91dCBhbmQgcmVsYXggYW5kIGhhdmUgYSBnb29kIHRpbWUuIFJlbWVtYmVycyBvbmNlIGJlaW5nIGEgeW91bmcgYm95IHdobyB3YXMgaGVsZCBob3N0YWdlIGluc2lkZSBhIHNhbG9uIGR1cmluZyBoaXMgbW90aGVyIGFwcG9pbnRtZW50cy4gClRob2lnaCBUZWQgc3RhdGVzIGhlIG9ubHkgcmVjZWl2ZWQgMi4gU3VyZSwgaXQgcG9zc2libGUgZm9yIGFueXRoaW5nIC4gClJlZ2FuRHJ5a2UgdQpEZW5pbSBvdXRlcndlYXIgZ2V0cyB0aGUgYXR0ZW50aW9uIG9mIEppbSBUcmVsaXZpbmcKImJlZW4gbWVhbmluZyB0byB0ZWxsIHlvdSwgeW91IGxvb2tpbmcgYmV0dGVyIGV2ZXJ5ZGF5LiJJIHdvdWxkIGFsc28gbGlrZSB0byByb21hbmNlIE1hZS4gCkhlIGp1c3QgRE9FUyBOT1QgYmFjayBkb3duIGFuZCBzaW5jZXJlbHkgRE9FUyBOT1QgTElTVEVOLiAKVGhlcmUgaXMgc21va2UgYW5kIGFzaCByaXNpbmcgb3V0IG9mIHRoZSB2b2xjYW5vLCBhbmQgd2hlbiB5b3UgZHJpdmUgdG8gdGhlIGxpcCBvZiBpdCwgeW91IGFyZSBpbnN0cnVjdGVkIHRvIGJhY2sgeW91ciBjYXIgaW50byBhIHNwb3QgKGluIGNhc2UgaXQgZXJ1cHRzIGFuZCB5b3UgbmVlZCB0byBmbGVlKS4gClJlbW92aW5nIHRoaXMgbWlkZGxlIG1hbiBhZG1pbmlzdHJhdGl2ZSBjb3N0IGZyZWVzIHVwIGFsb3Qgb2YgbW9uZXkgdG8gcmVkdWNlIG92ZXJhbGwgY29zdCBhbmQgZ2V0IG1vbmV5IGRpcmVjdGx5IGludG8gdGhlIGhhbmRzIG9mIGhlYWx0aCBjYXJlIHByb2Zlc3Npb25hbHMgYW5kIHRvIHJlZHVjZSBvdmVyYWxsIGNvc3QgdG8gVVMgY2l0aXplbnMuLiAKQWxzbyBpbnRlcmVzdGluZyB0aGF0IEFDTCBpbmp1cmllcyBpbiBydWdieSBsZWFndWUgY2FuIGJlIHJlY292ZXJlZCBpbiA2IG1vbnRocywgd2hlcmVhcyBpbiBBRkwgb3IgU29jY2VyIGl0IHRha2VzIHRoZW0gYSB5ZWFyIGJlY2F1c2UgdGhlcmUgbW9yZSBsYXRlcmFsIG1vdmVtZW50IGFuZCBqdW1waW5nIGluIHRob3NlIHNwb3J0cy4KQ29vbmV5IHNhaWQuIApTb21lIHBva2VyIHJvb20gb3BlcmF0b3JzIGFyZSB3b3JyaWVkIGFib3V0IHRoZWlyIGltYWdlIGFmdGVyIGEgYml6YXJyZSBpbmNpZGVudCBsYXN0IHdlZWsgaW4gd2hpY2ggYSBtYXNrZWQgZ3VubWFuIGJyb2tlIGludG8gdGhlIFBhbGFjZSBQb2tlciBSb29tIG9uIEVhc3QgQnJpc3RvbCBSb2FkIG5lYXIgRmVudG9uIFJvYWQgYW5kIG9yZGVyZWQgcGF0cm9ucyB0byB0aGUgZmxvb3IgaW4gYW4gYXBwYXJlbnQgcm9iYmVyeSBhdHRlbXB0LiBUaGUgc3VzcGVjdCB3YXMgZ3VubmVkIGRvd24sIHJlcG9ydGVkbHkgYnkgZm9ybWVyIEZsaW50IFBvbGljZSBDaGllZiBCcmFkZm9yZCBCYXJrc2RhbGUsIHdobyB3YXMgcGxheWluZyBwb2tlciB0aGVyZSBhdCB0aGUgdGltZS4gQXQgdGhlIHRpbWUgb2YgdGhlIHNob290aW5nLCBuZWFybHkgNTAgcGVvcGxlIHdlcmUgaW5zaWRlIHRoZSBsb2NrZWQgcm9vbS4gCkNsb3UgZGUgZ2lyb2ZsZQpUaGlzIGlzIGFzaWRlIGZyb20gYWxsIHRoZSBFdmFuZ2VsaWNhbCAicGFydHkgb2YgZmFtaWx5IHZhbHVlcyIgYmxhdGFudCBoeXBvY3Jpc3kuICJHYXlzIGFyZSBkZXN0cm95aW5nIG1hcnJpYWdlIiBteSBhc3MuCkxhZHkgR2FHYSkuIFRoaXMgc29uZyBpcyBhdmFpbGFibGUgb24gdGhlIHNvdW5kdHJhY2sgY2FsbGVkICJHbm9tZW8gYW5kIEp1bGlldCIgYW5kIHRodXMgaXMgb24gaVR1bmVzLiA1NCA5MikgQWxsIHRoZSBzb25ncyBsaXN0ZWQgaGVyZSBhcmUgIlVucmVsZWFzZWQuIiBZb3UgY2FuIGZpbmQgdGhlbSBvbiBZb3V0dWJlOiBBbmltYWwsIEthYm9vbSAoZmVhdC4gTGFkeSBHYUdhKSwgV3VuZGVybGFuZCAoZmVhdC4gTGFkeSBHYUdhKSwgTGV0IExvdmUgRG93biwgQmx1ZWJlcnJ5IEtpc3NlcywgUmVkIEFuZCBCbHVlLCBSZXRybyBQaHlzaWNhbCwgUm9jayBTaG93LCBTZWNvbmQgVGltZSBBcm91bmQsIFNleHkgVWdseSwgR2xpdHRlciBBbmQgR3JlYXNlIChBcm91bmQpLCBObyBGbG9vZHMsIFJpYmJvbnMsIE9oIFdlbGwsIEZ1dHVyZSBMb3ZlIChMaXZlKSwgT3V0IE9mIENvbnRyb2wgKHNob3J0IGRlbW8pLCBXb3JkcywgV29uZGVyZnVsLCBXaXNoIFlvdSBXZXJlIEhlcmUsIFNoYWtlIFlvdXIgS2l0dHksIFNvbWV0aGluZyBDcmF6eSwgRmlsdGh5IFBvcCwgRmFuY3kgUGFudHMsIEZldmVyLCBEaXJ0eSBJY2UgQ3JlYW0sIEthbmR5IExpZmUsIEZvb2xlZCBNZSBBZ2FpbiAoSG9uZXN0IEV5ZXMpLCBSZWxvYWRlZCwgQ2FwdGl2YXRlZCBFbGVjdHJpYyBLaXNzLCBMaXZpbmcgT24gVGhlIFJhZGlvLCBTcGluIFUgQXJvdW5kIChmZWF0LiAKRURJVDogQW5vdGhlciB3YXkgdG8gdGhpbmsgb2YgaXQ6IGlmIHRoZSBraWQgd2FzIGluIGRheWNhcmUgd2l0aCBhIHN0cmFuZ2VyIGFuZCB5b3VyIHNpc3RlciBmb3VuZCBvdXQgdGhlIGRheWNhcmUgd2FzbiBhZGhlcmluZyB0byB0aGUgZGlldGFyeSBuZWVkcyBzaGUgc2V0IG91dCwgc2hlIHdvdWxkIGJlIGxpdmlkIGFuZCB3b3VsZCBwcm9iYWJseSB0YWtlIGhlciBzb24gb3V0IG9mIGNhcmUuIEl0IG5vdCBhcHByb3ByaWF0ZSBmb3Igc29tZW9uZSB3aG8gaXMgbm90IHRoZSBraWQgcGFyZW50IHRvIGJlIGRvaW5nIHdoYXQgeW91IGRvaW5nLCByZWdhcmRsZXNzIG9mIHdoZXRoZXIgb3Igbm90IHlvdSB0aGluayBpdCBoYXJtbGVzcy4KV29tZW4gbWVldCBIdW5nYXJ5LlRoaXMgT2x5bXBpYyB5ZWFyIHByb21pc2VzIHRvIGJlIG9uZSBvZiB0aGUgYmVzdCBmb3IgRHIuIFNjaHJvZWRlcidzIHRlYW0uRm9yIG1vcmUgaW5mb3JtYXRpb24gb24gdGhlIFVTQSBPbHltcGljIHdhdGVyIHBvbG8gdGVhbSwgZ28gdG8gVVNBIFdhdGVyIFBvbG8uVGhlIGRydWdsZXNzLCB1bmZhaXIgYWR2YW50YWdlQSBuZXdlciBkZXZlbG9wbWVudCBvZiBjaGlyb3ByYWN0aWMgaXMgcHVzaGluZyB0aGUgbGltaXRzIG9mIGF0aGxldGljIHBvc3NpYmlsaXRpZXMuQXJvdW5kIHRoZSB3b3JsZCB0b2RheSBtYW55IGNoaXJvcHJhY3RvcnMgYXJlIGxlYXJuaW5nIEZ1bmN0aW9uYWwgTmV1cm9sb2d5LlRoaXMgaXMgYSBjb21wbGV4IHByb2dyYW0gb2Ygc3R1ZHkgdGhhdCByZXF1aXJlcyBodW5kcmVkcyBvZiBob3VycyBvZiBhY2FkZW1pYyBhbmQgY2xpbmljYWwgdHJhaW5pbmcgb2YgdGhlIGh1bWFuIG5lcnZvdXMgc3lzdGVtIGFuZCBpcyB0YXVnaHQgYnkgdGhlIENhcnJpY2sgSW5zdGl0dXRlIGZvciBHcmFkdWF0ZSBTdHVkaWVzLldoYXQga2luZCBvZiBhdGhsZXRlIHdvdWxkbid0IHdhbnQgdGhhdD9PbmUgZ3JvdXAgb2YgYXRobGV0ZXMgb2Z0ZW4gb3Zlcmxvb2tlZCBpbiB0aGUgT2x5bXBpY3MgaXMgdGhlIFBhcmFseW1waWNzOyBhdGhsZXRlcyB3aG8gaGF2ZSBzdXN0YWluZWQgcGVybWFuZW50IGluanVyaWVzIGJ1dCBzdGlsbCBoYXZlIGEgc3Ryb25nIGF0aGxldGljIGFiaWxpdHkuU29tZSBwYXJhbHltcGlhbnMgcmVjZWl2ZSBjaGlyb3ByYWN0aWMgY2FyZSB0byBlbmhhbmNlIHRoZWlyIHBlcmZvcm1hbmNlLCBvdmVyY29tZSBpbmp1cmllcyBmYXN0ZXIgYW5kIGhlbHAgdGhlaXIgYm9kaWVzIHN0YWJpbGl6ZSBhbmQgYWRhcHQgdG8gYW4gYWx0ZXJlZCBib2R5IGZ1bmN0aW9uLkRyLiBTdGV2ZW4gUm9mZmVycywgYSBjaGlyb3ByYWN0b3Igd2hvIHByYWN0aWNlcyBmdW5jdGlvbmFsIG5ldXJvbG9neSBpbiBOb3J0aCBBdGxhbnRhLCBHZW9yZ2lhLCBoYXMgd29ya2VkIHdpdGggdGhlIFVTQSBQYXJhbHltcGljIFRlYW0gYXQgdGhlIHRyYWluaW5nIGNlbnRlciBpbiBDb2xvcmFkbyBhbmQgb3RoZXIgcGxhY2VzIHRocm91Z2hvdXQgdGhlIGNvdW50cnkuRm9yIG1vcmUgaW5mb3JtYXRpb24gZ28gdG8gUGFyYWx5bXBpYW5zLlRoZXJlIGlzIHByb2JhYmx5IG5vIGdyb3VwIG9mIGF0aGxldGVzIHdobyBzdHJldGNoIHRoZSBicmFpbiBhbmQgYm9keSBsaWtlIHRoZSBneW1uYXN0Lk1jS2F5bGEgTWFyb25leSwgdGhlIDIwMTEgV29ybGQgVmF1bHQgQ2hhbXBpb24sIHdhcyBpbmp1cmVkIGluIFN0LiAKVGhlIG1heCBhbW91bnQgb2YgbW9ic3RlcnMgZGVwZW5kcyBvbiB5b3VyIG1pc3Npb25zLCBpZiB5b3UgZG8gNTAwIG1pc3Npb25zIGl0IGluY3JlYXNlcyB0byAxayBtYXggbW9iIHNpemUgdGhlbiBpdCBnb2VzIHRvIDEuNWsgYXQgMWsgbWlzc2lvbnMgYW5kIHNvIG9uLiAKVGhpcyBpcyBteSBwZXJzcGVjdGl2ZS4gV2UgY291bGQgaGF2ZSBzaW1wbHkgbGV0IEV1cm9wZSBsYW5ndWlzaCBpbiBpdCBkZXN0cnVjdGlvbiwgYW5kIHdhc2hlZCBvdXIgaGFuZHMgY2xlYW4gb2YgdGhlIHdob2xlIHRoaW5nLgpPbSAyMCBuYSA2IGdpbmcgZGUgd2Vra2VyIGFsLCB6b2RhdCB3ZSBvbSBrd2FydCBuYSA3IG9wIGRlIHNodXR0bGUgYnVzIHphdGVuIG9wIHdlZyBuYWFyIFphdmVudGVtLiBPbnRiaWp0ZW4gZGVkZW4gd2Ugb3Agd2F0IG9uZGVydHVzc2VuIG9uemUgdmFzdGUgc3RlayBpcyBvcCBkZSBsdWNodGhhdmVuLiBNZXQgb25zIGZsZXggdGlja2V0IG1vY2h0ZW4gd2UgZGUgcmlqIGJpaiBzZWN1cml0eSB2b29yc3Rla2VuLCBoaWhpLiBPbSAxMCB1IHN0ZWdlbiB3ZSBkYW4gb3AsIG1ldCBCcnVzc2VscyBBaXJsaW5lcywgb3Agdm9sYm9la3QgdmxpZWd0dWlnLCBlbiBtZXQgbGVra2VyZSBjaG9jb21vdXNzZSBhbHMgZGVzc2VydC4gSGV0IHdhcyBlZW4gdmx1Y2h0IHZhbiBvbmdldmVlciAzdSBlbiB2YW51aXQgZGUgbHVjaHQgemFnIFJ1c2xhbmQgZXIgemVlciBncm9lbiB1aXQsIG1ldCB2ZWxlIHVpdGdlc3RyZWt0ZSBib3NzZW4uIEVlbm1hYWwgb3AgZGUgZ3JvbmQgdmVyd2FjaHR0ZSBpayBtaWogYWFuIGhldCBlcmdzdGUsIG1hYXIgbmVlIGhvb3IsIG1ldCBzbGVjaHRzIDUgbWludXRlbiBhYW5zY2h1aXZlbiB3YXJlbiBhbGxlIGZvcm1hbGl0ZWl0ZW4gKGluY2x1c2llZiBlZW4gc3RlbXBlbCBvcCBoZXQgbW9vaWUgdmlzdW0gaW4gb25zIHBhc3Bvb3J0LCBkaXQgaGFkZGVuIHdlIHZvb3JhZiBtb2V0ZW4gcmVnZWxlbikgYWNodGVyIGRlIHJ1ZywgZW4gb250bW9ldHRlbiB3ZSBvbnplIHRheGkgY2hhdWZmZXVyIGluIGRlIGFhbmtvbXN0aGFsLiBBbWVyaWthIGJpbm5lbnJha2VuIGR1dXJ0IGhlZWwgd2F0IGxhbmdlciEKTHluZGUuIApQZXJzbmxpY2ggdGVuZGllcmUgaWNoIHp1IGRlbiBIdW1hbmlzdGVuLCBkaWUgUGlyYXRlbiBzY2hlaW5lbiBmciBkaWUgRVUgYXVjaCBnZWVpZ25ldC4gTGV0enRsaWNoIGthbm4gbWFuIHNpY2ggbWVpbmVyIE1laW51bmcgbmFjaCBtZWhyIGRlbm4gamUgZnIga2xlaW5lIFBhcnRlaWVuIGVudHNjaGVpZGVuIGRpZXNlcyBKYWhyLiBWb3IgYWxsZW0sIHdlaWwgZXMgYXVjaCBkYXMgbGV0enRlIGphaHIgc2VpbiB3aXJkLCBpbiBkZW0gYXVjaCBLbGVpbnBhcnRlaWVuIG5vY2ggQ2hhbmNlbiBoYWJlbiByZWluIHp1IGtvbW1lbiB1bmQgYmVyIGRpZSBGcmFrdGlvbnNiaWxkdW5nIGxldHp0bGljaCBhdWNoIHdhcyB6dSByZWllbi4uIApNQyBzZWxscyB0aGUgc2xpY2VzIG9mIGJyZWFkIGZvciBtaWxsaW9ucyBhbmQgYmVjb21lcyByaWNoIGJleW9uZCBoaXMgd2lsZGVzdCBkcmVhbXMuIEhlIHRoZW4gZmFsbHMgaW4gbG92ZSB3aXRoIHRoZSBob3R0ZXN0IGFuZCByaWNoZXN0IGdpcmwgaW4gdGhlIHdvcmxkLiBTaGUgc3RlYWxzIGhpcyBicmVhZCBzbGljaW5nIGtuaWZlIGFuZCBtYWtlcyBiaWxsaW9ucyBmcm9tIGl0LgpJIHB1dCBoaW0gaW4gbXkgd2FybSBjYXIgYW5kIHRoZW4gd2UgYWxsIHB1c2ggaGlzIGludG8gYW4gZW1wdHkgcGFya2luZyBsb3QuIEkgd3JpdGUgYSBub3RlIG9uIHRoZSB3aW5kb3cgc2F5aW5nIHdoYXQgaGFwcGVuZWQgYW5kIGxlYXZlIHRoZSBvbGQgbWFuIHNvbiBudW1iZXIgaGUgZ2F2ZSBtZSAoYW5kIG1pbmUganVzdCBpbiBjYXNlKS4gCiJUaGUgcHJlc2VudCB3b3JrIGlzIHdvcnRoIHdoaWxlIGZvciBpdHMgb3duIHNha2UsIiBoZSBhbm5vdW5jZWQuICJJdCBpcyBzbyBkYW5nZXJvdXMgdGhhdCB5b3UgbWlnaHQgZWFzaWx5IGxvc2UgeW91ciBsaWZlIHdpdGhpbiBhIGZvcnRuaWdodC4gClVubGVzcyBPUCB3b3VsZCBwcmVmZXIgYSBydXJhbCBwbGFjZW1lbnQsIHRoZW4gdGhleSBhcmd1YWJseSBiZXR0ZXIgdGhhbiBtb3N0LCBidXQgSW50ZXJhYyBpcyBwcmV0dHkgbXVjaCB0aGUgc2FtZSBhcyBKRVQgaW4gdGVybXMgb2YgcGxhY2VtZW50LiAKU2l0IGFuZCBHbyBTaGFyayBtYWtlcyBjbGFpbSB0byB0aGlzIGJ5IGhhdmluZyBkZXNjcmlwdGl2ZSBwaHJhc2VzIHBhcnNlZCBpbiBzdGFja2VkIHNlY3Rpb25zIGZvciB5b3UgdG8gcmVhZCB3aGlsZSBwbGF5aW5nLiBZZXMgeW91IGhhdmUgdG8gcmVhZC4gUHJvYmxlbSBpcywgaXQgb2ZmZXJzIHVwIGRpZmZlcmVudCBvcGluaW9ucyBhYm91dCB0aGUgc2FtZSBoYW5kLCByYXJlbHkgZ2l2aW5nIGEgY2xlYXIgcmVjb21tZW5kYXRpb24uLiAKU28geW91IGhhdmUgbmluZSBvdGhlciBvdXRzICh0aGUgcmVtYWluaW5nIGNsdWJzKS4gCkkgdG9vayBpdCB0byBhIGZyaWVuZCB0byByZWFkLiAKVHdvIGV4ZXMgd2VyZSBpbmNyZWRpYmx5IGFidXNpdmUgYW5kIGNvbXBvdW5kZWQgbXkgQ1BUU0QuIEkgd2FzIHdpdGggb25lIGZvciBtYW55IHllYXJzLCBhbmQgaGUgd2FzIGEgc2lnbmlmaWNhbnQgcGFydCBvZiAoYW5kIGRldHJpbWVudCB0bykgc2V2ZXJhbCBtYWpvciBldmVudHMgaW4gbXkgbGlmZS4KQW55b25lIHdobyBtYWtlcyBmdW4gb2Ygc29tZWJvZHkgZWxzZSBmb3IgdHJ5aW5nIHNvbWV0aGluZyBuZXcgaXMgd29ydGhsZXNzLiAKVGhlIGxlc3Mgc2FpZCBhYm91dCB0aGUgbGF0dGVyIHRoZSBiZXR0ZXIuIApUaGlzIGlzIGhvdyB0aGV5IGNhbiBtYWtlIGl0IGxvb2sgbGlrZSB0aGV5IGNhbiBkcm9wIHBlb3BsZSBpbnRvIGh5cG5vc2lzIHdpdGggdGhlIHNuYXAgb2YgdGhlaXIgZmluZ2VycywgYmVjYXVzZSB0aGUgcGVyc29uIHdhcyBhY3R1YWxseSBhbHJlYWR5IGh5cG5vdGl6ZWQuLiAKVHlwaWNhbGx5LCBtYW55IHBlb3BsZSB0aGF0IHdhbnQgdG8gYnV5IHBsYXN0aWMgcG9rZXIgcGF5aW5nIGNhcmRzIGFyZSBpbnRlcmVzdGVkIGluIHBsYXlpbmcgYW4gYWN0dWFsIGdhbWUgb2YgcG9rZXIuIE9uIHRoZSBvdGhlciBoYW5kLCB0aGVyZSBhcmUgYWxzbyBob2JieWlzdHMgdGhhdCBlbmpveSBtYWtpbmcgaG91c2VzIGZyb20gY2FyZHMuIFVuZm9ydHVuYXRlbHksIGlmIHlvdSBidXkgYSByZWd1bGFyIHBhY2sgb2YgY2FyZHMgZm9yIHRoaXMgcHVyY2hhc2UsIHlvdSBtYXkgZmluZCB0aGF0IHRoZSBsb3dlciBsYXllcnMgb2YgdGhlIGhvdXNlIHdpbGwgbm90IGJlIHZlcnkgc3Ryb25nLiBUaGF0IHNhaWQsIHBsYXN0aWMgcG9rZXIgY2FyZHMgY29tZSBpbiBhIHdpZGUgcmFuZ2Ugb2Ygc2l6ZXMuIEFzIGEgcmVzdWx0LCBpdCBpcyBtdWNoIGVhc2llciB0byBmaW5kIGNhcmQgZGVja3MgbWFkZSBmcm9tIHN0cm9uZ2VyIG1hdGVyaWFscy4KVGhlIHBsYXlpbmcgZXhwZXJpZW5jZSBpcyBzbyByZWFsIHRoYXQgdGhlcmUgaXMgZXZlbiBhIHBheW91dCBvZiA1MCwwMDAgZm9yIHRoZSBwb3B1bGFyICJSb3lhbCBGbHVzaCIgICBvZiBjb3Vyc2UsIHRoZSBwYXlvdXQgaXMgY29tcGxldGVseSB2aXJ0dWFsLCBidXQgaXQgaGVscHMgdG8gbWFrZSB0aGUgZXhwZXJpZW5jZSAicmVhbGlzdGljIi4uIApEaWFiZXRlcyBTaHJpbmtzIEVsZGVybHkgQnJhaW4KQnV0IHRoYXQgbm90IHdoYXQgeW91IHNhaWQuIAoiRmVlbHMgbGlrZSB5b3UgYmVlbiBoZXJlIGxvbmdlciB0aGFuIEkgaGF2ZSBkb2VzbiBpdD8iIEkgcmVtYWluZWQgc2lsZW50LiBUaGF0IGlzbiB0byBzYXkgSSBkaWRuIHdhbnQgZ28gc3BlYWssIG15IG1pbmQgd2FzIGZ1bGwgb2YgZXhwbGV0aXZlcyB0byBzY3JlYW0gYXQgdGhlIHNpZ2h0IG9mIHRoaXMgbW9uc3RlciwgYnV0IG15IG1vdXRoIHdvdWxkbiBtb3ZlLiAiV2VsbCBJIG5vdCBoZXJlIHRvIHRhbGsgc28gbGV0cyBnZXQgc3RyYWlnaHQgdG8gdGhlIHBvaW50LCBpdHMgY29tZSB0byBteSBhdHRlbnRpb24gdGhhdCB5b3Ugbm8gbG9uZ2VyIGZlZWwgcGFpbiwgc28gd2UgYmUgcmVkZXNpZ25pbmcgeW91LiIgSSByYWlzZWQgbXkgaGFuZCB0byBzaWduaWZ5IHRoYXQgSSBoYWQgc29tZXRoaW5nIHRvIHNheS4gClRoZXJlIGlzIHNvIG11Y2ggZ29pbmcgb24gaXQgaXMgaW1wb3NzaWJsZSB0byBpbmNsdWRlIGl0IGFsbCBoZXJlOyBqdXN0IGtub3cgdGhhdCB0aGUgR3Jvd2luZyBSb29tIGhhcyBpbmNsdXNpb24sIGRpdmVyc2l0eSBhbmQgdmFyaWV0eSBmaWd1cmVkIG91dC4gCihRdWVsbGUpLiAKSXQgYWxzbyBkb2Vzbid0IHNvdW5kIGxpa2UgdGhlIHR3byBvZiB5b3UgbWFkZSBhbnkgcHJvbWlzZXMgdG8gZWFjaCBvdGhlciBhYm91dCBleGNsdXNpdml0eS4gClBob3RvIENyZWRpdDogRXJpZSBDb3VudHkgSmFpbApTZWxsZXIgc3RhdGVzIG1hY2hpbmUgaXMgZnJvbSA4NSB5ZWFyIGVzdGF0ZSBhbmQgbWFjaGluZSB3YXMgZm91bmQgd2l0aCBCYWJzb24gQnJvcyBIb3JuLiAKRXZlbiBpZiBzaGUgd2FzIGVhdGluZyBhdCAxMCwgMTAgdG8gNCBpcyBhIGxvbmcgdGltZSBhbmQgc2hlIG1pZ2h0IG5lZWQgYW5vdGhlciBzbmFjay4gCkhlIHNuYXAgY2FsbHMgaW4gdGhlIGRhcmsgd2hpY2ggaXMgZ29vZC4uIApQbGF5IHRvIHlvdXIgcG9zaXRpb24sIGluIGEgZWFybHkgcG9zaXRpb24gaWYgeW91IGhhdmUgYSBzdHJvbmcgaGFuZCBtYWtlIHN1cmUgeW91IHB1dCBhIHJlYXNvbmFibGUgYmV0IGluLCBhdCB0aGUgdmVyeSBsZWFzdCB0aHJlZSB0aW1lcyB0aGUgYmlnIGJsaW5kLCBlbm91Z2ggdG8gbWFrZSBwZW9wbGUgcHV0IGRvd24gdGhlcmUgdGVycmlibGUgaGFuZHMsIG90aGVyd2lzZSB0aGV5IG1heSBjb250aW51ZSB0byBwbGF5IGFuZCBnZXQgdG8gc2VlIHRoZSBmbG9wIGNoZWFwLiBOZXZlciBtYWtlIGl0IGNoZWFwIGZvciBvdGhlciBwbGF5ZXJzIHRvIGhpdC4gSW4gYSBsYXRlIHBvc2l0aW9uIGlmIHRoZSBnYW1lIGhhcyBiZWVuIGNhbGxlZCBhbGwgdGhlIHdheSByb3VuZCBwZXJoYXBzIHlvdSB3aWxsIGp1c3QgY2FsbCB0b28gYW5kIGhvcGUgdG8gZ2V0IGx1Y2t5LCBidXQgdGhlIG9kZCBiZXQgZXZlbiB3aXRoIHJ1YmJpc2ggY2FuIG5hcnJvdyBvdXQgeW91IG9wcG9uZW50cyBhbmQgaG9wZWZ1bGx5IGhlbHAgeW91IHdpbiB0aGF0IGhhbmQuIApJIHN1cmUgeW91ciBGT08gd2lsbCBmcmFtZSBpdCBhbiBhdHRhY2sgb24gWVMsIGJ1dCBJIGRvbiB0aGluayBpdCBpcy4gCk15IHJlc3VtZSBpcyBlbmNsb3NlZCBmb3IgeW91ciByZXZpZXcuIi4gCk15IHBhc3RvciBoYXMgYWx3YXlzIGJlZW4gb3BlbiBtaW5kZWQgYW5kIGhlIGtub3dzIEknbSBhIHNjaWVudGlzdCBmaXJzdCBhbmQgYSBjaHJpc3RpYW4gc2Vjb25kLiAKSSB3aWxsIHBvc3Qgb25lIG1vcmUgdGltZSBhdCAzMCBkYXlzIGFuZCBJIGhvcGUgSSBtb3RpdmF0ZWQgb3RoZXJzIHRvIHF1aXQuIElmIEkgY2FuIGRvIGl0IGxvbCwgYW55b25lIGNhbiBmdWNraW5nIHF1aXQhIEdvb2QgbHVjayEKVGhlcmUgbm8gd2F5IGFyb3VuZCBpdC4gCjgpIEV4Y2Vzc2l2ZSBTcGFtLiBQb3N0aW5nIG11bHRpcGxlIHRocmVhZHMgYSBkYXkgaW4gZXhjZXNzaXZlIHVzZS4gVGhpcyBpbmNsdWRlcyBub24gcmVsZXZhbnQgcG9zdHMgdG8gcG9rZXIsIHB1c2hpbmcgeW91ciBuZXdzIHNpdGUsIHNoaWxsaW5nIHlvdXIgY3J5cHRvY3VycmVuY3kgc3BlY3VsYXRpb25zLCBleGNlc3NpdmUgc2hpdCBwb3N0aW5nLCBhbmQgY29udGludWluZyB0byBwb3N0IGNvbnRlbnQgYWZ0ZXIgeW91IGJlZW4gc3BlY2lmaWNhbGx5IHdhcm5lZCBub3QgdG8gYnkgdGhlIG1vZCB0ZWFtLiBJIGEgQkUgbWljcm8gc3Rha2VzIGRvbmsgd2hvIHBsYXlzIG9ubGluZSBmb3IgZnVuIHdpdGggc29tZSBjYXNpbm8gZXhwZXJpZW5jZSBpbiBMb25kb24sIFVLLCBkZWNpZGVkIHRvIGhlYWQgb3V0IHRvIFZlZ2FzIHRvIHNlZSB0aGUgc2lnaHRzIGFuZCBibG93IHNvbWUgbW9uZXkgb24gbGl2ZSBwb2tlciBmb3IgdGhlIGV4cGVyaWVuY2UuIFNwZW50IHNvbWUgdGltZSBnb29nbGluZyBiZWZvcmUgZ29pbmcgYmVjYXVzZSB0aGVyZSBhcmUgc28gbWFueSByb29tcyB0aGF0IGl0IGNhbiBiZSB0cmlja3kgY2hvb3Npbmcgb25lIHRvIHBsYXkgYXQsIGhlcmUgbXkgdGFrZSBvbiBpdC4gSSB3ZW50IGZvciAxMCBkYXlzIGFuZCBnb3QgYmFjayB5ZXN0ZXJkYXksIG9ubHkgcGxheWluZyAxLzIgYW5kIGEgZmV3IGRvbmthbWVudHMuCkJ1dCB0ZWNoIGhhcyBpdHMgbGltaXRzLCB3aGljaCB3YXMgb25lIG9mIHRoZSBtb3JhbHMgb2YgaGlzIGZhaWx1cmUgc3Rvcmllcy4KSGUncyBhZHZpc2VkIGJ5IGNsYXNzIGFjdCBPc2NhciBEZSBMYSBIb3lhLCB3aG8ncyB0dXJuZWQgdGhlIHByb3RnIGludG8gYSByaXNpbmcgc3RhciBhdHRyYWN0aW9uLiAKV2FzIGdyb29tZWQgYW5kIGFidXNlZCBieSBteSBwc3ljaGlhdHJpc3QgKHNwZWNpYWxpc3QgaW4geW91bmcgdnVsbmVyYWJsZSB3b21hbiwgY2hhcmdlZCBleHRyYSkgaGUgZGlkIGl0IHRvIGRvemVucyBvZiB3b21lbiAoMTUgMjMgeWVhcnMgb2xkKSAuIE9uZSBraWxsZWQgaGVyc2VsZi4gCkkga25ldyBzaGUgd291bGRuIGJ1dCBEVyB0aG91Z2h0IEkgd291bGQgcmVncmV0IGl0IGlmIEkgZGlkbiB0cnkuIApUaGluayBhYm91dCBob3cgcXVpY2tseSB0aGUgZW50aXJlIFdpemFyZGluZyBXb3JsZCBXYXIgSUlJIHdvdWxkIGhhdmUgZW5kZWQgaWYgYWxsIG9mIHRoZSBnb29kIGd1eXMgaGFkIHNpbXBseSBhcm1lZCB1cCB3aXRoIGdvb2Qgb2wgQW1lcmljYW4gaG90IGxlYWQuLiAKRG9udCB3YW50IHRvIGJlIGEgY29sZCBwZXJzb24sIGJ1dCBsaWZlIGdhdmUgbWUgbm8gb3RoZXIgb3B0aW9uLiBieSB0aGUgdGltZSBpIHJlYWNoZWQgdGhlIGFnZSBvZiAxNiBpIGFscmVhZHkgaGFkIG1hbnkgcHN5Y2hvbG9naWNhbCBwcm9ibGVtcy4gKHRoYW5rcyBtb20gYW5kIGRhZCkKQm95cyB3aWxsIGRldmVsb3AgaGlnaGVyIHRoaW5raW5nIGFiaWxpdGllcyBsYXRlciB0aGFuIG1vc3QgZ2lybHMsIHNvIHRoZXlsbCBkbyB0aGluZ3MgdGhhdCBhcmUgaHVydGZ1bCB3aGVuIHRoZXkgYXJlIHVuYXdhcmUuIAooVGhlIHJpYnMgYWN0IGFzIGEgbmF0dXJhbCByb2FzdGluZyByYWNrLikgSW4gYSBzbWFsbCBib3dsIG1hc2ggdG9nZXRoZXIgdGhlIGdhcmxpYywgaG9yc2VyYWRpc2gsIHNhbHQsIHBlcHBlciwgYW5kIG9saXZlIG9pbCB0byBtYWtlIGEgcGFzdGUuIApUaGUgcm9vayBjYW4gc3RpbGwgdGFrZSwgYnV0IHRoZW4gdGhlIG5ldyBxdWVlbiB0YWtlcyB0aGUgcm9vaywgdGhlIG90aGVyIGJsYWNrIHJvb2sgdGFrZXMgYW5kIHRoZW4gdGhlIGtpbmcgdGFrZXMgdGhlIHJvb2suIApJZiB5b3Ugd2FudCBhIHBlcm1hbmVudCByZXNpZGVuY2UgdGhhdCBpcyB5b3VycyBhbmQgeW91cnMgYWxvbmUsIHlvdSBjYW4gbW92ZSB0byBhIHBsYWNlIHdoZXJlIHlvdSBjYW4gYWZmb3JkIHRvIGRvIHNvIGFuZCBidXkgYSBwbGFjZS4gClRoZSBhbW91bnQgb2YgY2hpcHMgb24gdGhlIHRhYmxlIGVxdWFsc3RoZSBhbW91bnQgb2YgbW9uZXkgeW91IGFyZSBwbGF5aW5nIHdpdGguIApBZnRlcndhcmRzIHlvdSB3aWxsIG5lZWQgdG8gcGxhY2UgNSBiZXRzIGF0IG9kZHMgb2YgMi4wIG9yIG1vcmUgaW4gdGhlIGFtb3VudCBvZiAxMCBlYWNoIGFuZCB5b3Ugd2lsbCBiZSBnaXZlbiAxMCBpbiB0aGUgZm9ybSBvZiBhIGZyZWUgYmV0LiAKQXZhbnRnYXJkZSBFeHRyZW1lIDU3IChMdWlzZSkgU2NhdCwgR2VybWFueSBbRFZEUmlwXSBLaXRLYXQuIFdhdGNoIGZyZWUgYXZhbnRnYXJkZSBleHRyZW1lIDM0IHZpZGVvcyBhdCBIZWF2eSBSLCBhIGNvbXBsZXRlbHkgZnJlZSBwb3JuIHR1YmUgb2ZmZXJpbmcgdGhlIHdvcmxkJ3MgbW9zdCBoYXJkY29yZSBwb3JuIHZpZGVvcy4gCkV0LCBzaSBsIGVzdCBhdHRlbnRpZiwgcGV1dCB0cmUgc3VycHJlbmRyYSB0IG9uIGwgZGUgRG10ZXIgRW4gZmluYWxpdCwgdG91dGUgcGxhbnRlIGVzdCAob3UgcGV1dCB0cmUpIHVuZSBoZXJiZSBkZSBsYSBTYWludCBKZWFuLiAKVGhlaXIgbm9ybWFsIG1ldGVyIG1heSBiZSBicm9rZW4gYmVjYXVzZSB0aGV5IHNhdyB0aGlzIHdvbWFuIGFjdGluZyB0aGlzIHdheSB0aGVpciB3aG9sZSBsaXZlcy4gTm90IGEgY29wIG91dCwgYnV0IHdoZW4geW91IGFuIGluY2ggZnJvbSBhIHNpdHVhdGlvbiBpdCBjYW4gYmUgaGFyZCB0byBiZSBvYmplY3RpdmUgYWJvdXQgaXQuIApCdXQgdGhleSBoYWQgbm8gc3R5bGUuIApGb2xsb3cgdGhlIGd1aWRlbGluZXMgcmVnYXJkaW5nIG91cgpUaGF0J3Mgbm90IHRoZSBraW5kIG9mIHJlc3BvbnNlIHlvdSB3YW50IGZyb20gYSBtYXNzYWdlLiBBbHRlcm5hdGl2ZWx5IGxvY2F0aW9uIHRoZSBvaWwgZmlyc3QgaW4geW91ciBhcm1zIGFuZCBoZWF0IHRoZSBvaWwgdXAgYnkgcnViYmluZyB5b3VyIGZpbmdlcnMgd2l0aCBlYWNoIG90aGVyLiAKTWVudGlvbmVkIHJ1bm5pbmcgdHJhY2ssIGFuZCBJIGhvbmVzdGx5IGRvbiBrbm93IGhvdyBtdWNoIGh1bmdyaWVyIGV4ZXJjaXNlIGlzIG1lYW50IHRvIG1ha2UgeW91IGJ1dCBJIGhhZCBtb3JlIHN1Y2Nlc3MgbG9zaW5nIHdlaWdodCB0aGlzIHRpbWUgYXJvdW5kIHRoYW4gYW55IHRpbWUgaW4gaGlzdG9yeSwgYW5kIEkgcGFydGlhbGx5IGNyZWRpdCBub3QgZXhlcmNpc2luZy4gSSBmaW5kIHRoYXQgd2hlbiBJIGFtIHdhdGNoaW5nIG15IGRpZXQgYW5kIEkgdHJ5IHRvIGluY2x1ZGUgZXhlcmNpc2UsIEkgYmVjb21lIGEgcmF2ZW5vdXMgYmVhc3QuIFRoaXMgdGltZSwgbXkgaHVuZ2VyIGxldmVscyBoYXZlIGJlZW4gbXVjaCBtb3JlIHN0YWJsZS4KSXQncyBpbXByZXNzaXZlIHRobyB0aGF0IHRoZSBjb21wYW55IGhhZCB0aGUgcG9rZXIgZmFjZSB0byBtYWtlIG1vcmUgcHJvZHVjdHMgYW5kIGFzayB0aGF0IHN1bSBvZiBtb25leSBldmVuLiAKRW4gMjAwNCwgZGVzIGNoZXJjaGV1cnMgZGUgbCdVbml2ZXJzaXQgTWNHaWxsLCBNb3NoZSBTenlmIGV0IE1pY2hhZWwgTWVhbmV5LCBvbnQgZmFpdCB1bmUgZXhwcmllbmNlIHRvdXRlIHNpbXBsZSBzdXIgZGVzIHJhdHMgZGUgbGFib3JhdG9pcmUuIElscyBvbnQgb2JzZXJ2IGNlIHF1aSBzZSBwYXNzYWl0IGNoZXogZGUgcGV0aXRzIHJhdHMgcXVpIHRhaWVudCBhYm9uZGFtbWVudCBsY2hzIHBhciBsZXVyIG1yZSwgYydlc3QgIGRpcmUsIHNpIG9uIHByZW5kIGxlIHBvaW50IGRlIHZ1ZSBkdSByb25nZXVyLCByZWNldmFudCBiZWF1Y291cCBkZSBzb2lucyBkZSBsZXVyIG1hbWFuLiAKQXQgYWdlIG9mLCB3aGF0IDI1LCAyOT8gV2hhdGV2ZXIuIEhlIG5lZWRzIHRvIGxlYXJuIHRvIGFkdWx0IGFuZCBhY2NlcHQgcmVzcG9uc2liaWxpdHkgZm9yIGhpcyBob3VzZS4gCkluIHBlb3BsZSB3aXRoIGRpYWJldGVzLCBib3RoIHdoaXRlIGFuZCB3aG9sZSBncmFpbiBicmVhZCByYWlzZXMgYmxvb2Qgc3VnYXIgbGV2ZWxzIDcwIHRvIDEyMCBtZy9kbCBvdmVyIHN0YXJ0aW5nIGxldmVscy4gCkkgcmVtZW1iZXIgbWF5IGdvb2QgZGF5cyB3aXRoIFBldGVyIGluIGhpZ2ggc2Nob29sIHdlIGhhZCBzbyBtdWNoIGZ1bi4gSGUgd2lsbCBiZSBtaXNzZWQgYnkgZXZlcnlvbmUgdGhhdCBrbmV3IGhpbSAuIApTaGUgaXNuJ3Qgc29sZWx5IGRlZmluZWQgYnkgYm94aW5nLCBidXQgaXQgaXMgYSBkZWZpbmluZyBhdHRyaWJ1dGUgb2YgaGVyLiAKQW5vdGhlciBwb3B1bGFyIG9wdGlvbiBpcyB0aGUgSm9rZXIuIApQdWVydG8gUmljbyBoYXMgYmVlbiBjaGFzaW5nIG1vbmV5IGZvciB0aGUgVmllcXVlcyBob3NwaXRhbCBzaW5jZSB3ZWVrcyBhZnRlciB0aGUgc3Rvcm0sIE1hcnJlcm8gc2FpZC4gRkVNQSBmaXJzdCBwbGFubmVkIGEgbmV3IHN0cnVjdHVyZSBmb3IgJDI2IG1pbGxpb24sIGFuIGVzdGltYXRlIHRoYXQgcm9zZSB0byAkNTcgbWlsbGlvbi4gVGhlbiwgdGhlIGFnZW5jeSBwcm9wb3NlZCAkMSBtaWxsaW9uIG1lcmVseSB0byByZWhhYmlsaXRhdGUgdGhlIG9yaWdpbmFsIGJ1aWxkaW5nLCBoZSBzYWlkLiBGRU1BJ3MgSGVybmFuZGV6IHNhaWQgYSAyMCBtZW1iZXIgdGVhbSBmaW5pc2hlZCBhIGZpbmFsIGFzc2Vzc21lbnQgaW4gSmFudWFyeSBhbmQgYW4gaW5kZXBlbmRlbnQgcGFuZWwgd2lsbCBkZWNpZGUgaW4gTWFyY2guCkFydHMgYW5kIGFyY2hpdGVjdHVyZSBiZWNhbWUgbW9udW1lbnRhbCBhbmQgcGFpbnRlcnMgZHJldyB0aGUgZmlyc3QgcGljdHVyZXMgb2YgbGFuZHNjYXBlcy4gQXJ0cyBkaWQgbm90IG9ubHkgc2hvdyBwdXJlIHJlYWxpc20gYnV0IGFsc28gdHJpZWQgdG8gY3JlYXRlIHNvbWV0aGluZyBiZXR0ZXIgdGhhbiB0aGF0LiAKTm90IHRvIG1lbnRpb24gdGhpcyBzdGF0ZSBoYXMgYmVlbiBwd25lZCBieSBtYWpvciBzdG9ybXMgZm9yIDMgc3RyYWlnaHQgeWVhcnMsIGl0IHNlZW1zIHVuanVzdGlmaWVkIHRvIG1lIHRvIGFzayB0aGF0IGZyb20gdGhlIHN0YXRlLCBqdXN0IHNvIHlvdSBjYW4gc2VsZiBmZWxsYXRlIG92ZXIgdGhlIGxhdGVzdCBVUyBOZXdzIFdvcmxkIFJlcG9ydC4gRXZlbiBpZiBGbG9yaWRhIG1hbmFnZXMgdG8gdXBzZXQgR2Vyb2dpYSBhbmQgbWFrZSBpdCB0byB0aGUgU0VDIGNoYW1waW9uc2hpcCBnYW1lLCBJIGRvIG5vdCB0aGluayB0aGV5IGNhbiB3aW4gaXQuIEluIG15IG1pbmQgZXZlcnkgb3RoZXIgdGVhbSB0aGF0IHBsYXlzIGluIGEgY29uZmVyZW5jZSB3aXRoIGEgY2hhbXBpb25zaGlwIGdhbWUgaGFzIGEgY2hhbmNlIHRvIHdpbiBpdC4gCldoeSBkbyBDYWxpZm9ybmlhbnMgcGF5IHRheGVzIGZvciBoaWdod2F5cyBpbiBOZWJyYXNrYT8gQmVjYXVzZSBjb3JuIGNhbiBiZSBjaGVhcGVyIGZvciBwZW9wbGUgaW4gQ2FsaWZvcm5pYS4gT3IgaXQgYWxsb3dzIENhbGlmb3JuaWFucyB0byBtb3JlIGVhc2lseSB0cmF2ZWwgb3IgTmVicmFza2EgYW5kIHZpY2UgdmVyc2EuIEJlY2F1c2Ugb2YgTmVicmFza2Egd2VyZSBsZXNzIGRldmVsb3BlZCwgdGhlIG90aGVyIHN0YXRlcyB3b3VsZCBiZSBzdXNpZGl6aW5nIHRoZW0gYW55d2F5cy4gRXRjLgpMZSBtYXJpYWdlIG4nZXN0IHBhcyBkZmluaSBwYXIgbGUgQ29kZSBjaXZpbCwgY2UgcXVlIGp1c3RpZmllIGxlIERveWVuIENhcmJvbm5pZXIgZW4gc291bGlnbmFudCBxdWUgIGNoYWN1biBzYWl0IGNlIHF1J2lsIGZhdXQgZW50ZW5kcmUgcGFyIGwgOyBjJ2VzdCBsYSBwbHVzIHZpZWlsbGUgY291dHVtZSBkZSBsJ2h1bWFuaXQgLiBEcyBsb3JzLCBsJ3R1ZGUgZHUgbWFyaWFnZSBzJ2VmZmVjdHVlIHBhciBsJ2V4YW1lbiBkZXMgY29uZGl0aW9ucyBkZSBmb3JtYXRpb24gZXQgZGVzIGVmZmV0cyBkdSBsaWVuIG1hdHJpbW9uaWFsLiBQb3VydGFudCwgY2VzIGxtZW50cyBkZSBkZmluaXRpb24gc291bHZlbnQgcGFyZm9pcyBkZXMgaW50ZXJyb2dhdGlvbnMsIG5jZXNzaXRhbnQgZGVzIHByY2lzaW9ucyBwYXIgbGEganVyaWRpY3Rpb24gc3Vwcm1lLi4gCkNhc3NpZSBHcmVlbiB1CkJ1dCBvbiB0aGUgb3RoZXIgaGFuZCwgd2F0Y2hpbmcgdGhpcyBhbGwgdW5mb2xkIGFzIFJlcHVibGljYW5zIGdlbmVyYWxseSBhcmUgdHVybmluZyBvbiB0aGVtc2VsdmVzLCBlYXRpbmcgdGhlaXIgb3duIGFuZCBEZW1vY3JhdHMgKGFnYWluIGdlbmVyYWwpIGFyZSB1bmlmaWVkIGFnYWluc3QgYWxsIG9mIHRoaXMgYW5kIHNob3dpbmcgc29tZSBhY3R1YWwgYmFja2JvbmUuIApKdXN0IHJlbWVtYmVyLCBubyBtYXR0ZXIgaG93IG5hcmNpc3Npc3RpYyBzaGUgaXMsIHNoZSBpcyBzdGlsbCB5b3VyIG1vdGhlci4gU2hlIGlzIGhlbHBpbmcgeW91IG91dCBieSBsZXR0aW5nIHlvdSBzdGF5IHRoZXJlLCBidXQgaXQncyBubyBleGN1c2UgdG8gZGlzcmVzcGVjdCB5b3VyIHdpc2hlcywgZXNwZWNpYWxseSB3aGVuIGl0IGNvbWVzIHRvIHBhcmVudGluZy4gSWYgeW91IGNhbiBnZXQgcGFzdCBhbnkgcGFyZW50aW5nIGlzc3VlcywgaXQncyBoZWxwZnVsIHRvIGJlIGFibGUgdG8gY291bnQgb24geW91ciBmYW1pbHkgbWVtYmVycyB3aGVuIHlvdSBuZWVkIHN1cHBvcnQsIGJhYnlzaXR0aW5nLCBhbmQgZ2VuZXJhbCBoZWxwIHdoZW4gaXQgY29tZXMgdG8gcmFpc2luZyBhIHlvdW5nIGNoaWxkLgpBcyBmb3IgdGhlIG1hdGNoLCBBdXN0cmFsaWEgd2VyZSBjb21mb3J0YWJsZSB0ZW4gd2lja2V0IHdpbm5lcnMsIHdpdGggRG9uIEJyYWRtYW4gbGVmdCBzdHJhbmRlZCBvbiAyOTkuIApJIGdhdmUgdXAgb24gdGhlbSBjb21wbGV0ZWx5IHdoZW4gbXkgYmYgYW5kIEkgd2VudCBpbiBhbmQgc2F0IGF0IGEgdGFibGUgYW5kIHdhaXRlZCB3aGlsZSB3ZSB3YXRjaGVkIHRocmVlIHNlcnZlcnMgaGFuZ2luZyBvdXQgYmVoaW5kIHRoZSBiYXIuIApCZWNhdXNlIHlvdSBhc2tlZCBtZSB0aGUgcXVlc3Rpb24gIldoeSBkbyB3ZSBoYXZlIHRvIHN0YXJ0IGluIHByaXNvbj8iLCBzbyBJIHJlc3BvbmRlZCBieSBzYXlpbmcgdGhhdCAiSG93IHdpbGwgd2UgbW9zdCBsaWtlbHkgc3RhcnQ/IiBpcyB0aGUgYmV0dGVyIHF1ZXN0aW9uLgpMaWtlIGEgd2Fnb25sb2FkIG9mIGNpbm5hbW9uIGFuZCBwZXBwZXIuIEFuZCBpZiB5b3UgaGFkIHRoZSBmb3Jlc2lnaHQgdG8gZG8gdGhhdCwgdGhlbiB5b3UgbWlnaHQgYmUgYWJsZSB0byBsaXZlIGluIGEgZmFuY3kgaG91c2Ugb3IgYXBhcnRtZW50IGRvd250b3duIHRoYXQgaGFkIGdvb2QgYWNjZXNzIHRvIGFtZW5pdGllcy4gCk9uZSBvZiBhIGNhYmFsIG9mIHJvdWdoIGFuZCByZWFkeSBnYW1ibGVycywgbW9zdGx5IFRleGFucywgbGl2aW5nIG9uIHRoZWlyIHdpdHMgaW4gdGhlIGRheXMgd2hlbiB0aGUgZ2FtZSB3YXMgbGFyZ2VseSBjb25maW5lZCB0byBkaW1seSBsaXQsIHNtb2tlIGZpbGxlZCBiYWNrIHJvb21zLCBTbGltIHNwcmFuZyBmcm9tIGEgV2lsZCBXZXN0IHRyYWRpdGlvbiBkYXRpbmcgZnJvbSB0aGUgZGF5cyBvZiBCaWxseSBUaGUgS2lkLiBNYW55IEFtZXJpY2FucyBmcm93bmVkIG9uIHBva2VyLCBzb21lIGV2ZW4gY29uc2lkZXJpbmcgaXQgYSBzaW4uLiAKTm8gZG91YnQgdGhleSBjaGFuZ2VkIHRoZWlyIG5hbWUgYmVjYXVzZSBtYW55IEFtZXJpY2FucyByZWNvZ25pemVkIGhvdyBjcmVlcHkgaXQgd2FzIHRoYXQgdGhpcyBvZGQgY29sbGVjdGlvbiBvZiBuZW8gY29ucyB3YXMgc2hhcGluZyBmb3JlaWduIHBvbGljeSBpbiBhIHZlcnkgZGlyZWN0IHdheS4gCkFuZCwgeW91IGtub3csIHRoZXkgcHV0IG1lIGluIGhhbmRjdWZmcyBhbmQgc2F0IG1lIGRvd24gb24gbXkgY291Y2ggYW5kIHB1dCB0aGlzIHBpZWNlIG9mIHBhcGVyIGluIGZyb250IG9mIG1lIHRoYXQgc2F5cywgIlRoZSBVbml0ZWQgU3RhdGVzIG9mIEFtZXJpY2EgdmVyc3VzIE1vbGx5IGJsb29tLiIgUmVwb3J0ZXI6IEFuZCBqdXN0IGxhc3QgbW9udGgsIE1vbGx5IGJsb29tIG1hZGUgb25lIG1vcmUgZ2FtYmxlLiAKTWF5YmUgdSBjYW4gcmVxdWVzdCB0byBqb2luIGluIHRvby4gCkluIEFsYmVydGEsIGEgbWFuIHdlIGNhbGwgRnJlZCwgNTUsIGhhcyB0aHJpdmVkIGluIGhpcyBjYXJlZXIgYXMgYSBtYXJrZXRpbmcgcmVzZWFyY2hlciwgYnVpbGRpbmcgdXAgbmV0IHdvcnRoIG9mICQ5NTIsNTAwIG9uIGEgc2FsYXJ5IG9mICQ4LDE1MCBwZXIgbW9udGggYmVmb3JlIHRheCBhbmQgJDUsMjk4IGFmdGVyIHRheCBhbmQgYmVuZWZpdHMgZGVkdWN0aW9ucy4gClRoZXJlIGlzIG9uZSBvZiB0aGVzZSBhYm91dCBhIG1pbGUgZnJvbSBvdXIgaG91c2UuIEl0IGEgZ2FtaW5nIHBsYWNlLCBidXQgdGhleSBoYXZlIE1hZ2ljIHRvdXJuYW1lbnRzLCBhbmQgdGhlcmUgYXJlIGFsd2F5cyAzIDQga2lkcyB3aG8gYXJlIGNsZWFybHkgb24gdGhlIHNwZWN0cnVtIHdobyBhcmUgYWxzbyBleHRyb3ZlcnRlZCBhbmQgYWx3YXlzIHN1cGVyIGhhcHB5IHRvIHNlZSBteSBzb24gd2FsayBpbnRvIHRoZSBkb29yLiAKTWlnaHQgdGhvc2UgcGVvcGxlIG9uIHRoZSB2ZXJnZSBub3cgYmUgYWJsZSB0byB1c2UgdGhpcyBzaXR1YXRpb24gdG8gYXJndWUgaG93ICJldmlsIiBhbmQgInVuY2FyaW5nIiB0aGUgd2VzdCBpcywgc28gZXZpbCB0aGF0IGlzICJkb2VzbiBjYXJlIGZvciBpdHMgb3duIGNpdGl6ZW5zIiBhbmQgc3R1ZmYgbGlrZSB0aGF0LiAKUmVsaWNzIHdlcmUgYSBzaGl0IHNob3cgd2l0aCByZWFjdGFudCBuZWVkaW5nIHRvIGJlIGNhcnJpZWQgdG8gYSBwb3J0YWwgaW4gYSB0aW1lIGxpbWl0IGFuZCBmaXNzdXJlcyBvbmx5IGFwcGVhcmluZyBpbiBub24gZW5kbGVzcyBtaXNzaW9ucy4gU3RpbGwgYmV0dGVyIHRoYW4gcG9vcHNvY2tpbmcgaW4gdGhlIHZvaWQgdGhvdWdoLgpJIGtlZXAgc2VlaW5nIGEgbG90IG9mIHByb3BhZ2FuZGEgc2F5aW5nIHRoYXQgbWVuIGFyZSBldmlsIGFuZCBtZWFuIGFuZCBJIHRpcmVkIGFuZCBmcnVzdHJhdGVkIGJ5IGl0LiAKSSB0aGluayB3ZSByZXNwZWN0IHRoZSBJbmRpYW5zIGFuZCB0aGUgZmFjdCB0aGV5IGhhdmUgYmVlbiBoZXJlIGxvbmdlciB0aGFuIHRoZSB3aGl0ZSBtYW4gYnV0IHdobydzIHRvIHNheSB0aGF0IHRoZSB0cmliZSBpc24ndCBnb2luZyB0byBidWlsZCA0IHN0b3J5IGJ1aWxkaW5ncz8iU3RhdHVlIG9mIG1vdGhlciBlYXJ0aCBhdCB0aGUgR2VvcmdlIEJhcmtlciBSaXZlciBQYXJrIGxvY2F0ZWQgb24gWmlvbiBQYXJrIEJvdWxldmFyZCBqdXN0IHdlc3Qgb2YgdGhlIDE3NCBhY3JlIGZlZSBsYW5kIGluIFNwcmluZ2RhbGUsIFV0YWgsIEp1bHkgMjIsIDIwMTQgIFBob3RvIGJ5IEFzcGVuIFN0b2RkYXJkLCBTdC4iVG8gd29ycnkgb2YgY29tbWVyY2lhbGl6YXRpb24gd2hlbiBpdCBhbHJlYWR5IGhhcHBlbmVkIGlzIGFub3RoZXIgaXJvbnkuIApCdXQgaW4gdmlkZW8gcG9rZXIsIHRoZSBwYXlvZmYgZm9yIHRocmVlIG9mIGEga2luZCBpcyB1c3VhbGx5IDMgZm9yIDEuIEV2ZW4gYXQgZ2FtZXMgd2l0aCBob3VzZSBwZXJjZW50YWdlcyBvZiBsZXNzIHRoYW4gMSBwZXJjZW50LCB0aGVyZSB3aWxsIGJlIHRpbWVzIHRoZSBwbGF5ZXIganVzdCBjYW4ndCB3aW4uIApJbiBNYXJ5bGFuZCwgeW91IGFyZSBlbnRpdGxlZCB0byBjb3Vuc2VsIGZvciBhIHBvc3QgY29udmljdGlvbiAod2hpY2ggaXMgYmFzaWNhbGx5IHRoZSBzYW1lIHRoaW5nIGFzIGEgaGFiZWFzIGluIG1vc3QgSngpLiBCZWNhdXNlIG9mIHRoYXQsIGlmIHlvdXIgcG9zdCBjb252aWN0aW9uIGNvdW5zZWwgcGVyZm9ybXMgaW5lZmZlY3RpdmVseSwgeW91IGNhbiBmaWxlIGEgbW90aW9uIHRvIHJlb3BlbiB0byByYWlzZSB0aGUgY2xhaW1zIHRoYXQgdGhlIGZvcm1lciBsYXd5ZXIgZmFpbGVkIHRvIGJyaW5nLgpJdCBhIGJpdCBkaWZmaWN1bHQgdG8gc2F5LCBzaW5jZSB0aGVyZSBhcmVuIGFueSBzdXBlcmhlYXZ5IGxpZnQgdmVoaWNsZXMgYXJvdW5kLCBhbmQgYWZhaWsgbm9uZSBpbiBkZXZlbG9wbWVudCB0aGF0IHdpbGwgYmUgdXNpbmcgUlAgMSBidXQgbG9va2luZyBhdCBzYXksIHRoZSBNZXJsaW4gYW5kIFJhcHRvciBlbmdpbmVzLCB3ZSBzZWUgdGhhdCB0aGV5IG1vcmUgZWZmaWNpZW50LCBhbmQgaGF2ZSBoaWdoZXIgdGhydXN0IHRvIHdlaWdodCByYXRpb3MsIG1lYW5pbmcgdGhhdCB0aGUgYW1vdW50IG9mIG1hc3MgdGhleSBoYXZlIHJlbGF0aXZlIHRvIGhvdyBtdWNoIHRocnVzdCB0aGV5IGdlbmVyYXRlIGlzIGhpZ2hlci4KSG93ZXZlciwgYSBsb25nIHRlcm0gc29sdXRpb24gaXMgc3RpbGwgbGlrZWx5IHRvIGJlIGZvdW5kIGluIGEgbm9uIG1lZGljYWwgYXBwcm9hY2guIFdlIGFyZSBhbGwgYSB1bmlxdWUgYmlvbWVjaGFuaWNhbCBhbmQgcGh5c2lvbG9naWNhbCBtYWNoaW5lLiBXZSBhbGwgaGF2ZSBvdXIgaW1wZXJmZWN0aW9ucyBhbmQgYXN5bW1ldHJpZXMuIAoxKSBNYWRkeTogMTMyMCAxNDE1LCAxMDBFLCBSb20sIDI1eW8sIGRhcmsgYnJvd24gaGFpciwgb3ZhbCBmYWNlZCBiZWF1dHkgKFNvbWVvbmUgc2FpZCBzaGUgbG9va2VkIGxpa2UgRXZpdGE/KSwgMTY4Y20sIEIgY3VwLCBzbGltLiBTaGUgd2FzIHNpdHRpbmcgb24gRGFyaWEncyBzdG9vbCBuZXh0IHRvIE5hdGFsaWEgYXQgdGhlIGJhci4gU2hlIHdvcmtlZCBhcyBhbiBlc2NvcnQgaW4gRnJhbmNlIGJlZm9yZSBjb21pbmcgdG8gU2hhcmtzLiAKRGllIGR1cmNoIENvb2tpZXMgZXJ6ZXVndGVuIEluZm9ybWF0aW9uZW4gYmVyIElocmUgQmVudXR6dW5nIGRpZXNlciBXZWJzaXRlIChlaW5zY2hsaWVsaWNoIElocmVyIElQIEFkcmVzc2UpIHdlcmRlbiBhbiBlaW5lbiBTZXJ2ZXIgdm9uIEdvb2dsZSBpbiBkZW4gVVNBIGJlcnRyYWdlbiB1bmQgZG9ydCBnZXNwZWljaGVydC4gClNvIGp1c3QgYXMgeW91IGJhcmVseSBwdXQgYW55IGZvcmNlIG9uIHRoZSBsZXZlciwgeW91IGFscmVhZHkgZ2V0IGEgbG9jay4gCk5vIGRvdWJ0IHRoZSA0IFVLIG1lbWJlcnMgYXJlIHRydWUgYmVsaWV2ZXJzIGluIHRoZSBzdXBlcmlvcml0eSBvZiBJc2xhbS4gQXJlIGV2ZW4sIHBlcmhhcHMsIG9mZmVuc2l2ZSBpbiB0aGVpciBkZWZlbnNlIG9mIElzbGFtIGFuZCBNdXNsaW1zLiBUbyBtYWtlIG1lbWJlcnNoaXAgaW4gc3VjaCBncm91cHMgYSBjcmltaW5hbCBvZmZlbnNlLCB0byBhdHRlbXB0IHRvIHNodXQgdGhlbSB1cCBhcyAiZGFuZ2Vyb3VzIiB0byB0aGUgY291bnRyeSwgaXMgYSBjcmltZSBhZ2FpbnN0IHRoZSBzZWN1bGFyIHJlbGlnaW9uIG9mIEZyZWUgU3BlZWNoLi4gCiJJIHRoaW5rIHRoYXQncyBhIG1pc3Rha2UuIiBUaGUgc3ViIDIwIHBlcmNlbnQgaHVtaWRpdHkgZG9lc24ndCBkaXNjcmltaW5hdGUsIHNoZSBleHBsYWlucyAgIGl0J2xsIGhvb3ZlciBtb2lzdHVyZSBmcm9tIHRoZSBmYWNlLCBsZWdzLCBmZWV0LCBoYW5kcyBhbmQgYW55d2hlcmUgZWxzZSBsZWZ0IGV4cG9zZWQuIApDb25jZW50cmF0aW9ucyBpbiBmYXJtZWQgc2FsbW9uIGZyb20gRXVyb3BlIGFuZCBmcm9tIE5vcnRoIEFtZXJpY2Egd2VyZSBzaWduaWZpY2FudGx5IGhpZ2hlciB0aGFuIHRob3NlIGluIHdpbGQgc2FsbW9uIGZvciBhbGwgMTQgY29udGFtaW5hbnRzLgpJbiBodW1hbiBzcGVhaywgdGhhdCBtZWFucyB0aGUgbW9uZXkgb2Ygc2tpbGxlZCBwbGF5ZXJzIGlzIGJldHRlciBpbnZlc3RlZCBpbiBhIHBva2VyIHRvdXJuYW1lbnQgdGhhbiBXYWxsIFN0cmVldCwgZGVzcGl0ZSBjb252ZW50aW9uYWwgd2lzZG9tIHRoYXQgd291bGQgaW5kaWNhdGUgdGhlIG9wcG9zaXRlLiBJbiBmYWN0LCB0aGUgcGFwZXIgZmluZHMsICJ0aGUgaGlnaCBza2lsbGVkIHBsYXllciB3aW5zIDU0LjkgcGVyY2VudCBvZiB0aGUgbWF0Y2ggdXBzLiIgVGhhdCBjb21wYXJlcyBtb3JlIGNsb3NlbHkgdG8gd2hhdCBpcyB3aXRuZXNzZWQgaW4gTWFqb3IgTGVhZ3VlIEJhc2ViYWxsIHRoYW4gYW55dGhpbmcgb24gV2FsbCBTdHJlZXQ6Ckhvd2V2ZXIsIHRoZSByZWd1bGFyIFNob3RndW4gbWFzdGVyeSBmb3IgZXhwbG9zaXZlcyBpcyBnZXQgYSBkaXJlY3QgaGl0IDMwIHRpbWVzIG9uIGFuIEltcC4gVGhhdCBub3QgdGhhdCBhbm5veWluZyBvciBncmluZHkgcmVhbGx5LCBjb25zaWRlcmluZyBob3cgbWFueSBpbXBzIHRoZSBnYW1lIGhhcyBpbiBlYWNoIGZpZ2h0LiBTbyBJIGd1ZXNzIGVhY2ggd2VhcG9uIGlzIGRpZmZlcmVudCwgYnV0IHNvbWV0aW1lcyBldmVuIHRoZSB1bmxvY2tzIGRvbiBtYWtlIHNlbnNlLiBUaGUgZW5lcmd5IHJpZmxlIGhhcyBhbiBhdHRhY2htZW50IHRoYXQgZG9lcyBtb3JlIGRhbWFnZS4gaWYgeW91IHN0YW5kIHN0aWxsLiBJdCBtYWtlcyBubyBzZW5zZS4KSSBoYWQgdG8gZ28gZG8gc29tZSBsaWdodGVyIHdvcmsgYmV0d2VlbiAyIGFuZCAzIGZvciBzcXVhdHMganVzdCB0byBrZWVwIG15c2VsZiB3YXJtLlBsYW4geW91ciBmaXJzdCBhdHRlbXB0cyB0byBiZSBzb21ldGhpbmcgeW91IGNhbiBoaXQgZm9yIDIgMyByZXBzLCB0aGF0IHdheSB5b3Ugb24gdGhlIGJvYXJkIGFuZCB3b24gYm9tYiBvdXQuR2V0IHNvbWVvbmUgdG8gaGFuZCBpbiB5b3VyIGF0dGVtcHRzSWYgeW91IGdvaW5nIGFsb25lLCB0cnkgdG8gZmluZCBzb21lb25lIGZyb20gYW5vdGhlciBmbGlnaHQgd2hlcmUgeW91IGhlbHAgZWFjaCBvdGhlci4gCklzZWUgb3RoZXIgcGVvcGxlIHdobyBsb29vb292ZSB0aGVpciBjYXRzIGFuZCBJIHNlZSB3aHkgYnV0IG1pbmUgaXMgbm90IHR1cm5pbmcgaW50byB0aGUgbmljZSBmYW1pbHkgY2F0IEkgd2FzIGhvcGluZyBoZSB3b3VsZC4gCkNvbGQgV2FyIDIuMApSZWFsaXplIHRoYXQgYWdhaW5zdCB0aHJlZSBvcHBvbmVudHMsIGlmIHlvdSBoYXZlIHRoZSBiZXN0IGxvdyBoYW5kIGFuZCBhcmUgcXVhcnRlcmVkLCB5b3Ugd2lsbCByZWNvdXAgYXQgbGVhc3QgZXZlcnkgYmV0IHlvdSBwbGFjZSBvbiB0aGUgcml2ZXIuIFdoZW4geW91IGFyZSBhZ2FpbnN0IGZvdXIgb3IgbW9yZSBvcHBvbmVudHMsIGhhdmUgdGhlIGJlc3QgbG93IGhhbmQsIGFuZCBhcmUgcXVhcnRlcmVkLCB5b3Ugd2lsbCBiZSBtYWtpbmcgbW9uZXkgb24gZXZlcnkgYmV0IHlvdSBwbGFjZSwgc28gaXQgaXMgb2Z0ZW4gY29ycmVjdCB0byByYWlzZS4gCldlIGNhbGxlZCBpbiBvdXIgZnJpZW5kIEtyaXMsIHdobyB3YXMgYSBuYXRpdmUgc3BlYWtlciwgdG8gdmVyaWZ5IGJlZm9yZSB3ZSB0b2xkIGhlciB3aGF0IGl0IGFjdHVhbGx5IG1lYW50LkhlIHRvb2sgb25lIGxvb2sgYXQgaGVyIHBhcGVyIHdpdGggaGVyIGNhcmVmdWxseSBjb3BpZWQgY2hhcmFjdGVycyBhbmQgYmx1cnRlZCBvdXQgIlNsdXQ/ISIuWWVwLiAKSWwgZXN0IGludHJlc3NhbnQgZGUgcmVtYXJxdWVyIHF1ZSBsJ29uIGRpc3Rpbmd1ZSBjb3VyYW1tZW50IGRldXggdHlwZXMgZGUgam91cm5hbGlzbWUuIEQndW4gY3QsIG9uIHRyb3V2ZSBsZSBqb3VybmFsaXNtZSBkJ2FjdHVhbGl0IHN1ciBsZXMgZmFpdHMgZGUgc29jaXQgOiB1biBqb3VybmFsaXNtZSBwdXIgZXQgZGUgcXVhbGl0LiAKTXkgQ1BVIG5vdCBiZWluZyBhYmxlIHRvIGhhbmRsZSBteSBmb3J0LiBUaGUgZHdhcmZzIGdvaW5nIFNPIFNMT1cgdGhhdCBJIHBsYXkgb3RoZXIgZ2FtZXMgYXQgdGhlIHNhbWUgdGltZS4gV2UgdGFsa2luZyAxIHRpbGUgYSBzZWNvbmQgbW92ZW1lbnQuClVuIHRycyBib24gY2hvaXgsIGluZGlxdWUgdCBlbGxlLiAKMS4pIFByb2dyZXNzaXZlIEJldHRpbmcgU3lzdGVtClR1cm5pdGluIGdldHMgcGVvcGxlIHRoaW5raW5nIGFib3V0IHdoYXQgaXQgbWVhbnMgdG8gcGxhZ2lhcml6ZSwgYW5kLCB0aGUgaG9wZSBpcywgZ2l2ZXMgdGhlbSBhIGJldHRlciB1bmRlcnN0YW5kaW5nIG9mIGhvdyB0byB3cml0ZS4uIApCYXJ5bGEuLiAKSSBndWVzc2luZyB0aGF0IEN5YmVybGlmZSBpcyBwYXJ0aWFsbHkgaW4gb24gdGhlIHBsYW4sIGJhc2VkIG9uIENvbm5vciBlbmRpbmdzIHdpdGggQW1hbmRhLCBidXQgdGhhdCB0aGV5IGRvbiBzZWUgdGhlIGZ1bGwgcGljdHVyZSBvZiBLYW1za2kgbW90aXZlcy4gCldpdGggYWxsIDQxIFJlcHVibGljYW5zIGluIHRoZSBTZW5hdGUgb3Bwb3NlZCB0byBiYW5raW5nIHJlZm9ybSwgd2l0aCBGb3ggTmV3cyBibGF0aGVyaW5nIG9uIGFib3V0IHN1Y2ggc29jaWFsaXN0IGludGVyZmVyZW5jZSB3aXRoIHRoZSAiZnJlZSIgbWFya2V0LCBhbSB3aWxsaW5nIHRvIHByZWRpY3QgdGhhdCB0aGUgZmF0IGNhdHMgb24gV2FsbCBTdC4gCkhhcnQgaGFzIGEgc3RyYWlnaHQgZHJhdywgYnV0IE1vbnJvZSBzdGlja3Mgd2l0aCBoZXIgYmx1ZmYgYW5kIGJldHMgNzAwLiAKVGhlIGNhc2lubyBwYXJ0IGhhcyB0aHJlZSBmbG9vcnMgc2V0IGFyb3VuZCBhbiBhdHJpdW0gd2l0aCBhIHNwZWN0YWN1bGFyIHN0YWluZWQgZ2xhc3MgZG9tZWQgY2VpbGluZyBieSB0aGUgUGFyaXNpYW4gc3R1ZGlvIE1hdW1qZWFuLiBXaGlsZSBkY29yIGFyb3VuZCB0aGUgZ2FtaW5nIHRhYmxlcyBpcyB0eXBpY2FsbHkgb3JuYXRlIGFuZCBibGluZ3ksIHRoZSBob3RlbCBzZWN0aW9uIGlzIGFsbCBlbGVnYW50IGNvbnRlbXBvcmFyeSBzdHlsZSBpbiBtdXRlZCBuZXV0cmFsIHRvbmVzIHdpdGggcG9wcyBvZiBqYWRlIGFuZCBtdXN0YXJkLiAKQWJlciBkdSB3ZWl0LCB3YXJ1bSBkdSBlaW5nZXN0ZWxsdCB3dXJkZXN0LCB3YXMgZHUgaGF1cHRzY2hsaWNoIHR1biBzb2xsc3QgdW5kIGhsdHN0IGRpY2ggd2VpdGVzZ2VoZW5kIGRhcmFuLgpTY2hvbiBiZWltIGVyc3RlbiBCZXJnbGF1ZnRyYWluaW5nIHB1bmt0ZXQgZGVyIE9aIFB1bGxvdmVyLiBBdWYgZGllIGdyZSBlaW5lciBDb2xhZG9zZSBrb21wcmltaWVydCBoYWJlIGljaCBpaG4gZWluZmFjaCBpbiBlaW5lIG1laW5lciBSY2tlbnRhc2NoZSBkZXMgSGFsbyBUb3BzIGdlc3RlY2t0LCBlcnN0IGJlaW0gbmFzc2Vua2FsdGVuIEFic3RpZWcga29tbXQgZXIgd2llZGVyIHp1bSBWb3JzY2hlaW4gb2huZSBpbSBBbnN0aWVnIGVpbm1hbCBnZXN0cnQgenUgaGFiZW4uClRoZXkgdGhpbmsgb2YgYXV0aXNtIGFzIDEgdGhpbmc6IHRoYXQga2lkIHRoYXQgY2Fubm90IHNwZWFrLCBtYWtlIHdlaXJkIG5vc2VzLCBnZXRzIHZpb2xlbnQsIGRyZXdscyBhbGwgb3ZlciBoaW1zZWxmLCBjYW5ub3QgZWF0IGJ5IGhpbXNlbGYuIEkgbWVhbiwgSSBjYW4gc29tZXdoYXQgc2VlIHRoYXQgcGVvcGxlIHJhdGhlciBub3QgaGF2ZSB0byBkZWFsIHdpdGggdGhpcywgSSB0aGluayBpdCBwdXRzIGEgc3RyYWluIG9uIGV2ZXJ5dGhpbmcgYW5kIG5vdCBldmVyeWJvZHkgY291bGQgaGFuZGxlIHRoaXMgdGhlIHNhbWUuIFRoZXkgZG9uIHJlYWxpc2UgdGhhdCB0aGVyZSBpcyBzbyBtdWNoIG1vcmUgdG8gdGhpcyBhdXRpc20sIGl0IGEgd2hvbGUgcmFuZ2UuIEl0IHN0YXJ0ZWQgYXMgYXV0aXNtIHNjYXJlLCBidXQgaXQgZ290IHNvIG11Y2ggYmlnZ2VyOiB3ZWlyZCBtb25rZXkgZG5hLCBhYm9ydGVkIGZvZXR1cyEhIWNlbGxzLCBoZWF2eSBtZXRhbHMsLiBKdXN0IHRha2UgeW91ciBwaWNrLgpBcHByZWNpYXRlIHRoYXQgeW91IGNhbiBnZXQgd2l0aGluIGluY2hlcyBvZiBzdXBlcnN0YXJzIGZvciBmcmVlLiBJIGhhdmVuIGJlZW4gdG8gb25lIHlldCB0aGlzIHNlYXNvbiBidXQgSSByZWFsbHkgZW5qb3llZCB3YXRjaGluZyB0aGVtIHByYWN0aWNlIGxhc3Qgc2Vhc29uLi4gCkhhdmluZyByZWFkIGEgZmFpciBiaXQgb3ZlciB0aGUgeWVhcnMgYWJvdXQgdGhlIHN0cnVnZ2xlcyBmYWNpbmcgd29tZW4gaW4gUGFybGlhbWVudCwgSSBoYWQgc3RhcnRlZCB0byB0aGluayB0aGF0IHdhcyB0aGVuLCB0aGlzIHdhcyBub3cgYW5kIHRoaW5ncyBoYWQgZmluYWxseSBjaGFuZ2VkIGZvciB0aGUgYmV0dGVyLiBJIG1lYW4sIGxvb2sgYXQgSG9sbHkgV2Fsa2VyLiAKRm9yIGV4YW1wbGUsIGlmIHRoZSBnYW1lIHRha2VzIHBsYWNlIGluIGEgZm9yZXN0LCB0aGUgaGVhZHNldCB3aWxsIHNob3djYXNlIGEgdHJvcGljYWwgZm9yZXN0LiAKS2F0aWUgc2FpZCBzaGUgZ290IGEgY2FsbC4gSG9sZCBvbiBtb20gdGhlcmUgaXMgYSBiZWVwLiBFcmljIGhpdHMgdGhlIHNlbmQgYnV0dG9uIG9uIHRoZSBwaG9uZSB0byBhbnN3ZXIgdGhlIG90aGVyIGNhbGwuIApBb2Z1bmsgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxNyBob3VycyBhZ28KSnVzdCBiZS4gVGhlIGZlZWxpbmcgb2Ygbm90IGJlaW5nIGh1cnQgZXZlcnkgZGF5IGlzIHJlYWxseSBhbWF6aW5nLiBUaGUgZ3JpZWYgYW5kIHBhaW4gYXJlIGFsc28gcmVhbGx5IGFtYXppbmcsIGJ1dCB0aGV5IHNob3J0ZXIgbGl2ZWQuIApPdmVydmlldyBmb3IgaGFwaWdvb2QKWW91J3ZlIGRlY2lkZWQgb24gYSB0cmFkZSBhbmQgaGF2ZSBldmVuIGludmVzdGlnYXRlZCBzb21lIHBvdGVudGlhbCBzY2hvb2xzIGFuZCBwcm9ncmFtcy4gV2hhdCdzIG5leHQ/IEluIGFkZGl0aW9uIHRvIGFwcGx5aW5nIGZvciBmaW5hbmNpYWwgYWlkIGZyb20gYSBwYXJ0aWN1bGFyIGluc3RpdHV0aW9uLCB5b3UgY2FuIGFsc28gZ2V0IGZpbmFuY2lhbCBhaWQgZnJvbSB2YXJpb3VzIGNvbXBhbmllcyBhbmQgb3JnYW5pemF0aW9ucy4gQWZ0ZXIgeW91J3ZlIGludmVzdGlnYXRlZCBzY2hvb2wgc3BlY2lmaWMgYWlkLCB5b3UgY2FuIGxvb2sgdG8gb3JnYW5pemF0aW9ucyBpbnRlcmVzdGVkIGluIHN1cHBvcnRpbmcgc3R1ZGVudHMgd2l0aCBmaW5hbmNpYWwgbmVlZCwgZ29vZCBhY2FkZW1pYyBjcmVkZW50aWFscyBhbmQgYW4gaW50ZXJlc3QgaW4gdHJhZGUgc2Nob29sLiAKVGhlcmUgYXJlIGV2ZW4gbW9yZSBpbXBvcnRhbnQgbGVzc29ucyB0byBiZSBsZWFybmVkIGZyb20geWVzdGVyZGF5IGF0dGFja3MgaW4gdGhlIE1vc2NvdyBtZXRybywgaW1wb3J0YW50IGxlc3NvbnMgYWJvdXQgdGhlIGxpbWl0cyBvZiBmb3JjZS4gdG8gcHJlc3MgcmVwb3J0cywgdGhlIGF0dGFja3Mgd2VyZSBjYXJyaWVkIG91dCBieSB0d28geW91bmcgd29tZW4gd2hvIGFyZSBwYXJ0IG9mIGFudGkgUnVzc2lhbiBtb3ZlbWVudHMgaW4gdGhlIENhdWNhc3VzLiByZXNwb25zZSBvZiB0aGUgUnVzc2lhbiBnb3Zlcm5tZW50IGluIHRoZSBwYXN0IGhhcyBiZWVuIHRvIGluY3JlYXNlIHRoZSB1c2Ugb2YgZm9yY2UgYW5kIG1pbGl0YXJ5IG1pZ2h0IHRvICJjbGFtcCBkb3duIiBvbiBNdXNsaW0gZXh0cmVtaXNtLiB0aGUgY3VycmVudCBNZWR2ZWRldiByZWdpbWUgaGFzIHNwb2tlbiBvZiBhZGRyZXNzaW5nIHRoZSBzeXN0ZW1pYyBjYXVzZXMgb2YgdGVycm9yaXNtIChsaWtlIHVucmVsZW50aW5nIHBvdmVydHkpLCB0aGUgbWFuIGJlaGluZCB0aGUgY3VydGFpbiwgVmxhZGltaXIgUHV0aW4sIHdhbnRzIHRvIHJ1bGUgd2l0aCBhbiBpcm9uIGZpc3QuCkFORC4gTGV0IG5vdCBmb3JnZXQgNHRoIHN0cmVldC4gSSB1c3VhbGx5IGRvbnQgZXZlciByZWNvbW1lbmQgdGhhdCBiZWNhdXNlIGl0IGlzIHdoZXJlIGFsbCB0aGUgdG91cmlzdHMgZ28gYW5kIHRoZXJlIGlzIGEgbG90IHRvIExvdWlzdmlsbGUgYnV0IGNvdWxkIGJlIGEgZ29vZCBwbGFjZSB0byB0YWtlIGhlciBvdXQgdG8gYmFycyB0byBkYW5jZSBpZiB0aGF0IHdoYXQgeW91IHdlcmUgdGhpbmtpbmcuIFRoZXJlIGlzIGEgcmVhbGx5IG5pY2UgQnJhemlsaWFuIChCcmF6emVyb3M/KSByZXN0YXVyYW50IEkgaGF2ZW4gYmVlbiB0byBqdXN0IHlldCBidXQgaGVhciB3b25kZXJmdWwgdGhpbmdzIGFib3V0LiBKdXN0IGtub3cgeW91IGFyZSBnb25uYSBwYXkgdG91cmlzdCBwcmljZXMgZm9yIHN1cmUgb24gNHRoIHN0cmVldC4KIkkgaGFkIHVuZmV0dGVyZWQgdXNlIG9mIGNyZWRpdCBjYXJkcyB0aGF0IHdlcmUgaW4gbXkgbmFtZS4gTXkgQW1lcmljYW4gRXhwcmVzcyBiaWxsIHdhcyBoaXN0b3JpY2FsbHkgb24gYXZlcmFnZSBvZiAkNjAsMDAwIHRvICQ3MCwwMDAgcGVyIG1vbnRoLCBhbmQgd2FzIHBhaWQgaW4gZnVsbCBlYWNoIG1vbnRoLiIKRXhpdCB0aGUgb3ZlcnBhc3MgYW5kIGZvbGxvdyB0aGUgZ3JhdmVsIHBhdGggdG8geW91ciBsZWZ0IGRvd24gdGhlIGhpbGwgYW5kIGFjcm9zcyB0aGUgd29vZGVuIGZvb3RicmlkZ2UuIFRoaXMgaXMgYSByZWFsbHkgZnVuIGhpbGwsIGJ1dCB3YXRjaCBvdXQgZm9yIHBlZGVzdHJpYW5zIQpJIG1hZGUgdGhpcyBpbiBhIGh1cnJ5IGFuZCBJIG5vdCBhIGdhbWUgZGV2ZWxvcGVyLCBzbyBzb21lIG9mIHRoZXNlIHBlcmtzIGNvdWxkIGJlIHJlZHVuZGFudCBvciBPUCwgYnV0IEkgd2FudGVkIHRvIGluY2x1ZGUgdGhlbSB0byBnaXZlIHNvbWUgaWRlYXMgb24gaG93IHRoZXkgY291bGQgd29yayB3aXRoIHRoZSBuZXcgaGVybyBsb2Fkb3V0cy4gClllcyB0aGV5IGFyZS4gT3IgdGhleSBjb3VsZCBoYXZlIHRocmVlIHBhaXJzIG9mIGNvbmdydWVudCBzaWRlcywgb3IgdGhleSBjb3VsZCBoYXZlIG9uZSBwYWlyIG9mIGNvbmdydWVudCBhbmdsZXMgYW5kIHR3byBwYWlycyBvZiBzaWRlcy4gQXMgZmFyIGFzIGEgdHJpYW5nbGUgZ29lcywgaWYgeW91IGhhdmUgYXQgbGVhc3QgdGhyZWUgcGFpcnMgb2YgY29uZ3J1ZW50IHNpZGVzIG9yIGFuZ2xlcyB0aGV5IGFyZSBjb25ncnVlbnQuIApXaWxsaWFtIEtlcG5lciBhbmQgTXJzLiBXaWwgIGxpYW0gU2hpbmRsZWRja2VyIHZpc2l0ZWQgVHVlc2RheSBldmVuaW5nIGF0IHRoZSBob21lIG9mIHRoZSBmb3JtZXIncyBwYXJlbnRzLCBNci4gQW5kIE1ycy4gCkEgZ29vZCBleGFtcGxlIG9mIHRoaXMgd291bGQgYmUgQWNlIEtpbmcgb2YgU3BhZGVzIHZzIEFjZSBLaW5nIG9mIEhlYXJ0cy4gCk92ZXJ2aWV3IGZvciBSYXdyc2F1Y2VmYWNlCk92ZXJ2aWV3IGZvciBqZnJlZGV0dApTaGUgd291bGQgd2VhciBqZXdlbGVkIHBsdWdzIGFuZCB0ZWxsIHVzIGFib3V0IGhvdyBtdWNoIGl0IHR1cm5lZCBoZXIgb24ga25vd2luZyB0aGV5IHdlcmVuIGF3YXJlLCBvciB0aGV5IHdlcmUgYXdhcmUsIGVjdC4gClRoZXkgYXJlIG5vdC4gClNvbWV0aGluZyBhYm91dCBiZWF0aW5nIHNvbWVib2R5IGluIDMxMiBzdHJhaWdodCBnYW1lcyBvZiBnaW4gcnVtbXkuIFNvbWV0aGluZyBhYm91dCByaWRpbmcgYSBjYW1lbCB0aHJvdWdoIGEgY2FzaW5vIGluIE1hcnJha2VjaC4gCkRvd25sb2FkIExpdmUgRm9yIFNwZWVkIFMyIEZ1bGwgVmVyc2lvbiBQYwpUaGUgZHJhdyBpcyBiZWluZyAiaW1tZXJzZWQgaW4gdGhlIGV4cGVyaWVuY2Ugb2YgTm9ydGhmaWVsZCBQYXJrLCBub3QganVzdCBzaXR0aW5nIGluIGEgbWVldGluZyBvciBzdGFuZGluZyBhcm91bmQgYW5kIHRhbGtpbmcsIiBzaGUgc2FpZC4gIlNvbWUgcGVvcGxlIHdpbGwgaGF2ZSB0aGVpciBjb3Jwb3JhdGUgbWVldGluZyBpbiB0aGUgbW9ybmluZywgdGhlbiB3ZSB3aWxsIGZlZWQgdGhlbSBsdW5jaCwgd2hpY2ggbWF5IGluY2x1ZGUgYW5vdGhlciBwcmVzZW50YXRpb24gb3IgbWVldGluZywgYW5kIHRoZW4gdGhlIHRlYW0gd2lsbCBnbyBvdXQgYW5kIGdhbWUgYW5kIHNwZW5kIHRoZSBhZnRlcm5vb24gaG9waW5nIHRvIHdpbiBzb21lIG1vbmV5LiBUaGF0J3MgYmVjb21pbmcgYSBwb3B1bGFyIHNjZW5hcmlvLiIuIApBIGdvb2QgIkhleSB5b3UuIiB3b3VsZCBkbyB0aGUgam9iIGZhbnRhc3RpY2FsbHkuIAoiSSBkb24gZ2l2ZSBhIHNpbmdsZSBmdWNrIGFib3V0IHdoYXQgeW91IGRvIG9yIHdoZXJlIHlvdSBnby4gSSBkb24gaGF2ZSBhbnkgY2hpbGRyZW4uIFtFbW9tXSBoYXMgcnVpbmVkIGFsbCBvZiB5b3UuIiAgTmRhZCwgdmVyeSBjYXN1YWxseSBhbmQgb3V0IG9mIG5vd2hlcmUgb24gb25lIG9mIGhpcyBkYXlzIHdoZW4gSSBhc2tlZCBpZiBJIHdhcyBhbGxvd2VkIHRvIGdvIHRvIG15IGZyaWVuZCBwbGFjZS4gKFRCSCBpdCB3YXNuIHJlYWxseSB0aGUgbW9zdCBodXJ0ZnVsIHRoaW5nIGhlIHNhaWQsIGp1c3QgdGhlIG9uZSB0aGF0IHN0dWNrIG91dCB0byBtZSB0aGUgbW9zdCBvdXQgb2YgdGhlIG9uZXMgSSBoYXZlbiBibG9ja2VkIG91dCAvIGNhbiB0eXBlIG91dCB3aXRob3V0IGNyeWluZy4gSnVzdCBob3cgbWF0dGVyIG9mIGZhY3RseSBpdCB3YXMgc3RhdGVkLikKQW5kIGluIG15IG9waW5pb24sIHRoZXJlIGFyZSBwbGVudHkgb2YgcmVhb25zIHRvIHdyaXRlIGV4cGxpY2l0IHJhcGUgc2NlbmVzIG90aGVyIHRoYW4gc2hvY2sgdmFsdWUuIApUaGV5IHdvbiBhY2tub3dsZWRnZSBhbnkgZWRpdHMgdGhhdCB3b3VsZCBoYXZlIG1hZGUgdGhlbSBsb29rIGV2ZW4gd29yc2UsIHRoZSBkb2dzIHRyYWNraW5nIFRIIHRvIEt1c3MgUm9hZCwgZm9yIGV4YW1wbGUuCkFsdGhvdWdoIG1hbnkgYXJlIGxpa2VseSB0byBiZSBvdXRyYWdlZCBieSB0aGUgc2hvdydzIHByZW1pc2UsIHNvbWUgc2V4cGVydHMgYXBwbGF1ZCB0aGUgZWZmb3J0IHRvIGJyaW5nIGJvZHkgaW1hZ2UgYW5kIHNleHVhbCBleHBlY3RhdGlvbnMgYmFjayBpbiBsaW5lIHdpdGggcmVhbGl0eS4gIkkgYmVsaWV2ZSB0aGF0IHNlZWluZyByZWFsIHNleCBiZXR3ZWVuIGNvbnNlbnRpbmcgYWR1bHRzIHdobyBhcmVuJ3QgYmVpbmcgZGlyZWN0ZWQgYnkgcHJvZmVzc2lvbmFscyBpcyBlc3NlbnRpYWwgdG8gYSBoYXBweSwgaGVhbHRoeSBzZXggbGlmZSwiIHNheXMgRHIuIEplc3MgTydSZWlsbHksIEFzdHJvZ2xpZGUncyByZXNpZGVudCBzZXhvbG9naXN0LiAiUG9ybiBpcyBub3QgaW50ZW5kZWQgdG8gYmUgYSBmb3JtIG9mIGVkdWNhdGlvbiwgYnV0IHdlIG9mdGVuIHVzZSBpdCBhcyBhIGxlYXJuaW5nIG1vZGVsLCBhcyB3ZSBoYXZlIG5vIG90aGVyIG9wdGlvbnMuIElmIHlvdSB3YW50IHRvIGxlYXJuIGFueSBvdGhlciBuZXcgc2tpbGwgbGlrZSBmb290YmFsbCwgY29va2luZyBvciBjcmFmdGluZywgeW91IGJlZ2luIGJ5IG9ic2VydmluZyBvdGhlcnMuIFlvdSBkb24ndCBzaW1wbHkgbGVhcm4gYWJvdXQgdGhlIG1lY2hhbmljcyBpbiBhIGJvb2sgb3Igc3R1ZHkgdGhlIHBvdGVudGlhbCByaXNrcyBpbiBzY2hvb2wgICB5b3UgYWN0dWFsbHkgd2F0Y2ggb3RoZXJzIHBlcmZvcm1pbmcgdGhlIHRhc2sgb24gdmlkZW8gb3IgaW4gcGVyc29uLiBXaHkgZG8gd2UgdHJlYXQgc2V4IGRpZmZlcmVudGx5PyIKV2hlbiBlbWJhcmtpbmcgb24gc29tZXRoaW5nIG5ldyBpdCBpcyBhbHdheXMgYmV0dGVyIHRvIGRldmVsb3AgdGhlIGNvcnJlY3QgaGFiaXRzIGFuZCBtZXRob2RzIGZyb20gdGhlIHN0YXJ0LiBMaWtlIGV2ZXJ5IHNraWxsLCBicmlkZ2Ugc2hvdWxkIGJlIGxlYXJuZWQgZnJvbSBhIHF1YWxpZmllZCB0ZWFjaGVyLiAKVGhlcmUgaXMgbm8gdHJ1ZSAibm8gbGltaXQiIGNhc2ggZ2FtZSBpbiBXYXNoaW5ndG9uIHN0YXRlIGJlY2F1c2Ugb2Ygb3VyIHNvbWV3aGF0IHNpbGx5IGdhbWJsaW5nIGxhd3MuLiAKSmUgc3VpcyBjZXBlbmRhbnQgdG91dCAgZmFpdCBjb25zY2llbnRlIHF1ZSBqZSBzdWlzIGxvaW4gZCd1bmUgY29uc29tbWF0aW9uIGV0IGQndW4gbW9kZSBkZSB2aWUgdnJhaW1lbnQgbWluaW1hbGlzdGVzLiBMYSBzaW11bHRhbml0IGRlIGNlIHZveWFnZSBldCBkZSBjZXR0ZSBsZWN0dXJlIG0nYSBmYWl0IHJmbGNoaXIgIGNlIHF1ZSBzZXJhaXQgcG91ciBtb2kgdml2cmUgZGUgcGV1LCBwYXIgY2hvaXggb3UgcGFyIG9ibGlnYXRpb24uIENlIHNlcmFpdCBjb250aW51ZXIgIGJpZW4gbWFuZ2VyIHZpZGVtbWVudCwgY2UgcXVpIGVzdCBwb3NzaWJsZSBzYW5zIHNlIHJ1aW5lciBlbiBjdWlzaW5hbnQgZGUgc2Fpc29uLiAKIldlJ3JlIHRoZXJlIGZvciBhbnlib2R5IHdobyBpcyBhZmZlY3RlZCBieSBnYW1ibGluZywgYW5kIHRoYXQncyBmYW1pbHkgYW5kIGZyaWVuZHMsIGVtcGxveWVycy4iIE1yIFJvc2V3YXJuZSBzYWlkIGhlbHAgd2FzIG5vdCBqdXN0IGxpbWl0ZWQgdG8gdGhlIGdhbWJsZXIuICJJIGRvbid0IG5lY2Vzc2FyaWx5IGhhdmUgYSBwcm9ibGVtIHdpdGggdGhlIGZpZ3VyZXMgaWYgcGVvcGxlIHdlcmUgYmVpbmcgcmVzcG9uc2libGUgd2l0aCB0aGVpciBnYW1ibGluZywiIGhlIHNhaWQuICJDZXJ0YWlubHkgd2UgcmVjb21tZW5kIHBlb3BsZSBzZXQgdGltZSBhbmQgbW9uZXkgbGltaXRzIGJlZm9yZSB0aGV5IHN0YXJ0LCB0cnkgbm90IHRvIG1peCBhbGNvaG9sIHdpdGggeW91ciBnYW1ibGluZyBhbmQgZG9uJ3QgZG8gaXQgd2hlbiB5b3UncmUgdXBzZXQgb3IgZGVwcmVzc2VkLiAKU0lERS4gCkFzIG90aGVyIGNvbW1lbnRlcnMgaGF2ZSBzYWlkLCBJIHdvdWxkIGhpZ2hseSwgaGlnaGx5IHN1Z2dlc3QgZ2V0dGluZyBpbiB0b3VjaCB3aXRoIEJDIEFtYnVsYW5jZSBhbmQgV2VzdHNob3JlIFJDTVAuIApSZWNlbnRseSwgYSB0ZW1wb3JhcnkgZGVjbGluZSBpbiB3b3JsZCBvaWwgcHJpY2VzIGxlZCB0byB0aGUgZWFzaW5nIG9mIHByaWNlcyBvZiBwZXRyb2xldW0gcHJvZHVjdHMgd2l0aCB0YSBmYXZvdXJhYmxlIGltcGFjdCBvbiB0aGUgcHJpY2UgaW5kaWNlcywgYnV0IGNyZWRpdCBpcyBiZWluZyBnaXZlbiBieSB0aGUgSU1GIHRvIHRoZSBnb3Zlcm5tZW50IGZvciBhIGRlY2xpbmUgaW4gdGhlIHJhdGUgb2YgaW5mbGF0aW9uLiAKQSBmZXcgdGhpbmdzIGhlbHAgaW1tZW5zZWx5LiBUaGUgZGVzaXJlIHRvIGZpeCBteSBvd24gZmFtaWx5J3MgaXNzdWVzIGZ1ZWxzIGEgcGFzc2lvbiByb290ZWQgZGVlcCBpbiBhIG1vdGhlcidzIHByb3RlY3RpdmUgaW5zdGluY3RzLiBLbm93aW5nIEknbSBzZXR0aW5nIGEgZ29vZCBleGFtcGxlIGZvciBteSBjaGlsZHJlbiBrZWVwcyBtZSBnb2luZy4gClRoZXkndmUgY2VydGFpbmx5IG1hZGUgaXQgbW9yZSBhY2Nlc3NpYmxlLiBBIGxvdCBvZiB0aGUgb3RoZXIgcHJvcyB3aWxsIFR3ZWV0IGFib3V0IHRoZSBoYW5kcyB0aGV5IHdvbiBhbmQgdGhlIGhhbmRzIHRoZXkgaGVsZCB3aGVuIHRoZXkgZ290IGJlYXQuIEkgZG9uJ3QgaGF2ZSB0aGUgdGltZSBvciBwYXRpZW5jZSB0byBkbyB0aGF0LiBJIGdldCB1cCBpbiB0aGUgbW9ybmluZ3MsIGFuZCBnbyB0byBteSBjb21wdXRlciBhbmQgdXN1YWxseSBzcGVuZCBhbiBob3VyIG9ubGluZS4gVGhhdCdzIHdoZW4gSSBnbyB0byBUd2l0dGVyIGFuZCBwdXQgc29tZSB0aG91Z2h0cyBpbiB0aGVyZS4gSSB0cnkgdG8gYW5zd2VyIG1vc3Qgb2YgdGhlIHNlbnNpYmxlIHF1ZXN0aW9ucyB0aGF0IGZhbnMgc2VuZCBtZS4gSXQncyBhIGdyZWF0IHdheSB0byBjb25uZWN0IHdpdGggdGhlbS4gQW5kIHlvdSBrbm93IHdoYXQ/IFNvbWV0aW1lcyBJIGV2ZW4gbGVhcm4gc29tZXRoaW5nLgpJdCBkb2VzbiBtYWtlIGFueSBzZW5zZSB0byBtZSB3aHkgdGhpcyB0aGluZyBzZWVtZWQgbGlrZSBhIGdvb2QgaWRlYSB0byBtYWtlLiAKSSBoYWQgdG8gZ28gZG8gc29tZSBsaWdodGVyIHdvcmsgYmV0d2VlbiAyIGFuZCAzIGZvciBzcXVhdHMganVzdCB0byBrZWVwIG15c2VsZiB3YXJtLlBsYW4geW91ciBmaXJzdCBhdHRlbXB0cyB0byBiZSBzb21ldGhpbmcgeW91IGNhbiBoaXQgZm9yIDIgMyByZXBzLCB0aGF0IHdheSB5b3Ugb24gdGhlIGJvYXJkIGFuZCB3b24gYm9tYiBvdXQuR2V0IHNvbWVvbmUgdG8gaGFuZCBpbiB5b3VyIGF0dGVtcHRzSWYgeW91IGdvaW5nIGFsb25lLCB0cnkgdG8gZmluZCBzb21lb25lIGZyb20gYW5vdGhlciBmbGlnaHQgd2hlcmUgeW91IGhlbHAgZWFjaCBvdGhlci4gCiJXaGVuIHBlb3BsZSBjb21lIHRocm91Z2ggdGhlIFRvd24gb2YgTmlhZ2FyYSwgd2Ugd2FudCB0aGVtIHRvIHNlZSB0aGF0IHRoaXMgaXMgYSBjb21tdW5pdHkgdGhhdCBjYXJlcyBhYm91dCBhcHBlYXJhbmNlcy4gClRoaXMgaXMgZXhhY3RseSB3aHkgQXJlbmFOZXQgZG9uIGNvbW1lbnQgb24gb3ZlcmxheXM6IHRoZXkgZG9uIGhhdmUgdGhlIGNhcGFjaXR5IHRvIGRvIGFsbCB0aGF0IHdvcmsganVzdCB0byBzYXkgImFsbHJpZ2h0IHRoYXQgb25lIE9LIi4gSWYgdGhleSBkaWQgaXQgZm9yIG9uZSwgdGhleSBoYXZlIHRvIGRvIGl0IGZvciBhbGwsIGFuZCBrZWVwIHVwIHdpdGggYWxsIHRoZSB1cGRhdGVzLiBUaGUgRVVMQSBpcyB3b3JkZWQgaW4gYSB3YXkgdGhhdCB0aGV5IGNhbiBzdGlsbCBwdWxsIG91dCB0aGUgYmFuaGFtbWVyIGlmIHRoZXkgd2FudCB0byAodGVjaG5pY2FsbHkgZXZlbiBmb3IgdXNpbmcgdGhpcyBmb3J1bSBhcyBpdCBzb2Z0d2FyZSB0aGF0IGFsbG93cyB5b3UgdG8gcGxheSBtb3JlIGFjY3VyYXRlbHkpLCB0aGUgb3B0aW9uIGlzIHJlc2VydmVkLi4gCkl0IGEgY2l0eSBoZSBkb2VzbiB3YW50IHRvIGxpdmUgaW4sIGZvciBhIHRlYW0gdGhhdCBoaXN0b3JpY2FsbHkgaGFzbiBiZWVuIGFueSBnb29kLCBjYXRjaGluZyBwYXNzZXMgZnJvbSBhbiB1bnByb3ZlbiBRQiBjb21pbmcgb2ZmIGEgcHJldHR5IHVucmVtYXJrYWJsZSB5ZWFyLiBJdCB3YXMgaW50ZW5kZWQgYXMgYSBGVSB0byBCcm93biBieSB0aGUgU3RlZWxlcnMgYW5kIGhlIHNhaWQgRlUgYmFjayBiZWNhdXNlIGhlIGNvdWxkLgpUaGVuLCBwbGF5IGxpa2Ugbm9ybWFsLi4gCldlIGNvdWxkIGdldCBCeXJuZXMgdG8gcGxheSBsZWZ0ZmllbGQgYW5kIGhhdmUgc29tZSBzcGVlZCBvbiB0aGUgYmFzZSBwYXRocy4gSSBsaWtlIExld2lzIEkgdGhpbmsgaGUgZGVjZW50IHByb3NwZWN0IHRvIGJyaW5nIGFsb25nLCB0byB1c2Ugd2hlbiBzb21lb25lIG5lZWRzIGEgZGF5IG9mZi4gCkZvciB0aGlzIHJlYXNvbiwgaXQgc2VlbXMgYXMgdGhvdWdoIGV2ZXJ5IHNpdGUgaGFzIGJvbnVzIG9mZmVycyB0byBhdHRyYWN0IG5ldyBwbGF5ZXJzLiBQcmFjdGljYWxseSBldmVyeSBzaXRlIG9mZmVycyBhIGJvbnVzIG9uIGEgcGxheWVyJ3MgZmlyc3QgZGVwb3NpdCByYW5naW5nIGZyb20gMjAgcGVyY2VudCAoZGVwb3NpdCAkMTAwIGFuZCByZWNlaXZlIGEgJDIwIGJvbnVzKSB1cCB0byAxMDAgcGVyY2VudCAoZGVwb3NpdCAkMTAwIGFuZCBnZXQgYSAkMTAwIGJvbnVzKS4gVGhlc2UgZGVwb3NpdCBib251c2VzIGFyZSB1c3VhbGx5IHRpZWQgdG8gYSByZXF1aXJlbWVudCB0byBwbGF5IGEgcHJlZGV0ZXJtaW5lZCBhbW91bnQgb2YgcmFrZWQgaGFuZHMuIApTbyBhYm91dCBhIHllYXIgb2Ygd29yayBmb3IgTG9ycmUgd2VudCB1cCBpbiBzbW9rZSwgYW5kIGFsbCBoZSBnb3Qgb3V0IG9mIGl0IHdhcyB0aGUgb3Bwb3J0dW5pdHkgdG8gY2FsbCBSb3NlYW5uZSBCYXJyIGEgY3JhenkgYXNzaG9sZSB0aGF0IG5vIG9uZSBsaWtlcy4gSWYgb25seSBoZSBoYWQgd2FpdGVkIGEgZGVjYWRlLCBSb3NlYW5uZSB3b3VsZCBoYXZlIGRvbmUgdGhhdCBmb3IgaGltLgpJbiBhIGZldyBtb250aHMgdGhlIGNyZWRpdCBjYXJkIGNvbXBhbnkgd2lsbCBzdGFydCBzZW5kaW5nIHlvdSAiY29udmVuaWVuY2UiIGNoZWNrcy4gClZvdHJlIGNvbnNlbnRlbWVudCBuJ2VzdCBwYXMgcmVxdWlzIHBvdXIgY2VzIGNvb2tpZXMuIElsIG4nZXN0IGRvbmMgcGFzIHBvc3NpYmxlIGRlIGxlcyBhY3RpdmVyIG91IGRzYWN0aXZlciBpbmRpdmlkdWVsbGVtZW50LiBWb3VzIHBvdXZleiBsZSBmYWlyZSBwb3VyIGxlcyBjb29raWVzIG5jZXNzaXRhbnQgdm90cmUgY29uc2VudGVtZW50IHVuaXF1ZW1lbnQsIGMnZXN0ICBkaXJlIGxlcyBjb29raWVzIGZvbmN0aW9ubmVscywgZGUgcGVyZm9ybWFuY2UgZXQgbWFya2V0aW5nLiBWb3VzIHBvdXJyZXogIHRvdXQgbW9tZW50IGRzYWN0aXZlciBsZXMgY29va2llcyBkZXB1aXMgdm90cmUgbmF2aWdhdGV1ciAodm9pciBwb2ludCAiRHNhY3RpdmF0aW9uIGV0IHN1cHByZXNzaW9uIGRlIHRvdXMgbGVzIGNvb2tpZXMiKS4KSWYgeW91IGhhdmUgbW9yZSB0aGFuIG9uZSBjYXJkIG9mIHRoZSBzYW1lIHJhbmssIHlvdSBjYW4gcHV0IHRoZW0gYWxsIGRvd24gYXQgb25jZS4gCkF0IHRoZSBsZWFzdCwgdGhpcyBpcyBib3RoIHBhcnR5IGZhdWx0LiBCaW93YXJlIGlzIG5vdCBhYmxlIHRvIGtlZXAgYSBkZXZlbG9wbWVudCBzY2hlZHVsZSB0aGF0IGlzIGNvbXBldGl0aXZlIHdpdGggb3RoZXIgc3R1ZGlvcy4gRUEgaXMgaW1wYXRpZW50IGFuZCBkZW1hbmRzIGEgcHJvZHVjdCBvbiB1bnJlYWxpc3RpYyBzY2hlZHVsZXMuIApTdG9wIGJ5IHRvZGF5IHRvIHBsYXkgY2FzaW5vIGFuZCBvbmxpbmUgZ2FtYmxpbmcgZ2FtZXMgcmlnaHQgbm93Li4gCklmIHRoZXJlIGlzIGEgaGVsbCwgdGhlcmUgbm8gZ3JvdXAgb2YgcGVvcGxlIG1vcmUgZGVzZXJ2aW5nIHRvIGJlIHRoZXJlLiAKQXJlIHdlIGdvaW5nIHRvIHRydXN0IHRoZXNlIGNvbXBhbmllcyB0byBwcm90ZWN0IHVzIGp1c3QgYmVjYXVzZSB0aGV5IGFyZSBuaWNlIGd1eXMgb3IgYXJlIHRoZXkgZG9pbmcgaXQgdG8gaW5jcmVhc2UgdGhlaXIgYm90dG9tIGxpbmUuIApUaGVyZSBpcyBzbyBtdWNoIHRvIFRleGFzIEhvbGRlbSB0aGF0IEkgY291bGRuIHBvc3NpYmx5IGNvdmVyIGFsbCBvZiBpdCBpbiBvbmUgYXJ0aWNsZS4gWW91IG5lZWQgdG8gZG8geW91ciBvd24gcmVzZWFyY2ggYW5kIGxlYXJuIGEgd2hvbGUgbG90IG1vcmUgb24geW91ciBvd24uIFRoaXMgYXJ0aWNsZSBpcyB0aGUgbW9zdCBiYXNpYyBpdCBnZXRzIHdoZW4gaXQgY29tZXMgdG8gSG9sZGVtIHN0cmF0ZWd5IGFuZCBJIGhvcGUgeW91IGNvbnRpbnVlIHRvIGxlYXJuIGFib3V0IGl0IG9uIHlvdXIgb3duLiAKVGhlIG5leHQgYmVuZWZpdCB0byBhY3F1aXJpbmcgYSBzZXQgb2YgMTAwMCBDbGF5IFBva2VyIENoaXBzIG9mZmVyZWQgYnkgSmFja3BvdCBDYXNpbm8gaXMgdGhhdCB0aGV5IGFyZSB2ZXJ5IGFwcGVhbGluZyB0byB0aGUgZXllIGJhc2VkIG9uIHRoZSBncmFwaGljcyB0aGF0IGFyZSBpbnRlZ3JhdGVkIG9udG8gdGhlIGNoaXBzLiBUaGlzIHNldCBoYXMgcXVhbGl0eSBhcnR3b3JrIG9uIGJvdGggc2lkZXMgb2YgdGhlIGNoaXAgICBub3QganVzdCBvbmUgc2lkZS4gWW91IHdpbGwgc2VlIHRoYXQgaXQgaGFzIHRoZSB3b3JkcyAiRmFidWxvdXMgTGFzIFZlZ2FzIiBwcmludGVkIG9uIHRoZW0uIEluIGFkZGl0aW9uIHRvIHRoaXMsIGlmIHlvdSBsb29rIGNhcmVmdWxseSwgeW91IHdpbGwgc2VlIHZhcmlvdXMgc2lnaHRzIHRoYXQgYXJlIGluIExhcyBWZWdhcywgYWxvbmcgd2l0aCBhIHNpZ24gb2YgdGhlIHZlcnkgcG9wdWxhciBKYWNrcG90IENhc2luby4gQnkgY2hvb3NpbmcgdGhpcyBzZXQsIHlvdSB3aWxsIGFsd2F5cyBoYXZlIGEgdGlueSBwaWVjZSBvZiBMYXMgVmVnYXMgTmV2YWRhIHRvIHlvdXJzZWxmIQpPdmVydmlldyBmb3IgbXlpbXBvcnRhbnR0aG91Z2h0cwpUaGUgcnVsZXMgb2YgaG9sZCAnZW0gYXJlIHNpbXBsZSBlbm91Z2guIApMJ0lybGFuZGUgYXUgY29tbWVuY2VtZW50LCBEYW5hIGdyYW5kZSBkZXNzZSBkZXMgY2VsdGVzLCBleHBsb2l0cyBkZSBDY2h1bGFpbm4sIGxlcyBUdWF0aGEgRCBEYW5hbm4sIGwnSWxlIEJsYW5jaGUsIHN0YXR1dCBqdXJpZGlxdWUgZGUgbGEgZmVtbWUgaXJsYW5kYWlzZSwgbGVzIHBydHJlc3NlcywgbGEgcmVpbmUgR3Vlbml2cmUsIFZpdmlhbmUsIE1sdXNpbmUsIGxhIHZpbGxlIGVuZ2xvdXRpZSBkJ1lzIGV0IGxlIG15dGhlIGRlIGwnb3JpZ2luZSwgS2FsZXZhbGEsIGxhIG5hdmlnYXRpb24gZGUgQnJhbiwgbGVzIGRhbWVzIGR1IGxhYywgbGVzIGZlcyBldCBzb3JjaXJlcywgbCdsZSBkJ0F2YWxsb24sIGxlIHJ2ZSBkJ09lbmdodXMgZXQgbGEgbGdlbmRlIGR1IGN5Z25lLgpDZXR0ZSBtbWUgcXVlc3Rpb24gdGFpdCBwb3NlIHBhciBsZSBmaWxtICJHb29kIE1vcm5pbmcgVmlldG5hbSIgcXVpIHJlcHJlbmFpdCBjZXR0ZSBjaGFuc29uIHN1ciBkZXMgaW1hZ2VzIGRlIGd1ZXJyZXMuIApOb3N0YWxnaWMgYW5kIGluY3JlZGlibHkgcmVjZXB0aXZlLCB0aG9zZSBib3JuIHVuZGVyIHRoZSBzaWduIG9mIHRoZSBjcmFiIGFyZSBib3JuIHdpdGggYW4gZW1vdGlvbmFsIHNpeHRoIHNlbnNlLCIgc2F5cyBNZXNhLiAKQXQgcGVyaGFwcyBhIHlvdW5nZXIgYWdlLCBJIGFtIGluIHRoZSBwcm9jZXNzIG9mIHdpdGhkcmF3aW5nIGZyb20gd2hhdCBzZWVtcyB0byBiZSBhIHNpbWlsYXIgc2l0dWF0aW9uLiBXZSBoYXZlIGdvdHRlbiB0byB0aGUgcG9pbnQgd2hlcmUgd2UgcmVhbGl6ZSB3aGF0IGhhcyB0cmFuc3BpcmVkIGJldHdlZW4gdXMsIGN1bG1pbmF0aW5nIGluIG5vdCBvbmx5IG91ciByZWxhdGlvbnNoaXBzIGVuZCwgYnV0IGEgYmV0dGVyIHVuZGVyc3RhbmRpbmcgb2YgaG93IHdlIGdvdCB0aGVyZSBhcyBhIGNvdXBsZSwgYW5kIGFzIGluZGl2aWR1YWxzIHdpdGggYSBwYXN0LCBhbmQgcGVyY2VpdmVkIGZ1dHVyZS4gU2hlIHdhcyB1bmZhaXRoZnVsIGFzIHdlbGwsIGFuIHVuZm9ydHVuYXRlIGNvbW1vbiBkZW1vbmlhbnRvciBpbiBtYW55IG9mIG15IHJlbGF0aW9uc2hpcHMgdGhhdCBoYXMgdXNodXJlZCBtZSB0byByZWFzc2VzcyBteSBvd24gcGVyc29uYWxpdHksIHZhbHVlcywgYW5kIHBlcmNlcHRpb24uIApUaGF0IGEgYmlnIHByaWNlIGZvciBqb2JzLCBhbmQgaXQgZG9lc24gY291bnQgb3RoZXIgc2FjcmlmaWNlcy4gV2hlbiBJIHZpc2l0ZWQgdGhlIFBTQSBjb25zdHJ1Y3Rpb24gc2l0ZSBhdCBUcm5hdmEgaW4gMjAwNCwgdGhlIEZyZW5jaCBjb250cmFjdG9yIHBvaW50ZWQgb3V0IGEgeW91bmcsIHZlcnkgZWFybmVzdCBTbG92YWsuIFRyYW5zbGF0ZWQsIGhlIHdhcyB0aGUgZGlydCBib3NzLiAKVGhlIG5ldyBzbGVlayBhbmQgbW9kZXJuIDEyNyByb29tIGhvdGVsIGlzIFNhbiBKb3NlJ3Mgc2Vjb25kIENvdXJ0eWFyZCBieSBNYXJyaW90dCBwcm9wZXJ0eSBhbmQgZmVhdHVyZXMgdGhlIFJlZnJlc2hpbmcgQnVzaW5lc3MgbG9iYnksIHByb3ZpZGluZyB0cmF2ZWxlcnMgd2l0aCBmcmVlIFdpIEZpIGFuZCBhIGdyZWF0IHBsYWNlIHRvIHdvcmsgb3IgcmVsYXggd2l0aCBhIHZhcmlldHkgb2YgZmxleGlibGUgc2VhdGluZyBvcHRpb25zLiBUaGUgcHJvcGVydHkgaGFzIGEgcHJhY3RpY2FsIGFuZCBtZWFzdXJhYmxlIGdyZWVuIGJ1aWxkaW5nIGRlc2lnbiwgY29uc3RydWN0aW9uLCBvcGVyYXRpb25zIGFuZCBtYWludGVuYW5jZSBzb2x1dGlvbnMgbWFraW5nIGl0IGEgTEVFRCBjZXJ0aWZpZWQgaG90ZWwuIFRoaXMgbWVhbnMgdGhhdCB0aGVyZSB3aWxsIGJlIDE4JSBtb3JlIGVuZXJneSBlZmZpY2llbnQsIDM1JSByZWR1Y2VkIHdhdGVyIGNvbnN1bXB0aW9uLCAzMCUgVXNlIG9mIHJlZ2lvbmFsIG1hdGVyaWFscyBhbmQgNSUgcmVuZXdhYmxlIGVuZXJneSBvbiBzaXRlIChzb2xhciBwYW5lbHMgdG8gcHJlaGVhdCB3YXRlcikuCkFmdGVyIEkgc2VudCB0aGUgaW52aXRlLCBJIHNhdyBhIGNvbW1lbnQgYnVyaWVkIGRlZXAgaW4gdGhlIHRocmVhZCBhYm91dCBpdCBiZWluZyBhIHdheSB0byBhd2F5IGZyb20gdGhlIHdpdmVzIFNvIEkgc2VudCBhIHByaXZhdGUgbWVzc2FnZSBhbmQgc2FpZCAiSGV5LCBzb3JyeSBkaWRuIHJlYWxpemUsIGlmIGl0IG1lbiBvbmx5IGp1c3QgbGV0IG1lIGtub3cuIiBJIHdhcyBhc3N1cmVkIGl0IHdhc24gYW5kIHRoYXQgSSB3YXMgd2VsY29tZS4gCkkgZ2V0IGl0LCBoZSdzIGNoaW5ueSB3aXRoIEJhbWJpIGxlZ3MgYW5kIGhhcyBiZWVuIGRyb3BwZWQgbW9yZSB0aW1lcyB0aGFuIGEgSmVyc2V5IFNob3JlIGdyZW5hZGUuIEV2ZW4gZmVsbG93IEJyaXQgQmlsbHkgSm9lIFNhdW5kZXJzIGRlY2xhcmVkIHJlY2VudGx5LCAiS2hhbiBoYXMgZ290IHRoZSB3b3JzdCBjaGluIGluIGJveGluZyIuIApXaGF0IEFkdmljZSBkaWQgdGhlbHJlZCBIYXZlP1RoZSBtYWluIHdlYWtuZXNzIGluIHRoZWxyZWQncyByZWlnbiB3YXMgaGlzIGxhY2sgb2YgZ29vZCBjb3Vuc2VsLiBUaGlzIHdhcyBhcHBhcmVudCBldmVuIHRvIG1lZGlldmFsIGhpc3RvcmlhbnMsIHdobyBuYW1lZCBBRWxpZzt0aGVscmVkIHRoZSBVbnJkLCBtZWFuaW5nLCBhcyBwcmV2aW91c2x5IHN0YXRlZCwgJ3dpdGhvdXQgZ29vZCBhZHZpY2UnLiBUaGlzIGxhY2sgb2YgZ29vZCBhZHZpY2UgY2FuIGJlIGRpcmVjdGx5IGxpbmtlZCB0byBhIGxhY2sgb2YgZXhwZXJpZW5jZWQgYW5kIHdpc2UgYWR2aXNvcnMgb2YgYW55IGtpbmQuIFdoZW4gdGhlbHJlZCBjYW1lIHRvIHRoZSB0aHJvbmUgaW4gOTc4LCBoZSB3YXMgYSBjaGlsZCBvZiBhcm91bmQgMTAsIHdpdGggaGlzIG1haW4gYWR2aXNvciBpbiBoaXMgZmlyc3QgeWVhcnMgYmVpbmcgaGlzIG1vdGhlci4gSW4gdGhlIDk4MHMgYW5kIDk5MHMsIG1hbnkgb2YgaGlzIGFkdmlzb3JzLCBpbmhlcml0ZWQgZnJvbSB0aGUgcmVpZ24gb2YgRWRnYXIsIGRpZWQsIGluY2x1ZGluZyBEdW5zdGFuLiB0aGVscmVkIHJlcGxhY2VkIG1hbnkgb2YgdGhlc2UgbWVuIGJ5IG1lbiB3aG8gd291bGQgcHJvdmUgdG8gYmUgdHJhaXRvcnM7IGEgZ3JlYXQgZXhhbXBsZSBpcyBFYWxkb3JtYW4gTGVvZnNpZ2UsIHdobyBpbiAxMDAyIGtpbGxlZCBmaWMsIHRoZSBLaW5nJ3MgSGlnaCBSZWV2ZTQuIFRob3NlIHdobyBkaWRuJ3QgdHVybiB0cmFpdG9yLCBzdWNoIGFzIHRoZWxnYXIgd2hvIHN1Y2NlZWRlZCBEdW5zdGFuLCBkaWVkIHdpdGhpbiBhIHZlcnkgc2hvcnQgdGltZSBhZnRlciB0aGVpciBhcHBvaW50bWVudC4gT3RoZXIgbWVuIHdobyB3b3VsZCBoYXZlIHByb3ZlZCBpbnZhbHVhYmxlIGluIG9yZ2FuaXNpbmcgYSBuYXRpb25hbCByZXNwb25zZSB0byB0aGUgVmlraW5nIHRocmVhdCBkaWVkIGVhcmx5IHRvbywgc3VjaCBhcyBCeXJodG5vdGggaW4gOTkxLgpUaG91Z2ggdGhlIHNob3cgYWN0dWFsbHkgYmVnaW5zIG9uIGEgTW9uZGF5LCB0aGUgd2Vla2VuZCBiZWZvcmUgaXMgZmlsbGVkIHdpdGggcHJlc3MgY29uZmVyZW5jZXMgYW5kIGV2ZW50cyB0byB3YXJtIHRoZSBtZWRpYSB1cCBmb3IgdGhlIGNoYW9zIGFoZWFkLiBIb3JkZXMgb2Ygc3RydW5nIG91dCByZXBvcnRlcnMgZnJvbSBhbGwgb3ZlciB0aGUgd29ybGQgc2hvdyB1cCB0byBzZWUgd2hhdCdzIG5ldyBhbmQgZ2V0IHRoZSBzY29vcC4gCkl0IHNldCB0aGUgdG9uZSBmb3IgdGhlIHJlc3Qgb2Ygb3VyIG1hcnJpYWdlLCB3aGljaCBvbmx5IGxhc3RlZCBhIGNvdXBsZSBvZiB5ZWFycy4gSGUgY29tcGxldGVseSBhbmQgdXR0ZXJseSBvd25lZCBtZS4gVGhlIGRheSBoZSBtb3ZlZCBvdXQsIEkganVzdCBzYXQgb24gdGhlIGNvdWNoIGZvciBhbiBob3VyIHdvbmRlcmluZyB3aGF0IHRvIGRvIHdpdGggbXlzZWxmLiBJIGhhZCB0byByZSBsZWFybiB3aG8gSSB3YXMsIEkgZGlkbiBldmVuIGtub3cgd2hhdCBJIGxpa2VkIGFueW1vcmUgYmVjYXVzZSBJIHNwZW50IHNvIGxvbmcgb25seSBsaWtpbmcgd2hhdCBoZSB0b2xkIG1lIEkgbGlrZWQuCk15IHBsYW4gd2FzIHRvIGdldCB3aXRoIHRoZSAzOjMwIHBhY2UgZ3JvdXAgb24gcmFjZSBkYXkgYW5kIHN0aWNrIGl0IG91dC4gSSB3YXMgZmVlbGluZyBncmVhdCBhYm91dCBpdCBhZnRlciBteSAxOG1pbGVyIGJ1dCBhZnRlciB0aGlzIDEwIG15IGNvbmZpZGVuY2UgaXMgc2hha2VuLgpUaGUgbW9zdCByZWFzb25hYmx5IHByaWNlZCBoYWlyIHNhbG9ucyBJIGhhdmUgdmlzaXRlZCB3ZXJlIGluIE9SOyBib3RoIGluIFBvcnRsYW5kIGFuZCBDb3J2YWxsaXMuIApSTE0gaXMganVzdCBhIHNoZWxsIG9mIHRoZW1zZWx2ZXMgdGhlc2UgZGF5cy4gSSBjYW4gd2FpdCBmb3IgRXBpLiAKV2hlbiBJIHN0YXJ0ZWQgc2VlaW5nIHRoaW5ncyBhdCAxNi4gCldoZXRoZXIgSSB3aW4gb3IgbG9zZSB0aGUgaGFuZCBJIGxvb2sgdG8gc2VlIGlmIEkgYW0gbWFraW5nIHRoZSByaWdodCBkZWNpc2lvbnMgYXQgdGhlIHRpbWUgdGhlIGluZm9ybWF0aW9uIGlzIHByZXNlbnRlZCB0byBtZS4gCjIwLDAwMCB3ZWxsIHdpc2hlcnMgdHVybmVkIHVwIHRvIGNoZWVyIHRoZSBicmlkZSBhbmQgZ3Jvb20uIApZb3UgY2FuIGp1c3QgYmUgbGlrZSAiZHVkZSwgeW91IHBsYXlpbmcgYSBnYW1lPyIgYW5kIHBvc3QgL3IvSGFpbENvcnBvcmF0ZS4gCkhhdmUgdGhlIG9wcG9zaXRlIHBsYXllcnMgYXQgdGhlIHRhYmxlIHNlZSB5b3UgYXJlIG9ubHkgcGxheWluZyBzdHVyZHkgaGFuZHMuIApWaXNpdG9ycyBjYW4gY2hvb3NlIGZyb20gbmVhcmx5IDQwMCBob3RlbCByb29tcyBhbmQgMTUgc3VpdGVzLCBhbmQgZGluZSBpbiBvbmUgb2YgZm91ciByZXN0YXVyYW50cy4gUlZzIGNhbiBiZSBwYXJrZWQgaW4gdGhlIDUwIHNwYWNlIGxvdCBvdmVybmlnaHQgZm9yIGEgZmVlLiAKVGhlIG1hbiBiYW5nZWQgb24gdGhlIHdhbGxzIG9mIHRoZSByb29tIGluIHRoZSBlYXJseSBob3VycyBvZiB0aGUgbmV4dCBkYXkgZHVlIHRvIHRoZSBwYWluIGJ1dCBvZmZpY2lhbHMgdG9sZCBoaW0gdG8gc3RvcCwgc2F5aW5nIGhlIHdvdWxkIGJlIGFscmlnaHQuIApFaW4gcmVjaHQgYXVzZmhybGljaGVyIEZpbG0gemVpZ3QgYWxsZSAxNCBBcmJlaXRzc2Nocml0dGUsIGRpZSBudGlnIHNpbmQgdm9uIGRlciBHZXdpbm51bmcgZGVyIFJvaHNlaWRlIGJpcyB6dW0gZmVydGlnZW4gV2Vya3N0Y2suIERlciBGaWxtIGlzdCBzZWhyIGluZm9ybWF0aXYsIHN0cmVja2Vud2Vpc2UgZmFuZGVuIHdpciBpaG4gZWluIGJpc3NjaGVuIGxhbmdhdG1pZy4gClRoZXNlIGFyZSB0aGUgc2FtZSBraW5kcyBvZiBndXlzIHdobywgd2hlbiB5b3Ugd2l0aCBhIG1hbiBhbmQgZGlzY3Vzc2luZyAiaW50ZWxsaWdlbnQiIHN1YmplY3RzIGluIGEgMyB3YXkgY29udmVyc2F0aW9uLCB3aWxsIGRpcmVjdCB0aGVpciB3b3JkcyBtYWlubHkgYXQgdGhlIGd1eSB5b3Ugd2l0aCBhbmQga2luZCBvZiBpZ25vcmUgeW91LiAKU2FpZCB0aGF0IHRoZSBtYW4gaGFkIGxvc3QgaGlzIGpvYiwgYW5kIGhhZCBubyBwbGFjZSB0byBnby4gClRoZSByb29tbWF0ZSByZWZ1c2VkIGFuZCBhY3RlZCBsaWtlIHRoaXMgd2FzIGEgdG90YWxseSBub3JtYWwgd2F5IHRvIHdhc2ggY2xvdGhlcy4gTXkgZnJpZW5kIGVuZGVkIHVwIHNwZW5kaW5nIGEgbG90IG9mIHRpbWUgaW4gbXkgcm9vbSwgdG8gZ2V0IGF3YXkgZnJvbSB0aGUgaG9ycmlibGUgbWlsZGV3eSBzbWVsbCB0aGF0IGRldmVsb3BlZC4KU2lkZSBlZmZlY3RzIG9yIHRveGljaXR5IGNhbiBvY2N1ciB3aGVuIGJsb29kIGNvbmNlbnRyYXRpb25zIHJlYWNoIDg4IG5nL21MIG9yIGdyZWF0ZXIuWzldIFN5bXB0b21zIGluY2x1ZGUgbmF1c2VhLCB2b21pdGluZywgY29uc3RpcGF0aW9uLCBoZWFkYWNoZSwgc2xlZXBpbmVzcywgYW5kIHdlYWtuZXNzLls2XSBUb28gbXVjaCB2aXRhbWluIEQgY2FuIHJhaXNlIGJsb29kIGNhbGNpdW0gY29uY2VudHJhdGlvbnMsIGFuZCBhY3V0ZSB0b3hpY2l0eSBjYXVzZXMgaHlwZXJjYWxjZW1pYSBhbmQgaHlwZXJjYWxjaXVyaWEuWzYsOV0uIApJIGdvdCBOT1RISU5HIGZyb20gZ29pbmcgdG8gY2h1cmNoIHdoaWxlIGFsbCBteSBwZWVycyBhbmQgZmFtaWx5IHdlbnQgb24gYWJvdXQgaG93IHJlbGlnaW9uIG1hZGUgdGhlbSBmZWVsLiAKV2hhdCBwcmVmaXhlcyB0ZW5kIHRvIGRvIHRvIHZlcmJzLCBzaW1pbGFyIHRvIGhvdyB0aGV5IGZ1bmN0aW9uIGluIEVuZ2xpc2guIApJdHMgYXluIFJhbmQuIApJIGRvbiB0aGluayB0aGVyZSBpcyBvbmUgc2luZ2xlIGV4cGVyaWVuY2UsIGJ1dCBldmVyeSB0aW1lIEkgcmV0dXJuIHRvIFNpbmdhcG9yZSBJIGZlZWwgYXMgdGhvdWdoIEkgYW0gY29taW5nIGJhY2sgdG8gbXkgc2Vjb25kIGhvbWUgb25seSB0aGlzIGhvbWUgaXMgdHJvcGljYWwgYW5kIGh1bWlkLCBub3Qgd2V0IGFuZCBtaXNlcmFibGUgbGlrZSBMb25kb24hIEluIHRlcm1zIG9mIHB1cmUgb25lIG9mZiBleHBlcmllbmNlcywgdmlzaXRpbmcgU2lnaXJpeWEgaW4gU3JpIExhbmthIHdhcyBhd2Vzb21lOyBDYXBwYWRvY2lhIGluIFR1cmtleSB3YXMgYnJpbGxpYW50OyB0aGUgdGVtcGxlcyBvZiBCYWdhbiBpbiBNeWFubWFyIHdlcmUgbWVzbWVyaXNpbmc7IHRoZSBSb21hbiBydWlucyBpbiBJdGFseSB3ZXJlIGZhc2NpbmF0aW5nOyBhbmQgdGhlIEZ1c2hpbWkgSW5hcmkgU2hyaW5lIGluIEt5b3RvLCBKYXBhbixyYW5rcyB1cCB0aGVyZSwgdG9vLiAKWW91ciBhdW50IHJlY29sbGVjdGlvbiBvZiBiZWluZyAiYnJhaW53YXNoZWQiIGF0IHNjaG9vbCBpcyBsaWtlbHkgYWNjdXJhdGU6IE5hemkgR2VybWFueSB3YXMgYSB0b3RhbGl0YXJpYW4gcmVnaW1lIGFuZCB1c2VkIGEgY29tYmluYXRpb24gb2YgcHJvcGFnYW5kYSBhbmQgaW5kb2N0cmluYXRpb24gdG8ga2VlcCB0aGUgcG9wdWxhY2UgcGxpYW50IGFuZCBsb3lhbCwgYW5kIHNjaG9vbHMgd2VyZSByZXF1aXJlZCB0byB0ZWFjaCBOYXppIGlkZW9sb2d5LiBJIG9uY2UgaW50ZXJ2aWV3ZWQgYW4gb2xkIGdlbnQgd2hvIGdyb3duIHVwIGluIHRoYXQgdGltZTogYSBKZXN1aXQgcHJpZXN0IHdobyBoYWQgYmVlbiBzdGF0aW9uZWQgdGhlcmUgdXNlZCB0byBnaXZlIGhpbSBhbmQgaGlzIGNsYXNzbWF0ZXMgIkJpYmxlIHN0dWR5IiwgYnV0IGluIGZhY3QgaGUgd291bGQgYXNrIHRoZW0gd2hhdCB0aGV5IGxlYXJuZWQgaW4gc2Nob29sIHRoYXQgZGF5IGFuZCBwcm9jZWVkIHRvIHRlbGwgdGhlbSB3aHkgaXQgd2FzIGFsbCB3cm9uZyAgIHRoaXMgd2FzIHBvc3NpYmxlLCBiZWNhdXNlIHRoZSBOYXppcyB3ZXJlIGF0IHRoZSB0aW1lIGxlYXZpbmcgdGhlIENhdGhvbGljIENodXJjaCBhbG9uZS4gVGhpcyBtYW4gY3JlZGl0ZWQgdGhhdCBwcmllc3Qgd2l0aCBoYXZpbmcgImlubm9jdWxhdGVkIiBoaW0gKGFzIGhlIHB1dCBpdCkgZnJvbSB0aGUgaW5kb2N0cmluYXRpb24gaGUgcmVjZWl2ZWQgYXQgc2Nob29sLi4gCkEgbG90IG9mIHRoZSB0aW1lcyBpbiBjYXNlcyBsaWtlIHRoaXMgcGVvcGxlIGtlZXAgdGhlaXIgc3RhbmNlLCBiZWNhdXNlICJ0aGlzIGlzIGhvdyB3ZSBiZWVuIGRvaW5nIGl0IGZvciBhIGxvbmcgdGltZS4iIFNvIHdoYXQ/IERvZXNuIG1lYW4gaXQgYSBnb29kIHdheSB0byBoYW5kbGUgdGhlIHNpdHVhdGlvbi4KSSByZWFsbHkgZGlkbnQgbWluZCBhcyBsb25nIGFzIGhlIHRvb2sgY2FyZSBvZiBpdCwgYnV0IEkgd291bGQgaGF2ZSB0byBjb25zdGFudGx5IHJlbWluZCBoaW0gaXRzIG1pbmUgaWYgaGUgZXZlciBzb2xkIGl0IGl0IHdvdWxkbiBiZSBwcmV0dHkuIApUaGUgWW91bmcgVHVya3MgZm91bmQgdGhlIHNvbHV0aW9uIGluIG1vdmluZyBBcm1lbmlhbnMgdG8gU3lyaWEgd2hlcmUgdGhleSBjYW5ub3QgYXR0YWNrIHRoZSBPdHRvbWFuIEFybXkgb3Igam9pbiBSdXNzaWFuIHJhbmtzLiBUaGlzIHdhcyBieSBubyBtZWFucyBhbiBhdHRlbXB0IHRvIGVyYXNlIEFybWVuaWFucyBmcm9tIHRoZSBoaXN0b3J5IG9mIG1hbmtpbmQuIFRoaXMgd2FzIGFuIGF0dGVtcHQgdG8gdGFrZSBhd2F5IEFybWVuaWFuIGNhcGl0YWwgYW5kIGVuZCB0aGUgdmVyeSBkaXN0dXJiaW5nIHNpdHVhdGlvbiBpbiB0aGUgRWFzdGVybiBGcm9udC4uIApCdXQgaGlnaCBmaXZlIGZvciBmaW5kaW5nIGFncmVlbWVudCBvbiB0aGUgaW50ZXJuZXQhCkRpZmZpY3VsdCB0byBzdW1tYXJpemUgaGVyZSwgYnV0IHdvcnRoIGEgbG9vay4gR290IGZyb250IHJvdyBiZWhpbmQgZHVnb3V0LiAKTG93IG1lbWJlcnNoaXAgbnVtYmVycyBoYWQgYWxzbyBoYWQgYW4gaW1wYWN0ICAgdGhlIGNsdWIgaGFzIDE3NzUgbWVtYmVycy4KSGUgYWxzbyB0b2xkIG1lIGhlIGhhZG4ndCBiZWVuIGludGltYXRlIHdpdGggaGlzIHdpZmUgaW4geWVhcnMuIEkgZmluYWxseSBoYWQgdG8gY29tZSBvdXQgYXMgYXNleHVhbCB0byBoaW0gYmVjYXVzZSBoZSBqdXN0IHdhc24ndCBnZXR0aW5nIGl0LCBhbmQgdGhlbiBoZSBwdXQgbWUgb24gYmxhc3QgYWJvdXQgbXkgc2V4dWFsaXR5IHRvIGFub3RoZXIgY293b3JrZXIuIApGb3IgdGhlIG5vbiBraXRjaGVuIHNhdnZ5LCBoZWVkIHRoaXMgaW1wb3J0YW50IHRpcDogRG8gbm90LCB1bmRlciBhbnkgY2lyY3Vtc3RhbmNlcywgbWljcm93YXZlIG9yIGhlYXQgdGhlIGJ1dHRlcm1pbGsgbXVjaCBhYm92ZSByb29tIHRlbXBlcmF0dXJlOyBkb2luZyBzbyB3aWxsIG1ha2UgaXQgY3VyZGxlLiAKQmVpamluZyBoYXMgZXZlcnl0aGluZy4gClRoaXMgaXMgYSB2ZXJ5IGZhc3Qgd2F5IGFuZCB2ZXJ5IGdvb2QgZXhjdXNlIGZvciBzdHJpcHBpbmcgbmFrZWQsIG5vdCB0byBtZW50aW9uIHRoaXMgd2lsbCBnaXZlIHlvdSBncmVhdCBtb3RpdmF0aW9uIGluIHBsYXlpbmcgcG9rZXIuIApXaXRoIGEgbGl0dGxlIGFkZGVkIGhlbHAgYW5kIGVuY291cmFnZW1lbnQgY2hpbGRyZW4gYXJlIGFibGUgdG8gbGVhcm4gdG8gcGVyZm9ybSB0YXNrcyBmcm9tIG1vcmUgYWR2YW5jZSBzdGFnZXMgdGhhbiB0aGlzIG1vZGVsIGFsbG93cy4uIApNYW55IGRvZ3MgYXJlIG5vdCBoeXBlcmFjdGl2ZS4gTXkgZG9nIHNsZWVwcyBtb3N0IG9mIHRoZSBkYXkgYW5kIGlzIGZyaWVuZGx5IGJ1dCBjYWxtLiBIeXBlcmFjdGl2aXR5IGlzIGEgYnJlZWQgdGhpbmcgYnV0IGlzIG5vdCB0cnVlIG9mIGRvZ3MgaW4gZ2VuZXJhbC4gTWFueSBicmVlZHMgYXJlIGEgcXVpdGUgZG9zaWxlLgpJIHdhcyBhc2tlZCBieSB0aGUgZGVhbGVyIHRvIHBvaW50IHNvbWV0aGluZyBvdXQsIEkgZGlkLiAKSW5kZWVkLCBhcyBJIHdyb3RlIGluIGEgcHJldmlvdXMgYXJ0aWNsZToKQWRkIHZlZ2dpZXMgKyBzbWFsbCBhbW91bnQgZXh0cmEgb2lsLCBzdGlycmluZyBldmVyeSBmZXcgbWludXRlLiAKTiBnb3QgYSBwbHVzIG9uZSB3aXRoIGhpcyBpbnZpdGUgYW5kIGRlY2lkZWQgdG8gaW52aXRlIG9uZSBvZiBoaXMgZnJpZW5kcyBvdmVyIG1lIGJlY2F1c2UgaGUga25ldyBoaXMgaW5mbyBhbmQgd2FzIHRvbyBsYXp5IHRvIGFzayBmb3IgbWluZS4gVGhpcyBmcmllbmQsIHdobyBJIHdpbGwgY2FsbCBBLCB3YXNuIGEgRmFsbG91dCBmYW4gdW5saWtlIG1lIGFuZCBOIHdobyBoYXZlIHB1dCBpbiBjb3VudGxlc3MgaG91cnMgaW4gRmFsbG91dCBhbmQgb3RoZXIgUlBHcy4gCldlbm4gZHUgZ2VnZW4gQXRvbWtyYWZ0d2Vya2UgYXJndW1lbnRpZXJlbiB3aWxsc3QsIGRhbm4gaXN0IGRpZSBTaWNoZXJoZWl0IGtlaW4gQXJndW1lbnQgZ2VnZW4gZGllc2UsIGVoZXIgZnIgZGllc2UuCklmIGNhbmR5IGJhcnMgYXJlIGF2YWlsYWJsZSBmb3IgJDEgYW5kIHNvbWVvbmUgZWxzZSBpcyBnaXZpbmcgb3V0IGNhbmR5IGJhcnMgZm9yIGZyZWUsIGFyZSB5b3UgImNoZWFwIiBpZiB5b3UgZ28gZm9yIHRoZSBmcmVlIGNhbmR5IGJhcj8gRXZlbiBpZiB0aGUgZnJlZSBjYW5keSBiYXIgaXMgb2YgaW5mZXJpb3IgcXVhbGl0eSwgdGhlIGF2YWlsYWJpbGl0eSBvZiB1bnBhaWQsIHVzZWZ1bCBsYWJvciBpcyBhIG1hcmtldCByZWFsaXR5LgpXaGVuIHRoZWlyIGZhdGhlciBjYW1lIHRvIHBpY2sgdGhlbSB1cCBmb3IgdGhlaXIgd2Vla2VuZCBzaGUgc3RlcHBlZCBvdXRzaWRlLCBzaG90IGhpbSB1bnRpbCB0aGUgZ3VuIHdhcyBlbXB0eSwgdGhlbiB3ZW50IGJhY2sgaW5zaWRlIGNvb2wgYXMgeW91IHBsZWFzZSB0byBsZXQgaGltIGJsZWVkIHRvIGRlYXRoIG9uIHRoZSBzaWRld2Fsay4gCllvdXIgc3BlbmRpbmcgbWlnaHQgYmUgbW9yZSBvciBsZXNzLiBSZW50cyBpbiBteSBjaXR5IGZvciBkZWNlbnQgYXBhcnRtZW50cyBpbiBnb29kIGxvY2F0aW9ucyBnbyBmb3IgYmV0d2VlbiAzLDAwMCBhbmQgNSwwMDAgUk1CIHBlciBtb250aC4gVGhlcmUgYmV0dGVyLCB0aGVyZSB3b3JzZS4gClRoYXQncyBiYXNpY2FsbHkgYWxsIHRoZSBtYXRoIHlvdSBuZWVkIHRvIGtub3cuIApOZXcgTGlmZSBDaGlsZHJlbgpCZXN0IE1vdGhlciBEYXkgZ2lmdHMgMjAxOU1vdGhlcidzIERheSBpcyB0YWtpbmcgcGxhY2UgdGhpcyB5ZWFyIG9uIE1hcmNoIDMxLiBUaGlzIHllYXIsIHRyZWF0IHlvdXIgbXVtIHRvIGEgc3BlY2lhbCBnaWZ0IHRvIHRoYW5rIGhlciBmb3IgYWxsIHRoYXQgc2hlIGRvZXMgZm9yIHlvdSAgIGFuZCBpZiB5b3Ugc2hvcnQgb24gY2FzaCBqdXN0IHBvcCBhcm91bmQgZm9yIGEgbG9uZyBjaGF0IGFuZCBhIG5pY2UgY3VwcGEgICBpdCB3aWxsIG1lYW4gbW9yZSB0aGFuIHlvdSByZWFsaXNlIGFuZCBkb2VzbiBjb3N0IGEgdGhpbmcuIFdoZXRoZXIgeW91ciBtdW0gcHJlZmVycyBhbiBpbmR1bGdlbnQgcGFtcGVyaW5nIGJlYXV0eSB0cmVhdCBmb3Igc29tZSBoYXJkIGVhcm5lZCByZWxheGF0aW9uIGFuZCByZWp1dmVuYXRpb24sIG9yIGEgcGVyc29uYWxpc2VkIGpld2VsbGVyeSBwaWVjZSB0aGF0IHNoZSB3aWxsIHRyZWFzdXJlIGZvciBldmVyLCB3ZSBoYXZlIGdhdGhlcmVkIHVuaXF1ZSBnaWZ0cyBpbiBhbGwgY2F0ZWdvcmllcy4uIApTdXBwb3J0ZXJzIGNsYWltIGZvb3QgbWFzc2FnZXMgKG9yIHN0aW11bGF0aW9uIHZpYSBwZWRpY3VyZSkgaW5kdWNlIGxhYm9yIGJ5IHN0aW11bGF0aW5nIGNlcnRhaW4gcHJlc3N1cmUgcG9pbnRzIGFyb3VuZCB0aGUgZm9vdCBhbmQgYW5rbGUuIE1hbmlwdWxhdGlvbiAoZXZlbiB1bmludGVudGlvbmFsKSBvZiB0aGVzZSBwcmVzc3VyZSBwb2ludHMsIHRoZSByZWFzb25pbmcgZ29lcywgY2F1c2VzIHRoZSB1dGVydXMgdG8gYmVnaW4gY29udHJhY3RpbmcuIFRoaXMgaXMgbW9yZSBvciBsZXNzIGJhc2VkIG9uIHRoZSBwcmluY2lwbGVzIG9mIHJlZmxleG9sb2d5IHRoYXQgbWFpbnRhaW4gdGhhdCBwcmVzc3VyZSBwb2ludHMgb24gdGhlIGZlZXQsIGhhbmRzIGFuZCBlYXJzIGNvcnJlc3BvbmQgdG8gZXZlcnkgb3RoZXIgcGFydCBvZiB0aGUgYm9keS4gUmVmbGV4b2xvZ2lzdHMgYmVsaWV2ZSB0aGF0IG1hbmlwdWxhdGluZyB0aGVzZSBwcmVzc3VyZSBwb2ludHMgY2xlYXJzIHVwICJibG9ja2FnZXMiIGluIHRoZSBib2R5J3MgZW5lcmd5IGZpZWxkLgpCYWxkIGFsbGUgQmFycyBnZXNjaGxvc3Nlbiwga2VpbmUgR2lybHMgbWVociBkaWUgQXBva2FseXBzZSBzY2hsZWNodGhpbiAhISEgQWJlciB3ZWl0IGdlZmVobHQuIERlbm4gbmljaHQgaW1tZXIgaXN0IHNpY2hlcmdlc3RlbGx0IGRhcyBrYW1ib2RzY2hhbmlzY2hlIG9kZXIgYXVjaCB2aWV0bmFtZXNpc2NoZSBHaXJscyBoaWVyIHZvciBPcnQgYmVyZWl0cyBkYXMgZXJsYXVidGUgQWx0ZXIgZXJyZWljaHQgaGFiZW4uIFNvIGV0d2FzIGthbm4gZnVlciBkZW4gYW5nZXBlaWx0ZW4gT25lIE5pZ2h0IFN0YW5kIHNlaHIgdW5hbmdlbmVobSB3ZXJkZW4uIApUb3VybmFtZW50cyBhcm91bmQgdGhlIGNsb2NrLiBUaGUgdW5wcmVkaWN0YWJpbGl0eSBvZiBpdCBjYW4gY2hhbmdlCkJ1dCBhY3RpbmcgbGlrZSAiYW55Ym9keSBlbHNlIiB3aXRoIHN1Y2ggYSBsYXJnZSBsb2FuIHdvdWxkIG5vdCBiZSBhYmxlIHRvIGdldCBzZWN1cml0eSBjbGVhcmFuY2UgaXMgcmlkaWN1bG91cy4gRXhlY3V0aXZlcywgYm9hcmQgbWVtYmVycywgYW5kIGhpZ2ggbGV2ZWwgaW52ZXN0b3JzIGF0IFJheXRoZW9uLCBMb2NraGVlZCBNYXJ0aW4sIEJvZWluZyBldGMgaGF2ZSBsb2FucyB0aGF0IGFyZSBNVUNIIGxhcmdlciB0aGFuIHRoYXQsIGFuZCB0aGV5IGFsbCBoYXZlIHRvcCBzZWNyZXQgc2VjdXJpdHkgY2xlYXJhbmNlLgpUaGlzIHRlY2huaXF1ZSBlbmFibGVzIGEgY29ycmVjdGl2ZSBmb3JjZSB0byBiZSBpbnRyb2R1Y2VkIGludG8gdGhlIHJlc3RyaWN0ZWQgc3BpbmFsIGFyZWEgYW5kIGFsbG93cyBwb3N0IHBhbHBhdGlvbiB2ZXJpZmljYXRpb24gb2YgdGhhdCBjb3JyZWN0aW9uIGluIGFsbCBhcmVhcyBvZiB0aGUgc3BpbmUuClRoYXQgc2FpZCwgaWYgaXQgbWFrZXMgeW91IHVuY29tZm9ydGFibGUsIHlvdSBhcmUgY29tcGxldGVseSB3aXRoaW4geW91ciByaWdodHMgdG8gYXNrIHlvdXIgdGhlcmFwaXN0IG5vdCB0byB3b3JrIG9uIHRoZW0sIG9yIHRvIHVzZSBvdGhlciBtZXRob2RzIChJIG9mdGVuIHdvcmsgb24gZ2x1dGVzIHRocm91Z2ggdGhlIHNoZWV0KS4gCkhvdyBtdWNoIGlzIEtyYWZ0IHNhdmluZyBhIHllYXIgb24gcHJvZHVjdHMgYnkgbm90IG9mZmVyaW5nIGhvdXJseSB3b3JrZXJzIHRoZSBzYW1lIGRpc2NvdW50PyBJIHdpbGwgYWx3YXlzIHBheSB0byBhdm9pZCBLcmFmdCBhZnRlciB0aGF0IGJ1bGxzaGl0LiBBbnkgZ2FtZSBoZSBpc250IGdvb2QgYXQgaGUgcXVpdHMuIEhlYXJ0aHN0b25lIGlzIHJhbmRvbSBhcyBmdWNrIHNvIGFueW9uZSBjYW4gYmUgImdvb2QiIGF0IGl0IGlmIHRoZXkgcGF5IGZvciBkZWNrcy4gClRoZSBsYXJnZSBwYWludGluZyB3YXMgYWN0dWFsbHkgYSBjYW1wYWlnbiBwb3N0ZXIgdXNlZCBkdXJpbmcgYSBwYXJhZGUgZG93biB0aGUgc3RyZWV0cyBvZiBHb3NoZW4gaW4gMTg2MCBkdXJpbmcgdGhlIHByZXNpZGVudGlhbCBwcmltYXJ5LiBUaGUgYXJ0aXN0IHdhcyBKb3NlcGggRGlsbGUsIHdobyBsaXZlZCBpbiBHb3NoZW4uIExlZ2VuZCBoYXMgaXQgdGhhdCBEaWxsZSBsb3N0IHRoZSBwb3N0ZXIgZm9yICQzNSBpbiBhIHBva2VyIGdhbWUuIApNYWtlIHlvdXIgT3duIEdlYXIKRm9jdXMgb24gQ29yZSBRdWFsaXRpZXMgV2hlbiBwcmVwYXJpbmcgZm9yIGFuIGludGVydmlldywgZmlndXJlIG91dCB3aGF0IHN0cmVuZ3RocyB5b3UgaGF2ZSB0aGF0IGFsaWduIHdlbGwgd2l0aCB0aGUgcG9zaXRpb24uIApLaW0ncyBmaXRuZXNzIGpvdXJuZXkga2lja2VkIG9mZiBsYXN0IHllYXIsIHdoZW4gc2hlIGNhbWUgYWNyb3NzICJyaXBwZWQiIGJvZHlidWlsZGVyIGFuZCB0cmFpbmVyIE1lbGlzc2EgQWxjYW50YXJhIG9uIEluc3RhZ3JhbSBhbmQgd2FzIGludHJvZHVjZWQgdG8gdGhlIHdvbmRlcnMgb2YgZGVhZGxpZnRzIGFuZCBwbGFua3MuIEJlZm9yZSB0aGVuLCB0aGUgbW9tIHRvIE5vcnRoLCA1LCBTYWludCwgMiwgYW5kIENoaWNhZ28sIDcgbW9udGhzLCAod2l0aCBodXNiYW5kIEthbnllIFdlc3QpIGFkbWl0dGVkIG9uIGhlciBhcHAsICJJIHVzZWQgdG8gdGhpbmsgdGhhdCBsaWZ0aW5nIHdlaWdodHMgd2FzIGludGltaWRhdGluZyBiZWNhdXNlIEkgZGlkbid0IHdhbnQgdG8gbG9vayBidWxreS4iIFNoZSB3YW50ZWQgdG8gbG9vayBhbmQgZmVlbCBzdHJvbmdlciBhbmQgYnVpbGQgbGVhbiBtdXNjbGUsIHNoZSBzYWlkLCBzaGUganVzdCBkaWRuJ3QgcmVhbGx5IGtub3cgaG93IHRvIGdvIGFib3V0IGl0LiAiTWVsIHNob3dlZCBtZSB0aGF0IGRvaW5nIGNhcmRpbyBhbG9uZSBpc24ndCBlbm91Z2ggdG8gZ2V0IHRoZSBwaHlzaWNhbCByZXN1bHRzIHRoYXQgSSB3YW50ZWQsIiBLaW0gY29udGludWVkLiAiT25jZSB5b3UgYnVybiBvZmYgdGhlIGZhdCB1bmRlciB0aGUgc2tpbiBhbmQgYXJvdW5kIHRoZSBvcmdhbnMsIHRoYXQgc3BhY2UgbmVlZHMgdG8gYmUgZmlsbGVkIGluIGJ5IG11c2NsZXMgaW4gb3JkZXIgdG8gaGF2ZSB0aGF0IHRvbmVkIGFuZCBkZWZpbmVkIGxvb2suIFRvIGJ1aWxkIHRob3NlIG11c2NsZXMsIEkgaGFkIHRvIGxpZnQgd2VpZ2h0cyBhbmQgZWF0IHJlYWwgZm9vZCB3aXRoIHdob2xlIGluZ3JlZGllbnRzIHRoYXQgd291bGQgZnVlbCBteSBib2R5LiIKSGUgd29ya3Mgd2l0aCBjb21wdXRlcnMgYnV0IHdvbid0IGdvIGludG8gbXVjaCBkZXRhaWwgYmV5b25kIHRoYXQuIEl0J3MgcmVhbGx5IGp1c3Qgbm90IHRoYXQgaW50ZXJlc3RpbmcsIGhlIHNheXMuLiAKVHdvIFBhaXIgbWVhbnMgdGhhdCBhIHBsYXllciBob2xkcyB0d28gZGlmZmVyZW50IHBhaXJzLCBzdWNoIGFzIDMgMyBhbmQgSiBKLCBpbiB0aGUgc2FtZSA1IGNhcmQgaGFuZC4gClBheSBmb3IgYSBSZXNvdXJjZSBDb29yZGluYXRvciBpcyBkZWNlbnQgKHN0YXJ0cyBhdCAyNC43OC9ociBhbmQgdG9wcyBvdXQgYXQgMzEuNDIvaHIpLiAKQW5kIFdhbHNoLCBWLiAKSWYgSSBmZWVsIGxpa2UgdGhlIGNsaWVudCBpcyBub3QgbWFraW5nIHRoZSBwcm9ncmVzcyB0aGV5IHdhbnQsIHRoZW4geWVzLCB3ZSB0YWxrIGFib3V0IGl0LiAKV2h5IG5vdCBtYWtlIHRoZSByZXN0IG9mIGl0IGFtYXppbmcgYnkgeW91ciBvd24gd2lsbD8gOikuIApTb21ldGltZXMgeW91IGFyZSBpbiBhIHNpdHVhdGlvbiB0aGF0IHN1Y2tzIHNvIGJhZCB5b3UganVzdCBIQVZFIHRvIGdldCBvdXQuamdzamdzNSAgNCBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvT2ggSSBub3Qgc3VycHJpc2VkIGF0IGFsbC4gCkonaGFiaXRlIGxlcyBZdmVsaW5lcywgdW4gZGVzIGRwYXJ0ZW1lbnRzIGxlcyBwbHVzIHRvdWNocyBwYXIgbGEgbWFsYWRpZSBkZSBMeW1lLCBldCBqZSBzdWlzIGF0dGVpbnRlIGRlIGxhIG1hbGFkaWUgZGUgTHltZSAoc3VpdGUgIHVuZSBtb3JzdXJlIGRlIHRpcXVlIGRhbnMgbGVzIFl2ZWxpbmVzKSwgaW5mZWN0aW9uIGQnYXV0YW50IHBsdXMgdGVycmlibGUgcXUnZWxsZSBmYWl0IGwnb2JqZXQgZCd1biBzY2FuZGFsZXV4IGRuaSBlbiBGcmFuY2UsIGFsb3JzIHF1ZSBub3VzIHNvbW1lcyB2cmFpc2VtYmxhYmxlbWVudCBkZXMgbWlsbGlvbnMgZGUgRnJhbmFpcyAgdHJlIGF0dGVpbnRzIGRlIGJvcnJsaW9zZSBkZSBMeW1lLCB0cnMgZGlmZmljaWxlICB0cmFpdGVyIHF1YW5kIGVsbGUgZXN0IGNocm9uaXF1ZSBmYXV0ZSBkJ2F2b2lyIHQgZGlhZ25vc3RpcXVlICB0ZW1wcywgY2UgcXVpIGVzdCBsZSBjYXMgZGFucyBsJ2ltbWVuc2UgbWFqb3JpdCBkZXMgY2FzLCBlbiByYWlzb24gZGUgbCdpZ25vcmFuY2UgZGVzIG1kZWNpbnMgZXQgZGUgbCdhYnNlbmNlIGRlIGZpYWJpbGl0IGRlcyB0ZXN0cyB1dGlsaXNzIChkZXMgc3JvbG9naWVzLCBuZ2F0aXZlcyBkYW5zIGxhIHRycyBncmFuZGUgbWFqb3JpdCBkZXMgY2FzLCBkYW5zIGxhIG1lc3VyZSBvIEx5bWUgaW5oaWJlIGxlIHN5c3RtZSBpbW11bml0YWlyZSBldCBkb25jIGxhIHByb2R1Y3Rpb24gZCdhbnRpY29ycHMpLiAKTmF0dXJhbCBTdGVyb2lkIFNvbHV0aW9uIENvdWxkIEJlIE9uIEl0cyBXYXkgUGhvdG8gYnkganVsb3NzdG9jayBXaGVuIHlvdSBzaG9wIGZvciBzdXBwbGVtZW50cyBvdmVyIHRoZSBuZXh0IGZldyBtb250aHMsIGRvbid0IGJlIHN1cnByaXNlZCBpZiB5b3Ugc3RhcnQgdG8gc2VlIGxvdHMgb2YgcHJvZHVjdHMgY29udGFpbmluZyBleHRyYWN0cyBmcm9tIHRoZSBtdXN0YXJkIHBsYW50LiAKUm9iaW4gbmVlZHMgdG8gbGVhcm4gdG8gYmUgdnVsbmVyYWJsZSBhbmQgZGVwZW5kIG9uIHBlb3BsZSBpbiBhIGhlYWx0aHkgd2F5LCBMaWx5IGFuZCBNYXJzaGFsbCBzaG93Y2FzZSB0aGUgc3RydWdnbGVzIG9mIGZpbmRpbmcgInRoZSBvbmUiIHNvIHlvdW5nIHRoYXQgeW91IGhhdmVuJ3QgZm91bmQgeW91cnNlbGYgeWV0LCBhbmQgQmFybmV5IGlzIGV2ZXJ5dGhpbmcgd3Jvbmcgd2l0aCBob29rIHVwIGN1bHR1cmUuIApUaGUgR292ZXJub3IncyBrZXkgcG93ZXIgaXMgdG8gc2lnbiBvciB2ZXRvIGxlZ2lzbGF0aW9uLCBhbmQgdGhpcyBjYW4gYmUgb3ZlcnJpZGVuIGJ5IGEgMi8zIHZvdGUgaW4gYm90aCBjaGFtYmVycy4gCiJTZXZlcmFsIG9mIHRoZXNlIHN1c3BlY3RzIGVudGVyZWQgdGhlIEx1a2Zvb2sgamV3ZWxyeSBzdG9yZS4gVGhleSB3ZXJlIGFybWVkIHdpdGggc2xlZGdlIGhhbW1lcnMuIEl0IGxvb2tzIGxpa2UgdGhleSBzbWFzaGVkIHRocm91Z2ggc29tZSBvZiB0aGUgZ2xhc3MgY2FzZXMgb2YgdGhpcyBqZXdlbHJ5IHN0b3JlIGFuZCB0aGVuIGF0dGVtcHRlZCB0byBlc2NhcGUsIiBTZ3QuIENsaW50IFdoaXRuZXkgdG9sZCBDUDI0LgpUaGVyZSBhcmUgbWFueSBvbmxpbmUgc3RvcmVzIHRoYXQgc3BlY2lhbGl6ZSBpbiBzZWxsaW5nIHBva2VyIGNoaXBzIGFuZCBvdGhlciBnYW1pbmcgc3VwcGxpZXMsIGJ1dCBub3QgYWxsIG9mIHRoZW0gaGF2ZSB0aGUgcXVhbGl0eSBhbmQgdmFyaWV0eSB0aGF0IGlzIGltcG9ydGFudCB0byBoYXZlIHdoZW4gbWFraW5nIG9ubGluZSBwdXJjaGFzZXMuIApCb3VyZ2VvaXNpZSB3YXMgZWR1Y2F0ZWQsIGJ1dCBhbHNvIHNwb3J0aW5nLiAKQXNzdW1pbmcgdGhleSBoZWxkIGEgY2xlYXIgbWFqb3JpdHkgb2YgdGhlIGhhc2hpbmcgcG93ZXIsIHRoZXkgd291bGRuIHJlYWxseSBoYXZlIHRvIHdvcnJ5IGFib3V0IHRoYXQuIApQaHJlZCBpcyBjaGVja2VkIG91dCB3aXRoIHRoZSBibGFjayBtYXJrZXQgUlBHcyB0aGF0IGFyZSBzdHVmZmVkIGluIHRoZSBSViBzdG9yYWdlIGNvbXBhcnRtZW50cy4gCk9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmdzIHRoYXQgaXMgb2Z0ZW4gb3Zlcmxvb2tlZCBpcyB0aGF0IHRoZSBSdXNzaWEgTWFmaWEgaXMgcGFydCBhbmQgcGFyY2VsIG9mIFJ1c3NpYW4gaW50ZWxsaWdlbmNlLiBSdXNzaWEgaXMgYSBtYWZpYSBzdGF0ZS4gdGhhdCBpcyBub3QgYSBtZXRhcGhvci4gUHV0aW4gaXMgaGVhZCBvZiB0aGUgTWFmaWEuIFNvIHRoZSBmYWN0IHRoYXQgdGhleSBoYXZlIGJlZW4gb3BlcmF0aW5nIG91dCBvZiB0aGUgaG9tZSBvZiB0aGUgcHJlc2lkZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzIGlzIGRlZXBseSBkaXN0dXJiaW5nLgo0KSBDb29rIHRoZSBtYXJtYWxhZGUgdW50aWwgaXQgcmVhY2hlcyAxMDVDIG9uIGEgc3VnYXIgdGhlcm1vbWV0ZXIuIElmIHlvdSB3YW50IHRvIGJlIGRvdWJseSBzdXJlIGl0J3MgcmVhZHksIHBsYWNlIGEgc21hbGwgYW1vdW50IG9uIGEgcGxhdGUgYW5kIHJlZnJpZ2VyYXRlIGl0IHVudGlsIGl0J3MgY29vbCBidXQgbm90IGNvbGQuIApKRDogSSBkb24gZ2V0IG92ZXIgdGhlcmUgYXMgbXVjaCBhcyBJIGxpa2UgdG8uIApJdCBhZGRzIHN0cmVuZ3RoIGJ1dCBhbHNvIHByZXZlbnRzIHNoYXJwIGphZ2dlZCBzcGlrZXMgZnJvbSBmb3JtaW5nLi4gCkl0IHNheXMgYSBsb3QgYWJvdXQgeW91IHRoYXQgeW91IHNlZSB0aGUgcGVvcGxlIG9uIHRoZSBzaG93IGFzIGFuaW1hbHMgYXQgdGhlIHpvbyB3aXRoIHBlb3BsZSBnYXdraW5nIGF0IHRoZW0uIEluIHJlYWxpdHkgaXQncyBtb3JlIGxpa2UgdGhlaXIgc3RvcmllcyBiZWluZyByZWxheWVkIHRvIG1pbGxpb25zIG9mIHBlb3BsZSB3aG8gYXJlLCBtb3N0IG9mIHRoZSB0aW1lLCBnb2luZyB0aHJvdWdoIHRoZWlyIG93biBkYXkgdG8gZGF5IHN0cnVnZ2xlcyBhbmQgd2FudCB0byBzZWUgdGhlbSBzdWNjZWVkLgpUaGVuIEkgbm90aWNlZCB0aGF0IHRoZSBob21lbGFuZCBvZiBteSBjaGFyYWN0ZXIsIENoaW5hLCB3YXMgaW4gdGhlIG5ldmVyIGVuZGluZyBzdGF0ZSBvZiBjaXZpbCB3YXIuIApDb2R5IGNhdWdodCB1cCB0byBtZSByaWdodCBhZnRlciB0aGUgbGFzdCBhaWQgc3RhdGlvbi4gV2UgY2hhdHRlZCBmb3IgYSBzZWNvbmQgYW5kIEkgY29uZmlybWVkIHRoYXQgeWVzLCBpdCB3YXMgTXIuIApFdmVuIFNlb3VsIGhhcyBpdHMgb3duIGJlYXV0eSB3aXRoIHRoZSByaXZlciBhdCBuaWdodC4gCldlIHdpbGwgbm90IGNvbnNpZGVyIGFueSBxdWFsaWZpY2F0aW9uIHJlc2l0cyAgIGFwcGxpY2FudHMgYXJlIHJlcXVpcmVkIHRvIGFjaGlldmUgdGhlIG5lY2Vzc2FyeSBncmFkZXMgaW4gb25lIHNpdHRpbmcgdG8gZGVtb25zdHJhdGUgZXhjZXB0aW9uYWwgYWNhZGVtaWMgcGVyZm9ybWFuY2UuCkkgd291bGQgbm90IGFkdmljZSB5b3UgdG8gcGxheSBhIGNvbmRpIGhvbG8gYXMgaXQgaXMgb25lIG9mIHRoZSBtb3JlIGRpZmZpY3VsdCBidWlsZHMgdG8gbGVhcm4gdG8gYWN0dWFsbHkgcGxheSBnb29kKGFuZCBJIGFtIGFuIGVuZ2kgbWFpbikuIE15IGFkdmljZSBpZiB5b3VyIG5ldyB0byByYWlkcywganVzdCBtYWtlIHN1cmUgeW91ciBnb29kIGF0IHBvd2VyIGhvbG8sIGFuZCB3aGVuIHlvdSBnb3QgZW5vdWdoIGFzY2VuZGVkIGdlYXIgdG8gZ2VhciBhbm90aGVyIGNoYXJhY3RlciwganVzdCBwbGF5IGEgY29uZGkgc2hvcnQgYm93L3Nob3J0IGJvdyBzb3VsIGJlYXN0LiAKWWVhcnMgSSBoYXZlIGR5ZWQgbWluZSByYWRpY2FsbHkgZGlmZmVyZW50IGNvbG9ycyBhcyBhIHNvcnQgb2Ygc29jaWFsIGV4cGVyaW1lbnQgIHRyeWluZyB0byBkaXNydXB0IHRoZSBub3Rpb24gdGhhdCBhbnlvbmUgaGFzICJuYXR1cmFsbHkiIGJyaWdodCBibG9uZCBoYWlyIGJ5IGR5aW5nIGl0IGRhcmsgYnJvd24gdGhlIG5leHQgdGltZSwgb3IgcmVkLCBvciBzdHJhd2JlcnJ5IGJsb25kLiAKVGVjaG5pY2FsIGtub3dsZWRnZSBpcyBhbHNvIGdyZWF0LiBMaWtlIHJlYWxseSBncmVhdC4gClVzZSB0aGVtIGFzIHRyYW5zbWlzc2lvbiBiZWx0cyBmb3Igc29jaWFsaXNtIGFuZCBjdXJyZW50IENvbW11bmlzdCBwcm9wYWdhbmRhLiBTb2Z0ZW4gdGhlIGN1cnJpY3VsdW0uIEdldCBjb250cm9sIG9mIHRlYWNoZXJzIGFzc29jaWF0aW9ucy4gUHV0IHRoZSBwYXJ0eSBsaW5lIGluIHRleHRib29rcy5HYWluIGNvbnRyb2wgb2YgYWxsIHN0dWRlbnQgbmV3c3BhcGVycy5Vc2Ugc3R1ZGVudCByaW90cyB0byBmb21lbnQgcHVibGljIHByb3Rlc3RzIGFnYWluc3QgcHJvZ3JhbXMgb3Igb3JnYW5pemF0aW9ucyB3aGljaCBhcmUgdW5kZXIgQ29tbXVuaXN0IGF0dGFjay5JbmZpbHRyYXRlIHRoZSBwcmVzcy4gR2V0IGNvbnRyb2wgb2YgYm9vayByZXZpZXcgYXNzaWdubWVudHMsIGVkaXRvcmlhbCB3cml0aW5nLCBwb2xpY3ltYWtpbmcgcG9zaXRpb25zLkdhaW4gY29udHJvbCBvZiBrZXkgcG9zaXRpb25zIGluIHJhZGlvLCBUViwgYW5kIG1vdGlvbiBwaWN0dXJlcy5Db250aW51ZSBkaXNjcmVkaXRpbmcgQW1lcmljYW4gY3VsdHVyZSBieSBkZWdyYWRpbmcgYWxsIGZvcm1zIG9mIGFydGlzdGljIGV4cHJlc3Npb24uIApTdW4gQXJjaGl2ZXMgU2Vjb25kIGNsb3NlZCBtYXNzYWdlIHBhcmxvciBhbGxvd2VkIHRvIHJlb3BlbiAoNiAyMSAyMDA1KSBNYXNzYWdlIHN0dWRpbyBjbG9zZWQgZm9yIGFsbGVnZWQgcHJvc3RpdHV0aW9uIGFsbG93ZWQgdG8gcmVvcGVuICg2IDE1IDIwMDUpIEFsbCBleWVzIHdpbGwgYmUgb24gbG9vc2VyIG1hc3NhZ2Ugb3JkaW5hbmNlICgyIDQgMjAwMikKTWFuIEkgd2lzaCBJIHdhcyB3aGl0ZSBhbmQgcmljaCBhbmQgaGFkIGEgd2hpdGUgcmVwdWJsaWNhbiBhcHBvaW50ZWQgZW50aXRsZWQgcGllY2Ugb2Ygc2hpdCBqdWRnZSBzZW50ZW5jZSBtZS4gClNhZGllIChzb2JiaW5nKTogSXQgY29zdCBtZSAkMy4yIGJpbGxpb24gaW4gdGF4IGJyZWFrcyB0byBnZXQgYW55IHJlY29tbWl0bWVudCBhdCBhbGwhCkhvd2V2ZXIsIEkgY2Fubm90IGZpbmQgYW55IGRvY3VtZW50IHN0YXRpbmcgdGhpcyBjbGVhcmx5LiBUaGUgY2xvc2VzdCBpcyB0aGUgVCB0aGF0IHN0YXRlcyB0aGF0IDYgbW9udGhzIHZhbGlkaXR5IHN0YXJ0cyBmcm9tIGRhdGUgb2YgYXBwcm92YWwgb2YgYXBwbGljYXRpb24uCk9uIHMgcmVuZHUgbGEgY291cnNlIGRpZmZpY2lsZSwgZXQgYSByZW5kdSBsYSB2aWN0b2lyZSBlbmNvcmUgcGx1cyBhZ3IgU2kgbm91cyBuJ2F2aW9ucyBmYWl0IHF1ZSBnYWduZXIsIHBmZmZmZi4gU2kgbm91cyBuIHBhcyBwcmlzIGNldHRlIHAgZW4gZCBkZSBjb3Vyc2UsIHBldXQgIG4gcGFzIGdhZ24gSmUgbiBwYXMgY29uZHVpdCBsIGR1cmFudCB0b3V0ZSBsYSBjb3Vyc2UgZXQgbm91cyBuIHBhcyBwcmlzIGNlcyByaXNxdWVzIGZvdXMuIApJZiB5b3UncmUgbm90IGdlbmVyYXRpbmcgcmV2ZW51ZSBmb3IgYW55IG9mIHRoZSBwYXJ0aWVzIGludm9sdmVkIHRoZW4gdGhlcmUgaXMgbm8gaW5jZW50aXZlIHRvIHBhcnRpY2lwYXRlLiAKWW91J2xsIHNlZSBtYW55IG9mIHRoZSBwb2tlciBzdGFycyB0aGF0IGFyZSByZWd1bGFybHkgb24gVFYgYW5kIGlmIHlvdSBlbnRlciBzb21lIGJyYWNlbGV0IGV2ZW50cyB5b3UgbWF5IGJlIHBpdHRlZCBhZ2FpbnN0IHNvbWUgb2YgdGhlbS4gCi9tL2ZlZWRiYWNrL3ZpZXcvV2FycmlvcnMgVGhlIE5ldyBQcm9waGVjeSBNb29ucmlzZSBQZGYgRG93bmxvYWRnb2xrZXMgLiBBYXJhbnlhIEthYW5kYW0gRHZkcmlwIExvdHVzIEZyZWUgRG93bmxvYWQgVXlpcnZhbmkgVG9ycmVudHNpbnN0bWFuay4gCk1hc3NhZ2UgdGhlcmFweSBpcyBncmVhdCB3aGVuIHlvdSBhcmUgZW1vdGlvbmFsbHkgY2hhcmdlZCBmcm9tIGEgaGFyZCBkYXkgYXQgd29yaywgcGh5c2ljYWxseSB3b3JuIG91dCBmcm9tIHRvbyBtdWNoIGV4ZXJjaXNlLCBzdWZmZXJpbmcgZnJvbSBtaWdyYWluZXMsIHRyeWluZyB0byBxdWl0IHNtb2tpbmcgb3IganVzdCB0cnlpbmcgdG8gbWFpbnRhaW4gYSBoZWFsdGh5IGxpZmVzdHlsZSBieSB0YWtpbmcgZ29vZCBjYXJlIG9mIHlvdXIgYm9keS4gV2hldGhlciB5b3UgaGF2ZSBjaHJvbmljIGJhY2sgcGFpbiwgb3IgYXJlIHNpbXBseSB1c2luZyBpdCBhcyBhIHdheSB0byBrZWVwIHlvdXIgYm9keSB3b3JraW5nIGF0IGl0cyBiZXN0LCB0aGUgYmVuZWZpdHMgb2YgcmVndWxhciBtYXNzYWdlIGFyZSBlbmRsZXNzIS4gClRoZSBpcm9ueSwgb2YgY291cnNlLCBpcyB0aGF0IGJ5IHNlbmRpbmcgc28gbWFueSB5b3VuZyBtZW4gaW50byBwcmlzb24gd2UgYXJlIG9ubHkgcmVpbmZvcmNpbmcgZ2FuZyBjdWx0dXJlLCBhbmQgdGh1cywgZ2FuZyB2aW9sZW5jZS4gQW1lcmljYSwgZG9uIGZvcmdldCwgd2l0aCBsZXNzIHRoYW4gNSUgb2YgdGhlIHdvcmxkIHBvcHVsYXRpb24sIGluY2FyY2VyYXRlcyBhYm91dCAyNSUgb2YgdGhlIHdvcmxkIHByaXNvbmVycy4KVGphLCBtZWhyIGdpYnRzIG5pY2h0IHp1IHNhZ2VuLCBpc3QgYXVjaCBibG8gJ25lIEtsZWluc3RhZHQuMTAgS29taXRlZWxldXRlIGF1cyBEZXV0c2NobGFuZCwgTWFsdGEsIFJ1c3NsYW5kLCBEb21pbmljYSwgTm9yZGtvcmVhLCBBdXN0cmFsaWVuLCBLZW5pYSwgQWxnZXJpZW4sIEJyYXNpbGllbiB1bmQgVVNBIG1lbGRldGVuIHNpY2ggaW4gZWluZXIgVFYgU29uZGVyc2VuZHVuZyB6dSBXb3J0IHVuZCB2ZXJnYWJlbiBpaHJlIDMsIDUgdW5kIDcgUHVua3RlLiAKSXQncyBhIGxpdHRsZSBsb3cgZm9yIHlvdSB0byByZWFjaCBpbiB5b3VyIGN1cnJlbnQgcG9zaXRpb24sIHNvIG1ha2UgeW91ciB3YXkgdG93YXJkIGl0IGFuZCBsYW5kIG9uIHRoZSBuZWFyZXN0IHBsYXRmb3JtL21ldGFsIGxhbmQgYW5kIHRoZW4ganVtcCBpbnRvIHRoZSBmYW4gYW5kIHRyeSB0byBkcmlsbCBkb3duIHRvIGdldCBpdC4gMikuIApMZSBkY29yICBmb3J0IHZpZXJnZSAgZXN0IGh0aXZlbWVudCBlc3F1aXNzIHBhciBNYXJpamFjLiBMZSBsZXR0cmFnZSBhdXNzaS4gCjY3dGggU3QuOyAyIEUuIApUaGVyZSBwbGVudHkgbW9yZSBhbmQgd29ydGggYSByaWRlIHRvIHRoZSBlbmQgb2YgdGhlIE5vLiAKSG93IG1hbnkgcGVvcGxlIGluIHRoZSBVUyBwbGF5IG9ubGluZSBwb2tlcgpJIGNhbiBjb3VudCB0aGUgbnVtYmVyIG9mIHRpbWVzIHRoYXQgc29tZW9uZSBoYXMgc2tpcHBlZCBvdmVyIGEgbG9uZyBjb21tZW50IGZyb20gdGhlIE9QIGFib3V0IGhvdyB0aGlzIHBlcnNvbiBmb2xsb3dzIHRoZW0gYXJvdW5kIGFuZCB3cml0ZXMgdGhlbSBjcmVlcHkgbm90ZXMgb25seSB0byB3cml0ZSAiYnV0IGhlIG9ubHkgdGV4dGVkIHlvdSBvbmNlISIuIEV2ZW4gaWYgdGhlcmUgaXMgbm8gbG9uZyBjb21tZW50IGZyb20gdGhlIE9QLCB3ZSBkb24ga25vdyB0aGUgd2hvbGUgc3RvcnkuLiAKSSB3YXMgcmVhbGx5IHRhbGwgaW4gSnIgSGlnaC4gT25lIG9mIG15IGJlc3QgZnJpZW5kcyBhdCB0aGUgdGltZSB3YXMgcHJldHR5IHNob3J0LCBhbmQgd2UgaGFkIGEgcnVubmluZyBqb2tlIHdoZXJlIGhlIHdvdWxkIHVzZSBhIGxpdHRsZSBraWQgdm9pY2Ugd2hlbmV2ZXIgc3RhbmRpbmcgbmV4dCB0byBtZSwgYmVjYXVzZSBJIHdhcyBzbyBtdWNoIHRhbGxlci4KTG9vc2UgZW5kcyAgOSBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvCkt5bGllIEplbm5lciBqdXN0IGJlY2FtZSB0aGUgd29ybGQKV2hhdCBJIGRpZG4ndCBsaWtlOiB0aGUgb3RoZXIgdHJlYXRtZW50cyBhcmUgb2ZmZXJlZCB0aHJvdWdob3V0IHRoZSB5b2dhIHByYWN0aWNlLCB0aGVyZSBpcyBubyBwZXJmZWN0IHRpbWluZyB0byBwYXVzZS4gSSB3YXMgYnVtbWVkIHRoYXQgSSBnb3QgdG8gc3RyZXRjaCBvbmx5IHRoZSBoaXAgb24gbXkgcmlnaHQgc2lkZSwgbm90IHRoZSBsZWZ0IHNpZGUgKHRoYXQgd291bGQgbm9ybWFsbHkgZHJpdmUgbWUgY3JhenkpLCBidXQgSSBxdWlja2x5IGZvcmdvdCB3aGVuIHRoZSBtYXNzYWdlIHRoZXJhcGlzdCBhcHBsaWVkIGVzc2VudGlhbCBvaWxzIHRvIG15IG5lY2sgYW5kIGxvd2VyIGJhY2sgYW5kIGJlZ2FuIHJ1YmJpbmcgbXkgc2hvdWxkZXJzLgpTYWxlcyBleHBlY3RlZGx5IGRyb3BwZWQgZHVyaW5nIHRoZSByZWNlc3Npb24sIGJ1dCBib3RoIHRoZSBzZW1pIGx1eHVyeSBhbmQgbHV4dXJ5IGJyYW5kcyBJIHdvcmtlZCBmb3IgY29udGludWVkIHRvIGV4cGVyaWVuY2UgZGVjbGluaW5nIHNhbGVzIGV2ZW4gYXMgdGhlIGVjb25vbXkgcmVjb3ZlcmVkLiBJIGNhbid0IHBpbnBvaW50IGV4YWN0bHkgd2h5IHRoYXQgaXMsIGJ1dCBJJ20gZ3Vlc3NpbmcgaXQncyBiZWNhdXNlIG1pbGxlbm5pYWxzIGFyZSBzdGlsbCBtdWNoIHBvb3JlciB0aGFuIHRoZWlyIHByZWRlY2Vzc29ycyBhbmQgZG9uJ3QgaGF2ZSB0aGUgZXhjZXNzIGluY29tZSB0byBzcGVuZCBvbiBwcmljeSBmYXNoaW9uIHdoZW4gdGhlcmUgaXMgYSBjb21wYXJhYmxlIGNoZWFwZXIgb3B0aW9uLiBTbyB0aGVzZSBjb21wYW5pZXMgYXJlIHByb2R1Y2luZyBsZXNzIGV4cGVuc2l2ZSBwaWVjZXMsIGtlZXBpbmcgc2ltaWxhciByZXRhaWwgcHJpY2VzLCBidXQgcGxhbm5pbmcgdG8gbWFrZSBhIHByb2ZpdCBldmVuIHdoZW4gdGhlaXIgbWVyY2hhbmRpc2UgaXMgaW4gZGVlcCBkaXNjb3VudC4uIApJIGhhdmUgYSBmZXRpc2gsIGFuZCBhbnkgbWVudGlvbiBvZiB0aGUgc3ViamVjdCB3aWxsIG1ha2UgbWUgY3JhdmUgaXQuIEkgaW1hZ2luZSB0aGlzIGl0IGlzIGxpa2UgdG8gYmUgc2V4dWFsLCBleGNlcHQgd2l0aCB0aGUgZGVzaXJlIGZvciB0aGUgYWN0IG9mIHNleCByYXRoZXIgdGhhbiBteSBvd24ga2lua3MuClRoZXkgYXJlIHZlcnkgdmVyeSBkaWZmZXJlbnQgcGVyc29uYWxpdGllcyBvbiB0d2l0Y2guIApFaXRoZXIgdGhhdCBvciB5b3UgZ2V0IHRoZSBXYXRjaGVycywgd2hvIGFyZSBhIG1lc3Mgb2YgdGVudGFjbGVzIGF0dGFjaGVkIHRvIHdoYXQgSSBwcmVzdW1lIHRvIGJlIGEgWWV0aS4uIApUaGF0ICJjb21tb24gc2Vuc2UiIHdvcmQgaXMgb25lIFBhbGluIHV0dGVyZWQgc2V2ZXJhbCB0aW1lcyBkdXJpbmcgaGVyIHNwZWVjaC4gCkFuZCBoZSBpbmNyZWFzZWQgaGlzIGJldHRpbmcgZHJhbWF0aWNhbGx5LCAiIHNoZSBzYWlkLiAKVGhlaXIgbXVzY2xlcyBhcmUgc3Ryb25nZXIsIHRoZWlyIHNvZnQgdGlzc3VlcyBhbmQgam9pbnQgc3VyZmFjZXMgY2FuIGRlYWwgd2l0aCBncmVhdGVyIGxvYWRzLCBldGMuLiAKIldlIGJlbGlldmUgaW4gd2hhdCB3ZSBhcmUgZG9pbmcsIGFuZCBpdCBpcyBhIGRpZmZlcmVudCB3YXkgb2YgbGlmZSBpbiBJbmRpZ28gU2hpcmUgYmVjYXVzZSB3ZSBkb24ndCBoYXZlIHBva2VyIG1hY2hpbmVzLCIgdGhlbiBJbmRpZ28gbWF5b3IgSmVubnkgRGFsZSBzYWlkLgpUaGUgc3R1ZHksIHB1Ymxpc2hlZCBpbiAyMDA5IGluIHRoZSBqb3VybmFsIENhcmRpb3Zhc2N1bGFyIERpYWJldG9sb2d5IFsxXS4gSW4gdGhpcyBzdHVkeSwgMTMgbWVuIGFuZCB3b21lbiB3aXRoIHR5cGUgMiBkaWFiZXRlcyBhdGUsIG9uIHNlcGFyYXRlIG9jY2FzaW9ucywgdHdvIGRpZmZlcmVudCBkaWV0cywgZWFjaCBmb3IgdGhyZWUgbW9udGhzLgpIZSBiZXR0ZXIgaG9wZSB0byB3aW4gb3RoZXJ3aXNlIGhlIGlzIGdvbm5hIGJlIHNwZW5kaW5nIGhpcyB0aW1lIGluIGphaWwgZm9yIGNoZWF0aW5nIHRheHBheWVycyBvdXQgb2YgbWlsbGlvbnMgb2YgZG9sbGFycy4uIApCdXQgdGhlIGRpZmZlcmVuY2UgaXMgd2hpdGUgQW1lcmljYW5zIGFyZW4ndCBhcyBoZWF2aWx5IHBvbGljZWQuIApXaGljaCB0b29scyB3b3VsZCB5b3UgdXNlIGluIG9yZGVyIHRvIGJlIHVuZGVyc3Rvb2Q/IEluIERhc2FuJ3Mgd29ybGQsIHRoZXNlIHRvb2xzIGFyZSBwYXJ0IG9mIGEgZGFpbHkgcHJhY3RpY2UuIFlvdSB3aWxsIGJlIHN1cnByaXNlZCBieSBob3cgc2ltaWxhciB0aGVzZSB0b29scyBhcmUgYmV0d2VlbiBzb21lb25lIGFmZmVjdGVkIGJ5IEF1dGlzbSBhbmQgc29tZW9uZSBzdWZmZXJpbmcgZnJvbSBMYXJ5bmdpdGlzLiBIZXJlIGlzIGhvdyB0byBjb21tdW5pY2F0ZSB3aXRoIGEgbm9uIHZlcmJhbCBjaGlsZC4uIApOb3cgZG9uJ3QgZ2V0IG1lIHdyb25nLCBzb21lIGNvbW11bml0aWVzIGFyZSB2YXN0bHkgYWR2YW5jZWQsIGVkdWNhdGVkLCBhbmQgY2F1dGlvdXNseSBvcGVuIG1pbmRlZC4gQnV0IHlvdSBnbyB0b3dhcmRzIHZpbGxhZ2VzIGFuZCBjcm93ZGVkIGNpdGllcywgeW91J2xsIGZpbmQgb25lIHRvbyBtYW55IGZ1Y2tlZCB1cCBzdG9yaWVzIGxpa2UgaG9ub3Iga2lsbGluZ3MuIApTdWNoIGFzIHRoZSBHcmFuZCBPbGUgT3ByeSwgUnltYW4gQXVkaXRvcml1bSwgT3ByeSBNaWxscyBNYWxsLCBDb3VudHJ5IE11c2ljIEhhbGwgb2YgRmFtZSwgTmFzaHZpbGxlIFpvbyBhbmQgdGhlIE5pc3NhbiBTdGFkaXVtIGhvbWUgb2YgdGhlIFRlbm5lc3NlZSBUaXRhbnMuIFdlIHN1cnBhc3MgaG90ZWxzIG5lYXIgdGhlIE5hc2h2aWxsZSBBaXJwb3J0IGluIG9uIHNpdGUgc2VydmljZSBhcyB3ZWxsLkRlYXIgYW5pdGFnam9uZXMsIEF3d3cgc2h1Y2tzISBZb3UgYXJlIG1ha2luZyB1cyBibHVzaCEgV2hhdCBhbiBhd2Vzb21lbHkgZGV0YWlsZWQgcmV2aWV3ISBXZSBjYW5ub3QgYmVnaW4gdG8gZXhwcmVzcyBvdXIgZ3JhdGl0dWRlIHRvIHlvdSBmb3IgdGFraW5nIHRoZSB0aW1lIHRvIHdyaXRlIHRoaXMhIFNpbmNlIHdlIGhhdmUgZXN0YWJsaXNoZWQgdGhpcyBpcyB5b3VyIGdvIHRvIGhvdGVsLCBkbyBub3QgaGVzaXRhdGUgdG8gYXNrIHVzIGlmIHRoZXJlIGlzIEFOWVRISU5HIHlvdSBuZWVkLiBDbGVhcmx5LCB5b3Uga25vdyB5b3UgY2FuLiAKVGhlIHlvdW5nIGxhZHkgc2FpZCBzaGUgd2FzIHNvcnJ5IGFuZCBkaWRuIHdhbnQgdG8gbG9zZSBtZSBhcyBhIGN1c3RvbWVyIHNvIHRoZXkgd291bGQgb2ZmZXIgbWUgcHJpY2UgcHJvdGVjdGlvbi4gCkkgY2F1Z2h0IGEgMiBpbmNoIHRlYXIgb24gdGhlIG91dHNpZGUgYnJvYWQgcG9ydGlvbiBvZiB0aGUgaGlwIGJlbHQgb24gbXkgbGVmdCBzaWRlIGl0IGRpZG4ndCBicmVhayB0aGUgZm9hbSB1bmRlcm5lYXRoIG5vciB0aGUgYmFjayBzaWRlIHNvIEkganVzdCBsZXQgaXQgcmlkZSB0aWxsIHRoZSBlbmQuIEFsc28gaGFkIGEgc21hbGwgdGVhciBuZWFyIHRoZSBzZWFtIG9mIG9uZSBvZiB0aGUgc2hvdWxkZXIgc3RyYXBzIGJ1dCBub3QgZGlyZWN0bHkgb24gdGhlIHNlYW0uIApBbHRob3VnaCB5b3UgY2FuIGFsc28gY291bnQgeW91ciBpbnZlbnRvcnkgdHVybm92ZXIgaW4gdGVybXMgb2YgdGhlIHJldmVudWUgZ2VuZXJhdGVkIHdoZW4gaXRlbXMgYXJlIHNvbGQsIHRoaXMgaXMganVzdCBvbmUgb3V0IG9mIGEgcmFuZ2Ugb2YgdmFyaWFibGVzIGFuZCBwYXJhbWV0ZXJzIGZvciBldmFsdWF0aW5nIGludmVudG9yeSB0dXJub3ZlciBwZXJmb3JtYW5jZS4uIApOZXh0IGRheSB3ZSBsb29rZWQgbnRvIHJlbnRuZyBhIGNhciwgd2hjaCBzIHdoYXQgSSBkZCBzeCB5ZWFycyBhZ28uIApVbmlmaSBjb250cm9sbGVyIG9uIHRoZSBvdGhlciBoYW5kIGlzIGEgZGlzZ3VzdGluZywgamF2YSBiYXNlZCB0dXJkIG9mIGEgc29mdHdhcmUgc29sdXRpb24uU2hvcnQgc3Rvcnkgb2YgbXkgcmVjZW50IHBlcnNvbmFsIGV4cGVyaWVuY2Ugdy8gVW5pZmkgY29udHJvbGxlcjogQWZ0ZXIgMiBob3VycyBvZiBmaWdodGluZyB0byBnZXQgaXQgd29ya2luZyB3ZWxsIG9uIGEgV2luZG93cyBzZXJ2ZXIgVk0gKGp1c3Qgd2FudGVkIGl0IHRvIHJ1biBhcyBhIHNlcnZpY2Ugc3RhcnQgYXV0b21hdGljYWxseSkuIApPbiBteSB3YXkgdG8gYSBtYWluIHF1ZXN0IG1pc3Npb24sIEkgd2FzIGFsZXJ0ZWQgdG8gYSBtdWx0aXBsYXllciBvcHBvcnR1bml0eSBhbmQgdG9vayBpdC4gRXZlcnl0aGluZyBmbG93cyBzZWFtbGVzc2x5IGFuZCBqdXN0IGxpa2UgdGhhdCBJIHdhcyBpbiBhIHNvcnQgb2YgaGlkZSBhbmQgc2VlayBtYXRjaC4gTXkgb3Bwb25lbnQgd2FzIGhhY2tpbmcgbWUgYW5kIEkgaGFkIHRvIGZpbmQgYW5kIGVsaW1pbmF0ZSBoaW0uLiAKVGhlIHJlc3RhdXJhbnQgc2NlbmUgaXMgZWNsZWN0aWMgYW5kIHJlYWxseSBzb21ldGhpbmcuIApTbyB3ZSBkbyB3b3JyeSBhYm91dCB0aGluZ3MgbGlrZSBuYWlscywgYmFyYmVkIHdpcmUsIGJhc2ljYWxseSBzaGFycCB0aGluZ3MgdGhhdCBhcmUgZGlydHkgYW5kIG9sZCBhbmQgdGhlcmVmb3JlIG9mdGVuIGhhdmUgcnVzdCwgYW5kIGNhbiBwdW5jdHVyZSBkZWVwIGluc2lkZSB5b3UgbWFraW5nIGl0IGRpZmZpY3VsdCB0byBwcm9wZXJseSBjbGVhbiBvdXQgdGhlIHdvdW5kLiBCdXQgdGhlIHJ1c3QgaXRzZWxmIGlzIG5vdCB0aGUgaXNzdWUuIEEgbGl0dGxlIHNoYWxsb3cgc2NyYXBlIGhlcmUgYW5kIHRoZXJlLCBldmVuIG9uIHJ1c3R5IHRoaW5ncywgaXMgcHJvYmFibHkgbm8gYmlnIGRlYWwuLiAKTGl2ZSByb2NrIG11c2ljIHB1bW1lbHMgdGhlIGFpciwgbWFydGluaXMgZmxvdywgYW5kIHRoZSBzbG90IG1hY2hpbmVzIGFuZCBibGFja2phY2sgdGFibGVzIGFyZSBqYW1tZWQgd2l0aCBob3BlZnVsIGdhbWJsZXJzLiBJdCdzIGp1c3QgNzozMCBvbiBhIFNhdHVyZGF5IG5pZ2h0IGF0IHRoZSBTZW1pbm9sZSBIYXJkIFJvY2sgSG90ZWwgQ2FzaW5vIGluIEhvbGx5d29vZCwgRmxhLiwganVzdCBub3J0aCBvZiBNaWFtaSwgYW5kIGNhcnMgYXJlIGNsb2dnaW5nIFN0YXRlIFJvYWQgNyBiZWxvdyB0aGUgU2VtaW5vbGUgSGFyZCBSb2NrJ3MgZ2xvd2luZyB0b3dlcnMsIHJlYWR5IHRvIGRpc2dvcmdlIGV2ZW4gbW9yZSBwbGF5ZXJzLi4gCkkgYW0gaW4gdGhlIHByb2Nlc3Mgb2Ygc2V0dGluZyB1cCBhIFNwZWNpYWwgTmVlZHMgVHJ1c3QgZm9yIG15IG1vdGhlciAod2l0aCBoZXIgYXNzZXRzLCBub3QgbWluZSkgdG8gcHJldmVudCBoZXIgZnJvbSBsb3NpbmcgYmVuZWZpdHMgd2hlbiBzaGUgdHVybnMgNjUgaW4gTWF5IChhcHBhcmVudGx5IHRoYXQncyBhIHRoaW5nIGluIE1BICBhc3NldCBsaW1pdHMgZG9uJ3QgYXBwbHkgdG8gdGhvc2Ugb24gU1NESSB1bnRpbCBhZ2UgNjUpLiBXaGlsZSB0aGF0IHNwZWNpZmljIGF2ZW51ZSBwcm9iYWJseSB3b3VsZG4ndCBhcHBseSwgdGhlcmUgYXJlIHNpbWlsYXIgc2NlbmFyaW9zIGZvciBhIHZhcmlldHkgb2Ygc2l0dWF0aW9ucyBzdXJyb3VuZGluZyBkaXNhYmlsaXR5LiAKRGVhciBBY3RpbmcgQXR0b3JuZXkgR2VuZXJhbCBXaGl0YWtlcjoKV2Ugc3RpbGwgdXNlIHRoYXQgb25lLCB0b28sIHRvIG1lYW4gIkknbGwgdGFrZSBzb21lIGNoZWVzZSBbb24gbXkgZm9vZF0iLi4gClRvZGF5IElHVCBhbmQgQmFsbHkncyBib3RoIHByb2R1Y2UgdmlkZW8gcG9rZXIgbWFjaGluZXMsIGFuZCB0aGVpciBtYWNoaW5lcyB0YWtlIHVwIG1vc3Qgb2YgdGhlIGZsb29yIHNwYWNlIGRldm90ZWQgdG8gZWxlY3Ryb25pYyBnYW1pbmcgZGV2aWNlcyBhY3Jvc3MgdGhlIGNvdW50cnkuLiAKRm9yIHRoZSBmaXJzdCA3IHllYXJzIG9mIG15IGNoaWxkIGxpZmUsIEkgd2FzIGhpcyBvbmx5IHBhcmVudC4gCkEgbW90b3JjeWNsZSByYWNlciBmb3IgYSBzaG9ydCB3aGlsZSwgTXIuIE1heSBzb2xkIGhpcyBiaWtlIGFuZCB1c2VkIHRoZSBwcm9jZWVkcyB0byBvcmRlciBhbiBpbml0aWFsIHJ1biB0byBnYXVnZSBpbnRlcmVzdCBpbiB0aGUgcHJvZHVjdC4gT25lIG9mIHRoZSBmaXJzdCBzdG9yZXMgdG8gY2FycnkgaXQgd2FzIGF0IGhpcyB1bml2ZXJzaXR5LiBUaGUgc2Nob29sIHByb21vdGVkIGl0IGluIGl0cyB1bml2ZXJzaXR5IG5ld3NwYXBlciwgd2hpY2ggbGVkIHRvIENCQyByYWRpbyBwaWNraW5nIHVwIG9uIGl0LCB3aGljaCB0aGVuIGxlZCB0byBhIGZyb250IHBhZ2UgYXJ0aWNsZSBpbiB0aGUgT3R0YXdhIENpdGl6ZW4uIGtlcHQgc25vd2JhbGxpbmcuIHRoZSBzYW1lIHRpbWUsIE1yLiBNYXkgc3RhcnRlZCBlbnRlcmluZyBhbmQgd2lubmluZyB1bml2ZXJzaXR5IGJ1c2luZXNzIGNvbXBldGl0aW9ucywgaW5jbHVkaW5nIG9uZSBzdHVkZW50IERyYWdvbnMnIERlbiBwaXRjaCBjb21wZXRpdGlvbiwgd2hpY2ggZ2F2ZSBoaW0gYSB0aWNrZXQgdG8gc2tpcCB0aGUgYXVkaXRpb24gcHJvY2VzcyBhbmQgZ28gZGlyZWN0IHRvIGZpbG1pbmcuCkp1c3QgYmVjYXVzZSB5b3UgYXJlIGdvaW5nIHRoZSBzcGVlZCBsaW1pdCBkb2VzbiBtZWFuIHlvdSBjYW4gc2l0IHRvIHRoZSBsZWZ0IGJlY2F1c2Ugb3RoZXIgZHJpdmVycyBzaG91bGRuIGJlIGdvaW5nIGZhc3RlciB0aGFuIHlvdS4gCkJ5IG94aWRpemluZyBvciBuaXRyaWRpbmcgaXQgaXQgY2FuIGJlIG1hZGUgaW50byBhbiBpbnN1bGF0b3IuIEluIG1ha2luZyBtb2Rlcm4gY2hpcHMsIGEgbGFyZ2UgZG9wZWQgY3J5c3RhbCBvZiBzaWxpY29uIGFib3V0IDQgZmVldCBsb25nIGFuZCBhIGZvb3QgaW4gZGlhbWV0ZXIgaXMgZ3Jvd24sIHRoZW4gc2xpY2VkIHdpdGggZGlhbW9uZCBzYXdzIGludG8gMSBmb290IGRpYW1ldGVyIDAuNSBtbSB0aGljayB3YWZlcnMuIApXaGF0IGNhbiB3ZSBzYXkgZXhjZXB0IHRoaXMgaXMgdG9ucyBvZiBmdW4uLiAKQSByZXZpZXcgb2YgdGhlIGxvZyBib29rIGluZGljYXRlcyB0aGF0IG5laXRoZXIgLiBXaGVuIGEganVyeSBpcyBzZXF1ZXN0ZXJlZCBpdCBpcyBkb25lIGZvciBzZWN1cml0eSByZWFzb25zIHRvIG1ha2Ugc3VyZSB0aGUganVyeSBpcyBub3QgcHJlanVkaWNlZCBieSBhbnkgb3V0c2lkZSBpbmZsdWVuY2VzLiBUaGlzIGFjdGlvbiB0YWtlbiBieSB0aGUgY291cnQgaXMgdmVyeSBzZXJpb3VzIGFuZCBhIGdyZWF0IGFtb3VudCBvZiB0cnVzdCBpcyBwbGFjZWQgaW4gdGhlIG9mZmljZXJzIHdvcmtpbmcgdGhlIHNlY3VyaXR5IGRldGFpbC4KU2hvcnRnaXJsd2hvdHJpZXMyN0YgNScwIiBTVzogMTk0IENXOjE3NSBHVzoxNDAKRm9yIHRoZSBUZXhhcyBIb2xkJ2VtIGxvdmVycywgZmVsdCBibGFja2phY2sgdGFibGUgbGF5b3V0cyBhcmUgZGVmaW5pdGVseSB0aGUgYmVzdCBjaG9pY2VzLiBUaGVzZSB0YWJsZXMgYWxsb3cgdGhlIHBsYXllcnMgdG8gcGxheSB0aGUgdHJhZGl0aW9uYWwgcG9rZXIgZ2FtZXMgd2l0aCBUZXhhcyBIb2xkJ2VtIGdhbWUgb24gdGhlIHNhbWUgbWluaSBjYXNpbm8uIApIaWxhcnkgaXMgYSBoeXBvY3JpdGUuIApMbyBhbmQgYmVob2xkLCBzaGUgZm9sbG93ZWQgdXMgYW5kIHN0YXJ0ZWQgY2hhdHRpbmcgdXMgdXAgYWJvdXQgZ2FtZXMuIApUaGF0IHBvaW50IHdhc3JlaXRlcmF0ZWQgcmVjZW50bHkgaW4gdHdvIHN0dWRpZXMscHVibGlzaGVkIGluVGhlIEJyaXRpc2ggSm91cm5hbCBvZiBTcG9ydHMgTWVkaWNpbmVhbmRpbiBEaWFiZXRvbG9naWEsIGEgam91cm5hbCBvZiB0aGVFdXJvcGVhbiBBc3NvY2lhdGlvbiBmb3IgdGhlIFN0dWR5IG9mIERpYWJldGVzLgpXaGF0IHdlICdzaG91bGQnIGRvIGJ5IHRoYXQgaXMgc3RhbmQgdG8gZ2FpbiBjb21wZXRpdG9ycyBhcyBpdCBpbmV2aXRhYmx5IGFsbG93cyBjb3N0cyB0byBiZSBwZWdnZWQgYW5kIHJlbGlhYmlsaXR5IHJlbGF0aXZlbHkgYXNzdXJlZC4gCkkgY29uZmVzcywgdGhlIGZlbWluaXN0IGJvbmEgZmlkZXMgb2YgZm9yIGhlciBjaWdhcmV0dGVzIGRpZCBub3QgYmVjb21lIG1vcmUgY2xlYXIgdG8gbWUgd2l0aCBhZ2UuIEkgZmVsdCB0aGUgc2FtZSBxdWVhc3kgYmVmdWRkbGVtZW50IGxhc3Qgd2VlayB3aGVuIHRoZSBvZmZpY2lhbCBndWFyZGlhbnMgb2YgdGhlIEZyZW5jaCBsYW5ndWFnZSBmaW5hbGx5IGFncmVlZCB0byByZWNvZ25pemUgZmVtaW5pbmUgdmVyc2lvbnMgb2YgZ2VuZGVyZWQgam9iIHRpdGxlcy4KTm9uIGhhIGltcG9ydGFuemEgY2hlIHBvaSBpbCBTb2xlIHNwbGVuZGEgbyBjb250aW51aSBhIHBpb3ZlcmUsIHBlciBpbnRlbmRlcmNpLiBMYSBnaW9pYSBkaSBkYXJlICBsYSBzb2xhIGx1Y2UgY2hlIGJhc3RhIGEgc2Ugc3Rlc3NhLiBJbCByZXN0bywgYXZ2ZXJyIHBlciBjb21wbGljaXQgdW5pdmVyc2FsZSwgbWEgbm9pIG5vbiBkb2JiaWFtbyBwZW5zYXJjaS4uIAphcmVhIHNlbnNhdGlvbiBnZXRzIGVhcmx5IGVudHJ5IGludG8gT250YXJpbyBIb2NrZXkgTGVhZ3VlIGRyYWZ0ClRoYXQgcmlnaHQuIApNcyBTb3VicnksIGEgY3JpbWluYWwgYmFycmlzdGVyLCBoYXMgc2FpZCBNUHMgc2hvdWxkIG5vdCB0b2xlcmF0ZSB2aWxlIGFidXNlLiAKVGhlIGJhZCBuZXdzIGFnYWluLCB0aG91Z2gsIGlzIHRoYXQgaXQgZG9lc24gc2VlbSB0byBhdHRhY2sgdGhlIG1vdG9yIG5ldXJvbnMgaW4gaHVtYW5zLiBUaGF0IHdvdWxkIHRlbmQgdG8gaW5kaWNhdGUgdGhhdCB0aGUgcGFyYWx5c2lzIGlzIGVudGlyZWx5IHBhaW4gZHJpdmVuLiAKVGhlIGJlbmVmaXRzIG9mIG1hc3RlcmluZyBibGFja2phY2sgYXJlIG1vcmUgcmV3YXJkaW5nIHRoYW4gbW9zdCBwZW9wbGUgaW1hZ2luZS4gVGhlIHRpbWUgaW52ZXN0ZWQgaW4gbGVhcm5pbmcgdGhlIGdhbWUgYW5kIGJsYWNramFjayBzdHJhdGVneSBwcm9kdWNlcyBhIGZlZWxpbmcgb2YgZXhlcmNpc2luZyB0aGUgbWluZCB3aGlsZSBhdCB0aGUgc2FtZSB0aW1lIGVuYWJsaW5nIGEgcGxheWVyIHRvIHRha2UgaG9tZSBhIGxpdHRsZSBxdWljayBwYXkgZGlydCAgIGEgZ3JlYXQgbW9uZXRhcnkgcmV3YXJkIGZvciBhIGZldyBoYW5kcyBvZiBmdW4gY2FyZCBwbGF5aW5nLgpGaXJzdCBvZiBhbGwsIHRoZXJlIG5vIHN1Y2ggYXMgZXZvbHZlZCBzcGVjaWVzICAgZXZlcnkgc3BlY2llcyBpcyBlcXVhbGx5IGV2b2x2ZWQgZm9yIHRoZSBuaWNoZSB0aGV5IGZpbGwuIApVbml2ZXJzaXR5IG9mIEhvdXN0b24gY29sbGVnZSBkcmlua2luZyByYXRlcyBhcmUgYWN0dWFsbHkgbG93ZXIgdGhhbiBtb3N0IGNvbGxlZ2VzLCB3aXRoIHN0dWRlbnRzIHJlcG9ydGluZyB0aGF0IHRoZXkgY29uc3VtZSBhcHByb3hpbWF0ZWx5IDMuNSBkcmlua3MgcGVyIHdlZWsgY29tcGFyZWQgdG8gYSBuYXRpb25hbCBhdmVyYWdlIG9mIGFib3V0IDYuNS4gSW4gMjAxNCBVSCB3YXMgbmFtZWQgaW4gdGhlIHRvcCAyMCBzY2hvb2xzIGxpc3QgY29tcGlsZWQgYnkgdGhlIFByaW5jZXRvbiBSZXZpZXcuIE5laWdoYm9ycyBjYW4gdXNlIHRoYXQgYXMgYSBmaXJzdCBsaW5lIGRlZmVuc2UgdG8gZGlzY291cmFnZSB5b3VuZ2VyIHN0dWRlbnRzIGJ5IHVzaW5nIHBlcnNvbmFsaXplZCBub3JtYXRpdmUgZmVlZGJhY2suLiAKSSBmaW5kIG1vc3QvbWFueSBvZiB0aGUgcGVvcGxlIGFyZSBwcmV0dHkgaW5zcGlyaW5nIG9uIHRoZSBzaG93IChpdCBpcyBvZnRlbiB0aGUgZW5hYmxpbmcgZmFtaWx5IEkgZmluZCBtb3N0IGJvdGhlcnNvbWUgYXMgc29tZSBhcmUgZmVlZGVycyBhbmQgbWFuaXB1bGF0b3JzKS4gVGhlcmUgYXJlIGEgZmV3IG1ham9yIHRyYWluIHdyZWNrcyB0aGF0IEkgZW5qb3kgImhhdGUgd2F0Y2hpbmciIGJ1dCBvdmVyYWxsIGluIGFsbCB0aGUgc2Vhc29ucyBJIGhhdmUgc2VlbiAod2hpY2ggaXMgbW9zdCBvZiB0aGVtKSB0aGVyZSBhcmUgbW9yZSB5b3UgcmVhbGx5IHJvb3QgZm9yIHRoZW4gbm90LiAKVGhlIEFya2Fuc2FzIEZhbWlseSBDb3VuY2lsIGlzbid0IHJpZ2h0IG9mdGVuIGluIG91ciBlZGl0b3JpYWwgdmlldyAgIGFuZCBkb3ducmlnaHQgbWVhbiBzcGlyaXRlZCBpbiB0aGUgcHJvY2VzcyBmb3IgYW4gb3JnYW5pemF0aW9uIHB1dGF0aXZlbHkgZm91bmRlZCBvbiBCaWJsaWNhbCBwcmluY2lwbGVzICAgYnV0IHdlJ2xsIGdpdmUgY3JlZGl0IHdoZXJlIGR1ZS4gUG9rZXIsIGJsYWNramFjayBhbmQgc2xvdCBtYWNoaW5lcyAoZXVwaGVtaXN0aWNhbGx5IGtub3duIGFzICJyZWVsIGdhbWVzIikgYXJlIG9uIG9mZmVyLiBPcGVyYXRvcnMgb2YgdGhlIGdhbWJsaW5nIHBhcmxvcnMgaGF2ZSBpbnNpc3RlZCBhbiBlbGVtZW50IG9mIHNraWxsIGlzIHByZXNlbnQgaW4gZXZlcnkgZ2FtZSwgc3VmZmljaWVudCB0byBkZWZlYXQgdGhlIGNvbnN0aXR1dGlvbmFsIHByb2hpYml0aW9uIG9uIGdhbWVzIG9mIGNoYW5jZSBpbiBBcmthbnNhcy4uIApCQU5OT04sIFZlcm5hIFRoZSBHb29kIExvcmQgZGVjaWRlZCB0byB0YWtlIG91ciBwcmVjaW91cyBtb3RoZXIgVmVybmEgQmFubm9uIGluIGhlciA3NnRoIHllYXIgdG8gYSBiZXR0ZXIgcGxhY2Ugb24gTW9uZGF5LCBBcHJpbCAxNiwgMjAxOC4gCkhvd2V2ZXIsIG5vdCBzdXJlIGlmIGl0IG1hdHRlcnMsIHRoZSBlbXBsb3llciBkZWZpbml0ZWx5IGtuZXcgc2hlIGhhZCBlcGlsZXBzeSBhcyBzaGUgaGFkIHRocmVlIHNlaXp1cmVzIGR1cmluZyBoZXIgdGltZSBhdCB3b3JrIHRoZXJlLiBUaGV5IGFsc28gZGlkbiBnaXZlIHRoZSBhYnNlbmNlcyBhcyB0aGUgcmVhc29uLCBqdXN0IHRoYXQgc2hlIG5lZWRlZCB0byAiZm9jdXMgb24gaGVyIGhlYWx0aCIuCkRvd25sb2FkIEZyZWUgRW1vamkgM0QgQW5pbWF0aW9ucyBBcHBzIEZvciBJcGhvbmUuIEhkIEd0IFAxMDAwIE5va2lhIEMyIFRlbWFrIERvd25sb2FkIFRoZW1lcyBQYXJhIFhwZXJpYSBYOCBTYW1zdW5nIENETUEgRnJlZSBEb3dubG9hZCBGcmVlIERvd25sb2FkIFRoZW1lcyBCbGFja2JlcnJ5LgpZZXMgdG8gc3RheWluZyBlbHNld2hlcmUuIE9OQ0UgWU9VIENPTUZPUlRBQkxFIFNFRUlORyBIRVIgQVQgQUxMLiAKTGl2aW5nIGluIHRoZSAyMXN0Y2VudHVyeSBpcyB2ZXJ5IGJlbmVmaWNpYWwgaW4gdGVybXMgb2YgdGhvdXNhbmRzIG9mIG9wcG9ydHVuaXRpZXMgaW4gYWxsIGFzcGVjdHMgb2YgbGlmZSwgd2hlcmUgcHJpdmF0ZSBpcyBub3QgYW4gZXhjZXB0aW9uLiBNb3N0IG9mIHRoZSBoaWdoIGNsYXNzIGxhZGllcyBkbyB0cmF2ZWwgd29ybGR3aWRlLiAKU2VyaW91c2x5LCBvZmZlciBwZW9wbGUgd2l0aCBoYW5kaWNhcHMgaGVscCwgb2YgY291cnNlIHBsZWFzZSBkbyB0aGF0LCBidXQgaWYgdGhleSBhcmUgaW5zaXN0aW5nIHRoYXQgdGhleSBhcmUgZmluZSB0aGVuIHBsZWFzZSBsZXQgdGhlbSBkbyB0aGF0IHRoaW5nIHRoZXkgYXJlIGNhcGFibGUgb2Y7IGZvciBtZSBpdCBtYWtlcyBtZSBmZWVsIGp1c3QgYSBsaXR0bGUgYml0IG1vcmUgZW1wb3dlcmVkLgpUaGUgYWdlbnQgY2FuIHByb3ZlIHRoYXQgdGhleSBpbnRyb2R1Y2VkIHNvbWVvbmUgdG8gYSBwcm9wZXJ0eSBieSBrZWVwaW5nIGNvbW11bmljYXRpb24gYW5kIHByb3BlcnR5IHRvdXIgbG9ncyB3aGljaCBjb3Jyb2JvcmF0ZSB0aGUgY2xhaW0gdGhhdCB0aGV5IGludHJvZHVjZWQgdGhlIGJ1eWVyIHRvIHRoZSBwcm9wZXJ0eS4gVGhlIGJ1cmRlbiBvZiBwcm9vZiBpcyBvbiB0aGUgYWdlbnQuIApGb2xsb3dpbmcgc3BvcnRzIHdhcyBhbiBhdmlkIGhvYmJ5IG9mIEFteSdzIGFuZCBzaGUgd2FzIGEgZGV2b3RlZCBUZW5uZXNzZWUgVm9sdW50ZWVycyBhbmQgVGVubmVzc2VlIFRpdGFucyBmYW4uIApBIHBzeWNob2xvZ2ljYWwgcmVwb3J0IHN0YXRlZCB0aGUgY2hpbGQgaXMgdHdvIHllYXJzIGJlaGluZCBpbiBzY2hvb2wgYW5kIGhhcyBkaWZmaWN1bHRpZXMgZm9ybWluZyByZWxhdGlvbnNoaXBzLiBIZSB3YXMgcmVtb3ZlZCBmcm9tIHRoZSBmYW1pbHkgaG9tZSBpbiAyMDExIGFuZCBwbGFjZWQgaW4gYSBmb3N0ZXIgaG9tZSB3aGVyZSBoZSB3YXMgc2V4dWFsbHkgYWJ1c2VkIGJ5IGFub3RoZXIgY2hpbGQuIFRoaXMgY2hpbGQgd2FzIG5ldmVyIHByb3NlY3V0ZWQgYmVjYXVzZSBoZSB3YXMgYmVsb3cgdGhlIGFnZSBvZiBjcmltaW5hbCByZXNwb25zaWJpbGl0eS4uIApJdCBpcyBvbmUgb2YgdGhlIG1hbnkgd2F5cyB0aGF0IG5vdCBqdXN0IGEgaGllcmFyY2h5IG9mIGdlbmRlciBpcyBtYWludGFpbmVkICBtYWxlIG92ZXIgZmVtYWxlICBidXQgYSBoaWVyYXJjaHkgb2YgZ2VuZGVyIG5vcm1hdGl2aXR5IGlzIG1haW50YWluZWQgIGZlbWluaW5lIGdpcmxzIG92ZXIgbWFzY3VsaW5lIGdpcmxzLi4gCkhlIHdhcyBzdXBwb3NlZCB0byBnbyB0byBwcmlzb24sIGJ1dCBzdGF5ZWQgaW4gYSBsb2NhbCBqYWlsIGZvciBzb21lIHJlYXNvbgpUaGVzZSBidWJibGVzIGVuc3VyZSBldmVuIGJvaWxpbmcgYW5kIHByZXZlbnQgYnVtcGluZyBhbmQgYm9pbGluZyBvdmVyIGFuZCBsb3NzIG9mIHRoZSBzb2x1dGlvbi4gCk1pbmQgeW91LCB0aGlzIHBsYWNlIGFjdHVhbGx5IGV4aXN0cy4gQWx0aG91Z2ggYWJvdXQgMTAwIGNvY2tyb2FjaCBicmVlZGluZyBmYWNpbGl0aWVzIGV4aXN0IGluIENoaW5hLCB0aGUgY2l0eSBvZiBYaWNoYW5nIGluIHRoZSBzb3V0aHdlc3Rlcm4gU2ljaHVhbiBwcm92aW5jZSBpcyBob21lIHRvIHRoZSBsYXJnZXN0IGluIHRoZSB3b3JsZCwgYW5kIHNvbWV0aGluZyBvZiBhIHRlY2hub2xvZ2ljYWwgbWFydmVsLiAKR3JhbnRlZCwgeW91IGNhbid0IGdldCB0aGUgZnVsbCBlZmZlY3QgdW50aWwgeW91J3JlIGFibGUgdG8gaGF2ZSB0aGVtIHJpZ2h0IGluIGZyb250IG9mIHlvdS4gClRoYXQncyBub3QgaHlwZXJib2xlLiBQb2tlciBoYXMgYSBuZXcsIGhpcCBpbWFnZSwgdGhhbmtzIHRvIGxvYWRzIG9mIFRWIHRpbWUgYW5kIGJvbmEgZmlkZSBjZWxlYnJpdHkgcGxheWVycywgYW5kIGEgY2VudHVyeSBvZiB0aGVvcnkgYWJvdXQgaG93IHRoZSBnYW1lIGlzIHBsYXllZCBpcyBpbiBmbHV4LiAKU28gdGhlIGluc3RhbnQgdGhleSBzYXcgdGhvc2Uga2lkcywgdGhleSBjb3VsZCBoYXZlIHN0b3BwZWQuIFRoZXkgY291bGQgaGF2ZSBjYXB0dXJlZCB0aGVtLiAKSXQgcmVhbGx5IHZpbGxhaW4gZGVwZW5kZW50LCBidXQgdGhlcmUgYSBsb3Qgb2YgMS8yIHBsYXllcnMgdHJ5IHRvIHRyYXAgd2F5IHRvbyBtdWNoLiBJIGFncmVlIGhlIHByb2JhYmx5IGRvZXNuIGhhdmUgdGhlIFEsIGJ1eSBpZiBhIHBsYXllciBzaG93ZWQgdXAgd2l0aCBpdCBhZnRlciB0YWtpbmcgdGhpcyBsaW5lIEkgd291bGQgbm90IGJlIHRvbyBzdXJwcmlzZWQgYXQgYWxsLiBJZiBoZSB3ZXJlIHRvIGNoZWNrL3JhaXNlIHlvdSBpdCBiZSBhIHRvdWdoIGRlY2lzaW9uLCBidXQgc2luY2UgeW91IHNob3dlZCB3ZWFrbmVzcyBjaGVja2luZyB0aGUgdHVybiBJIHN0aWxsIGxlYW4gdG93YXJkcyBhIGNhbGwgdGhlcmUuIFRoaXMgaXMgd2hlcmUga25vd2luZyBhIGxpdHRsZSBhYm91dCBWIHJlYWxseSBoZWxwcy4gRm9yIGluc3RhbmNlIEkgZmluZCBhIGZvbGQgdG8gYW4gT01DIGNoZWNrIHJhaXNpbmcgdGhhdCByaXZlci4KVGhpcyB3aWxsIGVuc3VyZSB5b3VyIHN1Y2Nlc3MgaW4gdGhlIGNhc2lub3Mgd2l0aCB0aGUgZ2FtZSBvZiBwb2tlci4gSWYgeW91IGhhdmUgZ290IGEgcHJvZHVjdCBsaWtlIFRoZSBGbHVzaCBGYWNlcyBQb2tlciBDYXJkIFByb3RlY3RvciB0byBwbGF5IHdpdGgsIHlvdSBoYXZlIGRlZmluaXRlbHkgdW5kZXJzdG9vZCB5b3VyIHN0YXR1cyBhbmQgcG90ZW50aWFsIGFzIGEgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllci4uIApJbiBvcmRlciB0byBzZWxlY3QgYSBkZXZpY2UgdGhhdCBpcyByaWdodCBmb3IgeW91LCBpdCBpcyBpbXBvcnRhbnQgdG8gY29uc2lkZXIgd2hlcmUgdGhlIG1hY2hpbmUgd2lsbCBiZSBwbGFjZWQgYW5kIHdoZXJlIHlvdSB3b3VsZCBsaWtlIHRvIGVuam95IHBsYXlpbmcgdGhlIGdhbWVzLi4gCkkgcmVhbGx5IGRpZCBleHBlcmllbmNlIHRoaXMgbWFuIGFuZCBldmVyeW9uZSB0aGF0IGhhcyBwdXQgaW4gZW5vdWdoIGhvdXJzIHdpbGwgZ28gdGhyb3VnaCB0aGlzIGF0IG9uZSB0aW1lLgoxMSBwb2ludHMgIHN1Ym1pdHRlZCAxOCBkYXlzIGFnbwpQb2tlciByb29tcyBpbiBTZWF0dGxlCldoaWxlIHN0dWRpZXMgb24gZm9hbSByb2xsaW5nIGFyZSBzdGlsbCBpbiB0aGVpciBlYXJseSBzdGFnZXMgYW5kIGluY29uY2x1c2l2ZSwgdGhleSBpbmRpY2F0ZSB0aGF0IGZvYW0gcm9sbGluZyBtYXkgY29udHJpYnV0ZSB0byAiZW5oYW5jaW5nIGpvaW50IHJhbmdlIG9mIG1vdGlvbiBhbmQgcHJlICBhbmQgcG9zdCBleGVyY2lzZSBtdXNjbGUgcGVyZm9ybWFuY2UsIiBhY2NvcmRpbmcgdG8gSGFydmFyZCBIZWFsdGguClRoZSBpbmZvcm1hdGlvbiBwcm92aWRlZCBpbiByZXNwb25zZSB0byB5b3VyIHJlcXVlc3Qgd2lsbCBiZSB0aGF0IHdoaWNoIHRoZSBVbml2ZXJzaXR5IGhvbGRzIChzdWJqZWN0IHRvIGFueSBleGVtcHRpb25zKSBhdCB0aGUgdGltZSB3ZSByZWNlaXZlZCB5b3VyIHJlcXVlc3QuIApUZXJyZW5jZSBUZXJyeSBMZWUgUmVpbmhhcnQsIGhpcyB3b3JrIGhlcmUgaXMgbm93IGRvbmUuIFRoZSBMb3JkIGNhbGxlZCBoaW0gaG9tZSBvbiBEZWNlbWJlciAxNnRoLCAyMDE3LiBIZSB3YXMgYm9ybiBvbiBGZWJydWFyeSAxNCwgMTk1MiwgRm9zdG9yaWEsIE9oaW8gdG8gUml0YSAoRnJleSkgU3VsbGl2YW4sIG9mIEFsdmFkYSBhbmQgQ2hhcmxlcyBELiBSZWluaGFydC4KV2hlbiB3ZSBnb3QgdGhlcmUgaXQgd2FzIGEgZGlmZmVyZW50IGRlbnRpc3QgZG9pbmcgdGhlIHByb2NlZHVyZSwgaGUgY2FtZSBvdXQgYXNrZWQgdXMgaWYgd2Uga25ldyB3aGF0IHRoZSBwbGFuIHdhcyBJIHNhaWQgeWVzLCByZXBlYXRlZCB0aGF0IGJhY2sgdG8gaGltLCBoZSBzYWlkIHllcyBhbmQgc2hvb2sgbXkgaGFuZC4gQW4gaG91ciBsYXRlciBhbiBvZmZpY2UgbWFuYWdlciBjb21lcyBvdXQgYW5kIHRlbGxzIG1lIHRoZXkgZGlkIDggY3Jvd25zIG9uIHRoZSBib3R0b20gYW5kIDYgb24gdGhlIHRvcC4gCkkgd2FudGVkIHRvIGRpY3RhdGUgd2l0aCBteSBqYWIgYW5kIGtlZXAgaGltIG1pc3NpbmcsIHNvIGhlIHNlY29uZCBndWVzcyBvbiB0aHJvd2luZyBoaXMgcG93ZXIuIFRoZSBsZXNzIHBvd2VyIHNob3RzIGhlIHRocmV3IHRoZSBsZXNzIHBvd2VyIHNob3RzIGhlIGNvdWxkIGhpdCBtZSB3aXRoLi4gCkphc29uIE1jR293YW4sIGxlZnQsIGFuZCBDaHJpc3RvcGhlciBUYWxraW5ndG9uIGFwcGVhciB2aWEgdmlkZW8gZm9yIHRoZWlyIGFycmFpZ25tZW50IGluIGZyb250IG9mIFNhZ2luYXcgQ291bnR5IERpc3RyaWN0IEp1ZGdlIE0uIFJhbmRhbGwgSnVycmVucyBvbiBUaHVyc2RheSwgTWFyY2ggMTksIDIwMTQuIFRoZSB0d28gbWVuIGFyZSBjaGFyZ2VkIHdpdGggYXJtZWQgcm9iYmVyeSBhbmQgY29uc3BpcmFjeSB0byBjb21taXQgdGhhdCBjcmltZSBpbiBhIE1hcmNoIDExIGFybWVkIHJvYmJlcnkgb2YgYSBwb2tlciBnYW1lIGluIGEgU2FnaW5hdyBUb3duc2hpcCBhcGFydG1lbnQgdGhhdCBsZWQgdG8gb25lIG9mIHRoZSByb2JiZXJzIGJlaW5nIHNob3QgYW5kIGtpbGxlZC4uIApBdCBsZWFzdCB1bnRpbCB0aGUgc3VwZXIsIHZhY2NpbmUgcmVzaXN0YW50IHN0cmFpbnMgY29tZSBhcm91bmQuIEFueXdheSwgSSBnb25uYSBwb3N0IG15IG9yaWdpbmFsIGNvbW1lbnQgb3ZlciBhdCB0aGUgZHVwbGljYXRlIHBvc3QgdG8gdGhpcyBvbmUgZ29pbmcgb24gaW4gci9zY2llbmNlIGFuZCBzZWUgaWYgSSBjYW4gZ2V0IGFuIGFuc3dlci4uIApUaGUgQ29uc3RpdHV0aW9uIHNwZWNpZmllcyB0aGF0LCBpbiBvcmRlciBmb3IgbGVnaXNsYXRpb24gdG8gYmUgYWRvcHRlZCwgYSBiaWxsIG11c3QgYmUgdm90ZWQgYnkgYm90aCBob3VzZXMgb2YgQ29uZ3Jlc3MgYW5kIGFwcHJvdmVkIGJ5IHRoZSBQcmVzaWRlbnQuIFRoaXMgcmVxdWlyZW1lbnQgaW52aXRlcyBkZWFkbG9jayB3aGVuIG9wcG9zaW5nIHBhcnRpZXMgY29udHJvbCBkaWZmZXJlbnQgcG9saXRpY2FsIGluc3RpdHV0aW9ucy4gCkhheWRlbiBQZXJleiwgMzQsIGZyb20gTGluY29sbiwgTmViLiwgcmVjZW50bHkgcGxheWVkIGEgbm8gbGltaXQgY2FzaCBnYW1lIGF0IHRoZSBTZW1pbm9sZSBIYXJkIFJvY2sgdGhhdCBkaWRuJ3QgZ28gc28gd2VsbC4gClZvdXMgcG91dmV6IHkgZmFpcmUgZGVzIHJlY2hlcmNoZXMgcGFyIHJmcmVuY2UgZXQgcGFyIGNvdGUgZGFucyBsYSBCaWJsZSBlbiBmcmFuYWlzIGNvdXJhbnQsIGxhIEJpYmxlIFBhcm9sZSBkZSBWaWUsIGxhIENvbG9tYmUsIGxhIE5vdXZlbGxlIEJpYmxlIFNlZ29uZCwgZXQgbGEgVHJhZHVjdGlvbiBjdW1uaXF1ZSBkZSBsYSBCaWJsZSAhCkF1ZXJkZW0gaXN0IGRhcyBnYW56ZSBqYSBhdWNoIG5vY2ggU2F1IHRldWVyLiBJY2ggaHJlIGphIGltbWVyIHdpZWRlciBhdWYgZGVyIEFyYmVpdCB3aWUgdmllbCBFbHRlcm4gZnIgZGllIFNwaWVsZSBpaHJlciBLaW5kZXIgYXVzZ2ViZW4uIApBc2sgaWYgdGhleSBwbGFuIHRvIHJlbm92YXRlL3JlZGV2ZWxvcCB0aGUgd2hvbGUgYXBwYXJ0bWVudCBhbmQsIGlmIHNvLCB3aGV0aGVyIHlvdSByZW5vdmF0aW5nIGlzIHJlYWxseSBuZWNlc3NhcnkuIApFdCB0b3V0ZXMgY2VzIGFuYWx5c2VzIFNvY2lvIFBoaWxvc29waGlxdWVzLCB0b3V0ZXMgY2VzIGRjaXNpb25zIHBvbGl0aXF1ZXMgcydhdnJlbnQgdHJlIGRlcyBhY3Rpb25zIHBhcmZhaXRlbWVudCByaWRpY3VsZXMsIGluY2FwYWJsZXMgZCdhcHByaGVuZGVyIGxhIHN1YnN0YW5jZSBkZSBsZXVycyB0dWRlcyBjYXIgZWxsZXMgbmUgc2UgcHJvcG9zZW50IGphbWFpcywgcGFyIGxldXJzIGFjdGVzLCBkZSBwZXJjZXIgbGUgbnVkIGR1IHByb2JsbWUgYWZpbiBkZSB0cmFuc2Zvcm1lciBlbiBwcm9mb25kZXVyLCBldCByYWRpY2FsZW1lbnQsIG5vdHJlIHBpdGV1c2UgZXhpc3RlbmNlIGVuIGZvbnRhaW5lIGRlIFZpZS4gCkhvd2V2ZXIgdGhlIHRocmVlIGNvbXBhbmllcyBuYW1lZCBpbiB0aGUgaW5kaWN0bWVudCBjb250aW51ZWQgdG8gd2VsY29tZSBVUyBiYXNlZCBjdXN0b21lcnMuRmVkZXJhbCBwcm9zZWN1dG9ycyBpbiBOZXcgWW9yayBhcmUgc2Vla2luZyBhdCBsZWFzdCAkM2JuICgxLjhibikgaW4gY2l2aWwgbW9uZXkgbGF1bmRlcmluZyBwZW5hbHRpZXMuIElmIGNvbnZpY3RlZCwgdGhlIDExIG1lbiBuYW1lZCBpbiB0aGUgaW5kaWN0bWVudCBmYWNlIHBvc3NpYmxlIHByaXNvbiB0aW1lIGFuZCBodWdlIGZpbmVzLkFzIGEgcmVzdWx0IG9mIHRoaXMgbGF0ZXN0IHNjYW5kYWwsIHRoZSBzaGFyZSBwcmljZXMgb2YgY29tcGV0aW5nIHBva2VyIHNpdGVzLCB3aGljaCBoYXZlIGFscmVhZHkgdHVybmVkIGRvd24gYnVzaW5lc3MgZnJvbSBVUyBwbGF5ZXJzLCBoYXZlIGV4cGVyaWVuY2VkIGEgc2lnbmlmaWNhbnQganVtcC4nRWxhYm9yYXRlJyBmcmF1ZFByb3NlY3V0b3JzIGFjY3VzZSB0aGUgY29tcGFuaWVzIGFuZCBhbGxlZ2VkIGNvIGNvbnNwaXJhdG9ycyBvZiBjb25jb2N0aW5nIGRvemVucyBvZiBmYWtlIGNvcnBvcmF0aW9ucyAgIHB1cnBvcnRlZGx5IHNlbGxpbmcgaXRlbXMgc3VjaCBhcyBjbG90aGluZywgZ29sZiBjbHVicyBhbmQgcGV0IGZvb2QgICB0byBjb2xsZWN0IG1vbmV5IGZyb20gVVMgcGxheWVycy5Qcm9zZWN1dG9ycyBzYXkgdGhleSBtYW5hZ2VkIHRvIHBlcnN1YWRlIHNldmVyYWwgc21hbGwgbG9jYWwgYmFua3MgdGhhdCB3ZXJlIGZhY2luZyBmaW5hbmNpYWwgZGlmZmljdWx0aWVzIHRvIHByb2Nlc3MgcG9rZXIgcmVsYXRlZCB0cmFuc2FjdGlvbnMsIGJ5IHByb21pc2luZyBmZWVzIGFuZCBmcmVzaCBpbnZlc3RtZW50IGNhc2guSW4gb25lIGNhc2UsIHRoZSBpbmRpY3RtZW50IHNheXMsIFBva2VyU3RhcnMgYW5kIEZ1bGwgVGlsdCBQb2tlciB0b29rIGEgMzAlIHN0YWtlIGluIGEgVXRhaCBiYW5rLCBTdW5GaXJzdCwgYW5kIHVzZWQgaXQgdG8gcHJvY2VzcyAkMjAwbSAoMTIzbSkgaW4gcG9rZXIgZnVuZHMuIApSYXZpZDogWWVzLCBJIGNvbXBsZXRlbHkgYWdyZWUuIEkgdGhpbmsgdGhlcmUgYXJlIHNldmVyYWwgd2F5cyBpbiB3aGljaCB0aGUgQWNhZGVteSBpcyBzdGlja2luZyB0byB0cmFkaXRpb24sIGFuZCB0aGV5IG1pZ2h0IHdhbnQgdG8gY2hhbmdlLiAKVGhlIGNpdHkncyBjZWxlYnJhdGlvbiBhbHNvIGluY2x1ZGVkIHRoZSAzNXRoIEFubnVhbCBEdWJsaW4gTGlvbnMgQ2x1YiBTdC4gSXQgZ2V0cyBzdXBlciBjcm93ZGVkIGhlcmUsIHNvIHdlIHN1Z2dlc3QgZ3JhYmJpbmcgYSBzZWF0IGF0IEdoaXJhcmRlbGxpIFNxdWFyZSBvciBUcmVhc3VyZSBJc2xhbmQgZm9yIHRoZSBzaG93LiAKVG8gYmUgZmFpciwgSSBkaWQgZm9yZ2V0IGFib3V0IHRoaXMhIFRoYW5rIHlvdSwgdGhvdWdoLCBhcyB0aGUgb3JpZ2luYWwgcHVycG9zZSBvZiBteSBwb3N0IHdhcyB0byBwb2ludCBvdXQgdGhhdCBtYW55IGNoYW5nZXMgd2VyZSBtYWRlIGF0IG9uY2UuIApTYXcgbm90aGluZyBidXQgdGhlIGluc2lkZSBvZiBhIGhvdGVsIHJvb20gTXVsbGVuTG93ZSBNZWRpYWh1YidzIExhdmFsbCBDaGljaGVzdGVyIHdhcyBpbiBDbGVhcndhdGVyLCBGbG9yaWRhLCBwaXRjaGluZyBmb3IgdGhyZWUgZGF5cyBpbnNpZGUgYSBob3RlbCBjb25mZXJlbmNlIHJvb20uICJUaHJlZSBkYXlzIG9mIDEyIGhvdXJzLCBqdXN0IGdyaW5kaW5nIHNsaWRlcyBhbmQgYXJndW1lbnRzLCByZWFsbHksIHJlYWxseSBpbnRlbnNlLCIgc2F5cyBDaGljaGVzdGVyLCB3aG8gaXMgYSBnbG9iYWwgc2VuaW9yIFZQIG9mIHNlYXJjaCBhbmQgY29udGVudCBtYXJrZXRpbmcuIApUaGV5IG9mdGVuIHJlZmVyIHRvIHRoZW1zZWx2ZXMgd2l0aCBhYmxlaXN0LCBkaXNwYXJhZ2luZyBsYW5ndWFnZS4gCllvdSBzaG91bGQgZmlsZSBib3RoIHRoZSAyMDE3IGFuZCAyMDE4IHRheGVzLiAKV2UgZGVmaW5pdGVseSB0aHJpdmUgb24gaW5zdGFiaWxpdHkuSG93IGRvIHlvdSBwcmFjdGljZSBhbGwgdGhvc2UgbGluZXM/SSBhbSBjdXJpb3VzIGFib3V0IGFueXRoaW5nIGFuZCBldmVyeXRoaW5nLiBQYXJ0cyBhcmUgbm90IGp1c3QgYSBzY3JpcHQuIApIZSBjcm9zc2VkIHRoZSBsaW5lIHdoZW4gaGUgY2FsbGVkIGluIGEgcmVwbGFjZW1lbnQgZGVhbGVyIGF0IHRoZSBiZXF1ZXN0IG9mIGEgcGxheWVyLiAKSWYgdGhleSBkbyBnbyBvdXQgZW50aXJlbHksIGl0IHByb2JhYmx5IGdldCBzZW50IGluIGZvciByZXBhaXIuIE1heWJlIGEgZ29vZCBleGN1c2UgdG8gdXBncmFkZSB0byB0aGUgSGVyaXRhZ2UgY2xhc3NpYywgb3Igd2hhdGV2ZXIgdGhleSBlbmQgdXAgY2FsbGluZyB0aGUgIk02NCIgdGhhdCB3ZSBzZWVuIGxlYWtlZCBwaG90b3Mgb2YuCk1pY2hhZWwgSGFtYmxpbi4gRHIuIApJIGhhdmUgbXkgcGhvbmUgcGx1Z2dlZCBpbnRvIG15IGNhciBvbiB0aGUgd2F5IHRvIHRoZSBoaWtlIHNvIGl0IGlzIGF0IDEwMCUgd2hlbiBJIGdldCB0aGVyZS4gClJ1biBpbnRvIHRoZSBzYW1lIGlzc3VlcyBhcyBldmVyeWJvZHksIHNhaWQgU2FuZHkgVmF1Z2hucyBvZiB0aGUgQ2hhcGVsIE9ha3MgVm9sdW50ZWVyIEZpcmUgRGVwYXJ0bWVudCwgYWRkaW5nIHRoYXQgY2hhcml0YWJsZSBkb25hdGlvbnMgYXJlIGRvd24gaW4gdGhlIGN1cnJlbnQgZWNvbm9teS4gJDIsMDAwIGEgbW9udGggd2UgYmUgYWJsZSB0byBwdXJjaGFzZSBhbm90aGVyIGVuZ2luZSB0byBwcm90ZWN0IG91ciBjb21tdW5pdHkuIGZvciBvbmUsIGFtIGZvciBoZWxwaW5nIG9yZ2FuaXphdGlvbnMgdGhhdCBoZWxwIHRoZSBjb21tdW5pdHksIFZhbGRlcnJhbWEgc2FpZC4KQWNjb3JkaW5nIHRvIFJCQywgb25seSA0OCBwZXIgY2VudCBvZiBDYW5hZGlhbnMgaGF2ZSBkaXNhYmlsaXR5IGNvdmVyYWdlIHRocm91Z2ggdGhlaXIgd29ya3BsYWNlIGJlbmVmaXRzLiBPZiB0aG9zZSB3aXRob3V0IGdyb3VwIGluc3VyYW5jZSwgb25seSAxNiBwZXIgY2VudCBoYXZlIHByaXZhdGUgZGlzYWJpbGl0eSBpbnN1cmFuY2UgY292ZXJhZ2UuClRyeWluZyB0byBwaWNrIHVwIHRoZSBwYWNlIGhlcmUsIHRob3VnaCBsb29raW5nIGF0IG15IHNwbGl0cyB0aGF0IGRpZG4gaGFwcGVuIGF0IGFsbC4gRmFjZSBpcyBzZXJpb3VzbHkgZnJvemVuLiBNeSBsaXBzIGFyZSBudW1iLiAKV2hpY2ggY2FuIG9ubHkgaGVscCB0aGUgaG90ZWwgZm9sa3MsIHdoaWNoIGNhbiBvbmx5IGhlbHAgc2VydmljZSB0aGUgYmFsbHBhcmsuIFllYSwgVHJ1bXAgbm90IG9ubHkgd2FudHMgdG8gc2VjdXJlIHRoZSBib3JkZXIsIGJ1dCBoZSB3YW50cyB0byBoZWxwIHBheW9mZiB0aGUgYmFsbHBhcmsuLiAKSnVzdCBiZWZvcmUgQ2hyaXN0bWFzLCB0aGUgaGFuZ2FyIGhhZCBzZXZlbiBiaWcgbmFycm93IGJvZHkgamV0bGluZXJzIGZ1bGwgdG8gY2FwYWNpdHkgZm9yIHRoZSBmaXJzdCB0aW1lIHNpbmNlIG9wZW5pbmcgaW4gMjAxMiwgaGUgc2FpZC4KVGhlICJldmlkZW5jZSIgc2hvdWxkIG5ldmVyIGhhdmUgc2VlbiB0aGUgbGlnaHQgb2YgYSBjb3VydHJvb20uLiAKV29uIGFsbG93IGxvYmJ5aXN0cyBzb3JyeSBjb21wYW5pZXMgYnV0IEkgdGhpbmsgbXkgcmlnaHRzIHNob3VsZCB0cnVtcCB5b3VyIHJpZ2h0IHRvIHB1c2ggYW4gdW53YW50ZWQgaXRlbSBsaWtlIGEgY2FuY2VyIGNhdXNpbmcgdmFjY2luZSAoSFBWKSBvbiBteSBraWRzIG9yIG1lLiBJdCBpcyB0aW1lIHdlIGdldCB0aGUgbG9iYnlpc3RzIG91dCBvZiBXYXNoaW5ndG9uIGFuZCBzdGFydCByZWFsbHkgd29ya2luZyBmb3IgdGhlIHBlb3BsZSBvZiB0aGlzIGNvdW50cnkuIApFbXB0eU5leWxhbmQgaXMgc28gdGVycmlibGUuIApUaGF0IHRydWUhIEkgYWN0dWFsbHkgc29tZXdoYXQgbGllZC4gSSBkbyBnbyBvdXQgdG8gZWF0IG1heWJlIDQgNiB0aW1lcyBhIHllYXIgYXQgYSBsb2NhbCByZXN0YXVyYW50IGJlY2F1c2UgdGhlIHdob2xlIHBvaW50IGlzIG5vIHRpcHBpbmcuIFRoZSBvd25lciBzdGFydHMgc2VydmVycyBhdCAkMTUgJDE4IGFuIGhvdXIgKGluIGEgcHJldHR5IGxvdyBjb3N0IG9mIGxpdmluZyBhcmVhICAgZm9yIGNvbnRleHQgbW9zdCBtYW51YWwgbGFib3IvZmFjdG9yeSB0eXBlIGpvYnMgaGVyZSBzdGFydCBhdCBhYm91dCAkMTEpIGFuZCBJIGtub3cgYSBjb3VwbGUgcGVvcGxlIHdobyBoYXZlIHdvcmtlZCB0aGVyZSBmb3Igc2V2ZXJhbCB5ZWFycyBhbmQgYXJlIG1ha2luZyAkMjIrLiBUaGUgZm9vZCBpcyBhIGJpdCBwcmljaWVyIHRoYW4gYSBjaGFpbiByZXN0YXVyYW50IGxpa2UgQXBwbGViZWUgb3Igc29tZXRoaW5nLCBidXQgdGhleSBhbHNvIHNvdXJjZSBhIGxvdCBvZiB0aGVpciBpbmdyZWRpZW50cyBsb2NhbGx5IHNvIEkgZG9uIG1pbmQgcGF5aW5nIGEgYml0IG1vcmUgYXQgYWxsLCBhbmQgSSBoYXBweSB0byBzdXBwb3J0IGEgc21hbGwgYnVzaW5lc3Mgb3duZXIgd2hvIHRha2VzIGNhcmUgb2YgaGlzIGVtcGxveWVlcyBsaWtlIHRoYXQuCk5vdCBlYXRpbmcgUmFtZW4gbm9vZGxlcyBpbiBteSBub3cgZGFyayBob3VzZSAocHJlc3VtYWJseSBubyBvbmUgdG8gd29yayB0aGUgZWxlY3RyaWNpdHkgc3R1ZmYgZWl0aGVyKSBjcmFua2luZyBteSBiYXR0ZXJ5IGZyZWUgcmFkaW8gKHNvbWV0aGluZyBhbHNvIHJlY29tbWVuZGVkIGluIHRoZSBmbHUgcHJlcCBsaXRlcmF0dXJlKSwgZHJpbmtpbmcgbXkgYm90dGxlZCB3YXRlciAoSSBndWVzcyBubyB0YXAgY2FuIGdldCB0aHJvdWdoPyksIHRyeWluZyB0byBzdGF5IGNhbG0gaW4gdGhlIGZhY2Ugb2YgdXR0ZXIgY2hhb3MuLiAKNy4gRm9yY2UgeW91ciBjb21wZXRpdG9yIHRvIHJlYWN0IHRvIHlvdXIgcHJpY2luZy4gU21hcnQgcGxheWVycyBrbm93IHRoZXkgZG9uJ3QgaGF2ZSB0byBwYXJ0aWNpcGF0ZSBpbiBhIGNvbXBldGl0aXZlIHByaWNpbmcgZGVhdGggc3BpcmFsLiBFdmVyeSBwbGF5ZXIgZW5qb3lzIG9uZSBvciBtb3JlIHZhbHVlIGFkdmFudGFnZXMuIE1hcCB5b3VyIG1hcmtldHMuIERlZmluZSB3aGVyZSB5b3UgZG8gYW5kIGRvIG5vdCBoYXZlIGEgdmFsdWUgYWR2YW50YWdlIG92ZXIgeW91ciBjb21wZXRpdG9ycy4gS25vdyB3aGVyZSBhbmQgaG93IHRvIGNvbXBldGUgb24gcHJpY2UgYW5kIHdoZXJlIGFuZCBob3cgbm90IHRvLgpOb2JvZHkgaGVyZSB3YW50cyB0byBmb3JjZSB5b3UgdG8gdGFrZSBhIGNvdXJzZSBvZiBhY3Rpb24gZm9yIHdoaWNoIHlvdSBub3QgcmVhZHkgb3Igd2hpY2ggeW91IG5vdCB3aWxsaW5nIHRvIHRha2UuIEhvd2V2ZXIsIGFzIGFuIGFkdWx0LCB5b3UgY29uc2lkZXJlZCBjYXBhYmxlIG9mIG1ha2luZyB5b3VyIG93biBkZWNpc2lvbnMgYW5kIGxpdmluZyB3aXRoIHRoZSBjb25zZXF1ZW5jZXMuIFlvdXIgbW90aGVyIGFidXNpbmcgeW91IGlzIG5vdCB5b3VyIGZhdWx0OyB5b3VyIHVud2lsbGluZ25lc3MgdG8gdGFrZSBzdGVwcyB0byBlbmQgaXQgaXMgeW91cnMuLiAKSXJvbmljYWxseSwgbXkgZmlyc3QgZXBpc29kZSB3YXMgaW4gYSBWZWdhcyBjYXNpbm8gcmVzdGF1cmFudCB3aGljaCBkb2VzIG5vdCBoYXZlIHJlc3Ryb29tcy4gTGlrZSBhIHJhdCBodW50aW5nIGNoZWVzZSBpbiBhIG1hemUsIHlvdSBuZWVkIHRvIHNlYXJjaCBmb3IgYSByZXN0cm9vbSBpbiBhIGNhc2lubyBzaW5jZSB0aGV5IGFyZSBkZXNpZ25lZCB0byBrZWVwIHlvdSBvbiB0aGUgZmxvb3IgZ2FtYmxpbmcuLiAKSmVmZiBCdWxpbmd0b24gd2FzIG5ldyBpbiB0b3duLiBIZSdkIHJlY2VudGx5IGFycml2ZWQgZnJvbSBNZW1waGlzIG9uIGEgbWlzc2lvbiB0byB0ZWFjaCBjaGVzcyB0byB0aGUgY2hpbGRyZW4gb2YgRnJhbmtsaW4gQ291bnR5LCBNaXNzaXNzaXBwaSwgd2hlbiBhIG1hbiBpbiBhbiBTVVYgc3BvdHRlZCBoaW0uIFRoZSBtYW4gc3RvcHBlZCB0aGUgY2FyIGluIHRoZSBtaWRkbGUgb2YgdGhlIHN0cmVldCwgZ290IG91dCwgYW5kIGFwcHJvYWNoZWQgQnVsaW5ndG9uLCBzYXlpbmcgIkkga25vdyBldmVyeW9uZSBpbiB0aGlzIHRvd24sIGFuZCBJIGRvbid0IGtub3cgeW91LiIgQnVsaW5ndG9uIGV4cGxhaW5lZCB3aG8gaGUgd2FzLCBhbmQgdGhlIG1hbiByZXNwb25kZWQsICJPaCwgSSdtIHRoZSBtYXlvciwiIGJlZm9yZSByZXR1cm5pbmcgdG8gaGlzIGNhciBhbmQgZHJpdmluZyBvZmYuLiAKQ3JpY2tldCBjYW4gc2NhcmNlbHkgaG9wZSBhZ2FpbiB0byB3aXRuZXNzIHR3byBzdHlsZXMgYXMgZmFzY2luYXRpbmdseSBjb250cmFzdGVkIGFuZCBhcyByYWNpYWxseSByZXByZXNlbnRhdGl2ZSBhcyBGcnkncyBhbmQgUmFuaml0c2luaGppJ3MuIApMYXdyZW5jZSBwYXJpc2ggdGhlbiBtb3ZlZCB0byBTYWNyZWQgSGVhcnQuIEhlIHdhcyBhIG1lbWJlciBvZiB0aGUgUm95YWwgQ2FuYWRpYW4gTGVnaW9uIEJyYW5jaCAxNjMsIHRoZSBLbmlnaHRzIG9mIENvbHVtYnVzIGFuZCB0aGUgQ2VsbGFyIER3ZWxsZXJzLiBKaW0gZW5qb3llZCBhIHJvdW5kIG9mIGdvbGYsIGEgZ29vZCBnYW1lIG9mIHBva2VyLCBhIHNpcCBvZiBHbGF5dmEgYW5kIG1ha2luZyB3b25kZXJmdWwgbXVzaWMgb24gdGhlIHBpYW5vLiAKQXNMb3JkIEJ1ZGRoYSBZb3Ugc2hvdyBjb21wYXNzaW9uIHRvd2FyZCBhbGwgdGhlIGxpdmluZyBiZWluZ3Mgc3VmZmVyaW5nIGluIHRoaXMgd29ybGQsIGFuZCBhdCB0aGUgZW5kIG9mIHRoZUthbGkgeXVnYSBZb3UgYXBwZWFyIGFzIEthbGtpIHRvIGJld2lsZGVyIHRoZSBtbGVjY2hhcyBbZGVncmFkZWQgbG93IGNsYXNzIG1lbl0uIk90aGVyIHNjaG9vbHMgd2hvIGZhdm9yIExvcmQgVmVua2F0ZXNod2FyYSAodXN1YWxseSBTcmkgVmFpc2huYXZzIEkgZmluZCksIGNvdW50IEhpbSBhcyBhbiBhdmF0YXIgYW5kIHB1dCBIaW0gbmludGguIApOb3QgYSBmYW4gb2YgdGhlIFRleGFzIEhvbGRlbSBnYW1lPyBXZWxsLCBvbmxpbmUsIGl0IGlzIGVhc2llciBmb3IgeW91IHRvIGZpbmQgYSBzaXRlIHRoYXQgaGFzIHRoZSBraW5kIG9mIGdhbWUgeW91IHdhbnQuIERvIHlvdSBwcmVmZXIgT21haGEgb3IgUmF6ej8gQ2hlY2sgeW91ciBzaXRlJ3MgbG9iYnkgcGFnZSBhbmQgc2VlIGlmIHRoZXkgb2ZmZXIgdGhpcy4gCk92ZXJ2aWV3IGZvciBTZWFyb2Nrc2FuZHRyZWVzCkFuZCBzbyBmYXIgSSB0aGluayBJIHdhcyByaWdodC4gSWYgbXkgYW5jZXN0b3JzIGNyb3NzZWQgbW91bnRhaW5zIGFuZCBvY2VhbnMgdG8gbWlncmF0ZSB0aHJvdWdob3V0IHRoZSBjZW50dXJpZXMsIHdoeSBzaG91bGQgSSBmZWVsIGF3a3dhcmQgYWJvdXQgbWlncmF0aW5nIG91dCBvZiBBbWVyaWNhPyBPYnZpb3VzbHkgaXQgbm90IHRoZSBsYW5kIG9mIGRyZWFtcyBpZiBJIGp1c3Qgc3BlbnQgbXkgdGltZSBkcmVhbWluZyBhYm91dCBsZWF2aW5nIGl0Li4gCkFuZCB0aGFua3MgZHVkZSwgbWF5YmUgbXkgc3RhbmRhcmRzIGhhdmUgc2hpZnRlZCBzaW5jZSBpbnRlcmVzdCBpbiBzdHJlbmd0aCB0b29rIGhvbGQgaGFoYS4gCic+QXV0b1pvbmUgSW5jLiBhbmQgTGVhcm4gbW9yZSBhYm91dCBGZWRFeCBDb3JwCkFuZCBpbiAyMDA1IGl0IGRlY2lkZWQgdG8gcmVsaXZlIGl0cyBtaWdodHkgZ2xvcnkgZGF5cyBhbmQgZG8gaXQgYWdhaW4sIHRoaXMgdGltZSBsYW5kaW5nIG9uIGEgZm91ciB5ZWFyIG9sZCBib3kuIEx1Y2tpbHkgQnlyb24gc3VzdGFpbmVkIG5vIGluanVyaWVzLiAKTm8gc2V4LCBob3QgZ2lybHMganVzdCBzaXQgd2l0aCB5b3UgYW5kIGRyaW5rIHdoaXNrZXkgd2l0aCB5b3UuIAoxIHByb2dyYW0gaW4gIlN1bmRheSBOaWdodCBGb290YmFsbCIgYW5kIHRoZSB0b3Agc2NyaXB0ZWQgc2VyaWVzIGluIHRoZSBhZm9yZW1lbnRpb25lZCAiVGhpcyBJcyBVcywiIGJ1dCBpdCBoYXMgYWxzbyBkZXZlbG9wZWQgdGhlIHNlYXNvbidzIGJpZ2dlc3QgbmV3IHNob3dzLiBUaW1lIHNsb3QsIGF2ZXJhZ2luZyBhIDIuNiBpbiBDMyBhbmQgYSAyLjggaW4gQzcsIHdoaWxlIFR1ZXNkYXkgbmlnaHQncyAiVGhpcyBJcyBVcyIgbGVhZCBvdXQsICJOZXcgQW1zdGVyZGFtLCIgaXMgYXZlcmFnaW5nIGEgMi4wIGluIEMzIGFuZCBhIDIuMiBpbiBDNy4gCkhlJ3MgYSBkYWwgYW5kIHdoaWxlIHdlIGdvIGZvciBkYWlseSBydW5zIGlmIGhlIHNlZXMgc29tZW9uZSBydW5uaW5nIGhlIGp1c3Qgd2FudHMgdG8gcnVuIHdpdGggdGhlbS4gCkJpc2V4dWFsIEZlbWFsZSBhbmQgTGVzYmlhbiBGZW1hbGU6IEhvbmVzdGx5LCB0aGlzIGlzIHByb2JhYmx5IHdobyBpcyBnb2luZyB0byBnZXQgdGhlIG1vc3Qgb3V0IG9mIGl0LiAKQSBjb3VudGVyIGx1bmNoIGhlcmUgd291bGQgYmUgY29vbCBpbiB0aGUgbWlkZGxlIG9mIHRoZSBkYXksIGJ1dCBpdHMgYSBiaXQgcHJpY2V5LiAKSXQgd2FzIGZ1bi4gCklmIHlvdSBhcmUgaGF2aW5nIHByb2JsZW1zIGZpbmRpbmcgcHJvZHVjdHMgZm9yIHRoZSBib2R5IHRoYXQgY29udGFpbiBlc3NlbnRpYWwgb2lscywgZmVlbCBmcmVlIHRvIG1ha2UgeW91ciBvd24gdXNpbmcgYSBjYXJyaWVyIG9pbCBzdWNoIGFzIHNoZWEgYnV0dGVyIG9yIGFsbW9uZCBvaWwgYW5kIGEgZmV3IGRyb3BzIG9mIHRoZSBjaG9zZW4gZXNzZW50aWFsIG9pbC4uIApTZXggd29ya2VycyBjYW4gY2hhbGxlbmdlIHByb3N0aXR1dGlvbiBsYXdzCldpdGggcG9rZXIgcGxheWVycyBpbiBtaW5kLCB3ZSBoYXZlIHRha2VuIHRoZSB0aW1lIHRvIGNhcmVmdWxseSByZXNlYXJjaCB0aGUgYmVzdCBvbmxpbmUgcG9rZXIgc2l0ZXMgYXJvdW5kIGVsaW1pbmF0aW5nIHRoZSB3ZWVrIG9uZXMuIFRoZSBzaXRlcyB3ZSByZWNvbW1lbmQgaGF2ZSBzdHJvbmcgcmVwdXRhdGlvbiBhbmQgZ3JlYXQgdHJhY2sgcmVjb3Jkcy4gClRoZSBpbmZvcm1hdGlvbiBhZ2UgaGFzIHRocm93biB1cCBzb21lIHJlYWwgYmFycmllcnMgdG8gcmF0aW9uYWwgZGViYXRlIGFib3V0IHZhY2NpbmVzLgpBbmQgdGhpbmssIHlvdSBrZWVwIHNheWluZywgeW91IHdpc2ggeW91IHdlcmUgYmV0dGVyIGluIFggd2F5cy4gCldoZW4geW91IGNvbW1lbnQsIGFzc3VtZSBhIGNvbnRleHQgb2YgYWJ1c2UgdG8gYWxsIHBvc3RzLgpGdXJ0aGVyIGFuYWx5c2VzIHN1Z2dlc3RlZCB0aGF0IHRoZSByZWxhdGlvbnNoaXAgYmV0d2VlbiBzaXR0aW5nIHRpbWUgYW5kIG1vcnRhbGl0eSB3YXMgYWxzbyBpbmRlcGVuZGVudCBvZiBib2R5IHdlaWdodC4gVGhpcyBzdWdnZXN0cyB0aGF0IGFsbCB0aGluZ3MgYmVpbmcgZXF1YWwgKGJvZHkgd2VpZ2h0LCBwaHlzaWNhbCBhY3Rpdml0eSBsZXZlbHMsIHNtb2tpbmcsIGFsY29ob2wgaW50YWtlLCBhZ2UsIGFuZCBzZXgpIHRoZSBwZXJzb24gd2hvIHNpdHMgbW9yZSBpcyBhdCBhIGhpZ2hlciByaXNrIG9mIGRlYXRoIHRoYW4gdGhlIHBlcnNvbiB3aG8gc2l0cyBsZXNzLi4gClRoZSA2IGluIDEgQ2FzaW5vIEdhbWluZyBUYWJsZSBGdXJuaXR1cmUgaXMgcHJvYmFibHkgdGhlIGNvb2xlc3QgdGhpbmcgd2UgaGF2ZSBldmVyIGNvbWUgYWNyb3NzIG9uIHRoZSBJbnRlcm5ldC4gV2Ugc3RpbGwgY2FuJ3QgYmVsaWV2ZSBob3cgZWFzeSBpdCBpcyB0byBjaGFuZ2Ugb3ZlciwgYnV0IHRoZSBtb25leSB0aGF0IGlzIHNhdmVkIGluIHRoZSBsb25nIHJ1biBpcyBjcmF6eSB0byB0aGluayBhYm91dCBhdCBhbGwuIApJbWFnaW5lIHN1Y2ggYW4gZXhwZXJpbWVudCBpbiB0aGUgVVMuIFBsYWNlcyBsaWtlIEhhcnZhcmQgYW5kIFN0YW5mb3JkIG9yIGV2ZW4gTWlkZGxlYnVyeSBDb2xsZWdlIHdoZXJlIEkgdGVhY2gsIHdvdWxkIG5vdCBiZSBwcmltYXJpbHkgZm9yIHlvdW5nIEFtZXJpY2FucyB3aXRoIHNvIG11Y2ggcHJpdmlsZWdlIHRoYXQgdGhleSBzcGVuZCB0aG91c2FuZHMgb2YgZG9sbGFycyBvbiBlbGl0ZSBTQVQgdHV0b3JzLCBnbyB0byBwcml2YXRlIGhpZ2ggc2Nob29scyB0aGF0IGNvc3QgbW9yZSB0aGFuIG15IGFubnVhbCBzYWxhcnksIGFuZCBzcGVuZCB0aGVpciBzdW1tZXJzIGRvaW5nIHByZXN0aWdpb3VzIGludGVybnNoaXBzLiBVbml2ZXJzaXR5IHN0dWRlbnRzIHdvdWxkIGJlIHRoZSBzbWFydGVzdCBhbW9uZyB1cywgbm90IG5lY2Vzc2FyaWx5IHRoZSBiZXN0IHByZXBhcmVkLiAKQmVjYXVzZSB0aG9zZSBmZWVsaW5ncyBhcmVuIGxpa2VseSB0byBjaGFuZ2UsIGp1c3QgYmVjb21lIG1vcmUgY29uc3VtaW5nLiAKVG9kYXkgSSB2b2x1bnRlZXIgbXkgdGltZSB0byBsb2NhbCBjaHVyY2hlcyBhbmQgc2l0IGFzIGEgZGVhbGVyIHdoZW4gdGhleSBuZWVkIG1lIHRvIGZvciB0aGUgc3VtbWVyIGZlc3RpdmFscy4gQWxsIHRoZSB0YWJsZXMsIHBva2VyIGNoaXBzLCBhbmQgZXZlbiBlYWNoIEVTUE4gUG9rZXIgQ2x1YiBXb29kZW4gNCBEZWNrIERlYWxlciBTaG9lIHdhcyBnaXZlbiB0byB0aGVtIGFzIGEgZG9uYXRpb24gdG8gaGVscCByYWlzZSBmdW5kcyBmb3IgdGhlIGNvbmdyZWdhdGlvbi4gClNvIHRoZSBjYW1wYWlnbiBpcyByaWdodCB0aHJvdWdoIE9udGFyaW8gYW5kIHdlIHdhbnQgdG8gYnJpbmcgYXR0ZW50aW9uIHRvIHdoYXQgZ29pbmcgb24gYXQgQ2hhcnR3ZWxsLiAKU2F5aW5nIHRoYXQgaGVscHMgdGhlIGN1c3RvbWVyIGZlZWwgbGVzcyB3b3JyaWVkIG9yIGp1ZGdlZCBhYm91dCBicmluZ2luZyB0aGUgYmFncyBpbiwgYnV0IGFsc28gZ2V0IGFuIGhvbmVzdCByZXNwb25zZSBhYm91dCB0aGVpciBzbGlnaHQgZmxhdy4uIApBIHdlZWsgbGF0ZXIsIGp1c3QgYmVmb3JlIGhlIHdhcyBkdWUgdG8gbGVhdmUgZm9yIHRoZSBTb3V0aCBBZnJpY2FuIGp1bmdsZSwgV2FybmUgZm9ybWFsbHkgYW5ub3VuY2VkIHRoZSBjaGFyaXR5IHdhcyBzaHV0dGluZyBkdWUgdG8gInVud2FycmFudGVkIHNwZWN1bGF0aW9uIiBhYm91dCBpdHMgZmluYW5jaWFsIGFuZCByZWd1bGF0b3J5IHByb2JsZW1zLiAKVHdvIGV2ZW50cyB0aGlzIHdlZWsgbWFrZSB0aGUgc2NoaXpvcGhyZW5pYyBuYXR1cmUgb2YgdGhpcyBQcmVzaWRlbnQgdmlzaWJsZSBmb3IgYWxsIHRvIHNlZS4gClRoZSB3YXkgdGhlIHJlc3Qgb2YgdGhlIHN0b3Agd2FzIGhhbmRsZWQgY2VydGFpbmx5IHdhc24gZ3JlYXQsIGJ1dCBmcm9tIHdoYXQgSSBjYW4gdGVsbCwgYXQgbGVhc3QgdGhlIHJlYXNvbmFibGUgc3VzcGljaW9uIGZvciB0aGUgc3RvcCB3YXMgdGhlcmUuLiAKKFNlZSBsaW5rIHNvdXJjZSBhdCBib3R0b20pLCBhbmQgb25seSBpcyByZWNvZ25pemVkIGluIHNvbWUga2VubmVsIGNsdWJzIGluIHRoZSBVbml0ZWQgU3RhdGVzLCBFdXJvcGUgYW5kIHNvbWUgb3RoZXIgY291bnRyaWVzIGFyb3VuZCB0aGUgd29ybGQuIApQb2xpdGljaWFucyBpbiB0aGUgYXJyb25kaXNzZW1lbnQgYXJlIGRvaW5nIHdoYXQgdGhleSBjYW4gdG8gcmVzcG9uZCB0byByZXNpZGVudHMnIGNvbmNlcm5zOiBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3RyZWV0IGhhcyBiZWVuIHRha2VuIGRvd24gZnJvbSBvZmZpY2lhbCB0b3VyaXN0IHNpdGVzLCBhbmQgdGhleSBwbGFuIHRvIGxvb2sgYXQgdGhlIHByZXNlbmNlIG9mIHRvdXJpc3QgYnVzZXMgdGhhdCBwYXJrIG5lYXJieSBhbmQgY29uc2lkZXIgcmVndWxhdGluZyBhY2Nlc3MgdG8gdGhlIHN0cmVldC4gCkluIG90aGVyIHdvcmRzLCBhY2N1bXVsYXRpb24gb2YgcG9zaXRpdmUga2FybWEgKGZyb20gcG9zaXRpdmUgZGVlZHMgc3VjaCBhcyBjaGFyaXR5IGV0Y2V0ZXJhIGF0IGhpZ2ggbGV2ZWwpIGNhbiBsZWFkIHRvIHdob2xlc29tZSByZWJpcnRoLCB3aGlsZSBuZWdhdGl2ZSBrYXJtYSAoZnJvbSBuZWdhdGl2ZSBkZWVkcykgY2FuIGxlYWQgdG8gdW53aG9sZXNvbWUgcmViaXJ0aC4gCkZyb20gYW55IGJ1aWxkaW5nIG9yIGp1c3QgdGhvc2Ugb24gY2FtcHVzPyBUaGUgYmlnIHN0YXRlIHVuaSBpbiBteSBzdGF0ZSBqdXN0IGFubm91bmNlZCB0aGlzIHllYXIgdGhhdCBhbGwgc21va2luZyBhbmQgdmFwaW5nIGlzIGJhbm5lZCBvbiBjYW1wdXMuIEkgd2lzaCB0aGVyZSB3YXMgc29tZSByZXF1aXJlbWVudCBmb3IgdGhlIGNpdHkgdGhvdWdoLiBUaGUgcGxhY2UgSSB1c2VkIHRvIHdvcmsgYW5ub3VuY2VkIGEgMjAgZm9vdCByZXF1aXJlbWVudCBidXQgZG9uIGVuZm9yY2UgaXQuIE5vdCBleGFjdGx5IGdvaW5nIHRvIGZpcmUgc29tZW9uZSBmb3Igc21va2luZyB0b28gY2xvc2UgdG8gdGhlIGJ1aWxkaW5nLiBXaGVyZSBJIHdvcmsgdGhlcmUgdGhpcyBvbmUgY291cGxlIHRoYXQgc3RhbmQgcmlnaHQgb3V0c2lkZSB0aGUgZG9vcnMgc28gdGhlIHdob2xlIGxvYmJ5IGp1c3QgcmVla3MgZm9yIGFuIGhvdXIgYW5kIGl0IHN1Y2tzLgpCZXN0IExlc3Mgd2lsbCBvY2N1cHkgcGFydCBvZiB0aGUgZm9ybWVyIFNhZmV3YXkgc3VwZXJtYXJrZXQgc2l0ZSBpbiBXb2RvbmdhIFBsYXphIHdoaWNoIGNsb3NlZCB3aXRoIHRoZSBvcGVuaW5nIG9mIHRoZSBXb29sd29ydGhzIGRldmVsb3BtZW50IG9uIHRoZSBjb3JuZXIgb2YgSGlnaCBTdHJlZXQgYW5kIEVsZ2luIEJvdWxldmFyZCB0aGlzIHllYXIuIApJIGFsc28gZGlzYXBwb2ludGVkIGhvdyBtdWNoIEREaW5nIHVuZGVycGVyZm9ybWVkLiBZb3VuZ0ppbiBzdGlsbCBuZWVkcyBpbXByb3ZlbWVudCwganVzdCBzZWVtcyB0b28gdW5yZWhlYXJzZWQgZm9yIHRoZSBzdGFnZSBhbmQgbWFrZXMgdG9vIG1hbnkgbWVudGFsIGVycm9ycy4gR2VndXJpIGxvb2tlZCBnb29kIGluIE1hcCAxIGJ1dCBJIHRoaW5rIHNoZSB0b28gc3VjY3VtYmVkIHRvIHRoZSBTaGFuZ2hhaSBQc3ljaGUgdGhhdCBzb21laG93IFNUSUxMIHBsYWd1ZXMgdGhpcyB0ZWFtLiAKSSBoYXZlIHVzZWQgdG9nZXRoZXIgd2l0aCBiZWVuIGEgcGFydCBvZiBjb21wYW5pZXMgb2Ygd2hpY2ggdXNlIHRoZSBHb2xkZW4gR29vc2UgRGVsdXhlIEJyYW5kIEZyYW5jeSBHbGl0dGVyIFNuZWFrZXJzIHlzdGVtIGluIGFsbW9zdCBzZXZlbiB5ZWFyIGFzIEkgcHV0IHRvZ2V0aGVyIHRoaXMuIApUaGUgdmlkZW8gc2hvd3MgYSBtYW4gICBvYnZpb3VzbHkgZ2F5ICAgbWVzc2luZyB3aXRoIGhpcyBidXR0aG9sZSBhbmQgbGF0ZXIgbGV0dGluZyBhbm90aGVyIG1hbiBwZWUgb24gaGltIChvbiBwdWJsaWMpLiAKIldlIGRpZG4ndCBleGVjdXRlLCB3ZSBkaWRuJ3QgY29tZSBvdXQgbGlrZSB3ZSB3ZXJlIHN1cHBvc2VkIHRvIGNvbWUgb3V0LCB3ZSBkaWRuJ3QgY29tZSBvdXQgZmFzdCwiIENVIHJ1bm5pbmcgYmFjayBQaGlsbGlwIExpbmRzYXkgc2FpZC4gIldlIGNhbWUgb3V0IGZsYXQuIgpEJ2F1dHJlIHBhcnQsIHNpIGxhIGZvcm11bGUgZXN0IGNvcnJlY3RlIGlsIHMnYWdpdCB2cmFpc2VtYmxhYmxlbWVudCBkZSBwb3VkcmUgZGUgcGxhbnRlcyBldCBub24gZCdleHRyYWl0IGNvbmNlbnRyLiBFbiBkJ2F1dHJlcyB0ZXJtZXMsIHJlY291cmlyICBjZSB0eXBlIGRlIHByb2R1aXQgbidlc3QgcGFzIGR1IHRvdXQgYXZhbnRhZ2V1eC4gQydlc3QgcGFzIGNoZXIgZW4gYXBwYXJlbmNlIG1haXMgZW4gZmFpdCBwb3VyIGxlIGRvdWJsZSB2b3VzIGF2ZXogYXVwcnMgZCd1biBsYWJvIHNwY2lhbGlzIG5vbiBwYXMgNjAgZyBtYWlzIDEwMCBncmFtbWUgZCd1bmUgcG91ZHJlIGluZmluaW1lbnQgcGx1cyBjb25jZW50cmUgcXVlIGwnb24gZG9pdCBwcmVuZHJlIGRhbnMgdW4gcGV1IGQnZWF1IGNoYXVkZSBjYXIgbGEgcGVyY2VwdGlvbiBkZXMgc2F2ZXVycyBlc3QgcHJpbW9yZGlhbGUgZGFucyBsZSBtb2RlIGQnYWN0aW9uLiAKIkl0IGJlZW4gYSBmdW4gcmlkZSwgYnV0IHdlIHN0aWxsIGdvdCBhIGxvbmcgd2F5IHRvIGdvLCIgc2hlIHNheXMuLiAKVGhhdCBzYWlkLCBpdCBhIGdvb2QgcHJvZHVjdCBhbmQgRHlsYW4gaXMgYSBuaWNlIGd1eSwgYnV0IHdpbGwgaGUgbGlzdGVuIHRvIHVzPyBleHBlcnQncyBvcGluaW9uIFRoZSBrZXkgY2hhbGxlbmdlIHdpbGwgYmUgZ2V0dGluZyBtb3JlIHJldGFpbCBmbG93IHRocm91Z2gsIHNheXMgQ2hyaXMgVmFuIFN0YXZlcmVuLCBwYXJ0bmVyLCB0cmFuc2FjdGlvbiBzZXJ2aWNlLCBLUE1HIEVudGVycHJpc2UgU2VydmljZXMuIApCdXQgdGhhdCBpcyBtb3JlIGEgZGVzY3JpcHRpb24gb2YgbXkgYmVoYXZpb3VyIHNvbWV0aW1lcyByYXRoZXIgdGhhbiBhIGRpYWdub3Npcy4gClRoYXQgd2hlcmUgdGhlIGJyYWNpbmcgY29tZXMgaW4gYW5kIGEgbG90IG9mIHdvbWVuIGRvbiBkbyB0aGF0IHBhcnQuIApUaGUgc2FtZSBzZXggbWFycmlhZ2UgYWR2b2NhdGVzIGRvbiBjYXJlIGFib3V0IGV2ZXJ5b25lIGNoaWxkcmVuIHNpbmNlIG1vc3QgcG9vciBjaGlsZHJlbiBhcmUgYm9ybiBvdXRzaWRlIG9mIG1hcnJpYWdlIGFuZCBvdmVyIDkwJSBvZiBBZnJpY2FuIEFtZXJpY2FuIGNoaWxkcmVuIGFyZSBib3JuIG91dHNpZGUgb2YgbWFycmlhZ2UuIFRoZSBzYW1lIHNleCBtYXJyaWFnZSBhZHZvY2F0ZXMgbmV2ZXIgdGFsayBhYm91dCBlY29ub21pYyBqdXN0aWNlIG9yIHVuaXZlcnNhbCBoZWFsdGhjYXJlLiAKT2YgeW91IGFscmVhZHkga25vdyB0aGVyZSB3YXMgYSBtYXNzIHNob290aW5nIGF0IERlbGFuZXkgUmFuY2ggSW4gUG9sayBDb3VudHkuIApPbmUgdGhpbmcgYWJvdXQgZ2VuZXN0ZWFsZXJzIGJlaW5nICJpbW11bmUiIHRvIHdhcnAgY29ycnVwdGlvbiB0aG91Z2guIFRoZSBXYXJwIGRvZXNuIGNhcmUgYWJvdXQgInNjaWVuY2UiLiBHZW5ldGljcywgcGh5c2ljYWwgdHJhaXRzLCBtYXRlcmlhbHMsIGV0Yy4gCkluZGVlZCwgaXQgYXBwZWFycyB0aGF0IHRoZSBVQVcsIHdoaWNoIGFwcHJvdmVzIGxvY2FsIHN0cmlrZXMsIGhhcyBjaG9zZW4gaXRzIHN0cmlrZSB0YXJnZXRzIGNhcmVmdWxseSB0byByZW1pbmQgR00gdGhhdCBpdCBjb3VsZCBkaXNydXB0IGtleSB2ZWhpY2xlcy4KSGFuZHMgYXJlIGFsd2F5cyBmb3JtZWQgd2l0aCA1IGNhcmRzLCBzbyBldmVuIHdpdGggZm91ciBhIGtpbmQgYSBmaWZ0aCBjYXJkIGlzIHJlcXVpcmVkIHRvIGZvcm0gdGhlIGhhbmQuIFdpdGggdGhlIGZvdXIgb2YgYSBraW5kIG5vIHRoZSBib2FyZCBpbiBob2xkJ2VtIGV2ZXJ5IHBsYXllciB3aWxsIHRha2UgdGhlaXIgaGlnaGVzdCBjYXJkIHRvIGZvcm0gdGhlIGhhbmQuIFRoaXMgaGlnaGVzdCBjYXJkIGlzIHRoZWlyIGtpY2tlciwgYW5kIHRoZSBwbGF5ZXIgd2l0aCB0aGUgaGlnaGVzdCBraWNrZXJzIHdpbnMuIApUaGF0IGFib3V0IDEwLDAwMCBtb3JlIHRoYW4gaXRzIHByZXZpb3VzIHllYXIuCklyYXFpIHByaW1lIG1pbmlzdGVyIGRlY2xhcmVzICd0b3RhbCB2aWN0b3J5JyBpbiBNb3N1bApBcnRpY2xlIGxpbmsgYmVsb3cuIApjb20gc3RlcHMgZm9yd2FyZCB3aXRoIFBva2VyIE1pbGxpb25haXJlIHRvdXIgb25saW5lIHNlYXNvbiAyCkluIHRoZSB0aW1lcyB0aGF0IEkgaGFkIHRvIHJlc2VhcmNoIHRoZSBXcmlnaHQgQnJvdGhlcnMgKHRoZXkgZG8gZGVzZXJ2ZSB0aGF0IGNhcGl0YWwgIkIiIGlmIHRoZXkgYXJlIG5vdCBuYW1lZCBzZXBhcmF0ZWx5KSBJIG5ldmVyIHNlZW4gYSByZWZlcmVuY2UgZm9yIHRoZWlyIDE5MTAgZmxpZ2h0IHNjaG9vbCBpbiBNb250Z29tZXJ5LCBBbGFiYW1hLiBUaGUgc2Nob29sIGNhbWUgdG8gYmUgYXMgcGFydCBvZiBhbiBlZmZvcnQgdG8gZWR1Y2F0ZSBhIHRlYW0gb2YgZmxpZXJzIHdobyBjb3VsZCB0aGVuIGdvIG91dCBhbmQgZWR1Y2F0ZSB0aGUgZ2VuZXJhbCBwdWJsaWMgaW4gdGhlIGFydCBvZiBmbHlpbmcuClNvIHdoYXQgd2UgaGF2ZSBiZWVuIHNlZWluZywgYW5kIHdpbGwgaG9wZWZ1bGx5IGNvbnRpbnVlIHRvIHNlZSBpcyBzdGFuZGFyZCBzdGVwcGluZyB1cC4gV2hpY2ggaXMgZ3JlYXQsIGJlY2F1c2Ugd2hlbiBzdGFuZGFyZCBpcyBnb29kIGl0cyBiZXR0ZXIgZm9yIHRoZSBnYW1lIG9mIE1URyBpbiBnZW5lcmFsLi4gCkkgYWxzbyB0aG9yb3VnaGx5IGVuam95ZWQgdGhlIEFzaGlhdHN1IGVmZmVjdCBvbiBteSBoYW1zdHJpbmdzLCBxdWFkcmljZXBzLCBhbmQgaGlwcy4gCiJBbGwgaW5kaWNhdGlvbnMgLiBwb2ludCB0byBhIGNyaW1pbmFsIGFjdCBieSBhbiBhcHBhcmVudGx5IGVtb3Rpb25hbGx5IGRpc3R1cmJlZCBpbmRpdmlkdWFsLCIgc2FpZCBwcmVzaWRlbnRpYWwgc3Bva2VzbWFuIEVybmVzdG8gQWJlbGxhLgpUaGV5IGtlcHQgYSBkaXNhYmxlZCBlbGRlciBhbGl2ZSwgdGhleSBjYXJlZCBhYm91dCBoaW0uIApGYW5jeSBkcm9wIGNhcHMgdGhvdWdoPyBRdWljaywgZWFzeSwgc3R5bGlzaCwgYW5kIG5vYm9keSBjYW4gaGF2ZSBhbnkgaXNzdWVzLgpUaGlzIHdhcyBteSBmaXJzdCBwcm9wZXIgY2FtcGFpZ24gaW4gRVU0LCBhY3R1YWxseS4gCldoZW4geW91IGEgdGVlbmFnZXIgYW5kIGZpcnN0IGdldCB5b3VyIGRyaXZlcnMgbGljZW5zZSwgeW91IGxpa2UgdG8gc3RheSB1cCBsYXRlIHdpdGggeW91ciBmcmllbmRzIGJ1dCB0aGVyZSBub3RoaW5nIHRvIGRvIGF0IG5pZ2h0IGZvciBhIGJ1bmNoIG9mIDE3IHllYXIgb2xkcy4gU28geW91IGdvIGZpbmQgZnVuLiAKVGhlIGRlY2xpbmUgaW4gdGhlIG51bWJlciBvZiBhdWRpdHMgb2YgaGlnaCBpbmNvbWUgaW5kaXZpZHVhbHMgaXMgcGFydGljdWxhcmx5IHN0YXJrLCBhcyBTeXJhY3VzZSBVbml2ZXJzaXR5J3MgVHJhbnNhY3Rpb25hbCBSZWNvcmRzIEFjY2VzcyBDbGVhcmluZ2hvdXNlIChUUkFDKSBub3RlZCBpbiB0aGVpciByZXBvcnQgb24gdGhlIGRhdGEsIHJlbGVhc2VkIFRodXJzZGF5LiBUd2ljZSBhcyBtYW55IG1pbGxpb24gZG9sbGFyIGVhcm5lcnMgd2VyZSBhdWRpdGVkIGluIDIwMTAsIGF0IHdoaWNoIHRpbWUgdGhlIElSUyBpZGVudGlmaWVkICQ1LjEgYmlsbGlvbiBpbiB1bnBhaWQgdGF4ZXMgZnJvbSAzMiw0OTQgYXVkaXRzLiBMYXN0IHllYXIncyBjb25zaWRlcmFibHkgbW9yZSB0b3JwaWQgZWZmb3J0IHRvIHByb3ZpZGUgb3ZlcnNpZ2h0IG9mIHRoZSB3ZWxsIHRvIGRvIHB1bGxlZCBpbiBqdXN0ICQxLjkgYmlsbGlvbiwgcGVyIFRSQUMuLiAKTm9ub21hZDEyMyAgMSBwb2ludCAgc3VibWl0dGVkIDYgbW9udGhzIGFnbwpJIGRvbid0IHRoaW5rIHlvdSB3aWxsIGhhdmUgYW4gb3Bwb3J0dW5pdHkgdG8gY29udGFjdCBhbnlvbmUgaGlnaGVyIHRoZW4geW91ciBib3NzIGJlY2F1c2UgaXQgc291bmRzIGxpa2UgYSBzbWFsbCBjb21wYW55IHdoZXJlIGhlIGlzIHRoZSB0b3AuCkFzIEFyc2VuYWwgbWFnbmlmaWNlbnQsIGJhY2sgdG8gZnJvbnQgdGVhbSBnb2FscyBhZ2FpbnN0IEZ1bGhhbSBhbmQgTGVpY2VzdGVyIHNob3dlZCwgdGhleSBoYXZlIHRoZSBwYWNlIGFuZCB0ZWNobmljYWwgcXVhbGl0eSB0byBzd2VlcCBvcHBvbmVudHMgYXNpZGUgd2l0aCBvcGVuIGdyb3VuZCBpbiBmcm9udCBvZiB0aGVtLiBUaGF0IHNwYWNlIHRlbmRzIHRvIGJlIHRoZXJlIGluIHRoZSBzZWNvbmQgaGFsZiB3aGVuIHRoaW5ncyBiZWNvbWUgbW9yZSBvcGVuICAgdGhlaXIgcXVpY2tmaXJlIHNlY29uZCBnb2FscyBhZ2FpbnN0IEV2ZXJ0b24gYW5kIFdhdGZvcmRhbHNvIGNhbWUgZnJvbSBicm9rZW4gcGxheS4KRnJhbmNlJ3MgZm9yZWlnbiBtaW5pc3RlciBzYXlzIHRoZSAiY2hlbWljYWwgZXNjYWxhdGlvbiIgaW4gU3lyaWEgaXMgbm90IGFjY2VwdGFibGUgYmVjYXVzZSBpdCdzIHZpb2xhdGluZyB0aGUgcnVsZXMgb2Ygd2FyIGFuZCBvZiBodW1hbml0eS4KTWF5YmUgaXRzIGp1c3QgbWUgbG92aW5nIHRvIHNlZSBteSB0ZWFtIHdpbiBhbmQgbm90IGxvb2sgbGlrZSBjcmFwLCBidXQgSSBtdWNoIHJhdGhlciBzZWUgdXMgbWl4IG91ciB5b3VuZyBhbmQgb2xkZXIgZ3V5cyBhcyB3ZSBoYXZlIHRoaXMgc2Vhc29uIGFuZCBqdXN0IHB1dCBvdXIgYmVzdCBmb290IGZvcndhcmQuIFN1cmUsIG1heWJlIEthbmUgYW5kIFRvZXdzIGRvbiBoYXZlIHRvIHBsYXkgMjIgbWlucyBhIG5pZ2h0LiBCdXQgd2h5IHNob3VsZCBhIDR0aCBsaW5lIHdpbmdlciBkZXNlcnZlIG1vcmUgbWludXRlcyB0aGVuIHRoZW0gYXQgdGhpcyBwb2ludCwgZXNwZWNpYWxseSB3aGVuIGl0IG9idmlvdXMgdGhlIDR0aCBsaW5lIHdpbmdlciB3b24gYmUgYSBtYWpvciBjb250cmlidXRvci4KVGhpcyBmZWRlcmFsIGdvdmVybm1lbnQgaGFzIHNob3duIGdyZWF0IGxlYWRlcnNoaXAgYW5kIGdyZWF0IGRlc2lyZSB0byBkbyBzb21ldGhpbmcgb2YgZ3JlYXQgYmVuZWZpdCBmb3Igb3VyIHlvdW5nIHBlb3BsZS4gc2FpZCB0aGUgcGxhbiB3b3VsZCByZXBsYWNlIHRoZSBvbmUgaGlzIGdvdmVybm1lbnQgaGFkIGJlZW4gd29ya2luZyBvbi4KQ29tbW9uIGFuZCwgaW1vLCBiZXN0IHByYWN0aWNlIGlzIHRvIGZpbGUgd2hhdCBjYWxsZWQgYSBwcm92aXNpb25hbCBhcHBsaWNhdGlvbiBhdCB0aGUgaWRlYS90aGVvcnkvIGluaXRpYWwgZGVzaWduIHN0YWdlIGFuZCB0aGVuIHVwZGF0ZSB3aXRoIG5pdHR5IGdyaXR0eSBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzIHdoZW4gaXQgZ2V0cyB0byB0aGUgdGltZSB0byBtYWtlIHRoZSBwcm92aXNpb25hbCBpbnRvIGEgZnVsbCBwYXRlbnQgYXBwbGljYXRpb24uLiAKV2UgYmVlbiB0aGlua2luZyB0b28gc21hbGwhIEEgRmx5aW5nIENhciBBaXIgSGlnaHdheSBpcyBzb21ldGhpbmcgdGhlIHB1YmxpYyBjYW4gZ2V0IGJlaGluZCBhbmQgdGhlIGdvdmVybm1lbnQgY2FuIHJpZ2h0ZnVsbHkgY2xhaW0gYSBuZWVkIHRvIGNvbnRyb2wuIFRoZSBjZW50cmFsIHN5c3RlbSBpcyBhY2NlcHRlZCBiZWNhdXNlIHRoZSBmZWFyIG9mIGluY29udmVuaWVuY2UgYW5kIG90aGVyIHJvdWdlIGZseWluZyBjYXJzIGlzIHRvbyBncmVhdC4KIkkgd2FudCB0byBlbXBvd2VyIHBlb3BsZSBzbyB0aGV5IGZlZWwgZW1wb3dlcmVkIHRvIHN0YXJ0IHRoZWlyIG93biBoZWFsdGggcHJvZ3JhbSwiIHNoZSBzYWlkLi4gCkl0IHJlcXVpcmVzIGNvbnN0YW50IGdyb3d0aCBpbiBhIHN5c3RlbSBjb21wcmlzZWQgb2YgbGltaXRlZCByZXNvdXJjZXMsIG1lYW5pbmcgdGhhdCBncm93dGggd2lsbCBlbmQuIEl0IGFsc28gcmVxdWlyZXMgYSB3aWRlc3ByZWFkIGF2YWlsYWJpbGl0eSBvZiBqb2JzIHRoYXQgY2FuIHBheSBhIHdhZ2UgcmVxdWlyZWQgZm9yIHBlb3BsZSB3aXRoaW4gdGhhdCBzYW1lIHN5c3RlbSBjYW4gbGl2ZSBvbi4uIApBcyAvdS9rYWZrYWVzcXVlX2R5c3RvcGlhIHNhaWQsIGRvbiBlYXQgbW9yZSB1bnRpbCB0aGUgbmV4dCBkYXkuIEkgaGF2ZSBhbHNvIGhhZCB0aGVtIGtpY2sgaW4gYWZ0ZXIgMyBob3VycyAoMyBob3VycyBzZWVtcyB0byBiZSB3aGVuIEkgcGVhaykgYW5kIGtub2NrIG1lIG9uIG15IGFyc2UuIApZb3Ugc2hvdWxkIGhhdmUgbW9yZSBjbGFzcy5JdCBub3QgbGlrZSB0aG9zZSA5IHllYXJzIGluIGRldmVsb3BtZW50IHdlcmUgYWxsIHNwZW50IG9uIGdhbWUgYmFsYW5jZSAoYW5kIGl0IHNob3dzLCB0aGluayBvZiBvcmlnaW5hbCBQaWxscyBhbmQgU3RpY2tpZXMpLiAKQ29udmVyc2F0aW9uIHdhcyBhIGxpdHRsZSBlYXNpZXIgbm93LCBhbmQgd2Ugc3RhcnRlZCBjb21taXNlcmF0aW5nIHdpdGggZWFjaCBvdGhlciBhYm91dCBob3cgd2Ugd2VyZSBhbHdheXMgdGhlIG9uZXMgd2hvIHdlcmUgdGhlIHRoaXJkIHdoZWVscy4gSG93IGFsbCBvdXIgZnJpZW5kcyBoYWQgYm95ZnJpZW5kcyBhbmQgZ2lybGZyaWVuZHMgYW5kIHdlIGFsd2F5cyBlbmRlZCB1cCBqdXN0IGhhbmdpbmcgYXJvdW5kIG9uIG91ciBvd24uIApUaGUgbWFya3MgYXJlIHRoZW4gdGFyZ2V0ZWQgYnkgaHVtYW4gdXNlcnMsIGFuZCB0aGUgaHVtYW5zIGFyZSBnaXZlbiBndWlkYW5jZSBieSB0aGUgY29tcHV0ZXIgc28gdGhhdCB0aGV5IGNhbiBwbGF5IHdpdGggZnVsbCBrbm93bGVkZ2Ugb2YgdGhhdCBwZXJzb24gaGFiaXRzLi4gClZpZGVvIFBva2VyIGhhcyBiZWNvbWUgaW5jcmVhc2luZ2x5IHBvcHVsYXIuIEl0IGlzIHZlcnkgc2ltaWxhciB0byBhIHNpbmdsZSBsaW5lIHZpZGVvIHNsb3QgZ2FtZS4gRmlyc3QsIHdlIGV4cGxhaW4gdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBwb2tlciBhbmQgdmlkZW8gcG9rZXIuIFRoZSBydWxlcyBvZiB2aWRlbyBwb2tlciBhcmUgdmlydHVhbGx5LgpJZiB5b3UndmUgYWx3YXlzIHdvbmRlcmVkIHdoYXQgZml0bmVzcyBwbGFuIGlzIHJpZ2h0IGZvciB5b3UsIHdlIGhhdmUgYSB2YXJpZXR5IG9mIHBsYW5zIHdpdGggZWFzeSB0byByZWFkIGxheW91dHMuIApOZXcgcGxheWVycyB3aG8gd2FudCB0byBsZWFybiB0aGUgZ2FtZSBjYW4gY2hvb3NlIGZyZWUgcG9rZXIgc2l0ZXMgb25saW5lLCBhbGxvd2luZyBwbGF5ZXJzIHRvIGxlYXJuIHRoZSBnYW1lIGFuZCBwbGF5IHdpdGggY29tcGxldGVseSByaXNrIGZyZWUgYXR0aXR1ZGUuIFdpdGggdGhlc2UgZnJlZSBwb2tlcnMgbW9uZXkgdGhhdCBkb2VzIG5vdCByZXF1aXJlIGNhc2ggZGVwb3NpdHMgcmF0aGVyIHRoZXkgb2ZmZXIgZnJlZSBtb25leSB0byBwbGF5IGJlZ2lubmVycyBjYW4gbGVhcm4gdHJpY2tzIGFuZCB0ZWNobmlxdWVzIG9mIHRoZSBnYW1lIGFuZCBiZSB3ZWxsIHZlcnNlZCB3aXRoIGl0LiBUaGV5IGNhbiBwcmFjdGljZSBhbmQgZXZlbnR1YWxseSBlYXJuIG1vbmV5IGZyb20gdGhlc2UgZ2FtZXMuIApJbiB0b3RhbCB0aGF0IDEyNCBjb21ib3M7IHNvIDM3JSBvZiB0aGF0IGlzIGFib3V0IDQ1IGNvbWJvcy4gCk1vc3Qgb2YgdGhlc2Ugc2VhdGluZyBpc3N1ZXMgb25seSBleGlzdCBmb3IgbG93IGNvc3QgY2FycmllcnMsIHdoZXJlIHBlb3BsZSBnZXQgYXNzaWduZWQgc2VhdHMgYXV0b21hdGljYWxseS4gQW5kIGluIG15IG9waW5pb24gaXQgZmluZSB0byBoYXZlIHRvIHBheSAyIDEwIGZvciB5b3VyIGNob2ljZSBvZiBzZWF0IGlmIHlvdSBmbHlpbmcgZm9yIDQ2IGF2ZXJhZ2UuIApXaGF0J3MgdGhlIHBvaW50IG9mIGhhdmluZyB0aGUgQm95IFNjb3V0cyBhY2NlcHQgZ2lybHMsIGlmIHRoZSBHaXJsIFNjb3V0cyBvcmdhbml6YXRpb24gc3RpbGwgZXhpc3RzID8gV2h5IG5vdCBqdXN0IGNyZWF0ZSBvbmUgdW5pdmVyc2FsIG9yZ2FuaXphdGlvbiBmb3IgQm95IGFuZCBHaXJsIFNjb3V0cyBhbGlrZSA/IEFsc28sIHdoeSBkaWQgdGhlIGdpcmxzIGV2ZW4gd2FudCB0byBqb2luIHRoZSBib3lzIG9yZ2FuaXphdGlvbiA/IFdhcyB0aGVyZSBzb21ldGhpbmcgd3Jvbmcgd2l0aCB0aGUgdGhlIGZlbWFsZSBTY291dHMgb3JnYW5pemF0aW9uID8KNDozOSAuIE1hbGF5IFNtYSBwbGF5aW5nIHB1c3N5IG1lbWVrIGZpbmdlcmluZyBjZXdlayBhYmcgY2FudGlrIC4gCldlIHNsZXB0IGEgYnVuY2ggdHJ1c3RpbmcgdGhhdCB0aGUgZm9yZWNhc3RlZCBjbGVhciBkYXkgd291bGQgY29tZSwgYW5kIGl0IGRpZCEgVGhlIHdlYXRoZXIgdHVybmVkIHRoZSBuaWdodCBhZnRlciB0aGUgYXNjZW50IHRob3VnaCwgcmlwcGluZyBteSB0ZW50IGFwYXJ0IGluIHRoZSBlYXJseSBtb3JuaW5nLCBhbmQgd2UgaGFkIGFuIGluY3JlZGlibHkgd2luZHkgaGlrZSBiYWNrLi4gClJpY2hhcmQgUmFia2luLCB0aGUgS2FzaHJ1dGggQ291bmNpbCdzIG1hbmFnaW5nIGRpcmVjdG9yLCBzYWlkIHRoZSBvcmdhbml6YXRpb24gaGFzIHJlYWNoZWQgb3V0IHRvIG90aGVycyBpbiB0aGUga29zaGVyIGNvbW11bml0eSB0byBhbGVydCB0aGVtIG9mIHRoZSBpc3N1ZSB3aXRoIHRoZSBwcm9kdWN0LgpUaGUgUmFuZ2VyIEs5IFRyYXVtYSBLaXQgcHJvdmlkZXMgc3RlcmlsZSwgdmV0ZXJpbmFyeSBncmFkZSwgSzkgc3BlY2lmaWMgc3VwcGxpZXMgdG8gYXNzaXN0IGFuIG9mZmljZXIgaW4gcHJvdmlkaW5nIGFpZCB0byB0aGVpciBLOSBpbiB0aGUgZXZlbnQgb2YgYW4gb24gdGhlIGpvYiBpbmNpZGVudCBvZiBpbmp1cnkuIFRoZSBraXQgaW5jbHVkZXMgYSBjYW5pbmUgb3h5Z2VuIG1hc2ssIGFsb25nIHdpdGggb3RoZXIgZmlyc3QgYWlkIGl0ZW1zLCBhIHF1aWNrIHJlZmVyZW5jZSBzaGVldCBmb3IgSzkgdml0YWxzIGFuZCBkb3NpbmcgYW5kIGNvbWVzIGluIGEgaGVhdnkgZHV0eSBjYW52YXMgYmFnLCB3aGljaCBpcyBlbWJyb2lkZXJlZCB3aXRoIGVtYmxlbXMgZW5zdXJpbmcgdGhhdCBpdCBpcyBlYXNpbHkgaWRlbnRpZmlhYmxlIGZvciBLOSB1c2UuCk1jRmFrZW5hbWUgdQpBcm1hdGFyZ2UgIDIgcG9pbnRzICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpFeHBlcnQgb3BpbmlvbiBKb2huIENobywgcGFydG5lciwgVHJhbnNhY3Rpb24gU2VydmljZXMsIEtQTUcgRW50ZXJwcmlzZSwgbGlrZXMgdGhlIGNhdGVnb3J5LCB3aGljaCBpcyBhbiBpbmNyZWFzaW5nIGZvY3VzIGZvciBtYW55IHBlb3BsZSBsb29raW5nIHRvIGxpdmUgaGVhbHRoaWVyIGxpZmVzdHlsZXMuIApUaGUgcHJhY3RpY2Ugb2YgZGl2aW5hdGlvbiAocHN5Y2hpYyByZWFkaW5nKSBjYW4gc2VydmUgdG8gcG9pbnQgdGhlIHdheS5CYXNlZCBvbiB0aGUgd29yayBvZiBEb24gTWlndWVsIFJ1aXosIHdlIHdpbGwgZXhwbG9yZSB0aGUgIkZvdXIgQWdyZWVtZW50cyIuIApXaGF0IGlzIGEgaGVhZGluZz8KQW5kIHRvZGF5LCBXaWxzb24gaXMgb2ZmIHRoZSBwaGFybWFjZXV0aWNhbHMuCllvdWxsIGxvb2sgZm9yIGxlc3MgdmFsaWRhdGlvbiBpbiBnZW5lcmFsLiAKU29tZSBpc3N1ZXJzIHdpbGwgbGV0IHlvdSBzZXQgdXAgYXV0b21hdGljIHBheW1lbnRzIGZyb20geW91ciBjaGVja2luZyBhY2NvdW50LCBzbyB5b3Ugd29uJ3QgZm9yZ2V0IHRvIG1ha2UgdGhvc2UgcGF5bWVudHMuLiAKNCBzb2NrZXQgT3JtdXMgd2l0aCAxNSUgbGlnaHRuaW5nIGRhbWFnZSBhbmQgbGlnaHRuaW5nIGZhY2V0cy4gVGhpcyBpcyArNzAlIGxpZ2h0bmluZyBkYW1hZ2UgdG8geW91ciBhdHRhY2suIEV2ZW4gbW9yZSBhZ2FpbnN0IGxpZ2h0bmluZyBpbW11bmVzIHRoYXQgeW91IGJyZWFrLgpDb21wbGljYXRlIGJ1dCB5b3Uga25vdywgb25saW5lIHBva2VyIGlzIGdyZWF0LiAKV2hpbGUgc3RpY2tpbmcgdG8gdGhlIGNodXJjaCdzIHBvc2l0aW9uIHRoYXQgbWFycmlhZ2UgaXMgYSBzYWNyZWQgdW5pb24gYmV0d2VlbiBhIG1hbiBhbmQgYSB3b21hbiwgaGUgdG9sZCBhIEJCQyByZXBvcnRlcjogIlRoZSBnb3Zlcm5tZW50IHdhbnRzIGl0LiBXZSB0aGluayB0aGVyZSBhcmUgaXNzdWVzIGFyb3VuZCB0aGUgd2F5IGl0J3MgZ29pbmcgZm9yd2FyZC4gClByb2JhYmx5IHRoZSB0b3VnaGVzdCB2YXJpZXR5IGFuZCB0aGUgZWFzaWVzdCB0byBncm93IGlzICdBcnAuJyBUaGF0J3MgdGhlIG9uZSBJIHVzZSB0byBjcmVhdGUgc2hvcnQgcm9zZW1hcnkgImhlZGdlcyIgYWxvbmcgZHJ5aXNoIGVkZ2VzIG9mIHRoZSBnYXJkZW4uIEkndmUgYWxzbyBlbmpveWVkIGNyZWVwaW5nICh0cmFpbGluZykgcm9zZW1hcnkgaW4gY2xheSBwb3RzIG9uIHRoZSBwYXRpby4gCk5laWwgU3RyYXVzcyAyMDA1IG1pdCBzZWluZW0gQnVjaCBEaWUuIApCZWdpbiBjaGVja2luZyB0aGUgbWVhdCB0byBzZWUgaWYgaXQgaXMgY29va2VkIGFmdGVyIDEwIGhvdXJzIG9mIGNvb2tpbmcgdGltZSwgdXNpbmcgYSBmb3JrLiAKV2Ugb3BlbiBhZ2FpbnN0IEphY2tzb252aWxsZSBTdGF0ZSwgd2hpY2ggaXMgb25lIG9mIHRoZSBiZXN0IEZDUyB0ZWFtcyBhbmQgYXJndWFibHkgYmV0dGVyIHRoYW4gMS8zIG9mIEc1IHByb2dyYW1zLCB0aGVuIHdlIHRha2Ugb24gTFNVLiAKVGhlIHB1YiBoYXMgYmVlbiBpbiBkYXJrbmVzcyB0aGlzIHdlZWsgYW5kIE1yIFdpbGxvdWdoYnkgdmFjYXRlZCB0aGUgMTU1IHllYXIgb2xkIGhvdGVsIG9uIFR1ZXNkYXkgYWZ0ZXIgaGlzIGxlYXNlIGVuZGVkLiBNciBBbmdpdXMncyBhZ2VudCwgQWxidXJ5IGhvdGVsIGJyb2tlciBEb3VnIE1heSwgc2FpZCBoZSB3YXMgY29uZmlkZW50IHRoZSBsaWdodHMgYXQgdGhlIHB1YiB3b3VsZCBiZSB0dXJuZWQgb24gb25jZSBtb3JlLCBidXQgZXhhY3RseSB3aGVuIGRyaW5rZXJzIGNhbiBhZ2FpbiBxdWVuY2ggdGhlaXIgdGhpcnN0IHJlbWFpbnMgdW5jbGVhci4gCkRpZCBwZW9wbGUgcmVhZCBib29rcyBhdCBhIHBva2VyIHRhYmxlIGJlZm9yZSBwaG9uZXMgd2VyZSBhIHRoaW5nCkNhc2lubyBpcyBhIHZlcnkgd2VsbCBlc3RhYmxpc2hlZCBhbmQgZmFtZWQgaW4gdGhlIHdob2xlIHdvcmxkLiBJdCBpcyBhIHBsYWNlIHdoZXJlIHBlb3BsZSBjYW4gYWx3YXlzIHJlYWNoaW5nIHRvIHBsYXkgc29tZSBmdW4gZ2FtZXMgd2l0aCByZWFsIGNhc2ggYW5kIGVudGVydGFpbm1lbnQuIENhc2lubyBnYW1lcyBhcmUgdGhlIGJlc3QgY2hvaWNlIGZvciBwbGF5ZXJzIHRvIHBsYXkgd2l0aCByZWFsIHdhZ2VyIG1vbmV5IGF0IHVrIG9ubGluZSBjYXNpbm9zIG9uIGludGVybmV0LiBTb21lIGNhc2lubyBnYW1lcyBhcmUgZWFzeSBmb3IgcGxheWVycyB0byBwbGF5IGFuZCB3aW4gd2l0aCByZWFsIGNhc2ggYnV0IHRoZSBvdGhlciBjYXNpbm8gZ2FtZXMgYXJlIG5vdCBlYXN5IGZvciBwbGF5ZXJzIHRvIHBsYXkgd2l0aG91dCBsZWFybmluZyB0aGF0IGdhbWVzLiBTb21lIG9mIHRoZSBnYW1lcyBsaWtlIHNsb3RzLCBiaW5nbyBldGMuIElzIGEgZ2FtZSBvZiBjaGFuY2UgYW5kIGx1Y2sgdGhlcmUgaXMgbm8gc3RyYXRlZ3kgYW5kIHRhY3RpYyBjYW4gcGxheSBhIHJvbGUuIEJ1dCB0aGUgZ2FtZXMgbGlrZSBwb2tlciwgYmxhY2sgamFjaywgYmFjY2FyYXQgZXRjLiBBcmUgcGxheWluZyB3aXRoIGdyZWF0IHN0cmF0ZWd5IGFuZCBydWxlIHRvIHdpbi4gUGxheWVycyB3aG8gYXJlIGdvaW5nIHRvIGJlIHZlbnR1cmluZyBpbnRvIGEgY2FzaW5vIGdhbWJsaW5nIGVudmlyb25tZW50IHNob3VsZCB0YWtlIHRoZSB0aW1lIHRvIGxlYXJuIHNvbWUgb2YgdGhlIGdhbWVzIGJlZm9yZSB0aGV5IGFyZSBlbnRlcmluZyBpbnRvIGEgY2FzaW5vIGRlc3RpbmF0aW9uLiBUaGUgcGxheWVyIG5ldmVyIHdhbnRzIHRvIHdhbGsgdXAgdG8gYSB0YWJsZSBnYW1lcyBhbmQgc3RhcnQgcGxheWluZyB3aXRob3V0IGtub3dpbmcgd2hhdCB0aGUgcnVsZXMgYXJlIG9yIGFueXRoaW5nIGVsc2UgYWJvdXQgdGhlIHRhYmxlIGdhbWVzLgpUaGVyZSBtaWdodCBiZSBhIGZldyB0aG91c2FuZHMgb2YgZGlmZmVyZW50IGJyYW5kcyBhbmQgdHlwZXMsIGJ1dCBpdCdzIHlvdXIgZHV0eSB0byBicmluZyBpdCBvbiBhbmQgbWF0Y2ggeW91ciB2ZXJzYXRpbGl0eSBhbmQgcGVyc29uYWxpdHkuLiAKSW4gZmFjdCBJIHdhcyBvbiByZWNvcmQgZnJvbSBhIGZyaWVuZCBhcyBsaWtpbmcgYW55IG90aGVyIGdlbnJlIGJ1dCBjb3VudHJ5LiAKRXZlbiB3aGVuIEkgaGF2ZSBoaW0gZ2V0IHVwIHdpdGggdGhlbSwgaXQgaXMgaGFyZGVyIGZvciBoaW0gdG8gc2V0dGxlIHRoZSBib3lzLCBzbyBJIGVuZCB1cCBsYXlpbmcgdGhlcmUsIGxpc3RlbmluZyB0byBoaW0gc3RydWdnbGUsIGFuZCBhZnRlciBhbiBob3VyIEkganVzdCBnZXQgdXAgYW5kIHRha2Ugb3Zlci4uIApDZXJ0YWluIGxvY2F0aW9ucyBpbiB0aGUgQ29tbW9ud2VhbHRoIChEaWFtb25kIENpdHkgYW5kIEFya2pldCBhcmUgYSBjb3VwbGUpIGhhdmUgZWxldmF0b3JzIHRoYXQgeW91IGdldCBpbnRvLCBhbmQgd2l0aG91dCBhIGxvYWRpbmcgc2NyZWVuIHRyYW5zaXRpb25zIHlvdSB0byBhbm90aGVyIHdvcmxkIHNwYWNlLiAKSGUgZXhjdXNzIHdhcyBoZXMgdG9vIGh1bmcgb3ZlciBzbyBJIHRvb2sgdGhlIGJ1cy4gCkRhdmlkIGFsd2F5cyBob3N0cyBhIHBva2VyIGdhbWUgb24gRnJpZGF5IG9yIFNhdHVyZGF5IG5pZ2h0LiAKUGxlYXNlLCB0ZWxsIG1lIG1vcmUgYWJvdXQgS29yZWEgdGhhdCBJIGRvbiBrbm93LgpZbyBJIGp1c3QgZHJvcHBlZCB3ZWxsIHJlYXNvbmVkIGFuZCB3cml0dGVuIChmb3IgbWUpLCBub24gc2hpdHBvc3QgY29tbWVudHMgb24gd2hhdCBtaWdodCBoYXZlIGJlZW4gdGhlIHNhbWUgb2lua2RvZyBwb3N0LCBhbmQgYWxsIHRocmVlIGRpc2FwcGVhcmVkLiBQb3NzaWJsZSB0aGF0IGl0IHdhcyBsb2NrZWQgYmVmb3JlIEkgY2xpbWF4ZWQgYW5kIGhpdCB0aG9zZSBwb3N0IGNvbW1lbnQgYnV0dG9ucyBhbmQgbXkgYXBwIGp1c3QgaGFkbid0IHJlZnJlc2hlZC4gT25lIG9mIHRob3NlIHdhcyBuaWNlIGFuZCBsb25nIGFuZCBoYWQgc29tZSB0aG91Z2h0IHB1dCBpbnRvIGl0LiBGZWx0IGdvb2QuIE5vdyBpdCBnb25lLCBza2luIGR1c3QgaW50byB0aGUgaGVsbG1vc3BoZXJlLgpMb25kb24gUGxhbiBpbiBqZW9wYXJkeSBpZiBCUlQgYWJhbmRvbmVkClRvdGFsbHkgZ2V0IHRoZSBhc3Nob2xlIHRoaW5nIHRobywgSWxsIGJlIHRoZSBmaXJzdCB0byBhZG1pdCB0aGF0IHllcywgSSBhbSBhbiBhc3Nob2xlIG9uIHRoZSByb2FkLiBJIGFkbWl0IHRoYXQgc29tZXRpbWUgSSB2aWV3IGl0IGFzIG15IHJvYWQsIHdoaWNoIEkgc2hvdWxkIGJlIGFibGUgdG8gZ28gYXMgZmFzdCBhcyBJIHBsZWFzZSwgYW5kIG90aGVycyBzaG91bGQgZ2V0IG91dCBvZiB0aGUgd2F5LCBpbSBmaW5lIHdpdGggdGhhdCBhbmQgdGhlIGhhdHJlZCB0aGF0IGZvbGxvd3MgaXQuIApDbGFpbWluZyB0aGV5IHdlcmUgc3ViamVjdGVkIHRvIHNleHVhbCBoYXJhc3NtZW50IGFuZCBqb2IgZGlzY3JpbWluYXRpb24sIENocmlzdGluYSBTY2F2byBhbmQgU2hhbm5vbiBPJ1Rvb2xlIGFyZSBzZWVraW5nIHVuc3BlY2lmaWVkIGRhbWFnZXMgZnJvbSBGYXZyZSwgdGhlIEpldHMgYW5kIGEgSmV0cyBtYXNzYWdlIGNvb3JkaW5hdG9yLgpUaGF0IGlzIHdoeSBJIGNhbGwgc28gbWFueSBvZiB0aGUgZGVhbHMgSSBzZWUgaGVyZSBvbiBwcm9wZXJ0aWVzIHlvdSBjYW4gcGljayB1cCBhcyBjcmVkaXQgY2FyZCBkZWFscyAuIApJIHRoaW5rIHlvdSBkZXNlcnZlIGEgbGlmZXRpbWUgb2Ygc3VmZmVyaW5nLCBoYXZpbmcgdG8gZGVhbCB3aXRoIHdpdGggdGhlIGZhY3QgdGhhdCBldmVyeW9uZSB3aG8gb25jZSBsb3ZlZCBvciBjYXJlZCBhYm91dCB5b3Ugd2lsbCBoYXRlIHlvdSBpbiB0aW1lIGJlY2F1c2Ugb2YgdGhlIGhvcnJpYmxlIHRoaW5ncyB5b3UgZG8gdG8gdGhlbS4gCkkgZnVja2luZyAzMSBkYW1uaXQhIFRoZSBvbmx5IHJlYWwgd2F5IHRvIGFsbGV2aWF0ZSBpdCBvdmVyYWxsIGlzIHdpdGggdG9ucyBvZiByZXN0IG92ZXIgYSBsb25nIHBlcmlvZCBvZiB0aW1lIGJ1dCB0aGUgcmVhbGl0eSBpcyBJIGVuam95IG15IGpvYiBhbmQgY2FyZWVyIGFuZCBjYW4gYWZmb3JkIHRvIGRvIHRoYXQuIApIZSB3YXMgYWxzbyBwcmVjZWRlZCBpbiBkZWF0aCBieSB0d28gYnJvdGhlcnMsIE5lbHNvbiBDLiAKQXJ0aWNsZXMgYnkgRGFuaSBNYXJ0aW4gUmVzdWx0cyAxCkJ1dCB3aGVuIHRoZSAuIApUaGUgb25seSBwbGVhc3VyZSB0aGV5IGdldCBpcyBlaXRoZXIgc2VlaW5nIG5vcm1hbCBwZW9wbGUgc3VmZmVyLCBvciBtYWtpbmcgbm9ybWFsIHBlb3BsZSBzdWZmZXIuIEl0IHdoeSB0aGV5IGNvbnN0YW50bHkgc2VlayB0byBvbmUgdXAgdGhlIHNjdW1taW5lc3Mgb2YgZWFjaCBvdGhlciwgc28gdGhlaXIgZmVsbG93IHRyaWJlIG1lbWJlcnMgd2lsbCB0YWtlIG5vdGljZSBhbmQgaG9vdCBhbmQgaG9sbGVyIGxpa2UgdGhlIG1vbmtleXMgdGhleSBhcmUuIEl0IHRoZSBiYXNlc3QsIG1vc3QgcHJpbWFsIGFuaW1hbCBidWxsc2hpdCBpbXB1bHNlcyBvbmUgY2FuIGZyZWVseSBwYXJ0aWNpcGF0ZSBpbiB3aGlsZSBsaXZpbmcgaW4gYSBzb2NpZXR5LiBJZiB0aGUgbGF3IHBlcm1pdHRlZCBzb21ldGhpbmcgbW9yZSBiYXNlIGFuZCBhbmltYWwgdGhlbiB0cnVzdCBtZSwgdGhleSBiZSB0aGVyZSByYXBpbmcgYW5kIG11cmRlcmluZyBwZW9wbGUgZGF5IG9uZS4KTmljZS4gClRoZSBiZXN0IHdheSB0byBnZXQgbG9hZHMgb2YgcG9rZXIgY2hpcHMgb24gZmFjZWJvb2sgaXMgdG8gYXNrIG90aGVyIHBsYXllcnMgdG8gZG9uYXRlIHRoZWlyIGNoaXBzIHRvIHlvdSBvciBidXkgdGhlbSBmcm9tIHZhcmlvdXMgc2l0ZXMgd2hpY2ggbWF5IGJlIHVudHJ1c3R3b3J0aHkuT25lIHdheSB0byBnZXQgZnJlZSBmYWNlYm9vayBwb2tlciBjaGlwcyB3b3VsZCBiZSB0by4gV0lOIHRoZW0hIFllcywgdGhlIGdhbWUgbm93IGdpdmVzIGEgbG90IG1vcmUgY2hhbmNlcyB0byB3aW4gcG9rZXIgY2hpcHMsIGFuZCBhIGxvdCBtb3JlIHRoYW4gYmVmb3JlLlJlZ2FyZGluZyB3aGF0IHNvbWVvbmUgc2FpZCB0aGF0IHlvdSBjYW4gYWxzbyBidXkgdGhlbSBmcm9tIHNvbWUgd2Vic2l0ZXMsIHllcyBpdCdzIHRydWUgYnV0IHRoZXJlIGFyZSBzb21lIHByb3MgYW5kIGNvbnMgdG8gdGhpcy5Gb3IgaW5zdGFuY2Ugb24gdGhlIFBybyBzaWRlLCB5b3UgZ2V0IGNoaXBzIGEgbG90IG1vcmUgY2hlYXBlciB0aGFuIHlvdSB3b3VsZCBnZXQgdGhlbSBmcm9tIGluIHRoZSBnYW1lLiBPbiB0aGUgQ29uIHNpZGUsIG1vc3Qgd2Vic2l0ZXMgZG8gbm90IGRlbGl2ZXIgaW4gcHJvcGVyIHRpbWUuIApJdCBlYXNpZXIgZm9yIGNvbXBhbmllcyByZW50aW5nIGFwYXJ0bWVudHMgdG8gaGF2ZSBhIGNvcnBvcmF0ZSBjb250cmFjdCBwYXJ0bmVyLCBhcyB0aGV5IHVzdWFsbHkgcHJvdmlkZSBtb250aGx5IGJpbGxzIGFuZCByZWJhdGVzIGlmIHlvdSByZW50IG11bHRpcGxlIGFwYXJ0bWVudHMgYXQgb25jZS4gCkl0IGNhbiBiZSBhIGxpdHRsZSBleHBlbnNpdmUgaW4gaGlyaW5nIGFuZCB0cmFpbmluZyBuZXcgc3RhZmYgd2hlbiB5b3UgYXJlIGZvcmNlZCB0byBnZXQgcmlkIG9mIGJhZCBvbmVzIGJ1dCB0aGUgY29zdCBpcyBvbmx5IGEgc21hbGwgcGVyY2VudGFnZSBvZiB0aGUgb3ZlcmFsbCBjb3N0LiAKMjArIENhbGwgR2lybHMgTW9iaWxlIE51bWJlciBMaXN0OiBDYWxsIEdpcmxzIE51bWJlciB3aXRoIFJlYWwgUGhvdG9zCiJQcmV2aW91c2x5IGl0IHdhcyBhIG1vbm9wb2x5LiBBbmQgaXQgd2FzIGNhdXNlZCBieSB0aGUgc3RhdGUsIGRvbid0IGdldCBtZSB3cm9uZy4gCldoaWNoIGlzIGFsc28gc3VwcG9ydGVkIGJ5IHRoZSB2YXN0IG1ham9yaXR5IG9mIHdpemFyZHMsIG5vdCBqdXN0IFNseXRoZXJpbnMuClRoZSBzaXR1YXRpb24gd2FzIEkgd29uIG92ZXIgNWsgb25saW5lIGFuZCB0aGV5IGFjY3VzZWQgbWUgb2YgY2hlYXRpbmcgYW5kIG5ldmVyIHBhaWQgbWUgb3V0LiAKV2hlbiBBZG9sZiBIaXRsZXIgc2V0IGhpcyBzaWdodHMgb24gYWdncmVzc2l2ZSBleHBhbnNpb24gaW4gMTkzMywgaGUgZGlkIHNvIHdpdGgga25vd2xlZGdlIHRoYXQgdGhlIE94Zm9yZCBVbmlvbiwgdGhlIGVsaXRlIG9mIEJyaXRpc2ggc29jaWV0eSwgaGFkIHZvdGVkIGluIEZlYnJ1YXJ5IDE5MzMgdGhhdCB1bmRlciAibm8gY2lyY3Vtc3RhbmNlcyIgd291bGQgdGhleSAiZmlnaHQgZm9yIGtpbmcgYW5kIGNvdW50cnkiLiBJZiB5b3VyIGFkdmVyc2FyaWVzIGtub3cgdGhhdCBhIHNvY2lldHkgZmVhcnMgY29uZnJvbnRhdGlvbiBhbmQgcmVsaWVzIG9ubHkgb24gYmxhbmRpc2htZW50cyBhbmQgZGlwbG9tYWN5LCB0aGUgZGlwbG9tYWN5IGlzIHN1cmUgdG8gZmFpbC4uIApBbHRob3VnaCB0aGVpciB0ZWFtIGhvbGRzIHJ1bW1hZ2Ugc2FsZXMgYW5kIHBva2VyIHJ1bnMsIGxhd25tb3dlciByYWNpbmcgd2FzIHNvbWV0aGluZyB0aGV5IGtuZXcgbm90aGluZyBhYm91dC4gClRoZXkgd2VyZW4gbG9va2luZyB0byBpbXByZXNzLiBUaGV5IGp1c3Qgd2FudGVkIHRvIHN0YXkgaW4gYnVzaW5lc3MuLiAKWW91IG5vdCB0b28gbGlrZWx5IHRvIGJlIGVudGVydGFpbmVkIGJ5IHBsYXlpbmcgdGhlbSBidXQgaWYgeW91IGZ1bmRhbWVudGFsbHkgc291bmQgYW5kIG1hbmFnZSB5b3VyIG1lbnRhbCBnYW1lIHdlbGwsIGl0IGlzIHN0aWxsIHZlcnkgcG9zc2libGUgdG8gc3F1ZWV6ZSBhIHJlYXNvbmFibGUgcHJvZml0IGZyb20gdGhlbS4gCkEgcXVhbGl0eSBtYWNoaW5lIGlzIGEgc291bmQgaW52ZXN0bWVudCB0aGF0IHdpbGwgcGF5IGZvciBpdHNlbGYgcmF0aGVyIHF1aWNrbHkuIExvb2sgZm9yIGEgY2xlYXIgcmVhZGFibGUgZGlhbCwgY2xlYXIgc291bmQgcXVhbGl0eSwgY29tZm9ydGFibGUgd2VpZ2h0IGFuZCBhY2Nlc3NvcmllcyBhdmFpbGFibGUuIApJIGRvIDk5JSBvZiBteSB3b3JrIGluIHN3ZWF0cy4gCk90aGVyIG1lbWVzIGNhbiBiZSBwb3N0ZWQgb24gL3IvUmVkRGVhZE1lbWVzCkRpZWQgVGh1cnNkYXkuIEJFUkxJTiBFd2FsZCB2b24gV2Vpc3QsIDczLCBmb3JtZXIgZmllbGQgbWFyc2hhbCBhbmQgV29ybGQgV2FyIG4gUGFuemVyIGxlYWRlciB3aG8gd2FzIHNlcnZpbmcgYSB3YXIgY3JpbWVzIHRlcm0gaW4gUnVzc2lhLiAKSSBoYWQgbmV2ZXIgdGhvdWdodCBhYm91dCBpdCB0aGlzIHdheSBiZWZvcmUsIGJ1dCB3b21lbiB3b3VsZG4gZ28gdGhyb3VnaCBhbGwgdGhlIHRyb3VibGUgdG8gcHV0IG9uIHN1Y2ggYSBwZXJmb3JtYW5jZSBpZiB0aGVzZSBzb3VuZHMgZGlkbiB3aWVsZCBzaWduaWZpY2FudCBwb3dlciBhbmQgaW5mbHVlbmNlLiAKQWxtb3N0IGFsbCBwcm9ibGVtIGdhbWJsZXJzIGhhdmUgYW4gYXNzb2NpYXRlZCBtZW50YWwgZGlzb3JkZXIsIEphY2tzb24gc2F5cy4gSGUgd2FzIGludm9sdmVkIGluIGEgcmVjZW50IEF1c3RyYWxpYW4gc3R1ZHksIGZ1bmRlZCBieSB0aGUgTmF0aW9uYWwgRGVwcmVzc2lvbiBJbml0aWF0aXZlLCBiZXlvbmRibHVlLCB3aGljaCBmb3VuZCB0aGF0IHByb2JsZW0gZ2FtYmxlcnMgd2VyZSBuZWFybHkgMjAgdGltZXMgYXMgbGlrZWx5IGFzIG5vbiBnYW1ibGVycyB0byBoYXZlIGEgc2VyaW91cyBtb29kIGRpc29yZGVyLCBsaWtlIGRlcHJlc3Npb24gb3IgYW54aWV0eSwgYW5kIGZvdXIgdGltZXMgYXMgbGlrZWx5IHRvIGhhdmUgYW4gYWxjb2hvbCBwcm9ibGVtLgpCdXQgSSB1bmRlcnN0YW5kIHRoZSBkaWZmaWN1bHRseSBvZiBiYWxhbmNpbmcgYSBuZXcgbG9vayB0aGF0IHdvdWxkIGF0dHJhY3QgbmV3IHBsYXllcnMgd2l0aCBlYXNpbHkgcmVjb2duaXphYmxlIHZpc3VhbHMgYW5kIGZ1bmN0aW9uYWxpdHkuIApJIGtuZXcgc3VjaCBhIGd1eSBtb3N0bHkgY2FydmluZy9idWlsZGluZyB3b29kZW4gdG95cyBmb3IgY2hpbGRyZW4uIEhlIHdhcyBuZXZlciBzZWxsaW5nIGEgbG90LCBidXQgd2hhdCBoZSBzb2xkIHdhcyBzdXBlciBleHBlbnNpdmUgY29tcGFyZWQgdG8gYSBtYXNzIG1hbnVmYWN0dXJlZCBpdGVtIGZyb20gYSByZWd1bGFyIHN0b3JlLiBIaXMgc3R1ZmYgd291bGQgYWxzbyBzdXJ2aXZlIGdlbmVyYXRpb25zIG9mIGNoaWxkcmVuIGFuZCB0aGUgY2hpbGRyZW4gb2YgdGhvc2UgY2hpbGRyZW4gYW5kIHNvIG9uLiAKR2VuZXJhbCBtYW5hZ2VyIEVtbWEgQ29sZW1hbiB0b2xkIFRoZSBTdW5kYXkgQWdlIHRoZSBmb3VuZGF0aW9uIGhhZCBub3QgcHJvZHVjZWQgYSAyMDE0IGZpbmFuY2lhbCByZXBvcnQgYmVjYXVzZSBubyBkb25hdGlvbnMgd2VyZSBtYWRlIHRvIGNoYXJpdGllcyBieSB0aGUgZm91bmRhdGlvbiB0aGF0IHllYXIuIEJ1dCB0aGUgZGVjaXNpb24gYnkgdGhlIGZvdW5kYXRpb24gdG8gZHJvcCBpdHMgY29uZmlkZW50aWFsaXR5IGFwcGxpY2F0aW9uIGxlZCB0aGUgQUNOQyB0byBhdXRvbWF0aWNhbGx5IHB1Ymxpc2ggdGhlIGZvdW5kYXRpb24gYW5udWFsIHJlcG9ydCwgd2hpY2ggaGFzIGJlZW4gb24gZmlsZSB3aXRoIHRoZSByZWd1bGF0b3IgZm9yIG1vcmUgdGhhbiBlaWdodCBtb250aHMuIFRoZSAyMDE0IGRvY3VtZW50cyBzaG93IHRoZSBmb3VuZGF0aW9uIGlzIGluIGEgd29yc2UgZmluYW5jaWFsIHBvc2l0aW9uIHRoYW4gaXQgaXMgY3VycmVudGx5IHB1YmxpY2x5IGNsYWltaW5nLiAKSSBiYWcgb24gdGhlIHJhY2sgYXMgSSBnbywgbG9hZGluZyBpdGVtcyBpbiBhIHdheSB0aGF0IGdpdmVzIGdvb2Qgc3VwcG9ydCwgYW5kIHRlbGwgdGhlIG1hY2hpbmUgaG93IG1hbnkgYmFncyBJIHVzZWQgYXMgSSBhYm91dCB0byBwYXkuIApEZXNwaXRlIGdyb3dpbmcgYXdhcmVuZXNzIGFib3V0IHRoaXMgY3JpbWUsIGh1bWFuIHRyYWZmaWNraW5nIGNvbnRpbnVlcyB0byBnbyB1bmRlcnJlcG9ydGVkIGR1ZSB0byBpdHMgY292ZXJ0IG5hdHVyZSwgbWlzY29uY2VwdGlvbnMgYWJvdXQgaXRzIGRlZmluaXRpb24sIGFuZCBhIGxhY2sgb2YgYXdhcmVuZXNzIGFib3V0IGl0cyBpbmRpY2F0b3JzLiBBcyBnb3Zlcm5tZW50cywgZmlyc3QgcmVzcG9uZGVycywgYW5kIHJlc2VhcmNoZXJzIGxlYXJuIG1vcmUgYWJvdXQgaHVtYW4gdHJhZmZpY2tpbmcsIG1vcmUgaW5mb3JtYXRpb24gaXMgZ2F0aGVyZWQgYWJvdXQgdGhlIHNjb3BlIG9mIGh1bWFuIHRyYWZmaWNraW5nIGluIHRoZSBVbml0ZWQgU3RhdGVzIGFuZCB3b3JsZHdpZGUuLiAKQXMgSSB3YXMgZmluaXNoaW5nLCB0aGluZ3MgZ290IHdlaXJkSSB0b2xkIHRoZSBtYW4gSSB3YXMgZG9uZSwgYW5kIHRoYXQgSSB3b3VsZCBsZWF2ZSBoaW0gZm9yIGEgbW9tZW50IHRvIGdldCBjaGFuZ2VkLCBidXQgYmVmb3JlIEkgaGFkIGEgY2hhbmNlIHRvIGxlYXZlLCBoZSByb2xsZWQgb250byBoaXMgYmFjayBvbiB0aGUgbWFzc2FnZSB0YWJsZSwgZXhwb3NpbmcgYW4gZW5vcm1vdXMgZXJlY3Rpb24uClRoYXQgd2hhdCBoZWF2ZW4gaXMsIHRoYXQgd2hhdCBHb2QgaXMsIHRoZSByZXN0IGlzIGp1c3QgbWFuIGF0dGVtcHRpbmcgdG8gcG9ydHJheSB0aGF0IGluZmluaXRlIGJlYXV0eSBhbmQgZ29vZG5lc3MgaW50byB0ZW1wb3JhcnkgaHVtYW4gd29yZHMgYW5kIGVtb3Rpb25zLiAKV2hlbiBidXJlYXVjcmFjeSB3YW50cyB0byBtYWtlIHlvdSBiZWxpZXZlIHRoZXkgYXMgcmV0YXJkZWQgYXMgYSByb2Fka2lsbCBpcyBiZWNhdXNlIHRoZXkgaGlkaW5nIHRoZWlyIHJlYWwgaW50ZW50aW9ucy4gSWYgc2hlIHdhcyBjb250YWdpb3VzLCB0aGVyZSB3b3VsZCBhbHJlYWR5IGJlIGEgcGFuZGVtaWMuIEhlbGwsIHRoZXkgbGFjayBzdWNoIGZvcmVzaWdodCB0aGF0IHRoZXkgd291bGRuIGJlIGFibGUgdG8gY29udGFpbiBpdC4gCk9wZW5zLCBhbmQgaXQgbGlnaHRpbmcgbW9uZXkgb24gZmlyZS4gClByb3N0aXR1dGlvbiBpcyBub3QgbGVnYWwgYmVjYXVzZSBldmVyeWJvZHkgaXMgaGF2aW5nIGZ1biB3aXRoIGl0LCBidXQgYmVjYXVzZSB0aGUgbGVnYWxpemF0aW9uIGdpdmVzIHRoZSBzdGF0ZSBwb3dlciB0byBjb250cm9sIGFuZCBlbmZvcmNlIHJ1bGVzIGluIHRoZSBidXNpbmVzcywgaHlnaWVuZSBjb250cm9sLCBoZWFsdGggaW5zdXJhbmNlLCBicmVha2luZyBkb3duIG9uIGZvcmNlZCBwcm9zdGl0dXRpb24gKHdoaWNoIG5ldmVydGhlbGVzcyBzdGlsbCBleGlzdHMpLi4gCjU2JSBoYWQgPjYwJSBkZWNyZWFzZSAoc2lnbmlmaWNhbnQgaW1wcm92ZW1lbnQpIGluIHN5bXB0b20gc2V2ZXJpdHkgKFNTSSkgd2hpbGUgNDclIGhhZCBzaW1pbGFyIHNpZ25pZmljYW50IGltcHJvdmVtZW50IGluIGZyZXF1ZW5jeSBvZiBzeW1wdG9tcyAoU0ZRKS4gCkl0IGEgTE9UIG9mIHdvcmsgZm9yIHRoZW0gdG8gcHV0IGludG8gb25lIHNob3cuIApSaWdodCBub3csIEkgaW5jbGluZWQgdG8gZG8gYSBydWxlIGJhc2VkIEFJIHRoYXQga2VlcHMgdHJhY2sgb2YgaXRzIHJhbmdlIHNvIHRoYXkgaXQgY2FuIGJlIGJhbGFuY2VkLiAKT25lIG9mIHRoZSBkdW1iYXNzZXMgYWN0dWFsbHkgcHV0IHRoZSBkcnVnIG1vbmV5IGluIHRoZSByZWdpc3RlciB3aXRoIHRoZSByZXN0IG9mIHRoZSByZXN0YXVyYW50IGJ1c2luZXNzIGZvciB0aGUgZGF5LCBhbmQgdGhlbiBkaXRjaGVkIGNsZWFudXAgYW5kIHNraXBwZWQuIApJIHRoaW5rIHRoZSBjaGFyYWN0ZXJzIHdlcmUgbW9yZSBmbGVzaGVkIG91dC4gRGljayBpcyB3YXkgbW9yZSB0b2xlcmFibGUgaW4gdGhlIHNob3csIGFuZCBJIGxpa2UgdGhhdCBoZSBhbmQgQ2FtaWxsZSBoYWQgc29tZSBzb3J0IG9mIGNsb3N1cmUuIApCcm93bnN0ZWluLCBhIGxhdyBwcm9mZXNzb3IgYXQgdGhlIFVuaXZlcnNpdHkgb2YgQ2FsaWZvcm5pYSwgRGF2aXMsIHRlbGxzIEhvd1N0dWZmV29ya3MuICJUaGUgZ292ZXJubWVudCBzaG91bGQganVzdCBrZWVwIGl0cyBub3NlIG91dCBvZiB3aGF0IGhhcHBlbnMgaW4gYSBob3VzZSBvZiB3b3JzaGlwLiAKU2luZ2Fwb3JlIGlzcyBub3QgYSBkZW1vY3JhY3kgYW5kIGhhcyBzb21lIHZlcnkgcmVwcmVzc2l2ZSBsYXdzLiAKQWNjb3JkaW5nIHRvIHNldmVuIGFkbWluaXN0cmF0aW9uIG9mZmljaWFscywgQm9sdG9uIGluZmx1ZW5jZSB3YXMgY2VudHJhbCB0byB0aGUgb2YgVHJ1bXAgaW5pdGlhbCBvcmRlciBhbmQgY29udmluY2luZyB0aGUgc3R1YmJvcm4gY29tbWFuZGVyIGluIGNoaWVmIHRvIGdvIGFsb25nIHdpdGggaXQuIFdoaXRlIEhvdXNlIGFpZGVzIG1haW50YWluZWQgdGhhdCB0aGUgdHdvIGhhdmUgYSBzdHJvbmcgcmVsYXRpb25zaGlwIGluIHBhcnQgYmVjYXVzZSBCb2x0b24gaGFzIHRyaWVkIG5vdCB0byBkcmF3IGF0dGVudGlvbiB0byB0aGUgY2hhbmdlcy4gVGhlIG9mZmljaWFscyBzcG9rZSBvbiB0aGUgY29uZGl0aW9uIG9mIGFub255bWl0eSB0byBkZXNjcmliZSBCb2x0b24gcm9sZSBhbmQgdGhlIGFkbWluaXN0cmF0aW9uIHBvbGljeSB0aGlua2luZy4uIAoxMjkgT25laWRhIFN0LgpBdCBuZXdseSByZW5vdmF0ZWQgUmVuYWlzc2FuY2UgQXJ1YmEgUmVzb3J0IENhc2lubywgd2UgTGl2ZSBMaWZlIHRvIERpc2NvdmVyLiBIZXJlIGluIHRoZSBoZWFydCBvZiBPcmFuamVzdGFkIG9uIHRoZSBpc2xhbmQgb2YgQXJ1YmEsIHlvdSB3aWxsIGZpbmQgeW91cnNlbGYgaW4gdGhlIG1pZGRsZSBvZiB0aGUgZXhjaXRlbWVudC4gWW91IGRvbiBoYXZlIHRvIGdvIGZhciB0byBleHBlcmllbmNlIHRoZSByZWFsIENhcmliYmVhbiwgaXQgcmlnaHQgb3V0c2lkZSB5b3VyIGRvb3IuIE91ciB1bnBhcmFsbGVsZWQgQXJ1YmEgaG90ZWwgb2ZmZXJzIGEgcGVyZmVjdCBsb2NhdGlvbiBzdGVwcyBmcm9tIE9yYW5qZXN0YWQgdmlicmFudCBtb2Rlcm4gZG93bnRvd24gYm91dGlxdWVzLCBnaXZpbmcgeW91IGVuZGxlc3Mgb3Bwb3J0dW5pdGllcyB0byBpbmR1bGdlIHlvdXIgaW5uZXIgc2hvcGFob2xpYy4gClRoYXQgbWlnaHQgc291bmQgc2NhcnksIGJ1dCBpZiB5b3UndmUgZ290IGFsbCB0aGUgZmFjdHMgaXQgbWFrZXMgYSBsaXR0bGUgbW9yZSBzZW5zZS4gCkV2ZW4gaWYgSSB0cnkgYW5kIGFydGljdWxhdGUgb3IgZXhwbGFpbiBpdCBiZXR0ZXIsIG9mdGVuIGl0IHNlZW1zIHRoZXkgc2ltcGx5IGRvbiAiZ2V0IGl0LCIgdGhleSBkb24gZmVlbCBvciBzZWUgdGhlIGNvbnRyYWRpY3Rpb24gb3IgdGhlIHRlbnNpb24uLiAKRGVmaW5pdGVseSBpbnRlcmVzdGluZyBmb29kIGZvciB0aG91Z2h0IGFuZCBhIHJlIGxlYXJuaW5nIGV4cGVyaWVuY2UuLiAKVW5saWtlIG1vc3QgaG9iYmllcywgcG9rZXIgcGxheWVycyBhcmUgYWN0dWFsbHkgcXVpdGUgbmljZSB0byBuZXdiaWVzIGJlY2F1c2UgdGhleSBrbm93IHlvdSBhcmUgcmVsYXRpdmVseSBlYXN5IG1vbmV5LiAKSW4gZmFjdCBpdCBoYXMgdHJhdmVsZWQgYmFjayB0byBvdXIgaG9tZXMgZnJvbSB3aGVyZSBpdCBzdXBwb3NlZGx5IG9yaWdpbmF0ZWQuIApXZSBkbyBrbm93IHRoZSBzb3VuZHRyYWNrIHdhcyB3cml0dGVuL2FycmFuZ2VkIGJ5IERpY2sgV2lsc29uIGFuZCBSYXkgQ2hhcmxlcyAobm90IHRoYXQgb25lKSwgdGhlIGR1byBiZWhpbmQgTWlubmVzb3RhIFR3aW5zIGZpZ2h0IHNvbmcgIldlJ3JlIEdvbm5hIFdpbiBUd2lucy4iIFRoZSBNaW5uZWFwb2xpcyBDaGFtYmVyIG9mIENvbW1lcmNlIGhlbGQgYSBjb250ZXN0IGNhbGxpbmcgZm9yIGNpdmljYWxseSBtaW5kZWQgYW50aGVtcywgYWNjb3JkaW5nIHRvIEh5bWllJ3MgVmludGFnZSBSZWNvcmRzIG93bmVyRGF2ZSBIb2VuYWNrLCBhbmQgdGhlIFdpbHNvbi9DaGFybGVzIGphbSBlbWVyZ2VkIHZpY3RvcmlvdXMuCkFsdGhvdWdoIGNoYW5naW5nIGRpZXRhcnkgaGFiaXRzIG1lYW4gb2Jlc2l0eSBoYXMgYmVlbiByaXNpbmcsIGl0J3Mgc3RpbGwgcmVsYXRpdmVseSByYXJlIGluIGEgbmF0aW9uIHdob3NlIGN1bGluYXJ5IHRyYWRpdGlvbiBmb2N1c2VzIG9uIGZpc2gsIHJpY2UsIHZlZ2V0YWJsZXMgYW5kIG90aGVyIGZvb2QgbG93IGluIGZhdC4gClRoZSBtYWluIGFkdmFudGFnZSBvZiBvbmxpbmUgcG9rZXIgaXMgdGhhdCBpdCBjb3VsZCBiZSBwbGF5ZWQgYW55d2hlcmUsIGFuZCBhbnl0aW1lIGFjY29yZGluZyB0byBvdXIgY29udmVuaWVuY2UuIE9ubGluZSBTaXRlIHN1Y2ggYXMgUG9rZXIgU3RhcnMgaGF2ZSB0aG91c2FuZHMgb2YgcGxheWVycyBwbGF5aW5nIGV2ZXJ5IGRheS4gV2hlbmV2ZXIgeW91IGFyZSByZWFkeSB0byBwbGF5LCBhIGdhbWUgd2lsbCBiZSBhbHdheXMgYXZhaWxhYmxlIGZvciB5b3UgdG8gcGxheS4KSSB1c2VkIHRvIGxpdmUgaW4gRHVwb250IGFuZCBzd2FtIGF0IHRoZSBNYXJpZSBSZWVkIENvbW11bml0eSBDZW50ZXIgcG9vbCBpbiBBZGFtcyBNb3JnYW4sIHRob3VnaCBpdCBub3Qgc3VwZXIgY2xvc2UgdG8gdGhlIFdlc3QgRW5kLCBhbmQgeW91IGhhdmUgdG8gcGF5IGFzIGEgbm9ucmVzaWRlbnQuIFdhc2hpbmd0b24gU3BvcnRzIENsdWIgaGFzIGEgcG9vbCBhdCBpdHMgQ29sdW1iaWEgSGVpZ2h0cyBsb2NhdGlvbiwgYnV0IGl0IGZhciBmcm9tIHlvdSBhbmQgSSBmb3VuZCBpdCB0byBiZSB1bmNvbWZvcnRhYmx5IHdhcm0gd2F0ZXIuIFlNQ0EgaXMgYWxzbyBkb3dudG93biwgcHJvYmFibHkganVzdCBhcyBjbG9zZSBhcyBNYXJpZSBSZWVkLCBidXQgSSBuZXZlciB1c2VkIHRoZWlyIHBvb2xzLiAKRWxsZXMgc2UgY291dnJlbnQgZGUgZmV1aWxsZXMgbW9sbGVzLCBwbGF0ZXMsIGF1eCBkZW50cyBwZXUgbm9tYnJldXNlcywgZGUgY291bGV1ciB2ZXJ0IGNsYWlyLiAKU2VuZCB0aGlzIHRvIGhlciBub3cuIERvbid0IHdhaXQgdW50aWwgc2hlIGNhbGxzIHlvdSB0byB0YWtlIHlvdSBvbiBhIGZyZWUgdHJpcCB0byBHdWlsdHRvd24uIFlvdXIgYm91bmRhcnkgd2FzIGJvdGggY2xlYXIgYW5kIHJlYXNvbmFibGUsIGFuZCBzaGUgdmlvbGF0ZWQgaXQgYmVjYXVzZSBzaGUgd2FudGVkIHRvOiBubyBvdGhlciByZWFzb24sIHNoZSBodXJ0IHlvdSBhbmQgYW5nZXJlZCB5b3UgYW5kIHZpb2xhdGVkIHlvdSB1bmNhcmluZ2x5LCBqdXN0IHNvIHNoZSBjb3VsZCBzYXRpc2Z5IGhlcnNlbGYuIFRoZXJlJ3Mgbm8gcmVhc29uIGZvciB5b3UgdG8gZmVlbCBsaWtlIHlvdSBvd2UgaGVyIGFueXRoaW5nIGJ1dCBhIGZpZ3VyYXRpdmUgZm9vdCB1cCBoZXIgYXNzLiBBbHNvLCBhcyBtdWNoIGFzIHRoaXMgc3Vja3MsIHNoZSdzIHNob3duIHlvdSBhIHZlcnkgdmFsdWFibGUgZXhhbXBsZSBvZiBleGFjdGx5IGhvdyBtdWNoIHNoZSByZXNwZWN0cyB5b3UgYW5kIHlvdXIgYm91bmRhcmllcy4gVGhlIGJlc3QgdGhpbmcgeW91IGNhbiBkbyBub3cgaXMgZW5hY3Qgc3dpZnQsIGhhcnNoIGNvbnNlcXVlbmNlcywgYmVjYXVzZSBvdGhlcndpc2Ugc2hlIHdpbGwga2VlcCBwdXNoaW5nLCB0byBzZWUgd2hhdCBzaGUgY2FuIGdldCBhd2F5IHdpdGguCkFuIGV2ZW50IGxpa2UgdGhhdCByZWFsbHkgaGVscHMgeW91IGZvc3RlciB0aGUgcmVsYXRpb25zaGlwcyB3aGVuIGNyZWF0aW5nIGEgbmV3IGNhdGVnb3J5LCBhbmQgaXQgbGVhZHMgdG8gY29sbGFib3JhdGlvbiBhbmQgaW5ub3ZhdGlvbi4uIApCdW13aW5lICAyIHBvaW50cyAgc3VibWl0dGVkIDI4IGRheXMgYWdvCkFuZCBteSBwYXJlbnRzIGdyYWNpb3VzbHkgcGFpZCBmb3IgMi8zIG9mIGFuIGFncmVlZCB1cG9uIGJ1ZGdldC4gSSBzdGlsbCBkb24ndCBrbm93IHdoeS4gTXkgZGFkIGdyZXcgdXAgdGVsbGluZyB1cyBoZSB3b3VsZCBuZXZlciBwYXkgZm9yIG91ciB3ZWRkaW5ncyBidXQgdGhlbiB0aGV5IHNhdCB1cyBkb3duIGFuZCBzYWlkIHdlJ2QgbGlrZSB5b3UgdG8gaGF2ZSBhIG5pY2UgcGFydHkgYW5kIHdlcmUgb2ZmZXJpbmcgeW91IHggYW1vdW50LiAKT2J2aW91c2x5LCBpdCB3b3VsZCBoYXZlIGJlZW4gYSBiYWQgd2F5IGZvciBGcm9jaCB0byBlbmQgaGlzIGNhcmVlciBvbiBhIGtub2Nrb3V0LiAKSSB3YXMgeW91ciBhdmVyYWdlIGd1eS4gSSBwbGF5ZWQgYSBmZXcgc3BvcnRzIGJ1dCB3YXNudCB0aGUgYmVzdC4gSSB3YXMgNSAgIDUgMTYgeWVhciBvbGQgZ3V5IHdpdGggbXkgMiBidWRkaWVzIHdobyB3ZXJlIGJvdGggYSB5ZWFyIHlvdW5nZXIgdGhlbiBtZS4KQWxvbmdzaWRlIHRoZSBvdGhlciB0d28gY29tcG9uZW50cyBvZiB0aGUgYXV0b25vbWljIG5lcnZvdXMgc3lzdGVtLCB0aGUgc3ltcGF0aGV0aWMgbmVydm91cyBzeXN0ZW0gYWlkcyBpbiB0aGUgY29udHJvbCBvZiBtb3N0IG9mIHRoZSBib2R5J3MgaW50ZXJuYWwgb3JnYW5zLiBTdHJlc3MgYXMgaW4gdGhlIGZsaWdodCBvciBmaWdodCByZXNwb25zZSBpcyB0aG91Z2h0IHRvIGNvdW50ZXJhY3QgdGhlIHBhcmFzeW1wYXRoZXRpYyBzeXN0ZW0sIHdoaWNoIGdlbmVyYWxseSB3b3JrcyB0byBwcm9tb3RlIG1haW50ZW5hbmNlIG9mIHRoZSBib2R5IGF0IHJlc3QuIEluIHRydXRoLCB0aGUgZnVuY3Rpb25zIG9mIGJvdGggdGhlIHBhcmFzeW1wYXRoZXRpYyBhbmQgc3ltcGF0aGV0aWMgbmVydm91cyBzeXN0ZW1zIGFyZSBub3Qgc28gc3RyYWlnaHRmb3J3YXJkLCBidXQgdGhpcyBpcyBhIHVzZWZ1bCBydWxlIG9mIHRodW1iLlsxXVsyXVRoZXJlIGFyZSB0d28ga2luZHMgb2YgbmV1cm9ucyBpbnZvbHZlZCBpbiB0aGUgdHJhbnNtaXNzaW9uIG9mIGFueSBzaWduYWwgdGhyb3VnaCB0aGUgc3ltcGF0aGV0aWMgc3lzdGVtOyBwcmUgIGFuZCBwb3N0ICBnYW5nbGlvbmljLiAKQnV0LCBCdW5jb21iZSBDb3VudHkgU2hlcmlmZiBWYW4gRHVuY2FuIHNheXMgaGlzIG9mZmljZSBkb2VzbiBoYXZlIGEgcmVjb3JkIG9mIGEgY2FsbCBtYWRlIGZyb20gRWlsZWVuIGhvbWUuIFNvLCB0aGlzIHBhc3QgSmFudWFyeSwgRWlsZWVuIGNvbnRhY3RlZCBOZXdzIDEzIGludmVzdGlnYXRpdmUgdGlwIGxpbmUgZm9yIGhlbHAuIEluIE1hcmNoIHdlIHdlbnQgdG8gUGxheWVycyBDaWdhciBCYXIgd2l0aCBhIGNlbGwgcGhvbmUgdG8gcmVjb3JkIHRoZWlyIHZpZGVvIHBva2VyIG1hY2hpbmVzLiBXZSB3YXRjaGVkIGFzIG9uZSBtYW4gYXBwYXJlbnRseSBiZXQgc21hbGwgYW1vdW50cyBvZiBtb25leSB3aXRoIGp1c3QgYSBjbGljayBvZiBhIG1vdXNlLiBXZSB0aGVuIGNvbnRhY3RlZCB0aGUgU2hlcmlmZiBPZmZpY2UgdG8gcmVwb3J0IHdoYXQgd2UgaGFkIHNlZW4gYW5kIGp1c3QgYSBmZXcgZGF5cyBsYXRlciB0aGV5IGJ1c3RlZCB0aHJlZSBiYXJzLCBpbmNsdWRpbmcgUGxheWVycy4KV2VzdCBQZWNvcyBQaXBlbGluZSBmYWNlcyBhbiBlbnZpcm9ubWVudGFsIGxpYWJpbGl0eSBsYXdzdWl0ICAgd2hvc2UgZXhwb3N1cmUgY291bGQgaW1wYWN0IGl0cyBmdXR1cmUgYW5kIGdyZWF0bHkgbWFnbmlmeSB0aGUgcmlzayBmb3IgaXRzIHBvdGVudGlhbCBidXllci4gU3RvdXQgaXMgbWV0aWN1bG91cyBpbiBkb2luZyBoaXMgaG9tZXdvcmsgICBhbmQgZXZlbnR1YWxseSBpcyB0aGUgb25seSBzdHVkZW50IHRvIHNwZWFrIG91dCBpbiBjbGFzcyBhZ2FpbnN0IHRoZSBtZXJnZXIuIApIb3cgdG8gQnJ1c2ggWW91ciBUZWV0aEJydXNoaW5nIHlvdXIgdGVldGggaXMgaW1wb3J0YW50IHRvIHJlbW92ZSBzdHJheSBmb29kIHBhcnRpY2xlcywgbWFzc2FnZSB0aGUgZ3VtcywgZWxpbWluYXRlIHBsYXF1ZSwgYW5kIGZyZXNoZW4gYnJlYXRoLiBJdCBhbHNvIGhlbHBzIHRvIGRlZmVuZCBhZ2FpbnN0IGNhdml0aWVzIGFuZCBwZXJpb2RvbnRhbCBkaXNlYXNlLiBHb29kIGZsb3NzaW5nIHRlY2huaXF1ZSB3aWxsIGhlbHAgeW91IHJlbW92ZSBkZWJyaXMgYmV0d2VlbiB0aGUgdGVldGgsIHByZXZlbnRpbmcgZ2luZ2l2aXRpcyBhbmQgcGVyaW9kb250aXRpcy4gClVzLCBpdCBnYXZlIHVzIGEgZ3JlYXQgZmVlbGluZyBvZiBjb25maWRlbmNlLCBzYWlkIEpvaG5zb24uIGxlYXJuZWQgc28gbXVjaCBmcm9tIGhpbS4gaGVyIG90aGVyIGZvdXIgSnVubyBub21pbmF0aW9ucyBmb3Igdm9jYWwgamF6eiBhbGJ1bSAoaGVyIGFsYnVtLCBMdWNreSwgd29uIGluIDIwMDkpLCBNZWFuaW5nIFRvIFRlbGwgWWEgaXMgbm9taW5hdGVkIGluIHRoZSBhZHVsdCBjb250ZW1wb3JhcnkgY2F0ZWdvcnksIGdpdmVuIGl0cyBSIGZ1bmsgYW5kIHNvdWwgZmxhdm91cnMuCllvdSB3YW50IHRvIHNtb290aCB0aGUgcGllem8gb3V0cHV0IChzb21lb25lIG1lbnRpb25lZCBkZWRpY2F0ZWQgSUNzIGZvciB0aGlzKSwgdGhlbiBydW4gdGhlIG91dHB1dCB0byBhIGJhdHRlcnkgY2hhcmdlIGNvbnRyb2xsZXIgc28geW91IGRvbiBvdmVybG9hZCB3aGF0ZXZlciBraW5kIG9mIGJhdHRlcmllcyB5b3UgdXNpbmcuIApVbmQgc28gZmxsdCBhdWNoIGRhcyBVcnRlaWwgbWVpbmVyIEdzdGUgYXVzIEJyZW1lbiB3ZW5pZyBiZXJyYXNjaGVuZCBzZWhyIHBvc2l0aXYgYXVzOiBTZWhyIGd1dGUgU3VwcGUsIHBlcmZla3QgYWJnZXNjaG1lY2t0LCBkZXplbnRlIGVsZWdhbnRlIEdlc2NobWFja3Nrb21iaW5hdGlvbiB2b24gQmFuYW5lIHVuZCBwaWthbnRlbSBDdXJyeSBzZWhyIGxlY2tlciEgRGllIExhbmdvc3Rpbm8gTW9yY2lsbGEgVGVpZ3RzY2hjaGVuIHdhcmVuIGJlcmhhdXB0IGRlciBSZW5uZXIuIEVpbiB3ZW5pZyBhc2lhdGlzY2hlciBFaW5mbHVzcyB1bmQgZWluIGd1dGVzIEJlaXNwaWVsIGZyIGdlbHVuZ2VuZSBmdXNpb24gY3Vpc2luZScuIERpZSBHYXJuZWxlbiB1bmQgZGllIEJsdXR3dXJzdCBzdGVja2VuIGd1dCB2ZXJidW5kZW4gaW4gZGVuIGtudXNwcmlnZW4gVGVpZ3RzY2hjaGVuLCBsaWVlbiBzaWNoIGd1dCBhYmJlaWVuIHVuZCB3YXJlbiB1bXdlcmZlbmQgZ3V0LiAKVGhlIHNlZW1pbmdseSB1bmNvbnZpbmNlZCBkZW1vbiBwaWNrZWQgdXAgYSBrbmlmZSBhbmQgY2hvcHBlZCBvZmYgbXkgYXJtLiBBZ2FpbiwgSSB3YWlsZWQgaW4gcGFpbiwgSSBkb24ga25vdyB3aHkgSSBkaWQsIGJ1dCBJIGRpZC4gIlllYSwgaXQgd29ya2VkIiBzYWlkIHRoZSBkZW1vbi4gCkJ1dCBpcyBpdCBhbnkgZWFzaWVyIHRvIGFmZmVjdCBhY3R1YWwgY2hhbmdlPyBUaGUgdGhpbmcgdGhhdCBmcnVzdHJhdGVzIG1lIHRoZSBtb3N0IGFib3V0IHdoZW5ldmVyIHRoZSBpbnRlcm5ldCBoYXMgc29tZSBmcmVhayBvdXQgYWJvdXQgc29tZSBzb2NpYWwgaXNzdWUgcG9wcGluZyB1cCBpbiBtZWRpYSBpcyB3aG8gb3Igd2hhdCBpcyB0aGlzIGV2ZW4gaGVscGluZz8gU2V0dGluZyBhc2lkZSB0aGUgZmFjdCB0aGF0IHRoZXJlIGFyZSBhbGwgc29ydHMgb2YgbW9yZSBwcmVzc2luZyBpc3N1ZXMgd2UgY291bGQgYmUgZ2V0dGluZyBhbmdyeSBhYm91dCwgZXZlbiBpZiB3ZSBqdXN0IG5hcnJvdyBvdXIgc2NvcGUgdG8gb25seSBjYXJpbmcgYWJvdXQgdGhlc2UgaXNzdWVzLCB3aGF0IGlzIGFjaGlldmVkIGZyb20gYWxsIG9mIHRoaXMgaW50ZXJuZXQgZmlnaHRpbmc/IEkgZG91YnQgd2UgY2hhbmdpbmcgYW55IHBvc2l0aW9ucyBvbiB0aGlzLiBUaGUgcGVvcGxlIHdobyBhbHJlYWR5IGFncmVlIGdldCB0byBwYXQgdGhlbXNlbHZlcyBvbiB0aGUgYmFjayBmb3Igbm90IGJlaW5nIGFuIG90aGVyIGFuZCB3ZSBhbGwgZ2V0IHRoZSBjaGFuY2UgdG8ga2ljayBhbiBlYXN5IHRhcmdldC4gCjI1bWJwcyBkb3duLCA1IHVwLiAKT3ZlcnZpZXcgZm9yIGZlYXJ0cmljaApJIG5vdCBzdXJlLiBJIGhhdmUgcGVyaGFwcyBhIGRvemVuIHRpbGUgbWFudWZhY3R1cmVyIGNhdGFsb2dzIGZyb20gYWJvdXQgdGhpcyBwZXJpb2QgKDE5MzAgYW5kIG5vbmUgaGF2ZSBzdHJ1Y2sgbWUgYXMgc3Ryb25nbHkgYXMgdGhpcyBvbmUgZG9lcyBpbiBpdHMgInJlbGF0aW9uIiB0byBWYW5kZXJwb2VsLiBJbiBhbnkgZXZlbnQsIHRoZXJlIHNlZW1zIHRvIGJlIGEgInRoZXJlIiB0aGVyZS4gRGF2aWxlciAoMTY1MyAxNzAxKSx3YXMgYW4gYXJjaGl0ZWN0IGFuZCBhIHN0dWRlbnQgb2YgSmVhbiBGcmFuY29pcyBCbG9uZGVsIHdobyB3b3JrZWQgdmVyeSBleHRlbnNpdmVseSBvbiB0aGUgYXJjaGl0ZWN0dXJhbCB0aGVvcnkgb2YgR2lhY29tbyBCYXJvenppIG9yIEphY29wbyBCYXJvenppIGRhIEhlcmUgaGUgaWRlbnRpZmllcyBhbmQgY2xhc3NpZmllcyAyMCBkaWZmZXJlbnQgdHlwZXMgb2YgY29sdW1ucywganVzdCB0byBtYWtlIHN1cmUgdGhhdCBldmVyeW9uZSB3YXMgb24gdGhlIHNhbWUgcGFnZSwgc28gdG8gc3BlYWs6LiAKIkdyZWV0aW5nIHRoZSBBbmdlbHMgQXJvdW5kIFlvdSJFYWNoIG9mIHVzIGlzIHN1cnJvdW5kZWQgYnkgdHJpbGxpb25zIG9mIEFuZ2VscyB3aG8gYXJlIHJlYWR5IGFuZCB3aWxsaW5nIHRvIGFzc2lzdCB5b3Ugd2hlbiBhc2tlZC4gV2hvIGFyZSB0aGVzZSB3aW5nZWQgbWVzc2VuZ2VycyBhbmQgaG93IGNhbiB5b3UgY29ubmVjdCB3aXRoIHRoZW0/IExlYXJuIHRoZSBiYXNpY3Mgb2YgQW5nZWxpYyBIaWVyYXJjaGllcyBhbmQgd2hlcmUgeW91ciBHdWFyZGlhbiBBbmdlbCBmaXRzIGluIHlvdXIgZXZlcnlkYXkgbGlmZS4gClRoaXMgcGFzdCAzIG1vbnRocywgSSd2ZSB0YWtlbiBtdWx0aXBsZSBicmVha3MsIG5vdCBwbGF5ZWQgYXMgbXVjaCwgc3R1ZGllZCBtb3JlLCByZXZpZXdpbmcgaGFuZHMgdyBmcmllbmRzL2NvYWNoIGFuZCBtb3N0bHkgcGxheWluZyBncmVhdCAgIDE4IGJ1eSBpbnMuIERldmFzdGF0aW5nLiBJJ3ZlIGxlYXJuZWQgdG8gbm90IHBsYXkgaWYgSSBkb24ndCBmZWVsIGxpa2UgaXQgYW55bW9yZS4gSSB1c2VkIHRvIGZlZWwgdGhlIG5lZWQgdG8gZ3JpbmQgb3V0IG9mIGl0LCBidXQgY29tcGFjdGluZyBhbGwgdGhvc2UgbG9zc2VzIGlzIGluc2FuZWx5IHRvdWdoLCBhdCBsZWFzdCBvbiBteSBtZW50YWwgZ2FtZS4KVGhhdCBjb3VydGVzeSBvZiB0aGUgcHJvamVjdCBSb29tIGFuIG9uIHNpdGUgYXJlYSBpbiBvbmUgb2YgdHdvIHNob3cgaG9tZXMgd2hlcmUgYWxsIHRoZSBvcHRpb25zIGFyZSBvbiBkaXNwbGF5LiBJdCBoZXJlIHdoZXJlIGJ1eWVycyB3aWxsIGJlIGFibGUgdG8gc2l0IGRvd24gd2l0aCAgc2FsZXMgc3RhZmYgYW5kIHNvcnQgdGhyb3VnaCB0aGUgb2ZmZXJpbmdzLCB3aGljaCBhbHNvIGluY2x1ZGUgY291bnRlcnRvcHMsIG1pcnJvciBmcmFtZXMgYW5kIGRvemVucyBvZiBkaWZmZXJlbnQgY2FycGV0IGNvbG91cnMuClRoaXMgaXMgZG9uZSBieSBpbmRlcGVuZGVudCBhdWRpdGluZyBjb21wYW5pZXMgdG8gaW5zcGVjdCBzb3VyY2UgY29kZXMgYW5kIHRoZSBzZXJ2ZXJzIG9mIEludGVybmV0IHBva2VyIHNpdGVzIGFuZCBhcmUgZG9uZSBpbiBzdXJwcmlzZSBpbnNwZWN0aW9ucy4gCkF0IHRoaXMgcG9pbnQgSSB0aGluayBJIHJlc2lnbmVkIHRoZSBmYWN0IHRoYXQgSSB3YXMgcmFjaW5nIGZvciBzZWNvbmQuIApPYnZpb3VzbHkgSSBrbm93IHdoYXQgdGhpcyBwb2ludHMgdG8sIGJ1dCBJIGtub3cgaWYgSSBjb25mcm9udCBoaW0gaXQnbGwganVzdCBiZSBhIGh1Z2UgZmlnaHQgYW5kIGhlJ2xsIG5ldmVyIGFkbWl0IHRvIGl0LiBJIGRvbid0IGV2ZW4gd2FudCB0byBnZXQgaW50byBhbGwgdGhpcyB3aXRoIGhpbSBjYXVzZSBJJ20gZGVhbGluZyB3aXRoIGZhbWlseSBkcmFtYSBhbmQgdGhlIGRlYXRoIG9mIG15IGdyYW5kZmF0aGVyLCBidXQgb2YgY291cnNlIHRoaXMgaXMgcmVhbGx5IGh1cnRpbmcgbWUgdG9vLi4gCkJ1dCBhcyB3aXRoIGFueSBsYXJnZSBjb3Jwb3JhdGlvbiwgWWFob28hIGhhcyBpdHMgcHJvYmxlbXMuIApEbyB5b3UgbmVlZCBhIGNlcnRpZmljYXRpb24gbm93LCBvciBjYW4geW91IHdhaXQgdW50aWwgeW91IGhhdmUgMzYgbW9udGhzIGFuZCA0LDUwMCBob3VycyBvZiBwcm9qZWN0IGV4cGVyaWVuY2U/IElmIHlvdSBuZWVkIGEgY2VydGlmaWNhdGlvbiBub3csIGdvIGZvciB0aGUgQ0FQTSAgIHlvdSdsbCBoYXZlIHRoZSBlZHVjYXRpb24gcmVxdWlyZW1lbnQgZm9yIHRoZSBDQVBNIG1ldCAoMjMgZWR1Y2F0aW9uIGhvdXJzKS4KU2hlIGhhcyBhbHNvIGJlZW4gcHVibGlzaGVkIGluIEJyYW5zb24gSW5zaWRlciBuZXdzcGFwZXIuIApVbmluc3RhbGwgdGhlIGFwcC4gKElmIHRoZSBhcHAgd2Fzbid0IHVwZGF0ZWQsIEkgaW1hZ2luZSB5b3UnZCB1cGRhdGUsIHRoZW4gbG9nIG91dCBhbmQgdW5pbnN0YWxsLikKRm9yIHN0YXJ0ZXJzLCBpdCdzIGltcG9ydGFudCB0byBhY2NlcHQgdGhhdCB0aGVOZXcgWW9yayBUaW1lc2hhcyBhbHdheXMgICBvciBhdCBsZWFzdCBmb3IgbWFueSBkZWNhZGVzICAgYmVlbiBhIGZhciBtb3JlIGVkaXRvciBkcml2ZW4sIGFuZCBzZWxmIGNvbnNjaW91cywgcHVibGljYXRpb24gdGhhbiBtYW55IG9mIHRob3NlIHdpdGggd2hpY2ggaXQgY29tcGV0ZXMuIEhpc3RvcmljYWxseSwgdGhlTG9zIEFuZ2VsZXMgVGltZXMsIHdoZXJlIEkgd29ya2VkIHR3aWNlLCBmb3IgaW5zdGFuY2UsIHdhcyBhIHJlcG9ydGVyIGRyaXZlbiwgYm90dG9tIHVwIG5ld3NwYXBlci4gClRoZSB2YWxpZGl0eSBvZiB0aGlzIHRoZW9yeSBpcyBzdHJlbmd0aGVuZWQgYnkgU2hhdGluIHJlcG9ydCB0aGF0IDE4IG91dCBvZiAxOCBwYXRpZW50cyB3aXRoIHJoZXVtYXRvaWQgYXJ0aHJpdGlzIGltcHJvdmVkIG9uIGEgZ2x1dGVuIGZyZWUgZGlldCwgb2Z0ZW4gd2l0aGluIHR3byB3ZWVrcyBhZnRlciB0aGUgYmVnaW5uaW5nIG9mIHRoZSBkaWV0YXJ5IHJlc3RyaWN0aW9uIG9mIGNlcmVhbCBncmFpbnMuCktpZHMgYXJlIGF3ZXNvbWUuIEV2ZW4gd2hlbiBJIG1ldCB0aGVtLCB0aGV5IGhhZCBzb21lIGJlaGF2aW9yYWwgc3R1ZmYgSSBrbmV3IEkgd2FudGVkIHRvIHdvcmsgb24sIGJ1dCB0aGV5IHdlcmUgYWJzb2x1dGVseSBub3Qgc3BvaWxlZC4gClRvbSBDb2NocmFuZSByZWxlYXNlcyBoaXMgcmV3b3JrZWQgdmVyc2lvbiBvZiAnQmlnIExlYWd1ZScKV2hlbiBpdCBpcyB0aW1lIHRvIHJlZmluaXNoIHlvdXIgaG9tZSBwb2tlciB0YWJsZSwgY29uc2lkZXIgc29tZSBvZiB0aGUgdXBncmFkZWQgY2hvaWNlcyBpbiBwb2tlciBmZWx0cywgcmF0aGVyIHRoYW4gQ29tbW9uIEdyZWVuIFBva2VyIEZlbHQuIFNvbWUgb2YgdGhlIHdlYnNpdGVzIG9mZmVyIHRoZSB1cGdyYWRlZCBvcHRpb25zIGZvciBsZXNzIHRoYW4gcmV0YWlsIHByaWNlcyBhbmQgaXQgaXMgYSBzbWFsbCBwcmljZSB0byBwYXkgZm9yIGEgbXVjaCBzbW9vdGhlciBwbGF5aW5nIHN1cmZhY2UuLiAKIkkndmUgaGFkIHBsZW50eSBvZiBwZW9wbGUgaW4gdGhlIHBhc3QgY29tbWVuZCBtZSBmb3IgbXkgYWJpbGl0eSB0byBzcGFyayB1cCBhIGdvb2QgY29udmVyc2F0aW9uLCB3aGljaCBoYXMgbWFkZSBtZSBmZWVsIHRoYXQgSSdtIGRvaW5nIHNvbWV0aGluZyByaWdodC4iIFRoZSB2ZW51ZSBpcyBleHBlY3RlZCB0byByZXRhaW4gaXRzIFRBQiBhbmQgS2VubyBzZXJ2aWNlcywgaG93ZXZlciB0aGUgcG9rZXIgbWFjaGluZXMgaGF2ZSBiZWVuIHJlbW92ZWQuIFJFQUQgQUxTTzpPbGQgQmF0aHVyc3QgaG90ZWxzIGZlYXR1cmVkIGluIEF1c3RyYWxpYW4gTmF0aW9uYWwgVW5pdmVyc2l0eSBwaG90byBhcmNoaXZlIEFzIGEgbWVhbnMgb2YgYnVpbGRpbmcgaHlwZSBmb3IgdGhlcmUgb3BlbmluZywgTXMgV2lsbGlhbXMnIGRhdWdodGVyIEtpcnN0eW4gU2NodW1hY2hlciBwb3N0ZWQgYSB2aWRlbyB0byBGYWNlYm9vayB0ZWFzaW5nIHRoZSB3b3JrIHRoYXQgaGFkIGdvbmUgaW50byByZW5vdmF0aW5nIHRoZSB2ZW51ZS4gVGhlIHZpZGVvIGhhcyBzaW5jZSByZWNlaXZlZCA3MDAwIHZpZXdzLi4gClRoYXQgYW4gYWNyb3NzIHRoZSBib2FyZCB0aGluZyBhcyBhcHBsaWNhYmxlIHRvIGNhZmZlaW5lIGFzIGl0IGlzIHRvIGNyYWNrLiAKVG8gY2FwdHVyZSB0aGVpciBhdHRlbnRpb24sIGJyYW5kcyB3aWxsIG5lZWQgdG8gbWFrZSBhIGJpZyBzcGxhc2guIFRoZSBDb25jaWVyZ2UgQ2x1YiByZWNlbnRseSBsYXVuY2hlZCBhICJaZXJvIEdyYXZpdHkgUm9vbSIgdG8gZ2V0IGNvbnN1bWVycyBleGNpdGVkIGFib3V0IHRoZSBIUCBTcHJvY2tldCAyMDAgcGhvdG8gcHJpbnRlci4gCk9uZSBhYmlsaXR5IHRvIGNvcGUgd2l0aCB0aGUgY3VzdG9tZXIvZW1wbG95ZWUgZHluYW1pYy4gCkVuIHJhbGl0LCBpbCBzIGRhdmFudGFnZSBkIHJ1bWV1ciAgZm9ydGUgdmFsZXVyIHByb3BhZ2FuZGlzdGUgYXZlYyBsYXF1ZWxsZSBvbiBhIGZhaXQgZmV1IGRlIHRvdXQgYm9pcy4gCkVhcmx5IG1vcm5pbmcgbXkgaHVzYmFuZCBoYWQganVzdCBsZWZ0IGZvciB3b3JrLiBJIHRob3VnaHQgSSBoZWFyZCB0aGUgYmVkcm9vbSBkb29yIGNyZWFrIG9wZW4sIGl0IHJvdXNlZCBtZSBhIGJpdCwgc28gSSBhc2tlZCBpZiBoZSBmb3JnZXQgc29tZXRoaW5nLiBUaGVuIEkgdHJ5IHRvIHR1cm4gb3ZlciBhbmQgbG9vayBidXQgSSBjb3VsZG4gbW92ZS4gSSB3YXMgb24gbXkgc2lkZSBhbmQgaXQgZmVsdCBsaWtlIHNvbWVvbmUgd2FzIGhvbGRpbmcvIHB1c2hpbmcgbXkgZmFjZSBkb3duIGludG8gdGhlIHBpbGxvdy4gQXMgdGhpcyBoYXBwZW5zIEkgaGVhciBhIGxvdywgZGVlcCwgdmlsbGFpbm91cyBsYXVnaC4gVGhlbiBpdCBzdG9wcGVkLgpNYWlzIGlsIG5lIGZhdXQgcXVhbmQgbW1lIHBhcyBvdWJsaWVyIHVuIGR0YWlsIDogYydlc3QgcXUnaWwgeSBhIGV1IGRlcyAibWxhbmdlcyIuIE5hbm1vaW5zIHBvdXIgdG91dGVzIHNvcnRlcyBkZSByYWlzb25zIGNldHRlIHBob3RvIGVzdCBlbWJsbWF0aXF1ZS4gVm9pciBsYSBmaW4gZGUgY2UgdGV4dGUgIURlcyBmZW1tZXMgYXJhYmVzIHNlIHNvbnQgZmFpdCBkdm9pbGVyIGF1IGNyaSBkZSBsZXMgYXJhYmVzIGRlaG9ycyAhIENvbW1lIHMnaWxzIG4ndGFpZW50IHBhcyBmcmFuYWlzLiAKVGhlc2UgdGhpbmdzIGFyZSBuYXR1cmFsIGFuZCBldmVudHVhbGx5IHlvdSBkZXZlbG9wIHRoZSBhcHByb3ByaWF0ZSBzdHJhdGVneS4gVGhlcmUgbWF5IGJlIHNvbWUgaml0dGVycyBhbmQgYW54aWV0eSwgc2hha2luZyBoYW5kcyBhbmQgc3VjaC4gVGhlc2UgdGhpbmdzIHdpbGwgcGFzcy4gWW91IHF1aWNrbHkgcmVhbGl6ZSBob3cgc29mdCB0aGVzZSBnYW1lcyBhcmUgYW5kIHlvdSB3aWxsIGNydXNoLiBWYXJpYW5jZSBkb2VzIGV4aXN0IGFuZCB5b3UgYXdhcmUgb2YgdGhpcyBieSBub3csIHNvIGJ1ZGdldCB5b3Vyc2VsZiBhY2NvcmRpbmdseS4gCldhcyBzb2xpZCBib3RoIGdhbWVzLiAKVmVyeSBmZXcgcGVvcGxlIHRoZXJlIGtuZXcgYW55IHNvIHRoYXQgd2FzIGhhcmQuLiAKWWVzLCBpZiB5b3UgZ28gdG8geW91ciBzdG9yYWdlIGl0IGdpdmVzIHlvdSB0aGUgb3B0aW9uIHRvIHRyYW5zZmVyIHlvdXIgcG9rbW9uIGZyb20geW91ciBEUywgaWYgeW91IGdldCBwb2ttb24gaW4gZGlhbW9uZC9wZWFybCBhZnRlciB5b3VyIGZpcnN0IHRyYW5zZmVyIGp1c3QgdHJhbnNmZXIgYWdhaW4gaXQgdXBkYXRlcyB5b3VyIGNvbGxlY3Rpb24uIEhvd2V2ZXIgb25seSB0aGUgcG9rbW9uIGZyb20gb25lIGdhbWUgY2FyZCBjYW4gYmUgdXNlZC4gTmFuZCB5ZXMgYWdhaW4gMiBwZW9wbGUgY2FuIHVzZSB0aGUgc2FtZSBwb2ttb24gZnJvbSB0aGUgMSBkcy4gCklmIHlvdSBwcmVmZXIgc2xvdCBtYWNoaW5lcywgb3B0IGZvciB2aWRlbyBwb2tlciBzaW5jZSBpdCBoYXMgdGhlIGJlc3Qgb2Rkcy4gSWYgeW91IGNob29zZSB0byBwbGF5IG90aGVyIHNsb3QgbWFjaGluZXMsIHBsYWNlIG1heGltdW0gYmV0cyB0byBpbmNyZWFzZSB5b3VyIGNoYW5jZXMgb2Ygd2lubmluZy4gSWYgeW91IHdhbnQgdG8gbGVhcm4gaG93IHRvIGltcHJvdmUgeW91ciBjaGFuY2VzIGF0IGNyYXBzLCByZWFkIG9uIS4gCklmIGhlIGZhaWxzIGFueSBvZiB0aGVzZSBzdGVwcyAoZG9lc24gZ2l2ZSBtZSB0aGUgdG95LCB0cmllcyB0byBncmFiIHRoZSB0b3kgb3V0IG9mIG15IGhhbmQgYmVmb3JlIGN1ZWQpLCB0aGVuIHdlIHN0b3AgcGxheWluZyBmb3IgYXdoaWxlLiAKQWxpIGVtYm9kaWVkIGEgcHJpbmNpcGxlLiAKR2luc2J1cmcgb25jZSBzYWlkIHRoYXQgU2NhbGlhIHdhcyBhYnNvbHV0ZWx5IGNoYXJtaW5nIG1hbiwgYW5kIGhlIGNhbiBtYWtlIGV2ZW4gdGhlIG1vc3Qgc29iZXIganVkZ2UgbGF1Z2guIFNoZSBzYWlkIHRoYXQgc2hlIHVyZ2VkIGhlciBmcmllbmQgdG8gdG9uZSBkb3duIGhpcyBkaXNzZW50aW5nIG9waW5pb25zIGhlIGJlIG1vcmUgZWZmZWN0aXZlIGlmIGhlIGlzIG5vdCBzbyBwb2xlbWljYWwuIEkgbm90IGFsd2F5cyBzdWNjZXNzZnVsLiAKMTMpICJNYW5pcHVsYXRpb24gbWF5IGFsc28gYmUgdXNlZCBhcyBvbmUgY29tcG9uZW50IG9mIHRoZSBjb21iaW5lZCB0cmVhdG1lbnQgZm9yICdmYWNldCBzeW5kcm9tZScgYW5kIGZvciBhc3NvY2lhdGVkIGxlc2lvbnMgb2YgZXh0cmFkdXJhbCBvcmlnaW4sIHN1Y2ggYXMgbGlnYW1lbnRvdXMgb3IgbXVzY3VsYXIgbGVzaW9ucy4iCkFjdHVhbGx5LCB5b3UgY2FuIGFuZCB3aWxsIGdvIHRvIGphaWwsIGhvd2V2ZXIgdGhlIGNvdXJ0IHN5c3RlbSBhbmQgdGhlIGdvdmVybmluZyBib2R5IG9mIGNoaWxkIHN1cHBvcnQgd2lsbCBnaXZlIHlvdSBvcHBvcnR1bml0aWVzIHRvIGF2b2lkIGl0IGFsb25nIHRoZSB3YXkuIApNaXIgaXN0IGplZG9jaCB3aWNodGlnLCBkYXNzIGVpbmlnZXJtYWVuIHZlcm5uZnRpZyBtaXQgZGVtIEdlbGQgdW1nZWdhbmdlbiB3aXJkLCBkZXNoYWxiIGJpdHRlIGljaCBpbiBkZXIgQmV3ZXJidW5nIGt1cnogenUgZXJ3aG5lbiwgd2VsY2hlIExpbWl0cyBvZGVyIFNORyBCdXkgaW5zIGdlc3BpZWx0IHdlcmRlbiBzb2xsZW4uCklmIHlvdSBwYXkgNDIlIGluY29tZSB0YXgsIHlvdSBtYWtpbmcgYmFuay4gCldpbm5lcnMgZWFybiBnaWZ0IGNhcmRzIG9yIGEgcGFpZCBiYXIgdGFiLiAKRGV2ZWxvcCB5b3VyIG93biBvcGluaW9uLiAKS2VpbiBHZWxkIGdld29ubmVuLCBudXIgZWluIGJpc3NjaGVuIHZlcmxvcmVuLi4gCk15IGNhciBpcyBzdGlsbCBpbiB0aGUgc2hvcCwgYWx0aG91Z2ggdGhleSBwcm9taXNlZCBtZSB0aGlzIG1vcm5pbmcgdGhhdCB0aGV5IHdlcmUgZmluYWxseSBwdXR0aW5nIGhlciBiYWNrIHRvZ2V0aGVyIGFuZCBvdGhlciB0aGVuIHJlcGxhY2luZyBzZWFscywgZ2Fza2V0cyBhbmQgYSB0aW1pbmcgYmVsdCwgdGhleSBjb3VsZG4ndCBmaW5kIGFueXRoaW5nIHdyb25nLiBUaGVyZSBpcyB0aGUgaXNzdWUgb2YgYW4gYW5ub3lpbmcgc291bmQgdGhhdCBjYW4ndCBiZSBpZGVudGlmaWVkIHdoaWNoIHdlJ3JlIGhvcGluZyB3aWxsIG1hZ2ljYWxseSBnbyBhd2F5IHdoZW4gdGhlIGVuZ2luZSBpcyByZWFzc2VtYmxlZC4gClRoZXJlIGFyZSBhIGZldyBjb21tb24gcmVhc29ucyB3ZSBmaW5kIG91cnNlbHZlcyB3aXRoIHJlZCwgYmxvdGNoeSBza2luLiBGaXJzdCBsZXQncyB0YWxrIGFib3V0IHN1biBkYW1hZ2UgYW5kIHN1biBleHBvc3VyZS4gWW91J3JlIGZhbWlsaWFyIHdpdGggc3VuYnVybiwgc29tZXRpbWVzIGRlc3BpdGUgeW91ciBiZXN0IHN1bnNjcmVlbiBhcHBseWluZyBlZmZvcnRzLiBCdXQgZm9yIHNvbWUgcGVvcGxlLCBleHBvc3VyZSB0byBzdW5saWdodCBjYW4gY2F1c2UgYSByZWQgcmFzaCBhbmQgYmxvdGNoeSwgc2NhbHkgc2tpbiAgIHRoaXMgaXMgY2FsbGVkIHBob3Rvc2Vuc2l0aXZpdHksIGFuZCBpcyBjYW4gYmUgY2F1c2VkIGJ5IGFuIGltbXVub2xvZ2ljYWwgcmVzcG9uc2UgKGl0J3MgYSBzdW4gYWxsZXJneSkuIFNvbWUgbWVkaWNhdGlvbnMgaW5jbHVkaW5nIG9yYWwgY29udHJhY2VwdGl2ZXMsIGFudGloaXN0YW1pbmVzIGFuZCBzb21lIHR5cGVzIG9mIGFudGliaW90aWNzIGNhbiBhbHNvIGNhdXNlIHN1biBzZW5zaXRpdml0eSwgYXMgY2FuIHNvbWUgZXhmb2xpYXRpbmcgYW5kIGFudGkgYWdpbmcgc2tpbiBjYXJlIHByb2R1Y3RzLgpOZXh0IGdlbmVyYXRpb24gdmlkZW8gY2FtZXJhIHNlbnNvciAzIGVuaGFuY2VkIHZpZGVvIGNhbWVyYSBzZW5zb3Igd2l0aCBzaXggdGltZXMgdGhlIHByb2Nlc3NpbmcgcG93ZXIgb2YgcHJldmlvdXMgZ2VuZXJhdGlvbiBzeXN0ZW1zIHRvIHN1cHBvcnQgbGFuZSBkZXBhcnR1cmUgd2FybmluZyBhbmQgbGFuZSBrZWVwaW5nIHN5c3RlbXMsIGZvcndhcmQgY29sbGlzaW9uIHdhcm5pbmcsIGZvcndhcmQgZGlzdGFuY2UgaW5kaWNhdGlvbiwgdHJhZmZpYyBzaWduIHJlY29nbml0aW9uLCBoaWdoL2xvdyBiZWFtIGNvbnRyb2wsIHBlZGVzdHJpYW4gZGV0ZWN0aW9uIGFuZCBhIHJhbmdlIG9mIG5ldyBmdW5jdGlvbnMuCkJ1dCB3aGljaCBhcmUgdGhlIGJyYW5kcyB0aGF0IGNhbiBwb3NzaWJseSBidXkgYSBwb2tlciBzcG90PyAiV29ybGR3aWRlLCBhIGxvdCBvZiBjYXIgYnJhbmRzIGFzc29jaWF0ZSB3aXRoIHBva2VyOyB3ZSBoYXZlIHNlZW4gYSBsb3Qgb2YgZXlld2VhciBicmFuZHMgc3BvbnNvcmluZyBwb2tlciBhbmQgd2UgaGF2ZSBhbHNvIHNlZW4gd2F0Y2ggYnJhbmRzIHNwb25zb3JpbmcgcG9rZXI7IHNvLCB3ZSBhcmUgdGFsa2luZyB0byBhbGwgc3VjaCBicmFuZHMgYW5kIGluZGl2aWR1YWwgZnJhbmNoaXNlcyBhcmUgYWxzbyBzcGVha2luZyB0byB0aGUgYnJhbmRzIGJlY2F1c2UgdGhleSB3YW50IHNwb25zb3JzIGZvciB0aGVpciBqZXJzZXlzIGV0YywiIHNheXMgQnVybWFuLgpCb25pdGEgTGFjeSBvZiBNYWRpc29udmlsbGUgaGFzIGJlZW4gd29ya2luZyB0ZW1wb3Jhcnkgam9icyBzaW5jZSBzaGUgZ290IGxhaWQgb2ZmIGluIDIwMDguIExhY3kgc2F5cyBzaGUgaG9wZXMgaGVyIGx1Y2sgd2lsbCBjaGFuZ2Ugd2l0aCB0aGUgY2FzaW5vLiAKSG9uLCAyOSwgYW5kIGhpcyBmaWFuYyBBbm5hIE5ndXllbiwgMjcsIGxpdmUgaW4gYSA5OTAgc3F1YXJlIGZvb3QsIHR3byBsZXZlbCBwdXJwb3NlIGJ1aWx0IGxvZnQgbmVhciBDaXR5IEhhbGwuIEl0IGlzIGEgdGhvdWdodGZ1bGx5IHJlbm92YXRlZCwgY2VudHJhbGx5IGxvY2F0ZWQsIG1vdmUgaW4gcmVhZHkgc3BhY2UgdGhhdCB0aGV5IHdlcmUgYXN0b25pc2hlZCB0byBmaW5kLiBoYWQgYmVlbiBsb29raW5nIGF0IHN0YW5kYXJkIHR3byBiZWRyb29tLCB0d28gYmF0aCwgdHdvIHBhcmtpbmcgcGxhY2VzIGFuZCBsb3Npbmcgb3V0IG9uIHRoZW0gYWxsLCBzYXlzIEhvbi4gd2UgZm91bmQgdGhpcywgd2hpY2ggaGFzIGFsbCBvdXIgZmF2b3VyaXRlIGZlYXR1cmVzLCB3ZSBuZXZlciBkcmVhbWVkIHdlIGVuZCB1cCBvd25pbmcgaXQuIEl0IG5vdCBhIGNvb2tpZSBjdXR0ZXIgcGxhY2UuIEl0IG1hdGNoZWQgYWxsIHRoZSBwaWN0dXJlcyB3ZSBnYXRoZXJlZCBvZiB0aGUgdHlwZXMgb2YgcGxhY2VzIHdlIHdhbnRlZC4gZGF5IHRoZXkgdG9vayBwb3NzZXNzaW9uLCBoZSBwcm9wb3NlZC4gTmd1eWVuIGFjY2VwdGVkLiBPdmVyIHRoZSB5ZWFyIHRoYXQgdGhleSBsaXZlZCB0aGVyZSwgdGhleSBjcmVhdGVkIGEgc2ltcGxlLCBiZWF1dGlmdWwgYW5kIGZ1bmN0aW9uYWwgc3BhY2UgdGhhdCBzdWl0cyB0aGVpciBsaWZlc3R5bGUsIGFjY29tbW9kYXRlcyB0aGVpciBndWVzdHMsIGFuZCBleHVkZXMgd2FybSBjb25nZW5pYWxpdHkuCkxvcmV0dGEgQ2lyYWxkbyBhZ3JlZXMgdGhhdCBsb3Rpb25zIGFyZW4ndCB0aGUgYmVzdCBpbiBmbGlnaHQgc2tpbiBzYXZpb3IuIEluc3RlYWQsIHNoZSdkIGxpa2UgdG8gc2VlIHBlb3BsZSBjb3ZlcmluZyB1cCBtb3JlIHRob3JvdWdobHkgdG8gYXZvaWQgaW4gZmxpZ2h0IGRlaHlkcmF0aW9uLiAiSSByZWNlbnRseSBmbGV3IGZyb20gTWFzc2FjaHVzZXR0cyB0byBNaWFtaSwgYW5kIGhhbGYgdGhlIHBlb3BsZSB3ZXJlIGluIHNob3J0cywiIHNoZSBzYXlzLiAKRGV0IGVyIHNhbW1lIGxvdiBzb20gZ2plbGRlciBmb3IgYWxsZSwgbWVuIGRldCBlciBvbXJkZXIgZGVyIHN0cmFmZmVuIGVyIGh5ZXJlLiBIdmlzIGRldCBwbHV0c2VsaWcgZXIgbXllIGtyaW1pbmFsaXRldCBkZXIgamVnIGJvciwgcyBrYW4gbWFuIGxlZ2dlIGlubiBlbiBzdHJhZmZlc29uZSBkZXIuIERldCBlciBuZXR0b3BwIGRldCBzb20gZXIgcG9lbmdldCwgYXQgbWFuIHNrYWwgZiBuZWQga3JpbWluYWxpdGV0ZW4gaSBkZSBvbXJkZW5lIGRlciBkZW4gYmVncy4gRGV0IGhhbmRsZXIgaWtrZSBvbSBodmVtIHNvbSBiZWdyIGtyaW1pbmFsaXRldGVuLCBtZW4gaHZvciBkZW4gYmVncywgc2llciBTdGpiZXJnLgpUaGVyZSBhcmUgYSBsb3Qgb2YgQW1lcmljYW4gcGxheWVycy4gCk5vdyBrbm93biBhcyBIb3BpIEVhciBDYW5kbGVzLCB0aGUgaGFuZCBtYWRlIHN0cnVjdHVyZXMgYXJlIGhvbGxvdyB0dWJlcyB3aGljaCBjb250YWluIGhvbmV5LCBzYWdlLCBTdCBKb2hucyBXb3J0IGFuZCBjaGFtb21pbGUuCkQndW4gY3QsIE1vbnNpZXVyIGEgcHJpcyB0b3V0IHNvbiB0ZW1wcyBkaW1hbmNoZSBtYXRpbiAodm9pcmUgZGogdW4gcGV1IHNhbWVkaSBzb2lyKSBwb3VyIG5vdXMgcHJvcG9zZXIgdW4gZGpldW5lciBqYXBvbmFpcyBhdXggcGV0aXRzIHBsYXRzIG11bHRpcGxlcywgYXV4IGRsaWNlcyB2YXJpcywgcGxlaW4gZCd1bmUgam9saWUgc29waGlzdGljYXRpb24gcXVpIHJlbmQgZW52aWV1eCBtZXMgYWJvbm5zIHN1ciBsZXMgcnNlYXV4IHNvY2lhdXguIApIb3cgbXVjaCBzaG91bGQgSSBicmluZyB3aXRoIG1lPwpUaGUgZmVkZXJhbCBnb3Zlcm5tZW50ICJoYXMgcmVjb21tZW5kZWQgdGhhdCBwZW9wbGUgZWF0IHNhbG1vbiBiZWNhdXNlIGl0IGlzIGhpZ2ggaW4gbiAzIGZhdHR5IGFjaWRzIHdpdGhvdXQgbWVudGlvbmluZyB0aGF0IGZhcm1lZCBzYWxtb24gY29tbW9ubHkgY29udGFpbnMgaGlnaCBsZXZlbHMgb2YgUENCcy4iCkluIHRoZSBzaG93ZXIgSSB1c2UgYSB3YXRlciBhY3RpdmF0ZWQgZ2VsIGNsZWFuc2VyLCB0aGVuIGEgaG9uZXkgYWxtb25kIGJvZHkgc2NydWIsIGFuZCBvbiB0aGUgZmFjZSBhbiBleGZvbGlhdGluZyBnZWwgc2NydWIuIFRoZW4gSSBhcHBseSBhbiBoZXJiIG1pbnQgZmFjaWFsIG1hc2sgd2hpY2ggSSBsZWF2ZSBvbiBmb3IgMTAgbWludXRlcyB3aGlsZSBJIHByZXBhcmUgdGhlIHJlc3Qgb2YgbXkgcm91dGluZS4gSSBhbHdheXMgdXNlIGFuIGFmdGVyIHNoYXZlIGxvdGlvbiB3aXRoIGxpdHRsZSBvciBubyBhbGNvaG9sLCBiZWNhdXNlIGFsY29ob2wgZHJpZXMgeW91ciBmYWNlIG91dCBhbmQgbWFrZXMgeW91IGxvb2sgb2xkZXIuIApJdCBsb29rcyBiZXR0ZXIgdGhhbiBpdCBzb3VuZHMgYW5kIEkgZG9uIGVuZCB1cCB3aXRoIGZsYXBweSwgd2lkZSBzbGVldmVzIGxpa2UgSSB3b3VsZCB3aXRoIGEgbWVuIGNhbXAgc2hpcnQuIApJIHRvbGQgbXkgYm95ZnJpZW5kIHRoaXMgd2FzIHdheSBvdmVyIG15IGJvdW5kYXJpZXMgYW5kIEkgZGlkIG5vdCB3YW50IHRvIGJlIGluIGEgcmVsYXRpb25zaGlwIGlmIGhlIGtlZXBzIGhhbmdpbmcgb3V0IHdpdGggaGVyLiBIZSB3aG9sZWhlYXJ0ZWRseSBhZ3JlZWQgYW5kIHRvbGQgbWUgc2hlIHdhcyBpbmRlZWQgcHVzaGluZyB0aGUgYm91bmRhcmllcy4gCkl0IHRha2UgJDEsNjY2LjY3IFVTRCBpbiByYWtlIHRvIGdldCB0aGVyZSB0aG91Z2guIApJdCBpcyBlYXNpZXIgdG8gZ2V0IGEgZG9jdG9yIHRvIGRvIGEgdmFzZWN0b215IG9uIGEgeW91bmcgbWFuIHRoYW4gdGllIHR1YmVzIG9uIGEgeW91bmcgd29tYW4uIApEb24ndCBwbGFuIGEgbWVudSB0aGF0IHdpbGwgcmVxdWlyZSB5b3UsIHRoZSBob3N0ZXNzLCB0byBiZSBob2xlZCB1cCBpbiB0aGUga2l0Y2hlbiBmb3IgdGhlIGVudGlyZSBwYXJ0eS4uIApJZiB5b3UgYXJlIGdvaW5nIHRvIHBsYXkgaW4gdGhlIG9ubGluZSBjYXNpbm8gZm9yIGEgbG9uZyB0aW1lIGFuZCByYXRoZXIgaW5zaXN0ZW50bHksIHRoaXMgY2FzaW5vIGJvbnVzIHdpbGwgaGVscCB5b3UsIGl0IGNhbiByZWFsbHkgYmUgY29uc2lkZXJlZCBmcmVlIG1vbmV5LiBJZiB5b3UgcGxheSBjYXNpbm8gc2xvdHMgd2l0aCA5NSUgcGF5IG91dHMsIGEgYm9udXMgd2lsbCBhbGxvdyB5b3UgdG8gbWFrZSBvbiBhdmVyYWdlIGV4dHJhIDIwMDAkIG9mIHN0YWtlcyAoJDEwMC8oMSAwLDk1KT0kMjAwMCksIGFmdGVyIHRoYXQgdGhlIGFtb3VudCBvZiBib251cyB3aWxsIGJlIG92ZXIuIEJ1dCB0aGVyZSBjYW4gYmUgY29tcGxpY2F0aW9ucywgZm9yIGV4YW1wbGUsIGlmIHlvdSBzaW1wbHkgd2FudCB0byBoYXZlIGEgbG9vayBhdCBhIGNhc2lubywgd2l0aG91dCBwbGF5aW5nIGZvciBhIGxvbmcgdGltZSwgaWYgeW91IHByZWZlciByb3VsZXR0ZSBvciBvdGhlciBjYXNpbm8gZ2FtZXMsIGZvcmJpZGRlbiBieSBjYXNpbm9zJyBydWxlcyBmb3Igd2lubmluZyBiYWNrIGJvbnVzZXMuIEluIHRoZSBtYWpvcml0eSBvZiBvbmxpbmUgY2FzaW5vcyB5b3Ugd29uJ3QgYmUgYWxsb3dlZCB0byB3aXRoZHJhdyBtb25leSBvciB3aWxsIHNpbXBseSByZXR1cm4gYSBkZXBvc2l0LCBpZiBhIHdhZ2VyIGlzIG5vdCBtYWRlIG9uIHRoZSBnYW1lcyBhbGxvd2VkIGluIHRoZSBvbmxpbmUgY2FzaW5vLiBJZiB5b3UgYXJlIGtlZW4gb24gcm91bGV0dGUgb3IgYmxhY2tqYWNrLCBhbmQgYSBib251cyBjYW4gYmUgd29uIGJhY2sgb25seSBieSBwbGF5aW5nIHNsb3RzLCBtYWtlIHRoZSByZXF1aXJlZCAkMzAwMCBvZiBzdGFrZXMsIGluIHRoZSBjb3Vyc2Ugb2YgOTUlIG9mIHBheSBvdXRzIHlvdSB3aWxsIGxvc2Ugb24gYXZlcmFnZSAkMzAwMCgxIDAsOTUpPSQxNTAuIEFzIHlvdSBzZWUsIHlvdSBub3Qgb25seSBsb3NlIHRoZSBjYXNpbm8gYm9udXMgYnV0IGFsc28gdGFrZSBvdXQgb2YgeW91ciBwb2NrZXQgJDUwLCBpbiB0aGlzIGNhc2UgaXQgaXMgYmV0dGVyIHRvIHJlZnVzZSB0aGUgYm9udXMuIEFueXdheSwgaWYgYmxhY2tqYWNrIGFuZCBwb2tlciBhcmUgYWxsb3dlZCBmb3Igd2lubmluZyBiYWNrIHRoZSBib251cyB3aXRoIGEgY2FzaW5vJ3MgcHJvZml0IG9ubHkgYWJvdXQgMCw1JSwgc28gaXQgY2FuIGJlIGV4cGVjdGVkIHRoYXQgYWZ0ZXIgd2lubmluZyBiYWNrIHRoZSBib251cyB5b3Ugd2lsbCBoYXZlICQxMDAgMzAwMDAsMDA1PSQ4NSBvZiB0aGUgY2FzaW5vJ3MgbW9uZXkuCkl0IHJlYWxseSBjb29sIHRoYXQgQWlyIE5pdWdpbmkgb2YgUGFwdWEgTmV3IEd1aW5lYSBoYXZlIG9yZGVyZWQgYSBzb2xpdGFyeSBhaXJjcmFmdC4gCkluc2VydGlvbiBvZiBpbmR3ZWxsaW5nIGNhdGhldGVyUmVtb3ZhbCBvZiBmb3JlaWduIGJvZHkgZnJvbSBleWUKSXQgaGFzIG5vdGhpbmcgdG8gZG8gd2l0aCBpbXBsaWVkIGZhaWx1cmUgb2YgY2VudHJpc20gb3IgbW9kZXJhdGlzbWJoZWxsYnVzICAxIHBvaW50ICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kgd291bGQgbGlrZSB0byBzZWUgdGhpcyBwb2xsIHRoYXQgeW91IGFyZSByZWZlcnJpbmcgdG8uIApJIGhhdmUgdHJpZWQgdG8gZmluZCBncm91cHMgZm9yIHN0dWZmIGluIGNoYXQgYmVmb3JlIGluIGdhbWVzIGFuZCBwZW9wbGUgYXJlIGVsaXRpc3QgYXMgZnVjayBvciBydWRlIGFzIGZ1Y2sgdGhhdCBpbiB0aGUgZW5kIHlvdSBnbyBmdWNrIGl0IGlsbCBqdXN0IHVzZSBhIGdyb3VwIGZpbmRlci4KUHJpY2luZyBiYXNlZCBvbiB5b3VyIGluZGl2aWR1YWwgbmVlZHMKVGhlIG9ubHkgZXZlbnQgd2Ugc2VlbSB0byBhbGwgYWdyZWUgb24gaXMgcGlja2luZyBpdGVtcyB3ZSBsaWtlLiBIb25lc3RseSwgSSBnZXQgYm9yZWQgaWYgdGhhdCBhbGwgd2UgaGFkLiBXaXRoIG90aGVyIGV2ZW50IHR5cGVzIEkgZ290dGVuIHBpZWNlcyBJIHJlYWxseSBsaWtlIGJ1dCBuZXZlciB3b3VsZCBoYXZlIGNob3NlbiBteXNlbGYuCkFsbCByZWFsIGVzdGF0ZSBpcyBsb2NhbCB0aG91Z2guIApJIGNyZWF0ZWQgdGhlIENhbGlmb3JuaWEgUEVSUyBwb3J0aW9uIGluIGFib3V0IGEgd2Vlay4uIApDYW4gYmUgZm91bmQgb24gaVR1bmVzLiAzNikgTHV2IFUgU3VtIGJ5IENKIEhvbGxhbmQgZmVhdHVyaW5nIExhZHkgR2FHYS4gU2VhcmNoIFlvdXR1YmUgZm9yIHRoaXMgc29uZy4gCk9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgZmFjdG9ycyBpbiBwbGF5aW5nIHN1Y2Nlc3NmdWwgb25saW5lIHBva2VyIGlzIHRvIGtub3dsZWRnZSBvdmVyIHlvdXIgb3Bwb25lbnRzLCBwb2tlciBvZGRzIGFuZCBvdXRzLiBXb3VsZCBpdCBiZSBuaWNlIHRvIGtub3cgeW91ciBvcHBvbmVudHMgYmVmb3JlIHRoZSBnYW1lIGJlZ2luLiAKU2hlIGNvdWxkIGFsc28gYmUgdXNpbmcgaGltIHRvIHN0YXkgaW4gdGhlIGNvdW50cnkuIEkgdGhpbmsgZWl0aGVyIHdheSwgdGhlcmUgaXMgYSBtdXR1YWxpc3RpYyByZWxhdGlvbnNoaXAgdGhlcmUuIApJdCBzdWNrcyB0byBoYXZlIHRvIGJlIG9uIHRob3NlIG1lZHMgbG9uZyB0ZXJtIGFuZCBtb3N0IHBlb3BsZSB0aGF0IGFyZSB3b3VsZCBkbyBhbnl0aGluZyB0byBub3QgaGF2ZSB0byBiZS4gQWxzbywgbWFueSBoYXZlIHVzZWQgdGhlbSBmb3IgeWVhcnMgd2l0aG91dCBhYnVzaW5nIHRoZW0uIE9mIGNvdXJzZSB0aGVyZSBhIGxldmVsIG9mIGRlcGVuZGVuY3kgdGhhdCBoYXBwZW5zIGJ1dCB0aGF0IGlzIGRpZmZlcmVudCBmcm9tIGFkZGljdGlvbi4KQ2xhcmluZXQgcGxheWVycyBjYW4gdmVyeSBlYXNpbHkgc3dpdGNoIHRvIHNheG9waG9uZSBsYXRlciAoc2VlIGJlbG93KS4gSXQgaXMgZ2VuZXJhbGx5IHJlY29tbWVuZGVkIHRoYXQgaWYgYSBjaGlsZCB3YW50cyB0byBsZWFybiBzYXhvcGhvbmUsIHRoZXkgc2hvdWxkIHN0YXJ0IGJ5IGxlYXJuaW5nIGNsYXJpbmV0IGFuZCBub3Qgc3dpdGNoIHRvIHNheCB1bnRpbCB0aGV5IGFyZSBiaWcgZW5vdWdoIHRvIGhvbGQgaXQsIGF0IGFyb3VuZCBhZ2UgMTMgb3IgMTQuLiAKQmVpbmcgYSBtaWxsaW9uYWlyZSBnaXZlcyB5b3UgdGhlIG9wdGlvbiB0byBkbyB3aGF0IHlvdSB3YW50LCB3aGVuIHlvdSB3YW50LCBhbmQgd2hlcmUgeW91IHdhbnQuIEl0IGFsc28gZ2l2ZXMgeW91IHJlc3BvbnNpYmlsaXR5LiAKTUVSQ0kgQXJpYW5lIHBvdXIgY2V0dGUgbWlzZSBlbiBsdW1pcmUgICBiZWxsZSBzdXJwcmlzZSBkZSBkY291dnJpciBxdWUgbW9uIGxpdnJlIGZhaXQgbCdvYmpldCBkJ3VuIGNvdXAgZGUgY29ldXIgISAgIHN1ciB0b24gYmxvZy4gRWZmZWN0aXZlbWVudCwgbm9zIHJmbGV4aW9ucyBzdXIgbCdhbGltZW50YXRpb24gc2UgcmVqb2lnbmVudCBzdXIgYmVhdWNvdXAgZGUgcG9pbnRzLCBjb21tZSBwYXIgZXhlbXBsZSBsJ2ltcG9ydGFuY2UgZGUgbCdhdXRvbm9taWUgY3VsaW5haXJlLiBBdmVjIG1vbiBkaXRyaWNlLCBub3VzIGF2b25zIHZyYWltZW50IHZvdWx1IGNyZXIgdW4gbGl2cmUgInF1aSBkdXJlIiwgcXVpIHJlc3RlIGRhbnMgbGVzIGJpYmxpb3RocXVlcyAodm9pcmUgbGVzIGN1aXNpbmVzKSA6IHRhIGRlcm5pcmUgcmVtYXJxdWUgdmEgZGFucyBjZSBzZW5zIGV0IGNlbGEgZmFpdCB2cmFpbWVudCBwbGFpc2lyICEKQWNlcyBjYW4gYmUgcmFua2VkIGhpZ2ggb3IgbG93IGRlcGVuZGluZyBvbiB3aGF0IHR5cGUgb2YgcG9rZXIgaXMgYmVpbmcgcGxheWVkLiBSZW1lbWJlciAgIGVhY2ggaGFuZCBjb250YWlucyBmaXZlIGNhcmRzLiBGbHVzaCAgIEZpdmUgY2FyZHMgYmVsb25naW5nIHRvIHRoZSBzYW1lIHN1aXQsIHJlZ2FyZGxlc3Mgb2YgdGhlIG51bWJlciBTdHJhaWdodCAgIGZpdmUgY2FyZHMgaW4gY29uc2VjdXRpdmUgb3JkZXIgb2YgbnVtYmVyaW5nLiBGb3IgZXhhbXBsZSwgMyA0IDUgNiA3LiAKSSB0cnkgdG8gc2NvdXQgYWhlYWQgd2l0aCBhIG1lZGl2YWMgb3IgdmlraW5nIGFuZCBvbmNlIGkgc3BvdCB0aGUgZWRnZSBvZiB0aGUgb3Bwb3NpbmcgdGFuayBsaW5lIHB1dCBpdCBvbiBob2xkIHBvc2l0aW9uLiBBcyBvdGhlcnMgaGF2ZSBzYWlkLCBpZiB5b3UgY2xpY2sgb24gdGhlIGVuZW15IHRhbmtzIHlvdSBjYW4gc2VlIHRoZWlyIHJhbmdlLiBBcyBmb3IgeW91ciBvd24gdGFua3MgcmFuZ2UsIGtlZXAgcGxheWluZyBhbmQgcGF5IGF0dGVudGlvbiB0byBpdCBlYWNoIGdhbWUsIG92ZXIgdGltZSB5b3UgZ2V0IGEgYmV0dGVyIGZlZWwgZm9yIHRoZSBkaXN0YW5jZS4uIApBZnRlciBhYm91dCAyMCBtaW51dGVzLCBDYW5kZWxhIEhlcnJlcmEgYXR0ZW1wdGVkIHRvIGxlYXZlIHRocm91Z2ggdGhlIGZyb250IGRvb3Igd2l0aCBhIGJsYWNrIGphY2tldCBhbmQgYSBnb2xkIG5lY2tsYWNlIHZhbHVlZCBhdCBhYm91dCAkMyw2MDAsIGJ1dCBhbiBlbXBsb3llZSBibG9ja2VkIGhpcyBleGl0LCBGYWluIHNhaWQuIFRoZSBFbCBQYXNvIChUZXhhcykgQ291bnR5IHNoZXJpZmYncyBkZXB1dHkgYW5kIGhpcyBmYW1pbHkgd2l0bmVzc2VkIHRoYXQgcG9ydGlvbiBvZiB0aGUgaW5jaWRlbnQsIGhlIHNhaWQuCkFuZCBkb24gYmUgZm9vbGVkLiBXaW50ZXJzIGFyZSB3b3JzZSBpbiB0aGUgREMgYXJlYS4gSXQgd2FybWVyIGFuZCB0aGVyZSBmYXIgbGVzcyBzbm93LCBidXQgYXMgYSByZXN1bHQsIHRoZSB3aG9sZSBmcmVha2luZyBhcmVhIGxvc2VzIHRoZWlyIG1pbmRzIG92ZXIgYW4gaW5jaCBvZiBzbm93ICAgYW5kIHRoZXkgZ2V0IGludG8gYWNjaWRlbnRzICAgYW5kIG5vdCBldmVyeSByb2FkIGdldHMgcGxvd2VkLiAKSG93ZXZlciwgZm9yIGFueW9uZSB3aXRoIGEgc29yZSBiYWNrIGZyb20gYW4gb3V0ZG9vciBhY3Rpdml0eSwgdGhpcyBpcyBhIGdyZWF0IG9wdGlvbiB3aGlsZSBzaXR0aW5nIG9uIHRoZSBkZWNrIGluIGEgbG91bmdlIGNoYWlyLiAKVW5lIGZvaXMgZGFucyBjZSBwb2ludCBxdWUgbm91cyBxdXRvbnMgZXQgcXVpIGZpbml0IHBhciBub3VzIGFzcGlyZXIsIG5vdXMgcmVnYXJkb25zLCBhbG9ycywgbGUgbW9uZGUgYXZlYyB1biBpbCB0cmFucXVpbGxlLiAKVmVjdG9yd29ya3MgaXMgYW4gZmFudGFzdGljIHRvb2wgZm9yIGxpZ2h0aW5nIGRlc2lnbmVycywgbXVjaCBtb3JlIHNvIHRoYW4gQXV0b0NBRCBkdWUgdG8gdGhlIGludGVyY29tbXVuaWNhdGlvbiBiZXR3ZWVuIFZXIGFuZCBMaWdodHdyaWdodC4gCkRlY2VudCBtZWFuaW5nIHlvdSBhcmUgYmFzaWNhbGx5IGEgdGVhY2hlciBidXQgdGhlcmUgYXJlIHNtYWxsIGlzc3Vlcy4gClRoaXMgY29udGFpbnMgeDMyIHg2NCBiaXQgYm90aCBhbmQgaW5jbHVkZXMgZnVsbCBmZWF0dXJlcy4gSnVzdCB5b3UgbmVlZCB0by4gCk1jRHVjaGVzcyAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpCeSBxdWFydG8gZG8geW91IG1lYW4gcm91Z2hseSAxMCJ4OCI/IEkga25ldyBpdCB3b3VsZCBwcm9iYWJseSBiZSBhIGJpZ2dlciBzaXplIGJlY2F1c2UgSSBkb24gYW50aWNpcGF0ZSBpdCBnZXR0aW5nIGNhcnJpZWQgYXJvdW5kIG9yIGFueXRoaW5nLCBzbyB0aGF0IHNpemUgd291bGQgcHJvYmFibHkgYmUgZ3JlYXQuIFRvbW9lIGlzIGRlZmluaXRlbHkgdGhpbiwgYnV0IEkgaGFkbiB0aG91Z2h0IGFib3V0IGl0IGJ1Y2tsaW5nIG9yIGFueXRoaW5nLCBzbyBnb29kIGNhbGwgd2l0aCB0aGF0LiBJIGZvdW5kIHNvbWUgR29hdHNraW4gcGFyY2htZW50IHBhcGVyOyBpcyB0aGlzIHRoZSByaWdodCB0eXBlPyBhbGZhd29sZmUgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvLiAKSWYgeW91IGFyZSBhIGdvb2QgcGxheWVyIGFuZCBjYW4gYWRhcHQgdG8gdGhlIG90aGVyIHBsYXllcnMgYW5kIGZpdCBpbiB0byB0aGUgZ2FtZSB5b3UgY2FuIHNlcmlvdXNseSBiZWF0IHRoZXNlIGd1eXMgZm9yIFlFQVJTLiBUaGUgdHJpY2sgaXMgdG8gZG8gaXQgYW5kIGtlZXAgdGhlbSBzbWlsaW5nLiAKVGhpcyEhISBXZSBhcmVuIGZpbmRpbmcgb3V0IGdlbmRlciwgYW5kIGFsdGhvdWdoIGl0IGRyaXZpbmcgbXkgZmFtaWx5IGNyYXp5LCB3ZSByZWFsbHkgYXJlIGdldHRpbmcgYmlnIGJhYnkgZ2VhciBpdGVtcyBpbnN0ZWFkIG9mIGNsb3RoZXMhIE15IG1vbSBhbmQgZ3JhbmRtYSBrZWVwIHRlbGxpbmcgbWUgdGhleSB3YW50IHRvIGJ1eSBjbG90aGVzIGZvciBiYWJ5IGJ1dCB0aGV5IGNhbiBhbmQgSSByZWFzc3VyZSB0aGVtIHRoYXQgYnkgdGhlIHRpbWUgd2UgbmVlZCB0byBwdXQgY2xvdGhlcyBvbiB0aGUgYmFieSwgd2Uga25vdyBpZiBpdCBhIGJveSBvciBnaXJsLiA7KS4gClRoZSBXb3JsZCBzaG93Y2FzZSB3aWxsIGJlIGhlbGQgaW4gdGhlIE1vcmdhbiBDb3VudHkgRmFpcmdyb3VuZHMgYXJlbmEgaW4gQnJ1c2ggYW5kIHdpbGwgZmVhdHVyZSBsb2NhbCBmaWdodGVycyBpbmNsdWRpbmcgSm92YW5ueSBWYWxlcywgSGVucnkgU29saXMsIFNoYW5ub24gQ3VscGVwcGVyIGFuZCBCcml0dG5leSBFbGtpbi4uIApCcm9rZW4gaGVhcnRzIGFyZSBkaWZmZXJlbnQuIGEgaGVhcnQgZ2V0cyBicm9rZW4gYSBmZXcgdGltZXMsIGl0IGJ1aWxkcyB1cCBhIHRvdWdoIHNoZWxsIHRoYXQgc3RvcHMgaXQgZnJvbSBldmVyIGJyZWFraW5nIGFnYWluLCBvciBhdCBsZWFzdCBmcm9tIGJyZWFraW5nIGludG8gYSBtaWxsaW9uIHBpZWNlcyBhZ2Fpbi4gdGhlIHdheSBpdCBpcyBmb3IgdGhvc2Ugb2YgdXMgd2hvIGFjdHVhbGx5IG9wZW5lZCBvdXIgaGVhcnRzIGFuZCBvdXIgd2FsbGV0cyBhbmQgb3VyIGxpdmVzIHRvIGdldHRpbmcgUHJlc2lkZW50IE9iYW1hIGVsZWN0ZWQuIGdvdCBvdXIgaGVhcnRzIGJyb2tlbiBvdmVyIGFuZCBvdmVyIGFuZCBvdmVyIGFnYWluLiBub3csIGZvciBtYW55IG9mIHVzLCB3ZSBleHBlY3Qgbm90aGluZyBidXQgYmV0cmF5YWwuCkJvdGggbGl2ZWQgaW4gTW9vcmUsIE9rbGFob21hLCBuaW5ldHkgbWlsZXMgYXdheS4gCkVxdWlsaWJyaXVtLCBldmVuIHBzZXVkbyBlcXVpbGlicml1bSB0aGF0IGEgc29sdmVyIHByb3ZpZGVzLCBpcyB3YXkgdG9vIGNvbXBsaWNhdGVkIHRvIGZvbGxvdyBleGFjdGx5LiAKSSB0cmllZCBtb3JlIGFnZ3Jlc3NpdmUgcGxheSBzdHlsZXMsIHBlb3BsZSBkb24gZm9sZC4gCkdhZ2EgaGFzIG1hbnkgdGF0dG9vcyBhbmQgZ2V0cyBuZXcgb25lcyBvZnRlbi4gSXQgYWxzbyBpbmNsdWRlcyB3aGVyZSB5b3UgY2FuIGFjcXVpcmUvbGlzdGVuIHRvIHRoZW0uIFRvdGFsIG9uIHRoaXMgbGlzdDogMTAxIDEgMTQpICJCb3JuIFRoaXMgV2F5IChPcmlnaW5hbCBBbGJ1bSkgIjogTWFycnkgVGhlIE5pZ2h0L0Jvcm4gVGhpcyBXYXkvR292ZXJubWVudCBIb29rZXIvSnVkYXMvQW1lcmljYW5vL0hhaXIvU2NoZWllIC8gQmxvb2R5IE1hcnkgLyBCYWQgS2lkcy9IaWdod2F5IFVuaWNvcm4gKFJvYWQgVG8gTG92ZSkvSGVhdnkgTWV0YWwgTG92ZXIvWW8gYW5kIEkvVGhlIEVkZ2UgT2YgR2xvcnkuIApUaGUgcG9wdWxhdGlvbiBvZiB0aGUgVG93bnNoaXAgb2YgTGFuZ2xleSBncmV3IGJ5IDEzIHBlciBjZW50IGJldHdlZW4gMjAwNiBhbmQgMjAxMSwgd2l0aCBleHBhbmRpbmcgaG91c2luZyBwcm9qZWN0cyBhYnV0dGluZyBleHBhbnNlcyBvZiBmYXJtbGFuZC4gClNvIHlvdSB0cnkgdG8gYmUgb24gdGhlIHNhZmUgc2lkZSBvZiB0aGluZ3MsIGdldCB1cCBlYXJseSwgd29yayBsYXRlLCBhbmQgaW4gZ2VuZXJhbCB0cnkgdG8gc3RheSBvbiB0b3Agb2YgdGhlIHdob2xlIEplbmdhIHB5cmFtaWQuLiAKTGFzdGx5LCB0aGFuayB5b3UgdmVyeSBtdWNoIGZvciBsZXR0aW5nIG1lIGtub3cgdGhhdCBJIGhlbHBlZCBvdXQgaW4geW91ciBjYXJlZXIgYW5kIHlvdSBsaWZlLiBJIGtub3cgdGhpcyBzb3VuZHMgbGlrZSB0aGUgInRoaW5nIHRvIHNheSIgYnV0IGl0IHRydWx5IGRvZXMgbWVhbiBhIGxvdCB0byBtZSB0byBrbm93IHRoYXQgSSBtYWRlIGFuIGltcGFjdC4gSSBob3BlIEkgY2FuIGNvbnRpbnVlIHRvLgpNb3N0IG9mdGVuLCB0aGlzIGlzIGRvbmUgZWl0aGVyIGJ5IHRlbGxpbmcgYSBkZWFsZXIgdG8gcGxhY2UgYSBzcGVjaWZpYyBiZXQgImZvciB0aGUgYm95cyIgICBiZXRzIG9uIDExIG9yIHRoZSBmaWVsZCBhcmUgYW1vbmcgZnJlcXVlbnQgY2hvaWNlcyAgIG9yIGJ5IHBsYWNpbmcgYSBiZXQgb24gb25lIG9mIHRoZSAiaGFyZCB3YXlzIiBhbmQgdGVsbGluZyB0aGUgZGVhbGVyIGl0IGdvZXMgYm90aCB3YXlzLiAKRm9ybWVyIGFybW9yZWQgdHJ1Y2sgZHJpdmVyL2d1YXJkIGhlcmUuIFRoaXMgaXMgY29ycmVjdC4gVGhlIHBvbGljeSBpcyB0aGF0IHlvdSBhcmUgb25seSBhbGxvd2VkIHRvIGRyYXcgaWYgZmFjZWQgd2l0aCBhIGNyZWRpYmxlIHRocmVhdCB0byB5b3VyIGxpZmUuIFRoZSBtb25leSBpcyBhbGwgaW5zdXJlZC4gR3JhbnRlZCwgeW91IHRha2luZyBhIGdhbWJsZSBpZiB5b3UgdHJ5IHRvIHJvYiBhIGd1YXJkLiBJdCBjb3VsZCBiZSB0aGUgZ3V5IGlzIHNjYXJlZCBzaGl0bGVzcyBhbmQgZG9lc24gZXZlbiB0b3VjaCBoaXMgZ3VuIG91dHNpZGUgb2YgaGlzIGFubnVhbCBxdWFsaWZpY2F0aW9uLiBEdWRlIHdhcyBhIGNvbXBldGl0aXZlIHNob290ZXIgd2hvIHdhcyBzcG9uc29yZWQgYnkgU21pdGggV2Vzc29uLCBjb21wZXRlZCBhdCB0aGUgbmF0aW9uYWwgbGV2ZWwsIGRyZXcgZmFzdGVyIGFuZCBwdXQgdXAgdGlnaHRlciBncm91cHMgdGhhbiBwcm9iYWJseSBtb3N0IG9mIG91ciBicmFuY2ggY29tYmluZWQsIGFuZCBhbHdheXMgaGFkIGhpcyBoZWFkIG9uIGEgc3dpdmVsLgpBcyBDaGluZXNlIG1lZGljaW5lIGdyZXcgbW9yZSBzb3BoaXN0aWNhdGVkIG92ZXIgdGltZSwgdGhlIHByYWN0aWNlIG9mIHFpIGdvbmcgYWxzbyBiZWNhbWUgbW9yZSBmb2N1c2VkIG9uIGN1cmluZyBzcGVjaWZpYyBkaXNlYXNlcy4gQnkgdGhlIDE5dGggY2VudHVyeSwgaXQgd2FzIHVzZWQgY2xpbmljYWxseSBmb3IgYWlsbWVudHMgc3VjaCBhcyBpbmRpZ2VzdGlvbiwgdG9vdGhhY2hlLCBleWUgcHJvYmxlbXMsIGhlYWRhY2hlLCBhYmRvbWluYWwgcGFpbiwgYW5kIGNocm9uaWMgZGVnZW5lcmF0aXZlIGRpc2Vhc2VzIGluIGdlbmVyYWwuCldlJ3ZlIGhhZCBvdXJzIGZvciBhIGxpdHRsZSBvdmVyIGEgeWVhciBub3cgYW5kIHRoZXkndmUgYmVjb21lIGEgY2VudGVycGllY2UgdG8gdGhlIG9yaWdpbmFsaXR5IG9mIG91ciBwb2tlciBnYW1lcy4gSW4gZmFjdCwgd2UndmUgZXZlbiBwdXJjaGFzZWQgYSBmZXcgb2YgdGhlc2UgZm9yIG91ciBmcmllbmRzIGp1c3Qgc28gZXZlcnlvbmUgd291bGQgc3RvcCBhc2tpbmcgdG8gYm9ycm93IHRoZW0gd2hlbiB3ZSBjb3VsZG4ndCBjb21lIHBsYXkuIEl0IG1pZ2h0IHNvdW5kIGZ1bm55LCBidXQgYWZ0ZXIgYSBiaXJ0aGRheSBvciAicHJlc2VudCBob2xpZGF5IiB3ZSB3ZXJlIGFibGUgdG8ga2lsbCB0d28gYmlyZHMgd2l0aCBvbmUgc3RvbmUuIFRoZSBiZXN0IHBhcnQgaXMgZXZlcnlvbmUgYXBwcmVjaWF0ZWQgaXQuClRoZSBpbXBvcnRhbnQgcGFydCBpcyBtYWtpbmcgaXQgYSByb3V0aW5lIHlvdSBjYW4gbG9vayBmb3J3YXJkIHRvIHNvIHlvdXIgYm9keSBrbm93cyBoZWxwIGlzIGNvbWluZyEgOikuIApUaGlzIHRyZW5kIGNvbnRpbnVlZCBpbiB0aGVscmVkJ3MgcmVpZ24sIGJ1dCBkaWQgbm90IG9yaWdpbmF0ZSBpbiBpdC4gRWR3YXJkIHdhcyBub3QsIGR1cmluZyBoaXMgcmVpZ24sIGEgcG9wdWxhciBraW5nLCB5ZXQgaGlzIGRlYXRoIGluIENvcmZlIGFsc28gcGVycGV0dWF0ZWQgdGhlIGF0bW9zcGhlcmUgb2YgaW5zdGFiaWxpdHkuIEFzIEVkd2FyZCdzIGRlYXRoIHdhcyBub3QgYXZlbmdlZCwgbm9yIHdhcyBoZSBnaXZlbiBhIHByb3BlciBmdW5lcmFsIHVudGlsIDk4MCwgaXQgc2VlbWVkIHRoYXQgRW5nbGFuZCB3YXMgdW5kZXJnb2luZyBhIHBlcmlvZCBvZiBpbnN0YWJpbGl0eSBxdWl0ZSB1bmxpa2UgdGhlIEdvbGRlbiBBZ2UgZXhwZXJpZW5jZWQgZHVyaW5nIEVkZ2FyJ3MgcmVpZ24uIApUaGUgc2Vjb25kIHJlYXNvbiBpcyBhIGN1bHR1cmFsIGZhY3Rvci4gSSBkb24ga25vdyBhYm91dCBvdGhlciBjb3VudHJpZXMsIGJ1dCBpbiBUaGFpbGFuZCB0aGUgc2V4dWFsIGJlaGF2aW91ciBvZiBUaGFpIG1lbiBhY2NlcHRzIHByb3N0aXR1dGlvbi4gCkhTUzogQU5ZVEhJTkcgRUxTRSBZT1UgV0FOVCBQRU9QTEUgVE8gS05PVyBBQk9VVCBZT1UgT1IgWU9VUiBXT1JLP1RoYXQgcGVvcGxlIGRvIG5vdCBoYXZlIHRvIHN1ZmZlciBpbiBwYWluLiBFdmVuIGlmIHRoZXkgZG9uIGNvbWUgdG8gbWUsIHNlZSBhIHByYWN0aXRpb25lciB3aG8gY2FuIGhlbHAuIFRyeSBkaWZmZXJlbnQgbW9kYWxpdGllcyB0byBkZXRlcm1pbmUgd2hpY2ggb25lIGlzIGEgZ29vZCBmaXQgZm9yIHlvdS4gSGVscCBpcyBhdmFpbGFibGUuIFNoZSBpbmNvcnBvcmF0ZXMgbXVsdGlwbGUgZGlzY2lwbGluZXMgaW50byBoZXIgcHJhY3RpY2UgdG8gY3VzdG9taXplIHNlc3Npb25zIGZvciBlYWNoIGNsaWVudCBhbmQgdGhlaXIgc3BlY2lmaWMgaW5kaXZpZHVhbCBuZWVkcy4gU2hlIGdyYWR1YXRlZCBmcm9tIFNwYSBUZWNoIGluIE9jdG9iZXIgb2YgMjAwOSBhbmQgaXMgdHJhaW5lZCBpbiBTd2VkaXNoLCBQcmUgbmF0YWwgYW5kIGhvdCBzdG9uZSBtYXNzYWdlLiBTaGUgdXRpbGl6ZXMgcmVmbGV4b2xvZ3ksIGN1cHBpbmcgYW5kIGd1YSBzaGEgaW4gaGVyIHNlc3Npb25zIGlmIG5lZWRlZC4gQ2FyeW4gaGFzIHN0dWRpZWQgbXVsdGlwbGUgZm9ybXMgb2YgRW5lcmd5IEhlYWxpbmcsIE1lZGl1bSBzaGlwLCBIZXJib2xvZ3ksIEFyb21hdGhlcmFweSwgQ3J5c3RhbCBIZWFsaW5nLCBhbmQgQ2FyZCBSZWFkaW5nLiBTaGUgaGVscHMgZmFjaWxpdGF0ZSBoZWFsaW5nIHV0aWxpemluZyBhIG11bHRpIGRpc2NpcGxpbmFyeSBhcHByb2FjaCB0aGF0IHJlbGVhc2VzIHBoeXNpY2FsIGRpc2NvbWZvcnQgYW5kIGFzc2lzdHMgaW4gcmVlc3RhYmxpc2hpbmcgaGFybW9ueSB3aXRoaW4gdGhlIGVuZXJneSBmaWVsZHMgb2YgZWFjaCBwZXJzb24gc2hlIHdvcmtzIHdpdGguIEFzIGEgUmVpa2kgTWFzdGVyIHRlYWNoZXIgc2hlIGhhcyB0cmFpbmVkIG1hbnkgc3R1ZGVudHMgaW4gdGhpcyBhbmNpZW50IGhlYWxpbmcgYW5kIGhhcyBlc3RhYmxpc2hlZCBoZXJzZWxmIGluIHRoZSBoZWFsaW5nIGNvbW11bml0eSBhcyBhIG1lbnRvciBmb3IgbWFueS4gU2hlIHNoYXJlcyBoZXIgcGFzc2lvbiBhbmQgZ2lmdHMgb2YgaGVhbGluZyB3aXRoIGFsbCBzaGUgY29tZXMgaW50byBjb250YWN0IHdpdGguIFNoZSB3YWxrcyBoZXIgdGFsayBhbmQgaGVscHMgb3RoZXJzIHRvIHVuZGVyc3RhbmQgdGhlIGltcG9ydGFuY2Ugb2YgdGhlIG1pbmQsIGJvZHksIHNwaXJpdCBjb25uZWN0aW9uIGZvciBvcHRpbWFsIGhlYWx0aCBhbmQgd2VsbG5lc3MuIFNoZSBwbGFjZXMgYSBodWdlIGVtcGhhc2lzIG9uIHRoZSBpbXBvcnRhbmNlIG9mIHNlbGYgbG92ZSBhbmQgc2VsZiBjYXJlIHRvIGtlZXAgb3VyIGN1cCBmdWxsIHNvIHdlIGhhdmUgdGhlIGFiaWxpdHkgdG8gYmUgcHJlc2VudCBhbmQgdGFrZSBjYXJlIG9mIG90aGVycyBhcyBuZWVkZWQuIENhcnluIGlzIGEgYnJhaW4gdHVtb3Igd2FycmlvciwgaGFzIHVzZWQgY2FubmFiaXMgdGhyb3VnaG91dCBoZXIgY291cnNlIG9mIHRyZWF0bWVudCBhbmQgY29udGludWVzIHRvIGRvIHNvIHdoaWNoIGlzIGFsbGV2aWF0aW5nIHRoZSBhZnRlciBlZmZlY3RzIG9mIHN1cmdlcnkuCkFzIHRpbWUgd29yZSBvbiwgSSB3YXMgbW9yZSBhbmQgbW9yZSBjb252aW5jZWQgSSB3YXMgdG9vIGxhdGUgdG8gdGhlIG11bHRpIGZhbWlseSBwYXJ0eSBpbiBteSBtYXJrZXQuIApXb3JsZCBMYXJnZXN0IFBhc3NlbmdlciBQbGFuZSBBcnJpdmVzIEF0IE1JQUFpcmJ1cyBBIDM4MCBMdWZ0aGFuc2EgTGFuZHMgQXQgTUlBMDdMdWZ0aGFuc2EncyBBaXJidXMgQSAzODAsIHRoZSB3b3JsZCdzIGxhcmdlc3QgYWlycGxhbmUsIHRheGlzIGluIGFmdGVyIGxhbmRpbmcgZm9yIHRoZSBmaXJzdCB0aW1lIGF0IE1JQSBvbiBGcmlkYXksIEp1bmUgMTAsIDIwMTEuIEl0IHdpbGwgYmUgbWFraW5nIGRhaWx5IHJvdW5kIHRyaXAgZmxpZ2h0cyB0byBGcmFua2Z1cnQsIEdlcm1hbnkuIApIZXJlIGlzIGFuc3dlcmVkIHRoZSBxdWVzdGlvbiwgIkhvdyBtYW55IExhZHkgR2FHYSBzb25ncyBhcmUgdGhlcmU/IiBJdCB3aWxsIGluY2x1ZGUgdGhlIG9mZmljaWFsIHNvbmdzLCAidW5yZWxlYXNlZCIgc29uZ3MsIHNvbmdzIGZlYXR1cmluZyBMYWR5IEdhR2EgImR1cGxpY2F0ZSIgcGVyZm9ybWFuY2VzIHdoaWNoIGFyZSB1bmlxdWUgd2l0aGluIHRoZW1zZWx2ZXMgYnkgbGlzdGluZyBlYWNoIG9uZSBiZWxvdy4gSXQgYWxzbyBpbmNsdWRlcyB3aGVyZSB5b3UgY2FuIGFjcXVpcmUvbGlzdGVuIHRvIHRoZW0uIApXZSBzaGFyZWQgc3RvcmllcywgZm9vZCBhbmQgZXhwZXJpZW5jZXMuIEkgd2FzIGV2ZW4gY2Fqb2xlZCBpbnRvIHNpbmdpbmcgVGhlIEdyZWVuIGFuZCBSZWQgb2YgTWF5byEgQWx0aG91Z2ggd2Ugd2VyZSBvdXRzaWRlcnMsIHRoZXkgYWNjZXB0ZWQgdXMuIApQb3N0cyBzaG91bGQgaW5jbHVkZSBpbiBkZXB0aCBxdWVzdGlvbnMgYW5kIGFuYWx5dGljYWwgb3BpbmlvbnMuIApJIHBlcnNvbmFsbHkgZmVlbCBsaWtlIENhbGwgb2YgRHV0eSB3aWxsIGZpbmQgYSB3YXkgdG8gbWFrZSBCbGFja291dCBhIGZyZWUgdG8gcGxheSBnYW1lIHdpdGggbW9yZSBETEMgLyBCYXR0bGUgUGFzcyB0eXBlIHN0dWZmIGluIHRoZSBmdXR1cmUsIGJ1dCB0aGF0IGlzIGp1c3QgYSBndWVzcy4uIApEaXJrRGlnZ2xlcjUzMSAgMTgzIHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ28KVGhlIGdpcmxzIHdlcmUgYWdoYXN0LiBJIHdhcyBodW1pbGlhdGVkLiBJIGhhdmUgbmV2ZXIgZm9yZ2l2ZW4gaGVyLi4gCj9UaGUgbW9yZSB0b3VybmFtZW50cyB5b3Ugd2luLCB0aGUgbW9yZSBsZWFkZXJib2FyZCBwb2ludHMgeW91IHJlY2VpdmUuIFRoZXNlIHBvaW50cyB5b3UgY29sbGVjdCBieSB3aW5uaW5nIHRvdXJuYW1lbnRzIHdpbGwgZGV0ZXJtaW5lIHlvdXIgcmFuayBpbiB0aGUgS1FPTCBsZWFkZXJib2FyZC4KVGhlIGFpc2xlcyBhcmUgbmFycm93IGFuZCBwYWNrZWQgICBub3QgYW4gaW5jaCB1bnVzZWQuIFRWIDUgeCA1IG9uIHRoZSB3YWxsLCBhIGNoYWlyIHRvIHNpdCBpbiB0byBleHBlcmllbmNlIHRoZSBncmVhdCBob21lIHRoZWF0ZXIgcGFja2FnZSB0aGV5IG9mZmVyaW5nLiBXYW50IGEgZmFuPyBBIG1pY3Jvd2F2ZSwgc3VyZSAgIHRoZXJlIGluIHRoZSB2ZXJ5IGJhYyBjb3JuZXIgd2UgZ290IDUgb3IgNiwgYnV0IG1heWJlIDEgb3IgMiBpbiBzdG9jay4gCkVkdWNhdGlvbiBvZiBhIFBva2VyIFBsYXllcgpDaGFyYWN0ZXIgQSBzdGFydHMgaGVyZSBpbiBFcC4gVklJIGFuZCBlbmRzIHVwIGhlcmUgaW4gRXAuIApNci4gRXR6bGVyIGlzIGEgc2lzdGVyLiBuYXRpdmUgYW5kIGZvciBhIG51bWJlciBvZiB5ZWFycyB3YXMgYSByZXNpZGVudCBvZiBCZXJ3aWNrIHRvd25zaGlwLCBidXQgTXIuIGkgYW5kIE1ycy4sIFdpbGxpYW0gSVJPTiBTUFJJTkdTIElyb24gTWFyZ2FyZXQgU2FuZGVycyBhdHRlbmRlZCB0aGUgY29tbWVuY2VtZW50IGF0IHRoZSBTaGlwcGVuYnVyZyBOb3JtYWwgU2Nob29sIGxhc3Qgd2Vlay4gTWlzcyBNYXJnYXJldCBCZW5uZXR0IHNwZW50IHNldiAgZXJhbCBkYXlzIHJlY2VudGx5IHdpdGggaGVyIHNpc3RlciwgTXJzLiAKUGVybWFuZW50RGF5bGlnaHQgIDE0NyBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCkVhc3RlciBlZ2dzIGFyZSB1c3VhbGx5IGtpbmQgb2YgYSBidW0gZGVhbC4gU3VyZSwgd2hlbiB5b3UgZmluYWxseSBmaW5kIG9uZSBpdCdzIGxpa2UgaGF2aW5nIGEgc2VjcmV0IGNvbnZlcnNhdGlvbiB3aXRoIHlvdXIgZmF2b3JpdGUgZGlyZWN0b3IgLiBCdXQgaGUncyBraW5kIG9mIGEgamVyaywgdGhlIGNvbnZlcnNhdGlvbiBpcyBvbmUgc2lkZWQgYW5kIGl0J3MgdXN1YWxseSBhbGwgYWJvdXQgaG93IG11Y2ggb2YgYSBsb3NlciB5b3UgYXJlIGZvciBzcGVuZGluZyBhIGh1bmRyZWQgaG91cnMgc2lmdGluZyB0aHJvdWdoIHRoZSBzcGVjaWFsIGZlYXR1cmVzIG9uIHlvdXIgRmlyZWZseSBEVkQganVzdCB0byBmaW5kIHNvbWV0aGluZyBKb3NzIFdoZWRvbiBzbGFwcGVkIHRvZ2V0aGVyIGluIGZpdmUgbWludXRlcy4uIApJJ20gc29ycnkgZm9yIHlvdXIgY3JhcHB5IHNpdHVhdGlvbiwgSSdtIHJlYWxseSBub3QgdHJ5aW5nIHRvIGF0dGFjayB5b3UgYnV0IHRvIHVuZGVyc3RhbmQgeW91ciBuZWVkcyBhbmQgaGVscCBjcmVhdGUgYSBkaWZmZXJlbnQgcGVyc3BlY3RpdmUgb24gd2hhdCBteSBleHBlcmllbmNlIHdpdGggdHdvIHdlZGRpbmcgcGxhbm5lcnMgd2FzIHNvIHlvdSBjb3VsZCBldmFsdWF0ZSBleHBlY3RhdGlvbnMsIHdoaWNoIHdhcyB5b3VyIGFzayBpbiB0aGUgcG9zdCAoSSBoYWQgYm90aCB0aGUgZXhwZXJpZW5jZWQgcHJvZmVzc2lvbmFsIGZyaWVuZCBJIG1lbnRpb25lZCwgYW5kIHRoZW4gaGlyZWQgYSBuZXdiaWUgRE9DIHNvIHRoYXQgdGhlIGZyaWVuZCBjb3VsZCBlbmpveSB0aGUgcmVjZXB0aW9uIGFzIGEgd2VsY29tZWQgZ3Vlc3QpLiAKTm93IHdoZW4geW91IGZpcnN0IGNvbWUgYWNyb3NzIGl0IHRoZSBhcHBlYWwgYWxvbmUgd2lsbCBiZSBlbm91Z2ggdG8gZ2V0IHlvdSBpbnRlcmVzdGVkLiAKSGUgbGF0ZXIgaW5zaXN0cyBoZSBraWxsZWQgaGVyIGJ5IG1pc3Rha2UsIHRoaW5raW5nIGl0IHdhcyBTYWxseSAgIHNheWluZzogJ0kgdGhvdWdodCBpdCB3YXMgdGhlIGp1bmt5IHdob3JlLiBTaGUgZGlkIHRoaXMgdG8gbWUgICBzaGUgbGllZCB0byBtZSAgIHNoZSBzYWlkIHRoYXQgSSdkIGJlIGZyZWUuJwpXZSBrbm93IHdlIHdoaXRlIGFuZCBjb21lIGZyb20gb3RoZXIgbGFuZHMuIFdlIGRvbiBrbm93IGFib3V0IHRoZSBpbnRpbWF0ZSBkZXRhaWxzIG9mIHBlb3BsZSBzZXR0bGluZyBpbiBFdXJvcGVhbiBhcmVhcy4gQW5jaWVudCBoaXN0b3J5LiAKTXkgQ3VsbGlnYW4gc3lzdGVtIHN0dWNrIGluIHJlZ2VuIGxhc3QgbmlnaHQgYW5kIG5vdyBpcyBsZWFraW5nIHdhdGVyIGZyb20gdW5kZXIgdGhlIGNvbnRyb2wgYm94LiBJIHJlbW92ZWQgdGhlIGNvdmVyLCBhbmQgdGhlIHByaW50ZWQgY2lyY3V0IGlzIHdldC4gSSB1bnBsdWdnZWQgdGhlIC4KSSBtZWFuIGV4dHJhIGhvbGlkYXkgdGltZSBpcyBhIHRvdGFsbHkgbm9ybWFsIHRoaW5nIHRvIG5lZ290aWF0ZSwgYW5kIGEgcHJldHR5IGNvbW1vbiBhc2suIEVzcGVjaWFsbHkgaWYgdGhlIGNvbXBhbnkgaGFzIHNvbWUgZHVtYiBydWxlIGxpa2UgIm5vIHBheSByYWlzZXMiIHRoZW4gZXh0cmEgaG9saWRheSB0aW1lLCBvciBleHRyYSBiZW5lZml0cyBvZiBzb21lIGtpbmQgZGVmaW5pdGVseSBlbnRlciB0aGUgZXF1YXRpb24uIEkgbWVhbiwgSSBkb24ga25vdyB5b3VyIGNvbXBhbnkgb3Igd29yayBzaXR1YXRpb24sIGJ1dCB1bmxlc3MgaXQgYSB2ZXJ5IGJpZyBjb21wYW55IHdpdGggdmVyeSBpbmZsZXhpYmxlIHJ1bGVzIGdvdmVybmluZyBzYWxhcnksIHRoZW4gSSB0aGluayBldmVyeXRoaW5nIGlzIG9wZW4gZm9yIG5lZ290aWF0aW9uLiB0aGV5IGdldCBpbnRlcnZpZXdlZCBhbmQgYmFja2dyb3VuZCBjaGVja2VkIGJ5IENhbmFkaWFuL0FtZXJpY2FuL0F1c3RyYWxpYW4gb2ZmaWNpYWxzLCBldGMuICBvZiB3aGljaCB0aGV5IGFyZSBjZXJ0YWluIHRvIGZhaWwuIFRoZXkgbWlnaHQgYmUgcmVmdWdlZXMgaW4gdGhlIGNhbXAsIGJ1dCBubyBjb3VudHJ5IGlzIGdvaW5nIHRvIGFjY2VwdCB0aGVpciBhc3lsdW0gY2xhaW0gYXMgdmFsaWQsIGxlYXZpbmcgdGhlbSBzdHJhbmRlZCBpbiB0aGUgY2FtcCBwZXJtYW5lbnRseS4KS2lkcyBuZWVkIGFkdmVyc2l0eS4gVGhleSBuZWVkIHRvIGJlIGNoYWxsZW5nZWQgc29jaWFsbHkuIEJ1dCBidWxseWluZyBpcyBub3QgYSB2ZXJ5IGdvb2QgYW5zd2VyLiBXaGVuZXZlciBwZW9wbGUgc2F5IHRoYXQgYnVsbHlpbmcgaXMgb2sgb3IgbmVjZXNzYXJ5IEkgaGF2ZSB0byBpbWFnaW5lIHRoYXQgdGhleSBhcmUgcGljdHVyaW5nIHRoZSBidWxsaWVzIGZyb20gd2hlbiB0aGV5IHdlcmUgeW91bmcgb3IgZnJvbSBwb3B1bGFyIG1lZGlhLiBUaGUga2luZCB0aGF0J2xsIHNob3ZlIHlvdSBpbnRvIGEgbG9ja2VyIGFuZCBjYWxsIHlvdSBhIGxvc2VyLiBUaGF0IGp1c3QgaXNuJ3Qgd2hhdCBidWxseWluZyBpcy4gQmVjYXVzZSBvZiBzb2NpYWwgbWVkaWEsIG1vZGVybiBidWxseWluZyBpbnZvbHZlcyBncm91cHMgb2Yga2lkcyBnYW5naW5nIHVwIG9uIG9uZSBraWQgZm9yIG5vIHJlYXNvbiwgcnVpbmluZyBhbGwgYXNwZWN0cyBvZiBhIHNvY2lhbCBsaWZlLCBhbmQgYmFzaWNhbGx5IHJlaW5mb3JjaW5nIHRvIHRoZSB2aWN0aW0gdGhhdCB0aGV5IGFyZSB3b3J0aGxlc3MgYW5kIHNob3VsZCBraWxsIHRoZW1zZWx2ZXMgYXQgYWxsIHRpbWVzLiBUaGlzIGhhcHBlbmluZyBkdXJpbmcgYSBkZXZlbG9wbWVudGFsIHBlcmlvZCBvZiBhIHBlcnNvbidzIGxpZmUgY2FuIGRvIG5vdGhpbmcgYnV0IGRhbWFnZS4gSXQnbGwgZnVjayBlbSB1cCBmb3IgbGlmZS4gWW91IGNhbid0IHN0YW5kIHVwIGFnYWluc3QgYSBidWxseSBub3dhZGF5cy4gVGhlICJoYXJkZW5pbmcsIiBvciBjaGFyYWN0ZXIgYnVpbGRpbmcgb2YgYSBraWQgY2FuIGJlIGFjaGlldmVkIHRocm91Z2ggZ29vZCBwYXJlbnRpbmcsIHRocm91Z2ggZnJpZW5kcyBhbmQgc29jaWFsIGNpcmNsZXMgdGhhdCB0aGV5IGFyZSBjb21mb3J0YWJsZSBlbm91Z2ggd2l0aCB0byBqb2tlIGFyb3VuZCBhbmQgY2hhbGxlbmdlIHRoZWlyIHNlbGYgZXN0ZWVtIHdpdGhvdXQgdGhlIHRocmVhdCBvZiByZWFsIHNvY2lhbCBjb25zZXF1ZW5jZXMuCkkgd2FzIHNpdHRpbmcgbmV4dCB0byBhIGJlZCBib3VuZCBpbmRpdmlkdWFsIHN1ZmZlcmluZyBmcm9tIGRlbWVudGlhIHdobyBkaWQgbm90IHNwZWFrIGZvciBzZXZlcmFsIG1vbnRocyBvdGhlciB0aGFuIHRoZSBvY2Nhc2lvbmFsIG1vYW4vZ3JvYW4uIEl0IHdhcyBhcm91bmQgMTAgUE0gYW5kIHdhcyBob2xkaW5nIGhlciBoYW5kIHRvIHByb3ZpZGUgdGFjdGlsZSBjb21mb3J0IGJlY2F1c2Ugc2hlIHdhcyByZXN0bGVzcyBpbiB0aGF0IG1vbWVudCwgaGVuY2UgdGhlIHZpc2l0LiAKMyB5ZWFyIG9sZCBOdXR6IFBva2VyIExlYWd1ZSBydW5zIGdhbWVzIGF0IHVwIHRvIGZpdmUgdmVudWVzIGVhY2ggZGF5LiBUaGlzIG1vbnRoJ3Mgb25saW5lIHJhbmtpbmdzIHNob3cgNDM1IGFjdGl2ZSBOdXR6IHBsYXllcnMuCg==|<---