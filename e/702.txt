--->|VGhlcmUgYXJlIG90aGVyICQxMCwwMDAgYnV5IGlucywgbW9zdCBub3RhYmxlIGF0IHRoZSBIT1JTRSBjaGFtcGlvbnNoaXAgc3RhcnRpbmcgb24gMjNyZCBKdW5lLiAKVGhlbiBjYW1lIExhcnJ5IFN1bW1lcnMgYW5kIHRoZSBUQVJQIGJhaWxvdXRzIGFuZCB0aGUgaW5jcmVhc2Ugb2YgdHJvb3BzIGluIGJvdGggSXJhcSBhbmQgQWZnaGFuaXN0YW4gYW5kIHNvIG1hbnkgYmV0cmF5YWxzIHRoYXQgYnkgbm93LCBteSBoZWFydCBpcyBsaWtlIHN0b25lIGFuZCB0aGVyZSBpcyBub3RoaW5nIGxlZnQgZm9yIHRoZSBPYmFtYSBpdGVzIHRvIGRvIHRoYXQgd2lsbCBodXJ0IG1lT3Igc28gSSBzYXkuIGFueSBicm9rZW4gaGVhcnRlZCBsb3ZlciwgY29udGludW91c2x5IHJlamVjdGVkIGFuZCB0aGVuIGNvdXJ0ZWQgYW5kIHRoZW4gcmVqZWN0ZWQgYWdhaW4sIEkgaGFyYm9yIGEgc21hbGwgcGllY2Ugb2YgaG9wZS4gClRoZSBtYWpvcml0eSBvZiB0aGUgcmVzdCBvZiB0aGUgdXNlcmJhc2UgcHJpbWFyaWx5IGNvbnNpc3RzIG9mICJ0byB0aGUgbW9vbiBwZW9wbGUiIHdobyBoYXZlIG5vIGlkZWEgdGhhdCBiaXRjb2luIHRyYW5zYWN0aW9ucyBjb3N0IGEgbG90IG9mIG1vbmV5LCBiZWNhdXNlIHRoZXkgYXJlIG5vdCBwYXlpbmcgZm9yIGl0LiAKSWYgeSdhbGwga2lsbCB0aGlzIGdhbWUgd2l0aCB5YSBidWxsIHNoaXQgSSdtIGxpdGVyYWxseSBnb2luZyB0byBKYXkgYW5kIHNpbGVudCBib2IgeSdhbGwgYW5kIGNvbWUgYmVhdCB5b3VyIGFzcyBwZXJzb25hbGx5Li4gCkl0J3MgZG9pbmcgYSBzdGVwIGJhY2suIApJbiAxOTgwLCBoZSByYW4gZm9yIGdvdmVybm9yIG9mIE9oaW8sIGdvaW5nIHNvIGZhciBhcyB0byBvcGVubHkgYWRkcmVzcyB0aGUgc2NhbmRhbCBpbiBhIGNhbXBhaWduIGNvbW1lcmNpYWwuIApXaGljaCBsZWFkcyB1cyB0byBQaW5vdCBOb2lyLCBhbHNvIGtub3duIGFzIHRoZSBncmFwZS4gUGxheWluZyBmaWNrbGUgY291bnRlcnBhcnQgdG8gYW1pYWJsZSBQaW5vdCBHcmlzLCB0aGluIHNraW5uZWQgUGlub3QgTm9pciByZXF1aXJlcyBkZWxpY2F0ZSBhdHRlbnRpb24gaW4gdGhlIHZpbmV5YXJkLiAKSSdkIHNheSBhIGxvdCBvZiBpdCBpcyBwcmVqdWRpY2UsIGJlY2F1c2UgdG8gbG9vayBhdCB0aGV5J3JlIGludGltaWRhdGluZyBhbmQgbGVzcyBjaXZpbGlzZWQuIApEaXN0cmlidXRlZCAyNzAgbW9vbiByb2NrIHNhbXBsZXMgaW4gdGhlIDE5NzBzIGFzIGEgZ29vZHdpbGwgZ2VzdHVyZSB0byBjb3VudHJpZXMgYXJvdW5kIHRoZSB3b3JsZC4gCkFuZCBpbiBKYW51YXJ5LCBndWFyZHMgbGVhcm5lZCBoZSB3YXMgcGF5aW5nIG90aGVyIGlubWF0ZXMgdG8gc3RlYWwgZm9vZCBmb3IgaGltIGZyb20gdGhlIGtpdGNoZW4gb2YgdGhlIHBlbml0ZW50aWFyeS4uIApEb2VzbiBtYWtlIHNlbnNlIHRvIHN1cHBvcnQgdHdvIGRpZmZlcmVudCBzdGFja3MgZm9yIGJhY2tlbmQgYW5kIGZyb250ZW5kLiAKV2hlbiBJIHdhcyBpbiBIUyB3ZSBoYWQgYSBraWQgcGFzcyBhIG5vdGUgdG8gYW5vdGhlciBraWQgYWxsIHN1YnRsZSBsaWtlLiBUaGV5IGJvdGggc2F0IGJlaGluZCBtZSBpbiB0aGUgc2FtZSByb3cuIFRoZSBraWQgZGlkIG5vdCBldmVuIHJlYWQgaXQsIGhlIHB1dCBpdCBpbiBoaXMgcG9ja2V0IGJ1dCB0aGUgdGVhY2hlciBzYXcuClRoaXMgc3R5bGUgb2YgbWFzc2FnZSB3aWxsIHJlbGlldmUgeW91IGZyb20gYW55IHBhaW4geW91IG1pZ2h0IGJlIGRlYWxpbmcgd2l0aCwgY2F1c2VkIGJ5IHVuZGVyZ29pbmcgdG9vIG11Y2ggcGh5c2ljYWwgYWN0aXZpdHkuIElmIHlvdSBhcmUgYSBwZXJzb24gd2hvIGVuam95cyBhbiBpbnRlbnNlIHdvcmtvdXQsIHRoZW4gc3VjaCBhIHRoZXJhcHkgd2lsbCBoZWxwIHlvdSBwcmV2ZW50IHlvdXIgbXVzY2xlcyBmcm9tIHNvcmVuZXNzLiAKVGhlIG9ubHkgd2F5IHRvIHBhaW50IGEgcHJldHR5IHBpY3R1cmUgaXMgcHJhY3RpY2UsIGFuZCB0aGUgZmlyc3QgYW5kIHRvdWdoZXN0IHN0ZXAgaXMgbGVhcm5pbmcgbm90IHRvIGhpdCBzZW5kIHVudGlsIHlvdSBwcmFjdGljZWQgZW5vdWdoLiAKVGhlIEluZGVwZW5kZW50MjIgaG91cnMgYWdvCkkgZmVsdCBsaWtlIEkgd2FzIHRyeWluZyBldmVyeXRoaW5nIHdpdGggbXkgZXggYnV0IG5vIG1hdHRlciBob3cgbWFueSBicmVha2Zhc3RzLCBsdW5jaGVzLCBvciBkaW5uZXJzIEkgbWFkZSBoZXIuIGhvdyBtYW55IGNob3JlcyBhcm91bmQgdGhlIGhvdXNlIEkgdG9vayB1cC4gdHJpcHMgSSBwbGFubmVkIHdpdGggaGVyLiB0aGUgc3VwcG9ydCBJIGZlbHQgSSB3YXMgdHJ5aW5nIHRvIGdpdmUgaGVyIHNlZW1lZCB0byBnbyB1bm5vdGljZWQgYW5kIHVuYXBwcmVjaWF0ZWQuIFRvd2FyZCB0aGUgZW5kIG9mIG91ciByZWxhdGlvbnNoaXAgd2UgZmVsdCBtb3JlIGxpa2Ugcm9vbW1hdGVzIHJhdGhlciB0aGFuIGEgY291cGxlLiBwdW5jdHVhdGVkIGJ5IG5pZ2h0cyBvZiB1bnNwb2tlbiB0ZW5zaW9uLiBBZnRlciB3ZSBicm9rZSB1cCBJIHdhbnRlZCB0byBrbm93IHdoYXQgSSB3YXMgZG9pbmcgb3Igbm90IGRvaW5nIHJpZ2h0IGJlY2F1c2UgSSBkaWRuIHdhbnQgYW55IGZ1dHVyZSByZWxhdGlvbnNoaXAgdG8gc3VmZmVyIHRoZSBzYW1lIGZhdGUuCk15IGRhZCBpcyBhbHdheXMgc2F5aW5nLCAnVGhpcyBpcyBHcmVlY2UsIGp1c3QgcmVsYXggYSBsaXR0bGUgYml0LiciSSd2ZSBjb21lIHRvIHVuZGVyc3RhbmQgdGhhdCB0aGVyZSBpcyBhIGNvbXBsZXRlbHkgZGlmZmVyZW50IHdheSBvZiBsaXZpbmcsIGFuZCBpdCdzIG5vdCB0aGUgZmFzdCBwYWNlZCBBdWNrbGFuZCBsaWZlIHRoYXQgSSB3YXMgYWNjdXN0b21lZCB0by4gSSd2ZSBsZWFybnQgdG8gc2xvdyBkb3duLCBhbmQgdGFrZSBteSB0aW1lLiBCZWNhdXNlIGV2ZXJ5dGhpbmcgdGhhdCdzIG1lYW50IGZvciBtZSBpcyBnb2luZyB0byBjb21lICAgYXQgc29tZSBwb2ludC4iWW91IGJlY29tZSBsaWtlIHRoZSBwZW9wbGUgeW91IHNwZW5kIHRoZSBtb3N0IHRpbWUgd2l0aC4gCkhvdXN0b24gaXMgdGhlIGZpcnN0IGNpdHkgSSBjYW1lIHRvIHdoZW4gSSBtb3ZlZCB0byB0aGUgVW5pdGVkIFN0YXRlcywgc28gSSdsbCBjb250aW51ZSB3cml0aW5nIGFib3V0IHRoaXMgZ3JlYXQgY2l0eSBhcyB3ZWxsLiBQb2V0cnkgaGFzIGFwcGVhcmVkIGluIFBvZXRyeSwgQW1lcmljYW4gUG9ldHJ5IFJldmlldywgQmVzdCBBbWVyaWNhbiBFeHBlcmltZW50YWwgV3JpdGluZywgQ2FsbGFsb28sIGFuZCBvdGhlciBwdWJsaWNhdGlvbnMuIApJdCB2YXJpZXMgZ3JlYXRseSBieSByZWdpb24uIEkgZ3JldyB1cCBpbiBNaWNoaWdhbiwgd2hlcmUgSSBhbHdheXMgZmVsdCBlbmRhbmdlcmVkIGFyb3VuZCBwb2xpY2U7IEkgZmVsdCBsaWtlIHRoZXkgd2VyZSBjb25zdGFudGx5IGxvb2tpbmcgZm9yIGFueSBleGN1c2UgdG8gZGVzY2VuZCB1cG9uIHlvdS4gQnV0IG91dCBoZXJlIGluIFNGLCBJIGhhZCBub3RoaW5nIGJ1dCBwb3NpdGl2ZSBpbnRlcmFjdGlvbnMgd2l0aCB0aGUgcG9saWNlLCBhbmQgSSBnZXQgdGhlIGRpc3RpbmN0IGltcHJlc3Npb24geW91IGhhdmUgdG8gYmUgYm90aCBkb2luZyBzb21ldGhpbmcgaWxsZWdhbCBhbmQgYmVpbmcgYW4gYXNzaG9sZSB0byBnZXQgb24gdGhlaXIgYmFkIHNpZGUuIApJdCBpcyBub3Qgb2Z0ZW4sIGFmdGVyIGFsbCwgdGhhdCBhbiBlbGVjdGVkIG9mZmljaWFsIGlzIGFjY3VzZWQgb2YgbXVyZGVyaW5nIGEgbWFuIGluIGNvbGQgYmxvb2QgZHVyaW5nIGEgZHJ1ZyBkZWFsLiAKSW4gdGhpcyBmaXJzdCBpc3N1ZSBvZiB0aGUgU2hvcHBlciBNYXJrZXRpbmcgc2VyaWVzLCB0aGUgcmVsYXRpb25zaGlwIGJldHdlZW4gbWFya2V0ZXJzLCByZXRhaWxlcnMsIGFkIGFnZW5jaWVzIGFuZCBzaG9wcGVyIG1hcmtldGluZyBhZ2VuY2llcyBpcyBleHBsb3JlZCBhbmQgYW5hbHl6ZWQgdG8gaGlnaGxpZ2h0IGJlc3QgcHJhY3RpY2VzLiBDYXNlIHN0dWRpZXMgZnJvbSBsZWFkaW5nIG1hcmtldGVycyBzdWNoIGFzIEtpbWJlcmx5IENsYXJrIGFuZCBDb3ZlckdpcmwgYXJlIGluY2x1ZGVkLCBhcyB3ZWxsIGFzIHNwZW5kaW5nIHByb2plY3Rpb25zLCBhIGxpc3Rpbmcgb2YgbGVhZGluZyBzaG9wcGVyIGFnZW5jaWVzIGFuZCB0aGVpciBtYWpvciBjbGllbnRzLCBhbmQgdGlwcyBhbmQgYWR2aWNlIG9uIGhvdyB5b3Ugc2hvdWxkIGJlIGFwcHJvYWNoaW5nIHlvdXIgc2hvcHBlciBtYXJrZXRpbmcgcHJhY3RpY2UuIE90aGVyIGlzc3VlcyBleHBsb3JlIG5ldXJvc2NpZW5jZSB0ZWNobmlxdWVzLCBjYXNlIHN0dWRpZXMgYW5kIHNlYXJjaCwgc29jaWFsIGFuZCBtb2JpbGUgc3RyYXRlZ2llcy4gClVzZSBhIHF1aWNrIHdlYXBvbiwgZm9yIGV4YW1wbGUgdGhlIHN3b3JkIG9mIHRoZSBLaXJraGFtbWVyIGFuZCBub3RoaW5nIGVsc2UuIApJIGhhdmUgaGFkIHRoZSBvcHBvcnR1bml0eSB0byB0ZXN0IGFib3V0IDE1IG9ubGluZSBwb2tlciBjYWxjdWxhdG9ycywgYW5kIGluIGFsbCBob25lc3R5LCBub3Qgb25lIG9mIHRoZW0gaXMgcGVyZmVjdCBmb3IgbWUuIFRoYXQgYmVpbmcgc2FpZCwgYW1vbmcgdGhlIEVtcGlyaWNhbCB0eXBlIG9mIHBva2VyIGNhbGN1bGF0b3JzLCB0aGVyZSBhcmUgdHdvIHRoYXQgSSBoYXZlIHVzZWQgZXhjbHVzaXZlbHkgZm9yIHNpbmdsZSB0YWJsZSwgc2l0IGFuZCBnbyB0b3VybmFtZW50cyAoU1RUKS4gVGhleSBhcmUsIFNpdCBhbmQgR28gU2hhcmsgYW5kIEhvbGQnZW0gUGlyYXRlLgpKb2huIEJvb2ssIHRoZSBwb2xpY2Ugb2ZmaWNlciwgaGFzIHRvIGFkYXB0IHRvIGEgY29tcGxldGVseSBkaWZmZXJlbnQgd2F5IG9mIGxpZmUuIApCdXQgdGhlcmUgYXJlIHBsZW50eSBvZiByZWFzb25zIHRvIGdvIGZvciB0aGUgUmFkZW9uIFZJSTsgbWluZSBpcyB0aGF0IE52aWRpYSB3aWxsIG5ldmVyIGJlIGFibGUgdG8gZG8gTWl4ZWQgUmVzb2x1dGlvbiBzdXJyb3VuZCBxdWl0ZSBhcyBnb29kIGFzIEFNRCwgYW5kIEkgYW0gYSBmaXJtIGJlbGlldmVyIG9mIHRoZSBwaWN0dXJlIHF1YWxpdHkgYmVpbmcgYmV0dGVyIG9uIFRlYW0gUmVkLiAKVG91dCBpbWFnZSwgc29uLCBlZmZldCBzb25vcmUsIGVucmVnaXN0cmVtZW50IHNvbm9yZSwgbXVzaWNhbGUsIHBlcmZvcm1hbmNlLCBncmFwaGlxdWUsIHZpZCBwcm9kdWN0aW9uIGNpbiBhdWRpb3Zpc3VlbGxlIG91IHRvdXRlIGF1dHJlIChsZSBDb250ZW51IE11bHRpbSB0cm91diBwYXIgbCBkIGVuZ2luIGRlIHJlY2hlcmNoZSBkaXNwb25pYmxlIHN1ciBsZSBTaXRlIHdlYiBzb250IHByb3QgcGFyIGxlIGRyb2l0IGQgZXQgb3UgbGVzIGF1dHJlcyBkcm9pdHMgZGUgcHJvcHJpIGludGVsbGVjdHVlbGxlLiBMYSBQcmVzc2UgbiBwYXMgbGUgZHJvaXQgZGUgdm91cyBhdXRvcmlzZXIgcmVwcm9kdWlyZSwgZGlzdHJpYnVlciwgYWZmaWNoZXIgcHVibGlxdWVtZW50LCBmYWlyZSB1bmUgcGVyZm9ybWFuY2UgcHVibGlxdWUsIGNvbW11bmlxdWVyIG91IGNyIGRlcyBkIHBhcnRpciBkZSB0b3V0IGZpY2hpZXIgY29udGVuYW50IHVuIHRlbCBDb250ZW51IE11bHRpbSBMb3JzcXVlIGxlcyByIGRlIGxhIHJlY2hlcmNoZSByZWxpZW50IGRlcyBTaXRlcyB0aWVycywgdG91dCBsZSBDb250ZW51IE11bHRpbSBjb250ZW51IHN1ciBjZXMgU2l0ZXMgdGllcnMgZXN0IGxhIHByb3ByaSBkIGF1dHJlcyBxdWUgTGEgUHJlc3NlLiAKSSBoYXZlIGhhZCBidXJzaXRpcyBwcm9ibGVtcyBpbiBteSBzaG91bGRlcnMgZm9yIHNvbWUgd2hpbGUsIGluanVyZWQgd2l0aCBhIG1pc3MgcG9sZSBwbGFudCBza2lpbmcgYW5kIGEgY291cGxlIG9mIHNob3VsZGVyIGRpc2xvY2F0aW9ucy4gClRoaXMgaXMgYSBtYXJhdGhvbi4gCkRhcyBTaW5pY3VtIGluIEJvY2h1bSBiaWV0ZXQgZWluZW4gZHJlaXcgSW50ZW5zaXZrdXJzIGFuLCB1bmQgYWxzIEFyYmVpdHNsb3NlciBiZWtvbW10IG1hbiBkb3J0IGF1IG5vY2ggb3JkZW50bGljaCBSYWJhdHQuIApGaW5kaW5nIGEgY2FyZWVyIGlzbiBlYXN5LCBlc3BlY2lhbGx5IGluIHRoaXMgam9iIG1hcmtldC4gRG9uIGJlYXQgeW91cnNlbGYgdXAgYWJvdXQgaXQuIFlvdSBoYXZlIHRvIHNwZW5kIHRpbWUgZmlndXJpbmcgb3V0IHdoYXQgeW91IGxpa2UgYW5kIGhhdGUsIHdoYXQgc2tpbGxzIGRvIHlvdSBoYXZlIHRvIG9mZmVyLCB5b3VyIHRlbXBlcmFtZW50LCBpbiBvcmRlciB0byBkZWNpZGUgd2hhdCBraW5kIG9mIGpvYiBpcyBiZXN0IGZvciB5b3UgYXMgd2VsbCAgIG9yIGZpZ3VyZSBvdXQgaWYgeW91IG5lZWQgc29tZSBmdXJ0aGVyIHRyYWluaW5nL3NjaG9vbC4gCkluIHN0dWR5IDEsIHRoZSB3aGl0ZSBncm91cCBoYWQgYSBzaWduaWZpY2FudGx5IHdvcnNlIHBlcmNlcHRpb24gb24gYmxhY2sgd2VsZmFyZSByZWNpcGllbnRzIHRoYW4gd2hpdGUgd2VsZmFyZSByZWNpcGllbnRzLCB3aGVuIGl0IHdhcyBub3QgcmVwb3J0ZWQgaWYgZWl0aGVyIGdyb3VwIGZvdW5kIGpvYnMuIApBcyBkb2VzIDEsMiwzIFNOSy4uIApTaGUgd2FzIHN0dWNrIGluIGEgVGVjaC9NYW51ZmFjdHVyaW5nIGNvbXBhbnkgZm9yIHRoZSBwYXN0IGZldyB5ZWFycyB0aGF0IHdhcyB2ZXJ5IG11Y2ggYWdhaW5zdCBwcm9tb3Rpbmcgd29tZW4uIFNoZSB1c2VkIGl0IHRvIGJ1aWxkIHVwIGhlciByZXN1bWUgYSBiaXQgYW5kIHdoZW4gc2hlIHB1dCB0aGUgd29yZCBvdXQgc2hlIHdhcyBsb29raW5nIGZvciBhIG5ldyBqb2IgYWJvdXQgYSBtb250aCBhZ28gc2hlIGhhZCBtdWx0aXBsZSBvZmZlcnMgdGhhdCB3ZXJlIGFsbCBiaWcgc3RlcHMgdXAuIApQbGF5IEJpbmdvIGFuZCBoZWxwIHJhaXNlIGZ1bmRzIGZvciBGcmllbmRzIFNjaG9vbCdzIDh0aCBncmFkZSBzcHJpbmcgdHJpcCB0byBDb3N0YSBSaWNhLiAKSXQgZmluZS4gCkEgbW92aWUgY2hhcmFjdGVyIGlzIG9ubHkgYXMgc21hcnQgYXMgdGhlIGZpbG0gc2Nob29sIGdyYWR1YXRlIHRoaW5raW5nIGl0IHVwLiAKQnJpbGxpYW50IHBlb3BsZSBoYXZlIHB1dCB0aGVpciBoZWFydHMsIHNvdWxzIGFuZCBtaW5kcyB0byB0aGlzIChoZWFkYWNoZSkgcHJvYmxlbSBhbmQgaGF2ZW4gY29tZSB1cCB3aXRoIGFueXRoaW5nLiAKQm9iLCB0aGUgcHJlc2lkZW50IG9mIENvdXBsZXMgQ3J1aXNlLCBzYWlkOiAiVGhlcmUgaXMgYSBsb3Qgb2Ygc2V4IG9uIG91ciBzaGlwcy4gQ3J1aXNlcyBnZXQgcGVvcGxlIGV4Y2l0ZWQgYW5kIGNvdXBsZXMgdGVsbCBtZSBhbGwgdGhlIHRpbWUgaG93IG91ciBDb3VwbGVzIENydWlzZXMgaGF2ZSByZWtpbmRsZWQgdGhlaXIgcGFzc2lvbiBhbmQgdGhhdCB0aGV5IGhhZCBtb3JlIHNleCBvbiBvdXIgY3J1aXNlIHdpdGggdGhlaXIgcGFydG5lciB0aGFuIHRoZXkgaGF2ZSBoYWQgaW4gbW9udGhzLiBDZXJ0YWlubHkgZG8gZ2V0IHN3aW5nZXJzIG9uIGJvYXJkIGFuZCBtYW55IG9mIHRoZW0gYXJlIGxvb2tpbmcgZm9yIG90aGVyIHBvdGVudGlhbCBwYXJ0bmVycy4iLiAKSGlsbCwgd2VyZSBub3QgYWJvdXQgdG8gbGV0IGhpbSBnZXQgYXdheS4gU28gb24gU2VwdC4gCkkgbmV2ZXIgZ28gdG8gdGhlIGRhcmsgcGxhY2Ugb2Ygc2F5aW5nICJoZXJlJ3MgYSBKZXdpc2ggcGVyc29uLCB0aGV5J3JlIHRhbGtpbmcgYWJvdXQgUGFsZXN0aW5pYW5zLCBQYWxlc3RpbmlhbnMgYXJlIE11c2xpbSwgbWF5YmUgdGhleSdyZSBJc2xhbW9waG9iaWMuIiBJIG5ldmVyIGFsbG93IG15c2VsZiB0byBnbyB0aGVyZSBiZWNhdXNlIEkgZG9uJ3QgaGF2ZSB0by4uIApJdCB3YXMgbm90IGFuIGluZGl2aWR1YWwgbG90dG8gcGxheWluZywgYnV0IHRoZSBjb21wdXRlciBpdHNlbGYgcGlja2VkIG91dCBmcm9tIGFsbCBvdmVyIHRoZSB3b3JsZC4gClRoZSBGYXJtZXIgaW4gdGhlIERlbGwgcGxheWluZyBjYXJkcyBmZWF0dXJlcyBhbGwgdGhlIGNoYXJhY3RlcnMgZnJvbSB0aGUgc29uZyBhbmQgY29tZXMgaW4gYSAzLjUgWDUgaW5jaCBwbGF5aW5nIGNhcmQgcGVyZmVjdCBmb3IgbGl0dGxlIGhhbmRzIHRvIGhvbGQuIApCdXQgbWluaW5nIGRldmVsb3BtZW50IGhhcyB0dXJuZWQgdGhlIHRhYmxlcyB3aXRoIHRoZSBncmVhdGVzdCBkZW1hbmQgZm9yIHBva2VyIG1hY2hpbmVzIG5vdyBjb25jZW50cmF0ZWQgaW4gdGhlIGNvYXN0YWwgcmVnaW9uICAgaW5jbHVkaW5nIE1hY2theSwgUm9ja2hhbXB0b24gYW5kIEdsYWRzdG9uZS4KTWFyc3BhcnMgdQpMaXRlcmFsbHkgdGhlIG9ubHkgd2F5IHRvIHN1cnZpdmUgUGVsZSBzdHVwaWQga25vY2sgdXAgbW9sdGVuIG9yYiBjb21ibyBpcyB0byBhZWdpcy4gSWYgeW91ciBhZWdpcyBpcyBkb3duLCBzaGUganVzdCB3aW5zLgpCbGFja2JpcmQgaXMgcmVhbGx5IG5pY2UgYSBsaXR0bGUgb24gdGhlIHByaWNpZXIgc2lkZSAoSSBvbiBhIHN0dWRlbnQgYnVkZ2V0KSBmYW50YXN0aWMgY29ja3RhaWwgYW5kIGJlZXIgcmFuZ2UgZ3JlYXQgdmlld3Mgb2YgdGhlIGJyaWRnZS4gUml2ZXJsYW5kIGhhcyBncmVhdCBTdW5kYXkgZGVhbHMgbGlrZSBqdWdzIGFuZCBjb2NrdGFpbCBkZWFscywgZG9uIGtub3cgaWYgdGhleSBlbmQgbGF0ZSBhdCBuaWdodC4gVGhlbiBkZXBlbmRpbmcgaWYgeW91IHdhbnQgdGhlIGZ1bGwgbm9pc3kgY2x1YiBleHBlcmllbmNlIFN0b2NraWVzICh0aGUgc3RvY2sgZXhjaGFuZ2UgaG90ZWwpIGlzIG9wZW4gdGlsbCAzYW0uSWYgeW91IHdhbnQgdG8gZ28gdG8gdGhlIHZhbGxleSB0aGUgYmVzdCBwbGFjZXMgdGhhdCBzdGF5IG9wZW4gbGF0ZSBTdW5kYXkgRmx1ZmZ5IChUaGUgRmFtaWx5KSB0aWxsIDNhbSwgUkdzIHRpbGwgM2FtLCBYIENhcmdvIHRpbGwgMTJhbSBhbmQgRWxldmVuIHJvb2Z0b3AgdGlsbCAxMmFtLi4gCkFyZSB3ZSBtaXJlZCBpbiB0aGlzIGJ1cmVhdWNyYXRpYyBzaWxsaW5lc3MgaW5zdGVhZCBvZiB0aGUgYnVzaW5lc3MgdHJhbnNhY3Rpb24gdGhhdCBpdCBpcz8gaGUgc2FpZC4gVHdvIHllYXJzIGRvd24gdGhlIHJvYWQgYW5kIHdlIG5pY2tlbCBhbmQgZGltaW5nIHRoaXMgdGhpbmcuIEFwcHJvdmVkIGxlZ2lzbGF0aW9uIGxhc3QgeWVhciB0aGF0IHJlZHVjZWQgdGhlIHRheCByYXRlIGZvciBmaXZlIHllYXJzIGF0IFJvY2t5IEdhcCB0byA2NC41IHBlcmNlbnQgaWYgdGhlIGJpZGRlciBhZ3JlZWQgdG8gcHVyY2hhc2UgdGhlIHJlc29ydC4gCk9uIGhpcyBtYW55IHZvbHVtZXMgb24gZm9yZWlnbiBwb2xpY3ksIGhpcyBwcm9wb3NhbCBpc24gY29tcGxpY2F0ZWQ6IHN0b3AgcGFydGljaXBhdGluZyBpbiB0ZXJyb3Jpc20sIHN0b3AgdmlvbGF0aW5nIGludGVybmF0aW9uYWwgbGF3LCBzdG9wIGludmFkaW5nIGFuZCBib21iaW5nIG90aGVyIGNvdW50cmllcy4gCkJ1dCBJIGFsc28gd2FrZSB1cCBhdCA2OjE1YW0gdG8gZ2V0IHJlYWR5IGZvciB3b3JrIGFuZCBoYXZlIGEgbGl0dGxlIGZyZWUgdGltZSB0byBteXNlbGYgYW5kIGRvbiB1c3VhbGx5IGdldCBob21lIHVudGlsIGF0IGxlYXN0IDg6MDBwbS4gCkluIHRoaXMgY2FzZSwgVUtJUCwgTGFib3VyIGFuZCBDb25zZXJ2YXRpdmUgYWxsIGdldCBhIHNlYXQgZWFjaCwgYW5kIHRoZW4gd2UgaGF2ZSB0byBzcGxpdCBvdXIgcGlsZXMsIGFuZCB3ZSBzZWUgdGhhdCBVS0lQIGFuZCBMYWJvdXIgZWFjaCBnZXQgYW5vdGhlciBvbmUuIEhvd2V2ZXIsIGlmIGV2ZXJ5b25lIHdobyB2b3RlZCBmb3Igc29tZW9uZSBlbHNlIHB1dCB0aGVpciB2b3RlIGludG8gQ29uc2VydmF0aXZlcyBhbmQgTGFib3VyLCB3ZSBjb3VsZCBoYXZlIHNvbWV0aGluZyBsaWtlIFVLSVAgMzEsIENvbnNlcnZhdGl2ZSBhbmQgTGFib3VyIDMyLCBhbmQgdGhpcyBtZWFucyB0aGF0IENvbnNlcnZhdGl2ZSBhbmQgTGFib3VyIHBpY2sgdXAgdGhvc2Ugc2Vjb25kIHNlYXRzLiBJZiBldmVyeWJvZHkgd2hvIHdvdWxkIHZvdGUgZm9yIGFueW9uZSBvdGhlciB0aGFuIFVLSVAvQ29uL0xhYiBzd2l0Y2hlZCB0aGVpciB2b3RlIHRvIENvbnNlcnZhdGl2ZSwgaG93ZXZlciwgd2Ugd291bGQgc2VlIFVLSVAgMzEsIENvbiA0MSBhbmQgTGFiIDI4LCBhbmQgc28gVUtJUCBwaWNrcyB1cCBhIHNlY29uZCBzZWF0IGFnYWluLiAKV2hlbiBpdCBjb21lcyB0byBUZXhhcyBIb2xkIEVtIFBva2VyIENoaXBzLCB5b3UgYXJlIHN1cmUgdG8gd2FudCBvbmVzIHRoYXQgaGF2ZSB0aGUgdHJhZGVtYXJrIGVtYmxlbXMsIGFzIHdlbGwgYXMgdGhlIG1vc3QgcG9wdWxhciBjb2xvcnMuIApUaGVzZSBhcmUgbXkgY2hvaWNlcy4gSSBnbyBieSB3aGF0IGlzIGdvb2QgZ292ZXJuYW5jZS4gV2hhdCBhcmUgdGhlIHRoaW5ncyBJIGFpbSB0byBkbz8gQSBoZWFsdGh5IHNvY2lldHkgdGhhdCBnaXZlcyBldmVyeWJvZHkgYSBjaGFuY2UgdG8gYWNoaWV2ZSBoaXMgbWF4aW11bS4KSSBjYW4gc2F5IGl0IHdvcmtzIGJldHRlciB0aGFuIG1hbnVhbCwgYnV0IGl0IHdvcmtzLiBUaGVyZSB3YXMgYSBob3JzZSB0aGF0IGhhZCBzdWNoIGJhZCBiYWNrIGFuZCBoaXAgcHJvYmxlbXMgZm9yIHllYXJzIHRoYXQgaXQgY291bGRuIHdhbGsgYXJvdW5kIGl0cyBzdGFsbCBhdCBhbGwuIFNoZSBiZWdhbiB0cmVhdGluZyBpdCB3aXRoIGFjdGl2YXRvciBhZGp1c3RtZW50cyBhbmQgaW4gc2l4IGNvbnNlY3V0aXZlIHNlc3Npb25zIGhlIHdhcyBtb3ZpbmcgYXJvdW5kIGhpcyBzdGFsbCBzb21lLiAKRXN0IGlsIHZyYWkgcXVlIGMndGFpdCB1bmUgbGV0dHJlIGQnYW1vdXIgPyBPdWkuIApCdXkgMyBLbmlwaG9maWEgJ0xpdHRsZSBNYWlkJyBmb3IgMTEuOTUgb3IgYnV5IDYgZm9yIDE5LjkwIGFuZCBzYXZlIDQuIApVbmNvdmVyIHRoZSBteXN0ZXJ5IG9mIENhc2lubyBQb2tlciBDaGlwcyBhbmQgc2VlIGlmIHRoZXkgYXJlIHJpZ2h0IGZvciB5b3UgYXQgdGhpcyB0aW1lLiBQbGVhc2UgcmVhZCBvdXIgZGV0YWlsZWQgb3ZlcnZpZXcgb2YgQ2FzaW5vIFBva2VyIENoaXBzIGFuZCBtYWtlIHlvdXIgb3duIGZpbmFsIGRldGVybWluYXRpb24uCkRhcyB3IGYgZGFzIG4gTWFsIGVpbmUgZXJuc3RoYWZ0ZSB3ZXJ0LiBPYndvaGw/ISBXZXIgc29sbCBkZW5uIGRhbm4gZGFzIFRyYW5zcG9ydHdlc2VuIEdyaWVjaGVubGFuZHMgcmV2b2x1dGlvbmllcmVuPykuIApXaXRoIGFkZGl0aW9uYWwgZG9uYXRpb25zLCB0aGVpciAkMSwwMDAgdG90YWwgd2FzIG1hdGNoZWQgYnkgdGhlIFJveWFsIE5laWdoYm9ycyBvZiBBbWVyaWNhLiAKVGhlIG5pZ2h0IHdhcyBkYXJrIGFscmVhZHk7IHRoZSBhcmVhIGFyb3VuZCB0aGUgdHdvIGdhcyBwdW1wcyBpbiBmcm9udCBvZiB0aGUgc3RvcmUgd2FzIGlsbHVtaW5hdGVkIGJ5IGZsdW9yZXNjZW50IGxpZ2h0cy4gCkV2ZXJ5IHJvdW5kIHlvdSBnZXQgYSBuZXcgc2V0IG9mIGNhcmRzIGFuZCB5b3UgaGF2ZSB0byBkZWNpZGUgaG93IHRvIHBsYXkgdGhlbS4gCkl0IGJlZW4gZml2ZSB5ZWFycyBzaW5jZSByZXRpcmVlcyBnYWluZWQgdGhlIGZsZXhpYmlsaXR5IG9mIGNob29zaW5nIHRvIGRlZmVyIHJlY2VpcHQgb2YgT2xkIEFnZSBTZWN1cml0eSAoT0FTKSBiZW5lZml0cyBmcm9tIGFnZSA2NSB0byBhcyBsYXRlIGFzIDcwLiBUaGlzIG1pcnJvcnMgdGhlIG9wdGlvbiB0byBkZWZlciBDYW5hZGEgUGVuc2lvbiBQbGFuIChDUFApIGJlbmVmaXRzLCBhbHRob3VnaCB0aGUgaXMgb25seSAzNiBwZXIgY2VudCBmb3IgT0FTLCB2ZXJzdXMgNDIgcGVyIGNlbnQgZm9yIENQUC4KQm90aCBQcm96YWMgYW5kIFBheGlsIChhbmQgUHJpbGlneSkgYm9vc3QgbGV2ZWxzIG9mIHNlcm90b25pbiwgYSBuZXVyb3RyYW5zbWl0dGVyIHRoYXQgYWZmZWN0cyBzdWNoIGJhc2ljIGJvZHkgZnVuY3Rpb25zIGFzIGFwcGV0aXRlLCBzbGVlcCwgYW5kIHNleHVhbCBkZXNpcmUuIFdoZW4gdGhlcmUgaXNuJ3QgZW5vdWdoIHNlcm90b25pbiBpbiBhIHNtYWxsIGFyZWEgb2YgeW91ciBicmFpbiBzdGVtIGtub3duIGFzIHRoZSAoZ2V0IHJlYWR5IG5vdykgbnVjbGV1cyBwYXJhZ2lnYW50b2NlbGx1bGFyaXMsIHlvdXIgdGltZSB0byBlamFjdWxhdGlvbiBzcGVlZHMgdXAsIHNheXMgRHIuIApTaG9ydGx5IGFmdGVyIG91ciBzb24gd2FzIGJvcm4sIGhlIHN0YXJ0ZWQgZ2V0dGluZyBpbnRvIHBva2VyLiBIZSB3b3VsZCB3aW4gdGhvdXNhbmRzIG9mIGRvbGxhcnMgaW4gYSBtYXR0ZXIgb2YgaG91cnMgYW5kIGFzc3VyZWQgbWUgaGUgd2FzIG5vdCBhZGRpY3RlZCwgYW5kIHRoYXQgaXQgaXMgYSBnYW1lIG9mIHNraWxsLCBhbmQgaGUgbmVlZGVkIHRvIHBsYXkgc28gaGUgY291bGQgc3VwcG9ydCB1cyBqdXN0IGxpa2UgaXQgd2FzIGEgc2Vjb25kIGpvYi4gCklnZ3lidSAgNjAyIHBvaW50cyAgc3VibWl0dGVkIDIxIGRheXMgYWdvCkhleSwgeW91IGtub3cgaXQncyBqdXN0IHNvbWUgZmVsdCBvciBzb21ldGhpbmcsIHJpZ2h0PyBXZWxsLCBiZWxpZXZlIGl0IG9yIG5vdCwgdGhlIHBva2VyIHRhYmxlIGNsb3RoIHlvdSBzZWxlY3QgbWFrZXMgYSBodWdlIGltcHJlc3Npb24uIApPdmVydmlldyBmb3IgQmVuY2hQb2xrb3YKRGllIEFzeWxmcmFnZSBpc3Qgd2llZGVyIGVpbiBhbmRlcmVzIFRoZW1hLiBBYmVyIHdlbm4gd2lyIGVybnN0aGFmdCBzbyB3ZWl0IHNpbmQgZGFzIHdpciBlaW5mYWNoIHdlZ3NjaGF1ZW4gdW5kIG1hc3NlbmhhZnQgTWVuc2NoZW4gZXJ0cmlua2VuIGxhc3NlbiBkYW5uIGlzdCBoaWVyIHphcHBlbmR1c3Rlci4gQWJlciBrbGFyIGluIGRlciBlaWdlbmVuIFdvaGxzdGFuZHNibGFzZSBsZWJ0IGVzIHNpY2ggc28gYW5nZW5laG0uLiAKVGhlIHRocmVlIHNvb24gZm9ybWVkIGEgcGFydG5lcnNoaXAsIHRyYXZlbGxpbmcgYWNyb3NzIHRoZSBzb3V0aCB3ZXN0ZXJuIFVuaXRlZCBTdGF0ZXMgYXMgdGhlIG9yaWdpbmFsIFRleGFzIGdhbWJsZXJzIHBsYXlpbmcgcG9rZXIgYW5kIHNlZWtpbmcgb3V0IG90aGVyIHdhZ2Vycy4gR290IHRvIHRoZSBwb2ludCB3aGVyZSB3ZSB3ZXJlIGdhbWJsaW5nIG9uIGp1c3QgYWJvdXQgZXZlcnkgZ2FtZSB0aGVyZSB3YXMgZ29sZiwgdGVubmlzLCBiYXNrZXRiYWxsLCBwb29sLCBzcG9ydHMgYmV0dGluZywgU2xpbSByZWNhbGxlZC4gTG9uZyBhcyB3ZSB0aG91Z2h0IHdlIGhhZCBzb21lIHNvcnQgb2YgZWRnZSwgd2UgYmV0LiAKTWljaGFlbCBDb2hlbiBzaXR0aW5nIGJlZm9yZSBDb25ncmVzcyBhbmQgdGVzdGlmeWluZywgbWludXMgYW55IHJlYWwgZW1vdGlvbiwgdGhhdCBoZSBpcyBhIGxpYXIsIGEgZnJhdWQgYW5kIGEgY3JhdmVuIG9wcG9ydHVuaXN0LiBUaGUgSmFja3NvbiBlc3RhdGUgc3VpbmcgSEJPIHJhdGhlciB0aGFuIG9mZmVyaW5nIHJlY29tcGVuc2UsIGxldCBhbG9uZSBhcG9sb2dpZXMuIFRoZSBwcmVzaWRlbnQgY3Vyc2luZyBkdXJpbmcgYSBzcGVlY2ggYXQgQ1BBQy4gCk1pdCBzZWluZW0gMS4wMDAga20gbGFuZ2VuIFdlZ2VuZXR6IGlzdCBMYSBQYWxtYSBlaW4gRWxkb3JhZG8gZnIgV2FuZGVyZXIuIEFuZHJlYSBHcmllbWFubiBzdGVsbHQgZGllIHNjaG5zdGVuIFRvdXJlbiB2b3I6IGFtIFJhbmQgZGVzIFJvcXVlIGRlIGxvcyBNdWNoYWNob3MgbWl0IGZhc3ppbmllcmVuZGVuIEJsaWNrZW4gaW4gZGVuIGdydGVuIEVyb3Npb25za3JhdGVyIGRlciBXZWx0LCBkdXJjaCBkZW4gTG9yYmVlcndhbGQgTG9zIFRpbG9zIHVuZCBhdWYgZGVyIFJ1dGEgZGUgbG9zIFZvbGNhbmVzIiB6dSBkZW4gdnVsa2FuaXNjaGVuIFVyc3BybmdlbiBMYSBQYWxtYXMuLiAKVGhlIDE3NCBhY3Jlc2VuY29tcGFzc2VzYWZldyBtaW5vciBzZWN0aW9uc29mIHRoZSBWaXJnaW4gUml2ZXIsIGJ1dCB0aGUgbWFpbiBhY3JlYWdlaXMgc2l0dWF0ZWQgdG8gdGhlIGVhc3Qgb2Ygc3RhdGUgUm91dGUgOSBpbiBTcHJpbmdkYWxlIGFjY2Vzc2libGVieSB3YXkgb2YgdGhlIHRyYWlsIHN5c3RlbSB0aGF0IGJyYW5jaGVzIGVhc3QgZnJvbSB0aGUgR2VvcmdlQS4gCiJJIGtlcHQgbG9va2luZyBhdCB0aGUgdGltZXIgYmVjYXVzZSBJIGRpZG4ndCB3YW50IHRvIGhhdmUgdGhpcyBtZW50YWwgaW1hZ2Ugb2Ygd2hhdCBoZSB3YXMgZG9pbmcsJycgc2hlIHJlbWVtYmVyZWQgb2YgdGhlIG1hc3NhZ2UuIApBbmQgbGV0IG5vdCBmb3JnZXQgTWlrZSBNYWQgUHJvZmVzc29yIENhcm8gQ2FybyBCb29rIG9mIFBva2VyIFRlbGxzLiBGb3IgYW4gb2xkIGJvb2ssIHRoZSBpbmZvcm1hdGlvbiB0aGF0IHlvdSB3aWxsIHJlY2VpdmUgb24gcmVhZGluZyBwbGF5ZXJzIGlzIHN0aWxsIGV2ZXJ5IGJpdCBhcyB2YWx1YWJsZS4gClBlcnNvbmFsbHksIEkgZmluZCB0aGUgb2lsIG1hc3NhZ2UgdG8gYmUgdGhlIGJlc3QsIGlmIHlvdSBjYW4gcm91dGluZWx5IGFmZm9yZCBpdC4gSXQgbm90IGFzIHJvdWdoIGFzIFRoYWkgbWFzc2FnZSAobW9zdCBwZW9wbGUgSSBrbm93IGNvbXBsYWluZWQgYWZ0ZXIgdGhlaXIgZmlyc3QgVGhhaSBtYXNzYWdlIHRoYXQgaXQgd2FzIHRvbyByb3VnaCBhbmQgdGhlaXIgYm9keSBodXJ0cyBub3cpLCBhbmQgbXVjaCBtb3JlIHBsZWFzaW5nLgpNeSBHb2FsIGZvciAyMDE5IGlzIHRvIGJ1aWxkIG15IHJvbGwgb3ZlciAxMC4wMDAuIHdpdGggYXQgbGVhc3QgMjAgbGl2ZSBzZXNzaW9ucyB0aGF0IGkgd2FudCB0byBsb2dpbiwgaW0gZ29pbmcgYWdhaW5zdCB0aGUgVHJlbmQgb2ZmIGNvdmVyaW5nIHlvdXJzZWxmIGFuZCBpc29sYXRpbmcuIEkgd2FudCB0byBiZSBhIHBvc2l0aXZlIGNoYW5nZSBpbiB0aGUgbGl2ZSBzdHJlZXRzIHRoYXQgZW50ZXJ0YWlucyB0aGUgT3RoZXIgUGxheWVycyBhbmQgYWxzbyBlbmFibGVzIFRoZW0gdG8gVGVsbCB0aGVpciBzdG9yeS4gRm9yIGV4YW1wbGUgdHdpY2Ugb24gZGlmZmVyZW50IG9jY2FzaW9uIGluIEtpbmdzIENhc2lubyB0aGVyZSB3YXMgYSBHdXkgZnJvbSBsaXRodWFuaWEsIGpva2luZyBhcm91bmQgd2l0aCBoaW0gY3JhY2tlZCBVcCB0aGUgd2hvbGUgdGFibGUgYW5kIG1hZGUgUG9rZXIgYW5vdGhlciBMZXZlbCBvZiBmdW4gZm9yIG1lIGFuZCB0aGUgdGFibGUuIEJlc2lkZSB0aGF0IGkgbmUgdGhpbmtpbmcgb2YgYSBzdHJlYW1pbmcgRm9ybWF0IHRoYXQgQnJpbmdzIGEgc2ltaWxpYXIgRW50ZXJ0YWlubWVudCBmb3IgdGhlIFZpZXdlciAgIGRvbnQgaGF2ZSBhbiBpZGVhbCB5ZXQgSWYgWW91IGhhdmUgb25lIGxldCBtZSBrbm93ICEpLiBCdXN0b3V0IGhhbmQgZm9yIENMIGV2ZW4gc2lja2VyIEkgSGFkIHFxIHZzIGEzIGFuZCBnb3QgQ291bnRlcmZpdHRlZCBXaXRoIHJ1bm5pbmcgUXVhZCA0cyBvbiBCb2FyZC4gU3VjaCBhIHNpY2sgUmlkZSB0aGF0IFRvdXJuZXkgaXMgYSBTdG9yeSBpIGFsc28gSGFkIDIgYmIgYXQgVGhlIGJ1YmJsZSBhbmQgd2FzIGFsbCBpbiBhdCByaXNrLiBTbyBjYW50IGNvbXBsYWluOiApWWVzdGVyZGF5IGxvc3QgMS8zIDM1MGJiIFdpdGggdG9wIHR3byBhanNzIG9uIGFqZGQ1OCB0d28gY2FsbHMuIE9uZSBXaXRoIGJhYnkgZmx1c2ggRHJhdyB0aGUgT3RoZXIgZHVkZSBzdGFja2VkIFdpdGggQUsgZm9yIDEwMGJiLiBJIHJhaXNlZCBGbG9wcGVkIGFuZCBzaG92ZWQgVHVybi4gQWogbGl0ZXJhbGx5IGJvdHRvbSBvZiBteSByYW5nZSBpbiAzYiBwb3QgSGVyZSBsaXZlIFBsYXllcnMgb21lZ2FsdWwuClN1c3BlY3Qgc29tZWJvZHkgaXMgYSBjaGVhdGVyIGFuZCB5b3Ugd2FubmEgY2hlY2s/IEhlbGwgbm8gYnVkZHksIHdlIHJlbW92ZWQgVEhFIE1PU1QgSU1QT1JUQU5UIHRvb2wgYWdhaW5zdCBjaGVhdGVycyAoc3BlY3RhdGluZykgYmVjYXVzZS4gUmVhc29ucz8uIApBIGdyYXBoaWMgaWxsdXN0cmF0aW9uIGFwcGVhcmVkIG9uIHRoZSBmcm9udCBwYWdlIG9mIHRoZSBOZXcgWW9yayBUaW1lcyBvbiBBdWd1c3QgNC4gCk1pY2hpZ2FuJ3MgY2hhcml0eSBnYW1pbmcgaW5kdXN0cnkgZ3JldyBmcm9tIGxlc3MgdGhhbiAkOCBtaWxsaW9uIGluIGNoaXAgc2FsZXMgaW4gZmlzY2FsIHllYXIgMjAwNCB0byBtb3JlIHRoYW4gJDE5NyBtaWxsaW9uIGluIGZpc2NhbCB5ZWFyIDIwMTEuIENoaXAgc2FsZXMgZGlwcGVkIHRvICQxODQgbWlsbGlvbiBpbiBmaXNjYWwgMjAxMi4gCkkgaG9wZSBoZSBkb2VzIGdldCBzdXNwZW5kZWQuIEkgaG9wZSB0aGF0IGFueSBvZiBoaXMgcGVlcnMgdGhpbmtpbmcgb2YgbWFraW5nIGEgcGVyc29ucyBsaWZlIGhhcmRlciBiZWNhdXNlIHRoZXkgYXNrZWQgdG8gYmUgbGVmdCBhbG9uZSB3aWxsIHRoaW5rIHR3aWNlIGJlZm9yZSB0aGV5IGRlY2lkZSB0aGV5IGNhbiB0cmVhdCBzb21lb25lIGxpa2UgdGhhdCBhbmQgZ2V0IGF3YXkgd2l0aCBpdC4uIApJZiB5b3Ugd2FudCB0byBhcHBlYWwgYSBDQlAgZGVjaXNpb24sIHlvdSBuZWVkIGV2aWRlbmNlIHRoYXQgdGhleSB3ZXJlIHdyb25nIGFuZCB0aGUgYXJ0aWNsZSB3YXMgb2theSB0byBpbXBvcnQuIApUaGF0IHdhcyBzaG93biBieSBLdXJ0IGluIExhcyBWZWdhcyBhbmQgS3lsZSBpbiBBdGxhbnRhLCIgRHVjaGFyZHQgc2FpZC4gCkkndmUgYmVlbiB3b3JraW5nIGluIHRoZSBmaWVsZCBvZiBhdXRpc20gZm9yIGFsbW9zdCA3IHllYXJzIG5vdyBhbmQgdGhlIGFkYXB0aXZlIGNvbW11bmljYXRpb24gc2tpbGxzIHRoYXQgc29tZSBvZiBteSBzdHVkZW50cyBjb21lIHVwIHdpdGggc3RpbGwgYW1hemUgbWUuIFRoZSBmYWN0IHRoYXQgaGUncyBiZWVuIGludHJvZHVjZWQgdG8gUEVDUyBhbmQgbW9zdCBsaWtlbHkgaGFkIEVJIChFYXJseSBJbnRlcnZlbnRpb24pIGFzIGEgdG9kZGxlciBncmVhdGx5IGluY3JlYXNlcyBoaXMgc3VjY2VzcyBjb21tdW5pY2F0aXZlbHkuIERpZCBoZSBldmVyIGhhdmUgd29yZHMgb3Igdm9jYWxpemF0aW9ucz8gT25lIGFyZWEgdGhhdCBzb21ldGltZXMgZ2V0cyBvdmVybG9va2VkIHdoZW4gYSBjaGlsZCBzaG93cyBwcm9maWNpZW5jeSB3aXRoIGEgY29tbXVuaWNhdGlvbiBib29rIGlzIHRoZSBwb3NzaWJpbGl0eSB0aGF0IHRoZXkgbWF5LCBldmVudHVhbGx5LCBiZWNvbWUgdm9jYWwuIAoiQnV0IEkgZGlkIHdpbiB0aGUgZmlyc3QgdGltZSBhbmQgbG9zdCBhbmQgbG9zdCBhZnRlciB0aGF0LiIgQXQgMjYsIEhpbmRtYXJzaCBkZWZlYXRlZCBoaXMgYWRkaWN0aW9uIGJlZm9yZSBpdCBkcmFnZ2VkIGhpbSB0byByb2NrIGJvdHRvbS4gCk5vIG9uZSBjb3VsZCBoYXZlIGd1ZXNzZWQgaXQgd291bGQgY2F1c2UgYW4gYWNjaWRlbnQuLiAKSXQgaXMgYmVjb21pbmcgaW5jcmVhc2luZ2x5IGRpZmZpY3VsdCB0byBmb2xsb3cgYWxsIHRoZSBuZXcgc2l0ZXMgdGhhdCBzZWxsIGJ1dCBJIGFzc3VyZSB5b3UgdGhlIG9sZGVyIGFuZCBtb3JlIGV4cGVyaWVuY2VkIHNpdGVzIHdpbGwgbW9zdCBsaWtlbHkgZG8geW91IHdlbGwgZm9yIGEgY29tcGV0aXRpdmUgcHJpY2UuIApOb3RlOiBBbHNvLCBiZXdhcmUgVGhlIENoaW5hbWFuLCB3aG8gaW4gYW4gZWZmb3J0IHRvIGNvbXBlbnNhdGUgZm9yIGhpcyBkaW1pbmlzaGVkIHBoeXNpY2FsIHN0YXR1cmUsIGZyZXF1ZW50bHkgYXNzdW1lcyBhIHBva2VyIHN0eWxlIHNpbWlsYXIgdG8gdGhhdCBvZiBUaGUgUmVja2xlc3MgTmVncm8uClNvbWV0aW1lcyB5b3VyIHByZWZlcmVuY2UgbWlnaHQgbm90IGV2ZW4gYmUgZm9yIHRoZSBtb3N0IGV4cGVuc2l2ZSBicmFuZCAgIGl0IG1pZ2h0IGJlIGEgY2hlYXBlciBicmFuZCB0aGF0IHlvdSBqdXN0IHBlcnNvbmFsbHkgcHJlZmVyIHRoZSBmbGF2b3Igb2YgYW5kIGl0IHRvdGFsbHkgZmluZSB0byB1c2UgdGhvc2UuSWYgeW91IHdhbnQgYW5vdGhlciByZWNpcGUgdG8gdHJ5IHRoaXMgaXMgbXkgZ28gdG8gYW5kIGhhcyBnb3R0ZW4gdGhlIGJlc3QgcmV2aWV3cyBmcm9tIGZhbWlseS9jb3dvcmtlcnMgYXMgd2VsbC4gClN0cmFuZ2VseUJyb3duIHUKV2hhdCBpdCBhbW91bnRlZCB0byB3YXMgeW91IGJyZWFrIHlvdXIgc2hvdWxkZXIgYSBmZXcgdGltZXMgZHVyaW5nIHRoZSBkYXkgZm9yZ2V0dGluZyB0aGF0IHlvdSBjYW4ganVzdCBzdGFuZCB1cCBmcm9tIGEgY2hhaXIgbGlrZSBhIG5vcm1hbCBwZXJzb24sIGFuZCB5b3Ugc21hc2ggeW91ciBoZWFkIGludG8gdGhlIGNlaWxpbmcgaWYgc29tZXRoaW5nIGV2ZXJ5IHdva2UgeW91IHdpdGggYSBzdGFydCBkdXJpbmcgdGhlIG5pZ2h0KS4uIApSb21hbnRpYyBSZWNyZWF0aW9uV2lsZCBEdW5lcyBSZXNvcnQgb2ZmZXJzIGEgYmV2eSBvZiB5ZWFyIHJvdW5kIGFkdmVudHVyZXMgdGhhdCB0YWtlIGFkdmFudGFnZSBvZiBpdHMgc2VyZW5lIG9jZWFuZnJvbnQgbG9jYXRpb24uIEZvciBhIHBlZWsgYXQgdGhlIGxvY2FsIG1hcmluZSBsaWZlLCBlbWJhcmsgb24gdGhlIERvbHBoaW4gRGlzY292ZXJ5IFN1bnNldCBDcnVpc2UgYWxvbmcgdGhlIHNhbHQgbWFyc2hlcywgd2hlcmUgeW91J2xsIHNlYXJjaCBmb3IgYm90dGxlbm9zZSBkb2xwaGlucyBhbmQgbG9nZ2VyaGVhZCBzZWEgdHVydGxlcy4gClNlZW1zIGxpa2UgeW91IGdhdmUgaGltIHNldmVyYWwgY2hhbmNlcyB0byBtYWtlIGl0IHJpZ2h0LiBJJ20gYSBmYWlybHkgY29uc2VydmF0aXZlLCBDYXRob2xpYyAoYWx0aG91Z2ggSSBkb24ndCBnbyB0byBtYXNzLCBJIGJlbGlldmUgaW4gR29kIGNvbXBsZXRlbHkpICBidXQgSSdtIGdheSBBRiEgR29kIG1hZGUgbWUgYW5kIHlvdSB0aGUgc2FtZSB3YXkgaGUgbWFkZSBldmVyeW9uZSBlbHNlLiAKSSB3YXMgc28gZWFybHkgSSB2b2x1bnRlZXJlZCBhdCB0aGUgZG9vciB0YWtpbmcgbW9uZXkgYW5kIHNlbGxpbmcgc25hY2tzIHRocm91Z2ggaW50ZXJtaXNzaW9uLiBXZSBoYWQgdHdvIGNodXJjaCBncm91cHMgYW5kIGEgbGFyZ2UgY29udGluZ2VuY3kgZnJvbSBSb21hbmlhLiBJdCB3YXMgYSBiaWcgY3Jvd2QgYW5kIHRoZXkgc2VlbWVkIHRvIHJlYWxseSBlbmpveSB0aGUgc2hvdy4gCk9uIGhlciB0cmF5IHNoZSBpcyBjYXJyeWluZyBvbmUgZnJlc2ggZ2xhc3MgYXMgd2VsbCBhcyB0aHJlZSBzbWFsbGVyIGVtcHR5IG9uZXMuIApJIGxlYXJuZWQgc2hlIGtub3dzIGxlc3MgYWJvdXQgaGVyIHZhZ2luYSB0aGFuIEkgZG8uIEkgd2FzIGV4cGxhaW5pbmcgdGhpbmdzIGFuZCBzaGUgd2FzIGdldHRpbmcgZW1iYXJyYXNzZWQuIApUaGUgbGFyZ2UgcGFpbnRpbmcgd2FzIGFjdHVhbGx5IGEgY2FtcGFpZ24gcG9zdGVyIHVzZWQgZHVyaW5nIGEgcGFyYWRlIGRvd24gdGhlIHN0cmVldHMgb2YgR29zaGVuIGluIDE4NjAgZHVyaW5nIHRoZSBwcmVzaWRlbnRpYWwgcHJpbWFyeS4gVGhlIGFydGlzdCB3YXMgSm9zZXBoIERpbGxlLCB3aG8gbGl2ZWQgaW4gR29zaGVuLiBMZWdlbmQgaGFzIGl0IHRoYXQgRGlsbGUgbG9zdCB0aGUgcG9zdGVyIGZvciAkMzUgaW4gYSBwb2tlciBnYW1lLiAKRG8gbm90IHRoaW5rIGZvciBhIHNlY29uZCBhIEJldG8gdmljdG9yeSBpcyBuZWNlc3NhcmlseSBhIHZpY3RvcnkgZm9yIEVsIFBhc28uIFdpbm5pbmcgaW1wcm92ZXMgdGhlIGZvcnR1bmVzIG9mIGFub3RoZXIgcmljaCB3aGl0ZSBsaWJlcmFsIGd1eSAgIGZyaWVuZCBvZiBTaGFwbGVpZ2ggICBBdXN0aW4gTWF5b3IgU3RldmUgQWRsZXIuIFRoZXJlIGlzIGEgcmVhc29uIHdoeSB5b3UgZG8gbm90IHNlZSBCZXRvIGhlbHBpbmcgb3RoZXIgRGVtb2NyYXRzIG9uIHRoZSB0aWNrZXQuLiAKTm90IHNwZWNpZmljYWxseSBiZWNhdXNlIHRoZSBkb25vcnMgd2VyZSBnYXkgb3IgdHJhbnMsIGJ1dCBiZWNhdXNlIG9mIHJpc2sgZmFjdG9ycyB0aGUgRkRBIGFzc29jaWF0ZWQgYXQgdGhlIHRpbWUgd2l0aCB0aG9zZSBjb21tdW5pdGllcy4gClRoaXMgd2VlaydzIGh1bWRpbmdlciB3YXMgbm8gZGlmZmVyZW50LiAKSSBoYWQgYSBiYWQgcnVuIHdpdGggY29sb3IgYmxpbmQgcGVvcGxlLiBXaGVuIEkgd2FzIGluIGNvbGxlZ2UgSSB3b3JrZWQgZm9yIHRoZSBjb21wdXRlciBzY2llbmNlIGRlcGFydG1lbnQgZG9pbmcgbmV0d29ya2luZy4gVGhleSBkZWNpZGVkIHRvIHJld2lyZSB0aGUgYnVpbGRpbmcgd2l0aCBuZXdlciwgYmV0dGVyIG5ldHdvcmsgY2FibGVzLiBUaGlzIHdhcyBhIGJpZyBqb2Igc28gSSBnb3QgcHV0IGluIGNoYXJnZSBhbmQgaGFkIGEgZmV3IG90aGVyIHN0dWRlbnRzIHVuZGVyIG1lLiBGaXJzdCBkYXksIEkgd2FzIGJ1c3kgcHVsbGluZyB3aXJlcyBhbmQgaGFkIG9uZSBvZiB0aGUgb3RoZXIgZ3V5cyBwdXQgdGhlIGphY2tzIG9uIHRoZSBuZXdseSBwdWxsZWQgd2lyZXMuIEhlIGRpZCBsaWtlIDUwIGphY2tzIHRoYXQgbmlnaHQuIE5leHQgZGF5IEkgZ28gYW5kIHRlc3QgdGhlbSBhbmQgbGlrZSBoYWxmIG9mIHRoZW0gYXJlIGJhZC4gV2l0aCBjb3BwZXIgZGF0YSBuZXR3b3JrcywgeW91IHVzZSBvcmFuZ2UgYW5kIGdyZWVuIGNvbG9yZWQgd2lyZXMuIEhlIHdhcyBzd2FwcGluZyB0aGVtIGFib3V0IDUwJSBvZiB0aGUgdGltZS4KTXkgdGhlb3J5IGlzIHRoYXQgaW4gb25saW5lIHBva2VyLCBhZnRlciB0aGUgcm91bmQgZW5kcywgdGhlIGNhcmRzIGFyZSBwcm9iYWJseSBub3QgcmUgc2h1ZmZsZWQgYnV0IHJhdGhlciBhIGZyZXNoIEFSUkFZIHdpdGggdGhlIGNhcmRzIGluIG9yZGVyIGlzIHNodWZmbGVkLiBJIGdvdCBhYm91dCAkMjAwLDAwMCBpbiB0aGUgZ2FtZSBhbmQgaGF2ZW4gc3BlbnQgYSBkaW1lIG9mIG15IHJlYWwgbW9uZXkuIEkgYWN0dWFsbHkgZG9uIGtub3cgaG93IHRoZXkgbWFrZSBtb25leSBvbiB0aGUgZ2FtZSBiZWNhdXNlIGl0IGlzIGZyZWUgdG8gcGxheSBhbmQgdGhlcmUgaXMgbm8gcmVhbCBpbmNlbnRpdmUgdG8gYWN0dWFsbHkgc3BlbmQgYW55IG1vbmV5IGluIHRoZSBnYW1lIGZyb20gd2hhdCBJIGhhdmUgc2Vlbi4gSSBtYWlubHkgcGxheSB0aGUgZ2FtZSBvbiBteSBHby4gSSB0cmllZCB0aGUgUmlmdCB2ZXJzaW9uIGJ1dCB0aGUgb3RoZXIgcGxheWVycyBpbiBnYW1lIGhhZCBleHRyZW1lbHkgamVya3kgYW5pbWF0aW9ucy4KTGUgMTBlIGVzdCB1biBkZXMgYXJyb25kaXNzZW1lbnRzIGxlcyBwbHVzIGRlbnNlcyBkZSBsYSBjYXBpdGFsZSBhdmVjIDkzIDAwMCBoYWJpdGFudHMgZG9udCB1bmUgcG9wdWxhdGlvbiBqZXVuZSBpbXBvcnRhbnRlIDogMjMsOSUgcG91ciBsZXMgMTUgMjkgZXQgMjcsNiUgcG91ciBsZXMgMzAgNDQgYW5zLiBEZXV4IGdhcmVzLCB0cm9pcyBocGl0YXV4IGV0IGRlIG5vbWJyZXV4IGNvbW1lcmNlcyAocHJlc3F1ZSBsZSBkb3VibGUgZGUgbGEgbW95ZW5uZSBwYXJpc2llbm5lKSwgb24gY29tcHJlbmQgYXVzc2kgcXVlIGxlcyB1c2FnZXJzIGRlIHRvdXRlIHNvcnRlIHkgdmllbm5lbnQgbm9tYnJldXguIFNhbnMgb3VibGllciBsJ291dmVydHVyZSByY2VudGUgZGUgbGEgc2FsbGUgZGUgY29uc29tbWF0aW9uICBtb2luZHJlIHJpc3F1ZSAoU0NNUikuLiAKSSBrbm93IHRoYXQgaXQgbXVjaCBiZXR0ZXIgdG8gd2FsayBpdCBvZmYgdGhhbiB0byBzaXQsIGJ1dCBJIHBoeXNpY2FsbHkgY291bGQgbm90IHN0YW5kICh0aGlzIGhhcyBuZXZlciBoYXBwZW5lZCBiZWZvcmUpLiAKTGluZGVuYmVyZywgNjcsIGhhcyBmbG93biBhYm91dCA2MCB0byA3MCBmbGlnaHRzIGluIGhpcyBzaXggc2VhdCBDZXNzbmEgMjEwLiAKTm8sIEknbSBkaXNwdXRpbmcgdGhlIGZhY3QgdGhhdCB5b3Ugc2FpZCBpdCdzIGxpdGVyYWxseSBpbXBvc3NpYmxlIGFuZCBubyB3YXkgc2VjcmV0IHNlcnZpY2Ugd2lsbCBsZXQgcyBmb3JtZXIgcHJlc2lkZW50IGdvIGFueXdoZXJlIGFsb25lLiBUaGF0IGlzIGRpc3B1dGVkIGJ5IHRoZSBmYWN0IHRoYXQgYSBmb3JtZXIgcHJlc2lkZW50IGRpZCwgaW4gZmFjdCwgdGVsbCB0aGUgc2VjcmV0IHNlcnZpY2Ugbm90IHRvIHByb3RlY3QgaGltLiBObyByZWFzb24gdG8gYmUgcnVkZSBiZWNhdXNlIHlvdSBnb3QgY2F1Z2h0IG1ha2luZyBzaGl0IHVwIG9uIHRoZSBpbnRlcm5ldC4gClRoZSBiZWhhdmlvcnMgYXJlIGlkZW50aWNhbCwgdGhlIGxpZXMgYXJlIGV4YWN0bHkgdGhlIHNhbWUsIHRoZSBuYW1lcyBhcmUgc2ltaWxhciwgYW5kIHRoZXkgYm90aCBjZW50ZXJlZCBhcm91bmQgdGhlIHNhbWUgcG9zdC4gU2VlbXMgYSBsaXR0bGUgdG9vIGNvaW5jaWRlbnRhbC4KVGhpcyBndXkgbm90IG9ubHkgY29tbWl0dGVkIGEgdmlvbGF0aW5nIGFjdCwgaGUgYWxzbyBpbnNlcnRlZCBlbmVyZ3kgY29yZHMgdGhhdCBoYXZlIHJlbWFpbmVkIHVwIHRvIGFkdWx0aG9vZC4gSSdtIHZlcnkgcmVsaWV2ZWQgYW5kIGhlYXJ0ZW5lZCB0byBzZWUgeW91IGRlY2xhcmUgc292ZXJlaWdudHkgYW5kIHB1bGwgYmFjayB0byB5b3VyIGVuZXJneSBmaWVsZCB3aGF0IHRoaXMgY3JlZXAgY2FyZWxlc3NseSBhbmQgdGhvdWdodGxlc3NseSB0b29rIGZyb20geW91LiBZb3UgYXJlIHNvb29vbyBzdHJvbmcgYW5kIHN1Y2ggYSBmaWVyY2UgYWR2b2NhdGUgZm9yIGxpZ2h0LiBZb3VyIHBhaW5mdWwgeWV0IGJlYXV0aWZ1bCBoZWFsaW5nIHByb2Nlc3MgaXMgZ29pbmcgdG8gc2VydmUgYXMgYW4gaW5jcmVkaWJsZSB0ZW1wbGF0ZSBmb3Igb3RoZXIgdmlvbGF0ZWQgc291bHMgdG8gZW11bGF0ZS4KSW4gUG8gS2UgTm8gaG93ZXZlciwgdGhpcyBpcyBub3QgdGhlIGNhc2UuIEluIFBvIEtlIE5vIGluc3RlYWQgb2YgYSByYW5kb20gbnVtYmVyIGJlaW5nIGRyYXduLCBhIHBlcnNvbiwga25vd24gYXMgYSBkZWFsZXIsIGVtcGxveXMgdXNlIG9mIGEgc3RhbmRhcmQgZGVjayBvZiA1MiBjYXJkcywgam9rZXJzIG5vdCBpbmNsdWRlZC4gCkEgZmluYWwgRkJJIHJlcG9ydCwgaW5jbHVkaW5nIGEgYmVoYXZpb3JhbCBhbmFseXNpcyBvZiBQYWRkb2NrLCBpcyBleHBlY3RlZCBieSB5ZWFyIGVuZC4KSSBmaW5kIHRoZSBhcmd1bWVudCB0aGF0IHNoZSBjcmVhdGVkIGFuICJ1bnNhZmUiIGVudmlyb25tZW50IGJ5IHNoYXJpbmcgdGhlIHZpZGVvcyBpbnRlcm5hbGx5IHRvIGJlIGhvcnNlc2hpdCBhbmQgZmVlbCBsaWtlIGlmIHRoYXQgbWFrZXMgeW91IGZlZWwgdW5zYWZlIHRoZW4geW91IG5lZWQgdG8gdG91Z2hlbiB1cCBhIGxpdHRsZSBub3QgdHJlYXQgdGhpcyBjcmF6eSBsYWR5IGFuZCBoZXIgZHVtYiBwb2xpdGljYWwgdmlld3MgYXMgdGhpcyBtb25zdGVyIHdobyBtdXN0IGJlIHN0b3BwZWQuLiAKSXQgd2FzIHJlcG9ydGVkIGluIFNlcHRlbWJlciB0aGF0IEt5bGllIGlzIGV4cGVjdGluZyBoZXIgZmlyc3QgY2hpbGQgd2l0aCBUcmF2aXMgU2NvdHQuIApNeSBzdHJhdGVneSBoYXMgYmVlbiB0byBiZXQgYmlnIHByZWZsb3Agd2l0aCBwcmVtaXVtIGhhbmRzIGFuZCB0cnkgdG8gZ2V0IGluIGNoZWFwbHkgd2l0aCBzdWl0ZWQgY29ubmVjdG9ycyBhbmQgbWVkaXVtIHBvY2tldCBwYWlycy4gSSBoYXZlIGNvbnNpc3RlbnRseSByYWlzZWQgdG8gMTUgZG9sbGFycyBwcmVmbG9wIHdpdGggQWNlcyBhbmQgZ290dGVuIGF0IGxlYXN0IG9uZSBjYWxsZXIgc29tZXRpbWVzIDIuIElmIHRoZXkgbWFrZSB0b3AgcGFpciB0aGV5IHVzdWFsbHkgd29uIGxheSBkb3duIHRoZWlyIGhhbmQgdG8gY29udGludWVkIGFnZ3Jlc3Npb24gYXMgd2VsbC4gCk5lZ2F0aXZlIFJldmlzaW9uc01lbWJlcnMgb2YgdGhlIGJ1c2luZXNzIGN5Y2xlIHBhbmVsIHdobyBzYXcgYSByZWNlc3Npb24gd2VyZSBzd2F5ZWQgYnkgdGhlIHNpemUgb2YgdGhlIG5lZ2F0aXZlIHJldmlzaW9ucywgS3JvbmljayBzYWlkLiBTdGF0aXN0aWNzIENhbmFkYSBjaGFuZ2VkIHRoZSBjb250cmFjdGlvbiBpbiB0aGUgZmlyc3QgcXVhcnRlciBvZiAyMDE1IHRvIGFuIGFubnVhbGl6ZWQgcGFjZSBvZiAyLjIgcGVyIGNlbnQgZnJvbSAwLjggcGVyIGNlbnQsIGFuZCB0aGUgc2Vjb25kIHF1YXJ0ZXIgdG8gYSAxLjEgcGVyIGNlbnQgZGVjbGluZSBmcm9tIDAuMyBwZXIgY2VudC4uIApXZSBsaXZlZCBpbiBTb3V0aGVybiBDYWxpZm9ybmlhIG5lYXIgYSBsb3Qgb2YgbWlub3JpdGllcy4gCkkgYmVsaWV2ZSB0aGF0IHRoZSBzaG93IGhhcyB2ZXJ5IGNvbnNpc3RlbnQgdGhlbWVzLCB0aGF0IGNvbWUgdG9nZXRoZXIgdG8gcHJlc2VudCBhIHZlcnkgc29saWQgYW5kIHdlbGwgdGhvdWdodCBvdXQgaWRlYSwgSSBpbXBsb3JlIHlvdSB0byBmdXJ0aGVyIGNvbnNpZGVyIHRoZSBwb2ludCBvZiB0aGUgc3ltYm9saXNtLiBJIGRvbiBiZWxpZXZlIHRoYXQgIlN0YW5kaW5nIG9uIGl0IG93biB0d28gZmVldCIgbWVhbnMgYW55dGhpbmcgaW1wb3J0YW50LCBhcyBzeW1ib2xzIGFuZCBtZXRhcGhvcnMgYXJlIHRoZSBkcml2aW5nIGZvcmNlIGJlaGluZCB0aGUgc2hvdy4gV2l0aG91dCB0aGUgbWV0YXBob3JzIGFuZCBzeW1ib2xpc20gdGhlcmUgd291bGQgYmUgbm90aGluZyBsZWZ0LiAKSSdtIGp1c3QgaGFwcHkgV2F5bmUgZGlkbid0IGJsb3cgaGlzIGJyYWlucyBvdXQuIApLaWRuZXkgZGlzZWFzZSBjYW4gZXZlbnR1YWxseSByZXN1bHQgaW4ga2lkbmV5IGZhaWx1cmUsIHdoaWNoIGlzIG9mdGVuIGZhdGFsIGZvciBjYXRzLiBUaGUgb25seSBwcm9ibGVtIGlzLCB0aGUgc2lnbnMgb2YgbGl2ZXIgZGlzZWFzZSBhcmUgZWFzaWx5IG1pc3Rha2VuIGZvciBvdGhlciBjb21tb24gaWxsbmVzc2VzLiBXZSB3aWxsIGRlc2NyaWJlIHRoZSB3YXJuaW5nIHNpZ25zIG9mIGxpdmVyIGRpc2Vhc2UgYW5kIHNob3cgeW91IGhvdyB0byB0ZWxsIHRoZW0gYXBhcnQgZnJvbSBvdGhlciBkaXNvcmRlcnMuIApXaGljaCBpcyBtb3JlIGluIHRvdWNoIGFuZCB3aWxsIGJyaW5nIHRoZSBwb2xpY2llcyB0aGF0IHJlZmxlY3QgdGhlaXIgZmlyc3QgaGFuZCBleHBlcmllbmNlcyB3aXRoIHBlb25zPy4gCklzIGFsc28gZ3Jvd2luZyBmb3IgdGhlIHByb2R1Y3QgaW4gQ2FuYWRhLiAKUGFjcXVpYW8ga25vY2tlZCBkb3duIE1vc2xleSB3aXRoIGEgbGVmdCBob29rIGluIHRoZSB0aGlyZCByb3VuZCwgYSBwdW5jaCB0aGF0IHNhcHBlZCBNb3NsZXkncyB3aWxsaW5nbmVzcyB0byBlbmdhZ2UuIFBhY3F1aWFvIHJhbiBhZnRlciBNb3NsZXkgdGhlIHJlc3Qgb2YgdGhlIGZpZ2h0LCBidXQgdGhlIGZvcm1lciBjaGFtcGlvbiB3aG8gaGFzIG5ldmVyIGJlZW4gc3RvcHBlZCBpbiAxOCB5ZWFycyBpbiB0aGUgcmluZyBtYW5hZ2VkIHRvIHN0YXkgYXdheSBlbm91Z2ggdG8gZmluaXNoIHRoZSAxMnRoIHJvdW5kIHVwcmlnaHQuLiAKVGhlIG5lYXJlc3Qgc3RhdGlvbiBpcyBQbG9lbmNoaXQgQlRTLCBmcm9tIHdoZXJlIHlvdSB3YWxrIGFib3V0IDUgbWludXRlcyB0byBTdWtodW12aXQgU29pIDIuIApEdWRlLiBJIGhhdmUgYSByZWFsbHkgZ29vZCBmcmllbmQgd2hvIGhhcyBCZWVuIG9uIGRpYWx5c2lzIGZvciAyMSB5ZWFycy4gCkV2ZW4gaWYgdGhleSB1bm1pbmRmdWxseSBiZW5kZWQgdGhlaXIgY2FyZHMsIGl0IHdvdWxkIGhhdmUgYmVlbiBkYW1hZ2VkLiBUaGlzIHdhcyBhIHBhdGhldGljIHRoaW5nIGZvciB0aGUgcmVub3duZWQgcG9rZXIgcGxheWVycy4gCkkgd2FzIGV4cGVyaW1lbnRpbmcgdXNpbmcgYSBmbG9wIG92ZXJiZXQgc3RyYXRlZ3kgZm9yIElQIGFzIHdlbGwgYnV0IGxvb2tlZCBsaWtlIDc1JSBoYWQgYSBoaWdoZXIgRVYuIEFBIHdhcyB0aGUgb25seSBvdmVycGFpciB0aGF0IGNoZWNrZWQgYmFjayBhdCBzb21lIGZyZXEgYW5kIEkgdGhpbmsgaXQgd2FzIDEwJSBvciBzby4gCllvdSd2ZSBqdXN0IGNpdGVkIGFub3RoZXIgdGhpbmcgdGhhdCBoYXMgYmVjb21lIG1vcmUgbXl0aCB0aGFuIGZhY3Q6IFdoZW4gdGhvc2UgZWRpdHMgdGhhdCB5b3UgbWVudGlvbmVkIHdlcmUgbWFkZSwgdGhleSB3ZXJlIGRvbmUgd2l0aCB0aGUgaW50ZW50aW9uIG9mIGJlaW5nIHZlcnkgb2J2aW91cy4gYW5kIG9ubHkgb24gY29tbWVudHMgc3B1cmlvdXNseSBhY2N1c2luZyBTdGV2ZSBvZiBiZWluZyBhIGNoaWxkIG1vbGVzdGVyLiBUaGUgc3RhdGVkIGludGVudGlvbiB3YXMgdG8gaGlnaGxpZ2h0IHRoZSBpbmhlcmVudCBhYnN1cmRpdHkgb2YgdGhlIGF0dGFja3MsIGFuZCBhbHNvIHRvIG9wZW4gYSBkaWFsb2d1ZS4gTmVlZGxlc3MgdG8gc2F5LCB0aGF0IGJhY2tmaXJlZCBzcGVjdGFjdWxhcmx5LgpIb3cgZG8geW91IHBsYXkgTGFkYnJva2VzIFBva2VyCllvdXIgaWRlYSBvZiBidXlpbmcgYSBTRkggdG8gbGl2ZSBpbiBhbmQgZml4IHVwIGlzIGEgZ29vZCBpZGVhLiAKV2UgYmVlbiB0aHJvdWdoIHRoaXMga2luZCBvZiB0aGluZyBiZWZvcmUuIApOb3csIGV2ZXJ5IHBva2VyIGhhbmQgc3RhcnRzIHdpdGggYSBmb3JjZWQgYmV0LCB3aGljaCBpcyB0aGUgaW5pdGlhbCB3YWdlciB0aGF0IGlzIHBsYWNlZCBpbiBvcmRlciB0byBoYXZlIGFjdGlvbiBvbiB0aGUgdGFibGUsIG90aGVyd2lzZSBhIHBsYXllciB3b3VsZCBoYXZlIHRoZSBvcHRpb24gb2YgZm9sZGluZyB1bnRpbCBoZSBoYXMgdGhlIGhhbmQgdGhhdCBzdWl0cyBoaW0gdGhlIG1vc3QuIEluIFRleGFzIEhvbGQgSG9sZCBFbScgYW5kIE9tYWhhLCB0aGlzIGlzIGtub3duIGFzIGEgYmxpbmQsIGFuZCB0aGVyZSBpcyBhIGJpZyBhbmQgc21hbGwgYmxpbmQgKGFwcHJveGltYXRlbHkgaGFsZiBvZiB0aGUgYmlnIGJsaW5kKS4KSSdkIGFsc28gcHV0IENyYXNoaW5nIG9uIHRoZSBsaXN0LiAKQ2hpbmEgcGxhbnMgdG8gbGVuZCBtb3JlIHRoYW4gJDF0biBmb3IgaW5mcmFzdHJ1Y3R1cmUgcHJvamVjdHMgb3ZlciB0aGUgbmV4dCBkZWNhZGUsIHdoaWxlIHRoZSBVUyBpcyBjdXR0aW5nIGJhY2sgYWlkIHByb2dyYW1tZXMgYW5kIGl0cyBjb250cmlidXRpb25zIHRvIHRoZSBXb3JsZCBCYW5rLiAKUG9kZSBzZXIgdW0gc2luYWwgZGUgdW0gbWFyaWRvIHRyYWlkb3Igc2UgZWxlIHByb3RlZ2UgbyBzZXUgY2VsdWxhciBjb20gdW1hIHNlbmhhLCBpbmVzcGVyYWRhbWVudGUgcGVkaXIgcGFyYSBlbXByZXN0YXIgc2V1IGNlbHVsYXIgcGFyYSBmYXplciB1bWEgY2hhbWFkYSBpbXBvcnRhbnRlLiAKQW5vdGhlciB0aGluZyB0aGF0IGhhcyBiZWNvbWUgZXh0cmVtZWx5IHBvcHVsYXIgaW4gdGhlc2UgeWVhcnMgaXMgb25saW5lIHBva2VyIGdhbWVzLiBTb21lIHBsYXllcnMgYXJlIHBsYXlpbmcgZ2FtZXMgc2l0dGluZyBpbiBmcm9udCBvZiB0aGUgY29tcHV0ZXIgYW5kIG1ha2luZyB0aGVpciBsaXZlbGlob29kLiBUaGVpciBzdWNjZXNzIHN0b3JpZXMgaGF2ZSBjaGFuZ2VkIHRoZSBtaW5kc2V0cyBvZiBtYW55IHBva2VyIGxvdmVycyBvdXQgdGhlcmUgYW5kIHRoZXkgaGF2ZSBiZWNvbWUgaW50ZXJlc3RlZCBhYm91dCB0aGlzIGdhbWUgcGVyc29uYWxseS4gVGhpcyBoYXMgaW5jcmVhc2VkIHRoZSBzYWxlcyBvZiBwcm9kdWN0cyBsaWtlIFRoZSBOdXR6IEZhY2VzIFBva2VyIENhcmQgUHJvdGVjdG9yLiBBY2NvcmRpbmcgdG8gdGhlIGJ1c2luZXNzIGVudHJlcHJlbmV1cnMsIHRoZXNlIHByb2R1Y3RzIGFyZSBzZWxsaW5nIGxpa2UgaG90Y2FrZXMuIElmIHlvdSB3YW50IHRvIGtlZXAgeW91ciBjYXJkcyBzYWZlIGZvcmV2ZXIsIHlvdSB3aWxsIGRlZmluaXRlbHkgbmVlZCBvbmUgb2YgdGhlc2UgY2FyZCBwaWVjZXMuCldoeSB0aGUgZ2FtZSBpcyBzbyBwb3B1bGFyIGJlY2F1c2UgZXZlcnlib2R5IGdlbnVpbmVseSBoYXMgYSBjaGFuY2UuIApUaGlzIHBsYXllciBtYXkgcHV0IGRvd24gYW55IG51bWJlciBvZiBjYXJkcyBvZiB0aGUgc2FtZSB2YWx1ZS4gCkkgd2FzIG9mZiB0byBjb2xsZWdlLCBhbmQgSSBjb3VsZCBlaXRoZXIga2VlcCBoYXZpbmcgdGhlIGZ1biBJIHdhcyBoYXZpbmcsIG9yIEkgY291bGQgZ28gc2V0IGEgcmVjb3JkLiAKUG9rZXIgbmVlZHMgaXMgbmV3IHN0b3J5dGVsbGluZywgaGUgc2F5cy4gCk9uIHRoaXMgd2VlaydzIGFsbCBuZXcgVGhlIFJveWFscywgSGVsZW5hIGdvZXMgb24gYSBjb3ZlcnQgbWlzc2lvbiB0byBjb252aW5jZSBwb3dlcmZ1bCBlbmVyZ3kgbWFnbmF0ZSBNYXJ0aW4gS2FuZSB0byBoZWxwIHRha2UgZG93biBLaW5nIFJvYmVydCAoTWF4IEJyb3duKS4KRGVjaWRlIGhvdyBtdWNoIG9mIHlvdXIgc3BhY2UgeW91IHdhbnQgdG8gcmVudCBvdXQgYW5kIGZvciB3aGF0IHB1cnBvc2UuIApXaGF0IGtpbmQgb2YgcGxheWVycyBhcmUgYXQgdGhlIHRhYmxlPyBJZGVudGlmeSB0aGUgYWdncmVzc2l2ZSBwbGF5ZXJzIGFuZCB0aGUgcGFzc2l2ZSBvbmVzLiAKV2F0Y2ggd2hhdCB0aGV5IGRvIHdoZW4gdGhleSByYWlzZSwgd2hlbiB0aGV5IGNhbGwsIHdoZW4gdGhleSBmb2xkLiBXYXRjaCBob3cgdGhleSByZWFjdCBvbiBkaWZmZXJlbnQgZmxvcHMuIApJZiB5b3UgZ2V0IHRvIHRoZSBHUlVCIHNjcmVlbiwgeW91IHBhc3NlZCB0aGUgcG9pbnQgd2hlcmUgdGhlIGJvb3RhYmxlIGZsYXNoIGRyaXZlIHdpbGwgdGFrZSBvdmVyLiAKSGUgYWRvcHRzIGEgc3VsbGVuIGxvb2ssIHJhcmVseSBzbWlsaW5nLCBidXQgYWx3YXlzIGJlIGNhcmVmdWwgd2hhdCB5b3Ugd2lzaCBmb3IsIHdoZW4gaGUgZG9lcyBsb29rIGF0IGhpcyBvcHBvbmVudHMgd2l0aCB0aGF0IGZhbW91cyBQaGlsIEl2ZXkgc3RhcmUgZG93biBpdCdzIGVub3VnaCB0byBtYWtlIHRoZWlyIHRvZXMgY3VybC4gIkZPTEQiIGlzIHVzdWFsbHkgdGhlIHJlc3VsdC4gQ291cnRlZCBjb250cm92ZXJzeSB3aXRoIGhpcyBzaXRlIHNwb25zb3Igb2YgbWFueSB5ZWFycywgZXZlbnR1YWxseSBzdWluZyB0aGVtIGZvciBubyBsZXNzIHRoYW4gJDE1MCBtaWxsaW9uLCB0aG91Z2ggaGUgZXZlbnR1YWxseSB3aXRoZHJldyB0aGUgc3VpdC4uIApQb2tlciBpbiBnZW5lcmFsIGhhcyBiZW5lZml0ZWQgaW4gcmVjZW50IHllYXJzIHRoYW5rcyB0byB0aGUgbWFqb3IgVFYgZXhwb3N1cmUgZ2l2ZW4gdG8gVGV4YXMgSG9sZGVtIHRvdXJuYW1lbnRzLCBvbmxpbmUgcG9rZXIgYnJhbmRzIGJ1eWluZyBwdWJsaWNpdHkgaW4gbWFqb3Igc3BvcnRzIFRWIGNoYW5uZWxzIGFuZCB0b3VybmFtZW50cywgYW5kIHRoZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIsIG5vdCB0byBtZW50aW9uLCBtYWpvciB0b3VybmFtZW50IHByaXplcyBub3cgcHVibGljaXplZC4gVGhhbmtzIHRvIHRoZXNlIGltcG9ydGFudCBwb2ludHMsIG1pbGxpb25zIG9mIGNvbnN1bWVycyBhbGwgb3ZlciB0aGUgd29ybGQgaGF2ZSB0YWtlbiBwb2tlciBhcyB0aGVpciBtYWluIGhvYmJ5LiBOb3Qgb25seSBwb2tlcjsgYnV0IG9ubGluZSBwb2tlciBpbiBnZW5lcmFsLiAKSSBjb3VsZCBsb3NlIG15IGNoaWxkLCBqb2IsIGhvdXNlIG9yIGV2ZW4gbXkgb3duIGxpZmUuIEl0IHByb2JhYmx5IHNlZW1zIHNvIGhhcmQsIGVzcGVjaWFsbHkgbG9va2luZyBiYWNrIG5vdyBhbmQgYmVpbmcgbGlrZSwgb2ggZnVjay4gCkhpcyBwZXJzb25hbGl0eSBpcyB0b3RhbGx5IG9wcG9zaXRlIGZyb20gdGhlIG90aGVyIG1hbiB3aG8gaXMgYnVzeSBpbiB3b3JsZGx5IGFjY29tcGxpc2htZW50cy4gSGUgc2VlbSB0byBiZSBodW1ibGUgZG93biB0byBlYXJ0aC4gSGUgcmVwcmVzZW50cyBhbGwgdGhvc2Ugd2hvc2UgcmVsaWdpb24gaXMgaHVtYW5pdHkuIFdobyB0cnVzdGVkIHRoYXQgdGhlaXIgZ29vZCB3b3JrcyB3aWxsIGxlYWQgdGhlbSB0byBHb2QgQWxtaWdodHkgdGhleSBzYXZlZCBubyBtYXR0ZXIgd2hhdC4gVGhlaXIgY29uZmlkZW5jZSBpcyBub3QgaW4gR09EIEFMTUlHSFRZLCBidXQgd29ya3Mgb2YgdGhlaXIgb3duIGhhbmRzOiB0aGF0IHdpbGwgYWx3YXlzIGZhaWw7IGJlY2F1c2UgdGhlcmUgaXMgbm8gc291bCBvbiBlYXJ0aCB3aG8gaGFzIG5vdCBsaWVkIG9uY2UuClRoZSBJbnRyYW11cmFsIFNwb3J0cyBQcm9ncmFtIGVtcGxveWVlcyBtb3JlIHRoYW4gMTAwIHN0dWRlbnQgZW1wbG95ZWVzIGVhY2ggeWVhciBpbiBwb3NpdGlvbnMgc3VjaCBhcyBvZmZpY2lhbHMsIGdlbmVyYWwgbWFuYWdlcnMsIHN1cGVydmlzb3IsIGFuZCBjb29yZGluYXRvcnMuIEEgYnJpZWYgZGVzY3JpcHRpb24gb2YgdGhlIG1vcmUgY29tbW9uIGZhY2lsaXRpZXMgdGhhdCB3ZSB1c2UgaXMgbGlzdGVkIGJlbG93LgpDYXQgSHVsYmVydCBzdGFydGVkIGdhbWJsaW5nIGZvciBhIGxpdmluZyA0MCB5ZWFycyBhZ28uIEEgYmxhY2tqYWNrIHBsYXllciBpbiBoZXIgMjBzLCBzaGUgYmVjYW1lIHNvIHNraWxsZWQgYXQgd2lubmluZyBtb25leSBmcm9tIGNhc2lub3MsIHNoZSB3YXMgc29vbiB2ZXJ5IHVucG9wdWxhciB3aXRoIHRoZW0gYWxsIGFyb3VuZCB0aGUgVVMhIENhdCB0b29rIHVwIHBva2VyIGluIHRoZSAxOTgwcyBhbmQgd2FzIG9uZSBvZiB0aGUgZmlyc3Qgd29tZW4gdG8gYnJlYWsgaW50byB0aGUgcmFua3Mgb2YgcHJvZmVzc2lvbmFsIGNhcmQgcGxheWVycy4gVGhlIEdhbWUgU2hvdyBOZXR3b3JrIGNhbGxlZCBoZXIgInRoZSBiZXN0IGZlbWFsZSBnYW1ibGVyIG9uIGVhcnRoLiIgTm93IHJldGlyZWQsIENhdCBzYXlzIHNoZSBpcyBub3Qgc3VyZSB0aGF0IHNoZSB3b3VsZCBsZWdhbGlzZSBnYW1ibGluZyBpbiBhIHN0YXRlIHRoYXQgZGlkIG5vdCBoYXZlIGl0ICAgYXMgaXQgY2FuIHJ1aW4gc28gbWFueSBsaXZlcy4KRWRpdDogQWxzbywgdGhlcmUgaXMga25vdyB3YXkgb2YgdGVsbGluZyBpZiB0aGVyZSBhcmUgZGFuZ2Vyb3VzIGNvbnRhbWluYXRlcyBpbiB0aGUgd2F0ZXIgZnJvbSBhIHBob3RvLiBZb3Ugd2lsbCBuZWVkIHRvIGhhdmUgdGhlIHdhdGVyIHNhbXBsZWQgYW5kIHRlc3RlZCBieSBhIGxhYi4gCkluIGNvdXJ0IGZpbGluZ3MgYW5kIGluIHB1YmxpYyBzdGF0ZW1lbnRzLCBNYXNzYWdlIEVudnkgc2FpZCBpdCBpcyBub3QgbGlhYmxlIGZvciBzZXh1YWwgYXNzYXVsdHMgdGhhdCB0YWtlIHBsYWNlIGF0IHRoZSBzcGFzIGJlY2F1c2Ugb2YgdGhlIG5hdHVyZSBvZiB0aGUgZnJhbmNoaXNlIGFycmFuZ2VtZW50LCBCdXp6RmVlZCBuZXdzIHJlcG9ydGVkLiBTcGFzIGNvbnRyb2wgdGhlaXIgb3duIGRheSB0byBkYXkgb3BlcmF0aW9ucywgSGFuc2VuIHNhaWQsIGluY2x1ZGluZyBmaWd1cmluZyBvdXQgaG93IGJlc3QgdG8gaW52ZXN0aWdhdGUgaW5hcHByb3ByaWF0ZSBjb25kdWN0LgpNYXliZSB0aGUgb2NjYXNpb25hbCBzbWlsZS4gClRha2UgeW91cnNlbGYgb3V0IHRvIGVuam95IGxpZmUgYWdhaW4uLiAKUmVnYXJkbGVzcyBvZiBob3cgb2Z0ZW4geW91IHBsYXkgcG9rZXIsIGl0IGlzIGltcG9ydGFudCB0byBjb25zaWRlciBzb21lIG9mIHRoZSByZWFzb25zIHdoeSB5b3UgbWlnaHQgd2FudCB0byBwdXJjaGFzZSBtb3JlIHRoYW4gb25lIGRlY2suIEluIGZhY3QsIGV2ZW4gaWYgeW91IG5ldmVyIHBsYXllZCBwb2tlciBpbiB5b3VyIGxpZmUsIHlvdSBtYXkgZmluZCB0aGVzZSBjYXJkcyB1c2VmdWwgZm9yIG9uZSBwdXJwb3NlIG9yIGFub3RoZXIuIFdoZXJlIHBva2VyIHBsYXllcnMgbWF5IHNlZSBhIGx1Y2t5IGRlY2ssIG9yIGFuIGludGVyZXN0aW5nIGRlc2lnbiwgeW91IG1pZ2h0IHNlZSBhbiBvcHBvcnR1bml0eSB0byBidWlsZCBhIGNhcmRib2FyZCBob3VzZS4uIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbkEgTEVBRElORyBCb3JkZXIgc3RvY2sgYW5kIHN0YXRpb24gYWdlbnQgInRlZXRlcmVkIG9uIHRoZSBicmluayBvZiBpbnNvbHZlbmN5IiBhZnRlciBvbmUgb2YgaXRzIGVtcGxveWVlcyBzdG9sZSBhbG1vc3QgJDNtaWxsaW9uIHRvIGZ1bmQgaGlzIGdhbWJsaW5nIGFkZGljdGlvbiwgYSBqdWRnZSBzYWlkIHllc3RlcmRheS4gRm9ybWVyIEJvb3JoYW1hbiBOb3J0aCBtYW4gSnVzdGluIFBldGVyIE5pY2hvbGFzIHdhcyBqYWlsZWQgZm9yIGZpdmUgeWVhcnMgYXQgTWVsYm91cm5lIENvdW50eSBDb3VydCBvbiBmaXZlIGNvdW50cyBvZiB0aGVmdCBmcm9tIGhpcyB0aGVuIGVtcGxveWVyLCBDb3Jjb3JhbiBQYXJrZXIuIApMaWtlIEFwcGxlIHByZXZpb3VzIGlQYWRzLCB0aGUgUHJvIG1vZGVsIGlzIHN1cGVyIHRoaW4sIGxpZ2h0LCBhbmQgZWxlZ2FudCBsb29raW5nLiBJdCBpbXByZXNzaXZlIHRoYXQgQXBwbGUgbWFuYWdlZCB0byBrZWVwIGl0IHNvIGxpZ2h0IHdoaWxlIGV4cGFuZGluZyBpdHMgc2l6ZSBzbyBkcmFzdGljYWxseS4KVGhlIGluc2lkZSBvZiB0aGUgc3RvcmUgd2FzIGJyaWdodCB0byBoaXMgZXllcyBhcyBMZW5ueSBUaW1tb25zIGVudGVyZWQuIApUaGUgb25seSBwZW9wbGUgSSBlbmNvdW50ZXJlZCB3aG8gaGF2ZSAia25vd24iIHJpZ2h0IGF3YXksIGVuZGVkIHVwIG1hcnJpZWQgaW4gdW5kZXIgYSB5ZWFyIGFuZCB0aGVuIGRpdm9yY2VkIGluIHRoZSBuZXh0IGZldyBtb250aHMgYmVjYXVzZSBvaCB3b3csIHlvdSBuZXZlciBnYXZlIHlvdXIgcmVsYXRpb25zaGlwIHRoZSB0aW1lIHRvIG1vdmUgcGFzdCB0aGUgaG9uZXltb29uIHBoYXNlIHRvIHJlYWxseSBsZWFybiBpZiB5b3Ugd291bGQgZW5qb3kgc3BlbmRpbmcgZm9yZXZlciB3aXRoIHNhaWQgcGVyc29uLiBJZiBDYXNzaWUgZG9lc24gZXZlbiBrbm93IHdoYXQgc2hlIGxvb2tpbmcgZm9yIGluIGEgcGFydG5lciB5ZXQsIGhvdyBzaG91bGQgc2hlIEtOT1cgd2hlbiBzb21lb25lIGlzIHRoZSBvbmU/IEkgdGhpbmsgaGVyIGRhZCB3YXMganVzdCB0aHJvd2luZyBldmVyeXRoaW5nIGhlIGhhZCBhdCBoZXIgdG8gdHJ5IHRvIGdldCBoZXIgdG8gbGVhdmUgdGhlIHNob3cgYW5kIHRoYXQgbWVhbnQgcmVhbGx5IGdvaW5nIGFmdGVyIGhlciBkb3VidHMuamdzamdzNSAgNjYgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kga25vdyBpdCBzdHVwaWQgdG8gZGlzYWdyZWUgd2l0aCBhbiBleHBlcnQgaW4gaGlzIGZpZWxkLCBidXQgdGhlcmUgYSBiaWcgZGlmZmVyZW5jZSBiZXR3ZWVuIHJ1bm5pbmcgdXAgYSBzb2xpZCBicmljayB3YWxsIGFuZCBob3BwaW5nIG92ZXIgYSBnYXRlLiBUaGVyZSBubyBwb2ludCBpbiB1c2luZyB5b3VyIGxlZ3MgdG8gcHVzaC9ydW4gdXAgYSBnYXRlIHRoYXQgYmFyZWx5IHRhbGxlciB0aGFuIHlvdSBhcmUuIApNb3N0IGVsaXRlIGJ1aWxkaW5ncyBpcyBzaW5raW5nCkknbSBzbyBzb3JyeSBmb3IgeW91ciBsb3NzLiAKRW5vdWdoIHdlIGtub3cgYWJvdXQgaXQgbm93IGp1c3QgcGxheS4uIApUaGUgZ2FtZSBpcyBhIGJhbGFuY2Ugb2YgbWFjcm8gYW5kIG1pY3JvIGNvbnRyb2wgc2NoZW1lcy4gWW91IG1ha2UgdW5pdHMsIHNlbmQgdGhlbSB0byB0aGUgZnJvbnQsIGFuZCBkZWNpZGUgeW91ciBhcm15IGNvbXBvc2l0aW9uIGluIHJlc3BvbnNlIHRvIHlvdXIgZW5lbWllcywgc2luY2UgY2VydGFpbiB1bml0cyBhcmUgZXNwZWNpYWxseSBhZGVwdCBhdCBmaWdodGluZyBjZXJ0YWluIG90aGVyIHVuaXRzLiBNZWFud2hpbGUsIHlvdSB1cGdyYWRlIHlvdXIgZm9yY2VzIHNlbGVjdGl2ZWx5LCBzaW5jZSB0aGF0IGlzIGEgY29zdGx5IHJlc291cmNlIGV4cGVuZGl0dXJlLCBhbmQgcmVhY3QgdG8geW91ciBlbmVteSBwcm9iaW5nIHlvdXIgZGVmZW5zZXMgYW5kIGxvb2tpbmcgZm9yIGV4cGxvaXRhYmxlIHdlYWtuZXNzZXMgYW5kIGFyZWFzLgpUaGVyZSBhcmUgcGxhbmV0cyB3aXRoIHJpbmdzIHRoYXQgZ2l2ZSB5b3UgYW4gYXdlc29tZSB2aWV3LgpQb3N0aW5nIG9yIHNlZWtpbmcgYW55IGlkZW50aWZ5aW5nIHBlcnNvbmFsIGluZm9ybWF0aW9uIHdpbGwgcmVzdWx0IGluIGEgYmFuIHdpdGhvdXQgYSBwcmlvciB3YXJuaW5nLiBUaGlzIGluY2x1ZGVzIHlvdXJzZWxmIGFuZCBvdGhlciBwZW9wbGUsIGFuZCByZWZlcnMgdG8sIGJ1dCBpcyBub3QgbGltaXRlZCB0bywgbmFtZXMsIHBob25lIG51bWJlcnMsIGVtYWlsIGFkZHJlc3NlcywgRmFjZUJvb2ssIG9yIG90aGVyIHNvY2lhbCBtZWRpYSBhY2NvdW50cy4gQWdhaW4sIHdlIHdpbGwgbm90IGhlc2l0YXRlIHRvIGVuZm9yY2UgdGhpcyBydWxlLiAKT24gdGhlIG9uZSBoYW5kLCBLb3JlYW5zIGFyZSByZWFsbHkgeGVub3Bob2JpYywgZXNwZWNpYWxseSBwZW9wbGUgb3ZlciAzMC4gCkF0IG9uZSBwb2ludCBpbiBteSB3ZWJjYW0gdmlldywgSSBzYXcgbXkgc2lzdGVyIGxlYXZlIHRoZSBsaXZpbmcgcm9vbSBhbmQgZ28gdXAgdGhlIHN0YWlycy4gVGhlIHRoaW5nIHRoYXQgc3RydWNrIG1lIGFzIG9kZCB3YXMgdGhhdCBJIGRpZG4gaGVhciBhbnl0aGluZy4gCllvdSBhIG1vbmtleSB0ZWxsaW5nIG1lIG15IGlkZWEgaXMgc2hpdCB3aXRob3V0IGV2ZW4gdGhlIG1lbnRhbCBjYXBhY2l0eSB0byBncmFzcCB0aGUgc2ltcGxlIHRoaW5ncyBpbiB0aGlzIHBvc3QuIEl0IGEgam9rZS4gSSBjYW50IGJlIGFyc2VkIHRvIHNwZWFrIHRvIHlvdSBhbnltb3JlLiAKVGhpcyBpcyBteSBzY2VuZS4gClBvdHRlciwgYSBwcm9mZXNzb3Igb2YgRW5nbGlzaCBhbmQgbWVkaWEgc3R1ZGllcyBhdCBSaG9kZSBJc2xhbmQgQ29sbGVnZS4uIApPbmUgdGhpbmcgdGhhdCBidWdnaW5nIG1lIGlzIHRoYXQgdGhlIGludHJvIG1hZGUgaXQgbG9vayBsaWtlIHRoZSB0aHJlZSBvZiB0aGVtIGhhZCBiZWVuIGluIHRyYW5zaXQgb24gYSBsb25nIHJvYWQgdHJpcCwgYnV0IG5vdyBpdCB0dXJucyBvdXQgdGhleSB3ZXJlIG9ubHkgYSBmZXcgbWlsZXMgZnJvbSB0aGUgY29tcG91bmQ/IFRoZWlyIGNhciBicm9rZSBkb3duIHByZXR0eSBtdWNoIGFzIHNvb24gYXMgdGhleSBsZWZ0LiAKV2FzaGluZ3RvbiBwb3VyZWQgYW4gYWRkaXRpb25hbCAyMSwwMDAgdHJvb3BzIGludG8gQWZnaGFuaXN0YW4gdG8gcHJvdmlkZSBzZWN1cml0eSBmb3IgaXRzIHJlY2VudCBwcmVzaWRlbnRpYWwgZWxlY3Rpb24sIHdoaWNoIGhhcyBiZWVuIG1hcnJlZCBieSBhbGxlZ2F0aW9ucyBvZiBmcmF1ZC4gdHJvb3BzIHdlcmUga2lsbGVkIGluIHRoZSBmaWdodGluZywgc3VycGFzc2luZyB0aGUgcHJldmlvdXMgaGlnaCBvZiA0NSBpbiBKdWx5LiBBbmQgdGhlIHdhciBoYXMgc3ByZWFkIGludG8gUGFraXN0YW4sIHdoZXJlIFRhbGliYW4gZmlnaHRlcnMgYXJlIG5vdyBiYXR0bGluZyBnb3Zlcm5tZW50IHRyb29wcyBpbiB0aGF0IG51Y2xlYXIgYXJtZWQgY291bnRyeS4KTWVhbndoaWxlLCBtaWxsZW5uaWFscyAoYWdlZCAyNCB0byAzOCkgYXJlIGJlY29taW5nIGtub3duIGFzIHRoZSBwYXJlbnRzIGJlY2F1c2UgaW4gTm9ydGggQW1lcmljYSB0aGV5IGhhdmUgZHJpdmVuIHVwIHRoZSBncm93dGggb2YgaW5kb29yIHBsYW50IHNhbGVzIGJ5IDMwIHBlciBjZW50LiBUaGVyZSBhcmUgdGhyZWUgcmVhc29ucyB0byBleHBsYWluIHRoaXMgZ3Jvd3RoOiBQZW9wbGUgd2FudCBoZWxwIGNsZWFuaW5nIHRoZSBhaXIgaW4gdGhlaXIgaG9tZXM7IHRoZXkgdXNlIHBsYW50cyBmb3IgZCBhbmQgcGxhbnRzIGVuaGFuY2UgdGhlaXIgZW1vdGlvbmFsIHdlbGwgYmVpbmcuIExpZ2h0aW5nIGZvciBncm93aW5nIGhlcmJzLCBncmVlbnMgYW5kIHNwcm91dHMgaW5kb29ycyBoYXMgYWxzbyBzZWVuIGEgc3Bpa2UgaW4gc2FsZXMuLiAKTm93IHRoYXQgd2Uga25vdyB3aGF0IHNlZGVudGFyeSBiZWhhdmlvciBpcywgbGV0J3MgbG9vayBhdCBpdHMgcmVsYXRpb25zaGlwIHdpdGggaGVhbHRoIHJpc2suClJlaWtpIEkgQ2xhc3MgT3V0bGluZTEuIFJlZ2lzdHJhdGlvbiBhbmQgc2lnbiBpbjIuIApIb3dldmVyIHdlIGRpZCBnZXQgYSBmZXcgc2lkZSBleWVzIGZyb20gbmVpZ2hib3JzIGFzIHdlIGJvbHRlZCBvdXQgdGhlIGhvdXNlIHdpdGggYSBwb3VjaCBvZiBkYXJ0cyBhbmQgYSBzbmlwZXIuLiAKVGhpcyBzaGl0IGlzIGxpa2UgdGhvc2UgSmFrZSBQYXVsIGZhbnMgd2hvIHVzZWQgdG8gY3J5ICJ0aGVuIGp1c3QgZG9uIHdhdGNoIGhpbSwgc3Rvb3BpZCIsIHRoYXQgbm90IGhvdyBpbnRlcm5ldCB3b3JrcyA3MzIgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KUmVhbGl6ZXMgaXQgbm90IGEgZ29vZCBkZWNpc2lvbiBsb25nIHRlcm0uIApTbyB5b3VyIG9uZSBzdGVwIHRvIG1pbmltaXplIHlvdXIgbG9zZXMgaW4gdGhpcyBoYW5kLCBpcyB0byBqdXN0IHRha2UgYSBtb21lbnQsIHRoaW5rIHdoYXQgaGFuZHMgY2FuIGNhbGwgb3IgZm9sZCB0byB5b3VyIHJpdmVyIGphbSwgcmVhbGl6ZSBpdHMgbm90IGEgZ29vZCBpZGVhLCBhbmQganVzdCBjYWxsLiBZb3UgbG9zZSBzb21lIG1vbmV5LCBmZWVsIGxpa2UgeW91IGdvdCB2YWx1ZSBvd25lZCwgYnV0IHlvdSBsb3NlIHByZXR0eSBtdWNoIHRoZSBtaW5pbXVtLgpQYWNxdWlhbyBrbm9ja2VkIGRvd24gTW9zbGV5IHdpdGggYSBsZWZ0IGhvb2sgaW4gdGhlIHRoaXJkIHJvdW5kLCBhIHB1bmNoIHRoYXQgc2FwcGVkIE1vc2xleSdzIHdpbGxpbmduZXNzIHRvIGVuZ2FnZS4gUGFjcXVpYW8gcmFuIGFmdGVyIE1vc2xleSB0aGUgcmVzdCBvZiB0aGUgZmlnaHQsIGJ1dCB0aGUgZm9ybWVyIGNoYW1waW9uIHdobyBoYXMgbmV2ZXIgYmVlbiBzdG9wcGVkIGluIDE4IHllYXJzIGluIHRoZSByaW5nIG1hbmFnZWQgdG8gc3RheSBhd2F5IGVub3VnaCB0byBmaW5pc2ggdGhlIDEydGggcm91bmQgdXByaWdodC4KSW4gbXkgb3BpbmlvbiwgdGhlc2UgcHJhY3RpdGlvbmVycyBhcmUgaGVscGluZyBjbGllbnRzIGhlYWwgZnJvbSBvbGQgZW1vdGlvbmFsIHdvdW5kcy4gV2hldGhlciB0aGUgTE1UIHdvdWxkIGV4cGxhaW4gaXQgdGhhdCB3YXkgb3Igbm90LCB0aGF0IGlzIGhvdyBJIHNlZSBpdC4gSXQgbm90IHBzeWNob3RoZXJhcHkgICBidXQgaXQgaXMgdG91Y2hpbmcgcGVvcGxlIGluIHN1Y2ggYSB3YXkgdGhhdCB0aGV5IGZlZWwgInRvdWNoZWQiIG9yICJzZWVuIiBhbmQgdGhleSBhcmUgdGhlbiBhYmxlIHRvIGxldCBnbyBvZiB0aGUgcGh5c2ljYWwgdGVuc2lvbiB0aGF0IGhhcyBiZWVuIGhvbGRpbmcgaW4gdGhlaXIgZW1vdGlvbmFsIHBhaW4uIApDb2xkcGxheSdzIENocmlzIE1hcnRpbiwgZm9yIGluc3RhbmNlLCBwbGFudGVkIDEwLDAwMCBtYW5nbyB0cmVlcyBpbiBJbmRpYSB0byBvZmZzZXQgd2hhdGV2ZXIgZW1pc3Npb25zIHdlcmUgbWFkZSBkdXJpbmcgdGhlIHJlbGVhc2Ugb2YgQSBSdXNoIE9mIEJsb29kIFRvIFRoZSBIZWFkLCBmcm9tIHRoZWlyIGNvYWwgZmlyZWQgZ3VpdGFycyBvciB3aGF0ZXZlci4KRGlvZ2VuZXMzNzUgdQpPbmUgb2YgdGhlIGJlc3QgYXJndW1lbnRzIHRvIGV4cGxhaW4gdGhlIHVuYmVsaWV2YWJseSBzcGVjaWZpYyBzdGFydGluZyBjb25kaXRpb25zIHJlcXVpcmVkIHRvIGdpdmUgdXMgbGlmZSBpcyB0aGUgbXVsdGl2ZXJzZSB0aGVvcnkuIEdpdmVuIGV2ZXJ5IHBvc3NpYmxlIHVuaXZlcnNlLCBvbmUgb2YgdGhlbSB3b3VsZCBiZSBvdXJzLiBJdCBhbiBhbnN3ZXIgdGhhdCBzb2x2ZXMgdGhlIHByb2JsZW0uIFRoZSBvbmx5IGlzc3VlPyBUaGVyZSBpcyB6ZXJvIGV2aWRlbmNlIGZvciBpdC4gU28gdGhhdCBtZWFucyBpdCBpcyBub3RoaW5nIG1vcmUgdGhhbiBhbm90aGVyIGJlbGllZiBzeXN0ZW0uCkZvcm1lciBOZXcgWW9yayBUaW1lcyBleGVjdXRpdmUgZWRpdG9yIEppbGwgQWJyYW1zb24sIGNhbGxlZCBvdXQgZm9yIHBsYWdpYXJpemluZyBhdCBsZWFzdCBzaXggcGFzc2FnZXMgaW4gaGVyIGJvb2sgYWJvdXQgdGhlIHN0YXRlIG9mIGpvdXJuYWxpc20gICB3aGljaCBzaGUgZGVuaWVkIGJlZm9yZSBhZG1pdHRpbmcgdG8gbWFraW5nICJtaXN0YWtlcyIgdGhhdCBub25ldGhlbGVzcyBzaG91bGQgbm90ICJvdmVyc2hhZG93IHdoYXQgSSB0aGluayBpcyBhIHJlYWxseSBpbnRlcmVzdGluZyBib29rLiIKV2UgY2FuIGdvIGRvd24gc21vb3RoIG9yIHdlIGNhbiBnbyBkb3duIGluIGZsYW1lcy4gCldlJ2QgYWxzbyBsaWtlIHRvIGNsZWFyIHVwIG9uZSB0aGluZyB0aGF0IGFwcGVhcnMgdG8gYmUgY2F1c2luZyBjb25mdXNpb24gYXJvdW5kIHRoaXMgcG9saWN5ICAgaXQgaXMgbm90IGFsd2F5cyBhIHF1ZXN0aW9uIG9mIHRoZSBpbWFnZSBpdHNlbGYuIENvbW1lbnRzIGFuZCBjb250ZXh0dWFsaXphdGlvbiBtYXR0ZXIuIEV2ZW4gaWYgYW4gaW1hZ2Ugb2YgYSBtaW5vciBpcyBTRlcsIGlmIHRoZSBjb21tZW50cyBhbmQgZGlzY3Vzc2lvbiBhcm91bmQgdGhhdCBpbWFnZSBhcmUgc3VnZ2VzdGl2ZSwgdGhlbiBhIHZpb2xhdGlvbiBpcyBjcmVhdGVkLiBUaGlzIGlzIHdoeSB5b3UgbWF5IGhhdmUgc2VlbiBTRlcgcGhvdG9zIGNvbWUgZG93biB1bmRlciB0aGlzIHBvbGljeS4KUmVzZWFyY2hlcnMgcG9pbnQgdG8gYSB2YXJpZXR5IG9mIHBvdGVudGlhbCBjYXVzZXMgZm9yIHRoZSBkaWZmZXJlbmNlcyBpbiBncm93dGggcmF0ZXMsIGF0dHJpYnV0aW5nIHRoZSB2YXJpYW5jZXMgdG8gZXZlcnl0aGluZyBmcm9tIHRoaWNrZW5pbmcgYmxvb2QgdmVzc2VsIHdhbGxzIHRvIHVsdHJhdmlvbGV0IHJhZGlhdGlvbiBbc291cmNlOiBCYXJhbiBldCBhbC5dLi4gCkhlIGRpZCByb2NrIHRoZSBob3VzZSBpbiBhIEdSRUFUIHdheSEgSXQgd2FzIHZlcnkgcGxlYXNpbmcgdG8gc2VlIGhpbSBzbyBhdCBwZWFjZSB3aXRoIGhpbXNlbGYgYW5kIHdpdGggaGlzIHBlcmZvcm1hbmNlIGFuZCBJIGFtIHRoYW5rZnVsIHRoYXQgaGUgZGlkIHJlY29nbml6ZSB0aGF0IHdpdGhvdXQgR29kIGhlIHdvdWxkIG5vdCBiZSBoZXJlLiBJIGdyZXcgdXAgd2l0aCB0aGUgUmVzdXJyZWN0aW9uIEJhbmQgKGNocmlzdGlhbiBoZWF2eSByb2NrKSBhbmQgdGhhdCBpcyBob3cgSSB2aWV3IGhpcyBtdXNpYy4gCkJ1dCBpdCBub3QganVzdCBoaXMgYWNhZGVtaWMgcGFzdCB0aGF0IHByZXZlbnRzIGhpbSBmcm9tIHdvcmtpbmcgZm9yIG9yZGluYXJ5IEFtZXJpY2Fucy4gVGhpcyBpcyBhbHNvIGEgbWFuIHdobyByZXByZXNlbnRzIHRoZSBmYWlsZWQgTmVvbGliZXJhbCBlY29ub21pYyBwb2xpY2llcyBvZiB0aGUgcGFzdCAzMCB5ZWFycy4gQW5kIGl0IGlzIHRpbWUgdG8gZ2V0IHJpZCBvZiBCZXJuYW5rZSBqdXN0IGxpa2UgaXQgaXMgdGltZSB0byBnZXQgcmlkIG9mIHRoZSByaWRpY3Vsb3VzIGlkZW9sb2dpY2FsIGNsYWltIHRoYXQgdGhlICJtYXJrZXQga25vd3MgYmVzdC4iLiAKSSB1c2VkIHRvIGZlZWwgdGhlIG5lZWQgdG8gZ3JpbmQgb3V0IG9mIGl0LCBidXQgY29tcGFjdGluZyBhbGwgdGhvc2UgbG9zc2VzIGlzIGluc2FuZWx5IHRvdWdoLCBhdCBsZWFzdCBvbiBteSBtZW50YWwgZ2FtZS4uIApCZXNpZGVzIHRoZSBhZ2dyZXNzaXZlIGFwcHJvYWNoIHdvdWxkIGhlbHAgeW91IHRvIHNhdmUgdGhlIHRpbWUgaWYgdGhlIGdhbWUgaXMgbm90IGluIHlvdXIgZmF2b3VyLiBTZWxlY3QgdGhlIGFwcHJvYWNoIHlvdSBsaWtlLCBidXQgb25lIGdlbmVyYWwgcmVjb21tZW5kYXRpb24gaXMgdGhhdCBpdCBpcyB3b3J0aCB0byBwbGF5ICJhZ2FpbnN0IHRoZSBjcm93ZCIuIFNvIGlmIHRoZSBtYWpvcml0eSBwbGF5cyBjb25zZXJ2YXRpdmUgdGFjdGljcywgeW91IHNob3VsZCBmb2xsb3cgdGhlIGFnZ3Jlc3NpdmUgb25lIGFuZCB2aWNlIHZlcnNhLgpCb29rIDIgaW4gdGhlIE1hbnRpY29yZSBBc2NlbmRhbnQgc2VyaWVzLCBzZXQgaW4gRGF2aWQgV2ViZXIncyBIb25vcnZlcnNlLiBSZXRyb3V2ZXogdm90cmUgZWJvb2sgZGFucyBsJ2FwcGxpIEtvYm8gYnkgRm5hYyBldCBkYW5zIHZvdHJlIGNvbXB0ZSBjbGllbnQuIApBcyBpZiB0aGF0IHdhc24ndCBiYWQgZW5vdWdoLCBhZnRlciBteSBkaWNraGVhZCBvZiBhIGRvZyBoYWQgc2FpZCBoaXMgaGVsbG9zIGhlIG5vdGljZWQgYSBnaXJsIGpvZ2dpbmcgYW5kIHN0YXJ0ZWQgcnVubmluZyBhbG9uZ3NpZGUgaGVyLiBIZSdzIGEgZGFsIGFuZCB3aGlsZSB3ZSBnbyBmb3IgZGFpbHkgcnVucyBpZiBoZSBzZWVzIHNvbWVvbmUgcnVubmluZyBoZSBqdXN0IHdhbnRzIHRvIHJ1biB3aXRoIHRoZW0uIEFyZ2guIApUaGlzIG9uZSB3YXMgYSBnYW1lIGNoYW5nZXIuIApGb3IgaGVyIHBhcnQsIE1jQ2FydGh5IHdhcyBQbGF5Ym95IDIwMDMgUGxheW1hdGUgb2YgdGhlIFllYXIsIGJ1dCBoZXIgcmVjZW50IFRWIHdvcmsgaGFzIGdvbmUgcmVsYXRpdmVseSB1bm5vdGljZWQuIApTbyBpbiB0aGUgQVEgdG8gMzMgc2NlbmFyaW8uMzMgaXMgc3RhdGlzdGljYWxseSBiZXR0ZXIsIGJ1dCBJIHdvdWxkIHRha2UgQVEgMTAgdGltZXMgb3V0IG9mIDEwLiAoRnVsbCBBbnN3ZXIpLiAKU2NoZWVyIHJlc3BvbmRlZCBhYm91dCBKdXN0aW4gVHJ1ZGVhdSBzcGVuZGluZyB0YXhwYXllcnMgbW9uZXkgb24gaGlzIG93biBwZXJzb25hbCBwcm9qZWN0cyBzdWNoIGFzIHRoZSBDbGludG9uIEZvdW5kYXRpb24gYmVmb3JlIHRyYW5zaXRpb25pbmcgdG8gYW4gYW5zd2VyIGFib3V0IGltbWlncmF0aW9uIHJ1bGVzLgpJdCBhbGwgZnVuIHN0dWZmIGFuZCBpdCBtYWtlcyB0aGUgZ2FyZGVuIGxpdmVseS4gRmFtaWxpZXMgYXJlIGFsc28gdXNpbmcgdGhlaXIgZWRpYmxlIGdhcmRlbnMgYXMgZWR1Y2F0aW9uYWwgdG9vbHMsIFJ1c3Qgc2F5cy5zaG93IHRoZWlyIGtpZHMsIHdlIHBsYW50IGEgc2VlZCByaWdodCBub3cgYW5kIGp1c3Qgd2FpdCBhIGZldyBtb250aHMgYW5kIHdhdGVyIGl0LCBhbmQgdGhlbiB0aGUgc3RyYXdiZXJyeSB3aWxsIGNvbWUgdGhyb3VnaCB0aGUgZ3JvdW5kIGFuZCB5b3UgY2FuIHBpY2sgaXQgYW5kIGVhdCBpdCBvciBiYWtlIGEgY2FrZSB3aXRoIGl0LCBzaGUgc2F5cy5SdXN0IGdyZXcgdXAgaW4gR2VybWFueSBhbmQgc2F5cyBoZXIgdGltZSBzcGVudCBvbiBoZXIgZ3JhbmRwYXJlbnRzIGZhcm0gbGVkIGhlciB0byBiZWNvbWluZyBhIGxhbmRzY2FwZSBhcmNoaXRlY3QuIFNoZSB3YXMgYWxzbyBpbmZsdWVuY2VkIGJ5IGhlciBmYXRoZXIsIHdobyB3YXMgYSBjaXZpbCBlbmdpbmVlci5qdXN0IGZlbHQgbGlrZSB0aGUgcmlnaHQgY29tYm8gb2YgbmF0dXJhbCBzY2llbmNlIGFuZCBjb25zdHJ1Y3Rpb24sIHNoZSBzYXlzLiAKVGhlIE5UU0IgZGV0ZXJtaW5lZCB0aGF0IGEgamFtbWVkIGVsZXZhdG9yIHByZXZlbnRlZCB0aGUgcGlsb3QgZnJvbSBiZWluZyBhYmxlIHRvIGxpZnQgdGhlIG5vc2Ugb2YgdGhlIHBsYW5lLi4gCkl0cyBzb21ldGhpbmcgeW91IGhhdmUgdG8gZ2V0IHVzZWQgdG8ganVzdCBsaWtlIHlvdSBnb3QgdXNlZCB0byBmZWVsaW5nIHlvdXIgaGVhcnQuIGl0IGhhcHBlbnMgdG8gbW9yZSBwZW9wbGUgdGhhbiB5b3Uga25vdy4gaXRzIGxpa2Ugd2VhcmluZyBhIGNhc3QgZm9yIGEgbG9uZyB0aW1lICAgd2hlbiBpdCBjb21lcyBvZmYgcGVvcGxlIG5vdGUgYSBwaGFudG9tIGZlZWxpbmcgb2YgaXQgc3RpbGwgdGhlcmUgICBzYW1lIHRoaW5nIGFzIGxvc2luZyBhIGxpbWIocGhhbnRvbSBsaW1iIHN5bmRyb21lKS4KSSBhbSBub3QgYSBrYXJtYSB3aG9yZSAoR29kLCBob3cgaHVydGZ1bCBhbiBhY2N1c2F0aW9uISkuIEkgd2FzIGdpdmVuIHBlcm1pc3Npb24gYnkgbXkgZmF0aGVyIHRvIHBvc3QgaGlzIGxhc3QgcGhvdG8gZm9yIHJlbWVtYnJhbmNlIHB1cnBvc2VzLCBhcyB3ZWxsIGFzIHRvIGdpdmUgYSBodW1hbiBmYWNlIHRvIGRlYXRoIHdpdGggZGlnbml0eS4KT3ZlcnZpZXcgZm9yIGxvdWllaXNhd3NvbWUKVGhlIEUgQ2xhc3MsIGhvd2V2ZXIsIGlzIGEgd2lkZWx5IHJlY29nbml6YWJsZSBuYW1lIGFuZCBhIGxvbmcgdGltZSBydW5uZXIuIApJIHNheSAidmVyeSBnb29kIiBiZWNhdXNlIGl0IHJlYWxseSBpcywgY29tcGFyZWQgdG8gdGhlIGZldyB1bml2ZXJzaXR5IHVuaW9ucyB0aGF0IGV4aXN0IGluIHRoZSBVUywgYW5kIHRoZXkgYmVlbiBkb2luZyBhIGxvdCBvZiBvdXRyZWFjaCB0byBvdGhlciB1bml2ZXJzaXRpZXMgdG8gaGVscCB0aGVtIGdldCB1bmlvbml6ZWQgdG9vLiBCdXQgb24gaXRzIG93biwgb3IgY29tcGFyZWQgdG8gdW5pb25zIGluIG1vcmUgc29jaWFsaXplZCBjb3VudHJpZXMsIGl0IGNvdWxkIGRlZmluaXRlbHkgYmUgd2F5IGJldHRlci4gQW5kIGV2ZXJ5IGNvbnRyYWN0IG5lZ290aWF0aW9uIGlzIGEgYmxvb2RiYXRoLgpTZXVsZSBsYSBuYWlzc2FuY2UgZmFpdCBsJ29iamV0IGQndW5lIGRjbGFyYXRpb24sIHNvaXQgZCd1bmUgaW5kaWNhdGlvbiBwcmNpc2UuIEwnYXJ0aWNsZSA1NSBkdSBDb2RlIGNpdmlsIGRpc3Bvc2UgcXVlICBsZXMgZGNsYXJhdGlvbnMgZGUgbmFpc3NhbmNlIHNvbnQgZmFpdGVzIGRhbnMgbGVzIHRyb2lzIGpvdXJzIGRlIGwnYWNjb3VjaGVtZW50LCAgbCdvZmZpY2llciBkZSBsJ3RhdCBjaXZpbCBkdSBsaWV1IC4gClNoaXRidWxsc2hpdGJ1bGwgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KIihGb3Jlc3QgSGlsbCBQbGF6YSBpcykgcmVhbGx5IGdvaW5nIHRvIGJlIHVwc2NhbGUsIG5vdCBsaWtlIGFueSBvZiB0aGUgb3RoZXIgc2hvcHBpbmcgY2VudGVycyBpbiBNZW1waGlzLiBXZSdyZSB0cnlpbmcgdG8gZ2V0IHBlb3BsZSB3aG8gYXJlIG5vdCBpbiBNZW1waGlzIHByZXNlbnRseSBhcyBvdXIgYW5jaG9ycy4iICBDaGFybGVzIFd1cnR6YnVyZ2VyRm91bmRlciBvZiBDbGVvIFdyYXAgSW5jLgpGb3IgZXhhbXBsZSwgb25lIG9mIHRoZSBwb3N0cyBkZWFsdCB3aXRoIHRoZSByZXBsYWNlbWVudCBvZiBsaXZlIG11c2ljIGluIHRoZWF0ZXJzIHdpdGggInJvYm90IG11c2ljIiAsIHdoaWNoIHdhcyBzaW1wbHkgImNhbm5lZCIsIG9yIHJlY29yZGVkIG11c2ljIHJlcGxhY2luZyB0aGUgbGl2ZSBwbGF5ZXJzLiAKSGUgaGFkIDMzIHBvaW50cyAoNSAyOCkgaW4gMzAgZ2FtZXMgdGhpcyBzZWFzb24sIGFuZCB3YXMgdGhlIHNldmVudGggb3ZlcmFsbCBzZWxlY3Rpb24gaW4gdGhlIDIwMTggZHJhZnQuIFRoZSBkaW1pbnV0aXZlIGRlZmVuY2VtYW4gcGFja3MgYW4gZXllIHBvcHBpbmcgYXJyYXkgb2YgcHVjayBtb3Zpbmcgd2l6YXJkcnkgYW5kIGJyYXZhZG8gdG8gYmFjayB0aGUgYmVsaWVmIHRoYXQgaGUgaGFzIGFuIE5ITCByZWFkeSBnYW1lLgpCZWNvbWUgY2l2aWxseSBlbmdhZ2VkLiBCZWNhdXNlIGlmIHlvdSBkb24ndCBzaG9vIHRoZW0gYXdheSwgbW9yZSBiaXJkcyBvZiBmdWNraW5nIGNhcnJpb24gbGlrZSBCZXRzeSBEZXZvcyB3aWxsIGhvcCBpbiBhbmQgcGljayB0aGUgYm9uZSBjbGVhbi4uIApUaGF0IG5vdCBhIGZhaXIgY29tcGFyaXNvbi4gSnVzdCBieSBsb29raW5nIGF0IHRoZSBBUUkgbWFwIHlvdSBjYW4gc2VlIHRoZSBzb3V0aGVybiBwYXJ0IG9mIEphcGFuIGFyb3VuZCBGdWt1b2thIGlzIGNvbnN0YW50bHkgYnJlYWtpbmcgMTAwcyBidXQgdGhlIGZ1cnRoZXIgSmFwYW4gaXMgZnJvbSBLb3JlYSwgaXQgZ29lcyBhcyBsb3cgYXMgNjBzLiBTZW91bCBpcyB0aGUgY2xvc2VzdCB0byB0aGUgY29hc3Qgb2YgQ2hpbmEgd2hlcmUgYWxsIHRoZSBwb2xsdXRpb24gaXMgY29taW5nIGZyb20gc28gaXQgbm90IHN1cnByaXNpbmcgU2VvdWwgaXMgY29uc3RhbnRseSBicmVha2luZyAyMDBzLiAKVGhlIG51bWJlcnMgYXJlIHNvIGxvcHNpZGVkIHRoYXQgaXQgaXMgc2hvY2tpbmcgICBzbyBzaG9ja2luZyB0aGF0LCB3aXRoIHRoZSBleGNlcHRpb24gb2YgbXVyZGVyLCB0aGUgRkJJIHN0b3BwZWQgdHJhY2tpbmcgdmljdGltIG9mZmVuZGVyIHJhY2UgcmVsYXRpb25zaGlwIGEgZmV3IHllYXJzIGJhY2ssIGFzIGl0IHdhcyBjYXN0aW5nIGNlcnRhaW4gZ3JvdXBzIGluIGEgYmFkIGxpZ2h0LgpQaWN0dXJlcyBoZXJlIGFyZSBmYWNpbmcgc291dGguIE5vbmUgY2hhbmNlIGl0IHdpbGwgZXZlciBmbG9vZC4gVGhlIHJvYWRzIHRvIGl0IGZsb29kIGFsbCB0aGUgdGltZS4KSW52ZXN0aWdhdGlvbiByZW1haW5zIGEgcHJpb3JpdHkgZm9yIG9mZmljZXJzIGluIHRoZSBWUEQgY291bnRlciBleHBsb2l0YXRpb24gdW5pdCwgc2FpZCBEb3VjZXR0ZS4gRGV0ZWN0aXZlcyBhcmUgY29udGludWluZyB0byBwcm9jZXNzIHRoZSBpbmZvcm1hdGlvbiBjb2xsZWN0ZWQsIGluY2x1ZGluZyB0aGUgb25nb2luZyBhbmFseXNpcyBvZiBpdGVtcyBzZWl6ZWQsIGluIG9yZGVyIHRvIHByb3ZpZGUgQ3Jvd24gY291bnNlbCB3aXRoIHRoZSBiZXN0IGV2aWRlbmNlIHRvIHNlY3VyZSBjcmltaW5hbCBjaGFyZ2VzLiAKQ2FzaW5vcyBkb24ndCBmaXQgaW50byBSb2NoZXN0ZXIncyBoaXN0b3J5IG9yIGZ1dHVyZS4gSSBob3BlIHJlc2lkZW50cyByZW1lbWJlciBvdXIgc2hhcmVkIGxlZ2FjeSBvZiBlZHVjYXRpb24sIGN1bHR1cmUsIGRpc2NpcGxpbmUgYW5kIGluZHVzdHJ5IHNvIGFzIHRvIHJlc2lzdCB0aGUgZmFsc2Vob29kcyB0aGF0IHdpbGwgY29tZSB3aXRoIGFueSBwcm9wb3NhbCBmb3IgYSBjYXNpbm8uLiAKRGVlcCB0aXNzdWUgbWFzc2FnZSB1c2VzIG1hbnkgb2YgdGhlIHNhbWUgbW92ZW1lbnRzIGFuZCB0ZWNobmlxdWVzIGFzU3dlZGlzaCBtYXNzYWdlLCBidXQgdGhlIHByZXNzdXJlIHdpbGwgZ2VuZXJhbGx5IGJlIG1vcmUgaW50ZW5zZS4gCkluIEJvc3RvbiwgSSd2ZSBiZWVuIHRlbGxpbmcgbm9uIEFzaWFuIGJ1ZGRpZXMgdGhhdCBDaGluYXRvd24gcmV0YWlsIGJhbmsgYnJhbmNoZXMgc3RhZmZlZCB3aXRoIENoaW5lc2UgKGFsdGhvdWdoIEknbSBiaWFzZWQgaGVyZSkgYXJlIHdheSBtb3JlIGVmZmljaWVudCBhdCBwcm9jZXNzaW5nIG1lbmlhbCBiYXNpYyBiYW5rIHRyYW5zYWN0aW9ucyBhbmQgbGl0ZXJhbGx5IGNvdW50aW5nIG1vbmV5LiAKQmVjYXVzZSBTZW4uIApEZSBjb21wZXRlbnRpZXMgdm9ybWVuIHNhbWVuIGhldCBvdmVya29lcGVsZW5kZSBjb21wZXRlbnRpZSBnZWJpZWQuIERlemUgU1RBUlJUIGFuYWx5c2VzIHdvcmRlbiBvbmRlcnN0ZXVuZCBkb29yIGJpamJlaG9yZW5kIGJld2lqcy4gCkFsc28geWVzLCBJIGFtIHZlcnkgZnVuIGF0IHBhcnRpZXMuCldoeSB3b3VsZCB5b3UgdGhpbmsgdGhhdD8gVGhlIHRpdGxlIHNhaWQgSSBidWlsZGluZyBhIGxvZ2dlciBmb3IgbXkgbW90b3JiaWtlLCB0aGlzIGlzIG15IHByb29mIG9mIGNvbmNlcHQuIFlvdSBkaWRuIGV2ZW4gYWRkIHF1b3RhdGlvbnMgdG8gdGhlIHRpdGxlIHRvIGltcGx5IHNvbWVvbmUgZWxzZSBzYWlkIGl0IGZpcnN0LgpIYXZpbmcgeW91ciBpbmZhbnRyeSBicmlnYWRlcyBkZXRhY2ggc2tpcm1pc2hlcnMgYXJlIHZlcnkgdXNlZnVsIGJ1dCByZWFsbHkgZGV0cmFjdCBmcm9tIHRoZW0uIApEYWFyYnVpdGVuIGhlYmJlbiBtaWpuIHN0YWdlYmVnZWxlaWRlcnMgbWlqIG9wIGRpdCBuaXZlYXUgYmVvb3JkZWVsZCBtaWRkZWxzIGRlIEtWQSAgbGlqc3Qgb3AgZGUgZWluZGJlb29yZGVsaW5nLi4gClBva2VyIGNhcmRzIGhhdmUgYmVlbiB0aGUgYmVzdCBjb2xsZWN0aWJsZXMgZm9yIHRoZSBwbGF5ZXJzIGFyb3VuZC4gQXBhcnQgZnJvbSB0aGUgcG9rZXIgZXhwZXJ0cyB0aGUgZmFucyBhbHdheXMga2VlcGluZyB0b3VjaGVkIHdpdGggcG9rZXIgaGF2ZSBnb3Qgc29tZSBpbnRlcmVzdCBpbiBwb2tlciBhcyB3ZWxsLiBUaGV5IGFyZSBwcmFjdGljYWxseSBsb29raW5nIGZvciBzb21lIGZhbmF0aWMgcHJvZHVjdHMgbGlrZSBPbiB0aGUgRGVhbGVyIFBva2VyIENhcmQgUHJvdGVjdG9yIGFzIHRoaXMgY2FuIG1ha2UgdGhlaXIgY2FyZHMgc3Vydml2ZSBpbiBhbnkgY29uZGl0aW9uLiBTb21lIGNhcmQgcGxheWVycyBoYXZlIGdvdCB0aGUgZmF0YWwgbmV1cm90aWMgdHJlbmQgd2hvIGJlbmQgdGhlaXIgY2FyZHMgdG8gZGFtYWdlIGFuZCBmaW5hbGx5IHJ1aW4gdGhhdCB1bm1pbmRmdWxseS4gVGhlc2UgcGxheWVycyB1c2UgdG8gaGF2ZSBzb21lIGV4Y2VwdGlvbmFsIHRoaW5ncyB0byByZXNpc3QgdGhpcyBsaWtlIHVuaXF1ZSBwcm9kdWN0cyBvciwgc29tZSBjb2lucy4gTm93LCB0aGV5IGhhdmUgY2hhbmdlZCB0aGVpciBwcm9kdWN0IHNlbnNlIGFzIHRoZXkgaGF2ZSBpbmNsdWRlZCBPbiB0aGUgRGVhbGVyIFBva2VyIENhcmQgUHJvdGVjdG9yIHJlcGxhY2luZyB0aGUgb2xkZXIgcGllY2VzLiBUaGVzZSBwcm9kdWN0cyBoYXZlIGJlY29tZSBleHRyZW1lbHkgcG9wdWxhciBhbW9uZyB0aGUgcGVvcGxlIGFyb3VuZCB0aGUgd29ybGQuIEVzcGVjaWFsbHksIHRoZSBwZW9wbGUgd2hvIGFyZSBmb2xsb3dpbmcgdGhlIHBva2VyIHRyZW5kcyBvZnRlbiBnZXQgdXNlZCB0byBwcm9kdWN0cyBsaWtlIE9uIHRoZSBEZWFsZXIgUG9rZXIgQ2FyZCBQcm90ZWN0b3IgYXMgdGhpcyBhbGxvd3MgYnJhbmRpbmcuCldoaWxlIHRoZSBzaW5nbGUsIHdoaWNoIHdvdWxkIGVhcm4gdGhlIGNyaXRpY2FsIGNvbnNlbnN1cyBvZiBicmluZyB0aGUgYXJ0aXN0J3MgbW9zdCBhdXRoZW50aWMgc29uZyBldmVyIGFzIHdlbGwgYXMgYSBHcmFtbXkgbm9taW5hdGlvbiBmb3IgQmVzdCBQb3AgU29sbyBQZXJmb3JtYW5jZSwgZGlkbid0IGJlYXIgbWFueSBoYWxsbWFya3Mgb2YgY291bnRyeSBpbmZsdWVuY2VkIHBvcCwgdGhlIGVuc3VpbmcgYWxidW0sIFJhaW5ib3csIHdhcyBsaXR0ZXJlZCB3aXRoIHRyYWNrcyBjbGVhcmx5IGluc3BpcmVkIGJ5IHdobyBLZXNoYSByZWZlcnJlZCB0byBhcyBoZXIgInRydWUiIG11c2ljYWwgaW5mbHVlbmNlczogRG9sbHkgUGFydG9uLCBULiBSZXgsIFRoZSBSb2xsaW5nIFN0b25lcyBhbmQgSWdneSBQb3AuCllvdSBnb3R0YSBzaG9wIGFyb3VuZCBhIGJpdCwgYnV0IHlvdSBjYW4gZGVmaW5pdGVseSBmaW5kIG9uZSBmb3IgcHJldHR5IGNoZWFwLiBUaGV5IGdldCBsdW1wZWQgaW4gd2l0aCBhIGxvdCBvZiBwcmFjdGljZSBhbXBzIGFuZCBzaGl0dHkgb2xkIHNvbGlkIHN0YXRlIGNvbWJvcywgYnV0IHRoZXkgbGVnaXRpbWF0ZWx5IHByZXR0eSBkYW1uIGdvb2QuIEkgcmVhZCBhbiBhcnRpY2xlIGFib3V0IGEgbXVzaWMgc2Nob29sIHRoYXQgaGFkIGJhbmRpdHMgaW4gZXZlcnkgY2xhc3Nyb29tIGJlY2F1c2UgdGhleSB3ZXJlIGltcG9zc2libGUgdG8gYnJlYWsgYW5kIGNvdWxkIHdvcmsgZm9yIHByZXR0eSBtdWNoIGFueSBnZW5yZSBwZW9wbGUgd2VyZSBwcmFjdGljaW5nLi4gClRoaXMgaXMgYSBzaWduaWZpY2FudCByZWFzb24gd2h5LiBGZXcgZmVtYWxlIGNhbmRpZGF0ZXMgaGF2ZSBlbnRlcmVkIHRoZSBtdW5pY2lwYWwgcmFjZSwgYmFyZWx5IG1vcmUgdGhhbiBhIHF1YXJ0ZXIgb2YgdGhvc2Ugd2hvIGhhdmUgZmlsZWQgbm9taW5hdGlvbiBwYXBlcnMuT25saW5lIGRpYWxvZ3VlIHBsYXlzIGEgcm9sZSwgc2FpZCBBbm5lIE1hcmllIFNhbmNoZXosIGNoYWlyIG9mIFdvbWVuIGFuZCBQb2xpdGljcywgd2hvIHR3ZWV0ZWQgYSBzaW1pbGFyIHNlbnRpbWVudCBXZWRuZXNkYXkgbmlnaHQuZGl2aXNpdmVuZXNzIG9mIGNlcnRhaW4gdG9waWNzIGxpa2UgQlJUIGhhcyBicm91Z2h0IG91dCBtb3JlIG5lZ2F0aXZpdHkgYW5kIG1vcmUgcG9sYXJpemF0aW9uLiAKSW4gcmVhbGl0eSBpdCBjYW4gYmUgYSBsb3QgbW9yZSBkaWZmaWN1bHQgdG8gZGlzY2VybiBzb21lb25lJ3Mgc2V4dWFsaXR5IGFuZCBpZiBpdCBkb2Vzbid0IGV4cGxpY2l0bHkgY29tZSB1cCB5b3UgbWlnaHQgbmV2ZXIga25vdy4gQmVpbmcgYSBnYXkgbWFuLCBJIGhhdmVuJ3QgYmVlbiBib3RoZXJlZCBieSBTb2xkaWVyJ3Mgc2V4dWFsaXR5IHJldmVhbC4gClNlZSBQZW5ndWlucyBXZWFyaW5nIFRpbnkgUGVuZ3VpbiBCb29rcyBTd2VhdGVycywgS25pdHRlZCBieSB0aGUuIEZyZWUgUGF0dGVybnMgZm9yIERvd25sb2FkIGZyb20gQ2xhc3NpYyBFbGl0ZSBZYXJucy4gCldoZW4gbWVsYW5jaG9seSBoaXRzLCBhIG1hc3NhZ2UgbWF5IGJlIGFuIHBvd2VyZnVsIHdheSB0byBjb21iYXQgaXQuIEFueGlldHkgYW5kIHVuaGFwcGluZXNzIHVzdWFsbHkgZW5kIHJlc3VsdCBpbiBlbGV2YXRlZCBjb3J0aXNvbCBzdGFnZXMgaW4gdGhlIGVudGlyZSBib2R5LiAKSW5jcmVhc2UgdGhlIGFuZ2xlIG9mIHlvdXIgaGVhZGJvYXJkIHRvIHByZXZlbnQgc3RvbWFjaCBhY2lkIGZyb20gZmxvd2luZyB1cHdhcmQgaW50byB0aGUgdGhyb2F0IGFuZCBwcm90ZWN0IHlvdXIgZXNvcGhhZ3VzLiAKU2VhdHMgd2l0aCBhIGZldyBleHRyYSBpbmNoZXMgb2YgbGVnIHJvb20gc3RhcnQgYXQgJDkuIERhaWx5IGxvdW5nZSBwYXNzZXMgY29zdCAkNTAuIApVc2UgdGhlIG9sZCBhY2NvdW50LCB5b3UgZ2V0IHRoZSBiZW5lZml0cyBvZiBzdGlsbCBiZWluZyBhYmxlIHRvIHVzZSB0aGUgY2xhc3NpYyBjYXJkcyB5b3UgaGF2ZS4gRWl0aGVyIHBsYXkgd2lsZCBvciBkdXN0IHRoZSBjYXJkcyBmcm9tIG9sZGVyIHNldHMuIEFuZCBzaW5jZSB3ZSBhcmUgc29vbiBmYWNpbmcgYSByb3RhdGlvbiB3aGljaCB3aWxsIGNoYW5nZSBzdGFuZGFydCBtb3JlIHRoZW4gYW55IG90aGVyIGV2ZXIgaGFzIHRoZSBjb21pbmcgbWV0YSB3aWxsIGJlIHJlYWxseSB1bmtub3duLgpFYXJsaWVyIHRoYXQgZGF5IHdlIHdlbnQgdG8gZG8gb3VyIG5haWxzIGFuZCBoZXIgY2hvaWNlIG9mIGNvbG91ciB3YXMgcmVkLiAKRG9uJ3QgZ28gd2hvbGx5IHJhdy4gWWVzLCB0aGVyZSBhcmUgbGVnaXRpbWF0ZSByZWFzb25zIHRvIGVuam95IHJhdyBwbGFudHMgaW4geW91ciBkaWV0LCBidXQgSSBkb24ndCBzdXBwb3J0IHRoZSBwcmFjdGljZSBhcyBhIG1vdmVtZW50IG9yIGV4Y2x1c2lvbmFyeSBwcmluY2lwbGUgZm9yIGVhdGluZy4gSHVtYW5zIGhhdmUgYmVlbiBjb29raW5nIGZvciB3ZWxsIG92ZXIgYSBodW5kcmVkIHRob3VzYW5kIHllYXJzLiAKRWl0aGVyIHRoYXQsIG9yIGhlIGp1c3QgbG9zdCBoaXMgbW9qby4gSGUgZG9uZSBxdWl0ZSBhIGZldyB0aGluZ3MgdGhhdCBoYXZlIG1hZGUgbWUgcXVlc3Rpb24gaGlzIG11c2ljYWwgaW50ZWdyaXR5Li4gCllvdSBsYXVkZWQgdGhlIGVjb25vbWljIGJlbmVmaXRzIG9mIGJlaW5nIGFibGUgdG8gZGVwb3J0IHBlb3BsZSB0byBtYWludGFpbiBsb3cgd2FnZXMuIEkgd291bGQgaW1hZ2luZSB0aG9zZSBwZW9wbGUgd291bGRuIHRhbGsgYWJvdXQgaG93IG11Y2ggdGhleSBiZW5lZml0LiBJZiB5b3UgYXJlIG9mIHRociBvcGluaW9uIHRoYXQgbWFya2V0cyBzaG91bGQgaGF2ZSBubyBtb3JhbCBsaW1pdHMgdGhlbiBJIGRvdWJ0IHRoZXJlIGlzIGFueSBwb2ludCBpbiBjb250aW51aW5nIHRoaXMgZGViYXRlLiBJIGxpdmUgaW4gYSBjb3VudHJ5IHdoaWNoIGhhcyBkZWNpZGVkIHRoYXQgaXQgd291bGQgcHJlZmVyIHRoYXQgY29uc3VtZXIgcHJvdGVjdGlvbiBhZ2VuY2llcywgaGVhbHRoIGJvYXJkcyBhbmQgdW5pb25zIHNob3VsZCBhZHZvY2F0ZSBhbmQgZW5mb3JjZSBwcm90ZWN0aW9ucyBmcm9tIG1hcmtldCBmb3JjZXMgd2lsbGluZyB0byBtYWtlIHByb2ZpdHMgYXQgdmlydHVhbGx5IGFueSBjb3N0LiBMYWNraW5nIHRoZXNlIHRoaW5ncyBtb3N0IGVjb25vbWllcyB3aWxsIHNtaWxlIGluIHRoZSBmYWNlIG9mIDggeWVhciBvbGRzIHdvcmtpbmcgdW5kZXIgY290dG9uIGdpbnMsIG9yIHNlbGxpbmcgcHJvZHVjdHMgd2l0aCBrbm93biBmYXRhbCBmbGF3cy4KQmlnIG9wZW4gZmxvb3IgcGxhbi4gClRoZSBSZXZpdmFsIHBhcnQgY291bGQgaGVscCB5b3UgZ2V0IGJhY2sgYW4gZWZmaWNpZW50IGNyZWF0dXJlLCB0aG91Z2ggYWRtaXR0ZWRseSBJIG5vdCBmZWVsIGdyZWF0IGFib3V0IGhhdmluZyB0byB1c2UgdGhhdCBwYXJ0IG9mIHRoZSBjYXJkLiBBIE5veGlvdXMgR3Jvb2Rpb24gb3IgT3J6aG92IEVuZm9yY2VyIGNhbiBoZWxwIHN0b3AgYSBiaWcgZ3JlZW4gYXR0YWNrZXIsIGJ1dCBpdCBiZSBhIDIgZm9yIDEuIElmIHlvdSBsb3cgb24gYWN0dWFsIHJlbW92YWwsIGl0IG1pZ2h0IGRvIGluIGEgcGluY2gsIHRob3VnaC4KVGhpcnR5IGZvdXIgeWVhcnMgbGF0ZXIgeW91IHdvbmRlciBob3cgbXVjaCB3ZSBldm9sdmVkIGJ1dCB0aGF0IGRvZXNuIGRpbWluaXNoIFJvYmluc29uIGNhcmVlciBvciBoaXMgaW1wYWN0IG9uIHRoZSBnYW1lLi4gCihUaGF0IHNvbWUgbGliZXJ0YXJpYW4gc29jaWFsaXN0IHRoaW5raW5nLilBdCB0aGUgZW5kIG9mIHlvdXIgcG9zdCB0aGVyZSwgSSBub3QgdGFsa2luZyBhYm91dCBsaWtlIHBoeXNpY2FsIHNlY3VyaXR5LCBJIHRhbGtpbmcgYWJvdXQgam9iIHNlY3VyaXR5LCBmaW5hbmNpYWwgc2VjdXJpdHksIHRoZSBzZWN1cml0eSBvZiBrbm93aW5nIHlvdSB3aWxsIGJlIHByb3ZpZGVkIHdpdGggaGVhbHRoIGNhcmUuIApUaGUgQmVsbGUgb2YgQ2luY2lubmF0aSwgdGhlIGhvbWV0b3duIEJlbGxlIG9mIExvdWlzdmlsbGUncyBvcHBvbmVudCBpbiB0aGUgcml2ZXJib2F0IHJpdmFscnkgcmFjZSwgd2lsbCBub3QgYmUgYWJsZSB0byB0cmF2ZWwgZG93bnJpdmVyIG5leHQgd2VlayBiZWNhdXNlIG9mIHRoZSByaXZlciBjb25kaXRpb25zLiAKQWdyZWVkLiBPbmUgb2YgbXkgZmF2b3JpdGUgaW50ZXJ2aWV3IHByb2JsZW1zIHdhcyAiUGFyc2UgdGhpcyBtZXNzeSBlbWFpbCBhbmQgZXh0cmFjdCB0aGUgYm9keSBvZiB0aGUgbWVzc2FnZS4gVXNlIGFueSByZXNvdXJjZXMgeW91IHdhbnQsIGV2ZW4gaWYgaXQgYSBvbmUgbGluZSBzb2x1dGlvbiBmcm9tIHNvbWUgdGhpcmQgcGFydHkgbGlicmFyeSB5b3UgZmluZCBvbmxpbmUuIgpXaWxsIGhhcHBlbiBhdCBzb21lIHBvaW50LiBUaGUgc2FtZSB0aW1lIHRoZSBUaW1lIFNxdWFyZSBib21iIHdhcyBzbW9sZGVyaW5nLCBhIFVuaXRlZCBBaXJ3YXlzIHBsYW5lIHdhcyBiZWluZyBkaXZlcnRlZCBiZWNhdXNlIG9mIGEgYm9tYiB0aHJlYXQgbm93IGRlc2NyaWJlZCBhcyBhICJob2F4LiIgbmV4dCB0aW1lIHRoZSB0ZWUgc2hpcnQgdmVuZG9yIG1pZ2h0IG5vdCBzZWUgdGhlIHNtb2tlIG9yIHRoZSB0aHJlYXQgbWlnaHQgbm90IGJlIGp1c3Qgc29tZSBzdHVwaWQgImpva2UuIiBsaWtlIG9mZnNob3JlIGRyaWxsaW5nIHdpbGwgaW5ldml0YWJseSBsZWFkIHRvIG9pbCBzcGlsbHMsIFVTIGZvcmVpZ24gYW5kIGRvbWVzdGljIHBvbGljaWVzIHdpbGwgaW5ldml0YWJseSBsZWFkIHRvIHRlcnJvcmlzdCBhdHRhY2tzLiAKQnV0IENhbGRlciBsaXZlIHJhY2luZyBhdHRlbmRhbmNlIGFuZCByZXZlbnVlcyBiZWdhbiB0byBkcm9wIGluIDIwMDQsIGFuZCBieSAyMDEzLCBhdHRlbmRhbmNlIGF0IHRoZSB0cmFjayByYWNlcyBoYWQgcGx1bW1ldGVkIHRvIDExOCwwMDAsIG9yIGFuIGF2ZXJhZ2Ugb2YgNDM5IHBlciBkYXksIGp1c3QgYSBmcmFjdGlvbiBvZiB0aGUgMywzNTEgZGFpbHkgYXR0ZW5kYW5jZSBpbiAyMDA0LgpBc2tNZUlmSW1BUmVwdGlsb2lkICAwIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpQZW9wbGUgbW9zdGx5IHBsYXkgdG8gd2luIGFuZCBtYWtlIHNvbWUgbW9uZXk7IHRoaXMgaXMgdW5saWtlIHRoZSBlYXJsaWVyIGRheXMgd2hlbiBwZW9wbGUgdXNlZCB0byBwbGF5IHRoZSBnYW1lcywgbW9zdGx5IGZvciB0aGUgZnVuIG9mIGl0Li4gCkl0J3MgcmFyZSB0aGF0IHNvbWVvbmUgZG9lc24ndCB0ZWxsIG1lIGhvdyBtdWNoIGlzIG93ZWQuIApJdCB3YXMgYSBkZWZpbml0ZSByZWxpZWYsIGJ1dCB3ZSB3aWxsIG5ldmVyIGRvdWJ0IHRoZSBQYXVsc29uIENvbXBhbnkgYWdhaW4uIApBIHRyZWF0LiAKQnV0IHRoYXQgaG93IHN1cHBvc2VkbHkgcHJvZ3Jlc3NpdmUgcG9saXRpY3MgaGFwcGVuIGluIFZUIGFuZCB0aGUgcmVzdCBvZiB0aGUgY291bnRyeS4gCklmIHlvdSBoYXZlbid0IHRha2VuIGFkdmFudGFnZSBvZiBhbnkgb2YgdGhlc2UgcG9rZXIgdG9vbHMsIGl0J3MgaGlnaCB0aW1lLiAKRXZlbiBpZiB0aGV5IGFyZSB0ZWNobmljYWxseSBmcm9tIGEgc291cmNlIG90aGVyIHRoYW4gVGhlIE9uaW9uLCBhbnkgYXJ0aWNsZSBzdWJtaXNzaW9uIHdyaXR0ZW4gYXMgc2F0aXJlIG9yIGV2ZW4gdHJ1ZSBzdG9yaWVzIHdyaXR0ZW4gaW4gYSBzYXRpcmljYWwgbWFubmVyIGFyZSBub3QgYWxsb3dlZC4gUGxlYXNlIG5vdGUgdGhhdCBzb21lIG1ham9yIG5ld3Mgb3V0bGV0cyBoYXZlIHNhdGlyaWNhbCBzZWN0aW9ucywgc3VjaCBhcyB0aGUgQm9yb3dpdHogUmVwb3J0IG9uIHRoZSBOZXcgWW9ya2VyLCB3aGljaCBhcmUgYWxzbyBub3QgYWxsb3dlZC4gTWVhbndoaWxlLCBBVkNsdWIsIHdoaWxlIG93bmVkIGJ5IFRoZSBPbmlvbiwgaXMgbm90IHNhdGlyZSBhbmQgaXMgYWxsb3dlZC4uIApJIGRvbiBrbm93IHRoZSBsZXZlbCBvZiB5b3VyIHN0dWRpZXMgYnV0IEkgc2VlIDIgb3B0aW9ucyBoZXJlLCB0aGV5IGVpdGhlciBqZWFsb3VzIG9yIHJpZ2h0LiBVbmxlc3MgeW91IHN0dWR5aW5nIGxhdyBvciBtZWRpY2luZSB5b3VyIHN0dWRpZXMgc2hvdWxkbiB0YWtlIG1vcmUgdGhhbiBhIGZldyBob3VycyBldmVyeWRheS4gSXQgd291bGRuIGtlZXAgeW91IGZyb20gYSB2ZXJ5IGFjdGl2ZSBzb2NpYWwgbGlmZS4gTWF5YmUgeW91IGp1c3QgZG9uIHdhbnQgdG8gdGFsayB0byB0aGVtLgpOb24gaGEgaW1wb3J0YW56YSBjaGUgcG9pIGlsIFNvbGUgc3BsZW5kYSBvIGNvbnRpbnVpIGEgcGlvdmVyZSwgcGVyIGludGVuZGVyY2kuIApUaGUgcmVzdWx0IHdpbGwgYmUgZmVtaW5pemVkIHNlZWRzIHRoYXQgaGF2ZSB0aGUgc2FtZSByaXNrIHRvIGhlcm1pZSBmcm9tIHRoZSBzdHJlc3NlcyB0aGF0IG1hZGUgaXQgaGVybWllLiAKRm9yIDEwIGRheXMsIGludmVzdGlnYXRvcnMgZnJvbSB0aGUgSmFja3NvbnZpbGxlIFNoZXJpZmYncyBPZmZpY2UgdGVhbWVkIHdpdGggcGVyc29ubmVsIGZyb20gYWdlbmNpZXMgYWNyb3NzIHRoZSBzdGF0ZSBhbmQgcmVnaW9uIGluIGEgZnVsbCBzY2FsZSBzZWFyY2ggZm9yIExvbnppZS4gQXMgbWFueSBhcyAyMDAgaW52ZXN0aWdhdG9ycyB3ZXJlIG91dCBzY291cmluZyB0aGUgU291dGhzaWRlIGFuZCBOb3J0aHNpZGUgbGFzdCB3ZWVrLCBidXQgdGhvc2UgZWZmb3J0cyB3ZXJlIHNjYWxlZCBiYWNrIHRvIGFib3V0IDcwIGludmVzdGlnYXRvcnMgb3ZlciB0aGUgd2Vla2VuZC4uIApUaGF0J3Mgd2h5IGV4cGVyaWVuY2UgaXMgaW1wb3J0YW50IGluIGdhbWVzIG9mIHBva2VyLiAKUGVyaGFwcyB0aGVyZSBpcyBhIHdheSB0byBsb29rIGF0IHdoZXJlIHlvdSdyZSBzcGVuZGluZyB5b3VyIG1vbmV5LiAKQWRkIHRoZSB3aW5lIGFuZCBzY3JhcGUgdXAgYW55IGJyb3duZWQgYml0cyBvbiB0aGUgYm90dG9tIG9mIHRoZSBwYW4uIApBIGJpdCBkaXNhcHBvaW50aW5nLiBPbiB0aGUgcGx1cyBzaWRlLCBKZXNzaWNhIFJvdGhlIHdhcyByZWFsbHkgZ29vZCBhbmQgdGhlIGNhc3QgaGFkIG5pY2UgY2hlbWlzdHJ5IG9uY2UgYWdhaW4uIEl0IGludHJvZHVjZWQgc29tZSBwcmV0dHkgbmVhdCBjb25jZXB0cywgbGlrZSBSeWFuIGJlaW5nIGluIGhpcyBvd24gdGltZSBsb29wIGFuZCB0cnlpbmcgdG8ga2lsbCBhbm90aGVyIHZlcnNpb24gb2YgaGltIGluIG9yZGVyIHRvIHN0YWJpbGl6ZSB0aGluZ3MsIGJ1dCBtb3N0bHkgZGlzY2FyZGVkIHRoZW0gYWZ0ZXIgdGhlIG9wZW5pbmcgYW5kIHN3aXRjaGVkIHRvIGEgbGVzcyBpbnRlcmVzdGluZyBwbG90bGluZS4gSSB0aG91Z2h0IHRoZSBhZGRlZCBjb21lZHkgd2FzIGhpdCBvciBtaXNzLCBhbmQgYWx0aG91Z2ggVHJlZSBtb20gYmVpbmcgYWxpdmUgd2FzIGEgbmljZSBkcmFtYXRpYyBkaWxlbW1hLCB0aGVpciBzY2VuZXMgdG9nZXRoZXIgb2Z0ZW4gZmVsdCBvdmVyZG9uZSBhbmQgYXdrd2FyZGx5IGNsYXNoZWQgdG9uYWxseSB3aXRoIHRoZSByZXN0IG9mIHRoZSBtb3ZpZS4gVGhlcmUgd2VyZSBhbHNvIGEgY291cGxlIGNsaW1hY3RpYyBzY2VuZXMgdG9vIG1hbnkuIEFzIGZvciB0aGUgdGltZSB0cmF2ZWwgbG9naXN0aWNzIChvciBsYWNrIG9mKSBJIHVzdWFsbHkgYWJsZSB0byBzdXNwZW5kIG15IGRpc2JlbGllZiBmb3Igc3VjaCB0aGluZ3MgYW5kIGp1c3QgZ28gYWxvbmcgd2l0aCBpdC4gSXQgdGhlIG90aGVyIGVsZW1lbnRzIHRoYXQgSSBmZWx0IGJyb3VnaHQgdGhlIHNlcXVlbCBkb3duIGEgY291cGxlIG5vdGNoZXMgYmVsb3cgdGhlIG9yaWdpbmFsLgpUbyBwdXQgaXQgaW50byBzaW1wbGUgdGVybXMsIElmIHlvdSBoYXZlIEFRIGFuZCB5b3Uga25vdyB5b3VyIG9wcG9uZW50IGhhcyAzMy4gClRoaW5nLCBhbmQgdGhpcyBpcyBqdXN0IG9waW5pb24sIGJ1dCBJIGJlbGlldmUgbmVnYXRpdmUgcHVuaXNobWVudCBpcyB0aGUgd29yc3Qgd2F5IHRvIGRpc2NpcGxpbmUgY2hpbGRyZW4uIEkgdW5kZXJzdGFuZCB0aGF0IGl0IGlzIG5lY2Vzc2FyeSBzb21ldGltZXMsIGJ1dCBJIHN0YW5kIGJ5IHNheWluZyBwb3NpdGl2ZS9uZWdhdGl2ZSByZWluZm9yY2VtZW50IHBvc2l0aXZlIHB1bmlzaG1lbnQgKHNvcnRhKSBhcmUgYmV0dGVyIGluIG1vc3Qgc2l0dWF0aW9ucy4gS2lkcyBhcmUgcHJldHR5IHJld2FyZCBvcmllbnRlZCBhIGxvdCBvZiB0aGUgdGltZSBhbmQgd2l0aG91dCBwcm9wZXIgcmVhc29uaW5nIHRoYXQgdGhleSB1bmRlcnN0YW5kIGJlaGluZCBuZWdhdGl2ZSBwdW5pc2htZW50LCBpdCBjYW4gbGVhZCB0byBraWRzIG5vdCB3YW50aW5nIHRvIGJlIG9wZW4gd2l0aCB0aGVpciBwYXJlbnRzLiAKT3ZlciAyMCBob3VycywgYnV0IHdpdGggbGVzcyB0aGFuIDMwJCBhbmQgdmVyeSBjYXN1YWxseSB3aXRoIGZyaWVuZHMuIApTbywgd2hlbiB5b3UgYmVnaW4sIHlvdSBhcmUgc3BlbmRpbmcgYWJvdXQgMTAgbWludXRlcyBvbiB0aGUgY3ljbGUuIEFzIHlvdSBsZWFybiB0byBlbmpveSBpdCwgdGhlIGFtb3VudCBvZiB0aW1lIHlvdSBtZWRpdGF0ZSB3aWxsIG5hdHVyYWxseSBpbmNyZWFzZS4uIApUdXJuaW5nIGRvd24gdGhldm9sdW1lIG9uIHBva2llcyAgb3IgZW5zdXJpbmcgdGhleSBhbHNvIG1hZGUgc291bmRzIHdoZW4gcGVvcGxlIGxvc3QgIHdlcmUgYW1vbmcgdGhlIHJlcG9ydCByZWNvbW1lbmRhdGlvbnMuIFJlc2VhcmNoZXJzIGFsc28gcmVjb21tZW5kZWQgZ2FtaW5nIHJvb21zIGJlIGxvY2F0ZWQgYXdheSBmcm9tIGRpbmluZyBhcmVhcyBvciBjbHViIGVudHJhbmNlcy4gClN1aWNpZGUgaW4gZ2VuZXJhbCBpcyBraW5kIG9mIGNvbnRhZ2lvdXMsIGFuZCBrbm93aW5nIHRoYXQgaGFzIHN0b3BwZWQgbWUgZnJvbSB3YW50aW5nIHRvIGRvIGl0IG15c2VsZiAgIEkgd291bGRuJ3Qgd2FudCB0byB0aGluayB0aGF0IEkgbWlnaHQgYmUgbWFraW5nIHNvbWVvbmUgSSBsb3ZlIG1vcmUgbGlrZWx5IHRvIHdhbnQgdG8gZGllLi4gCkl0IGRpcmVjdCBmdWVsIGZvciBzZXh1YWwgdXJnZXMuIApCdXQgd2UgaGVhciBhbG1vc3Qgbm90aGluZyBhYm91dCB0aGlzLiBJIHdpbGwgZXhwbGFpbiB3aHkgSSB0aGluayB0aGF0IGluY3JlYXNlIGhhcyBvY2N1cnJlZCBpbiBhIG1vbWVudC4gCldlIHN1cHBvcnQgTmV0IE5ldXRyYWxpdHkgdG8ga2VlcCBwcm92aWRpbmcgYWNjZXNzIHRvIGFsbCB3ZWIgY29udGVudCB0byBhbGwgdXNlcnMgaXJyZXNwZWN0aXZlIG9mIHdoZXRoZXIgb3Igbm90IHRoZXkgaGF2ZSBwYWlkIGV4dHJhIHJhdGVzIHRvIFRlbGNvIGFuZCBDYWJsZSBpbnRlcm5ldCBhY2Nlc3MgcHJvdmlkZXJzLgpFdCByZXBvcnRlcyB2b3VzICBsYSBmaWNoZSBudXRyaXRpb25uZWxsZXMgZG9udCB2b2ljaSB1biBhcGVydSBwb3VyIGxhIHBhcnRpZSB2aXRhbWluZSBkdSBncm91cGUgQiA6Q3QgYW1yaWNhaW4gbGEgQjEgYydlc3QgMTI1IG1nLCBwcmVzcXVlIDEwMCBmb2lzIHBsdXMuIFNpIG9uIHRyb3V2ZSBxdWUgYydlc3QgZXhhZ3Igb24gcGV1dCBwcmVuZHJlIDIgb3UgMyBjb21wcmlzIGNlIHF1aSByZHVpcmFpdCBsZSBjb3QgIHVuIG9yZHJlIGRlIDE1ICAyMCBwYXIgbW9pcy4gCkkgdGhpbmsgcGVvcGxlIGRvIHRoaXMga2luZCBvZiBzdHVmZiBhcmUganVzdCBhc3Nob2xlcyBrbm93aW5nIHRoZXkgYXJlIHBpc3NpbmcgcGVvcGxlIG9mZiBidXQgYXQgdGhlIHNhbWUgdGltZSwgaXQgdGhlaXIgcmlnaHQgc28gZ28gYWhlYWQgSSBndWVzcy4uIAoiT2xkYm95IiBpcyB0aGUgc3Rvcnkgb2YgYSBtYW4gaGVsZCBpbiBzb2xpdGFyeSBjb25maW5lbWVudCBmb3IgMjAgeWVhcnMgd2l0aCBubyBleHBsYW5hdGlvbiBhcyB0byB3aHkuIFdoZW4gaGUgaXMgdW5leHBlY3RlZGx5IGFuZCBpbmV4cGxpY2FibHkgcmVsZWFzZWQsIGhlIGRldm90ZXMgaGltc2VsZiB0byBmaW5kaW5nIG91dCB3aG8gcHV0IGhpbSBpbiB0aGF0IHJvb20gYW5kIHdoeS4gU3Bpa2UgTGVlIGRpcmVjdHMgdGhpcyBBbWVyaWNhbiBhZGFwdGF0aW9uIG9mIG9uZSBvZiB0aGUgZ3JlYXRlc3QgS29yZWFuIGZpbG1zIGluIGEgbG9uZyB0aW1lLCBidXQgaXQncyBnb2luZyB0byBiZSBoYXJkIHRvIGhvbGQgYSBjYW5kbGUgdG8gdGhhdCBmaWxtLiBGYW5zIG9mIHRoZSBvcmlnaW5hbCB3aWxsIGdpdmUgdGhpcyBvbmUgYSBzaG90LCBidXQgdGhleSB3b3VsZCBiZSB3aXNlIHRvIHByZXBhcmUgdGhlbXNlbHZlcyBmb3Igc29tZXRoaW5nIGNvbXBsZXRlbHkgZGlmZmVyZW50LgpJbnN0ZWFkLCBoZSBmaXJlZCBpbnRvIHRoZSBjZWlsaW5ncywgc2NhdHRlcmluZyBwYW5pY2tlZCBjcm93ZHMsIHNvbWUgb2Ygd2hvbSBqdW1wZWQgb3V0IHdpbmRvd3MgdG8gZXNjYXBlIHRoZSBhdHRhY2suCkZvciBleGFtcGxlLCBpZiB5b3UgY29tZSBkb3duIHdpdGggYSBsb3Qgb2YgY2hlc3QgY29sZHMgYW5kIGZsdXMsIHJ1YiB0aGlzIGJsZW5kIG92ZXIgeW91ciBjaGVzdC4gCk9waW5pb25zIG9uIDN4IHZzIDJ4IHdlZWsgc3F1YXR0aW5nPyBJIGhhdmUgYmVlbiBkb2luZyAzeCBwZXIgd2VlayBzcXVhdHRpbmcgdGhlIGxhc3QgZmV3IG1vbnRocyBhbmQgd2hpbGUgaXRzIGJsYXN0ZWQgbXkgc3F1YXQgaGlnaGVyLCB0aGUgbGFzdCBmZXcgd2Vla3MgaGF2ZSBmZWx0IGxpa2UgaXRzIHNsb3dpbmcgZG93biBhbmQgaW0gZ2V0dGluZyBwaW5uZWQgYXQgYXJvdW5kIHRoZSBzYW1lIHdlaWdodC4gCkl0IHdoYXQgSSB3YXMgdXNlZCB0bywgYW5kIEkgd2FzIGEgcXVpZXQgY2hpbGQgYW5kIGRpZG4gbGlrZSB0YWxraW5nIHRvIHN0cmFuZ2Vycy4gClRoZXJlIGFyZSB3ZWxsIGtub3duIHdlaWdodCBsb3NzIGJldHMgaW4gcG9rZXIsIGJldHMgdG8gc3dpbSBvciBydW4gYSBjZXJ0YWluIGRpc3RhbmNlLCBwbGF5IHRvbyBtdWNoIGdvbGYgaW4gdGhlIExhcyBWZWdhcyBzdW1tZXIgaGVhdCwgYW5kIGdvIHdpdGhvdXQgc2V4IG9yIGFsY29ob2wgZm9yIHBlcmlvZHMgb2YgdGltZS4gCk5ldmVyIGV2ZXIgYmxhbWUgeW91ciB0ZWFtbWF0ZXMuIFlvdSBkaWRuIGxvc2UgdGVuIHRpbWVzIGluIGEgcm93IGJlY2F1c2Ugb2YgeW91ciB0ZWFtbWF0ZXMuIFlvdXIgdGVhbW1hdGUgbWlnaHQgbm90IGhhdmUgc2F2ZWQgdGhlIHNob3QsIGJ1dCBoZSB3b3VsZG4gaGF2ZSBoYWQgdG8gaWYgeW91IGNoYWxsZW5nZWQgcHJvcGVybHksIGV0Yy4KVGhpcyBnb3Qgc28gYmFkIHRoYXQgTG9NIG1vZGVyYXRvcnMgaGFkIHRvIG1ha2UgYSBib3Qgc28gdGhhdCBtb2RzIGNvdWxkIHJlc3BvbmQgaW4gYSBzdGlja3kgY29tbWVudCBiZWNhdXNlIGNvbW1lbnRzIHdvdWxkIGJlIG1hc3MgZG93bnZvdGVkIHJlZ2FyZGxlc3Mgb2YgY29udGVudC5Tb21ldGltZXMsIHlvdSB3aWxsIGhhdmUgZ29vZCBjb250ZW50IHRoZXJlIHN1Y2ggYXMgdGhpcyB0aHJlYWQgd2hlcmUgcGVvcGxlIHdpbGwgZW5nYWdlIHdpdGggZ29vZCBwb2ludHMgYW5kIG1vZGVyYXRvcnMgd2lsbCByZXNwb25kLiAKQW5vdGhlciAkNC4wMiBtaWxsaW9uIHdhcyBzcGVudCBvbiBwb2tpZSBhbmQgb3RoZXIgZ292ZXJubWVudCByZWxhdGVkIHRheGVzIGFuZCBhbmQgb3V0bGFpZCAkNDgyLDc4NiB0byBjaGFyaXRpZXMgYW5kIHNwb3J0aW5nIGJvZGllcy4KSWYgdGhvc2Ugc3ltcHRvbXMgaW5jcmVhc2Ugb3ZlciB0aW1lIGFuZCBpbnRlcmZlcmUgd2l0aCBhIHBlcnNvbidzIGRhaWx5IGxpZmUsIHRoYXQgcGVyc29uIHNob3VsZCBzZWVrIHByb2Zlc3Npb25hbCBoZWxwLCBzaGUgc2FpZC4gRXZlcnlvbmUgZXhwZXJpZW5jZXMgc3VjaCBzeW1wdG9tcyBkaWZmZXJlbnRseSBidXQgS2Fta2FyIHN0cmVzc2VkIHRoYXQgcGVvcGxlIHNob3VsZCBrbm93IHRoYXQgdGhlc2UgZmVlbGluZ3MgYXJlIG5vcm1hbC4KSm9iIFNlYXJjaGluZyBVc2UgdGhlIGNvbm5lY3Rpb25zIGZvcmdlZCBkdXJpbmcgYm90aCB5b3VyIGFjYWRlbWljIHN0dWRpZXMgYW5kIHlvdXIgaW50ZXJuc2hpcHMgdG8gbGVhcm4gYWJvdXQgYXZhaWxhYmxlIHBvc2l0aW9ucyBpbiB5b3VyIGZpZWxkLiBUaGVyZSBhcmUgYWxzbyBhIG51bWJlciBvZiB3ZWJzaXRlcyBhbmQgam9iIGJvYXJkcyB0aGF0IHlvdSBjYW4gdXNlIHRvIGFpZCBpbiB5b3VyIGpvYiBzZWFyY2guIFRoZSBBbWVyaWNhbiBQc3ljaG9sb2dpY2FsIEFzc29jaWF0aW9uJ3MgUHN5Y0NhcmVlcnMgcGFnZSBsaXN0cyBqb2JzIGZvciB0aGVyYXBpc3RzIGluIGEgbnVtYmVyIG9mIGRpZmZlcmVudCBmaWVsZHMsIGluY2x1ZGluZyBjb3JyZWN0aW9ucyBhbmQgcmVoYWJpbGl0YXRpb24gZmllbGRzLiBZb3UgbWF5IGFsc28gY2hlY2sgeW91ciBzdGF0ZSdzIGNpdmlsIHNlcnZpY2UgY29tbWlzc2lvbiB3ZWJzaXRlIGZvciBhdmFpbGFibGUgam9icyBhbmQgb3Bwb3J0dW5pdGllcy4KU3Vydml2ZWQgYnkgaGlzIGxvdmluZyBzaXN0ZXIgSmVhbiBIdWdoZXMgKEVsbWVyICAgcHJlZGVjZWFzZWQpLCBicm90aGVyIEpvaG4gIlN5bCIgKE1hcmxlbmUpLCBSb25hbGQgKFBoeWxsaXMgcHJlZGVjZWFzZWQpLCBzaXN0ZXJzIGluIGxhdyBNYXJ5IExvdSAoUm9kIHByZWRlY2Vhc2VkKSwgTWFyaWUgV2lsbGlzIChSb2JlcnQgcHJlZGVjZWFzZWQpIGFuZCBtYW55IHNwZWNpYWwgbmllY2VzIGFuZCBuZXBoZXdzLiBKb2lucyBoaXMgc2libGluZ3MgRnJlZCwgU2FkaWUsIFJvZCwgQWxleCwgQ2F0aGVyaW5lIGFuZCBKb2huIERhbiBTdXJ2aXZlZCBhbHNvIGJ5IGhpcyBleHRlbmRlZCBmYW1pbHksIENhdGhlcmluZSBMdW9tYSAoQ2xpZmZvcmQpIGNoaWxkcmVuIFNhcmFoLCBBbGFuIGFuZCBKZXNzaWUsIEphY2sgTWFjRG9uYWxkIChIZWxlbiksIEphbWVzIE1hY0RvbmFsZCBwcmVkZWNlYXNlZC4gCiJUaGV5IHdlcmUgYWxtb3N0IHRoZSBsaWZlIG9mIHRoZSBwYXJ0eS4gClNwcmVhZCBtb2lzdHVyaXppbmcgbG90aW9uIG9yIGNyZWFtIG9uIHRoZSBzb2xlIG9mIHRoZSBmb290IG9yIG9uIHlvdXIgaGFuZHMuIApZb3UgbWFrZSB0aGUgYXNzdW1wdGlvbiB0aGF0IHRoZXkgd291bGQgbWFya2V0IGJhc2ljIGZpeGVzIGZvciBlbWJhcnJhc3NpbmcgYnVncywgSSBtYWtlIHRoZSBhc3N1bXB0aW9uIHRoYXQgdGhlc2UgYXJlIG5vdCBzb21ldGhpbmcgd29ydGggYWR2ZXJ0aXNpbmcgYW5kIGluc3RlYWQgaXQgc2hvdWxkIGJlIGEgZ2l2ZW4gdGhhdCB0aGV5IHdlcmUgZml4ZWQgd2hlbiBpdCBsaWtlIHRoZSA1dGggdmVyc2lvbiBvZiB0aGUgZ2FtZSBvciBzb21ldGhpbmcgbGlrZSB0aGF0LiAKRGVyIFdlc3RlbiBkZXIgSW5zZWwgaGF0IGRlbiBWb3J6dWcsIGRhc3MgZXMgZG9ydCB1bSBlaW5pZ2VzIHJ1aGlnZXIgdW5kIGJlc2NoYXVsaWNoZXIgenVnZWh0LiBFaW4gWmllbCBrIHp1bSBCZWlzcGllbCBQb250YSBkZWwgU29sIHNlaW4sIHZvbSBGbHVnaGFmZW4gYXVzIGJlcXVlbSBpbiA0NSBNaW51dGVuIHp1IGVycmVpY2hlbi4gClRoZSBBcmthbnNhcyBGYW1pbHkgQ291bmNpbCBpc24ndCByaWdodCBvZnRlbiBpbiBvdXIgZWRpdG9yaWFsIHZpZXcgICBhbmQgZG93bnJpZ2h0IG1lYW4gc3Bpcml0ZWQgaW4gdGhlIHByb2Nlc3MgZm9yIGFuIG9yZ2FuaXphdGlvbiBwdXRhdGl2ZWx5IGZvdW5kZWQgb24gQmlibGljYWwgcHJpbmNpcGxlcyAgIGJ1dCB3ZSdsbCBnaXZlIGNyZWRpdCB3aGVyZSBkdWUuIFBva2VyLCBibGFja2phY2sgYW5kIHNsb3QgbWFjaGluZXMgKGV1cGhlbWlzdGljYWxseSBrbm93biBhcyAicmVlbCBnYW1lcyIpIGFyZSBvbiBvZmZlci4gT3BlcmF0b3JzIG9mIHRoZSBnYW1ibGluZyBwYXJsb3JzIGhhdmUgaW5zaXN0ZWQgYW4gZWxlbWVudCBvZiBza2lsbCBpcyBwcmVzZW50IGluIGV2ZXJ5IGdhbWUsIHN1ZmZpY2llbnQgdG8gZGVmZWF0IHRoZSBjb25zdGl0dXRpb25hbCBwcm9oaWJpdGlvbiBvbiBnYW1lcyBvZiBjaGFuY2UgaW4gQXJrYW5zYXMuCiJXaGVuIGl0IGNvbWVzIHRvIGhvbW9zZXh1YWxpdHkgbWFueSBBZnJpY2FuIHJlbGlnaW91cyBsZWFkZXJzIHZpZXcgcHJvZ3Jlc3NpdmUgc29jaWFsIHdpdG5lc3Mgb24gTEdCVCBlcXVhbGl0eSBhcyBhICdXZXN0ZXJuIGFnZW5kYSwnIiBLYW9tYS4gCkdldHdyaXRlbm93IHUKVGhpcyBwYWdlIGlzIGp1c3QgZm9yIEN1cmF0b3JzIHRvIHNoYXJlIGluZm9ybWF0aW9uIGFib3V0IHVwZGF0ZXMgdG8gZXhpc3RpbmcgZW50cmllcy4gCkh1bWJvbGR0LiAKU28gSSBib3VnaHQgYSBiaWcgaGVhcnQgc2hhcGVkIGNob2NvbGF0ZSBib3gsIGF0ZSBhbGwgdGhlIGNob2NvbGF0ZXMgbXlzZWxmLCBhbmQgcmVwbGFjZWQgZWFjaCBzcGFjZSB3aXRoIGFuIGFwcHJvcHJpYXRlbHkgc2hhcGVkIGNodW5rIG9mIGplcmt5LiAKTXMgV2hpdGUgcGVyc29uYWwgdm90ZSB3YXMgYWxzbyBsb3dlciB0aGFuIG1vc3QgZXhwZWN0ZWQsIHBvbGxpbmcgMS40MyBxdW90YXMgaW4gdGhlIHNwcmF3bGluZyBydXJhbCBzZWF0IG9mIEx5b25zLCBhZnRlciB0cmF2ZXJzaW5nIHRoZSBzdGF0ZSBpbiBhIGZpdmUgd2VlayBwcmVzaWRlbnRpYWwgc3R5bGUgY2FtcGFpZ24uIExhYm9yIHdpbGwgYW5hbHlzZSB0aGUgcmVzdWx0cyBpbiB0aW1lIGFuZCBzZWUgd2hlcmUgdGhleSBjYW4gaW1wcm92ZS4gIkkgdGhpbmsgaXQgYSBsaXR0bGUgYml0IHRvbyBlYXJseSB0byBzdGFydCB0aGUgcG9zdCBtb3J0ZW0sIiBNcyBXaGl0ZSBzYWlkLiAKS2VlcCB5b3VyIG9iamVjdGl2ZXMgc3BlY2lmaWMsIHN1Y2ggYXMgY29tcGxldGluZyBhbiBvbmxpbmUgTWljcm9zb2Z0IEV4Y2VsIHR1dG9yaWFsIGJ5IG5leHQgbW9udGguIApCdXQsIGFzIHNvbWVvbmUgd2hvIGlzIGxpdmluZyBpbiBNb250cmVhbCBmb3IgYSBnb29kIHBhcnQgb2YgdGhpcyB5ZWFyLCBJIGFtIG1ha2luZyBhbiBlZmZvcnQuIEkgZ28gdG8gRnJlbmNoIGNsYXNzZXMuIAoiQnV0IHRoZSBwcm9ibGVtIHdpdGggYXRodW5kZXJzdG9ybWlzIHRoZSBzdHJvbmcgd2luZHMgdGhhdCBwcmVjZWRlIHRoZSBmcm9udCB3aGlwIHVwIHBvbGxlbnMgaW50byB0aGUgYWlyIGFuZCBydXB0dXJlIHRoZW1pbnRvIHRpbnkgZ3JhbnVsZXMsIHdoaWNoIGNhbiBieXBhc3MgdGhlIGZpbHRlciBzeXN0ZW0gaW4gdGhlIGFpcndheXMgYW5kIGdldCBpbnRvIHRoZSBsdW5nLiIgTGFzdCB3ZWVrIGF0IGhpcyBXYWdnYSBob21lLCBEciBHcmFoYW0gd2FzIHNlZWluZyBzb21lIG9mIHRoZSBoaWdoZXN0IHBvbGxlbiBjb3VudHMgaW4geWVhcnMgZm9ydHVuYXRlbHksIHRoaXMgd2VlaydzIHJhaW4gYnJvdWdodCBkb3duIHRob3NlIG51bWJlcnMuICJFYXJseSBpbmRpY2F0aW9ucyBhcmUgaXQncyBnb2luZyB0byBiZSBoaWdoIGNvdW50cyB0aGlzIHNlYXNvbiwiIGhlIHNhaWQuIApFZXJzdCByb2ViZWxzIGFmaGFsZW4sIGVuIGRhbiBzdGFwdGVuIHdlIGhldCBrbGVpbmUgZ2FtbWVsZSBhdXRvb3RqZSBpbiB2YW4gb256ZSBvdmVyaWdlbnMgaGVlbCBzeW1wYXRoaWVrZSB0YXhpIGNoYXVmZmV1ci4gRWVuIGJlZXRqZSByYWFyLCBtYWFyIGhpaiBnYWYgaGVlbCB2ZWVsIHVpdGxlZyBvbmRlcndlZyBkdXMgbmlldCB6byBlcmcuIEx1Y2h0aGF2ZW4gRG9tb2RlZG92byB2b2VsZGUgb25zIGhlZWwga2xlaW4gZW4gdmVyb3VkZXJkIGFhbiAodG9lbiB3ZSBlZW4gcGFhciBkYWdlbiBsYXRlciB3ZWVyIG5hYXIgaHVpcyBnaW5nZW4ga3JlZ2VuIHdlIGVlbiBhbmRlcmUgaW5kcnVrKS4gClRoZXJlIGlzIGFsc28gdGhlIHdob2xlIG1vcmJpZCBvYnNlc3Npb24gd2l0aCBkZWF0aC4gCk1pY3JvZ2FtaW5nIGNhc2lub3MgYXJlIGEgZmFpcmx5IGdvb2QgY2hvaWNlLCBvZmZlcmluZyBvdmVyIGEgZG96ZW4gd2F5cyB0byBwbGF5IG9ubGluZSB2aWRlbyBwb2tlciwgaGFsZiBvZiB0aGVtIGluICdwb3dlciBwb2tlcicgZm9ybWF0IHdpdGggdXAgdG8gNCBvciAxMCBoYW5kcyBwZXIgcGxheS4gVmVnYXMgVGVjaG5vbG9neSBpcyBhbm90aGVyIGdvb2Qgb3B0aW9uIGZvciBvbmxpbmUgdmlkZW8gcG9rZXIgbG92ZXJzLCBwcm92aWRpbmcgc2l4IHZhcmlhdGlvbnMgb2Ygc2luZ2xlIGhhbmQgdmlkZW8gcG9rZXIsIHNldmVuIDIgNCBoYW5kIGdhbWVzIGFuZCBEZXVjZXMgV2lsZCBpbiAxMCBoYW5kIHBsYXkuClNvIGNvdW50IHdoYXQgeW91IGhhdmUgaW4geW91ciBoYW5kIGFuZCB3aGF0IGJlZW4gcGxheWVkLCBhbmQgeW91IGtub3cgaG93IG1hbnkgb2YgZWFjaCBudW1iZXIgaXMgaW4gb3Bwb25lbnQgaGFuZCBhbmQgYm9uZSBwaWxlLCBtYWtpbmcgaXQgZWFzaWVyIHRvIGd1ZXNzIGlmIGhlIGhhcyBpdCBvciBub3Qucml2ZWp1ICAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvU28gaWYgeW91IGdvIHRvIEJyYW5keXdpbmUgZHJvcCwgbmVhciB3aGVyZSB0aGUgbGVnZW5kYXJ5IHNwYXducywgdGhlcmVzIGEgd2F5IHRvIGdldCBvbmUgdG8gc3Bhd24gbmVhcmx5IGV2ZXJ5IHRpbWUuIApFdmVuIGhhdmluZyBjb3JyZWN0ZWQgY2VudHJpZnVnYWwgdG8gY2VudHJpcGV0YWwsIHdoYXQgeW91IHNhaWQgZGlkbiBtYWtlIHNlbnNlLiBDZW50cmlmdWdhbCBmb3JjZSBzdGlsbCBkZXNjcmliZXMgaG93IHRoaW5ncyB3aWxsIHdhbnQgdG8gYXBwZWFyIHRvIGZseSBhd2F5IGZyb20gYSBzcGlubmluZyBvYmplY3QgdW50aWwgdGhleSBubyBsb25nZXIgY2FuLCBhdCB3aGljaCBwb2ludCBjZW50cmlwZXRhbCBmb3JjZSBkZXNjcmliZXMgaG93IHRoZXkga2VwdCBmcm9tIGRvaW5nIHNvLiBJbiB0aGlzIGNhc2UsIHRoYXQgd291bGQgbWVhbiBLaW1wZW1iZSBhcm0gbmF0dXJhbGx5IHdhbnRzIHRvIGZseSBvdXR3YXJkcyBmcm9tIGhpcyBzcGlubmluZyBib2R5LCBub3QgdGhhdCBpdCB3YW50cyB0byBzdGF5IGNsb3NlIHRvIGl0LiAKWW91IGNvdWxkIHNheSB0aGF0IHlvdSBnb3QgdGhlIGlkZWEgdG8gcGxhbiB0aGVzZSB0aGluZ3Mgb3V0IGZyb20gYSBtb21teSBibG9nIGFuZCB5b3Ugd2FudGVkIHRvIGdpdmUgaXQgYSB0cnkuLiAKUCBDaGllZiBCcmFuZCBPZmZpY2VyIGFuZCBBTkEgQ2hhaXJtYW4gTWFyYyBQcml0Y2hhcmQgd2Fzbid0IGF0IHRoZSB0YWxrLCBidXQgaGUgaGFkIHNvbWUgY291bnRlcnBvaW50cyBpbiBhbiBpbnRlcnZpZXcgbGF0ZXIuIEhlIHNheXMgUCBoYXMgbGF1bmNoZWQgbW9yZSB0aGFuIDEwMCBzZWVkIHN0YWdlIGV4cGVyaW1lbnRzIHJlY2VudGx5IGFuZCBldmVuIHR1cm5lZCBpdHMgYmlnIGVzdGFibGlzaGVkIGJyYW5kcyBsb29zZSB0byBkbyBkaXJlY3QgdG8gY29uc3VtZXIgc2FsZXMgcmVjZW50bHkgdG8gYWN0IG1vcmUgbGlrZSBzdGFydHVwcy4uIAoyLiB0aGUgc3RhdGUgb2YgYmVpbmcgY29uZnJvbnRlZC4KQSB3b21hbiBzdWZmZXJlZCBzZXJpb3VzIGluanVyaWVzIHRvIGhlciBhcm0gYWZ0ZXIgYmVpbmcgYXR0YWNrZWQgYnkgYSBqYWd1YXIgYXQgV2lsZGxpZmUgV29ybGQgWm9vLCBBcXVhcml1bSBhbmQgU2FmYXJpIFBhcmssIGp1c3Qgb3V0c2lkZSBQaG9lbml4LCBvbiBTYXR1cmRheS4gVGhlIHdvbWFuIHdhcyBhdHRlbXB0aW5nIHRvIHRha2UgYSBzZWxmaWUgd2hlbiB0aGUgYW5pbWFsIHJlYWNoZWQgb3V0IGFuZCBzd2lwZWQgYXQgaGVyLCBhY2NvcmRpbmcgdG8gdGhlIFJ1cmFsIE1ldHJvIEZpcmUgRGVwYXJ0bWVudC4KV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rRmFtaWx5IGFuZCBLaWRzTXVzaWMgYW5kIEdpZ3NUViBHdWlkZVRoZSBTaGFuZSBXYXJuZSBGb3VuZGF0aW9uIHRyaWVkIHRvIGhhdmUgaXRzIHJlY29yZHMgZGVjbGFyZWQgY29uZmlkZW50aWFsIGJ5IHRoZSBuYXRpb25hbCBjaGFyaXR5IHJlZ3VsYXRvciB1bmRlciBhIGZlZGVyYWwgbGF3IHRoYXQgaGFzIGJlZW4gdXNlZCB0byBwcm90ZWN0IHRoZSBzYWZldHkgb2YgZmFtaWx5IHZpb2xlbmNlIGNoYXJpdGllcy4gSXQgb25lIGluIGEgc2VyaWVzIG9mIG1lYXN1cmVzIHRha2VuIHRvIGF2b2lkIHB1YmxpYyBzY3J1dGlueSBvZiB0aGUgY3JpY2tldGluZyBsZWdlbmQgcGVyc29uYWwgY2hhcml0eSxub3cgYmVpbmcgaW52ZXN0aWdhdGVkIGJ5IFZpY3RvcmlhIGNvbnN1bWVyIHdhdGNoZG9nIG92ZXIgaXRzIGFjY291bnRpbmcgcHJhY3RpY2VzLiBUaGUgcHJvYmUgY29tZXMgYXMgdGhlIGZvdW5kYXRpb24gaGFzIGJlZW4gb3ZlcnN0YXRpbmcgaXRzIGN1cnJlbnQgZmluYW5jaWFsIHBvc2l0aW9uIGluIGEgYmlkIHRvIGNvdW50ZXIgbmVnYXRpdmUgcHVibGljaXR5IGFib3V0IGl0cyBwcmFjdGljZSBvZiBkb25hdGluZyBqdXN0IDE2b2YgZXZlcnkgZG9sbGFyIHJhaXNlZCBvbiBiZWhhbGYgb2YgY2hhcml0aWVzIHRoYXQgY2FyZSBmb3Igc2ljayBhbmQgdW5kZXJwcml2aWxlZ2VkIGNoaWxkcmVuLiAKRnJvZXNlLCB3aG8gZ3JldyB1cCBpbiBhIGZhcm1pbmcgZmFtaWx5IGFuZCBoYXMgbGl2ZWQgaW4gTGFuZ2xleSBmb3IgNDAgeWVhcnMsIGJlbGlldmVzIGFkZXF1YXRlIGVmZm9ydCBpcyBiZWluZyBtYWRlIHRvIHByb3RlY3QgdGhlIHRvd25zaGlwIGZhcm1sYW5kLiAKQWNjZXB0YW5jZSBhbmQgcHJlc2VudCBtb21lbnQgZm9jdXMgaXMgdGhlIGtleS4gWW91IGFyZSBhd2FyZSB5b3UgbWFkZSBzb21lIGNob2ljZXMgaW4gdGhlIHBhc3QgdGhhdCBnb3QgeW91IHRvIHRoaXMgcG9pbnQgYW5kIHRoYXRzIGZpbmUuIApbQnJpc29uIGRlcGFydHVyZV0gbGVmdCB1cyB0d28gbGFyZ2UgY2hhbGxlbmdlcyB0aGF0IGNvdWxkIG5vdCBiZSBzb2x2ZWQgd2l0aCBvbmUgcGVyc29uLiAKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c1RWIEd1aWRlQSBzdG9ybSB3YXMgb24gdGhlIGhvcml6b24gd2hlbiBKYW1lcyBTaGF3IGFuZCBoaXMgdGVhbSB3ZXJlIGRyaXZpbmcgYmFjayBmcm9tIEJlbmFsbGEgb24gTm92ZW1iZXIgMywgMjAxNSwgY2VsZWJyYXRpbmcgYSB3aW4gcmVwcmVzZW50aW5nIHRoZSBBbGJ1cnkgV29kb25nYSBFaWdodCBCYWxsIEFzc29jaWF0aW9uLiBMYXRlciB0aGF0IGRheSwgSmFtZXMgd2FzIGF0IGhpcyBwYXJ0bmVyJ3MgaG91c2Ugd2hlbiBoaXMgYnJlYXRoaW5nIGJlZ2FuIHRvIHdhbmUsIGEgZmVlbGluZyBmYW1pbGlhciB0byB0aGUgbGlmZSBsb25nIGFzdGhtYSBzdWZmZXJlci4gClJlcXVpcmUgaW5kaXZpZHVhbHMgcmVxdWVzdGluZyBwZXJzb25hbCBpbmZvcm1hdGlvbiB0byBnbyB0aHJvdWdoIGEgY2VydGFpbiBwcm9jZWR1cmUgaW4gb3JkZXIgdG8gZW5zdXJlIHRoYXQgdGhleSB2YWxpZGF0ZSB0aGVpciBpZGVudGl0eS4gSXQgaXMgYWxzbyBpbXBvcnRhbnQgdG8gZW5zdXJlIHRoYXQgeW91IGFyZSBjYXJlZnVsIGFib3V0IHdoYXQgeW91IHNlbmQgYnkgZW1haWwgYW5kIGRpcmVjdCBtYWlsLiAKSXQgd291bGQgYmUgaW50ZXJlc3RpbmcgdG8gY29tcGFyZSB0aGlzIHNvcnQgb2YgZXZlbnQgd2l0aCBwYXN0IGV2ZW50cy4gSW1tZWRpYXRlbHkgY29taW5nIHRvIG1pbmQgaXMgV2VzdGVybiBzZXR0bGVycyBzaG93aW5nIHVwIGluIHRoZSBBbWVyaWNhcy4gClVubGVzcyB5b3UgYWltIHRvIHN0YXJ0IGEgcHJvZmVzc2lvbmFsIHRyYXZlbCB2bG9nLCB5b3UgdHJ1bHkgZG9udCBuZWVkIGV4dHJhIGNhbWVyYXMgYW5kIFNEIGNhcmRzLiAKSW5mb3JtYXRpb24gb24gaG93IHRvIHVzZSBhIHByb3h5IGNhbiBiZSBmb3VuZCBvbiB0aGUgcmVsYXRlZCBsaW5rcyBvZiB0aGlzIHF1ZXN0aW9uLiBUaGUgYmVzdHNpdGUgb24gdGhhdCBuZXR3b3JrIGlzIGJ5IGZhciBDYXJib24gUG9rZXIuIApQbGF5ZXJzIGFsc28gc3RhbmQgYSBjaGFuY2UgdG8gd2luIG1vbmV5IGluIHRoaXMgcG9rZXIgcm9vbSB3aXRob3V0IGV2ZW4gc2hlZGRpbmcgYSBwZW5ueS4gCktlbGx5J3Mgb3VzdGVyIGZvbGxvd2VkIGEgc2VnbWVudCBhYm91dCBwb2xpdGljYWwgY29ycmVjdG5lc3MgYW5kIEhhbGxvd2VlbiBjb3N0dW1lcywgd2hlbiBzaGUgcXVlc3Rpb25lZCB3aHkgd2VhcmluZyBibGFja2ZhY2Ugd2FzIHVuYWNjZXB0YWJsZS4gVGhlIHJlbWFya3MgdHJpZ2dlcmVkIG91dHJhZ2UgYXQgTkJDIGFuZCBiZXlvbmQsIHByb21wdGluZyBoZXIgdG8gYXBvbG9naXplIG9uIHRoZSBhaXIuCkluIG15IGNhc2UsIEkgbmV2ZXIgd2FzIGhhcHB5IGxpdmluZyBoZXJlIChVdGFoKSwgYnV0IGhhZG4gYmVlbiBhbnl3aGVyZSBlbHNlIHRoYXQgc2VlbWVkIGxpa2UgaXQgd291bGQgYmUgYW4gb3ZlcmFsbCBpbXByb3ZlbWVudC4gCkFuZCBJTURiIGp1c3QgbGF1bmNoZWQgYSBuZXcgc3RyZWFtaW5nIHNlcnZpY2UsICJ3aGljaCBhbGxvd3Mgdmlld2VycyB0byB3YXRjaCBmcmVlIG1vdmllcyBhbmQgVFYgc2hvd3Mgc3VwcG9ydGVkIGJ5IGNvbW1lcmNpYWxzLCBvcGVuaW5nIGEgbmV3IHdlYWx0aCBvZiBhZCBpbnZlbnRvcnkgdG8gc2VsbCB0byBicmFuZHMsIiBBZCBBZ2UncyBHYXJldHQgU2xvYW5lIHdyaXRlcy4gCkV2ZXJ5b25lIGVsc2UgaXMgdmFzdGx5IG92ZXJyYXRpbmcgdGhlIGltcG9ydGFuY2Ugb2Ygc2tpbGwuIEN1bHR1cmUgbWF0dGVycyBtb3JlIHRoYW4gc2tpbGwuIFdvbWVuIHRlbm5pcyBpcyBhbiBvYnZpb3VzIHByb2ZpdGFibGUgYW5kIHByZXRpZ2lvdXMgY29tcGV0aXRpb24gdGhhdCBkb2VzIHdlbGwgZGVzcGl0ZSBub3QgYmVpbmcgdGhlIGFwZXggb2YgdGhlIHNwb3J0LiAKRURJVDogSSBmb3Jnb3QgaG93IHRoZSBhcG9sb2dpc3RzIHRlbmQgdG8gY3Jhd2wgb3V0IG9mIHRoZSB3b29kd29yayB3aGVuZXZlciBiZXN0aWFsaXR5IGlzIG1lbnRpb25lZC4gCkluIGNvbnRyYXN0LCB0aGUgaGVhZHMgb2YgdGhlIGRlc2lnbiBidXJlYXVzIGFuZCBtdW5pdGlvbnMgZmFjdG9yaWVzIGluIHRoZSBVU1NSIGRpZG4gaGF2ZSB0aG9zZSBzYW1lIGluY2VudGl2ZXMsIHNvIHRoZXkgcHJvYmFibHkgaGFkIHRvIG1ha2UgdGhlIGNhc2UgdG8gdGhlIGhpZ2hlciB1cHMgdGhhdCB0aGV5IHNob3VsZCBrZWVwIGdvaW5nLi4gClBob3RvIENyZWRpdHMgSnVzdGluIFN1bGxpdmFuL0dldHR5IEltYWdlcyBOZXdzL0dldHR5IEltYWdlc0NvcHkgQ2l0YXRpb24gTm90ZTogRGVwZW5kaW5nIG9uIHdoaWNoIHRleHQgZWRpdG9yIHlvdSdyZSBwYXN0aW5nIGludG8sIHlvdSBtaWdodCBoYXZlIHRvIGFkZCB0aGUgaXRhbGljcyB0byB0aGUgc2l0ZSBuYW1lLgoiU3Rha2VzIiBhZGFsYWgganVtbGFoIHlhbmcgYmlzYSBkaXBlcnRhcnVoa2FuIGRpIHNldGlhcCBnaWxpcmFuLCBzZW1lbnRhcmEgIk1pbi9NYXggQnV5SW4iIGFkYWxhaCBiaWF5YSBiZXJnYWJ1bmcgcGFkYSBzZWJ1YWggbWVqYS5LZWJhbnlha2FuIG1lamEgbWVtaWxpa2kgdGluZ2thdCBrZXN1bGl0YW4geWFuZyB1bXVtLCB5YW5nIGRpdHVuanVra2FuIGRpIHNlYmVsYWggbmFtYSBtZWphbnlhLiBIYWwgaW5pIGJpc2EgbWVtYmFudHUgQW5kYSBtZW1iYXlhbmdrYW4gbGF3YW4geWFuZyBha2FuIEFuZGEgaGFkYXBpLCB0ZXRhcGkga2V0YWh1aWxhaCBiYWh3YSBiYW55YWsgb3JhbmcgbXVuZ2tpbiBha2FuIG1lbmdlbGFidWkgQW5kYSBtZW5nZW5haSBrZWFobGlhbm55YS5BbmRhIGJpc2EgbWVueWVtYnVueWlrYW4gbWVqYSBtZWphIHlhbmcga29zb25nIGRhbiBwZW51aCBkZW5nYW4gbWVuY2VudGFuZyBrb3RhayBrb3RhayB5YW5nIHNlc3VhaSBkaSBiYWdpYW4gYmF3YWggZGFmdGFyIG1lamEuUGVyaWtzYSBwZXJrZW1iYW5nYW4gQW5kYS4gCihuaW5qYSBlZGl0IGJlY2F1c2UgSSBmb3Jnb3Qgc29tZXRoaW5nKQpEbyB1bmRlcnN0YW5kLCBldmVuIGZyb20gbXkgb3duIGV4cGVyaWVuY2UsIHRoZSBuZWVkIHRvIHNpbXBsaWZ5IGFuZCBwYXJlIGRvd24sIHNheXMgQ2FybGF3LCB3aG8gcmVjZW50bHkgbW92ZWQgZnJvbSBhIDQsMjAwIHNxdWFyZSBmb290IGhvbWUgdG8gYSAxLDYwMCBzcXVhcmUgZm9vdCBob21lIHdpdGggaGVyIGZhbWlseSBvZiBmb3VyIGFmdGVyIGZhbGxpbmcgaW4gbG92ZSB3aXRoIGEgcnVyYWwgcHJvcGVydHkuIFdpdGggcmVnYXJkcyB0byBob3cgY3Jhenkgb3VyIGxpdmVzIGFyZSByaWdodCBub3csIHdpdGggc29jaWFsIG1lZGlhIGFuZCB0aGUgYnVzeSBuZXNzIG9mIG91ciBsaXZlcyBhbmQgdHJ5aW5nIHRvIGZpdCBzbyBtdWNoIGludG8gb3VyIGRheSwgSSBkbyB0aGluayBpdCBpbXBvcnRhbnQgdGhhdCB5b3UgZG9uIGNvbWUgaG9tZSB0byBjaGFvcy4gRGVzaWduZXJzIGhhdmUgYSB3ZWFsdGggb2Yga25vd2xlZGdlIG9uIGhvdyB0byBiZXR0ZXIgb3JnYW5pemUgYW5kIHNpbXBsaWZ5IGhvbWVzLCBzYXlzIENhcmxhdywgYnV0IHBlb3BsZSBjYW4gYmUgYWZyYWlkIG9mIHRoZSBjb3N0IG9mIGVtcGxveWluZyB0aGVpciBzZXJ2aWNlcy4uIApPdXIgcGh5c2ljaWFucyBhcmUgd29ybGQgbGVhZGVycyBpbiB0aGUgZGlhZ25vc2lzIGFuZCB0cmVhdG1lbnQgb2YgY29tcGxleCBpbGxuZXNzZXMsIGFuZCBvdXIgaG9zcGl0YWxzIGFyZSBhbW9uZyB0aGUgYmVzdCBpbiB0aGUgY291bnRyeS4gTmV3cyBXb3JsZCBSZXBvcnQsIFJvbmFsZCBSZWFnYW4gVUNMQSBNZWRpY2FsIENlbnRlciBpcyBhdCB0aGUgY3V0dGluZyBlZGdlIG9mIGJpb21lZGljYWwgcmVzZWFyY2gsIGFuZCBvdXIgZG9jdG9ycyBhbmQgc2NpZW50aXN0cyBhcmUgbGVhZGVycyBpbiBwZXJmb3JtaW5nIHBpb25lZXJpbmcgd29yayBhY3Jvc3MgYW4gYXN0b3VuZGluZyByYW5nZSBvZiBkaXNjaXBsaW5lcywgZnJvbSBvcmdhbiB0cmFuc3BsYW50YXRpb24gYW5kIGNhcmRpYWMgc3VyZ2VyeSB0byBuZXVyb3N1cmdlcnkgYW5kIGNhbmNlciB0cmVhdG1lbnQsIGFuZCBicmluZ2luZyB0aGUgbGF0ZXN0IGRpc2NvdmVyaWVzIHRvIHZpcnR1YWxseSBldmVyeSBmaWVsZCBvZiBtZWRpY2luZS4KVGhlIHBvbGl0aWNpYW5zIHdpbGwga2VlcCBkYW5jaW5nIGFuZCBwcmFuY2luZyB1bnRpbCB0aGUgbXVzaWMgc3RvcHMuCklNTyBJVFMgU08gSU5DT05TSVNURU5UIFRIQVQgVEhFWSBDT1VMRCBBUkdVQUJMWSBMRUFWRSBJVCBBUyBJUy4gCkhvd2V2ZXIsIHRoZXJlIGFyZSBhbHNvIG5vbiBBbWVyaWNhbiByZXNpZGVudHMgdGhhdCBjb21wZXRlIGFuZCB3aW4hIFJvYmVydCBTcmxpZSBmcm9tIE5vcndheSB3YXMgdGhlIGZpcnN0IHRvIHdpbiBpbiAyMDAzLiBUaGlzIHllYXIsIHRoZXJlIDgsIGZvdXIgZnJvbSBDYW5hZGEsIHR3byBmcm9tIE5vcndheSwgb25lIGZyb20gU3dlZGVuLCBhbmQgb25lIGZyb20gRnJhbmNlLgpUaGUgY292ZXIgb2YgUGVuZ3VpbidzIHBhcGVyYmFjayBlZGl0aW9uIG9mIFRoZSBQZXJmZWN0IE5hbm55IGlzIGFyY2hldHlwYWwgb2YgYSBjZXJ0YWluIGtpbmQgb2YgcG9wdWxhciBmaWN0aW9uLiBJdCBkZXBpY3RzIHRoZSBvbWlub3VzIHVwcGVyIHRvcnNvIG9mIGEgd29tYW4gb2YgaW5kZXRlcm1pbmF0ZSBhZ2UsICJlbGVnYW50IGluIGhlciBibG91c2UsIiBhcyBzaGUgaXMgZGVzY3JpYmVkIGluIHRoZSBib29rLCB3aXRoIGl0cyAic2t5IGJsdWUgUGV0ZXIgUGFuIGNvbGxhci4iIFRoZSB0aXRsZSAgIGludmVudGVkIGJ5IHRoZSBwdWJsaXNoZXIgZm9yIHRoZSBBbWVyaWNhbiB0cmFuc2xhdGlvbiAgIGlzIGVtYm9zc2VkIGluIGEgZGVlcCBuYXZ5IGZvaWwsIGdsZWFtaW5nIHdoZW4gaXQgY2F0Y2hlcyB0aGUgbGlnaHQuIE91ciBpbWFnaW5hdGlvbnMgcHJvdmlkZSB0aGUgbWlzc2luZyBleHByZXNzaW9uLCBzdXJlIHRvIGJlIGFwcGVuZGVkIGluIGEgbGF0ZXIgcHJpbnRpbmc6IE5vdyBhIE1ham9yIE1vdGlvbiBQaWN0dXJlLiAKSSB3cm90ZSBvbmUgb2YgdGhvc2UgbG9uZyBsZXR0ZXJzIHRvIG15IG1vbSBvbmNlLiBJdCB3YXMgYWZ0ZXIgMjIgeWVhcnMgb2YgYXJndW1lbnRzLCBiZWhhdmlvciB0aGF0IGh1cnQgbWUsIGF3ZnVsIGJsb3dzIHVwcywgZXRjLiAKVGhlIGp1ZGdlIHNhaWQgdGhlIHdpdG5lc3MgaW4gdGhlIHdpdG5lc3MgYm94IGFuZCBzYWlkIHRoYXQgdGhlIGxpZXMgdGhlIGNvdXJ0IGhlYXJkIHdlcmUgdGhlIGxlYXN0IHVuZWRpZnlpbmcgYW5kIGF0IHdvcnN0IHNpbmlzdGVyIGp1ZGdlIGZvdW5kIHRoYXQgdGhlIHByb3NlY3V0aW9uIHByb3ZlZCB0aGUgdHJlc3Bhc3NpbmcgY2hhcmdlIGFuZCBzYWlkIHRoYXQgTXIgTWF1Z2hhbiBldmlkZW5jZSwgaW4gaGVyIGJlbGllZiB3YXMsIHVudHJ1dGhmdWwgd2hvIGhhcyB0d28gcHJldmlvdXMgY29udmljdGlvbnMsIHdhcyBjb252aWN0ZWQgYW5kIGZpbmVkIGZvciB0cmVzcGFzc2luZyBhbmQgc2VudGVuY2VkIHRvIHRocmVlIG1vbnRocyBpbiBwcmlzb24uLiAKT2theSwgY2FsbCBtZSBhbiBpZGlvdCwgYnV0IHRoZSBvd25lciBvZiBhIGRlZmVuc2UgY29udHJhY3RpbmcgY29tcGFueSBtYW5hZ2VkIHRvIHdoaXAgdXAgcGF0cmlvdGljIHNwaXJpdCBmb3IgdGhlIG1pbGl0YXJpc3RpYyBsaWtlcyBvZiBTYXJhaCBQYWxpbiwgd2hvIHdpbGwsIG5vIGRvdWJ0LCBydW4gZm9yIFByZXNpZGVudCBhbmQgdGhlIHByZXNzIGNvdmVyZWQgaXQgc3RhcnQgdG8gZmluaXNoPyBBbmQgTXMuIE1hcGxlcyBoYXMgYW4gZXh0cmEgJDY1SyBzaXR0aW5nIGFyb3VuZCBhbmQgc2hlIGFuIGlkaW90PwpJbCBuJ3kgYSBwYXMgcXVlIGxlIGNsaW1hdCBxdWkgZGlmZnJlIGxvcnNxdSdvbiBjaG9pc2l0IGRlIHZpdnJlIGF1IHNvbGVpbCBwZW5kYW50IGxlcyBtb2lzIGQnaGl2ZXIuIExlIGNvdCBkZXMgc29pbnMgZGUgc2FudCBhdXggdGF0cyBVbmlzIGVuIGVzdCB1biBib24gZXhlbXBsZS4KSSBoYXZlIGEgbGl0dGxlIHBhaW4gcHVtcCBJIGNhbiBwcmVzcyBmb3IgcGFpbiByZWxpZWYuLiAKQWxzbywgdGhpcyBwb3N0IGlzbiB0aGUgcmVhc29uIHRoZSBGR0MgaGF0ZXMgdXMuIApIb3dldmVyLCBpZiB0aGlzIGRvZXMgbm90IGFwcGx5IHRvIHlvdSwgYXZvaWQgdGhlc2UgY2hpcHMgYXQgYWxsIGNvc3RzISBGb3IgbW9yZSB2YWx1YWJsZSBpbmZvcm1hdGlvbiwgYmUgc3VyZSB0byByZWZlciB0byB0aGUgIlJlc291cmNlcyIgc2VjdGlvbiBsaXN0ZWQgYmVsb3chLiAKSSBhbiBhZHVsdCwgSSBrbm93IHdoYXQgdGhleSBhcmUsIGFuZCB0aGV5IGFyZSBzdGlsbCBmdWNraW5nIHRlcnJpZnlpbmcuIApXaGlsZSB0aGVyZSB0aGV5IHRyaWVkIHRvIGRlbnkgaGVyIHRoZSBtb3JwaGluZSBkcmlwIHNoZSBuZWVkZWQgdG8gbWFuYWdlIHRoZSBlbmQgb2YgbGlmZSBwYWluIGZyb20gdGhlIGNhbmNlciB0aGF0IHdhcyBlYXRpbmcgaGVyIGlubmFyZHMuIApXaGVuIHByZXNpZGVudGlhbCBzcG9rZXNwZXJzb25zIGV4cHJlc3MgaW5kaWduYXRpb24gYXQgdGhlIEtlcnJ5IEx1Z2FyIEJpbGwgb3V0cmFnZSBhcyBiZWluZyBhIHByb3h5IGZvciBvcHBvc2l0aW9uIHRvIHRoZSBwcmVzaWRlbnQgdGhleSBhcmUgc2ltcGx5IGxpdmluZyBvdXQgdGhlIHN0cnVjdHVyYWwgYW5kIGNvbnRleHR1YWwgcmVhbGl0eSBvZiB0aGUgb2ZmaWNlIG9mIHByZXNpZGVudCBpbiBhIFBha2lzdGFuIHRoYXQgaXMgZ292ZXJuZWQgYnkgYSBtdXRpbGF0ZWQgQ29uc3RpdHV0aW9uLi4gCk1hcmtvcyBiYWlsZWQgb24gb3ZlciAxMCB5ZWFycyBvZiBwb2xpY3kgcG9zaXRpb25zLCBvZnRlbiBhZGFtYW50bHkgc3RhdGVkLCB0byB3ZWlnaHQgdGhlIHNjYWxlcyBmb3IgJGhpbGxhcnkgaW4gdGhlIHByaW1hcmllcy4gCk5vdmVtYmVyIDEzLCAyMDEwClRoZSBjaGFwdGVyIGhlbHBzIGxvY2FsIGF1dGlzdGljIHNwZWN0cnVtIGNpdGl6ZW5zIHdpdGggYW55IHNwZWNpYWwgbmVlZCBhbGxvd2luZyB0aGVtIHRvIHdvcmsgb3IgZ28gdG8gc2Nob29sIGluIGEgbm9ybWFsIGNhcGFjaXR5LiAKQ3JlYXRpbmcgeW91ciBvd24gMzVtbSBmaWxtIGlzIGFscmVhZHkgYSBiaXQgb2YgYSBjb21wbGljYXRlZCBwcm9jZXNzLCBhbmQgYWRkaW5nIHRoZSBkZXZlbG9waW5nIGNoZW1pY2FsIHBhc3RlIGludG8gdGhlIG1peCBmdXJ0aGVyIGNvbXBsaWNhdGVzIHRoaW5ncy4gVGhpcyBwYWdlIGhhcyBhIGdvb2QgZ2xpbXBzZSBhdCB0aGUgY29tcGxleCBuYXR1cmUgb2YgaW5zdGFudCBmaWxtLiBVbmxlc3MgeW91IGhhdmUgdGhlc2Ugc29ydHMgb2YgcmVzb3VyY2VzIGF0IHlvdXIgZGlzcG9zYWwgYWxyZWFkeSwgSSBkb3VidCBpdCB3b3VsZCBiZSB3b3J0aHdoaWxlLiBBcyBNaWNoYVdoYSBzYWlkLCBQb2xhcm9pZCBPcmlnaW5hbHMgc3BlbnQgeWVhcnMgZ2V0dGluZyB0aGVpciBmaWxtIHRvIHRoZSBsZXZlbCBvZiAicmVsaWFibGUiIGFuZCBpdCBzdGlsbCBub3QgZXZlbiBjbG9zZSB0byB0aGUgb3JpZ2luYWwgZm9ybXVsYSBpbiB0ZXJtcyBvZiBxdWFsaXR5IHlldC4KQmxvZ3MgZnJvbSB0aGUgc3RyZWV0cyBvZiBTb3V0aCBBZnJpY2EKVGhlIGJhc2Uod2hhdCB5b3Ugc2VlIGluIE9QcyBwaWN0dXJlKSBzaG9vdHMgaG90IGFpciB1cCBpbnRvIHRoZSBjaGFtYmVyIHdoZXJlIHRoZSB3ZWVkIGlzIHdoaWNoIHZhcG9yaXplcyBpdCBhbmQgdGhlIGNoYW1iZXIgaXMgYXR0YWNoZWQgdG8gYSBiaWcgYmFnIHdoaWNoIGZpbGxzIHVwIHdpdGggdGhlIHZhcG9yKHRoaW5rIGJhbGxvb24gd2l0aCBhIG5venpsZSBvbiBpdCkuIApIdWdlbmVyYWw2NDcgIDY5IHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhleSBhbXBsaWZ5IHRoZSBzdHJlbmd0aHMgb2YgIm9yZGluYXJ5IiBlbW90aW9uYWwgZW5nYWdlbWVudCAgIGVzcGVjaWFsbHkgdGhlIGFiaWxpdHkgdG8gcmVkdWNlIHByaWNlIHNlbnNpdGl2aXR5ICAgYW5kIGluIGdlbmVyYWwsIHRoZXkgYXJlIHRoZSByZWFsIGhpZ2ggZmxpZXJzIGFtb25nIHRoZSBJUEEgRGF0YWJhbmsgY2FzZXMuIEJ1c2luZXNzLiAKTGV0IGhhdmUgc29tZSBvZiB0aGF0LiBTb3VuZHMgZ29vZC4gQW5kIEthdGllIGdyYWIgcGFwZXIgcGxhdGVzIGFuZCBzbGljZXMgb2YgcGl6emEuIApUaGF0J3Mgd2h5IEkgd29yayBmdWxsIHRpbWUsIEknbSBpbiBzY2hvb2wsIEkgcXVhbGlmeSBmb3IgZm9vZCBzdGFtcHMsIEFORCBteSBtb20gaGFzIHRvIHBheSBhbGwgb2YgbXkgcmVudCwgaW5zdXJhbmNlLCBhbmQgcGhvbmUgYmlsbCwgYW5kIGJvdWdodCBtZSBteSBjYXIuIApJIGp1c3QgdGllZCBhIGJvd2xpbmUgb24gb25lIGVuZCBhbmQgZmVkIHRoZSBvdGhlciBlbmQgdGhyb3VnaCB0aGUgTGluZSBMb2sgYWRqdXN0b3IuIEkgYW0gYWN0dWFsbHkgZ29pbmcgdG8gdHJ5IHRoZXNlIHJlZ3VsYXIgTGluZSBMb2NzIGFzIHRoZXkgc2VlbSBsaWtlIHRoZXkgd291bGQgYmUgZWFzaWVyIGFuZCByZXF1aXJlIGEgYml0IGxlc3MgbGluZSBuZXh0IHdlZWsuIEkgd2lsbCByZXBvcnQgYmFjayB3aGljaCBvbmVzIEkgbGlrZSBiZXR0ZXIgb24gdGhlIEdhdGV3b29kLiAKTGVhcm5pbmcgdG8gbWFuYWdlIHN0cmVzcyBpbiBhIGhlYWx0aHkgYW5kIG5hdHVyYWwgd2F5IGlzIGVzc2VudGlhbCB0byBnb29kIGhlYWx0aCBhbmQgaGFwcGluZXNzLiBPbmUgb2YgdGhlIGVhc2llc3QgdGhpbmdzIHlvdSBjYW4gZG8gdG8gcmVsaWV2ZSBzdHJlc3MgaXMgdG8gdGFrZSBhIHNob3dlci4gCkkgZGlkbiBsb3ZlIEhhd2tlIGxpa2UgSSBsb3ZlZCBteSBJbnF1aXNpdG9yIGFuZCBXYXJkZW4gYW5kIGZvciBtZSB0aGF0IHRoZSBtb3N0IGltcG9ydGFudCB0aGluZyBpbiB0aGVzZSBnYW1lczogdGhlIHBsYXllciBjaGFyYWN0ZXIgYW5kIHJvbGVwbGF5LiBJIGRpZG4gbGlrZSB0aGUgY29tcGFuaW9ucyBhcyBtdWNoIGVpdGhlciwgYnV0IGl0IHN0aWxsIGEgdmVyeSBnb29kIGdhbWUgZXNwZWNpYWxseSB3aGVuIGNvbXBhcmVkIHRvIG1vc3Qgb3RoZXIgdmlkZW8gZ2FtZXMgb3V0IHRoZXJlLiAxIHBvaW50ICBzdWJtaXR0ZWQgMyBkYXlzIGFnb0kgbm90IHNheWluZyBpdCBwZXJmZWN0LCBmYXIgZnJvbSBpdC4gClRpcHMgZm9yIG5lZ290aWF0aW5nIHRoZSBiZXN0IHByaWNlIG9uIHlvdXIgbmV3IGhvbWUKKFBob3RvIGJ5IEJyaWRnZXQgQkVOTkVUVCAvIEFGUCkgKFBob3RvIGNyZWRpdCBzaG91bGQgcmVhZCBCUklER0VUIEJFTk5FVFQvQUZQL0dldHR5IEltYWdlcykuIApIb3cgbXVjaCBpcyB0aGUgdGhlIGtpZG5hcHBpbmcgY29zdGluZyB5b3UgZnJvbSB0aGUgaG9zcGl0YWwgcGVyIGRheS90b3RhbCBzdGF5IHNpbmNlIHlvdSB3ZXJlIHRoZWlyICJndWVzdCBvZiB2YWNhdGlvbiB5b3UgY291bGRuIHJlZnVzZSI/IFRlbXAgcHN5Y2ggaG9sZCBpcyB3b3JzZSB0aGFuIGJlaW5nIGFycmVzdGVkLgpTcXVpbGxhbnRlIGFuZCBXaWxsaWFtIEFsbGFuIENvbGxvbW9yZSwgYm90aCBvZiBQYWxtIEJheSwgZ290IHByaXNvbiBzZW50ZW5jZXMgb2YgMzMgbW9udGhzLCBvbmUgeWVhciwgYW5kIDM3IG1vbnRocywgcmVzcGVjdGl2ZWx5LiAKWW91IGhhdmUgdG8gcGFzcyBhIG1lZGljYWwgY2hlY2t1cCAobWFuZGF0b3J5IGZvciBwdWJsaWMgc2Nob29scyBvbmx5KSB3aGljaCB5b3UgZG8gYXQgYSBob3NwaXRhbCB3aXRoaW4gdGhlIGZpcnN0IG1vbnRoIG9mIGFycml2YWwsIGJ1dCB0aGVyZSBub3QgYSBtZWRpY2FsIGJheSBhdCBJbmNoZW9uIHdoZXJlIGFsbCBFbmdsaXNoIHRlYWNoZXJzIGFyZSBzdWJqZWN0ZWQgdG8gbmVlZGxlcyBhbmQgcGxhc3RpYyBjdXBzLiAoSSBiZWVuIGhlcmUgc2luY2UgMjAwOCBidHcuIFdhcyBhbiBFbmdsaXNoIHRlYWNoZXIgZm9yIHNpeCB5ZWFycy4pIFNvLCB1bmxlc3MgdGhpcyB3YXMgYmVmb3JlIG15IHRpbWUgZnJvbSBvdmVyIGVsZXZlbiB5ZWFycyBhZ28sIEkgdGhpbmsgeW91IG1pc3Rha2VuLi4gCkFuZCB0aGVpciBhbGJ1bSBEZWxvdXNlZCBpbiB0aGUgQ29tYXRvcml1bSB3YXMgaW5zcGlyZWQgYnkgdGhlIHN0dWZmIHRoZXkgdGhvdWdodCBtaWdodCBiZSBnb2luZyBvbiBpbnNpZGUgdGhlaXIgZnJpZW5kIGhlYWQgd2hvIHdhcyBpbiBhIGNvbWUgYXQgdGhlIHRpbWUuIAoiT24gb3VyIHNpZGUgdGhlcmUgaXMgb25lIHBlcnNvbiByZXNwb25zaWJsZSBmb3IgdGhpcyBkZWNlcHRpb24gYW5kIHRoYXQgcGVyc29uIGlzIE1yLiBXcmlnaHQsIiBzYWlkIEhhcnBlci4gIkl0IGlzIE1yLiBXcmlnaHQgYnkgaGlzIG93biBhZG1pc3Npb24uIgpDZSB3ZWVrIGVuZCBqIGZhaXQgdW4gZGFsIG1ha2hhbmksIHN1ciB1bmUgcmVjZXR0ZSBkZSBtb24gc2l0ZSBwcmZyIHZlZ3JlY2lwZXNvZmluZGlhLiBQb3VyIGZhaXJlIGpvbGkgc3VyIGxlcyBwaG90b3MgYWxsZXIgYXZlYyBqIGZhaXQgZGVzIHJvdGlzL2NoYXBhdGlzIGVuIHV0aWxpc2FudCBjZXR0ZSB2aWRvIHN1cGVyIGJpZW4gZmFpdGUuIEMgdnJhaW1lbnQgZmFjaWxlICBmYWlyZSAoc2F1ZiBzaSBjb21tZSBtb2kgYXUgbW9tZW50IGQgbGEgcHRlIHR1IHRlIHNvdXZpZW5zIHF1ZSB0IHBsdXMgZGUgcm91bGVhdSAgcHRpc3NlcmllKS4gCkluIGNhc2UgeW91IGRvdWJ0IG1lIGJlY2F1c2UgaSBkb250IGhhdmUgYSBmbGFpciB3aXRoIGVsbywgSW0gZGlhbW9uZCAyIG9uIDIgYWNjcyB3aXRoIHRyeW4gbW9zdCBwbGF5ZWQuCkhlciBzaW5nbGUgZ2FsIGlubm92YXRpb25zIGFyZSBxdWl0ZSBhbXVzaW5nLiAKQW0gU2Ftc3RhZywgZGVuIDE2LiAKSXQgd2FzIHByZXR0eSBob3QuIEl0IHdhcyBteSBmaXJzdCBleHBlcmllbmNlIGV2ZXIgd2hlcmUgaSBmZWx0IGxpa2UgYSBwcm9wZXIgbWFuLCBhIG1hbiB0aGF0IHNlZHVjZWQgYSB3b21hbi4uIApUaGUgZ292ZXJubWVudCBzYWlkIHRoZSBzY2hlbWUgYmVnYW4gaW4gSnVseSAyMDA5LCBhbmQgZW5kZWQgSnVuZSAyNSwgMjAxMS4gCkdhbWJsaW5nIEJlZm9yZSB0aGUgT25saW5lIENhc2lub3Mgb2YgT3VyIERheQpUaGUgcmVzdWx0cyB3ZXJlIHRoYXQgeW91bmcgcGVvcGxlIHRvZGF5IGFyZSA0LjUgdGltZXMgbW9yZSBsaWtlbHkgdG8gaGF2ZSBjZWxpYWMgZGlzZWFzZSB0aGFuIHlvdW5nIHBlb3BsZSB3ZXJlIGluIHRoZSAxOTUwcywgd2hpbGUgdGhvc2Ugd2hvc2UgYmlydGggeWVhcnMgd2VyZSBtYXRjaGVkIHRvIHRoZSBvcmlnaW5hbCBwYXJ0aWNpcGFudHMgd2VyZSBmb3VyIHRpbWVzIG1vcmUgbGlrZWx5IHRvIGhhdmUgY2VsaWFjIGRpc2Vhc2UuCkFsZXJ0ZWQsIHRoZSBhcnRpbGxlcnkgZnJvbSBlYWNoIHNpZGUgemVybyBpbiBvbiB3aGF0IGlzIHN1c3BlY3RlZCB0byBiZSB0aGUgb3BlbmluZyBlbmQgb2YgdGhlIHR1bm5lbHMsIHB1bW1lbCB0aGVtLCBkZXN0cm95aW5nIHRoZSBhY2Nlc3MuIApEbyBub3Qgc2VsbCB5b3Vyc2VsZiBzaG9ydC4gClRoZSBlcGlzb2RlIHR3byBhY3RyZXNzZXMsIG9uZSB3aGl0ZSBhbmQgb25lIGJsYWNrLCB3ZXJlIHB1dCBpbnRvIGEgcmVzdGF1cmFudCBhbmQgcGxheWVkIG91dCBzY2VuZXMgd2l0aCB0aGVpciAiYm95ZnJpZW5kcyIgd2hvIGFjdGVkIG91dCB0aGUgcm9sZSBvZiBhYnVzZXIuIApSb29rWFBZICAxIHBvaW50ICBzdWJtaXR0ZWQgOCBkYXlzIGFnbwpOb3Qgc3VyZSBvZiB0aGUgb2RkcywgYnV0IEkgbmV2ZXIgbWFzdHVyYmF0ZWQgbm9yIGhhZCBzZXggbm9yIGhhZCBhIGdpcmxmcmllbmQgdW50aWwgSSBzdGFydGVkIG1hc3R1cmJhdGluZyBhcm91bmQgYWdlIDI3ICh5ZXMsIG9kZC4gSSBoYXZlIGhpZ2ggZnVuY3Rpb25pbmcgQXNwZXJnZXJzKS4gClRoZSBiaXQgYWJvdXQgcGF5aW5nIGxpZmUgd2FzIG5vdCBjbGVhcmx5IHdvcmRlZCBvbiBteSBzaWRlLiBUaGUgZ2lzdCBvZiBteSBpbnRlbnRpb24gd2FzOiBpZiB5b3Uga25vdyB5b3UgaGF2ZSBSZXZlbmdlIHJlYWR5IGluIGEgZmV3IHR1cm5zLCB5b3UgaGF2ZSBtb3JlIGxpYmVydHkgdG8gdXNlIHlvdXIgbGlmZSBhcyBhIHJlc291cmNlLCByYXRoZXIgdGhhbiB0cmVhdGluZyBsaWZlIGFzIGEgcHJlY2lvdXMgdGhpbmcgdG8gcHJvdGVjdC4gCkNpbmRlcmVsbGllNyAgMSBwb2ludCAgc3VibWl0dGVkIDIyIGRheXMgYWdvCkl0IGEgIlRveXMgdG8gbGlmZSIgZ2FtZSwgbWVhbmluZyB0aGV5IGxvY2sgY29udGVudCBiZWhpbmQgdGhlIGZpZ3VyaW5lcy4gSXQgc3VnZ2VzdGVkIHRvIGdldCB0aGUgTmVwdHVuZSBzaGlwIHdpdGggSnVkZ2UsIGFzIGl0IGhhcyB0aGUgb25seSBwaHlzaWNhbCBzdGFzaXMgd2VhcG9uLCBhcyB3ZWxsIGFzIGVpdGhlciB0aGUgQ3J1c2hlciBwYWNrIG9yIHRoZSBOYWRpciBzaGlwIGZvciBhIGdyYXZpdHkgd2VhcG9uIG9wdGlvbi4gRG9pbmcgdGhpcyB3aWxsIGFsbG93IG9uZSB0aGUgYWJpbGl0eSB0byAxMDAlIGNlcnRhaW4gcHV6emxlcyB3aXRob3V0IGFueSBoYXNzbGVzIGFuZCByZWxpYW5jZSB1cG9uIGZpbmRpbmcgYW5kIHNwYW1taW5nIGVsZW1lbnRhbCBjYW5pc3RlcnMuClRoZSBuZXcgYWRhcHRhdGlvbiBjb3VsZCBiZSB0aGUgbGl0ZXJhbCB3b3JzdCB0aGluZyBldmVyIGFuZCBpdCBzdGlsbCB3b24gInJ1aW4iIGFueXRoaW5nLi4gCk5hc2hpYmEgdQpBIHByZWduYW50IHdvbWFuJ3MgYm9keSBldmVuIHVuZGVyZ29lcyBjZXJ0YWluIGNoYW5nZXMgaW4gdGhlIHRoaXJkIHRyaW1lc3RlciB0byBwcmVwYXJlIGl0IGZvciBsYWJvciBwYWlucy4gRXNwZWNpYWxseSBkdXJpbmcgdGhlIGxhc3QgMTggZGF5cyBvZiBwcmVnbmFuY3ksIGEgc29vbiB0byBiZSBtb3RoZXIncyBwYWluIHRocmVzaG9sZCBlbGV2YXRlcyBhcyBwYWluIG1pdGlnYXRpbmcgb3Bpb2lkIHJlY2VwdG9ycyBnbyBvbiByZWQgYWxlcnQgYW5kIGxldmVscyBvZiBwYWluIHJlZHVjaW5nIGhvcm1vbmVzIHNwaWtlIFtzb3VyY2U6IFRvb21leV0uIEluIGZhY3QsIGV2ZW4gYWZ0ZXIgdGhlIGJhYnkgaXMgYm9ybiwgYSBtb3RoZXIgd2lsbCBjb250aW51ZSB0byBkZW1vbnN0cmF0ZSBhIGhpZ2hlciBwYWluIHRvbGVyYW5jZSB0aGFuIHdvbWVuIHdobyBoYXZlbid0IGhhZCBjaGlsZHJlbiwgYWNjb3JkaW5nIHRvIGEgMTk5MiBzdHVkeSBmcm9tIHRoZSBVbml2ZXJzaXR5IG9mIFdlc3Rlcm4gT250YXJpbyBbc291cmNlOiBIYXBpZG91IGFuZCBEZUNhdGFuemFyb10uLiAKT2J2aW91c2x5LCBpbmRvb3Igcm9ja2luZyBjaGFpcnMgYXJlIG1hZGUgZm9yIGluZG9vciB1c2UuIApIb3cgVG8gUHJlcGFyZSBmb3IgQnJhY2VzCklmIGEgcGxheWVyIGtub3dzIHRoZSBtb3JlIHBvcHVsYXIgYW5kIGFzc3VyZWQgc3RyYXRlZ2llcyBsaWtlIGNhcmQgY291bnRpbmcsIHdoaWNoIGlzIG1lbnRhbGx5IHRyYWNraW5nIHRoZSBoaWdoIGFuZCBsb3cgY2FyZHMgb2YgdGhlIGRlY2ssIGJsYWNramFjayBpcyBtdWNoIHNpbXBsZXIgdG8gc3dlZXAgdGhhbiBvdGhlciBjYXJkIGdhbWVzLiBBbHRob3VnaCB0aGUgaG91c2Ugd2lsbCBhbHdheXMgaGF2ZSBhIHN0YXRpc3RpY2FsIGVkZ2UsIHRoZSBjb21wb25lbnQgb2YgcGxheWVyIGNob2ljZSBtYWtlcyB0aGUgZ2FtZSBzd2F5IHBvc2l0aXZlbHkgdG93YXJkIHRoZSBwbGF5ZXIgaW4gYSB3YXkgdGhhdCBubyBvdGhlciBjYXJkIGdhbWUgY2FuLi4gCkEgZ3Jvd2luZyBib2R5IG9mIGluYWN0aXZpdHkgcmVzZWFyY2gsIGhvd2V2ZXIsIHN1Z2dlc3RzIHRoYXQgdGhpcyBhZHZpY2UgbWFrZXMgc2NhcmNlbHkgbW9yZSBzZW5zZSB0aGFuIHRoZSBub3Rpb24gdGhhdCB5b3UgY291bGQgY291bnRlciBhIHBhY2sgYSBkYXkgc21va2luZyBoYWJpdCBieSBqb2dnaW5nLgpXaGlsZSB0aGUgYmFuayBkaWQgbm90IGhhdmUgYW55IHNpZ25pZmljYW50IGxvc3NlcyBvciB3cml0ZSBkb3ducyBvbiBhbnkgZ2l2ZW4gZGF5LCBBaG1lZCBzYWlkIHRoZXJlIHdlcmUgdHdvIGVmZmVjdHMgZnJvbSB0aGUgdm9sYXRpbGl0eSBsYXN0IHllYXIsIHdoaWNoIGhhZCBiZWVuIGF0dHJpYnV0ZWQgdG8gdmFyaW91cyBjb25jZXJucywgaW5jbHVkaW5nIHRob3NlIGFyb3VuZCBpbnRlcmVzdCByYXRlcyBhbmQgZ2xvYmFsIHRyYWRlLgoxIHBvaW50ICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvRXZlcnkgYWNoYXJ5YSwgd2hlbiB0aGV5IGFwcGVhciBpbiB0aGlzIHdvcmxkLCBwcmVhY2ggdGhlIG1lc3NhZ2UgYWNjb3JkaW5nIHRvIHRoZSB0aW1lIGFuZCBjaXJjdW1zdGFuY2UgYW5kIHVuZGVyc3RhbmRpbmcgb2YgdGhlIHBlb3BsZS4gCkNhcmQgc2hhcnAgdXNlZCBpbmZyYXJlZCBjb250YWN0IGxlbnNlcyBpbiBDYW5uZXMgcG9rZXIgc2NhbQpUaGV5IGFwcGVhcmVkIHRvIGJlIGhpZ2hseSBzdHJ1Y3R1cmVkIGFuZCB5ZXQgbm8gaW50ZWxsaWdlbmNlIHdhcyByZXF1aXJlZC4KQW4gaW1wcm92ZSBpbiBzZXJvdG9uaW4gYW5kIGRvcGFtaW5lIGFsc28gd2lsbCBoZWxwIGJvb3N0IGFuZCBzdGFiaWxpemUgbW9vZHMuLiAKT3ZlciBhdCB0aGUgTmF0aW9uLCBSb2JlcnQgUmVpY2ggbWFrZXMgZmFyIG1vcmUgc2Vuc2Ugd2hlbiBoZSBhcmd1ZXMgdGhhdCB0aGUgY3VycmVudCBSZWNlc3Npb24gYW5kIGNvbWluZyBEZXByZXNzaW9uIGlzIHRoZSByZXN1bHQgb2YgdGhlIHJpc2luZyBlY29ub21pYyBpbmVxdWFsaXR5IGNyZWF0ZWQgYnkgdGhlIE5lb2xpYmVyYWwgcG9saWNpZXMgb2YgUmVhZ2Fub21pY3MgaW4gdGhlIGZpcnN0IHBsYWNlLiBPdGhlciB3b3Jkcywgd2hlbiB5b3Ugc3RvcCB0YXhpbmcgdGhlIHJpY2gsIHRha2UgYXdheSB0aGUgYWJpbGl0eSBvZiB3b3JrZXJzIHRvIHJlcHJlc2VudCB0aGVpciBpbnRlcmVzdHMsIGRyYXN0aWNhbGx5IGN1dCB0aGUgc29jaWFsIHNhZmV0eSBuZXQsIGFuZCBkZXJlZ3VsYXRlIGV2ZXJ5dGhpbmcgd2l0aCBhIGZldGlzaGlzdGljIGJlbGllZiB0aGF0ICJ0aGUgbWFya2V0IGtub3dzIGJlc3QiIHlvdSBjcmVhdGUgdGhlIGNpcmN1bXN0YW5jZXMgdGhlIFVTIGlzIGluIG5vdyBhbmQgd2FzIGluIGluIDE5MjkuIFRvIFJlaWNoOi4gClNlcmlvdXNseS4gSW4gb25lIGNsaW5pY2FsIHRyaWFsIDg2JSBvZiB3b21lbiB0ZXN0ZWQgc2F3IGEgcmVkdWN0aW9uIGluIHRoaWdoLyBsZWcgY2lyY3VtZmVyZW5jZSBhbmQgdXAgdG8gNC41IGNtIHJlZHVjdGlvbiBmcm9tIGFiZG9tZW4gYW5kIHRoaWdocyBpbiBqdXN0IDU2IGRheXMhIE5vdCBvbmx5IHRoYXQsIHRyaWFsIHBhcnRpY2lwYW50cyBzYXcgdXAgdG8gMjUwbWwgcmVkdWN0aW9uIGluIGZhdCB2b2x1bWUgYWZ0ZXIganVzdCA4IHdlZWtzLiAKQ2hlY2sgb3RoZXIgb24gYW5kIDM4LiAKSGUgd2lsbCBhbHNvIGFkZHJlc3MgYW55IHByZSBleGlzdGluZyBkZW50YWwgcHJvYmxlbXMgYmVmb3JlIGluc3RhbGxpbmcgdGhlIGJyYWNlcyBvbiB5b3VyIHRlZXRoLi4gClRoZSB3b21hbiAoeW91IGNvdWxkIGhlYXIgdGhlIGJvaWxlciBvcGVyYXRpb24gaW4gdGhlIGJhY2tncm91bmQpIHNhaWQgJDEwMC4gTm8gZnVja2luZyB3YXkgdGhhdCB3YXMgZ29pbmcgdG8gaGFwcGVuLi4gCklmIHlvdSBsb29rIGJhY2sgYXQgdGhlIG51bWJlciBvZiByYW5kb20gc2NyZWVuIG5hbWVzIHlvdSB3b3VsZCBzZWUgcG9wIHVwIGF0IHRoZSAyNS81MCsgZ2FtZXMgaW4gdGhlIGVhcmx5IDIwMDAgaXQgd291bGQgYmxvdyB5b3VyIG1pbmQgaG93IG1hbnkgd291bGQgY29tZSBpbiwgZHVtcCAyMCAzMGsgYW5kIGRpc2FwcGVhciBmb3JldmVyLiBJdCB3YXMganVzdCBhIGRpZmZlcmVudCBlcmEuLiAKTW9yZSB0aGFuIGFueXRoaW5nLCB0aGVzZSBraWRzIGFyZSBtb3JlIGFnZ3Jlc3NpdmUsIGFuZCBpdCdzIGdldHRpbmcgaGFyZGVyIHRvIHRha2UgdGhlIGFnZ3Jlc3Npb24gYXdheSBmcm9tIHRoZW0uIApMaXNhIFJpbm5hLCB5b3VyIG5ldyBmYXZvcml0ZSBSZWFsIEhvdXNld2lmZSwgaGFzIGdvbmUgb24gcmVjb3JkIGFib3V0IGhlciBjYXIgcmlkZSB3aXRoIEtpbSBSaWNoYXJkcyBvbiB0aGUgbGF0ZXN0IGVwaXNvZGUgb2YgVGhlIFJlYWwgSG91c2V3aXZlcyBvZiBCZXZlcmx5IEhpbGxzLiBUaGUgbGFkaWVzIG9mIEJldmVybHkgSGlsbHMgaGl0IFNhbnRhIEJhcmJhcmEgZm9yIHNvbWUgcGFtcGVyaW5nIGVhcmxpZXIgaW4gdGhlIGVwaXNvZGUuIApUaGlzIG1lYW5zIGlzLCB0aGF0IHdlIGNhbm5vdCBhc2sgYW55IHF1ZXN0aW9ucyBhYm91dCB2YWxpZGl0eSBvZiBzeW50YXggb3IgaW50ZXJwcmV0IHRoZSBpbnN0cnVjdGlvbnMgb3IgYW55IHF1ZXN0aW9uIHRoYXQgaXMgZWFzaWx5IGFuc3dlcmVkIGJ5IHRyeWluZyB0byBjb21waWxlIGFuZCBydW4gdGhlIGV4YW1wbGUuIFdlIGhhdmUgYSBmZXcgcXVlc3Rpb24gdHlwZXMgd2UgZGV2ZWxvcGVkIGR1cmluZyB0aGUgc2VtZXN0ZXIgdGhhdCBhcmVuIGVhc2lseSBhbnN3ZXJlZCB1c2luZyB0aGUgY29tcGlsZXIsIGJ1dCBpdCBnb2luZyB0byBiZSBhIGNoYWxsZW5nZS4KUG9ydCBDaXR5IGJvYXN0cyBmb3VyIGJhcnMsIHR3byBhZmZvcmRhYmxlIGRpbmluZyBkZXN0aW5hdGlvbnMsIGluZG9vciBhbmQgb3V0ZG9vciBjaGlsZHJlbidzIHBsYXkgYXJlYXMsIGZ1bmN0aW9uIGFuZCBjb25mZXJlbmNlIGZhY2lsaXRpZXMgYW5kIGxpdmUgbXVzaWMgZXZlcnkgRnJpZGF5IGFuZCBTYXR1cmRheSBuaWdodHMsIGFzIHdlbGwgYXMgc3BlY2lhbCBlbnRlcnRhaW5tZW50IG9wdGlvbnMgZm9yIGtpZHMgZXZlcnkgc2Nob29sIGhvbGlkYXlzLgpJIHdhcyB2aXNpdGluZyBMb25kb24gd2hlbiB0aGUgR3JlbmZlbGwgVG93ZXIgZmlyZSBoYXBwZW5lZDsgSSB3YXMgc3RheWluZyBhdCBhIGhvdGVsIGp1c3QgMTUgbWludXRlcyBmcm9tIHRoZSB0b3dlci4gCldlIGdldCBwYWlkIGEgZ29vZCB3YWdlIGZvciBkb2luZyB0aGlzIGFuZCBJIGxpa2Ugd2hhdCBJIGRvaW5nLiIuIApBbmQgb2YgY291cnNlIHRoZXkgaGFkIHRvIHNoaXAgMTYgbW9udGhzIGFmdGVyIHRoZSByZWxlYXNlIG9mIERBOk8gaW4gTWFyY2ggMjAxNiB0byBoaXQgUTQgb2YgdGhhdCB5ZWFyIChhcyBleHBsYWluZWQgaW4gQmxvb2QsIFN3ZWF0IGFuZCBQaXhlbHMpLgpQb2xpY3kgbGF5cyBvdXQgdGhlIHZpc2lvbiwgcGxhdGZvcm0gbGF5cyBvdXQgdGhlIG51dHMgYW5kIGJvbHRzIG9mIGhvdyB3ZSB3aWxsIGdldCB0aGVyZS4gTXIuIEdlcmVpbiBhc3NlcnRpb24gd2Ugc2hvdWxkIGhhdmUgYSBkZXRhaWxlZCBwbGF0Zm9ybSB0aGlzIGVhcmx5IGJlZm9yZSBhbiBlbGVjdGlvbiBpcyBsaWtlIHRlbGxpbmcgYSBub3ZpY2UgcG9rZXIgcGxheWVyIHRvIHJldmVhbCB0aGVpciBoYW5kIHRvIHRoZWlyIG1vcmUgZXhwZXJpZW5jZWQgY29tcGV0aXRvcnMgYmVmb3JlIHRoZSBmbG9wLgpObyBuZXcgZnVsbHkgYXV0b3Mgb3IgYnVyc3QgY2Fubm90IGJlIGJvdWdodCBhbnl3aGVyZSBpbiB0aGUgdXMgdW5sZXNzIHlvdSdyZSBsYXcgZW5mb3JjZW1lbnQgb3IgaGF2ZSBhIGNsYXNzIDcgZmlyZWFybXMgbGljZW5zZSB3aGljaCBpcyB0byBtYWtlIHRoZW0gdG8gc2VsbCB0byBtaWxpdGFyeSBvciBsYXcgZW5mb3JjZW1lbnQuIApBbW9uZyB0aGUgbWFueSBwb3N0IHJldGlyZW1lbnQgb3B0aW9ucyB0aGF0IHdpbGwgdW5kb3VidGVkbHkgYmUgb3BlbiBmb3IgTVMgRGhvbmksIGEgbmV3IG9uZSBoZSBtaWdodCB3YW50IHRvIGNvbnNpZGVyIGlzIHRoYXQgb2YgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyLCBsaWtlIFNoYW5lIFdhcm5lLiBXZSBrbm93IGhvdyBwb2tlciBmYWNlZCBoZSBjYW4gYmUgd2hldGhlciBoZSB3aW5uaW5nIHRoZSBXb3JsZCBDdXAgb3IgZ2V0dGluZyB3aGl0ZSB3YXNoZWQuIEJ1dCBpdCB0aGUgY2hhc2UgaW4gYSBvbmUgZGF5IGdhbWUgd2hlbiBoZSByZWFsbHkgY29tZXMgaW50byBoaXMgb3duIGFzIGEgcG9rZXIgd2l6LgpXaGlsZSBhIHNlcnZpY2VkIGxvdCB3aXRoIGEgZnJvbnRhZ2Ugb2YgNTAgZmVldCAoMTUgbWV0cmVzKSBjYW4gYmUgYm91Z2h0IGZvciBhYm91dCAkMjAwLDAwMCBpbiBMb25kb24sIHRoZSBzYW1lIHBpZWNlIG9mIGxhbmQgd291bGQgY29zdCAkNTAsMDAwIGxlc3MgaW4gc3Vycm91bmRpbmcgY29tbXVuaXRpZXMsIFdhc3RlbGwgc2FpZC4KQW55IGVudGh1c2lhc3Qgd2l0aCBkZXNpcmUgdG8gdGFrZSBwYXJ0IGluIHRoaXMgYWN0aXZpdHkgY2FuIHVzZSBvbmxpbmUgc291cmNlIHRvIHBsYXkgdGhlIGdhbWUuIFlvdSBtYXkgaGF2ZSB0byBlbnJvbGwgZm9yIHBsYXlpbmcgZnJlZSBzbG90cy4gClRoaXMgaW5zdGFudCBhcmNoaXZlIGZlYXR1cmUgaXMgbW9zdCB1c2VmdWwgaW4gcHJldmVudGluZyBjb2xsdXNpb246IHR3byBvciBtb3JlIHN0dWRlbnRzIGhhbmRpbmcgaW4gcGFwZXJzIHdpdGggYW55IGFwcHJlY2lhYmxlIG92ZXJsYXAgd291bGQgYmUgZmxhZ2dlZC4gClNvbiBnYWduZSBwYWluLCBldCBjZWx1aSBkZSBzZXMgMTMwMCBlbXBsb3lzLCByZXBvc2Ugc3VyIGNlcyBwcmNpZXV4IGZsb2NvbnMuIApJdCB0dXJuZWQgb3V0IHRoYXQgQUxMIDggZHJpdmVycyB3ZXJlIHRoZWxhdGVzdCBkcml2ZXJzISBBbmQgb25lIG90aGVyIHRoaW5nIHRoYXQgbWFkZSBtZSBzdXNwaWNpb3VzIGlzIHRoYXQgdGhlIHByb2dyYW10cmllZCB0byBhbGFybSBtZSBieSByZXBvcnRpbmcgdGhhdCBvbmUgb2YgdGhlIGRyaXZlcnMgaXMgOCB5ZWFyc29sZCAob2ggbXkgZ29kLCBJIHdhcyBxdWl2ZXJpbmcgaW4gbXkgYm9vdHMsIGhlaCwgaGVoKS4gClJpY2h0ZXIgYXNzdXJlZCBtZSB0aGF0IHRoZXkgYXJlIGRlc2lnbmVkIHRvIGJlICJhcyBpbmRlc3RydWN0aWJsZSBhcyBwb3NzaWJsZS4nJyBJIGFza2VkIGlmIHRoZSBwcmVzZW5jZSBvZiBkcm9wcGluZ3MgbGVmdCBieSBhIGdyZWVuIGVuZXJneSBoYXRpbmcgYmlyZCBJIHNhdyBvbiB0aGUgcGFuZWwgY291bGQgYWZmZWN0IGl0cyBhYmlsaXR5IHRvIGRyYXcgZW5lcmd5IGZyb20gdGhlIHN1bi4gCkhlcnNoZXkgQ01PIEppbGwgQmFza2luIGluIGEgU2F0dXJkYXkgbW9ybmluZyBzZXNzaW9uIHRvdXRlZCB0aGUgY2FuZHkgbWFya2V0ZXIncyBpbiBob3VzZSBjb250ZW50IHN0dWRpbyB0aGF0IGxhdW5jaGVkIGZpdmUgbW9udGhzIGFnby4gQnkgc2hvb3Rpbmcgc29tZSBhZHMgaW4gaG91c2UsIEhlcnNoZXkgcHVtcHMgb3V0IGNvbnRlbnQgbW9yZSBxdWlja2x5LCBzaGUgc2FpZC4gIkkgYW0gaGVyZSB0byB0ZWxsIHlvdSBhbnlvbmUgY2FuIGRvIHRoaXMsIiBzaGUgc2FpZC4KVGhpbmsgbW9yZSBhYm91dCB3aHkgdGhleSBhcmUgbWFraW5nIHRoZSBtb3ZlcyB0aGV5IG1ha2UuIElmIHlvdSBjYW4gdW5kZXJzdGFuZCB5b3VyIG93biBpbWFnZSB3aGljaCB5b3Ugb2J2aW91c2x5IGNhbiB0aGVuIHRoaXMgc2hvdWxkIGJlIGFwcGFyZW50LiAKQ2FybCBSb2RyaWd1ZXMgcmVjYWxscyBiZWluZyB0aHJpbGxlZCBpbiBBdWd1c3QgMjAxNyB0byBoYXZlIGEgc2l0dGluZyBwcmltZSBtaW5pc3RlciB2aXNpdCBoaW0gYXQgYSBUb3JvbnRvIGhvdGVsIHRvIGRpc2N1c3MgdGhlIGZ1dHVyZSBvZiBoaXMgYnVyZ2VvbmluZyBjb21wYW55LgpGb3IgZXhhbXBsZSwgbWF5YmUgaG91c2UgYXJyZXN0LCB3aXRoIGEgcHJvaGliaXRpb24gb2YgdXNpbmcgYW55IGRldmljZSB0aGF0IGNvdWxkIGNvbm5lY3QgdG8gdGhlIGludGVybmV0IGFuZCBoZSBjYW4gb25seSB1c2UgcGhvbmVzIHRoYXQgY2FuIG1ha2Ugb3IgcmVjZWl2ZSBwaG9uZSBjYWxscyAoc29tZXRoaW5nIGxpa2UgdGhlIG9yaWdpbmFsIGxpZ2h0IHBob25lKSwgd2l0aCBhIHJlcXVpcmVtZW50IHRvIGF0dGVuZCB0aGVyYXB5IHdvdWxkIGJlIGEgYmV0dGVyIHNlbnRlbmNlLiBJbiBtYW55IHN0YXRlcywgdGhlIHBlcnNvbiB1bmRlciBob3VzZSBoYXMgc29tZSBmcmVlZG9tcyB0aGF0IHRoZXkgd291bGQgbm90IGhhdmUgaW4gcHJpc29uLCBidXQgYXQgdGhlIHNhbWUgdGltZSB0aGV5IGhhdmUgcmVzdHJpY3Rpb25zIHRoYXQgYSBmcmVlIGluZGl2aWR1YWwgZG9lcyBub3QgaGF2ZS4gSWYgaGUgaXMgcHV0IHVuZGVyIGhvdXNlIGFycmVzdCwgaGUgd291bGQgc3RpbGwgaGF2ZSB0byBwbGVhZCBndWlsdHkgdG8gdGhlIGNyaW1lIGFuZCBpdCB3b3VsZCBzdGlsbCBzaG93IHVwIG9uIGEgYmFja2dyb3VuZCByZXBvcnQsIHdoaWNoIEkgdGhpbmsgYXJlIHRoZSBtYWluIHB1bmlzaG1lbnRzIHRoYXQgeW91IHdhbnQgZG9sZWQgb3V0IHRvIGhpbS4KSW4gMjAwMC4gCkRvbiBTdGVhbCEgTmV2ZXIgdGFrZSBmb29kIHRoYXQgaXNuJ3QgeW91cnMgZnJvbSB0aGUgb2ZmaWNlIGtpdGNoZW4gb3IgZnJpZGdlLiBDYXJlZnVsbHkgbWFyayB5b3VyIG93biBmb29kIHdpdGggeW91ciBuYW1lIHNvIG5vIG9uZSB3aWxsIGJlIHRlbXB0ZWQgdG8gc3RlYWwgaXQuIApXaGVuIHlvdSBhcmUgcGxheWluZyBjYXJkcyBhdCBob21lIHdpdGggeW91ciBmYW1pbHkgbWVtYmVycywgeW91IG1pZ2h0IG5vdCBoYXZlIGFuIGV4cGVydCBzaHVmZmxlciBiZXNpZGUgeW91LiBJbiBzdWNoIGNhc2VzLCBzbWFsbCBhdXRvbWF0aWMgc2h1ZmZsZXIgaW5zdHJ1bWVudHMgY2FuIGJlIHZlcnkgaGFuZHkgZm9yIHlvdS4gCk92ZXJ2aWV3IGZvciBTdGlsbEFsaXZlR2FtZXIKSXQgb25seSBjb21lcyBpbiBNYWMgZmxhdm91ci5NeSBmaXJzdCBoMmcyIGNvbW1pc3Npb24gd2FzIHRvIHByb2R1Y2UgdGhlIGZpc2ggZ3JhcGhpY3MgZm9yIFRoZWgyZzJQb3N0LiAKWW91IGxpa2UgdG8gZ28gb24gYSBsaXR0bGUgaG9saWRheT8nIGFza2VkIE11bSwgdGhlIG1vbWVudCBzaGUnZCBzaGFrZW4gbWUgYXdha2UuIEJ1dCB0aGluZ3Mgd2VyZSBkaWZmZXJlbnQgbm93IGR1ZSB0byB0aGUgYXBwcm9hY2hpbmcgd2FyLiBDaGlsZHJlbiBvZiBhbGwgYWdlcywgaW5jbHVkaW5nIFNoaXJsZXksIHdlcmUgYmVpbmcgc2VudCBvdXQgdG8gdGhlIGNvdW50cnlzaWRlIGZvciBzYWZldHkuClRoZSBvbmx5IHJlYXNvbiBJIHN0aWxsIHBsYXkgaXMgYmVjYXVzZSBJIGxpa2UgdGhlIHBlb3BsZSBpbiBteSBhbGxpYW5jZSwgYnV0IEkgbmV2ZXIgZ2l2ZSB0aGVtIGFueSBtb3JlIG9mIG15IG1vbmV5Lm5kaWxkYXkgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvdGhhdCAiZ3V5IGZyb20gQm9zdG9uIiBpcyBtZS4gQmVmb3JlIFdGVERBIG1hZGUgbWUgdGFrZSBpdCBkb3duLCBJIGhhZCBhIHdlYnNpdGUgdXAgd2l0aCBkYXRhIGFuYWx5c2lzIGZyb20gYSBmZXcgeWVhcnMgb2YgRDErRDIgcGxheS5JIGhhcHB5IHRvIGRpc2N1c3MsIGVpdGhlciBoZXJlIG9yIHZpYSBlbWFpbCwgdGhlIHZhcmlvdXMgbWF0aCBhbmQgbWV0aG9kb2xvZ2llcyBiZWhpbmQgbXkgd29yay4gCk1heWJlIGhhdmUgYW4gb3BlbiwgY2FsbSBjb252ZXJzYXRpb24gIGFzayB3aHkgc2hlIG9mZmVyZWQsIGFuZCBleHBsYWluIHdoeSB5b3UgcmVhY3RlZCB0aGUgd2F5IHlvdSBkaWQuIApFZGl0OiBJIGNvbW1lbnRlZCB0aGlzIGJlbG93LCBidXQgc2luY2UgcGVvcGxlIGFyZSBhc2tpbmcuIEkgd2Fzbid0IHdvcmtpbmcgYXQgdGhlIGJhciBhdCAxNS4gSSB3YXMgd29ya2luZyBpbiBhIHNlcGFyYXRlIGhvdGVsIHJlc3RhdXJhbnQgYXMgYSBidXNzZXIsIGFuZCB0aGVyZSB3YXMgYWxzbyBhIGJhciBpbiBzYWlkIGhvdGVsLiAKRHVyaW5nIHRoZSB3aW50ZXJmZWxsIGJhdHRsZSB0aGUgbmlnaHQga2luZyBhbmQgaGlzIGdlbmVyYWxzIHNuZWFrIGluc2lkZSBvZiB3aW50ZXJmZWxsIHdoZXJlIHRoYXQgYmlnIHRyZWUgaXMsIGFsc28gdGhhdCB3aGVyZSBicmFuIGlzIGdvbm5hIGJlIGR1cmluZyB0aGUgd2FyLiAKT25lIG9mIHRoZSB0ZWxsdGFsZSBzaWducyBvZiBhbnhpZXR5IGFuZCBzdHJlc3MgY2FuIGJlIGNvbnN0cmljdGVkIGJyZWF0aGluZy4gV2hlbiB0aGUgYm9keSBzdGFydHMgdG8gdGFrZSBzaGFsbG93IHNob3J0IGJyZWF0aHMgaW5zdGVhZCBvZiBicmVhdGhpbmcgYXQgYSBuYXR1cmFsIHBhY2UsIGl0IGlzIG5lYXIgaW1wb3NzaWJsZSBmb3Igb25lIHRvIHJlYWNoIGEgcmVsYXhlZCBzdGF0ZS4gCiJUaGF0IGluZm9ybWF0aW9uIHRoZW4gZ29lcyBmcm9tIHRoZSBJTlNFVHMgaW50byB0aGUgTlNKT0MsIGFuZCB0aGUgTmF0aW9uYWwgU2VjdXJpdHkgSm9pbnQgT3BlcmF0aW9ucyBDZW50cmUgdGhlbiBhdCB0aGF0IHBvaW50IGFsbG93cyB1cyB0byBzdGFydCB1bmRlcnN0YW5kaW5nIHdoYXQgdGhhdCBsb29rcyBsaWtlLCB0byBzZWU6IGNhbiB3ZSBpbnRlcmNlZGUsIGNhbiB3ZSBhY3R1YWxseSBpbnRlcmNlcHQgdGhlc2UgaW5kaXZpZHVhbHMgd2hpbGUgdGhleSdyZSBzdGlsbCBpbiBDYW5hZGEsIGluIHRyYW5zaXQ/IgpJdCBsaWtlIHRoZXkgbG9va2VkIGF0IE9ibGlnYXRpb24gYW5kIER1dHkgYW5kIHRoZSBvdGhlciBvbmUgZnJvbSB0aGUgU3RhciBXYXJzIFJQR3MgYW5kIGZvcmNlZCB0aGlzIHRoaW5nIGludG8gdGhlIGdhbWUuIApBdXRvbWFrZXIgSm9obiBEZUxvcmVhbiBtYWRlIGFuIHVuY2VyZW1vbmlvdXMgZXhpdCBmcm9tIHRoZSBidWlsZGluZyBpbiAxOTkyIGFmdGVyIGhlIHdhcyBhcnJlc3RlZCBmb3IgYWxsZWdlZGx5IGF0dGVtcHRpbmcgdG8gZmxpcCAyMjAgcG91bmRzIG9mIGNvY2FpbmUuLiAKQnV0IHRoZSBwcmVzaWRlbnQgd2hvIGFjdHVhbGx5IGRpZCBpdCB3YXMgQmlsbCBDbGludG9uLiIuIApQb2tlciBpcyBhIGJyYWluIGdhbWUuIExlYXJuaW5nIHlvdXIgY29tcGV0aXRvcidzIHRoaW5raW5nIGlzIGZhciBtb3JlIGltcG9ydGFudCB0aGFuIHRoZSBxdWFsaXR5IG9mIHlvdXIgY2FyZHMuIEluIHRoZSBlbmQsIHRoaXMgdGVjaG5pcXVlIGRlY2lkZXMgd2hvIHdpbGwgd2luIGFuZCB3aG8gd2lsbCBub3QuIFJlYWRpbmcgYW5kIGdyYXNwaW5nIHlvdXIgb3Bwb25lbnQncyBzdHJhdGVnaWVzIGlzIGFsbCB0aGF0IG1hdHRlcnMuClNoZSB3YXMgbHlpbmcgdG8gdXMgYW5kIGFsbCBraW5kcyBvZiBzdHVmZi4gSSBjYWxsZWQgYW4gYWdlbmN5IGxpa2UgeW91cnMgYW5kIHRoZSBndXkgd2FzIHNvIGhlbHBmdWwgdG8gbWUgYW5kIHRvbGQgbWUgdGhlIGxhZHkgd2FzIGx5aW5nIGhlciBidXR0IG9mZi4gSSBndWVzcyBoZSBlbWFpbGVkIGhlciBhbmQgc2hlIHNlbnQgYSBub24gYXBvbG9neSB0byBtZSwgYW5kIHRoaW5ncyB3ZXJlIGZpbmUgYWZ0ZXIgdGhhdC4gCkxpa2UgdmlkZW8gZ2FtZXM/IFBDIGdhbWVycyBjYW4gam9pbiB0aGUgL3Ivc2hhbmdoYWkgU3RlYW0gZ3JvdXAsIGNvbnNvbGUgZ2FtZXJzIGNhbiBmaW5kIGV2ZXJ5Ym9keSBOaW50ZW5kbyBmcmllbmRjb2RlcywgWGJveCBnYW1lcnRhZ3MgYW5kIFBTTnMgaGVyZS4KQWZ0ZXIgSm9obiBhbmQgQW5uYSBQaWVyY2Ugb2YgUHJpbmNldG9uLCBNYXNzLiwgbG9zdCB0aGVpciBkYXVnaHRlciwgMTQgeWVhciBvbGQgQWxpc29uLCB0byBsaXZlciBjYW5jZXIgaW4gMTk5NiwgSm9obiBmb3JtZWQgQWxpJ3MgQXJteSwgYSBncm91cCB0aGF0IHdvdWxkIHJ1biB0aGUgMTk5OCBCb3N0b24gTWFyYXRob24gdG8gcmFpc2UgZnVuZHMgZm9yIHBlZGlhdHJpYyBjYW5jZXIgcmVzZWFyY2guIApTb21ldGltZXMgb3V0cyBhcmVuJ3QgdHJ1ZSBvdXRzLiBJbiBjZXJ0YWluIHNpdHVhdGlvbnMsIGFuIG91dCBtYXkgYmUgbW9yZSBiZW5lZmljaWFsIHRvIHlvdXIgb3Bwb25lbnQgdGhhbiB5b3UuIEEgZ29vZCBleGFtcGxlIGlzIHdoZW4geW91J3JlIHBsYXlpbmcgYW4gb3BlbiAgc3RyYWlnaHQgZHJhdyBidXQgdGhlIGZsb3AgcHJvZHVjZXMgMyBzdWl0ZWQgY2FyZHMuIApJIGFsc28ga25vdyBhIG1hbiB0aGF0IGtlZXBzIGl0IGZyb20gaGlzIHdpZmUgb2YgbWFueSB5ZWFycy4gCkRlZmluaXRpb24gb2YgV2VsbG5lc3MgV2VsbG5lc3MgaXMgImFuIGFjdGl2ZSBwcm9jZXNzIG9mIGJlY29taW5nIGF3YXJlIG9mIGFuZCBsZWFybmluZyB0byBtYWtlIGNob2ljZXMgKGhlYWx0aHkgY2hvaWNlcyksIiBzYXlzIFdlbGxuZXNzIFByb3Bvc2FscywgYW4gaW5kZXBlbmRlbnQgd2VsbG5lc3MgY29uc3VsdGFudC4gClRoZSBtYXRjaCBlbmRzICBpbWFnaW5lIHRoYXQgIGp1c3QgaW4gdGltZSBmb3IgYSBjb21tZXJjaWFsIGJyZWFrLiBIZXJlIGl0IHdpbGwgZW5kIGF0IHRoZSBkZWJ0IGNlaWxpbmcgZGVhZGxpbmUuIEVhY2ggc2lkZSB3aWxsIGNsYWltIHZpY3RvcnkuClRoZSBmaXJzdCBjYXJkIGlzIGFsd2F5cyBmYWNlIGRvd24sIGFuZCB0aGUgc2Vjb25kIGNhcmQgaXMgYWx3YXlzIGZhY2UgdXAuIAogTGVzIHBldGl0ZXMgZmlsbGVzIHNlbnRlbnQgdHJzIGJpZW4gc2kgbGV1ciBtcmUgc2UgbWFxdWlsbGUgdW5pcXVlbWVudCBwb3VyIHBsYWlyZSBhdXggaG9tbWVzLCBwYXIgcGxhaXNpciBldCBnb3QgZGUgbGEgc2R1Y3Rpb24sIHBvdXIgc2Ugc2VudGlyIHB1aXNzYW50ZSwgcGFyIGF1dG9tYXRpc21lIG91IHBvdXIgcnBhcmVyIHVuZSBibGVzc3VyZSBuYXJjaXNzaXF1ZSwgcG91cnN1aXQgSXNhYmVsIEtvcm9saXRza2kuIAogMzggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ29QZW9wbGUgdGhpbmsgdGhlcmUncyBvbmUgcmVhbGl0eSwgYnV0IHRoZXJlJ3MgbG9hZHMgb2YgdGhlbSwgYWxsIHNuYWtpbmcgb2ZmLCBsaWtlIHJvb3RzLiAKR3JlZW4gbWFrZXMgb25lIG9mIHRoZSBlYXJsaWVzdCB3cml0dGVuIHJlZmVyZW5jZXMgdG8gUG9rZXIgaW4gMTgzNC4gSW4gaGlzIHdyaXRpbmcsIEdyZWVuIG1lbnRpb25zIHJ1bGVzIHRvIHdoYXQgaGUgY2FsbGVkIHRoZSAiY2hlYXRpbmcgZ2FtZSwiIHdoaWNoIHdhcyB0aGVuIGJlaW5nIHBsYXllZCBvbiBNaXNzaXNzaXBwaSByaXZlcmJvYXRzLiAKV2UgdGFrZSBvdXIgZ3Vlc3QgaW5wdXQgc2VyaW91c2x5IGFuZCB1c2UgdGhhdCB2YWx1YWJsZSBpbmZvcm1hdGlvbiB0byBpbXByb3ZlIHRoZSBDYW55b24gUmFuY2ggZXhwZXJpZW5jZS4gSSB3aWxsIGJlIHJldmlld2luZyB5b3VyIG9ic2VydmF0aW9ucyB3aXRoIG1hbmFnZW1lbnQuIEkgd2VsY29tZSB5b3UgdG8gZ2l2ZSBtZSBhIGNhbGwgdG8gZGlzY3VzcyB5b3VyIHN0YXkgZnVydGhlci4gSGVhbHRoeSByZWdhcmRzLCBTaGFyb24gU3RyaWNrZXJJcyB0aGlzIHNvbWV0aGluZyB5b3UgY291bGQgZG8gb24geW91ciBvd24gZm9yIGEgd2VlayBvciBiZXR0ZXIgdG8gZ28gd2l0aCBhIHNwb3VzZSBvciBmcmllbmQocyk/IExvb2tpbmcgZm9yIGZpdG5lc3MgYW5kIHJlbGF4YXRpb24gYnV0IHdvdWxkIEkgZmVlbCB1bmNvbWZvcnRhYmxlIGFsb25lPyBEbyBtb3N0IGNvbWUgd2l0aCBzb21lb25lIUFwciAyMDE3IENhbnlvbiBSYW5jaCBoYXMgYSBsYXJnZSBwZXJjZW50YWdlIG9mIGd1ZXN0cyB0aGF0IHRyYXZlbCBzb2xvLiAKMS4gVWx0aW1hdGVseSwgcG9rZXIgaXMgYSBnYW1lIG9mIGxvZ2ljLiBZb3UgcGxheWluZyB0aGUgcHJvYmFiaWxpdHkgb2YgeW91IHdpbm5pbmcgYWdhaW5zdCB0aGUgcHJvYmFiaWxpdHkgb2Ygc29tZWJvZHkgZWxzZSB3aW5uaW5nLiBTbyBpbiB0aGUgc2ltcGxlc3Qgd2F5LCB3aGF0IHlvdSBuZWVkIHRvIGRvIGlzIHdvcmsgb3V0IGJhc2VkIG9uIHdoYXQgY2FyZHMgeW91IGhhdmUgYXQgdGhhdCBtb21lbnQgaG93IG1hbnkgZGlmZmVyZW50IGNhcmRzIHRoZXJlIGFyZSBsZWZ0IGluIHRoZSBwYWNrIHRoYXQgY291bGQgcG90ZW50aWFsbHkgZ2l2ZSB5b3UgYSB3aW5uaW5nIGhhbmQuIEl0IHF1aXRlIGVhc3kgdG8gY291bnQgdXAgdGhvc2UgY2FyZHMgaXQgY2FsbGVkIG91dHMKSGlzIG5hbWUgaXMgVGVkIFplcHBlbGluIGFuZCBJIGFwcHJvdmUgb2YgaGlzIGh1bnRpbmcuIEhlIGVhdHMgaGlzIGtpbGxzIHRvbywgc28gaXQncyBuYXR1cmFsIEkgZ3Vlc3M/LiAKVGhlIGNoYXJhY3RlcnMgb24gc3RhZ2UgKHRoZSBwb2xpY2UgY2hpZWYsIHRoZSBtZWRpY2FsIGV4YW1pbmVyLCB0aGUgZ3JpZXZpbmcgZmF0aGVyLCB0aGUgZ29vZCBzYW1hcml0YW4gbmVpZ2hib3VyLCB0aGUgY29uY2VybmVkIFByZXNpZGVudCkgYXJlIHJlYWwgcGVvcGxlLCBwbGF5aW5nIHZlcnNpb25zIG9mIHRoZW1zZWx2ZXMuIApGb3IgdGhlIGxvbmcgaGF1bCBpZiB5b3UgZmVlbCBsaWtlIHRoZXJlIGFyZSBpc3N1ZXMgd2l0aCBiZWluZyBzb21lb25lIG91dHNpZGUgeW91ciBjbGFzcywgdGhlcmUgYXJlIHNvIG1hbnkgd2F5cyB0byBwcm90ZWN0IHlvdSBhZ2FpbnN0IGZpbmFuY2lhbCBydWluIG9mIGEgcGFydG5lciwgaW5jbHVkaW5nIHByZW51cHMuIFVzZXMgdGVybXMgbGlrZSAiYWxwaGEiIGFuZCAiYmV0YSIgaW4gZGVzY3JpYmluZyBodW1hbiByZWxhdGlvbnNoaXBzLiAKQ2FyZSBvZiB0aGVpciBmZWV0IGlzIG9uZSBvZiB0aGUgbW9zdCBpbXBvcnRhbnQgdGhpbmdzIHRoZXNlIGd1eXMgY2FuIGRvLCBPc3Rlcm1hbiBzYWlkLiBXYXMgYSBzdGlnbWEgZm9yIGEgbG9uZyB0aW1lIHdoZXJlIGd1eXMgZGlkbiBnbyBnZXQgcGVkaWN1cmVzLCBhbmQgdGhlbiBndXlzIGxpa2UgU2hhcSBhbmQgRHd5YW5lIFdhZGUgYW5kIExlQnJvbiwgdGhleSBtYWRlIGl0IHBvcHVsYXIuIEFuZCB5b3Uga25vdyB3aGF0PyBJZiB0aGUgc3RhcnMgY2FuIGRvIGl0LCB0aGVuIGl0IE9LLiAKSSB3YXNuIHVwc2V0IGJlY2F1c2UgYmVpbmcgdXBzZXQgd2lsbCBoZWxwIG5vdGhpbmcuIApDYW1vdWZsYXNoIHUKRnJvbSB0aGUgYmVnaW5uaW5nLCB0aG91Z2gsIGl0IHdhcyBvYnZpb3VzIHRoZSBwYWlyIHNoYXJlZCBhIGRlZXAgYW5kIG1lYW5pbmdmdWwgY29ubmVjdGlvbi4gCkkgc2F5IHRob3VnaCB0aGF0IHRoZSBidXR0ZXJmbHksIHRoZSB3YWxsIHNwbGl0IHdpdGggZmVldCBzcGxheWVkIG91dCBmb3IgZXh0ZXJuYWwgcm90YXRpb24gd29yaywgdGhlIGZyb2cgcG9zZSwgYW5kIHRoZSBpbmNsaW5pbmcgcGFuY2FrZSB3ZXJlIGFsbCBhIG1haW5zdGF5IGluIG15IHJvdXRpbmUuIE5vdGljZSBob3cgSSBkaWQgbm90IGluY2x1ZGUgdGhlIGhvcnNlc3RhbmNlLiBJbiBteSBvd24gZXhwZXJpZW5jZSwgdGhhdCBzdHJldGNoIHdhcyBnb29kIGZvciBub3RoaW5nLCBzbyBJIGRyb3BwZWQgaXQuIFlvdXIgbWlsZWFnZSBtYXkgYmUgZGlmZmVyZW50LCBzbyBqdXN0IGV4cGVyaW1lbnQhCk5vIG1hdHRlciBob3cgdGhleSB3ZXJlIHdyaXR0ZW4gd2VsbCwgbm8gbWF0dGVyIGhvdyB0aGV5IGNyZWF0ZWQgaW4gYSBnb29kIGludHRlbGlnZW5jZSwgbm8gYm90cyBjYW4gYmUgc3VjY2Vzc2Z1bCBhcyBzdWNoIGFzIGEgcGVyc29uLiAKV29ya2VycyBhdCBTaGVuIFpob3UgUWkgR29uZyBUdWkgTmEgICB3aGljaCBvZmZlcnMgYmFjayBhbmQgZm9vdCBydWJzIG9uIGEgc2lnbiBpbiB0aGUgZnJvbnQgICB3ZXJlIGJ1c3RlZCBmb3Igb2ZmZXJpbmcgc2V4dWFsIGZhdm9ycyBmb3IgYmV0d2VlbiAkNjAgYW5kICQ4MCBkdXJpbmcgdGhyZWUgdW5kZXJjb3ZlciBzdGluZ3MgaW4gTWF5LCBhIE1hbmhhdHRhbiBTdXByZW1lIENvdXJ0IGxhd3N1aXQgZmlsZWQgYnkgdGhlIGNpdHkgTGF3IERlcGFydG1lbnQgY2xhaW1zLgpJdCBpcyB0aGUgbGF0ZXN0IGJsb3cgdG8gdGhlIGxvY2FsIGxpY2Vuc2VkIGNsdWJzIGluZHVzdHJ5IGZvbGxvd2luZyB0aGUgUGFudGhlcnMgR3JvdXAncyBkZWNpc2lvbiB0byBzaHV0IHRoZSBMYXZpbmd0b24gUGFudGhlcnMgQ2x1YiBhIGZvcnRuaWdodCBhZ28uIENsdWIgcHJlc2lkZW50IFJvYiBXaWxsaWFtcyBjb3VsZG4ndCBiZSBjb250YWN0ZWQgZm9yIGNvbW1lbnQgeWVzdGVyZGF5IGFuZCB0aGUgY2x1YidzIGRlYnQgYW5kIHRoZSBudW1iZXIgb2YgY3JlZGl0b3JzIHJlbWFpbnMgdW5jbGVhci4gCk1pbGxlciBhbmQgbWVyJ3MgbW90aGVyLCBNcnMuIFNpbW9uIEZ1bnQuIApDaGlsbHMgYmVjYW1lIG1pbGxpc2Vjb25kcywgbWlsbGlzZWNvbmRzIGJlY2FtZSBzZWNvbmRzLCB1bnRpbCBHcmFoYW0gc2lnaHQgaW50byB0aGUgZnV0dXJlIGZpbmFsbHkgc2V0dGxlZCBhdCBhcm91bmQgdGVuIGZ1bGwgc2Vjb25kcy5UZW4gc2Vjb25kcyBhaGVhZCBvZiBvdXIgY3VycmVudCB0aW1lbGluZSBpcyB3aGVyZSBoZSBleGlzdGVkLiAKRm9yIG9yZGluYXJ5IHdvcmQgcHJvY2Vzc2luZyBhbmQgd2ViIHJlc2VhcmNoLCBpdCBtYWtlcyBub3QgYSBiaXQgb2YgZGlmZmVyZW5jZS4uIApZb3Ugc291bmQgdmVyeSB3ZWxsIG1pbmRlZC4gSSBubyB0aGVyYXBpc3QsIGJ1dCBJIHNheSB5b3Ugb24gdGhlIHJpZ2h0IHRyYWNrIGZvciBzdXJlLiBJIHdhcyBwcmV0dHkgaGVhdnkgb24gb3BpYXRlcyBmcm9tIDE1IDE2IGFuZCBJIG11c3Qgc2F5IHRoYXQgdGhhdCBwbGF5ZWQgYSBodWdlIHBhcnQgaW4gbXkgc2VsZiBjb25maWRlbmNlIGRlZmxhdGluZyBsaWtlIGl0IGRpZC4gCkJ1dCwgaXQgZG9lcyBzZWVtIHRoYXQgc29tZSBsYXdzIHdlcmUgdmlvbGF0ZWQgaW4gdGhlIE1haW5lIGNhbXBhaWduIGJlY2F1c2Ugbm90IGFsbCBvZiB0aGUgbW9uZXkgY2FtZSBmcm9tIENhdGhvbGljIGRpb2Nlc2VzIGluIHRoZSBVUy4gQWJvdXQgJDI1MiwwMDAgc2VlbXMgdG8gaGF2ZSBjb21lIGZyb20gdGhlIG1hZ2ljIGFuZCBib3R0b21sZXNzIHB1cnNlIHRoYXQgaXMgdGhlIFZhdGljYW4uIApJIGFjdHVhbGx5IGF2b2lkZWQgdGhlIGZvcnVtIGR1cmluZyB0aGUgS2F2YW5hdWdoIGhlYXJpbmdzIGZvciB0aGUgbW9zdCBwYXJ0LCBhbmQgYWdhaW4gYWZ0ZXIgYSBjb3VwbGUgd2Vla3Mgb2YgdGhlIEZvcnRoIHN1aWNpZGUsIGJlY2F1c2UgU1NDIGVuZG9yc2VzIHRoZSBjdWx0aXZhdGVkIGRlbHVzaW9ucyBvZiBwZXJzZWN1dGlvbiBJIGluaXRpYWxseSBlbmNvdW50ZXJlZCBhZnRlciBteSBvd24gYXR0YWNrLiAKVGhlIGZpcnN0IHBlcnNvbiBjb3VsZCwgZm9yIGluc3RhbmNlLCBwbGFjZSBhIGJldCBvZiAkNS4gSXQgd291bGQgdGhlbiBtb3ZlIHRvIHRoZSBuZXh0IHBsYXllciB3aG8gd291bGQgZWl0aGVyICJzZWUiIHRoaXMgYW1vdW50IChhbmQgdGh1cyBhZGQgaW4gaGVyIG93biBmaXZlciksICJyYWlzZSIgaXQgKHdoaWNoIHdvdWxkIGJlIHRvc3NpbmcgaW4gdGhhdCAkNSBhbmQgYW5vdGhlciAkNSBmb3IgdGhlIHJhaXNlKSwgb3IgImZvbGQiICh3aGljaCBpcyB3aGVyZSB5b3UgbGF5IHlvdXIgY2FyZHMgZG93biBhbmQgbG9vayBhdCBldmVyeW9uZSBlbHNlIGV4cGVjdGFudGx5IGJlY2F1c2UgeW91J3JlIGRvbmUgZm9yIHRoYXQgcm91bmQgYW5kIHlvdSBkb24ndCB0aGluayB5b3UncmUgZ29pbmcgdG8gd2luLiAKVGhpcyBjYW4gYmUgb2ZmIHB1dHRpbmcgdG8gV2VzdGVybiBmb2xrcyB3aG8gdGVuZCB0byBiZSBtb3JlIGluZGl2aWR1YWxpc3RpYy4gSWYgeW91IGFyZSB0aGlua2luZyBhYm91dCBtYXJyaWFnZSwgdGhlbiBJIHdvdWxkIGNvbnNpZGVyIGhvdyB0aGVzZSByZWxhdGlvbnNoaXBzIHdpbGwgcGxheSBpbnRvIHlvdXIgcmVsYXRpb25zaGlwIG92ZXIgdGltZSBhbmQgbWFrZSBzdXJlIHRoYXQgeW91IGFyZSBvbiB0aGUgc2FtZSBwYWdlIHJlZ2FyZGluZyB0aGUgcm9sZSBvZiBwYXJlbnRzIGluIHlvdXIgbGlmZSBhbmQgaW4geW91ciBraWRzIGxpdmVzLi4gCkJ1dCBpdCB3YXMgY2xhc3NpYyBzcGluLiAKVGhlIGdyYXkgdHVycmV0cyBvZiB0aGUgRXZlcmdyZWVuIGZlZWQgbWlsbCB0b3dlciBvbmx5IGEgYmxvY2sgZnJvbSBNYWluIFN0cmVldCBsaWtlIHRoZSBzdXBlcnN0cnVjdHVyZSBvZiBhIGJhdHRsZXNoaXAuIFRoZSBCcm9ja3dheSBmYWN0b3J5LCBhIGZldyBibG9ja3MgYXdheSwgZm9yZ2VzIDEuMyBtaWxsaW9uIGJvdHRsZXMgYW5kIGphcnMgYSBkYXkgZm9yIENva2UsIFBlcHNpLCBhbmQgR2VyYmVyIEJhYnkgRm9vZHMsIGFtb25nIG90aGVycy4gCkhhdmluZyBhIGdhbWUgbGlicmFyeSBpcyBpbXBvcnRhbnQsIGJ1dCB0aGF0IGlzIG5vdCB0aGUgc3VtIHRvdGFsIG9mIHdoYXQgc3RlYW0gaXMuIFRoZXkgaGF2ZSBhIGxhcmdlIG51bWJlciBvZiBhZGRpdGlvbmFsIGZlYXR1cmVzLCBmcm9tIGNsb3VkIHNhdmluZyB0byBtb2Qgc3VwcG9ydCB0byBMaW51eCBzdXBwb3J0IHRvIGV2ZXJ5IG90aGVyIGRhbW4gdGhpbmcgdGhhdCBtYWtlIGl0IG1vcmUgdGhhbiBqdXN0IGEgbGlicmFyeS4gCklmIHlvdSdyZSBnb25uYSBwbGF5IGhvbGQnZW0geW91J3ZlIGdvdHRhIGxlYXJuIGhvdyB0byBwbGF5IGl0LgpCcml0aXNoIHBva2VyIHNpdGVzIGFyZSBhbHNvIGV4cGVjdGVkIHRvIHNlZSBhIHJldHVybiBvZiBiaWcgc3BlbmRpbmcgRXVyb3BlYW4gcG9rZXIgcGxheWVycywga25vd24gYXMgd2hhbGVzLCB3aG8gaGFkIGJlZW4gYXR0cmFjdGVkIHRvIEZ1bGwgVGlsdCwgUG9rZXJTdGFycyBhbmQgQWJzb2x1dGUgYmVjYXVzZSBpdCBnYXZlIHRoZW0gdGhlIGNoYW5jZSB0byBwbGF5IGFnYWluc3QgQW1lcmljYSBtb3N0IGZhbW91cyBwbGF5ZXJzLiAKVGhhdCBzYWlkLCB0aGVyZSBhcmUgc29tZSB2ZXJ5LCB2ZXJ5IGN1dGUgZHJlc3NlcyB0aGF0IGFyZSB2ZXJ5IGVhc3kgdG8gcHV0IG9uIGF2YWlsYWJsZSBpbiBzb21lIG9mIHRoZSBKYXBhbmVzZSBzdG9yZXMsIHRoYXQgSSBoYXZlbiBzZWVuIGFueXdoZXJlIGVsc2UuIENoZWNrIG91dCB0aGUgYmFieSBzdG9yZXMgYW5kIHNlZSB3aGF0IHlvdSBjYW4gZmluZC4KW2FwcGxhdXNlXSBXZSBoYXZlIHRvIGRlYWwgd2l0aCBkZWF0aCB0aHJlYXRzLiAKTGEgcHlyb21hbmllIGxvcnNxdSdlbGxlIGVzdCBsaWUgIGRlcyBmYWl0cyBkZSB2aW9sZW5jZSBtJ2luc3BpcmUgdG91am91cnMgcGx1cyBvdSBtb2lucyBkZSBzdXNwaWNpb24gZCdpbmZlc3RhdGlvbiBkbW9uaWFxdWUuIApUaGUgU2VuYXRlIGdhbWJsaW5nIGJpbGwgd291bGQgYWxzbyBhbGxvdyB0aGUgU2VtaW5vbGUgVHJpYmUgdG8gb2ZmZXIgY3JhcHMgYW5kIHJvdWxldHRlIGF0IGl0cyBjYXNpbm9zIGFuZCBpdCB3b3VsZCBhbGxvdyBTb3V0aCBGbG9yaWRhIHRyYWNrcyB0byBhZGQgYmxhY2tqYWNrLiAKWWFhciBuZSBZYWFyIG5lIHlhYW1heiBnaWJpIHRhcmloaSBvbGFuIGJpciBtZW1sZWtldC4gCkkgdGhpbmsgdGhlIGhpZ2ggQVBNIChzdGlsbCBoYXZlIHRvIGdvIGNoZWNrIHRoZSB2aWRlbyBteXNlbGYgZm9yIGl0KSBodXJ0cyB0aGUgc2lnbmlmaWNhbmNlIG9mIHRoZSBldmVudCBxdWl0ZSBhIGJpdC4gV2hlbiBJIGhlYXJkIGFib3V0IHRoaXMgZXZlbnQsIG15IGZpcnN0IHRob3VnaHQgd2FzICAgIkNhbiB0aGUgQUkgZGVzdHJveSBodW1hbnMgYXQgbWFjcm8/IiBTb21lb25lIG1lbnRpb25lZCB0aGVyZSB3YXMgYW4gQVBNIGNhcCwgaG93ZXZlciwgYnV0IEkgc3RpbGwgaW1hZ2luZWQgdGhlIEFJIGJlaW5nIGFibGUgdG8gc3BsaXQgYW5kIGNvbnRyb2wgYXJtaWVzIGZhciBiZXR0ZXIgdGhhbiBhIGh1bWFuLiBBbmQgdGhhdCB3aGF0IGhhcHBlbmVkICAgdXNpbmcgaGlnaCBBTVAgYXMgd2VsbCBpbiBhbiBvYnZpb3VzIGV4cGxvaXQgb2YgY29uZGl0aW9ucyBvdGhlcndpc2UgaW50ZW5kZWQgdG8gbWFrZSBhIGNvbXBhcmlzb24gYmV0d2VlbiBodW1hbiBhbmQgbWFjaGluZSBzdHJhdGVnaWMgaW50ZWxsaWdlbmNlLi4gClRoZSBuZXh0IHR5cGUgaXMgY2FsbGVkIHRocmVlIG9mIGEga2luZCB3aGVyZWluIHRocmVlIG91dCBvZiB0aGUgZml2ZSBjYXJkcyBpbiBvbmUncyBwb2tlciBoYW5kcyBhcmUgdGhlIHNhbWUuIApNeSBlbnRpcmUgZmFtaWx5IGlzIHJlYWxseSBiaWcgYnV0IHdlIGFsbCBoYXZlIGdvb2QgYmxvb2QgcHJlc3N1cmUsIGxvdyBjaG9sZXN0ZXJvbCwgbm8gaGlzdG9yeSBvZiBkaWFiZXRlcywgZXRjLkkgZG8gZWF0IHZlcnkgY2xlYW4sIEkganVzdCBlYXQgYSBsb3QgYW5kIGhhdmUgYSByYXRoZXIgc2VkZW50YXJ5IGxpZmUgc3R5bGUgcmlnaHQgbm93LlRoYXQgYmVpbmcgc2FpZCBJIGRvIGhhdmUgb3RoZXIgaGVhbHRoIHJlbGF0ZWQgaXNzdWVzIGNyb3BwaW5nIHVwIGZyb20gbXkgc2l6ZSBzbyBhbSBnb2luZyB0byBiZSBjdXR0aW5nIGRvd24gdG8gdG8gYWJvdXQgMTQ1IDE1MCBrZyB0aGlzIHN1bW1lciB0byBzZWUgaG93IEkgZmVlbC4gMTkgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb1NpbmNlIG1vcmUgdGhhbiBsaWtlbHkgbm90IGdvaW5nIHRvIGJlIGdvaW5nIHRvIFdvcmxkcyBpbiBJcmVsYW5kIHRoaXMgeWVhciBoYXZlIGRlY2lkZWQgdGhhdCBhZnRlciBteSBtZWV0IGF0IHRoZSBlbmQgb2YgdGhpcyBtb250aCBJIGFtIGdvaW5nIHRvIGdvIG9uIGEgY3V0LiAKSGUgc29tZXRpbWVzIGhhcyBmcmllbmRzIGNvbWUgb3ZlciBmb3IgYSBtYXNzYWdlIHRvIGFjdCBhcyB1bmRlcmNvdmVyIGFnZW50cywgdG8gdGVsbCBoaW0gd2hldGhlciBhbnkgImV4dHJhIHNlcnZpY2VzIiB3ZXJlIG9mZmVyZWQuCllvdXIgY29zdDogJDE4LjcgbWlsbGlvbiBhIHllYXIuIChIb3cgbWFueSBjaGlsZCB3ZWxmYXJlIGNhc2Ugd29ya2VycyBtaWdodCB0aGF0IGJ1eT8pLiAKQ291bGQgYmUgZ29vZCBpbiBzaG9ydCB0ZXJtIGJ1dCBpdCBub3doZXJlIG5lYXIgd2hhdCBtb3N0IG9mIHVzIGluIHRoaXMgc3ViIGFyZSBob3BpbmcgZm9yIHdoZW4gaXQgY29tZXMgdG8gYSBidWxsIHJ1bi4gTXkgZmF2IFR3aXRjaCBTdHJlYW1lciB3aG8gSSBpbiBsb3ZlIHdpdGggaGFzIGJlZW4gdHJ5aW5nIHRoZSBwYXN0IGZldyBtb250aHMgdG8gZ2l2ZSBpdCBhIGdvIGFzIGEgY2FyZWVyIGJ1dCBzdGlsbCBjYW4gY3JhY2tlZCA1MCB2aWV3ZXJzLiBTaGUgZ2l2aW5nIGl0IGFub3RoZXIgbW9udGggYnV0IGlmIGl0IGRvZXNuIHdvcmsgb3V0IHNoZSBnb2luZyB0byB1bml2ZXJzaXR5IGluIEV1cm9wZSBhbmQgd29uIHN0cmVhbSBhdCBhbGwgbmV4dCB5ZWFyLiBJIG5lZWQgdGhlIG1hcmtldCB0byBwdW1wIE5PVyBzbyBJIGNhbiBzd29vcCBpbiBqdXN0IGJlZm9yZSBzaGUgZ2l2ZXMgaGVyICJwYWNrIGl0IHVwLCBidXQgdGhhbmsgeW91IHNvIG11Y2ggZm9yIHlvdXIgc3VwcG9ydCIgZXRjLiBnbHVtIHNwZWVjaCB3aXRoIGEgMTBrIEkgQkVMSUVWRSBJTiBZT1UhISEgZG9uYXRpb24gb3V0IG9mIG5vd2hlcmUgYW5kIHNoZSBqdXN0IHN0YXJlcyBhdCB0aGUgc2NyZWVuIGluIGRpc2JlbGllZiBhbmQgc3RhcnRzIGNyeWluZwpNZWxpc3NhSnVpY2UxMyAgMTk5IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KSSBkbyB0aGluayB0aGlzIGlzIHBhcnQgb2YgaXQuIApBbnkgY29udGFjdCBpbmZvcm1hdGlvbiBmb3IgdGhlIGNvbXBhbnkgdGhhdCBoYW5kbGVzIHlvdXIgYmVoYXZpb3JhbCBoZWFsdGggYmVuZWZpdHMgKHRoZXkgb2Z0ZW4gY29udHJhY3RlZCB0byBzcGVjaWFsaXplZCBmaXJtcykgd2lsbCBiZSBpbiB0aGVyZS4gQ29udGFjdCB0aGUgY29tcGFueSBkaXJlY3RseS4gCk5vbmUgb2YgdGhpcyBpcyBhIGRpc3BhcmFnZW1lbnQgb2YgdGhlIHBhdGllbnRzLiBJdCBqdXN0IGEgcmVhbGx5IGhhcmQgbWV0cmljIHRvIHVzZSB0byBqdWRnZSBwYWluIGJ5IGFuZCBpdCB2ZXJ5IGhhcmQgZm9yIHRoZSBwYXRpZW50cyB0byBwcm9wZXJseSBhcnRpY3VsYXRlIHRoZWlyIGxldmVsIG9mIGRpc2NvbWZvcnQuIApXaGljaCBtZWFucyBwZW9wbGUgYXJlIGdvaW5nIHRvIGxvc2Ugam9icy4gSm9icyB0aGF0IGNhbiBhY3R1YWxseSBlYXJuIHBlb3BsZSBhIGRlY2VudCBhbW91bnQgb2YgbW9uZXkgZGVzcGl0ZSBiZWluZyBpbiBhbiBpbmNvbWUgYnJhY2tldCB0aGF0IHlvdSB3b3VsZG4ndCBleHBlY3QgdG8gZWFybiB3ZWxsLgpFdmVuIHdoZW4gaGUncyBub3Qgd29ya2luZyBhdCBhbGwsIEknbSBub3QgYWxsb3dlZCB0byBmb2N1cyBvbiBteSB3b3JrLiBJdCdzIHNvIHVuZmFpciBiZWNhdXNlIGlmIEkgd2VyZSBhIG1hbiwgYW5kIG15IHdpZmUgd2VyZW4ndCB3b3JraW5nLCBJIHdvdWxkIGJlIGFsbG93ZWQgdG8gZXhwZWN0IGhlbHAuIApHb29nbGUgZmVhdHVyaW5nIHRoZWlyIG93biBwcm9kdWN0cyBhaGVhZCBvZiBjb21wZXRpdG9ycyBpbiB0aGVpciBzZWFyY2ggZW5naW5lLgpUaHJlZSBkYXlzIGxhdGVyIHRoZSBwYWluIGlzIHN0aWxsIHRoZXJlIGFuZCBJIGZlZWwgd29yc2UsIEkgY3J5aW5nIGJlZ2dpbmcgbXVtIHRvIHRha2UgbWUgdGhlIGRvY3RvcnMgYW5kIHNoZSBldmVudHVhbGx5IGdpdmVzIGluLiAKSGUgZm91Z2h0IGZvciBkZWNhZGVzIHRvIGJlIGNvbXBlbnNhdGVkIGFuZCBldmVuIHRob3VnaCBoZSBlYXJuZWQgYSBicm9uemUgc3RhciBmb3IgdmFsb3IgYW5kIHdvcmtlZCB3aXRoIHRoZSBGQUEsIGhlIGRpZG4gc3RhcnQgcmVjZWl2aW5nIGEgY2hlY2sgdW50aWwgMjAwMiAoYW5kIGl0IHdhc24gdmVyeSBtdWNoIG1vbmV5KS4gSGUgd2FzIGRpYWdub3NlZCB3aXRoIGNhbmNlciBpbiAyMDEyLiAKQmVjYXVzZSBtb3N0IHN0dWRlbnRzIGluIFF1ZWJlYyBtdXN0IGF0dGVuZCBGcmVuY2ggbGFuZ3VhZ2Ugc2Nob29scywgc29tZSBwYXJlbnRzIHdlcmUgYXZvaWRpbmcgdGhpcyBieSBzZW5kaW5nIHRoZWlyIGNoaWxkcmVuIGZvciBhIHNob3J0IHRpbWUgdG8gRW5nbGlzaCBsYW5ndWFnZSBwcml2YXRlIHNjaG9vbHMgYW5kIHRoZXJlYnkgcXVhbGlmeWluZyBmb3IgcHVibGljIEVuZ2xpc2ggbGFuZ3VhZ2Ugc2Nob29scy4KRGFucyBsZSBDb3JhbiwgaWwgeSBhICBib2lyZSBldCAgbWFuZ2VyLCB0b3V0IGV0IGxlIGNvbnRyYWlyZSBkZSB0b3V0LiAKQWdhaW4sIENvaGVuIGFkbWl0dGVkIHRoYXQgVHJ1bXAgd2FzbiBvcmRlcmluZyBoaW0gdG8gZG8gdGhpcyBzaGl0LiBJZiBUcnVtcCBjb21taXR0ZWQgY2FtcGFpZ24gZmluYW5jZSB2aW9sYXRpb25zICh3aGljaCBhcmUgYSBiaWcgZmF0IHdobyBmdWNraW5nIGNhcmVzPyBhcyBmYXIgYXMgdGhpbmdzIHlvdSBjb3VsZCB0cnkgdG8gaW1wZWFjaCBhIHByZXNpZGVudCBmb3IsIGJ0dykgaXQgc2VlbXMgaXQgd2FzIENvaGVuIGZhdWx0LiBBbmQgc2luY2UgVHJ1bXAgbWlnaHQgYmVlbiBtYWtpbmcgcGF5bWVudHMgdG8gYWxsIHNvcnRzIG9mIHdvbWVuIGFuZCBjb21wYW5pZXMgZm9yIFlFQVJTIGJlZm9yZSBldmVyIHJ1bm5pbmcsIGl0IGNvdWxkIGVhc2lseSBiZSBhcmd1ZWQgdGhhdCB0aGVzZSBhcmVuIHJlYWxseSBjYW1wYWlnbiBmaW5hbmNlIHZpb2xhdGlvbnMuCkNoZWNrIG91dCB0aGUgVm9sdW50ZWVyIEFwcHJlY2lhdGlvbiBXZWVrIHdlYnBhZ2UgZm9yIG1vcmUgaW5mb3JtYXRpb24sIGFuZCBtYWtlIHN1cmUgeW91ciBvcmdhbml6YXRpb24gaXMgYXBwcmVjaWF0ZWQgdGhpcyBTcHJpbmchLiAKSSB3YXMgcGFydCBvZiB0aGUgZW5naW5lZXJpbmcgdGVhbSBvZiBzZW5pb3IgY2xhc3NtZW4gYXQgdGhlIFUgbGFzdCB5ZWFyIHRoYXQgY29tcGxldGVkIHBhcnQgb2YgdGhlIHJlc2VhcmNoIGludG8gdXNpbmcgdG9sbCByb2FkcyAoYW5kIGJ1c3NlcywgYW5kIG90aGVyIGVuZ2luZWVyaW5nIHByb2plY3RzKSBmb3IgYmlnIGNvdHRvbndvb2QgY2FueW9uLiBUaGUgdG9sbHMgd2VyZW4gbmVjZXNzYXJpbHkganVzdCBmb3IgdGhlIHJvYWRzLCBidXQgdG8gdHJ5IGFuZCBzdXBwbGVtZW50IHRoZSB0aW55IGJ1ZGdldCBhbGxvdGVkIHRvIGJpZyBjb3R0b253b29kIGNhbnlvbi4gVGhlIHRvbGxzIHdvdWxkIGhlbHAgZm9yIHNhbml0YXRpb24gZmFjaWxpdGllcywgdHJhaWwgbWFpbnRlbmFuY2UsIGNvbnNlcnZhdGlvbiwgYnJpZGdlcywgYWRkaXRpb25hbCBidXNzaW5nLCBldGMuIApJdCdzIG5vdCBhIGZhaWx1cmUgb2YgcmVhZGluZyBjb21wcmVoZW5zaW9uIG5vciBpcyBpdCBhIGZhaWx1cmUgdG8gdW5kZXJzdGFuZCB0aGF0IHlvdSdyZSBzYXlpbmcgaXQncyBhIHBlcnNvbmFsIG9waW5pb24uIEl0J3MganVzdCBhIHN0eWxlIG9mIGNvbW11bmljYXRpb24gSSdtIGNyaXRpY2l6aW5nLiAiSSBmZWVsIGxpa2UgOTAlIG9mIGJvdWxkZXIgcmVzaWRlbnRzIGFyZSAiIHdoZW4gd2UgYXJlIHRhbGtpbmcgYWJvdXQgYm91bGRlciByZXNpZGVudHMgYmVpbmcgZG9lcyBub3QgYWRkIHRvIHRoZSBkaXNjdXNzaW9uLiBJdCBqdXN0ICJjaXJjbGUgamVya3MiIHdoYXQgaXMgYWxyZWFkeSBiZWluZyBkaXNjdXNzZWQsIGJ1dCBub3cgYSByZWFkZXIgaGFzIGEgc2hhZG93IG9mIGEgZmFsc2Ugc3RhdGlzdGljIGluamVjdGVkLiBUaGUgcG9zdGVyIGlzIHRyeWluZyB0byB1c2UgdGhpcyB0byBmb3J0aWZ5IHRoZWlyIHN0YXRlbWVudCwgYnV0IHRoZXJlIGlzIG5vIHJlYWwgY29udGVudCB0byBjb250cmlidXRlLiBTZWUgd2hlcmUgSSdtIGNvbWluZyBmcm9tVGFsbG9uaXVzICAxIHBvaW50ICBzdWJtaXR0ZWQgNSBkYXlzIGFnbwpJIGFjdHVhbGx5IGxvdmUgdGhlIGNyYXp5IFNob3J0c3RhY2tlcnMgdGhlIG1vc3Qgb2YgYWxsIGZpc2guLiAKU2hlIG9ubHkgZnJlYWtzIG91dCBpZiB5b3UgdHJ5IGFuZCBwaWNrIGhlciB1cCBhbmQgd2lsbCBjYWxtIGRvd24gYW5kIGxlYW4gaW50byB5b3Ugb25jZSBzaGUgdW5kZXJzdGFuZHMgc2hlIGlzbid0IGdvaW5nIHRvIGRpZS4gCkluIHN0b3J5IGFmdGVyIHN0b3J5IGluIHRoaXMgYnJpbGxpYW50IG5ldyBjb2xsZWN0aW9uLCBBbGljZSBNdW5ybyBwaW5wb2ludHMgdGhlIG1vbWVudCBhIHBlcnNvbiBpcyAuIApGaXJzdCBvZmYsIHRoZSB0cmFkaXRpb25hbCBzaGlwIHdlIHRoaW5rIG9mIHdoZW4gd2UgdGhpbmsgb2YgIlZpa2luZ3MiIGlzIG1vc3QgbGlrZWx5IGEgbG9uZ3NoaXAsIHRoZSBtb3N0IGZhbW91cyBleGFtcGxlIG9mIHdoaWNoIGlzIHByZXNlcnZlZCBhdCB0aGUgVmlraW5nIFNoaXAgTXVzZXVtIGluIE5vcndheS4gVGhlIE9zZWJlcmcgc2hpcCBoYXMgaXMgYSAxNSAicm9vbSIgc2hpcCwgbWVhbmluZyBpdCBoYXMgMTUgcGFpcnMgb2Ygb2Fycywgb3IgInJvb21zIiBmb3IgMTUgcGFpcnMgb2Ygcm93ZXJzICgzMCBtZW4gaW4gYWxsKS4gVGhlIE5vcnNlIGFuZCBlYXJseSBFbmdsaXNoIHNoaXBzIHNlZW0gdG8gYmUgZGl2aWRlZCB0aGF0IHdheSBpbnRvICJyb29tcywiIGZyb20gd2hhdCB3ZSBrbm93IGZyb20gcmVjb3JkIGtlZXBpbmc7IEFsZnJlZCB0aGUgR3JlYXQgc2VlbXMgdG8gaGF2ZSBvcmRlcmVkIHNldmVyYWwgc2hpcHMgb2YgMjAgcm9vbXMgYW5kIHRoZXJlIHdlcmUgc29tZSB0aGF0IHdlcmUgbGFyZ2VyLiBJbiBhbnkgY2FzZSwgdGhlIE9zZWJlcmcgc2hpcCBpcyBmYWlybHkgd2VsbCBwcmVzZXJ2ZWQgYW5kIGhhcyBzZXJ2ZWQgYXMgYSBtb2RlbCBmb3IgcGVyY2VwdGlvbnMgb2YgTm9yc2Ugc2hpcHMgc2luY2UgdGhlbi4KSXQgc2VlbXMgdG8gaGF2ZSBhIGJpdCBmb3J3YXJkIGFuZCBiYWNrd2FyZHMgZm9yIE1vbGluby4gQ2hhcmdlcyB3ZXJlIGJyb3VnaHQgYWdhaW5zdCBoaW0gY2hpZWZseSB0aHJvdWdoIHRoZSB3b3JrIG9mIHBpZWNlcyBsaWtlIHRoZSBmaXJzdCBwcmVzZW50ZWQgYWJvdmUsIGJ5IHRoZSBKZXN1aXQgUGFvbG8gU2VnbmVyaSAoMTYyNCAxNjk3KSwgd2hvc2UgZmlyc3QgZWZmb3J0cyB3ZXJlIHVuc3VjY2Vzc2Z1bCBpbiBkaXNsb2RnaW5nIE1vbGlubywgd2l0aCBoaXMgb3duIHdvcmsgZmluZGluZyBpdHMgd2F5IHRvIHRoZSBJbmRleC4gSG93ZXZlciwgYnkgMTY4NSBoZSB3YXMgYWdhaW4gc2VudCB0byB0aGUgSW5xdWlzaXRpb24sIGFuZCBqdXN0IG1vbnRocyBiZWZvcmUgdGhpcyBib29rIHdhcyBwdWJsaXNoZWQsIGhlIHdhcyBhbHJlYWR5IHRyaWVkIGFuZCBpbXByaXNvbmVkLi4gClRob3NlIHBhdGllbnRzIHdpdGggbmVnYXRpdmUgcmVzdWx0cyBzaG91bGQgYmUgZGlhZ25vc2VkIHdpdGggbm9uIGNvZWxpYWMgZ2x1dGVuIHNlbnNpdGl2aXR5LiAKVGhpcyB3aWxsIG5vdCBvbmx5IHRvbmUgeW91ciBtdXNjbGVzIGJ1dCB3aWxsIGFsc28gYXdha2VuIHlvdXIgc2Vuc2VzLiAKR2l2ZSB0aGVtIHByaXZhY3kgaW4gdGhlaXIgYmVkcm9vbSBhbmQgdGhlIGJhdGhyb29tOyBkbyBub3QgcmVhZCB0aGVpciB3cml0dGVuIG9yIG9mZmxpbmUgam91cm5hbCwgYnV0IHNub29wIG9uIHRoZWlyIEludGVybmV0IHVzYWdlLiBJdCBiZSBhIGdvb2QgbGVzc29uIGZvciB0aGVtLCB0aGF0IG5vYm9keSBoYXMgcHJpdmFjeSBvbiB0aGUgSW50ZXJuZXQsIHRoYXQgdGhpbmdzIHlvdSBwb3N0IGNhbiBjb21lIGJhY2sgdG8gaGF1bnQgeW91LiAKU2lsaWNvbiBQcmFpcmllIHN0YXJ0dXAgY3J1c2g6SXMgdGhlcmUgc29tZSBraW5kIG9mIFNpbGljb24gUHJhaXJpZSBob3Qgb3Igbm90IEkgY2FuIGNoZWNrIG91dD8gSSdtIGtpbmRhIG5ldyBoZXJlLgpNb25leSBjYW4gYmUgbWFkZSBpbiBhbnkgbWFya2V0LiAKQnV0IGV2ZW4gdGhlbiB3ZSBhcmUgc3RhbmRpbmcgb24gdGhlIGZyYW1ld29ya3MgdGhhdCB0aGV5IGhhdmUgYWxyZWFkeSBsYWlkIG91dC4gCkkgZnJpZW5kcyB3aXRoIGEgY291cGxlIGVTcG9ydHMgcHJvcywgYW5kIGEgbG90IG9mIHRoZSBzdHVmZiBpbiB0aGVpciB0ZWFtIGhvdXNlIGlzICJmcmVlLCIgYXMgaW4sIHRoZSBwbGF5ZXJzIGRpZG4gZXhhY3RseSBwYXkgY2FzaCBtb25leSBmb3IgaXQsIGJ1dCB0aGV5IGhhdmUgdG8gdXNlIHVwIHdoYXQgbGl0dGxlIGZyZWUgdGltZSB0aGV5IGhhdmUgZHVyaW5nIHRoZSB3ZWVrIHRvIGZpbG0gc3BvbnNvciBjb250ZW50LiAKVGhlIGNyaXBwbGVkIHBhcmF0cm9vcGVyIGFnYWluIGJlY2FtZSBhIGhlcm8gd2hlbiBkdXJpbmcgdGhlIGJvbWIgcmFpZHMgaGUgc3Rvb2QgaW4gdGhlIGF0dGljIHdpdGggYSBzaG92ZWwgdW5kZXIgaGlzIGFybSBhbmQgdGhyZXcgdGhlIGluY29taW5nIEluY2VuZGlhcmllcyBvdXQgb2YgdGhlIGF0dGljIGRvd24gaW50byB0aGUgc3RyZWV0LiBUaGlzIGhvdXNlIHdhcyB0aGUgb25seSBvbmUgaW4gdGhlIHN0cmVldCB3aGljaCBkb2VzIG5vdCBjYXVnaHQgZmlyZS4gSGUgZm9yIHN1cmUgbmVlZGVkIHRoaXMgYWRyZW5hbGluZSBraWNrIGFuZCB3YW50ZWQgdG8gYmUgdGhlIGdyZWF0IGhlcm8uCklmIGFueW9uZSBzaG91bGQgYmUgc2hvd2Nhc2VkIGFzIGEgY29tbWVudGF0b3Igb24gb25lIG9mIHRob3NlIGJpZyBwb2tlciBUViBwcm9ncmFtcywgaXQncyB0aGUgTWFkIEdlbml1cy4gSGUgaGFzIGV4cGVyaWVuY2UsIGtub3dsZWRnZSwgYW4gb3BpbmlvbiBhbmQgYSB3aWxsaW5nbmVzcyB0byBiYWNrIGl0IHRvIHRoZSBoaWx0ICAgbm90IHRvIG1lbnRpb24gYSBjb2xvcmZ1bCwgY2FyZWZ1bGx5IGN1bHRpdmF0ZWQgY291bnRlbmFuY2UgdGhhdCBoYXMgY2hhbmdlZCBsaXR0bGUgdGhyb3VnaCB0aGUgZGVjYWRlczogVGhpbmsgTGFycnkgRmluZSBtZWV0cyBBbGxlbiBHaW5zYmVyZyBtZWV0cyBCb3pvLgpMZXMgZGV1eCBUcmlmbHV2aWVucyBmb250IHBhcnRpZSBkZXMgMTMgcG9saWNpZXJzIGV0IDExIGNpdG95ZW5zIGhvbm9ycy4gSWxzIG9udCByZXUgZGVzIGRjb3JhdGlvbnMgZGVzIG1haW5zIGR1IG1pbmlzdHJlIHF1YmNvaXMgZGUgbGEgU2N1cml0IHB1YmxpcXVlLCBNYXJ0aW4gQ29pdGV1eC4KOUEgOTEgaXMgb25lIG9mIHRoZSBOaWdodCBSb3lhbHR5IHVuaXRzLiBIZXIgc2tpbGwgZ2l2ZXMgaGVyIGluY3JlZGlibGUgZGFtYWdlIGR1cmluZyBuaWdodCB0aW1lLCB3aGljaCBpcyBvbmx5IHVzZWZ1bCBpZiBzaGUgYWN0dWFsbHkgaGl0dGluZyB0aGluZ3MuIE1ha2Ugc3VyZSBzaGUgaGFzIFBFUXMgb24gaWYgc2hlIGdvaW5nIGluIGF0IG5pZ2h0LiBBc2lkZSBmcm9tIHRoYXQgbm90ZSwgeW91IGNhbiBqdXN0IHBsYWNlIGhlciBsaWtlIGFueSBvdGhlciBBUlNNRytIRyBlY2hlbG9uLiBZb3UgbWF5IHdhbnQgdG8gcHV0IGhlciBpbiB3aGF0ZXZlciBwb3NpdGlvbiByZWNlaXZlcyB0aGUgbW9zdCBidWZmcyBmcm9tIHRoZSBTTUcgKG9yIFNNR3MpIGFuZCBIRywgc2luY2UgaGVyIGRhbWFnZSBtdWx0aXBsaWVyIGF0IG5pZ2h0IG1lYW5zIHNoZSBxdWl0ZSBkYW5nZXJvdXMgYWdhaW5zdCBib3RoIGFybW9yZWQgYW5kIHVuYXJtb3JlZCBlbmVtaWVzLCBldmVuIHRob3NlIHdpdGggZXZhc2lvbi4KU28sIGNhbiBhbnlvbmUgcmVjb21tZW5kIG1lIGEgZ29vZCBtb3ZpZSBhYm91dCBvciBpbnZvbHZpbmcgbGFuZ3VhZ2UvbGluZ3Vpc3RpY3MgdG8gYW5hbHl6ZT8gVGhlIG9ubHkgY3JpdGVyaWEgYXJlIHRoYXQgaXQgY2FuIGJlIGEgZG9jdW1lbnRhcnkgb3IgYW4gYW5pbWF0ZWQgZmlsbS4gSSB0aG91Z2h0IGFib3V0IGRvaW5nIEFycml2YWwsIGJ1dCB0aGUgcmFtcGFudCBsaW5ndWlzdGljIGRldGVybWluaXNtIHRoYXQgaXMgY2VudHJhbCB0byBpdHMgcGxvdCBpcyBhIGh1Z2UgdHVybiBvZmYuCkkgd3JpdGUgdG8gbGV0IHlvdSBrbm93LCB3aXRob3V0IHNvdW5kIGJpdGVzIG9yIHBvbGl0aWNhbCBjYWxjdWx1cywgbXkgdmlldyBvbiB0aGlzIGRlYmF0ZSBhbmQgdG8gcmVtaW5kIHlvdSBvZiBteSBkZWVwIGdyYXRpdHVkZSBmb3IgdGhlIHdvcmsgeW91IGRvIGVhY2ggZGF5LiIuIApTbywgbGV0IG1lIGdldCB0aGlzIHN0cmFpZ2h0OiB5b3VyIGRhZCBhbHJlYWR5IGhhZCBhIGZldyBkYXlzIHNjaGVkdWxlZCBvZmYgd29yayB3aGVyZSBoZSB3YXMgcGxhbm5pbmcgYSB0cmlwLiBBbmQgd2hlbiBoZSBsZWFybmVkIHRoYXQgaGUgd2FzIGxlYXZpbmcgd29yayBlYXJsaWVyIHRoYW4gZXhwZWN0ZWQgaGUgZGVjaWRlZCB0byBoZWFkIG91dCBvbiBoaXMgdHJpcCBlYXJsaWVyIHRoYW4gcGxhbm5lZC4gCkhvdyBUbyBGaW5kIEEgR3JlYXQgUG9rZXIgUm9vbQpKb2huIEtlcnJ5J3MgKEQgTUEpIGNvbmZpcm1hdGlvbiBoZWFyaW5nIGJlZm9yZSB0aGUgU2VuYXRlIEZvcmVpZ24gUmVsYXRpb25zIENvbW1pdHRlZSB0byBiZWNvbWUgdGhlIG5leHQgU2VjcmV0YXJ5IG9mIFN0YXRlIGluIHRoZSBIYXJ0IFNlbmF0ZSBPZmZpY2UgQnVpbGRpbmcgb24gQ2FwaXRvbCBIaWxsIEphbnVhcnkgMjQsIDIwMTMgaW4gV2FzaGluZ3RvbiwgREMuIE5vbWluYXRlZCBieSBQcmVzaWRlbnQgQmFyYWNrIE9iYW1hIHRvIHN1Y2NlZWQgSGlsbGFyeSBDbGludG9uIGFzIFNlY3JldGFyeSBvZiBTdGF0ZSwgS2VycnkgaGFzIHNlcnZlZCBvbiB0aGlzIGNvbW1pdHRlZSBmb3IgMjggeWVhcnMgYW5kIGhhcyBiZWVuIGNoYWlybWFuIGZvciBmb3VyIG9mIHRob3NlIHllYXJzLiAKVGhlIGZvdW5kYXRpb24gaGFzIG1ldCBjZXJ0YWluIHN0YW5kYXJkcyBhbmQgcmVxdWlyZW1lbnRzIG9mIHRoZSBJbnRlcm5hbCBSZXZlbnVlIFNlcnZpY2Ugd2l0aGluIHRoZSBtZWFuaW5nIG9mIElSUyBDb2RlIFNlYy4gCk5vdyBoZSBhZGRlZCBhIHdob2xlIG5ldywgbG92aW5nIGZhbWlseSB0byBjYXJlIGFuZCBzaG93IHVwIGZvciBoaXMgZXZlbnRzLiAKSW4gTGV0ICdFbSBSaWRlLCB0aGUgcGxheWVyIG11c3Qgb3B0IGluIHRvIHRoZSBwb3NzaWJsaXR5IHRvIHdpbiB0aGUgcHJvZ3Jlc3NpdmUgamFja3BvdC4gSWYgeW91ciBwbGF5ZXIgZ2V0cyB0byBiZSBhIFJveWFsIEZsdXNoLCB0aGV5IHdpbiB0aGUgcHJpemUuIEFsbCBvdGhlciBoYW5kcyByZWNlaXZlIHByZSBkZXRlcm1pbmVkIHBheW91dHMgYW5kIHRoZXkncmUgbm90IHF1YWxpZmllZCB0byByZWNlaXZlIGFueSBwYXJ0IG9mIHRoZSBqYWNrcG90IHBvb2wuCjIxOjIxIGlzIHRoZSBzYW1lIGFzIGJsYWNramFjaywgaXQgaXMganVzdCBhbm90aGVyIG5hbWUgZm9yIHRoZSBnYW1lLiBBcyBpbmRpY2F0ZWQgYnkgdGhlIG5hbWUgdGhlIGdvYWwgaXMgdG8gbWFrZSBhIGhhbmQgdGhhdCBhZGRzIHVwIHRvIDIxLiAKSSBkb24gdGhpbmsgQ29tbWFuZGVyIFdhdGVyZm9yZCBtdWNoIGNhcmVzIHdoYXQgaGFwcGVucyB0byBKdW5lIGFuZCBoZXIgdW5ib3JuIGJhYnkgYW55bW9yZSwgZXNwZWNpYWxseSBub3Qgbm93IHRoYXQgaXQgYmVlbiBjb25maXJtZWQgdGhhdCB0aGUgYmFieSBpc24gYmlvbG9naWNhbGx5IGhpcy4gCktub3cgdGhlIHNlbGxlcidzIHNpdHVhdGlvbjogU2VlIGlmIHlvdSBjYW4gZmluZCBvdXQgd2h5IHRoZSBzZWxsZXIgd2FudHMgdG8gbW92ZS4gClF1aXRlIG9mdGVuIGNhc2ggZ2FtZSBwbGF5cyBwb29ybHkgd2l0aCBzaGFsbG93IHN0YWNrcy4gQSBnb29kIGV4YW1wbGUgb2YgdGhpcyBpcyB1c2luZyBwdXNoL2ZvbGQgY2hhcnRzIGZvciBzdGFja3MgZ3JlYXRlciB0aGFuIDEyIGJpZyBibGluZHMgZnJvbSBsYXRlIHBvc2l0aW9uIGFuZCAxMCBiaWcgYmxpbmRzIGZyb20gZWFybHkgcG9zaXRpb24uIFdpdGggbW9yZSB0aGFuIHRob3NlIGRlcHRocywgdXNpbmcgYSBwdXNoL2ZvbGQgc3RyYXRlZ3kgaXMgZHJhc3RpY2FsbHkgaW5mZXJpb3IgdG8gYSBsaW1wL3B1c2gvZm9sZCBzdHJhdGVneSBmcm9tIHRoZSBzbWFsbCBibGluZCBhbmQgYnV0dG9uLCBhbmQgYSBtaW4gcmFpc2UvcHVzaC9mb2xkIHN0cmF0ZWd5IGZyb20gdGhlIG90aGVyIHBvc2l0aW9ucy4uIApVbmtub3duIE1ha2luZyBNb25leSBGYWN0cyBhYm91dCBWaWRlbyBQb2tlcgpBYnNvbHV0ZWx5IG5vIHZpY3RpbSBibGFtaW5nIGFuZC9vciB0cm9sbGluZy4gRW5nYWdpbmcgaW4gdGhpcyBiZWhhdmlvciB3aWxsIHJlc3VsdCBpbiBiZWluZyBiYW5uZWQuIExOTSBndWlkZWxpbmVzIG9mIHZpY3RpbSBibGFtaW5nIGNhbiBiZSBmb3VuZCBpbiB0aGUgV2lraS4KV2hpc3RsaW5nIEtldHRsZSBTb3VuZCBGcmVlIERvd25sb2FkCldvdWxkIGhhdmUgdHJpZ2dlcmVkIGFuIGFsYXJtIGhlcmUgYW5kIHdvdWxkIGhhdmUgYmVlbiBjb25zaWRlcmVkIGFzIGEgcG90ZW50aWFsbHkgZGFuZ2Vyb3VzIHRoaW5nIGZyb20gdGhlIGd1ZXN0J3MgcG9pbnQgb2YgdmlldywgdGhhdCBtYXliZSB0aGUgcGVyc29uIHdhcyBpbGwuIFdlIHdvdWxkIHdhbnQgdG8gaW5zcGVjdCBhbmQgc2VlIHRoYXQgdGhleSB3ZXJlIHNhZmUsIFd5bm4gc2FpZC4gCiJTb21lIGRheSBzb29uLCBwZXJoYXBzIGluIGZvcnR5IHllYXJzLCB0aGVyZSB3aWxsIGJlIG5vIG9uZSBhbGl2ZSB3aG8gaGFzIGV2ZXIga25vd24gbWUuIFRoYXQgd2hlbiBJIHdpbGwgYmUgdHJ1bHkgZGVhZCAgIHdoZW4gSSBleGlzdCBpbiBubyBvbmUgbWVtb3J5LiAKSmVkZXIga2FubiBzaWNoIGFsdCBvZGVyIGp1bmcgZXNzZW4gICBnYW56IG5hY2ggR2VzY2htYWNrISBJaHJlIEdlc3VuZGhlaXQgcHJvZml0aWVydCBsYW5nZnJpc3RpZyB2b24gZGVyIGJhc2VucmVpY2hlbiBLb3N0Li4gCkl0IGEgbm92ZWwgb3Bwb3J0dW5pdHkgdG8gdGFsayBhYm91dCB5b3VyIGJvZHkhLiAKQnV0IEkgY2FuIHNlZSBob3cgc29tZSB3b3VsZCBkaXNhZ3JlZS4uIApBIGNvbWJpbmF0aW9uIG9mIHRlY2huaWNhbCBpbm5vdmF0aW9uLCBhZ2dyZXNzaXZlIGludmVzdGluZyBhbmQgY29waW91cyBsYXllcnMgb2Ygb2lsIHJpY2ggc2hhbGUgaGF2ZSB0cmFuc2Zvcm1lZCB0aGUgUGVybWlhbiwgb25jZSBjb25zaWRlcmVkIGEgd29ybiBvdXQgcGF0Y2gsIGludG8gdGhlIHdvcmxkIHNlY29uZCBtb3N0IHByb2R1Y3RpdmUgb2lsIGZpZWxkLgpSZWFsIG1lbiwgeW91IHNlZSwgZG9uJ3QgcGxheSBpdCBzYWZlLiBUaGV5IGtub3cgdGhhdCB0aGUgYmlnIHJld2FyZHMgaW4gbGlmZSBhcmUgbm90IGluIGxvdyBzdGFrZXMgcG9rZXI7IHRoZSBiaWcgcmV3YXJkcyBhcmUgYXQgdGhlIGRhbmdlcm91cyBoaWdoIHN0YWtlcyB0YWJsZS4KT3V0c2lkZSBvZiB0cmF1bWEsIHRoZSBib2R5IG1haW50YWluZWQgYSB3b25kZXJmdWxseSBlZmZlY3RpdmUgc2VsZWN0aXZlIGJhcnJpZXIgaW4gdGhlIHNtYWxsIGludGVzdGluZSwgb25lIHRoYXQgYWxsb3dlZCBudXRyaWVudHMgdG8gZW50ZXIsIGJ1dCBrZXB0IG91dCBtZXRhYm9saWMgd2FzdGVzIGFuZCBtaWNyb2JpYWwgdG94aW5zIHJhbXBhbnQgaW4gdGhlIGludGVzdGluZXMuIFNpbmNlIHRoZSA1MHMgYW5kIDYwcywgYW50aWJpb3RpYyB1c2UgaGFzIGJlZW4gZnJhbnRpY2FsbHkgcHJlc2NyaWJlZCBmb3IgZXZlcnkgaW5mZWN0aW9uIGFuZCBpbmZsYW1tYXRpb24sIHBhcnRpY3VsYXJseSBwZWRpYXRyaWMgZWFyIGluZmVjdGlvbiwgYnJvbmNoaXRpcywgYW5kIHNvcmUgdGhyb2F0Lkl0IGlzIHNhZGx5IGlyb25pYyB0aGF0IG1vc3Qgb2YgdGhlc2UgaW5mZWN0aW9ucyBhcmUgdmlyYWwgaW4gbmF0dXJlLCBhbmQgbm90IG9ubHkgYXJlIHRoZSBhbnRpYmlvdGljcyBkYW1hZ2luZywgYnV0IHRoZXkgYXJlIHVsdGltYXRlbHkgdW5uZWNlc3NhcnkuIApNQUogMTVoNDguIEF0dGVudGlvbiBvbiBuZSBzZW1ibGUgcGFzIGF2b2lyIGNvbXByaXMgbW9uIHByb3BvcywgYydlc3QganVzcXUnIHByZXV2ZSBkdSBjb250cmFpcmUgdW4gImhvYXgiIGMnZXN0ICBkaXJlIHVuZSAiaW50b3giLCB1biBpbnZlbnRpb24gbWFsdmVpbGxhbnRlIHNpIHZvdXMgcHJmcmV6LCBwZW5zZXogcXVlIHMnaWwgeSBhdmFpdCByZWxsZW1lbnQgdW4gcHJvamV0IGRlIG1vc3F1ZSBkYW5zIGxhIHRvdXIgRWlmZmVsIG1tZSBzaSBsYSBwcmVzc2UgZXN0IGF1eCBvcmRyZXMsIEJGTVRWIGV0IGxlcyBtZGlhcyBlbiBhdXJhaWVudCBwYXJsICFCb25qb3VyLCBCcmF2byBwb3VyIHZvdHJlIGNvdXJhZ2UgICB1bmUgbW9zcXVlICBsYSBUb3VyIEVpZmZlbCBpbCBmYWxsYWl0IG9zZXIgISEhICAgZW4gZXNwcmFudCBxdWUgdm91cyBwb3VycmV6IGNvbnRpbnVlciBlbmNvcmUgbG9uZ3RlbXBzICBkaWZmdXNlciB2b3RyZSAicHJvc2UiLiBDb3JkaWFsZW1lbnQsIFVuIGxlY3RldXIuSWwgZmF1dCBwZW5zZXIgZGUgdGVtcHMgIGF1dHJlICBjaGFuZ2VyIHNlcyBsdW5ldHRlcyBvdSAgdml0ZXIgbGEgZGlzdHJhY3Rpb24uQXBycyBsJ2FmZmFpcmUgZGUgZ29kZXMgZW4gY2hvY29sYXQgZGUgbGEgTW9ubmFpZSBkZSBQYXJpcyBxdWkgdm9udCBwcmVuZHJlIHVuZSB2YWxldXIgZm9sbGUgZW4gdmllaWxsaXNzYW50LCBzYXVmIGdyb3NzZSBjYW5pY3VsZSBldCBwYW5uZSBkZSBqdXMgdm9pY2kgdW5lIG5vdXZlbGxlIGJsYWd1ZSwgb24gcnZlICFKZSB2aWVucyBkZSBjb25jb3VyaXIgZGFucyBsZSBwb3N0IHByY2RlbnQgcG91ciB1biBwb3N0ZSBkZSByZGFjdGV1ciBhdSBzZWluIGR1IG5vdXZlYXUgQ2hhcmxpZSBIZWJkbyByZ25yIHBhciBsZSBzYW5nIGRlIG9uemUgb3UgbW1lIGRpeCBzZXB0IG1hcnR5cnMuIApUaGVyZSB3ZXJlIG5pZ2h0cyBJIHdvbiAkODAwIGFuZCBuaWdodHMgSSBsb3N0ICQ4MDAuIFRoYXQgd2FzIHJvdWdoIG9uIG1lIGF0IHRoZSB0aW1lLiAKTGFkeUdhR2EpLiAKWWVzIG15IERIIChkZWFyIGh1c2JhbmQpIGlzIGdvbmUgYSBsb3QgYmVjYXVzZSBvZiB0aGUgaG91cnMgaGUgd29ya3MsIGFuZCBldmVuIG9uIGhpcyBvZmYgZGF5cyBJIHVzdWFsbHkgaGF2ZSBMTyAobGl0dGxlIG9uZSkgYXQgd29yayB3aXRoIG1lLCBzbyBJIHN0aWxsIGRvIGFib3V0IDk1JSBvZiB0aGUgd29yay4gClNjaG9vbCBidXNlcyBkb24gc3RhcnQsIHBpcGVzIGZyZWV6ZSwgaXQgZGFuZ2Vyb3VzIHRvIGJlIG91dHNpZGUgd2l0aG91dCBwcm9wZXIgY2xvdGhpbmcgZm9yIGV2ZW4gcHJldHR5IHNob3J0IHBlcmlvZHMgb2YgdGltZS4gCldoaWxlIGl0IHN0aW5ncyB0byBiZSBjYWxsZWQgb3V0IGZvciBwcml2aWxlZ2UgdGhhdCB5b3UgYXJlbiBldmVuIGF3YXJlIG9mIHNvbWV0aW1lcywgaXQgc291bmRzIGxpa2UgaGVyIGNvbW1lbnQgbWFkZSBzZW5zZSBpbiBjb250ZXh0LiBZb3Ugd2VyZSBwYXNzaW5nIGp1ZGdlbWVudCBvbiBzb21lIGFjdGlvbiB0aGF0IHlvdSBmb3VuZCAic3RyYW5nZSIgYW5kIGhlciByZXBseSB3YXMgIml0IG5vdCB5b3VyIHBsYWNlIHRvIHBhc3MganVkZ2VtZW50IG9uIHRoaXMgaXNzdWUiLiBTaGUgcG9pbnRlZCBvdXQgeW91ciBzdGF0dXMgYXMgYSBkaXNxdWFsaWZpZXIgYmVjYXVzZSBpdCB3YXMgcmVsZXZhbnQgdG8gdGhlIGlzc3VlIGF0IGhhbmQuClVzaW5nIHRoZSAxMCB0aXggPSAkMiBydWxlLCBldmVyeXRoaW5nIGVsc2UgaXMgcHJldHR5IG92ZXJwcmljZWQuIApIZSBhcG9sb2dpemVkLiAKVGhleSBhbHNvIGxpc3QgZW1lcmdlbmN5IG51bWJlcnMgaW4gY2FzZSBpbGxlZ2FsIGFjdGl2aXR5IG9jY3VycyBvbiB0aGUgdHJhaW5zLi4gCkRpZmZpY3VsdCB0byBzdW1tYXJpemUgaGVyZSwgYnV0IHdvcnRoIGEgbG9vay4gClNpbmNlIHRoaXMgZW50aXJlIGNvbmNlcHQgaXMgb25seSBhYm91dCAyIHllYXJzIG9sZCwgdGhlcmUgaXMgZ29pbmcgdG8gYmUgc29tZSBnaXZlIGFuZCB0YWtlIHdoaWxlIGFsbCBvZiB0aGlzIHN0dWZmIGdldHMgc29ydGVkIG91dC4uIApUaGlzIGZpbHRlcmVkIGNvbnRlbnQgaXMgbm90IHNhbWUgYXMgbGlrZSB0aGUgYWN0dWFsIGV2ZW50IGNvbnRlbnQgYmVjYXVzZSB0aGUgam91cm5hbGlzdCBlZGl0cyB0aGUgY29udGVudCBiYXNlZCBvbiBoaXMgYXR0aXR1ZGUsIG1vb2QgYW5kIGN1bHR1cmFsIGJhY2tncm91bmQgb3IgcHJlc3MgcG9saWNpZXMuLiAKSiBwcmlzIG1hIHNlbWFpbmUgZGUgY29uZyBsYSBzZW1haW5lIHByb2NoYWluZSBjYXIgaiBkZXMgdHJ1Y3MgIGZhaXJlICsgY29uZyAgdGVybWluZXIgc2lub24gamUgbGVzIHBlcmRzIGRvbmMgcGFzIGV1IGxlIHRlbXBzIGRlIHBydm9pciBkZSBwYXJ0aXIgZW4gdmFkcm91aWxsZSBET05DIGplIHZhaXMgcmVzdGVyIGF1IGNoYXVkICBnZWVrZXIgZXQgZmFpcmUgZGUgbGEgcGFwZXJhc3NlLi4gClNvbWUgdGhhdCBsb3ZlZCB0aGVtIGJ1dCBwYXNzZWQgYXdheS4gTW9uZXkgY2FuIHBheSBmb3IgdGhlaXIgZnVuZXJhbCBidXQgY2FuJ3QgcGF5IGZvciB0aGUgZW1vdGlvbmFsIGxvc3MgZm9yIHRoZWlyIGxvdmVkIG9uZS4uIApMaXZlIGluIFdoaXRlIFJvY2sgcmlnaHQgbm93IHNvIHdlIGdldCB0aGlzIGJpZyB2aWV3IGFscmVhZHkgYW5kIHdlIGRpZG4gd2FudCB0byBnaXZlIGl0IHVwLiAKT3NtYW4ga3lkbGFyIGdlY2UgeWFycyAoQXQgbWlkbmlnaHQgdGhleSBmZWxsZWQgbXkgT3NtYW4pClN1cHBvc2UgeW91ciBuZXQgaW5jb21lIGlzICQzMCwwMDAsIGZvciBleGFtcGxlLiAKSWYgeW91IGhhdmUgc29tZSBvZiB0aGUgcmVxdWlyZW1lbnRzIHlvdSBjYW4ganVzdCBhcHBseSBhbmQgaG9wZSBmb3IgdGhlIGJlc3QuLiAKVGhpcywgYWNjb3JkaW5nIHRvIE1hdXJpY2UgQmxhY2tidXJuLCBlbmNvdXJhZ2VzIHRoZSBwZXJjZXB0aW9uIHRoYXQgZ2FtYmxlcnMgaGF2ZSBoYWQgIm5lYXIgbWlzc2VzIiB3aGVuIHRoZXkgbG9zZS4KSSB0aGluayBteSBwaHlzaWNhbCB0aGVyYXBpc3QgaXMgbnV0cyBmb3Igd2hhdCBoZSBzdWdnZXN0aW5nIGJ1dCBJIHRob3VnaHQgSSBzZWUgaWYgSSBjYW4gZ2V0IHNvbWUgb2YgeW91ciBvcGluaW9ucy4gSSBkaWRuIHRoaW5rIG11Y2ggb2YgaXQgYXQgdGhlIHRpbWUgYnV0IGl0IGdyYWR1YWxseSBnb3Qgd29yc2UgYW5kIEkgZGVjaWRlZCBqdXN0IHRvIHRha2Ugc29tZSB0aW1lIG9mZiBhbmQgc2VlIGEgUFQuIApIYWxmIG9mIHRoZSBnbG9iZSB3b25kZXJzIGFib3V0IHRoZSBhZnRlcm1hdGggb2YgdGhlIFVTIGRyYXdkb3duIGluIEFmZ2hhbmlzdGFuOyBvdGhlcnMga2VlcCB0aGVpciBmaW5nZXJzIGNyb3NzZWQgYWJvdXQgdGhlIHByb3NwZWN0cyBvZiBVUyBJcmFuIGQgYW5kIGl0cyBpbXBsaWNhdGlvbnM7IHN0aWxsIG90aGVycyBmcmV0IGFib3V0IHRoZSBwb3NzaWJpbGl0eSBvZiBOYXJlbmRyYSBNb2RpIHZpY3RvcnkgYXMgSW5kaWEgUHJpbWUgTWluaXN0ZXIsIG5vdCB0byBmb3JnZXQgQ2hpbmEgcmVhbGlnbm1lbnQgaW4gdGhlIHJlZ2lvbiBhbmQgdGhlIGdyb3dpbmcgdGVuc2lvbiBiZXR3ZWVuIHR3byBNdXNsaW0gY291bnRyaWVzLiAKQXBwbHkgc29tZSBvciBhbGwgb2YgdGhlc2UgdGFjdGljcyB5b3UnbGwgYmUgYmFjayBvbiB0cmFjayB0byBzdXBlcmlvciBzdWNjZXNzLiAKQmlnb3RyeSwgcmFjaXNtLCBhbmQgaGF0cmVkIG9mIGFueSBuYXR1cmUgd2lsbCBiZSByZW1vdmVkLCBhbmQgYSBiYW4gd2lsbCBiZSBpc3N1ZWQgYXQgdGhlIG9wdGlvbiBvZiB0aGUgbW9kZXJhdG9yIGRlcGVuZGluZyBvbiBzZXZlcml0eSBvZiB0aGUgdmlvbGF0aW9uLgpUaGUgYWxsaWFuY2Ugc2F5cyBwb2tlciBtYWNoaW5lIGxvc3NlcyBpbiBOU1cgbGFzdCB5ZWFyIHdlcmUgJDUuNyBiaWxsaW9uLiBJdCBzYXlzIGl0IGlzdGFyZ2V0aW5nQmF0aHVyc3QgY291bmNpbGxvcnMgYmVjYXVzZSBNciBUb29sZSwgd2hvIGlzIHRoZSBtaW5pc3RlciByZXNwb25zaWJsZSBmb3IgTlNXIExpcXVvciBhbmQgR2FtaW5nLGlzIHRoZSBsb2NhbCBtZW1iZXIuIApBbHRob3VnaCBpdCBjYW4gZmVlbCBsaWtlIHlvdSB1bmFibGUgdG8gc3RvcCwgdGhlcmUgYXJlIHBsZW50eSBvZiB0aGluZ3MgeW91IGNhbiBkbyB0byBvdmVyY29tZSBhIGdhbWJsaW5nIHByb2JsZW0sIHJlcGFpciB5b3VyIHJlbGF0aW9uc2hpcHMgYW5kIGZpbmFuY2VzLCBhbmQgZmluYWxseSByZWdhaW4gY29udHJvbCBvZiB5b3VyIGxpZmUuV2hhdCBpcyBnYW1ibGluZyBhZGRpY3Rpb24gYW5kIHByb2JsZW0gZ2FtYmxpbmc/R2FtYmxpbmcgYWRkaWN0aW9uIGFsc28ga25vd24gYXMgcGF0aG9sb2dpY2FsIGdhbWJsaW5nLCBjb21wdWxzaXZlIGdhbWJsaW5nIG9yIGdhbWJsaW5nIGRpc29yZGVyIGlzIGFuIGltcHVsc2UgY29udHJvbCBkaXNvcmRlci4gSWYgeW91IGEgY29tcHVsc2l2ZSBnYW1ibGVyLCB5b3UgY2FuIGNvbnRyb2wgdGhlIGltcHVsc2UgdG8gZ2FtYmxlLCBldmVuIHdoZW4gaXQgaGFzIG5lZ2F0aXZlIGNvbnNlcXVlbmNlcyBmb3IgeW91IG9yIHlvdXIgbG92ZWQgb25lcy4gWW91IGdhbWJsZSB3aGV0aGVyIHlvdSB1cCBvciBkb3duLCBicm9rZSBvciBmbHVzaCwgYW5kIHlvdSBrZWVwIGdhbWJsaW5nIHJlZ2FyZGxlc3Mgb2YgdGhlIGNvbnNlcXVlbmNlcyBldmVuIHdoZW4geW91IGtub3cgdGhhdCB0aGUgb2RkcyBhcmUgYWdhaW5zdCB5b3Ugb3IgeW91IGNhbiBhZmZvcmQgdG8gbG9zZS5PZiBjb3Vyc2UsIHlvdSBjYW4gYWxzbyBoYXZlIGEgZ2FtYmxpbmcgcHJvYmxlbSB3aXRob3V0IGJlaW5nIHRvdGFsbHkgb3V0IG9mIGNvbnRyb2wuIApIZSBhZGRlZCB0aGF0IHRoZSBib2FyZCBoYXMgYXBwcm92ZWQgMjYzIG1pbGxpb25haXJlIHBhcnR5IGxpY2Vuc2VzIGVxdWF0aW5nIHRvIDg2OSBldmVudCBkYXlzIHRvIG9jY3VyIGJldHdlZW4gTWF5IDE0IGFuZCB0aGUgZW5kIG9mIEp1bmUuIEthbG0gaGFzIHByZXZpb3VzbHkgc2FpZCB0aGUgbmV3IHJ1bGVzIHdlcmUgbWVhbnQgdG8gYWRkcmVzcyBpc3N1ZXMgb2YgZ2FtaW5nIHZpb2xhdGlvbnMsIHZpb2xlbmNlIGFuZCBvdGhlciBwcm9ibGVtcyBhdCBzb21lIHBlcm1hbmVudCBwb2tlciByb29tcy4uIApQZXJjZWl2ZWQgdmFsdWUgb2YgdGhhdCByZXdhcmQgaXMgdGhlIHByaW1hcnkgcmVhc29uIHRoaXMgdG9waWMgZ2V0cyBiZWF0ZW4gdG8gZGVhdGggaW4gdGhpcyBzdWIuIElmIEkgcGxheSA4IGhvdXJzIG9mIGNvbXAgYW5kIHdpbmQgdXAgd2l0aCBhIG5ldCBsb3NzIG9mIEdsb3J5LCBJIG1pZ2h0IGFzIHdlbGwgaGF2ZSBkb25lIGxpdGVyYWxseSBub3RoaW5nIGZvciA4IGhvdXJzLCBhbmQgaXQgZmVlbHMgbGlrZSBhIGdpYW50IHdhc3RlIG9mIG15IHRpbWUuIApTbyBFYXN5IExlbW9uIEJhcnMgQW15IGFteWx6TWFrZXM6IDM2IGJhcnMgcm9sbCAoMTYuNSBveikgUGlsbHNidXJ5IENyZWF0ZSAnbiBCYWtlIHJlZnJpZ2VyYXRlZCBzdWdhciBjb29raWVzIDQgZWdncywgc2xpZ2h0bHkgYmVhdGVuIDEgMS8yIGN1cHMgZ3JhbnVsYXRlZCBzdWdhciAyIHRhYmxlc3Bvb25zIGFsbCBwdXJwb3NlIGZsb3VyIDIgdGFibGVzcG9vbnMgYnV0dGVyIG9yIG1hcmdhcmluZSwgc29mdGVuZWQgMiB0YWJsZXNwb29ucyBncmF0ZWQgbGVtb24gcGVlbCAoMiBtZWRpdW0pIDEvMyBjdXAgZnJlc2ggbGVtb24ganVpY2UgKDIgbWVkaXVtKSAxIHRvIDIgdGFibGVzcG9vbnMgcG93ZGVyZWQgc3VnYXIgMS4gCkJlY2F1c2UgeW91IGhhdmUgYSBsaW1pdGVkIHF1YW50aXR5IG9mIGZvb2QsIG9uZSBwZXIgbGV2ZWwuIEFuZCB5b3UgY2FuIGJlIGZhcm1pbmcgZm9yIGFnZXMuIFNvIHlvdSBzaG91bGQgc3RpY2sgdG8gc3VzdGFpbmFibGUgcmVnZW5lcmF0aXZlIHNvdXJjZXMgbGlrZSB0aGUgZGV3IHlvdSBjcmVhdGluZy4gSWYgeW91IGdldCB0byBoaWdoZXIgbGV2ZWxzIG9mIHJlZ3Jvd3RoIHdhbmQgb3IgaGF2ZSB0aGUgbmF0dXJlIGJvb3RzLCB5b3Ugc2hvdWxkIGJlIGdldHRpbmcgbW9yZSBkZXcgdGhhbiB5b3UgY2FuIHVzZSBhbnl3YXkuCkkgbWlzcyBzaW5naW5nLiAKRm91ciBzdWNoIGNoYXJpdHkgZ2FtaW5nIGJ1c2luZXNzZXMgaGF2ZSBvcGVuZWQgaW4gR2VuZXNlZSBDb3VudHkgaW4gdGhlIHBhc3QgZm91ciB5ZWFycy4gClBva2VyIGhhcyBiZWNvbWUgcG9wdWxhciBvbmx5IGluIHRoZSByZWNlbnQgZmV3IHllYXJzLiBZb3UgY2FuIG5vdyBnbyBpbnRvIGFueSBjYXNpbm9zIHdpdGggYSBnb29kIHBva2VyIHBpZWNlIGFzIHlvdSBjYW4gZ2V0IHRoZXNlIHBva2VyIHBpZWNlcyBhdmFpbGFibGUgaW4gbW9zdCBwb2tlciBzdG9yZXMuIApIZXksIG5vIHByb2JsZW0hIFRoZXJlIHJlYWxseSBhcmVuIGd1aWRlbGluZXMgb3V0IHRoZXJlLCBzbyB5b3UganVzdCBvbiB5b3VyIG93bi4gSSBuZXZlciB3b3JrZWQgb24gQmlnIEJyb3RoZXIgY2FzdGluZyBidXQgSSBzZWVuIHZlcnkgc2ltaWxhciBhbmQgdGhlIGNhc3RpbmcgcGVvcGxlIHVzdWFsbHkgbWFrZSB2ZXJ5IHNuYXAgZGVjaXNpb25zLiBUaGV5IGp1c3QgaGF2ZSBzb29vIG1hbnkgcGVvcGxlIHRvIGdvIHRocm91Z2gsIGlmIHRoZXkgc2VlIHNvbWV0aGluZyB0aGV5IGRvbiBsaWtlLCB0aGV5IGp1c3Qgb24gdG8gdGhlIG5leHQuIEl0IHNlZW1zIGxpa2UgaGF2aW5nIGEgYmlnIHNvY2lhbCBtZWRpYSBwcmVzZW5jZSBub3dhZGF5cyBpcyBoZWxwZnVsLCBidXQgbm90IG5lY2Vzc2FyeSwgYnV0IGhhdmluZyBTT01FIFR3aXR0ZXIvSW5zdGFncmFtIGFjY291bnQgc2VlbXMgYWxtb3N0IGxpa2UgYSBuZWNlc3NpdHkgdGhvdWdoLiBNeSBiaWdnZXN0IHBpZWNlIG9mIGFkdmljZSBpcyBkb24gZXhwZWN0IHRvIGdldCBwaWNrZWQuIFlvdSB2ZXJ5IGxpa2VseSBub3QgZ29pbmcgdG8gYXMgdGhlIG9kZHMgYXJlIGluY3JlZGlibHkgc2xpbS4gSSBhIHJlYWxpc3Qgd2hlbiBpdCBjb21lcyB0byBzdHVmZiBsaWtlIHRoYXQgdGhvdWdoLCBhbmQgeW91IG1heSBiZSBzb21lb25lIHdpdGggYSBkcmVhbSBib2FyZCwgaW4gd2hpY2ggY2FzZSB5b3UgY2FuIGp1c3QgZGlzcmVnYXJkIHRoYXQgbGlzdCBiaXQgb2YgYWR2aWNlLiBFaXRoZXIgd2F5LCBnb29kIGx1Y2shCkNvbmNsdXNpb25UaGUgU3RyYW5nZSBDYXNlIG9mIERyIEpla3lsbCBhbmQgTXIgSHlkZSByZW1haW5zIGEgY2xhc3NpYyBub3ZlbGxhIHRoYXQgZW50ZXJ0YWlucyBnZW5lcmF0aW9uIGFmdGVyIGdlbmVyYXRpb24uIFlldCBlYWNoIGZpbG0gYWRhcHRpb24gb2YgdGhpcyB0aW1lbGVzcyB0YWxlIHRlbGxzIHVzIHNvbWV0aGluZyBvZiB0aGUgcGVyaW9kIGluIHdoaWNoIGl0IHdhcyBtYWRlLiAKRmlyc3QsIEkgc2FpZCBpdCBub3QgdG9vIGhhcmQgd2l0aCBleHRyZW1lbHkgc2hvcnQgc3RhY2tzLiBTZWNvbmQsIHRoZSBwaHJhc2UgImEgR1RPIHN0cmF0ZWd5IiBkb2VzbiBtYWtlIGFueSBzZW5zZS4gVGhlcmUgaXMgb25lIEdUTyBzdHJhdGVneS4gVGhlcmUgYXJlIG11bHRpcGxlIGJhc2VkIG9uIGdhbWUgdGhlb3J5LCBidXQgdGhlcmUgaXMgb25seSBvbmUgdGhhdCBpcyBhY3R1YWxseSBHVE8uCkhhcnQgZmxpcHMgb3ZlciBoaXMgY2FyZHMgYW5kIGRlY2xhcmVzIGhlIGhhcyBhIHN0cmFpZ2h0LiBFeGNlcHQgaGUgZG9lc24gd2hpY2ggd291bGQgYmUgYW4gYXdmdWwgd2F5IHRvIGxvc2UgdW50aWwgaGUgcmVhbGl6ZXMgdGhhdCBoZSBBQ1RVQUxMWSBXT04gVEhFIEhBTkQgQkFTSUNBTExZIEJZIEFDQ0lERU5ULgpCdXQgdW5mb3J0dW5hdGVseSBzb21lIGFjdGl2aXN0cyB3YW50ZWQgdG8gd29yayBhZ2FpbnN0IHRoaXMgYW5kIHRoZXJlIGJyaWdodCBpZGVhIHdhcyB0byBvcGVuIGFsbCB0aGUgZG9vcnMgYW5kIGxpZ2h0IHRoZSBwbGFjZSBvbiBmaXJlLiAKSSBoYWQgd3JpdHRlbiBvdXQgbXVjaCBvZiB3aGF0IHlvdSB0eXBlZCBhbmQgZGVsZXRlZCBpdCBtdWx0aXBsZSB0aW1lcy4gSXQganVzdCBkb2VzbiBzZWVtIHdvcnRoIGl0LiAKTm90IHNvIGVhc3kgdG8gYmVhdCBoaW0uUGVvcGxlIGFyZSBmcmVlIHRvIGJlbGlldmUgd2hhdCB0aGV5IHdhbnQsIEkgc3VwcG9zZS4xKSBLZXZpbi4gSSBhIHJlY292ZXJpbmcgYWxjb2hvbGljIChzb2JlciA0IHllYXJzKS4gClRoaXMgZ2FtZSBkb2Vzbid0IGNvc3QgYXMgbXVjaCB0byBnZXQgc3RhcnRlZC4gCjIuIEhhcyBhbnlvbmUgaGVhcmQgb2YgYW55b25lIGF0dGVtcHRpbmcgc3VjaCBhIHByb2plY3Q/CkxlcyBub3V2ZWxsZXMgcGVyc29ubmVzIHNvbnQgbGVzIGJpZW52ZW51ZXMgcG91ciBzZSBqb2luZHJlIGF1IGdyb3VwZSwgYXZlYyB1biBwciByZXF1aXMgZCd1bmUgam91cm5lIGRlIG1pc2UgIGpvdXIgZGVzIGNvbmNlcHRzIGZvbmRhbWVudGF1eCBkb25uZSBsZSBzYW1lZGkgMTkgb2N0IC4KUGVvcGxlIGhhdmUgbGVzcyB0aW1lIHRvIHNwZW5kIGluIHRoZSBraXRjaGVuIGFuZCBpdCBhbGwgYWJvdXQgcXVpY2ssIGhlYWx0aHkgbWVhbHMuLiAKS2F1ZmVuIFNpZSBrZWluZSB0ZXVyZW4gV2VpY2htYWNoZXIgZnIgRmxlaXNjaCAgIGRhcyBpc3QgZGFzIGdsZWljaGUgd2llIHVuc2VyZSBTb2RhLCBpbiBlaW5lciBzY2huZW4gVmVycGFja3VuZy4gU2llIG1jaHRlbiwgZGFzcyBGbGVpc2NoIHNjaG5lbGwgZHVyY2hicnQgIGR1cmNoZ2FydCwgdW5kIGltbWVyIG5vY2ggd2VpY2ggYmxlaWJ0PyBSZWliZW4gU2llIGRhcyBGbGVpc2NoIG1pdCBTb2RhIGVpbiB1bmQgc3RlbGxlbiBTaWUgZXMgZWluIHBhYXIgU3R1bmRlbiBpbiBkZW4gS2hsc2NocmFuay4gU3BsZW4gU2llIGRhcyBGbGVpc2NoIHZvciBkZW0gS29jaGVuIGFiLCBlbnRmZXJuZW4gU2llIGRhcyBCYWNrcHVsdmVyLiBBdWNoIGVpbmUgYWx0ZSBTY2h3YXJ0ZSB2ZXJ3YW5kZWx0IG1hbiBhdWYgZGllc2UgV2Vpc2UgaW4gZWluIGp1bmdlcyBLYWxiLgooUHJpdmFjeSBQb2xpY3kpRmVhdHVyZXNHb29nbGUgQ3VzdG9tIFNlYXJjaFRoaXMgaXMgZmVhdHVyZSBhbGxvd3MgeW91IHRvIHNlYXJjaCB0aGUgc2l0ZS4gKFByaXZhY3kgUG9saWN5KUdvb2dsZSBNYXBzU29tZSBhcnRpY2xlcyBoYXZlIEdvb2dsZSBNYXBzIGVtYmVkZGVkIGluIHRoZW0uIChQcml2YWN5IFBvbGljeSlHb29nbGUgQWRTZW5zZSBIb3N0IEFQSVRoaXMgc2VydmljZSBhbGxvd3MgeW91IHRvIHNpZ24gdXAgZm9yIG9yIGFzc29jaWF0ZSBhIEdvb2dsZSBBZFNlbnNlIGFjY291bnQgd2l0aCBIdWJQYWdlcywgc28gdGhhdCB5b3UgY2FuIGVhcm4gbW9uZXkgZnJvbSBhZHMgb24geW91ciBhcnRpY2xlcy4gCk1vZGVybmlzdGUgIFtzY29yZSBoaWRkZW5dICBzdWJtaXR0ZWQgMTcgaG91cnMgYWdvClRoZW4gYWZ0ZXIgb3VyIGZpcnN0IGZpZ2h0LCBoZSBwdXQgb24gdGhhdCBzb25nIGFuZCB3ZSBkYW5jZWQsIG5vIHdvcmRzLCBhbmQgaXQganVzdCBtYWRlIHRoaW5ncyBtdWNoIGJldHRlci4gSXQgcmVtaW5kcyB5b3Ugb2YgaG93IGNsb3NlIHlvdSBjYW4gYmUgd2l0aCBhIHBlcnNvbi4gCkhvd2V2ZXIsIGluIG1hbnkgYXJlYXMgdGhpcyBpc24ndCB0aGUgY2FzZTsgaXQgaXMgbmVjZXNzYXJ5IHRvIGZpbmQgYSBwcmFjdGl0aW9uZXIgd2l0aG91dCB0aGUgYWR2aWNlIG9mIGEgZnJpZW5kIG9yIHJlbGF0aXZlLi4gCiAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29JIHVzdWFsbHkgYWdhaW5zdCBhbnkga2luZCBvZiBjZW5zb3JzaGlwIGJ1dCB0aGlzIGFjY291bnQuIGlzIHRoZXJlIGEgd2F5IHRvIGZsYWcgYWNjb3VudHMgdG8gYnJpbmcgdGhlbSB0byB0aGUgYXR0ZW50aW9uIG9mIHRoZSBhZG1pbnMgaWYgdGhleSBhcmUgc3VzcGVjdGVkIG9mIGJlaW5nIHNvY2lhbCBtZWRpYSBib3RzPyBUaGlzIGFjY291bnQgaXMgZ29pbmcgc3ViIHRvIHN1YiBhbmQgcHJvcG9zaW5nIG91dGxhbmRpc2ggY29uc3BpcmFjeSB0aGVvcmllcyBhbmQgYWJzb2x1dGUgYnVsbHNoaXQgZXZlcnl3aGVyZSBpdCBnb2VzLiAKTWFycyBoYXMgYWJvdXQgMzglIG9mIEVhcnRoIGdyYXZpdHkuIApNeSB0aGVvcnkgaXMgdGhhdCBpbiBvbmxpbmUgcG9rZXIsIGFmdGVyIHRoZSByb3VuZCBlbmRzLCB0aGUgY2FyZHMgYXJlIHByb2JhYmx5IG5vdCByZSBzaHVmZmxlZCBidXQgcmF0aGVyIGEgZnJlc2ggQVJSQVkgd2l0aCB0aGUgY2FyZHMgaW4gb3JkZXIgaXMgc2h1ZmZsZWQuIEkgZ290IGFib3V0ICQyMDAsMDAwIGluIHRoZSBnYW1lIGFuZCBoYXZlbiBzcGVudCBhIGRpbWUgb2YgbXkgcmVhbCBtb25leS4gSSBhY3R1YWxseSBkb24ga25vdyBob3cgdGhleSBtYWtlIG1vbmV5IG9uIHRoZSBnYW1lIGJlY2F1c2UgaXQgaXMgZnJlZSB0byBwbGF5IGFuZCB0aGVyZSBpcyBubyByZWFsIGluY2VudGl2ZSB0byBhY3R1YWxseSBzcGVuZCBhbnkgbW9uZXkgaW4gdGhlIGdhbWUgZnJvbSB3aGF0IEkgaGF2ZSBzZWVuLiAKSXMgdGhhdCBibG9vZD8gSXMgdGhhdCBmcm9tIG1lPyBPbiB0aGVzZSB3aGl0ZSBob3RlbCBzaGVldHM/IGFtIG1vcmUgdW5jb21mb3J0YWJsZSBhdCB0aGlzIHllYXIgc2VydmljZS4gCkludGVyZXN0aW5nIHBpZWNlIG9mIG9wcG9ydHVuaXNtIGdvaW5nIG9uIGhlcmUuIDEwIHBvaW50cyAgc3VibWl0dGVkIDE4IGRheXMgYWdvCkNBTEdBUlkgICBCcml0aXNoIENvbHVtYmlhIGZpcmVkIHRoZSBsYXRlc3Qgcm91bmQgVGh1cnNkYXkgaW4gdGhlIE5vcnRoIEFtZXJpY2FuIGJhdHRsZSB0byB3b28gbmF0dXJhbCBnYXMgcHJvZHVjZXJzLCB1bnZlaWxpbmcgbWluaXNjdWxlIHJveWFsdHkgcmF0ZXMgYW5kIG1pbGxpb25zIG9mIGRvbGxhcnMgaW4gZnJlc2ggaW5mcmFzdHJ1Y3R1cmUgaW5jZW50aXZlcyBpbiBhIG1vdmUgdGhhdCBtYXkgZm9yY2UgbmVpZ2hib3VyaW5nIEFsYmVydGEgdG8gcmVzcG9uZCB0byBpbiBraW5kLiByZWR1Y2VkIHRoZSByb3lhbHR5IHJhdGUgb24gd2VsbHMgZHJpbGxlZCBiZXR3ZWVuIFNlcHRlbWJlciBhbmQgSnVuZSAyMDEwIHRvIDIlIGZvciBvbmUgeWVhci4gUHJvZHVjZXJzIG5vdyBwYXkgYW4gYXZlcmFnZSByb3lhbHR5IHJhdGUgb2YgYWJvdXQgMjAlLiByb2xsZWQgb3V0IHJveWFsdHkgYnJlYWtzLCBleHRlbmRpbmcgYSBwcm9ncmFtIGl0IGxhdW5jaGVkIGluIDIwMDQuIEFsYmVydGEgdW52ZWlsZWQgaXRzIG93biBpbmNlbnRpdmVzIGEgZGF5IGxhdGVyLCByZWR1Y2luZyByb3lhbHRpZXMgb24gc29tZSBuZXcgY29udmVudGlvbmFsIG9pbCBhbmQgZ2FzIHdlbGxzIHRvIDUlIG9yIGxlc3MgZm9yIGF0IGxlYXN0IGEgeWVhci4gSXQgbGF0ZXIgZXh0ZW5kZWQgdGhhdCBwcm9ncmFtIGluIEp1bmUuCkJldHRlciB0aGFuIHNvbWUgcmFuZG9tIGxpc3QsIGJ1dCB5b3UgYXJlIHN0aWxsIGdvaW5nIHRvIGJlIG9uIHRoZSBob29rIGZvciB0aGUgdXNlIG9mIHRoZSBwZXJzb25hbCBkYXRhICAgd2hldGhlciB5b3UgZ2F0aGVyZWQgdGhlIGRhdGEgZGlyZWN0bHkgb3IgYWNxdWlyZWQgZnJvbSBhIHRoaXJkIHBhcnR5LiAKSWYgSSBjYW4gcmVtZW1iZXIgdGhlbSBieSB0aGVuLCBJIHRyeSB0byB0aGluayBvZiB0aGUgbW9zdCBlZmZlY3RpdmUgd2F5IHRvIGJyaW5nIGl0IHVwLCBiZWZvcmUgYnJpbmdpbmcgaXQgdXAuU29tZXRpbWVzIGhvbmVzdHkgaXMgbm90IHRoZSBiZXN0IHBvbGljeS4gTXkgaHVzYmFuZCB1c2VkIHRvIGFsd2F5cyBjb21lIGhvbWUgc3RyZXNzZWQgb3V0IGFzIGhlbGwgZnJvbSB3b3JrLiBJdCBzdWNrZWQuIApZb3UgaGF2ZSBjaG9zZW4gMTkwOCBhcyB5b3VyIGRlc3RpbmF0aW9uLiBQbGVhc2UsIGJ1Y2tsZSB5b3VyIGJlbHQgdXAgYW5kIHNpdCB0aWdodC4gWW91IHdpbGwgYmUgaW4gdGhlIHllYXIgb2Ygb3VyIExvcmQgMTkwOCBzb29uLiAKVGhhdCBub3QgYW4gYXJndW1lbnQgZm9yIHRoZSBleGlzdGVuY2Ugb2YgaXQgSSBhZnJhaWQuIApJdCBkZXBlbmRzIG9uIGhvdyB5b3UgbG9vayBhdCBpdCwgeW91IGRvbnQgcmVhbGx5IGtub3cgdGhhdCBJdmEgZnJ1aXQgaXMgdGhlIG9ubHkgZnJ1aXQgdGhhdCBjb3VsZCBoYXZlIHNhdmVkIGx1ZmZ5IGF0IHRoZSB0aW1lLiBTdXJlIGhlIGdvdCBsdWNreSB0aGF0IGhlIGdvdCBmb3VuZCBiZWZvcmUgaXQgd2FzIHRvbyBsYXRlClRoaXMgZW50aXJlIGdhbWUgaXMgb24gdGhlbSwgbm90IHRoZSBwbGF5ZXJzLiAKV2UgaW4gdGhlIHBvbGl0aWNhbCBqb3VybmFsaXNtIGJ1c2luZXNzIGFyZSBub3Qgc28gbHVja3kuIEJ1dCB3ZSBjYW4gdGFrZSBhIGdhbmRlciBhdCBzb21lIG9mIHRoZSBkeW5hbWljcyBhdCBwbGF5LiBBZnRlciB0aGUganVtcCBpcyBteSBhdHRlbXB0LCB3aGljaCBpcyBsaWtlbHkgdG8gcmVtYWluIGludGVyZXN0aW5nIGZvciBhbiBob3VyIG9yIHR3bywgdW50aWwgZXZlbnRzIHVwZW5kIGV2ZXJ5dGhpbmcgYWdhaW4uIApJbiAyMDEyLCB3aGlsZSBmcmVlIG9uIGJvbmQgaW4gdGhlIFNlYm9rIGNhc2UsIFNjaHJpZXIgaWxsZWdhbGx5IGFjY2Vzc2VkIHR3byBlbWFpbCBhY2NvdW50cyB0byBzdGVhbCBzb21lICQ0LDAwMCBmcm9tIG9ubGluZSBwb2tlciBhY2NvdW50cywgcHJvc2VjdXRvcnMgc2FpZC4KVGhlIFdvcmxkIFNlcmllcyBvZiBQb2tlciB0YWtlcyBwbGFjZSBldmVyeSBKdW5lIGFuZCBKdWx5IGF0IHRoZSBSaW8uLiAKVGhlIGJhbmsgYW5hbHlzdHMgZGVzY3JpYmUgYSBnbG9iYWwgc29jaWV0eSB0aGF0IGlzIGRpdmlkaW5nIGludG8gdHdvIGJsb2NzOiB0aGUgcGx1dG9ub215IGFuZCB0aGUgcmVzdC4gCkdpbGRhcyBST1VTU0VMLCBNYXRyZSBkZSBjb25mcmVuY2VzIGVuIGRyb2l0IHByaXYgZXQgc2NpZW5jZXMgY3JpbWluZWxsZXMsIERpcmVjdGV1ciBkZSBsJ0luc3RpdHV0IGQndHVkZXMganVkaWNpYWlyZXMsIENvIERpcmVjdGV1ciBkdSBNYXN0ZXIgMiBNYWdpc3RyYXR1cmUKSSBkb24gc3VwcG9zZSB5b3VyIEhheW5lcyBtYW51YWwgaGFzIGEgY2lyY3VpdCBkaWFncmFtPy4gClRoZSBkYXkgeW91IHJlYWxpemUgeW91IGhhZCB0aGUgc3RyZW5ndGggdGhlIHdob2xlIHRpbWUgaXMgdGhlIGRheSB5b3UgYmUgZ3JhdGVmdWwgZm9yIGFsbCB0aGF0IHlvdSBoYXZlLi4gCkEvIEF0dHJpYnV0aW9uIGR1IG5vbSBkZSBmYW1pbGxlCkhlbGxvIGd1eXMsIGhhcmkgaW5pIHNheWEgbWVudWxpcyBkYW4gaW5mb3JtYXNpIHNkaSB0ZW50YW5nIGRvbWFpbiBiYXJ1IHNheWEgZGkgaW50ZXJuZXQuIFR1bXB1a2FuIHBlbmRlayBhZGFsYWggc2VzZW9yYW5nIHlhbmcgbWVtYmVsaSBrZSBkYWxhbSBwZXJtYWluYW4gZGVuZ2FuIGt1cmFuZyBkYXJpIDEwMCB0aXJhaSBiZXNhciBhdGF1IHRlbGFoIGtlaGlsYW5nYW4gc2ViYWdpYW4gYmVzYXIgdHVtcHVrYW4gbWVyZWthIHNlamFrIG1lbWJlbGkga2UgbWVqYS4gUGFyYSBwZW1haW4geWFuZyByZWxhIG1lbWJlbGkgaW4gZGVuZ2FuIGluaSB0dW1wdWthbiBwZW5kZWsgZGFuIHNlZ2VyYSBtZW5pbmdnYWxrYW4ga2V0aWthIG1lcmVrYSBnYW5kYSB0ZWxhaCBhZGEgZGkgcG9rZXIgc2VsYW1hbnlhLiAKTm91ZXVzZXMgZXQgdHJzIHZpZ291cmV1c2VzLCBlbGxlcyBzdXJtb250ZW50IHVuIHRyb25jIGRvbnQgbCBicnVuIGdyaXN0cmUgc2UgY3JldmFzc2UgYXUgZnVyIGV0ICBtZXN1cmUgZGUgcHJvZm9uZHMgc2lsbG9ucy4gCkkgaGFkIHRvIHJlbW92ZSB5b3VyIHBvc3QgYmVjYXVzZSB3ZSBkb24gYWxsb3cgcG9zdHMgdGhhdCBjZWxlYnJhdGUgdmlvbGVuY2UsIGFuZCB5b3VyIGRlc2NyaXB0aW9uIG9mIHRocmVhdGVuaW5nIHlvdXIgbW90aGVyIHdpdGggYSBrbmlmZSBjcm9zc2VzIHRoYXQgbGluZS4gCkhlIGhhcyB0byBrZWVwIGl0IGZyZXNoIGFuZCBpbiB0aGUgZXllIG9mIHRoZSBjb25zdW1lciB0byBidWlsZCBhIGZhbiBiYXNlLiAKKGNyZWRpdDogS2F6dWhpcm8gTm9naS9BRlAvR2V0dHkgSW1hZ2VzKS4gCkxpa2UgZm9yIHNldmVyYWwgZGF5cy4gCkFzIGlmIHRoZSAicXVlZW4gb2YgcmV0YWlsJ3MiIHVudGltZWx5IHBhc3Npbmcgd2Fzbid0IHNhZCBlbm91Z2gsIHRoZSB0aW1pbmcgb2YgaGVyIGRlYXRoIGxlbnQgYSBkYXJrIHBvaWduYW5jeSB0byB0aGUgZGViYXRlIG92ZXIgdGhlIGNpdHkncyB0cm91YmxlZCByZXRhaWwgc2NlbmUuCkV2ZXJ5IHdvbWFuIGlzIGRpZmZlcmVudCBhbmQgYXMgc3VjaCwgdGhleSBhbGwgaGF2ZSBlbnRpcmVseSBkaWZmZXJlbnQgbmVlZHMuIFRoZSBiZXN0IHRoaW5nIHlvdSBjYW4gZG8gaXMgbGVhcm4gYWxsIHlvdSBjYW4gYWJvdXQgeW91ciBnaXJsZnJpZW5kLiBUaGlzIGlzIGdvaW5nIHRvIGhlbHAgeW91IHNlZSB0aGF0IHNoZSBpcyBub3QgbGlrZSBldmVyeSBvdGhlciBnaXJsLiBJdCBzaG91bGQgYWxzbyBoZWxwIHlvdSBzZWUgZXhhY3RseSB3aHkgeW91IGxvdmUgaGVyLgooQW5kcmV3IEVjY2xlcykiPiJUaGVyZSBpcyBhIG1pcnJvciBlZmZlY3QgZnJvbSBvbmUgdG8gYW5vdGhlciwiIHRoZSBhY3RyZXNzLCA2MywgZXhwbGFpbmVkIGR1cmluZyBhIGNvbnZlcnNhdGlvbiBpbiB0aGUgYW1waGl0aGVhdGVyIG9mIHRoZSBGaWxtIFNvY2lldHkgb2YgTGluY29sbiBDZW50ZXIncyBFbGlub3IgQnVuaW4gTXVucm9lIEZpbG0gQ2VudGVyLCB3aGlsZSBpbiB0b3duIGVhcmxpZXIgdGhpcyBtb250aCB0byBwZXJmb3JtIHRoZSB0aXRsZSByb2xlKHMpIGluIFBoYWVkcmEocykgb25zdGFnZSBhdCBCQU0uIChTaGUnbGwgYmUgYmFjayBpbiB0aGUgY2l0eSBmb3IgdGhlIE5ZRkYgcHJlc2VudGF0aW9ucyBvZiBUaGluZ3MgdG8gQ29tZSBhbmQgRWxsZTsgYm90aCBzY3JlZW4gYXQgdGhlIGZlc3RpdmFsIG9uIE9jdG9iZXIgMTQgYW5kIDE1IGFuZCB3aWxsIG9wZW4gaW4gdGhlYXRlcnMgbGF0ZXIgdGhpcyBmYWxsLikgIkkgdGhpbmsgdGhhdCB0aGVzZSBhcmUgdHdvIHdvbWVuIHdobyBkb24ndCB3YW50IHRvIGJlIHZpY3RpbXMgYW5kIHdhbnQgdG8gdHVybiB3aGF0IGhhcHBlbmVkIHRvIHRoZW0gaW50byBzb21ldGhpbmcgICBub3QgcG9zaXRpdmUsIGJ1dCB0aGV5IHdhbnQgdG8gdGFrZSBjb250cm9sLiJIYW5zZW4gTHZlLCB3aG9zZSB0d28gcHJldmlvdXMgZmVhdHVyZXMsIEdvb2RieWUgRmlyc3QgTG92ZSAoMjAxMSkgYW5kIEVkZW4gKDIwMTQpLCB3ZXJlIGFsc28gc2hvd2Nhc2VkIGF0IE5ZRkYsIHdyb3RlIHRoZSBwYXJ0IG9mIE5hdGhhbGllIHdpdGggSHVwcGVydCBzcGVjaWZpY2FsbHkgaW4gbWluZCwgdGhvdWdoIHRoZSBjaGFyYWN0ZXIgaXMgYmFzZWQgcGFydGx5IG9uIHRoZSBkaXJlY3RvcidzIG93biBtb3RoZXIuIApMYWR5IEdhZ2Egc2xhbXMgTWFkb25uYSBmb3IgZmV1ZGluZyB0aHJvdWdoIG1lZGlhCk5vdCBhIGdvb2QgY2hhbmdlIElNTy4gV291bGQgZ2l2ZSBlbmVteSBtZWRpYyBldmVuIG1vcmUgZnJlZSB1YmVyIGJ1aWxkIChoZWFsaW5nIHVzdWFsbHkgZGVjcmVhc2VzIGR1cmF0aW9uIG9mIGFmdGVyYnVybi9zdGF0dXMgZWZmZWN0cyBieSA1MCUpLCBhbmQgY2F1c2VzIGEgbmVnbGlnaWJsZSBkaWZmZXJlbmNlIGlmIHRoZSBlbmVteSBnZXRzIGEgaGVhbHRocGFjay4KQWxtb3N0IGV2ZXJ5IHBsYXllciwgYWNjb3JkaW5nIHRvIFBhY3F1aWFvIEZyZWRkaWUgUm9hY2gsIGluc2lzdGVkIG9uIGEgc2VsZmllIHdpdGggUGFjcXVpYW8uIFRoZSBudW1iZXJzIGFyb3VuZCB0aGUgZmlnaHQgY29udGludWUgdG8gZ3Jvdy4gCkdhbGxlcnkgUGFya2xhbmQ6IE9uZSBZZWFyIExhdGVyT25lIFllYXIgQW5uaXZlcnNhcnkgT2YgRGVhZGx5IFNob290aW5nIEF0IE1hcmpvcnkgU3RvbmVtYW4gRG91Z2xhcyBIaWdoIFNjaG9vbCBJbiBQYXJrbGFuZCwgRmxvcmlkYVBBUktMQU5ELCBGTE9SSURBICAgRkVCUlVBUlkgMTQ6IFdlbmR5IEJlaHJlbmQsIGEgc2Nob29sIGNyb3NzaW5nIGd1YXJkIHdobyB3YXMgb24gZHV0eSBvbmUgeWVhciBhZ28gd2hlbiBhIHNob290ZXIgb3BlbmVkIGZpcmUgaW4gTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIHBheXMgaGVyIHJlc3BlY3RzIGF0IGEgbWVtb3JpYWwgc2V0dXAgZm9yIHRob3NlIGtpbGxlZCBvbiBGZWJydWFyeSAxNCwgMjAxOSBpbiBQYXJrbGFuZCwgRmxvcmlkYS4gCldoaWxlIGl0IG1heSBiZSBzb21ldGhpbmcgb2YgYSBzd2VlcGluZyBzdGF0ZW1lbnQsIEkgZGlkIHB1dCB0aGUgcGFyZW50aGVzaXMgYWRkaXRpb24gdGhlcmUgZm9yIGdyb3VwcyBpdCBtYXkgbm90IGFwcGx5IHRvICAgYnV0IG1vcmUgb2Z0ZW4gdGhhbiBub3QgaXQgc2VlbXMgcGVvcGxlIGhhdmUganVzdCBleHBhbmRlZCBvbiB0aGUgZHJhdyAyIHdpdGggYWR2YW50YWdlIGJ5IGFkZGluZyByb2xsaW5nIGNhcmRzIHRvIHRoZSBlcXVhdGlvbi4gT2Z0ZW4gYnkgdGhlIHRpbWUgcGVvcGxlIGdldCByb2xsaW5nIG1vZGlmaWVycyB0aGV5IHNlZW0gdG8gaGF2ZSBmb3Jnb3R0ZW4gdGhlIGFkdmFudGFnZS9yb2xsaW5nIHBhcnQgb2YgdGhlIHJ1bGUgYm9vaywgYW5kIGtlZXAgcGxheWluZyB0d28gc3RhY2tzIHVudGlsIGZpbmRpbmcgb3V0IGl0IGluY29ycmVjdCAgIGFuZCBieSB0aGF0IHRpbWUgbWFueSBkb24gd2FudCB0byBjaGFuZ2UgdGhlaXIgd2F5IG9mIHBsYXlpbmcuIAoiV2UncmUgaG9waW5nIHRoaXMgeWVhciB3aWxsIGJlIGV4dHJhIHNwZWNpYWwsIiBoZSBzYWlkLiAKNi4gQSBkZWFsZXIgYnV0dG9uIHJlcHJlc2VudHMgd2hvIHRoZSBkZWFsZXIgaXMsIGl0IHJvdGF0ZXMgY2xvY2t3aXNlIGFmdGVyIGVhY2ggaGFuZCBpcyBjb21wbGV0ZS4gQSBzbWFsbCBibGluZCBpcyB0aGUgcGxheWVyIHRvIHRoZSBsZWZ0IG9mIHRoZSBkZWFsZXIgYW5kIHRoZSBiaWcgYmxpbmQgaXMgdGhlIHBsYXllciB0byB0aGUgbGVmdCBvZiB0aGUgc21hbGwgYmxpbmQuIApIYXZpbmcgaGFkIHRvIHdvcmsgYXQgbW9yZSB0aGFuIG9uZSBjb21wYW55IHRoYXQgd2FzIGJvdWdodC9zb2xkL3RyYWRlZC9jaGFuZ2VkIGhhbmRzLCBJIHdhZ2VyIGdvb2QgbW9uZXkgdGhhdCBwbGVudHkgb2YgZGlzYXN0ZXJzIGFuZCBzaW5raW5nIHNoaXBzIGhhdmUgYmVlbiBvY2N1cnJpbmcgdGhlIHBhc3QgY291cGxlIHllYXJzLiAKVHJ5IG5vdCB0byBnZXQgdG9vIGRvd24gYmFzZWQgb24gYSBjb3VwbGUgZ3V5cyBvcGluaW9uLCBidXQgYmUgd2FyeSBvZiBvdmVycGF5aW5nLiAKRXZlcnkgcGh5c2ljYWwgdGhpbmcgaW4gb3VyIHdvcmxkIGhhcyBhIHZpcnR1YWwgY291bnRlcnBhcnQuIEJlY2F1c2Ugb2YgdGhpcywgcG9rZXIgdG9vIGhhcyBpdHMgb3duIHZlcnNpb24gY2FsbGVkb25saW5lIHBva2VyISBPbmxpbmUgcG9rZXIgaXMgdGhlIHNhbWUgYXMgdGhlIGdhbWUgb2YgcG9rZXIsIG9ubHkgaXQgY2FuIGJlIHBsYXllZCBhbnl0aW1lIHlvdSB3YW50IGFuZCB3aGVyZXZlciB5b3UgYXJlIGFzIGxvbmcgYXMgeW91IGhhdmUgYW4gaW50ZXJuZXQgY29ubmVjdGlvbiBhbmQgYSBjb21wdXRlci4uIApUZWxsIGhpbSBob3cgeW91IGZlZWxpbmcgYWJvdXQgaXQgYWxsIChpbmNsdWRpbmcgZmVlbGluZyByZWFsbHkgYmFkIGFib3V0IHVzaW5nIHRoZSB3b3JkICJkaXNndXN0aW5nIikuIFRhbGsgdG8gaGltIGFib3V0IHdoYXQgeW91IHN0cnVnZ2xpbmcgd2l0aC4gQnV0IG1ha2Ugc3VyZSB5b3Ugbm90IGNvbXByb21pc2luZyB5b3VyIG93biBzZXh1YWxpdHkgYW5kIHlvdXIgb3duIHNleHVhbCBib3VuZGFyaWVzIGp1c3QgdG8gYXBwZWFzZSBoaW0uLiAKTGltaXQgUG9rZXIgYmFua3JvbGwuIApJIGNvdWxkIG1ha2UgYSBiZXR0ZXIgZGVmZW5kZXIuIE15IHByaW9yaXR5IHdhcyB0byBsb29rIGdvb2QgZG9pbmcgaXQuLiAKQnV0IHRoZXkgY2FuJ3QgZGVueSBwZW9wbGUgb2YgdGhlaXIgY2l2aWwgcmlnaHRzLiBJdCdzIG5vdCBhIG1lbnRhbCBneW1uYXN0aWMgdG8gdW5kZXJzdGFuZCB0aGUgZGlmZmVyZW5jZSBpbiBwcml2YXRlIGNvbXBhbnkncyBhbmQgdGhlIGNvbnN0aXR1dGlvbi4gTWF5YmUgcmVhZCBpdCBzb21lIHRpbWUuLiAKQ2FsdW0gTWFyc2g6IEluIGEgZmV3IHN0YXJrIGxpbmVzLCBzaGUgY2FuIGludm9rZSBzb21lIGluZGVsaWJsZSBkcmVhZCBvciBtZW5hY2UsIGFuZCBmaW5kIGluIHRoZSBiYW5hbCBzb21lIGVsdXNpdmUgdGhyZWF0IGx1cmtpbmdBcyBpZiBpbiBkZWZpYW5jZSBvZiB0aGUgY2xpY2gsIHdlIHVzdWFsbHkgY2FuIGp1ZGdlIGEgYm9vayBieSBpdHMgY292ZXIgICBvciBhdCBsZWFzdCBkZXRlcm1pbmUgZW5vdWdoIGluZm9ybWF0aW9uIGFib3V0IGl0cyBzdWJzdGFuY2UgdG8gZGlzY2VybiBhdCBhIGdsYW5jZSB3aGV0aGVyIGl0IG1pZ2h0IGJlIHdvcnRoIHJlYWRpbmcuIFRoZSBiZXN0c2VsbGVycyBieSB0aGUgY2FzaCByZWdpc3RlcnMgYXQgV2FsbWFydCwgc3F1YXQgcGFwZXJiYWNrcyBiZWFyaW5nIGZhbWlsaWFyIG5hbWVzIGxpa2UgTWljaGFlbCBDb25uZWxseSBvciBEYW5pZWxsZSBTdGVlbCwgYXJlIGRlc2lnbmVkIHRvIGNvbnZleSBhIHJlYXNzdXJpbmcgc2ltcGxpY2l0eSB0byByZWFkZXJzIHdhcnkgb2YgdGhlIGV4b3RpYzsgdGhlIHN0b2NrIHBob3RvZ3JhcGhzIGFuZCBib2xkZmFjZSBsZXR0ZXJzLCBzaWducyBvZiBzYWZlIGhhcmJvdXIgYW1pZCBsaXRlcmF0dXJlJ3MgdmFzdCB1bmNoYXJ0ZWQgc2Vhcy4gWWV0IHdoYXQgYXR0cmFjdHMgbWFueSB0byBhIHJ1biBvZiB0aGUgbWlsbCBwb3Rib2lsZXIgb3IgSGFybGVxdWluIHJvbWFuY2Ugd2lsbCBkZXRlciB0aG9zZSBtb3JlIGRpc2NyaW1pbmF0aW5nLCB3aG8gYXZvaWQsIGJ5IGluc3RpbmN0LCBib29rcyB3aG9zZSBwZWRpZ3JlZSBzZWVtcyBuZWFyZXIgdGhlIGFpcnBvcnQgdGhhbiB0aGUgbGlicmFyeS4gCk1haXMgcXUnaW1wb3J0ZSBqJ2FpIGxlIGRvcyBsYXJnZSBldCBlbmNvcmUgYXNzZXogc29saWRlICFPbiBtJ2F2YWl0IHByZGl0IHVuIGRsdWdlIGRlIHByb3Rlc3RhdGlvbnMgZW4gZmF2ZXVyIGR1IHBobm9tbmUgdm9xdSBkYW5zIGxlIHRpdHJlLiBDZXJ0ZXMgbGEgdmlndWV1ciBhdmVjIGxhcXVlbGxlIGonYWkgZG5vbmMgbGUgbGUgcGVyc29ubmFnZSBhIGR1IGNhbG1lciBsJ2FyZGV1ciBkZSBjZXV4IHF1aSB2b3VkcmFpZW50IHBsYWlkZXIgc2EgY2F1c2UuTGVzIHBob3RvcyBjaSBjb250cmUgdG1vaWduZW50IGQndW4gcHJvZ3JzIG1haXMgaWwgZXN0IHZyYWkgcXVlIGNlcnRhaW5zIGxlIHNvdXBvbm5lbnQgZGUgbWFuZ2VyIGRlIGxhIHZpYW5kZS4gClRoZXkgbmV2ZXIgY2F1Z2h0IG9uIGVpdGhlci4gV29ya2luZyB3aXRoIHRoZSBwdWJsaWMgaXMgYSBibGVzc2luZyBhbmQgbW9zdGx5IGEgY3Vyc2UuLiAKQXQgdGhlIGFnZSBvZiAxOCwgaGUgam9pbmVkIHRoZSBhbGxpZWQgd2FyIGVmZm9ydCBieSBlbmxpc3RpbmcgaW4gdGhlIFJveWFsIEFpciBGb3JjZSBhcyBhIHBpbG90IHRyYWluZWUuIApUaGlzIHN1YnJlZGRpdCBjb250YWlucyBzcG9pbGVycyBmb3IgYWxsIG9mIFN0YXIgVHJlaywgaW5jbHVkaW5nIHRoZSBsYXRlc3QgZXBpc29kZXMgb2YgRGlzY292ZXJ5LiBEbyBub3Qgc3Vic2NyaWJlIHRvIHRoaXMgc3VicmVkZGl0IGlmIHlvdSBhcmUgYXZvaWRpbmcgc3BvaWxlcnMuClVzdWFsbHkuIApJIGhhdmVuIGhlYXJkIG9mIGFueSBDYW5hZGlhbiByYWlkcyBvciBzdGluZ3Mgb2YgbWFzc2FnZSBwYXJsb3VycyBzaW5jZSB0aGUgbmV3IGxhdyBjYW1lIGludG8gZWZmZWN0LnRvIGdldCBjYXVnaHQsIHRoZSBwb2xpY2UgaGF2ZSB0byBoYXZlIGV2aWRlbmNlIHRoYXQgc29tZW9uZSBoYXMgcGFpZCBmb3Igc2V4LiBUaGVyZSBhcmUgdHdvIHdheXMgdG8gZG8gdGhpcy4gVGhleSBjYW4gcnVuIGEgc3RpbmcsIG9yIHRoZXkgY2FuIGRvIGEgcmFpZC5hIHN0aW5nLCB0aGUgcG9saWNlIHdpbGwgcG9zZSBhcyBtYXNzZXVzZXMvcHJvc3RpdHV0ZXMgYW5kIHRyeSB0byBjYXRjaCBtZW4gb2ZmZXJpbmcgbW9uZXkgZm9yIHNleC4gCkkganVzdCBmZWVsIGJldHRlciB3aGVuIEkgY3V0IG91dCBncmFpbnMgc28gaXQncyBhbiBlYXN5IGRlY2lzaW9uIGZvciBtZSBub3cuLiAKU3BlbnQgdGhlIGxhc3Qgd2VlayBoZXJlIHdpdGggbXkgZmlhbmNlIGFuZCB3ZSBsZWF2aW5nIHRvbW9ycm93LiBJIHdvbmRlcmluZyBpZiB0aGVyZSBhbnl0aGluZyBJIGNhbiBkbyBvbiB0aGlzIGxhc3QgbmlnaHQgdGhhdCBpcyBxdWludGVzc2VudGlhbGx5IEtvcmVhbi4gClJlbWVtYmVyLCB3ZW50IHRvIHRoZSBNb29uIGluIDEwIHllYXJzIHdpdGggYmFzaWNhbGx5IHRoZSBjb21wdXRpbmcgcG93ZXIgb2YgYSBwb2NrZXQgY2FsY3VsYXRvci4gCkZsaWdodFJhaWwgd29ya3Mgd2l0aCBhIHZhY3V1bSBhcyBpdHMgcHJvcHVsc2lvbiBzeXN0ZW0sIG11Y2ggbGlrZSBIeXBlckxvb3Agd2FzIHN1cHBvc2VkIHRvLiBIb3dldmVyLCByYXRoZXIgdGhhbiBzaHV0dGxpbmcgdGhlIGVudGlyZSBjYXIgdGhyb3VnaCBhIHNwZWNpYWxseSBidWlsdCB0dW5uZWwsIHRoaXMgc3lzdGVtIGNvdXBsZXMgdGhlIGNhcnJpYWdlcyB0byBhIG11Y2ggc21hbGxlciBzbHVnIHVzaW5nIGhpZ2ggcG93ZXIgbWFnbmV0cy4gCk1pc3NvdXJpIGlzIHVuZGVmZWF0ZWQgYnkgdGhlIGdyYWNlIG9mIGEgc2NoZWR1bGUgdGhhdCBmZWF0dXJlZCBncmlldm91cyB0ZWFtcyBmcm9tIHRoZSBPaGlvIFZhbGxleSwgTWlkIEFtZXJpY2EsIEJpZyBUZW4gYW5kIFN1biBCZWx0IGNvbmZlcmVuY2VzLiBOb3cgaXQncyBTRUMgdGltZSBhbmQgb24gdG8gVmFuZGVyYmlsdCwgd2hvc2UgY29hY2ggSmFtZXMgRnJhbmtsaW4gZG9lcyBub3QgbmVlZCBoaXMgdGVhbSB0byBkcm9wIHRvIDMgMyBpZiBoZSB3YW50cyB0byByZW1haW4gb24gdGhlIFNvdXRoZXJuIENhbGlmb3JuaWEgcmFkYXIuIFN3aW1taW4nIHBvb2xzLCBtb3ZpZSBzdGFycy4uIApTdGF5IHdpdGggeW91ciBwb2tlciBhbmQgYnVpbGQgeW91ciBiYW5rIHJvbGwgYnkgcGxheWluZyBxdWFsaXR5IGNhcmRzLiBCZSBwYXRpZW50IGFuZCBkb24gdHJ5IHRvIGZvcmNlIHBsYXkuIFdoZW4geW91IGdldCBhIGhpZ2ggcXVhbGl0eSBoYW5kIHlvdSBtdXN0IHB1c2ggaXQuIApUaGUgMTk0MHMgdmVyc2lvbiBpcyB0aGVyZWZvcmUgY29zaWVyIGFuZCBtdWNoIGxlc3MgZGFyaW5nLiBBcyBmb3IgTXIgSHlkZSwgdGhlIHRyYW5zZm9ybWF0aW9uIGFuZCB1c2Ugb2Ygc3BsaXQgc2NyZWVuIHdvcmtzIHdlbGwsIGJ1dCBTcGVuY2VyIFRyYWN5IGlzIGRpc2d1aXNlZCBhcyBIeWRlIGJ5IGEgZnVubnkgd2lnLCBhIGJpZyBub3NlIGFuZCBmb3JlaGVhZCBwcm9zdGhldGljLCB3aGljaCBpcyBsZXNzIGVmZmVjdGl2ZSB0aGFuIHRoZSBlYXJsaWVyIGZpbG0ncyBzdHVubmluZyBtYWtlIHVwLiAKSSB0b2xlcmF0ZWQgZGlzcmVzcGVjdCBmb3IgNSBkYXlzIGJlZm9yZSBjb25mcm9udGluZyBpdC4gSSBjb3VsZG4gYmVsaWV2ZSBob3cgdGlyZWQgYW5kIHdvcm4gb3V0IEkgZmVsdC4gSSBkZWFsdCB3aXRoIHNvIG11Y2ggd29yc2UgZm9yIHNvIG1hbnkgbW9yZSB5ZWFycyB3aXRob3V0IHJlYWxpemluZyB0aGUgdG9sbCBpdCB3YXMgdGFraW5nIG9uIG1lLiBCdXQgYXMgc29vbiBhcyBJIGRlY2lkZWQgdG8gc3RhbmQgdXAgZm9yIG15c2VsZiAuIC4gQ3JhenkuClRoZXkgZ2VuZXJhbGx5IGRpZmZlciBpbiBzaXplIGFuZCB0aGUgd2F5IGEgYm9udXMgaXMgdW5sb2NrZWQuIApDaGlwc2Fob3kzNiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KSXQgZ29lcyBzb21ldGhpbmcgbGlrZSB0aGlzOiBhcmUgdHdvIHR5cGVzIG9mIG1lbjogbWFzY3VsaW5lIGFuZCBmZW1pbmluZS4gT25lcyBhcmUgc3RyYWlnaHQ7IGZlbWluaW5lIG9uZXMgYXJlIGdheS4gClJvYmJpZSBoYXMgbmV2ZXIgY2hvc2VuIHRvIGdvIG91dCBvdmVyIHRhcHBpbmcgaW4gaGlzIGNhcmVlciwgc28gSSBkb24ndCBidXkgdGhlIGlkZWEgdGhhdCBoZSBqdXN0IGNob3NlIHRvIGdvIG91dCBpbnN0ZWFkIG9mIHRhcHBpbmcgdGhpcyBpbnN0YW5jZS4uIApXZSBiYXNpY2FsbHkgbmF2aWdhdGVkIG91cnNlbHZlcyBkaXJlY3RseSB0byB0aGUgZGlzZ3VzdGluZyBQYWxhY2UgSG90ZWwgaW4gZG93bnRvd24gQmVpcnV0LCBhbmQgcHJldHR5IG11Y2ggZmVsdCBsaWtlIHJvY2tzdGFycyBmb3IgaGF2aW5nIGRvbmUgc28hLiAKRG9lcyBoYXZlIGFuIGVjb3N5c3RlbSBhbmQgeW91IG11c3QgY29udGludWUgdG8gYnJpbmcgbmV3IHBsYXllcnMgaW4gdGhlIGdhbWUsIHNhaWQgUGFsYW5za3kuIFRoYXQgc2FpZCwgbGFzdCB5ZWFyIHRoZSBldmVudCBoYWQgaXRzIG1vc3QgZW50cmllcyBldmVyLCBzb21lIDgyLDM2MCwgYSBtYXNzaXZlIG51bWJlciBjb21wYXJlZCB3aXRoIHRoZSBldmVudCBodW1ibGUgYmVnaW5uaW5ncyBhdCBhIHNtYWxsIHNpbmdsZSB0YWJsZSBpbiAxOTcwIGF0IEJlbm55IEJpbmlvbiBIb3JzZXNob2UgQ2FzaW5vLCB3aGVyZSB0aGUgcGxheWVycyB1bHRpbWF0ZWx5IHZvdGVkIG9uIHRoZSB3aW5uZXIgaW4gdGhlIGVuZC4uIApJIGxpZnQgNiBkYXlzIGEgd2VlayBhbmQgZG8gY2FyZGlvIDQgZGF5cyBhIHdlZWsgYW5kIGNhcmRpbyBpcyB0aGUgb25lIHRoaW5nIHRoYXQgd2lsbCBtYWtlIHlvdSBmZWVsIGxpa2UgYW4gYWJzb2x1dGUga2luZyB0aHJvdWdob3V0IHlvdXIgZGF5IHRvIGRheSBsaWZlLi4gCkJlaW0gbmNoc3RlbiBBdWZydWYgdW5zZXJlciBXZWJzaXRlIG1pdCBkZW1zZWxiZW4gRW5kZ2VydCB3ZXJkZW4gZGllIGluIENvb2tpZXMgZ2VzcGVpY2hlcnRlbiBJbmZvcm1hdGlvbmVuIGFuIHVuc2VyZSBXZWJzaXRlIChGaXJzdCBQYXJ0eSBDb29raWUiKSBvZGVyIGVpbmUgYW5kZXJlIFdlYnNpdGUsIHp1IGRlciBkYXMgQ29va2llIGdlaHJ0IChUaGlyZCBQYXJ0eSBDb29raWUiKSwgenVyY2tnZXNhbmR0Li4gCkkgZG9uIHNlZSBob3cgeW91IGNhbiBzYXkgdGhhdCB3aXRob3V0IGhhdmluZyBzZWVuIHRoZSBDQ1RWIHlvdXJzZWxmLCBzaW5jZSBhbnkgcGFydHkgaW52b2x2ZWQsIGluY2x1ZGluZyB0aGUgcG9saWNlLCBjb3VsZCBiZSBseWluZyBvciBhZGp1c3RpbmcgdGhlIHRydXRoLgpQYW5pYyBpbiBDb25ncmVzcyBhbmQgc3RhdGUgbGVnaXNsYXR1cmVzIGFzIGV2ZXJ5dGhpbmcgZnJvbSBzZXggYmV0d2VlbiB0ZWVucyB0byBuYWtlZCBwaG90b3Mgb2Ygb25lIGNoaWxkcmVuIHdlcmUgY3JpbWluYWxpemVkLiBQYW5pYyBpbiBzY2hvb2xzIGFzIGNoaWxkcmVuIHdlcmUgdGF1Z2h0IHRoYXQgdGhleSBzaG91bGQgd29ycnkgYWJvdXQgYWJkdWN0aW9uIGFsbCB0aGUgdGltZS4gCidFeGNydWNpYXRpbmcnIHRyaWFsIGluIGNhc2UgdGhhdCBsYXN0ZWQgMTcgeWVhcnMgZW1ibGVtYXRpYyBvZiB0cm91YmxlcyBwbGFndWluZyBmYW1pbHkgY291cnRzV2hhdCB5b3UgbmVlZCB0byBrbm93IGlmIHlvdSBhcmUgY29uc2lkZXJpbmcgZ2V0dGluZyBhIGRpdm9yY2UgaW4gMjAxOSdJJ3ZlIHNlZW4gcGVvcGxlIGNsZWFuZWQgb3V0JzogRGl2b3JjZSBsYXRlciBpbiBsaWZlIGNvbWVzIHdpdGggaXRzIG93biBzcGVjaWFsIHNldCBvZiBwcm9ibGVtc0Rpdm9yY2UgaXMgbmV2ZXIgZWFzeSBhbmQgeW91ciBoZWFydCBtYXkgYmUgYnJva2VuLCBidXQgdGhhdCBkb2VzbiBtZWFuIHlvdXIgd2FsbGV0IG5lZWRzIHRvIGJlIHRvb1RoYXQgaXMgcHJlY2lzZWx5IHdoYXQgaGFwcGVuZWQgaW4gYSByZWNlbnQgT250YXJpbyBjYXNlLCBpbiB3aGljaCB0aGUgaXNzdWVzIGFyaXNpbmcgZnJvbSB0aGUgc2VwYXJhdGlvbiBvZiBhIGNvdXBsZSB3ZXJlIHJlc29sdmVkIGFmdGVyIDE3IHllYXJzIG9mIGxpdGlnYXRpb24uIApJIHJlYWxseSBkaWQuIEVzcGVjaWFsbHkgd2l0aCBteSBsb3ZlIGZvciByZWRlbXB0aW9uIGFyY3MuIApNeSB0cmlwIHN0YXJ0ZWQgd2l0aCBzb21lIGJhZCBuZXdzLiAKQW5kIHlvdSdyZSByaWdodCwgeW91IGRvbid0IHdhbnQgaXQsIGJ1dCBpbiB0aGUgY2FzZSBvZiBpbmp1cmllcyBvciBzaWNrbmVzcyBzdWNoIGFzIGEgc29yZSB0aHJvYXQsIGluZmxhbW1hdGlvbiBpcyBhIG5hdHVyYWwsIG5lY2Vzc2FyeSByZXNwb25zZSBvZiB0aGUgaW1tdW5lIHN5c3RlbS4uIApJIGRvbiBqdXN0IGhhbmcgb3V0IGluIG15IHNoZWx0ZXIuIElmIEkgdGhhdCBib3JlZCBJIG1pZ2h0IGFzIHdlbGwgYmUgaGlraW5nLiAKWW91ciBub3Qgd3JvbmcuIApUaGUgMTZ0aCBsZXR0ZXIgb2YgdGhlIEdyZWVrIGFscGhhYmV0LiAKVGhhdCBwcmV0dHkgc2xpbS4gCjM0NTEyMjQ2SGFja25leSBhcHBlYWxlZCBhZ2FpbiBmb3IgRWJyb24gb3IgdGhvc2Ugd2hvIGhhdmUgaW5mb3JtYXRpb24gYWJvdXQgd2hhdCBoYXBwZW5lZCB0byBMb256aWUgdG8gY29tZSBmb3J3YXJkIHdpdGggYW55IHBvc3NpYmxlIGV4cGxhbmF0aW9uIG90aGVyIHRoYW4gdGhhdCB0aGUgY2FyIHRoZWZ0IHN0b3J5IHdhcyBtYWRlIHVwIHRvIGNvdmVyIHVwIHRoZSBjaGlsZCdzIGRlYXRoLiBUaGV5IGhvcGUgdGhpcyB3aWxsIGZvcmNlIEVicm9uIHRvIGZlc3MgdXAgdG8gdGhlIHJlYWwgc3RvcnkgYWJvdXQgd2hhdCBoYXBwZW5lZCB3aXRoIExvbnppZS4uIApUZXhhcyBIb2xkIEVtIGlzIHBsYXllZCBpbiBQYWNpZmljIFBva2VyIHN0YXJ0cyB3aXRoIHRoZSBwbGF5ZXJzIGRlYWxpbmcgdGhlaXIgdHdvIGhvbGUgY2FyZHMgZmFjZWQgZG93bi4gVGhpcyBpcyBkb25lIGJ5IGVhY2ggcGxheWVyIHN0YXJ0aW5nIHdpdGggdGhlIG9uZSBzZWF0ZWQgb24gdGhlIGxlZnQgb2YgdGhlIGJ1dHRvbi4gVGhlIHBsYXllciwgd2hvIGNhbiBtYWtlIHRoZSBiZXN0IHJhbmtlZCBmaXZlIGNhcmRzIHVzaW5nIHRoZSBjb21tdW5pdHkgY2FyZHMgd2l0aCBoaXMgaG9sZSBjYXJkcywgd2lucyB0aGUgZ2FtZS4uIApFbnRlcnRhaW5tZW50IEFydGljbGVzICBNYXJjaCAxMCwgMjAwNQpUaGUgR3JhbmQgQmF6YWFyIHMgYSBidCBsa2UgY29udHJvbGxlZCBjaGFvcy4gCkl0IHdvdWxkIGJlIGdyZWF0IGlmIHRoZSBzeXN0ZW0gZGlkbid0IGZhaWwgcmFwZSB2aWN0aW1zLCBidXQgaXQgZG9lcyBhdCBhIGh1Z2VseSB1bnByb3BvcnRpb25hbCByYXRlLiBJJ3ZlIGhhZCBwZXJzb25hbCBleHBlcmllbmNlIHdpdGggdGhpcywgd2hlbiBJIHRyaWVkIHRvIHJlcG9ydCBhIGJveWZyaWVuZCBmb3IgcmFwZSB0byBjb3AgcmVmdXNlZCB0byBldmVuIHRha2UgYSByZXBvcnQsIGFuZCB0b2xkIG1lIHRoYXQgaGUgd2FzIGFsbG93ZWQgdG8gZG8gd2hhdGV2ZXIgaGUgd2FudGVkIHRvIG1lIGJlY2F1c2UgaGUgd2FzIG15IGJveWZyaWVuZC4gSSBoYWQgYmVlbiBjb3ZlcmVkIGluIGZyZXNoIGJydWlzZXMgYWxsIG92ZXIgbXkgdGhpZ2hzIGFuZCBJIHdhcyBzbyBzb3JlIEkgd2FzIGFsbW9zdCBzd29sbGVuIHNodXQuIApFeGVtcGVsdmlzIG9tIGVuIGFubm9ucyByIHBsYWNlcmFyIGVuIGFubm9ucyBrIHAgaSBpbnRlcnZhbGxldCA1IGZpZ3VyLCBmdW5nZXJhOiAiZGVuIGhlbGEgc3BlY3RydW1lbiBhdiBkZSB1bmRlcnMga2Egb2NoIGhhbmRlbCBnZW1lbnNrYXBlbiBmciBuIG1hbW1hIG9jaCBQb3AgbCBuZ3Npa3RpZ2EgaW52ZXN0ZXJhcmUgdGlsbCBkZW4gbXlja2V0IGFrdGl2YSBoYW5kbGFyZW4gYXYgZGVyaXZhdC5EZXQgb2NrcyBzdCBkZXIgaW50ZXJha3RpdiB2ZXJmIHJpbmcgbWVkIG9saWthIHNsb3RzIG9jaCBmcmlnIHIgZHUgYmxpIHlvdXR1YmUgcGFydG5lciBkZSBiZXRhbGFyIGRpZyBsYWRkYSB1cHAgZW4gdmlkZW8uQXR0IGtsaWNrYSBhdiBtYXNraW5lbnMgaW5zaWRhIG9jaCBob3BwYXMgYXR0IGwgc2VuIGlubmUgZiByIGYgcmV0YWcgdGlsbCBwb3RlbnRpYWwgbGVkZXIgZGV0IGdlbm9tIGF0dCBzcGFyYSB0aWQgb2NoIGtvc3RuYWRlci4gRGV0dGEgaGogbHBlciBrdW5kZXIgYXR0IHNwZW5kZXJhIG1lciB0aWQgaHlyYSBmIHJzIGtyYXIgZW4gdHVmZiBlbmhldCBzb20ga2xhcmFyIHZlbiBkZSBtZXN0IHV0IGthZGUgYiByYmFyaGV0LiBEYXRvcm4gYiByamFkZSBhdHQgbmRyYSByZWdsZXJuYSBudSBrb21tZXIgZGUgb2NoIGRldCBzdGFubmFyIGRhdGEgZnIgbiBrb25zb2xlbiB0aWxsIHByb2Nlc3NvcmVyIHRpbGwgc3RyIG1tYW5kZSBrb2RhcmVuIHRpbGwgaW50ZXJuZXQgdGlsbCBseXNzbmFyZW5zIGRhdG9yLiAKQXJvdW5kIGEgdGhpcmQgb2Ygb3VyIFJMT3MgaGF2ZSBiZWVuIGNvbXBpbGVkIGludG8gSU1TIENvbnRlbnQgUGFja2FnZXMgKGllIHppcGZpbGVzIHdpdGggbWV0YWRhdGEpIHdoaWNoIHlvdSBjYW4gZG93bmxvYWQgZm9yIGxvY2FsIHVzZSwgYWZ0ZXIgZmlsbGluZyBpbiBhIHNob3J0IGZvcm0gZm9yIG91ciByZXNlYXJjaC4gClRoZSBNb29uIE1haWQgKE1hZ2F6aW5lOiAxOTIzLCBCb29rOiAxOTI2KVRoZSBNb29uIE1haWQgb3BlbnMgaW4gMTk2NyBvbiBib2FyZCB0aGUgVHJhbnNvY2VhbmljIExpbmVyIEhhcmRpbmcgb24gTWFycyBEYXksIHRoZSBkYXkgY29tbXVuaWNhdGlvbiB3aXRoIHRoZSBjaXR5IG9mIEhlbGl1bSBvbiBCYXJzb29tIGJlZ2FuLiBUaGVyZSBFZGdhciBSaWNlIEJ1cnJvdWdocyBlbmNvdW50ZXJzIEp1bGlhbiAzcmQgd2hvIHRlbGxzIGhpbSB0aGUgdGFsZSBvZiBob3cgaGUgcmVtZW1iZXJzIGJlaW5nIHJlaW5jYXJuYXRlZCBhcyBoaXMgZ3JhbmRzb24gSnVsaWFuIDV0aC4gCkkgaGF2ZSBjdXQgb3V0IGEgZmxhdCBwaWVjZSBvZiB3b29kIGFuZCBwbGFjZWQgaXQgb24gdGhlIG9wZW4gZHJhd2VyICh0byBhY3QgYXMgYSB0ZW1wb3JhcnkgdG9wKSBmb3IgdGhlIGZ1bGwgc2l6ZWQgZXJnbyBrZXlib2FyZCBhbmQgbW91c2UuLiAKQW5kIHdoZW4gSSBkbyB1c2UgdGhlbSwgaXQgcmVhbGx5IHRvIGp1c3Qgc2NyZXcgYXJvdW5kIGFuZCB0cnkgdGhpbmdzIG91dCB0aGF0IGFyZW4gZmVhc2libGUgb24gYW4gaG9uZXN0IHBsYXl0aHJvdWdoLiAKTXkgd2lmZSBhbmQgSSB3YW50ZWQgdG8gc2VlIGEgZGlmZmVyZW50IHBhcnQgb2YgSGF2YW5hLCBzbyB3ZSBzdGF5ZWQgdGhlcmUgZm9yIGFub3RoZXIgZmV3IGRheXMuIApBdmFsbG9uZSwgd2hvIHdpbGwgc29vbiBjb21wbGV0ZSB0aGUgdGhpcmQgcXVhcnRlciBvZiBhbiA4MDAgaG91ciBwcm9ncmFtIGF0IHRoZSBzY2hvb2wsIHNhaWQgdGhlIG5ld3MgYWJvdXQgdGhlIHNjaG9vbCdzIGFicnVwdCBjbG9zdXJlIHdhcyAiaHVydGZ1bC4iIlRoZSBtb3N0IHNob2NraW5nIHBhcnQgaXMgaG93IHF1aWNrbHkgaXQgd2FzIGhhcHBlbmluZywiIGhlIHNhaWQuIApEaWUgZWluZSB1bnRlcnN0dHp0IGtlaW5lIE9ubGluZSBBZ2VuZGEsIGRpZSBhbmRlcmUgd2FyIG51ciBPbmxpbmUsIGFiZXIgc2VociB0ZXVlciwgYW5kZXJlIHdvbGx0ZW4gMiUgdm9tIFVtc2F0eiB1c3cuIApUaGUgcmVhc29uIHRoZSBjb3VydHMgdGVuZCB0byBpbnNpc3QgdXBvbiBpdCBpcyB0aGF0IHRvIGRvIG90aGVyd2lzZSB3b3VsZCBwZXJtaXQgY29udmljdGVkIGRlZmVuZGFudHMgdG8gcmFpc2UgdGhlaXIgY2xhaW1zIG9uZSBhdCBhIHRpbWUsIHBvdGVudGlhbGx5IGRyYWdnaW5nIHByb2NlZWRpbmdzIG91dCBpbmRlZmluaXRlbHkgYXQgYW4gZW5vcm1vdXMgY29zdCBpbiBqdWRpY2lhbCByZXNvdXJjZXMuLiAKQnVzYW4gTmlnaHRsaWZlIEJ1c2FuLCBhdCBuaWdodCwgaXMgYSBzcGVjdGFjdWxhciBjaXR5IG9mIGxpZ2h0cyB0aGF0IGV2ZW4gdGhlIEd3YW5nYW4gQnJpZGdlIGlsbHVtaW5hdGVzIHRoZSBjaXR5LiAKQXMgYWxsaWVzLCB3ZSBjYW5ub3QgcGxhY2UgdGhlIGJ1cmRlbiBvZiBvdXIgZWR1Y2F0aW9uIHVwb24gdHJhbnNnZW5kZXIgYW5kIGdlbmRlciBub24gY29uZm9ybWluZyBwZW9wbGU7IHdlIG11c3QgZGVkaWNhdGUgdGhlIHRpbWUgYW5kIGVmZm9ydCBuZWVkZWQgdG8gYmUgaW5mb3JtZWQuIEhvd2V2ZXIsIGFzIHBhc3Npb25hdGUgYXMgd2UgbWF5IGJlIGFib3V0IHN1cHBvcnRpbmcgdGhlIHJpZ2h0cyBvZiBnZW5kZXIgZGl2ZXJzZSBwZW9wbGUsIHByb3ZpZGluZyBjb21wZXRlbnQgaGVhbHRoY2FyZSByZXF1aXJlcyByaWdvcm91cyB0cmFpbmluZy4gTWVkaWNhbCBzY2hvb2xzIGhhdmUgYSByZXNwb25zaWJpbGl0eSB0byBwcm92aWRlIGN1cnJpY3VsYXIgY29udGVudCBvbiBnZW5kZXIgZGl2ZXJzZSBjb21tdW5pdGllcywgYnV0IGF0IHRoZSBtb21lbnQgdGhleSdyZSBub3QgZnVsZmlsbGluZyBpdC4uIApUbyBwbGF5IHZpZGVvIHBva2VyIHlvdSB3aWxsIHRhcCBvbiB0aGUgY2FyZHMgeW91IHdpc2ggdG8ga2VlcCBvciBvbiBhIGJ1dHRvbiBvbiB0aGUgY29uc29sZSwgYW5kIHRoZW4gZHJhdyBjYXJkcyB5b3Ugd2lzaCB0byByZXBsYWNlLiAKIkZvciBtb3JlIHRoYW4gYSBkZWNhZGUsIHRoZSBhY3Rpb25zIG9mIHRoZSBVUyBBdHRvcm5leSdzIE9mZmljZSBmb3IgdGhlIFNvdXRoZXJuIERpc3RyaWN0IG9mIEZsb3JpZGEgaW4gdGhpcyBjYXNlIGhhdmUgYmVlbiBkZWZlbmRlZCBieSB0aGUgRGVwYXJ0bWVudCBvZiBKdXN0aWNlIGluIGxpdGlnYXRpb24gYWNyb3NzIHRocmVlIGFkbWluaXN0cmF0aW9ucyBhbmQgc2V2ZXJhbCBhdHRvcm5leXMgZ2VuZXJhbCwgYSBzcG9rZXN3b21hbiB3aXRoIHRoZSBVUyBEZXBhcnRtZW50IG9mIExhYm9yIHJlc3BvbmRlZCB3aGVuIEFjb3N0YSB3YXMgYXNrZWQgZm9yIGNvbW1lbnQuIE9mZmljZSdzIGRlY2lzaW9ucyB3ZXJlIGFwcHJvdmVkIGJ5IGRlcGFydG1lbnRhbCBsZWFkZXJzaGlwIGFuZCBmb2xsb3dlZCBkZXBhcnRtZW50YWwgcHJvY2VkdXJlcy4gCkkgdXNlZCB0byBnbyB0byBIb3BraW5zLCBidXQgaXQncyBhbiBob3VyIGF3YXksIGFuZCB0aGUgb25seSBub24gcmVub3ZhdGVkIGZsb29yIGF0IHRoYXQgdGltZSB3YXMgR0kuLiAKUHJvdmlkZXMgaW5mb3JtYXRpb24gdG8gZW5hYmxlIHRoZSBleHBhbnNpb24gb2YgZGF0YSBwcm92aWRlZC4gRm9yIGluc3RhbmNlLCB0aGVyZSBpcyBjbGVhciBldmlkZW5jZSB0aGF0IGEgZGV2aWNlIGxpa2UgYW4gQXBwbGUgd2F0Y2ggY291bGQgYWNjdXJhdGVseSBzY3JlZW4gZm9yIGRpYWJldGVzIHNpbmNlIGRpYWJldGVzIGNhdXNlcyBjYXJkaW92YXNjdWxhciBkYW1hZ2UuCldhc2hpbmd0b24sIGhvd2V2ZXIsIGlzIG5vdCB0byBibGFtZS4gCkVhY2ggcGxheWVyIGlzIGRlYWx0IHR3byBwcml2YXRlIGNhcmRzIGZhY2UgZG93biwgd2hpY2ggYXJlIGFsc28ga25vd24gYXMgInBvY2tldCBjYXJkcyIuLiAKSSBhIGRlc2lnbmVyLCBzbyBmaW5kaW5nIHN0dWZmIHRoYXQgd29ya3Mgd2l0aCBteSBnaW1weSBoeXBlcm1vYmlsZSBoYW5kcyBoYXMgYmVlbiBodWdlLiAKUGxheSBwb2tlciwgZW5qb3kgYW5kIHdpbi4gQWxsIHdpbm5pbmdzIGR1cmluZyB0aGlzIHBlcmlvZCBhcmUgeW91cnMuIApNZSBwZXJzb25hbGx5IGtub3dpbmcgaWYgeW91ciBraWRzIGhhdmUgSElWIGlzIGEgc3RyYXcgbWFuIGFyZ3VtZW50IGFuZCBpcyBub3Qgd2hhdCBJIGFtIHRhbGtpbmcgYWJvdXQgYXQgYWxsLiBVc2luZyBzdWNoIHRlY2huaXF1ZXMgaXMgbm90IGFuIGFkdmlzYWJsZSBzdHJhdGVneS4KSGUgZGVmaW5pdGVseSBvbmUgb2YgdGhlIG1vcmUgcHJvZ3Jlc3NpdmUgbWVtYmVycyBvZiBjb3VuY2lsLiAKSXQgd2FzIHJlcG9ydGVkIGluIFNlcHRlbWJlciB0aGF0IEt5bGllIGlzIGV4cGVjdGluZyBoZXIgZmlyc3QgY2hpbGQgd2l0aCBUcmF2aXMgU2NvdHQuIFNoZSBhbmQgaGVyIGZhbWlseSBoYXZlIG5laXRoZXIgY29uZmlybWVkIG5vciBkZW5pZWQgdGhlIG5ld3MgYW5kIHNoZSBoYXMgYWxzbyByZW1haW5lZCBvdXQgb2YgdGhlIHNwb3RsaWdodCBmb3IgbW9udGhzLiBTaGUgd2FzIG5vdGljZWFibHkgYWJzZW50IGZyb20gdGhlIDIwMTcgS2FyZGFzaGlhbiBKZW5uZXIgZmFtaWx5IENocmlzdG1hcyBjYXJkLCBtdWNoIHRvIHRoZSBkaXNhcHBvaW50bWVudCBvZiBmYW5zLgpUaGVyZSBpcyBjaXRpemVuc2hpcCB0aGF0IGlzIGJlc3Rvd2VkIHVwb24geW91IGJ5IGJpcnRoLiBUaGlzIGNhbm5vdCBiZSB0YWtlbiBhd2F5LgpXaGlsZSBJIGFsd2F5cyBlbmpveWVkIHRoZSBQVlAgcGFydCBvZiB0aGUgZ2FtZSAoZGVzcGl0ZSB0aGUgYWJ5c21hbCBzdGF0ZSBvZiBCR3MgcmlnaHQgbm93KSwgdGhlIE9OTFkgd2F5IHRvIGJlIGEgRFBTIHdhcnJpb3IgcmFpZGVyLCB3YXMgdG8gZ2V0IHRoZSBQVlAgc3R1ZmYuLiAKSSBnZXQgaXQsIGhlJ3MgY2hpbm55IHdpdGggQmFtYmkgbGVncyBhbmQgaGFzIGJlZW4gZHJvcHBlZCBtb3JlIHRpbWVzIHRoYW4gYSBKZXJzZXkgU2hvcmUgZ3JlbmFkZS4gRXZlbiBmZWxsb3cgQnJpdCBCaWxseSBKb2UgU2F1bmRlcnMgZGVjbGFyZWQgcmVjZW50bHksICJLaGFuIGhhcyBnb3QgdGhlIHdvcnN0IGNoaW4gaW4gYm94aW5nIi4gClRvdXRlZm9pcywgbGEgc291dGVuYW5jZSBwZXV0IGF2b2lyIHVuZSBpbmZsdWVuY2Ugc3VyIGxlcyB0aHNlcyBmYWlzYW50IGwnb2JqZXQgZCd1biBjZXJ0YWluIG5vbWJyZSBkZSBjcml0aXF1ZXMgZGUgcXVhbGl0IGFpbnNpIHF1ZSBwb3VyIGxhIGR0ZXJtaW5hdGlvbiBkZSBsYSBtZW50aW9uIGV0IGRlcyBmbGljaXRhdGlvbnMuLiAKSW4gY29udHJhc3QsIHRoZSBtdWx0aXZhcmlhdGUgcmVsYXRpdmUgcmlza3MgKFJScykgb2YgYWR2YW5jZWQgcHJvc3RhdGUgY2FuY2VyIGZyb20gY29tcGFyaXNvbnMgb2YgZXh0cmVtZSBxdWludGlsZXMgb2YgQUxBIGZyb20gbm9uYW5pbWFsIHNvdXJjZXMgYW5kIEFMQSBmcm9tIG1lYXQgYW5kIGRhaXJ5IHNvdXJjZXMgd2VyZSAyLjAyIGFuZCAxLjUzLCByZXNwZWN0aXZlbHkuCldlIHdlcmUgdGVhcmluZyBkb3duIGFuZCByZWJ1aWxkaW5nIExhdGluIGdvdmVybm1lbnRzIGFzIHJlY2VudGx5IGFzIDQwIHllYXJzIGFnbywgYW5kIHRoYXQganVzdCB0aGUgaW5jaWRlbnRzIHdlIGtub3cgYWJvdXQuIFdlIG1ham9ybHkgZGVzdGFiaWxpemVkIGxhcmdlIGNodW5rcyBvZiBDZW50cmFsIGFuZCBTb3V0aCBBbWVyaWNhLCBhbmQgdGhlIGltbWlncmF0aW9uIHdlIHNlZSB0b2RheSBpcyBhIHJlc3VsdCBvZiB0aGF0LiBXZSBlbXBvd2VyZWQgb3Vyc2VsdmVzIGF0IHRoZWlyIGV4cGVuc2UsIGFuZCBtb3N0IGltbWlncmFudHMgYXJlIHNpbXBseSBsb29raW5nIGZvciB0aGUgcHJvc3Blcml0eSB3ZSBzdG9sZSBmcm9tIHRoZWlyIHBhcmVudHMsIGdyYW5kcGFyZW50cywgZXRjLiAKTWFuIHNlbnRlbmNlZCB0byBsZXNzIHRoYW4gYSB5ZWFyIGZvciByb2xlIGluIEIKRGV0YWlsbGllcnRlIEluZm9ybWF0aW9uZW4gZXJoYWx0ZW4gU2llIGF1ZiBkZXIgV2Vic2l0ZSBkZXMgQXZpYXRpb24gQ2x1YiBzb3dpZSBkZXIgV29ybGQgIFRvdXIuLiAKRWxsZSBsdWkgbW9udHJlIGxhIHNhbGxlIG51bXJvIHF1YXRyZS4gQ2Ugc2VyYSBLYXR5LCB1bmUgbm91dmVsbGUsIHF1aSBwcmVuZHJhIGxlIGNsaWVudC4gCkFib3V0IHRoZSBmdXR1cmUuIApJJ20gY29udHJvbGxpbmcgbXkgZGlhYmV0ZXMsIEkndmUgcXVpdCBzbW9raW5nLCBJJ20gaGFyZGx5IHNpY2ssIHdpdGggREggKGRlYXIgaHVzYmFuZCkgc3VwcG9ydCBJJ20gbm90IGRlcHByZXNzZWQuIApTZWNvbmQsIGFuZCBlcXVhbGx5IGltcG9ydGFudCwgdGhlIHBhY2thZ2UgaXMgcmVhbGx5IHRoZSBvbmx5IHZlaGljbGUgdGhhdCB5b3UgaGF2ZSAxMDAlIGNvbnRyb2wgb3ZlciBpbiBzdG9yZS4gCkF0IDY1LCB0aGUgY3VycmVudCBtYXhpbXVtIG1vbnRobHkgT0FTIHBlbnNpb24gaXMgJDYwMC44NSBvciAkNywyMTAuMjAgcGVyIHllYXIuIApDYXppbiBwb2ludGUgZHUgZG9pZ3QgbGVzIG1hbHZlcnNhdGlvbnMgY29uY2VybmFudCBsZXMgZHJvZ3VlcyBwcm92ZW5hbnQgZGUgcGF5cyBsb2ludGFpbnMgZXQgcXVpLCB1bmUgZm9pcyBwYXJ2ZW51ZXMgZGFucyBsZXMgb2ZmaWNpbmVzLCBzb250IGRlIGJpZW4gbW9pbnMgYm9ubmUgcXVhbGl0IHF1IGxldXIgZHBhcnQ7IG5vbiBwYXMgcXVlIGxlIHRyYW5zcG9ydCBlbiBhdXJhIGFtb2luZHJpIGxhIHZhbGV1ciB0aHJhcGV1dGlxdWUsIG1haXMgc3VydG91dCBwYXJjZSBxdSBzdWJpc3NlbnQsIGRlIGxhIHBhcnQgZGUgbWFyY2hhbmRzIHBldSBzY3J1cHVsZXV4LCB1bmUgdHJhbnNmb3JtYXRpb24gcG91ciBsYXF1ZWxsZSBsIGR1IGx1Y3JlIG4gcGFzIHRyYW5nZXIuIEMgYXVzc2kgbCBwb3VyIENhemluIGRlIHJlbWV0dHJlIGVuIGNhdXNlIGNldHRlIGlkZSByZXVlLCBwYXJ0aWN1bGlyZW1lbnQgdGVuYWNlIHB1aXNxdSBleGlzdGUgdG91am91cnMgZW4gY2UgZGJ1dCBkZSBYWEkgbWUgc2ljbGUsIHF1ZSBjZSBxdWkgZXN0IGV4b3RpcXVlIGVzdCBwbHVzIGVmZmljYWNlOyBldCwgZW4gdHJhdmFpbGxhbnQgYXZlYyBkZXMgcHJvZHVpdHMgbG9jYXV4LCAgcG9ydGUgZGUgbWFpbnMsIGlsIGRtb250cmUgbCBkZSBjZSBqdWdlbWVudCBldCBwcm91dmUgYXZlYyBhaXNhbmNlIHF1ZSBsIG4gcGFzIGZvcmNtZW50IHBsdXMgdmVydGUgY2hleiBsZSB2b2lzaW4uIApDb29uZXkgc2FpZC4gRGlzdGlsbGVyeSBoYWQgdG9sZCB1cyB0aGF0IGJlY2F1c2Ugd2Ugd2VyZSBhIG5ldyBwcm9kdWN0LCBpZiB3ZSBzb2xkIDUwMCBjYXNlcyBpbiB0aGUgZmlyc3QgeWVhciB0aGF0IHdvdWxkIGJlIGdyZWF0LCBhbmQgd2Ugc29sZCAyLDAwMC4gTGlxdWlkIENoaWNrcyBhcHBlYXJlZCBvbiB0aGUgRGVuLCBpdCBoYWQgc29sZCA0MCwwMDAgYm90dGxlcyBvZiBTdG9rZWQgVm9ka2EsIGdlbmVyYXRpbmcgYWJvdXQgJDIwMCwwMDAgaW4gcmV2ZW51ZS4gClRoZSBOZXcgWW9yayBUaW1lcyByZWNlbnRseSB3cm90ZSBhYm91dCBGbHVzaGluZydzIGJ1c3RsaW5nIENoaW5hdG93biBhbmQgaXRzIHJvbGUgaW4gc3VwcGx5aW5nIHdvbWVuICAgbW9zdGx5IENoaW5lc2UgYnV0IGFsc28gS29yZWFuLCBUaGFpIGFuZCBFYXN0ZXJuIEV1cm9wZWFuICAgdG8gdGhlIDksMDAwIGlsbGljaXQgbWFzc2FnZSBwYXJsb3JzIGJlbGlldmVkIHRvIGJlIG9wZXJhdGluZyBhY3Jvc3MgdGhlIGNvdW50cnkuIE1hbnkgZW1wbG95IG1pZGRsZSBhZ2VkIHdvbWVuIHdvcmtpbmcgdG8gcGF5IG9mZiBkZWJ0cyBpbmN1cnJlZCBpbiB0aGVpciBuYXRpdmUgY291bnRyaWVzLCB0aGUgbmV3c3BhcGVyIHJlcG9ydGVkLi4gClRoZSBkb25hdGlvbnMgYXJlIG9mZmVyZWQgdG8gdGhlIGhvc3BpdGFscyBhbmQgY29tbXVuaXR5IG9yZ2FuaXNhdGlvbnMgdW5kZXIgdGhlIE5TVyBnb3Zlcm5tZW50J3MgTG9jYWwgSW1wYWN0IEFzc2Vzc21lbnQgc2NoZW1lLgpXZSB3aXRuZXNzaW5nIGluIHJlYWwgdGltZSBhIG5ldyBob2xvY2F1c3QuIApFYXN5IGtpbGxzIHlvdSBjYW4gdGFrZSB0aGVtIGFuZCBvZnRlbiB0aGV5IGNvbWUgd2l0aCBkaW5vc2F1cnMgdG9vLiAKQXJlIGEgbG90IG9mIGRpZmZlcmVudCB0aGluZ3MgdGhhdCBhcmUgaW5jb21lIHRlc3RlZCBpbiB0aGUgY3VycmVudCBzeXN0ZW0gLiAuIC4gYW5kLCBlc3BlY2lhbGx5IGlmIHlvdSBhIGxvd2VyIGluY29tZSBDYW5hZGlhbiwgeW91IGRvIG5vdCB3YW50IHRvIGdpdmUgdXAgb24gdGhvc2UsIFBlcmVpcmEgc2F5cy4KQWxzbyBub3RlZCB0aGUgY2lyY3Vtc3RhbmNlcyBvZiB0aGUgY3JpbWUsIHRoYXQgaGUga2lsbGVkIGluIGNvbGQgYmxvb2QsIGV4ZWN1dGlvbiBzdHlsZS4gClRoaXMgaXMgZXh0cmVtZWx5IGhlbHBmdWwsIGJ1dCBJIHRoaW5rIEkgbWFkZSBhIG1pc3Rha2UgaW4gbXkgaW5pdGlhbCB3b3JkaW5nLiAKIlRoZXJlIGlzIG5vIG5leHQgc3RlcC4gVW50aWwgdGhlcmUgaXMgYW4gZWZmZWN0aXZlIHRyZWF0bWVudCBvciBjdXJlIGZvdW5kIEkganVzdCBmb3JjZWQgdG8ganVzdCBsaXZlIHdpdGggaXQsIiBSaWNrd29vZCBzYWlkLgpMaXZlIDMgQ2FyZCBQb2tlcgpCdXQgdGhlIGxpdGlnYXRpb24gb2Ygd2hldGhlciBtaXhlZCByYWNlIGFjdG9ycyBhcmUgZW5vdWdoIGhhcyBvdmVyc2hhZG93ZWQgdGhlIG51bWJlciBvZiBjYXN0IGFuZCBjcmV3IG1lbWJlcnMgd2hvIGFyZSBTdHJhaXRzIENoaW5lc2UsIHN1Y2ggYXMgTGltLCBZZW9oLCBhc3NvY2lhdGUgcHJvZHVjZXIgSmFuaWNlIENodWEsIGFjdG9yIFRhbiBLaGVuZyBIdWEgYW5kIFJvbm55IENoaWVuZywgd2hvIHdhcyBib3JuIGluIE1hbGF5c2lhLCBncmV3IHVwIGluIFNpbmdhcG9yZSBhbmQgY2luY2hlZCB0aGUgbXVsdGkgbmF0aW9uYWwgbGlmZSBvZiBoaXMgY2hhcmFjdGVyIEVkaXNvbiBDaGVuZyBieSBhdHRlbmRpbmcgbGF3IHNjaG9vbCBpbiBBdXN0cmFsaWEuIApUaGUgdGhpcmQgcGVyc29uIG11c3QgaGF2ZSBhIGJpcnRoZGF5IHRoYXQgaXMgZGlmZmVyZW50IGZyb20gdGhlIGZpcnN0IHR3bzogdGhlIHByb2JhYmlsaXR5IG9mIHRoaXMgaGFwcGVuaW5nIGlzIDM2My8zNjUuIFdlIG5lZWQgdG8gbXVsdGlwbHkgdGhlIHByb2JhYmlsaXRpZXMgc2luY2UgdGhlIGV2ZW50cyBhcmUgaW5kZXBlbmRlbnQ7IHRoZSBhbnN3ZXIgZm9yIDMgcGVvcGxlIGlzIHRodXMgMzY0LzM2NSAgIDM2My8zNjUuIFlvdSBzaG91bGQgbm93IGJlIGFibGUgdG8gc29sdmUgaXQgZm9yIDQgcGVvcGxlLiAKSGUgaXMgcHJlZGVjZWFzZWQgYnkgaGlzIHBhcmVudHMgQ2F0ZXJpbmEgYW5kIFNhbHZhdG9yZSBDYWxsZWphLCBicm90aGVyIENhbGNpZG9uIGFuZCBzdXJ2aXZlZCBieSB0aGUgbW90aGVyIG9mIGhpcyBjaGlsZHJlbiwgS3J5cyBDYWxsZWphLiAKRG8gbm90IGdpdmUgdGhlIHBlcnNvbiB3YXRlciwgZm9vZCwgb3IgbWVkaWNpbmUgdW50aWwgdGhlIHNlaXp1cmUgaXMgb3ZlciBhbmQgaGUgb3Igc2hlIGlzIGFsZXJ0LgoiTUUgVEFLRSBBQlNPTFVUSVNUIFNUQU5DRSBPTiBJU1NVRSBJIENPTkZVU0UgQUJPVVQgQkVDQVVTRSBNRSBFTU9USU9OQUwuIgpNb3N0IHdoaXRlIHBlb3BsZSBJIGtub3cgd291bGQgbmV2ZXIgZXZlciBjb25zaWRlciBzdWNoIGEgdGhpbmcuIEl0IHdvdWxkIHNhdmUgc28gbXVjaCBtb25leSBhbmQgYnJpbmcgc28gbWFueSBvdGhlciBiZW5lZml0cyB0byBldmVyeWJvZHkuIEpvaW50IGZhbWlseSBsaXZpbmcgaXMgb25lIG9mIHRoZSBtb3N0IGdyZWVuIGFuZCBzdXN0YWluYWJsZSB3YXlzIHRvIGxpdmUgICBtb3JlIHBlb3BsZSBzaG91bGQgYmUgb3BlbiB0byBpdC4gMTEgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KT25lIHdhcyBDeW50aGlhIEVhZ2FuLCBhIGZvcm1lciBsaWJyYXJpYW4gaW4gRGV0cm9pdCB3aG8gdG9sZCB0YWxlcyBvZiBkZWFsaW5nIHdpdGggZnJhenpsZWQgcGF0cm9ucyBkb2luZyByZXNlYXJjaCBmb3IgdGhlaXIgY291cnQgY2FzZXMuCldvdWxkIHlvdSBsZXQgeW91ciBzY2hvb2wgb3IgYnVzaW5lc3MgZG8gdGhpcz8gTm8uIApTYWRseSwgdGhlcmUgaXNuIG11Y2ggUEMgY2FuIGRvIGFib3V0IHRoaXMuIE15IHJvb21tYXRlIHdhcyBjb250aW51YWxseSBoYXJhc3NlZCBhbmQgZXZlbnR1YWxseSBhc3NhdWx0ZWQgKG5vdCBzZXh1YWxseSkgYnkgYSBtZW50YWxseSBpbGwgY293b3JrZXIgKEhTIHRlYWNoZXIpLiBTaGUgaGFkIHRvIG1vdmUgb3V0IHRvIGEgbmV3IHNpdGUgb25jZSB0aGUgbG9jYWwgcHJvc2VjdXRvciBzYWlkIGl0IHdvdWxkIHRha2UgMiAzIHllYXJzIHRvIGNvbnZpY3QgaGltIG9mIGFueXRoaW5nLiBJbiB0aGUgbWVhbiB0aW1lLCBoZSByZXRhaW5lZCBoaXMgcG9zaXRpb24gYXQgdGhlIHNjaG9vbCBhbmQgd2FzIGZyZWUgdG8gY29udGludWUgaGlzIGhhcmFzc21lbnQuIFBlYWNlIENvcnBzIHdhcyBxdWl0ZSBoZWxwZnVsLCBhcyB3YXMgdGhlIFVTIEFtYmFzc2Fkb3IsIGJ1dCB1bHRpbWF0ZWx5IG5vdGhpbmcgdG8gYmUgZG9uZSBleGNlcHQgZXh0cmljYXRlIHlvdXJzZWxmIGFuZCB0cnkgdG8gaGVhbC4KV2FzIGFsb25lIGEgbG90IGFuZCBJIGp1c3Qgd29rZSB1cCBhbmQgd29ya2VkIGhhcmQuIApTb3VyY2VzIGNsb3NlIHRvIFdhcm5lIHNhaWQgaGUgd2FzIHNpbXBseSBmZWQgdXAgd2l0aCBoYXZpbmcgdG8ganVzdGlmeSBoaW1zZWxmIGFuZCBoYWQgYmVlbiBlbmNvdXJhZ2VkIGJ5IGNsb3NlIGFzc29jaWF0ZXMgdG8gc2h1dCBpdCBkb3duIGJlY2F1c2UgIml0IGFsbCB3YXMganVzdCB0b28gbXVjaCB0cm91YmxlIi4gCkkgd29uZGVyaW5nIGlmIHRoZXJlIGFueXRoaW5nIEkgY2FuIGRvIG9uIHRoaXMgbGFzdCBuaWdodCB0aGF0IGlzIHF1aW50ZXNzZW50aWFsbHkgS29yZWFuLiAKSSBhbSBpbiB0aGUgbWlub3JpdHkgd2hvIGFjdHVhbGx5IHByZWZlcnMgdGhlIG5ld2VyIE5JTiBzdHVmZi4gV2l0aCBUZWV0aCwgVGhlIEZyYWdpbGUsIGFuZCBOb3QgVGhlIEFjdHVhbCBFdmVudHMgYWxsIGdldCBmYXIgbW9yZSBwbGF5IG9uIG15IHNwb3RpZnkgKEkga25vdywgaGF0ZSBtZSkuCiJUaGUgaHlwZXJ2aXNpYmlsaXR5IG9mIE11c2xpbXMgaGFzIGJlY29tZSBhIHRvcGljIG9mIG5hdGlvbmFsIGRlYmF0ZSBhbmQgd2UgbmVlZCB0byB1bmRlcnN0YW5kIHRoZSBtZWRpYSdzIHJvbGUgaW4gc2VjdXJpbmcgdGhpcyBjbGltYXRlIG9mIGZlYXIuIEFueSB2aXN1YWwgaW5kaWNhdG9yIG9mICdNdXNsaW1uZXNzJyBpcyBub3cgYXJndWVkIHRvIGhhdmUgbm8gcGxhY2UgaW4gY29udGVtcG9yYXJ5IHNvY2lldHkuIlRoaXMgaXMgbm90IHRvIHNheSB0aGF0IE11c2xpbSB3b21lbiBhcmUgbm90IGNlbGVicmF0ZWQuIFRoZXkgYXJlIGNyZWF0aW5nIHZpc2liaWxpdHkgYW5kIHNwYWNlIGZvciB0aGVtc2VsdmVzICAgbm90IGp1c3QgZmlnaHRpbmcgZm9yIGFja25vd2xlZGdlbWVudCwgYnV0IGJ1aWxkaW5nIHRoZWlyIG93biBzdGFnZXMgYW5kIGhpcmluZyB0aGVpciBvd24gbWljcyB0byBhZmZpcm0gdGhlbXNlbHZlcyBhbmQgdGhlaXIgcGVlcnMuIApCdXQgc29tZXRoaW5nIGlzIHZlcnkgY29tbW9uIGluIHRoZW07IHlvdSB3aWxsIGZpbmQgdGhlIHBvc2l0aXZlIGFzcGVjdHMgb2YgdGhlIHByb2R1Y3QgZnJvbSBkaWZmZXJlbnQgYXNwZWN0cyBhbmQgZGlmZmVyZW50IHZpZXdzIGRlcGVuZGluZyBvbiB0aGUgc3R5bGUgYW5kIGV4dGVudCBvZiB1c2FnZS4gClRoZSB0cmljayBpcyBmb3IgZWFjaCBvZiB1cyB0byBsZWFybiB0byB1c2UgYm90aCBlbmVyZ2llcyBzbyB0aGF0IG9uZSBlbmVyZ3kgY2FuIG1pdGlnYXRlIHRoZSBvdGhlciwgcHJldmVudGluZyBuZWl0aGVyIGZyb20gZ2V0dGluZyBvdXQgb2Ygd2hhY2suIApTZW5zaW5nIHRoZXkgd2VyZSBvbiBhIHdpbm5pbmcgc3RyZWFrLCB0aGV5IGdvdCBlbmdhZ2VkIG9uIHRoZSBzYW1lIGRheSwgbWFycmllZCBhdCBhIGpvaW50IGNlcmVtb255IChvZmZpY2lhbGx5ICJxdWFydGVybmFyeSBtYXJyaWFnZXMiKSwgYW5kIGJ1aWx0IGEgcGFpciBvZiBob21lcywgc2lkZSBieSBzaWRlLgpTY3JldyBIYWxvIDYsIGV2ZW4gaWYgaXQgZG9lcyBnbyBvbiBQQywgSSB3b24gcGxheSBpdC4gSSBkb24gdHJ1c3QgMzQzLCB0aGV5IGJhc2ljYWxseSBmb3JtZWQgb2ZmIHRoZSBnb29kIG5hbWUgb2YgdGhlIEhhbG8gZnJhbmNoaXNlIGFuZCB0b29rIGl0IGluIGEgZGlyZWN0aW9uIHRoYXQgd2FzIGdvb2QgZm9yIHNvbWUgYnV0IGJhZCBmb3IgdGhlIG9yaWdpbmFsIGZhbnMuIEZyb20gZ2l2aW5nIG91ciBibGFuayBzbGF0ZSBoZXJvIG1hc3RlciBjaGllZiBlbW90aW9ucywgdG8gbm90IGdpdmluZyB1cyBhbiBlcGljIGJvc3MgZmlnaHQgYmV0d2VlbiB0aGUgY2hpZWYgYW5kIGxvY2tlLiAKTGl2ZSB0aGUgd2F5IGhlIHdvdWxkIHdhbnQgeW91IHRvLiBUYWtlIGNhcmUgb2YgeW91cnNlbGYgaW4gdGhpcyBkaWZmaWN1bHQgdGltZS4gSSBhbSBzbywgc28gc29ycnkgZm9yIHlvdXIgbG9zc2VzLi4gClRoZSBwb2ludCBpcywgSSB0aGluayB0aGlzIHBvc3QgKGFuZCBvdGhlcnMgbGlrZSBpdCkgY29uZmxhdGUgdGhlIHJlYWwgaXNzdWVzLiBEbyBJIHdhbnQgdG8gYmUgY2hhbGxlbmdlZCBpbiBQdlA/IFN1cmUuIApBZnRlciBhYm91dCBhbiBob3VyIHBhc3NlZCBieSB3ZSBhZ3JlZWQgdGhhdCB0aGVyZSB3YXMgb25seSBvbmUgd2F5IHRvIGZpZ3VyZSBvdXQgd2hvIGhhZCB0aGUgcmlnaHQgc3RyYXRlZ3kgYW5kIHdobyB3YXMgc2ltcGx5IG91dCBpbiBsZWZ0IGZpZWxkIHdpdGggdGhlaXIgdGhvdWdodHMuIFNvIHdlIGRlY2lkZWQgdG8gaG9sZCBvdXIgb3duIGxpdHRsZSBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgd2l0aCBhIGdyYW5kIHByaXplIHRoYXQgd2FzIG9ubHkgcGVubmllcyBjb21wYXJlZCB0byB0aGUgbWlsbGlvbnMgb2YgZG9sbGFycyB0aGF0IGNhbiBiZSB3b24gYXQgdGhlIHJlYWwgZXZlbnQuIFNvIHdoYXQgd2FzIHRoZSBmaXJzdCB0aGluZyB3ZSBoYWQgdG8gZG8/IFdlbGwsIHdlIGNvdWxkbid0IHBsYXkgd2l0aG91dCBDbGF5IFBva2VyIENoaXBzLgpObyBkcmF3cy4gCkEgcGFzc2VyIGJ5IHNhdyB0aGlzIGFuZCBzYWlkLCAid2h5IGRvIHlvdSBib3RoZXIgdHJ5aW5nIHRvIGhlbHAgdGhhdCBzY29ycGlvbiwgaGUganVzdCBrZWVwcyBzdGluZ2luZyB5b3UhIi4gCkMpIHlvdXJlIGdvaW5nIHRvIG5lZWQgdG8gcGljayB1cCBib29rcywga2V5Ym9hcmRzLCBhbmQgcmFuZG9tIGRldmljZXMgdG8gdGVzdCB5b3VyIHNraWxsIGxldmVscy4gVGFrZSBub3RlcyByZWxpZ2lvdXNseSBiZWNhdXNlIGl0IGJhZCB3aGVuIHlvdSBoYXZlIHRvIEdvb2dsZSB0aGUgc2FtZSBjcmFwIGEgZG96ZW4gdGltZXMgYmVjYXVzZSB3aG8gY2FuIHJlbWVtYmVyIGV2ZXJ5dGhpbmcgcmlnaHQgYXdheT8/IE5vdCBtYW55LiBBbHNvIGRhdGEgcmV0ZW50aW9uIGR1ZSB0byBub3RlcyBibGFoIGJsYWgKVGhhdCBpcyBhIHJlYWxseSB0b3VnaCBkZWNpc2lvbiBpZiB0aGF0IHNvbWV0aGluZyB0aGF0IGJvdGhlcnMgeW91LiAKV2UgdXNlIHN0YXRlIG9mIHRoZSBhcnQgRkFDUyBBY3Rpb24gVW5pdCBkZXRlY3RvcnMgdG8gYXV0b21hdGljYWxseSBhbm5vdGF0ZSB0aGUgcGxheWVycyBmYWNpYWwgZXhwcmVzc2lvbnMsIHdoaWNoIGhhdmUgYmVlbiByZWNvcmRlZCBvbiB2aWRlby4gSW4gYWRkaXRpb24sIHdlIHVzZSB0aW1lc3RhbXBzIG9mIHdoZW4gdGhlIHBsYXllciByZWNlaXZlZCB0aGVpciBjYXJkIGFuZCB3aGVuIHRoZXkgcGxhY2VkIHRoZWlyIGJldHMsIGFzIHdlbGwgYXMgdGhlIGFtb3VudHMgdGhleSBiZXQuIFRodXMsIHRoZSBzeXN0ZW0gaXMgZnVsbHkgYXV0b21hdGVkLiAKU2lkRHJpdmVyIHUKIldoYXQgZG8geW91IG1lYW4gaXQgIldoYXQgZG8geW91IG1lYW4gdGhlcmUgYW4gdW5wb3N0YWJsZSI/IGV0Yy4gCkkgZ290IGFyb3VuZCBpdCBieSBtYWtpbmcgYSBsaXN0IG9mIGFsbCB0aGUgY3JhcCBzaGUgZGlkIG92ZXIgdGhlIHllYXJzLiAKSmFjb2Igcm9zZSB0byBwb2tlciBzdGFyZG9tIGZvbGxvd2luZyB0aGF0IFVTUEMgd2luIGF0IHRoZSBUYWogTWFoYWwgaW4gQXRsYW50aWMgQ2l0eSBiYWNrIGluIDIwMDYuIEhlIGVhcm5lZCBhIGNhcmVlciBiZXN0ICQ4NzgsNTAwIGZvciBoaXMgZWZmb3J0cyBkdXJpbmcgdGhhdCB0b3VybmFtZW50LCB3aGljaCBpbmNsdWRlZCBhIGZpbmFsIHRhYmxlIGNvbnNpc3Rpbmcgb2YgdGhlbiBmZWxsb3cgcmlzaW5nIHN0YXJzIEpvcmRhbiBNb3JnYW4gKEdQSSBOby4gClRoZXNlIGFyZSBwcm9iYWJseSBzb21lIG9mIHRoZSBjaGVhcGVzdCBidW1wZXIgcG9vbGluZyBkaW5pbmcgdGFibGVzIGZvciBzYWxlIG9ubGluZSBhdCBpdHMgbG93IHByaWNlIG9mIGp1c3QgJDUwMCBkb2xsYXJzLiAKU2hhcnBsZXNjb3JuZXIgIDYyIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnbwpJZiB5b3UgYXJlIGN1cnJlbnRseSB1bmRlciBEb2N0b3JzJyBjYXJlIGZvciBhbnkgcmVhc29uLCBhIHdyaXR0ZW4gcmVsZWFzZSBmcm9tIHlvdXIgRG9jdG9yIG1heSBiZSByZXF1aXJlZCBiZWZvcmUgcmVjZWl2aW5nIHNlcnZpY2VzLiBZb3VyIEhlYWx0aCBpcyBhbHdheXMgb3VyIGZpcnN0IGNvbmNlcm4uLiAKUGxheWVyIEEgd2lsbCBiZSBmb3JjZWQgdG8gb2Z0ZW4gYmV0IHdpdGggYSB2ZXJ5IHdlYWsgaGFuZCB0aGF0IGNhbid0IHN0YW5kIGEgcmFpc2UsIG9yIGdpdmUgdXAgdGhlIHBvdCB0byB0aGUgYmlnIGJsaW5kLCB3aG8gd2lsbCB1c3VhbGx5IGJldCBpZiBjaGVja2VkIHRvIGFmdGVyIHRoZSBmbG9wLiBBbmQgd2hlbiBBIGRvZXMgaGl0IHRoZSBmbG9wLCB0aGUgYmlnIGJsaW5kIGlzIHJhcmVseSBnb2luZyB0byBwdXQgYSBsb3Qgb2YgbW9uZXkgaW4gdGhlIHBvdCB1bmxlc3MgaGUgaGFzIEEgYmVhdC4gCkJlZm9yZSBlbWJhcmtpbmcgb24geW91ciBCYXkgQXJlYSBhZHZlbnR1cmUsIGVuam95IGEgYnVmZmV0IGJyZWFrZmFzdCBhdCBCNTUgQ3JhZnQgSG91c2UgS2l0Y2hlbiBvciBncmFiIGEgdG8gZ28gc25hY2sgYXQgTWlzc2lvbiBTdHJlZXQgUGFudHJ5LiAKSXQncyBub3Qgb25seSBbanVzdF0gZm91ciBpbmdyZWRpZW50cywgYnV0IEkgbG92ZSBhbGwgdGhvc2UgemVyb3MgemVybyBmYXQsIHplcm8gc3VnYXIgdGhvc2UgYXJlIHRoaW5ncyB0aGF0IGFyZSBpbXBvcnRhbnQgdG8gY29uc3VtZXJzLiIuIApSb2JpbnNvbiBzYWlkIHRoYXQgQXNobGV5IHZpc2l0ZWQgaGVyIGdyYW5kcGFyZW50cyBhIGxvdCBhbmQgYWRkZWQgIkkgd2FzIHRvbGQgdGhhdCBzaGUgd2FzIHByb2JhYmx5IGxlYXZpbmcgaGltLiIKSGlzIHNhdmluZyBncmFjZSB0aHVzIGZhciBoYXMgYmVlbiB0aGF0IGZldyBwZW9wbGUgY2FyZSBhYm91dCBoaXMgbGllcywgYnV0IGlmIGhlIGxpZXMgdW5kZXIgb2F0aCBpdCdzIGEgZGlmZmVyZW50IGJhbGxnYW1lLi4gClRoaW5rIGVudHJlcHJlbmV1cnMgYXJlIG1hZGUsIENyb3hvbiBzYWlkLiAKU29tZXRpbWVzIGl0J3MgdGhlIGxpdHRsZSB0aGluZ3MgdGhhdCBtYWtlIGEgZGlmZmVyZW5jZSB3aGVuIHlvdSBob3N0IGEgcG9rZXIgcGFydHkuIFRoaXMgaXMgc28gdHJ1ZTsgd2UgaW52aXRlZCBteSByZWxhdGl2ZXMgYW5kIGluIGxhd3Mgb3ZlciBmb3IgYSBodWdlIGdldCB0b2dldGhlciBsYXN0IHN1bW1lciB3aGVyZSB0aGUgaG90IHRvcGljIHdhcyBvdXIgZmxhbWJveWFudCB0YWJsZSBjb3ZlcnMuIFdoZW4gd2UgaGVsZCBhIHBva2VyIGV2ZW50IGZvciBldmVyeW9uZSBiZWZvcmUgdGhlIGtpZHMgd2VudCBiYWNrIHRvIHNjaG9vbCwgdGhlIHRhbGsgb2YgdGhlIHBhcnR5IHdhcyBvdXIgMjAwIExhcyBWZWdhcyBFZGdlc3BvdCBOZXhnZW4gRGlzY291bnQgUG9rZXIgQ2hpcCBTZXQgd2l0aCBBbHVtaW51bSBDbGVhciBUb3AgQ2FzZS4uIApJbiB0aGUgbmVhciBmdXR1cmUsIDIwJSBvZiB0aGUgb25saW5lIGdhbWUgd2lsbCBiZSBwbGFjZWQgaW4gdGhlIHZpcnR1YWwgd29ybGQuIApCaXJ0aGRheS4gV2hhdGV2ZXIuIEkgd2FzIG9ubHkgImhhcHB5IiB3aGVuIEkgd2FzIGF3YXkgZnJvbSBldmVyeW9uZSBzbyBJIGNvdWxkIGp1c3QgdHJ5IHRvIGJlICJtZSIuIApJQW1PZmZpY2lhbCAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpJbiB0aGUgZW5kLCBpdCBhbGwganVzdCBwcm90ZWlucywgZmF0cyBhbmQgY2FyYnMuIApJIGFuc3dlcmVkICJ5ZXMiIHRvIGJvdGggcXVlc3Rpb25zLCBzbyBJIHN0YXJ0ZWQgdGhhdCBuaWdodCAgIGhlIGp1c3QgaGFuZGVkIG1lIGEgc3RhY2sgb2YgY2FzaCBhbmQgc2VudCBtZSBvdXQgdG8gZGVsaXZlciBzYW5kd2ljaGVzIHVudGlsIDIgbycgY2xvY2sgaW4gdGhlIG1vcm5pbmcuIEhlIGRpZG4ndCBldmVuIGNoZWNrIHRvIG1ha2Ugc3VyZSBJIGhhZCBhIGRyaXZlcidzIGxpY2Vuc2UuIEZvciB0aGUgZmlyc3QgdHdvIHdlZWtzIEkgd29ya2VkIHRoZXJlLCB0aGUgbWFuYWdlciBrbmV3IGxpdGVyYWxseSBub3RoaW5nIGFib3V0IG1lIGJleW9uZCBteSBmaXJzdCBuYW1lIGFuZCBhIGdlbmVyYWwgZGVzY3JpcHRpb24gaGUgY291bGQgcHJvdmlkZSB0aGUgcG9saWNlIGluIHRoZSBldmVudCBvZiBteSBkaXNhcHBlYXJhbmNlLiAKWW91IGNhbiBjb29rIGFjaWRpYyBmb29kcyBzdWNoIGFzIHRvbWF0byBzYXVjZSBpbiBhIHdlbGwgc2Vhc29uZWQgY2FzdCBpcm9uIHNraWxsZXQsIHRob3VnaCBDb29rIHN1Z2dlc3RzIGxpbWl0aW5nIHRoZSB0aW1lIHRvIGhhbGYgYW4gaG91ciBhbmQgdGhlbiByZW1vdmluZyBpdCByaWdodCBhd2F5LiBUaGF0IGJlaW5nIHNhaWQsIHRoZXJlIGFyZSBjZXJ0YWluIGZvb2RzIHRoYXQgYXJlIGEgc2FmZXIgYmV0IGluIGEgbm9uc3RpY2sgc2tpbGxldC4gCkkgd291bGQgaGF2ZSBhd2Vzb21lIG1lbW9yaWVzIG9mIHRoYXQgZXZlbnQgYnV0IG5vcGUsIEEgZ290IGludml0ZWQuIEFuZCBldmVuIHRob3VnaCBteSBzYWx0IHNob3VsZCBiZSBhaW1lZCBhdCBOLCB3aGljaCBpdCBpcywgbXkgc2FsdCBmb3IgQSBpcyBtdWNoIGdyZWF0ZXIuLiAKQW4gYXV0b21hdGVkIHByb2dyYW0gdGhhdCBjcmF3bGVkIHRob3NlIHZhc3Qgc3BhY2VzIG9mIHRoZSBpbnRlcm5ldCB0aGF0IHdlcmVuIGNhY2hlZCBvciBpbmRleGVkIGJ5IHNlYXJjaCBlbmdpbmVzLiAKQW5kIEkgbmV2ZXIgZXZlbiB0YWxrZWQgYWJvdXQgSUQgWW91IGNvbXBsZXRlbHkgY2hhbmdpbmcgdGhlIHRvcGljIGp1c3QgdG8gbWFrZSBtZSBsb29rIGJhZC4gCkFwcGFyZW50bHkgdGhlIG5vdGlvbiB0aGF0IEVneXB0aWFucyB1c2VkIHNsYXZlcyB3YXMgdG91dGVkIGJ5IHRoZSBhbmNpZW50IEdyZWVrcy4gCkluIHRoYXQgY2FzZSwgdGhlIE9udGFyaW8gYXBwZWFsIGNvdXJ0IHN0cnVjayBkb3duIGEgYmFuIG9uIGJyb3RoZWxzLCBzYXlpbmcgaXQgZXhwb3NlcyBzZXggd29ya2VycyB0byBkYW5nZXIuIFRoZSBmZWRlcmFsIGdvdmVybm1lbnQgaXMgYXBwZWFsaW5nIHRoZSBPbnRhcmlvIHJ1bGluZyB0byB0aGUgU3VwcmVtZSBDb3VydCBvZiBDYW5hZGEuIFN1cHJlbWUgQ291cnQuClRoZXkgd2VyZSBtYXJyaWVkIGluIDE5NDkgYW5kIHRlbiB5ZWFycyBsYXRlciBtb3ZlZCB0byBXYXRlcmxvbyB3aXRoIHRoZWlyIGNoaWxkcmVuLCBMeW5uZSBhbmQgSmltLCB3aGVyZSBCb2IgdG9vayBvbiB0aGUgcG9zaXRpb24gb2YgdHJlYXN1cmVyIChhbmQgdGhlbiBWUCBGaW5hbmNlKSBvZiB0aGUgRXF1aXRhYmxlIExpZmUgSW5zdXJhbmNlIENvbXBhbnkuIApMaW1pdCBteSBzZWFyY2ggdG8gci9HYW1lU2NyZWVuc3VzZSB0aGUgZm9sbG93aW5nIHNlYXJjaCBwYXJhbWV0ZXJzIHRvIG5hcnJvdyB5b3VyIHJlc3VsdHM6c2VlIHRoZSBzZWFyY2ggZmFxIGZvciBkZXRhaWxzLgpJIGNvdWxkbiBoYW5kbGUgYWxsIHRoZSBjcm9zc3RhbGsuIExpa2UgV2lsIFdoZWF0b24gc2hvdyBUYWJsZXRvcCBkb2VzIGEgZmFpciBhbW91bnQgb2YgZWRpdGluZyBkb3duLCB0aW1lbGFwc2UgdHlwZSBzdHVmZiwgc28gdGhhdCBoZSBjYW4gc2hvdyBhIHdob2xlIGdhbWUgcGxheSBpbiBhIHJlbGF0aXZlbHkgc2hvcnQgcGVyaW9kIG9mIHRpbWUuIENyaXRpY2FsIFJvbGUganVzdCBmZWVscyBsaWtlIHRoZXkgcGxvcHBlZCBhIHJlY29yZGVyIGRvd24gb24gdGhlIGNlbnRlciBvZiB0aGUgdGFibGUgYW5kIGp1c3QgdXBsb2FkZWQgdGhlIHdob2xlIGdhbWUgd2l0aCAwIGVkaXRpbmcuIApJdCdzIGFsc28gc2VlbiwgaW4gbG90cyBvZiBjaXJjdW1zdGFuY2VzLCB0aGF0IGEgbWlsZCBtYXNzYWdlIG9mIHRoZSBwcm9zdGF0ZSBmbHVzaGVzIG91dCBiYWN0ZXJpYSB3aGljaCBtaWdodCBiZSB0cmFwcGVkIGluc2lkZSB0aGUgcHJvc3RhdGUgZ2xhbmRzLiAKU28gY2hlY2sgdGhlIHJ1bGVzIG9mIHdoYXRldmVyIGtpbmQgeW91IGFyZSBwbGF5aW5nIHRvIGtub3cgaG93IG1hbnkgb2YgdGhlIGNhcmRzIGluIHlvdXIgaGFuZCBuZWVkIHRvIGJlIGNvbWJpbmVkIHdpdGggaG93IG1hbnkgb24gdGhlIHRhYmxlLCBidXQgdGhlIGZvdXIgb2YgYSBzcGVjaWZpYyBudW1iZXIgb3IgbGV0dGVyIHdpbGwgYmUgdGhlIHNhbWUuIApJdCBzaG93cyBnbHV0ZW4gY2FuIHNldCBvZmYgYSBkaXN0aW5jdCByZWFjdGlvbiBpbiB0aGUgaW50ZXN0aW5lcyBhbmQgdGhlIGltbXVuZSBzeXN0ZW0sIGV2ZW4gaW4gcGVvcGxlIHdobyBkb24gaGF2ZSBjZWxpYWMgZGlzZWFzZS5UaGUgbmV3cyB3aWxsIGJlIHdlbGNvbWUgdG8gcGVvcGxlIHdobyBoYXZlIHN1c3BlY3RlZCBhIGJyb2FkIHJhbmdlIG9mIGFpbG1lbnRzIG1heSBiZSBsaW5rZWQgdG8gdGhlaXIgZ2x1dGVuIGludGFrZSwgYnV0IGhhdmUgZmFpbGVkIHRvIGZpbmQgZG9jdG9ycyB3aG8gYWdyZWUuaGF2ZSBiZWVuIHRvbGQgaWYgaXQgd2FzbiBjZWxpYWMgZGlzZWFzZSwgaXQgd2FzbiBhbnl0aGluZy4gCklmIGEgTEVPIGRvZXMgc29tZXRoaW5nIGFuZCBJIGRvIHRoZSBleGFjdCBzYW1lIHRoaW5nIGkgd2lsbCBiZSBwdXQgaW4gamFpbCBhbmQgbm90aGluZyB3aWxsIGhhcHBlbiB0byB0aGVtLiAKQW5kIHJlbWVtYmVyIHdoYXQgYSBjaGFyaXRhYmxlIGd1eSBvdXIgZnJpZW5kIE1hcnRpbiBTaGtyZWxpIGlzPyBTdXJseSB0aGlzIGNoYXJpdGFibGUgZ2l2aW5nIGlzbid0IGp1c3QgYSB3YXkgdG8gZmxlZWNlIHRoZSBnb3Zlcm5tZW50IG91dCBvZiBtb3JlIG1vbmV5PwpGZW1hbGVzIGdlbmVyYWxseSBoYXZlIGxvd2VyIG1haW50ZW5hbmNlIGNhbG9yaWVzIHRoYW4gbWVuIHNvIGlmIHRoZXkgYXRlIGV4YWN0bHkgdGhlIHNhbWUgdGhleWQgYmUgaW4gYSBoaWdoZXIgY2Fsb3JpYyBzdXJwbHVzIGFuZCB0aGVyZWZvcmUgZ2FpbiBtb3JlIGZhdC4gCkFnYWluLCBmcm9tIHdoYXQncyBhdmFpbGFibGUsIHdpdGggTktPVEIgc2hlIGNvdWxkJ3ZlIHBlcmZvcm1lZCBpbiBmcm9udCBvZiBiZXR3ZWVuIDEsNTcxIGFuZCAyNywwMTcgcGVvcGxlLCBhbmQgd2l0aCB0aGUgRG9sbHMsIHNoZSBjb3VsZCBoYXZlIHBlcmZvcm1lZCBpbiBmcm9udCBvZiBiZXR3ZWVuIDQsMzIzIGFuZCAyOCwzMDUgcGVvcGxlLiAKVGhlIG1hbGUgc3VzcGVjdCwgd2hvIHRoZSB2aWN0aW0gc2FpZCBtaWdodCBnbyBieSB0aGUgbmlja25hbWUgd2FzIGRlc2NyaWJlZCB0byBwb2xpY2UgYXMgYmVpbmcgYWJvdXQgNiBmZWV0IHRhbGwsIHRoaW4gYW5kIHdoaXRlLCB3aXRoIGxvbmcgYnJvd24gaGFpciBwdWxsZWQgdXAgaW5zaWRlIGEgYmVhbmllIGNhcC4gVGhlIHdvbWFuIHdhcyBhbHNvIGRlc2NyaWJlZCBhcyBiZWluZyB0aGluIGFuZCB3aGl0ZSB3aXRoIGxvbmcgYnJvd24gaGFpci4gU2hlIHdhcyB3ZWFyaW5nIGRhcmsgaGlnaCBoZWVscywgc3RyZXRjaCBwYW50cyBhbmQgYSB3aGl0ZSBBZGlkYXMgamFja2V0IGR1cmluZyB0aGUgYXNzYXVsdCwgcG9saWNlIHNhaWQuCkhvdyBtYW55IGdyYW1teWhhcyBMYWR5IEdhZ2EKQnVyZ295bmUgYWNrbm93bGVkZ2VzIHRoZXJlIGFyZSBwbGVudHkgb2YgbW9tIGFuZHBvcCBzdGFydHVwcyB0cnlpbmcgdG8gY29tcGV0ZSB3aXRoIEZyb2dib3gsIGJ1dCBtYWludGFpbnMgaXQgaGFyZGVyIGZvciBzbWFsbCBvcGVyYXRvcnMgdG8gcHJvdmlkZSBwcm9wZXIgY3VzdG9tZXIgc2VydmljZS4gVGhlIGNvc3Qgb2YgcmVudGluZyBib3hlcyBpcyBhYm91dCB0aGUgc2FtZSBhcyBwdXJjaGFzaW5nIGNhcmRib2FyZCBib3hlcyBhbmQgaW5jbHVkZXMgcGljayB1cCBhbmQgZGVsaXZlcnkuIFNpbmNlIEZyb2dib3ggaXMgYWJvdXQgc2VsbGluZyBjb252ZW5pZW5jZSBhbmQgcmVsaWV2aW5nIHRoZSBzdHJlc3Mgb2YgbW92aW5nLCBleHBhbnNpb24gb25seSBpbmNyZWFzZXMgdGhlIGNvbnZlbmllbmNlZmFjdG9yYmVjYXVzZSB0aGUgYm94ZXMgY2FuIG5vdyBtb3ZlIGFyb3VuZCBmcm9tIGNlbnRyZSB0byBjZW50cmUuCkFueXdheSwgSSBkb24ga25vdyBob3cgbXVjaCBhbnkgb2YgdGhpcyBtYXR0ZXJzIHdpdGhvdXQgbGVhcm5pbmcgZnVuZGFtZW50YWxzIGZpcnN0LiBXaGljaCBUR00gaXMgd2hhdCBtYWpvcml0eSBvZiBwZW9wbGUgcmVjb21tZW5kIG90aGVyIG9wdGlvbiB3b3VsZCBiZSB0byB0YWtlIG9uZSBvZiB0aGUgb25saW5lIGNvdXJzZXMuIEkga25vdyBSZWQgQ2hpcCBpcyBjaGVhcGVyIGFuZCBoYXMgYSBjb3JlIHRyYWluaW5nIHRoYXQgSSBiZWVuIHRoaW5raW5nIGFib3V0IGRvaW5nIGFzIGEgbmV3YmllIG15c2VsZi4uIApJZiBQcmVzaWRlbnQgVHJ1bXAgcGxhbnMgdG8gaW52b2tlIGV4ZWN1dGl2ZSBwcml2aWxlZ2UgdG8gcHJldmVudCB5b3UgZnJvbSBhbnN3ZXJpbmcgYW55IG9mIHRoZXNlIHF1ZXN0aW9ucywgSSBhc2sgdGhhdCB5b3Ugbm90aWZ5IHRoZSBDb21taXR0ZWUgaW4gd3JpdGluZyBubyBsYXRlciB0aGFuIDQ4IGhvdXJzIGluIGFkdmFuY2Ugb2YgdGhlIGhlYXJpbmc6LiAKSSBqdXN0IG5lZWRlZCBhbiB1bWJyZWxsYSB0aGVyZSB3YXMgbXVsdGlwbGUgYmVhciBzZWxsZXIgY2hpbmVzZSBvbmVzIGZvciAkMTkuOTkgd2l0aCBob25lc3RseSAxMCwwMDAgcmV2aWV3cyAuIGtlZXAgbG9va2luZyB0aGVyZSBhcmUgYnJhbmQgbmFtZXMgbGlrZSB0b3RlcyB3aXRoIHdhcnJhbnRpZXMgdGhhdCBiZWVuIGFyb3VuZCBmb3IgZXZlciBmb3IgdGhlIHNhbWUgcHJpY2UoIGdpdmUgb3IgdGFrZSAkMSkgdGhhdCBoYXZlIGxpa2UgNDAgcmV2aWV3cyBwcm9iYWJseSBhZnRlciBiZWluZyBsaXN0ZWQgZm9yIGdvZCBrbm93cyBob3cgbWFueSB5ZWFycyAuIFdoeSB3b3VsZCBhbnlvbmUgbGVhdmUgYW4gaG9uZXN0IHJldmlldyBvbiBzdWNoIGEgc2hpdHR5IGJyYW5kZWQgaXRlbSAuCkluIGp1c3QgYSBmZXcgbW9udGhzIHlvdXIgaWRlbnRpdHkgd2lsbCBiZWNvbWUgYm91bmQgdXAgaW4geW91ciBzeXN0ZW1zL2hhYml0cy4gCkxvbWkgTG9taSBjb3VsZCBsb29rIGxpa2UgYSBjcmVhdGl2ZSBHU00uLiAKUG91aSBzYSB6byBza3Nlbm9zdCBkcnVoY2guIE1ub2ggdWRpYSB6aXN1aiwgZSBqZSB0byBvdmVhIGplZG5vZHVjaGllIG5hdWkgc2Egc3Bydm51IHRlY2huaWt1IG9kIHRjaCwga3RvciBtYWogdSB6dmxkbGkgcG9ydC4gUG90cGFuaWUgamUgenJ1bm9zIGEgb3N0YXRuIExvdmNpIHBva2xhZG92IHMgc3Bva29qbiBhIGhyZCBuYSB0bywgcG9kZWxpIHNhIG8gc3ZvamUgc2tzZW5vc3RpLiBMb3ZjaSBwb2tsYWRvdiBzIHByaWF0ZXNrIHVkOyB2eXBvdSwga2xzIG90emt5IGEgcG96b3JuZSBzbGVkb3ZhIG5pZWtvaG8sIGt0byBtIHNrc2Vub3N0aS4gU2tvbnRyb2x1anRlIG9rb2xpZSB2byB2YWVqIG1pZXN0bmVqIG9ibGFzdGkgcHJlIGtvdm92IG9kaGFvdmFuaWUgYWxlYm8gcG9rbGFkIHBvb3ZuY2t5IGtsdWIgYWxlYm8gc2t1cGluYS4gQnVkZXRlIHVpIG92ZWEgdmlhYyBhIHYga3JhdG9tIGFzZSBvZCBvc3RhdG5jaCBsZW5vdiwgYWtvIHZtIGJ1ZGUgcyBkbyB0byBzbS4gViB6dmlzbG9zdGkgb2QgdW1pZXN0bmVuaWEgYWxlYm8gdGVybnUgY2hjZXRlIGxvdmksIGplIGFzdG8gamVkbm9kdWNoaWUgYSBiZXpwZW5lamllIGsgbG92dSBzbyBza3VwaW5vdSwgc2tyIG5lIHNhbWkuIEFrIGhhZHRlIHJ5b3ZhbmllIGthbWFydG9tLCBzdHJldG5ldGUgdmVhIHNrdmVsY2ggdWQsIGt0b3IgemRpZWFqIHZobyB6dWptdS4KSXQgd2lsbCBiZSBhdHRlbmRlZCBieSBwdXBpbHMgZnJvbSBOb3J0aGVybiBSaXZlcnMgSGlnaCBTY2hvb2xzLiBJIHJlY2VudGx5IGJsb2dnZWQgaW5jb3JyZWN0IGluZm9ybWF0aW9uIHRoYXQgU2FyYWggaGFkIGJlZW4gc3Rvb2QgZG93biBmcm9tIHRoZSByb2xlLCBhbmQgdGhlIG90aGVycyBoYWQgYmVlbiBjYW5uZWQuIApIYXZlIHlvdSBldmVyIG5pcHBlZCBvdXQgdG8gR3JlZ2dzIGZvciBhIHNhdXNhZ2Ugcm9sbCBhbmQgdGhvdWdodCB5b3UgbmVlZGVkIHRvIHRlbGwgZXZlcnlvbmUgYWJvdXQgaXQgb24gVHJpcEFkdmlzb3IgICBvciwgaW5kZWVkLCBHb29nbGU/Ck1vc3QgaGlrZXJzIGhhdmUgb3B0ZWQgZm9yIHRyYWlsIHJ1bm5pbmcgc2hvZXMgd2l0aCB0aGUgaWRlYSB0aGF0IHRoZXlsbCB3YWxrIHRoZWlyIGZlZXQgZHJ5IChpbSBvbmUgb2YgdGhlbSkuIApTbywgZm9yIGV4YW1wbGUsIGlmIHNvbWVvbmUgaGFzIGEgaGVhcnQgYXR0YWNrIHRoZWlyIGJsb29kIHZlc3NlbCB0aGF0IHN1cHBsaWVzIHRoZSBoZWFydCBnZXRzIGNsb2dnZWQgb2ZmLiBMYWNrIG9mIGJsb29kIGZsb3cgPSBsYWNrIG9mIG94eWdlbi4gCkEgcmlnaWQgYW5kIGV4dHJlbWUgaW5zaXN0ZW5jZSB0aGF0IHRoZSBsaW5lIGJldHdlZW4gbWVuIGFuZCB3b21lbiBpcyBjbGVhcj8gQXR0YWNrcyBvbiB3b21lbiB3aG8gYXJlICJ0b28gZ29vZCB0byBiZSBnaXJscyI/IE9yIGEgc3BhY2UgdG8gcHVzaCB0aGUgaHVtYW4gYm9keSwgcmVnYXJkbGVzcyBvZiBpdHMgZ2VuZGVyLCBzZXh1YWxpdHksIHJhY2UsIGNocm9tb3NvbWFsIG1ha2UgdXAsIG9yIGV2ZW4gYXR0cmFjdGl2ZW5lc3MgIHRvIHRoZSBsaW1pdHMgb2YgaHVtYW4gZmxlc2guLiAKVGhlIFNwYUZpbmRlciBXZWxsbmVzcyBnaWZ0IGNhcmQgY2FuIGJlIHVzZWQgYXQgbW9yZSB0aGFuIDIwLDAwMCBwYXJ0aWNpcGF0aW5nIGZhY2lsaXRpZXMgc3BhcywgbWVkaWNhbCBzcGFzLCB5b2dhLCBwaWxhdGVzIG9yIGZpdG5lc3Mgc3R1ZGlvcywgaG90ZWxzIGFuZCByZXNvcnRzIHdvcmxkd2lkZSwgaW5jbHVkaW5nIDIsMDAwIGluIENhbmFkYSBhbG9uZS4gRXN0YWJsaXNobWVudHMgd2l0aCBtYW5seSB0cmVhdG1lbnRzIGluY2x1ZGU6CjUwIGcgZGUgZmFyaW5lIGRlIGJsCiJJIGp1c3QgZmVlbCB0aGVyZSBtdXN0IGJlIGEgd2hvbGUgYnVuY2ggb2Ygb3RoZXIgcGVvcGxlIGluIG15IHNpdHVhdGlvbi4iCldoYXQgaGFwcGVuZWQgd2FzIHRoZSBzZWN0b3BvZCB3ZW50IGFoZWFkIGFuZCBkZXN0cm95ZWQgbXkgYWxsb3kgc2hpdiAod2l0aCAyOSBocCkgaW4gMiBvdmVyd2F0Y2ggc2hvdHMsIHdoaWNoIGhhcHBlbmVkIG9uIHRoZSBzYW1lIHR1cm4uIEFmdGVyIHRoYXQsIEkgcG9zaXRpb25lZCBteSBnb2xpYXRoIGNsb3NlciB0byBteSB0ZWFtIGFuZCB0b3NzZWQgc21va2Ugb250byBpdCwgaG9waW5nIGhlIHdvdWxkIHRhbmsgbW9zdCBvZiB0aGUgc2hvdHMuIApQbGVhc2UgdW5kZXJzdGFuZCBJIG15c2VsZiBhbSBub3QgYW50aSB2YXh4LiAKRE9OIElmIHlvdSBnb3QgdG9wIHBhaXIsIG9yIGJldHRlciwgYW4gT0VTRCwgb3IgYSBmbHVzaCBkcmF3LCBzdXJlLCB0aHJvdyBhIGJldCBhdCBpdC4gT3RoZXJ3aXNlLCBuby4uIApJIHdvdWxkIHByb2JhYmx5IGdvIGEgYml0IGhpZ2hlciBhbmQgZ2V0IGEgYmV0dGVyIHN0YXJ0aW5nIGNhcjsgYSBsb3Qgb2YgdGhlc2UgYXJlIHByZXR0eSBnYXJiYWdlLiAKQWxzbywgaWYgeW91IHBpY2sgNDkgY2FyZHMgd2l0aG91dCByZXBsYWNlbWVudCwgdGhlIHByb2JhYmlsaXR5IGlzIDEuIApTb2ZvcnQgcGVyIERvd25sb2FkIGxpZWZlcmJhci4gCkR1ZGUsIHlvdSBzdW1tZWQgdXAgbXkgdGhvdWdodHMgc28gbXVjaCBiZXR0ZXIgdGhhbiBJIGNvdWxkLiBNeSBtb3RoZXIgaG9hcmRpbmcgaGFiaXRzIGFyZSBhIEhVR0UgYXJlYSBvZiBjb250ZW50aW9uIGZvciBteSB3aG9sZSBmYW1pbHksIGFuZCBubyBvbmUgaXMgZXZlciBhbGxvd2VkIHRvIHNheSBhbnl0aGluZyBmb3IgZmVhciBvZiB1cHNldHRpbmcgaGVyLiBBbmQgb2YgY291cnNlLCBpZiB3ZSB1cHNldCBoZXIsIHNoZWxsIG9ubHkgZ2V0IHdvcnNlLiAKU28sIGhlcmUgaXMgdGhlIGJlZ2lubmluZyBvZiBhIG5ldyBsaWZlIGFuZCB0aGUgYmVnaW5uaW5nIG9mIGEgeWVhciBsb25nIGNlbGVicmF0aW9uIHRoYXQgSSB3aWxsIGJlIGhhdmluZyBmb3IgbXkgc2VsZi4gSW4gdGhlIHN1bW1lciBJIHdpbGwgdGhyb3cgYSBjaXRpemVuc2hpcCBwYXJ0eSEKV2h5IHlvdSBzdWRkZW50bHkgYmVhdCBhbiBvcHBvbmVudCB3aG8geW91IGJlZW4gcGxheWluZyBtYW55IHRpbWVzPyBNaWdodCBoYXZlIHNldmVyYWwgcmVhc29ucy4gSWYgeW91IHN0YXJ0ZWQgdG8gYmVhdCBoaW0gc2V2ZXJhbCBnYW1lcyBpbiBhIHJvdywgeW91IGhhdmUgbW9zdCBsaWtlbHkgYmVjb21lIHN0cm9uZ2VyLiBJZiB5b3UganVzdCBoYXBwZW5lZCB0byB3aW4gb25lIG91dCBvZiA1MCBhbmQgYXJlIGdvaW5nIHRvIGxvc2UgdGhlIG5leHQgNTAsIGl0IGp1c3QgbHVjayBvciB5b3VyIG9wcG9uZW50IHBsYXlpbmcgc29tZSByaXNreSBzdHVmZiBmb3IgZnVuLiBJIGxvc3Qgc28gbWFueSBnYW1lcyBvbmxpbmUgYWdhaW5zdCBwbGF5ZXJzIHdobyB3b3VsZCBoYXJkbHkgd2luIG9uZSBvdXQgb2YgMjAwIGdhbWVzIGlmIHdlIHBsYXllZCBmb3Igc2VyaW91cyByZWFzb25zLCBqdXN0IGJlY2F1c2UgSSB3ZW50IGZvciB0aGUgZnVuL2JlYXV0aWZ1bCBtb3ZlcyBpbnN0ZWFkIG9mIHRoZSBzYWZlIG1vdmVzLiBJZiB5b3UgY2FuIHdpbiwgaXQgbm90IHJlYWxseSBhICJnYW1lIiBpcyBpdD8uClByZSBCbGFjayBGcmlkYXkgSSB3YXMgZXNzZW50aWFsbHkgYSByYWtlYmFjayBwcm8uIE1hZGUgdG9ucyBvZiBtb25leSBncmluZGluZyByYWtlYmFjayBvbiBSdXNoIHRhYmxlcyBhbmQgMTYgdGFibGluZyBTdXBlciBUdXJib3MuIApJdCBub3QgdGhhdCB0aGUgZmV0dXMgd2FzIGV2ZXIgaW5ub2NlbnQuIFRvIG1vZGVybml0eSwgQ2hyaXN0aWFuaXR5IHNhdyB0aGUgZmV0dXMgYXMgYmF0aGVkIGluIHNpbi4gCkJ1c2luZXNzIFBhcnRuZXJzLiBXZSBtYXkgYWxzbyBzaGFyZSB5b3VyIGluZm9ybWF0aW9uIHdpdGggYnVzaW5lc3MgcGFydG5lcnMgdG8gcHJvdmlkZSB5b3Ugd2l0aCBzZXJ2aWNlcyB0aGF0IHlvdSByZXF1ZXN0LiBGb3IgZXhhbXBsZSwgaWYgeW91IHNpZ24gdXAgZm9yIGEgcHJvbW90aW9uIHRoYXQgcnVucyBvbiBvdXIgU2VydmljZXMgYnV0IHRoYXQgaXMgc3BvbnNvcmVkIG9yIGNvIHNwb25zb3JlZCBieSBhbm90aGVyIGNvbXBhbnksIHlvdXIgaW5mb3JtYXRpb24gbWF5IGJlIHNoYXJlZCB3aXRoIHRoYXQgc3BvbnNvci4gVGhlIFdhc2hpbmd0b24gUG9zdCBpcyBub3QgcmVzcG9uc2libGUgZm9yIHRoZSBwcml2YWN5IHByYWN0aWNlcyBvZiB0aGVzZSBlbnRpdGllcy4KSWYgeW91IHdpc2ggdG8gcmVxdWVzdCBpbmZvcm1hdGlvbiBmcm9tIHRoZSBVbml2ZXJzaXR5IHBsZWFzZSB2aXNpdCBvdXIgYWNjZXNzaW5nIGluZm9ybWF0aW9uIHBhZ2VzLgpOZXcgcHJvZ3JhbXMgdG8gZGlzY291cmFnZSB1bmRlciBhZ2UgZ2FtYmxpbmcgYXJlIGJlaW5nIHBhaWQgZm9yIGFuZCBpbXBsZW1lbnRlZCBieSB0aGUgaW5kdXMgIHN0dWRpZXMgb24gY29tcHVsc2l2ZSBnYW0gIHBhcnRpY3VsYXJseSBhbW9uZyB1bmRlciAgYWdlIGFyZSBiZWluZyBjb25kdWN0ZWQgdGhyb3VnaCBmcm9tIGluZHVzdHJ5LiAKSSdtIHNleHksIEknbSBob3QuIEkgaGF2ZSBib3RoIGEgcG9vbiBhbmQgYSBwZWVuZXIuIApUaGUgbWFya2V0IGRvZXMgbm90IHNvbHZlIGV2ZXJ5dGhpbmcuIApTeWVkIEhhaWRlciwgYSAyMyB5ZWFyIG9sZCBzdHVkZW50IGFuZCBhIGxvY2FsIFViZXIgZHJpdmVyLCB3YXJucyBtZSBhYm91dCB0aGUgInpvbWJpZXMiLiAKSGVyZSBhIHJhbmRvbSBoaXN0b3J5IG9mIGEgY29udmVudCBpbiBNYWx0YS4gVGhlIHJlbGF0aW9uc2hpcCBiZXR3ZWVuICJudW4sIiAicHJvc3RpdHV0ZSwiIGFuZCAiaW5jYXJjZXJhdGVkIHdvbWFuIHdobyB3YXMgbm90IGZyZWUgdG8gc2F5IG5vIHRvIGEgcG93ZXJmdWwgYmlzaG9wIiB3YXMgdmVyeSwgdmVyeSBibHVycnkuCkNvbXBhcmUgaW4gYnJhY2tldHMgcmF0aGVyIHRoYW4gbG90IGFuZCBvciBsZXNzIG1heSBoYXZlIG1pc3VuZGVyc3Rvb2QgdGhvdWdoIEkganVzdCB3b2tlIHVwIC86LiAKVGhlIGVxdWFsIHBheSB0aGluZyBpcyBzb21ldGhpbmcgbW9zdCBwZW9wbGUgY2FuIGFncmVlIG9uLCBidXQgSSB3b3VsZCBhZGQgb25lIGNhdmVhdCB0byAiZXF1YWwgcGF5IGZvciB0aGUgc2FtZSBqb2JzLiIgTGV0cyBjb21wbGV0ZWx5IGlnbm9yZSBnZW5kZXIgYW5kIGp1c3QgbG9vayBhdCB0aGUgaHVtYW4gYW5kIHRoZSBqb2IuIFNheSB0d28gcGVvcGxlIGRvIHRoZSBzYW1lIGpvYiwgYnV0IG9uZSBwZXJzb24gZG9lcyBpdCBiZXR0ZXIgdGhhbiB0aGUgb3RoZXIuIFdvdWxkIGl0IG5vdCBtYWtlIHNlbnNlIGZvciB0aGUgcGVyc29uIHdobyBkb2VzIGEgYmV0dGVyIGpvYiB0byBiZSBwYWlkIG1vcmUgYW5kIGdpdmVuIG1vcmUgb3Bwb3J0dW5pdHkgdG8gYWR2YW5jZT8KQWJvdXQgNDAlIG9mIFRyYWRlbWFyayBzYWxlcyB0aGlzIHllYXIgd2lsbCBjb21lIGZyb20gc2FsZXMgb2YgcG9rZXIgY2hpcHMgYW5kIHJlbGF0ZWQgaXRlbXMgZm9yIHRoZSBob21lIHJlY3JlYXRpb24gbWFya2V0LCBNci4gU3VzdGFyIGVzdGltYXRlcy4gCllvdSBzb21ld2hhdCBpbnRyaWd1ZWQgYnkgdGhlIGlkZWEgb2YgYmVpbmcgaGVhcmQgYW5kIHNlZW4gaW4gcHJvdm9jYXRpdmUgd2F5cyB0aGVuIHlvdSBtYXkgd2FudCB0byBleHBlcmltZW50IHdpdGggdGhlIHByYWN0aWNlLiBUaGVyZSBhcmUgd2F5cyB0byBtYWtlIGl0IHNhZmVyLCBsaWtlIGdvaW5nIHRvIGNsdWJzIHRoYXQgc3BlY2lhbGl6ZSBpbiBleGhpYml0aW9uaXNtIGFuZCB2b3lldXJpc20uIFRoZSBnb29kIG9uZXMgaGF2ZSB2ZXJ5IHN0cmljdCBydWxlcyBhYm91dCB3aGF0IGNhbiBiZSBkb25lIHdoZXJlLCB3aG8gY2FuIHBhcnRpY2lwYXRlIG9yIHdobyBjYW4ganVzdCB3YXRjaCwgb3Igd2hvIGhhcyBubyBhY2Nlc3MgYXQgYWxsIHRvIHNvbWVvbmUgcGxheSBidXQgYXJlIHN0aWxsIGNsb3NlIGJ5LiAKVW5lIGZvaXMgY2UgcmVwYXMgZGNpZCwgb3V0cmUgbGUgcG91bGV0IHRhbmRvb3JpLCBxdSdhbGxhaXMgamUgY3Vpc2luZXIgPyBKZSBuZSBjb25uYWlzIHBhcyBncmFuZCBjaG9zZSAgbGEgY3Vpc2luZSBpbmRpZW5uZSBldCBzaSBqZSBsJ2FwcHJjaWUgYXUgcmVzdGF1cmFudCwgamUgbmUgc3VpcyBwYXMgdHJzIGF1IGZhaXQgZGVzIGRpZmZyZW50ZXMgY3Vpc2luZXMgcXVpIHRyYXZlcnNlbnQgbGUgcGF5cywgZGVzIGFjY29yZHMgZW50cmUgbGVzIG1ldHMuIEonYWkgZGNpZCBkZSBuJ2VuIGZhaXJlIHF1JyBtYSB0dGUsIGF2ZWMgcGx1c2lldXJzIHBldGl0cyBwbGF0cywgZXQgcmllbiBkZSB0cm9wIGNvbXBsaXF1LiBFdCBqJ2FpIGNoZXJjaCBxdWVscXVlcyByZXNzb3VyY2VzIHN1ciBsZSBzaXRlIEJlZW5kaGkgZGUgQmVlbmEuLiAKV2h5IGRvIHlvdSBhZ3JlZSB0byBzZWUgdGhpcyBsYWR5IGF0IGFsbD8gU2hlIHNlZW1zIGhvcnJpYmxlISBJZiB5b3Ugd2FudCB0byByZWFkIHVwIG1vcmUgb24gYm91bmRhcmllcyBhbmQgcHJvdGVjdGluZyB5b3Vyc2VsZi95b3VyIGZhbWlseSBhbmQgdGhlIEdDL1NHIGR5bmFtaWNzIGNyZWF0ZWQgYnkgbmFyY3MsIGNoZWNrIG91dCB0aGUgc2lkZWJhciBvdmVyIGF0IHIvSlVTVE5PTUlMLgpTYW0gRGF3c29uLCBkaXJlY3RvciBvZiB0aGUgUG9rZXJTdGFycyB3ZWJzaXRlcyB0aGF0IGFyZSBzcG9uc29yaW5nIFR1ZXNkYXkgJDEgbWlsbGlvbiB0b3VybmFtZW50IGF0IFN0YXIgQ2l0eSwgd2hlcmUgTGV2eSB3aWxsIGRlZmVuZCBoaXMgdGl0bGUsIHNheXMgaGUgaXMgY2xvc2UgdG8gc2lnbmluZyBBbWVyaWNhbiBzd2ltbWVyIE1pY2hhZWwgUGhlbHBzIGFuZCBBbGwgQmxhY2sgRGFuaWVsIENhcnRlciwgd2hvIGhhdmUgZXhwcmVzc2VkIGludGVyZXN0IGluIGJlY29taW5nIHByb3MuIApUaGUgUmFwdG9ycyBoYXZlIHRoZSBzY2hlZHVsZSBvbiB0aGVpciBzaWRlIHRoZSByZXN0IG9mIHRoZSB3YXkuIFR1ZXNkYXkncyBnYW1lIHdhcyBvbmUgb2YgdGhyZWUgZ2FtZXMgcmVtYWluaW5nIGluIHRoZSByZWd1bGFyIHNlYXNvbiBhZ2FpbnN0IHRlYW1zIHRoYXQgaGF2ZSBhIHdpbm5pbmcgcmVjb3JkLCB0aGUgZmV3ZXN0IG9mIGFueSB0ZWFtIGluIHRoZSBsZWFndWUuIFRoZXkgZmFjZSBPa2xhaG9tYSBDaXR5IGluIGEgaG9tZSBhbmQgaG9tZSBzZXJpZXMgbGF0ZXIgdGhpcyBtb250aC4uIApFZGl0OiBGV0lXIEkgcGx1Z2dlZCBpdCBpbnRvIGEgc29sdmVyIGFuZCB0aGlzIGlzIHdoYXQgaXQgc3VnZ2VzdGVkLiBISiAxMDAgQkIgZGVlcC4gClRvIGFkdmVydGlzZSwgbGVhdmUgZmx5ZXJzIGFuZCBwb3N0ZXJzIGF0IGJpa2VyIGJhcnMsIGJpa2VyIGV2ZW50cyBhbmQgbW90b3JjeWNsZSBzaG9wcyBpbiB5b3VyIGFyZWEuIElmIHlvdSBhcmUgbG9va2luZyBmb3IgYSBiaWcgY3Jvd2QsIHJ1biBhbiBhZCBvbiBhIGxvY2FsIFJhZGlvIFN0YXRpb24sIHRoaXMgd2lsbCBjb3N0IHlvdSBzb21lIHVwZnJvbnQgbW9uZXkgYnV0IHlvdSBjYW4gZ2V0IHRoZSBtZXNzYWdlIHRvIGFsbG90IG9mIHBlb3BsZS4gQWxzbyBpZiB5b3UncmUgaW50byB0aGUgaW50ZXJuZXQgdGhpbmcsIHlvdSBjYW4gcnVuIGEgQmFubmVyIEFkIGFkdmVydGlzZW1lbnQgb24gcmVsZXZhbnQgd2Vic2l0ZXMuIApHcmVhdCBqb2IgUmljaGFyZC4gRm9yIHRob3NlIHdhbnRpbmcgdG8gZGViYXRjaCB1c2luZyB0aGUgWG1sUG9sbGluZyBtZWNoYW5pc20gb2YgdGhlIFdDRiBTUUwgYWRhcHRlciwgaXQgd2lsbCBub3QgYmUgYXMgc2ltcGxlLiBZb3Ugd2lsbCBwcm9iYWJseSBlbmQgdXAgcmVzb3J0aW5nIHRvIHRoZSBkZWJhdGNoaW5nIG1ldGhvZCBvZiB0aGUgbmF0aXZlIFNRTCBhZGFwdGVyIG1lYW5pbmcgeW91IGhhdmUgdG8gY3JlYXRlIGEgc2Vjb25kIHNjaGVtYSBmb3IgdGhlIGJvZHkgdG8gdGhlIGRlYmF0Y2hlZCByZWNvcmQgb2YgdGhlIGVudmVsb3BlLgpXaXRoIGl0cyBmaW5hbmNpYWwgc3RhYmlsaXR5LCB0aGUgbWVkaXVtIHNpemVkIE9hayBGbGF0cyBjbHViIGhhZCBubyBoZXNpdGF0aW9uIGluIGFtYWxnYW1hdGluZyB3aXRoIHN0cnVnZ2xpbmcgSWxsYXdhcnJhIFlhY2h0IENsdWIgZWFybGllciB0aGlzIHllYXIuIApJdCBpcyBjZXJ0YWlubHkgYSBwb3NpdGlvbiBJJ20gZ3JhdGVmdWwgdG8gaGF2ZSwgdGhhdCBraW5kIG9mIGluZmx1ZW5jZS4gClllcywgaXQgaXMgbW9zdCBkZWZpbml0ZWx5IHRydWUgdGhhdCB0aGUgMTAwIFBhdWxzb24gUGhhcm9haHMgQ2x1YiBQb2tlciBDaGlwIFNldCByZW1haW5zIG9uZSBvZiB0aGUgYmVzdCBjaGlwcyBzZXRzIG9uIHRoZSBtYXJrZXQuIFdoeSBub3QgbG9vayBpbnRvIGl0IGlmIHlvdSBhcmUgaW4gdGhlIG1hcmtldCBmb3IgcHVyY2hhc2luZyBjaGlwcz8KUmVwbGFjZW1lbnQgb2YgdGhlIHVuaXQgaXMgYWJvdXQgYSB0ZW4gbWludXRlIGpvYiBpZiB5b3UgbmV2ZXIgZG9uZSBpdCBiZWZvcmU7IHRocmVlIG1pbnV0ZXMgaWYgeW91IGhhdmUuIEZsaXAgdGhlIGNvbXB1dGVyLCB1bmRvIGEgaGFsZiBkb3plbiBvciBzbyBjYXNlIHNjcmV3cywgdGFrZSB0aGUgYmFzZSBvZmYsIHVucGx1ZyB0aGUgZXhpc3RpbmcgcG93ZXIgc3VwcGx5LCByZW1vdmUgZm91ciBhdHRhY2hpbmcgc2NyZXdzLCB0aGVuIHJldmVyc2UgdGhlIHByb2Nlc3Mgd2l0aCB0aGUgbmV3IHVuaXQuLiAKQmFua3Mgc2hvdHQgdGhyZWUgRHVja3MgYXQgb25lIHNob3R0LCB3aGljaCBzdXJwcmlzZWQgdGhlbSBzbyBtdWNoIHRoYXQgbW9zdCBvZiB0aGVtIGZlbGwgZG93biBhcyB0aG91Z2ggdGhleSBoYWQgYmVlbiBzaG90dCBsaWtld2lzZS4gCkF0IHRoZSBzYW1lIHRpbWUsIGEgbGVmdGlzdCBjcml0aXF1ZSBtaWdodCB0aGluayBhYm91dCBwb3dlciBzdHJ1Y3R1cmVzIHJhdGhlciB0aGFuIHByb3BlcnR5IHJpZ2h0cy4gVGhlIGVmZmVjdGl2ZSBtb25vcG9saWVzIG9mIGNvbXBhbmllcyBsaWtlIFZhbHZlLCBGYWNlYm9vaywgYW5kIEdvb2dsZSBnaXZlIHRoZW0gZW5vcm1vdXMgcG93ZXIgb3ZlciBzb2NpZXR5LiBXZSBjaGVlciB3aGVuIHRoZXkgdXNlIHRoYXQgcG93ZXIgdG8gc2h1dCBkb3duIG1vcmFsbHkgcmVwcmVoZW5zaWJsZSBjb250ZW50LCBidXQgdGhlaXIgcG9zaXRpb24gaW4gc29jaWV0eSBjb3VsZCBlYXNpbHkgYmUgdXNlZCBhZ2FpbnN0IHVzIGluIGEgbW9yZSBkaXJlY3Qgd2F5IHRoYW4gaXQgYWxyZWFkeSBoYXMuClRoZXJlIGFyZSBtdWNoIHNhZmVyIGFsdGVybmF0aXZlcywgYW5kIHRvcm1lbnRpbmcgbWlnaHQgYmUgdGhlIG9ubHkgc29sdXRpb24uIEN1cnJlbnQgV2VhdGhlciBDb25kaXRpb25zIGluIENhcGUgVG93biAgIFNvdXRoIEFmcmljYS4gNDggSG91ciAgIDcgRGF5IEZvcmVjYXN0cyBhbmQgUmVwb3J0cy4gSGlzdG9yaWNhbCBDbGltYXRlIERldGFpbCBhbmQgV2VhdGhlciBBZHZpc29yeSBTZXJ2aWNlIGZvci4gb24gb3JkZXJzIG92ZXIgJDI1b3IgZ2V0IEZSRUUgVHdvIERheSBTaGlwcGluZyB3aXRoIEFtYXpvbiBQcmltZSAuIAoodXN1YWxseSBvbiBhIHdlZWtlbmQgd2Ugd2lsbCBncmFiIGEgc2FuZHdpY2ggd2hlbiB3ZSBhcmUgb3V0IHJ1bm5pbmcgZXJyYW5kcyBhbmQvb3IgZWF0IG91dCBvbiBhIEZyaWRheSBuaWdodCkuLiAKUGF0cyBuZXZlciBoaXQgYSBncm9vdmUgaW4gdGhlIHNlY29uZCBoYWxmIGFuZCBsZXQgdGhlIGV4cGxvc2l2ZSBCcm9uY29zIGV4cGxvZGUgYWxsIG92ZXIgdGhlbSBhbGwgbmlnaHQgbG9uZy4gCkthbG0gaGFzIHByZXZpb3VzbHkgc2FpZCB0aGUgbmV3IHJ1bGVzIHdlcmUgbWVhbnQgdG8gYWRkcmVzcyBpc3N1ZXMgb2YgZ2FtaW5nIHZpb2xhdGlvbnMsIHZpb2xlbmNlIGFuZCBvdGhlciBwcm9ibGVtcyBhdCBzb21lIHBlcm1hbmVudCBwb2tlciByb29tcy4uIAoiVGhpcyBpcyB2ZXJ5IHNjYXJ5LiBJIHJlYWxseSBob3BlIHlvdSB0YWtlIHRoaXMgc2VyaW91c2x5LCBiZWNhdXNlIEkgZGVzZXJ2ZSBwZWFjZSBvZiBtaW5kIGFzIHBhcnQgb2YgdGhpcyBjb21tdW5pdHkuIi4uIApUaGUgbmljZSB0aGluZyBhYm91dCBoYXZpbmcgZGlzcG9zYWJsZSBpbmNvbWUgKG5vIGtpZHMsIGEgaG91c2UgdGhhdCdzIHBhaWQgb2ZmLCBhbmQgYSB3ZWxsIHBheWluZyBqb2IpIGlzIHRoYXQgeW91IGNhbiBtYWtlIGEgd2Vla2x5IHRyaXAgdG8gdGhlIGJhZ2VsIGRlbGkgYW5kIGdldCBmcnVpdCwgdmVnZ2llcywgYmFnZWxzLCBhbGwgcHJvdGVpbiBJIGNvdWxkIGNhcnJ5LCBhbmQgd2hhdCBmZWx0IGxpa2UgMTAwIHBvdW5kcyBvZiBzbyB0aGF0IEkgY291bGQgZmVlZCB0aGUgd2hvbGUgY2xhc3MuIEFsbCB0aGF0IGluIHRoZSBuYW1lIG9mIHRyeWluZyB0byBmZWVkIGEgeW91bmcgZ2lybCBmcm9tIGEgZmFtaWx5IG9mIGxpbWl0ZWQgbWVhbnMsc28gc2hlIGVhdCBtb3JlIGZyZXF1ZW50bHkgdGhhbiBldmVyeSBzaXggaG91cnMgYWZ0ZXIgYSBncnVlbGluZyBzd2ltIHByYWN0aWNlLgpXZWlnaHQgZHJpdmVzIHlvdXIgaGVhZCBmdXJ0aGVyIGludG8gdGhlIHNub3csIGZydXN0cmF0ZWQgYWJ1c2UgbXVmZmxlZCBieSBmcm96ZW4gZ3Jhc3MuIApFdmVyeSA0IGRheXMgaW4gQW1lcmljYW4gbW9yZSBibGFjayBjaGlsZHJlbiBhcmUga2lsbGVkIHRocm91Z2ggYWJvcnRpb24gdGhhbiB0aGUgS0tLIGtpbGxlZCBpbiAxNDQgeWVhcnMuIGxlYWRzIHRoZSBjb3VudHJ5IGluIHRoZSBudW1iZXIgb2YgcmVwb3J0ZWQgYWJvcnRpb25zIHBlcmZvcm1lZCBvbiBibGFjayB3b21lbiwgMTgsOTAxIGluIDIwMDggYWxvbmUuCk5vdGUgd29ydGggYWRkaW5nOiB0aGUgb25seSB0eXBlIG9mIHNvY2lhbGlzbSB0aGF0IGhhcyBldmVyIHJlYWxseSBiZWVuIHRyaWVkIG9uIGEgbWFzcyBzY2FsZSBpcyBNYXJ4aXNtIExlbmluaXNtIGFuZCBpdCdzIHZhcmlhbnRzLCBzbyB0aGUgc3RhdGVtZW50IHRoYXQgInNvY2lhbGlzbSB3aWxsIG5ldmVyIHdvcmssIGxvb2sgaG93IGl0IHBsYXllZCBvdXQgaW4gdGhlIHBhc3QiIGlzIHZlcnkgZm9vbGlzaC4gCkZvciB0aGUgMjAwMCBQcmVzaWRlbnRpYWwgY2FtcGFpZ24sIE1zLiBGb3VuZGF0aW9uIGFuZCBNYXR0ZWwgdGVhbWVkIHVwIHRvIG1ha2UgUHJlc2lkZW50aWFsIEJhcmJpZS4gd2hhdCBraW5kYSBwbGF0Zm9ybSBjb3VsZCBCYXJiaWUgaGF2ZT8gYWxsLCBzaGUgaGFkIHRvIHN0YXkgd2l0aGluIGhlciBhc3NpZ25lZCBnZW5kZXIgcm9sZSBhbmQgbm90IG9mZmVuZCBhbnkgcG90ZW50aWFsIGNvbnN1bWVycy4gdGhlIG1pbGl0YXJ5IGluZHVzdHJpYWwgY29tcGxleD8gV2FsbCBTdHJlZXQ/IGl0LiBTbyBQcmVzaWRlbnRpYWwgQmFyYmllLCBhIHdoaXRlIGRvbGwgd2l0aCBhIHZlcnkgUHJlc2lkZW50aWFsIGJydW5ldHRlIGJvYiwgbWFkZSBwaHlzaWNhbCBmaXRuZXNzIGhlciBpc3N1ZS4KV2lraXBlZGlhIGhhcyBhIHN0cmFpZ2h0Zm9yd2FyZCBndWlkZSB0byB0aGUgcnVsZXMgb2YgY3JpYiBoZXJlLlBhcnQgb2YgdGhlIGZ1biBvZiBjcmliYmFnZSBpcyBpdHMgZXhwYW5zaXZlIGluc2lkZXIgamFyZ29uLiBUaGVyZSBpc24gc3BhY2UgaGVyZSB0byBsaXN0IGFsbCBvZiB0aGVtLCBidXQgaGVyZSBhcmUgYSBmZXcgY3JpYiB0ZXJtcyB0byBnZXQgeW91IHN0YXJ0ZWQuUG9uZTogQW4gYWJicmV2aWF0aW9uIG9mICJvcHBvbmVudCIsIHJlZmVycyB0byB0aGUgcGxheWVyIHdobyBpcyBub3QgdGhlIGRlYWxlci5DcmliL2JveC9raXR0eTogVGhlIGV4dHJhIGhhbmQgbWFkZSBvZiBkaXNjYXJkZWQgY2FyZHMgd2hpY2ggaXMgY291bnRlZCBmb3IgcG9pbnRzIGJ5IHRoZSBkZWFsZXIgZHVyaW5nIHRoZSBzaG93IHBvcnRpb24gb2YgdGhlIGhhbmQuTmluZXRlZW4gaGFuZDogSWYgc29tZW9uZSBzYXlzIHRoZXkgaGF2ZSBuaW5ldGVlbiBwb2ludHMsIHRoZXkgbWVhbiB0aGV5IGhhdmUgemVybyBwb2ludHMuIApBdCBmaXJzdCwgaXQgZGlkbid0IHJlYWxseSBtYWtlIHNlbnNlIHRvIG1lOyBidXQgdGhlbiBhIGZyaWVuZCB3aG8gaGFzIGJlZW4gcHJhY3RpY2luZyBmb3IgeWVhcnMgZW5saWdodGVuZWQgbWUgICBtaW5kZnVsIG1lZGl0YXRpb24gaGVpZ2h0ZW5zIG91ciBuYXR1cmFsIHdpc2RvbSwgYW5kIHByYWN0aWNpbmcgaXQgY2FuIGhlbHAgdXMgYmVjb21lIG1vcmUgYXdhcmUgbm90IG9ubHkgb2Ygb3VyIG93biBzZWxmLCBidXQgYWxzbyBvdXIgc3Vycm91bmRpbmdzLiAKSSBhbSBhbHJlYWR5IHdlYWsgYXQgaG9tZSBmcm9tIGFsbCB0aGVzZSBpbnNpZGlvdXMgYWxsZWdhdGlvbnMgb2YgYmVpbmcgaGFuZCBpbiBoYW5kIHdpdGggdGhlIFJ1c3NpYW5zLiBJIHdvdWxkIHJhdGhlciByZXNwb25kIG5vdyBpbiB0aGUgbW9zdCBwb3dlcmZ1bCB3YXkgdG8gc2VuZCBldmVyeW9uZSBhIG1lc3NhZ2UgdGhhdCB0aGUgVVMgd2lsbCBub3QgYmUgdGFrZW4gbGlnaHRseSBhbmQgdGhhdCwgZGVzcGl0ZSBSdXNzaWFuIHByZXNlbmNlIGluIFN5cmlhLCBJIHdpbGwgdGFrZSB0aGUgU3lyaWFucyBvbi4gClllYWgsIDVzIGFuZCAxMHMgb25seSBmcm9tIGhlcmUgb24gb3V0LiAKSWwgeSBhIGRsYXNzZW1lbnQgZXQgZGxhc3NlbWVudCBldCBwbHVzaWV1cnMgZmFvbnMgZCd5IGFjY2Rlci4uIApEYWdmYXJpICA1IHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpBbHNvIGRvbid0IGZvcmdldCB0ZXN0ZXJzLCB3aGVuIHBvaW50aW5nIGEgc3RvcnkgYW55b25lIGRvaW5nIHRlc3RpbmcgbmVlZHMgdG8gd2VpZ2ggaW4gYXMgc29tZXRpbWVzIGEgc2ltcGxlIGRldmVsb3BtZW50IHRhc2sgY2FuIGNhdXNlIGEgbGFyZ2UgdGVzdGluZyBlZmZvcnQgYW5kIGlmIHRoZXkgYXJlIHRydWUgU3ByaW50cyB0aGUgaWRlYSBpcyB0byBoYXZlIGV2ZXJ5dGhpbmcgY29tcGxldGVkIGFzIGl0IGNvdWxkIGJlIHNoaXBwZWQgKGJ1aWx0LCB0ZXN0ZWQgYW5kIGRvY3VtZW50ZWQpLiAKTGEgYmVyY2U/IE1haXMgdHUgbiBwZW5zZXMgcGFhYXMhIEVsbGUgZXN0IHBob3RvdG94aXF1ZXV1dXUhIEltYWdpbmV6IHVuIGh5c3RyaXF1ZSB2b3VzIGFubm9uY2VyIGxlIHRydWMsIGEgZmFpdCBwbHVzIGNyZGlibGUuIEJvbi4gCkZqYXllciAgMTIgcG9pbnRzICBzdWJtaXR0ZWQgMTEgZGF5cyBhZ28KWnVkZW0ga2FubiBkZXIgVGhlcmFwZXV0IGJ6dy4gZGllIEdNIFByYXhpcyBpbiBlaWdlbmVyIFZlcmFudHdvcnR1bmcgZWlnZW5lIFRhcmlmZSB1bmQgVmVydHJnZSB2ZXJ3YWx0ZW4uIERpZSBBYnJlY2hudW5nZW4gc2luZCBpbW1lciBrb3JyZWt0LCBvZGVyIGViZW4gc28gd2llIFNJRSBlcyB3b2xsZW4uClBva2VyIGlzbid0IGNyYXBzICAgYSBnYW1lIGluIHdoaWNoLCBhY2NvcmRpbmcgdG8gdGhlIGxhd3Mgb2YgcHJvYmFiaWxpdHksIHBsYXllcnMgd2lsbCBhbHdheXMgbG9zZSBpbiB0aGUgbG9uZyBydW4uIEluIHBva2VyLCB0aGVyZSBhcmUgZ29vZCBiZXRzIGFuZCBiYWQgYmV0cywgYW5kIHBsYXllcnMgaGF2ZSB0byBmaWd1cmUgb3V0IHdoaWNoIGFyZSB3aGljaC4uIApBbmQgZG9uJ3QgYmUgdG9vIGhhcmQgb24geW91cnNlbGYuIApBbHBoYSBMaW5vbGVpYyBBY2lkIChBTEEpIGlzIHRoZSBnb29kIGZhdHR5IGFjaWQgdGhhdCBpcyBmb3VuZCBpbiBvbWVnYSAzcyBhbmQgaXMgZXNwZWNpYWxseSBlZmZlY3RpdmUgYXQgbG93ZXJpbmcgaW5mbGFtbWF0aW9uLiAKU28gdGhlcmUgaXMgc29tZXRoaW5nIGVsc2UgYXQgcGxheSBhcyB0byB3aHkgdGhlIHByZW1pdW0gaXMgZW5vdWdoIGZvciB0aGVtIHRvIHRha2Ugb24gdGhlIHJpc2suIEkgd291bGQgc3VnZ2VzdCBpdCB0aGF0IGxpdmluZyB3aXRoIGFuIGF2ZXJhZ2UgaW5jb21lIGlzIHJpc2t5IGVub3VnaCBmb3Igb25lIGhlYWx0aCBhbmQgaGFwcGluZXNzIHRoYXQgdGFraW5nIG9uIGEgcmlzayB0byBsZXZlcmFnZSBvbmVzZWxmIG91dCBvZiB0aGF0IHNpdHVhdGlvbiBiZWNvbWVzIHdvcnRod2hpbGUuIApVbmUgYWRyZXNzZSBtYWlsIGEgdCBjcmUgZXQgY29tbXVuaXF1ZSBsb3JzIGR1IGNvbnNlaWwgZGUgcXVhcnRpZXIgTGEgQ2hhcGVsbGUgamV1ZGkgZGVybmllciBwb3VyIGZhdm9yaXNlciBsZXMgY2hhbmdlcyBoYWJpdGFudHMgcG9saWNlIGVuIGNlIHF1aSBjb25jZXJuZSBsZXMgc2F1dmV0dGVzIGV0IGxhIGNvbnRyZWZhb24uIAoiSWYgeW91IGtub3cgdGhlIG9sZCAnU3RyZWV0IExlZ2FsLCcgdGhlcmUgd2lsbCBiZSBoaWRkZW4gcGxlYXN1cmVzIHRoYXQgeW91J2xsIGdldCBtb3JlIHRoYW4gb3RoZXIgcGVvcGxlLiBCdXQgaXQncyBub3QgcmVxdWlyZWQgYXQgYWxsLCIgc2FpZCByZXR1cm5pbmcgZXhlY3V0aXZlIHByb2R1Y2VyIEJydWNlIFNtaXRoLCB3aG8gaXMgYWxzbyB0aGUgc2hvd3J1bm5lci4KU2l6aW5nIGlzIGZpbmUsIHlvdSBhbHJlYWR5IHVzZWQgdGhlIGxhcmdlIHNpemluZyBwcmVmbG9wIHRvIGlzbywgbm8gbmVlZCB0byBibG9hdCBpdCBmdXJ0aGVyLi4gCldoZW4geW91IG9uIGEgZHJhdyBhbmQgaXQgaGl0cywgZXNwZWNpYWxseSBpZiB5b3UgaGF2ZSBhIHNvbWV3aGF0IHN1c3BlY3QgbGluZSBvciBjYWxsZWQgb25seSBkdWUgdG8gaW1wbGllZCBvZGRzLCBjb25zaWRlciBiZXR0aW5nIG92ZXIgdGhlIHBvdC4gVGhlIGZpcnN0IGxldmVsIHRoaW5rZXIgd2lsbCBkZWNpZGUgdGhhdCB5b3UgZGlkbiBoYXZlIHBvdCBvZGRzIG9uIHRoZSB0dXJuIHNvIGNvdWxkbiBoYXZlIGNhbGxlZCB3aXRoIGEgZHJhdy4gVGhleSBhbHNvIHNlZSB0aGUgbGFyZ2UgYmV0IGFzIGEgc2lnbiBvZiBhIHN1cmUgYmx1ZmYuIE9ic2Vzc2VkIHdpdGggbWFraW5nIHRoZSBoZXJvIGNhbGwsIHRoZXkgaGFwcGlseSBzaGlwIHRoZWlyIGNoaXBzIHlvdXIgd2F5IHdpdGggdG9wIHBhaXIgb3IgYmV0dGVyLgpCZXN0IEFydCBNdXNldW1zIEluIFRoZSBTb3V0aHdlc3RNYW55IG9mIEFtZXJpY2EgYmVzdCBhcnQgbXVzZXVtcyBjYW4gYmUgZm91bmQgaW4gdGhlIEFtZXJpY2FuIFNvdXRod2VzdC4gKEFQKSAgIEEgc2hha3kgRmVsaXggSGVybmFuZGV6IGFsbG93ZWQgZm91ciBlYXJuZWQgcnVucyBpbiAyIDEvMyBpbm5pbmdzIGJlZm9yZSB0aGUgU2VhdHRsZSBNYXJpbmVycyByYWxsaWVkIGxhdGUgdG8gYmVhdCB0aGUgVGV4YXMgUmFuZ2VycyA5IDggb24gU3VuZGF5LgpTbyBJIHRvb2sgYWxsIHRoZSBraWRzIGFuZCB3ZSB3YWxrZWQgYW5kIHdhbGtlZCB1bnRpbCB3ZSBmb3VuZCBhIHN0b3JlLiAKQnkgYWRvcHRpbmcgYSBhcHByb2FjaCB0aGlzIHJ1bGluZyBwYXJ0eSB0cnVseSBoYXMgc29tZSB0cmlja3Mgb2YgaXRzIG93bi4uIAoiT25jZSB0aGUgaW52ZXN0aWdhdGlvbiBpcyBjb21wbGV0ZSwgaXQgaXMgcmV2aWV3ZWQgYnkgdGhlIG9mZmljZXIncyBpbW1lZGlhdGUgc3VwZXJ2aXNvciwgY29tbWFuZGVyLCBkZXB1dHkgY2hpZWYgYW5kIHRoZSBwcm9mZXNzaW9uYWwgc3RhbmRhcmRzIHJldmlldyBwYW5lbCAod2hpY2ggY29uc2lzdHMgb2Ygc2l4IGNvbW11bml0eSBtZW1iZXJzIGFuZCBzaXggZGVwYXJ0bWVudCBtZW1iZXJzIGZyb20gYWxsIGFyZWFzIHdpdGhpbiB0aGUgZGVwYXJ0bWVudCkuIFRoZSBzdXBlcnZpc29ycyBhbmQgcmV2aWV3IHBhbmVsIG1ha2UgcmVjb21tZW5kYXRpb25zIHRvIHRoZSBwb2xpY2UgY2hpZWYgd2hvIHdpbGwgbWFrZSBhIGZpbmFsIGRlY2lzaW9uLiIuIAooTm90IHRvIG1lbnRpb24gdGhlIHJhbXBhbnQgdHJlYXNvbiBhbmQgZmFpbHVyZSBvZiBzb2NpYWwgbWVkaWEgY29tcGFuaWVzIHRvIGZpbHRlci9jb21iYXQgZmFrZSBuZXdzKS4gVGhleSBzaG91bGQgaGF2ZSBkb25lIHdoYXQgeW91IHN1Z2dlc3RlZCB3aGlsZSBoZSB3YXMgY2FtcGFpZ25pbmcuIFRoZSBwcm9ibGVtIG5vdyBpcyB0aGF0IGhlIGlzIHRoZSBQcmVzaWRlbnQgYW5kIGhlIG1ha2VzIGRlY2lzaW9ucyB0aGF0IGFmZmVjdCBldmVyeSBvbmUgb2YgdXMsIGxpa2UgaXQgb3Igbm90LiAKSGlzIG5vdyB3aWZlIGRpZG4gaGF2ZSBwYXRpZW5jZSBmb3IgdGhhdCwgYW5kIGFmdGVyIHR3byBiaWcgZGlzY3Vzc2lvbnMgYWJvdXQgaXQgYW5kIGhpbSBzdGlsbCBiZWluZyBsYXRlLCBzaGUgdG9sZCBoaW0gIkkgdG9sZCB5b3UgdGhhdCBJIGZpbmQgaXQgZGlzcmVzcGVjdGZ1bCB3aGVuIHlvdSBtYWtlIG1lIHdhaXQuIApJIGRvbid0IHByZXRlbmQgdG8gdW5kZXJzdGFuZCBSdXNzaWFuIHBvbGl0aWNzLCBidXQgdGhpcyBtb3ZlIHNlZW1zIHRvIG1lIHRvIGJlIGEgY2xhc3NpYyBoaWdoIHJpc2ssIGhpZ2ggYWdncmVzc2lvbiBwbGF5OyB0aGluayBvZiBSdXNzaWFuIHByaW1lIG1pbmlzdGVyIERtaXRyeSBNZWR2ZWRldiBhcyBhIGdlb3BvbGl0aWNhbCBoZWRnZSBmdW5kIG1hbmFnZXIgb3IgcG9rZXIgcGxheWVyLCBhbmQgaXQgYmVnaW5zIHRvIG1ha2UgYSBiaXQgbW9yZSBzZW5zZS4KU2FuIFNob3UgVGhpcyBpcyBhIGZhc3RlciBmb3JtIHBlcmZvcm1lZCBieSB0d28gcGVvcGxlLiBJdCBpcyBhIHNpbXVsYXRlZCBmaWdodGluZyBzZXQsIHdpdGggZWFjaCBtb3ZlIGNob3Jlb2dyYXBoZWQgc28gdGhhdCBwYXJ0bmVyIEEncyB0ZWNobmlxdWUgaXMgY291bnRlcmVkIGJ5IHBhcnRuZXIgQi4gClRoaXMgamloYWQgb24gZGVidCB3YXMgaGF0Y2hlZCBieSByaWdodCB3aW5nIHRoaW5rIHRhbmtzLCBhbmQgdGhlIHN0dWRpZXMgY29tbWlzc2lvbmVkIGJ5IGJpbGxpb25haXJlIFBldGUgUGV0ZXJzb24gcGFpbnQgYWxhcm1pc3Qgc2NlbmFyaW9zIGFib3V0IHRoZSBnb3Zlcm5tZW50IGdvaW5nIGJyb2tlIHRocm91Z2ggYSBjb21iaW5hdGlvbiBvZiByZWNrbGVzcyBlbnRpdGxlbWVudCBwcm9ncmFtcyBsaWtlIFNvY2lhbCBTZWN1cml0eSBhbmQgTWVkaWNhcmUgYW5kIHJ1bmF3YXkgc3BlbmRpbmcuIEkgZm9jdXNlZCBvbiBtb3VudGluZyBjb25zdW1lciBkZWJ0IGFuZCBob3cgaXQgdHVybmVkIHNvIG1hbnkgZmFtaWxpZXMgaW50byBzZXJmcywgbGl2aW5nIHRvIHBheSBvZmYgaGlnaCBpbnRlcmVzdCBjcmVkaXQgY2FyZHMsIGNydXNoaW5nIHN0dWRlbnQgbG9hbnMgYW5kIGZyYXVkdWxlbnQgc3VicHJpbWUgbW9ydGdhZ2VzLgpJbiB3ZWxjaGVtIExhbmQgaXN0IGRlciBCZXRyZWliZXIgbGl6ZW56aWVydD8KQmlzaG9wIHNlZW1zIHRvIGhhdmUgZG9uZSwgYW5kIGFsbCBvZiBhIHN1ZGRlbiBhbGwgdGhhdCAic3VjY2VzcyIgaW4geW91ciBmaWVsZCBjYW4gbWVhbiBub3RoaW5nIGFtb25nIHRoZSBwcm9tb3Rpb24gY29tbWl0dGVlIG1lbWJlcnMgKG9uIHRoZSBvdGhlciBoYW5kLCBtYWtlIHRoZSBjb2xsZWdlIHByZXNpZGVudCBoYXBweSwgYW5kIHlvdSBtaWdodCBnZXQgdGVudXJlIHdpdGhvdXQgdGhlIGxhcmdlIHJlc2VhcmNoIGdyYW50cyB0aGF0IERyLiAKMSBwb2ludCAgc3VibWl0dGVkIDggbW9udGhzIGFnby4gCk9yIGV2ZW4gaWYgaGUgZG9lcywgdGhhdCBhbHNvIG5vIGd1YXJhbnRlZSBvZiBvbiB0aGUgbmFtZSBiZWNhdXNlIHNvbWUgbWVuIGdvIHdpdGggaHlwaGVuYXRlZCBuYW1lcyBvciBtYWtlIHVwIG5ldyBuYW1lcyB3aGVuIG1hcnJ5aW5nLiAKSGlzdG9yaWNhbCBpbmVydGlhLiBBdCBldmVyeSBwb2ludCBpbiBodW1hbiBoaXN0b3J5IHRoZXJlIGhhcyBhbHdheXMgYmVlbiBhIHdob2xlIGxvdCBvZiBwZW9wbGUgd2hvIGJlbmVmaXQgZ3JlYXRseSBmcm9tIHRoZSBjb250ZW1wb3JhbmVvdXMgc3RhdHVzIHF1by4gQmVjYXVzZSB0aGVzZSBiZW5lZml0cyBpbnZhcmlhYmx5IGluY2x1ZGUgd2VhbHRoLCBpbmZsdWVuY2UgYW5kIHBvd2VyOyB0aGV5IGFyZSBhYmxlIHRvIGFibGUgdG8gcmVzaXN0IHRoZSBmb3JjZXMgb2YgY2hhbmdlIHRvIGEgbWFzc2l2ZWx5IGRpc3Byb3BvcnRpb25hdGUgZGVncmVlLiBObyBtYXR0ZXIgaG93IGdyb3NzbHkgaW1tb3JhbCBvciBpbmh1bWFuLCBubyBtYXR0ZXIgdGhlIGNvc3QgaW4gbGl2ZXMgb3IgaW4gdGhlIHJhcGFjaW91cyBkZXN0cnVjdGlvbiBvZiBuYXR1cmFsIG9yIGN1bHR1cmFsIGhlcml0YWdlOyBpZiB0aGV5IGNvdWxkIGdldCBhd2F5IHdpdGggaXQgaW4gdGhlIHBhc3QsIHRoZXkgd2lsbCBkbyBldmVyeXRoaW5nIGluIHRoZWlyIHBvd2VyIHRvIGVuc3VyZSB0aGV5IHdpbGwgZ2V0IGF3YXkgd2l0aCBpdCAoYW5kIG1vcmUhKSBpbiB0aGUgZnV0dXJlLgpPbmUgdHlwZSBvZiBwYWluIHJlbGlldmVyIGlzIGFuIGFuYWxnZXNpYy4gCkhlciBuYW1lIGlzIFBhLiBTaGUgd2FzIDM2ICgzMCBvbiB0aGUgd2Vic2l0ZSksIHZlcnkgcGF0aWVudCwgY3V0ZSwgdGlnaHQgYW5kIGFic29sdXRseSBza2lsbGZ1bGwuIApUaG9zZSBkaXNjcmVwYW5jaWVzIGFyZW50IHN1c3BpY2lvdXMsIEdvdEcgd2FzIG11Y2ggbW9yZSBwb3B1bGFyIHRoYW4gYW50IG1hbiBvciBkciBzdHJhbmdlLiAoYW5kIGhhcyBhbHNvIGJlZW4gb3V0IGZvciA1IHllYXJzKQpXZSBiZWNhbWUgdmVyeSBnb29kIGZyaWVuZHMgYW5kIHN0YXJ0ZWQgZGF0aW5nIHNob3J0bHkgYWZ0ZXIgbXkgZGl2b3JjZSB3YXMgZmluaXNoZWQuIEhpcyBmYW1pbHkgdGhpbmtzIEkgd2FsayBvbiB3YXRlciBhbmQgd2VsY29tZWQgbWUgbGlrZSBhIGxvc3QgZGF1Z2h0ZXIuIApJbiAyMDExIFJ5YW4gd2FzIGhpcmVkIGludG8gdGhlIFIgZGVwYXJ0bWVudCBhdCBXaXphcmRzIG9mIHRoZSBDb2FzdCwgYW5kIGFzIGEgcmVzdWx0IEpvbiBMb3Vja3Mgam9pbmVkIHRoZSBzaG93IGFzIHRoZSBjbyBob3N0LiAKSSBqdXN0IHJlY29nbmlzZSBnb29kIHdvcmsgd2hlbiBpdCdzIHRoZXJlLnRvZnV5dWtpICAxMiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvQnV0IENoaW5hIGZpbmUgZHVzdCBoYXMgd2F5IG1vcmUgb2YgZWZmZWN0IG9uIEtvcmVhIHRoYW4gaXQgZG9lcyBvbiBKYXBhbi4gVGhhdCBub3QgYSBmYWlyIGNvbXBhcmlzb24uIEp1c3QgYnkgbG9va2luZyBhdCB0aGUgQVFJIG1hcCB5b3UgY2FuIHNlZSB0aGUgc291dGhlcm4gcGFydCBvZiBKYXBhbiBhcm91bmQgRnVrdW9rYSBpcyBjb25zdGFudGx5IGJyZWFraW5nIDEwMHMgYnV0IHRoZSBmdXJ0aGVyIEphcGFuIGlzIGZyb20gS29yZWEsIGl0IGdvZXMgYXMgbG93IGFzIDYwcy4gCkludGVybmF0aW9uYWwgV29tZW4ncyBEYXkgKDggTWFyY2gpSW50ZXJuYXRpb25hbCBXb21lbidzIERheSBpcyBhIHRpbWUgdG8gcmVmbGVjdCBvbiBwcm9ncmVzcyBtYWRlLCB0byBjYWxsIGZvciBjaGFuZ2UgYW5kIHRvIGNlbGVicmF0ZSBhY3RzIG9mIGNvdXJhZ2UgYW5kIGRldGVybWluYXRpb24gYnkgb3JkaW5hcnkgd29tZW4gd2hvIGhhdmUgcGxheWVkIGFuIGV4dHJhb3JkaW5hcnkgcm9sZSBpbiB0aGUgaGlzdG9yeSBvZiB0aGVpciBjb3VudHJpZXMgYW5kIGNvbW11bml0aWVzLiAKSSBkb24ga25vdyB3aGF0IHJvbWFudGljIHZpZXdzIHlvdSBoYXZlIG9uIGNvbG9uaWFsaXNtLCBidXQgaXMgd2FzIG5ldmVyIGFib3V0IHVwbGlmdGluZyB0aGUgaW5kaWdlbm91cyBwb3B1bGF0aW9uLiBFdmVuIGF0IHRoZSBlbmQgcGVyaW9kIG9mIHRoZSBjb2xvbmlhbCBwZXJpb2Qgd2hlbiBjb2xvbmlhbGlzbSB3YXMgYXQgaXRzIG1vc3QgYmVuaWduIHRoZSBpbmRpZ2Vub3VzIHBlb3BsZSB3ZXJlIHN0aWxsIGRpc2FkdmFudGFnZWQgYnkgdmFyaW91cyBwb2xpY2llcyBhbmQgYXR0aXR1ZGVzLlN1cmVseSBhIHBvc3QgV1cyIGVubGlnaHRlbmVkIEJlbGdpdW0gY291bGQgcG90ZW50aWFsbHkgYmUgYSBiZXR0ZXIgZ3VhcmRpYW4gb2YgZWNvbm9taWMgZ3Jvd3RoLklmIHRoZXkgYmVsaWV2ZWQgdGhhdCB0aGV5IHdvdWxkIG5ldmVyIHdhbnRlZCBpbmRlcGVuZGVuY2UgaW4gdGhlIGZpcnN0IHBsYWNlLiAKU28gd2hlbiB0aGlzIGhhcHBlbnMsIGFmdGVyd2FyZHMgdGhlcmUncyB0aGUgd2hvbGUsIFBlbm55IGZyb20gdGltZWxpbmUgMjMgaXMgaW4gdGltZWxpbmUgNDA/IERpZCB0aGUgbGlicmFyeSBmcm9tIHRpbWVsaW5lIDIzIHNlbmQgdGhlbSBhbGwgdG8gdGltZWxpbmUgNDA/IEknbSBjb25mdXNlZCBhYm91dCB0aGUgdGltZWxpbmUgc3dpdGNoLiAKU28gaGUgZ290IHB1dCBvbiB3aXJlIHB1bGxpbmcuLiAKVGhlIGRlYWwgVGhlIGVudHJlcHJlbmV1cnMgYXNrZWQgZm9yICQ0MCwwMDAgaW4gZXhjaGFuZ2UgZm9yIGEgMTAlIGVxdWl0eSBzdGFrZSwgdmFsdWluZyB0aGUgY29tcGFueSBhdCAkNDAwLDAwMC4gQmFzZWQgdGhlIHZhbHVhdGlvbiBvbiBvdXIgcHJvamVjdGVkIHJldmVudWUgZm9yIHRoZSB5ZWFyLCBNci4gCk91ciBvYmplY3RzLiBBcm91bmQgYSB0aGlyZCBvZiBvdXIgUkxPcyBoYXZlIGJlZW4gY29tcGlsZWQgaW50byBJTVMgQ29udGVudCBQYWNrYWdlcyAoaWUgemlwZmlsZXMgd2l0aCBtZXRhZGF0YSkgd2hpY2ggeW91IGNhbiBkb3dubG9hZCBmb3IgbG9jYWwgdXNlLCBhZnRlciBmaWxsaW5nIGluIGEgc2hvcnQgZm9ybSBmb3Igb3VyIHJlc2VhcmNoLiBUbyBzZWUgaWYgdGhlIFJMTyB5b3UncmUgaW50ZXJlc3RlZCBpbiBoYXMgYmVlbiBwYWNrYWdlZCwgY2xpY2sgb24gdGhlIGluZm9ybWF0aW9uIGljb24gYnkgdGhlIFJMTyB0aXRsZSBpbiB0aGUgUkxPIGxpc3Qgd2hpY2ggZGlzcGxheXMgbWV0YWRhdGEgb24gdGhlIG9iamVjdCBhbmQgYSBsaW5rIHRvIGl0cyBwYWNrYWdlLCBpZiBvbmUgZXhpc3RzLiBJTVMgcGFja2FnZXMgY2FuIGJlIGltcG9ydGVkIGludG8gcG9wdWxhciBWTEVzIChlZyBNb29kbGUpIGFuZCBMTVNzSWYgeW91J3JlIHVuYWJsZSB0byBydW4geW91ciBkZXNpcmVkIFJMTyAnZnJvbSBzb3VyY2UnIGFuZCBhIHBhY2thZ2UgZG9lc24ndCBleGlzdCwgcGxlYXNlIGNvbnRhY3QgdXMgd2l0aCBhIGJyaWVmIGV4cGxhbmF0aW9uIG9mIHlvdXIgY2lyY3Vtc3RhbmNlcyBhbmQgd2UgbWF5IHByb3ZpZGUgeW91IHdpdGggdGhlIHNwZWNpZmllZCBSTE9zIGFzIElNUyBDb250ZW50IFBhY2thZ2VzV2UgZG8gYWltIHRvIHBhY2thZ2UgYWxsIG9mIG91ciBSTE9zIG92ZXIgdGltZSwgYnV0IGVhY2ggcGFja2FnZSB0YWtlcyBhcm91bmQgYW4gaG91ciB0byBidWlsZCBhbmQgdXBsb2FkIHVzaW5nIFJFTE9BRCBhbmQgdGhlcmUgYXJlIG90aGVyIG1vcmUgcHJlc3NpbmcgY2FsbHMgb24gb3VyIHRpbWUsIHNvIHBhY2thZ2luZyB0ZW5kcyB0byBiZSBvbiBhbiBhZCBob2Mgb3IgcmVxdWVzdCBiYXNpcy4KSWYgeW91IGFyZW4ndCB0cmVhdGVkLCB5b3VyIGltbXVuZSBzeXN0ZW0gd2lsbCBlaXRoZXIgZmFpbCB0byBmaWdodCBpdCBiYWNrIGFuZCB5b3UgZGllIG9yIGl0IHdpbGwgYmUgZHJpdmVuIGludG8gaXRzIGluYWN0aXZlIGN5c3QgZm9ybS4gQmFzaWNhbGx5LCBpdCBjcmVhdGVzIGEgYmlvZmlsbSB0aGF0IGFsbG93cyBpdCB0byBnbyB1bmRldGVjdGVkIGFuZCBuZXN0bGUgaW50byB5b3VyIGJvZHkgc29tZXdoZXJlLiAKTXVjaCBvZiB0aGlzIGEgbWF0dGVyIG9mIGZ1bGZpbGxpbmcgc29tZSBvZiB5b3VyIGJhc2ljIGJpb2xvZ2ljYWwgbmVlZHMgICB0cnksIGZvciBleGFtcGxlLCB0byBnZXQgYSBnb29kIG5pZ2h0J3MgcmVzdCBiZWZvcmUgaW1wb3J0YW50IGV2ZW50cyBhbmQgdG8gcmlkIHlvdXJzZWxmIG9mIGRpc3RyYWN0aW9ucyBsaWtlIGh1bmdlciwgcmVzdGxlc3NuZXNzIGZyb20gbGFjayBvZiBleGVyY2lzZSwgZXRjLi4gCkFuZCByZWFsbHkgbGFuZ3VhZ2UgaXMgd2F5IG1vcmUgcm9idXN0IHRoYW4geW91IHNlZW0gdG8gaW1wbHkgaXQgaXMuIFNwZWVjaCBjYW4gdmFyeSB3aWxkbHkgZnJvbSAidGhlIHJ1bGVzIiBhbmQgc3RpbGwgbWFrZSBhIGxvdCBvZiBzZW5zZS4gQW5kIG1vc3RseSB0aGF0IGJlY2F1c2UgInRoZSBydWxlcyIgYXJlIHNpbXBseSB0aGUgZGVzY3JpcHRpb24gb2Ygb25lIHNwZWNpZmljIGRpYWxlY3QvdmFyaWFudCBvZiB0aGUgbGFuZ3VhZ2UgYW5kIHRoZXJlIGFyZSBtYW55IG90aGVycyB0aGF0IGFyZSBqdXN0IGFzIHZhbGlkLCBldmVuIGlmIHRoZXkgbm90IGJlZW4gZGVjbGFyZWQgInRoZSBzdGFuZGFyZCIuLiAKVGhleSB3b3VsZCB0cmF2ZWwgZnJvbSBnYW1lIHRvIGdhbWUgZHJpdmluZyBsb25nIGhvdXJzIG9uIHRoZSBUZXhhcyBoaWdod2F5cy4gClRoZXkgd2VyZSBhbGwgYXQgbGVhc3QgYWNjZXB0YWJsZSAobm9uZSB3ZXJlIHVuYXR0cmFjdGl2ZSksIGFsbCB3ZXJlIHlvdW5nICh0aGUgcGFwYXNhbiB0b2xkIG1lIGV2ZXJ5b25lIG91dHNpZGUgdGhlIGZpc2hib3dsIGlzIDE4IDIwLCB3aGlsZSB0aGUgZmlzaGJvd2wgZ2lybHMgd2VyZSAyMCspLCBhbmQgc2V2ZXJhbCB3ZXJlIGhvdC4gCkJ1dCB0aGUgY2xhc2ggb2YgY3VsdHVyZXMgICB0aGVpcnMgYW5kIG91cnMgICBpcyBhIHRlYWNoYWJsZSBtb21lbnQgZm9yIG1lLiBObyBtYXR0ZXIgaG93IGNvbXBsZXggb3VyIGF3YXJlbmVzcyBvZiBnZW5kZXIsIHJhY2UsIGFuZCBuYXRpb25hbCBpZGVudGl0eSBpcywgdGhlIGtpbGxpbmcgb2Ygd29tZW4gZm9yIGJlaW5nIGRpc29iZWRpZW50IGlzIGFsd2F5cyB3cm9uZy4gQW5kIG5vIG1hdHRlciBob3cgbXVjaCB3ZSBtaWdodCBhbGxvdyB0aGF0IG1hbnkgd29tZW4gdW5kZXIgY29uc3VtZXIgY2FwaXRhbGlzbSBjaG9vc2UgdG8gd2VhciBiaWtpbmlzIGFuZCBtYW55IE11c2xpbSB3b21lbiBjaG9vc2UgdG8gd2VhciBoaWphYiwgdGhlcmUgYXJlIHNldmVyZSBsaW1pdHMgdG8gbm90aW9ucyBvZiBjaG9pY2Ugd2l0aGluIGNvbmRpdGlvbnMgb2Ygc3RydWN0dXJhbCBpbmVxdWl0aWVzLiAKTm8gcXVlc3Rpb24gdGhlIHNjb3V0aW5nIHN0YWZmIGFsd2F5cyBnZXRzIGV4Y2l0ZWQgd2l0aCB0aGUgbW9yZSBwaWNrcyB0aGV5IGhhdmUsIGFuZCBJIGtub3cgdGhlIG9yZ2FuaXphdGlvbiBkaWQgYSBncmVhdCBqb2Igb2YgYWNxdWlyaW5nIHRoZSBwaWNrcyB0aGF0IHdlIGRvIGhhdmUgdGhpcyB5ZWFyLCBMYW1vcmllbGxvIHNhaWQuIE1vcmUgcGlja3MgeW91IGhhdmUgSSBoYXZlbiBzZWVuIGFzIG1hbnkgKHBpY2tzKSBoZXJlIGFzIHdlIGhhdmUgaW4gYSBsb25nIHRpbWUuLiAKVGhhdCB3b3VsZCBtZWFuIHRoYXQgbmVpdGhlciBTaXIgSXNhYWMgTmV3dG9uLCBNb3phcnQsIFF1ZWVuIEFubmUsIEdlb3JnZSBXYXNoaW5ndG9uLCBOYXBvbGVvbiwgQWJyYWhhbSBMaW5jb2xuIG5vciB0aGVpciBjb250ZW1wb3JhcmllcyBldmVyIGhhZCBhIGNoYW5jZSB0byBzZWUgb25lLiBFVC4KVGhlcmUgbm8gc2hhbWUgaW4gZW5kaW5nIGEgcmVsYXRpb25zaGlwIGJlY2F1c2UgeW91IGFyZSBuZXZlciBzZXh1YWxseSBzYXRpc2ZpZWQgKHNvIGxvbmcgYXMgeW91IGFyZW4gbWFycmllZCBvciB3aXRoIGtpZHMuIHRoZW4gdGhpbmdzIGNhbiBnZXQgY29tcGxpY2F0ZWQpLgpJIGRvbiBrbm93IGlmIHRoZSBnaXJsIGhlIHRhbGtpbmcgYWJvdXQgaW4gdGhhdCBjYXNlIHdhcyBKYXBhbmVzZSBvciBub3QsIGJlY2F1c2UgSSBub3Qgd2F0Y2hpbmcgdGhvc2UgdmlkZW9zLCBidXQgaWYgc2hlIHdhcyBpdCBhbiBlc3BlY2lhbGx5IGR1bWIgY29tcGxhaW50IGluIGhpcyBjYXNlIGJlY2F1c2UgcmljZSBtaXhlZCB3aXRoIGEgcmF3IGVnZyBpcyBhIHByZXR0eSBjb21tb24gSmFwYW5lc2UgYnJlYWtmYXN0LiBNYXliZSBoZSBzaG91bGRuIGRhdGUgc29tZW9uZSBpZiBoZSBnZXRzIHRoYXQgYW5ub3llZCBieSBmb29kIGZyb20gdGhlaXIgY3VsdHVyZSAoYWdhaW4sIGFzc3VtaW5nIHRoZSBnaXJsIHdhcyBKYXBhbmVzZSBzaW5jZSBzbyBtYW55IG9mIHRoZSB0aXRsZXMgbWVudGlvbmVkIEphcGFuZXNlIGdpcmxzKS4gRldJVywgSSBhc3N1bWluZyBoZSB0YWxraW5nIGFib3V0IHRhbWFnbyBrYWtlIGdvaGFuLiBUaGUgZWdnIGlzIG1peGVkIHdpdGggZnJlc2hseSBjb29rZWQgaG90IHJpY2UsIGFuZCBpcyBiYXNpY2FsbHkgY29va2VkIGJ5IHRoZSByaWNlLiBObyBtb3JlIGRhbmdlcm91cyB0aGFuIGEgZnJpZWQgZWdnLgpNZWFud2hpbGUsIHRoZSBhbmltYXRvcnMgdHJhdmVsIHRvIENoaWxlIHdoZXJlIHRoZXkgZHJhdyBhIGNhcnRvb24gYmFzZWQgb24gdGhlIE1haWwgUGxhbmUgdGhhdCBjcm9zc2VzIHRoZSBBbmRlcyAodGhlIG1vdW50YWlucyBiZXR3ZWVuIENoaWxlIGFuZCBBcmdlbnRpbmEpLiBQZWRybyB0aGUgYmFieSBwbGFuZSBnb2VzIHRvIHNjaG9vbCB0byBsZWFybiB0aGUgcm91dGUgb3ZlciB0aGUgQW5kZXMgYW5kIHRoZW4gb25lIGRheSB3aGVuIGhpcyBwYXJlbnRzIGFyZSBpbGwgaXQgaXMgaGlzIHR1cm4gdG8gdHJhbnNwb3J0IHRoZSBtYWlsLiBBdCBmaXJzdCBQZWRybyBkb2Vzbid0IHRha2UgdGhlIG1pc3Npb24gc2VyaW91c2x5LCBidXQgd2hlbiBhIHN0b3JtIGFycml2ZXMgaGUgZmluZHMgaGlzIGlubmVyIHN0cmVuZ3RoLi4gCk1vc3QgU2Fpc29uIHllYXN0IGZhbGwgaW50byB0aGF0IGNhdGVnb3J5LiBNb3N0IGRpYXN0YXRpYyBzdHJhaW5zIGFsc28gcHJvZHVjZSBwaGVub2xzIHdoaWNoIGlzIHdoeSB0aGlzIHN0cmFpbiBpcyBzbyBpbnRlcmVzdGluZy4gClBlbiBtZSBhIHByZXR0eSBWYWxlbnRpbmUuLiAKV2hhdCBoYXBwZW5lZCBpbiBteSBUViBIZWF0IHdhcyBxdWl0ZSB0eXBpY2FsIG9mIG1hbnkgVFYgSGVhdHMsIGJ1dCBwcm9iYWJseSBub3QgYXMgbGlrZWx5IHRvIG9jY3VyIGluIG5vcm1hbCBvbmUgdGFibGUgY29tcGV0aXRpb25zLiAKTmV4dCBkZWFsIG9uZSBjYXJkIHRvIGV2ZXJ5IHBsYXllciBhbmQgZmxpcCB0aGUgZmlyc3QgY29tbXVuaXR5IGNhcmQuIFRoaXMgaXMgdGhlIGNhcmQgYW5kIHRoZSB0aHJlZSB0aGF0IG1hdGNoIGl0IGFyZSB3aWxkLiAKQW5kIHRvIGJlIHNwZWNpZmljIGFnYWluLCB0aGUgcHJvYmxlbSBoZXJlIGlzIG1vbmV5LiBJIHNlZSBob3cgbXVjaCBtb25leSBJIHBheSBmb3Igc3RhdGUgYW5kIGZlZGVyYWwgdGF4ZXMgZXZlcnkgeWVhciBhbmQgd2hpbGUgaXQgYW4gYWJzdXJkIGFtb3VudCBvZiBtb25leSwgSSB1bmRlcnN0YW5kIHRoYXQgaXQgZ29pbmcgdG93YXJkIHBheWluZyBmb3IgdGhlIHNjaG9vbCB0aGF0IG15IGtpZHMgYXR0ZW5kIGFuZCB0aGUgcG9saWNlIGFuZCBmaXJlIGRlcGFydG1lbnQgYW5kIG90aGVyIGNpdmlsIHNlcnZpY2VzLiAKSSB3YXMgaW4gQm9zdG9uIGZvciBhIGdhbWluZyBjb252ZW50aW9uIGFib3V0IDQgeWVhcnMgYWdvLiAKTm8gb25lIGludm9sdmVkIGNvdWxkIGJlIHJlYWNoZWQgb3ZlciB0aGUgQ2hyaXN0bWFzIGhvbGlkYXksIGJ1dCBEb3VnbGFzIEVsbGltYW4gcmV0YWlsIGNoYWlybWFuIEZhaXRoIEhvcGUgQ29uc29sbywgd2hvIGRpZWQgU3VuZGF5IGF0IDczLCB3b3VsZCB1bmRlcnN0YW5kLgpZb3VyIFBvcnR1Z2FsIGFyZ3VtZW50IGlzIHN0dXBpZCwgaWYgeW91IGhhZCByZWFkIHlvdXIgbGlua3MsIG9uZSBvZiB0aGVtIGxpdGVyYWxseSBzdGF0ZXMgdGhhdCBQb3J0dWdhbCBpcyBpbmNsdWRlZCBpbiB0aGUgRVUncyBuZXQgbmV1dHJhbGl0eSBsYXdzLCBhbmQgaGFzIG1lcmVseSBmb3VuZCBsb29waG9sZXMsIHNvIGdyZWF0IGFyZ3VtZW50IHRoZXJlCk92ZXJ2aWV3IGZvciBTdGlsbEFsaXZlR2FtZXIKQXQgZWFjaCBzdG9wLCB0aGUgY3ljbGlzdHMgd2lsbCBkcmF3IGEgY2FyZC4gCk92ZXJhbGwgdGhvdWdoIGEgZGVjZW50IHJvb20gcGx1cyB5b3UgZ2V0ICQyIGFuIGhvdXIgaW4gY29tcHMgZm9yIGZvb2QgdGhhdCB5b3UgY2FuIHVzZSBhdCBTdGFyYnVja3MgYXMgd2VsbCBhcyBvdGhlciBwbGFjZXMgaW4gdGhlIGNhc2luby4gCkVsZWdhbnRseSBzcHJlYWQgYWNyb3NzIG1vcmUgdGhhbiA4LDAwMCBwYXN0b3JhbCBhY3JlcyBhbmQgZmVhdHVyaW5nIGEgbWFnbmlmaWNlbnQgcmVjcmVhdGlvbiBvZiBhIEZyZW5jaCBSZW5haXNzYW5jZSBjaGF0ZWF1LCBCaWx0bW9yZSBFc3RhdGUgaXMgdGhlIGxhcmdlc3QgcHJpdmF0ZSByZXNpZGVuY2UgaW4gQW1lcmljYS4gTG9jYXRlZCB3aXRoaW4gdGhlIEJsdWUgUmlkZ2UgTW91bnRhaW5zIG9mIE5vcnRoIENhcm9saW5hIGFib3V0IHNpeCBtaWxlcyBzb3V0aCBvZiBBc2hldmlsbGUsIHRoZSBwcmVtaWVyIGF0dHJhY3Rpb24gb2YgdGhpcyBleHRyYW9yZGluYXJ5IGVzdGF0ZSBpcyB0aGF0IGNoYXRlYXUga25vd24gYXMgQmlsdG1vcmUgSG91c2UsIGNvdmVyaW5nIG1vcmUgdGhhbiAxNzUsMDAwIHNxdWFyZSBmZWV0IHdpdGggMjUwIHJvb21zLCA2NSBmaXJlcGxhY2VzIGFuZCB0aHJlZSBraXRjaGVucywgYW5kIGNvbXBsZXRlZCBpbiAxODk1IHVuZGVyIHRoZSBkaXJlY3Rpb24gb2Ygb3duZXIgR2VvcmdlIFZhbmRlcmJpbHQsIGEgbWVtYmVyIG9mIHRoZSBmYW1vdXMgVmFuZGVyYmlsdCBmYW1pbHkgdGhhdCB3YXMgb25jZSBhbW9uZyB0aGUgd2VhbHRoaWVzdCBmYW1pbGllcyBpbiBBbWVyaWNhLiBPcGVuIHRvIHRoZSBwdWJsaWMgc2luY2UgMTkzMCwgQmlsdG1vcmUgRXN0YXRlIGlzIHN0aWxsIG93bmVkIGJ5IGRlc2NlbmRhbnRzIG9mIHRoZSBWYW5kZXJiaWx0IGZhbWlseSBhbmQgaW4gYWRkaXRpb24gdG8gdGhlIGVub3Jtb3VzIGhvbWUsIGFsc28gZmVhdHVyZXMgdGhlIGFjY2xhaW1lZCBCaWx0bW9yZSBHYXJkZW5zLCB0aHJlZSBsb2RnaW5nIGNob2ljZXMgaW5jbHVkaW5nIHRoZSBBQUEgRm91ciBEaWFtb25kIElubiBvbiBCaWx0bW9yZSBFc3RhdGUgYW5kIGFuIGhpc3RvcmljLCBhd2FyZCB3aW5uaW5nIEJpbHRtb3JlIFdpbmVyeSBpbiB0aGUgaGVhcnQgb2YgdGhlIHByb3BlcnR5IEFudGxlciBIaWxsIFZpbGxhZ2UuIApNSUxBTiAoQmxvb21iZXJnKSAgIFdoaWxlIEZpYXQgQ2hyeXNsZXIgQXV0b21vYmlsZXMgQ0VPIFNlcmdpbyBNYXJjaGlvbm5lIGlzbid0IGtub3duIGZvciBoaXMgcGF0aWVuY2UsIGhlJ3MgbGlrZWx5IHRvIHdhaXQgdW50aWwgbmV4dCB5ZWFyIGJlZm9yZSBtYWtpbmcgYSBiaWQgZm9yIEdlbmVyYWwgTW90b3JzIGFmdGVyIG1vbnRocyBvZiB0YWxrIGFib3V0IHRoZSBwb3RlbnRpYWwgb2YgYSBkZWFsLiBBdXRvbWFrZXIuIEZlcnJhcmkncyBzZXBhcmF0aW9uIHdvdWxkIHJhaXNlIG1vbmV5IGZvciB0aGUgZGVidCBsYWRlbiBjb21wYW55LiAKVFNBIHNwb2tlc21hbiBNaWNoYWVsIEJpbGVsbG8gdHdlZXRlZCB0aGF0IDUuNSBwZXIgY2VudCBvZiB0aGUgVFNBIHdvcmtmb3JjZSBhdCBEYWxsYXMvRm9ydCBXb3J0aCBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgY2FsbGVkIG91dCBGcmlkYXksIGNvbXBhcmVkIHdpdGggMy41IHBlciBjZW50IG9uIGEgbm9ybWFsIGRheS4gSGUgc2FpZCB3YWl0IHRpbWVzICJtYXkgYmUgYWZmZWN0ZWQiIGJ1dCB0aGF0IGFsbCBwYXNzZW5nZXJzIHdvdWxkIGJlIHNjcmVlbmVkIGFzIG5vcm1hbC4KIFVzY2lyZSBkYWwgdHVubmVsIGRpIHF1ZXN0YSByZWFsdCBpbmZlcm5hbGUgZSBkaXJpZ2lhbW9jaSB2ZXJzbyBudW92aSBpbml6aSwgdmVyc28gcXVlbGxhIHJlYWx0IHBhcmFkaXNpYWNhIGNoZSB0YW50byBicmFtYSBpbCBub3N0cm8gY3VvcmUgLi4gClllcywgbm90IGFsbCBiYWJ5IGJvb21lcnMgYmVjYW1lIHdlYWx0aHksIHRoYXQgaXMgY29ycmVjdCwgYnV0IHRoZXkgY291bGQgZ3JhZHVhdGUgZnJvbSBoaWdoIHNjaG9vbCBhbmQgaGF2ZSBhIHByZXR0eSBjb21mb3J0YWJsZSBmaW5hbmNpYWwgbGlmZS4gR28gdG8gY29sbGVnZSAoZXZlbiBpZiBpdCdzIGEgZGVncmVlIHRoYXQgdGhleSB3b3VsZCBjbGFpbSBpcyAndXNlbGVzcycgbm93LCBpZSBFbmdsaXNoL2hpc3RvcnkvZXRjLik/IFlvdSBhcmUgd2VsbCBvbiB5b3VyIHdheSB0byBhIHByZXR0eSBlYXN5IGxpZmUuLiAKUGVyaGFwcyB5b3VyIHN1cHBvc2VkIExpYnlhbiBhY3F1YWludGFuY2Ugd2FzIGEgbWVtYmVyIG9mIHRoZSBlbGl0ZSBjYXBpdGFsaXN0IGNsYXNzIGJlZm9yZSB0aGUgc29jaWFsaXN0IHJldm9sdXRpb24/IEkgdGhpbmsgbW9zdCBwZW9wbGUgcG9zdGluZyBvbiB0aGlzIHN1YiB1bmRlcnN0YW5kIHRoYXQgdGhlIHJpY2ggd29uJ3QgYmUgdG9vIGhhcHB5IHdoZW4gd2Ugc2VpemUgdGhlIGNhcGl0YWwgYW5kIG1lYW5zIG9mIHByb2R1Y3Rpb24gYW5kIHJlZGlzdHJpYnV0ZSBpdCBhbW9uZyB0aGUgcG9wdWxhY2UuIApNZXRybyBoYXMgaW52ZXN0aWdhdGVkIGFib3V0IDIsMjAwIGNoaWxkcmVuIGV4cGxvaXRlZCB0aHJvdWdoIHNleCB0cmFmZmlja2luZyBpbiBMYXMgVmVnYXMgc2luY2UgMTk5NCwgdGhlIHllYXIgdGhlIGRlcGFydG1lbnQgYmVnYW4gdHJhY2tpbmcgdGhlIGlzc3VlLiBUaGUgbnVtYmVyIHBlYWtlZCBpbiAyMDA0IHdoZW4gTWV0cm8gZGV0ZWN0aXZlcyBtYWRlIGNvbnRhY3Qgd2l0aCAyMDcgY2hpbGRyZW4sIHBvbGljZSBzYWlkLiBPbiBhdmVyYWdlLCA1MCBwZXJjZW50IG9mIGFsbCBqdXZlbmlsZSBzZXggdHJhZmZpY2tpbmcgdmljdGltcyBwb2xpY2UgbWFkZSBjb250YWN0IHdpdGggd2VyZSBmcm9tIE5ldmFkYS4KSSB0aGluayB0aGVyZSBhcmUgc2V2ZXJhbCBwb3NzaWJpbGl0aWVzLiBUaGUgd29yc3QgY2FzZSBzY2VuYXJpbyAod2hpY2ggSSB0aGluayB5b3UgbWlnaHQgYmUgdGhpbmtpbmcgb2YpIGlzIHRoYXQgc2hlIGVtYmFycmFzc2VkIG9mIHlvdSwgb3Igbm90IGNvbW1pdHRlZCB0byB0aGUgcmVsYXRpb25zaGlwLCBhbmQgaXMgdGhlcmVmb3JlIGtlZXBpbmcgaXQgb3V0IG9mIGhlciBkYWlseSBvbmxpbmUgbGlmZSB1cGRhdGVzIHNvIHBlb3BsZSBkb24ga25vdyBhYm91dCB0aGUgcmVsYXRpb25zaGlwLiAKVGhlIHByb2R1Y3Rpb24gbWV0aG9kIG5vdCB0aGUgZW5kIHJlc3VsdC5pdHMgcGVyZmVjdGx5IG5hdHVyYWwgdG8gdXNlIGFydGlmaWNpYWwgaW5zZW1pbmF0aW9uLCBpdCBtaWdodCBub3QgYmUgdGhlIG1vc3QgY29tbW9uIHdheSwgYnV0IHRoYXQgZG9lc24gbWFrZSBpdCB1bm5hdHVyYWwuYSBtYW4gcHV0cyBpbiBpbiBhIGRvZ3MgdmFnaW5hIHRoYXQgd29uIG1ha2UgYSBiYWJ5LCBzbyA5OSUgb2YgYWxsIHZhZ2luYXMgYSBtYW4gY2FuIHB1dCBoaXMgcGVuaXMgaW4gd29uIHByb2R1Y2UgYSBiYWJ5LCBzbyBpdHMgcXVpdGUgdW5uYXR1cmFsIHRoYXQgdGhhdCBpbiAxJSBpdCBkb2VzLmJ5IHlvdXIgc3RhbmRhcmRzIHRlY2huaWNhbGx5IGZpbmdlcmluZyB3b3VsZCBiZSBjb25zaWRlcmVkIHNleCBpZiBpdCBoYXMgc2VtZW4gb24gdGhlIGZpbmdlcnMsIGFmdGVyIGFsbCBpdHMgYSBodW1hbiBib2R5IHBhcnQgKG5vdGhpbmcgYXJ0aWZpY2lhbCkgYmVpbmcgc3R1Y2sgaW4gYSB2YWdpbmEgdGhhdCBnaXZlcyBhIGNoYW5jZSBvZiBjb25jZWl2aW5nIGEgYmFieSxBbnphaSAgNCw5MTYgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ29JZiB5b3Ugd2VyZSB0byBjb21wcmVzcyB0aGUgZ2FzIGdpYW50IEp1cGl0ZXIgZG93biB0byB0aGUgc2FtZSBkZW5zaXR5LCBpdCB3b3VsZCBhY3R1YWxseSBiZSBzbWFsbGVyIHRoYW4gaXRzIG93biBtb29uLCBFdXJvcGEuRWRpdDogSSBtZWFuIGNvbXByZXNzIGl0IGRvd24gdG8gdGhlIHNhbWUgZGVuc2l0eSBhcyBFdXJvcGEsIGFzIHBlb3BsZSBzZWVtIHRvIGJlIGNvbmZ1c2VkLiAKQW5kIHdoYXQgSSBoYXZlIGJlZW4gc2F5aW5nIGFsbCBhbG9uZy4gCk9uZSBvZiB0aGVtIGNvbWVzIGZyb20gQ2h1Y2sgTWlsbGVyLCB3aG8gcGxheWVkIGZvb3RiYWxsIHdpdGggSGVubGV5IGF0IFVDTEEuIApNYXNzYWdnaWFyZSBsYSBwcm9zdGF0YSAgaWwgcHJvY2Vzc28gZGkgYWxsZXZpYXJlIGwnYWNjdW11bG8gZGkgZmx1aWRvIHByb3N0YXRpY28sIGFwcmlyZSBpIGNvbmRvdHRpIGUgaW5jcmVtZW50YXJlIGlsIGZsdXNzbyBzYW5ndWlnbm8uLiAKTGUgc2l0ZSBkZSBGcmFuCkNyaWNrZXQgY2FuIHNjYXJjZWx5IGhvcGUgYWdhaW4gdG8gd2l0bmVzcyB0d28gc3R5bGVzIGFzIGZhc2NpbmF0aW5nbHkgY29udHJhc3RlZCBhbmQgYXMgcmFjaWFsbHkgcmVwcmVzZW50YXRpdmUgYXMgRnJ5J3MgYW5kIFJhbmppdHNpbmhqaSdzLiAKMTkgMjAxNCAuIE1hbmdlRW5naW5lIEFETWFuYWdlciBQbHVzIDYuMSAuIFpvaG8gLiAsIC4gV2FpdCAxMSBzZWMuIHBsZWFzZSB3YWl0LiBISUdIIFNQRUVELiA3IHJlc3VsdHMgLiBNYW5hZ2VFbmdpbmUgS2V5IE1hbmFnZXIgUGx1cyA1LjIgTW9ub3ZhLiB3aGVuIFBNUCBsaWNlbnNlIGtleSB3aXRoIG5vIC4gTWFuYWdlRW5naW5lIEFETWFuYWdlciBQbHVzIDYuMCBrZXlnZW4gb3Iga2V5IGdlbmVyYXRvci4gTWFuYWdlRW5naW5lIEFETWFuYWdlciBQbHVzIFN0YW5kYXJkIEVkaXRpb24gNi4wIChDcmFjayArIEtleWdlbikuIApJcyBhbiBleHRlcmlvciBhdHRhY2sgb24gYSBidWlsZGluZyB0aGF0IGlzIGJhc2ljYWxseSB1bm9jY3VwaWVkLiBJdCBpc24gb25lIG9mIHRoZSBtb3JlIGV4Y2l0aW5nIGZpcmVzIHRoZXkgaGF2ZSB0byBkZWFsIHdpdGguIApFZy4gCk9mIGNvdXJzZSwgdGhpcyBpcyBhbGwgZ3Vlc3N3b3JrIHNpbmNlIGl0IGlzIHVua25vd24gaG93IGxvbmcgVGlsbGllIHdpbGwgYmUgb3V0LiBXaGF0IGlzIGtub3duIGlzIHRoYXQgYSBoZWFsdGh5IFRpbGxpZSwgd2l0aCBoaXMgZXhwZXJpZW5jZSBhbmQgdmVyc2F0aWxlIG9mZmVuc2l2ZSBnYW1lLCB3YXMgYSBrZXkgbWVtYmVyIG9mIHRoZSAyMDE3IGFuZCAyMDE4IHRlYW1zLiBIaXMgYWJzZW5jZSwgYmVjYXVzZSBvZiBhIGhpcCBpbmp1cnksIHdhcyBmZWx0IHdoZW4gdGhlIFphZ3MgbG9zdCB0byBGbG9yaWRhIFN0YXRlIDc1IDYwIGluIGxhc3QgeWVhcidzIFN3ZWV0IDE2Li4gCkluIHRyYWluaW5nIHdlIHdlcmUgcHJhY3RpY2luZyBhbiBhdHRhY2sgb2ZmIGEgbGluZW91dCwgSSB3YXMgcnVubmluZyBkdW1teSBhbmQgc3dhcHBpbmcgb3ZlciB0byB0aGUgb3RoZXIgc2lkZSBvZiB0aGUgZmllbGQgYXMgcGFydCBvZiBhIHBvZCwgYnV0IGl0IGFsbCB3ZW50IHRvIGhlbGwgaW4gYSBoYW5kYmFza2V0IGFzIHRoaW5ncyBmbG93ZWQgb3JnYW5pY2FsbHkuClVuaWJldCBjYW4gcGxlYXNlIGV2ZW4gdGhlIG1vc3QgZXhwZXJpZW5jZWQgdmV0ZXJhbnMgaW4gc3BvcnRzIGJldHRpbmcgd2l0aCBpdHMgb2RkcyB0aGF0IHNvbWV0aW1lcyB0b3AgdGhlIG1ham9yaXR5IG9mIG90aGVyIGJvb2ttYWtlcnMnIG9kZHMuIEl0IGlzIG93bmVkIGJ5IFVuaWJldCBHcm91cCBQbGMsIGEgY29tcGFueSBwdWJsaWNseSBsaXN0ZWQgYXQgdGhlIE5vcmRpYyBFeGNoYW5nZSBpbiBTdG9ja2hvbG0sIHdoaWNoIG1lYW5zIGl0IGlzIGEgY29tcGFueSBvcGVuIHRvIHNoYXJlIGhvbGRlcnMsIHNvbWV0aGluZyB0aGF0IG9ubHkgYmlnIGNvbXBhbmllcyBjYW4gZG8uIFVuaWJldCBzdGFydGVkIGl0cyBzcG9ydHMgYmV0dGluZyBidXNpbmVzcyBpbiAxOTk3LCBhbmQgcHJvdmlkZXMgYSBwbGF0Zm9ybSBmb3Igc3BvcnRzIGJldHRpbmcsIGNhc2lubyBnYW1ibGluZywgYW5kIG9ubGluZSBwb2tlciBwbGF5aW5nIHRvIG92ZXIgZWlnaHQgbWlsbGlvbiBwbGF5ZXJzIGFsbCBvdmVyIHRoZSB3b3JsZCBpbiBtb3JlIHRoYW4gMTUwIGNvdW50cmllcy4gCkkgd2FzIHRvbGQgdGhlcmUgd2VyZSBubyBpc3N1ZXMgYXQgbXkgbGFzdCBjaGVjayB1cC4gSSB0cnlpbmcgdG8gZXhwbGFpbiB0aGF0IEkgYSBwZXJzb24gd2hvIHdpc2hlcyB0byBsaXZlIGEgdmVyeSBxdWlldCBsaWZlLiAKSSBndWVzcyB0aG9zZSBhcmUgYSBzY2F0dGVyaW5nIG9mIHRob3VnaHRzLiBCdXQgdGhlIHdheSBJIHJlc29sdmVkIG15IHZpZXcgaXMgdGhhdCBmb3IgbWUsIGdvb2QgY2FzdGluZyBtZWFucyBmYWl0aGZ1bG5lc3MgdG8geW91ciBzb3VyY2UgbWF0ZXJpYWwsIGFuZCBmYWl0aGZ1bG5lc3MgdG8gY29tbW9uIHNlbnNlLiAKU28gZmFyLCBJIGNyZWF0ZWQgdGhlIGZvbGxvd2luZyBjb3Vyc2VzOgpBdGxhbnRpYyBDaXR5J3MgZmlyc3QgY2FzaW5vLCB0aGUgOTQyIGd1ZXN0IHJvb20gUmVzb3J0cyBBdGxhbnRpYyBDaXR5IGZlYXR1cmVzIHRoZSBTdXBlcnN0YXIgVGhlYXRlciwgZ3JlYXQgZGluaW5nLCBsb3VuZ2VzLCBhIHNwYSwgc2Fsb24gYW5kIHJldGFpbCBzaG9wcy4gQSBwYXJ0bmVyc2hpcCBiZXR3ZWVuIEppbW15IEJ1ZmZldHQgYW5kIFJlc29ydHMgQ2FzaW5vIEhvdGVsIGJyb3VnaHQgYSBNYXJnYXJpdGF2aWxsZSB0aGVtZWQgcmVzdGF1cmFudCwgYmFyIGFuZCBzdXJmIHNob3AgdG8gdGhlIHJlc29ydC4gVGhlICQzNSBtaWxsaW9uIGNvbXBsZXggY29uc2lzdHMgb2YgYSBMYW5kU2hhcmsgQmFyIEdyaWxsIG9uIHRoZSBiZWFjaCwgcGx1cyBhIEZpdmUgTydDbG9jayBTb21ld2hlcmUgQmFyLi4gClRoZSBzYW1lIGlzIHRydWUgZm9yIHRoZSB0ZWFtIGluIEl0YWx5IGEgZmV3IHllYXJzIGJhY2sgdGhhdCBza2VwdGljYWxseSBwdWJsaXNoZWQgYW5kIHF1ZXN0aW9uIHRoZWlyIG93biBleHBlcmltZW50YWwgcmVzdWx0IHRoYXQgc2VlbWVkIHRvIGluZGljYXRlIGZhc3RlciB0aGFuIGxpZ2h0IHNpZ25hbGluZy4gCklmIGhlIGNvbWVzIG91dCB0byBoaXMgcGFyZW50cyB0aGUgZXZlbnR1YWwgZmFsbG91dCBjb3VsZCBzY2FyIGhpbSBwc3ljaG9sb2dpY2FsbHkgYW5kIGRhbWFnZSB5b3VyIHJlbGF0aW9uc2hpcCBtb3JlIHRoYW4gaWYgeW91IGhhZCBqdXN0IHZpc2l0ZWQgYSBmcmllbmQsIGFuZCBJIHBlcnNvbmFsbHkgd291bGQgaGF0ZSBzZWVpbmcgbXkgcGFydG5lciBnb2luZyB0aHJvdWdoIHRoYXQga2luZCBvZiBwYWluLiAKSmV3cyBsaWtlIHRoZSBmaXJzdCBtb3ZpZSBidXQgaWdub3JlZCB0aGUgc2VxdWVscy4gQ2hyaXN0aWFucyB0aGluayB5b3UgbmVlZCB0byB3YXRjaCB0aGUgZmlyc3QgdHdvLCBidXQgdGhlIHRoaXJkIG1vdmllIGRvZXNuJ3QgY291bnQuIApJIGhhdmUgbWVkaWNhbCBwdHNkLiBJIGhhdmUgYSBjaHJvbmljIGlsbG5lc3MgYW5kIGluIHRoZSBwYXN0IEkgaGF2ZSBoYWQgdHJlYXRtZW50cyBmb3JjZWQgb24gbWUgd2hpY2ggSSBkaWQgbm90IGNvbnNlbnQgdG8uCk90aGVyIHNlcnZpY2VzIGluY2x1ZGU6IGJlYWNoIHNpZGUgbWFzc2FnZSwgZnJlZSBXaUZpLCBtb3RvcmJpa2UgcmVudGFscywgYW5kIHRyYW5zZmVyIHRvdXIgY29vcmRpbmF0aW9uLiAKTmV2ZXIgbWluZCB0aGUgbWlsbGlvbnMgb2YgYW1lcmljYW5zIGtpbGxlZCBpbiBXVzEsIFdXMiwgdGhlIEtvcmVhbiBXYXIsIHRoZSBWaWV0bmFtIFdhci4gRGlzcmVnYXJkIHRoZSBicmluayBvZiBkZXN0cnVjdGlvbiBwcmFjdGljYWxseSBhIGJyZWF0aCBhd2F5IGR1cmluZyB0aGUgY29sZCB3YXIgYXMgcGVvcGxlIHdvcnJpZWQgYWJvdXQgYmVpbmcgYm9tYmVkIHRvIGRlYXRoIGJ5IFJ1c3NpYS4gCkZvciB0aG9zZSBub3QgaW4gdGhlIDkwMjEwIGtub3csIEFkcmlhbm5hIGlzIHRoZSByZXNpZGVudCBkcnVnIGFkZGljdCBpbiByZWNvdmVyeS4gV2hpbGUgdGhlcmUgd2FzIGEgcG9zc2liaWxpdHkgdGhhdCBoZXIgYmFieSBkYWRkeSB3YXMgc3VwcG9zZWQgc3RpbGwgYSB2aXJnaW4gTmF2aWQgKE1pY2hhZWwgU3RlZ2VyKSwgaXQgdHVybnMgb3V0IGhlciBpbXBlbmRpbmcgbW90aGVyaG9vZCB3YXMgdGhlIHJlc3VsdCBvZiBhIHNlY3JldCBob29rdXAgd2l0aCBzY2hvb2wgaG90dGllIFR5IChBZGFtIEdyZWdvcnkpLgpDcml0aWNhbCB0aGVvcmlzdHMgZnJvbSB0aGUgRnJhbmtmdXJ0IFNjaG9vbCBjb250aW51ZWQgdGhpbmtpbmcgYWJvdXQgZXBpc3RlbW9sb2dpZXMgdGhyb3VnaG91dCB0aGUgbWlkZGxlIG9mIHRoZSBjZW50dXJ5LiBXaHksIGlmIHdvcmtlcnMgdW5kZXJzdG9vZCB0aGUgd29ybGQgYmV0dGVyIHRoYW4gdGhlIGJvdXJnZW9pc2llLCBkaWQgdGhleSBub3QgcmlzZSB1cD8gVGhlIGFuc3dlciwgYWNjb3JkaW5nIHRvIEFudG9uaW8gR3JhbXNjaSwgd2FzIHRoZSAiaGVnZW1vbnkiIG9mIHRoZSBpZGVhcyBvZiB0aGUgcnVsaW5nIGNsYXNzZXMuIEluIG90aGVyIHdvcmRzLCB0aGUgaWRlYXMgb2YgdGhlIHJ1bGluZyBjbGFzcyBhcmUgbm90IGp1c3QgZXZlcnl3aGVyZSB0aGUgcnVsaW5nIGlkZWFzLCBidXQgYWxzbyBzbyB0aG9yb3VnaGx5IGNvbnRyb2wgcHVibGljIGRlYmF0ZSB0aGF0IHdlIGNhbm5vdCBlc2NhcGUgdGhlbS4gCkxvbmcgdGVybSBwcmFjdGljZSBvZiB3aG9sZSBib2R5ICB3aWxsIGhlbHAgcmVzdG9yZSB0aGUgZ2VuZXJhbCBjb25kaXRpb24gb2YgdGhlIGJvZHkuIEl0IHdpbGwgb3BlbiB0aGUgZW5lcmd5IGNoYW5uZWxzIGFuZCBhbGxvdyB0aGUgYm9keSB0byBkZWFsIHByb3Blcmx5IGFuZCBuYXR1cmFsbHkgd2l0aCBzdHJlc3MgYW5kIGJ1aWx0IHVwIHRveGlucywgYW5kIGNvcGUgd2l0aCBhbnhpZXR5IGFuZCBkZXByZXNzaW9uLiAgd2lsbCBhbHNvIHByb3ZpZGUgYWRkaXRpb25hbCBlbmVyZ3kgcmVxdWlyZWQgdG8gcmVjb3ZlciBmcm9tIGlsbG5lc3MuCkkgdGhpbmsgYWJvdXQgdGhvc2UgZXN0aW1hdGVzIHRoYXQgb3ZlciBoYWxmIG9mIGV2ZXJ5IGZlZGVyYWwgdGF4IGRvbGxhciBnb2VzIHRvIHdhciwgdGhlIFBlbnRhZ29uLCB0aGUgU3RhdGUgRGVwYXJ0bWVudCBvciB0aGUgbWlsaXRhcnkgaW5kdXN0cmlhbCBjb21wbGV4LiBJIHRoaW5rIG9mIGFsbCB0aGUgdGhpbmdzIG15IHRheGVzIGRvbiBwYXkgZm9yOiBoZWFsdGhjYXJlIGZvciBhbGwsIGVxdWFsIGFjY2VzcyB0byB1bml2ZXJzaXRpZXMsIGhpZ2ggc3BlZWQgcmFpbC4gCkhvd2V2ZXIsIHRoaXMgbmV3IGFwcHJvYWNoIHdpbGwgYWxsb3cgdXMgdG8gcHJvdmlkZSBtb3JlIHN1cHBvcnQgZm9yIG91ciBwcmltYXJ5IGNhcmUgcGh5c2ljaWFucyBpbiBtYW5hZ2luZyB0aGVpciBwYXRpZW50cycgcGFpbiBhbmQsIG92ZXIgdGltZSwgcHJvdmlkZSB0aG9zZSBwYXRpZW50cyBtb3JlIGFjY2VzcyB0byBpbnRlZ3JhdGl2ZSB0aGVyYXBpZXMgc3VjaCBhcyBhY3VwdW5jdHVyZSBhbmQgbWFzc2FnZSB0aGVyYXB5IGFzIGFuIGFsdGVybmF0aXZlIHRvIGNvbnZlbnRpb25hbCBtZWRpY2F0aW9uIGJhc2VkIG1hbmFnZW1lbnQuIlNpbHZlcm5lc3QsIGEgQm91bGRlciBiYXNlZCwgb25saW5lIHJvb21tYXRlIG1hdGNoaW5nIHNlcnZpY2UgZm9yIGJvb21lcnMgYW5kIGVtcHR5IG5lc3RlcnMsIGFubm91bmNlZCB0b2RheSB0aGF0IE1pa2UgRW1lcnNvbiBoYXMgam9pbmVkIHRoZSBjb21wYW55IGFzIGNoaWVmIG9wZXJhdGluZyBvZmZpY2VyLi4gCiJXaGVuIHlvdSBhcmUgb3BhcXVlIGFib3V0IGZ1bmRpbmcgc291cmNlcyBhbmQgdGhlaXIgaW5mbHVlbmNlLCB3aGVuIHlvdSBkb24ndCBkaXNjbG9zZSB0byByZWFkZXJzIHdoZXJlIHRoZSBtb25leSBpcyBjb21pbmcgZnJvbSBhbmQgd2hlcmUgdGhlIGNvbmZsaWN0cyBvZiBpbnRlcmVzdCBtYXkgYmUsIHlvdSBhcmUgcm9iYmluZyB0aG9zZSBwZW9wbGUgb2YgaW1wb3J0YW50IGluZm9ybWF0aW9uIHRoZXkgbmVlZCB0byBqdWRnZSBjcmVkaWJpbGl0eSwiIHNoZSBzYWlkLiBJdCBzaG91bGQgYmUgbm90ZWQgdGhhdCBhIDIwMTcgUGV3IFJlc2VhcmNoIENlbnRlciBzdHVkeSBmb3VuZCB0aGF0IGFjcm9zcyB0aGUgcG9saXRpY2FsIHNwZWN0cnVtLCBsb2NhbCBuZXdzIGlzIGNvbnNpZGVyZWQgbW9yZSB0cnVzdHdvcnRoeSB0aGFuIG5hdGlvbmFsIHNvdXJjZXMuLiAKSGUgYWxzbyBoZWxkIGEgcHJpdmF0ZSBwaWxvdCBsaWNlbnNlIGFuZCBsaWtlZCB0byBnYW1ibGUgdGVucyBvZiB0aG91c2FuZHMgb2YgZG9sbGFycyBhdCBhIHRpbWUgcGxheWluZyBoaWdoIHN0YWtlcyB2aWRlbyBwb2tlci4uIApIb25lc3RseSBtb3N0IHJlY2VudCBnYW1lcyBoYXZlIHRha2VuIHRoaXMgb3V0KEJGViwgQk80LCBSNlMpIGFuZCBJIGNhbiBkZXRlY3QgaXQgaW4gQXBleCBlaXRoZXIuIFRoZSByZWFzb24gc29tZSBwZW9wbGUgZG9uIGxpa2UgaXQgaXMgaXQgY2xvc2VzIHRoZSBza2lsbCBnYXAgYmV0d2VlbiBwbGF5ZXJzIHdpdGggZ29vZCBhaW0gYW5kIHRob3NlIHdpdGhvdXQuIApZT1VSLiAKU2kgY2VydGFpbnMgZGVzIGNvbnZpdmVzIG5lIHNvbnQgcGx1cyBvbW5pdm9yZXMsIHNveWV6IHRvbHJhbnQoZSkgc2kgY2Ugbidlc3QgcGFzIHZvdXMgcXVpIHJlZnVzZXogdW4gcGxhdCBldCBzb3lleiB1biBwZXUgc291cGxlIHNpIGMnZXN0IHBvc3NpYmxlIGV0IHJhc3N1cmV6IGF1c3NpIGxlcyBodGVzIHN1ciBsZSBmYWl0IHF1ZSB2b3VzIG4nYWxsZXogcGFzIG1vdXJpciBkZSBmYWltIHNpIGMnZXN0IHZvdXMgcXVpIG5lIHZvdWxleiBwYXMgZHUgY2hhcG9uIHBvdXIgY2F1c2UgZGUgbm8gdmd0YXJpc21lIG91IGRlIGxhIGJjaGUgcmljaGUgZW4gZ2x1dGVuLgoiSGUncyBwdXR0aW5nIGl0IGJhY2sgaW4gdGhlIGNsb3NldCwgdW5kZXIgaGlzIGJyZWF0aCBoZSBzYXlzLCAnSSB3b25kZXIgd2hlcmUgdGhlIHNlY29uZCBvbmUgd2VudC4nICIgUmVtZW1iZXIsIGJvdGggcGFyZW50cyBoYWQgYmVlbiBzYXZhZ2VseSBzbGFzaGVkLiBBZnRlciBFcm5pZSBmbGVkLCBSb2J5biB0aG91Z2h0IGFib3V0IHRoYXQgbWlzc2luZyBzd29yZC4gCiJJdCB3YXMgYmV5b25kIGNyYXp5OyBpdCB3YXMgY29tcGxldGUgaW5zYW5pdHkgZm9yIGhvdXJzLiBFdmVyeW9uZSB3YXMgc28gYmVhdXRpZnVsIGFuZCBzbyBmcmVlLCIgcmVjYWxscyBmb3JtZXIgUGxheWJveSBwaW4gdXAgQW5naWUgRXZlcmhhcnQuICJJZiB0aGVyZSB3YXMgYSBzdHJhaWdodCBwZXJzb24gaW4gdGhlIGhvdXNlIHRoZXkgbXVzdCBoYXZlIGZyZWFrZWQgb3V0IHdhdGNoaW5nIGV2ZXJ5b25lIGVsc2UgdHJpcC4gVGhleSB3b3VsZCBoYXZlIHRob3VnaHQgdGhleSB3ZXJlIHRoZSBvbmUgb24gZHJ1Z3MuIgpBY2NvcmRpbmcgdG8gYSBicmllZiBHb29nbGUgc2VhcmNoLCBpdCdzIGEgdGhyb3diYWNrIHRvIHdoZW4gdGhlIFVTIGFuZCBDYW5hZGEgYm90aCB1c2VkIHRoZSAiZ29sZCBzdGFuZGFyZCIgKGFsdGhvdWdoIHJlYWxseSBpdCdzIHNpbHZlci9jb3BwZXIpIGZvciB0aGVpciBjdXJyZW5jeS4gVGhlIGNvaW5zIGFyZSB0aGUgc2l6ZSB0aGV5IGFyZSBiZWNhdXNlIGF0IG9uZSBwb2ludCB0aGV5IHdlcmUgYWN0dWFsbHkgd29ydGggdGhlIGFtb3VudCBvZiBtZXRhbCB0aGV5IHdlcmUgbWFkZSBmcm9tLiAKT3RoZXIgdGhhbiB0aGF0IGl0IHJlYWxseSBkZXBlbmRzIG9uIHdoZXJlIGFuZCBmb3IgaG93IGxvbmcgd2lsbCB5b3UgYmUgc3RheWluZy4KVHJlbmRzIGluIE5ldXJvc2NpZW5jZXMgVm9sLjMyIE5vLjUKV2hlbiBJIGVudGVyZWQsIGhvcGluZyB0byBqdXN0IHBsYXkgYXJvdW5kIHdpdGggaXQsIG15IHdob2xlIHNpbSB3YXMgZ2xpdGNoeSwgYW5kIGl0cyB3aG9sZSBib2R5IHdhcyBwaXRjaCBibGFjay4gSSB0aG91Z2h0IGl0IHdhcyBqdXN0IGEgYnVnLCBhbmQgcmVkb3dubG9hZGVkIGl0LiBTYW1lIHByb2JsZW0uIApXZW5uIG1hbiBzaWNoIGRpZSBCZWdybmR1bmcgd2VpdGVyIGFuc2NoYXV0LCBzbyBzdGVodCBkb3J0OgpUaGVpciBnb2FsIGlzIHNpbXBsZTogQmVjb21lIGFuIG92ZXJuaWdodCBzZW5zYXRpb24gYW5kIHVzZSB0aGVpciBuYXRpb253aWRlIG1lZGlhIGV4cG9zdXJlIHRvIHByb21vdGUgdGhlaXIgc2Nob29sIGFuZCBicmluZyBpbiBhIHdhdmUgb2YgbmV3IHN0dWRlbnRzIHRvIHRoZSBhaWxpbmcgYXJlYS4gQSBzaW1wbGUgYnV0IHNvbGlkIHBsYW4sIHRoZXkgZmlndXJlLiBOYXR1cmFsbHksIHRoZXkgbmVydm91cyBhbmQgd29uZGVyIGlmIHRoaXMgcGxhbiBjYW4gcmVhbGx5IHN1Y2NlZWQsIGJ1dCBmb3IgYmV0dGVyIG9yIHdvcnNlIHRoZWlyIG5ldyBqb3VybmV5IGhhcyBiZWd1bi4uIApJIGxvc3QgICBqdXN0LiBBbmQgaGUgbG9va2VkIGF0IG1lIGFuZCByYWlzZWQgYSBxdWl6emljYWwgZXllYnJvdyBhcyBoZSB3ZW50IGFib3V0IHN0YWNraW5nIGhpcyBjaGlwcywgdGhlIGNoaXBzIHRoYXQgaGFkIHVudGlsIGp1c3QgcmVjZW50bHkgYmVlbiBteSBjaGlwcywgYW5kIHNhaWQsICJVbmx1Y2t5Ii4gSSdsbCBuZXZlciBrbm93IGlmIGhlIG1lYW50IGl0IGFuZCBoZSdsbCBuZXZlciBrbm93IGlmIEkgd2FzLiAKVGhlIGVzdGltYXRlZCBzd2F5aW5nIGFyZWEsIGNvbXB1dGVkIGZyb20gdGhlIGVsbGlwc2Ugb2YgY29uZmlkZW5jZSB1bmRlciBleWVzIGNsb3NlZCBzdGFuZGluZyBvbiBmb2FtIChFQ0YpLCB3YXMgYWxzbyB1c2VkIGFzIGEgUEkgcGFyYW1ldGVyLiAKQ2FuIHBsYXkgYSBvbmUgZ29hbGllIHN5c3RlbSBpbiB0aGUgV2VzdC4gVGhlcmUgdG9vIG11Y2ggdHJhdmVsLCB0b28gbWFueSBsYXRlIG5pZ2h0cywgc2FpZCBIaXRjaGNvY2suIApDaGluYSBoYXMgbW9yZSBpbmVxdWFsaXR5IHRoYW4gdGhlIFVTLiBFdGhuaWNhbGx5IHRoZXkgYXJlIDkwJSBIYW4sIGJ1dCB3aXRoaW4gdGhlIEhhbiB0aGVyZSBhcmUgbGluZ3Vpc3RpYyBhbmQgY3VsdHVyYWwgc3ViZ3JvdXBzLiBBbmQgdGhhdCAxMCUgbWlub3JpdGllcyA9IDEzMCBtaWxsaW9uIHBlb3BsZS4gVGhleSBhcmUgYWxzbyB3YXkgd29yc2UgdG8gc2VwYXJhdGlzdCBtaW5vcml0aWVzIGxpa2UgVGliZXRhbnMgYW5kIFVpZ2h1cnMuClNoZSBzYXlzIHNoZSBoYXMgZXhwbG9yZWQgd2l0aCBhIHZhcmlldHkgb2YgZm9vZHMgYW5kIGVuZXJneSB0cmVhdG1lbnRzLCBidXQgQXl1cnZlZGEgbWFkZSB0aGUgbW9zdCBzZW5zZSB0byBoZXIuClRoZSAyMTcgMTg1IEhvdXNlIHZvdGUgVGh1cnNkYXkgY2FwcGVkIGEgdHVtdWx0dW91cyBkYXkgaW4gd2hpY2ggVHJ1bXAgc3VycHJpc2VkIGZlbGxvdyBSZXB1YmxpY2FucyBieSBpbnNpc3RpbmcgaGUgd29uJ3Qgc2lnbiBhIGJpbGwgd2l0aG91dCB0aGUgYm9yZGVyIG1vbmV5LCBhZnRlciB0aGUgV2hpdGUgSG91c2UgaGFkIGhpbnRlZCBoZSB3b3VsZCBhY2NlcHQgaXQuIApHaXptb2NoZWV6ZSAgNCBwb2ludHMgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KRGVsdGluIEphcWsgaXMgc21hbGxlciB3aXRoIGZld2VyIGdhbWVzLCB0YWJsZXMgYW5kIHBvc2l0aW9ucywgYnV0IHByb3ZpZGVzIGdvb2Qgc2VydmljZS4gVGhpbmsgMzAsMDAwIHNxLiAKUG9rZXIgcHJvcyBjb21lIHRvIENhc3RsZWJhcgpIb3cgQmV0MzY1J3MgRGVuaXNlIENvYXRlcyBoaXQgaGVyIG93biBqYWNrcG90ClJlZHVjZSBiYWNrZW5kIGNvc3RzIGJ5IGVuYWJsaW5nIHlvdXIgb3BlcmF0aW9ucyBkZXBhcnRtZW50IHRvIGNvbm5lY3Qgd2l0aCBvdXIgZGF0YWJhc2UuIApTdXJwcmlzaW5nbHksIHdoZW4gSSAicHJlYWNoIHRoZSB0cnV0aCIgdG8gb3RoZXJzdGhleSB0dXJuIGEgZGVhZiBlYXIuIApZb3VyIGFzc2VydGlvbiB0aGF0IHRoZXJlIGlzICJhbG1vc3QgbmV2ZXIgYW55IG5lZWQiIGZvciBNUkkgY29udHJhc3QgaXMgYWJzdXJkOyBpdCBpcyBlc3NlbnRpYWwgZm9yIGVhcmx5IGRldGVjdGlvbiBvZiBjYW5jZXIgYW5kIG1vbml0b3JpbmcgbXVsdGlwbGUgc2NsZXJvc2lzLiAKSSBhbSBjb29sIHdpdGggdGhlIGRpc2N1c3Npb24gb2YgbWFsZSBhc3N1YWx0LiAKMS4gRG9uIG1ha2UgcGxheXMgYXQgc21hbGwgcG90cy4gCkJ1dCBDYXJhd2F5J3MgZGVjaXNpb24gdG8gYXBwcm9hY2ggcG9saWNlIG9mZmljZXJzIGFuZCBvdGhlcnMgYXQgQ2l0eSBIYWxsIHdhcyBub3QgYXBwcm9wcmlhdGUsIHNoZSBzYWlkLgpBbmQgdGhlIHBvaW50IG9mIG15IG9yaWdpbmFsIHBvc3Qgd2FzIHRvIGNhbGwgb3V0IHRoZSBndXkgSSByZXBsaWVkIHRvIGJlY2F1c2UgbGV0J3MgYmUgaG9uZXN0LCBub3QgYSBzaW5nbGUgcGVyc29uIGNhbGxlZCBoaW0gYSBzaGlsbCAoSSBjaGVja2VkIHJlcGxpZXMgdG8gaGlzIHBvc3QgaW4gdGhlIHRocmVhZCwgYXQgdGhlIHRpbWUgb2YgdGhlIHBvc3QpIGFuZCBoZSBqdXN0IGNvbWVzIG91dCBvZiB0aGUgYmx1ZSBzYXlpbmcgSSdtIG5vdCBhIHNoaWxsIGluIGEgY29tbWVudCBjaGFpbiBjYWxsaW5nIG91dCB0aGF0IG9uZSBndXkgd2hvc2UgcG9zdHMgc29sZWx5IGNvbnNpc3Qgb2YgR01PLCBSb3VuZHVwLCBhbmQgTW9uc2FudG8uIApGaXJzdCwgdGhvdWdoLCBpdCdzIGltcG9ydGFudCB0byB1bmRlcnN0YW5kIHdoeSBmb290IHBhaW4gaXMgc28gY29tbW9uLiBGb3IgcmVsYXRpdmVseSBzbWFsbCBib2R5IHBhcnRzLCB0aGUgZmVldCBhcmUgYW1hemluZ2x5IGNvbXBsZXggc3RydWN0dXJlczogRWFjaCBvbmUgY29udGFpbnMgMjYgYm9uZXMsIDU2IGxpZ2FtZW50cywgMzggbXVzY2xlcywgYW5kIGFuIGV2ZW4gZ3JlYXRlciBudW1iZXIgb2YgbmVydmVzIGFuZCBibG9vZCB2ZXNzZWxzLiAKVGhlIFphZ3MgKDkgMikgc3VmZmVyZWQgY29uc2VjdXRpdmUgbG9zc2VzICAgdGhhdCBoYXNuJ3QgaGFwcGVuZWQgc2luY2UgRmVicnVhcnkgMjAxNCAgIGFuZCB0aGlzIG9uZSBvZmZlcmVkIHNvbWUgb2YgdGhlIHNhbWUgYnJlYWtkb3ducyB0aGF0IHN1cmZhY2VkIGFnYWluc3QgVGVubmVzc2VlIGluIFBob2VuaXguIFRoZSBWb2x1bnRlZXJzIGNvbGxlY3RlZCAxNiBvZmZlbnNpdmUgcmVib3VuZHMuIE5vcnRoIENhcm9saW5hIHB1bGxlZCBkb3duIDE0LCBtYWtpbmcgR1UgcGF5IGZvciBuZWFybHkgZXZlcnkgb25lIHdpdGggYSAyNyAwIGVkZ2UgaW4gc2Vjb25kIGNoYW5jZSBwb2ludHMuIEJhbGxnYW1lLgpDZWxhIHZhdXQgcG91ciBtb2kgdmlkZW1tZW50LiBQcnZvaXIgbCdlZmZpY2FjaXQgbmVyZ3RpcXVlMi4gClNvbWUgb2YgdGhlIHN0b3JpZXMgb24gVHJlayB3ZXJlIHJlYWxseSBoYW1wZXJlZCBieSBoYXZpbmcgdG8gcmV0YWluIHRoZSBzdGF0dXMgcXVvIGF0IHRoZSBlbmQgb2YgZXZlcnkgZXBpc29kZS4gClRoYXQgYWxsIHlvdSBuZWVkLiBFdmVuIGlmIGl0IG9uZSBzaGl0LCBidXQgY2hhbmdpbmcgdGhlIHNoaXJ0L3RpZSBjb21ibyBpdCB3aWxsIGdpdmUgeW91IHNldmVyYWwgZGlmZmVyZW50IG91dGZpdCBjaG9pY2VzLiAKMyBhbmQgNCB3b3VsZCBuZWVkIHRvIHdpbiBhbG1vc3QgYWxsIHRoZWlyIGdhbWVzIGFnYWluc3QgbG93ZXIgc2VlZGVkIHRlYW1zIGluIG9yZGVyIHRvIHRha2UgdGhlIGxhc3QgMiBiaWRzIHRvIHJlZ2lvbmFscy4gTm90IGEgdmVyeSBmYWlyIHNoYWtlIGZvciAzIGFuZCA0Li4gCklmIHlvdSBrZWVwIHJlYWNoaW5nIG91dCB0byBoaW0gZGVzcGl0ZSB0aGUgdGVlbmFnZSBzbHVtcCBJIGhvcGUgaGUgc2VlcyBpdCBhbmQgY29tZXMgYXJvdW5kIGxpa2Ugb3VyIHJlbGF0aW9uc2hpcCBkaWQuIEZvciBhIHRlZW4geW91IGFyZSBhbiBhZHVsdCByaWdodCBub3cgYW5kIGFkdWx0cyBqdXN0IGFyZW4ndCBhbGxvd2VkIHRvIGJlIGNvb2wuClRoZXJlIHdhcyBhIGxvdCBvZiBhbGNvaG9sIGFuZCBHb2Qga25vd3Mgd2hhdCBvdGhlciBkcnVncyBpbmZsdWVuY2luZyBhIGxvdCBvZiB0aGUgYmVoYXZpb3JzLCBzbyBubyBtYXR0ZXIgd2hhdCwgdGhlIG91dGNvbWUgd2Fzbid0IGdvaW5nIHRvIGJlIGEgZ29vZCBvbmUsIiBzaGUgd3JvdGUuLiAKVGhlIGNsdWIgc29uZyBpcyBhIHZlcnNpb24gb2YgIkpvaW4gaW4gdGhlIENob3J1cyIgd2l0aCBzb21lIHdvcmRzIGFsdGVyZWQgZnJvbSB0aGUgQUZMIEthbmdhcm9vcyB2ZXJzaW9uLiAKR2V0IHJlZGRpdCBwcmVtaXVtSGF2ZSB5b3UgZXZlciB3YW50ZWQgdG8gYnV5IGEgZ2FtZSBvbiBTdGVhbSBidXQgZGlkbiBrbm93IGlmIGl0IHdhcyBnb29kPyBIYXZlIHlvdSBldmVyIGhhZCBqdXN0IGVub3VnaCBtb25leSBmb3IgYW4gaW5kaWUgZ2FtZSBidXQgZGlkbiBrbm93IHdoZXRoZXIgaXQgd2FzIHdvcnRoIGJ1eWluZz8gSGF2ZSB5b3UgZXZlciBhc2tlZCB5b3Vyc2VsZiwgIlNob3VsZCBJIGJ1eSB0aGlzIGdhbWU/IgpIZSBzYWlkIGhlIHdhcyBzaG9ja2VkIGJ1dCBsZXQgaGVyIGZpbmlzaC4gCkkgaGl0IDEgOCBwYWlyIG9uIHRoZSBmbG9wIGFuZCAxIDEwIHBhaXIgb24gdGhlIHR1cm4uIApJJ20ganVzdCBzcGVlY2hsZXNzIHRoYXQgYSBmYXRoZXIgd291bGQgaGVscCBoaXMgZGVyYW5nZWQgbW9tbXkgaGFybSBoaXMgeW91bmcgY2hpbGRyZW4uIFRoYXQgaGUncyBhbGxpZWQgd2l0aCBhbm90aGVyIGFkdWx0IHRvIGVzc2VudGlhbGx5IHRlcnJvcml6ZSBvbmUgb2YgaGlzIG93biBvZmZzcHJpbmcuIEl0J3MgbGlrZSBoZSdzIGZvcmdvdHRlbiB0aGF0IGhlIGFjdHVhbGx5IEhBUyBhIGZhbWlseSBTVEJYIE9QIGFuZCBoaXMgZnVja2luZyBjaGlsZHJlbiBhbmQgaGFzIHRvdGFsbHkgcmV2ZXJ0ZWQgdG8gYmVpbmcgbW9tbXkncyBiZXN0IGVzdCB3aWRkbGUgc25vb2sgdW1zIHdobyB0aGlua3MgaXQncyBhIGdvb2QgaWRlYSB0byBoZWxwIHJhZ2luZyBtb21teSBzY2FyZSB0aGUgY3JhcCBvdXQgb2YgeW91bmcga2lkcy4gCkEgZ29vZCBzdGFydGluZyBwb2ludCBmb3IgZ2V0dGluZyBpbnRvIGJldHRlciBwb2tlciBjaGlwcywgd2l0aG91dCBzcGVuZGluZyBhIGZvcnR1bmUsIGFyZSB0aGUgTWlsYW5vIGNoaXBzLgpTdXNhbiBCYXJhY2sKQXJyYW5nZSBhbGwgdGhlIGdpZnQgaXRlbXMgbmljZWx5IGluIHRoZSBjb250YWluZXIuIFdpdGggdGhlIGJhc2tldCBmdWxseSBkZWNvcmF0ZWQsIGFycmFuZ2UgYWxsIHlvdXIgZ2lmdHMgbmljZWx5IHNvIHRoYXQgZXZlcnkgaXRlbSBzaG93cyBmcm9tIHRoZSBpbnNpZGUuIE9uY2UgZG9uZSwgYWRkIHNvbWUgZmluaXNoaW5nIHRvdWNoZXMgdG8gdGhlIGJhc2tldCBzdWNoIGFzIGFkZGluZyBhIHBlcnNvbmFsIG5vdGUsIGFkZGluZyBtb3JlIGRlY29yYXRpb25zIGxpa2UgYmFsbG9vbnMgYW5kIGZsb3dlcnMsIGFuZCB0aGUgbGlrZS4KTWF5YmUgSSB3YXMgYmFtYm9vemxlZCwgbWF5YmUgYSBzbHkgU3RyZWV0IGR1ZGUgcHVsbGVkIG9uZSBvdmVyIG1lLCBidXQgaXQgZmVsdCBnZW51aW5lIGFuZCBJIHN0aWxsIHRoaW5rIGFib3V0IGl0IHRvIHRoaXMgZGF5LgpIaXN0b3JpY2FsIENsaW1hdGUgRGV0YWlsIGFuZCBXZWF0aGVyIEFkdmlzb3J5IFNlcnZpY2UgZm9yLiAKIDggcG9pbnRzICBzdWJtaXR0ZWQgMTUgZGF5cyBhZ28uIApNY0dpbGxpcyBkb2VzbiBwcmVkaWN0IHRoaXMgYmVjYXVzZSBqdXN0IGxpa2UgaG93IE9yZ2EgaXMgYmxpbmRlZCBieSBoaXMgcHJvbWlzZSB0byBNaWthLCBoZSBpcyBibGluZGVkIGJ5IGhpcyBvd24gYmVsaWVmIGluIHRoZSBvZiBCYWVsIHBvd2VyLkJyaW5naW5nIHVzIGJhY2sgdG8gbXkgbGlua2VkIGltYWdlLCB0aGVyZSBubyBwb2ludCBiZWluZyBvbiB0aGUgdGhyb25lIGlmIHlvdSBoYXZlIG5vdGhpbmcgdG8gcnVsZSBvdmVyIGFzIHNob3duIGJ5IGhvdyBlbXB0eSB0aGlzIHJvb20gaXMgbm93IGRlc3BpdGUgZmluYWxseSBoYXZpbmcgc29tZW9uZSBhdCBpdHMgaGVhZC5NZWdhIER1bmUgc3BvaWxlcnMganVzdCBiZWNhdXNlIEkgaGFkIGEgdGhvdWdodEdvaW5nIGJhY2sgdG8gbXkgbGlua2VkIHBvc3QgZnJvbSBhIGNvdXBsZSBvZiBlcGlzb2RlcywgdGhlIGRvd25mYWxsIG9mIE9yZ2EgaGFzIG1vc3RseSBiZWVuIHByb21wdGVkIGJ5IHRoZSBncm93aW5nIGFic2VuY2Ugb2YgdGhvc2UgYXJvdW5kIGhpbS4gClRoZXkgY291bGQgZGl2aWRlIHRoZSBwb2tlciBjaGlwcyBpbnRvIDQgcGlsZXMsIHdoaWNoIHdvdWxkIHNob3cgdGhhdCB0aGVyZSBhcmUgNSBjaGlwcyBpbiBlYWNoIHBpbGUuLiAKQXMgd2lsbCBhIGRyaXp6bGUgb2Ygb2xpdmUgb2lsIG92ZXIgdGhlIGZpbmlzaGVkIGRpc2guLiAKQ2hpbGRyZW4gYXQgdGhpcyBzdGFnZSBhcmUgYWJsZSB0byBmb3JtIGFuZCB0ZXN0IGh5cG90aGVzaXMgYW5kIHRoZW4gbWFrZSBkZWR1Y3Rpb25zIGJhc2VkIG9uIHRoZWlyIG9ic2VydmF0aW9ucy4gVGhpcyBpcyB3aGVyZSB0aGUgY29nbml0aXZlIGFiaWxpdGllcyByZXF1aXJlZCBmb3Igc2NpZW50aWZpYyB0aG91Z2h0IGJlY29tZSBob25lZC4KU28gbm8gdGhpcyBpc24gYWJvdXQgcmVsaWdpb3VzIGZyZWVkb20uIFRoaXMgaXMgYWJvdXQgcmVzdHJpY3RpbmcgcGVvcGxlcyByaWdodHMuIAooNyBtb250aHMgb2Ygd2hpY2ggd2VyZSB0aHJvd24gb3V0IGluIGEgcGFzdHVyZSB3aGVyZSBzaGUgYmVjYW1lIGVtYWNpYXRlZC4gCk11Y2ggZG9lcyBmYXNoaW9uIG1hdHRlciB0byBpbmR1c3RyaWFsIHdvcmtlcnM/IElmIGl0IGRvZXMsIHdoYXQgdGhlIHJpZ2h0IHByaWNlIHBvaW50PyBUaGF0IGFzc3VtaW5nIHRoZSBidXllciBpcyB0aGUgZW1wbG95ZWUuLiAKVGhlIGZlYXIgaXMgZm9yIHRob3NlIHdobyBkb24ndCBkbyB0aGVpciByZXNlYXJjaCBhbmQgd2FuZGVyIGludG8gdGhpcyBtb3ZpZSB1bmF3YXJlIG9mIHdoYXQgdGhleSdyZSBhYm91dCB0byBzZWUuIApJIGxpdmUgbmVhciBhIHBsYWNlIHdoZXJlIEkgY2FuIHBsYXkgTGl2ZSBMaW1pdCBIb2xkIEVtLiAKQSBQcmFjdGljYWwgR3VpZGUgdG8gRXNjYWxhdGlvbiBwdXRzIFdhcmxvcmQgZXJhIFNraXR0ZXIgaW4gdGhlIHdvcmxkIG9mIHRoZSB3ZWIgc2VyaWFsIEEgUHJhY3RpY2FsIEd1aWRlIHRvIEV2aWwuIFNoZSBicmVha3MgYXdheSBmcm9tIHRoZSBwcm90YWdvbmlzdCBncm91cCBhbmQgc2V0cyBvdXQgb24gaGVyIG93biBpbiBzaG9ydCBvcmRlci4gT24gaGlhdHVzLgpEZW5zaXR5IG9mIE11c2NsZSBTcGluZGxlcyBQZXIgR3JhbSBPZiBNdXNjbGUgVGlzc3VlCk1yIE1vcm9uZXksIHdobyBpcyBtb3ZpbmcgdG8gTWVsYm91cm5lIHRvbW9ycm93LCBzYWlkIGhlIHdvdWxkIG5vdyBoYXZlIHRvIGJ1eSBhIGRvdWdobnV0IHBpbGxvdyBmb3IgaGlzIGZsaWdodCBpbnRlcnN0YXRlLjIwUmVhZCBNb3JlCkl0J3MgYWxsIGEgZmFyIGNyeSBmcm9tIHRoZSBzZXJlbml0eSB0aGF0IFJlYWwgTWFkcmlkIGFyZSBleHBlcmllbmNpbmcuIFRoZXkgYXJlIHNldmVuIHBvaW50cyBjbGVhciBvZiBKdXZlbnR1cyBnb2luZyBpbnRvIHRoaXMgZ2FtZSBhZ2FpbnN0IGJvdHRvbSBwbGFjZWQgQ29wZW5oYWdlbiwgYW5kIGhhdmUgYWxyZWFkeSBxdWFsaWZpZWQgZm9yIHRoZSBrbm9ja291dHMuCk9wZW5zIG9uIEFwcmlsIDExLCB0aGVyZSBhcmUgYWx3YXlzIGEgZmV3IGdvb2QgbGluZXMuIExpa2UgIkkgYW0gdGhlIHZpbm5lciEiIE9yLCAiSSBzY3JlYW0sIHlvdSBzY3JlYW0sIHdlIGFsbCBzY3JlYW0gZm9yIGljZSBjcmVhbS4iIFRob3NlIG9mIHlvdSB3aG8gaGF2ZSBzZWVuIHRoZSBtb3ZpZXMgdGhlc2UgbGluZXMgYXJlIGZyb20gcHJvYmFibHkga25vdyB3aGF0IEknbSB0YWxraW5nIGFib3V0LiBJZiB5b3UgaGF2ZW4ndCwgeW91IHNob3VsZCB3YXRjaCBhbGwgb2YgSmltIEphcm11c2NoJ3MgbW92aWVzIGFuZCBoZWxwIHVzIHBpY2sgdGhlIGZpdmUgYmVzdC4gCklmIHlvdSBrbm93IHRoZSBqYXp6IHBpYW5vIGxpdGVyYXR1cmUsIHlvdSBrbm93IHRoYXQgdGhpcyBzdHVmZiByZWFsbHkgZml0cyB0aGUga2V5Ym9hcmQsIHNvIHlvdSBzZWUgc3R1ZmYgbGlrZSB3aGF0IGluIGJhcnMgMiAzIG92ZXIgYW5kIG92ZXI6IG1lbG9keSBjYXJyaWVkIGluIHNvcHJhbm8sIHdhbGtpbmcgYmFzcyBsaW5lIHRvIGhhcm1vbml6ZSAoc2hpdCwgd2UgY291bGQgYmUgd3JpdGluZyBhIEJhY2ggY2hvcmFsZSEpIGFuZCB0aGVuIGNvbXBlZCBjaG9yZHMgc3VuZyBieSB0ZW5vcnMgYW5kIGFsdG9zLiAKVGhpcyBpcyBjb21wbGV0ZWx5IHdyb25nIGkgd2FzIGxhdGUgdG8gdGhlIHRyYXlhIGdhbWUgYW5kIGdvdCAxIGluIG15IHNoYXJkIGFnYWluc3QgbWFzcyB0cmF5YXMgYW5kIEkgdXNlZCBCYXN0aWxsYSxHSyxIeW9kYSxZb2RhIGFuZCBFenJhIGFuZCBJIGNhbiB0ZWxsIHlvdSB0aGF0IGpvbGVlIHdhcyBuZXZlciBhcyBnb29kIGFzIEhZIGJlY2F1c2UgdGhlIG1hc3MgYXR0YWNrIGRhbWFnZSB3YXMgc28gaW1wb3J0YW50IHRvIGJlIGFibGUgdG8ga2lsbCBUcmF5YXMgaGVhbHRoIHJlZ2VuLiBJIGV2ZW4gaGFkIEpvbGVlIG1heGVkIGFuZCBjYW4gdGVsbCB5b3UgaGUgd2FzbnQgYXMgZ29vZC4gSm9sZWUgaXMgZ29vZCBpbiBhIHJldmFuIHRlYW0gYmVjYXVzZSBoZSBoYXMgYSB0b24gb2YgaGVhbHRoIGFuZCBSZXZhbnMgbGVhZCBtYWtlcyBoaW0gcmVnZW4gZXZlcnkgdGltZSBoZSBjb3VudGVyIGF0dGFja3MuLiAKU3BsYXNoaW5nIHRoZSBQb3QKRXZlcnl0aGluZyBpbiB0aGUgc2hvcCBpcyAyNSUgb2ZmIG9uIEZyaWRheSwgc28gaWYgeW91J3JlIHJlYWR5IHRvIGFkZCBhIGxpdHRsZSB6aW5nIG9mIHNwcmluZyB0byB5b3VyIHdhcmRyb2JlLCB0aGlzIGlzIHRoZSB0aW1lIHRvIGRvIGl0LiAKSSB3YXMgbmV2ZXIgYWJ1c2VkIG9yIGV2ZW4gZmVsdCB3ZWlyZCBhYm91dCBhbnkgY2xlcmd5IEkgaW50ZXJhY3RlZCB3aXRoLCBub3IgZGlkIEkga25vdyBhbnlvbmUgd2hvIHdhcyBhYnVzZWQgYnkgY2xlcmd5LCBub3IgaGF2ZSBJIGhlYXJkIG9mIHNleHVhbCBhYnVzZSBhbGxlZ2F0aW9ucyBhZ2FpbnN0IGNsZXJneSBhdCBhbnkgcGFyaXNoIEkgYXR0ZW5kZWQgQ2h1cmNoIGF0Li4gClRoZSBpbXBvcnRhbnQgdGhpbmcgdGhlbiBpcyB0byBzdGF5IGNhbG0sIGRvIHdoYXQgeW91IGNhbiB0byBjb250cm9sIHRoZSBzaXR1YXRpb24sIGFwcGx5IGZpcnN0IGFpZCBhcyBuZWVkZWQsIGFuZCBnZXQgaGVyIHRvIGEgdmV0IGFzIHF1aWNrbHkgYW5kIHNhZmVseSBhcyBwb3NzaWJsZS4gCg==|<---