--->|VGhhdCBzb3VuZHMgbGlrZSBhIGdyZWF0IHBsYW4gaW4gdGhlIGN1cnJlbnQgY2xpbWF0ZS4gSSBmZWVsIGxpa2UgdGhlcmUgc28gbXVjaCBtb3JlIHBsYW5uaW5nIHJlcXVpcmVkIG5vdyB0aGFuIDUgb3IgNiB5ZWFycyBhZ28uIEJhY2sgdGhlbiBpdCB3YXMganVzdCBhIHNpbXBsZSAicmVhZCB1cCBvbiB3aGF0IGNhcmRzIG5vdCB0byBnZXQsIGdldCBldmVyeXRoaW5nIGVsc2UsIGFsc28ga25vdyBhYm91dCBBbWV4IDEgcGVyIGxpZmV0aW1lIi4gCldXRSBpcyBhIGZhbWlseSBidXNpbmVzcy4gR3Jvd2luZyB1cCB3YXRjaGluZyBteSBmYXRoZXIsIFdXRSBDRU8gVmluY2UgTWNNYWhvbiwgd29yayB3aXRoIGVtcGxveWVlcyBhdCBldmVyeSBsZXZlbCBvZiBoaXMgY29tcGFueSwgd2hpY2ggaW5jbHVkZWQgZ2l2aW5nIGhpcyBmdWxsIGF0dGVudGlvbiB0byBldmVyeW9uZSBmcm9tIHRoZSBjdXN0b2RpYW4gdG8gYSBoaWdoIGxldmVsIGV4ZWN1dGl2ZSwgaGVscGVkIHRlYWNoIG1lIHRoZSB2YWx1ZSBvZiB0cmVhdGluZyBldmVyeW9uZSBhcyBpZiB0aGV5IHdlcmUgYSB0cnVzdGVkIHJlbGF0aXZlLiBJbiB0aGUgcmluZywgSSdtIG1lYW4sIHllcywgYnV0IEknbSBhbHNvIHJhdy4gQW5kIG91dHNpZGUgaW4gdGhlIHJlYWwgd29ybGQsIGl0IGhlbHBzIGJ1c2luZXNzIGxlYWRlcnMgd2hvIGFyZSBvZnRlbiBzZWVuIGFzIHVuYXBwcm9hY2hhYmxlIHRvIGJlIHJhdywgdG9vLiBJdCBnaXZlcyB5b3Ugc29tZXRoaW5nIGV2ZXJ5IGxlYWRlciBuZWVkczogdGhlIGFiaWxpdHkgdG8gcmVsYXRlLiBXaGVuIHBlb3BsZSBmaW5kIG91dCB5b3UgaGF2ZSBldmVyeWRheSBwcm9ibGVtcyB0aGF0IHlvdSBnZXQgZGVwcmVzc2VkLCB0aGF0IHlvdSd2ZSBnYWluZWQgYSBmZXcgcG91bmRzLCB0aGF0IHlvdSBkaWRuJ3QgZ2V0IG11Y2ggc2xlZXAgYmVjYXVzZSB5b3VyIGtpZHMgd2VyZSB1cCBoYWxmIHRoZSBuaWdodCBpdCBsZXRzIHRoZW0gc2VlIHlvdSBpbiBhIHdob2xlIG5ldyBsaWdodC4gSXQgYWxzbyBzZW5kcyBhIHNpZ25hbCB0byB0aG9zZSBhcm91bmQgeW91IHRoYXQgdGhleSB0b28gY2FuIGJyaW5nIHRoZWlyIGF1dGhlbnRpYyBzZWx2ZXMgdG8gd29yay4KSSByZXNvcnRlZCB0byBsYXlpbmcgYSBiYWcgb2YgaWNlIHRoZXJlIFN1bmRheSBuaWdodCBhcyBJIHdhdGNoZWQgdGhlIHN1cGVyIGJvd2wgaG9waW5nIGlmIGl0IHdhcyBqdXN0IExPIChsaXR0bGUgb25lKSB0aGF0IGl0IHdvdWxkIGVuY291cmFnZSBoZXIgdG8gc2Nvb2NoIG9uIG91dCBvZiB0aGVyZSEgTm8gc3VjaCBsdWNrLiAKODcgcG9pbnRzICBzdWJtaXR0ZWQgMTEgbW9udGhzIGFnbwpUaGV5IG5vdCBhbnkga2lua2llciBmcm9tIHdoYXQgSSBjYW4gb3ZlcmhlYXIgKHRob3VnaCB0byBiZSBmYWlyLCBJIGhhdmUgemVybyBkZXNpcmUgdG8ga25vdykgYnV0IGl0IGlzIGxlc3MgImJhZCIgZm9yIGxhY2sgb2YgYSBiZXR0ZXIgdGVybSB0byBlbmpveSBsaWdodCBib25kYWdlIG9yIHRoZSBsaWtlLiBUaGVpciBzZXggZWQga25vd2xlZGdlIGlzbiBtdWNoIGJldHRlciwgYnV0IGluIHRoZWlyIGRlZmVuc2UgdGhlIGNsYXNzIGhhc24gaW1wcm92ZWQgZWl0aGVyIGFuZCB0aGV5IGdldCBsaXRlcmFsbHkgZGlzb3duZWQgZm9yIHBpY2tpbmcgdXAgYmlydGggY29udHJvbCB3aGVyZSBzb21lb25lIHdvdWxkIHNlZSB0aGVtLiAKSHRwb0h6d2dCdXV1ICAyIHBvaW50cyAgc3VibWl0dGVkIDIzIGRheXMgYWdvCkxhZHkgR2FHYSByZWxlYXNlZCBoZXIgZGVidXQgYWxidW0gVGhlIEZhbWUgb24gOSBKYW51YXJ5IDIwMDkuIApNeSBjaGFyYWN0ZXIgaW4gYSBjYW1wYWlnbiBydW4gYnkgYSBmcmllbmQgb2YgbWluZSBpcyBlc3NlbnRpYWxseSB0aGUgIndlYWJvbyB3YXJyaW9yIiBhcyBhIHNhbXVyYWkuIEJlY2F1c2Ugb2YgdGhpcywgSSBnb3QgYSBzaWduYXR1cmUgYWJpbGl0eSBjYWxsZWQgIlNob25lbiBHYXJiYWdlIiB0aGF0IGxldHMgbWUgY3JlYXRlIGEgMXYxIGFyZW5hIGFnYWluc3QgYSB0YXJnZXQgd2l0aGluIDMwIGZlZXQgb2YgbWUuIApKJ2FpIHBlbnMgYWxvcnMgIERlcyBHdGVhdXggZXQgZHUgUGFpbiwgYmVsbGUgYm91dGlxdWUgZGNvdXZlcnRlIGlsIHkgYSBxdWVscXVlcyBhbm5lcyBib3VsZXZhcmQgUGFzdGV1ci4gSidhcHByY2llIGJlYXVjb3VwIGxldXJzIHBhaW5zLCBub3RhbW1lbnQgbGEgZm9jYWNjaWEsIGxlIHB1bXBlcm5pY2tlbCBtYWlzIGplIG4nYXZhaXMgcGFzIGV1IGwnb3Bwb3J0dW5pdCBkZSBnb3RlciBsZXVycyBwdGlzc2VyaWVzIDogZW4gZmFpdCwgaidhY2h0ZSByYXJlbWVudCBkZXMgZ3RlYXV4IGRlIHB0aXNzaWVyLiBEc29ybWFpcywgbGUgZmFpdCBxdSdpbHMgc29pZW50IGluc3RhbGxzIHJ1ZSBkdSBCYWMgbGVzIHJlbmQgcGx1cyByYXBpZGVtZW50IGFjY2Vzc2libGVzLi4gClRyeSB0aGUgMjUwMCBjb25zaXN0ZW50bHkgdW50aWwgeW91ciBuZXh0IGJsb29kIHRlc3QgYW5kIHNlZSB3aGF0IHlvdXIgdmFsdWVzIGFyZS4gTXkgZ3Vlc3MgaXMgdGhhdCB0aGV5IHNob3VsZCBiZSByaWdodCBpbiB0aGUgZ29vZCByYW5nZS4gVXN1YWxseSAxMDAwIDIwMDAgSVUgd2lsbCByYWlzZSBzZXJ1bSBEIGJ5IDEwIG5nL21sLgpJbiBvcmRlciB0byBtYWtlIHRoaXMgYXMgZWFzeSBhcyBwb3NzaWJsZSwgbWFrZSB0aGUgY29zdCBvZiB0aGUgaW5pdGlhbCBidXkgaW4sIHJlIGJ1eXMgYW5kIGFkZCBvbnMgdGhlIHNhbWUgY2FzaCB2YWx1ZSBhbmQgd29ydGggdGhlIHNhbWUgbnVtYmVyIG9mIHRvdXJuYW1lbnQgY2hpcHMuCkkgaGF2ZSBhIHByb2JsZW0gcmVsYXRlZCB0byBhIGxvb3BpbmcgbWVjbmFuaXNtLiAKRGlzY2VybmluZ3BlcnZlcnQgIDExMyBwb2ludHMgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KSXQgbm90IHRoYXQgdGhlIGZldHVzIHdhcyBldmVyIGlubm9jZW50LiBUbyBtb2Rlcm5pdHksIENocmlzdGlhbml0eSBzYXcgdGhlIGZldHVzIGFzIGJhdGhlZCBpbiBzaW4uIApQcmFjdGljZSB0aGlzIGF0IGNvbXBhbnkgZ2F0aGVyaW5ncyBvciBuZXR3b3JraW5nIGV2ZW50cywgd2hlcmUgeW91IGhhdmUgdGhlIG9wcG9ydHVuaXR5IHRvIHRhbGsgdG8gYSBsb3Qgb2YgcGVvcGxlIGluIGEgc2hvcnQgcGVyaW9kIG9mIHRpbWUuLiAKVGhpcyBpcyBvbmUgb2YgdGhvc2UgY3Jvc3Nyb2FkcyBmb3IgeW91ciByZWxhdGlvbnNoaXAuIFlvdSBjYW4gY29udGludWUgb24gdG9nZXRoZXIgb3IgZ28geW91ciBzZXBhcmF0ZSB3YXlzLCBhbmQgZWl0aGVyIG9wdGlvbiBpcyBva2F5LiBIZXJlIGFyZSBzb21lIHRoaW5ncyB0byBjb25zaWRlciBhbmQgdGFsayB0byB5b3VyIGh1c2JhbmQgYW5kIHRoZXJhcGlzdCBhYm91dDoKWW91IHJlYWxseSB3YW50IHRoZSBVUyBnb3Zlcm5tZW50LCBoZWFkZWQgYnkgVHJ1bXAsIHRvIHRha2UgY29udHJvbCBvZiBBTk9USEVSIGluZHVzdHJ5IGl0IGRvZXNuIHVuZGVyc3RhbmQ/IFRoZSB3YXkgcG9saXRpY2lhbnMgb3V0c2lkZSB0aGUgVVMgdXNlIGl0IHRvIGdldCB0aGVpciBjYW1wYWlnbnMgZ29pbmcsIG9yIGV2ZW4ganVzdCB0aGUgb3Bwb3NpdGlvbiBwYXJ0eSB0byB3aG9ldmVyIGlzIHByZXNpZGVudCB3aWxsIGFsbCB2YW5pc2guIEFzIGZhciBhcyB0aGUgZ292dCBjb250cm9sbGluZyB0aGUgcGxhdGZvcm0gZm9yIGNpdmlsaWFucywgeW91ciBpbWFnaW5hdGlvbiBjYW4gbGV0IHRoYXQgZ2V0IHByZXR0eSBkeXN0b3BpYW4gYnV0IGluIHJlYWxpdHkgdXNlcnMgd291bGQgYWJhbmRvbiBpdCBpbiBmYXZvciBvZiBhIG5vbiBnb3Zlcm5tZW50IHBsYXRmb3JtLi4gCkJ1dCBDYWxpZm9ybmlhIGhhcyBhbHdheXMgcmVtYWluZWQgYSBzdHJvbmcgcHJlc2VuY2UuIFRoaXMgeWVhciBDYWxpZm9ybmlhIHdpbGwgb25jZSBhZ2FpbiBiZSB0aGUgdGhlbWUgcmVnaW9uLiAKVGhleSBhcmUgd2FzdGVmdWwgc2luY2UgdGhleSBhcmUgbm90IGdvb2Qgd2l0aCBtYXR0ZXJzIG9mIGZpbmFuY2UgZHVlIHRvIGEgbGFjayBvZiBidWRnZXRhcnkgZWZmaWNpZW5jeS4gCk1hbiBjb250aW51ZWQgaGlzIHBob3RvZ3JhcGhpbmcuLiAKR3JlZW4gZmVsdCBpcyBjbGFzc2ljIGFuZCBpZiB5b3UgaGF2ZSByb29tIHRoYXQgaXMgcGFuZWxlZCBpbiBkYXJrIHdvb2Qgb3IgZGVjb3JhdGVkIHdpdGggZGFyayBjb2xvcnMsIHlvdSB3aWxsIGZpbmQgdGhhdCBpdCBjYW4gYmUgYSBncmVhdCB3YXkgdG8gZ2V0IHRoZSBlZmZlY3QgdGhhdCB5b3UgYXJlIGFmdGVyLiAKSm91cm5hbGlzdC9uZXcgbmV0d29ya3Mga2VlcCBwdXNoaW5nIHRoaXMgImJvdGggc2lkZXMiIGFyZ3VtZW50IHdoZW4gc2hvd2Nhc2luZyB0aGVzZSBhY3Rpb25zIGluIG9yZGVyIHRvIGJlICJuZXV0cmFsLiIgVGhlIGJvdGggc2lkZXMgYXJndW1lbnQgaXNuJ3QgaG9uZXN0LgpVc2luZyBwc2V1ZG8gcmFuZG9tbHkgZ2VuZXJhdGVkIG1pc2htYXNoIGZvciBzZWN1cml0eSBxdWVzdGlvbiBhbnN3ZXJzLCB0aG91Z2gsIGNvdWxkIHBvc3NpYmx5IGJlIHByb2JsZW1hdGljLiBBZnRlciBhbGwsIHNvbWUgcGxhY2VzIHVzZSBwaG9uZSBjYWxscyB0byBhdXRoZW50aWNhdGUgeW91ciBzZWN1cml0eSBxdWVzdGlvbiBhbnN3ZXJzLiBSZWFkaW5nICJyIG92ZXIgdGhlIHBob25lIHNlZW1zIGxpa2UgYSByZWNpcGUgZm9yIHBhaW4gYW5kIGZydXN0cmF0aW9uLgozKSBFc3RlcjogMTg0NSAxOTM2IChleGNsdWRpbmcgOSBtaW4gYXMgdGlwKSwgMTAwRSwgdGhlIGZpcnN0IHRpbWUgaW4gdGhlIGxhc3Qgb25lIHllYXIuIFNoZSByZXF1ZXN0ZWQgb3JnYXNtIGFzIG1lZGljaW5lIGZvciBoZXIgaGVhZGFjaGUsIHN1Y2ggYSBuaWNlIG1hbmV1dmVyIHRvIGdldCBtZS4gSW4gYSByb29tIDUgbWluIGNhcmVzc2luZywgMjAgbWluIERBVFkgd2l0aCBoZXIgcmVxdWVzdGVkIE8sIDQgbWluIEJKLCA1IG1pbiBjb3dnaXJsLCA1IG1pbiBtaXNzaW9uYXJ5LCAyIG1pbiBkb2dnaWUgYW5kIG15IDEwIG1pbiBtYXNzYWdlIG9uIGhlci4gUmVwZWF0CkknbSBub3QgZ29pbmcgdG8gdHJ5IHRvIGNvbnZpbmNlIHlvdSB0aGF0IHlvdSdyZSB3cm9uZy4gWW91IGFyZSBvYnZpb3VzbHkgc2hvd2luZyBzaWducyBvZiB3aWxsZnVsIGlnbm9yYW5jZS4gWW91IHN1ZmZlciBmcm9tIGNvZ25pdGl2ZSBkaXNzb25hbmNlLiBZb3UndmUgdHdpc3RlZCB5b3Vyc2VsZiB1cCBzbyBtdWNoIHdpdGggbm9uc2Vuc2UsIG9seW1waWMgbGV2ZWxzIG9mIGFjcm9iYXRpYyB0aGlua2luZy4gVHJ5aW5nIHRvIG1ha2UgZXZlcnl0aGluZyBmaXQgdGhpcyBuYXJyYXRpdmUgdGhhdCB5b3UgaGF2ZSB0cmlja2VkIHlvdXJzZWxmIGludG8gYmVsaWV2aW5nLiBJIGRvbid0IGNhcmUgd2hhdCB5b3UgcGVvcGxlIHRoaW5rIGFueW1vcmUuIFlvdSBhcmUgb2J2aW91c2x5IGRhbWFnZWQuIEknbSBub3QgbWFkIHRoYXQgeW91J3ZlIHN1cHBvcnRlZCB0aGlzIHRyZWFzb24gb3IgdGhlIG90aGVyIGNyaW1pbmFsIGFjdGl2aXR5IHRoYXQgdGhpcyBhZG1pbmlzdHJhdGlvbiBoYXMgYWJzb2x1dGVseSwgb2JqZWN0aXZlbHksIGFuZCBlbXBpcmljYWxseSBwZXJwZXRyYXRlZC4gSSBwaXR5IHlvdS4gWW91IGhhdmUgdG8gc3BlbmQgdGhlIHJlc3Qgb2YgeW91ciBsaWZlIHRyeWluZyB0byBqdXN0aWZ5IHRoaXMgb2J2aW91cyBmYXJjZSB0byB5b3Vyc2VsZi4gVGhlIG9ubHkgdGhpbmcgSSB3aWxsIGRvIHdoZW4gdGhpcyBpcyBhbGwgb3ZlciBpcyBuZXZlciBsZXQgeW91IHBlb3BsZSBmb3JnZXQgdGhpcyB0cmFpdG9yb3VzIG5vbnNlbnNlLgpJIG1pZ2h0IGJlIGxhdGUgdG8gdGhpcyBwYXJ0eSwgYnV0IEkgaGF2ZSBkaXNjb3ZlcmVkIHRoZSBhY3R1YWwgY2F1c2UgYW5kIHJlbWVkeSB0byBhbGxldmlhdGluZyBBdXRpc20uIEl0IGhhcyBub3RoaW5nIHRvIGRvIHdpdGggdmFjY2luYXRpb25zLiAKSGVyZSBpcyB0aGUgYmlnZ2VyIGlzc3VlLiBTaGUgaXMgdXBzZXQgb3ZlciB5b3VyIHBvc2l0aW9uIG9uIGFuIGlzc3VlIHRoYXQgZG9lc24ndCBhZmZlY3QgeW91IG9yIGhlciBpbiB0aGUgc2xpZ2h0ZXN0LiBTb21lIHBlb3BsZSBqdXN0IG5lZWQgc29tZXRoaW5nIHRvIGNyeSBhYm91dC4gSWYgc2hlIGRvZXNuJ3QgZG8gc28gYWxyZWFkeSBzaGUgd2lsbCB1c2UgaGVyIGNyeWluZyBhcyBhIGJsYW5rIGNoZWNrIGNsYWltIG92ZXIgeW91ciB0aW1lLCBtb25leSBhbmQgbWFuaG9vZC4gTW9yZW92ZXIsIHlvdXIgdmlldyBvbiBjZXJ0YWluIHRoaW5ncyB0dXJucyB5b3UgZXZpbCBpbiBoZXIgZXllcy4gWW91IGNhbid0IG5lZ290aWF0ZSB3aXRoIHBlb3BsZSBsaWtlIHRoaXMuIFNoZSBoYXMganVkZ2VkIHlvdXIgaHVtYW5pdHkgdG8gYmUgYmVuZWF0aCBoZXJzLCBhbmQgaWYgeW91IHRyeSB0byByZWRlZW0geW91cnNlbGYgdG8gaGVyLCBzaGUgd2lsbCB3aWVsZCB1dHRlciBhbmQgYWJzb2x1dGUgY29udHJvbCBvdmVyIHlvdXIgbGlmZS4KSSBkaWQgbm90aWNlIHNvbWUgcGVvcGxlIHdpbGwgcHJvdmlkZSBpbnN1cmFuY2UgZm9yIFJheW5vciwgc28gdGhlcmUgaXMgdGhhdC4KTW9kZXJuIHBvcCBhcnRpc3RzIGxpdmUgYW5kIGRpZSBieSB0aGVpciBhYmlsaXR5IHRvIHJlaW52ZW50IHRoZW1zZWx2ZXMsIGJ1dCBzb21ldGltZXMgZXZlbiB0aGUgYmVzdCByZWludmVudGlvbiBhcnRpc3RzIHN0dW1ibGUuIEFuZCB3aGlsZSB0aGF0IG1pZ2h0IHNvdW5kIGxpa2UgdGhlIGltcGV0dXMgZm9yIGEgZ3JlYXQgY291bnRyeSBzb25nLCBmb3Igc29tZSwgaXQgbWlnaHQgYmUgYmVzdCB0byBqdXN0IGtub3cgd2hlbiB0byBmb2xkICdlbS4gCkFzc2Vzc2luZyByZXNpZHVhbCByZWFzb25pbmcgYWJpbGl0eSBpbiBvdmVydGx5IG5vbiBjb21tdW5pY2F0aXZlIHBhdGllbnRzIHVzaW5nIGZNUkkuIApBbGwgbmlnaHQsIG1vc3QgcGxheWVycyB3ZXJlIG5vdCBwdXNoaW5nIHRoZWlyIGNoaXBzIGluIHRoZSBtaWRkbGUgb24gYWxsIGluIGJldHMsIGluY2x1ZGluZyBteSBvcHBvbmVudC4gCklmIHRoZSBwbGF5ZXIgaXMgaW4gYSBtYXJnaW5hbCBzaXR1YXRpb24sIHRoZXkgd2lsbCBiZSBtb3JlIGxpa2VseSB0byBtYWtlIGEgbWlzdGFrZS4gCk9uZSB0aGluZyB0byBrZWVwIGluIG1pbmQgaXMgdGhhdCB0aGUgY29sb3JzIGFyZSBhbHJlYWR5IGRldGVybWluZWQgZm9yIHlvdS4gVGhlcmUgaXNuJ3QgYW55IHNvcnQgb2YgY3VzdG9taXphdGlvbiwgd2hpY2ggdG8gc29tZSBtYXkgZmVlbCBsaWtlIGEgZG93bmZhbGwuIEhvd2V2ZXIsIGlmIHlvdSBkZWNpZGUgdG8gZ2V0IHRoZSAyMDAgVGV4YXMgSG9sZCdlbSBQb2tlciBDaGlwIFNldCB3aXRoIENsZWFyIENvdmVyIEFsdW1pbnVtIENhc2UgdGhleSBoYXZlIGFscmVhZHkgY2hvc2VuIHRoZSBtb3N0IHBvcHVsYXIgb25lJ3MgZm9yIHlvdS4gSG9uZXN0bHkgdGhvdWdoLCBvbmNlIHlvdSBoYXZlIHRoZXNlIGluIHlvdXIgaGFuZHMgaXQncyBsaWtlIG5pZ2h0IGFuZCBkYXkgY29tcGFyZWQgdG8gbm9ybWFsIGNoaXAgc2V0cyBmb3VuZCBpbiByZXRhaWwgc3RvcmVzLgoiU2hlIHBhaWQgdGhlIGluc3VyYW5jZSBwcmVtaXVtcyBmb3IgMTMgeWVhcnMsIGJ1dCBoaXMgbmV3IHNwb3VzZSBnb3QgdGhlIHBheW91dCAgIHVudGlsIHRoZSBjb3VydCBpbnRlcnZlbmVkIiBpcyBsb2NrZWQgU2hlIHBhaWQgdGhlIGluc3VyYW5jZSBwcmVtaXVtcyBmb3IgMTMgeWVhcnMsIGJ1dCBoaXMgbmV3IHNwb3VzZSBnb3QgdGhlIHBheW91dCAgIHVudGlsIHRoZSBjb3VydCBpbnRlcnZlbmVkSG93IHlvdXIgY29tcGFueSBjYW4gd2luZCB1cCBvbiB0aGUgaG9vayBmb3IgeW91ciBzdXBwb3J0IG9ibGlnYXRpb25zSW5jb21lIGRlY2xhcmVkIG9uIGEgdGF4IHJldHVybiBpc24ndCB0aGUgbGFzdCB3b3JkIHdoZW4gY2FsY3VsYXRpbmcgY2hpbGQgc3VwcG9ydFRpdGxlIHRvIHRoZSBuZXh0IGRvb3IgaG9tZSB3YXMgcGxhY2VkIGluIE1yLiBCYXJ5bGEgbmFtZSBhbmQgaGlzIG1vdGhlciBuYW1lLCBhcyBqb2ludCB0ZW5hbnRzLiBNcnMuIApCaXRjb2luIHdlbnQgdXAgZnJvbSBjaGluZXNlIG1hbmlwdWxhdGluZyB0aGUgcHJpY2UgdXAuIApFdCBkZXB1aXMsIG5vdXMgYXZvbnMgcmV1IHVuZSBpbnZpdGF0aW9uIGR1IFNlY3J0YXJpYXQgR25yYWwgZGUgbCdIdGVsIGRlIFZpbGxlIG5vdXMgY29udmlhbnQsIGF2ZWMgbGVzIGRldXggYXV0cmVzIGFzc29jaWF0aW9ucyBldCBsZSBDb25zZWlsIGRlIHF1YXJ0aWVyIGRlIExhIENoYXBlbGxlLCBhaW5zaSBxdWUgbGVzIG1haXJpZXMgZHUgMTBlIGV0IGR1IDE4ZSwgIHVuZSBydW5pb24gc3VyIGxlIHN1aXZpIGR1IHByb2pldCBkZSBsYSBQcm9tZW5hZGUgVXJiYWluZS4gVW5lIGludml0YXRpb24gcXVlIG5vdXMgYXZvbnMgYmllbiB2aWRlbW1lbnQgYWNjZXB0ZS4uIApSdWR5IEdpdWxpYW5pIGZhbW91c2x5IHByb3NlY3V0ZWQgdGhlIEl0YWxpYW4gbW9iIHdoaWxlIGhlIHdhcyBhIGZlZGVyYWwgcHJvc2VjdXRvciwgeWV0IHRoZSBSdXNzaWFuIG1vYiB3YXMgYWxsb3dlZCB0byB0aHJpdmUgdW5kZXIgaGlzIHRlbnVyZSBpbiB0aGUgU291dGhlcm4gRGlzdHJpY3QgYW5kIE1heW9yLiBBbmQgbm93IGhlIGRlZXBseSBlbnR3aW5lZCBpbiB0aGUgYnVzaW5lc3Mgb2YgVHJ1bXAgYW5kIFJ1c3NpYW4gb2xpZ2FyY2hzLiAKSSBoYXZlbiB1c2VkIGl0IHdpdGggYW55IDNEIHByb2dyYW1zLiBBbmQgSSBqdXN0IHJlYWxpemVkIHRoYXQgaXQgY3VycmVudGx5ICQ4OTkuIApOb3cgdGhlIFNFQyBpcyBhbGxlZ2luZyB0aGF0IE11c2sgYnJva2UgdGhlIHRlcm1zIG9mIHRoYXQgYWdyZWVtZW50IHdpdGggYSBGZWIuIDE5IHR3ZWV0IHByb2plY3RpbmcgdGhhdCBUZXNsYSB3b3VsZCBtYWtlIGFib3V0IDUwMCwwMDAgY2FycyB0aGlzIHllYXIuIApBYm91dCB0d2VudHkgbWludXRlcyBhZnRlciB0aGlzIGhhcHBlbiBhbmQgaSBoYWQgZ290dGVuIG15IGhvcnNlIHRvIGNhbG0gZG93biwgaSBjYWxsZWQgdGhlIHZldCB0byBhc2sgaGVyIHdoYXQgc2hlIHRob3VnaHQgdGhpcyBsdW1wIGNvdWxkIGJlLiAKVGhlbiBJIHBhaWQgZm9yIGEgbWFzc2FnZSBhbmQgd2FzIHB1dCBpbiBhIHJvb20gd2l0aCBhIGxpdHRsZSBzYXVuYSwgSSB0aG91Z2h0ICJ3b3csIHRoaXMgaXMgYWN0dWFsbHkgcHJldHR5IGNvb2whIi4gCkFmdGVyIGFsbCwgaGUgaGFzIG5ldmVyIGhhZCBhIGhhcmQgdGltZSBnZXR0aW5nIGFsb25nIHdpdGggaGVyLi4gCkFsc28sIEkgd291bGQgcm90YXRlIG15IGZsZWEgbWVkcywgc28gb25lIG1vbnRoIGFkdmFudGFnZSwgdGhlbiBBZHZhbnRpeCwgZXRjLiAKQ2hvb3NlIGZyb20gb25lIG9mIFJvbWlyYSBzYWxhZHMsIGxpa2UgdGhlIE5ZIENoZWYgU2FsYWQgZmVhdHVyaW5nIGNvcm5lZCBiZWVmIGhhc2ggYW5kIFN3aXNzIGNoZWVzZSwgb3IgbW9yZSB0cmFkaXRpb25hbCBvcHRpb25zIGxpa2UgdGhlIENvYmIsIEdyZWVrIG9yIEp1bGllbm5lLiBUaGVyZSBhbHNvIGEgc2VsZWN0aW9uIG9mIHBpdGEgYW5kIGxhd2FzaCB3cmFwcywgd2hpY2ggY2FuIGJlIHBhaXJlZCB3aXRoIGZyaWVzIGFuZCBjb2xlc2xhdy4KQ2hyaXN0b3BoZXIgTWNDYXJ0eSdzIGV4aXN0ZW5jZSBpcyB0b3JuIGFwYXJ0IHdoZW4gaGlzIGZhdGhlciBpcyBraWxsZWQgZHVyaW5nIHRoZSBhdHRhY2sgb24gdGhlIFdvcmxkIFRyYWRlIENlbnRlciwgYSB0cmF1bWEgd2hpY2ggZHJpdmVzIGhpbSB0byBtaWxpdGFyeSBpbnRlbGxpZ2VuY2UuIFdoaWxlIGF0dGVuZGluZyB0aGUgTmF2YWwgQWNhZGVteSBhdCBBbm5hcG9saXMsIGhlIG1lZXRzIE1hdXJlZW4uIFRoZWlyIHJvbWFuY2UgZGV2ZWxvcHMgd2l0aCBjaGFsbGVuZ2VzIGFsb25nIHRoZSB3YXksIG5vbmUgb2Ygd2hpY2ggaXMgYXMgZGlmZmljdWx0IGFzIHdoYXQgaGFwcGVucyB3aGlsZSBDaHJpcyBpcyBvdmVyc2Vhcy4uIApRdWVscXVlcyByYXJlcyBhbm5vdGF0aW9ucyBwcmNvbmlzZW50IGwgZGUgbGEgYmVyY2UgY29udHJlIGxlIHZpY2UgZGUgbGEgcmF0ZSBldCBjb250cmUgc2NoZXJlc3NlIGRlcyBuZXJmcywgY2UgcXVpIHBldXQgdm91bG9pciBkaXJlIHRvdXQgZXQgc29uIGNvbnRyYWlyZS4gQSBsYSBjYW1wYWduZSwgb24gbHVpIGFjY29yZGUgZGVzIHZlcnR1cyBzdXIgbGVzIHNwaHJlcyBnYXN0cm8gaW50ZXN0aW5hbGUgKGVsbGUgZXN0IGRpdGUgdmVybWlmdWdlIGV0IGJvbm5lIGNvbnRyZSBsYSBkeXNwZXBzaWUpIGV0IGN1dGFuZSAoYWJjcywgdWxjcmUpLCB0YW5kaXMgcXVlIGxlcyBwcmF0aWNpZW5zIHVyYmFpbnMgICBMZW9uYXJkIFRodXJuZXlzc2VyIGV0IE5pY29sYXMgTG1lcnkgZW50cmUgYXV0cmVzICAgbHVpIHJlY29ubmFpc3NhaWVudCBkIHZlcnR1czogc2kgZWxsZSBlc3QgYW50aSBhc3RobWF0aXF1ZSwgYW50aSBwaWxlcHRpcXVlLCBkaXVydGlxdWUgZXQgZW1tbmFnb2d1ZSBwb3VyIGNlIGRlcm5pZXIsIGMgdW5lIHBhbmFjZSBwb3VyIFRodXJuZXlzc2VyLiBMYSB2cml0IHNlIHNpdHVlIHNhbnMgZG91dGUgZW50cmUgY2VzIGRldXggZXh0cm1pdHMgcXVlIHNvbnQgbCBldCBsYSB0b3V0ZSBwdWlzc2FuY2UuIApUaGVuIGFmdGVyIHNvbWUgc21hbGwgdGFsaywgc2hlIGFza2VkIGl0IC4gCiJJIHRoaW5rIHRoYXQncyBhIG1pc3Rha2UuIiBUaGUgc3ViIDIwIHBlcmNlbnQgaHVtaWRpdHkgZG9lc24ndCBkaXNjcmltaW5hdGUsIHNoZSBleHBsYWlucyAgIGl0J2xsIGhvb3ZlciBtb2lzdHVyZSBmcm9tIHRoZSBmYWNlLCBsZWdzLCBmZWV0LCBoYW5kcyBhbmQgYW55d2hlcmUgZWxzZSBsZWZ0IGV4cG9zZWQuIFRvIHdhcmQgb2ZmIGZ1bGwgYm9keSBkcnluZXNzLCBzaGUgcmVjb21tZW5kcyB3ZWFyaW5nIGxvbmcgc2xlZXZlcywgcGFudHMgYW5kIGNsb3NlZCB0b2VkIHNob2VzIGluIGZsaWdodC4gCkxldCBzYXkgYXMgYSBjb25jZXJuZWQgY2l0aXplbiwgSSB3YW50IHRvIHJlYWQgdGhlIHNwZWNpYWwgcHJvc2VjdXRvciByZXBvcnQgb24gdGhlIEthdmFuYXVnaCBhbmQgQmxhc2V5IEZvcmQgdGVzdGltb25pZXMuIFRoaXMgaXMgd2hhdCBHb29nbGUgc2hvd3MgbWUgd2hlbiBJIHNlYXJjaCBmb3IgaXQuIEp1c3QgbmVnYXRpdmUsIGJpYXNlZCBvcGluaW9ucyBpbnN0ZWFkIG9mIHRoZSBhY3R1YWwgcmVwb3J0LiAKSGUgY29udmluY2VkIGhlciB0byBkbyByaWdodCBieSB0aGUgZmFtaWx5IGFuZCB0byBnaXZlIHRoZW0gYWxsIHRoZSBtb25leS4gSSBnb3QgdGhlIGltcHJlc3Npb24gdGhhdCBpdCB3YXMgbW9yZSB0aGFuIGp1c3QgcGFyZW50cyBhbmQgc2libGluZ3MgYnV0IHRoZSBleHRlbmRlZCBmYW1pbHkgYXMgd2VsbC4gCkEgU2VwdGVtYmVyIEV2ZW5pbmdUdXJraXNoIFJvY2sgVGhlIHNvbmcgdGhhdCBpbnNwaXJlZApXZSdyZSBib3RoIGF2ZXJhZ2UgYnVpbGQgZ3V5cyBzbyB3ZSBkb24ndCByZWFsbHkgcGF5IGhpbSBhbnkgbWluZC4gCkZpcmVkIE9QUCB2ZXRlcmFuIHZpbmRpY2F0ZWQKSSBkaWQgaXQgYSBmZXcgeWVhcnMgYWdvIGJ5IHJpZGluZyBvdXQgdG8gd2hhcnRvbiBzdGF0ZSBmb3Jlc3QsIGdvaW5nIGRvd24gMjA2IHBhc3QgSGFtbW9udG9uLCBtYWtpbmcgbXkgd2F5IHRvIHR1Y2thaG9lIHJvYWQgYW5kIGNhcGUgbWF5IGF2ZSB0aGVuIHRocm91Z2ggdGhlIGJlbGxwbGFpbiBzdGF0ZSBmb3Jlc3QsIHRoZW4gZmluYWxseSB0YWtpbmcgMzQ3LzQ3IGRvd24gdG8gYmF5c2hvcmUgcm9hZC4gVGhlIG9ubHkgdHJvdWJsZSBJIGhhZCB3YXMgdGhhdCB0aGUgcm9hZCB0aHJvdWdoIGhhbW1vbnRvbiB0dXJuZWQgaW50byBhIHNob3VsZGVybGVzcyBsaWtlIDUwbXBoIHJvYWQsIHNvIEkgaGFkIHRvIGJhY2t0cmFjayBhIGJpdCBhbmQgaW1wcm92aXNlLiAKRmFrb3Rva2UgMyB5ZWFycywgNCBtb250aHMgYWdvLiAKVGhhdCBiZWluZyBzYWlkLCB0aGUgYWxidW0gZGlkIG5vdCBoYXZlIFBsYXRpbnVtIHNhbGVzIGluIHRoZSBVbml0ZWQgU3RhdGVzLiBJdCBoYWQgUGxhdGludW0gc2FsZXMgaW4gNCBjb3VudHJpZXMsIHdoaWxlIGl0IHdhcyBnb2xkIGluIDYuCk9mIGNvdXJzZSB0aGVyZSBhcmUgbW9yZSBpbXBvcnRhbnQgYXNwZWN0cyB0byBwZXJmb3JtYW5jZSwgYnV0IGluIG15IGV4cGVyaWVuY2UsIGRpY2sgaXMgaGlnaGx5IHZhcmlhYmxlIChhbG9uZyB3aXRoIHdvbWVuIHByZWZlcmVuY2VzKSB3aGlsZSBib29icyBhcmUgYm9udXMgYXdlc29tZSBwb2ludHMuIEkgYWx3YXlzIGFpbSB0byBwbGVhc2UgYnV0IEkgYmVlbiBkZXNjcmliZWQgYXMgZWl0aGVyICJhbWF6aW5nIiBvciAibWVoIiBkZXBlbmRpbmcgb24gdGhlIGdpcmwsIGJ1dCB0aGF0IHByb2JhYmx5IG1vc3RseSBkdWUgdG8gbXkgb3duIHBlcmZvcm1hbmNlIGFuZCBsZXNzIHRvIGRvIHdpdGggbXkgaGFyZHdhcmUuIApJIHdvbiBhcG9sb2dpemUgZm9yIHRlbGxpbmcgcGVvcGxlIGFib3V0IGl0LiBBbmQgSSBoYXZlIGFic29sdXRlbHkgWkVSTyBhZmZpbGlhdGlvbiB3aXRoIHRoZSB3ZWJzaXRlLnJvYm9uaW5qYSAgNSBwb2ludHMgIHN1Ym1pdHRlZCAyOSBkYXlzIGFnb0RlcG9zaXRlZCAxMDAgRXVyb3MgeWVzdGVyZGF5LiBJIGFtIG1vcmUgb24gYW4gTVRUIGd1eSwgYnV0IGRlY2lkZWQgdG8gdHJ5IHNvbWUgY2FzaCBwbGF5IGF0IFJJTyAob25seSBjYXNoIGF0IHRoZSBtb21lbnQpLlBsYXllZCBzb21lIDEwUExPIChFdXJvcykuIApJbiBhZGRpdGlvbiwgaWYgeW91IHRoaW5rIGJpc29uIG9yIGthbmdhcm9vIG1lYXQgd2lsbCBzdG9wIHlvdXIgZG9nIGZyb20gY29taW5nIGRvd24gd2l0aCBhbiBhbGxlcmd5ICAgdGhpbmsgYWdhaW4uIApJdCBpcyBhbHNvIGFuIGNvbmNlc3Npb24gZnJvbSB5b3UgdGhhdCB0aGV5IHNlZWsgdG8gaGFybSBHUk9VUFMgb2YgYW5pbWFscyBvbiBhIHNwZWNpZXMgd2lkZSBzY2FsZS4KVW5pU2VhbiAgMTUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KV2FzIHByZXR0eSBjb29sLCBzYWlkIFJpZGxleSBvZiBoZWFyaW5nIHRoZSBESiBjb21tZW50cyBvbiBoZXIgc29uZyBhbmQgaGVyIGZhbnMgY29tbWVudHMsIGJvdGggb24gRmFjZWJvb2sgYW5kIG9uIGFpci4KQW1hemluZ2x5IGF0bW9zcGhlcmljIGluIGJvdGggc291bmQgYW5kIHZpc3VhbHMgZGVzcGl0ZSAob3IgbWF5YmUgdGhhbmtzIHRvPykgdGhlIHNpbXBsZSBoYXJkd2FyZS4gCkkgYW0gbm90IHN1cmUgaWYgaGUgaXMgc3RpbGwgdGFsa2luZyB0byBnaXJscywgYnV0IGhlIGlzIHByb2JhYmx5IHN0aWxsIHNlZWluZyB0aGVtIGlmIGhlIGlzIGdvaW5nIHRvIHRoZSBjYXNpbm8uIApUaGUgcHVzaCB0b3dhcmRzIHByZW1pdW0vbHV4dXJ5IHNlYXRpbmcgaGFzIGJlZW4gZ29pbmcgb24gZm9yIGF3aGlsZSBhbHJlYWR5IGluIHRoZSBORkwuIApTb2xpcyByZWl0ZXJhdGVkIHRoYXQgaWYgc2hlIHRvbGQgYW55b25lLCBoZSB3b3VsZCBodXJ0IGhlciBjaGlsZCBhbmQgY2FsbCBwb2xpY2UgdG8ga2ljayBoZXIgb3V0IG9mIHRoZSBjb3VudHJ5LiAKVW5mb3J0dW5hdGVseSwgdGhlIHRydXRoIGlzIGFzIGEgbGl2ZSBwbGF5ZXIgeW91IGdvaW5nIHRvIGFsd2F5cyBiZSBiZWhpbmQgdGhlIHByb2dyZXNzaW9uIG9mIHRoZSBnYW1lIHNpbXBseSBiZWNhdXNlIHlvdXIgY29tcGV0aXRpb24gaXMgd2VhayAoY29tcGFyZSB3aXRoIFN0YXJzIE5MeiBwb29scykgYW5kIHlvdSBnb2luZyB0byBwcmVmZXIgcGxheWluZyBhbmQgcHJpbnRpbmcgeW91ciBob3VybHkgb3ZlciBzb2x2ZXIgd29yay4gR29vZCB0aGluZyBpcyB0aGF0IHlvdSBnb2luZyB0byBtYWtlIG11Y2ggbW9yZSBtb25leSBpbiB0aGUgc2hvcnQgcnVuLi4gCkkgYmVsaWV2ZSB0aGUgcmV2aWV3ZXIgbWF5IGJlIHB1dHRpbmcgYSBsaXR0bGUgdG9vIG11Y2ggZW1waGFzaXMgb24gdGhlIHJlbGlnaW91cyBhc3BlY3Qgb2YgdGhlIHNob3cuIApNciBDb3N0ZWxsbyBzYWlkIHRoZSBRdWVlbnNsYW5kIEdvdmVybm1lbnQgbmVlZGVkIHRvIHJlZHVjZSB0aGUgbWF4aW11bSBiZXQgb24gcG9raWVzIHRvICQxIGFuZCBzaWduaWZpY2FudGx5IHJlZHVjZSB0cmFkaW5nIGhvdXJzLgpPdGhlciBwaWNrcyB3ZXJlIG11Y2ggbGVzcyByaXNreS4gCkF0IHRoaXMgcG9pbnQgaW4gdGhlaXIgY2FyZWVycywgV2lsbCBTbWl0aCB3YXMgYSBsb3QgbW9yZSBpbiBkZW1hbmQgdGhhbiBLZWFudSBSZWV2ZXMgdGhvdWdoLCBhbmQgaGFkIGp1c3QgY29tZSBvZmYgb2YgQmFkIEJveXMsIEluZGVwZW5kZW5jZSBEYXksIGFuZCBNZW4gaW4gQmxhY2ssIGFsbCBiYWNrIHRvIGJhY2sgdG8gYmFjaywgYW5kIHdhcyBwcm9iYWJseSBjb25zaWRlcmVkIHRoZSBtb3N0IGJhbmthYmxlIGJsb2NrYnVzdGVyIG1vdmllIHN0YXIgaW4gdGhlIHdvcmxkLiBIZSB3YXMgcHJvYmFibHkgZHJvd25pbmcgaW4gb2ZmZXJzIGFuZCBwaXRjaCBtZWV0aW5ncyBhdCB0aGlzIHRpbWUsIGFuZCB3aGVuIHlvdSB0aGF0IGJpZyBhbmQgdGhhdCB5b3VuZyB5b3UgYXJlIHByb2JhYmx5IGdvaW5nIHRvIHNoeSBhd2F5IGZyb20gZmlsbXMgdGhhdCB0YWtlIGJpZyByaXNrcy4uIApBcyBmb3IgdGhlIHJlc3Qgb2Ygd2hhdCB3YXMgb3BlbiBGcmlkYXksIHRoZSBnaWZ0IHNob3Agd2FzIGJ1c3ksIGFuZCB0aGUgTWlrZSBhbmQgSWtlIGJpc3RybyBoYWQgb2NjYXNpb25hbCBjdXN0b21lcnMsIHNlbGxpbmcgbW9zdGx5IHN0YW5kYXJkIHVwc2NhbGUgbW92aWUgdGhlYXRlciBmYXJlLCBidXQgYWxzbyBsYXR0ZXMgYW5kIHNhbmR3aWNoZXMuCkhlIHJhbiBTYWxlcyBhbmQgVHJhZGluZyBmb3IgTW9yZ2FuIFN0YW5sZXksIHdhcyB0aGUgTm8uIDIgYXQgQ2l0aWdyb3VwLiAKTm90IHN1cmUgYWJvdXQgUFIgc3BlY2lmaWNhbGx5IGJ1dCBJIGRvdWJ0IGl0J3MgYXQgdGhlIGVuZCBvZiBldmVyeSBzaG9vdCBkYXkuIApJIGFtIHJld2F0Y2hpbmcgRmVlbCBnb29kIHRvIGRpZS4gCldoaXRlIGd1eXMgYXJlIG11Y2ggbW9yZSBsYWlkIGJhY2sgYW5kIGFyZSBoYXBweSB0byBjYXJyeSBvbiB0aGUgY29udmVyc2F0aW9uIGZvciBhbm90aGVyIDMwIG1pbnV0ZXMgd2hpbGUgdGhlIGNoZWNrIGlzIGxheWluZyBvbiB0aGUgdGFibGU7IHNvbWUgYXJlIGV2ZW4gd2lsbGluZyB0byBnbyBkdXRjaCB0byBmdXJ0aGVyIHNob3djYXNlIHRoZWlyIHN1cHBvcnQgdG93YXJkcyBnZW5kZXIgZXF1YWxpdHkuIApCb3kgU2NvdXRzIGNyZWF0ZWQgYm9uZHMgdGhyb3VnaCBkaWZmaWN1bHQgdGFza3MgdGhhdCByZXF1aXJlZCB0ZWFtd29yayBhbmQgdW5kZXJzdGFuZGluZy4gSXQgd2FzIGEgYmVhdXRpZnVsIHRoaW5nIHVudGlsIGdpcmxzIEhBRCB0byBiZSBpbmNsdWRlZCwgbm93IGl0J3MganVzdCBhIGpva2UuIApZb3VyIHZlcnkgeW91bmcgZnJpZW5kIGdvdCBzZXh1YWxseSBoYXJhc3NlZCBieSBhIGRpbm9zYXVyIHVzaW5nIGRpbm9zYXVyIHRlY2hub2xvZ3kuIEl0IGFic29sdXRlbHkgZ3Jvc3MsIGJ1dCBpdCBtYXkgY29tZm9ydCBoZXIgdG8ga25vdyB0aGF0IHRoZXNlIHNhZCBiYXN0YXJkcyBvbmNlIHJvYW1lZCB0aGUgZWFydGggaW4gZmFyIGdyZWF0ZXIgbnVtYmVycy4gClRoaXMgbWF5IGNvbWUgbmF0dXJhbGx5IGR1ZSB0byBsYWNrIG9mIHN0cmVzcyB0byBibHVmZiwgb3IgYSBwbGF5ZXIgbWF5IHRyeSB0byBwdXQgb24gYSBzaG93IHRvIGRlbW9uc3RyYXRlIHRoZWlyIGZlaWduZWQgbGFjayBvZiBpbnRlcmVzdCBpbiB0aGVpciBoYW5kLls4XS4gCkl0cyBiaWcgZW5vdWdoIHRvIG1ha2Ugc3VyZSB5b3UgYWx3YXlzIGdldCBhIGdhbWUgYnV0IG5vdCBzbyBiaWcgdGhleSBkb250IGNvbnNpZGVyIHlvdSBwbGF5aW5nIHRoZXJlIGltcG9ydGFudC4gSWYgeW91ciBnb25uYSBoYXZlIGEgZ28gdXNlIHNpZ251cCBjb2RlOiBOWkNBS0VUbyBtYWtlIHN1cmUgeW91IGdldCBtYXhpbXVtIGJvbnVzZXMuMjBHYW1lcywgVG95cywgYW5kIEhvYmJpZXNXaGF0IGlzIHRoZSBiZXN0IG9ubGluZSBnYW1lIGFuZCB3aHk/YnkgQW5pbW9zaXR5IFJlYm9ybiA4IHllYXJzIGFnb1doYXQgaXMgdGhlIGJlc3Qgb25saW5lIGdhbWUgYW5kIHdoeT9UaGVyZSBhcmUgdG9ucyBvZiBncmVhdCBvbmxpbmUgZ2FtZXMgYnV0IHdoaWNoIGlzIHRoZSBiZXN0IG9mIHRoZSBiZXN0PzZDYXJkIEdhbWVzUG9rZXIgUGFydHlieSBhcmluZGFtMTIzNCA5IHllYXJzIGFnb0hvdyBtYW55IExhcyBWZWdhcyBwZW9wbGUgcGxheSBwb2tlciBvbmxpbmUgY29tcGFyaW5nIHRvIHZpc2l0IHRoZSBmYW1vdXMgcG9rZXIgcm9vbXMgdG8gcGxheSB0aGUgbGFuZCBiYXNlZCBnYW1lLjNHYW1lcywgVG95cywgYW5kIEhvYmJpZXNXb3VsZCB5b3UgcGxheSBwb2tlciBvbmxpbmUgaWYgaXQgd2FzIGxlZ2FsP2J5IFN3b3BlIDYgeWVhcnMgYWdvV291bGQgeW91IHBsYXkgcG9rZXIgb25saW5lIGlmIGl0IHdhcyBsZWdhbD80R2FtZXMsIFRveXMsIGFuZCBIb2JiaWVzaSB3YW50IHRvIGxlYXJuIHRoZSBnYW1lIHBva2VyIGFuZCB0aGUgZ2FtZSBibGFja2phY2ssIHRoYXQgaSBjYW4gcGxheSBvbiB0aGUgdGFieSBjaWVhbTIzNG9sZCA3IHllYXJzIGFnb1Nob3cgRGV0YWlsc05lY2Vzc2FyeUh1YlBhZ2VzIERldmljZSBJRFRoaXMgaXMgdXNlZCB0byBpZGVudGlmeSBwYXJ0aWN1bGFyIGJyb3dzZXJzIG9yIGRldmljZXMgd2hlbiB0aGUgYWNjZXNzIHRoZSBzZXJ2aWNlLCBhbmQgaXMgdXNlZCBmb3Igc2VjdXJpdHkgcmVhc29ucy4gTG9naW5UaGlzIGlzIG5lY2Vzc2FyeSB0byBzaWduIGluIHRvIHRoZSBIdWJQYWdlcyBTZXJ2aWNlLiAKQnVyZWF1IG9mIExhYm9yIFN0YXRpc3RpY3MuIE9uIHRoZSBsb3cgZW5kLCBjb3VydCByZXBvcnRlcnMgZWFybmVkIGEgMjV0aCBwZXJjZW50aWxlIHNhbGFyeSBvZiAkMzYsODcwLCBtZWFuaW5nIDc1IHBlcmNlbnQgZWFybmVkIG1vcmUgdGhhbiB0aGlzIGFtb3VudC4gClN0ZXZlbiBpcyBiYXNpY2FsbHkgc2F5aW5nIHRvIEJyZW5kYW4gdGhhdCBoZSBjYW4gc2VlIHdoYXQgc2V4IGlzIGxpa2Ugc28gaGUgY2FuIGJlIGdvb2QgYXQgaXQgd2hlbiBoZSBnZXRzIGEgZ2lybGZyaWVuZC4gaXRzIGRpc2d1c3RpbmcuClBhcm1pIGxlcyA0IGNvbmRpdGlvbnMgcG91ciBwYXNzZXIgdW4gY29udHJhdCwgaWwgZmF1dCBxdWUgbGVzIHBhcnRpZXMgYWllbnQgbGEgImNhcGFjaXQgZGUgY29udHJhY3RlciIgKGFydC4gCkZpZ3VyZSAxNC4yOiBUcmFjZXMgdGhlIG1pZ3JhdGlvbiBvZiBTb3V0aCBQb2xlIHBvc2l0aW9ucyBkdXJpbmcgdGhlIGVhcmx5IFBhbGVvem9pYyB3aGVuIEdvbmR3YW5hIGFuZCBFdXJhbWVyaWNhIHdlcmUgc2VwYXJhdGUgYW5kIGVhY2ggaGFkIGl0cyBvd24gcG9sYXIgdHJhY2suIAogMCBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvSSBkb24gYmVsaWV2ZSBpdCBpbGxlZ2FsIHRvIHJlIHVzZSBhIGxpY2Vuc2UgcGxhdGUgcHJldmlvdXNseSB1c2VkIGJ5IHNvbWVvbmUgZWxzZSwgYW5kIG5vdCBzdXJlIGhvdyBldmVuIGlmIHNvbWVvbmUgZ290IGEgaG9sZCBvZiBpdCBpdCB3b3VsZCBjb21lIGJhY2sgdG8geW91LiBZb3Ugbm90IHRoZSByZWdpc3RlcmVkIG93bmVyIG9mIGEgY2FyIGl0IGJlIGFzc29jaWF0ZWQgd2l0aC4gCkhvdXN0b24gZmVhdHVyZXMgbW9yZSB0aGFuIDcwIGFydCBleGhpYml0aW9ucyBhbmQgb3RoZXIgZm9ybXMgb2YgY3VsdHVyYWwgZW5nYWdlbWVudCBhdCBVSCwgYXJlYSBtdXNldW1zLCBnYWxsZXJpZXMgYW5kIGN1bHR1cmFsIGNlbnRlcnMgYmVnaW5uaW5nIEZyaWRheSwgRmViLiAKQXJlIHlvdSBwbGFubmluZyB0byBhbHNvIGRvIHRoZSBtYXNzZWQgdHJvb3BzIGluIHRoaXMgc2NoZW1lPyBJZiBzbyBpdCBiZSBnb29kIHRvIGZpZ3VyZSBvdXQgYSB3YXkgdG8gYXNzZW1ibHkgbGluZSBwYWludCB0aGVtLCBsaWtlICJOb3cgYWxsIHRoZSBtZXRhbCBwYWludCIsICJub3cgYWxsIHRoZSBibGFjayIgYW5kIHNvIG9uLCBvdGhlcndpc2UgeW91IGJlIGF0IGl0IHVudGlsIHRoZSBuZXh0IGNvZGV4IGVkaXRpb24gOlAKVUsgc3RvY2tpc3QuIEphbiAxMywgMjAxNCAgIDEgbWluICAgVXBsb2FkZWQgYnkgc2tzaHAwNzA4WW91IGNhbiBjaGVjayB0aGUgY2xlYXIgcGhvdG9zIGZyb20gdGhlIGZvbGxvd2luZyBsaW5rLiAKQWx3YXlzIHdpdGggd2luZG93cyAxMCwgaGF2ZSBuYXJyb3dlZCBvdXQgV2luZG93cyB1cGRhdGVzIGFzIG1hY2hpbmVzIHRoYXQgaGF2ZW4gdXBkYXRlZCBpbiBhIG1vbnRoIGFyZSBkb2luZyBpdCBpbiB0aGUgbGFzdCBmZXcgZGF5cy4gClRoZSBicmVhZHRoIGFuZCBkZXB0aCBvZiBzcG9ydCBvZmZlcmluZyBpcyB1bnJpdmFsbGVkIHdpdGggTm90dGluZ2hhbSBoYXZpbmcgdGhlIGxhcmdlc3QgaW50cmFtdXJhbCBzcG9ydHMgbGVhZ3VlIHdpdGggb3ZlciAzLDUwMCBzdHVkZW50cyBwbGF5aW5nIGFnYWluc3QgZWFjaCBvdGhlciBlYWNoIHdlZWsuCkplcmVteSBTdHJvbmcgcGxheXMgRGVhbiBLZWl0aCwgYSBtb2d1bCAobm90IHRoZSBza2lpbmcga2luZCkgd2hvIHN0YXJ0cyBNb2xseSBvbiB0aGUgcm9hZCB0byBoZXIgZXZlbnR1YWwgcG9rZXIgcG90ZW50YXRlIGRvbSwgZmlyc3Qgc3dlYXJpbmcgaGVyIHRvIHNlY3JlY3kuIAoxOTIwKSBOYWdwdXIgKERlYy4gCkhlIGRpZCAgIGNvbnZlbmllbnRseSBmaW5kIGEgam91cm5hbCBhcnRpY2xlIHJlY2VudGx5IHdyaXR0ZW4gdGhhdCBjYWxjdWxhdGVzIHRoZSBwYWNraW5nIGZyYWN0aW9uIG9mIE0gYW5kIHJlYWQgdGhlIGFuc3dlci4uIApCcnVubyBMRSBST1VYLCBCZXJuYXJkIExFU1RFUkxJTiwgTW1lcyBKYWNxdWVsaW5lIE1BUVVFVCwgTWFyaWUgTG91IE1BUkNFTCwgTU0uIEplYW4gUmVuIE1BUlNBQywgUGhpbGlwcGUgTUFSVElOLCBNbWUgTWFydGluZSBNQVJUSU5FTCwgTU0uIE1pY2hlbCBNTkFSRCwsIFBpZXJyZSBNT1NDT1ZJQ0ksIFBpZXJyZSBBbGFpbiBNVUVULCBQaGlsaXBwZSBOQVVDSEUsIE1pY2hlbCBQQUpPTiwgSmVhbiBDbGF1ZGUgUEVSRVosIE1tZXMgU1lMVklBIFBJTkVMLCBDYXRoZXJpbmUgUVVSLCBNLiAKUGVyc29uYWxseSwgSSB3aXNoIHNoZSB0b2xkIGhpbSwgbWFycmllZCBoaW0sIGFuZCB0aGVuIGdvdHRlbiB0aGUgdGl0bGVzIGFmdGVyIHRoZWlyIG1hcnJpYWdlLiBJdCBhbHdheXMgYm90aGVyZWQgbWUgdGhhdCBzaGUgcmVmdXNlZCB0byBtYXJyeSBoaW0gdW50aWwgaGUgd2FzIGluc2FuZWx5IHdlYWx0aHkuIFNoZSB3b3VsZG4gZGVjZWl2ZSBhbiBlc3RhdGUgYWdlbnQgYnV0IGx5aW5nIHRvIG5vYmlsaXR5IHdhcyBmaW5lLCBzdHJhbmdlIGxvZ2ljIHRoZXJlLi4gCkkgY29tcGxldGVseSBhZ3JlZSB3aXRoIHlvdSBhbmQgYXMgc29tZW9uZSB3aG8gbG92ZXMgUVQsIGxvdmVzIGlsIG1hZXN0cm8gZXZlbiBtb3JlLCBhbmQgcmVhbGx5IGxvdmVzIHNvbWUgU3BhZ2hldHRpIFdlc3Rlcm5zLCB0aGlzIHdhcyBhIGh1Z2UgbGV0ZG93biBmb3IgbWUuCkJ1dCwgdW5sZXNzIHNvbWVvbmUgb24gci9sYXcgd29ya3MgYXQgV2lsbGlhbXMgQ29ubm9sbHkgYW5kIGNhbiBnZXQgQnJlbmRhbiBTdWxsaXZhbiBvciBDbGludG9uIGxlZ2FsIHRlYW0gbm90IG5hbWVkIEZsb29kIHRvIGRvIGFuIEFNQSwgaXRzIGFsbCBjb25qZWN0dXJlLCBhbmQgYXBvbGl0aWNhbCBvcGluaW9ucyBhcmUgbm90IGxpa2VseS4gSSBoYXZlIGRyZWFtcyBhYm91dCBjcm9zcyBleGFtaW5pbmcgc29tZW9uZSBsaWtlIGhpbS4gSGUncyB0aGUgdHlwZSBvZiB3aXRuZXNzIHRoYXQgeW91IG1pZ2h0IGFjdHVhbGx5IGdvIGZvciB0aGUgRmV3IEdvb2QgTWVuIE1vbWVudCBiZWNhdXNlIGhlIHNlZW1zIGluY2FwYWJsZSBvZiBzdG9wcGluZyBoaW1zZWxmIGZyb20gc2F5aW5nIHN0dXBpZCB0aGluZ3MuIApJIGNhbiBnZXQgaW4gYW55IGd5bXMgcmlnaHQgbm93IGFuZCBteSBiYXR0ZXJ5IGlzIGdldHRpbmcgZHJhaW5lZCB2ZXJ5IHF1aWNrbHkuIApUaGUgZWFzeSB3YXMgaXMgeW91IHN0b3AgdGhpbmtpbmcgYW5kIGxpc3RlbiB0byBSZWRkaXQuIApOb3Qgb25seSBkb2VzIGl0IGxldCB5b3Ugc3ByZWFkIHRoZSBjb3N0IG91dCBvdmVyIHRpbWUsIGJ1dCB5b3UgY2FuIHRlc3QgdGhpbmdzIG91dCB3aXRoIGEgc21hbGxlciBpbnZlc3RtZW50IHRvIGZpbmUgdHVuZSB5b3VyIG5lZWRzLi4gClRoZSB0ZWNobmlxdWVzIHVzZWQgaW52b2x2ZSBtYW5pcHVsYXRpbmcgc29mdCB0aXNzdWUgdG8gYXNzaXN0IGluIGNvcnJlY3RpbmcgcHJvYmxlbXMgYW5kIGltYmFsYW5jZXMsIGFnYWluIHRvIGhlbHAgdG8gaW1wcm92ZSBwZXJmb3JtYW5jZSBhbmQgcHJldmVudCBpbmp1cnkuIApJZiB0aGV5IHVuYXZhaWxhYmxlLCBwbGVhc2UgY2FsbCBhbiBlbWVyZ2VuY3kgYW5pbWFsIGhvc3BpdGFsIGFzIHNvb24gYXMgcG9zc2libGUgdG8gbWFrZSBzdXJlIHlvdSBjYW4gZ2V0IHRoZSBpbmZvcm1hdGlvbiwgYWR2aWNlLCBvciBoZWxwIHlvdSBuZWVkISBUaGV5IGNhbiBqdWRnZSB3aGV0aGVyIGl0IHNhZmUgdG8gd2FpdCB1bnRpbCB5b3VyIHJlZ3VsYXIgdmV0IGlzIGF2YWlsYWJsZSwgb3IgaWYgeW91ciBkb2cgbmVlZHMgdG8gYmUgc2VlbiBpbW1lZGlhdGVseS4gClRoZSBHb29nbGUgc3BvbnNvcnNoaXAgd2lsbCBpbmNsdWRlIHByb21vdGlvbiBvZiBHb29nbGUgQXNzaXN0YW50LCB0aGUgdm9pY2UgYWN0aXZhdGVkIHNlcnZpY2UgdGhhdCBydW5zIG9uIEhvbWUgc3BlYWtlcnMsIHBob25lcyBhbmQgb3RoZXIgZGV2aWNlcy4gClN0YXJ0ZWQgbGVhcm5pbmcgc2xvd2x5IG9ubGluZSB3YXRjaGluZyB2aWRlb3Mgb24gWVQgYW5kIHJlYWRpbmcgYXJ0aWNsZXMKWW91IG5lZWQgdG8gY2FyZWZ1bGx5IHRoaW5rIGFib3V0IGhvdyBtdWNoIHlvdSB3YW50IHRvIGdhbWJsZSBhdCBvbmUgdGltZSBhdCB0aGUgdGFibGUuIAooRnVsbCBBbnN3ZXIpV2hlcmUgY2FuIHlvdSBnZXQgZnJlZSBjaGlwcyBvbiBGYWNlYm9vayBwb2tlcj9Gcm9tIEZhY2Vib29rIFRoZSBiZXN0IHdheSB0byBnZXQgbG9hZHMgb2YgcG9rZXIgY2hpcHMgb24gZmFjZWJvb2sgaXMgdG8gYXNrIG90aGVyIHBsYXllcnMgdG8gZG9uYXRlIHRoZWlyIGNoaXBzIHRvIHlvdSBvciBidXkgdGhlbSBmcm9tIHZhcmlvdXMgc2l0ZXMgd2hpY2ggbWF5IGJlIHVudHJ1c3R3b3J0aHkuIE9uZSB3YXkgdG8gZ2V0IGZyZWUgZmFjZWJvb2sgcG9rZXIgY2hpcHMgd291bGQgYmUgdG8uIApUaGUgZ2lybCBkaWRuIHR1cm4gb24gdGhlIGxpZ2h0cyBidXQgSSB3ZW50IHRoZXJlIGluIHRoZSBhZnRlcm5vb24gc28gdGhlcmUgd2FzIHNvbWUgbmF0dXJhbCBsaWdodCBmcm9tIHRoZSBzbWFsbCB3aW5kb3cgKGRpc2NyZWV0bHkgcG9zaXRpb25lZCwgc28geW91IHVubGlrZWx5IHRvIGJlIHBlZXBlZCBvbikuIDQvMTAuIApXZSBjYXRjaCBhIGZldyBiaWcgc3BpbnkgbG9ic3RlcnMgZm9yIHRoZSBSViBmcmVlemVyLiBFdmVudHVhbGx5IHdlIGhlYXIgdm9pY2VzIGN1cnNpbmcgaW4gcHJpbWl0aXZlIFNwYW5pc2guLiAKRWFyIG1pdGVzIGFyZSBvbmUgb2YgdGhlIG1vc3QgY29tbW9uIGNhdXNlcyBvZiBmZWxpbmUgZWFyIGRpc2NvbWZvcnQuIEJ1dCB3aGF0IGV4YWN0bHkgYXJlIGVhciBtaXRlcz8gVGhleSBhcmUgdGlueSBwYXJhc2l0ZXMgdGhhdCBsaXZlIGluc2lkZSB0aGUgZWFyIGNhbmFsIG9mIGFuIGluZmVjdGVkIGFuaW1hbDsgaW4gdGhlIGNhc2Ugb2YgY2F0cywgdGhlIG1vc3QgbGlrZWx5IG9yZ2FuaXNtIGlzIE90b2RlY3RlcyBjeW5vdGlzLiAKS2VlcCBpbiBtaW5kIHRoYXQgNTAgdGltZXMgdGhlIGJpZyBiZXQgaXMgYSBmYWlybHkgY29tbW9uIGRvd25zd2luZyBhbmQgbm90aGluZyB0byBiZWNvbWUgdG9vIGNvbmNlcm5lZCBhYm91dCBpZiB5b3UgYXJlIHN0aWxsIHBsYXlpbmcgdG8gdGhlIGJlc3Qgb2YgeW91ciBhYmlsaXR5LiAKSE9NRU1BREUgUEFOQ0FLRVMgT1IgV0FGRkxFUy4gRG9uIHRocm93IG91dCB0aG9zZSBicmVha2Zhc3QgbGVmdG92ZXJzISBGcmVlemUgdGhlbSBmaXJzdCBvbiBhIGJha2luZyBzaGVldCBpbiBhIHNpbmdsZSBsYXllciwgdGhlbiB3cmFwIHRoZW0gaW4gcGxhc3RpYyB3cmFwIHdpdGggYSBsYXllciBvZiB3YXggb3IgcGFyY2htZW50IHBhcGVyIGluIGJldHdlZW4gZWFjaDsgc2xpcCB0aGVtIGludG8gZnJlZXplciBwcm9vZiwgemlwcGVyIHRvcCBiYWdzOyBhbmQgZnJlZXplLiBZb3UgY2FuIGRlZnJvc3QgYW5kIGhlYXQgdGhlc2UgaW4gdGhlIG1pY3Jvd2F2ZS4uIApIZSBhbHNvIGNyZWF0ZWQgdGhlIHNpbmdpbmcgcmFwcGVyIHdpdGggODA4cyAgIHByb2JhYmx5IHRoZSBtb3N0IGltcGFjdGZ1bCB0aGluZyBoZSdzIGV2ZXIgZG9uZS4gCk5vdyBhYm91dCBTaGlyeXUgaWYgaSByZW1lbWJlciBjb3JyZWN0bHkgaGUgZGlkbnQgYnJlYWsgb3V0LCB0aGV5IGZyZWVkIGhpbS4gU28gaSBkb3VidCBoZSBoYWQgdGhlIGFudGlkb3RlIHdpdGggaGltLiBIZSBwcm9wYWJseSBnb3QgaXQgYWZ0ZXIgaGUgZ290IGZyZWVkIGFuZCBzaW5jZSBoZSBkZWNpZGVkIHRvIGpvaW4gQkIgaGUgZ290IGFudGlkb3RlIGZvciB0aGVtIHRvbyBzaW5jZSBoZSBrbmV3IHRoYXQgdGhleSB3b3VsZCBjcm9zcyBtYWdlbGxhbiBhdCBzb21lIHBvaW50LiBBbmQgdGhlIGFtb3VudCBvZiBhbnRpZG90ZSBpbiB0aGUgcHJpc29uIGlzIHByb3BhYmx5IHBsZW50eWZ1bCBpbiBjYXNlIGEgbGFyZ2UgYW1vdW50IG9mIGdhdXJkcyBnZXQgY2F1Z2h0IGluIGEgbWVnZWxsYW4gYXR0YWNrLgpXaGVuIEkgdXNlZCB0byBzZXJ2ZSB0YWJsZXMsIG15IGdheSBtYW5hZ2VyIHVzZWQgdG8gam9raW5nbHkgZmxpcnQgd2l0aCBtZSBhbGwgdGhlIHRpbWUuIApTdHVkZW50cyB0aGF0IGRvbnQgcmVhbGx5IHBsYXkgYWxvdCBvZiBwb2tlciB3aWxsIG9mdGVuIHRpbWVzIHBheSB5b3Ugb2ZmIHdoZW4geW91IGhhdmUgc3Ryb25nIGhvbGRpbmdzLCBhbmQgbGlrZXdpc2UsIHRoZXkgcHJvYmFibHkgd29udCBmb2xkIGlmIHlvdSBhcmUgdHJ5aW5nIHRvIGJsdWZmLiAKQW5kLCBJIGtuZXcgdGhhdCBXZXN0IFZpcmdpbmlhIHdhcyBwcm9iYWJseSBtb3ZpbmcgaW4gdGhhdCBkaXJlY3Rpb24gYW5kIGhlcmUgd2UgYXJlLiAKSWYgQ2FsaWZvcm5pYSBkZWNpZGVzIGlsbGVnYWwgaW1taWdyYW50cyBjYW4gdm90ZSBpbiB0aGVpciBzdGF0ZSBhbmQgbG9jYWwgZWxlY3Rpb25zLCB0aGlzIG5vdyBhZmZlY3RzIG5hdGlvbmFsIHBvbGl0aWNzLiAKQSBmZXcgYmlnIHRoZW1lcywgc29tZSBvZiB0aGVtIGNvbnRyYWRpY3RvcnksIGFyZSBlbWVyZ2luZyBhdCB0aGlzIHllYXIncyBzaG93IGFscmVhZHkuIFNvbWUgY29tcGFuaWVzIGFyZSBnZXR0aW5nIGludG8gdGhlIHdpcmVsZXNzIGdhbWUsIHdoaWxlIG90aGVycyBjbGFpbSB0aGF0IGluIG9yZGVyIHRvIGdldCB0aGUgYmVzdCBleHBlcmllbmNlIGZyb20geW91ciBlbGVjdHJvbmljcyB5b3UgbmVlZCB0byBpbnZlc3QgaW4gaGlnaCBxdWFsaXR5IGNhYmxlcy4gCk15IGluYXVndXJhbCBzZXNzaW9uIHRvb2sgcGxhY2UgdGhpcyBzcHJpbmcuIEl0IHdhcyBhIFQgc2hpcnQgcGVyZmVjdCBtb3JuaW5nIGF0IFRoZSBXYXRlciBMaWx5IFBvb2wsIHJ1biBieSBIYXJyaWV0IE90dCBvdXQgb2YgaGVyIGJhY2t5YXJkIGluIHRoZSBTYW1tYW1pc2ggaGlsbHMuIApCdXQgcmVzdWx0cyBhcmUgcmVzdWx0cyBhbmQgaGUgb2J2aW91c2x5IHRha2VzIHRoZSBjYWtlIG9uIHRoYXQgb25lLiAKRHVlIHRvIHRoaXMsIHRoZXJlIGlzIGFuIG9uZ29pbmcgZXh0ZW5zaXZlIGVmZm9ydCB0byBlbnN1cmUgdGhhdCBvbmx5IHRoZSBiZXN0IHF1YWxpdHkgbWF0ZXJpYWxzIGFyZSB1c2VkIGluIHRoZXNlIEN1c3RvbSBQb2tlciBDaGlwcy4gUGF1bHNvbiBtYWRlIHN1cmUgdGhhdCBvbmx5IHdvcmxkIGNsYXNzIGNsYXkgd2FzIHVzZWQgaW4gdGhlaXIgZ29yZ2VvdXMgc2V0IG9mIHBva2VyIGNoaXBzLiBJbiBmYWN0LCB0aGUgdmVyeSBjaGlwcyB0aGF0IGFyZSBpbiB0aGUgNTAwIFBhdWxzb24gVG9waGF0IGFuZCBDYW5lIFBva2VyIENoaXAgU2V0IGFyZSBtYWRlIGluIGEgZmFjdG9yeSB0aGF0IGhhcyBtYWRlIHRoZSB2ZXJ5IGNoaXBzIHRoYXQgeW91IHdpbGwgZmluZCBpbiB0aGUgTGFzIFZlZ2FzIENhc2lub3MuCkFzIGEgcmVzdWx0IG9mIFRoZSBTdW5kYXkgQWdlIGludmVzdGlnYXRpb24sIHRoZSBmb3VuZGF0aW9uIGhlbGQgYW4gZW1lcmdlbmN5IGJvYXJkIG1lZXRpbmcuIFNoYW5lIFdhcm5lc29vbiBhZnRlciBhbm5vdW5jZWQgdGhlIGZvdW5kYXRpb24gd2FzIG5vdyBleHBlY3RpbmcgdG8gaGF2ZSBkb25hdGVkIG1vcmUgdGhhbiAkNG1pbGxpb24gdG8gY2hhcml0eSBieSBKYW51YXJ5IDIwMTYuIApUcmlhbmdsZSBvZiBIZWFsdGgKVGhlc2UgY2hhcmFjdGVycyB1c3VhbGx5IGFyZSBhIGJpZyBncm91cCBvZiBmcmllbmRzIHdobyBkbyBhIHRvbiBvZiBzaWxseSBzdHVmZiB3aXRoIHNvbWUgZ29hbCBpbiB0aGVyZSBmb3IgMyBob3Vycy4gCk91ciB0cmVhdG1lbnQgb2YgdGhlIG1vc3F1aXRvZXMgdGhhdCBmb3VuZCB0aGVpciB3YXkgaW50byB0aGUgdW5pdCBzaG91bGQgaGF2ZSBiZWVuIHNvbWV0aGluZyBlbnRpcmVseSBkaWZmZXJlbnQuIApIZSB0b2xkIG1lIHRoZXJlIHdlcmUgMTYwIHBlb3BsZSB3aG8gd2VyZSBzZW50IHRvIEZyYW5jZSBmb3IgdHJhaW5pbmcsIHdoZW4gbm9ybWFsbHkgZml2ZSBvciBzaXggcGVvcGxlIHdvdWxkIGhhdmUgYmVlbiBlbm91Z2guIApTbyB5ZXMsIGFueSB0ZWFtIHJlbHlpbmcgb24gS3V6IGF0IHRoZSA1IGlzIG5vdCBnb25uYSBkbyB3ZWxsLiBBbnkgdGVhbSBoYXZpbmcgdG8gcGxheSBSb25kbyA0MCBtaW5zIGEgbmlnaHQgaXMgbm90IGdvbm5hIGRvIHdlbGwuIExha2VycyBjYW4gbGVhcm4gZnJvbSB0aGlzIHllYXIgYW5kIGFyZSBzZXQgdXAgdG8gaGF2ZSBhIGdyZWF0IHllYXIgbmV4dCB5ZWFyIHdpdGggdGhlaXIgY2FwIHNwYWNlIGFuZCBmdXJ0aGVyIGRldmVsb3BtZW50IG9mIHRoZSB5b3VuZyBjb3JlLiBUaGUgZ29hbCB0aGlzIHllYXIgd2FzIHRvIHRyZWFkIHdhdGVyIHVudGlsIHdlIGNhbiBncmFiIGEgc2Vjb25kIHN0YXIgYW5kIHdlJ3JlIHN0aWxsIG9uIHRyYWNrLgpWYWRlciBjb3VsZCB0YWtlIGxlc3MgZGFtYWdlIHdoZW4gMiB0ZWFtbWF0ZXMgYXJlIG5lYXIgaGltCjg3ICg1KSwgcHAuIApDbHViIHdpbGwgYWxzbyBob2xkIHR3byBmdW5kcmFpc2luZyBldmVudHMgaW4gQXVndXN0LCBhIHBva2VyIG5pZ2h0IGluIHRoZSBFZ2xpbnRvbiBDYXNpbm8sIEVnbGludG9uIFN0cmVldCwgb24gU3VuZGF5IEF1Z3VzdCAxMywgYW5kIGEgY29uY2VydCBmZWF0dXJpbmcgS25pZ2h0cyBvZiBMZW9uIGF0IHRoZSBCbGFjayBCb3gsIER5a2UgUm9hZCwgb24gU3VuZGF5IEF1Z3VzdCAyMC4KRWFjaCBvZiB0aGVzZSBtb3ZlbWVudHMgY2FuIGJlIGRvbmUgaW4gdmFyaW91cyBwb3NpdGlvbnMgKHN1cGluZSwgdGFsbCBrbmVlbGluZywgaGFsZiBrbmVlbGluZywgc2VhdGVkLCBzdGFuZGluZywgc2Npc3NvciBzdGFuY2UpIGRlcGVuZGluZyBvbiB0aGUgdW5kZXJseWluZyBzdGFiaWxpdHkgb2YgdGhlIGluZGl2aWR1YWwgY2xpZW50LlN0YXJ0aW5nIHBvc2l0aW9uIGlzIGRpY3RhdGVkIGJ5IHRoZSBoZWFsdGggcHJvZmVzc2lvbmFsIGV2YWx1YXRpb24gb2Ygc3RhdGljLCBkeW5hbWljIGFuZCBmdW5kYW1lbnRhbCBzdGFiaWxpdHkuIApUaGUgUmFwdG9ycyBoYXZlIHRoZSBzY2hlZHVsZSBvbiB0aGVpciBzaWRlIHRoZSByZXN0IG9mIHRoZSB3YXkuIFR1ZXNkYXkncyBnYW1lIHdhcyBvbmUgb2YgdGhyZWUgZ2FtZXMgcmVtYWluaW5nIGluIHRoZSByZWd1bGFyIHNlYXNvbiBhZ2FpbnN0IHRlYW1zIHRoYXQgaGF2ZSBhIHdpbm5pbmcgcmVjb3JkLCB0aGUgZmV3ZXN0IG9mIGFueSB0ZWFtIGluIHRoZSBsZWFndWUuIApBbnlib2R5IGludGVyZXN0ZWQgaW4gbG9va2luZyBpbnRvIHRoaXMgc2hvdWxkIGNoZWNrIG91dCBNb2xseSBHYW1lLCBhIG5vdmVsL21vdmllIGFib3V0IGEgd29tYW4gd2hvIHJhbiBhIGhpZ2ggc3Rha2VzIHVuZGVyZ3JvdW5kIHBva2VyIG9wZXJhdGlvbiB3aXRoIHNvbWUgb2YgSG9sbHl3b29kIGJpZ2dlc3Qgc3RhcnMuIApPdmVydmlldyBmb3IgT2ZmaWNpYWxIZWxwSwpTUyB3b3VsZCBmbHUgdG8gdGhlIE1vb24sIHByb3B1bHNpdmVseSBsYW5kIG9uIHRoZSBtb29uLCB0YWtlIG9mZiBmcm9tIHRoZSBNb29uLCByZXR1cm4gdG8gRWFydGggYW5kIHByb3B1bHNpdmVseSBsYW5kIGVpdGhlciBvbiBsYW5kIG9yIGRvd25yYW5nZSB0byBhIGRyb25lIHNoaXAuIApQcm9jZWVkcyB0byBFbHRoYW0gUmFpbHdheSBDb3R0YWdlLiAKSSBkb24ga25vdyB3aGF0IGl0IGFib3V0IGhlciBJIGp1c3QgbG92ZSBoZXIgcGVyc29uYWxpdHkuIApBIGZldyBtb250aHMgbGF0ZXIsIGludmVzdGlnYXRvcnMgcGhvdG9ncmFwaGVkIEphY2tzb24ncyBnZW5pdGFsaWEuIApFdmVyeW9uZSBoYXMgYSBGcmVlZG9tIG5vdCB0byBiZSByZWxpZ2lvdXMuIApQYXlpbmcgJDYwIGZvciB0aGlzIGdhbWUsIGluIG15IGV5ZXMsIGlzIG5vdCB3b3J0aCBpdC4gVHJ1c3QgbWUuIEkgUkVBTExZIGVuam95IHRoZSBnYW1lLCBhbmQgSSBzZWUgdGhlIHBvdGVudGlhbCBpcyB0aGVyZS4gSSBqdXN0IHdpc2ggdGhlIGdhbWUgd291bGQgZ2V0IHNvbWUgUkVBTCBzdXN0YWluaW5nIGNvbnRlbnQuIEkgc3VyZSBpdCBiZWVuIHNhaWQgb3ZlciwgYW5kIG92ZXIsIGFuZCBvdmVyIGJlZm9yZS4gQnV0IGhvbmVzdGx5LCB0aGUgb25seSB0aGluZyB0byBzcGVuZCBtb25leSBvbiBpcywgcmF0aGVyIGxhbWUsIGNvc21ldGljcy4gUGx1cyB0aGUgb25seSBjb29sIGNvc21ldGljcyBjb21lIGFmdGVyIGEgaHVnZSBncmluZCBvZiBnZXR0aW5nIHRvIFBMIHRvIGRvIEF0aGVuYXMuIEFuZCB0aGF0IGp1c3QgYSBiaWcgZG93bnNpZGUgdG8gdGhpcyBhd2Vzb21lbHkgY29vbCBzYW5kYm94IGdhbWUuCkxhc3QgeWVhciB3ZSByYWlzZWQgJDIwOCwwMDAgZm9yIG91ciBsb2NhbCBDaGlsZHJlbnMgaG9zcGl0YWwuIEl0J3MgYW4gYW1hemluZyBldmVudCB0aGF0IEkgZW5jb3VyYWdlIGV2ZXJ5b25lIHRvIGJlIGFwYXJ0IG9mLiBUaGUgYmVzdCBwYXJ0IGlzIG9mIHRoYXQgJDIwOCwwMDAsIGV2ZXJ5IHNpbmdsZSBjZW50IGdvZXMgdG8gdGhlIENoYXJpdHksIHRoZSBzY2hvb2wgZG9lc24ndCBrZWVwIGFueSBvZiBpdCAodGhvdWdoIHRoZXJlIGhhdmUgYmVlbiBlZmZvcnRzIHRvIHRyeSwgb3VyIHN0dWRlbnQgYm9keSBoYXMgc3VjY2Vzc2Z1bGx5IHB1c2hlZCBiYWNrKQpJIHNsZWVwIGluIHRoZXJtYWwgbGF5ZXJzLCBhbmQgZWl0aGVyIGRpZyBteXNlbGYgYSBzcG90IGluIHRoZSBzbm93LCBvciBjb25zdHJ1Y3QgYSBzaGVsdGVyIHdpdGggdHJlZSBib3VnaHMgYW5kL29yIG15IGhlYXZ5IGR1dHkgdGFycC4gClRoZSBvd25lcnMgb2YgbWFueSB0cmFja3MgICBhbG9uZyB3aXRoIGdob3N0IHRyYWNrcyB0aGF0IG5vdyBvZmZlciBvbmx5IHNpbXVsY2FzdCByYWNpbmcgICBhcmUgaG9waW5nIHRvIHN1cnZpdmUgbG9uZyBlbm91Z2ggZm9yIHN0YXRlcyB0byBsZXQgdGhlbSBkcm9wIHRoZSBmYWNhZGUgb2YgZG9nIHJhY2luZyBhbHRvZ2V0aGVyIGFuZCBqdXN0IHJ1biBjYXNpbm9zLkxhd21ha2VycywgbWluZGZ1bCBvZiB0aGUgaW50ZXJlc3RzIG9mIGRlZXAgcG9ja2V0ZWQgY2FzaW5vIG9wZXJhdG9ycyB3aG8gZG9uJ3Qgd2FudCB0aGUgdW5mZXR0ZXJlZCBjb21wZXRpdGlvbiwgc2VlbSB0byBoYXZlIG90aGVyIGlkZWFzLkxhc3QgeWVhciwgV2VzdCBWaXJnaW5pYSBsYXdtYWtlcnMgcmVqZWN0ZWQgYSBiaWxsIHB1c2hlZCBieSBvbmUgb2YgdGhlIHN0YXRlJ3MgdHdvIGRvZyB0cmFja3MgdG8gY3V0IGl0cyBsaWNlbnNpbmcgZmVlcyBieSBtb3JlIHRoYW4gaGFsZiBhbmQgdG8gcmVkdWNlIHRoZSBtaW5pbXVtIG51bWJlciBvZiByYWNlIGRheXMuVHdvIG1vbnRocyBhZ28sIElvd2EgR292LiBUZXJyeSBCcmFuc3RhZCBzaWduZWQgYSBiaWxsIHRoYXQgd2lsbCBzaHV0dGVyIG9uZSBvZiB0aGUgc3RhdGUncyB0d28gdHJhY2tzIGJ5IDIwMTYuRmxvcmlkYSwgd2hpY2ggaW4gMTkzMSB3YXMgdGhlIGZpcnN0IHN0YXRlIHRvIGxlZ2FsaXplIHdhZ2VyaW5nIG9uIGdyZXlob3VuZCByYWNpbmcsIG9wdGVkIGFnYWluc3QgYSBtZWFzdXJlIGluIGl0cyBtb3N0IHJlY2VudCBsZWdpc2xhdGl2ZSBzZXNzaW9uIHRoYXQgd291bGQgaGF2ZSBhbGxvd2VkIHRyYWNrcyB0byBrZWVwIHBva2VyIGFuZCBzbG90cyBhbmQgZGl0Y2ggdGhlIHJhY2luZy4gCkkgbWFkZSBhIG5pY2UgZGlubmVyIGFuZCB0aGF0IHdhcyB0aGF0LiAKQnVyZWF1IG9mIExhYm9yIFN0YXRpc3RpY3MuIE9uIHRoZSBsb3cgZW5kLCBwYXJhbGVnYWxzIGFuZCBsZWdhbCBhc3Npc3RhbnRzIGVhcm5lZCBhIDI1dGggcGVyY2VudGlsZSBzYWxhcnkgb2YgJDM4LDIzMCwgbWVhbmluZyA3NSBwZXJjZW50IGVhcm5lZCBtb3JlIHRoYW4gdGhpcyBhbW91bnQuIFRoZSA3NXRoIHBlcmNlbnRpbGUgc2FsYXJ5IGlzICQ2Myw2NDAsIG1lYW5pbmcgMjUgcGVyY2VudCBlYXJuIG1vcmUuIApUaGUgc2VyaWVzIGFzIGEgd2hvbGUgc2VlbWVkIGxpa2UgYSBtb3JlIChmcm9tIGFuIGV4dHJlbWVseSBIb2JiZXNpYW4gcG9pbnQgb2YgdmlldyBvZiBodW1hbml0eSkgdmVyc2lvbiBvZiBUb2xraWVuIGFsaWduZWQgZmFudGFzeS4KQ2hyaXMgRGFyY3ksIGEgTWV0cm8gUG9saWNlIHNwb2tlc21hbiwgc2FpZC5JbiBIZW5kZXJzb24sIHRoZXJlIGFyZSBqdXN0IHR3byBtYXNzYWdlIGVzdGFibGlzaG1lbnRzLiAKSSB0b29rIHVwIG15IG1pc3Npb24gcHJvdWRseS4gSSB3YXMgYSBiaWcga2lkIG5vdy4gCkJlaW5nIGFibGUgdG8gcmVseSBvbiBrbm93bGVkZ2VhYmxlIHN0YWZmIGFuZCBjdXR0aW5nIGVkZ2Ugc29mdHdhcmUgaXMgZXNzZW50aWFsLCBlc3BlY2lhbGx5IGlmIHlvdSBkbyBub3QgaGF2ZSB0b28gbXVjaCBrbm93bGVkZ2UgYWJvdXQgZ2FtYmxpbmcuIApUaGlzIHllYXIsIHN1cHBsaWVycyBhcmUgZXhwZWN0ZWQgdG8gY29tcGxldGUgYSByZWNvcmQgJDU3IGJpbGxpb24gd29ydGggb2YgYWNxdWlzaXRpb25zLCBuZWFybHkgZG91YmxlIHRoZSB2YWx1ZSBvZiBkZWFscyBpbiAyMDE2LCBhY2NvcmRpbmcgdG8gYSBzdHVkeSBieSBQcmljZXdhdGVyaG91c2VDb29wZXJzLgpTaGUgdGFrZXMgbXkgYXJtIGFuZCB3aGVuIHdlIGdldCB0byB0aGUgZ2F0ZSwgc2hlIGN1dHMgbWUgb2ZmIGZyb20gc2F5aW5nIGdvb2RuaWdodCBhbmQgaW52aXRlcyBtZSB1cHN0YWlycyB0bywgYW5kIEkgcXVvdGUsICJQZXQgbXkuIApPcCBkZSB2aWp2ZXIgd2VtZWxkZSBoZXQgbmF0dXVybGlqayB2YW4gZGUgZWNodGUgZWVuZGplcy4gCkJ1dCwgZG9jdG9ycyBhbHNvIHdhcm4gdGhlIGZsdSB2aXJ1cyBjYW4gYWxzbyBjYXVzZSBvdGhlciBoZWFsdGggcHJvYmxlbXMsIGxpa2UgaGVhcnQgZGlzZWFzZS4gU3BlY2lmaWNhbGx5LCBjb25nZXN0aXZlIGhlYXJ0IGZhaWx1cmUsIHdoaWNoIGFmZmVjdHMgbmVhcmx5IHNpeCBtaWxsaW9uIEFtZXJpY2FucyBhbmQgaGFzIG5vIGN1cmUuLiAKQmFtIEFkZWJheW8gc2NvcmVkIDE3IHBvaW50cyBhbmQgSnVzdGlzZSBXaW5zbG93IGZpbmlzaGVkIHdpdGggMTYgcG9pbnRzLCBuaW5lIHJlYm91bmRzIGFuZCBuaW5lIGFzc2lzdHMgZm9yIHRoZSBIZWF0LCB3aG8gYmVhdCBDbGV2ZWxhbmQgYXQgaG9tZSBmb3IgdGhlIDE2dGggY29uc2VjdXRpdmUgdGltZSBhbmQgZXh0ZW5kZWQgdGhlaXIgY3VycmVudCB3aW5uaW5nIHN0cmVhayB0byBmb3VyIGdhbWVzLiBLZWxseSBPbHlueWsgc2NvcmVkIDE1LCBNY0dydWRlciBoYWQgMTMgYW5kIER3eWFuZSBXYWRlIGZpbmlzaGVkIHdpdGggMTIgZm9yIE1pYW1pLi4gCklmIGEgcGxheWVyIGhhcyB0aGUgbG93ZXN0IHZhbHVlIG9mIGV4cG9zZWQgY2FyZHMgKGNhbGxlZCB0aGUgYnJpbmcgaW4pLCB0aGF0IHBsYXllciB3aWxsIGhhdmUgdG8gbWFrZSBhIHdhZ2VyLiBIaXMgY2hvaWNlcyB3aWxsIGJlIHRvIG1ha2UgYSBzbWFsbCBiZXQgZnVsbCBvciBhIHNtYWxsIGJldCBoYWxmLiBBbiBleGFtcGxlIHdpbGwgYmUgZWl0aGVyIGhlIGRvZXMgJDEgb3IgJDIgaW4gYSAyLzQgcG9rZXIgZ2FtZS4gCkxhYnJhZGEgc2F5cyBzaGUgd2FzIGFza2VkIHRvIGRvIHRoZSBtb3ZpZSBhYm91dCB0aHJlZSB5ZWFycyBhZ28sIHdoZW4gc2hlIHdhcyBzZWFyY2hpbmcgZm9yIGEgbmV3IEs5IHBhcnRuZXIuLiAKSSB0b3JuLCBvbiB0aGUgb25lIGhhbmQgSSBoYXRlIGV2ZXJ5dGhpbmcgYWJvdXQgdGhpcyByZWFsaXR5IHdpdGggVHJ1bXAgYXMgcHJlc2lkZW50LiBCdXQgb24gdGhlIG90aGVyIGhhbmQsIHdhdGNoaW5nIHRoaXMgYWxsIHVuZm9sZCBhcyBSZXB1YmxpY2FucyBnZW5lcmFsbHkgYXJlIHR1cm5pbmcgb24gdGhlbXNlbHZlcywgZWF0aW5nIHRoZWlyIG93biBhbmQgRGVtb2NyYXRzIChhZ2FpbiBnZW5lcmFsKSBhcmUgdW5pZmllZCBhZ2FpbnN0IGFsbCBvZiB0aGlzIGFuZCBzaG93aW5nIHNvbWUgYWN0dWFsIGJhY2tib25lLiBJdCBhbHNvIG5pY2UgaW4gYSB3YXkuLiAKVGhlbiB0aGVyZSBhcmUgdGhlIHRlY2huaWNhbCBkZXRhaWxzLiAiV2UndmUgcHJlc2VudGVkIGEgbG90IG9mIGRpc3BhcmF0ZSBwYXJ0cywiIFdoaXR0ZXJzIHNheXMuICJIb3cgZG8gdGhleSBpbnRlZ3JhdGUgdGhlbT8gVGhleSBjYW4gYWx0ZXIgdGhlIGNvbG9yLCBibGVuZCB0aGUgcGllY2VzIHRvZ2V0aGVyIHVzaW5nIHRoZSBkaWdpdGFsIHRvb2xzLiIgVGhlIGZpcnN0IHJvdW5kIHdpbGwgYmUganVkZ2VkIG9uIHRoZSB0d28gZGltZW5zaW9uYWwgaW1hZ2Ugc3VibWl0dGVkLCBidXQgYSBzZWNvbmQgcm91bmQgd2lsbCB0YWtlIGEgY2xvc2UgbG9vayBhdCB0aGUgUGhvdG9zaG9wIGZpbGVzIGFydGlzdHMgdXNlZC4KIkhlIGxpdmVzIGluIGEgaGFwcHksIGNvb2wgcGxhY2Ugd2hlcmUgZXZlcnlvbmUgc2lwcyB0aGVpciBsYXR0ZXMsIGxpc3RlbnMgdG8gTmF0aW9uYWwgUHVibGljIFJhZGlvIGFuZCByZWFkcyAnVGhlIE5ldyBZb3JrIFRpbWVzJywiIG9uZSB5b3VuZyBDbGludG9uIHN0YWZmZXIgc2FpZCBsYXN0IEF1Z3VzdC4gIkJ1dCBpdCdzIG5vdCB0aGUgcmVhbCB3b3JsZC4gSGUnZCBoYXZlIGJlZW4gYSBncmVhdCBndXkgdG8gaGFuZyBvdXQgd2l0aCBhdCBjb2xsZWdlIGJ1dCBoZSdzIG5vdCB0b3VnaCBlbm91Z2ggZm9yIGFueSBvZiB0aGlzLiAKRWFjaCB0aW1lIHNoZSB3b3VsZCBwYXkgaGVyIGZpbmVzIGFuZCB0aGVuIGNvbnRpbnVlIGJ1c2luZXNzIGFzIHVzdWFsIHVudGlsIHNoZSB3YXMgc2VudGVuY2VkLCBhdCBhZ2UgNzUsIHRvIGEgc3RhdGUgcGVuaXRlbnRpYXJ5IGZvciByZXBlYXRlZCBjb252aWN0aW9ucyBmb3IgYmVpbmcgYSBtYWRhbS4gU291dGggRGFrb3RhIEdvdmVybm9yIEJ1bG93IGltbWVkaWF0ZWx5IHBhcmRvbmVkIGhlciBpbiAxOTI4LCBrbm93aW5nIGhlIGNvdWxkIG5vdCBzZW5kIHRoZSBpbmZhbW91cyB3aGl0ZSBoYWlyZWQgb2xkIGxhZHkgdG8gcHJpc29uLi4gCkFtIEFuZmFuZyBzdGFuZCBkaWUgSWRlZSwgdm9yd2llZ2VuZCBncm9lIFNhbGF0ZSBhbHMgSGF1cHRzcGVpc2UgYW56dWJpZXRlbiBkZW5uIGRhcyBnYWIgZXMgYmlzIGRhaGluIGF1ZiBnYW56IExhIFBhbG1hIG5pY2h0IGRhbmViZW4gYXVjaCBlaW5lIGtsZWluZSBBdXN3YWhsIGFuIHdhcm1lbiBTcGVpc2VuLCBGaXNjaCwgRmxlaXNjaCB1bmQgdmVnZXRhcmlzY2hlIEtsZWluaWdrZWl0ZW4uIApCZW5kIGtuZWVzIHNsaWdodGx5LiBEbyBub3Qgcm9jayBmb3J3YXJkIGFuZCBiYWNrd2FyZC4gClRlcm0uIApBbmQgeW91IFdBTlQgcGVvcGxlIHRvIGNhbGwgeW91IHdpdGggYSBoYW5kIGxpa2UgUVEgc28gaXRzIGxpa2UgYSBkb3VibGUgZWRnZWQgc3dvcmQuIApUaGV5IGRpZG4gYXBwcmVjaWF0ZSBhbnkgdGhpbmcgeW91IGRpZCBmb3IgdGhlbSBvciBwYWlkIGZvci4gWW91ciBEVyBuZWVkIHRvIHB1dCBoZXIgcGFyZW50cyBvbiBhbiBpbmZvcm1hdGlvbiBkaWV0LiAKSSBwbGF5aW5nIGEgNjAwIHN0YXIgZ2FtZSByaWdodCBub3cgYW5kIGl0IDIzNTEuIApMZWFybmluZyBwb2tlciBjYW4gYmUgYSB2ZXJ5IGVuam95YWJsZSBleHBlcmllbmNlIGFuZCBjYW4gdHJ1bHkgb3BlbiB1cCBhIG5ldyBicmFuY2ggb2YgeW91ciBsaWZlIHRoYXQgeW91J3ZlIG5ldmVyIHNlZW4gYmVmb3JlLiBJdCBpcyBjb21tb24gZm9yIGluZGl2aWR1YWxzIHRvIGdldCB0b2dldGhlciBvbiBhIHJlZ3VsYXIgYmFzZSB0byBwbGF5IHBva2VyIG5vdCBqdXN0IGZvciBjb21wZXRpdGlvbiBidXQgYXMgZnJpZW5kcyBlbmpveWluZyBlYWNoIG90aGVyJ3MgY29tcGFueS4gSm9pbmluZyBsYXJnZXIgcG9rZXIgdG91cm5hbWVudHMgaXMgYWxzbyBhIGdyZWF0IHdheSB0byBtYWtlIGZyaWVuZHMgY29uc2lkZXJpbmcgZmVsbG93IHBsYXllcnMgYWxyZWFkeSBoYXZlIHNvbWV0aGluZyBpbiBjb21tb24gd2l0aCB5b3UuIApMaW5rZSBTZWl0ZTogV2VubiBkaWUgZHJpdHRsZXR6dGUgTSBlaW5lIHJlIE0gaXN0IHVuZCBkaWUgdm9ybGV0enRlIGVpbmUgbGkgTSwgZGFubiBkaWUgYmVpZGVuIE0gcmUgYmVyem9nZW4genVzYW1tZW5zdHJpY2tlbi4gKHJlIE0gd2llIHp1bSBSZWNodHNzdHJpY2tlbiBhYmhlYmVuLCB2b3JsZXR6dGUgTSByZSBzdHJpY2tlbiB1bmQgZGllIGFiZ2Vob2JlbmUgTSBiZXIgZGllIHJlIE0gemllaGVuKS4gV2VubiBkaWUgZHJpdHRsZXR6dGUgTSBlaW5lIGxpIE0gaXN0IHVuZCBkaWUgdm9ybGV0enRlIGVpbmUgcmUgTSBpc3QsIGJlaWRlIE0gbGlua3MgenVzYW1tZW5zdHJpY2tlbi4uIApBIFJldmlldyBvZiB0aGUgMTAwIFBhdWxzb24gQ2xheSBQb2tlciBDaGlwIFNldApEb2NoIGRpZSBBdXNzYWdlIGRlcyBNdXNpY2FscyBpc3Qgd2VpdCBtZWhyIGFscyBudXIgQWJlbnRldWVyIG9kZXIgTG92ZSBTdG9yeS4gSmFuZSBQb3J0ZXIsIGRpZSBnZW1laW5zYW0gbWl0IGlocmVtIFZhdGVyIG5hY2ggQWZyaWthIGthbSwgdW0gR29yaWxsYXMgenUgZmFuZ2VuLCBtdXNzIGVya2VubmVuLCBkYXNzIGVzIHNpY2ggYmVpIGRlbiBQcmltYXRlbiB1bSBXZXNlbiBoYW5kZWx0LiBEaWUgR29yaWxsYXMgbGViZW4gaW4gRmFtaWxpZW4uIERlciBTaWxiZXJyY2tlbiBhbHMgQW5maHJlciBkZXIgU2lwcGUgaXN0IExlaXRlciB1bmQgQmVzY2h0emVyLiBVbmQgZGllIGdydGUgQmVkcm9odW5nIGRpZXNlcyBGYW1pbGllbmxlYmVucyBpc3QgZGVyIE1lbnNjaC4KRGF2aWQgV2lsbGlhbXMgICBQcm9mZXNzaW9uYWwgUG9rZXIgUGxheWVyIFJldmlldyBTZXJpZXMKSSBjaGFtcGlvbiB0aGUgcmlnaHQgb2YgaW5kaXZpZHVhbHMgdG8gc2hhcmUgdGhpbmdzIHRoZXkgb3duLiBUaGF0IGl0IGFmZmVjdHMgYWxidW0gc2FsZXMgaXMgbmVpdGhlciBoZXJlIG5vciB0aGVyZSwgaXRzIGp1c3QgYSBieXByb2R1Y3Qgb2YgcHJvZ3Jlc3MuIFBwbCB3aG8gbWFrZSBwaG9uZSBib290aHMgYXJlbnQgZW50aXRsZWQgdG8gbWUgdXNpbmcgcGhvbmUgYm9vdGhlcy4gClR1cHBlbnMgdQpJdCBzb3VuZHMgbGlrZSB5b3UgYWxyZWFkeSBiZWluZyBhIGdyZWF0IGJyb3RoZXIuCldoZW4gZG8gc29tZSBFYXN0ZXJuIE9ydGhvZG94IGNodXJjaGVzIGNlbGVicmF0ZSBDaHJpc3RtYXM/V2hlbiBkbyBzb21lIEVhc3Rlcm4gT3J0aG9kb3ggY2h1cmNoZXMgY2VsZWJyYXRlIENocmlzdG1hcz9XaGVuIGRvIHNvbWUgRWFzdGVybiBPcnRob2RveCBDaHJpc3RpYW5zIGNlbGVicmF0ZSBDaHJpc3RtYXM/CkF2YW50IGRlIHNlIGNvbnNhY3JlciBhdSBmb290YmFsbCwgaWwgam91YWl0IGF1IHBva2VyIGV0IHNvbiBhcmdlbnQgcGFzc2FpdCBkYW5zIGxlcyBwYXJpcyBzdXIgbGVzIGNvdXJzZXMgZGUgY2hldmF1eC4gIkNlIHRyYXZhaWwgbSdhIHNhdXYgbGEgdmllLCAgMzcgYW5zLCBqJ3RhaXMgZW4gcGxlaW5lIGRwcmVzc2lvbiBhcHJzIG1vbiBkaXZvcmNlIiwgc2Ugc291dmllbnQgaWwuCk5vdyB0aGlzIHRha2VzIGEgbGl0dGxlIGZvcmV0aG91Z2h0LCBzbyBkb24ndCB3YWl0IHVudGlsIHRoZSBsYXN0IG1pbnV0ZS4gCkl0IGhhcyBiZWVuIGEgbWl4ZWQgYmFnIG9mIHJlc3VsdHMgZm9yIGJvdGggcmlnaHQgaGFuZGVycyBhcyBuZWl0aGVyIGhhcyBncmFiYmVkIHRoZSBqb2IuLiAKVGhyZWFkcyB3aWxsIGJlIGFyY2hpdmVkIGR1cmluZyB0aGlzIHJlbW92YWwgcGVyaW9kIGVpdGhlciB2aWEgYSBzdGlja3kgbW9kIGNvbW1lbnQgb3IgYXQgdGhlIHRvcCBvZiB0aGUgbGl2ZSBkaXNjdXNzaW9uIHRocmVhZCBhcyB0aGUgZmluYWwgdXBkYXRlLiAKVGhlIHdheSBwZW9wbGUgd2VyZSB3b3JkaW5nIGl0IGFuZCB0aGUgd2F5IEkgdG9vayBpdCBtYWRlIG1lIHRoaW5rIHRoZXkgd2VyZSBzYXlpbmcgIkkgY2xpY2sgb24gYSB0cmFpbGVyIHRvIHdhdGNoIGl0LiAKSSBzdGlsbCBkb24ndCB0aGluayBJJ20gZ29vZC4gSSBzdGlsbCBoYXZlIHRoaXMgZmVlbGluZyBJJ20gYSB0b3RhbCBpbXBvc3Rvci4gQnV0IGF0IFBDQSwgd2hlbiBJIHdvbiB0aGUgbmF0aW9uYWxzIGFuZCBoYWQgYSBkZWVwIHJ1biBhZnRlciB0aGF0LCBhbmQgdGhlbiBjYW1lIGluIHNlY29uZCBpbiBNYWNhdSwgYXQgdGhlIFBDQSBpdCBzdGFydGVkIGNvbWluZyB0b2dldGhlciwgSSBnb3QgbHVja3kgdG8gd2luIHRoZSB0b3VybmFtZW50LCB5b3Ugc3RpbGwgbmVlZCBsdWNrIHRvIHdpbi4gCkJsdWVpc3RoZW9ubHkxICAxIHBvaW50ICBzdWJtaXR0ZWQgOSBkYXlzIGFnbwpXaGVuIHdhcyB0aGUgbGFzdCB0aW1lIHdlIHNhdyBNYXJ0aW4sIG9yIGhpcyAiYmVzdCBmcmllbmQiIEplZmYgKG9yIHdoYXRldmVyIGhpcyBuYW1lIHdhcywgcG9pbnQgaXMgaGUgYmVlbiBnb25lIGZvciBhZ2VzKS4uIApTYW5zIG91YmxpZXIgbCdvdXZlcnR1cmUgcmNlbnRlIGRlIGxhIHNhbGxlIGRlIGNvbnNvbW1hdGlvbiAgbW9pbmRyZSByaXNxdWUgKFNDTVIpLi4gClRoZW4gaGUgbGVmdC4gVEhFTiBoZSBjYW1lIGJhY2sgZml2ZSBtaW51dGVzIGxhdGVyIGFuZCBjb21wbGFpbmVkIHRoYXQgbXkgY29uY2Vzc2lvbmlzdCB3b3VsZG4ndCBnaXZlIGhpbSB0aGUgb3RoZXIgaXRlbXMgZm9yIGZyZWUuLiAKTWl4ZWQgZmVlbGluZ3MgYWJvdXQgZmlzaGluZy4gSWYgeW91IG5vdCB0b28gaW52ZXN0ZWQgeWV0IGFuZCBoYXZlIHRoZSB0aW1lIGFuZCBtb3RpdmF0aW9uIGkgcmVjb21tZW5lZCBhbm90aGVyIGdhdGhlcmluZyBwcm9mClNvbWV0aW1lcyBJIGZlZWwgbGlrZSBJIGEgc3Blcm0gZG9ub3IgYW5kIHNoZSBzZXJ2ZWQgdXMgdXAgdG8gaGVyIHBhcmVudHMgYXMgYSBzYWNyaWZpY2Ugb3Igc29tZXRoaW5nLiAKVHJlYXQgeW91ciBnYW1ibGluZyBiYW5rcm9sbCBhcyBhbiBlbnRlcnRhaW5tZW50IGV4cGVuc2UgYW5kIGJ1ZGdldCBhY2NvcmRpbmdseS4gCjQpIGxhY2sgb2YgZm9yZXBsYXkgaXMgdXN1YWxseSBwYWluZnVsLiAKRmlyc3Qgb2YgYWxsLCB0aGFua3MgYSBsb3QgZm9yIHlvdXIgYWxsIGhlbHBzIGluIHRoZSBibG9nZ3MuIFRoZXkgYXJlIHJlYWxseSB2ZXJ5IGhlbHBmdWwuCkkgdGhpbmsgdGhpcyBpcyBhIGxvdCBoYXJkZXIgdG8gYWNjb21wbGlzaCB0aGVuIGl0IGlzIHRvIGFydGljdWxhdGUuIFBsYXlpbmcgZ29vZCBwb2tlciBpcyBoYXJkLCB0aGVyZSBhcmUgYSBtaWxsaW9uIGRpZmZlcmVudCB3YXlzIHRvIGdlbmVyYXRlIHNlbGYgZG91YnQuIGl0IGlzIGhhcmQgdG8gbm90IHdhbnQgdG8gc2VlayB2YWxpZGF0aW9uIG9yIHZlbnQgZnJ1c3RyYXRpb24gYWZ0ZXIgeW91IG1ha2UgYSB0b3VnaCBkZWNpc2lvbiBhbmQgZW5kIHVwIGxvc2luZy4gaXQgaXMgdGhlIHBhcnQgb2YgbXkgZ2FtZSBJIGFtIGN1cnJlbnRseSB3b3JraW5nIG9uIG15c2VsZi4gSSBhbSBhIHZlcnkgY2hhdHR5IHBlcnNvbiBhbmQgdHJ5IHRvIHRhbGsgYW5kIGtlZXAgdGhlIHRhYmxlIGxpdmVseSBtb3JlIG9mdGVuIHRoZW4gbm90LCBidXQgdGhlcmUgYXJlIGdvaW5nIHRvIGJlIHN0cmV0Y2hlcyBvZiB0aW1lIHdoZXJlIEkgbG9vayBsaWtlIHRoZSBtdXRlIGRpY2sgaW4gYSBob29kaWUgcm9ja2luZyBoaXMgQWlyIFBvZHMuIElmIHBlb3BsZSB3ZXJlIGdvb2QgZW5vdWdoIHRoYXQgdGhleSBoYWQgbm8gcmVhc29uIHRvIGRvdWJ0IHRoZXJlIHBsYXksIHRoZXkgd291bGRuIGJlIHBsYXlpbmcgMS8zLgpKdXN0IHRyeSB0byBiZSBhcyBzdXJlIGFzIHlvdSBjYW4gdGhhdCBsZWF2aW5nIHRoZSBvZmZpY2UgU2F0dXJkYXkgdGhhdCB5b3UgaGF2ZSBhIGdvb2QgaGFuZGxlIG9uIHdoYXQgZ29pbmcgb24uIFRoZXJlIGlzIG5vIHN1Y2ggdGhpbmcgYXMgYSBzdHVwaWQgcXVlc3Rpb24sIG9ubHkgc3R1cGlkIGFuc3dlcnMuIEdvb2QgbHVjay4uIApIYXMgYmVlbiBhbiBhbG1vc3QgbmF0dXJhbCBmb3JjZSB0byBwdXNoIHVzIHRvIGJlY29tZSBhbiBlbXBpcmUgKHNpbmNlIHdlIGFyZSB0aGUgbW9zdCBwb3dlcmZ1bCBjb3VudHJ5IGluIHRoZSB3b3JsZCksIGV2ZW4gdGhvdWdoIHRoZXJlIGlzIGFsd2F5cyBzdHJvbmcgc2VudGltZW50IGFnYWluc3QgaXQuIFdlIGhhZCB2ZXJ5IGZldyBhbmQgYXV0b25vbW91cyBjb2xvbmllcyBmb3Igb3VyIG1pZ2h0LCBhbmQgd2hlbiBnaXZlbiBhIGhlZ2Vtb255LCB3ZSBkaWRuIHRha2UgY29sb25pZXMgYW5kIGZvcmNlZCB0aGUgZm9ybWVyIGVtcGlyZXMgdG8gcmVsaW5xdWlzaCB0aGVpcnMuLiAKQW5zd2Vyc01lZGlhIHJlcHJlc2VudHMgb3VyIGV4cGFuZGluZyBzZXQgb2YgbWFya2V0aW5nIHNlcnZpY2VzIGluY2x1ZGluZyBjb250ZW50IHN0cmF0ZWd5LCBuYXJyYXRpdmUgY29uc3VsdGluZywgc3Rvcnl0ZWxsaW5nIGFuZCBicmFuZGVkIGNvbnRlbnQgY3JlYXRpb24gZm9yIG91ciBjbGllbnRzLiBXZSBhcmUgbG9va2luZyBmb3IgYSBoaWdoIHBlcmZvcm1pbmcsIGhpZ2ggZW5lcmd5IGFuZCBjdXN0b21lciBmb2N1c2VkIGV4ZWN1dGl2ZSB3aG8gaXMgcGFzc2lvbmF0ZSBhYm91dCBncm93aW5nIGJ1c2luZXNzZXMsIGFuZCBkZWxpdmVyaW5nIHJlc3VsdHMgaW4gYSBxdWlja2x5IGV2b2x2aW5nIHRlY2hub2xvZ3kgZHJpdmVuIGluZHVzdHJ5LiBMZWFybiBtb3JlIGFib3V0IHRoaXMgcG9zaXRpb24uLiAKQWNjb3JkaW5nIHRvIHRoZSB3ZWJzaXRlICJCaWcgQnJvdGhlciBEYWlseSIsIHdoaWNoIGhhcyBjb21waWxlZCB2YXJpb3VzIHN0YXRzIGZyb20gYWxsIDE3IHNlYXNvbnMgb2YgJ0JpZyBCcm90aGVyJywgUm91c3NvIGlzIHF1aWNrbHkgYmVjb21pbmcgb25lIHRoZSBiZXN0IHBsYXllcnMgaW4gQkIgaGlzdG9yeS4gCkxpZmUgaXMgZ29vZC4gVGhhbmsgeW91IHRvIG15IGJlc3QgZnJpZW5kIHBhcmVudHMsIGNvdWxkbiBiZSB3aGVyZSBJIGFtIHRvZGF5LgpJIGhhdmUgc2ltaWxhciBwcm9ibGVtcyB3aXRoIGNpdHkgcGFya2luZyAgIEkgdXN1YWxseSBoYXZlIG5vIHByb2JsZW0gZHJpdmluZywgYnV0IHRoZW4gZmluZGluZyBhIHNwb3QgYW5kIHRoZSBpZGVhIG9mIGNpcmNsaW5nIGZvciBhIGxvbmcgdGltZSBtYWtlcyBtZSBzdXBlciBhbnhpb3VzLiBTbyB3aGF0IEkgc3RhcnRlZCBkb2luZyB3YXMgbWFwcGluZyBvdXQgYSBwYXJraW5nIGdhcmFnZSBuZWFyIHdoZXJlIHdlIHdlcmUgZ29pbmcuIEkga25vdyBpdCBjb3N0cyAkMjAgJDMwLCBidXQgaXQgbWVhbnMgSSBoYXZlIGEgZGVzdGluYXRpb24gdG8gZ28gdG8gYW5kIGNhbiBlYXNpbHkgZmlndXJlIG91dC4gCkFzIHNoZSBhcHByb2FjaGVzLCBzaGUgc2F5cyBvdXQgbG91ZCwgIlNhbS4gCklzIGFueW9uZSBlbHNlIGRpc2FwcG9pbnRlZCBieSB0aGVzZSB0eXBlIG9mIHBob3Rvcy92aWRlb3MgdGhhdCBjb21lIG91dCBvZiBOb3J0aCBLb3JlYSAob3IgZXZlbiBDdWJhKT8gSXQgYWx3YXlzIG1vcmUgbGlrZSwgIkxvb2sgaG93IHN0dXBpZC9wb29yL2JhY2t3YXJkcyBOb3J0aCBLb3JlYSBpcyEiIEl0IGRvZXNuIHJlYWxseSBtYWtlIG1lIGZlZWwgbGlrZSBOb3J0aCBLb3JlYSBpcyBhIHRocmVhdCB3b3J0aCBldmVuIGNhcmluZyBhYm91dC4gSW5zdGVhZCwgSSB3b3VsZCBsaWtlIHRvIHNlZSBhY3R1YWwgZG9jdW1lbnRhdGlvbiB0aGF0IGNvbmZpcm0gdGhlIHNhZCBzdGF0ZSBvdmVyIHRoZXJlLiBOb3QgcGljdHVyZXMgb2YgYSBza2lubnkgZmFybWVyLCBidXQgcGljdHVyZXMgb2YgZHlpbmcgcGVvcGxlLiAKQXQgbGVhc3QgdGhlIGh1Z2UgY2hpcHN0YWNrcyB0aGF0IHBlb3BsZSBzb21ldGltZXMgcG9zdCBhcmUgaW50ZXJlc3RpbmcgYW5kIEJCSnMgZGVzZXJ2ZSBhIHBhdCBvbiB0aGUgYmFjayBidXQgdGhlc2UgIk9NRyBJIGhpdCBteSBmaXJzdCBST1lBTCBGTFVTSCEhISEhISIgb3IgIkxvb2sgYXQgdGhpcyBRdWFkcyB2cy4gCkluIHRoZSBleWVzIG9mIHRoZSBDaHVyY2ggb2YgRW5nbGFuZCB0aGV5IHdlcmUgYWR1bHRlcmVycyB3aG8gbXVzdCBjYXJyeSBzb21lIGJsYW1lIGZvciB0aGUgYnJlYWtkb3duIG9mIHRoZWlyIGZpcnN0IG1hcnJpYWdlczsgYWxzbywgTXJzIFBhcmtlciBCb3dsZXMncyBodXNiYW5kIHdhcyBzdGlsbCBhbGl2ZS4gCkluIHRoaXMgc2VjdGlvbiwgd2Ugd2lsbCBzaG93IGhvdyB5b3UgY2FuIHJlZHVjZSB5b3VyIGNhdCdzIHJpc2sgZm9yIGN5c3RpdGlzLiAKIkJlY2F1c2UgSSd2ZSB0YWtlbiBjYXJlIG9mIG15IGJvZHksIG15IGVuZG9ycGhpbnMgYXJlIGdvaW5nLCBteSBibG9vZCBpcyBwdW1waW5nLiBJJ20gdGFraW5nIGNhcmUgb2YgdGhlIG9uZSBib2R5IEkgaGF2ZS4iIEluIG90aGVyIFBlb3BsZSBpbnRlcnZpZXdzLCBzaGUgaGFwcGlseSBzaGFyZWQgaGVyIHNraW4gY2FyZSByb3V0aW5lIHdoaWNoLCBvZGRseSBlbm91Z2gsIHJldm9sdmVzIGFyb3VuZCB0aGUgdmVyeSBwcm9kdWN0cyBzaGUncyBwYWlkIHRvIGVuZG9yc2UuClN0aWxsLCBpdCB0dXJuZWQgb3V0IHdlbGwgYW5kIHRoZSBwZXJzb24gSSBnYXZlIGl0IHRvIGxpa2VzIGl0LCBzbyBuaWZ0eSEgT25lIHRpcCBpbiBjYXNlIGl0IGRpZG4ndCBvY2N1ciB0byB5b3U6IG15IFNPIHRvb2sgdGhlIGNvdmVyIG9mZiB0aGUgc3BpcmFscyBmb3IgbWUgYW5kIHB1dCBpdCBiYWNrIG9uIHdoZW4gSSB3YXMgZG9uZS4gU08gTVVDSCBFQVNJRVIgdGhhbiB0cnlpbmcgdG8gYmFsYW5jZSBhbGwgdGhvc2UgcGFnZXMhISBJIGRpZG4ndCB0aGluayBpdCB3b3VsZCBiZSBzbyBlYXN5IHRvIHJlbW92ZSwgYnV0IEknbSBzbyBnbGFkIGl0IHdhcyEuIApZZWFoIHRoYXQncyB3aGF0IEkgbWVhbnQgc29ycnkuIE92ZXJhbGwgaXQgd2FzIGp1c3Qgc3VwZWVlcnJyIGNvcm55LCBsaWtlIHRoZSBtYWluIGNoYXJhY3RlcnMgbmFtZSBpcyBmdWNraW4gImFjZSIgdG8gZ2l2ZSB5b3UgYW4gaWRlYSBsbWZhby4gSSBjb3VsZG4ndCBtYWtlIGl0IHBhc3QgbGlrZSAzMCBtaW4gb3Igc28sIGJ1dCBiYXNpY2FsbHkgdGhlc2UgNiBvciBzbyBtZWQgc3R1ZGVudHMgZ2V0IHRoZSBpZGVhIHRoYXQgdGhleSdyZSBnb25uYSBtYWtlIG1vbmV5IGJ5IGNyZWF0aW5nIHNvbWUgcG9rZXIgc3VwZXIgdGVhbSB3aXRoIGFjZSBhcyB0aGUgYWN0dWFsIHBsYXllci4gCk5laXRoZXIgbGlrZWQgaXQsIGJvdGggd2FudGVkIHRvIGJlIGp1c3QgR3JhbmRtYSwgYnV0IEkgdG9sZCB0aGVtIGl0IHdhcyBzbyBzaGUgd291bGQga25vdyB0aGVpciB2b2ljZXMgYXBhcnQgKEREIG1vc3RseSBzcG9rZSB0byB0aGVtIG9uIHRoZSBwaG9uZSBzbyBib3RoIGJlaW5nIGp1c3QgR3JhbmRtYSB3b3VsZCBoYXZlIG5vdCBtYWRlIGEgY2xlYW4gbGluZSBiZXR3ZWVuIHRoZW0pLi4gCiJTaGUncyBwcmVnbmFudCwiIEVsbGVuIHNhaWQsIG1hdHRlciBvZiBmYWN0bHkuCkkgcmVhbGx5IHRoaW5rIGl0IHRvb2sgbWUsIHRoZWlyIHByZWduYW50IGdyYW5kZGF1Z2h0ZXIsIHNheWluZyBpdCBhYm91dCB0aGVpciB1bmJvcm4gZ3JlYXQgZ3JhbmRzb24sIGZvciB0aGVtIHRvIHJlYWxpemUgdGhhdCBpdCBub3QgYWJvdXQgd2hhdCBhIGNvbXBhbnkgZGVzZXJ2ZXMgZnJvbSBpdHMgZW1wbG95ZWVzLCBpdCBhYm91dCB0aGUgaHVtYW5pdHkgb2Ygd2hhdCBhIG5ld2Jvcm4gY2hpbGQgbmVlZHMuCldoaWxlIHdlIGFsbCBsaWtlIGJlaW5nIENhcmQgU2h1ZmZsZXIgUHJvcyBhbmQgZG9pbmcgb3VyIHBhcnQgZm9yIGV2ZXJ5b25lIHRvIGVuam95IGEgZ29vZCBjYXJkIGdhbWUsIGl0IGlzIG5vdCBuZWNlc3NhcnkgYW55bW9yZS4gCjYuIEJvdHRvbSBsaW5lOiB3aGVhdCBpcyBhbiBhZGRpY3RpdmUgYXBwZXRpdGUgc3RpbXVsYW50LgpZb3UgY2FuIGFsbW9zdCBmZWVsIGhlciB3aGl0ZSBwYW5pYyBidWJibGluZyBhYm91dCBiZWluZyBhICJNaW5vcml0eSIgYW5kIHRoZSAiYmxhY2sgYW5kIGhpc3BhbmljIGtpZHMiIHdobyAicGFjay4gb3VyIG1ldHJvIGFyZWEuIgpBZ2FpbiwgaG9sZCB0aGVtIGluIGxvdmluZyBraW5kbmVzcyAgIHVzZSB3aGljaGV2ZXIgb2YgdGhlIHdheXMgd29ya3MgdGhlIGJlc3QuIExldCBhbnkgZGlzdHJhY3Rpb25zIGdvLiBJZiB5b3Ugc3RhcnQgdGhpbmtpbmcgYWJvdXQgdGhlIGxhc3QgdGltZSB5b3Ugc2F3IHRoZW0gb3IgdGhlIG5leHQgdGltZSB5b3Ugd2lsbCBzZWUgdGhlbSwgdGhlbiBnZW50bHkgYnJpbmcgeW91ciBtaW5kIGJhY2sgdG8gaG9sZGluZyB0aGVtIGluIG5vbiBqdWRnZW1lbnRhbCBsb3Zpbmcga2luZG5lc3MuIApBbHNvIG9uIGFub3RoZXIgbm90ZSwgZGlzY292ZXJ5IGFuZCBoaXN0b3J5IGhhdmUgc2hvd3MgdGhhdCBsb29rIGZvciBCaWdmb290IGFuZCBzaGl0IGxpa2UgdGhhdCBzbyB5b3UgcmVhbGx5IGNhbid0IHRha2UgYW55dGhpbmcgZnJvbSBhIHNob3cgb24gdGhvc2UgY2hhbm5lbHMgYXMgZmFjdC4gRXZlcnl0aGluZyBpcyBkcmFtYXRpemVkIGFuZCB0aGVpciB0aGVyZSB0byBzZWxsIHlvdSBhIHN0b3J5LCBub3QgdG8gdGVhY2ggeW91IHRoZSB0cnV0aC4KVGhlbiB0aGV5IGxvc2UgaXQgaW4gYSBkcmFnb24gdHJhZGUuIApUaGlzIGJlbGllZiBoYXMgbGVkIHRvIHRoZSBpbnRlcnByZXRhdGlvbiB0aGF0IGxhY3RhdGUgcHJvZHVjdGlvbiBjYXVzZXMgYWNpZG9zaXMgYW5kLCBpbiB0dXJuLCB0aGF0IGluY3JlYXNlZCBsYWN0YXRlIHByb2R1Y3Rpb24gaXMgb25lIG9mIHRoZSBzZXZlcmFsIGNhdXNlcyBvZiBtdXNjbGUgZmF0aWd1ZSBkdXJpbmcgaW50ZW5zZSBleGVyY2lzZS4gCiJXaHkgZGlkIEtpbSBnbyB0byBFaWxlZW4ncyBwb2tlciBuaWdodCBpZiBzaGUgd2FzIHNpY2sgd2l0aCBwbmV1bW9uaWEgYW5kIGJyb25jaGl0aXM/IEkgZG9uJ3QgZG91YnQgdGhhdCBtYWpvciBpbGxuZXNzZXMgbGlrZSB0aGVzZSBtYWRlIGhlciBmZWVsIHRlcnJpYmxlLiAKQ3JhZGxlZCBieSBjYWxtIENhcmliYmVhbiB3YXRlcnMgYW5kIHNvbWUgb2YgdGhlIHdvcmxkJ3MgZmluZXN0IHdoaXRlIHNhbmQgYmVhY2hlcywgdGhlIHBvc2ggTGVzc2VyIEFudGlsbGVzJyBpc2xhbmQgb2YgQW5ndWlsbGEgaXMgYSBoYXZlbiBmb3IgdHJhdmVsZXJzIHNlZWtpbmcgc29tZSBhbG9uZSB0aW1lLiAKIkhlIHdhcyBhIHdlYWx0aHkgZ3V5IHBsYXlpbmcgdmlkZW8gcG9rZXIuIG9uIGNydWlzZXMsIiBoaXMgYnJvdGhlciBzYWlkLCBhZGRpbmcgdGhhdCBTdGVwaGVuIGNvdWxkIGFmZm9yZCBhbnl0aGluZyBoZSB3YW50ZWQgYW5kIHBsYXllZCAkMTAwIGEgaGFuZCBwb2tlci4gVGhleSBkaXZvcmNlZCAyNyB5ZWFycyBhZ28gYWZ0ZXIgc2l4IHllYXJzIG9mIG1hcnJpYWdlLiBFcmljIFBhZGRvY2sgc2FpZCBoZSBoZWxwZWQgU3RlcGhlbiBtb3ZlIHRvIE1lc3F1aXRlIGFib3V0IGEgeWVhciBhZ28uClNuYWtlIEV5ZXMsIGFmdGVyIGEgbG9uZyBwYXVzZSwgcHVzaGVkIHRoZSByZW1haW5zIG9mIGhpcyBjaGlwcyBpbnRvIHRoZSBwb3QuIFRoZXkgYWxsIHN0b29kIHVwLiBUZXggd2hpc3RsZWQgYWdhaW4gd2hlbiBoZSBzYXcgQ2hhcmxlcydzIHNldCBvZiBraW5ncy4gClRoZXNlIGFyZSBoZWF2aWx5IGNoZXJyeSBwaWNrZWQgc3R1ZGllcywgcHVsbGluZyBmcm9tIGFsbCBtYW5uZXIgb2YgdW5zdXN0YWluYWJsZSB2ZWdhbiBkaWV0cyB0aGF0IGV0aGljYWwgdmVnYW5pc20gaXMgbm90IGJhc2VkIG9uLiBZb3UgaGF2ZSBhbHNvIHF1aXRlIHRyYW5zcGFyZW50bHkgYnVsa2VkIG91dCBzdXBwb3NlZGx5IGV2aWRlbmNlIGJhc2VkIHN0dWRpZXMgd2l0aCBjYXNlIHN0dWRpZXMgdG8gbWFrZSBpdCBsb29rIG1vcmUgaW1wcmVzc2l2ZS4gCkplbm5pZmVyIERldHRtYW4sIHRoZSBicm9hZGNhc3RlciBleGVjdXRpdmUgZGlyZWN0b3Igb2YgdW5zY3JpcHRlZCBwcm9ncmFtbWluZywgYWNrbm93bGVkZ2VzIHRoZXJlIHJvb20gZm9yIGltcHJvdmVtZW50IG9uIHRoZSBkaXZlcnNpdHkgZnJvbnQuIApHb29kIGx1Y2ssIGNyYWJieSBuZWlnaGJvcnMgYXJlIGEgYnVtbWVyIS4gClRoZSBXUFQgYW5kIFdTT1AgbGlrZWx5IHdvdWxkbid0IGhhdmUgZW5qb3llZCB0aGUgd2lkZXNwcmVhZCBzdWNjZXNzIHRoZXkgaGF2ZSBoYWQgb3ZlciB0aGUgcGFzdCBkZWNhZGUuIEFuZCBpdCB3b3VsZCBiZSBuZWFybHkgaW1wb3NzaWJsZSBmb3IgYSBwcm9qZWN0IGFzIGFtYml0aW91cyBhcyB0aGUgR2xvYmFsIFBva2VyIExlYWd1ZSB0byBnZXQgb2ZmIHRoZSBncm91bmQgZmxvb3IgYW5kIHBvdGVudGlhbGx5IHN0YXJ0IGFub3RoZXIgcG9rZXIgYm9vbS4gV2UgYXNrZWQgTW9uZXltYWtlciBhYm91dCBiZWluZyBhIHBhcnQgb2YgYW5vdGhlciBwb3RlbnRpYWwgcG9rZXIgYm9vbSwgYW5kIGhpcyByZXNwb25zZSB3YXMgc2hvcnQsIHNpbXBsZSwgYW5kIHN1Y2NpbmN0Li4gClRoZSBGb3J0IExhdWRlcmRhbGUgUG9saWNlIERlcGFydG1lbnQgc2F5cyB0aGV5IGFyZSByZWFkeSB0byBrZWVwIGJlYWNoZXMgc2FmZSBhbmQgZW5qb3lhYmxlIHdoaWxlIGVuZm9yY2luZyB0aGUgcnVsZXMuCldlbGwgd2hlbiB3ZSBmbmFsbHkgcm9sbGVkIG50byB0aGUgdG93biwgYWJzb2x1dGVseSBtc2VyYWJsZSwgdGhlIHRvd24gd2FzIGEgZHVtcC4gClNwb3JraXRpemVkICAyIHBvaW50cyAgc3VibWl0dGVkIDQgZGF5cyBhZ28KVGhlIHBvaW50IGlzIG5vdCAiZml4ZWQiIGluIGEgbGVhZCBpbmRpY2F0b3IgZWl0aGVyLiAKQmVsaWV2ZSBpdCBvciBub3QsIGxpdmUgY2FzaW5vIHdvcmtzIHNlYW1sZXNzbHkgb24gbW9zdCBwb3B1bGFyIGRldmljZXMsIHJlZ2FyZGxlc3Mgb2YgdGhlaXIgc3RhdGljIG9yIHBvcnRhYmxlIG5hdHVyZS4gCk1hZ25lc2l1bSBwcm90ZWN0cyBhZ2FpbnN0IGhlYXJ0IGRpc2Vhc2UKTWNvbnRlbmQgIDEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ28KVGhhdCBhIGdyZWF0IHRyaXAuIFlvdSBkb24gc2F5IGhvdyBtYW55IGRheXMgeW91IHdhbnQgdG8gZ28gZm9yIHNvIGl0IG1ha2VzIGl0IGhhcmQgdG8gbWFrZSBhIHJlY29tbWVuZGF0aW9uLiBBbHNvLCByZWFsaXplIHRoYXQgdGhlIG1vc3QgcG9wdWxhciBiYWNrcGFja2luZyB0cmlwcyBhcmUgaW4gdGhlIGNvcnJpZG9yIGJldHdlZW4gVHVvbHVtbmUgTWVhZG93cyBhbmQgWW9zZW1pdGUgVmFsbGV5IHNvIGl0IGNhbiBiZSBoYXJkIHRvIHNjb3JlIGEgcGVybWl0IHRoZXJlIGFsdGhvdWdoIHlvdSBjYW4gYWxzbyB0cnkgZm9yIGEgRkNGUyBwZXJtaXQgd2hlbiB5b3UgZ2V0IHRoZXJlLiAKVGhlbiBteSBvdGhlciBjb3VzaW5zIGdvdCBwcmVnbmFudCBhbmQgaXQgd2FzbiBhIGJpZyBkZWFsLiBPbmUgd2FzIDE1IGFuZCBlbmRlZCB1cCBwcmVnbmFudCAxMCBtb250aHMgbGF0ZXIuIApNeSBvd24gbW90aGVyIHNheXMgSSdtIGEgZGlzYXBwb2ludG1lbnQgYW5kIEknbSBkZWZ5aW5nIHRoZSB3aWxsIG9mIEdvZC4gCkxvb2tpbmcgYXQgdGhlIHJlY2VudCBpc3N1ZXMsIGFzIEkgbWVudGlvbmVkIHByZXZpb3VzbHkgSSBkbyB0aGluayBpdCBpbnRlcmVzdGluZyB0byBnZXQgYSB2YXJpZXR5IG9mIHRvcGljcyBwb3N0ZWQgaW4gdGhpcyBzdWJyZWRkaXQsIG1vcmUgd2lkZXIgVmlldG5hbSBuZXdzIGlzIGdyZWF0LiBIb3dldmVyIHBlb3BsZSBkb24gd2FudCB0byBiZSBmbG9vZGVkIGJ5IG9uZSBwZXJzb24uIApXaGVuIHNoZSB3YXMgeW91bmdlciwgc2hlIGludml0ZWQga2lkcyBvdmVyIGFuZCBzYWlkIHRoYXQgYSBob2xlIGluIGhlciBjbG9zZXQgd2FzIGEgcG9ydGFsIHRvIGFub3RoZXIgd29ybGQsIGFzIHNoZSByZWNlbnRseSB0b2xkIFRoZSBIb2xseXdvb2QgUmVwb3J0ZXIuLiAKQW5kIHdobyB3b3VsZCBiZSBoYXBwaWVyIGFib3V0IHRoaXMgdGhhbiB0aGUgTW9ybW9ucz8gQWZ0ZXIgYWxsLCB0aGUgQ2h1cmNoIG9mIExhdHRlciBEYXkgU2FpbnRzIGZ1bmRlZCB0aGUgUHJvcCA4IG1vdmVtZW50IGluIENhbGlmb3JuaWEuIApPbiB0aGUgcGFydCBvZiBiZWluZ3Mgc3VwZXJpb3IsIHlldCBha2luIHRvIGh1bWFuaXR5IC4gClRoZXJlIGFyZSBvdmVyIDQsMDAwIHNob3BzIGFuZCBjYWZlcyBhbmQgYmFua3MgYW5kIGV2ZW4gYSBwb2xjZSBzdGF0b24gbiB0aGUgR3JhbmQgQmF6YWFyLiBUaGVyZSBhcmUgbWF6ZXMgb2YgYWxsZXlzIGFuZCBwYXRod2F5cyBhbmQgc3RvcmVzIGFuZCBwZW9wbGUgeWVsbG5nIHRvIGxvb2ssIG5vdCB0byBidXkhIG9yIGZvciB5b3VyIGRvd3J5PyBvciBsYWR5ISBMYWR5ISBXZSBmZ3VyZWQgdCB3b3VsZG4gbWFrZSBzZW5zZSB0byBidXkgc3R1ZmYgc28gZWFybHkgb24gbiB0aGUgdHJwIHNvIHdlIGp1c3QgYnJvd3NlZCBtb3N0bHkuLiAKRm9yIHRoZSBmaXJzdCB0aW1lLCBMb2RnaW5nIEVjb25vbWV0cmljcyAoTEUpIGlzIHJlbGVhc2luZyBpdHMgRm9yZWNhc3QgZm9yIE5ldyBIb3RlbCBPcGVuaW5ncyBmb3IgMjAxMiwgd2l0aCA2NzEgaG90ZWxzLzY0LDkzOCByb29tcyBwcm9qZWN0ZWQgdG8gY29tZSBvbmxpbmUsIGEgcmF0ZSBuZWFybHkgbGV2ZWwgdG8gdGhhdCBmb3JlY2FzdGVkIGZvciAyMDExLiBMRSBoYXMgYWxzbyBtYWRlIG1pbm9yIHJldmlzaW9ucyB0byBpdHMgRm9yZWNhc3QgZm9yIDIwMTAgYW5kIDIwMTEsIHdpdGggYSB5ZWFyIGVuZCB0b3RhbCBvZiA3MDUgaG90ZWxzLzc5LDcwMSByb29tcyBvcGVuaW5nIGluIDIwMTAgYW5kIDY3MyBob3RlbHMvNjQsOTU5IHJvb21zIGluIDIwMTEuLiAKTWV0YXN0YXNlbiBzaW5kIEZydWNodGtycGVyIHdpZSBlaW4gUGlseiIsIGplZG9jaCBiZXJlaXRzIGVpbiB2b2xsc3RuZGlnZXMgTXl6ZWwiLiAKQnV0IHRoZSBiYXR0bGUgaXNuJ3QgZW50aXJlbHkgYWJvdXQgd2lyZWxlc3MgZGV2aWNlcyBhbnltb3JlLiAKIkl0IC4gLiAuIGl0IG9uZSBvZiB0aG9zZSBwb2tlciBwbGF5aW5nIGRvZ3MgcGFpbnRpbmdzIGJ1dCAuIC4gLiBidXQgdGhlIGRvZ3MgYXJlIC4gLiAuIFJlcHVibGljYW4gcHJlc2lkZW50cyEgTml4b24gbGF1Z2hpbmchIEFuZCBUcnVtcCAuIC4gLiBUcnVtcCBsb29rcyBsaWtlIGhlIGp1c3QgZmFydGVkISIuCkkgZGlkbiBnZXQgdGhlIGltcHJlc3Npb24gdGhhdCB0aGlzIGFyZWEgd2FzIG5lY2Vzc2FyaWx5IHRoZSBiZXN0IHNwb3QgZm9yIHRob3NlIHN0YWtlcywgYnV0IEkgRE8gdGhpbmsgaXQgd291bGQgYmUgYmV0dGVyIHRoYW4gbW9zdCBwbGFjZXMuIApFZGl0OiAxLCB0aGFua3MgZm9yIHRoZSBnb2xkISAyLCBmb3IgZXZlcnlvbmUgc2F5aW5nIGl0J3MgYSB0YXJnZXRlZCBhZCBiYXNlZCBvbiBteSBzZWFyY2ggaGlzdG9yeSwgaXQncyBhIHdlYnNpdGUgcHJvbW90aW5nIGFjY2VwdGFuY2UgYW5kIGluY2x1c2lvbiBhY3Jvc3MgcHBsIG9mIGFsbCByYWNlLCByZWxpZ2lvbiwgc2V4dWFsIG9yaWVudGF0aW9uLCBldGMuIApUaGlydHkgZml2ZSB5ZWFycyBhZ28sIEtpbnNleSBzdGF0ZWQgdGhhdCB0aGUgYW5hbCByZWdpb24gaGFkIGVyb3RpYyBzaWduaWZpY2FuY2UgZm9yIGFib3V0IGhhbGYgb2YgdGhlIHBvcHVsYXRpb24uIApBZGQgQXJ0cG9wIEpvYW5uZSBkZWx1eGVhbGJ1bXMuIApUaGVyZSBhcmUgdHdvIHR5cGVzIG9mIGJsaW5kcywgdGhlIGJpZyBibGluZCwgd2hpY2ggaXMgZXF1YWwgdG8gdGhlIG1pbmltdW0gYmV0IGF0IHRoZSB0YWJsZSB5b3UgYXJlIHBsYXlpbmcgYXQsIGFuZCB0aGUgc21hbGwgYmxpbmQsIHdoaWNoIGlzIGhhbGYgdGhlIGFtb3VudCBvZiB0aGUgYmlnIGJsaW5kLiBGb3IgaW5zdGFuY2UsIGlmIHRoZSB0YWJsZSBtaW5pbXVtIGlzICQxMCwgdGhlbiB0aGUgYmlnIGJsaW5kIHdvdWxkIGJlICQxMCBhbmQgdGhlIHNtYWxsIGJsaW5kIHdvdWxkIGJlICQ1LiAKTm93LCBTcXVhcmUgRW5peCBoYXMgdGVhbWVkIHVwIHdpdGggRGFyayBIb3JzZSBDb21pY3MgdG8gcmVsZWFzZSBhbiBhcnQgYm9vayBzZXQgdG8gY29tZSBvdXQgbGF0ZXIgdGhpcyB5ZWFyLiAKT3VyIFByaW5jaXBhbCBoYXMgdmlzaXRlZCBOYWdhbGFuZCBhbmQgc3Bva2UgYXMgaWYgaXQgd2VyZSBhIGZhaXJ5dGFsZSBwbGFjZSAgIG92ZXIgOTAlIG9mIE5hZ2EgcGVvcGxlIGFyZSBDaHJpc3RpYW5zLCBhbmQgc3BlY2lmaWNhbGx5IEJhcHRpc3RzLiAKU2luY2UsIHRoZSBnYW1lIGlzIGF2YWlsYWJsZSB3b3JsZCB3aWRlIGl0IGhhcyBiZWNvbWUgYSBjdXQgdGhyb2F0IGdhbWJsaW5nIGdhbWUuIEl0IGlzIGVzc2VudGlhbCB0byB3YXRjaCB0aGUgbW92ZXMgYW5kIGJ1aWxkIHN0cmF0ZWdpZXMuIFRoZSBlbW90aW9uYWwgZmFjdG9yIGludm9sdmVkIGluIHRoZSBwb2tlciBnYW1lcyBhcmUgY3J1Y2lhbCBhbmQgaGFzIHRvIGJlIG5vdGVkLiAKTG9uZ3RpbWVsb25kb25lciAgOCBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCkkgc3RpbGwgdGhpbmsgZG9pbmcgdGhlIGNhbGN1bGF0aW9uIGFuZCBzZWVpbmcgd2hhdCB0aGUgb3B0aW1hbCBkZWZlbnNlIHdvdWxkIGxvb2sgbGlrZSBpcyBpbXBvcnRhbnQuIEZvciBtZSBwZXJzb25hbGx5IEkgYWx3YXlzIGxlYW5lZCBpbiB0aGUgZGlyZWN0aW9uIG9mIGJlaW5nIGEgY2FsbGluZyBzdGF0aW9uLiAKVGhlc2UgY29tcGFuaWVzIGdvdCBhY3F1aXJlZCBbYnkgU3ByaW50XS4gQWdyZWVzIHRoYXQgYW4gYWNxdWlzaXRpb24gd291bGQgYmUgYSBsb2dpY2FsIGVuZCBwb2ludCBmb3IgWnluZ2EuIEZhY2Vib29rIFp5bmdhIHN5bWJpb3NpcyBpcyBleHRyZW1lLCBVbHJpY2ggbm90ZXMuIApJdCBzZWVtcyAvci9yZWxhdGlvbnNoaXBzIGlzIHVzdWFsbHkganVzdCBwZW9wbGUgbm90IHNlZWluZyB0aGVpciBwYXJ0bmVyIGZvciB3aG8gdGhleSBhcmUgKGVzcGVjaWFsbHkgcmlnaHQgYmVmb3JlIGEgYnJlYWt1cCkuIFRoaXMgaXMganVzdCBiaXphcnJlLiBJIHdvdWxkIHZlcnkgbXVjaCBub3QgaG9sZCBpdCBhZ2FpbnN0IGhpbS4KQmVuem9zIGFuZCBvcGlvaWRzLiBJIG5vdCBhIGRvd25lciBwZXJzb24gYnV0IG9jY2FzaW9uYWxseSBJIGxpa2UgdG8gc2xvdyBkb3duLCBteSBBREhEIGFuZCBzdGltdWxhbnQgYWJ1c2UgY2FuIGdldCBleGhhdXN0aW5nLiBJIGp1c3QgbWFrZSBzdXJlIHRoZXkgaGF2ZW4gY2hhbmdlZCB0aGVpciBwb2xpY3kgZWFjaCB5ZWFyIGFzIG5laXRoZXIgYXJlIHRlc3RlZCBmb3IKSSBsb3ZlIGJvdGggb2YgdGhlbSwgYW5kIG9mIGNvdXJzZSBCQSBsb29rcyB2ZXJ5IHNtYXJ0IGFuZCB0cmFkaXRpb25hbCwgeWV0IHRoZSBzb21ld2hhdCBleHRyYXZhZ2FuY2Ugb2YgQ2hpbmEgU291dGhlcm4gaXMgYSB3ZWxjb21lIHN1cnByaXNlIGZyb20gd2hhdCBJIGNvbnNpZGVyIHRvIGJlIGEgdmVyeSByZXNlcnZlZCBhaXJsaW5lIG5vcm1hbGx5LiAKVGhlc2UgInVucnVseSIga2lkcyB3b3VsZCBnbyB0byBzY2hvb2wgYW5kIHRoZSB0ZWFjaGVycyB3b3VsZCBzdGFydCB0byBjdXJiIHRoZSAiaWQiLiAKVGhpcyB5ZWFyLCB3aXRoIHNvIG11Y2ggaW50ZXJlc3QgaW4gZm9vZCBhbmQgZm9vZCBnYXJkZW5pbmcsIHNoZSBoYXMgbGluZWQgdXAgYSBzdGVsbGFyIHJvc3RlciBvZiBzcGVha2Vycywgc29tZSBvZiB3aG9tIHdpbGwgZm9jdXMgb24gZ3Jvd2luZyBlZGlibGVzLCBwcmVwYXJpbmcgcGxhbnQgYmFzZWQgcmVjaXBlcyBhbmQgdGhlIGFydCBvZiBmb3JhZ2luZy5Ib3VzZXBsYW50cyBhcmUgYWxzbyB2ZXJ5IHBvcHVsYXIgcmlnaHQgbm93LCBhIHRyZW5kIGRyaXZlbiBieSBtaWxsZW5uaWFscywgc28gaW5mb3JtYXRpdmUgaW5kb29yIHBsYW50IHNlc3Npb25zIHdpbGwgYmUgcGFydCBvZiB0aGUgcHJvZ3JhbS5Gcm9tIHVudXN1YWwgYnVsYnMgYW5kIHBsYW50cyB0byBuZWF0IGdhcmRlbiBhY2Nlc3NvcmllcyB0aGF0IHlvdSBuZXZlciBzZWVuIGJlZm9yZSwgb3ZlciAzNTAgcXVhbGl0eSB2ZW5kb3JzIHdpbGwgc2hvd2Nhc2UgYSBodWdlIGFycmF5IG9mIGl0ZW1zIGZvciBzYWxlLiAKUG9saXRpY2FsIHRlcm1zIGZvciB3aG8gSSBhbSBpcyBDcmVlIGFuZCBNZXRpcy4gSSBhbSBvZiB0aGUgTmVoaXlvdyBwZW9wbGUsIHdoaWNoIG1lYW5zIEZvdXIgYm9keSBwZW9wbGUsIG9yIEZvdXIgZGlyZWN0aW9ucyBwZW9wbGUsIGV4cGxhaW5lZCBNYWRlbGFpbmUgTWNDYWxsdW0uCllvdSBjYW4gbGVhcm4gdGhlIHN5bnRheCB0byBtYWtlIHF1ZXJpZXMgcHJldHR5IHF1aWNrbHksIHRoZSB0cmljayBpcyB3aGVuIHlvdSBuZWVkIHRvICJqb2luIiBpbmZvcm1hdGlvbiBmcm9tIG11bHRpcGxlIHRhYmxlcy4gSWYgeW91IG1ha2UgYSBtaXN0YWtlLCB5b3Ugd29uIGFsd2F5cyBnZXQgYW4gZXJyb3IgbWVzc2FnZSwgc29tZXRpbWVzIHlvdSB3aWxsIGdldCBub25zZW5zZSwgb3IganVzdCBub3RoaW5nIGF0IGFsbC4gClNheWluZyB0aGV5IGFyZW4gYXQgZmF1bHQgaXMgbm90IGFuIGVtb3Rpb25hbCBhcmd1bWVudC4gClRoZSBmaXJzdCB0aGluZyB0aGF0IGNhbWUgdG8gbWluZCBpcyB0aGluZ3MgdGhhdCBtYWtlIG1lIGZlZWwgcmVzZW50ZnVsLiAKU28gd2hlbiBldmVyeW9uZSB0ZWxscyBtZSBJIGFtIHN0dXBpZCBhbmQgdG8gc2h1dCB1cCBpdCBqdXN0IHByb3BhZ2F0ZXMgY29uc3VtZXJzIGJlbGllZnMgYWJvdXQgbHlpbmcgc2FsZXNtZW4gYW5kIHRoZXNlIHRhY3RpY3MuIApJIGtub3cgdGhlcmUgbXVzdCBiZSBvdGhlciBmYWN0b3JzIGJ1dCBpdCBhbHdheXMgY29tZSBiYWNrIHRvIHdoeSB3b3VsZG4geW91IHdhbnQgdG8gYnJpbmcgeW91cnNlbGYgaW50byB0aGUgZm9sZCBhbmQgcmVhcCB0aGUgYmVuZWZpdHMgb2YgYSBwZWFjZWZ1bCByZWNvbmNpbGlhdGlvbi4gCkFzIGZvciB0aGF0IFAgdmVyc3VzIHRoZSBzdGFydHVwcyBzbGlkZTogIkkndmUgbGl2ZWQgdGhhdCBzbGlkZSwiIFByaXRjaGFyZCBzYXlzLiAiSXQncyBub3QgbGlrZSBoZSdzIHN1cnByaXNpbmcgbWUuIgpEbyB5b3Ugd2FudCB0byBkaXZvcmNlIHlvdXIgd2lmZS9raWRzIG9yIGRvIHlvdSB3YW50IHRvIGRpdm9yY2UgeW91ciBwYXJlbnRzL3NpYmxpbmdzLiAKT3ZlcnZpZXcgZm9yIG5oYWluZXMKQSBodWdlIGNvbmdyYXR1bGF0aW9ucyB0byB0aGUgU2hlZmZpZWxkIFVuaXZlcnNpdHkgUnVnYnkgTGVhZ3VlIGNsdWIgb24gdGhlaXIgYXdhcmQsIGFuZCBhbHNvIHRvIHRoZSBvdGhlciBzaG9ydGxpc3RlZCBjbHVicyBOZXRiYWxsLCBXb21lbidzIENyaWNrZXQgYW5kIFJvd2luZy4gQWxsIG9mIHRoZXNlIGNsdWJzIGFuZCBtYW55IG1vcmUgaGF2ZSBnaXZlbiBhIGh1Z2UgYW1vdW50IGJhY2sgdG8gb3VyIFVuaXZlcnNpdHkgY29tbXVuaXR5LCB3aGlsc3QgZ29pbmcgdGhlIGV4dHJhIG1pbGUgdG8gcHJvdmlkZSBhIGhvbWUgdG8gb3VyIHN0dWRlbnRzLi4gClRoZXkgd2FudCB0byBzYXZlIGl0LCB5b3UgdGhpbmsgdGhleSB3b3VsZCBiZSBtb3JlIHBybyBhY3RpdmUgYW5kIHN0YXJ0IG5lZ290aWF0aW5nLiAKSWYgeW91J3ZlIGdvdCBjb25uZWN0aW9uIGFueXdoZXJlIG92ZXIgMjBNYiBkb3duIGFuZCBleHBlY3QgbW9yZSB0aGFuIHR3byBwZW9wbGUgYXQgYW55IGdpdmVuIHRpbWUgdG8gYmUgY29ubmVjdGVkLCBhbmQgaGF2ZSBhIGxhcmdlIGFyZWEgdG8gY292ZXIsIGRvIHlvdXJzZWxmIGEgaHVnZSBmYXZvciBhbmQgZ2V0IGEgcHJvcGVyIHdpcmVsZXNzIHJvdXRlci4gClRoZSBmaXJzdCBuaWdodCBhcyB0aGUgcGxheWVycyBzdGFydGVkIHdhbGtpbmcgaW4sIHRoZXkgd291bGQgaGFuZCBtZSB0aGVpciBidXkgaW4gd2hpY2ggd2FzIGFsbCBpbiBjYXNoIGFuZCBpdCB3YXMganVzdCBhIGRvdWJsZSBzaG9jayBiZWNhdXNlIG5vdCBvbmx5IHdlcmUgc29tZSBvZiB0aGUgbW9zdCBmYW1vdXMgZmFjZXMgaW4gdGhlIHdvcmxkIGJ1dCBoYW5kaW5nIG1lIHRoaXMgc3RhY2sgb2YgJDEwLDAwMCBhbmQgSSdtIHN0YW5kaW5nIGluIHRoZSBiYWNrZ3JvdW5kIGNvdW50aW5nICQxMDAsMDAwLiBSZXBvcnRlcjogQWNjb3JkaW5nIHRvIE1vbGx5IHNoZSBvcmdhbml6ZWQgdGhlc2Ugc3RhciBzdHVkZGVkIGdhbWVzIGZvciBoaWdoIHJvbGxpbmcgcGxheWVycyBpbmNsdWRpbmcgY2VsZWJyaXRpZXMgbGlrZSBMZW9uYXJkbyBEaWNhcHJpby4gClBhcmsgdGhlIGNhciBhIGNvdXBsZSBvZiBibG9ja3MgYXdheSwgZ3JhYiBhIGNvZmZlZSBhbmQgZ28gZm9yIGEgd2FsayB0aHJvdWdoIHRoZSBtYXJrZXQgdG8gZmluZCBldmVyeXRoaW5nIGZyb20gYnVuY2hlcyBvZiBjb2xvdXJmdWwgY2Fycm90cyB0byBzcG9vbiByaW5ncyBhbmQgZnJlc2ggY3V0IGZsb3dlcnMuIApJIGRvbiB0aGluayBoZSB3YXMgYSBiYWQgcGVyc29uLCBqdXN0IHByb2JhYmx5IG9ibGl2aW91cyBidXQgb25seSBpbiBhIHJlbGF0aW9uc2hpcCBzZW5zZS4gCkl0IHNheXMgd2hlbiBoZSB3YXMgd2l0aCB0aGUgVGlDYXRzLCBoZSBtaXNzZWQgYSBtZWV0aW5nLiAKQm9iJ3MgdHJ1bHkgcG9zaXRpdmUgdGhpbmtpbmcgYW5kIGhpcyBhYmlsaXR5IHRvIGZpbmQgaHVtb3VyIGluIGFueSBzaXR1YXRpb24gd2lsbCBiZSB2ZXJ5IGZvbmRseSByZW1lbWJlcmVkIGJ5IGFsbCB3aG8gaGFkIHRoZSBwcml2aWxlZ2UgYW5kIHBsZWFzdXJlIG9mIHNwZW5kaW5nIHRpbWUgd2l0aCBoaW0uIApNb3Jlb3Zlciwgbm9uIGhpcHBvY2FtcGFsIGRlcGVuZGVudCwgYW54aWV0eSByZWxhdGVkIGJlaGF2aW9yLCBzdWNoIGFzIHBlcmZvcm1hbmNlIGluIHRoZSBlbGV2YXRlZCBwbHVzIG1hemUgWzMzXSwgYmVuZWZpdHMgZnJvbSB2b2x1bnRhcnkgYW5kIGZvcmNlZCBleGVyY2lzZS4gSW50ZXJlc3RpbmdseSwgaXQgcmVtYWlucyB0byBiZSBkZXRlcm1pbmVkIHdoZXRoZXIgdm9sdW50YXJ5IGFuZCBmb3JjZWQgZXhlcmNpc2UgaXMgZXF1aXZhbGVudC4gCkRvbiBsZXQgeW91ciBvcGluaW9uIGZyb20geW91ciBmaXJzdCBkcml2ZSBydWluIHlvdXIgd2FsbGV0LiAKTXkgZ3Vlc3MgaXMgdGhhdCB0aGVyZSB3b3VsZCBiZSBhIHJlcHJlc2VudGF0aXZlIG9mIHRoZSBJbnRlcm5hdGlvbmFsIFdvcmtlcnMgQWlkIHNvY2lldHkgbmF0aW9uYWwgb2ZmaWNlIGdvaW5nIGZyb20gZmFjdG9yeSB0byBmYWN0b3J5LCBvciBkb29yIHRvIGRvb3IsIHNvbGljaXRpbmcgZm9yIG1vbmV5IGZvciB0aGUgUGFzc2FpYyB3b3JrZXJzIHJlbGllZi4gVGhlIHN0cmlrZSB3YXMgbm8gZG91YnQgYSB2ZXJ5IG5hc3R5IGJ1c2luZXNzLCB3aXRoIGEgdmljdG9yeSBvbmx5IGEgdmljdG9yeSBvbmNlIHRoZXJlIHdhcyBtb3JlIGZvb2Qgb24gdGhlIHRhYmxlLCBsZXNzIGlsbG5lc3MsIGFuZCBmYXIgZmV3ZXIgYmFiaWVzIGR5aW5nIGZyb20gcHJldmVudGFibGUgY2F1c2VzLiAKSSBhbHNvIGtub3cgcGFtcGVyZWQga2lkcyB3aG8gYXJlIHRlcnJpYmxlIHN0dWRlbnRzLiBUaGVyZSBpcyBubyBub3JtLi4gCk1hbmFnZUVuZ2luZSBBRE1hbmFnZXIgUGx1cyA2LjAga2V5Z2VuIG9yIGtleSBnZW5lcmF0b3IgbWlnaHQgY29udGFpbiBhLiAKVGhlIHBvbGl0aWNhbCBjbGltYXRlIGJldHdlZW4gdGhlIHRlcnJpdG9yaWVzIGlzIHByZXR0eSBmYXIgb2ZmLCBhbmQgRmF0YWggYW5kIEhhbWFzIGZvdWdodCBhIGJsb29keSB3YXIgaW4gMjAwNi4gCkRvd25sb2FkIHRoZSBsYXRlc3QgdmVyc2lvbiBvZiB0aGUgdG9wIHNvZnR3YXJlLCBnYW1lcywgcHJvZ3JhbXMgYW5kIGFwcHMgaW4gMjAxOC4gNS45ICg3ODM3KS4gClRoZSB0aWdlciB3b3VsZCBtb3N0IGxpa2VseSB3aW4gc3VjaCBhbiBlbmNvdW50ZXIsIGJ1dCB0aGUgbGVvcGFyZHMgd291bGQgcHJvYmFibHkgZmxlZSBmcm9tIHRoZWlyIGxhcmdlciBjb3VzaW4uIApVbmRlcnNjb3JpbmcgdGhlIGltcG9ydGFuY2Ugb2YgdGhlIHJlZ2lvbiBhcyBvbmUgb2YgU3Rhcndvb2QncyBmYXN0ZXN0IGdyb3dpbmcgaG90ZWwgYW5kIHRyYXZlbCBtYXJrZXRzLCB2YW4gUGFhc3NjaGVuIGFuZCBzZXZlbiBtZW1iZXJzIG9mIFN0YXJ3b29kJ3Mgc2VuaW9yIGV4ZWN1dGl2ZSB0ZWFtIHZpc2l0ZWQgUnVzc2lhIHRoaXMgd2Vlay4gCkxlYWRlcnMgd291bGQgcHJlZmVyIHRvIHNwZWFrIGluIHRoZSBsYW5ndWFnZSBvZiByZWFkaWx5IGNhbGN1bGFibGUgaW50ZXJlc3RzLiAKQ0FNSUxMQSBBUENBUi4gSGFuZGNyYWZ0ZWQgaW4gVHVyaW4sIHRoZSBjdXN0b21pc2FibGUgc3R5bGVzIGluIHRoZSBUZWNrZWxsIGNvbGxlY3Rpb24gaW5jbHVkZSB0aGUgQ3Jpc3RhbGxpbm8gR29sZCBMRSAocHJpY2Ugb24gcmVxdWVzdCksIHdpdGggMjRjdCBnb2xkIHBsYXRlZCBwbGF5ZXJzIGFuZCBhY2Nlc3NvcmllcywgYW5kIHRoZSBtb3JlIG1pbmltYWxpc3QgQ29udHJvcGllZGUgKHByaWNlIG9uIHJlcXVlc3QpLCB3aGljaCBoYXMgYSBxdWlldCBhcmNoaXRlY3R1cmFsIGJlYXV0eSBpbiBnbGFzcyBvciBzb2xpZCB3YWxudXQuIApIZSB3YXMgdGhlIGZ1Y2tpbmcgbmljZXN0IGR1ZGUsIGFsd2F5cyBicm91Z2h0IHVzIHBpenphIGFuZCBldmVuIGRyb3BwZWQgYnkgdG8gYnVsbHNoaXQgb24gZGF5cyBoZSBkaWRuIGhhdmUgdG8gZG8gaGlzIHByZXNlbnRhdGlvbi4uIApPaGlvIFV0aWxpdGllcyBhbmQgRW5lcmd5ClRoYXQgSSBhbSBtYXJyaWVkIGNvbWVzIHVwIGZhaXJseSBxdWlja2x5IGluIG5ldyBjb252ZXJzYXRpb24sIGFuZCBpZiBpdCBkb2VzIG5vdCwgdGhhdCBzaW1wbHkgbWVhbnMgdGhhdCBpdCBpcyBvZiBubyBpbXBvcnRhbmNlIHRvIG15IGludGVyYWN0aW5nIHdpdGggdGhhdCBwZXJzb24sIGFuZCB0aGV5J3ZlIG5vdCBmZWx0IGEgdXNlIGZvciBhc2tpbmcuLiAKUm9sbGluZ1JvbGxpbmcgaXMgbGlrZSB0YXBwaW5nIGluIHRoYXQgaXQgYXBwbGllcyBkb3dud2FyZCBwcmVzc3VyZS4gSG93ZXZlciwgdGhhdCBpcyB3aGVyZSB0aGUgc2ltaWxhcml0eSBlbmRzLiBBIHJvbGwgaXMgcGVyZm9ybWVkIHdpdGggZWl0aGVyIHRoZSBwYWxtIG9mIHRoZSBoYW5kIG9yIGEgY2xlbmNoZWQgZmlzdC4gCktlZXAgaW4gbWluZCB0aGF0IHlvdSBjYW4gc3RpbGwgdXNlIHlvdXIgdGFjdGljYWwgYWJpbGl0eSAodGhlIHZvaWQganVtcCkgd2hpbGUgc2V0dGluZyB1cCB5b3VyIHBvcnRhbCwgc28gaWYgeW91IHN0YXJ0IGdldHRpbmcgc2hvdCBhdCB5b3UgY2FuIHByZXNzIFEgKG9yIHdoYXRldmVyIGl0IGlzIG9uIGNvbnNvbGUpIGFuZCBnZXQgdG8geW91ciBkZXN0aW5hdGlvbiB3aXRob3V0IHRha2luZyBhcyBtdWNoIGRhbWFnZS4gQXMgZm9yIHRoZSBmYWN0IHRoYXQgeW91ciBlbmVtaWVzIGNhbiBjb21lIHRocm91Z2ggdGhlIHBvcnRhbCB0b28sIGl0IGNhbiBhY3R1YWxseSB3b3JrIGFzIGdyZWF0IGJhaXQgZm9yIGVuZW1pZXMuIElmIHlvdSBnb3QgYSBzaG90Z3VuLCBvciBzb21lIG9mIHlvdXIgc3F1YWRtYXRlcyBkbywgeW91IGNhbiBqdXN0IGNhbXAgbmV4dCB0byB0aGUgcG9ydGFsIGFuZCBpbW1lZGlhdGVseSBibG93IHVwIGFueW9uZSB3aG8gdHJpZXMgdG8gY29tZSB0aHJvdWdoLiAKSXQgd2FzIGEgZ29vZCB0aGluZyB0aGF0IHNoZSBrbmV3IGEgbG90IG9mIHRvcCBsZXZlbCBzcGVsbHMsIGFuZCB3aGlsZSBJIGhhZCBubyBjbHVlIGF0IGFsbCB3aGVyZSBzaGUgaGFkIGxlYXJuZWQgdGhlbSwgSSBoYWQgc2luY2UgZGVjaWRlZCBub3QgdG8gY29udGludWUgdG8gdHJ5IHRvIGZpbmQgb3V0LiAKVGhhdCdzIGFsc28gb25lIG9mIHRoZSByZWFzb25zIEkgZG9uJ3Qga25vdyB3aGF0IHRvIGRvIGFib3V0IHRoaXMgZ3V0IGZlZWxpbmcuIEkgaGFkIGEgc2ltaWxhciBmZWVsaW5nIHdoZW4gSSB3YXMgdHJ5aW5nIHRvIGRlY2lkZSBpZiBJIHNob3VsZCBkYXRlIG15IG5vdyBib3lmcmllbmQsIGJ1dCBvdXIgcmVsYXRpb25zaGlwIGVuZGVkIHVwIGJlaW5nIHdheSBiZXR0ZXIgdGhhbiBJIGV2ZXIgY291bGQgaGF2ZSBleHBlY3RlZC4gQnV0IG1hcnJpYWdlIGlzIGEgbXVjaCBiaWdnZXIgZGVhbCwgYW5kIEknbSBhZnJhaWQgdG8gaWdub3JlIHRoaXMgZmVlbGluZyB3aGVuIG1ha2luZyBhIGRlY2lzaW9uIHRoaXMgaHVnZS4KTydTaGVhJ3MgcHJpb3JpdGllcyB3ZXJlIGNsZWFyOiBtb25leSBhbmQgdGhlIGNvbW1lcmNpYWwgc2lkZSBvZiBwcm9kdWN0aW9uIHdlcmUgYSBtZWFucyB0byBhbiBlbmQsIG5ldmVyIHRoZSBlbmQgaXRzZWxmLi4gCldvbWVuIGFyZSByYWlzZWQgd2l0aCB0aGUgaWRlYSB0aGF0IHdlIGNhbid0IGJlIGRpcmVjdCwgaXQncyBub3Qgc2VlbiBhcyBmZW1pbmluZS4gCkEgY2FzaCBnYW1lLCBvdGhlcndpc2Uga25vd24gYXMgYSAicmluZyBnYW1lIiBpcyBhIGZvcm0gb2YgcG9rZXJ3aXRoIG5vIGZpeGVkIHN0YXJ0IG9yIGVuZCB0aW1lLiBDYXNoIGdhbWVzIGFyZSByYXRoZXIgcGVybWFuZW50dGFibGVzIHdoZXJlIHBsYXllcnMgY2FuIGNvbWUgYXMgZ28gYXMgdGhleSBwbGVhc2UuIFRoZXNlIGdhbWVzaGF2ZSBhIGJ1eSBpbiBtaW5pbXVtIChhbmQgbWF4aW11bSBhdCBubyBsaW1pdHMpOiB0aGUgcGxheWVyIG11c3RicmluZyBhdCBsZWFzdCB0aGlzIG11Y2ggbW9uZXkgdG8gdGhlIHRhYmxlLiAKSGlzIGhvbGRpbmdzIGdyZXcsIGxlYWRpbmcgdGhlIHdheSBmb3IgaGlzIGZvdW5kaW5nIHRoZSBzdWNjZXNzZnVsIHJlYWwgZXN0YXRlIGludmVzdG1lbnQgY29tcGFueSBNYXJpYW5pIEJ1c3MgQXNzb2NpYXRlcyB3aXRoIGxvbmcgdGltZSBidXNpbmVzcyBhc3NvY2lhdGUgRnJhbmsgTWFyaWFuaS4uIApJdCBpcyBkZWZpbml0ZWx5IHNlbGYgaGVscHNvbWV0aGluZyB5b3UgY2FuIHVzZSB5b3Vyc2VsZiwgYW55IHRpbWUsIGFueSBwbGFjZS4gCk9uIHRoZSByaXZlciB0aGUgbW9zdCBsaWtlbHkgaGFuZHMgaGUgaGFzIGFyZSBzbG93IHBsYXllZCB0cmlwcyBhbmQgYSBidW5jaCBvZiBkcmF3cyB0aGF0IG1heWJlIGdvdCB0aGVyZSwgbWF5YmUgZGlkbiBBVCBpcyB1bmxpa2VseSB0byBsZWFkIG9uIHRoZSByaXZlciAoZXNwLiBXaXRoIHlvdSBiZWluZyB0aGUgYWdncmVzc29yKSwgc28gd2hhdCBhcmUgeW91IHJlYWxseSB3aW5uaW5nPyBZb3UgZXNzZW50aWFsbHkgYmVhdGluZyBhIGJsdWZmIGFuZCBhIHJlYWxseSBzbG9wcGlseSBwbGF5ZWQgQVQuIFRvIG1lLCB0aGlzIGlzIGEgZm9sZC4uIApBZnRlciBJIGNyb3NzZWQgdGhlIGZpbmlzaCBsaW5lIEkgYWxtb3N0IHBhc3NlZCBvdXQgYW5kIGhhZCB0byBzaXQgZG93biBmb3IgMTUgbWludXRlcyBiZWNhdXNlIEkgd2FzIHRvbyBkaXp6eSB0byBzdGFuZCB3aXRob3V0IGxpdGVyYWxseSBmYWxsaW5nIG92ZXIuIApBbmQgYWx0aG91Z2ggU29saXMgY2xhaW1lZCB0aGUgbWFzc2FnZXMgd2VyZSAibGVnaXRpbWF0ZSwiIHRoZSBqb2Igd291bGQgY2hhbmdlIGFnYWluIGFmdGVyIHNoZSBhcnJpdmVkIGluIExhcyBWZWdhcy5BbmQgdGhpcyB0aW1lLCB0aGVyZSB3YXMgbm90aGluZyBsZWdpdGltYXRlIGFib3V0IGl0LiBBY2NvcmRpbmcgdG8gTWV0cm8gUG9saWNlLCBTb2xpcywgMjksIGFuZCBhbiBhY2NvbXBsaWNlLCBKYWNxdWVsaW5lIExvcGV6LCAyNiwgc2V4dWFsbHkgYXNzYXVsdGVkIGhlciwgdGhlbiBmb3JjZWQgaGVyIGludG8gcHJvc3RpdHV0aW9uIHVuZGVyIHRoZSB0aHJlYXQgb2YgZ2V0dGluZyBoZXIgZGVwb3J0ZWQgb3IgZG9pbmcgaGFybSB0byBoZXIgeW91bmcgc29uLCB3aG8gYWNjb21wYW5pZWQgaGVyIHRvIExhcyBWZWdhcy5UaGUgdGhyZWF0cyBjb250aW51ZWQgdGhlIG5leHQgbW9ybmluZyBhZnRlciB0aGV5IGFycml2ZWQsIGFjY29yZGluZyB0byB0aGUgTWV0cm8gYXJyZXN0IHJlcG9ydC4gCk1pbm9yIGFyZSBzbWFsbCBlbmVtaWVzIHRoYXQgZGllIGZhc3QsIGJ1dCBzdGlsbCBwb3NlIGEgdGhyZWF0LCBhbmQgZG9uIHJld2FyZCBtdWNoIGlmIGFueXRoaW5nLiBNeSBleGFtcGxlIGNvbmNlcHQgaXMgYSBza2VsZXRvbiB3YXJyaW9yLCB3aG8gaGFzIGEgY29uZGl0aW9uIHdoZXJlIHdoZW4gaGl0IHdpdGggY2VydGFpbiB0eXBlcyBvZiBkYW1hZ2UgdGhleSBtaWdodCBkaWUgb3V0cmlnaHQuIFRoZSBvdGhlciB0eXBlcyBhcmUgdGhlIG1ham9yIGVuZW1pZXMuIApUaGF0LCBpbiBhIG51dHNoZWxsLCBkZXNjcmliZXMgdGhlIHNlbnNlIG9mIGZ1dGlsaXR5IGFuZCB1c2VsZXNzbmVzcyBJIGZlZWwgYWJvdXQgdm90aW5nIGluIHRoaXMgY2xpbWF0ZS4gSXQgYSB2aWNpb3VzIGN5Y2xlIHRoYXQgZXh0cmVtZWx5IHJlc2lzdGFudCB0byBjaGFuZ2UuIEZvciBldmVyeSBzbWFsbCB3aW4gdGhlcmUgYXJlIGEgdGhvdXNhbmQgbG9zc2VzLgpNb3N0IG9mIEx1Y2ljIGhhcnNoZXN0IGNyaXRpY3MgcG9pbnQgdG8gdGhlIGdvYWwgdG90YWwgYW5kIHRoZSAkNiBtaWxsaW9uIHNhbGFyeSwgTWNEYXZpZCBzYXlzIGhpcyB2YWx1ZSBleHRlbmRzIGZhciBiZXlvbmQgc2NvcmluZy4gClRoaXMgaXMgInRha2luZyBjb250cm9sIG9mIHRoZSBtb25leSBicmFpbiIgQnVkZGhpc3RzIHNheS4gVHJ5IHRvIGRvIGl0IGFnYWluIGF0IG5pZ2h0IGJlZm9yZSBkaW5uZXIuIApJIGhhbmRlZCBvdmVyIHRoZSBmaXJzdCBvZmZpY2lhbCBjb3B5IHRvIEtuZ2kgVHVoZWl0aWEgYW5kIHdhbmRlcmVkIGFyb3VuZCB0aGUgYmFjayBvZiB0aGUgd2hhcmUgd2hlcmUgYSBiaWcgY3Jvd2Qgd2FzIGdhdGhlcmluZy4gCkV2ZW4gaWYgeW91IGhhZCBjYWxsZWQgOTExIGFuZCB0b2xkIHRoZW0geW91IGFyZSBnb2luZyB0byBYWVogRW1lcmdlbmN5IGJ5IFByaXZhdGUgVmVoaWNsZSB0aGUgZGlzcGF0Y2hlciBjb3VsZCBoYXZlIGFsZXJ0ZWQgdGhlIEVEIHRvIHlvdXIgYXJyaXZhbCBhbmQgYSBiZWQgbWF5IGhhdmUgYmVlbiBtYWRlIGF2YWlsYWJsZS4KQWRvcmEgaXMgbGlrZSBhbiBlbXByZXNzIGluIFdpbmQgR2FwLCBhbmQgbm9ib2R5IGRhcmVzIHRvIHF1ZXN0aW9uIGhlci4gSW4gdGhlIGJvb2sgaGUgYWxtb3N0IG5vbiBleGlzdGVudCwgc28gd2UgZG9uIGtub3cgaG93IG11Y2ggaGUga25vd3Mgb3Igc3VzcGVjdHMuIApBIGJyYW5kIG5ldyBkYXkgaXMgZmFzdCBhcHByb2FjaGluZyBmb3IgdGhlIGxvbmdzdGFuZGluZyByZWFsaXR5IHNlcmllcyBwaXR0aW5nIGVudHJlcHJlbmV1cnMgZnJvbSBhY3Jvc3MgdGhlIGNvdW50cnkgd2l0aCBkZWVwIHBvY2tldGVkIGludmVzdG9ycy4gV2hhdCBkb2VzIHRoaXMgbWVhbiBmb3IgdGhlIGZ1dHVyZSBvZiB0aGUgc2hvdz8gV2lsbCBpdCBiZWdpbiB0byBmZWF0dXJlIG1vcmUgZ2VuZGVyIGFuZCBjdWx0dXJhbCBkaXZlcnNpdHk/IE1zLiBEaWNraW5zb24gd2FzIHRoZSBvbmx5IGZlbWFsZSBkcmFnb24gZm9yIGVpZ2h0IHNlYXNvbnMgZXZlbiBhZnRlciB0aGUgZGVwYXJ0dXJlcyBvZiBCcmV0dCBXaWxzb24sIFJvYmVydCBIZXJqYXZlYywgQnJ1Y2UgQ3JveG9uIGFuZCBLZXZpbiBPIG9wZW5lZCB0aGUgZG9vciB0byBicmluZyBpbiBhdCBsZWFzdCBvbmUgb3RoZXIgd29tYW4uIApBZnRlciBicmllZmx5IGZsaXJ0aW5nIHdpdGggYSBqb2IgYXMgYSBzYWxlc21hbiwgRG95bGUgZm91bmQgdGhhdCBoZSBjb3VsZCBtYWtlIGZhciBtb3JlIG1vbmV5IHBsYXlpbmcgY2FyZHMgYW5kIHR1cm5lZCB0byBwb2tlciBmb3IgYSBmdWxsIHRpbWUgaW5jb21lLiAKMyBtaW51dGVzIFJoaW5vIDNkIG1vZGVsaW5nICAgQmFzaWMgUmluZyAuIApCdXQgbmF0aW9uYWxpc20gaXMgbm90IGp1c3QgZ29vZCBhdCBnZXR0aW5nIHBlb3BsZSB0byBraWxsIGFuZCBiZSBraWxsZWQuIApPciB5b3UgY291bGQgc2ltcGx5IG1ha2UgdGhlIGNhcmRzIHlvdXJzZWxmLiBZb3Ugd2lsbCBiZSBnaXZlbiBhIGxvdCBvZiBjaG9pY2VzLi4gClNwaWRlck9mQ2FudGVydmlsbGUgIDMgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCkh5YXR0IFJlZ2VuY3kgQ2hvbmdxaW5nIGZlYXR1cmVzIDMyMSB3ZWxsIGFwcG9pbnRlZCBndWVzdHJvb21zIGFuZCBzdWl0ZXMsIG1hbnkgb2Ygd2hpY2ggZmVhdHVyZSBwYW5vcmFtaWMgdmlld3Mgb3ZlciB0aGUgUGFyYWRpc2UgV2FsaywgYW5kIGFyZSBlcXVpcHBlZCB3aXRoIHRoZSBtb2Rlcm4gYW1lbml0aWVzIHRvIG1lZXQgdGhlIG5lZWRzIGZvciB0b2RheSdzIGJ1c2luZXNzIGFuZCBsZWlzdXJlIHRyYXZlbGVycy4gCkFydGhyaXRpYyBqb2ludHMgICBjYW4gY2F1c2Ugc3dlbGxpbmcsIGpvaW50IHN0aWZmbmVzcywgcGFpbiBhbmQgZXZlbiBmb290IGRlZm9ybWl0eS4gSWYgdW50cmVhdGVkLCBhcnRocml0aXMgY2FuIHdlYWtlbiB0aGUgam9pbnRzIGJ5IHdlYXJpbmcgYXdheSB0aGUgY2FydGlsYWdlIGJldHdlZW4gdGhlIGJvbmVzLiAKUmVhZCBtb3JlIFtlbnRyeWJvZHldICA+LiAKSm9hbiBvdXIgU3BhIE1hbmFnZXIgd2lsbCBiZSBlbnRodXNlZCBieSB5b3UgZmVlZGJhY2sgYW5kIHRvIGtub3cgaGVyIGVmZm9ydHMgd2VyZSBhcHByZWNpYXRlZC4gCk9uIG15IHdhbGsgYmV0d2VlbiBteSBvZmZpY2UgYW5kIHVuaW9uIHN0YXRpb24gaW4gQ2hpY2FnbywgSSBwYXNzIG11bHRpcGxlIHBlb3BsZSBhc2tpbmcgZm9yIG1vbmV5IGZvciBmb29kLiBFdmVyeWRheSwgbW9ybmluZyBhbmQgZXZlbmluZyBydXNoIGhvdXIuIApJbCBlbiB2YSBhdXNzaSBkZXMgZWZmZXRzIHF1ZSBjZXR0ZSBiaXJlIHBvdXZhaXQgcHJvY3VyZXI6IGVsbGUgamV0dGUgIGRhbnMgbGEgbWxhbmNvbGllLCBwcm9jdXJlIGRlcyBzb25nZXMgYWZmbGlnZWFudHMsIGV0IGFmZmFpYmxpdCBiZWF1Y291cCwgYXV4IGRpcmVzIGRlIFN0ZWxsZXIuIApIZSBydW5zIGhpcyBlbXBpcmUsIHdoaWNoIGluY2x1ZGVzIEluZGlhbmEgZGVhbGVyc2hpcHMgaW4gRm9ydCBXYXluZSwgSW5kaWFuYXBvbGlzLCBMYWZheWV0dGUgYW5kIENoZXN0ZXJ0b24sIHdpdGggYSBzbWFsbCBtYW5hZ2VtZW50IHRlYW0uIEhlIGlzIHJhcmVseSBpbiBoaXMgTGFmYXlldHRlIG9mZmljZS4gSGUgcHJlZmVycyB0byBoaXQgdGhlIHJvYWQsIGRyaXZpbmcgZnJvbSBkZWFsZXJzaGlwIHRvIGRlYWxlcnNoaXAgZm9yIG1vbnRobHkgbWVldGluZ3Mgd2l0aCBkZXBhcnRtZW50IGhlYWRzIGF0IGVhY2ggc3RvcmUuClRvcCB0aXAgMgpQZWNoLCBtYWFyIHdlIGhhZGRlbiB0b2NoIGhldCBnZXZvZWwgZGF0IHdlIGRlemUgbW9vaWUgc3RyZWVrIGVuIHppam4gbWlqbmJvdXdlcnMgdmVybGVkZW4gYWwgZ29lZCBoYWRkZW4gbGVyZW4ga2VubmVuLiBXZSBtYWFrdGVuIHdlbCBub2cgZWVuIGtvcnRlIHdhbmRlbGluZyBpbiBlZW4gZ3Jhc2xhbmQgbWV0IG91ZGUgbGVlZ3N0YWFuZGUgZ2Vib3V3ZW4gZW4gaGV0IGRvcnBqZSBTdGlhdm5pY2tlIEJhbmUgZW4gemlqbiBrbm9ja2luZyB0b3dlci4gClRoZSBJbnRlcm5hdGlvbmFsIEZhc2hpb24gQWNhZGVteSBvZiBQYWtpc3Rhbiwgb3IgSUZBUCwgd2FzIGNvbmNlaXZlZCBhbmQgY3JlYXRlZCBieSBNZWhyZWVuIGZpdmUgeWVhcnMgYWdvIGFzIGEgdHJhaW5pbmcgaW5zdGl0dXRlIGZvciB0aG9zZSBpbnRlcmVzdGVkIGluIHRoZSB2YXJpb3VzIGZhY2V0cyBvZiB0aGUgZmFzaGlvbiBpbmR1c3RyeSAgIGJlIGl0IG1vZGVsaW5nLCBtYWtlIHVwLCBwaG90b2dyYXBoeSBvciBjaG9yZW9ncmFwaHkuIEl0cyBzdHVkZW50cyBoYXZlIGJlZW4gdGF1Z2h0IGJ5IHNvbWUgb2YgdGhlIGxlYWRpbmcgbmFtZXMgb2YgUGFraXN0YW5pIGZhc2hpb24sIGFuZCB0aGUgbGF1bmNoIG9mIHRoZSBnbG9iYWwgcmV0YWlsIHN0b3JlIElOQy4gR2F2ZSBNZWhyZWVuIHRoZSBwZXJmZWN0IG9wcG9ydHVuaXR5IHRvIHRlc3QgdGhlaXIgc2tpbGxzLiAKUGxlYXNlIG5vdGUsIGhvd2V2ZXIsIHRoYXQgdGhlIHBvc3RzLCBjb21tZW50cywgYW5kIG1lc3NhZ2VzIHlvdSBzdWJtaXR0ZWQgcHJpb3IgdG8gZGVsZXRpbmcgeW91ciBhY2NvdW50IHdpbGwgc3RpbGwgYmUgdmlzaWJsZSB0byBvdGhlcnMgdW5sZXNzIHlvdSBmaXJzdCBkZWxldGUgdGhlIHNwZWNpZmljIGNvbnRlbnQuIFdlIG1heSBhbHNvIHJldGFpbiBjZXJ0YWluIGluZm9ybWF0aW9uIGFib3V0IHlvdSBhcyByZXF1aXJlZCBieSBsYXcgb3IgZm9yIGxlZ2l0aW1hdGUgYnVzaW5lc3MgcHVycG9zZXMgYWZ0ZXIgeW91IGRlbGV0ZSB5b3VyIGFjY291bnQuLiAKQmUgcmVhbGlzdGljIGluIGFzc2Vzc2luZyB3aGV0aGVyIHlvdSByZWFkeSBmb3IgdGhlIGZpcnN0IHdlZWsgb2YgdGhlIHNjaGVkdWxlLiAKSWYgYW4gb3Bwb25lbnQgcGxheXMgZXZlcnkgaGFuZCBvciBhbG1vc3QgZXZlcnkgaGFuZCB0aGV5IGhhdmUgYSB2ZXJ5IHdpZGUgcmFuZ2UsIHdoaWNoIG1lYW5zIHRoZXkgY2FuIGhvbGQgYWxtb3N0IGFueSB0d28gY2FyZHMuLiAKREUgTEEgU0FOVCAgTEEgU0FJTlRFVDogTEEgVklFIFNQSVJJVFVFTExFIFZJSS4gCkknbSBub3QgZGVmZW5kaW5nIGhpbSwgYnV0IEkgZG8gdGhpbmsgeW91IHNob3VsZCBnZXQgdGhlIGluZm9ybWF0aW9uIHlvdSBuZWVkIGZyb20gdGhlIHJpZ2h0IHNvdXJjZS4gU28gYXNrLiAKUklQIFdvbGZ5LiBBbHNvLCBsb25nIGxpdmUgV29sZnkuClRvIGJlIGNsZWFyIHRoaXMgd2FzIGEgY29udmVyc2F0aW9uIGRpcmVjdGx5IGFib3V0IEhhbGxvd2VlbiBhbmQgc2hlIGdhdmUgc29tZSBzcGVjaWZpYyBleGFtcGxlcyByZWdhcmRpbmcgZHJlc3NpbmcgYXMgY2VsZWJyaXRpZXMuIEtlbGx5IGV2ZW4gc3RhdGVkIGV4cGxpY2l0bHkgdGhhdCBibGFja2ZhY2Ugb3IgY3VsdHVyYWwgYXR0aXJlIGFzIG1vY2tlcnkgd2FzIHVuYWNjZXB0YWJsZS5JdCdzIGEgc2hhbWUgd2UgY2FuJ3QgaGF2ZSBhIG1hdHVyZSBjb252ZXJzYXRpb24gYWJvdXQgcmFjZSBpbiB0aGlzIGNvdW50cnkgd2l0aG91dCByZXNvcnRpbmcgdG8gcGVyc29uYWwgYXNzYXVsdCwgdmlydHVlIHNpZ25hbGluZyBhbmQgZmF1eCBvdXRyYWdlLiBJJ20gbm90IGEgZmFuIG9mIGhlcnMgZWl0aGVyIGJ1dCBzaGUgd2FzIGNhbm5pYmFsaXplZCBieSBoZXIgb3duIG5ldHdvcmsgZm9yIGV4cHJlc3NpbmcgaGVyIGhvbmVzdCBvcGluaW9uIHdoaWNoIHdhcyBpbmNpZGVudGFsbHkgZW50aXJlbHkgcmVhc29uYWJsZS4uIApMdW5kaSAxMCBkY2VtYnJlIGRlcm5pZXIsICBsJ2NvbGUgbG1lbnRhaXJlIGR1IDExIHJ1ZSBDYXYsIG5vdXMgYXZvbnMgYXNzaXN0ICBsYSBwcnNlbnRhdGlvbiBkdSBwcm9qZXQgZCdhbW5hZ2VtZW50IGRlcyBydWVzIE15cmhhIGV0IExvbi4gVW4gcHJvamV0IHRycyBhdHRlbmR1IHBhciBsZXMgaGFiaXRhbnRzIGR1IHF1YXJ0aWVyLCB0YW50IGwndGF0IGRlIGNlcyBydWVzIGVzdCBkcGxvcmFibGUgZXQgbGEgY2lyY3VsYXRpb24gcGl0b25uZSB5IGVzdCBkaWZmaWNpbGUgOiB0cm90dG9pcnMgdHJvaXRzIGV0IHNvdXZlbnQgZW5jb21icnMsIGFjY3MgYXV4IGNvbW1lcmNlcyBkaWZmaWNpbGUsIHN0YXRpb25uZW1lbnQgc2F1dmFnZSwgY2lyY3VsYXRpb24gYXV0b21vYmlsZSBhbmFyY2hpcXVlLi4gClNoZSBpcyB3aWxsaW5nIHRvIGJlIGJlYXRlbiB0byBnYWluIGluZm9ybWF0aW9uIHNoZSBuZWVkcyBhbmQgd2lsbCB0cmF2ZWwgdGhlIGtub3duIHdvcmxkIHRvIGdldCBpbmZvcm1hdGlvbiB0b28uIApUaGlzIGtub2Nrb3V0IEZpbGlwaW5hIGJhYmUgd2lsbCB1c2UgaGVyIGx1c2Npb3VzIGxpcHMsIGJlYXV0aWZ1bCBjaGVzdCwgYmVhdXRpZnVsIGJ1dHQgYW5kIGFsbCBoZXIga25vdyBob3cgdG8gZW5zdXJlIHlvdXIgc2F0aXNmYWN0aW9uLiAKSW4gYSBib2lzdGVyb3VzIGZhbWlseSBvZiBvdXRzaXplZCBvcHBvcnR1bmlzdGljIGdyaWZ0ZXJzLCBJdmFua2EgaGFzIHN1Y2Nlc3NmdWxseSBkaXN0aW5ndWlzaGVkIGhlcnNlbGYgYXMgInRoZSBuaWNlIG9uZS4iIFNvbWUgYXR0cmlidXRlIHRoaXMgbHVja3kgYnJhbmRpbmcgYXMgdGhlIHNocmV3ZCBkZWNpc2lvbiB0byBvYmxpdGVyYXRlIGhlciBUcnVtcCBETkEgd2l0aCBhIHRyYW5zYWN0aW9uYWwgY29udmVyc2lvbiB0byBzZWN1bGFyIEp1ZGFpc20sIGNvdXBsZWQgd2l0aCBodW5kcmVkcyBvZiB0aG91c2FuZHMgb2YgZG9sbGFycyBvZiBwbGFzdGljIHN1cmdlcnkuIE90aGVycyBwb2ludCB0byBoZXIgZGF6emxpbmcgQ3Jlc3QgM0QgV2hpdGVzdHJpcHMgc21pbGUgYW5kIGVuZGVhcmluZyB0aWNrIG9mIGRyYW1hdGljYWxseSBmbGlwcGluZyBoZXIgZXhxdWlzaXRlbHkgY29uZGl0aW9uZWQgaGFpciBvdXQgb2YgaGVyIGV5ZXMgZXZlcnkgZml2ZSBzZWNvbmRzLi4gCkFscmVhZHkga25vdyBpdCBpbiBmZWRlcmFsIGp1cmlzZGljdGlvbiwgTW9ybmVhdSBzYWlkLCBhZGRpbmcgYSBjb3VydCByZWZlcmVuY2UgbWFrZSBzZW5zZS4KU2FpbnRiYXJnYWJhciAgMyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpKdXN0IHRyeSB0byBiZSBhcyBzdXJlIGFzIHlvdSBjYW4gdGhhdCBsZWF2aW5nIHRoZSBvZmZpY2UgU2F0dXJkYXkgdGhhdCB5b3UgaGF2ZSBhIGdvb2QgaGFuZGxlIG9uIHdoYXQgZ29pbmcgb24uIFRoZXJlIGlzIG5vIHN1Y2ggdGhpbmcgYXMgYSBzdHVwaWQgcXVlc3Rpb24sIG9ubHkgc3R1cGlkIGFuc3dlcnMuIApJZiB0aGUgY2FsbCB3b3VsZG4gd29yayBvdXQgZHVlIHRvIGxhbmd1YWdlIGRpZmZpY3VsdGllcywgeW91IGNhbiBzdGlsbCBnbyB3aXRoIGFuIGUgbWFpbC4gClNoZSBpcyBzbGVlcGluZyBpbiBteSBiZWQgYXMgd2Ugc3BlYWsuIFVubGlrZSBhbGwgdGhlIHBpY2t5IGJpdGNoZXMgYmFjayBpbiBDYW5hZGEgc2hlIGlzIDEwMCUgaGFwcHkganVzdCBoYXZpbmcgbWUgaW4gbXkgbGlmZSwgZGVzcGl0ZSBteSBmbGF3cywgd2hpY2ggYXJlIGxlZ2lvbi4gClBldGVyIEogVGhvbXBzb24gLwpNb290eiwgREMsIERBQkNPLDUgYWdyZWVzIHdpdGggdGhlc2UgY29uY2VybnMsIG5vdGluZyBpbiAxOTk1IHRoYXQgaW4gdGhlIHByb2Nlc3Mgb2YgYW5hbHl6aW5nIGNvbXBsZXggc3lzdGVtcyBieSBicmVha2luZyB0aGVtIGludG8gY29tcG9uZW50cywgc2NpZW50aXN0cyBkaXZpZGUgbmF0dXJlIGludG8gcGllY2VzIHRoYXQgYXJlIHVubmF0dXJhbCBvciBtZWFuaW5nbGVzcyBhIHByb2Nlc3Mgb2YgZnJhZ21lbnRhdGlvbi4KSWYgdGhleSBmaW5kIGFueSBraW5kIG9mIGRydWcgb24geW91LCB0aGV5IGNhbiBsZWdhbGx5IHRha2UgeW91ciB2ZWhpY2xlIGFuZCBhbGwgdGhlIGNhc2ggeW91IG1pZ2h0IGhhdmUgYXMgd2VsbC4gVGhleSBjYW4gdGFrZSB5b3VyIGhvdXNlIGlmIHlvdSB3ZXJlIGNhdWdodCB3aXRoIGl0IGluIHlvdXIgaG9tZS4gSG9sZCB5b3VyIGFzc2V0cyBhbmQgaWYgeW91J3JlIGZvdW5kIGd1aWx0eSB0aGV5IGF1Y3Rpb24gaXQgb2ZmLiAKSWYgeW91IGFyZSBub3QgS29yZWFuLCB5b3Ugd2lsbCBuZWVkIHRvIHZpc2l0IHRoZSBhbm1hcyBhdCBzbG93IGhvdXJzIHRvIGhhdmUgYSBjaGFuY2UgYXQgZ2V0dGluZyBpbi4gWW91IGNhbiBhbHNvIGdvIHRvIE1pYXJpIFRleGFzIG9yIGp1c3QgZ28gdG8gSG9va2VyIEhpbGwgd2hpY2ggSSBhY3R1YWxseSBkbyBub3QgcmVjb21tZW5kLi4gCkdhZ2EgYmVnYW4gdG8gY3J5IGFmdGVyIHNoZSBoZWFyZCBoZXIgbmFtZSBhbm5vdW5jZWQgYWxvbmdzaWRlIEdsZW5uIENsb3NlLCB0eWluZyB3aXRoIHRoZSBhY3RyZXNzIGZvciBCZXN0IEFjdHJlc3MuIHdlbnQgdG8gcGxhY2VzIGluIG15IG1pbmQgYW5kIGluIG15IGhlYXJ0IHRoYXQgSSBkaWQgbm90IGtub3cgZXhpc3RlZCBvciB0aGF0IEkgY291bGQsIHNoZSBzYWlkLiBva2F5LCBJIGNhbiBzdGlsbCBkbyB0aGlzIHdpdGggYSBwaWFubyBiYWNrZ3JvdW5kLCBzaGUgc2FpZC4gMTAsIDIwMTkKSSB3YXMga25vY2tlZCBiYWNrIGVub3VnaCBieSB0aGF0IHRvIHN0YXJ0IHdpdGgsIGJ1dCB3ZW50IG9uIHdpdGggdGhlIGNvbmZlc3Npb24uIE9mIGNvdXJzZSwgb25lIG9mIHRoZSBzaW5zIHdhcyBtZW50aW9uaW5nIEkgaGFkbiB3ZW50IHRvIG1hc3MgaW4gNCB5ZWFycy4gVGhpcyBzZXQgaGltIG9mZiBhZ2FpbiBhbmQgaGUgd2VudCBvbiBhIGJpdCBhYm91dCBob3cgeW91bmcgcGVvcGxlIHdlcmUgb25seSBpbnRlcmVzdGVkIGluIHNleCBhbmQgZHJ1Z3MgYW5kIGRpZCBub3QgZm9sbG93IEdvZC4gCkhpIGFsbCwgbmV3YmllIHdhdGNoIGVudGh1c2lhc3QgaGVyZS4gUGxlYXNlIGNvdWxkIHlvdSBnaXZlIG1lIHNvbWUgcmVjb21tZW5kYXRpb25zIHRvIGdyb3cgbXkgY29sbGVjdGlvbj8gVW5mb3J0dW5hdGVseSBidWRnZXQgaXMgYW4gaXNzdWUsIHNvIG1heC4gd291bGQgYmUgYy4gNTAwLiBJIHVzZWQgdG8gYmUgc29sZWx5IGEgbGVhdGhlciBzdHJhcCBndXkgYnV0IG5vdyBhbSBsb29raW5nIHRvIGJyYW5jaCBvdXQgaW50byBtZXRhbCBhcyB3ZWxsLiBBbnl0aGluZyBHcmV5IG9yIEdyZWVuIChlc3BlY2lhbGx5IGEgZ3JlZW4gd2F0Y2ggZmFjZSwgZHVubm8gd2h5IGJ1dCBsb3ZlIGl0KS4gSWYgYW55b25lIGNvdWxkIGhlbHAgdGhhdCB3b3VsZCBiZSB2ZXJ5IG11Y2ggYXBwcmVjaWF0ZWQuCllvdSBtaWdodCBsaWtlIHRoaXMgeW91dHViZSBjaGFubmVsIGlmIHlvdSBjYW4gZ2V0IG92ZXIgdGhlIGd1eXMgc21hbGwgc3BlZWNoIGltcGVkaW1lbnQuIApGQUxMSU5HIFNIT1JUOiBOYW5jeSBUb2RkLgpMaWNlbnNlZCBhbmQgY2FzaW5vIGFuZCBsb3dlc3QuIApJbjogMjAxMyAzcmQgSW50ZXJuYXRpb25hbCBDb25mZXJlbmNlIG9uIFdpcmVsZXNzIENvbW11bmljYXRpb25zLCBWZWhpY3VsYXIgVGVjaG5vbG9neSwgSW5mb3JtYXRpb24gVGhlb3J5IGFuZCBBZXJvc3BhY2UgRWxlY3Ryb25pYyBTeXN0ZW1zIChWSVRBRSksIEF0bGFudGljIENpdHksIE5KICwgMjQgMjcgSnVuZSAyMDEzIElFRUUgLiAKSSBjb3VsZCBnaXZlIGxlc3Mgb2YgYSBzaGl0IGFib3V0IHlvdSBwdXR0aW5nIHlvdXIgb3duIGxpZmUgaW4gZGFuZ2VyLiAKRG9lcyBhbnlvbmUga25vdyBpZiB0aGUgd2FpdmVyIHByb2Nlc3MganVzdCBnb2VzIG9mZiBvZiBXL0wgcmVjb3JkcyBvciBkb2VzIGlzIHRoZXJlIHNvbWUgdHlwZSBvZiBwcmVmZXJlbnRpYWwgY29uZGlzZGVyYXRpb24gZ2l2ZW4gZGVwZW5kaW5nIG9uIGxlYWd1ZSAoQUwgdnMuIE5MKT8KRm9yIG1vc3QgcGh5c2ljYWwgcHJvZHVjdHMgd2UgdGVuZCB0byB0aGluayBvZiB0aGUgcGxhY2UgYXMgYSBzdG9yZSBvciBzaG9wIG9mIHNvbWUgc29ydC4gCkFueSB0d28gcG9pbnQgcGllcmNpbmcgdGhhdCBpcyBtZWFudCB0byBiZSBjb25uZWN0ZWQgYnkgYSBzaW5nbGUgcGllY2Ugb2YgamV3ZWxyeSByZXF1aXJlcyBhIHNpZ25pZmljYW50IGxldmVsIG9mIHNraWxsIGFuZCB0ZWNobmlxdWUgdG8gcGllcmNlLiAKSSBhYnNvbHV0ZWx5IHJ1biBpbnRvIHBlb3BsZSB3aG8gaW5zaXN0IHRoYXQgdGhleSBhcmUgc3VibWlzc2l2ZSB3aGVuIHRoZXkgYXJlLCBpbiBmYWN0LCBqdXN0IGxhenkuIApXaGVuIHlvdSBzZWUgdGhlIHBpY3R1cmUgb24gdGhlIGludGVybmV0LCBpdCByZWFsbHkgZG9lc24ndCBkbyB0aGlzIHByb2R1Y3QganVzdGljZS4gV2UgaGlnaGx5IHJlY29tbWVuZCBlbmxhcmdpbmcgdGhlIHBpY3R1cmUgc28geW91IGNhbiBnZXQgdGhlIGJlc3QgZ2xpbXBzZSBvZiB3aGF0IGl0IGhhcyB0byBvZmZlci4gCk9uIFN1bmRheSwgTWF5IDIwLCB0aGUgMTV0aCBBbm51YWwgU2FuZGhpbGxzIFBva2VyIFJ1biwgc3BvbnNvcmVkIGJ5IGFuZCBiZW5lZml0dGluZyBBQkFURSBvZiBDb2xvcmFkbyBhbmQgRGlzdHJpY3QgT25lLCBzdGFydGVkIGF0IFJpdmVyc2lkZSBQYXJrIHdpdGggY2xvdWR5IHRvIHBhcnRseSBjbG91ZHkgc2tpZXMga2VlcGluZyB0aGUgYXR0ZW5kYW5jZSBkb3duIGEgYml0IHRoaXMgeWVhciB3aXRoIDE0MCBwYXJ0aWNpcGFudHMuIApXaGVuIHRoZSBibGluZHMgYXJlICQxIG1pbGxpb24sIDUvNyBpc24ndCBldmVuIHdvcnRoIHBsYXlpbmcgd2l0aC4gCk1hdWwgY291bGQgaGF2ZSA0IGRhc2hlcyB3aXRoIGEgc2xpZ2h0bHkgc2xvd2VyIHJlZ2VuIChzbyBpdCBub3QganVzdCBhIGJldHRlciBkb29rdSksIGFuZCBtYXliZSBoZSBjb3VsZCBkYXNoIHdoZW4gdXNpbmcgdGhlIGRvZGdlIGJ1dHRvbiwgYW5kIHJvbGwgd2hlbiBwcmVzc2luZyB0aGUgYmxvY2sgYnV0dG9uCkl0IGNvdWxkbiBoYXZlIGJlZW4gbW9yZSB0aGFuIDE1IG1pbnV0ZXMgYmVmb3JlIHdlIGhlYXJkIHNvbWUgY29tbW90aW9uIGFuZCBpdCB3YXMgdGhlIHNhbWUgZ3V5IHllbGxpbmcgYWJvdXQgYSBiYWQgYmVhdCBvciBzb21ldGhpbmcgb3Igb3RoZXIuIApUaGUgZWNvbm9teSBpdHNlbGYgcHJvdmlkZXMgdGhlIGhhcmQgY2FwIG9uIGhvdyBmYXN0IHlvdSBjYW4gZ3Jvdy4gQWRtaW5pc3RyYXRpdmUgY2FwYWNpdHkgc2VlbXMgYWxtb3N0IHJlZHVuZGFudCBhcyBhbiBhbnRpIHNub3diYWxsIG1lY2hhbmljLiAKS3JhZnQgdmlzaXRlZCBwYXJsb3IgZm9yIHNleCBvbiBkYXkgb2YgQUZDIGdhbWUKU28sIEkgYW0gZ3Vlc3NpbmcgdGhpcyBpcyBhbiBlZHVjYXRpb24gcGllY2Ugb24gbXkgcGFydCwgYnV0IGlzbiB0aGlzIHNvbWV3aGF0IGEgc3ltYmlvdGljIHJlbGF0aW9uc2hpcD8KQ2UgbnVtcm8gMSBkYXQgZHUgMjAgbm92ZW1icmUgMTk0NCwgbmUgY29tcG9ydGUgcXVlICA0IHBhZ2VzICEKIlNvbWV0aW1lcyBteSBraWRzIGNhbid0IGNvbmNlbnRyYXRlIG9uIHRoZWlyIGhvbWV3b3JrIHdpdGggYWxsIG9mIHRoZSBub2lzZS4gCkhlcmUgaXMgYSBidW5jaCBvZiBndXlzIHdobyBwcmlkZSB0aGVtc2VsdmVzIG9uIGhvdyB0aGV5IGhhdmUgaGFkIGV2ZXJ5IGNyYWZ0IG91dCB0aGVyZSwgYW5kIGFyZSBhbiBleHBlcnQsIGJ1dCBhc2sgdGhlbSB0byBxdWl0PywgdGhleSBhbGwgbGlrZSBXVEY/LiAKSW4gdGVybXMgb2YgaGFuZGxpbmcgbWFueSBWU1RzIGNvbmN1cnJlbnRseSwgbm8gcHJvYmxlbS4gCkhlIHRoZW4gaGFkIHRvIGRlY2lkZSB3aGV0aGVyIHRvIGtpbGwgb3IgcmVzY3VlIHRoZSB0YXJnZXRlZCBmaWdodGVyIGxvY2sgYmVmb3JlIHVzaW5nIGhpcyBhcmNhbnVtIHRvIHBsYW5lIHNoaWZ0IGF3YXksIGFuZCBieSB0aGUgdGltZSBoZSBhY3RlZCBhZ2FpbiB3YXMgc28gcGFuaWNrZWQgdGhhdCBoZSBncmFiYmVkIHRoZSBmaXJzdCB0dW5pbmcgZm9yayBpbiBoaXMgcG91Y2ggYW5kIHVzZWQgaXQuIFRoaXMgcmVzdWx0ZWQgaW4gdGhlbSBmbGVlaW5nIGEgc3RpbGwgZnJlc2ggQ1IyMSBkZW1vbiBieSBhY2NpZGVudGFsbHkgc2hpZnRpbmcgdG8gTWVjaGFudXMsIGFuZCBtZSBoYXZpbmcgc2NhcmVkIHRoZW0gc28gYmFkbHkgdGhhdCB0aGV5IHdlcmUgcGFuaWNraW5nIGFuZCBub3cgYmVyZWZ0IG9mIG1vc3Qgb2YgdGhlIGNvbnN1bWFibGVzIHRoZXkgaGFkIGJlZW4gaG9hcmRpbmcgc2luY2UgbGV2ZWwgMTIuLiAKVGhlIG5ldyBzbGVlayBhbmQgbW9kZXJuIDEyNyByb29tIGhvdGVsIGlzIFNhbiBKb3NlJ3Mgc2Vjb25kIENvdXJ0eWFyZCBieSBNYXJyaW90dCBwcm9wZXJ0eSBhbmQgZmVhdHVyZXMgdGhlIFJlZnJlc2hpbmcgQnVzaW5lc3MgbG9iYnksIHByb3ZpZGluZyB0cmF2ZWxlcnMgd2l0aCBmcmVlIFdpIEZpIGFuZCBhIGdyZWF0IHBsYWNlIHRvIHdvcmsgb3IgcmVsYXggd2l0aCBhIHZhcmlldHkgb2YgZmxleGlibGUgc2VhdGluZyBvcHRpb25zLiBUaGUgcHJvcGVydHkgaGFzIGEgcHJhY3RpY2FsIGFuZCBtZWFzdXJhYmxlIGdyZWVuIGJ1aWxkaW5nIGRlc2lnbiwgY29uc3RydWN0aW9uLCBvcGVyYXRpb25zIGFuZCBtYWludGVuYW5jZSBzb2x1dGlvbnMgbWFraW5nIGl0IGEgTEVFRCBjZXJ0aWZpZWQgaG90ZWwuIApBdCB0aGUgc2FtZSB0aW1lLCBhIGZyaWVuZCBoYXMgd3JlY2tlZCBUaHVtcHMgY2FyLCBoZSBjYW4gZ2V0IGluIHRvdWNoIHdpdGggQ2xhaXJlLCBoaXMgY2F0IGhhcyBkaXNhcHBlYXJlZCwgYW5kIGhlIGhhcyBoaW1zZWxmIGp1c3QgYmVlbiBkaWFnbm9zZWQgd2l0aCBkaWFiZXRlcy4gCiJXaGF0IHdlJ3ZlIGdvdCBoZXJlIGlzIGEgMzAwIG1pbGxpbWV0cmUgb3IgMTIgaW5jaCB3YXRlciBtYWluIHRoYXQncyBhYm91dCA5OCwgMTAwIHllYXJzIG9sZC4gSXQncyBydXB0dXJlZCBhbmQgd2hhdCdzIGhhcHBlbmVkIGhlcmUgaXMgdGhhdCBpdCdzIGNyZWF0ZWQgYSB2b2lkIHVuZGVyIHRoZSByb2FkLCIgQmlsbCBTaGVhIG9mIFRvcm9udG8gV2F0ZXIgdG9sZCBDUDI0IGF0IHRoZSBzY2VuZS4gIldlIGhhZCBhIFRUQyB2ZWhpY2xlIHRoYXQgcGFzc2VkIG92ZXIgdGhhdCB2b2lkIGFuZCB0aGUgZnJvbnQgd2hlZWwgZ290IHN0dWNrLiBUaGFuayBnb29kbmVzcyB0aGUgZHJpdmVyIG9mIHRoZSB2ZWhpY2xlIG1hZGUgaXQgb3V0LiBUaGF0J3MgdGhlIG1vc3QgaW1wb3J0YW50IHRoaW5nLiIKRm9yIHRoZSBtb3N0IHBhcnQsIEtvcmVhbnMgd2F0Y2ggSkFWLiBJdCB0aGUgY2xvc2VzdCB0aGV5IGNhbiBnZXQgdG8gdGhlbXNlbHZlcyBhZXN0aGV0aWNhbGx5IHdpdGhvdXQgcmVseWluZyBvbiB0aGUgV2VzdC4gCktpdHN1bmVOb2VsbGUgIDQ3IHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpJdCB3YXMgZ3JlYXQgYnV0IGNvdWxkIGJlZW4gYmV0dGVyLiAKVGhlIHRoaW5nIHRoYXQgd2FzIHdvcmtlZCBiZXN0IGhhcyBiZWVuIHRvdGFsbHkgaWdub3JpbmcgaGVyIHdoZW4gc2hlIHN0YXJ0cyB3aXRoIHRoZSBuaXBweSBiZWhhdmlvci4gCldpbmRvd3Mgd2lsbCBhbGwgYmUgdHJpcGxlIGdsYXplZCBmb3IgYWRkaXRpb25hbCBhY291c3RpYyBwcm90ZWN0aW9uLiAKVG8gcHV0IHRoYXQgaW50byBwZXJzcGVjdGl2ZSBmb3IgeW91IEFtZXJpY2FuIGZvbGssIHRoYXQgZG91YmxlIHRoZSBzaXplIG9mIE5SRyBTdGFkaXVtLCBob21lIG9mIHRoZSBIb3VzdG9uIFRleGFucy4gT2theSBzdXJlLCB0aGF0IGEgbG90IG9mIHBlb3BsZSxtIGJ1dCBpZiBwZW9wbGUgd2FudGVkIHRvIGRvbmF0ZSwgdGhleSB3b3VsZCwgcmlnaHQ/IFNpbXBseSBtYWtpbmcgcGVvcGxlIHJlZ2lzdGVyZWQgYXV0b21hdGljYWxseSB3b24gYWN0dWFsbHkgY2hhbmdlIG11Y2gsIHJpZ2h0PyBXcm9uZy4gQWNjb3JkaW5nIHRvIHRoaXMgc3R1ZHkgZnJvbSBTdGFuZm9yZCBVbml2ZXJzaXR5LCBvbmx5IGFib3V0IDE1JSBvZiBBbWVyaWNhbnMgYXJlIHJlZ2lzdGVyZWQgYXMgZG9ub3JzLCB3aGVyZWFzIEF1c3RyaWEsIEJlbGdpdW0sIG9yIG90aGVyIE9wdCBPdXQgbmF0aW9ucyBoYXZlIGFwcHJveGltYXRlbHkgOTAlIG9mIHRoZWlyIGNpdGl6ZW5zIHJlZ2lzdGVyZWQgYXMgZG9ub3JzLiAKSXQgbGlrZSB0aGV5IGJlbGlldmUgaW4gdGhlc2UgSFVHRSBvdmVyYXJjaGluZyBjb25zcGlyYWNpZXMgaW52b2x2aW5nIGh1bmRyZWRzIG9mIHRob3VzYW5kcyBvZiBwZW9wbGUgYWxsIG92ZXIgdGhlIHdvcmxkIGluIGEgbXVsdGl0dWRlIG9mIGluZHVzdHJpZXMgYWxsIHdvcmtpbmcgdG9nZXRoZXIgdG8gdGFrZSBkb3duIG9uZSBndXksIHNlY3JldGx5LCBidXQgYXNrIHRoZW0gaWYgb25lIGd1eSBpcyBzdXBlciBjb3JydXB0IGFuZCBmb3VuZCBvdGhlciBjb3JydXB0IHBlb3BsZSB0byBncmVhc2UgdGhlIHdoZWVscyBhbmQgdGhleSBzYXkgdGhhdCBqdXN0IGFic3VyZCwgZG9uIGJlIGFuIGlkaW90Li4gCk5ldmVyIGhhZCBtdWNoIG9mIGEgcHJvYmxlbSBnZXR0aW5nIGl0IHNldCB1cC4gSXRzIGRlZmluaXRlbHkgYW4gYW5ub3lhbmNlIGJ1dCBtZWguClBvaW50ZWQgdG8gdGhlIGxvd2VyIGVmZmVjdGl2ZSB0YXggcmF0ZXMgdGhhdCB0aGUgYmFua3MgaGF2ZSBiZWVuIHJlcG9ydGluZyBpbiB0aGVpciBmaW5hbmNpYWwgcmVzdWx0cy4uIApFdmVyeXRoaW5nIGVsc2Ugc291bmRzIGxpa2UgdGhlIGdhbWUgd291bGQgYmUgaW1iYWxhbmNlZCBhbmQgdG9vIGVhc3k/bGFzdHNlYXNvbiAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb3dvdWxkIHlvdSBwcmVmZXIgdG8gc2VlIHNvbWUgdGVuc2lvbiBhcyBhIHJlc3VsdCBvZiBsZXNzIHByb2dyZXNzaXZlIGNoYXJhY3RlcnMgYmVpbmcgcHJlc2VudCBpbiB0aGUgd29ybGQsIHRvIGJldHRlciByZWZsZWN0IHRoZSByZWFsaXR5IGFuZCBjcmFwIHRoYXQgYSBnZW5kZXJxdWVlciBjaGFyYWN0ZXIgbWF5IGhhdmUgaGFkIHRvIGRlYWwgd2l0aD9JIHdhcyBzaW1wbHkganVzdCBhbnN3ZXJpbmcgdGhpcyAoa2luZCBvZiBvZGQpIHF1ZXN0aW9uIE9QIHB1dCBhdCB0aGUgdmVyeSBlbmQgb2YgdGhlIHBvc3QuIApUaGUgbW9zdCBpbXBvcnRhbnQgdGhpbmcgd2l0aCBiZXQgc2l6aW5nIGlzIHRvIGNvbnNpZGVyIGhvdyB2aWxsYWluIHBvc3NpYmxlIGhvbGRpbmdzIG1pZ2h0IHJlYWN0IHRvIGRpZmZlcmVudCBzaXppbmdzLiBZb3UgY2FuIHNheSB0byB5b3Vyc2VsZiAiaWYgaGUgaGFzIGEgZmx1c2ggZHJhdyB0aGVuIEkgd2FudCB0byBiZXQgWCAlIG9mIHBvdCBiZWNhdXNlLCBpZiBoZSBoYXMgdHdvIHBhaXIgdGhlbiBJIHdvdWxkIHdhbnQgdG8gYmUgYmV0dGluZyBYICUgb2YgcG90IiBldGMuIEFuZCB0aGVuIHBvdCBzaXplIG9yIGV2ZW4gZG91YmxlIHBvdCBpZiB5b3UgaGF2ZSB0aGUgbnV0cyBhbmQgdGhpbmsgb3Bwb25lbnQgaGFzIHNvbWV0aGluZyBoZSB3b3VsZCBjb25zaWRlciBjYWxsaW5nIHdpdGguIApTaGUgc2FpZCB3ZWxsIHRoYXQgdGhlIHdheSBpdCBpcywgc28gdG91Z2guIEkgd2Fsa2VkIHVwIGEgY291cGxlIGZsaWdodHMgb2Ygc3RhaXJzLCB0byB0YWxrZWQgdG8gYSBtYW5hZ2VyIGluIHRoZSBzYW1lIGhvc3BpdGFsIGluIGFub3RoZXIgZGVwYXJ0bWVudCBhbmQgc2FpZCBJIHdpbGwgY29tZSB3b3JrIGZvciB5b3Ugd2hlbiBJIGdldCBiYWNrIGZyb20gbXkgNiB3ZWVrIHZhY2F0aW9uIGlmIHlvdSB3YW50IG1lIHRvLiAKY291bnRyeSBmbGlnaHQgdGhhdCBtYXkgaGF2ZSBjaGFuZ2VkIHRoZSBDZWx0aWNzIGZvcnR1bmVzClNvbWUgb2YgdGhlIGdhbWVzIHdlcmUgaG9uZXN0bHkgYSB0b24gb2YgZnVuLiAKVGhlIG1vc3QgaW1wb3J0YW50IHRoaW5nIHRvIGtub3cgaXMgd2hlbiB0byBxdWl0LiBCZWluZyBzaGFycCBhbmQgc21hcnQgYXQgdGhlCkNhcmJlcnJ5IGlzIHRoZSBvbmUgb2YgdGhlIGdyZWF0ZXN0IGZlbWFsZSByaWRlcnMgZXZlciBhbmQgYWxzbyBvbmUgb2YgdGhlIGJlYXQgYW1hdGV1cnMuLiAKIlRoZXJlIGlzIHNvbWUgZ3V5IHNsZWVwaW5nIG5ha2VkIGluIHRoZSBoYWxsLCIgc2hlIHRvbGQgaGltLiAiT2gsIHRoYXQgQmlsbHksIGhlIHdhcyBwcm9iYWJseSBkcmlua2luZy4iLiAKSGF2ZSB5b3UgYmVlbiB3b25kZXJpbmcgaG93IHlvdSB0byBkaXNjb3ZlciB0aGUgdmFsdWUgb2YgcmVhbCBjYXNpbm8gcG9rZXIgY2hpcHM/IElmIHlvdSBhcmUgaW50byBjb2xsZWN0aW5nIHBva2VyIGNoaXBzLCB5b3UgYXJlIHdlbGwgYXdhcmUgdGhhdCB2YWx1ZSBpcyBub3QganVzdCBhYm91dCBiZWluZyByYXJlLCBvciBiZWluZyBvbGQuIFRoZSBzZWNyZXQgYmVoaW5kIGNvbGxlY3RpbmcgY2hpcHMgdGhhdCBjYXJyeSB2YWx1ZSBpcyB0aGUgc3RvcnkgdGhhdCBpcyBhdHRhY2hlZCB0byB0aGUgY2hpcHMuIEluIHRoaXMgZGV0YWlsZWQgaG93IHRvIGd1aWRlLCBJIHdpbGwgc2hhcmUgd2l0aCB5b3Ugc29tZSB0aXBzIGFuZCB0ZWNobmlxdWVzIHRoYXQgY2FuIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSB2YWx1ZSBvZiB0aGUgcmVhbCBjYXNpbm8gcG9rZXIgY2hpcHMgdGhhdCB5b3Ugb3duLgpSb2RuZXkgQWxjYWxhClRoaXMgaXMgdGhlIHBsYWNlIHlvdSBmaW5kIHdoYXRldmVyIHlvdSBpbiB0aGUgbW9vZCBmb3IgZnJvbSBvdXIgYWxsIHlvdSBjYW4gZWF0IHNwcmVhZCBvbiBvdXIgYnVmZmV0LiAKV2l0aG91dCBldmVuIGxvb2tpbmcgc2hlIHRocm93cyB0aGUgdGhpbmcgaW4gcmV2ZXJzZSBhbmQgYmFja3MgaW50byB0aGUgc3Ryb2xsZXIgYmVmb3JlIEkgY2FuIGdldCBpdCBvdXQgb2YgaGVyIHdheS4gCkkgZGVmaW5pdGVseSB3b3VsZCBub3QgaGF2ZSBiZWVuIGFibGUgdG8gcnVuIHRoYXQgZGlzdGFuY2UgaW4gMi4wOCBpbiBqdW5lIGxhc3QgeWVhci4uIApBIE5ybmJlcmcgdHJpYnVuYWwgdHlwZSBvZiBoYXVudCBvZiBKaWhhZGlzLCBsaWtlIHRoZSBFdXJvcGVhbnMgaHVudGVkIGRvd24gTmF6aSdzIHdvdWxkIGJlIGFuIGlkZWFsIG91dGNvbWUuCkkgc3RpbGwgaGF2ZSBuaWdodG1hcmVzIGFib3V0IHRoYXQgdGltZS4gCkhvbWUgc2Nob29saW5nIGlzIG5vdCBmZWFzaWJsZSBmb3IgYWxsIHBhcmVudHMuCkhlIHNtb2tlZCBtYXJpanVhbmEuIEJ1dCBoZSBkaWRuIHNlbGwgZHJ1Z3MsIHNheXMgQ3JhbmtzaGF3LCBhbmQgaGUgd2FzbiBpbiBhIGdhbmcuIEJ1dCBzb21lIG9mIGhpcyBmcmllbmRzIHNvbGQgZHJ1Z3MgYW5kIGJyb2tlIGludG8gdmVoaWNsZXMsIGhlIHRvbGQgaGVyLiBTaGUgZG9lc24ga25vdyB3aHkgaGUgaHVuZyBvdXQgd2l0aCB0aGVtLiBTaGUgdXJnZWQgaGltIG5vdCB0by4KVGhleSBhcmUgZWl0aGVyIHByb3RlY3RlZCBieSBhIHBhc3N3b3JkIHRoYXQgaXMgb25seSBnaXZlbiBvdXQgdG8gbWVtYmVycyBvZiB0aGUgZnJlZSBwb2tlciB3ZWJzaXRlcyBvciBhcmUgcmVzdHJpY3RlZC4gCkJlZm9yZSB5b3Ugc2VuZCBvdXQgdGhlIGludml0ZXMsIGNoZWNrIHRvIHNlZSBpZiB0aGUgbW9tIGlzIHJlZ2lzdGVyZWQgc29tZXdoZXJlIGZvciBiYWJ5IHNob3dlciBnaWZ0cy4gCkkgYmVlbiB2ZXJ5IGNsZWFyIHRoYXQgSSBkb24gZW5kb3JzZSB0aGUgY3V0dGluZyBvZiBhbnkgcGFydCBvZiBhbnkgYmFiaWVzIGdlbml0YWxzIHNvIEkgZG9uIHNlZSBob3cgeW91IGNvdWxkIHRoaW5rIEkgd2FzIGRlZmVuZGluZyBhbnkgYmFyYmFyaWMgYmVsaWVmcy4gSSBqdXN0IGdpdmluZyB5b3UgZmFjdHMuCklsIG4neSBhIHBhcyBkZSByZ2xlcywgaidhaSBkaiBwYXJsIGRlIGxhIGRpZmZyZW5jZSBlbnRyZSBwb2lkcyBldCBzYW50LiBEZXMgcGVyc29ubmVzIGdyb3NzZXMgcmFjb250ZW50IHBhcmZvaXMgbCd0b25uZW1lbnQgZGUgbGV1ciBtZGVjaW4gZGV2YW50IGRlcyBhbmFseXNlcyB0b3V0ICBmYWl0IG5vcm1hbGVzIHNhbnMgYXVjdW4gcHJvYmxtZSBkZSBjaG9sZXN0cm9sIG91IGRlIGdseWNtaWUuIEVuIHJldmFuY2hlLCBsYSBmYW9uIGRvbnQgYmVhdWNvdXAgZGUgbWRlY2lucyAocGFzIHRvdXMgdmlkZW1tZW50KSBhY2N1ZWlsbGVudCBsZXMgcGVyc29ubmVzIGdyb3NzZXMsIGxldXIgdGVuZGFuY2UgIHRvdXQgcmFtZW5lciAgbGEgbmNlc3NpdCBkZSBwZXJkcmUgZHUgcG9pZHMgcXVlbCBxdWUgc29pdCBsZSBtb3RpZiBkZSBsYSB2aXNpdGUsICBwcmVzY3JpcmUgdW4gcmdpbWUgcGx1dHQgcXUnY291dGVyIGxhIHBlcnNvbm5lLCBwZXV0IGNvbmR1aXJlICBzJ2xvaWduZXIgZHUgbW9uZGUgbWRpY2FsIGV0IGRvbmMgIHBvdXZvaXIgbW9pbnMgYmllbiBzZSBzb2lnbmVyLiAKQ2hhcml0eSBQb2tlciBUb3VybmFtZW50IENvbWVzIHRvIEJlbmQKTW9zc21vc3Ntb3NzbW9zc21vc3MgIDQ2NiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpBZGQgaW4gY29uc2VydmF0aXZlIHZlcnN1cyBwcm9ncmVzc2l2ZS9jaGFuZ2UgdGhpbmtpbmcgYW5kIGl0IG11bHRpcGxpZWQuIApUaGF0J3Mgd2h5IHlvdSBzaG91bGQgYmUgbW9yZSBjYXJlZnVsIGFib3V0IHNhdmluZyB0aGVzZSBleGN1c2l2ZSBwbGF5aW5nIGluc3RydW1lbnRzLiAKMi4gSXQgcmVtYWlucyBzcXVhcmVseSB3aXRoaW4gTWNDYWluIGludGVyZXN0IHRvIGdldCBhIGRlYWwgYmVmb3JlIHRoZSBtYXJrZXRzIG9wZW4gb24gTW9uZGF5LCBib3RoIGJlY2F1c2UgdGhhdCBpcyB3aGF0IGhlIHNhaWQgaGUgd291bGQgZG8gb24gV2VkbmVzZGF5IHdoZW4gaGUgYW5ub3VuY2VkIGhlIHdhcyByZXR1cm5pbmcgdG8gV2FzaGluZ3RvbiBhbmQgYmVjYXVzZSB0aGUgZGVhbCB0aGF0IGxlYWRlcnMgcHV0IHRvZ2V0aGVyIHllc3RlcmRheSBzZWVtcyB0byBhZGRyZXNzIG1vc3Qgb2YgTWNDYWluIHN0YXRlZCBjb25jZXJucy4gCklmIGl0IHdhcyBjaGVja2VkIHRvIHlvdSBhbmQgeW91IGluIGEgbGF0ZXIgcG9zaXRpb24gdGhhbiB0aGUgbGFzdCBhZ2dyZXNzb3IsIHlvdXIgYmV0IHdvdWxkIGp1c3QgYmUgY2FsbGVkIGEgYmV0IG9yIHN0YWIuIApTb21ldGltZXMgeW91IGRvbid0IGV2ZW4gaGF2ZSB0byBhY3R1YWxseSBwbGF5IHRoZSBnYW1lICAgd2hlbiB3b3JraW5nIG9uIEZhYmxlOiBUaGUgSm91cm5leSwgYSBtb3Rpb24gc2Vuc2luZyBLaW5lY3QgZ2FtZSwgQWRyaWFuIGRpc2NvdmVyZWQgdGhhdCBoZSBjb3VsZCBwYXJrIGEgY29hdCBzdGFuZCBpbiBmcm9udCBvZiB0aGUgS2luZWN0IGFuZCB0cmljayBpdCBpbnRvIHRoaW5raW5nIGl0IHdhcyBhIHNwaW5kbHkgaHVtYW4gYmVpbmcuIApKb3VzdGluZ2xlYWd1ZSAgNTYgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSB0ZW5kIHRvIHVzZSBzb21lIGVyb3RpY2lzbSBkdXJpbmcgdGhlIG1hc3NhZ2UgYW5kIGhpdHRpbmcgc29tZSBvZiB0aG9zZSB0cmlnZ2VyIHNwb3RzIHRoYXQgeW91IG1pZ2h0IG5vdCBldmVuIGtub3cgYWJvdXQuIEkgYW0gdG90YWxseSBudWRlOyBhbmQgb2YgY291cnNlLCBzbyBhcmUgeW91LiBJIGhhdmUgY2VydGFpbiB0cmlnZ2VyIHNwb3RzIHRoYXQgY2FuIHVzZSBzcGVjaWFsIGF0dGVudGlvbiBmcm9tIHRpbWUgdG8gdGltZSwgYW5kIEkgYW0gc3VyZSB5b3UgZG8gdG9vLiAKV2UgYXJlIGdpdmVuIGEgc3RvcnkgdGhhdCBCUCBhbmQgdGhlIG9pbCBpbmR1c3RyeSBhcmUgdGhlc2UgYmlnIG1hY2hpbmVzIHRoYXQgYXJlIHVuc3RvcHBhYmxlIGluIHRoZWlyIGRlc3RydWN0aW9uIG9mIHRoZSBlbnZpcm9ubWVudC4gSW4gZmFjdCwgYWN0dWFsIGh1bWFucyBtYWRlIHRoZSBkZWNpc2lvbnMgdGhhdCBjcmVhdGVzIHN1Y2ggaG9ycm9yLiAKVGhlIHVsdGltYXRlIENhcmliYmVhbiB2YWNhdGlvbiBleHBlcmllbmNlIGJlZ2lucyBhdCBvdXIgaW50aW1hdGUsIDIgc3RvcnkgYm91dGlxdWUgcmVzb3J0IGxvY2F0ZWQgb24gdGhlIHNob3JlcyBvZiBtYWplc3RpYyBFYWdsZSBCZWFjaCwgYW4gaWRlYWwgcGxhY2UgZm9yIHJvbWFudGljIGFuZCByZWp1dmVuYXRpbmcgZ2V0YXdheXMuIFRoZSB3ZWxsbmVzcyBleHBlcmllbmNlIGluY2x1ZGVzIGEgYmVhY2ggc2lkZSBleG90aWMgQ2FyaWJiZWFuIEJhbGluZXNlIHN0eWxlIHNwYSBvZmZlcmluZyBhIHZhcmlldHkgb2YgbWFzc2FnZXMsIGJvZHkgdHJlYXRtZW50cyBhcyB3ZWxsIGFzIHlvZ2EgUGlsYXRlcyBjbGFzc2VzIGFuZCBmaXRuZXNzIHJvb20uIE9wdGlvbmFsIHByZW1pdW0gZnVsbHkgYSBsYSBjYXJ0ZSBhbGwgaW5jbHVzaXZlIHByb2dyYW0gYXZhaWxhYmxlIGZlYXR1cmluZyBJa2UgQmlzdHJvLCBUaGUgQ2hvcGhvdXNlIGFuZCBPbWFrYXNlIFN1c2hpIEJhci4gTGVzcwpBZnRlciBvbmUgc3VjY2Vzc2Z1bCBuaWdodHRpbWUgcmFpZCwgdGhlIGhlcm9lcyByZXR1cm4gdG8gdGhlaXIgaG9tZSwgd2hpY2ggaGFzIGJlY29tZSBleHRyZW1lbHkgY3Jvd2RlZCB3aXRoIGRyYWdvbnMgYW5kIGh1bWFucyBhbGlrZS4gTWVhbndoaWxlLCB0aGUgd2FybG9yZHMgd2hvc2Ugc2hpcHMgSGljY3VwIGFuZCBmcmllbmRzIGhhdmUgYmVlbiByYW5zYWNraW5nIGRlY2lkZSB0byBlbmxpc3Qgc29tZSBvdXRzaWRlIGhlbHAgZnJvbSBhIG5lZmFyaW91cyBtYW4gbmFtZWQgR3JpbW1lbCAoRi4gCkFsc28gaGUgcGxheXMgVGhlIEJpbmRpbmcgb2YgSXNhYWMgYW5kIGN1cnJlbnRseSBoYXMgb3ZlciA0MDAwIGVwaXNvZGVzIG91dCB3aWNoIG9mIGFyZSA5OSUganVzdCBzb21lIHJhbWJsaW5ncyBhYm91dCBoaXMgcG9pbnQgb2YgdmlldyBvZiB0aGUgd29ybGQuIEl0cyBnZW51aW5lIGZ1bi4KRnJvbSB0aGUgdG93ZXJpbmcsIHBpbmVhcHBsZSBzaGFwZWQgR3JhbmQgTGlzYm9hIHRvIHRoZSB2YXN0IGNhbXB1cyBvZiB0aGUgVmVuZXRpYW4sIHRoZXJlJ3Mgbm8gc2hvcnRhZ2Ugb2YgY2FzaW5vcyB0byBjaG9vc2UgZnJvbSBpbiBNYWNhdS4gVGhlIG9ubHkgcGxhY2UgaW4gQ2hpbmEgd2hlcmUgY2FzaW5vcyBhcmUgbGVnYWwsIE1hY2F1IG9wZW5lZCB1cCBpdHMgZ2FtYmxpbmcgaW5kdXN0cnkgaW4gMjAwNCwgc3B1cnJpbmcgdGhlIG51bWJlciBvZiBjYXNpbm9zIHRvIGp1bXAgZnJvbSAxMSB0byAzMi4gV2hpbGUgdGhlcmUgbWF5IGJlIGEgcXVlc3Rpb24gb2Ygd2hlcmUgdGhpcyBjaXR5J3MgZ2FtYmxlcnMgbGlrZSB0byBwbGF5LCB0aGVyZSdzIG5vIGRlYmF0aW5nIHdoaWNoIGdhbWUgaXMga2luZy4gQmFjY2FyYXQsIGEgMTV0aCBjZW50dXJ5IEl0YWxpYW4gdGFibGUgZ2FtZSwgY29udHJpYnV0ZWQgODYlIG9mIE1hY2F1J3MgJDE0LjEgYmlsbGlvbiBpbiBnYW1ibGluZyByZXZlbnVlIGxhc3QgeWVhci4gaXMgcHJvbXB0aW5nIHBva2VyIHByb21vdGVycyB0byB0YWtlIHRoZWlyIGNhcmQgZ2FtZSBhY3Jvc3MgdGhlIFBhY2lmaWMgaW4gaG9wZXMgb2Ygc2V0dGluZyBkb3duIHJvb3RzIGluIEFzaWEncyBMYXMgVmVnYXMuIFNpbmNlIHRoZSBNYWNhdSBnb3Zlcm5tZW50IGFwcHJvdmVkIFRleGFzIEhvbGQnZW0gY2FzaCBnYW1lcyBhbmQgdG91cm5hbWVudHMgaW4gSmFudWFyeSAyMDA4LCB0aHJlZSBjYXNpbm9zIGhhdmUgb3BlbmVkIGRlc2lnbmF0ZWQgcG9rZXIgcm9vbXMuIEluIGl0cyBmaXJzdCB5ZWFyIGluIE1hY2F1LCBUZXhhcyBIb2xkJ2VtIGJyb3VnaHQgaW4gbGVzcyB0aGFuICQ3IG1pbGxpb24sIGJ1dCB0aGF0IG51bWJlciBpcyBzZXQgdG8gcmlzZTogaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgb2YgMjAwOSBhbG9uZSwgdGhlIGdhbWUgdG9vayBpbiBtb3JlIHRoYW4gJDQgbWlsbGlvbi4gIlBva2VyIGhhcyBleHBsb2RlZCBpbiBNYWNhdSwiIHNheXMgQ2VsaW5hIExpbiwgMjYsIGFuIEF1c3RyYWxpYW4gcG9rZXIgcGxheWVyIHdobyBjb21wZXRlcyBpbiBNYWNhdS4gIlRoZSBza2lsbCBsZXZlbCBvZiB0aGUgcGxheWVycyBoZXJlIGhhcyBpbmNyZWFzZWQgZHJhbWF0aWNhbGx5IGp1c3QgaW4gdGhlIGxhc3QgeWVhci4iIChXYXRjaCBUSU1FJ3MgdmlkZW8gIk1hY2F1J3MgV2lubmVycyBhbmQgTG9zZXJzLiIpCkFuZCBhcyB3ZSBnb3QgcG9vcmVyIGFuZCB0aGUgZGVidCBwaWxlZCB1cCwgd2hhdCBkaWQgd2UgQW1lcmljYW5zIGRvPyBXZSBiZWxpZXZlZCBpbiB0aGUgQW1lcmljYW4gRHJlYW0gZXZlbiBtb3JlLiBBY2NvcmRpbmcgdG8gYSByZXBvcnQgY29tcGlsZWQgZm9yIHRoZSBDZW50ZXIgZm9yIEFtZXJpY2FuIFByb2dyZXNzIGJ5IEFtZXJpY2FuIFVuaXZlcnNpdHkgZWNvbm9taXN0IFRvbSBIZXJ0eiwgdGhlIGxhc3QgdGhpcnR5IHllYXJzIGhhdmUgc2VlbiBpbmNyZWFzaW5nIGRvd253YXJkIG1vYmlsaXR5IGZvciBtb3JlIEFtZXJpY2FucywgbW9yZSBpbmNvbWUgdm9sYXRpbGl0eSBmb3IgdGhlIG1pZGRsZSBjbGFzcywgYW5kLCBieSAyMDAzIDA0LCBubyBpbmNyZWFzZSBpbiBpbmNvbWUgZXZlbiBmb3IgcGVvcGxlIHdobyB3b3JrZWQgbG9uZ2VyIGhvdXJzLiAKRnJvbSBEdW5nZW9uLCBJc3N1ZSAxMTogQWZ0ZXIgc3Vydml2aW5nIGEgc2hpcHdyZWNrLCB0aGUgcGxheWVycyB3YXNoIHVwIG9uIGEgdGlueSwgcm9ja3kgaXNsYW5kIHRoYXQncyBob21lIHRvIGEgcm90dGVkIG91dCBtYW5vciBob3VzZS4gCkFzIHRoZXkgd2VyZSBsZWFuaW5nIG9uIHRoZSBiYWNrIGRvb3JzIG9mIHRoZSB0cnVjayB0cnlpbmcgdG8gcHVzaCB0aGUgZG9vcnMgY2xvc2VkIHNvIHRoZXkgY291bGQgbG9jayBpdCwgSSB3b25kZXJlZCwgIkRvZXMgdGhpcyBjb21wYW55IGtub3cgd2hhdCBraW5kIG9mIHBlb3BsZSB0aGF0IGFyZSByZXByZXNlbnRpbmcgdGhlbT8iIEN1c3RvbWVycyBnZXQgY3Jhbmt5IHdoZW4gZW1wbG95ZWVzIGRvIG5vdCB3b3JrIGFzIHRob3VnaCB0aGV5IHJlc3BlY3QgdGhlIGNvbXBhbnkgdGhleSB3b3JrIGZvci4KSSB3YXMgdGFsa2luZyB0byBjb3dvcmtlcnMgYWJvdXQgd2hhdCB3ZSBhbGwgd2FudCB0byBuYW1lIG91ciBraWRzIG9uZSBkYXkgKHdlIGluIG91ciBtaWQgMjBzKS4gClRydXN0IG1lLCBpdCdzIGEgd2luICB3aW4uIFBlb3BsZSBmZWVsIHJlYWxseSBnb29kIGFib3V0IHRoZW1zZWx2ZXMgd2hlbiB0aGV5J3JlIGFibGUgdG8gZG8gdGhpbmdzIGxpa2UgdGhpczsgeW91J2xsIGJlIGhlbHBpbmcgdGhlbSwgdG9vLiBEb24ndCBiZSBlbWJhcnJhc3NlZCB0byBhc2sgZm9yIHdoYXQgeW91IG5lZWQhCkJyYWc6IFBhdGllbnRseSB3YXRjaCBhbiBvcmJpdCBvciBzbyBhZnRlciBidXlpbmcgaW4gICBub3RoaW5nIHJlYWxseSBwbGF5YWJsZSBhbmQgdGFraW5nIG5vdGVzLiBJIGZpbmQgVCBUIGluIGN1dG9mZi4gClRha2UgaXQgZnJvbSBhIGNocm9uaWMgb3ZlcnRoaW5rZXIgYW5kIG92ZXJhbmFseXplcjogU3RvcC4gClRoZSBpbmR1c3RyeSBoYXMgYmVjb21lIGEgcGlwZWxpbmUgZm9yIG5ldyBpbW1pZ3JhbnRzLCBhbmQgYnJvdWdodCBwYWlkIGZvciBzZXggdG8gTWFpbiBTdHJlZXQgQW1lcmljYSB3aXRoIGEgdmVuZWVyIG9mIHJlc3BlY3RhYmlsaXR5LCBvciBhdCBsZWFzdCBteXN0ZXJ5LiAiRXJvdGljIG1hc3NhZ2UgZG9lcyBnZXQgaWdub3JlZC4gSXQncyByZWxhdGl2ZWx5IHNhZmUuIApBbmQgdmVyeSByYW5kb21seSBhdCB0aW1lcywgSSBjb3VsZCBldmVuIGRyb3AgYmVsb3cgMSwgcHJhY3RpY2FsbHkgdW51c2FibGUuIFRoaXMgYWN0dWFsbHkgaGFwcGVuZWQgdHdvIGRheXMgYWdvIGFuZCBsYXN0ZWQgZm9yIG92ZXIgNiBob3Vycy4gRnJpZW5kcyB0b2xkIG1lIHRoZXkgYWxzbyBmZWx0IHRoZSB0aHJvdHRsZWQgc3BlZWRzIHRvbywgc28gaXQgd2FzbiBvbiBteSBlbmQuLiAKT2J2aW91c2x5IHNvbWUgZXhlcmNpc2UgaXMgYmV0dGVyIHRoYW4gbm9uZSwgaG93ZXZlciB5b3Ugc2hvdWxkIGdpdmUgaGltIHRpbWUgdG8gYWRqdXN0IHRvIHRoZSBkaWV0LCB0aGVuIGdlbnRseSByZW1pbmQgaGltIHRoYXQgaGUgd2lsbCBiZXR0ZXIgYWNoaWV2ZSBkZXNpcmVkIHJlc3VsdHMgYnkgdGhyb3dpbmcgZml0bmVzcyBpbnRvIHRoZSBtaXguCkkgdG9vayBhIGxvbmcgaGlhdHVzIGZyb20gdGhlIERpdmlzaW9uIDEgYmVmb3JlIGFsbCB0aGUgaW1wcm92ZW1lbnRzIGFuZCB1cGRhdGVzLiBBZnRlciB0aGUgY2xvc2VkIGJldGEgd2VudCBhd2F5IEkgYm91Z2h0IHRoZSBkaXZpc2lvbiAxIGZvciAkMTAgZnJvbSB0aGUgUFMgc3RvcmUgYXMgSSBsb3N0IG15IG9yaWdpbmFsIGNvcHkgKGRpZG4gZXZlbiByZWFsaXplIGl0KS4gCkkgdGhpbmsgeW91ciBpZGVhIG9mIHRoZSBFYXN0ZXJuIEZyb250IGlzIGEgYml0IG9mZi4gRmlyc3RseSwgUnVzc2lhIGhhZCBhYm91dCBoYWxmIG9mIHRoZWlyIGZvcmNlcyBzdGF0aW9uZWQgb3ZlciBpbiB0aGUgZWFzdCBwcmVwYXJpbmcgZnJvbSBhIEphcGFuZXNlIGF0dGFjay4gVGhlIFJ1c3NvIEphcGFuZXNlIFdhciB3YXNuIGFsbCB0aGF0IGxvbmcgYWdvLCBhbmQgSmFwYW4gaGFkIGJlZW4gcnVubmluZyBhbW9rIGZvciBhIHdoaWxlIGluIENoaW5hLiAKSSB0aGluayB0aGF0IHN0YXlpbmcgaW4gdG93biB0byBnbyB0byBjb2xsZWdlIGlzIG1vcmUgYXR0YWluYWJsZSBzaW5jZSBpdCBoYXMgdGhlIHBvc3NpYmlsaXR5IHRvIGJlIGNoZWFwZXIgd2l0aCB0aGUgc2FtZSBvdXRjb21lIGZvciBsZWFybmluZy4gSSBoYXZlIGFsc28gaGVhcmQgdGhhdCBVTk8ncyBidXNpbmVzcyBhY2FkZW15IGhhcyBncmVhdCBvcHBvcnR1bml0aWVzIHRvIGNvbnRpbnVlIGludG8gYSBqb2IgcmlnaHQgb3V0IG9mIGNvbGxlZ2UuLiAKVGhlIGJhbGwgaXMgaW4gaGlzIGNvdXJ0LCBsaWtlIHlvdSBzYWlkIHlvdXZlIHRhbGtlZCB5b3Vyc2VsZiBpbiBjaXJjbGVzIGFuZCB0aGVyZXMgbm90IG11Y2ggbW9yZSB5b3UgY2FuIGRvIG9uIHRoYXQgZnJvbnQgYmVzaWRlcyByZXR1cm4gdGhlbS4gSXQgc2VlbXMgbGlrZSBoZSdkIG11Y2ggcmF0aGVyIHdhbGxvdyBpbiBzZWxmIHBpdHkgdGhhbiBhdHRlbXB0IHRvIHRhbGsgdG8geW91LCB3aGljaCB0byBiZSBmYWlyIGl0cyBiZWVuIGxlc3MgdGhhbiBhIGRheSwgYnV0IGFueSBsb25nZXIgdGhhbiBhIGZldyBkYXlzIGlzIGVuY3JvYWNoaW5nIG9uIGRlYWwgYnJlYWtlciB0ZXJyaXRvcnkKT2YgY291cnNlIG5vdCBldmVyeSBhdGhsZXRlIGJyaW5ncyB0aGVtIHRoZSBzYW1lIHJldmVudWUgYnV0IGlmIHRoaXMgd2FzIGFubm91bmNlZCBvbiB3b21lbiBkYXksIGl0IHdvdWxkIG1lYW4odG8gbWUgYXQgbGVhc3QpIHRoYXQgdGhleSBhcmUgbG9va2luZyBhdCBpdCBsaWtlIGEgbWFya2V0aW5nIHN0cmF0ZWd5LiAKVGhlcmUgYXJlIHR3byB3YXlzIGFuZCBvbmx5IHR3byB0byBtYWtlIGEgcHJvZml0IGF0IGdhbWJsaW5nIGFuZCB0aGV5IGFyZSBzcG9ydHMgYmV0dGluZyBhbmQgcG9rZXIuIApNb3N0bHkgZm9vZCBpcyBub3QgYSBjcml0aWNhbCByZXNvdXJjZSBhbmQgbW9zdCBwZW9wbGUgd291bGQgaGF2ZSBsaXR0bGUgdHJvdWJsZSBub3QgZWF0aW5nIGZvciBhIGRheS5XaHkgdGFrZSBhIHByb3RhYmxlIHNoZWx0ZXIgaWYgeW91IGtub3cgeW91IGNhbiBzdGF5IGluIGEgaHV0IG9yIHNvbWV0aGluZy4gVGhvdWdoIGl0IG1pZ2h0IGJlIHBydWRlbnQgdG8gYXQgbGVhc3QgdGhpbmsgYWJvdXQgaG93IHlvdSB3b3VsZCBkZWFsIHdpdGggYSBuaWdodCBvciB0d28gb3V0c2lkZSBpbiBleHRyZW1lIGNhc2VzLiAKWW91IG1heSBhY2Nlc3MgdGhlIFdlYnNpdGVzIG9ubHkgcGVyc29uYWxseSB3aXRoIGFuIGluZGl2aWR1YWwgYnJvd3NlciBhbmQgdXNlIHRoZSBDb250ZW50IG9ubHkgZm9yIHBlcnNvbmFsIG9yIHByb2Zlc3Npb25hbCBmYW1pbHkgaGlzdG9yeSByZXNlYXJjaCwgYW5kIGRvd25sb2FkIENvbnRlbnQgb25seSBhcyBzZWFyY2ggcmVzdWx0cyByZWxldmFudCB0byB0aGF0IHJlc2VhcmNoIG9yIHdoZXJlIGV4cHJlc3NseSBwZXJtaXR0ZWQgYnkgV29ybGQgQXJjaGl2ZXMuIApTaGFtZSBpcyBjcnVjaWFsIGluIHdlbGwgZnVuY3Rpb25pbmcgc29jaWV0aWVzLiAKRXhjZXB0IHRob3NlIHBhdGllbnRzIGFsc28gc3VmZmVyZWQgdGhyb3VnaCBicnV0YWwgdHJlYXRtZW50LCB3aGljaCBpbiBtYW55IGNhc2VzLCBpcyB3b3JzZSB0aGFuIHRoZSBjYW5jZXIgaXRzZWxmLi4gCkJvdGggbXkgZnJpZW5kIGFuZCBJIHdlcmUgbGl0ZXJhbGx5IHNoaXR0aW5nIG91cnNlbHZlcyBhbmQgZGlkbid0IGRhcmUgbW92ZS4gCkJhY2twYWdlIGVzY29ydHMgbm9ydGggcGxhdHRlIG5lYnJhc2thIFdvcmxkIEVzY29ydHMgICBpbmRlcGVuZGVudCwgZmVtYWxlLCBtYWxlLCBjb3VwbGVzLCBnYXksIHRyYW5zc2V4dWFsIGFuZCBlc2NvcnQgYWR1bHQgc2VydmljZXMgV2hpbGUgbW9zdCBhZ2VuY2llcyBhcmUgY29tcGxldGVseSBwcm9mZXNzaW9uYWwgYW5kIHRydXN0d29ydGh5LCBpcyBhbHdheXMgdXNlZnVsIHRvIGtub3cgZm9yIHN1cmUgd2hpY2ggYXJlIGdvb2QgdG8gZGVhbCB3aXRoLi4gCkFuZCBob3cgbWFueSBvdGhlciBjb3VudHJpZXMgaGF2ZSBhIG1hc3NhZ2Ugc3R5bGUgbmFtZWQgZm9yIHRoZW0/IChUaGFpIG1hc3NhZ2UgaXMgdGFrZW4gc28gc2VyaW91c2x5IGhlcmUsIGluIGZhY3QsIHRoYXQgNjAgc3RvbmUgdGFibGV0cyBjYXJ2ZWQgd2l0aCBwYWxtIGxlYWYgdGV4dHMgZGVzY3JpYmluZyBpdCBhcmUgZW5zaHJpbmVkIGluIEJhbmdrb2sncyBXYXQgUGhvIHRlbXBsZS4pIFRoYWlsYW5kJ3Mgc3BhIGxhbmRzY2FwZSBjb250aW51ZXMgdG8gZXZvbHZlLCB3aXRoIG5ldyBzcGFzIG9wZW5pbmcgYW5kIGNsYXNzaWNzIGdldHRpbmcgYmV0dGVyIHdpdGggYWdlLi4gCktpZHMgKGFsbCBodW1hbnMpIHRlc3QgYm91bmRhcmllcy4gCklmIFRoZSBVbml0ZWQgU3RhdGVzIGxvc3QgYSB3YXIgdG8gTWV4aWNvIGFuZCB0aGV5IHNlaXplZCBwYXJ0IG9mIE5ldyBNZXhpY28gb3IgVGV4YXMgYXMgcGFydCBvZiBhbiBhcmJpdHJhcnkgYW5kIGNvbXB1bHNvcnkgdHJlYXR5IGFuZCBNZXhpY2FucyB3ZXJlIG1pc3RyZWF0aW5nIFVTIGNpdGl6ZW5zIHdvdWxkIGl0IG5vdCBiZSBqdXN0aWZpZWQgdG8gd2FudCB0aGUgdGVycml0b3J5IGJhY2suLiAKIldoZXJlIG11c3QgeW91IHR1cm4gbmV4dD8gIiAiWW91IGdvIGluc2lkZS4gWW91IGxvb2sgYXQgZXZlcnlib2R5IGluIHRoZSBmYW1pbHkuIApKdXN0IGxldHRpbmcgeW91IGtub3csIHdlIGRvbiBjYXJlIGFib3V0IHlvdXIgZmF1eCB0b3VnaCBidWxsc2hpdCBhbmQgbm8gb25lIHdhbnRzIHlvdSBoZXJlLiBIb25lc3RseSwgdGhpcyBidWxsc2hpdCBpcyBzbyBwcmV2YWxlbnQgdGhlc2UgZGF5cy4gV2hlcmUgZG8geW91IGZ1Y2tzIGNvbWUgZnJvbSB3aGVyZSB5b3UgYmVlbiByYWlzZWQgdG8gbW92ZSB0byBzb21lb25lIGVsc2UgaG9tZSBhbmQgYWN0IGVudGl0bGVkIHRvIGFueXRoaW5nPwpZb3VuZ0pvaG5Kb2UgdQpBdCAzOSwgSlAgQWd1aXJyZSBpcyBvbmUgb2YgdGhlIHlvdW5nZXN0IGdsb2JhbCBtYW5hZ2luZyBwYXJ0bmVycyBhdCB0aGUgSVBHIE1lZGlhYnJhbmRzIGFnZW5jeSBVTSBhbmQgdGhlIGZpcnN0IExhdGlubyBtZW1iZXIgb2YgVU0ncyBnbG9iYWwgbGVhZGVyc2hpcCB0ZWFtLiBVbmRlciBoaXMgY28gbGVhZGVyc2hpcCwgdGhlIFNhbiBGcmFuY2lzY28gb2ZmaWNlIG9mIFVNIGhhcyB3b24gYWNjb3VudHMgaW5jbHVkaW5nIENvbHVtYmlhIFNwb3J0c3dlYXIsIEZpdGJpdCwgR29Qcm8sIFViaXNvZnQgYW5kIFppbGxvdy9UcnVsaWEuIEl0cyByZXZlbnVlIGluIHRoZSAxMiBtb250aHMgdGhyb3VnaCBKdW5lIDIwMTggZ3JldyA1MCBwZXJjZW50LgpUaGVyZSBhIHNheWluZyBpbiB0aGUgcm90YXJ5IGNvbW11bml0eSAgICJib29zdCBnb2VzIGluLCBhcGV4IHNlYWxzIGNvbWUgb3V0Ii4gVGhleSByZXNwb25kIHRvIGEgdHVyYm8sIGJ1dCBpdCBhdCBhIGhlYXZ5IHJlbGlhYmlsaXR5IGNvc3QuIApIYXZlIHlvdSBzaWduZWQgdXAgZm9yIHlvdXIgZnJlZSBzdHVmZiB0b2RheT8gT3IganVzdCB3YW50ZWQgdG8gYnV5IHNvbWV0aGluZyBsYXRlbHkgYW5kIGhhZCB0byBwdXQgeW91ciBmaXJzdCBuYW1lIGFuZCBlbWFpbCBpbj8gT3IganVzdCB3YW50ZWQgdG8gc2VlIHdoYXQgaW5mb3JtYXRpb24gaXMgb24gYSBzaXRlIGFuZCBmaWxsZWQgb25lIG91dC4KSSB3b3JrZWQgbmVhciBNeWVvbmdkb25nIGZvciBhIGNvdXBsZSB5ZWFycywgYW5kIHN0aWxsIGdvIHRoZXJlIG9uY2UgaW4gYSB3aGlsZS4gCkxldCBoZXIga25vdyB0aGF0IHNoZSBpcyBnZXR0aW5nIGJldHRlci4gUmVtaW5kIGhlciBvZiB3aGF0IHNoZSBjYW4gZG8gZm9yIHRoZSBiYWJ5LCBhbmQgb2YgYWxsIHRoZSB0aGluZ3Mgc2hlIGhhcyBkb25lIGZvciBoaW0vaGVyIHRoYXQgbm8gb25lIGVsc2UgY291bGQuIApCdXQgZm9yIHRoZSBzdWJqZWN0IGF0IGhhbmQgICBtYWtpbmcgYSBiYWJ5ICAgYSBtYW4gYW5kIGEgd29tYW4gYW5kIHRoZWlyIHVuaXF1ZSBnZW5ldGljIGluZm9ybWF0aW9uIGlzIHJlcXVpcmVkLiBPbiB0aGUgbmV4dCBmZXcgcGFnZXMsIHdlJ2xsIGRpc2N1c3MgdGhlIHJlcHJvZHVjdGl2ZSBzeXN0ZW1zIG9mIG1lbiBhbmQgd29tZW4uLiAKSW4gd2hhdCBmb3JtIHRoZXNlIGNvbWUgZG9lc24gcmVhbGx5IG1hdHRlci4gCkknbSBKdXN0IHNoYXJpbmcgZmxlZXRpbmcgdGhvdWdodHMuIE5vIGp1ZGdtZW50LiAKQ29udHJvbGxpbmcgdGhlIHRhYmxlIG1lYW5zIGtub3dpbmcgd2hlbiB0byBkb2RnZSB5b3VyIG9wcG9uZW50J3Mgc3Ryb25nIGhhbmRzIGFuZCB3aGVuIHRvIHBpY2sgdXAgd2lucyBvbiB0aGVpciB3ZWFrZXIgaGFuZHMuCiJZb3UgY2FuIGJlY29tZSBhbnlvbmUgeW91IHdhbnQgdG8gYmUhIEl0IGRvZXNuJ3QgbWF0dGVyIHdoYXQgaGFwcGVuZWQgdG8geW91IG9yIHdoYXQgeW91J3ZlIGRvbmUhIFdoYXQgbWF0dGVycyBpcyB3aGF0IHlvdSBkbyBuZXh0ISIgV2UgYXJlIHRlYWNoaW5nIHRoZSBjbGFzc2VzIGluIEFyaXpvbmEuIFRoZSBwcm9ncmFtIHdpbGwgc29vbiBiZSBhdmFpbGFibGUgZm9yIGNsYXNzZXMgaW4gb3RoZXIgc3RhdGVzIGFzIHdlbGwgYXMgc2VsZiBzdHVkeS4gCkxPT0sgQVQgQUxMIFRIRUVaRSBCSVRDSEVaWlpaWlpaWiEiLiAKMjAgTWFyIDIwMTggLiBOZXcgRW5nbGlzaCA5MDAgQm9vayAyIFBkZiBGcmVlIDMwLiBNYXIgMjAgMjAxOCAuIAoiQUNPTiBzdXBwb3J0cyBhbmQgYXBwbGF1ZHMgZ2F5IG1lbiBmb3IgdGhlaXIgY29udGludWVkIHVzZSBvZiBjb25kb21zIG1vcmUgdGhhbiAzMCB5ZWFycyBpbnRvIHRoZSBISVYgZXBpZGVtaWMgICBhdCByYXRlcyB0aGF0IGV4Y2VlZCB0aGF0IG9mIHRoZSBnZW5lcmFsIHBvcHVsYXRpb24sIiBBQ09OIHNhaWQgaW4gYSBzdGF0ZW1lbnQuCkhvd2V2ZXIsIGRlcGVuZGluZyBvbiB5b3VyIG5lZWRzIGFuZCB3YW50cywgbm90IGFsbCB0aGF0IGlzIGF2YWlsYWJsZSBtYXkgYmUgcmlnaHQgZm9yIHlvdSEuIApCYXRocm9vbXMgd2lsbCBiZSBlbmNhc2VkIGluIG1hcmJsZSB3aXRoIG92ZXJzaXplZCB0aWxlcyBvbiB0aGUgZmxvb3IgYW5kIHdhbGxzIGFuZCB3aXRoIGFuIG92ZXJzaXplZCBzaG93ZXIgaW4gYSBmcmFtZWxlc3MgZ2xhc3MgZW5jbG9zdXJlIHdpdGggbWFyYmxlIG1vc2FpYyB0aWxlZCBiYXNlIGFuZCBsaW5lYXIgZHJhaW4uIFBsdW1iaW5nIGZpeHR1cmVzLCBpbmNsdWRpbmcgdGhlIGhhbmQgc2hvd2VyIGFuZCBjZWlsaW5nIG1vdW50IGhlYWQgc2hvd2VyLCBhcmUgYnkgS29obGVyIGluIGEgY2hyb21lIGZpbmlzaCBhbmQgdGhlIHNob3dlcnMgaW5jbHVkZSBhIGN1c3RvbSBuaWNoZS4gU2VsZWN0IGhvbWVzIHdpbGwgZmVhdHVyZSBhIGRlZXAgc29ha2VyIHR1Yi4gCkVtbWFudWVsIENoYXZhc3NpZXV4IGEgZXUgZGVzIHZpZXMgbXVsdGlwbGVzIGdhbGVtZW50IChsZ2lvbm5haXJlLCBwaG90b2dyYXBoZSwgY291dGVsaWVyKS4gClRoaXMgaXMgd2hlcmUgb2JzZXJ2YXRpb24gYW5kIHN0dWR5aW5nIHlvdXIgb3Bwb25lbnQncyBzdHlsZSBjb21lcyBpbnRvIHBsYXkgYXQgdGhlIHRhYmxlcy4gRmlyc3QgYmUgc3VyZSB0aGF0IHlvdSBhcmUgZGVmaW5pdGVseSBkZWFsaW5nIHdpdGggYSBwbGF5ZXIgdGhhdCBoYXMgYSBwcm9wZW5zaXR5IHRvIGJsdWZmLCB5b3Ugd2lsbCBmaW5kIG90aGVyIHBsYXllcnMgdGhhdCB3aWxsIG5ldmVyIHRoaW5rIG9mIGJsdWZmaW5nIGF0IGFsbCBhbmQgb25seSBwbGF5IHRoZWlyIGNhcmRzIGRlYWx0IHRvIHRoZW0uClJlZ2dpZSBCdWxsb2NrLCB3aG8gbm93IHBsYXlzIGZvciB0aGUgTG9zIEFuZ2VsZXMgTGFrZXJzLCBtYWRlIHRoZSB3aW5uaW5nIHNob3QgYXMgdGltZSBleHBpcmVkIGluIE5vdmVtYmVyIHdoZW4gRGV0cm9pdCB3b24gYXQgVG9yb250byAxMDYgMTA0IGFzIER3YW5lIENhc2V5IG1hZGUgYW4gZW1vdGlvbmFsIHJldHVybiB0byBmYWNlIGhpcyBmb3JtZXIgdGVhbS4uIApIb3dldmVyLCB0aGUgc2NlbmFyaW8gaGFzIGNoYW5nZWQgYSBsb3QgdG9kYXkgYXMgdGhlIHBsYXllcnMgaGF2ZSBiZWNvbWUgaW50ZXJlc3RlZCBpbiB1c2luZyBhbGwga2luZCBvZiBwb2tlciBwcm9kdWN0cyB0aGF0IG1ha2UgdGhlaXIgcHJlc2VuY2VzIG1vcmUgb2J2aW91cyBpbiB0aGUgY2FzaW5vcyBhcm91bmQgdGhlIHdvcmxkLiAKVGhpcyBoYXMgZHJhd24gYSBsb3Qgb2YgY3JpdGljaXNtIGFuZCBza2VwdGljaXNtIGZyb20gbWFueSBwZW9wbGUsIGJ1dCBhbHNvIGJyaW5ncyB1cCB0aGUgZGlzY3Vzc2lvbiBvZiB3aGV0aGVyIGl0cyBwb3NzaWJsZSB0aGlzIHdvcmtzLiAKVGhlIGZpcnN0IDEwMDAgcGxhbmUgYm9tYmluZyBtaXNzaW9uIGJ5IHRoZSBSQUYgb2NjdXJyZWQgTWF5IDMwLCAxOTQyIG92ZXIgQ29sb2duZSwgd2hlcmUgdGhlIHRvdGFsIGFtb3VudCBvZiBvcmRuYW5jZSBkcm9wcGVkIGVxdWFsZWQgYWJvdXQgb25lIHRoaXJkIG9mIHRoZSB3ZWlnaHQgb2YgdGhlIHNwaGVyZS4gCkFsbCBDaGluZXNlIGZvY3VzIG9uIHByb3BlcnR5IGludmVzdG1lbnQgYW5kIGFjYWRlbWljIHR1dG9yaW5nIGZvciB0aGVpciBjaGlsZHJlbi4gCkkgZHVubm8gT1AsIHRoZXJlIGFuIGV4dHJlbWVseSBoaWdoIGNoYW5jZSB0aGF0IGd1eSBpcyBnb25uYSBiZSByZWFsbHkgY3JlZXBlZCBvdXQgYW5kIHVuY29tZm9ydGFibGUgd2l0aCB0aGUgd2hvbGUgc2l0dWF0aW9uLiBOb3QgdGhhdCB0aGF0IGNoYW5nZXMgaG93IGF3ZnVsIGhlciBhY3Rpb25zIGhhdmUgYmVlbiB0b3dhcmQgeW91LgpTb3VyY2UsIFVTIE1lZHN0dWRlbnQgMiBwb2ludHMgIHN1Ym1pdHRlZCA2IG1vbnRocyBhZ28KQ29udGFpbmVycyBvZiBhbGwgc2l6ZXMsIGZpbGxlZCB0byB0aGUgYnJpbSB3aXRoIGhpZ2hseSBjcmVhdGl2ZSBjb21iaW5hdGlvbnMgb2YgYmVhdXRpZnVsIGZsb3dlcnMgYW5kIHJpY2ggZm9saWFnZSwgd2lsbCBhbHNvIGJlIGNvbnRyaWJ1dGluZyB0byB0aGUgbWFnaWMuU3dlbnNvbiBleHBsYWluZWQgdGhhdCB0aGUgc2hvdyBoYXMgYmVlbiBzY2hlZHVsZWQgYSBsaXR0bGUgbGF0ZXIgdGhpcyB5ZWFyIHRvIGFsbG93IG1vcmUgdGltZSBmb3IgdGhlIGdhcmRlbiBjcmVhdG9ycyB0byBicmluZyBhIGdyZWF0ZXIgbnVtYmVyIG9mIHBsYW50cyBhbmQgYnVsYnMgaW50byBibG9vbS5SZWxhdGVkUmVhZCBtb3JlIGFib3V0IGdhcmRlbmluZ0V2ZXJ5dGhpbmcgeW91IG5lZWQgdG8ga25vdyBhYm91dCBzcHJpbmcgZ2FyZGVuaW5nQ29udGFpbmVyIFdhcnMgd2FzIGEgYmlnIGhpdCBsYXN0IHllYXIsIGFuZCB0aGlzIGZyaWVuZGx5LCBmYXN0IHBhY2VkIGFuZCBlbnRlcnRhaW5pbmcgZmxvcmFsIGRlc2lnbiBjb21wZXRpdGlvbiBpcyByZXR1cm5pbmcuIFByb2Zlc3Npb25hbCBkZXNpZ25lcnMgY29tcGV0ZSBpbiA0NSBtaW51dGUgY2hhbGxlbmdlcywgYW5kIGl0IGludGVyZXN0aW5nIHRvIHNlZSB3aGF0IHN0eWxpc2ggY3JlYXRpb25zIHRoZXkgY2FuIHdoaXAgdXAgaW4gc3VjaCBhIHNob3J0IHRpbWUuIApJbiBhIHNlY29uZCBmbG9vciBhcGFydG1lbnQuIApXaGVuIHlvdSBoYXZlIGEgZHJhZnQgdGhhdCB5b3Uga25vdyBmb3Igc3VyZSB0aGUgYXVkaWVuY2Ugd2lsbCBsaWtlLCBicmluZyBpdCB0byBEcmFmdHMgYW5kIENyaXRpcXVlcyBGb3J1bS4gCk15IG9ic2VydmF0aW9ucyBhYm91dCB0cmFkZXNtZW4gd2FzIG1vcmUgYWJvdXQgaG93IHdlIGFyZSB0cmVhdGVkLgpIZSBmaXJtbHkgYmVsaWV2ZXMgdGhhdCBiYWxsZXQgaXMgbXVjaCBtb3JlIHN1aXRlZCBhcyBhIHByb2Zlc3Npb24gZm9yIHRoZW0sIHRoYW4gd2hhdCB0aGV5IGFyZSBkb2luZyByaWdodCBub3cuIFRodXMsIHdlIGhhdmUgZW5jbG9zZWQgYSBjYXJkIGZyb20gUmVkYWN0ZWQgd2hvIGlzIGEgZGlyZWN0b3IgYXQgeW91ciBsb2NhbCBiYWxsZXQgaW5zdGl0dXRlIGluIEJlbmQgY2FsbGVkIEFjYWRlbWllIGRlIEJhbGxldCBDbGFzc2lxdWUuIApJIHNwZWFrIHdoZW4gSSBoYXZlIHNvbWV0aGluZyB0byBzYXkuIApIZXJlIGlzIEFteSByb2JhY2ggdG9uaWdodCB3aXRoIHdoZXJlIHRoZSBjaGlwcyBoYXZlIGZhbGxlbi4gUmVwb3J0ZXI6IEluIHRoZSBoZWFydCBvZiBIb2xseXdvb2QsIGhpZGRlbiBiZW5lYXRoIHRoZSBub3RvcmlvdXMgdmlwZXIgcm9vbSwgYSBuYXJyb3cgaGFsbHdheSBsZWFkcyBpbnRvIGEgbXVzdHkgcm9vbSwgYSBwb2tlciB0YWJsZSwgYW5kIHRoZSBzZWNyZXQgd29ybGQgb2YgTW9sbHkgYmxvb20uIFNvIHRoaXMgaXMgd2hlcmUgaXQgYWxsIGJlZ2FuLiBZZXMuIFJlcG9ydGVyOiBTaGUgd2FzIHRoZSB2b2x1cHR1b3VzIEhvbGx5d29vZCBtYWRhbSBvZiBwb2tlciwgYW5kIHNoZSBzYXlzIHNoZSBsdXJlZCBiaWxsaW9uYWlyZXMgYW5kIGNlbGVicml0aWVzIGFsaWtlLiAKVGhpcyBraW5kYSBzY2FyZXMgbWUuIApPbmUgb2YgdGhlIGJpZ2dlc3QgcHJvYmxlbXMgaXMgZXZlcnlvbmUgaXMgZGlmZmVyZW50LCBzb21lIGNhbiB3b3JrIGZyb20gaG9tZSBlZmZpY2llbnRseSBvdGhlcnMgY2Fubm90LiBTb21lIHdvcmsgYmV0dGVyIHdpdGggZWFybHkgc2hpZnRzIGFuZCBvdGhlciBkb24gVGhhdCBpcyB0aGUgcmVhbCBmYWN0b3IsIEkgbXkgc2VsZiBhbSBhIGxvdCBtb3JlIGVmZmljaWVudCB3aGVuIEkgbWFuYWdlIG15IG93biB0aW1lLiBNeSBjb3dvcmtlciBob3cgZXZlciBoYXMgdG8gd29yayBmcm9tIHRoZSBvZmZpY2UgLCBoZSBzYXlzIGhlIG5lZWQgdG8gZ28gdG8gd29yayBzbyBoZSBjYW4gYWN0dWFsbHkgbGVhdmUgd29yay4gCiAxIHBvaW50ICBzdWJtaXR0ZWQgOSBkYXlzIGFnb0kgcmVhbGl6ZSB0aGF0LCBJIHdhcyBzaW1wbHkgcmVzcG9uZGluZyB0byB0aGUgc3RhdGVtZW50IHRoYXQgImdlbXMgZG9uIGluaGVyZW50bHkgbWFrZSB0aGVpciByZXNwZWN0aXZlIHN0YXRzIGdvb2QiICAgdGhleSBkbywgdG8gdGhlIGV4dGVudCB0aGF0IHRoZXJlIGlzIGEgcGF5b2ZmIHRvIG9idGFpbmluZyBhIHNwZWNpZmljIGFtb3VudCBvZiB0aGUgYXR0cmlidXRlIHJlcXVpcmVkIHRvIHVzZSB0aGUgZ2VtLkkgYWN0dWFsbHkga2luZCBvZiB0aGluayB0aGF0IGFsbCB0aHJlZSBhdHRyaWJ1dGVzIG1heWJlIG91Z2h0IHRvIGdvIGJhY2sgdG8ganVzdCBiZWluZyBzb2xlbHkgZm9yIGdlbSBhbmQgZ2VhciByZXF1aXJlbWVudHMsIGFuZCB0aGUgYm9udXNlcyB0aGV5IGN1cnJlbnRseSBwcm92aWRlIGNvdWxkIGp1c3QgYmUgbW92ZWQgb2ZmIHRvIG90aGVyIG5vZGVzIG9uIHRoZSB0cmVlLiBUaGVyZSBtaWdodCBiZSBzb21lIGJldHRlciBwbGFuIHRoYW4gdGhhdCwgYnV0IGl0IHdvdWxkIG1ha2UgdGhlIHNpdHVhdGlvbiBmb3IgYXR0cmlidXRlcyBhbG9uZSBiYWxhbmNlZCBhdCBsZWFzdC4gClRoZSBjbHViIGFpbXMgZm9yIFN1bmRheSdzZXhoaWJpdGlvbiwgd2hpY2ggaGFzIGV2b2x2ZWQgb3ZlciB0aGUgeWVhcnMgaW50byBhIGZ1biBkYXksIHRvIHJhaXNlIGF0IGxlYXN0ICQ2MCwwMDAgdG8gc3VwcG9ydCB0aGUgZmFtaWx5IG9mIE1yIExldmVzcXVlLCB3aG8gZGllZG9uIERlY2VtYmVyIDIuIApCYXlpIGxpbWEgdGggZGlwYWtzYSBqZW1iYXRhbiB1cCBzYXlhIGJlYXV0eSBiZXJrZW5hYW4gbmVnZXJpIG1lbWFuYXNrYW4gaGFyaSBhZGFsYWggYmxvZyBhbmRyYSBib2xlaCBtZW5qYWxhbmthbiBqYW5pbiBkZXdhc2EgdHVhIGhhcnVzIHBva2VyIGRpYSBrZWR1YSBwZXJrZW1iYW5nYW4gc2VidXQgbXkgb25saW5lIGp1ZGkgb25saW5lIGhpbmdnYSBkaSBzYWphIG1hbGF5c2lhIHNpbmkgc2F5YSBwdW4gbWFsYW0gcGFzYW5nYW4gYWdlbiBhbmRhIGJlcmFzbWFyYSBib2xhIGRhbGFtIGluaSBwZW5hbmcgYW5kYSBwcm9qZWN0LiBLb25nc2lrYW4gc2VwZXJ0aSB5YW5nIGhhbWlsIGNhYmFyYW4gc2lhcGEgc21hIG1hbGFtIHRlbXBvaCBtYWxhbSBkYW4gb2tpIHR0YyBiZW5hcmthaCB0ZW50YW5nIHBhZGEganVkaSB0ZW50YW5nIHBlcnRhbWEgc2Vjb25kIGtpbmkuIENhc2lubyBkb21pbm8gZGliZWxhaCBtZWxhdGkgb3JhbmcgYWdlbiBsYWx1IGRvbWlubyBkZXNlbWJlciBiYXlpLi4gCkNhc2lubyBTREsgRW5naW5lIGZyb20gSWQgU29mdHdhcmUgaGFuZHMuIEJpZ2Fzb2Z0IHZpZGVvIGluc3BpcmF0aW9uIDggICBzb2Z0d2FyZSBwZXIgbWFwcGUgbWVudGFsaSAgIG1pbmQgbWFwcGluZyBzb2Z0d2FyZSBIb3lsZSBjYXNpbm8gZ2FtZXMgKGpld2VsIGNhc2UpLiAKVGhlIGluZm9ybWF0aW9uIGJlbG93IHdpbGwgYmUgdXNlZCB0byBvcHRpbWl6ZSB0aGUgY29udGVudCBhbmQgbWFrZSBhZHMgYWNyb3NzIHRoZSBuZXR3b3JrIG1vcmUgcmVsZXZhbnQgdG8geW91LiAKSWYgYm90aCBvZiB5b3VyIGhhbmRzIGJlYXQgYm90aCBvZiB0aGUgZGVhbGVycycgY29ycmVzcG9uZGluZyA1IGFuZCAyIGNhcmQgaGFuZHMsIHRoZW4geW91IHdpbi4gClRoZSBwdWJsaWNhdGlvbiBvZiB0aGlzIGluZm9ybWF0aW9uIGRvZXMgbm90IGNvbnN0aXR1dGUgdGhlIHByYWN0aWNlIG9mIG1lZGljaW5lLCBhbmQgdGhpcyBpbmZvcm1hdGlvbiBkb2VzIG5vdCByZXBsYWNlIHRoZSBhZHZpY2Ugb2YgeW91ciBwaHlzaWNpYW4gb3Igb3RoZXIgaGVhbHRoIGNhcmUgcHJvdmlkZXIuIApEb21pbmljYW4gUmVwdWJsaWMKWWVzLCBpdCBoZWxwcyBlc3RhYmxpc2ggdGhhdCBCb2JieSB3YXNuIGF0IHRoZSBBU1ksIGF0IGxlYXN0IGF0IHRoYXQgbW9tZW50LiBCdXQgbm9ib2R5LCBpbmNsdWRpbmcgQXZlcnksIGNsYWltcyB0aGF0IGhlIHdhcy4gSWYgc2hlIHdhcyBraWxsZWQgYXQgdGhlIEFTWSwgQXZlcnkgaXMgaGlzIGFsaWJpLCBub3QgU1QuIElmIHNoZSB3YXMga2lsbGVkIHNvbWV3aGVyZSBlbHNlLCBoZSBoYXMgbm8gYWxpYmkgYXQgYWxsLgpIZSBnZXRzIGhpbXNlbGYgaW50byBmaWdodHMsIHBoeXNpY2FsIGFsdGVyY2F0aW9ucywgZm9yIG5vIGdvb2QgcmVhc29uLiBJdCdzIGdlbmVyYWxseSBuaWdodCBjbHViIG9yIG5pZ2h0IGxpZmUgaW1tYXR1cml0eSBhbmQgc3R1cGlkaXR5LiBIZSBmZWVscyBkaXNyZXNwZWN0ZWQgc28gaGUnbGwgZ2V0IGludG8gYSBmaWdodC4gCkl0IHdhcyBvbmUgb2YgdGhvc2UgYnJ1c2hlcyB3aXRoIHRoZSBsYXcgdGhhdCB0b29rIG1lIHRvIFNhbiBEaWVnbyBpbiB0aGUgc3VtbWVyIG9mIDE5ODYgb24gbXkgZmlyc3QgYmlnIGFzc2lnbm1lbnQgZm9yIFRoZSBHYXpldHRlLiBJIHdhcyBhIGNvcHkgZWRpdG9yIG9uIHRoZSBzcG9ydHMgZGVzayBhdCB0aGUgdGltZSBhbmQgUm9kZ2VycyBoYWQganVzdCBiZWVuIGFycmVzdGVkIGZvciBwdWxsaW5nIGEgZ3VuIG9uIGEgY2FibGUgVFYgcmVwYWlybWFuIHdobyBjYW1lIHRvIGRpc2Nvbm5lY3QgaGlzIGNhYmxlLi4gCkkgY3VycmVudGx5IDI4KzIgYW5kIHN0aWxsIGN5Y2xpbmcuIEkgcGxhbiB0byBnbyBhcyBsb25nIGFzIHBvc3NpYmxlLiAKR2FuZyB2aW9sZW5jZSB3YXMgYmFkIGF0IHRoYXQgdGltZSAoZXZlbiBpbiBLQykgc28gdGhlcmUgdGhhdC4gVGhlIGxpbmV1cCB3YXMgTldBLCBJY2UgVCwgRXJpYyBCIGFuZCBSYWtpbSwgTUMgTHl0ZSBhbmQgbWF5YmUgU2FsdCBhbmQgUGVwYS4gCkxldmVsIDMgYXQgVGhlIFBsYXlnb3VuZCAgIGhlcmUsIGZpbmQgZ3JlYXQgdGFzdGluZyBtZW51cyBhdCByZXN0YXVyYW50cyBsb2NhdGVkIGluIFRoZSBQaWVyIFNob3BzIGF0IENhZXNhcnMuIFRoZSBuZXcgaG90IHNwb3RzIGluY2x1ZGUgY29uY2VwdHMgZnJvbSBzb21lIG9mIHRoZSBFYXN0IENvYXN0J3MgbW9zdCBwb3B1bGFyIHJlc3RhdXJhdGV1cnMsIGluY2x1ZGluZyBQaGlsYWRlbHBoaWEncyBTdGVwaGVuIFN0YXJyIGFuZCBCYWx0aW1vcmUncyBTdGV2ZSBQaGlsbGlwcy4gClRoYXQgbGl0ZXJhbGx5IGV4YWN0bHkgd2hhdCBoZSBzYXlzIGJlZm9yZSB0aGUgS3lyaWUgdGhpbmcuIEkgZ3Vlc3MgaXQganVzdCBuZXBoZXdzIG5vdCBib3RoZXJpbmcgdG8gcmVhZCB0aGUgYXJ0aWNsZTouIApTbyBjb21lIHNlZSBtZSBhbmQgY29tZSBzb21lIG1vcmUgOilORVcgSE9VUlM6IFN1YmplY3QgdG8gY2hhbmdlIHdpdGggc29tZSBmbGV4aWJpbHR5IGFzIHdlbGwuICBBdmFpbGFibGUgNyBkYXlzIHdpdGggZmxleGlibGUgaG91cnMsIGJ1dCBhbHdheXMgYm9vayBpbiBhZHZhbmNlLiAKIkkgd2FzIHNvIGNsb3NlIHRvIGEgYnJhY2VsZXQgdGhhdCB5ZWFyLCIgUmFjZW5lci4gIldlIGhhZCBhIHRocmVlIG1vbnRoIGxheW9mZiBkdXJpbmcgdGhhdCB0b3VybmFtZW50IGFuZCBpdCB3YXMgZHVyaW5nIHRoZSBsYXlvZmYgdGhhdCBteSBtb20gd2FzIGRpYWdub3NlZCB3aXRoIGxpdmVyIGNhbmNlci4gCkkgd291bGQgc3VnZ2VzdCB0aGF0IHlvdSBhc2sgd2hvZXZlciBpcyB0aGUgYWN0aW5nIG1hbmFnZXIgYXQgdGhhdCBwYXJ0aWN1bGFyIGxvY2F0aW9uLiAKU2hvdyBtZSBhIHZpZGVvIG9yIEkgZG9uIGJ1eSBpdC4KRmxveWQgTWF5d2VhdGhlciBKci4gCkl0IGhhcyB0YWJsZSBnYW1lcyBzdWNoIGFzIGJsYWNramFjayBhbmQgY3JhenkgZm91ciBwb2tlci4gCkRlciBiZXJ3aWVnZW5kZSBUZWlsIGRlciBCYW5hbmVuIHdpcmQgbm9jaCBpbiBrb252ZW50aW9uZWxsZXIgTGFuZHdpcnRzY2hhZnQgYW5nZWJhdXQsIGVyc3QgbmFjaCB1bmQgbmFjaCBzdGVsbGVuIEJhbmFuZW4gRmluY2FzIGF1ZiBiaW9sb2dpc2NoZSBQcm9kdWt0aW9uIHVtLiBTY2hvbiBsYW5nZSB3b2xsdGUgaWNoIG1pciBlaW5tYWwgZGllIFByb2R1a3Rpb24gdW5kIFZlcmFyYmVpdHVuZyB2b24gQmFuYW5lbiBhdWYgTGEgUGFsbWEgYW5zZWhlbiB1bmQgSm9yZ2UsIGVpbiBQYWxtZXJvLCBkZXIgMTMgSmFocmUgaW4gQmVybGluIGdlbGVidCB1bmQgZG9ydCBQb2xpdGlrICB1bmQgV2lydHNjaGFmdHN3aXNzZW5zY2hhZnRlbiBzdHVkaWVydCBoYXQsIGJpZXRldCBGaHJ1bmdlbiBhdWYgZGVyIEJhbmFuZW4gRmluY2EgYW4sIGRpZSBlciBpbSBOZWJlbmVyd2VyYiBiZXRyZWlidCB1bmQgZGllIGVyIGF1ZiBiaW9sb2dpc2NoZW4gQW5iYXUgdW1zdGVsbHQuIFZlcnppY2h0IGF1ZiBjaGVtaXNjaCBzeW50aGV0aXNjaGUgRG5nZW1pdHRlbCB1bmQgUGVzdGl6aWRlIHNpbmQgZGllIHdpY2h0aWdzdGVuIE1hbmFobWVuLiBaaWVnZW5taXN0IHp1bSBFaW5zYXR6LgpUaGUgUHVwcHkgU21pdGggdHJhaWxoZWFkIHRvIHRoZSBSaW8gR3JhbmRlIFRyYWlsIHdpbGwgYmUgY2xvc2VkIGZvciByZXBhdmluZyBmcm9tIFRodXJzZGF5LCBTZXB0LiA2LCB0aHJvdWdoIEZyaWRheSwgU2VwdC4gMjEuIERldG91cnMgd2lsbCBiZSBwcm92aWRlZC4KSSB3YXMgc28gZGlzYXBwb2ludGVkIHdoZW4gaXQgc3RhcnRlZCB0byBkaXNpbnRlZ3JhdGUuIEl0IGhhZCBncmVhdCBwb3RlbnRpYWwgYnV0IHRoZXkgcGFpZCBubyBhdHRlbnRpb24gdG8gdGhlaXIgd29ybGQgYnVpbGRpbmcsIGl0IHdhcyBhbGwgYnV0dCBqb2tlcyBhbmQgd29yc3Qgb2YgYWxsICh0byBtZSkgd2FzIHRoZSBiYWRnZXIgYWN0b3IgYWN0aXZlbHkgdHJ5aW5nIHRvIHJ1aW4gdGhlIGltcHJvdi4gVGhlIG90aGVycyB3b3VsZCBiZSBzZXR0aW5nIHVwIGFuIGlkZWEgb3IgcHJlbWlzZSBhbmQgdGhlbiBoZSBqdXN0IHNoaXQgb24gaXQsIG92ZXIgYW5kIG92ZXIgYWdhaW4uClR3byBhbmdsZXJzIGJyYXZlZCB0aGUgc25vdyBhbmQgd2luZCBhbmQgZmlzaGVkIHRoZSBydW4gVHVlc2RheS4gVGhlIGxhc3QgYW5nbGVyIG91dCB0aGF0IG5pZ2h0IHJlcG9ydGVkIGRlY2VudCBhY3Rpb24gaW4gdGhlIGxvd2VyIGhhbGYgb2YgdGhlIHJ1biBmcm9tIG1pZCBhZnRlcm5vb24gdW50aWwgc3Vuc2V0LiAKUmV2ZWFsZWQ6IFRoZSBzZWNyZXQgYmVoaW5kIGJlYXRpbmcgY2VsbHVsaXRlIGFuZCB3aHkgd2UndmUgYWxsIGhhZCBpdCB3cm9uZyBmb3IgeWVhcnMKVGhlIGhvdXNlIGJpbGwgaW4gY29uZ3Jlc3Mgd291bGQgYmFuIEludGVybmV0IGdhbWJsaW5nIGV4Y2VwdCBmb3JlIGhvcnNlIHJhY2UgYmV0dGluZyBhbmQgc3RhdGUgbG90dGVyaWVzLiBJdCBpcyBhbiBhdHRlbXB0IHRvIGNsb3NlIGEgbG9vcGhvbGUgaW4gdGhlIDE5NjEgV2lyZSBBY3QsIG1lYW50IHRvIGNyYWNrIGRvd24gb24gcmFja2V0ZWVyaW5nLiBUaGUgV2lyZSBBY3QgZm9yYmlkcyBidXNpbmVzcyBmcm9tIHVzaW5nIGEgd2lyZSBjb21tdW5pY2F0aW9uIGZhY2lsaXR5IHRvIGFzc2lzdCBpbiBwbGFjaW5nIGJldHMgb24gYW55IHNwb3J0aW5nIGV2ZW50IG9yIGNvbnRlc3QuIEhvd2V2ZXIsIGFjY29yZGluZyB0byBhIGZlZGVyYWwgYXBwZWFscyBjb3VydCBpbiBOZXcgT3JsZWFucywgdGhlIGxhdyBkb2VzIG5vdCBjb3ZlciBvdGhlciB0eXBlcyBvZiBjYXNpbm8gYmV0dGluZyB3aGljaCBsZWF2ZXMgc29tZSBkb3VidCBvbiB3aGV0aGVyIHByb3NlY3V0b3JzIGNhbiBzaHV0IGRvd24gSW50ZXJuZXQgcG9rZXIgYW5kIG90aGVyIGNhc2lubyBnYW1lcy4gV2l0aCBvciB3aXRob3V0IGEgbmV3IGxhdyBmcm9tIENvbmdyZXNzLCB0aGUgSnVzdGljZSBEZXBhcnRtZW50IGludGVycHJldHMgYWxsIG9ubGluZSBnYW1ibGluZyB0byBiZSBpbGxlZ2FsLiBwbGF5ZXJzIG9uIHRoZWlyIGNvbXB1dGVycy4KSSBqdXN0IGFza2VkIGEgcXVlc3Rpb25zIGd1eXMuIApOb3cgd2l0aCB0aGVzZSBxdWljayBhbmQgc2ltcGxlIHRlY2huaXF1ZXMsIHlvdSB3aWxsIGJlIGFibGUgdG8gcGxheSBpbiBhIHBsYW5uZWQgbWFubmVyIGFuZCBlbmpveSB0aGUgZ2FtZXMgZXZlbiBtb3JlLi4gCkhvdHRlc3QgdGlwIG9mIHRoZSB3ZWVrIHNvIGZhciBoYXMgYmVlbiB0aGUgaW5mYW1vdXMgY3J5cHRvY3VycmVuY3kgZXhjaGFuZ2UgbG9ja2Rvd247IGFwcGFyZW50bHkgdGhlIG93bmVyIHR1cm5lZCB1cCAiNiBmZWV0IHVuZGVyIiBkdXJpbmcgYSBuaWNlIHZhY2F0aW9uLCBhbmQgbG9ja2VkIHVwIDIwMCBtaWxsaW9uIHdvcnRoIG9mIGNyeXB0bywgYWxsIGJlY2F1c2UgaGUgd2FzIHRoZSBzb2xlIGNhcnJpZXIgb2YgYSB2aXRhbCBwYXNzd29yZC4gCiJCdXQgdGhlIHByb2JsZW0gd2l0aCBhdGh1bmRlcnN0b3JtaXMgdGhlIHN0cm9uZyB3aW5kcyB0aGF0IHByZWNlZGUgdGhlIGZyb250IHdoaXAgdXAgcG9sbGVucyBpbnRvIHRoZSBhaXIgYW5kIHJ1cHR1cmUgdGhlbWludG8gdGlueSBncmFudWxlcywgd2hpY2ggY2FuIGJ5cGFzcyB0aGUgZmlsdGVyIHN5c3RlbSBpbiB0aGUgYWlyd2F5cyBhbmQgZ2V0IGludG8gdGhlIGx1bmcuIiBMYXN0IHdlZWsgYXQgaGlzIFdhZ2dhIGhvbWUsIERyIEdyYWhhbSB3YXMgc2VlaW5nIHNvbWUgb2YgdGhlIGhpZ2hlc3QgcG9sbGVuIGNvdW50cyBpbiB5ZWFycyBmb3J0dW5hdGVseSwgdGhpcyB3ZWVrJ3MgcmFpbiBicm91Z2h0IGRvd24gdGhvc2UgbnVtYmVycy4gIkVhcmx5IGluZGljYXRpb25zIGFyZSBpdCdzIGdvaW5nIHRvIGJlIGhpZ2ggY291bnRzIHRoaXMgc2Vhc29uLCIgaGUgc2FpZC4gCklmIHlvdSBydW4gb2ZmIHRvIGhlYWwgVHJhY2VyIGluc3RlYWQgb2Ygc3RpY2tpbmcgd2l0aCB5b3VyIHRhbmtzLCB0aGVuIHlvdXIgaGVhbGluZyB3b24gYmUgYXMgaW1wYWN0ZnVsLiBNb2lyYSBoYXMgdGhlIGFkZGVkIGNoYWxsZW5nZSBvZiBkZWNpZGluZyB3aGVuIHRvIHJlY2hhcmdlIGhlYWwganVpY2UsIHdoaWNoIG1heSBsZWFkIHRvIHRpbWVzIHdoZW4geW91IGRvbiBoZWFsIGFuIGFsbHksIHNpbmNlIHlvdSB3YW50IHRvIHNhdmUgdGhhdCBqdWljZSBmb3IgYSBtb3JlIHZhbHVhYmxlIGhlYWwgaW4gYW4gdXBjb21pbmcgZW5nYWdlbWVudC4uIApUaGVuIFRpbW1vbnMgaHVycmllZCBvdXQgb2YgdGhlIHN0b3JlLCBhcHByb2FjaGVkIHRoZSBwaWNrdXAuIApVbmUgbnVpdCBlbiBweWphbWEgIFJhZGlvIENhbmFkYVVuZSBudWl0IGVuIHB5amFtYSAgUmFkaW8gQ2FuYWRhLCBhIHZvdXMgdGVudGU/IEluc2NyaXZleiB2b3RyZSBmYW1pbGxlICBub3RyZSBjb25jb3VycyBwb3VyIHZpdnJlIHVuZSBleHByaWVuY2UgdW5pcXVlLiBEZXMgcmVuY29udHJlcyBhdmVjIGxlcyBwZXJzb25uYWdlcyBqZXVuZXNzZSBwcmZycyBkZSB2b3MgZW5mYW50cyBldCB1bmUgZm91bGUgZGUgc3VycHJpc2VzIHZvdXMgYXR0ZW5kZW50ISBQYXJ0aWNpcGV6IGp1c3F1J2F1IDE1IG1hcnMgZW4gbm91cyBlbnZveWFudCB1bmUgcGhvdG8gZmFtaWxpYWxlLiAKSW4gdHJhZGl0aW9uYWwgYnJlZWRpbmcsIHRoZXJlJ3Mgbm8gc2ltcGxlIHdheSB0byB0cmFuc2ZlciB0aGUgZGVzaXJlZCB0cmFpdHMgdG8gb3RoZXIgcGxhbnRzLiAKRXZlbiBieSBtYWtpbmcgYSBsb3Qgb2YgbWlzdGFrZXMsIHRoZSBhdmVyYWdlIHBsYXllciBjYW4gbGlrZWx5IGFjaGlldmUgYSBsb25nIHRlcm0gcmV0dXJuIG9mIG92ZXIgOTclIHdoZW4gcGxheWluZyBhIGdvb2QgdmlkZW8gcG9rZXIgZ2FtZS4gQnkgJ2dvb2QnLCBJIG1lYW4gYSBnYW1lIGxpa2UgZnVsbCBwYXkgSmFja3Mgb3IgQmV0dGVyLCB3aGljaCBpcyB3aWRlbHkgYXZhaWxhYmxlIG9uIHRoZSBJbnRlcm5ldC4gVGhpcyB2ZXJzaW9uIG9mIHZpZGVvIHBva2VyIG9mZmVycyBhIHJldHVybiBvZiA5OS41NCUgaWYgdGhlIHBsYXllciB1c2VzIHRoZSBwcm9wZXIgcGxheWluZyBzdHJhdGVneS4gCkkgZG9uIGxpa2UgdGhlIGlkZWEgb2YgYW4gYWR1bHQgaGl0dGluZyBhIGNoaWxkLCBidXQgSSBmZWVsIGxpa2Ugc2hlIHdhcyBqdXN0aWZpZWQgaW4gdGhhdCBtb21lbnQuLiAKQmFzaWNhbGx5IGFsbCB5b3UgdG8gZG8gd2FzIHJlZ2lzdGVyIGFuZCBwbGF5IHR3byB0cml2aWEgZ2FtZXMuKERpZG4ndCBtYXR0ZXIgaWYgeW91IGFuc3dlcmVkIGl0IHdyb25nIG9yIG5vdCkuIApFaW5lIGJlc29uZGVyZSBBdXNuYWhtZSBpc3QgZGFzIFdXRiBQcm9qZWt0IER6YW5nYSBTYW5naGEgaW0gYWZyaWthbmlzY2hlbiBLb25nb2JlY2tlbi4gRG9ydCBsZWJ0IFNpbGJlcnJja2VuIE1ha3VtYmEgbWl0IHNlaW5lciBGYW1pbGllLiAKSSBub3QgZW50aXJlbHkgc3VyZSB0aGF0IGFuIHVucmVhc29uYWJsZSBvcGluaW9uIGZvciB0byBob2xkLiBBc2lkZSBmcm9tIGNvbXBhcmlzb25zIHdpdGggdGhvc2UgbW92aWVzIGl0IGp1c3QgYW4gdW5pbXBvcnRhbnQgZmlsbS4gCkl0IGlzIG5vdCBrbm93biB3aGF0IHJvbGUsIGlmIGFueSwgdGhlIGNhc2UgcGxheWVkIGluIEVwc3RlaW4ncyBwbGVhIG5lZ290aWF0aW9ucy4uIApUaGUgZXhwZXJpZW5jZSB5b3UgZGVzY3JpYmUgaXMgdXN1YWxseSBkdWUgdG8gYSBsYWNrIG9mIGV4cGVyaWVuY2UgYW5kIHVuZGVyc3RhbmRpbmcsIGFzIHdlbGwgYXMgYSB1c2VsZXNzIHR3aXQgcnVubmluZyB0aGUgcGFpbnQgY291bnRlciBhdCB5b3VyIGxvY2FsIGhhcmR3YXJlIHN0b3JlLiBUaGV5IGNhbiBzYXkgd2hhdCB0aGV5IHdhbnQsIExvd2UgYW5kIEhvbWUgRGVwb3QgZG8gbm90IGhpcmUgcHJvZmVzc2lvbmFscyBhbmQgdGhleSBoYXZlbiBhIGNsdWUgd2hhdCB0aGV5IHRhbGtpbmcgYWJvdXQuClRvIHBhcmFwaHJhc2UsIGl0IHBhdGVudGVkIGEgc3lzdGVtIHRvIHN0b3JlIGluZm9ybWF0aW9uIGFib3V0IHByb2R1Y3RzIGluIGEgY29udGFpbmluZyBhcmVhIGZvciBsYXRlciBjaGVja291dCBhY3Jvc3Mgd2ViIHBhZ2VzLiBUaGVyZSB3ZXJlIG5vIHRlY2huaWNhbCBkZXRhaWxzIGluIHRoZSBwYXRlbnQgYXQgYWxsLi4gCk15IHNjaG9vbCBwcm92aWRlcyBmcmVlIGJyZWFrZmFzdCBhbmQgbHVuY2ggZm9yIGFyZSBzdHVkZW50cy4gCk9uIGFuIG91dGRvb3IgYmVkIHdlIGVuam95ZWQgREZLLCBjYXJlc3NpbmcsIDE1IG1pbiB0ZWFzaW5nIERBVFkgd2l0aCBoZXIgaW50ZW5zZSBPLCBCQkJKLCBjb3cgZ2lybCwgbWlzc2lvbmFyeSwgYXQgMzAgbWluIG1hcmssIGRvZ2dpZSBhbmQgaGVyIHBsYXlpbmcgd2l0aCBteSBkaWNrLiAKSSBsaXZlIGluIGEgY29ybmVyIHVuaXQgd2l0aCBzdXBlciB0aGluIHdhbGxzLiBOZWlnaGJvciBvbiBvbmUgc2lkZSBpcyBhbiBvYmVzZSBkdWRlIHdobyB3b3JrcyBuaWdodHMsIGJ1dCBhcHBhcmVudGx5IGZvcmdldHMgdGhhdCBmYWN0IGV2ZXJ5IG5pZ2h0IGFzIGFib3V0IHRoZSB0aW1lIEkgZ29pbmcgdG8gYmVkIEkgaGVhciB0aGUgbG91ZCB0aHVuayBvZiBoaXMgcmVjbGluZXIgYmVpbmcgcHV0IGRvd24gYW5kIGhpbSBzdG9tcGluZyBhcm91bmQgaGlzIGFwYXJ0bWVudCBmb3IgdHdvIG1pbnV0ZXMgYmVmb3JlIGhlIHNsYW1zIGhpcyBkb29yIG9uIHRoZSB3YXkgb3V0LiBUaGUgbGFkeSBvbiB0aGUgb3RoZXIgc2lkZSBvZiBtZSBjYWNrbGVzIGluc3RlYWQgb2YgbGF1Z2hzIGFuZCByZWNlbnRseSBnb3QgYSBuZXcgc291bmQgc3lzdGVtIHRoYXQgZmFjZXMgb3VyIHNoYXJlZCB3YWxsLiBBbGwgZXZlbmluZyBhbmQgZXZlcnkgd2Vla2VuZCBmcm9tIHRoZSBtb21lbnQgc2hlIHdhbGtzIGluIHRoZSBkb29yIHRpbGwgc2hlIGdvZXMgdG8gYmVkIEkgY2FuIGhlYXIgaGVyIHNoaXR0eSB0YXN0eSBpbiBUViBhbmQgbW92aWVzLiBUaGUgZ3V5IGFib3ZlIG1lIGhlZWwgc3RyaWtlcyBpbnN0ZWFkIG9mIHdhbGtzLCBjb25zdGFudGx5IHBhY2VzIGFyb3VuZCBoaXMgYXBhcnRtZW50IGFuZCBieSB0aGUgc291bmRzIG9mIGl0IGhhcyBzdGFydGVkIHRha2luZyBsaW5lIGRhbmNlIGxlc3NvbnMuIE15IGZhbWlseSBoYXMgbm8gY2x1ZS4gSXQgaGVscHMgdGhhdCBJIGxpdmUgYSBmZXcgaG91cnMgYXdheSBhbmQgSSB0YWxrIHRvIG15IHBhcmVudHMgb25jZSBhIHdlZWssIG1heC4KRWRpdDogQSBjb3VudGVyIGV4YW1wbGUgbWlnaHQgYmUgc29tZXdoZXJlIGxpa2UgUm9tZSwgd2hlcmUgdGhlcmUgaXMgZXZlbiBtb3JlIGRlcHRoIGFuZCBsYXllcnMgb2YgaGlzdG9yeSwgYnV0IGluc3RlYWQgb2YgdGhvc2UgbGF5ZXJzIGJlaW5nIGR5bmFtaWMgYW5kIHN0aWxsIGFsaXZlIGFuZCBzdGlsbCB0aGVyZSB0byBleHBsb3JlIGFuZCBkaXNjb3ZlciwgdGhleSBhcmUgc21vdGhlcmVkIGJ5IGEgdGhpY2sgc2x1ZGdlIG9mIHRvdXJpc20sIHRvIHRoZSBwb2ludCB3aGVyZSB0aGUgY2l0eSBpcyBhbGwgYnV0IGxvc3QgYmVuZWF0aCBpdHMgY29tcGxldGUgc3VibWlzc2lvbiB0byB0aGUgc2luZ3VsYXIgcHVycG9zZSBvZiB0b3VyaXNtIGF0IGFuIG92ZXJwb3dlcmluZyBzY2FsZS4gV2hlbiB5b3UgZXhwbG9yZSBSb21lIHlvdSBhcmUgbm90IGV4cGxvcmluZyBhbiBhbmNpZW50IGJ1dCBsaXZpbmcgY2l0eSwgeW91IGFyZSBiZWluZyB3YXNoZWQgdGhyb3VnaCB0aGUgc3RyZWV0cyBieSByaXZlcnMgb2YgdG91cmlzbS4gVGhlIGNpdHkgYmVuZWF0aCB0aGUgc3VyZmFjZSBoYXMgYmVlbiBsb3N0LgpPa2F5IHRoaXMgaXMgYWxsIG5vdCBqdXN0IGNvaW5jaWRlbmNlcyBhbnltb3JlLiBUaGUgc2hyZWRkZXIgY29tcGFueSBzaG93aW5nIHVwIHJpZ2h0IGFzIFNldW5ncmkgd2FzIHRhbGtpbmcgd2l0aCBwb2xpY2Ugd2FzIGFscmVhZHkgc2hhZHkgZW5vdWdoLCBidXQgaXQgY291bGQgaGF2ZSBqdXN0IGJlZW4gYW4gaWxsIHRpbWVkIGNvaW5jaWRlbmNlLiAKRlJFU0ggSEVSQlMuIFJvdWdobHkgY2hvcCBhbnkgZnJlc2ggaGVyYiBhbmQgcHV0IGFib3V0IDEgdGFibGVzcG9vbiBvZiBpdCBpbiBlYWNoIGNvbnRhaW5lciBvZiBhbiBpY2UgY3ViZSB0cmF5LiBUaGVuIGZpbGwgdXAgdGhlIHNlY3Rpb25zIHdpdGggYSBsaXR0bGUgYnJvdGgsIHdhdGVyIG9yIG9saXZlIG9pbCwgYW5kIGZyZWV6ZS4gT25jZSB0aGUgaGVyYnkgaWNlIGN1YmVzIGFyZSBmcm96ZW4sIHRyYW5zZmVyIHRoZW0gdG8gYSBiYWcsIHNlYWwgd2VsbCwgbGFiZWwgYW5kIHBvcCB0aGVtIGJhY2sgaW50byB0aGUgZnJlZXplci4gRGVmcm9zdCBiZWZvcmUgdXNpbmcsIHVubGVzcyB5b3UgYXJlIHRocm93aW5nIG9uZSBpbnRvIGEgc291cCBvciBzdGV3LiBUaGV5IHdpbGwgbm90IGJlIGFibGUgdG8gYmUgdXNlZCBhcyBhIGdhcm5pc2gsIGFzIHRoZWlyIHRleHR1cmUgd2lsbCBiZSBhZmZlY3RlZCwgYnV0IHRoZXkgY2FuIGJlIHVzZWQgaW4gZHJlc3NpbmdzLCBtYXJpbmFkZXMgYW5kIHN1Y2guCkhlIHdhcyBhc3R1dGUsIHJhcGFjaW91cywgbXVjaCBtb3JlIHNpbmlzdGVyIHRoYW4gdGhlIG11cmRlcmVkIEdhdmVzdG9uIGFuZCBpbnRlbnQgb24gdGVhcmluZyB0aGUgY291cGxlIGFwYXJ0LiBUaGUgS2luZyBoYWQgbmV2ZXIgZm9yZ2l2ZW4gdGhlIGJhcm9ucyBmb3IgdGhlIGRlYXRoIG9mIEdhdmVzdG9uIGFuZCBpbmZsdWVuY2VkIGJ5IGRlIFNwZW5jZXIgaGUgbGV0IGxvb3NlIGEgYmxvb2RiYXRoIGFjcm9zcyBFbmdsYW5kLgpZb3UnbGwgYmUgc3VycHJpc2VkIGhvdyBtYW55IG9mIHlvdXIgb3Bwb25lbnRzIHR1cm4gb3V0IHRvIGJlIGJvbmEgZmlkZSBpZGlvdHMuLiAKVHJ1bXAgaXMgYWN0aXZlbHkganVpY2luZyB0aGUgZWNvbm9teSBmb3Igc2hvcnQgdGVybSBnYWlucy4gVGhpcyB3YXMgaGlzIGNhbXBhaWduIHByb21pc2UgYW5kIGhpcyBmaXJzdCBhY3RzIGluIG9mZmljZSwgYW5kIGl0IHNob3dpbmcgdGhyb3VnaCBpbmNyZWFzZWQgZ3Jvd3RoIGFuZCBlY29ub21pYyBhY3Rpdml0eS4gV2UgYXJlIGV4dHJlbWVseSBsdWNreSBwb2xpdGljYWxseSwgYXMgYSBjb3VudHJ5LCB0aGF0IGhlIHN1Y2ggYW4gdXR0ZXIgaWRpb3QgYW5kIGJ1ZmZvb24uIApBZnRlciBJIHJlbW92ZSB0aGUgaWNlIHBhY2sgSSB1c2UgYSBkZWVwIHBvcmUgY2xlYW5zZXIgbG90aW9uLiAKIkFudGkgU2VtaXRpc20gaXMgYSBoYXRlZnVsIGFuZCBkYW5nZXJvdXMgaWRlb2xvZ3kgd2hpY2ggbXVzdCBiZSB2aWdvcm91c2x5IG9wcG9zZWQgaW4gdGhlIFVuaXRlZCBTdGF0ZXMgYW5kIGFyb3VuZCB0aGUgd29ybGQuIFdlIG11c3Qgbm90LCBob3dldmVyLCBlcXVhdGUgYW50aSBTZW1pdGlzbSB3aXRoIGxlZ2l0aW1hdGUgY3JpdGljaXNtIG9mIHRoZSByaWdodCB3aW5nLCBOZXRhbnlhaHUgZ292ZXJubWVudCBpbiBJc3JhZWwuIApHaXZlbiB0aGUgbGVuZ3RoIG9mIHRoZXNlIHdhcnMgYWxyZWFkeSwgeW91IHdvdWxkIHRoaW5rIHRoZSBhZG1pbmlzdHJhdGlvbiBhbmQgdGhlIG1pbGl0YXJ5IGNvdWxkIGFjdHVhbGx5IGZpZ3VyZSBvdXQgaG93IG11Y2ggdGhleSBuZWVkIHRvIHNwZW5kLiAKT25lIG1vbnRoIHRoZSB0ZW5hbnQgdGVsbHMgeW91IHNoZSBpcyB3YWl0aW5nIGZvciBoZXIgbmV4dCBwYXkgY2hlY2ssIHNvIHlvdSBzYXkgb2theS4gClByb3BlcnRpZXMgcmFua2VkIHVzaW5nIGV4Y2x1c2l2ZSBUcmlwQWR2aXNvciBkYXRhLCBpbmNsdWRpbmcgdHJhdmVsbGVyIHJhdGluZ3MsIGNvbmZpcm1lZCBhdmFpbGFiaWxpdHkgZnJvbSBvdXIgcGFydG5lcnMsIHByaWNlcywgYm9va2luZyBwb3B1bGFyaXR5LCBsb2NhdGlvbiBhbmQgcGVyc29uYWwgdXNlciBwcmVmZXJlbmNlcy4KSSBiZWVuIHRyYWluaW5nIHJlYWxseSBoYXJkLCBhbmQgc29tZWhvdyBubyBtYXR0ZXIgaG93IGZpdCBJIGFtIEkgbWFuYWdlIHRvIGFwcGx5IHNvbWV0aGluZyBtb3JlIGV2ZXJ5IHllYXIuIEkgZmlybWx5IGJlbGlldmUgdGhhdCB0aGVyZSBpc24gYW55Ym9keSBlbHNlIHdobyBkb2VzIGFzIG11Y2ggdHJhaW5pbmcgYXMgSSBkby4gCkkgcmVtZW1iZXIgb25jZSBiZWluZyBzdG9wcGVkIGJ5IHR3byBJdGFsaWFuIHBvbGljZSBwYXRyb2wgY2FycyBpbiB0aGUgZGVhZCBvZiBuaWdodCB3aGVuIHdlbGwgb3ZlciB0aGUgbGltaXQuIEluc3RlYWQgb2YgdGhlbSBicmVhdGhhbHlzaW5nIG1lLCB3ZSBzdGFydGVkIHRvIGhhdmUgYSBkaXNjdXNzaW9uIGFib3V0IHRoZSBNdXNzb2xpbmkgYmlvZ3JhcGh5IEkgaGFkIHdyaXR0ZW4uICdNdXNzb2xpbmkgd2FzIGEgdmVyeSBtaXN1bmRlcnN0b29kIG1hbiwnIEkgYXNzdXJlZCB0aGUgSXRhbGlhbiBwb2xpY2UuIApMYSBnZWxvdG9waGlsbGlzIG4gcGV1dCB0cmUgcGFzIGxlIGNoYW52cmUsIG1haXMgYXUgbW9pbnMgYSB0IGVsbGUgbGUgbXJpdGUgZGUgbm91cyBlbXBvcnRlciBsb2luIGRlcyBwaXRveWFibGVzIGpybWlhZGVzIGRlIGNldCBpbnN1cHBvcnRhYmxlIEJhdWRlbGFpcmUgbW9yYWxpc2F0ZXVyLi4gCllvdSBub3QgdGhlcmUgbG9uZyBhbmQgYXJlIGRydW5rIG1vc3Qgb2YgdGhlIHRpbWUpIHlvdSB3b24gbm90aWNlIHRoZSBzZXJ2aWNlIG9yIHF1YWxpdHkgaXNzdWVzIHdpdGggdGhlIHN0YWZmIHRoZXkgc2hpcCBpbiBldmVyeSA2IG1vbnRocy4gCkkgd29yayBhdCBhbiB1cHNjYWxlIDQgc3RhciBzcGEgYW5kIGRpZCBhbiBBTUEgb24gdGhpcyBhIHdoaWxlIGJhY2suCk1yIEZpZWxkIGNhbGxlZCBvbiB0aGUgR292ZXJubWVudCB0byByZWxlYXNlIHZlbnVlIGJ5IHZlbnVlIHN0YXRpc3RpY3MgbW9udGhseS4gCk9uIHRoZSBvdGhlciBoYW5kLCBzb21lIHBlb3BsZSBoYXZlIG9ic2VydmVkIHRoYXQgbGl2ZSBwb2tlciByb29tcyBoYXZlIGEgcHJlZG9taW5hbnQgbnVtYmVyIG9mIG9sZGVyIHBlb3BsZS4gTWF5YmUsIHRoZXNlIGxpdmUgcG9rZXIgcGxheWVycyBjYW5ub3QgZ2V0IHRoZW1zZWx2ZXMgb25saW5lIHByaW1hcmlseSBiZWNhdXNlIHRoZXkgZG8gbm90IGhhdmUgdGhlIG1lYW5zIHRvIGRvIHNvLiBPciBtYXliZSB0aGV5IGFyZSB0b28gb2xkIGFuZCByaWNoIHRvIGdhbWJsZSBtb3JlIGFuZCBzbyBwbGF5aW5nIGxpdmUgcG9rZXIgZ2FtZXMgYXJlIGp1c3QgdGhlaXIgd2F5IG9mIHJlbGF4aW5nIGFuZCBoYXZpbmcgZnVuLgpIZXJlJ3MgYSBiaWcgb25lLiBUaGlzIG9uZSByZXF1aXJlcyBzb21lIHRpbWUgYW5kIGEgZ3JlYXQgZGVhbCBvZiBvcGVuIGVuZGVkIHF1ZXN0aW9ucyBhbmQga2VlcGluZyB5b3VyIG1vdXRoIHNodXQgc28gdGhhdCB0aGV5IGNhbiB0YWxrLiBUaGlzIGlzIHdoZXJlIHRoZSBtb3RpdmF0aW9uIHVzdWFsbHkgYmVjb21lcyBhcHBhcmVudC4gU29tZXRpbWVzIHRoZSBzZWxsZXIgd2lsbCBiZSBoZXNpdGFudCBhbmQgb25seSB0ZWxsIHlvdSB0aGV5IGFyZSBtb3ZpbmcuIERvbid0IGxlYXZlIGl0IGF0IHRoYXQuIEFzayB0aGVtIHdoeSB0aGV5IGFyZSBtb3Zpbmc/ClRoZWlyIGJhdHRsZSBvbiB0aGUgYm9hcmQgd2FzIGludGVycnVwdGVkLCBob3dldmVyLCB3aGVuIEJhcmJlciB3YXMgcmVxdWlyZWQgdG8gZ28gb3V0IGFuZCBiYXQuIApBZGRlZCB3aXRoIHRoaXMgY2FzZSwgSSBoYXZlIGlzIHRoZSB2aXNpb25zIHRoYXQgSSBoYXZlIHJlY2VpdmVkIHdpdGggbm8gc3BlY2lmaWMgY29vcmRpbmF0ZXMuIApUaGVuIGNvbWVzIERvbmFsZCBUcnVtcC4gCjIrMiBpcyBhIHN1cGVyIHZhbHVhYmxlIHJlc291cmNlLiBJIGtub3cgaXQgc2VlbXMgb3ZlcndoZWxtaW5nIGJ1dCBpZiB5b3Ugc3RhcnQgYnkgcmVhZGluZyBhbGwgdGhlIHN0aWNraWVkIHRocmVhZHMgYXQgdGhlIHRvcCBvZiBlYWNoIGZvcnVtIHlvdSBnZXQgdGhlIGhhbmcgb2YgdGhlIGphcmdvbiBwcmV0dHkgcXVpY2tseS4KVGhlIGdhbWUgaXMgc2V0IGluIGEgdmFzdC4gCk9IIEhFWSwgSSB0aGluayBJIGtub3cgdGhpcyBvbmUuIFRoZXJlIGlzIGEgdGhpbmcgY2FsbGVkIG9waW9pZCBpbmR1Y2VkIGFuZHJvZ2VuIGRlZmljaWVuY3kuIApCdXQgaXQgaXMgYSBzY2VuYXJpbyB0aGF0IGxvb2tzIGluY3JlYXNpbmdseSBsZXNzIGEgZ2FtYmxlIGFuZCBtb3JlIGFuIGluZXZpdGFiaWxpdHkuIE1hZHJpZCBhbHJlYWR5IHByb3ZlZCB0aGF0IHRoZXkgd2lsbCBub3QgYmx1ZmYgd2hlbiB0aGV5IHNpZ25lZCBvZmYgb24gc2VsbGluZyBSb25hbGRvLiBJZiB0aGluZ3MgZG8gbm90IGdvIEJhbGUgd2F5IHRoaXMgd2Vla2VuZCwgaGlzIHNpeCB5ZWFyIHN0YXkgd2l0aCBMb3MgQmxhbmNvcyBtYXkgZm9sZC4KTWNHb3dhbiwgd2hvIHJlbWFpbnMgamFpbGVkLCBpcyB0byByZXR1cm4gdG8gQm9yY2hhcmQncyBjb3VydHJvb20gaW4gYSB3ZWVrLgpJbiAxOTk0LCB0aGUgTWlrZSBEb3VnaHR5IGxlZCBOZXcgWW9yayBiYW5kIFNvdWwgQ291Z2hpbmcgcmVsZWFzZWQgdGhlaXIgZGVidXQgYWxidW0sIFJ1YnkgVnJvb20sIGVzdGFibGlzaGluZyB0aGVtIGFzIG9uZSBvZiB0aGUgcXVpcmtpZXN0IGFuZCBtb3N0IGluc3RhbnRseSByZWNvZ25pemFibGUgYmFuZHMgaW4gJzkwcyBhbHRlcm5hdGl2ZSBtdXNpYywgYmxlbmRpbmcgcm9jaywgaGlwIGhvcCwgamF6eiwgYW5kIG1vcmUuIERvdWdodHkgaXMgb24gdGhlIHJvYWQgcGxheWluZyBzaG93cyBpbiBob25vciBvZiB0aGUgYWxidW0ncyAyNXRoIGFubml2ZXJzYXJ5LCBhbmQgaXQncyBubyBzdXJwcmlzZSBoZSBtYWRlIHN1cmUgdG8gdmlzaXQgTWlubmVhcG9saXMgZm9yIHR3byBzaG93czsgaGUgaGFzIGFuIGVzcGVjaWFsbHkgc29saWQgZmFuIGJhc2UgaGVyZSwgYW5kIGhlJ3MgcmVjb3JkZWQgYm90aCBzdHVkaW8gYW5kIGxpdmUgYWxidW1zIGluIHRoZSBjaXR5LiAKSSBlZGl0IGl0IGFuZCBzZW5kIGl0IGJhY2ssIHNoZSBzYXlzIG9rLCBidXQgdGhlcmVzIGEgbmljZSBwb2VtIHRoYXQgbm90IHJlYWxseSByZWxpZ2lvdXMgYnV0IEkgbG92ZSB0byByZWFkIGl0IGF0IGNlcmVtb25pZXMgY2FsbGVkIGluIHRoZSBzYW5kIENhbiB3ZSBhZGQgdGhhdC4gCkV2ZW4gaWYgeW91IGNvb2tpbmcgb3RoZXIgZm9vZHMsIHlvdSBjYW4gdGFrZSBhd2F5IHNvbWUgb2YgdGhlIHRlY2huaXF1ZXMgYW5kIGV4cGVyaW1lbnQuIFRoZSBrZXkgaW4gbW9zdCBjYXNlcyBpcyB0aGUgbGF5ZXJpbmcgYW5kIGFkZGluZyBtZWFzdXJlZCAodmVyeSBsaW1pdGVkKSBxdWFudGl0aWVzIG9mIHdhdGVyLgpCYXNlYmFsbCBpcyBuZXZlciBib3JpbmcgaW4gdGhlIGJsZWFjaGVycy4gSnVzdCBhc2sgdGhlIFJlZCBTb3ggcGxheWVycyB3aG8gYXJlIG91dCB0aGVyZS4gYmxlYWNoZXJzIGFyZSBmdW4sIHNheXMgU294IHJlbGlldmVyIEpvZSBLZWxseS4gcHJvYmFibHkgdGhlIG1vc3QgZnVuIGdyb3VwIGluIHRoZSBzdGFkaXVtLiBJdCBraW5kIG9mIGxpa2UgYSBwYXJ0eSBvdXQgdGhlcmUuIEJ1dCBJIHRoaW5rIHRoZXkgYXJlIHRoZSBtb3N0IGtub3dsZWRnZWFibGUgb2YgZmFucyBhbmQgdGhlIG1vc3QgaW50ZW5zZS4gSSBhIGJpZyBmYW4gb2YgdGhlbS4gUmVkIFNveCBwaXRjaGluZyBjb2FjaCBEYW5hIExlVmFuZ2llIGhhcyBzZWVuIGl0IGFsbCBpbiB0aGUgYmxlYWNoZXJzIHNpbmNlIGJlY29taW5nIGJ1bGxwZW4gY2F0Y2hlciBpbiAxOTk3LiBIZSByZW1lbWJlcnMgTGl0ZXJhY3kgTmlnaHQgaW4gMjAwMSB3aGVyZSBmYW5zIHJlY2VpdmVkIGEgcG9zdGVyIG9mIFNveCBwaXRjaGVyIERlcmVrIExvd2UuIEJ1dCBpbiB0aGUgOXRoIGlubmluZyB0aGF0IG5pZ2h0IExvd2UgYmxldyB0aGUgc2F2ZS4gV2hlbiBMZVZhbmdpZSBodXJyaWVkbHkgZ3JhYmJlZCBoaXMgbWl0dCB0byB3YXJtIHVwIFJvZCBCZWNrIHRoZXkgd2VyZSBib3RoIGJvbWJhcmRlZC4geW91IGtub3cgaXQgdGhlcmUgc2VlbWVkIGxpa2UgMTAwMCBhaXJwbGFuZXMgY2FtZSBkb3duIGF0IHVzIGFuZCB0aGV5IHdlcmUgYmlnIGFuZCB0aGV5IHdlcmUgbGFuZGluZyBvbiB0aGUgZmllbGQgYW5kIHN0aWNraW5nIGluLiBJdCB3YXMgbGlrZSB0aGUgRCBEYXkgaW52YXNpb24sIHNheXMgTGVWYW5naWUuIE5vdyB0aGVyZSBtb3JlIGZhbWlsaWVzLCBiZXR0ZXIgc2VjdXJpdHksIGFuZCB0aGUgcGxheWVycyBhcmUgZmFuIGZyaWVuZGx5LiBUaGV5IGdpdmUgdGhlIGtpZHMgZ3VtLCBzdW5mbG93ZXIgc2VlZHMgYW5kIGJhc2ViYWxscy4gdHJ5aW5nIHRvIGdldCB0aGVtIG9uIG91ciBzaWRlLCBoZSBzYXlzLiAgIGJ5IFN0YW4gR3Jvc3NmZWxkL0dsb2JlIFN0YWZmICgyOCBwaG90b3MgdG90YWwpCllhaG9vIFVLIE5ld3MgVmlkZW8yMSBob3VycyBhZ28KTW9zdCB3b3JrZXJzIHRoZXJlIHdlcmUgbWFraW5nICQxLDAwMCAkMSwyMDAgYSB5ZWFyICgkODAwICQxLDAwMCBpZiB0aGUgd29ya2VyIHdhcyBhIHdvbWFuLCBhbmQgYWJvdXQgaGFsZiBvZiB0aGVtIHdlcmUpIGZvciA1MCsgaG91cnMgb2YgbGFib3IgcGVyIHdlZWsuIApUaGlzIHdhcyBhIERJWSBidWlsZCBzbyBhYm91dCAkNDAgZm9yIHRoZSB3b29kLCBzY3Jld3MgYW5kIEwgYnJhY2tldHMuIApUaGUgc2Nob29sIGlzIGV4dHJlbWVseSBleHBlbnNpdmUgd2hlcmUgSSBhbSBsb2NhdGVkIGFuZCB5b3UgcmVxdWlyZSBhIGh1Z2UgIG9mIGhvdXJzIHRvIHF1YWxpZnkgYXMgYW4gUk1UIGluIG15IGNvdW50cnksIGFuZCBpbiB0aGUgZW5kIG9mIGl0IGFsbCwgdGhlIHBheSBpcyBqdXN0IHRoZXJhcHkgaXMgbGl0dGVyZWQgd2l0aCBwc2V1ZG8gc2NpZW5jZSwgYnV0IGtlZXAgaW4gbWluZCB0aGF0IHlvdXIgd29yayBpcyB0byByZWxpZXZlIHRlbnNpb24gYW5kIGhlbHAgcGVvcGxlIHJlbGF4LiAKQmVlZiB0b25ndWUgdGFjbyBhdCBDaGlsYWNhdGVzLiBLYXlhbmEgU3p5bWN6YWsgZm9yIHRoZSBCb3N0b24gR2xvYmVDaGlsYWNhdGVzIGZpcnN0IG9wZW5lZCBpbiBKYW1haWNhIFBsYWluIGluIDIwMTUsIGFuZCBwcm92ZWQgc28gcG9wdWxhciB0aGF0IGFub3RoZXIgbG9jYXRpb24gd2FzIGFkZGVkIHRvIHRoZSBuZWlnaGJvcmhvb2QgaW4gMjAxNy4gVGhlIHRpbnkgdHdpbiB0YXF1ZXJpYXMgY2FuIGNoYWxrIHVwIHRoYXQgc3VjY2VzcyB0byB0aGVpciBzaW1wbGUgYnV0IGRlbGljaW91cyB0YWNvcyB0aGF0IGNvbWUgb24gaG9tZW1hZGUgY29ybiB0b3J0aWxsYXMgYW5kIGFyZSBmaWxsZWQgd2l0aCBjaGlwb3RsZSBzaW1tZXJlZCBjaGlja2VuIHRpbmdhLCBzd2VldCBhbmQgc2F2b3J5IGFsIHBhc3Rvciwgb3IgZmxhdm9yIHBhY2tlZCBwYXBhcyBjb24gY2hvcml6by4gClByb3NlY3V0b3JzIHNob3dlZCBqdXJvcnMgYW4gQXByaWwgMjAxNSBlbWFpbCBleGNoYW5nZSBiZXR3ZWVuIE1hbmFmb3J0IGFuZCBHYXRlcyBkaXNjdXNzaW5nIGhpZ2hlciB0aGFuIGFudGljaXBhdGVkIHRheGVzLCB3aGljaCBHYXRlcyBzYWlkIHN1Y2NpbmN0bHkgc3VtbWFyaXplZCB0aGUgZnJ1c3RyYXRpb24gZmVsdCBieSBNYW5hZm9ydC4KRm9yIHlvdXIgcGFydHkgdHJhdmVsaW5nIHRocm91Z2ggdGhlIGZvcmVzdCB5b3UgY291bGQgY2hhbmdlIHRoZSB3aW5kbWlsbCB0byBzb21ldGhpbmcgbGlrZSBhIHdhdGVybWlsbCBvbiBhIG1lZGl1bSBzaXplZCBzdHJlYW0gKD8pLCBhIGZvcmVzdCB3YXJkZW4gaG9tZSwgYSBzaGFjayBidWlsdCBieSB0aGUgbGVzcyB1bmZvcnR1bmF0ZSwgZXRjLiBUaGUgYWJkdWN0b3JzIGNvdWxkIGJlIGh1bWFuIG9yIG1vbnN0cm91cyAoZ29ibGlucywgb3Jjcywga2Vua3UsIHdoYXRldmVyIGVsc2UgZml0cykgYW5kIHRhY3RpY3MgY291bGQgaW52b2x2ZSBoaWRpbmcgYmVoaW5kIHRyZWVzLCBhdHRhY2tpbmcgZnJvbSB0aGUgZnJvbnQgYW5kIGJhY2ssIGhhdmluZyBhcmNoZXJzIHBsYWNlZCBpbiB0cmVlcywgYSBmaWdodGluZyByZXRyZWF0IChhY3Jvc3MgYSBzdHJlYW0gb3ZlciBhIGZhbGxlbiBsb2c/KSB3aXRoIGEgY291cGxlIG9mIGVuZW1pZXMgYmxvY2tpbmcgYWNjZXNzIHRvIHRoZSBtYWluIGdyb3VwIHdpdGggdGhlIGRvZGdlIGFjdGlvbi4KV2Ugd2VudCB3aXRoIHR3byB0ZWVuYWdlIGdpcmxzIGFuZCBiZWNhdXNlICd0aGUgYWN0aW9uL3Nob3BzJyBzbyBjbG9zZSAgIHdlIGRpZG4ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IHRoZW0uIApLd2FtZSBLaWxwYXRyaWNrIFNlbnRlbmNlZCBUbyAyOCBZZWFycwpEaWUgZ3J0ZW4gR2VnbmVyIGVpbmVyIENhcmJvbnRheCBpbiBsZXR6dGVyIFplaXQgc2luZCBkaWUgTGlua2VuIHVtIFNhbmRlcnMgdW5kIEFPQy4gCkV2ZW4gdGhvdWdoIG15IEZpZG8gcGhvbmUgKG9uIHRoZSBSb2dlcnMgbmV0d29yaykgZHJvcHMgdG8gM0cgaW4gc29tZSBhcmVhcywgdGhlIHNhdmluZ3MgbWFrZSBpdCB3b3J0aCBub3Qgc3dpdGNoaW5nLiBJIGhhZCB0cmllZCB0byBzd2l0Y2ggbXkgcGVyc29uYWwgcGhvbmUgdG8gVGVsdXMgd2hlbiBteSBjb21wYW55IGhhZCBhIHNpZ25pZmljYW50IGRpc2NvdW50IGJ1dCBldmVuIHRoZSBjb21taXNzaW9uZWQgY29ycG9yYXRlIHNhbGVzIHJlcCB0b2xkIG1lIEkgd2FzIGJldHRlciBvZmYgc3RheWluZyB3aXRoIEZpZG8gcHJpY2V3aXNlIGJlY2F1c2UgdGhleSBjb3VsZG4ndCBiZWF0IHdoYXQgSSB3YXMgcGF5aW5nIGZvciA0R0Igb2YgZGF0YS4gCkZpbG0gc29tZSBzZXRzIGZyb20gZGlyZWN0bHkgaW4gZnJvbnQgb3IgYmVoaW5kIHlvdSB0byBzZWUgaWYgeW91ciBoaXBzIGFyZSBzbGlkaW5nIHRvIHRoZSBsZWZ0IGFzIHdlbGwgd2hlbiB5b3UgYXNjZW5kLiAxIHBvaW50ICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ29JIGhhdmUgYmVlbiBkZWFsaW5nIHdpdGgga25lZSBwYWluIHRoZSBsYXN0IGNvdXBsZSBvZiB3ZWVrcy4gCkhlIGJhbmRzIHRoZSBvcmNoYXJkcyB0aGF0IG1vdmVkIHRoZSBvbGl2ZXMgYW5kIGNhbnZhc2VkIHRoZSBwbGFudGluZywgY3VsdGl2YXRpbmcgYW5kIGhhcnZlc3RpbmcgdGFjdGljcy4gCklmIEkgaGFwcGVuZWQgdG8gYmUgd2Fsa2luZyBieSBvbmUgb2YgdGhlIGJlbmNoZXMgYW5kIG15IHBob25lIG5lZWRlZCBhIGNoYXJnZSBhbmQgSSB3YXMgY2FycnlpbmcgYSBwb3dlciBjb3JkIGFuZCBJIGhhZCB0aW1lIHRvIHNpdCBvbiBhIGJlbmNoIGFuZCB3YWl0LCBJJ2QgdXNlIGl0IGFnYWluLi4gClRoaW5rIDE4IGthcmF0cy4gCkFsbCB0aGVzZSBkb3dudm90ZXJzIGRvd252b3RlZCBtZSBiZWNhdXNlIHRoZXkgZG93bnZvdGUgYW55dGhpbmcgSSB3cml0ZSwgbm90IGZvciBhbnkgZ29vZCByZWFzb24uIFRoZXkganVzdCB3YW50IHRvIGFyZ3VlIHRvIHRoZSBsYXN0IGJpdCwgZXZlbiBpZiBpdCBhIG5vbiBpc3N1ZSwganVzdCB0byBzaG93IG1lIHVwIGFuZCB0byBtYWtlIGl0IGxvb2sgbGlrZSB0aGF0IEkgYW0gd3JvbmcsIG9uY2UgYWdhaW4gICBvciB0aGV5IGxpa2UgdG8gc2F5LCAic3ByZWFkaW5nIGxpZXMiLCBldGMgZXRjLi4gCk5vIG1hdHRlciB3aGF0IHlvdXIgdG9waWMgaXMgdG9tb3Jyb3cgbmV3cywgeWVzdGVyZGF5IHRyZW5kcyBvciBob3cgdG8gcGxheSB0aGUgYmVzdCBvbmxpbmUgdmlkZW8gcG9rZXIgZ2FtZXMgYXQgUmVkIEZsdXNoIG9ubGluZSBjYXNpbm8geW91IG5lZWQgdG8gcHVibGlzaCB5b3VyIGNvbnRhY3QgZGV0YWlscyBvbiB5b3VyIHdlYnNpdGUuIEJ1dCBpdCBub3QgZW5vdWdoIHRvIHB1Ymxpc2ggeW91ciBjb250YWN0IGRldGFpbHMgeW91IG5lZWQgdG8gbWFrZSBzdXJlIHRoZXkgYXJlIGNvcnJlY3QsIHNvIHRoYXQgeW91IHdvbiBtaXNzIGFueSBvcHBvcnR1bml0aWVzIHRoYXQgY29tZSBrbm9ja2luZyBhdCB5b3VyIGRvb3IuIEJ1dCBtYW55IHdlYnNpdGUgb3duZXJzIGZhaWwgdG8ga2VlcCB0aGVpciBjb250YWN0IGRldGFpbHMgaW4gYSBnb29kIGNvbmRpdGlvbiBhbmQgdGhleSBtaXNzIG91dC4uIApSaWdodCBub3csIGR1ZSB0byBnZXR0aW5nIGEgbGFyZ2VyIHRoYW4gSSdtIHVzZWQgdG8gcmVmdW5kLCBteSBkYXlzIG9mIGJ1ZmZlcmluZyBpcyBoaWdoZXIgdGhhbiBteSBBb00gYnkgYWJvdXQgYSB3ZWVrLiBFdmVyeW9uZSBpcyBjb3JyZWN0IHRoYXQgeW91ciBBb00gd2lsbCBnZXQgYmFjayB1cCB0aGVyZSBpZiB5b3Uga2VlcCBnb2luZyB0aGUgd2F5IHlvdSBhcmUgYW5kIHRoaXMgaXMganVzdCBhIHRlbXBvcmFyeSB0aGluZy4uIApOb3cgc3RhcnQga25pdHRpbmcgdGhlIHRyaWFuZ2xlcyBhZnRlciB0aGUgY3VmZiBvdmVyIDE1IHN0cyBmb3IgZWFjaCB0cmlhbmdsZS4gWW91IGtuaXQgbm93IFJTIHJvdyBhbmQgQlMgcm93LiBJbiBHZXJtYW55IHlvdSBrbml0IGluIHJvdW5kcyBvbiBmb3VyIG5lZWRsZXMsIHNvIG9uIGVhY2ggbmVlZGxlIHRoZXJlIGFyZSAxNSBzdHMuCkl0IG5vdCBnb2luZyB0byBjaGFuZ2UgeW91ciBsaWZlIG9yIGFueXRoaW5nLCBidXQgaXQgYW5vdGhlciBtZXRyaWMgdGhhdCB5b3UgY2FuIHVzZSBpbiBjb21iaW5hdGlvbiB3aXRoIG90aGVyIG1ldHJpY3MgdG8ganVkZ2UgcGFjZSwgZWZmb3J0LCByZWNvdmVyeSwgZml0bmVzcyBpbXByb3ZlbWVudHMsIHRyYWluaW5nIGxvYWQsIGV0Yy4gCkxhIGp1c3RpY2UgdGVsbGUgcXUnZWxsZSBlc3QgY29udWUgYWN0dWVsbGVtZW50IGZhdm9yaXNlIGxhIGJhcmJhcmllLiBMYSBwZWluZSBkZSBtb3J0IG4nZXN0IHBldXQgdHJlIHBhcyBkaXNzdWFzaXZlIG1haXMgZWxsZSBwb3NzZGUgbCdhdmFudGFnZSBkYW5zIGNlcnRhaW5zIGNhcyBkJ2Fzc3VyZXIgbGEgc2F1dmVnYXJkZSBkZXMgdml2YW50cy4gCkdlbmVyYWxseSB0aGVzZSBraW5kIG9mIGdhbWVzIGFyZSBiYWQgZm9yIHNpdGVzIHRvIHJ1bi4gVGhlIHJha2Ugb24gdGhlbSBpc24gdGhhdCBtdWNoIGJldHRlciB0aGFuIHJ1bm5pbmcgYSBsb3dlciBzdGFrZSwgdGhlIHRyYW5zYWN0aW9uIGZlZXMgZm9yIHBsYXllcnMgdG8gZ2V0IG1vbmV5IG9uIGFuZCBvZmYgdGhlIHNpdGVzIGFyZSBoaWdoLCB0aGVyZSBhIGhpZ2hlciByaXNrIG9mIGNvbGx1c2lvbiBldGMgc28gdGhleSBhcmUgbW9yZSBleHBlbnNpdmUgdG8gcG9saWNlLgpBbGwgdGhlc2UgcGVvcGxlIHdhbnQgdGhlIHNhbWUgdGhpbmcsIHJlY29nbml0aW9uIGFuZCBtb25leS4gSWYgdGhleSBjYW4gbWFrZSBtb25leSBmcm9tIHRoaXMgZ2FtZSwgdGhleSB3aWxsIGJlIHRoZSBoYXBwaWVzdCBwZXJzb24gaW4gdGhlIHdvcmxkLiAKVGhlIFN3aXRjaCBleGNsdXNpdmUgd2FzIGEgYmVhdXRpZnVsIHRpdGxlIHRoYXQgZGVmaW5pdGVseSB3YXNuJ3QgYWZyYWlkIHRvIHRyeSBuZXcgdGhpbmdzIChldmVuIGlmIHRoZXkgZGlkbid0IGFsd2F5cyB3b3JrKSwgYW5kIGFwcGFyZW50bHksIGl0IHdhcyBzdWNjZXNzZnVsIGVub3VnaCB0byB3YXJyYW50IGEgZm9sbG93IHVwIG9yIHR3by4gClRoZXkgaGF2ZSBsaXR0bGUgY29udHJvbCBvdGhlciB0aGFuIHNvbWUgbWlub3Igd2lnZ2xpbmcuIFNvbWUgc2F5IHRoZXkgbXVzdCBqdXN0IHB1c2ggd2F0ZXIgb3V0IG9mIHRoZWlyIG1vdXRocyBmb3IgZGlyZWN0aW9uICg/Pz8/PykuIFRoZXkgQ09VTEQgdXNlIHRoZWlyIGJhY2sgZmluIEVYQ0VQVCBHVUVTUyBXSEFUIElUIERPRVNOVCBGVUNLSU5HIEdST1cuIEl0IGp1c3QgY29udGludWFsbHkgZm9sZHMgaW4gb24gaXRzZWxmLCBzbyB0aGUgZnJlYWtpbmcgY2VsbHMgYXJlIGJlaW5nIG1hZGUsIHRoaXMgcGllY2Ugb2YgZmxvYXRpbmcgZ2FyYmFnZSBqdXN0IGRvZXNuIHB1dCB0aGVtIHdoZXJlIHRoZXkgbmVlZCB0byBmdWNraW5nIGdvLlNvIHRoZXkgZG9uIGhhdmUgc3dpbSBibGFkZGVycy4gClNob3cgaGVyIHdoYXQgYmVpbmcgbG92ZWQgZmVlbHMgbGlrZS4gTmV2ZXIgZ290IHRoZSBodWdzIGFuZCBraXNzZXMgZnJvbSBteSBtb20gYW5kIGRhZCBhbmQgdGhleSBoYXZlIG5ldmVyIHNhaWQgIkkgbG92ZSB5b3UiLgpTb21lb25lIGlzIGJldHRlciB0aGFuIHRoaXMgZ3V5LCBhbmQgY2FuIGZvbGxvdyBoaXMgdHJhY2tzLgpEZXNwaXRlIHRoZSBzdHJvbmcgc3VwcG9ydCBvZiBHb3Zlcm5vciBQYXR0ZXJzb24sIHRoZSBzYW1lIHNleCBtYXJyaWFnZSBiaWxsIHdhcyB2b3RlZCBkb3duIHllc3RlcmRheSBpbiB0aGUgTmV3IFlvcmsgU2VuYXRlLiBJbnRlcmVzdGluZyBwaWVjZXMgb2YgdGhlIGRlYmF0ZSBpbmNsdWRlZCB0aGUgY2xhaW0gdGhhdCBOZXcgWW9yayBzaG91bGQgbm90IGxlZ2FsaXplIGdheSBtYXJyaWFnZSBiZWNhdXNlIDMxIHN0YXRlcyBhbHJlYWR5IGJhbiBpdC4gVG8gd2hpY2ggRXJpYyBBZGFtcywgYSBCcm9va2x5biBEZW0sIHJlcGxpZWQgdGhlc2Ugd2VyZSB0aGUgc2FtZSBzdGF0ZXMgdGhhdCAiYXQgb25lIHRpbWUgb3IgYW5vdGhlciBzb2xkIGJsYWNrcyBpbnRvIHNsYXZlcnkuIgpCb3hpbmcgaXMgYSBodXJ0IGdhbWUsIGl0IG5vdCBsaWtlIGZvb3RiYWxsIHdoZXJlIHlvdSBsb3NlIDUgMCBvciB0ZW5uaXMgd2hlcmUgeW91IGxvc2UgaW4gdGhyZWUgc2V0cywgaW4gYm94aW5nIHlvdSBnbyBob21lIG9uIGEgc3RyZXRjaGVyLiIuIApHb2xkbWFuIFNhY2hzIGFsc28gdXNlZCB0aGUgQUlHIGJhaWxvdXQgdG8gbWFrZSBzdXJlIHRoZXkgZGlkbiBoYXZlIHRvIHBheSBmb3IgdGhlIHN1YnByaW1lIG1vcnRnYWdlIGNyaXNpcyB0aGF0IHRoZXkgY3JlYXRlZC4gQWNjb3JkaW5nIHRvIHRoZSBHbG9iZSBhbmQgTWFpbCwuIApUaGUgdGVldGggZ3JpdHRpbmcgdGhpbmcgbGVuZHMgbWUgdG8gYmVsaWV2ZSBpdCB3YXMgYXQgbGVhc3QgdG9vIG11Y2ggcHJlc3N1cmUuLiAKVGhpcyBpc3N1ZSB3aWxsIGxpdGVyYWxseSBuZXZlciBiZSBmaXhlZC4gSSBoYXZlbiBzZWVuIGEgc2luZ2xlIGdhbWUgdGhhdCBoYXMgZml4ZWQgaXQuIApUaGV5IGFsc28gc2VyZW5hZGVkIGhpbSB3aXRoIGNob3J1c2VzIG9mICJXZSBEb24ndCBOZWVkIFlvdSEiIGFuZCBvdGhlciBkZXJpc2l2ZSBjaGFudHMgdGhyb3VnaG91dCB0aGUgZ2FtZSwgaW5jbHVkaW5nIGFyb3VuZCBhIHZpZGVvIHRyaWJ1dGUgbWlkd2F5IHRocm91Z2ggdGhlIGZpcnN0IHBlcmlvZC4gVGhlIGZhY2Ugb2YgdGhlIGZyYW5jaGlzZSBmb3IgbmluZSB5ZWFycyBhZnRlciBoZSB3YXMgc2VsZWN0ZWQgTm8uIDEgb3ZlcmFsbCBieSBOZXcgWW9yayBpbiAyMDA5LCBUYXZhcmVzIGluc2lzdGVkIGhlIGFnb25pemVkIG92ZXIgaGlzIGRlY2lzaW9uIHRvIGxlYXZlIGJlZm9yZSBhbm5vdW5jaW5nIGl0IG9uIEp1bHkgMSwgdGhlIGZpcnN0IGRheSBvZiBmcmVlIGFnZW5jeS4KVGhlIGxhdHRlciBhcmUgInRydWx5IHVuaXF1ZSBpbiB0aGUgd29ybGQsIiBhcyBXaWxsaXMgcHV0cyBpdCwgcHJvbWlzaW5nIHNvbWUgb2YgTmV3IFlvcmsncyBtb3N0IGV4dHJhdmFnYW50IGNvbmRvbWluaXVtcyBhbmQgb2ZmaWNlIHNwYWNlcyB1cG9uIHRoZWlyIGRlYnV0cyBvdmVyIHRoZSBuZXh0IGZldyB5ZWFycy4gU3Rlcm4gd2l0aCBTTENFIEFyY2hpdGVjdHMuIENsb3NpbmdzIG9uIHRoZSAxMTYgY29uZG9zIGJlZ2FuIGluIE9jdG9iZXIgb2YgbGFzdCB5ZWFyLCBhbmQgdGhlIDEsMDAwIGZvb3QgdGFsbCB0b3dlciBlbmRlZCAyMDE4IHdpdGggc29tZSBza3kgaGlnaCBzYWxlcy4gU3RpbmcgYW5kIGhpcyB3aWZlIFRydWRpZSBTdHlsZXIsIGFzIHdlbGwgYXMgYmlsbGlvbmFpcmUgRGFuaWVsIE9jaCwgaGF2ZSByZXBvcnRlZGx5IGJvdWdodCBwYWRzLiBBbmQgaXQgd2FzIGNvbmZpcm1lZCBvbiBXZWRuZXNkYXkgdGhhdCBoZWRnZSBmdW5kIENpdGFkZWwncyBmb3VuZGVyIEtlbiBHcmlmZmluIHBhaWQgbW9yZSB0aGFuICQyMzggbWlsbGlvbiBmb3IgYSAyNCwwMDAgc3F1YXJlIGZvb3QgYXBhcnRtZW50IHRoZXJlLiBGb3IgdGhhdCBraW5kIG9mIGNhc2gsIGFjY29yZGluZyB0byB0aGUgV2FsbCBTdHJlZXQgSm91cm5hbCwgcmVzaWRlbnRzIHdpbGwgZ2V0IGEgcHJpdmF0ZSBkaW5pbmcgcm9vbSwgYSBneW0sIGEganVpY2UgYmFyLCBhIGxpYnJhcnksIGEgYmFza2V0YmFsbCBjb3VydCwgYSBnb2xmIHNpbXVsYXRvciBhbmQgYSBjaGlsZHJlbidzIHBsYXkgYXJlYS4KSWYgeW91J3ZlIGJlZW4gYmV0dGluZyBvbiAiRXZlbiIgaW4gcm91bGV0dGUgYW5kIG9kZCBudW1iZXJzIGhhdmUgc2hvd24gdXAgdGVuIHRpbWVzIGluIGEgcm93LCB0aGUgbmV4dCBzcGluIGlzIG5vIG1vcmUgb3IgbGVzcyBsaWtlbHkgdG8gYmUgYW4gZXZlbiBudW1iZXIgdGhhbiBhbnkgb3RoZXIgc3Bpbi4gClNoZSBhIGNvcnBvcmF0ZSBwcm9kdWN0LiAKT2suIFdoYXQgYW0gSSBhY3R1YWxseSBsb29raW5nIGZvciBoZXJlIHRob3VnaD8gUHVsbGluZyBmdXNlcyBhbmQgc2VlIHdoZW4gdGhlIHJhZGlvIGRpZXM/IE9uIHdoaWNoIGZ1c2Ugc2hvdWxkIGl0IGRpZSwgdGhvdWdoPyBJIHNpbXBseSBjb25uZWN0ZWQgdGhlIElTTyAoSVNPIDEwNDg3IGluIGNhc2UgQW1lcmljYW4gY2FycyBkb24gaGF2ZSB0aGUgc3RhbmRhcmRpc2VkIGNhciByYWRpbyBjb25uZWN0b3IgYW5kIHlvdSBoYXZlIG5vIGlkZWEgd2hhdCBJIHRhbGtpbmcgYWJvdXQpIHRvIHRoZSBJU08gU29ueSBjb25uZWN0b3IgYW5kIHBsdWdnZWQgdGhhdCBpbnRvIHRoZSByYWRpby4gSSBub3QgYW4gZXhwZXJ0IGJ1dCBJIGRvbiBzZWUgbXVjaCByb29tIGZvciBlcnJvcnMgaGVyZS4gCkV0IGEgbidlc3QgcGFzIGRlbWFpbiBsYSB2ZWlsbGUgcXVlIGNlcyBnZW5zIGwgcGFydmllbmRyb250ICBtZXN1cmVyIGwnY2FydCBtYWdpc3RyYWwgcXUnaWwgeSBhIGVudHJlIGxhIHBlcmNlcHRpb24gZW5mbGUgcXUnaWxzIG9udCBkJ2V1eCBtbWVzIGV0IGNlIHF1ZSBsZXVyIHRyaXN0ZSBnbyBhIHByb2R1aXQgKGRlIHBvc2l0aWYgcGVuc2VudCBpbHMpIGRhbnMgbm90cmUgc29jaXQuIENhciBlbiB2cml0LCBsZXMgZ3JhbmRzIGhvbW1lcyBzb250IGhhbnRzIHBhciBsJ2lucXVpdHVkZSwgaWxzIHNlIHJhYmFpc3NlbnQgY29uc3RhbW1lbnQsIGNhciBzaSBpbHMgc29udCBjb25zY2llbnRzIGRlIGxldXJzIHF1YWxpdHMsIGlscyBjcmFpZ25lbnQgcGFyIGRlc3N1cyB0b3V0IGxldXJzIHByb3ByZXMgbWFucXVlbWVudHMsIGxldXJzIGRmYXV0cywgbGV1cnMgZmFpYmxlc3Nlcy4gTGVzIHNvY2lhbGlzdGVzLCBldXgsIGF1IGRlbCBkJ3VuIGNlcnRhaW4gZ2UsIGwnZXhwcmllbmNlIGV4aWdlYW50IHNlcyBkcm9pdHMsIHNhdmVudCBiaWVuIHF1J2lscyBuZSBzb250IHF1J2ltcG9zdHVyZSBldCBxdWUgbGV1ciBkb21pbmF0aW9uIG5lIHZhdXQgcmllbi4gClRoZXNlIHBlb3BsZSBhcmUgY293YXJkbHksIGFuZCBJJ2QgYXNzdW1lIGRvbid0IGFtb3VudCB0byBtdWNoLiBZb3UgY2FuIHNlZSB0aGVzZSBwZW9wbGUgYWRtaXJlIHBvd2VyLCBzdXByZW1hY3kgYW5kIGhhdGUsIGFuZCBpdCdzIGEgdmVyeSB0b3hpYyB3YXkgdG8gbGl2ZS4gT2JzZXJ2aW5nIHRoaXMgbWFkZSBvbmUgb2YgbXkgbGlmZSBtYW50cmFzLiAKV2h5PyBCZWNhdXNlIGtvYWxhcyBhcmUgcmlkZGxlZCB3aXRoIGNobGFteWRpYS4gCk1haXMgYyBleHRybWVtZW50IHJhcmUsIGRlIG1tZSBxdWUgY2UgZ3JvcyBwb2lzc29uIGNoYXQgcXUgYXBwZWxsZSBzaWx1cmUgZ2xhbmUgcGFydmVuYW50ICBkZXMgZGltZW5zaW9ucyBwcm9kaWdpZXVzZXMgZGFucyBsZXMgZWF1eCBkdSBEYW51YmUsIG1haXMgbmUgZHBhc3NhbnQgZ3VyZSBsZXMgMjUwIGNtIGRhbnMgY2VsbGVzIGRlcyBwcmluY2lwYXV4IGNvdXJzIGQgZnJhbmFpcywgY2UgcXVpIGVzdCB1biBnYWJhcml0IGJpZW4gaW1wb3NhbnQgIGwgZCBoaXN0b2lyZXMgZGUgc2lsdXJlIG1hbmdldXIgZCAobCBodW1haW4gYWRvcmUgYXZhbGVyIGRlcyBjb3VsZXV2cmVzIHN1cnRvdXQgc2kgZWxsZXMgb250IGwgZCBzZXJwZW50IGRlIG1lciBQbHVzIGMgZ3JvcywgcGx1cyBhIHBhc3NlLCBkaXQgb24gQnJlZiwgbGEgYmVyY2UgZHUgQ2F1Y2FzZSwgYyBjb21tZSBsZSBzaWx1cmUsIHVuIG9iamV0IGQgcG91ciBsZXF1ZWwgbGEgcXVlc3Rpb24gZGVzIGRpbWVuc2lvbnMgbiBwZXV0IHRyZSBwYXMgdHJhbmdyZS4gCk9uIGNsYXJpbmV0LCBwbGF5aW5nIGZpcnN0IGZpbmdlciBhbmQgdGh1bWIgaXMgYSBmaXJzdCBsaW5lIEUuIApUaGUgdHJ1dGg6IFNvbWVib2R5IHdhbnRzIGEgZGl2b3JjZS4gRSEgaGFzIHNwb3R0ZWQgTm9yZGVncmVuIG91dCBhbmQgYWJvdXQgd2l0aG91dCBoZXIgd2VkZGluZyByaW5nIHR3aWNlIHNpbmNlIHRoZSBpbmNpZGVudDsgcGx1cywgc291cmNlcyBjbG9zZSB0byB0aGUgcGFpciB0ZWxsIHRoZSBFISBuZXdzIHRlYW0gdGhleSB0aGluayBhIGRpdm9yY2UgaXMgImRlZmluaXRlbHkiIGluIHRoZSB3b3JrcyBhbmQgdGhhdCBUaWdlciAiZGVmaW5pdGVseSIgaXMgbm90IGdldHRpbmcgYmFjayB3aXRoIEVsaW4uIFBsdXMsIGxvY2FscyB0ZWxsIEUhIHRoYXQgVGlnZXIgaGFzbid0IGJlZW4gc3BvdHRpbmcgY29taW5nIG9yIGdvaW5nIGZyb20gaGlzIGhvdXNlIHNpbmNlIFRoYW5rc2dpdmluZy4KIkFuZCB0aGF0IEkgd2FzIGEgc2x1dC4iIExhbmUgc2F5cyB0aGUgdHdvIGhhZCBsaXR0bGUgY29udGFjdCBhZnRlciB0aGF0IGhlYXRlZCBtZWV0aW5nLCBidXQgdGhhdCBOb3JyaXMgYWdyZWVkIGhlIHdvdWxkIHRha2UgY3VzdG9keSBvZiB0aGUgY2hpbGQuIFNoZSBzYXlzIHRoYXQgb24gU2VwdGVtYmVyIDE0LCBoZSBjYW1lIHRvIHRoZSBob3NwaXRhbCB3aXRoIGhpcyBtb3RoZXIgYW5kIGhpcyBnaXJsZnJpZW5kLCBhIHdvbWFuIG5hbWVkIE1lbCwgdG8gY29sbGVjdCB0d28gZGF5IG9sZCBUZWdhbi4gCkkgd2FzbiB0cnlpbmcgdG8gaW1wcmVzcyBhbnlvbmUuIEJ1dCBJIGZlbHQgdGhlIGd1eSB3YXMgb3dlZCBhbmQgYXBvbG9neSBhbmQgZGVzZXJ2ZWQgdG8gbWFrZSBzb21lIG1vbmV5IHdoaWxlIGRlYWxpbmcgd2l0aCBoZXIgQlMuIElmIGhlIGRpZG4gYWNjZXB0IG15IGFwb2xvZ3ksIEkgY29tcGxldGVseSB1bmRlcnN0YW5kLiBCdXQgSSBmZWx0IGhlIHdhcyBvd2VkIG9uZS4KSW4gdGhlIG9yaWdpbmFsIG1vdmllLCB0aGUgdmVyeSBmaXJzdCBTdGFyIFdhcnMsIHRoZXJlIGFyZSB0aGVtZXMgb2YgZnJpZW5kc2hpcCwgaGVyb2lzbSwgZXRjLiBZb3UgaW50cm9kdWNlZCB0byBhIGNoYXJhY3RlciB3aG8gaXMgYSBjeW5pY2FsLCBzZWxmIHNlcnZpbmcsIHN1cnZpdmFsaXN0LiBPdmVyIHRoZSBjb3Vyc2Ugb2YgdGhlIHN0b3J5LCB5b3Ugc2VlIGhpbSBjaGFuZ2UgaW50byBzb21lb25lIHdobyBpcyB3aWxsaW5nIHRvIHNhY3JpZmljZSBoaXMgb3duIHdlbGxiZWluZyBmb3IgdGhlIGdyZWF0ZXIgZ29vZCBhbmQgZm9yIHRoZSBzYWtlIG9mIGZyaWVuZHNoaXAuIApDZW5zdXMsIHNvbWUgMiBtaWxsaW9uIG1lbiBmdW5jdGlvbiBhcyB0aGUgcHJpbWFyeSBjYXJlZ2l2ZXJzIGluIHRoZWlyIGZhbWlsaWVzLCBhbmQgdGhhdCBudW1iZXIgaXMgc3Vic3RhbnRpYWxseSBvbiB0aGUgcmlzZSBpbiBsaWdodCBvZiB0aGUgY3VycmVudCAibWFuY2Vzc2lvbi4iIEJ1dCB3aGF0IHRoZSBzdGF5IGF0IGhvbWUgZGFkIGxhY2tzIGluIGVhcm5pbmcgcG93ZXIgaGUgbWF5IG1ha2UgdXAgZm9yIGluIHNleGluZXNzLi4gClRoaXMuIEZvciBURVMgYW5kIEZPIGdhbWVzIHdoZXJlIHlvdXIgY2hhcmFjdGVyIGhhcyBubyBiYWNrZ3JvdW5kIGlmIGFueSBJIHJhdGhlciBoYXZlIGhpbS9zaGUgc2lsZW50LCBidXQgZm9yIG90aGVyIG1vcmUgc3RvcnkgZHJpdmVuIGdhbWVzIEkgd2FudCB0aGVtIHRvIHRhbGsgYW5kIGhhdmUgc29tZSBwZXJzb25hbGl0eS4gSXQgd2FzIHZlcnkgZGlzYXBwb2ludGluZyB0aGF0IHlvdXIgY2hhcmFjdGVyIGluIEZhciBDcnkgNSBuZXZlciB0YWxrcywgYW5kIHRoYXQgaW4gRmFyIENyeSA0IGhlIHJlbWFpbnMgc2lsZW50IG1vc3Qgb2YgdGhlIHRpbWUuLiAKU2FpZCwgQm95ZCwgSSBmcm9tIFNhbmR1c2t5LCBPaGlvLiBJIGRlYWx0IHBva2VyIGZvciB5ZWFycyBhbmQgSSBjYW4gc2VlbSB0byBnZXQgYSB0dW1ibGUgaW4gTGFzIFZlZ2FzLiBIZSBzYWlkLCBub3QgaGlyaW5nIHJpZ2h0IG5vdywgYnV0IGdldCBiYWNrIGludGVybWl0dGVudGx5IGFuZCB3ZSBjb25zaWRlciB5b3UuCk1hbm5pbmcgYW5kIEJyZWVzIGdpdmVuIHN1Y2ggd2VhcG9ucyBsaWtlIEdyb25rLCBXZWxrZXIsIEVkZWxtYW4sIE1vc3MsIGFuZCBzbyBvbiB3b3VsZCBiZSBpbnNhbmUuIEJyYWR5IGhhcyBiZWVuIGdldHRpbmcgYWxvdCBvZiBjcmVkaXQgZm9yIHRoZW0uIApJbnRlcm5hdGlvbmFsIHN0dWRlbnRzIGFyZSBlbGlnaWJsZSB0byBhcHBseSBidXQgZnVuZGluZyBpcyBvbmx5IGF0IHRoZSBsZXZlbCBvZiBIRVUgZmVlcyBhbmQgbWFpbnRlbmFuY2UgZ3JhbnQuIApBY2NvcmRpbmcgdG8gYW4gaW5kdXN0cnkgaW5zaWRlciwgZWFjaCBvZiB0aGUgb2Zmc2hvcmUgY2FzaW5vcyBzZWVzIGF2ZXJhZ2UgbmV0IHByb2ZpdCBlYXJuaW5ncyBvZiBSczEuNzUgY3JvcmUgcGVyIGRheSwgd2hpbGUgZWFjaCBvZiB0aGUgMTAgb2RkIG9uc2hvcmUgY2FzaW5vcyBlYXJuIFJzMy43NSBsYWtoIHRvIFJzNCBsYWtoIHBlciBkYXkuIApPYnZpb3VzbHksIHRoZXJlIHNvbWV0aGluZyBpbnRlcmVzdGluZyBpbiB5b3VyIGlkZWEsIHNvbWUgY29uZmxpY3QgdGhhdCBkZXZpYXRlcyBmcm9tIHRoZSBub3JtLCBzbyBjcmVhdGUgYSBzbWFsbCBzdG9yeSBvZiBzb21lb25lIGRheSBhbmQgaG93IGl0IHdvdWxkIGJlIGFmZmVjdGVkIGJ5IHRoaXMgY29uZmxpY3QuIAo0KSwgRXJpayBTZWlkZWwgKEdQSSBOby4gNDUpLCBPbGUgU2NoZW1pb24gKEdQSSBOby4gCkFiZXIgd2VubiBlciBpcmdlbmR3byBhdWZ0YXVjaHQsIGRhbm4gaXN0IG5pY2h0IEthdGFzdHJvcGhlbiB1bmQgU2Vuc2F0aW9ucyBKb3VybmFsaXN0aWsgYW5nZXNhZ3Qgc29uZGVybiBQQVJUWS4gCk15IGh1c2JhbmQgdXNlZCB0byBhbHdheXMgY29tZSBob21lIHN0cmVzc2VkIG91dCBhcyBoZWxsIGZyb20gd29yay4gCk5ldmVyM2ZvcmdldCB3aWxsIGFsc28gcmVjZWl2ZSBubyBzdGF0dXRvcnkgYmVuZWZpdHMgZnJvbSB0aGUgS29yZWFuIGdvdmVybm1lbnQgc3VjaCBhcyB0aGUgcmlnaHQgdG8gam9pbiBhIHVuaW9uLCBmaWxlIGZvciB3b3JrZXIgY29tcGVuc2F0aW9uLCBldGMuIFRoZXJlIGlzIG5vIHJlY2lwcm9jYWwgYmVuZWZpdC4gClJlYWxseT8gTWFueSBwZXIgZGF0ZT8gSXQncyB0cnVlLiBUaGVyZSBtYXkgYmUgaHVnZSByZXNvdXJjZXMgdGhhdCB3b3VsZCBiZSBmb3JtZWQgZnJvbSB0aGUgbGF0ZXN0IGJsb2cuIFRoaXMgcGFydGljdWxhciBrZXkgY2FuIHRvIGdldCBhIGZpZWxkIHRoYXQgaXMgc2VhcmNoZWQgZm9yIGFuZCB3aHkgaGFzIHNvbWUgd2F5IG9uIHRoZSB3YXkgdG8gbW9uZXRpemUuIFlvdXIgc2ltcGx5IG1lYW5zIHRoZSB0aGVtZSB5b3Ugc2V0dGxlIG9uIHNob3VsZCBvd24gc29tZXRoaW5nIGVhY2ggcmVhZGVycyBhc3BpcmUgdG8gaGF2ZS4gWW91IHNvbWV0aW1lcyBuZWVkIHNvIHRoYXQgaXQgd2lsbCBtYWtlIHN1cmUgdGhpcyBtdXN0IGJlIHNvbWV0aGluZyB5b3UgbWF5IGhhdmUgYSBzdWZmaWNpZW50IHF1YW50aXR5IGludGVyZXN0IGFwcGVhcmluZyBpbiB0byB0eXBlIGEgZ29vZCBudW1iZXIgYWJvdXQganVzdCB0aGVyZSBpcyB1c3VhbGx5IHF1aXRlIGEgY29tcGxldGUgYml0IG9uIHdyaXRpbmcgaW52b2x2ZWQgeW91cnNlbGYuCkdhbWUgb2Ygc2tpbGxzIGhvd2V2ZXIgbHVjayBzdGlsbCBwbGF5cyBhIHBhcnQ6IGlzIG5vdCBhYm91dCB0aGUgY2FyZHMgeW91IGFyZSBkZWFsdCwgYnV0IGhvdyB5b3UgcGxheSB0aGUgaGFuZCBSYW5keSBQYXVzY2ggc2FpZCBpbiBUaGUgTGFzdCBMZWN0dXJlLiAKQWxpY2UgTXVucm8sIHRoZSAyMDEzIE5vYmVsIFByaXplIGxhdXJlYXRlIGluIExpdGVyYXR1cmUsIGhhcyByZXZvbHV0aW9uaXplZCB0aGUgYXJjaGl0ZWN0dXJlIG9mIHRoZSBzaG9ydCBzdG9yeS4gVGhpcyBjb2xsZWN0aW9uIG9mIGVzc2F5cyBvbiBNdW5ybyBlbmdhZ2VzIHdpdC4uIApXZWxsLiAKQ2hyaXMgZGlkbiBldmVuIHNob3cgdXAgdG8gb3VyIGRvY3VtZW50YXJ5IHNjcmVlbmluZyB0aGUgb3RoZXIgbmlnaHQuIApJIGZpZ3VyZSBzb21lb25lIHBsYW50ZWQgb25lIGluIHRoZSA3MHMgYW5kIHRoZWlyIG5laWdoYm91cnMgbGlrZWQgaXQgc28gdGhleSBnYXZlIHRoZW0gY3V0dGluZ3MgYW5kIG5vdyB3ZSBoYXZlIGEgbGl0dGxlIGJpdCBvZiB0aGUgYnVzaCBpbiBFYWxpbmcuIApPbiBhdmVyYWdlLCBlYWNoIHN0YXRlIGhhcyBhYm91dCA5MCBsaWNlbnNlZCBwcm9mZXNzaW9ucy4gClRpZW5lIGNvcnNpIGUgc2VtaW5hcmkgZGkgWW9nYSwgUG90ZXJlIGRlbGxhIG1lbnRlIGUgU2NpZW56YSBDcmlzdGlhbmEgcHJlc3NvIGwgZGkgUHJvbW96aW9uZSBTb2NpYWxlIGVsZXZlbiAuCk1heWJlIGl0J3MgYSBibGVzc2luZyBpbiBkaXNndWlzZSB0aGF0IGhlJ3MgaW4gRXVyb3BlIHdpdGggaGlzIGZhbWlseSBvbiBhbiBleHRlbmRlZCB2YWNhdGlvbiBzbyBoZSBjYW4gbXVsbCBvdmVyIHRoZSBpbW1lZGlhdGUgZnV0dXJlIG9mIGhpcyBjYXJlZXIuIApDb3Vuc2VsIGFzc2lzdGluZyB0aGUgY29yb25lciBpcyBTZXJnZWFudCBSZWJiZWNjYSBCZWNyb2Z0LCB3aG8gd2VhcnMgcGluc3RyaXBlZCBzdWl0cyBhbmQgYSBzaG9ydCBiYWNrIGFuZCBzaWRlcyBoYWlyY3V0LiBTaGUgbG9va3Mgc2V2ZXJlIGJ1dCB0dXJucyBvdXQgdG8gYmUgYSBzb2Z0IHRvdWNoLiBXaGVuIHJlcG9ydGVycyBnYXRoZXIgcm91bmQgdG8gYXNrIHF1ZXN0aW9ucyBkdXJpbmcgYWRqb3Vybm1lbnRzLCBzaGUgaXMgYXMgd2lsbGluZyB0byBleHBsYWluIHRoZSBpbnRyaWNhY2llcyBvZiB0aGUgQ29yb25lcnMgQWN0IGFzIHRvIGdpdmUgdXMgdGhlIHNwZWxsaW5ncyBvZiBuYW1lcyB3ZSBtaWdodCBoYXZlIG1pc3NlZC4gCkVzcGVjaWFsbHkgaXQgaXMgZ29vZCBmb3IgaHlwZXJ0ZW5zaW9uLCBzdW5zdHJva2UsIHNvcmUgbXVzY2xlIGFuZCBiaSBzeW5kcm9tZS4gVGhlcmUgYXJlIG92ZXIgMTAwIHNpZ25pZmljYW50IGVmZmVjdHMgb2YgYWN1cHVuY3R1cmUuIApCdXQgaGV5LCBJIGRvbiBleHBlY3QgeW91IHRvIGdldCB0aGF0LiAKRmluZCBhIE5lZWQgYW5kIEZpbGwgSXQKQXMgYSBWSVAsIHlvdSdsbCBiZSBhYmxlIGFjY2VzcyB0byBvdXIgVklQIHRhYmxlcywgZ2V0IGZyZWUgZHJpbmtzLCBiZW5lZml0IGZyb20gaW5jcmVhc2VkIGRhaWx5IGNoaXAgYm9udXNlcyBhbmQgc2hvdyBvZmYgeW91ciBzdGF0dXMgYXQgdGhlIHRhYmxlcy4gCkFub3RoZXIgcmFuZG9tIHRoaW5nIHRlZW5hZ2VycyBzaG91bGQgZG8gbm93IHRoYXQgZG9lc24gaW52b2x2ZSB0aGUgaW50ZXJuZXQsIHdoaWNoIHRlZW5hZ2VycyBkaWQgZm9yIGRlY2FkZXM6IHRhYmxldG9wIFJQRyBFbnRpcmUgd2Vla2VuZHMgb2YgQUQgSWYgeW91IGRvbiBnZXQgb3V0IG11Y2gsIGlmIHlvdSBhcmUgc2h5LCBpZiB5b3VyIHNvY2lhbCBsaWZlIGlzIGFsbCBvbmxpbmUgb3Igc29tZXRoaW5nIGFuZCB5b3Ugd2lzaCB5b3UgaGFkIHNvbWV0aGluZyBmdW4gYW5kIHVuZXhwZWN0ZWRseSBpbnRlcmVzdGluZyB0byBkbyB3aXRoIGEgZ3JvdXAgb2YgZnJpZW5kcywgZ28gdG8gZ2FtZSBzaG9wcywgdGFsayB0byBwZW9wbGUgZXZlbiBpZiB5b3UgaGF2ZSB0byBiZSBicmF2ZSwgYW5kIHNvbWVvbmUgd2lsbCBlbmQgdXAgcmFtYmxpbmcgdG8geW91IGFib3V0IEFEIG9yIHNvbWV0aGluZy4gTGlzdGVuLCBhbmQgeW91IHdpbGwgbWFrZSBmcmllbmRzLi4gCiJIZSB3YXMgZG9pbmcgdGhhdCBmaXZlIGRheXMgYSB3ZWVrLCBzbyB0aGF0J3MgJDIwMDAuIiBDb21tZXJjaWFsIENsdWIsIEFsYnVyeSwgY2hpZWYgZXhlY3V0aXZlIG9mZmljZXIgQnJ1Y2UgRHVjayBzYWlkIHRoZSBjaGFuZ2VzIHdvdWxkIG1vc3QgbGlrZWx5IGFmZmVjdCBob3RlbHMgaW4gbWV0cm9wb2xpdGFuIFN5ZG5leS4gIk15IG9ubHkgb3BpbmlvbiBpcyBpdCB3aWxsIG5vdCBoYXZlIGFueSBncmVhdCBlZmZlY3Qgb24gdGhlIGxvY2FsIGFyZWEsIG9yIHRoZSBwdWJzIGFuZCB0aGUgY2x1YnMgaW4gdGhlIGxvY2FsIGFyZWEsIiBoZSBzYWlkLiAKRm9yIGV4YW1wbGUsYWxsIGZvdXIgb2YgdGhlIG1haW4gY2hhcmFjdGVycyBpbiB0aGUgdGVsZXZpc2lvbiBzaG93ICJTZWluZmVsZCJjb3VsZCBiZSBjb25zaWRlcmVkIG5hcmNpc3Npc3RzLiAKVGhlIGxvY2FsIGFtbmVzaWEgd2FzIHRoZSB3b3JzdCBwYWluIEkgZmVsdCB0aGF0IGRheS4KU3RpbGwsIHlvdSdkIGJlc3QgYmUgc2VydmVkIGVpdGhlciBwbGF5aW5nIGZvciBtaWNyb3N0YWtlcyBvbmxpbmUgKGxpa2Ugb25lIGNlbnQvdHdvIGNlbnQgYmxpbmRzKSBvciBub3QgYXQgYWxsLiBCZXlvbmQgbGVhcm5pbmcgdGhlIGJhc2ljcyBsaWtlIGhhbmQgcmFua2luZ3MgYW5kIG9yZGVyIG9mIHBsYXksIHBsYXkgbW9uZXkgZ2FtZXMgYXJlIGp1c3QgZ29pbmcgdG8gdGVhY2ggeW91IGJhZCBoYWJpdHMuCklmIGEgcGxheWVyIGJldHMgaW4gZnJvbnQgb2YgeW91LCB0aGVyZSBhcmUgdHdvIHRoaW5ncyB5b3UgY2FuIGRvLiAKSSB1bmRlcnN0YW5kIHRoZSBuZWVkIGZvciB0aGUgZGF0YSBhbmQgdGhlIHJlc2VhcmNoLCBidXQsIHN0aWxsLCBpdCBpcyBhIHRvdWdoIGdvLCBhbmQgbm8gZG91YnQgYSBsb3Qgb2YgdW51c3VhbCBiaXRzIGNvdWxkIGJlIGZvcmNlZCBmcm9tIHRoZSB0aXRsZS4gdGhlIHBhcGVyOiAiQWJzdHJhY3QgUmVhbCBhbmQgc2ltdWxhdGVkIHBhcnRpY3VsYXRlIGZhbGxvdXQgYW5kIHNvbHV0aW9ucyBvZiBTcjg1Q0wyIGFuZCBDczEzNENsMiBmZWQgdG8gMTAyIGhlYWx0aHkgdm9sdW50ZWVycy4gQWJzb3JwdGlvbiBhbmQgcmV0ZW50aW9uIG9mIGluZ2VzdGVkIHJhZGlvYWN0aXZpdHkgd2FzIG1lYXN1cmVkIGJ5IHdob2xlIGJvZHkgY291bnRpbmcgdXNpbmcgdGhlIGdhbW1hIHJheSBzcGVjdHJvbWV0ZXIgYXQgdGhlIEFyZ29ubmUgQ2FuY2VyIFJlc2VhcmNoIEhvc3BpdGFsLiBBbiBhdmVyYWdlIG9mIDMgcGVyIGNlbnQgb2YgdGhlIHJhZGlvYWN0aXZpdHkgb2Ygd2VlayBvbGQgbG9jYWwgZmFsbG91dCBXUyBhYnNvcmJlZDogdGhlIHJhbmdlIHdhcyAwIDkgcGVyIGNlbnQuIFN0cm9udGl1bSBhbmQgY2VzaXVtIGxlYWNoZWQgb3IgZGlzc29sdmVkIGZyb20gc2ltdWxhdGVkIGZhbGxvdXQgYmVoYXZlZCBpbiB0aGUgc2FtZSB3YXksIG1ldGFib2xpY2FsbHksIGFmdGVyIGFic29ycHRpb24gYXMgdGhleSBkaWQgd2hlbiB0aGUgdHJhY2VyIHdhcyBzd2FsbG93ZWQgaW4gYSBzb2x1dGlvbiBvciBpbmplY3RlZCBpbnRyYXZlbm91c2x5LiBUaGUgbGFyZ2UgbnVtYmVyIG9mIHN1YmplY3RzIHN0dWRpZWQgcHJvdmlkZWQgYWRkaXRpb25hbCBpbmZvcm1hdGlvbiBvbiB0aGUgcmFuZ2Ugb2YgdmFyaWF0aW9uIG9mIGludGVzdGluYWwgbW90aWxpdHksIGJpb2xvZ2ljYWwgYXZhaWxhYmlsaXR5IG9mIHN0cm9udGl1bSwgY2VzaXVtIGFuZCBiYXJpdW0gZm9sbG93aW5nIGluZ2VzdGlvbiBvZiBmYWxsb3V0LCBhbmQgcmV0ZW50aW9uIG9mIHRoZSByYWRpb251Y2xpZGVzIG9mIHRoZXNlIGVsZW1lbnRzLiJJbnRlcmVzdGluZyBzZXQgb2YgZGVzY3JpcHRvcnMgdXNlZCBieSB0aGUgRGVmZW5zZSBUZWNobmljYWwgSW5mb3JtYXRpb24gQ2VudGVyOkpGIFB0YWsgU2NpZW5jZSBCb29rcyBQb3N0IDI2ODcKSXQgdXNlZCB0byBiZSB0aGF0IGdvb2QgZW1wbG95bWVudCB3YXMgcG9zc2libGUgYmVjYXVzZSB3ZSB3ZXJlIG1lbWJlcnMgb2YgY29tbXVuaXRpZXMsIGJ1c2luZXNzZXMsIGdvdmVybm1lbnRzLCBjaXZpbCBzb2NpZXR5IGFuZCBjaXRpemVucyBsb29rZWQgb3V0IGZvciBvbmUgYW5vdGhlci4gClBva2VyIE1hc3RlcjogQmVjb21lIGEgVGV4YXMgSG9sZCdlbSBQb2tlciBNYXN0ZXIgVGlwICA0CkVzIGhlaXQgRW50d2lja2x1bmcuLiAKSWYgeW91IGFyZSBzb21lb25lIHRoYXQgd2FudHMgdG8gdGFrZSBsZWFybmluZyBpbnRvIHRoZSByZWFsIHdvcmxkIGl0IHdvdWxkIGJlIHNtYXJ0IHRvIGNoZWNrIHdpdGggYW55IGNhc2lub3MgaW4geW91ciBhcmVhLiAKVGhpcyBpcyB0aGUgZmFtb3VzICJUaGUgRmFtZSBNb25zdGVyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuIApObyBzdHJheSBkb2dzLCBldmVuLiAKU2V4cm9ja2FuZHJvbGwgdQpUcmVrTVQ3OTAwIHUKWW91IG5lZWQgc29tZXRoaW5nIHNvZnQsIHdhcm0gYW5kIGN1c2hpb255IGZvciB0aGUgYmFieSB0byBsaWUgb24uIEF0IHRoZSBzYW1lIHRpbWUgdGhlIHN1cmZhY2UgbmVlZHMgdG8gYmUgYWJsZSB0byBjb3BlIHdpdGggYWNjaWRlbnRzICAgcmVtZW1iZXI6IHlvdXIgYmFieSBpcyBnb2luZyB0byBiZSB3aXRob3V0IGEgbmFwcHkhIFNvbWV0aGluZyBsaWtlIGEgdGhpY2sgdG93ZWwgb24gdG9wIG9mIG9uZSBvZiB0aG9zZSBwbGFzdGljIGNvdmVyZWQgYmFieSBjaGFuZ2luZyBtYXRzIHdvdWxkIGJlIGlkZWFsLiAKIkkgY2FsbGVkIGEgcGFzdG9yIGZyaWVuZCwgYW5kIHNhaWQsIE9oIG15IEdvZCwgc2hvdWxkIEkgc2VuZCBpdCBiYWNrPyBXaGF0IGRvIEkgZG8/IERvIEkgZG9uYXRlIGl0PyAiIHNoZSBzYWlkLiAiSGUgc2FpZCwgRG9uIHQgZmVlbCBndWlsdHkuIFlvdSBqdXN0IGdvdCBwYWlkIGZvciBhbGwgeW91ciB2b2x1bnRlZXIgd29yayBhZ2FpbnN0IGdhbWJsaW5nLiBJdCBzIEdvZCBzaG93aW5nIGhpcyBncmFjZSBvbiBtZS4iCkkgc3RhcnRlZCBkb2luZyBzbWFsbCB3cmlzdCBzdHJlbmd0aGVuaW5nIGFuZCB3ZWFyaW5nIGEgdGVubmlzIGVsYm93IHN1cHBvcnQgYmFuZCAoYXJvdW5kIGF1Z3VzdCkgYW5kIGEgd2VlayBhZ28gbXkgVEcgaGFuZHNwcmluZyBjYW1lIGJhY2sgdG8gbWUgcGFpbiBmcmVlLi4gClZJRUEgQnVzaW5lc3MgTWF0Y2gKV2FzIGtpbmQgb2Ygc2VhbGVkIGZvciBtZS4gSSB0aGluayBpdCB3YXMgYSBzaXR1YXRpb24gd2hlcmUgdGhlcmUgbm90IG11Y2ggZWxzZSBJIGNvdWxkIGhhdmUgZG9uZSwgS2hhaXQgdG9sZCBQb3N0bWVkaWEgTmV0d29yayBmb2xsb3dpbmcgaGVyIHBvc3Qgc3dhcCBlbGltaW5hdGlvbiBlcGlzb2RlIHRoaXMgd2Vlay4gV2FzIGRlZmluaXRlbHkgY2xpY2hlIGluIHRlcm1zIG9mIGxhZHkgbHVjayBiZWluZyBzdWNoIGFuIGltcG9ydGFudCBwYXJ0IG9mIHRoZSBnYW1lIGFuZCB5b3VyIHVuZG9pbmcuIApEZXV4aW1lIHRhcGUgOiByZXRvdXIgIGxhIFRhYmxlIGRlIEJyZWl6aCwgcXUnb24gYXZhaXQgZGNvdXZlcnQgYXZlYyBkbGljZSBlbiAyMDEwIGFsb3JzIHF1J2VsbGUgdmVuYWl0IGQnb3V2cmlyIHNvdXMgbGEgaG91bGV0dGUgZCd1biBjaGVmIGphcG9uYWlzLiBDJ2VzdCB1biByZXN0YXVyYW50IHF1aSBzZSBwb3NpdGlvbm5lIG1haW50ZW5hbnQgYXNzZXogbHV4dWV1c2VtZW50LiBDJ3RhaXQgbWVudSBpbXBvcyAiSW1hZ2UgZHUgSmFwb24gZXQgZGUgbGEgQnJldGFnbmUiIGVuIGRldXggdmVyc2lvbnMsIG9uIGEgcHJpcyBsYSBwbHVzICJyYWlzb25uYWJsZSIgKHF1YW50aXRhdGl2ZW1lbnQgZXQgZmluYW5jaXJlbWVudCkgcXVpIGNvbnNpc3RhaXQgZW4gNSBwbGF0cyBkb250IGxlIHRvdGFsIG4nYSBwYXMgcGVzIHN1ciBsJ2VzdG9tYWMgKHRhbnQgbWlldXggc2Vsb24gbW9pIG1haXMgY2VydGFpbnMgcHJmcmVyYWllbnQgc2FucyBkb3V0ZSBkZXMgcG9ydGlvbnMgcGx1cyBjb3BpZXVzZXMuKS4uIApOb3cgaWYgaGUgdG9vayB0aW1lIChidXQgbm90IHRvbyBsb25nKSB0byB0aGluayBhbmQgdGhlbiByYWlzZSwgeW91IGNhbiBiZSBzdXJlIHRoYXQgaGUgaXMgbm90IGJsdWZmaW5nLiBQb29yIHBsYXllcnMgZ2VuZXJhbGx5IGRvbiBibHVmZi4gCkJ1c2luZXNzIEFydGljbGVzICBKdWx5IDI3LCAyMDA5ClNvIGZvciBtZSwgSSB3YW50IHRvIHRhbGsgYWJvdXQgdGhlIHBvbGl0aWNhbCBpbmZsdWVuY2UgaW4gdGhpcyBjb3VudHJ5IHRoYXQgc2F5cyBpdCBpcyBvayBmb3IgcGVvcGxlIHRvIHB1c2ggZm9yIGFsbGVnaWFuY2UgdG8gYSBmb3JlaWduIGNvdW50cnkuIEFuZCBJIHdhbnQgdG8gYXNrLCB3aHkgaXMgaXQgb2sgZm9yIG1lIHRvIHRhbGsgYWJvdXQgdGhlIGluZmx1ZW5jZSBvZiB0aGUgTlJBLCBvZiBmb3NzaWwgZnVlbCBpbmR1c3RyaWVzLCBvciBCaWcgUGhhcm1hLCBhbmQgbm90IHRhbGsgYWJvdXQgYSBwb3dlcmZ1bCBsb2JieSB0aGF0IGlzIGluZmx1ZW5jaW5nIHBvbGljeT8gW2FwcGxhdXNlXSBBbmQgSSB3YW50IHRvIGFzayB0aGUgcXVlc3Rpb24sIHdoeSBpcyBpdCBvayBmb3IgeW91IHRvIHB1c2gsIGZvciB5b3UgdG8gYmUgdGhlcmUgYXJlIHNvIG1hbnkgcGVvcGxlIEkgbWVhbiBtb3N0IG9mIHVzIGFyZSBuZXcsIGJ1dCBtYW55IG1lbWJlcnMgb2YgQ29uZ3Jlc3MgaGF2ZSBiZWVuIHRoZXJlIGZvcmV2ZXIuIFNvbWUgb2YgdGhlbSBoYXZlIGJlZW4gdGhlcmUgYmVmb3JlIHdlIHdlcmUgYm9ybi4gClBvdXJ0YW50IGplIG0ndGFpcyBwb2ludCBhdmFudCBsJ2hldXJlIGQnb3V2ZXJ0dXJlIC4gCkJheWkgbGltYSB0aCBkaXBha3NhIGplbWJhdGFuIHVwIHNheWEgYmVhdXR5IGJlcmtlbmFhbiBuZWdlcmkgbWVtYW5hc2thbiBoYXJpIGFkYWxhaCBibG9nIGFuZHJhIGJvbGVoIG1lbmphbGFua2FuIGphbmluIGRld2FzYSB0dWEgaGFydXMgcG9rZXIgZGlhIGtlZHVhIHBlcmtlbWJhbmdhbiBzZWJ1dCBteSBvbmxpbmUganVkaSBvbmxpbmUgaGluZ2dhIGRpIHNhamEgbWFsYXlzaWEgc2luaSBzYXlhIHB1biBtYWxhbSBwYXNhbmdhbiBhZ2VuIGFuZGEgYmVyYXNtYXJhIGJvbGEgZGFsYW0gaW5pIHBlbmFuZyBhbmRhIHByb2plY3QuIEtvbmdzaWthbiBzZXBlcnRpIHlhbmcgaGFtaWwgY2FiYXJhbiBzaWFwYSBzbWEgbWFsYW0gdGVtcG9oIG1hbGFtIGRhbiBva2kgdHRjIGJlbmFya2FoIHRlbnRhbmcgcGFkYSBqdWRpIHRlbnRhbmcgcGVydGFtYSBzZWNvbmQga2luaS4gClRoZSBzaG9ydGVuaW5nIG9mIHRlbG9tZXJlcyBoYXMgbm90IG9ubHkgYmVlbiBsaW5rZWQgdG8gYWdpbmcsIGJ1dCBhbHNvIHRvIGNhbmNlciBhbmQgaW5jcmVhc2VkIHJpc2sgb2YgZGVhdGguLiAKQXVlcmRlbSBzdGVsbHQgZGFzICBhbGxlbiBOZXVrdW5kZW4gJCA1MDAgaW4gVm91Y2hlcnMgenVtICBiZXJlaXQgdW5kIGJpZXRldCBlaW5lIHZvbGxlIFN0dW5kZSBaZWl0IHJlaW5lbiBDYXNpbm8gR2FtZXMgVmVyZ25nZW5zLCBpbiB3ZWxjaGVyIGRlciBuZXVlICBLdW5kZSBzbyB2aWVsIEdlbGQgd2llIG51ciBtZ2xpY2ggZ2V3aW5uZW4ga2FubiEgRWluZSB3YWhyaGFmdCBndXRlIFBlcnNwZWt0aXZlIWhhdCBhdXNnZWZocnQsIGRhc3MgZGVyIEZpbm5pc2NoZSAgS3VuZGUgbmFtZW5zIGRlbiBhbnNlaG5saWNoZW4gQ2FzaW5vIEphY2twb3QgQmV0cmFnIHZvbiAkIDgzLjgyNSBkdXJjaCBzZWluZW4gU2llZyBhbiBkZXIgcHJvZ3Jlc3NpdmVuIEJsYWNramFjayAgbWl0bmVobWVuIGtvbm50ZS4gRGVyIGZyYW56c2lzY2hlIE1pdGJld2VyYmVyIGltICBuYW1lbnMgdmVyYnVjaHRlIGVpbmVuIEphY2twb3QgU2llZyB2b24gYmVhY2h0bGljaGVuICQgODAuNTU1IGFtIE5pbGUgT25saW5lICBTcGllbC4gCkV2ZW4gY2hpcm9wcmFjdGljLiBUcnkgZXZlcnl0aGluZy4gCk5tZDQ1MyB1ClZlcnkgc2hlbHRlcmVkIGZyb20gaGVyIHJlbGlnaW91cyBmYW1pbHkuIFNvIHNoZSBzaG93cyB1cCBhbmQgaGVyIG1hc3NldXNlIGlzIGEgZ3V5IGluIGhpcyBtaWQgMjAgSGUgdGVsbHMgaGVyIHRvIGRpc3JvYmUgaW50byB3aGF0ZXZlciB5b3UgZmVlbCBjb21mb3J0YWJsZSB3aXRoLiAKSWYgSSBzdGVhbCAkNTAgZnJvbSB5b3VyIGRlc2sgYXQgd29yaywgdGhlcmUgaXMgYWJzb2x1dGVseSBubyB3YXkgSSBnb2luZyB0byBqYWlsLiAKVGhlIG1vc3QgaW1wb3J0YW50IHJlbWVkeSBpcyBhIHNpbXBsZSBvbmUuIFRob3NlIHdobyBrZWVwIHRoZWlyIGNsb3NldHMgY2x1dHRlciBmcmVlIGtub3cgaG93IGl0IHdvcmtzOiBhIG9uZSBpbiBvbmUgb3V0IHBvbGljeS4gRm9yIG11bmljaXBhbGl0aWVzLCBmb3IgZXZlcnkgbmV3IG11bmljaXBhbCBydWxlIHRoYXQgY29tZXMgaW50byBmb3JjZSwgb25lIG5lZWRzIHRvIGJlIGVsaW1pbmF0ZWQgc28gdGhlIG5ldyBydWxlIGRvZXNuIGp1c3QgZ2V0IGFkZGVkIHRvIHRoZSBwaWxlLiAKMi4pIEkgdGhpbmsgYW4gYXJ0aXN0IHNob3VsZCBtYWtlIG1vbmV5IGFueXdheSB0aGF0J3MgcmVhc29uYWJsZS4gU3VwcG9ydGluZyBsYXdzIHRoYXQgc3VwcHJlc3MgZmlsZSBzaGFyaW5nIGlzbid0IHJlYXNvbmFibGUgdGhvdWdoLiAKUG9vbCBkaW5pbmcgdGFibGVzIGJyaW5nIHNvbWV0aGluZyBhIGxpdHRsZSBkaWZmZXJlbnQgdG8gdHJhZGl0aW9uYWwgYmlsbGlhcmQgdGFibGVzLiBUaGV5J3JlIGhpZ2ggY2xhc3MgYmlsbGlhcmQgdGFibGVzIHRoYXQgYXJlIG5ldyBhbmQgaG90IHByb2R1Y3RzIG91dCBvbiB0aGUgbWFya2V0LiAKSSBoYXZlbid0IGZvdW5kIGFuIGVmZmVjdGl2ZSBzdW5zY3JlZW4geWV0IGZvciBkb2dzIHRoYXQgYXJlIGFjdHVhbGx5IGluIHRoZSB3YXRlciwgdGhleSBhbGwgc2VlbSB0byB3YXMgb2ZmIHF1aWNrbHkuIEhlIGNhbiBzd2ltLCB0aGlzIHdhcyBoaXMgdGhpcmQgdGltZSBpbiB0aGUgcG9vbCBhbmQgaGUgaGFzIGltcHJvdmVkIGRyYW1hdGljYWxseSEgTXkgbGFzdCBncmV5aG91bmQgY291bGQgYWxzbyBzd2ltIHZlcnkgd2VsbC4gUGVvcGxlIHNheSB0aGV5IGRvbid0IGZsb2F0IHdlbGwgZHVlIHRvIHRoZWlyIGxvdyBib2R5IGZhdCwgYnV0IGhvbmVzdGx5IEkgZG9uJ3QgdGhpbmsgdGhhdCdzIHRoZSBwcm9ibGVtLCBpdCBzZWVtcyBtb3JlIG9mIGEgInRoZXkgaGF2ZSBubyBpZGVhIHdoYXQgdGhleSdyZSBkb2luZyBhbmQgbm8gbmF0dXJhbCBpbnN0aW5jdC4iIExvbC4gSSdtIGZyb20gRkwgYW5kIGFsbW9zdCBldmVyeSBncmV5aG91bmQgSSBrbm93IGNhbiBzd2ltLCBqdXN0IHRvb2sgYSB3aGlsZSB0byB0ZWFjaCB0aGVtCkhlcmUgYXJlIHRoZSBydWxlcyBvZiBhIGNhcmQgZ2FtZSBrbm93biBhcyAiUG9saXNoIHBva2VyIiBvciBzbyBpdCBpcyBrbm93biBhbW9uZyB0aG9zZSB3aG8gaGF2ZSB0YXVnaHQgaXQgdG8gbWUuIFRoaXMgaXMgbm90IHRoZSBkcmlua2luZyBnYW1lIG9mIHRoZSBzYW1lIG5hbWUuIE5vciBpcyBpdCByZWFsbHkgYSBwb2tlciBnYW1lLiAKV2hlbiB5b3UgZmFjdG9yIGluIGRldmVsb3BlciBMYXJyeSBTaWx2ZXJzdGVpbidzIG9uIGFnYWluL29mZiBhZ2FpbiBXb3JsZCBUcmFkZSBDZW50ZXIgcHJvamVjdCwgaXQgY291bGQgaW5jcmVhc2UgYXZhaWxhYmxlIHNwYWNlIGluIHRoZSBuZWlnaGJvcmhvb2QgYnkgc2V2ZXJhbCBtaWxsaW9uIHNxdWFyZSBmZWV0LiAiSm9icyBjcmVhdGUgdGhlIG5lZWQgZm9yIHNwYWNlLCIgc2F5cyBNYWNrLiAiVGhlcmUncyBhIGJpZyBxdWVzdGlvbiBhcyB0byB3aGF0IHdpbGwgdGFrZSB0aGUgZmluYW5jaWFsIGluZHVzdHJ5J3MgcGxhY2UsIGlmIGl0IGRvZXNuJ3QgY29tZSBiYWNrLiIuIApJdCBpcyB0aGUgcGFyZW50cyByZXNwb25zaWJpbGl0eSB0byBwcm92aWRlIGFuZCBhcyBsb25nIGFzIHdlIGRvbid0IGFzayBmb3IgcmVzdWx0cyBlcXVhbGluZyB0aGUgY29zdCBvZiBwcm92aWRpbmcgKG1lYW5pbmcgYmVzdCBwcml2YXRlIHNjaG9vbCA9IEhhcnZhcmQpIHRoZW4gSSdtIGZpbmUgd2l0aCB0aGF0LCB0aGF0J3Mgd2hlcmUgSSBkcmF3IHRoZSBsaW5lLiAKQW5kIGEgdmVyeSBjb21tb24gdGhpbmcgaXMgdG8gcHJvdmlkZSBhIGNyZWRpdCByZXBvcnQgZnJvbSB0aGUgW1NDSFVGQV0oLgpJbiBvcmRlciB0byB1bmRlcnN0YW5kIGhvdyB0aGlzIGNvdWxkIHBvc3NpYmx5IGhhcHBlbiwgd2UgaGF2ZSB0byBnbyBiYWNrIHRvIHRoZSBQcm9qZWN0IGZvciBhIE5ldyBBbWVyaWNhbiBDZW50dXJ5KFBOQUMpLCBub3cga25vd24gYXMgdGhlIEZvcmVpZ24gUG9saWN5IEluaXRpYXRpdmUgKEZQSSkuIE5vIGRvdWJ0IHRoZXkgY2hhbmdlZCB0aGVpciBuYW1lIGJlY2F1c2UgbWFueSBBbWVyaWNhbnMgcmVjb2duaXplZCBob3cgY3JlZXB5IGl0IHdhcyB0aGF0IHRoaXMgb2RkIGNvbGxlY3Rpb24gb2YgbmVvIGNvbnMgd2FzIHNoYXBpbmcgZm9yZWlnbiBwb2xpY3kgaW4gYSB2ZXJ5IGRpcmVjdCB3YXkuIEluIGNhc2UgeW91IGRvbiByZW1lbWJlciB0aGVtLCBQTkFDIHdhcyBwYXJ0IG9mIHRoYXQgbmVvY29uIGZhbnRhc3kgdGhhdCBhZnRlciB0aGUgQ29sZCBXYXIsIHRoZSBVUyB3YXMgdGhlIG9ubHkgc3VwZXJwb3dlciBzdGFuZGluZywgYnV0IHRoYXQgb3VyIHN1cGVycG93ZXIgc3RhdHVzIHdhcyBiYXNlZCBvbiBhbWFzc2luZyB0aGUgbGFyZ2VzdCBtaWxpdGFyeSB0aGUgd29ybGQgaGFkIGV2ZXIga25vd24uIApUaHJlZSBvZiBhIGtpbmQuIFRoaXMgaXNuJ3QgdGhlIGxvd2VzdCB2YWx1ZWQgb2YgdGhlIHNwZWNpYWwgaGFuZHMsIGJ1dCBpdCBpcyB0aGUgbGVhc3QgZmF2b3VyYWJsZSBpbiB0aGlzIGxpc3QuIEl0IHJlZmVycyB0byBhIHNldCBvZiBmaXZlIGNhcmRzIHdoZXJlIHRocmVlIGFyZSBvZiB0aGUgc2FtZSBkZW5vbWluYXRpb24gYW5kIHRoZSB0d28gZXhjZXNzIGFyZSB1bnBhaXJlZC4gTGlrZSB0aGUgRm91ciBvZiBhIGtpbmQsIHRoZSBraWNrZXJzIGFyZSB1dGlsaXplZCB0byBkZXRlcm1pbmUgd2hpY2ggb2YgdGhlIHBsYXllZCBzZXRzIGRvbWluYXRlLgpDYXJsb3MgZ3JpZmYgZXJuZXV0IHp1bSBTdGV0aG9za29wLiAiVGllZiBBdG1lbiEgRWluIHVuZCBhdXMhIiB2ZXJsYW5ndGUgZXIgdW5kIEhlbGVuIHRhdCwgd2FzIGVyIHdvbGx0ZSwgdW5kIHNlaW4gU3RldGhvc2tvcCBkcmNrdGUgYW4gdmVyc2NoaWVkZW5lbiBTdGVsbGVuIGFuIGlocmVuIEtycGVyIHp1ZXJzdCB2b3JuZSwgZGFubiBmYXNzdGUgZXMgc2llIGFuIGRlbiBTY2h1bHRlcm4gYW4gdW5kIGRyZWh0ZSBzaWUgc2FuZnQsIGJpcyBzaWUgbWl0IGRlbSBSY2tlbiB6dSBpaG0gc3RhbmQgdW5kIGRhcyBraGxlIEluc3RydW1lbnQgYW4gdmVyc2NoaWVkZW5lbiBTdGVsbGVuIGFtIFJja2VuIHNwcnRlLiAKMTAvMTAuIApMZWUgd2FzIHByZWRlY2Vhc2VkIGJ5IGhpcyBzaXN0ZXIsIEJhcmJhcmEsIGFuZCBpcyBzdXJ2aXZlZCBieSBoaXMgYnJvdGhlciBUZXJyeSBhbmQgaGlzIGJyb3RoZXIgYW5kIHNpc3RlciBpbiBsYXcsIFdpbGxpYW0gYW5kIE11cmllbCBIYXJ3b29kLiAKSXMgdXN1YWxseSB0aGUgY2FzZSBhZnRlciBhbiBpbnRlcm5hdGlvbmFsIGZsaWdodCwgdGhlIGZpcnN0IHRoaW5nIHdlIHdhbnRlZCB0byBkbyB3YXMgc2hvd2VyLiBKZXNzIHdhcyB3YWxrZWQgaW4gb24gYnkgb25lIG9mIENocmlzdGlhbiByb29tbWF0ZXMhIHdhcyBub3QgZXZlbiBpbiB0aGUgc2hvd2VyIHlldCBidXQgaGFkIHRoZSBsdWNrIG9mIG1lZXRpbmcgaGltIGZhY2UgdG8gZmFjZSBidXR0IG5ha2VkLiAKVGhlIE5hdGlvbmFsIEhlYWx0aGNhcmVlciBBc3NvY2lhdGlvbiAoTkhBKSBpcyB0aGUgbmF0aW9uJ3MgbGFyZ2VzdCBoZWFsdGggY2FyZWVyIGNlcnRpZmljYXRpb24gcHJvdmlkZXIuIE5IQSBpcyBhIGNvbXBhbnkgd2l0aGluIEFzY2VuZCBMZWFybmluZywgYSBsZWFkZXIgaW4gcHJvdmlkaW5nIHRlY2hub2xvZ3kgYmFzZWQgZWR1Y2F0aW9uYWwsIGFzc2Vzc21lbnQsIHRlc3RpbmcgYW5kIGNlcnRpZmljYXRpb24gc29sdXRpb25zIGZvciBoZWFsdGhjYXJlIGFuZCBvdGhlciB2b2NhdGlvbmFsIGZpZWxkcy4gT3ZlciB0aGUgbGFzdCAyNSB5ZWFycywgTkhBIGhhcyBjZXJ0aWZpZWQgbW9yZSB0aGFuIDUwMCwwMDAgYWxsaWVkIGhlYWx0aCBwcm9mZXNzaW9uYWxzIHdvcmtpbmcgZGlyZWN0bHkgd2l0aCBzY2hvb2xzIGFuZCBlbXBsb3llcnMgdG8gYWNoaWV2ZSB0aGVpciBjZXJ0aWZpY2F0aW9uIGdvYWxzLiBUb2RheSwgdGhlcmUncyBtb3JlIGRlbWFuZCB0aGFuIGV2ZXIgZm9yIGhpZ2hseSBza2lsbGVkIGZyb250bGluZSBwcmFjdGl0aW9uZXJzLiBOSEEgaXMgbWVldGluZyB0aGF0IGRlbWFuZCBieSBvZmZlcmluZyBleGFtcyBhY2NyZWRpdGVkIGJ5IFRoZSBOYXRpb25hbCBDb21taXNzaW9uIGZvciBDZXJ0aWZ5aW5nIEFnZW5jaWVzIChOQ0NBKS4gSXQgaXMgb3VyIGJlbGllZiB0aGF0IHRvZ2V0aGVyLCBOSEEsIHNjaG9vbHMgYW5kIGVkdWNhdG9ycywgcHJvdmlkZXJzIGFuZCBhbGxpZWQgaGVhbHRoIHByYWN0aXRpb25lcnMgY2FuIHRyYW5zZm9ybSBoZWFsdGhjYXJlIHRocm91Z2ggZWR1Y2F0aW9uLCB0cmFpbmluZyBhbmQgY2VydGlmaWNhdGlvbiwgd2l0aCB0aGUgZ29hbCBvZiBjb25zaXN0ZW50bHkgaW1wcm92aW5nIHBhdGllbnQgb3V0Y29tZXMuCkl0IG5vdCBkaXZlcnNpdHkgdGhhdCBDYW5hZGlhbiB1bml2ZXJzaXRpZXMgYXJlIGFmdGVyIHRob3VnaCwgcHJlY2lzZWx5IHRoZSBvcHBvc2l0ZS4gSSB0aGluayBpdCBoYXMgYmVlbiBtZXJpdG9jcmFjeSBmb3IgYWRtaXNzaW9uIHByb2Nlc3MgYXQgdGhlIGxlYXN0LCB3aXRoIGdyYW50cyBiZWluZyBoYW5kZWQgb3V0IG9uIGEgbW9yZSBzdWJqZWN0aXZlIGdyb3VuZCBiYXNlZCBvbiBuZWVkcyBhbmQgcG9saXRpY2FsIG1pbm9yaXR5IHN0YXR1cy4gSXQgbWF5IGp1c3QgYmUgdGhhdCBDaGluZXNlIHN0dWRlbnRzLCBvciByYXRoZXIgZWFzdC9zb3V0aGVhc3QgYXNpYW4gc3R1ZGVudHMgYXJlIGFtb25nIHRoZSBtb3JlIHN1Y2Nlc3NmdWwgb25lcyBpbiB0ZXN0aW5nLiAKRXRpcXVldHRlOiBQbGVhc2Ugdm90ZSBvbiBzdWJtaXNzaW9ucyBiYXNlZCBvbiB3aGV0aGVyIHRoZSBjb250ZW50IGltcHJvdmVzIHRoZSBzdWJyZWRkaXQuIFBsZWFzZSB2b3RlIG9uIGNvbW1lbnRzIGJhc2VkIG9uIHRoZWlyIGNvbnRyaWJ1dGlvbiB0byB0aGUgZGlzY3Vzc2lvbiBhbmQgbm90IHNvbGVseSBvbiB3aGV0aGVyIHlvdSBhZ3JlZS4gCklmIHRoZSBtaW5kIGlzIGNocm9uaWNhbGx5IHJlc3RsZXNzIGFuZCBhZ2l0YXRlZCwgdGhlIGhlYWx0aCBvZiB0aGUgYm9keSBhbmQgc3Bpcml0IHdpbGwgYmUgYWZmZWN0ZWQuIApUaGUgdGltZSBmb3IgbWlkZGxlIG9mIHRoZSByb2FkIGNhbmRpZGF0ZXMgaXMgb3Zlci4gCkN1cmlvdXMgZXIgYW5kIEN1cmlvdXMgZXIgVGFsa2luZyBmb3IgQXdoaWxlIERpc2N1c3Npb24gQWJvdXQgQXJyZXN0ZWQgTWlkd2lmZSAoYW5kIHNob3VsZGVyIGR5c3RvY2lhKSBQb3N0cGFydHVtIEFiYW5kb25tZW50IGJ5IE1pZHdpdmVzIEFwcHJlbnRpY2VzaGlwICAgdGhlIG5vdCBzbyBnbGFtb3JvdXMgdmlldyAodW4gcHVibGlzaGVkIGFydGljbGUpIEJsb2dnaW5nIEFib3V0IENsaWVudHMgU28gTXVjaC4gTWVkaWNhbCBCb2FyZCBQaWN0dXJlcyBXaGVyZSBXYXMgST8gU2F2aW5nIEJhYmllcywgU2F2aW5nIERvbGxhcnM6IFdoeSBNaWR3aXZlcyBTaG91bGQgQmUgYSBMYXJnZXIgUGFydCBvZiBPdXIgSGVhbHRoIENhcmUgU3lzdGVtIE1vcmUgQWJvcnRpb24gVGFsayBNeSBBYnN0aW5lbmNlIE9ubHkgUGFwZXIgRGlkIHlvdSBrbm93LiBBYm9ydGlvbiBJbmZvcm1hbnQgUmV0cm9zcGVjdGlvbiBVQyAgIGFnYWluIERpc2N1c3Npb24gb2YgUG92ZXJ0eSBNZW50YWxpdHkgRG91bGEgQmlydGggVHJ1c3QgVGhvdWdodHMgQmFjayB0byBTY2hvb2wgV2VpcmQgRGF5IEhvbWUgZnJvbSBTdXJnZXJ5IFN1cmdlcnkgaW4gYSBGZXcgSG91cnMgQ2FuJy4gCkkgbWVhbiwgY29taW5nIG91dCBvbiB0b3Agb2YgYSBmaWVsZCBvZiA2LDUwMCBwbGF5ZXJzIGlzIHByZXR0eSByYXJlLiBUaGlzIHN1bW1lciB0aGUgZmlyc3QgZWlnaHQgZGF5cyBvZiB0aGUgTWFpbiBFdmVudCB3ZXJlIHBsYXllZCBvbmNlIGl0IGdvdCBkb3duIHRvIGFib3V0IDE4MCBwZW9wbGUsIEkgc3RhcnRlZCB0aGlua2luZyB0aGF0IEkgbWlnaHQgYWN0dWFsbHkgYmUgYWJsZSB0byBkbyBpdC4gCidNb29yZSdzIGxhdycgc2F5cyB0aGF0IHRoZSBudW1iZXIgb2YgdHJhbnNpc3RvcnMgb24gYSBjaGlwIHdpbGwgYXBwcm94aW1hdGVseSBkb3VibGUgZXZlcnkgMTggbW9udGhzLiBUaGlzIGhhcyBiZWVuIHRoZSBjYXNlIGZvciBtYW55IHllYXJzLCBidXQgdGhpcyBsYXcgaXMgbm93IHN0YXRlZCBtb3JlIGdlbmVyYWxseSBhcyB0aGUgcHJvY2Vzc2luZyBwb3dlciBvZiBjb21wdXRlciBpbnRlZ3JhdGVkIGNpcmN1aXRzIChDUFVzKSBkb3VibGVzIGV2ZXJ5IDE4IG1vbnRocy4gVGhpcyBjYW4gYmUgc2VlbiBhcyBtdWx0aXBsZSBjb3JlcyBhcmUgYWRkZWQgdG8gQ1BVcywgYW5kIHRoZSBjYXBhYmlsaXR5IG9mIHN1cHBvcnRpbmcgY2lyY3VpdHJ5IChzdWNoIGFzIG1lbW9yeSBhbmQgYnVzIHNwZWVkKSBpbmNyZWFzZXMuIApMaXR0bGUgYnkgbGl0dGxlIGhlIGJyb2tlIG1lIGRvd24sIGFuZCBJIGhhdmUgbm8gcHJvYmxlbSB3aXRoIHRoZSBzdG9wcGFnZS4uIApMZXQgc2F5IChIVVNORykgeW91IHBsYXlpbmcgYWdhaW5zdCBhIHBsYXllciB3aG8geW91IG5vdGljZSBmb2xkcyBhbGwgb2YgdGhlIHRpbWUgaW4gdGhlIGJpZyBibGluZCB0byBhIHNob3ZlIGZyb20gdGhlIGJ1dHRvbi4gTWF4aW11bSArRVYgd291bGQgYmUgdG8gc2hvdmUgYWxsIG9mIHRoZSB0aW1lIHdpdGggYWxsIG9mIHlvdXIgaG9sZGluZ3MuIEJ1dCB0aGlzIGlzIG5vdCBhIEdUTyBzdHJhdGVneSwgYXMgaXQgY2FuIGJlIGV4cGxvaXRlZC4gVGhlIHBsYXllciBjYW4gYWRhcHQgYW5kIHN0b3AgZm9sZGluZyAxMDAlIG9mIHRoZSB0aW1lLiBUaGlzIGlzIGFuIGltcG9ydGFudCBhc3N1bXB0aW9uIHRvIGhhdmUgYXMgd2VsbC4gVG8gbWFrZSBpdCBjbGVhciwgR1RPIGdldHMgbWlzY29uc3RydWVkIHRvIG1lYW4gYSBsb3Qgb2YgdGhpbmdzLCBpdCBpcyBqdXN0IGEgbG9uZyB0ZXJtIHVuZXhwbG9pdGFibGUgc3RyYXRlZ3kuIFlvdSBhcmUgb24gdGhlIGJ1dHRvbiwgYW5kIHlvdSBjb3ZlciB5b3VyIG9wcG9uZW50IHdobyBoYXMgMTBCQi4gWW91IGhhdmUgdG8gbWFrZSBhIGRlY2lzaW9uLCBhbmQgdGh1cyB5b3UgY3JlYXRlIGEgc3RyYXRlZ3kuIFlvdSBjaG9vc2UsIGluIHRoaXMgc2l0dWF0aW9uIHR5cGUgKEhVU05HLCBidXR0b24sIDEwYmIgZWZmZWN0aXZlKSB0byBsaW1wIDAlIG9mIHRoZSB0aW1lLCByYWlzZSB0byAyYmIgOS45OWJiIDAlIG9mIHRoZSB0aW1lIGFuZCBzaG92ZSB3aXRoIHRoaXMgcmFuZ2UgYW5kIGZvbGQgYWxsIG90aGVyIHN0YXJ0aW5nIGhhbmRzLiBXaXRoIHRoaXMgc3RyYXRlZ3ksIHlvdXIgb3Bwb25lbnQgd2lsbCBub3QgYmUgYWJsZSB0byBleHBsb2l0IHRoZSBzdHJhdGVneSBhbmQgb25seSBiZSBhYmxlIHRvIGJyZWFrZXZlbiBhZ2FpbnN0IHlvdSwgb3IgbG9zZSBpbiB0aGUgbG9uZyBydW4uClNpbmNlIG15IG1heCB3YXMgMTAsIEkgZGlkIHNvbWV0aGluZyBsaWtlIDQgNiA4IDggNiAod2hpY2ggY2hhbmdlZCBhcyBteSBtYXggaW5jcmVhc2VkIHJhcGlkbHkgZXZlcnkgd2VlaykuIApUaGVyZSBhcmUgbm8gZnJlZSBjbGluaWNzIGluIHRoZSBjaXR5IHdoZXJlIGkgbGl2ZSwgbGV0IGFsb25lIGEgcHVzaCB0byBnZXQgZXZlcnlvbmUgdmFjY2luYXRlZCBiZWNhdXNlIHRoZSB2YWNjaW5lIGl0c2VsZiBpcyBpbiBzaG9ydCBzdXBwbHkuIEFjY29yZGluZyB0byBwcmVzcyByZXBvcnRzLC4gCkluIHlvdXIgZXhhbXBsZSB0aGV5IGJvdGggbWFkZSAyIHBhaXIgUXVlZW5zIGFuZCA3J3MgbGV0cyBzYXkgLiAKVGhlIHdheXMgaGUgZnVja2VkIHdpdGggb3RoZXIgY291bnRyaWVzIGFuZCB0aGVpciBjaG9pY2Ugb2YgbGVhZGVyIHNob3VsZCBiZSB0cmllZCBhcyBpbnRlcm5hdGlvbmFsIHRlcnJvcmlzbS4gU2hpcCBoaW0gdG8gdGhlIFVrcmFpbmUgYWZ0ZXIgaGUgc2VydmVzIHRoZSBFbGxpcyBqb2tlIHNlbnRlbmNlLgpXaGF0IGlzIGEgNWMgVGhvbWFzIEplZmZlcnNvbiBzdGFtcCB3b3J0aD8KU2FuZnJhbnNpY2sgIDIxIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KT25saW5lIFBva2VyICAgTGVhcm4gdG8gUGxheSBmb3IgRnJlZSwgYW5kIHRoZSBDaGFuY2UgdG8gV2luIFJlYWwgQ2FzaCBQcml6ZXMKVGhlbiBpdCB3YXMgdGhhdCB0aGUgbW9yZSByZW5ld2FibGUgZW5lcmd5IHdlIG5lZWQsIHRoZSBtb3JlIG5hdHVyYWwgZ2FzIHdlIG5lZWQsIHRoZXJlZm9yZSB0aGUgc3Vic2lkaWVzIHRvIG5hdHVyYWwgZ2FzIGFpZCBlbGVjdHJpYyBjYXIgb3duZXJzLiAKSEFNTUVMTCwgS2VubmV0aCBKb3NlcGggS2VuIHBhc3NlZCBhd2F5IHBlYWNlZnVsbHkgb24gV2VkbmVzZGF5LCBBdWd1c3QgOSwgMjAxNyBhdCBTb3V0aCBNdXNrb2thIE1lbW9yaWFsIEhvc3BpdGFsIGluIEJyYWNlYnJpZGdlIGluIGhpcyA5NnRoIHllYXIuIENoZXJpc2hlZCBodXNiYW5kIG9mIDc0IHllYXJzIHRvIE1hcmdhcmV0IEhhbW1lbGwgKG5lZSBIdW50KS4gQmVsb3ZlZCBmYXRoZXIgb2YgSnVkeSBIdXR0b24gYW5kIGhlciBodXNiYW5kIEdhcnkgYW5kIEJyaWFuIEhhbW1lbGwgYW5kIGhpcyB3aWZlIEthdGh5LiBBZG9yZWQgYnkgc2l4IGdyYW5kZGF1Z2h0ZXJzIFNoYXluYSBIdXR0b24gKERvdWcpLCBFbGljaWEgTGFtYmVydCAoQ2FtZXJvbiksIEtyaXN0ZW4gSHV0dG9uIChKb2UpLCBHZW5uYSBOaWNob2wgKEFkYW0pLCBLYWl0bHluIEhvb3MgKENhbWVyb24pLCBDaGVsc2VhIExldmVyIChKb3NoKSBhbmQgZWlnaHQgZ3JlYXQgZ3JhbmRjaGlsZHJlbiBLZW5kb24gYW5kIE1hZGVseW5lIFpldHRsZSwgQWxleGEgYW5kIEphY2UgTGFtYmVydCwgRWxsaWUgYW5kIEF2ZXJ5IE5pY2hvbCwgSm9lIEhvb3MgYW5kIEhhZGxleSBMZXZlciBIZSB3YXMgdGhlIGZpcnN0IGJvcm4gY2hpbGQgb2YgUGVyY3kgRXJuZXN0IEhhbW1lbGwgYW5kIE1hcnRoYSBFbGxlbiBUaG9tcHNvbiBwcmVkZWNlYXNlZCBieSBoaXMgc2lzdGVyIFZpb2xldCBXb29kcyBhbmQgYnJvdGhlcnMgR2xlbiBhbmQgVG9tbXkgSGFtbWVsbC4gCkkgaGF2ZW4gYWN0aXZlbHkgdXNlZCB0aGlzIGFjY291bnQgaW4gc29tZSB0aW1lLCBvbmx5IGxvZ2dpbmcgaW4gaW50ZXJtaXR0ZW50bHkuIApFZGl0ZWQgZnJvbSBncmFtbWFyICxjbGFyaXR5IGEgc3BlbGx3cmVja2VyIHRoYXQgbmVlZHMgdG8gYmUgcHV0IGRvd24uCkl0IG9uZSB0aGluZyB0byBzYXkgeW91IGRpZG4gaW1tZWRpYXRlbHkgYm9uZCB3aXRoIHlvdXIgYmFiaWVzLiAKSXQgaXMgYSBmYWN0IHRoYXQgcmVwdWJsaWNhbnMgaGF2ZSBjb250cm9sbGVkIGEgaG91c2UgaW4gdGhlIENhbGlmb3JuaWEgU3RhdGUgTGVnaXNsYXR1cmUgYXMgcmVjZW50IGFzIDE5OTUsIHJlZ2FyZGxlc3Mgb2Ygc2xpbSBvciBub3QoVGhleSBoYWQgYSBtZXJlIDUxIGluIHRoZSBVUyBzZW5hdGUgYW5kIHdlIHNlZSBob3cgcG93ZXJmdWwgdGhhdCBpcykuIApDYXJhd2F5IGFja25vd2xlZGdlZCBxdWVzdGlvbmluZyBNaWxsZXIgYWJvdXQgd2h5IENpdHkgSGFsbCB3YXMgdGFyZ2V0aW5nIHRoZSBob3VzZS4KIkkgbG92ZSB0aGUgaXNsYW5kIGNvdW50ZXJ0b3AncyBtb3ZlbWVudCBhbmQgc3BhcmtsZSBhbmQgaG93IGl0IHRpZXMgdGhlIHdoaXRlIHBlcmltZXRlciBhbmQgZGFyayBpc2xhbmQgdG9nZXRoZXIgYW5kIGFuY2hvcnMgdGhlIGRlc2lnbi4iICBNb3JnYW4gV2VsZHJpY2tXaGlsZSB0aGUgd2hpdGUgcGVyaW1ldGVyIGNhYmluZXRzIGtlZXAgdGhlIHNwYWNlIGxpZ2h0IGFuZCBicmlnaHQsIFdlbGRyaWNrIHdhbnRlZCB0byBtYWtlIHRoZSBpc2xhbmQgdGhlIGNlbnRyZXBpZWNlIG9mIHRoZSBuZXcga2l0Y2hlbi4gCkl0IGJlbmVmaXRzIHRoZSBjaGlsZHJlbiBhcyB3ZWxsIGJlY2F1c2UgdGhpcyBtZWFucyB0aGF0IHRoZWlyIGluaGVyaXRhbmNlIGlzIHByb3RlY3RlZC4gSWYgdGhlIGhvdXNlL2Nhci9tdXR1YWwgZnVuZCBpcyBpbiB0aGUgY2hpbGQgbmFtZSB0aGVuIHRoZSBnb3Zlcm5tZW50IGNhbiBkZW1hbmQgaXQgYmUgdXNlZCBmaXJzdC4KVGhhdCBhbmQgYmVpbmcgc2F0dXJhdGVkIGluIEhvbGx5d29vZCBzaW1wbGlmaWVkIGV0aGljcywgc3VjaCB0aGF0IHdlIGZlZWwgdGhlcmUncyBzb21ldGhpbmcgZGlzaG9ub3JhYmxlIGFib3V0IGNob29zaW5nIHRoZSBsZXNzZXIgb2YgdHdvIGV2aWxzLi4gClRoZW4gaGUgcmVhbGx5IGxvc3QgaGlzIHNoaXQuIEhlIGp1c3QgYmVlbiByZWFsbHkgdW5mdW5ueSBhbmQgd2VpcmQgbGF0ZWx5LiAKU3RvbmV5IEluZGlhbiBQYXNzIGlzIGF3ZXNvbWUgb24gdGhhdCByb3V0ZSwgYW5kIG1vc3Qgb2YgRmxhdHRvcCBNb3VudGFpbiBoYXMgYmVlbiBzY2FycmVkIGJ5IGZpcmVzICh3ZXJlIHlvdSB0byBkbyB0aGUgcm91dGUgc3RhcnRpbmcgZnJvbSB0aGUgbG9vcCkuLiAKQSBsYXd5ZXIgd2lsbCBiZSBhYmxlIHRvIG5hdmlnYXRlIHRoaXMgZm9yIHlvdS4gCkRyLiBLeWxlIFBydXNzbywgdmljZSBwcmVzaWRlbnQgb2YgdGhlIFByb2Zlc3Npb25hbCBGb290YmFsbCBDaGlyb3ByYWN0aWMgU29jaWV0eSwgaXMgdGhlIHRlYW0gY2hpcm9wcmFjdG9yIGZvciB0aGUgT2FrbGFuZCBSYWlkZXJzLiBIZSBpcyBhIGdyYWR1YXRlIG9mIExpZmUgQ2hpcm9wcmFjdGljIENvbGxlZ2UgV2VzdCBhbmQgcHJhY3RpY2VzIGluIGJvdGggTGl2ZXJtb3JlIGFuZCBPYWtsYW5kLCBDYWxpZi5Eci4gCk15IE1vbSByZWFsaXplZCB3aGF0IHdhcyBoYXBwZW5pbmcgYW5kIHRvbGQgaGVyIHRvIHBsZWFzZSB0YWtlIHRoZSBiZWQgYXQgbm8gY2hhcmdlIGJlY2F1c2Ugd2UganVzdCB3YW50ZWQgc29tZW9uZSB0byB1c2UgaXQuLiAKVGhpcyBpcyB0aGUgc2FtZSBhcyB0aGUgbnVtYmVyIG9mIHBlcm11dGF0aW9ucyBvZiBOICg1MikgdGhpbmdzIHRha2VuIFAgKDMpIGF0IGEgdGltZSwgd2hpY2ggaXMgc3RhdGVkIGFzIE4hICAgUCEgKDUyICA1MSAgNTApIElmIHlvdSBkaWQgbm90IGNhcmUgd2hhdCBvcmRlciB0aGUgY2FyZHMgd2VyZSBkZWFsdCBpbiwgYnV0IHN0aWxsIHdhbnRlZCB0byBrbm93IHRoZSBwcm9iYWJpbGl0eSBvZiBnZXR0aW5nIHRoZSBBY2UsIEtpbmcsIGFuZCBRdWVlbiBvZiBTcGFkZXMsIHRoZW4geW91IHdvdWxkIGJlIHRhbGtpbmcgYWJvdXQgdGhlIGNvbWJpbmF0aW9ucyBvZiBOICg1MikgdGhpbmdzIHRha2VuIFAgKDMpIGF0IGEgdGltZSwgd2hpY2ggaXMgc3RhdGVkIGFzIChOISAgIFAhKSAvIChOICAgUCkhICg1MiAgNTEgIDUwIC8gMyAvIDIgLyAxKS4gClNjaHJlbWYgZ290IGFuIGVtZXJhbGQuQXNpZGU6IGEgbG90IG9mIHBlb3BsZSBnaXZlIGNyZWRpdCB0byBEd2lnaHQgSG93YXJkIGZvciB0aGF0IDIwMDkgcnVuLCBidXQgYmVjYXVzZSBvZiBoZWRvLCBsZXdpcywgbmVsc29uLCByZWRkaWNrIChhbmQgdGhlIGd1eSBldmVyeW9uZSBmb3JnZXRzLCBtaWthZWwgcGlldHJ1cyB3aG8gcGxheWVkIG91dCBvZiBoaXMgbWluZC4pIEhvd2FyZCBiYXJlbHkgZXZlciBnb3QgZG91YmxlZC4gCkkgZGlkbid0IGtub3cgaWYgaGUgd2FzIGdvbm5hIGNvbWUgZ2V0IG1lIG9yIG15IHNvbi4gRG9vcnMgd2VyZSBsb2NrZWQuIApJbiB0aGUgdmlkZW8sIHRoZXNlIHBlb3BsZSBza2lubmVkIGEgZG9nIGFsaXZlLCB0aGVuIGp1c3QgdGhyZXcgaXQgb250byBhIHBpbGUgb2Ygb3RoZXIgZGVhZCg/KSBkb2dzL2FuaW1hbHMuIEl0IHdhc24gZGVhZCB5ZXQsIGl0IHdhcyB0cnlpbmcgdG8gZ2V0IHVwIGJ1dCBjb3VsZG4gYW5kIHRoZSB0aGluZyBJIHJlbWVtYmVyIG1vc3Qgd2FzIGl0IGV5ZWxhc2hlcyB3ZXJlIHN0aWxsIGF0dGFjaGVkIHRvIGl0IGV5ZWxpZHMuIApGb2N1cyBvbiB0aGF0LiBIZSBkb2VzbiBsaWtlIHlvdS4gQWN0aW9ucyBzcGVhayBsb3VkZXIgdGhhbiB3b3JkcyBhbmQgaGlzIGFjdGlvbnMgc2hvdyB0aGF0IGhlIGhvbGRzIHlvdSBpbiB1dHRlciBkaXNkYWluLiBZb3UgYXJlIGEgcGVyc29uIGhlIHBsYW5zIG9uIHVzaW5nIGFzIGZhciBhcyBoZSBjYW4gd2l0aG91dCBhbnkgY29uc2VxdWVuY2Ugb3Igb2JsaWdhdGlvbi4gRG9uIGxldCBoaW0gZG8gaXQgYW55bW9yZS4gWW91IGZlZWwgbGlrZSBob2xkaW5nIG91dCBob3BlIGJlY2F1c2UgaGUgYW4gZXhwZXJ0IGF0IG1hbmlwdWxhdGluZyB5b3VyIGZlZWxpbmdzIHRvIGhpcyBiZW5lZml0LiBTdGFydGluZyB0b2RheSwgc3RhcnQgZm9jdXNpbmcgb24gd2hhdCBpcyBnb29kIGZvciB5b3UuIEF0IGZpcnN0IHlvdSBmZWVsIGVtcHR5IGFuZCBzYWQsIGJ1dCB0aGF0IGVtcHRpbmVzcyBpcyBnb29kLiBPbmNlIHlvdSBmbHVzaCB0aGlzIGd1eSBvdXQgb2YgeW91ciBsaWZlLCB5b3UgY2FuIGZpbGwgdGhhdCBzcGFjZSB3aXRoIGdvb2QgdGhpbmdzLiBIb2JiaWVzIHlvdSBsb3ZlLCBwZW9wbGUgd2hvIGFjdHVhbGx5IGxvdmUgeW91IGFuZCBhcmUgZ29vZCB0byB5b3UuCkl0IGZpdCB0aGUgc2VkdWN0aXZlIGltYWdlIG9mIHN3aW5nZXJzIEknZCBjb25jb2N0ZWQgaW4gbXkgbWluZC4uIApBbGwgYXQgdGhlIHNhbWUgdGltZS4gCldoYXQgSSBhc2sgbXkgZnJpZW5kcyBpcywgZG8geW91IHRoaW5rIHlvdXIgd29ydGh5IGFuZCBvcGVuIHRvIGZpbmRpbmcgbG92ZSByaWdodCBub3c/IEluIG15IG9waW5pb24sIEkgdGhpbmsgdGhhdCBxdWVzdGlvbiBpcyBtb3JlIHRlbGxpbmcgdGhhbiBpZiB5b3UgbG92ZSB5b3Vyc2VsZiBvciBub3QuIApUYWxraW5nIGFib3V0IE1hcmNvIFJ1YmlvJ3MgcG9zaXRpb24gb24gaW1taWdyYXRpb24sIFRydW1wIGRlc2NyaWJlZCB0aGVGbG9yaWRhIHNlbmF0b3IgYXMgIndlYWssIGxpa2UgYSBiYWJ5LCBsaWtlIGEgYmFieSIgYW5kICJub3QgYSBnb29kIHBva2VyIHBsYXllciBiZWNhdXNlIGV2ZXJ5IHRpbWUgaGUncyB1bmRlciBwcmVzc3VyZSBoZSBzdGFydHMgdG8gcHJvZnVzZWx5IHN3ZWF0Ii4KMTIsIDIwMTggYXQgSEFMTydzIGhhbmdhciBhdCB0aGUgYWlycG9ydC4gCk5hdHR5TGlnaHROYXR0eUxpZmUgIDE3IHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkthYmFkZGkgaXMgYSBodWdlbHkgcG9wdWxhciB0cmFkaXRpb25hbCBnYW1lLiBBcmUgZ2V0dGluZyBmYW1lIGFuZCBtb25leSBmcm9tIGhlcmUgYW5kIGluIGZ1dHVyZSBib3hlcnMgcmVwcmVzZW50aW5nIEluZGlhIGluIHRoZSBPbHltcGljcyB3aWxsIGdvIGZyb20gdGhlIGFtYXRldXIgYXMgd2VsbCBhcyB0aGUgcHJvZmVzc2lvbmFsIGNpcmN1aXQuIE9mIHRoZXNlIGluZGVwZW5kZW50IGxlYWd1ZXMgYXJlIGltcHJvdmluZyB0aGUgcXVhbGl0eSBhbmQgYnJlYWR0aCBvZiBzcG9ydCBpbiBJbmRpYSwgYW5kIG9mZmVyaW5nIHlvdW5nIGhvcGVmdWxzIGEgcGxhdGZvcm0gdG8gc2hvd2Nhc2UgdGhlaXIgdGFsZW50IGJleW9uZCB0aGUgbmF0aW9uYWwgZml4YXRpb24gb24gY3JpY2tldC4uIApUaGUgTWFycmlvdHQncyBzcGEgaXMgcnVuIGJ5IE1hbmRhcmEsIHRoZSBCYWxpIGJhc2VkIHNwYSBjb21wYW55LiAKSXQgbWF5IGhhdmUgYWxyZWFkeSBiZWVuIHNhaWQsIGJ1dCByZTogbWFzdHVyYmF0aW9uLCBpdCdzIG9mdGVuIG11Y2ggbW9yZSB0aGUgaGVhZHNwYWNlIHRoYXQgbWF0dGVycyB0aGFuIHRoZSBhY3R1YWwgdG91Y2hpbmcuIEkgd291bGQgZW5jb3VyYWdlIHlvdXIgd2lmZSB0byB0aGluayBhYm91dCB3aGF0IHN0b3J5bGluZXMvc2l0dWF0aW9ucy9vdXRmaXRzL2R5bmFtaWNzIGV0Yy4gdHVybiBoZXIgb24gbGlrZSB3aGVuIF9fX19fIGlzIGhhcHBlbmluZyBpbiBhIG1vdmllIGFuZCBzaGUgZ2V0cyB0aW5nbHkgd2hhdCdzIGluIHRoYXQgYmxhbms/IFRoZW4gbG9vayBmb3Igc29tZSBlcm90aWNhIChub3QgcG9ybiwgYnV0IHdyaXR0ZW4gbWF0ZXJpYWwgYm9va3Mgb3IgZmFuZmljKSB3aXRoIHRob3NlIHRoZW1lcywgc3BlbmQgc29tZSByZWxheGVkLCBsb3cgcHJlc3N1cmUgdGltZSBieSBoZXJzZWxmIHJlYWRpbmcsIGFuZCBzZWUgaWYgbWFzdHVyYmF0aW9uIGhhcHBlbnMgZnJvbSB0aGVyZS4gU2hlIGNvdWxkIHZlcnkgbGlrZWx5IHRoZW4gYWNjaWRlbnRhbGx5IGxlYXJuIHdoYXQga2luZHMgb2YgdG91Y2hlcywgcHJlc3N1cmVzLCBtb3ZlbWVudHMsIGV0Yy4gaGVyIGJvZHkgd2FudHMgaW4gdGhlc2UgbW9tZW50cy4gVGhlIHRyaWNrIGlzIHRvIGRvIGl0IGFsb25lIChhdCBmaXJzdCwgZm9yIGEgd2hpbGUsIHRpbGwgc2hlIHdhbnRzIHRvIHNoYXJlKSwgYmUgY2hpbGwgYW5kIGxvdyBwcmVzc3VyZSwgYW5kIGdpdmUgaXQgbG90cyBvZiB0aW1lIQpOb3Qgc3VyZSB3aGF0IHJvdXRlIHRoZXkgdGFrZSB0aGVyZS4gTWF5YmUganVzdCBleHBhbnNpb25zIGFuZCByb3RhdGlvbi4gUGxlYXNlLCBuZXZlciByZXByaW50ICJDaGVhdGluZyBEZWF0aCIuIApTdXJyb2dhY3kgdG91cmlzbSBoYXMgZ3Jvd24gc3RlYWRpbHkgaGVyZSBhcyB3b3JkIGdldHMgYXJvdW5kIHRoYXQgYmFiaWVzIGNhbiBiZSBpbmN1YmF0ZWQgYXQgYSBsb3cgcHJpY2UgYW5kIHdpdGhvdXQgZ292ZXJubWVudCByZWQgdGFwZS4gCkNQQUMgaGFzIGFsd2F5cyBiZWVuIHdvbmRlcmZ1bCBpbiBpdHMganVtYmxlIG9mIGNvbXBldGluZyBpc3N1ZSBncm91cHMgYWxsIGpvc3RsaW5nIGZvciBhdHRlbnRpb24uIEFuZCBpdCBjZXJ0YWlubHkgaGFzIHNlZW4gc2ltaWxhciB0ZW5zaW9ucyBpbiB5ZWFycyBwYXN0OiB0aGlzIGlzIHRoZSBzZWNvbmQgeWVhciB0aGF0IHRoZSBQb2tlciBBbGxpYW5jZSBoYXMgc2V0IHVwIHNob3AgYXQgQ1BBQy4gQnV0IGl0IHdhcyBzdHJpa2luZyB0byBzZWUgaW4gc3BlZWNoIGFmdGVyIHNwZWVjaCBtYW55IG9mIHRoZSB3ZWRnZSBpc3N1ZXMgdGhhdCBzbyBwcmVvY2N1cGllZCB0aGUgbW9zdCByZWNlbnQgR09QIG1ham9yaXR5ICAgVGVycnkgU2NoaWF2bywgYWJvcnRpb24sIHN0ZW0gY2VsbHMsIGdheXMsIGZhbWlseSB2YWx1ZXMsIHJlbGlnaW9uIGluIGdvdmVybm1lbnQgICBzdWJsaW1hdGVkIHRvIHRoZSBHT1AncyBsYXNlciBsaWtlIGZvY3VzIG9uIHRoZSBlY29ub215IGFuZCB0byBzZWUgdGhlIENQQUMgYXR0ZW1wdHMsIGFzIHdpdGggR09Qcm91ZCwgdG8gd2lkZW4gdGhlaXIgdGVudC4uIApBdCB0aGlzIHBvaW50IHlvdSBqdXN0IHBsYXkgb2ZmIG9mIHRoZSByb2NrIHRlbGxzLiBZb3UgZ290IHRvIHJlbWVtYmVyIHRoYXQgdGlnaHQgcG9rZXIgcGxheWVycyBhcmUgdXN1YWxseSB0aWdodCBiZWNhdXNlIHRoZXkgZG9uIGxpa2UgbG9zaW5nIG1vbmV5IGFuZCB0aGV5IGxpa2UgcG9rZXIgdG8gYmUgYSBtZWNoYW5pY2FsIGdyaW5kIHNsb3dseSBpbmNyZWFzaW5nIHRoZWlyIGJhbmtyb2xsLiAKRGlzY3JldGl6ZSBpcyBqdXN0IG1pbiBtYXhpbmcgaXQgZm9yIHBlb3BsZSB3aG8gY2FuIGFmZm9yZCBpdC4gCkhhd3Rob3JuJ3MgMTY1IG1hY2hpbmVzLCBzcHJlYWQgb3ZlciB0d28gdmVudWVzIGluIHRoZSBlYXN0IGFuZCB3ZXN0IG9mIE1lbGJvdXJuZSwgd2VyZSB0aGUgbW9zdCBwcm9maXRhYmxlLCBtYWtpbmcgJDI0LjMgbWlsbGlvbiBmb3IgdGhlIGNsdWIuCk5jZWxpa2xlIGVlciBtYWFsIGFsYW5zYW4gYmVsaXJsaSBiaXIgdGVjcmJleWUgdmUgeWFhIGdlbG1pIG9sbWFuIGFydCBnaWJpIGJpciBleS4gClR1cm5zIG91dCBJIHdhcyBub3QgZmFjdG9yaW5nIGluIFNTIHRheCBhbmQgTWVkaWNhcmUgZm9yIHRoZXNlIGJvbnVzZXMuClRoZSBkaXNhZHZhbnRhZ2UgaXMgdGhhdCBieSBub3QgYWNjdW11bGF0aW5nIGNoaXBzIGVhcmx5IHlvdSBvZnRlbiBmaW5kIHlvdXJzZWxmIG5lZWRpbmcgdG8gImRvdWJsZSB1cCIgaW4gdGhlIG1pZGRsZSBzdGFnZXMgb2YgdGhlIHRvdXJuYW1lbnQuIApZZXMuIEl0IHdhc24ndCBhbGwgY2FzaC4gCldoZW4gSSBzZWUgc29tZW9uZSBmaWdodGluZyB3aXRob3V0IGhlciBpdCBhbG1vc3QgbGlrZSB0aGVpciBnYW1lIGlzIGluIHNsb3cgbW8sIHRoYXQgYmVpbmcgc2FpZCBpdCBhbG1vc3QgaW1wb3NzaWJsZSB0byBmaWdodCBtYW51YWxseSB3aXRoIGhlciBvbiB5b3VyIHRlYW0uIApUaGUgcGl0Y2ggQSBmZXcgbW9udGhzIGFmdGVyIGxhdW5jaGluZyBhIGJldGEgdmVyc2lvbiBvZiBDdXN0b20gVGF0dG9vIERlc2lnbiwgYSB3ZWJzaXRlIGNvbm5lY3RpbmcgY29uc3VtZXJzIHdpdGggdGF0dG9vIGFydGlzdHMgdG8gY3JlYXRlIG9uZSBvZiBhIGtpbmQgdGF0dG9vcywKU2hlIGlzIGp1c3QgYSBwb2xpdGljYWwgdGhvcm4gaW4gdGhlIHNpZGUgb2YgYSBwcm9ncmFtIGRlc2lnbmVkIHRvIGFzc2lzdCBib3lzIGZvciAxMCsgeWVhcnMuIApUaGUgdmVudWUgbWFrZXMgYXZhaWxhYmxlLCBhbmQgdGhlIHN0YWZmIGFyZSB0cmFpbmVkIHRvIG9mZmVyIGN1c3RvbWVycywgaW5mb3JtYXRpb24gdG8gYXNzaXN0IHRoZW0gaW4gdGhlaXIgZGVjaXNpb24gdG8gZ2FtYmxlIGluY2x1ZGluZyBpbmZvcm1hdGlvbiBndWlkZXMsIHNpZ25hZ2UgYW5kIGhlbHAgc2VydmljZXMgYW5kIDI0IGhvdXIgY291bnNlbGxpbmcgc2VydmljZXMuClBhcnQgRm91ciB3YXMgc28gaWxsdW1pbmF0aW5nLiAKSGUgYXNrZWQgd2hhdCBJIGZlZWwgY29tZm9ydGFibGUgYWJvdXQgaGltIHNwZW5kaW5nIG9uIGEgcmluZywgYW5kIHdlIGJvdGggdGhpbmsgdGhhdCAkNTAwIGlzIGJvdGggYnVkZ2V0IGZyaWVuZGx5LCBhbmQgc29tZXRoaW5nIHdlIGJvdGggc3RpbGwgYmUgcHJvdWQgb2YsIGFuZCBJIGJlIGhhcHB5IHRvIHdlYXIgZXZlcnkgZGF5IGZvciB0aGUgcmVzdCBvZiBteSBsaWZlIChoaXMgcmluZyB3aWxsIHByb2JhYmx5IGJlIGFyb3VuZCAkMjUwKS4uIApVbmRlciBOSiBzdGF0ZSBsYXcgYmFjayB0aGVuLCB0aGlzIHdhcyBjb25zaWRlcmVkIGEgcmVwcmlldmUgZnJvbSBHb2QsIGFuZCBoZSBnb3QgZnJlZWQuIFNvbWVob3csIGhlIGdldHMgaGlzIG9sZCBqb2IgYmFjaywgYW5kIGhlIHdvcmtpbmcgd2hlbiBoZSBzZWVzIGEgZ2lybCBzdGljayBoZXIgZ3VtIG9uIHRoZSBiYWNrIG9mIGEgc2VhdC4gCldlbGwgSSBzdGFydCBieSBzYXlpbmcgaW4gbXkgdG93biB0aGVyZSBpc24gYW55dGhpbmcgZGFyayB0aGF0IGhhcHBlbmVkIHRoYXQgcGVvcGxlIGRvbnQgdGFsayBhYm91dC4gdGhleSB0YWxrIGFib3V0IGV2ZXJ5dGhpbmcuIEl0IGdldHMgcmVhbGx5IGJvcmluZyBoZXJlIGluIHRoZSB3aW50ZXIuClRyYW5zbGF0aW9uOiBEb24ndCBsZXQgUmljayBXYWdvbmVyIHJpZyB0aGUgc3R1ZHkuClllc3RlcmRheSwgdGhlIE9yYW5nZSBDb3VudHkgRGlzdHJpY3QgQXR0b3JuZXkgaGVsZCBhIHByZXNzIGNvbmZlcmVuY2UgdG8gd2FybiB0aGUgY29tbXVuaXR5IChhYm91dCkuIEVuZ2xhbmQsIDY1LCB3aG8gc3BlbnQgMjkgeWVhcnMgYXMgYSBmdWdpdGl2ZSBhZnRlciBiZWluZyBmb3VuZCBndWlsdHkgb2Ygc2V4dWFsbHkgYXNzYXVsdGluZyB0aHJlZSBmZW1hbGUgY2hpbGRyZW4sIGFsc28gZm9yIDExIHllYXJzIG1vbGVzdGVkIEphY2tpZSBadWRpcywgd2hvbSBoZSBwdXJjaGFzZWQgZnJvbSBoZXIgbW90aGVyIGluIFZpZXRuYW0gaW4gdGhlIDE5NzBzIGFuZCBjbGFpbWVkIHdhcyBoaXMgYWRvcHRlZCBkYXVnaHRlci4gClRoZSB2aWRlbyBzaG93cyB0aGF0IG5vdCB0aGUgY2FzZS4gVGhlIHN5c3RlbXMgZmFjdG9yeSBmaW5pc2ggaXMgc3Vib3B0aW1hbCwgdGhhdCBkb2VzIG5vdCBtZWFuIHRoZSBzeXN0ZW0gaW5jb25zaXN0ZW50LiBJZiB0aW1lIHdhcyBpbmhlcmVudCBpbmNvbnNpc3RlbnQsIHlvdSB3b3VsZG4gc2VlICsvIDMgb3ZlciB0aGUgQ2hyb25vLiAKSXQgb25seSB3aGVuIHlvdSBsb3NlLCB5b3UgY2FuIHJlZmxlY3Qgb24geW91ciBkZWNpc2lvbnMgYW5kIHRoaW5rIG1vcmUgcmF0aW9uYWwuIApBbmQgbm93IEkgcmVtaW5kZWQgb2YgdGhlIHRpbWUgd2hlbiBhcHBhcmVudGx5IG15IGZhbWlseSB3YXMgdGhlIG9ubHkgZmFtaWx5IG9uIG15IGNvdXNpbiBzaWRlIHRoYXQgY291bGQgYXR0ZW5kZWQgaGVyIGRhdWdodGVyIDFzdCBiaXJ0aGRheSwgYnV0IG1hZGUgYW4gZXhjdXNlIHdoeSB3ZSBjb3VsZG4gZ28gKGhvbmVzdDogSXQgd2FzIHN1cHBvc2VkIHRvIGJlIG9uIGEgU3VuZGF5IGFmdGVybm9vbiwgY2xvdWR5L3JhaW55LCAyIGhyIGRyaXZlKSBzbyBvbmx5IG9uZSBwZXJzb24gd2VudCBmcm9tIG15IGNvdXNpbiBzaWRlLiBMb29raW5nIGJhY2ssIEkgZmVlbCBiYWQuIEkgZG9uIHJlbWVtYmVyIGlmIHdlIGluaXRpYWxseSBzYWlkIHllcywgYnV0IEkgY291bGQgYmVlbiBsZXNzIGxhenkgYW5kIGdvdCB1cCBhbmQgZ29uZS4gMSBwb2ludCAgc3VibWl0dGVkIDIwIGRheXMgYWdvClllcyEgQnR3IGluIHRoZSB0aXRsZSAiZmlyc3QgcmVhbCB1c2UgY2FzZSIgSSBtZW50IGEgZ2VuZXJhbCBzdGF0ZW1lbnQ6ICJmaXJzdCByZWFsIHVzZSBjYXNlIG9mIGFueSBibG9ja2NoYWluIHRlY2hub2xvZ3kiLiAKSmUgdm91cyBzb3VoYWl0ZSB1bmUgYm9ubmUgam91cm5lICEgICBNYXJpZSBDaHJpc3RpbmUuIApCZXlvbmQgdGhhdCwgaXQgcmVhbGx5IGNhbiBoZWxwIGlkZW50aWZ5IGxlYWtzIGluIHlvdXIgb3duIGdhbWUgdGhhdCBuZWVkIHRvIGJlIGNvcnJlY3RlZCBiZWZvcmUgeW91IGNhbiBtb3ZlIG9uIHRvIHRoZSBuZXh0IGxldmVsICAgd2hhdGV2ZXIgdGhhdCBtYXkgYmUuLiAKSWYsIGhvd2V2ZXIsIEkgdGVsbCB5b3UgdGhhdCBJIGhhdmUgYW4gaW52aXNpYmxlLCBmaXJlIGJyZWF0aGluZyBkcmFnb24gaW4gbXkgZ2FyYWdlLCB5b3Ugd291bGQgbm8gZG91YnQgcmVxdWlyZSBzb21lIHNpZ25pZmljYW50IGV2aWRlbmNlIGJlZm9yZSBhY2NlcHRpbmcgbXkgd29yZC4uIAo0ODE0IENoaWNhZ28gQXZlLiwgTWlubmVhcG9saXM7IDYxMiA4MjIgODA4MC4gCk9yIGEgcGh5c2ljaWFuIHRvIGJlbGlldmUgdGhlIHBlcnNvbiBhZmZlY3RlZCBqdXN0IG1pZ2h0IGtub3cgd2hhdCBoYXBwZW5lZCB0byB0aGVpciBPV04gYm9keS4gCkF1Y2ggR2xlaXRjcmVtZXM/IiAgICJOZWluIi4gClRoZXkgYXJlIHRyeWluZyB0byBtYWtlIGEgbmFtZSBmb3IgdGhlbXNlbHZlcyBhcyAid2lubmluZyIgcHJvc2VjdXRvcnMsIHBlcmhhcHMgdG8gbWF5YmUgY2xpbWIgdGhlIGxhZGRlciB0byBiZWNvbWUgRmVkZXJhbCBqdWRnZXMuIEl0IGEgbG9uZyBzaG90IGluIG1vc3QgY2FzZXMgcHJvYmFibHksIGJ1dCB0aGVyZSB6ZXJvIHJpc2suIEVpdGhlciB0aGV5IGdldCBhd2F5IHdpdGggaXQgb3IgdGhleSBnZXQgY2F1Z2h0LCBidXQgZXZlbiBpZiB0aGV5IGdldCBjYXVnaHQsIHRoZXkga25vdyBub3RoaW5nIGNhbiBoYXBwZW4gdG8gdGhlbS4gSXQgdHdpc3RlZC4KTWF5YmUgaWYgd2UgcmlwIG91dCB0aGUgdGVybXMgIm1vdGhlcmx5IiBhbmQgImZhdGhlcmx5IiBhbmQgcmVwbGFjZSB0aGVtIHdpdGggZW1wYXRoeSB0aGF0IHJlc3VsdHMgaW4gc2hvcnQgdGVybSBjb21mb3J0IHZlcnN1cyBlbXBhdGh5IHRoYXQgcmVzdWx0cyBpbiBoYXJkIGNob2ljZXMgYW5kIGRlbGF5ZWQgZ3JhdGlmaWNhdGlvbi4gSSB0aGluayBvcCBhdCBsZWFzdCBoYXMgYSBwb2ludCB0aGVyZTogd2UgZ2FybmVyIGFuZCBkaXN0cmlidXRlIHRvbyBtdWNoIG9mIHRoZSBjb2RkbGluZywgYW5kIG91ciBzb2NpZXR5IG1heSBiZSBvbiB0aGUgdmVyZ2Ugb2YgYSBzdHJ1Z2dsZSBkZWZpY2l0LiAKMS4gQXQgbGVhc3QgMTUgcGVvcGxlIGluIHRoaXMgd29ybGQgbG92ZSB5b3UgaW4gc29tZSB3YXkuCkFsd2F5cyBzZWVrIHBlb3BsZSdzIHJldmlld3MsIHJlYWQgb25saW5lIGZvcnVtcyBhbmQgbmV3cywgd2hpY2ggd2lsbCBnaXZlIHlvdSBlbm91Z2ggaWRlYSBvbiBicmFuZCBpbWFnZSBvZiB0aGUgd2Vic2l0ZS4uIApSdXNzaWEgZGlkIGRvIG1vc3Qgb2YgdGhlIHdvcmsgYmVhdGluZyB0aGUgTmF6aSBidXQgdGhlcmUgaXMgbm8gaW5kaWNhdGlvbiB0aGV5IHdvdWxkIGJvdGhlcmVkIHRvIHN0b3Agdy9vIGEgZnJlc2ggZm9yY2UgaG9sZGluZyB0aGUgb3RoZXIgaGFsZiBvZiBFdXJvcGUgKGFzIGV2aWRlbmNlZCBieSBmYWN0IHRoYXQgdGhlIElyb24gQ3VydGFpbiBiZWNhbWUgYSB0aGluZykuIE1lbiBhbmQgbWF0ZXJpYWwgYWxzbyBrZXB0IHlvdSBmcm9tIGJlaW5nIHJ1biBvdmVyIGluIHRoZSBibGl0ei4gV2hpbGUgbW9zdCB0aGlua2luZyBvbiBTZWEgTGlvbiB3YXMgdGhhdCBpdCBwcm9iYWJseSB3b3VsZG4gaGFkIGxvbmcgdGVybSBzdWNjZXNzLCBJIHRoaW5rIGl0IGNvdWxkIGJlZW4gdGhlIGJvZHkgYmxvdyBuZWNlc3NhcnkgdG8gZm9yY2UgYSBwZWFjZS4gVGhpcyBpcyBzb21lIGFybWNoYWlyIHBvbmRlcmluZyB0aG91Z2gsIEkgYW4gZW50aHVzaWFzdCwgbm90IGEgcHJvZmVzc2lvbmFsIGhpc3Rvcmlhbi4KQWRkaXRpb25hbGx5LCB0aGV5IGNhbm5vdCBiZSBwdXJjaGFzZWQgYXQgYW55IHJldGFpbGVyLiAKU3VwdW4sIGEgMzIgeWVhciBvbGQgbmF0aXZlIG9mIENvbG9tYm8sIFNyaSBMYW5rYSwgd2hvIGhhcyBsYW5ndWlzaGVkIGluIEhvbmcgS29uZydzIHJlZnVnZWUgc3lzdGVtIHNpbmNlIDIwMDUsIHRvb2sgYSBjYWxsIGluIGEgY3JhbXBlZCAxNTAgc3F1YXJlIGZvb3QgYXBhcnRtZW50IGhlIHNoYXJlZCB3aXRoIGhpcyBwYXJ0bmVyIE5hZGVla2EgYW5kIG9uZSB5ZWFyIG9sZCBkYXVnaHRlciBTdXdhc2lzdGlraS4gCkxvbmcgYmVmb3JlIG9ubGluZSBwb2tlciB3YXMgdGhlICJpbiIgdGhpbmcsIHBlb3BsZSB3aG8gbG92ZSBwb2tlciB3b3VsZCBoYXZlIHRvIGZseSB0byBMYXMgVmVnYXMsIGNoZWNrIGludG8gYSBob3RlbCwgcGF5IGZvciBtZWFscyBhbmQgZHJlc3MgdXAganVzdCB0byBwbGF5IHBva2VyIGluIG9uZSBvZiB0aGUgY2FzaW5vcyBhdmFpbGFibGUuIE5vdCBvbmx5IHRoYXQsIGJ1dCB0aGV5IGhhdmUgdG8gcGxheSB3aXRoIHRoZWlyIHJlYWwgbW9uZXkuIApJIGhvcGluZyB0aGlzIG1pZ2h0IGJlIGEgZGV0ZXJyZW50LiBObyB3YXkuLiAKWW91IHZpc3VhbGl6aW5nIGEgc29jaWV0eSBhbmQgY3VsdHVyZSB3ZSBzaG91bGQgZGVmaW5pdGVseSBzdHJpdmUgZm9yLiBJIHdob2xlaGVhcnRlZGx5IGFncmVlIHdpdGggeW91IHRoZXJlLiBUaGVyZSBubyByZWFzb24gdG8gdGhpbmsgaHVtYW5zIGFyZW4gY2FwYWJsZSBvZiBzdXN0YWluaW5nIDEwIGJpbGxpb24gcGVvcGxlIG9uIEVhcnRoLiBCdXQgaXQgZG9lc24gZXhpc3QgeWV0LiBPdmVycG9wdWxhdGlvbiBkb2VzIHNoYXJlIHNvbWUgb2YgdGhlIGJsYW1lIGZvciB0aGUgcHJvYmxlbXMgd2UgZmFjZSB0b2RheS4gSSBhbSBub3QgcHJvbW90aW5nIGEgImZpeCIgdG8gb3ZlcnBvcHVsYXRpb24gb3IgYW55dGhpbmcgb3V0cmFnZW91cyBsaWtlIHRoYXQsIGl0IGp1c3QgdGhlIHJlYWxpdHkgb2YgdGhlIGNpcmN1bXN0YW5jZXMuCkkgdGhpbmsgc2hlIGtub3dzIHNoZSB3YXMgcmFwZWQsIHNoZSBqdXN0IGZlZWxzIHJlc3BvbnNpYmxlLiBJIHRoaW5rIHRoZXkgZG8gYSByZWFsbHkgZ3JlYXQgam9iIGluIHRoZSBib29rIGFuZCB0aGUgc2VyaWVzIG9mIHNob3dpbmcgaG93IGl0IGFmZmVjdGVkIGhlciBzZXh1YWxseSAgbGlrZSB3aXRoIGhvdyBpdCB3YXMgZWFzaWVyIGZvciBoZXIgdG8gYmUgZmluZ2VyZWQgYnkgUmljaGFyZCB0aGFuIGtpc3NlZCBieSBoaW0gYW5kIGhvdyBpdCBzZWVtcyBzaGUgY2FuIG9ubHkgbWFzdHVyYmF0ZSB3aGVuIHNoZSBoYXMgZmxhc2hlcyBvZiB0aGUgY2FiaW4uLiAKTWF0dF9TaGF0dCAgNDM4IHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkRlciBTYWZ0aGVyc3RlbGxlciBkcmVpIERyZmVyIHdlaXRlciBicmF1Y2h0IGRyaW5nZW5kIEVybnRlaGVsZmVyIGRpZSA4IFN0dW5kZW4gbGFuZyBwZmVsIHBmbGNrZW4/ICAgTmVobWVuIHdpciBkb2NoIGRlbiBJVGxlciwgaXN0IHp3YXIgbml4IG1pdCBJVCwgYWJlciBwZmxja2VuIGtubmVuIHdpcmQgZGVyIGF1Y2guIFVuZCB3ZW5uIGRhcyBydW0gaXN0LCBrb21tdCBlciB6dW0gRmxlaXNjaGFiZmxsZSBzb3J0aWVyZW4gaW4gZGllIE1ldHpnZXJlaSBvZGVyIGVyIG1odCBkZW4gUmFzZW4gZGVyIHN0ZHRpc2NoZW4gR3JuZmxjaGVuLlNvbGx0ZXN0IGR1IGRpY2ggaW4gZGVyIEJ1ZGUgaW4gZGllIGR1IGdlc2NoaWNrdCB3aXJzdCB3b2hsIGZobGVuIHVuZCBkaWUgbWNodGVuIGRpY2ggYXVjaCwga2FubiBlcyBzZWluLCBkYXNzIGRpZSBCdWRlIGRhbm4gQWJsc2UgYW4gZGllIFplaXRhcmJlaXRzZmlybWEgemFobGVuIG11c3MsIG9mdCBpc3QgZGFzIG5pY2h0IHdlbmlnIEdlbGQgdW5kIGdlcm5lIGVpbiBHcnVuZCBkZW4gQXJiZWl0ZXIgZGFubiBuaWNodCB6dSBiZXJuZWhtZW4uS2FlcHRuX0xlQ2h1Y2sgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb1p1ZGVtIGthbm4gZGljaCBkaWUgWmVpdGFyYmVpdHNmaXJtYSB2b24gaGV1dGUgYXVmIG1vcmdlbiBhdWNoIHdvIGFuZGVycyBlaW50ZWlsZW4sIGplIG5hY2hkZW0gd2llIHNpZSBCb2NrIGhhYmVuLiBEZXIgU2FmdGhlcnN0ZWxsZXIgZHJlaSBEcmZlciB3ZWl0ZXIgYnJhdWNodCBkcmluZ2VuZCBFcm50ZWhlbGZlciBkaWUgOCBTdHVuZGVuIGxhbmcgcGZlbCBwZmxja2VuPyAgIE5laG1lbiB3aXIgZG9jaCBkZW4gSVRsZXIsIGlzdCB6d2FyIG5peCBtaXQgSVQsIGFiZXIgcGZsY2tlbiBrbm5lbiB3aXJkIGRlciBhdWNoLiAKVGhlIGVkZ2UgeW91IGhhdmUgaXMgdGhhdCAzIGNoaXBzIGRvZXNuIG1hdHRlciB0byB5b3UsIHdoZXJlYXMgaXQgYSBtYXNzaXZlIGludmVzdG1lbnQgZm9yIGEgMTUgY2hpcCBzdGFjay4gQnV0IHJpc2tpbmcgMTUgY2hpcHMgdXN1YWxseSBkb2VzIHN0YXJ0IHRvIG1hdHRlciB0byB5b3UuIApXaGljaCByZWNlbnRseSBsYXVuY2hlZCBhIG5ldyBzb2NpYWwgbmV0d29yayBjYWxsZWQgR29vZ2xlKyB0byBjb21wZXRlIHdpdGggRmFjZWJvb2ssIHdvdWxkIHNlZW0gdG8gYmUgYSBuYXR1cmFsIGRpdmVyc2lmaWNhdGlvbiBvcHRpb24gZm9yIFp5bmdhLiBIb3dldmVyLCBaeW5nYSB3b3VsZCBzdGlsbCBiZSBkZXBlbmRlbnQgb24gd2hhdCBDbGVtb25zIGNhbGxzIHBhcmFsbGVsIG1vbm9wb2xpZXMuIFRoYXQgaW4gZml2ZSB5ZWFycywgdGhlIHdvcmxkIGlzIDUwJSBHb29nbGUgYW5kIDUwJSBGYWNlYm9vaywgQ2xlbW9ucyBzYXlzLiAKUGVubnpvaWwgT2lsIDQwMCBhdCBMYXMgVmVnYXMgMyAzIDE5TW9uc3RlciBFbmVyZ3kgTkFTQ0FSIEN1cCBTZXJpZXMgICBQZW5uem9pbCBPaWwgNDAwTEFTIFZFR0FTLCBOViAgIE1BUkNIIDAzOiBLZXZpbiBIYXJ2aWNrLCBkcml2ZXIgb2YgdGhlIDQgSmltbXkgSm9obidzIEZvcmQsIGFuZCBEZW5ueSBIYW1saW4sIGRyaXZlciBvZiB0aGUgMTEgRmVkRXggT2ZmaWNlIFRveW90YSwgbGVhZCB0aGUgZmllbGQgdG8gZ3JlZW4gZm9yIHRoZSBzdGFydCBvZiB0aGUgTW9uc3RlciBFbmVyZ3kgTkFTQ0FSIEN1cCBTZXJpZXMgUGVubnpvaWwgT2lsIDQwMCBhdCBMYXMgVmVnYXMgTW90b3IgU3BlZWR3YXkgb24gTWFyY2ggMywgMjAxOSBpbiBMYXMgVmVnYXMsIE5ldmFkYS4gCkJsb29kLG9uIG90aGVyIGhhbmQgaXMgZGlzdHJpYnV0ZWQgZm9yIGZyZWUgYnkgaG9zcGl0YWwgdGhlcmVmb3JlIHlvdSBkb25hdGUgaXQgZm9yIGZyZWUuIApEZW1hY29yZ2luICAxLDgwNiBwb2ludHMgIHN1Ym1pdHRlZCA1IGRheXMgYWdvCk5vdCBzYXlpbmcgdGhlIHNpbGVuY2UgZG9lc24gc3VjaywgSSB3b3VsZCB0aGluayBpdCB3b3VsZCwgYnV0IGlmIHlvdSByZWFsbHkgYXJlIHNvIGNvbnNpZGVyYXRlLCBjb25zaWRlciB3aGF0IG1heSBiZSB0aGUgcmVhc29uIGZvciBhIHdvbWFuIG9yIGNvdXBsZSBub3QgcmVzcG9uZGluZy4gSW1hZ2luZSBoYXZpbmcgZmlsdGVyZWQgdGhyb3VnaCB2aWxlLCBoYXRlZnVsLCBhYnVzaXZlIG1lc3NhZ2VzIGZvciB5ZWFycyBqdXN0IGJlY2F1c2UgeW91IHNhaWQgIm5vIHRoYW5rIHlvdSIgdG8gc29tZW9uZS4gSW1hZ2luZSBob3cgaG9ycmlibGUgYWxsIHRob3NlIGV4cGVyaWVuY2VzIHdvdWxkIGhhdmUgYmVlbiBmb3IgeW91IHRvIHJlc29ydCB0byBqdXN0IGRlbGV0aW5nIGFuZCBtb3Zpbmcgb24gaW5zdGVhZCBvZiBiZWluZyBhYmxlIHRvIGJlIHlvdXJzZWxmLCBiZSBuaWNlIHRvIG90aGVycywgYW5kIGp1c3Qgc2F5IGEgc2ltcGxlICJ0aGFua3MgYnV0IG5vIHRoYW5rcy4iCkh5cGF0aWFuYXRhICAyIHBvaW50cyAgc3VibWl0dGVkIDYgZGF5cyBhZ28KSXQgc3Vja2VkLiAKSGUgb2J0YWluYWJsZSB0aGUgR29vc2UgYW5kIGFsbCBvZiB0aGUgcHV0IGluIG9ucyB0byBoZWxwIGhpcyBjcmVkaXQgcGFydG5lci5JIGhhdmUgdXNlZCB0b2dldGhlciB3aXRoIGJlZW4gYSBwYXJ0IG9mIGNvbXBhbmllcyBvZiB3aGljaCB1c2UgdGhlIEdvbGRlbiBHb29zZSBEZWx1eGUgQnJhbmQgRnJhbmN5IEdsaXR0ZXIgU25lYWtlcnMgeXN0ZW0gaW4gYWxtb3N0IHNldmVuIHllYXIgYXMgSSBwdXQgdG9nZXRoZXIgdGhpcy4gCkFuZCB3aGlsZSB0aGUgZm9sa3Mgd2hvIHBsYXkgaW4gdGhvc2UgbG9jYWwgdG91cm5hbWVudHMgYXJlbiBsaWtlbHkgdG8gZXZlciBiZSB0aGUgc3RhcnMgb2YgdGhlaXIgTGFzIFZlZ2FzIGNvdW50ZXJwYXJ0cywgdGhlcmUgbm8gZG91YnQgdGhhdCBzb21lIG9mIHRoZSB3aW5uZXJzIChhbmQgbG9zZXJzKSBhcmUgdGFraW5nIHRoZWlyIGN1ZXMgZnJvbSB0aGUgV29ybGQgUG9rZXIgVG91ciBzdGFycy4KSEhQIHN0dWRlbnRzIGNvbXBldGVkIGluIHRoZSBzcGVlY2ggY29udGVzdCBkdXJpbmcgd2hpY2ggc3R1ZGVudHMgZ2l2ZSBhIHR3byBtaW51dGUgaW5mb3JtYXRpdmUgYW5kIHBlcnN1YXNpdmUgc2FsZXMgcGl0Y2ggb2YgdGhlaXIgcmVzZWFyY2ggdG8gYSBwYW5lbCBvZiBqdWRnZXMuIApJbiBvdXIgY2FsY3VsYXRpb24sIHRoZXJlIGFyZSBhcm91bmQgMjAwIG9ubGluZSBwb2tlciByb29tcy4gCiJUaGUgcGFzc2l2ZSBoZWFkIG1vdmVtZW50IFNFUCBleHBlcmltZW50IGRlbW9uc3RyYXRlZCB0aGF0IG5vIHNpZ25pZmljYW50IGNoYW5nZXMgb2NjdXJyZWQgZm9sbG93aW5nIGEgc2ltcGxlIG1vdmVtZW50IG9mIHRoZSBzdWJqZWN0J3MgaGVhZC4gCkZhbWlsaWVzIG9mIGZvdXIgb24gYSBzaW5nbGUgbW90b3JjeWNsZS4gV29tZW4gd2Fsa2luZyBhbG9uZ3NpZGUgdGhlIHJvYWQgYmFsYW5jaW5nIGJhc2tldHMgb24gdGhlaXIgaGVhZC4gCkZpcnN0IHlvdSBzaG91bGQgZGVjaWRlIHdoYXQgc29ydCBvZiBwb2tlciBhcmUgeW91IGdvaW5nIHRvIHRhY2tsZSBmaXJzdC4gVHdvIHBsYXllciBob2xkJ2VtIGlzIHByZXR0eSBtdWNoIHNvbHZlZCwgdGhvdWdoIHRoZSBiZXN0IGh1bWFucyBzdGlsbCBwdXQgdXAgYSByZWFsIGZpZ2h0IHdpdGggdGhlIGJlc3QgQUkncyBhdmFpbGFibGUuIFRoZSBBSSBoYXMgdGhlIG1haW4gYWR2YW50YWdlcyBvdmVyIGh1bWFucyBieSBoYXZpbmcgYW4gdW5saW1pdGVkIGZsYXdsZXNzIG1lbW9yeSBvZiBwYXN0IGhhbmRzLCBmbGF3bGVzcyBhbmFseXNpcyBvZiB0aGUgcGF0dGVybnMgYmFzZWQgb24gdGhhdCBhbmQgYXMgdGhleSBhcmUgbWFjaGluZXMsIHRoZXkgZG9uJ3QgdGlsdCBsaWtlIGFsbW9zdCBhbGwgaHVtYW5zIG9jY2FzaW9uYWxseSBkby4uIApZb3UgY2FuIHVzZSBrbm93bGVkZ2UgdG8gcmVkdWNlIGZlYXIsIG9yIHZhcmlvdXMgdGhlcmFwaWVzIHRvIGNoYW5nZSBob3cgeW91IGZlZWwuIApPbmNlIHVwb24gYSB0aW1lLCBtZW4gd29yZSB0aGUgcGFudHMsIGFuZCB3b3JlIHRoZW0gd2VsbC4gCkRvbnQgd29ycnkgYWJvdXQgZmFpbGluZy4gCkFwcGFyZW50bHksIHRoZXJlIGlzIHNvbWV0aGluZyBtb3JlIHRvIGVjb25vbWljIGdyb3d0aCB0aGFuIGp1c3QgcmV2dmluZyB1cCBmYWN0b3J5IG91dHB1dC4gQXQgbGVhc3Qgd2Ugbm8gbG9uZ2VyIGhhdmUgdG8gbGlzdGVuIHRvIHRoZSBhY3JpbW9uaW91cyBhbmQgdGlyZXNvbWUgZGViYXRlIGFib3V0IENhbmFkYSBtYW51ZmFjdHVyaW5nIHNlY3RvciBzdWZmZXJpbmcgZnJvbSBEaXNlYXNlLiBCdXQgd2hhdCBkbyB5b3UgY2FsbCBhbiBlY29ub215IHdoZXJlIG1hbnVmYWN0dXJpbmcgcHJvc3BlcnMgYW5kIHRoZSByZXN0IG9mIHRoZSBlY29ub215IGxhbmd1aXNoZXM/IFBlcmhhcHMgRGlzZWFzZSwgd2hlcmUgZXhwb3J0cyBmbG91cmlzaCBidXQgZG9tZXN0aWMgZGVtYW5kIHJldGFyZHMgZ3Jvd3RoLi4gCldoaWxlIHRoZSBjYXJkIGlzIHRyYWNraW5nIGEgZ2FtYmxlcidzIGFjdHVhbCBwbGF5LCB0aGUgcGl0IGJvc3MgaXMgdGFraW5nIGluIGEgbG90IG9mIGluZm9ybWF0aW9uLCB0b28sIHN1Y2ggYXMgaG93IGxvbmcgYSBwYXJ0aWN1bGFyIHBsYXllciByZW1haW5zIGF0IHRoZSB0YWJsZS4gClRoYXQgcmlnaHQsIHByb2ZpdHMgZm9yIHByaXZhdGUgcmV0YWlsZXJzIG5vdCB0aGUgcHJvdmluY2UuIEZvciBleGFtcGxlLCBnYXMgc3RhdGlvbnMuIEFrYSB5b3Uga25vdyB3aG8sIG9yIEdyb2Nlcnkgc3RvcmVzIG9yIG90aGVyIGxhcmdlIGNvcnBvcmF0aW9ucy4gClZlcmRlciBzdGFhbiBlciBvb2sgZWVuIGFhbnRhbCBvcHZhbGxlbmQgbGV1a2Ugc3RhbmRiZWVsZGVuLCBidmIuIAoiSXQncyBhbHNvIHNvbWV3aGVyZSB0byBjZWxlYnJhdGUgZnJpZW5kc2hpcCwgb25lIG9mIHRoZSBwaWxsYXJzIG9mIG91ciBidXNpbmVzcy4gS3Jpc3RpbmEgYW5kIEkgY2VydGFpbmx5IGRvbid0IGFsd2F5cyBhZ3JlZSBvbiB0aGluZ3MsIGJ1dCB3ZSBhbHdheXMgY2FsbCBlYWNoIG90aGVyIG91dCBvbiBzdHVmZi4gV2UgYmVsaWV2ZSB0aG9zZSBzb3J0cyBvZiBmcmllbmRzaGlwcyBwdXNoIHVzIGFsbCB0byBiZSBiZXR0ZXIgYW5kIGhhcHBpZXIuIlRoZSBzaXRlIHNwbGl0cyBvZmYgaW50byBmaXZlIGxpZmVzdHlsZSBoZWFkaW5ncyBFYXQsIFByaW1wLCBFc2NhcGUsIER3ZWxsIGFuZCBUaHJpdmUuIk15IGZhdm91cml0ZSBwYXJ0IG9mIHRoZSBuZXcgc2l0ZSBpcyB0aGUgdmlkZW8sIiBzYWlkIFdhbGxuZXIuIApDYW4gSmVreWxsIGFuZCBNdXJpZWwgYmUgdG9nZXRoZXIsIHdpbGwgSmVreWxsIHJlZ3JldCB0cnlpbmcgdG8gcGxheSBHb2QgYW5kIHdpbGwgdGhlcmUgYmUgYSBoYXBweSBlbmRpbmc/RnJlZHJpYyBNYXJjaCB3b24gdGhlIEJlc3QgQWN0b3IgQWNhZGVteSBBd2FyZCBmb3IgaGlzIHBvcnRyYXlhbCBvZiBKZWt5bGwgYW5kIEh5ZGUsIG1ha2luZyB0aGlzIHRoZSBmaXJzdCBob3Jyb3IgbW92aWUgZXZlciB0byB3aW4gYSBtYWpvciBhd2FyZC4gVGhlIGRlbGlnaHRmdWwgbWFrZSB1cCB3YXMgYnkgV2FsbHkgV2VzdG1vcmUsIHNlY29uZCBnZW5lcmF0aW9uIG1lbWJlciBvZiB0aGUgV2VzdG1vcmUgbWFrZSB1cCBkeW5hc3R5MSB3aG8gdGhlIGZvbGxvd2luZyB5ZWFyIGRpZCB0aGUgbWFrZSB1cCBvbiBJc2xhbmQgb2YgTG9zdCBTb3VscyAoMTkzMikuLiAKQnkgdGhhdCBsb2dpYyB0aGUgb25seSBjaG9pY2VzIHdlcmUgdG8gYmUgYSBndW4gdG90aW5nIE5hemkgb3IgYSBndW4gc3RlYWxpbmcgU29jaWFsaXN0LiAKU2hlIGFjY3VzZXMga3ZobnVrZSBvZiBzbGFja2luZyBvZmYgYmFzZWQgb24gZ2l0aHViIGNvbW1pdHMgdGhlbiB3ZSBmaW5kIG91dCB0aGF0IGFjdHVhbGx5IHRob3NlIGNvbW1pdHMgc3RvcHBlZCBhdCB0aGUgZXhhY3Qgc2FtZSB0aW1lIHRoYXQgc2hlIGRlY2lkZWQgdG8gc3RhcnQgaGVyIG93biBjb21wYW55LgpDb2xpbiBNdXJwaHkgd2l0aCBUaWZmYW55IFN0ZXZlbnNvbiBhbmQgSmFycmVkIENocmlzdG1hcywgUm9pc2luIER1YmgsIDcuMzBwLiAKUmF3IGFwcGxlIGNpZGVyIHZpbmVnYXIgdXNlZCBhcyBhIGhhaXIgcmluc2UgbWF5IHN0aW11bGF0ZSBoYWlyIGdyb3d0aC4gRm9yIHRoZSBnYXJsaWMgZm9yIGhhaXIgbG9zcyByZW1lZHkgICBhbiBob3VyIGJlZm9yZSBiZWR0aW1lLCBzbGljZSBvcGVuIGEgY2xvdmUgb2YgZ2FybGljIGFuZCBydWIgaXQgb24gdGhlIGFyZWEgb2YgbG9zcywgd2FpdCBmb3IgYW4gaG91ciB0aGVuIG1hc3NhZ2UgdGhlIHNjYWxwIHdpdGggb2xpdmUgb2lsLCBwdXQgb24gYSBjYXAsIGdvIHRvIGJlZCwgYW5kIHNoYW1wb28geW91ciBoYWlyIGluIHRoZSBtb3JuaW5nLiBSZXBlYXQgdGhpcyBmb3IgYSBmZXcgd2Vla3MsIGFuZCBob3BlZnVsbHkgaGFpciB3aWxsIHN0b3AgZmFsbGluZyBvdXQgYW5kIHJlZ3Jvd3RoIHdpbGwgYmUgYXBwZWFyaW5nLiAKVGhleSBhbHNvIHJ1biBhIHJvY2sgZ2FtZSAyLzUvMTAgd2hpY2ggY2FuIGJlY29tZSBhbiBhYnNvbHV0ZWx5IG1hc3NpdmUgZ2FtZS4gCkRhbmllbCBhY2N1c2VkIGFkbWl0dGVkIGhlIGxvb2tlZCBsaWtlIGNvbWZpdCwganVyeSBoZWFycwpQbGF5aW5nIExlZ28uIEl0IG15IGhvYmJ5IGF3YXkgZnJvbSB0aGUgcmluaywgYXNpZGUgZnJvbSBQaG9lYmUgKGhpcyBkb2csIGEgQmVybmVzZSBtb3VudGFpbiBkb2cpLiAKSGUgZmlybWx5IGJlbGlldmVzIHRoYXQgYmFsbGV0IGlzIG11Y2ggbW9yZSBzdWl0ZWQgYXMgYSBwcm9mZXNzaW9uIGZvciB0aGVtLCB0aGFuIHdoYXQgdGhleSBhcmUgZG9pbmcgcmlnaHQgbm93LiBUaHVzLCB3ZSBoYXZlIGVuY2xvc2VkIGEgY2FyZCBmcm9tIFJlZGFjdGVkIHdobyBpcyBhIGRpcmVjdG9yIGF0IHlvdXIgbG9jYWwgYmFsbGV0IGluc3RpdHV0ZSBpbiBCZW5kIGNhbGxlZCBBY2FkZW1pZSBkZSBCYWxsZXQgQ2xhc3NpcXVlLiBNeSBjbGllbnQgd2lsbCBwZXJzb25hbGx5IHRhbGsgdG8gdGhlIGluc3RpdHV0ZSBhbmQgd2lsbCBwYXkgZm9yIHRoZSBmaXJzdCBtb250aCBiYWxsZXQgY2xhc3NlcyBmcmVlIG9mIGNoYXJnZS4gCkNoaWVmY2hpZWYyMyAgMTkgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnbwpUaGUgbmlnaHQgaXMgZmlsbGVkIHdpdGggc3RhcnMgc2hpbmluZyBicmlnaHRseSBhbmQgdGhlIHNtZWxsIG9mIGZvb2Qgd2FmZmxlcyB0aHJvdWdoIHRoZSBuaWdodCBhcm91bmQgdGhlIEhvdXNlIG9mIEx1ZGluZ3Rvbi4gTWlzcyBOb3NlIGlzIG5lcnZvdXMgYW5kIGV4Y2l0ZWQgYWJvdXQgdGhpcyBuaWdodC4gCkl0IHdhc24ndCBhbiBlYXN5IGJhdHRsZSwgc2luY2UgU291dGggQ2Fyb2xpbmEgd2FzIG9uZSBvZiBvbmx5IHR3byBzdGF0ZXMgdGhhdCBvcGVyYXRlZCBhIG51Y2xlYXIgd2FzdGUgbGFuZGZpbGwsIGJ1dCB1bmRlciB0aGUgbGVhZGVyc2hpcCBvZiB0aGVuIEdvdi4gCkFmdGVyIHRoaXMsIHRoZSB2aWRlbyBwb2tlciBtYWNoaW5lIGV2YWx1YXRlcyB0aGUgaGFuZC4gCldoZW4gaGUgcGxheXMgbGl2ZSBQb2tlciwgaGUgZXZlbiBoYXMgaGlzIG93biB0cmF2ZWxsaW5nIGZhbiBjbHViIHdobyByYWlsIGhpbSBldmVyeSBoYW5kLCBhbmQgYnJpbmcgIkdvIEl2ZXkgR28iIHBsYWNhcmRzLgpTbywgd2hhdCBtYWtlcyB0aGlzIGxpbmUgZGFyayBkdXJpbmcgcHJlZ25hbmN5LCBhbmQgc29tZXRpbWVzIHB1YmVydHk/IFRoZSBzaW1pbGFyaXR5IGJldHdlZW4gdGhlc2UgdHdvIGRlbW9ncmFwaGljIGdyb3VwcyBpcyBwcmV0dHkgb2J2aW91czogbG90cyBhbmQgbG90cyBvZiBob3Jtb25lcy4gQSB3b21hbiB3aWxsIG1ha2UgbW9yZSBlc3Ryb2dlbiBkdXJpbmcgYSBzaW5nbGUgcHJlZ25hbmN5IHRoYW4gc2hlIHdpbGwgZHVyaW5nIGFsbCB0aGUgcmVzdCBvZiBoZXIgZGF5cyBjb21iaW5lZC4gCkVpdGhlciB3YXksIE5peG9uIHdhcyBjbGVhcmx5IGFscmVhZHkgaW4gdGhlIGhhYml0IG9mIGRvaW5nIHdoYXRldmVyIHRoZSBoZWxsIGhlIHdhbnRlZCBhbmQgZGlkbid0IGdpdmUgb25lIHdoaXN0bGluZyBkb2xwaGluIGFudXMgd2hhdCBhbnlvbmUgZWxzZSB0aG91Z2h0Li4gCiJXU09QIEV1cm9wZSBoYXMgc3RydWdnbGVkIHRvIGZpbmQgYSBwZXJtYW5lbnQgaG9tZSBzaW5jZSBkZWJ1dGluZyBpbiAyMDA3IGJlY2F1c2Ugd2UgY291bGQgbmV2ZXIgcmVhbGx5IGZpbmQgdGhlIHZlbnVlIG9yIHBhcnRuZXIgdG8gcmVwbGljYXRlIHdoYXQgd2UgaGF2ZSBpbiBMYXMgVmVnYXMsIiBzYWlkIFdTT1AgZXhlY3V0aXZlIGRpcmVjdG9yIFR5IFN0ZXdhcnQuICJCdXQgSSB0cnVseSBiZWxpZXZlIGluIExlb24gdmlzaW9uLCBoaXMgcGFzc2lvbiBhbmQgS2luZyBDYXNpbm8gdG8gZXhlY3V0ZSB0aGUgYmVzdCBXU09QIEV1cm9wZSB0byBkYXRlLiBXZSBhcmUgYnVsbGlzaCBpbiB0aGlzIGJlY29taW5nIHRoZSBFdXJvcGVhbiBlcXVpdmFsZW50IG9mIHRoZSBXU09QIGluIExhcyBWZWdhcywgc29tZXRoaW5nIHdlIGhhdmUgYWx3YXlzIGRyZWFtZWQgb2YgZG9pbmcgd2hlbiB3ZSBmaXJzdCBiZWdhbiBvdXIgZm9yYXkgaW50byBFdXJvcGUgYSBkZWNhZGUgYWdvLiIKQ291bGQgdGhlIGFuc3dlciBiZSB0aGF0IHRoZSBkaXNjLCB1bmxpa2Ugb3RoZXIgam9pbnRzLCBpcyB1bmlxdWVseSBwcm92aWRlZCB3aXRoIGEgcHJlZG9taW5hbnRseSB2aXNjZXJhbCB0eXBlIG9mIG5lcnZlIHN1cHBseT8iLiAKVmFsZXJpayB1CkF0IGxlYXN0IHNoZSB3YXMgc29tZXdoYXQgc2xpbSwgYnV0IGhhZCBiYWQgc3RyZXRjaG1hcmtzIGFuZCBhIGxvb3NlIHB1c3N5LiAKQSBjbGVhciBkaWcgZnJvbSBwZW9wbGUgd2hvIGFyZSBwZXJoYXBzIHdvcnRoIGEgZm9ydHVuZSBpbiB0aGlzIGV4dHJlbWVseSB1bmVxdWFsIHNvY2lldHkuClRoZSBjaGlsZHJlbiB3cml0aGVkIGFuZCBnaWdnbGVkLCBhbmQgaW4gdGhlIGVuZCBhIHRlYWNoZXIgdG9vayBwaXR5IG9uIG1lIGFuZCBtYXJzaGFsbGVkIHRoZSBzbGlkZXMgaGVyc2VsZi4uIApTaW1wbHkgcmVnaXN0ZXIgeW91ciA4ODhTcG9ydCBhY2NvdW50LCBhbmQgdGhlbiBkZWNpZGUgaG93IG11Y2ggeW91IGFyZSBnb2luZyB0byBkZXBvc2l0LiAKTWVhbmluZyB0aGVyZSBpcyBjZXJ0YWlubHkgbW9yZSBwZW9wbGUgb3V0IHRoZXJlLiBKdXN0IG5vdCB0ZXN0ZWQgb3IgZGlhZ25vc2VkIHlldC4gSW4gdGhlIGZ1dHVyZSwgSSBwcm9iYWJseSBiZSAxIGluIDUwLDAwMCB0byAxIGluIDEwMCwwMDAuIApUaGUgaG9wZSBpcyB0aGF0IHRob3NlIHBlb3BsZSBjYW4gcHV0IG1vcmUgYmFjayBpbnRvIHRoZSBlY29ub215IGJ1dCB3aGF0IGhhcHBlbnMgd2hlbiBtaW5pbXVtIHdhZ2VzIGNhdGNoZXMgdXAgdG8gdGhlIHdhZ2VzIG1hbnkgY29sbGVnZSBncmFkdWF0ZXMgYXJlIHJlY2VpdmluZz8gRG8gdGhlaXIgd2FnZXMgZ28gdXAgYXMgd2VsbCBvciBkbyBwZW9wbGUgc3RvcCBnb2luZyB0byBjb2xsZWdlPyBEbyBwZW9wbGUgcmUgaW52ZXN0IG9yIGlzIGl0IG5vdyBqdXN0IGVub3VnaCB0byBnZXQgYnk/IFRoZSBpbmNyZWFzZSBpbiB0aGUgY29zdCBvZiBnb29kcyBzaG91bGQgYmUgbWFyZ2luYWwgb3ZlcmFsbCBidXQgdGhlcmUgYXJlIG1hbnkgb3RoZXIgcG9zc2libGUgbmVnYXRpdmUgZWZmZWN0cy4gClRoZSBuZXdzcGFwZXIgcHVibGlzaGVkIHRoZSBuYW1lIG9ubGluZS4gQ2xhcmsgQ291bnR5IERpc3RyaWN0IENvdXJ0IEp1ZGdlIEVsaXNzYSBDYWRpc2ggbGF0ZXIgb3JkZXJlZCB0aGUgZnVsbCBkb2N1bWVudCBub3QgYmUgcHVibGlzaGVkIHdpdGhvdXQgcmVkYWN0aW9ucywgYnV0IHNoZSBhY2tub3dsZWRnZWQgc2hlIGNvdWxkbiBvcmRlciB0aGUgbmV3c3BhcGVyIHRvIHJldHJhY3QgdGhlIG5hbWUuCldoYXQgSSB0aGluayBpcyBoYXBwZW5pbmcgaXMgeW91IHRoaW5rIGFueW9uZSB3aG8gaGFzIGFueSBiaXQgb2YgcmVmaW5lZCB0YXN0ZSBpcyB3cm9uZywgYW5kIHlvdSB0aGluayB5b3UncmUgYmV0dGVyIHRoYW4gdGhhdCBraW5kIG9mIHBlcnNvbi4uIApEYXZpZCBIYXJ2ZXkKQ29tcG9zZSBhbiBpbnRyb2R1Y3RvcnkgcGFyYWdyYXBoIHRoYXQgc3RhdGVzIHlvdXIgaW50ZXJlc3QgaW4gdGhlIGpvYiBhbmQgaG93IHlvdSBsZWFybmVkIGFib3V0IHRoZSBwb3NpdGlvbi4gSWYgeW91IGhhdmUgYSBzaWduaWZpY2FudCBhbW91bnQgb2Ygd29yayBleHBlcmllbmNlIGFuZCB0aGUgam9iIHJlcXVpcmVzIGl0LCBtZW50aW9uIHRoYXQgaW4geW91ciBvcGVuaW5nIHBhcmFncmFwaC4gClBsYXkgeW91ciBmYXZvcml0ZSB0dW5lcyBvbiBvdXIgZGlnaXRhbCBqdWtlYm94IHdoaWNoIGhhcyBvdmVyIDUsMDAwIHNvbmdzLiBXYXRjaCB5b3VyIG1vc3QgZGVzaXJhYmxlIHNwb3J0cyBldmVudCBvbiBvbmUgb2Ygb3VyIDUgZmxhdCBzY3JlZW4gVFZzLiBQbGF5IGEgcmVsYXhpbmcgZ2FtZSBvZiBwb29sIG9yIHNodWZmbGUgYm9hcmQuIApUaGUgc3RhcmsgdGhlIHRydXRoIGlzIHRoYXQgdGhlIGNoYW5jZXMgYXJlIGFnYWluc3QgeW91IGFuZCB5b3Ugd2lsbCBsb3NlIG1vcmUgaGFuZHMgdGhhbiB3aW4uIApUaGUgc2NoZWR1bGUgb2YgZXZlcnkgd2Vla2VuZCBkb2Vzbid0IGFsbG93IGZvciB0aGUgbGF0dGVyIHRvIGhhcHBlbi4gCkkganVzdCB3YW50ZWQgdG8gcmVhc3N1cmUgeW91IGZyb20gYSBmZW1hbGUgcGVyc3BlY3RpdmUgdGhhdCBldmVuIHRob3VnaCB5b3UgYXJlIHRoZSBpbiB0aGlzIHNpdHVhdGlvbiAoYWx0aG91Z2ggSSB3b3VsZG4gdXNlIGFzIHN0cm9uZyBhIHdvcmQgYXMgdGhhdCEpIHlvdSBoYXZlIGhhbmRsZWQgdGhpbmdzIHdpdGggbXVjaCBtb3JlIGdyYWNlIHRoYW4gbWFueSBtZW4gZG8sIGV2ZW4gd2hlbiB0aGV5IGhhdmUgYSBsb3Qgb2YgcmVsYXRpb25zaGlwIGV4cGVyaWVuY2UgdW5kZXIgdGhlaXIgYmVsdC4gCkF0IEpvaG4gSC4gRnJhbmNpcyBQb2x5dGVjaG5pYyBIaWdoIFNjaG9vbCwgUGFkZG9jayB3YXMgYSBicmFpbnkga2lkLCBidXQgZGVmaWVkIHRoZSBnZWVrIHN0ZXJlb3R5cGUgYnkgZHJlc3NpbmcgbW9yZSBsaWtlIGEgaGlwcGllLCBzYWlkIFJpY2hhcmQgQWxhcmNvbiwgYSBmb3JtZXIgY2xhc3NtYXRlIHdobyB3ZW50IG9uIHRvIHNlcnZlIG9uIHRoZSBMb3MgQW5nZWxlcyBDaXR5IENvdW5jaWwuCkkgc3Ryb25nbHkgZGlzYWdyZWUgd2l0aCBldmVyeW9uZSB3aG8gc2F5cyBoYXZpbmcgTGVvIG9uIHZpbyBpc24gZ29vZCwgaXQgZGVwZW5kcyBvbiB3aGF0IHlvdSB3YW50IGhpbSB0byBkby4gSWYgeW91ciBMZW8gaXMgdGhlcmUgdG8gZ2V0IHRoZSBhdHRhY2sgYmFyIHB1c2ggYmFjayBvbiB0dXJuIG9uZSBmb3IgeW91ciBBTyB0aGVuIHZpb2xlbnQgaXMgYWJzb2x1dGVseSB0aGUgYmVzdCBjaG9pY2UuIEZyYW5rbHkgSSB0aGluayBpZiB5b3UgdXNpbmcgYW4gQU8gd2hlcmUgTGVvIG9mdGVuIGVuZHMgdXAgYXMgbGFzdCBtYW4gc3RhbmRpbmcgYW5kIG5lZWRzIHZhbXAgdG8gaGF2ZSBhIGNoYW5jZSBvZiBhIHNvbG8gdGhlbiB5b3UgbmVlZCB0byByZXRoaW5rIHlvdXIgYW8gOnAuIApUaGUgZ2lybCB0dXJuZWQgb3V0IHRvIGJlIGEgcG9saWNlIG9mZmljZXIuVGhlIGludmVzdGlnYXRpb24gaW50byBDb2lsIGJlZ2FuIGluIE1heSB3aGVuIGEgd29tYW4gd2hvIGhhZCBzZWVuIGEgQ3JhaWdzbGlzdCBhZCBjb25uZWN0ZWQgdG8gaGltIHJlcG9ydGVkIGhpbSB0byBwb2xpY2UsIHRoZSByZXBvcnQgc2FpZC4gCk9mIGNvdXJzZSwgaXQgd291bGQgbm90IGJlIGEgTGFkeSBHYWdhIGhhbGZ0aW1lIHNob3cgd2l0aG91dCBhbiBvdXRmaXQgY2hhbmdlLiBBcyBzaGUga2lja2VkIHRoZSByb3V0aW5lIGJhY2sgaW50byBoaWdoIGdlYXIgd2l0aCAiQmFkIFJvbWFuY2UsIiBzaGUgYWxzbyBjaGFuZ2VkIGludG8gaGVyIHZlcnNpb24gb2YgZm9vdGJhbGwgZ2VhciB3aXRoIGEgcmhpbmVzdG9uZSBlbmNydXN0ZWQgY3JvcCB0b3AgYWNjZXNzb3JpemVkIHdpdGggc2hvdWxkZXIgcGFkcyBhbmQgYSBiZWRhenpsZWQgcGFpciBvZiBiaWtpbmkgYm90dG9tcy4uIApObyBvbmUgc2VlbWVkIHRvIGhhdmUgYSByZWNvcmQgb2YgYSBnaXJsIGluIDE5NzUgaGF2aW5nIHRha2VuIGFueSBleGFtcyBhdCBhbGwuIFdpdGggbm8gY2VydGlmaWNhdGVzLCBJIGNvdWxkbiB0ZWFjaCwgYW5kIGl0IGxvb2tlZCBhcyBpZiBhbGwgd2FzIGxvc3QgdW50aWwgYSByZW1hcmthYmx5IHBhdGllbnQgcGVyc29uIGZyb20gbXkgb2xkIHNjaG9vbCBzcGVudCBhIG1vcm5pbmcgaW4gYSBiYXNlbWVudCBzb21ld2hlcmUgYW5kIGV2ZW50dWFsbHkgY2FtZSBiYWNrIHZpY3RvcmlvdXMuLiAKVGhlIG9wZXJhdG9yIHJlc3RzIG9uZSBoYW5kIGluIGZyb250IG9mIHRoZSBzaG91bGRlciBhbmQgdGhlIG90aGVyIGhhbmQgb24gdGhlIGJ1dHRvY2suIApOZWhydSBUYWNrbGVzIERvbWVzdGljIElzc3VlIG9mIEluZGlhJ3MgQ2F0dGxlIFNQRUFLRUIgVFVFU0RBWSAgIFJlcC4gR2xlbm4gUi4gRGF2aXMgb2YgV2F1a2VzaGEsIFJlcHVibGljYW4sLCBqdXN0IHJlIGVsZWN0ZWQgZm9yIGhpcyBmb3VydGggdGVybSBpbiB0aGUgSG91c2Ugb2YgUmVwcmVzZW50YXRpdmVzLCB3aWxsIGJlIHNwZWFrZXIgVHVlc2RheSBldmVuaW5nIGF0IHRoZSBvcGVuaW5nIG1lZXRpbmcgb2YgdGhlIEphbmVzdmlsbGUgVHdpbGlnaHQgY2x1YiBmb3IgdGhpcyBzZWFzb24uIFRoZSBhZGRyZXNzLCBhIHByZXZpZXcgb2YgY29uZ3Jlc3Npb25hbCBhY3Rpdml0eSBmb3IgdGhlIHNlc3Npb24ganVzdCBhaGVhZCwgd2lsbCBmb2xsb3cgYSA2OjMwIGRpbm5lciBpbiB0aGUgQ29uZ3JlZ2F0aW9uYWwgQ2h1cmNoIGRpbmluZyByb29tLiAKSXQgaXMgYmVzdCB0byBicmluZyB0aGUgc29ja3MgYWxvbmcgYW5kIHB1dCB0aGVtIG9uIHdoZW4geW91IGFyZSB0cnlpbmcgb24gd2Fsa2luZyBzaG9lcy4gVGhpcyB3YXksIHlvdSB3b24ndCBoYXZlIHRvIGd1ZXNzIGF0IGhvdyBtdWNoIHJvb20gdG8gbGVhdmUgZm9yIHRoZSBzb2Nrcy4gQWxzbyByZW1lbWJlciB0aGF0IHlvdXIgZmVldCB3aWxsIHByb2JhYmx5IHN3ZWxsIGFzIHlvdSB3YWxrLiAKQW55IHRpcHMgb2YgaG93IHRvIHVzZSB0aGUgbGlua3MgaW4gdGhlIGhlbG0gd291bGQgYmUgZ3JlYXRseSBhcHByZWNpYXRlZC4uIApUaGVyZSBhcmUgYWxzbyBkZWVwZXIgYXZlbnVlcyBvZiBiZW5lZml0IHRoYXQgYXJlIHVuaXF1ZSB0byB0aGlzIHBhcnRuZXJzaGlwIHByYWN0aWNlOjEuIFNraW4gdG8gc2tpbiBjb250YWN0OiBGb3IgbWFueSBhZHVsdHMsIHBoeXNpY2FsIHRvdWNoIGlzIHR5cGljYWxseSByZXNlcnZlZCBmb3Igc2V4dWFsIHBhcnRuZXJzLCBidXQgYWNyb3lvZ2EgY2hhbGxlbmdlcyB0aGF0IGNvbnN0cnVjdC4gVGhlIHByYWN0aWNlIGxlbmRzIGl0c2VsZiB0byBkZXZlbG9waW5nIGEgcGh5c2ljYWwgaW50aW1hY3kgd2l0aCBvdGhlcnMgdGhhdCBpcyBwbGF0b25pYywgc2FmZSBhbmQgcGxheWZ1bC4gClNvIGlmIHlvdSBwbGFuIG9uIHBsYXlpbmcgb24gZGlmZmVyZW50IHNpdGVzLCB5b3Ugd2lsbCBlbmQgdXAgZG93bmxvYWRpbmcgbnVtZXJvdXMgcGFydHkgcG9rZXIgc29mdHdhcmVzLiAKSXQgaW50ZXJlc3RpbmcgaG93IGZvciBzb21lIGluZHVzdHJpZXMsIHdlIGJhc2ljYWxseSBhY2NlcHQgY29weWluZyAgIGZhc2hpb24gZGVzaWduIGFuZCBnYW1lIGNvbmNlcHRzLCB0byBuYW1lIGp1c3QgdHdvICAgd2hpbGUgZm9yIG90aGVycywgd2UgY29uc2lkZXIgaXQgc3RlYWxpbmcuIFdoYXQgd2UgcGVyaGFwcyBzaG91bGQgbm90IGJlIHRvbyBzdXJwcmlzZWQgYWJvdXQgaXMgaG93IHdoZW4gYSBjb3VudHJ5IGhhcyBiZWVuIHVzZWQgZm9yIGRlY2FkZXMgYXMgdGhlIHdvcmxkIHF1YXNpIGNvbnN0cnVjdGlvbiBiYWNreWFyZCwgdGhhdCBjb3VudHJ5IGlzIG5vdyBlbWVyZ2luZyBhcyBhIG5ldyBpbmR1c3RyeSBwbGF5ZXIgdGhlbXNlbHZlcy4gQW5kIGluIHRoZSBjYXNlIG9mIHRoZSB0aGlubmVyIGZvbGRhYmxlIHdoZW4gY29tcGFyZWQgdG8gU2Ftc3VuZywgb2Z0ZW4gZXZlbiBzdWNjZXNzZnVsbHkgZXZvbHZpbmcgdGVjaG5vbG9neS4uIApCZWNhdXNlIEJhbmdrb2sgaXMgdGhlIGNlbnRyYWwgY2l0eSBpbiB0aGUgY291bnRyeSwgZXZlcnl0aGluZyBmcm9tIGVsc2V3aGVyZSBpbiB0aGUgY291bnRyeSBmZWVkcyBpbnRvIEJhbmdrb2sgICBhbGwgdGhlIHJlZ2lvbmFsIGN1bHR1cmVzLCBmb29kcywgc3R5bGVzLCBhdHRpdHVkZXMsIGJlbGllZnMsIGV0Yy4gU28geW91IGRvbiBqdXN0IGZpbmQgImNlbnRyYWwiIFRoYWkgY3VsdHVyZSwgeW91IGNhbiBmaW5kIGFzcGVjdHMgb2YgYWxsIFRoYWkgY3VsdHVyZS4KVGFraW5nIHBsYWNlIGJldHdlZW4gMjEgMjMgSnVseSBpbiB0aGUgaGlzdG9yaWMgZWxlZ2FuY2UgYW5kIGx1eHVyeSBvZiBTaXggSGFtaWx0b24gUGxhY2Ugb2ZmIExvbmRvbidzIFBhcmsgTGFuZSwgVGhlIFZpY3RvciBQb2tlciBDdXAgd2lsbCBiZSBjb250ZXN0ZWQgYnkgYW4gZWNsZWN0aWMgbWl4IG9mIG9uZSBodW5kcmVkIGNlbGVicml0aWVzLCBwb2tlciBwcm9mZXNzaW9uYWxzLCBpbnRlcm5ldCBxdWFsaWZpZXJzIGFuZCBoaWdoIHN0YWtlcyBnYW1ibGVycy4gClRoZSBmYWN0IHRoYXQgQ2FuYWRhIHN0YW5kcyBhdG9wIGluIGVkdWNhdGlvbiBtYXkgYmUgc3VycHJpc2luZy4gVGhlIGNvdW50cnkgaXMgZm9sbG93ZWQgYnkgb3RoZXIgaGlnaGx5IGVkdWNhdGVkIGNvdW50cmllcyBzdWNoIGFzIEphcGFuLCBJc3JhZWwgYW5kIFNvdXRoIEtvcmVhLiBUaGUgVW5pdGVkIFN0YXRlcywgd2hpY2ggaGFkIGVpZ2h0IG9mIHRoZSB0b3AgcmFua2VkIHVuaXZlcnNpdGllcyBpbiB0aGUgd29ybGQsIHJhbmtzIHNpeHRoIG9uIHRoZSBPRUNEIGxpc3QuCkE6IEEgY291cGxlLiAKT25lIGlzIFN0aWxsIHNpbmdsZS4gU3RpbGwgZG9lc24ndCByZWFsaXplIGhlJ3MgYSBqZXJrLiBTdGlsbCBkb2Vzbid0IHJlYWxpemUgdGhhdCB3b21lbiBmaW5kIGhpbSBjcmVlcHkuIFN0aWxsIGxpdmVzIGF0IGhvbWUgd2l0aCBoaXMgcGFyZW50cy4gU3RpbGwgdGhpbmtzIGhlJ3Mgc21hcnRlciB0aGFuIGhlIGFjdHVhbGx5IGlzLiBUaGFua3MgdG8gbXkgZnJpZW5kLCBoZSBkb2VzIHJlYWxpemUgSSBkaWRuJ3Qga2VlcCBzaWxlbnQgYWJvdXQgaGlzIGFidXNpdmUgYmVoYXZpb3IgdG93YXJkIG1lLCB0aG91Z2ghIEFwcGFyZW50bHkgbXkgbmFtZSBpcyBlbm91Z2ggdG8gbWFrZSBoaXMgbGlmZSBmbGFzaCBiZWZvcmUgaGlzIGV5ZXMuCkJ1dCBUcnVkZWF1IHdhcyBzcGVha2luZyB0aGUgY29tcGxldGUgdHJ1dGggd2hlbiBpdCBjb21lcyB0byBpbmNvbWUgdGF4ZXMgKEhTVCwgcmVhbHR5IHRheGVzIGFuZCBvdGhlciBjb25zdW1wdGlvbiB0YXhlcyBhcmUgYW5vdGhlciBzdG9yeSkuIAogOTAgcG9pbnRzICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kgbWVhbiwgdGhlIG9idmlvdXMgY291bnRlcnBvaW50IHRvIHBlb3BsZSB3aG8gdGhpbmsgImNoYW90aWMgZXZpbCBpcyBldmlsIHRha2VuIHRvIHRoZSBleHRyZW1lIiBpcyBwb2ludCBvdXQgY2hhb3RpYyBnb29kLiBEbyB0aGV5IHN0b3AgYXQgbm90aGluZyBqdXN0IHRvIGRvIGdvb2Q/IE9mIGNvdXJzZSBub3QuIApVbmZvcnR1bmF0ZWx5IGZvciBteXNlbGYsIEkgZG8gc29tZXRpbWVzIGdldCBjYXVnaHQgdXAgaW4gdGhlIGZ1cm9yIG9mIGluZGlnbmF0aW9uIGFuZCBsZW5kIG15IHZvaWNlIHRvIHRoZSBuYXJyb3cgbWluZGVkIHJhYmJsZSByb3VzZXJzLCB0byBkZW55IHNvIHdvdWxkIHBsYWNlIG1lIG9uIGxvb3NlIGZvb3RpbmcgaW5kZWVkLiBIdW1hbiBuYXR1cmUgbGVuZHMgaXRzZWxmIHRvIHJlZmxleGl2ZSwgZW1vdGlvbmFsIHJlc3BvbnNlczsgZW5vdWdoIHBlb3BsZSBzZWxmIGFkbWluaXN0ZXJpbmcgbGl0bXVzIHRlc3Rpbmcga2VlcHMgdGhlIHJlc3Qgb2YgdXMgaW4gY2hlY2sgZm9yIHRoZSBtb3N0IHBhcnQuIApJbiB5b3VyIGJsb2cgcG9zdCwgeW91IHdyb3RlIHRoYXQgc29tZSBvZiB0aGUgcHJvZ3JhbW1pbmcgb2YgdGhlIGNvbW11bml0eSB3aWxsIHJlbWFpbiBjYW4geW91IGV4cGFuZCBvbiB0aGF0IHN0YXRlbWVudD8KSWYgeW91IHdhbnQgY2FzaW5vIGdyYWRlIHBva2VyIGNoaXBzLCB0aGUgYmVzdCBtYXRlcmlhbCB0byBmb2N1cyBvbiBpcyBjbGF5IGFzIHRoaXMgc2VlbXMgdG8gYmUgdGhlIG1vc3Qgc3RhbmRhcmQgdHlwZSBvZiBjaGlwIHVzZWQgaW4gY2FzaW5vcyB0b2RheS4uIApBc3N1bWVkb3V0dGFrZSBmcm9tICJUaGUgRmFtZSBNb25zIGVyLiIgQ2FuIGJlIGZvdW5kIG9uIFlvdXR1YmUuIDM4IDQ1KSBCYWRSb21hbmNlL0FsZWphbmRyby9Nb25zdGVyL1NwZWVjaGxlc3MvRGFuY2UgSW4gVGhlIERhcmsvVGVsZXBob25lKEZlYXQuIEJleW9uYykvU28gSGFwcHkgSSBDb3VsZCBEaWUvVGVldGggLiAKVGhlcmUgaXMgYnV0IEkgZG9uJ3QgcmVtZW1iZXIuIApUaGVyZSBhcmUgbXVsdGlwbGUgd2F5cyBmb3IgS2FyYSB0byBlc2NhcGUgdGhlIGNhbXAsIG1vc3RseSBkZXBlbmRpbmcgb24gdGhlIGZyaWVuZHMgeW91IG1ha2UgYWxvbmcgdGhlIHdheS4gSW4gbXkgY2FzZSwgS2FyYSBkaWRuIGhhdmUgdG8gZXNjYXBlLCBzaGUgd2FzIHJlc2N1ZWQuCldoZW4gdGhlcmUgaXMgZmVlZGJhY2sgZnJvbSByZWNlaXZlciwgaXQgbWFrZXMgdGhlIHNlbmRlciB0byBtYWtlIGl0IHVuZGVyc3RhbmQgdG8gdGhlIHJlY2VpdmVyLiBUaGlzIHdpbGwgbGVhZCB0byBvbmUgb2YgZWZmZWN0aXZlIGNvbW11bmljYXRpb24uIApUaGlzIGJvZHkgd291bGQgYmFzaWNhbGx5IHRyYW5zaXRpb24gdGhlIHNvY2lldHkgdG8gQ29tbXVuaXNtLiBOb3cgdGhlcmUgYXJlIHRoaW5ncyBpdCB3b3VsZG4ndCBkbywgaXQgd291bGRuJ3Qga2lsbCB0aGUgQ2FwaXRhbGlzdCBjbGFzcywgaXQgd291bGRuJ3Qgc2V0IHVwIGd1bGFncyBhcmUgYW55dGhpbmcuIApOYW1lIExvY2F0aW9uIDMgRCBCb2R5IFNjYW5uaW5nIFRlY2hub2xvZ3kgKEltYWdpbmcgVGVjaG5vbG9neSkgMzcyIFNwaWRsZSBIYWxsIEFkYXB0aXZlIE1hdGVyaWFscyBMYWJvcmF0b3J5IDIyMiBEYXZpcyBIYWxsIEFkdmFuY2VkIExhc2VyIERpYWdub3N0aWNzIExhYm9yYXRvcnkgMTUxOCBTaGVsYnkgQ2VudGVyIEFlcm9keW5hbWljcyBMYWJvcmF0b3J5IEwgQnVpbGRpbmcgQUwgU3VwZXJjb21wdXRpbmcgQ2VudGVyIChBU0MpIEh1bnRzdmlsbGUsIEFsYWJhbWEgQWxhYmFtYSBDb29wZXJhdGl2ZSBFeHRlbnNpb24gU3lzdGVtIENvdW50eSBPZmZpY2VzIChzdGF0ZXdpZGUpIDEwOSBEdW5jYW4gSGFsbCBBc3BoYWx0IGFuZCBNYXRlcmlhbHMgTGFib3JhdG9yeSBIYXJiZXJ0IEVuZ2luZWVyaW5nIENlbnRlciBBdWJ1cm4gTGFib3JhdG9yeSBmb3IgSW1hZ2luZyBBbmltYWwgU3lzdGVtcyAoUHJvamVjdCBBTElBUykgR3JlZW5lIEhhbGwgQXVidXJuIFBsYW50IERpYWdub3N0aWMgTGFiIEFMRkEgQnVpbGRpbmcgQXVidXJuIFVuaXZlcnNpdHkgRWFybHkgTGVhcm5pbmcgQ2VudGVyIEVhcmx5IExlYXJuaW5nIENlbnRlciBBdWJ1cm4gVW5pdmVyc2l0eSBNYXJyaWFnZSBhbmQgRmFtaWx5IFRoZXJhcHkgQ2VudGVyIChDbGluaWNhbCBSZXNlYXJjaCkgR2xhbnRvbiBIb3VzZSBBdWJ1cm4gVW5pdmVyc2l0eSBNdXNldW0gb2YgTmF0dXJhbCBIaXN0b3J5IEJpb2RpdmVyc2l0eSBMZWFybmluZyBDZW50ZXIsIDM4MSBNZWxsIFN0LCBBdWJ1cm4gVW5pdmVyc2l0eSwgQUwgMzY4NDkgQXVidXJuIFVuaXZlcnNpdHkgUmVzZWFyY2ggSW5zdHJ1bWVudGF0aW9uIEZhY2lsaXR5IChBVVJJRikgMzcgUm91c2UgTGlmZSBTY2llbmNlcyBCdWlsZGluZyBBdWJ1cm4gVW5pdmVyc2l0eSBTb2lsIFRlc3RpbmcgTGFib3JhdG9yeSBBTEZBIEJ1aWxkaW5nIEF1YnVybiBVbml2ZXJzaXR5IFRyYW5zZ2VuaWMgRmFjaWxpdHkgMjQwQiBHcmVlbmUgSGFsbCBDLiBCZWF0eSBIYW5uYSBIb3J0aWN1bHR1cmUgYW5kIEVudmlyb25tZW50YWwgQ2VudGVyIFBsYW50IERpYWdub3N0aWMgTGFiIEMuClRoZW4gd2hlbiB0aGUgYnVsbCBvciBjb3cgb3Igd2hhdGV2ZXIgY2Fubm90IHN0YW5kIGFueSBtb3JlIGFuZCBpcyB0b28gdGlyZWQgdG8gZmlnaHQgYW55bW9yZSwgdGhlbiB0aGV5IGdvIGluIGZvciB0aGUga2lsbC4gSG93ZXZlciwgdGhlIG9uZSBkaXN0cmFjdGluZyB0aGUgYm92aW5lIHdvdWxkIGhhdmUgdG8gYmUgcmVhbGx5IGNhcmVmdWwgYWJvdXQgZ2V0dGluZyBpbiB0aGUgd2F5IG9mIHRob3NlIGhvcm5zLCBvdGhlcndpc2UgaXQgd2lsbCBlbmQgdXAgb25lIG9uIG9uZSwgYW5kIHRoZSBib3ZpbmUgd2lsbCB3aW4uIApUaGVyZSBoYXZlIGJlZW4gdGltZXMgd2hlcmUgSSB5ZWxsZWQgYXQgaGltIGJ1dCBub3cgdGhhdCBkb2VzbiBldmVuIHdvcmsuIApUaGUgb3ZlcmNsb2NraW5nIHBhcnQgbWFrZXMgZXZlcnl0aGluZyBtdWNoIG1vcmUgZXhwZW5zaXZlLiBNYXliZSB5b3UgY291bGQgZ28gZm9yIGEgY2hlYXBlciBTU0QgdGhhdCBpcyBwcm9iYWJseSAyMCBldXJvIGxlc3MuIApBdm9pZGluZyByb21hbmNlIGluIHRoZSBVUyBhdCB0aGlzIHBvaW50IGluIHRpbWUgaXMgYSBiaXQgbGlrZSBhdm9pZGluZyB0YXhlcy4gR292ZXJubWVudCBncmFudHMgdXMgcmlnaHRzIGFuZCBwcml2aWxlZ2VzIGJhc2VkIG9uIG1hcml0YWwgc3RhdHVzIChvdmVyIGEgMSwwMDAgb2YgdGhlbSkuIEdheSBhbmQgbGVzYmlhbiBBbWVyaWNhbnMsIGF0IGxlYXN0IHRoZSBvbmVzIHdobyBhcmUgcHJpbWFyaWx5IHdoaXRlIGFuZCBlZHVjYXRlZCB0aGVtc2VsdmVzLCBmaWdodCBiaXR0ZXJseSBmb3IgdGhlICJyaWdodCIgdG8gbWFycnkuIApZZXMsIEkgaGVhcmQgeW91LiAKQnJhbmRvbiBTYW5kZXJzb24gYmlibGlvZ3JhcGh5IGlzIG1ham9yaXR5IGFsbCBvbmUgdW5pdmVyc2Ugd2l0aCBlYXN0ZXIgZWdncyBhbmQgc2lkZSBiaXRzIHRoYXQgY29ubmVjdCB0aGVtIGFsbCB0b2dldGhlciwgc3BsaXQgb3ZlciBhIGZldyBkaWZmZXJlbnQgdHJpbG9naWVzL3N0b3J5bGluZXMuIFRoZSBTdG9ybWxpZ2h0IEFyY2hpdmVzIHNlcmllcyB0aGF0IGhlIGN1cnJlbnRseSBwdWJsaXNoZWQgMyBub3ZlbHMgZnJvbSBpcyB0aGUgbW9zdCBhbWJpdGlvdXMgYW5kIGNvaGVzaXZlIHRoaW5nIEkgcmVhZCAoZXZlbiBjb21wYXJlZCB0byBBU09JQUYgSU1PKSwgYW5kIHRoZXkgY2xvY2sgaW4gYXQgb3ZlciAxMDAwIHBhZ2VzIGVhY2gsIGFuZCB0aGF0IHdpdGhvdXQgdGhlIHVzdWFsIHJhbWJsaW5nIHlvdSBnZXQgd2l0aCBib29rcyBvZiB0aGF0IGxlbmd0aCwgYW5kIGhhcyBldmVyeXRoaW5nIHlvdSBhc2tlZCBmb3IgYWJvdmUuClRoZXJtZXMgYXJlIHByZXR0eSBzYWZlIChkb2VzbiBzdG9wIHBlb3BsZSBtYWtpbmcgYXJyYW5nZW1lbnRzIGZvciBsYXRlciwgYnV0IG5vdGhpbmcgaGFwcGVucyBvbiB0aGUgcHJlbWlzZXMpLkFwYXJ0IGZyb20gdGhlIFRhdW51cyBUaGVybWUsIHRoZXJlIGFyZSBhbHNvIGJpZyBGS0sgc2F1bmEgYXJlYXMgYXQgdGhlIFJlYnN0b2NrYmFkIGluIEZyYW5rZnVydCBhbmQgYXQgdGhlIFRpdHVzIFRoZXJtZS4gClRoZSBmYWJyaWMgeW91IGNob29zZSBmb3IgeW91ciBkcmFwZXJpZXMgdG8gdGllIHRoZSB3aG9sZSByb29tIHRvZ2V0aGVyLCBzYXlzIGRlc2lnbmVyIFNhbmRyYSBIdXJ0bGV5LiBGYWN0b3JzIHRvIGNvbnNpZGVyIHdoZW4gY2hvb3NpbmcgdGhlIGZhYnJpYyBhcmUgdGhlIGNvbG91ciBhbmQgc3R5bGUgb2YgeW91ciBsaWdodGluZyBmaXh0dXJlcywgdGhlIGNvbG91ciBvZiBwYWludCBvbiB0aGUgd2FsbHMgYW5kIGFueSBmaW5pc2hpbmcgb3IgdHJpbSBjb2xvdXJzLiAKT24gdGhlIHdob2xlLCBpZiB5b3Ugd2FudCB0byBwbGF5IGEgcmlza3kgZ2FtZSwgcGxheSBpbiB0aGUgdG91cm5hbWVudHMgICB5b3Ugd291bGQgZW5qb3kgdGhlIGdhbWUgYW5kIHlvdSB3b3VsZCBoYXZlIGNoYW5jZXMgdG8gY2F0Y2ggYSB3aGFsZS4uIApBIGNsYXNzaWMgRHIuIApGbGF0cGFrIG1pZ2h0IGJlIGEgYmV0dGVyIGFsdGVybmF0aXZlIChpdCBhbGxvd3MgbXVsdGlwbGUgcmVwb3NpdG9yaWVzKSwgYnV0IGl0IHdvcmtzIGJ5ICJidW5kbGluZyIgZGVwZW5kZW5jaWVzIChzbyBnZW5lcmFsbHkgc3BlYWtpbmcsIGFuIGFwcCB3aWxsIGhhdmUgdG8gZG93bmxvYWQgYW5kIHN0b3JlIGRlcGVuZGVuY2llcyBpdCBtaWdodCBuZXZlciBuZWVkKSwgd2hpY2ggaW5jcmVhc2VzIGRvd25sb2FkIHRpbWUsIGJhbmR3aWR0aCBkZW1hbmRzLCBhbmQgbmVlZGVkIGRpc2sgc3BhY2UgKGFuZCB3aWxsIGhhdmUgYSBoaWdoZXIgZW52aXJvbm1lbnRhbC9jYXJib24gZm9vdHByaW50ICkuIApXZSBvd24gdGhlIGxhbmQgeW91IG5lZWQgdG8gb3duIHRvIGhhdmUgYWNjZXNzIHRvIGRldmVsb3AgeW91ciBsYW5kLiAKU28gbm93IGEgbG90IG9mIHBsYWNlcyAobm90IGFsbCB0aG91Z2gpIGhhdmUgc3dpdGNoZWQgdG8gYm9sdCBndW5zLCBldGMuIFdpdGggcGlnbGV0cyBpdCBpbnN0YW50LCBJIGNhbm5vdCBpbWFnaW5lIGhvbGRpbmcgYSBjYXQgdW5kZXJ3YXRlciB1bnRpbCB0aGV5IHN0b3BwZWQgc3RydWdnbGluZywgdGhhdCBkb2VzIHNvdW5kIHRyYXVtYXRpYyBhcyBoZWxsLCBlc3BlY2lhbGx5IGlmIGl0IHdhcyBvbmNlIGEgbWVtYmVyIG9mIHRoZSBmYW1pbHkuLiAKQ2V0dGUgY29uc3VsdGF0aW9uIHBvdXJyYWl0IGF2b2lyIGxpZXUgbGUgbW1lIGpvdXIgcXVlIGxlcyBsZWN0aW9ucyBldXJvcGVubmVzLCBsZSAyNiBtYWkgcHJvY2hhaW4uIFBvdXIgUGhpbGlwcGUgSnV2aW4sIGx1bmRpIG1hdGluIHN1ciBmcmFuY2VpbmZvLCBzaSAiRW1tYW51ZWwgTWFjcm9uIHBlcmQgY2UgcmZyZW5kdW0sIGlsIGZhdWRyYSBxdSBlbiB0aXJlIGxlcyBjb25zcXVlbmNlcywgaWwgZmF1ZHJhIHF1IHBhcnRlIi4gCkJhc2ljYWxseSB3b25kZXJpbmcgaG93IG11Y2ggdGhpcyBpcyBnb2luZyB0byBhZmZlY3QgbXkgbWFyYXRob24uIApCZXN0IFdlc3Rlcm4gT3BlbnMgVGhyZWUgSG90ZWxzIGluIEdoYW5hIGFuZCBOaWdlcmlhIEluY2x1ZGluZyBpdHMgRmlyc3QgQmVzdCBXZXN0ZXJuIFByZW1pZXIgaW4gQWZyaWNhCkRhcyBBdWZuZWhtZW4gaXN0IGVpbmZhY2gsIG51ciBkaWUgZXJzdGUgdW5kIGRpZSBsZXR6dGUgTWFzY2hlIHNpbmQgZXR3YXMgcHJvYmxlbWF0aXNjaC4gRGVzaGFsYiBoYWJlIGljaCBkZW4gZ2VsYmVuIEF1c3NjaG5pdHQgYXVmIGRlbSBGb3RvIG9iZW4gbGlua3MgdmVyZ3JlcnQuIApNbW1tIC4gCkkgYmVjb21pbmcgbW9yZSBhbmQgbW9yZSBjb252aW5jZWQgdGhleSBkb24gaGF2ZSBhbnl0aGluZyB1c2FibGUuIEkgcmVhbGx5IGhvcGUgSSB3cm9uZyBhbmQgSSBrbm93IGEgZmV3IExFL2ZhbWlseSBjb21tZW50cyBzdWdnZXN0IHRoZXkgaGF2ZSBzb21ldGhpbmcsIGJ1dCBJIHRoaW5rIHRoYXQgbWlnaHQgYmUgZm9yIHNob3cuCjc1KSwgbGUgZG9jdGV1ciBMZWNsZXJjIHRhaXQgcGV1dCB0cmUgbGUgc2V1bCAgaWdub3JlciBzYSBib250IGV0IHNhIHZhbGV1ci4uIApXZSBoYXZlIDQ1MCBlbXBsb3llZXMgb24gdGhhdCBvbmUuIApDZSBub3V2ZWF1IGJpbGxldCByYXNzZW1ibGUgIGxhIGZpbiB1bmUgc3ludGhzZSBkZXMgcHJvcG9zaXRpb25zIGRlIGNvbXBsbWVudHMgYWxpbWVudGFpcmVzIG1haXMgZWxsZSBhIGF1c3NpIHBvdXIgYnV0IGRlIHJhc3NlbWJsZXIgbGVzIGxpZW5zIHZlcnMgZGVzIGJpbGxldHMgYW5jaWVucyB0cmFpdGFudCBkZSBxdWVzdGlvbnMgZW4gcmFwcG9ydCBhdmVjIGxlcyBzdWpldHMgaW5kaXF1cyBkYW5zIGxlIHRpdHJlLiBDJ2VzdCBhdXNzaSBsJ29jY2FzaW9uIGRlIHJ2aXNlciBjZXMgYXJ0aWNsZXMuQXVnbWVudGV6IHZvdHJlIGNvbnNvbW1hdGlvbiBkJ2h1aWxlcyBvbWdhIDMgZW4gbWFuZ2VhbnQgZGUgbCdodWlsZSBkZSBncmFpbmUgZGUgbGluLCBkZXMgbm9peCBldCBkdSBwb2lzc29uIGRlcyBtZXJzIGZyb2lkZXMgKHNhcmRpbmVzLCBtYXF1ZXJlYXV4LCBoYXJlbmdzKS4gCkkgaGF2ZSBhIHF1ZXN0aW9uIGFib3V0IHRoZSAibmF0dXJhbGl0eSIgb2Ygc29tZSBtb3JwaG9sb2dpY2FsIGZlYXR1cmVzIEkgd2FzIHRoaW5raW5nIGFib3V0IGFkZGluZyB0byBhbiBhIHByaW9yaSBsYW5nLiBCYXNpY2FsbHksIHRoZSBpZGVhIGlzIHRvIGFsdGVyIHRoZSBpbmZsZWN0aW9uIG9mIGEgbm91biBkZXBlbmRpbmcgb24gdGhlIHR5cGUgb2YgY2xhdXNlIGl0IGlzIHBsYWNlZCBpbi4gCkhlIHNlZSBhIGNsb3NlZCBkb29yLCBhbmQgb3BlbiBpdCB1cCBhbmQgd2FsayByaWdodCBpbnRvIHRoZSBtaWRkbGUgb2YgdGhlIHJvb20uIAo4KSwgRGVyaW5hIEhhcnZleSBCYW5kIChBdWcuIApJIHNhdyBoaW0gYXQgYSBjb25jZXJ0IGJhY2sgaW4gU2VwdGVtYmVyIDIwMTgsIGJ1dCBJIGRpZG4gY2FyZSB0byBzYXkgYW55dGhpbmcgdG8gaGltLiBIZSBkaWRuIHNlZSBtZS4uIApJIHJlYWQgYW5vdGhlciBvbmUgb2YgeW91ciBjb21tZW50czogeW91IHNheSB5b3UgcGxheSAiMjUvNTBubCIuIEhvd2V2ZXIsIHlvdSBhbHNvIHNhaWQgeW91IGFyZSBhIGJlZ2lubmVyLiBZb3UgbmVlZCB0byBzdGFydCBhdCB0aGUgdmVyeSBsb3dlc3Qgb2Ygc3Rha2VzIGFuZCBwcm92ZSB5b3Vyc2VsZi4gSSBoYXZlIGRlY2lkZWQgdG8gZ28gdG8gdGhlIHZlcnkgbG93ZXN0IHN0YWtlcyBvbiB0aGUgc2l0ZSBJIHBsYXkgb24gYmVjYXVzZSBldmVuIHRob3VnaCBJIGRvIHdlbGwgaW4gcG9rZXIsIEkgb2Z0ZW4gZmVlbCBsaWtlIGl0IGlzIGx1Y2sgYW5kIEkgZG9uIHF1aXRlIHVuZGVyc3RhbmQgd2h5IEkgd2lubmluZyBtb25leS4gSSB3b3VsZCBzdWdnZXN0IHlvdSBkbyB0aGUgc2FtZS4KVGhhdCdzIHNhZCBmb3IgYW4gQW1lcmljYW4uLiAKV09XIVJlc2VhcmNoZXJzIGF0IHRoZSBBREhEIFJlc2VhcmNoIENlbnRyZSBpbiBFaW5kaG92ZW4sIHRoZSBOZXRoZXJsYW5kcywgZGl2aWRlZCAxMDAga2lkcyB3aXRoIEFESEQgKGFnZXMgNCB0byA4ICkgaW50byB0d28gZ3JvdXBzLk9uZSBncm91cCBhdGUgYSBoZWFsdGh5IGRpZXQgZm9yIDUgd2Vla3Mgd2hpbGUgdGhlIG90aGVyIGdyb3VwIGF0ZSB0aGUgUmVzdHJpY3RlZCBFbGltaW5hdGlvbiBEaWV0LlRoZSBSRUQgZGlldCBkb2VzIG5vdCBhbGxvdyBmb3IgcHJvY2Vzc2VkIGZvb2RzLiAKVGhlIG94Zm9yZCBkaWN0aW9uYXJ5IGRlZmluaXRpb24gaXNuIGdyZWF0IGhlcmUsIGl0IGp1c3QgZGlyZWN0cyB0byAibmVvIGZhc2Npc3QiLCBhbmQgdGhhdCBzYXlzICJBIG1lbWJlciBvZiBhbiBvcmdhbml6YXRpb24gc2ltaWxhciB0byB0aGUgSXRhbGlhbiBGYXNjaXN0IG1vdmVtZW50IG9mIHRoZSBlYXJseSAyMHRoIGNlbnR1cnkuIiBJdGFseSB1bmRlciBNdXNzb2xpbmkgd2FzIGZhaXJseSByYWNpc3QuIApJbiBPbWFoYSwgaXQncyBoYXJkZXIgdG8gcmVzb2x2ZSB3aGljaCBoYW5kIHlvdXIgYWR2ZXJzYXJ5IGhhcyBvbiB0aGUgZ3JvdW5kcy4gCkhvd2V2ZXIsIHRoZSBzeW1ib2xpYyBzdGFnZSB2ZXJzaW9uIG9mIHJlYWxpdHkgcmVnYXJkaW5nIHRoZSBzb2NpbyBwb2xpdGljYWwgaHViYnViIGVuYWN0ZWQgZXZlcnkgZGF5IGFyb3VuZCB1cywgdGhlIExVU0ggYW5kIFVTIEVtYmFzc3kgY29sbGFib3JhdGl2ZSBwbGF5ICdPZGQgQ291cGxlJyBzdGFnZWQgYXQgTmF0aW9uYWwgQXJ0IEdhbGxlcnkgb24gVHVlc2RheSByZW1haW5lZCBhICdsb3cgY2Fsb3JpZSBkaWV0IGZvb2QnIGZvciB0aGUgYXVkaWVuY2UgdXNlZCB0byAnZm9vdCB0YXBwaW5nIGFuZCBoaXAgc3dpbmdpbmcnIGJsb2NrYnVzdGVycyBpbiB0aGUgZm9ybSBvZiBmdW4gZmlsbGVkIHBhY2thZ2VzIG9mIGhpbGFyaXR5IGFuZCBtZWxvZHJhbWEgZnJvbSBVc2FtYSBRYXppLkJlaW5nIGEgbG91ZCBuYXRpb24sIHRoZSBzbGVlcHkgc2xvcHB5IGNvbWVkeSBmYWlsZWQgdG8gdGlja2xlIG91ciBmdW5ueSBib25lcyB0aG91Z2ggZm9yIG1vcmUgc2VyaW91cyBvbmVzIGFuZCBwb2xpdGljYWxseSBjb25zY2lvdXMgaW5kaXZpZHVhbHMsIHRoZSBzZWxlY3Rpb24gb2YgdGhlIHBsYXkgdG8gYmUgc3RhZ2VkIGF0IHRoaXMganVuY3R1cmUgY2VydGFpbmx5IHJhaXNlZCBjZXJ0YWluIHF1ZXN0aW9ucywgYW5kIHRoZSBhbnN3ZXIgY29tZXMgdG9vIGVhc3kuIApOb3QgZXZlcnlvbmUgd2FudHMgbW9yZSBvZiB0aGUgc3Vic3RhbmNlIHRoZXkgdXNpbmcgdGhvdWdoLCBhbmQgbmljb3RpbmUgaXNuIGVzcGVjaWFsbHkga25vd24gZm9yIHJhbXBpbmcgdXAvZGltaW5pc2hpbmcgcmV0dXJucyBsaWtlIGNyYWNrIGlzLiBNeSBvYnNlcnZhdGlvbiBpcyB0aGF0IG1vc3QgcGVvcGxlIGRvbiBpbmNyZWFzZSB1c2Ugb2Ygbmljb3RpbmUganVzdCBiZWNhdXNlIGl0IGVhc3kgYW5kIHJlbGF0aXZlbHkgY29uc2VxdWVuY2UgZnJlZSB0byBkbyBzby4gClRoZSBCYW5rIG9mIENhbmFkYSBtaWdodCBiZSBsZWFuaW5nIHRoYXQgd2F5LCBidXQgaXRzIGpvYiBkZXNjcmlwdGlvbiBrZWVwcyBpdCBmcm9tIG1ha2luZyBkaXJlY3Rpb25hbCBiZXRzIHRvbyBzb29uLiBQb2xveiBzZWVzIGhpbXNlbGYgYXMgYSByaXNrIG1hbmFnZXI7IGhlIGFsd2F5cyBpcyBoZWRnaW5nIGFnYWluc3QgdGhlIHBvc3NpYmlsaXR5IHRoYXQgdGhlIG1vc3Qgb2J2aW91cyBzY2VuYXJpbyBjb3VsZCBiZSB3cm9uZy4gQmVjYXVzZSBzb21lIG9mIHRoZSBkcml2ZXJzIG9mIENhbmFkYSdzIHNsdW1wIGRlZnkgZWFzeSBleHBsYW5hdGlvbiwgaXQncyBwb3NzaWJsZSB0aGUgZWNvbm9teSBjb3VsZCBnZXQgYmFjayBvbiB0cmFjayByZWxhdGl2ZWx5IHF1aWNrbHkuLiAKSSBhcnJpdmUgaW4gQXVndXN0IGJlY2F1c2UgbWFuIEkgd2FudGVkIHRvIGZlZWwgdGhlIGtpY2tzIHlvdSBrbm93LiBUaGF0J3MgbGlrZSB0aGUgYmVzdCBwYXJ0IG9mIHByZWduYW5jeSwgZmVlbGluZyB0aGVtIGtpY2tzIGFuZCBwZW9wbGUgc2F5IHlvdSBwcmV0ZW5kIHRhbGsgYnV0IEkgdGhpbmsgbWUgYW5kIGxpdHRsZSBnaXJsIHdlcmUgaGF2aW5nIGEgY29udmVyc2F0aW9uLiBBbnl3aG8sIEkgaGFkIHRoaXMgZmVtYWxlIG1hc3NhZ2UgbGFkeSBjb21lIGluIGFuZCBhcHBhcmVudGx5IGxvdHMgb2YgcGVvcGxlIGJlZyB0b28gKD8/PyAgIHRoZXkgb3duIHRoZWlyIG93biBob3VzZXMgYW5kIGplZXBzKSwgYW5kIHdoZW4gdGhleSBhc2tlZCB3aGF0IGl0IGlzICAgSSBzYWlkIGl0J3MgYSBnaXJsIGFuZCBJIGFsd2F5cyB3YW50ZWQgb25lOgpTeW5saSAgMjYgcG9pbnRzICBzdWJtaXR0ZWQgNiBtb250aHMgYWdvCkN0IDEwZSwgYXZlYyBsJ2F2YW5jZSBkdSBjaGFudGllciBkdSBOb3V2ZWF1IExhcmlib2lzaXJlIGV0IGxlIGNoYW50aWVyIGRlIGxhIEdhcmUgZHUgTm9yZCAyMDIwIHF1aSBzJ2Fubm9uY2UuIEN0IDE4ZSwgY2Ugc29udCBsZXMgcnVlcyBNeXJoYSBldCBMb24gcXVpIHZvbnQgc2Ugdm9pciByaGFiaWxpdGVyLCBtYWlzIGdhbGVtZW50IGxhIHJ1ZSBkZSBsYSBHb3V0dGUgZCdPciwgZXQsIG5vdXMgbCdlc3Byb25zLCBsZSBjb21tZW5jZW1lbnQgZGVzIGNoYW50aWVycyBkZSBydWVzIENhdiBldCBSaWNob21tZSwgZXQgZHUgcG91cnRvdXIgZGUgbCdnbGlzZSBTYWludCBCZXJuYXJkLCBkZXMgcHJvamV0cyBsYXVyYXRzIGR1IEJ1ZGdldCBwYXJ0aWNpcGF0aWYgZGUgbGEgdmlsbGUgZGUgUGFyaXMuIFRvdWpvdXJzIGRhbnMgbGUgMThlLCBldCBzdXIgbGUgcGFyY291cnMgZGUgbGEgLCBsZSBQcm9qZXQgZGUgbCdPYXNpcyB1cmJhaW5lIHZhIGdhbGVtZW50IHRyZSBtaXMgZW4gb2V1dnJlLiAKQXQgdGhlIHNhbWUgdGltZSwgbWFzcyBwaGlsYW50aHJvcHkgaGFzIGJlY29tZSBpbmNyZWFzaW5nbHkgbmV3cyBkcml2ZW4sIGFzIGdpdmVycyByZXNwb25kIHRvIGVhcnRocXVha2VzIGFuZCB0c3VuYW1pcyB3aXRoIGFuIG91dHBvdXJpbmcgb2YgcmVzb3VyY2VzIGJ1dCB0aGVuIGxvc2UgaW50ZXJlc3QgYXMgdGhlc2UgZGlzYXN0ZXJzIG1vdmUgb2ZmIHRoZSBmcm9udCBwYWdlLiAKIldlIGhhdmUgdG8gdGFrZSB3aGF0IHdlJ3JlIGdpdmVuLCIgc2hlIHNhaWQuICJXZSdyZSBub3QgaGFwcHkgd2l0aCB0aGF0LiIKIldlJ3JlIHN0aWxsIHJldmlld2luZyB0aGUgc2hvb3RpbmcgYXNwZWN0IG9mIGl0IGFuZCBhd2FpdGluZyBzb21lIGFkZGl0aW9uYWwgcmVwb3J0cywiIGhlIHNhaWQuICJXZSBleHBlY3QgdG8gYmUgbWFraW5nIGEgZGV0ZXJtaW5hdGlvbiBieSB0aGUgZW5kIG9mIHRoZSB3ZWVrLiIKQWxzbywgWVRBIGZvciBhZ3JlZWluZyB0byBoZWxwIGFuZCB0aGVuIGRpZG4ndC4KVGhlIHRyYWluIEkgbmVlZCB0byBjYXRjaCBjb21lcyBieSBldmVyeSAxMCBtaW51dGVzIG9yIHNvLiAKIlRoZSBBbWVyaWNhbnMsIiBCZXJhdGkgb2JzZXJ2ZWQgcXVpZXRseSwgImFyZSB0aGUgb25seSBwZW9wbGUgd2hvIGhhdmUgbm8gaWRlYSB3aGF0IHRoZWlyIHJlYWwgaW50ZXJlc3RzIGFyZS4iCkkgZG9uJ3QgdW5kZXJzdGFuZCB0aGUgU1dFUkYgdGhpbmcgdGhvdWdoLiBJdCdzIGJhc2ljYWxseSAiV29tZW4gY2FuIGRvIHdoYXRldmVyIHRoZXkgd2FudCBleGNlcHQgdGhhdC4iSSdtIHBybyBzZXggd29ya2VycyBidXQgYW50aSBzZXggdHJhZmZpY2tpbmcgKGFzIEkgaG9wZSBtb3N0IHBlb3BsZSBhcmUpLiAKIlRoZSBjb250aW51ZWQgc3Ryb25nIGZpbmFuY2lhbCBwZXJmb3JtYW5jZSBvZiB0aGUgYnVzaW5lc3MgaGFzIGVuYWJsZWQgdGhlIGNsdWIgdG8gaW1wcm92ZSBtZW1iZXJzJyBmYWNpbGl0aWVzIHdoaWxlIGF0IHRoZSBzYW1lIHRpbWUgcmVkdWNpbmcgbm9uIGNvcmUgZGVidCwiIFNTIHByZXNpZGVudCBFZGRpZSBEdW5sb3Agc2FpZC4gCldpbmRzb3IgcG9saWNlIHNheSB0aGUgaW52ZXN0aWdhdGlvbiByZXZlYWxlZCB0aGUgYnVzaW5lc3Mgd2FzICJhIGZyb250IGZvciBpbGxlZ2FsIHNleHVhbCBhY3Rpdml0eSBhbmQgbmFyY290aWNzLiJXaW5kc29yIHBvbGljZSB0YWtlIGEgbWFuIGludG8gY3VzdG9keSBkdXJpbmcgYSByYWlkIFdlZG5lc2RheSBvZiBJbmZpbml0eSBTcGEgYXQgMTAzMyBXeWFuZG90dGUgU3QuIApTdXJlLCB0aGUgU3RhciBUcmVrIGNvbnZlbnRpb25zIGJyaW5nIGluIGEgbGl0dGxlIGJpdCBvZiBtb25leSwgYnV0IEkgd2FzIGFzdG9uaXNoZWQgYXQgaG93IHZlcnkgZ2VuZXJvdXMgdGhlIFN0YXIgVHJlayAoZnJvbSBhbGwgb2YgdGhlIGZyYW5jaGlzZSkgYWN0b3JzIGFyZSB3aXRoIHRoZWlyIHRpbWUuIApXaGF0IHNvcnQgb2YgbXVzaWMgc3R1ZmYgZG8geW91IGRvPyBJIGFsc28gZW5qb3kgZG9pbmcgbXkgbXVzaWMgc3R1ZmYgaW4gdGhlIGV2ZW5pbmdzLiAKVGhlIG90aGVyIG9uZXM6IEdlb3JnaWEgU3RhdGUgKDAgNCkgdmlzaXRzIEFsYWJhbWEsIHdoaWNoIHN1c3BlbmRlZCBBbGwgQW1lcmljYW4gc2FmZXR5IEhhIEhhIENsaW50b24gRGl4IGZvciB1bnNwZWNpZmllZCB0ZWFtIHJ1bGVzIHZpb2xhdGlvbnMsIHNvIGlmIHlvdSB0b29rIHRoZSBUaWRlIG1pbnVzIDU2IC4geW91J3JlIHByb2JhYmx5IHN0aWxsIGdvb2QuIFdhbnQgdG8gYmV0IGhlJ3MgYmFjayBpbiB0aGUgbGluZXVwIGJ5IE5vdi4gOT8gTFNVIGhlYWRzIHRvIE1pc3Npc3NpcHBpIFN0YXRlLCB3aGljaCBpcyBrbm93biB0byBwbGF5IGRlZmVuc2Ugb2NjYXNpb25hbGx5LCBhbmQgdGhpcyBtaWdodCBhZmZlY3QgdGhlIG91dGNvbWUsIGJ1dCBub3QgcmVhbGx5OyBLZW50dWNreSB0cmF2ZWxzIHRvIFNvdXRoIENhcm9saW5hLCB3aGljaCBoYXMgYW5ub3VuY2VkIHRoYXQgc2hvdWxkZXIgaW5qdXJlZCBRQiBDb25ub3IgU2hhdyB3aWxsIHN0YXJ0IGFuZCBwbGF5IHNvbWUsIHByb2JhYmx5IG5vdCB0b28gbXVjaCBiZWNhdXNlLCBhZnRlciBhbGwgIGl0J3MgS2VudHVja3kuCkplZGVyIFNwaWVsZXIgYmVrb21tdCBmbmYgS2FydGVuIHVuZCBkYXJmIGVpbmUgb2RlciBtZWhyZXJlIGRpZXNlciBLYXJ0ZW4gZ2VnZW4gZWluZSBnbGVpY2hlIEFuemFobCBpbSBTdGFwZWwgZWludGF1c2NoZW4uIApZb3Ugd2FudCB0byByZW1lbWJlciBpdCB5ZWFycyBsYXRlci4gClN0YW1tZW4gdW50ZXIgYW5kZXJlbSB2b24gZXh0ZXJuZW4gV2VyYmV1bnRlcm5laG1lbiB1bmQgd2VyZGVuIHZlcndlbmRldCwgdW0gSW5mb3JtYXRpb25lbiBiZXIgZGllIHZvbSBOdXR6ZXIgYmVzdWNodGVuIFdlYnNpdGVzIHp1IHNhbW1lbG4sIHVtIHouIApUaGlzIHBlcnNvbiB2aW9sYXRlZCB5b3UgKGFuZCB5b3VyIEJJTC9TSUwpIGluIGEgaG9ycmVuZG91cyBtYW5uZXIuIApIb3dldmVyLCBldmVuIGlmIEkgdGhpbmsgdGhlc2UgY29tcGFuaWVzIGFyZSBhbGwgdG9vIGJpZyBpdCBub3QgZm9yIG1vbm9wb2x5IHJlYXNvbnMgbGlrZSB0aGUgdGVsZWNvbXMuCkluc2dlc2FtdCBrb25udGVuIHNvIDIuNTAwLDAwIEV1cm8gZnIgZGVuIFNjaHV0eiBkZXMgVW5lc2NvIFdlbHRuYXR1cmVyYmVzIGdlc2FtbWVsdCB3ZXJkZW4uIApKdXN0IGFzIG1vbWVudHVtIHBlYWtlZCwgd2UgYW5ub3VuY2VkIG91ciBzdWJzY3JpcHRpb24gc2VydmljZSB3aXRoIGEgdmlkZW8gZXhwbGFpbmluZyBjb21lZGljYWxseSB3aGF0IHdlIHdlcmUgdXAgdG8uIFdlIGJyYWNlZCBvdXJzZWx2ZXMuIApQb3VycXVvaSBzIGRldmFudCBsZXMgYmFpZXMgZGUgZ29qaSBhbG9ycyBxdWUgbm91cyBhdm9ucyBjZSBicmF2ZSBjeW5vcmhvZG9uIHF1ZSBub3VzIG9mZnJlIG5vdHJlIGJvbiB2aWV1eCBydXN0aXF1ZSBSb3NhIGNhbmluYSA/IEludXRpbGUgZCBlbnZhaGlyIGRlcyBwYXlzIGxvaW50YWlucyAgbGEgcmVjaGVyY2hlIGQgcHJjaWV1eCBHcmFhbCB2Z3RhbC4gClRoZSBnb3Zlcm5tZW50IHNob3VsZG4ndCBiZSByZXZpZXdpbmcgYSBwYXN0b3IncyBzZXJtb24gdG8gc2VlIHdoZXRoZXIgb3Igbm90IGhlIG9yIHNoZSBpcyBlbmRvcnNpbmcgYSBjYW5kaWRhdGUgZm9yIHB1YmxpYyBvZmZpY2UsIiBBbGFuIEUuIAoxMDAwIFBhdWxzb24gVG9waGF0IGFuZCBDYW5lIFBva2VyIENoaXBzIENyaXRpY2FsIE92ZXJ2aWV3ClRoZXJlIGFyZSB2aXJ0dWFsbHkgdW5saW1pdGVkIHBhdGhzIGZvciBhbiBpbWFnaW5hdGl2ZSBob3Jyb3IgZmlsbW1ha2VyLCBoZXJlLiBUaGV5IGNvdWxkIGp1c3Qga2VlcCB0aGUgYWlycG9ydCBhcyBjcmVlcHkgYmFja2dyb3VuZCBmb3Igc29tZSBnb29kLCBvbGQgZmFzaGlvbmVkIEVsaSBSb3RoIHN0eWxlIHRvcnR1cmUgcG9ybiBjb25zcGlyYWN5LiBUaGV5IGNvdWxkIGhhdmUgYSBibHVlIGhvcnNlIG1hc2sgd2VhcmluZyBzZXJpYWwga2lsbGVyIHN0YWxraW5nIHRoZSBncm91bmRzLCBvciBqdXN0IGhhdmUgYWxsIHRoYXQgbWFzb25pYy9zYXRhbmljL05hemkgY3JhcCBiZSB0cnVlIGFuZCBtYWtlIHNvbWUgdW5ob2x5IEhpdGxlciBwb2x0ZXJnZWlzdCAoSGlsdGVyZ2Vpc3Q/KSBoYXVudCB0aGUgYWlycG9ydC4gSGVsbCwgZXZlbiBpZiB0aGV5IHRvb2sgYSB0b3RhbCBjYW1wIHJvdXRlLCBhdCBsZWFzdCB3ZSdkIGJlIHRyZWF0ZWQgdG8gTmljb2xhcyBDYWdlICh5b3Uga25vdyBpdCB3b3VsZCBiZSBoaW0pIHJ1bm5pbmcgZnJvbSBvbGQgRWwgTWVzdGVuby4gVGhlIDE4NDUgQXJjdGljIGV4cGVkaXRpb24gb2YgQ2FwdGFpbiBTaXIgSm9obiBGcmFua2xpbiBmb3VuZCB0aGlzIG91dCB0aGUgaGFyZCB3YXksIGFzIHRoZXkgcGVyaXNoZWQgdG8gdGhlIGxhc3QgbWFuIGluIGEgY29uZ2EgbGluZSBvZiB0cmFnZWR5OiBzaGlwd3JlY2ssIGRpc2Vhc2UsIGxlYWQgcG9pc29uaW5nIGR1ZSB0byBiYWRseSB0aW5uZWQgZm9vZCBhbmQvb3IgZmF1bHR5IGRpc3RpbGxlZCB3YXRlciBzeXN0ZW1zLCBhbmQgdGhlIGZhY3QgdGhhdCB0aGV5IHdlcmUgZGVzZXJ0ZWQgaW4gdGhlIGdvZGRhbW4gQXJjdGljIHdpdGhvdXQgYWRlcXVhdGUgZXF1aXBtZW50LCBldmVudHVhbGx5IGRyb3ZlIHRoZSAxMjkgc3Ryb25nIGdyb3VwIHRvIGNhbm5pYmFsaXNtIGFuZCBhbiBlYXJseSBncmF2ZS4gVGhhdCdzIC4gYSBwcmV0dHkgc29saWQgcGVyZm9ybWFuY2UsIGFzIHN0aWZmIHVwcGVyIGxpcHMgZ28uCkRvIG5vdCBiZSBsaWtlIHRob3NlIG1pc2VyYWJsZSBwZW9wbGUgd2hvIEkgaGF2ZSBtZXQgd2l0aCAkNzAsICQ4MCwgJDkwLCBvciAkMTAwIG1pbGxpb24gaW4gdGhlaXIgYmFuayBhY2NvdW50cyBidXQgcHJvYmFibHkgY2FuJ3Qgc2xlZXAgYXQgbmlnaHQgb3IgbG9vayBhdCB0aGVpciBmYWNlIHdoZW4gdGhleSBsb29rIGluIHRoZSBtaXJyb3IuLiAKVGh1cyB0aGUgcHJvYmFiaWxpdHkgb2Ygcm9sbGluZyBhIDEzIGlzIHplcm8sIGFzIGl0IGNhbm5vdCBoYXBwZW4uIApUaGV5IGZpbmFsbHkgZ290IHRoZSBjYXRoZXRlciBpbiBhbmQgdG9vayB0aGUgc3BlY3VsdW0gb3V0LiAKVGhpcyBhbGxvd3MgdGhlIFBUIHRvIHNlZSAzIDQgY2xpZW50cyBhbiBob3VyLCB3aGlsZSBzdGlsbCBnaXZpbmcgdGhlIGNsaWVudHMgYW4gaG91cnMgd29ydGggb2YgdHJlYXRtZW50cy4gClRoaXMuIApBbHNvLCBpdCBhIHR5cGljYWwgbmFycmF0aXZlIHdoZW4gaXQgY29tZXMgdG8gaG93IHRoZSBCcml0aXNoIGVzdGFibGlzaG1lbnQgdmlld3MgYW5kIHRyZWF0cyB0aGUgSXJpc2guIApMZWlkZXIgaGF0IG1pciBGdXJ0dW5hLCBiencuIApBbG1vc3Qgbm8gb25lIHRhbGtzIGFib3V0IGl0LCBhbmQgaWYgeW91IGRvIHlvdSAic2hhbWluZyBzaW5nbGUgbW90aGVycyIgb3Igc29tZXRoaW5nIHJpZGljdWxvdXMgbGlrZSB0aGF0Li4gClRoZSBEZWMuIApJIHdvdWxkIGV2ZW4gc3VnZ2VzdCBjdXR0aW5nIGFsbCBjb21tdW5pY2F0aW9ucyBhcyB0YWxraW5nIHRvIHlvdSBpc24gc29tZXRoaW5nIGhlIGNhbiBoYW5kbGUuIApKZSBuJ2ltYWdpbmUgcGFzIGQnYXJyb25kaXIgbWVzIGZpbnMgZGUgbW9pcyBkZSBtb2Rlc3RlIHJldHJhaXQgYXZlYyBjZXR0ZSBwcmF0aXF1ZSBlbiBjYWJpbmV0IGRhbnMgbGEgbWVzdXJlIG8gaWwgbWUgZmF1ZHJhaXQgdXNlciA5MCUgZGUgbW9uIG5lcmdpZSAgbmV1dHJhbGlzZXIgZGVzIGlkZXMgcHJjb251ZXMuIEplIG4nZW4gYXVyYWlzIHBhcyBsYSBwYXRpZW5jZSBkaiBwYXIgbWFpbCBjZWxhIHBldXQgdG91cm5lciAgbCdhaWdyZS4uIApUaGVyZSBpcyBvbmUgZmluYWwgcG9pbnQgZm9yIGUgY29tbWVyY2UgdGhhdCBuZWVkcyB0byBiZSBtYWRlLiBFIGNvbW1lcmNlIGFsbG93cyBwZW9wbGUgdG8gY3JlYXRlIGNvbXBsZXRlbHkgbmV3IGJ1c2luZXNzIG1vZGVscy4gSW4gYSBtYWlsIG9yZGVyIGNvbXBhbnkgdGhlcmUgaXMgYSBoaWdoIGNvc3QgdG8gcHJpbnRpbmcgYW5kIG1haWxpbmcgY2F0YWxvZ3MgdGhhdCBvZnRlbiBlbmQgdXAgaW4gdGhlIHRyYXNoLiBUaGVyZSBpcyBhbHNvIGEgaGlnaCBjb3N0IGluIHN0YWZmaW5nIHRoZSBvcmRlciB0YWtpbmcgZGVwYXJ0bWVudCB0aGF0IGFuc3dlcnMgdGhlIHBob25lLiBJbiBlIGNvbW1lcmNlIGJvdGggdGhlIGNhdGFsb2cgZGlzdHJpYnV0aW9uIGNvc3QgYW5kIHRoZSBvcmRlciB0YWtpbmcgY29zdCBmYWxsIHRvd2FyZCB6ZXJvLiBUaGF0IG1lYW5zIHRoYXQgaXQgbWF5IGJlIHBvc3NpYmxlIHRvIG9mZmVyIHByb2R1Y3RzIGF0IGEgbG93ZXIgcHJpY2UsIG9yIHRvIG9mZmVyIHByb2R1Y3RzIHRoYXQgY291bGQgbm90IGJlIG9mZmVyZWQgYmVmb3JlIGJlY2F1c2Ugb2YgdGhlIGNoYW5nZSBpbiBjb3N0IGR5bmFtaWNzLgpUdXJuaXRpbiB1c2VzIGEgInByb3ByaWV0YXJ5IHNlYXJjaCBhbGdvcml0aG0iIHRoYXQgImNyYXdscyBhbmQgaW5kZXhlcyBjdXJyZW50IGFuZCBhcmNoaXZlZCB3ZWIgcGFnZXMsIGFuZCBpcyBjb21wYXJhYmxlIHRvIG1ham9yIHNlYXJjaCBlbmdpbmVzLCIgYXMgdGhlaXIgQWJvdXQgcGFnZSBwdXRzIGl0LiBUaGV5IGFnZ3JlZ2F0ZSBjb250ZW50IGZyb20gc2Nob2xhcmx5IGRhdGFiYXNlcyB0aGF0IG1pZ2h0IG5vdCBiZSBhcmNoaXZlZCBieSBHb29nbGUsIGluY2x1ZGluZyAicGVyaW9kaWNhbHMsIGJpb2dyYXBoaWVzLCBicm9jaHVyZXMsIGVuY3ljbG9wZWRpYXMsIG1hZ2F6aW5lcywgam91cm5hbHMsIGJvb2tzIGFuZCBhYnN0cmFjdHMsIiBhcyB3ZWxsIGFzIG1lZGljYWwgcmVzb3VyY2VzLCB0ZW5zIG9mIG1pbGxpb25zIG9mIGFydGljbGVzIGZyb20gdGhlIGFjYWRlbWljIHJlc2VhcmNoIHB1Ymxpc2hlciBHYWxlIGFuZCB0ZXh0Ym9va3MgYm90aCBuZXcgYW5kIG91dCBvZiBwcmludCBmcm9tIFBlYXJzb24gYW5kIE1jR3JhdyBIaWxsLiAKRG8geW91IGhhdmUgYSBmcmllbmQgd2hvIG5lZWRzIGFuIGFjY2VudCBpbiB0aGVpciBkY29yPyBNYXliZSB0aGV5J3JlIGdvaW5nIGluIGhvc3BpdGFsLCBhbmQgeW91J2QgbGlrZSB0byBicmlnaHRlbiB0aGVpciBzdGF5LiBPciBpdCBjb3VsZCBiZSB0aGF0IHRoZXkganVzdCBuZWVkIGEgaHVnLiAKWW91IGNhbiBjaGVjayBieSBsaXN0aW5nIHRoZSBmb3VyIGZhdm91cmFibGUgY2FyZHM6IDMsIDQgMywgNC4gVGhlbiB0aGUgcmVzdWx0aW5nIHByb2JhYmlsaXR5ID0gNCAvIDUyID0gMSAvIDEzLi4gCkluIHNvbWUgY2FzZXMsIHRob3VzYW5kcyBvZiBjYXJkcyB3b3VsZCBiZSBwbGFjZWQgaW4gZmllbGRzIGZvciB0aGUgVmlldG5hbWVzZSwgdGhlIGFjZSBvZiBzcGFkZXMgc3ltYm9saXplZCAuIApCb25kIElJSSwgd2hvIGRpZG4ndCByZXR1cm4gYSB0ZWxlcGhvbmUgbWVzc2FnZSBmb3IgdGhpcyBzdG9yeS4gCldoaWxlIGNvbnNpZGVyZWQgZWxpdGUgKFN3YW5uIGV0IGFsLiwgMjAxNSksIHRoZSBzdWJlbGl0ZSBhdGhsZXRlcyBoYWQgYXBwcm94aW1hdGVseSA4IHllYXJzIGZld2VyIHNwb3J0aW5nIGV4cGVyaWVuY2UgYW5kIHdlcmUgeWV0IHRvIG9idGFpbiBzdXN0YWluZWQgc3VjY2VzcyBvbiB0aGUgaW50ZXJuYXRpb25hbCBzdGFnZS4gCkl0IGFsd2F5cyBhbiBvcmRlYWwgZ2V0dGluZyB0aGVtIGtuZWFkZWQgb3V0LiAKV2UgYWxyZWFkeSBlbnRlcmVkIHRoaXMgbmVidWxhIHdpdGggY29udGV4dCB2cyByZWR1eCBldGMuCk1vcmUgdGhhbiAyMDAgaGF2ZSBiZWVuIGRvbmUgYXQgdGhlIGNsaW4gIGljLCBidXQuIApPbiBKYW4gMTcsIDIwMTQKQnV0IHZpc2lvbiBhbmQgZmx5aW5nIG5hdmlnYXRpb24gc2tpbGxzIGFyZSBzb21ldGhpbmcgdGhhdCBoZWxwIHJhcHRvcnMgc3Vydml2ZS4gCkRpZSBLYXJ0ZW4gbmljaHQgenUgbWlzY2hlbiBlcm1nbGljaHQgZXMgZWluaWdlbiBTcGllbGVybiwgZGllIEthcnRlbiB2b3JoZXJ6dXNhZ2VuLCBkaWUgc3B0ZXIgYXVmdGF1Y2hlbi4gRGFzIHdyZGUgZGllc2VuIFNwaWVsZXJuIGVpbmVuIHVuZmFpcmVuIFZvcnRlaWwgdmVyc2NoYWZmZW4uIApEYW5zIGxhIGNhcGl0YWxlIG5hdGlvbmFsZSwgaWwgc2VtYmxlIHF1ZSBsYSBzaXR1YXRpb24gZnJvbnRhbGlyZSBkZSBsYSB2aWxsZSBqb3VlIHVuIHJsZSBkYW5zIGNlIHF1ZSBsZXMgYXNzdXJldXJzIHF1YWxpZmllbnQgZGUgZnJhdWRlLiAKIDMgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvWWVhaCB0aGF0IGd1eSBpcyBjcmluZ2UuIApJJ3ZlIGtub3duIEZyZWQgYXMgbG9uZyBhcyBJIGhhdmUga25vd24gYWxsIG9mIHlvdS4gSGUgd2FzIGEgZ29vZCBtYW4gYW5kIEkgbGlrZWQgaGltLiAKU28gaW5zdGVhZCBvZiBnb2luZyBvbiBhIHRocmlsbGluZyBhZHZlbnR1cmUgaW4gb3JkZXIgdG8gZ2V0IHRoZSBBSSBiYWNrIHRoaW5raW5nIHRoZSBnb3Zlcm1lbnQgZm91bmQgb3V0IGFib3V0IGhpcyBwbG90LCBpdCBpbiBzb21lIGNvbGxlZ2UgZnJhdCBob3VzZSBiZWluZyB1c2VkIGF0IHRoZSBiZWVyIGZyaWRnZS4gQnV0IHllYXJzIGxhdGVyIG9uZSBmcmF0IGJyb3RoZXIsIHN0YXlpbmcgdXAgYXQgbmlnaHQgc3R1ZHlpbmcgZm9yIGhpcyBmaW5hbCwgZ2V0cyB0aGUgaGVscCBoZSBkZXNlcnZlcyBhZnRlciB0aGUgQUkgaGFzIGJlZW4gd2F0Y2hpbmcgaGltIHBhcnR5IGFsbCBuaWdodCBldmVyeSBuaWdodCwgdGhlIEFJIHBsZWRnZXMgdG8gaGVscCB0aGUgZnJhdCBicm90aGVyIG9ubHkgaWYgdGhleSBidWlsZCBpdCBhIGJvZHkuIApKIFRvIGVudW1lcmF0ZSBhbGwgdGhlIGRhbWFnZSBqIHdvdWxkIHRha2UgYW4gZW50aXJlIHBhZ2UgYnV0OyBhc2lkZSBmcm9tIHRoZSBhYm92ZSwgdGhlIGRhbWFnZSB3YXMgbWlub3IuIER1cmluZyB0aGUgaGVpZ2h0IG9mIHRoZSB3aW5kLCBidWlsZGluZ3Mgc2VlbWVkIHRvIHJvY2sgYW5kIHRvIHN3YXkuIFRoZSB3aW5kIGNvbWluZyBpbiBndXN0cyBtYWRlIGl0IHNlZW0gdG8gYmUgc3Ryb25nZXIgdGhhbiB0aGUgb2ZmaWNpYWwgcmVhZGluZ3MuIApCdXQgaXQgaXMgYWxtb3N0IGltcG9zc2libGUgdG8gc2lnbmlmaWNhbnRseSByYWlzZSB5b3VyIHZpdGFtaW4gRCBsZXZlbHMgd2hlbiBzdXBwbGVtZW50aW5nIGF0IG9ubHkgNjAwIElVL2RheSAoMTUgbWljcm9ncmFtcykuCkNvbXBhbnkgYWxyZWFkeSBoYWQgdHdvIHJvdW5kcyBvZiBsYXlvZmZzIHRoaXMgeWVhciBidXQgSSBuZXZlciB0aG91Z2h0IHRoZXkgd291bGQgbGV0IG1lIGdvLiB0aGUgYXJndW1lbnQgd2FzIGdldHRpbmcgYSBsaXR0bGUgaGVhdGVkIGJ1dCBJIGRpZG4gdGhpbmsgaGUgd2FzIGdvaW5nIHRvIGhpdCBtZS4gVGhlIGZpcnN0IHRoaW5nIHRvIGRvIHdoZW4gZmFjaW5nIGRpZmZpY3VsdHkgaXMgdG8gbWFrZSBzdXJlIHlvdSByZWNvZ25pemUgaXQgYXMgc29vbiBhcyBwb3NzaWJsZS4KVGhlIHJlc3RhdXJhbnQgbG9uZyBzZXJ2aW5nIHdhaXRlciwgbW9zdCBhcHByb3ByaWF0ZWx5IG5hbWVkIE11Z3N5LCBiZWNvbWVzIHRoZSBtb3N0IGV5ZSBjYXRjaGluZyBjaGFyYWN0ZXIuIFRoZSBzdGFrZXMgYXJlIGhpZ2ggZm9yIGhpbSBiZWNhdXNlIGhlIHdhbnRzIHRvIHJhaXNlIG1vbmV5IHRvIG9wZW4gaGlzIG93biBlYXRlcnkgaW4gc29tZSBmb3JtZXIgcHVibGljIGNvbnZlbmllbmNlcyAobm93IHRoZXJlIGFuIGlkZWEsIE94Zm9yZCBDaXR5IENvdW5jaWwsIGZvciB0aGUgcmVkdW5kYW50IHN1YnRlcnJhbmVhbiBnZW50cyBpbiBTdCBHaWxlcykuIApXaWUgZHUgc2Nob24gc2FndGVzdCBpc3QgZWluIEFic3R1cnogZGVyIFVTQSBhdWNoIGVpbiBnbG9iYWxlciBBYnN0dXJ6LiBWaWVsIHdhaHJzY2hlaW5saWNoZXIgdW5kIGltIEVuZGVmZmVrdCBncmVyIHp1bSBUcmFnZW4ga29tbWVuIHdyZGUsIGRhc3MgZGllIFVTQSBldmVudHVlbGwgaW4gMzAgSmFocmVuIG5pY2h0IG1laHIgZGVyIGdsb2JhbGUgVG9wIFBsYXllciBzaW5kLCBzb25kZXJuIGVpbmUgYW5kZXJlIE5hdGlvbiB1bmQgZGFubiB3cnN0IGR1LCB3aWUgbWVpbiBvYmlnZXMgQmVpc3BpZWwgdmVyZGV1dGxpY2h0LCBtaXQgZWluZW0gTVNDSSBXb3JsZCBiZXNzZXIgZHJhbi4gIDggcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28uIAogcXVpIG4ndGFpdCBwYXMgZm9yY21lbnQgbCBhdSBkcGFydCwgYXZvdWUgR2lsbGVzIFZyb3QsIHF1aSBhIHBsdXR0IGZhaXQgY2UgY2hvaXggcGFyIG9ibGlnYXRpb24gZmFtaWxpYWxlLCBtYWlzIHF1J2lsIGEgZGNvdXZlcnRlIGVuIHJvdXRlLiAKVGhlIGZsb3dlcnMgc2hvdWxkIGJlIGN1dCBqdXN0IGJlZm9yZSB0aGV5IG9wZW4sIGFuZCBvbiBhIHdhcm0gZGF5IGFmdGVyIHRoZSBkZXcgaGFzIGRyaWVkLCBidXQgYmVmb3JlIHRoZSBkYXkgZ2V0cyB0b28gaG90LiAoSWYgeW91J3JlIHVzaW5nIGxlYXZlcyByYXRoZXIgdGhhbiBmbG93ZXJzLCB0aGV5IGNhbiBiZSBsZWZ0IHVudGlsIG1pZGRheSwgd2hlbiB0aGUgYXJvbWF0aWMgb2lscyBhcmUgYXQgdGhlaXIgaGlnaGVzdC4pIFRoZXknbGwgbmVlZCB0byBiZSBkcmllZCwgc28gZWl0aGVyIHRpZSB0aGVtIGludG8gYSBidW5jaCBvciBsYXkgdGhlbSBvbiBhIGNha2UgcmFjayBhbmQgcHV0IHRoZW0gaW50byBhbiBhaXJpbmcgY3VwYm9hcmQgb3IgYSB3ZWxsIHZlbnRpbGF0ZWQgcm9vbS4KSGUgcHV0IG1lIGZpcnN0LiBXZSBkaWQgYSBsb3Qgb2YgdGhpbmdzIHRoYXQgd2VudCBhZ2FpbnN0IGhpcyBjdWx0dXJlLiAKSXQgY2FuIGFsc28gYmUgdHJ1ZSB0aGF0IG5lYXJseSBhbGwgcGVvcGxlICh2aXNpdGluZyBjYXNpbm9zKSBjaG9vc2UgdG8gcGxheSBjaGFuY2UgZ2FtZXMgc2V0IGFsb25nc2lkZSB0aGUgc2tpbGxlZCBnYW1lcy4gCllvdSBtaWdodCBjaG9vc2UgdG8gbWFrZSBjb3BpZXMgb2YgeW91ciBjb2xsYWdlIHRvIHNoYXJlIHdpdGggb3RoZXJzLiBBIGNvbGxhZ2UgaW4gaG9ub3Igb2YgYSBjaGlsZCdzIGZpcnN0IGJpcnRoZGF5IGlzIGEgZ3JlYXQgcHJlc2VudCBmb3IgZ3JhbmRwYXJlbnRzLiBTY2FuIHRoZSBjb2xsYWdlIGFuZCBwcmludCBvdXQgaGlnaCBxdWFsaXR5IGNvcGllcy4gCk1heSBjYWxsIHNwZWNpYWwgc2Vzc2lvbnMgb2YgdGhlIGxlZ2lzbGF0dXJlIC4KIDM5NyBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvRm9yIHJlYWwuIEl0IHNlZW1zIHBlb3BsZSBkb24ga25vdyB5b3UgY2FuIHJlc3Bhd24gdGhlbS4gSSBoYWQgZ2FtZXMgd2hlcmUgbXkgdGVhbSBtYXRlcyBkaWUgYXQgdGhlIGJlZ2lubmluZyBhbmQgSSB3aW4gdGhlIGZpZ2h0IG9ubHkgdG8gcmVhbGl6ZSB0aGV5IGFscmVhZHkgbGVmdCBhbmQgSSBhbG9uZS5UaGVyZSBzaG91bGQgYmUgcGVuYWx0eSBmb3IgbGVhdmluZy4gSSBndWVzcyB0aGF0IHdvdWxkIGJlIHVuZmFpciBmb3IgcGVvcGxlIHdobyBhcmUgY3Jhc2hpbmcsIHNvIHRoYXQgZml4IGhhcyB0byBjb21lIGZpcnN0LkVESVQ6IEkgdW5kZXJzdGFuZCB5b3UgZ2V0IG5vIFhQIGlmIHlvdSBsZWF2ZSwgYnV0IGluIGVhcmx5IGdhbWUsIHRoYXQgZG9lc24gcmVhbGx5IG1hdHRlciBzbyBpdCBub3QgbXVjaCBvZiBhIHB1bmlzaG1lbnQuIApTdHJldGNoIG1hcmtzIGhhdmUgbW9yZSBpbiBjb21tb24gd2l0aCBzY2FycyB0aGFuIGNlbGx1bGl0ZSwgYXMgdGhleSB0eXBpY2FsbHkgYXBwZWFyIGFmdGVyIGEgY2hhbmdlIGluIHRoZSBza2luIGZyb20gYW4gZXhwZXJpZW5jZSBsaWtlIHdlaWdodCBsb3NzIG9yIHByZWduYW5jeS4gQ3JlYW1zLCBsaWdodCB0aGVyYXB5LCBzdXJnZXJ5IGFuZCBvdGhlciB0cmVhdG1lbnRzIGFyZSBhdmFpbGFibGUgYXMgcG9zc2libGUgdHJlYXRtZW50cy4gSWYgeW91IGhhdmUgc3RyZXRjaCBtYXJrcyB5b3UnZCBsaWtlIHRvIGVsaW1pbmF0ZSwgdGFsayB0byB5b3VyIGRlcm1hdG9sb2dpc3QgYWJvdXQgeW91ciBvcHRpb25zIFtzb3VyY2U6IFdlYk1EXS4uIAooVGhlIG1lYXN1cmUgaXMgbm93IGluIHRoZSBIb3VzZSdzIGRyYWZ0IG9mIHRoZSBiaWxsLCBidXQgbm90IHRoZSBTZW5hdGUncyB2ZXJzaW9uLiAKU3RheSBzdHJvbmcgYW5kIHN0YXkgZnJlZS4gVGhlcmUgbWlnaHQgYmUgc29tZSBlY29ub21pYyBkaWZmaWN1bHRpZXMsIGJ1dCB0aGF0IGFsd2F5cyBoYXBwZW5zIHdoZW4gZmlyc3Qgc3RlcHBpbmcgb3V0IGludG8gdGhlIHdvcmxkLiAKWW91IGNhbiBmaWx0ZXIgYW5kIHNlYXJjaCBmb3IgeW91ciBwZXJmZWN0IHByb2plY3QgYW5kIGRvd25sb2FkIHRoZSBQREYgZWFzaWx5LiAKWW91IG11c3QgYmUgcmVhbGx5IGZ1biBhdCBwYXJ0aWVzLiAKUGxheWVyIDEgbG9zZXMgYnV0IGdldHMgYmFjayAkMTAwLCBhbmQgdGhleSBwbGF5IG91dCB0aGUgbmV4dCBoYW5kIGZvciB0aGUgcmVtYWluaW5nICQyMDAgKCQxMDAgZnJvbSBwbGF5ZXIgMSBhbmQgJDEwMCBmcm9tIHBsYXllciAyKSBpbiB0aGUgcG90LiAKIkkgZmVsdCB0aGF0IGEgaHVnZSBwYXJ0IG9mIHRoaXMgZW50ZXJwcmlzZSBkZXBlbmRlZCBvbiBkaXNjcmV0aW9uLCBzbyBJIHRyaWVkIHRvIGRpc2NvdXJhZ2Ugc3BlY3RhdG9ycyB3aGVuIEkgY291bGQsIGJ1dCBJIGNvdWxkbid0IHN0b3AgdGhlIGd1eXMgYnJpbmdpbmcgZ2lybGZyaWVuZHMgYWxvbmcgdG8gc2hvdyBvZmYgaW4gZnJvbnQgb2YsIG9yIHRoZSBvY2Nhc2lvbmFsIGNlbGVicml0eSBzdG9wcGluZyBieS4gQ2VsZWJyaXRpZXMgd2VyZSBhbHdheXMgYWxsb3dlZCwgdG8gYmUgaG9uZXN0LiBMaWtlIHdoZW4gW01hcnkgS2F0ZSBPbHNlbiBhbmQgQXNobGV5IE9sc2VuXSBzaG93ZWQgdXAgd2l0aCBhIGJpbGxpb25haXJlIEkgd2FzIHRyeWluZyB0byBsYW5kIGZvciB0aGUgZ2FtZS4gVGhleSB3ZXJlIGluLCBubyBxdWVzdGlvbnMgYXNrZWQuIgpZZWFoLCBPZ2F0YSB3YXMgdGhlIGZpcnN0IGR1ZGUgU3VnaW1vdG8gZm91Z2h0LCBpdCB3b3VsZCBiZSBjb29sIGFzIGhlbGwgaWYgaGUgd2FzIGFsc28gdGhlIGxhc3QgZ3V5LCB0byBtYWtlIGV2ZXJ5dGhpbmcgZ28gZnVsbCBjaXJjbGUuIEhlIGFsc28gZmVlbHMgbGlrZSBzb21lb25lIHdobyBpcyBtb3JlIGdyb3VuZGVkIGFuZCBvbiBTdWdpbW90byBsZXZlbCwgdW5saWtlIEhpamlrYXRhIG9yIFRzdXJ1bWkgd2hvIGdpdmVzIG9mZiBiaWcgYmFkIHZpYmVzLiAKV2hlbiB0aGUgVVMgZmVkZXJhbCBnb3Zlcm5tZW50IGZpbmFsbHkgc3VjY2VlZGVkIGluIHNodXR0aW5nIGRvd24gdGhlIG51bWJlciBnYW1lcyBydW4gYnkgdGhlIG1vYiwgaXQgd2FzbiBtdWNoIGxvbmdlciB1bnRpbCBpbmRpdmlkdWFsIHN0YXRlcyBoYWQgdGhlaXIgb3duIGxvdHRlcmllcy4gT2YgY291cnNlLCB3aGVyZSB0aGUgbW9iIHVzZWQgdG8gcmV0dXJuIDYwIDgwIGNlbnRzIG9uIHRoZSBkb2xsYXIsIHRoZSBnb3Zlcm5tZW50IHdvdWxkIHJldHVybiA0MCA2MCUuIFRoZSBXZXN0ZXJuIENhbmFkYSBMb3R0ZXJ5IENvcnAuIGhhcyBhIDMgZ2FtZSwgYWxtb3N0IGV4YWN0bHkgbGlrZSB0aGUgb2xkIG51bWJlciBtb2IgZ2FtZSwgdGhhdCByZXR1cm5zIDUwJS4gQ2FuYWRhIGJpZ2dlc3QgbmF0aW9uYWwgbG90dGVyeSwgTG90dG8gNi80OSwgcHVycG9ydHMgdG8gcGF5IDUzJSwgYnV0IHRoYXQgZmlndXJlIGRvZXMgbm90IGluY2x1ZGUgdGhlIGZhY3QgdGhhdCB0aGUgamFja3BvdCBpcyBwYWlkIHllYXJseSBvdmVyIGFuIGFubnVpdHksIG9yIHBhaWQgYXQgYSByZWR1Y2VkIGFtb3VudCBhcyBhIGx1bXAgc3VtLgoyMToyMSBpcyB0aGUgc2FtZSBhcyBibGFja2phY2ssIGl0IGlzIGp1c3QgYW5vdGhlciBuYW1lIGZvciB0aGUgZ2FtZS4gQXMgaW5kaWNhdGVkIGJ5IHRoZSBuYW1lIHRoZSBnb2FsIGlzIHRvIG1ha2UgYSBoYW5kIHRoYXQgYWRkcyB1cCB0byAyMS4gCk9ibGl2aW91cyBvciBhdm9pZGFudCBpcyBtb3JlIGFjY3VyYXRlLCBoZSBrbm93cyBzaGUgZmF2b3JzIGhpbSBhbmQgaGUgZG9lc24ndCBsaWtlIGl0KS4gCllvdSBkb24gaGF2ZSB0aGUgYW5zd2Vycy4gWW91IGRvIGhhdmUgcHJvYmxlbXMuIEdvIHdpdGggYSBzZW5zZSBvZiBodW1pbGl0eSBhbmQgZGlzY292ZXJ5LiBZb3UgYWxyZWFkeSBlYXRpbmcgb3V0IG9mIGNvbnRyb2wsIHNvIHdoYXQgZG8geW91IGhhdmUgdG8gbG9zZT8gWW91IGNhbiBmaWdodCBzb21ldGhpbmcgZ29vZCBvciB5b3UgY2FuIGFwcGx5IGl0IHRvIHlvdXIgcHJvYmxlbXMuCjQ1IG1pbnV0ZXMgbGF0ZXIgaGUgaGFzIG1lIGRvd24gdG8gbGlrZSAyQkJzIGFuZCBhc2tzIGlmIEkgd2FudCB0byBtYWtlIGEgZGVhbC4gSSBhc2sgd2hhdCBoZSB3YW50cyBhbmQgaGUganVzdCBhc2tzIGZvciB0aGUgZXh0cmEgJDI1MCBkb2xsYXJzIHBsdXMgMm5kIHBsYWNlIG1vbmV5IGFuZCBJIGNhbiBoYXZlIHRoZSBzZWF0LiAKVGhlIEZCSSBnb3QgYSB3YXJyYW50IHRvIGNyYWNrIG15IGFuZHJvaWQgYW5kIEkgdGhpbmsgdGhlIGNoYXJnZXMgbXkgc3RpY2suIApFYm9vayBCdXkgJDExLjk5LiBBcHIgMjUsIDIwMTIgMjg4IFBhZ2VzIC4gCjEwMSkgbGFzdCBidXQgbm90IGxlYXN0IGFzIG9mIHRoZSBsYXN0IGVkaXQsIENocmlzdG1hcyBUcmVlIHdoaWNoIGNhbiBiZSBmb3VuZCBhcyBhIHNpbmdsZSBvbiBpVHVuZXMuIChTZWFyY2hpbmcgb25saW5lIGZvciBtb3JlIGlmIHlvdSBhcmUgc28gaW50ZXJlc3RlZCBzaG91bGQgeWllbGQgbW9yZSkuIApBbHMgUGVuZGxlcmluIHp3aXNjaGVuIGRlbiBvZmZlbmJhciB2ZXJmZWluZGV0ZW4gV2VsdGVuIGRlciByZWdpb25hbGVuIFZlcmtlaHJzdmVyYiBWUlMgdW5kIGRlcyBWUlIga2VubmUgaWNoIHZvbiBCb25uIG51ciBkZW4gSGF1cHRiYWhuaG9mIHVuZCBkZW4gUG9zdCBUb3dlci4KT25lIG9mIHRoZSBtb3N0IGNoYWxsZW5naW5nIHF1ZXN0aW9ucyBJIGV2ZXIgaGFkIHRvIGFuc3dlciBkdXJpbmcgbXkgcmVjb3ZlcnkgaGFzIGJlZW4gIldoYXQgYXJlIHlvdSBnb2luZyB0byBkbyBhYm91dCBpdD8iIEkgY2FuIGNvbXBsYWluIGFzIG11Y2ggYXMgSSB3YW50IGFib3V0IG15IHNpdHVhdGlvbiwgYnV0IGlmIEkgZG9uIHRha2UgYW55IHN0ZXBzIHRvIGltcHJvdmUgaXQsIGV2ZW50dWFsbHkgSSByaXNrIGFsaWVuYXRpbmcgYW5kIGxvc2luZyBzdXBwb3J0cyBpbiBteSBuZXR3b3JrIGFuZCBldmVudHVhbGx5IGlzb2xhdGluZyBteXNlbGYganVzdCBhcyB0aGUgYWJ1c2UgcmFtcHMgdXAuIEZyaWVuZHMgY2FuIGV2ZW50dWFsbHkgZ3JvdyB0aXJlZCBvZiBoZWFyaW5nIHRoZSBzYW1lIHRoaW5ncyBvdmVyIGFuZCBvdmVyIGFnYWluIHdpdGggbm8gcHJvc3BlY3Qgb2YgbW92ZW1lbnQgb3IgZ3Jvd3RoIG9yIGluc2lnaHQuCkFzIC91L2thZmthZXNxdWVfZHlzdG9waWEgc2FpZCwgZG9uIGVhdCBtb3JlIHVudGlsIHRoZSBuZXh0IGRheS4gSSBoYXZlIGFsc28gaGFkIHRoZW0ga2ljayBpbiBhZnRlciAzIGhvdXJzICgzIGhvdXJzIHNlZW1zIHRvIGJlIHdoZW4gSSBwZWFrKSBhbmQga25vY2sgbWUgb24gbXkgYXJzZS4gCk1yRmFsY29uRmFybXNNZWxvbnMgdQpVbmxpa2UgbWUsIG1vc3QgaW4gdGhlIGdyb3VwIGFyZSBoYXJkZW5lZCBjb3VydCByZXBvcnRlcnMsIGtub3dsZWRnZWFibGUgYWJvdXQgZXZlcnl0aGluZyBmcm9tIGFyc29uIHRvIGFybWVkIHJvYmJlcnksIGFuZCB2ZXRlcmFucyBvZiBhbnkgbnVtYmVyIG9mIGdyaXNseSBtdXJkZXIgdHJpYWxzLiBBIHRhYmxvaWQgam91cm5hbGlzdCBzYXlzIGluIGEgYnJlYWsgaW4gcHJvY2VlZGluZ3MgdGhhdCB0aGlzIGNhc2UgbGVhdmVzIGhlciBjb2xkICAgdGhlcmUgYXJlIHRvbyBtYW55IGFub21hbGllcyBhbmQgaW1wb25kZXJhYmxlcy4gCkFuZCBpdCB3aWxsIGFsc28gbWVzcyBhIGxvdCB3aXRoIERva2thZWJpIGFiaWxpdHkgaWYgc2hlIGhhY2tzIHRoZSBjYW1zLiAKU29tZXRpbWVzIEkgZ28gb3ZlciBidWRnZXQuIFNvbWV0aW1lcyB1bmRlci4gCkFuZCB0aGUgc2hvcnQgdGVybSBsYWNrIG9mIHN1Y2ggaGFuZHMgYWx0ZXJzIHRoZSByZXR1cm4geW91IGNhbiBleHBlY3Qgd2hlbiB5b3UgcGxheSwgc2F5LCAxMDAwIGhhbmRzIG9mIHZpZGVvIHBva2VyLCB3aGljaCBpcyB0d28gb3IgdGhyZWUgaG91cnMgb2YgZ2FtaW5nLiBJIGRvbid0IHdhbnQgdG8gZ2V0IHRvbyBpbnZvbHZlZCB3aXRoIG1hdGhlbWF0aWNzIGhlcmUsIGJ1dCB0aGUgUm95YWwgRmx1c2ggYW5kIFN0cmFpZ2h0IEZsdXNoIGFkZCBhIHRvdGFsIG9mIDIuNTMlIHRvIHRoZSA5OS41NCUgcmV0dXJuIG9mIHRoZSBmdWxsIHBheSBKYWNrcyBvciBCZXR0ZXIgdmlkZW8gcG9rZXIgZ2FtZSB0aGF0IEkgbWVudGlvbmVkIGVhcmxpZXIuIAoiTWFueSBwZW9wbGUgbWF5IHJlbWVtYmVyIHRoYXQgdGhlIGNsdWIgb3duZWQgVHVmZmlucyBMYW5lIGFuZCB3YXMgaW50ZWdyYWwgaW4gYXR0cmFjdGluZyB0aGUgU3RhdGUgVG91Y2ggQ2Fybml2YWwgdG8gUG9ydCBNYWNxdWFyaWUuIFRoYXQncyB3aGVyZSBpdCBhbGwgc3RhcnRlZC4iIE9wZW5lZCBieSBhIGdyb3VwIG9mIDI3IHNlcnZpY2VtZW4gaW4gMTk0NywgdGhlIFJTTCBDbHViIGFzIHdlIHJlbWVtYmVyIGl0IGZlYXR1cmVkOiB0aGUgSm9obiBPeGxleSBSb29tOyBMZSBQZXRpdCBFc2NhcmdvdDsgZG93bnN0YWlycyBiaXN0cm87IFNwb3J0cyBCYXIsIFRoZSBQYXZpbGxpb24gY29ja3RhaWwgYmFyOyBEb24gU3RlZWxlIEJhcjsgYSBnYW1pbmcgcm9vbTsgTmlzc2VuIEh1dCBmdW5jdGlvbiByb29tOyBFbGVjdHJpYyBCYWxscm9vbSBhbmQ7IGEgZ3ltLCBzcGEgYW5kIHNxdWFzaCBjb3VydCBhcmVhIGtub3duIGFzIFRoZSBMb2Z0LiAKUGxlYXNlIHNlZSB0aGUgd2lraSBmb3IgbW9yZSBkZXRhaWxlZCBleHBsYW5hdGlvbnMgb2YgdGhlIHJ1bGVzLiBXaGVuIHBlcmZvcm1pbmcgYSBjb3ZlciBvZiBNYXJsZXkncyAiV2FyIiBvbiBTTkwsIHJld3JpdGluZyBhIGZldyBvZiB0aGUgbHlyaWNzIHRvIGFkZHJlc3MgY2hpbGQgYWJ1c2UuIEFzIHNoZSBmaW5pc2hlZCB0aGUgc29uZyBzaGUgcHJvZHVjZWQgYW5kIHRvcmUgdG8gc2hyZWRzIGEgcGhvdG9ncmFwaCBvZiB0aGUgUG9wZSBzaG91dGluZywgIkZpZ2h0IHRoZSByZWFsIGVuZW15ISJUSUwgdGhhdCB3ZSBkb24ndCBzZWUgcHVyZSBibGFjayB3aGVuIHdlIGNsb3NlIG91ciBleWVzLCB3ZSBzZWUgYSBjb2xvciBuYW1lZCBFaWdlbmdyYXUgYW5kIGFsdGhvdWdoIHRoZXJlIGFyZSBhIGZldyB0aGVvcmllcyBhcyB0byB3aGF0IGNhdXNlcyBpdCBub2JvZHkncyBxdWl0ZSBzdXJlLgpSYXBlIGlzbiBtb3RpdmF0ZWQgYnkgYSBkZXNpcmUgZm9yIHNleHVhbCBncmF0aWZpY2F0aW9uLCBidXQgcmF0aGVyIHRoZSBkZXNpcmUgdG8gZG9taW5hdGUvIGNsYWltIHBvd2VyLldoZW4gcGVvcGxlIGdldCByb2JiZWQsIGl0IHVzdWFsbHkgYmVjYXVzZSB0aGUgcm9iYmVyIHdhbnRzL25lZWRzIHRoZSBtb25leSBpdHNlbGYuIE5vdCBiZWNhdXNlIHRoZXkgZ2V0IG9mZiBvbiB0aGUgcG93ZXIgdHJpcCBvZiByb2JiaW5nIHNvbWVib2R5LiBVc3VhbGx5LiBPbiBhdmVyYWdlLCBJIG1lYW4uV2hpY2ggaXMgd2h5IHRoZSBDaGFwcGVsbGUgam9rZSBkb2VzbiByZWFsbHkgd29yayBmb3IgbWUsIGJ1dCBJIGNhbiBzZWUgd2h5IGl0IHdvdWxkIHdvcmsgZm9yIG1lbiwgd2hvIChvbiBhdmVyYWdlKSBqdXN0IGRvbiBnZXQgdGhlIHBhcnQgYWJvdXQgYmVpbmcgYSB2aWN0aW0gb2YgYSBjcmltZSBtZWFudCB0byBkZW1lYW4gdGhlaXIgcGVyc29uaG9vZCwgYnV0IGNhbiBnZXQgdGhlIHBhcnQgYWJvdXQgZmVhcmluZyB2aW9sZW5jZSBpdHNlbGYuU28gSSBqdWRnZSB0aGUgc25vdCBvdXQgb2YgU3RlcGhhbmllIE1leWVyIGZvciB0aGUgZmFjdCB0aGF0IHBhcnQgb2YgdGhlIHByb2NlZWRzIG9mIGhlciBib29rIHdlbnQgdG8gYW50aSBMR0JUIG9yZ2FuaXphdGlvbnMgdmlhIHRpdGhlcyB0byB0aGUgTW9ybW9uIGNodXJjaC4gCldlIGNhbnQgZ28gaW50byBzZWFzb24gNCB3aXRoIG1hc3RlciBmdSBzdGlsbCBpbiBoaWRpbmcsIGhhd2ttb3RoIHN0aWxsIHRoZSB2aWxsYWluIGFuZCBldmVyeXRoaW5nIGVsc2UuIFRoZSBmb3JtdWxhIGlzIGdldHRpbmcgc3RhZ25hbnQuIFVubGlrZSBvdGhlciBtb25zdGVyIG9mIHRoZSBkYXkgc2hvd3MgdGhpcyBvbmUgaGFzbiBjaGFuZ2VkIHVwIGl0IHZpbGxhaW4uIApUaGUgQXJ5YW5pemF0aW9uIHByb2Nlc3MgaW5jbHVkZWQgdHdvIHN0YWdlczogZnJvbSAxOTMzIDE5MzggdGhlIEpld3Mgd2VyZSBncmFkdWFsbHkgcmVtb3ZlZCBmcm9tIEdlcm1hbiBlY29ub21pYyBsaWZlLCB0ZXJtZWQgYnkgdGhlIE5hemlzIGFzICJ2b2x1bnRhcnkiIGV4Y2x1c2lvbjsgYWZ0ZXIgMTkzOCwgSmV3aXNoIGJ1c2luZXNzZXMgYW5kIHByb3BlcnR5IHdlcmUgZm9yY2libHkgY29uZmlzY2F0ZWQgYnkgdGhlIE5hemlzLiIuIApGb3IgdGhlIGxvbmcgdGVybSwgd2UgbmF0dXJhbGx5IHRoaW5rIHRoYXQgd2Ugd2lsbCBsb3NlIDUwIGNlbnRzIGZvciBldmVyeSAkMTAwIHdlIHB1dCB0aHJvdWdoIHRoZSBtYWNoaW5lLiAKR2l2ZXMgeW91IHNvIG1hbnkgYW1hemluZyBleHBlcmllbmNlcy4gCllvdSByZWFsbHkgd2FudCB0byBjb21wYXJlIGNoaWxkIGxhYm9yIGxhd3Mgd2l0aCBiZWluZyBhIGNoZWFwIGFzcyB3aGVuIHlvdSBnbyBvdXQgdG8gZWF0PyBXaGF0IGtpbmQgb2Ygd29yayBkbyB5b3UgZG8/IFNvbWVob3cgSSBkb24ndCB0aGluayB5b3UgYXJlIGNhcGFibGUgb2YgdW5kZXJzdGFuZGluZyBob3cgeW91IG5vdCB0aXBwaW5nIGEgc2VydmVyIHdobyBwcm92aWRlZCBhIHNlcnZpY2UgdG8geW91IG9ubHkgaHVydHMgdGhhdCBzZXJ2ZXIuIApVRUZBIGFuZCBGSUZBIGNvbXBldGl0aW9ucyBhcmUgY292ZXJlZCB0b28gYW5kIHNldmVyYWwgb3RoZXIgbGVhZ3VlcyBmcm9tIHRoZSByZXN0IG9mIHRoZSB3b3JsZC4gCk5hamEgc28gcmljaHRpZyBiZXRydW5rZW4gYmluIGljaCBuaWNodCBoYWIgZXR3YXMgV2VpbiBnZXRydW5rZW4gdW5kIG1pciBkYW5uIGJlcmxlZ3Qgd2FzIHp1IGRhZGRlbG4uIApCdXQgbGlrZSB1L2dpbmdlcmpvLCBJIHRydXN0IEhhbm5haCB0byBiZSBmYWlyLCBhbmQgaXQgcHJldHR5IHNoaXR0eSBvZiBoaW0gdG8gdHJlYXQgaGVyIHNvIHBvb3JseSBmb3IgcXVlc3Rpb25pbmcgaGlzIGludGVudGlvbnMuIEkgdGhpbmsgaWYgRGF2ZSBoYWRuIGJlZW4gc28gYWdncmVzc2l2ZSBhbmQgb2J2aW91cyBhYm91dCBtb25ldGl6YXRpb24gdGhpcyB3b3VsZG4gaGF2ZSBiZWVuIGFuIGlzc3VlLCBiZWNhdXNlIGl0IGRvZXMgZmVlbCBsaWtlIGhlIGNhcmVkIG1vc3QgYWJvdXQgd2hhdCBzaGUgY291bGQgYnJpbmcgdG8gaGltIGZpbmFuY2lhbGx5IHRoYW4gb3RoZXIgaW50ZW50aW9ucyBldmVuIGlmIGhlIGlzIGdpdmluZyBoZXIgZ29vZCBjYXJlLiAKVGhhdCBob3cgdGhlIGNvdW50cmllcyB0aGF0IGZvbGxvd2VkIHRoZSBXZXN0ZXJuIEV1cm9wZWFuIHRyYWRpdGlvbnMgZm91bmQgdGhlbXNlbHZlcyBvbiB0b3AgZm9yIHRoZSBwYXN0IDUwMCB5ZWFycy4gCiJCcmV0dCBSYXRuZXIgaGVscGVkIG1lIG91dCBvZiBmcmllbmRzaGlwIHRvIGFzc2lzdCBtZSBpbiBnZXR0aW5nIGF1ZGl0aW9ucyBhbmQgdHJ5aW5nIHRvIGhlbHAgbWUgZmluZCBhbiBhZ2VudCwgYW5kIEkgaGF2ZSBubyBpc3N1ZXMgd2l0aCBoaW0gb3IgY2xhaW1zIGFnYWluc3QgaGltLCIgS2lyayB3cm90ZS4KSSBnb3QgdGhlIGluZGlzcHV0YWJsZSBudXRzLiAKTW9yZSBnZW5lcmFsbHksIGZvciBwb2tlciBydWxlcyBxdWVzdGlvbnMsIEkgc3VnZ2VzdCBjb25zdWx0aW5nIFJvYmVydCdzIFJ1bGVzIG9mIFBva2VyLiBBIGhvbWUgZ2FtZSB2ZXJzaW9uIG9mIHRoZSBydWxlcyBpcyBhbHNvIGF2YWlsYWJsZS4gQm9iIENpYWZmb25lIGhhcyBwdXQgYSBsb3Qgb2YgZWZmb3J0IGludG8gY3JlYXRpbmcgYSB2ZXJ5IHVzZWZ1bCBzdGFuZGFyZGl6ZWQgc2V0IG9mIHJ1bGVzIGZvciB0aGUgZ2FtZSwgYW5kIHdhcyBnb29kIGVub3VnaCB0byBtYWtlIGl0IGF2YWlsYWJsZSBmb3IgZnJlZSEuIApUaGUgd2hvbGUgd29ybGQgd2FzIGZpbGxlZCB3aXRoIHdvbmRlciBhbmQgZm9sbG93ZWQgdGhlIGJlYXN0Li4gCkFsc28sIGlmIGl0IGFueSBjb21mb3J0LCBkYXRhIHNob3dzIGNoaWxkIHBvcm4gdmlld2VycyAodGhhdCBnZXQgYnVzdGVkKSB0aGF0IGhhdmUgbm8gcHJpb3Igc2V4IGFidXNlL2NoaWxkIG1vbGVzdGF0aW9uIHJlbGF0ZWQgY2hhcmdlcyBhbG1vc3QgbmV2ZXIgcGVycGV0cmF0ZSBvbiBpbmRpdmlkdWFsIGNoaWxkcmVuLiAKMS4gR28gdG8gYW55IG1lc3NlbmdlcnMgbGlrZSB5YWhvbywgcmVkaWZmIG9yIGdtYWlsLiAKSW4gdGVybXMgb2YgdGFraW5nIG1vbmV5IGZyb20gdGhlICJ1bmVkdWNhdGVkIiBpcyBjb25jZXJuZWQuIEZpcnN0LCBqdXN0IGIvYyBzb21lb25lIGlzIGJhZCBhdCBwb2tlciBkb2VzIG5vdCBtZWFuIHRoZXkgc3R1cGlkIChub3IgZG9lcyBiZWluZyBnb29kIG1ha2Ugb25lIHNtYXJ0KS4gT24gdG9wIG9mIHRoYXQgbm9ib2R5IGlzIGZvcmNpbmcgdGhlbSB0byBwbGF5LCB0aGV5IGhhdmUgdGhlIHNhbWUgcmVzb3VyY2VzIEkgZG8uIApBbmxsaWNoIGRlcyA3LiAKT3RoZXIgaW50ZXJuYXRpb25hbCBvcGVyYXRvcnMgYXJlIGFnYWluIHRhcmdldGluZyBMYXMgVmVnYXMgYXMgcGFydCBvZiB0aGVpciBncm93dGggc3RyYXRlZ2llcyB3aXRoIGJpZyBtdWx0aSB1c2UgcHJvamVjdHMuIEZ1cnRoZXIgbm9ydGggb24gdGhlIFN0cmlwLCBNYWxheXNpYW4gZGV2ZWxvcGVyIEdlbnRpbmcgR3JvdXAgYnJva2UgZ3JvdW5kIGxhc3QgeWVhciBvbiBhICQ0Ym4gQ2hpbmVzZSB0aGVtZWQgY2FzaW5vIHJlc29ydCwgYXQgYSBuZWFybHkgMzYgaGVjdGFyZSBzaXRlIHRoYXQgaGFkIHNhdCBpZGxlIHNpbmNlIEF1Z3VzdCAyMDA4LiBOZXh0IGRvb3IsIEF1c3RyYWxpYSdzIENyb3duIFJlc29ydHMgYXJlIGJ1aWxkaW5nIGFuIGV4cGFuc2l2ZSBuZXcgcHJvcGVydHkuLiAKRm9yIHBlb3BsZSB3aG8gbGlrZSB0byB0aHJvdyBhcm91bmQgdGhlIHdvcmQgImJpZ290IiBldmVyeSBmaXZlIG1pbnV0ZXMsIHRoZXkgcHJldHR5IGJpZyBvbmVzIHRoZW1zZWx2ZXMuIApZb3Ugb25seSBoYXZlIHRoZSBvcHRpb24gdG8gY2hlY2sgaWYgbm8gb3RoZXIgYmV0cyBoYXZlIGJlZW4gcGxhY2VkIGJlZm9yZSBpbiB0aGUgcm91bmQuIElmIFBsYXllciBBIGJldHMgJDUsIHRvIHJhaXNlIHlvdSB3b3VsZCB0aGVuIHBsYWNlIGEgYmV0IG9mICQ2IG9yIG1vcmUuLiAKV2hhdCB0byBwcmVwYXJlOiBXZWlnaHRzLCBlcXVpcG1lbnQgZm9yIGVhY2ggd29ya291dCwgYW5kIHlvZ2EgbWF0cyBhcmUgYWxsIHByb3ZpZGVkIGJ5IHRoZSBneW0uIFdlYXIgY29tZm9ydGFibGUgd29ya291dCBjbG90aGVzIGFuZCBzaG9lcyB0byBtb3ZlIGFyb3VuZCBpbiwgYW5kIGJyaW5nIGEgd2F0ZXIgYm90dGxlIHRoZXJlIGFyZSBvY2Nhc2lvbmFsIGJyZWFrcyBiZXR3ZWVuIGNpcmN1aXRzIGFuZCBoeWRyYXRpb24gaXMgZW5jb3VyYWdlZC4KRGVtb2NyYXRpYyB2b3RlciBoZXJlLCB0b28uIApUaGUgY2xvc2V0IGF1dG9tYXRpY2FsbHkgbG9ja3MsIHNvIHRoZXkgY291bGRuJ3QgcHV0IGl0IGF3YXksIGJ1dCB0aGV5J2QgZ2V0IGluIHRyb3VibGUgaWYgdGhleSB3ZXJlIGZvdW5kIHdpdGggZXh0cmEuIApNb3RvckNpdHkgaXMgeW91ciBiZXN0IGJldC4gTUdNIHNlY29uZC4gR3JlZWt0b3duIHRoaXJkLiBJIG1peCBpdCB1cCBhbmQgcGxheSBhbGwgdGhyZWUgZXZlcnkgbm93IGFuZCB0aGVuLgpJbiBKdWx5IDIwMDgsIHRoZSBoZWlnaHQgb2YgdGhlIHJlY2Vzc2lvbiwgRG9uYWxkIFRydW1wIHNvbGQgYSBtYW5zaW9uIGluIFBhbG0gQmVhY2ggZm9yICQ5NSBtaWxsaW9uIHRvIERtaXRyeSBSeWJvbG92bGV2LCBhIFJ1c3NpYW4gb2xpZ2FyY2guIApUaGV5IGFsbCBkZXNlcnZlIHJlY29nbml0aW9uIGZvciBmaW5pc2hpbmcgdGhpcyAyMDE0IEdpcm8uIApPdGhlciBoaWdobGlnaHRzIGluY2x1ZGUgYSBjaGVmJ3Mga2l0Y2hlbiB3aXRoIHR3byBpc2xhbmRzLCBhIGRpbmluZyByb29tIHdpdGggYSBiYXJyZWwgdmF1bHRlZCBjZWlsaW5nIGFuZCBhIGdyYW5kLCBkb3VibGUgaGVpZ2h0IHN0dWR5LgpBbHRob3VnaCBUZXhhcyBIb2xkZXIgbXVzdCBiZSBhIGdhbWUgdGl0bGUgb2YgdGFsZW50LCBldmVyeSB0aW1lIGEgcGVyc29uYWwgY29tcHV0ZXIgaXMgZmlndXJpbmcgb3V0IHlvdXIgcG9rZXIgaGFuZHMgYW5kIHdyaXN0cywgZXh0cmVtZSBjYXV0aW9uIHNob3VsZCBiZSB3b3JrZWQgb3V0IGV2ZW4gaWYgeW91IHVuZGVyc3RhbmQgaG93IHRvIHBlcmZvcm0gYXMgYW4gc3BlY2lhbGlzdC4gCk5vdGhpbmcgdGhhdCBoYXBwZW5zIHRvIFRydW1wLCBhdCB0aGlzIHBvaW50LCBpcyBnb2luZyB0byBkaXNzdWFkZSB0aGVtLiBUaGVzZSBwZW9wbGUgaGF2ZSBmaW5hbGx5IGhhZCBhIHRhc3RlIG9mIGEgUHJlc2lkZW50IHdobyB3YXMgb3Blbmx5LCBuYWtlZGx5IHJhY2lzdC4gQW5kIEZveCBOZXdzIGhhcyB0b2xkIHRoZW0gZm9yIHR3byBzdHJhaWdodCB5ZWFycyB0aGF0IGl0IGJlZW4gZ3JlYXQuIAo=|<---