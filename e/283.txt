<!DOCTYPE html>
<html lang="en,fr,it" xmlns:fb="http://ogp.me/ns/fb#" xmlns:og="http://ogp.me/ns#">
 <head id="ctl01_Head1">
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="width=940" name="viewport"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <meta content="storedirectory" name="viciniteePageType"/>
  <meta content="a97dbef2-3c77-4b81-90df-d7215c47c222" name="viciniteestoreid"/>
  <meta content="store" name="viciniteestoretype"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="The Oracle" property="og:Site_Name"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="https://s3-eu-west-1.amazonaws.com/eu-static.theoracle.com/Live/ResizedImages/Logos20160330/V2%20logos/esncim4mnc0/Store_Detail/boss.jpg" property="og:image"/>
  <noscript>
  </noscript>
 </head>
 <body>
  <noscript>
   <iframe height="0" src="https://www.googletagmanager.com/ns.html?id=GTM-KBDPD5W" style="display:none;visibility:hidden" width="0">
   </iframe>
  </noscript>
  <form action="/shops/fashion/boss" class="lang-english" id="aspnetForm" method="post" name="aspnetForm">
   <div class="page">
    <div class="cookie-policy">
     [link]
     
     <p>
      [search][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link]<li>[link]</li><li>[search]</li><li>[search]</li>
     </p>
    </div>
    <div class="container_12 main-info">
     [link]
     
     <div class="grid_12" id="header">
      <div class="grid_4 mode omega">
       <div class="today-opening-hours">
        <div>
         <a href="/visitor-info/opening-times">
          Shopping Open Today
          <span>
           9am - 9pm
          </span>
         </a>
        </div>
       </div>
      </div>
      <div class="grid_8 header-set omega" id="ctl01_pnlHeaderSet">
       [link]
       
       [ahref]
       
       <ul>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
        <li>
         <a href="/visitor-info/parking">
          Parking
         </a>
        </li>
        <li>
         [link]
         
        </li>
        <li>
         [ahref]
         
        </li>
       </ul>
      </div>
     </div>
     <div class="grid_12 nav-info">
      <div class="logo">
       [ahref]
       
      </div>
      <ul id="nav">
       <li>
        [link]
        
        <div class="drop">
         <div class="info">
          <span class="title">
           SHOP<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li><li>[search]</li>
          </span>
          <p>
           The Oracle located in Reading town centre has over 80 stylish stores for you to explore including Apple, House of Fraser, Zara and Debenhams.  <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[ahref]<li>[search]</li>[ahref]<li>[search]</li><li>[ahref]</li>
          </p>
          <div class="btn-holder">
           [ahref]
           
          </div>
         </div>
         <div class="cols">
          <div class="col">
           <ul class="list">
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="col">
           <ul class="list">
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="col">
           <ul class="list">
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="col">
           <ul class="list">
            <li>
             [link]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
       </li>
       <li>
        <a class="navItem" href="/../dining">
         Dine
         <span class="arrow">
          [link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<li>[ahref]</li><li>[ahref]</li>
         </span>
        </a>
        <div class="drop">
         <div class="info">
          <span class="title">
           DINE
          </span>
          <p>
           Explore our restaurants and cafes at The Oracle. The Riverside offers a choice of stylish restaurants, bars and cafes. Serving everything from Italian feasts and authentic Oriental dishes to French cuisine. <li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]
          </p>
          <div class="btn-holder">
           [ahref]
           
          </div>
         </div>
         <div class="cols">
          <div class="col">
           <ul class="list">
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="col">
           <ul class="list">
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
           </ul>
          </div>
          <div class="col">
           <ul class="list">
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
          <div class="col">
           <ul class="list">
            <li>
             [search]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
        </div>
       </li>
       <li>
        [link]
        
        <div class="drop">
         <div class="info info02">
          <span class="title">
           Cinema<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[search]</li><li>[link]</li>
          </span>
          <p class="text-display-content ">
           Our 11 screen Vue Cinema shows the latest movies and benefits from deluxe seating and the best in digital Dolby surround sound.
          </p>
          <div class="btn-holder">
           [ahref]
           
          </div>
         </div>
         <div class="cols">
          <div class="col2">
           <span class="title">
            [ahref]
            
           </span>
           <div class="event-description">
            <p class="text-display-content ">
             Find out film times, upcoming releases and book your tickets online for Vue Cinema Reading.<li>[search]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
            </p>
            <div class="btn-holder">
             [ahref]
             
            </div>
           </div>
          </div>
          <div class="col2">
           <span class="title">
            [link]
            
           </span>
           <div class="event-description">
            <p class="text-display-content ">
             Use our interactive map to find out where Vue Cinema is located at The Oracle.
            </p>
            <div class="btn-holder">
             <a class="button colorbox-iframe" data-height="550px" data-width="960px" href="/../modules/storedirectory/storelisting/popupcentremap.aspx?unitList=L01U0250,L02U0470,L03U0510&amp;keepThis=true&amp;TB_iframe=true&amp;height=550&amp;width=960" id="ctl01_hlViewOnMap">
              VIEW ON MAP
             </a>
            </div>
           </div>
          </div>
          <div class="col2">
          </div>
         </div>
        </div>
       </li>
       <li>
        [link]
        
        <div class="drop" id="ctl01_pnlFacilitiesMegaDropdown">
         <div class="info info02">
          <span class="title">
           VISIT[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[ahref]</li>[search][link][ahref]<li>[search]</li>
          </span>
          <p>
           All the information you need when visiting the centre. The Oracle is easily accessible and has great transport links <span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </p>
          <div class="btn-holder">
           [link]
           
          </div>
         </div>
         <div class="cols cols-visit">
          <div class="post">
           <div class="visual">
            [ahref]
            
           </div>
           <div class="description">
            <span class="title">
             <li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[search]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
            </span>
            <a class="link link2" href="/../visitor-info/opening-times" id="ctl01_rptFacilties_ctl00_lnkNav">
             more
            </a>
           </div>
          </div>
          <div class="post">
           <div class="visual">
            [link]
            
           </div>
           <div class="description">
            <span class="title">
             [link]
             
            </span>
            <a class="link link2" href="/../visitor-info/parking" id="ctl01_rptFacilties_ctl01_lnkNav">
             more
            </a>
           </div>
          </div>
          <div class="post">
           <div class="visual">
            [link]
            
           </div>
           <div class="description">
            <span class="title">
             [ahref]
             
            </span>
            <a class="link link2" href="/../visitor-info/centre-map" id="ctl01_rptFacilties_ctl02_lnkNav">
             more
            </a>
           </div>
          </div>
          <div class="post">
           <div class="visual">
            [link]
            
           </div>
           <div class="description">
            <span class="title">
             [ahref]
             
            </span>
            [ahref]
            
           </div>
          </div>
          <div class="post">
           <div class="visual">
            [link]
            
           </div>
           <div class="description">
            <span class="title">
             [link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[search]</li><li>[search]</li>[search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[ahref]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][link]<li>[search]</li><li>[search]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[link]</li>[link]<li>[search]</li>[link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li>[link][ahref]<li>[ahref]</li>[ahref][link]<li>[link]</li><li>[search]</li>[search]<li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </span>
            <a class="link link2" href="/../visitor-info/our-app" id="ctl01_rptFacilties_ctl04_lnkNav">
             more
            </a>
           </div>
          </div>
          <div class="post getting-post">
           <span class="title">
            [ahref]
            
           </span>
           <div class="getting-form">
            <ul class="get-list" id="megadropdownRouteTypes">
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
             <li>
              [ahref]
              
             </li>
            </ul>
            <label for="megadropDownPostcode">
             Enter your postcode for directions to The Oracle
            </label>
            <div class="text">
            </div>
            <div class="row">
            </div>
           </div>
          </div>
         </div>
        </div>
       </li>
       <li>
        [ahref]
        
        <div class="drop">
         <div class="info info02">
          <span class="title">
           News<li>[search]</li>[search][search]<li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
          </span>
          <p>
           Find out what’s new at The Oracle, what others are saying and what’s happening in Reading town centre.
          </p>
          <div class="btn-holder">
           [ahref]
           
          </div>
         </div>
         <div class="cols">
          <div class="col2">
           <span class="title">
            [link]
            
           </span>
           <div class="visual">
            [link]
            
           </div>
           <div class="description">
            <p>
             Discover the best women’s partywear at The Oracle
            </p>
            [link]
            
           </div>
          </div>
          <div class="col2">
           <span class="title">
            Christmas gifts for men[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[search]<li>[search]</li><li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][ahref][ahref]
           </span>
           <div class="visual">
            <a href="/../news/christmas-gifts-for-men" id="ctl01_rptNews_ctl01_lnkImage">
            </a>
           </div>
           <div class="description">
            <p>
             Men’s Christmas gift guide at The Oracle[link][ahref][ahref][ahref][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><li>[ahref]</li><li>[ahref]</li>[search]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
            [ahref]
            
           </div>
          </div>
          <div class="col2">
           <span class="title">
            <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][search]<li>[search]</li><li>[link]</li>[ahref][link][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
           </span>
           <div class="visual">
            [ahref]
            
           </div>
           <div class="description">
            <p>
             Head to The Oracle for the best natural and organic beauty gift sets  <li>[ahref]</li>[link][ahref][ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[ahref]</li><li>[search]</li><li>[search]</li>[ahref][search][link]<li>[search]</li>
            </p>
            [ahref]
            
           </div>
          </div>
         </div>
        </div>
       </li>
       <li>
        [link]
        
        <div class="drop">
         <div class="info info02">
          <span class="title">
           Events<li>[search]</li><li>[ahref]</li>[ahref]<li>[ahref]</li>[link]<li>[ahref]</li>[search]<li>[link]</li>
          </span>
          <p>
           Discover upcoming centre events here first.
          </p>
          <div class="btn-holder">
           [ahref]
           
          </div>
         </div>
         <div class="cols">
          <div class="col2">
           <span class="title">
            <li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[link]</li>[ahref]<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li>
           </span>
           <div class="event-description">
            <em class="date">
             1 Dec - 22 Dec 2018
            </em>
            <p>
             Something exciting is coming to The Riverside this Christmas...
            </p>
            <div class="btn-holder">
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
        </div>
       </li>
       <li>
        [ahref]
        
        <div class="drop">
         <div class="info info02">
          <span class="title">
           Offers
          </span>
          <p>
           Be the first to hear about The Oracle’s offers, discounts and competitions <li>[search]</li>[search]<li>[link]</li>[link]<li>[link]</li><li>[search]</li>
          </p>
          <div class="btn-holder">
           [link]
           
          </div>
         </div>
         <div class="cols">
          <div class="col2">
           <span class="title">
            [search][search]<li>[link]</li>[search]<li>[link]</li>[search]<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li><li>[search]</li>
           </span>
           <div class="visual">
            [link]
            
           </div>
           <div class="description">
            <p>
             Grab them quick, whilst stocks last...<li>[ahref]</li><li>[ahref]</li><li>[ahref]</li><li>[link]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]
            </p>
            [link]
            
           </div>
          </div>
          <div class="col2">
           <span class="title">
            [ahref]
            
           </span>
           <div class="visual">
            [ahref]
            
           </div>
           <div class="description">
            <p>
             Limited time only...[link][link][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[link][ahref]
            </p>
            [ahref]
            
           </div>
          </div>
          <div class="col2">
           <span class="title">
            [link]
            
           </span>
           <div class="visual">
            [link]
            
           </div>
           <div class="description">
            <p>
             PLUS Exclusive. [search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[link]<li>[link]</li>[search][search]<li>[ahref]</li>[search][search]
            </p>
            <a class="link link2" href="/../offers/offer/win-a-break-to-iceland-on-plus" id="ctl01_rptOffers_ctl02_lnkNav" title="More">
             More
            </a>
           </div>
          </div>
         </div>
        </div>
       </li>
       <li>
        <a href="/gift-cards">
         Gift Card
         <span class="arrow">
         </span>
        </a>
        <div class="drop">
         <div class="info info02">
          <span class="title">
           Gift Card
          </span>
          <p>
           Whatever the occasion, you don’t have to think twice about buying the perfect present, thanks to the Oracle Gift Card.<li>[link]</li>[search]<li>[ahref]</li>[link]<li>[search]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
          </p>
         </div>
         <div class="cols">
          <div class="col2">
           <span class="title">
            The Ultimate Shopping Experience<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[ahref]</li><li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
           </span>
           <div class="event-description">
            <p class="text-display-content ">
             The Oracle Gift Card offers access to over 80 stores for shopping, drinking, dining and more.[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][search][link]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]<li>[link]</li>[link]
            </p>
            <div class="btn-holder">
             [link]
             
            </div>
           </div>
          </div>
          <div class="col2">
           <span class="title">
            <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li>[link]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref][link]
           </span>
           <div class="event-description">
            <p class="text-display-content ">
             Purchasing The Oracle Gift Card is easy, simply visit the secure website to buy now.
            </p>
            <div class="btn-holder">
             <a class="button" href="/" target="_blank">
              Visit Site
             </a>
            </div>
           </div>
          </div>
          <div class="col2">
           <span class="title">
            [link]
            
           </span>
           <div class="event-description">
            <p class="text-display-content ">
             To check your Oracle Gift Card balance online, all we need is your card number.[ahref]<li>[search]</li><li>[search]</li>[ahref]<li>[ahref]</li>
            </p>
            <div class="btn-holder">
             [link]
             
            </div>
           </div>
          </div>
         </div>
        </div>
       </li>
      </ul>
      <div class="search-form popup-search-form">
       <fieldset>
        <legend class="hidden">
         Quick Search
        </legend>
        [link]
        
        <div class="p-pup" id="popupSearch">
         <span class="arrow">
          <li>[ahref]</li>[ahref]<li>[search]</li>[link][ahref]<li>[search]</li>
         </span>
         [link]
         
         <div class="inner-field">
         </div>
         <div id="popupSearchResults">
          <span class="result-title">
           Filter Results
          </span>
          <ul class="tabset" id="popupSearchTabs">
           <li>
            [link]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [ahref]
            
           </li>
          </ul>
          <div class="tab-holder">
           <div class="tab-section ajax-content" id="popupSearchListContainer">
           </div>
           <div class="paging" id="popupPagingContainer">
           </div>
           <div class="btn-holder">
            <a class="button" href="#" id="popupSearchAllResultsButton">
             All Results
            </a>
           </div>
          </div>
         </div>
        </div>
       </fieldset>
       <div class="clear">
       </div>
      </div>
     </div>
     <div class="clear">
     </div>
     <div id="mainContentArea">
      <div class="center-nomargins" id="ctl01_divCenter">
       <div class="container_12" id="main">
        <div class="grid_9 main-holder">
         <div class="title-box">
          <span class="here">
           You are here<li>[search]</li>[link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[ahref]</li>
          </span>
          <ul class="breadcrumbs">
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            BOSS
           </li>
          </ul>
         </div>
         <div class="heading-box">
          <h1>
           <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
          </h1>
          <span class="sub-heading">
           The Lower Mall[ahref]<li>[search]</li>[ahref]<li>[ahref]</li>[ahref]<li>[search]</li>[ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
          </span>
         </div>
         <div class="clear">
         </div>
         <div class="grid_9 alpha omega" id="twocolumns">
          <div class="grid_6 alpha main-col">
           <div class="gallery">
            <div class="gallery-holder">
             <ul>
              <li>
              </li>
             </ul>
            </div>
           </div>
           <div class="text-box content cms-content">
            <p>
             [ahref]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
            </p>
           </div>
          </div>
          <div class="grid_3 column omega">
           <div class="column-box with-overflow">
            <ul class="btn-list">
             <li id="ctl01_mainContent_liMap">
              [ahref]
              
             </li>
             <li id="ctl01_mainContent_liVisitSite">
              [ahref]
              
             </li>
            </ul>
            <ul class="btn-list">
            </ul>
            <ul class="btn-list">
            </ul>
            <div id="ctl01_mainContent_pnlContact">
             <div class="box-holder">
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
              <p>
               0118 956 5620
               <br/>
              </p>
             </div>
             <ul class="btn-list">
              <li>
              </li>
             </ul>
            </div>
            <div class="box-holder">
             <h3>
              [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
             </h3>
             <dl>
              <dt>
               Mon
              </dt>
              <dd>
               9:00 AM - 9:00 PM
              </dd>
              <dt>
               Tue
              </dt>
              <dd>
               9:00 AM - 9:00 PM
              </dd>
              <dt class="current">
               Wed
              </dt>
              <dd class="current">
               <span>
                9:00 AM - 9:00 PM[link]<li>[ahref]</li>[search]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>
               </span>
              </dd>
              <dt>
               Thurs
              </dt>
              <dd>
               9:00 AM - 9:00 PM
              </dd>
              <dt>
               Fri
              </dt>
              <dd>
               9:00 AM - 9:00 PM
              </dd>
              <dt>
               Sat
              </dt>
              <dd>
               9:00 AM - 9:00 PM
              </dd>
              <dt>
               Sun
              </dt>
              <dd>
               11:00 AM - 5:00 PM
              </dd>
             </dl>
            </div>
            <div class="box-holder">
             [link]
             
            </div>
            <div class="box-holder">
             <div class="facebookPadBottom">
              <fb:like action="like" class="fb-like " href="http://www.theoracle.com/shops/fashion/boss" layout="button_count" show_faces="false" width="50px">
              </fb:like>
             </div>
             [ahref]
             
            </div>
           </div>
           <div class="sliders">
            <div class="slide-show">
             <div class="heading">
              <h3>
               [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
              </h3>
             </div>
             <div class="slide-holder slide-holder-homepage">
              <ul>
               <li>
                <span class="title">
                 <a href="/../news/the-best-nonalcoholic-cocktails-in-reading" id="ctl01_mainContent_asNewsOffers_csArticles_ctl01_lnkTitle">
                  The best non-alcoholic cocktails in Reading
                 </a>
                </span>
                <div class="visual">
                 [link]
                 
                </div>
                <div class="slide-info">
                 <p>
                  Visit us and try these delicious mocktails at The Oracle
                  <br>
                   [link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                  </br>
                 </p>
                 [link]
                 
                </div>
               </li>
               <li>
                <span class="title">
                 [ahref]
                 
                </span>
                <div class="visual">
                 <a href="/../news/what-to-wear-to-a-festival" id="ctl01_mainContent_asNewsOffers_csArticles_ctl02_lnkImage">
                 </a>
                </div>
                <div class="slide-info">
                 <p>
                  <li>[search]</li>[link][ahref]<li>[ahref]</li>[ahref]
                 </p>
                 [ahref]
                 
                </div>
               </li>
               <li>
                <span class="title">
                 [ahref]
                 
                </span>
                <div class="visual">
                 [link]
                 
                </div>
                <div class="slide-info">
                 <p>
                  <li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
                 </p>
                 [link]
                 
                </div>
               </li>
              </ul>
             </div>
             <div class="nav-holder">
              <div class="nav-buttons">
               <a class="prev" href="#">
                Previous
               </a>
               [ahref]
               
              </div>
              <ul class="switcher">
               <li>
                [ahref]
                
               </li>
               <li>
                <a href="#">
                 1
                </a>
               </li>
               <li>
                [link]
                
               </li>
              </ul>
             </div>
            </div>
           </div>
          </div>
         </div>
        </div>
        <div class="grid_3 omega aside">
         <div class="shop-box">
          <div class="holder">
          </div>
         </div>
         <div id="relatedStores">
          <div class="heading">
           <h3>
            [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
          </div>
          <div class="side-box">
           <div class="holder">
            [ahref]
            
            <span class="title">
             <li>[search]</li><li>[link]</li><li>[link]</li>[search][ahref]
            </span>
           </div>
           <div class="holder">
            <span class="open">
             Open Today
             <span class="schedule">
              9am - 9pm
             </span>
            </span>
           </div>
          </div>
          <div class="side-box">
           <div class="holder">
            [ahref]
            
            <span class="title">
             [search]<li>[ahref]</li><li>[search]</li>[search]<li>[link]</li><li>[search]</li>
            </span>
           </div>
           <div class="holder">
            <span class="open">
             Open Today
             <span class="schedule">
              9am - 9pm[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li>
             </span>
            </span>
           </div>
          </div>
          <div class="side-box">
           <div class="holder">
            [ahref]
            
            <span class="title">
             <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][link]<li>[search]</li>[search]<li>[ahref]</li><li>[ahref]</li>[ahref]
            </span>
           </div>
           <div class="holder">
            <span class="open">
             <li>[search]</li>[search]<li>[search]</li><li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]
            </span>
           </div>
          </div>
          <div class="side-box">
           <div class="holder">
            [link]
            
            <span class="title">
             <a href="t" id="ctl01_mainContent_rsRelatedShops_rptRelatedShops_ctl04_lnkStoreName">
              Phase Eight
             </a>
            </span>
           </div>
           <div class="holder">
            <span class="open">
             Open Today
             <span class="schedule">
              9am - 9pm
             </span>
            </span>
           </div>
          </div>
          <div class="side-box">
           <div class="holder">
            [link]
            
            <span class="title">
             [ahref]
             
            </span>
           </div>
           <div class="holder">
            <span class="open">
             Open Today
             <span class="schedule">
              9am - 9pm
             </span>
            </span>
           </div>
          </div>
         </div>
        </div>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="container_12 bottom-info">
    <div class="bottom-holder">
     <div class="grid_12 columns-holder">
      <div class="grid_3 alpha">
       [link]
       
      </div>
      <div class="grid_3">
       [link]
       
      </div>
      <div class="grid_3">
       [ahref]
       
      </div>
      <div class="grid_3 omega">
       [ahref]
       
      </div>
     </div>
     <div class="clear">
     </div>
     <div class="container_12" id="footer">
      <div class="grid_12 footer-set alpha omega">
       <div class="grid_4 footer-info alpha">
        <ul class="social-networks">
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
         <li>
          [ahref]
          
         </li>
        </ul>
        <div class="info-section">
         [link]
         
         <p>
          The Oracle Shopping Centre, Reading, RG1 2AG[search]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>
         </p>
        </div>
        <div id="pageEditMode">
        </div>
       </div>
       <div class="grid_4">
        <h4>
         Getting Here
        </h4>
        <ul class="getting-list" id="footerRouteTypes">
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
        <h4>
         Find Route
        </h4>
        <div class="get-form">
         <fieldset>
          <legend class="hidden">
           Find Route
          </legend>
          <div class="row">
           <div class="text">
            [ahref]
            
           </div>
           <div class="powered-by">
            <span class="powered">
             PoweredBy[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[search][link]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
            </span>
            [link]
            
           </div>
          </div>
         </fieldset>
        </div>
       </div>
       <div class="grid_4 omega">
        <h4>
         Sign up for newsletter
        </h4>
        <div class="newsletter-form">
         <fieldset>
          <legend class="hidden">
           Sign up for newsletter
          </legend>
          <div class="col">
           [ahref]
           
          </div>
          [ahref]
          
         </fieldset>
        </div>
       </div>
      </div>
      <div class="clear">
      </div>
      <ul class="footer-nav">
       <li>
        [link]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [ahref]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        [link]
        
       </li>
       <li>
        <a accesskey="3" href="/sitemap">
         Sitemap
        </a>
       </li>
      </ul>
      <a class="skip" href="r">
       Back to top
      </a>
     </div>
    </div>
   </div>
   <div class="hide" id="store-item-template">
    <div class="post">
     <div class="visual">
      [ahref]
      
     </div>
     <div class="description">
      <ul class="button-list">
       <li class="giftCard" style="display:none;">
        <h2>
         [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
        </h2>
        [ahref]
        
       </li>
       <li class="offers" style="display:none;">
        [link]
        
       </li>
      </ul>
      <span class="title">
       <p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][link]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[search]</li><li>[ahref]</li>[link]<li>[link]</li>
      </span>
      <div class="btn-holder">
       <a class="button" href="#">
        View
       </a>
      </div>
     </div>
    </div>
   </div>
   <div class="hide" id="article-item-template">
    <div class="post">
     <div class="visual">
      [link]
      
     </div>
     <div class="description">
      <span class="title">
       <em class="date">
       </em>
       [ahref]
       
      </span>
      <div class="description-text">
       <p>
       </p>
      </div>
      <div class="btn-holder">
       <a class="button" href="#">
        Read More
       </a>
      </div>
     </div>
    </div>
   </div>
   <div class="hide" id="page-item-template">
    <div class="post">
     <div class="visual">
      [link]
      
     </div>
     <div class="description">
      <span class="title">
       [search]<li>[link]</li>[link][search][ahref]<li>[link]</li>[ahref]
      </span>
      <div class="description-text">
       <p>
       </p>
      </div>
      <div class="btn-holder">
       [ahref]
       
      </div>
     </div>
    </div>
   </div>
   <div id="fb-root">
   </div>
  </form>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0286
  </b>
 </body>
</html>