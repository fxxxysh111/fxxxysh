--->|UGVvcGxlIHdobyBjb21wbGFpbiBhYm91dCB0aGUgbGFjayBvZiBjb21tdW5pY2F0aW9uIGlzIHJpZGljdWxvdXMgYmVjYXVzZSBpdCB3b3VsZG50IG1ha2UgYSBkaWZmZXJlbmNlIGFuZCB0aGlzIHdob2xlIHRyYW5zcGFyZW5jeSBpc3N1ZSBpcyBibG93biB3YXkgb3V0IG9mIHByb3BvcnRpb24uIFNvbWUgb3duZXJzIGFyZSB3YXl5IHRvbyBpbnZlc3RlZCBpbnRvIGNvdW50aW5nIGNvc3RzIHdoZW4gdGhleSBzaG91bGQganVzdCBiZSBlbmpveWluZyB0aGUgY2FyLgpGZWVsaW5nIGx1Y2t5IHRvIGhhdmUgYSBqb2IgYW5kIHJlYWxpemUgdGhhdCB3aXRob3V0IHdvcmtlcnMsIGNhcGl0YWxpc20gd291bGQgbm90IHByb2R1Y2UgcHJvZml0LiBvd25lcnMgb2YgdGhlIG1lYW5zIG9mIHByb2R1Y3Rpb24gbGl2ZSBvZmYgb2Ygb3VyIGxhYm9yLCBhbmQgdGhleSBsaXZlIHdlbGwuIHRoZW0gc2hhcmUgdGhlIHdlYWx0aCBvciBmYWNlIHN0cmlrZXMsIHdhbGsgb3V0cywgYW5kIGdlbmVyYWwgc2Fib3RhZ2U0LiBGb3VydGgsIHdlIG11c3QgZmlndXJlIG91dCBhIHdheSB0byBnZXQgc2luZ2xlIHBheWVyIGhlYWx0aGNhcmUuIApIZSBkb2VzIG5vdGhpbmcgZWxzZSB3aXRoIGhpcyBsaWZlIGJ1dCBwbGF5IHByaXZhdGUgc2VydmVyIHZhbmlsbGEsIHF1aXQgaGlzIGpvYiBzbyBoZSBjb3VsZCBwbGF5IGZ1bGwgdGltZSBhbmQgaGUncyBwcmV0dHkgbXVjaCB0aGUgb25seSB3YXJyaW9yIHJlbGVhc2luZyB2aWRlb3MgYW5kIHN0cmVhbWluZyBpdCwgcGVvcGxlIHdhdGNoIGl0IGJlY2F1c2UgaGUncyBwcmV0dHkgbXVjaCB0aGUgb25seSBvbmUgZG9pbmcgaXQsIG5vdCBiZWNhdXNlIGhlJ3MgZ29vZCwgb2ggYW5kIHRoZSBvbmx5IG9uZXMgd2F0Y2hpbmcgaGltIGlzIHRoZSBwcml2YXRlIHNlcnZlciBjb21tdW5pdHkuCkRpZSBVbmdsZWljaGhlaXQgaXN0IGRldXRsaWNoIFNwcmJhci4gCkl0IHJlYWxseSB0b28gYmFkIHNvIG11Y2ggbWFzY3VsaW5pdHkgYW5kIHBhdHJpb3Rpc20gaXMgYXQgc3Rha2UgaW4gd2FyIGFuZCBzcG9ydC4gdGhlIFVTIGdvdmVybm1lbnQgYW5kIHRoZSBBbWVyaWNhbiBwZW9wbGUgY291bGQgdGhpbmsgb3V0c2lkZSB0aGUgZm9vdGJhbGwvc29jY2VyIG1ldGFwaG9yIGFuZCBzZWUgdGhlcmUgYXJlIGFsbCBzb3J0cyBvZiBvdGhlciBnYW1lcy4gd2l0aGRyYXdpbmcgYWxsIG1pbGl0YXJ5IGFuZCBmZWVkaW5nIHRoZSBiaWxsaW9ucyBvZiBkb2xsYXJzIHdlIHNwZW5kaW5nIG5vdyBvbiB3YXIgdG8gYWlkIEFmZ2hhbiBncm91cHMgdGhhdCBzdXBwb3J0IGRlbW9jcmFjeSBpbiB0aGUgcmVnaW9uLiB0aGF0IG1pZ2h0IGJlIHRvbyBVbHRpbWF0ZSBGcmlzYmVlIGZvciB0aGUgQW1lcmljYW4gam9ja3Mgd2hvIHJ1biB0aGlzIGNvdW50cnkuIFVsdGltYXRlIEZyaXNiZWUganVzdCBkb2VzbiBoYXZlIGFueSBiYWxscy4KQ0FSUkFEVVMsIEZyZWRlcmljayAgIEF1Z3VzdCAxNSwgMTk0MCAgIFNlcHRlbWJlciAxOSwgMjAxOCBJdCBpcyB3aXRoIGdyZWF0IHNhZG5lc3MgdGhlIENhcnJhZHVzIGZhbWlseSBhbm5vdW5jZXMgdGhlIHBhc3Npbmcgb2YgRnJlZCBDYXJyYWR1cyBvbiBTZXB0ZW1iZXIgMTksIDIwMTggaW4gaGlzIDc5dGggeWVhci4gQmVsb3ZlZCBodXNiYW5kIGFuZCBiZXN0IGZyaWVuZCBvZiBKdWR5IENhcnJhZHVzLiBMb3ZpbmcgZmF0aGVyIG9mIFN1c2FuIEJhaWxleSAoUm9uKSwgSmVubmlmZXIgQ3VubmluZ2hhbSAoQW5kcmV3KSBhbmQgSmlsbGlhbiBTbWl0aCAoSm9keSkuIApUaGF0IHNhaWQsIHRoZXkncmUgcHJldHR5IGludGVyY2hhbmdlYWJsZSB0ZXJtcyBhcyBpdCdzIHN0aWxsIGEgZm9ybSBvZiBtYXJrZXRpbmcuIEl0J3MgbWF5YmUgb25lIG9mIHRob3NlIHRoaW5ncyB3aGVyZSBhcyBhbiBhZ2VuY3ksIHlvdSB3b3VsZG4ndCBwcmVzZW50IHlvdXJzZWxmIGFzIGEgbWFya2V0aW5nIGZpcm0sIGJ1dCBvbmNlIHlvdXIgY2xpZW50IGlzIHVwIHRvIHNwZWVkIG9uIHdoYXQgeW91IHByb3ZpZGUsIHlvdSBjYW4gbWVudGlvbiBtYXJrZXRpbmcgaW50ZXJjaGFuZ2VhYmx5LiA3IHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvLiAKTXkgZGFkIHdhcyBjb25zdGFudGx5IGF0IHdvcmsgb3Igb24gYnVzaW5lc3MgdHJpcHMuIApTZWUgYSBzaG93LCB3YWxrIHRocm91Z2ggc29tZSBjYXNpbm9zIGFuZCBleHBsb3JlIHRoZSBkZXNlcnQuLiAKVG8gYmUgZnJhbmssIEkgbG9va2VkIGF0IGEgbG90IG9mIHRoZSBwcm9maWxlcyB0aGF0IEkgd291bGQgY29tZSBhY3Jvc3Mgb24gVHdpdHRlciwgc2NhbiB0aGUgYmlvL2ZlZWQgYW5kIG15IGltbWVkaWF0ZSB0aG91Z2h0IG9uIG1vc3Qgb2YgdGhlbSB3YXMgImZyYXVkIi4gCk1vYmlsaXR5IGlzIHRoZSB0aGlyZCByYWlsIG9mIGZhbWlseSBsYXcuIEl0J3MgZXh0cmVtZWx5IGRpZmZpY3VsdCB0byBnaXZlIGdvb2QgYWR2aWNlIGJlY2F1c2UgdGhlIGNvdXJ0cyBhcmUgYWxsIG92ZXIgdGhlIHBsYWNlIGluIHRlcm1zIG9mIGRlY2lzaW9ucy4gVGhpcyBpcyBiZWNhdXNlIGl0J3MgY29tcGxldGVseSBiYXNlZCBvbiB0aGUgZmFjdHMgb2YgdGhlIGNhc2UgaW4gZnJvbnQgb2YgdGhlbSwgYW5kIHRoZSBsaWtlbGlob29kIG9mIGZpbmRpbmcgYSBwcmV2aW91cyBjYXNlIHdpdGggdGhlIHNhbWUgZmFjdHMgaXMgZXNzZW50aWFsbHkgbmlsLi4gClRoZUJpb25pY0NvbG9uICAzIHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvClNoZSBtYXkgYWxzbyBzYXkgc29tZXRoaW5nIHRoYXQgaW5kaWNhdGVzIHRoZXJlIGlzIGEgcHJvYmxlbSAod2hldGhlciB0aGF0J3Mgc3ltcHRvbXMgb2YgYW4gZWF0aW5nIGRpc29yZGVyIG9yIHNvbWV0aGluZyBlbHNlLCBsaWtlIHNoZSdzIGhhdmluZyBkaWdlc3RpdmUgcHJvYmxlbXMgZnJvbSBhIGxvdCBvZiBmb29kcykuIApJdCB0aGUgd29yc3QgcG9zaXRpb24uIFBvc2l0aW9uIGlzIGltcG9ydGFudC4gSXQgZG9taW5hdGVkIGJ5IHNvIG11Y2ggb2YgYW55IG9wcG9uZW50cyBjYWxsaW5nIHJhbmdlIChLUSwgQUosIEtKKS4gClRoaXMganVzdCBtZWFucyB0aGF0IHlvdSB3aWxsIGhhdmUgYSBjZXJ0YWluIGJhbmtyb2xsIG9ubGluZSBldmVuIGlmIHlvdSBoYXZlIG1vcmUgY2FzaCBhdmFpbGFibGUuIFRoYXQgaXMgd2h5IGluIGFuIG9ubGluZSBwb2tlciBnYW1lLCB5b3UgaGF2ZSB0byBzdGFydCBidWlsZGluZyB1cCBhIGJhbmtyb2xsLiAKV2VpdGVyIHNjaHJlaWJ0IGRpZSBGQVosIGRhc3MgU2llIGF1Y2ggd2VpdGVyaGluIGtvbnRyb3ZlcnNlIE1laW51bmdlbiB2ZXJmZmVudGxpY2hlbiB3b2xsZW4sIGF1Y2ggd2VubiBkaWVzZSBkYXp1IGZocmVuLCBkYXNzIExldXRlIHNpY2ggYW5nZWdyaWZmZW4gZmhsZW4uIApFbHNld2hlcmUsIE5hdGhhbiBCdWNrbGV5IGNvdWxkIG9ubHkgc2F5IGhlIGhhZCAiaG9wZSIgdGhhdCBKZXJlbXkgSG93ZSBjb3VsZCByZXR1cm4gZnJvbSBhIGJhZCBjb3JrIHRoaXMgd2Vlay4gCkkga25vdyB0aGF0IGl0IHdpbGwgaGFwcGVuIHdoZW4gaXQgaGFwcGVucywgYW5kIEkgdHJ5IHRvIG5vdCBkd2VsbCBvbiB0aGUgIndoZW4uIiBIb3dldmVyLCB3aGF0IGlzIGEgY3VycmVudCBwcmlvcml0eSBvZiBtaW5lLCBpcyBtZSEgSSBhbSBteSBudW1iZXIgMSBwcmlvcml0eSByaWdodCBub3cuIApXaGF0IEkgYW0gdGFsa2luZyBhYm91dCBpcyB0aGUgYXZlcmFnZSBqb2UsIGdvaW5nIGludG8gYSBjYXNpbm8gbGlrZSBhIGJhc2ljIDkgNXBtIGpvYiwgYW5kIGdyaW5kaW5nIG91dCBhIGxpdmluZyB3aXRoIGEgZGVjZW50IHdpbiByYXRlLCBzYXksIGJldHdlZW4gJDIwIDEwMC9oci4gCllvdSBnZXR0aW5nIGEgQVRYIG1pZCB0b3dlciwgbWlnaHQgYXN3ZWxsIGdldCBhIEFUWCBtb2JvIHRvbywgaXRzIG9ubHkgYSAxMCBidWNrcyBtb3JlLiBJdCBtaWdodCBub3QgYWN0dWFsbHkgbWFrZSBhbnkgZGlmZmVyZW5jZSB0byB5b3UsIGJ1dCBpdHMgYWx3YXlzIG5pY2UgdG8gaGF2ZSBtb3JlIHNsb3RzIGFuZCBwb3J0cy4gCkhlIHRha2UgYSByZWFsbHkgd2VhayBvYnZpb3VzIGxpbmUgbGlrZSBzdWRkZW5seSBiZXR0aW5nIG91dCBodWdlIG9uIHJpdmVyIGhlYXJ0IG9yIGMvciBhbGwgaW4uIApBbmQgSSB3YXRjaCBvbmxpbmUgcG9rZXIsIHRoZXkgdGVuZCB0byBzaG93IHRoZWlyIG9wcG9uZW50cyB0aGF0IHRoZXkgd2VyZSBibHVmZmluZy4gTm9ib2R5IGluIHRoaXMgZ3JvdXAgc2hvd2VkIHdoYXQgdGhleSBoYWQsIGJ1dCBldmVyeSB0aW1lIG15IHJhaXNlIGdvdCBvdGhlciBmb2xkLCBJIHdvdWxkIGp1c3Qgc2hvdyBteSBjYXJkcy4gCkluIHRoZSBwYXN0IChlbXBoYXNpemUgb24gcGFzdCwgbGF0ZWx5LCBub3Qgc28gbXVjaCkgQ2hpbmEgaGFzIG1hZGUgaXQgY2xlYXIgaXQgaXMgd2lsbGluZyB0byBtYWludGFpbiB0aGUgc3RhdHVzIHF1byBhcyBsb25nIGFzIHRoZSBST0MgZ292ZXJubWVudCBjbGFpbXMgdGhhdCB0aGVyZSBpcyBvbmUgQ2hpbmEuIApOb3QgdGhhdCBoYXJkIHRvIGJlbGlldmUgaG9uZXN0bHkuIEkgY291bGQgc2hhdmUgYWxsIG9mIG15IGhhaXIgb2ZmIG15IGJvZHksIGRyaXZlIDUwMCBtaWxlcyBmcm9tIG15IGhvdXNlIHdpdGhvdXQgaGF2aW5nIGFueSBlbGVjdHJvbmljIGRldmljZSBpbiBteSBjYXIgb3Igb24gbWUsIGFuZCBwaWNrIGEgdGFyZ2V0LiAKUGVyc29uYWxseSwgSSBmaW5kIHRoYXQgYSBiaXQgdG9vIGNvbnNlcnZhdGl2ZSBhcyBtb3N0IGluZGV4IGZ1bmRzIGF1dG9tYXRpY2FsbHkgcmViYWxhbmNlIHRvIGFjaGlldmUgZ29vZCByZXR1cm5zIHdpdGggc3Ryb25nIHBlcmZvcm1pbmcgaW5kaXZpZHVhbCBmdW5kcy4gClNvLCB3aGVuIGhlIGZhbGxzIGZvciBhbiBJdGFsaWFuIGdpcmwsIERhbm55IGhhcyB0byBrZWVwIGhlciBzZWNyZXQgdW50aWwgaGUncyByZWFkeSB0byBicmVhayB0aGUgbmV3cyB0byBNb20uIFRoaXMgaXMgYSBzd2VldCwgZnVubnkgbW92aWUgd2l0aCB0b25zIG9mIHBhcmVudGFsIGlzc3VlcyBhbmQgZmFtaWx5IHRoZW1lcyB3ZSBhbGwgcmVjb2duaXplLi4gClRvbyBtdWNoIGlzIG5vdCB0aGUgc2FtZSBhcyBleGVyY2lzaW5nIHRvbyBsaXR0bGUuIFRoZXkgZG8gY29tcGxldGVseSBkaWZmZXJlbnQgdGhpbmdzIHRvIHRoZSBib2R5LiBhIDIwMDUgYXJ0aWNsZSBpbiBTY2llbmNlIG1hZ2F6aW5lLCBKYW1lcyBBLiBMZXZpbmUsIGFuIG9iZXNpdHkgc3BlY2lhbGlzdCBhdCB0aGUgTWF5byBDbGluaWMsIHBpbnBvaW50ZWQgd2h5LCBkZXNwaXRlIHNpbWlsYXIgZGlldHMsIHNvbWUgcGVvcGxlIGFyZSBmYXQgYW5kIG90aGVycyBhcmVuIGZvdW5kIHRoYXQgcGVvcGxlIHdpdGggb2Jlc2l0eSBoYXZlIGEgbmF0dXJhbCBwcmVkaXNwb3NpdGlvbiB0byBiZSBhdHRyYWN0ZWQgdG8gdGhlIGNoYWlyLCBhbmQgdGhhdCB0cnVlIGV2ZW4gYWZ0ZXIgb2Jlc2UgcGVvcGxlIGxvc2Ugd2VpZ2h0LCBoZSBzYXlzLgpHZXQgYSBzbWFsbCBiYXNpbiBhbmQgZmlsbCB3aXRoIHdhcm0gd2F0ZXIuIApIb3dldmVyLCBzb21ldGltZXMgdGhhdCBjb25maWRlbmNlIGlzIGZsZWV0aW5nIHdoZW4geW91IHNpdCBkb3duIHRvIHBsYXkgYSBQb2tlciBUb3VybmFtZW50IGZvciB2YXJpb3VzIHJlYXNvbnMsIHN1Y2ggYXMgbm90IGdldHRpbmcgZ29vZCBhdCBtYXN0ZXJpbmcgdGhlIFJ1bGVzIEZvciBQb2tlciBHYW1lcy4gCkhlIGxlYXZlcyBhbmQgQm9iYnkgbG9va3MgY29uY2VybmVkLiAKV2hlbiB3ZSBmaXJzdCBzdGFydGVkIGV4cGxvcmluZywgbGlmZSBjb3VsZCBoYXZlIGJlZW4gZXZlcnl3aGVyZS4gT25jZSB3ZSB3ZW50IHRvIHRoZSBtb29uLCB3ZSBmb3VuZCBubyBldmlkZW5jZSBvZiBsaWZlIHRoZXJlLiBOb3cgd2UgaGF2ZSB0byB1cGRhdGUgdGhvc2UgcHJvYmFiaWxpdGllcyB0byBzYXkgdGhlcmUgY291bGQgYmUgbGlmZSBpbiBvdGhlciBwbGFjZXMuCklmIHlvdSBiZWVuIGEgcmVsaWFibGUgYW5kIHZhbHVlZCBlbXBsb3llZSBvZiB0ZW4geWVhcnMsIHdoeSB3b3VsZG4gdGhleSB3b3JrIHdpdGggeW91PyBTZWVtcyB0byBtZSB0aGVyZSBpcyBzb21ldGhpbmcgZWxzZSBnb2luZyBvbiBoZXJlIChhbnl0aGluZyBnb2VzIGluIHNvbWUgdG94aWMgd29yayBlbnZpcm9ubWVudHMsIGhvcGUgdGhhdCBub3QgdGhlIGNhc2UpLiBZb3UgbmVlZCB0byBsb29rIG92ZXIgeW91ciBjb21wYW55IEhSIHBvbGljaWVzLCBqdXN0IHRvIGVuc3VyZSBldmVyeXRoaW5nIGlzIG9uIHRoZSB1cCBhbmQgdXAuLiAKRG9lcyAyIHBhaXIgYmVhdCBhIGZsdXNoCk5vIG1hdHRlciBob3cgeW91IG1pZ2h0IGZlZWwgYWJvdXQgdGhlbSB0aGV5IGhhdmUgdGhlaXIgb3duIGluY3JlZGlibHkgaW50ZW5zZSBmZWVsaW5ncywgYnV0IGluc3RlYWQgb2YgZGlzdG9ydGluZyB0byAiYmVjb21lIiB0aG9zZSBmZWVsaW5ncywgdGhlaXIgcHJvZm91bmQgc2Vuc2Ugb2YgaWRlbnRpdHkgYXMgYSBUeXJhbmlkIG9ubHkgcmVpbmZvcmNlcyB0aGVpciBleGlzdGVuY2UgYXMgdGhlbXNlbHZlcy4uIApTcGEgcmVjZXB0aW9uaXN0cyAidXAgc2VsbCIgcHJvZHVjdHMuIApXaGVuIHlvdSBhcmUgbG9va2luZyBhdCBUZXhhcyBIb2xkIEVtIHBva2VyIGZlbHQsIHRoZSBmaXJzdCB0aGluZyB0aGF0IHlvdSB3aWxsIHNlZSBpcyB0aGUgY29sb3IuIApUaGUgInJld2FyZCIsIHRob3VnaCwgZm9yIHJhaXNpbmcgYWxsIHRoYXQgbW9uZXkgaXMgdGhhdCBpdCBnb2VzIHRvIGEgY2hhcml0eSB0aGF0J2xsIGRvIHJlYWwgZ29vZCBpbiB0aGUgbGl2ZXMgb2YgY2hpbGRyZW4gd2l0aCBjYW5jZXIuClNvIHRoZSBwYXJlbnRzLyB0aGUgRmVkcyBoYXZlIGZpbmFsbHkgY29tZSBvdXQgb2YgdGhlIGhvdXNlIHRvIHNlZSB3aGF0IHRoZSBoZWxsIGlzIGdvaW5nIG9uLiBjYWxsIGZvciBjcmltaW5hbCBjaGFyZ2VzIGNvbWVzIGRheSBhZnRlciBsYXdtYWtlcnMgc2VudCBhIGxldHRlciB0byB0aGUgRGVwYXJ0bWVudCBvZiBKdXN0aWNlIGNhbGxpbmcgZm9yIGEgY3JpbWluYWwgaW52ZXN0aWdhdGlvbi4KSGUgd29uIHRoZSBnYW1lJ3MgYmlnZ2VzdCBwcml6ZSwgdGhlIFdvcmxkIFNlcmllcyBNYWluIEV2ZW50LCBpbiAxOTg5IGFuZCBpcyBhbW9uZyB0aGUgdG9wIGxpZmV0aW1lIG1vbmV5IHdpbm5lcnMsIHdpdGggbW9yZSB0aGFuICQ2IG1pbGxpb24gaW4gV29ybGQgU2VyaWVzIGV2ZW50IHByaXplcy4gQnV0IGxhc3QgeWVhciBpdCBhbGwgYmVnYW4gdG8gZmFsbCBhcGFydC4gClRoZXkgYWRkIHRyaWxsaW9ucyB0byBvdXIgbmF0aW9uYWwgZGVidCBhbmQgZGVzdHJveSBvdXIgZG9tZXN0aWMgYWdlbmRhLiAKUGhpbGVhc0Z1Y2tpbmdGb2dnICAxIHBvaW50ICBzdWJtaXR0ZWQgOCBtb250aHMgYWdvCkhhaXJzdHlsaW5nIGlzIGEgaGFyZCBqb2IsIG9ubHkgYnkgY2xpZW50cyB3aG8gdHJ5IHRvIHNob3J0IGNoYW5nZSB5b3UuIFRvIGFueSBoYWlyc3R5bGlzdHMgb3V0IHRoZXJlOiB5b3UgYXJlIGFuIGFydGlzdCBhbmQgYSBjcmFmdHNtZW4uIApJdCBtb3JlIGV5ZWJhbGxzLCBhbmQgbW9yZSBjaGFuY2UgdG8gY29udmVydCBuZXcgZmFucy4gOSBwb2ludHMgIHN1Ym1pdHRlZCAyNSBkYXlzIGFnb1llYWgsIEkgZGVmaW5pdGVseSBhZ3JlZS4gQWxwaGEgSUkgR09MRCB0aGV5IG5vdCBpbiBzb21lIHNlcmlvdXMgc2hpdCBsaWtlIHNvbWUgb2YgdGhlIG90aGVyIGdpcmwgZ3JvdXBzIG91dCB0aGVyZS5Ob3Qgc3VyZSBhYm91dCBCVFMsIGJ1dCBpZiB0aGF0IGlzIHRoZSBjYXNlIHRoZW4gQlAgbWlnaHQgbm90IGdldCBhbnkgd2lucyBlaXRoZXIuIApBbGwgSSBjYW4gZG8gaXMgc3BlY3VsYXRlLCBhcyBJIGFtIG5vdCBvbiB0aGUgaW5zaWRlIHdpdGggdGhlIHNjb3V0cy4gClRoZSB0aG91Z2h0IG9mIHBheWluZyB0aGVtIHRvIHRvdWNoIG15IGhlYWQgbWFkZSBtZSByZWNvaWwgaW4gZGlzZ3VzdC5ZZWFycyBsYXRlciBteSBtb20gd2FzIHVwc2V0IHRoYXQgSSBoYWQgbGV0IG15IGhhaXIgZ3JvdyBvdXQgYW5kIEkgd2FzIGV4cGxhaW5pbmcgbXkgYW54aWV0eSB0byBoZXIuIApXaGVuIHdlIGFsbCBmaW5hbGx5IG5vdGljZWQsIGFsbCB0aGF0IGNhbWUgb3V0IG9mIG15IG1vdXRoIHdhcyAiT2ggbm8sIG5vLCBpdCBva2F5LCBoZSBteSBicm90aGVyISIuIAoxIGhyIGFnbyArIEJ5IE1hcmsgRGF3aWR6aWFrLCBUaGUgUGxhaW4gRGVhbGVyCk15IGhvbHkgZ3JhaWwgd291bGQgYmUgdG8gZ28gZnJvbSBsb3NpbmcgYXQgMk5MIHRvIHdpbm5pbmcgYXQgMjAwTkwgd2l0aGluIGEgeWVhciwgYnV0IEkgYW0gc2V0dGluZyBteSBnb2FscG9zdHMgYXQgMTAwbmwsIGFzIEkga25vdyBob3cgcmlkaWN1bG91c2x5IGFjY2VsZXJhdGVkIHRoYXQgcHJvZ3Jlc3Npb24gd291bGQgYmUuClRoZW4gYSBjb3VwbGUgeWVhcnMgYWdvLCBoZSB3ZW50IHRvIHRha2UgYSBuYXAgb24gdGhlIHNvZmEsIGhpcyBtb20gY2FtZSB0byBjaGVjayBvbiBoaW0sIGFuZCBoZSB3YXMgZ29uZS4gCkl0IHRvb2sgYWJvdXQgdHdvIGhvdXJzIGJldHdlZW4gd2hlbiBMaWJieSBmYXRoZXIgYXJyaXZlZCBhbmQgd2hlbiB0aGV5IGNhbGxlZCB0aGUgcG9saWNlOyBjbGVhcmx5IGVub3VnaCB0aW1lIHRvIGVzdGFibGlzaCB0aGUgZ2lybHMgd2VyZW4gYXQgYW5vdGhlciBmcmllbmQgaG91c2UuIApUaGF0IHN1Z2dlc3RzIHRoZSBzaHV0ZG93biBjb3VsZCBiZSBsZW5ndGh5LnlvdSB3YW50IHRvIG9wZW4gdGhlIGdvdmVybm1lbnQsIHlvdSBtdXN0IGFiYW5kb24gdGhlIHdhbGwsIHNhaWQgTWlub3JpdHkgbGVhZGVyIENodWNrIFNjaHVtZXIgb2YgTmV3IFlvcmsgb24gdGhlIFNlbmF0ZSBmbG9vciBvbiBTYXR1cmRheS4gCldhcyBlaW4gYnJva3JhdGlzY2hlciBBdWZ3YW5kICsgVmVyZ2FiZXZlcnpnZXJ1bmcgZnIgZGllIGRlciBFaW5zcHJ1Y2hnZWJlciBmaW5hbnppZWxsIHZlcmFudHdvcnJ0bGljaCBpc3QuIG9obmUgRW5kZSBpc3QuIGRpZSB2ZXJzaWVnZWx0ZSB1cmthbGt1bGF0aW9uIHp1bSBCZWlzcGllbCwgZGFyZiBudXIgaW4gQW53ZXNlbmhlaXQgZWluZXMgVmVydHJldGVycyBkZXIgRmlybWEgZ2VmZm5ldCB3ZXJkZW4uCkhlYXJpbmcgdGhlc2UgdGVycmlibGUgZXhwZXJpZW5jZXMgZnJvbSBmb3JtZXIgZW1wbG95ZWVzIGlzbiBzdXJwcmlzaW5nIGNvbnNpZGVyaW5nIHRoZSBtYW5uZXIgYnkgd2hpY2ggdGhpcyBiYXIgb3BlbmVkIGFuZCBjbG9zZWQsIGJ1dCBteSBjb25kb2xlbmNlcyB0byB0aGUgcGVvcGxlIHdobyBhcmUgZ2V0dGluZyB0aGVpciBwYXljaGVja3Mgd2l0aGhlbGQuIApDYW4gYnVkZ2V0LiBDb21lIG9uIHRoaXMgaXMgYmlnIGV2ZW4gZm9yIGEgQ0VPIG9mIGEgY29tcGFueS4gTG9vayBhdCB3aGF0IHdlIG93ZS4gVHJpbGxpb25zIG9mIGRvbGxhcnMgYW5kIGl0IGtlZXBzIGdyb3dpbmcgaW4gdGhlIG5lZ2F0aXZlLiBXb3VsZCB5b3UgbGV0IHlvdXIgc2Nob29sIG9yIGJ1c2luZXNzIGRvIHRoaXM/IE5vLiBTbyB3aHkgc2hvdWxkIG91ciBnb3Zlcm5tZW50IGJlIGFsbG93ZWQgdG8uIFNvY2lhbCBTZWN1cml0eSB3YXMgc2V0IHVwIGFzIGEgcGVuc2lvbiBwbGFuIGZvciB0aG9zZSB3aG8gZG9uIGhhdmUgb25lIGFuZCBJLCBmb3Igb25lLCB3b3VsZCBsb3ZlIHRvIHNlZSBpdCBnbyBiYWNrIHRvIHRoYXQgYW5kIG5vdCB1c2UgdG8gZ2l2ZSBzb21lIHBvbGl0aWNpYW4gYSBnb2xmaW5nIHZhY2F0aW9uLiBFdmVuIGNhcmVlciBwb2xpdGljaWFucyBkb24gaGF2ZSB0aGlzLiBXaGF0IEkgbWVhbiBpcywgc29tZW9uZSB3aG8gaGFzIGRvbmUgYnVzaW5lc3MsIG5lZ290aWF0ZWQgd2l0aCwgYW5kIGtub3dzIHRoZSBjdWx0dXJlIG9mIGVhY2ggY291bnRyeS4gV2hlbiB5b3UgdGhpbmsgYWJvdXQgb3VyIHRyYWRlIGFncmVlbWVudHMgYW5kIG91ciBnb29kcy9zZXJ2aWNlcyBiZWluZyBmYWlybHkgZGlzdHJpYnV0ZWQgdGhyb3VnaG91dCB0aGUgd29ybGQsIHdlIG5lZWQgc29tZW9uZSB3aG8ga25vd3MgYW5kIGNhbiBnZXQgdGhpcyBkb25lLgpUaGV5IG1heSBuZWVkIHRvIHVuZGVyc3RhbmQgdGhlc2UgcnVsZXMgYW5kIHRyeSBvdXQgdGhlIHNpdGUgZmlyc3QgYmVmb3JlIG1ha2luZyBhbnkgYWN0dWFsIGJldHRpbmcuIApEdSBjdCBkZXMgImhvbW9zIiBjJ2VzdCBwYXMgbWlldXggISBMZXMgbWRpYXMgc3BjaWFsaXMgdHlwZSAiVHR1IiBvbiB2YWxpZCBkZXMgbW9kbGVzIHF1aSBtZSBmb250IGwnZWZmZXQgZCd1biBtdGFsIGFzc2V6IGdsYWNpYWwgc2FucyBwYXJsZXIgcG91ciAiaG9tb3MiIGV0ICJodHJvcyIgZGUgc29sbGljaXRhdGlvbnMgcGVybWFuZW50ZXMsIG11bHRpcGxlcyBldCBjb250cmFkaWN0b2lyZXMgZmF2b3Jpc2UgcGFyIHVuZSB2b2x1dGlvbiBkZSBsYSBtb2RlIHF1ZSBsJ29uIGF1cmFpdCBxdWFsaWZpIGF1dHJlZm9pcyBkJ2luZGNlbnRlLiBDJ2VzdCBlbiBxdWVscXVlIHNvcnRlIHVuZSBhdmFsYW5jaGUgZGUgInByb21lc3NlcyBub24gdGVudWVzIiBkZSBwYXIgZXQgZCdhdXRyZXMgcXVpIGF1IGJvdXQgZHUgY29tcHRlIHMnYWpvdXRlICB0b3V0ZXMgbGVzIGF1dHJlcyBwb2xsdXRpb25zIGV0IHByb3ZvcXVlbnQgdW5lIHVzdXJlIGR1IGRzaXIuTGEgZmF1c3NlIGxpYnJhdGlvbiBwb3N0IHNvaXhhbnRlIGh1aXRhcmRlIG4nYSBwYXMgYXJyYW5nIGxlcyBjaG9zZXMsIGN0ICJob21vIiBlbGxlIHJlbmQgbGVzIG1lY3MgZGlmZmljaWxlcyBhbG9ycyBxdSdhdXRyZWZvaXMgbGEgbmNlc3NpdCBkJ3RyZSBkaXNjcmV0IGF2YWl0IGwnYXZhbnRhZ2UgZGUgZmF2b3Jpc2VyIGRlcyByZWxhdGlvbnMgZGUgYmllbiBtZWlsbGV1cmUgcXVhbGl0IGV0IGxlIGNsaXZhZ2UgZW50cmUgImhvbW9zIiBldCAiaHRyb3MiIHRhaXQgYmllbiBtb2lucyBwcm9ub25jIHB1aXNxdScgZGZhdXQgZGUgZmlsbGVzIGZhY2lsZXMgKGxhIHBpbHVsZSBuJ2V4aXN0YWl0IHBhcykgdW4gYXNzZXogZm9ydCBwb3VyY2VudGFnZSBkZSBqZXVuZXMgdGFpZW50IGluaXRpcyBwYXIgdW4gYW4gZXQgcG91dmFpdCBibmZpY2llciBwYXIgbGEgbW1lIG9jY2FzaW9uIGQndW4gbWVudG9yIHN1c2NlcHRpYmxlIGRlIGxlcyBwcnBhcmVyICBhZmZyb250ZXIgbGEgZ3JhbmRlIGRpZmZyZW5jZSBkZSBwc3ljaG9sb2dpZSBkJ3VuIHNleGUgIGwnYXV0cmUgYXZlYyB0b3V0IGNlIHF1ZSBhIGNvbXBvcnRlIGNvbW1lIHJpc3F1ZS5UaGllcnJ5IHR1IGRldnJhaXMgdGUgdGFpcmUsIHR1IG5lIHNhaXMgcGFzIGRlIHF1b2kgdHUgcGFybGVzICEgVCdhcyBwYXMgbGUgZ2FiYXJpdCBwb3VyIHBhcmxlciBpbnRlbGxpZ2VtbWVudCBkZSBjaG9zZXMgYXVzc2kgZGxpY2F0ZXMsIHQnYXMgcGFzIGFzc2V6IHZjdSwgYydlc3QgcHVyaWwgdGVzIGV4cGxpY2F0aW9ucyAhIEVuIHJzdW0gbGVzIG1sZXMgb250IHN1cnRvdXQgbm9ybW1lbnQgZGUgcmFpc29ucyBkZSBkb3V0ZXIgZCdldXggZXQgZGUgc2Ugc2VudGlyIHBsdXMgb3UgbW9pbnMgZHZhbG9yaXNzLiAKSGUgc2FpZCwgP0l0IGlzIG5vdCBhIGdhbWUgYmFzZWQgb24gbHVjaywgaXQ/cyBub3QgZ2FtYmxpbmcsIG5vdCBldmVuIGxpa2UgVGVlbiBQYXR0aSwgaXQgaXMgbGlrZSBSdW1teSwgYSBza2lsbCBiYXNlZCBnYW1lLiAKVHdvIGluc3RhbnQgdGlja2V0cyBoYWQgYSBzdHJhaWdodCBmbHVzaCwgd2lubmluZyAkNTAwIGVhY2guLiAKNS4gUHVyY2hhc2UgdGhlIG1hdGVyaWFscyB5b3Ugd2lsbCBuZWVkIHRvIHBlcmZvcm0gb24gc2l0ZSBtYXNzYWdlcy4gTWFueSB0aGVyYXBpc3RzIGFsc28gYnJpbmcgQ0Qgb3IgTVAzIHBsYXllcnMgc28gdGhlIG1hc3NhZ2UgcmVjaXBpZW50IG1heSByZWxheCB3aXRoIGFtYmllbnQgbXVzaWMuCkluIHRoaXMgc2l0dWF0aW9uLCB0aGUgcG9rZXIgbWVyY2hhbnRzIGhhdmUgYmVjb21lIGludGVyZXN0ZWQgaW4gc2VsbGluZyB0aGUgcG9rZXIgcHJvZHVjdHMgdG8gdGhlIHBva2VyIGxvdmVycyBhcm91bmQgdGhlIHdvcmxkLiAKRm9yIGV4YW1wbGUsIGEgbG90IG9mIHNpbXBsaWZpY2F0aW9ucyBmcm9tIFBJTyByZWNvbW1lbmQgZ29pbmcgd2l0aCBhIHJhbmdlIGNoZWNrIG9yIHJhbmdlIGJldCAoMS8zIHBvdCkgc3RyYXRlZ3kgaW4gM0JQIE9PUCBDQmV0LiBBbmQgeW91IGhhdmUgdG8gYWRoZXJlIHRvIHRoaXMgc3RyYXRlZ3kgcGxheWluZyA1MDAgNzUwIGhhbmRzL2hyIG9ubGluZSBiZWNhdXNlIHlvdSBnb2luZyB0byBoYXZlIGRvemVucyBvZiAzQlAgT09QIENCZXQgb3Bwb3J0dW5pdGllcyB3aXRoaW4gYSBjb3Vyc2Ugb2YgYSBtdWx0aXRhYmxpbmcgc2Vzc2lvbiBhbmQgdGhlIGV2ZW4gdGhlIGJhZCByZWdzIGFyZSBkZWZpbml0ZWx5IGdvaW5nIHRvIG5vdGljZSBpZiB5b3UgZGV2aWF0ZSBpbiB5b3VyIGZyZXF1ZW5jaWVzIGFuZCBzaXppbmdzLi4gCkFuZCBvbiB0b3Agb2YgaXQgYWxsIHRoZSBndWl0YXIgaXMgYmVhdXRpZnVsIGFuZCB0aGUgc2hhcGUgaXMgdW5pcXVlLiAKQWxzbyBwYXkgbW9yZSBmb3IgaW5zdXJhbmNlIHB1dHRpbmcgbW9yZSBkaXN0YW5jZS9jb21tdXRlciB0cmFmZmljIGludG8geW91ciBzY2hlZHVsZSwgaWYgeW91IGluIHRvd24geW91IGNvdWxkIHdhbGsvYmlrZS9idXMgZWFzeSwgc2F2ZSBtb25leSBub3QgcGF5aW5nIGZvciBwYXJraW5nIGFuZCBsZXNzIGluc3VyYW5jZS4uIApUaGV5IGFsc28gYmVnaW4gdG8gb3JnYW5pemUgb2JqZWN0cyBhbmQgaW5mb3JtYXRpb24gaW50byBjYXRlZ29yaWVzIG9yLCAiY29uY2VwdHMsIiBtYWtpbmcgdGhlbSBtdWNoIG1vcmUgZWZmaWNpZW50IHRoaW5rZXJzIHdobyBjYW4gYXNzaW1pbGF0ZSBhIHZhcmlldHkgb2YgZXhwZXJpZW5jZXMgaW50byBhIGNvaGVyZW50IGFuZCBtZWFuaW5nZnVsIG1ldGEgc2NoZW1hLi4gClNpcl9XaGlza2VyX0JvdHRvbXMgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkxhcyBWZWdhcyBjYXNpbm8gcG9rZXIgY2hpcHMgYXJlIHRoZSBiZXN0IGNoaXBzIGFyb3VuZCwgYnV0IHRoZXkgYXJlIG5vdCBhbGwgdGhlIHNhbWUuIFJ1bW9yIHNheXMgdGhhdCB0aGVyZSBpcyBhbiBvZmZpY2lhbCB3ZWlnaHQgbGltaXQgb24gY2hpcHMgd2hpY2ggaXMgbm90IHRydWUuIFdoZW4gc2hvcHBpbmcgZm9yIGNoaXBzIG9ubGluZSwgeW91IHdpbGwgc2VlIHRoZW0gb2ZmZXJpbmcgY2hpcHMgdGhhdCB3ZWlnaCBhcyBtdWNoIGFzIDEyIGdyYW1zLCBhdCBoaWdoZXIgcHJpY2VzLCBidXQgdGhlIHNpbXBsZSBmYWN0IGlzIHRoYXQgYSB0aGUgYXZlcmFnZSBncmFtIHdlaWdodCBvZiBhIGNhc2lubyBjaGlwIGlzIGxlc3MgdGhhbiB0ZW4uCkkgZG9udCByZWFsbHkgY2FyZSB3aGVyZSB5b3UgbGl2ZSBhdCBqdXN0IHR1cm4gYXJvdW5kIGJveSBhbmQgbGV0IG1lIGhpdCB0aGF0LgpZb3UgZG8gbm90IGhhdmUgdG8gc3BlbmQgYW55IG1vbmV5IHlvdXJzZWxmLiAKT3ZlcnZpZXcgZm9yIG1ycGF1bG1hbnRvbgpBZGRpdGlvbmFsbHksIGV4ZXJjaXNlcyBjYW4gYmUgdXNlZCBidXQgdGhlIGV4ZXJjaXNlcyBhcmUgc3BlY2lmaWMgdG8gZWFjaCBwYXRpZW50LiBUaGUgZXhlcmNpc2VzIGFyZSBub3QgZG9uZSBiaWxhdGVyYWxseSBhcyBzY29saW9zaXMgaXNuIHRoZSBzYW1lIG9uIGVhY2ggc2lkZSBvZiB0aGUgYm9keS4gQnkgY29tYmluaW5nIHBvc3R1cmFsLCBjb3JlLCBhbmQgcHJvcHJpb2NlcHRpb24gZXhlcmNpc2UsIHRoZXJlIGNhbiBiZSBpbXByb3ZlbWVudC4gCkhlIGFzc3VyZWQgbWUgdGhhdCBvcmdhbml6ZXJzIGhhZCBjYXJlZnVsbHkgbm90ZWQgdGhlIGZlZWRiYWNrIGZyb20gdGhlIDIwMTggc2hvdywgYW5kIGFkZGVkIGZvdXIgbW9yZSBkaXNwbGF5IGdhcmRlbnMsIGJyaW5naW5nIHRoZSBudW1iZXIgdG8gMjMgZHJhbWF0aWMgcHJlc2VudGF0aW9ucy4gSW4gYWRkaXRpb24sIHRoZXJlIHdpbGwgYmUgMTAgc21hbGxlciBzcGFjZSwgY2l0eSBsaXZpbmcgdmlnbmV0dGVzIHRoYXQgd2lsbCBmZWF0dXJlIGdyZWF0IGlkZWFzIGZvciBwYXRpb3MsIGJhbGNvbmllcyBhbmQgY29uZmluZWQgb3V0ZG9vciBhcmVhcy5UaGUgZGlzcGxheSBnYXJkZW5zIGFyZSBhbGwgY3JlYXRlZCBieSB0b3AgZGVzaWduIHByb2Zlc3Npb25hbHMgYW5kIGluc3RhbGxlZCBieSB0aGUgdGFsZW50ZWQgbGFuZHNjYXBlIGFydGlzdHMgd2hvIGFyZSB0aGUgaGVhcnQgYW5kIHNvdWwgb2YgdGhpcyBzaG93LiAKTXkgcGVyc29uYWwgb3BpbmlvbiBpcyB0aGF0IG1hcHMgYXJlIHBvdGVudGlhbGx5IGFuICdlYXN5JyB3YXkgdG8gJ3BvbGljZScuIE1hcCBoYXMgdG8gYmUgZGVsaXZlcmVkIHRvIFJlZ2lzdGVyIFRlY2huaWNhbCBhdCBzdGFydCBvZiB5ZWFyIGFuZCBpZiAvIHdoZW4gY2hhbmdlZCBhdCBhbnkgdGltZSBhbmQgaWYgeW91IGFyZSBsYXRlciBmb3VuZCBmb3VuZCB1c2luZyBhIGRpZmZlcmVudCBtYXAgdG8gdGhhdCByZWdpc3RlcmVkIChvciBtYXkgYmUgdG8gdGhvc2UgcmVnaXN0ZXJlZCkgdGhlbiBpdCdzIGJ5ZSBieWUuIFRoZXJlIGlzIG5vdCByZWFsbHkgYSByZWFzb24gd2h5IEVDVXMgZXZlbiBpbiBQcm90byBjb3VsZCBub3QgYmUgY29sbGVjdGVkIGFuZCByZXRhaW5lZCBvbmNlIG1hcCBhcHByb3ZlZC4gaWYgeW91IHdhbnQgdG8gZG8gc29tZXRoaW5nIGVsc2Ugd2l0aCB5b3VyIGNhciBzb21ld2hlcmUgZWxzZSB5b3UgaGF2ZSB0byBnZXQgYW5vIEVDVSBidXQgeW91IGNhbiBvbmx5IHVzZSB0aGUgQ2hhbXBpb25zaGlwIG9uZSB0aGF0IGlzIGhhbmRlZCBiYWNrIHRvIHlvdSBhdCBlYWNoIGV2ZW50LgpUaGUgY2F0ZWdvcmllcyBhcmUgdXN1YWxseSAiZmVsb255LCIgIm1pc2RlbWVhbm9yLCIgYW5kICJpbmZyYWN0aW9uLiIgRGVjaXNpb25zIG9uIGNyaW1lIGNsYXNzaWZpY2F0aW9uIGFyZSBtYWRlIGJ5IHN0YXRlIGxlZ2lzbGF0b3JzOyB0aGUgZGV0ZXJtaW5hdGlvbiBmb2N1c2VzIG9uIHRoZSBzZXJpb3VzbmVzcyBvZiB0aGUgY3JpbWUuIApCcmlkZ2Ugd2l0aCB0aGUgYmFsbCB1bmRlciB5b3VyIGhlYWQgYW5kIHNob3VsZGVyczogV2l0aCB0aGlzIHZhcmlhdGlvbiwgdGhlIGxlZ3Mgd2lsbCB3b3JrIHRvIGtlZXAgeW91IGZyb20gbW92aW5nIGJhY2sgYW5kIGZvcnRoIHdoaWxlIHlvdXIgZ2x1dGVzIChidXR0IG11c2NsZXMpIGNvbnRyYWN0IHRvIHJhaXNlIHlvdXIgaGlwcy4KSXQgYnJpY2tlZCBhbmQgSSBub3QgZ29pbmcgdG8gcmlzayBpdCBmdWNraW5nIHVwIG15IFBTNC5FRElUL1VQREFURTogWXVwLCB3b3JrZWQgZWFzaWx5LiBJIGp1c3Qgd2VudCB0byB0aGVpciBzdXBwb3J0IGNoYXQgKGhhZCB0byB3YWl0IGFib3V0IDEwIDE1IG1pbnMgaW4gdGhlICJxdWV1ZSIpIGFuZCBzYWlkIHRoaXM6SSBtYWRlIGEgZGlnaXRhbCBwdXJjaGFzZSBvbiAwMi8yMy8yMDE5IG9mICJBbnRoZW0gU3RhbmRhcmQgRWRpdGlvbiIgKHRyYW5zYWN0aW9uIElEOiBYWFhYWFhYWFhYWCkgZm9yIGEgdG90YWwgb2YgJDY0LjE5LiBJIGxpa2UgcmV0dXJuIGl0IGFuZCBnZXQgYSByZWZ1bmQgZm9yIHRoZSBnYW1lLCBwbGVhc2UuIApTaGUgcmVtZW1iZXJzIHdoZW4gc2hlIGxvc3QgaXQuIFNoZSB3YXMgYXNsZWVwIGFuZCB3b2tlIHVwLiBTaGUgdGhvdWdodCB0aGVyZSB3YXMgYSBmaXJlIG91dHNpZGUgYW5kIHNtZWxsZWQgbm90aGluZyBidXQgc21va2UuIFNoZSBqdW1wZWQgdXAgYW5kIGxvb2tlZCBhcm91bmQgYW5kIG91dHNpZGUgdGhlIGhvdXNlIGJ1dCBuZXZlciBmb3VuZCBhbnl0aGluZy4gQWZ0ZXIgdGhhdCBzaGUgcmVtZW1iZXJzIG5vdCBiZWluZyBhYmxlIHRvIHNtZWxsLgpJIGJlbGlldmUgd2hhdCBoYXBwZW5lZCBpcyB0aGF0IHRoZXkgZGlkIG5vdCBjbGFzc2lmeSBpdCBhcyBhbiBpbnZlc3RtZW50IHByb3BlcnR5IHNvbWV3aGVyZSBpbiB0aGUgcHJvY2Vzcy4gVGhleSB3ZXJlIGFib3V0IDEyIGhvdXJzIGxhdGUgdG8gY2xvc2luZyBhbmQgSSdtIGZyb20gb3V0IG9mIHN0YXRlIHNvIEkgaGFkIHRvIG1ha2UgYXJyYW5nZW1lbnRzIHRvIHN0YXkgYW5vdGhlciBkYXkgYWxzby4gVGhleSB3ZXJlIHJ1c2hpbmcgYXQgdGhlIGxhc3QgbWludXRlLiAKQnV0IG1vcmUgaW1wb3J0YW50bHkgaXQga2lsbHMgdGhlIHVuZnJpZW5kbHkgb3JhbCBiYWN0ZXJpYSBleGFjZXJiYXRpbmcgZ3VtIGRpc2Vhc2UuIEkgcHJlc2NyaWJlIGNobG9yaGV4aWRpbmUgZm9yIHBhdGllbnRzIHdobyBoYXZlIGFjdXRlIGluZmxhbW1hdGlvbiBhbmQgZ2VuZXJhbGx5IGZvciBwYXRpZW50cyB3aG8gaGF2ZSBob3JyaWJsZSBvcmFsIGh5Z2llbmUuIE1vc3QgcGF0aWVudHMgdXNlIGl0IGZvciBzZXZlcmFsIHdlZWtzIHRvIGEgbW9udGggYW5kIGl0IHJlYWxseSBkb2VzIHdoaXAgdGhlIGd1bXMgaW50byBzaGFwZSwgYnV0IEkgd29uZGVyIGlmIHRoZSBvcmFsIG1pY3JvYmlvbWUgbm9ybWFsaXplcyBhZnRlciBzZXZlcmFsIHdlZWtzPyBJIHByZXNjcmliZSBpdCBsb25nIHRlcm0gZm9yIGVsZGVybHkgcGF0aWVudHMgd2hvIGNhbid0IGJydXNoIG9yIGZsb3NzIGJlY2F1c2Ugb2YgY3JpcHBsaW5nIGFydGhyaXRpcyBvciBiZWNhdXNlIG9mIG1lbnRhbCBkZWNsaW5lIGFuZCBhcGF0aHkuIElmIHRoZXkgZG9uJ3QgdXNlIHRoZSByaW5zZSBhbmQgYmVjYXVzZSB0aGVpciBvcmFsIGh5Z2llbmUgaXMgc28gYmFkLCB0aGVpciB0ZWV0aCByYXBpZGx5IGRlY2F5IGF3YXkgaW4gYWRkaXRpb24gdG8gdGhlIGd1bSBkaXNlYXNlLiBXaGVuIHRoZXkgbG9zZSB0aGVpciB0ZWV0aCBhbmQgaGF2ZSB0byBnZXQgYSBkZW50dXJlIGl0IGlzbid0IGVhc3kgdG8gYWRqdXN0IHRvIGFuZCBtYW55IHBhdGllbnRzIGZpbmQgdGhhdCB0aGV5IGNhbid0IGVhdCB3ZWxsIGFueW1vcmUgd2hpY2ggbGVhZHMgdG8gbWFsbnV0cml0aW9uIHdoaWNoIGFkZHMgdG8gdGhlaXIgYWxyZWFkeSBkZWNsaW5pbmcgaGVhbHRoLiBTbyBmcm9tIHRoaXMgc3R1ZHksIEkgZG9uJ3Qga25vdyBpZiB0aGlzIGlzIHBvd2VyZnVsIGVub3VnaCBldmlkZW5jZSB0byBzdWdnZXN0IHRoYXQgaXQgbm90IGJlIHVzZWQgYXQgYWxsIHdlaWdoZWQgYWdhaW5zdCBpdCdzIGJlbmVmaWNpYWwgZWZmZWN0cy4KQWxzbyB0aGUgZ2F0IGJyb3ducyBhcmUgcHJldHR5IG5pY2UsIEkgYWN0dWFsbHkgcXVpdGUgbGlrZSB0aGVtLiAKSSBhYnNvbHV0ZWx5IGRlc3Bpc2UgSGFydmV5IE5vcm1hbiwgVGhlaXIgc3RhZmYgYXJlIGVpdGhlciBvdmVyIHRoZSB0b3AgcHVzaHkgb3IgaWdub3JlIHlvdSB1bnRpbCB5b3UgZ2l2ZSB1cCBhbmQgbGVhdmUuIEFuZCB0aGF0IGRlcGVuZHMgb24gaG93IHlvdSBhcHBlYXIsIGlmIHlvdSBnbyBpbnRvIG9uZSBvZiB0aGVpciBzdG9yZXMgd2VhcmluZyB0cmFjayBwYW50cyBleHBlY3QgdG8gYmUgd2F0Y2hlZCBsaWtlIGEgaGF3ayBhbmQgYWdncmVzc2l2ZWx5IGFza2VkIHdoYXQgeW91IGFyZSBsb29raW5nIGZvciBvciBqdXN0IGNvbXBsZXRlbHkgaWdub3JlZCBhbHRvZ2V0aGVyLCBvbiB0aGUgb3RoZXIgaGFuZCBpZiB5b3Ugd2VhciBhIHN1aXQgdGhleSB3b250IGxlYXZlIHlvdSBhbG9uZSwgdGhleSBwcmFjdGljYWxseSBmYWxsIG92ZXIgZWFjaCBvdGhlciB0byBzZXJ2ZSB5b3UuIApTaGUgd2FzIGEgdGVhY2hlciwgc28gc2hlIGxpa2VzIGtpZHMgYW5kIGhhcyB0byBoYXZlIHNvbWUgcGF0aWVuY2UuIChUaGVuIGFnYWluLCBJIGNhbiByZWNhbGwgYSBmZXcgb2YgbXkgZm9ybWVyIHRlYWNoZXJzIHRoYXQgZGlkbid0IHNlZW0gdG8gbGlrZSBraWRzIHZlcnkgbXVjaC4pQW5kIHNoZSdzIGEgYm90YW5pc3QsIHdoaWNoIHNvcnQgb2YgaW1wbGllcyB0aGlzIHBlYWNlZnVsIGxvdmUgb2YgbmF0dXJlIGFuZCBtZWRpdGF0aW9uLkJ1dCBhbGwgd2UgZXZlciBzaGUgaGVyIGRvIGlzIGZpZ2h0IHdpdGggTWlsZXMhISBBbmQgaGUncyBub3QgdXN1YWxseSB0aGUgYWdncmVzc29yLCBidXQgaGUncyBub3QgZXhhY3RseSBpbm5vY2VudCBlaXRoZXIuIEhlIGdldHMgZnJ1c3RyYXRlZCBxdWlja2x5IGFuZCBqZWFsb3VzIG9mIGhlciBtYWxlIGNvbGxlYWd1ZS4uIApCZWNhdXNlIHRoZSBhbW91bnQgb2YgbW9uZXkgaXMgcmlkaWN1bG91cy4gVGhlIHF1ZXN0aW9uIGlzIGlmIGl0IGlzIGZlYXNpYmxlLiBUaGUgYW5zd2VyIGlzIG5vLiBjb3VsZCBkbyBzb21lIG9mIHRoZSB0aGluZ3MgaW4gdGhlIEdORC4gQ2xpbWF0ZSBDaGFuZ2UgcGFuZWwuIHdlbnQgdG8gemVybyBlbWlzc2lvbnMgdGhhdCB0aGUgRWFydGggdGVtcGVyYXR1cmUgd291bGQgcmlzZSAxLjg2IGRlZ3JlZXMgaW5zdGVhZCBvZiAyIGJ5IDIxMDAuCklmIGhlIHF1aXRzIHdoZW4geW91IGFyZSBhcm91bmQsIHRoZSBwcmVzc3VyZSBhbmQgdGVtcHRhdGlvbiBpcyBldmVuIHdvcnNlIHdoZW4geW91IGFyZW50IHRoZXJlLiAKTW9yZ2FuIEJyYXNoZWFyLCBhIGhvbWUgY2FyZSBzY2llbnRpc3Qgd2l0aCBQcm9jdGVyIEdhbWJsZSwgbm90ZXMgaW4gYW4gZW1haWwgdGhhdCBwZW9wbGUgY29uc3RhbnRseSBkZWFsIHdpdGggYm90aCBpbnRlcm5hbCBhbmQgZXh0ZXJuYWwgcHJlc3N1cmVzIHJlbGF0ZWQgdG8gY2xlYW5saW5lc3MuIApNQ1QgRmF0cyBGb3VuZCBJbiBDb2NvbnV0IE9pbCBCb29zdCBCcmFpbiBGdW5jdGlvbiBJbiBPbmx5IE9uZSBEb3NlCkZvciB2ZWdldGFibGVzLCBicm9jY29saSBpcyBib3RoIGZpbGxpbmcgYW5kIGhhcyBhIGRlY2VudCBhbW91bnQgb2YgcHJvdGVpbi4gVGhlcmUgYSByZWFzb24gd2h5IGNoaWNrZW4gYnJlYXN0LCBicm9jY29saSBhbmQgcmljZSBpcyBzdWNoIGEgY2xpY2ggYm9keWJ1aWxkZXIgZm9vZC4gCkhlJ3MgYSBnb29kIGZvb3RiYWxsIHBsYXllciwgYnV0IGhlIG5lZWRzIHRvIGdldCBoaXMgc2hpdCB0b2dldGhlci4gVGhlIEFBRiBpcyBoaXMgbGFzdCBob3BlLiBIZSBzaG91bGQgY2xlYW4gdXAgYmVmb3JlIHRha2luZyBhIHNob3QgYXQgaXQuCkFmdGVyIGFsbCB0aGUgb3RoZXIgdGhpbmdzIEkgcGFpZCBmb3IsIEkgc3BlbnQgYW55d2hlcmUgZnJvbSAxMSwwMDAgICAxNSwwMDAgb24gdGhpcyBtb2JpbGUgZ2FtZS4gSSBoYXZlIDQwayBpbiBzdHVkZW50IGxvYW5zIGFuZCBzbyBtYW55IGV4cGVuc2VzIGluIHRoZSBuZWFyIGZ1dHVyZUN1cnJ5TXVzdGFyZCAgMSBwb2ludCAgc3VibWl0dGVkIDIwIGhvdXJzIGFnby4gCklzcmFlbGlzIGNhbiBpbmNyZWFzZSB0aGVpciBtZWRpY2FsIGNvdmVyYWdlIGFuZCBpbXByb3ZlIHRoZWlyIG9wdGlvbnMgYnkgcHVyY2hhc2luZyBwcml2YXRlIGhlYWx0aCBpbnN1cmFuY2UuRWR1Y2F0aW9uIGluIElzcmFlbCByZWZlcnMgdG8gdGhlIGNvbXByZWhlbnNpdmUgZWR1Y2F0aW9uIHN5c3RlbSBvZiBJc3JhZWwuIFRoZSBlZHVjYXRpb24gc3lzdGVtIGNvbnNpc3RzIG9mIHRocmVlIHRpZXJzOiBwcmltYXJ5IGVkdWNhdGlvbiAoZ3JhZGVzIDEgNiwgYXBwcm94aW1hdGVseSBhZ2VzIDYgMTIpLCBtaWRkbGUgc2Nob29sIChncmFkZXMgNyA5LCBhcHByb3hpbWF0ZWx5IGFnZXMgMTIgMTUpIGFuZCBoaWdoIHNjaG9vbCAoZ3JhZGVzIDEwIDEyLCBhcHByb3hpbWF0ZWx5IGFnZXMgMTQgMTkpLiBDb21wdWxzb3J5IGVkdWNhdGlvbiB0YWtlcyBwbGFjZSBmcm9tIGtpbmRlcmdhcnRlbiB0aHJvdWdoIDEydGggZ3JhZGUuIApBcyBhIHNlY3VyaXR5IG9mZmljZXIgcnVucyBhZnRlciBoaW0sIGhlIHdoaXBzIGEgcmlmbGUgb3V0IG9mIGhpcyBiYWNrcGFjaywgc2VuZGluZyBwYW5pY2tlZCB0aHJvbmdzIGZsZWVpbmcuIFRoaXMgd2FzIHRoZSBtb21lbnQgcGVvcGxlIGJlZ2FuIHNjcmVhbWluZywgIklTSVMhIElTSVMhIiBHb21leiBzYWlkLgpHb29kIHdvcmsgZm9yIHN0YXJ0aW5nIG91dCBhbmQgZ29vZCB3b3JrIGZvciBhc2tpbmcgZm9yIGFkdmljZSByYXRoZXIgdGhhbiBqdXN0IHdyaXRpbmcgb2ZmIHJ1bm5pbmcgYXMgYmVpbmcgZm9yIHlvdXIga25lZXMgbm93IHlvdSBzaG91bGQgcHJvYmFibHkgcmVzdCBmb3IgYW5vdGhlciBkYXkgb3IgdHdvLiBJZiB5b3UgaGF2ZW4gYWxyZWFkeSwgSSB3b3VsZCBzdHJvbmdseSByZWNvbW1lbmQgZm9sbG93aW5nIGEgY291Y2ggdG8gNWsgcHJvZ3JhbS4KSXQgd2FzIGEgcHJldHR5IGNyb3dkZWQgc2l0dWF0aW9uIHdoZXJlIHRoZXJlIHdlcmUgcGxhY2VzIHdoZXJlIHRoZXJlIHdlcmUgdXAgdG8gMyBwZW9wbGUgaW4gdGhlIGFpc2xlICh0d28gZmFjaW5nIGF3YXkgdG93YXJkcyB0aGUgc2VhdHMsIGFuZCBvbmUgaW4gYmV0d2VlbikuIFRoZSBjcmF6eSBzdGF0aWMgd29tYW4gd2FzIHN0YW5kaW5nIGZhY2luZyB0aGUgc2VhdHMgd2l0aCBhIG1hbiBiZWhpbmQgaGVyLiAKQSBTdXN0YWluaW5nIE1lbWJlcnNoaXAgaXMgYW4gdW5yZXN0cmljdGVkIGFubnVhbCBnaWZ0IHRoYXQgeW91IGNhbiBwYXkgaW4gYSBjb252ZW5pZW50LCBvbmdvaW5nIHdheS4gRWFjaCBtb250aCwgd2Ugd2lsbCBjaGFyZ2UgeW91ciBjcmVkaXQgb3IgZGViaXQgY2FyZCBvciB3aXRoZHJhd2FsIGZyb20geW91ciBjaGVja2luZyBhY2NvdW50IHRoZSBhbW91bnQgeW91IHNwZWNpZnkuIApNeSBodXNiYW5kIHdhcyBxdWl0ZSBpbnNpc3RlbnQgb25lIGRheSB0aGF0IEkgZ2V0IHRoaXMgam9iLiAKU2VlbXMgcHJldHR5IGxpZ2h0IHRvIG1lLCBhbmQgdG8gYSBsb3Qgb2YgcGVvcGxlLCBMZXZpbiBzYWlkLiBUaGF0IGlzIHNxdWFyZWx5IGluIHRoZSBwdXJ2aWV3IG9mIHRoZSBqdWRnZSB0byBkby4gCk5vdCByZWFsbHkgMTAwJSBvbiBoaW0gSSB0aGluay4KQ2hhcmxlcyBGcnkgd2FzIGFsc28gYSBmaW5lIGJveGVyLCBhIHBhc3NhYmxlIGdvbGZlciwgc3dpbW1lciwgc2N1bGxlciwgdGVubmlzIHBsYXllciBhbmQgamF2ZWxpbiB0aHJvd2VyLiAKVGhlIGtleSBoZXJlIGlzIHRoYXQgeW91IGFyZSBjaG9vc2luZyB0byBiZXQgd2hlbiB5b3VyIG9wcG9uZW50IGlzIG1vc3QgbGlrZWx5IHRvIGNoZWNrIGJhY2suLiAKSG93IHRvIENob29zZSBhIENhc2lubyBQb2tlciBDaGlwcyBTZXQKTW9zdGx5LCBoaXMgZ2F6ZSB3YXMgdHJhaW5lZCBzdHJhaWdodCBhaGVhZC4gQSBmZXcgdGltZXMgZHVyaW5nIGxvbmdlciB3YWl0cyBvbiB0aGUgdGVlIGJsb2NrIHdoZXJlIGhlIGhhZCB0aGUgaG9ub3VycyBhbG1vc3QgYWxsIGRheSBoZSB0ZWVkIHVwLCB0b29rIGEgZmV3IHN0ZXBzIGJhY2sgYW5kIHdvdWxkIGp1c3Qgc3RhcmUgYXQgaGlzIGJhbGwuLiAKOC4gT3h5Z2VuIHRoZW9yeSBvZiBjb21idXN0aW9uOiBBbnRvaW5lIExhdm9pc2llciwgMTc3MHMKT3VyIHRlYW0gaGFzIHN1Y2Nlc3NmdWxseSBpbXBsZW1lbnRlZCBhIE1lbnRhbCBQb2tlciBQcm90b2NvbCB0aGF0IHVzZXMgY3VzdG9tIEV0aGVyZXVtIHNtYXJ0IGNvbnRyYWN0cyBmb3IgZWFjaCB0YWJsZSBpbnN0YW5jZS4gCkEgRnJlbmNoIGNoZW1pc3QsIFJlbmUgTWF1cmljZSBHYXR0ZWZvc3NlLCBjb2luZWQgdGhlIHRlcm0gYXJvbWF0aGVyYXBpZSBpbiAxOTI4LiAKQW4gZW1wbG95ZWUgd2Fsa2VkIGJ5IGFuZCBvbmUgb2YgdGhlIGN1c3RvbWVycyBzYWlkICJTaXIsIGNhbiB5b3UgZ2V0IHNvbWVvbmUgdG8gZG8gc29tZXRoaW5nIGFib3V0IHRoaXM/IFRoZXJlIGFyZSBubyBsaW5lcyBvcGVuLiIgVGhhdCBlbXBsb3llZSBzaG90IGJhY2sgIm5vdCBteSBkZXBhcnRtZW50IGxhZHksIEkgd29yayBpbiB0aGUgRGVsaSIgYW5kIGtlcHQgb24gd2Fsa2luZy4gV2hlbiBhIGNvdXBsZSBvdGhlciBwZW9wbGUgZGlkIHRoZSBzYW1lIHRoaW5nIHRoYXQgZ3V5IGdvdCBwaXNzZWQgb2ZmIHRoYXQgcGVvcGxlIHdlcmUgYm90aGVyaW5nIGhpbS4uIApMYXRlciBpbiB0aGlzIGFydGljbGUsIEkgd2lsbCBnaXZlIHlvdSBhbiBleGFtcGxlIG9mIHRoaXMgY29tYmluZWQgd2l0aCBzb21lIG9mIHRoZSBvdGhlciBzaWducy4zKSBPUFBPUlRVTklUSVNUICBJTlRFTlRJQUxMWSBLRUVQUyBESVNDVVNTSU9OUyBPUEVOIFRPIEJFIEFCTEUgVE8gVVNFIFVOU09MVkVEIERJU0NVU1NJT05TIFRPIFRIRUlSIEFEVkFOVEFHRUEgY2xldmVyIGNoYXJhY3RlciBkaXNvcmRlcmVkIHBlcnNvbiBoYXMgbGVhcm5lZCB0aGUgYXJ0IG9mIG5ldmVyIG1pc3NpbmcgYW4gb3Bwb3J0dW5pdHkgYnkgYmVpbmcgdmFndWUgYW5kL29yIG5ldmVyIGNvbXBsZXRpbmcgYSBkaXNjdXNzaW9uLCB0aGF0IHdheSB0aGV5IGhhdmUgb3B0aW9ucyBhcyB0byBob3cgdG8gYmFjayBvdXQgb3IgaW5mbHVlbmNlIHRoZSBzaXR1YXRpb24uIApJdCdzIHNvcnQgb2YgdGhlaXIgd2F5IG9mIGxpZmUuIi4gCkpvaW4gdXMuIERyaW5rIHRoZSBibHVlIGtvb2xhaWQuIFlvdSBrbm93IHlvdSB3YW50IHRvLiA7KQpUaGUgcHJvYmFiaWxpdHkgb2YgZHJhd2luZyBhIHNwYWRlIG9yIGFuIGFjZSBmcm9tIGEgNTIgY2FyZCBkZWNrIG9mIHN0YW5kYXJkIHBsYXlpbmcgY2FyZHMgaXMgMTYgLyA1MiBvciBhcHByb3hpbWF0ZWx5IDMwLjglLiBUaGVyZSBhcmUgMTMgc3BhZGVzIGluIGEgc3RhbmRhcmQgZGVjayBvZiBjYXJkcy4gVGhlcmUgYXJlIGZvdXIgYWNlcyBpbiBhIHN0YW5kYXJkIGRlY2sgb2YgY2FyZHMuIApJIGZ1Y2tpbmcgYmF3bGVkLiBJIHdhcyBqdXN0IHNvIGhhcHB5IHRoYXQgaGUgd2FudGVkIHRvIHBsYXkgKGV2ZW4gaWYgaXQgd2FzIG9ubHkgZm9yIHR3byBzZWNvbmRzIGJlY2F1c2UgaGUgd2FzIHRpcmVkIGZyb20gdGhlIHdhbGspIHRoYXQgSSBjcmllZCBhbmQgdGV4dGVkIG15IG93biBwYXJlbnRzLCAiQkxVRSBUUklFRCBUTyBQTEFZISBIZSBicm91Z2h0IG1lIGEgdG95ISIKSSBwbGFubmVkIGJ1dCBmb3Jnb3QgdG8gYWRkIHRoaXMgaW4gbXkgb3JpZ2luYWwgcG9zdCBiZWNhdXNlIEkgd2FzIG9uIG15IG1vYmlsZSBhbmQgaGFkIGltcG9ydGFudCBzdHVmZiB0byBkby4gCk9yZ2FuaXNhdGlvbnMgZGVzIE5hdGlvbnMgVW5pZXMKSGUgc2FpZCBzaWduaWZpY2FudGx5IG1vcmUgaW4gdGhlIHR2IGFkYXB0YXRpb24gdGhhbiBpbiB0aGUgbm92ZWwuIApDcm9ja2ZvcmQgd2FzbiBlaXRoZXIuIApSZXZpZXdzIGhhdmUgb3ZlciB0aGUgeWVhcnMgcGxheWVkIGEgc2lnbmlmaWNhbnQgcm9sZSBpbiB0aGUgZGVjaXNpb24gbWFraW5nIHByb2Nlc3Mgb2YgaW5kaXZpZHVhbHMgYW5kIGNvcnBvcmF0aW9ucy4gV2hlbiBpdCBjb21lcyB0byBwb2tlciwgdGhleSBzZXJ2ZSBhIHNpbWlsYXIgcHVycG9zZS4gUGxheWVycyBkb24ndCBoYXZlIHRvIGJsaW5kbHkgcmVnaXN0ZXIgb24gYSBzaXRlIHRoYXQgdGhleSBhcmUgbm90IGF3YXJlIGFib3V0LiAKUGxheSBvbiB0aGUgUml2ZXIKSSBkb24gc3VwcG9ydCBlbmZvcmNpbmcgdHdpc3RlZCBpZGVhbHMgb2YgaG93IGEgc29jaWV0eSBpcyBzdXBwb3NlZCB0byBsb29rIGxpa2UuIExldCBwZW9wbGUgbWFrZSB0aGVpciBvd24gY2hvaWNlcy4gRmV3IHBlb3BsZSBhcmUgZHVtYiBlbm91Z2ggdG8gdGhpbmsgIml0IHNheXMgQXJ6dCBhbmQgdGhhdCBtZWFucyBhIG1hbiwgc28gSSBub3QgZ29pbmcgdG8gc3R1ZHkgdGhhdC4iIEF0IHRoZSBlbmQgb2YgdGhlIGRheSwgbW9zdCB5b3VuZyBhZHVsdHMgaW5kZWVkIGRvIGEgbG90IG9mIHJlc2VhcmNoIGJlZm9yZSBkZWNpZGluZyB3aGF0IGtpbmQgb2YgY2FyZWVyIHRvIHZlbnR1cmUgaW50byBhbmQgbGFuZ3VhZ2UgcGxheXMgYSBob21lb3BhdGhpYyBwYXJ0IGluIHRoYXQuLiAKV2h5IGFyZSB0aGUgZW1wbG95ZWVzIHRoZXJlPyBXaGF0IGtlZXBzIHRoZW0gd2l0aCB5b3VyIG9yZ2FuaXphdGlvbiBhbmQgc3RvcHMgdGhlbSBmcm9tIGdvaW5nIHNvbWV3aGVyZSBlbHNlPyBXaGF0IG1ha2VzIHRoZSBnb29kIGRheXMgZ29vZD8gV2hhdCBtYWtlcyB0aGVtIHN0aWNrIHdpdGggdGhlIG9yZ2FuaXphdGlvbiBhZnRlciBhIGJhZCBkYXkgb3IgYSBiYWQgd2Vlaz8gRG9uJ3QgYXNzdW1lIGl0J3MgbW9uZXkgICBtb3N0IHBlb3BsZSBhcmUgbW9yZSBjb21wbGV4IHRoYW4gdGhhdC4uIApBbmQgaWYgcHJpdmFjeSBpcyBhIGNvbmNlcm4sIHlvdSBjYW4gc3RpbGwgb2JzY3VyZSB5b3VyIGNhbWVyYSBhbmQgaW4gYm90aCBBUiBhbmQgQVIrIHRoZSBwb2tlbW9uIHRoYXQgeW91IGFyZSB0YWtpbmcgYSBwaWN0dXJlIG9mIGlzIHN0aWxsIHZpc2libGUuIApQb2xpY2UgQ2hhc2UgTGVhZHMgVG8gTmFzdHkgV3JlY2ssIEtpbGxpbmcgT25lIE9mIFR3byBQZW9wbGUgSW5zaWRlIFN0b2xlbiBDYXJBIHdpbGQgY2hhaW4gb2YgZXZlbnRzIGxlZCB0byBhIGRlYWRseSBjYXIgY3Jhc2ggYXMgb2ZmaWNlcnMgY2hhc2VkIHR3byBwZW9wbGUgaW5zaWRlIGEgc3RvbGVuIGNhci4KQnV0IG5vdCBhbGwgZGVzaWducyBoYXZlIHRvIGJlIHNpbXBsZS4gVGhlIGZpcnN0IGFpcnBsYW5lIHdhcyB3ZWxsIGRlc2lnbmVkLCBidXQgSSBkb24gdGhpbmsgaXQgd291bGQgaGF2ZSBiZWVuIG9idmlvdXMgdG8gZXZlcnlvbmUgdGhhdCB5b3Ugd2VyZSBzdXBwb3NlZCB0byB0aHJvdyBpdCBvZmYgYSBjbGlmZiB3aGlsZSB5b3Ugd2VyZSBpbnNpZGUgb2YgaXQuVGhlIG9ubHkgcG9vciBkZXNpZ24gSSBjYW4gc2VlIGluIHRoaXMgZG9vcndheSBpcyB0aGF0IHRoZSB0d28gZnVuY3Rpb25zIChzbGlkaW5nIGludGVybmFsIGRvb3IgYW5kIHJvdGF0aW5nIG91dGVyIGRvb3IpIGhhdmUgTk8gcmVhc29uIHRvIGV2ZXIgcnVuIGNvbmN1cnJlbnRseSwgc28gaXQgc2hvdWxkbiBldmVuIGJlIHBvc3NpYmxlLiAKTG9uZ3Rlcm0gdmFyaWFuY2UKSSB3b3VsZCBsaWtlIHRvIGdldCBpbnRvIGFjY291bnRpbmcgYmVjYXVzZSBpdCBvZmZlcnMgYSBnb29kIHNhbGFyeSBhcyB3ZWxsIGFzIGdvb2QgY29ubmVjdGlvbnMgdG8gbXVsdGlwbGUgb3Bwb3J0dW5pdGllcy4gTXkgYWNjb3VudGluZyBjbGFzcyBpbiBoaWdoIHNjaG9vbCBpcyBjb21wbGljYXRlZCBidXQgSSBnb3QgdGhyb3VnaCBpdCwgYW5kIEkgZW5qb3kgbGVhcm5pbmcgbW9yZSBhYm91dCBhY2NvdW50cyBhbmQgaG93IHRvIGJhbGFuY2UgdGhlbS4gSSBlbmpveSB3b3JraW5nIHdpdGggbnVtYmVycyBhbmQgdGhhdCBpcyB3aGF0IGFjY291bnRpbmcgaXMsIHRyeWluZyB0byBtYWtlIGV2ZXJ5dGhpbmcgYmFsYW5jZSB0byBtYWtlIHN1cmUgdGhhdCBldmVyeXRoaW5nIGlzIGNoZWNrZWQuCldpdGggaGlnaCBwZXJzb25hbCB0YXggcmF0ZXMgYW5kIGFuIGVsZWN0aW9uIG9uIHRoZSBob3Jpem9uLCB3aGF0IHBlcnNvbmFsIHRheCBtZWFzdXJlcyBjb3VsZCB3ZSBleHBlY3QgdG8gc2VlIGluIGFuIHVwY29taW5nIGZlZGVyYWwsIHByZSBlbGVjdGlvbiBidWRnZXQ/Ck91ciBpbmZsdWVuY2UgY29udGludWVzIHRvIGdyb3cuIEEgTE9UIG9mIEJlcm5lcnMgYm91Z2h0IGEgdGlja2V0IHRvIGEgcG9saXRpY2FsIHJldm9sdXRpb24gYW5kIGhhdmUgYmVlbiBzdGlja2luZyBpdCBvdXQgaW5zaWRlIHRoZSBEZW1vY3JhdGljIFBhcnR5IHRvIG1ha2Ugc3VyZSB0aGF0IGtpbmQgb2Ygc2hpdCBkb2VzbiBnbyBkb3duIGFnYWluLiAKU3VuZ2xhc3NlcyBhbmQgaGVhZHBob25lcyBpbiBvbmU/IFlvdSBiZXQgeW91ciBib290cy4gVGhlc2Ugc3R5bGlzaCBmcmFtZXMgYXJlbid0IGp1c3QgZ3JlYXQgZm9yIHByb3RlY3RpbmcgeW91ciBodXNiYW5kJ3MgZXllcyBmcm9tIHRoZSBzdW4sIGJ1dCB0aGV5IGFsc28gcHVtcCBtdXNpYyBkaXJlY3RseSBmcm9tIGhpcyBzaGFkZXMgdG8gaGlzIGVhcnMuIFRoZXkncmUgQmx1ZXRvb3RoIGVuYWJsZWQsIGhhdmUgYW4gaW50ZWdyYXRlZCBtaWNyb3Bob25lLCBhbmQgYSBzaW5nbGUgYnV0dG9uIHRoYXQgYWxsb3dzIGhpbSB0byBwb3dlciBvbiBvciBvZmYsIGFjY2VwdCBvciByZWplY3QgY2FsbHMsIGFuZCBjb250cm9sIG11c2ljLiBUaGV5J3JlIGFsc28gc2hhdHRlciBhbmQgc2NyYXRjaCByZXNpc3RhbnQsIHNvIHRoZXkgY2FuIGhhbmRsZSBzb21lIGFjdGlvbi4gUGx1cywgdGhlIEJvc2UgYXBwIGFsbG93cyB5b3UgZWFzeSBhY2Nlc3MgdG8gYWxsIHRoZSBnbGFzc2VzJyBmZWF0dXJlcy4KQm94IDgsIFdpYXJ0b24sIE9udGFyaW8gTjBIIDJUMCkgb3IgRmlyc3QgVW5pdGVkIENodXJjaCAoMTYgV2lsbGlhbSBTdC4gCk1vc3QgcG9rZXIgcGxheWVycyB1c2VkIHRvIHNwZW5kIGEgbG90IG9mIHRpbWUgYXdheSBmcm9tIHRoZWlyIGZhbWlsaWVzLCBhcm91bmQgcG9rZXIgdGFibGVzIGluIGNhc2lub3MgcGxheWluZy4gVGhpcyBzaG91bGQgbm90IGJlIGEgcHJvYmxlbSBhcyB5b3UgY2FuIHBsYXkgZnJvbSB0b3Agb25saW5lIHBva2VyIHNpdGVzIHdpdGhvdXQgbGVhdmluZyB0aGUgc2FmZXR5IG9mIHlvdXIgaG91c2UuIApBTFNPOkxvY2FsIEdvdnQgTlogICBWaXNpdG9yIGxldnkgcmVmZXJlbmR1bSBvcGVucyBkb29yIHRvIGJvbGQgcmVnaW9uYWwgcG9saWN5QmlnIFJpc2VzIEluIFNvbWUgUmVnaW9uczogSG91c2UgUHJpY2UgR3Jvd3RoIENvbnRpbnVlcyBUbyBTbG93IE5hdGlvbmFsbHlHcm93dGggaW4gaG91c2UgcHJpY2VzIG5hdGlvbmFsbHkgY29udGludWVzIHRvIHNsb3cgYW5kIHByaWNlcyBpbiBwYXJ0cyBvZiB0aGUgQXVja2xhbmQgcmVnaW9uIGFyZSBhY3R1YWxseSBmYWxsaW5nLCBhbHRob3VnaCB0aGVyZSBhcmUgc3RpbGwgc29tZSBob3Qgc3BvdHMuIE1vcmU+PgpJIGRvbiBzZWUgbXlzZWxmIGxpdmluZyBmb3IgdG9vIG11Y2ggbG9uZ2VyIChtYXliZSAyIDMgeWVhcnMgdG9wcykuIApIb3cgVG8gQmVjb21lIEEgUHJvZmVzc2lvbmFsIENvbW1lcmNpYWwgV2VkZGluZyBQaG90b2dyYXBoZXIgLiBGc3RvcHBlcnMgICBIb3cgdG8gQmUgYSBXZWRkaW5nIFBob3RvZ3JhcGhlciBUcmFpbmluZyBWaWRlby4gCiJXaHkgd291bGRuJ3QgaXQgYmU/IiBzaGUgc2FpZC4gIkl0IHdhc24ndCBsaWtlIHNoZSB3YXMgaW4gdGhlIHN0b3JlICAgdGhhdCB3b3VsZCBiZSBhIHdob2xlIGRpZmZlcmVudCBiYWxsIGdhbWUuClBvbGl0ZWx5IHNheWluZyBubyBpcyBhIHBlcmZlY3RseSBhY2NlcHRhYmxlIHJlc3BvbnNlLiBIZSBiaXRjaGVzIGFib3V0IGhlciB0byBoaXMgZnJpZW5kcywgc2hlIGRvZXNuJ3QgaGF2ZSBmcmllbmRzIHNvIHNoZSBiaXRjaGVzIHRvIHRoZSBpbnRlcm5ldC4gVGhlcmUncyByZWFsbHkgbm90IG11Y2ggb2YgYSBkaWZmZXJlbmNlLmNoYW5ncG93cG93ICA3IHBvaW50cyAgc3VibWl0dGVkIDkgZGF5cyBhZ29NeSBzaXN0ZXIgaXMgdHJhbnMgc28gSSdtIHdlbGwgYXdhcmUgb2YgVEVSRnMuIEkgZG9uJ3QgdW5kZXJzdGFuZCB0aGUgU1dFUkYgdGhpbmcgdGhvdWdoLiAKU2ltaWxhcmx5LCB3aGlsZSBldmVyeSBpbmRpdmlkdWFsIG1hdHVyZXMgYXQgdGhlaXIgb3duIHJhdGUgaXQgc3RpbGwgZmFsbHMgd2l0aGluIGEgbm9ybWFsIGRpc3RyaWJ1dGlvbiwgc28gdGhlIG1ham9yaXR5IG9mIGtpZHMgZG8gcm91Z2hseSBtYXRjaCBlYWNoIG90aGVyIGluIHRlcm1zIG9mIHNvY2lhbCwgcGh5c2ljYWwgYW5kIGNvZ25pdGl2ZSBkZXZlbG9wbWVudC4gU28geWVzLCB3aGlsZSBncm91cGluZyBzdHVkZW50cyBieSBhZ2UgcmF0aGVyIHRoYW4gYWJpbGl0eSBkb2VzIG5lZ2F0aXZlbHkgYWZmZWN0IHN0dWRlbnQgbGVhcm5pbmcgYXQgdGhlIGhpZ2hlc3QgYW5kIGxvd2VzdCBlbmRzIG9mIHRoZSBhYmlsaXR5IGN1cnZlLCBpdCBhbHNvIG1heGltaXplcyBkZXZlbG9wbWVudGFsIHVuaWZvcm1pdHkgd2hpY2ggcG9zaXRpdmVseSBhZmZlY3RzIHRoZWlyIHNvY2lhbCBkZXZlbG9wbWVudCBhbmQgdGhlaXIgYWJpbGl0eSB0byBib25kIHdpdGggb3RoZXJzIChhbmQgdG9nZXRoZXIgdGhlc2UgdGhpbmdzIGFyZSBlcXVhbGx5IGlmIG5vdCBtb3JlIGltcG9ydGFudCB0aGFuIGhhcmQgc2tpbGwgZGV2ZWxvcG1lbnQpLiAKSWYgeW91IHdlcmUgcmFpc2VkIGluIHRoZSBXZXN0IChlc3BlY2lhbGx5IGluIHRoZSBVbml0ZWQgU3RhdGVzKSwgeW91IGNhbm5vdCBzaW1wbHkgInB1bGwgeW91cnNlbGYgdXAgYnkgeW91ciBib290c3RyYXBzIiBhbmQgbWFrZSB5b3Vyc2VsZiBkbyBhbnl0aGluZyB3aXRoIHB1cmUgd2lsbCBwb3dlci4gRnJvbSBiaXJ0aCwgY2hpbGRyZW4gYXJlIGdpdmVuIG1peGVkIG1lc3NhZ2VzIGFib3V0IHdoYXQgdGhleSBhcmUgc3VwcG9zZWQgdG8gZG8uIFRoZXkgYXJlIHRvbGQgdG8gZ28gdG8gc2Nob29sIGFuZCBnZXQgZ29vZCBncmFkZXMuIEJ1dCB0aGVuIHRob3NlIHNhbWUgY2hpbGRyZW4gKGVzcGVjaWFsbHkgaW4gdGhlIHRlZW5hZ2UgeWVhcnMpIGxvb2sgdG8gdGhlIGFkdWx0cyBhbmQgc2VlIHRoZSBlbmQgZ29hbCBvZiB0aGVpciBlZHVjYXRpb24uIFRoZXkgc2VlIGJyb2tlbiBmYW1pbGllcywgYWxjb2hvbGlzbSBhbmQgYWRkaWN0aW9uIHJhbXBhbnQgYW5kIHRoZXkgc2VlIGFkdWx0cyBjaGFzaW5nIGFmdGVyIG1vbmV5IHNvIHRoZXkgY2FuIGJ1eSBhIGJpZ2dlciBob3VzZSBhbmQgZmFuY2llciBjYXIuIEEgYmlnIGhvdXNlLCB3aXRob3V0IGxvdmUsIGZlZWxzIGVtcHR5LiBBIEJNVywgYXQgdGhlIGNvc3Qgb2YgcmVhbCBjb25uZWN0aW9ucyB0byBmYW1pbHkgYW5kIGZyaWVuZHMgYW5kIGNvbW11bml0eSwgaXMgYSBwb29yIHN1YnN0aXR1dGUgZm9yIHJlYWwgY29ubmVjdGlvbi4gT24gdG9wIG9mIHRoYXQsIGluIHRoZSBXZXN0LCB3ZSBhcmUgbm90IGV2ZW4gdGF1Z2h0IGFueSBkZWNlbnQgcml0dWFsaXN0aWMgcHJhY3RpY2VzLCBzdWNoIGFzIG1lZGl0YXRpb24sIG1hcnRpYWwgYXJ0cywgcHJheWVyLCBldGMuIFdlbGwsIHllcywgcHJheWVyIGlzIHRhdWdodCBpbiByZWxpZ2lvbnMsIGJ1dCB0aGUgcmVsaWdpb25zIGFyZSBvZnRlbiBjaG9jayBmdWxsIG9mIHRveGljIHNoYW1lLCBzbyBnb29kIGx1Y2sgdGhlcmUhClRoaXMgc29ydCBvZiAiY29udHJvbGxlZCBwYW5pYyIgaGFzIGEgbG9uZyBoaXN0b3J5IGluIHRoZSBmaWVsZCBvZiBzb2Npb2xvZ3kuIApQbHVzIG15IHdpZmUgYnJvdWdodCBtZSBhIHN3aXRjaCB0byBwbGF5IHdoaWxlIGkgd2FzIG9mZiBteSBmZWV0IGZvciBuZWFybHkgMiBtb250aHMuIFplcm8gY29zdC4gSSBjYW50IGV2ZW4gZmF0aG9tIHdobyBvciB3aHkgYW55b25lIHdvdWxkIGJlIGFnYWluc3QgdW5pdmVyc2FsIGhlYWx0aGNhcmUuLiAKKEFzdGhtYXRpY3MgYW5kIG90aGVyIGluZGl2aWR1YWxzIHdpdGggc2lnbmlmaWNhbnQgaGVhbHRoIHByb2JsZW1zLCBob3dldmVyLCBzaG91bGQgYmUgc3VyZSB0byB0YWxrIHRvIHRoZWlyIGRvY3RvciBiZWZvcmUgYmVnaW5uaW5nIGFueSBleGVyY2lzZSBwcm9ncmFtLikgU29tZSBzdHVkaWVzIGhhdmUgZXZlbiBpbmRpY2F0ZWQgdGhhdCBhIGZpdG5lc3Mgd2Fsa2luZyBwcm9ncmFtIGNhbiBwbGF5IGEgcGFydCBpbiBoZWxwaW5nIHRvIHByZXZlbnQgY2VydGFpbiB0eXBlcyBvZiBjYW5jZXIuLiAKR29uZSB0byB0aGUgYmVlciBzdG9yZSBhbmQgdGhlIGZpcnN0IHRoaW5nIEkgbG9va2luZyBmb3IgaXMgc29tZXRoaW5nIHRvIHB1dCB0aGUgZW1wdHkgYm90dGxlcyBpbi4gSXQgYSBncmVhdCBpZGVhIGFuZCB0aGV5IGRvbmUgYSBncmVhdCBqb2IuIApTYWxtb24gZWdncyBjb3VsZCB0aGVuIGJlIHNlbnQgZnJvbSB0aGUgY29tcGFueSByZXNlYXJjaCBhbmQgZGV2ZWxvcG1lbnQgZmFjaWxpdHkgaW4gQ2FuYWRhLCBhbmQgd291bGQgYmUgaGFydmVzdGVkIGFmdGVyIGFib3V0IDE4IG1vbnRocyB3aGVuIHRoZXkgcmVhY2ggMTAgcG91bmRzLCBzaGUgc2FpZC4uIApIZSB3YW50ZWQgaGlzIGxvdmVkIG9uZXMgdG8gY2VsZWJyYXRlIHRvZ2V0aGVyIGFuZCByZW1lbWJlciB0aGUgZ29vZCB0aW1lcyB3ZSBzaGFyZWQgd2l0aCBoaW0gb3ZlciB0aGUgeWVhcnMuIAoxKSBJIHRoaW5rIG51bWJlciBvbmUgaXMgc3ViamVjdCB0byB0aGUgcGVyc29uIGJ1dCBpZiB5b3UgYXJlIHJlcGxhY2luZyBicmVha2Zhc3QgSSB3b3VsZCBnbyBhIGJpdCBoZWF2aWVyIG9uIHRoZSBxdWFudGl0eS4gQWxzbyBtYWtlIHN1cmUgdG8gaGF2ZSBlcXVhbCBwYXJ0cyB3YXRlciBhZnRlciB0aGUganVpY2UuIEkgd291bGQgcHJvYmFibHkgZG8gMTEgMTQgb3VuY2VzIGZvbGxvd2VkIGJ5IHRoZSBzYW1lIGFtb3VudCBvZiB3YXRlciB0byBzdGFydC4gClNlbGVjdGlvbnMgZGUgbGl2cmVzIGV0IFBERiBkIGxhIHJhZGllc3QgZW4gcGFzc2FudCBwYXIgbGUgZGV2ZWxvcHBlbWVudCBkZSBzb2kuIEJvbm5lIGxlY3R1cmUKRWZmZWN0aXZlbmVzcyBvZiBzdGVyb2lkcyBpbiB0cmVhdGluZyB2YXJpb3VzIHNraW4gY29uZGl0aW9ucyBpcyBhbHJlYWR5IHByb3ZlbiB5ZXQgaXQgcG9zZXMgc2lkZSBlZmZlY3RzIHdoZW4gaXQgaGFzIGJlZW4gdXNlZCBmb3IgYSBsb25nZXIgcGVyaW9kIG9mIHRpbWUuIApZb3UgaGF2ZSB0byB3YW50IHRvIGZpZ2h0IGFuZCBoYXZlIGhlYXJ0IGFuZCBJIGRvLiBIZSBzYXlzIGhlIGRvZXNuIGtub3cgbXVjaCBhYm91dCBCYW5rcywgU2FsYXMgc2F5cyBpdCBvayBiZWNhdXNlIGhlIHByZWZlcnMgdG8gZmlndXJlIGFuIG9wcG9uZW50IG91dCBpbiB0aGUgcmluZy4gT25jZSBJIGdldCBpbiB0aGVyZSwgSSBjYW4gdGVsbCB3aGF0IGEgZmlnaHRlciB3ZWFrbmVzc2VzIGFyZS4gCk9mIHNoYXJlZCBmZWFycywgdmFsdWVzLCBhbmQgaWRlb2xvZ2llcwpBY2NvcmRpbmcgdG8gTXllcnMncyBtb2RlbCwgaXQgaXMgdGhyb3VnaCB0aGVzZSBteW9mYXNjaWFsIGxpbmVzLCBtb3Jlc28gdGhhbiB0aHJvdWdoIGluZGl2aWR1YWwgbXVzY2xlcywgdGhhdCB0aGUgYm9keSBhZGFwdHMgdG8gYW5kIHJlaW5mb3JjZXMgYWxpZ25tZW50IGFuZCBtb3ZlbWVudC4gU2F5cyBDYXJleSwgIkZhc2NpYSBhZGFwdHMgdG8gZXZlcnkgbW92ZSB5b3UgbWFrZSAgIGdvb2QsIGJhZCBvciBpbmRpZmZlcmVudC4iIE92ZXIgdGltZSwgYSBjb21wZXRpdGl2ZSByb3dlciwgZm9yIGV4YW1wbGUsIG1pZ2h0IGRldmVsb3AgdGhpY2tlciBmYXNjaWEgaW4gaGVyIGJhY2sgYW5kIHNob3VsZGVycyB0byBzdXBwb3J0IHRoZSByZXBldGl0aXZlIG1vdmVtZW50IG9mIHB1bGxpbmcgb2Fycy4gVGhlIGZhc2NpYSBpbiB0aGUgZnJvbnQgb2YgdGhlIHJpYiBjYWdlIG9mIHlvdXIgdHlwaWNhbCBkZXNrIGpvY2tleSwgb24gdGhlIG90aGVyIGhhbmQsIG1heSBiZWNvbWUgdGhpY2sgYW5kIHNob3J0IHRvIHJlaW5mb3JjZSBhIGhhYml0dWFsbHkgY2F2ZWQgaW4gcG9zdHVyZS4gQW5kIGluanVyaWVzLCBldmVuIG1pbm9yIG9uZXMsIG9mdGVuIHJlc3VsdCBpbiBmYXNjaWFsICJwYXRjaGVzIiBpbiB0aGUgbXVzY2xlcyB0aGF0IGNhbiBjYXVzZSByZXN0cmljdGVkIG1vdGlvbiwgbGVhZGluZyB0byBjb21wZW5zYXRpb25zIGluIGdhaXQgYW5kIG1vdmVtZW50LiBUaGVzZSBtaWdodCByZW1haW4gbG9uZyBhZnRlciB0aGUgaW5qdXJ5IGl0c2VsZiBoYXMgaGVhbGVkLgpXZSBrbm93IGZvciBjZXJ0YWluIHRoYXQgdGhpcyBoYW5kIGlzIG5vdCBjdXJyZW50bHkgZ29vZCwgc28gd2UnbGwgaGF2ZSB0byBoaXQgb25lIG9mIG91ciBvdXRzIGluIG9yZGVyIHRvIHdpbiAob3IgYmx1ZmYgdGhlIGd1eSBvdXQpLiBXZSBrbm93IHRoZXJlIGFyZSBmb3VyIDMncywgYW5kIGZvdXIgOCdzIHRoYXQgd2lsbCBtYWtlIHVzIGEgc3RyYWlnaHQuIApCdXQgaGUgZGlkbid0IHBsYW4gdG8gc3RvcCwgYmVjYXVzZSBoZSB3YXNuJ3QgZG9pbmcgaXQgZm9yIHRoZSBtb25leSAoaGUgd2FzIGFjdHVhbGx5IHNvcnRhIHJpY2gpLiAKVGhlIGJlbGxzIGFuZCBtdXNpYyBvZiB0aGUgY2FzaW5vIGFyZSBwYXJ0IG9mIHRoZSBhbnRpY2lwYXRpb24gdGhhdCB5b3VyIGNoYW5jZSBvZiBzdHJpa2luZyBpdCByaWNoIHdpdGggYSBnYW1lIG9mIGNoYW5jZSBpcyB3aXRoaW4gcmVhY2guLiAKT25jZSB5b3Ugc3RvcCBsZXR0aW5nIHlvdSwgaXQgc3Vic2lkZXMsIGFuZCAibm9ybWFsaXR5IiBpcyBzaW1wbHkuIEJsaXNzZnVsLiAKUHVsbCBvdXIgdHJvb3BzIG91dCwgYnJpbmcgdGhlbSBob21lIGFuZCBsZXQgaGF2ZSB0aGVpciBwYXRjaCBvZiBzYW5kLiAKVGh1cywgeW91IGNvdWxkIGFjdHVhbGx5IHNlZSBpZiBzb21lb25lIGNhbGxlZCB5b3UgbmFtZXMgZnJvbSB0aGUgcHJldmlvdXMgaGFuZC4gTmV4dCBmZWF0dXJlIGlzIHRoZSBhYmlsaXR5IG9mIGhhdmluZyBvcHBvbmVudCBub3RlcyB3aGljaCBlbmFibGVzIGEgcGxheWVyIHRvIGpvdCBub3RlcyBhbmQgd3JpdGUgdXNlZnVsIHRpcHMgcmVnYXJkaW5nIHRoZSBwbGF5ZXIgdGhhdCB0aGV5IGFyZSBjb21wZXRpbmcgd2l0aC4gCkluIGNvbnRyYXN0LCBkaXN1c2VkIHBhc3N3b3JkcyBjYW4gYmUgZm9yZ290dGVuIHdpdGhpbiBkYXlzLi4gCldoZXJlIG90aGVyIGNvbmRpdGlvbnMgZXhpc3QsIGNoaXJvcHJhY3RpYyBjYXJlIG1heSBjb21wbGVtZW50IG9yIHN1cHBvcnQgbWVkaWNhbCBvciBvdGhlciB0cmVhdG1lbnQgYnkgcmVsaWV2aW5nIHRoZSBtdXNjdWxvc2tlbGV0YWwgYXNwZWN0cyBhc3NvY2lhdGVkIHdpdGggdGhlIGNvbmRpdGlvbi5UaGVyZSBhcmUgbWFueSByZWFzb25zIHRvIHNlZWsgY2hpcm9wcmFjdGljIGNhcmU6V2Ugb2ZmZXIgYSB2YXJpZXR5IG9mIHNlcnZpY2VzIGluY2x1ZGluZzpNeW9mYXNjaWFsIFJlbGVhc2UgVGhlcmFweSwgVWx0cmFzb3VuZCBUaGVyYXB5LCBSZWhhYmlsaXRhdGlvbiBTZXJ2aWNlcywgTW90b3IgVmVoaWNsZSBBY2NpZGVudCBDbGFpbXMgYW5kIFdvcmtwbGFjZSBTYWZldHkgSW5zdXJhbmNlIEJvYXJkIENsYWltcyAoV1NJQilQbGVhc2Ugbm90ZSB0aGF0IHlvdSBhcmUgcmVzcG9uc2libGUgZm9yIHBheW1lbnQgYXQgdGhlIHRpbWUgb2YgeW91ciBzZXJ2aWNlcy4gClNwaW5uYWtlcnMgUmVzdGF1cmFudCBhdCBTYWlscyBSZXNvcnQgYnkgUnlkZ2VzOiBoYXMgYSBzdXBlcmIgc2VhZm9vZCBidWZmZXQgb24gdGhlIG1hcmluYSBkZWNrIGZvciAkOTkgd2l0aCBlbnRlcnRhaW5tZW50IGJ5IEpvcmRhbiBKaXZlIGFuZCBhIHZpZXcgb2YgdGhlIGZpcmV3b3Jrcy4gClNvIEkganVzdCBncmV3IGluIGEgdmVyeSBmcnVnYWwgZmFtaWx5IGV2ZW4gdGhvdWdoIHdlIHdlcmUgcHJvYmFibHkgbWlkZGxlIGNsYXNzLiBNeSBwYXJlbnRzIG93bmVkIG91ciBob21lLCB3ZSB3ZXJlIGxpdmluZyBmYWlybHkgY29tZm9ydGFibHkuIApJbiBoaXMgZXllcywgaXQgd2FzIGltcG9zc2libGUgZm9yIGFueSBvZiB0aGVtIHRvIGRvIHdyb25nLiAKSWxzIGRvaXZlbnQgdHJlIHNhaXNpcyBkaXJlY3RlbWVudCBzaSBwb3NzaWJsZSBwYXIgY291cnJpZXIgYXUgOCBydWUgRnJvaXNzYXJ0IDc1MTUzIFBhcmlzIENlZGV4IDAzLiIuIApCdXQgaGUgaXMgcmVhbGx5IGJhZCBhYm91dCBob3VzZXdvcmsuIAooc291cyByc2VydmUgYWNpZGUgdXJpcXVlIG91aSwgY2hvbGVzdHJvbCwgY3Jpc3RhdXggZGUgbWFnbnNpdW0gb3VpLCBwb3VyIGxlIHJlc3RlIGonYWkgcGFzIHZ1LilMYSBwcnNlbmNlIGFub3JtYWxlIGRlIHBhcmFzaXRlcywgZGUgYmFjdHJpZXMsIGRlIGNoYW1waWdub25zLCBkZSBsZXZ1cmVzLGRlIG10YXV4IGxvdXJkcyBvdSBkZSByYWRpY2F1eCBsaWJyZXMuID8/TGEgcG9zc2liaWxpdCBkJ2FsbGVyZ2llcy4gCllvdSBkb2luZyBhIGdyZWF0IGpvYiwgaGFuZ2luZyBpbiB0aGVyZSB0aHJvdWdoIHRoZSB0b3VnaGVzdCBkYXlzLCBtYWtpbmcgdGhlIGJlc3Qgd2l0aCB3aGF0IHlvdSBnaXZlbi4gCldoZW4gaGVyIGZhdGhlciBwYXNzZWQgYXdheSBzdWRkZW5seSAyMSB5ZWFycyBhZ28sIE1zLiBEYXZpZHNvbiBiZWdhbiB3b3JraW5nIGZvciBMb2JsYXcsIHdoZXJlIHNoZSBsZWFybmVkIGFsbCBzaGUgY291bGQgYWJvdXQgdGhlIGdyb2NlcnkgaW5kdXN0cnkgaW5jbHVkaW5nIGhvdyB0byBiZSBhIGJ1eWVyIGFuZCBob3cgdG8gc291cmNlIHByb2R1Y3RzLCB3aGljaCBsZWQgdG8gaGVyIGJlY29taW5nIGEgY2F0ZWdvcnkgbWFuYWdlciBiZWZvcmUgbW92aW5nIHRvIGEgcm9sZSBhcyBwcm9kdWN0IGJyYW5kIG1hbmFnZXIgZm9yIFByZXNpZGVudCBDaG9pY2UuIApUaGlzIGhhcyB0aHJlZSB2ZXJzaW9ucyB0aGF0IGNhbiBiZSBwbGF5ZWQgaW4gUGFjaWZpYyBQb2tlci4gVGhlc2UgYXJlIEhpZ2gsIExvdyBhbmQgSGlnaCBMb3cgU3BsaXQgZ2FtZXMuIEluIDcgQ2FyZCBTdHVkIExvdywgdGhlIHBsYXllciB3aG8gb2J0YWlucyB0aGUgbG93ZXN0IGhhbmQgd2lucyB0aGUgcG90IHdoaWxlIG9uZSB3aXRoIHRoZSBoaWdoZXN0IGhhbmQgd2lucyBpbiB0aGUgNyBDYXJkIFN0dWQgSGlnaC4gCkJ1dCB0aGlzIGlzbid0IHRoZSB0aW1lIG9yIHBsYWNlIGZvciB0aGF0IHNoaXQuIApBIHZpc2lvbiBvZiBXIEhvdGVscywgQWxvZnQgaGFzIGJlZW4gYW4gaW5kdXN0cnkgZ2FtZSBjaGFuZ2VyIHNpbmNlIGl0cyAyMDA4IGRlYnV0LiAKU3RpbGxpbmcgdGhlIE1pbmQgU2l0IGNvbWZvcnRhYmx5IG9uIHlvdXIgY2hhaXIgb3IgYmVkIGFuZCBiYWxhbmNlIHlvdXIgaGVhZCBhbmQgc3BpbmUuIApXeW5uIFJlc29ydHMgbWF5IGJlIHRha2luZyBhIGdhbWJsZSB3aXRoIGl0cyBCb3N0b24gYXJlYSBjYXNpbm8gc2xhdGVkIHRvIG9wZW4gbmV4dCB5ZWFyLgpJbmdyYW0gd2FzIGFtb25nIDEwIFNhaW50cyBwbGF5ZXJzIHdobyBzYXQgb24gdGhlIGJlbmNoIGR1cmluZyB0aGUgYW50aGVtIGJlZm9yZSB0aGVpciB3aW4gb3ZlciB0aGUgQ2Fyb2xpbmEgUGFudGhlcnMgbGFzdCBTdW5kYXkgb24gYSBkYXkgb2YgdW5wcmVjZWRlbnRlZCBwcm90ZXN0cyBhbW9uZyBORkwgcGxheWVycyBpbiByZXNwb25zZSB0byBjb21tZW50cyBieSBQcmVzaWRlbnQgRG9uYWxkIFRydW1wLiAKVGhlIFUgb2YgQSBpcyBhIHRvcCBub3RjaCBmYWNpbGl0eSB3aXRoIEkgc3VyZSBwbGVudHkgb2YgbGlrZSBtaW5kZWQgcGVvcGxlIGFzIHlvdSB3aG8gYXJlbiBtb3BpbmcgYWJvdXQsIGdvaW5nIHRocm91Z2ggdGhlIG1vdGlvbnMgb2YgdGhlaXIgc3VidXJiYW4gbGlmZXN0eWxlcy4gRWRtb250b24gaXMgYSBiZWF1dGlmdWwgY2l0eS4gCkhvdyBUcmFkaXRpb25hbCBDaGluZXNlIE1lZGljaW5lIFdvcmtzSG93IHRvIFRyZWF0IENvbW1vbiBBaWxtZW50cyB3aXRoIFRyYWRpdGlvbmFsIENoaW5lc2UgTWVkaWNpbmVUcmFkaXRpb25hbCBDaGluZXNlIE1lZGljaW5lIGZvciBDb3VnaHMsIENvbGRzLCBGbHUsIGFuZCBBbGxlcmdpZXNUcmFkaXRpb25hbCBDaGluZXNlIE1lZGljaW5lIGZvciB0aGUgRGlnZXN0aXZlIFN5c3RlbVRyYWRpdGlvbmFsIENoaW5lc2UgTWVkaWNpbmUgZm9yIFBhaW4gUmVsaWVmVHJhZGl0aW9uYWwgQ2hpbmVzZSBNZWRpY2luZSBmb3IgT3ZlcmFsbCBIZWFsdGhUaGlzIGluZm9ybWF0aW9uIGlzIHNvbGVseSBmb3IgaW5mb3JtYXRpb25hbCBwdXJwb3Nlcy4gSVQgSVMgTk9UIElOVEVOREVEIFRPIFBST1ZJREUgTUVESUNBTCBBRFZJQ0UuIApMb2NhbCBzd2VldHMsIHNhdWNlcywgY2hlZXNlcyBhbmQgdmluZWdhcnMgd2lsbCBhbHNvIGJlIGZvciBzYWxlLkkgaGFkIG1hbnkgb3Bwb3J0dW5pdGllcyB0byBzcGVhayBhdCB0aGUgc2hvdywgYW5kIG1vcmUgcmVjZW50bHkgSSBiZWVuIHRha2luZyBidXMgdG91cnMgdGhlcmUsIHNvIEkga25vdyB0aGUgc2hvdyBjYW4gYmVjb21lIHF1aXRlIGJ1c3kuVGhpcyBkaXNwbGF5IGdhcmRlbiBzaG93cyBob3cgdGhlIGNsZXZlciBhbmQgc3R5bGlzaCB1c2Ugb2YgY29udGFpbmVycyBjYW4gY3JlYXRlIGEgc21hbGwgc3BhY2UgZ2FyZGVuIHRoYXQgc2hpbmVzLk5vcnRod2VzdCBGbG93ZXIgYW5kIEdhcmRlbiBGZXN0aXZhbCBpcyB0aGUgc2Vjb25kIGxhcmdlc3QgaW5kb29yIGdhcmRlbiBzaG93IGluIEFtZXJpY2EsIGFuZCB3ZSBmb3J0dW5hdGUgaXQgaXMgc28gY2xvc2UsIGNlcnRhaW5seSBmb3IgZm9sa3MgcmVzaWRpbmcgaW4gdGhlIGxvd2VyIGhhbGYgb2YgdGhlIHByb3ZpbmNlLiAKSSByZW1lbWJlciBoaW0gdGVsbGluZyBtZSBsb3RzIG9mIHN0b3JpZXMgYW5kIEkgaGF2ZSBhIHdhcm0gcGxhY2UgaW4gbXkgaGVhcnQgZm9yIGhpbS4gSGUgbWFkZSBtZSBsYXVnaCBhIGxvdC4gCkFXUyBkZXZlbG9wZXJzIGhhdmUgYSBsb3Qgb2YgZGlmZmVyZW50IGRhdGFiYXNlcyB0byBjaG9vc2UgZnJvbSwgYW5kIHRoaXMgY291cnNlIGhlbHBzIHlvdSBsZWFybiBob3cgdG8gdXNlIHRoZWlyIHJlbGF0aW9uYWwgZGF0YWJhc2UgKEFtYXpvbiBSRFMpLCBOb1NRTCBkYXRhYmFzZSAoRHluYW1vIERCKSwgYW5kIGRhdGEgd2FyZWhvdXNlIChBbWF6b24gUmVkc2hpZnQpLiAKV2hpbGUgTGFycnkncyByZWFsIGVzdGF0ZSBpbnZlc3RpbmcgZXhwZXJpZW5jZSBpcyBhIHNpZGUgcGFzc2lvbiwgaGUgd2lsbCBhZmZpcm0gaGlzIGV4cGVyaWVuY2UgYW5kIGtub3cgaG93IGluIHJlYWwgZXN0YXRlIGludmVzdGluZyBpcyBkZXJpdmVkIG1vcmUgZnJvbSBoaXMgZmFpbHVyZXMgdGhhbiBoaXMgc3VjY2Vzc2VzLi4gCkEgbW9yZSBjb2dlbnQgcG9pbnQgaXMgdGhhdCBzb21lIG9yZ2FuaWMgcGVzdGljaWRlcyBhcmUgYWN0dWFsbHkgbm8gYmV0dGVyIHRoYW4gc3ludGhldGljIG9uZXMsIGFuZCBwb3RlbnRpYWxseSBldmVuIHVuc2FmZXIuIApGaXJzdCAgIHRoZSBydWxlcyBhbmQgdGVjaG5pcXVlIG9mIHRoZSBnYW1lLiAKQmFyeWxhIG1vdGhlcikgbWFkZSB0aGUgZ2lmdCB0byBNci4gCi4xMC8uMjAgdXAgdG8gNS8xMC4gMTAvMjAgcnVucyB0d2ljZSBhIHdlZWsuIEkgcGVyc29uYWxseSBiZWxpZXZlIGEgbWFqb3JpdHkgb2YgY2x1YnMgd2lsbCBnbyB0aHJvdWdoIHdoYXQgSm9rZXJLaW5neiB3ZW50IHRocm91Z2ggYmVmb3JlIGEgZ29vZCBvd25lciBhbmQgbGVhZGVyIGJ1eXMgdGhlbSBvdXQuIApDYWxsIGEgc2hvcnQgc3RhY2sgb3BlbiBzaG92ZSB3aXRoIEFLby4gSGUgdHVybnMgb3ZlciA2VGRkLiBUd28gZGlhbW9uZHMgb24gdGhlIGZsb3AsIGRpYW1vbmQgb24gdGhlIHR1cm4KQWxzbywgS3JvbGwncyB0ZW51cmUgc3RhcnRlZCB3aXRoIGEgZm9ybWFsIGNvbXBsYWludCBieSBhbiBlbXBsb3llZSBhYm91dCBoaXMgImFnZ3Jlc3NpdmUgbWFuYWdlbWVudCBzdHlsZSwiIGFjY29yZGluZyB0byBSZWNvZGUsIGJ1dCBhbiBpbnZlc3RpZ2F0aW9uIGRpZG4ndCB1bmNvdmVyIGFueSBpbXByb3ByaWV0eS4uIApJIHN1cHBvcnRlZCBGaWVycm8uIEkgYmVsaWV2ZSBoZSB3YXMgdGhlIGJlc3QgbWFuIGZvciB0aGUgam9iIGJ1dCBJIHdhcyBkZWVwbHkgZGlzYXBwb2ludGVkIGluIHRoZSBwZW9wbGUgdGhhdCByYW4gaGlzIGNhbXBhaWduLiBUaGV5IGFyZSBmYXIgZnJvbSBwcm9mZXNzaW9uYWwsIGNsZWFybHkgaGFkIHRoZWlyIG93biBwZXJzb25hbCBhZ2VuZGFzIGFuZCBpbiBteSBvcGluaW9uIHRoZXkgd2lsbCBub3QgYmUgYWJsZSB0byBoZWxwIEZpZXJybyBncm93IGFzIGEgcG9saXRpY2lhbi4gVGhlaXIgYmVoYXZpb3IgaXMgcmlza3ksIHBhcnRpY3VsYXJseSBjb25zaWRlcmluZyBKYWltZSBjb250aW51ZXMgdG8gYmxvZyBhYm91dCBpbmRpdmlkdWFscyBpbiBvdXIgY29tbXVuaXRpZXMgd2l0aCBoYWxmIHRydXRocyBhbmQgaXJyZWxldmFudCBnb3NzaXAgYnJpbmdzIGdyZWF0IHJpc2sgdG8gaGlzIGNsaWVudHMgYW5kIGhpcyBmaXJtLgooRm9yIGluc3RhbmNlIGEgJDUgY2hpcCBpcyB3b3J0aCAkNSkuIApUaGUgdHdvIGZpbGwgb3V0IHRoZSBzb3VuZCB3ZWxsIHdpdGhvdXQgYW55IGFwcGFyZW50IGRvdWJsZSB0cmFja2luZyBvZiB0aGVpciBpbnN0cnVtZW50cy4gUGx1dGEgaXMgYSB2aXJ0dW9zbyBvbiBEb2JybywgYW5kIHRoZXkgbWl4IHRoZWlyIGd1aXRhciBwYXJ0cyBzZWFtbGVzc2x5LiBwbGFpbnRpdmUsIGFsbW9zdCBnaXJsaXNoIHZvaWNlIGFuZCBHb3Jkb24ncyBsb3cga2V5IGRlbGl2ZXJ5IGZpdCByaWdodCBpbnRvIHRoZWlyIEFwcGFsYWNoaWFuIHNvdW5kLiBQaGlsYWRlbHBoaWEgQXZlLiwgQm95ZXJ0b3duLiAxMzogTW9vbiBDYWZlLCBDbGF5IE9uIE1haW4sIDMxMyBNYWluIFN0LiwgT2xheVJldmlld2luZyBzZXZlcmFsIHBlb3BsZSByZWFjdGlvbnMgdGhlcmUgd2VyZSBzb21lIG1peGVkIHJlYWN0aW9ucyBjb25jZXJuaW5nIHRoZSBOaWtlIFRyaWF4IE1lbiBzaG9lLiBNYW55IHdlYXJlcnMgaW5jbHVkaW5nIG15c2VsZiBmb3VuZCB0aGUgc2hvZSBhIGJpdCB0aWdodCBhdCBmaXJzdCBidXQgYSBkZWNlbnQgZml0IHdoZW4gd29ybiBmb3IgYSBsb25nZXIgcGVyaW9kLiBNYW55IHdlYXJlcnMgZm91bmQgdGhlIHNob2UgdG8gYmUgbGlnaHR3ZWlnaHQgYW5kIGdyZWF0ZXIgZm9yIHNtYWxsZXIgYW5kIGxlc3Mgd2VpZ2h0eSBydW5uZXJzLiBIb3dldmVyIGl0cyBzZWVtcyB0aGF0IGp1c3QgYXMgbWFueSBzYXcgdGhlIHNob2UgbW9yZSBhcyBhIGZhc2hpb24gc3RhdGVtZW50IHRoYW4gYSBzaG9lIHRoZXkgd291bGQgdXNlIGZvciBzZXJpb3VzIHRyYWluaW5nIG9yIHBoeXNpY2FsIHRyYWluaW5nLiBNT1NFUiBoYXMgYmVlbiBhcm91bmQgbG9uZyBlbm91Z2ggdG8gaGF2ZSBzZWVuIHRoZSBvcmlnaW5hbCBSYW1vbmVzIGluIGEgc21hbGwgY2x1YiBpbiBOZXcgSmVyc2V5LCBVMiBmcm9tIHRoZSBmb3VydGggcm93IG9mIGEgdGhlYXRlciBhbmQgQm9iIER5bGFuJ3MgYm9ybiBhZ2FpbiB0b3Vycy4gQnV0IGhlIGFsc28gaGFzIHRoZSBudW1iZXIgZm9yIEFsbCBBbWVyaWNhbiBSZWplY3RzJyBOaWNrIFdoZWVsZXIgb24gaGlzIGNlbGwgcGhvbmUsIHdyb3RlIHRoZSBmaXJzdCBzdG9yeSBldmVyIGRvbmUgb24gSmFjaydzIE1hbm5lcXVpbiBhbmQgaHVuZyBvdXQgaW4gV2l6IEtoYWxpZmEncyBob3RlbCByb29tLgpDYW4gYSBwZW5pcyBiZSB0b28gYmlnIGZvciBhbmFsIHNleD8gUHJvYmFibHkgbm90LCB0aG91Z2ggc2l6ZSBkb2VzIG1hdHRlci4gSG93ZXZlciwgYSBiaWcgcGVuaXMgZG9lc24gaGF2ZSB0byBiZSBhIGRlYWwgYnJlYWtlci4gV2l0aCBwcm9wZXIgcHJlcGFyYXRpb24sIGVub3VnaCBsdWJyaWNhdGlvbiwgdGhlIHJpZ2h0IHBvc2l0aW9uLCBhbmQgcmVsYXhhdGlvbiB0ZWNobmlxdWVzLCBoYXZpbmcgYW5hbCBzZXggd2l0aCBhIGJpZyBwZW5pcyBjYW4gYmUgY29tZm9ydGFibGUgYW5kIHBsZWFzdXJhYmxlLgpQbGVhc2UsIGF0IHRoZSB2ZXJ5IGxlYXN0LCBnZXQgc29tZSBmaW5hbmNpYWwgY291bnNlbGluZyBiZWZvcmUgeW91IGdldCB5b3Vyc2VsZiBpbnRvIGRlZXAgZGVidC4KU3VyZSwgd2UgbWF5IG5lZWQgYSBjYXIgdG8gZ2V0IGZyb20gcG9pbnQgQSB0byBwb2ludCBCLCBidXQgd291bGQgd2UgZXZlciBuZWVkIG91ciBjYXIgdG8gaGF2ZSBhbiBhaXIgcHVyaWZpZXI/IEhvdyBhYm91dCBsZWF0aGVyIGludGVyaW9yIGNlaWxpbmdzPyBPciBhIGJlamV3ZWxlZCBmdWVsIGNhcD8gVG8gdGhvc2Ugb2YgdXMgd2hvIGFyZSBzdGlsbCBjaHVnZ2luZyBhcm91bmQgaW4gYSBib3R0b20gb2YgdGhlIGxpbmUgZWNvbm9teSBjYXIsIHRoZXNlIGFtZW5pdGllcyBtaWdodCBzZWVtIHV0dGVybHkgcmlkaWN1bG91cy4gU29tZSBtYXkgZ2FnIGF0IHRoZSBpZGVhIG9mIHN1Y2ggZXhjZXNzIGFuZCBvcHVsZW5jZS4gCkFscmVhZHkgdGhpcyB5ZWFyLCBDaGFuIGhhcyBlYXJuZWQgYSBsaXR0bGUgZXh0cmEgbW9uZXkgd2hlbiBwcm9mZXNzaW9uYWwgQW50b25pbyBFc2ZhbmRpYXJpIHBsYWNlZCBhIGJldCB3aXRoIGV2ZXJ5b25lIGF0IHRoZSB0YWJsZSB0aGF0IENoYW4gd2FzIGluY29ycmVjdCBmb3IgcmV2ZWFsaW5nIGEgcGFpciBvZiBtdWNrZWQgY2FyZHMuCkkgd2FzIGEgbGl0dGxlIHNob2NrZWQgdGhhdCBpdCB3YXMgbmVhcmx5IGNvbXBsZXRlbHkgQnJpdGlzaCBJc2xlcy4gCklmIHlvdSB3b25kZXIgaWYgdmFjY2luZXMgYXJlIGhhcm1mdWwsIHRoaW5rIG9mIHRoaXM6IGluc3VyYW5jZSBjb21wYW5pZXMgd29uIHBheSBmb3IgaG9tZSBiaXJ0aHMuIApUcmFkaW5nIGhhcyBhIHNpbWlsYXIgdHlwZSBvZiBwbGF5ZXIuIE1hbnkgdHJhZGVycyB3YWl0IGZvciBhbGwgdGhlIGluZGljYXRvcnMoZnVuZGFtZW50YWwgYW5kIHRlY2huaWNhbCl0byBsaW5lIHVwIGFuZCBjb25maXJtIHRoYXQgdGhlIHRyYWRlIHdpbGwgZ28gaW4gdGhlIGV4cGVjdGVkIGRpcmVjdGlvbi4gQW5kIHVzdWFsbHkgaXQgZG9lcy4gCjMuIFRoZXJlIGlzIG11Y2ggY29uY2VybiBhYm91dCBvdXIgZXZlciBpbmNyZWFzaW5nIGluZ2VzdGlvbiBvZiBkYWlyeSBwcm9kdWN0cy4gUmVzZWFyY2ggZnJvbSBhcm91bmQgdGhlIHdvcmxkIHN0YXRlcyB0aGF0IHRoZSB2YXN0IG1ham9yaXR5IG9mIHVzIGxvc2Ugb3VyIGFiaWxpdHkgdG8gZGlnZXN0IG1pbGsgcHJvZHVjdHMgYWZ0ZXIgdGhlIGFnZSBvZiBhYm91dCAzIG9yIDQgYW5kIHRoZSBhc3NvY2lhdGlvbiBiZXR3ZWVuIGNvdW50cmllcyB0aGF0IGNvbnN1bWUgaGlnaGVyIHF1YW50aXRpZXMgb2YgZGFpcnkgcHJvZHVjdHMgYW5kIHN1Y2ggZGlzZWFzZXMgYXMgYXV0aXNtLCBkaWdlc3RpdmUgY29tcGxhaW50cywgYWxsZXJnaWVzLCBoZWFydCBkaXNlYXNlIGFuZCBjYW5jZXIsIHRvIG5hbWUgYSBmZXcsIGFyZSBtb3VudGluZy4gSXMgZGFpcnkgb25lIG9mIHRoZSBwcm8gaW5mbGFtbWF0b3J5IGN1bHByaXRzIHRoYXQgaW5mbGFtZXMgdGhlIHNtYWxsIGludGVzdGluZSB0aGVyZWJ5IHNldHRpbmcgdGhlIHN0YWdlIGZvciBnbHV0ZW4gdG8gY3JlYXRlIHNtYWxsIGludGVzdGluYWwgZGFtYWdlPyBJIGNhbid0IHN0YXRlIHRoZSBhbnN3ZXIgY2F0ZWdvcmljYWxseSBidXQgd2UgZG8gc2VlIGEgc3Ryb25nIGFzc29jaWF0aW9uIGJldHdlZW4gdGhvc2Ugd2hvIGFyZSBnbHV0ZW4gaW50b2xlcmFudGFsc28gaGF2aW5nIG5lZ2F0aXZlIHJlYWN0aW9ucyB0byBkYWlyeSBwcm9kdWN0cy4KVGhlcmUgYXJlIGJsYWNrIGNvbG9yZWQgUmVhbCBDbGF5IFBva2VyIENoaXBzIGFzIHdlbGwuIFRoZXNlIGFyZSBkZWZpbml0ZWx5IG1vc3RseSBmb3VuZCBpbiBnYW1lcyB0aGF0IGhhdmUgaGlnaGVyIGJldHMgb2NjdXJyaW5nLiAKT24gcGFwZXIgYXQgbGVhc3QsIHRoZSBwb2xpY2llcyBwcm9wb3NlZCBhcmUgZXhhY3RseSB0aGUgcmlnaHQgb25lcy4gVGhlIG1lZGl1bSBhbmQgbG9uZ2VyIHRlcm0sIHN0cnVjdHVyYWwgcmVmb3JtcyB3aWxsIGJlIG5lZWRlZCBmb3IgSmFwYW4gdG8gaGF2ZSBzdXN0YWluYWJsZSBncm93dGggZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IGl0cyB3b3JraW5nIHBvcHVsYXRpb24gaXMgc3RlYWRpbHkgZ2V0dGluZyBzbWFsbGVyLCBKZXNzb3Agc2F5cy4uIApJIG1lYW4sIHdlIGNhbiB0cmFkZSBvZmYgdGVybXMsIGJ1dCB3ZSByZWFsbHkganVzdCBzYXlpbmcgdGhlIHNhbWUgdGhpbmcuIFNvbWVvbmUgdGFrZXMgb24gYSByaXNrIChpbiB0aGlzIGNhc2UgZGFuZ2VyIHRvIHRoZWlyIGhlYWx0aCkgaW4gdGhlIGNoYW5jZSB0aGF0IHRoZXkgZ2V0IHRoZSByaXNrIHByZW1pdW0gKGhpZ2hlciB0aGFuIGF2ZXJhZ2UgaW5jb21lKS4gClVmYXdrZXNkdXAgdQpCb3VnaG5lciB3YWl0cyBhIGJlYXQsIHRoZW4gdHdvLiAKWW91ciBicmFpbiBzd2l0Y2hlcyBvdmVyIHRvIGEgZGlmZmVyZW50IG1vZGUgb2YgdGhpbmtpbmcuIApUaGUgY29uY2VybiBwZW9wbGUgd291bGQgaGF2ZSBpcyB0aGF0IGxlYXJuaW5nIHRoZSBrYW5qaSBvdXRzaWRlIG9mIFdhbmlrYW5pIHdvdWxkIGludGVyZmVyZSB3aXRoIHRoZSBTUlMgaW50ZXJ2YWwuIApXaGF0IEkgbGlrZSBtb3N0IGluIGd1eXMgaXMgd2hlbiB0aGV5IGp1c3QgYWN0LiBDYXN1YWwuIApSb2JlcnRzIHN1bW1hcml6ZWQgdGhlIHBvbGl0aWNzIG9mIHRoZSBzaXR1YXRpb24sICJXaGF0IHlvdSBkb24gd2FudCB0byBkbyBpcyByZWFsbHkgaHVydCB0aGUgdmVyeSBmb2xrcyB3aG8gYnJvdWdodCB5b3UgdG8gdGhlIGRhbmNlLiIKSSBhIHZlcnkgYmlnIGZhbiBvZiBKZW5uaWUgKEJsYWNrcGluayBpcyBldmVuIGluIG15IGZsYWlyKSBhbmQgb2YgU05TRCwgc28gcGxlYXNlIGRvbiBnbyBzaG92aW5nIHdvcmRzIHRoYXQgSSBkaWRuIHNheSBkb3duIG15IHRocm9hdC52YWxlcmllX2xld2lzICAxMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnb1dpc2ggU0pIIGNhbiBkZXZlbG9wIGEgY2hhcmFjdGVyIHRoYXQgZG9lc24gZGVwZW5kIG9uIGxvdmVsaW5lcy4gClRoZSBzZWNvbmQgcmVhc29uIHRvIGJlIGNvbnNpZGVyZWQgd2hpbGUgY2hvb3NpbmcgYW4gb25saW5lIHBva2VyIHNpdGUgaXMgdGhhdCwgdGhlcmUgaGFzIHRvIGJlIGEgaGVhbHRoeSBjcm93ZCBhdCB0aGUgb25saW5lIHBva2VyIHNpdGUgd2hlcmUgeW91IGFyZSBwbGFubmluZyB0byBwbGF5IHRoZSBnYW1lLiBBbm90aGVyIGZhY3Qgd2hpbGUgY2hvb3NpbmcgYW4gb25saW5lIHBva2VyIHNpdGUgaXMgdGhlIHR5cGUgb2YgcG9rZXIgZ2FtZXMgb2ZmZXJlZCBieSB0aGF0IHBhcnRpY3VsYXIgc2l0ZS4gCkl2ZSBnb25lIHRvIGFib3V0IDMgYmxhY2sgY2h1cmNoZXMgaW4gbXkgbGlmZSB0aW1lLiAKSmh1dGNoaTIgIDcgcG9pbnRzICBzdWJtaXR0ZWQgMTkgaG91cnMgYWdvCldpdGggdGhlIGFkdmVudCBvZiBjb21wdXRlcnMgYW5kIHRoZSBpbnRlcm5ldCBjb21wbGV0ZWx5IGNoYW5nZWQgdGhlIHdvcmxkIG9mIGdhbWJsaW5nIGFuZCBnYW1ibGluZyBjYW1lIGludG8gdGhlIHZpcnR1YWwgd29ybGQgb2Ygb25saW5lIHBva2VyLi4gCklmIGhlIHdlcmUgdG8gbWFrZSBhIHNuaWRlIGNvbW1lbnQgYWJvdXQgbXkgYm9keSBub3QgYmVpbmcgd2hhdCBpdCB1c2VkIHRvIGJlLCBJIHdvdWxkIHByb21wdGx5IHRlbGwgaGltIHRvIHRyeSBiaXJ0aGluZyB0d28gMTAgbGIgYmFiaWVzLCBicmVhc3QgZmVlZGluZyB0aGVtLCBub3QgaGF2aW5nIGFjY2VzcyB0byBhIGd5bSBhbnltb3JlIGJlY2F1c2Ugb2YgZmluYW5jaWFsIHRyb3VibGVzLCBhbmQgaGF2aW5nIHRoZSB0d28ga2lkcyBiZSBvbiBvcHBvc2l0ZSBuYXBwaW5nIGFuZCBzbGVlcGluZyBzY2hlZHVsZXMgd2hpY2ggZXF1YXRlIHRvIG1lIGhhdmluZyBleGFjdGx5IHplcm8gbWludXRlcyBwZXIgZGF5IHRvIGV4ZXJjaXNlIGZvciB0aGUgcGFzdCAzIHllYXJzLCBhbmQgdGhlbiBzbmFwIGJhY2sgdG8gdGhlIDExMCBsYnMgcGVyc29uIGhlIHdhcyBwcmUgcHJlZ25hbmN5OyBiZWNhdXNlIEkgd291bGQgbG92ZSB0byBzZWUgdGhhdC4KT3JpZ2luYWwgcHJpbnRzIG9mIHRoZSBmaWxtJ3MgdGhlYXRyaWNhbCBwb3N0ZXIgbWlzc3BlbGxlZCBQYXJyeSBTaGVuJ3MgbmFtZSBhcy4gQW4gT2ZmaWNpYWwgU2VsZWN0aW9uIGF0IHRoZSBTdW5kYW5jZSBGaWxtIEZlc3RpdmFsLCBCZXR0ZXIgTHVjayBUb21vcnJvdyBpcyBhIGdyaXBwaW5nLCBlZGd5IGFuZCBwcm92b2NhdGl2ZSBmaWxtIHRoYXQgcmlwcyB0aGUgdHJhbnF1aWwsIHdlbGwgbWFuaWN1cmVkIGZhY2FkZSBvZmYuIDIwIE1heSAyMDE3IC4gCjMgTWF5IDIwMTggLiAKTXkgMyBYTCB3aWxsIGp1c3Qgc3RyYWlnaHQgdXAgZnJlZXplIGZvciAxMCsgc2Vjb25kcyBhdCBhIHRpbWUgdW5kZXIgbW9kZXJhdGUgbG9hZCwgb3IgSSBoYXZlIHRvIGNsb3NlIGFuZCByZWxvYWQgc3lzdGVtIGFwcHMgbGlrZSBzZWFyY2ggY29uc3RhbnRseSBiZWNhdXNlIGl0IGZhaWxzIHRvIGdpdmUgcmVzdWx0cyBvciBpcyBsYWdnaW5nIHRvbyBtdWNoIHRvIHNjcm9sbCBvciByZWdpc3RlciB0YXBzIHByb3Blcmx5Li4gCkhlIHdlbnQgZnJvbSBhIHJhbmRvbSBoZW5jaG1hbiB0byBraWxsaW5nIG5vcHBlcmFibyBhbmQgc2hvb3RpbmcgdGhlIGZ1Y2tpbmcgTUMgaW4gdGhlIGhlYWQuIApUb21rbyBxdWl0IHRlYWNoaW5nIGFuZCBiZWNhbWUgYSB3b3JsZCBjbGFzcyBwb2tlciBwbGF5ZXIuIEJ1dCBub3cgYWxsIGhlIGNhbiB0aGluayBvZiBpcyBnZXR0aW5nIGJhY2sgdG8gRmxvcmlkYSB0byBwbGF5IGJhc2ViYWxsIHdpdGggaGlzIHRocmVlIHNvbnMuIApJdCB3YXMgYWxzbyBtYWtpbmcgaXQgZGlmZmljdWx0IHRvIGZvbGxvdyB3aGVyZSBldmVyeW9uZSB3YXMgZ29pbmcuIApUaGUgcGFwZXIgbGFpZCBvdXQgYSBjb21wZWxsaW5nIGFyZ3VtZW50IHRoYXQgdGhlIGhlYWx0aGllc3QgaHVtYW4gZGlldCBsb29rcyBhIGxvdCBtb3JlIGxpa2Ugd2hhdCBvdXIgU3RvbmUgQWdlIGFuY2VzdG9ycyBhdGUgdGhhbiB0aGUgc3VnYXIgIGFuZCBmYXQgbGFkZW4gZm9vZCBBbWVyaWNhbnMgbW9zdGx5IHJlbHkgb24uClVoT2hGZW1pbmlzdE9uUmVkZGl0ICAxODIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KVGhlIGxpZmVzdHlsZSBwbGF5aW5nIG9ubGluZSBpcyBhbWF6aW5nLiBXb3JrIHlvdXIgb3duIGhvdXJzLCBubyBib3NzLCBldGMuIApNYW4gbXVzcyBudXIgZWlubWFsIGRhcyBLb256ZXB0IHZlcnN0YW5kZW4gaGFiZW4gdW5kIGRhcyBlcmxlZGlndCBNb3NobWFuIHNlaHIgZ3V0Li4gCkl0IHdhcyB0aHJlYXRlbmVkIHdpdGggY29sbGFwc2UsIGxpa2UgZXZlcnkgb3RoZXIgSW50ZXJuZXQgY29tcGFueSBkdXJpbmcgdGhhdCB0aW1lLi4gCihGdWxsIEFuc3dlcikuIApUaGUgaWxsdXN0cmF0aW9ucyBhcmUgbHVzaCBhbmQgZGV0YWlsZWQgYW5kIGEgZ29vZCBzaXplLCBhbmQgdG8gbXkgdW50cmFpbmVkIGV5ZSBsb29rIGFuIGF3ZnVsIGxvdCBsaWtlIHRoZSByZWFsIHRoaW5nLiAKR3JvdXAgc3BhIHRyZWF0bWVudHMgZm9yIGRpZmZlcmVudCBjdXN0b21lcnMuIFdobyBhcmUgeW91ciB0YXJnZXQgY3VzdG9tZXJzPyBZb3Ugc2hvdWxkIGxpc3QgZG93biB0aGUgc3BhIHRyZWF0bWVudHMgdGhhdCB5b3Ugd2lsbCBiZSBvZmZlcmluZyBiYXNlZCBvbiB0aGUgY3VzdG9tZXJzLiAKV2FsbHltb21vdXRoICAxMiBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KU28sIGdlbnVnIEdlYnJhYmJlbCAobWljaCBiZXNjaGZ0aWdlbiBQZmxlZ2VmbGxlIGhhbHQgZ2VybmUpLiBJY2ggd25zY2ggZGlyIHVuZCBkZWluZXIgRmFtaWxpZSBhdWYgamVkZW4gRmFsbCBhbGxlcyBHdXRlIHVuZCB2aWVsIEtyYWZ0IHVuZCBmYWxscyBpaHIgZWluZSBEb2xtZXRzY2hlcmluIGJyYXVjaGVuIHNvbGx0ZXQsIGJpbiBpY2ggaGllciA6KQpBZGRpdGlvbmFsbHksIHlvdSBhbHNvIGNhbiBwdXQgdHJhbnMgcGVvcGxlIGluIHRoZWlyIGFzc2lnbmVkIGF0IGJpcnRoIGNhdGVnb3J5LCBzaW5jZSB0aGV5IHdpbGwgc3VmZmVyIGZyb20gYSBoZWF2eSBkaXNhdHZhbnRhZ2UgZHVlIHRvIGhvcm1vbmVzIGVmZmVjdHMgY29tcGFyZWQgdG8gc29tZW9uZSB3aG8gdHJhaW5zIGp1c3QgYXMgbXVjaCBhcyB0aGVtLiBUaGlzIHdvdWxkIGJhc2ljYWxseSBwdXQgdHJhbnMgcGVvcGxlIG9uIHRoZSBzcG90OiBEZWNpZGUsIGVpdGhlciB0cmFuc2l0aW9uIG9yIGNob29zZSBzcG9ydHMgaWYgeW91IHdhbnQgdG8gaGF2ZSBhIGNoYW5jZS4gV2hpY2ggaW1vIHdvdWxkIGJlIGEgcGl0eWZ1bCBmYXRlLi4gClRoZSBmb3VuZGF0aW9uIGhhcyByZWZ1c2VkIHRvIGV4cGxhaW4gaG93IGl0IGNhbGN1bGF0ZWQgdGhlIDMwIHBlciBjZW50ZGlzdHJpYnV0aW9uIGZpZ3VyZSBmb3IgMjAxNC4gQnV0IGl0IG1heSBpbnZvbHZlIGEgcmVsYXRlZCBjaGFyaXR5LCBrbm93biBhcyBUaGUgU2hhbmUgV2FybmUgTmVjZXNzaXRvdXMgQ2lyY3Vtc3RhbmNlcyBGdW5kLCB3aGljaCByZXBvcnRlZGx5IGRpc3RyaWJ1dGVkICQ4Myw0MDAgdG8gbmVlZHkgY2hpbGRyZW4gdGhhdCB5ZWFyLiAKUmVpZCBjb250aW51ZWQgdG8gbXVkZHkgdGhlIHdhdGVycyBieSByZWxlYXNpbmcgYSBzdGF0ZW1lbnQgd2hpY2ggc2FpZCBpbiBwYXJ0ICJUb2RheSwgdGhlIG1vc3Qgc2VjcmV0aXZlIHByZXNpZGVudGlhbCBjYW5kaWRhdGUgc2luY2UgUmljaGFyZCBOaXhvbiBpcyBjb21pbmcgdG8gTmV2YWRhLCBhc2tpbmcgdG8gYmUgZWxlY3RlZCBwcmVzaWRlbnQuIEZvcmdldCBhYm91dCBwcmVzaWRlbnQgICBNaXR0IFJvbW5leSBjb3VsZG4gZ2V0IGNvbmZpcm1lZCBhcyBhIGNhYmluZXQgc2VjcmV0YXJ5LiIgKEkgZ3Vlc3MgU2VuLiAKSGUgZG9lc24ndCAiZGlzb3duIiBoaXMgbG92ZSwgTWVyY2VkZXMgbm9yIHdhcyBzaGUgdGhlIGFsbGVnZWQgZHJpdmVyIG9mIGhpcyByZXZlbmdlLiBFZG1vbmQgRGFudGVzIHN0aWxsLCBpbiBoaXMgY29sZCBhbmQgdmVuZ2VhbmNlIGNvbnN1bWVkIGhlYXJ0LCBoYWQgYSB3ZWFrIHNwb3QgZm9yIE1lcmNlZGVzIGFuZCB0aG91Z2h0IGZvbmRseSBvZiBoZXIuIApBIHNwb2tlc3BlcnNvbiBmb3IgdGhlIFBvcnQgTWFjcXVhcmllIEhvdGVsIHNhaWQgdGhlIGhvdGVsIG9mZmVycyBnYW1pbmcgb3B0aW9ucyBpbiBzdHJpY3QgYWNjb3JkYW5jZSB3aXRoIHRoZSByZWxldmFudCBsZWdpc2xhdGlvbi4gIlRoZSBtYW5hZ2VtZW50IGFuZCBzdGFmZiBzdXBwb3J0dGhlIHByb3Zpc2lvbiBvZiByZXNwb25zaWJsZSBnYW1pbmcgc28gdGhhdCBhbGwgY3VzdG9tZXJzIGNhbiBlbmpveSB0aGVtc2VsdmVzLCIgdGhlIHNwb2tlc3BlcnNvbiBzYWlkLiAiVGhlIE1hY2NhIGlzIGFuIGFjdGl2ZSBtZW1iZXIgb2YgdGhlIEFIQSBOU1cgR2FtZUNhcmUgc3lzdGVtLCB3aGljaCBwcm92aWRlcyBhbiB1cGRhdGVkIGxpc3Qgb2Ygc2VsZiBleGNsdWRlZCBwYXRyb25zIHNvICh3ZSkgY2FuIGhlbHAgc3VwcG9ydCBnYW1ibGVycyB3aXRoIGEgcmVjb2duaXNlZCBwcm9ibGVtIHRvIGF2b2lkIGdhbWJsaW5nLiAKV2l0aCBldmVyeSBwYXNzaW5nIGRheSwgdGhlIHJhdGUgb2YgY2hhbmdlIGdldHMgZmFzdGVyLiAKSXQgZ29lcyBmdWxsIGNpcmNsZTogc3BlY3VsYXRpb24gYW5kIGljb3MgZnVlbGVkIGRldmVsb3BtZW50IG91dCBvZiB3aGljaCBNYWtlckRBTyB3YXMgY3JlYXRlZCBhbW9uZyBvdGhlcnMuIApJbiBzYXlpbmcgdGhhdCwgYWdncmVzc2lvbiBpcyB0aGUga2V5LiBJIGxvb2sgZm9yIGFueSBjYXJkcyB3aXRoIGNoZW1pc3RyeSwgQWNlICBYIHN1aXRlZCwgdHdvIGZhY2UgY2FyZHMsIDk3cywgZXRjLiwgYW55IHBwIGZvciBleGFtcGxlLCBhbmQgSSBhbSBhbGwgaW4gZm9yY2luZyB0aGUgb3RoZXJzIHRvIG1ha2UgYSB0b3VnaCBkZWNpc2lvbi4gClRoZXJlIG5vIHJlYXNvbiB0byBiZXQgbGFyZ2Ugb24gdGhlIGZsb3AgaW4gaGFuZCAxLiAKTm93LCBmb3IgYWxsIHRoaXMgcG93ZXIgaW4gbXkgeW91bmcgaGFuZHMsIEkgY291bGRuJ3QgZmlndXJlIG91dCBob3cgdG8gc3BlbGwgd2hhdCBJIG5lZWRlZCB0byBsb29rIHVwLiBOYXR1cmFsbHksIEkgYXNrZWQuIE15IG1vdGhlciB0b2xkIG1lICJ0aGlzIGlzIHlvdXIgcHJvamVjdCBhbmQgeW91ciBsZWFybmluZyB0aW1lLCBzb3VuZCBpdCBvdXQiLiBTbywgSSBkaWQuCkRyeSBuZWVkbGluZyBhbmQgb3RoZXIgZm9ybXMgb2Ygbm94aW91cyBzdGltdWxhdGlvbiBhcmUgaGVscGZ1bCBpbiB0YWtpbmcgY2FyZSBvZiBrbm90cy4gU2V2ZXJhbCBtYXNzYWdlIHRlY2huaXF1ZXMgY2FuIGJlIGNvbnNpZGVyZWQgZm9ybXMgb2Ygbm94aW91cyBzdGltdWxhdGlvbi4gCjM3KSBObyBXYXkgLiAKNCkgU3RyaW5nIHJlZCBhbmQgZ3JlZW4gamVsbHkgYmVhbnMgYWxvbmcgd2l0aCBwb3Bjb3JuIGZvciBhbiBvbGQgZmFzaGlvbmVkIGVmZmVjdCBmb3IgQ2hyaXN0bWFzIHRyZWUgZ2FybGFuZC4gV2hlbiB0aGUgaG9saWRheXMgYXJlIG92ZXIsIG11bmNoIG9uIHRoZSBnYXJsYW5kIHRvIGtlZXAgeW91ciBzdHJlbmd0aCB1cCBhcyB5b3UgcGFjayBhd2F5IHRoZSBob2xpZGF5IGRlY29yYXRpb25zLgoobGlrZSB0aGUgd2F5IHRoZXJlcyBhIHBvcGUgaW4gY2F0aG9saWNpc20pIFNvIGlmIGEgUmFuZG9tIEltYW0gc3RhcnRzIHJlZmVyZW5jaW5nIGFuIG9sZCBhbmQgb2JzY3VyZSBoYWRpdGggYW5kIHRlYWNoZXMgb3V0ZGF0ZWQgbGVzc29ucyBvbiBpdCwgdGhlcmUgbm8gcG9wZSBmaWd1cmUgdG8gc2F5ICJMaXN0ZW4gdGhpcyBndXkgaXMgd3JvbmcsIHRoaXMgaXMgaG93IGdvZCB3YW50cyB1cyB0byBpbnRlcnByZXRlIHRoaXMgbGluZS4iIFdoaWNoIGFsbG93cyBmb3IgdmlydHVhbGx5IGFueSBpbnRlcnByZXRhdGlvbiBvZiB0aGUgbWF0ZXJpYWwuIApVc2UgdmlzdWFsIGN1ZXMuIE9uZSB0cmljayB0aGF0IHdvcmtlZCBmb3IgbWUgd2FzIGEgY2xpcHBlZCBtYWdhemluZSBwaWN0dXJlIG9mIHRoZSBsYXRlIFByaW5jZXNzIERpYW5hLCBhZnRlciBzaGUgcmVjZWl2ZWQgaGVyIGVuZ2FnZW1lbnQgcmluZyBmcm9tIFByaW5jZSBDaGFybGVzLiBSZW1lbWJlciB0aGF0PyBTaGUgY291bGRuJ3Qgc2hvdyBvZmYgaGVyIHJpbmcgcHJvcGVybHkgYmVjYXVzZSBzaGUgYml0IGhlciBuYWlscywgc28gc2hlIGhhZCB0byBjbGVuY2ggaGVyIGhhbmQgaW50byBhIGZpc3QgaW4gb3JkZXIgdG8gbGV0IHRoZSBwaG90b2dyYXBoZXJzIGdldCBhIGdvb2QgbG9vay4KRXNwZWNpYWxseSBpbiB0aGUgcHJvIHNjZW5lIGl0cyB6ZW4gR09BVFMgdnMgemVuIEdPQVRTIG9uIGEgbG90IG9mIG1hcHMsIHNvIHVuZGVyc3RhbmRpbmcgdGhhdCB0d28gcGxheWVycyBhcmUgdHJ5aW5nIHRvIHBsYXkgcGVyZmVjdCBvdmVyd2F0Y2gsIHRoZSBhbnN3ZXIgaXMgdG8gZ2V0IHRoZSBtb3N0IHZhbHVlIG91dCBvZiBldmVyeSBjb29sZG93biBwb3NzaWJsZSwgYW5kIGhvdyBvbmUgbWlzcGxheWVkIGNvb2xkb3duIGNhbiBzd2luZyB5b3VyIHByb2JhYmlsaXR5IG9mIHdpbm5pbmcgdGhlIGZpZ2h0IG91dCBvZiB5b3VyIGZhdm91ci4gClRoZSBtYW51ZmFjdHVyZXIga25ldyB0aGF0IHByZSBvcmRlciBjYXJzIGhhZG4gYmVlbiBkZWxpdmVyZWQsIGFuZCB0aGV5IHN0aWxsIG1hZGUgdGhlIGFubm91bmNlbWVudC4gVGhpcyBpcyByZWFsbHkgYSBzeW1wdG9tIG9mIGhvdyBuZXcgc3VwZXJjYXIgc2FsZXMgd29yayB0b2RheS4gTWFudWZhY3R1cmVycyBrZWVwIGNvbWluZyB1cCB3aXRoIHNtYWxsIGl0ZXJhdGlvbnMgb2Ygd2hhdCBpcyBlc3NlbnRpYWxseSB0aGUgc2FtZSBjYXIsIGJ1dCBhIGxpdHRsZSBiZXR0ZXIgKGFuZCB0aGVyZWZvcmUsICJ0aGUgYmVzdCIpLCBzbyB0aGV5IGNhbiBzZWxsIGFuZCByZSBzZWxsIHRvIHRoZSBzYW1lIGN1c3RvbWVyIGJhc2UuIApUaHJvdyBhd2F5IHVud2FudGVkIGZvb2QgYmVmb3JlIGl0IHNwb2lscy4uIApBa2F0c3VraSAgIEEgbGl0dGxlIE1pa2Egd2l0aCBBdHJhIGhhaXIsIHNvIGN1dXV1dGUuIEkgbG92ZSBoaXMgbmFtZS4gCkRyLiAKRXZlbiB0aGVzZSBtYWNoaW5lcyBjb25zdW1lIHZlcnkgbWluaW1hbCBiYXR0ZXJ5IHBvd2VyIGFzIHdlbGwuIApZb3UncmUgdXAgYWdhaW5zdCB0d28gdmlsbGFpbnMgd2l0aCBzZXQvMnAgYWR2YW50YWdlIGFuZCBPT1AuIApUaGUgbG90dGVyeSBzYXlzIGFsbCB3aW5uaW5nIHRpY2tldHMgYWxyZWFkeSBpbiBjaXJjdWxhdGlvbiB3aWxsIGJlIGhvbm9yZWQsIGJ1dCB0aGV5IHdpbGwgYmUgaG9ub3JlZCBhcyBkZXRlcm1pbmVkIGJ5IHRoZSBnYW1lIHdpbiBzY2VuYXJpb3MgYW5kIHJ1bGVzIG9uIHRoZSBiYWNrIG9mIHRoZSB0aWNrZXQuCjQgcG9pbnRzICBzdWJtaXR0ZWQgMyBkYXlzIGFnb1dlIHVzZWQgdG8gc2l0IGluIHRoZSBmYXIgZW5kIG9mIGEgY29ybmZpZWxkIHRoYXQgd2FzIG5leHQgdG8gYSBmcmllbmRzIGhvdXNlIHdpdGggYSBzbWFsbChpc2gpIGZpcmUgdGhhdCBvbmUgb2YgdGhlIHRydWNrcyB3b3VsZCBibG9jayBsaW5lIG9mIHNpZ2h0IGZyb20gdGhlIG1haW4gcm9hZCAoaXQgd2FzIGEgc21hbGwgcm9hZCB0aGF0IGJhc2ljYWxseSB3ZW50IG5vd2hlcmUpLiBUaGUgY29wcyBvY2Nhc2lvbmFsbHkgd291bGQgc3BvdCB1cyBmcm9tIHRoZSBsaWdodCBvZiB0aGUgZmlyZSBiZWhpbmQgdGhlIHRydWNrLCBzbyB0aGV5IHdvdWxkIHNwb3RsaWdodCB1cyBmcm9tIGxpa2UgMy80IG9mIGEgbWlsZSBhd2F5LiBXZSB3b3VsZCBkdW1wIGEgY291cGxlIGNvb2xlcnMgb2YgaWNlIGFuZCB3YXRlciBvbiB0aGUgZmlyZSBhbmQgc2tlZGFkZGxlIHRocm91Z2ggYWJvdXQgMyBtaWxlcyBvZiBjb3JuZmllbGRzIGFuZCBwYXJrIGluIGFuIG9sZCBhYmFuZG9uZWQgYmFybiB0aGF0IHdhc24gcmVhbGx5IGtub3duIHRvIGFueW9uZSBvdXRzaWRlIG9mIHRoZSBwcm9wZXJ0eSBvd25lcnMgYXMgeW91IGhhZCB0byBnbyB0aHJvdWdoIGEgbG9ja2VkIGdhdGUgdGhlbiBhIG1pbGUgb2YgZGVlcCBydXR0ZWQgZHJpdmV3YXkgd2hpY2ggcmFuIHRocm91Z2ggYSB3b29kcy4gCkFubmllOiBJIHN0YXJ0ZWQgb2ZmIG15IGxpZmUgYWN0dWFsbHlpbiBhIHByZXR0eSB0cmFkaXRpb25hbCB3YXkuIApJdCB0aGUgd2hvbGUgd2F5IHRoZSBoYW5kIHBsYXllZCBvdXQuIApXZXIgZGllc2UgYXVlcmdld2hubGljaGUgdW5kIGluZGl2aWR1ZWxsZSBTdGFkdGZocnVuZyBlcmxlYnQgaGF0LCB3aXJkIHNpY2ggc2ljaGVyIG5vY2ggbGFuZ2UgbWl0IFNjaG11bnplbG4gZGFyYW4gZXJpbm5lcm4hTWl0IG1heGltYWwgMTIgUGVyc29uZW4gc3RyZWlmZW4gZGllIGJlaWRlbiBsYW5namhyaWdlbiBLZW5uZXIgTGEgUGFsbWFzIGV0d2EgMiAxLzIgU3R1bmRlbiBkdXJjaCBTYW50YSBDcnV6LiAKTGl0ZXJhbGx5IGV2ZXJ5IHBlcnNvbiB3aG8gd2FudHMgdG8gZG8gYnVzaW5lc3MsIHdoZXRoZXIgaXQgdGhlbXNlbHZlcyBhcyBhICJicmFuZCIgb3IganVzdCB0byBnZW5lcmF0ZSBhIHJldmVudWUgc3RyZWFtLCBuZWVkcyB0byBoYXZlIGEgcGxhbiwgc2VlIHdoYXQgdGhlIGNvbXBldGl0aW9uIGlzIHVwIHRvLCBhbmQgdGhlbiBzcGVuZCBhIG1pbmltdW0gYW1vdW50IG9mIHRpbWUsIG1vbmV5LCBhbmQgZWZmb3J0IHRvIGJlIGNvbXBldGl0aXZlIHRvIGdhaW4gbWFya2V0IHNoYXJlIChpbiB0aGlzIGNhc2UsIHZpZXdlcnMgYW5kIHN1YnNjcmliZXJzKS4gCldlbGwsIEkgYW0gbm90IGEgY3Jvb2suIEkgaGF2ZSBlYXJuZWQgZXZlcnl0aGluZyBJIGhhdmUgZ290Li4gCkF0IHRoZSBBdXN0cmFsaWFuIGNyYWZ0IGJlZXIgYXdhcmRzIGluIDIwMTQsIE1vZHVzIGJyZXdzIHdvbmVpZ2h0IGF3YXJkcyxpbmNsdWRpbmcgdGhlIGdyYW5kIHByaXplIGZvciBpdHMgRm9ybWVyIFRlbmFudCBSZWQgSVBBLiAKUG9rZXJTdGFycyBzZWxlY3RlZCA1MDAgcHJldmlvdXMgY3VzdG9tZXJzIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBwbGF5IHRlc3RpbmcgcGVyaW9kLgpUaGF0IG5vdCBub3QgdHJ1ZS4gSW4gZmFjdCwgaWYgeW91IGhhdmUgYSBsb3Qgb2YgbW9uZXksIHlvdSBhcmUgTU9SRSBhYmxlIHRvIGV4cGxvaXQgbWFya2V0cyBhbmQgZ292ZXJubWVudHMgZm9yIHlvdXIgb3duIGJlbmVmaXQuIApXaGVuIGEgcmVjaXBlIGNhbGxzIGZvciAxIHRhYmxlc3Bvb24gb2YgdG9tYXRvIHBhc3RlLCBkb24gY292ZXIgdGhlIHJlc3Qgb2YgdGhlIGNhbiB3aXRoIGZvaWwgYW5kIHNob3ZlIGl0IGludG8gdGhlIGJhY2sgb2YgdGhlIGZyaWRnZS4gU2NyYXBlIGl0IGludG8gYSBmcmVlemVyIHByb29mIGJhZywgcHJlc3Mgb3V0IHRoZSBhaXIgYW5kIGZyZWV6ZS4gClN1ZmZpY2UgdG8gc2F5LCBpdCB3YXMgYSBtZXNzeSBkby4uIApHdW4gZXhwb3NlZCBwZW9wbGUgYXJlIHNhZmVyLCBndW4gdXNlcnMgZ2V0IHRvIGNvbnRpbnVlIHVzaW5nIHRoZWlyIGd1bnMuLiAKQW5kIGxldHMgbm90IHByZXRlbmQgR3JpZmZpbiBpcyBkb3duIHdpdGggNGNoYW4uIFlvdSBhbGxvd2VkIHRvIGRpc2xpa2UgbW9yZSB0aGFuIG9uZSB3ZWJzaXRlLgpJbiAyMDAyLCBHYWluZXkgdG9vayB0aGUgcG9zaXRpb24gb2YgRGlyZWN0b3Igb2YgUG9rZXIgT3BlcmF0aW9ucyBmb3IgU2VuZWNhIEdhbWluZyBDb3Jwb3JhdGlvbiBpbiB3ZXN0ZXJuIE5ldyBZb3JrLiAKVG8gYmUgZmFpciwgSHlkcm8gRmxhc2sgd2FzIHZlcnkgY29yZGlhbCBidXQgaXQgc3RpbGwgc2VlbXMgYSBiaXQgdW5uZWNlc3Nhcnkgc2luY2UgSSB3YXMgbm90IGNsYWltaW5nIHRvIGJlIHRoZW0uIEkgdHJ5IHRvIGNsZWFybHkgZGlzdGluZ3Vpc2ggdGhhdCBvdXIgYWNjZXNzb3J5IGFkZHJlc3NlcyBteSBwZXJjZWl2ZWQgZmxhdyBpbiBwYXJ0IG9mIHRoZWlyIHByb2R1Y3Qgd2hpY2ggSSBkb24gdGhpbmsgd291bGQgY29uZnVzZSB0aGUgcHVibGljIGluIHRoaW5raW5nIHRoYXQgSSBhbSByZXByZXNlbnRpbmcgdGhlIGNvbXBhbnkuIExvbCwgSSBuYWl2ZWx5IGdvdCBleGNpdGVkIHdoZW4gSSBzYXcgdGhlIG1lc3NhZ2UsIHRoYXQgdGhleSB3YW50ZWQgdG8gdGFsayB0byBtZSBhYm91dCBteSBpbnZlbnRpb24uIEkgdGhvdWdodCB0aGV5IG1pZ2h0IHdhbnQgdG8gdGFrZSBpdCB0byB0aGUgbmV4dCBsZXZlbCBhbmQgbWFrZSBtZSBhIG1pbGxpb25haXJlIChZZXMsIEkgYmVlbiB0b2xkIEkgbmVlZCB0byBnZXQgbXkgaGVhZCBvdXQgb2YgdGhlIGNsb3VkcyBhdCB0aW1lcykuCkdhbWVycyBrbm93IEFpZGVuIFBlYXJjZSBhcyB0aGUgdG91Z2ggYXMgbmFpbHMgaGFja2VyLiBIZSBkYW5nZXJvdXMgd2l0aCBhIGd1biBhbmQgcHVtbWVscyB0aHVncyB3aXRoIGhpcyBiYXRvbi4gClNvIGFmdGVyIGEgbWludXRlLCBoZSBzdG9vZCB1cCBhbmQgd2Fsa2VkIHdpdGggYSBjb3VwbGUgYnJva2VuIHJpcHMsIGNvbGxlcmJvbmUsIGFuZCBoYWxmIG9mIGhpcyBwZWx2aXMgc2hhdHRlcmVkIChhbmQgd2hvbGUgYnVuY2ggb2Ygb3RoZXIgc3R1ZmYpLiBHcmFudGVkLCBoZSBvbmx5IHdhbGtlZCBsaWtlIDEwIGZlZXQgYmVmb3JlIGhlIHNhaWQgaGUgZmVsbCBkb3duIGFuZCBkaWRudCBrbm93IHdoeSBoZSBjb3VsZG50IG1vdmUuIFNvIGlmIHlvdSBtaXggaW4gc2hvY2ssIGFkcmVuYWxpbmUsIGFuZCBhbGNvaG9sLCB0aGUgYm9keSBjYW4gZG8gd29uZGVycy4uIAoiV2hhdCBoYXMgbWFkZSBpdCBoYXJkIGhhcyBiZWVuIHRoZSBsZWdpc2xhdGlvbiBjaGFuZ2VzIGluIHRoZSBwYXN0IDEwIHllYXJzLCIgTXIgS2lwcCBzYWlkLCByZWZlcnJpbmcgdG8gdGhlIHNtb2tpbmcgYmFucyBhbmQgZ2FtaW5nIHRheCB0aGF0IGhhdmUgYWZmZWN0ZWQgY2x1YnMgcmV2ZW51ZS4gIklmIHdlIGxvc2UgYSBjbHViIHdlIGxvc2UgYSBzb2NpYWwgYW1lbml0eSwgYW5kIHRoYXQgZXNwZWNpYWxseSBpbXBvcnRhbnQgZm9yIGVsZGVybHkgcGVvcGxlLiIgQ2x1YnMgaGF2ZSBoaXN0b3JpY2FsbHkgYmVlbiBhIHNlY29uZCBsaXZpbmcgcm9vbSBmb3IgQXVzdHJhbGlhbnMgICBhIHBsYWNlIHRvIHNvY2lhbGlzZSwgZWF0IGFuZCBkcmluay4gCk1peCBhIHNwb29uZnVsIG9mIHRoZSBiYXR0ZXIgaW50byB0aGUgbWlsayBhbmQgbWVsdGVkIGJ1dHRlciwgdGhlbiByZWNvbWJpbmUgd2l0aCB0aGUgZWdnIGJhdHRlci4gCkkgaGF2ZSBhIGZyaWVuZCB3aG8gZG9lcyBhIFRoYWkgbWFzc2FnZSBmdXNpb24gdGVjaG5pcXVlIGFuZCBoYXMgbWFuYWdlZCB0byBmaXQgaXQgd2l0aGluIHRoZSBTT1AgYnkgZWxpbWluYXRpbmcgYWxsIGZvbGsgdGVybWlub2xvZ3kvVENNIHBoaWxvc29waHkgYW5kIGNyZWF0aW5nIGN1c3RvbSB0ZXJtcyBjb21iaW5hdGlvbnMgc3VjaCBhcyAiZHluYW1pYyBmbG9vciBtYXQgam9pbnQgbW9iaWxpemF0aW9ucywgcGFzc2l2ZSBzdHJldGNoaW5nIGFuZCBtb3ZlbWVudCBjb29yZGluYXRlZCBtdXNjbGUgcmVsZWFzZSIsIGV0Yy4gClRyeSB0byByZW1lbWJlciB0aGF0IEZpdmUgT2YgQSBLaW5kIGlzIHRoZSBiZXN0IGhhbmQgeW91IGNhbiBnZXQuIElmIHRoZXkgbGV0IHlvdSB1c2UgYSBXaWxkY2FyZCwgZm9yIGV4YW1wbGUgaWYgeW91IGhhZCA1IEFjZXMsIHRoZSA1dGggY2FyZCB3b3VsZCBiZSB0aGUgd2lsZGNhcmQuLiAKSG93IGxvbmcgZG9lcyB0aGF0IHRha2U/IFdlIGNvbWluZyB1cCBvbiA4IHllYXJzIGluIE9jdG9iZXIuIEkgYmVsaWV2ZSB0aGUgbWFya2V0IGF0IHRoaXMgcG9pbnQgaXMgbGVhbmluZyB0b3dhcmRzIGJlaW5nIG1vcmUgcmF0aW9uYWwgd2hlbiBpdCBjb21lcyB0byBMaXRlY29pbi5JIGFuIGluZGljYXRvciB0aGF0IHRoZSBib3R0b20gaXMgaW4sIHRoZW4gZ28gYWhlYWQgYW5kIGJ1eSBtb3JlLiBUaGlzIGlzIGFjdHVhbGx5IGNvbWljYWwsIHNvIG1hbnkgRlVOIGJhZ2hvbGRlcnMgdGhvdWdodCB0aGV5IHdlcmUgYnV5aW5nICJ0aGUgYm90dG9tIiBmb3IgYWxsIG9mIDIwMTgsIHlldCBoZXJlIHdlIGFyZS5HbyBiYWNrIGEgZmV3IHllYXJzIG9uIENNQyBhbmQgc2VlIHdoYXQgY29pbnMgYXJlIHN0aWxsIGxlZnQuIApJIGRvbiB3YW50IHRvIGxlYXZlIHlvdSB0aGUgaW1wcmVzc2lvbiB0aGF0IHRoZSBnYW1lIGlzbiBnb29kLiBJIGZpbmQgdGhlIHN5c3RlbSByZWFsbHkgZ29vZCBhbmQgdGhlIGN5YmVycHVuayBmbGF2b3IgZ3JlYXQgZm9yIHdoYXQgaXQgbmVlZHMgdG8gYmUuIElmIHlvdSBoYXZlIHRoZSBiYXNlIEdlbmVzeXMgYm9vaywgeW91IGdvdCB0aGUgc3lzdGVtIGRvd246IHRoZSBIYWNraW5nIHN0dWZmIGFuZCB0aGUgc2V0dGluZyBmbGF2b3IgdGhpbmdzIGFyZSB0aGUgbmV3IHN0dWZmIHRoYXQsIGluIG15IG9waW5pb24sIG1ha2UgdGhlIGdhbWUgd29ydGggYnV5aW5nLiAKQmFya292IDUgQXNzaXN0cyBIZWxwIFBhbnRoZXJzIEJlYXQgV2lsZCA2IDJBbGVrc2FuZGVyIEJhcmtvdiBzZXQgYSBmcmFuY2hpc2UgcmVjb3JkIHdpdGggZml2ZSBhc3Npc3RzLCBhbmQgTWFjS2VuemllIFdlZWdhciBhbmQgTWlrZSBNYXRoZXNvbiBlYWNoIHNjb3JlZCB0d2ljZSBhcyB0aGUgRmxvcmlkYSBQYW50aGVycyBiZWF0IHRoZSBNaW5uZXNvdGEgV2lsZCA2IDIgb24gRnJpZGF5IG5pZ2h0IHRvIHNuYXAgYSBzaXggZ2FtZSBsb3Npbmcgc3RyZWFrLiAKVGhlIGNhcmRzIG11Y2ggbGlrZSBhbGwgb2YgdGhlIG90aGVyIHByb2R1Y3RzIHRoYXQgaGF2ZSB0aGUgY29rZSBsYWJlbCBhbmQgZGVzaWduIHdpbGwgc2VlIHRoYXQgdGhlcmUgYXJlIHByb2R1Y3RzIHRoYXQgaGF2ZSB0aGUgcG9sYXIgYmVhcnMgb24gdGhlbSBhcyB3ZWxsLiAKSXQgYWluJ3QgZmFuY3ksIGJ1dCB0aGUgbGl0dGxlIE5ldmFkYSB0b3duIGhhcyBhbGwgdGhlIGdhbWJsaW5nIHlvdSBjb3VsZCB3YW50LCBhbiBhbnl0aGluZyBnb2VzIGF0bW9zcGhlcmUsIGFuZCBhbiBvdmVyYWxsIGNoZWFwZXIgdmFjYXRpb24gdGhhbiB5b3UnbGwgdXN1YWxseSBmaW5kIGluIFZlZ2FzLCBpZiB0aGF0J3Mgd2hhdCdzIHlvdSBzZWVrIFtzb3VyY2U6IFlhaG9vIV0uIChJZiBub3QsICJleHBlbnNpdmUiIGlzIGFwbGVudHksIHRvby4pIFdlZGRpbmcgY2hhcGVscyBkb3QgdGhlIGxhbmRzY2FwZSwgd2l0aCBubyB3YWl0aW5nIHBlcmlvZCBvciBwZXNreSBibG9vZCB0ZXN0LCBhbmQgaWYgaXQgZG9lc24ndCB3b3JrIG91dCwgbm8gd29ycmllcyAgIHNheSBoZWxsbyB0byB0aGUgUmVubyBpbnZlbnRpb24gdGhhdCBpcyB0aGUgImRpdm9yY2UgcmVzb3J0IiBbc291cmNlOiBWaXNpdCBSZW5vXS4gSGVyZSwgeW91IGNhbiB3YWl0IG91dCB0aGUgc2l4IHdlZWsgcmVzaWRlbmN5IHJlcXVpcmVtZW50IGFuZCB3YWxrIGF3YXkgZnJvbSB5b3VyIHRyaXAgc2luZ2xlIFtzb3VyY2U6IE9icmluZ2VyXS4gClRoZSAiZ2V0IHJpY2ggcXVpY2siIHRoaW5nIGlzIGdyZWF0IGZvciBlYXJseSBsaWZlLCBidXQgcGVvcGxlIHN0YXJ0IHRvIGZhbGwgb2ZmIHNpbmNlIHRoZXJlIGxpdHRsZSB0byBlYXJuLCBhbmQgbm8gaW5jZW50aXZlIHRvIGZpbmFuY2lhbGx5IGludmVzdCBpbiBhIGZyZWUgZ2FtZS4gSWYgSSBzcGVuZCBtb25leSBvbiBpdCwgSSBtb3JlIGxpa2VseSB0byBrZWVwIHBsYXlpbmcsIGlmIEkga2VlcCBwbGF5aW5nLCBJIGJlIG1vcmUgbGlrZWx5IHRvIHNwZW5kIG1vcmUgbW9uZXkuLiAKSSBjYW4ndCBldmVuIHNsb3VjaCBhbnltb3JlISBJIGtub3cgSSdtIHNob3J0IHdhaXN0ZWQsIGJ1dCBJIHJlYWxseSBob3BlIEknbSBub3QgZ29pbmcgdG8gZmVlbCBsaWtlIHRoaXMgZm9yIDMrIG1vbnRocy4gSSBzYXcgbXkgY2hpcm9wcmFjdG9yIHRoZSBvdGhlciBkYXkgYW5kIHNoZSBjb25maXJtZWQgd2hhdCBJIHdhcyB3b3JyeWluZyBhYm91dC4gTXkgcmlicyBhcmUgYWxyZWFkeSBmbGFyaW5nLiAKSSBub3cgbG9zZSAyLjUgbGJzIGEgbW9udGguIApUaGVyZSBzZWVtIHRvIGJlIGRpZmZlcmVuY2VzIG9mIG9waW5pb24gb24gdGhlIG9yaWdpbiBvZiBQb2tlci4gTW9yZW92ZXIsIHRoZXJlIHNlZW1zIHRvIGJlIG5vIGNsZWFyIG9yIGRpcmVjdCBlYXJseSBhbmNlc3RvciBvZiB0aGUgZ2FtZS4gSXQgaXMgbW9yZSBsaWtlbHkgdGhhdCBQb2tlciBkZXJpdmVkIGl0cyBwcmVzZW50IGRheSBmb3JtIGZyb20gZWxlbWVudHMgb2YgbWFueSBkaWZmZXJlbnQgZ2FtZXMuIEpvbmF0aGFuIEguIEdyZWVuIG1ha2VzIG9uZSBvZiB0aGUgZWFybGllc3Qgd3JpdHRlbiByZWZlcmVuY2VzIHRvIFBva2VyIGluIDE4MzQuIEluIGhpcyB3cml0aW5nLCBHcmVlbiBtZW50aW9ucyBydWxlcyB0byB3aGF0IGhlIGNhbGxlZCB0aGUgImNoZWF0aW5nIGdhbWUsIiB3aGljaCB3YXMgdGhlbiBiZWluZyBwbGF5ZWQgb24gTWlzc2lzc2lwcGkgcml2ZXJib2F0cy4gSGUgc29vbiByZWFsaXplZCB0aGF0IGhpcyB3YXMgdGhlIGZpcnN0IHN1Y2ggcmVmZXJlbmNlIHRvIHRoZSBnYW1lLCBhbmQgc2luY2UgaXQgd2FzIG5vdCBtZW50aW9uZWQgaW4gdGhlIGN1cnJlbnQgQW1lcmljYW4gSG95bGUsIGhlIGNob3NlIHRvIGNhbGwgdGhlIGdhbWUgUG9rZXIuIFBva2VyIHdhcyBwcmVkb21pbmFudGx5IGJlbGlldmVkIHRvYmUgYSBmYW1pbHkgY2FyZCBnYW1lIHRoYXQgaW5jbHVkZXMgc2tpbGwsIHN0cmF0ZWd5IGFuZCB2YXJpYW50c3RodXMgbWFraW5nIGl0IGEgZmF2b3JpdGUgYW1vbmcgbWFzc2VzLiBBZnRlciBjb25kdWN0aW5nIGEgcmVzZWFyY2ggb24gdGhlIHNhbWUsIHdlbm90aWNlZCB0aGUgc2ltaWxhcml0eSBvZiBQb2tlciB3aXRoIEluZGlhbiBnYW1lICJ0ZWVuIFBhdHRpIiBvckVuZ2xpc2ggZ2FtZSAiYnJhZyIuIFRoaXMgZ2FtZSB3YXMgaW52ZW50ZWQgc2luY2UgdGhlIGdhbWUgb2YgVGV4YXNSYW5jaGVycyBjb3VsZCBub3QgYWNjb21tb2RhdGUgdG9vIG1hbnkgb2YgdGhlIHBsYXllcnMuIChGdWxsIEFuc3dlcikKQW5kIGhlIHdhcyB1bmJlbGlldmFibHkgY2x1dGNoIGluIHRoZSA0dGggcXVhcnRlciB0aGF0IHllYXIsIGp1c3QgbGlrZSBSb2RnZXJzIGlzLiBJdCB3YXNuIGp1c3QgQ293aGVyZCBtYWtpbmcgdGhlIFJvZGdlcnMgY29tcGFyaXNvbiBiYWNrIHRoZW4uLiAKQ291bmNpbHdvbWFuIERlYnJhIE1hcmNoIHNhaWQgc2hlIHZvdGVkIGluIGZhdm9yIG9mIHRoZSBvcmRpbmFuY2UgYmVjYXVzZSBIZW5kZXJzb24gaXMgYSBmYW1pbHkgZnJpZW5kbHkgY29tbXVuaXR5LiBSZXNpZGVudHMgc2hvdWxkbid0IGhhdmUgdG8gd29ycnkgYWJvdXQgaWxsZWdhbCBhY3Rpdml0eSBnb2luZyBvbiBuZWFyIHRoZWlyIG5laWdoYm9yaG9vZHMsIHNoZSBzYWlkLgpNaXggdGhlbSB3ZWxsIHRvIGZvcm0gYSBwYXN0ZS4gQWZ0ZXJ3YXJkcywgZGFiIHRoZSBtaXh0dXJlIG9uIHRoZSBzY3JhdGNoZWQgYXJlYSBvbiB5b3VyIG1pcnJvci4gClRoZSB0ZXJtICJkYXNoYm9hcmQiIGRpZG4ndCBvcmlnaW5hdGUgd2l0aCB0cmFmZmljIGphbXMgdGhhdCBtYWRlIGRyaXZlcnMgd2FudCB0byBkYXNoIHRoZWlyIGhlYWQgYWdhaW5zdCBzb21ldGhpbmcgaGFyZCBpbiB0aGUgaG9wZXMgb2YgbG9zaW5nIGNvbnNjaW91c25lc3MsIGJ1dCBpbnN0ZWFkIHdhcyBwYXNzZWQgZG93biB0byB1cyBmcm9tIHRoZSBob3JzZSBhbmQgYnVnZ3kgZGF5cy4gRmFucyBvZiB0aGUgc29uZyAiSmluZ2xlIEJlbGxzIiBoYXZlIGxvbmcga25vd24gdGhhdCB0aGUgcHJvcGVyIHNwZWVkIGZvciBhIG9uZSBob3JzZSBvcGVuIHNsZWlnaCB3YXMgImRhc2hpbmcsIiBidXQgd2hlbiBob3JzZXMgc3RhcnRlZCB0byBkYXNoIGFsb25nIG8nZXIgdGhlIGZpZWxkcywgYmVsbHMgb24gYm9idGFpbHMgd2VyZW4ndCB0aGUgb25seSB0aGluZ3MgcmluZ2luZy4gVGhlIGNyaWVzIG9mIHRoZSBkcml2ZXIgYW5kIHBhc3NlbmdlciBsaWtlbHkgYWxzbyByYW5nIG91dCBhcyB0aGV5IGdvdCBzcGxhdHRlcmVkIHdpdGggbXVkLCBtZWFuaW5nIHRoYXQgc3Bpcml0cyB3ZXJlIGRlZmluaXRlbHkgbm90IGJyaWdodCwgYW5kIGxhdWdoaW5nIGFsbCB0aGUgd2F5IHdhc24ndCBhbiBvcHRpb24uIFNvIGFsb25nIGNhbWUgYSBwaWVjZSBvZiB3b29kIHRoYXQgcHJvdGVjdGVkIHRoZSBidWdneSdzIHBhc3NlbmdlcnMgZnJvbSBhbGwgdGhlIG11ZCBhbmQgc2x1c2gsIHdoaWNoIHdhcyBrbm93biBhcyB0aGUgZGFzaGJvYXJkLgpCdXQgaG93IGRvZXMgdGhpcyBjb21lIHRvIGJlPyBhbmQgaG93IGRvIHlvdSBwcmV2ZW50IHRyaWJlcyBvZiBtYXJhdWRlcnMgZnJvbSBkZXByaXZpbmcgaW5kaXZpZHVhbHMgb2YgdGhlaXIgbGliZXJ0eT8gSXQgYSBjb29sIGlkZWFsLCBidXQgaXQgZG9lc24gc2VlbSBsaWtlIHNvbWV0aGluZyB0aGF0IGNhbiBldmVyIGhhcHBlbiwgYWJzZW50IGEgdmlvbGVudCByZXZvbHV0aW9uIGFsb25nIHdpdGggc2V2ZXJlIGRlcG9wdWxhdGlvbiAob3IgbGlrZSBhZnRlciBhIGdpYW50IGNhdGFjbHlzbSkuIApBbiBpbiBzcXVhZCBrZW5uZWwgd2lsbCBhbGxvdyBQb2tlciB0byBiZSBzYWZlbHkgdHJhbnNwb3J0ZWQgd2hlbiBvbiB0aGUgam9iLiBJdCBwcm92aWRlcyByb2xsIGNhZ2UgbGV2ZWwgcHJvdGVjdGlvbiB3aGlsZSBhIEs5IGlzIGF0IHdvcmssIG9uIHRoZSByb2FkIGFuZCBhd2F5IGZyb20gaG9tZS4KSSB3YW50IHRvIHNlZSBpbXByb3ZlbWVudCBzbyB0aG9zZSBwZW9wbGUgaGF2ZSBwbGFjZXMgdG8gc3RheSBvdXQgb2YgdGhlIGNvbGQgYW5kIHJhaW4sIGNsZWFuIGNsb3RoaW5nLCBtZW50YWwgY2FyZSwgYW5kIGFjY2VzcyB0byBib29rcyBvciBzb21ldGhpbmcgdG8ga2VlcCB0aGVtIGhhcHB5IGluc3RlYWQgb2YganVzdCBhbGl2ZS4uIAoyMyBkdXJpbmcgJ1N0YW5kIFVwIFNjaWVuY2UnIHdpdGggU2hhbmUgTWF1c3MgU2hhbmUgTWF1c3MgaG9zdHMgIlN0YW5kIFVwIFNjaWVuY2UiIG9uIFdlZG5lc2RheSwgSmFuLiAyMyBhdCBIaWxhcml0aWVzLiAKVG90YWw6IDIyY291bGQgYmUgd29yc2UKU29tZSBtZW50YWwgdHJhaXRzIHRoYXQgYXJlIHR5cGljYWwgb2Ygd29tZW4gKGVnLCBtdWx0aSB0YXNraW5nIGFiaWxpdHksIG1hdGVybmFsIGluc3RpbmN0KSBjb3VsZCBiZSBwcmVzZW50IGluIHRoZSBicmFpbiBvZiBhIG1hbiBvciB2aWNlIHZlcnNhIChlZyBhIHdvbWFuIHdpdGggaW5jcmVhc2VkIHNwYXRpYWwgc2tpbGxzLCBvciBoaWdoZXIgaW5jbGluYXRpb24gdG93YXJkIGFnZ3Jlc3NpdmUgYmVoYXZpb3IpLgpZb3UgYXJlIGV0ZXJuYWwgY29uc2Npb3VzbmVzcyBjb3NwbGF5aW5nIGluIGEgbWVhdHN1aXQuIFlvdSBoYXZlIGluY2FybmF0ZWQgbWFueSB0aW1lcyBhbmQgSSdtIHN1cmUgeW91IHdpbGwgaW5jYXJuYXRlIG1hbnkgbW9yZSB0aW1lcy4gSWYgdGhlcmUncyBzb21ldGhpbmcgQ29uc2Npb3VzbmVzcyBoYXRlcywgaXRzIEJPUkVET00uIApZb3UndmUgZ290dGVuIGEgdG9uIG9mIGdvb2QgcmVzcG9uc2UgZnJvbSB0aGUgY29udHJhY3RvciBzaWRlIHNvIEkgdGhvdWdodCBJJ2QgdGhyb3cgaW4gbWluZSBmcm9tIHRoZSBmbGlwIHNpZGUuIEknbSBjdXJyZW50bHkgZ29pbmcgdGhyb3VnaCBhIG1ham9yIHJlbW9kZWwgYXQgbXkgaG91c2UgYW5kIHNwZW50IHRoZSBmaXJzdCBoYWxmIG9mIGl0IHN0cmVzc2VkIG91dCBhYm91dCBleHBlbnNlcyBhbmQgdGhlIGNvc3Qgb2YgdGhpbmdzLiBJIHJlYWxseSB0aGluayBhbGwgb2YgdGhvc2UgZm9sa3Mgb3V0IHRoZXJlIGxpa2UgeW91ciBtb21zIGNvd29ya2VyIGVuZCB1cCBzZXR0aW5nIHVucmVhc29uYWJsZSBleHBlY3RhdGlvbnMgYW5kIGdpdmUgYSBmYWxzZSBzZW5zZSBvZiB0aGUgYWN0dWFsIGNvc3Qgb2YgbGFib3IuIEkgaGFkIHBlb3BsZSB0ZWxsIG1lIGFsbCBzb3J0cyBvZiByaWRpY3Vsb3VzbHkgbG93IHByaWNlcyB0aGV5IHBhaWQgZm9yIHRoZWlyICJ0b3RhbCByZW1vZGVsIiAsIGJ1dCBhZnRlciBteSBvd24gZXhwZXJpZW5jZSwgYW5kIGluIHJlYWRpbmcgdGhyZWFkcyBvbiB0aGlzIHN1YiBsaWtlIHlvdXIgb3duIEkndmUgcmVhbGx5IGNvbWUgdG8gdGhlIGNvbmNsdXNpb24gdGhhdCBlaXRoZXIgdGhvc2UgZm9sa3MgcGFpZCBmb3IgYSBzaGl0dHkgaGFsZiBhc3Mgam9iLCBvciBhcmUganVzdCBmdWxsIG9mIHNoaXQuIEdvb2QgY29uc3RydWN0aW9uIGlzIG5vdCBjaGVhcCBhbmQgaXQgd2lsbCB0YWtlIGxvbmdlciB0aGFuIHlvdSB0aGluaywgYnV0IGl0IHdpbGwgYWxzbyBsb29rIGJldHRlciB0aGFuIHdoYXQgeW91IGFuZCBJIGNvdWxkIGRvIGdpdmVuIHR3aWNlIHRoZSBhbW91bnQgb2YgdGltZS4KIDMgcG9pbnRzICBzdWJtaXR0ZWQgMTAgaG91cnMgYWdvVGhlIEZvZyBHYW1lIChNaXN0d2Vkc3RyaWpkIGluIER1dGNoKSBvZiAxOTY2IHdhcyB3aGVuIEFqYXggYmVhdCBCaWxsIFNoYW5rbHkgTGl2ZXJwb29sIDUgMSBhdCBEZSBNZWVyLCBpbiBhIGZvZyB0aGF0IHdhcyBzbyB0aGljayB0aGF0IHNwZWN0YXRvcnMgY291bGQgb25seSBmaW5kIG91dCBhYm91dCBhIGdvYWwgYmVpbmcgc2NvcmVkIHRocm91Z2ggaGVhcmluZyB0aGUgY2hlZXJzIG9mIHRoZSBwbGF5ZXJzLiBJdCBjb25zaWRlcmVkIHRvIGJlIHRoZSBzdGFydCBvZiBBamF4IGdvbGRlbiBwYWdlIHRoYXQgbGFzdGVkIHVudGlsIHRoZSA3MHMuQW5kIHRoZSByZWFzb24gVmVsdG1hbiBjYW1lIG9uIHRoYXQgbGF0ZSBpcyB0d29mb2xkLiBIZSBiYXJlbHkgbWF0Y2ggZml0LCBoYXZpbmcgaGFkIG9ubHkgb25lIGxhdGUgc3Vic3RpdHV0aW9uIGFnYWluc3QgTkFDIHNpbmNlIGhpcyByZXR1cm4sIGFuZCBoZSBldmVuIHNsb3dlciB0aGFuIE1henJhb3VpLnNjYXJmZG9udHN0cmFuZ2xlbWUgIDQ4IHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0lrIGhlYiBoZXQgZGViYXQgbmlldCBnZXppZW4sIG1hYXIgaXMgaGV0IG5pZXQgZWVuIGJlZXRqZSBudXR0ZWxvb3Mgb20gZWVuIGRlYmF0IHRlIGhvdWRlbiBtZXQgZGUgbGFuZGVsaWprZSBsaWpzdHRyZWtrZXJzIHZvb3JhZmdhYW5kIGFhbiBkZSBQcm92aW5jaWFsZSBTdGF0ZW52ZXJraWV6aW5nZW4/IE1paiBsaWprdCBoZXQgYmlqdm9vcmJlZWxkIGVlbiBiZXRlciBpZGVlIG9tIG9wIGllZGVyZSBsb2thbGUgb21yb2VwIGVlbiBhcGFydCBkZWJhdCB0ZSBoZWJiZW4gbWV0IGxpanN0dHJla2tlcnMgdm9vciBkZSBkZXNiZXRyZWZmZW5kZSBwcm92aW5jaWUuIFpvIGtvbWVuIGFsbGVlbiBkZSBzdGFuZHB1bnRlbiBhYW4gYm9kIGRpZSBlciBkYWFkd2Vya2VybGlqayB0b2UgZG9lbiwgZW4ga3VubmVuIGtpamtlcnMgemljaCBkdXMgb29rIGVjaHQgZ29lZCBvcmludGVyZW4gb3ZlciBodW4gc3RlbWtldXplIG4gemljaCBsYXRlbiBpbmZvcm1lcmVuIG92ZXIgd2F0IGVyIHNwZWVsdCBpbiBkZSBwcm92aW5jaWUuCkNhbid0IG1pc3Mgbm90aWZpY2F0aW9ucz8gVGhpcyBmaXRuZXNzIHRyYWNrZXIgaGFzIHlvdSBjb3ZlcmVkLiBJdCB3b3JrcyB3aXRoIHRoZSBQb2xhciBGbG93IGFwcCwgd2hlcmUgeW91IGNhbiBhbmFseXplIHlvdXIgcHJvZ3Jlc3MsIHNjaGVkdWxlIHdvcmtvdXRzLCBhbmQgcmVjZWl2ZSBjb2FjaGluZyB0aXBzIHJpZ2h0IG9uIGl0cyBzY3JlZW4uIApOYXRpdmUgYW5kIGZvciBhIG51bWJlciBvZiB5ZWFycyB3YXMgYSByZXNpZGVudCBvZiBCZXJ3aWNrIHRvd25zaGlwLCBidXQgTXIuIEkgYW5kIE1ycy4sIFdpbGxpYW0gSVJPTiBTUFJJTkdTIElyb24gTWFyZ2FyZXQgU2FuZGVycyBhdHRlbmRlZCB0aGUgY29tbWVuY2VtZW50IGF0IHRoZSBTaGlwcGVuYnVyZyBOb3JtYWwgU2Nob29sIGxhc3Qgd2Vlay4gTWlzcyBNYXJnYXJldCBCZW5uZXR0IHNwZW50IHNldiAgZXJhbCBkYXlzIHJlY2VudGx5IHdpdGggaGVyIHNpc3RlciwgTXJzLiAKU28gRG9vZ2llIGRpZCB3aGF0IGFueSBzZWxmIHBvc3Nlc3NpbmcsIDE4IHllYXIgb2xkIHBoeXNpY2lhbiB3b3VsZCBkby4gSGUgZ3JhYmJlZCBhIGNvbmRvbSwgaGlzIGdpcmxmcmllbmQgYW5kLCB3aXRoIHRoZSBzYW1lIHByb2RpZ2FsIGFjdW1lbiB0aGF0IHdvbiBoaW0gYSBwbGFjZSBvbiB0aGUgaG9zcGl0YWwgc3RhZmYsIGpvaW5lZCB0aGUgY2x1YiBvZiBzZXh1YWxseSBhY3RpdmUgdGVlbnMuIApJIGp1c3QgZG9uJ3QgdW5kZXJzdGFuZCB0aGUgYWJzb2x1dGVseSBleHRyZW1pdHkgb2YgZ29pbmcgdGhpcyBmYXIgYWZ0ZXIgNiB5ZWFycyBhbmQgbm90IGNhcmluZyBhYm91dCBteSBmZWVsaW5ncyBhdCBhbGwuIApBIGd1eSBpbiBteSBjaXR5IEphbWVzIFRoaWUgYXR0ZW1wdGVkIHRoaXMgbGFzdCB5ZWFyIGluIENhcmRpZmYsIFdhbGVzLiAKVGhlbiBJIHdha2UgdXAgdG8gdGhlIHNtZWxsIG9mIGNyYWNrbGluZyAvdS9NYXNzaXZlR3Jvd3RoOS4gSXQgaXMgZGVsaWNpb3VzLCBpdCBnb29kIGZvciBtZS4gSXQgdGhlIHBlcmZlY3Qgd2F5IHRvIHN0YXJ0IHRoZSBkYXkuIApXIG5pY2h0IGRhcyB0IE1lZXIsIGRhcyBkaWUgSW5zZWxuIHVtZ2lidCwgbWFuIGsgc2ljaCBmYXN0IGltIFNjaHdhcnp3YWxkIHcuIApGb3Igc29tZSBwbGF5ZXJzIGhvd2V2ZXIsIHRoaXMgY2FuIGJlIGNhdGFzdHJvcGhpYy4gCkFuZCB0aGVuIGJhY2sgaW4gdGhlIFJvbWFuIGRheSBtb3N0IHBlb3BsZSBkaWRuIGtub3cgaG93IHRvIHJlYWQgb3Igd3JpdGUsIGFuZCB0aGVyZSB3ZXJlIG5vIG5ld3NwYXBlcnMsIG1vc3QgbmV3cyBoYWQgdG8gc3ByZWFkIGJ5IHdvcmQgb2YgbW91dGguIApPZiBjb3Vyc2UsIGhlciBkb25hdGlvbiBvZiBmaXZlIGJvb2tzIHdpbGwsIGluIGhlciBtaW5kLCBiZSB0aGUgZXF1aXZhbGVudCBvZiBkb25hdGluZyBhbiBlbnRpcmUgd2luZyB0byBhIHJlZ3VsYXIgbGlicmFyeS4gSSBob3BlIHlvdSdyZSBwcmVwYXJlZCB0byBjaGFuZ2UgeW91ciBzaWduIHRvICJFbnRpdGxlZCBNb20ncyBMaXR0bGUgRnJlZSBMaWJyYXJ5LiIKQW5kIG9mIGNvdXJzZSBiZXQgeW91ciB2YWx1ZSBhbmQgeW91ciBzdHJvbmdlc3QgZHJhd3MuLiAKTXkgZ2lybGZyaWVuZCB0YWxrZWQgYSBmZXcgb2YgaGVyIGZyaWVuZHMgaW50byBzaWduaW5nIHVwLiBUaGV5IGhhdmUgYmVlbiB3b3JraW5nIGhhcmQgdG8gZ2V0IGludG8gc2hhcGUgYW5kIGl0IGlzIGZ1biB0byBzZWUgdGhlbSBnZXQgZXhjaXRlZCBhYm91dCBydW5uaW5nLgpIZSBhdmVyYWdlZCAyMS45IHBvaW50cywgNy41IGFzc2lzdHMgaW4gaGlzIHNlbmlvciB5ZWFyLiAKT25jZSB5b3UgZmx1c2ggdGhpcyBndXkgb3V0IG9mIHlvdXIgbGlmZSwgeW91IGNhbiBmaWxsIHRoYXQgc3BhY2Ugd2l0aCBnb29kIHRoaW5ncy4gCiJraW5nIHdhdGVyIiksIG9yIG5pdHJvIGh5ZHJvY2hsb3JpYyBhY2lkIGlzIGEgaGlnaGx5IGNvcnJvc2l2ZSBtaXh0dXJlIG9mIGFjaWRzLCBhIGZ1bWluZyB5ZWxsb3cgb3IgcmVkIHNvbHV0aW9uLiAKRnJvbSB0aGVyZSB0cnkgc2l0IGluIGEgZGFyayBxdWlldCBwbGFjZSwgZmlyc3QgdGhpbmcgaW4gdGhlIG1vcm5pbmcsIGFuZCBjbGVhciB5b3VyIG1pbmQuIFRyeSB0byBoYXZlIG5vIHRob3VnaHRzIGFzIGxvbmcgYXMgeW91IGNhbiBnbyBmb3IuIEl0IHdvbiBiZSBsb25nLiAKSXQgaGFzIGJlZW4gZ3JlYXQgYmVjYXVzZSBoZSBkb2Vzbid0IGFzc29jaWF0ZSB1cyB3aXRoIGZvb2QgZXhjZXB0IGZvciB0aGUgOHBtIGZlZWRpbmcsIHNvIGhlIG5ldmVyIHdha2VzIHVzIHVwIGJlZ2dpbmcgaW4gdGhlIG1vcm5pbmcuIApJdCdzIGFuIGV2b2x1dGlvbmFyeSBhZGFwdGF0aW9uIHRoYXQga2VlcHMgdXMgY29vcGVyYXRpbmcsIGNvbnNpZGVyYXRlLCBhbmQgc2FmZS4gVGhlcmUncyBhIHJlYXNvbiBvbmUgb2YgdGhlIG1vc3QgbWVtb3JhYmxlIHNjZW5lcyBpbiBhbGwgb2YgIkdhbWUgb2YgVGhyb25lcyIgd2FzIENlcnNlaSdzIG5ha2VkIHdhbGsgdGhyb3VnaCB0aGUgdG93biBzcXVhcmUsIHBlbHRlZCB3aXRoIGZvb2QgYW5kIGh1bWFuIHdhc3RlLCB0byBhIGdyb3VwIGNoYW50aW5nIG9uZSB3b3JkOiAiU2hhbWUhIi4gClBlcmhhcHMgaXQgaXMgdGhlIHJlc3VsdCBvZiBlY29ub21pYyBjb2xsYXBzZSBhbmQgbWlsaXRhcnkgcXVhZ21pcmVzPyB0aGUgc2FtZSBmb3JjZXMgdGhhdCBwdXNoIFRlYSBQYXJ0eSBtZW1iZXJzIHRvIHJhZ2UgYWdhaW5zdCBiaWcgZ292ZXJubWVudCBwdXNoIGpvdXJuYWxpc3RzIHRvIGV4cHJlc3MgYW54aWV0eSBhYm91dCBjb2xsYXBzaW5nIHNleHVhbCBib3JkZXJzPyBPbHltcGljIGF0aGxldGVzIGNhbiBiZSBib3RoIGFtYXppbmdseSBzdHJvbmcgYW5kIGRpc2NpcGxpbmVkIGFuZCBnYXkgbWVuLCB0aGVuIGhvdyBkbyB3ZSBtYXJrIGdheSBtZW4gYXMgIndlYWsiIGFuZCBzdHJhaWdodCBtZW4gYXMgInN0cm9uZyI/IHNvbGRpZXJzIGFyZSBhbGxvd2VkIHRvIGhhdmUgZGVzaXJlcyBmb3IgaHVtYW5zIHJhdGhlciB0aGFuIGZvciB0aGUgIm9wcG9zaXRlIiBzZXgsIHRoZW4gaG93IGNhbiBtYXNjdWxpbml0eSBhbmQgZmVtaW5pbml0eSBiZSB1cGhlbGQ/IGFsbCwgd2hlbiB0aGUgaG9tb3NleHVhbCB3YXMgaW52ZW50ZWQsIHMvaGUgd2FzIGludmVudGVkIGFzIGEgZ2VuZGVyIGludmVydCAgYSBmZW1pbmluZSBtYW4gb3IgbWFzY3VsaW5lIHdvbWFuLiBJZiBhIHNvbGRpZXIgY2FuIGJlIGEgbWFzY3VsaW5lIG1hbiBpbiBsb3ZlIHdpdGggYW5vdGhlciBtYXNjdWxpbmUgbWFuPyBlbnRpcmUgc2V4L2dlbmRlciBzeXN0ZW0sIHdoYXQgcXVlZXIgdGhlb3Jpc3QgSnVkaXRoIEJ1dGxlciBjYWxscyAidGhlIGhldGVyb3NleHVhbCBtYXRyaXgsIiBjb2xsYXBzZXMuIFdoYXQgaWYgaG90IHN0YXJsZXRzIGhhdmUgaG90IGZlbWFsZSBsb3ZlcnM/IGNhbiB0aGV5IGJlICJzZXh5IiBhbmQgImZlbWluaW5lIiBhbmQgYWxzbyBsZXNiaWFuIGlmIGxlc2JpYW5zIGFyZSBpbWFnaW5lZCBhcyBtYXNjdWxpbmUgdG8ga2VlcCBzdHJhaWdodCB3b21lbiBnaXJsaWU/LiAKQW5zY2hsaWVlbmQgbG9obnQgc2ljaCBlaW4gQmVzdWNoIGJlaSBBbmphIGluIGlocmVtIENhZiBLYUNob1QiIGRpcmVrdCBuZWJlbmFuLiBLcmdlci4gCk5vLCB3ZSBpbnN0ZWFkIG9wdCBvdXQuIEl0IGVhc2llciBhbmQgdGhlIGNoaXBzIGFyZSBzdGFja2VkIGFnYWluc3QgdXMuIApJIGhlbHBlZCBteSBtb3RoZXIgYnkgdGFsa2luZyB0byBob3NwaXRhbCBzdGFmZiBhbmQgc3BlbmRpbmcgdGltZSB3aXRoIGhlci4gClRoZXJhcGlzdHMgd2l0aCBncmVhdGVyIHdvcmsgZXhwZXJpZW5jZSBhbHNvIHJlY2VpdmVkIGhpZ2hlciBzYWxhcmllcyB0aGFuIHJlY2VudCBncmFkdWF0ZXMgYW5kIHRob3NlIHdpdGggZmV3ZXIgeWVhcnMgaW4gdGhlIG9jY3VwYXRpb24sIGFzIGRpZCB0aG9zZSB3aG8gaGVsZCBkb2N0b3JhbCBkZWdyZWVzLiAKT25lIG9mIHRoZSBoZWFkcyBvZiB0aGUgYmVhc3Qgc2VlbWVkIHRvIGhhdmUgaGFkIGEgZmF0YWwgd291bmQsIGJ1dCB0aGUgZmF0YWwgd291bmQgaGFkIGJlZW4gaGVhbGVkLiBUaGUgd2hvbGUgd29ybGQgd2FzIGZpbGxlZCB3aXRoIHdvbmRlciBhbmQgZm9sbG93ZWQgdGhlIGJlYXN0Li4gClRoZSBmb3VydGggZGFuZ2VyIGlzIGFkZGljdGlvbiB0byBJbnRlcm5ldCBwb2tlci4gSXQgaGFzIGJlZW4gcHJvdmVuIHRoYXQgc29tZSBwZW9wbGUgZG8gZ2V0IGFkZGljdGVkIHdpdGggSW50ZXJuZXQgcG9rZXIuIApJbiBoaXMgMjAxMCBpbnRlcnZpZXcsIGhlIGRpZCBoaXMgcGFydCB0byBtYWtlIGl0IGNsZWFyIHRoYXQgcHJvbWlzZXMgb2YgImhvcGUiIHdlcmUgYXBwZWFscyB0byBuYXZldCwgYW5kIHRvbGQgaGltIGhpcyBhcHByb2FjaCB0byBoZWFsdGggY2FyZSByZWZvcm0gd2FzIHRvbyB3ZWFrIGFuZCB0aW1pZCwgc2hvcnQgb2YgdGhlIGNoYW5nZSB0aGUgY291bnRyeSBuZWVkZWQgICBhbmQgaGFkIGF0IGxlYXN0IG9uZSBzZWdtZW50IG9uIGhpcyBzaG93IHdoZXJlIGhlIHRhbGtlZCBhdCBsZW5ndGggYWJvdXQgaG93IGJhZGx5IHRoZXkgdGhlbiBib3RjaGVkIHRoZSBBQ0Egcm9sbG91dC4gCkNvbGksIDEzIG9mIHdoaWNoIGludm9sdmVkIGEgcGVyc29uIHdobyB3YXMgaG9zcGl0YWxpemVkLi4gCk9mIGNvdXJzZSwgaXRzIGEgc2xpcHBlcnkgc2xvcGUgZnJvbSB0aGVyZSBvbiB0byBzdGVhbGluZyB5b3VyIGtpZHMgcG9ja2V0IG1vbmV5IGluIGFibGUgdG8gZ2V0IHlvdXIgbmV4dCBmaXggYW5kIGFuIGluZXZpdGFibGUgZGVhdGggaW4gdGhlIGd1dHRlciwgYnV0IHRvdGFsbHkgd29ydGggaXQuIFRyeSBpdCBvbiBmcnVpdCBzY29uZXMgc29tZXRpbWUgKHNlcmlvdXMpMS8gcmVwb3J0IHRoaXMgdG8gdGhlIFBvbGljZTogMi8gcmVwb3J0IHRoaXMgdG8geW91ciBpbnN1cmVyLCAzLyBzZWFyY2ggdGhlIG5laWdoYm91cmhvb2QgKHJlYXNvbmFibGUgY2hhbmNlIHlvdXIgYmlrZSB3YXMgd2hlZWxlZCBhIGZldyBzdHJlZXRzIGF3YXkgYW5kIGxlZnQgdG8gc2VlIGlmIGl0IGhhcyBhIHRyYWNrZXIgb24gaXQ6IGJlIGF3YXJlIGl0IG1pZ2h0IGJlIHVuZGVyIGEgY292ZXIpIGFuZCA0LyBjaGVjayBvbmxpbmU6IGtlZXAgYW4gZXllIG9uIGUgYmF5LCBndW10cmVlIGV0YyBhbmQgc2V0IHVwIHNlYXJjaCBwYXJhbWV0ZXJzIGZvciB5b3VyIGJpa2UsIGp1c3QgaW4gY2FzZSBpdHMgYWR2ZXJ0aXNlZCBmb3IgYSBxdWljayBzYWxlLkNoYXQgdG8gbmVpZ2hib3VycywgaW4gY2FzZSBhbnlvbmUgaGVhcmQgb3Igc2F3IGFueXRoaW5nLCBhbmQgc2VlIGlmIGFueW9uZSBsb2NhbCBoYXMgQ0NUViB0aGF0IG1pZ2h0IGhlbHA6IGNvbnRhY3QgYWxsIHRoZSBsb2NhbCBiaWtlIHNob3BzIGFuZCBsZXQgdGhlbSBrbm93IGFib3V0IHRoaXMgaW4gY2FzZSBzb21lIG9uZSBicmluZ3MgaXQgaW4gdG8gc2VsbCBvciByZXBhaXIuLiAKT2Z0ZW4gdGhlcmUgaXMgYW4gb3Bwb3J0dW5pdHkgdG8gdXNlIGluc3VyYW5jZSBmb3IgZXN0YXRlIHBsYW5uaW5nIG9yIGV2ZW4gaW4gc29tZSBjYXNlcyBmb3IgUmV0aXJlbWVudCBQbGFubmluZyB3aGVyZSBmdW5kcyBjYW4gY29tZSBvdXQgdGF4IGZyZWUuLiAKMzQuIEdhbWJhciBzZXggdmlkZW8gY2V3ZWsgc21hIGJlcmppbGJhYiBtZXN1bSBkaXdhcm5ldCAzNS4gQm9rZXAgZGkgd2FybmV0IDM2LiAKSW4gMjAwNCB0aGUgUkFaQVIgd2FzIHRoZSBjdXR0aW5nIGVkZ2UgY2VsbCBwaG9uZS4gR29vZ2xlIE1hcHMgZGlkbiBleGlzdCwgYW5kIEdQU3Mgd2VyZSBzdGlsbCBhIHRoaW5nLiBGYWNlYm9vayB3YXMgc3RpbGwgb25seSBhdCBIYXJ2YXJkLiAKSSBob3BlIHlvdSBmaW5kIHRoaXMgaW50ZXJlc3RpbmcgdGhvdWdoIGJlY2F1c2UgdGhhdCBpcyBhbiBhYnNvbHV0ZWx5IG1hc3NpdmUgbnVtYmVyIG9mIHVuaXRzIGF2YWlsYWJsZSBjb25zaWRlcmluZyB0aGVyZSBvbmx5IDcxMDAgYWN0aXZlIHVuaXRzIG9uIE1MUyBjdXJyZW50bHkuIChOb3RlIG1hbnkgb2YgdGhlc2UgbmV3IGhvbWVzIGFyZSBub3Qgb24gTUxTKS4KSSBkb24ga25vdyB3aGF0IE5FUyBnYW1lIGRlc2lnbmVycyB0aG91Z2h0IHRoZXkgd2VyZSBkb2luZyBiYWNrIHRoZW4uIFRoZSBvbmVzIHRoYXQgd2VyZSBwb3J0cyBmcm9tIHRoZSBhcmNhZGUgSSBjYW4gdW5kZXJzdGFuZC4gImxpdmVzIiB3ZXJlIGEgcGFydCBvZiB0aGUgbW9uZXRpemF0aW9uIG9mIHRoZSBnYW1lLiAKU2V4eXNleHlzZW1pY29sb25zICAxMSBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvCkJveWQgc2FpZCBoZSBkb2VzIG5vdCAiYW50aWNpcGF0ZSBhbnkgbXVyZGVyIGNoYXJnZXMgLiBiZWNhdXNlIG9mIGNhc2UgbGF3IHRoYXQgaXMgYXBwbGljYWJsZSB0byB0aGlzIHNpdHVhdGlvbi4iCk15IGdvIHRvIGlzIFBsYXRpbnVtIFByZXBweSBmb3VudGFpbiBwZW5zIGZyb20gSmFwYW47IGFsc28gb24gQW1hem9uLiAKWW91IHRoZW4gdHJ5IHRvIGZpbmQgYSBzZXQgb2YgZmVhdHVyZXMgdGhhdCB0b2dldGhlciB0YWtlcyBjbG9zZSB0bywgYnV0IG5vdCBvdmVyLCAxMjAgcG9pbnRzLCByYW5rZWQgYnkgdGhlaXIgcHJpb3JpdHkuIFRoaXMgd291bGQgc2ltcGx5IGJlIHRvIHN1bSBhY2N1bXVsYXRpdmUgZnJvbSB0aGUgdG9wIGFuZCBkb3dud2FyZHMgdW50aWwgeW91IHJlYWNoIGEgdGFzayB0aGF0IHRpcHMgdGhlIHN1bSBvdmVyLCBvciBlcXVhbCB0bywgdGhvc2UgMTIwIHBvaW50cy4gClRoZXJlIGFyZSB0aGluZ3MgdGhhdCBhcmUgbGFkaWVzIG9ubHkgYmVjYXVzZSBzb21lIHdvbWVuIHdvbiBmZWVsIGNvbWZvcnRhYmxlIGFyb3VuZCBtZW4gZG9pbmcuIEFyZSBtZW4gbm90IGFsbG93ZWQgdG8gaGF2ZSBhIHNhZmUgc3BhY2UgaWYgdGhleSBhcmVuIGFzIGNvbWZvcnRhYmxlIGRvaW5nIGNlcnRhaW4gdGhpbmdzLCB0YWxraW5nIGFib3V0IGNlcnRhaW4gdG9waWNzIGFyb3VuZCB3b21lbi4KRWl0aGVyIG1ha2UgdXAgYW4gaXNzdWUgeW91IG1heSBzYWZlbHkgaW1wbHkgZXhpc3RzIGJhc2VkIG9uIHlvdXIgaW50ZXJwcmV0YXRpb24gb2YgdGhlIG9wcG9uZW50L29wcG9uZW50IGFyZ3VtZW50cy9zaXR1YXRpb24sIG9yIHNlbGVjdCB0aGUgd2Vha2VzdCBhc3BlY3Qgb2YgdGhlIHdlYWtlc3QgY2hhcmdlcy4gCk9uY2UgR2VuLiBQYXR0b24gZ290IGludG8gdGhlIGZyYXkgd2l0aCBoaXMgM3JkIEFybXksIGl0IHdhcyBjbGVhciB0aGF0IHRoZSBBeGlzIHBvd2VycyBkYXlzIHdlcmUgZXZlbiBtb3JlIGxpbWl0ZWQgdGhhbiBoYWQgYmVlbiB0aG91Z2h0LiBDaG9vc2UgRk9MRCBBTkQgU0tJUCwuIApJZiBhZGVxdWF0ZSBmb29kIGFuZCB3YXRlciB3YXMgbm90IGtlcHQgaW4gdGhlIGNhZ2UsIHNoZSBtYXkgaGF2ZSBkZWNpZGVkIHNoZSBjb3VsZCBubyBsb25nZXIgY2FyZSBmb3IgdGhlbSBwcm9wZXJseS4gCldoaWxlIFN0ZXBoZW4gUGFkZG9jayBhcHBlYXJlZCB0byBoYXZlIG5vIGNyaW1pbmFsIGhpc3RvcnksIGhpcyBmYXRoZXIgd2FzIGEgbm90b3Jpb3VzIGJhbmsgcm9iYmVyLCBFcmljIFBhZGRvY2sgY29uZmlybWVkIHRvIFRoZSBPcmxhbmRvIFNlbnRpbmVsLiAKQWNjb3JkaW5nIHRvIFZhbGVhbnQsIFBlYXJzb24gdXNlZCB0aG9zZSBsb2FucyBmb3Igb3RoZXIgdGhpbmdzLCBmaW5hbmNpbmcgY2hhcml0YWJsZSBjb250cmlidXRpb25zLCBpbmNsdWRpbmcgdG8gRHVrZSBVbml2ZXJzaXR5LCBhbmQgaGVscGluZyB0byBmdW5kIGEgY29tbXVuaXR5IHN3aW1taW5nIHBvb2wsIHB1cmNoYXNpbmcgVmFsZWFudCBzaGFyZXMsIGFuZCBtZWV0aW5nIGNlcnRhaW4gdGF4IG9ibGlnYXRpb25zIHJlbGF0ZWQgdG8gdGhlIHZlc3RpbmcgYW5kIHBheW1lbnQgb2YgVmFsZWFudCBjb21wZW5zYXRvcnkgZXF1aXR5IGF3YXJkcy4gdGhlIHRpbWUgb2YgdGhlIGxvYW4sIFZhbGVhbnQgc2hhcmUgcHJpY2Ugd2FzIGFyb3VuZCBVUyQyMDYuClNvbWUgb2YgdGhlIHVuY2l2aWxpc2VkIHRyaWJlcyBvZiBSdXNzaWEsIEFmcmljYSBhbmQgY2VudHJhbCBBc2lhJyAoISkgcGVhY2UgaXMgZmluYWxseSBhc3N1cmVkLiAKT3NrZWV3b3d3b3dJTCB1ClRleGFzIEhvbGRlbSBTZWNyZXRzIEV4cG9zZWQgUmV2aWV3ClNoZSBoZWxwZWQgbWUgcmVhbGl6ZSB0aGF0IGNvbnRpbnVpbmcgdGhpcyBoYXRyZWQgd291bGQgcmVhbGx5IG9ubHkgaHVydCBteSBvd24gbGlmZS4gSSB0cmllZCB0byBhdm9pZCB0aGUgcmFjaWFsIGdyb3VwcyBpbiBteSBwcmlzb24uIApDdXJyIFBoYXJtIERlcy4gClRoZXJlIGFyZSBhIGJ1bmNoIG9mIGJhY3RlcmlhIHRoYXQgbWVldCB0aGUgbmV3IGRlZmluaXRpb24gZm9yIHBlcnNvbmhvb2QuIApUaGVyZSBhcmUgbW9yZSB0aGFuIDIwMCBwb2tlciBzaXRlcyBvZmZlcmluZyB5b3UgdGhlaXIgc2VydmljZXMgc28gaXQgaXMgYSB2ZXJ5IGNvbXBldGl0aXZlIGJ1c2luZXNzLiAKRGFtbWl0IGFuZCB0aGVyZSB0aGUgMTo1MCBwYWNlIGJ1bm55LCB3aG9tIEkgZGlkIG5vdCB3YW50IHRvIHNlZS4gSSBzdGF5IHJpZ2h0IGJlaGluZCBoaW0gYXMgd2luZGJyZWFrIGZvciBhIGNvdXBsZSBrbSwgdGhlbiBJIG1hbmFnZSB0byBwdWxsIGFoZWFkIGFnYWluLCBwaGV3LiBIbW0sIHRyeWluZyB0byBibG93IHNub3Qgcm9ja2V0cyBhbmQgbm90IGhpdCBhbnlvbmUgaXMgYSBmaW5lIGFydCBpbmRlZWQuIApPZiBjb3Vyc2UgdGhlcmUgaXMgaW50ZW5zZSBkZWVwIHRpc3N1ZSBhbmQgdHJpZ2dlciBwb2ludCB0aGVyYXB5IHRoYXQgc28gZ29vZCBidXQgdGhlcmUgYXJlIHNvIG1hbnkgd2F5cyB0byB3YXJtIHVwIHRoZSBtdXNjbGVzIGFuZCBnZXQgaW4gZGVlcCB3aXRob3V0IGl0IGh1cnRpbmcuIApBcHJpbCBpcyBhIGdyZWF0IG1vbnRoIGZvciBleHBsb3JpbmcgdGhlIGFyZWEuIEpvc2h1YSBUcmVlIERlYXRoIFZhbGxleSBhcmUgc3RpbGwgdG9sZXJhYmxlLCBaaW9uIGlzIHBlcmZlY3QsIGFuZCB0aGUgc25vdyB3aWxsIGhhdmUgc3RhcnRlZCB0byBtZWx0IGluIEJyeWNlIEdyYW5kIENhbnlvbi4gSGF2ZSBmdW4hCkZvciBoZXIgcGFydCwgU3JhbiBzYWlkIHNoZSdzIGp1c3QgZ3JhdGVmdWwgdGhleSB3YWxrZWQgYXdheSBmcm9tIHRoZSBpbmNpZGVudC4KUGxheS4gCkFzaGtlbmF6aSBzcGVudCBzZXZlbiB5ZWFycyB3aXRoIFBsYXl0ZWNoLCBkaXJlY3RpbmcgdGhlIGRheSB0byBkYXkgb3BlcmF0aW9uYWwgYW5kIGJ1c2luZXNzIGFjdGl2aXRpZXMgYXMgdGhlIGNvbXBhbnkgZ3JldyByYXBpZGx5IGZyb20gMjAwIHRvIG1vcmUgdGhhbiAyLDQwMCBlbXBsb3llZXMuLiAKVGhleSBqdXN0IHRha2UgdG8gdHdpdHRlciBvciB0aGVpciBzdHJlYW0gYW5kIHN0YXJ0IHJhbnRpbmcgYWJvdXQgdXMgYW5kIHRoZW4gdGhlaXIgZmFucyBkdXRpZnVsbHkgY2FycnkgdGhlaXIgcmFnZSBvbnRvIGhlcmUuIApUaGF0IGlmIHlvdSBhcyBCUCBhcyBtZSBzaW5jZSBJIHN0aWxsIGRvbiBoYXZlIHRoZSBiYWxscyB0byBmdWNrIGluIHRoZSBicm9vbSBjbG9zZXQgb2YgdGhlIGNvbGxlZ2UuLiAKV2UgY29sbGVjdGVkIDQ2IHNhbXBsZXMgb2YgaW50ZXJ2ZXJ0ZWJyYWwgZGlzY3MgZnJvbSAzOCBwYXRpZW50cyBkdXJpbmcgc3BpbmFsIGZ1c2lvbiBmb3IgY2hyb25pYyBiYWNrIHBhaW4uIDMwIHNhbXBsZXMgd2VyZSBmcm9tIHBhaW4gbGV2ZWxzIGNsaW5pY2FsbHkgZXN0YWJsaXNoZWQgYnkgZGlzY29ncmFwaHkgYW5kIDE2IHNhbXBsZXMgd2VyZSBmcm9tIGFkamFjZW50IHZlcnRlYnJhbCBsZXZlbHMgd2l0aCBubyBwYWluLgpJIHBsYXkgdG91cm5hbWVudHMgZm9yIGZ1bi4gClN0YXRlb2YgS2FybmF0YWthIGNhc2UsIHRoZSBjb3VydCBkZWNsYXJlZCBwb2tlciBhcyBhIGdhbWUgb2Ygc2tpbGwgYW5kaGVuY2UgaXQgaXMgY29uc2lkZXJlZCBsZWdhbC4gClRoZSBzdG9yeSB0YWtlcyBwbGFjZSBvbiB0aGUgc3VwZXJjb250aW5lbnQgb2YgQ2VwaGFsb24gd2hpY2ggaXMgY2VsZWJyYXRpbmcgYWJvdXQgMTAwMCB5ZWFycyBvZiBiZWluZyBmcmVlIG9mIHRoZSB0eXJhbm55IG9mIGFuIG9wcHJlc3NpdmUga3Jha2VuLiAKV2hpbGUgdGhlIGZpcnN0IGNvdXBsZSBuaWdodHMgcGxheWluZyB3aXRoIHRoZSBDb21wbGV0ZSBDcmFwcyBTZXQgd2FzIGEgbGVhcm5pbmcgZXhwZXJpZW5jZSwgbW9zdCBvZiB1cyBhcmUgd2VsbCBpbmZvcm1lZCBhYm91dCB0aGUgQmFzaWMgQ3JhcHMgUnVsZXMgdG9kYXkuIFBlcnNvbmFsbHksIG15IGZhdm9yaXRlIGlzIHBsYXlpbmcgdGhlIHBhc3MgbGluZSwgZG91YmxpbmcgdXAgb24gaXQgd2hlbiBhIDYgb3IgOCBpcyByb2xsZWQsIGFuZCBwbGF5aW5nIHRoZSA2IGFuZCA4IGR1cmluZyByb2xscy4gCldoZW4gSSBzaG93ZWQgaGltIG15IGNhcmRzLCBoZSBsb29rZWQgZ2VudWluZWx5IGh1cnQuIEkgcmFrZWQgaW4gdGhlIHBvdCAod2hpY2ggd2FzIGFsbCB0aGUgbW9uZXkgaGUgaGFkKSBhcyBoZSBzbG9vb29vb3dseSBwdXNoZWQgYXdheSwgdHVybmVkLCBhbmQgbGVmdC4gCkplIHByb2ZpdGUgZGUgY2UgcGV0aXQgcG9zdCBwb3VyIHJlbWVyY2llciB0b3V0ZXMgbGVzIHBlcnNvbm5lcyBxdWkgbSBmYWl0IGNvbmZpYW5jZSBlbiBhY2hldGFudCBtb24gZGVybmllciBwZXRpdCBsaXZyZS4gCldlIHdhdGNoZWQgdGhlIGxhc3QgZmV3IHNvbmdzIGZyb20gdGhlIGZyb250IGFuZCBpdCB3YXMgaGVyIGhhcHBpZXN0IHNpbmNlIHRoZSB0cmFnZWR5LiAKT25saW5lIHBva2VyIGhhcyBlY29ub21pY2FsIGJlbmVmaXRzLiBCZWNhdXNlIG9mIHRoZSByYXBpZCBwYWNlIG9mIGdhbWVwbGF5IGluIG9ubGluZSBwb2tlciwgcGxheWVycyBnZXQgdG8gcGxheSAxMCB0aW1lcyBtb3JlIGhhbmRzIGluIGFuIGhvdXIgdGhhbiBpbiBhIHJlZ3VsYXIgcG9rZXIgcm9vbS4gVGhpcyBzaWduaWZpY2FudGx5IGluY3JlYXNlcyB0aGUgY2hhbmNlcyBhbmQgdGhlIGFtb3VudCBvZiB3aW5uaW5ncy4gTXVsdGlwbGUgdGFibGVzIG1ha2UgdGhpcyBwb3NzaWJsZSwgd2hlcmVhcyB0aGlzIGlzIGltcG9zc2libGUgaW4gb2ZmbGluZSBwb2tlciByb29tcy4KU2hlIG1ha2VzIG15IGxpZmUgc28gbWlzZXJhYmxlIHRoYXQgSSByZWxlbnQgdG8gc2h1dCBoZXIgdXAuIApBbHNvIHRoZSBwb3N0IGZ1cnRoZXIgZG93biBhYm91dCBtYWtpbmcgc3VyZSB0aGF0IE9QIGRvZXNuIGdldCB0b28gY29tZnkgYW5kIGlzIGVhZ2VyIHRvIG1vdmUgb24gdG8gdGhlIG5leHQgc3RhZ2UgaW4gbGlmZSBzZWVtcyByZWxldmFudCwgdG9vLi4gCiJJIGFtIGhvcGluZyBvd25lcnMgd2lsbCByZWR1Y2UgdGhlaXIgaG91cnMgdG8gbWluaW1pc2UgdGhlIG9wcG9ydHVuaXR5IGZvciBwZW9wbGUgdG8ga2VlcCBnYW1ibGluZy4KSGVsbGZpZ2h0ZXJzIFNvdWwgU25hdGNoZXJzIFVuaXQgUlIgQUJRLCBOTSBNZXJjeSBBZnRlciBEYXJrIE1pbmlzdHJ5IGZlZWRzLCBjbG90aGVzLCBwcm92aWRlcyBibGFua2V0cywgc2hvZXMsIHNsZWVwaW5nIGJhZ3MsIGh5Z2llbmUga2l0cywgdG8gcGVvcGxlIGxpdmluZyBvbiB0aGUgc3RyZWV0cyBvZiBBbGJ1cXVlcnF1ZSwgTmV3IE1leGljby4gRXZlcnkgU2F0dXJkYXkgbmlnaHQgbG9jYWwgSGVsbGZpZ2h0ZXJzIGZyb20gSGVsbGZpZ2h0ZXJzIEludGVybmF0aW9uYWwgZ28gb3V0IHRvIHRoZSBzdHJlZXQgb2YgQWxidXF1ZXJxdWUgZnJvbSA4OjMwUE0gdG8gNEFNIG9yIHNvbWV0aW1lcyBsYXRlciwgZm9yIHRoZSBwYXN0IDUgeWVhcnMgbmV2ZXIgbWlzc2luZyBhIFNhdHVyZGF5IHJhaW4sIGNvbGQsIHNsZWV0LCBvciBzbm93LiBXb3JraW5nIHRvIGhlbHAgb3VyIHZldGVyYW5zLCBhbmQgcGVvcGxlIGxpdmluZyBhIGxpZmUgb2YgYWRkaWN0aW9uIHRvIGdldCBvZmYgdGhlIHN0cmVldHMgYW5kIGludG8gcmVjb3ZlcnkgcHJvZ3JhbXMsIG9mZmVyaW5nIHByYXllciBhbmQgc29tZXRpbWVzIGxlYWRpbmcgcGVvcGxlIHRvIHRoZSBMb3JkLi4gCkl0IGhlbHBzIHlvdSB0YWtlIHNlbnNpYmxlIGRlY2lzaW9uLCBieSBpbmZvcm1pbmcgeW91IGFib3V0IHRoZSBoYW5kcyB0aGF0IGFyZSByaXNreSwgaGFuZHMgdGhhdCB5b3Ugc2hvdWxkIG5vdCBiZSBhIHBhcnQgb2YgYW5kIHRoZSBoYW5kcyB0aGF0IGNhbiBiZSBiZW5lZmljaWFsIGZvciB5b3UuIApUaGUgZml2ZSBsYXVuY2hlcyBmcm9tIEFsYXNrYSBhcmUgc3VwcG9ydGVkIHRocm91Z2ggTkFTQSBTb3VuZGluZyBSb2NrZXQgUHJvZ3JhbSBhdCB0aGUgYWdlbmN5IFdhbGxvcHMgRmxpZ2h0IEZhY2lsaXR5IGF0IFdhbGxvcHMgSXNsYW5kLCBWaXJnaW5pYSwgd2hpY2ggaXMgbWFuYWdlZCBieSBOQVNBIEdvZGRhcmQgU3BhY2UgRmxpZ2h0IENlbnRlciBpbiBHcmVlbmJlbHQsIE1hcnlsYW5kLiBOQVNBIEhlbGlvcGh5c2ljcyBEaXZpc2lvbiBtYW5hZ2VzIHRoZSBzb3VuZGluZyByb2NrZXQgcHJvZ3JhbSBmb3IgdGhlIGFnZW5jeS4KTXkgc3BhIGJpbGxzICQ2NS9ociBhbmQgSSBtYWtlIGF0IGJlc3QgJDE3IGZyb20gdGhhdC4gCkF0IHRoaXMgcG9pbnQsIHNoZSBoYWQgbmV2ZXIgc2VlbiBhbnlvbmUgd2l0aCBhIGRhcmtlciBza2luIGNvbG9yIHN1Y2ggYXMgaGVycy4gU2hlJ3MgYWJvdXQgMiBmZWV0IGZyb20gdXMuIFNvLCBzaGUgc2VlcyBoZXIsIHR1cm5zIHRvIG1lIGFuZCB5ZWxscyAod2hpbGUgcG9pbnRpbmcpLCAibG9vayBNb20hISEgSXQncyBhIGNob2NvbGF0ZSBsYWR5ISEhIi4gSSBmcm96ZSBmb3IgYSBzZWMsIHNhaWQgInllcyBob25leSwgaXNuJ3Qgc2hlIGJlYXV0aWZ1bD8iLiAKUFJPQkxFTSBvciBtb2RlcmF0ZWdhbWJsZXJzYXJlIGxvc2luZyB1cCB0byAkODAwMCBhIHllYXIsIGFjY29yZGluZyB0byBmaWd1cmVzIGNhbGN1bGF0ZWQgdXNpbmcgdGhlIDIwMTUgU29jaWFsIGFuZCBFY29ub21pYyBJbXBhY3QgU3R1ZHkgKFNFSVMpIGFuZCBBQlMgcG9wdWxhdGlvbiBkYXRhLiBIb3dldmVyLCBJbmRlcGVuZGVudCBEZW5pc29uIE1QIEFuZHJldyBXaWxraWUgc2FpZCBoZSdkIGhlYXJkIGVzdGltYXRpb25zIGZhciBncmVhdGVyLiAiV2hlbiBJIHdhcyBjaGFpcm1hbiBvZiB0aGVnYW1ibGluZ3JlZm9ybSBjb21taXR0ZWUgaW4gdGhlIHByZXZpb3VzIHBhcmxpYW1lbnQsIHdlIGhlYXJkIGV2aWRlbmNlIG9mIHByb2JsZW1nYW1ibGVyc2xvc2luZyB1cCB0byAkMjUsMDAwIGEgeWVhciBvbiBhdmVyYWdlLCIgaGUgc2FpZC4gClJlYWQgb24gdG8gZmluZCBvdXQgaG93IHRvIHBsYXkgcmVhbCBtb25leSBvbmxpbmUgcG9rZXIgZnJlZSAuIFBva2VyIGlzIGJvb21pbmcuIEFuZCBtYW55IHBlb3BsZSBwbGF5IGZyZWUgcG9rZXIgZ2FtZXMgb25saW5lLiAKV2lsbCByYWRpY2FsbHkgc2hha2UgdXAgRnJhbmNlIHJ1bGluZyBlbGl0ZSwgd2hpY2ggaXMgYm90aCBvdmVyd2hlbG1pbmdseSB3aGl0ZSBhbmQgZnJvbSBib3VyZ2VvaXMgYmFja2dyb3VuZHMuLiAKV29sZmllIGRvZXMgbm90IGNhcmUgYWJvdXQgZGVtb2NyYWN5IGluIElyYW4uIAoiUHJpbnQgUHJvZHVjdHMiIHJlZmVycyB0byBob21lIGRlbGl2ZXJ5IG9mIHRoZSBwcmludCBlZGl0aW9uIG9mIHRoZSBDaGljYWdvIFN1biBUaW1lcyBuZXdzcGFwZXIgYnkgU3VuIFRpbWVzIE1lZGlhLCBMTEMgYW5kIFN1biBUaW1lcyBNZWRpYSBQcm9kdWN0aW9ucywgTExDIGFuZCB0aGVpciBwYXJlbnRzIGFuZCBhZmZpbGlhdGVzIChjb2xsZWN0aXZlbHksICJTdW4gVGltZXMiKS4gU3VuIFRpbWVzIHJlc2VydmVzIHRoZSByaWdodCB0byBtb2RpZnkgdGhlIHR5cGUsIGNvbnRlbnQsIGFuZCBhdmFpbGFiaWxpdHkgb2YgaXRzIFByaW50IFByb2R1Y3RzIGF0IGFueSB0aW1lLgpSeWFuIGFuZCBTb25zLCBKYW5lc3ZpbGxlLCB3aWxsIGRvIHRoZSBJd29yayBmb3IgJDM2LDU2Ny4gCkkgY3VycmVudGx5IHVzZSBhIHZlcnkgYmFzaWMgZm9sZGF3YXkgcG9rZXIgdGFibGUgdG9wIHRoYXQgcmVzdHMgcGVyZmVjdGx5IG9uIHRoZSBzdXJmYWNlIG9mIG15IGNpcmN1bGFyIGtpdGNoZW4gdGFibGUuIApJdCBzZWVtcyByYXRoZXIgYWJzdXJkLCB0byBzYXkgdGhlIGxlYXN0LCBidXQgdGhpcyB3ZWVrZW5kIGhhcyBiZWVuIGEgdGltZSB3aGVyZSB0aGUgbWVhbmluZyBvZiBtZWFuaW5nbGVzcyByaXR1YWxzIGlzIHBhcnRpY3VsYXJseSBvYnZpb3VzIGluIG15IGxpZmUuIE1lbW9yaWFsIERheSwgYSBmcmllbmQgZGllZCB1bmV4cGVjdGVkbHkgYW5kIHRyYWdpY2FsbHksIGFuZCBJIGhhZCB0byBzaXQgdGhyb3VnaCB5ZXQgYW5vdGhlciBncmFkdWF0aW9uIChvbmUgb2YgdGhlIGNvc3RzIG9mIGJlaW5nIGEgcHJvZmVzc29yIGlzIHdlIGRvIGl0IGV2ZXJ5IHllYXIgaW4gcmVhbGx5IGFuZCB0cnVseSByaWRpY3Vsb3VzIGNvc3R1bWVzKS4gUGljbmljcywgZnVuZXJhbHMsIGFuZCBncmFkdWF0aW9ucyBtaWdodCBzZWVtIHVucmVsYXRlZCwgYnV0IHRoZXkgYXJlIGFsbCByaXR1YWxzIGluIG91ciBsaXZlcyB0aGF0IGNhbiBzZWVtIG1lYW5pbmdsZXNzIGFuZCB5ZXQsIGJlY2F1c2UgdGhleSBhcmUgcmVndWxhcmx5IG9jY3VycmluZyByaXR1YWxzLCB0aGV5IGltYnVlIG91ciBsaXZlcyB3aXRoIGEgc2Vuc2Ugb2YgY29tbW9uIHB1cnBvc2UgYW5kIGV2ZW4gc29jaWFsIHNvbGlkYXJpdHkuLiAKSXQgaXMgc3RpbGwgZG9hYmxlLiBVbmRlcndoZWxtaW5nPyBWZXJ5LiBJZiB5b3Ugd2FudCB0byBzdHJldGNoIGl0LCBCYXJvIEtpIFRlZXIgaGFzIGEgY2hhbmNlIHRvIHNlbGwgMiBkaWZmZXJlbnQgY29sb3VyIHBhbGV0dGVzIG9uIGhpcyB2aXNpdHMuIApTaGUgbWlnaHQgbm90IGV2ZW4ga25vdyB3aHkgc2hlIGRvZXNuJ3Qgd2FudCBpdCwgYnV0IHNoZSBrbm93cyB0aGF0IHNoZSBkb2Vzbid0IHdhbnQgaXQuSWYgeW91IGtuZXcgSSBsaWtlZCBpY2UgY3JlYW0sIG15IGZyaWVuZHMgZXZlbiB0b2xkIHlvdSBJIGxpa2UgaWNlIGNyZWFtLiBZb3Ugb2ZmZXIgbWUgaWNlIGNyZWFtLCBJIGRvbid0IGhhcHBlbiB0byB3YW50IGljZSBjcmVhbSByaWdodCBub3csIHNvIEkgZGVjbGluZS4gWW91IGFyZSB0aGVuIHRvIHN0b3AgdHJ5aW5nIHRvIG1ha2UgbWUgZWF0IHRoZSBkYW1uIGljZSBjcmVhbS5NYXliZSBsYXRlciBvbiBzaGUgd2lsbCB3YW50IHNvbWUgaWNlIGNyZWFtIGFuZCBnaXZlIHlvdSBhIGNhbGwsIG90aGVyd2lzZSB5b3UnbGwganVzdCBiZSBwZXN0ZXJpbmcgaGVyIHdpdGggb2ZmZXJzIGZvciBzb21ldGhpbmcgc2hlIGNsZWFybHkgc3RhdGVkIHNoZSBkb2VzIG5vdCB3YW50LkdhcmJhZ2VHYXRvICAzIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29JIG1ha2UgYmF0Y2hlcyBvZiBob21lIG1hZGUgbWFyaW5hcmEgKGFrYSBncmF2eSkgd2l0aCBtZWF0YmFsbHMgYW5kIHNhdXNhZ2UsIGFuZCBzdG9yZSBpdCB1cCB1c3VhbGx5IGluIDEwIG9yIHNvIGNvbnRhaW5lcnMgYW5kIGZyZWV6ZSBpdCB0byBiZSBlYXRlbiB3aGVuZXZlci4gCkkga25vdyBpbiBhIHJlZ3VsYXIgZGl2b3JjZSBjYXNlLCB5b3VyIGxhd3llciB3b3VsZCBhZHZpc2UgeW91IHRvIG5vdCBmbGF1bnQgeW91ciBsaWZlc3R5bGUgb3IgeW91ciBwYXJhbW91ciBiZWNhdXNlIGl0IGNvdWxkIG5lZ2F0aXZlbHkgYWZmZWN0IHlvdXIgY2FzZS4gWW91IGFsc28gc2hvdWxkbid0IGJlIGxpdmluZy9jb2hhYml0YXRpbmcgd2l0aCB5b3VyIHBhcmFtb3VyLiBTaGUgd2lsbCBsb3NlIGFueSBhbmQgYWxsIHN1cHBvcnQgZnJvbSBDb2x0IGlmIHNoZSBpcyBsaXZpbmcgd2l0aCBzb21lb25lIGVsc2UuIApHZW5lcmFsbHksIHRoZXkgcGhvbmV0aWNhbGx5IGJvcnJvd2VkLiAKQ29uc2lkZXIgdGhhdCB0aGUgc2FtZSB0aGluZyBjb3VsZCBoYXBwZW4gaW4gYSBjaXR5IHdpdGggem9uaW5nIGlmIGEgdmFyaWFuY2UgaXMgZ3JhbnRlZC4gCkFsbCB0aGUgY2FyZHMgYXJlIG9mIHRoZSBzYW1lIHN1aXQsIGFuZCBhbGwgYXJlIGNvbnNlY3V0aXZlLiBGb3VyIG9mIGEgS2luZDogQWxsIGZvdXIgY2FyZHMgb2YgdGhlIHNhbWUgaW5kZXggKGVnLiAKVW5kIGFsbGVpbiB3ZWdlbiBkZXIgVW56dWZyaWVkZW5oZWl0IHNlaXRlbnMgZGVyICBDYXNpbm8gIGhhYmVuIGRpZSBzIGVub3JtZSBCZXRyZ2UgZGFyYXVmIHZlcndlbmRldCwgaGllciBlaW5lIExzdW5nIHp1IGhlcmJlaXp1ZmhyZW4uIApIZSB3b24gYSBsb3QuIApUaGV5IGZ1Y2tpbmcgdGVzdGVkIG1lIGZvciByaWNrZXRzIGJlZm9yZSBtb25vLiAKT24gbCBtYWlzIGxhIGJpcGRpZSBhIGZhaXQgbCBldCBsaWJyIHNhIG1haW4gcXVpIGEgZmFpdCBsIEVuIHJldG91ciBldCBkZSBzb24gdXNhZ2UsIHVuIGRpYWxvZ3VlIHMgaW5zdGF1ciBlbnRyZSBsYSBtYWluIGV0IGwgZXQgZGUgY2VsdWkgY2kgZXN0IG4gbGEgcGVuc2UgTGUgdHJhdmFpbCBnbmlhbCBkZSBHYXN0b24gU2FpbnQgUGllcnJlIChub3RhbW1lbnQgc3VyIGxhIGNob3JkZSBkb3JzYWxlKSBlc3QgIGNvbmZyb250ZXIgYXZlYyBjZWx1aSBkZSBsIEFubmUgRGFtYnJpY291cnQsIGNlIHF1ZSBub3VzIG5lIG1hbnF1ZXJvbnMgcGFzIGRlIGZhaXJlIHByb2NoYWluZW1lbnQuIEVuIDE5NjMsIGonYWkgbWlnciBkdSBDYW5hZGEgZW4gQW5nbGV0ZXJyZSBldCB0cmF2YWlsbCBwcmVzcXVlIDE0IGFucyBjb21tZSBhZ2VudCBkZSBjaGFuZ2UgIGxhIENpdHkgZGUgTG9uZHJlcy4gQ2V0dGUgcXVlc3Rpb24gZGUgYnV0IG1lIGhhbnRhIGp1c3F1JyBjZSBxdWUgamUgc29pcyBjYXBhYmxlIGQnYWJhbmRvbm5lciBsYSB2aWUgZGUgYnVyZWF1IGV0IGRlIGNvbW1lbmNlciB1bmUgY2FycmlyZSBkJ2Vuc2VpZ25hbnQgTW9udGVzc29yaS4gdGFpdCBjZSBsZSBidXQgZGUgbWEgdmllID8gTGUgYm9uaGV1ciBldCBsZSBzZW50aW1lbnQgZCdhY2NvbXBsaXNzZW1lbnQgcXVlIGoncHJvdXZhaXMgZW4gZW5zZWlnbmFudCBhdXggZW5mYW50cyBwb3V2YWl0IGxlIGxhaXNzZXIgcGVuc2VyIGp1c3F1JyBjZSBxdWUgamUgcmVuY29udHJlIFJvYmVydCBTdC4gSm9obi4gSWwgc29pZ25haXQgZGVzIGVuZmFudHMgaGFuZGljYXBzIGVuIHV0aWxpc2FudCBkaWZmcmVudGVzIHRocmFwaWVzIGV0IGlsIGNoZXJjaGFpdCBjb21tZW50IG9idGVuaXIgZGVzIGNoYW5nZW1lbnRzIHBlcm1hbmVudHMgYXV4IG5pdmVhdXggbWVudGFsIGV0IHBoeXNpcXVlLiBJbCBub21tYSBzb24gdHJhdmFpbCBNdGFtb3JwaG9zZS4KUGVvcGxlIHNob3VsZCBrbm93IHRoZXkgYXJlIHNpdHRpbmcgbmV4dCB0byB5b3UganVzdCBieSB0aGUgc21lbGwuIEdvdHRhIGdldCBpbiB0aGVpciBoZWFkLiAKQ0FTSU5PIEJBQ0tFUjogTmFuY3kgVG9kZCwgc2hvd24gaGVyZSBvbiBoZXIgYmxvZywgaXMgYSBwcm9mZXNzaW9uYWwgcG9rZXIgcGxheWVyLCBwb2xpdGljYWwgY29uc3VsdGFudCBhbmQgbGVhZGVyIG9mIGEgZHJpdmUgZm9yIGEgY2FzaW5vIGFtZW5kbWVudCBpbiBBcmthbnNhcy4KQWxzbyB1c2luZyB2YXJpb3VzIHByb2R1Y3RzIHRvIHRha2UgY2FyZSBvZiBteXNlbGYgd2FzIHNlZW4gYXMgZmVtaW5pbmUgYW5kIGdheSBieSBsb3RzIG9mIHBlb3BsZSB0aGVyZSBmb3Igdy9lIHJlYXNvbi4gCjI4IDI5IENvbGxlZ2UgRm9vdGJhbGwgQm93bCBzY2hlZHVsZSAyMDE3IDE4OiBNYXRjaHVwcywgRE1hbidzIHBpY2tzLCBUViBmb3IgRGVjLiBCYXJyZXR0IGFuZCB0aGUgT2hpbyBTdGF0ZSBCdWNrZXllcyBmYWNlIFNhbSBEYXJub2xkIGFuZCB0aGUgVVNDIFRyb2phbnMgaW4gR29vZHllYXIgQ290dG9uIEJvd2wgQ2xhc3NpYyAyMDE3IG9uIEZyaWRheSwgRGVjLiAyOSwgaW4gQXJsaW5ndG9uLCBUZXhhcy4xIHlyIGFnbyArIEJ5IERlbm5pcyBNYW5vbG9mZiwgVGhlIFBsYWluIERlYWxlckNvbmN1c3Npb25zIHB1c2hlZCBUeXJla2UgU21pdGggYXdheSBmcm9tIGZvb3RiYWxsLCBidXQgZmFtaWx5IGJyb3VnaHQgaGltIGJhY2sgQ29uY3Vzc2lvbnMgcHVzaGVkIFR5cmVrZSBTbWl0aCBhd2F5IGZyb20gZm9vdGJhbGwsIGJ1dCBmYW1pbHkgYnJvdWdodCBoaW0gYmFjayBPaGlvIFN0YXRlLCBQZW5uIFN0YXRlLCBBbGFiYW1hLCBPcmVnb24gYW5kIFVTQyBhbGwgd2FudCBDbGV2ZWxhbmQgSGVpZ2h0cyBkZWZlbnNpdmUgZW5kIFR5cmVrZSBTbWl0aC5JcyBKb2UgUGF0ZXJubyBzdGlsbCBhIFBlbm4gU3RhdGUgaGVybz8gSXMgSm9lIFBhdGVybm8gc3RpbGwgYSBQZW5uIFN0YXRlIGhlcm8/IEl0J3MgYmVlbiBmaXZlIHllYXJzIHNpbmNlIGZvcm1lciBQZW5uIFN0YXRlIGRlZmVuc2l2ZSBjb29yZGluYXRvciBKZXJyeSBTYW5kdXNreSB3YXMgY29udmljdGVkIG9mIDQ1IGNvdW50cyBvZiBzZXh1YWwgYXNzYXVsdGluZyBib3lzLiAKVGhlcmUgYXJlIGF0IGxlYXN0IDM1MCBvdGhlciBmZXJ0aWxpdHkgY2xpbmljcyBhcm91bmQgSW5kaWEsIGFsdGhvdWdoIGl0IGRpZmZpY3VsdCB0byBzYXkgaG93IG1hbnkgb2ZmZXIgc3Vycm9nYWN5IHNlcnZpY2VzIHNpbmNlIHRoZSBnb3Zlcm5tZW50IGRvZXNuIHRyYWNrIHRoZSBpbmR1c3RyeS4gClBhcnRpY2lwYW50cyBpbmNsdWRlZCBpbiB0aGUgcmV2aWV3TWFsZSBhbmQgZmVtYWxlIGNhbmNlciBwYXRpZW50cyB1bmRlcmdvaW5nIGJvbmUgbWFycm93IHRyYW5zcGxhbnRhdGlvbiwgYm9uZSBtYXJyb3cgYXNwaXJhdGlvbiwgb3IgbHVtYmFyIHB1bmN0dXJlIHRyZWF0bWVudHMuIApUaGFuayB5b3UgZm9yIHlvdXIgaW50ZXJlc3QgaW4gaW5nIGF0IFVDTEEgQnJ1aW4gRGF5IGZvciBhZG1pdHRlZCB0cmFuc2ZlcnMhIFdlIGFudGljaXBhdGUgYXBwcm94aW1hdGVseSAxMCwwMDAgYWRtaXR0ZWQgdHJhbnNmZXIgc3R1ZGVudHMgYW5kIHRoZWlyIGd1ZXN0cyB3aWxsIHZpc2l0IHRoZSBjYW1wdXMsIGFuZCB5b3VyIGhlbHAgaXMgdml0YWwgdG8gbWFraW5nIHRoaXMgZGF5IGEgc3VjY2Vzcy4gVUNMQSBCcnVpbiBEYXkgZ2l2ZXMgYWRtaXR0ZWQgdHJhbnNmZXIgc3R1ZGVudHMgdGhlIGNoYW5jZSB0byB0b3VyIHRoZSBjYW1wdXMsIGhlYXIgZnJvbSBwcm9mZXNzb3JzLCBtZWV0IGN1cnJlbnQgc3R1ZGVudHMgYW5kIGV4cGVyaWVuY2Ugd2hhdCBsaWZlIGlzIGxpa2UgYXMgYSBCcnVpbi4gT3VyIGdvYWwgaXMgdG8gcGFjayBhbGwgVUNMQSBoYXMgdG8gb2ZmZXIgaW50byBvbmUgc3Bpcml0ZWQgYW5kIHVuZm9yZ2V0dGFibGUgZGF5LiBWb2x1LgpUaGF0IG5vdCBob3cgaXQgd29ya3MuIEluIG1vc3Qgc3VidXJicywgYW5kIHByb2JhYmx5IHlvdXJzIGFzIHdlbGwsIHRoZSBtYWpvcml0eSBvZiB0aGUgbGFuZCBpcyB6b25lZCAic2luZ2xlIGZhbWlseSBvbmx5IiwgYXMgaW4gZWFjaCBsb3QgaXMgb25seSBhbGxvd2VkIHRvIGFjY29tbW9kYXRlIGEgc2luZ2xlIHJlc2lkZW50aWFsIHVuaXQgYW5kIGVhY2ggdW5pdCBpcyBvbmx5IGFsbG93ZWQgdG8gaG91c2UgYSBzaW5nbGUgZmFtaWx5LiBFdmVuIGlmIGEgZGV2ZWxvcGVyIHdhcyB3aWxsaW5nIHRvIGFiaWRlIGJ5IGFsbCB0aGUgc2FtZSByZWd1bGF0aW9ucyBvbiB0aGUgcGh5c2ljYWwgZm9ybSBvZiB0aGUgYnVpbGRpbmcsIHN1Y2ggYXMgdGhlIGxvdCBzZXRiYWNrcywgaGVpZ2h0LCBhbmQgRmxvb3IgQXJlYSBSYXRpbywgdGhleSB3b3VsZG4gYmUgYWxsb3dlZCB0byBtYWtlIGEgYnVpbGRpbmcgd2l0aCAyeCAxLDYwMCBzcSBmdC4gCk9rLiBTbyBJIHRoaW5rIGl0IHdpbGwgb25seSB3b3JrIGJlc3QgZm9yIDIwMTIgYmVjYXVzZSBldmVyIHllYXIgdGhlIGNvbXBhbnkgd2lsbCBjaGFuZ2UgcGhvdG9idWNrZXQgLiBTbyAxIE9uIHRoZSB0b3AgcmlnaHQgYnV0IG5vdCBhbGwgdGhlIHdheSB0b3AgeW91IHNlZSB5b3VyIHVzZXJuYW1lIC4gCk9oIHNoZSdzIG5ldmVyIGhhZCBhIGNoaWxkLiBUaGF0J3Mgd2hhdCBtYWtlcyBtZSBzbyBtYWQuIApTaGUnZCBiZWVuIGF0IGhlciBob21lIGluIFV0YWggdGhlIG5pZ2h0IG9mIHRoZSBtdXJkZXJzLiAKVGhhdCBoYXJkbHkgdm9sdW50YXJ5Li4gClRoZXJlIGFyZSBhIGZldyByZWFzb25zIHRvIHNldCB1cCBhIHRydXN0IGZ1bmQ6ClRoaXMgbGlrZWx5IHJlZmxlY3RzIHRoZSBhYmlsaXR5IG9mIHByaW1hbCwgbG93ZXIgY2FyYiBkaWV0cyB0byBzYXRlIHRoZSBhcHBldGl0ZSBtb3JlIGVmZmVjdGl2ZWx5IHRoYW4gJ2hlYWx0aHknIGRpZXRzIHJpY2hlciBpbiBjYXJib2h5ZHJhdGUuIEZvciBtb3JlIG9uIHRoaXMsIHNlZSB0aGlzIHJlY2VudCBwb3N0IFszXS4KR2VvcmdlIEFsYW4gUmVrZXJzCkdyY2UgIGwnYWN0aW9uIGNvbGxlY3RpdmUsIGlsIGZ1dCByYWNoZXQgcGFyIGxhIFZpbGxlIGRlIFBhcmlzLCBlbiAyMDAzLiBEZXMgcHJvamV0cyBkJ2F4ZXMgZGl0cyBjaXZpbGlzcyBkZXMgYm91bGV2YXJkcyBkZSBSb2NoZWNob3VhcnQsIGRlIE1hZ2VudGEgZXQgQmFyYnMgYXV4IGFtbmFnZW1lbnRzIHBsdXMgbW9kZXN0ZXMgZGUgdm9pcmllIGR1IHF1YXJ0aWVyLCBsaXNhYmV0aCBDYXJ0ZXJvbiBhIHZyYWltZW50IHQgZGUgdG91dGVzIGxlcyBydW5pb25zLCBhcHBvcnRhbnQgY2hhcXVlIGZvaXMgbGVzIHByb3Bvc2l0aW9ucyBkZSBsYSBjZW50YWluZSBkJ2FkaHJlbnRzIHF1ZSBjb21wdGUgbCdhc3NvY2lhdGlvbi4gClZhbiBlZW4gb2xpamtlIHJpb29sd2Vya2VyIGRpZSB1aXQgemlqbiBkZWtzZWwga2lqa3QuIApDYXJlc3RyZWFtIHdpbGwgcmV0YWluIGl0cyBtZWRpY2FsIGltYWdpbmcsIGRlbnRhbCBhbmQgaW5kdXN0cmlhbCBmaWxtcywgbm9uIGRlc3RydWN0aXZlIHRlc3RpbmcsIGFuZCBwcmVjaXNpb24gY29hdGluZyBidXNpbmVzc2VzIHdoaWNoIGFyZSBub3QgaW1wYWN0ZWQgYnkgdGhlIHNhbGUuICJUaGVzZSBlc3RhYmxpc2hlZCBidXNpbmVzc2VzIGhhdmUgc29saWQgZmluYW5jaWFsIGZvdW5kYXRpb25zLCBpbm5vdmF0aXZlIHRlY2hub2xvZ3kgcGxhdGZvcm1zIGFuZCBoYXZlIGVhcm5lZCB0aGUgdHJ1c3Qgb2YgbG95YWwgY3VzdG9tZXJzIGFyb3VuZCB0aGUgd29ybGQsIiBzYWlkIERhdmlkIEMuIFdlc3RnYXRlLCBDaGFpcm1hbiwgUHJlc2lkZW50IGFuZCBDRU8gb2YgQ2FyZXN0cmVhbS4gCkVudGVyIGNvZGUgVU5JMTg3IGF0IGNoZWNrb3V0V2hlZWx3cmlnaHRzIEFybXMgVGVsOiAwMTIyNSA3MjIyODdUd28gY291cnNlcyBmb3IgMTggYW5kIHRocmVlIGNvdXJzZXMgZm9yIDIzLCB3aXRoIGEgZnJlZSBib3R0bGUgb2YgaG91c2Ugd2luZSBmb3IgZXZlcnkgcGFydHkgb2Ygc2l4LCB0d28gZnJlZSBib3R0bGVzIGZvciBldmVyeSBwYXJ0eSBvZiAxMiBldGMuIFRoZSBhYm92ZSBkZWFscyBhcHBseSB3aGVuIG9yZGVyaW5nIHRoZSBDaHJpc3RtYXMgUGFydHkgbWVudSBvbmx5LlVuaXZlcnNpdHkgbGlicmFyeSBjYXJkU2Vhc29uZWQgQ29va2VyeSBTY2hvb2xDb29rZXJ5IHNjaG9vbCBiYXNlZCBpbiB0aGUgYmVhdXRpZnVsIERlcmJ5c2hpcmUgY291bnRyeXNpZGUuIApUaGV5IGhhdmUgdGhlIGxvd2VzdCBwb3NzaWJsZSBwb3dlciBvZiAxLiAKSSB0aGVuIHBvc3QgYSBicmVha2Rvd24gb24gcmVkZGl0IGFzIGEgcmVwbHksIG9yIGJyaW5nIGl0IHVwIGR1cmluZyBhIGxlc3NvbiBpZiBJIHdhcyBhc2tlZCB0byBkbyBpdCBvdmVyIFNreXBlIG9yIERpc2NvcmQuLiAKUmVzdWx0cyAxICAgMTYgb2YgMTE3IC4gMDg0ZjJkYjhjNiBzcG9rZW4gZW5nbGlzaCBtYXRlcmlhbCAuIApBbGwgdGhlIGhvcnJvcnMgb2YgdGhlIGNvbG9uaWFsIGVyYSB3b3VsZCBqdXN0IHNpbXBseSBiZSB0cmVhdGVkIGFzIGFueSBvdGhlciBwYXJ0IG9mIGhpc3RvcnkuIEtvcmVhIGNhbiBhc2sgZm9yIHJlcGFyYXRpb25zIG9yIGFuIGFwb2xvZ3kgZm9yIHRoZSBJbWppbiBXYXIgYmVjYXVzZSBpdCBoYXBwZW5lZCBuZWFybHkgZml2ZSBodW5kcmVkIHllYXJzIGFnbyBhbmQgaXRzIHZpY3RpbXMgYXJlIGxvbmcgZGVhZC4gCldpZSBtYW4gZGVuIEF1c3NjaG5pdHRlbiBkZXIgV2FuZGVya2FydGUgZW50bmVobWVuIGthbm4sIGh0dGUgZGVyIFdlZyBkYXMgUG90ZW50aWFsIG1pdCBBYnN0ZWNoZXJuIHp1bSBWdWxrYW4gQmVybmFyZGlubyBvZGVyIHp1bSBWdWxrYW4gU2FuIEp1YW4gb2RlciBpbiBLb21iaW5hdGlvbiBtaXQgYW5kZXJlbiBXYW5kZXJ3ZWdlbiB6dSBlaW5lciBncmVyZW4gUnVuZHdhbmRlcnVuZyBhdXNnZWJhdXQgenUgd2VyZGVuLiBBbmdlc2ljaHRzIGRlciBpbnRlbnNpdmVuIHNvbm50Z2xpY2hlbiBTb25uZSB1bmQgZGVyIHJhc2NoIGVpbnNldHplbmRlbiBFcnNjaHBmdW5nIGRlciBXYW5kZXJlciwgaGFiZW4gd2lyIGRpZXNtYWwgYWJlciBzb2dhciBkYXJhdWYgdmVyemljaHRldCBnYW56IGJpcyB6dW0gTG9jaCB6dSBnZWhlbiwgZGFoZXIgbXVzc3RlIGljaCBkaWUgRm90b3Mgb2JlbiBhdXMgZGVtIEludGVybmV0IEhpZXIga29tbWVuIGRpZSBGb3RvcyBkZXMgVGVpbHMgZGVyIFJvdXRlLCBkZXIgdGF0c2NobGljaCB2b24gdW5zIGJlZ2FuZ2VuIHd1cmRlOgpKaGludG9uaWMxICAwIHBvaW50cyAgc3VibWl0dGVkIDEzIGRheXMgYWdvCkxldCdzIHBheSBhdHRlbnRpb24gdG8gdGhlaXIgYWdlbmRhLiBIb25lc3RseSwgaGF2ZW4ndCB5b3UgYWxsIGJlZW4gYm9yZWQgaGVhcmluZyBtb3N0bHkgYWJvdXQgVHJ1bXAgZXZlcnlkYXk/IEdvZCwgaGUncyBoYXJkIHRvIGxvb2sgYXQgYW5kIGV2ZW4gaGFyZGVyIHRvIGxpc3RlbiB0by4gCkFsdGhvdWdoIHRoZSBiYWcgaXMgaGVhdmllciBhbmQgbW9yZSBleHBlbnNpdmUgdGhhbiB0aGUgQVBFWCBxdWlsdHMgd2UgYWxyZWFkeSBoYXZlLCB0aGUgbGlzdGVkIGNvbXByZXNzZWQgdm9sdW1lIGZvciB0aGUgS3lhbiAyMCBkZWdyZWUgaXMgNS42MiAoTGl0ZXJzIEkgYXNzdW1lPykgd2hpY2ggaXMgYW4gaW1wcm92ZW1lbnQuIApGcmVtcmFnZW5kZSBTaXRlIGF0IHJhbW1lIGFsbGUgbm90ZXIgaSBza2FsYSBzbGFncyBzcGVhay4uIApJIGp1c3QgdGhpbmsgcGVvcGxlIGhhdmUgYmVlbiB3b3JraW5nIG9mZiBvZiBzb21lIHZlcnkgd3JvbmcgaW5mb3JtYXRpb24gYXJvdW5kIEFEL0hEIChvciBBREQgYXMgaXQgdXNlZCB0byBiZSBjYWxsZWQpIGZvciBkZWNhZGVzIG9yIGxvbmdlciwgYW5kIGRvY3RvcnMgYXJlIG5vdCBpbW11bmUgdG8gaWdub3JhbmNlLi4gClRoYyBzdXJnZXJ5IG9uIGVhY2ggbGFzdGVkIHR3byBob3Vycy4gSWYgU3RpdmVzJyBraWRuZXlzIGFyZSBub3QgcmUgIGplY3RlZCBieSBib2R5IGNoZW1pc3RyeSBfIG9mICd0aGUgcmVjaXBpZW50cywgdGhjIHRyYW5zcGxhbnRzIG1heSBtYWtlJyBtZWRpY2FsIGhpc3RvcnkuIApUaGUgcHJvZHVjdGlvbiBvZiBQaG9lbml4IE9TKHg4NikgaXMgcmVsYXRlZCB0byB0aGUgb3BlbiBzb3VyY2Ugb2YgQW5kcm9pZCB4ODYuIApUaGF0IHNhaWQsIGlmIGl0IG1ha2VzIHlvdSB1bmNvbWZvcnRhYmxlLCB5b3UgYXJlIGNvbXBsZXRlbHkgd2l0aGluIHlvdXIgcmlnaHRzIHRvIGFzayB5b3VyIHRoZXJhcGlzdCBub3QgdG8gd29yayBvbiB0aGVtLCBvciB0byB1c2Ugb3RoZXIgbWV0aG9kcyAoSSBvZnRlbiB3b3JrIG9uIGdsdXRlcyB0aHJvdWdoIHRoZSBzaGVldCkuIFRoZXkgcHJvYmFibHkgd291bGRuIGV2ZW4gYmUgdGFrZW4gYWJhY2sgYnkgdGhlIHJlcXVlc3QgICBJIGhhdmUgY2xpZW50cyBleHByZXNzIHByZWZlcmVuY2VzIGxpa2UgdGhhdCBhbGwgdGhlIHRpbWUuClRvIGJlZ2luIHRoZSBnYW1lLCBlYWNoIHBsYXllciBwbGFjZXMgYSB0b2tlbiBpbiB0aGUgY2VudHJhbCAicG90LCIgc2ltaWxhciB0byBhbiBhbnRlIGluIHBva2VyLiBUaGUgcGxheWVycyB0aGVuIHRha2UgdHVybnMgc3Bpbm5pbmcgdGhlIGRyZWlkZWwsIGFuZCB0aGUgcmVzdWx0IGlzIGRldGVybWluZWQgYnkgd2hpY2hldmVyIGxldHRlciBpcyBmYWNpbmcgdXAgd2hlbiB0aGUgZHJlaWRlbCBjb21lcyB0byBhIHJlc3QuCk9yYWwgYWRtaW5pc3RyYXRpb24gb2YgYXJvbWF0aWMgbGlxdWlkIG9yIHBsYWNlYm8uMy4gClRoZSBzdGFrZXMgZG9uJ3QgaGF2ZSB0byBiZSBza3kgaGlnaC4gCkkgZm91bmQgYSB3ZWIgcGFnZSBmb3IgRWxlb25vcmEgYXQgTGlmZSBUb3VjaCBNYXNzYWdlLCByZWFkIHRoZSB0ZXN0aW1vbmlhbHMsIGFuZCBkZWNpZGVkIEkgY291bGRuJ3QgZ28gd3JvbmcuLiAKVGhpcyBib2R5IHdvdWxkIGJhc2ljYWxseSB0cmFuc2l0aW9uIHRoZSBzb2NpZXR5IHRvIENvbW11bmlzbS4gCkl0IHRydWUgdGhhdCBWYWx2ZSBjb3VsZCBiZSBtb3JlIHByb2FjdGl2ZSBpbiB3b3JraW5nIG9uIFN0ZWFtIGRpc2NvdmVyYWJpbGl0eSBzeXN0ZW1zIChvciByZXRoaW5raW5nIFN0ZWFtIERpcmVjdCksIGJ1dCB0aGUgc2hvdmVsd2FyZSBzaXR1YXRpb24gb24gU3RlYW0gaXMgbm93aGVyZSBuZWFyIGFzIGJhZCBhcyBzb21lIHBlb3BsZSB0cnkgdG8gbWFrZSBpdCBzZWVtLi4gCldoZW4gZGV2ZWxvcGluZyBhIHZhY2NpbmUsIHlvdSB0YXJnZXQgcHJvdGVpbnMgdGhhdCBkb24ndCBtdXRhdGUgb3IgbXV0YXRlIHZlcnkgc2xvd2x5LiAKRmF2b3JpdGUgcGFydCB3YXMgd2hlbiBJIGRvaW5nIGNhYmxlIHJvd3MgYW5kIHRoZXNlIDIgbW9tcyB3YWxrIFJJR0hUIGJlc2lkZSBtZSwgb2YgYWFhbGxsIHBvc3NpYmxlIHBhdGhzLCBzbyB0aGF0IEkgaGl0IHRoZSBmaXJzdCBvbmUgaW4gdGhlIHRoaWdoIHdpdGggbXkgZWxib3cgd2hlbiBJIHB1bGxlZCBiYWNrIHRoZSBjYWJsZS4gSSBsZXQgZ28gb2YgaXQgYXMgYSByZWZsZXggd2hpY2ggaXMgc29vIG11Y2ggcG90ZW50aWFsIGZvciBpbmp1cnkuIFRoZSBzZWNvbmQgd2Fsa3MgdGhlIGV4YWN0IHNhbWUgcGF0aCB0aGUgb3RoZXIgZGlkLiAKVGhpcyBpc24gYWJvdXQgb2ZmZXJpbmcgYW4gaW50ZXJuZXQgY29ubmVjdGlvbiB0byAiSnVzdCBuZXRmbGl4IiBvciAianVzdCBodWx1IiwgdGhpcyBpcyBhYm91dCAid2hvb3BzIHNvcnJ5IHlvdSBjYW4gc3RyZWFtIHlvdXR1YmUgdmlkZW9zIHdpdGhvdXQgcGF5aW5nIHVzIGFuIGV4dHJhICQ0MCBhIG1vbnRoLCBidXQgbG9vayBhdCB0aGlzIGdyZWF0IGxpbmV1cCBvZiBzaG93cyB3aXRoIG91dCBpbmZpbml0eSBzdHJlYW1pbmcgc2VydmljZSEuIApPbmx5IHdoZW4gSSBzbGVlcCBvbiBteSBiYWNrLi4gClBsdXNpZXVycyBtdXN1bG1hbnMgb250IGRjaWQgZGUgcG9ydGVyIHBsYWludGUgY29udHJlIGwnRXRhdCBjYXIgaWwgZGV2aWVudCBkZSBwbHVzIGVuIHBsdXMgY2xhaXIgcXVlIGxlIHJhc3NlbWJsZW1lbnQgbid0YWl0IHByb3RnIHF1ZSBkdSBjdCBsZSBtb2lucyBkYW5nZXJldXguIApJJ20gbm90IHN1cmUgd2hpY2ggZXhhY3QgZ2FtZSB5b3UgYXJlIGludGVyZXN0ZWQgaW4sIGJ1dCB0aGUgdHlwaWNhbCBhcHByb2FjaCBpcyB0byBjcmVhdGUgYSBtdWNoIHNtYWxsZXIgYWJzdHJhY3QgdmVyc2lvbiBvZiB0aGUgZ2FtZSwgc29sdmluZyB0aGF0IHNtYWxsZXIgZ2FtZSwgYW5kIHRoZW4gbWFwcGluZyByZWFsIGdhbWUgc2l0dWF0aW9ucyBiYWNrIHRvIHRoZSBhYnN0cmFjdCBnYW1lIHRvIGdlbmVyYXRlIGFkdmljZS4gTW9zdCBvZiB0aGUgYWNhZGVtaWMgcGFwZXJzIHNraXAgb3ZlciB0aGUgZGV0YWlscyBvZiB0aGlzIHByb2Nlc3MgaW4gZmF2b3Igb2YgcHJlc2VudGluZyByZXN1bHRzIGFib3V0IGNvbnZlcmdlbmNlLCBleHBsb2l0YXRpb24sIGFuZCBjb21wZXRpdGlvbiByZXN1bHRzLi4gCkZvciBlYWNoIHN0dWR5LCB0aGUgZWZmZWN0IHNpemUgZGlmZmVyZW5jZXMgYW5kIDk1JSBjb25maWRlbmNlIGludGVydmFscyB3ZXJlIGVpdGhlciBjYWxjdWxhdGVkIGZvciBTTVQgY29tcGFyZWQgd2l0aCBjb250cm9sIGZyb20gdGhlIHJlcG9ydGVkIGRhdGEsIG9yIGVzdGltYXRlZCBmcm9tIHJlcG9ydGVkIHZhbHVlcyBmb3Igc3RhdGlzdGljYWwgdGVzdHMuIApTbWl0aCBoaW1zZWxmLCBzcGVha2luZyBhdCB0aGUgVG9yb250byBJbnRlcm5hdGlvbmFsIEZpbG0gRmVzdGl2YWwgcHJlbWllcmUsIHNhaWQgdGhhdCAiV2hhdCBJIGhvcGVkIHRvIHJldmVhbCB3YXMgLiAKQnV0IFd1IGhhcyBzcGVudCB5ZWFycyBkaXNjdXNzaW5nIHRoZSBzdGF0ZSBvZiBBc2lhbiByZXByZXNlbnRhdGlvbiwgYm90aCBpbiBpbnRlcnZpZXdzIGFuZCB3aXRoIGZhbnMsIGFuZCBhIHNlbnNlIG9mIHByZXNzdXJlIGhhcyBtYWRlIGhlciB0ZXJyaWZpZWQgb2Ygd2hhdCB3aWxsIGhhcHBlbiB3aGVuIHRoZSBmaWxtIGlzIGZpbmFsbHkgb3V0Li4gCkNvbW1vbiB0eXBlcyBvZiB0cm9wZXMgYXJlIG1ldGFwaG9ycyAoc3Vic3RpdHV0aW5nIHNvbWV0aGluZyB3aGljaCBiZWFycyBzaW1pbGFyaXR5KSwgbWV0b255bXkgKHN1YnN0aXR1dGluZyBzb21ldGhpbmcgd2hpY2ggaXMgcmVsYXRlZCBvciBhc3NvY2lhdGVkIHRvIHRoZSB0aGluZykgYW5kIHN5bmVjZG9jaGUgKHN1YnN0aXR1dGluZyBhIHBhcnQgZm9yIHRoZSB3aG9sZSBvciB2aWNlIHZlcnNhKS4gCkFzIHdlbGwgYXMgcG9vciB0ZWNobmlxdWU7IHBvb3IgY29tbXVuaWNhdGlvbiBhbmQgbGVhZGVyc2hpcCBtZXRob2RzIGNhbiBhbHNvIHBvc2Ugcmlza3MgdG8gYXRobGV0ZXMuIApTbyB0aGUgbGFzdCB0aGluZyBJIGhlYXJkIHdhcyB0aGUgbGl2ZSBwb2tlciB0YWJsZXMgd291bGQgYmUgZGVsYXllZCBieSB1cCB0byB0d28geWVhcnMgYXQgV29vZGJpbmUsIHRoZXkgb3ZlcmVzdGltYXRlZCB0aGVpciBjYXBhYmlsaXRpZXMgd2l0aCB0aGUgcmVjZW50IHJlbm92YXRpb25zLiAKQnVzaCBQcmVzaWRlbnRpYWwgTGlicmFyeSBGb3VuZGF0aW9uLCB3aGljaCBzZXQgdXAgYSBzcGVjaWFsIGFjY291bnQgZm9yIGh1cnJpY2FuZSByZWxpZWYgZnVuZHMuLiAKRm9yIGFib3V0IHR3byBtb250aHMgbm93LCBCcmljZSBzYWlkLCBoaXMgcmVzdGF1cmFudHMgaGF2ZSBiZWVuIHVzaW5nIFN3ZWV0d29vZCBmb3Igb2Ygb3VyIGJlZWYgcHJvZHVjdHMgYmVjYXVzZSBvZiBpdHMgZW52aXJvbm1lbnRhbCBzdGFuZGFyZHMgYW5kIGZsYXZvci4gCkphcmVkIEdvZmYgcGVyZm9ybWFuY2UgICBXYXMgaXQgYXMgYmFkIGFzIHBlb3BsZSB0aG91Z2h0IGl0IHdhcz8KU3VyZSwgYnV0LCBJIG1lYWFhYWFuLiBUaGVyZXMgc3RpbGwgdGhlIGdpYW50IG1vdW50YWluIG9mIHZlaGljbGUgYXZhaWxhYmlsaXR5LiBBbmQgdGhlIGZhY3QgdGhhdCBIb3Jpem9uIGlzIHRoZSBnYW1lIHJpZ2h0IG5vdyB0aGF0IG9mZmVycyB0aGUgbW9zdCBpbiBQZXJzb25hbGl6aW5nIGEgY2FyLCBub3QgYnkgUHJlIHNldHMgb3IgTG9vdCBCb3ggdXBncmFkZXMuCldoYXQga2luZCBvZiBjb21tdW5pdHkgaXMgL3IvY3JlZXB5UE1zPwpBIHNtYWxsIGNhciB2aWV3ZXIgcHJvZ3JhbSB3aGljaCBjYW4gaGVscCB3aXRoIHNraW5uaW5nIGZvciBMRlMgY2Fycy4gVG8gdW5sb2NrIExGUywgeW91IG5lZWQgYW4gUzEsIFMyIG9yIFMzIGxpY2Vuc2UgKGluZm8gLyBzaG9wKSwgYW5kIHlvdXIgY29tcHV0ZXIgLiBEb3dubG9hZCB0aGUgTGl2ZSBmb3IgU3BlZWQgdG9ycmVudCBmaWxlLiBMYXRlc3QgdmVyc2lvbi4gCkdldmluc3Qgb2cgdGFiKS4uIApJIGFtIG1vcmUgdXBzZXQgd2l0aCB0aGUgZmFjdCB0aGF0IGFsbCBvZiBpdCB3YXMgZm9yIHNvbWV0aGluZyB0aGF0IHdhcyBmYWlybHkgYmVuaWduIGFuZCBzaG91bGQgaGF2ZSBiZWVuIGNhdWdodCBieSBteSByZWd1YWxyIGRvY3RvciB3aXRoIHNvbWUgc2ltcGxlIGJsb29kIHRlc3RzLiAKQXR0b3JuZXkgdG8gZGV0YWlsIGFub3RoZXIgcmFwZSBhbGxlZ2F0aW9uIGFnYWluc3QgV2VpbnN0ZWluCk1hcnRlbDczMiAgODggcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpBZHVsdCwgdG8gbWUsIG1lYW5zIGRvaW5nIHdoYXQgeW91IGFibGUgdG8gYmVjb21lIHNlbGYgc3VmZmljaWVudCBhbmQgdG8gZXhwbG9yZSB5b3VyIGhvYmJpZXMuIElmIHRoYXQgd29ya2luZyBwYXJ0IHRpbWUgdG8gc2hhcmUgYSBmbGF0IHdpdGggZm91ciByb29tbWF0ZXMgYW5kIGdvaW5nIG91dCBwYXJ0eWluZyBtb3N0IG5pZ2h0cywgY29vbC4gSWYgdGhhdCBsb29rcyBsaWtlIGFuIG9mZmljZSBqb2Igd2hlcmUgeW91IG1vc3RseSB3b3JrIHRoZSBzYW1lIHBhdHRlcm4gYnV0IGVuam95IHlvdXIgZnJlZSB0aW1lLCBnbyBmb3IgaXQuIApJIG93bmVkIDIgcGFydCBNQyBmcm9tIHRoZSBzYW1lIGxpdHRlciBhbmQgdGhleSB3ZXJlIHN1cGVyIGZyaWVuZGx5ICAgYm90aCBlbmpveWVkIGxhcHMgYW5kIHdvdWxkIGdyZWV0IG1lIHdoZW4gSSBjYW1lIGhvbWUuIFZlcnkgZnJpZW5kbHkgd2l0aCBvdXIgZG9ncyAgIHNvbWV0aW1lcyB0byB0aGUgcG9pbnQgdGhlIGRvZ3MgZ290IGFubm95ZWQgaGFoYS4gVmVyeSB2ZXJ5IGJpZyBzaGVkZGVycywgdGhvdWdoLCBzbyBqdXN0IGJlIGF3YXJlIHlvdXIgbGlmZSB3aWxsIGJlIGNvdmVyZWQgaW4gZnVyIHdpdGggb25lIGFyb3VuZC4KTGUgYnV0IGVzdCBkZSBzZSByZW1tb3JlciBzb24gdHJhdmFpbCBhdmVjIGxlIHBsdXMgZGUgcHJjaXNpb24gcG9zc2libGUgdG91dCBlbiBheWFudCB1biByZWdhcmQgIGV4dHJpZXVyICBjcml0aXF1ZSBzdXIgc29uIHRyYXZhaWwuIApCZWNhdXNlIGl0IHdvdWxkICJjaGFuZ2UgaGlzdG9yeSIgdGhlIHdheSB0aGUgRWR3YXJkcyBzdG9yeSBkaWQsIGJ1dCBiZWNhdXNlIGl0IHdpbGwgbWFrZSBteSBjaGVjayBvdXQgbGluZSByZWFkaW5nIGV2ZXIgc28gbXVjaCBtb3JlIGFtdXNpbmcuLiAKSGlzIG5vdyB3aWZlIGRpZG4gaGF2ZSBwYXRpZW5jZSBmb3IgdGhhdCwgYW5kIGFmdGVyIHR3byBiaWcgZGlzY3Vzc2lvbnMgYWJvdXQgaXQgYW5kIGhpbSBzdGlsbCBiZWluZyBsYXRlLCBzaGUgdG9sZCBoaW0gIkkgdG9sZCB5b3UgdGhhdCBJIGZpbmQgaXQgZGlzcmVzcGVjdGZ1bCB3aGVuIHlvdSBtYWtlIG1lIHdhaXQuIEkgYXNrZWQgeW91IHRvIGNhcmUgZW5vdWdoIHRvIGNoYW5nZSB0aGF0LCBhbmQgeW91IGhhdmVuIHNvIGZyb20gbm93IG9uIEkgd2lsbCB3YWl0IDIwIG1pbnV0ZXMgZm9yIHlvdSBhbmQgdGhlbiBJIHdpbGwgbGVhdmUuIApGcmFuayB3aWxsIGJlIHJlbWVtYmVyZWQgZm9yIGhpcyBsb3ZlIG9mIGNhbXBpbmcgaW4gQWxnb25xdWluLCBnb2xmaW5nIGF0IHRoZSBQZXRlcmJvcm91Z2ggR29sZiBDbHViLCBwbGF5aW5nIHBva2VyIGF0IHRoZSBjYXNpbm8sIGJldHRpbmcgb24gYSBnaW4gZ2FtZSB3aXRoIGhpcyBmcmllbmRzIGFuZCBoaXMgdHJhZGVtYXJrIHN0b2dpZXMuIEluIGFjY29yZGFuY2Ugd2l0aCBGcmFuaydzIHdpc2hlcywgY3JlbWF0aW9uIGhhcyB0YWtlbiBwbGFjZSBhbmQgdGhlcmUgd2lsbCBiZSBhIGNlbGVicmF0aW9uIG9mIGxpZmUgaGVsZCBpbiB0aGUgc3ByaW5nLiAKV2hlbiBjb21iaW5lZCB3aXRoIG92ZXJhbGwgdGlzc3VlIHN0aW11bGF0aW9uLCBtYXNzYWdlIGFsc28gcmVkdWNlcyBhbnhpZXR5IGFuZCBpbmNyZWFzZXMgY2lyY3VsYXRpb24gICB0d28gdGhpbmdzIHRoYXQgY2FuIGJvb3N0IGZlZWxpbmdzIG9mIHBoeXNpY2FsIHdlbGxuZXNzLiAKU2NvcmU6IDI3LiBEdWguCkhleSwgaXQgY29tcGV0aXRpb24sIHNvIHdlIGhhdmUgdG8gcHV0IHBva2VyIGZhY2UgYW5kIHRyeSB0byB3aW4uIApCYW5kIERpcmVjdG9yIEFjY3VzZWQgT2YgSGF2aW5nIFNleCBXaXRoIFRlZW4gU3R1ZGVudApUaGVpciBzdG9yeSBjZW50ZXJzIGFyb3VuZCBNb3J0Z2FnZSBFbGVjdHJvbmljIFJlZ2lzdHJhdGlvbiBTeXN0ZW1zLCBiYXNlZCBpbiBSZXN0b24sIFZpcmdpbmlhLiBUaGUgY29tcGFueSwgd2hpY2ggaXMgd2lkZWx5IGtub3duIGFzIE1FUlMsIHdhcyBjcmVhdGVkIG1vcmUgdGhhbiBhIGRlY2FkZSBhZ28gYnkgdGhlIGJpZ2dlc3QgcGxheWVycyBpbiB0aGUgbW9ydGdhZ2UgYnVzaW5lc3M6IEZhbm5pZSBNYWUsIEZyZWRkaWUgTWFjLCBHTUFDIChub3cgb3duZWQgYnkgQWxseSBCYW5rKSwgYW5kIHRoZSBNb3J0Z2FnZSBCYW5rZXJzIEFzc29jaWF0aW9uLgpBdCB1bmlvbiBwcmVzaWRlbnQgQnVycm93cycgU291dGggSmVyc2V5IGhvbWUsIGNhcnMgc3Rvb2QgaW4gdGhlIGRyaXZld2F5LCBidXQgdGhlIHNoYWRlcyB3ZXJlIGRyYXduLiBBZ2VudHMgaW4gRkJJIHZlc3RzIHNwZW50IHJvdWdobHkgYW4gaG91ciByZW1vdmluZyBib3hlcyBvZiBmaWxlcyBmcm9tIHRoZSBob3VzZSwgbmVpZ2hib3JzIHNhaWQuCkFub3RoZXIga2luZCBvZiBjaGFsbGVuZ2UgcmVzcG9uc2UgaW52b2x2ZXMgc3RhcmZpc2guIApTb21ldGhpbmcgdGhhdCByZW1haW5lZCBhIHBhc3Npb24gZm9yIHRoZSBub25hZ2VuYXJpYW4gd2FzIHN1cHBvcnRpbmcgYSBsb2NhbCBncm91cCBjYWxsZWQgSGlyb21pIFQnYWkgQ2hpLiBBcyByZWNlbnRseSBhcyBBcHJpbCwgVHVzc2kgYW5kIEpvaG4gS2x1Z2UgaG9zdGVkIGFuIGFmdGVybm9vbiBmdW5kcmFpc2VyIGZvciB0aGUgZ3JvdXAgYXQgdGhlaXIgQWxiZW1hcmxlIGhvbWUsIEZlYXRoZXJpZGdlLiBUaGFua3MgdG8gdGhlaXIgZG9uYXRpb25zLCBIaXJvbWkgdGVhY2hlcyBUJ2FpIENoaSwgYSBDaGluZXNlIG1hcnRpYWwgYXJ0IGtub3duIGZvciB1bml0aW5nIG1pbmQgYW5kIGJvZHksIHRvIHVuZGVycHJpdmlsZWdlZCBhcmVhIGNoaWxkcmVuLi4gClNjaG9uIGRpZSAsIGRlcmVuIEhlcnN0ZWxsdW5nc2tvc3RlbiBzaWNoIGF1ZiBiZXIgJDgwIE1pbGxpb25lbiBiZWxpZWZlbiwgd2lyZCBkaWUgRnJldW5kZSBkZXMgR2xja3NzcGllbHMgbmljaHQgbnVyIGltIFp1c2FtbWVuaGFuZyBtaXQgZGVuIGRvcnQgYW56dXRyZWZmZW5kZW4gQ2FzaW5vIEdhbWVzIGJlc3RlY2hlbi4gQXVjaCBkaWUgZWRsZSBBcmNoaXRla3R1ciB1bmQgZGFzIGF1c2dlc3VjaHQgYW5zcHJ1Y2hzdm9sbGUgSW50ZXJpZXVyIHNldHplbiBmcm1saWNoIG5ldWUgTWFzdGJlLiBBYmVyIGF1Y2ggc210bGljaGUgd2VpdGVyZW4gRWxlbWVudGUgaW0gZ2VzYW10ZW4gR3JlZW5icmllciBSZXNvcnQgaGViZW4gc2ljaCBpbiBleHRyZW1lbSBNYWUgdm9uIGRlciBNYXNzZSB2ZXJnbGVpY2hiYXJlciBBbmdlYm90ZSB3ZXNlbnRsaWNoIGFiLi4gCkVpdGhlciB3YXksIHRoZSBib251cyBpcyBkZXRlcm1pbmVkIGJ5IHlvdXIgY29udHJpYnV0aW9ucywgd2hpY2ggYnJpbmdzIG9uZSB0byB0aGUgbmV4dCBwb2ludC4gQWRkaXRpb24gb2YgaW5jZW50aXZlcyBkb2VzIG5vdCBtZWFuIHRoZSBlbGltaW5hdGlvbiBvZiByaXNrLiAKSGVyZSwgTW9sbHkgc3RyaXZlcyB0byB3aW4gdGhlIHJlc3BlY3Qgb2YgaGVyIGVzdHJhbmdlZCBmYXRoZXIgKEtldmluIENvc3RuZXIpIHdoaWxlIHNob3ZpbmcgaGVyIHN1Y2Nlc3MgaW4gaGlzIGZhY2UuIApUd2l0dGVyIEIgZG9lc24gZXhpc3QgYXQgYWxsLiAKTG9va3MgdG8gbWUgbGlrZSB5b3UgdG9vayB0aGUgbWV0YSB0b28gc2VyaW91c2x5IGFuZCBidXJuZWQgb3V0IGdyaW5kaW5nIHRvbyBoYXJkLgpBbGxlbi4gCkkgZG9uIGV2ZW4gZnVsbHkgdHJ1c3QgdGhlbS4gV2hhdCBpZiBDYWVzYXIgZ28gYmFua3J1cHQgYWdhaW4sIGJ1dCB0aGlzIHRpbWUgZm9yIGdvb2Q/IEFyZSB0aGV5IHJlYWxseSBnb25uYSBoYXZlIG1vbmV5IHRvIHBheSBvdXQ/IFByb2JhYmx5LCBidXQgaXQgbWlnaHQgdGFrZSBzb21lIGVmZm9ydCBvbiBteSBlbmQuIEkgdGhvdWdodCB0aGV5IGFzIHNhZmUgYXMgYSBiYW5rLCBidXQgdGhleSBvYnZpb3VzbHkgbm90IEZESUMgaW5zdXJlZC4gCkZvciBpbnN0YW5jZSwgd2hlbiBJIGZpcnN0IGFycml2ZWQgYXQgbXkgY3VycmVudCBpbnN0aXR1dGlvbiwgTWlkZGxlYnVyeSBDb2xsZWdlLCBhbiBlbmRvd2VkIENoYWlyIGhhZCBqdXN0IGJlZW4gbmFtZWQgZm9yIGZvcm1lciBTdXByZW1lIENvdXJ0IEp1c3RpY2UgV2lsbGlhbSBSZWhucXVpc3QuIApHZXJpYXRyaWMgTWFzc2FnZSBDZXJ0aWZpY2F0aW9uClBldGNoYWJ1cmkgUm9hZCBGdWxsU2VydmljZUJLSwpUaGUgbW9ja3VtZW50YXJ5IGhhcyBnYWluZWQgc29tZSBwb3B1bGFyaXR5IG92ZXIgdGhlIGxhc3QgZGVjYWRlLCB0aGFua3MgdG8gdGhlIHN1Y2Nlc3Mgb2YgVFYgc2hvd3MgbGlrZSAiQ3VyYiBZb3VyIEVudGh1c2lhc20iIGFuZCAiVGhlIE9mZmljZS4iIEhvd2V2ZXIsIHRoZXkncmUgc3RpbGwgaW4gcmVsYXRpdmVseSBzaG9ydCBzdXBwbHksIHdoaWNoIGlzIGEgc2hhbWUsIGJlY2F1c2UgYXQgdGhlaXIgYmVzdCwgdGhleSBjYW4gbWFrZSBmb3IgYW4gZXh0cmVtZWx5IGRpc3RpbmN0IGFuZCBoaWxhcmlvdXMgYnJhbmQgb2YgY29tZWR5LiAKSXQgd2hlbiBzb21ldGhpbmcgaXMgc3VwcG9zZWQgdG8gYmUgZG9uZSwgYnV0IGlzbiBkb25lLiBCZWNhdXNlIHRoZXJlIGFyZSBubyBpbW1lZGlhdGUgY29uc2VxdWVuY2VzLCBpdCBiZWNvbWVzIHRoZSBzdGFuZGFyZC4gQW5kIHRoZW4gaXQgYml0ZXMgeW91IG9uIHRoZSBhc3MuLiAKRmlubiBNYWtlbGEgc291bGlnbmUgcXUnaWwgZW4gdmEgdG91dCBhdXRyZW1lbnQgYXV4IHRhdHMgVW5pcywgbyBkZXMgZW1wbG95ZXVycyB2b250IGp1c3F1JyBkZW1hbmRlciBsZSBjb2RlIGQnYWNjcyBhdSBjb21wdGUgRmFjZWJvb2sgZGUgbm91dmVhdXggZW1wbG95cyBwb3RlbnRpZWxzLgpCdXQgdGhlIE5DQUEgYW5kIGNvYWNoZXMgd2l0aCBvcHVsZW50IGNvbnRyYWN0cyB3aG8gbGl2ZXMgYSBsaWZlIG9mIGxhcmdlc3NyZWFsbHkgZG8gbWFrZSBtZSBzaWNrIGFuZCBoYXZlIHJ1aW5lZCBjb2xsZWdpYXRlIGF0aGxldGljcyBmb3IgbWUuLiAKR3JlYXQgam9iIFJpY2hhcmQuIEZvciB0aG9zZSB3YW50aW5nIHRvIGRlYmF0Y2ggdXNpbmcgdGhlIFhtbFBvbGxpbmcgbWVjaGFuaXNtIG9mIHRoZSBXQ0YgU1FMIGFkYXB0ZXIsIGl0IHdpbGwgbm90IGJlIGFzIHNpbXBsZS4gWW91IHdpbGwgcHJvYmFibHkgZW5kIHVwIHJlc29ydGluZyB0byB0aGUgZGViYXRjaGluZyBtZXRob2Qgb2YgdGhlIG5hdGl2ZSBTUUwgYWRhcHRlciBtZWFuaW5nIHlvdSBoYXZlIHRvIGNyZWF0ZSBhIHNlY29uZCBzY2hlbWEgZm9yIHRoZSBib2R5IHRvIHRoZSBkZWJhdGNoZWQgcmVjb3JkIG9mIHRoZSBlbnZlbG9wZS4KVGhlIHVzZSBvZiB0aGUgQmlvZnJlZXplIHBhaW4gcmVsaWV2aW5nIGdlbCBpcyBhbiBlZmZlY3RpdmUgd2F5IHRvIHRlbXBvcmFyaWx5IGFpZCBtaW5vciBhY2hlcyBhbmQgcGFpbnMuIApXaGVuIGEgbWFwIGVuZHMsIGV2ZXJ5Ym9keSB2b3RlcyBiZXR3ZWVuIDMgbWFwcyBmb3IgdGhlIGdhbWVtb2RlIHRoYXQgd2FzIGp1c3QgcGxheWVkLiAKQm9iaWFuIGhhZCBib3RoIG9mIGhpcyBhbmtsZXMgInNoYXR0ZXJlZCIgYnkgYnVsbGV0cyBhbmQgYWxzbyBzdWZmZXJlZCBhIGd1bnNob3Qgd291bmQgdW5kZXIgaGlzIGxlZnQgYXJtLCBGcmV5IHNhaWQgZm9sbG93aW5nIE1vbmRheSdzIHByb2NlZWRpbmdzLgpTdCBLaWxkYSdzIG5ldyBib2FyZCwgbGVkIGJ5IHByZXNpZGVudCBHcmVnIFdlc3Rhd2F5LCB1c2VkIGEgcGxhdGZvcm0gb2YgZGV2b3RpbmcgbW9yZSBtb25leSB0byBmb290YmFsbCBzcGVuZGluZyB0byBnYWluIHBvd2VyIGFuZCBjaGllZiBleGVjdXRpdmUgQXJjaGllIEZyYXNlciBzYWlkIHRoZSBuZXcgZGV2ZWxvcG1lbnQgd291bGQgYmVjb21lIGEgbGVhZ3VlIGJlbmNobWFyay4gVGhlIGZvb3RiYWxsIGRlcGFydG1lbnQgaXMgYWxzbyBjb25maWRlbnQgYmV0dGVyIGZhY2lsaXRpZXMgcHJvdmlkZSBhIGJldHRlciBjaGFuY2Ugb2Ygd2lubmluZyBnYW1lcy4gCkFjY29yZGluZyB0byBTaWxpY29uZXJhJ3MgcmVwb3J0LCAiTGVmdCBBbGl2ZSdzIiByZWxlYXNlIGluIEphcGFuIHdhcyBtZXQgd2l0aCBjcml0aWNpc20gZHVlIHRvIHRoZSBnYW1lJ3MgaXNzdWUgd2l0aCBpdHMgY29udHJvbHMsIGNoYXJhY3RlciBtb3Rpb25zLCBncmFwaGljcyBhbmQgaXRzIHBvb3IgZGVzaWduLiBJdHMgQW1hem9uIEphcGFuIHJhdGluZyBpcyBvbmx5IDEuOCBvdXQgb2YgNS4gU29vbiBhZnRlciwgdGhlIGdhbWUgaGFkIGl0cyBzdHJlYW1pbmcgYmxvY2tlZCBvbiB0aGUgUGxheVN0YXRpb24gNCBhbmQgaGFzIHJlY2VpdmVkIGEgcHJpY2UgLjMgZGF5cyBhZ28uIApXaGljaCB0YWtlcyB0aW1lLCBidXQgY2FuIGJlIGRvbmUuIApUb3AgVGVjaCBBdCBDRVMgMjAxNkNFUyAyMDE2TEFTIFZFR0FTLCBOViAgIEpBTlVBUlkgMDc6IFRoZSBBbGNhdGVsIENhcmVUaW1lIGtpZCdzIHNtYXJ0d2F0Y2gsIHdoaWNoIGVxdWlwIHdpdGggaXRzIG93biBTSU0gY2FyZCBmb3IgY2hpbGRyZW4gdG8gY2FsbCBmb3IgaGVscCB3aXRoIHRoZSBmaXZlIHByZSBzZXQgbnVtYmVycyB0aGVpciBwYXJlbnRzIGFwcHJvdmUgYW5kIGEgR1BTIHRyYWNrZXIgdGhhdCBhbGxvd3MgcGFyZW50cyB0byBzZXQgc2FmZXR5IGJvdW5kYXJ5IG9uIEdvb2dsZSBNYXAgYW5kIGdldCBhbGVydCBpZiB0aGVpciBraWRzIGV4aXQgdGhhdCBhcmVhLCBpcyBvbiBkaXNwbGF5IGF0IENFUyAyMDE2IGF0IHRoZSBMYXMgVmVnYXMgQ29udmVudGlvbiBDZW50ZXIgb24gSmFudWFyeSA3LCAyMDE2IGluIExhcyBWZWdhcywgTmV2YWRhLiAKQnV0IEkgbWFkZSBpdCBjbGVhciBJIHdhbnRlZCBub3RoaW5nIHRvIGRvIHdpdGggaGltLiBKdXN0IGJsb2NrZWQgYW5kIGRlbmllZCB0aGUgbmV3IGZyaWVuZCByZXF1ZXN0IChoZSBtYWRlIHNldmVyYWwgYWNjb3VudHMgb3ZlciBzZXZlcmFsIG1vbnRocyB0byB0cnkgYW5kIGdldCBiYWNrIGludG8gbXkgc29jaWFsIG1lZGlhIGZlZWQpLlVuZm9ydHVuYXRlbHkgd2UgbGl2ZWQgY2xvc2UgdG8gb25lIGFub3RoZXIgYW5kIGFueXRpbWUgSSB3b3VsZCBnbyBvdXQgYW5kIHNlZSBoaW0gaGUgd291bGQgc3RhcmUgYXQgbWUgKGNyZWVweSEpLkV2ZW50dWFsbHkgaGUgbG9zdCBpbnRlcmVzdCBhcyBJIHdhc24gZ2l2aW5nIGhpbSBhbnkgd2lnZ2xlIHJvb20gYmFjayBpbnRvIG15IGxpZmUuSSB0aGluayB5b3Ugc2hvdWxkIGp1c3QgbGV0IHRoaXMgZ3V5IGdvLiBDYW5jZWwgaGltIG91dCBvZiB5b3VyIGxpZmUuIApBY2NvcmRpbmcgdG8gV2lsbGlhbSBMLiAKRm9vZCBmZWVkcyBvdXIgYm9keSBhbGwgc29ydHMgb2YgbnV0cmllbnRzIGFuZCBvdXIgZmluZ2VycyB0YWtlIG5vIGV4Y2VwdGlvbiB0byB0YWtpbmcgbnV0cmllbnRzIHRvIHN0YXkgZmlybSBhbmQgc3Ryb25nZXIuIApMYXVnaGxpbiwgTmV2YWRhLiBSZW5vdnMuIApXaGVuIHRoZXkgZ290IHRvIHRoZSBkb29yLCBJIGFuc3dlcmVkIHdpdGggYmxvb2RzaG90IHdhdGVyeSBleWVzIGZyb20gd3JldGNoaW5nIHNvIGhhcmQuIApGdW5kaW5nIGZvciB0aGUgcHJvZ3JhbSBleHBpcmVkIGF0IHRoZSBlbmQgb2YgU2VwdGVtYmVyLCBhbmQgd2hpbGUgQ29uZ3Jlc3MgaGFzIGNvYmJsZWQgdG9nZXRoZXIgZnVuZGluZyBtZWNoYW5pc21zIHRvIHRyeSBhbmQga2VlcCBzdGF0ZXMgY292ZXJlZCwgdGhlIG1vbmV5IGlzIGhhcmRseSB0aGUga2luZCBvZiBsb25nIGxhc3Rpbmcgc29sdXRpb24gdGhhdCBtYW55IHN0YXRlcyBzYXkgdGhleSBuZWVkIHRvIGtlZXAgdGhlIHByb2dyYW0gcnVubmluZyBhbmQgcHJvdmlkZSBhc3N1cmFuY2VzIHRvIGxvdyBpbmNvbWUgZmFtaWxpZXMgdGhhdCB0aGVpciBjaGlsZHJlbiB3aWxsIGhhdmUgaGVhbHRoIGluc3VyYW5jZS4gCkNvdWxkIGdvIHJlYWxseSBmYXIgYW5kIHNheSBldmVuIGlmIHlvdSBzZW5kIGEgdGV4dCBtZXNzYWdlIHRvIGEgY2FzaW5vIGN1c3RvbWVyIGluIGFub3RoZXIgc3RhdGUgYW5kIHlvdSBhcmUgc2F5aW5nIHBsYXkgYmxhY2tqYWNrIHRoaXMgd2Vla2VuZCBoZXJlIGEgZGVhbCwgYXJndWFibHkgeW91IGNhbiBzYXkgdGhhdCBpcyBpbmZvcm1hdGlvbiB0aGF0IGFzc2lzdHMgaW4gdGhlIHBsYWNlbWVudCBvZiBhIHdhZ2VyLCBzaGUgc2FpZC4gZG91YnQgaXQgd2lsbCBnbyB0aGF0IGZhciwgYnV0IHdlIHdpbGwgb25jZSBhZ2FpbiBiZSBzdWJqZWN0IHRvIHRoZSBpbnRlcnByZXRhdGlvbi4KSGF0dGllc2J1cmcsIE1pc3Npc3NpcHBpLCBBcHJpbCA3LCAyMDA0ICBQaG90byBieSBHYXZpbiBBdmVyaWxsL1RoZSBIYXR0aWVzYnVyZyBBbWVyaWNhbiAoQVApLCBTdC4gR2VvcmdlIE5ld3MuIApCdXQsIEJ1bmNvbWJlIENvdW50eSBTaGVyaWZmIFZhbiBEdW5jYW4gc2F5cyBoaXMgb2ZmaWNlIGRvZXNuIGhhdmUgYSByZWNvcmQgb2YgYSBjYWxsIG1hZGUgZnJvbSBFaWxlZW4gaG9tZS4gU28sIHRoaXMgcGFzdCBKYW51YXJ5LCBFaWxlZW4gY29udGFjdGVkIE5ld3MgMTMgaW52ZXN0aWdhdGl2ZSB0aXAgbGluZSBmb3IgaGVscC4gSW4gTWFyY2ggd2Ugd2VudCB0byBQbGF5ZXJzIENpZ2FyIEJhciB3aXRoIGEgY2VsbCBwaG9uZSB0byByZWNvcmQgdGhlaXIgdmlkZW8gcG9rZXIgbWFjaGluZXMuIFdlIHdhdGNoZWQgYXMgb25lIG1hbiBhcHBhcmVudGx5IGJldCBzbWFsbCBhbW91bnRzIG9mIG1vbmV5IHdpdGgganVzdCBhIGNsaWNrIG9mIGEgbW91c2UuIFdlIHRoZW4gY29udGFjdGVkIHRoZSBTaGVyaWZmIE9mZmljZSB0byByZXBvcnQgd2hhdCB3ZSBoYWQgc2VlbiBhbmQganVzdCBhIGZldyBkYXlzIGxhdGVyIHRoZXkgYnVzdGVkIHRocmVlIGJhcnMsIGluY2x1ZGluZyBQbGF5ZXJzLgpTdXdvbiB0byBHb25nanU6QmVzaWRlcyB0aGUgYnVzLCBzaG91bGQgSSBjb25zaWRlciB0YWtpbmcgdHJhaW4gYmFjayB0byBTZW91bCBhbmQgdGhlbiB0cmF2ZWwgdG8gR29uZ2p1IHZpYSBLVFg/CkEgbmFrZWQgd29tYW4gd2Fsa2VkIGNhc3VhbGx5IGJ5LCBhbmQgbm8gb25lIGJhdHRlZCBhbiBleWUuIApUaGV5IHdlcmUgaW5zdHJ1Y3RlZCB0byB3ZWFyIHRoaXMgcGFkIGluIGFsbCBzaG9lcyBmb3IgdHdvIHdlZWtzLCBhbmQgbm90IHRvIGFsdGVyIHRoZWlyIHVzdWFsIGFjdGl2aXRpZXMuClRoYXQgYSBnb29kIHRoaW5nIGZvciB0aGUgYWR2ZXJ0aXNlcnMsIHJpZ2h0PyAiTG9vayBhdCBtZSwgSSBwZXJmZWN0IGFuZCBza2lubnkgYW5kIEkgdXNlIHRoaXMgdG9vdGhwYXN0ZSBhbmQgaWYgeW91IHdvdWxkIGp1c3QgYnV5IHRoaXMgdG9vdGhwYXN0ZSwgeW91IG1pZ2h0IGJlIHNraW5ueSBhbmQgcGVyZmVjdCB0b28iIGlzIGhvdyBhZHZlcnRpc2luZyB3b3Jrcy4gCiJXZSBiZWxpZXZlIGluIHdoYXQgd2UgYXJlIGRvaW5nLCBhbmQgaXQgaXMgYSBkaWZmZXJlbnQgd2F5IG9mIGxpZmUgaW4gSW5kaWdvIFNoaXJlIGJlY2F1c2Ugd2UgZG9uIGhhdmUgcG9rZXIgbWFjaGluZXMsIiB0aGVuIEluZGlnbyBtYXlvciBKZW5ueSBEYWxlc2FpZC4gCkkgd2FzbiBzdXJlIHdoYXQgSSB3YXMgZ29pbmcgdG8gZG8uIEtpY2sgaGltIGhhcmQgaW4gaGlzIHNvbGFyIHBsZXh1cyBvciBicmluZyBteSBmb290IGRvd24gb24gaGlzIGdyb2luIG9yIGp1c3QgaG9sZCBpdCByaWdodCB0aGVyZSwgZ2V0dGluZyBvZmYgb24gaGlzIGZlYXIuLiAKRWNvbm9teSB3aWxsIHR1cm4gYXJvdW5kLCBzaGUgc2FpZC4gaGF2ZSB0byBrZWVwIHRoZSBpbnZlc3RtZW50IHVwIGluIG91ciBwcm9kdWN0IGxpbmVzLiBpc3N1ZSBpbiBFdXJvcGUsIHNheXMgU2FtYXJkemljaCwgaXMgdGhlIGZhY3QgdGhhdCB0aGUgZG93bnR1cm4gaXMgdW5ldmVuLiBUaGUgR2VybWFuIG1hcmtldCwgZm9yIGV4YW1wbGUgcmVtYWlucyByZWxhdGl2ZWx5IHN0cm9uZywgd2hpbGUgR3JlZWNlLCBTcGFpbiBhbmQgUG9ydHVnYWwgYXJlIHNlZWluZyBtdWNoIG1vcmUgZGlmZmljdWx0IHRpbWVzLgoiV2UgdGhvdWdodCBSb25hbGQgUmVhZ2FuIHdhcyBiYWQgZW5vdWdoIHdpdGggdGhlIHJlbGlnaW91cyByaWdodCBhbmQgRm9jdXMgb24gdGhlIEZhbWlseSwiIFBhcnRyaWRnZSBzYWlkLiAiVGhhdCBpcyB3aGF0IGluc3BpcmVkIHRoZSBib29rLgpUaGV5IHN0b3JlIGl0IGluIHRoZWlyIGhvbmV5IHNhY2ssIHRoZW4gcmV0dXJuIHRvIHRoZSBoaXZlIHdoZXJlIG90aGVyIHdvcmtlciBiZWVzIHN1Y2sgaXQgb3V0IGFuZCBjaGV3IGl0LCBicmVha2luZyBkb3duIHRoZSBuZWN0YXIgY29tcGxleCBzdWdhcnMgaW50byB0d28gc2ltcGxlIHN1Z2FycyBjYWxsZWQgZ2x1Y29zZSBhbmQgZnJ1Y3Rvc2UuIApQb2tlciBzaXRlIGZhY2VzClRoZSBndXlzIGFyZW50IG11Y2ggYmV0dGVyIHdpdGggc3VwZXJvdmVyc2l6ZWQgYmFza2V0YmFsbCBzaG9ydHMsIGdvIGFoZWFkcyB3aXRoIHNvY2tzLCBhbmQgc29tZSBvZmYgYnJhbmQgYmFza2V0YmFsbCBqZXJzZXkgc3RyZXRjaGVkIHRvIHRoZSBtYXggdG8gY292ZXIgdGhlIHdlbGZhcmUvYmVlciBiZWxseS4uIApXaGF0IHRoZSBwcmljZSBvZiBhIHJvY2tpbmcgaG9yc2UgZnJvbSBhIG5vcm1hbCB0b3lzdG9yZT8gTGV0IHNheSAzMCA1MCwgYWRkIGEgMCBmb3IgaGlzIHN0dWZmIGFuZCBtYXliZSBkb3VibGUgb3IgdHJpcGxlIHRoYXQgbnVtYmVyIHRoZW4sIGRlcGVuZGluZyBvbiB0aGUgd29vZCwgZmVhdHVyZXMsIHRpbWUgaW52b2x2ZWQgY3JlYXRpbmcgaXQuLiAKQWxtb3N0IGFsbCBvZiB1cyB0aG91Z2h0IGhlIGhhZCBhIHBhcnQgdG8gcGxheSwgYWZ0ZXIgaGlzIG9taW5vdXMgd29yZHMgYXMgdGhleSBkcm92ZSBhd2F5LCBhbmQgdGhlIHNjYXJzIHRoYXQgd2VyZSBkZWJhdGVkIGVuZGxlc3NseS4gQnV0IGZldyBzYWlkICJUaGF0IHRoZSB5ZWxsb3cga2luZyIsIGFuZCB0aG9zZSB3aG8gZGlkIHdlcmUgbW9zdGx5IG1vY2tlZCwgb3IgbGlrZSBJIHNhaWQgbWV0IHdpdGggInlvdSByZWFjaGluZywgaGUgbm90IHRoZSBsZWFkZXIgb2YgYWxsIHRoaXMsIGJ1dCBwcm9iYWJseSBpcyBhIHJlbGF0aXZlL2Nvbm5lY3Rpb24iIHJlc3BvbnNlLiBJIGZlbHQgdGhhdCB3YXkgYWJvdXQgaGltIHRoZW4sIGNsZWFybHkgcmVsZXZhbnQsIGFuZCBJIGZlZWwgdGhhdCB3YXkgdG8gYSBsZXNzZXIgZXh0ZW50IGFib3V0IHRoZSBjYWxsLCBiZWNhdXNlIGl0IHdhc24gbmVjZXNzYXJ5LiBUaGV5IGVzdGFibGlzaGVkIGV2ZXJ5dGhpbmcgdGhlIHBob25lIGNhbGwgZXN0YWJsaXNoZWQgb24gdGhlIHN1cmZhY2UuIFNvIG9uY2UgYWdhaW4sIGFzIHdpdGggdGhlIGVwaXNvZGUgaW4gc2Vhc29uIDEsIEkgdGhpbmsgaXQgcHJvYmFibHkgY29ubmVjdGVkIGluIHNvbWUgd2F5LCBidXQgbm90IFRIRSBjbHVlIHBlb3BsZSBhcmUgc2VhcmNoaW5nIGZvci4gSSBjb3VsZCBiZSB3cm9uZywgY2VydGFpbmx5IHdvdWxkbiBiZSB0aGUgZmlyc3QgdGltZS4KTW9yZT4+RGlydHkgUG9saXRpY3MgQ2xlYW51cDogTmlja3kgSGFnZXIgU2V0dGxlcyBXZXN0cGFjIERpc3B1dGVVbmRlciB0aGUgc2V0dGxlbWVudCBhZ3JlZW1lbnQgYW5ub3VuY2VkIHRvZGF5LCBXZXN0cGFjIHdpbGwgYmUgc2lnbmlmaWNhbnRseSB0aWdodGVuaW5nIGl0cyBjb250cmFjdHVhbCB0ZXJtcyBpbiByZWxhdGlvbiB0byB0aGUgcmVsZWFzZSBvZiBjdXN0b21lciBpbmZvcm1hdGlvbiB0byBnb3Zlcm5tZW50IGFnZW5jaWVzLCBpbmNsdWRpbmcgdGhlIFBvbGljZSBXZXN0cGFjIGhhcyBhcG9sb2dpc2VkIHRvIE1yIEhhZ2VyIGZvciByZWxlYXNpbmcgaGlzIGluZm9ybWF0aW9uIGFuZCBoYXMgYWdyZWVkIHRvIHBheSBoaXMgY29zdHMgYW5kIGNvbXBlbnNhdGlvbi4gTW9yZT4+LiAKSWYgSSB3cml0ZSBhIHN0b3J5LCBJIGhhdmUgY3JlYXRlZCBzb21ldGhpbmcgdGhhdCBkaWRuIGV4aXN0IGJlZm9yZSAgdGhhdCBzdG9yeS4gCk9uIHRoZSBvdGhlciBoYW5kLCBzb21lIG9mIHRoZSBtb3JlIGVzb3RlcmljIG1ldGhvZHMgb2YgY2hlYXRpbmcgY2FzaW5vcyBhcmUgc2ltcGx5IG5vdCBwb3NzaWJsZSBvbmxpbmUuIApPbmUgaW1wb3J0YW50IHRoaW5nIHRoYXQgSmFzb24gU29tZXJ2aWxsZSBzdHJlc3NlcyBhIGxvdCBpcyBrbm93aW5nIHdoeSB5b3UgYXJlIGJldHRpbmcuIEFyZSB5b3UgYmV0dGluZyBmb3IgdmFsdWU/IChtZWFuaW5nIHdvcnNlIGhhbmRzIGFyZSBjYWxsaW5nKSBBcmUgeW91IGJldHRpbmcgYXMgYSBibHVmZj8gKGZvcmNpbmcgYmV0dGVyIGhhbmRzIHRvIGZvbGQpLgpUaGlzIG1vcm5pbmcgSSByZWNlaXZlZCB0aGlzIGxldHRlciBmcm9tIFNhcmFoLiBJIGNvcnJlY3RlZCB0aGUgaW5mbyBhbmQgd3JvdGUgYmFjayB3aXRoIGFuIGFwb2xvZ3kuIElhbHNvIGluZm9ybWVkIGhlciBhbmQgdGhlIFBBU0ggZXhlY3V0aXZlIEkgd291bGQgYmUgcHVibGlzaGluZyBoZXIgbGV0dGVyIGFuZCBteSByZXNwb25zZS4KSGVyIGZyYXVkdWxlbnQgcnVuIHdhcyBldmVudHVhbGx5IGhhbHRlZCBieSBoZXIgZmF0aGVyLCBKaW0gSGFycm9kLCB3aG8gcmVwb3J0ZWQgaGlzIGRhdWdodGVyJ3MgY3JpbWVzIHRvIEZhaXIgVHJhZGluZyBpbiBlYXJseSAyMDEyLgpCdXQgQysrIGlzIHBsYWd1ZWQgYnkgaG9ycmlibGUgZXJyb3IgbWVzc2FnZXMgYW5kIGVycm9yIGJvbWJzIHRoYXQgb2NjdXIgZnJvbSBhIHNpbmdsZSBtaXNzaW5nIHNlbWljb2xvbi4gSmF2YSBhbmQgQyBhcmUgc2xvdyB0byBidWlsZCBhbmQgSmF2YSBpbiBwYXJ0aWN1bGFyIGhhcyBBYnN0cmFjdFByb3h5RmFjdG9yeVZveWFnZVBvdGF0b0Zhcm1lckJlYW5Qcm94eUJlYW4gb3Igd2hhdGV2ZXIgaXQgY2FsbGVkLi4gCkluIHNvbWUgd2F5cyB0aGlzIGJvb2sgcmVwcmVzZW50ZWQgQ2hlZXZlciBnb2luZyBmYXIgYWZpZWxkIGZyb20gdGhlIHN1YnVyYnMgd2hlcmUgaGUgaGFkIG1hZGUgaGlzIG5hbWUuIEhlIGhhZCB0YXVnaHQgcHJpc29uZXJzIHRoZXJlIGluIHRoZSBlYXJseSA3MCBCdXQgRmFycmFndXQgaXMgbm90IHNvIGRpZmZlcmVudCBmcm9tIENoZWV2ZXIgbGF3biBtb3dpbmcgaG91c2Vob2xkZXJzLiBZZWFybmluZywgd2F5d2FyZCwgYmVzZXQgYnkgYW5nZXIgYW5kIG5lZWQgaGUganVzdCBhIENoZWV2ZXIgY2hhcmFjdGVyIGluIGV4dHJlbWlzLiAKVW5saWtlIGEgc3BlZWRpbmcgdGlja2V0LCB5b3UgY2FuIG5vIGxvbmdlciBjb250ZXN0IGEgcGFya2luZyB0aWNrZXQgaW4gUHJvdmluY2lhbCBPZmZlbmNlcyBDb3VydC4gClllcywgaXQgcGFydCBvZiB0aGUgZ2FtZSB0byBraWxsIGVhY2ggb3RoZXIgYW5kIHN0ZWFsIGVhY2ggb3RoZXJzIGxvb3QuIAogMiBwb2ludHMgIHN1Ym1pdHRlZCAyMSBkYXlzIGFnb1RoZSBBbWF6b24gZGVhbCBzZWVtcyBwcmV0dHkgc3R1cGlkLCBhbmQgTmV3IFlvcmsgZG9lc24gbmVlZCB0byBiZW5kIG92ZXIgYmFja3dhcmRzIHRvIGxvY2F0ZSBpdHNlbGYgb24gYSBtYXAuIApBbHBiYWNoIGlzIHRoaXMgZ29yZ2VvdXMgbW91bnRhaW4gdmlsbGFnZSBpbiB0aGUgQWxwcyB3aGVyZSBJcmVuZSBpcyBmcm9tLi4gCkJlIHN0aWxsIHlvdXIgYmVhdGluZyBoZWFydDogSXQgd291bGQgbm90IGJlIGdvaW5nIGZvciBsb25nIG9uY2Ugc2hlIHdhcyB0dXJuZWQgaW50byBhIG1lbWJlciBvZiB0aGUgdW5kZWFkCkNsZWFybHksIGEgY29sZCBhbmQgaW50ZW5zZSBsaWdodGluZyBqdXN0IGNhbid0IGFsbG93IHlvdSB0byBsb29zZW4gdXAgZHVyaW5nIGEgZmFjaWFsIG9yIHBoeXNpcXVlIHRyZWF0bWVudC4uIApTbyBpbWFnaW5lIGEgYmVhdXRpZnVsIGV2ZW5pbmcgd2l0aCBhIGxvdmVkIG9uZSwgYSBzd2VldCBzaXgvdHdlbHZlIHBhY2sgdG8gdGFrZSBvdXIgZHJpbmsgb3JkZXIgYW5kIHJldHVybmVkIGltbWVkaWF0ZWx5IGV2ZXJ5IHRpbWUgcGxhdGVzIHdlcmUgZW1wdHkuIApIaWVyIHNpbmQgZGllIHRyYWRpdGlvbmVsbGVuIFZhcmlhbnRlbjouIApBbHNvLCB0aGV5IGRvbid0IGRvIHRoaXMuIApDQk4gaGFzIHNlZGF0aXZlIGVmZmVjdHMsIGlzIGdyZWF0IGZvciBoZWxwaW5nIHBlb3BsZSBzbGVlcCwgYW5kIGlzIHdoYXQgY2F1c2VzIHRoZSAiY291Y2ggbG9jayIgZWZmZWN0IGluIHNvbWUgc3RyYWlucy4gV2hlbiB5b3UgdXNlIHN5bnRoZXRpYywgbGFiIG1hZGUgVEhDIGFzIG9wcG9zZWQgdG8gY2FubmFiaXMsIHlvdSBtaXNzaW5nIG91dCBvbiBhIGxvdCBvZiBiZW5lZmljaWFsIGNoZW1pY2FscyB0aGF0IG1ha2UgdGhlIHBsYW50IGZhciBtb3JlIGVmZmVjdGl2ZSB0aGFuIHRoZSBtZWRpY2F0aW9uLiAKTGl0dGxlIEZpc2ggaXMgQ2FzZXkgUGxldHQgZGVidXQgbm92ZWwsIGZvbGxvd2luZyB0aGUgMjAxNCBzaG9ydCBzdG9yeSBjb2xsZWN0aW9uIEEgU2FmZSBHaXJsIHRvIExvdmUuIApUaGUgbWFqb3JpdHkgb2YgcGVvcGxlIHdvbnQgc2hvdyB1cCB0byBhIHJlc3RhdXJhbnQgMzAgbWlucyBvciBsZXNzIGJlZm9yZSBjbG9zZSBiZWNhdXNlIHRoZSByZXN0YXVyYW50IGNsb3NlcyBpbiAzMCBtaW5zLiBJdCByYXJlICh0aGFua2Z1bGx5KSB0aGF0IGFueW9uZSB3b3VsZCBiZSBzbyBjbHVlbGVzcyBhcyB0byB0aGluayB0aGF0IG1lYW5zIHRoZXkgY2FuIHNob3cgdXAgYXQgMTUgbWlucyB0byBjbG9zZSBhbmQgZ2V0IGEgbWVhbC4gQ2xvc2VkIGlzIGNsb3NlZC4gClRyeSBvdXQgdGhlIFBva2VyU25vd2llIHByZWZsb3AgYWR2aXNvci4gVG90YWxseSBmcmVlIHRvIHVzZSwgYW5kIGV2ZW4gaGFzIGEgcGhvbmUgYXBwIHRoYXQgd29ya3MgZ3JlYXQuIEl0IGNvdmVycyBvcGVuIHJhbmdlcyBmcm9tIGFsbCBwb3NpdGlvbnMsIGFzIHdlbGwgYXMgcmVzcG9uZGluZyB0byAzIGJldHMsIDQgYmV0cywgYW5kIHNxdWVlemVzIGZyb20gdGhlIGJsaW5kcy4KSG93IFRvIEJlbmVmaXQgZnJvbSBNYXNzYWdlIFRoZXJhcHkKSGlzdG9pcmUgZHUgZHJvaXQKVGhpcyBxdW90ZSBpcyBmcm9tIGEgc3BlZWNoIGJ5IChSYWJpKSBJc3JhZWwgR29sZHN0ZWluMSBhcyBoZWFkIG9mIHRoZSBaaW9uaXN0IE9yZ2FuaXphdGlvbiBvZiBBbWVyaWNhIGFwcGVhbCBhbmQgd2FzIG1hZGUgaW4gMTk0NDIgdGhlIEJyaXRpc2ggV2hpdGUgUGFwZXIgb2YgMTkzOSBvbiBQYWxlc3RpbmUgYW5kIGFsbG93aW5nIEpld3MgdG8gaW1taWdyYXRlIHRvIGVzY2FwZSAidGhlIGhhbmRzIG9mIHRoZSBOYXppIGV4ZWN1dGlvbmVyIiBpbiBFdXJvcGUuIEFtb25nIG1hbnkgb3RoZXIgdGhpbmdzIHRoZSBXaGl0ZSBQYXBlciBsaW1pdGVkIEpld2lzaCBpbW1pZ3JhdGlvbiB0byA3NSwwMDAgZm9yIDUgeWVhcnMgKDE5MzkgMTk0NCkgd2l0aCBsaW1pdHMgb2YgZnVydGhlciBpbW1pZ3JhdGlvbiB0byBiZSBkZXRlcm1pbmVkIGJ5IHRoZSBBcmFiIG1ham9yaXR5LiAKMy4gRWFjaCBUZXhhcyBIb2xkJ2VtIFBva2VyIHBsYXllciBob2xkcyBhbmQgaXMgZGVhbHQgd2l0aCB0d28gY2FyZHMgZmFjaW5nIGRvd24uIFRoZXNlIHR3byBjYXJkcyBhcmUgY2FsbGVkIHlvdSdyZSB0aGUgaG9sZSBjYXJkcyBvciBwb2NrZXQgY2FyZHMuClNoZSBzdGFydGVkIGdyaW5kaW5nIGxvdyBzdGFrZXMgY2FzaCBnYW1lcyBpbiBMYXMgVmVnYXMgaW4gaGVyIGVhcmx5IGRheXMgYXMgYSBwb2tlciBwcm8uIEFiZXJuYXRoeSBpbnRlcmVzdCBpbiBwb2tlciBzdGVtbWVkIGZyb20gYSBjaGlsZGhvb2QgZmlsbGVkIHdpdGggZ2FtZXMgYW5kIGNhcmRzIHdpdGggaGVyIGZhbWlseSwgYW5kIHNoZSB0aGVuIGRpc2NvdmVyZWQgdGhlIHBva2VyIHJvb20gYXQgdGhlIFNlbWlub2xlIEhhcmQgUm9jayBpbiBGbG9yaWRhLCB3aGVyZSBzaGUgcGxheWVkIGhlciBmaXJzdCB0b3VybmFtZW50IGFuZCBnb3QgaG9va2VkLiAKWWVzIEkgZmVlbCBJIGhhdmUgbGVhcm5lZCBzb21ldGhpbmcgdG9kYXksIGFuZCBkYXJlIEkgc2F5LCBncm93biBhIGxpdHRsZSB0b28uIFRoYW5rIHlvdSAic2h1dHlvdXJtb3V0aCIuIEkuIHJlYWxseSBhbSBnbGFkIHdlIGhhZCB0aGlzIHRhbGsuCiJJbiBldmVyeW9uZSBoZSBtZXQsIGhlIGFsd2F5cyBzYXcgdGhlIGJlc3QgdGhleSBjb3VsZCBiZSBhbmQgZG8sIiBzaGUgc2F5cywgImFuZCB0aGV5IHdvdWxkIGxpdmUgdXAgdG8gaXQuIgpBIGJhbGwgcG9pbnQgcGVuIHRvbyBiaWcuIApJIG5vdyBrbm93IHdoYXQgbXkgbW9tIHdlbnQgdGhyb3VnaCBqdXN0IHRvIHN1cnZpdmUuIEkgZW5kZWQgdXAgY3V0dGluZyBoaW0gb3V0IG15IGxpZmUgMTggeWVhcnMgYWdvLCBhbmQgaGF2ZW4gbG9va2VkIGJhY2suIApJIGJlZW4gbGVhdmluZyBmaW5nZXIgbWFya3MgaW4gdGhlIHdvcmsgd2hlcmUgSSBob2xkIGl0IGJlY2F1c2UgaXQgc3RyZXRjaGVzIHRoZSBzdGl0Y2guIApNeSBmcmllbmQgY2F0IGhhZCB3YW50ZWQgdG8gZ28gdG8gd29yayB3aXRoIGhlciwgYnV0IHRoZSB3ZWF0aGVyIHdhcyBzbyBuaWNlIHNvIG15IGZyaWVuZCBtYWRlIGhlciBjYXQgc3RheSBob21lIG91dHNpZGUuIApQeXNhcmVua28gc2F5cyBzdGF0aXN0aWNzIHNob3cgdGhhdCA3NSUgb2YgVWtyYWluaWFucyB3aG8gdXNlIGdhbWJsaW5nIGVzdGFibGlzaG1lbnRzIGFyZSB1bml2ZXJzaXR5IHN0dWRlbnRzIG9yIGhpZ2ggc2Nob29sIGtpZHMsIGFuZCB0aGF0IHVwIHRvIDUlIG9mIGxhcmdlIHRvd24gcG9wdWxhdGlvbnMgYXJlIGFkZGljdHMuIEEgc3VydmV5IGluIE1heSBieSBwb2xsc3RlciBGT00gVWtyYWluZSBzaG93ZWQgdGhhdCA1NSUgb2YgVWtyYWluaWFucyBiZWxpZXZlIGdhbWJsaW5nIGxlYWRzIHRvIGFkZGljdGlvbiBpbiBhZHVsdHMsIHdoaWxlIDQ2JSBzYXkgaXQgYnJlYWtzIHVwIGZhbWlsaWVzIGFuZCA0NCUgYXNzb2NpYXRlIGl0IHdpdGggY3JpbWUuIEFuZCBleHBlcnRzIHNheSB0aGF0IGJlY2F1c2Ugb2YgbGF4IGxlZ2lzbGF0aW9uLCBhcm91bmQgNjAlIHRvIDcwJSBvZiBVa3JhaW5lJ3MgZ2FtYmxpbmcgZXN0YWJsaXNobWVudHMgd2VyZSBvcGVyYXRpbmcgaWxsZWdhbGx5LiBQeXNhcmVua28gZXN0aW1hdGVzIHRoYXQgdGhlIGluZHVzdHJ5IGlzIHdvcnRoIGFib3V0ICQ1IGJpbGxpb24gcGVyIHllYXIsIG9ubHkgMiUgb2Ygd2hpY2ggbWFkZSBpdCB0byB0aGUgc3RhdGUgYnVkZ2V0IGFzIG9wZXJhdG9ycyBhdm9pZGVkIHBheWluZyB0YXhlcy4gKFdhdGNoIGEgdmlkZW8gYWJvdXQgYSBSdXNzaWFuIHJvYWR0cmlwLikKU3VwZXIgTWV0cm9pZCAoU05FUylBYnNvbHV0ZWx5IGRlc2VydmVzIGl0cyBtYXN0ZXJwaWVjZSBzdGF0dXMuIApBbm90aGVyIEFsYWJhbWlhbiBoZXJlLiBJIGxpdmVkIGFuZCB3b3JrZWQgaW4gYm90aCBub3J0aCBhbmQgc291dGggQWxhYmFtYS4gSW4gZmFjdCwgSSB3b3JrZWQgZm9yIHRoYXQgcGFydGljdWxhciBjaGFpbi4gCldoYXQncmUgdGhlIGZ1bmRhbWVudGFsIERvbWlub1FRIj5Eb21pbm9RUSBUZXhhcyBwb2tlciBydWxlcyBlbXBsb3llZCBieSB0aGUgcHJvZmVzc2lvbmFscyB0byBwcm9kdWNlIGEgc3RhYmxlIGluY29tZSBvbmxpbmU/IFdlbGwsIHRoZSBmdW5kYW1lbnRhbHMga2V5IHRvIHlvdXIgc3VjY2VzcyBpcyBsaWtlbHkgdG8gYmUgYmFua3JvbGwgbWFuYWdlbWVudC4gSnVzdCB3aGF0J3MgYmFua3JvbGwgbWFuYWdlbWVudD8gSXQgaXMgdGhlIG1ldGhvZCBvZiBtYW5hZ2luZyB5b3VyIGJhbmtyb2xsIGFuZCB0cmVhdGluZyBpdCByZWFsbHkgbGlrZSB5b3VyIGluZGl2aWR1YWwgY2hpbGQuIFlvdSBtYXkgbmVlZCB0byBhcHBlYXIgYWZ0ZXIgeW91ciBiYW5rcm9sbCBhbmQgbWFrZSBjZXJ0YWluIHRoYXQgeW91IGRvIG5vdCBsb3NlIGl0Li4gCkdvb2QgcG9pbnRzLCB0aGFuayB5b3UuIEkgdGhpbmsgbXkgaHVzYmFuZCBhbmQgSSBhcmUgb3BlbiB0byBlaXRoZXIgd2F5LCBzaG9ydCB0ZXJtIG9yIGxvbmcgdGVybSBwbGFjZW1lbnQuIEJ1dCB5b3UncmUgcmlnaHQsIHRoZXJlJ3MgZGVmaW5pdGVseSBhIGRpc3RpbmN0IGRpZmZlcmVuY2UgYW5kIHdlIG5lZWQgdG8gZXhwbG9yZSB0aGF0IG1vcmUuIApBcyB0aGUgZ2FtZSBzcHJlYWQsIHZhcmlhdGlvbnMgZGV2ZWxvcGVkLiBTb29uIHRoZSBlbnRpcmUgNTIgY2FyZCBkZWNrIHdhcyB1c2VkIGFuZCBGbHVzaCAoZml2ZSBjYXJkcyBpbiBzYW1lIHN1aXQgYnV0IG5vdCBpbiBzZXF1ZW5jZSkgd2FzIGFkZGVkIGFzIGEgYmV0dGluZyBjb21iaW5hdGlvbiBhbG9uZyB3aXRoIHN0cmFpZ2h0IChmaXZlIGNhcmRzIGluIHNlcXVlbmNlIGJ1dCBub3Qgb2YgdGhlIHNhbWUgc3VpdCkuClRoZSBwb2ludCBvZiBlbW9qaXMgaXMgdG8gc2hvdyBlbW90aW9ucywgYnV0IHdoYXQgZW1vdGlvbiBkb2VzIHRoaXMgc2hvdz8gRG8geW91IGp1c3Qgd2FrZSB1cCBpbiB0aGUgbW9ybmluZyBhbmQgdGhpbmsgIndvdywgSSByZWFsbHkgZmVlbCBsaWtlIGEgbWFzc2l2ZSBmdWNraW5nIHN0b25lIHRvZGF5Ij8gSXQgdXNlbGVzcy4gSSBoYXRlIGl0LiAKSWYgeW91IGFyZSBhIGtuaXR0aW5nIGZhbiwgeW91IGNhbiB0cnkgYnVtcCBzdGl0Y2hpbmcuIApFdmVuIG5vdywgcGVvcGxlIGFyZSB0cnlpZ24gdG8gaGFuZHdhdmUgdGhpcyBhd2F5LCBsaWtlIFNtb2xsZXQgZGlkbiBvcmNoZXN0cmF0ZSB0aGlzIGtub3dpbmcgRVhBQ1RMWSB0aGUgcmVhY3Rpb24gaGUgd291bGQgZ2V0LiBEb250IGZvcmdldCBoZSB3YXMgd2lsbGluZyB0byB0aHJvdyB0d28gcmFuZG9tIG1lbiB1bmRlciB0aGUgYnVzIHVudGlsIGhlIHJlYWxpemVkIENQRCBhcnJlc3RlZCBoaXMgYWNjb21wbGljZXMgYW5kIGltbWVkaWF0ZWx5IGxhd3llcmVkIHVwLi4gClRoZSBDaGluZXNlIGdvdmVybm1lbnQgaXMgc3RlcHBpbmcgdXAgcHJlc3N1cmUgb24gdGhlIEtvcmVhbiBzZW1pY29uZHVjdG9yIGluZHVzdHJ5LiBUaGlzIHRpbWUsIGl0IGhhcyBhY2N1c2VkIFNhbXN1bmcgYW5kIFNLIEh5bml4IG9mIHR5aW5nIE5BTkQgZmxhc2ggcHJvZHVjdHMuIFVuZGVyIHRoZSBwcmV0ZXh0IG9mIHRoaXMsIGl0IGhhcyBkZW1hbmRlZCB0aGF0IHRoZXkgc3RvcCB0YWtpbmcgbGVnYWwgYWN0aW9uIGFnYWluc3QgQ2hpbmVzZSBzZW1pY29uZHVjdG9yIGNvbXBhbmllcywgYW5kIHRvIHN0b3AgZmlsaW5nIGxhd3N1aXRzIGluIHRoZSBmdXR1cmUuIFVsdGltYXRlbHksIGl0IGlzIHByZXNzdXJlIHRvIGRyb3AgY2hhcmdlcyBpbiBjb3VydCB0byBhdm9pZCBmYWNpbmcgZWNvbm9taWMgcGVuYWx0aWVzLgpZb3UgbGVmdCBtZSBmb3IgU3V6aWUgQ2Fyb25hYnVsYXJpcywKTGUgQ08yIG4nZXN0IHBhcyBudWlzaWJsZS4gVG91dGVzIGxlcyBwb2xpdGlxdWVzIHF1aSB2aXNlbnQgIGltcGxhbnRlciBkZXMgb2xpZW5uZXMgZXQgZGVzIHBhbm5lYXV4IHBob3Rvdm9sdGFxdWVzLCBhdmVjIHBsdXNpZXVycyBtaWxsaWFyZHMgZGUgc3VidmVudGlvbnMgY2hhcXVlIGFubmUsIHF1YW5kIG9uIGZhaXQgbGUgY2FsY3VsLCBtbWUgZW4gcmVwcmVuYW50IGxlIGNoaWZmcmUgZHUgR0lFQyBzdXIgbGUgZG91YmxlbWVudCBkdSB0YXV4IGRlIENPMiBkYW5zIGwnYXRtb3NwaHJlIHF1aSBlbnRyYW5lcmFpdCB1bmUgaGF1c3NlIGRlIGxhIHRlbXByYXR1cmUgZW50cmUgMSBldCAyLDUgZGVncnMsIGMnZXN0IGRqIHVuZSBub3JtZSBpbmNlcnRpdHVkZSBxdWkgZXN0IGF2b3VlIGV0LCBtbWUgc2kgb24gZmFpdCBsZSBjYWxjdWwgYXZlYyBjZWxhLCB0b3V0ZXMgbGVzIHBvbGl0aXF1ZXMgZnJhbmFpc2VzIG5lIGNoYW5nZXJhaWVudCBwYXMgbGEgdGVtcHJhdHVyZSBkZSBsYSBwbGFudGUgZGUgcGx1cyBkZSBsJ29yZHJlIGQndW4gbWlsbGltZSBkZSBkZWdyLiAKVGhlIHNoZWVyIHNjYWxlIG9mIHRoZSB1bml2ZXJzZSBpcyB3aGF0IGxlYWRzIG1vc3QgdG8gYmVsaWV2ZSB0aGVyZSBpcyBwcm9iYWJseSBsaWZlLiBPdXIgZ2FsYXh5IGhhcyB0aGUgbWFzcyBvZiAxMDAgYmlsbGlvbiBvZiBvdXIgc3VucywgYnV0IHByb2JhYmx5IGhhcyBjbG9zZXIgdG8gdGhlIHJhbmdlIG9mIDIwMCA0MDAgYmlsbGlvbiBzdGFycyBvZiB2YXJ5aW5nIHNpemVzLiBTb2xhciBzeXN0ZW1zIChzdGFycyB3aXRoIHBsYW5ldHMpIGluIG91ciBnYWxheHkgY291bGQgYmUgYXMgaGlnaCBhcyAxMDAgYmlsbGlvbiBhcyB3ZWxsLiBUaGUgbnVtYmVyIG9mIGdhbGF4aWVzIGluIG91ciBvYnNlcnZhYmxlIHVuaXZlcnNlIGlzIGJldHdlZW4gKG9uIHRoZSBsb3dlc3QgZW5kIG9mIG1hdGggdXNpbmcgb2JzZXJ2ZWQgZ2FsYXhpZXMgaW4gdGhlIEh1YmJsZSBEZWVwIEZpZWxkIGltYWdlKSAxNzYgYmlsbGlvbiBhbmQgKGZhciBtb3JlIGxpa2VseSBrbm93aW5nIHRoZSBsaW1pdHMgb2YgdGhlIGluc3RydW1lbnRzKSAyIHRyaWxsaW9uIGdhbGF4aWVzLgpCdXQgTGEgVG95YSBsYXRlciByZWNhbnRlZCBoZXIgY2xhaW1zLCBhbmQgbm9ib2R5IGluIHRoZSBKYWNrc29uIGZhbWlseSBldmVyIGNvbmZpcm1lZCBhbnkgb2YgdGhlc2UgcnVtb3Vycy4gVGhlIEtpbmcgb2YgUG9wIHdhcyBvcGVuIGFib3V0IGhpcyBmYXRoZXIgY29ycG9yYWwgcHVuaXNobWVudC4gSGUgd2VwdCBkdXJpbmcgYSAxOTkzIGludGVydmlldyB3aXRoIE9wcmFoIFdpbmZyZXkgYXMgaGUgYWNjdXNlZCBoaXMgZmF0aGVyIG9mIHBoeXNpY2FsIGFidXNlLiAKVGhlIHdlYWtuZXNzIGluIGhvdXNpbmcgbWFya2V0cyBhbHNvIGFmZmVjdHMgbW9ydGdhZ2UgbGVuZGluZywgYSBidXNpbmVzcyBUaGUgQmlnIEZpdmUgYmFua3MgY29udGludWUgdG8gZG9taW5hdGUgaW4gQ2FuYWRhLiBUaGUgY29udGludWVkIHNsb3dkb3duIGluIGhvdXNpbmcgc2FsZXMgbWF5IGhhdmUgaW5mbHVlbmNlZCBiYW5rcyBtb3J0Z2FnZSBwb3J0Zm9saW9zIHRoZSBmaXJzdCBzaWducyBvZiBzdWNoIGFuIGVmZmVjdCBjb3VsZCBzb29uIGJlIHZpc2libGUgd2hlbiB0aGUgYmFua3MgcmVsZWFzZSB0aGVpciB1cGRhdGVkIGVhcm5pbmdzIHJlcG9ydCBpbiB0aGUgY29taW5nIGRheXMuLiAKVGhlIGNvdXJzZSB3aWxsIGFsc28gc2VydmUgYXMgYSBwcmVyZXF1aXNpdGUgZm9yIHBvc3QgZ3JhZHVhdGUgYW5kIHNwZWNpYWxpemVkIHN0dWRpZXMgYW5kIHJlc2VhcmNoLiAKU28gaWYgeW91ciA4IHllYXIgb2xkIGNoaWxkIGlzIHdhdGNoaW5nIFIgcmF0ZWQgbW92aWVzLCBvciBsaXN0ZW5pbmcgdG8gZXh0cmVtZWx5IHZ1bGdhciByYXAgbXVzaWMsIG9yIGFjY2Vzc2luZyBwb3JuLCBjaGFuY2VzIGFyZSBpdCBiZWNhdXNlIGFuIGFkdWx0IHNvbWV3aGVyZSBoYXMgYmVlbiBsYXp5LiAKSSB0aGluayBhIGdvb2Qgd2F5IG9mIGxvb2tpbmcgYXQgaXQgaXMgY29tcGFyaW5nIHN0YXJ0aW5nIGEgcG9rZXIgY2FyZWVyL2hvYmJ5IHRvIGdldHRpbmcgYSBqb2IgYXQgTWNEb25hbGRzLiBJZiB5b3Ugc3RhcnQgZnJvbSBqdXN0IGEgYmFzZWxpbmUgbGV2ZWwgb2YgcG9rZXIga25vd2xlZGdlLCBvciBwbGF5ZWQgaW4gdGhlIHBhc3QsIGhvdyBtdWNoIHRpbWUgd291bGQgaXQgdGFrZSBzdHVkeWluZyB0byBnZXQgdG8gdGhlIHBvaW50IG9mIHByb2ZpdGFiaWxpdHkgYW5kIHRoZW4gcGxheWluZyB0byBtYWtlIGFzIG11Y2ggbW9uZXkgaWYgeW91IGhhZCBqdXN0IGJlZW4gd29ya2luZyBhdCBNY0RvbmFsZHMgdGhlIHdob2xlIHRpbWU/IE9idmlvdXNseSBoYXJkIHRvIGtub3cgZXhhY3RseSBidXQgSSBndWVzcyBhYm91dCB0aHJlZSB5ZWFycyB3b3VsZCBiZSBhIGdvb2Qgb3V0Y29tZS4gClRoZXJlIGFyZSBhIG1pbGxpb24gcGVvcGxlIHRyeWluZyB0byBiZWNvbWUgYSBIb2xseXdvb2QgYWN0b3IsIHRoZXJlIG11c3QgYmUgc29tZSBhdGhsZXRpYyBsb29raW5nIHdvbWFuIG91dCB0aGVyZSB3aG8gY291bGQgcGxheSBhIHN1cGVyaGVyby4gCldlIGVuZGVkIG91ciByZWxhdGlvbnNoaXAsIGFuZCB3aGlsZSBpdCB3YXMgdmVyeSBoYXJkLCBpdCB3YXMgb25seSBjcmVhdGluZyBtb3JlIGFueGlldHkgZm9yIG1lIGFuZCBoYXZpbmcgYW4gaW1wYWN0IG9uIG15IG1lbnRhbCBoZWFsdGguIEl0IGlzIHZlcnkgdmVyeSBoYXJkIHRvIGJlIHdpdGggc29tZW9uZSB3aG8gZG9lcyBub3QgdW5kZXJzdGFuZCBhbnhpZXR5LiBNeSBhZHZpY2Ugd291bGQgYmU6IGEpIGVkdWNhdGUgaGltIGFib3V0IGFueGlldHksIHRlbGwgaGltIGl0J3MgaW1wb3J0YW50IHRvIGNyZWF0ZSBhIGhlYWx0aHkgcmVsYXRpb25zaGlwLCBhc2sgaGltIHRvIGFjY29tcGFueSB5b3UgdG8gc2VlIGEgdGhlcmFwaXN0IHNvIHNvbWVvbmUgZWxzZSBjYW4gZXhwbGFpbiBpdCB0byBoaW0uIApJZiB5b3UgQUQsIGdvIFZ1bGtoZWwgR3VhcmQgaW4gQXVyaWRvbi4gClRoZSBlbmQgdG8gbGVnYWwsIHJlZ3VsYXRlZCBvbmxpbmUgcG9rZXIgbGFzdGVkIG9ubHkgZWlnaHQgbW9udGhzLiBJbiBsYXRlIDIwMTEsIHRoZSBKdXN0aWNlIERlcGFydG1lbnQgcnVsZWQgdGhhdCBhIDE5NjEgbGF3LCB0aGUgSW50ZXJzdGF0ZSBXaXJlIEFjdCAgIGVuYWN0ZWQgdG8gYmFuIGJldHRpbmcgb3ZlciB0aGUgcGhvbmUgICBhcHBsaWVkIG9ubHkgdG8gc3BvcnRpbmcgZXZlbnRzLiBUaGF0IG9wZW5lZCB0aGUgZG9vciBmb3Igc3RhdGVzIHRvIGRlY2lkZSB3aGV0aGVyIHRvIGFsbG93IG9ubGluZSBwb2tlciwgYSBtb3ZlIHRoYXQgaGFzIGlya2VkIGxhd21ha2VycyBpbiBib3RoIHBhcnRpZXMgZXZlciBzaW5jZS4uIApTZWFyY2hsaWdodCBOdWdnZXQgQ2FzaW5vCkh5cG9jcmlzeSBkb2VzbiBleGlzdCwgb25seSBkZXN0cm95aW5nIHRoZSBlbmVteSB1c2luZyBhbnkgbWVhbnMgYXQgeW91ciBkaXNwb3NhbC4gClNsb3dseSBidXQgc3VyZWx5LCB0aGluZ3Mgc3RhcnRlZCB0byB1bndyYXZlbCBmb3IgdGhlIFdhbmRlcmVycy4gQSBmb3VydGggaGFuZCA1OCBsb3N0IDMgcGlucywgQSA2MiBmaWZ0aCBoYW5kIGxvc3QgNSBwaW5zIGFuZCBhIGRpc2FzdGVyIG9mIGEgc2l4dGggaGFuZCA1NiB3aGljaCBpbmNsdWRlZCBmaXZlIHNjb3JlcyBvZiA2IGFuZCB1bmRlciBsb3N0IDExIHBpbnMuIERlc3BpdGUgdGhlc2UgbG9zc2VzIGFmdGVyIHNpeCBoYW5kcyB3ZSB3ZXJlIHN0aWxsIGluIHRoZSBsZWFkIGJ5IDMgcGlucy4gClBlb3BsZSwgbWVsdGluZ2x5IHRlbmRlciwgcHJhY3RpY2FsbHkgc3Bvb25hYmxlIGJyaXNrZXQhIEluIGxlc3MgdGhhbiB0aHJlZSBob3VycyEgSSBtZWFuISkgKEkgYWN0dWFsbHkgdXNlZCBUYWZlbHNwaXR6LCBiZWNhdXNlIG15IGJ1dGNoZXIgZGlkbiBoYXZlIGFueSBSaW5kZXJicnVzdCB0aGF0IGRheSwgaW4gY2FzZSBhbnkgb2YgeW91IGFyZSBpbiBHZXJtYW55IGFuZCB3YW50IHRvIG1ha2UgdGhpcyB0b28sIGFuZCBpdCB3YXMgZ3JlYXQuKS4gCk1vbml0b3IgeW91ciBodXNiYW5kJ3MgY29tcHV0ZXIgdXNhZ2UuIApUaGF0IGRvZXNuIGV4cGxhaW4gYWxsIG9mIHRoZSB3aGl0ZSBhbmdzdCBpbiBjaXRpZXMgaW4gdG93bnMgb3V0c2lkZSBvZiBTY3JhbnRvbiBhbmQgdGhlIFBvY29ub3MuIApJIGFtIG5vdCByZXNwb25zaWJsZSBmb3IgeW91ciBhY3Rpb25zIHlvdSBtYWtlLiAoRnVsbCBBbnN3ZXIpLiAKVGhpcyBlbnRpcmUgYWZmYWlyIGlzIGp1c3QgYW5vdGhlciBlbWJhcnJhc3NtZW50IGZvciB0aGUgVUsgYW5kIGhvbmVzdGx5IHRoZSBhdHRpdHVkZSBvbiByZWRkaXQgaGFzIGJlZW4gcmVhbGx5IGRpc2FwcG9pbnRpbmcuIApZb3Ugc2hvdWxkbid0IHdhbnQgdG8gYmUgc3RyYWlnaHQuIEdldCB0aGlzIHJpZ2h0IGFuZCBnZXQgaXQgbm93IHRoZXJlIGlzIEFCU09MVVRFTFkgbm90aGluZyB3cm9uZyB3aXRoIGJlaW5nIGdheS4gQW5kIHRoZXNlIGZlZWxpbmdzIGZvciB0aGUgc2FtZSBzZXggd29uJ3QgZXZlciBnbyBhd2F5LiAKU28gZmFyLCBvZmZpY2lhbHMgaGF2ZSBleHBsYWluZWQgdGhlIHdpbGQgc3dpbmdzIGluIHRoZSBKR0IgbWFya2V0IGFmdGVyIHRoZSBCT0ogQXByaWwgNCBhbm5vdW5jZW1lbnQgYXMganVzdCB0ZW1wb3JhcnkgYWRqdXN0bWVudHMgdG8gdGhlIGNlbnRyYWwgYmFuayBuZXcgYnV5aW5nIHN0cmF0ZWd5LiBPbiBBcHJpbCA1LCB0aGUgeWllbGQgb24gdGhlIGJlbmNobWFyayAxMCB5ZWFyIGdvdmVybm1lbnQgYm9uZCBmZWxsIHRvIGFuIGFsbCB0aW1lIHJlY29yZCBsb3cgb2YgMC4zMTUlLCB0aGVuIHJvY2tldGVkIHRvIDAuNjIwJSBiZWZvcmUgc2V0dGxpbmcgYXQgMC40NjAlLiBCdXQgdGhlIEJPSiBoYXMgYWRqdXN0ZWQgaXRzIHB1cmNoYXNpbmcgcGxhbnMsIGluY3JlYXNpbmcgdGhlIG51bWJlciBvZiB0aW1lcyBwZXIgbW9udGggdG8gZWlnaHQgZnJvbSBzaXggdG8gaGVscCBzbW9vdGggb3V0IHZvbGF0aWxpdHkuCk5vdywgZ3JhbnRlZCBoZSBtaWdodCBoYXZlIHRob3VnaHQgSSB3YXMgYmx1ZmZpbmcgYnV0IEkgcGxheSB2ZXJ5IHRpZ2h0IGFuZCB2ZXJ5IGFnZ3Jlc3NpdmUuIEkgaGFkIHBsYXllZCB0aGF0IGhhbmQgYWxtb3N0IHRoZSBleGFjdCBzYW1lIGFzIHRoZSBwb2NrZXQgQSdzIEkgaGFkIGVhcmxpZXIgaW4gdGhlIG5pZ2h0IHNvIGlmIGhlIHdhcyBwYXlpbmcgYW55IGF0dGVudGlvbiBhdCBhbGwgd291bGQgaGF2ZSBwdXQgbWUgb24gYSBoYW5kLi4gCkFwcGVhcnMgdG8gZG93bmxvYWQgdGhlIHBhdHRlcm4gUERGIC4gSGVyIGNvbGxlY3Rpb24gb2Yga25pdHRlZCBvYmplY3RzIG51bWJlcnMgYWJvdXQgMTAwMCBpdGVtcy4gVGhlIGV4dGVuc2l2ZSByYW5nZSBhbmQgdmFyaWV0eSBvZiBrbml0dGluZyBwYXR0ZXJucywgcGF0dGVybiBib29rcyBhbmQgd29tZW4ncyBtYWdhemluZXMgZGF0aW5nLiBQcm9kdWN0cyAxICAgMTAwIG9mIDExMzkgLiBFbmpveSBhIHdpZGUgcmFuZ2Ugb2YgZnJlZSBrbml0dGluZyBhbmQgY3JvY2hldCBwYXR0ZXJucyB0byBoZWxwIHlvdSAuIApBbnN3ZXIgZnJvbSBKb2UgUgpJIGZvcmdldCB3aGF0IEkgc2F3IGF0IFVpVCwgYnV0IEkgbm90IGVudGlyZWx5IHN1cmUgaWYgSSB3YW50IHRvIGxpdmUgdGhlcmUuIApIZSBwbGF5ZWQgYSBsb3Qgb2YgaG9ja2V5IGluIEZlYnJ1YXJ5LiAKSXQgaXNiZWxpZXZlZCB0aGlzIGFsYnVtIGlzIG5vIGxvbmdlciBhdmFpbGFibGUgdmlhIHJldGFpbCBzdG9yZXMuIDUxKSBWYW5pdHkgLiAKWW91IG1hZ25pZmljZW50IGJhc3RhcmQ7IHlvdSwgc2lyLCBhcmUgc28gYnJhdmUsIGEgZ2VudGxlbWFuIGFuZCBhIHNjaG9sYXIsIGFuZCBzZWVpbmcgaG93IHlvdSBhcmUgYSByZWRkaXRvciBmb3IgNCB5ZWFycywgdGhpcyBjaGVja3Mgb3V0LCBzbyBJIGFsbG93IGl0LiAKVGhpcyBpcyBub3QgYSBib29rIGZvciB0aGUgJ2F2ZXJhZ2UnIHJlYWRlci4gUmVhZCBtb3JlIFtlbnRyeWJvZHldICA+CklsIG4neSBhIHBhcyBkZSByZ2xlcywgaidhaSBkaiBwYXJsIGRlIGxhIGRpZmZyZW5jZSBlbnRyZSBwb2lkcyBldCBzYW50LiBEZXMgcGVyc29ubmVzIGdyb3NzZXMgcmFjb250ZW50IHBhcmZvaXMgbCd0b25uZW1lbnQgZGUgbGV1ciBtZGVjaW4gZGV2YW50IGRlcyBhbmFseXNlcyB0b3V0ICBmYWl0IG5vcm1hbGVzIHNhbnMgYXVjdW4gcHJvYmxtZSBkZSBjaG9sZXN0cm9sIG91IGRlIGdseWNtaWUuIEVuIHJldmFuY2hlLCBsYSBmYW9uIGRvbnQgYmVhdWNvdXAgZGUgbWRlY2lucyAocGFzIHRvdXMgdmlkZW1tZW50KSBhY2N1ZWlsbGVudCBsZXMgcGVyc29ubmVzIGdyb3NzZXMsIGxldXIgdGVuZGFuY2UgIHRvdXQgcmFtZW5lciAgbGEgbmNlc3NpdCBkZSBwZXJkcmUgZHUgcG9pZHMgcXVlbCBxdWUgc29pdCBsZSBtb3RpZiBkZSBsYSB2aXNpdGUsICBwcmVzY3JpcmUgdW4gcmdpbWUgcGx1dHQgcXUnY291dGVyIGxhIHBlcnNvbm5lLCBwZXV0IGNvbmR1aXJlICBzJ2xvaWduZXIgZHUgbW9uZGUgbWRpY2FsIGV0IGRvbmMgIHBvdXZvaXIgbW9pbnMgYmllbiBzZSBzb2lnbmVyLiAKSDEsIEgyIGFuZCBIMyB2aXJ1c2VzIGFyZSBjb21tb24gaW4gaHVtYW5zIGFuZCBzbyBhIGxvdCBvZiBodW1hbiBoYXZlIGF0IGxlYXN0IHBhcnRpYWwgaW1tdW5pdHkgYWdhaW5zdCB0aGVtLCBzbyB0aGF0IHRoZSBlZmZlY3Qgb2YgYW4gb3V0YnJlYWsgbWlnaHQgbm90IGJlIHRoYXQgYmFkLiBJZiBmb3IgZXhhbXBsZSBINU4xIGhvd2V2ZXIgZXZvbHZlcywgb3IgbWVyZ2VzIHdpdGggYSBwaWcgb3IgaHVtYW4gdmlydXMgaW4gc29tZSBiYXJuIGluIHRoZSB3b3JsZCAod2hpY2ggaXMgaW1obyB2ZXJ5IHBvc3NpYmxlLCBhcyB0aGVyZSBhcmUgYmlsbGlvbnMgb2YgYmlyZHMsIHBpZ3MgYW5kIGh1bWFucyksIHRoZW4gaHVtYW4gd2lsbCBoYXZlIGxpdHRsZSB0byBubyBpbW11bmlsaXR5IHRvIHRoZSBuZXcgdmlydXMgdW50aWwgYSB2YWNjaW5lIGlzIGF2YWlsYWJsZS4gVGhlIHZpcnVzIGNhbiBlYXNpbHkgYmUgdHJhbnNtaXR0ZWQgYW5kIG1vcmJpZGl0eSBhbmQgbWF5YmUgbW9ydGFsaXR5IGFzIHdlbGwgbWlnaHQgYmUgdmVyeSBoaWdoIGFyb3VuZCB0aGUgd29ybGQuCihQaG90bzogSm95IEd5YW1maSlhdCB0aGUgdHJhZGl0aW9uYWwgd2F5IG9mIHdvcmRzIG9uIHRoZSBwYWdlIGFuZCBob3cgd2UgYXJlIHNsb3dseSBldm9sdmluZyBmcm9tIHRoYXQuIFNvIHRoZXJlIGlzIG9yYWwgc3Rvcnl0ZWxsaW5nLiAKMjQgT2N0IDIwMTcgICA1MSBtaW4gICBVcGxvYWRlZCBieSBSaiBTeXN0ZW1zIDogIFRoZSBCcmFuZCBvZiBUcnVzdCBSZXRvdWNoaW5nIC4gCkFsc28gdGhlIGNhbWVyYSBxdWFsaXR5IHN1Y2tzLiAKV2hpbGUgdGhlcmUgYXJlIHNldmVyYWwgZGlmZmVyZW50IHNoYXBlcyBhbmQgc3R5bGVzIG9mIHlvdXIgdGFibGUgaXQgaXMgd29ydGggdGFraW5nIHlvdXIgdGltZSB0byBmaW5kIG9uZSB0aGF0IHlvdSBsaWtlIGFuZCB0aGF0IHdpbGwgbGFzdC4uIApDYWxsLiIgSGUgdGhvdWdodCBJIHdhcyBzbG93IHJvbGxpbmcsIGJ1dCBJIHdhc24gd2VhcmluZyBteSBnbGFzc2VzIHNpdHRpbmcgaW4gc2VhdCA4IHVuZGVyIGEgdGFibGUgd2l0aCBwcmV0dHkgYnJpZ2h0IGxpZ2h0cyBhbmQgaG9uZXN0bHkgZGlkbiByZWFsaXplIEkgaGFkIHRoZSBzdHJhaWdodCBmbHVzaCBhbmQgd2FzIGFib3V0IDUgbW9yZSBzZWNvbmRzIGZyb20gZm9sZGluZy4gSGUgc2hvd2VkIEFLaCwgZ290IG1hZCBhbmQgc3Rvcm1lZCBvdXQuIFNvcnJ5IGR1ZGUuLiAKVW5kIGRhIGVyIGVpbiBrb25zZXJ2YXRpdmVyIHJlY2h0ZXIgaXN0IGRlciBleHRyZW0gcmVsaWdpcyB3YXIgKG9kZXIgbm9jaCBpc3QsIHdlciB3ZWlzcywgZXIgd2lsbCBlcyBqYSBuaWNodCBiZWFudHdvcnRlbiBpbiBkZXIgZmZlbnRsaWNoa2VpdCksIG11c3MgbWFuIGF1ZiBlaW5lbiBzZWhyIGtvbnNlcnZhdGl2ZW4gU2NobHVzcyBrb21tZW4uLiAKSSBob3BlIGV2ZXJ5b25lIHdpbGwgdGFrZSB5b3VyIGFkdmljZSwgSSBjb3VsZG4gYWdyZWUgbW9yZS4gWW91ciB0aW1lIGlzIGxpa2UgYSBiYW5rIGFjY291bnQsIGFuZCBldmVyeSB0aW1lIHlvdSBjb21taXQgdG8gc29tZXRoaW5nLCB5b3UgdGFraW5nIG1vbmV5IG91dCBvZiB0aGF0IGFjY291bnQuIApJIGxpa2UgdG8gcHVycG9zZWx5IG1pc3VuZGVyc3RhbmQgaGVyIGluIHJpZGljdWxvdXMgd2F5cy4gU2hlIG1pZ2h0IGFzayBtZSB0byBicmluZyB1cCBoZXIgcG9zdCBpdCBub3RlcyBmcm9tIGRvd25zdGFpcnMsIHNvIEkgc2F5IG5vIHdvcnJpZXMgYW5kIGJyaW5nIHVwIHRoZSB0b2FzdGVyLCB0aGVuIHZlcnkgc2VyaW91c2x5IGFzayBoZXIgd2hhdCBvbiBlYXJ0aCBzaGUgd2FudGVkIHRoYXQgZm9yLiBXaGVuIHNoZSBhc2tlZCBmb3IgaGVyIGNhciBrZXlzIGFuZCBJIGRyYWdnZWQgdXAgdGhlIENocmlzdG1hcyB0cmVlIHdhcyBwcm9iYWJseSB0aGUgaGlnaGxpZ2h0LiAoRURJVDogZm9yIHRob3NlIHdvbmRlcmluZywgdGhlIGNhciBrZXlzIGhhZCBhIFVTQiBvbiB0aGUga2V5IHJpbmcuIFlvdSBzaG91bGQgaGF2ZSBoZWFyZCBoZXIgd2hlbiB0aGUgQ2hyaXN0bWFzIHRyZWUgc3RhcnRpbmcgY29taW5nIHRocm91Z2ggdGhlIGJlZHJvb20gZG9vci4pClRoZSBNZXJyaXR0IFJDTVAgYXJlIGNvbnRpbnVpbmcgdGhlaXIgaW52ZXN0aWdhdGlvbiBpbnRvIGFsbGVnYXRpb25zIG9mIHNleHVhbCBhc3NhdWx0cyBvY2N1cnJpbmcgYXQgYSBsb2NhbCBtYXNzYWdlIHRoZXJhcHkgYnVzaW5lc3MsIGFmdGVyIG11bHRpcGxlIHZpY3RpbXMgY2FtZSBmb3J3YXJkLiBJbnZlc3RpZ2F0b3JzIGFyZSBzZWVraW5nIHRvIGNvbmZpcm0gd2hldGhlciBvdGhlciB2aWN0aW1zIGV4aXN0LgpUaGlzIGlzIGFsc28gY2FsbGVkIGJ1cm5pbmcgY2hlc3Qgc3luZHJvbWUuIFRoZSBvbmx5IHdheSB0byByZWR1Y2UgdGhpcyBwYWluIGlzIHRvIGNvbnRyb2wgYW5kIG5ldXRyYWxpemUgdGhlIGFjaWQgaW4gdGhlIHN0b21hY2guIFRha2luZyBhbnRhY2lkcyBtYXkgaGVscCBidXQgY2hyb25pYyBhY2lkIHJlZmx1eCBzaG91bGQgYmUgdGFrZW4gdG8gYSBkb2N0b3IuLiAKVGhlcmUgYXJlIHBsZW50eSBvZiByZWFzb25zIHdoeSB5b3UgbWlnaHQgYmUgaW50ZXJlc3RlZCBpbiB0aGUgRmx1c2ggTW91bnQgS2l0IGZvciBTaHVmZmxlIFRlY2ggQ2FzaW5vIENhcmQgU2h1ZmZsZXIgc28gbWFrZSBzdXJlIHRoYXQgY2hlY2sgaXQgb3V0LiBUaGUgYmVzdCBjYXNpbm9zIHVzZSB0aGVtLCBhbmQgbm93IHlvdSBjYW4gdG9vIS4gCkNldHRlIHNhaXNpbmUgZHUgQ29uc2VpbCBDb25zdGl0dXRpb25uZWwgdmlzYWl0ICBmYWlyZSBkY2xhcmVyIGNlcyBkaXNwb3NpdGlvbnMgaW5jb25zdGl0dXRpb25uZWxsZXMsIGNlIHF1aSBhdXJhaXQgZW50cmFuIGxldXIgbmNlc3NhaXJlIGFicm9nYXRpb24gZXQgcGFyIHZvaWUgZGUgY29uc3F1ZW5jZSwgdW5lIG91dmVydHVyZSBkdSBtYXJpYWdlICB0b3VzIGxlcyBjb3VwbGVzLiBBIGwnYXBwdWkgZGUgY2V0dGUgaW5jb25zdGl0dXRpb25uYWxpdCwgTW1lIENvcmlubmUgQy4gCk5vdyBIb2xseXdvb2QgaXMgY2FsbGluZy4gCkJ1dCBoZXksIG9uZSBwZXJzb25hbCByaWdodHMgaW4gdGhpcyBkYXkgYW5kIGFnZSBzZWVtcyB0byBvdXR3ZWlnaCB0aGUgcmVzdCBvZiB0aGUgcG9wdWxhdGlvbi4KSW5jb3Jwb3JhdGUgeW91ciBjZXJ0aWZpY2F0aW9ucyBpbnRvIHRoZSBuYXJyYXRpdmUsIHN1Y2ggYXMgYSBwcm9mZXNzaW9uYWwgZGVzaWduYXRpb24gZnJvbSB0aGUgSW50ZXJuYXRpb25hbCBBaXJsaW5lIFRyYW5zcG9ydCBBc3NvY2lhdGlvbiBUcmFpbmluZyBhbmQgRGV2ZWxvcG1lbnQgSW5zdGl0dXRlIG9yIHRyYXZlbCBjb3Vuc2Vsb3IgY2VydGlmaWNhdGlvbiB0aHJvdWdoIHRoZSBUcmF2ZWwgSW5zdGl0dXRlLiBBbHNvLCBpZiB5b3UncmUgY2VydGlmaWVkIHRocm91Z2ggVGhlIFRyYXZlbCBJbnN0aXR1dGUgYW5kIHN1Ym1pdHRlZCBhIHdoaXRlIHBhcGVyICAgcGFydCBvZiB0aGUgY2VydGlmaWNhdGlvbiByZXF1aXJlbWVudHMgICB0aGF0J3MgcGFydGljdWxhcmx5IHJlbGV2YW50IHRvIHRoZSBqb2IgeW91J3JlIGFwcGx5aW5nIGZvciwgc28gaW5jbHVkZSB0aGUgcGFwZXIncyB0aXRsZS4uIApJbiBhZGRpdGlvbiwgb25lIG9mIG15IGNsb3NlIGZyaWVuZHMganVzdCBsb3N0IGhlciBleCBib3lmcmllbmQgdG8gc3VpY2lkZS4gCk1hbnkgZ2xhc3Mgd2Fsa2VycyB1c2UgYnJva2VuIHdpbmUgb3IgY2hhbXBhZ25lIGJvdHRsZXMuIApXaWxseSBib3VuY2UgdXAgYW5kIGRvd24gbGlrZSBhIHB1cHBldCBzaG93LiAKSSBkZWZpbml0ZWx5IGFncmVlIHRoZXJlIGlzbid0IGNvbnNlbnN1cyBhbmQgaXQgaXNuJ3QgaW1wcm9iYWJsZSB0aGUgTmF6aXMgY29vcmRpbmF0ZWQgdGhlIGZpcmUuIEkgZmVlbCBsaWtlIEknbSBnZXR0aW5nIHBlZGFudGljIGF0IHRoaXMgcG9pbnQsIGJ1dCBlc3NlbnRpYWxseSBpdHMgaGFyZCB0byBzYXkgd2hhdCBoYXBwZW5lZC4gCkknbSBub3Qgc3VyZSBpZiB5b3UgbWVhbiBwdXp6bGUgbW9kZSBvciBhY3Rpb24gbW9kZSBzbyBJJ20ganVzdCBnb2luZyB0byBnaXZlIHlvdSBwdXp6bGUgbW9kZTogRmlyc3QsIHB1dCBhIHdhbGwgaW4gZnJvbnQgb2YgTWF4d2VsbCBzbyB3aGVuIHRoZSAiY3JlYXRpb24iIGlzIHJldml2ZWQsIHlvdSB3b24ndCBnbyBhZnRlciBNYXh3ZWxsLiBBZnRlciB5b3UgZG8gdGhhdCwgcHV0IGEgdGh1bmRlcnN0b3JtIG92ZXIgdGhlICJjcmVhdGlvbiIgYW5kIGxpZ2h0bmluZyB3aWxsIHphcCBoaW0gYW5kIGhlIHdpbGwgcmV2aXZlLiBVc2UgYSBicmFpbiB0byBsdXJlIGhpbSBvZmYgaGlzIGxpdHRsZSBsZWRnZSBhbmQgb250byB5b3VyIHdhbGwuIApIb3dldmVyLCBpZiB5b3UgdGFrZSB0aGUgc3RlcHMgdGhhdCBhcmUgbGlzdGVkIGhlcmUgb24gaG93IHRvIGhhbmRsZSB5b3VyIHJlY2VpcHRzIHdoZW4gb3BlcmF0aW5nIGEgRGlzY291bnQgQ2xheSBQb2tlciBDaGlwcyBidXNpbmVzcywgeW91IHdpbGwgZmluZCB0aGF0IGl0IGlzIHNpbXBsZSBhbmQgdGltZSBlZmZlY3RpdmUgdG8gdHJhY2sgdGhlIG91dGdvaW5nIGNvc3RzIGFuZCBpbmNvbWUgb2YgeW91ciBidXNpbmVzcy4uIApBcHBhcmVudGx5LCBhbmQgSSBkb24ga25vdyB0aGlzIHRvIGJlIDEwMCUgdHJ1ZSwgdGhlIGd1eSBzb24gd2FzIHN0YW5kaW5nIHJpZ2h0IG5leHQgdG8gaGltLiBUaGlzIHdhcyBwb2ludGVkIG91dCB0byBtZSBieSBzb21lb25lIHdobyBJIGJlbGlldmUgdG8gYmUgdG90YWxseSBjcmVkaWJsZSBhbmQgd2hvIGlzIGEgbG9jYWwgd2hvIHBsYXlzIGluIHRoZSBnYW1lcyBhbG1vc3QgZGFpbHkuIAoiQXMgQnJhemlsaWFuIGNpdGllcyB1c2UgdXBjb21pbmcgc3BvcnRpbmcgZXZlbnRzIHRvIGJyYW5kIHRoZW1zZWx2ZXMgaW4gTGF0aW4gQW1lcmljYSBhbmQgYWNyb3NzIHRoZSBnbG9iZSwgYXMgd2VsbCBhcyBpbXByb3ZlIHRoZWlyIGxvY2FsIGluZnJhc3RydWN0dXJlcywgd2UgbG9vayBmb3J3YXJkIHRvIHNlZWluZyBhbiBpbmNyZWFzZSBpbiBsZWlzdXJlIGFuZCBidXNpbmVzcyB0cmF2ZWwgYXMgYSByZXN1bHQsIiBhZGRlZCBBbHZhcm8gRGlhZ28sIENPTywgSUhHLCBMYXRpbiBBbWVyaWNhIGFuZCB0aGUgQ2FyaWJiZWFuLiAKTXkgZ3Vlc3MgaXMgbXkgZ2VuZXJhdGlvbiB3aWxsIGJlIHByb3ZlZCB0byBiZSBwcmV0dHkgdG91Z2guLiAKT3BhbEZhZSAgMTUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSBjb25zaWRlciB0aGlzIGJlaGF2aW91ciBleHRyZW1seSByZXB1bHNpdmUuIApJbCBuJ2VzdCBwYXMgc291aGFpdGFibGUgZW4gZWZmZXQgcXVlIGwnYXJ0bWlzaW5lIHByb2R1aXNlIHVuIHBlcm94eWRlIGVuIGRlaG9ycyBkZXMgY2libGVzIHZpc2VzLiAKTm90aGluZyBoYXMgY2hhbmdlZC4gSSByZXBvcnRlZCBoaW0sIGFnYWluLCB0aGlzIHdlZWssIGZvciBkdW1waW5nIGhpcyBjb250cmFjdG9yIHRyYXNoIG91dCBvbiB0aGUgc3RyZWV0LiAKSSBoYXZlIHNlZW4gdGhpcyBzYW1lIHRoaW5nIGhhcHBlbmluZyBpbiBzY2hvb2wgZGlzdHJpY3RzLiBCdXQgaW5zdGVhZCBvZiAiY2hhbmdlIG1hbmFnZW1lbnQgIiB5b3UgaGF2ZSBhZG1pbmlzdHJhdG9ycy4gCkluIHRoZSBjb3JuZXIgbmVhcmVzdCB0aGVtLCBTZXJhIGtuZWVsZWQgYW5kIHNpZnRlZCB0aHJvdWdoIGEgYmFnIG9mIHNlZWRzLiAKV2hpY2ggc29uZ3MgaGF2ZSBiZWVuIFVLIG51bWJlciAxIGhpdHMgZm9yIExhZHkgR2FnYQpCdXQgd2hpbGUgdGhlIGNsdWIgaXMga2VlbiB0byBnZXQgbW9yZSBwZW9wbGUgdGhyb3VnaCB0aGUgZG9vcnMsIGl0IHdpbGwgcmV0YWluIGl0cyBzcGVjaWFsIGZvY3VzIG9uIHdhciB2ZXRlcmFucy4gIkl0J3Mgc29tZXdoZXJlIGZvciB0aGVtIHRvIG1lZXQgYW5kIGdyZWV0LCBpdCBhbHdheXMgaGFzIGJlZW4sIiBoZSBzYWlkLiAKSSBhbSBub3QgYWJsZSB0byByZW1lbWJlciB0aGUgc2ltcGxlIHdheSBJIGJvdWdodCB0aGlzIG9uZSBpbiBwYXJ0aWN1bGFyIGJ1dCBjYXB0aXZhdGVzIEkgaGFzIGRvbmUuIFBlcmhhcHMgZnJvbSBhIGJyb2NodXJlIG9yIHRoZSBkYXl0aW1lIHNwZWFrIHdpdGggc2hvdywgb24gdGhlIGNvbnRyYXJ5IG5ldmVydGhlbGVzcyBzYXkgdGhhbmtzIHRvIHlvdSBnb2QgaW4gc3VwcG9ydCBvZiBzbWFsbCBjaGFybXMuIEZpbmFsbHksIGEgZGVmaW5pdGUgZGlldCBwcm9kdWN0IG9yIHNlcnZpY2VzIHRoYXQgaGF2ZSBoZWxwZWQgbXlzZWxmIGxvc2UgdGhlIHJpZ2h0IGFtb3VudCB3ZWlnaHQgdG8gYmUgbWFrZSB1cyBmZWVsIGFuIGFjdHVhbCBsb3QgZ29vZCBkZWFsIG1vcmUgdmlnb3JvdXMgYW5kIGFzIGEgY29uc2VxdWVuY2UgeW91bmdlci4gQWN0dWFsbHkgYW1hemluZyBvbmx5IGhvdyBtYW55IGxpZ2h0ZXIgSSd2ZSBmZWVsIGFyb3VuZCBteSBsZWdzLiBUaGlzIHByb2R1Y3RzIG9yIHNlcnZpY2VzIGlzIHRoZSAyMXN0IEVyYSByZSBmb3JtdWxhdGlvbiBpbnZvbHZpbmcgYSBkaWV0IHByb2R1Y3QgcmVnYXJkaW5nIGhhcyBiZWNvbWUgYXJvdW5kIGJ5IHF1aXRlIHNvbWUgdGltZS4KSSdtIHBlcnBsZXhlZCB0aGF0IHRoZXkgbWlzc2VkIHRoZSBtYXJ2ZWxvdXMgaGFtYnVyZ2VycyBhdCB0aGUgZ3JlYXQgQnVyZ2VyIEJhciwgbWFkZSB3aXRoIGZyZXNobHkgdHdpY2UgZ3JvdW5kIGJlZWYgd2l0aCBjaGVlc2UsIGZvaWUgZ3JhcyBvciBldmVuIGxvYnN0ZXIgY29tYmluYXRpb25zIGFuZCBhIHJlYWxseSBnb3VybWV0ICQ2MCBidXJnZXIuIEkgZGlkIGdldCB0byB0b3VyIHRoZSByZXN0YXVyYW50J3MgdW5pcXVlIGJ1dGNoZXIgc2hvcCB3aGljaCB3YXMgYnVpbHQgaW4gdGhlIGJhY2sgb2YgdGhlIHJlc3RhdXJhbnQgdG8gZ3VhcmFudGVlIGZyZXNobHkgZ3JvdW5kIGJlZWYuIApJJ3ZlIGV4cGVyaWVuY2VkIHRoaXMgdHdpY2UsIGFuZCBvbiBvbmUgb2NjYXNpb24gaXQgcXVpY2tseSBkaXNzb2x2ZWQgb3VyIGdyb3VwLiBNeSBhZHZpY2UsIHRlbGwgdGhlbSB0aGF0IHRoZSBiZWhhdmlvciBpcyBiZWNvbWluZyBhIHByb2JsZW0sIGFuZCB0aGVuIGxldCB0aGVtIGtub3cgdGhhdCBpZiBpdCBoYXBwZW5zIGFnYWluIHRoYXQgdGhleSB3aWxsIG5vdCBiZSB3ZWxjb21lZCBiYWNrLiAKRGFtbWl0YW5uaWUgIDkgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvCllvdSBhcmUgY29uZmxhdGluZyBoZWFsdGhjYXJlIGNvc3RzIHdpdGggaW5zdXJhbmNlIHByZW1pdW1zLiBUaGUgQUNBIHNsb3dlZCB0aGUgcmlzZSBpbiBoZWFsdGhjYXJlIGNvc3RzIHRvIHRoZSBsb3dlc3QgbGV2ZWwgaW4gZGVjYWRlcy4gVGhlIEFDQSB3YXMgYWxzbyBkZXNpZ25lZCB0byBjb25zdHJhaW4gcHJlbWl1bSBjb3N0cyBmb3IgcGF0aWVudHMsIGJ1dCB0aGUgUmVwdWJsaWNhbnMgY29udGludWFsbHkgaGFtc3RydW5nIGV2ZXJ5IHBvcnRpb24gb2YgaXQgYW5kIGhlYWx0aCBpbnN1cmFuY2UgcHJlbWl1bXMgaGF2ZSBza3lyb2NrZXRlZCBhcyBhIHJlc3VsdC4gU2VlIG15IHJlc3BvbnNlIHRvIHRoaXMgY29tbWVudC4KQXUgbnVtcm8gMTkgc2UgdHJvdXZhaXQgbGUgc2lnZSBkZSBsYSBGZHJhdGlvbiBkZXMgQ2hlbWlub3RzIGV0IGMnZXN0IGVuIG1tb2lyZSBkdSBzeW5kaWNhbGlzdGUsIGhyb3MgZGUgbGEgcnNpc3RhbmNlIGRlcyBjaGVtaW5vdHMgcGVuZGFudCBsYSBkZXJuaXJlIGd1ZXJyZSBtb25kaWFsZSBxdSdlbGxlIHByaXQgbGUgbm9tIGRlIFBpZXJyZSBTbWFyZC4uIApDbGVhcmx5IHRoaXMgaXMgYmVjYXVzZSBvZiB0aGUgZGVtbyB2aWRlb3MgdGhhdCB3b3VsZCBoYXZlIGJlZW4gcGxheWluZy4gVGhlcmUncyBvdGhlciBzaGFkb3dzIGFyb3VuZCB0aGUgTEcgbG9nbyBvbiB0aGUgcmVkIHRvbmUgYXMgd2VsbC4gClN3aXZlbCBjaGFpciBoYXMgdHJpcGxlZCBpbnRvIGEgbW9yZSB0aGFuICQzIGJpbGxpb24gbWFya2V0IHNlcnZlZCBieSBtb3JlIHRoYW4gMTAwIGNvbXBhbmllcy4gCldlbGxuZXNzIGZlYXR1cmVzOiBBIGZpdG5lc3MgdHJhY2tlciBtaWdodCBhbHJlYWR5IG1vbml0b3IgaGVhcnQgcmF0ZSwgYnV0IHdoYXQgYXJlIGl0cyBvdGhlciB3ZWxsbmVzcyBmZWF0dXJlcz8gU29tZSB0cmFja2VycyBnaXZlIHlvdSBzdGF0cyBvbiB5b3VyIHNsZWVwIHBhdHRlcm5zLCBkYWlseSBtb3ZlbWVudCwgYW5kIGRpc3RhbmNlIGFmdGVyIHdvcmtvdXRzLiBFdmVuIHRob3VnaCBmaXRuZXNzIHRyYWNrZXJzIGFyZSBub3QgbWVhbnQgdG8gY3VyZSBvciBwcmV2ZW50IGFueSBkaXNlYXNlcywgdGhleSBjYW4gZ2l2ZSB2YWx1YWJsZSBpbnNpZ2h0cyBvbiB5b3VyIHBoeXNpY2FsIGFuZCBtZW50YWwgc3RhdGUuLiAKIDE5IHBvaW50cyAgc3VibWl0dGVkIDE1IGRheXMgYWdvRXhwbGFpbiB0byBtZSBob3cgcmV3b3JrZWQgS2F5bGUgaXMgc3VwcG9zZWQgdG8gbGFuZSBhZ2FpbnN0IGNoYW1waW9ucyBsaWtlIFJpdmVuLCBEYXJpdXMsIFlvcmljaywgSmF4LCBVcmdvdCwgSXJlbGlhLCBSZW5la3RvbiBhbmQgRmlvcmEgYXMgYSBzcXVpc2h5IG1lbGVlIGNoYW1waW9uIHRoYXQgZGVhbHMgYWxtb3N0IG5vIGRhbWFnZSB0byB0aGVtLlRlbGwgbWUgd2lzZSBtYW4gZ2lsZ2FsYXBhZ29zIGhvdyBkbyB5b3UgYXBwcm9hY2ggdGhlIG1pbmlvbiB3YXZlIHRvIGdldCBDUyB3aGVuIHRoZXNlIGNoYW1waW9ucyBkZXN0cm95IHlvdSBhbmQgdGhlcmUgaXMgbm90aGluZyB5b3UgY2FuIGRvIGFib3V0IGl0LkV2ZXJ5IGhpZ2ggZWxvIHBsYXllciB3aG8gdGVzdGVkIGhlciBpbiBQQkUgaXMgc2F5aW5nIHRoZSBvcHRpbWFsIHdheSB0byBwbGF5IHJld29ya2VkIEtheWxlIGlzIHRvIGdvIG1pZCBhbmQgcGxheSBsaWtlIHlvdSB3b3VsZCBhcyBhIEthc3NhZGluLCBidXQgeW91IG11c3Qga25vdyBiZXR0ZXIuIApKdXN0IGJlY2F1c2UgeW91J3JlIHNraW5ueSBkb2Vzbid0IG1lYW4geW91J3JlIGhlYWx0aHkgb3Igbm90IHNleHVhbGx5IGF0dHJhY3RpdmUgZWl0aGVyLiBBbmQgeW91IHNheSBzZXh1YWxseSBhdHRyYWN0aXZlIGFzIGlmIGJlYXV0eSBpcyBub3QgaW4gdGhlIGV5ZSBvZiB0aHIgYmVob2xkZXIuIFdlIGFsbCBoYXZlIG91ciBwcmVmZXJlbmNlcyBhbmQgeW91IGNhbid0IGhvbW9nZW5pemUgdGhlIHN0YW5kYXJkIG9mIGJlYXV0eSBpbiBzdWNoIGFuIG9iamVjdGl2ZSBmYXNoaW9uLgpKYW1rb2NoICAyMyBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvCklmIHlvdSBhcmUgaW50ZXJlc3RlZCBpbiBwdXJjaGFzaW5nIGEgcm91bmQgcG9rZXIgdGFibGUsIHRoZXJlIGFyZSBhIGxvdCBvZiBkaWZmZXJlbnQgdGhpbmdzIHRoYXQgeW91IG11c3QgY29uc2lkZXIuIEl0IGlzIG5vdCBhZHZpc2FibGUgdG8gc2ltcGx5IGdvIG91dCBhbmQgcHVyY2hhc2UganVzdCBhbnkgdGFibGUgb24gdGhlIG1hcmtldC4gWW91IHNob3VsZCB0YWtlIHRoZSB0aW1lIHRvIGNvbnNpZGVyIGFsbCBvZiB0aGUgdW5pcXVlIGFyZWFzIG9mIGltcG9ydGFuY2UgdGhhdCBoYXZlIGJlZW4gZXN0YWJsaXNoZWQgaW4gdGhpcyByb3VuZCBwb2tlciB0YWJsZSBidXlpbmcgZ3VpZGUuIApCZWFtZXIgZW5naW5lcyBoYXZlIGdyZWF0IG1vZCBzdXBwb3J0LiBBbmQgdGhlaXIgY2FycyBoYXZlIGhlbGxhIGFmdGVybWFya2V0LiAKVGhlIENhbnVja3MgZHVnIGEgdGhyZWUgZ29hbCBob2xlIHdpdGggYSBzZXJpZXMgb2YgbWlzY3VlcyB0aGF0IGFsbG93ZWQgQWxleCBDaGlhc3NvbiwgWmFjayBLYXNzaWFuIGFuZCBSeWFuIE51Z2VudCBIb3BraW5zIHRvIHNjb3JlIGVhc3kgZ29hbHMuIFRoZSBzdHJ1Z2dsaW5nIERlcnJpY2sgUG91bGlvdCB3YXMgc3RyaXBwZWQgb2ZmIHRoZSBwdWNrIGJlaGluZCB0aGUgbmV0IGJ5IFNhbSBHYWduZXIgdG8gYWxsb3cgYW4gdW50b3VjaGVkIENoaWFzc29uIHRvIG9wZW4gc2NvcmluZy4gVHlsZXIgTW90dGUgaGFkIGEgYmFjayBjaGVja2luZyBlZGdlIG9uIEthc3NpYW4gYnV0IHdhcyBzaG92ZWQgYXNpZGUgdG8gYWxsb3cgdGhlIHdpbmdlciB0byB0YXAgaW4gYSBDb25ub3IgTWNEYXZpZCBmZWVkLiBBbmQgTnVnZW50IEhvcGtpbnMgd2FzIGxlZnQgYWxvbmUgaW4gdGhlIHNsb3QgYnkgYSB0cmFpbGluZyBMb3VpIEVyaWtzc29uIHRvIG1ha2UgaXQgMyAwIGluIHRoZSBmaXJzdCBtaW51dGUgb2YgdGhlIHNlY29uZCBwZXJpb2QuClVuaXZlcnNpdHkgb2YgSG91c3RvbiBpcyBvbiB0aGUgbW92ZSwgYW5kIGludmVzdGluZyBpbiBVSCBpcyB0cnVseSBhIGdpZnQgdGhhdCBrZWVwcyBnaXZpbmcsIGhlbHBpbmcgdXMgY29udGludWUgdG8gZXhwYW5kIG91ciBhY2FkZW1pYyBleGNlbGxlbmNlIGFuZCBpbXBhY3QsIHNhaWQgT2R1bS4ga2luZCBvZiBzdXBwb3J0IGFzc3VyZXMgb3VyIHBsYWNlIG5vdCBvbmx5IGFzIGEgdG9wIHRpZXIgdW5pdmVyc2l0eSwgYnV0IGFzIGFuIGluc3RpdHV0aW9uIHRoYXQgbGl2ZXMgaW4gdGhlIGhlYXJ0cyBhbmQgbWluZHMgb2YgSG91c3RvbmlhbnMgYW5kIG91ciBmcmllbmRzIGFyb3VuZCB0aGUgd29ybGQuIGlzIGEgc25hcHNob3Qgb2YgdGhlIEhlcmUsIFdlIEdvIENhbXBhaWduLCBCZXlvbmQgdGhlIEJpbGxpb24sIGJ5IHRoZSBudW1iZXJzOgpNdWRkbGVkIG1pZGRsaW5nIGxpYmVyYWxzIGFyZSB0aGUgb25lcyB3aG8ga2lsbGVkIHRoZSBoZWFsdGggY2FyZSByZWZvcm0gdGhhdCB3b3VsZCB3b3JrICBhIHNpbmdsZSBwYXllciBzeXN0ZW0gd2hlcmUgd2UgQUxMIHVzZSB0aGUgc2FtZSBzeXN0ZW0gYW5kIHRoZXJlZm9yZSBjb3N0cyBhcmUga2VwdCBkb3duIGFuZCBtZWRpY2luZSBpcyBub3QgZm9yIHByb2ZpdCAgYW5kIHRoZW4gdHJhbnNmb3JtZWQgaXQgaW50byBzb21ldGhpbmcgc28gY29tcGxleCwgc28gY29uZnVzaW5nIHRoYXQgbW9zdCBvZiB1cyB0dW5lZCB0aGUgZGViYXRlIG91dCBvciBmb3Jnb3Qgd2hhdCAicHVibGljIG9wdGlvbiIgd2FzIGFuZCBob3cgaXQgZGlmZmVyZWQgZnJvbSJzaW5nbGUgcGF5ZXIuIi4gCkJhc2ljYWxseSB0aGUgaWRlYSBzdGF0ZXMgdGhhdCB5b3VyIGJyYWluICd0ZXN0cycgeW91ciB3aWxsIHRvIGxpdmUgb24gYSByZWd1bGFyIGJhc2lzLiBJdCdzIHVwIHRvIHRoZSBjb25zY2lvdXMgYnJhaW4gdG8gYWN0aXZlbHkgc2F5ICJubywgSSBkb24ndCB3YW50IHRvIGRvIHRoYXQsIEkgd2FudCB0byBsaXZlIiBpbiBvcmRlciB0byBtb3RpdmF0ZSB5b3UgdG8ga2VlcCBnb2luZy4gVGhlIGV4dGVudCB0byB3aGljaCB5b3UgZXhwZXJpZW5jZSB0aGlzIHBoZW5vbWVub24gY2FuIG1ha2UgaXQgaGVhbHRoeSBvciB1bmhlYWx0aHkgYnV0IGl0J3Mgc29tZXRoaW5nIHdoaWNoIGEgbGFyZ2UgcG9ydGlvbiBvZiB0aGUgcG9wdWxhdGlvbiBmYWNlcy4uIApBIFRleGFzIEhvbGQnZW0gdG91cm5hbWVudCBjYW4gcmFuZ2UgZnJvbSBhIHNpbmdsZSB0YWJsZSB0b3VybmFtZW50IGludm9sdmluZyA2IDEwIHBsYXllcnMgdG8gbGFyZ2VyIHRvdXJuYW1lbnRzIHdpdGggaHVuZHJlZHMsIGV2ZW4gdGhvdXNhbmRzLCBvZiBlbnRyaWVzLiAKNS4gSG93IHNhZmUgd2lsbCB5b3VyIGNhciBiZSB3aGVyZSB5b3Ugd2lsbCBiZSBsaXZpbmc/Ck92ZXJhbGwgbG9va3MgdmVyeSBzb2xpZC4gQSBjb3VwbGUgdGhpbmdzIHRvIHdvcmsgb24gdGhhdCBJIHRoaW5rIGFsbCB0aWUgaW4gdG9nZXRoZXIuIEFzIGFscmVhZHkgbWVudGlvbmVkLCB5b3VyIGVsYm93cyBhcmUgcHJldHR5IGhpZ2gvZmxhcmVkLiBMb29rcyBsaWtlIHRoaXMgaXMgZHVlIHRvIHlvdXIgc2hvdWxkZXIgcG9zaXRpb24gYmVpbmcgcm9sbGVkIGZvcndhcmQsIHlvdSB3YW50IHRob3NlIHNob3VsZGVycyBkb3duIGFuZCBiYWNrIHdoZW4gc2V0dGluZyB1cCBhbmQgdGhlbiBwdWxsIHRoZSBiYXIgZG93biBpbnRvIHlvdXIgdHJhcHMvYmFjayBkdXJpbmcgdGhlIGxpZnQgdG8gY3JlYXRlIHRoYXQgc3RhYmxlIHNoZWxmLiBUaGlzIHNob3VsZCBnaXZlIHlvdSBhIGJldHRlciB1cHBlciBib2R5IHBvc2l0aW9uIHRoYXQgbWF5IGJlIHNsaWdodGx5IG1vcmUgdXByaWdodCB3aGljaCBsZWFkcyBpbnRvIHRoZSBzZWNvbmQgdGhpbmcuIFlvdXIgaGF2ZSBzb21lIGhpcCBzaGlmdCBiYWNrIGltbWVkaWF0ZWx5IG91dCBvZiB0aGUgaG9sZSBhbmQgeW91ciBoaXBzIHRoZW4gcmlzZSBiZWZvcmUgeW91ciBjaGVzdCBkb2VzLiBZb3UgY2FuIHNlZSB0aGlzIGlzIHRoZSBzaWRlIHZpZXcgdGhhdCBvbmNlIHlvdSBjb21lIG91dCBvZiB0aGUgaG9sZSB5b3VyIGtuZWVzIHNoaWZ0IGJhY2sgYW5kIHlvdXIgaGlwcyBjb21lIHVwLiBZb3UgY2FuIGFsc28gc2VlIHRoZSB3ZWlnaHQgaW4geW91ciBmZWV0IHNoaWZ0IGJhY2sgdG8geW91ciBoZWVscyB3aGljaCBtYXkgYmUgZHVlIHRvIHRoYXQgaGlwIHNoaWZ0IGJ1dCBpcyBhbHNvIHByb2JhYmx5IGNhdXNpbmcgc29tZSBvZiBpdC4KSWYgSSBzYWlkIHNvbWV0aGluZyBoZSBkaWRuIGxpa2UgaGUgd291bGQgc25hcCBhdCBtZSBhbmQgdGhlbiBiZSBpcnJpdGFibGUgZm9yIGRheXMuIEhlIGRpZG4gbGlrZSBtZSB3ZWFyaW5nIGNlcnRhaW4gY2xvdGhlcyBiZWNhdXNlIEkgImxvb2tlZCB0b28gZ29vZCBpbiB0aGVtIi4gCkJvcmRlbiB3YXMgYWxsIG9mIDEwLCBTaGlybGV5IDExLiBUaGUgeW91bmdlc3Qgd2FzIG5pbmUgbW9udGhzIG9sZC5BZ2FpbnN0IGFsbCBvZGRzLCB0aGV5IG1hbmFnZWQgdG8gZG8gc28sIGFsdGhvdWdoIEJvcmRlbiBhbGxvd3MgdGhhdCB0aGV5IHdvdWxkIG5vdCBoYXZlIG1hZGUgaXQgd2l0aG91dCB0aGUgaGVscCBvZiB0aGUgbm93IGRlZnVuY3QgTmVncm8gQ29tbXVuaXR5IENlbnRyZSwgdGhlIE9sZCBCcmV3ZXJ5IE1pc3Npb24gYW5kIENhbXAgQ2hhcGxlYXUsIHdoaWNoIGhhZCBiZWVuIG9wZXJhdGVkIGJ5IHRoZSBNaXNzaW9uIHVudGlsIGl0IGNsb3NlZCBpbiAyMDA3LlN1ZmZpY2UgaXQgdG8gc2F5IHRoYXQgdGhlcmUgd2FzIGxpdHRsZSBibGlzcyBpbiB0aGlzIGZhbWlseS53YXMgc29vbiBhZnRlciBzcGVuZGluZyB0aGUgc3VtbWVyIGF0IENhbXAgQ2hhcGxlYXUgdGhhdCBteSBtb3RoZXIgcHV0IHVzIGFsbCBvbiB0aGUgY2hlc3RlcmZpZWxkIGF0IGhvbWUsIEJvcmRlbiByZWNhbGxzLiAKVGhlIHdvb2wgdGV4dHVyZSBhbmQgZmVlbCBpcyBubyBkaWZmZXJlbnQgdGhlbiB3aGF0IHlvdSBzZWUgaW4geW91ciBsb2NhbCBjYXNpbm9zLiAKSSByZWFsbHkgbmVlZGVkIGl0LiBUaGFuayB5b3Ugd2hvZXZlciBkb25lIGl0LiAKU2V0IHVwIGEgc3BhY2UgZm9yIHRoZSBleHBlY3RhbnQgbW90aGVyLiAKUG91ciBsJ2luc3RhbnQgbGUgcHJvbHRhcmlhdCBzZSB0YXNzZSBldCBzZSByc2lnbmUuIApXb25kZXJmdWwgRXh0cmVtZSAyMC8yMDogY29tbWVudGFyeSBIYXBweSBOZXcgWWVhciEgUHJlbmF0YWwgVmlzaXQgdy8gSGVscCBmcm9tIGEgS2lkbGV0IFZpdGFtaW4gRCBDZXNhcmVhbiBSaXNrIEhvbWUgKEJpcnRoKSBmb3IgdGhlIEhvbGlkYXlzIFN1cmdpY2FsIFRyaXAgQXd3dywgTnV0cyEgU2NyZXcgSXQhIEZvciBIb25leUJ1bm55TG92ZSBTdXJnZXJ5IEJhYnkgUGljcyBCZWxseSBUaW1lIEhlbnJ5IFZJSUkgSGVlIHN0ZXJpY2FsIFByb3AgOCBWaWRlbyBXaGF0IEknbSBXb3JraW5nIE9uIE9oLCBmb3IgY3J5aW5nIGluIGEgYnVja2V0LiBPYmFtYSBtYSBCb29tIFRlbXBsYXRlIExldHRlciB0byBQcmVzaWRlbnQgRWxlY3QgT2JhbWEgcmU6IE5hdGlvbmFsIExpY2Vuc2luZyBvZiBNaWR3aXZlcyBPcGVuIExldHRlciB0byBQcmVzaWRlbnQgRWxlY3QgT2JhbWEgSW4gbXkgbGlmZXRpbWUuIE5ldyBGYW1pbHkgUGhvdG9zIFdoYXQgSGFwcGVuZWQgdG8uPyAoRm9sbG93IHVwIHRvIEJpcnRoIFBsYW5zKSBJbmsgQmlydGggTWljaGFlbCBGbGF0bGV5IFVwZGF0ZWQgQmlydGggUGxhbiBUZW1wbGF0ZSBNZW1vcmlhbCBTZXJ2aWNlIFJlYWRpbmcgTXkgRGFkZHkncyBQYXNzaW5nLiAKWU9VIE1VU1QgSEFWRSAxMDAgQ09NTUVOVCBLQVJNQSBvciBwcm92aWRlIHVzIHdpdGggYSB2YWxpZCBsYXcgc2Nob29sIGVtYWlsIGFkZHJlc3MuIApKZXR6dCBzY2hsbmdlbHQgc2ljaCBkaWUgU3RyYWUgZGVyIFN0ZWlsa3N0ZSBlbnRsYW5nLiAKSGlzIGxlZ2FjeSBlbmR1cmVzLiBUaGUgUGFraXN0YW4gb2YgdG9kYXkgaXMgbm90IGNhc3QgaW4gdGhlIGltYWdlIG9mIEppbm5haCBvciBJcWJhbC4gCjE1OjQ1LiAKT20gZHUgaGl0dGFyIGVuIGxlZHRyZCwgZ3Igb20gbWpsaWd0IGVuIGtvcGlhIGF2IGRlbi4gCkFuZCBpdCBwZXJtaXRzIHRyYWRpbmcgYXQgcHJpY2VzIHRoYXQgaW5jbHVkZSBmcmFjdGlvbnMgb2YgYSBwZW5ueSwgYSBzaWduaWZpY2FudCBiZW5lZml0IHRvIGFueW9uZSB0cmFkaW5nIG1pbGxpb25zIG9mIHNoYXJlcy4gCklmIEkgd2VyZSBnb2luZyB0byBvZmZlciBhbnkgcmVhbCBjcml0aXF1ZSBpdCB3b3VsZCBqdXN0IGJlIHRoYXQgdGhleSBjb3VsZCBoYXZlIHRha2VuIGEgYml0IG1vcmUgdGltZSBiZWZvcmUganVzdCBoZXkgaXQgbW9ybmluZyB3ZSBhdCB0aGUgd2l6YXJkIHRvd2VyLiAKRGVsYXllZCBiZXRzIG1lYW4gdGhlIG9wcG9uZW50IGlzIGNhbGN1bGF0aW5nIGhpcyBzdHJhdGVneSBmb3IgaGlzIGJpZyBoYW5kLiBBbHdheXMgdHJ5IHRvIHRha2Ugbm90ZSBvZiBhIHBsYXllcidzIGhhbmQgd2hlbiBoZSBxdWlja2x5IG1ha2VzIGEgYmV0IGFuZCB3aGF0IGNhcmRzIGhlIGhhcyB3aGVuIGhlIG1ha2VzIGEgc2VyaWVzIG9mIHNsb3cgYmV0cy4uIAoiWW91IGNvdWxkIGJlIGFjY3VzZWQgb2Ygc2VsZmluZHVsZ2VuY2UgYW5kIGh5cG9jcmlzeSwiIGhlIHNheXMsIHRhbGtpbmcgZXhjbHVzaXZlbHkgdG8gVGhlIE1haWwgb24gU3VuZGF5LCAiYW5kIGlmIHlvdSB3ZW50IHRoZSBvdGhlciB3YXksIHlvdSBjb3VsZCBiZSBhY2N1c2VkIG9mIHNlbGYgbWFydHlyZG9tIGFuZCBkZW5pYWwgb2YgbGlmZS4KQW55aG93LCBCb25kIHdpbnMgdGhlIGhhbmQgYW5kIHRoZSBjYXIsIG9mIGNvdXJzZS4gQW5kcmVpIEthcnBvdiwgZnJvbSBNdXJtYW5zaywgaGFkIHJ1biBvdXQgb2YgbW9uZXkgaW4gYSBnYW1lIG9mIHBva2VyIGFuZCBvZmZlcmVkIGhpcyBvcHBvbmVudCBoaXMgd2lmZSBpbnN0ZWFkIG9mIGNhc2ggdG8gc3RheSBpbiB0aGUgZ2FtZS4uIApUaGV5IGRlbGlnaHQgaW4gYWN0aW5nIGluIGJhZCBmYWl0aCwgc2luY2UgdGhleSBzZWVrIG5vdCB0byBwZXJzdWFkZSBieSBzb3VuZCBhcmd1bWVudCBidXQgdG8gaW50aW1pZGF0ZSBhbmQgZGlzY29uY2VydC4gCiJJIGhhdmVuJ3Qgd29uIGEgc2luZ2xlIHRpbWUgYXQgYSBwb2tlciBnYW1lIGZvciA0IG1vbnRocyIgTXkgZnJpZW5kIHNheXMgIml0J3Mgb2ssIHlvdXIganVzdCBnZXR0aW5nIHJlYWxseSB1bmx1Y2t5IGl0J2xsIGNoYW5nZSwgc29tZXRpbWVzIHlvdXIgMjMganVzdCBydW5zIGludG8gYmV0dGVyIGhhbmRzLiAKSSdtIG5vdCBnb2luZyB0byBhZHZvY2F0ZSBmb3Igb25lIGNhbmRpZGF0ZSBvciBhbm90aGVyLCBJIHdpbGwganVzdCBzYXksIHZvdGluZyBtYXR0ZXJzIGV2ZW4gaWYgeW91IGRvbid0IGxpa2UgdGhlIGNob2ljZXMuIFRoZSBuZXh0IFByZXNpZGVudCB3aWxsIGhhdmUgYXQgbGVhc3Qgb25lIFN1cHJlbWUgQ291cnQgbm9taW5lZS4gSWYgdGhhdCBQcmVzaWRlbnQgaXMgRG9uYWxkIFRydW1wLCB3ZSB3aWxsIGVuZHVyZSBhbm90aGVyIDUwKyB5ZWFycyBvZiBjb25zZXJ2YXRpdmUgbGF3LiA1MCsgeWVhcnMgYmVmb3JlIHRoZSB3YXIgb24gZHJ1Z3MgaXMgdGFja2xlZCwgYmVmb3JlIHVuaXZlcnNhbCBoZWFsdGhjYXJlIGlzIGFjaGlldmVkLCA1MCsgb2YgY3VycmVudCBlbGVjdGlvbiBhbmQgcG9saXRpY2FsIGZpbmFuY2UgbGF3LiBBICJDb3Jwb3JhdGUgRGVtb2NyYXQiIHdpbGwgbm9taW5hdGUgYW5vdGhlciBjb3Jwb3JhdGUgZGVtb2NyYXQsIHNvIHRoZSBiZW5jaCBtb3ZlcyBtYXJnaW5hbGx5IHJpZ2h0IChhc3N1bWluZyBSQkcgbGVhdmVzKSwgYnV0IHRoZSBzdGF0dXMgcXVvIGRvZXNuJ3QgY2hhbmdlLiBBICJsaWJlcmFsIiB3aWxsIG5vbWluYXRlIGFub3RoZXIgbGliZXJhbCBhIHRoZSBzdGF0dXMgcXVvIGFsc28gZG9lcyBub3QgY2hhbmdlLgpUaGVyZSBhbiBvbGQgZ2VuZXJhdGlvbiBvZiBjb25zZXJ2YXRpdmVzIGFuZCBhIHlvdW5nIG9uZS4gSSB0aGluayB0aGUgeW91bmcgb25lIGlzIHJlYWxpemluZyB0aGF0IGl0IG9rYXkgdG8gdGhpbmsgdGhhdCBiZWluZyBnYXkgaXMgd3Jvbmcgb3IgaGF2aW5nIGFuIGFib3J0aW9uIGlzIHdyb25nIHdpdGhpbiB5b3VyIG93biByZWxpZ2lvbi4gClRoZSBGbG9wIERlY2lkaW5nIHdoZXRoZXIgdG8gY29udGludWUgcGxheWluZyBhZnRlciBzZWVpbmcgdGhlIGZsb3Agd2lsbCBiZSB5b3VyIHNlY29uZCBiaWdnZXN0IGRlY2lzaW9uLiBJdCBjYW4gYWxzbyBiZSBvbmUgb2YgdGhlIG1vc3QgY29zdGx5IGRlY2lzaW9ucyBpZiB5b3UgY29udGludWUgYWZ0ZXIgdGhlIGZsb3Agd2l0aCBhbiBpbmZlcmlvciBoYW5kLiAKU2hlIGlzIGNvbnN0YW50bHkgc2Vla2luZyB0aGVpciBhcHByb3ZhbCBpbiBldmVyeXRoaW5nLCBhbmQgaXRzIGV4aGF1c3RpbmcgYW5kIHRheGluZyBmb3IgbWUgdG8gd2F0Y2guIE9idmlvdXNseSB0aGF0IGhhcyBzZWVwZWQgaW50byBvdXIgcGFyZW50aW5nIGV4cGVyaWVuY2UgYW5kIGl0IGNhdXNlcyBmcmljdGlvbi4gU2hlIGJhc2ljYWxseSBvbiBhIG1pc3Npb24gdG8gb3JjaGVzdHJhdGUgdGhpcyAiZ3JhbmRwYXJlbnQgZXhwZXJpZW5jZSIgZm9yIGhlciBwYXJlbnRzLCBhbmQgSSBoYXZlIHRvIHRyeSB0byBtYWludGFpbiBzb21lIHNlbWJsYW5jZSBvZiBvcmRlciBpbiB0aGUgbWlkc3Qgb2YgaXQuIApGb3IgcGVvcGxlIGluIHBvdmVydHksIGl0IGlzIGEgaHVnZSBsaWZlIGNoYW5naW5nIGFtb3VudCBvZiB3b3JrIGFuZCBlZmZvcnQsIHRoZXkgaGF2ZSB0byBicmVhayBleHBlY3RhdGlvbnMgYW5kIGRvIGl0IGFsbCB3aXRob3V0IGFueSBzdXBwb3J0LiAKVGhlIEJhbmsgb2YgQ2FuYWRhIHRvZGF5IG1haW50YWluZWQgaXRzIHRhcmdldCBmb3IgdGhlIG92ZXJuaWdodCByYXRlIGF0IDEgcGVyIGNlbnQuIFRoZSBCYW5rIFJhdGUgaXMgY29ycmVzcG9uZGluZ2x5IDIgcGVyIGNlbnQgYW5kIHRoZSBkZXBvc2l0IHJhdGUgaXMgMSBwZXIgY2VudC4KRGFzIEtlcm5nZXNjaGZ0IHZvbiBTa2kgU3RhciBzaW5kIGFscGluZSBTa2lhbmxhZ2VuLCBkaWUgZGVuIEJlc3VjaGVybiBlaW4gdW1mYXNzZW5kZXMgU2tpZXJsZWJuaXMgYmlldGVuLiBkZXIgQmF1IHVuZCBkaWUgRW50d2lja2x1bmcgbmV1ZXIgUGlzdGVuYmVyZWljaGUuIFN3aXNzIEFscHMgaXN0IGRpZSBncnRlLCBpbnRlZ3JpZXJ0ZSBHYW56amFocmVzIEZlcmllbmRlc3RpbmF0aW9uLCBkaWUgZGVyemVpdCBpbSBBbHBlbnJhdW0gZW50c3RlaHQuIERhcyBQcm9qZWt0IHVtZmF0IGltIEVuZGF1c2JhdSBzZWNocyBIb3RlbHMgaW0gVmllciAgdW5kIEZuZiBTdGVybmUgQmVyZWljaCwgNDkwIEFwcGFydGVtZW50cyBpbiA0MiBHZWJ1ZGVuLCBydW5kIDI1IFZpbGxlbiwgMTk3MCBQYXJrcGx0emUsIDM1LjAwMCBRdWFkcmF0bWV0ZXIgR2V3ZXJiZWZsY2hlLCBlaW4gU3BvcnQgIHVuZCBGcmVpemVpdHplbnRydW0sIEtvbmdyZXNzZWlucmljaHR1bmdlbiBmciA2MDAgUGVyc29uZW4gc293aWUgZWluZW4gMTggTG9jaCBHb2xmcGxhdHouIEltIFJhaG1lbiBkZXIgRXJzdGVsbHVuZyBkZXMgUmVzb3J0cyB3aXJkIGF1Y2ggZGFzIFNraWdlYmlldCB6d2lzY2hlbiBBbmRlcm1hdHQgdW5kIFNlZHJ1biBtb2Rlcm5pc2llcnQgdW5kIHp1c2FtbWVuZ2VzY2hsb3NzZW4uIEFuZGVybWF0dCBTd2lzcyBBbHBzIEFHIGlzdCBlaW5lIDEwMCUgVG9jaHRlcmdlc2VsbHNjaGFmdCBkZXIgYW4gZGVyIFNjaHdlaXplciBCcnNlIFNJWCBrb3RpZXJ0ZW4gT3Jhc2NvbSBEZXZlbG9wbWVudCBIb2xkaW5nIEFHIChPREgpLgpQcmltZSBNaW5pc3RlciBOYXdheiBTaGFyaWYgY29udGludWVkIGhpcyBwcmFjdGljZSBvZiBhdHRlbmRpbmcgdGhlIFBhcmxpYW1lbnQgd2hlbmV2ZXIgaGUgaXMgaW4gdHJvdWJsZS4gV2UgY291bGQgbm90IHRlbGwgZnJvbSBoaXMgZmFjZSBpZiBoZSB3YXMgZGlzdHVyYmVkLiBIZSBoYXMgZ290IGZhY2UgdGhhdCBzaG91bGQga2VlcCBoaW0gYXdheSBmcm9tIHRoZSBnYW1lIG9mIHBva2VyIHdoZXJlIHBlb3BsZSBqdWRnZSB5b3VyIGhhbmQgZnJvbSBmYWNlIGV4cHJlc3Npb25zLiAKRHIuIEt5bGUgUHJ1c3NvLCB2aWNlIHByZXNpZGVudCBvZiB0aGUgUHJvZmVzc2lvbmFsIEZvb3RiYWxsIENoaXJvcHJhY3RpYyBTb2NpZXR5LCBpcyB0aGUgdGVhbSBjaGlyb3ByYWN0b3IgZm9yIHRoZSBPYWtsYW5kIFJhaWRlcnMuIEhlIGlzIGEgZ3JhZHVhdGUgb2YgTGlmZSBDaGlyb3ByYWN0aWMgQ29sbGVnZSBXZXN0IGFuZCBwcmFjdGljZXMgaW4gYm90aCBMaXZlcm1vcmUgYW5kIE9ha2xhbmQsIENhbGlmLkRyLiAKVGhlIGJ1eSBpbiBmb3IgdGhpcyBldmVudCBpcyBScy4gCkkgb25seSBldmVyIGhhZCBwcm9ibGVtcyB3aXRoIHBlb3BsZSBpbiBzbWFsbCB0b3ducywgd2hlcmUgdGhleSB3b3VsZCBhc3N1bWUgSSBKYXBhbmVzZSBhbmQgc2F5ICJrb25pY2hpd2EiIHRoZW4gbGF1Z2ggYXMgdGhleSB3YWxrIGF3YXkgKHRoYXQgZ3V5IHdhcyBUdXJraXNoKSwgb3IgQ2hpbmVzZSBhbmQgc2F5ICJjaGluZyBjaG9uZyIgb3Igc29tZXRoaW5nIGxpa2UgdGhhdC4gClN0YXJ0aW5nIHRvZGF5LCBjcm9zc2luZyBiYWNrIGFuZCBmb3J0aCBiZXR3ZWVuIHRoZSBVUyBhbmQgQ2FuYWRhIHdpbGwgYmUgbXVjaCBtb3JlIGRpZmZpY3VsdC4gVGhlIFdlc3Rlcm4gSGVtaXNwaGVyZSBUcmF2ZWwgSW5pdGlhdGl2ZSB3ZW50IGludG8gZWZmZWN0IHRvZGF5IGFuZCBmcm9tIG5vdyBvbiwgYW55b25lIGNyb3NzaW5nIGJldHdlZW4gdGhlIHR3byBjb3VudHJpZXMgbXVzdCBwcmVzZW50IGEgcGFzc3BvcnQuIGJvcmRlciB0YWtlcyBlZmZlY3QgdG9kYXkuCkZyb20gZWFybHkgYW5kIG1pZGRsZSBwb3NpdGlvbiAoZmlyc3QgZml2ZSBwb3NpdGlvbnMgZnJvbSBmaXJzdCB0byBhY3QpIHlvdSBzaG91bGQgZm9sZCBldmVyeXRoaW5nIGJ1dCBBSyBhbmQgYSBwYWlyIG9mIGphY2tzIG9yIGJldHRlci4gV2hlbiB5b3UgZG8gcGxheSBvbmUgb2YgdGhlc2UgaGFuZHMsIHJhaXNlIHRvIGZvdXIgdGltZXMgdGhlIGJpZyBibGluZC4gCk51ciBNaXN1YXJpLCBmb3IgYSB3aGlsZSwgd2FzIGNvZGRsZWQgYnkgU0EuIE91ciBwcm9ibGVtIGluIE1pbmRhbmFvIGlzIGNvbXBsZXguIFdlIGRpZG4gbmVlZCB0byBoYXZlIG91dHNpZGUgIHRoYXQgaW5jbHVkZXMgc2F1ZGkgYXJhYmlhbiAgaW52b2x2ZW1lbnQgaW4gdGhlIG1peC4uIApUaGV5IGRlY2lkZWQgdG8gcmV3aXJlIHRoZSBidWlsZGluZyB3aXRoIG5ld2VyLCBiZXR0ZXIgbmV0d29yayBjYWJsZXMuIApQZXJzb25hbGx5LCBJIHRha2luZyBhIGJyZWFrIHRvIHdvcmsgb24gb3RoZXIgaG9iYmllcy4gSWYgaXQgc29tZXRoaW5nIHlvdSBlbmpveSBkb2luZyB5b3UgbWlnaHQgY29uc2lkZXIgYnVkZ2V0aW5nIGEgZmluaXRlIGFtb3VudCB0byBwbGF5IHdpdGggZWFjaCBtb250aCBhbmQgd2hlbiB0aGF0IGdvbmUgeW91IGhhdmUgdG8gd2FpdCB0byBwbGF5IHVudGlsIGl0IHJlcGxlbmlzaGVkLiAKSSBsb29wZWQgaXQgb3ZlciBhbmQgb3ZlciB0byAiQ09NRSBPTiBBTkQgU0xBTSIuIApIb3dldmVyLCB0aGVyZSBpcyBldmlkZW5jZSB0aGF0IHN1Z2dlc3RzIHRoYXQgRW5nbGFuZCBjb3VsZCBoYXZlIGJlZW4gYSBsb3Qgc3Ryb25nZXIuIApBZnRlciB0YWtpbmcgdGhlIHRlc3QsIHRoZSBzdHVkZW50cyBpbiBoZXIgY2xhc3Mgd2VyZSBhYmxlIHRvIHRoZW4gc2hhZG93IGEgcGVyc29uIGluIHRoYXQgZmllbGQgZm9yIGEgZGF5LiBDb25kb24gY2hvc2UgdG8gc2hhZG93IHRoZSBvbmx5IGxvY2FsIG1lc3NhZ2UgdGhlcmFwaXN0IGluIGhlciBob21ldG93biB3aXRoIGEgcHJpdmF0ZSBwcmFjdGljZS4gCk1hbnkgcGVvcGxlIHNheSB0aGF0IHRoZXkgd2FudCB0byBhdHRhaW4gZmV3IHRoaW5ncyBidXQgZG9uIGFjdHVhbGx5IGJlbGlldmUgaW4gdGhlaXIgY2FwYWJpbGl0eSB0byBhY2hpZXZlIGFnZW4gcG9rZXIgdGVycGVyY2F5YSBvciB2YWxlIHRoZSBnb2FscyB0b3RhbGx5LiBBcyBhIGNvbnNlcXVlbmNlLCB0aGUgYWJpbGl0eSB0byBhdHRhaW4gdGhlaXIgaW50ZW50aW9ucyBpcyBtaW5pbWl6ZWQgdW5jb25zY2lvdXNseS4gCkxpa2UgYWN0dWFsbHkgaGF0ZS4gCldpbGxpYW0gdGhlIENvbnFlcm9yIGJ1aWx0IGEgbW9yZSB0cmFkaXRpb25hbCBsb29raW5nIGNhc3RsZSBhdCB0aGUgc3BvdCBpbiAxMDY4LCB0d28geWVhcnMgYWZ0ZXIgaGUgY2xhaW1lZCB0aGUgRW5nbGlzaCB0aHJvbmUgaW4gdGhlIE5vcm1hbiBDb25xdWVzdC5UaGUgY2FzdGxlJ3MgY3VycmVudCBvd25lcnMgICBNZXJsaW4gRW50ZXJ0YWlubWVudHMsIHdobyBib3VnaHQgb3V0IHByZXZpb3VzIG93bmVycyBUdXNzYXVkcyBpbiAyMDA3ICAgYXJlIGNlbGVicmF0aW5nIGl0cyAxLDEwMHRoIGJpcnRoZGF5IGJ5IHVwZGF0aW5nIGFsbCBpdHMgZXhoaWJpdHMgaW5jbHVkaW5nIHRoZSBQcmluY2VzcyBUb3dlciBhbmQgdGhlIEtpbmdtYWtlciBFeHBlcmllbmNlIGFzIHdlbGwgYXMgYWRkaW5nIHNvbWUgbmV3IHNob3dzIGluY2x1ZGluZyBGbGlnaHQgb2YgdGhlIEVhZ2xlcyBhbmQgdGhlIFRyZWJ1Y2hldCBGaXJlYmFsbCBTcGVjdGFjdWxhci5FbnRlcnRhaW5lcnMgZnJvbSB0aGUgSG9ycmlibGUgSGlzdG9yaWVzIGVkdWNhdGlvbmFsIG9yZ2FuaXNhdGlvbiBhcmUgYWxzbyByZXR1cm5pbmcgdG8gdGhlIGNhc3RsZSB0byBzaG93IHZpc2l0b3JzIHRoZSBjYXN0bGUncyAxLDEwMCB5ZWFycyBvZiBoaXN0b3J5IHdpdGggc29tZSBmdW4gZ2FtZXMgbG9va2luZyBhdCBTbWFzaGluZyBTYXhvbnMgdnMgVmljaW91cyBWaWtpbmdzLCBhbG9uZyB3aXRoIEdvcmdlb3VzIEdlb3JnaWFucywgU2xpbXkgU3R1YXJ0cywgVmlsZSBWaWN0b3JpYW5zIGFuZCB0aGUgTWVhc2x5IE1pZGRsZSBBZ2VzLkhlcmUgd2UgbG9vayBhdCAxMyByZWFzb25zIHdoeSB3ZSBsb3ZlIFdhcndpY2sgQ2FzdGxlOjEuIApFeHBhbnNpb24gaW50b25ldyAicmVzaWRlbnRpYWwiIG5laWdoYm9yaG9vZHMuIExhcyBWZWdhcyB2cy4gCkkgc2F3IGFsbCBzb3J0cyBvZiA4MCBoaXQgbW92aWVzIGF0IHRoZSBtYWxsLiAKSSBoYXZlbiBtZW50aW9uZWQgaXQgdG8gaGltLiBJZGsgaG93IGhvbmVzdGx5LiBIZSBnZXRzIHNvIGhhcHB5IHRhbGtpbmcgYWJvdXQgaXQgdGhhdCBJIGRvbiBrbm93IHdoYXQgdG8gc2F5IGFmdGVyd2FyZHMuIApWb3JhYiBzZWkgZ2VzYWd0LCBkYXNzIGljaCBkaWUgZGV1dHNjaGUgYmVyc2V0enVuZyBkZXMgQnVjaGVzIGdlbGVzZW4gaGFiZS4gClRoZSBVU1NSIGluZmlsdHJhdGVkIHRoZSBDYXRob2xpYyBDaHVyY2ggYnkgc2VuZGluZyBDb21tdW5pc3RzIGluIHRoZSBzZW1pbmFyeSB0byBiZWNvbWUgcHJpZXN0cy4gVGhleSBtYWtlIGl0IHRoZWlyIGJ1c2luZXNzIHRvIHVuZGVybWluZSB0aGUgY2h1cmNoIGF0IGV2ZXJ5IHR1cm4uIEl0IGlzIG5vdCBrbm93biBieSBtZSB3aGV0aGVyIHRoZXNlIGFyZSBzb21lIG9mIHRoZSBzYW1lIGd1eXMgYXMgaW4gdGhlIGxhdmVuZGVyIE1hZmlhLgpUaG9zZSBwZW9wbGUgdGhhdCBoYXZlIGFsd2F5cyBkcmVhbWVkIG9mIGdpdmluZyB0aGUgUG9rZXIgT25saW5lIGEgZ28gb24gYSBtb2JpbGUgZGV2aWNlIGNhbiBub3cgcmVqb2ljZS4gSXRzIG5vdCBqdXN0IHRoYXQgdGhlIGdhbWVzIGNhbiBiZSBwbGF5ZWQ6IHRoZXkgY2FuIGJlIGVuam95ZWQgaW4gZnVsbCByZXNvbHV0aW9ucyBhbmQgYXQgc2l4dHkgZnJhbWVzIHBlciBzZWNvbmQuIEZlYXR1cmluZyBzbGljayBhbmltYXRpb24sIGh1Z2Ugd2lubmluZ3MgYW5kIGFsc28gdGhleSBkb250IHRha2UgdG9vIG11Y2ggc3RvcmFnZSBvbiB0aGUgbW9iaWxlIGRldmljZXMuIApGaW5hbGx5IHRvIG15IHBhc3QgYm9zc2VzIGNvbGxlY3RpdmVseTogSSB0aGFuayBHb2QgZm9yIHRoZSBsZXNzb25zIEkgbGVhcm5lZCBmcm9tIHlvdSwgYWxsIG9mIHlvdS4gSSBkb24ndCBoYXRlIGFueW9uZSBvciB3aXNoIGFueW9uZSBoYXJtLiBJIHdpc2ggdGhpcyBpZGVhIGhhZCBjb21lIHRvIG1lIHdoZW4gSSB3YXMgd2Fsa2luZyBvdXQgdGhlIGRvb3IuIEkgd291bGQgaGF2ZSBzYXQgZG93biB3aXRoIHlvdSBhbmQgdG9sZCB5b3Ugd2hhdCBJIGxlYXJuZWQgZnJvbSB5b3UuIEkgd2VudCBiYWNrIGFuZCBmb3J0aCBhYm91dCB3aGV0aGVyIG9yIG5vdCB0byB0ZWxsIHN0b3JpZXMgYWJvdXQgZWFjaCBvZiB5b3UuIEkgaGF2ZSBhIGZ1bm55IG9yIGVubGlnaHRlbmluZyBzdG9yeSBmb3IgZWFjaCBvbmUgb2YgeW91LCBidXQgSSB3b3JyaWVkIHRoYXQgaXQgbWlnaHQgcmV2ZWFsIGlkZW50aXRpZXMuIFRoYXQgd291bGQgbm90IGJlIGEgZ29vZCB0aGluZyBmb3IgZXZlcnlvbmUuIE1heWJlIEknbGwgd3JpdGUgdGhlbSBpbiBhbm90aGVyIGJsb2cuCkJpcmQgaXMgdHJ5aW5nIHRvIGRvIHdoYXQncyBiZXN0IGZvciB0aGUgc2hvcnQgYW5kIGxvbmcgdGVybS4gSW5kaWFuYSBoYXMgbG9zdCBzaXggc3RyYWlnaHQgYW5kIGlzIGN1cnJlbnRseSBzZWVkZWQgc2l4dGggaW4gdGhlIEVhc3Rlcm4gQ29uZmVyZW5jZS4KSSBhZ3JlZSBlbnRpcmVseSB0aGF0IGdvb2Qgc2xlZXAgKGZvciBwYXJlbnRzIGFuZCBraWRzISkgaXMgZmFyIG1vcmUgaW1wb3J0YW50IHRoYW4gZWxpbWluYXRpbmcgYWxsIHN0cmVzc29ycyBpbiBhIGJhYnkgbGlmZS4gTXkgc29uIHdhcyBzbGVlcCB0cmFpbmVkIChoZSBuZXZlciBsaWtlZCBiZWluZyByb2NrZWQgdG8gc2xlZXAsIHNvIHdlIGhhZCB0aGF0IGdvaW5nIGZvciB1cykgYW5kIGhlIGdvZXMgZG93biBmb3IgZXZlcnkgbmFwIGFuZCBiZWR0aW1lIHdpdGggYW4gYWJzb2x1dGUgbWF4aW11bSBvZiA1IG1pbnV0ZXMgb2Ygd2hpbmluZyBvciBjcnlpbmcuIEl0IGFsc28gbWVhbnMgaGUgY2FuIGJlIHB1dCB0byBzbGVlcCBieSBvdGhlciBwZW9wbGUsIGJlY2F1c2UgaGUgZG9lc24gZGVwZW5kIG9uIG15IGh1c2JhbmQgb3IgbWUgYmVpbmcgdGhlcmUgdG8gZG8gaXQuLiAKTm9ydGggQ2Fyb2xpbmEgcHVsbGVkIGRvd24gMTQsIG1ha2luZyBHVSBwYXkgZm9yIG5lYXJseSBldmVyeSBvbmUgd2l0aCBhIDI3IDAgZWRnZSBpbiBzZWNvbmQgY2hhbmNlIHBvaW50cy4gClRoZW4gY2hlY2sgb3V0IHRoZXNlIHRpcHMgdG8gaGVscCBmaW5kIHNlbmlvciBzaW5nbGVzISBHZXQgY2hhdHRpbmcgdG8gc2VuaW9ycyBpbiB5b3VyIGxvY2FsIGFyZWEgYW5kIHN0YXJ0IGdvaW5nIG9uIGRhdGVzISBJdCBpcyBuZXZlciBhIGdvb2QgaWRlYSB0byBmcmVlbHkgZ2l2ZSBhd2F5IGluZm9ybWF0aW9uIHRoYXQgbWF5IGxlYWQgdG8gaWRlbnRpdHkgdGhlZnQgb3Igb3RoZXIgZGFuZ2Vycywgc3VjaCBhcyBhY2NvdW50IG51bWJlcnMgb3IgcGFzc3dvcmRzLiAKTm90IGEgbG90IG9mIERDIHRvdXJpc3RzIGFyZSBnb2luZyB0byBtYWtlIHRoZWlyIHdheSBkb3duIHRvIHBsYXkgd2hlbiB0aGVyZSBpcyBhbGwgdGhlIHNoaXQgdG8gc2VlIGluIHRoZSBkaXN0cmljdC4gCkhvd2V2ZXIsIHRoZSBUUFAgMTEgcHJlc2VydmVkIG1hbnkgb2YgdGhlIHJlZHVjdGlvbnMgaW4gdHJhZGUgYmFycmllcnMgYW5kIGluY3JlYXNlZCBtYXJrZXQgYWNjZXNzIHRoYXQgdGhlIFVuaXRlZCBTdGF0ZXMgaGVscGVkIG5lZ290aWF0ZS4gRGFkZSBjb21wYXJlZCB0aGUgVW5pdGVkIFN0YXRlcyB3YWxraW5nIGF3YXkgZnJvbSB0aGUgZGVhbCB0byBhIHBva2VyIHBsYXllciBnZXR0aW5nIHRvIHRoZSBmaW5hbCByb3VuZCBhbmQgaW5zdGVhZCBvZiBjYXNoaW5nIGluLCB0aHJvd2luZyB0aGUgY2hpcHMgb24gdGhlIHRhYmxlIHRvIGJlIGRpdnZpZWQgdXAgYnkgdGhlIHJlc3Qgb2YgdGhlIHBsYXllcnMuLiAKQXMgYSBjb3VudGVyYmFsYW5jZSBhZ2FpbnN0IHJ1bGUgMiwga2VlcCBpbiBtaW5kIHRoYXQgZGlmZmVyZW50IHBlb3BsZSBhcmUgY3JlZXBlZCBvdXQgYnkgZGlmZmVyZW50IHRoaW5ncywgYW5kIHN1c3BlbnNpb24gb2YgZGlzYmVsaWVmIGhlbHBzIHRoZSBhdG1vc3BoZXJlLiAKQmVpbmcgdGhlIGNhcGl0YWwgb2YgR2VvcmdpYSwgaXQncyB0aGUgY291bnRyeSdzIGN1bHR1cmFsIGNlbnRyZS4gClByZXR0eSBmYW1pbGlhciB0byBtZSBhZnRlciBhbGwgdGhlc2UgeWVhcnMsIGJ1dCBiZWluZyBpbiB0cmFpbmluZyB3aXRoIGdvYWxzIEkgZGlkbid0IHdhbnQgdG8gbWlzcyBhZGRlZCBhbiBleHRyYSB3cmlua2xlLiAKVGhlIGNoYW5jZXMgb2YgQmlqYXJhbmkgZWR1Y2F0aW5nIGhpbXNlbGYgYWJvdXQgdGhlIGhpZXJhcmNoeSBvZiB0aGUganVzdGljZSBzeXN0ZW0gYW5kIFplaHJpIG1haWxpbmcgaGltc2VsZiBhIGNvbnNjaWVuY2UgYXJlIHNsaW0gdG8gbm9uZS4gClBhdHR5SWNlMzIgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ28KRHJhcGluZyBpcyBhbHdheXMgcmVxdWlyZWQgaW4gYWxsIHNlc3Npb25zIHVubGVzcyB5b3VyIGFyZSByZWNlaXZpbmcgc2VydmljZXMgY29tcGxldGVseSBjbG90aGVkIG9yIEFzaGlhdHN1LCB3aGljaCByZXF1aXJlcyBtaW5pbWFsIGRyYXBpbmcgYW5kIHlvdSBtdXN0IHNpZ24gYSB3YWl2ZXIuIApJIGRvbiBzZWUgbXlzZWxmIGxpdmluZyBmb3IgdG9vIG11Y2ggbG9uZ2VyIChtYXliZSAyIDMgeWVhcnMgdG9wcykuIApXaGVyZSB3ZXJlIHlvdSBpbiBLb3JlYT8gSSBmZWVsIHlvdSAxMDAlIHdpdGggdGhlIHdhbnRpbmcgdG8gZXNjYXBlIGJlaW5nIG9uIHRoZSBmcmluZ2VzIG9mIGEgaG9tb2dlbmVvdXMgc29jaWV0eS4gSSBiZSB2ZXJ5IGludGVyZXN0ZWQgaW4gdGFsa2luZyBhYm91dCB5b3VyIHRyYW5zaXRpb24gYmFjayB0byAoTm9ydGgpIEFtZXJpY2FuIGxpZmUuSW4gbXkgZXhwZXJpZW5jZSwgSSBoYXZlIHRvIGFncmVlIHdpdGggdGhlIHR5cGUgb2YgcGVvcGxlIHlvdSBtZW50aW9uIGFzIGJlaW5nIGF0dHJhY3RlZCB0byB0aGUgdHdvIHBvc2l0aW9ucy4gTXkgdW5kZXJncmFkIGluIGZvcmVpZ24gbGFuZ3VhZ2UgZWR1Y2F0aW9uIHdhcyBwcmV0dHkgbXVjaCB0aGUgc2FtZSBhcyB0aGUgU0xQIGNyb3dkLiAKUmVwYWlycyB3b3VsZCB0YWtlIHVudGlsIHRoZSBuZXh0IGRheSwgc28gVmlvbGEgZGVjaWRlZCB0byBzZWUgYSBtb3ZpZS4gU2hlIGJvdWdodCBhIDMwIGNlbnQgdGlja2V0LiBBZnRlciB0YWtpbmcgYSBzZWF0IGFuIHVzaGVyIG9yZGVyZWQgaGVyIHRvIHRoZSBiYWxjb255LiAKV2l0aCBwb29yIGxlYWRlcnNoaXAgdGhlIGNsdWIgb3dlZCBwbGF5ZXJzICQ1MGsgaW4gd2lubmluZ3MuIFRoZSBvd25lcnMgaG93ZXZlciBjb3VsZG4gcGF5LiAKVGhlbiB3ZSBnZXQgdG8gdGhlIHBhcnQgd2hlcmUgcGVvcGxlIHN0YXJ0IHRvIGRpdmVyZ2UgaW4gaW50ZXJwcmV0YXRpb24uIFdoZW4gdGhlIHdvcmtlcnMgcmV2b2x0ZWQgTWFyeCBiZWxpZXZlZCB0aGV5IHdvdWxkIGZvcm0gc29tZXRoaW5nIGNhbGxlZCB0aGUgImRpY3RhdG9yc2hpcCBvZiB0aGUgcHJvbGV0YXJpYXQiLiBUaGlzIGJvZHkgd291bGQgYmFzaWNhbGx5IHRyYW5zaXRpb24gdGhlIHNvY2lldHkgdG8gQ29tbXVuaXNtLiBOb3cgdGhlcmUgYXJlIHRoaW5ncyBpdCB3b3VsZG4ndCBkbywgaXQgd291bGRuJ3Qga2lsbCB0aGUgQ2FwaXRhbGlzdCBjbGFzcywgaXQgd291bGRuJ3Qgc2V0IHVwIGd1bGFncyBhcmUgYW55dGhpbmcuIApUaGVyZSBpcyBhbXBsZSBldmlkZW5jZSB0aGF0LCBpbiB0aGUgaGFuZHMgb2YgcmVhbCBwZW9wbGUsIHRoZSBzaG9ydGVyIGRyaXZlciBtaWdodCB2ZXJ5IHdlbGwgaGl0IHRoZSBiYWxsLCBub3QganVzdCB3aXRoIG1vcmUgYWNjdXJhY3ksIGJ1dCBtb3JlIGRpc3RhbmNlIGFzIHdlbGwuIEZvciBldmVyeSBxdWFydGVyIGluY2ggeW91IG1pc3MgdGhlICJzd2VldCBzcG90IiBvbiB5b3VyIGRyaXZlciwgeW91IGxvb3NlIGFib3V0IGZpdmUgeWFyZHMgaW4gZGlzdGFuY2UuIE1pc3MgaXQgYnkgYSBoYWxmIGFuIGluY2gsIHlvdSBsb29zZSBhYm91dCAxMCB5YXJkcywgYnkgYW4gaW5jaCAyMCB5YXJkcyBhbmQgc28gb24uIApDZXdlayBIb3JueSBEaWVudG90IEtla2FzaWhueWEuM2dwLiBNZXN1bSBEaSBXYXJuZXQgQWJnIENhbmR5IFNlIERzaGFiaWxsZSBQb3VyIExhIENhbXJhICAgUXViZWMgUG9ybiAuIE1lc3VtIGRpIHdhcm5ldCBhYmcgY3JvdCxib2tlcCBjZXdlayBob3JueSxib2tlcCB0a3csYm9rZXAgYWJnIGhvdC4gClF1ZSByZXN0ZSB0IGlsIGRlIHRvdXRlIGNldHRlIGhvcnJldXIgMTUgYW5zIGFwcnMgPyBQYXMgZ3JhbmQgY2hvc2UgIHZyYWkgZGlyZSwgcHVpc3F1ZSBkZXB1aXMsIGxlIG1vaW5kcmUgcGlzb2RlIGRlIFggZmlsZXMsIHBhciBleGVtcGxlLCBlc3QgYmllbiBwbHVzIHRyYXNoIG91IGdvcmUgcXVlIGNlIGZpbG0gZmluYWxlbWVudCBoeXBlciBjbGFzc2lxdWUsIGV0IGMnZXN0IHRhbnQgbWlldXguIFNpLCB0aWVucywgU2N1bGx5IGEgY29tcGx0ZW1lbnQgcG9tcCBsZSBsb29rIGRlIGwnYWdlbnQgU3RlcmxpbmcsIHRvdXQgZGUgbW1lLgozIGJldCBwcmVmbG9wIGJhc2ljYWxseSBzYXlzICJJIGhhdmUgYSBnb29kIGhhbmQgbGV0cyBnYW1ibGUuIiBDaGVja2luZyB0aGUgZmxvcCBnYXZlIGEgbG90IG9mIGl0IGF3YXkuIFNoZSB3b3VsZCBiZSBzdXNwZWN0aW5nIHRoYXQgaGUgZWl0aGVyIGhhZCBhY2VzLCBraW5ncywgcXVlZW5zLCBvciBBUSBBSy4gCkhlbnJ5IEJvcnJlZ28gU2FsaW5hcywgMjUsIGFuZCBKdXN0aW4gRmVyZ3Vzb24sIDI2LCBib3RoIG9mIFRvcm9udG8sIGFyZSBlYWNoIGNoYXJnZWQgd2l0aCBzZXZlbiBvZmZlbmNlcyBpbmNsdWRpbmcgdHJhZmZpY2tpbmcgaW4gcGVyc29ucyB1bmRlciAxOCwgcHJvY3VyaW5nIGFuZCBleGVyY2lzaW5nIGNvbnRyb2wgYW5kIHNleHVhbCBhc3NhdWx0IG9uIGEgcGVyc29uIHVuZGVyIDE4LgpDYWxsaW5nIGl0IEhhcnJhaD9zIFBoaWxhZGVscGhpYSB3YXMgYSBtYXJrZXRpbmcgZGVjaXNpb24sIHNvIGRvbj90IGxldCB0aGUgbmFtZSBmb29sIENocmlzdGluZSBDYW0sIGVIb3cgQ29udHJpYnV0b3IgU2hhcmUgQSB3aW5uaW5nIGhhbmQgV2lubmluZyBhdCBGdWxsIFRpbHQgUG9rZXIgaXMgZnVuIGFuZCBwcm9maXRhYmxlLiAKRXZlbiB0aG91Z2ggeW91IGFuZCBJIGFyZSBub3QgYmx1ZSBjb2xsYXIgd29ya2Vycywgb3VyIHdhZ2VzIGFyZSBhZmZlY3RlZCBieSB0aGUgYWx0ZXJuYXRpdmVzIHdlIGhhdmUsIGFuZCBhcyB0aG9zZSBhbHRlcm5hdGl2ZXMgYmVjb21lIGZld2VyIGFuZCBsZXNzIGF0dHJhY3RpdmUsIHdoaXRlIGNvbGxhciB3b3JrIHdpbGwgYmUgaGVhZGVkIGludG8gdGhlIHNhbWUgZGVhdGggc3BpcmFsIGFzIGJsdWUgY29sbGFyIHdvcmsuIApJbnNlcnRzIHNpbXBseSBmaWxsIHRoZXNlIHZvaWRzLiAKTGEgcnBvbnNlIGZlcmEgZG9uYyBsJ29iamV0IGQndW4gcGRmIGR1IGZhaXQgZGUgc2EgbG9uZ3VldXIgZXQgZGUgbGEgbmNlc3NpdCBkZSBsJ2Fzc29ydGlyIGRlIGNvcGllcyBkJ2NyYW4gYWZpbiBkZSBwb3V2b2lyIG1lIGRmZW5kcmUuVW5lIGZvaXMgZGUgcGx1cywgdW4gbWFyY2hhbmQgYSB0cm91diBsZSBtb3llbiBkZSBzJ2VuIGZhaXJlIHJlcGFzc2VyIHVuZSBjb3VjaGUuIEonYWkgcG91cnRhbnQgcHJ2ZW51IG1haW50ZXMgZm9pcyBkdSByaXNxdWUgcXVlIGwnb24gZW5jb3VydCBlbiBzJ3kgcHJlbmFudCBtYWwuIApQb3Bjb3JuZ2xhc3NlcyB1CkhlIHRyaWVkIGhpcyBiZXN0IHRvIGJlIGFwcHJvYWNoYWJsZSBJIHJlYWxpemUgbm93LCBidXQgd2Ugd2VyZSBhbGwgc28gaW50aW1pZGF0ZWQuIApQb2ludCBvZiBkaWZmZXJlbnRpYXRpb24gaXMgdGhhdCB0aGUgZG93bnRvd24gY2FzaW5vIGlzIGEgZnVsbCBzZXJ2aWNlIGNhc2lubyB3aXRoIGEgZnVsbCBjb21wbGVtZW50IG9mIGdhbWVzLiAKRGFzIE1vZGVyYXRlIFJlc29sdXRpb24gSW1hZ2luZyBTcGVjdHJvcmFkaW9tZXRlciAoTU9ESVMgKSBhdWYgZGVtIE5BU0EgIFNhdGVsbGl0ZW4gVGVycmEgYmxpY2t0ZSIgYW0gMTUuIEp1bmkgMjAxMyBhdWYgZGllIEthbmFyaXNjaGVuIEluc2VsbiB1bmQgbWFjaHRlIGRpZXNlIEF1Zm5haG1lLiBEZXIgQXRsYW50aWsgaGF0IGluIGdyb2VuIFRlaWxlcyBkZXMgQmlsZGVzIGVpbmUgc2lsYnJpZ2UgYnp3LiAKTXkgZGFkIHdhbGtzIGludG8gYSBzaG9wIGFuZCB5b3Ugc2VlIGhpbSB3aGVuIHlvdSBzZWUgaGltLiBNeSBtb20gd2Fsa3MgaW4gYSBzaG9wIGFuZCBzaGUgaXMgb3V0IGEgZmV3IG1pbnV0ZXMgbGF0ZXIuIApUaGVuLCBhc3N1cmVkIG9mIHlvdXIgcHJpdmFjeSwgeW91IGphbSBhcyBtdWNoIG9mIHlvdXIgZmluZ2VyIGludG8geW91ciBub3N0cmlsIGFzIHlvdSBjYW4sIHB1bGxpbmcgdGhlIGZpbmdlciB0aXAgZm9yd2FyZCB2ZXJ5IHNsaWdodGx5LCBmb3JtaW5nIGEgaG9vay4gWW91IHBpZXJjZSB0aGUgY3J1c3Qgb2YgdGhlIG5hc2FsIGludGVybG9wZXIgZXZlciBzbyBnZW50bHkgd2l0aCB5b3VyIGZpbmdlcm5haWwsIGZvciB0byBzZXZlciBpdCBhdCB0aGlzIHBvaW50IHdvdWxkIGJlIGJleW9uZCBoZWFydGJyZWFraW5nLiAKWW91IGhhdmUgdGhlIGZyZWVkb20gdG8gcHJhY3RpY2UgeW91ciBmYWl0aCBhbmQgY3VsdHVyZSBvbiBwYXBlciwgYnV0IHRoYXQgZG9lc24gbWVhbiB0aGF0IHlvdXIgY3VsdHVyZSB3b24gYmUgd2F0ZXJlZCBkb3duIGFuZCBlZmZlY3RlZCBieSBvdGhlciBjdWx0dXJlcy4gTXVoIGN1bHR1cmUgYXNpZGUsIEkgZG9uIHVuZGVyc3RhbmQgdGhpcyB0cmFzaGluZyBvZiBFYXN0ZXJuIEFybWVuaWFucy4gRG8geW91IGZvcmdldCwgYWZ0ZXIgeW91IHJhbiBhd2F5KHdoaWNoIHlvdSBzZWVtIHRvIGJlIHJlYWxseSBwcm91ZCBvZikgd2Ugd2VyZSB0aGUgb25lcyB0aGF0IGRlZmVuZGVkIEFybWVuaWEgZnJvbSBUdXJrZXkgQ2F1Y2FzdXMgY2FtcGFpZ24sIHRvb2sgTG9yaSBmcm9tIEdlb3JnaWEsIFN5dW5payBmcm9tIEF6ZXJiYWlqYW4gYW5kIGxhdGVyIEthcmFiYWtoLiBUaGVuIHlvdSBjYW4gY29tZSBoZXJlIGFuZCBhY3QgYXMgaWYgeW91IGFyZSBiZXR0ZXIgdGhhbiB1cyBiZWNhdXNlIG11aCBjdWx0dXJlISEhIQpSZWdhcmRpbmcgdGhlIGNsZWFubGluZXNzIG9mIHRoZSBzdHJlZXRzLCBpdCB3YXMgbm90IHBhcnRpY3VsYXJseSB1bmNvbW1vbiBmb3IgcGVvcGxlIHRvIHRocm93IHdhc3RlIGludG8gdGhlIHN0cmVldCwgYXMgZXZpZGVuY2VkIGJ5IHRoZSBtdWx0aXBsZSByZWN1cnJpbmcgbGF3cyB0aGF0IGtlcHQgYmVpbmcgcGFzc2VkLCB3aGljaCBiYW5uZWQgcGVvcGxlIGZyb20gdGhyb3dpbmcgdHJhc2gsIGFuaW1hbCBza2lucywgaHVtYW4gd2FzdGUsIGV0Yy4gCkRvbiBmYWxsIGludG8gdGhlIHRyYXAgb2YgdGhpbmtpbmcgaGUgd2lsbCBjaGFuZ2UgaWYgeW91IG1vdmUgaW4gdG9nZXRoZXIuIE9uIHRoZSBjb250cmFyeSBpdCB3aWxsIG9ubHkgaGlnaGxpZ2h0IHRoZSBpc3N1ZXMgaW4geW91ciByZWxhdGlvbnNoaXAgbW9yZSBzdGFya2x5IGJlY2F1c2UgeW91IG11c3QgZmFjZSBlYWNoIG90aGVyIGV2ZXJ5ZGF5LiAKSnVzdCBnb29nbGUgcmVjaXBlcyB1bnRpbCB5b3UgZmluZCBvbmVzIHRoYXQgeW91IGxpa2UuIEJ1eSBidWxsaW9uIGluc3RlYWQgb2YgbGlxdWlkIHN0b2NrIHRvIHNhdmUgbW9uZXkuIFR3byB2ZXJ5IGNoZWFwIGFuZCB2ZXJ5IG51dHJpdGlvdXMgaW5ncmVkaWVudHMgYXJlIGxlbnRpbHMgYW5kIHNwaW5hY2guIApUaGV5IHdlcmUgYSBwYXJ0IG9mIGEgZ3JvdXAgb2YgOCBwZW9wbGUgdGhhdCBkZWRpY2F0ZWQgYWxsIHRoZWlyIHRpbWUgdG8gdGhlIGNodXJjaCwgYW5kIHRoaXMgd2FzIGEgdmljYXIgd2hvIGJlZW4gdGhlcmUgZm9yIGFib3V0IDUgeWVhcnMgYnkgbm93Li4gCkhvdyBUbyBTdG9wIFdhbnRpbmcgVG8gU2xhcCBZb3VyIFNpc3RlciBJbiBMYXcKV2FzIGF0IGxlYXN0IDIwIHllYXJzIGFnby4uIApTdGFydCBvZiB0aGUgY2xpbWIgaGUgaGFzIGl0IGFyb3VuZCBoaXMgd2Fpc3QuCkZpY2hhcyBmYWxzYXNwb3IgMTAwLjAwMCBwdW50b3MgZW4gZWwgRGVlcCBTdGFjayBQcm8gUmV3aW5kZW4gZWwgQ2FzaW5vIGRlIENhbXBpb25lIGVuIEl0YWxpYQpJIHVzZWQgdG8gbGl2ZSBpbiBhIHRvd25ob3VzZSBhbmQgaSB3aGl0ZS4gClRoZSBjb21tdW5pdHkgd291bGQgdGhlbiBhbGxvdyB0aGUgUlNMIEJvd2xpbmcgQ2x1YiB0byBvcGVyYXRlIGZyb20gdGhlc2UgcHJlbWlzZXMuICAgQ1IuIEdBUlkgUE9JREVWSU4sIENvcm93YS4gCiJJbnRlcm5ldCBjb21tdW5pY2F0aW9ucyBhbmQgYnVzaW5lc3MgaXMgYSBtYXNzaXZlIGFuZCByYXBpZGx5IG1vdmluZyBwYXJ0IG9mIG91ciBjdWx0dXJlLCIgc2FpZCBKZXJyeSBSZWVkLCBkaXJlY3RvciBvZiB0aGUgTWFpbmUgQnVyZWF1IG9mIExvdHRlcnkgT3BlcmF0aW9ucy4gIlN0YXRlcyBhcmUgc3RhcnRpbmcgdG8gYWN0aXZlbHkgcHVyc3VlIEludGVybmV0IHNhbGVzLiIKV2hlbiB0aGV5IGxvc2UgdGhlaXIgdGVldGggYW5kIGhhdmUgdG8gZ2V0IGEgZGVudHVyZSBpdCBpc24ndCBlYXN5IHRvIGFkanVzdCB0byBhbmQgbWFueSBwYXRpZW50cyBmaW5kIHRoYXQgdGhleSBjYW4ndCBlYXQgd2VsbCBhbnltb3JlIHdoaWNoIGxlYWRzIHRvIG1hbG51dHJpdGlvbiB3aGljaCBhZGRzIHRvIHRoZWlyIGFscmVhZHkgZGVjbGluaW5nIGhlYWx0aC4gClRoZSBvbmx5IHJlYXNvbiB3aHkgY29tcGFuaWVzIGFyZW4gdGhyb3dpbmcgdGhlbXNlbHZlcyBhdCBDaGluYSBpcyBiZWNhdXNlIG9mIHRoZSBleHRyZW1lIHByb3RlY3Rpb25pc20gZW5mb3JjZWQgYnkgdGhlIENDUC4uIApGYW1pbHkgbWVtYmVycyBoYW5kZWQgamFpbCB0aW1lIGZvciAxMgpQbGVkZ2UgYWxsZWdpYW5jZSB0byB0aGUgRmxhZyBvZiB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhLCBhbmQgdG8gdGhlIFJlcHVibGljIGZvciB3aGljaCBpdCBzdGFuZHMsIG9uZSBuYXRpb24sIHVuZGVyIEdvZCwgaW5kaXZpc2libGUsIHdpdGggbGliZXJ0eSBhbmQganVzdGljZSBmb3IgYWxsLiBXb3JkcyAidW5kZXIgR29kIiB3ZXJlIGFkZGVkIGFmdGVyIGRpbGlnZW50IHByb3NlY3V0aW9uIG9mIHJlbGlnaW91cyBhbmQgcG9saXRpY2FsIGludGVyZXN0cyBieSB0aGUgUm9tYW4gQ2F0aG9saWMgb3JnYW5pemF0aW9uLCB0aGUgS25pZ2h0cyBvZiBDb2x1bWJ1cywgdG8gaGVscCBmaWdodCB0aGUgQ29tbXVuaXN0cy4gVGhlIGNoYW5nZSB3YXMgYXBwcm92ZWQgb24gRmxhZyBEYXksIEp1bmUgMTQsIDE5NTQsIGF0IHdoaWNoIHRpbWUgUHJlc2lkZW50IER3aWdodCBFaXNlbmhvd2VyIHJlbWFya2VkOiAiSW4gdGhpcyB3YXkgd2UgYXJlIHJlYWZmaXJtaW5nIHRoZSB0cmFuc2NlbmRlbmNlIG9mIHJlbGlnaW91cyBmYWl0aCBpbiBBbWVyaWNhIGhlcml0YWdlIGFuZCBmdXR1cmU7IGluIHRoaXMgd2F5IHdlIHNoYWxsIGNvbnN0YW50bHkgc3RyZW5ndGhlbiB0aG9zZSBzcGlyaXR1YWwgd2VhcG9ucyB3aGljaCBmb3JldmVyIHdpbGwgYmUgb3VyIGNvdW50cnkgbW9zdCBwb3dlcmZ1bCByZXNvdXJjZSBpbiBwZWFjZSBhbmQgd2FyLiIuIApJIGRpZG4ndCBmb2xsb3cgdGhlICJtYW5vc3BoZXJlIiB1bnRpbCBhYm91dCBhIHllYXIgYWdvLiAKVGhlIEhvcnNlIHBlcnNvbiBoYXMgbWFueSBmb2xsb3dlcnMgYnV0IHRoZXkgYXJlIG5vdCBhbHdheXMgcmVjZXB0aXZlIHRvIG90aGVyIHBvaW50cyBvZiB2aWV3LiAKVGhlIG5leHQgbW9ybmluZyB0aGUgbXVzbGluIGNhbiBlaXRoZXIgYmUgdGhyb3duIGF3YXkgd2l0aCB0aGUgZmxvd2VycyBpbiBpdCwgb3Igcmluc2VkIGFuZCB3YXNoZWQgZm9yIHVzZSBhZ2Fpbi4gSW4gZWl0aGVyIGNhc2UsIHBvdXIgdGhlIG9pbCBpbnRvIGFzIG1hbnkgZHJvcHBlciBib3R0bGVzIGFzIHlvdSBoYXZlLCBhbmQgdGhlbiBpbnRvIHRoZSBzdG9yYWdlIGJvdHRsZSBpZiB0aGVyZSBpcyBhbnkgb3Zlci4gVGhlIHN0b3JhZ2UgYm90dGxlIHNob3VsZCBiZSBkYXJrIHRvIGtlZXAgdGhlIGxpZ2h0IG91dCwgb3Iga2VwdCBpbiB0aGUgZGFyayBpZiBjbGVhci4uIApUaGV5IG1ha2UgbW9yZSBub2lzZSBhdCBuaWdodCwgaGF2ZSBwYXJ0aWVzLCBkcml2ZSB0b28gZmFzdCBkb3duIHJlc2lkZW50aWFsIHN0cmVldHMsIGRvbnQgbW93IHRoZWlyIGxhd24gYXMgb2Z0ZW4sIHRoZSBsYW5kc2NhcGluZyBpc24gYXMgbmljZSwgZXRjLiBUaGV5IGRyaXZlIGRvd24gdGhlIHByb3BlcnR5IHZhbHVlIG9mIHRoZSBzaW5nbGUgZmFtaWx5IGhvbWVzIG5leHQgdG8sIGFjcm9zcyBmcm9tLCBhbmQgYmVoaW5kIHRoZW0ganVzdCBieSBleGlzdGluZy4gVGhlIGNpdHkgb3duZWQgdGhlIGxhbmQgZmlyc3QsIHRoZXkgY2FuIG1ha2Ugd2hhdGV2ZXIgcnVsZXMgdGhleSB3YW50LiAKQWxsLCB0aGUgYmFua3MgZ290IGJpbGxpb25zIG9mIGRvbGxhcnMgaW4gdmVyeSBsb3cgaW50ZXJlc3QgbG9hbnMgdGhhdCB0aGV5IHRoZW4gdHVybmVkIGFyb3VuZCBhbmQgbGVudCBiYWNrIHRvIHRheCBwYXllcnMgYXQgaGlnaCBpbnRlcmVzdCByYXRlcyAgb24gY3JlZGl0IGNhcmRzLCBob21lIGxvYW5zLCBldGMuICBhbGwgdGhlIHdoaWxlIHJlZnVzaW5nIHRvIHJld2FyZCB1cyBmb3Igc2F2aW5nIG1vbmV5IGJ5IGtlZXBpbmcgdGhlIGludGVyZXN0IHJhdGVzIHRoZXkgd2lsbGluZyB0byBwYXkgb24gc2F2aW5ncyBhY2NvdW50cyBhbmQgQ0RzIGF0IGEgbGl0dGxlIG92ZXIgMSVTYWRseSwgYmVjYXVzZSBvdXIgZ292ZXJubWVudCBnZW5lcmFsbHkgbGVnaXNsYXRpb24gdG8gcGxlYXNlIHRoZSBoaWdoZXN0IGJpZGRlciwgV2FsbCBTdHJlZXQgaXMgY3VycmVudGx5IHNwZW5kaW5nIGVub3VnaCBtb25leSBvbiBsb2JieWluZyBDb25ncmVzcyB0byBraWxsIGFueSBhbmQgYWxsIGJhbmtpbmcgcmVmb3JtLiAKVmFzZXMgd2VyZSBub3cgcGFpbnRlZCBieSBjb3ZlcmluZyB0aGUgd2hvbGUgdmFzZSBpbiBibGFjayB3aGlsZSBsZWF2aW5nIG91dCBzaWxob3VldHRlcyBvZiBmaWd1cmVzLCB3aGljaCB0aGVuIGFwcGVhciBpbiB0aGUgY29sb3VyIG9mIHRoZSBjbGF5LiBEZXRhaWxzIHdlcmUgcGFpbnRlZCBpbiBibGFjayByYXRoZXIgdGhhbiBiZWluZyBpbmNpc2VkIGludG8gdGhlIGNsYXksIHdoaWNoIGFsbG93ZWQgbW9yZSBkZXRhaWxlZCBwaWN0dXJlcyBpbiB0aGUgc28gY2FsbGVkICdSZWQgRmlndXJlIFBhaW50aW5ncycuIFZlcnkgcmVhbGlzdGljIHBpY3R1cmVzIHdlcmUgYWxzbyBwYWludGVkIG9uIHdvb2RlbiBwYW5lbHMuIApUaGVyZSBhcmUgbWFueSBvbmxpbmUgdmlkZW8gcG9rZXIgdmFyaWFudHMsIHNvZnR3YXJlIHByb3ZpZGVycyB0aGF0IHN1cHBseSB0aGVtIGFuZCBjYXNpbm9zIHRoYXQgb2ZmZXIgdGhlbS4gCiAyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvWXVjY2EgYW5kIEZpYmVyb3VzIGRvIHJlc3Bhd24sIEkgcmVhZCBvbiB0aGVpciB0cmVsbG8gcGFnZSB0aGF0IHRoZXkgZG8gd2FudCB0byBhZGQgYW5pbWFsIHBlbnMgYW5kIG1vcmUgc2VhIGxpZmUsIGlmIHlvdSBidWlsZCBhIGZhcm0gdGhlIG1lZGljaW5hbCBwbGFudHMgcmVncm93IGFzIGxvbmcgYXMgeW91IGtlZXAgdGhlbSB3YXRlcmVkLiBCaXJkcyBhbmQgQmF0cyBhcmUga2lsbGFibGUsIHRob3VnaCBhbGwgeW91IGN1cnJlbnRseSBnZXQgZnJvbSB0aGVtIGlzIG1lYXQgKGFuZCBsZWF0aGVyIGZyb20gYmF0cyBpIGJlbGlldmUpLiAKRmlyc3QgUGllIGd1eSBDaHJpcyBLbGVpbiBhbmQgS2F0aWUgSG9sbWVzIGRlY2lkZWQgdG8gY2FsbCBvZmYgdGhlaXIgZW5nYWdlbWVudCBpbiBGZWJydWFyeSAod2UndmUgaGVhcmQgdGhhdCBzaGUncyBzaW5jZSByZWJvdW5kZWQgd2l0aCBzb21lIG90aGVyIGFjdG9yIGZlbGxvdykuClJlY2VudCBTcG9ydHMgQXJ0aWNsZXMgUmVzdWx0cyA0ODAxCkp1c3QgZHJhdyB0aGUgc21pbGV5IGZhY2Ugb24gYSBicm93biBwYXBlciBiYWcsIHBsYWNlIGl0IG92ZXIgaGVyIGhlYWQsIGFuZCBmdWNrIGF3YXkgd2hpbGUga2VlcGluZyB5b3VyIGNvbXBvc3VyZSBhbmQgcGllY2Ugb2YgbWluZC4gCldoaXRlIEFtZXJpY2EgaXMgYmVpbmcgaGl0IGhhcmQgd2l0aCBoZXJvaW4gYW5kIHRoYXQgaXMgYSBjcmltZS4gQnV0IHRoZSBkaWZmZXJlbmNlIGlzIHdoaXRlIEFtZXJpY2FucyBhcmVuJ3QgYXMgaGVhdmlseSBwb2xpY2VkLiAKSXQgaXMgbGlrZWx5IHRoYXQgeW91IHdpbGwgYmUgYWJsZSB0byBkaXNjb3ZlciB0aGUgc2FtZSB0eXBlcyBvZiBkZWFscyEuIApBbnhpZXR5IChmZWFyKSB3YXMgbWVhc3VyZWQgdXNpbmcgUHJvY2VkdXJhbCBCZWhhdmlvdXIgUmF0aW5nIFNjYWxlLCBudXJzZSByYXRlZCBhbnhpZXR5IHJhdGluZywgcGFpbiBhbmQgZmVhciBhc3Nlc3NtZW50LCBhbmQgcHVsc2UgYW5kIHRlbXBlcmF0dXJlIHJlYWRpbmdzLiBUaGUgNSBjYXRlZ29yeSwgMTQgcXVlc3Rpb24gcmF0aW5nIHNjYWxlIGFzc2Vzc2VkIHJhbmRvbWlzYXRpb24sIGJpYXMgaW4gdHJlYXRtZW50IGFzc2lnbm1lbnQsIGNyaXRlcmlhIGZvciBtZWFzdXJpbmcgb3V0Y29tZXMsIGJsaW5kaW5nLCBpbmNsdXNpb24vZXhjbHVzaW9uIGNyaXRlcmlhLCBudW1iZXIgb2YgZXhjbHVkZWQgcGF0aWVudHMsIHN1ZmZpY2llbnQgZGVzY3JpcHRpb24gb2YgdGhlcmFwZXV0aWMgcmVnaW1lbiBmb3IgY29udHJvbCBhbmQgdHJlYXRtZW50IGdyb3VwcywgYW5kIHF1YWxpdHkgb2YgdGhlIHN0YXRpc3RpY2FsIGFuYWx5c2lzLiBEYXRhIHdlcmUgZXh0cmFjdGVkIGZvciB0aGUgY2F0ZWdvcmllcyBvZiBzdHVkeSBpZGVudGlmaWNhdGlvbiwgc3R1ZHkgZGVzaWduLCBzYW1wbGUgY2hhcmFjdGVyaXN0aWNzLCBvdXRjb21lIG1lYXN1cmVzLCByZXN1bHRzIGFuZCBjb21tZW50cy5NZXRob2RzIG9mIHN5bnRoZXNpc0hvdyB3ZXJlIHRoZSBzdHVkaWVzIGNvbWJpbmVkP1RoZSBzdHVkaWVzIHdlcmUgY29tYmluZWQgdXNpbmcgYSBxdWFsaXRhdGl2ZSBuYXJyYXRpdmUgc3ludGhlc2lzLlJlc3VsdHMgb2YgdGhlIHJldmlld09uZSBSQ1QgZm9yIGFjdXB1bmN0dXJlICgxNiBwYXRpZW50cyksIDEgUkNUIGZvciBtYXNzYWdlIHRoZXJhcHkgKDI4IHBhdGllbnRzKSwgYW5kIDYgUkNUcyBmb3IgaHlwbm9zaXMgKDI4MiBwYXRpZW50cykuIApIb3cgUGF0cmlvdHMgb3duZXIgUm9iZXJ0IEtyYWZ0IGNvdWxkIGdldCBvZmYgaW4gcHJvc3RpdHV0aW9uIGNhc2UKV2Ugd2VyZSBoYXZpbmcgYSBob3VzZSB3YXJtaW5nIHBhcnR5IGZvciBvdXIgc29uIFJ5YW4gYW5kIGhpcyB3aWZlIFN0YWN5IHdoZW4gd2UgYnJvdWdodCB0aGUgY2FrZSBpbiBhbmQgd2VsbCBpdCBlbmRlZCB1cCBvbiB0b3Agb2Ygb3VyIEJsdWUgUG9rZXIgVGFibGUgRmVsdCBDbG90aC4gCkdldCB0aGUgdGFsa3MgYmFjayBvbiB0cmFjayBpbiBTb3V0aCBBZnJpY2EsIEFmcmljYW4gY2l2aWwgc29jaWV0eSBpcyBjYWxsaW5nIG9uIHRoZSBTb3V0aCBBZnJpY2FuIEdvdmVybm1lbnQgdG8gaGF2ZSBhbiBvcGVuLCBkZW1vY3JhdGljIGFuZCBhY2NvdW50YWJsZSBwcm9jZXNzLCBNYXluYXJkIHNhaWQuIFRoYXQgbWVhbnMgc2F5aW5nIHdoZW4sIHdoZXJlIGFuZCB3aG8gdGhleSBhcmUgbWVldGluZyBhbmQgaG93IHRoZXkgd2lsbCBsZXQgdGhlIHBlb3BsZSBhY3R1YWxseSBpbXBhY3RlZCBieSBjbGltYXRlIGNoYW5nZSBoYXZlIHRoZWlyIHNheS4uIApBIHdvbWFuIHdobyBtb3ZlcyBzbG93bHkgYW5kIGRlY2lzaXZlbHkgaGFzIGJlY29tZSBhIHJhcml0eS4gCihzaGUgdXNlZCB0aGUgc2FtZSBwaG9uZSBudW1iZXIgZm9yIGV2ZXJ5dGhpbmcgbG9sKS4gClNlY29uZCB0aGUgcGxheWVycyBwbGF5aW5nIGp1c3QgdG8gc3RheSBhIGxpdHRsZSBsb25nZXIgdG8gZ2V0IGEgaGlnaGVyIHBheW91dC4gCihub3QgdGhhdCBNYW5uIGhhZCBub3QgYWxyZWFkeSBjb3JydXB0ZWQgdGhlIHN0dWR5IGZvciB0aGUgc2FtZSByZWFzb25zKSBUaGUgY2hhcnQgd2FzIGFic29sdXRlIGdhcmJhZ2UuIApGaXJzdCwgbGV0IGdldCBzaW5nbGUgdGFyZ2V0IGhhbmRsZWQuIFNpbSBwYXJhbXMgd2lsbCBiZSBQYXRjaHdlcmssIDUgbWlucy4gUGljayB5b3VyIHRvcCBTaW5nbGUgdGFyZ2V0IHRhbGVudHMsIGRvbiBwaWNrIGFueSBhZGRpdGlvbmFsIHRhbGVudHMuIFBpY2sgYWxsIGNvbXBldGl0aXZlIGdlYXIvYXplcml0ZSB0aGF0IHlvdSBjYW4gZml0LiBCZSBnZW50bGUgb24gdHJpbmtldHMvcmluZ3MgdG8gc3RhcnQuIFVzdWFsbHkgeW91IGtub3cgaWYgY2VydGFpbiBzdGF0cyBhcmUgbW9zdCBsaWtlbHkgbm90IGdvb2QgZm9yIHlvdXIgc3BlYy4gRG8gbm90IHJ1biB3aXRoIG11bHRpcGxlIGVuY2hhbnRzL2dlbXMgc2VsZWN0ZWQsIHBpY2sgMSB0aGF0IHlvdSB0aGluayBpcyBvcHRpbWFsLgpGYXN0IGZvcndhcmQgc2V2ZXJhbCBkZWNhZGVzIGFuZCBBcm5vbGQgc3RpbGwgd2FybWVkIGhpcyBoZWFydCB3aXRoIHRoZSBlbWJlcnMgb2YgdGhvc2UgbWVtb3JpZXMuIEhlIHJlYWQgd2hhdGV2ZXIgaGUgY291bGQgZmluZCBhYm91dCBibGFja3NtaXRoaW5nIGFuZCBwaWNrZWQgdXAgYSBmZXcgdG9vbHMgICBidXQgaG93J3MgYSBtb2Rlcm4gcGVyc29uIHRvIGxlYXJuIHN1Y2ggYW4gYW5jaWVudCBhbmQgbW9zdGx5IGV4dGluY3QgdHJhZGU/ClNvIGZhciwgUGZpemVyIGhhcyBzaWduZWQgZm9yIDgwMCwwMDAgc3F1YXJlIGZlZXQgb24gdGhlIHNldmVudGggdGhyb3VnaCAyMXN0IGZsb29ycyBvZiB0aGUgNjUgc3RvcnkgdG93ZXIsIHdoaWNoIHdpbGwgcmlzZSB0byAxLDAzMSBmZWV0Li4gClRoYXQuIEl0IGJlZW4gZWlnaHQgeWVhcnMgc2luY2UgdGhlIGxhc3QgYm9vaywgcHJvYmFibHkgdGVuIHllYXJzIHNpbmNlIEkgcmVhZCBBIEdhbWUgb2YgVGhyb25lcy4gClRoYXQgdGhlIGxlc3NvbiBDb3JiIEx1bmQgaGFzIGxlYXJuZWQgbGF0ZWx5LiAKSnVzdCB0cnkgYWdhaW4gdGhlIG5leHQgdGltZSBhbmQgaG9wZSBmb3IgYSBtb3JlIHBvc2l0aXZlIHJlYWN0aW9uLi4gCldlIHRha2UgbG9uZyB3YWxrcyBldmVyeSBmcmVlIHBlcmlvZCB3ZSBzaGFyZWQsIHN0YXllZCBhZnRlcmNob29sIHdoZW4gd2UgY291bGQgZm9yIGhpbSB0byBsYXRlciB3YWxrIG1lIGhvbWUsIGFuZCBmZWxsIGFzbGVlcCB0byBlYWNoIG90aGVyIG9uIFNreXBlLiAKQW1hdGV1ciBzb3V0aHBhdyBoZXJlLCBteSBjb2FjaCBoYXMgYmVlbiByaWRpbmcgbXkgYXNzIHJlY2VudGx5IGZvciBpdCBteXNlbGYsIGlkayBpZiBpdCBhIHNvdXRocGF3IHRlbmRhbmN5IG9yIGlmIEkganVzdCBoYXZlIHRoZSBzYW1lIGlzc3VlLCBidXQgaGF2aW5nIGEgc3Ryb25nIGd1YXJkIHRlbmRzIHRvIGNhdXNlIHlvdSB0byBqdXN0IG1vdmUgaW4gb24geW91ciBvcHBvbmVudCB3aXRob3V0IG1vdmluZyB0b28gbXVjaCBvZmYgdG8gdGhlIHNpZGVzLiBTdHJhaWdodCBsaW5pbmcgZm9yIHRoZWlyIG5vc2UgaXMgd2hhdCBoZSBzYXlzIGxvbC4KSXQgc291bmRzIGxpa2Ugc2hlIHBsYWNlcyBhIGxvdCBvZiBoZXIgdmFsdWUgb24gaGVyIG1vbmV5IGFuZCB0aGF0J3MgbW9zdCBsaWtlbHkgd2hhdCdzIGltcG9ydGFudCB0byBoZXIuIFRoYXQgZG9lc24ndCBtZWFuIGl0J3MgcmlnaHQgb3Igd3JvbmcsIGl0J3MganVzdCBkaWZmZXJlbnQgZnJvbSB3aGF0IHlvdSB2YWx1ZS4uIApIYXZlIHlvdSBldmVyIGJlZW4gaW50byBhIHN0cmlwIG1hbGwgZG9sbGFyIHN0b3JlIHdoZXJlIHRoZSBraWQgYmVoaW5kIHRoZSBjb3VudGVyIERJRE4nVCB0cnkgdG8gc2VsbCB5b3UgYSB0YW5rIG9mIE5pdHJvdXMgT3hpZGUgdGhhdCdzIHN1cHBvc2VkIHRvIGJlIHVzZWQgZm9yIGhlbGl1bSBiYWxsb29ucz8gTWUgbmVpdGhlci4KTmFlcG8gR3JlZW4gRW5lcmd5IHdhcyBlc3RhYmxpc2hlZCBpbiBNYXkgMjAxNCB0byBidWlsZCBhbiBTUkYgcGxhbnQgYW5kIGEgbGlxdWVmaWVkIG5hdHVyYWwgZ2FzIChMTkcpIHBsYW50IGluIE5hZXBvIE5ldyBDaXR5LgpNYW5hZ2VkIHRvIGZpbmlzaCB1cCBteSB0cmlwLCBza2lwcGluZyBhIGJ1bmNoIG9mIGFpc2xlcywgbGVhbmluZyBvbiB0aGUgY2FydCB0aGUgd2hvbGUgd2F5LCBqdXN0IGZlZWxpbmcgbGlrZSBJIHdhcyBpbiBhIGZvZy4gCkluIHBhcnQgYmVjYXVzZSBDVywgSSBiZWxpZXZlIGlzIGluY2FwYWJsZSBvZiB0ZWxsaW5nIHRoZSB3aG9sZSB0cnV0aC4gQnV0IG1vc3RseSBiZWNhdXNlIHRoaXMganVzdCBpc24ndCBzb21ldGhpbmcgbW9zdCBwZW9wbGUgd291bGQgZG8uIApDcml0aWNzIGhhdmUgc2FpZCB0aGF0IHF1ZXN0aW9ucyByZW1haW4gYWJvdXQgaG93IHRoZSB0cnVzdCB3b3VsZCB3b3JrIGFuZCB0aGUgcHJvamVjdCBpdHNlbGYgY29udGludWVzIHRvIGF0dHJhY3QgY29uY2VybnMgb3ZlciBTaWRld2FsaydzIGludGVuZGVkIHNjb3BlIGFuZCBpdHMgaG9wZSB0byBwYXkgZm9yIHRyYW5zaXQgYW5kIHVuZGVyZ3JvdW5kIGluZnJhc3RydWN0dXJlIGluIHJldHVybiBmb3IgYSBjdXQgb2YgZGV2ZWxvcGVyIGZlZXMgYW5kIHByb3BlcnR5IHRheGVzLgpOb3cgdGhhdCB3ZSd2ZSBjb3ZlcmVkIHRoZSBiYXNpY3MsIGl0IGlzIGltcG9ydGFudCB0byBkaXNjdXNzIHdoYXQgdG8gZG8gYWZ0ZXIgdGhlIGNhcmRzIGFyZSBkZWFsdC4gSW4gdGhlIG5leHQgc2VjdGlvbiB3ZSB3aWxsIGRpc2N1c3Mgb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBhc3BlY3RzIG9mIGFueSBwb2tlciBnYW1lOiBzdGFydGluZyBoYW5kIHNlbGVjdGlvbi4gV2hhdCBjYXJkcyBzaG91bGQgeW91IHBsYXkgYW5kIHdoaWNoIHNob3VsZCB5b3UgZm9sZD8KSSBzZWVuIGxhdWdoaW5nLCBjcnlpbmcsIGFuZ2VyLiAKSW4gdGVybXMgb2YgcmVhbCB3b3JsZCBhcHBsaWNhdGlvbiBvdXRzaWRlIG9mIHRoZWF0ZXIsIGl0IGlzIGFuIGV4Y2VsbGVudCB0byBiZSBhYmxlIHRvIHN1cHBsZW1lbnQgdGhlIG1lYWdlciBlYXJuaW5ncyBvZiBhIGZyZWVsYW5jZSB0aGVhdGVyIGFydGlzdCBieSB3b3JraW5nIGFsc28gYXMgYSBkcmFmdHNtYW4uIApBbmQgbm8sIGhlIGRpZG4gdm90ZSBhZ2FpbnN0IHRoZSBSdXNzaWFuIHNhbmN0aW9ucyBiZWNhdXNlIHRoZXkgd2VyZSB0aWVkIHdpdGggSXJhbi4gCkFsdGhvdWdoIENlcmVicmFsIEltYWdpbmcgcmVzdCBpbiBwZWFjZSB3aWxsIHNvb24gYmUgYmFubmVkLCBpdCdzIGFuIEhCIElEIHRoYXQgcmVhbGx5IHVubG9ja3MgdGhlIGlkaW90aWMgZnVuIG9mIHRoZSBjb3JwIHNpZGUgb2YgTmV0cnVubmVyLiBIYXZpbmcgMTUrIGNhcmRzIGluIGhhbmQgYW5kIHRha2luZyAxMCBjbGljayB0dXJucyBjYW4gZ2l2ZSBhIGtpbmQgb2YgQW5hcmNoLCBJREdBRiBmZWVsIHRvIHBsYXlpbmcgY29ycC4gSXQgY2FuIGJlIGEgYmxhc3QsIGFuZCBJJ2QgZ2l2ZSBhbnkgQ0kgZGVjayBhIHRyeSBpZiB5b3UgaGF2ZW4ndC4gVGhlIElEJ3MgZGVja3MgY29tZSBpbiBhIGJ1bmNoIG9mIGZsYXZvcnMsIGJ1dCB0aGUgZmFzdCBhZHZhbmNlIGFuZCBraWxsIGRlY2tzIGFyZSB0aGUgbW9zdCByaW90b3VzOyBqdXN0IHNlYXJjaCBhcm91bmQgTmV0cnVubmVyREIgYW5kIHlvdSdsbCBzdHVtYmxlIHVwb24gYSB3aG9sZSBidW5jaC4KT25jZSB0aGVpciBlc3NlbnRpYWwgb2lscyBmYWlsIGFuZCB0aGVpciBjcnlzdGFscyBhcmUgcnViYmVkIHNtb290aCBhbmQgbGl0dGxlIEJpbGx5IGlzIGFib3V0IHRvIGdldCBzaHVmZmxlZCBmcm9tIHRoZSBtb3J0YWwgY29pbCwgdGhleSBydXNoIHRvIHRoZSBkb2N0b3JzIGJlY2F1c2UgdGhleSB0aGUgZXhwZXJ0cyBhbmQgbGV0IHRoZW0gdXRpbGl6ZSB3aGF0IG1vZGVybiBtZWRpY2luZSBoYXMgdG8gb2ZmZXIuIApXZW5uIGRpZSBkcml0dGxldHp0ZSBNIGVpbmUgbGkgTSBpc3QgdW5kIGRpZSB2b3JsZXR6dGUgZWluZSByZSBNIGlzdCwgYmVpZGUgTSBsaW5rcyB6dXNhbW1lbnN0cmlja2VuLi4gCihQcml2YWN5IFBvbGljeSlGZWF0dXJlc0dvb2dsZSBDdXN0b20gU2VhcmNoVGhpcyBpcyBmZWF0dXJlIGFsbG93cyB5b3UgdG8gc2VhcmNoIHRoZSBzaXRlLiAKIldoZXRoZXIgd2UncmUgaW52b2x2ZWQgaW4gbXVzaWMgZmVzdGl2YWxzIG9yIHB1cmNoYXNpbmcgbmV3IG11c2ljIGVxdWlwbWVudCBmb3Igc2Nob29scywgb3VyIGdvYWwgaXMgdGhlIHNhbWUgICB0byBpZGVudGlmeSBhbmQgc3VwcG9ydCBlbWVyZ2luZyBhcnRpc3RzLCIgc2FpZCBOYW5jeSBJbm91eWUsIG5hdGlvbmFsIG1lZGlhIG1hbmFnZXIsIFRveW90YSwgaW4gYW4gZW1haWwuICJCZWluZyB0aGUgZXhjbHVzaXZlIGF1dG9tb3RpdmUgcGFydG5lciBvZiAnVGhlIFZvaWNlJyBpcyBhbiBhbWF6aW5nIHdheSBmb3IgVG95b3RhIHRvIHVuY292ZXIgYnVkZGluZyBtdXNpYyB0YWxlbnQuIi4gClRoZXJlIGlzIGRlZmluaXRlbHkgYSBsb3QgZ29pbmcgb24gaW4gaGltIGFuZCBoaXMgbGlmZS4gSXQgdG9vayBhIGxvdCBvZiB3b3JrIHRvIGZpZ3VyZSBvdXQgd2hhdCBoaXMgY3VycmVuY3kgaXMuIEhlIGp1c3Qgd2FudHMgdG8gYmUgaGVhcmQuIApIZSBoYWQgYmVlbiBvbiBoaXMgcGhvbmUgdGhlIHdob2xlIHRpbWUsIHNvIEkgdG9sZCB0aGUgZGVhbGVyLCBjb250cm9sIHRoZSBnYW1lLiBIZSBkaWRuIGtub3cgdGhhdCBpcyB3YXMgdGhlIGRlYWxlciByZXNwb25zaWJpbGl0eSB0byBjb250cm9sIHRoZSBnYW1lLiAKTWFpcyBqIGwgZGUgbGEgcGVuc2UsIGplIG5lIHN1aXMgcGFzIHVuIG5hdGlmIGRlcyBWZXJzZWF1eCBwb3VyIHJpZW4hLiAKTGlzdCBtYWtpbmcgYWx3YXlzIGNhbG1lZCBtZSBkb3duIGlmIEkgZmVsdCBsaWtlIEkgd2FzIG92ZXJsb2FkZWQgYW5kIGRyb3duaW5nLi4gClVud2luZCBhcyBhIGNvdXBsZSBhcyB5b3UgbGVhcm4gVGhhaSBtYXNzYWdlIHRlY2huaXF1ZXMgYXQgTWFtYSdzIFdlbGxuZXNzIEpvaW50LiAKRmVybmFuZGV6IHdhcyBhY2N1c2VkIG9mIGhlbHBpbmcgYSBob3RlbCBjb21wYW55IHdpdGggcGVybWl0dGluZyBwcm9ibGVtcyBhbmQgcmVjZWl2aW5nIGZyZWUgYWNjb21tb2RhdGlvbnMuIE9ydGl6IGFja25vd2xlZGdlZCBpbiB0aGUgc2V0dGxlbWVudCwga25vd24gYXMgYSBzdGlwdWxhdGlvbiwgdGhhdCBiZWxpZXZpbmcgaGVyIGh1c2JhbmQgd2FzIGFwcHJvcHJpYXRlbHkgbWFuYWdpbmcgdGhlIGhvdXNlaG9sZCBmaW5hbmNlcywgc2hlIGZhaWxlZCB0byB0YWtlIHJlYXNvbmFibGUgc3RlcHMgdG8gc3RheSBhcHByaXNlZCBvZiBoZXIgZmluYW5jaWFsIGNpcmN1bXN0YW5jZXMsIGluY2x1ZGluZyBmYWlsaW5nIHRvIG1ha2Ugc3BlY2lmaWMgaW5xdWlyeSBpbnRvIGhvdyB0aGUgdHJpcHMgd2VyZSBwYWlkIGZvci4KV2UgaGFkIGRlZXAgc25vdyBvbiB0aGUgbWFpbiBza2kgdHJhaWxzIG92ZXIgdGhlIHdlZWtlbmQgYWxvbmcgd2l0aCBzb21lIGFkZGl0aW9uYWwgc25vdyB5ZXN0ZXJkYXkuIFRoZSBtYWluIHRyYWlscyB3ZXJlIGdyb29tZWQgYW5kIHRyYWNrIHNldCB0aGlzIG1vcm5pbmcgc28gd2UgaGF2ZSBncmVhdCBjb25kaXRpb25zIGZvciBza2llcnMgYW5kIHNub3dzaG9lcnMuIEF0IHRoaXMgcG9pbnQgd2UgaGF2ZSBhIGdvb2QgYmFzZSB3aGljaCBzaG91bGQgZ2l2ZSB1cyBleGNlbGxlbnQgY29uZGl0aW9ucyBmb3IgdGhlIFRvdXJhdGhvbiBvbiBGZWJydWFyeSAyOC4KIldhbm4gaGF0dGVuIHNpZSB6dW0gbGV0enRlbiBNYWhsIEdlc2NobGVjaHRzdmVya2Vocj8iLiBIZWxlbiB6Z2VydGUsIHdpZSBwZWlubGljaCEgIlZvciwgaGVtLCB2b3IgLiAuIC4gZXR3YSAzIFdvY2hlbiIuIERhcyB3YXIgZWhybGljaC4gU2llIHdhciBkaWUgbGV0enRlIFplaXQgc28ga3JpYmJlbGlnIGdld2VzZW4gd2VnZW4gZGllc2VzIFRlcm1pbnMsIHNpZSBoYXR0ZSBlcyBnZXNjaGlja3QgZWluenVyaWNodGVuIGdld3Vzc3QsIGRhc3MgaW1tZXIgZGFubiwgd2VubiBkZXIgTW9tZW50IGRhIGdld2VzZW4gd3JlLCBkYXNzIGlociBNYW5uIGh0dGUgenUgaWhyIGtvbW1lbiBrbm5lbiwgc2llIGdyYWQgbmljaHQgZGEgd2FyLCBpcmdlbmRldHdhcyBkYXp3aXNjaGVuIGthbSwgc2llIGhhdHRlIGVpbmZhY2gga2VpbmUgTHVzdCBhdWYgaWhyZW4gTWFubiBnZWhhYnQuIEFiZXIgYXVmIHNpY2ggc2VsYnN0LCBvaCBqYSwgc2llIGhhdHRlIHNpY2ggdGdsaWNoIG1pdCBkaWVzZXIgRG9rdG9yc3BpZWwgRmFudGFzaWUgYmVzY2hmdGlndCwgd2FyIGRhdWVyZ2VpbCBnZXdlc2VuIHVuZCBoYXR0ZSBzaWNoIHRnbGljaCBiZWZyaWVkaWd0LCBtYW5jaG1hbCAyIE1hbCwgdW5kIGluIGRlbiBsZXR6dGVuIDIgVGFnZW4gc29nYXIgbm9jaCBtZWhyLgpOb3cgSSdtIGJhY2sgaW4gdGhlIFVTQSBhbmQgcGVvcGxlIGZpbmQgbWUgZ29yZ2VvdXMsIGFuZCB5b3Uga25vdyB3aGF0PyBJIGFtLiBCZWNhdXNlIEkgYW0gY29uZmlkZW50IGFuZCBpbnRlcmVzdGluZy4gQmVjYXVzZSBJIHJvY2sgYW5kIEkga25vdyBpdCwgYW5kIG90aGVyIHBlb3BsZSB0aGluayBzbyB0b28uCkV2ZW4geW91ciBob21lIGhhcyBpbXBvcnRhbnQgcmV0aXJlbWVudCBpbmNvbWUgcXVlc3Rpb25zLiAKU2NvdHQgRHVkZWsgcmVwbGllZC4uIApFYWNoIHllYXIsIEhvdXNlIG9mIENvbW1vbnMgQWRtaW5pc3RyYXRpb24gc2VsZWN0cyA0MCBzdHVkZW50cyBmcm9tIENFR0VQcyBhbmQgaGlnaCBzY2hvb2xzIGFjcm9zcyBDYW5hZGEgdG8gcGFydGljaXBhdGUgaW4gYSBkZWRpY2F0ZWQgUGFnZSBQcm9ncmFtICAgc3R1ZGVudHMgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gd2l0bmVzcyB0aGUgbGVnaXNsYXRpdmUgcHJvY2VzcyBmaXJzdGhhbmQgYW5kIHdvcmsgb24gYSBwYXJ0IHRpbWUgYmFzaXMgZHVyaW5nIHRoZWlyIGZpcnN0IHllYXIgb2Ygc3R1ZHkgYXQgYSB1bml2ZXJzaXR5IGluIHRoZSBOYXRpb25hbCBDYXBpdGFsIHJlZ2lvbgpBcyBSYWNoZWwsIGEgcHJvZmVzc29yIG9mIGVjb25vbWljcyBhbmQgZ2FtZSB0aGVvcnkgYXQgTmV3IFlvcmsgVW5pdmVyc2l0eSwgdGVsbHMgaGVyIHN0dWRlbnRzLCBrZXkgaXMgcGxheWluZyB0byB3aW4sIGluc3RlYWQgb2YgdHJ5aW5nIG5vdCB0byBsb3NlLiAKUG9saXNoIHByZWxhdGVzIGNvbnRpbnVlIHRvIHByZXNzIGZvciBPY3RvYmVyLCB0byBtYXJrIHRoZSAzNXRoIGFubml2ZXJzYXJ5IG9mIHRoZSBQb2xpc2ggYm9ybiBKb2huIFBhdWwncyBlbGVjdGlvbiwgYnV0IFZhdGljYW4gb2ZmaWNpYWxzIGhhdmUgc3VnZ2VzdGVkIHRoYXQncyB0b28gc29vbiB0byBvcmdhbml6ZSBzdWNoIGEgbWFzc2l2ZSBldmVudC4uIApKb2luIHRoZSB1bmRlcndhdGVyIHBhcnR5IHdpdGggQ29udGlraSBUb3Vycywgd2hvc2UgeWVhciByb3VuZCBmaXZlIGRheSBvcGVuIHdhdGVyIGNvdXJzZXMgYXJlIGdlYXJlZCB0b3dhcmRzIHNpbmdsZSB0cmF2ZWxlcnMuIApTaG9vdG91dCBHb2FsIExpZnRzIFZlZ2FzIFBhc3QgUGFudGhlcnMgNiA1TWFsY29sbSBTdWJiYW4gaGFzIDE3IGNhcmVlciB3aW5zIGluIHR3byBzZWFzb25zIHdpdGggdGhlIFZlZ2FzIEdvbGRlbiBLbmlnaHRzLiBGb3VyIG9mIHRob3NlIGhhdmUgYmVlbiBpbiBzaG9vdG91dHMsIGR1cmluZyB3aGljaCBoZSBuZXZlciBhbGxvd2VkIGEgZ29hbC4gQWlyIEZvcmNlIE1hc3RlciBTZ3QuIApIZSB3cm90ZSBudW1lcm91cyBib29rcyBhbmQgcGFwZXJzIG9uIHRoZSBjaGVtaXN0cnkgb2YgcGVyZnVtZSBhbmQgY29zbWV0aWNzLiAKSSB0aGluayBzYWZlIHJhbmdlZCBwaWNrcyBmb3IgbWlkIGFuZCBib3QsIGFuZCBqdXN0IGJ1cnlpbmcgdG9wIGxhbmUgaXMgdGhlIHdheSB0byBnby4gCkhhbmQgb3V0IHlvdXIgaW52aXRhdGlvbnMgY3V0IG91dCBpbnRvIHNoYXBlcyBvZiBoZWFydHMsIGRpYW1vbmRzLCBjbHVicyBhbmQgc3BhZGVzLiBZb3UgY2FuIGN1dCB0aGVzZSBvdXQgZnJvbSBjYXJkIG9yIHdyaXRlIHRoZW0gb24gYWN0dWFsIHBsYXlpbmcgY2FyZHMuCklmIHlvdSBzdGFydCBmZWVsaW5nIHNsdWdnaXNoLCB0aXJlZCwgY3Jhbmt5LCBzdXBlciBodW5ncnksIG9yIGxhemllciB0aGFuIHVzdWFsLCB0aG91Z2gsIHRoZXNlIGFyZSBzaWducyB0aGF0IHlvdXIgYm9keSBpcyB0cnlpbmcgdG8gc2xvdyB5b3UgZG93biB0byBjb21wZW5zYXRlIGZvciB0aGUgbG93ZXIgZW5lcmd5IGludGFrZSBhbmQgbWF5IGJlIGEgc2lnbiB0byBidW1wIHVwIHlvdXIgY2Fsb3JpZXMgYSB0b3VjaC4gMiBwb2ludHMgIHN1Ym1pdHRlZCAyOSBkYXlzIGFnby4gCkhhcHBlbmVkIHZlcnkgZmFzdC4gClRoZSBTdWl0ZWQgQmx1ZSBQb2tlciBUYWJsZSBDbG90aCBoYXMgdW5iZWxpZXZhYmxlIGFwcGVhbCwgYnV0IGl0IGlzIHRoZSBwYXR0ZXJuIHRoYXQgbWFrZXMgaXQgc3RhbmQgb3V0IG9uIHRoZSB0YWJsZS4gUGx1cywgdGhlIHBhcnRpY3VsYXIgYmx1ZSB0aGF0IGl0IHByb3ZpZGVzIGlzIG5vdCB0b28gYnJpZ2h0IG9yIGRhcmsuIEl0IGJhc2ljYWxseSBsZWF2ZXMgeW91IHdpdGggYSBwcm9mZXNzaW9uYWwgc3R5bGUgdGhhdCBsb29rcyBsaWtlIGl0IGNvdWxkIGJlIHNpdHRpbmcgaW4gYSByZWFsIGNhc2luby4gSW4gdGhlIHllYXJzIHRvIGNvbWUsIHdlIG1heSBldmVuIGVuZCB1cCBicmFuY2hpbmcgb3V0IHdpdGggc29tZSBvdGhlciBjYXNpbm8gc3R5bGUgdGFibGVzLiBIb3dldmVyLCBhbGwgaW4gZ29vZCB0aW1lIGJlY2F1c2UgZm9yIG5vdyB3ZSBhcmUgZW5qb3lpbmcgb3VyIG5ldyBwb2tlciB0YWJsZS4KRGFya1RvcmVhZG9yUmVkICAxIHBvaW50ICBzdWJtaXR0ZWQgMjggZGF5cyBhZ28KQnV0IHRoYXQgd2Fzbid0IGVub3VnaGZhc3QgZm9yd2FyZCBhIGNvdXBsZSB5ZWFycywgYW5kIGhlJ3MgZ2l2ZW4gdGhhdCBjb25zdHJ1Y3RlZCBhbiBlaWdodCBmaWd1cmUgYSB5ZWFyIGFmZmlsaWF0ZSBtYXJrZXRpbmcgZW1waXJlLCBlbXBsb3lpbmcgb3ZlciA0MCBmdWxsIHRpbWUgd29ya2VycyBmcm9tIHByZXR0eSBtdWNoIGV2ZXJ5IGNvbnRpbmVudCBvZiB0aGUgd29ybGQgKGV4Y2VwdCBBbnRhcmN0aWNhKS4gClRoZSBSZWFsIERlYWwgd2l0aCBQb2tlciBTb2Z0d2FyZQpZb3UgZG9uJ3QgbmVlZCBza2lsbHMgdG8gcGxheSBzbG90cy4gU2ltcGx5IGNsaWNrIHBsYXkgd2hlbiB5b3UgY2hvb3NlIGEgZ29vZCBzbG90IGFuZCBpdHMgcmVlbHMgd2lsbCBzcGluIGFuZCBkaXNwbGF5IHN5bWJvbHMgdGhhdCBkZXRlcm1pbmUgd2hldGhlciB5b3Ugd2luIG9yIGxvc2UuIFNsb3RzIGFyZSBhIGdhbWUgb2YgY2hhbmNlLiAKSSBhbSB0aGUgcHJpbWFyeSBiZWVyIGRyaW5rZXIgaW4gdGhlIGhvdXNlLCBhcyBteSB3aWZlIHByZWZlcnMgd2luZSBhbmQgbWl4ZWQgZHJpbmtzLiBNeSByb3V0aW5lIGlzIGdlbmVyYWxseSAyIGJlZXJzIGFuIGV2ZW5pbmcgYWZ0ZXIgd29yay4gCk1lbiBhbmQgd29tZW4gaGF2ZSBhIG11c2NsZSBjYWxsZWQgdGhlIHB1Ym9jb2NjeWdldXMsIG9yIFBDLiBJdCdzIHRoZSBvbmUgbWVuIChhbmQgd29tZW4sIHRvbykgY2FuIHVzZSB0byBzdG9wIHBlZWluZyB3aGVuIHRoZSBwb2xpY2UgY2F0Y2ggdGhlbSB1c2luZyB0aGUgYWxsZXkgYWZ0ZXIgdGhleSd2ZSBoYWQgdG9vIG11Y2ggYmVlci4gCjcgcG9pbnRzICBzdWJtaXR0ZWQgNyBtb250aHMgYWdvLiAKSXQgd2FzIHRoZSBleGFtcGxlIEkgdXNlZCwgYnV0IGl0IGEgcGF0dGVybiBvZiBiZWhhdmlvci4gSmFtZXMgZnJvbSBGSCByZWd1bGFybHkgdXNlcyBhIHN0ZXJlb3R5cGUgbGlzcGluZyBnYXkgdm9pY2UgZm9yIGpva2VzLCBKZXJlbXkgaXMgdm9jYWwgYWJvdXQgZmluZGluZyB0aGUgaWRlYSBvZiBnYXkgbWVuIGJlaW5nIHNleHVhbCBncm9zcywgdGhlcmUgYXJlIGNvbnN0YW50IHNtYWxsLCBncmF0aW5nIHRoaW5ncyB0aGF0IGFyZSBkb25lIGFuZCBzYWlkIHRoYXQgdHVybiBMR0JUIHNleHVhbGl0eSBhbmQgaXNzdWVzIGludG8gam9rZXMgdGhhdCBib3RoIHRoZSBwZW9wbGUgbWFraW5nIHRoZSBqb2tlcyBhbmQgb3RoZXIgZmFucyB0aGVuIGRlZmVuZC4gSSBnZXQgbm90IGV2ZXJ5b25lIGlzIGdvaW5nIHRvIGJlIG9mZmVuZGVkIGJ5IHRoZW0sIHN0cmFpZ2h0IHBlb3BsZSBkb24ga25vdyB3aGF0IGl0IGxpa2UgdG8gaGVhciB0aGlzIGtpbmQgb2Ygc2hpdCBjb25zdGFudGx5IGFuZCBldmVuIHNvbWUgZ2F5IHBlb3BsZSBoYXZlIG5vIGlzc3VlIHdpdGggaXQsIGJ1dCBJIGRvLiBJdCBkb2VzbiBtZWFuIEkgZG9uIGVuam95IHRoZSBjb250ZW50LCBpdCBkb2VzbiBtZWFuIEkgZG9uIHN1cHBvcnQgdGhlIGNvbnRlbnQsIGl0IGRvZXNuIG1lYW4gSSB0aGluayB0aGUgcGVvcGxlIG1ha2luZyB0aGUgam9rZXMgb3Igd3JpdGluZyB0aGUgam9rZXMgYXJlIGF3ZnVsIGhvbW9waG9iZXMsIGJ1dCBpdCBpcyBob21vcGhvYmljLiBJdCBub3Qgc3VycHJpc2luZywgYnV0IGl0IGlzIGRpc2FwcG9pbnRpbmcgdG8gYWx3YXlzIGtub3cgeW91IGdvaW5nIHRvIGJlIHRoZSBidXR0IG9mIHRoZSBqb2tlLiBUaGUgYnVuZGxlIG9mIHN0aWNrcyBqb2tlIGFuZCBmIHNsdXIgc2xpcCB1cHMgYXJlIGp1c3QgcGFydGljdWxhcmx5IG5vdGFibGUgYmVjYXVzZSB1bmxpa2UgZ2F5IGxpc3BzIG9yIHRoZSBvY2Nhc2lvbmFsIG5vIGhvbW8gam9rZSwgaXQgc29tZXRoaW5nIHRoYXQgYSBnb29kIHBvcnRpb24gb2YgcGVvcGxlIGFncmVlIGlzIFRvbyBGYXIgbm93IGluIHdheXMgb3RoZXIgdGhpbmdzIGFyZW4geWV0LiBJdCBhIHBhcnRpY3VsYXJseSB2aW9sZW50IGFuZCBoYXRlZnVsIHNsdXIgaWYgeW91IGtub3cgdGhlIGhpc3RvcnksIGl0IHRoZSBvbmUgbW9zdCBjb21tb25seSBsb2JiZWQgYXQgZ2F5IHBlb3BsZSwgYW5kIGl0IHN1Y2tzIHRvIGhlYXIsIGV2ZW4gaWYgaXQgImp1c3QgYSBqb2tlLiIgWW91IGNhbiB0aGluayBJIGJlaW5nIHN0dXBpZCBvciBzZW5zaXRpdmUgYWxsIHlvdSB3YW50LCBidXQgeW91IGNhbiB0ZWxsIG1lIEkgd3JvbmcgZm9yIG5vdCB3YW50aW5nIHRvIGdldCBoaXQgd2l0aCBzbHVycyB3aGlsZSB3YXRjaGluZyBjb250ZW50IEkgcGF5aW5nIHRvIGNvbnN1bWUuIF8oKV8vClRoZXJlIGFyZSBtdWx0aXBsZSBhcnRpY2xlcyBmcm9tIGJvdGggc2lkZXMgcmVmZXJyaW5nIHRvIHRoZSBtb25leSBoZSBwYWlkLgpJdCBzdGFydHMgZ2V0dGluZyBzY2FyeSwgd2UgZ28gdG8gdGhlIGhvc3BpdGFsLiAKUGFuZGFLYWJ1a2kgdQpJIHRoaW5rIGl0cyBwb3NzaWJsZSB0aGF0IFRydW1wIGhhcyBoZWxkIGJhY2sgcHJpbWFyaWx5IGJlY2F1c2Ugb3VyIHN5c3RlbSBtYWtlcyBpdCBkaWZmaWN1bHQgZm9yIGhpbSB0YWtlIGFjdGlvbiBhZ2FpbnN0IHRoZSBwcmVzcy4gVG8gbGltaXQgcHJlc3MgZnJlZWRvbSwgaGUgd291bGQgbmVlZCB0aGUgc3VwcG9ydCBvZiBjb25ncmVzcywgYW5kIGl0IHZlcnkgbGlrZWx5IHRoYXQgaGUgd291bGQgYmUgc3RvcHBlZCBieSB0aGUgU3VwcmVtZSBDb3VydC4gCklmIHlvdSBhcmUgYW4gaW52ZXN0b3IvbGFuZGxvcmQgYW5kIHlvdXIgc3RyYXRhIGNvcnBvcmF0aW9uIGhhcyBhIGJ5bGF3IHRoYXQgcmVzdHJpY3RzIHJlbnRhbHMsIHlvdSBtYXkgYmUgZXhlbXB0IGZyb20gdGhlIHRheCB1bmRlciB0aGUgY3VycmVudCBwcm92aXNpb25zIEhvd2V2ZXIsIGlmIHJlbnRhbCBieWxhdyBwcm92aXNpb25zIGFyZSByZXBlYWxlZCwgdGhlIGV4ZW1wdGlvbiB3b3VsZCBiZSByZW1vdmVkIGFuZCBhbnkgdHlwZSBvZiB2YWNhbnQgc3RyYXRhIGxvdCB3b3VsZCBiZSBzdWJqZWN0IHRvIHRoZSB0YXggZm9yIHRoZSByZWdpb25zIHRoYXQgYXBwbHkuLiAKbWFzc2FnZSBwYXJsb3JzIHNlZW4gYXMgZnJvbnRzIGZvciBzZXgKVGhleSBhcmUgYWxzbyB0cnlpbmcgdG8gcHVyY2hhc2UgcHJvZHVjdHMgdXNlZCBieSB0aGVpciBtZW50b3JzIGluIHRoZSBwb2tlciB3b3JsZC4gCjYgRElZIEF1dG9tb3RpdmUgUmVwYWlycyBBbnlvbmUgQ2FuIERvRG8gbW9kZXJuIGNhciBmaW5pc2hlcyBwcmV2ZW50IGJvZHkgZGFtYWdlP0hvdyBDYXIgV2FzaGVzIFdvcmtIb3cgdG8gTWF0Y2ggQXV0byBQYWludFRvcCA1IE1hdGVyaWFscyBVc2VkIGluIEF1dG8gTWFudWZhY3R1cmluZwpIZSB3YXMgYWxzbyBhc2tlZCB0byBwYXkgbmVhcmx5ICQyIG1pbGxpb24gaW4gZmluZXMsIGZvcmZlaXR1cmVzIGFuZCByZXN0aXR1dGlvbi4gVGhlIGp1ZGdlIG9yZGVyZWQgTXIuIApJIHN0aWxsIG9ubHkgc2xlZXAgNiA3IHVucmVzdGZ1bCBob3VycywgYnV0IEkgZ2F2ZSB1cCBuaWdodCBsaWZlIGFmdGVyIG1hcnJpYWdlLiBJdCBqdXN0IG5vdCByZWFsbHkgcmVzcGVjdGZ1bCwgYW5kIGxhdGUgbmlnaHQgcHJvd2xpbmcgYWJvdXQgY29tZXMgd2l0aCBjb25ub3RhdGlvbnMuIE15IG5pZ2h0IGFjdGl2aXRpZXMgcmFyZWx5IGludm9sdmVkIGdpcmxzLCBidXQgZXZlbiBzbywgSSB3b3VsZG4gZmVlbCBjb21mb3J0YWJsZSB3aXRoIGhlciBiZWluZyBvdXQgYXQgYWxsIGhvdXJzLCBzbyBJIG9mZmVyIHRoZSBzYW1lLgpPIE51bWJlciBvZiBwbGF5ZXJzIGF0IHRoZSB0YWJsZQpUaGlzIGlzIGFsbCB0byBzYXkgaXQgbGl0ZXJhbGx5IGRvZXMgZW5kIG5vIG1hdHRlciBob3cgYmFkIGl0IGdldHMuIElmIHlvdSByZWFsbHkgYXJlIGdldHRpbmcgeW91ciBtb25leSBpbiBnb29kIGFuZCBwaWNraW5nIGdvb2QgYmx1ZmYgc3BvdHMgYW5kIG5vdCBnZXR0aW5nIHRpbHRlZCBpdCB3aWxsIGFsd2F5cyBiYWxhbmNlIG91dC4gSSdtIGN1cnJlbnRseSBvbiBhbiBpbnNhbmUgaGVhdGVyIGZvciBKYW51YXJ5IGFuZCBmZWJydWFyeSB3aGVyZSBJJ20gcnVubmluZyBhdCA0NGJiL2hvdXIgb3ZlciAyODAgaG91cnMgd2hpY2ggaXMganVzdCBzaWxseS4KSSBoYXZlIHdheSB0b28gbWFueSBjZW50ZXJzLCBlc3BlY2lhbGx5IHdpdGggSlYgY29taW5nIGJhY2sgc29vbiwgYnV0IEkgY2FuJ3QgZmluZCBhIHRyYWRlIHdpdGggYW55b25lIGluIG15IGxlYWd1ZS4gTm9ib2R5IHZhbHVlcyBkZWRtb24gb3IgSmVyYW1pIGJlY2F1c2UgbGFjayBvZiBjb3VudGluZyBzdGFycy4gClRoZW4gdHdvIHBvbGljZSBvZmZpY2VycyBzaG93ZWQgdXAuIApMb3N0IG15IGhvdXNlLiBMb3N0IG15IGpvYi4gClJGSSBhdCB0aGUgVkxBIGlzIHByZXR0eSBpbnRlcmVzdGluZy4gVGhlcmUgaXMgY2VsbCBzaWduYWwsIGJ1dCBub3Qgb24gZXZlcnkgY2FycmllciAgSSBoYWQgaXQgb24gVCBNb2JpbGUsIGJ1dCBteSBmcmllbmQgb24gQVQgZGlkbiAoZm9yIHRoZSByZWNvcmQsIEkgdGFsa2luZyBhYm91dCB3aGVuIHdlIHdlcmUgb24gdGhlIGhpZ2h3YXkgcmlnaHQgYmVmb3JlIHRoZSB0dXJub2ZmIHRvIHRoZSBWTEE7IHdlIGhhZCBvdXIgcGhvbmVzIGluIGFpcnBsYW5lIG1vZGUgd2hpbGUgd2Ugd2VyZSB0aGVyZSkuLiAKT3Igd2hlbiB0aGV5IGNoYW5nZWQgdGhlIGNvbXB1dGVyIHN5c3RlbSBzbyB0aGF0IGFuIHVwc2VsbCBzYWxhZCBiYXIgY291bGQgbm8gbG9uZ2VyIGJlIGFkZGVkIHRvIGEgbWVhbCwgdGhlIGVudGlyZSBtZWFsIGhhZCB0byBiZSB2b2lkZWQgb3V0IGFuZCByZXJ1bmcsIGdpdmluZyB5b3UgYSA1MCUgdm9pZCByYXRlIGZvciB0aGF0IHNlYXQuIApCdXkgdGhpbmdzIGJlY2F1c2UgdGhlIGJpZyBibGlua2luZyBsaWdodHMgdGVsbCB0aGVtIHRvLiBUaGV5IGJ1eSB0aGVtIGJlY2F1c2UgdGhleSB0aGluayBvdGhlciBwZW9wbGUgYXJlIGFuZCB3b3VsZCBiZSBtaXNzaW5nIG91dCBvdGhlcndpc2UuIFRoZXkgYnV5IHRoZW0gb3V0IG9mIGhhYml0LCBib3JlZG9tLCBhbnkgbnVtYmVyIG9mIGlycmF0aW9uYWwgcmVhc29ucy4KSSBoYXZlIHRvIHBheSBteSBkZWR1Y3RpYmxlIG91dCBvZiBwb2NrZXQsIGJ1dCB0aGV5IHNheSBpbCBiZSBhYmxlIHRvIHJlY292ZXIgdGhhdCB3aGVuIHRoZXkgcmVjb3ZlciBmdW5kcyBmcm9tIHRoZSBpbnN1cmFuY2UuSSBhbHNvIGdvdCBhIHJlbnRhbCB2ZWhpY2xlIGZyb20gbXkgaW5zdXJhbmNlLlRoYW5rcyBmb3IgdGhlIGFkdmljZS4gCkZvciBtZSwgaXQgd2FzIGNyeWluZyBoYXJkZXIgdGhlbiBJIGV2ZXIgaGF2ZS4gRXZlcnkgZGF5LiBMeWluZyBvbiB0aGUgZmxvb3IgaW4gdGhlIGZldGFsIHBvc2l0aW9uLiAKQnV0IEkgZ3Vlc3MgaXQgd2FzIGp1c3QgYWJvdXQgaGVyIGJlaW5nLiJhIGRydW5rIGFuZCBhIHNsdXQiPyBJdCB3YXMgd2VpcmQgdGhhdCAiZGFuZ2Vyb3VzIiB3YXMgdXNlZCBtb3JlIHRoYW4gb25jZSB0byBkZXNjcmliZSBoZXIgaWYgdGhhdCBhbGwgaXQgd2FzLCBJIHRob3VnaHQuIApUaGVyZSBpcyBzb21ldGhpbmcgc3BlY2lmaWMgdG8gYWR2ZXJzaXR5IGFuZCBoYXZpbmcgdG8gYWRhcHQgdG8gbGl2aW5nIGluIGEgd29ybGQgbm90IGluaGVyZW50bHkgInVzZXIgZnJpZW5kbHkiIHRoYXQgbWFuaWZlc3RzIGluZGl2aWR1YWxzIHdobyBkb24gYWNjZXB0ICJObyIgb3IgIkNhbiBhcyBhbnN3ZXJzIGlmIGEgZG9vciBpcyBjbG9zZWQgdG8gdGhlbS4gCkFkbWluaXN0cmF0aW9ucy4gVGhlIGluZHVzdHJ5IGlzIGRyaXZlbiBieSB0aGUgZm9yY2UgdGhhdCB0aGUgbW9uZXkgZ2VuZXJhdGVkIGZyb20gdGhlIGdhbWluZyBpbmR1c3RyaWVzIGlzIGludmVzdGVkIGludG8KVGhlIG1vc3QgaW1wb3J0YW50IHRoaW5nIGlzIHByb2JhYmx5IGNvbmZpZGVuY2UuIFdoZW4geW91IGFyZSBpbiB5b3VyIHJvb20sIHVuZHJlc3MgY29tcGxldGVseS4gClRoZSB0aWxlIHNob3VsZCBiZWVuIGN1dCBiYWNrIGZ1cnRoZXIsIHRvIG5vdCBvdmVybGFwIHRoZSBmbGFuZ2UuIFlvdSBjb3VsZCBzdGlsbCBkbyB0aGF0IHdpdGggYSBkaWFtb25kIHdoZWVsIGluIGEgZ3JpbmRlciwgaWRlYWxseSB3aXRoIGR1c3QgZXh0cmFjdGlvbiB0byBub3QgbWFrZSBhcyBnaWdhbnRpYyBhIG1lc3MuIEFsc28sIGNsZWFuIHVwIHRoZSBsb29zZSBkZWJyaXMgYXJvdW5kIHRoZSBmbGFuZ2Ugc28geW91IGNhbiBiZXR0ZXIgc2VlIHdoYXQgeW91IGRlYWxpbmcgd2l0aC4uIApBc2hhYXJpIElkcmlzLCBhIGdvdmVybm1lbnQgb2ZmaWNpYWwgaW4gbm9ydGhlcm4gVGVyZW5nZ2FudSBzdGF0ZSwgc2F5cyB0cm91YmxlZCBjb3VwbGVzIHdpbGwgYmUgYWxsb3dlZCB0byBzcGVuZCB0d28gbmlnaHRzIGF0IHRoZSBzdGF0ZSBzY2VuaWMgaXNsYW5kcyBvciBiZWFjaCByZXNvcnRzIHRvIGhlbHAgdGhlbSByZWtpbmRsZSB0aGVpciByb21hbmNlIHVuZGVyIGEgIlNlY29uZCBIb25leW1vb24iIHByb2dyYW0uCiJHaXZlbiB0aGF0IHRoZSBsYXN0IGZldyBib29rcyBvZiBtaW5lIGhhdmUgYmVlbiBXYWxsIFN0cmVldCByZWxhdGVkICAgdGhlIG5leHQgZmV3IHdvbid0IGJlLCBJJ20gbW92aW5nIG9uICAgYnV0IG5ldmVydGhlbGVzcywgdGhlIGxhc3QgZmV3IGhhdmUgYmVlbiwgc28gaGUgc2VlbWVkIGxpa2UgYSByZWFsbHkgZ29vZCBwZXJzb24gdG8gc2l0IGRvd24gYW5kIHRhbGsgdG8sIiBMZXdpcyBleHBsYWluZWQuCkFub3RoZXIgb25lLCB3ZSdsbCBjYWxsIHRoaXMgZHVkZSBpbiBicm90aGVyIGZsaWdodCBBaXJtYW4gU251ZmZ5LiBIZSB3YXMgbmV2ZXIgYWxsIHRoZXJlLiAKTGUgcHJlbWllciBkZXMgZHJvaXRzIGRjbGFycyBlc3QgbGEgbGliZXJ0IDogbGVzIGhvbW1lcyBuYWlzc2VudCBldCBkZW1ldXJlbnQgbGlicmVzIChhcnRpY2xlIDFlcikuIEwnYXJ0aWNsZSA0IGRvbm5lIHVuZSBkZmluaXRpb24gZGUgbGEgbGliZXJ0IDogIHBvdXZvaXIgZmFpcmUgdG91dCBjZSBxdWkgbmUgbnVpdCBwYXMgIGF1dHJ1aSAuIENldHRlIGlkZSBkZSBsaWJlcnQgdHJvdXZlIHVuZSBleHRlbnNpb24gcGFyIGxhIGR0ZXJtaW5hdGlvbiBkZSBsaWJlcnQgcGFydGljdWxpcmUgOiBsaWJlcnQgZCdvcGluaW9ucywgbW1lIHJlbGlnaWV1c2UgKGFydGljbGUgMTApIDsgbGliZXJ0IGRlIGNvbW11bmljYXRpb24gZGVzIHBlbnNlcyBldCBkZXMgb3BpbmlvbnMgYWluc2kgcXVlIGRlIGxhIHByZXNzZSAoYXJ0aWNsZSAxMSkuLiAKU28gSSBoYXZlIHRvIHN3aXRjaCBpdCB0byBhbGwgY2F0ZWdvcmllcyBhbmQgYWxsIHNpemVzIHRvIHNlZSBteSBjbG9zZXQuIEkgaGF2ZSBjaGVjayBhbGwgbXkgZGV2aWNlcyB0byBtYWtlIHN1cmUgdGhleSBhbGwgc2hvdyBhbGwgY2F0ZWdvcmllcyBhbmQgc2l6ZXMgYnV0IHN0aWxsIGl0IHN3aXRjaGVzIGJhY2sgZXZlcnkgdGltZS4uIApPbiBNb25kYXkgYWZ0ZXJub29uLCB0aGUgc2hhcmVob2xkZXJzIGdhdGhlcmVkIGZvciB0aGUgYW5udWFsIG1lZXRpbmcsIHdoaWNoIHByb2NlZWRlZCB3aXRob3V0IHN1cnByaXNlcyBhbmQgd2VyZSByZXBvcnRlZGx5IG5vIG1lbnRpb25zIG9mIHRoZSBmYWN0IHRoYXQgQ0VPIERhdmlkIEJhYXpvdiBhbmQgQ0ZPIERhbmllbCBTZWJhZyBhcmUgYmVpbmcgaW52ZXN0aWdhdGVkIGJ5IHRoZSBBTUYuCkl0IGlzIG5vdCBmYWN0dWFsbHkgdHJ1ZSB0aGF0IGNvd3MgY29udGludWUgdG8gcHJvZHVjZSBtaWxrIG9uY2UgdGhleSBwcm9kdWNlIGEgY2FsZi4gVGhlIGVudGlyZSBkYWlyeSBpbmR1c3RyeSBkb2VzbiBmb3JjaWJseSBpbXByZWduYXRlIGNvd3MgZXZlcnkgeWVhciBhZnRlciB0aGVpciBmaXJzdCBjYWxmIGZvciBmdW4uIEl0IGEgYmlvbG9naWNhbCBuZWNlc3NpdHkgdG8ga2VlcCB0aGUgY293IHByb2R1Y2luZyBtaWxrLiAKSGUgZGlkbid0IGxpdmUgdG8gc2VlIHRoZSB3aGVlbCBjb250aW51YWxseSByZSBzcHVuIGJ5IHRoZSBpbmZpbml0ZSBlbmVyZ3kgc291cmNlIG9mIGh1bWFuIHN0dXBpZGl0eSwgcHJvdmluZyBoZSdkIGFjdHVhbGx5IHN1Y2NlZWRlZCEuIApUaGlzIGd1eSByb2xscyBzbyBtYW55IGJveGNhcnMgYW5kIHNuYWtlIGV5ZXMgeW91IHdvdWxkIHRoaW5rIGhlIGhhZCBpdCBvdXQgZm9yIGV2ZXJ5b25lIHRvIGxvc2UuIApUaGlzIHBvb2wgb2YgbW9uZXkgY29uc2lzdHMgb2YgdGhlIGluaXRpYWwgYmV0cy4gCkJ1dCBhZnRlciBhIGxvdCBvZiByZXNlYXJjaCBiZWZvcmUgQ2hyaXN0bWFzLCBJIGRlY2lkZWQgb24gdGhlICQxNjAgWkNDMTAgaW5zdGVhZC4gQ29tcGFyZWQgdG8gdGhlIGNoZWFwZXIgQ2hpbmEgbWFkZSBUU0MgbW9kZWxzLCB0aGUgWkNDIGlzIG1hZGUgaW4gSmFwYW4sIGhhcyBhIHNwaGVyaWNhbCBoZWF0aW5nIGVsZW1lbnQsIGFuZCBoYXMgYSBjb3VwbGUgbW9yZSBzZW5zb3JzIGZvciBiZXR0ZXIgdGVtcCBjb250cm9sLiAKRm91bmRlZCBpbiAyMDAyLCBNYXNzYWdlIEVudnkgaGFzIG1vcmUgdGhhbiA4ODAgbG9jYXRpb25zIGluIDQ3IHN0YXRlcy4gVGhyb3VnaCBpdHMgbmF0aW9uYWwgcGFydG5lcnNoaXAgd2l0aCB0aGUgQXJ0aHJpdGlzIEZvdW5kYXRpb24sIE1hc3NhZ2UgRW52eSBoYXMgcmFpc2VkIG1vcmUgdGhhbiAkMSBtaWxsaW9uIGluIHR3bywgb25lIGRheSBIZWFsaW5nIEhhbmRzIGZvciBBcnRocml0aXMgZXZlbnRzLiAKIlBlcnNvbm5lIG5lIGpvdWFpdCBhdXRhbnQgZXQgYXVzc2kgbG9uZ3RlbXBzIHF1ZSBtb2kiLCBleHBsaXF1ZSB0IGlsICBzb24gYXZvY2F0LCBham91dGFudCBxdSdlbiAyMDA2IGlsIGpvdWFpdCAiZW4gbW95ZW5uZSAxNCBoZXVyZXMgcGFyIGpvdXIsIDM2NSBqb3VycyBwYXIgYW4iLgpCZXlvbmMpL1NvIEhhcHB5IEkgQ291bGQgRGllL1RlZXRoIC4gVGhpcyBpcyB0aGUgZmFtb3VzICJUaGUgRmFtZSBNb25zdGVyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuIDQ2IDUwICkgUG9rZXIgRmFjZS9KdXN0IERhbmNlL0xvdmVnYW1lL0JlYXV0aWZ1bCwgRGlydHksIFJpY2gvUG9rZXIgRmFjZSAuIApMYXRlciBkdXJpbmcgbGl2ZSBiZXR0aW5nLCB3aGVuIEkgaGF2ZSBhIHByZWRpY3Rpb24gb2YgMTQ1IGFuZCB0aGUgbGluZSBpcyAxNDksIHRoZW4gaXQgYmFzaWMgbWF0aCB0byBjYWxjdWxhdGUgdGhlIGVkZ2UgZ2l2ZW4gdGhlIGRpc3RyaWJ1dGlvbiBvZiAxNDUgcHJlZGljdGlvbnMuLiAKSGF3YWlpJ3MgYXZlcmFnZSBhbm51YWwgc2FsYXJ5IGlzIGEgY29tcGFyYXRpdmVseSBsb3cgJDMyLDAwMCBwZXIgeWVhci4uIApXaGF0IGRvZXMgcGFydHkgcG9rZXIgb2ZmZXIgdG8gYSBnYW1lcj8gSG91cnMgYW5kIGhvdXJzIG9mIGZ1biEgV2hldGhlciB5b3UgYXJlIGEgYmVnaW5uZXIgaW4gdGhlIGdhbWUsIG9yIGEgc2VyaW91cyBwb2tlciBwbGF5ZXIsIHBhcnR5IHBva2VyIHdpbGwgYmUgeW91ciBwb2tlciBnYW1pbmcgb2FzaXMuIE1heWJlIHlvdSB3YW50IHRvIGxlYXJuIGFib3V0IHRoZSBpbnRyaWNhdGUgeWV0IGVuam95YWJsZSBnYW1lIG9mIHBva2VyIGJ1dCBoYXZlIG5vIG9uZSB0byBwbGF5IGl0IHdpdGguIERvbnQgd29ycnksIGJlY2F1c2UgcGFydHkgcG9rZXIgaXMgYWN0dWFsbHkgYSBjb21tdW5pdHkgaW4gaXRzZWxmLiBJdCBpcyBhIHBsYWNlIHdoZXJlIHlvdSBjYW4gbGVhcm4gd2l0aCBvdGhlciBiZWdpbm5lcnMuIFBhcnR5IHBva2VyIHNpdGVzIGxpbmsgaHVuZHJlZHMsIGFuZCBldmVuIHRob3VzYW5kcyBvZiBwbGF5ZXJzLiBUaGUgYWJpbGl0aWVzIG9mIHRoZXNlIHBsYXllcnMgYWxzbyByYW5nZSBmcm9tIGEgY29tcGxldGUgYmVnaW5uZXIga25vd2luZyBub3RoaW5nIGFib3V0IHBva2VyLCB0byBhZHZhbmNlZCBhbmQgcHJvIHBsYXllcnMuIEhvd2V2ZXIsIG9uZSBuZWVkcyB0byBiZSB3YXJ5IG9mIHlvdXIgYmV0dGluZywgYmVjYXVzZSB5b3UgbWlnaHQgbG9zZSBzZXJpb3VzIG1vbmV5IGluIHBhcnR5IHBva2Vycy4gVGhlIGJlbmVmaXRzIHJlYWxseSBmYXIgb3V0d2VpZ2ggdGhlIHJpc2tzIHRoYXQgYXJlIGludm9sdmVkLiBQYXJ0eSBwb2tlciBjYW4gYWxzbyByZXdhcmQgeW91IGEgbG90IG9mIGRvbGxhcnMsIGFuZCBtaWdodCBtYWtlIHlvdXIgd2FsbGV0IGZhdC4KQXNzYXNzaW4gUmFncyBvbiB0aGUgb3RoZXIgaGFuZCBzZWVtIGxpa2Ugb3ZlcmtpbGwsIGFsdGhvdWdoIHRoaXMgd291bGQgaW1wbHkgeW91IGNhbiBlcXVpcCB0aGVtIHNhZmVseSB3aXRoIHdoYXRldmVyIGNoYWluIGFybW9yIHlvdSBsaWtlIHdpdGggemVybyBmZWFyIG9mIHlvdXIgY29tYmF0IHNwZWVkIGJlaW5nIHJlZHVjZWQuIEkgaGF2ZSB0byB0ZXN0IHRoaXMgaW4gZ2FtZSBzb21ldGltZSB0byBzZWUgaWYgSSBjYW4gbm90aWNlIGFueSBkaWZmZXJlbmNlLCBhcyBhIGdyZWF0IG51bWJlciBvZiBmYWN0b3JzIChzdHJlbmd0aCByZXF1aXJlbWVudCBtZXQpIGNhbiBvdmVycmlkZSBvdGhlciBhdHRhY2sgc3BlZWQgcnVsZXMuLiAKTmV3IEVkaXRpb24gb2YgIk1pbmRmdWxuZXNzIGluIFBsYWluIEVuZ2xpc2giIHdoaWNoIGNhbiBiZSBhcHBsaWVkIHRvIGJvdGggLiBUaGlzIHNob3J0IGZpbG0gb2ZmZXJzIGEgZ2xpbXBzZSBvZiBDaGllZidzIHJlbWFya2FibGUgbGlmZSBhbmQgd29yay4gMjkgU2VwIDIwMTUgLiAKVGhlIGxpbmVzIGJldHdlZW4gZ2FtaW5nIGFuZCBnYW1ibGluZyBhcmUgYWxyZWFkeSBiZWNvbWluZyBpbmNyZWFzaW5nbHkgYmx1cnJlZCwgaGUgc2FpZCwgd2l0aCB0aGUgdGVybSBnYW1pbmcgbm93IHN5bm9ueW1vdXMgd2l0aCBlbnRlcnRhaW5tZW50IGFuZCBsZWlzdXJlLi4gCkhvd2V2ZXIsIGFueSBoaW50IG9mIHJldGlyZW1lbnQgdHVybmVkIG91dCB0byBiZSBzaG9ydCBsaXZlZC4gCkNvbG0gTyBEaXNsaWtlOiBBIGZhY2Vib29rIGd1aWRlIHRvIGNyaXNpcyBSb2lzaW4gRHViaCAodXBzdGFpcnMgKSwgM3BtLiAKRGllIGh0dGUgZXIgdm9uIHZvcm5oZXJlaW4gdmVybWVpZGVuIGtubmVuICAgaW5kZW0gZXIgc2VpbmUgRGVtbyBnYXIgbmljaHQgZXJzdCBhbmdlbWVsZGV0IGh0dGUuCkJ1dCBzdXJlbHkgcGF0cmlhcmNoeSBpcyBhIHdvcmQgd2UgbXVzdCByZXZpdmUgIGV2ZW4gaWYgd2Ugc2F5IGl0IGlzIG5vdCBhYm91dCBtZW4gcGVyIHNlICAgd2hlbiBjb25mcm9udGVkIHdpdGggdGhlIG1pc29neW55IG1peGVkIHdpdGggbWFsZSBwcml2aWxlZ2UgdGhhdCBzZWVtcyB0byBiZSBydW5uaW5nIHJhbXBhbnQgb2ZmIG9mIGNvbGxlZ2UgY2FtcHVzZXMuIEluc3RhbmNlLCBpbiBJcmFuICJiYWQiIHdvbWVuIGFyZSBiZWluZyBibGFtZWQgZm9yIGNhdXNpbmcgZWFydGhxdWFrZXMuIEFjY29yZGluZyB0byBhIENOTiByZXBvcnQsLiAKSWYgYSBmYWN0b3J5IHBsYWNlIGlzIHVuZmlsbGVkLCBJIGNhbiBmaWxsIGl0LiBNeSBsaWZlLCBteSBydWxlcy4gClRvIG1lLCBpdCdzIGNsYXNzaWMgaW5zZWN1cml0eSBvbiB0aGUgb3RoZXIgZ2lybCdzIHBhcnQuIApUaGUgb2ZmIHBlcmlvZCBpcyB3aGVuIHlvdSB3b3JrIHdpdGggYSBvZmYgbWVudG9yIHdobyB3aWxsIGFzc2VzcyB5b3VyIHByb2ZpY2llbmN5IGFuZCB3aWxsIG9mZiB0aGUgY29tcGxldGlvbiBvZiB0aGUgcHJhY3RpY2UgcGFydCBvZiB5b3VyIHByb2dyYW1tZSwgY29uZmlybWluZyB0aGF0IHlvdSBoYXZlIGFjaGlldmVkIHRoZSBzdGFuZGFyZHMgb2YgY29tcGV0ZW5jZSByZXF1aXJlZCBmb3IgZW50cnkgdG8gdGhlIE5NQyByZWdpc3Rlci4uIApUaGUgdGhyZWF0IGZyb20gSHVycmljYW5lIEFydGh1ciBtYWRlIGl0IG5lY2Vzc2FyeSB0byBjaGFuZ2UgdGhlIGRhdGUgb2YgdGhlIGV2ZW50IGZyb20gRnJpZGF5LCBidXQgaXQgd2FzIHRoZSBCZWFjaCBCb3lzJyBTYXR1cmRheSBwbGFucyB0aGF0IHB1c2hlZCB0aGUgZW50aXJlIGZpcmV3b3JrcyBzaG93IHVwIHRvIFRodXJzZGF5LgpJbiBhIHN1YnVyYmFuIHN0eWxlIGhvdXNlIHNldmVuIG1pbGVzIHNvdXRoIG9mIHRvd24sIHN1cnJvdW5kZWQgYnkgdHdvIGFjcmVzIG9mIGxhd24gYW5kIGEgc3dpbW1pbmcgcG9vbCwgRGV0ZWN0aXZlIENhcHRhaW4gRGVubmlzIFNtaXRoIG9mIHRoZSBBZGEgcG9saWNlIGZvcmNlIHdhcyBhdCBob21lIHdpdGggaGlzIHdpZmUsIFNhbmRpLiBUaGV5IHdlcmUgcGxhbm5pbmcgdG8gZ28gdG8gYmVkIGVhcmx5LCBiZWNhdXNlIHRoZXkgaGFkIHRvIGdldCB1cCBlYXJseSB0aGUgbmV4dCBtb3JuaW5nLiAKVGhlc2UgdHdvIHNlcGFyYXRlIHByb2Nlc3NlcyBtdXN0IGJvdGggYmUgbWFuYWdlZCBieSB0aGUgb25lIHdobyBpcyBvbiB0aGUgcmVnaW1lbi4gSWRlYWxseSwgaGUvc2hlIGlzIGJlaW5nIG92ZXJzZWVuIGFuZCBndWlkZWQgYnkgYW4gZXhwZXJpZW5jZWQgRG9taW5hbnQuCk9uIHRoZSByaXZlciB0aGUgSnMgY29tZXMgdXAgYW5kIHlvdXIgb3Bwb25lbnQgcmFpc2VzICQ1MC4gCldoYXQncyBtb3JlLCBvdmVyIGhhbGYgb2YgdGhlbSBhcmUgdHJpYWwgdmVyc2lvbnMuIApPbmNlIEkgYWxsb3dlZCBoaW0gdG8gbWVldCBteSBzb24gKHdhbnRlZCB0byBrbm93IGhpbSBzb21ld2hhdCwgZmlyc3QpLCBoZSB3YXMgc28gZXhjaXRlZCB0byBpbmNsdWRlIG15IHNvbiBhcyBtdWNoIGFzIHBvc3NpYmxlLiBIZSBwbGFuIGtpZCBmcmllbmRseSBkYXRlcywgc28gbXkgc29uIGNvdWxkIHBhcnRpY2lwYXRlLiAKQXQgdGhlIHRpbWUgb2Ygd3JpdGluZywgTXIuIFRyZWxpdmluZyB3YXMgdW5hdmFpbGFibGUgZm9yIGNvbW1lbnQuLiAKRG9lcyBzaGUgcmVhbGlzZSB0aGF0IGhlJ3MgZnJlc2hseSBzaG93ZXJlZCBhbmQgYWJvdXQgdG8gbGVhdmUgdGhlIGhvdXNlLCBhbmQgdGhlcmVmb3JlIGl0IGlzIGltcGVyYXRpdmUgdGhhdCBzaGUgZ2V0IGhlciBzY2VudCBvbiBoaW0gQVNBUD8KRnJvbSBhbnRlbG9wZSB0byB6ZWJyYSBhbmQgYWxsIHRoZSB3aWxkbGlmZSBpbiBiZXR3ZWVuLCBBZnJpY2EncyBzdHVubmluZyBmYXVuYSBpbnNwaXJlcyBodW5kcmVkcyBvZiBhZHZlbnR1cmUgdG91cnMgYSB5ZWFyLCBpbmNsdWRpbmcgdGhvc2Ugb2YgVWx0aW1hdGUgQWZyaWNhIFNhZmFyaXMsIHdob3NlIHNjaGVkdWxlZCBncm91cCB0cmlwcyAod2l0aCBlaWdodCB0cmF2ZWxlcnMgbWF4KSBhbmQgY3VzdG9taXplZCB0b3VycyBjb21lIHdpdGggbGl0dGxlIHRvIG5vIHNpbmdsZSBmZWVzIGF0dGFjaGVkLiAKVGhlcmUgd2FzIG5vIENoaW5lc2Ugb3IgU292aWV0IGRvbWluYW5jZSBpbiBWaWV0bmFtICAganVzdCBhbiBpbmRlcGVuZGVuY2UgbW92ZW1lbnQgdGhhdCBzb3VnaHQgdG8gbGliZXJhdGUgdGhlIGNvdW50cnkgZnJvbSBGcmFuY2UsIGFuZCB0aGVuIHRoZSBVUyBvbmNlIHRoZSBVUyB0cmllZCB0byBiZWNvbWUgdGhlIG5ldyBjb2xvbmlhbCBtYXN0ZXIuIFRoaXMgaGFzIGJlZW4gdGhvcm91Z2hseSBkb2N1bWVudGVkIGJ5IENob21za3kgYW5kIG90aGVycyAoQnJ1Y2UgQ3VtbWluZ3MsIEdhYnJpZWwgS29sa28sIGV0YykuLiAKVGFrZXNoaW1hX3JhbmdlcnMgICAxMiBwb2ludHMgIHN1Ym1pdHRlZCAxNCBkYXlzIGFnbwpPbmUgb2YgdGhlIHRoaW5ncyB0aGF0IG1vc3QgYm90aGVycyBtZSBhYm91dCBhbnRpIHZheGVycyBpcyB0aGF0IHRoZXkgbWFrZSBpdCBkaWZmaWN1bHQgdG8gcmFpc2UgZ2VudWluZSBjb25jZXJucy4gVGhpcyBpcyBub3QgYW4gaW5jb3JyZWN0IHN0YXRlbWVudCwgYW5kIGl0IGlzIHBhcnQgb2Ygd2h5IHByZXNjcmlwdGlvbiBkcnVncywgYW5kIGhlYWx0aCBjYXJlIGNvc3RzIGluIGdlbmVyYWwsIGFyZSBleG9yYml0YW50IGluIHRoZSBVUyBjb21wYXJlZCB0byB0aGUgcmVzdCBvZiB0aGUgd29ybGQuIAoyLzMgcG90IGNiZXQuIApKdXN0IHdhbnQgdG8gd2FybiB5b3UsIHNpbmNlIHRoaXMgcG9zdCBpcyByZWNlbnQ6IHlvdSBhcmUgZ29pbmcgdG8gZ2V0IGEgbG90IG9mIGJhY2tsYXNoIG9uIHRoaXMgc3ViLiBXZSBnZW5lcmFsbHkgYWJob3IgZmx5aW5nIHdpdGggcGV0cywgYmVjYXVzZSB0aGUgZXhwZXJpZW5jZSBpcyB0cmF1bWF0aXppbmcgZm9yIGFuaW1hbHMgYW5kIGhhcyBhIHJlbGF0aXZlbHkgc2lnbmlmaWNhbnQgbW9ydGFsaXR5IHJhdGUuIFRoZXJlIGhhdmUgYWxzbyBiZWVuIGEgZmV3IEFNQXMgaGVyZSBmcm9tIGJhZ2dhZ2UgaGFuZGxlcnMsIHdobyBzYXkgdGhleSBqdXN0IHRocm93IGFuaW1hbCBjYWdlcyBpbnRvIHRoZSBjYXJnby4gCkkgY2F1Z2h0IHRoZSBuZXh0IGZsaWdodCB0byBNb250cmVhbCBhbmQgc29vbiByZWFsaXplZCBJIHdhcyBpbiB3YXkgb3ZlciBteSBoZWFkLi4gClR5cGljYWwgdG91cm5hbWVudHMgY2hhbmdlIGxldmVscyBldmVyeSAxMiAyMCBtaW51dGVzLCBzbyBhZnRlciBvbmUgaG91ciB5b3VyIGJsaW5kcyB3aWxsIGhhdmUgaW5jcmVhc2VkIHNldmVyYWwgdGltZXMuIFRoaXMgaXMgY3J1Y2lhbCB0byB0aGUgc3VjY2VzcyBvZiB0aGUgZm9ybWF0IGJlY2F1c2UgaXQncyBpbXBvc3NpYmxlIHRvIGp1c3Qgc2l0IGJhY2sgYW5kIHdhaXQgZm9yIHRoZSBiZXN0IGhhbmRzLCBhcyB5b3Ugd2lsbCBzbG93bHkgYmUgZWF0ZW4gYXdheSBieSB0aGUgaW5jcmVhc2luZyBibGluZHMuIFlvdSBhcmUgcHJlc3N1cmVkIHRvIG1ha2UgbW92ZXMgd2l0aCB3ZWFrZXIgdGhhbiBwcmVtaXVtIGhhbmRzLCB3aGljaCBpbiB0dXJuIG5hcnJvd3MgZG93biB0aGUgdG91cm5hbWVudCBmaWVsZCBhcyBwZW9wbGUgZ2V0IGVsaW1pbmF0ZWQuIAoiRm91bmQgdGhpcyBvbiBhIEZyb250aWVyIGZsaWdodCBmcm9tIE9tYWhhIHRvIERlbnZlciByb3cgMTIsIHNlYXQgRiB3ZWRnZWQgYmV0d2VlbiB0aGUgc2VhdCBhbmQgd2FsbC4gVGhvdWdodCB5b3UgbWlnaHQgd2FudCBpdCBiYWNrLiAKQydlc3QgdW4gbGl2cmUgZCdhY3R1YWxpdCA6IHRhbmRpcyBxdWUgbGVzIEdpbGV0cyBqYXVuZXMgcydpbnN1cmdlbnQgY29udHJlIGxlcyB0YXhlcyBjb2xvZ2lxdWVzLCBsZSBwaHlzaWNpZW4gRnJhbm9pcyBHZXJ2YWlzLCBhbmNpZW4gbWVtYnJlIGR1IEdJRUMsIHB1YmxpZSB1biBvdXZyYWdlIGRhbnMgbGVxdWVsIGlsIGRub25jZSBsYSBwcm9wYWdhbmRlIGF1dG91ciBkZSBsJ3VyZ2VuY2UgY2xpbWF0aXF1ZS4gU2Vsb24gbHVpLCAgbGEgbHV0dGUgY29udHJlIGxlIHJjaGF1ZmZlbWVudCBjbGltYXRpcXVlIGVzdCB2YWluZSBldCBsJ2ltcGFjdCBkZSBjZXMgbG9pcyBuJ2VzdCBwYXMgbWVzdXJhYmxlIHBvdXIgbGEgcGxhbnRlIC4gCkhlcmUncyB0aGUgdGhpbmc6IFRoZSByZWFzb24gQm9uZCdzIGRyYW1hdGljIHJldmVhbCBpcyBzbywgd2VsbCwgZHJhbWF0aWMgaXMgdGhhdCBpdCdzIGNvbXBsZXRlbHkgdW5leHBlY3RlZCB0aGF0IGEgcGFpciBvZiBsb3cgY2FyZHMgd291bGQgYWN0dWFsbHkgd2luIHRoZSBnYW1lLiBJdCdzIHN0YXRpc3RpY2FsbHkgbHVkaWNyb3VzIHRoYXQgQm9uZCB3b24gd2l0aCB3aGF0IGhlIGhhZC4gQW5kIHdoaWxlIGl0IHNlZW1zICJzbWFydCIgdGhhdCBoZSB3b3VsZCBzdXJwcmlzZSBldmVyeW9uZSBsaWtlIHRoYXQsIGZvciBhbnlvbmUgd2hvIGtub3dzIGhvdyB0byBwbGF5IHBva2VyLCB0aGUgcmVhbCByZWFzb24gaXQncyBzaG9ja2luZyBpcyBiZWNhdXNlIG5vIGlkaW90IHdvdWxkIGhvbGQgb24gdG8gdGhvc2UgY2FyZHMgaW4gdGhlIGZpcnN0IHBsYWNlLi4gCkJhc2ljYWxseSB0aGUgc3lzdGVtIHVzZXMgc29jayBwdXBwZXQgYWNjb3VudHMsIG1vbml0b3JpbmcgdGhlIGJlaGF2aW9yIG9mIG90aGVyIHBsYXllcnMgb24gYSBtYXNzaXZlIHNjYWxlLiBJdCBidWlsZHMgYSBkYXRhYmFzZSBvZiB0aGVpciBoYWJpdHMsIGFuZCBjaG9vc2VzIHBhdHRlcm5zIHdoaWNoIGFyZSBwcmVkaWN0YWJsZSB0byBzZWxlY3QgaXQgbWFya3MuIApJbiBhIEJyaXRpc2ggc3R1ZHkgcHVibGlzaGVkIGluIDE5NTMsIHNjaWVudGlzdHMgZXhhbWluZWQgdHdvIGdyb3VwcyBvZiB3b3JrZXJzOiBidXMgZHJpdmVycyBhbmQgdHJvbGxleSBjb25kdWN0b3JzLiBBdCBmaXJzdCBnbGFuY2UsIHRoZSB0d28gb2NjdXBhdGlvbnMgYXBwZWFyZWQgdG8gYmUgcHJldHR5IHNpbWlsYXIuIEJ1dCB3aGlsZSB0aGUgYnVzIGRyaXZlcnMgd2VyZSBtb3JlIGxpa2VseSB0byBzaXQgZG93biBmb3IgdGhlaXIgZW50aXJlIGRheSwgdGhlIHRyb2xsZXkgY29uZHVjdG9ycyB3ZXJlIHJ1bm5pbmcgdXAgYW5kIGRvd24gdGhlIHN0YWlycyBhbmQgYWlzbGVzIG9mIHRoZSBkb3VibGUgZGVja2VyIHRyb2xsZXlzLiAKRXJzdCBlaW4gU2V0IGdlZ2VuIHp3ZWkgUGFhcmUsIGRhbm4gZWluZSBnZWZsb3B0ZSBTdHJhZSBnZWdlbiBUb3AgUGFpciB1bmQgZGFubiBub2NoIEtLLiAKSW4gZmFjdCwgcmF0aGVyIG9kZGx5LCBQaGlsIGhhcyB5ZXQgdG8gd2luIGEgYnJhY2VsZXQgaW4gTm8gTGltaXQgSG9sZCdlbSwgd2hpY2ggaXMgdGhlIHByZWRvbWluYW50IGdhbWUgdGhlc2UgZGF5cy4gCkRyIExpdmluZ3N0b25lLCBhIE1vbmFzaCBVbml2ZXJzaXR5IGdhbWJsaW5nIHJlc2VhcmNoZXIsIHNhaWQgdGhlIGdyb3d0aCBpbiBwb2tpZSBtYWNoaW5lIGV4cGVuZGl0dXJlIHdhcyBkYW1hZ2luZyB0aGUgc3RhdGUgZWNvbm9teSBhbmQgdGVhcmluZyBmYW1pbGllcyBhcGFydC4KR2V0IFNvdW5kIG9mIGEga2V0dGxlIHdoaXN0bGluZyBvbiBhIHN0b3ZlLiAKVGhlIHBsYXllciBjYW4gcGxhY2UgYW4gb3B0aW9uYWwgNSsxIEJvbnVzIGJldCB3aGljaCB3aW5zIHdoZW4gdGhlaXIgZml2ZSBjYXJkcyBwbHVzIHRoZSBkZWFsZXIgZmlyc3QgZmFjZSB1cCBjYXJkIGNyZWF0ZSBhIGZpdmUgY2FyZCBoYW5kIG9mIFRocmVlIG9mIGEgS2luZCBvciBiZXR0ZXIuIApUaGF0IG15IGZhdm91cml0ZS4uIApJZiBpdCB3YXNuJ3QgZm9yIG15IGRhZCdzIGNodXJjaCByYWlzaW5nICQ0ayB0byBoZWxwIHdpdGggYmlsbHMgd2Ugd291bGRuJ3QgaGF2ZSBiZWVuIGFibGUgdG8gY3JlbWF0ZSBteSBkYWQgYW5kIG15IG1vbSB3b3VsZCBoYXZlIGJlZW4gb3V0IG9uIHRoZSBzdHJlZXQuLiAKQnV0IHdoYXQgeW91IGRpZG4ndCBhc2sgZm9yIGlzIGEgY29tcGFyaXNvbiBvZiBob3cgbWFueSBwZW9wbGUgZGllIGJ5IG90aGVyIG1lYW5zLiAKTXkgYW5nZWwgaXMgdGhlIGNlbnRlcmZvbGQKMSkgR2V0IGNsZWFuLiBJdCBnb2VzIHdpdGhvdXQgc2F5aW5nIHRoYXQgaWYgeW91IHNleHVhbGx5IHN0aW11bGF0aW5nIGFuIGFyZWEgdGhhdCB1c3VhbGx5IGRldm90ZWQgdG8gZWxpbWluYXRpb24sIHlvdSBuZWVkIHRvIGVuc3VyZSB0aGF0IGl0IHNxdWVha3kgY2xlYW4uIEhhdmUgYSByZWxheGluZyBiYXRoIG9yIHNob3dlciBiZWZvcmVoYW5kIGFuZCB0aG9yb3VnaGx5IGNsZWFuIHRoZSBhcmVhLiBJZiB5b3Ugc2VsZiBjb25zY2lvdXMgYWJvdXQgeW91ciBsb3ZlciBzZWVpbmcgeW91ciBhbnVzIGluIGZ1bGwgZm9yIHRoZSBmaXJzdCB0aW1lLCB3aHkgbm90IGdlbnRseSBzaGF2ZSBvciB3YXggdGhlIHNraW4gYmV0d2VlbiB5b3VyIGJ1dHQgY2hlZWtzPyBZb3UgYmUgc3VycHJpc2VkIGhvdyBtdWNoIG1vcmUgcmVsYXhlZCBhbmQgY29uZmlkZW50IHRoaXMgd2lsbCBtYWtlIHlvdS4KU28gSSB3b3VsZCBub3QgYmUgYWJsZSB0byBtYWtlIGl0IHRvIEluZGlhIHRoaXMgeWVhci4gQnV0IGZvciBzdXJlLCBJIGFtIGNvbWluZyB0byBJbmRpYSBpbiB0aGUgbmV4dCBzZWFzb24sIiBSb25hbGRvLCB3aG8gaXMgY3VycmVudGx5IHBsYXlpbmcgYXQgdGhlIG9uZ29pbmcgQXNpYW4gUG9rZXIgQ2hhbXBpb25zaGlwIGhlcmUsIG9uIFR1ZXNkYXkgdG9sZCBQVEkuIApJdCB3YXMgYSBicmVha3Rocm91Z2ghIE5vLCB0aGUgYnJlYWt0aHJvdWdoIGhhZCBub3RoaW5nIHRvIGRvIHdpdGggdG9sZXJhbnRseSBlbmR1cmluZyBhIGdhcnJ1bG91cyBjYWJiaWUgd2l0aCBhIGRpcGxvbWEgaW4gZmlsbSBhcHByZWNpYXRpb24sIGJ1dCB0aGUgbGliZXJhdGluZyBhd2FyZW5lc3MgdGhhdCBJIGNvdWxkIGdhbWJsZSBpbiBNYWNhdSwgZXZlbiBpZiBJIHdhcyBhIGN1cmQgcmljZSBlYXRpbmcgSXllci4gQmVzaWRlcywgbXkgd2lmZSB3YXMgc3RpbGwgaW4gTXVtYmFpLi4gCkxpa2UgdGhlIHRpbWUgbXkgbWFuYWdlciBjYXZlZCB0byBhIGN1c3RvbWVyIHdobyByZXR1cm5lZCBhIHRocmVlIHllYXIgb2xkIHNjcmF0Y2hlZCwgc2N1ZmZlZCwgYnJva2VuIHdhdGNoIGZvciBhIGZ1bGwgcmVmdW5kIGJlY2F1c2UgaGVyIHNvbiAiZGlkbiB3YW50IGl0IGFueW1vcmUuIiBPciB0aGUgdGltZSBteSBtYW5hZ2VyIGNhdmVkIHRvIGEgY3VzdG9tZXIgd2hvIHJldHVybmVkIGEgdHdvIHllYXIgb2xkIHdvcm4gb3V0IHBhaXIgb2YgcGFudHMgZm9yIGEgZnVsbCByZWZ1bmQgYmVjYXVzZSBoZXIga2lkIG91dGdyZXcgdGhlbS4gCk9uIGNvbGxlZ2UgY2FtcHVzZXMsIG1lbiB3aG8gcGxheSBsYWNyb3NzZSBhcmUgYXQgdGhlIHRvcCBvZiB0aGUgc3RyaWN0IGhpZXJhcmNoeSBvZiBtYXNjdWxpbml0eSBhbmQgaGV0ZXJvc2V4dWFsIGRlc2lyZS4geW91bmcgbWVuIGhhdmUgYSBjZXJ0YWluIHNvbWV0aGluZyBhYm91dCB0aGVtLCBhIGNlcnRhaW4gbGV2ZWwgb2YgcHJlc3RpZ2UgYXMgIm1lbiIgd2hvIGFyZSAic3RyYWlnaHQiIGFuZCAidG91Z2giIGJ1dCBub3QgIm1lYXRoZWFkcyIgb3IgYXMgd29ya2luZyBjbGFzcyBhcyBmb290YmFsbCBwbGF5ZXJzLiB0ZW5kIHRvIGJlICJicm9zIiAgIGEgc29ydCBvZiBzZWVtaW5nbHkgbGFpZCBiYWNrIG1hc2N1bGluaXR5IHRoYXQgYWN0dWFsbHkgbWFza3MgYSBsb3Qgb2YgZmVhciB0aGF0IHRoZXkgd29uIGJlIGFibGUgdG8gIm1hbiB1cCIgd2hlbiB0aGUgdGltZSBjb21lcy4gc3R1ZGVudHMsIHVuZGVyc3RhbmRpbmcgdGhhdCBsYWNyb3NzZSBtZW4gYXJlIHRoZSBydWxpbmcgZWxpdGUgb2YgY2FtcHVzIHdpdGggbW9yZSBhYmlsaXR5IHRvIGhvb2sgdXAgdGhhbiBvdGhlciBncm91cHMgb2Ygc3RyYWlnaHQgbWVuLCBvZnRlbiByZWZlciB0byB0aGVtIGFzIHRoZSBicm9nZW9pZ3NpZSAocHJvbm91bmNlZCBsaWtlIGJvdXJnZW9pc2llICBidXQgd2l0aCAiYnJvIikuCkNvbW1vbiBzZW5zZSB0ZWxscyB1cyB0aGF0IHRoZSBrZXkgdG8gc3VjY2VlZGluZyBpbiBhIHRyaWF0aGxvbiBpcyBzd2ltbWluZywgcmlkaW5nIG9yIHJ1bm5pbmcgYXMgZmFzdCBhcyBwb3NzaWJsZSAgIGJ1dCBvbmx5IHVwIHRvIGEgY2VydGFpbiBwb2ludC4gVW5sZXNzIHlvdSdyZSBjb21wZXRpbmcgaW4gYSBzcHJpbnQgdHJpYXRobG9uIChhIGZyYWN0aW9uIG9mIHRoZSBsZW5ndGggb2YgYW4gSXJvbm1hbiB0cmlhdGhsb24pLCB5b3UgY2FuJ3QgcG9zc2libHkgZ28gZnVsbCB0aWx0IGZvciB0aGUgZW50aXJlIHJhY2UuIApUaGUgVk0gdGhhdCB0aGUgb2ZmaWNlcnMgc2FpZCB0aGV5IGhhZCwgVFdPLCBzaG93aW5nIFRIIG1vdmVtZW50cyBhbmQgZGV0YWlscyBvZiBoZXIgZGF5LCB3ZWxsIG9uZSBpcyBtaXNzaW5nLiBXaGljaCBvbmU/IFNoZSBhc2tlZCBmb3IgZGlyZWN0aW9ucywgeWV0IHdlIGNhbiBub3Qgc2VlIGFueW9uZSwgbm90IHRoZSBaaXBwZXIgb3IgdGhlIEphbmRhIGNhbGwgYmFjayB0byBhY3R1YWxseSBnaXZlIGhlciBkaXJlY3Rpb25zIHRvIGEgaG9tZSBzaGUgY291bGQgbm90IGZpbmQsIHlldCBzaGUgZm91bmQgYm90aCBhbmQgdG9vayBwaG90b3M/CkhvdyB3b3VsZCBtb3JlIHNvbGRpZXJzICJ3aW4iIHRoZSB3YXI/CldoZW4gdGhlIGFsaWdubWVudCBvZiBib2R5IHBhcnRzIGlzIGFsdGVyZWQsIHRoZSBzdHJlc3NlcyBhcmUgY2hhbmdlZCwgYW5kIHRoaXMgbWF5IGxlYWQgdG8gdmFyaW91cyB0eXBlcyBvZiBiaW9tZWNoYW5pY2FsIHByb2JsZW1zLiBCb3RoIHRoZSBzb2Z0IHRpc3N1ZXMgYW5kIGJvbmVzIG11c3QgcmVzcG9uZCB0byB0aGVzZSBjaGFuZ2VzIG9yIGJlIGRhbWFnZWQuCkxpa2Ugb3RoZXIgcGlsb3RzLCBQb3dlcnMgd2FzIGxlZXJ5IG9mIGVqZWN0aW9uIHNlYXRzLiBBY3RpdmF0ZWQsIHRoZXkgc2hvdCBwaWxvdHMgdGhyb3VnaCB0aGUgcGxhc3RpYyBjYW5vcHkgbGlrZSBodW1hbiBjYW5ub25iYWxscy4gCidDcm9jcyBhcmUgYWJvdXQgYXMgdW4gcm9jayBhcyBpdCdzIHBvc3NpYmxlIHRvIGJlLiBBbG1vc3QgYW50aSByb2NrLiBBbnRpIHJvY2sgQ3JvY3MuIApJZiB0aGUgbWFzc2V1c2UgdXNlcyBvaWwsIHBvcmVzIGFuZCBza2luIHdpbGwgYWxzbyBhY3F1aXJlIG5vdXJpc2htZW50IGFuZCBoeWRyYXRpb24uIApFcyB3YXIgZ2VuYXUgZGFzLCB3YXMgaWNoIHN1Y2h0ZSwgdW5kIHdhciBiZWdlaXN0ZXJ0LCBlaW5lIFZpZWx6YWhsIHZvbiBBcnRpa2VsbiB6dSBmaW5kZW4uIApJZiB5b3UgbG9zZSwgeW91IHB1dHRpbmcgdXAgJDEwLDI0MCB0byB3aW4gdGhlIHNhbWUgJDUuIElmIHRoZSB0YWJsZSBtYXhpbXVtIGlzICQyNSwwMDAgYW5kIHlvdSBsb3NlIDEyIGluIGEgcm93LCB5b3UgY2FudCBjb3ZlciB5b3VyIGxvc3NlcyB3aXRoIGJldCAxMy4gCihJIGFtIG5vc3kgQUYgYW5kIHdvcmsgZm9yIGEgZmlybSB3aGVyZSBJIHJlZ3VsYXJseSBkbyBiYWNrZ3JvdW5kIGNoZWNrcyBwcm9wZXJ0eSBjaGVja3Mgb24gY2xpZW50cyBhbmQgaW4gbXkgc3BhcmUgdGltZSBJIGxpa2UgZG9pbmcgY2hlY2tzIG9uIEQgbGlzdCByZWFsaXR5IHBlZXBzKSAxMCBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvS3lsZSBkaWQgZXhwbGFpbiBpdCBpbiBhIGxhdGVyIHNlYXNvbiAoSSBmb3JnZXQgd2hpY2ggb25lICAgSSB3YW50IHRvIHNheSBpdCB3YXMgdGhlIGZpcnN0IHNlYXNvbiBMaXNhIFJpbm5hIHdhcyBvbikuIApCZXN0IHdheSBsb2dpc3RpY2FsbHkgZm9yIG1lIHRvIGRvIGl0IGlzIGZpcnN0IGNvbWUgZmlyc3Qgc2VydmUgYW5kIGdvIGRvd24gdGhlIGxpc3Qgb2YgZXZlcnlvbmUuIApXZSB1c3VhbGx5IHBsYXkgcG9rZXIgdW50aWwgbWlkbmlnaHQgYW5kIHRoZW4gdGhlIGdhbWUgc3RhcnRzIHdoZW4gd2UgZG9uZS4uIApUaGlzIHdhcyBhIG1pbm9yIGluanVyeSEgSSBmb3VuZCBhIGRpZmZlcmVudCBQVCB3aG8gd2FzIGEgcnVubmVyIGFuZCBoZSB3YXMgZ3JlYXQuIEJlIHBhdGllbnQsIGZpbmQgYSBnb29kIGRvY3RvciBvciBQVCB3aG8gY2FuIGhlbHAgeW91LCBtYXliZSBhIHNwb3J0cyBtZWRpY2luZSBwZXJzb24/IEdvb2QgbHVjayEuIApJIGFsd2F5cyB0cmllZCB0byBkZWZlbmQsIGV2ZW4gaW4gc29tZSB0cnlpbmcgdGltZXMuIEJ1dCBpdCBzZWVtZWQgbGlrZSB0aGV5IGhhZCBmaW5hbGx5IGZvdW5kIHRoZWlyIGdyb292ZSBhbmQgRm94IHdhcyBnaXZpbmcgdGhlbSB0aGUgY2hhbmNlIHRvIGZpbmlzaCBzdHJvbmcgYW5kIEknbSBub3Qgc3VyZSBJJ20gZmVlbGluZyBpdC5JJ20gYSBsaXR0bGUgYml0IHdvcnJpZWQgdGhhdCBtYXliZSB0aGV5J3JlIGp1c3QgaW4gYSBzaGl0IHBvc2l0aW9uIGJlY2F1c2UgdW5saWtlIHNvIG1hbnkgb3RoZXIgc2VyaWVzIGVuZGluZ3MgaW4gd2hpY2ggdGhlIGdvYWwgaXMgdG8gd3JhcCB1cCBzdG9yeWxpbmVzIGFuZCBzYXkgZ29vZGJ5ZSB0byBjaGFyYWN0ZXJzIHRoaXMgaXMgdGhlIG9wcG9zaXRlLiAKSWYgaXQgd2VyZSB0byBmb2xsb3cgdGhpcyBzdHJhdGVneSwgUE1VIGNvdWxkIGRyYXN0aWNhbGx5IHJldmVyc2UgdGhlIEdyZWVrIHJhY2luZyBpbmR1c3RyeSBkb3dud2FyZCBtb21lbnR1bS4gQWx0aG91Z2ggR3JlZWNlLCBsaWtlIEZyYW5jZSwgaGFzIGEgaGlzdG9yeSBvZiBob3JzZSByYWNlIGJldHRpbmcsIHRoZSBzdGF0ZSBvZiByYWNpbmcgaW4gR3JlZWNlIGlzIGluIGEgZG93bndhcmQgc3BpcmFsIGluIHdoaWNoIGFuIGluc3VmZmljaWVudCBudW1iZXIgb2YgcmFjZXMgcmVzdWx0cyBpbiBtZWFnZXIgYmV0dGluZyByZXZlbnVlLCB3aGljaCBmdXJ0aGVyIHJlZHVjZXMgdGhlIG51bWJlciBvZiByYWNpbmcgZXZlbnRzLiAKUHVsc2UgYSBmZXcgdGltZXMgdG8gY29tYmluZS4gCkhvd2V2ZXIsIGhlIHNlZXMgbW9yZSBhbmQgbW9yZSAoZnVsbHkgdmVpbGVkKSB3b21lbiBmb3IgYm9vYiBqb2JzIGFuZCBsaXBvLiAKT24gRnJpZGF5IGV2ZW5pbmcsIHN0YWZmIGZyb20gYnVzaW5lc3NlcyBpbiBUb3JvbnRvJ3MgR3JlZWt0b3duIHdlcmUgZXhwZWN0ZWQgdG8gZ2F0aGVyIGZvciBhIG1vbWVudCBvZiBzaWxlbmNlLgpDb25ncmVzc21hbiBTaWx2ZXN0cmUgUmV5ZXMgKEQgIFRYKSwgaXMgQ2hhaXIgb2YgdGhlIEhvdXNlIEludGVsbGlnZW5jZSBDb21taXR0ZWUgYW5kIGhlIHdhbnRzIENvbmdyZXNzIHRvIHRha2Ugc29tZSBvZiB0aGUgYmxhbWUgZm9yIHRoZSB0b3J0dXJlIG9mIHByaXNvbmVycy4gCkRhcmtvMzMgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KKEFjY29yZGluZyB0byB0aGUgT3hmb3JkIEVuZ2xpc2ggRGljdGlvbmFyeSwgdGhlIGZpcnN0IHVzZSBvZiB0aGUgd29yZCBmb3IgYSBidWlsZGluZyB3YXMgcHJlY2VkZWQgYnkgaXRzIHVzYWdlIGZvciBhIHRhbGwgaG9yc2UgKDE3ODgpLCBhIHRhbGwgYm9ubmV0ICgxODAwKSwgYSBzaGlwIHNhaWwgKDE4MDEpLCBhbiBleGFnZ2VyYXRlZCBzdG9yeSAoMTg0MCksIGFuZCBhIGhpZ2ggaGl0IGJhbGwgKDE4NDIpLCBiZWZvcmUgaXQgY2FtZSB0byByZXN0IG9uIGEgYnVpbGRpbmcgaW4gMTg4NCBhbmQgMTg4OS4pIFRoZSBzZWN1bGFyIGJ1aWxkaW5ncyB3ZXJlIG5vdCB0YWxsZXIgdGhhbiB0aGUgbm9uIHNlY3VsYXIgb25lcyAobGlrZSB0aGUgUm91ZW4gYW5kIENvbG9nbmUgY2F0aGVkcmFscykgdW50aWwgdGhlIGVhcmx5IG5pbmV0ZWVuIG91Z2h0cy4gU2hlIHdyb3RlIGEgYSBsb3ZlbHkgYW5kIG15c3RlcmlvdXMgYm9vayAxOTAxIChhIHNlY29uZCBlZGl0aW9uIGFwcGVhcmluZyB0d28geWVhcnMgbGF0ZXIpIGNhbGxlZCBQcm9ibGVtcyBmb3IgdGhlIExheW1hbiwgaW4gd2hpY2ggc2hlIHNvdWdodCBub3Qgc28gbXVjaCB0byBhbmFseXplIHRoZSBjb21wb25lbnRzIG9mIGNvbG9yIGl0c2VsZiwgYnV0IHJhdGhlciB0byBxdWFudGlmeSB0aGUgb3ZlcmFsbCBpbnRlcnByZXRhdGl2ZSBlZmZlY3Qgb2YgY29sb3Igb24gdGhlIGltYWdpbmF0aW9uIEkgdGhpbmsuIApMYXRlciBjaGFwdGVycyBkZWFsIHdpdGggU3VwcG9ydCBzZXJ2aWNlcyAgIHRoZSBub24gYWNhZGVtaWMgc3RhZmYgbWVtYmVycyB3aG8ga2VlcCB0aGUgdW5pdmVyc2l0eSBydW5uaW5nICAgYW5kIG9uIGJ1aWxkaW5ncyBhbmQgdGVhY2hpbmcuIFRoZSBmaW5hbCBjaGFwdGVyIG9uICJPdGFnbydzIHBsYWNlIGluIHRoZSB3b3JsZCIgaXMgYW4gZXNzYXkgc3VtbWFyaXNpbmcgc29tZSB0aGUgbG9uZyB0ZXJtIGFjaGlldmVtZW50cyBvZiBtZW1iZXJzIG9mIHRoZSB1bml2ZXJzaXR5IGNvbW11bml0eS4gCkV2ZW4gaWYgdGhlIHJpZGVyIGtub3duIGFzICdUaW50aW4nIGRpZCBub3QgY2FwdHVyZSB0aGUgNDNyZCBBbXN0ZWwgR29sZCBvbiBTdW5kYXkgaGUgZGlkIGlzc3VlIGEgdGhyZWF0IHRoYXQgaGUgaXMgb24gZm9ybSB0byBwb3RlbnRpYWxseSBibGFzdCBoaXMgcml2YWxzIGluIFdlZG5lc2RheSdzIEZsY2hlIFdhbGxvbm5lIG9yLCBtb3JlIGltcG9ydGFudGx5LCBTdW5kYXkncyBMaWdlIEJhc3RvZ25lIExpZ2UuIApJJ20ganVzdCBzYXlpbmcgdGhhdCB5b3Ugc2VlbWVkIHRvIGhhdmUgYmVuZWZpdHRlZCBncmVhdGx5IGFuZCBpZiB5b3UgY291bGQgZ2l2ZSBvdGhlciBwZW9wbGUgdGhlIHNhbWUgb3Bwb3J0dW5pdHkgdGhlbiBpdCB3b3VsZCBiZSBhIHJlYWxseSBncmVhdCBnaWZ0IHlvdSBjb3VsZCBnaXZlLi4gCkluZGVlZCwgdXAgdW50aWwgcmVjZW50IHllYXJzLCB0aGUgbW9yZSBwb3B1bGFyIGRlc3RpbmF0aW9uIHdhcyBhbG9uZyB0aGUgc291dGhlcm4gZWRnZSBvZiB0aGUgbWFpbmxhbmQgcG9ydGlvbiBvZiB0aGUgY291bnRyeSwga25vd24gYXMgdGhlIEFsZ2FydmUuIApJbnZlc3RpZ2F0aW5nIHdoaWxlIHRoZSBwdWJsaWMgaXMgcm9hbWluZyBhcm91bmQgaXMgYSB3YXN0ZSBvZiB0aW1lLi4gCldobyBhcmUgc2FtZSBzZXggaGF2ZSBiZWVuIGRpc2NyaW1pbmF0ZWQgYWdhaW5zdCwgYnV0IHRoZXkgZG9uIGRlc2VydmUgdGhlIHJpZ2h0IHRvIGJlIG5lYXIgc2ljayBsb3ZlZCBvbmVzIGJ5IHZpcnR1ZSBvZiB0aGVpciBjb3VwbGluZyBhbnltb3JlIHRoYW4gdGhlIEtpbmdzIGRlc2VydmUgdGhlaXIgcmlnaHRzIGFuZCBwcml2aWxlZ2VzIGJ5IHZpcnR1ZSBvZiBiZWluZyB3ZWFsdGh5LCB3aGl0ZSBhbmQgc3RyYWlnaHQuIApUaGluayBwcm9iYWJseSBteSBmYXZvcml0ZSBwYXJ0IGlzIHRoZSBzYWx1dGUgdG8gdGhlIGZhbGxlbiBmaXJlZmlnaHRlcnMsIFByYXNjaGVyIHNhaWQuIGZpcmVmaWdodGVycyBnaXZlIGEgbG90IGFuZCBkb24gZ2V0IG11Y2ggKGluIHJldHVybik7IGl0IG5pY2UgdG8gdGFrZSB0aW1lIHRvIHJlY29nbml6ZSB0aGVtIChpdCBhIHJlYWxseSB3b3J0aHdoaWxlIGNhdXNlLgpUaGUgZ2FtZSBpcyBhIHR1cm4gYmFzZWQgc3RyYXRlZ3kgYmFzZWQgb2ZmIG9mIHRoZWlyIG9yaWdpbmFsIGdhbWUsIFJ1bmVzY2FwZSAod2hpY2ggaXMgZ3JlYXQgaXRzZWxmKS4gVGhlIHJlYXNvbiB3aHkgdGhpcyBnYW1lIGlzIHNvIGdvb2QgaXMgaXQgaGFzIGEgdmVyeSBhcHBlYWxpbmcgcmFuZ2Ugb2YgY29tYmF0IHN0cmF0ZWd5IGFuZCBtb3N0IG9mIHRoZSB0aW1lIHBsYXllcnMgc3RhcnQgb24gYSBsZXZlbCBncm91bmQuIApTaXh0eSBwYWludGluZ3MgYW5kIHNjdWxwdHVyZXMgb24gbG9hbiBmcm9tIHRoZSBCcm9va2x5biBNdXNldW0gY292ZXIgdGhlIGtleSBtb3ZlbWVudHMgaW4gYW5kIGFyb3VuZCBQYXJpcyBiZXR3ZWVuIDE4NTAgYW5kIDE5NTAuIE9yZ2FuaXplZCBpbnRvIHNldmVyYWwgc2VjdGlvbnMsIEZyZW5jaCBNb2Rlcm5zIGV4aGliaXRzIHdvcmsgYnkgUGllcnJlIEJvbm5hcmQsIEd1c3RhdmUgQ2FpbGxlYm90dGUsIFBhdWwgQyBNYXJjIENoYWdhbGwsIEplYW4gQmFwdGlzdGUgQ2FtaWxsZSBDb3JvdCwgR3VzdGF2ZSBDb3VyYmV0LCBFZGdhciBEZWdhcywgTWFuZXQsIEhlbnJpIE1hdGlzc2UsIENsYXVkZSBNb25ldCwgQmVydGhlIE1vcmlzb3QsIEdhYnJpZWxlIE0gUGllcnJlIEF1Z3VzdGUgUmVub2lyIGFuZCBBdWd1c3RlIFJvZGluLgpUaGUgbmV4dCBjb2xvciB0aGF0IHlvdSBzaG91bGQgYmUgZmFtaWxpYXIgd2l0aCB3aGVuIGl0IGNvbWVzIHRvIENsYXkgQ2FzaW5vIFBva2VyIENoaXBzIGlzIHJlZC4gVGhlc2Ugc3RhbmQgZm9yIHRoZSBtb25leSBhbW91bnQgb2YgJDUuMDAuIApZb3UgbWF5IGtub3cgYWxyZWFkeSB0aGF0IHNpdCBhbmQgZ28gYWN0aW9uIGlzIHdoZXJlIGEgZ29vZCwgc29saWQgcG9rZXIgYmFua3JvbGwgY2FuIGJlIGJ1aWx0LiBZb3UgZ2V0IHRvIGNob29zZSB5b3VyIG1heGltdW0gcmlzaywgYW5kIHBsYXkgYWdhaW5zdCBhIHZhcmlldHkgb2YgdGFsZW50IGdpdmluZyB5b3UgcGxlbnR5IG9mIHZhbHVlIGZvciB5b3VyIGJ1eSBpbiwgdW5mb3J0dW5hdGVseSwgbW9zdCBwb2tlciBjYWxjdWxhdG9ycyBhcmUgbm90IGRlc2lnbmVkIGZvciBzaXQgYW5kIGdvIHBva2VyLiAKVGhlIHByb2JsZW0gaXMgYSBsb3Qgb2Ygc21hbGwgZ3Jhc3Nyb290cyB0b3VybmFtZW50cyBhcmVuIGV4cGVyaWVuY2VkIGVub3VnaCB0byBrbm93IHdoYXQgdG8gZG8gdG8gbWFya2V0IHRoZW1zZWx2ZXMgb3IgZ2V0IHNwb25zb3JzLlBsZWFzZSBleGN1c2UgbXkgc2hpdHR5IHN5bnRheCBhbmQgbGFjayBvZiBiZWluZyBhYmxlIHRvIHByb3Blcmx5IGV4cGxhaW4gbXlzZWxmLiAKRm9yIHRoZSBob21lIHBva2VyIHBsYXllcnMsIGV2ZXJ5IHBva2VyIG5pZ2h0IGlzIGEgcGFydHkuIE5vd2FkYXlzLCBhbnkgb25lIGNhbiBob3N0IHRoZWlyIG93biBwb2tlciBwYXJ0aWVzIHdpdGggdGhlIGFwcHJvcHJpYXRlIHN1cHBsaWVzIGluIHRvdy4gSXQgaXMgdXN1YWxseSB3aXNlIHRvIHN0YW5kIGJ5IHRoZSBiYXNpY3Mgb2YgcG9rZXIsIGluc2VydCBpbiBhIGxpdHRsZSBmbGFpciwgYW5kIGNyZWF0ZSB0aGlzIGtpbmQgb2YgcGFydHkgZW5qb3lhYmxlIGZvciBldmVyeW9uZS4gQSBwb2tlciBnYW1lIHBhcnR5IGNhbiBiZSBhIGdyZWF0IGV4cGVyaWVuY2UgdG8gZ2V0IGFjcXVhaW50ZWQgd2l0aCB0aGUgbmVpZ2hib3JzIGFzIHdlbGwgaWYgeW91IGFyZSBuZXcgaW4gdG93bi4gWW91IGNhbiBkZWFsIGZvciByZWFsIGNhc2ggb3IganVzdCBmb3IgZnVuLiBBcyBwb2tlciBpcyBxdWlja2x5IGJlY29taW5nIGEgc291Z2h0IGFmdGVyIGFjdGl2aXR5LCBwb2tlciBwYXJ0eSBzdXBwbGllcyBhcmUgaW4gZGVtYW5kIGFzIHdlbGwuClNvbWUgY291bGQgYmUgd3JpdHRlbiBieSBhIG5vIHRhbGVudCBoaWdoIHNjaG9vbGVyLCBzb21lIGFyZSBhcyB0aWdodCBhbmQgY3JhZnRlZCBhcyB0aGUgYmVzdCBvZiBDYXJ2ZXIuIApTZWUgYW4gRU5ULiAKRXZlbnR1YWxseSBzb21lb25lIG1lbnRpb25lZCBibG93IGRyeWluZyBhbmQgY3VybGluZyB0aGVpciBoYWlyLCBhbmQgSSB3YXMgbGlrZSAid2hhdD8gRXZlcnkgZGF5PyIgQW5kIHRoYXQncyB3aGVuIEkgcmVhbGl6ZWQgbW9zdCBvZiB0aG9zZSBzbGVlayBnbG9zc3kgbGFkaWVzIGhlYXQgc3R5bGUgdGhlaXIgaGFpciBldmVyeSBnb2RkYW1uIGRheS4gSSBkb24ndCBqdXN0IGhhdmUgaW5leHBsaWNhYmx5IHNoaXR0eSBoYWlyIGJlY2F1c2UgaXQgZG9lc24ndCBsb29rIGxpa2UgYSBzaGFtcG9vIGNvbW1lcmNpYWwgd2hlbiBJIGxldCBpdCBhaXIgZHJ5IHdpdGggbm8gcHJvZHVjdCEgSXQncyBhIGxpdHRsZSBlbWJhcnJhc3NpbmcgaG93IHN1cnByaXNlZCBJIHdhcy4gCllvdSBuZWVkIHRvIGNvcnJlY3QgdGhlIHdpbmdpbmcuIFB1bGxpbmcgYXMgeW91IHNheSBpcyBhIG11c3QgYnV0IGFsc28geW91IG5lZWQgdG8gZG8gbG90cyBvZiBmYWNlIHB1bGxzLiBWZXJ5IGNvbnRyb2xsZWQsIGxvdyB3ZWlnaHQgZm9jdXMgb24gdGhlIGJhY2sgbXVzY2xlcy4gU3RyZXRjaCB0aGUgY2hlc3QgcmVndWxhcmx5LiBTdHJlbmd0aGVuIHRoZSBtdXNjbGVzIHRoYXQgcmV0cmFjdCB0aGUgc2NhcHVsYS4gVGhlcmUgaXMgYSBnb29kIGV4ZXJjaXNlIGhhbmdpbmcgZnJvbSBhIGJhciB5b3Ugb25seSBkbyB0aGUgZmlyc3QgcGFydCBvZiBhIHB1bGwgdXAsIGRyb3BwaW5nIHRoZSBzaG91bGRlcnMgcmVhbGx5IHRoaWdodC4gSWYgaXRzIGVhc3kgYWRkIHdlaWdodC4KSW4gZm9yZWlnbiBwb2xpY3kgbWF0dGVycywgdGhlIGNvdXJ0cyBzaG91bGQgd29yayB3aXRoIHRoZSBiZXN0IGludGVyZXN0cyBvZiB0aGUgQW1lcmljYW4gcGVvcGxlIGluIG1pbmQuIApUcm9vcHMgaGFzIG9ubHkganVzdCBiZWd1bi4gVGhlIGV4cGxhbmF0aW9uLCBzZW5pb3IgV2hpdGUgSG91c2Ugb2ZmaWNpYWxzIHNhaWQsIGlzIHRoZSBiZWhpbmQgdGhlIHNjZW5lcyBlZmZvcnQgYnkgQm9sdG9uLi4gCkkgcmVtZW1iZXIgbXkgdGVhY2hlcnMgdGFsa2luZyBhYm91dCB0aGlzIGxhdyBhbmQgc3RyZXNzaW5nIHRoZSBpbXBvcnRhbmNlIG9mIGl0IGFsbCB0aGUgdGltZSB3aGVuIGl0IHdhcyBpbnRyb2R1Y2VkIGEgZmV3IHllYXJzIGJhY2suLiAKUmVtZW1iZXIgdGhhdCB0aGUgTGl0dGxlIFRoaW5ncyBDb3VudCB0aGUgTW9zdC4gSWYgeW91IHdhbnQgdG8gYmUgY29uc2lkZXJlZCBzcGVjaWFsIGFuZCB1bmRlcnN0YW5kaW5nIHRoZW4geW91IG5lZWQgdG8gc2hvdyBoZXIgeW91IGFyZSBkZXNlcnZpbmcgb2Ygc3VjaCBhIHRpdGxlLiBUaGUgYmVzdCB3YXkgdG8gZG8gdGhhdCBpcyB0byByZW1lbWJlciBhbGwgdGhlIGxpdHRsZSB0aGluZ3MgdGhhdCBhcmUgaW1wb3J0YW50IHRvIGhlci4KSSBmZWx0IHByZXR0eSBncm9zcyBhZnRlciB0aGF0OyBpdCBzZWVtcyBsaWtlIHRoZXJlIG5lZWRzIHRvIGJlIHNvbWUgdmVyeSBzdHJvbmcgdmV0dGluZyBvZiBzb21lIG9mIHRoZXNlIGNhc2VzIGZvciBzaG93cyBsaWtlIHRoaXMuIApSZXNpc3RlZCBoaXAgZmxleGlvbiAoZ3JhZHVhbGx5IGluY3JlYXNpbmcgcmVzaXN0YW5jZSkgd2l0aCB5b3VyIGtuZWUgYmVuZGluZyBhdCB0aGUgc2FtZSB0aW1lIChsaWtlIGtuZWVpbmcgc29tZW9uZSBpbiB0aGUgZ3JvaW4pLCB3aWxsIGNvbmZpcm0gb3IgcnVsZSBvdXQgc2FydG9yaXVzIGludm9sdmVtZW50LgogVmluY2VudCB2YW4gR29naFRoZXJlIGFyZSBvbmx5IHR3byB3YXlzIHRvIGxpdmUgeW91ciBsaWZlOiBvbmUgaXMgYXMgdGhvdWdoIG5vdGhpbmcgaXMgYSBtaXJhY2xlOyB0aGUgb3RoZXIgaXMgYXMgaWYgZXZlcnl0aGluZyBpcyBhIG1pcmFjbGUuIApBbHNvLCB5b3Uga25vdyAiZ292ZXJubWVudCByZWd1bGF0aW9uIiBpc24gYSBzb21lIHZhZ3VlIHRlcm0gd2hlbiBpdCBjb21lcyB0byBzaGlmdGluZyBzdXBwbHkgYW5kIGRlbWFuZCBjdXJ2ZXMuIFRoZXJlIGFyZSBjb21wbGlhbmNlIGNvc3RzLCBzdWJzaWRpZXMsIHByaWNlIGZsb29ycywgcHJpY2UgY2VpbGluZ3MsIGV0Yy4KSGUgaGFkIHRoZSA2LCBtZSB0aGUgSmFjaywgYW5kIGhlIGp1c3QgY291bGQgbm90IGxldCBnbyBvZiB0cmlwcy4uIAoiQmFybnVtIGZpcnN0IGRpcHBlZCBoaXMgdG9lcyBpbiB0aGUgcG9saXRpY2FsIHdhdGVycyBpbiAxODY1LCB3aGVuIGhlIHdvbiBhIHNlYXQgaW4gdGhlIENvbm5lY3RpY3V0IEdlbmVyYWwgQXNzZW1ibHkgYXMgYSBSZXB1YmxpY2FuLiBEZXNwaXRlIGhpcyBwYXN0IG93bmVyc2hpcCBvZiB0aGUgc2xhdmUgSm9pY2UgSGV0aCwgaGUgcXVpY2tseSBkaXN0aW5ndWlzaGVkIGhpbXNlbGYgYXMgb25lIG9mIHRoZSBsZWdpc2xhdHVyZSdzIG1vc3QgaW1wYXNzaW9uZWQgYWR2b2NhdGVzIG9mIEFmcmljYW4gQW1lcmljYW4gZXF1YWxpdHkgYW5kIHZvdGluZyByaWdodHMuIApNb3RvcmN5Y2xpc3QgZGllcyBpbiBjcmFzaCBkdXJpbmcgY2hhcml0eSBldmVudApBbiBpZGVvbG9neSwgaW4gdGhlIG1lYW50aW1lLCBpcyBsZWZ0IG9yIHJpZ2h0IHdpbmcgYmFzZWQgb24gaXRzIGVmZmVjdCBvbiBzb2NpZXR5LiBCeSBtYWtpbmcgdGhlIHJpY2ggcmljaGVyIGFuZCB0aGUgcmVzdCBvZiBzb2NpZXR5IHBvb3JlciwgYnkgbWFraW5nIHdoaXRlIHBlb3BsZSB0aGUgbWFzdGVyIHJhY2UgYW5kIGVuc2xhdmluZyBhbGwgdGhlIGNvbG9yZWQgcGVvcGxlLCBieSBwcm9tb3RpbmcgdGhlIGludGVyZXN0cyBvZiBtZW4gb3ZlciB0aGUgaW50ZXJlc3RzIG9mIHdvbWVuLCBldGMuKSBpdCByaWdodCB3aW5nLi4gClJpY2hzYWludDQyMSAgNCBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KSSBzYXcgdGhpcyBkZXNpZ24gb24gZHJpYmJibGUgYW5kIHRob3VnaHQgaXQgd291bGQgYmUgZnVuIHRvIG1ha2Ugam9iIGFkIGZvciBhIGxvY2FsIGJ1c2luZXNzIG91dCBvZiBpdCwgc2luY2UgdGhleSBoYXZlIGEgbG9nbyB0aGF0IHdvdWxkIGJlIHByZXR0eSBzd2VldCBmb3IgdGhpcyB0eXBlIG9mIGRlc2lnbi4gSSBrbm93IHdoYXQgSSBkaWQgaXMganVzdCBhIHN0cmFpZ2h0IHVwIGNvcHksIGJ1dCB0aGlzIHdhcyBtb3JlIG9mIGFuIGV4cGVyaW1lbnQgdG8gZ2V0IGF0bGVhc3Qgc29tZXRoaW5nIHJpZ2h0IChhbmQgc29ycnkgZm9yIHRoZSAic2NyYW1ibGVkIHRleHQiIGJ1dCBJIGRvbiB3YW50IHRvIGdpdmUgdGhlIGJ1c2luZXNzIHNwYW0pLiBTbyBJIGNyZWF0ZWQgdGhpcy4gQW5kIGl0IGp1c3QgZG9lc24gZml0IGF0IGFsbC4gSSBhbmFseXplZCB0aGUgb3JpZ2luYWwsIHRyaWVkIHRvIHNlZSBob3cgaGUgY2FtZSB1cCB3aXRoIHRoZSBwb3NpdGlvbmluZyBhbmQgZXZlcnl0aGluZyBhbmQgYXBwbGllZCBpdCB0byBtaW5lLiBJIGNob3NlIGZvbnRzIHRoYXQgSSB0aGluayBhcmUgcmlnaHQgZm9yIHRoZSBtZXNzYWdlIGFuZCBnbyB3ZWxsIHRvZ2V0aGVyLiBCdXQgaXQgZG9lc24gd29yayBhbmQgSSBkb24ga25vdyB3aHkuCidUaGlzIGlzIGEgc2lkZSBvZiBoaW0gSSBoYXZlIG5ldmVyIHNlZW4gYmVmb3JlICAgYml0dGVyLCBpbW1hdHVyZSwgZnVsbCBvZiBoYXRyZWQuIApBIHJ1YmJlciBtYWxsZXQgaGFkIHRvIGNvbWUgb3V0LCB3aGljaCBJIHJlYWxseSBub3QgYSBmYW4gb2YgaGF2aW5nIHRvIGRvLiAKVGhlc2UgYXJlIGJvdGggY29tcGxldGVseSB2YWxpZCBjb21wbGFpbnRzIGZvciBlbnRlcnByaXNlIHNjYWxlIHVzZXJzLiBUaGlzIHZpZGVvIGlzbiB0YXJnZXRpbmcgaG9tZSB1c2VycywgaXQgdGFyZ2V0aW5nIGEgY29ycG9yYXRpb24gd2hpY2ggaGFzIGEgMTAwIHBlcnNvbiB3b3JrZmxvdyBiZWhpbmQgYSBidW5jaCBvZiBleGNlbCBzcHJlYWRzaGVldHMgd2l0aCBwYXJ0aWN1bGFyIGZ1bmN0aW9ucyAoYW4gYXNpZGU6IGRpZCB5b3Ugbm90ZSB0aGVtIG1lbnRpb24gcGl2b3QgdGFibGVzPyBEbyB5b3Uga25vdyB3aGF0IHBpdm90IHRhYmxlcyBhcmU/IElmIG5vdCwgeW91IG5vdCBxdWFsaWZpZWQgdG8gaGF2ZSB0aGlzIGRpc2N1c3Npb24pLiAKWmdlcm5kIGJlZ2FubiBzaWUgaWhyZSBlcnN0ZSBNYWlsIGFuIGRpZXNlbiBEb2MgQ2FybG9zLiBEYXNzIHNpZSBzaWNoIGdhciBuaWNodCBzaWNoZXIgc2VpLCBvYiBzaWUgZGVubiBkYXMgd2lya2xpY2ggcmVhbCBlcmxlYmVuIG1jaHRlLiAKRmlyc3RseSwgSSBnb3QgaG9iYmllcy9qb2JzIHRoYXQgZm9yY2VkIG1lIHRvIGJlIG1vcmUgb3V0Z29pbmcuCk15IHNvbiBpbmhlcml0ZWQgYSBjaHJvbmljIGNvbmRpdGlvbiBmcm9tIG1lLiBJbiBoaXMganVuaW9yIHllYXIgaGUgd2FzIGZyZXF1ZW50bHkgYWJzZW50IHNlZWluZyBkb2N0b3JzIGFuZCBzdWNoLiAKQWRkaXRpb25hbGx5LCBpZiB5b3UgdGhpbmsgdGhhdCBzb21ldGhpbmcgaXMgd3JvbmcsIHlvdSBjYW4gYWx3YXlzIGNvbnRhY3QgdGhlIHJlZ3VsYXRpbmcgYm9kaWVzIGFuZCBhc2sgYXNzaXN0YW5jZSBmcm9tIHRoZW0gaW4gc29sdmluZyB5b3VyIGlzc3VlIHdpdGggdGhlIHBva2VyIHJvb20uLiAKVGhpcyBpcyBhIHJlYmVsbGlvdXMgTW9ybW9uIHRlZW4gd2hvIGhhcyBzZWVuIHNvbWUgb2YgdGhlIHN0dWZmIHdyaXR0ZW4gaW4gdGhlIHNub3cgdGhyZXcgaW4gc29tZSBvdGhlciByZWJlbGxpb3VzIHN5bWJvbHMuIApBbnkgaGVhbGVyIHN1YiAxayBpbiBhIHNhdmFnZSBmaWdodCBpcyBhbiBhY3RpdmUgZGV0cmltZW50IHRvIHRoZSBwYXJ0eSwgc2ltaWxhciB0byBhIHN1YiA0ayBEUFMgcGxheWVyIG9yIHN1YiAzayB0YW5rIDEgcG9pbnQgIHN1Ym1pdHRlZCAzIGRheXMgYWdvLiAKQWxzbywgc29tZSBoaXN0b3JpYW5zIHRvb2sgaXNzdWUgd2l0aCB0aGUgdXNlIG9mIHRoZSB3b3JkICJkZWNsaW5lIiBvciAiZGVjYXkiLiBCZWNhdXNlIHRob3NlIHdvcmRzIGFyZSBpbmhlcmVudGx5IGNvbXBhcmF0aXZlLiBZb3UgY2FuIHVzZSB0aG9zZSB3b3JkcyB3aXRob3V0IGNvbXBhcmluZyB0aGUgT3R0b21hbiBFbXBpcmUgdG8gc29tZXRoaW5nIGVsc2UsIHdoZXRoZXIgdGhhdCBiZSBvdGhlciBjb3VudHJpZXMgYXQgdGhlIHRpbWUsIG9yIHRoZSBPdHRvbWFuIEVtcGlyZSBhcyBpdCB3YXMgaW4gdGhlIHBhc3QuIEFuZCBzdXJlLCB0aGUgT3R0b21hbiBFbXBpcmUgbG9zdCBsYW5kIGFuZCBtaWxpdGFyeSBzdHJlbmd0aCBvdmVyIGl0cyBsb25nIGxpZmUsIGJ1dCBoaXN0b3JpYW5zIHdobyBmb2N1cyBvbiB0aG9zZSBpc3N1ZXMgaWdub3JlIHRoZSBvdGhlciBjdWx0dXJhbCwgc2NpZW50aWZpYywgYW5kIHBvbGl0aWNhbCBjaGFuZ2VzIHRoYXQgaGFwcGVuZWQgaW4gdGhlIE90dG9tYW4gRW1waXJlLgpUaG9zZSBvZiB1cyB3aG8gb3duIGNhdHMga25vdyBob3cgc3RyZXNzZnVsIGl0IGlzIGZvciB0aGVtIHdoZW4gdGhleSBuZWVkIHRvIGJlIHRha2VuIHNvbWV3aGVyZS5CYXJvblZvbkhvbWVyICA5IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ29JIGxpdmUgaW4gYSB0b3duIGp1c3QgbGlrZSB0aGlzLCBpdCdzIGhhcmQuIAoiT2YgY291cnNlLCBjdXN0b21lciBwcml2YWN5IGFuZCBjb25maWRlbnRpYWxpdHkgaXMgcmVzcGVjdGVkIGF0IGFsbCB0aW1lcy4iIFRoZSB2ZW51ZSBtYWtlcyBhdmFpbGFibGUsIGFuZCB0aGUgc3RhZmYgYXJlIHRyYWluZWQgdG8gb2ZmZXIgY3VzdG9tZXJzLCBpbmZvcm1hdGlvbiB0byBhc3Npc3QgdGhlbSBpbiB0aGVpciBkZWNpc2lvbiB0byBnYW1ibGUgaW5jbHVkaW5nIGluZm9ybWF0aW9uIGd1aWRlcywgc2lnbmFnZSBhbmQgaGVscCBzZXJ2aWNlcyBhbmQgMjQgaG91ciBjb3Vuc2VsbGluZyBzZXJ2aWNlcy4gVGhpcyBpbmNsdWRlcyBtYWtpbmcgYXZhaWxhYmxlIHNlbGYgZXhjbHVzaW9uIHNlcnZpY2VzIHdoaWNoIGVtcG93ZXJzIHRoZSBjdXN0b21lciB0byB2b2x1bnRhcmlseSBleGNsdWRlIHRoZW1zZWx2ZXMgZnJvbSB0aGUgZ2FtaW5nIHByb2R1Y3RzIGF2YWlsYWJsZSBhdCBUaGUgTWFjY2EuIFRoZSBzcG9rZXNwZXJzb24gc2FpZC4gCkFkZGVkIHRvIHRoYXQsIHRoZSBjb252ZW5pZW5jZSwgZWFzZSBvZiBwbGF5LCBhbmQgaHVnZSB2YXJpZXR5IG1ha2UgZm9yIGEgZ2FtZSB0aGF0IGNvbnRpbnVlcyB0byBjb21wZWwgYW5kIGVuZ2FnZSBjYXNpbm8gcGxheWVycyBhbGwgb3ZlciB0aGUgd29ybGQuLiAKU2Vhc29uIDE0IHdhcyBkb3VibGUgZ29ibGluIHNwYXduLCBzZWFzb24gMTUgd2FzIGRvdWJsZSBibG9vZCBzaGFyZHMsIGFuZCB0aGlzIHNlYXNvbiBhbGwgY2hhcmFjdGVycyBoYXZlIHRoZSBSb1JHIGJ1ZmYgd2l0aG91dCBpdCBlcXVpcHBlZCBvciBpbiBjdWJlLiAKVGhhdCB0aGUgZGlmZmVyZW5jZSwgd2hpY2ggdWx0aW1hdGVseSBsb3dlcnMgdGhlIGJ1cmRlbiBmb3IgcHJlbWlzZXMgbGlhYmlsaXR5IGNsYWltcyB2cy4gCiJSaWdodCBub3csIGJlY2F1c2Ugb2YgdGhlIHJlY2Vzc2lvbiBvZiB0aGUgZ2xhY2llcnMsIGl0IGlzIG9wZW4gdG8gdGhlIHNreSwiIHNoZSBzYWlkLCBhZGRpbmcgdGhhdCBhcyBpY2UgcmV0cmVhdHMgZnJvbSB0aGUgbGFuZHNjYXBlIGR1ZSB0byBjbGltYXRlIGNoYW5nZSwgbW9yZSBzdWNoIGZlYXR1cmVzIG1pZ2h0IGJlIGRpc2NvdmVyZWQuClRoZSBudW1iZXIgb2YgdG90YWwgcHJvZHVjdHMsIHRoZSBudW1iZXIgb2YgZG9zZXMsIHRoZSBudW1iZXIgb2YgcGlsbHMgcGVyIGRvc2UsIHRoZSBzaXplIGFuZCBzaGFwZSBvZiB0aGUgcGlsbHMsIGFuZCBhZnRlcnRhc3RlIGFyZSBpbXBvcnRhbnQgaXNzdWVzIHRoYXQgd2lsbCBlaXRoZXIgaW1wcm92ZSBvciByZWR1Y2UgY29tcGxpYW5jZS4gCldpbGxtYWtleW91a25lZWwgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTggZGF5cyBhZ28KVGhlIHBvaW50IG9mIHNhbGVzIGF0IHRoYXQgcG9pbnQgd2FzIHRvIGNvbGxlY3QgZGF0YSBhbmQgbW92ZSBmb3J3YXJkIHdpdGggcGFydG5lcnMuIEl0IHdhc24gYWJvdXQgbWFraW5nIGEgcXVpY2sgYnVjay4gCkZyaXNjaGUgQmx1bWVuLiAKV2Ugd29yayB0b3dhcmRzIGEgY29uZmxpY3QgYW5kIHJlc29sdmUgaXQgcXVpY2tseSwgZWFjaCBnYW1lIHNlc3Npb24gYnVpbGRzIHVwb24gaXRzZWxmIGFzIGlmIGl0IHdlcmUgYW4gZXBpc29kZSBvZiB0ZWxldmlzaW9uLCBhIHJ1biBvZiBmaXZlIG9yIG5pbmUgc2Vzc2lvbnMgYWN0cyBhcyBhIHNlYXNvbi4gClRoZXJlIGJlIGEgbG90IG9mIGhpZGRlbiBtZWFuaW5ncyBpbiBpdC4gClRoaXMgaXNuIGV4YWN0bHkgYSB1bmlxdWUgcHJvYmxlbSB0byAvci9IYWxvIGl0IHZlcnkgY29tbW9uIGluIGNvbW11bml0aWVzIHdpdGggY29udGVudCBkcm91Z2h0cyBhbmQgZXZlbiB3b3JzZSBpbiBUViBzaG93IHN1YnMuIEl0IHJlYWxseSBqdXN0IHRoZSBuYXR1cmUgb2YgaG93IHRoaW5ncyBnbyB1bnRpbCBuZXcgY29udGVudCBpcyBnZW5lcmF0ZWQuIApUaGUgc3Rvcm15IGZpbmFsZSBvZiBNYWhsZXIncyBTeW1waG9ueSBOby4gMSBjbG9zZWQgdGhlIEFsbGVudG93biBTeW1waG9ueSBPcmNoZXN0cmEncyA2MHRoIHNlYXNvbiBTYXR1cmRheSBuaWdodCBhdCBTeW1waG9ueSBIYWxsLCBlbmRpbmcgb25lIG9mIHRoZSBtb3N0IGVuZ2FnaW5nIHByb2dyYW1zIG9mIGl0cyAyMDEwIDIwMTEgY2xhc3NpY2FsIHNlcmllcy4gSXQgd2FzIGEgY29uY2VydCBvZiBkcmFtYXRpYyBjb250cmFzdHMsIGZyb20gdGhlIGRlbGlnaHRmdWwgcXVpcmtpbmVzcyBvZiBQb3VsZW5jJ3MgQ29uY2VydG8gZm9yIFR3byBQaWFub3MgdG8gdGhlIGNvbnZvbHV0ZWQgY29tcGxleGl0eSBvZiB0aGUgTWFobGVyLCBhbGwgcGVyZm9ybWVkIHdpdGggYW4gZXh1YmVyYW5jZSBib3JkZXJpbmcgb24gdGhlIGV1cGhvcmljLi4gCkhlIGFuZCBJIHdvdWxkIG5ldmVyIGJlIHRvZ2V0aGVyLiAKTG92aW5nIGZhdGhlciBvZiBQZXRlciBKci4gKFNoYXduYSksIENocmlzIChUYXJhKSwgQnJhZCAoTWFybmllKSwgSmVmZiAoUGF1bGUpLCBSeWFuIGFuZCBTYXJhaCAoTWlrZSkuIApJbiBhZGRpdGlvbiB0byBiZWVyIHBvbmcsIHRoZSBmdW4gem9uZSBoYXMgUG9wIEEgU2hvdCwgYmlsbGlhcmRzLCBvbmUgb2YgdGhlIGxhcmdlc3QgZ2FtZXMgb2YgUGFjIE1hbiBvbiBFYXJ0aCBhbmQgYW4gb3JpZ2luYWwgU2lnbWEgRGVyYnkgICBhIGhvcnNlIHJhY2UgdGhlbWVkIHNsb3QgbWFjaGluZSB0aGF0IGxldHMgcGxheWVycyBiZXQgb24gaW5kaXZpZHVhbCBob3JzZXMuLiAKWW91IG1heSB2b2x1bnRlZXIgaW4gdGhlIGNoaWxkcmVuJ3Mgd2FyZCwgaGVsbCBtYXliZSB0aGUgY2FyZGlvbG9neSB3YXJkIGZvciB0aGF0IG1hdHRlci4gSWYgdGhpcyBpZGVhIG1ha2VzIHlvdSBxdWVhc3ksIHRoYW4gc2ltcGx5IGRvbmF0ZSBhIHBpbnQgb2YgYmxvb2QuIApUaGUgMjAwOCAyIGRheSBSYWxseSB3YXMgaGVsZCB3aXRoIGdvb2Qgc3VjY2VzcyBhcHByb3hpbWF0ZWx5IDgwIGJpa2VzIHJvZGUgaW4gdGhlIHBva2VyIHJ1bi4gSW4gMjAwOSB0aGVyZSB3ZXJlIG92ZXIgMTAwIGJpa2VzIHJlZ2lzdGVyaW5nIGZvciB0aGUgcG9rZXIgcnVuIGFuZCBhIGZldyBtb3JlIGV2ZW50cyB3ZXJlIHNjaGVkdWxlZCBvbiBTYXR1cmRheS4gRm9yIDIwMTAsIHRoZSBldmVudCBldm9sdmVkIGludG8gYSAzIGRheSByYWxseSB3aXRoIGEgRnJpZGF5IG5pZ2h0IGNvbmNlcnQsIGNvbnRpbnVpbmcgdGhlIFNob3cgU2hpbmUsIEJpa2VyIFJvZGVvIGhvc3RlZCBieSBBQkFURSBEaXN0cmljdCAxLCBhbmQgYW4gb3V0c3RhbmRpbmcgRmFsbGVuIEZpcmVmaWdodGVyIFRyaWJ1dGUgY29vcmRpbmF0ZWQgYnkgdGhlIENhc3RsZSBSb2NrIEZpcmUgRGVwYXJ0bWVudCBDb2xvciBHdWFyZC4gT3ZlciAxODAgYmlrZXMgcmVnaXN0ZXJlZCBmb3IgdGhlIHBva2VyIHJ1biBvbiBTdW5kYXkgbW9ybmluZy4gVGhyb3VnaG91dCB0aGUgMyBkYXkgZXZlbnQgb3ZlciAxNTAwIHBlb3BsZSBjYW1lIG91dCBhbmQgZW5qb3llZCBvdXIgcnVyYWwgc3R5bGUgb2YgZnVuLiBUaGUgUmFsbHkgQ29tbWl0dGVlJ3MgZ29hbCBpcyB0byBrZWVwIGV4cGFuZGluZyB0aGUgZXZlbnQgaW4gZnV0dXJlIHllYXJzIGFuZCBpbmNyZWFzaW5nIG91ciBjb250cmlidXRpb25zIHRvIHRoZSBDb2xvcmFkbyBGYWxsZW4gRmlyZWZpZ2h0ZXIgRm91bmRhdGlvbi4KVGhlc2UgY2hpcHMgZG8gbm90IGhhdmUgbW9uZXRhcnkgdmFsdWUgYW5kIGlzIHVzZWQgc29sZWx5IGZvciB0aGUgdG91cm5hbWVudC4uIApKb2huc29uIHdhcyBhIHZlcnkgcmFjaXN0IG1hbi4gCkJ1c2luZXNzIGxpY2VuY2VzIGZvciBsZW1vbmFkZSBzdGFuZHMsIHBlcm1pdHMgdG8gdHJhbnNwb3J0IHRhZHBvbGVzIHRvIHNob3cgYW5kIHRlbGwgYW5kIGluc3BlY3RvcnMgZGVtYW5kaW5nIHNhZmV0eSBkb2N1bWVudGF0aW9uIGZvciBXaW5kZXguIEluZGl2aWR1YWwgZXhhbXBsZXMgb2YgcmVkIHRhcGUgY2FuIHNvdW5kIHRyaXZpYWwgb3IgZXZlbiBmdW5ueSBidXQgdGhlIGN1bXVsYXRpdmUgY29uc2VxdWVuY2VzIGFyZSBmYXIgZnJvbSBiZW5pZ24uCkxhIHByZXNzZSBjcml0ZSBuJ2VzdCBwYXMgcGFyZ25lIERhbnMgdW4gZ3JhbmQgcXVvdGlkaWVuIHBhcnUgbGUgMDUgZnZyaWVyIDIwMTAsIHVuIGRlcyBxdW90aWRpZW5zIGxlcyBwbHVzIGRpZmZ1c3MgYXUgbml2ZWF1IG5hdGlvbmFsLCBvbiBhdmFpdCBsZSBwbGFpc2lyIGRlIGxpcmUgbGEgcGV0aXRlIGhpc3RvaXJlIGR1IGpvdXIsIGVuIHBhZ2UgZGUgZ2FyZGUuIEEgbGEgbGVjdHVyZSBkZSBjZXQgYXJ0aWNsZSwgb24gYXBwcmVuZCBxdSd1bmUgZmFtaWxsZSBhIHQgdmFjdWUgcGFyIGxhIHBvbGljZSBkJ3VuIGNpbm1hIGVuIHJhaXNvbiBkZSBsYSBwcnNlbmNlIGQndW5lIGZpbGxldHRlIGRlIDIgYW5zIGV0IGRlbWkuIFNlbG9uIGwnYXJ0aWNsZSwgbCdleHBsb2l0YW50IG4nYSBmYWl0IHF1ZSByZXNwZWN0ZXIgbCdhcnRpY2xlIDE5OCBkZSBsJ29yZG9ubmFuY2UgZGUgcHJmZWN0dXJlIGRlIHBvbGljZSBkZSBQYXJpcyBkdSAxZXIgamFudmllciAxOTI3LCB0b3Vqb3VycyBlbiB2aWd1ZXVyLCBxdWkgaW50ZXJkaXQgbCdhY2NzIGF1eCBsaWV1eCBkZSBzcGVjdGFjbGUgYXV4IG1vaW5zIGRlIDMgYW5zLiBWb3VsYW50IGVuIHNhdm9pciBwbHVzIHN1ciBjZXQgYXJ0aWNsZSwgaidhcHBlbGxlIHRvdXQgc2ltcGxlbWVudCBsYSBGZHJhdGlvbiBOYXRpb25hbGUgZGVzIENpbm1hcyBGcmFuYWlzLCBvIGxlIGp1cmlzdGUgbSdleHBsaXF1ZSBxdWUgY2V0dGUgb3Jkb25uYW5jZSBuJ2VzdCBwbHVzIGVuIHZpZ3VldXIgZGVwdWlzIDIgYW5zICBBcHJzIGF2b2lyIHByaXMgY29udGFjdCBhdmVjIGxhIFByZmVjdHVyZSBkZSBwb2xpY2UgZGUgUGFyaXMsIGonYWkgbGEgY29uZmlybWF0aW9uIHF1ZSBjZXR0ZSBvcmRvbm5hbmNlIGEgdCBhYnJvZ2UgcGFyIHVuIGFycnQgZHUgMTYgbm92ZW1icmUgMjAwNyAhIENvbW1lbnQgc2UgZmFpdCBpbCBxdWUgbGEgam91cm5hbGlzdGUgbidlc3QgcGFzIHByaXMgbGUgdGVtcHMgZGUgcmVjaGVyY2hlciBsJ29yZG9ubmFuY2UgZW4gcXVlc3Rpb24sIG5pIHByaXMgbGUgdGVtcHMgZGUgdnJpZmllciBzaSBjZXR0ZSBvcmRvbm5hbmNlIHMnYXBwbGlxdWUgZW5jb3JlIElsIGVzdCB0b25uYW50IGFsb3JzIGRlIHZvaXIgbGUgdHVtdWx0ZSBhdXRvdXIgZGUgY2V0dGUgYmFuYWxlIGhpc3RvaXJlIChpbCBzdWZmaXQgZGUgbGlyZSBsZXMgYXJ0aWNsZXMgZGUgam91cm5hdXgsIGxhIHJlcHJpc2UgcGFyIGRlcyBibG9ncyBhaW5zaSBxdWUgZGVzIGZvcnVtcyBkZSBkaXNjdXNzaW9uKSBxdWkgcGV1dCB0cm91dmVyIHVuZSBleHBsaWNhdGlvbiAoanVzdGlmaWFibGUgb3Ugbm9uLCB0ZWwgbidlc3QgcGFzIGxlIHByb2JsbWUgb24gcGV1dCBkJ2FpbGxldXJzIGRvdXRlciBkZXMgZGlmZnJlbnRzIHJjaXRzIHF1aSBzb250IGZhaXRzIGRlIGNldHRlIGhpc3RvaXJlKSBxdWkgZXN0IHRvdXQgYXV0cmUgcXVlIGNlbGxlIHJlbGF0ZSBwYXIgZGVzIGpvdXJuYWxpc3Rlcy4KWW91IGRlZmluaXRlbHkgdGhlcmUgaW4gImdldHRpbmcgaXQsIiBhbmQgdW5kZXJzdGFuZGluZyBkZXBlcnNvbmFsaXphdGlvbiBpbiBnZW5lcmFsLiBGcm9tIGhlcmUgb24gb3V0IGl0cyBqdXN0IG1lbnRhbGx5IHB1c2hpbmcgeW91cnNlbGYgdG8gYWNjZXB0IGl0IGFzIHRoZSB0cnV0aC4gTm8sIHlvdSB3b24gYmUgaW4gYSBmb2cgZm9yZXZlciwgYW5kIHlvdSBuZXZlciBoYXZlIHRvIGFjY2VwdCB5b3VyIHBlcmNlcHRpb24gYXMgYWxsIGxpZmUgaGFzIHRvIG9mZmVyLiAKVGhlIEJvdXJzZSwgd2hpY2ggaGFzIG1vcmUgdGhhbiB0d28gZG96ZW4gZm9vZCBzdGFsbHMsIGNsYWltcyB0aHJlZSBiYXJzOiBCbHVlYmlyZCdzIG5ld2VzdCBvdXRwb3N0OyBQaGlsbHkncyBmaXJzdCBjaG9jb2xhdGUgYW5kIHdpbmUgYmFyLCBmcm9tIENob2NvZGllbSBvZiBFYXN0b247IGFuZCB0aGUgVEFQUyBGaWxsIFN0YXRpb24sIHNwZWNpYWxpemluZyBpbiBkcmFmdCBldmVyeXRoaW5nOiBrb21idWNoYSwgY29ja3RhaWxzLCBiZWVyLCBjaWRlciwgYW5kIG1lYWQuIEJ1dCB0aGUgdGltaW5nIGhhcyBiZWVuIHJvdWdoLCBBZGtpbnMgYWRtaXR0ZWQ6ICJJdCBoYWQgb3BlbmVkIGluIHRoZSBDaHJpc3RtYXMgc2Vhc29uIGFuZCByaWdodCBpbnRvLCBnbyBmaWd1cmUsIGRyeSBKYW51YXJ5LiIgTm93LCB0aGV5J3JlIG1ha2luZyBhZGp1c3RtZW50cywgaGUgc2FpZDogc29mdGVyIGxpZ2h0aW5nIGZvciBuaWdodHRpbWUgYW1iaWVuY2UsIGEgYmV0dGVyIHNvdW5kIHN5c3RlbSwgcHJvamVjdGlvbiBzY3JlZW5zIHNob3dpbmcgc3BvcnRzLCBhbmQgZXZlbnRzIGxpa2UgZm91cnRoIFRodXJzZGF5IGthcmFva2UgbmlnaHRzIGFuZCBhIE1hcmNoIDUgTWFyZGkgR3JhcyBibG93b3V0IHdpdGggYSBOZXcgT3JsZWFucyBicmFzcyBiYW5kLgpJIHJlbWVtYmVyIGJlaW5nIHlvdXIgYWdlIGFuZCB3b25kZXJpbmcgdGhhdC4gUGVyc29uYWxseSwgaXQgdHVybmVkIG91dCBJIGp1c3QgaGFkbiByZWFsbHkgZXhwZXJpZW5jZWQgaXQgeWV0LiBNeSBzZXggZHJpdmUgYmxvb21lZCBpbiBteSB0d2VudGllcy4gQXQgdGhpcyBwb2ludCwgaXQgbm90IGEgcXVlc3Rpb24gSSBoYXZlIHRvIGFzayBteXNlbGYsIHRoZSBmZWVsaW5nIGlzIHRvbyBvYnZpb3VzLiBZb3UgbWlnaHQgYmUgdGhlIHNhbWUgd2F5IQpMb3RzIG9mIFJ2JyBlcnMgZHJvdmUgc2xvd2x5IGJ5IG1lIHdpdGhvdXQgZ2V0dGluZyBvdXQsIGFzIEkgdGhpbmsgdGhleSB3ZXJlIHNjYXJlZCBoYWhhLiBJIHByb21pc2VkIHRoZSBnaXJsZnJpZW5kIEkgd291bGQgYmUgaG9tZSBvbiBhIGNlcnRhaW4gZGF0ZSwgYW5kIHdoZW4gSSB3YXMgcnVubmluZyBiZWhpbmQgd2l0aCB0aGUgdGlyZSBiZWluZyBjaGFuZ2VkIGluIFByaW5jZSBSdXBlcnQsIEkgaGFkIHRvIGZseSBhY3Jvc3MgQ2FuYWRhIHRvIG1ha2UgaXQgYmFjayBpbiB0aW1lLCBvciBzaGUgcHJvYmFibHkgd291bGQgaGF2ZSBsZWZ0IG1lIGhhaGEuIEknbSBzdXJwcmlzZWQgc2hlIHN0YXllZCB3aXRoIG1lIGFmdGVyIGJlaW5nIG9uIHRoZSByb2FkIGZvciA1IHdlZWtzLgpIYXMgY29vbCBzcG9ydHMgbWVtb3JhYmlsaWEgaW4gaGlzIGNvbmRvLCBpbmNsdWRpbmcgc2lnbmVkIE5GTCBqZXJzZXlzIGZyb20gQmFycnkgU2FuZGVycyBhbmQgSm9lIE1vbnRhbmEsIGEgc2lnbmVkIEdyZWVuIEJheSBQYWNrZXJzIGhlbG1ldCBmcm9tIEJyZXR0IEZhdnJlLCBhbmQgZnJhbWVkIFRvcm9udG8gQmx1ZSBKYXlzIGplcnNleXMgZnJvbSBUcm95IFR1bG93aXR6a2ksIEpvc2ggRG9uYWxkc29uIGFuZCBNYXJjdXMgU3Ryb21hbiwgd2hvIHNpZ25lZCBoaXM6IEdhbGx5LiAKU21hbGxlciBwbGF5ZXJzIGhhdmUgYmVlbiB0YWtpbmcgc2hhcmUgZnJvbSB0aGUgcGFja2FnZWQgZ29vZHMgcGxheWVycyBmb3IgYWJvdXQgYSBkZWNhZGUsIGJ1dCB0aGlzIHllYXIsIHRoZSBiaWcgQ1BHcycgcmVjZW50IHN0cmF0ZWd5IG9mIHB1bXBpbmcgb3V0IHNtYWxsIGJyYW5kcyBhbmQgaW5pdGlhdGl2ZXMsIGNvbWJpbmVkIHdpdGggdGhlaXIgaW5oZXJlbnQgYWR2YW50YWdlcyB0aGUgYWJpbGl0eSB0byBlYXNpbHkgbWFudWZhY3R1cmUgcHJvZHVjdHMgYW5kIHJhaXNlIGNhcGl0YWwsIHBsdXMgdGhlaXIgZXhpc3Rpbmcgc2FsZXMgZm9yY2VzLCByZWxhdGlvbnNoaXBzIGFuZCBzdXBwbHkgY2hhaW5zIG1lYW5zIHRoZXknbGwgdGFrZSBiYWNrIHRoZSBjb250cm9scy4gIEphY2sgTmVmZiwgcmVwb3J0ZXIsIHBlcnNvbmFsIHByb2R1Y3RzIGFuZCByZXNlYXJjaC4gClN0eWxlcyBpbiB0aGUgSGVsbGVuaXN0aWMgcGVyaW9kIHdlcmUgbm8gbG9uZ2VyIGVuY29tcGFzc2luZyBhbGwgb2YgR3JlZWNlLCBidXQgdGhlcmUgd2VyZSBtYW55IGRpZmZlcmVudCBzdHlsZXMgZm9yIGRpZmZlcmVudCBnZW5yZXMuIApJbiByZWFsaXR5LCB0aGlzIGlkeWxsaWMgcGljdHVyZSB5b3UgaGF2ZSBpbiB5b3VyIGhlYWQgb2YgdGhlIHNpbXBsZSBsaWZlIHdhcyBsaW1pdGVkIHRvIHNlY3VyZWx5IG1pZGRsZSBjbGFzcywgd2hpdGUgd29tZW4uLiAKQm91bGRlcidzIGJlc3QgYmFyIGdhbWVzCllvdSBkb24gZ2V0IHRvIGRlc2VydmUgdGhhdCBhcyBlcXVpcG1lbnQgZXF1YWxseSBhcyBJIGRvLiBEb24gbGlrZSBpdD8gUGxheSBhIHRhbmssIG9yIHBsYXkgYSBoZWFsZXIsIGFuZCBhY2NlcHQgdGhlIHJlc3BvbnNpYmlsaXR5IHRoYXQgY29tZXMgd2l0aCB0aGUgcm9sZSwgdGhlbiB5b3UgZ2V0IHRvIGRlc2VydmUgaXQgbW9yZSB0aGFuIHRob3NlIHRoYXQgY2FuIGFuZC9vciB3b24gcGxheSB0aGF0IHJvbGUuIApUaGlzIGhhcyA2MCA1MCBiaXQgd29yZHMgb2YgbWVtb3J5IGluIHRoZSBmb3JtIG9mIGNhcGFjaXRvcnMgKHdpdGggcmVmcmVzaCBjaXJjdWl0cyAgIHRoZSBUaGUgbWVtb3J5IGhvbGRzIDY0IG9mIHRoZXNlIHdvcmRzIGFuZCB0aGVyZWZvcmUgcmVxdWlyZXMgb3ZlciAxNDAwIHJlbGF5cyB0byBjcmFjayB0aGUgR2VybWFuIExvcmVueiAoU1o0MikgQ2lwaGVyIHVzZWQgYnkgdGhlIEVuaWdtYSBtYWNoaW5lcy4gClRoZSBsZXR0ZXIgbWF5IGJlIHRoZSBtYXRjaCB0aGF0IHNldCBmaXJlIGFuZCBidXJuZWQgdGhlIGJyaWRnZSB0byBldmVyIHJlY29uY2lsaW5nIHdpdGggaGVyLiAKT25lIG9uIG9uZSwgYSBrbmlnaHQgb3IgYSBodW1hbm9pZCByb2JvdCBtYXkgbG9zZSB0byBhbiB1cGdyYWRlZCBzZWN1cml0cm9uIGJ1dCB0aGUgQ291cmllciBtZW4ganVzdCBjYW4ga2VlcCB1cCB3aXRoIHRoZSBudW1iZXJzIHRoZSBXYXJyaW9yIGNhbiBwdW1wIG91dC4uIApBcyBmYXIgYXMgTUlMIHRlbGwgREggaGUgaGFkIGhpcyBjaGFuY2UgdG8gaGFuZGxlIHRoaXMgYW5kIGhlIGZ1Y2tlZCBpdCB1cC4gc3RlcCBiYWNrIGJlY2F1c2UgeW91IGRyaXZpbmcgdGhpcyB0cnVjayBub3cuCkxvdmVHYW1lIHdhcyBpbml0aWFsbHkgcGxhbm5lZCB0byBiZSB0aGUgM3JkIHNpbmdsZSBmcm9tIHRoZSBhbGJ1bSBidXQgZHVlIHRvIEF1c3RyYWxpYSBiYW5uaW5nIHRoZSBjb250cm92ZXJzaWFsIHZpZGVvIGFuZCBseXJpY3MsIEdhR2EgZGVjaWRlZCB0byBjaGFuZ2UgdGhlIElyaXNoIHNpbmdsZSByZWxlYXNlIHRvIFBhcGFyYXp6aSAuSG93IG1hbnkgbnVtYmVyIDEgc2luZ2xlcyBoYXMgTGFkeSBHYWdhIGdvdD9MYWR5IEdhZ2EgaGFzIGN1cnJlbnRseSBoYWQgMyBIb3QgMTAwIG51bWJlciAxcyBidXQgaGFzIGFjdHVhbGx5IGhhZCA4IGluY2x1ZGluZyBoZXIgY3VycmVudCBudW1iZXIgMSB3aGljaCBzdGF5ZWQgYXQgbnVtYmVyIDEgb24gdGhlIGhvdCAxMDAgZm9yIDYgd2Vla3MuIEhlciBuZXh0IDIgc2luZ2xlcyBvZmYgdGhlIGFsYnVtICdCb3JuIFRoaXMgV2F5JyB3aWxsIGJlICdNYXJyeSBUaGUgTmlnaHQnICdIYWlyJy4gCkEgc291cmNlIGNsb3NlIHRvIHRoZSBwcm9jZXNzIHNhaWQgdGhlIHN0YXRlbWVudCB3YXMgaW50ZW50aW9uYWxseSBjb250cmFkaWN0b3J5IGFuZCBhbiBlZmZvcnQgYnkgTGlnaHRoaXplciB0byBrZWVwIE1udWNoaW4gZnJvbSBnZXR0aW5nIGFoZWFkIG9mIHRoZSBhZG1pbmlzdHJhdGlvbiBuZWdvdGlhdGlvbnMuCkluIE1pYW1pLCB0aGUgcnVuYXdheSBiZWNhbWUgYSBjYXB0aXZlIG9mIGEgNjUgeWVhciBvbGQgc2V4IHRyYWZmaWNrZXIsIFJvbiBFcHBpbmdlci4gRm9yIG1vbnRocywgc2hlIHNheXMsIHNoZSB3YXMgc2V4dWFsbHkgYWJ1c2VkLCBrZXB0IGluIGFuIGFwYXJ0bWVudCBhbmQgcGltcGVkIG91dCB0byBwZWRvcGhpbGVzLiBBZnRlciBoaXMgaW5kaWN0bWVudCBpbiAyMDAwIG9uIHRyYWZmaWNraW5nIGNoYXJnZXMsIFJvYmVydHMgcmV0dXJuZWQgdG8gV2VzdCBQYWxtIEJlYWNoIGFuZCB0cmllZCB0byBoZWFsLgpPbmNlIHlvdSByZWFsaXplIHRoYXQgbm9uZSBvZiB1cyBhcmUgaW4gY29udHJvbCB5b3UgYXJlIGxlZnQgd2l0aCBxdWl0ZSBzZXJpb3VzbHkgaW5maW5pdGUgY29tcGFzc2lvbi4gQnV0IHNvbWUgb2Ygb3VyIHNlbGZpc2ggZW1vdGlvbnMgY2FuIHN0eW1pZSB0aGF0IGVtcGF0aHkuIFNvdW5kcyBhIGxvdCBsaWtlIGJodWRkaXNtIEkgc3VwcG9zZS4gCkhlIGhhc24ndCBmaW5pc2hlZCBiZXR0ZXIgdGhhbiBzZXZlbnRoIGluIHRoZSBzZXJpZXMgaW4gYSBkZWNhZGUsIGFuZCBoaXMgMjAwNCBjaGFtcGlvbnNoaXAgd2l0aCBSb3VzaCBSYWNpbmcgc29tZXRpbWVzIGZlZWxzIGFzIGlmIGl0IHdhcyBhIGxpZmV0aW1lIGFnby4gCklmIHlvdXIgaGVhcnQgYXR0YWNrIGh1cnRzLCBjb25zaWRlciB5b3Vyc2VsZiBsdWNreS4gCkZlZGVyYWwgTGFib3IgTGVhZGVyIEJpbGwgU2hvcnRlbiBqb2luZWQgTXMgV2hpdGUgb24gRnJpZGF5IGFzIHNoZSByZXN0YXRlZCBoZXIgcGxlZGdlIHRvIGZpeCBhIGhlYWx0aCBzeXN0ZW0gc2hlIHNheXMgaXMgZmFpbGluZyBUYXNtYW5pYW5zLiAiSGVhbHRoIGlzIHRoZSBudW1iZXIgb25lIGlzc3VlIGZvciBUYXNtYW5pYW5zLCBhbmQgaGFzIHRvIGJlIHRoZSBudW1iZXIgb25lIGlzc3VlIGZvciB0aGUgbmV4dCBnb3Zlcm5tZW50LCIgTXMgV2hpdGUgdG9sZCByZXBvcnRlcnMgaW4gRGV2b25wb3J0LiBUaGUgZmluYWwgZGF5IG9uIHRoZSBjYW1wYWlnbiB0cmlhbCB3YXMgYWxzbyByb2NrZWQgYnkgcmVwb3J0cyBhIHdvbWFuIGhhZCB0YWtlbiBoZXIgb3duIGxpZmUgd2hpbGUgaW4gdGhlIGNhcmUgb2YgdGhlIFJveWFsIEhvYmFydCBIb3NwaXRhbC4gCkZlZWwgZnJlZSB0byBwb3N0IG9wZW5pbmdzLCBlbmRpbmdzLCB2b2NhbCBjb3ZlcnMsIGluc3RydW1lbnRhbCBjb3ZlcnMsIGJhbmQgY292ZXJzLCBPU1QgbXVzaWMsIGNoYXJhY3RlciBzb25ncywgQU1WcyAod2l0aCBhbmltZSBtdXNpYykuIEl0IGNhbiBiZSBhbiBleHRyZW1lbHkgcG9wdWxhciBzb25nIG9yIGEgaGlkZGVuIGdlbSBpbiBhbiBhbmltZS4gV2hhdGV2ZXIgaXQgaXMsIHdlIGxvdmUgdG8gaGVhciBpdCEKVGllcnNjaHV0emFrdGlvbiBhdWYgTGEgUGFsbWEgZXJtCkxhIHBycGFyYXRpb24gZGUgY2V0dGUgcGFsbGEgZnV0IHVuIGJlbCBleGVtcGxlIGRlIGNldHRlIGN1aXNpbmUgZCdpbnR1aXRpb24gYmFzZSBzdXIgbCdleHByaWVuY2UsIHN1ciBsYSBycHRpdGlvbiBkZXMgcGFsbGFzIGZlc3RpdmVzIHF1aSBhcHByZW5uZW50ICBwcnBhcmVyIGxlIGZldSBkZSBib2lzIHF1aSBvZmZyaXJhIGxlIHRlbXBzIGV0IGxhIHB1aXNzYW5jZSBkZSBjdWlzc29uIGFkcXVhdHMsICB0cm91dmVyIHNhbnMgY2FsY3VsIG5pIHJlY2V0dGUgbGEgYm9ubmUgZG9zZSBkZSBzYWZyYW4gb3UgZGUgcGltZW50LCAgdmVyc2VyIGxlIHJpeiBhdXRoZW50aXF1ZW1lbnQgZXNwYWdub2wgYXUgYm9uIG1vbWVudCwgLi4gCkJlIGRldGFpbGVkIHdpdGggeW91ciBwb3N0IHRpdGxlIGFzIHdlbGwgYXMgdGhlIGluZm9ybWF0aW9uIHRoZXJlaW4sIGluIG9yZGVyIHRvIGhlbHAgdGhvc2UgdHJ5aW5nIHRvIGhlbHAgeW91LiBUaGlzIHdpbGwgaGVscCB0byBlbGltaW5hdGUgdmFndWUgcG9zdHMuClRoYXQgd2F5IHRoZWlyIGNvbnRlbnQgaXMgc3RpbGwgdGhlcmUsIGJ1dCB5b3UgZ2V0IHRvIGJhbGFuY2Ugb3V0IHRoZSBjcmF6eSB3aXRoIGFjdHVhbCBmYWN0cyBiZWZvcmUgdGhleSB3YXRjaCBpdC4KSSBpbiB0b28gZGVlcCBhbmQgc3RhcnQgcmF0dGxpbmcgb2ZmIHJhbmRvbSB0aGluZ3MuIApIZSBoYXMgbm93IGJlZW4gaW52b2x2ZWQgaW4gdHdvIGhlYXJ0IHN0b3BwaW5nIHJ1biBjaGFzZXMgaW4gdGhlIGN1cnJlbnQgdHJpIHNlcmllcyBEb3duIFVuZGVyLCBhbmQgaXMgeWV0IHRvIGJlIGJlYXRlbi4gSGUgZmlyc3QgbWFkZSBzaG9ydCB3b3JrIG9mIHRoZSAxMyBydW5zIHJlcXVpcmVkIGluIHRoZSBsYXN0IG92ZXIgYWdhaW5zdCBBdXN0cmFsaWEsIGdldHRpbmcgdGhlbSB3aXRoIHR3byBiYWxscyB0byBzcGFyZS4gCkFsdGVybmF0aXZlIEhlYWx0aGNhcmUgUHJhY3RpdGlvbmVycyBJbiBZb3VyIEFyZWEKQ2FuIGdldHRoaXMgYmFieSBmcm9tIGlUdW5lcy4gSXQncyBmcm9tIHRoZSBmaWxtIHNvdW5kdHJhY2sgY2FsbGVkIkNvbmZlc3Npb25zIG9mIGEgU2hvcGFob2xpYy4iIDIwIDMzKSBKdXN0IERhbmNlL0xvdmVnYW1lL1BhcGFyYXp6aS9Qb2tlciBGYWNlLyBFaCxFaCAoTm90aGluZyBFbHNlIEkgQ2FuIERheSkvQmVhdXRpZnVsLCBEaXJ0eSwgUmljaC9UaGUgRmFtZS8gTW9uZXlIb25leS9TdGFyc3RydWNrL0JveXMgQm95cyBCb3lzL1BhcGVyIEdhbmdzdGEvQnJvd24gRXllcy9JIExpa2UgSXRSb3VnaC9TdW1tZXJib3kgLiBUaGVzZSBzb25ncyBhcmUgYXZhaWxhYmxlIG9uICJUaGUgRmFtZSwiR2FHYSdzIGZpcnN0IGFsYnVtLiAKSSB3YXMgdHJ5aW5nIHRvIHRoaW5rIG9mIGEgcXVpY2sgd2VsbCBrbm93biBwaHJhc2UgdG8gZGVzY3JpYmUgdGhlIHBhcnRpY3VsYXRlcyB0aGF0IHdvdWxkIGhhdmUgc3ByZWFkIGFyb3VuZCB0aGUgd29ybGQuIEkgYmVsaWV2ZSBhdCBzb21lIHBvaW50IFJhbmRhbGwgQ2FybHNvbiB0YWxrcyBhYm91dCBhIGxheWVyIG9mIHRoZXNlIHBhcnRpY3VsYXRlcyBpbiB0aGUgZ2VvbG9naWMgcmVjb3JkIHN1Z2dlc3RpbmcgYW4gaW1wYWN0IG9yIG90aGVyIGhpZ2ggZW5lcmd5IGV2ZW50LiAKMTQgKE1vbmRheSkgV2FnZSBjb24gIHRyYWN0IHRhbGtzIGJldHdlZW4gdGhlIENJTyBDb21tdW5pY2F0aW9uIFdvcmtlcnMgVW5pb24gYW5kIHRoZSBPaGlvIEJlbGwgVGVsZXBob25lIFN5c3RlbSBjb250aW51ZWQgaW50byB0aGUgc21hbGwgaG91cnMgb2YgdGhlIG1vcm5pbmcgdG8gIGRheSBhbmQgYSB1bmlvbiBvZmZpY2lhbCBoZXJlIHNhaWQgYW4gYWdyZWVtZW50IGFwcGVhcmVkIG5lYXIuIAo=|<---