--->|UmljayBTY290dCdzIG9mZmljZSwgaXMgZGVhbGluZyB3aXRoIHRoZSBydWxlcyBub3cgYXMgdGhlIExlZ2lzbGF0dXJlIHByZXBhcmVzIGZvciBpdHMgb3duIGRlYmF0ZS4gCkNhbiBzb21lb25lIGZpbGwgUmlwIFZhbiBXaW5rbGUgaW4gb24gd2hhdCBoZSBtaXNzZWQ/IFdoYXQgaGFzIGNoYW5nZWQ/IFdoYXQgaGFzIGV2b2x2ZWQ/IFdoYXQgd291bGQgYSBwb2tlciBwbGF5ZXIgdGltZSB0cmFuc3BvcnRlZCBmcm9tIDIwMTEgbmVlZCB0byBrbm93P1Byb2JhYmx5IG9wcG9zaXRlLiBNb3N0IHBsYWNlcyBkcmFzdGljYWxseSBkaWQgZGVjcmVhc2VkIHJha2UuClJlc3VsdHM6IFRoZSBhdmVyYWdlIGNvdW50IG9mIHJlYWN0aW9ucyB3aXRoIGFibm9ybWFsbHkgaGlnaCB0aXRyZSB3YXMgMjRfMTEgYWdhaW5zdCAyNjYgZm9vZHMuIENvbXBhcmVkIHRvIGJhc2VsaW5lLCB0aGVyZSB3YXMgYSBzdGF0aXN0aWNhbGx5IHNpZ25pZmljYW50IHJlZHVjdGlvbiBpbiB0aGUgbnVtYmVyIG9mIGhlYWRhY2hlIGRheXMgKGZyb20gMTAuNV80LjQgdG8gNy41XzMuNzsgUApUaGVzZSB1bml2ZXJzYWwgaW5zaWdodHMgYXJvdW5kIHBlcnNvbmFsIHJlbGF0aW9uc2hpcHMgYW5kIGh1bWFuIHRydXRocyBlbnN1cmVkIHRoYXQgY29uc3VtZXJzIGFyb3VuZCB0aGUgd29ybGQgaWRlbnRpZmllZCB3aXRoIHRoZSBvdmVyYWxsIHN0b3J5LCB3aGlsZSB0aGUgc2VsZWN0aXZlIGFkanVzdG1lbnRzIHRoYXQgc29tZSBjb3VudHJpZXMgZGlkIG9uIHRoZSBjYXN0aW5nLCBtdXNpYyBhbmQgc2NlbmUgc2VsZWN0aW9uLCBndWFyYW50ZWVzIHRoZSBjb21wcmVoZW5zaW9uIGFuZCByZWxldmFuY2Ugb2YgdGhlIGZpbG0gdG8gdGhlIGxvY2FsIGN1bHR1cmVzLiIuIApJdCBnZW5lcmFsbHkga2VlcHMgeW91IGZyb20gYmVpbmcgYSBiaWcsIGJvbmUgZmlsbGVkIGJsb2IuTXllcnMgd2FzIGFtb25nIHRoZSBmaXJzdCBtZWRpY2FsIHByb2Zlc3Npb25hbHMgdG8gY2hhbGxlbmdlIHRoZSBmaWVsZCBpZ25vcmFuY2Ugb2YgZmFzY2lhIGluIHRoZSBodW1hbiBib2R5LkhlIGhhcyBsb25nIGFyZ3VlZCBmb3IgYSBtb3JlIGhvbGlzdGljIHRyZWF0bWVudCwgd2l0aCBhIGZvY3VzIG9uIHRoZSBmYXNjaWEgYXMgYW4gdW5hcHByZWNpYXRlZCBvdmVyc2Vlci5ldmVyeSBhbmF0b215IGxpc3RzIGFyb3VuZCA2MDAgc2VwYXJhdGUgbXVzY2xlcywgaXQgaXMgbW9yZSBhY2N1cmF0ZSB0byBzYXkgdGhhdCB0aGVyZSBpcyBvbmUgbXVzY2xlIHBvdXJlZCBpbnRvIHNpeCBodW5kcmVkIHBvY2tldHMgb2YgdGhlIGZhc2NpYWwgd2ViYmluZy4gVGhlIG9mIHNlcGFyYXRlIG11c2NsZXMgaXMgY3JlYXRlZCBieSB0aGUgYW5hdG9taXN0IHNjYWxwZWwsIGRpdmlkaW5nIHRpc3N1ZXMgYWxvbmcgdGhlIHBsYW5lcyBvZiBmYXNjaWEuIAp7S2F0YW5hZ2F0YXJpfSBkb2VzbiBoYXZlIGEgZHViLCBidXQgaXMgZXhjZWxsZW50LiBJdCBtYWRlIHVwIG9mIHR3ZWx2ZSBob3VybG9uZyBlcGlzb2RlcywgYW5kIGlzIGFib3V0IGEgZHVkZSB3aG8gcHJhY3RpY2VzIGEgbWFydGlhbCBhcnRzIHN0eWxlIHRoYXQgc3BlY2lhbGl6ZXMgaW4gZmlnaHRpbmcgYmFyZWhhbmRlZCBhZ2FpbnN0IHN3b3Jkcy4gCk5vdCB1bnRpbCByZW50cyBoYXZlIHJpc2VuIGVub3VnaCBmcm9tIHRoZSBkYXRlIHlvdSBidXkgaXR3aWxsIHlvdSBzZWUgYW55IHNpemFibGVyZWxpZWYuIApUaGVyZSBpcyBhYnNvbHV0ZWx5IG5vdGhpbmcgd3Jvbmcgd2l0aCBDYW5hZGEgYmVpbmcgbWFkZSB1cCBvZiBhbGwgc29ydHMgb2YgcmFjZXMuIEFuZCBhcyBsb25nIGFzIHRoZSBjdWx0dXJlcyB3ZSBpbXBvcnQgY2VkZSB0byB0aGUgaHVtYW5pc20gdGhhdCBtYW55IChidXQgbm90IGFsbCkgQ2FuYWRpYW5zIHVwaG9sZCwgdGhlbiBpdCBhIHdpbiB3aW4gZm9yIGV2ZXJ5b25lLiBBIGdvb2QgcGVyc29uIGdldHMgYSBob21lIGluIGEgZ29vZCBwbGFjZSwgYW5kIHdlIGdldCB0byBzZWUgdGhlIGN1bHR1cmFsIGFydGlmYWN0cyB0aGV5IGJyaW5nIGFsb25nIHdpdGggdGhlbSB0byBzaGFyZS4gSWYgdGhleSB3YW50IHRvIHNoYXJlIG9wcHJlc3Npb24gYW5kIHNlcGFyYXRpb24sIHRoZXkgY2FuIHF1aXRlIGZyYW5rbHkgZnVjayBvZmYuCiJJIGdldCB0aGF0IHRpbWVzIGFyZSB0b3VnaCBidXQgZG9lcyBBbmdpZSByZWFsbHkgbmVlZCB0byBoYXZlIFNoaWxvaCBzaGFyaW5nIGNsb3RoZXMgd2l0aCBoZXIgYnJvdGhlcnM/IEhvcGVmdWxseSB3ZSB3b24gYmUgc2VlaW5nIE1hZGRveCBpbiBvbmUgb2YgU2hpbG9oIGRyZXNzZXMgYW55IHRpbWUgc29vbi4iLiAKSSBzdGlsbCBTVVBFUiBuZXcgdG8gc2V4LCBidXQgb25lIHRoaW5nIG15IEZXQiBhbmQgSSBkbyB0aGF0IG5lYXQgaXMgd2UgaGFuZyBvdXQgYW5kIHRvdWNoLCBnZXQgc29tZSBmb3JlcGxheSwgaGUgZ2V0cyBtZSBvZmYgd2l0aCBoaXMgZmluZ2VycywgYW5kIHRoZW4gd2UgaGF2ZSBzZXguIE15IHZhZ2luYSBpcyByZWFsbHkgdGlnaHQgcmlnaHQgYXQgdGhlIG9wZW5pbmcgKGhlbmNlIG5vIHNleCBldmVyIHRpbCBhIGZldyBtb250aHMgYWdvICAgdG9vIHBhaW5mdWwgYW5kIEkgaGFkIG90aGVyIHNoaXQgaW4gbXkgbGlmZSBnb2luZyBvbiksIHNvIGFsbCB0aGUgdGltZXMgd2UgaGFkIHNleCB3aXRob3V0IHNvbWUgZXhwbG9yYXRvcnkgZmluZ2VycyBmaXJzdCwgSSBibGVlZC4gTWUgY29taW5nIGR1cmluZyBmb3JlcGxheSBoZWxwcyBtZSByZWxheCBhbmQgbWFrZXMgaXQgZWFzaWVyIGZvciBtZSB0byBjb25jZW50cmF0ZSBvbiB0aGUgc2V4LiAKTWFsaWEgYW5kIFNhc2hhIE9iYW1hCk1pc2luZm9ybWF0aW9uIHRyYXZlbHMganVzdCBhcyBmYXN0IGFzIGluZm9ybWF0aW9uLgpTb0NhbERhbiB1ClRoaXMgaXMgdGhlIGNvcnJlY3QgcmVzcG9uc2UuIFRoZXJlIGlzIGxpdGVyYWxseSBub3RoaW5nIHRoYXQgVHJ1bXAgY291bGQgZG8gdGhhdCB3b3VsZCBjaGFuZ2UgdGhlIG1pbmRzIG9mIGhpcyBmb2xsb3dlcnMuIEV2ZW4gaWYgaXQgY2FtZSBvdXQgaGUgd2FzIHNleHVhbGx5IGFzc2F1bHRpbmcgbWlub3JzLCB2aWRlbyBwcm9vZiBhbmQgYWxsLCBoaXMgc3VwcG9ydGVycyB3b3VsZCBmaW5kIHMgd2F5IHRvIHJhdGlvbmFsaXplIGl0LiAiV2VsbCwgd2hvIHdvdWxkbiBkbyB0aGF0IGluIFRydW1wIHBvc2l0aW9uPyBJIHN1cmUgYXMgaGVsbCB3b3VsZCEiCkkgc3BlbnQgYSBnb29kIGZldyB5ZWFycyBpbiBhIHN0YXRlIG9mIHNlbWkgcGVybWFuZW50IHJlY292ZXJ5IGJlY2F1c2UgSSBrZXB0IHRoaW5raW5nICJJdCBoYXNuIGh1cnQgaW4gYSBmZXcgZGF5cyBub3csIGxldCBtZSBnZXQgYmFjayBvdXQgdGhlcmUiLi4gClRoZSBpbmNsdXNpb24gb2YgIkdvZCIgaW4gdGhlIHBsZWRnZSBhbmQgdGhlIGV4Y2x1c2lvbiBvZiAiZXF1YWxpdHkiIHNlZW0gdG8gYmUgdGhlIHJldmVyc2Ugb2YgdGhlIG9yaWdpbmFsIGludGVudGlvbiBvZiB0aGUgcGxlZGdlIHVubGVzcyBvZiBjb3Vyc2UgdGhlIG5lY2Vzc2l0eSBvZiBjb3VudGVycGxheSBhZ2FpbnN0IGdvZGxlc3MgQ29tbXVuaXN0cyBpcyBzdGlsbCBhIHJlcXVpc2l0ZSBmb3IgYSBzdGF0ZW1lbnQgb2YgZmlkZWxpdHkgdG8gd2hhdCB0aGUgQW1lcmljYW4gZmxhZyByZXByZXNlbnRzIG5vdCB0byBtZW50aW9uIHRoZSBzZXBhcmF0aW9uIGludGVudGlvbnMgb2YgdGhlIEZvdW5kaW5nIEZhdGhlcnMuMS4gCkkgc2hvdCB0b29rIGF0IDI1IGJ1eSBpbnMgdGhyb3VnaCAyMDBOTCBhbmQgbW92ZWQgZG93biBhdCAyMC4gClRoZXJlJ3MgYWxzbyBmb29kIGF2YWlsYWJsZSwgaW5jbHVkaW5nIHBpenphIGFuZCBzdXNoaS4KUHJvYmFibHkgdGhlIGJlc3Qgb2YgYW55IHN0YXRlIGZhaXIuIApXb3JraW5nIG9uIHlvdXIgZmFzY2lhIGlzIGFsc28gaW1wb3J0YW50IGZvciBhbGwga2luZHMgb2YgYXRobGV0ZXMsIENvcmV5IHNheXMuClRyYWRpbmcgaXMgdmVyeSBzZXBhcmF0ZSBmcm9tIHRoZSBjb3JlIGdhbWVwbGF5IGxvb3BzIGFuZCB0aGUgY3VzdG9taXphdGlvbiBpbiBob3cgaXQgZG9uZSBhbmQgaG93IGl0IHNldCB1cC4uIApJZiB5b3UgbGlzdGVuIHRvIGNkIG9uIHRob3NlIHNldHVwcywgdGhlbiB5b3UgYXJlIHVzaW5nIHRoZSBiZXN0IHBvc3NpYmxlIHdheSB0byBsaXN0ZW4gdG8gY2QgYmVjYXVzZSB0aGUgaGlnaCBlbmQgREFDcyBpbiB0aG9zZSBzeXN0ZW1zIHdpbGwga2ljayBzb21lIHNlcmlvdXMgYXNzLgpBIGJhc2ljIHF1ZXN0aW9uIGFsbCB0aGUgcGxheWVycyBoYXZlIGluIHRoZWlyIG1pbmRzIGlzIHRoYXQgd2h5IGFyZSB0aGVzZSBzaXRlcyBvZmZlcmluZyBhIGNoYW5jZSB0byBwbGF5IHRoZXNlIHRvdXJuYW1lbnRzPyBUaGV5IHRoaW5rIHRoYXQgdGhlcmUgbXVzdCBiZSBzb21lIGNhdGNoIGludm9sdmVkIHRvIHRoaXMuIApFbiBiZWhhbHZlIG91ZGUgYXV0bydzIHJlZGVuIGVyIHRvY2ggdm9vcmFsIHZlZWwgc2ppZWtlIGdyb3RlIHdhZ2VucyByb25kICh2ZWVsIFNVVidzIGdlemllbiBkZXplIHJlaXMhKS4gClBhbnRoZXJzIFNwb3J0cyBDbHViIHNvbGQKVGhlIHN0YXRld2lkZSBFR00gY2FwIG9mIDM2OTAgd291bGQgYWxzbyBiZSBkZWNyZWFzZWQgYnkgMTYwIG1hY2hpbmVzLCBhbmQgYSBjb25zaWRlcmF0aW9uIG9mIHVwIHRvIHR3byAnaGlnaHJvbGxlciBub24gcmVzaWRlbnRpYWwnIGNhc2lub3MuIFRyZWFzdXJlciBQZXRlciBHdXR3ZWluIGRpZCBub3QgcmVzcG9uZCBkaXJlY3RseSB0byBxdWVzdGlvbnMgc3Vycm91bmRpbmcgJDgwMDAgb2ZnYW1ibGluZ2xvc3NlcyBidXQgc2FpZCB0aGF0IHRoZSBnb3Zlcm5tZW50J3MgZmluYWwgZGVjaXNpb24gd2lsbCBiZSBpbmZvcm1lZCBieSBhIHBhcmxpYW1lbnRhcnkgaW5xdWlyeS4gClNvbGFuZ2UgbWFuIG5pY2h0IGludGVybmF0aW9uYWwgZ2VnZW4gU3RldWVyb2FzZW4gdm9yZ2VodCBvZGVyIHZvcmdlaGVuIGthbm4sIHdyZSBkYXMgbWVpbmVyIE1laW51bmcgbmFjaCBlaW4gZ3V0ZXIgZXJzdGVyIFNjaHJpdHQuIApBdCAxNDo0Miwgd2hpbGUgTmFvZnVtaSBzYXlzICJkb24gc3dpbSBpbiB0aGUgYmF0aCIsIHlvdSBjYW4gc2VlIHRoYXQgdGhlIHRhdHRvbyBkb2VzIGFjdHVhbGx5IGN1cmwgYWxvbmdzaWRlIGhlciBicmVhc3RzLCBzbyB0aGlzIGlzIGEgdmVyeSBsaWtlbHkgYW5zd2VyLiAxNTowMCwgaGVyIHNjb3dsLCBpdCB2ZXJ5IG9idmlvdXNseSBjaXJjdWxhciBhbmQgZm9sbG93aW5nIGhlciBjb250b3VycywgdGhhbmtzIHRvIGEgY2xvc2UgdXAgZGV0YWlsaW5nIGl0LiAKSSBub3QgY29udmluY2VkLiBMQ0QgInJlbGF0aXZlbHkgaW5leHBlbnNpdmUgYW5kIHZlcnNhdGlsZSIgc291bmRzIGxpa2UgZXhhY3RseSB3aGF0IEkgd2FudCBpbiBhIHNtYXJ0cGhvbmUgc2NyZWVuLgpUaGUgZ2FtZSBmZWVsaW5nIGNvb2tpZSBjdXR0ZXIvbGVzcyBoaXN0b3JpY2FsIGNvbXBhcmVkIHRvIHRoZSBsYXN0U29tZSB0ZWNoL2NvbWJhdCBtb2RpZmllciBkb2VzbiBhY3R1YWxseSBkbyBhbnl0aGluZyBldmVuIHRob3VnaCBpdCBzYXlzIGl0IGRvZXMuCkRlbm5pcyBjb3VsZCwgb2YgY291cnNlLCBpbml0aWF0ZSB0aGUgYnJlYWsgcmVnYXJkbGVzcyAgIGFuZCBlaXRoZXIgYWNjZXB0IEJ1dHRvbidzIHJldGlyZW1lbnQgb3IgZ2FtYmxlIHRoYXQgaGUgZG9lc24ndCByZWFsbHkgbWVhbiBpdC4gSW4gdGhpcyBzY2VuYXJpbyBCdXR0b24gY2Fubm90IGFmZm9yZCBmb3IgRGVubmlzIHRvIGJlbGlldmUgdGhhdCBoZSBpcyBub3QgcHJlcGFyZWQgdG8gZGVsaXZlciBvbiBoaXMgdGhyZWF0LiAKTm8sIHdoYXQgZXhhY3RseSBoYXBwZW5zIGlzIHRoZSBpdGVtIHRoYXQgd2UgcGF5IGZvciBpcyBtb3ZlZCB0byBhIG5ldyBiaWxsIGFuZCB0aGVuIHRoZSBiaWxsIGlzIGNsb3NlZC4gClBva2VyIGlzIG15IGd1aWx0eSBwbGVhc3VyZQpUaGUgc2Vjb25kIGVpZ2h0IGNvdW50cyBhbHNvIGluY2x1ZGUgdGhlIGFsbGVnYXRpb24gdGhhdCBTbW9sbGV0dCB0b2xkIHRoZSBkZXRlY3RpdmUgb25lIG9mIHRoZSBhdHRhY2tlcnMgbG9vcGVkIGEgcm9wZSBhcm91bmQgaGlzIG5lY2sgYSBkZXRhaWwgdGhhdCBib3RoIEpvaG5zb24gYW5kIHRoZSBqdWRnZSB3aG8gc2V0IFNtb2xsZXR0IGJvbmQgc2FpZCB3YXMgYSBwYXJ0aWN1bGFybHkgb2ZmZW5zaXZlIHVzZSBvZiBhIHN5bWJvbCBvZiB0aGUgdWdseSBoaXN0b3J5IG9mIGJsYWNrIGx5bmNoaW5ncyBpbiB0aGUgVW5pdGVkIFN0YXRlcy4KVGhlIHdheSB0aGF0IGpvYnMgYXJlIG5vdywgcGVvcGxlIGFyZSBoYXZpbmcgdG8gd29yayBtdWx0aXBsZSBqb2JzIGp1c3QgdG8gZ2V0IGJ5LiBUaGlzIGlzIGFuIHVuZm9ydHVuYXRlIHJlYWxpdHkgdGhhdCBJIHRoaW5rIHdpbGwgb25seSBjb250aW51ZSB1bmxlc3Mgc29tZXRoaW5nIGlzIGRvbmUuVGhhdCBiZWluZyBzYWlkLCB5b3UgYmFzaWNhbGx5IGhhdmUgdG8ganVzdCBrZWVwIHJlYWNoaW5nIG91dCB0byBmcmllbmRzLiBQZW9wbGUgd2hvIGhhdmUgc21hbGwga2lkcyBhcmUgZ29pbmcgdG8gYmUgdG91Z2ggYmVjYXVzZSBzbyBtdWNoIG9mIHRoZWlyIHRpbWUgaXMgZGVkaWNhdGVkIHRvIHRoZWlyIGtpZHMuTWF5YmUgZm9yIHRoZW0sIHRoZXkgdmFsdWUgaGF2aW5nIGEgZmFtaWx5IGFuZCBiZWluZyBhIHBhcmVudCBpcyBzb21ldGhpbmcgdGhleSBoYXZlIGFsd2F5cyB3YW50ZWQ/IFVuZm9ydHVuYXRlbHkgdGhhdCBtZWFucyB0aGF0IHRoZXkgaGF2ZSB0byBzYWNyaWZpY2Ugb3RoZXIgdGhpbmdzIGluIG9yZGVyIHRvIGF0dGFpbiB0aGUgZmFtaWx5IHRoZXkgd2FudC5NeSBhZHZpY2UgdG8geW91IGlzIHJlYWNoIG91dCwgc2hhcmUgc29tZSBvZiB5b3VyIGNvbmNlcm5zLiAKV2hhdCBjb3VsZCBiZSBtb3JlIGltcG9ydGFudCB0aGFuIHRoYXQ/IEJpZ2Zvb3Q/IFRoZSBtb29uIGJlaW5nIG1hZGUgb2YgcGVwcGVyIGphY2sgY2hlZXNlPyBUaG9zZSBjYW4gYmUgZnVuLCBidXQgdGhleSdyZSBpbmNvbnNlcXVlbnRpYWwuIEkgdGhpbmsgYSBsb3Qgb2YgcGVvcGxlIGhlcmUgdmFsdWUgbGliZXJ0eSBhbmQgd2FudCBhIGJldHRlciBsaWZlIGZvciB0aGVpciBmYW1pbGllcyBhbmQgdGhlaXIgY2hpbGRyZW4uCkkgc3RhcnRlZCBhcyBkaW1pciBjb250cm9sIGl0cyBncmVhdCBmb3IgYmVnaW5uZXIncy4gTm90IGp1c3QgYSBjYXN1YWwgY29udHJvbC9jb3VudGVyIG1hZ2ljIGRlY2sgYnV0IGFsc28gaGFzIGdyZWF0IGRpc2NhcmQga2l0cy4gCldlIGFscmVhZHkgY2FuIHVzZSBHb29nbGUgTWFwcyBhbmQgaGF2ZSB0byByZXNvcnQgdG8gTmF2ZXIgYW5kIEtha2FvLCBmZWVscyBsaWtlIHRoZSBzYW1lIHRyZW5kIHdoZW4gTmV0ZmxpeCBhbmQgS29yZWFuIGJyb2FkY2FzdGluZyBjb3Jwb3JhdGlvbnMgYXJlIG1lbnRpb25lZC4uIAoiSWYgYSBwaW1wIGlzIHR1cm5pbmcgb3V0IG9uZSBvZiBvdXIgYmFiaWVzLCBvbmUgb2Ygb3VyIGNoaWxkcmVuLCB0aGF0IGlzIHRoZSBzYW1lIGFzIGhpbSByYXBpbmcgdGhhdCBiYWJ5LCIgTWFydGluIHNhaWQuICJUaGUgcGVuYWx0eSBuZWVkcyB0byBiZSB0aGUgc2FtZS4iCklmIHNvbWVvbmUgc2F5cyBzb21ldGhpbmcgeW91IGRpc2FncmVlIHdpdGgsIHRoZW4geW91IHNob3VsZCBhbmQgYXJlIGJhc2ljYWxseSBvYmxpZ2F0ZWQgdG8gY3JpdGljaXplIGl0LiBIb3dldmVyLCB0aGVyZSBhIGRpZmZlcmVuY2UgYmV0d2VlbiBjcml0aWNpemluZyBzcGVjaWZpYyBiZWxpZWZzIG9yIHRoaW5ncyB0aGF0IHBlb3BsZSBoYXZlIHNhaWQgYW5kIHNtZWFyaW5nL2RlaHVtYW5pemluZyBhbiBlbnRpcmUgZ3JvdXAgb2YgcGVvcGxlIGFzICJmYXIgcmlnaHQiIGluIHRoZSBwYWdlcyBvZiBUaGUgR3VhcmRpYW4uIENhbGwgaXQgYSBib3kgd2hvIGNyaWVkIHdvbGYgc2l0dWF0aW9uLiAKTGFib3Igc3VwcG9ydHMgdGhlIGZpcnN0IGhhbGYgb2YgdGhlIHBlcnNvbmFsIHRheCBjdXQgcGxhbiBiZWNhdXNlIGl0IGhlbHBzIGxvd2VyICBhbmQgbWlkZGxlIGluY29tZSBlYXJuZXJzLCBidXQgc2F5cyB0aGUgc2Vjb25kIGhhbGYgaXMgYSBoYW5kb3V0IHRvIHRoZSByaWNoLiAKSSB3b3VsZG4ndCBiZSBhdCBhbGwgc3VycHJpc2VkIHRvIGhlYXIgdGhlIG5hbWVzIGFyZSBwZW9wbGUgZnJvbSB0aGUgV2hpdGUgSG91c2Ugb3IgdGhlIE9iYW1hIGNhbXBhaWduIG9yIHdobyBrbm93cyB3aGVyZSB0aGV5J3JlIGNvbWluZyBmcm9tLiIuIApUaGUgcmlzZSBvZiB0aGUgSW50ZXJuZXQgYW5kIHNvY2lhbCBuZXR3b3JrIHBsYXRmb3JtcyBqdXN0IG1hZGUgaXQgdGhhdCBtdWNoIGVhc2llciBmb3IgdGhlbSB0byBkbyB0aGF0LiAKSG93ZXZlciwgSSBjYW4gbm93IG5vIGxvbmdlciBiYXR0bGUgaW4gZ3ltcyBhdCBhbGwuIE15IG9wcG9uZW50IGdldHMgdG8gMCBjcCBidXQgZG9lc24gZGllOyBJIGp1c3QgZ2l2ZW4gdGhlICJuZXR3b3JrIGVycm9yIiBtZXNzYWdlLiAKTm90IG9ubHkgZG9lcyB0aGUgb25lIGNsaWNrIEZhY2Vib29rIHNpZ251cCBtYWtlIGl0IGVhc3kgdG8gdXBsb2FkIHlvdXIgaW5mb3JtYXRpb24gYW5kIHBob3RvcywgYnV0IGl0IGFsc28gZ3VhcmFudGVlcyBldmVyeW9uZSBpcyB3aG8gdGhleSBzYXkgdGhleSBhcmUuIFNoZSB3YXMgYm9ybiBvbiBBdWd1c3QgMjEsIDE5NzkuIAoiSSBmZWVsIGxpa2Ugd2UncmUganVzdCBvZmYgdGhlIGxlYWQgY2FycyBidXQgd2UgY2FuIGNvbXBldGUuIFRoYXQgd2FzIHNob3duIGJ5IEt1cnQgaW4gTGFzIFZlZ2FzIGFuZCBLeWxlIGluIEF0bGFudGEsIiBEdWNoYXJkdCBzYWlkLiAiQnV0IHdlJ3ZlIG9ubHkgcnVuIHR3byByYWNlcy4gVGhpcyBpcyBhIG1hcmF0aG9uLiBXZSBqdXN0IGhhdmUgdG8gc3RheSBvbiBpdCBhcyBhIHRlYW0sIGJ1dCBJIGZlZWwgcmVhbGx5IGdvb2QgYWJvdXQgaG93IHdlJ3JlIHdvcmtpbmcgdG9nZXRoZXIuIgpDbGFya2UgYW5kIERyLiBTaGloIGJvdGggaGF2ZSBpbXByZXNzaXZlIHJlY29yZHMgb2YgcHJvZHVjaW5nIGltcGFjdGZ1bCBpbnRlbGxlY3R1YWwgcHJvcGVydHkgYW5kIHNwdXJyaW5nIGlubm92YXRpb24gdGhhdCBpcyBwZXJ0aW5lbnQgdG8gdGhlIEhvdXN0b24gcmVnaW9uLCBFbG5hc2hhaSBzYWlkLiBmdXJ0aGVyIGVmZm9ydHMsIGluY2x1ZGluZyBoZWxwaW5nIFVIIGZhY3VsdHkgY29tbWVyY2lhbGl6ZSB0ZWNobm9sb2dpZXMgYXMgd2VsbCBhcyB3b3JraW5nIHdpdGggZ3JhZHVhdGUgYW5kIHVuZGVyZ3JhZHVhdGUgc3R1ZGVudHMgdG8gYm9vc3QgdGhlaXIgZW50cmVwcmVuZXVyaWFsIGVmZm9ydHMsIGFyZSBhIGNyaXRpY2FsIGNvbnRyaWJ1dGlvbiB0byBidWlsZGluZyB0aGUgcmVnaW9uIGlubm92YXRpb24gZWNvc3lzdGVtLiBpbmF1Z3VyYWwgY2xhc3Mgb2Ygc2VuaW9yIG1lbWJlcnMgcmVwcmVzZW50cyAzNyByZXNlYXJjaCB1bml2ZXJzaXRpZXMgYW5kIGdvdmVybm1lbnQgYW5kIG5vbnByb2ZpdCByZXNlYXJjaCBpbnN0aXR1dGVzLiBwYXRlbnRzIGFuZCB3aWxsIGJlIHJlY29nbml6ZWQgYXQgdGhlIGVpZ2h0aCBhbm51YWwgTkFJIG1lZXRpbmcsIHNldCBmb3IgQXByaWwgMTAgMTEgaW4gSG91c3Rvbi4KWW91IG5lZWQgdG8gbWFrZSBzdXJlIHRoaXMgZ2V0cyB0YWtlbiBjYXJlIG9mLCBBU0FQLiBJZiB5b3UgbmVlZCB0byBnZXQgdGhyb3VnaCB0cmFpbmluZyBmaXJzdCBteSBiaWdnZXN0IGFkdmljZSB3b3VsZCBiZQpJIGhhdmUgbG9uZyBtaWRuaWdodCBibGFjayBoYWlyIHRoYXQgcmVhY2hlcyBteSBsb3dlciBiYWNrIHNpbmNlIEkgbmV2ZXIgY3V0IGl0LCBhbmQsIGN1cnNlZCBhZ2FpbiwgdGhlIGxvY2tzIGFyZSBuZWl0aGVyIHN0cmFpZ2h0IG5vciB3YXZ5IGJ1dCBzb21ld2hlcmUgc3R1Y2sgaW4gYmV0d2Vlbi4uIApUaGUgc3RlcHMgdGhlIExlZ2lvbiBzYWlkIGl0IGhhZCB0YWtlbiBmb2xsb3cgdGhlIG5vcm1zIHJlcXVpcmVkIG9mIHJlbGlnaW91cyBvcmRlcnMuIFRoYXQgc2FpZCwgdGhlIGludmVzdGlnYXRpb25zIGhhdmUgb25seSByZWNlbnRseSBiZWd1biBhbmQgbWFueSBvZiB0aGVzZSBhY2N1c2F0aW9ucyBhcmUgb2xkIGFuZCBwcmVzdW1hYmx5IHdlcmUgcHJldmlvdXNseSBrbm93biB0byBpdHMgbGVhZGVyc2hpcC4KVGhhdCBhIGJhZCBzdXJwcmlzZSBhbmQgaXQgd2h5IHRoZSBDb25zZXJ2YXRpdmVzIHJlbGVudGxlc3NseSBleHBsb2l0IEp1c3RpbiBnYWZmZXMuLiAKUGxheWluZyBhdCB0aGUgY2FzaW5vIHRvdXJuYW1lbnRzIHRoZSBzdHJhdGVneSBtYXkgYmUgZGlmZmVyZW50IGZyb20gdGhlIGNvbW1vbiBnYW1ibGluZy4gV2hlbiBnYW1ibGluZywgZm9yIHRoZSBtb3N0IHBsYXllcnMgdGhlIG1haW4gdGhpbmcgaXMgbm90IHRvIGxvc2UuIApZb3UgYXJlIGVzc2VudGlhbGx5IGFza2luZyBob3cgdG8gYWNoaWV2ZSBhbiBhcmJpdHJhcnkgZ29hbCBhcyBhbiBhZHVsdCB3aGVuIHlvdSBkb24gaGF2ZSBzY2hvb2wgb3IgcGFyZW50cyB0byBhY3QgYXMgYSBtb3RpdmF0aW5nIGZvcmNlIGZvciB5b3UuIApTZWFyY2ggb2YgdGhlIEhhcHB5IEZvcmVzdCBTcGEgYXQgMjAyIFZpbGxhZ2UgYXQgU3RvbmVzIENyb3NzaW5nLCBwb2xpY2Ugc2FpZC4gCkkgZmVsdCBsaWtlIHRha2luZyBteSBsaWZlIHNpbmNlIEkgd2FzIGluIHRoZSBzZWNvbmQgZ3JhZGUuIApCZWNhdXNlIG9mIGl0cyBsaW1pdGVkIGhpc3RvcnksIHdlIGNhbnQgZXJhIGFkanVzdCBwYXN0IGl0LiBCdXQgaW4gbXkgYW5hbHlzaXMgcG9zdCBJIGRpZCBwb2ludCBvdXQgdGhhdCBKYWNraWUgU21pdGggMTk4NyBzZWFzb24gaXMgaW4gdGhlIGFyZ3VtZW50IGZvciBHT0FUIGZvciBleGFjdGx5IHRoYXQgcmVhc29uLiAKTGlnaHQgcGVja3Mgd2VyZSBmaW5lLiBBZnRlciBvdXIgZmlyc3Qga2lzcyBhIGxpdHRsZSBiaXQgdHJhbnNmZXJyZWQgb24gaGltIGFuZCBJIGp1c3QgcnViYmVkIGl0IGF3YXkuIEkgdGhpbmsgZXhwZWN0aW5nIHRvIHdlYXIgYSBib2xkIGxpcCBhbmQgdGhlbiBjb25zdGFudGx5IHRvdWNoIHlvdXIgcGFydG5lciBhbmQgZWF0IGZvb2QgaXMgZ29pbmcgdG8gYmUgcmVhbGx5IGhhcmQgdG8gZG8uCllvdSBib3RoIGVuZ2FnYWdlZCwgYW5kIHlvdSBhY2tub3dsZWRnZSBlYWNoIG90aGVyIG5vbnZlcmJhbGx5ICAgdG91Y2hlcywgZ2xhbmNlcyBldGMuIFBhdXNlIHRvIHJlYWQgc29tZSBwYXNzYWdlIHlvdSBsaWtlZCB0byBoZXIgb3IgYXNrIHdoYXQgYSB3b3JkIG9yIGN1bHR1cmFsIHJlZmVyZW5jZSBtZWFucy4gCkpvaG4gUGFybWV0ZXIgdG9sZCBwb2xpY2UgYWJvdXQgRmF0aGVyIEJyb2NrIGJlaW5nIGEgcmVndWxhciBmYW1pbHkgZ3Vlc3QsIGFuZCBob3cgaGlzIHBhcmVudHMgb3JnYW5pc2VkIGZvciB0aGUgcHJpZXN0IHRvIHByb3ZpZGUgcGVyc29uYWwgbXVzaWMgdHJhaW5pbmcgZm9yIHRoZWlyIGNoaWxkcmVuIGF0IHRoZSBwcmVzYnl0ZXJ5LiAKSSBmZWVsIGxpa2UgdGhpcyBpcyBtb3JlIG9mIGEgcGhpbG9zb3BoaWNhbCBxdWVzdGlvbi4gSSBoYXZlIGEgbm9ybWFsIGNyZWRpdCBoaXN0b3J5IHJlbGF0aXZlIHRvIG15IGFnZSBhbmQgYSA3NTBpc2ggc2NvcmUuIEJ1dCBJIGhhZCB0byB3b3JrIGZvciB0aGF0LiBJbiBteSBsYXRlIHRlZW5zIGFuZCBtb3N0IG9mIG15IHR3ZW50aWVzIEkgZGlkbiBrbm93IGFueXRoaW5nIGFib3V0IHBlcnNvbmFsIGZpbmFuY2UsIG5vIHVuZGVyc3RhbmRpbmcgb2YgY3JlZGl0LCBvciB0aGUgcmVzcG9uc2liaWxpdHkgb2YgdGhhdCBjcmVkaXQuIEFuZCBpdCB0YW5rZWQgbXkgc2NvcmUuIEkgc3RpbGwgaGF2ZSBzaGl0IG9uIG15IHJlcG9ydCB0aGF0IEkgcmVncmV0IGZyb20gdGhhdCB0aW1lLgpNeSBwb2ludCBpcyBtYW55IENocmlzdGlhbnMgZmVlbCBhdHRhY2tlZCBieSB0aGUgdm9jYWwgbGVmdCBhbmQgaXQgZGFtYWdpbmcgYWxsIGFyb3VuZCB3aXRob3V0IGRvaW5nIGFueSBnb29kLiBFdmVuIG9uIHJlZGRpdCwgdHJ5IGJyaW5nIHVwIENocmlzdGlhbml0eSBpbiBhbnkgcG9zaXRpdmUgbGlnaHQsIG9uIGFueSBwb2xpdGljYWwgc3ViLCBhbmQgcGVvcGxlIHdpbGwgYXR0YWNrIGl0LiBJdCBzaWxseS4gSXQgYWJzdXJkLgpXYWxlcyBhbHNvIGN1cnJlbnRseSBtYWtpbmcgY2hhbmdlcyB0byBrZWVwIGluIGxpbmUgd2l0aCBmaW5hbmNlcy4gVGhlbiB3ZSBtb3ZlIG9uIHRvIHRoZSBwcmVtaWVyc2hpcCBjbHVicyBub3QgZ2VuZXJhdGluZyBhcyBtdWNoIHJldmVudWUgYXMgcGVvcGxlIHdvdWxkIGxpa2UgYW5kIHRha2luZyBvbiBDVkMgaW52ZXN0bWVudCB0byB0cnkgYm9vc3QgdGhhdCByZXZlbnVlIGV0Yy4uIApTYW1lLCBJIHJlbWVtYmVyIGdldHRpbmcgaHlwZWQgZm9yIGl0LCBidXQgYWx3YXlzIGtuZXcgSSB3YXNuJ3QgZ29pbmcgdG8gY29tZSB3aXRoaW4gMTAgZmVldCBvZiBpdCBhdCBsYXVuY2gsIGZvciB0aGUgcmVhc29ucyBjb3ZlcmVkIGluIHRoaXMgcmV2aWV3LiAKRm9yIGV4YW1wbGUgSSBsb3ZlICBidXQgSSBhbHdheXMgb25seSBqdXN0IGdvbmUgdG8gcmVzdGF1cmFudHMgdGhhdCBzZXJ2ZSBpdCBmcm9tIGEgbWVudS4gClN1YnNlcXVlbnQgdG8gaGVyIGRlYXRoLCB3ZSBleHBsb3JlZCBuZXcgY2h1cmNoZXMgKGZvciBpc3N1ZXMgbm90IHJlbGF0ZWQgdG8gdGhhdCBwYXJ0aWN1bGFyIHNpdHVhdGlvbikgYW5kIGVuZGVkIHVwIGF0IGEgY291cGxlIGNodXJjaGVzIG9mIGEgZGlmZmVyZW50IGRlbm9taW5hdGlvbnMgdGhhbiB3aGF0IEkgaGFkIGFsd2F5cyBiZWVuLiBCYXB0aXN0LCBCVFcuIApTb21lIGhhdmUgcG9pbnRlZCB0byBBdGxhbnRpYyBDaXR5IGFzIGFuIGV4YW1wbGUgb2Ygb3ZlcnNhdHVyYXRpb24gb2YgY2FzaW5vcyBpbiBhIHNtYWxsIG1hcmtldC4gRml2ZSBvZiB0aGUgTmV3IEplcnNleSBzZWFzaWRlIHJlc29ydCB0b3duIDEyIG1ham9yIGNhc2lub3MgaGF2ZSBjbG9zZWQgaW4gdGhlIHBhc3QgdHdvIHllYXJzLiBUaGUgVHJ1bXAgVGFqIE1haGFsLCB3aGljaCBjbG9zZWQgdGhpcyBtb250aCwgaXMgdGhlIGxhdGVzdCBjYXN1YWx0eS4gTWVhbndoaWxlLCBOZXcgSmVyc2V5IHZvdGVycyB3aWxsIGJlIGFza2VkIG5leHQgbW9udGggd2hldGhlciB0byBleHBhbmQgZ2FtYmxpbmcgdG8gb3RoZXIgcGFydHMgb2YgdGhlIHN0YXRlLgpFbGVjdHJvbmljaWVuIGF1dG9kaWRhY3RlLCBIb3dhcmQgU3RhcGxldG9uIGEgY29uZmVjdGlvbm4gc29uIG1jYW5pc21lIHNvbm9yZSwgZGFucyBzYSBjaGFtYnJlLCBhcHJzIHMndHJlIGxhc3MgZHUgY29tcG9ydGVtZW50IGRlcyBzYXV2YWdlb25zIGRlcyBlbnZpcm9ucyBxdWkgbHVpIGd0YWllbnQgbCdleGlzdGVuY2Ugbm9uIG1vaW5zIHF1ZSBjZWxsZSBkZXMgY29tbWVyYW50cyB2b2lzaW5zLiBTb24gYXJtZSBkZSBkaXNzdWFzaW9uIGF1ZGl0aXZlIHRlc3RlIHN1ciBzZXMgcHJvcHJlcyBlbmZhbnRzIG4nYWZmZWN0ZSBwYXMgbCdvcmVpbGxlIGRlcyBhZHVsdGVzIGV0IHMnYXZyZSBzYW5zIGRhbmdlciBzdXIgbGEgc2FudCBkZSBzZXMgdmljdGltZXMuIEVsbGUgYSB0IGV4cHJpbWVudGUgIGdyYW5kZSBjaGVsbGUsIGV0IGF2ZWMgc3VjY3MsIGRhbnMgbGUgY29tdCBkZSBTdGFmZm9yZHNoaXJlIChNaWRsYW5kcykgc291cyBsJ2F1dG9yaXQgZGUgbGEgcG9saWNlIHF1aSBzJ2VuIGZhaXQgbGUgVlJQLi4gCiJNeSByZXNlYXJjaCB0cmllZCB0byB0ZWFzZSBhcGFydCB2YXJpb3VzIHBvdGVudGlhbCBmYWN0b3JzLCBzdWNoIGFzIHRoZSBwcmVzZW5jZSB2ZXJzdXMgYWJzZW5jZSBvZiByYWluIGFuZCBkYXlsaWdodCB2ZXJzdXMgY2xvdWRpbmVzcyAodGhlc2UgdmFyaWFibGVzIGFyZSBjb25mb3VuZGVkLCBhcyBpdCByYXJlbHkgcmFpbnMgd2hlbiB0aGUgc2t5IGlzIHN1bm55KSwiIFdhdHNvbiBzYXlzLiAiSSByZWFsbHkgY291bGQgbm90IGZpbmQgbXVjaCBldmlkZW5jZSB0aGF0IGFueXRoaW5nIGluZmx1ZW5jZWQgcGVvcGxlJ3MgbW9vZC4gV2hlbiBJIHN0YXJ0ZWQgdGhpcyByZXNlYXJjaCwgSSB3YXMgdmVyeSBjb25jZXJuZWQgYWJvdXQgYmVpbmcgYWJsZSB0byBsb2NhdGUgdGhlIHNvdXJjZSBvZiBhbnkgZWZmZWN0cy4gRm9yIGluc3RhbmNlLCBpZiBwZW9wbGUgZmVlbCBibHVlIG9uIGEgcmFpbnkgZGF5LCBpdCBjb3VsZCBiZSB0aGUgcHJlY2lwaXRhdGlvbiwgb3IgdGhlIGNsb3VkaW5lc3MsIG9yIHRoZSBiYXJvbWV0cmljIHByZXNzdXJlLCBvciB0aGUgZmFjdCB0aGF0IHRoZSByYWluIHJlc3RyaWN0cyB0aGVpciBhY3Rpdml0aWVzIGFuZC9vciBtYWtlcyB0aGVtIG1vcmUgc3RyZXNzZnVsL2xlc3MgcGxlYXNhbnQuIEhvd2V2ZXIsIEkgcmVhbGx5IGZvdW5kIG5vIGV2aWRlbmNlIHRoYXQgcGVvcGxlIGZlbHQgc2FkIG9uIHJhaW55IGRheXMsIHNvIG5vbmUgb2YgdGhlc2UgdmFyaWFibGVzIHNlZW1zIHRvIGJlIGNydWNpYWxseSBpbXBvcnRhbnQuIgpUaGUgY3VycmVudCBidXNpbmVzcyBwbGFuIHdpbGwgc2VlIHRoZSBjb3Vyc2UgcmVjb25maWd1cmVkIHRvIGFsbG93IGZvciBhIDQyIGxvdCBiYXR0bGVheGUgc3ViZGl2aXNpb24gYmVzaWRlIER1bm1vcmUgUm9hZCwgd2hpY2ggaXQgaXMgaG9wZWQgd2lsbCBtYWtlIGEgcHJvZml0IG9mICQ1IG1pbGxpb24gb25jZSBkZXZlbG9wbWVudCBjb3N0cyBhcmUgdGFrZW4gaW50byBhY2NvdW50LiBUaGUgaG90ZWwgd2lsbCBiZSB1cGdyYWRlZCB0byBhY2NvbW1vZGF0ZSAxMCBwb2tlciBtYWNoaW5lcy4gCkkgcmVjZW50bHkgYXR0ZW5kZWQgYSBidXNpbmVzcyBjb21tdW5pY2F0aW9uIHNlbWluYXIgcHV0IG9uIGJ5IHRoZSBsb2NhbCBjaGFtYmVyIG9mIGNvbW1lcmNlLiBUaGUgYXR0ZW5kZWVzIHdlcmUgYWxtb3N0IGFsbCBuYXRpdmUgSmFwYW5lc2Ugc3BlYWtlcnMuIApUaGUgc2Vjb25kIHBoYXNlIGlzIGZvciB0cmVhdG1lbnQuIApSYXRoZXIsIHRoZXkgd2VyZSBhIGRpcmVjdCBtZWFzdXJlIG9mIGhvdyBlYWNoIHBlcnNvbiBwZXJjZWl2ZWQgdGhlIGNvbXBldGl0aW9uLiAKSXQgcmVtaW5kcyBtZSBvZiB0aGUgY2hhbGxlbmdlIHRvIENhbGlmb3JuaWEgZGVhdGggcGVuYWx0eS4gVGhlIGFyZ3VtZW50IGhpbmdlZCBvbiBkZWF0aCBiZWluZyBhICJjcnVlbCBhbmQgdW51c3VhbCBwdW5pc2htZW50IiB2aW9sYXRpbmcgdGhlIDh0aCBhbWVuZG1lbnQuIFRoZSBqdWRnZSBydWxlZCBzYXlpbmcgdG8gc29tZXRoaW5nIHRvIHRoZSBlZmZlY3Qgb2YgIkRlYXRoIGlzIG1vc3QgY2VydGFpbmx5IGEgY3J1ZWwgcHVuaXNobWVudCwgYnV0IGluIHRoaXMgY291cnRzIG9waW5pb24gaXQgaXMgbm90IHVudXN1YWwsIGFuZCB0aHVzIGRvZXMgbm90IHJlYWNoIHRoZSBiYXIgb2YgImNydWVsIGFuZCB1bnVzdWFsIiBwdW5pc2htZW50LiIuIAozMDAgd2FzIGp1c3QgbW9uZXkgZG93biB0aGUgZHJhaW4sIGhlIGNvdWxkIGhhdmUganVzdCByZXJhaXNlZC4gV2hhdCB3b3VsZCB5b3UgaGF2ZSBkb25lPyBJdHMgYWxsIGluIG9yIG5vdGhpbmcsIDMwMCBtYWRlIHlvdSBsb29rIGxpa2Ugc2hpdC4uIApIaXMgZGlzc2VudHMgaW4gY2FzZXMgaW52b2x2aW5nIGdheSByaWdodHMgY291bGQgYmUgYXMgYml0aW5nIGFzIHRoZXkgd2VyZSBwcmVzY2llbnQuIEZvcm1hbGx5IGRlY2xhcmluZyBhbnlvbmUgb3Bwb3NlZCB0byBzYW1lIHNleCBtYXJyaWFnZSBhbiBlbmVteSBvZiBodW1hbiBkZWNlbmN5LCB0aGUgbWFqb3JpdHkgYXJtcyB3ZWxsIGV2ZXJ5IGNoYWxsZW5nZXIgdG8gYSBzdGF0ZSBsYXcgcmVzdHJpY3RpbmcgbWFycmlhZ2UgdG8gaXRzIHRyYWRpdGlvbmFsIGRlZmluaXRpb24sIFNjYWxpYSB3cm90ZSBpbiBkaXNzZW50IGluIDIwMTMgd2hlbiB0aGUgY291cnQgc3RydWNrIGRvd24gcGFydCBvZiBhIGZlZGVyYWwgYW50aSBnYXkgbWFycmlhZ2UgbGF3LiAKQSB3ZWxsIGtub3duIG1heGltLCBhdHRyaWJ1dGVkIHRvIENodXJjaGlsbCBpbiB0aGUgZGFya2VzdCBkYXlzIG9mIFdXSUksIGlzIHRoYXQgY2FuIGFsd2F5cyBjb3VudCBvbiBBbWVyaWNhbnMgdG8gZG8gdGhlIHJpZ2h0IHRoaW5nIGFmdGVyIHRoZXkgdHJpZWQgZXZlcnl0aGluZyBlbHNlLiAKVG8gc2V0IGl0IHVwLCBmb2xsb3cgdGhlIGluc3RydWN0aW9ucy4gClNoZSBoYXMgdHVybmVkIGhlcnNlbGYgaW50byBhbiBleHBlcnQgc25pcGVyIGluIG9yZGVyIHRvIG9uZSBkYXkga2lsbCBTZW5hdG9yIFJvYXJrLCBidXQgYWZ0ZXIgZmFpbGluZyBvbiBtYW55IGF0dGVtcHRzIHRvIHB1bGwgdGhlIHRyaWdnZXIsIHNoZSB0dXJucyB0byBNYXJ2IHRvIGhlbHAgaGVyLlVubGlrZSBpdHMgcHJlZGVjZXNzb3IsIHRoZSBzdG9yeWxpbmVzIGRvdHRlZCB0aHJvdWdob3V0IE1pbGxlciBhbmQgUm9iZXJ0IFJvZHJpZ3VleidzIGxhdGVzdCB3b3JrIGFyZSBsYWNraW5nLCB3ZWxsLCBhIHN0b3J5LiAKWW91IHRoaW5rIEkgd2lsbCBqdXN0IHN0YW5kIHRoZXJlIGFuZCBsZXQgeW91IGtpbGwgbWU/IFlvdSB0aGluayBwZW9wbGUgd29uIHRyeSB0byBhdmVuZ2UgbWU/IENvbWUgb24sIGRvbiBiZSBzbyBzdHVwaWQuLiAKSXQgd2lsbCBvbmx5IG1vdmUgdG93YXJkcyBmdXJ0aGVyIGdyZWF0bmVzcyB1bmRlciBQcmVzaWRlbnQgVHJ1bXAuIApUaGUgc2hvdyB3YXMgc29tZXRoaW5nIG9mIGEgbGFib3VyIG9mIGxvdmUgZm9yIERhd3Nvbiwgd2hvIHNhaWQgdGhlIHBheSBiYXJlbHkgY292ZXJlZCBwZXRyb2wgdG8gZ2V0IHRoZSBzdHVkaW8uIkl0IHdvdWxkIGJlIGdyZWF0aWYgdGhlcmUgd2FzIGEgd2VsbCByZXNvdXJjZWQgbG9jYWwgYm9vayBzaG93IG9uIGZyZWUgdG8gYWlyIFRWLCBidXQgbWFpbnN0cmVhbSBUViBpcyBzaW1wbHkgbm90IGludGVyZXN0ZWQsIiBEYXdzb24gc2FpZC4gCkhlIHN1Y2ggYSBnb29kIGR1ZGUuIApJJ20gYXQgOGcvM21tLiBNeSB3b3JzdCBzdHJldGNoIHdhcyAybW0gdG8gMi41bW0gYmVjYXVzZSBJIGRpZCBkZW50IGNhcnRpbGFnZSBhbmQgdGhlIHRpcCBvZiBteSBub3NlIHdhcyBzb3JlIGZvciAzIG1vbnRocyEgMi41bW0gdG8gM21tIHdhcyBzdXBlciBlYXN5LgpTbyB0aGlzIGNvdXBsZSBhbmQgdGhlaXIgc29uIGNvbWUgb3Zlci4gSGUgcm91Z2hseSBteSBhZ2UsIEkgd2FzbiBwYXlpbmcgYXR0ZW50aW9uIGFuZCBJIHJlbWVtYmVyIG5vdGhpbmcgYWJvdXQgaGltLiAKWW91IGNhbiBmaWx0ZXIgYW5kIHNlYXJjaCBmb3IgeW91ciBwZXJmZWN0IHByb2plY3QgYW5kIGRvd25sb2FkIHRoZSBQREYgZWFzaWx5LiBBbGwgdGhlIGtuaXR0aW5nIHBhdHRlcm5zIHlvdSdsbCBuZWVkLCBpbmNsdWRpbmcgV2VuZHksIFJvd2FuLCBhbmQgU2lyZGFyLiAKQnV0IGl0IG1ha2luZyBtZSBjcmF6eSB0byBsaXZlIGluIGEgY291bnRyeSB0aGF0IGlzIHNvIGZhciBiZWhpbmQgdGhlIGN1cnZlIG9uIGdsdXRlbiBzYWZldHkuIEV2ZXJ5IHRpbWUgSSBnbyB0byB0aGUgc3VwZXJtYXJrZXQgSSBmaW5kIG15c2VsZiBxdWVzdGlvbmluZyB3aGV0aGVyIGEgcHJvZHVjdCBtYXkgYmUgc2FmZS4gSSBoYXZlIGFscmVhZHkgYWNjaWRlbnRhbGx5IG15c2VsZiBzZXZlcmFsIHRpbWVzOyB3aGVuIEkgZ2V0IGdsdXRlbml6ZWQsIEkgdHVybiBpbnRvIGEgZGVwbGV0ZWQgem9tYmllLi4gCkl0IG5vdCB1bmNvbW1vbiB0byB0dXJuIHRoZSBuZXdzIG9uIHRoZXNlIGRheXMgYW5kIHNlZSBhIG5ldyBuYXJyYXRpdmUgb2YgZW50aXRsZW1lbnQgYW5kIHdoaW5pbmcgd2hpbGUgc29tZW9uZSBjbGFpbXMgbGlmZSBpcyB0b28gaGFyZCBvciB1bmZhaXIuIFBlb3BsZSB3aXRoIHRoaXMgbWluZHNldCB0ZW5kIHRvIGJlIHF1aWNrIHRvIHBvaW50IG91dCBob3cgdGhlIGNhcmRzIHRoZXkgd2VyZSBkZWFsdCBoYXZlIGFmZmVjdGVkIHRoZWlyIGFiaWxpdHkgdG8gYmUgc3VjY2Vzc2Z1bC4gCkl0IGlzIHRob3NlIExvdHVzIGZlZXQsIHdoaWNoIGFyZSB3b3JzaGlwZWQgYnkgZXZlbiBCcmFobWFkZXYsIHRoYXQgbm93IHRoZSBtZXJjaWZ1bCBIYXJpIGhhcyBwbGFjZWQgb24gbXkgSGVhZCEiIDIgcG9pbnRzICBzdWJtaXR0ZWQgMiBtb250aHMgYWdvWW91ciBhbmFsb2d5IGRvZXNuIHNlZW0gdG8gc3RhbmQgKG9yIGF0IGxlYXN0IHlvdSBtaXN1bmRlcnN0b29kIHRoZSBhcmd1bWVudCBmb3Igb2JqZWN0aXZlIG1vcmFsaXR5KS5UYWtlIGEgYXJndW1lbnQgZm9yIG9iamVjdGl2ZSBtb3JhbGl0eSAod2hpY2ggaXNuIGlzbiBuZWNlc3NhcmlseSBhIHRoZWlzdGljIG9yIGF0aGVpc3RpYyBjbGFpbSwgbWFueSBhdGhlaXN0aWMgcGhpbG9zb3BoZXJzIGJlbGlldmUgaW4gb2JqZWN0aXZlIG1vcmFsaXR5KSBnb2VzIHNvbWV0aGluZyBsaWtlIHRoaXMuIApUaGV5IGhhdmUgYSBiaWcgd2VkZGluZywgZ2V0IHRoZWlyIHBlcmZlY3QgcGxhY2Ugc2V0dGluZ3MgYW5kIHRoYXQgZXNwcmVzc28gbWFrZXIgdGhleSBhbHdheXMgd2FudGVkLCB0aGVuIHRoZXkgZ28gYmFjayB0byB0aGVpciBjcmF6eSwgaG9tb3Bob2JpYyBzdGF0ZXMgd2l0aCAibWluaSBET01BcyIgKHN0YXRlIGxldmVsIERlZmVuc2Ugb2YgTWFycmlhZ2UgQWN0cyBqdXN0IGluIGNhc2UgdGhlIGZlZGVyYWwgRE9NQSBmYWxscyB0byB0aG9zZSBob21vIGxvdmluIGZlZHMpLiAKVG8gYmUgZmFpciwgSHlkcm8gRmxhc2sgd2FzIHZlcnkgY29yZGlhbCBidXQgaXQgc3RpbGwgc2VlbXMgYSBiaXQgdW5uZWNlc3Nhcnkgc2luY2UgSSB3YXMgbm90IGNsYWltaW5nIHRvIGJlIHRoZW0uIApIZSB3YXMgYSBibG9uZCwgc3Bpcml0bGVzcyBtYW4sIGFuYWVtaWMsIGFuZCBmYWludGx5IGhhbmRzb21lLiBXaGVuIGhlIHNhdyB1cyBhIGRhbXAgZ2xlYW0gb2YgaG9wZSBzcHJhbmcgaW50byBoaXMgbGlnaHQgYmx1ZSBleWVzLi4gCldQIENvbXBhbnkgTExDICgiVGhlIFdhc2hpbmd0b24gUG9zdCIpIHJlY29nbml6ZXMgdGhlIGltcG9ydGFuY2Ugb2YgcHJvdGVjdGluZyB0aGUgcHJpdmFjeSBvZiB5b3VyIHBlcnNvbmFsIGluZm9ybWF0aW9uLCBhbmQgd2UgaGF2ZSBwcmVwYXJlZCB0aGlzIFByaXZhY3kgUG9saWN5IHRvIHByb3ZpZGUgeW91IHdpdGggaW1wb3J0YW50IGluZm9ybWF0aW9uIGFib3V0IG91ciBwcml2YWN5IHByYWN0aWNlcy4gVGhpcyBQcml2YWN5IFBvbGljeSBhcHBsaWVzIHdoZW4geW91IHVzZSBhIHdlYnNpdGUsIG1vYmlsZSBvciB0YWJsZXQgYXBwbGljYXRpb24sIG9yIG90aGVyIG9ubGluZSBzZXJ2aWNlIChjb2xsZWN0aXZlbHksIHRoZSAiU2VydmljZXMiKSB0aGF0IGxpbmtzIG9yIHJlZmVycyB0byBpdC4gSXQgZG9lcyBub3QgZ292ZXJuIG9yIGFwcGx5IHRvIGluZm9ybWF0aW9uIGNvbGxlY3RlZCBvciB1c2VkIGJ5IFdQIENvbXBhbnkgTExDIHRocm91Z2ggb3RoZXIgbWVhbnMuLiAKV2hlbiBJIHdhcyB3aXRoIENTSyBbQ2hlbm5haSBTdXBlciBLaW5nc10sIE1haGkgYmhhaSBbTVMgRGhvbmldIGJhY2tlZCBteSBhYmlsaXRpZXMuIApIaXMgQ29tbW9uIFRvbmVzIEluIFNpbXBsZSBUaW1lIGhhcyBhIGtpbmQgb2YgYW1iaWVudCBmZWVsLCBpZiB0aGF0J3Mgd2hhdCB5b3UncmUgbG9va2luZyBmb3IsIGFzIGRvZXMgR3JhbmQgUGlhbm9sYSBNdXNpYyAoYXQgbGVhc3QsIHVudGlsIHRoZSAzcmQgbW92ZW1lbnQpLi4gCkEgeWVhciBsYXRlciwgdGhlIGNvbXBhbnkgYW5ub3VuY2VkIGl0IGhhZCBzb2xkIE5lY3RhciwgYSBCcml0aXNoIGxveWFsdHkgcHJvZ3JhbSwgdG8gQnJpdGlzaCByZXRhaWxlciBTYWluc2J1cnkgZm9yICQxMDUgbWlsbGlvbiwgMTEgeWVhcnMgYWZ0ZXIgQWltaWEgYm91Z2h0IHRoZSBzY2hlbWUgZm9yICQ3NTUgbWlsbGlvbi4KTm90aGluZyBpcyBmb3JldmVyLiAKSSBqdXN0LiAKQWxzbywgdGhlIGNsdWIgaXMgcHJlcGFyZWQgdG8gc3VibWl0IHNlcGFyYXRlIGRldmVsb3BtZW50IGFwcGxpY2F0aW9ucyB0byBzdGFnZSBsYXJnZXIgZXZlbnRzIGluY2x1ZGluZyBpdHMgYW5udWFsIFBva2VyIFJ1biB3aGljaCBjb3VsZCBzZWUgdXAgdG8gMTUwIHBlb3BsZSBvbiBzaXRlLgpXaGVuIGNsYXNzIGVuZGVkIEkgbWV0IHVwIHdpdGggbXkgY291c2luIHdobyBhbHdheXMgd2Fsa2VkIHdpdGggbWUgdG8gRnJlbmNoIGNsYXNzLiBTaGUgc2FpZCAiZGlkIHlvdSBoZWFyIGEgcGxhbmUgZmxldyBpbnRvIHRoZSBXb3JsZCBUcmFkZSBDZW50ZXI/IiBJIHJlbWVtYmVyIGV4YWN0bHkgd2hhdCBJIHNhaWQuLiAKQ2xldmVybGluZWdvZXNoZXJlIHUKIldoaWxlIEkgaGF2ZSBub3QgeWV0IHB1dCBkb3duIGFueSBzdHJvbmcgcm9vdHMgaW4gdGhlIGNvbW11bml0eSBhcyBJIGp1c3QgbW92ZWQgaGVyZSwgSSBpbnRlbmQgdG8gc3RheSBoZXJlIHBlcm1hbmVudGx5LCIgQmFsZGVycmFtYSB3cml0ZXMuIApUaGUgc28gY2FsbGVkICJOYWJ1Y2NvIiBwaXBlbGluZSwgZm9yIGV4YW1wbGUsIHdhcyBhIHBsYW4gdG8gYnlwYXNzIFJ1c3NpYSBieSBoYXZpbmcgYSBwaXBlbGluZSBydW5uaW5nIGZyb20gdGhlIENhc3BpYW4gU2VhIHRvIEV1cm9wZSwgZnJvbSBUdXJrZXkgdG8gQXVzdHJpYSB2aWEgQnVsZ2FyaWEsIFJvbWFuaWEgYW5kIEh1bmdhcnkuIEJ1dCB0aGF0IHByb2plY3Qgd2FzIHNoZWx2ZWQgbGFzdCBKdW5lLCB3aGVuIGdhcyBwcm9kdWNlcnMgaW4gQXplcmJhaWphbiBvcHRlZCBmb3IgYSBkaWZmZXJlbnQgcGxhbi4uIApPciB3YWl0IG91dCBhIGdhbWUgb2YgcG9vbCBpbiB0aGUgY29tZm9ydCBvZiBhIGNsYXNzaWMgYmlsbGlhcmRzIGNoYWlyLiAKLiBBQ0NVRUlMIGV0IFBMQU4gRFUgU0lURSAxLiBJbnN0aXR1dCBkZSBEdmVsb3BwZW1lbnQgZW4gQ3JhdGl2aXQgZXQgZW4gUCAxLiBOb3V2ZWxsZXMgaW1wb3J0YW50ZXMhIDIuIE5vdHJlIHF1aXBlLCBub3Mgb2JqZWN0aWZzIDMuIERldmVuaXIgbWVtYnJlIGRlIGwnQVBOIDQuIFByb2dyYW1tZXMgZGVzIGFjdGl2aXRzIEFQTiAyMDA4ICAgMjAwOSA0LjEgSm91cm5lcyBkZSBMQSBGRU1NRSBFTkNFSU5URSA0LjIgU1lNUE9TSVVNUyBJbnRlcm5hdGlvbmF1eCBlbiBTYW50IGV0IFByaW5hIDQuMyBSZXZ1ZSBkZSBwcmVzc2Ugc3VyIG5vcyB2bmVtZW50cyA1LiBPc3RvcGF0aGllICBNb250cmFsIDYuIFBOTCBldCBjb2FjaGluZyAgTW9udHJhbCA4LiBOb3MgYWN0aXZpdHMgZGFucyBsZXMgUm9jaGV1c2VzIGNhbmFkaWVubmVzIDkuIGNvbmZyZW5jZXMsIGF0ZWxpZXJzIGV0IGNvdXJzIGRlIGwnQVBOIEFjdGl2aXRzIGhlYmRvbWFkYWlyZXMgc2FuY2VzIHNhbnQgQXBwb3J0IHN1ciBsZXMgc2FuY2VzIHNhbnQgQm9ubmVzIGFmZmFpcmVzICB2ZW5kcmUgZCdvY2Nhc2lvbiBDb2FjaGluZyBkZSB2aWUgdm5lbWVudHMgSS4gU2UgcHJvdGdlciBkZXMgcHJkYXRldXJzIGh1bWFpbnMgSUkuIFZORU1FTlRTIERFIEwnQVBOIElJSS4gUG9zdGdhZHVlcyBlbiBvc3RvcGF0aGllIElWLiBNYWdhc2luYWdlIEFQTiBkZSBib25zIHByb2R1aXRzIExvaXNpcnMgUEFSVEVOQUlSRVMgZXQgcmVjb21tYW5kYXRpb25zIFYuIE91dmVydHVyZSBzdXIgbGUgbW9uZGUgVkkuIERFIExBIFNBTlQgIExBIFNBSU5URVQ6IExBIFZJRSBTUElSSVRVRUxMRSBWSUkuIFJGUkVOQ0VTLCBjb29yZG9uZXMgZXQgbGllbnMgaW50ZXJuZXQgVm95YWdlICJWaWUgYW1vdXJldXNlIGV0IHZpZSBkZSBjb3VwbGUiCkhhdmUgdGhlbSBnaXZlIHlvdSBpbmZvcm1hdGlvbiBvbiB3aGF0IG90aGVyIGFkanVzdG1lbnRzIHlvdSBzaG91bGQgbWFrZS4gCkFsbGllZCBtaXNzaW9uIDggICBwcm90ZWN0IENocm9ub3NwaGVyZSB3YXMgdG91Z2ggdW50aWwgeW91ciBtYWNybyBnYW1lIGdvdCB2ZXJ5IGdvb2QuCllvdSB0aGluayB5b3UgY2FuIGdldCBhd2F5IHdpdGggc2F5aW5nIHRoYXQgc2hpdCB0byBtZSBvdmVyIHRoZSBJbnRlcm5ldD8gVGhpbmsgYWdhaW4sIGZ1Y2tlci4gClRoZSBvbmxpbmUgZ2FtYmxpbmcgaW5kdXN0cnkgaXMgb25lIG9mIHRoZSBsYXJnZXN0IEludGVybmV0IGJhc2VkIGluZHVzdHJpZXMuIElmIHlvdSBoYXZlIGV2ZXIgdGhvdWdodCBhYm91dCBtYWtpbmcgbW9uZXkgd2l0aCBnYW1ibGluZywgdGhlcmUgYXJlIHBsZW50eSBvZiBvcHBvcnR1bml0aWVzIHRvIGJlIHRhcHBlZC4gQSBsaXR0bGUgYml0IG9mIGNhcGl0YWwgaXMgYWxsIHlvdSBuZWVkIHRvIHN0YXJ0IHBsYXlpbmcuIApJbSBub3QgYnV0IG9rYXkgbG9sLiBJIGtub3cgc3RpcGUgaGFzIHRoZSByZWNvcmQgZm9yIG1vc3QgY29uc2VjdXRpdmUgaHcgZGVmZW5jZXMuIAoiT25jZSB0aG9zZSBjYXVnaHQgb24sIG1vcmUgcGVvcGxlIGJlZ2FuIHNlZWtpbmcgb3V0IHRlYWNoZXIgdHJhaW5pbmdzIGFuZCBzdGFydGVkIGNvbm5lY3Rpbmcgb24gRmFjZWJvb2ssIGFuZCBpdCBncmV3IGZyb20gdGhlcmUuIiBUaGVyZSBhcmUgdHdvIHN0dWRpb3MgaW4gdGhlIGNvdW50cnkgZm9jdXNlZCBvbmx5IG9uIGFjcm95b2dhLCBhbmQgb25lIG9mIHRob3NlIGlzIGluIExhcyBWZWdhcy4gCllvdSBzZWUgaW4gdGhlIG5ld3MgdGhhdCBHZXJtYW55IHByb2R1Y2VkIDc1JSBvZiBlbGVjdHJpY2l0eSBmcm9tIHJlbmV3YWJsZSBzb3VyY2VzLiBUaGlzIGlzIHRydWUsIGdyZWF0IHN1Y2Nlc3MgZm9yIHN1cmUsIGJ1dCBtaXNsZWFkaW5nLiAKSGUgaGFkIGJlZW4gaW4gdGhlIExpdmVXaXJlIEJhciBhbmQgd2FzIGVzY29ydGVkIGZyb20gdGhlIHByZW1pc2VzLCB0aGUgY291cnQgd2FzIHRvbGQuCkFuZCB0aGlzIHdhcyBkb25lIG5vdCB0byBjYXB0dXJlIG9yIGtpbGwgdGVycm9yaXN0cywgYnV0IHNvIHRoYXQgdGhlIGdvdmVybm1lbnQgY291bGQgbGllIGFib3V0IGhvdyBtYW55IGNpdmlsaWFucyB0aGV5IHdlcmUgaWxsZWdhbGx5IGtpbGxpbmcuIApTdXJlIHlvdSBtYXkgcHJlZmVyIGl0LCBidXQgb3ZlcmFsbCwgaXQgaXMgYW4gaW5mZXJpb3IgZGV2aWNlLCBoZW5jZSB0aGUgcHJpY2UgYW5kIHBvcHVsYXJpdHkgZGlmZmVyZW5jZS4gCldlIHN0YXllZCBGV0IgZm9yIGEgZmV3IG1vbnRocyBidXQgaGUgc3RpbGwgaGFkIGhpcyBnaXJsZnJpZW5kLiAKVGhlIEJhbmsgb2YgQ2FuYWRhIG1pZ2h0IGJlIGxlYW5pbmcgdGhhdCB3YXksIGJ1dCBpdHMgam9iIGRlc2NyaXB0aW9uIGtlZXBzIGl0IGZyb20gbWFraW5nIGRpcmVjdGlvbmFsIGJldHMgdG9vIHNvb24uIApUaG9zZSBzYW1lIHBlb3BsZSB3b3VsZCBoYXZlIHZvdGVkIGZvciBiZXJuaWUgaW4gYSBoZWFydGJlYXQuIApJdCByZW1pbmRzIG1lIG9mIGFuIGVhcmx5IHByb3Rlc3QgYWdhaW5zdCB0aGUgQ29tbXVuaXN0IFBhcnR5IHRoYXQgSSB3YXMgYXQgaW4gTW9zY293IGluIDE5ODkuIApPbmUgd2lsZCBjYXJkIGluIHRoZSBwZW5kaW5nIG5lZ290aWF0aW9ucyBiZXR3ZWVuIHRoZSBIb3VzZSBhbmQgU2VuYXRlIGlzIHRoZSBTZW1pbm9sZSBUcmliZS4gCklmIHlvdSBsb29rIGF0IGNoYXJhY3RlcnMgdGhhdCBkbyB0aGUgc2FtZSB0aGluZyBsaWtlIEJvd3NlciBvciBHYW5vbiwgQm93c2VyJ3MgU2lkZSBCIGlzIGEgc3RyYWlnaHQgdXAgc3VpY2lkZSB3aGVyZSBhbGwgeW91IG5lZWQgdG8gZG8gaXMgY29tbWFuZCBncmFiIHRoZSBvcHBvbmVudC4gSWYgeW91IG1pc3MgdGhlIGdyYWIsIHlvdSBqdXN0IGxlYXZlIHlvdXJzZWxmIG9wZW4gdG8gZ2V0IGhpdC4gCkhlIG1vc3QgbGlrZWx5IGRvZXNuJ3QgcGxheSBqNixqMyxqNy4gCllvdSB0ZW5kIHRvIGJ1YmJsZSBvdGhlciBwZW9wbGUgYmVzaWRlcyB5b3VyIFJlaW4gYSBsb3QgdG8gaGVscCB0aGVtIHdpbiBtaW5pIGR1ZWxzLiAKV2Ugd2lsbCByZW1vdmUgcG9zdHMgc29saWNpdGluZyBvciBnaXZpbmcgYWR2aWNlIGFib3V0IHN1aWNpZGUuIFBvc3RpbmcgYWJvdXQgaG93IHlvdSBmZWVsIGlzIHF1aXRlIGFscmlnaHQsIGJ1dCBwbGVhc2UgZG9uIGFzayBmb3IgYWR2aWNlIGFib3V0IGhvdyB0byBlbmQgaXQgYWxsLiBTb21ldGltZXMsIHNpbXBseSB2ZW50aW5nIGhlbHBzIQpJZiB3ZSBsb29rIGF0IGJldHRlciB0aGFuIHRvcCBwYWlyIHRoZSBudW1iZXIgZ2V0cyByZWR1Y2VkIHRvIDglLiBJZiB3ZSByZW1vdmUgb3ZlciBwYWlycyB3ZSBkb3duIHRvIDUuMjUlLi4gClRoaXMgaXMgZnVja2luZyBoaWxhcmlvdXMgdG8gbWUuIFNvIHRoZSBNQUlOIHRoaW5nIHRoYXQgQUxMIG9ncmFuaXNtcyBvbiB0aGlzIGFuZCBhbnkgb3RoZXIgcGxhbmV0IGFyZSBzdXBwb3NlZCB0byBkbywgd2hpY2ggaXMgcmVwcm9kdWN0aW9uLCBpcyBzb21laG93ICJiYWQiIG9yICJ1bm5lY2Vzc2FyeSIgdG8geW91IHBlb3BsZT8gTGl0ZXJhbGx5IHRoZSBvbmx5IHJlYXNvbiB5b3UgYWxpdmUgcmlnaHQgbm93IGlzIGJlY2F1c2UgZ2VuZXJhdGlvbnMgb2YgeW91ciBhbmNlc3RvcnMgZGlkIHRoYXQgIm1vc3QgYmFzaWMiIHRoaW5nLiBBbmQgeW91IHJpZ2h0LCBpdCBpcyBiYXNpYy4gSXQgaXMgdGhlIG1haW4gaW5zdGluY3Qgb2YgYW55IG9yZ2FuaXNtIG9uIEVhcnRoLCB0aGUgb25seSB0aGluZyB0aGF0IGRyaXZlcyB0aGUgbGlmZSBpdHNlbGYgZm9yd2FyZC4KUG9vbHMuIApIYXZlIHlvdSBjb21mb3J0YWJseSBjb21wbGV0ZWQgYSBydW4gY2xvc2UgdG8gdGhhdCBsZW5ndGggaW4gdGhlIGxhc3QgbW9udGg/IElmIEkgd2VyZSB5b3UsIEkgd291bGQgYnVpbGQgbXkgYmFzZSB1cCBtb3JlLiAKTXkgY291c2luIGFuZCBoZXIgaHVzYmFuZCBnb3QgYSBCb3JkZXIgQ29sbGllIHB1cHB5LCByaWdodCBhZnRlciB0aGV5IGhhZCBhIGJhYnkgYW5kIG1vdmVkIGludG8gYSBuZXcgaG91c2UuIFRoZSBkb2cgc3BlbnQgbW9zdCBvZiBoaXMgZGF5IGluIGEgY3JhdGUgYmVjYXVzZSB0aGV5IGRpZG4gaGF2ZSB0aGUgdGltZSB0byBwbGF5IHdpdGggaGltIGFuZCBoZSB3YXMgbnV0cyBmcm9tIGFsbCBoaXMgcGVudCB1cCBlbmVyZ3kgYW5kIGJvcmVkb20uIApXQVNISU5HVE9OIChBUCkgICBBbnRvbmluIFNjYWxpYSwgdGhlIGluZmx1ZW50aWFsIGNvbnNlcnZhdGl2ZSBhbmQgbW9zdCBwcm92b2NhdGl2ZSBtZW1iZXIgb2YgdGhlIFN1cHJlbWUgQ291cnQsIGhhcyBkaWVkLiBIZSB3YXMgNzkuIApXaGl0ZSBub3JtYWxseSBzdGFuZHMgZm9yICQxLjAwLiBQaW5rIGluZGljYXRlcyAkMi41MCwgYW5kIHJlZCBuZWFybHkgYWx3YXlzIG1lYW5zICQ1LjAwLiAKRGllIEJhciB2b24gRG9hIFJvc2EgaW4gRWwgVGFibGFkbyB3YXIgZWluZSBJbnN0aXR1dGlvbi4gV2VyIGluIGRlbiBCYXJyYW5jbyB3b2xsdGUgb2RlciBkZW4gc3RlaWxlbiBBdWZzdGllZyBoaW50ZXIgc2ljaCBoYXR0ZSwga2FtIHVud2VpZ2VybGljaCBhbiBpaHIgdm9yYmVpLCBkZW0gc296aWFsZW4gTWl0dGVscHVua3QgZGllc2VzIGtsZWluZW4sIGVpbnNhbWVuIHJ0Y2hlbnMgaG9jaCBvYmVuIGltIE5vcmRlbi4gQWxzIGRpZSBhbHRlIERhbWUgc3RhcmIsIGJsaWViZW4gZGllIFRyZW4genUuIApUaGUgc3RhdGVtZW50IGZyb20gUGFtZWxhJ3MgcHVibGljaXN0IGFsc28gYWRkcmVzc2VkIHRoZSBydW1vcnMgc3Vycm91bmRpbmcgQW5kZXJzb24ncyBmcmllbmRzaGlwIHdpdGggdGhlIGxhdGUgU2ltcHNvbnMgY28gZGV2ZWxvcGVyIFNhbSBTaW1vbiBhZnRlciByZXBvcnRzIGNsYWltZWQgdGhhdCB0aGUgNTkgeWVhciBvbGQgc3Rhciwgd2hvIHBhc3NlZCBhd2F5IGVhcmxpZXIgdGhpcyBtb250aCBhZnRlciBhIGxvbmcgYmF0dGxlIHdpdGggY2FuY2VyLCBzZW50IGV4dHJhdmFnYW50IGdpZnRzIHRvIHRoZSBhY3RyZXNzIGJlZm9yZSBoaXMgZGVhdGguIEFkZGl0aW9uYWxseSwgbnVtZXJvdXMgcmVwb3J0cyBzdWdnZXN0ZWQgdGhhdCBBbmRlcnNvbiBkaWQgbm90IGF0dGVuZCBTaW1vbidzIGZ1bmVyYWwuLiAKVGhlIDIwMTUgRW1wbG95bWVudCBBZ3JlZW1lbnQgcGVybWl0cyBNci4gUGVhcnNvbiB0byBzZWxsIDMsMDAwLDAwMCBuZXQgc2hhcmVzIHdpdGhvdXQgcmVnYXJkIHRvIHRoZSByZXN0cmljdGlvbnMgZGVzY3JpYmVkIGFib3ZlIHBsdXMgdHJhbnNmZXIgYW4gYWRkaXRpb25hbCAxLDAwMCwwMDAgbmV0IHNoYXJlcyBpbiBjaGFyaXRhYmxlIGNvbnRyaWJ1dGlvbnMuLiAKKFBob3RvOiBIYW5kb3V0KUJlY2F1c2Ugb2YgRCBzdGF0dXJlIGFzIGFuIGFydGlzdCwgaGlzIHdvb2RibG9jayBwcmludCB3aXRoIGl0cyBhbmF0b21pY2FsIGluYWNjdXJhY2llcyB3YXMgY29waWVkIGV4dGVuc2l2ZWx5IGluIEV1cm9wZSBmb3IgdGhlIG5leHQgMzAwIHllYXJzLmZhc2NpbmF0ZWQgd2l0aCBob3cgdGhlc2UgdGhpbmdzIHRoYXQgYXJlIHVudHJ1ZSBiZWNvbWUgYWNjZXB0ZWQgaW4gaGlzdG9yeSwgQWNoamFkaSBzYWlkIGluIGFuIGludGVydmlldy5JbmRvbmVzaWEgd2FzIGEgY29sb255IG9mIFRoZSBOZXRoZXJsYW5kcyBmb3IgYWJvdXQgdGhyZWUgY2VudHVyaWVzIGFuZCBoYXMgYW4gZXh0ZW5zaXZlIGNvbGxlY3Rpb24gb2YgSW5kb25lc2lhbiBhcnRpZmFjdHMgaW4gdGhlIFJpamtzbXVzZXVtIGluIEFtc3RlcmRhbS4gClNlYXJjaGluZyBmb3IgZXRoaWNhbCBsaW5lIGluIGdhbWJsaW5nClByb2Nlc3MgQ2FuZGlkYXRlcyBmb3Igc3BvcnRzIG1hc3NhZ2UgY2VydGlmaWNhdGlvbiBtdXN0IHN1Ym1pdCBhbiBhcHBsaWNhdGlvbiBhbmQgb3Igc2ltcGxlIHJlZ2lzdGVyIGZvciBhIGNvdXJzZS4gU29tZSBwcm9ncmFtcyBoYXZlIHByZXJlcXVpc2l0ZXMuIFRoZSBVbHRyYVNwb3J0cyBTcG9ydHMgTWFzc2FnZSBDZXJ0aWZpY2F0aW9uLCBmb3IgZXhhbXBsZSwgcmVxdWlyZXMgc3R1ZGVudHMgdG8gaG9sZCBhIGN1cnJlbnQgbWFzc2FnZSB0aGVyYXB5IGxpY2Vuc2UgYW5kIGNvbXBsZXRlIGEgYmFzaWMgbGlmZSBzdXBwb3J0IGNvdXJzZSBiZWZvcmUgYXBwbHlpbmcuIApUbyB0aGUgdGFibGUncyBhbWF6ZW1lbnQsIHR3byBBY2UncyBmYWxsIGRvd24gb24gdGhlIHRhYmxlLiAKUG9saWNlIHdlcmUgcXVpY2tseSBhYmxlIHRvIGVsaW1pbmF0ZSBDYXRoZXJpbmUgYXMgYSBzdXNwZWN0LiBTaGUnZCBiZWVuIGF0IGhlciBob21lIGluIFV0YWggdGhlIG5pZ2h0IG9mIHRoZSBtdXJkZXJzLiAiSSB3YXMgYXQgdGhlIEFsYW1lZGEgQ291bnR5IFNoZXJpZmYncyBPZmZpY2UgZm9yIHF1ZXN0aW9uaW5nLiBBbmQgSSBzYWlkLCAnV2hlcmUgYXJlIHlvdSBnb2luZyB3aXRoIHRoaXM/JyAiIENhdGhlcmluZSBzYWlkLiAiVGhleSBzYWlkLCAnV2VsbCwgdGhlcmUncyBvbmx5IG9uZSBwZXJzb24gd2UgY2FuJ3QgcnVsZSBvdXQuJyAnV2VsbCwgd2hvPycgVGhleSBzYWlkLCAnV2VsbCwgeW91ciBicm90aGVyLicgJ015IGJyb3RoZXI/IFJlYWxseT8nICIiV2Ugd2VyZSBhYmxlIHRvIGVsaW1pbmF0ZSBjbG9zZSBjaXJjbGUgb2YgZnJpZW5kcy4gCk9uZSBvZiBteSBleGVzIHVzZWQgdG8gb3JkZXIgcGl6emEgZnJvbSB0aGlzIG9uZSBwbGFjZSB3aXRoIGFic29sdXRlbHkgYXdmdWwgcGl6emEsIGJ1dCBJIHB1dCB1cCB3aXRoIGl0IGZvciBhIHdoaWxlIGJlY2F1c2UgaXQgd2FzIGhpcyBmYXZvcml0ZS4gT25lIHRpbWUgdGhvdWdoLCBJIGNvdWxkbiBzdGFuZCBpdCBhbnltb3JlIGFuZCBJIGFza2VkIGhpbSBpZiB3ZSBjb3VsZCBvcmRlciBwaXp6YSBmcm9tIGEgZGlmZmVyZW50IHNob3AsIGJlY2F1c2UgSSB3YXNuIGEgZmFuIG9mIHRoZSBwbGFjZSBoZSBhbHdheXMgb3JkZXJlZCBpdCBmcm9tLiBCaWcgbWlzdGFrZSBvbiBteSBwYXJ0LiBUaGlzIHNlbnQgbXkgZXggaW50byBhbiBhYnNvbHV0ZSBSQUdFIGFuZCBoZSBwdW5jaGVkIGEgaG9sZSBpbiBteSB3YWxsIGFuZCB0aGVuIHN0YXJ0ZWQgY3J5aW5nIGFuZCBmbGlwcGluZyBvdXQgb24gbWUgYmVjYXVzZSBhcHBhcmVudGx5IGhpbSBodXJ0aW5nIGhpcyBoYW5kIHdhcyBub3cgbXkgZmF1bHQuIEhlIHRoZW4gbGVmdCBteSBhcGFydG1lbnQgYW5kIHJlZnVzZWQgdG8gc3BlYWsgdG8gbWUgZm9yIGEgd2Vlay4KU29vbiBhZnRlciwgaGUgam9pbmVkIHRoZSBKZWRpIE9yZGVyLCBiZWNvbWluZyBhIFBhZGF3YW4gdG8gT2JpIFdhbiBLZW5vYmkuIFNreXdhbGtlciB3YXMgYmVsaWV2ZWQgdG8gYmUgdGhlIENob3NlbiBPbmUgb2YgSmVkaSBwcm9waGVjeSwgb25lIHdobyB3b3VsZCBicmluZyBiYWxhbmNlIHRvIFRoZSBGb3JjZSBieSBkZXN0cm95aW5nIHRoZSBTaXRoLCB3aGljaCB3YXMgd2h5IHRoZSBKZWRpIENvdW5jaWwgY2hvc2UgdG8gYmVuZCB0aGUgSmVkaSBDb2RlIGFuZCBwZXJtaXQgaGlzIHRyYWluaW5nLi4gCkkgcmVncmV0IGFsbW9zdCBtb3JlIHRoYW4gYW55dGhpbmcgbm90IHRha2luZyBwb2tlciBzZXJpb3VzbHkgYmFjayB0aGVuLCBidXQgYWxhcywgaGVyZSB3ZSBhcmUuIFNpbmNlIHJldHVybmluZyB0byB0aGUgZ2FtZSB0aGlzIEFwcmlsL01heSBhcmVhLCBhZnRlciBhIG5lYXIgMyB5ZWFyIGxheW9mZiBJIHdhcyBzdGlsbCBhYmxlIHRvIGNvbWUgYmFjayBhbmQgYmVhdCAyNU5MIG9uIFBTIG92ZXIgYSBsYXJnZSBzYW1wbGUsIGV2ZW4gdGhvdWdoIEkgZmVlbCBjYXNoIGlzIG15IHdlYWtlciBwYXJ0IG9mIG15IGdhbWUsIGFzIEkgcmVhbGx5IGVuam95IE1UVCBtb3JlIHRoYW4gYW55dGhpbmcuIApJIGRvbiB0aGluayB0aGF0IGJyYWtlIGJ5IHdpcmUgZXZlbiBleGlzdHMgeWV0LiAKVGhlIGlkZWEgaXMgeW91IGFuZCB5b3VyIG1hbiBhcmUgZ29pbmcgdG8gbWFrZSBsaXR0bGUgd2FnZXJzIG9uIHRoZSBnYW1lIG9yIHRoaW5ncyBzdXJyb3VuZGluZyB0aGUgZ2FtZS4gQW5kIGluc3RlYWQgb2YgYmV0dGluZyB3aXRoIGNhc2gsIHlvdXIgY3VycmVuY3kgaXMgZWFjaCBvdGhlci4uIApOb3Qgc3VyZSB3aGF0IHllYXIgaXQgd2FzIGJ1dCBzdHVkeWluZyB0aGlzIHdoZW4gSSB3YXMgZ2V0dGluZyBteSBlbnZpcm9ubWVudGFsIHNjaWVuY2UgZGVncmVlIHdhcyB2ZXJ5IGludGVyZXN0aW5nLiBTY2llbnRpc3QgZXN0aW1hdGUsIGF0IGN1cnJlbnQgdGVjaG5vbG9naWVzLCB0aGF0IHRoZSB3b3JsZCBjYW4gc3VzdGFpbiBhcm91bmQgOCB0byAyMCBiaWxsaW9uIHBlb3BsZSAoeWVzIEkga25vdyB0aGlzIGlzIGEgaHVnZSBnYXApLiBJIG5vcm1hbGx5IHBvc3Qgb24gdGhlaXIgcG9zdCBzYXlpbmcgd2h5IHRoaXMgaXMgYWN0dWFsbHkgYSBnb29kIHRoaW5nIGFuZCBob3cgaXQgaXMgYmV0dGVyIGZvciBldmVyeW9uZSB0aGF0IHRoZWlyIHdpbGwgYmUgbGVzcyBwZW9wbGUuIElmIHRoZXkgcmVhbGx5IHB1c2ggaXQsIHRoZW4gSSBzdGFydCB0YWxraW5nIGFib3V0IG92ZXJwb3B1bGF0aW9uLCByZXNvdXJjZXMsIGVjdC4gSSBkb250IGdldCBtYW55IHBlb3BsZSBvYmplY3RpbmcgYWZ0ZXIgSSBnaXZlIHRoZW0gdGhlIHNjaWVuY2UgYW5kIGZhY3RzIHRvIHN1cHBvcnQgbXkgcG9zaXRpb24uCkkgYmVlbiBjYWxsZWQgcmV0YXJkZWQsIGluc2VjdXJlLCBzaGFsbG93LCBzdXBlcmZpY2lhbCwgc2VsZmlzaCwgYW5kIGEgZG91Y2hlIGJ5IHlvdS4gQWxsIGZvciB3aGF0LiBUYWtpbmcgcHJpZGUgaW4gdGhlIGZhY3QgdGhhdCBJIERPIGdldCBwYWlkIHdlbGw7IHdoaWNoIGJ1dCB0aGUgd2F5LCBieSBubyBtZWFucyBsdW1wcyBtZSBpbnRvIHRoZSBjYXRlZ29yeSBvZiBwZW9wbGUgd2hvIGNhcmVzIG9ubHkgYWJvdXQgaG93IG11Y2ggbW9uZXkgSSBjYW4gaG9hcmQgYmVmb3JlIEkgZGllLiAKQW5kIEkgaGF2ZSBhIHN1cGVyIGhpZ2ggcHJvZmlsZSBqb2IhIEknbSBqdXN0IHNvIGFuZ3J5IGFsbCB0aGUgdGltZS4gSGUgZG9lcyBjbGVhbiBhbmQgZG8gdGhpbmdzIGZvciB0aGUgaG91c2UsIGJ1dCBoZSBqdXN0IHNheXMgaGUncyBub3QgZ29vZCBhdCB0YWtpbmcgY2FyZSBvZiB0aGUgYmFieSBhbmQgSSBhbS4gQW5kIHdoZW4gaGUncyBub3QgYW5ncnkgYXQgbWUgZm9yIG5vdCBjbGVhbmluZyBtb3JlIHdoaWxlIEknbSBkb2luZyBhbGwgdGhlIGNoaWxkIGNhcmUgYW5kIGluY29tZSBnZW5lcmF0aW9uLCBoZSdzIGRlcHJlc3NlZCBiZWNhdXNlIGhlJ3Mgbm90IHdoZXJlIGhlIHdhbnRzIHRvIGJlIGluIGxpZmUgYW5kIGxpdGVyYWxseSB3YWxraW5nIGFyb3VuZCB0aGUgaG91c2UgY3J5aW5nIHNvIEkgaGF2ZSB0d28gY3J5aW5nIGJveXMgdG8gZGVhbCB3aXRoLiAKWW91IGdldCBmcmVlIGRyaW5rcyB3aGlsZSBwbGF5aW5nIGF0IGFueSBjYXNpbm8sIGJ1dCB0aGUgQXJpYSBoYXMgdGhlIGJlc3QgZHJpbmtzIChpbmNsdWRpbmcgT3JhbmdlIEp1aWxpdXNlcyBhbmQgd2F0ZXJtZWxvbiBqdWljZSkuLiAKUmVtZW1iZXI6IFRoZSBTY2hvb2wgaGFzIHRoZSBvcHRpb24gdG8gcHJvbW90ZSBvciBOb3QgUHJvbW90ZSBhIGxlYXJuZXIgaW4gbWVudSAxMi43LjE4LiBCVVQgdGhpcyBjYW4gb25seSBiZSBkb25lIGlmIGEgcmVhc29uIGlzIGdpdmVuIGluIHRoZSBjb21tZW50cyBjb2x1bW4gZnJvbSBhIHNldCBkcm9wZG93biBtZW51IGxpc3Qgb2YgY29tbWVudHMuCkF1ZiB1bnNlcmVyIFdlYnNlaXRlIGtvbW1lbiBmb2xnZW5kZSB1bmJlZGluZ3QgZXJmb3JkZXJsaWNoZW4gQ29va2llcyB6dW0gRWluc2F0ejoKSXQgd2FzIG1hZGUgYmFjayB3aGVuIHRoZSBtYWluIGtpbmQgb2YgYXJ0IHdlIGdvdCB3YXMgc3RpbGwgaW1hZ2VzLCBsaWtlIHBhaW50aW5ncyBhbmQgZHJhd2luZ3MsIHNvIHRoYXQgdGhvc2UgY291bGQgYmUgZmlsdGVyZWQgb3V0IG9uIHRoZSB3ZWVrZW5kcyB3aGlsZSBvdGhlciwgbGVzcyBwcm9taW5lbnQgc3R1ZmYgZ290IHNlZW4uIFdlIHZvdGVkIG9uIHRoaXMgc2V2ZXJhbCB0aW1lcyBiZWZvcmUgbm93OyBhcyByZWNlbnRseSBhcyBsYXN0IHllYXIsIHRoZSBjb21tdW5pdHkgdm90ZWQgdG8gYmxvY2sgc3RpbGwgaW1hZ2UgYXJ0IG9uIHRoZSB3ZWVrZW5kcyBidXQgYWxsb3cgY3JhZnQuIApJIGdvIGJhY2sgaW50byB0aGUgYmVkcm9vbSBoYWxmIGV4cGVjdGluZyBtb3N0IG9mIHRoZSBjbG90aGVzIGZvbGRlZC4gVGhleSBhcmVuJ3QuIApUaGUgc2V0dGxlbWVudCBhZ3JlZW1lbnQgc2F5cyBDaHVyY2hpbGwgdW5kZXJ3ZW50IGEgcHN5Y2hvbG9naWNhbCBhc3Nlc3NtZW50IGluIHRoZSBmYWxsLiBTaGUgY2Fubm90IHJlYXBwbHkgZm9yIGEgbGljZW5jZSB0byBwcmFjdGlzZSBpbiBOb3ZhIFNjb3RpYSB1bmxlc3Mgc2hlIHByb3ZpZGVzIGEgcXVhbGlmaWVkIG1lZGljYWwgb3BpbmlvbiB0byB0aGUgY29sbGVnZSBzYXRpc2ZhY3Rpb24gdGhhdCBzaGUgaXMgY29tcGV0ZW50IGFuZCBmaXQgdG8gcHJhY3Rpc2UuCkkgc3RhcnRpbmcgdG8gZ2V0IGludG8gdGhlIG1pbGVhZ2UgdGVycml0b3J5ICgxNSsgbWlsZXMpIHdoZXJlIEkgZmVlbGluZyBsaWtlIG9uZSBvciB0d28gZ2VscyBpc24gZW5vdWdoIGZvciBtZSBhbmQgYW0gdHJ5aW5nIHRvIGNvbWUgdXAgd2l0aCBhIHBsYW4uIApDYW4gd2UgcGxlYXNlIGdldCBzb21lIHZhcmlldHkgb2Ygb3B0aW9ucy4gClllcywgTXVzbGltcyBhcmUgYWxsb3dlZCB0byBwbGF5IGZyZWUgcG9rZXIuIApMaWZlLiBKdXN0IGJlY2F1c2Ugb25lIG1ldGhvZCBoZWxwZWQgb25lIGtpZCBzdGF5IG9mZiB0aGUgc21va2VzLCBkb2Vzbid0IG1lYW4gaXQgd29ya3MgZm9yIGV2ZXJ5b25lIGVsc2UuLiAKSGFyZCB0byBwdXQgaW50byB3b3JkcyByZWFsbHkuIEkgZ3Vlc3MgSSBleHBlY3RlZCBsaWZlIHRvIGJlIHNvbWV3aGF0IHNpbWlsYXIgdG8gdGhlIHdheSBpdCBpcyBpbiBhbiBhbmltZSBzdWNoIGFzIEh5b3VrYSwgYnV0IHdpdGggYSBsZXNzIGNvbG9yZnVsIHBhbGV0dGUuIEFuZCBhcyBhbiBhbmltZSBnZWVrIEkgZXhwZWN0ZWQgbXkgZXhwZXJpZW5jZSBvZiB0aGF0IGN1bHR1cmUgaW4gSmFwYW4gdG8gYmUgc29tZXdoYXQgbGlrZSBHZW5zaGlrZW4/IEFuZCBpdCBoYXMuCk11ZWxsZXIgYWxyZWFkeSBpcyBpbnRlcmVzdGVkIGluIHNvbWUgb2YgVHJ1bXAncyB0d2VldHMgdG8gdGhlIGV4dGVudCB0aGV5IHJhaXNlIG9ic3RydWN0aW9uIG9mIGp1c3RpY2UgY29uY2VybnMuIApUaGlzIGlzIHNvIGltcG9ydGFudCB3aGVuIGNhbGxpbmcgYSByYWlzZSwgY2hlY2tpbmcgZG93biwgb3Igc2ltcGx5IGZvbGRpbmcgdGhvc2UgdW5mb3J0dW5hdGUgZ29vZCBoYW5kcyBhdCB0aW1lcy4gClRoZSBjb3VwbGUgbWV0IG9uIHRoZSBzZXQgb2YgdGhlaXIgMjAxMSBmaWxtICJUaGUgUnVtIERpYXJ5LiIgVGhlaXIgZGl2b3JjZSB3YXMgZmluYWxpemVkIGluIDIwMTcuLiAKSSBsb3N0IG5lYXJseSBoYWxmIG15IHJvbGwgb3ZlciB0aGUgcGFzdCBtb250aC4gCkRpZSBrcmVpc2NoZW4gamVkZXMgbWFsIHdlbm4gZWluZSBDYXJib250YXggdm9yZ2VzY2hhZ2VuIHdpcmQgaHl0ZXJpc2NoIHJ1bSBiZXIgTVVIIE9ORSBQRVJDRU5UIHVuZCBpaHJlbiBhY2ggc28gZ2VpbGVuIEdyZWVuIE5ldyBEZWFsIChkZXIgbmljaHQgbWFsIHdhcyBicmluZ2VuIHdyZGUuIApUaGlzIGlzIGV2ZXJ5dGhpbmcgeW91ciBtb3RoZXIgICBlc3BlY2lhbGx5IGlmIHNoZSdzIGEgRGVtb2NyYXQgICB3YXJuZWQgeW91IGFib3V0LiAKV2hlbiBwbGF5ZXJzIGRvIGp1Z2dsZSwgaXQgaXMgb2Z0ZW4gdG8gc3BlY3RhY3VsYXIgZWZmZWN0LiBTbyBpdCBpcyB3aXRoIHB1c2hpbmcgaGFuZHMgY29tcGV0aXRpb24uLiAKU2luY2UgSSBoYWQgdG8gd3JpdGUgdGhpcyBlZGl0LCBpdCBzZWVtcyBteSBodW1vciB3YXMgcG9vcmx5IGRvbmUuIFBsZWFzZSBhY2NlcHQgbXkgc2luY2VyZSBhcG9sb2dpZXMuLiAKU2luY2UgTGFkeSBnYWdhIHRyYXZlbHMgYXJvdW5kIHRoZSB3b3JsZCBzaGUgY2hhbmdlcyBoZXIgcGhvbmUgbnVtYmVyLCBidXQgaSBrbm93IGhlciBBbWVyaWNhbiBwaG9uZSBudW1iZXIgYW5kIGhlciBDYW5hZGlhbiBwaG9uZSBudW1iZXIuIE15IGZyaWVuZCB3ZW50IHRvIGEgc2Fsb24gYW5kIHRoZSBzYWxvbidzIGZyaWVuZCBrbm93cyBMYWR5IGdhZ2EuIApCdXQgb2YgY291cnNlIHNvY2lhbCBtZWRpYSBhbmQgbWFueSBwb2xpdGljYWwgY2FuZGlkYXRlcyBqdW1wZWQgb24gaXQgYXQgdGhlIGZpcnN0IHNpZ24gb2YgdHJvdWJsZSBiZWNhdXNlIGl0IGNvbmZpcm1lZCBvdXIgd29yc3QgZmVhcnMuIApOb3RoaW5nIHdpbGwgZXZlciBnZXQgdGhlIHNtZWxsIG91dC4uIApXZSBrbm93IGl0LCB0aGV5IGtub3cgaXQgYW5kIFJ1c3NpYSBrbm93cyBpdC4gClRoZXNlIHdlcmUgdGhlIGRheXMgb2YgbGF3bGVzc25lc3MuIApJIGdldCBwYWlkIGEgc2FsYXJ5IHRvIGRvIGl0LiAKU2V0IGluIHRoZSBzaGFkb3dzIG9mIHRoZSByZWQgcm9jayBjbGlmZnMgb2YgU25vdyBDYW55b24gU3RhdGUgUGFyaywgdGhpcyBmaXRuZXNzIGZvY3VzZWQgc3BhIHB1dHMgaGlraW5nIGZyb250IGFuZCBjZW50ZXIuIEd1ZXN0cyBjaG9vc2UgZnJvbSAzMCBkaWZmZXJlbnQgZ3VpZGVkIHRyZWtzIGVhY2ggd2Vlaywgc29tZSBvZiB3aGljaCBleHBsb3JlIG5lYXJieSBaaW9uIGFuZCBCcnljZSBDYW55b24gbmF0aW9uYWwgcGFya3MsIGFzIHdlbGwgYXMgdGhlIEdyYW5kIENhbnlvbiAoYWJvdXQgMTAwIG1pbGVzIGF3YXkpLiBBbiBhZHZlbnR1cmUgY29uY2llcmdlIGlzIG9uIGhhbmQgdG8gaGVscCBndWVzdHMgc2VsZWN0IHRoZSByaWdodCBkaWZmaWN1bHR5IGxldmVsOiBFeHBsb3JlciB0cmVrcyBjb25zaXN0IG9mIGxlaXN1cmVseSB3YWxrcyBpbiB0aGUgZm9vdGhpbGxzLCB3aGlsZSBFbmR1cmFuY2Ugb3V0aW5ncyBhcmUgcmVjb21tZW5kZWQgZm9yIGh1bWFuIGJpbGx5IGdvYXRzLi4gClRoaXMgaXMgb25seSBuZWNlc3NhcnkgaWYgeW91IHdhbnQgdGhlIGVsZW1lbnRhbCBnZWFyOyB0aGUgMzAgbW5lbWVzIHRoYXQgeW91IG5lZWQgdG8gZ2V0IHRoZSB3ZWFwb24gdXBncmFkZWQgY2FuIGJlIHZlcnkgY2hlYXBseSBvYnRhaW5lZCBieSBwdXJjaGFzaW5nIGRpcnQgY2hlYXAgc3RhY2tzIG9mIHRoZSAyIG1vc3QgY29tbW9uIGxvZ29ncmFtcyBvbiB0aGUgbWFya2V0Ym9hcmQuLiAKRWl0aGVyIHRoYXQgYW55IG9mIHRoZSByZXN0IG9mIHRoZSBsYXVuZHJ5IGxpc3QuIEZydWl0LCBzdGVhayBhbmQgYSBwbGFzdGljIGJhZywgYSBjb21wbGljYXRlZCBhcnJheSBvZiBiYWxsb29ucywgYSBwYWlyIG9mIGhlYWRwaG9uZXMsIHN0cmluZywgc29ja3MsIGEgdGVkZHkgYmVhciwgYSBwaW5lYXBwbGUsIGEgdmFyaWF0aW9uIG9mIHJvb3RzIGFuZCB2ZWdnaWVzIHVwIG15IGJlaGluZCBhbmQgcXVpdGUgcG9zc2libHkgbXkgb3duIG5hdmVsIHdoaWNoIHdhcyBtdWNoIGVhc2llciB0byB3b3JrIHdpdGggb25jZSBJIGdvdCBoYXJkLi4gCklzIG91ciBwb2xpY3kgbm90IHRvIGRpc2N1c3Mgb3VyIGNsaWVudHMgYWZmYWlycyBpbiBwdWJsaWMgYW5kIHdlIHZlcnkgbXVjaCByZWdyZXQgdGhhdCBwcm9jZWVkaW5ncyB3ZXJlIGJyb3VnaHQgYWdhaW5zdCB1cy4KVGhlIG1hbiBjYWxsZWQgIkJlZ3MiIGVudGVycyB0aGUgZmluYWwgdGFibGUgd2l0aCAyOS45IG1pbGxpb24gY2hpcHMsIHdoaWNoIGlzIHRoaXJkIG1vc3QuIEhlJ2xsIGJlIGNvbXBldGluZyBhZ2FpbnN0IHBsZW50eSBvZiBwcm9zIHNlYXRlZCBhcm91bmQgdGhlIHRhYmxlLCBpbmNsdWRpbmcgUGhpbCBJdmV5ICg5LjggbWlsbGlvbiBjaGlwcyksIHdobyBtYW55IGJlbGlldmUgaXMgdGhlIGJlc3QgcG9rZXIgcGxheWVyIGFsaXZlLCBhbmQgYW5vdGhlciBhY2NvbXBsaXNoZWQgcHJvLCBKZWZmIFNodWxtYW4gKDE5LjYgbWlsbGlvbiBjaGlwcykuCkdpdmluZyBhdWRpZW5jZXMgc29tZXRoaW5nIHRoZXkgZGlkbiBrbm93IHRoZXkgd2FudCBpcyBmaW5lLiAKQ29uc2lkZXIgbGF5ZXJpbmcgYXMgbXVjaCBhcyBwb3NzaWJsZSBmb3IgdGhlIGZsaWdodCB0byBmcmVlIHVwIHNvbWUgZXh0cmEgc3BhY2UgYW5kLCBpZiBwb3NzaWJsZSwgbm90IHdlYXJpbmcgeW91ciB3aW50ZXIgb3V0ZXJ3ZWFyLiAKRXZlcnlvbmUgb24gaGVyZSB0aGF0IGFyZ3VpbmcgdGhpcyB0YWxraW5nIHBvaW50IC4gCidJIHN1cHBvcnQgTXVzbGltIHdvbWVuIHdpdGggb3Igd2l0aG91dCBoaWphYiwgYW5kIGhvdyB0aGV5IGRyZXNzIGlzIHRoZWlyIGNob2ljZS4gQW5kIHdpdGggdGhlIE5pa2UgU3BvcnRzIEhpamFiLCBpdCBzdXJlbHkgd2lsbCBlbmNvdXJhZ2UgYSBuZXcgZ2VuZXJhdGlvbiBvZiBhdGhsZXRlcyB0byBwdXJzdWUgc3BvcnRzIHByb2Zlc3Npb25hbGx5LCBhbmQgd2l0aG91dCB1cyBhdGhsZXRlcyB3aG8gZm91Z2h0IGZvciB0aGlzIHJpZ2h0IGFuZCBtYWRlIGl0IGhhcHBlbiwgTmlrZSB3b3VsZG4ndCAianVzdCBkbyBpdC4iCkNvbnN0aXR1dGEgZXJhdCBpcyB0cmFuc2xhdGVkIGFzICJoYWQgYmVlbiBkZXRlcm1pbmVkL3Jlc29sdmVkIiBwcmVjaXNlbHkgYmVjYXVzZSBpdCBtZWFucyAid2FzIChhIHRoaW5nIGhhdmluZyBiZWVuIGFscmVhZHkgcmVzb2x2ZWQpIgpQVEkgR2h1bGFtIFNhcndhciBjb21wbGFpbmVkIHRoYXQgcGV0cm9sIHB1bXBzIHdlcmUgYmVpbmcgY2xvc2VkLiAKQW5kIGFjdGl2YXRpb24gY29kZSBsZXRzIHlvdSBhY3RpdmF0ZSB5b3VyIHdpbWRvd3MgY29tcHV0ZXIsIHRvIGFsbG93IGZvciB5b3UgdG8gY29udGludWUgdXNpbmcgeW91ciBjb21wdXRlci4gTWljcm9zb2Z0IGRvZXMgdGhpcyB0byBzdG9wIHNvZnR3ZWFyIHBpYXRlcy4gCiJJIHNlZSB0b28gbWFueSBwZW9wbGUsIiBNY0dpbGwgc2FpZCAid2hvIGhhdmUgc2l4IHBhY2sgYWJzIGFuZCBhIHJ1aW5lZCBiYWNrLiIKU2hpZnRzIGludm9sdmVkIHR3byBob3VycyBvbiBwb3N0LCBmb2xsb3dlZCBieSBhdCBsZWFzdCBhbiBob3VyIG9mZiBwb3N0LiAiWW91IGRpZG4ndCB3b3JrIGZvciBhIGxpdmluZywiIGhlIHNhaWQuIApBbmQgaGlzIHR3byBkb3plbiBuaWVjZXMgYW5kIG5lcGhld3MuIEhlIHdhcyBhIG1hbiBvZiBmdW4sIGFkdmVudHVyZSwgYW5kIHN0b3JpZXMuIApQb2tlciBjaGlwcyBhcmUgeW91ciAnbW9uZXknIGluIGEgcG9rZXIgZ2FtZS4gClRvIGJlIGJydXRhbGx5IGhvbmVzdCwgSSBoYXZlIGJlZW4gb24gdGhlIG90aGVyIGVuZCB0b28uIApJdCBjYW4gaGFybSBib3RoIHRoZSBoZW4gYW5kIHRoZSBlZ2cuIApJIHJlYWxseSB3YW50IGl0IHRvIGJlIHRoaXMgeWVhciwgYnV0IEkgZG9uIHRoaW5rIHNvLiBJIGRvIGFncmVlIHdpdGggeW91IGFib3V0IHRoZW0gYWxsIGNvbWluZyBvdXQgaW4gYWJvdXQgdGhlIHNhbWUgeWVhci4gSSBqdXN0IGtlZXAgaGF2aW5nIHRoaXMgc3R1cGlkIGV4dHJhIHJlYWxpc3Qgdm9pY2UgaW4gbXkgaGVhZCBzYXlpbmcgMjAyMCBiZWNhdXNlIEkgdGhpbmsgdGhhdCBpcyB3aGVuIHRoZSBuZXcgY29uc29sZXMgd2lsbCBjb21lIG91dC4gSSBtb3JlIHRoYW4gd2lsbGluZyB0byBiZXQgU29ueSBhbmQgTWljcm9zb2Z0IGFwcHJvYWNoZWQgdGhlaXIgcmVzcGVjdGl2ZSBwZW9wbGUgYW5kIHRvbGQgdGhlbSB3aGF0IHVwIGFuZCBuZWdvdGlhdGVkIG5leHQgZ2VuIHJlbGVhc2VzIGZvciBDeXBlcnB1bmsgMjA3NywgU3RhcmZpZWxkLCBhbmQgRGVhdGggU3RyYW5kaW5nIChldmVuIHRob3VnaCBJIGJlbGlldmUgaXQgaXMgb25seSBhIFNvbnkgZ2FtZSkuIFRoZXNlIGFyZSBiaWcgdGl0bGVzIGFuZCB0aGUgY29tcGFuaWVzIHdpbGwgd2FudCBiaWcgbmFtZSBnYW1lcyBmb3IgdGhlaXIgbmV3IGNvbnNvbGVzIHJlbGVhc2UgdG8gaGVscCB3aXRoIHNhbGVzLCBlc3BlY2lhbGx5IHdpdGggdGhlIGhpZ2ggcHJpY2UgdGFnIHRoZXkgd2lsbCBsaWtlbHkgaGF2ZS4gQXMgYSBzaWRlIG5vdGUsIEkgYWxzbyB0aGluayBHaG9zdHMgb2YgVHN1c2hpbWEgd2lsbCBiZSBhIG5leHQgZ2VuIHJlbGVhc2UgZm9yIFBsYXlTdGF0aW9uLgoiV2hhdCBJJ2QgbGlrZSB0byBzZWUgbm93IGlzIHByb2dyZXNzLCIgU2VpZnVsbGFoIHNhaWQuICJOZXh0IHllYXIgaWYgdGhlIG9yZ2FuaXphdGlvbiBjYW4gYmUgYWN0aXZlIGluIGxvYmJ5aW5nIGFuZCBtYXliZSBldmVuIHN1Y2Nlc3NmdWwgaW4gZ2V0dGluZyBzb21lIGxlZ2lzbGF0aXZlIGFjdGlvbiB0YWtlbiwgdGhhdCB3b3VsZCBiZSBnb29kLiIKU2hhd2x5bm90ICAzIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KQW5kIGl0IG5vdCBsaWtlIGFuIGlyb25pYyB0aGluZywgSSBtZWFuIGl0IElTIGhpbGFyaW91cyB0byBtZSBhbmQgdGhleSBBUkUgVEhFIEJJR0dFU1QgSk9LRSBQTEFZRUQgT04gRUFSVEggYnV0IEkgc2VyaW91c2x5IGZ1Y2tpbmcgaGF0ZSB0aGVtLlRIRSBNT0xBIE1PTEEgRklTSCAoT1IgT0NFQU4gU1VORklTSClUaGV5IGFyZSB0aGUgd29ybGQgbGFyZ2VzdCBib25leSBmaXNoLCB3ZWlnaGluZyB1cCB0byA1LDAwMCBwb3VuZHMuIApEaXZpZGUgcG9rZXJzIGluIGxhdGUgc3ByaW5nIHdoZW4gdGhlIGNvbGRlc3Qgd2VhdGhlciBpcyBvdmVyLiBUaGlzIGNhbiBiZSBoYXJkIHdvcmsgd2l0aCBsYXJnZXIgc3BlY2ltZW5zIGFuZCB5b3UgbWF5IG5lZWQgYSBsYXJnZSBrbmlmZSB0byBjdXQgdGhlIHJvb3RzdG9jayBpbnRvIHNlY3Rpb25zLiBSZXBsYW50IGluIHRoZSBnYXJkZW4gb3IgcG90IHVwLiBQb2tlcnMgbGlrZSBkZWVwIGZlcnRpbGUgc29pbCB0aGF0IGlzbid0IHdhdGVybG9nZ2VkIGluIHdpbnRlci4gVGhleSBmbG93ZXIgYmVzdCB3aGVuIHRoZXkgaGF2ZSBoYWQgY29waW91cyBzdW1tZXIgcmFpbi4gUG9rZXJzIG11c3QgYmUgaW4gZnVsbCBzdW4gYW5kIGJlbmVmaXQgZnJvbSBkZWFkaGVhZGluZy4gVGhpcyBwcmV2ZW50cyB0aGVtIHNldHRpbmcgc2VlZCBhbmQgcHJvbW90ZXMgbW9yZSBmbG93ZXJzLiBUaGUgZGFyayB3aW5lIHJlZCBsZWF2ZXMgb2YgdGhlIHNtb2tlIGJ1c2ggKENvdGludXMgY29nZ3lncmlhKSBzdGF5IGxhdGUgZW5vdWdoIHRvIHByb3ZpZGUgYSBiYWNrZHJvcC4gWW91IGNhbiBhbHNvIHBsYW50IHRoZW0gY2xvc2UgdG8gdmlicmFudCBibHVlIGFuZCBwdXJwbGUgYXN0ZXJzLgpPb3BzIEkgYWNjaWRlbnRhbGx5IHB1bGxlZCBvdXQgYW4gaXRlbSBJIGRpZG4gd2FudC4gT29wcyB0aGlzLCBvb3BzIHRoYXQuIEluIFBhdmxvdiwgbm9uZSBvZiB0aGF0IGV2ZXIgaGFwcGVucyBmb3IgbWUuIApJdCB3YXMgY29uZnVzaW5nIHRvIGZpZ3VyZSBvdXQuVGhlIHJlYXNvbiB3ZSB1c2UgdGhlIHJhbmtlZCBjaG9pY2Ugc3lzdGVtIGZvciBzb21lIHF1ZXN0aW9ucyBpcyB0aGF0IHdlIHdhbnQgdG8gbWFrZSBzdXJlIHBlb3BsZSBoYXZlIHRoZSBjaGFuY2UgdG8gcGljayBmcm9tIGEgdmFyaWV0eSBvZiBvcHRpb25zLCByYXRoZXIgdGhhbiBoYXZpbmcgdG8gcGljayBiZXR3ZWVuIGp1c3QgdHdvIHdoZW4gdGhlIHNpdHVhdGlvbiAoYW5kIHBlb3BsZSBwcmVmZXJlbmNlcykgYXJlIG1vcmUgY29tcGxleC4gClNvIGl0IG5hdHVyYWwgdGhhdCBvbmUgbWF5IGNsYWltLCBmb3IgaW5zdGFuY2UsIHRoYXQgdGhleSBhcmVuIGludGVyZXN0ZWQgaW4gdGVycml0b3JpYWwgZXhwYW5zaW9uLCB3aGlsZSBhY3R1YWxseSBiZWluZyBxdWl0ZSBpbnRlcmVzdGVkIGluIHRoZSBzYW1lLi4gCjIwMTMuIEluOiAyMDEzIDNyZCBJbnRlcm5hdGlvbmFsIENvbmZlcmVuY2Ugb24gV2lyZWxlc3MgQ29tbXVuaWNhdGlvbnMsIFZlaGljdWxhciBUZWNobm9sb2d5LCBJbmZvcm1hdGlvbiBUaGVvcnkgYW5kIEFlcm9zcGFjZSBFbGVjdHJvbmljIFN5c3RlbXMgKFZJVEFFKSwgQXRsYW50aWMgQ2l0eSwgTkogLCAyNCAyNyBKdW5lIDIwMTMgSUVFRSAuIFBwLiAKOS4gCk9mIGNvdXJzZSwgeW91IGhhdmUgdG8gcGxheSB0aGUgZ2FtZSBvbiBhIGNvbXB1dGVyLCBhIGRldmljZSB3aGljaCBpcyBvbmUgR29vZ2xlIHNlYXJjaCBhd2F5IGZyb20gYW55IHR5cGUgb2YgZGV2aWFudCBzZXh1YWwgYWN0IHlvdSBjYXJlIHRvIHdpdG5lc3MgaW4gZ2xvcmlvdXMgaGlnaCBkZWYgdmlkZW8uIFNvIGlzIGEgdmVyeSByZWxhdGl2ZSB0ZXJtLi4gClRoZSBiZXN0IGhvbGUgaW4gdGhlIHdhbGwgUGVydXZpYW4gY2V2aWNoZXJpYXMgd2lsbCBzZXJ2ZSB5b3UgYSBzaG90IGdsYXNzIG9mIHRoZSBzdHVmZiBhbG9uZyB3aXRoIHlvdXIgcGxhdGUgb2YgY2V2aWNoZS4gCkFub3RoZXIgc3VnZ2VzdGlvbiBJIGhhdmUgaXMsIHNpbmNlIHlvdSBydW5uaW5nIENCIHByb2dyYW0sIHlvdSBjYW4gbW9kaWZ5IHRoZSAzY3QgcGF1c2UgYmVuY2ggYSBsaXR0bGUgYml0IHRvIGZpeCB0aGlzLiBUcnkgc3RvcHBpbmcgdGhlIGJhciBqdXN0IGEgbGl0dGxlIGJpdCBvZmYgeW91ciBjaGVzdCwgbGlrZSBtYXliZSBoYWxmIGFuIGluY2guIApTb21lIHBlb3BsZSBoYXZlIGdyZWF0IHNvdXJjZXMgb2YgaW5jb21lIGFuZCBpdCBkb2VzbnQgbWF0dGVyIGFzIG11Y2gsIGJ1dCB0aGF0IG5vdCB0aGUgc2NlbmFyaW8gd2UgYXJlIGRpc2N1c3NpbmcuIFlvdSB3b3JraW5nIGEgZnVja2luZyA5IDUgbWFraW5nICQ5L0hSIGp1c3QgdG8gc2NyYXBlIGJ5LiAKVW5mb3J0dW5hdGVseSB3ZSBrbmV3IG9mIHR3byBjcnkgb2ZmcyBpbiB0aGUgc2hhcGUgb2YgVGhlIFBpc3RvbCBSZWVsICdlbSBJbiwgYnV0IHRoZXJlIHdhcyBvbmUgdGVhbSBtZW1iZXIgc3RpbGwgbWlzc2luZyB3aXRoIDE1IG1pbnV0ZXMgdG8gZ28gYmVmb3JlIHRoZSBidXMgd291bGQgcHVsbCB1cC4gV2hvIHdvdWxkIHRoYXQgYmU/LiAKVGhhdCBhc3BlY3QgaXMgc29tZXRoaW5nIEkgbWlzcy4uIApBbm90aGVyIGlkZWEgaXMgdG8gZHJvcCBpbiBUaGUgSW1wcmVnbmFibGUgRm9ydHJlc3Mgb2YgRGliLiBJIGhhZCB0aGUgZ29ibGlucyBjbGFpbSB0aGVpciBsb290aW5nIHdhcyBubyBkaWZmZXJlbnQgdGhhbiBodW1hbnMgd2lsbGluZ25lc3MgdG8gdGF4IGV2ZXJ5b25lIGFuZCBldmVyeXRoaW5nLCB3aGljaCB0ZW1wb3JhcmlseSBoYWQgdGhlIHBhcnR5IGRydWlkIGFncmVlaW5nIHdpdGggdGhlbS4gSSBhbHNvIGNoYW5nZWQgdGhlIHRyYXAgdW5kZXJuZWF0aCB0aGUgd2Fnb24gICBpdCB3YXMgYW4gZWFzaWx5IG5vdGljZWFibGUgcGl0IHRyYXAgYWZ0ZXIgYSBiZW5kIGluIHRoZSB0dW5uZWwuIFRoZSBwbGF5ZXJzIGFsbCBzcG90dGVkIGl0IGJ1dCB0aGUgdHJpY2sgd2FzIHRoYXQgYW55IHRpbWUgc29tZW9uZSB0cmllZCB0byBqdW1wIGEgZ29ibGluIGRhcnRlZCBvdXQgZnJvbSBjb3ZlciB0byB0cnkgYW5kIHNob3ZlIHRoZW0gYmFjayBhbmQgaW50byB0aGUgcGl0LgpOb2NoIG5pZSB3YXMgdm9uIENoZW5nZHUgZ2VoIE1hY2h0IG5pY2h0cy4gClRoZXkgbWFycmllZCBsYXN0IHdlZWsuVEw7RFIgIGhlIG1ha2VzIGVtb3Rpb25hbGx5IGltcHVsc2l2ZSBkZWNpc2lvbnMuMXN0IHdpZmUgIGNvbGxlZ2Ugc3dlZXRoZWFydHMuIApUaGV5IHdhbnQgdG8gbWFrZSBtb25leSBqdXN0IGxpa2UgdGhlIHN0YXJzIGluIHRoZSBmaWVsZC4gCldlIG5lZWQgeW91IGJhZCwgYW5kIHdlIG5lZWQgeW91IG5vdy4gCkl0J3MgZWFzeSB0byB0aGluayBvZiBtYWdpYyBhcyBraW5kIG9mIGEgc2lsbHkgam9iLCB3aGV0aGVyIGl0J3MgZG9pbmcgY2FyZCB0cmlja3MgYXQgY2hpbGRyZW4ncyBiaXJ0aGRheSBwYXJ0aWVzIG9yIHBlcmZvcm1pbmcgc3R1bnRzIG9uIHN0YWdlIGluIHNvbWUga2luZCBvZiByaWRpY3Vsb3VzIGNvc3R1bWUuIEJ1dCB0aGVuIHlvdSBoYXZlIHRoZSBzdHJlZXQgbWFnaWNpYW5zICAgdGhvc2Ugb2YgdXMgd2hvIHN0YW5kIG9uIHRoZSBjb3JuZXIgYW5kIHBlcmZvcm0gaWxsdXNpb25zIGZvciBwYXNzaW5nIHN0cmFuZ2VycyBhbmQgaG9wZSB3ZSBkb24ndCBnZXQgc3RhYmJlZC4gVGhhdCdzIHdoZXJlIHRoaW5ncyBjYW4gZ2V0IHByZXR0eSBoYXJkY29yZSAgIEkga25vdyBmcm9tIGV4cGVyaWVuY2UuCkl0IGlzIGp1c3QgYSBwZXJmZWN0IGFuc3dlciB0byB5b3VyIHF1ZXN0aW9uOyBob3cgdG8gY2hlYXQgaW4gcG9rZXI/IFllcywgeW91IHdpbGwgc3VyZWx5IHJlYWxpemUgdGhhdCBpdCBpcyBhIGxvbmcgdGVybSBpbnZlc3RtZW50IGZvciB5b3UgYXMgdGhpcyByYW5nZSBvZiBzcHkgZGV2aWNlIGNhbiByZWFkIHRoZSBjYXJkcyBvZiB5b3VyIG9wcG9uZW50IHRvIG1ha2UgeW91IGFibGUgdG8gdGFrZSB5b3VyIG5leHQgc3RlcCBhY2NvcmRpbmdseS4gCjUpIFRoZSBndXkgd2hvIGNvbXBsYWlucyB0aGF0IEkgYW0gYnVsbHlpbmcgdGhlIHRhYmxlIGJlY2F1c2UgSSBoYXZlIGEgYmlnIHN0YWNrIGluIGEgY2FzaCBnYW1lLCBhbmQgcGVvcGxlIGFncmVlIHdpdGggaGltLgpUaGUgTW9zdCBEYW5nZXJvdXMgVGhpbmcgWW91CjEpIFRoZXJlIGFyZSB0d28gdHlwZXMgb2YgcGVvcGxlIHRoYXQgYXJlIGdpZnRlZCBpbiBhbnkgcHJvZmVzc2lvbiBvciBkaXNjaXBsaW5lLiBUaGVyZSBhcmUgdGhlIGNvbmZpZGVudCBvbmVzIHRoYXQganVzdCBkbyB0aGVpciB0aGluZyBhbmQgbW92ZSBvbiBhbmQgdGhvc2Ugd2hvIGRvIHRoZWlyIHRoaW5nIGFuZCB0aGVuIGxvb2sgYXJvdW5kIGFuZCB3YWl0IGZvciB0aGUgYXBwbGF1c2UgYW5kIGFjY29sYWRlcy4gCkltcHJlc3NpdmVseSwgaG93ZXZlciwgbWFnbmVzaXVtIGV4ZXJ0ZWQgYW50aSBkZXByZXNzYW50IGVmZmVjdHMgcmVnYXJkbGVzcyBvZiBiYXNlbGluZSBtYWduZXNpdW0gbGV2ZWwuIEl0IGFsc28gZXhoaWJpdGVkIGVmZmljYWN5IGluZGVwZW5kZW50IG9mIHRoZSBnZW5kZXIsIGFnZSwgb3IgYmFzZWxpbmUgc2V2ZXJpdHkgb2YgZGVwcmVzc2lvbiBvZiBzdWJqZWN0cywgYXMgd2VsbCBhcyB0aGVpciB1c2Ugb2YgYW50aWRlcHJlc3NhbnQgbWVkaWNhdGlvbnMgKDI2KS4gCkkgZmVlbCBsaWtlIGEgcG9zdGVyIGNoaWxkIGZvciB0aGVtLCBsb2wsIHBlcm8geW91IGNhbiB0cnkgSW4gVG91Y2ggQ29tbXVuaXR5IFNlcnZpY2VzIHNhIG1heSBDaHVyY2ggb2YgdGhlIEhvbHkgVHJpbml0eSBzYSBNYWthdGkuIFRoZXkgaGF2ZSBhIHZhc3QgbmV0d29yayBvZiBQc3ljaG9sb2dpc3RzIGFuZCBQc3ljaGlhdHJpc3RzIHRoYXQgdGhleSBjYW4gcmVjb21tZW5kIHRvIHlvdSBkZXBlbmRpbmcgb24geW91ciBhcmVhLiAKQWxsIG1lc3NhZ2VzIGZyb20gZGlmZmVyZW50IGNoYXJhY3RlcnMsIGFsbCBsZXZlbCAxLCBhbGwgaW4gdGhlIHN0YXJ0aW5nIHpvbmVzLi4gCkplIHZldXggYmllbiBhZG1ldHRyZSBxdWUgY2V0IGF0dGVsYWdlIG5vbiBjb252ZW50aW9ubmVsIGVzdCBiaWVuIGluc3VmZmlzYW50IHBvdXIgZW4gZGR1aXJlIHF1ZSBzb24gbWFyaSBwcmZyZXJhaXQgbGVzIEJlbmFsbGEgZXQgQ2llLiAKSSBkb24gc2VlIGhvdyB0aGlzIGhhcyBhbnl0aGluZyB0byBkbyB3aXRoIG1hcnJpYWdlIGFuZCBJIHNhaWQgbm8uIApOZXcgc29kIHdhcyBsYWlkIGluIE5vdmVtYmVyIGFuZCBoeWJyaWQgcm9vdHMgd2lsbCBiZSBzdGl0Y2hlZCBpbnRvIHRoZSBncmFzcyBpbiBBcHJpbCB0byBzdHJlbmd0aGVuIHRoZSBwbGF5aW5nIHN1cmZhY2UuIFRoZSB0ZWFtIGhhcyBib3VnaHQgZXZlcnkgYmVsbCBhbmQgd2hpc3RsZSB5b3UgY2FuIHRoaW5rIG9mIHRvIHByb3RlY3QgYW5kIGdyb3cgdGhlIGdyYXNzLgpJIHRha2VuIHRoZSB0ZXN0IGJlZm9yZSBhbmQgZ290dGVuIHRvIDExLzE0IGxhcHMgd2l0aG91dCBwcmFjdGljZS4gCktpZHMgZ28gdG8gdGhlIGFtdXNlbWVudCBwYXJrIGZvciB0aGUgYW5kIHdoZW4gdGhlIGZhbWlseSBnZXRzIGJhY2sgdG8gdGhlIGhvdGVsIERhZCBpcyB0YWxrICBpbmcgYWJvdXQgaG93IGhlIGRpZCBhdCB0aGUgYmxhY2sgIGphY2sgYW5kIE1vbSBpcyB0YWxraW5nIGFib3V0IGhvdyBzaGUgZGlkIGF0IHRoZSBzbG90cy4gCkJpZ2dlc3QgaXNzdWUgaXMgdGltZWxpbmVzLiAKN20gd2lubmluZ3MgaW4gVUsgY291cnQgY2FzZQpMZXMgY2hlbWlucyBkZSB0cmF2ZXJzZSBkZSBsYSBHb3V0dGUgZCdPciwgMjAxNQpQaW5rIHBvbmllcyBsZWFkIHRvIHBpbmsgdW5pY29ybnMsIHdoaWNoIGltbWVkaWF0ZWx5IGJyaW5ncyB0byBtaW5kIHRoZSByYXRoZXIgYnJpbGxpYW50IHZpcmFsIHlvdXR1YmUgdmlkZW8sICJHYXkgVW5pY29ybiBQbGFuZXQuIiAiR2F5IFVuaWNvcm4gUGxhbmV0IiBhdXRvbWF0aWNhbGx5IGxlYWRzIG1lIHRvIGdheSBtYXJyaWFnZSwgd2hpY2ggZm9yY2VzIG15IGltYWdpbmF0aW9uIHRvIG1vdmUgZnJvbSB0aGUgZGlydHksIG5vIGdvb2QgY29ycmlkb3JzIG9mIGJpZyBidXNpbmVzcyB0byB0aGUgbXVjaCBjbGVhbmVyIGhhbGxzIG9mIHRoZSBWZXJtb250IGxlZ2lzbGF0dXJlIGluIE1vbnRwZWxpZXIsIHdoZXJlIGdheSBtYXJyaWFnZSBpcyBiZWluZyBjb25zaWRlcmVkIHRvZGF5Li4gClRoZSByYWlsd2F5IGxpbmUgcnVucyBhbG9uZyBhbiBlbWJhbmttZW50IG9uIHRoZSBlYXN0IHNpZGUgb2YgdGhlIGNhciBwYXJrLiBUYWtlIHRoZSBwZWRlc3RyaWFuIGV4aXQgYXQgdGhlIG5vcnRoZWFzdCBjb3JuZXIgb2YgdGhlIGNhciBwYXJrLiBQYXNzIGJ5IHRoZSBmaXJzdCBhcmNoIHVuZGVyIHRoZSByYWlsd2F5IGxpbmUsIGFuZCBnbyB0aHJvdWdoIHRoZSBzZWNvbmQgYXJjaCwgd2hpY2ggaGFzICdTT1VUSCBCRUFDSCcgcGFpbnRlZCBvdmVyIGl0LgpJIGRpZG4gcmVhbGx5IGV4cGxhaW4gdGhpcyBvbmUgdGhvcm91Z2hseS4gClN0aWxsIGxlYXJuaW5nLiAKQXQgdGhlIGZhciBlbmQgdGhlIGRhcmsgaGFpcmVkIHdhaXRyZXNzIHNsb3dseSBtYWtlcyBoZXIgd2F5IGRvd24gYXMgc2hlIHF1aWNrbHkgdGFrZXMgYSBmZXcgb3JkZXJzLiAKVGhlIHNjZW5lIGF0IEVsIENvcnRleiBpcyBvbmUgeW91IG1pZ2h0IHNlZSBpbiBhbnkgY2x1YiBhY3Jvc3MgQXVzdHJhbGlhLCB0aGVyZSdzIGp1c3QgbW9yZSBvZiBpdCBoZXJlLiBJbiBvbmUgb2YgU3lkbmV5J3MgbW9zdCBkaXNhZHZhbnRhZ2VkIGFyZWFzLCB3aXRoIGhpZ2ggdW5lbXBsb3ltZW50IGFuZCBsYXJnZSBpbW1pZ3JhbnQgcG9wdWxhdGlvbnMgZm9yIHdob20gRW5nbGlzaCBpcyBub3QgYSBmaXJzdCBsYW5ndWFnZSwgaXQgYWxtb3N0IHNlZW1zIGFzIHRob3VnaCB0aGUgZGlzZW5mcmFuY2hpc2VkIGFyZSBiZWluZyB0YXJnZXRlZC4uIApUaGUgbWFzc2FnZSBzY2hvb2wgSSB3ZW50IHRvIGRpZCAzIG1vbnRocyBvZiBUaGFpIGFuZCBFYXN0ZXJuIHRyYWRpdGlvbnMsIEd1YSBTaGEsIGN1cHBpbmcsIFRvayBTZW4sIGZsb3dlciBhZG9ybm1lbnQgYXJyYW5nZW1lbnRzLCBjaGFudGluZywgc3Bpcml0dWFsIHN0dWZmIGV0YyBldGMuIEkgbGVhcm5lZCB0cmFkaXRpb25hbCBUaGFpIG9uIHRoZSBtYXQgd2l0aCB0aGUgcGVyc29uIGNsb3RoZWQuIApOZWRlbiBidSBrYWRhciBzZXZpbG1peW9yIGFubGFtaXlvcnVtIGFjaWtjYXNpLiAKRXZlbiBnb2luZyB1bmNvbnNjaW91cyBhIGxpdHRsZSBiaXQgaXMgcHJldHR5IG5vdGljZWFibGUgaWYgeW91IGxvb2sgYXQgdGhlaXIgZmFjZS4gCllvdSBzaWduIG9uIHRoZSBkb3R0ZWQgbGluZSBmb3IgeW91ciBib29iIGpvYiBhdCAkODAwMCBidXQgeW91IGRvbiByZWFsaXplIHlvdSBlbmQgdXAgcGF5aW5nIGFsbW9zdCB0d2ljZSB0aGF0IG11Y2ggaWYgeW91IGNhbiBwdXQgYW55IG1vbmV5IGRvd24uIApUaGF0IHB1dHMgWnluZ2EgaW4gZGFuZ2VyLCBoZSBzYXlzLiAKU3BhY2VYIGFja25vd2xlZGdlcyBzb21lIGNhcHN1bGUgc3lzdGVtcyBuZWVkIG1vcmUgd29yayBiZWZvcmUgQmVobmtlbiBhbmQgSHVybGV5IGNsaW1iIGFib2FyZCBmb3IgbGlmdG9mZiwgYXMgZWFybHkgYXMgSnVseS4gVmlicmF0aW9uLCBhY291c3RpYyBhbmQgb3RoZXIgbWVhc3VyZW1lbnRzIHdlcmUgdGFrZW4gdGhyb3VnaG91dCB0aGUgcmVjZW50bHkgY29tcGxldGVkIGZsaWdodCwgbm90IG9ubHkgb2YgdGhlIGNhcHN1bGUgYnV0IGFsc28gdGhlIG1hbm5lcXVpbiAgIG5hbWVkIFJpcGxleSBhZnRlciB0aGUgbGVhZCBjaGFyYWN0ZXIgaW4gdGhlICJBbGllbiIgZmlsbXMgICB3aGljaCB3YXMgc3RyYXBwZWQgaW50byBvbmUgb2YgdGhlIGZvdXIgc2VhdHMuCjI0LDAwMCB0byBvdmVyIDEgbWlsbGlvbiBtZXRyaWMgdG9ucyBkdXJpbmcgdGhlIHBhc3QgdHdvIGRlY2FkZXMuClNhbiBTaGE6ICJUaHJlZSBLaWxsaW5nIEZvcmNlcyIgRm9yIGV2ZXJ5IHllYXIsIHRoZXJlIGlzIGEgZGlyZWN0aW9uIG9mIGJhZCBsdWNrIChTYW4gU2hhKSAgaW5jbHVkaW5nIGRpc2FzdGVycywgYWNjaWRlbnRzLCBhbmQgZmluYW5jaWFsIGxvc3MuIApJZiBib3RoIGhhbmRzIGhhdmUgdGhlIHNhbWUgdHdvIHBhaXJzLCB0aGUga2lja2VyIGRldGVybWluZXMgdGhlIHdpbm5lciwgc28gMTBUTSAxMFRNIDhUTSA4VE0gQVRNIGJlYXRzIDEwVE0gMTBUTSA4VE0gOFRNIDRUTSAuIApUaGUgZnVuIGtpY2tzIG9mZiBTYXR1cmRheSBhbmQgY29udGludWVzIG9uIHVudGlsIFN1bmRheS4gCkVkaXQgMzogSWYgeW91IG5ldyB0byBwb2tlciB0aGVuIHRha2UgdGhpcyBhZHZpY2UsIGl0IHdpbGwgc2VydmUgeW91IHdlbGwuIElmIHlvdSBwbGF5IGhpZ2ggbGV2ZWwgcG9rZXIgdGhlbiB0aGlzIGFkdmljZSB3YXNuIG1lYW50IGZvciB5b3UuIEFuZCBpZiB5b3UgcGxheSBzaGl0IHN0YWtlcyBvbmxpbmUgYW5kIHRoaW5rIHRoYXQgbWFrZXMgeW91IFRleGFzIERvbGx5IHRoZW4ganVzdCBmdWNrIG9mZi4gOikKU28gaGUgb2ZmZXJlZCBoaXMgc3VnZ2VzdGlvbnMgdG8gcmVzb2x2ZSB0aGUgcHJvYmxlbSB3aXRoIHRoZSBjYXZlYXQgdGhhdCBoZSBrbm93cyBubyBvbmUgb24gdGhlIHNldCBvciBob3cgdG8gcHJvcGVybHkgZGlmZnVzZSBzaXR1YXRpb25zIGxpa2UgdGhpcywgaG93ZXZlciBoZSBhbHNvIG9mZmVyZWQgYW4gaWRlYSBmb3IgYSBtb3ZpZSB3aGVyZSBhIGd1eSBpbiBoaWdoIHRlY2gga2VlcHMgZ2V0dGluZyBlbWFpbHMgbm90IGludGVuZGVkIGZvciBoaW0gYW5kIGhvdyBoZSBoYW5kbGVzIHRoZW0gb24gYSBkYWlseSBiYXNpcy4uIApIZSBwdXNoZXMgb3V0IGludGVsbGVjdHVhbHMsIHRoZXkganVzdCBjbG9zZWQgZG93biB0aGUgQ2VudHJhbCBFdXJvcGVhbiBVbml2ZXJzaXR5IGluIEJ1ZGFwZXN0LiAKRG93bmxvYWQgbGlua3MgYXJlIGRpcmVjdGx5IGZyb20gb3VyIG1pcnJvcnMgb3IgcHVibGlzaGVyJ3Mgd2Vic2l0ZSwgUGhvdG8gRnJhbWUgU3R1ZGlvIHRvcnJlbnQgb3Igc2hhcmVkIGZpbGVzIGZyb20gZnJlZSBmaWxlIHNoYXJpbmcgYW5kIGZyZWUgdXBsb2FkIHNlcnZpY2VzLC4gTm92IDIyLCAyMDE0IC4gCkF0IGFueSBnaXZlbiB0aW1lIHRocm91Z2hvdXQgYWxsIG9mIHRob3NlIGVyYXMsIGEgbWluaW11bSBvZiBodW5kcmVkcyBvZiB0aGUgT1BQJ3Mgc2V2ZXJhbCB0aG91c2FuZCBtZW1iZXJzIHdlcmUgdmVyeSB1bmhhcHB5IHdpdGggdGhlIGNoYW5nZS4gVGhhdCBpcyB0aGUgcmVhbGl0eSBvZiB0aGUgaHVtYW4gZHluYW1pYy4uIApBZnRlciB0aGF0IHlvdSBhcmUgb24geW91ciBvd24uIApUaGF0IG9ubHkgdGhlIHRpcCBvZiB0aGUgaWNlYmVyZyB3aGVuIGl0IGNvbWVzIHRvIEZlcm1pICJwYXJhZG94Ii4gT25lIGZpbmFsIHBvaW50IHRvIGNvbnNpZGVyLCBpcyB0aGF0IHRoZSBlYXJseSB1bml2ZXJzZSB3YXMgbXVjaCBtb3JlIGhvc3RpbGUgYW5kIGRhbmdlcm91cyB0aGFuIGl0IGlzIHRvZGF5LiBHYW1tYSByYXkgYnVyc3RzIHdlcmUgd2F5IG1vcmUgY29tbW9uICh0aGV5IGltbWVkaWF0ZWx5IGRlc3Ryb3kgYWxsIGRldmVsb3BpbmcgbGlmZSBvbiBhIHBsYW5ldCksIGFzdGVyb2lkcyBtZXRlb3JzIGZseWluZyBhcm91bmQsIGNyYXNoaW5nIGludG8gdGhpbmdzLCBzdGFycyBnb2luZyBzdXBlcm5vdmEgbW9yZSBvZnRlbiBhcyB0aGUgZmlyc3Qgc3RhcnMgd2VyZSBsYXJnZXIgaG90dGVyLCBhbmQgc2hvcnRlciBsaXZlZCwgZXRjLiAKR2FsbGVyeSBQYXJrbGFuZDogT25lIFllYXIgTGF0ZXJPbmUgWWVhciBBbm5pdmVyc2FyeSBPZiBEZWFkbHkgU2hvb3RpbmcgQXQgTWFyam9yeSBTdG9uZW1hbiBEb3VnbGFzIEhpZ2ggU2Nob29sIEluIFBhcmtsYW5kLCBGbG9yaWRhUEFSS0xBTkQsIEZMT1JJREEgICBGRUJSVUFSWSAxNDogUGVvcGxlIHBhdXNlIGZvciBhIG1vbWVudCBvZiBzaWxlbmNlIGF0IDEwOjE3YW0gbmVhciBNYXJqb3J5IFN0b25lbWFuIERvdWdsYXMgSGlnaCBTY2hvb2wgYXMgdGhleSByZW1lbWJlciB0aG9zZSBsb3N0IGR1cmluZyBhIG1hc3Mgc2hvb3RpbmcgYXQgdGhlIHNjaG9vbCBvbiBGZWJydWFyeSAxNCwgMjAxOSBpbiBQYXJrbGFuZCwgRmxvcmlkYS4gCkxheSBib3RoIHBhbG1zIHBlcnBlbmRpY3VsYXIgdG8gdGhlIGJhYnkncyBzcGluZSBhbmQgbW92ZSB5b3VyIGhhbmRzIGJhY2sgYW5kIGZvcnRoLCB3b3JraW5nIHlvdXIgd2F5IGdyYWR1YWxseSBkb3duIHRvIHRoZSBzbWFsbCBvZiB0aGUgYmFjay4gCldoYXQgd2Ugd2FudCBvciB3b3VsZCBjaGFuZ2UgYW5kIHJlYWxpdHkgYXJlIDIgZGlmZmVyZW50IHRoaW5ncy4gSSBhbSBzdXJlIGlmIEkgbG9zdCBhIGZldyBwb3VuZHMgYW5kIHdvbiB0aGUgbG90dGVyeSBteSB3aWZlIHdvdWxkIGJlIGhhcHB5IGFuZCBleGNpdGVkIGFib3V0IGl0LiAKUmVjZW50IFNwb3J0cyBBcnRpY2xlcyBSZXN1bHRzIDc0ODYKSGUgYWxzbyBzYWlkLCBpbiByZXNwb25zZSB0byBhIHF1ZXN0aW9uIG9uIERpcmVjdCBvZiBoZXIgbWVudGlvbmluZyBTQSwgdGhhdCBzaGUgaGFkIHNhaWQgb25jZSAieW91IG5ldmVyIGd1ZXNzIHdobyBJIHRvb2sgcGhvdG9zIGZvciIgKHBhcmFwaHJhc2VkKSwgbWVhbmluZyBTQSwgd2hpY2ggbGVkIHRvIGEgY29udmVyc2F0aW9uIGFib3V0IGhlciBzYWZldHkgaW4gZ2VuZXJhbCwgdHJhdmVsaW5nIGFyb3VuZCB0aGUgY291bnRyeSBhbG9uZSBhcyBzaGUgZGlkLiBBIG5vdCBzbyBzdWJ0bGUgaW5kaWNhdGlvbiB0aGF0IHNoZSBtYXkgbm90IGhhdmUgYmVlbiBzYWZlIHdpdGggU0EuLiAKVGhlIHB1cnN1aXQgd2FzIHRlcm1pbmF0ZWQgaW4gQ2FsaG91biBDb3VudHkgc2ltcGx5IGJlY2F1c2UgdGhlIG9mZmljZXIgbG9zdCBzaWdodCBvZiB0aGUgZmxlZWluZyB2ZWhpY2xlLCBCcmlnaHQgc2FpZC4gVGhlIGNoYXNlIGxhc3RlZCB0aHJlZSBvciBmb3VyIG1pbGVzIGluQ2FsaG91biBDb3VudHksIGhlIHNhaWQuClRoYW5rcyBmb3Igc2hhcmluZyB0aGlzIGV4cGVyaWVuY2UvY29udmVyc2F0aW9uLiBIaXMgd29ybGQgdmlldyBtYXkgYmUgYWJvdXQgdG8gYmUgc2hhdHRlcmVkLCBpZiwgdGhhdCBpcywgaGUgcGF5cyBhdHRlbnRpb24uIFNvdW5kcyBsaWtlIGhlIGxlZnQgaXQgYmVoaW5kLgpTaGUgcmVmdXNlZC4gClBlb3BsZSB3aG8gc21va2UgaGVyYiByZWd1bGFybHkgYXJlIG5vdCBtZW50YWxseSBkZWZpY2llbnQuIApJIHdhcyBnZXR0aW5nIGJhY2sgcGFpbiB3aGVuZXZlciBpIGRpZCByYWNrIHB1bGxzIHVudGlsIGkgYm91Z2h0IGFuIGluemVyIDEzbW0gYmVsdC4gClRoZXkgZXhwcm9wcmlhdGVkIHRoZSByZXNvdXJjZXMgZnJvbSB0aGUgcHVibGljLCB0aHJvdWdoIHRheGVzLCB0byBwdXQgaXQgaW4gdGhlIGhhbmRzIG9mIHRoZSBnb3Zlcm5tZW50LCB3aGljaCBpcyBzdXBwb3NlZCB0byByZXByZXNlbnQgYWxsIGNpdGl6ZW5zLCBpbmNsdWRpbmcgdGhlIHdvcmtpbmcgY2xhc3MuIApTdW1tZXJzLCBmb3JtZXIgSGFydmFyZCBwcmVzaWRlbnQgd2hvIGRvZXNuIHRoaW5rIHdvbWVuIGNhbiBkbyBtYXRoIGFuZCBpcyBhbHNvIG9uZSBvZiBPYmFtYSB0b3AgZWNvbm9taWMgYWR2aXNlcnMsIHdhcywgaW4gMTk5OSwgQmlsbCBDbGludG9uIFNlY3JldGFyeSBvZiB0aGUgVHJlYXN1cnkuIFN1bW1lcnMgbm90IG9ubHkgc3BlbnQgdGhlIDE5OTBzIGRlcmVndWxhdGluZyB0aGUgYmFua3Mgc28gd2UgY291bGQgZ2V0IGludG8gdGhpcyBjcmlzaXMgaW4gdGhlIGZpcnN0IHBsYWNlLCBoZSBhbHNvIGhlbHBlZCBjcmVhdGUgdGhlIG1lY2hhbmlzbXMgdGhhdCB3b3VsZCBjaXJjdW12ZW50IGludGVybmF0aW9uYWwgcmVndWxhdGlvbiBvZiBiYW5rcy4gCldoaWxlIHRoZSBzaW5nbGUsIHdoaWNoIHdvdWxkIGVhcm4gdGhlIGNyaXRpY2FsIGNvbnNlbnN1cyBvZiBicmluZyB0aGUgYXJ0aXN0J3MgbW9zdCBhdXRoZW50aWMgc29uZyBldmVyIGFzIHdlbGwgYXMgYSBHcmFtbXkgbm9taW5hdGlvbiBmb3IgQmVzdCBQb3AgU29sbyBQZXJmb3JtYW5jZSwgZGlkbid0IGJlYXIgbWFueSBoYWxsbWFya3Mgb2YgY291bnRyeSBpbmZsdWVuY2VkIHBvcCwgdGhlIGVuc3VpbmcgYWxidW0sIFJhaW5ib3csIHdhcyBsaXR0ZXJlZCB3aXRoIHRyYWNrcyBjbGVhcmx5IGluc3BpcmVkIGJ5IHdobyBLZXNoYSByZWZlcnJlZCB0byBhcyBoZXIgInRydWUiIG11c2ljYWwgaW5mbHVlbmNlczogRG9sbHkgUGFydG9uLCBULiBSZXgsIFRoZSBSb2xsaW5nIFN0b25lcyBhbmQgSWdneSBQb3AuCkZvciBleGFtcGxlLCBpZiBhIHN0dWR5IHJhbiBmb3IgMy43IHllYXJzIGFuZCBpdCB3YXMgZm91bmQgdGhhdCB0aGUgTk5UIHdhcyAzMjEgZHVyaW5nIHRoaXMgMy43IHllYXIgcGVyaW9kLCBpbiBvbmUgeWVhciB0aGUgTk5UIHdvdWxkIGhhdmUgdG8gYmUgbXVsdGlwbGllZCBieSAzLjcgdG8gY29ycmVjdGx5IGFzc3VtZSB0aGUgcmlnaHQgTk5UIGZvciBvbmx5IHRoZSBvbmUgeWVhciBwZXJpb2QgKGluIHRoZSBleGFtcGxlLCB0aGUgb25lIHllYXIgTk5UIHdvdWxkIGJlIDEsMTg4KS4uIApUaGUgaG9ybiBpcyB0aGUgcHJlZmVycmVkIG1ldGhvZCBvZiBjb21tdW5pY2F0aW9uIGhlcmUuIFNwZW50IHRoZSB3aG9sZSBkYXkgaW4gTXVtYmFpLi4gCkljaCBlcndhcnRlIGFsbGVyZGluZ3Mgdm9uIEVsdGVybiB1bnRlciA1MCBtaXR0bGVyd2VpbGUgaXJnZW5kd2llLCBkYXNzIHNpZSBoYWxid2VncyB2ZXJubmZ0aWcgbWl0IG5ldWVuIE1lZGllbiBrbGFya29tbWVuLiBTbyBuZXUgc2luZCBkaWUgbm1saWNoIGF1Y2ggbmljaHQgbWVoci4gRGFzIHZvbSBhbGxnZW1laW5lbiBQYmVsICh1bnMpIGdlbnV0enRlIEludGVybmV0IGhhdCBlaW4gVmllcnRlbCBKYWhyaHVuZGVydCBoaW50ZXIgc2ljaCwgYXVjaCBtYXNzZW50YXVnbGljaGVzIE9ubGluZSBHYW1pbmcgYSBsYSBXb1cgaXN0IG51biBzY2hvbiArIDE1IEphaHJlIGFsdC4gUmVjaG5ldCBtYW4gZGFzIGpldHp0IGVpbiB3ZW5pZyBhdWYsIHdhcmVuIFN1YiA1MGVyIGRhbWFscyBzbyAyMCAzNSAgIGluIGRlbSBBbHRlciBzb2xsdGUgbWFuIG5ldWUgVHJlbmRzIHNjaG9uIG5vY2ggYXVmbmVobWVuIGtubmVuLCB2b3IgYWxsZW0sIHdlbm4gc2llIGVpbmVuIGdyb2ZsY2hpZ2VuIE1lbnNjaGhlaXRzdW1icnVjaCBkZWZpbmllcmVuLgpFcmZhaHJ1bmdlbiB1bmQgd2Vpc2hlaXRlbiwgbWFuY2hlIHZvbGxlciBmcmV1ZGUgdW5kIG1hbmNoZSBpbiB0aWVmZW0gc2NobWVyeiBnZXNhbW1lbHQuIApJbiBvdGhlciBicmFuZGVkIHZpZGVvIG5ld3MsIFNhbXN1bmcgaXMgYmVnaW5uaW5nIHRvIHJldHVybiB0byBpdHMgdXN1YWwgdWJpcXVpdHksIHdpdGggdHdvIHNsb3RzIHRoaXMgd2VlaywgYW5kIFByb2N0ZXIgR2FtYmxlJ3MgIlRoYW5rIHlvdSwgTW9tLCIgdGhyaXZlcyBhcyBNb3RoZXIncyBEYXkgYXBwcm9hY2hlcy4gRWFjaCBjYW1wYWlnbiBpcyBtZWFzdXJlZCBieSBUcnVlIFJlYWNoLCBhbiBNUkMgYWNjcmVkaXRlZCBtZXRyaWMgdGhhdCBpbmNsdWRlcyB2aWV3cyBmcm9tIGJyYW5kIGRyaXZlbiBhbmQgYXVkaWVuY2UgZHJpdmVuIHNvY2lhbCB2aWRlbyBjbGlwcy4gVGhlIGRhdGEgYXJlIGNvbXBpbGVkIHVzaW5nIHRoZSBwYXRlbnRlZCBWaXNpYmxlIE1lYXN1cmVzIHBsYXRmb3JtLCBhIGNvbnN0YW50bHkgZ3Jvd2luZyByZXBvc2l0b3J5IG9mIGFuYWx5dGljIGRhdGEgb24gaHVuZHJlZHMgb2YgbWlsbGlvbnMgb2YgdmlkZW9zIHRyYWNrZWQgYWNyb3NzIGh1bmRyZWRzIG9mIG9ubGluZSB2aWRlbyBkZXN0aW5hdGlvbnMuCkRpZG4ndCBzdHJpa2UgYSBuZXJ2ZSAgIHdlbGNvbWUgdG8gYXJndWluZyBhYm91dCBmb290YmFsbC4gVGhpcyBpcyB0aGUgY2xhc3NpYyByZXNwb25zZSBmb3IgZHVtYmFzc2VzIHRoYXQgaGF2ZSBubyBpZGVhIGhvdyB0byByZXNwb25kIHRvIHNvbWVvbmUgY2FsbGluZyB0aGVtIG9uIHRoZWlyIHN0dXBpZCBhc3Mgc2hpdC4KRGFuaWVsIGFjY3VzZWQgYWRtaXR0ZWQgaGUgbG9va2VkIGxpa2UgY29tZml0LCBqdXJ5IGhlYXJzClRoZXJlIHdlcmUgbm8gZGVtYW5kcyBmb3IgaW1tZWRpYXRlbHkgZm9ybWluZyBhIGp1ZGljaWFsIGNvbW1pc3Npb24gdG8gcHJvYmUgd2hvIHdhcyBiZWhpbmQgdGhpcyBkaXJlY3QgYXR0YWNrIG9uIHRoZSBwZXJzb24gYW5kIGNhbmRpZGF0dXJlIG9mIGFuIG9mZmljZXIgb2YgcHJvdmVuIGNyZWRlbnRpYWxzLiBObyBvbmUgaGVsZCBhbnkgcHJlc3MgY29uZmVyZW5jZSBkZW1hbmRpbmcgYWNjb3VudGFiaWxpdHkuIApBcyBpbXBvcnRhbnQsIHdlIG5vdyBoYXZlIGEgc2NpZW50aWZpYyBiYXNpcyB0aGUgYXhpYWwgY29tcGxhaW50cyBvZiBvdXIgcGF0aWVudHMgYW5kIGNhbiBiZXR0ZXIgZXhwbGFpbiB0byB0aGVtIChhbmQgdGhlIGNvdXJ0cykgdGhlIHJlYXNvbiB3aHkgcGFpbiBleGlzdHMgZXZlbiB0aG91Z2ggb2JqZWN0aXZlIHN0dWRpZXMgKE1SSSwgQ1QsIFggcmF5LEVNRywgZXRjKSBkbyBub3Qgc2hvdyBmcmFjdHVyZXMsIGRpc2MgaGVybmlhdGlvbnMgb3IgbmVydmUgZGFtYWdlLikuIApUaGVpciBicmFpbnMgc3RhcnQgbW92aW5nIHRvbyBmYXN0IGZvciB0aGVpciBtb3V0aCwgYW5kIHNvbWV0aW1lcyB0aGlzIHNvcnQgb2YgdGhpbmcgaGFwcGVucy4gCkJvbmFwYXJ0ZSBzZSBwcnNlbnRlIGRldmFudCBsZSBDb25zZWlsIGRlcyBBbmNpZW5zLiBMZSBEaXJlY3RvaXJlIGVzdCBkY2xhciBhYmFuZG9ubiBldCBsZSBDb3JwcyBMZ2lzbGF0aWYgZXN0IGFqb3Vybi4gT24gY3JlIGFsb3JzIGRldXggY29tbWlzc2lvbnMgcGVybWV0dGFudCBsJ2xlY3Rpb24gdHJvaXMgY29uc3VscyBwcm92aXNvaXJlcyA6IEJvbmFwYXJ0ZSwgU2lleXMgZXQgRHVjb3MuCkFuZCBoZXJlIEkndmUgZ290IHRvIGdldCBiYWNrIHRvIFRvbGtpZW4gYWdhaW4uIEFuZCBJJ20gZ29pbmcgdG8gc2VlbSBsaWtlIEknbSBjcml0aWNpemluZyBoaW0sIHdoaWNoIEkgZ3Vlc3MgSSBhbS4gSXQncyBhbHdheXMgYm90aGVyZWQgbWUgdGhhdCBHYW5kYWxmIGNvbWVzIGJhY2sgZnJvbSB0aGUgZGVhZC4gVGhlIFJlZCBXZWRkaW5nIGZvciBtZSBpbkxvcmQgb2YgdGhlIFJpbmdzaXMgdGhlIG1pbmVzIG9mIE1vcmlhLCBhbmQgd2hlbiBHYW5kYWxmIGZhbGxzICAgaXQncyBhIGRldmFzdGF0aW5nIG1vbWVudCEgSSBkaWRuJ3Qgc2VlIGl0IGNvbWluZyBhdCAxMyB5ZWFycyBvbGQsIGl0IGp1c3QgdG90YWxseSB0b29rIG1lIGJ5IHN1cnByaXNlLiBHYW5kYWxmIGNhbid0IGRpZSEgSGUncyB0aGUgZ3V5IHRoYXQga25vd3MgYWxsIG9mIHRoZSB0aGluZ3MgdGhhdCBhcmUgaGFwcGVuaW5nISBIZSdzIG9uZSBvZiB0aGUgbWFpbiBoZXJvZXMgaGVyZSEgT2ggZ29kLCB3aGF0IGFyZSB0aGV5IGdvaW5nIHRvIGRvIHdpdGhvdXQgR2FuZGFsZj8gTm93IGl0J3MganVzdCB0aGUgaG9iYml0cz8hIEFuZCBCb3JvbWlyLCBhbmQgQXJhZ29ybj8gV2VsbCwgbWF5YmUgQXJhZ29ybiB3aWxsIGRvLCBidXQgaXQncyBqdXN0IGEgaHVnZSBtb21lbnQuIEEgaHVnZSBlbW90aW9uYWwgaW52ZXN0bWVudC4KTGFuMWNvIHUKVGhleSBhbHNvIGhhdmUgc29tZSBvbGRlciBFZGVucyBhbmQgYSBHZW56IEJlbnogU2h1dHRsZSAzICh3aGljaCBtaWdodCBub3QgaGF2ZSBlbm91Z2ggcG93ZXIgZm9yIG1lKS4gCkdyYXppZSBhbGwnYXppb25lIGJlbmVmaWNhIGNoZSBsYSBtZWRpdGF6aW9uZSBLdW5kYWxpbmkgZXNlcmNpdGEgc3VpIGNoYWtyYSwgZSBzdWwgc290dGlsZSBpbiBnZW5lcmFsZSwgaWwgcHJhdGljYW50ZSAgaW4gZ3JhZG8gZGkgcmFnZ2l1bmdlcmUgdW5vIHN0YXRvIGRpIGJlbmVzc2VyZSBjb21wbGV0bywgdW4gc2Vuc28gZGkgZ2lvaWEgZSBhcm1vbmlhIGluY29uZGl6aW9uYXRhLgpQb3J0IENpdHkgYm9hc3RzIGZvdXIgYmFycywgdHdvIGFmZm9yZGFibGUgZGluaW5nIGRlc3RpbmF0aW9ucywgaW5kb29yIGFuZCBvdXRkb29yIGNoaWxkcmVuJ3MgcGxheSBhcmVhcywgZnVuY3Rpb24gYW5kIGNvbmZlcmVuY2UgZmFjaWxpdGllcyBhbmQgbGl2ZSBtdXNpYyBldmVyeSBGcmlkYXkgYW5kIFNhdHVyZGF5IG5pZ2h0cywgYXMgd2VsbCBhcyBzcGVjaWFsIGVudGVydGFpbm1lbnQgb3B0aW9ucyBmb3Iga2lkcyBldmVyeSBzY2hvb2wgaG9saWRheXMuCk5vIG9uZSBkZXNlcnZlcyB0aGlzISBQcmF5IGZvciB0aGlzIGZhbWlseS4gQW5kIHNxdWVlemUgeW91ciBiYWJpZXMgYSBsaXR0bGUgdGlnaHRlci4gCkNhbm5vdCBmZWVsIHNvcnJ5IGZvciBvdXJzZWx2ZXMuIFRoZXJlIGFyZSBzdGlsbCBlbm91Z2ggZ2FtZXMgYW5kIHdlIGhhdmUgZ290IHRvIGtudWNrbGUgZG93biBhbmQgc2VlIGlmIHdlIGNhbiBmcmVzaGVuIHVwIHRoZSBzcXVhZC4gV2UgYXJlIGxvb2tpbmcgdG8gZG8gdGhhdCwgd2UgaGF2ZSBvbmUgb3IgdHdvIGxpbmVkIHVwLCBzbyBob3BlZnVsbHkgd2UgY2FuIGRvIHRoYXQuIEJyYXkgd2VyZSBmdXJ0aGVyIGJlaGluZCBsYXN0IHllYXIgdGhhbiB3ZSBhcmUgbm93IHNvIGl0IGlzIHBvc3NpYmxlIHRvIGdldCBvdXQgb2YgaXQuIFRoZXJlIGFyZSBzdGlsbCB0d28gcm91bmRzIG9mIHRoZSBsZWFndWUgdG8gZ28uIgpJIHN0aWxsIGJlbGlldmUgd2UgYXJlIGJldHRlciBpbiB0aGFuIG91dCwgd2UgYXJlIHRvbyBzbWFsbCB0byBnbyBhbG9uZSwgYnV0IGxldCBub3QgcHJldGVuZCB0aGF0IHRoZSBFVSBpcyBzb21lIGJlbmV2b2xlbnQgYmVuZWZhY3Rvci4uIApJbnRvIHBsb3VnaCBzaGFyZXMgYW5kIGFsbCB0aGF0LiBDb252ZXJzaW9uIGlzIE5PVCBhIHBpcGUgZHJlYW0uIElzIGFuIGFic29sdXRlIG5lY2Vzc2l0eSBiZWNhdXNlIHdpdGhvdXQgaXQsIHdlIHdpbGwgYWx3YXlzIGJlIHdhc3Rpbmcgb3VyIHJlc291cmNlcyBvbiBnZXR0aW5nIHJlYWR5IGZvciB3YXJzIGFuZCB0aGVyZWZvcmUgdGhlcmUgd2lsbCBhbHdheXMgYmUgYSBuZWVkIHRvIGhhdmUgd2FyczMuIApUaGV5IGp1c3QgZG9uIHdhbnQgdG8uIApBZ2FpbiBJIGRvbiBpbnRlbmQgdGhpcyB0byBiZSBhIHNsaWdodCBhdCBMQU9QIGZvciBub3QgYmVpbmcgZm9ydGhjb21pbmcsIGJ1dCBJIHdhbnQgcGVvcGxlIHRvIGtub3cgdGhhdCB3aGF0IGhlIHN0YXRlZCBpc24gZW50aXJlbHkgYWNjdXJhdGUgYXMgaGUgbWF5IG5vdCB5ZXQgYmUgY29tZm9ydGFibGUgYWRtaXR0aW5nIHRvIHRoZSBzZXZlcml0eSBvZiBoaXMgYWxjb2hvbGlzbS4gQnV0IGhlIHNheXMgaGUgb25seSBkcmlua3Mgb24gd2Vla2VuZHMuIElkayBhYm91dCBsYW9wLiAKRXZlcnkgZ2FtZXIga25vd3MgaG93IGZydXN0cmF0aW5nIGl0IGlzIHRvIGdldCBzdHVjaywgYnV0IGF0IGxlYXN0IHlvdSBjYW4gd2FsayBhd2F5LCBjYWxtIGRvd24sIGFuZCBub3QgaGF2ZSB5b3VyIGJvc3MgdGVsbCB5b3UgdG8gZ2V0IGJhY2sgaW4gdGhlcmUgYW5kIHNwZW5kIGhvdXJzIG1hc3RlcmluZyB0aGUgc2luZ2xlIHNlY3JldCBtb3ZlIHRoYXQgbWFrZXMgQmFyYmllJ3MgaG9yc2UgZWF0IGEgcml2YWwgam9ja2V5LiBIYXZlIHlvdSBldmVyIHBsYXllZCBhIGdhbWUgdG8gcmVsYXggYWZ0ZXIgZmluaXNoaW5nIGEgcHJvamVjdCB3aXRoIGEgdGlnaHQgZGVhZGxpbmU/IEZvciB0ZXN0ZXJzLCB0aGUgZ2FtZSBpcyB0aGUgZGVhZGxpbmUuIApZb3UgbWF5IG5lZWQgdG8gYXZvaWQgY29udGFjdCB3aXRoIHlvdXIgY2hpbGQgdW50aWwgdGhlIHJhc2ggY2xlYXJzLi4gClRvcGhlcjg3NiAgNjA2IHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KUm9tYW50aWMgUmVjcmVhdGlvbldpbGQgRHVuZXMgUmVzb3J0IG9mZmVycyBhIGJldnkgb2YgeWVhciByb3VuZCBhZHZlbnR1cmVzIHRoYXQgdGFrZSBhZHZhbnRhZ2Ugb2YgaXRzIHNlcmVuZSBvY2VhbmZyb250IGxvY2F0aW9uLiAKQ29tbWFuZGVyTWFuZGVycyB1Ck15IG5hdnkgZG9jIG1pc2RpYWdub3NlZCBtZSwgdGhlbiBzZWVtZWQgdG8gdGhpbmsgSSB3YXMgY2Fycnlpbmcgb24gYW5kIGZha2luZyBzdGlsbCBiZWluZyBpbiBwYWluLCBhcyBjbGVhcmx5IEkgaGFkIGJlZW4gZGlhZ25vc2VkLCBJIG11c3QgYmUgYmV0dGVyIGJ5IG5vdywgdGhlIGZhY3QgdGhhdCBJIHN0aWxsIGNvbXBsYWluaW5nIG11c3QgYmUgbWUgcHJldGVuZGluZywgYXMgQ0xFQVJMWSBzaGUgY291bGRuIGhhdmUgZG9uZSBhbnl0aGluZyB3cm9uZyBpbiB0aGUgcHJvY2Vzcy4uIApCZWNhdXNlIHRob3NlIHdvcmRzIGFyZSBpbmhlcmVudGx5IGNvbXBhcmF0aXZlLiAKRmx5bm4gYWxzbyBzYWlkIHNoZSBkaWRuIGtub3cgd2hvIHRoZSBraWxsZXIgd291bGQgYmUgd2hlbiBzaGUgc3RhcnRlZCB0aGUgYm9vay4gV2hpbGUgSSBjYW4gYXBwcmVjaWF0ZSBhIHN0cmVhbSBvZiBjb25zY2lvdXNuZXNzIHN0eWxlIG9mIHdyaXRpbmcgdG8gQkVHSU4gd3JpdGluZyBhIG5vdmVsLCBhdCBzb21lIHBvaW50IHlvdSBoYXZlIHRvIGRlY2lkZSBob3cgaXQgZW5kcyBzbyB0aGF0IHlvdSBjYW4gZmlndXJlIG91dCBob3cgeW91IGdldCB0aGVyZS4gT3RoZXJ3aXNlIGl0IGxpa2Ugc3RhcnRpbmcgYSBqb3VybmV5IHdpdGhvdXQga25vd2luZyB3aGVyZSB5b3UgYXJlIGdvaW5nLiBCdXQgdGhpcyB3YXMgRmx5bm4gZmlyc3Qgbm92ZWwsIHNvIEkgZ3Vlc3NpbmcgdGhhdCBEYXJrIFBsYWNlcyBhbmQgR29uZSBHaXJsIGFyZSBiZXR0ZXIuCkNvb2sgcmVjb21tZW5kcyB1c2luZyB0aGUgbm9uc3RpY2sgc2tpbGxldCByZWNpcGVzIHdpdGggc3VnYXJ5IHNhdWNlcyB0aGF0IHNjb3JjaCBlYXNpbHksIHN1Y2ggYXMgc3RpciBmcmllczsgYW5kIGZvciBwYW4gZnJ5aW5nIGJyZWFkZWQgZm9vZHMgc28gdGhhdCB0aGUgY29hdGluZyBzdGlja3MgdG8gdGhlIGZvb2QgYW5kIG5vdCB0byB0aGUgcGFuLiBOb25zdGljayBza2lsbGV0cyBhcmUgYWxzbyBvdXIgZ28gdG8gZm9yIHBhbmNha2VzLCBiZWNhdXNlIHRoZXkgZG9uIGxldCBiaXRzIG9mIGJ1dHRlciBhbmQgYmF0dGVyIGJ1cm4gb250byB0aGVpciBzdXJmYWNlcywgY29tcGFyZWQgdG8gc3RhaW5sZXNzIHN0ZWVsIHNraWxsZXRzIGFueXdheS4uIApMZWFkIHBsYWludGlmZiBhbmQgcHJlc2lkZW50IG9mIGFuIHVuc2FuY3Rpb25lZCBmcmFuY2hpc2VlIGdyb3VwLCB0aGUgR3JlYXQgV2hpdGUgTm9ydGggRnJhbmNoaXNlZSBBc3NvY2lhdGlvbiwgTWFyayBXYWxrZXIgYW5kIFJCSSBzdWJzaWRpYXJ5IFRETCBHcm91cCBDb3JwLiBzaWduZWQgdGhlIGFncmVlbWVudCBmaWxlZCBpbiBPbnRhcmlvIFN1cGVyaW9yIENvdXJ0IG9uIE1hcmNoIDYgYWRkcmVzc2luZyBhbGxlZ2F0aW9ucyBvZiBhZHZlcnRpc2luZyBmdW5kIG1pc21hbmFnZW1lbnQgYW5kIG90aGVyIGNvbXBsYWludHMgY29udGFpbmVkIGluIHR3byBsYXdzdWl0cyBmaWxlZCBpbiAyMDE3LiBmaWxlcyBsYXdzdWl0IGFnYWluc3QgY2hhaW4gZm9yIGFsbGVnZWQgcHJpY2UgZ291Z2luZ1RpbSBIb3J0b25zLCBmcmFuY2hpc2VlIGdyb3VwIGNsb3NlIHRvIHNldHRsaW5nIDIgY2xhc3MgYWN0aW9uIGxhd3N1aXRzVGhlIGFncmVlbWVudCBpbmNsdWRlcyBtYW55IG9mIHRoZSBzYW1lIHBvaW50cyB0aGUgdHdvIHBhcnRpZXMgc3VibWl0dGVkIGluIGEgbm9uIGJpbmRpbmcgdGVybSBzaGVldCB0byB0aGUganVkZ2UgYWJvdXQgYSBtb250aCBhZ28uCkR1Y2F0aSBtb3RvcmN5Y2xlcy4gVGhlIDk5OSB3YXMgdGhlaXIgbGFzdCBoYW5kIGJ1aWx0IGJpa2UgYW5kIGlzIGFuIGFtYXppbmcsIHRlcnJpZnlpbmcgc3BlZWQgbWFjaGluZS4gV2hlbiBpdCBydW5zLiBIYW5kIGJ1aWx0IER1Y2F0aXMgYXJlIGtub3duIGZvciBiZWluZyBzdHVwaWQgZXhwZW5zaXZlIHRvIG93biBhbmQgZXZlbiB3b3JzZSB0byBtYWludGFpbi4gUHJpb3IgdG8gMjAwMyB0aGUgb2ZmaWNpYWwgSXRhbGlhbiB0byBFbmdsaXNoIHRyYW5zbGF0aW9uIGZvciB0aGUgd29yZCBEdWNhdGkgd2FzICJmdWNrIGl0LCBJIHNlbGxpbmcgdGhpcyB0aGluZyBhbmQgYnV5aW5nIGEgSG9uZGEuIgpNZWFud2hpbGUsIGluIEtpc3NpbW1lZSwgRmxhLiwgYW5vdGhlciBKYXlzIHNwbGl0IHNxdWFkIGZlbGwgNCAzIHRvIEF0bGFudGEgd2hlbiBTZWFuIEthem1hciBzY29yZWQgb24gYSBIZWN0b3IgUGVyZXogd2lsZCBwaXRjaCBpbiB0aGUgYm90dG9tIG9mIHRoZSBuaW50aC4KWW91IHJpZ2h0IHRob3VnaCwgdGhhdCB0aGV5IG1hc3NpdmVseSBvdmVyd29ya2VkLiBNeSB3aWZlIGlzIGEgc29jaWFsIHdvcmtlciBieSB0cmFpbmluZyBhbmQgcHJvZmVzc2lvbi4gCldoYXQgc2hlIGRpZCB3aXRoIHRoZSBoeWRyYW5nZWFzLiJCdXQgdGhlIHJlYWwgd2F5IHRvIHVuZGVyc3RhbmQgYWxsIG9mIHRoaXMgaXMgbm90IHRocm91Z2ggcG9saXRpY3MsIGJ1dCBsaXRlcmF0dXJlLiAKUGF0dGluc29uIGlzIHNldCB0byBhcHBlYXIgb24gIkdvb2QgTW9ybmluZyBBbWVyaWNhIiBvbiBXZWRuZXNkYXkuCldhaXQgbWlsbGlvbnMgb2YgeWVhcnMgdG8gY29tcGxldGUpLi4gCkhpIG1heHdlbGx0b2JpYXNlbjIzISBUaGFua3MgZm9yIHBvc3RpbmcgdG8gL3IvYXd3LiBVbmZvcnR1bmF0ZWx5LCB5b3VyIHN1Ym1pc3Npb24gaGFzIGJlZW4gcmVtb3ZlZCBmb3IgdGhlIGZvbGxvd2luZyByZWFzb24ocyk6ClRpdGxlcyBzdWNoIGFzICJEZywgZGVmZW5kZXIgb2YgdGhlIGxhd24iIHdpbGwgYmUgc3ViamVjdCB0byByZW1vdmFsLiAKR290byBhIHdhbGsgaW4gZm9yIHRoZSByZWZlcnJhbD8gT3IgZ2V0IGEgbnVyc2UgcHJhY3RpdGlvbmVyPyBUaGVyZSBhcmUgb3RoZXIgb3B0aW9ucyByYXRoZXIgdGhhbiBjbG9nZ2luZyB1cCB0aGUgZW1lcmdlbmN5IHJvb20sIHVwcGluZyB3YWl0IHRpbWVzLCBhbmQgdW5uZWNlc3NhcmlseSB0YWtpbmcgYmVkcy4gQmVzaWRlcywgeW91IHdvdWxkIGJlIHRyaWFnZWQgdG8gdGhlIGJvdHRvbSBvZiB0aGUgbGlzdCBhbmQgd2FzdGUgYSBmZXcgb3IgbW9yZSBob3VycyBvZiB5b3VyIHRpbWUgYXMgZXZlcnlvbmUgZWxzZSBjYXNlIHdvdWxkIG1vc3QgbGlrZWx5IGJlIGRlZW1lZCBtb3JlIG9mIGFuIGFwYXJhbnQgZW1lcmdlbmN5IHRoYW4geW91ciBub24gdXJnZW50IHJlcXVlc3QgZm9yIGEgcmVmZXJyYWwuCkluIDE5NjUgaGUgYmVjYW1lIGV4ZWN1dGl2ZSB2aWNlIHByZXNpZGVudCBpbiBjaGFyZ2Ugb2YgZ2VuZXJhbCBzdGFmZiBhY3Rpdml0aWVzLiAKQWxzbyBsaWtlIHRvIGFkZCB0aGF0IEdvc3QgaGFzIGJlZW4gc3RyZWFreSBhdCB0aW1lcyBhbmQgQmlsbCBuZXZlciB3YWl2ZXJlZCBvbiBzdGlja2luZyB3aXRoIGhpbSwgdGhhdCBraW5kIG9mIGxveWFsdHkgZ29lcyBhIGxvbmcgd2F5IHdpdGggcGxheWVycy4uIApJbiB0aGlzIGNhc2UsIHlvdSdsbCBuZWVkIHRvICJyZXR1cm4iIHRoZSAyIGM0IHRpbGVzIGJhY2sgdG8gdGhlIGhhbmQgKGFuZCBrZWVwIHRoZSBoYW5kIHNvcnRlZCksIGFuZCBzZWFyY2ggZm9yIG5leHQgdGlsZSB0aGF0IG1lZXRzIHRoZSBjcml0ZXJpYSAodmFsdWUgPT0gNCkuIFRvIGRvIHRoYXQgeW91J2xsIG5lZWQgdG8gbWFrZSB0aGUgY29kZSAicmVtZW1iZXIiIHRoYXQgaXQgaGFkIHRyaWVkIGM0IHNvIGluIG5leHQgaXRlcmF0aW9uIGl0IHNob3VsZCBza2lwIGM0IGFuZCBsb29rcyBmb3Igb3RoZXIgdGlsZXMgd2l0aCB2YWx1ZSA9PSA0LiAKTWFyYyBpcyBzdXJ2aXZlZCBieSBoaXMgd2lmZSBTYXJhIEZpZ2kgRmlua2xlLCBzaXN0ZXJzIEFubiBNaWxsZXIgYW5kIFBhdHJpY2lhIEtsZWluLCBhbmQgaGlzIHNpeCBjaGlsZHJlbiwgQm9ubmllIEJ1cm5zLCBCZXRzeSBSb3NzLCBEZWJiaWUgSmVsaW5laywgRWxpemFiZXRoIFNhbnMsIEYuIApTcG91dGluZyByYW5kb20gYXNzIHRob3VnaHRzLCBtb3N0IG9mIHdoaWNoIGFyZSBuZWl0aGVyIGV4dHJhb3JkaW5hcmlseSBvcmlnaW5hbCBub3Igc21hcnQuIExpa2UsIHlvdSBjb3VsZCByYW5kb21seSBwaWNrIGEgbWlkZGxlIGFnZWQgZ3V5IGZyb20gdGhlIHN0cmVldCwgYW5kIGhlIHdvdWxkIHByb2JhYmx5IHNheSB0aGUgc2FtZSB0aGluZ3MuIApTaW5jZSBUaG9zZSBNYXJrcyBBcmUgU2VlbiBUaHJvdWdoIExlbnMgT25seSBUaGVyZWZvcmUsIE90aGVyIFBlb3BsZSBBcm91bmQgWW91IFdpbGwgTm90IEJlIEFibGUgVG8gRGlzdGluZ3Vpc2ggVGhlIENoZWF0aW5nIENhcmRzIEFuZCBUaGUgT3JkaW5hcnkgQ2FyZHMuIApBbmQgQSBzdGlsbCBjYW4gdW5kZXJzdGFuZCB3aHkgSSByZWZ1c2UgdG8gYmUgZnJpZW5kcyB3aXRoIGhlciBhbnltb3JlLiBJIHN0aWxsIGFmcmFpZCB0byBkcml2ZSBhbG9uZSwgb3IgYmUgYWxvbmUsIGFuZCByZWxpZ2lvdXNseSBjaGVjayBteSBsdWcgbnV0cy4uIApJIHRoaW5rIHRoZSBzd2l0Y2ggaGFzIGxvdHMgbW9yZSBjbyBvcCBvcHRpb25zLCBidXQgb3ZlcmNvb2tlZCBpcyBhIGJsYXN0IG5vbmV0aGVsZXNzLiBKdXN0IGJlIHByZXBhcmVkIHRvIGdldCBmcnVzdHJhdGVkIHdpdGggb25lIGFub3RoZXIgZnJvbSB0aW1lIHRvIHRpbWUgbG9sIGp1c3QgZG9uJ3QgdGFrZSBpdCB0b28gc2VyaW91c2x5LiAKTmljZSBNYXRpbiwgdW4gc2NuYXJpbyByYWxpc3RlIHNlIGRlc3NpbmUuIExlIHJpc3F1ZSAiZXhpc3RlIGV0IHBvdXIgcG91dm9pciBkb25uZXIgY2V0dGUgYWZmaXJtYXRpb24sIG9uIHNlIGZvbmRlIHN1ciBkZXMgdm5lbWVudHMgaGlzdG9yaXF1ZXMgY29tbWUgY2VsdWkgcXVpIHMnZXN0IHByb2R1aXQgbGUgMjMgZnZyaWVyIDE4ODcuIFNlbG9uIHVuIGFydGljbGUgcHVibGkgZGFucyBOaWNlIE1hdGluLCB1biBzY25hcmlvIHJhbGlzdGUgc2UgZGVzc2luZS4gCldvcmtpbmcgbW9yZSBob3VycyBtZWFucyBsZXNzIHRpbWUgdG8gZXhlcmNpc2UsIHRvIGVhdCByZWFsIGZvb2QsIHRvIHNwZW5kIHdpdGggb3VyIGZhbWlsaWVzLCBldGMuIE5vdCB0aGF0IEFtZXJpY2FucyBhcmUgZmFsbGluZyBhcGFydCBiZWNhdXNlIHdlIGxpdmUgaW4gYSB0b3hpYyBmb29kIGVudmlyb25tZW50LCBidXQgd2UgbGl2ZSBpbiBhIHRveGljIGZvb2QgZW52aXJvbm1lbnQgYmVjYXVzZSBvdXIgd29yayBlbnZpcm9ubWVudHMgYXJlIHRveGljLiAKVG8gZ2V0IGZyZWUgY2hpcHMgZm9yIFRleGFzIEhvbGRlbSwgeW91IGNhbiB2aXNpdCBwb2tlciBzaXRlcyBvbnRoZSB3ZWIuIFRoZXNlIHNpdGVzIHNwZWNpYWxpemUgaW4gZmxhc2ggYmFzZWQgb3IgdmlkZW8gcG9rZXJnYW1lcy4gCkl0IHdhcyBvbmNlIHRoZSBjYXNlIHRoYXQgaW4gbW9zdCBvZiBvdXIgY29tbXVuaXR5IGxpZmUsIHdlYWx0aCB3YXMgZXF1YXRlZCB3aXRoIHdvcmssIHRoZSBzeW1tZXRyeSBiZXR3ZWVuIHRoZSB0d28gaW52aW9sYXRlLiAKSSBnZXQgeW91ciBwb2ludCwgYnV0IEkgZG9uIGZlZWwgbGlrZSBhbnlvbmUgaXMgYmVpbmcgZHVwZWQgb3IgYW55dGhpbmcuIApFdmVuIGluIHRoZSBSZWJlbGxpb24sIG1vc3QgUmViZWxzIGhhZCBubyBpZGVhIHdobyB0aGV5IHdlcmUuIApBcmNoZGVtb24wMDEgICAxNSBwb2ludHMgIHN1Ym1pdHRlZCA4IG1vbnRocyBhZ28KKGtlZXAgaW4gbWluZCBubyBlbmdsaXNoIHdhcyBzcG9rZW4gYW5kIGkgdGhlIG9ubHkgd2hpdGUgZ3V5IGluIGEgcG9zdCA5LzExICgyMDAyKSBtdXNsaW0gY291bnRyeS4gVG8gYmUgaG9uZXN0IEkgd2FzIHN0dXBpZCBhbmQgY291bGQgaGF2ZSBlYXNpbHkgYmVjYW1lICJtaXNzaW5nLiJPdGhlciBsaXR0bGUgY2F2ZWF0czogTWFueSBwZW9wbGUgdGhpbmsgd2hpdGUgd29tZW4gZW5qb3kgYW5kIG9mdGVuIGhhdmUgYW5hbCBzZXguIFdoaXRlIG1lbiBoYXZlIHNleCB3aXRoIDIgd29tZW4gYXQgb25jZSBhbGwgdGhlIHRpbWUgKHRoYW5rIHRoZSBwb3JuIGd1eXMpLiAKQXNrTWVBYm91dFNwcmlua2xlcyAgMSBwb2ludCAgc3VibWl0dGVkIDEgZGF5IGFnbwpKZSBjcm9pcyBxdSdpbCB5IGEgdG91dCBzaW1wbGVtZW50IHVuIHZyYWkgcHJvYmxtZSBhdmVjIGNldHRlIGVuc2VpZ25lIHF1aSB0YWl0IHBvdXJ0YW50IHVuZSB0cnMgYm9ubmUgcmZyZW5jZSBkdSBsb3cgY29zdCBpbCB5IGEgZW5jb3JlIHF1ZWxxdWVzIGFubmVzLiAKQyBhbG9ycyBxdSBhc3Npc3RhICBsYSBjaHJpc3RpYW5pc2F0aW9uIGRlcyBhbmNpZW5zIGxpZXV4IGRlIGN1bHRlLiBCaWVuIGRlcyBnbGlzZXMgZXQgZGVzIGNoYXBlbGxlcyBvbnQgdCByaWdlcyBzdXIgbGV1ciBlbXBsYWNlbWVudC4gT24gdmFuZ2xpc2VyYSBtbWUgbGVzIG1lbmhpcnMgZG9udCBjZXJ0YWlucyBzb250IGVuY29yZSBzdXJtb250cyBkIGNyb2l4IGF1am91cmQgT24gYXVyYSBjb25zZXJ2IGxlcyBtbWVzIGxpZXV4IHRvdXQgZW4gbW9kaWZpYW50IHF1ZWxxdWUgcGV1IGxlIGRjb3IuIApPbGQgdGltZXkgaGlwcGllcyBhcmUgbW92aW5nIGludG8gdGhlIGhpc3RvcnkgYm9va3MsIGJ1dCB3aHkgd291bGQgeW91IGV2ZXIgd2FudCB0byBrZWVwIHRoaW5ncyBzdGF0aWM/IGhlIGFza3MuIFlvdSBkbyB5b3VyIHdvcmssIHRoaW5ncyBhcmUgYWx3YXlzIGluIGEgc3RhdGUgb2YgY2hhbmdlLiBLYWxsYXlpbCwgY2hpZWYgZXZhbmdlbGlzdCBvZiBicmFuZCBtYXJrZXRpbmcgYXQgR29vZ2xlLCB3YXMgcnVubmluZyBsYXRlIGZyb20gd29yayB0byB0aGUgY2xhc3MgaGUgd291bGQgaG9zdCBhdCBFc2FsZW4gY2FsbGVkIENvbm5lY3QgdG8gWW91ciBJbm5lciBOZXQuLiAKRmluYWxseSwgb3RoZXIgc3VicmVkZGl0cyBhcmUgbGlrZWx5IHRvIGJlIG1vcmUgc3VpdGFibGUgZm9yIGhlbHAgd2l0aCBob21ld29yayAgIHRyeSBsb29raW5nIGZvciBoZWxwIGF0IC9yL0hvbWV3b3JrSGVscC4uIApBbmQgZG9uJ3QgZm9yZ2V0IHRoZSBUdXJraXNoIHRvaWxldCAgIHRoYXQgd291bGQgYmUgdGhlIGhvbGUgaW4gdGhlIGdyb3VuZC4gV2VuZGkgYW5kIEkgc2F0IGNyb3NzIGxlZ2dlZCBvbiB0aGUgZmxvb3IgYWNyb3NzIGZyb20gQWRlbSwgaGlzIG1vbSBhbmQgZGFkLCBoaXMgYnJvdGhlciBhbmQgaGlzIHdpZmUgYW5kIHRoZWlyIGJhYnksIGFuZCBzb21laG93IHdlIG1hbmFnZWQgdG8gY29tbXVuaWNhdGUuIApBbmQgb2YgY291cnNlIHNoZSBwb3N0cyBvbiBJbmNlbFRlYXJzLCBiZWNhdXNlIHdoeSB3b3VsZG4gdGhpcyBTSlcgcGFydGljaXBhdGUgaW4gYSBzdWJyZWRkaXQgbW9ja2luZyBtYXJnaW5hbGl6ZWQgbWVuPyBBbG9uZyB3aXRoLCB5ZXAsIC9yL1RoZVJpZ2h0Q2FudE1lbWUvLiBBIGNyaW5neSBsZWZ0IHdpbmcgY2lyY2xlamVyayBzdWIgdHJ5aW5nIHRvIGlyb25pY2FsbHkgbW9jayB0aGUgcmlnaHQgaXJvbmljIG1vY2tlcnkgb2YgdGhlIGxlZnQuIEFuZCBsb3RzIG9mIGdlbmVyaWMgYW50aSBBbWVyaWNhIGFuZCBnZW5lcmljIGFudGkgQ2FwaXRhbGlzdCBwb3N0cy4gCkp1c3QgbWVldCBhbmQgZ2V0IG1hcnJpZWQgdG8gYSBTb3V0aCBLb3JlYW4gY2l0aXplbi4gVGhhdCBtb3JlIHJlYWxpc3RpYyBhbmQgZG9hYmxlIHRoYW4gZ29pbmcgdG8gYSB1bml2ZXJzaXR5IGluIEFtZXJpY2EgZm9yIDQrIHllYXJzIHBsdXMgbWFzdGVycywgdG8gZ2V0IGFuIEVuZ2xpc2ggdGVhY2hlciBwb3NpdGlvbiBqdXN0IHNvIHRoYXQgeW91IGNhbiBsaXZlIGhlcmUuIE9yIGRvIHdoYXQgbG90IG9mIG90aGVyIHBlb3BsZSBpbiB5b3VyIHNhbWUgc2l0dWF0aW9uIGRvLCBiZSBhIHBlcm1hbmVudCB0b3VyaXN0LCBnb2luZyBiYWNrIGFuZCBmb3J0aCBiZXR3ZWVuIGNvdW50cmllcyBhbmQgcmVuZXcgeW91ciB0b3VyaXN0IHZpc2EgaW5kZWZpbml0ZWx5LiBCdXQgaWYgeW91IGRvbiBtaW5kIHNwZW5kaW5nIHlvdXIgdHVpdGlvbiBtb25leSBvbiBhIGxvdyByYW5raW5nIHVuaXZlcnNpdHkganVzdCB0byBsaXZlIGhlcmUsIGF0dGVuZGluZyB0aGF0IHNjaG9vbCBmb3IgNCB5ZWFycyB3b3VsZCBub3QgYmUgc3VjaCBhIGJhZCBpZGVhLCBzaW5jZSBpdCB3b3VsZCBnaXZlIHlvdSBzdGFiaWxpdHkgd2hpbGUgZ2l2aW5nIHlvdSB0aW1lIHRvIGxlYXJuIEtvcmVhbi4gSnVzdCBkb24gZXhwZWN0IHRoYXQgeW91IHdpbGwgYmUgZmxvb2RlZCB3aXRoIGpvYiBvZmZlcnMgYWZ0ZXIgeW91IGdyYWR1YXRlLgpUaGV5IHdlcmUgdmVyeSBnb29kIGNvbXJhZGVzIGluIHRoZWlyIHJhbWJsZXMgYW5kIHRoZWlyIGZpcmVzaWRlIGNvbW11bmluZ3MuIApNYXJ5Lk9oaW8ncyB0b3AgMjUgaGlnaCBzY2hvb2wgZm9vdGJhbGwgcGxheWVycyBpbiB0aGUgMjAxNyBCaWcgMTAxIE9oaW8ncyB0b3AgMjUgaGlnaCBzY2hvb2wgZm9vdGJhbGwgcGxheWVycyBpbiB0aGUgMjAxNyBCaWcgMTAxIENvbnNpZGVyIHRoaXMgd2F0Y2hsaXN0IGZvciB0aGlzIHllYXIncyBPaGlvIE1yLiBGb290YmFsbCBhd2FyZCwgaW5jbHVkaW5nIFdlc3RlcnZpbGxlIFNvdXRoIHNlbmlvciBydW5uaW5nIGJhY2sgSmFlbGVuIEdpbGwsIFRyb3R3b29kIE1hZGlzb24ncyBSYSd2ZWlvbiBIYXJncm92ZSBhbmQgQ2luY2lubmF0aSBTdC4gClRoZSBwZW9wbGUgd2l0aCB0aGUgZ3V5IGtuZXcgaGltLCBzYXlpbmcgdGhleSBmb3VuZCBoaW0gbGlrZSB0aGlzIGFuZCB0aG91Z2h0IGhlIGhhZCBiZWVuIGRvbmUgb3ZlciBieSBkcnVnIGRlYWxlcnMgb3ZlciBhIGRlYnQuIApRdWVlZnlNY1F1ZWVmRmFjZSAgNyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvCiJJbiBvcmRlciB0byBhY2Nlc3N0aGVzZSBtYXJrZXRzLCB0aGUgVW5pdGVkIFN0YXRlcyByZWxpZXMgb24gbm9uZGlzY3JpbWluYXRvcnkgTUZOIHRhcmlmZnMsIHBhY3RzIHRoYXQgY291bnRyaWVzIGFncmVlIHRvIHVuZGVyIHRoZSBhdXNwaWNlcyBvZiB0aGUgV1RPLiBFeHBvcnRzIGFuZCBjb3VsZCByYWlzZSBzdWNoIHRhcmlmZnMgdG8gd2hhdGV2ZXIgbGV2ZWxzIHRoZXkgY2hvb3NlLiBFeHBvcnRlcnMgdG8gbW9zdCBvZiB0aGUgd29ybGQsIGFuZCBvbiBlbXBsb3ltZW50IGluIHRob3NlIGZpcm1zLiAKRXZlbiBpZiBWaWxsYWluIGlzIExBR0dZIGFuZCBjb3VsZCBoYXZlIGFueSB0d28gY2FyZHMsIHdlIHN0aWxsIG9ubHkgaGF2ZSBhIHNpbmdsZSBwYWlyIHRoYXQgaXMgdGhlIDR0aCBiZXN0IG92ZXJwYWlyLiAKRW1lcmFsZCBJc2xhbmQgQ2FzaW5vQWNjb3JkaW5nIHRvIHRoZSAyMDE3IExhcyBWZWdhcyBSZXZpZXcgSm91cm5hbCdzICJCZXN0IG9mIExhcyBWZWdhcyIgYXdhcmRzLCB0aGUgRW1lcmFsZCBJc2xhbmQgQ2FzaW5vIHdvbiB0aGUgc2lsdmVyIGZvciBCZXN0IFZpZGVvIFBva2VyIGFuZCB0aGUgZ29sZCBmb3IgQmVzdCBIZW5kZXJzb24gQ2FzaW5vLCBhbG9uZyB3aXRoIG90aGVyIHRpdGxlcy4gSXQgaGFzIGtlbm8sIHBva2VyLCBhbmQgdmlkZW8gc2xvdCBtYWNoaW5lcywgYW5kIGl0J3Mgbm90ZWQgZm9yIGl0cyBsYXJnZSBzZWxlY3Rpb24gb2YgcGVubnkgc2xvdHMuIEl0IG9mZmVycyBhIGNsZWFuIGVudmlyb25tZW50LCBsb3RzIG9mIHBhcmtpbmcsIGFuZCBhIHBheW91dCByYXRlIHRoYXQgbG9jYWxzIHRydXN0LiBXaXRoIGZ1biBhZGRpdGlvbmFsIHBlcmtzIHN1Y2ggYXMgZGVzc2VydCBhbmQgb3RoZXIgdHJlYXRzIG9jY2FzaW9uYWxseSBoYW5kZWQgb3V0IHRvIGdhbWVycywgcmVzaWRlbnRzIGVuam95IHRoZSBmdW4gYXRtb3NwaGVyZSwgdG9vLgpEaXN0aW5ndWlzaGVzIHRoaXMgYXJ0aWNsZSBpbiBTY2llbnRpZmljIEFtZXJpY2FuIGZ1cnRoZXIgaXMgdGhhdCBpdCByZXByb2R1Y2VzIHRoZSBhcnR3b3JrIG9mICJUaGUgRHJhdWdodHNtYW4iLiBUaGUgcXVlc3Rpb24gaGVyZSB0aGVuIGlzIHdoZW4gYXJlIHRoZXNlIGFuZHJvaWQgZHJhd2luZ3MgZmlyc3QgcmVwcm9kdWNlZD8gVGhlcmUgd2VyZSBtYW55IGV4aGliaXRpb25zIG9mIHRoZSBKYWNxdWV0IERyb3ogY3JlYXRpb25zIG92ZXIgdGhlIHllYXJzLCBhbmQgdGhlIHBvcHVsYXIgcG9ydHJheWFsIHNvIGZhciBhcyBJIGNhbiByZWNhbGwgaGFzIGJlZW4gdGhlIG1hY2hpbmUgaXRzZWxmIGFuZCB0aGVuIGEgc21hbGwgcmV2ZWFsIG9mIHRoZSBtZWNoYW5pc20uIApBdCB0aGlzIHBvaW50IEkgbm90IGdvaW5nIHRvIHNjaG9vbCBhbnltb3JlLCBhbmQgdGhlbiBMIGhhcyB0aGUgYXVkYWNpdHkgdG8gYWN0dWFsbHkgZmlsZSBhIHJlc3RyYWluaW5nIG9yZGVyIGFnYWluc3QgbWUhIFNvIHdlIGdvdCBhbiBleHRyZW1lbHkgZ29vZCBsYXd5ZXIgd2hvIHVzZWQgdG8gYmUgYSBjb3AsIG9uZSBvZiB0aGUgYmVzdCBpbiBDbGV2ZWxhbmQsIGFuZCBoZSBsYWlkIGludG8gdGhlIHBvbGljZSBjaGllZiAob2Ygd2hvbSBoZSB1c2VkIHRvIHdvcmsgd2l0aCkgYW5kIGJhc2ljYWxseSB0b2xkIHRoYXQgaWYgdGhleSB3YW50IHRvIGNvbnRpbnVlIGhhcmFzc2luZyBtZSwgd2UgaGF2ZSBzb21lIGxhd3N1aXRzIGZvciB0aGVtLiAKVGhlIG5hbWUgd2FzIGNob3NlbiB2aWEgYW4gb25saW5lIHZvdGUgaW4gd2hpY2ggbW9yZSB0aGFuIDI1LDAwMCBwZW9wbGUgdG9vayBwYXJ0LCB0aGUgem9vIHNhaWQgaW4gYSBzdGF0ZW1lbnQuLiAKSSBnZXQgdGhhdCB5b3Ugd2VyZSByaWdodCBmcm9tIGEgdG90YWxseSBiYWNrIGFuZCB3aGl0ZSBsZWdhbCBzdGFuZHBvaW50LiBCdXQgc2VuZGluZyBsaW5rcyBwcm92aW5nIGl0IGNhbiByZWFkIGFzIGEgbGFjayBvZiBmbGV4aWJpbGl0eSBpbiBmYWNlIG9mIGEgY29uZmxpY3QuCllvdXIgaGVhZGxpbmUgbXVzdCBiZSBjb21wcmlzZWQgb25seSBvZiB0aGUgZXhhY3QgY29waWVkIGFuZCBwYXN0ZWQgaGVhZGxpbmUgb2YgdGhlIGFydGljbGUuCiJXZSBoYXZlIHNvbWUgcmVhbGx5IGdvb2QgY291bmNpbCBzdGFmZiB3b3JraW5nIG9uIGl0LCIgQ3IgUmFua2luIHNhaWQuLiAKVGhlcmUgd2FzIGVhcmxpZXIgd29yayBpbiAxODAyIGJ5IFZhc2lseSBQZXRyb3YgKGQuIApCbGFja2phY2sgU3RyYXRlZ3kgYW5kIE9wdGltaXppbmcgTGFkeSBMdWNrCjIpIFRoZW9yZXRpY2FsbHksIGl0IHNob3VsZCBiZSBwb3NzaWJsZSB0byBydW4gdGhlIGJ1aWxkIHNjcmlwdHMgYW5kIGVuc3VyZSB0aGUgb3V0cHV0IGlzIHRoZSBzYW1lIGFzIHRoZSBwdWJsaXNoZWQgYnVpbHQgZmlsZXMuIFRoaXMgcHJvdmlkZXMgc29tZSBzYWZlZ3VhcmRpbmcgYWdhaW5zdCBjb2RlIGluamVjdGlvbiBhdHRhY2tzLiBXaXRob3V0IGJvdGggdGhlIHNvdXJjZSBhbmQgdGhlIGJ1aWxkIGluZm9ybWF0aW9uIChob3BlZnVsbHkgdGhlIGJ1aWxkIHRvb2xzIGFyZSBzcGVjaWZpZWQgYXMgZGV2IGRlcGVuZGVuY2llcyksIHRoaXMgaXNuIHBvc3NpYmxlLiAKSXQgbWF5IHZlcnkgd2VsbCBiZSBhIHN0cm9uZyBwYXJ0IG9mIHdoYXQgZHJvdmUgdGhlbSB0byB0aGUgcG9zaXRpb24gdGhleSBhcmUgaW4uIApQdWlzLCBpbCBzJ2FnaXQgZGUgYmllbiByZXByZW5kcmUgbGEgZGlzdGluY3Rpb24gZW50cmUgbGVzIGRldXggYWxpbmFzIGRlIGNldCBhcnRpY2xlLiBJbCBleGlzdGUgdW5lIGltcG9ydGFuY2UgZm9uZGFtZW50YWxlIGVudHJlIGxlcyB0ZXJtZXMgIGFib2xpICBldCAgYWx0ciAuIApTbyBJIGd1ZXNzIHRoZSBydWxlIGlzIHRoZXkgaGF2ZSB0byByZSBzaHVmZmxlIHRoZSByaXZlciBzaW5jZSB0aGUgbGFzdCBndXkgaGFkIGFsbCB0aGUgaW5mbyBiZWZvcmUgaGUgZ290IHRvIGFjdC4gCkFzIHdlbGwgYXMgbG9va2luZyBhdCB3aGF0IHRoZSBOSFMgaGFzIGFjaGlldmVkIG92ZXIgdGhlIDcwIHllYXJzIGl0IGhhcyBiZWVuIGluIG9wZXJhdGlvbiwgVGhlIEJNSidzIGNvdmVyYWdlIHdpbGwgYWxzbyBjb25zaWRlciBob3cgdGhlIE5IUyBtaWdodCBuZWVkIHRvIGNoYW5nZSB0byBmYWNlIHRoZSBjaGFsbGVuZ2VzIHRoYXQgbGllIGFoZWFkLi4gCk9zdGVvcGF0aGllIHVuZCBBeXVydmVkYQpJIGEgdmVyeSBiaWcgZmFuIG9mIEplbm5pZSAoQmxhY2twaW5rIGlzIGV2ZW4gaW4gbXkgZmxhaXIpIGFuZCBvZiBTTlNELCBzbyBwbGVhc2UgZG9uIGdvIHNob3Zpbmcgd29yZHMgdGhhdCBJIGRpZG4gc2F5IGRvd24gbXkgdGhyb2F0LnZhbGVyaWVfbGV3aXMgIDEyIHBvaW50cyAgc3VibWl0dGVkIDEgbW9udGggYWdvV2lzaCBTSkggY2FuIGRldmVsb3AgYSBjaGFyYWN0ZXIgdGhhdCBkb2VzbiBkZXBlbmQgb24gbG92ZWxpbmVzLiAKSSBkb24ga25vdyBpbiB3aGljaCBjb3VudHJ5IHBlb3BsZSBwcmVmZXIgdG8gdXNlIHNvbWV0aGluZyBsaWtlIDU6MSBvZGRzIGJ1dCBqdXN0IHVzZSB0aGUgc2ltcGxlIHJ1bGUgb2YgMi4gSWYgeW91IGhhdmUgOCBvdXRzIChpbiB0aGUgZmxvcCkgdGhlbiB5b3UgaGF2ZSBhcm91bmQgMzIlIGNoYW5jZSB0byBpbXByb3ZlIHlvdXIgaGFuZCBhZnRlciB0aGUgZmxvcCwgd2hpY2ggbWVhbnMgeW91IGluIHByb2ZpdCBJRiB2aWxsYWluIG9ubHkgYmV0IGluIHRoZSBmbG9wIGFuZCBjaGVjayB0dXJuLiBVc3VhbGx5IHRoaXMga2luZCBvZiBzY2VuYXJpb3Mgd29yayBiZXR0ZXIgd2hlbiB5b3UgYXJlIGluIHBvc2l0aW9uIGFuZCBtYWtlIGEgdGhpbiB2YWx1ZSBiZXQgKHVzdWFsbHkgMzMlIG9mIHRoZSBwb3QpIHRoZW4gY2hlY2sgdGhlIHR1cm4gYW5kIGV2YWx1YXRlIHRoZSByaXZlci4gCkJhdWUgZGllIGRlaW5lIGJhbmtyb2xsIGF1Zi4gRGllIGdyb2UgU3VtbWUsIGRpZSBkdSBpbSBsZXR6dGVuIEFic2Nobml0dCBlcm1pdHRlbHQgaGFzdD8gRGllIGJlbnRpZ3N0IGR1IHdlbm4gZHUgZXJuc3RoYWZ0IHNwaWVsZW4gbWNodGVzdC4gRHUgYnJhdWNoc3Qgc2llIGZyIGJ1eSBpbnMgdW5kIGZyIGRpZSBFaW5zdHplIHVuZCB3ZW5uIEZvcnR1bmEgZGlyIG1hbCBuaWNodCB6dXIgU2VpdGUgc3RlaHQuIApJIGhhdmUgYSBmZWFyIHRoYXQgZ29pbmcgZnJvbSByYWlkZWQgMCByYXB0b3IgZHJpdmVzIHRvIDcyMDBSUE0gd2lsbCBiZSBzb21laG93IG5vdGljZWFibGUgZm9yIG1lIGJ1dCB3aXRoIHRoZSBpbmNyZWFzZXMgaW4gdGVjaG5vbG9neSBJIHN1c3BlY3QgaXQgd2lsbCBiZSBtdWNoIGZhc3Rlcj8KV2h5IGRvIHNvbWUgcGVvcGxlIHNlZW0gc28gYXR0cmFjdGl2ZSBvbiBmaXJzdCBzaWdodD8gV2hhdCBlbGVtZW50cyBnbyB0byBtYWtlIHVwIHRoZWlyIHBlcnNvbmFsaXR5PyBGcm9tIHdoYXQgc291cmNlcyBkbyB0aGV5IGRyYXcgdGhlaXIgbWFnbmV0aWMgY2hhcmlzbWE/IElmIHRoZXJlIGlzIG5vIGdsb3cgb2YgY2hhcm0gaW4gYW4gaW5kaXZpZHVhbCwgaXQgcmVhbGx5IGRvZXNuJ3QgbWF0dGVyIG11Y2gsIHdoYXQgZWxzZSB0aGV5IG1heSBoYXZlLiBXaGF0IHRoZSBoZWFydCB0aGlua3MsIGlzIHRoZSBtYW4uIFdoYXQgYXJlIHRob3NlIHF1YWxpdGllcyB0aGF0IGVuZGVhciBhIGZldyBpbiBsaWdodGVuaW5nIHNwZWVkIHRvIGFsbCB0aGV5IGNvbWUgaW50byBjb250YWN0IHdpdGg/IExvdmUgYXQgZmlyc3Qgc2lnaHQgaXMgYW4gYWJzb2x1dGUgdHJ1dGg7IHRoZSBkaXNjb3ZlcnkgaW4gYSBtYW4gd29tYW4gcmVsYXRpb25zaGlwLCBvZiBpdCBiZWluZyBjb250cmFyeSwgaXMgc29tZXRpbWVzIGEgbWF0dGVyIG9mIHRpbWUuIEJ1dCBvdGhlcndpc2UgdGhlIGRpY3R1bSBob2xkcyB3YXRlci4KUHVua1RvVGhlRnV0dXJlICAxMyBwb2ludHMgIHN1Ym1pdHRlZCAzIGRheXMgYWdvClRoZXJlIGlzIGx1Y2sgaW52b2x2ZWQuIApDaGFyZ2ViYWNrcyBhcmUgZnJlcXVlbnRseSBhIHRvb2wgZm9yIGZyaWVuZGx5IGZyYXVkLiBJIGFuc3dlciBjaGFyZ2ViYWNrcyBmb3IgdGhlIGJ1c2luZXNzIEkgd29yayBmb3IgYW5kIHRoZXkgYXJlIHF1aXRlIGZyZXF1ZW50bHkgZm9yIGxlZ2l0aW1hdGUgZmVlcyBwZW9wbGUgZG9uIHdhbnQgdG8gcGF5IGFuZCBvY2Nhc2lvbmFsbHkgc2VydmljZXMgYSBwZXJzb24gdXNlZCB0aGVuIHJlcG9ydGVkIHRoZSBjYXJkIG1pc3NpbmcuIFJlbWVtYmVyIGFzIHdlbGw6IGV2ZW4gaWYgYSBjdXN0b21lciAid2lucyIgYSBjaGFyZ2UgYmFjaywgaXQgZG9lc24gbWVhbiB0aGV5IGRvbiBvd2UgdGhlIG1vbmV5LCBqdXN0IHRoZSB0aGUgdmVuZG9yIGhhcyBmYWlsZWQgdGhlIGFwcGVhbCBwcm9jZXNzIHRvIHByb3ZlIHRoYXQgdGhleSBtZWV0IHRoZSB0ZXJtcyBvZiB0aGUgbWVyY2hhbnQgYWdyZWVtZW50IHdpdGggdGhlIGNyZWRpdCBjYXJkIGNvbXBhbnkuClRoZSBkZWJhdGUgb3ZlciB3aGV0aGVyIG9iamVjdGl2aXR5IGlzIGV2ZXIgcG9zc2libGUgd2FzIHByZXNlbnQgYXQgdGhlIHZlcnkgYmVnaW5uaW5nIG9mIHNvY2lvbG9neS4gCkp1YW4gR2F1ZGlvIGlzIGEgVVMgcHVwcGV0IGluc3RhbGxlZCBieSBQZW5jZSB0byBvdmVydGhyb3cgdGhlIGVsZWN0ZWQgZ292ZXJubWVudCBpbiBWZW5lenVlbGEgYW5kIGRvZXMgbm90IHJlcHJlc2VudCB0aGUgcGVvcGxlIHRoZXJlLiBVUyBtaWxpdGFyeSBpbnRlcnZlbnRpb24gb3IgY291cHMgYXR0ZW1wdHMgbXVzdCBiZSBjYWxsZWQgb3V0IGJ5IGRlbSBjYW5kaWRhdGVzIGxpa2UgVHVsc2kgR2FiYmFyZCBpbiB0aGUgbGVhZCB1cCB0byB0aGUgMjAyMCBlbGVjdGlvbiBsZXN0IHlvdXIgYnJvdGhlcnMgYW5kIHNpc3RlciBkaWUgYSBzZW5zZWxlc3MgZGVhdGggaW4gYSBuZWVkbGVzcyB3YXIgZm9yIG9pbC4uIApMdWNpYSBIb3RlbHMgd2l0aCBQb29sc1BldCBGcmllbmRseSBIb3RlbHMgaW4gU3QuIEx1Y2lhUG9wdWxhciBTdC4gTHVjaWEgQ2F0ZWdvcmllc0FsbCBJbmNsdXNpdmUgUmVzb3J0cyBpbiBTdC4gClRoYW5rIHlvdSB3aG9ldmVyIGRvbmUgaXQuIEhvcGVmdWxseSBpdCBjYW4gaGVscCBzb21lb25lIGhlcmUuIEJ1dC4gClRoZSBMZWFmcywgd2hvIHdlbnQgaW50byB0aGUgbmlnaHQgaW4gdGhpcmQgcGxhY2UgaW4gdGhlIEF0bGFudGljIERpdmlzaW9uLCB3ZXJlIG1pc3NpbmcgZGVmZW5jZW1lbiBUcmF2aXMgRGVybW90dCBhbmQgSmFrZSBHYXJkaW5lci4gCkJ1dCB0aGVyZSdzIG5vIHJlYXNvbiBmb3IgeW91IHRvIGJlIGZvcmNpbmcgYXRoZWlzbSBkb3duIHNvbWVvbmUncyB0aHJvYXQgYmVjYXVzZSB0aGVpciBzb24gd2FzIHByYXlpbmcuIApJIGZlZWwgbGlrZSBJJ20gbm90IGdpdmluZyB0aGUgbGl0dGxlIGd1eSBhbnkgdGltZSB0byBzbGVlcCBiZWNhdXNlIG9mIG15IHBhcmFub2lhLiBPciBhbSBJIHJpZ2h0IHRvIGJlIHBva2luZyBhbmQgcHJvZGRpbmc/IEkganVzdCBkb24ndCB3YW50IGhpbSB0byBjb21lIG91dCBiZSBhIGhvcnJpYmxlIHNsZWVwZXIgYmVjYXVzZSBJIGtlcHQgd2FraW5nIGhpbSB1cCEgSSBhbHNvIGFtIGFmcmFpZCB0aGF0IG9uY2UgaGUncyBoZXJlIEknbSBnb2luZyB0byBiZSBvbmUgb2YgdGhvc2UgbW9tcyB0aGF0IGNoZWNrcyBldmVyeSB0ZW4gbWludXRlcyB0byBtYWtlIHN1cmUgaGUncyBicmVhdGhpbmcuIFdpbGwgSSBldmVyIGJlIGFibGUgdG8gcmVsYXg/IEkgZmVlbCBsaWtlIHRoZSBhbnN3ZXIgaXMgTk8uLiAKT24gYSB3YWxrIGxhdGUgb25lIG5pZ2h0LCBoZSBmaW5kcyBoaW1zZWxmIG1hZ2ljYWxseSB0cmFuc3BvcnRlZCB0byBoaXMgZHJlYW0gZXJhICcyMHMsIHdoZXJlIGhlIG1lZXRzIGRvemVucyBvZiBoaXMgaGVyb2VzLiBFcm5lc3QgSGVtaW5nd2F5LCBGLiAKWW91ciBrbmlnaHRzIGFuZCBiaXNob3BzIG5lZWQgdG8gYmUgZGV2ZWxvcGVkIHRvIGNvbnRyb2wgc3F1YXJlcyBpbiB0aGUgbWlkZGxlIG9mIHRoZSBib2FyZC4gCllvdSBnb3QgdG8gaGF2ZSBza2lsbCB0byBrbm93IHdoZW4gdG8gY2FsbCBpdC4gClRoYXQgbWF5IGJlIHN1cnByaXNpbmcgdG8gc29tZSwgYmVjYXVzZSBhIHBva2VyIGNhbGN1bGF0b3IgaXMgYW4gaW5oZXJlbnRseSBtYXRoZW1hdGljYWwgb2RkcyBnYWRnZXQsIHdoaWNoIHdvdWxkIHNlZW1pbmdseSBoZWxwIHlvdSBpbiBjZXJ0YWluIGhhbmRzICAgYXMgd2VsbCBpdCBkb2VzLiBCdXQgd2hhdCBpdCBkb2VzIGV2ZW4gYmV0dGVyIGlzIGtlZXAgeW91IG91dCBvZiB0aGUgbW9uZXkgbG9zaW5nIGhhbmRzIGluIHRoZSBmaXJzdCBwbGFjZS4gVGFrZSB0aGF0IEtRb3MgZm9yIGV4YW1wbGUuIEkgaGF2ZSB0ZXN0ZWQgYSBsb3Qgb2YgdGhlIG9ubGluZSBjYWxjdWxhdG9ycywgYW5kIHRoZXJlIGlzbid0IG9uZSBvZiB0aGVtIHRoYXQgYWR2aXNlcyB5b3UgdG8gY29tZSBpbiBmb3IgYSByYWlzZSwgZWFybHkgcG9zaXRpb24uIFRob3NlIGNhcmRzIGxvb2sgZ29vZCwgZXNwZWNpYWxseSBhdCBhIGxvb3NlIHRhYmxlLCBhZ2FpbnN0IGZvb2xpc2ggb3Bwb25lbnRzLCBidXQgaXQgaXMgYWJzb2x1dGVseSBhIGhhbmQgdG8gcGxheSBpbiBwb3NpdGlvbiwgd2l0aCBhZ2dyZXNzaW9uLCBhbmQgbm90IGVhcmx5IHdpdGggd2Vha25lc3Mgd2hlcmUgYSBuZWdhdGl2ZSBFViBpcyBndWFyYW50ZWVkLgpJdCBmZWVscyB3ZWlyZCB3aGVuIHlvdSBzZWUgc29tZW9uZSB0aGF0IGxvb2tzIGxpa2UgYSBtYW4gb3IgbG9va3MgbGlrZSBhIHdvbWFuIGFuZCBub3QgcmVmZXIgdG8gdGhlbSB3aXRoIGEgbWFzY3VsaW5lIG9yIGZlbWluaW5lIHByb25vdW4uIApUaGUgd2ViIGJhc2VkIGFwcCwgd2hpY2ggaXMgcGFydCBvZiB0aGUgRmluZHJvdyBOZXR3b3JrLCBnZW5lcmF0ZXMgbW9uZXkgZnJvbSBib3RoIHN1YnNjcmlwdGlvbnMgYW5kIGluIGFwcCBwcmVtaXVtIGNvbnRlbnQuIFVzZXJzIHdobyB3YW50IHRvIHNlZSBwaG90byBnYWxsZXJpZXMgb2YgS2hhbGlmYSBpbiB2YXJpb3VzIHN0YWdlcyBvZiB1bmRyZXNzIHBheSAkNy40OSBwZXIgbW9udGgsICQxNC40OSBmb3Igc2l4IG1vbnRocywgb3IgJDI0LjQ5IGFubnVhbGx5LiBGb3IgdGhhdCByZWxhdGl2ZWx5IHNtYWxsIGluaXRpYWwgcGF5bWVudCwgdXNlcnMgZ2V0IGFjY2VzcyB0byBzZWxmIHBvcnRyYWl0cyBvZiB0aGUgTGViYW5lc2UgQW1lcmljYW4gYmVhdXR5IGluIHRpbnkgYmF0aGluZyBzdWl0cywgbGluZ2VyaWUgdGhhdCBzZWVtcyB0byBiZSBhdCBsZWFzdCBvbmUgc2l6ZSB0b28gc21hbGwgZm9yIGhlciBhbXBsZSBjaGVzdCwgb3IgYmFzaWNhbGx5IG51ZGUgZXhjZXB0IGZvciBzb21lIHZlcnkgc3RyYXRlZ2ljYWxseSBwbGFjZWQgaGFuZHMgb3Igc3RyYW5kcyBvZiBoYWlyLgpJdCBsb29rcyB1bmNvbWZvcnRhYmxlLiAKSWYgeW91ciBtYXR0cmVzcyBpcyBub3QgYSBwaWxsb3cgdG9wLCBnZXQgYSBtYXR0cmVzcyB0b3BwZXIgZm9yLCBhdCB0aGUgdmVyeSBsZWFzdCwgeW91ciBzaWRlIG9mIHRoZSBiZWQuIApOQUwsIGJ1dCBJIGhhdmUgYmVlbiB0aHJvdWdoIHRoZSBhZG9wdGlvbiBwcm9jZXNzIHR3aWNlLiBUaGVyZSBpcyBhIHZlcnkgYmlnIHBvc3NpYmlsaXR5IHRoYXQgaGUgY2FuIGNvbnRlc3QgdGhlIGFkb3B0aW9uLiBXb3VsZCBpdCBlbmQgaW4gaGlzIGZhdm9yPyBXaG8ga25vd3MuIEkga25vdyBpbiBteSBzdGF0ZSwgdGhlcmUgYXJlIGNlcnRhaW4gdGhpbmdzIHRoYXQgbmVlZCB0byBiZSBkb25lIGZvciBhbiBhZG9wdGlvbiB0byB0YWtlIHBsYWNlLiBQYXJlbnRhbCByaWdodHMgaGF2ZSB0byBiZSB0ZXJtaW5hdGVkLCBvciB0aGV5IGhhdmUgdG8gbWFrZSBhIGdvb2QgZmFpdGggZWZmb3J0IHRvIGZpbmQgdGhlIGRhZC4gSWYgdGhlIGd1eSB0aGF0IHRob3VnaHQgaGUgd2FzIHRoZSBkYWQgaXMgb24gdGhlIGJpcnRoIGNlcnRpZmljYXRlLCB0aGVuIGhlIG1pZ2h0IGJlIGFibGUgdG8gdGhhdC4gTXkgaXNzdWUgaXMgd2l0aCB0aGUgRE5BIHRlc3QuIFlvdSBkb24ndCBoYXZlIHRvIGJlIG9yZGVyZWQgdG8gdGFrZSBhIHRlc3QsIHlvdSBjYW4gZ2V0IG9uZSBpbmRlcGVuZGVudGx5LiBCdXQgaGUgd291bGQgb2YgaGFkIHRvIGdldCB0aGUgZGF1Z2h0ZXJzIGRuYSwgYW5kIHVubGVzcyB0aGUgU0lMIHRvb2sgaGVyLCB0aGVyZSBpcyBubyB3YXkuIEJ1dCBpdCdzIGFsc28gYSBsaXR0bGUgZmlzaHkgdGhhdCBoZSBzdXBwb3NlZGx5IGtuZXcgYWJvdXQgdGhlIGRhdWdodGVyIGJ1dCBuZXZlciBzYWlkIGFueXRoaW5nIHVudGlsIG5vdy4gSSB3b3VsZCBkZWZpbml0ZWx5IGdldCBhIGxhd3llciwgb3IgdGFsayB0byB0aGUgbGF3eWVyIHRoYXQgaGFuZGxlZCB0aGUgYWRvcHRpb24uIFRoZXkgd291bGQgYmUgYWJsZSB0byB0ZWxsIHlvdSBtb3JlLgpJIHRoaW5rIHRoZXJlIGFyZSBwZW9wbGUgd2hvIGJsb3cgc29tZSB0aGluZ3Mgb3V0IG9mIHByb3BvcnRpb24sIGFuZCBldmVuIGluIG15IGV4YW1wbGVzLCBhbmQgdGhlIGVuZCBvZiB0aGUgZGF5IEkgYW0gZmluZS4gQnV0IGl0IGhhcyBsZWZ0IG1lIGZlZWxpbmcgYSBsaXR0bGUgc291cmVkLiAKV2hpbGUgaXQgc3RpbmdzIHRvIGJlIGNhbGxlZCBvdXQgZm9yIHByaXZpbGVnZSB0aGF0IHlvdSBhcmVuIGV2ZW4gYXdhcmUgb2Ygc29tZXRpbWVzLCBpdCBzb3VuZHMgbGlrZSBoZXIgY29tbWVudCBtYWRlIHNlbnNlIGluIGNvbnRleHQuIFlvdSB3ZXJlIHBhc3NpbmcganVkZ2VtZW50IG9uIHNvbWUgYWN0aW9uIHRoYXQgeW91IGZvdW5kICJzdHJhbmdlIiBhbmQgaGVyIHJlcGx5IHdhcyAiaXQgbm90IHlvdXIgcGxhY2UgdG8gcGFzcyBqdWRnZW1lbnQgb24gdGhpcyBpc3N1ZSIuIApXZSBnb3QgYSBuZXcgYm9zcyBsaWtlIGEgeWVhciBhZ28gYXQgd29yayBhbmQgd2UgYmVlbiBoYXRpbmcgaXQuIHBlb3BsZSBhcmUgZ2V0dGluZyB3cml0dGVuIHVwIGZvciBwZXR0eSBzaGl0IGFuZCBzdXNwZW5kZWQgYW5kIGxvc2luZyB0aGVpciBib251c2VzLiBJIGEgZ29vZCBlbXBsb3llZSwgYnV0IHRoaXMgc3R1ZmYgZmluYWxseSBjYXVnaHQgdXAgdG8gbWUgdG9vIGFuZCBJIGdvdCB3cml0dGVuIHVwIGZvciBnZXR0aW5nIGluanVyZWQgYXQgd29yayAobG9uZyBzdG9yeSkuIEkgZG9uIHBsYXksIHNvIHdoZXJlIGl0IHNhaWQgImVtcGxveWVlIGNvbW1lbnRzIiBvbiB0aGUgd3JpdGUgdXAgSSBzYWlkICJzZWUgYXR0YWNoZWQiIGFuZCB0eXBlZCBvdXQgYSAzIHBhZ2UgZGVmZW5zZSB0YWxraW5nIGFib3V0IGhvdyBJIHRob3VnaHQgaXQgd2FzIHVuZmFpciBhbmQgaG93IEkgdGhvdWdodCBwZW9wbGUgaGFkIGJlZW4gZ2V0dGluZyB0cmVhdGVkIHVuZmFpcmx5IGZvciBhIHllYXIgbm93LiB0aGUgbmV4dCBkYXkgSSBnb3QgY2FsbGVkIGludG8gYSBtZWV0aW5nIGJ5IG15IGJvc3MsIGFuZCBoaXMgYm9zcywgYW5kIGhpcyBib3NzIGFuZCBhbiBIUiByZXAgc28gdGhleSBjb3VsZCBncmlsbCBtZSBhYm91dCBpdC4gYnkgdGhlIGVuZCBvZiB0aGUgbWVldGluZyB3ZSBoYWQgYWxsIGZpZ3VyZWQgb3V0IHRoYXQgaXQgd2FzIGFjdHVhbGx5IHRoZSBIUiByZXAgd2hvIGhhZCBiZWVuIHNjcmV3aW5nIHdpdGggcGVvcGxlIGZvciBhIHllYXIgbm93LCBhbmQgdGhlIGFuZ2VyIHNoaWZ0ZWQgY29tcGxldGVseSBhd2F5IGZyb20gbWUgYW5kIG9udG8gaGVyLiBJIHdlbnQgYXJvdW5kIGFuZCB0b2xkIGV2ZXJ5Ym9keSBhYm91dCBpdC4gd2UgZ29pbmcgdG8gbWFrZSB0aGlzIGJpdGNoIHBheQpMZXQncyBzYXkgdGhhdCB5b3UgZG8gbm90IGhhdmUgYWNjZXNzIHRvIGEgcG9rZXIgY2hpcCBjbGVhbmluZyBtYWNoaW5lLiBUaGF0IGlzIGZpbmUuIApCdXV1dXV1dXV1dXQsIHdpdGhvdXQgdGhhdCBiaXQgb2YgYmFja2dyb3VuZCBpbmZvcm1hdGlvbiwgdGhlIGFsaWVucyBSRUFMTFkgbG9vayBsaWtlIGJpb2xvZ2ljYWwgaHVtYW4gZmVtYWxlcyBvZiB2YXJ5aW5nIGRlZ3JlZXMgb2YgY2lzIGdlbmRlcm5lc3MsIGFuZCBhcmUgYWx3YXlzIHJlZmVycmVkIHRvIHVzaW5nIHNoZSBwcm9ub3Vucy4gClRoZSBib2FyZCBmb3VuZCB0aGF0IHRoZSBwcm9qZWN0IHdhcyBpbiB0aGUgcHVibGljIGludGVyZXN0IGRlc3BpdGUgbGlrZWx5IGFkdmVyc2UgZWZmZWN0cyB0byBlbmRhbmdlcmVkIHNvdXRoZXJuIHJlc2lkZW50IGtpbGxlciB3aGFsZXMgYW5kIEluZGlnZW5vdXMgY3VsdHVyYWwgcHJhY3RpY2VzIHJlbGF0ZWQgdG8gdGhlIGFuaW1hbHMuCklmIHRoZSBwbGF5ZXIgcmFpc2VzLCB0aGV5IG11c3QgZG91YmxlIHRoZWlyIHdhZ2VyIGFoZWFkIG9mIHRoZSBkZWFsZXIgcmV2ZWFscyB0aGVpciBoYW5kLiBEZXRlcm1pbmVkIGJ5IHRyYWRpdGlvbmFsIHBva2VyIHJhbmtpbmdzLCB0aGUgYmFsbCBwbGF5ZXIgdG9nZXRoZXIgd2l0aCB0aGUgYmV0dGVyIGhhbmQgd2lucy4uIApJdHMgMiw1MDAgc3RlcHMgYW5kIDgwIGxhbmRpbmdzIHdpbGwgYXR0cmFjdCBjcm93ZHMgb2YgY2xpbWJlcnMgYW5kIG9ubG9va2Vycy4KTGVzIEVNSSBjZWxhIHJlbHZlIHVuIHBldSBkZSBsYSBtZGVjaW5lLiBDJ2VzdCBsYSBuYXR1cmUgbW1lIGRlcyBFTUkgcXVpIG0naW50cmVzc2UgaWNpIGV0IGRvbnQgaWwgc2VyYSBxdWVzdGlvbiAgbGEgZmluLkV0IHBhcyBsZSBjYXJhY3RyZSB2ZW50dWVsbGVtZW50IHByb3BodGlxdWUgZGUgY2VsbGUgZG9udCBpbCB2YSB0cmUgcXVlc3Rpb24sIGNhcmFjdHJlIGRvbnQgaWwgZmF1dCBxdWFuZCBtbWUgcGFybGVyLiBKZSBtb250cmVyYWkgZCdhYm9yZCAgcXVlbCBwb2ludCBhY2NvcmQgZm9pICB1bmUgaW1hZ2VyaWUgcXVpIG4nZXN0IHF1ZSBsYSBjcmlzdGFsbGlzYXRpb24gZGVzIGNyb3lhbmNlcyBpbmhyZW50ZXMgIHVuIG1pbGlldSBjdWx0dXJlbCBwYXJ0aWN1bGllciBlc3QgY2hvc2UgZGFuZ2VyZXVzZS4gCkZvciBhbm90aGVyIHRoaW5nLCB0aGVyZSBpc24gcmVhbGx5IGEgImJyZWFrIi4gVGhlIHRpbWUgZnJvbSByb3VnaGx5IG1pZCBKdWx5IHRvIGVuZCBvZiBTZXB0ZW1iZXIgaXMgY2FsbGVkICJsZWN0dXJlIGZyZWUgdGltZSIsIHdoaWNoIG1lYW5zIHRoYXQgdGhlcmUgbWF5IG5vdCBiZSBsZWN0dXJlcyBvciBzZW1pbmFycywgYnV0IHBlb3BsZSBtaWdodCB0YWtlIGV4YW1zLCB3cml0ZSBwYXBlcnMsIHN0dWR5IGluIHRoZSBsaWJyYXJ5LgpUaGlzIGhhcHBlbnMgd2hlbiBJIGdvIHRvIHByb2Zlc3Npb25hbCB3cmVzdGxpbmcgc2hvd3MuIEl0J3MgYnJ1dGFsLiAKT3IgdG8gYmUgbW9yZSBjbGVhciwgaG93IGV4YWN0bHkgZG9lcyB0aGUgYW5qdW5hYmVhdHMgdG91ciB3b3JrPyBXaG8gcGVyZm9ybXMgb24gdGhlaXIgdG91cnM/IFdpbGwgdGhlIGFjdHVhbCBsaW5ldXAgY29tZSBvdXQgYXQgc29tZSBwb2ludD9SdWxlIEkgICBObyBzY3JlZW5zaG90cy4gVGhpcyBpbmNsdWRlcyBwaWN0dXJlcyBvZiBzY3JlZW5zIGFuZCBwaG90b3Mgd2hlcmUgdGhlIGludGVyZXN0IGlzIHRoZSBjb250ZW50cyBvZiBhIHNjcmVlbi4gCkFmdGVyIHRoaXMgSSB0dXJuZWQgaXQgb2ZmLCBhbmQgYSBjb3VwbGUgb2Ygd2Vla3MgbGF0ZXIgSSByZXR1cm5lZCB0byBpdCwgYW5kIHRoYXQgd2hlbiBJIGNvbXBsZXRlbHkgZmVsbCBmb3IgdGhlIGVudGlyZSBhbGJ1bS4gQW5kIHRoYXQgcmVhbGx5IGhvdyBJIGZlbGwgZm9yIFRNViBhbmQgUHJvZyBpbiBnZW5lcmFsLiBJIHN0aWxsIHZhc3RseSBwcmVmZXIgdGhlIG1vZGVybiBQcm9nIHRvIHRoYXQgb2YgdGhlIGdlbnJlICJGb3VuZGluZyBGYXRoZXJzIiwgYnV0IEkgY2FuIGFwcHJlY2lhdGUgd2hhdCB0aGV5IGRpZCBhbmQgaG93IHRoYXQgaW5zcGlyZWQgdGhlIGJhbmRzIG9mIHRvZGF5IHRoYXQgSSBub3cgbG92ZSBzbyBtdWNoLi4gClRoZSBTaW1wc29uIGp1cnkgd2FzIHByZWRvbWluYW50bHkgYmxhY2suIFBlcmhhcHMgaXQgd291bGQgaGF2ZSBjb250aW51ZWQgdG8gbWFrZSBzZW5zZSBpZiBIZW5sZXkgaGFkIG1hbmFnZWQgdG8gc2l0IHF1aWV0bHkgaW4gcHJpc29uIHdoaWxlIGhpcyBsYXd5ZXJzIGFwcGVhbGVkIHRoZSBjb252aWN0aW9uLiBNYXliZSBoZSdkIGhhdmUgZ290dGVuIGEgbmV3IHRyaWFsLiAKQ3JpbWluYWwgYW5kIGNpdmlsIGNoYXJnZXMgZmlsZWQgaW4gTmV3IFlvcmsgaGF2ZSBmb3JjZWQgb25saW5lIHBva2VyIHNpdGVzIFBva2VyU3RhcnMgKGJhc2VkIGluIHRoZSBJc2xlIG9mIE1hbikgYW5kIEZ1bGwgVGlsdCBQb2tlciAoYmFzZWQgaW4gQWxkZXJuZXksIGluIHRoZSBDaGFubmVsIElzbGFuZHMpLCBhcyB3ZWxsIGFzIENhbmFkYSBiYXNlZCBBYnNvbHV0ZSBQb2tlciwgdG8gc3RvcCBkb2luZyBidXNpbmVzcyB3aXRoIEFtZXJpY2Fucy5JdCBpcyB0aGUgbGF0ZXN0IHVwaGVhdmFsIGZvciB0aGUgaW5kdXN0cnksIHdoaWNoIG92ZXIgdGhlIGxhc3QgZGVjYWRlIGhhcyBncm93biBmcm9tIG5vdGhpbmcgaW50byBvbmUgdGhhdCByYWtlcyBpbiBhbiBlc3RpbWF0ZWQgJDVibiAoMy4yNWJuKSBlYWNoIHllYXIgYW5kIGlzIHJlZ3VsYXRlZCBpbiB2YXN0bHkgZGlmZmVyZW50IHdheXMgaW4gY291bnRyaWVzIGFyb3VuZCB0aGUgd29ybGQuQW1lcmljYSBpcyB0aGUgYmlnZ2VzdCBtYXJrZXQsIHdpdGggdXAgdG8gYSBtaWxsaW9uIG9ubGluZSBwbGF5ZXJzLiBHYW1ibGluZyBsYXdzIHZhcnkgZnJvbSBzdGF0ZSB0byBzdGF0ZSwgYnV0IGluIDIwMDYsIHRoZSBVUyBmZWRlcmFsIGdvdmVybm1lbnQgYXR0ZW1wdGVkIHRvIHB1dCB0aGUgYnJha2VzIG9uIG9ubGluZSBwb2tlciB3aXRoIHRoZSBVbmxhd2Z1bCBJbnRlcm5ldCBHYW1ibGluZyBFbmZvcmNlbWVudCBBY3QgKFVJR0VBKS5UaGUgVUlHRUEgd2FzIG1lYW50IHRvIGhhbHQgbW9uZXkgdHJhbnNmZXJzIHRvIG9ubGluZSBnYW1pbmcgc2l0ZXMsIGFuZCBzZXZlcmFsIGJpZyBwb2tlciBzaXRlcywgd2FyeSBvZiBydW5uaW5nIGZvdWwgb2YgdGhlIGxhdywgcHVsbGVkIG91dCBvZiB0aGUgQW1lcmljYW4gbWFya2V0LiBIb3dldmVyIHRoZSB0aHJlZSBjb21wYW5pZXMgbmFtZWQgaW4gdGhlIGluZGljdG1lbnQgY29udGludWVkIHRvIHdlbGNvbWUgVVMgYmFzZWQgY3VzdG9tZXJzLkZlZGVyYWwgcHJvc2VjdXRvcnMgaW4gTmV3IFlvcmsgYXJlIHNlZWtpbmcgYXQgbGVhc3QgJDNibiAoMS44Ym4pIGluIGNpdmlsIG1vbmV5IGxhdW5kZXJpbmcgcGVuYWx0aWVzLiAKVGVjaG5pY2FsbHkgeW91IGRpZCBoYXZlIGEgcnVubmVyIHJ1bm5lciBmbHVzaCBkcmF3IGFuZCB0ZWNobmljYWxseSB5b3UgZGlkbiBsaWUuIFdoZW4gbW9zdCBwbGF5ZXJzIGFuc3dlciBxdWVzdGlvbnMgbGlrZSB0aGVzZSB0aGV5IHJhcmVseSBvdXQgcmlnaHQgbGllIGFuZCBqdXN0IHN0aWNrIHRvIHZhZ3VlIGFuc3dlcnMgb3IgaGFsZiB0cnV0aHMuCkkgdGhpbmsgeW91IGxvb2tpbmcgYXQgdGhlIHByb2R1Y3QgaW4gYSBkaWZmZXJlbnQgbWFubmVyIHRoYW4gaG93IEkgc2VlIGl0LiBUaGUgYm9vc3QgZXh0ZW5kcyBiZXlvbmQganVzdCB0aGUgWFAgYW5kIGdvbGQgaW5jcmVhc2VzLiBNeSBleHBlY3RhdGlvbiBvZiB0aGUgYm9vc3QgcHJvZHVjdCBpcyB0byBiZSBhYmxlIHRvIHVzZSBpdCBpbiBhIGdhbWUgdGhhdCB0aGV5IHByb3ZpZGUgcXVhbGl0eSBtYXRjaG1ha2luZywgYSBwbGF5ZXIgcG9wdWxhdGlvbiB0byBsZWFkIHRvIGNvbXBldGl0aXZlIGdhbWVzLCBhbmQgY29udGVudCB1cGRhdGVzIGluIHRoZSBmcmVxdWVuY3kgdGhhdCB3ZSBjb21lIHRvIGV4cGVjdCBpbiBvcmRlciB0byBlbmpveSB0aGUgYmVuZWZpdHMuIElmIHRoZXJlIGlzbiBhcyBtdWNoIGNvbnRlbnQsIHRoZW4gdGhlIGJvb3N0IGlzbiBhcyB1c2VmdWwgc2luY2UgdGhlcmUgbGl0dGxlIHBvaW50IGluIGFjY3J1aW5nIGV4dHJhIGdvbGQuCkFib3V0IDI1MSB0aW1lcyBhcyBtYW55IHBlb3BsZSBoYXZlIGJlZW4ga2lsbGVkIGluIEFmZ2hhbmlzdGFuIGFuZCBJcmFxIHRoYW4gaW4gdGhlIGdoYXN0bHkgYXR0YWNrcyBvZiBTZXB0ZW1iZXIgMTEsIDIwMDEuIE1vcmUgdGhhbiAxMDggdGltZXMgYXMgbWFueSBwZW9wbGUgaGF2ZSBiZWVuIGtpbGxlZCBpbiB0aGVzZSB3YXJzIGFuZCBvY2N1cGF0aW9ucyB0aGFuIGluIGFsbCB0ZXJyb3Jpc3QgYXR0YWNrcyBpbiB0aGUgd29ybGQgZnJvbSAxOTkzIDIwMDQuIFRoZSAyMDA0IHJlcG9ydCBzaG93ZWQgdGVycm9yaXNtIGF0IGFuIGFsbCB0aW1lIGhpZ2gsIGFuZCBhZnRlciBudW1lcm91cyBleHBlcnRzIHN1Z2dlc3RlZCB0aGF0IHRoZSB3YXJzIGluIEFmZ2hhbmlzdGFuIGFuZCBJcmFxIHdlcmUgZnVlbGluZyB0aGUgaW5jcmVhc2UsIHN1YnNlcXVlbnQgcmVwb3J0cyBoYXZlIHJlbWFpbmVkIGNsYXNzaWZpZWQuCkRvIG5vdCBldmVyIGdvIGJpZyBib3ggZm9yIGEgYmljeWNsZS4gClNwYWRlNzg5MSB1CkR1cmluZyB0aGUgb25nb2luZyBzYWdhIG92ZXIgdGhlIHNlbGVjdGlvbiBvZiBhIG5ldyBjb21taXNzaW9uZXIgb3ZlciB0aGUgcGFzdCB0d28gZGF5cywgd2UndmUgaGVhcmQgYSBwcmVtaWVyIGFuZCBhIHNlbmlvciBUb3JvbnRvIHBvbGljZSBvZmZpY2VyIHN0YXRlIHB1YmxpY2x5IHRoYXQgdGhlIE9udGFyaW8gUHJvdmluY2lhbCBQb2xpY2UgbmVlZHMgYSBjdWx0dXJhbCBjaGFuZ2UgYXQgdGhlIHRvcC4gClRoZW4gb3ZlciB0aGUgbmV4dCAxMCB5ZWFycywgSSBzdGFydGVkIGdldHRpbmcgYSBsaXR0bGUgaXRjaHkgd2hlbmV2ZXIgSSBnb3QgbXkgaGFpciBkeWVkLiAKV2hpbGUgaXQgaXMgdHJ1ZSB0aGF0IG5vIG9uZSBpcyBwZXJmZWN0LCB5b3UgYXQgbGVhc3Qgd2FudCB0byBzcGVuZCB0aGUgcmVzdCBvZiB5b3VyIGxpZmUgd2l0aCBzb21lb25lIHdobyBpcyBzb21ld2hhdCB0b2xlcmFibGUuIEEgc29jaWFsbHkgc3RhYmxlIHBlcnNvbiB0cmVhdHMgZXZlcnlvbmUgYWJvdXQgdGhlIHNhbWUuIFdlIHJhcmVseSBnbyBvdXQgaW4gcHVibGljIHRvZ2V0aGVyLiAKVGhlIHBsYXllcnMgd2lsbCBwYXkgZm9yIHRoZSBkZWFsZXIgc3RlYWxpbmcgb3IgdGhlIHJvb20gd2FzIHNodXQgZG93biBldmVudHVhbGx5LiBJZiB0aGUgY2FzaW5vIGxldHMgdGhlIGRlYWxlciBzdGVhbCBtb3JlIGRlYWxlcnMgd2lsbCBzdGVhbCBhbmQgZXZlbnR1YWxseSB0aGV5IHdpbGwgbG9zZSBhIGxvdCBvZiBtb25leS4gCkplZGUgQXVmZ2FiZSBpc3QgcHJpbnppcGllbGwgc28gZ2VzdGFsdGV0IHdpZSBkYXMgZGllIEJlaXNwaWVsZSBpbiBkZW4gZXJzdGVuIGJlaWRlbiBCbmRlbiBzY2hvbiB3YXJlbi4gQWxzbyBnaWJ0IGVzIGVyc3QgbWFsIGVpbmUgVGlzY2hiZXJzaWNodCwgZGFubiBlaW4gYmlzc2NoZW4gd2FzIGJlciBkaWUgTWl0c3BpZWxlciwgc28gd2lyIGlyZ2VuZHdhcyBiZXIgc2llIHdpc3Nlbi4gClNvIHRoaXMgYnJpbmdzIHVzIHRvIE1vbmRheSAoQ2hyaXN0bWFzKS4gSXQgd2FzIGEgQ2hyaXN0bWFzIGxpa2Ugbm8gb3RoZXIuCkVsZ2d1bnMgIDYgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpJIHRoaW5rIHlvdSBzaG91bGQgY2hhcmdlIG1vcmUgaW4gdGVybXMgb2YgaG93IGxvbmcgaXQgd2lsbCB0YWtlIHlvdS4gQmVjYXVzZSBpdCBjYW4gYmUgYSBzbWFsbGlzaCBqb2IgdGhhdCB3b3VsZCBvbmx5IHRha2UgYSBmZXcgaG91cnMgYnV0IGlmIGl0IGlzIGNvdmVyZWQgaW4gZGlydCBhbmQgbGVhdmVzIHRoZW4gaXQgd2lsbCB0YWtlIGFsbCBkYXkgcHJvYmFibHkuIEp1c3QgdGhpbmsgYWJvdXQgaXQuIApBbmNpZW50IFJvbWFucyByZXBvcnRlZGx5IHVzZWQgdXJpbmUgdG8gd2hpdGVuIHRoZWlyIHRlZXRoLiAKU29tZSBwYXJlbnRzIHdvdWxkIGhhdmUgbGl0dGxlIGJhZGdlcyBnb2luZyBhbGwgdGhlIHdheSBhY3Jvc3Mgd2l0aCBhbGwgdGhlIGtpZHMgbmFtZXMgdGhleSB3ZXJlIHBpY2tpbmcgdXAuLiAKQmxvY2tpbmcgY29uc2VydmF0aXZlcyBmcm9tIHNwZWFraW5nIG9uIGNvbGxlZ2UgY2FtcHVzZXMsIGFuZCBjYWxsaW5nIGlkZWFzIHRoYXQgd2VyZSBtYWluc3RyZWFtIGp1c3QgMTAgeWVhcnMgYWdvIGhhdGUgc3BlZWNoIGFyZSBub3Qgd2F5cyB0aGF0IGNhbiBjcmVhdGUgYSBVbml0ZWQgY291bnRyeS4gClRoZSByb29tIGlzIHZlcnkgbmljZS4gSXQgbG9va3MgbW9yZSBsaWtlIGEgZGVjZW50IGhvdGVsIHJvb20sIGNvbWluZyBhcyBpdCBkb2VzIHdpdGggYWxsIHRoZSB0cmFwcGluZ3MgaW5jbHVkaW5nIGV2ZW4gYSBsYXJnZSB3YXJkcm9iZSEgVGhlcmUgaXMgYSBkb3VibGUgYmVkIHdpdGggZHJhcGVzLCBhIGxhcmdlIGFuZCBjb21mb3J0YWJsZSBiYXRodHViLCBzb2ZhLCB0ZWxldmlzaW9uIGFuZCB3aW5kb3cgKG9idmlvdXNseSB3aXRoIGN1cnRhaW5zIGRyYXduKS4gVGhlIHJvb20gaXMgd2VsbCBsaXQgYW5kIHZhcmlvdXMgdG9pbGV0cmllcyBhcmUgcHJvdmlkZWQgYWxvbmcgd2l0aCB0aGUgdXN1YWwgY2xlYW5pbmcgc3R1ZmYuIEl0IHdhcyBhIHZlcnkgbmljZSByb29tLCB3ZWxsIGtlcHQsIG5pY2VseSBkZXNpZ25lZCBhbmQgY2xlYW4uIFRoZSBvbmx5IGRyYXdiYWNrcyB3ZXJlIGFuIGFic2VuY2Ugb2YgbWlycm9ycyBhbmQgcGxhc3RpYyB1bmRlciB0aGUgYmVkc2hlZXRzIGFuZCBwaWxsb3djYXNlcy4gT0ssIGl0IG9idmlvdXMgd2h5IHRoZXkgbmVlZCB0aGF0IGJ1dCBhIHNvZnRlciB0eXBlIHdvdWxkIGJlIGJldHRlciBiZWNhdXNlIGl0IHNvdW5kcyByYXRoZXIgY2xpbmljYWwgdG8gaGVhciB0aGUgcnVzdGxpbmcgb2YgcGxhc3RpYyBiZWxvdyB5b3VyIGhlYWQgb3IgYm9keS44LzEwClNoZSBuZXZlciBoYWQgaGltIG92ZXJuaWdodC4pU28gYWxsIGluIGFsbCBzaGUgd2FzIHRyeWluZyB0byBiZSB0aGUgbW9tIHRvIG15IGJhYnkuIApJcyBob3cgcGVvcGxlIGVuZCB1cCBpbiBzaGl0dHkgcmVsYXRpb25zaGlwcyB3aXRoIHNoaXR0eSBwYXJ0bmVycyBhbmQgcHV0IHVwIHdpdGggaXQgYWxsIGR1ZSB0byBmZWFyIG9mIGJlaW5nIGFsb25lLgpEYXZ5IHdhcyBzdGlsbCBib2lsaW5nIG92ZXIgdGhpcy4uIApOZWVkIHRvIHlvdSBpbnZlc3QgaW4gdGVjaG5vbG9neT8gU2hhcmVzIGZyb20gdGhpcyBidXNpbmVzcyBoYXZlIGVsZXZhdGVkIGJ5IDclLCB3aGljaCBjb3VsZCBiZSBjb25zaWRlcmFibHkgbXVjaCBsZXNzIHRoYW4gdGhlIG1hcmtldHBsYWNlIGF2ZXJhZ2UuIElmIHRoZSBpbnRlcm5hdGlvbmFsIGFuZCBuYXRpb25hbCBlY29ub215IGhhcyB0byBnZXQgdXAgb24gaXRzIGZlZXQsIHRoZSBzZWN0b3IgaXMgbmVlZGVkLCBhbmQgaXMgbW9zdCBsaWtlbHkgdG8gbGVhZCB0aGUgd2F5LiBUaGlzIG1ha2VzIGFjcXVpcmluZyBpbnRvIHRlY2hub2xvZ2llcyBzaGFyZXMgYSBwcm9taXNpbmcgbWV0aG9kIHdoZW4gaXQgY29tZXMgdG8gc3RvY2tzLgpJbiBvcmRlciB0byBnZXQgYSBnYW1ibGluZyBsaWNlbnNlIGJ5IGFnZW5jaWVzIHRoYXQgaGF2ZSBnb29kIHJlcHV0YXRpb24sIG9wZXJhdG9ycyBoYXZlIHRvIG1lZXQgY2VydGFpbiByZXF1aXJlbWVudHMuIApKZXN1cyBjaHJpc3QsIGluIHRpbWVzIGxpa2UgdGhpcyB0aGF0IHRoZSBnb3Zlcm5tZW50IHNob3VsZCBmdWNraW5nIGludGVydmVuZSwgdGhlc2UgYXJlIHRoZSB0eXBlIG9mIHRoaW5ncyB0aGF0IEFtZXJpY2FucyByZWFsbHkgbmVlZCBoZWxwIHdpdGggYW5kIHRoZXJlcyBub3doZXJlIGZvciB0aGVzZSBwYXJlbnRzIHRvIHR1cm4uIEhvdyB0aGUgaGVsbCBkbyB5b3UgZXhwZWN0IDIgcGFyZW50cyB0byBnbyBhZ2FpbnN0IGEgbXVsdGkgbWlsbGlvbiBjb21wYW55IHRoYXQgY2FuIGhpcmUgVEhFIEJFU1QgbGF3eWVycyBpbiB0aGUgd29ybGQuIEZ1Y2tpbmcgc2lja2VuaW5nLgpIZSBiYXNpY2FsbHkgdG9sZCBoZXIgdGhpcyBpcyBteSB3aWZlIGhvdXNlIHNvIGJ1dHQgb3V0IGFuZCBzdG9wIGNvbXBsYWluaW5nIGFib3V0IGhlci4gCllvdSBpbiB3YXkgb3ZlciB5b3VyIGhlYWQuIApXZSBmdWNrZWQgaW4gZml2ZSBwb3NpdGlvbnMgYW5kIHNoZSBnYXZlIGl0IGhlciBhbGwgaW4gZWFjaCBvbmUsIG5vdCB0aGUgbGVhc3QgYml0IHNoeSBvciBpbmhpYml0ZWQsIGFsbG93aW5nIGZvciB3b25kZXJmdWwgdmlld3MuIFNoZSBmdWNrZWQgcGFzc2lvbmF0ZWx5IGFuZCBraXNzZWQgYSBsb3QsIGFuZCBzb21ldGltZXMgd29ya2VkIGhlciBjbGl0IG9yIGhlciBicmVhc3RzLiAKSW4gb3RoZXIgd29yZHMsIHRob3NlIGNsZXZlciBmYXRjYXRzIGFjdHVhbGx5IGdhdmUgdGhlbXNlbHZlcyByYWlzZXMgd2hpbGUgdGhlIHJlc3Qgb2YgdXMgY291bGRuIGFmZm9yZCBhIGN1cCBvZiB0ZWEuIEkgc2F5IHN0YXJ0IGJvaWxpbmcgd2F0ZXIgdGlsbCB0aGUgZ292ZXJubWVudCBpbnNpc3RzIG9uIHJlZ3VsYXRpb24gb2YgYWxsIENFTyBzYWxhcmllcyBhbmQgYSB0cnVseSByZXZvbHV0aW9uYXJ5IHRlYSBwYXJ0eSBiZWdpbnMuCklmIHRoZXkgaG9uZXN0bHkgdGhpbmsgdGhhdCBob21vc2V4dWFsaXR5IGlzIGEgc2luIGFuZCB0aGV5IHNob3VsZCBub3QgY29uZG9uZSBpdCwgdGhlbiBnb2luZyBhZ2FpbnN0IHdoYXQgdGhleSBmZWVsIGlzIGEgbW9yYWwgcG9zaXRpb24gZm9yIHRoZSBzYWtlIG9mIGV4cGVkaWVuY3kgYW5kIHRvIGFwcGVhbCB0byBhIHlvdW5nZXIgZ2VuZXJhdGlvbiB3b3VsZCBiZSBhbiBpbW1vcmFsIGRlY2lzaW9uLCBmcm9tIHRoZWlyIHBvaW50IG9mIHZpZXcuLiAKRG8geW91IGJ5IGNoYW5jZSBwbGF5IGZvciBiaWdnZXIgbW9uZXkgYXQgeW91ciB3ZWVrZW5kIHBva2VyIHBhcnRpZXM/IERvIHlvdSBydW4gYW4gb3JnYW5pemF0aW9uIHRoYXQgaG9sZHMgZmVzdGl2YWxzIGFuZCBvdGhlciBzcGVjaWFsIGV2ZW50cyB3aGVyZSBwb2tlciBpcyBuZWVkZWQ/IFdoYXRldmVyIGl0IGlzIHlvdSBkbywgbG9va2luZyBhdCB0aGUgMjAwIDExLjVnIFBva2VyIENoaXAgSGlnaCBSb2xsZXIgU2V0IHdpdGggQ2xlYXIgQ292ZXIgQWx1bWludW0gQ2FzZSBjb3VsZCBiZSB3aGF0IHlvdSd2ZSBiZWVuIGxvb2tpbmcgZm9yIGFsbCBhbG9uZy4gV2UgaGFkIHNwZWNpYWwgY2lyY3Vtc3RhbmNlcywgd2hpY2ggbGVkIHVzIHRvIHB1cmNoYXNlIHNldmVyYWwgb2YgdGhlbS4uIApGYW5zIGNhbiByZXNlcnZlIGEgc2VhdCBieSBtYWtpbmcgYSAkNDAwIGRvbmF0aW9uIHRvIHRoZSBSZWQgV2luZ3MgRm91bmRhdGlvbi4gCkdldCB0byB0aGUgZW5kLCBNYXJ0aW4gd2FzIGFsc28gd2lsbGluZyB0byBkbyB3aGF0IG1hbnkgcGxheWVycyB3ZXJlbiBIZSB1c2VkIHBlcnNvbmFsIHJlbGF0aW9uc2hpcHMgYXMgbGV2ZXJhZ2UgYW5kIGhlIHdhc24gYWZyYWlkIHRvIGdldCBhIGxpdHRsZSBkaXJ0eS4gCkFsbCB0cnVtcCBoYXMgZG9uZSBpcyB3ZWFrZW4gdGhlIEFtZXJpY2FuIHBvc2l0aW9uLiAKRm9yIGluc3RhbmNlIHlvdSBjYW4gYmV0IHRoYXQgdGhlcmUnbGwgYmUgdHdvIHJlZCBjYXJkcyBpbiB0aGUgbmV4dCAyNSBtaW51dGVzIG9yIG1heWJlIHRoYXQgdGhlcmUnbGwgYmUgb25seSBvbmUgY29ybmVyIGluIHRoZSBsYXN0IDE1IG1pbnV0ZXMgb2YgdGhlIGdhbWUuIFRoZSBjb3JyZXNwb25kZW50IG9mIHRoaXMgd291bGQgcml2ZXQgcnVubmluZyB1cCBkb3duIGZyb20gdGhlIHN0YW5kcyB0aHJvd2luZyBjYXNoIGF0IHlvdXIgYm9va2llIGV2ZXJ5IGZldyBtaW51dGVzLiAKTm90IGEgbGF3eWVyLCBidXQgSSBndWVzc2luZyB0aGF0IGl0IGJlZW4gdGhpcyBsb25nIGFuZCB0aGV5IHN0aWxsIGhhdmVuIGZpZ3VyZWQgb3V0IHdoYXQgdG8gY2hhcmdlIGhpbSBwcm9iYWJseSBpc24gYSBnb29kIHNpZ24uIFRoZXkgbWlnaHQgZW5kIHVwIHJlYWNoaW5nIG9uIHRoZSBjaGFyZ2Ugd2hpY2ggd291bGQganVzdCBtYWtlIGl0IGVhc2llciBmb3IgaGltIHRvIGdldCBvZmYgdGhhbiBpZiB0aGV5IGp1c3Qgd2VudCBmb3IgZGlzb3JkZXJseSBjb25kdWN0Li4gCkhvd2V2ZXIsIGF0IGxvdyBsaW1pdHMgdXAgdG8gJDEvJDIgKGl0IGlzIG5vIHVzZSB0byB0cnlpbmcgaGlnaGVyIGZvciBhIGh1bnRlciBhbmQgdGhlIGJhbmsgZG9lcyBub3QgYWxsb3cgdG8gcmlzayBpbiB0aGlzIHdheSkgdGhlIGxldmVsIG9mIHRoZSBwbGF5ZXJzIGlzIG5vdCB0b28gaGlnaCwgdGhlcmVmb3JlIGFueWJvZHkgd2hvIHdpbGwgc3BlbmQgYSBjb3VwbGUgb2YgaG91cnMgb24gc3R1ZHlpbmcgdGhlIGNoYW5jZSBjb25jZXB0IGFuZCBiYXNpYyBwcmluY2lwbGVzIG9mIHRoZSBnYW1lIGFuZCBwcmludCB0aGUgdGFibGUgb2YgdGhlIHN0YXJ0IGhhbmRzLCBoYXMgZ29vZCBjaGFuY2UgdG8gYmVjb21lIGEgcGx1cyBwbGF5ZXIuIApSZW1pbmRzIG1lIG9mIGxlb255cyBNYXJ0aW4gYSBiaXQuSSB0ZWFtIHZvZ2V5IGFueXdheS4gSSBtZWFuIGFjdHVhbGx5IGkgdGVhbSBKYXkgInBsZWFzZSBwbGF5IGdvb2QgZW5vdWdoIGZvciBzb21lb25lIHRvIHRyYWRlIGZvciIgQnJ1Y2UgYXQgZmlyc3QgdGJoLiAKS2lhIE5lcm8gRVYgIk5vdCBzdXJlIGhvdyBtYW55IHdlIHdpbGwgZ2V0IHRoaXMgeWVhciAgIG1heWJlIDUwPyIuIApEbyBub3Qgc3VnZ2VzdCwgcHJvbW90ZSwgb3IgcGVyZm9ybSBwaXJhY3kuIFRoaXMgaW5jbHVkZXMgaWxsZWdhbGx5IGRpc3RyaWJ1dGVkIG9mZmljaWFsIG1hdGVyaWFsIChUU1IsIFdvdEMpLCByZXByb2R1Y3Rpb25zLCBkdWJpb3VzIFBERnMsIGFuZCB3ZWJzaXRlcyBvciBhcHBsaWNhdGlvbnMgd2hpY2ggdXNlIG9yIGRpc3RyaWJ1dGUgbm9uIFNSRCBydWxlcyBjb250ZW50LgpJJ20gYSBmdWNraW5nIGlkaW90IGJ1dCBJIGtub3cgbXkgbGltaXRzLCBJIGtub3cgd2hlbiBJIGNhbid0IGFkdmFuY2UsIHNvIEkgZm9jdXNlZCBvbiB0aGUgb25lIHRoaW5nIEkga25vdyBJIGNhbiBkbyB3ZWxsLCBhbmQgdGhhdCdzIGFydC4gCklmIHlvdSB3YW50IHRvIGFwcGVhbCBhIENCUCBkZWNpc2lvbiwgeW91IG5lZWQgZXZpZGVuY2UgdGhhdCB0aGV5IHdlcmUgd3JvbmcgYW5kIHRoZSBhcnRpY2xlIHdhcyBva2F5IHRvIGltcG9ydC4gClRha2UgeW91ciBsYXJnZSBzaGVldCBvZiBncmVlbiB2ZWx2ZXQsIHZlbHZldGVlbiBvciB2ZXJ5IGZpbmUgZmVsdC4gCklmIHdlIGFsbCBiZWNvbWUgY29tcGxldGVseSByZWFzb25hYmxlIGJlaW5ncywgdGhlcmUgd2lsbCBubyBsb25nZXIgYmUgZGVzaXJlIGJ1dCByZWFzb24gICBzb21ldGhpbmcgeW91IGNhbiBjYWxjdWxhdGUgd2l0aCBhIHRhYmxlLiBXZSB3aWxsIG5vIGxvbmdlciBiZSBodW1hbiBidXQgc29tZXRoaW5nIG1vcmUgbGlrZSBhIHBpYW5vIGtleS4gVG8gdGhlIGZ1cnRoZXN0IGV4dGVudCwgdGhlcmUgd2lsbCBiZSBubyBmcmVlIHdpbGwgaWYgd2Ugc3VibWl0IHRvIGNvbGQgcmF0aW9uYWxpc20uCkRvZXMgdGhhdCB0ZWxsIHVzIGFueXRoaW5nIGFib3V0IHdoYXQgdGhlIHJhbmdlIHNob3VsZCBiZSBmb3IgaGVhbHRoPyAoRm9yIG1vcmUgb24gdGhlIHByb2JsZW1zIHdpdGggc3RhbmRhcmQgbGFiIHJhbmdlcywgd2F0Y2ggdGhpcyBncmVhdCBwcmVzZW50YXRpb24gYnkgRHIuIEJyeWFuIFdhbHNoKQpHZXQgcmlnaHQgb24gaXQsIHRoZSBDYW51Y2tzIGdlbmVyYWwgbWFuYWdlciBzYWlkIEZyaWRheSBtb3JuaW5nLiAKWW91IGVpdGhlciBoYXZlIGEgZG9nIHRoYXQncyBhbiBBbWVyaWNhbiBQaXQgQnVsbCBUZXJyaWVyLCBvciB5b3UgZG9uJ3QuIFlvdSBlaXRoZXIgaGF2ZSBhbiBBbWVyaWNhbiBTdGFmZm9yc2hpcmUgVGVycmllciBvciBhIFN0YWZmb3Jkc2hpcmUgQnVsbCBUZXJyaWVyIG9yIHlvdSBkb24ndC4gWW91IGVpdGhlciBoYXZlIGEgUG9vZGxlIG9yIEJvcmRlciBDb2xsaWUgb3IgeW91IGRvbid0LiAKSW46IFdpbHNvbiwgTS4sIFdhbHNoLCBWLiBBbmQgUGFya2luLCBCLiAKQXQgdHJpYWwgaGUgdGFsa2VkIGFib3V0IGhvdyBtdWNoIHNoZSB3YXMgInJ1bm5pbmciIGhlcmUgYW5kIHRoZXJlLCBmb3IgQVQsIGFuZCB0aGF0IGhlIHRob3VnaHQgc2hlIHdhcyBvdmVyIGV4dGVuZGluZyBoZXJzZWxmIGFuZCB0b2xkIGhlciBzbywgYnV0IHRoYXQgInRoYXQgd2hhdCBzaGUgbGlrZWQiIChiZWluZyB2ZXJ5IGJ1c3kpLiAKQ2F0IFNhdmVzIEZsb3JpZGEgRmFtaWx5IEZyb20gQ2FyYm9uIE1vbm94aWRlIFBvaXNvbmluZ0EgQ2VudHJhbCBGbG9yaWRhIGNvdXBsZSBpcyBjcmVkaXRpbmcgQmVsbGEgZm9yIHNhdmluZyB0aGVpciBsaXZlcy4gQmVsbGEgaXMgbm90IHRoZWlyIGRhdWdodGVyIG9yIHRoZWlyIGRvZywgc2hlIGlzIHRoZWlyIGNhdC4KTXkgbW9tIGFsd2F5cyBzYWlkICJBIGhhcmQgaGVhZCBtYWtlcyBhIHNvZnQgYmVoaW5kLiIgVGhvc2UgcHBsIHdpbGwga2VlcCByZXBlYXRpbmcgdGhlIHNhbWUgbWlzdGFrZXMgYW5kIGhhdmUgdGhlIGx1bXBzIHRvIHNob3cgZm9yIGl0KSBTbyBpbiBhIHNlbnNlIHllcywgaXQncyBzaW1wbGVyIGJ1dCByYXJlbHkgZXZlciBlYXN5LiAKSSBzdGFuZCBteSBwb2ludCBmb3JldmVyIHRoYXQgZXJvZ2VzIG1ha2UgdGhlIGJlc3Qgb3RvbWVzLiBUaGV5IGFyZSB1c3VhbGx5IGxvbmcgc2luY2UgZWFjaCByb3V0ZSBtdXN0IGNvdmVyIGJvdGggZmlyc3QgdGhlIGxvdmUgc3RvcnkgYW5kIHRoZW4gdGhlICJnZW5lcmFsIiBzdG9yeSB3aGlsZSB0aGV5IGFyZSBhbHJlYWR5IGluIGFuIGludGltYXRlIHJlbGF0aW9uc2hpcCAod2VsbCwgaXQgZGVwZW5kcyBvZiB0aGUgZ2FtZSBidXQgdGhlIGdvb2Qgb25lcyBhcmUgdXN1YWxseSBsaWtlIHRoaXMpLiAKQWN0aXZpc2lvbiBldmVudHVhbGx5IHJ1aW5zIGV2ZXJ5dGhpbmcsIGJ1dCBpZiB5b3Ugc3RpbGwgYnV5aW5nIHRoZSBnYW1lcywgdGhlbiB0aGV5IHdpbGwgY29udGludWUgdG8gZXhwbG9pdCB0aGVzZSBwcmFjdGljZXMuIEV2ZW50dWFsbHkgZHJvdmUgVG9ueSBIYXdrIGludG8gdGhlIGdyb3VuZCwgdGhlbiBHdWl0YXIgSGVybywgRGVzdGlueSAobm90IHN1cmUgaWYgQWN0aXZpc2lvbiBvciBCdW5naWUpLCBhbmQgaW5ldml0YWJsZSBDYWxsIG9mIER1dHksIHVubGVzcyB0aGV5IGZpbmQgYSB3YXkgdG8gcGl2b3QgYW5kIGNvbXBldGUgbG9uZyB0ZXJtIGFnYWluc3QgdGhlIGZyZWUgdG8gcGxheSBCYXR0bGUgUm95YWxlIGdhbWVzLiBJIHBlcnNvbmFsbHkgZmVlbCBsaWtlIENhbGwgb2YgRHV0eSB3aWxsIGZpbmQgYSB3YXkgdG8gbWFrZSBCbGFja291dCBhIGZyZWUgdG8gcGxheSBnYW1lIHdpdGggbW9yZSBETEMgLyBCYXR0bGUgUGFzcyB0eXBlIHN0dWZmIGluIHRoZSBmdXR1cmUsIGJ1dCB0aGF0IGlzIGp1c3QgYSBndWVzcy4KWW91IG1pc2NhbGN1bGF0ZWQgYWJvdXQgdGhhdC4gCkJ1dCBJIGxpc3RlbiB0byB0aGVzZSB0ZWFjaGVycyBzY3JlYW0gYW5kIHB1bmlzaCB0aGVpciBzdHVkZW50cyBhbGwgZGF5IGxvbmcsIGFuZCB0aGVuIHRoZXkgZ28gYW5kIGRpc3BsYXkgdGhlIHNhbWUsIGlmIG5vdCB3b3JzZSwgYmVoYXZpb3JzIHdoZW4gdGhleSBoYXZlIHRvIHNpdCB0aHJvdWdoIGEgMzAgbWludXRlIHByZXNlbnRhdGlvbi4gCkJvdGggbWVuIHBvc3RlZCB0aGVpciBwZXJzb25hbHMgYWRzIG9uIHRoZSBvbmxpbmUgY2xhc3NpZmllZHMgc2l0ZSBDcmFpZ3NsaXN0LCB3aGljaCBjYXRlcnMgdG8gYWxtb3N0IDUwIGNpdGllcywgaW5jbHVkaW5nIExhcyBWZWdhcy4gCldoYXQgSSBsaWtlIG1vc3QgaW4gZ3V5cyBpcyB3aGVuIHRoZXkganVzdCBhY3QuIGNhc3VhbC4gSnVzdCBiZSB5b3Vyc2VsZi4gQ29tcGxpbWVudCBoZXIgd2hlbiB5b3UgdGhpbmsgYWJvdXQgaXQuIElmIHlvdSBzZWUgaGVyIHNtaWxlIGFuZCB0aGluayAiV293LCBzaGUgcmVhbGx5IHByZXR0eS4iIFRlbGwgaGVyICEgQnV0IGJlaW5nIHlvdXJzZWxmIGlzIHJlYWxseSB0aGUgbW9zdCBpbXBvcnRhbnQgcGFydCwgYmVjYXVzZSBzb21ldGltZXMgcGVvcGxlIGxpa2UgdG8gcHJldGVuZCB0aGV5IG5pY2VyL21vcmUgaW52ZXN0ZWQgdGhhbiB0aGV5IHJlYWxseSBhcmUgYW5kIGl0IGEgYnVtbWVyIHdoZW4geW91IHJlYWxpemUgdGhleSBub3Qgd2hhdCB0aGV5IHNlZW1lZC4KSWYgdGhhdCB3YXMgbXkgZ3JhbmRtYSBJIHBvdXIgZ2Fzb2xpbmUgb24geW91ciB0cmVlIHdoaWxlIHlvdSB3ZXJlIGF0IHdvcmsuClRoaXMga2luZCBvZiBwYXJ0eSB3aWxsIGJlIGEgaGl0IGVzcGVjaWFsbHkgb2YgeW91ciBndWVzdHMgZmVlbCBhcyB0aGV5IHdlcmUgYWN0dWFsbHkgYXMgaWYgdGhleSBhcmUgYWN0dWFsbHkgbGl2aW5nIHRocm91Z2ggdGhlIHJlYWwgZXZlbnQuIE1ha2Ugc3VyZSB0byBzZXJ2ZSB5b3VyIGd1ZXN0cyB3aXRoIHRoZSBmb29kIHVzdWFsbHkgZm91bmQgaW4gdGhlIGFjdHVhbCBmZWFzdHMuClNvIGJhc2ljYWxseSB0aGUgIklzIiBhbmQgImNoYW4va3VuIiBjYW4gZ2l2ZSB5b3UgYW4gaWRlYSBvbiBhIGdlbmRlciBidXQgaXQgbm90IDEwMCUgY29uY3JldGUgYXNzaWduZWQgdG8gb25lIGdlbmRlci4gSmFwYW4gcmVhbGx5IGRvZXNuIGNhcmUgYWJvdXQgYXNzaWduaW5nIGdlbmRlciBwcm9ub3Vucy4gCkRyLiBQaGlsIHVzZWQgdG8gdGVsbCBhd2Z1bCBwZW9wbGUgaGUgd2FzIHNlbmRpbmcgdGhlbSBob21lIHdpdGggYSBjb3B5IG9mIHRoZWlyIHNob3cgYW5kIGhlIHdhbnRlZCB0aGVtIHRvIHdhdGNoIGl0IG92ZXIgYW5kIG92ZXIgYW5kIG92ZXIgdW50aWwgdGhleSAiZ290IGl0Ii4KVGhpcyB3b3VsZCBlc3NlbnRpYWxseSBjcmVhdGUgNjArIEhPQXMgKEhvbWUgb3duZXIgYXNzb2NpYXRpb25zKS4iIlRoaXMgbWVhc3VyZSB3b3VsZCBlbnRpcmVseSBzdXBwbGFudCBvdXIgcmVwcmVzZW50YXRpdmUgZm9ybSBvZiBsb2NhbCBnb3Zlcm5tZW50LiBUaGUgZ29vZCBvZiB0aGUgY2l0eSBtdXN0IGJlIHBhcmFtb3VudCB0byB0aGUgaW50ZXJlc3RzIG9mIGVhY2ggbmVpZ2hib3Job29kLiIiUHVyZSBOSU1CWWlzbS4gQm91bGRlciBpcyBiZXR0ZXIgb2ZmIG1ha2luZyBkZWNpc2lvbnMgYXMgYSBjb21tdW5pdHksIG5vdCA2MCBvciA3MCBzcGVjaWFsIGludGVyZXN0IGdyb3Vwcy4iT24gdGhlIHF1ZXN0aW9uIG9mIG1lYXN1cmUgMzAxIGFuZCBjcmVhdGluZyBuZXcgZmVlcyBmb3IgZGV2ZWxvcG1lbnQsIGFsbW9zdCA0MCBwZXJjZW50IG9mIHJlc3BvbmRlbnRzIGFyZSBub3QgeWV0IGZhbWlsaWFyIGVub3VnaCB0byBtYWtlIHVwIHRoZWlyIG1pbmRzLiAKR2l2ZW4gdGhhdCB0aGUgYmFjaGVsb3IncyBkZWdyZWUgaXMgcmFwaWRseSBiZWNvbWluZyB0aGUgbWluaW11bSBlZHVjYXRpb25hbCByZXF1aXJlbWVudCBmb3IgZW1wbG95ZXJzIGluIGdlbmVyYWwsIHRoZSBtYXN0ZXIncyBpcyByZXBsYWNpbmcgdGhlIGJhY2hlbG9yJ3MgYXMgYSBiYXNpYyBlZHVjYXRpb25hbCByZXF1aXJlbWVudCBmb3IgYW55b25lIHdhbnRpbmcgdG8gbW92ZSBhaGVhZCBvZiB0aGUgcGFjay4gCkF0IHRoZSBlbmQgb2YgdGhlIG1lZXRpbmcsIGEgeW91bmcgc2hhcmVob2xkZXIgd2hvIHdhcyBmZXRpbmcgaGVyIDEydGggRGlzbmV5IG1lZXRpbmcgYXNrZWQgdGhlIG9uZSBxdWVzdGlvbiB0aGF0IG1hZGUgSWdlciBzcXVpcm0uCklJUkMsIFdhc2hpbmd0b24gd2FzIDYgaW4gdGhlIGRyYWZ0IGJlZm9yZSB0aGV5IHRyYWRlZCB1cCBmb3IgUkczLiBZZXMsIGhlIHdhcyBwcmV0dHkgZGFtbiBnb29kIGluIGhpcyBmaXJzdCB5ZWFyIG9yIHR3bywgYnV0IHRoZW4gaGUgZ290IGluanVyZWQgYW5kIDYgeWVhcnMgYWZ0ZXIgYmVpbmcgZHJhZnRlZCBoZSBhIEZBIGFmdGVyIHRoZSBCcm93bnMgY3V0IGhpbS4gSSBrbm93IHRoaXMga2luZCBvZiB0aGluZyBpc24gZm9yZXNlZWFibGUgYnV0IGl0IGNhbiBoYXBwZW4sIGFuZCBpZiBpdCBkb2VzIHlvdSBsb3NlIG91dCBiaWcgdGltZSBieSBnaXZpbmcgdXAgNSBwaWNrcyBmb3IgYSBndXkgd2hvIHVucGxheWFibGUgNSB5ZWFycyBsYXRlci4uIApJbiBhbnkgZXZlbnQsIEkgc2F2ZSBhIGxvbmdlciBwb3N0IG9uIHRoaXMgc3ViamVjdCBmb3IgbGF0ZXIgZm9yIHJpZ2h0IG5vdyBJIGdvaW5nIHRvIHNoYXJlIHRoZSBlbnRpcmUgYXJ0aWNsZSBmcm9tIHRoZSBKRkk6CldhcmRlbiBDYWluIGhhcyBnb29kIHJlYXNvbiB0byBiZSBhZnJhaWQgICBzb21lIG9mIHRoZSBldmVudHMsIHN1Y2ggYXMgY29udmljdCBwb2tlciwgYXJlIG5vdGhpbmcgc2hvcnQgb2YgZGFuZ2Vyb3VzLiBJbm1hdGVzIHNpdCBhcm91bmQgYSBzbWFsbCBwbGFzdGljIHRhYmxlIGluIHRoZSByb2RlbyByaW5nIHdoZW4gYW4gZW5yYWdlZCBidWxsIGlzIHJlbGVhc2VkLiBUaGUgYnVsbCBjaGFyZ2VzIHN0cmFpZ2h0IHRvd2FyZHMgdGhlIGZvdXIgcHJpc29uZXJzIGFuZCB0aGUgbGFzdCBtYW4gc2l0dGluZyB3aW5zICQyNTAuIEl0IGlzIGEgZ2FtZSBvZiByYXcgbmVydmVzLiBJbmp1cmllcyBhcmUgY29tbW9uLCBkZXNwaXRlIHRoZSBmYWN0IHRoYXQgdGhlIG1lbiB3ZWFyIGhlbG1ldHMgYW5kIHNhZmV0eSB2ZXN0cy4KTm93IGFsbCBvZiBhIHN1ZGRlbiBoZSB3YW50cyBtb3JlIHRpbWUsIHdoZW4gaGUgaXMgbm93IHJlc3BvbnNpYmxlIGZvciAyIG1vcmUgcGVvcGxlLiAodGhlIGdpcmxmcmllbmQgYW5kIGhlciBzb24pLiAKTWVhbndoaWxlLCBVbml0ZWQgQWlybGluZXMgaXMgY2lyY2xpbmcgdGhlIHdhZ29ucyBhcyBjb25zdW1lciBvdXRyYWdlIGZ1ZWxsZWQgYnkgc29jaWFsIG1lZGlhIGlzIHNob3dpbmcgbm8gc2lnbnMgb2YgbGV0dGluZyB1cC4KU2FtIGRvZXNuIGxvb2sgcmlnaHQuIApUaGlzIGdvZXMgaGFuZCBpbiBoYW5kIHdpdGggVGlwIDE6IGF2b2lkaW5nIHRoZSAidGhpcyBpcyB0aGUgT05MWSBob3VzZSBFVkVSIiBleHRyZW1lLiAKTXVtIGRheSBhZnRlcm5vb24gd2l0aCBMYWN5LCBCbGFpamsgLGFuZCBubkEgTGVnb3JlLCB0d25leSBXYXJyZW4gJ0dyYWhhbS4gRi4gSW1pbHYgaU5FV1NQQUZFUnIuIApBIFRoYW5rc2dpdmluZyB0cmFkaXRpb24gZnJvbSBHZW9yZ2UgV2FzaGluZ3RvbiB0byBUcnVtcApZb3UgaGF2ZSB0byB1bmRlcnN0YW5kIGV2ZXJ5b25lIGhhcyBncmFkdWF0ZWQgYW5kIHdlIGFsbCBsZWFkIG91ciBvd24gbGl2ZXMgbm93LCBidXQgdHdvIHRpbWVzIGEgbW9udGggd2UgZ2V0IHRvIHJlbWluaXNjZSBhYm91dCB0aGUgZ29vZCBvbGQgZGF5cy4gSXQgaXMgZnVubnkgdGhvdWdoLCBubyBvbmUgaGFzIHRvIHRha2UgYW55dGhpbmcgdG8gYW55b25lIGVsc2UncyBob3VzZSBiZWNhdXNlIHdlIGFsbCBvd24gYSBNZXRhbCAxMCBSb3cgQ2FzaW5vIFRhYmxlIENoaXAgVHJheSB3aXRoIENvdmVyIGFuZCBMb2NrLiBUaGUgb25seSB0aGluZyB3ZSBoYXZlIHRvIGJyaW5nIGlzIG91cnNlbHZlcyBhbmQgYSBsaXR0bGUgYml0IG9mIG1vbmV5Li4gCkZlbWFsZXMsIGdldCB5b3VyIGV2ZXJ5dGhpbmcgdGVzdGVkLiAKV2hhdCBhcmUgeW91IGxvb2tpbmcgZm9yIGluIGEgY2xhbjogbG9va2luZyBmb3IgYSBmdW4gUFZFIGNsYW4sIGlkZWFsbHkgd2l0aCBtZW1iZXJzIHRoYXQgYXJlIHN0aWxsIGludGVyZXN0ZWQgaW4gZG9pbmcgb2xkZXIgY29udGVudCBhcyB3ZWxsIGFzIGVuZGdhbWUgc3R1ZmYgKEkgd2FudCB0byBjaGVjayBvdXQgdGhlIGNvbnRlbnQgZnJvbSB0aGUgb3RoZXIgZXhwYW5zaW9ucyB0b28pIEkgaGF2ZSBhIG1pYywgbXkgc3Bva2VuIGVuZ2xpc2ggaXMgZ3JlYXQgLCBtYWtpbmcgZnJpZW5kcyBpcyBhIGRlZmluaXRlIHBsdXMuClRoYXQsIGFuZCBteSBtb20gZGlkbiBoYXZlIHRoZSBwYXRpZW5jZSBvciBlbW90aW9uYWwgbWF0dXJpdHkgdG8gdGVhY2ggbWUgaG93IHRvIGNvb2sgYXQgdGhlIHRpbWUuLiAKQW1hdGV1ciBzb3V0aHBhdyBoZXJlLCBteSBjb2FjaCBoYXMgYmVlbiByaWRpbmcgbXkgYXNzIHJlY2VudGx5IGZvciBpdCBteXNlbGYsIGlkayBpZiBpdCBhIHNvdXRocGF3IHRlbmRhbmN5IG9yIGlmIEkganVzdCBoYXZlIHRoZSBzYW1lIGlzc3VlLCBidXQgaGF2aW5nIGEgc3Ryb25nIGd1YXJkIHRlbmRzIHRvIGNhdXNlIHlvdSB0byBqdXN0IG1vdmUgaW4gb24geW91ciBvcHBvbmVudCB3aXRob3V0IG1vdmluZyB0b28gbXVjaCBvZmYgdG8gdGhlIHNpZGVzLiBTdHJhaWdodCBsaW5pbmcgZm9yIHRoZWlyIG5vc2UgaXMgd2hhdCBoZSBzYXlzIGxvbC4KTmFkaWEgTXVyYWQgZ3JldyB1cCBkcmVhbWluZyBvZiBvd25pbmcgYSBiZWF1dHkgc2Fsb24uIFRoZSB5b3VuZ2VzdCBvZiAxMSBjaGlsZHJlbiBpbiBhIFlhemlkaSBmYW1pbHkgaW4gbm9ydGh3ZXN0IElyYXEsIHNoZSB0b29rIHBob3RvZ3JhcGhzIG9mIGFsbCB0aGUgYnJpZGVzIGluIGhlciB0aW55IHZpbGxhZ2UsIHN0dWR5aW5nIHRoZWlyIG1ha2V1cCBhbmQgaGFpci4gSGVyIGZhdm9yaXRlIHdhcyBvZiBhIGJydW5ldHRlIHdvbWFuIHdpdGggY3VybHMgcGlsZWQgaGlnaCBhdG9wIGhlciBoZWFkLgpBcyBwYXJ0IG9mIGEgbGVnYWwgYmF0dGxlIGJldHdlZW4gdGhlIEFtZXJpY2FuIEFjdGlvbiBOZXR3b3JrIGFuZCBlbnRlcnRhaW5tZW50IHZlbmRvciBDYXRlciBBbWVyaWNhIG92ZXIgYSBzY3JhcHBlZCBMeW55cmQgU2t5bnlyZCBjb25jZXJ0LCB3aGljaCB3YXMgYXhlZCBhaGVhZCBvZiB0aGUgUk5DIGR1ZSB0byB0aGUgdGhyZWF0IG9mIEh1cnJpY2FuZSBJc2FhYyBpbiBsYXRlIEF1Z3VzdC4uIApPbiBNb25kYXkgUnVzbGFuIENoYWdhZXYgYW5kIEZyYW5jZXNjbyBQaWFuZXRhLCB0aGVpciByZXNwZWN0aXZlIHRyYWluZXJzIFBlZHJvIERpYXogYW5kIERpcmsgRHplbXNraSBhcyB3ZWxsIGFzIHByb21vdGVyIFRpbXVyIER1Z2F6YWV2IGFuZCBjbyBwcm9tb3RlciBVbGYgU3RlaW5mb3J0aCBtZXQgZm9yIGEgcHJlc3MgY29uZmVyZW5jZSBhdCBDYXNpbm8gRXNwbGFuYWRlIGluIEhhbWJ1cmcsIEdlcm1hbnkuIApCdXQgSSBkb24gdGhpbmsganVzdCBiZWNhdXNlIHNvbWUgcGVvcGxlIGhhdmUgdGhlaXIgbWVudGFsIGlsbG5lc3MgImN1cmVkIiwgdGhhdCB0aGV5IHNob3VsZCBpbXBseSBvdGhlcnMgY2FuIGRvIHRoZSBzYW1lLiBFdmVyeW9uZSBkaWZmZXJlbnQgYW5kIGl0IG5ldmVyIHN0cmFpZ2h0IGZvcndhcmQuIEkgbG92ZSB0byBiZSBjdXJlZCwgbXkgaXNzdWVzIG1ha2UgZGFpbHkgdGFza3Mgc3VwZXIgaGFyZCwgYnV0IEkgdHJpZWQgYSBsb3Qgb2YgdGhpbmdzIGFuZCBJIHN0aWxsIG1lbnRhbGx5IGlsbC4gCkhpcyBwcm9mZXNzaW9uYWwgY2FyZWVyIGluIFN5cmFjdXNlIGluY2x1ZGVkIHNpeCB5ZWFycyBwcmFjdGljaW5nIGxhdyBhdCBIaXNjb2NrIEJhcmNsYXksIExMUDsgc2VydmluZyBhcyBsZWdhbCBjb3Vuc2VsIGZvciBUaGUgUHlyYW1pZCBDb21wYW5pZXMsIGEgbWFqb3Igc2hvcHBpbmcgY2VudGVyIGRldmVsb3BlcjsgYW5kIGFjdGluZyBhcyBhIHBhcnRuZXIgaW4gdGhlIGxhdyBmaXJtIG9mIEhhbmNvY2sgRXN0YWJyb29rLCBhcyB3ZWxsIGFzIGluIGhpcyBvd24gcmVhbCBlc3RhdGUgc3BlY2lhbHR5IGxhdyBmaXJtLCBWYW4gRXBwcyBTaHVsbWFuLiAKIldlIHVuZGVyc3RhbmQgdGhhdCBvdXIgcm9sZSBhcyBhIHNlbmlvciBzdG9jayBleGNoYW5nZSBpcyB0byBwYXJ0bmVyIHdpdGggcHVibGljIGNvbXBhbmllcyBhbmQgZnVuZCBwcm92aWRlcnMgYXMgdGhleSBhY2hpZXZlIGdyZWF0IHRoaW5ncywgd2hpY2ggaXMgd2h5IHdlIGFyZSBwcm91ZCB0byBzdXBwb3J0IGdlbmRlciBmb2N1c2VkIGludmVzdG1lbnQgcHJvZHVjdHMgb24gb3VyIGV4Y2hhbmdlIGFuZCBlbmNvdXJhZ2UgTkVPIGxpc3RlZCBjb21wYW5pZXMgdG8gZW1icmFjZSBkaXZlcnNpdHkgYXQgdGhlaXIgYm9hcmQgYW5kIGV4ZWN1dGl2ZSBsZXZlbHMuIi4gCkFueXdheXMsIG15IG9sZGVyIGJyb3RoZXIgYW5kIGhpbSB3ZW50IG91dCBmb3IgZHJpbmtzIGxhc3QgbmlnaHQgYW5kIHN0YXJ0ZWQgdGFsa2luZyBhYm91dCB0aGUgbWFpbiBldmVudCwgdGhlIGhvdGVsIGhlIHdhcyBnb2luZyB0byBib29rLiBmbGlnaHRzLCBldGMuIE1pZHdheSBkdXJpbmcgdGhlIGNvbnZlcnNhdGlvbiBteSBicm90aGVyIGZyaWVuZCBzdGF0ZXMgdGhhdCBoZSB3aWxsIGFsc28gYmUgZG9zaW5nIG9uIExTRCBhYm91dCA0NSBtaW51dGVzIGJlZm9yZSBwbGF5aW5nLiBJIHRoaW5rIGhlIGlzIHBsYXlpbmcgRGF5IDFCLgpJdCBpcyBhbG1vc3QgZG91YmxlIHByaWNlIGNvbXBhcmUgdG8gVVMgYW5kIEVVLiAKVGhlcmUgYXJlIG11bHRpcGxlIGNhZmVzIHdpdGhpbiA1IChoZWxsLCB3aXRoaW4gMikgbWludXRlcyBvZiBteSBjdXJyZW50IHN0dWRpbyBpZiBJIGFscmlnaHQgd2l0aCB2aWV0bmFtZXNlIGNvZmZlZSAoY3VycmVudGx5IGluIEhhbm9pKS4gCkEgVmVyc2VzIDMgdG8gNiBsaXN0cyB0aGUgZ2VvZ3JhcGhpYyBkZXNjcmlwdGlvbiBvZiBuYXRpb25zIHRoYXQgd2lsbCBzdXJyb3VuZCBJc3JhZWwgaW4gdGhlIExhc3QgRGF5cy4gQXJlIHlvdSB3aXRuZXNzaW5nIHRoZW0gc3RhbmQgYWdhaW5zdCBJc3JhZWwgdG9kYXk/IElmIHlvdSBhcmUsIHRoZW4gdGhlIExvcmQgR29kIEFsbWlnaHR5IHdobyBrbm93cyB0aGUgZW5kIGZyb20gdGhlIGJlZ2lubmluZyB3aWxsIGtlZXAgSGlzIHByb21pc2VzLiBMZXQgY29udGludWUgdG8gcmVhZCB0aGUgbWVzc2FnZSBvZiBHb2QuLiAKQnkgdGhlIHRpbWUgd2UgbGVmdCB0aGVyZSB3YXMgdGhpcyBicmFpbnN0b3JtaW5nIHNlc3Npb24gdGhhdCBoYWQgZXZlcnlvbmUgd2FudGluZyB0byBnZXQgaW4gb24gdGhlIG1hZG5lc3MuIApXaGlsZSB5b3UncmUgYXQgaXQsIHlvdSBjYW4gbWFrZSB5b3VyIGhvbWUgc21lbGwgYmV0dGVyLiBGZWVsaW5nIGxpa2UgbW9yZSBsYXZlbmRlciBhbmQgbGVzcyBqYXNtaW5lPyBPciB3YW50IHlvdXIgaG9saWRheSBwYXJ0eSB0byBzbWVsbCBsaWtlIGEgYmxlbmQgb2YgQ2hyaXN0bWFzIHRyZWUsIGZpcmVwbGFjZSBhbmQgY29va2llcz8gVGhlIE1vb2RvICJzbWFydCBob21lIGZyYWdyYW5jZSBkaWZmdXNlcnMiIG1hZGUgYnkgSXNyYWVsaSBmcmFncmFuY2UgY29tcGFueSBBZ2FuIEFyb21hIGVuYWJsZSB1c2VycyB0byBhZGp1c3QgYmxlbmRzIGZyb20gdGhlaXIgc21hcnRwaG9uZXMuIApMZXQgZmFjZSBpdC4gVGhlIFVTIGxvc2VzIGluIG1vc3QgY29tcGV0aXRpb25zIHdpdGggSW5kaWEgYXQgdGhpcyBwb2ludC4gU3VyZSB0aGUgVVMgaGFzIHRoZSBiaWdnZXN0IG1pbGl0YXJ5IGV2ZXIgYXNzZW1ibGVkLCBidXQgd2Uga2luZGEgc3VjayBhdCB0aGUgd2hvbGUgbWF0aCBhbmQgc2NpZW5jZSBlZHVjYXRpb24gdGhpbmcsIHdlIGRvbiByZWFsbHkgcHJvZHVjZSBtdWNoIHdvcnRoIGJ1eWluZyAoYWx0aG91Z2ggd2UgYXJlIG51bWJlciBvbmUgYXQgY29uc3VtcHRpb24pIGFuZCBldmVuIEhvbGx5d29vZCBpcyBpbmNyZWFzaW5nbHkgbG9zaW5nIG91dCB0byBCb2xseXdvb2QgZm9yIHB1cmUgZW50ZXJ0YWlubWVudCB2YWx1ZSwgc2V0IGRlc2lnbnMsIG11c2ljLCBhbmQgZXZlbiBoaXBuZXNzLgpFZGl0ICAgTE1BTyBzb21lIGd1eSBzaG92ZXMgUVEgaW50byBhbiBBS3ggYm9hcmQuIEFzIGlmIGhlIGV2ZXIgZ29vZCB0aGVyZS4gQW5kIEkgdGhvdWdodCBJIHdhcyB0aGUgb25lIGRyaW5raW5nLiBVbmZvcnR1bmF0ZWx5IEkgZGlkbiBjb3ZlciBoaW0sIGJ1dCBJIGRpZCBkb3VibGUgdXAgYW5kIHRoZW4gc29tZS4KU2Vjb25kbHksIHRoZSBwYWNpZmllcnMgYXJlIGdpZnRlZCBzbyB0aGUgZnV0dXJlIGJhbGxlcmluYXMsIHlvdSBjYWxsIHlvdXIgYm91bmNlcnMgY2FuIGFsbCBzbGVlcCB0b2dldGhlciBob2xkaW5nIGhhbmRzIGFuZCBzdWNrIG9uIHRoZW0gYXQgbmlnaHQgbWFraW5nIHRoZW0gZ28gdG8gc2xlZXAgYmV0dGVyIGF0IG5pZ2h0LiBUaGlyZGx5LCB0aGUgYmFsbGVyaW5hIGRyZXNzZXMgYXJlIGdpZnRlZCBzbyB5b3UgY2FuIGhhbmQgaXQgb3V0IHRvIHRoZSBib3VuY2VycywgYW5kIHRoZXkgY2FuIHdlYXIgaXQgZXZlcnkgbmlnaHQgYXQgdGhlaXIgam9icy4gClRoZSAidmFsdWUiIGRlYmF0ZSB3YXMgcmVpbnZpZ29yYXRlZCBieSB0aGUgZmFtb3VzIEZhbWEgYW5kIEZyZW5jaCAxOTkyIHBhcGVyLCAiVGhlIENyb3NzIFNlY3Rpb24gb2YgRXhwZWN0ZWQgU3RvY2sgUmV0dXJucy4iIFRoZSBwYXBlciBzcGFya2VkIGEgZGViYXRlIG92ZXIgd2hldGhlciBvciBub3QgdGhlIHNvIGNhbGxlZCAidmFsdWUgcHJlbWl1bSwiIG9yIHRoZSBsYXJnZSBzcHJlYWQgaW4gaGlzdG9yaWNhbCByZXR1cm5zIGJldHdlZW4gY2hlYXAgc3RvY2tzIGFuZCBleHBlbnNpdmUgc3RvY2tzLCB3YXMgZHVlIHRvIGV4dHJhIHJpc2sgb3IgdG8gbWlzcHJpY2luZy4gCkNhc2lub3MgTmVhciB0aGUgQWlycG9ydCBpbiBCaWxveGkKWW91J3JlIGdvaW5nIHRvIGxpa2UgdGhpcyEnIGhlIHNhaWQuJ0V4YWN0bHkgb25lIGNlbnR1cnkgYWZ0ZXIgdGhlIENvbmdyZXNzIHBhc3NlZCB0aGUgQ29uc3RpdHV0aW9uYWwgYW1lbmRtZW50IGdpdmluZyB3b21lbiB0aGUgcmlnaHQgdG8gdm90ZSwgd2UgYWxzbyBoYXZlIG1vcmUgd29tZW4gc2VydmluZyBpbiB0aGUgQ29uZ3Jlc3MgdGhhbiBldmVyIGJlZm9yZS4nU2hvdXRzIG9mICdVU0EhIFVTQSEnIHJhbmcgb3V0IGZyb20gYm90aCBzaWRlcyBvZiB0aGUgY2hhbWJlci5QZWxvc2kgdG9sZCByZXBvcnRlcnMgaW4gdGhlIENhcGl0b2wgYWZ0ZXJ3YXJkIHRoYXQgc2hlIGVuam95ZWQgdGhhdCBwYXJ0IG9mIHRoZSBldmVuaW5nLidJIGxpa2VkIHdoZW4gaGUgYWNrbm93bGVkZ2VkIHdoZW4gaXQgd2FzIHRoZSBsYXJnZXN0IG51bWJlciBvZiB3b21lbiwnIHNoZSBzYWlkIG9mIGhpcyBzcGVlY2guVGhlIG5pZ2h0IHN0YXJ0ZWQgb2ZmIG9uIHRoZSB3cm9uZyBmb290IHdoZW4gUHJlc2lkZW50IFRydW1wZ2F2ZSBQZWxvc2ksIGhpcyBvZmZpY2lhbCBob3N0IGZvciB0aGUgYW5udWFsIHNwZWVjaCwgdGhlIGNvbGQgc2hvdWxkZXIuSGUgc2hvb2sgaGVyIGhhbmQgd2hlbiBoZSBhcnJpdmVkIGF0IHRoZSBkYWlzIG9uIHRoZSBmbG9vciBvZiB0aGUgSG91c2UgYW5kIGhhbmRlZCBoZXIgYSBjb3B5IG9mIHRoZSBzcGVlY2guVGhlIHByZXNpZGVudCBhbmQgUGVsb3NpIHNob29rIGhhbmRzIGF0IHRoZSBiZWdpbm5pbmcgb2YgdGhlIG5pZ2h0QnV0IGl0J3MgdHJhZGl0aW9uYWwgZm9yIHRoZSBzcGVha2VyIHRvIGludHJvZHVjZSB0aGUgcHJlc2lkZW50IGJlZm9yZSBhbiBhZGRyZXNzIHRvIGEgSm9pbnQgU2Vzc2lvbiBvZiBDb25ncmVzcy4gCkFtZXJpY2FuIGZpbmFuY2lhbCBzdXBwb3J0IGlzIGFib3V0IG1haW50YWluaW5nIHRoZSBzdGF0dXMgcXVvLiBXaGljaCBpcyB3aHkgaXQgaXMgYSBsaXR0bGUgbW9yZSB0aGFuIHBlcnBsZXhpbmcgdG8gd2F0Y2ggSGlsbGFyeSBDbGludG9uIHNlcm1vbmlzaW5nIHRoZSB2ZXJ5IHBlb3BsZSBzaGUgZW5hYmxlcyBpbiB0aGUgUGFraXN0YW5pIHN0YXR1cyBxdW8sIGFib3V0IGZpc2NhbCByZWZvcm0uIApBc2toaXN0b3JpYW5zIHRpdGxlCkFuYWx5c3RzIGFuZCBnb3Zlcm5tZW50IG9mZmljaWFscyBjYWxsZWQgdGhlIGRlbGF5IGFuZCBhIG9uIE1vbmRheSBhbmQgc2FpZCB0aGUgc2V2ZXJpdHkgb2YgdGhpcyBkZWxheSBpcyBjb21wb3VuZGVkIGJ5IHRoZSBmYWN0IHRoYXQgdGhlIHR3byBvdGhlciBhY3RpdmUgcGlwZWxpbmUgcHJvcG9zYWxzIG91dCBvZiBXZXN0ZXJuIENhbmFkYSBLZXlzdG9uZSBYTCBhbmQgVHJhbnMgTW91bnRhaW4gaGF2ZSBhbHNvIGJlZW4gZGVsYXllZC4gClRoYXQgd2FzIG1vcmUgbW9uZXkgdGhhbiBJIGhhZCBtYWRlIGluIGFuIGVudGlyZSBzdW1tZXIgaW50ZXJuc2hpcCB0aGUgeWVhciBiZWZvcmUuIEhlciBwdXJzZSB3b3VsZCBoYXZlIGJlZW4gd29ydGggbW9yZSB0aGFuIG15IGNhci4KRmF0YmF3bCAgMTUgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkNoZXN0IGFuZCBTdG9tYWNoIE9wZW4gYm9vayBvbiB0aGUgYmFieSdzIGNoZXN0LCBzcHJlYWRpbmcgb3V0IGFyb3VuZCB0aGUgYmFieSdzIHJpYmNhZ2UgYW5kIHVuZGVyIHRoZSBhcm1zIE9wZW4gYm9vayBhZ2FpbiBvbiB0aGUgYmFieSdzIGNoZXN0LCBidXQgdGhpcyB0aW1lIGdvaW5nIHVwIHRvIHRoZSBjb2xsYXIgYm9uZSwgc2hvdWxkZXJzIGFuZCB0b3BzIG9mIGFybXMgU3Ryb2tpbmcgbmVjayAgIHBsYWNlIHlvdXIgaGFuZCBvbiB0aGUgY2VudHJlIG9mIHlvdXIgYmFieSdzIGNoZXN0LCBkaWFnb25hbGx5IHNvIHRoYXQgeW91ciBmaW5nZXIgdGlwcyBwb2ludCB0byBvbmUgc2hvdWxkZXIuIFB1c2ggeW91ciBoYW5kIHVwIGFuZCBvdmVyIHRoZSBzaG91bGRlciBzbyB0aGF0IHlvdXIgZmluZ2VycyBnbyB1bmRlciB0aGUgY2hpbiBhbmQgaW50byB0aGUgY3JlYXNlIGFnYWluc3QgeW91ciBiYWJ5J3MgbmVjay4gClRoZSBpbWFnZSBvZiBhIEZyZW5jaCBwb2xpY2Ugb2ZmaWNlciBjaGFzaW5nIGFmdGVyIGEgd29tYW4gaW4gYSBidXJxYSBhbmQgYXJyaXZpbmcgaW4gYSBwcml2YXRlIHNwYWNlLCBhIGtpdGNoZW4gcGVyaGFwcywgZmlsbGVkIHdpdGggd29tZW4gaW4gYnVycWFzIGlzIHBhcnQgSW5zcGVjdG9yIENsb3VzZWF1IGFuZCBwYXJ0IE9yd2VsbGlhbiBmYXNoaW9uIHBvbGljZS4KU3VydG91dCBzaSBvbiBuZSBmYWl0IHBhcyBncmFuZCBjaG9zZSBwb3VyIG0nYWlkZXIgIGRjb3V2cmlyIGRlcyBjaG9zZXMgaW50cmVzc2FudGVzIHF1YW5kIGplIGxlcyBpZ25vcmUuRG9uYyBTZXJnZSBSYWRlciBlc3QgdW4gcGhhcm1hY2llbiBxdWkgYSBkaiBmYWl0IHBhcmxlciBkZSBsdWkgZXQgcXVpIGEgZXUgYWNjcyBhdXggbWRpYXMuIApUaGUgcG9rZXIgcm9vbSBoZXJlIGhhcyBwbGVudHkgb2Ygc3BhY2UsIGhhcyBhIGxvdCBvZiBwb2tlciB0b3VybmFtZW50cyBhbmQgdGhlIGRlYWxlcnMgYW5kIHN0YWZmIGFyZSBleGNlbGxlbnQuIFRoZSBCZWxsYWdpbyBpcyB0aGUgbmV4dCBvbmUgb24gdGhlIGxpc3QuIFlvdSBjYW4gZmluZCBkaWZmZXJlbnQgcG9rZXIgc3RhcnMgcGxheWluZyBpbiB0aGUgYmFjayByb29tLiAKSW50IGhlIHdvcmxkIG9mIGNyb3NzIHNlY3Rpb25zIHRoaXMgaXMgYSBnb29kIG9uZSwgYW5kIGFsc28gcHJldHR5IHVudXN1YWwuIEFsc28gaW4gdGhlIHRvcCBsZWZ0IGNvcm5lciB3ZSBzZWUgYSBwaG90byBvZiBhIGNhaXNzb24gdW5kZXIgY29uc3RydWN0aW9uIGEgc2hvdCBJIGRvbiBzZWUgdmVyeSBvZnRlbiBpbiBteSBzZWFyY2hlcyBvZiBvbGQgc3R1ZmYuLiAKVGhlIGZpcnN0IG9uZSB3ZW50IG92ZXIgeWVzdGVyZGF5LCBidXQgaGVsZCBvZmYgdW50aWwgaXQgcmVhY2hlZCB0aGUgbW91bnRhaW5zLiAKQXMgd2UgYWxsIGtub3csIHNwaW5uaW5nIGlzIGEgZ29vZCB0cmljay4gClNlZW1zIHRoYXQgd2hlbiB0aGUgcmF0cyBhcmUgZXhwb3NlZCB0byBnYXN0cmljIGlycml0YXRpb24gYXQgdGhlIGFwcHJvcHJpYXRlIHBvaW50IGluIHRpbWUsIHNhaWQgUGFzcmljaGEsIGlzIHNpZ25hbGluZyBhY3Jvc3MgdGhlIGd1dCB0byB0aGUgYnJhaW4gdGhhdCBwZXJtYW5lbnRseSBhbHRlcnMgaXRzIGZ1bmN0aW9uLiBSZXNlYXJjaGVycyBhcmUgbm93IHBsYW5uaW5nIHRvIGludmVzdGlnYXRlIGV4YWN0bHkgaG93IHRoYXQgc2lnbmFsaW5nIGlzIGluaXRpYXRlZCBhbmQgYWN0cyBpbiB0aGUgYnJhaW4sIGFuZCB3aGV0aGVyIGl0IG1pZ2h0IGJlIHBvc3NpYmxlIHRvIGRldmVsb3AgbmV3IHdheXMgdG8gdHJlYXQgZGVwcmVzc2lvbiBhbmQgYW54aWV0eSBpbiBodW1hbnMuLiAKQXQgdGhhdCB0aW1lLCBBR0xDIGhlYWQgQmlsbCBSb2JpbnNvbiBpbnNpc3RlZCB0aGUgbW92ZSB0b3dhcmQgb25saW5lIGdhbWluZyBoYWQgbm90aGluZyB0byBkbyB3aXRoIHRoZSBmYWxsaW5nIHByaWNlIG9mIGh5ZHJvY2FyYm9ucy4KSXQgZG9lc24gbmVjZXNzYXJpbHkgaGF2ZSB0byBkbyB3aXRoIHRoZSBpbnRlbGxlY3Qgb2YgdGhlIHBvcHVsYXRpb24sIGl0IGhhcyB0byBkbyB3aXRoIHRoZSBpbmZyYXN0cnVjdHVyZSBhbmQgZWNvbm9taWNhbCBiZW5lZml0cyB0aGF0IGNvbWVzIHdpdGggdGhvc2UgdW5pdmVyc2l0aWVzLiAKVGhhdCBnaXJsIG1heSBiZSBiYXR0aW5nIGhlciBleWVsYXNoZXMgYXQgZGlubmVyIGJ1dCB5b3UgdGhlIG9uZSBibG93aW5nIGhpcyBtaW5kIGluIHRoZSBiZWRyb29tIHRvbmlnaHQgYW5kIHJlbWluZGluZyBoaW0gdGhhdCBubyBtYXR0ZXIgaG93IGN1dGUgc2hlIHRoaW5rcyBzaGUgaXMsIHNoZSBtb3N0IGNlcnRhaW5seSBjYW4gZG8gdGhhdC5Bbm90aGVyIHBhcnQgb2YgcmVtaW5kaW5nIGhpbSB3aHkgaGUgd2l0aCB5b3UgaW4gdGhlIGZpcnN0IHBsYWNlIGlzIHRvIGJlIG9uIHRvcCBvZiB5b3VyIGZpdG5lc3MgYW5kIGxvb2tzIGdhbWUuIEhlIHNheXMgaGUgd2FudHMgYSBiZWF1dGlmdWwgZmFtaWx5PyBCZSBhIGJlYXV0aWZ1bCBnaXJsZnJpZW5kLiAKVGhhdCBzYW1lIHBjIGlzIHN0aWxsIGZ1bmN0aW9uaW5nIChhbGJlaXQgc2xvd2VyIHRoYW4gYmVmb3JlKSBidXQgc3RpbGwgZ29pbmcgc3Ryb25nLi4gCkZhbGwgcXVhcnRlciwgdGhlcmUgYXJlIDMgcHJhY3RpY2VzIGEgZGF5IGZyb20gd2hpY2ggeW91IGNob29zZSBvbmUgdG8gYXR0ZW5kLiAKSWYgeW91IGNhbiBnZXQgeW91cnNlbGYgdG8gc2hvcmUsIGEgcnVzaGluZywgdHVyYnVsZW50IHJhcGlkLCBpcyBxdWl0ZSBjYWxtaW5nIHdoZW4gdmlld2VkIGZyb20gb3V0c2lkZSBvZiBpdC4gSW4gdGhlIHNhbWUgd2F5LCB5b3VyIG92ZXJ3aGVsbWluZyBlbW90aW9ucyBjYW4gYmUgcXVpdGUgY2FsbWluZyB3aGVuIHZpZXdlZCBmcm9tIGVub3VnaCBkaXN0YW5jZS4gWW91ciBzdHJ1Z2dsZSBoYXMgbWVhbmluZyB0byBpdCwgYW5kIGJlaGluZCBhbGwgdGhlc2UgZW1vdGlvbnMgbGllcyBhIGRlZXBlciB0cnV0aCwgbGllcyBkZWVwZXIgd2lzZG9tLCB0aGF0IGNhbiBvbmx5IGJlIGRpc2NvdmVyZWQgYnkgZXhwZXJpZW5jaW5nIHRoZW0gZm9yIHRoZSBmdWxsIHZhbHVlIHRoZXkgaGF2ZSB0byBvZmZlciwgYW5kIGV4cHJlc3NpbmcgdGhvc2UgZmVlbGluZ3MuIApXZSBkb24ndCBuZWVkIG5ldyBsZWFkcy4gClZsbGVyIHdhcyBqdXN0IG5vdCBhIGdyZWF0IGNvYWNoLiAKSGVyZSBhcmUgdGhyZWUgaGlkZGVuIHRyYWl0cyBJIGhhdmUgZGlzY292ZXJlZCB0aGF0IHNlcGFyYXRlcyBhbWF0ZXVycyBhbmQgcHJvZmVzc2lvbmFscy4gCkdpdmVuIG5vc29kZXMgaW5zdGVhZCBvZiB2YWNjaW5hdGlvbnMgYXJlIGF0IHJpc2sgb2YgZGV2ZWxvcGluZyBzZXJpb3VzIGFuZCBwb3RlbnRpYWxseSBmYXRhbCBjaGlsZGhvb2QgaWxsbmVzc2VzIHN1Y2ggYXMgbWVhc2xlcywgbXVtcHMsIHJ1YmVsbGEsIHBvbGlvIGFuZCB3aG9vcGluZyBjb3VnaC4gVmFjY2luYXRpb24gY29udGludWVzIHRvIGJlIHRoZSB2ZXJ5IGJlc3Qgd2F5IHRvIHByZXZlbnQgc2VyaW91cyBpbmZlY3Rpb3VzIGRpc2Vhc2VzIGFuZCB0byBwcm90ZWN0IHlvdXJzZWxmLCB5b3VyIGZhbWlseSBhbmQgeW91ciBjb21tdW5pdHkuCkVjaG9lcyBhY3QgMyBtYWtlcyB0aGVtIGltbW9iaWxlLiBLaWxsZXIgUXVlZW4gZXhwbG9kZXMgdGhlbSB3aXRob3V0IHRoZW0gcmVhbGlzaW5nLiAKU2t5LCB3aGljaCBpcyBub3cgb3duZWQgYnkgdGhlIHZhc3QgVVMgbWVkaWEgYW5kIHRlbGVjb21zIGdyb3VwIENvbWNhc3QgZm9sbG93aW5nIGEgMzBibiB0YWtlb3ZlciBiYXR0bGUgd2l0aCB0aGUgTXVyZG9jaCBmYW1pbHkgYW5kIERpc25leSwgaXMgdm9sdW50YXJpbHkgcmVzdHJpY3RpbmcgZ2FtYmxpbmcgYWR2ZXJ0aXNpbmcgYW1pZCBjYWxscyBmb3IgYSByZWd1bGF0b3J5IGNyYWNrZG93bi4KSXQncyBkZWZpbml0ZWx5IGhhcmQgdG8gZ2V0IGNhbG9yaWVzIGluIGZvciBlbmVyZ3ksIGVzcGVjaWFsbHkgaWYgeW91J3JlIHVzZWQgdG8gY2Fsb3JpZSBjb3VudGluZy4gCkNob29zZSBvbmUuIEljaCBtYWcgd2VkZXIgZGllIEZQIG5vY2ggZGllIFZQLCBnZW5hdXNvIHdlbmlnIHdpZSBkaWUgTkVPUywgbnVyIGRpZXNlIG5pY2h0IGFremVwdGFueiBkZXIgUHJvYmxlbWF0aWsgZGVyIGFrdHVlbGxlbiBJc2xhbWlzaWVydW5nIHN0ZXJyZWljaHMgbXVzcyBlbmRsaWNoIGJlZ3JpZmZlbiB3ZXJkZW4gdW5kIG5pY2h0IGFscyBBbmdzdCBkZXIgZHVtbWVuIHVuZ2ViaWxkZXRlbiBhYmdldGFuIHdlcmRlbiEgRGFzIGlzdCBlaW4gRmFrdC4gClNvY2lhbCBtZWRpYSBjb250ZW50IG9mIGFueSBraW5kIGlzIG5vdCBhbGxvd2VkLiAKV2l0aCBhbGwgb2YgdGhlc2UgZmFjdG9ycywgd2h5IHRoZSBmdWNrIHdvdWxkIHNvbWVvbmUgd2FudCB0byBjb21lIGZvcndhcmQ/CiJJIGNhbid0IHB1dCBpdCBpbnRvIHdvcmRzLiAKTGVlcmphYXIgMiBob29mZGZhc2UgMQpJbiBteSBhbnRocm9wb2xvZ2ljYWwgb3BpbmlvbiwgZm91ciBldmVudHMgY29udHJpYnV0ZSB0byB0b2RheSdzZGV2ZWxvcG1lbnQgb2YgZ2FtYmxpbmcgaW4gdGhlIFVTQTogKGEpIFN0YXRlIGxvdHRlcmllcywgYmVnaW5uaW5nIGluTmV3IEhhbXBzaGlyZSBpbiAxOTY0IChjb3VwbGVkIHdpdGggYW4gZWNvbm9taWMgcmVjZXNzaW9uKTsgKGIpIHRoZWVudHJhbmNlIG9mIHRoZSBIb2xpZGF5IElubiBDb3Jwb3JhdGlvbiBpbnRvIGdhbWluZyBpbiAxOTc4OyAoYykgdGhlcGFzc2FnZSBvZiB0aGUgSW5kaWFuIEdhbWluZyBSZWd1bGF0b3J5IEFjdCAoSUdSQSkgYnkgdGhlIFVTIENvbmdyZXNzaW4gMTk4ODsgKGQpIGFuZCBodW1hbiBuYXR1cmUuIEluZGlhbiBOYXRpb24gQ2FzaW5vIGFjdGl2aXRpZXMgaGF2ZWJlZW4gY2FsbGVkIHRoZSAibmV3IEJ1ZmZhbG8iIGFuZCB0aGUgc21hbGwgSW5kaWFuIGNhc2lubyBpc3ZpcnR1YWxseSBhIHRoaW5nIG9mIHRoZSBwYXN0LiBHYW1ibGluZywgY2FsbGVkICJlbnRlcnRhaW5tZW50IiBieXNvbWUsIGhhcyBtYWRlIHRoZSB0cmFuc2Zvcm1hdGlvbiBmcm9tIGJlaW5nIGEgdmljZSB0byBhIG1ham9yIChhbmRncm93aW5nKSBpbmR1c3RyeS4gU2F0cmUsIGFuIGV4ZWN1dGl2ZSB3aXRoIGEgcHVibGljbHkgdHJhZGVkIGNvbXBhbnkoUHJvbXVzKSB0aGF0IGhhcyAxNSBjYXNpbm9zIGluIDggc3RhdGVzIChhbmQgaGFzIGV4cGFuZGVkIHRvIE5ld1plYWxhbmQpLCB3cm90ZSBhYm91dCB0aGUgaW5kdXN0cnkgaW4gMTk5MzogIlNvY2lhbGl6YXRpb24sZW50ZXJ0YWlubWVudCBhbmQgd2lubmluZyBhcmUgdGhlIHRocmVlIG1ham9yIHJlYXNvbnMgd2h5IHBlb3BsZSBnYW1lYXQgY2FzaW5vcyAocGFnZSAxMSkuIiBJbiBteSBvd24gb3BpbmlvbiwgaG93ZXZlciwgaW5kaXZpZHVhbHMgbm90b25seSBnbyBmb3IgZ2FtYmxpbmcgYnV0IHRoZXkgYWxzbyBnbyB0byB0cnkgYW5kIHdpbiBhbmQgYmVjYXVzZSB0aGV5d2lzaCB0byBiZSAiYSBzb21lYm9keS4iIEluIDE5OTUsIGFuIGVzdGltYXRlZCAzMCwwMDAsMDAwIHBlb3BsZXZpc2l0ZWQgTGFzIFZlZ2FzIGFuZCBpbiBGZWJydWFyeSAxOTk2LCBlaWdodCBOZXZhZGEgZ2FtaW5nIGNvbXBhbmllcyJkb25hdGVkICQyMDAsMDAwIHRvIGhlbHAgYXR0YWNrIHByb2JsZW0gZ2FtYmxpbmcsIGFuIGlsbG5lc3MgdGhhdGFmZmVjdHMgMiB0byA1IHBlcmNlbnQgb2YgdGhlIGFkdWx0IHBvcHVsYXRpb24iIChSZW5vIEdhemV0dGVKb3VybmFsLCBGZWJydWFyeSA2LCAxOTk2LCBwYWdlIDNFKS4gTkFNRT1hbmNob3I2MDE0NzI+CllvdSBtYXkgYmUgbm90aWNpbmcgbW9yZSBhY3Rpb25pbmcgb2YgdGhpcyB0eXBlIG9mIGNvbnRlbnQgYXMgd2UgaGF2ZSBnb3R0ZW4gYmV0dGVyIGF0IGRldGVjdGluZyBpdC4gV2UgdW5kZXJzdGFuZCB0aGF0IHRoaXMgbWF5IG1ha2UgaXQgYXBwZWFyIGFzIG5ldyBwb2xpY3kuIEhvd2V2ZXIsIHRoZSByZWFsaXR5IGlzIHRoYXQgb3VyIHBvbGljeSBvbiBzZXh1YWwgb3Igc3VnZ2VzdGl2ZSBjb250ZW50IGludm9sdmluZyBtaW5vcnMgaGFzIHNwZWNpZmljYWxseSBjYWxsZWQgb3V0IGNhcnRvb24gZGVwaWN0aW9ucyBvZiBtaW5vcnMgZm9yIG1vcmUgdGhhbiBhIHllYXIgbm93LCBzaW5jZSBpdHMgbGFzdCBtYWpvciB1cGRhdGUuCkkgYWxzbyBnb3QgYmlsbGlvbnMgYW5kIGJpbGxpb25zIG9mIGRvbGxhcnMgZm9yIG90aGVyIHRoaW5ncywgcG9ydCBvZiBlbnRyaWVzLCBsb3RzIG9mIGRpZmZlcmVudCB0aGluZ3MsIHB1cmNoYXNlIG9mIGRydWcgZXF1aXBtZW50LCBtb3JlIHRoYW4gd2UgZXZlbiByZXF1ZXN0ZWQsIGluIGZhY3QgdGhlIHByaW1hcnkgZmlnaHQgd2FzIG9uIHRoZSB3YWxsIGV2ZXJ5dGhpbmcgZWxzZSB3ZSBoYXZlIHNvIG11Y2ggYXMgSSBzYWlkIEkgZG9uIGtub3cgd2hhdCB0byBkbyB3aXRoIGl0IHdlIGhhdmUgc28gbXVjaCBtb25leS4gQnV0IG9uIHRoZSB3YWxsIHRoZXkgc2tpbXBlZC4gU28gSSBkaWQuIApQbGVhc2UgcHV0IHRoZSBzdWJqZWN0IGFzICJJTG92ZSBHYUdhIi4gClRoZXkgY291bGRuIGV2ZW4gZ2V0IGEgcHJpY2UgZXN0aW1hdGUgZnJvbSBhbnkgY29udHJhY3RvciBiZWNhdXNlIHRoZSB3b3JrIHJlcXVpcmVkIHRvIGZpZ3VyZSBvdXQgdGhlIHN0cnVjdHVyYWwgYWx0ZXJhdGlvbnMgd2FzIGV4dGVuc2l2ZSBlbm91Z2ggdG8gcmVxdWlyZSBhIHByaWNlIGVzdGltYXRlIGluIGl0c2VsZi4uIApNeSBudW1iZXIgb25lIHBhcnRpbmcgdGlwIGZvciBub3cgaXMgaWYgeW91IGxpa2UgaGlzdG9yaWNhbCBzdHVmZiBmb2xsb3cgdGhlIGJyb3duIHJvYWQgc2lnbnMgYWxsIG92ZXIgdGhlIGNvdW50cnkgdG8gc2lnaHRzIG9mIGhpc3RvcmljYWwgaW50ZXJlc3QuIE1vc3QgZGF5cyB5b3UgcHVsbCBpbnRvIGFuIGVtcHR5IGZpZWxkIGFuZCBiZSB0aGUgb25seSBwZW9wbGUgZXhwbG9yaW5nLiAKV2hhdCBjYW4gYmUgYSBwcm9ibGVtIGlzIHBhc3Npbmcgc29tZSBvZiB0aGUgYXV0b21hdGVkIGV4Y2VsIHRlc3RzIHRoYXQgY29tcGFuaWVzIHdpbGwgbWFrZSB5b3UgdGFrZS4gCktub3dpbmcgdGhhdCB0aGVyZSBwb3NzaWJseSB3ZXJlIG9wcG9uZW50cyB0aGF0IHdlcmUgc3Ryb25nZXIgdGhhbiBtZSBhbmQgSSdkIGhhdmUgdG8gb3ZlcmNvbWUgd2FzIGV4Y2l0aW5nIGZvciBtZS4gCkFuZCB5b3UgbmVlZCB0byBiZSBjb21mb3J0YWJsZSBsaXZpbmcgd2l0aCBzdWNoIGxpbWl0ZWQgcG9zZXNzaW9ucy4uIApJJ3ZlIGRlY2lkZWQgdG8gcG9zdCB0aGlzIGFmdGVyIGhlYXJpbmcgY29udmVyc2F0aW9ucyBhdCB3b3JrLCBhZnRlciB3YXRjaGluZyBteSBmcmllbmRzIGJlIGJvdGggdGhlIGdob3N0ZXIgYW5kIGdob3N0ZWUsIHN0b3JpZXMgZnJvbSBhY3F1YWludGFuY2VzLCBjbGFzc21hdGVzIHdobyBzdWRkZW5seSBqb2luIGluIGRpc2N1c3Npb24gb24gdGhlIHRvcGljIG9mIHJlbGF0aW9uc2hpcHMgYW5kIHJlamVjdGlvbiB0aGF0IHN0ZW1zIGZyb20gdGhlIHVuY2VydGFpbnR5IGR1ZSB0byBnaG9zdGluZywgYW5kIHllcyBzb2NpYWwgbWVkaWEgYXMgd2VsbCBidXQgbW9zdGx5IGZyb20gcGVyc29uYWwgb2JzZXJ2YXRpb25zLiBBbmQgSSd2ZSBjb21lIHRvIG5vdGljZSBhIHBhdHRlcm4gb2YgcGVvcGxlIHNpbXBseSBiZWluZyB0b28gYWZyYWlkIHRvIGJlIGhvbmVzdCBvciB0aGV5IHdhbnQgdG8gYXZvaWQgdGhlIGF3a3dhcmRuZXNzIHRoYXQgY29tZXMgYWxvbmcgd2l0aCB0aGUgY29uZnJvbnRhdGlvbiwgd2hpY2ggSSd2ZSBsZWFybmVkIGZyb20gdGhlIGdob3N0ZXJzIEkndmUgbWV0LiBOb3Qgb25seSBhcmUgdGhleSBkYW1hZ2luZyBvdGhlcnMgYnV0IHRoZXkgYXJlIGxhY2tpbmcgdGhlIG9wcG9ydHVuaXR5IHRvIGRldmVsb3Agc29jaWFsIHNraWxscy4gCkRvIG5vdCByb2NrIGZvcndhcmQgYW5kIGJhY2t3YXJkLiAKVmlzaXRvcnMgd2lsbCBhbHNvIG5vdGljZSBuZXcsIHJlZCBhd25pbmdzIG91dHNpZGUgdGhlIGNhc2lubywgcmVwbGFjaW5nIGJsYWNrIG9uZXMsIGFuZCBjYXNpbm8gc3RhZmYgd2VhcmluZyByZWQgVCBzaGlydHMgZm9yIHRoZSBmaXJzdCBtb250aC4gVGhlIHNoaXJ0cyBoYXZlIHNheWluZ3Mgb24gdGhlIGJhY2sgbGlrZSwgaXQgdXAgdG9uaWdodCwgd2UgYWxsIGdvaW5nIHRvIGJlIGVhdGluZyB0YXBpb2NhIGluIEJvY2EgUmF0b24gc29tZWRheS4gU2F5aW5ncyBsaWtlIHRoYXQgYXJlIHBhcnQgb2YgdGhlIGltYWdlIHRoZSBuYW1lIHRyYW5zZm9ybWF0aW9uIHRoZSBjb21wYW55IGlzIHRyeWluZyB0byBwcm9qZWN0Li4gCkRhbnMgdW5lIGdyYW5kZSBjYXNzZXJvbGUsIG1ldHRyZSAzMDBtbCBkIHBvdXIgdW4gZGVtaSBrYWJvY2hhLCAyIGMuICBzb3VwZSBkZSBzYXVjZSBzb2phLCBkZSBzYWtlLCBkZSBtaXJpbiAoYWxjb29sIHN1Y3IgZGUgY3Vpc2luZSksIGV0IGRlIHN1Y3JlIChqIGFpIHBhcyBtaXMsIGplIHRyb3V2ZSBxdWUgbGUgbWlyaW4gc3VjcmUgYmllbiBhc3NleikuIFBvcnRlciAgYnVsbGl0aW9uLCBham91dGVyIGxlcyBtb3JjZWF1eCBkZSBrYWJvY2hhIGVuIHVuZSBzZXVsZSBjb3VjaGUsIHBlYXUgdmVycyBsZSBiYXMsIGV0IHBvc2VyIGRlc3N1cyB1biBjb3V2ZXJjbGUgZmFpdCBkZSBwYXBpZXIgYWx1IG91IGRlIHBhcGllciBjdWlzc29uLiAKU28gSSBzb3J0IG9mIGdyZXcgdXAgaW4gQUkuIApXZSB3YWl0IGFyb3VuZCBhbmQgaG9wZSB0aGF0IERpc2NpcGxpbmUgc2V4aWVyIGNvdXNpbiwgTW90aXZhdGlvbiwgd2lsbCBzaG93IHVwLCBidXQgd2hlbiBpdCByZWFsbHkgY29tZXMgZG93biB0byBtYWtpbmcgbWVhbmluZyBvdXQgb2YgeW91ciBsaWZlLCBEaXNjaXBsaW5lIGlzIHRoZSBvbmUgd2hvIGdvaW5nIHRvIGdldCB5b3UgdG8gd2hlcmV2ZXIgeW91IHdhbnQgdG8gZ28uIEkgdXNlIHNvY2lhbCBtZWRpYSBhbmQgTmV0ZmxpeCBsZXNzIHRoYW4gbW9zdCBwZW9wbGUgSSBrbm93LCB5ZXQgSSBzdGlsbCBoYXZlIHRyb3VibGUgZmVlbGluZyBhcyBleGNpdGVkIGFzIEkgb25jZSBkaWQgYWJvdXQgZHJhd2luZywgb3IgcmVhZGluZywgb3IgZXhwbG9yaW5nIHRoZSBvdXRkb29ycywgb3IgYnVpbGRpbmcgdGhpbmdzLCBhcyBJIHVzZWQgdG8gd2hlbiBJIHdhcyB5b3VuZ2VyIChiZWZvcmUgdGhlIGludGVybmV0IGFuZCBjZWxsIHBob25lcyB3ZXJlIHNvIHdpZGVzcHJlYWQpLCBvciBwdXJzdWluZyBuZXcgaG9iYmllcyBhbmQgcGFzc2lvbnMuIApSYXplciBTaWducyBQb2tlciBMZWdlbmQgTWFyY2VsIEx1c2tlCk15IHBvaW50IHdhcyB0aGF0IHdlIGNhbiBsYWJlbCBhbmQgZGVtb25pemUgcGVvcGxlIHdobyBhcmUgdW53aWxsaW5nIHRvIHdvcmsgYW5kIGdldCAkIGZyb20gdGhlIGdvdmVybm1lbnQgYWxyZWFkeS4gVGhlIGVsZGVybHkgYW5kIGluZmlybSB3aG8ganVzdCBzaXQgYXJvdW5kIGFuZCBjb2xsZWN0IGNoZWNrcy4gCkJ1dCB0aGV5IHdlcmVuIGp1c3QgInRhbGtpbmcgdG8gdGhlaXIgZnJpZW5kcyIuIFRoZSBkdWRlIHB1YmxpY2x5IGFubm91bmNlZCBpdC4gSGUgd2FzIGxvb2tpbmcgZGlyZWN0bHkgYXQgYSBjYW1lcmEgdGhhdCB3YXMgYnJvYWRjYXN0aW5nIHdoYXQgaGUgd2FzIHNheWluZyBsb2wuCkV2ZW4gcmVub3duZWQgcGlhbmlzdHMgICBzdWNoIGFzIEhvcm93aXR6IG9yIENvcnRvdCAgIG1ha2UgbWlzdGFrZXMgZXZlbiBpbiB0aGVpciByZWNvcmRpbmdzLCBzaW5jZSBhcyB5b3Ugc2hvdWxkIGtub3cgb25jZSB5b3UgY2FuIGdldCBtb3N0IG9mIHRoZSBub3RlcyByaWdodCBpdCBvbmUgb2YgdGhlIGxhc3QgdGhpbmdzIHRoYXQgbWF0dGVycy4gCldoZW4gc2ltaWxhciBhY3RzIGFyZSBjb21taXR0ZWQgYWdhaW5zdCB0aGUgZmlyc3QgQmxhY2sgUHJlc2lkZW50IG9mIHRoZSBVbml0ZWQgU3RhdGVzLCBhIHNpbWlsYXIgZm9ybSBvZiB3aGl0ZSBwcml2aWxlZ2UgaXMgYmVpbmcgZXhlcnRlZC4gV2hpdGVzIGNhbiBwcmV0ZW5kIGx5bmNoaW5ncyBhcmUgImhpc3RvcnksIiBidXQgbW9zdCBCbGFjayBBbWVyaWNhbnMgcmVhbGl6ZSB0aGF0IGx5bmNoaW5ncyBhcmUgYWx3YXlzIHBvc3NpYmxlLgpEb24gdGhpbmsgaXQgc2hvdWxkIGJlIHJlZHVjZWQsIEkgdGhpbmsgaXQgc2hvdWxkIGJlIGFsbCBvdXQgYmFubmVkLCBzaGUgc2FpZC4gCkl0IHRvb2sgbWUgYSBmZXcgc2Vjb25kcyBhbmQgc29tZSBxdWVzdGlvbnMgdG8gbXkgZnJpZW5kcyBhbmQgSSBhbHJlYWR5IGtuZXcgaGUgd2FzIHNpbmdsZSwgaGFkIGEgd29uZGVyZnVsIGpvYiBhbmQgYSBncmVhdCBwZXJzb25hbGl0eS4gSW4gc2hvcnQsIGhlIHdhcyB0aGUgZHJlYW0gbWFuLiAKSXQgaXMgYSBncmVhdCByZXNvdXJjZSwuIApTbywgSSB0YWxrZWQgYWJvdXQgbXkgYW54aWV0eSBlYXJsaWVyIHRoaXMgd2Vlay4gSSdtIGN1cnJlbnRseSBhdCB3b3JrLCBpbiB0aGUgYmF0aHJvb20sIGZlZWxpbmcgc2ljay4gVGhhbmtmdWxseSBteSBib3NzIGhhcyB0byBydW4gc29tZSBlcnJhbmRzIHRoaXMgbW9ybmluZyBzbyBJIGRvbid0IGhhdmUgdG8gZXhwbGFpbiBhbnl0aGluZy4gCkp1c3QgU29tZSBTdHVmZiBUaGUgQnVzaW5lc3Mgb2YgQmVpbmcgQm9ybiAgIFJldmlldyBDcml0aXF1ZSBUaGUgQXVkaWVuY2Ugb2YgVGhlIEJ1c2luZXNzIG9mIEJlaW5nIEJvcm4gOC8yNS8wNyBXaGVuIElzIEhlbHAgTm90IEhlbHAgTXkgUHVwcGllcyBJcm9uIFJpY2ggRm9vZHMgUHV6emxlOiBIZWxwIHRoZSBNaWR3aWZlIChwbGVhc2UhKSBCaXJ0aCBQbGFuICAgUmV2aXNlZCAoV2l0aCBPQiBBcHByb3ZhbCkgVGFnZ2VkICAgOCBTZWNyZXRzIEFib3V0IE1lIEJpcnRoIFBsYW4gICBMZW1tZSBGaXggSXQgS2lzc2VzIEN1ZGRsaW5nIFVwIFRoYW5raW5nIERyLiBXb25kZXJmdWwgRW1haWwgQWRkZWQgdG8gU2l0ZSBMZXQncyBDcml0aXF1ZSBhIEJpcnRoIFBsYW4gQSBCaXJ0aCBVbmZvbGRzIGluIFBob3RvcyBXb3JkcyBNeSBOZXcgSGFpciBWaXNpb24gTWFnYXppbmUgQXJ0aWNsZSBVbmFzc2lzdGVkIEJpcnRoIEJ1enogTWUgdGhlIEhvcnNlIEFuZ2VsIEhvbW8gRmVzdCBCaWcgTG92ZSBTcXVpZG9vLCBBbnlvbmU/IExhYm9yIEJlZCBDb3VudHkgRHJpdmUgV2VkZGVkIEJsaXNzIFRpZGJpdHMgTGFib3IgS2l0dHkgU2hhbWUgV29ya2luZyBQb3N0cyBHYXJkZW4gTGFib3JpbmcgVkJBQyBTdWNjZXNzISBCbG9vZHkgSE1PcyBIZXIgU3VyZ2VyeS4gRmlyZWZpZ2h0ZXJzIFN1cmdlcnkgU29tZSBOdXJzZXMuIApJIGFsd2F5cyByZW1lbWJlciBnaXZpbmcgRGF2ZSBhIGhhcmQgdGltZSBhYm91dCBsaXN0ZW5pbmcgdG8gdGhlIENCQyByYWRpbyBpbiBzdGVhZCBvZiB0aGUgbXVzaWMgc3RhdGlvbi4gSSBlbmpveWVkIG91ciB0aW1lcyBhdCB0aGUgY290dGFnZSBmaXNoaW5nIGFuZCBwbGF5aW5nIHBva2VyLiAKQW5kIHdlcmV3b2x2ZXMgYXJlIHZpb2xlbnQgYmVhc3RzLiAKQXBwZWxsYXRlIGp1ZGdlcyBtaWdodCBzaW1wbHkgc3VwcG9ydCB0aGUgY291bnR5IGVsZWN0aW9uIGJvYXJkLiBPciB0aGUgdG9wIGFwcGVhbHMgY291cnQgY291bGQgcmV2aXNpdCBpdHMgcHJpb3IgZGVjaXNpb24gb24gY29sbGVjdGluZyBhbmQgY2VydGlmeWluZyByZWZlcmVuZHVtIHNpZ25hdHVyZXMuIEl0IGFsbCBkZXBlbmRzIG9uIGhvdyBicm9hZGx5IG9yIG5hcnJvd2x5IHRoZSBhcHBlYWxzIGNvdXJ0IHZpZXdzIHRoaXMgY2FzZSB3aGVuIGl0IGxhbmRzIG9uIGl0cyBkb2NrZXQgdGhpcyBzdW1tZXIuClRoYXQgaXMgbm90IHdoYXQgSSByZWFkLiBJdCBpcyBhbiBhbnRpIGZhc2Npc3QgZGVtb25zdHJhdGlvbiB3aGljaCBpcyBzYXlpbmcsIHRoYXQgR2VybWFueSBuZWVkIHRvIGZyZWVkIGZyb20gZmFzY2lzdCBkaWN0YXRvcnMuIEl0IGlzIGRlbWFuZGluZyBhIHNlY29uZCBOdXJlbWJlcmcgVHJpYWwgYXMgd2VsbCBhcyBhIHNlY29uZCBKYWx0YSBBZ3JlZW1lbnQuIFRoZXkgbGlzdCBhbGwgdGhlIHJlYXNvbnMgd2h5IHRoZXkgdGhpbmsgR2VybWFueSBpcyBub3QgYSBzdGF0ZSBhbmQgZG9lc24gYWN0dWFsbHkgZXhpc3QuIFRob3NlIGFudGkgZmFjaXN0IHBhcnRzIGFyZSBqdXN0IHRoZXJlIHRvIHRyeSB0byBhdHRyYWN0IHBlb3BsZSB0byByZWFkIHRoZWlyIG5vbnNlbnNlIGFuZCB0byBqdXN0aWZ5IHRoZWlyIHN0dXBpZGl0eS4gSSB3b3VsZCBub3QgYmUgc3VycHJpc2VkIGlmIG1vc3Qgb2YgdGhlIHBlb3BsZSAicHJvdGVzdGluZyIgaGFkIHRpZXMgdG8gbmVvIGZhY2lzdCBncm91cHMgdGhlbXNlbHZlcy4KUmV2LiAKRGEgcXVlc3RlIGR1ZSBwcm9mb25kZSBzb2xpdHVkaW5pLCBuYXNjZXZhIGlsIGJpc29nbm8gZGVsbCdpbmNvbnRyby4gVW4gYmlzb2dubyBjb3MgcHJvZm9uZG8gZGEgZXNwcmltZXJzaSBuZWwgZGVzaWRlcmlvIGRpIGFiYnJhY2NpYXJlIHF1YWxjdW5vLi4gCkxpa2UsIHlvdSBjYW4gbWl0aWdhdGUgcmlzayBidXQgdGhhdCB0aGF0IHBvaW50LCB3aG9ldmVyIGRpZCB0aGF0IHdhcyBub3QgYSBmdW5jdGlvbmFsIGh1bWFuIGFuZCB3YXMgZ29pbmcgdG8gZ2V0IHRoZW1zZWx2ZXMga2lsbGVkIHNvbWUgb3RoZXIgd2F5IHJlZ2FyZGxlc3MuCkhlIHdhbnRlZCBtZSB0byB0YWtlIGFudGlkZXByZXNzYW50cy4gSSB3b3VsZCBuZXZlciBkbyBpdC4gSSdtIGFuIG9sZCBzY2hvb2wgbWFuaWMuIAoiSXQgd2lsbCBub3QgcmUgb3BlbiwiIGhlIHNhaWQuICJJIHdvdWxkIGJlIHJhdGhlciBkb3duIGhlcmUgc2F5aW5nIHNvbWV0aGluZyBlbHNlIGluc3RlYWQgb2YgdGVsbGluZyBwZW9wbGUgdGhleSBoYXZlIGxvc3QgdGhlaXIgam9icy4iIFRoZSA0MCBqb2JzIHRvIGdvIGFyZSBhIGNvbWJpbmF0aW9uIG9mIGZ1bGwgdGltZSwgcGFydCB0aW1lIGFuZCBjYXN1YWxzLiBNciBXaWxzb24gc2FpZCB0aGUgY2x1YiBhbmQgbGFuZCB3b3VsZCBiZSBvZmZlcmVkIGZvciBzYWxlIGFmdGVyIGZhaWxlZCBhdHRlbXB0cyB0byBzZWxsIGl0IGFzIGEgZ29pbmcgY29uY2Vybi4gCkZvciBleGFtcGxlLCB0aGUgYWdlbmN5J3MgcnVsZXMgYWJvdXQgcG9rZXIgZ2FtZXMgYXJlIDUgeWVhcnMgb2xkIGFuZCBkb24ndCByZWZsZWN0IGEgMjAxMCBjaGFuZ2UgaW4gc3RhdGUgbGF3cyB0aGF0IGRpZCBhd2F5IHdpdGggYSAkMTAwIGxpbWl0IG9uIHBva2VyIGdhbWVzLiBEQlBSIGhlbGQgYSB3b3Jrc2hvcCBvbiB0aGUgY2FyZCByb29tIHJ1bGVzIGluIEZlYnJ1YXJ5LCB0aGUgZmlyc3Qgc2luY2UgYSBKdWx5IDIwMTAgd29ya3Nob3AgdGhhdCB3ZW50IG5vd2hlcmUuIFRoZSBhZ2VuY3kgaGFzIHlldCB0byByZWxlYXNlIGFueSBmb3JtYWwgcHJvcG9zZWQgcnVsZXMgc2luY2UgdGhpcyB5ZWFyJ3MgY2FyZCByb29tIHdvcmtzaG9wLiAKSSBtYWRlIGEgbG90IG9mIG1vdmVzIHRvIGVsaW1pbmF0ZSBzb3VyY2VzIG9mIGFueGlldHkgYW5kIGluY3JlYXNlIHN0YWJpbGl0eSBpbiBteSBsaWZlLiAKSGVyIGZhdGhlciB0aG91Z2h0IHNoZSB3YXMgbWVudGFsbHkgdW5zdGFibGUgd2hlbiBzaGUgYmVjYW1lIGEgZGFuY2VyIGFuZCB3b3JlIGZsYXNoeSBjbG90aGVzLiAxOC4gCllvdSBlaXRoZXIgaGF2ZSBhIFBvb2RsZSBvciBCb3JkZXIgQ29sbGllIG9yIHlvdSBkb24ndC4gVGhlcmUgaXMgbm8gImdyZXkiIGFyZWEsIHlldCB3ZSBzZWUgdGhpcyBtaXNhcHByb3ByaWF0ZWQgdGVybWlub2xvZ3kgZXZlcnlkYXkuIApJdCBsb29rZWQgbGlrZSBhIGdsb2NrLiAKRWRpdDogV2FudGVkIHRvIGFkZCB0aGF0IGN1dHRpbmcgb25lIG93biBuYWlscyBpcyBtdWNoIG1vcmUgZGlmZmljdWx0IHRoYW4gaXQgbWlnaHQgc2VlbSB3aGVuIHlvdSBoYXZlIHRvIGxlYXJuIGl0IGZvciB0aGUgZmlyc3QgdGltZSBpbiB5b3VyIDMwcyA9RC4gTXkgbmFpbHMgd2VyZSBwZXJwZXR1YWxseSBjcm9va2VkIGZvciBtb250aHMgYW5kIG1vbnRocyB3aGlsZSBJIHRyaWVkIHRvIGZpZ3VyZSBvdXQgdGhvc2UgY2xpcHBlcnMuIApUbyBydW4gdGhpbmdzIHNtb290aGx5LCBzdXBwbHkgeW91cnNlbGYgd2l0aCB0aGUgYmFzaWMgcG9rZXIgcGFydHkgc3VwcGxpZXMuIApJIGFsd2F5cyBmZWVsIGhhcHBpZXIgZW5jb3VyYWdpbmcgcGVvcGxlIHRvIGNvbnNpZGVyIHRha2luZyBzcFtlY2lhbGlzdCBhZHZpY2UuSSd2ZSBub3QgY29tZSBhY3Jvc3MgYW55IGJhYnkgbWFzc2FnZSB3aHkgbWFrZXMgYSBwb2ludCBvZiBzY2FscCBtYXNzYWdlLCBwcm9iYWJseSwgYXMgeW91IHNheSwgYmVjYXVzZSBvZiB0aGUgZm9udGFuZWxsZS4gCkl0IG5vdCBoaXMgZmF1bHQgdGhhdCBwZW9wbGUgaGFzIGdvdCBzbyBlbW90aW9uYWxseSBhdHRhY2hlZCB0byBoaXMgd29yayB0aGF0IHRoZXkgZmVlbCBsaWtlIGl0IGJlbG9uZ3MgdG8gdGhlbSwgaXQgc2ltcGx5IGRvZXNuIG93ZXMgaGltc2VsZiBmb3IgaGlzIHN1Y2Nlc3MuIApJIG1lYW4gSSBoYWQgc29tZSBuZWlnaGJvcnMgd2l0aCBhIG5ldyBiYWJ5IHdobyB3YXMsIHlvdSBrbm93LCBkb2luIGJhYnkgdGhpbmdzIGNyeWluZyBhdCBhbGwgaG91cnMuIFBvb3IgbGl0dGxlIHRoaW5nIGp1c3QgbG92ZWQgd2FraW5nIHVwIGF0IDMgYW5kIGRpZG4gc2V0dGxlIGRvd24gdW50aWwgOCwgSSBzdGlsbCBoYWQgYSBsaXR0bGUgImJhYnkgc29vdGhpbmciIHRoaW5nIGZyb20gd2hlbiBteSBleCBtb3ZlZCBvdXQgd2l0aCBvdXIgc29uLCBpdCB3YXMgc3VwcG9zZWQgdG8gaGVscCBjYWxtIGJhYmllcyBkb3duLiBPbmUgbW9ybmluZyBhZnRlciBhIHJvdWdoIG5pZ2h0IEkgZHVnIGl0IG91dCBhbmQganVzdCBrbm9ja2VkIG9uIHRoZWlyIGRvb3IsIHRoZSB3aWZlL2dpcmxmcmllbmQgb3BlbmVkIGFuZCByZWNvZ25pemVkIG1lIGZyb20gbmV4dCBkb29yIGFuZCBzdGFydGVkIHRvIGFwb2xvZ2l6ZSwgSSBoZWxkIHVwIGEgaGFuZCwgIk5haCwgYmFiaWVzIGRvIGJhYnkgdGhpbmdzLiBUaGlzIGhlbHBlZCB3aGVuIG15IHNvbiB3YXMgdGhhdCBhZ2UsIGl0IHdvcnRoIGEgc2hvdC4iIEFuZCBJIGhhbmRlZCBpdCBvdmVyLiBNb3ZlIGhpcyBjYXJlZXIgdGVuIHllYXJzIGluIGVpdGhlciBkaXJlY3Rpb24gYW5kIGhlIGRvZXNuIGhhdmUgYW55IG9mIHRoZSBhY2NvbGFkZXMgaGUgZ290LgpUaGUgeHNrZXkgd2FzLiAKWW91ciBHdWlkZSB0byB0aGUgMjAxNiBOZXcgWW9yayBGaWxtIEZlc3RpdmFsVGhvdWdoIHRoZSBmaWxtcyBhcmUgcmFkaWNhbGx5IGRpZmZlcmVudCAgIEhhbnNlbiBMdmUncyB1bmZvbGRzIGFzIGEgZ2VudGxlIGRyYW1hIHdoaWxlIFZlcmhvZXZlbidzIGlzIGEgY29uc3RhbnRseSBiZXdpbGRlcmluZyBjb2FsIGJsYWNrIGNvbWVkeSAgIEh1cHBlcnQncyBwcm90YWdvbmlzdHMgc2hhcmUgY2VydGFpbiBiaW9ncmFwaGljYWwgZGV0YWlscy4gCkxlIGRiYXQgZmFpdCBlbiB0b3V0IGNhcyBkdSBicnVpdCBhdXggUGF5cyBCYXMgbyB1biBwYXJ0aSAobGUgUE5WRCksIG1pbGl0ZSBzZWxvbiBjZXMgbW1lcyBhcmd1bWVudHMgcG91ciB1biBhYmFpc3NlbWVudCBkZSBsJ2dlIGxnYWwgZHUgY29uc2VudGVtZW50ICB1biByYXBwb3J0IHNleHVlbCwgIDEyIGFucyBhdSBsaWV1IGRlIDE2IGFucy4KQmVjYXVzZSBvbiBwYXBlciBSZXppIGlzIHRoZSB0ZW5hbnQgYW5kIEkgdGhlIHN1YmxlYXNlZSwgdGhleSBhcmUgaW52ZXN0ZWQgZm9yIHRoZSBlbnRpcmUgdGltZSB0aGF0IHdlIGxpdmUgdGhlcmUuIApJcyB0aGUgc3BvbnRhbmVvdXMgaW52ZW50aW9uIG9mIG1lbG9kaWMgc29sbyBsaW5lcyBvciBhY2NvbXBhbmltZW50IHBhcnRzLiBJdCBpcyBvbmUgb2YgdGhlIGRlZmluaW5nIGVsZW1lbnRzIG9mIGphenouIEltcHJvdmlzYXRpb24gaXMgY29tcG9zaW5nIG9uIHRoZSBzcG90LCB3aGVuIGEgc2luZ2VyIG9yIGluc3RydW1lbnRhbGlzdCBpbnZlbnRzIG1lbG9kaWVzIGFuZCBsaW5lcyBvdmVyIGEgY2hvcmQgcHJvZ3Jlc3Npb24gcGxheWVkIGJ5IHJoeXRobSBzZWN0aW9uIGluc3RydW1lbnRzIChwaWFubywgZ3VpdGFyLCBkb3VibGUgYmFzcykgYW5kIGFjY29tcGFuaWVkIGJ5IGRydW1zLiAKR2VuLiBNY0NocnlzdGFsIGlzIGEgcGFydCBvZiB0aGF0LiBXZSBoYXZlIGEgbG90IG9mIGNvbmZpZGVuY2UgaW4gdGhvc2UgdHdvIGdlbmVyYWxzLiAKSWwgZmF1dCBxdWUgbCduZXJnaWUgY2lyY3VsZSBkYW5zIHRvdXQgbCdvcmdhbmlzbWUuIExvcnNxdWUgY2V0dGUgY2lyY3VsYXRpb24gZXN0IGVudHJhdmUsIGVsbGUgZmluaXQgcGFyIHBlcnR1cmJlciB1biBvcmdhbmUgb3UgbCdlc3ByaXQuIE1haXMgc29uIGltYWdlIHJmbGV4ZSBlc3QgdG91am91cnMgcmVudm95ZSB2ZXJzIGxhIHBsYW50ZSBkZXMgcGllZHMgbyBlbGxlIGVzdCBkdGVjdGUgcGFyIGxlcyBkb2lndHMgZHUgcmZsZXhvbG9ndWUuCkluIGEgbGFyZ2UgYm93bCwgYmVhdCB0aGUgYnV0dGVyIGFuZCBzdWdhciB3aXRoIGFuIGVsZWN0cmljIG1peGVyIHVudGlsIGxpZ2h0IGFuZCBmbHVmZnkuIE1peCBpbiB0aGUgZWdncywgYnV0dGVybWlsaywgcmVkIGZvb2QgY29sb3JpbmcgYW5kIHZhbmlsbGEuIApJdHMgaG93IGdvb2QgdGVhbXBsYXkgc2hvdWxkIGhhcHBlbi4KSGUgbmVlZHMgcHJvZmVzc2lvbmFsIGhlbHAsIG9yIGhlIFdJTEwga2lsbCBzb21lb25lLiBQcm9iYWJseSBoaW1zZWxmIHRvbyBpbiB0aGUgcHJvY2Vzcy4gSXQgd2lsbCBmdWNrIHVwIGhpcyBwYXJlbnRzIGxpdmVzLCBoaXMgc2libGluZ3MgbGl2ZXMsIGFuZCBhbnlvbmUgd2hvIGNvbnNpZGVycyBoaW0gYSBmcmllbmQuClRoZSBTYW4gRnJhbmNpc2NvIEJheSBBcmVhIGlzIHRoZSBtZXRyb3BvbGl0YW4gcmVnaW9uIHN1cnJvdW5kaW5nIE5vcnRoZXJuIENhbGlmb3JuaWEncyBTYW4gRnJhbmNpc2NvIGFuZCBTYW4gUGFibG8gYmF5cy4gSG9tZSB0byBtb3JlIHRoYW4gMTAwIGNpdGllcyB0aGF0IGNvbnRhaW4gaW4gZXhjZXNzIG9mIDcgbWlsbGlvbiBwZW9wbGUgY29tYmluZWQsIGl0IGVuY29tcGFzc2VzIHJvdWdobHkgNywwMDAgc3F1YXJlIG1pbGVzICgxOCwxMzAgc3F1YXJlIGtpbG9tZXRlcnMpIFtzb3VyY2U6IFdoYXQgSXMgdGhlIEJheT9dLiBXaGlsZSB0aGVyZSBpcyBubyBjZW50cmFsIGdvdmVybmluZyBib2R5IHRoYXQgb3ZlcnNlZXMgYWxsIG9mIHRoZSBCYXkgQXJlYSdzIGhpa2luZyB0cmFpbHMsIGl0J3Mgc2FmZSB0byBzYXkgdGhlcmUgYXJlIHRob3VzYW5kcyBvZiBtaWxlcyBvZiB0cmFpbCBoZXJlLiAKVGlwcyBzZWVtIGxlc3MgZnJlcXVlbnQgYXQgdGhlIHJvdWxldHRlIHdoZWVsLiBQcm9iYWJseSB0aGUgbW9zdCBjb21tb24gaXMgc2ltcGx5IGdpdmluZyB0aGUgZGVhbGVyIGEgY2hpcCBhZnRlciBoaXR0aW5nIGEgMzUgMSBzaW5nbGUgbnVtYmVyIHBheW9mZi4gRG9uJ3QgaGFuZCBpdCBkaXJlY3RseSB0byB0aGUgZGVhbGVyICAgZGVhbGVycyBhcmUgbm90IGFsbG93ZWQgdG8gdGFrZSBtb25leSBvciBjaGlwcyBmcm9tIGEgcGxheWVyJ3MgaGFuZC4gUGxhY2UgaXQgb24gdGhlIHRhYmxlIGFuZCB0ZWxsIHRoZSBkZWFsZXIgaXQncyBhIHRpcC4KQSBndXkgYXQgbXkgdGFibGUgaXMgYSBkb2N0b3IgYW5kIGhlIHJ1bnMgb3ZlciwgZGV0ZXJtaW5lcyB0aGUgcGVyc29uIGlzbiBicmVhdGhpbmcsIGFuZCBiZWdpbnMgQ1BSLiBBcyBhIHNpZGUgbm90ZSwgamVzdXMgaXQgbG9va2VkIGJydXRhbC4gCkkgaGF2ZSBCeWFra29zIGFuZCBHZW5idXMgZGlzY29ubmVjdCBmcmVxdWVudGx5IGFnYWluc3QgbWUuIEEgY2VydGFpbiBPdmVybG9yZCBvbmNlIGRpc2Nvbm5lY3RlZCBzbyBtYW55IHRpbWVzIGFnYWluc3QgbXkgWGlhb3l1IGFuZCBOb2N0aXMgaW4gdGhlIGNvdXJzZSBvZiBzZXZlcmFsIGRheXMgSSBjb3VsZG4gaGVscCBidXQgZmVlbCByZWFsbHkgYW5ub3llZC4gClBvb2xzaWRlIGlzIGxvY2F0ZWQgb24gdGhlIHNlY29uZCBmbG9vciBvZiB0aGUgaG90ZWwsIG5leHQgdG8gdGhlIG91dGRvb3Igc3dpbW1pbmcgcG9vbC4gVGhpcyByZXN0YXVyYW50IGlzIGFuIGFsbCBkYXkgYWxmcmVzY28gZGluaW5nIG9wdGlvbiB3aXRoIGEgbWVudSB0aGF0IG9mZmVycyBzaW1wbGUgYW5kIGhlYWx0aHkgaW50ZXJuYXRpb25hbCBhbmQgbG9jYWwgZmF2b3JpdGVzLiBUaGUgcmVzdGF1cmFudCBoYXMgYW4gZXh0ZW5zaXZlIGJhciB3aGVyZSBmcmVzaCBqdWljZXMsIHNtb290aGllcyBhbmQgc2lnbmF0dXJlIHNwZWNpYWx0eSBpY2VkIHRlYXMgYXJlIHNlcnZlZC4uIApFbiBwbHVzIGRlIHMnYXNzdXJlciBsZXMgc2VydmljZXMgZCdleHBlcnRzIHBvdXIgbGV1ciB0cmFuc2FjdGlvbiwgbGVzIGFjaGV0ZXVycyBkb2l2ZW50IGFqb3V0ZXIgcGx1c2lldXJzICBjdHMgYXUgcHJpeCBkJ2FjaGF0IDoKWW91IGV2ZW4gZ2V0IGEgY2xhcCBvbiB0aGUgYmFjayBieSBvbmUgb2ZmaWNlciBhbmQgYSBzbWlsZS4gIllvdSBkaWQgYWxsIHRoaXMgaW4geW91ciB1bmRlcndlYXIsIGh1aD8iLiAKRXZlcnkgb3RoZXIgbWFqb3IgaW5kdXN0cmlhbGl6ZWQgZWNvbm9teSBhbHJlYWR5IGhhcyBhIFZhbHVlIEFkZGVkIFRheCBzbyBpdCBzaG91bGQgbm90IGJlIGEgbWFqb3IgaXNzdWUuIFRoZSBWQVQgdGhhdCBJIHByb3Bvc2luZyBpcyBsb3dlciB0aGFuIHRoYXQgb2YgbW9zdCBvdGhlciBtYWpvciBlY29ub21pZXMgICBoYWxmIHRoZSBhdmVyYWdlIEV1cm9wZWFuIGxldmVsIGZvciBleGFtcGxlLiBUaGUgcmVhbCBxdWVzdGlvbiBpcywgaG93IHdvdWxkIGVudHJlcHJlbmV1cnMgcmVzcG9uZCB0byBoYXZpbmcgZXZlcnkgYWR1bHQgY29uc3VtZXIgZ2V0dGluZyBhbiBhZGRpdGlvbmFsICQxMiwwMDAgb2YgYnV5aW5nIHBvd2VyIHBlciB5ZWFyIEFORCBoYXZpbmcgYSBndWFyYW50ZWVkIGluY29tZSBvZiAkMTIsMDAwIGEgeWVhciBvbmVzZWxmPyBXZSB3b3VsZCBzZWUgYW4gZXhwbG9zaW9uIG9mIGVudHJlcHJlbmV1cnNoaXAgb24gYSBzY2FsZSB0aGF0IHdlIGhhdmUgbmV2ZXIgc2Vlbi4gQSBtaW5kc2V0IG9mIGFidW5kYW5jZSBnb2VzIGhhbmQgaW4gaGFuZCB3aXRoIGVudHJlcHJlbmV1cnNoaXAgYW5kIHRoYXQgaXMgd2hhdCB0aGUgRnJlZWRvbSBEaXZpZGVuZCB3aWxsIGVuYWJsZSBmb3IgbWlsbGlvbnMgb2YgQW1lcmljYW5zLgpJIHdhbnQgdG8gYmUgY2xlYXIsIHdoYXQgU2NoaWxsaW5nIHNhaWQgaW4gZGVmZW5zZSBvZiBzaGFyaW5nIHRoYXQgbWVtZSBpcyBpZGlvdGljIGFuZCBiaWdvdGVkLCB3aGljaCBpcyB3aGF0IGxlYXZlcyBtZSBjb25mdXNlZCB0aGF0IGhlIGFibGUgdG8gYmUgaGFsZndheSBpbnRlbGxpZ2VudCB3aGVuIGhlIG9uIFRWIG9yIHRoZSByYWRpby4uIApBdCB0aGUgYmVnaW5uaW5nIG9mIHRoZSBnYW1lLCB0aGUgcGxheWVyIHdobyBwb3N0cyB0aGUgc21hbGwgYmxpbmQgaXMgdGhlIHBsYXllciBzaXR0aW5nIHRvIHRoZSBsZWZ0IG9mIHRoZSBkZWFsZXIsIGFuZCB0aGUgcGxheWVyIHdobyBwb3N0cyB0aGUgYmlnIGJsaW5kIGlzIHNpdHRpbmcgdG8gdGhlIGxlZnQgb2YgdGhlIHBsYXllciB3aG8gcG9zdGVkIHRoZSBzbWFsbCBibGluZC4gCkhlIHdhcyBhIGxpZmUgbWVtYmVyIG9mIHRoZSBVU1MgRGVsdGEgU2hpcG1hdGVzIEFzc29jaWF0aW9uIG9mIHdoaWNoIGhlIGFuZCBHZW5ueSBlbmpveWVkIHRyYXZlbGluZyB0byB0aGUgTmF2eSBSZXVuaW9ucy4gTmF2eSBNZW1vcmlhbCBGb3VuZGF0aW9uLiBIZSB3YXMgYWxzbyBhIGxpZmUgbWVtYmVyIG9mIHRoZSBGb3N0b3JpYSBWRlcgNDIxIGFuZCB0aGUgQW1lcmljYW4gTGVnaW9uIDAwNzMuIApXZSB3ZXJlIGluZm9ybWVkIHRoYXQgd2Ugc2hvdWxkIGhhdmUgb3JnYW5pc2VkIGEgc3Vic3RpdHV0ZSBvdXJzZWx2ZXMgYW5kIGRvbmUgd29yayBhbnl3YXkgICB0aGF0IHJpZ2h0LCB0aGUgZ3JvdXAgb2YgZmlmdGVlbiB5ZWFyIG9sZHMuIAozNTYgcG9pbnRzICBzdWJtaXR0ZWQgNSBkYXlzIGFnby4gCkJ1dCBpdCBtYWtpbmcgbWUgY3JhenkgdG8gbGl2ZSBpbiBhIGNvdW50cnkgdGhhdCBpcyBzbyBmYXIgYmVoaW5kIHRoZSBjdXJ2ZSBvbiBnbHV0ZW4gc2FmZXR5LiBFdmVyeSB0aW1lIEkgZ28gdG8gdGhlIHN1cGVybWFya2V0IEkgZmluZCBteXNlbGYgcXVlc3Rpb25pbmcgd2hldGhlciBhIHByb2R1Y3QgbWF5IGJlIHNhZmUuIEkgaGF2ZSBhbHJlYWR5IGFjY2lkZW50YWxseSBteXNlbGYgc2V2ZXJhbCB0aW1lczsgd2hlbiBJIGdldCBnbHV0ZW5pemVkLCBJIHR1cm4gaW50byBhIGRlcGxldGVkIHpvbWJpZS4KQW4gZXhjZWxsZW50IGV4YW1wbGUgb2YgdGhpcyBpcywgSSB0aGluaywgYSBwb3N0IGZyb20gci9MU0Qgd2hlcmUgc29tZW9uZSByZWNlbnRseSBkZXNjcmliZWQgaG93IGhlIGRldmVsb3BlZCBhbiBhdHRyYWN0aW9uIHdoaWxlIHRyaXBwaW5nIHRvIGFub3RoZXIgbWFsZSBmcmllbmQsIGFuZCBob3cgaGUgcmVhbGl6ZWQgaGlzIGF0dHJhY3Rpb24gd2FzIHJvb3RlZCBpbiBoaXMgZnJpZW5kcycgcGVyc29uYWxpdHksIGFuZCB0aGUgcmVsYXRpb25zaGlwIHRoZXkgc2hhcmVkLiBUaGlzIGNhbmUgZnJvbSBzb21lb25lIHdobyBjb25zaWRlcmVkIGhpbXNlbGYgcHVyZWx5IGhldGVyb3NleHVhbCBiZWZvcmVoYW5kLCBhbmQgdGhyb3VnaCBMU0QsIHJlY29nbml6ZWQgdGhhdCBwZW9wbGUgYXJlIGp1c3QgcGVvcGxlLiBJIHRoaW5rIHRoYXQncyBhIGJlYXV0aWZ1bCB0aGluZy4KVGhlbiBJIGJlZ2FuIHlhd25pbmcgYW5kIGdldHRpbmcgYnJhaW4gZm9nIGluIHRoZSBtaWRkbGUgb2YgdGhlIGRheSBhIGZldyBob3VycyBhZnRlciBteSBwb3N0IHdvcmtvdXQgbWVhbCAobXkgYmlnZ2VzdCBtZWFsKS4gCk5vdCBtdWNoIHRhbGtpbmcsIGFsbW9zdCBubyBsYXVnaGluZy4gCkJvdGggc2lkZXMgZGlkbid0IGNyZWF0ZSB0aGlzIHByb2JsZW0uIFRoZSBHT1AgYXMgYSB3aG9sZSBoYXMgYmVjb21lIGZhciBtb3JlIHJhZGljYWxpemVkIHNpbmNlIDIwMDAsIGFuZCBlc3BlY2lhbGx5IGFmdGVyIDIwMDguIEZpbGlidXN0ZXJpbmcgZGVtb2NyYXQgbGVkIGxlZ2lzbGF0aW9uLCByZWZ1c2luZyB0byBhcHBvaW50IE1lcnJpY2sgR2FybGFuZCwgc2h1dHRpbmcgZG93biB0aGUgZ292dCByZXBlYXRlZGx5IGJlY2FtZSBhIG5ldyBub3JtIHVuZGVyIE1pdGNoIE1jQ29ubmVsbC4gCkFwcmlsIDIwMTcgZmZuZXRlbiBzaWNoIGRpZSBncm9lbiBFaWNoZW50cmVuIHVuZCBkaWUgc2NobXVja2VuIFBhcmtwbGF0enNjaHJhbmtlbiAod2llIHNjaG4gZGllIHNjaHdlcmVuIFRyZW4gdW5kIG9oYSBlaW4gZWlnZW5lciBQYXJrcGxhdHosIGRhcyBpbiBCYWQgV3Jpc2hvZmVuKSBzZWl0ZGVtIGdlaGVuIHNpZSBuaWNodCBtZWhyIG9mdCB6dSB1bmQgZGFzIGlzdCBhdWNoIGd1dCBzby4gCk5vaXNlIHBvbGx1dGlvbiBpc24gYSBuZXcgdGhpbmcsIGFzIGhlIGRlbW9uc3RyYXRlcy4gRXZlbiBmb3IgYW4gYXJpc3RvY3JhdCwgZG93bnRvd24gbGl2aW5nIHdhcyBsb3VkLiBOb3Qgb25seSBkaWQgeW91IGhhdmUgdGhlIGNvbnN0YW50IHJ1Y2t1cyBvZiB0aGUgc3RyZWV0LCBzdGFydGluZyB3aXRoIHRoZSByYXR0bGluZyBvZiB0aGUgY2FydHMgYmVmb3JlIGRhd24gKGhlYXZ5IHRyYWZmaWMgd2FzIGZvcmJpZGRlbiB0aHJvdWdoIHRoZSBkYXkgaW4gYW4gYXR0ZW1wdCB0byBhbGxvdyBmb3Igc29tZSBtb2JpbGl0eSksIHRoZW4gc3dlbGxpbmcgYXMgdGhlIHN0cmVldHMgZmlsbGVkIHdpdGggdGhlIHVzdWFsIGJ1c2luZXNzLiAKMTAsIDIwMDYsIFRob3JudG9uIGhhZCBwbGF5ZWQgbGVzcyB0aGFuIHRocmVlIG1pbnV0ZXMgd2hlbiBoZSBjcnVuY2hlZCBCcnVpbnMgZGVmZW5jZW1hbiBIYWwgR2lsbCBpbnRvIHRoZSBlbmQgYm9hcmRzLCByZWNlaXZpbmcgYSBtYWpvciBhbmQgYSBnYW1lIG1pc2NvbmR1Y3QuIEVUIHN0YXJ0KSBhcyB0aGUgTGVhZnMgYmVnaW4gYSBmb3VyIGdhbWUgdHJpcC4uIApQcm8gZm9yIG1lOiBubyBpbnZlc3RtZW50IG9uIHB1cmNoYXNlIHByaWNlIGZvciBhIGhvcnNlLiAKP1RoZSBJbmRpYW4gUG9rZXIgaW5kdXN0cnkgaXMgY3VycmVudGx5IHBlZ2dlZCBhdCBVU0QgMTIwIG1pbGxpb24gd2l0aCBvdmVyIG9uZSBtaWxsaW9uIFBva2VyIHBsYXllcnMgaW4gSW5kaWEsIFdlIGxvb2sgZm9yd2FyZCB0byBnZW5lcmF0ZSByZXZlbnVlcyB0aHJvdWdoIHJlZ2lzdHJhdGlvbiBhbmQgZW5kb3JzZW1lbnRzIGFuZCByZWdpc3RyYXRpb24gb2YgTWF0Y2ggUG9rZXIgQXBwIHBlciBkb3dubG9hZCw/IHNhaWQgUmFqLiAoQU5JIE5ld3NWb2lyKQpUaGVyZSBhcmUgbm8gZmFjdGlvbnMgY2FsbGVkICJUaGUgaGlnaCBlbHZlcyIgb3IgIlRoZSBkYXJrIGVsdmVzIi4uIApQb3VyIHZpdGVyIHF1J3VuZSB0ZWxsZSBzaXR1YXRpb24gc2UgcmVub3V2ZWxsZSwgbGEgcG9wdWxhdGlvbiBkZSBsYSB2aWxsZSBkJ0FybGluZ3RvbiBhIGRjaWQgZGUgY3JlciB1biBzeXN0bWUgcXVpIGNvbnNpc3RlICBmYWlyZSBhcHBlbCBhdSBwdWJsaWMgcG91ciBvYnRlbmlyIGRlcyByZW5zZWlnbmVtZW50cyBzdXIgdW4gZW5sdmVtZW50IGQnZW5mYW50LiBTb250IGFsb3JzIHV0aWxpc3MgZGVzIHBhbm5lYXV4IHB1YmxpY2l0YWlyZXMsIGRlcyBhZmZpY2hhZ2VzIHN1ciBsZXMgcm91dGVzLCBkZXMgaW50ZXJydXB0aW9ucyBkZSBwcm9ncmFtbWVzIHJhZGlvIGV0IHRsdmlzcyBwb3VyIGRvbm5lciBkZXMgaW5mb3JtYXRpb25zIHBvdXIgcmV0cm91dmVyIGwnZW5mYW50IGVubGV2LgpUaGUgUm9kZW8gU2ltaWxhciB0byB0aGUgQnJvbmNvLiBBbmQsIGlmIHlvdSdyZSBpbnRvIGl0LCBqdXN0IHRoaW5rIG9mIGFsbCB0aGUgZm9vdCBtYXNzYWdlcyBoZWFkZWQgeW91ciB3YXkhIFZveWV1cmlzbSBBIG9uIGZldGlzaGVzIHB1Ymxpc2hlZCBpbiB0aGUgSm91cm5hbCBvZiBTZXggUmVzZWFyY2ggZm91bmQgdm95ZXVyaXNtICAgb3Igb2J0YWluaW5nIHNleHVhbCBwbGVhc3VyZSBmcm9tIHdhdGNoaW5nIG90aGVycyB3aG8gYXJlIG5ha2VkIG9yIGhhdmluZyBzZXggICB0byBiZSBvbmUgb2YgdGhlIG1vc3QgY29tbW9uIGZldGlzaGVzLiAKT3VyIE1hc3NhZ2UgVGhlcmFweSBQcm9ncmFtIGNvbnRlbnQgbWVldHMgTmV3IEplcnNleSByZXF1aXJlbWVudHMgdG8gYmUgYWJsZSB0byBieXBhc3MgdGFraW5nIHRoZSBNQkxFeCwgeWV0IHN0aWxsIHJlY2VpdmUgYSBOZXcgSmVyc2V5IG1hc3NhZ2UgbGljZW5zZSEuIApBbmQgZHVyaW5nIHlvdXIgcm9tYW50aWMgZ2V0YXdheSwgYmUgc3VyZSB0byBpbmR1bGdlIGluIGEgc3BhIHRyZWF0bWVudC4gT25lIHBvcHVsYXIgb3B0aW9uIGlzIHRoZSBDb3VwbGVzIFdhcm0gU2Vhc2hlbGwgTWFzc2FnZSwgd2hpY2ggdXNlcyB3YXJtIHNlYXNoZWxscyB0byBzb290aCBtdXNjbGVzIGFuZCByZWxpZXZlIHN0cmVzcy4uIAoxMCkgUG9sYXJpemVkIGxpZ2h0IGNhbiBjaGFyYWN0ZXJpemUgdGhlIG1pY3Jvc3RydWN0dXJhbCBvcmdhbml6YXRpb24gb2YgdGhlIGNvbGxhZ2VuIGZpYmVycyBpbiBzb2Z0IHRpc3N1ZS4KQmlsbCBWYXVnaG4gVm9sLiAKS2FtaWthemUgdGFjdGljcyB1c2VkIGluIFVTIGRlYnQgYmF0dGxlCklmIEkgaGFkIHRvIG1ha2UgZ3Vlc3NlcyBJJ2Qgc2F5IGF0IHRoZSB2ZXJ5IGxlYXN0IGhlIGlzIG1pbGRseSBhcnRpc3RpYyBidXQgYmVsaWV2ZSBoZSBkb2VzIGhhdmUgZGVlcGVyIG1lbnRhbCBoZWFsdGggaXNzdWVzLiAKSWYgeW91IGVsZWN0IHRvIGdldCBhIHR3byBzaWRlZCBjYXJkLCB1c2UgdGhlIG90aGVyIHNpZGUgdG8gYXMgYSBzcGFjZSB0byB3cml0ZSBjbGllbnQgYXBwb2ludG1lbnRzLCBvciBpbmNsdWRlIGEgdG9wIHRlbiBsaXN0IGRlc2NyaWJpbmcgdGhlIGJlbmVmaXRzIG9mIG1hc3NhZ2UgdGhlcmFweS4uIApMYSBub3V2ZWxsZSBleHByZXNzaW9uIHNlbWJsZSBwbHVzIGFkcXVhdGUgZW4gcmVudm95YW50ICBsJ2lkZSBkZSAgZmFjdWx0cyBtZW50YWxlcyAuIApBdCBmaXJzdCwgSSB0aG91Z2h0IGl0IHdhcyBjb29sIHRoYXQgeW91IGFuZCB0aGUgbWFqb3JpdHkgb2YgeW91ciB0ZWFtIGhhZCBuZXZlciB3b3JrZWQgYXQgYW4gYWdlbmN5LCBidXQgdGhlbiByZWFsaXR5IHNldCBpbiAgIGFzIHNtYXJ0IGFzIHlvdSBhcmUsIHlvdSBoYWQgbm8gY2x1ZSBhYm91dCBjdWx0aXZhdGluZyBhbiBhdG1vc3BoZXJlIHdoZXJlIGNyZWF0aXZlIHNvbHV0aW9ucyBjYW4gZmxvdXJpc2guIE5vdCBvbmx5IGRpZCB5b3UgbGFjayBleHBlcmllbmNlLCB5b3UgaGVsZCBhZHZlcnRpc2luZyBpbiBkaXNkYWluIGJlY2F1c2UgeW91IHdlcmUgc21hcnRlciB0aGFuIGFkdmVydGlzaW5nIHBlb3BsZS4gWW91IGFjdHVhbGx5IHRvbGQgeW91ciBwZW9wbGUgdGhpcywgbm90IGNhcmluZyB0aGF0IG1vc3Qgb2YgdGhlbSB3ZXJlIGluIGZhY3QgYWR2ZXJ0aXNpbmcgcGVvcGxlLi4gCkNhbmFkYSdzIFJ5ZGVyIEhlc2plZGFsIGlzIGJ1aWxkaW5nIGZvciB0aGUgR2lybyBkJ0l0YWxpYSB3aXRoIGEgd2VlayBvZiBmdWxsIHRocm90dGxlIHJhY2luZyBpbiBUaGUgTmV0aGVybGFuZHMgYW5kIEJlbGdpdW0uIApPbmUgdmVyeSBkYW5nZXJvdXMgc3lzdGVtIHRvIGdldCBpbnZvbHZlZCB3aXRoIGlmIHlvdSBhcmUgYSBHYW1ibGluZyBQb2tlciBiZWdpbm5lciBpcyB0aGUgTmVnYXRpdmUgUHJvZ3Jlc3Npb24gQmV0dGluZyBTeXN0ZW0uIApMZXQgY29udGludWUgdG8gcmVhZCB0aGUgbWVzc2FnZSBvZiBHb2QuLiAKWW91IGFjdHVhbGx5IGRvbiB1bmRlcnN0YW5kIHRoZSBjb25jZXB0IG9mIG1vdmVtZW50IGluIHRoZSBnYW1lIHlldCwgYmVpbmcgYWJsZSB0byBtb3ZlIHZzIGtub3dpbmcgd2h5IGFuZCB3aGVuIHRvIG1vdmUgYXJlIGRpZmZlcmVudCB0aGluZ3MuIApJdCBkb2VzbiB0YWtlIG11Y2ggdG8gcmVhbGl6ZSB0aGF0IGV2ZW4gbGVhdmluZyBhc2lkZSBzb2NpYWwgc3RpZ21hLCB0aGlzIGRyZWFtIGluZHVzdHJ5IGlzIGp1c3QgdGhhdCAgIGEgZHJlYW0uIEF0IHRoZSBwcmljZSB3aGVyZSBwcm9zdGl0dXRpb24gaXMgZmFpcmx5IGNvbXBlbnNhdGVkLCBtYW55IHBlb3BsZSB3aG8gd291bGQgd2FudCB0byBidXkgc2VydmljZXMgY291bGQgbm90IGFmZm9yZCB0aGVtLiBXaGljaCBpcyBwcm9iYWJseSB3aHkgdHJhZmZpY2tpbmcgaXMgYSBodWdlIGlzc3VlIGV2ZW4gd2hlcmUgaXQgbGVnYWwuLiAKRnJvbSB3aGF0IEkga25vdyBpdCBzZWVtcyBsaWtlIHlvdXIgbG9uZWx5IHdoaWNoIGlzIHByZXR0eSBjb21tb24gYXJvdW5kIHRoZSB3b3JsZCBhbmQgdGhhdCdzIHdoeSBhdCBsZWFzdCB5b3UgY2FuJ3QgZW5nYWdlIGluIG5vcm1hbCBjb252ZXJzYXRpb24gYmVjYXVzZSB5b3VyIGxvbmVsaW5lc3MgaGFzIGlzb2xhdGVkIHlvdSBhbmQgeW91J3ZlIG5vdCBiZWVuIGFibGUgdG8gImJydXNoIHVwIiBvbiB5b3VyIHNvY2lhbCBza2lsbHMgd2hpY2ggaXNvbGF0ZWQgeW91IGZ1cnRoZXIsIHRoaXMgbWlnaHQgYWxzbyBiZSB3aHkgeW91IGhhdmUgc3VjaCBhIGJsZWFrIHZpZXcgb24gbGlmZSBiZWNhdXNlIHdlIGFyZSBhIHZlcnkgc29jaWFsIHNwZWNpZXMsIGV2b2x2aW5nIGluIHBhY2tzIGFuZCB0cmliZXMsIHNvIHdoZW4gc29tZW9uZSBpcyBvbiB0aGVpciBvd24gaXQgbWFrZXMgdGhlbSBmZWVsIHVuZGVydmFsdWVkIGFuZCB1bmRlciBhcHByZWNpYXRlZCBhcyB0aGV5IGhhdmUgbm8gb25lIHRvIHNoYXJlIHRoZWlyIGxpZmUgd2l0aApFdCBkZXMgaG9tbWVzIGV0IGRlcyBmZW1tZXMgcXVpIG9ldXZyYWllbnQuLiAKVGhlIExpdHRsZSBSb2NrIFBvbGljZSBEZXBhcnRtZW50IGhhcyBhIGRpZmZlcmVudCB0YWtlIG9uIHRoZSBsYXcuIFNndC4gVGVycnkgSGFzdGluZ3MsIHRoZSBkZXBhcnRtZW50J3Mgc3Bva2VzcGVyc29uLCBzYXlzIHRoYXQgZXZlbiB0aG91Z2ggdGhlIFVuaXRlZCBQb2tlciBMZWFndWUgd291bGQgbm90IGF3YXJkIG1vbmV5IG9yIHByaXplcywgdGhlIGdhbWVzIGNvdWxkIGxlYWQgdG8gY2FzaCBwcml6ZXMgaWYgdGhlIGxvY2FsIHdpbm5lcnMgcXVhbGlmaWVkIGZvciBuYXRpb25hbCB0b3VybmFtZW50cy4KVGhlcmUgYXJlIGV2ZW4gb3JnYW5pemF0aW9ucyBzcGVjaWZpY2FsbHkgY3JlYXRlZCB0byByYWlzZSBtb25leSBmb3IgVEhPTiwgYW5kIG1vc3QgY2x1YnMgcGFydGljaXBhdGUgYXMgd2VsbC4gCkluIGdlbmVyYWwsIEknZCBzYXkgaWYgeW91J3JlIG5vdCBleGNpdGVkIHRvIGRvIGl0LCBkb24ndC4gCiJJIExvdmUgWW91IHRvIERlYXRoIiAgIFdpbGxpYW0gSHVydCBhbmQgUmVldmVzIHBvcnRyYXkgY29tZWRpYyBidW1ibGluZyBoaXRtZW4gaGlyZWQgdG8ga2lsbCBhIFBpenphIFJlc3RhdXJhbnQgT3duZXIsIGl0IGRhcmsgYW5kIGZ1bm55LiBSZWV2ZXMgZG9lcyBhIGdyZWF0IGpvYiBhbmQgY29tcGxpbWVudHMgYW4gaW5kaXNwdXRhYmxlIG1hc3RlciBsaWtlIEh1cnQgcmVhbGx5IHdlbGwuIEEgdHJ1bHkgYmFkIGFjdG9yIHdvdWxkbiBiZSBhYmxlIHRvIGFjdCBhbG9uZ3NpZGUgSHVydCBhbmQgY29tZSBvdXQgbWVtb3JhYmxlIG9yIGV2ZW4gbG9va2luZyBnb29kLiAKTCdlbmZhbnQgdHJvdXYsIG91IGRvbnQgbGEgbXJlIGEgc291aGFpdCBnYXJkIGwnYW5vbnltYXQsIHNlIHZvaXQgYXR0cmlidSB1biBub20gcGFyIGwnb2ZmaWNpZXIgZCd0YXQgY2l2aWwgKEFydC4gQ2V0dGUgYXR0cmlidXRpb24gZXN0IGFubnVsZSBwYXIgbCd0YWJsaXNzZW1lbnQgZCd1biBsaWVuIGRlIGZpbGlhdGlvbiAoYWN0ZSBkZSBuYWlzc2FuY2UgcmV0cm91diBvdSBuYWlzc2FuY2UganVkaWNpYWlyZW1lbnQgZGNsYXJlKS4uIApQb3VydGFudCBRdWUgZCd1dnJlcyB2b2x1cHR1ZXVzZXMgYXZvbnMgbm91cyBhdXNzaSBhY2NvbXBsaWVzICEgQXUgbWlsaWV1IGRlcyBkc2FzdHJlcywgY29tbWUgcG91ciBsZXMgY291cm9ubmVyIGVuIG1tZSB0ZW1wcyBxdWUgZGUgbGVzIGV4b3JjaXNlciBldCBsZXMgYW5hbnRpciBwYXIgbGUgVmVyYmUsIG5vdXMgYXZvbnMgbGV2IGRlcyBJbnN0YW50cyBkZSBTYWNyZSwgZGVzIE1vbWVudHMgZCdleHRhc2VzIGRlc3N1cyBsZXMgY2hhcm5pZXJzLCBkZXMgTGFybWVzIGQnZXNwcmFuY2Ugc3VyIGRlcyBjYWRhdnJlcyBmcmF0cmljaWRlcywgZGVzIG1vdHMgZCdBbW91ciBjb25qdXJhbnQgbm90cmUgc29ydCBuZmFzdGUuCkhlIHJlcG9ydGVkbHkgd29ya2VkIG9uIGEgRm9yZCBBc3NlbWJseSBsaW5lOyBhbmQsIGFzIGhpcyBsZWdlbmQgd291bGQgaGF2ZSBpdCwgaGUgd29uIGEgc2Nob2xhcnNoaXAgdG8gQ29sdW1iaWEgYW5kIHRoZW4gZ290IHRoZSBzY2hvb2wgdG8gZG91YmxlIGl0LiAKQWxzbywgTWFnaXN0ZXIgVW1icmljIHdhcyBjb25zaWRlcmVkIGEgc2luZG9yZWkgd2hlbiBoZSBhbmQgYSBmZXcgb3RoZXJzIGNoYXNlZCBhZnRlciB0aGUgdm9pZCBhbmQgYmVjYW1lIHRoZSBWb2lkIEVsdmVzLiAKWW91IGRvbid0IGhhdmUgdG8gYmUgcnVkZSBhYm91dCBpdCwgeW91IGNhbiBzaW1wbHkgcmVwZWF0IHRob3NlIHdvcmRzIHRvIGhlciBhbmQgcmVmdXNlIHRvIGVuZ2FnZSBmdXJ0aGVyLiBJZiB5b3UgcmVhbGx5IHdhbnQgdG8gYmUgZGlwbG9tYXRpYywgeW91IGNvdWxkIGFsd2F5cyBvZmZlciB0byBjb21wcm9taXNlIG9uIGNlcnRhaW4gbW92aWVzLiBTYXkgaW5zdGVhZCBvZiBzdHJpY3RseSByZWx5aW5nIG9uIGEgZ2VuZXJpYyByYXRpbmcgc3lzdGVtLCB5b3UgZ3V5cyBjb3VsZCBlYWNoIHZpZXcgdGhlIHByb2dyYW1zL21vdmllcyBiZWZvcmUgaGFuZCBhbmQgdHJ5IHRvIGNvbXByb21pc2U/IFNheSBSaWNrIGFuZCBNb3J0eSBpcyBvZmYgdGhlIHRhYmxlLCBidXQgQW1lcmljYW4gZGFkIGNvdWxkIGJlIHNldHRsZWQgb24/IFNvbWV0aGluZyBsaWtlIHRoYXQ/LiAKMTkuU2hlIHRvb2sgdGhlIHRocmVlIHRvIGhlciBob21lIGluIExlZnRoYW5kIENhbnlvbiBhcyB0aGV5IHRyaWVkIHRvIGZpZ3VyZSBvdXQgaG93IHRvIGdldCBiYWNrIGRvd24gdG8gQm91bGRlciwgaW52ZXN0aWdhdG9ycyB3cm90ZS5Nb250Z29tZXJ5LCB3aG8gdG9sZCBpbnZlc3RpZ2F0b3JzIGhlIHVzZWQgaGVyb2luIHdoaWxlIHRoZSB0aHJlZSB3ZXJlIGNhbXBpbmcgaW4gdGhlIGFyZWEgdGhlIG5pZ2h0IGJlZm9yZSwgc2FpZCBDb2xsaW5zIGFza2VkIGhpbSAidG8gaGVscCBoaW0gYXNzYXVsdCBLdWxwYSBzbyB0aGV5IGNvdWxkIHN0ZWFsIGhlciBjYXIsIiBidXQgdGhhdCBoZSBkZWNsaW5lZC5XaGlsZSB0aGV5IHdlcmUgb3V0c2lkZSB0aGUgaG91c2UgbmVhciBhIGZpcmUgcGl0LCBNb250Z29tZXJ5IHNhaWQsIEt1bHBhIGNhbWUgb3V0c2lkZSBhbmQgc2FpZCBzaGUgaGFkIHJvb20gZm9yIHRoZSB0aHJlZSB0byBzdGF5LiBBcyBzaGUgdHVybmVkIGF3YXksIE1vbnRnb21lcnkgc2FpZCwgQ29sbGlucyBoaXQgS3VscGEgaW4gdGhlIGJhY2sgb2YgdGhlIGhlYWQgd2l0aCBhIG1ldGFsIHRpcHBlZCBzdGljayB1c2VkIGFzIGEgImZpcmUgcG9rZXIsIiBhY2NvcmRpbmcgdG8gdGhlIGFmZmlkYXZpdC5Nb250Z29tZXJ5IHRvbGQgZGV0ZWN0aXZlcyB0aGF0IGhlIHNhdyBDb2xsaW5zICJ0YWtlIGEgZnVsbCBzd2luZywgb25lIHdoZXJlIEplZmZyZXkgcHV0IGEgbG90IG9mIGZvcmNlIGFuZCBlZmZvcnQgaW50byB0aGUgc3dpbmcsIiBhY2NvcmRpbmcgdG8gdGhlIGFmZmlkYXZpdC5Nb250Z29tZXJ5IGFuZCB0aGUganV2ZW5pbGUgZ2lybCByYW4gdG8gYSBuZWlnaGJvcidzIGhvdXNlIHRvIGZpbmQgc29tZW9uZSB3aG8gY291bGQgY2FsbCA5MTEsIGFuZCBoZSByZXBvcnRlZCBzZWVpbmcgQ29sbGlucyBnZXQgcGlja2VkIHVwIGJ5IHNvbWVvbmUgZHJpdmluZyBhIHdoaXRlIGhhdGNoYmFjay5TaG9ydGx5IGFmdGVyIENvbGxpbnMnIGFycmVzdCBvbiBTZXB0LiAKSW4gc29tZSBjdWx0dXJlcywgaXQgY29udmV5cyAiYWdlIDY1IGFuZCBhYm92ZSwiIG9yIHRoYXQgYSBwZXJzb24gaXMgYXQgdGhlaXIgcmV0aXJlbWVudCBhZ2UsIGJ1dCB3aXRoIHBlb3BsZSBpbmNyZWFzaW5nbHkgcmV0aXJpbmcgbGF0ZXIgYW5kIGVuam95aW5nIGdvb2QgaGVhbHRoIGZvciBsb25nZXIsIHRoZXNlIG1lYW5pbmdzIGFyZSBpbmNyZWFzaW5nbHkgYmx1cnJlZC4uIApBdXN0cmFsaWFuIGhlcmUuIFlvdSBwcm9iYWJseSB0aGluayBJIGdvaW5nIHRvIHNheSBzb21lIGhlY3RpYyBzcGlkZXIgb3Igc25ha2Ugb3IgY3JvY29kaWxlIG9yIHNvbWUgb3RoZXIgdmVub21vdXMgZGVhdGggZGVhbGVyLiAKVGhlIGJvb2ssIHdyaXR0ZW4gYnkgRHV0Y2ggam91cm5hbGlzdCBUaGlqcyBab25uZXZlbGQsIGluY2x1ZGVkIHNvbWUgbHVyaWQgYWNjb3VudHMgb2YgZG9waW5nLCBwcm9zdGl0dXRlcyBhbmQgb3RoZXIgYmFkIGJlaGF2aW9yIGR1cmluZyBoaXMgdGltZSB3aXRoIFJhYm9iYW5rIGF0IHRoZSBzdGFydCBvZiBoaXMgY2FyZWVyLiAKSGUgY2xhaW1zIGdvZCBoYXMgaGFkIHRyb3VibGUgZW5kaW5nIHRoZSB3b3JsZCByZWNlbnRseSBkdWUgdG8gbW9kZXJuIG1pc3NpbGUgZGVmZW5zZSBzeXN0ZW1zLiAKVGhleSBsYXVnaGVkICJTaGUgaXMgb3BpdW0gYWRkaWN0ZWQiICh0aGVpciBvbmx5IEVuZ2xpc2gpIGFuZCBnYXZlIGhlciBhIGJpZyBjaHVuayB0byBlYXQuIApTbyBjb2xsZWdlIHdhcyBwcmV0dHkgc3dlZXQuIApEaWUgQnJ1aW5zIG0gbWl0IGRlbSBSZWNodHNhdSBkZXIgaGV1ZXIgenVtIEZpbmFsaXN0ZW4gZGVyIExhZHkgQnluZyBUcm9waHkgYXZhbmNpZXJ0ZSwgZ2VybmUgdmVybCBBbGxlcmRpbmdzIHppZWhlbiBzaWNoIGRpZSBHZXNwciBzY2hvbiBzZWl0IEphbnVhciBoaW4uIApUaGVuIGhlIHRocm93cyBhIHNlY29uZCBleHBsb3NpdmUgdGFuayBhbmQgSSBidXJuIHlvdXIgZGVhdGggd2hpbGUgdGhlIGJpZyBiYWQgZXNjYXBlcyB0aGUgZmxhbWVzIGtpbGxzIGFub3RoZXIgUEMsIG91ciBmb3VydGggb2YgYmVnaW5zIHNob290aW5nIGF0IHRoZSB0aHJvd2VyIFBDIGFuZCB0aGF0IHdoZW4gd2UgZGVjaWRlZCB0byBlbmQgdGhhdCBjYW1wYWlnbi4uIApXaGF0IHRoZSBkaWZmZXJlbmNlIGlzIGJldHdlZW4gdHJhZGl0aW9uYWwgc3BlY3MgYW5kIEFnaWxlICJ1c2VyIHN0b3JpZXMiOwpJZiB5b3UgZm91bmQgYSBwaG90bywgdmlkZW8sIG9yIHBob3RvIGVzc2F5IG9mIHBlb3BsZSBmcm9tIHRoZSBwYXN0IGxvb2tpbmcgZmFudGFzdGljLCBoZXJlIHRoZSBwbGFjZSB0byBzaGFyZSBpdC4KWW91IGFsc28gY2FuJ3QgZW5qb3kgdGhlIGZ1bGwgcmFuZ2Ugb2YgeW91ciBzb3VuZCBzeXN0ZW0gaW4gYW4gYXJlYSB3aGVyZSB0aGUgcmVzdCBvZiB0aGUgZmFtaWx5IGlzIHRyeWluZyB0byBoYW5nIG91dC4gCk5hdGlvbmFsaXNtIGlzIHNvIGZsZXhpYmxlIHVuZGVyIE9ydGVnYSBhcyB0byBiZSB0aWVkIHVwIGluIGEga25vdC4gc28gcmVhbCB3b21lbiBhcmUgbG9zaW5nIHRoZWlyIGxpdmVzIGFzIGNvbW11bml0aWVzIG9mICJyZWFsIiBOaWNhcmFndWFucyBhcmUgcHJvdGVjdGVkIGFnYWluc3QgImJhZCIgZm9yZWlnbmVycywgdW5sZXNzIHRoZSBmb3JlaWduZXIgY2FuIGhlbHAgZ2V0IHlvdSBpbnRvIHBvd2VyLiBhIGN5bmljYWwgZW5kaW5nIHRvIHRoZSBjb21wbGljYXRlZCBoaXN0b3J5IG9mIHRoZSBTYW5kaW5pc3RhIFJldm9sdXRpb24uCkkgd2FsayBpbnRvIHRoZSBwYXRpZW50IHJvb20sIGFuZCBJJ20gaW1tZWRpYXRlbHkgZ3JlZXRlZCBieSBhIGRpc2d1c3Rpbmcgcm90dGluZyBmbGVzaCBzbWVsbC4gV29yc3QgdGhpbmcgSSd2ZSBzbWVsbGVkIGluIG15IGxpZmUuIApEYWVoYW5taW5kZWNsaW5lICAzIHBvaW50cyAgc3VibWl0dGVkIDEwIGRheXMgYWdvCkkgdGhpbmsgd2UgQW1lcmljYW5zIGFyZSBnb2luZyB0byB0YWtlIEluZGlhIHNpZGUgYmVjYXVzZSB3ZSBuZWVkIHRoZW0gdG8gY29udGFpbiBDaGluYS4gClRoZSBVUyB3aWxsIG5vdCBiZSBjb3dlZC4gSXQgd2lsbCBvbmx5IG1vdmUgdG93YXJkcyBmdXJ0aGVyIGdyZWF0bmVzcyB1bmRlciBQcmVzaWRlbnQgVHJ1bXAuIApNYXR0ZXIgaG93IHNvcGhpc3RpY2F0ZWQgdGhlIHBsYXRmb3JtIG9yIGhvdyB3ZWxsIGRlc2lnbmVkIHRoZSB1c2VyIGV4cGVyaWVuY2UsIHRoZSBnYW1lIHdpbGwgb25seSBiZSBzdWNjZXNzZnVsIGlmIHRoZXJlIGlzIGEgY3JpdGljYWwgbWFzcyBvZiBwbGF5ZXJzIG9ubGluZSBhdCBhbnkgZ2l2ZW4gdGltZSwgc2hlIHdyb3RlLiBQb2tlciByb29tcyBuZWVkIGEgcmFuZ2Ugb2Ygc2tpbGwgbGV2ZWxzIGFuZCBidXkgaW4gbGV2ZWxzLiAKSW4gYWRkaXRpb24gdG8gdGVhbSBhbmQgaW5kaXZpZHVhbCBhdGhsZXRpYyB0cmFpbmluZywgc2thdGVycyBob2xkIHBvc2l0aW9ucyBvbiB2YXJpb3VzIGNvbW1pdHRlZXMgdG8ga2VlcCB0aGUgYWxsIHZvbHVudGVlciBvcmdhbml6YXRpb24gcnVubmluZy4gVGhlIGxlYWd1ZSBpcyBhIG5vbiBwcm9maXQgb3JnYW5pemF0aW9uLCBvcGVyYXRlcyB1bmRlciB0aGUgZ3VpZGVsaW5lcyBvZiB0aGUgV29tZW4ncyBGbGF0IFRyYWNrIFJvbGxlciBEZXJieSBBc3NvY2lhdGlvbiAoV0ZUREEpIGFuZCBpcyBydW4gY29tcGxldGVseSBieSB2b2x1bnRlZXJzLkFib3V0IFJvbGxlciBEZXJieVJvbGxlciBEZXJieSBpcyBhbiBBbWVyaWNhbiBtYWRlIGNvbnRhY3Qgc3BvcnQgdGhhdCBvcmlnaW5hdGVkIGluIHRoZSBlYXJseSAxOTAwcy4gVGhlIHNwb3J0IHdhcyBoaWdobHkgcG9wdWxhciBpbiB0aGUgMTk3MHMgd2hlbiBwcm9mZXNzaW9uYWwgbWF0Y2hlcyB3ZXJlIHRlbGV2aXNlZCBhbmQgdGhlIHNwb3J0IHNoYXJlZCBhIHJlcHV0YXRpb24gZm9yIHN0YWdlZCBhY3Rpb24uIApJbiB0aGUgc2Vjb25kIGV4YW1wbGUgaXQgZGVwZW5kcyBhZ2FpbiBvbiBjb250ZXh0ICwgaW4gdGhpcyBjYXNlIGhvdyBob3cgeW91IGRvaW5nIGVjb25vbWljYWxseSBhbmQgaW4gYXJteSBzdHJlbmd0aCBhbmQgaG93IHRoZXkgZG9pbmcuIElmIHRoZXkgaGF2ZSBhIGh1Z2UgYXJteSBhbmQgeW91IHRyYWRlIG91dCBoYWxmIG9mIHlvdXJzIGZvciB0aGVpciB0aGlyZCB0aGVuIGluIHNvbWUgY2FzZXMgeW91IGp1c3QgZGVhZC4gQSBnb29kIHBsYXllciB3aWxsIHNlbnNlIHRoZWlyIGFkdmFudGFnZSBhbmQgbW92ZSBhY3Jvc3MgdGhlIG1hcCBhbmQga2lsbCB5b3UuIEluIGFub3RoZXIgY2FzZSBoZXkgY291bGQgY29tZSBhbmQga2lsbCB5b3VyIGV4cGFuc2lvbiBpbiByZXRhbGlhdGlvbiwgbGVhdmluZyB0aGVtIHNhbWUgdG8gcmVwbGFjZSB0aGUgZXhwYW5zaW9uIHdoaWxlIGtlZXBpbmcgeW91IGJveGVkIGluLiBPZnRlbiB0aGlzIHdpbGwgcmVzdWx0IGluIGEgc2xvd2VyIGxvc3MgYnV0IGEgbG9zcyBhbGwgYmUgc2FtZS4KT24gdGhlIFRoaWVsZW4gcGxheSwgSmFja3NvbiBoYWQgb3V0c2lkZSBsZXZlcmFnZSBvbiBhbiBvdmVydGhyb3duIGJhbGw7IGJvdGggcGxheWVycyB3ZXJlIGZhY2luZyB0aGUgYmFsbCwgYW5kIFRoaWVsZW4gaGFkIHRvIGluaXRpYXRlIGNvbnRhY3Qgd2l0aCBKYWNrc29uIHRvIGdldCB0aGVyZSBoZSBoYWQgdG8gbWFrZSBpdCB0aHJvdWdoL292ZXIgaGltIHRvIG1ha2UgYSBwbGF5IG9uIHRoZSBiYWxsLiAKV291bGQganVzdCBiZSBhbm5veWluZyBpZiB5b3Ugd2FudCB0byBjYXB0dXJlIG11bHRpcGxlIG1vbnN0ZXJzIG9uIGEgcXVlc3QsIGFuZCA0LiAKVG9sZCBtZSBhIHN0b3J5IG9mIGEgd29tYW4gd2hvIGNhbWUgaW4gYW5kIHRvbGQgaGVyIHNoZSAiVGhpbmtzIHNoZSdzIGdvdCBhIHJhdCBpbiBoZXIgcHVzc3khIiBFeGN1c2UgbWUgbWEnYW0gd2hhdD8hIFdlbGwgYXBwYXJlbnRseSB3aGVuZXZlciBzaGUgYW5kIGhlciBtYW4gc3RhcnQgZ29pbmcgYXQgaXQgaGUgZmVlbHMgYSBzaGFycCBzdGluZyBvbiBoaXMgcGVuaXMgc28gbG9naWMgY29uY2x1ZGVzIHRoYXQgYSByYXQgaXMgbGl2aW5nIGluc2lkZSBoZXIgdmFnaW5hIGFuZCBiaXRpbmcgaGVyIG1hbnMgcGVuaXMgd2hlbmV2ZXIgdGhleSBoYXZlIHNleC4gCkFzIEkgc2FpZCBiZWZvcmUsIFBvbGFyb2lkIGZpbG0gaXMgcXVpcmt5IGFuZCBub3QgYWx3YXlzIHJlbGlhYmxlLiAKTm90aWNlIHRoZSBndXkgaW4gdGhlIHZpZGVvLCB3aGV0aGVyIHNsZWVwaW5nIG9yIGZha2luZywgc3RpbGwgaGFzIGhpcyBoYW5kIG9uIHRoZSB3aGVlbCBhdCA2IG8gSWYgeW91IHRha2UgeW91ciBoYW5kcyBvZmYgdGhlIHdoZWVsLCBBdXRvcGlsb3Qgd2lsbCBkaXNlbmdhZ2Ugd2l0aGluIGEgbWludXRlIG9yIHR3by4gClNvIHdoZW4gSSBzZWUgc29tZW9uZSBzdWdnZXN0aW5nIHNvbWV0aGluZyBsaWtlIHBvaW50aW5nIGZpbmdlcnMgYXQgU00sIEkgaW1hZ2luZSB3aGF0IGl0IG11c3QgYmUgbGlrZSBmb3IgdGhlIHBlb3BsZSB3aG8gd29yayBmb3IgdGhhdCBjb21wYW55IHRvZGF5LiAKQnV0IGhvdyBkb2VzIGEgbnVtYmVyIGNvbWUgb3V0IDggdGltZXMgYmVmb3JlIGFsbCBudW1iZXJzIGNhbWUgb3V0IGZvcm1lcmx5PyBGb3IgdGhlIHNhbWUgcmVhc29uIHRoYXQgYWZ0ZXIgaXQgYWN0dWFsbHkgc3RhcnRzIHRvIGRyaXp6bGUgaXQgdGFrZXMgYSB3aGlsZSB0byB3ZXQgdGhlIGVudGlyZSBwYXZlbWVudC4gVGhlIGRyb3BzIGFyZSBzdXBwb3NlZGx5IGZhbGxpbmcgcmFuZG9tbHksIHlldCB0aGV5IGhpdCB0aGUgYWN0dWFsIHBsYW5ldCBzYW1lIHNwb3QgcmF0aGVyIHRoYW4geW91IGFyZSBvbiBkcnkgZWFydGguIElmIHlvdSd2ZSBldmVyIG9ic2VydmVkIGl0LCBpdCB0YWtlcyBsb25nZXIgdG8gd2V0IGltcHJvdmluZyB5b3VyIGdlbmVyYWwgaGVhbHRoIGdyb3VuZCB0aGFuIHlvdSB3b3VsZCBleHBlY3QuIApQb2tlciByYWlzZXMgbW9uZXkgZm9yIHN0ZW0gY2VsbCB0cmVhdG1lbnQKVGhlIGhpZ2hlc3QgcmFua2VkIGNhcmQgaW4gYW55IGdpdmVuIGhhbmQuCldpdGggaXRzIGhpZ2hlc3QgaGlnaHMgYW5kIGxvd2VzdCBsb3dzLCBCZXZlcmx5IEJyb2FkdXMgR3JlZW4gaW50aW1hdGVseSBzaGFyZXMgaGVyIGpvdXJuZXkgZnJvbSBoZXIgcm9vdHMgaW4gdGhlIGRlZXAgc291dGggdG8gdGhlIGJyaWdodCBsaWdodHMgb2YgSG9sbHl3b29kLiAKQ2UgY29ycHMgc2VyYWl0IGNvbXBvcyBkZSBkZXV4IHZvbGV0cyBkb250IHVuLCBsZSB2b2xldCBldXJvcGVuIGRlIGxhIGZvcmNlLCBzZXJhaXQgZm9ybSBkJ2FnZW50cyBkaXJlY3RlbWVudCByZWNydXRzIHBhciBGcm9udGV4IGV0IGVudHJhaW5zIHBhciBsdWkuIEVuZmluLCBub3VzIHBvdXJyaW9ucyBpbWFnaW5lciBkZXMgZmllbGQgb2ZmaWNlcyBkZXMgb3JnYW5pc2F0aW9ucyBhdXhpbGlhaXJlcywgY29tbWUgRXVyb3BvbCwgYWJyaXRzIHBhciBsZXMgQ2VudHJlcyBkZSBjb29wcmF0aW9uIHBvbGljaXJlIGV0IGRvdWFuaXJlLiAKQ2hlZXJzLiAKSW4gY2FzZSBvZiBhIHJlYWwgZW1lcmdlbmN5IChmaXJlKSB3aGVyZSB5b3UgbmVlZCB0byBiZSBmYXN0LCBJIHVzdWFsbHkgaGFuZGxlIGNhdHMgcHJldHR5IHJvdWdobHkuIEkgZ3JhYiB0aGVtIGluIHRoZSBuZWNrLCBwdWxsIGl0IHVwLCBzdXBwb3J0IHRoZSBib3R0b20gd2l0aCBteSBvdGhlciBoYW5kIGFuZCB0YWtlIHRoZW0gb3V0LiAKRGlzY2xhaW1lcjogSSBvbmx5IHNraW1tZWQgdGhlIHByb2xvZ3VlIGFuZCByZWFkIHRoZSBmaXJzdCB0d28gcGFyYWdyYXBocy4gQWxzbyBJIHdyaXRlIHRleHRib29rcyBmb3IgYSBsaXZpbmcsIEkgaGF2ZSBuZWl0aGVyIHRoZSBwYXRpZW5jZSBub3IgdGhlIHRhbGVudCB0byB3cml0ZSBhIG5vdmVsLiBEaXNtaXNzaW5nIG15IGFkdmljZSB3b3VsZCBiZSB0b3RhbGx5IHVuZGVyc3RhbmRhYmxlLgpTaGUgbGlrZXMgTWF4LCBoZSBpcyBhbHdheXMgcmVhbGx5IG5pY2UgdG8gaGVyLiAKVmVyeSBzaGVsdGVyZWQgZnJvbSBoZXIgcmVsaWdpb3VzIGZhbWlseS4gCldoaWNoIGlzIG11Y2ggbW9yZSBpbXBvcnRhbnQgYW5kIGFkZHJlc3NpbmcgdGhhdCBzaG91bGQgYmUgeW91ciBwcmltYXJ5IGNvbmNlcm4gaGVyZS5tb21kYWRpbXBvcHB1bmsgIDEgcG9pbnQgIHN1Ym1pdHRlZCAxOSBkYXlzIGFnb0ZPTU8sIEkgZ3Vlc3MuIEkgdGhpbmsgb2Ygc29tZSBncmVhdCB0aGluZ3MgdGhhdCBoYXBwZW5lZCBpbiB0aGUgcGFzdCwgdGhpbmdzIEkgaGFkbid0IGV2ZXIgZXhwZWN0ZWQsIGFuZCBhIHBhcnQgb2YgbWUgaGFuZ3Mgb24gaW4gaG9wZSBzb21ldGhpbmcgdW5leHBlY3RlZCB3aWxsIGhhcHBlbiBhZ2Fpbi5JdCdzIGltcG9ydGFudCB0byByZWNvZ25pemUgdGhhdCB0aG9zZSBmZWVsaW5ncyBhcmVuJ3Qgbm9ybWFsLiAKUG9rZXIgQmxvZ0VTUE5jcmljaW5mbwpUaGlzIGlzIGEgY2FzZSB3aGVyZSB5b3UgZG9uJ3Qgd2FudCB0byBiZXQgYmlnIGFuZCBwdXNoIG91dCBwZW9wbGUgd2l0aCBtYXJnaW5hbCBoYW5kcy4gClF1aXRlIGEgZmV3IHBsYXllcnMgcmV2ZWFsIHF1aXRlIGEgYml0IGFib3V0IHRoZWlyIGhhbmRzIGJ5IHRoZWlyIHVuY29uc2Npb3VzIGJ1dCBvYnNlcnZhYmxlIHRyYWl0cyBhdCB0aGUgcG9rZXIgdGFibGUuIFRoZXNlIHRlbGxzICwgbGlrZSBob3cgeW91IHBoeXNpY2FsbHkgYmV0LCBicmVhdGgsIHRhbGssIGhvbGQgeW91ciBjYXJkcywgb3Igb3RoZXJ3aXNlIHJlYWN0IHRvIHNjZW5hcmlvcyBhcyB0aGV5IGRldmVsb3AgdGhyb3VnaG91dCB0aGUgcGxheSBpbiB0aGUgaGFuZCwgZ2l2ZSBrbm93bGVkZ2VhYmxlIHBsYXllcnMgYWRkaXRpb25hbCBpbmZvIGZyb20geW91IHRoYXQgdGhleSB3aWxsIHVzZSB0byBleHBsb2l0LiBJdCBoYXMgZ3JvdyB0byBiZSBvbmUgaW4gdGhlIHByaW1lIHJhdGVkIGFuZCBtb3N0IHdlbGwga25vd24gZ2FtZXMgd29ybGQgd2lkZS4uIApJcyBhbiBhYnNvbHV0ZSBuZWNlc3NpdHkgYmVjYXVzZSB3aXRob3V0IGl0LCB3ZSB3aWxsIGFsd2F5cyBiZSB3YXN0aW5nIG91ciByZXNvdXJjZXMgb24gZ2V0dGluZyByZWFkeSBmb3Igd2FycyBhbmQgdGhlcmVmb3JlIHRoZXJlIHdpbGwgYWx3YXlzIGJlIGEgbmVlZCB0byBoYXZlIHdhcnMuLiAKRGV0ZXJtaW5lIHdoYXQgc3Rha2VzIHlvdSBuZWVkIHRvIHBsYXkgdG8gbWFrZSB0aGUgYW1vdW50IG9mIG1vbmV5IHlvdSBhcmUgYWltaW5nIGZvci4gCkJ1dCB0aGUgV2l0Y2ggSHVudCBIb2F4IGNvbnRpbnVlcyBhcyB5b3Ugbm93IGFkZCB0aGVzZSBzdGF0ZW1lbnRzIHRvIEhvdXNlIFNlbmF0ZSBJbnRlbGxpZ2VuY2UgU2VuYXRvciBCdXJyLiAKRHluYW1pYyBkdW8gQW5uYSBhbmQgS3Jpc3RpbmEgcmUKTm9ydGggQWxidXJ5IGhhcyBvbmUgbWF0Y2ggbGVmdCB0byBwbGF5IGluIHRoZSBPdmVucyBhbmQgTXVycmF5IGxlYWd1ZSB0aGlzIHNlYXNvbi4KQWgsIHRoZSBjZWxlYnJpdHkgZmV0aXNoLiBPbiBkaXNwbGF5IGxhc3QgbmlnaHQgYXMgbWlsbGlvbnMgYW5kIG1pbGxpb25zIG9mIHBlb3BsZSBhY3Jvc3MgdGhlIGdsb2JlIHR1bmVkIGluIHRvIHdhdGNoIHdoYXQgY2FuIG9ubHkgYmUgZGVzY3JpYmVkIGFzIG9uZSBvZiB0aGUgbW9zdCBib3JpbmcgdGVsZXZpc2lvbiBldmVudHMgb2YgdGhlIHllYXI6IHRoZSBPc2NhcnMuIFdlIHNpdCBpbiBmcm9udCBvZiBvdXIgdGVtcGxlcyAoVFZzKSB0byBzZWUgb3VyIGdvZHMgYW5kIGdvZGRlc3NlcyBvbiBkaXNwbGF5IGluIHJpdHVhbGlzdGljIGNvc3R1bWVzIGludm9raW5nIHRoZSBzYWNyZWQgcHJheWVycyBvZiB5b3UgdG8gYWxsIG9mIHlvdS4gCk9uY2UgeW91ciBjYXIgaXMgaW4gdGhlIGNvcnJlY3QgcG9zaXRpb24sIGEgc2lnbmFsIGluZm9ybXMgeW91IHRvIHN0b3AuIEF0IHRoYXQgcG9pbnQsIHRoZSBjYXIgd2FzaCBlcXVpcG1lbnQgbW92ZXMgb3ZlciB5b3VyIGNhciBvbiBhIHRyYWNrLCBwZXJmb3JtaW5nIGEgc3BlY2lmaWMgZnVuY3Rpb24sIHN1Y2ggYXMgYXBwbHlpbmcgc29hcCBvciByaW5zaW5nLCB3aXRoIGVhY2ggcGFzcy4gCkhhbWlsdG9uIEhhbGwgaXMgdGhlIG9ubHkgRVhDTFVTSVZFTFkgTUVOIE9OTFkgU1BBQ0UgaW4gdGhlIFVLIG9mZmVyaW5nIHN1Y2ggd29ya3Nob3BzIGFuZCBhbiBhc3NvcnRtZW50IG9mIG90aGVyIGV2ZW50cyBmb3IgZ2F5IC8gYmkgbWVuIHRocm91Z2hvdXQgdGhlIHllYXIgYW5kIG91ciBjaGFyZ2VzIGFyZSBrZXB0IGFzIHJlYXNvbmFibGUgYXMgcG9zc2libGUgYXMgaXQgaXMgcnVuIGFzIGEgTk9UIEZPUiBQUk9GSVQgVkVOVUUgYW5kIEkgaGF2ZSBub3QgdGFrZW4gYSB3YWdlIGluIG92ZXIgdGVuIHllYXJzLiBXaGlsZSB3b3JraW5nIDE1IGhvdXJzIGEgZGF5ICAgNyBkYXlzIGEgd2VlaywgYWxsIHllYXIuIApVbmRlciB3aGF0IHJhdGlvbmFsZSB3b3VsZCB5b3UganVzdGlmaWFibHkgYmUgYWJsZSB0byBicmVhayB0aGVtIHVwPyBUaGVyZSBhcmUgb3RoZXIgb3B0aW9ucywgdGhleSBqdXN0IGFyZW4gYXMgZ29vZC4gCiJBbGVqYW5kcm8iIGZyb20gaGVyIGxhdGVzdCBhbGJ1bSBUaGUgRmFtZSBNb25zdGVyLiBBdCB0aGUgZW5kIG9mIHRoZSB2aWRlbyBCZXlvbmMgYW5kIEdhZ2Egc2F5IHRoZXkgYXJlIGdvaW5nIHRvIHJ1biBhd2F5IGZhci4gR2FnYSBsZWF2ZXMgdG8gSXRhbHksIHdoZXJlICJBbGVqYW5kcm8iIHdpbGwgYmUgc2hvdCBhbmQgQmV5b25jIGVpdGhlciB3aWxsIGRpZSBvciBnbyB0byBhbm90aGVyIGNvdW50cnksIGRlcGVuZGluZyBvbiBpZiB0aGV5IGRlY2lkZSB0byBkbyBhbm90aGVyIHNvbmcgd2l0aCBlYWNoIG90aGVyLiAoRnVsbCBBbnN3ZXIpClhYVmFyaWF0aW9uIHUKT3ZlcnZpZXcgZm9yIFNrdWxseUtpdHQKTm90IHN1cmUgaG93IGl0IHdvdWxkIHJlYWxseSBpbmNlbnRpdmUgbWlkcmFuZ2UsIHVubGVzcyB0aGVyZSBpcyBhbnkgZXZpZGVuY2UgdGhhdCB0aGUgYmFsbCByYXR0bGVzIGFyb3VuZCBtb3JlIGZvciAzcy4gCkdpdmVuIFBvenVlbG8gaGFzIGVzc2VudGlhbGx5IGFscmVhZHkgcGxheWVkIGEgZnVsbCBzZWFzb24gICBpbmNsdWRpbmcgRXVyb3BhIExlYWd1ZSBwbGF5ICAgdGhlIFRvcm9udG8gR00gc2FpZCB0aGUgdGVhbSB3aWxsIHdhdGNoIGhpcyB3b3JrbG9hZCBjbG9zZWx5LgpJbiAyMDEwLCBNci4gCk5vciB3YXMgdGhlIHJlY2VudCBjbGlmZmhhbmdlciB1bnByZWNlZGVudGVkLiBGb3IgeWVhcnMsIEFtZXJpY2FuIHBvbGl0aWNhbCBpbnN0aXR1dGlvbnMgaGF2ZSBhcHBhcmVudGx5IGJlZW4gaW4gYSBzdGF0ZSBvZiBuZWFyIHBhcmFseXNpcyAodGhlIHF1YWxpZmllciAgICJhcHBhcmVudGx5IiAgIGlzIGludGVuZGVkIHRvIGNvbnZleSB0aGUgZmFjdCB0aGF0IHRoZSBzeXN0ZW0gaXMgd29ya2luZyBqdXN0IGZpbmUgZm9yIHRoZSB0b3AgZmV3IHBlcmNlbnQsIHdobyBmb3IgdGhlIHBhc3Qgc2V2ZXJhbCBkZWNhZGVzIGhhdmUgYXBwcm9wcmlhdGVkIG1vc3Qgb2YgdGhlIGJlbmVmaXRzIGdlbmVyYXRlZCBieSBlY29ub21pYyBncm93dGgpLiAKVGhyb3VnaG91dCBoaXMgY2FyZWVyLCBoZSBhbHNvIGNvbW1pdHRlZCBzaWduaWZpY2FudCB0aW1lIHRvIGhpcyBjb21tdW5pdHksIHNlcnZpbmcgZm9yIHNldmVyYWwgeWVhcnMgYXMgV2FyZGVuIG9mIHRoZSBDaHVyY2ggb2YgdGhlIEhvbHkgU2F2aW91ciwgYXMgYSBuaW5lIHllYXIgQm9hcmQgTWVtYmVyIChmaXZlIHllYXJzIGFzIENoYWlybWFuKSBvZiB0aGUgS2l0Y2hlbmVyICAgV2F0ZXJsb28gSG9zcGl0YWwsIGFzIGEgbWVtYmVyIG9mIHRoZSBVbml2ZXJzaXR5IG9mIFdhdGVybG9vIEFjdHVhcmlhbCBTY2llbmNlIEFkdmlzb3J5IEJvYXJkIGFuZCBpdHMgRmFjdWx0eSBvZiBNYXRoZW1hdGljcyBTdHJhdGVneSBCb2FyZC4gTWFueSBvdGhlciBjb21taXR0ZWVzIGFuZCBvcmdhbml6YXRpb25zIGFsc28gYmVuZWZpdGVkIGZyb20gaGlzIGludm9sdmVtZW50LCBhbmQgaGUgd2FzIGEgcHJvdWQgbWVtYmVyIG9mIFRoZSBQcm9idXMgQ2x1YiBpbiBoaXMgbGF0ZXIgeWVhcnMuIEZvbGxvd2luZyBoaXMgcmV0aXJlbWVudCBmcm9tIERvbWluaW9uIExpZmUgaW4gMTk4NiwgRGFkIHNlcnZlZCBhcyBhbiBhY3R1YXJpYWwgY29uc3VsdGFudCB3aXRoIFdyaWdodCBNb2dnIEFzc29jaWF0ZXMgICBhbmQgdGhlbiB0aGUgcGllY2UgZGUgcmVzaXN0YW5jZSBhcyBoZSB3YXMgcmVjcnVpdGVkIHRvIHNldCB1cCBhbiBhY3R1YXJpYWwgdHJhaW5pbmcgcHJvZ3JhbSBmb3IgdGhlIElzbGFuZCBMaWZlIEluc3VyYW5jZSBDb21wYW55IG9mIEtpbmdzdG9uLCBKYW1haWNhLCB3aGVyZSBNb20gYW5kIERhZCBzdWJzZXF1ZW50bHkgc3BlbnQgc2V2ZXJhbCBtZW1vcmFibGUgeWVhcnMgb24gd29ya2luZyBob2xpZGF5cy4gCkV1cm9wZWFuIG1lZGlhIHNlZSBmZXcgb3B0aW9ucyBpbiBCcmV4aXQgcG9rZXIKSGUgZGVzZXJ2ZXMgdG8gaGF2ZSBoaXMgc211ZyBsaXR0bGUgc3RvbmUgZmFjZSBzbWFzaGVkIGluIHdpdGggYSBoYW1tZXIuIE9oIHdvdywgaXQgYSBzdG9uZSBoZWFkLCBob3cgZnVja2luZyBoaWxhcmlvdXMsIEkgdXNlIGl0IGluIGV2ZXJ5IGNvbW1lbnQgSSBwb3N0LiAKQmVjYXVzZSBFRidzIHNpdHRpbmcgb24gbW9yZSB0aGFuIDIwIHBlcmNlbnQgb2YgdGhlIG5lYXJieSBsYW5kLCB0aHJlZSBxdWFydGVycyBvZiB0aGUgY291bmNpbCAgIG9yIDEyIG1lbWJlcnMgICBuZWVkZWQgdG8gYXBwcm92ZSB0aGUgVGV4YXMgQ2FyZCBIb3VzZSdzIGFwcGxpY2F0aW9uIGZvciBhIHNwZWNpZmljIHVzZSBwZXJtaXQsIHNpbmNlIHRoZSBzaG9wcGluZyBjZW50ZXIgaXNuJ3Qgem9uZWQgZm9yIGNvbW1lcmNpYWwgYW11c2VtZW50LiAKS2l3aSBzdGFyIEtKIEFwYSBoYXMgcGFpZCB0cmlidXRlIHRvIGhpcyBSaXZlcmRhbGUgY28gc3RhciBMdWtlIFBlcnJ5LCB3aG8gZGllZCB0aGlzIHdlZWsgYWZ0ZXIgc3VmZmVyaW5nIGEgIm1hc3NpdmUgc3Ryb2tlIi4KSWYgeW91IHdhbnQgdG8gcHVyY2hhc2UgYSBiaWxsaWFyZCB0YWJsZSwgdGhlbiB3aHkgbm90IGEgcG9vbCBkaW5pbmcgdGFibGUgdGhhdCBjYW4gZ28gcmlnaHQgaW50byB5b3VyIGRpbmluZyByb29tPyBFc3BlY2lhbGx5IGlmIHlvdSBkb24ndCBoYXZlIGEgYmFzZW1lbnQsIG9yIGEgcmVjIHJvb20sIHdoZXJlIGVsc2UgY2FuIHlvdSBwdXQgYSBiaWxsaWFyZCB0YWJsZT8gQ29udmVydGlibGUgcG9vbCBkaW5pbmcgdGFibGVzIGFyZSBtb3JlIGNvbnZlbmllbnQuIEJldHRlciB5ZXQsIG1vc3QgcG9vbCBkaW5pbmcgdGFibGVzIGNhbiBjb252ZXJ0IGludG8gcG9rZXIgdGFibGVzLiAKSW4gaGlzIGFjY29tcGFueWluZyByZXBvcnQsIEVzcHkgc3RhdGVzIHRoYXQgdGhlIGNvbW1pdHRlZSByZWNlaXZlZCBiYWNrIDUwIHJlc3BvbnNlcyBmcm9tIHRoZSAyNTAgY2lyY3VsYXJzIGl0IHNlbnQgb3V0IHRvIGRpZmZlcmVudCBwYXJ0cyBvZiB0aGUgVW5pdGVkIFN0YXRlcyBhbmQgQ2FuYWRhIHJlZ2FyZGluZyB0aGlzIG5vdGFibGUgc3Rvcm0uIApEYWlseSBiYWxhbmNlIGlzIG5vdCBpbiB0aGUgNSBmaWd1cmVzLCB5b3Ugd2lsbCBtb3N0IGxpa2VseSBrbm93biBpZiB0aGF0IGRhcm4gbGFuZGxvcmQgZ290IGhpcyBtb25leSBvciBub3QgOnJvbGw6LiAKV2hlbiBzaGUgY2FtZSBiYWNrIHNoZSBpbmZvcm1lZCBtZSB0aGF0IHNoZSBjb3VsZG4gZmluZCBhbnl0aGluZyBhYm91dCBhIGJveSBuYW1lZCAiTWlja2V5IiwgYnV0IHRoYXQgc2hlIGhhZCBmb3VuZCByZWNvcmRzIHBlcnRhaW5pbmcgdG8gYSBib3kgdGhhdCBkcm93bmVkIGluIHRoZSBBbGFmaWEgbmFtZWQgIk1pY2hhZWwiLiBJIHB1cmNoYXNlZCB0aGUgcHVibGljIHJlY29yZCBpbW1lZGlhdGVseSBhbmQgbGVmdCB3aXRoIGRvY3VtZW50YXRpb24gdGhhdCBpbmNsdWRlZCBhIHBvbGljZSByZXBvcnQgYW5kIGZ1bGwgbmFtZXMgb2YgaGlzIHBhcmVudHMuIApDYW4gb25seSBiZSB1c2VkIG9yIGFkbWluaXN0ZXJlZCB3aXRoIGEgc2lnbmVkIGNvbnNlbnQgZm9ybSBmcm9tIHRoZSBwYXJlbnQvZ3VhcmRpYW4gd2l0aCBjbGVhciBkaXJlY3Rpb25zLiAKR3JlZ0xlYWd1ZUdhbWluZyAgMzkgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnbwpUaGF0J3Mgd2h5IHRoZXkgaGF2ZSBjb21iaW5lZCB0aGVzZSB0d28gY29uY2VybnMgdGhyb3VnaCB0aGUgZ2FtZSBwbGF5IG9mIHBva2VyLiAKUG93ZXJmdWwgdmlkZW8uIElmIHdlIGRvbiBhY3Qgbm93LCB2YXJpb3VzIGNoYWluIHJlYWN0aW9ucyAoc3VjaCBhcyBwZXJtYWZyb3N0IG1lbHRpbmcpIHdpbGwgbWFrZSBnbG9iYWwgd2FybWluZyB1bnN0b3BwYWJsZS4gSWYgdGhlcmUgd2FzIGFuIGFzdGVyb2lkIHJhY2luZyB0b3dhcmQgRWFydGgsIHdlIHdvdWxkIGRvIGV2ZXJ5dGhpbmcgaW4gb3VyIHBvd2VyIHRvIHRyeSB0byBzdG9wIGl0LiAKKEZ1bGwgQW5zd2VyKS4gClRoZSBjYXJtYWtlciB3aWxsIGFsc28gbGlrZWx5IHJlZm9jdXMgZWZmb3J0cyBvbiBOb3J0aCBBbWVyaWNhIGFuZCBFdXJvcGUgdG8gbWFrZSB1cCBmb3Igd2Vha25lc3NlcyBlbHNld2hlcmUuCkluIENhbmFkYSwgaG93ZXZlciwgbWFzc2FnZSBwcm9mZXNzaW9uYWxzIGFyZSB0eXBpY2FsbHkgZ2l2ZW4gdGhlIHRpdGxlIG9mIFJlZ2lzdGVyZWQgTWFzc2FnZSBUaGVyYXBpc3QsIG9yIFJNVC4uIApOb3cgdGhhdCB5b3Uga25vdyB0aGUgYmVuZWZpdCBvZiBtZWF0IGZvciBtdXNjbGUgYnVpbGRpbmcsIGhlcmUncyB0aGUgbGlzdCB5b3UndmUgYmVlbiB3YWl0aW5nIGZvcjoKU29tZSBDaHVyY2ggbWVtYmVycyBtYXkgYWxzbyBjaG9vc2UgdG8gYXZvaWQgaG90IGNob2NvbGF0ZSwgZW5lcmd5IGRyaW5rcywgY2FmZmVpbmF0ZWQgc29kYXMsIG9yIGV2ZW4gYWxsIHNvZGEuIEl0IGp1c3QgZGVwZW5kcyBvbiB3aGF0IHRoZXkgdGhpbmsgaXMgcmlnaHQuIAoxMCBtaWxsaW9uIGRvbGxhcnMgYXdhaXRzIHRoZSB3aW5uZXIsIHdpbGwgb25lIG9mIG91ciB0b3AgYXRobGV0ZXMgYmUgdGhlIHdpbm5lcj8gV2UnbGwgZmluZCBvdXQgaW4gTm92ZW1iZXIhLiAKQW5kIHRoYW5rcyBkdWRlLCBtYXliZSBteSBzdGFuZGFyZHMgaGF2ZSBzaGlmdGVkIHNpbmNlIGludGVyZXN0IGluIHN0cmVuZ3RoIHRvb2sgaG9sZCBoYWhhLiAKT24gZXN0aW1lIGxldXIgbm9tYnJlICA4MDAwLiBBdWN1biwgb3UgcHJlc3F1ZSwgbmUgZGlzcG9zZSBkJ3VuZSBjb3V2ZXJ0dXJlIHNvY2lhbGUuLiAKUGFjaWZpYyBQb2tlcidzIE9tYWhhIEhpZ2ggTG93IGlzIHVzdWFsbHkgZGVzY3JpYmVkIGFzIGFuIGV4Y2l0aW5nIGdhbWUgYW5kIGhhcyBiaWdnZXIgcG90IG1vbmV5IGZvciBwbGF5ZXJzIHRvIHdpbi4uIApUaHJvdWdob3V0IG15IGxpZmUsIG9uZSBvZiB0aGUgZmV3IGNvbnN0YW50cywgYXMgd2VsbCBhcyBvbmUgb2YgdGhlIGdyZWF0IGpveXMsIGhhcyBiZWVuIHBsYXlpbmcgcG9rZXIuIEl0J3MgYWxzbyBzb21ldGhpbmcgSSdtIHF1aXRlIGdvb2QgYXQuIExpa2UgdGhlIHRpbWUgSSB3YXMgcGxheWluZyBUZXhhcyBob2xkICdlbSBhZ2FpbnN0IGFuIGFnZ3Jlc3NpdmUgcGxheWVyIHdobyBoYWQgYmVlbiB0aHJvd2luZyBkb3duIGJpZyBiZXRzIGFsbCBuaWdodC4gCkkgYWxzbyB3b3JrZWQgb24gYSBmb29kIGJhc2VkIHJlYWxpdHkgc2hvdyB0aGF0IHdhcyBvbiB0aGUgb3RoZXIgZW5kIG9mIHRoZSBzcGVjdHJ1bSAgIGV4dHJlbWVseSBzY3JpcHRlZC4gV2hpbGUgd2UgZGlkbiBmb2xsb3cgYSBzY3JpcHQgaW4gdGVybXMgb2YgZGlhbG9ndWUgKG1vc3Qgb2YgdGhhdCB3YXMgYWQgbGliYmVkIGJ5IHRoZSBjYXN0KSwgd2UgZGlkIGhhdmUgYSB2ZXJ5IHNwZWNpZmljIHNob290aW5nIHNjaGVkdWxlIGZvciB0aGUgZGF5LCBzaG90IHNjZW5lcyBvdXQgb2Ygb3JkZXIsIGFuZCBoYWQgb25lIG9yIG1vcmUgc3RvcnkgYXJjcyB0byBmb2xsb3cgZm9yIGVhY2ggZXBpc29kZS4gCldlIGRvIG5vdCBkaWFnbm9zZSwgdHJlYXQgb3IgcHJlc2NyaWJlIGFueSBtZWRpY2FsIHRyZWF0bWVudCBvciBhZHZpY2UuIApUaGV5IGFyZSB1bmRvdWJ0ZWRseSB0aGUgYmVzdCBIQy9RQiBjb21ibyBvZiBhbGwgdGltZS4gVGhlcmUgbm8gZGF0YSBmcm9tIEJyYWR5IHNhbnMgQmVsaWNoaWNrLCBhbmQgdGhlIFBhdHMgd2VudCBhIHJlc3BlY3RhYmxlIDExIDUgaW4gMjAwOCB3L28gQnJhZHkuIE15IGh1bmNoIGlzIHRoZXJlIGEgc3luZXJneSB3aGVyZSBuZWl0aGVyIHdvdWxkIGJlIGFzIGdvb2Qgd2l0aG91dCB0aGUgb3RoZXIuIFRoZW4gYWdhaW4sIEJlbGljaGljayBzdHJ1Z2dsZWQgYXMgSEMgYXQgQ2xldmVsYW5kIGJlZm9yZSBQYXJjZWxscyBwaWNrZWQgaGltIHVwIGZvciBhIHNlY29uZCB0b3VyIG9mIGR1dHkuCkNoYXJhY3RlcnMgZ2V0IG91dCBvZiB0aGVpciBjb29ja2luZyBjb21mb3J0IHpvbmUgYW5kIGxlYXJuIG5ldyB0aGluZ3Mvc3R5bGVzL3RlY2huaXF1ZXMuCldlJ2xsIHdhbGsgeW91IHRocm91Z2ggYSB2YXJpZXR5IG9mIHdheXMgdG8gY29vayBmaXNoIGFuZCBzaGVsbGZpc2ggZnJvbSB0cmFkaXRpb25hbCBncmlsbGluZyB0byBlbmhhbmNpbmcgZmxhdm9yIHdpdGggYSBjZWRhciBwbGFuay4uIApPbmxpbmUgUG9rZXIgU3RyYXRlZ3kgIDE6IFVzaW5nIHZpcnR1YWwgY2hpcHMgaW4gcGxheWluZyBvbmxpbmUgcG9rZXIgY2FuIGhlbHAgeW91IGJlIGF3YXJlIG9mIHRoZSBydWxlcyBvZiB0aGUgZ2FtZS4KNC4gWW91ciBDb3Jwb3JhdGUgSW52ZXN0bWVudCBBY2NvdW50ICAgSWYgeW91IGhhdmUgYSBDb3Jwb3JhdGlvbiwgcHVsbGluZyBtb25leSBmcm9tIGhlcmUgd2lsbCBsaWtlbHkgYmUgY29uc2lkZXJlZCBhcyBpbmVsaWdpYmxlIGRpdmlkZW5kIGluY29tZSwgYnV0IGNvdWxkIHBvc3NpYmx5IGJlIHRheCBmcmVlIGR1ZSB0byB0aGUgc2l6ZSBvZiB5b3VyIGNhcGl0YWwgZGl2aWRlbmQgYWNjb3VudCBvciBzaGFyZWhvbGRlciBsb2Fucy4gT2Z0ZW4gdGhlcmUgaXMgYW4gb3Bwb3J0dW5pdHkgdG8gdXNlIGluc3VyYW5jZSBmb3IgZXN0YXRlIHBsYW5uaW5nIG9yIGV2ZW4gaW4gc29tZSBjYXNlcyBmb3IgUmV0aXJlbWVudCBQbGFubmluZyB3aGVyZSBmdW5kcyBjYW4gY29tZSBvdXQgdGF4IGZyZWUuCk9uIHRoZSBqb2IsIGVtcGxveWVlcyBhdCBOYXR1cmUncyBQYXRoIGNhbiBlbmpveSBhIHZhcmlldHkgb2YgZnJlZSBoZWFsdGh5IHNuYWNrcywgaW5jbHVkaW5nIGEgc2VsZWN0aW9uIG9mIE5hdHVyZSdzIFBhdGggYW5kIFF1ZSBQYXNhIHByb2R1Y3RzIHN1Y2ggYXMgZ3Jhbm9sYSwgY2VyZWFsLCBvYXRtZWFsLCBjaGlwcywgc2Fsc2EgYW5kIG1vcmUKSSB3b3VsZG4gcmVhbGx5IHdvcnJ5IGFib3V0IGl0LCBpZiB5b3UgZG9uIHRydXN0IHRoZSBnYW1lIGRvbiBwbGF5LiAKRWRpdDI6IFNvbWUgcGVvcGxlIGJlbG93IGhhdmUgc29tZSBleGNlbGxlbnQgcG9pbnRzLiBHcmVhdCBkaXNjdXNzaW9uIGhlcmUuIEkgbm90IGNsYWltaW5nIEkgMTAwJSByaWdodCwgYnV0IEkgdGhpbmsgeW91IGNhbiBzZWUgdGhlIGluZHVzdHJ5IGlzIGF3YXJlIG9mIHRoZSBpc3N1ZS4gRXNwZWNpYWxseSB3aGVuIHlvdSBhcmUgc3RhcnRpbmcgc2VlIHRoZSBzaGlmdCB0byBzdWJzY3JpcHRpb24gc2VydmljZXMgbGlrZSBPcmlnaW4gYW5kIFhib3ggZ2FtZSBwYXNzLCB3aXRoIHN0cmVhbWluZyBvbiB0aGUgaG9yaXpvbi4KQW5kIHRoZSBiaWcgb25lOiB0aGlzIHB1dHMgVHJ1bXAgaW4gYSByZWFsIGJpbmQuIERvZXMgaGUgcGFyZG9uIE1hbmFmb3J0PyBQYXJkb25pbmcgNCB5ZWFycyBpcyBpbmRlZmVuc2libGUsIGJlY2F1c2UgTWFuYWZvcnQgZ290IGEgc29mdCBzZW50ZW5jZS4gSWYgTWFuYWZvcnQgaGFkIGdvdHRlbiAyMCwgVHJ1bXAgY291bGQgc2F5IHRoZSBzZW50ZW5jZSB3YXMgZGlzcHJvcG9ydGlvbmF0ZWx5IGhhcnNoLCBhbmQgcGFyZG9uIGhpbSBpbiBhIHdheSB0aGF0IGlzIGp1c3RpZmlhYmxlIHRvIGhpcyBiYXNlLiAKWW91IHdpbGwgc2VlIHJlbW5hbnRzIG9mIGl0IG9uIHR1bWJsci4gCkkgdXNlZCB0byBsb3ZlIEVsaXphYmV0aCBXYXJyZW4sIGJ1dCBzaGUgaGFzIGFuIG9sZCBsYWR5IHZvaWNlIHRoYXQgcGVvcGxlIGNhbid0IGVzY2FwZS4gCkNvb25leSBzYWlkLiBEaXN0aWxsZXJ5IGhhZCB0b2xkIHVzIHRoYXQgYmVjYXVzZSB3ZSB3ZXJlIGEgbmV3IHByb2R1Y3QsIGlmIHdlIHNvbGQgNTAwIGNhc2VzIGluIHRoZSBmaXJzdCB5ZWFyIHRoYXQgd291bGQgYmUgZ3JlYXQsIGFuZCB3ZSBzb2xkIDIsMDAwLiBMaXF1aWQgQ2hpY2tzIGFwcGVhcmVkIG9uIHRoZSBEZW4sIGl0IGhhZCBzb2xkIDQwLDAwMCBib3R0bGVzIG9mIFN0b2tlZCBWb2RrYSwgZ2VuZXJhdGluZyBhYm91dCAkMjAwLDAwMCBpbiByZXZlbnVlLiAKU29vbiBhZnRlciB0aGlzIHRoZXJlIGlzIGEgc2hlbHRlciwgdGhlIHBhdGggd2lkZW5zIGFuZCB0aGUgc3VyZmFjZSBpbXByb3Zlcy4gWW91J3JlIG5lYXJseSBmaW5pc2hlZCB0aGUgY2xpZmYgc2VjdGlvbi4KUGxheWluZyBpbiB0aGUgd3NvcCBjaXJjdWl0IG1haW4gaW4gMyB3ZWVrcywgbGl0dGxlIG92ZXIgdHdpY2UgbXkgbGFyZ2VzdCBidXkgaW4gdG8gZGF0ZS4gSSBoYXZlIHB1dCBpbiB3b3JrIG9uIG15IHN0cmF0ZWd5IG92ZXIgdGhlIGxhc3QgbW9udGggYW5kIHN0aWxsIGFtIGV2ZXJ5IG5pZ2h0IGZvciBhdCBsZWFzdCBhbiBob3VyLiBBbnkgaW5mb3JtYXRpb24gSSBzaG91bGQgbG9vayB1cCBvciBhZHZpY2UgZm9yIG11bHRpIGRheSB0b3VybmFtZW50cyB3b3VsZCBiZSBtdWNoIGFwcHJlY2lhdGVkLiBJIG9ubHkgbmF2aWdhdGVkIGEgMzAwKyBwZXJzb24gbGl2ZSBtdHQgb25jZSwgYWJvdXQgMyBtb250aHMgYWdvLCBmb3IgYSBtaW4gY2FzaC4gVGhlIGxhc3QgNSA2IGhvdXJzIEkgd2FzIGluIGNvbXBsZXRlIHN1cnZpdmFsIG1vZGUgYW5kIHdhcyBtZW50YWxseSBkcmFpbmluZy4gV2hlbiBJIGJ1c3RlZCBJIHdhcyAxMisgaG91cnMgaW4gYW5kIHdhcyBubyBsb25nZXIgcGxheWluZyBteSBBIGdhbWUsIGFkdmljZSBvbiB0aGF0IHNwZWNpZmljYWxseSB3aWxsIGFsc28gYmUgYXBwcmVjaWF0ZWQuIFRoYW5rcy4KSSBsaWtlIGR1bmdlb25zIGJlc3QgYmVjYXVzZSBiZXN0IGNhc2UgeW91IGdldCB0byBzaG9vdCB0aGUgc2hpdCB3aXRoIHNvbWUgcmFuZG9tIHN0cmFuZ2VycyBmb3IgYSB3aGlsZSBhbmQgaGF2ZSBhIGdvb2QgdGltZQpTbywgcmVjZW50bHkgSSB0b29rIG15c2VsZiBvbiBhIEJvdXJzZSBiYXIgY3Jhd2wuIApJdCBtdWNoIGJldHRlciB0aGFuIHdoYXQgVGVtcG8gU3Rvcm0gb2ZmZXJlZCB3aGljaCB3YXMgbm90aGluZy4gCkkgbWVhbiBpdCBnb2luZyB0byBiZSBhIGxvc2UgbG9zZSBzaXR1YXRpb24gY2F1c2Ugbm90IGV2ZXJ5b25lIHdpbGwgYmUgaGFwcHksIG1pZ2h0IGFzIHdlbGwgZ28gdGhyb3VnaCB3aXRoIHRyYW5zbGF0aW5nIGl0IGFzIGNsb3NlIHRvIHRoZSBzb3VyY2UgYXMgcG9zc2libGUuIDU3IHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvLiAKQXQgb25lIHBvaW50LCBzaGUgd2FzIGVhcm5pbmcgJDEwIG1pbGxpb24gYW5udWFsbHkgdGhyb3VnaCB2YXJpb3VzIGJyYW5kIGFuZCBwcm9kdWN0IGVuZG9yc2VtZW50cy4KSnVkaSBPbmxpbmUgaGFzIGJlZW4gbG9uZyBjb25zaWRlcmVkIG9uZSBvZiB0aGUgbGVhZGluZyBjYXNpbm9zIHRoYXQgaGF2ZSBiZWVuIGNyZWF0ZWQuIE1hbnkgbG92ZSB0byBnYW1ibGUgYnV0IGl0IGlzIGEgc29jaWFsIHRhYm9vIGZvciB0aGVpciBsb3ZlZCBvbmVzLiAKSWYgU2hpbiBkb2VzIGFuIGF3ZXNvbWUgd2FyY3J5IGFmdGVyIHB1bHZlcml6aW5nIHRoZSBaaGFvIGZyb250IHJvdyBhbmQgaW5zcGlyZXMgYWxsIGhpcyBtZW4gdG8gZmlnaHQgYXMgaGFyZCBhcyBoaW0gYWxhIGR1a2UgaHlvdSBvciBsaWtlIHdoZW4gaGUga2lsbGVkIEtlaXNoYSwgaSB0aGluayB3ZSBnb29kLiBUaG91Z2gsIHdvdWxkIHRoYXQgcmVhbGx5IGJlIGFuIGF3YWtlbmluZyBvZiBoaXMgdHJvb3BzPy4gCkFsc28gbm90ZSBib29rcyBhcmUgbm90b3Jpb3VzbHkgYmFkIGFib3V0IG1peGluZyB1cCBjYXBpdGFscyBhbmQgbG93ZXIgY2FzZXMgZm9yIHRoZSBzYWtlIG9mIGJyZXZpdHksIGJ1dCBpdCBzaG91bGQgYmUgY2xlYXIgaWYgeW91IHRhbGtpbmcgYWJvdXQgYXNwZWN0cyBvZiB5b3VyIHJhbmRvbSB2YXJpYWJsZSwgb3IgZnVuY3Rpb25zIG9uIHlvdXIgZGF0YS4uIApIZSBoYXMgYWR2b2NhdGVkIGxvb3NlbmluZyBndW4gb3duZXJzaGlwIGxhd3Mgc28gaW5kaXZpZHVhbHMgY2FuIGZpZ2h0IG9mZiBjcmltaW5hbHMsIGdpdmluZyBwb2xpY2UgYSBmcmVlciBoYW5kIHRvIHVzZSBmb3JjZSBhbmQgcmVzdG9yaW5nICJ0cmFkaXRpb25hbCIgQnJhemlsaWFuIHZhbHVlcyAgIHRob3VnaCBzb21lIHRha2UgaXNzdWUgd2l0aCBoaXMgZGVmaW5pdGlvbiBvZiB0aG9zZSB2YWx1ZXMgaW4gbGlnaHQgb2YgaGlzIGFwcHJvdmluZyBhbGx1c2lvbnMgdG8gdGhlIDE5NjQgMTk4NSBkaWN0YXRvcnNoaXAgYW5kIGhpcyBkZXJpc2l2ZSBjb21tZW50cyBhYm91dCB3b21lbiwgYmxhY2tzIGFuZCBnYXkgcGVvcGxlLi4gCk9uZSBvZiB0aGVtIGNvbWVzIGZyb20gQ2h1Y2sgTWlsbGVyLCB3aG8gcGxheWVkIGZvb3RiYWxsIHdpdGggSGVubGV5IGF0IFVDTEEuIEFza2VkIGhvdyBoZSB0aG91Z2h0IEhlbmxleSBjYW1lIHRvIGJlIGludm9sdmVkIGluIGEgc2NoZW1lIHRvIHRyYW5zcG9ydCBjb2NhaW5lIGFjcm9zcyB0aGUgY291bnRyeSwgTWlsbGVyIHNhaWQsICJBbnkgYmxhY2sgYXRobGV0ZSBjYW4gdGVsbCB5b3UgdGhhdCBoZSBrbm93cyBhIGRydWcgZGVhbGVyLiBXaGVuIHlvdSBoaXQgaXQgYmlnLCB0aGUgZmlyc3QgdGhpbmcgdGhleSBjb21lIGF0IHlvdSB3aXRoIGlzLCAnTG9hbiBtZSBzb21lIG1vbmV5LiAKT2YgV2F5bmVzYm9ybywgc3BlbnQgVHVlc2RheSBldmVuaW5nIGF0IHRoZSBob21lIG9mIE1yLiAKQnV0IGlmIHlvdSdyZSBhYmxlIGJvZGllZCBhbmQgYWJsZSBtaW5kZWQsIHlvdSBhbHNvIGdvdHRhIHdvcmsgaGFyZC4iLiAKSGFkIDQ0IGhhbmRzaGFrZSBkZWFscyBpbiBzZWFzb24gc2V2ZW4uIFRlbiBvZiB0aG9zZSBlbnRyZXByZW5ldXJzIHdhbGtlZCBhd2F5IGZyb20gdXMuIEZvdXIgb3V0IG9mIHRoZSAzNCByZW1haW5pbmcgb24gYWlyIGRlYWxzIHBhc3NlZCB0aGUgZHVlIGRpbGlnZW5jZSBwcm9jZXNzLiBTbyBpbiBlZmZlY3QsIEkgY2xvc2VkIG9uIGFib3V0IDEwJSBvZiB0aGUgZGVhbHMgYW5kIHRoYXQgcHJldHR5IHR5cGljYWwgYXMgYW4gaW52ZXN0b3IuCkkgYmFyZWx5IHRhcCB0aGUgY3ltYmFsLCBJIGJhcmVseSBnZXQgc291bmQuIApUaGUgbW9zdCBlbWluZW50IG9uZSBvZiB0aGVtIGlzIE1hdGthIHdoaWNoIGhvbGRzIGl0IG9yaWdpbiBpbiBNdW1iYWkgYnkgUmF0YW4gS2hhdHJpLiAKQnJpbmcgYSBsb3Qgb2YgZGF0YSBpbnRvIHRoZSBob3NwaXRhbGl0eSBzZXJ2aWNlIGV4cGVyaWVuY2UsIGluY2x1ZGluZyBjcmVkaXQgY2FyZCBhbmQgSUQgaW5mbywgYW5kIGFsc28gdGhyb3VnaCB0aGVpciBtb2JpbGUgZGV2aWNlLiAKVGhlIGN1cnJlbnQgVW5pdmVyc2l0eSBvZiBOZWJyYXNrYSBQcmVzaWRlbnQgaXMgSGFuayBCb3VuZHMuIE9uIEphbi4gMTIsIDIwMTUsIHRoZSBCb2FyZCBvZiBSZWdlbnRzIGFwcG9pbnRlZCBCb3VuZHMgYXMgdGhlIHNldmVudGggcHJlc2lkZW50IG9mIHRoZSBVbml2ZXJzaXR5IG9mIE5lYnJhc2thLiBBcyBwcmVzaWRlbnQsIERyLiBCb3VuZHMgbGVhZHMgdGhlIFVuaXZlcnNpdHkgb2YgTmVicmFza2EgYW5kIGl0cyBmb3VyIGNhbXB1c2VzLgo4KSBFeGNlc3NpdmUgU3BhbS4gUG9zdGluZyBtdWx0aXBsZSB0aHJlYWRzIGEgZGF5IGluIGV4Y2Vzc2l2ZSB1c2UuIE9idmlvdXNseSB5b3UgaGF2ZSB0byB0YWtlIGl0IHdpdGggYSBodWdlIGdyYWluIG9mIHNhbHQgYW5kIG1ha2UgeW91ciBkZWNpc2lvbiBmb3IgeW91cnNlbGYuIFBsYXkgdGhlIGdhbWUgYW5kIGRlY2lkZSB3aGV0aGVyIGl0IHdvcnRoIGl0IHRvIHlvdSwgd2hldGhlciB5b3UgZW5qb3kgaXQsIGV0Yy4KRGVsdWNhIHN1bW1lZCB1cCB0aGUgZnJ1c3RyYXRpb24gQ29uc2VydmF0aXZlcyBhcmUgZmVlbGluZyB3aXRoIHRoZSBEdWZmeSBmaXhhdGlvbiwgbm90aW5nIHRoYXQgcGVvcGxlIGFyZSBnZW5lcmFsbHkgbW9yZSBjb25jZXJuZWQgYWJvdXQgb3RoZXIgaXNzdWVzLCBzdWNoIGFzIHRoZSBzdGF0ZSBvZiB0aGUgZWNvbm9teS4KRGF2aWQgaXMgcHJlZGVjZWFzZWQgYnkgaGlzIHBhcmVudHMgRGF2aWQgYW5kIEdlb3JnaW5hIFNjb3R0LCBoaXMgYXVudCBhbmQgdW5jbGUgRnJlZCBhbmQgU2FyYWggQ3VtbWluZ3MsIGFuZCBoaXMgYnJvdGhlcnMgVGhvbWFzIGFuZCBKaW0gU2NvdHQuIApJdCdzIGRpZmZpY3VsdCB0byBleHBsYWluIHRoYXQgZGVzY3JpcHRpb24sIGJ1dCBwZXJoYXBzIGl0IHN0ZW1zIGZyb20gQWRhbXMnIHdpbGQgZXllZCBzdGFnZSBwcmVzZW5jZSBvZiBBZGFtcy4gT3IgaXQgc2ltcGx5IGNvdWxkIGJlIHRoZSBnb29kIHRpbWUgZnVuIG9uZSBleHBlcmllbmNlcyBsaXN0ZW5pbmcgdG8gRGlydHkgQm91cmJvbidzIG11c2ljLiBUaGUgYmFuZCBwbGF5ZWQgdGhlIGZpcnN0IHRocmVlIHNvbmdzIG9mZiB0aGUgbmV3IGFsYnVtICJFem1lcmVsZGEsIiAiV2lja2VkIiBhbmQgIkFuaW1hbCIgYW5kIHRoZW4gY29udGludWVkIHRvIGVudGVydGFpbiBkdXJpbmcgYSB3aWRlIHJhbmdpbmcgaW50ZXJ2aWV3IHdpdGggUXVlbnRpbi4KSVQgV0lMTCBMQVkgMzAwIE1JTExJT04gRUdHUyBBVCBPTkUgVElNRS4gCiJJdCB0b29rIGEgZmV3IGRheXMgdG8gZ2V0IHVzZWQgdG8uIFRoZSBmaXJzdCB0aW1lIEkgdXNlZCBpdCwgSSBkaWRuJ3QgZmVlbCBsaWtlIG15IGhhaXIgd2FzIGNsZWFuLCIgTHluY2ggc2F5cy4gIkl0IHdhcyBncmlteS4iCkxvdHMgb2YgZHVkZXMgbWFrZSB0aGUgbWlzdGFrZSBvZiB0aGlua2luZyB0aGVpciBnb2FsIHRoYXQgZmlyc3QgbmlnaHQgaXMgc2V4LiAKQWx0aG91Z2ggdGhlIHN0cnVjdHVyZSBvZiBjYXBpdGFsaXNtIHdhcyBpbiBwbGFjZSBsb25nIGJlZm9yZSB0aGUgSW5kdXN0cmlhbCBSZXZvbHV0aW9uIGluIG90aGVyIHBsYWNlcyB0aGVyZSB3ZXJlIHRyYWRlIHJvdXRlcywgZXhjaGFuZ2FibGUgY3VycmVuY2llcywgYW5kIG1hbnVmYWN0dXJpbmcgIGl0IHRvb2sgYSBjZXJ0YWluIHNvcnQgb2YgYmVsaWVmIHN5c3RlbSwgYSBzcGlyaXQsIHRvIG1vdGl2YXRlIHBlb3BsZSB0byB3b3JrIGhhcmQgYW5kIHRoZW4gcmVpbnZlc3QgYWxsIHRoZWlyIHByb2ZpdHMgaW50byBmdXR1cmUgZWFybmluZ3MuIApJdCBzdWNoIGEgcGFpbiB0byBiZSB3b2tlbiB1cCB0byBoYXZlIHRvIHJlYWRqdXN0IGluc2lkZSB0aGUgYml2eS4gRENGIGlzIG5vbiBzbGlwIGFuZCBldmVyIHNpbmNlIEkgZ290IHRoZSBCb3JhaCBDdWJhbiwgSSBuZXZlciBoYWQgYW55IHNsaXBwaW5nIGlzc3VlcywgYW5kIEkgc2xlcHQgYSBsb3QgbW9yZSBzb3VuZGx5Li4gClRoZSBWb2x1bnRlZXIgQ2VudGVyIG1haW50YWlucyBhbiBvbmxpbmUgZGF0YWJhc2Ugb2Ygc2VydmljZSBvcHBvcnR1bml0aWVzIHRoYXQgaXMgc2VhcmNoYWJsZSBieSBwb3RlbnRpYWwgdm9sdW50ZWVycy4gVG8gYWRkIGEgdm9sdW50ZWVyIG9wcG9ydHVuaXR5IG9uIGJlaGFsZiBvZiB5b3VyIG9yZ2FuaXphdGlvbiwgY29tcGxldGUgdGhlIFN1Ym1pdCBhIFZvbHVudGVlciBPcHBvcnR1bml0eSBmb3JtLCBpbmNsdWRpbmcgZGV0YWlsZWQgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGV2ZW50LCB5b3VyIG9yZ2FuaXphdGlvbidzIG1pc3Npb24sIGFuZCB0aGUgdm9sdW50ZWVyIGFzc2lnbm1lbnRzLiBZb3Ugd2lsbCByZWNlaXZlIGEgY29uZmlybWF0aW9uIGVtYWlsIHdoZW4geW91ciBldmVudCBpbmZvcm1hdGlvbiBoYXMgYmVlbiBhcHByb3ZlZCBhbmQgaXMgbGl2ZSBvbiB0aGUgQ2VudGVyJ3Mgd2Vic2l0ZS4uIApUaGlzIGxhY2sgb2YgZXZpZGVuY2Ugd29uJ3QgZXZlciBzdGFuZCB1cCBpbiBjb3VydCwgYW5kIG5laXRoZXIgd291bGQgZ2VuZXRpYyB0ZXN0aW5nIGFzIGZhY3R1YWwgZXZpZGVuY2UsIHRoZXJlZm9yZSBzaG91bGQgbm90IGJlIGFsbG93ZWQgaW4gbWVkaWEgc3Rvcmllcy4gCkdldCBlbmNvdXJhZ2VtZW50LCBmaW5kIGluc3BpcmF0aW9uLCB0YWxrIGFib3V0IHByb2plY3RzIGFuZCBwcm9qZWN0IGlkZWFzLCBhbmQgY2hlY2sgb3V0IHdoYXQncyBuZXcgaW4gdGhlIHN0dWRpby4gCkJ1dCBpZiB5b3UgbG92ZWQgc29tZW9uZSB0byBwaWVjZXMgYW5kIHRoZXkganVzdCBkaXNhcHBlYXJlZCBvbmUgZGF5LCB5b3Ugc3RpbGwgbG92ZSB0aGVtIGV2ZW4gYSBsb25nIHRpbWUgbGF0ZXIuIElmIHlvdSBzYXcgdGhlbSBhZ2FpbiBhZnRlciBzZXZlcmFsIHllYXJzLCB5b3Ugc3RpbGwgYmUgc28gaGFwcHkgdG8gc2VlIHRoZW0gYmVjYXVzZSBub3RoaW5nIGhhcHBlbmVkIHRvIGNoYW5nZSBob3cgeW91IGZlZWwgYWJvdXQgdGhlbS4gCk1vbmV5IGNvbnRyb2xzIGV2ZXJ5dGhpbmcuLiAKSnVzdCB0YWtlIGl0IG9uZSBkYXkgYXQgYSB0aW1lIGFuZCBwdXQgaW4gYSBkYXkgd29ydGggb2Ygd29yayBvbiB5b3VyIGdvYWxzLi4gCldlIHNlZSBzb21lIGdhaW5zIGluIDIwMjAsIGJ1dCBpdHMgYSBub3QgbWFnaWMgeWVhciB0aGF0IHdpbGwgc29sdmUgZXZlcnl0aGluZy4gClBhZGRvY2sgaGFkIHN0b2NrcGlsZWQgNDcgZ3VucyBzaW5jZSAxOTgyIGFuZCBib3VnaHQgMzMgb2YgdGhlbSwgbW9zdGx5IHJpZmxlcywgb3ZlciB0aGUgcGFzdCB5ZWFyIGFsb25lLCByaWdodCB1cCB1bnRpbCB0aHJlZSBkYXlzIGJlZm9yZSB0aGUgYXR0YWNrLCBKaWxsIFNueWRlciwgYW4gYWdlbnQgd2l0aCB0aGUgZmVkZXJhbCBCdXJlYXUgb2YgQWxjb2hvbCwgVG9iYWNjbywgRmlyZWFybXMgYW5kIEV4cGxvc2l2ZXMsIHRvbGQgQ0JTIG9uIFdlZG5lc2RheS4KSG93ZXZlciwgdGhlcmUgaXMgYWx3YXlzIHRoZSByaXNrIG9mIGJlaW5nIHN1ZWQgc28gY29ycG9yYXRpb25zIGdlbmVyYWxseSBkb24ndCBhbGxvdyBlbXBsb3llZXMgdG8gZGV0YWluIHVubGVzcyBtZWV0aW5nLCBsaWtlIHlvdSBzYWlkLCByaWRpY3Vsb3VzIHN0YW5kYXJkcy4gCkFsc28ga25vd24gYXMgdHJpcHM7IFRocmVlIGNhcmRzIG9mIHRoZSBzYW1lIHJhbmsuCkluIHRoZSBtZWFudGltZSwgQmF0dGxlIGtlZXBzIGhpcyBzZWF0IGFuZCBoaXMgJDQyLDM2NSBzYWxhcnkuIApSdWxlcyBhZ2FpbnN0IGdydW50aW5nIHdoZW4gbGlmdGluZywgZmV3IHdlaWdodHMgYW5kIG90aGVyIGxpZnRpbmcgZXF1aXBtZW50IGV0Yy4gClNtYWxsIHN0YWtlcyBwbGF5ZXJzIGFsc28gdGVuZCB0byBkbyBiZXR0ZXIgd2l0aCBzbWFsbCBkZW5vbWluYXRpb24gY2FyZHMuIEEgcGFpciBvZiBqYWNrcyBtYXkgZWFzaWx5IGJlYXQgYSBwYWlyIG9mIGZvdXJzLCBidXQgcGVvcGxlIHdobyBkb24ndCBnYW1ibGUgbXVjaCB0ZW5kIHRvIHdpbiBtb3JlIHdpdGggdGhlIGZvdXJzIG9yIHdpdGggYW55IGNhcmRzIGZyb20gdHdvcyB0byBzZXZlbnMuIFRoYXQncyBiZWNhdXNlIHRoZSBjYXJkcycgbW9kZXN0IG51bWVyaWNhbCB3b3J0aCBpcyBlYXN5IHRvIHVuZGVyc3RhbmQ6IHRoZXkncmUgdmFsdWFibGUgYnV0IG5vdCB0aGF0IHZhbHVhYmxlLiAKWW91IGxhdWRlZCB0aGUgZWNvbm9taWMgYmVuZWZpdHMgb2YgYmVpbmcgYWJsZSB0byBkZXBvcnQgcGVvcGxlIHRvIG1haW50YWluIGxvdyB3YWdlcy4gSSB3b3VsZCBpbWFnaW5lIHRob3NlIHBlb3BsZSB3b3VsZG4gdGFsayBhYm91dCBob3cgbXVjaCB0aGV5IGJlbmVmaXQuIApEeWxhbiBSb3NzClRob3VnaCB0byBnaXZlIHlvdSBzb21lIGFkdmljZS4gVGhlIG9uZXMgSSB3b3VsZCBiZSB3b3JyaWVkIGFib3V0IGlmIHlvdSBhIHJlcHVibGljYW4uIEFyZSB0aGUgbGliZXJ0YXJpYW5zLiAKSXQgd2FzIGEgcGVyaW9kIHRoZSBMZWFmcyAoMTMgOCAxKSB3b3VsZCBsb3ZlIHRvIGZvcmdldC4KTW9yZSBvbiB0aGlzIGJlbG93Li4gCkluZmluaXR5VHVuYSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxMiBkYXlzIGFnbwpMYWR5IEdhR2EpLCBMZXQgTG92ZSBEb3duLCBCbHVlYmVycnkgS2lzc2VzLCBSZWQgQW5kIEJsdWUsIFJldHJvIFBoeXNpY2FsLCBSb2NrIFNob3csIFNlY29uZCBUaW1lIEFyb3VuZCwgU2V4eSBVZ2x5LCBHbGl0dGVyIEFuZCBHcmVhc2UgKEFyb3VuZCksIE5vIEZsb29kcywgUmliYm9ucywgT2ggV2VsbCwgRnV0dXJlIExvdmUgKExpdmUpLCBPdXQgT2YgQ29udHJvbCAoc2hvcnQgZGVtbyksIFdvcmRzLCBXb25kZXJmdWwsIFdpc2ggWW91IFdlcmUgSGVyZSwgU2hha2UgWW91ciBLaXR0eSwgU29tZXRoaW5nIENyYXp5LCBGaWx0aHkgUG9wLCBGYW5jeSBQYW50cywgRmV2ZXIsIERpcnR5IEljZSBDcmVhbSwgS2FuZHkgTGlmZSwgRm9vbGVkIE1lIEFnYWluIChIb25lc3QgRXllcyksIFJlbG9hZGVkLCBDYXB0aXZhdGVkIEVsZWN0cmljIEtpc3MsIExpdmluZyBPbiBUaGUgUmFkaW8sIFNwaW4gVSBBcm91bmQgKGZlYXQuIExhZHkgR2FHYSksIENoYW5naW5nIFNraWVzLCBEbyBNZSBSaWdodCAoZmVhdC4gCk1hbnkgVHJhZ2ljYWxseSBIaXAgZmFucyB3ZXJlIGxlZnQgZW1wdHkgaGFuZGVkIGZvciB0aGUgYmFuZCdzIDIwMTYgZmFyZXdlbGwgdG91ciB3aGVuIHZlbnVlcyBzb2xkIG91dCB3aXRoaW4gbWludXRlcywgbGVhdmluZyBodW5kcmVkcyBvZiB0aWNrZXRzIHNob3dpbmcgdXAgb24gc2Vjb25kYXJ5IG1hcmtldCBzaXRlcyBsaWtlIFN0dWJIdWIgYW5kIFNlYXRHZWVrLgpBbnkgZm9ybSBvZiBnYW1ibGluZywgeW91IG5lZWQgYSBzdHJvbmcgc3RvbWFjaCBhbmQgeW91IG5lZWQgdG8gaGF2ZSBhIHZlcnkgY29vbCBoZWFkIGFib3V0IHRoZSB1cHMgYW5kIGRvd24sIGhlIHNhaWQuIHRoaXMgZ3V5IHdhcyBhIG1pbGxpb25haXJlLCBpdCBxdWl0ZSBwb3NzaWJsZSBoZSB3YXMgbm90IGJvdGhlcmVkIGJ5IHRoZSB1cHMgYW5kIGRvd24uIEhlIHByb2JhYmx5IGhhZCBzdGVlbCBuZXJ2ZXMgYW5kIHdhcyBhIGRpZmZpY3VsdCBwZXJzb24gdG8gbW92ZSBlbW90aW9uYWxseS4gdW5rbm93biBob3cgbXVjaCBoZSB3YWdlcmVkLCBidXQgaGUgYXBwYXJlbnRseSBoYWQgYmVlbiB3YWdlcmluZyBtb3JlIHRoYW4gJDEwLDAwMCBhIGRheSBpbiBzb21lIGNhc2VzLiBUaGUgdGllcmVkIHByb2dyYW0gYWxsb3dzIHBsYXllcnMgdG8gYWNjdW11bGF0ZSBjcmVkaXRzIGFuZCBnZXQgcGVya3Mgc3VjaCBhcyBib251c2VzIG9uIHBvaW50cyBlYXJuZWQgcGxheWluZyBzbG90cywgcHJpb3JpdHkgaG90ZWwgY2hlY2sgaW4gYW5kIGZvciB0aG9zZSB3aG8gYmVsb25nIHRvIHRoZSBoaWdoZXN0IGFuZCBieSBpbnZpdGF0aW9uIG9ubHkgbGV2ZWwgbGltb3VzaW5lIHNlcnZpY2UgdG8gYW5kIGZyb20gdGhlIGFpcnBvcnQuClE6IFdpbGwgbXkgZnJpZW5kcyBvbiBGYWNlYm9vayBzZWUgbXkgY29tbWVudHM/CkFsc28gVmlld2VkIFR5cGVzIG9mIFRoZXJhcHkgSm9icyBUaGUgQXZlcmFnZSBZZWFybHkgSW5jb21lIG9mIGEgUmVzcGlyYXRvcnkgVGhlcmFwaXN0IFRoZSBBdmVyYWdlIFNhbGFyeSBvZiBhIE1hc3NldXNlIFRoZSBTYWxhcmllcyBvZiBSYWRpb2xvZ3kgVGhlcmFwaXN0cyBpbiBIb3NwaXRhbHMgUmlza3Mgb2YgQmVpbmcgYSBSYWRpYXRpb24gVGhlcmFwaXN0IFNhbGFyeSBvZiBDaGlyb3ByYWN0aWMgUGh5c2lvdGhlcmFweSBDaGlyb3ByYWN0b3IgVnMuIE9ydGhvcGVkaXN0CklmIHdlIHdvcmtpbmcgdGhlIHNhbWUgaG91cnMsIGl0IGZvbGxvd3MgdGhhdCB3ZSBzaGFyZSB0aGUgbG9hZCBlcXVhbGx5IGFuZCBwcm92aWRlIHRoZSB5aW4gYW5kIHlhbmcgKG1hc2N1bGluZSBhbmQgZmVtaW5pbmUpIGJhbGFuY2UgbmVlZGVkIGZvciBjaGlsZHJlbiB0byBncm93IHVwIGluIGEgYmFsYW5jZWQgYW5kIGhlYWx0aHkgZW52aXJvbm1lbnQuIApJbiBhbiBvbmxpbmUgY2FzaW5vLCB5b3UgY2FuIHBsYXkgaXQgcmlnaHQgaW4geW91ciBvd24gaG9tZS4gV2hhdCBtaWdodCB0YWtlIGFuIGhvdXIgb3Igc28gdG8gZ2V0IHRvIHRoZSBsb2NhbCBjYXNpbm8gb3IgYSBkYXkgb3Igc28gZm9yIHNvbWUgb2YgeW91LCBvdGhlcnMgY2FuIGdldCBpbnRvIGEgSG9sZGVtIGdhbWUgb25saW5lIGZvciByZWFsIG1vbmV5IGluIG9uZSBtaW51dGUgb3IgbGVzcy4gWW91IGRvbnQgaGF2ZSB0byBzaG93ZXIgYW5kIHNoYXZlIG9yIGNoYW5nZSB5b3VyIGNsb3RoZXMuIApJbiB0aGUgYnJpZWYgZ2xpbXBzZSB3ZSBnZXQgb2YgdGhlIHRhYmxlLCBldmVyeWJvZHkgc2VlbXMgdG8gaGF2ZSBzb21ld2hlcmUgYXJvdW5kIDEwIDE1IG9mIGVhY2ggY29sb3JlZCBjaGlwIGluIHRoZWlyIHN0YWNrcy4gClN0aWxsLCB0aGF0IHBhbGVzIGluIGNvbXBhcmlzb24gdG8gdGhlIG1vc3QgZmFtb3VzIHRpZSBpbiBBbWVyaWNhbiBwb2xpdGljcyBkdXJpbmcgdGhlIHByZXNpZGVudGlhbCBlbGVjdGlvbiBvZiAxODAwLiBUaG9tYXMgSmVmZmVyc29uIGFuZCBoaXMgcnVubmluZyBtYXRlIEFhcm9uIEJ1cnIgdGllZCBpbiB0aGUgRWxlY3RvcmFsIENvbGxlZ2Ugdm90ZSwgYXMgdGhlIENvbnN0aXR1dGlvbiBkaWQgbm90IGRpc3Rpbmd1aXNoIHZvdGVzIGJldHdlZW4gcHJlc2lkZW50IGFuZCB2aWNlIHByZXNpZGVudC4KSGlzIHNpZ25hdHVyZSBXZXN0IENvYXN0IHN0eWxlIHNob3dzIHVwIGluIGRpZmZlcmVudCB3b29kcyBhbmQgc2xhdGUgcHVsbGVkIG91dCBpbiBkaWZmZXJlbnQgc3BhY2VzLCBhY2NlbnRlZCBieSBtZXRhbCB0b3VjaGVzLk9uIHRoZSBZdXJ0eiBieSBEZXNpZ24gd2Vic2l0ZSwgb3duZXJzIGF0dGVzdCB0byB0aGUgZmFjdCB0aGUgc3RydWN0dXJlcyBob2xkIHVwIGluIHNvbWUgb2YgdGhlIGNvbGRlc3QgbG9jYXRpb25zIGluIHRoZSB3b3JsZC4gWXVydHMgb2YgdmFyeWluZyBzaXplcyBjYW4gYmUgY29ubmVjdGVkIHRvZ2V0aGVyIGFuZCBzZXJ2ZSBkaWZmZXJlbnQgcHVycG9zZXMsIGZyb20gcG9vbCBob3VzZSB0byBjb3R0YWdlIHRvIG1lZGl0YXRpb24gc3BhY2UuIApHZXR0aW5nIFN0YXJ0ZWQgaW4gU2l0IGFuZCBHbyBTTkcgUG9rZXIgVG91cm5hbWVudHMKSSBoYWQgYSBjdXN0b21lciBhIGZldyB5ZWFycyBhZ28gdGhhdCBkZWNpZGVkIHRvIGJ1aWxkIGhpcyBvd24gaG91c2UgdXNpbmcgY3JlZGl0IGNhcmRzIHRvIHBheSBldmVyeWJvZHkgdG8gZ2V0IHBvaW50cyBhbmQgbWlsZXMuIApIZSBoYWQgc3F1ZWV6ZWQgaGVyIGhhbmQgYW5kIHRvbGQgaGVyIGl0IHdhcyBuZWNlc3NhcnkuIApNclZ1dWxlICAyIHBvaW50cyAgc3VibWl0dGVkIDEgeWVhciBhZ28KSSB0cmllZCBteSBiZXN0IHRvIGdvIHVuZGVyIDE2MDAuIApUaGUgY29tYmluZWQgdGFraW5ncyBmb3IgYWxsIHBva2VyIG1hY2hpbmVzIGF0IFdhbmdhcmF0dGEgZm9yIHRoZSBsYXN0IHNpeCBtb250aHMgb2YgbGFzdCB5ZWFyIHdhcyAkNC4wODkgbWlsbGlvbiwgY29tcGFyZWQgd2l0aCAkNC4xMDkgbWlsbGlvbiBmb3IgdGhlIHNhbWUgcGVyaW9kIGR1cmluZyAyMDEyLiBJbiBBbHBpbmUgU2hpcmUgdGFraW5ncyByb3NlICQ3OCwwMDAgZHVyaW5nIHRoZSBzaXggbW9udGggcGVyaW9kLiBJbiBBdWd1c3QsIHRoZSBhbW91bnQgbG9zdCBieSBwbGF5ZXJzIGF0IEFscGluZSdzIHRocmVlIHZlbnVlcyByb3NlIGZyb20gJDIwNiw5NDAgaW4gQXVndXN0IDIwMTIgdG8gJDIzOCwxMDggaW4gQXVndXN0IDIwMTMuIApXZSBkaWRuIGFuZCB3ZSBhcmUgYmVpbmcgcHVuaXNoZWQgZm9yIGV2ZXJ5IG1pc3Rha2Ugd2UgbWFrZSBhdCB0aGlzIG1vbWVudCBhbmQgdGltZS4gClRoZW4gdGhlIG1vbWVudCB3aGVuIHRoZXkgaW5zZXJ0ZWQgYSBjYXRoZXRlciAodGhhdCdzIHRoZSBmaXJzdCBwYXJ0IG9mIHRoZSBtb21lbnQpLiAKIlRoaXMgaXMgZGVzcGl0ZSBzdHJvbmcgY291bmNpbCBhbmQgY29tbXVuaXR5IG9iamVjdGlvbnMgaW4gbW9yZSB0aGFuIGhhbGYgb2YgdGhlc2UgYXBwbGljYXRpb25zLCIgQ3IgR2FmZm5leSBzYWlkLiAKQ1I6IEkgZG9uJ3Qga25vdyBpZiBSb2xmaW5nIG5lY2Vzc2FyaWx5IGRpc2NvdXJhZ2VkIHRoZSBtZWRpY2FsIGNvbW11bml0eSBmcm9tIHN0dWR5aW5nIGZhc2NpYSwgYnV0IGNvbnNpZGVyIHRoYXQgdGhlIG1lZGljYWwgcGFyYWRpZ20gaXMgdG8gYmUgcmVsYXRpdmVseSBjb25zZXJ2YXRpdmUgd2hlbiBpdCBjb21lcyB0byBhY2NlcHRpbmcgdHJlYXRtZW50IHByb3RvY29scyBiYXNlZCB1cG9uIGFuZWNkb3RhbCByZXBvcnRzLiAKSSBoYWQgbWluZSBkb25lIGFib3V0IDE4IHllYXJzIGFnbywgYW5kIEkgY2hvc2UgcG9vcmx5LiAKV2UgZG9uIGRlbWFuZCBhIHVuaW9uLiAKS2lkcyB3aWxsIHdhbnQgdG8gcGxheSwgYW5kIGJyZWFrLiBPciB0aGV5IHdhbnQgdG8gdXNlIHRoZSBUViBzY3JlZW4gdGhhdCBJIGFtIHVzaW5nLiAKTXkgZmlyc3QgaW50ZXJ2aWV3IEkgbm90aWNlZCB0aGUgZ2lybCBjb21pbmcgaW4gd2FzIG5lcnZvdXMgYXMgZnVjayBhbmQgSSB3YXMganVzdCBsaWtlICJ3aGF0IHRoZSBoZWxsIGlzIHNoZSBzbyBuZXJ2b3VzIGZvciwgSSdtIGp1c3Qgc29tZSAxOSB5ZWFyIG9sZCBzY2htdWNrIiBhbmQgbWFraW5nIHRoYXQgY29ubmVjdGlvbiB0aGF0IGJvdGggc2lkZXMgb2YgdGhlIHNpdHVhdGlvbiwgaW50ZXJ2aWV3ZXIgYW5kIGludGVydmlld2VlIGFyZSBib3RoIHBlb3BsZS4gClVzaW5nIGEgZ29vZCBwb2tlciBjb3ZlciBjYW4gaGVscCB5b3UgYSBsb3Qga2VlcGluZyB5b3VyIGNhcmRzIHNhZmUuIAoiV2V0aG91Z2h0IGl0IHdhcyBhIGdyZWF0IGNvbm5lY3Rpb24gdGhhdHNvbWV0aGluZyBoZSAoTXIgTGV2ZXNxdWUpc3RhcnRlZCBzb21lIHRpbWUgYWdvIGNvdWxkIGJlIHVzZWQgdG8gaGVscCB0aGUgZmFtaWx5IG5vdywiIGhlIHNhaWQuIApBbHNvIGRpZWQgYXMgc3ViIGFkdWx0IDAuOTEgcmV4LCBiZWNhdXNlIGkgd2FzIGNhcmVsZXNzIGFuZCBvdmVyY29uZmlkZW50Li4gClR1cm50aGVmYW5vZmZwbGVhc2UgIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KTGVhZm5vb2QgIDEgcG9pbnQgIHN1Ym1pdHRlZCA5IGhvdXJzIGFnbwpEci4gTmljb2xlIFByYXVzZSwgbmV1cm9zY2llbnRpc3QgYW5kIGZvdW5kZXIgb2Ygc2V4dWFsIGJpb3RlY2hub2xvZ3kgY29tcGFueSwgTGliZXJvcywgZGlzYWdyZWVzIHdpdGggdGhlIGFudGkgcG9ybiBzZW50aW1lbnQsIGhvd2V2ZXIsIGNhbGxpbmcgdGhlIE5SSyBwcm9ncmFtICJzb3JlbHkgbWlzZ3VpZGVkLCIgaW4gYW4gZW1haWwgaW50ZXJ2aWV3LiAKQWNjb3JkaW5nIHRvIG1lZGljYWwgcmVjb3JkcyBvZiB0aGUgYmlydGggb2YgaGVyIGZpcnN0IGNoaWxkLCBpbiAxOTk1LCBzaGUgd2FzIHdoZWVsZWQgaW50byB0aGUgZW1lcmdlbmN5IHdhcmQgYnkgaGVyIGJveWZyaWVuZC4gClRoZSA0IDggZ2FtZSBoYWQgdGhlIHNhbWUgcmFrZSBhcyB0aGUgMiA0IGdhbWUgYW5kIGFib3V0IHRoZSBzYW1lIG51bWJlciBvZiB0ZXJyaWJsZSBwbGF5ZXJzLiAKMi4gCiJZb3UgY2FuIGJlIG1vbml0b3JpbmcgcG9sbGVuIGNvdW50cyBvbmxpbmUsIHNvIHlvdSBhcmUgYXdhcmUgd2hlbiB0aGVyZSdzIGhpZ2ggYW1vdW50cyBvZiBwb2xsZW4gaW4gdGhlIGFpciwiIHNoZSBzYWlkLiAKVGhleSBzYWlkIG5vdGhpbmcgd291bGQgaGFwcGVuLiIuIApPciBKSiBhcmUgc3Ryb25nIGhhbmRzIGJ1dCB2dWxuZXJhYmxlIHRvIGFuIHVuZmF2b3JhYmxlIGZsb3AsIHdoaWNoIGlzCk9uZSBndXkgd291bGQgcmFuZG9tbHkgYmV0IGEgcmFuZG9tIGhhbmRmdWwgb2YgJDI1IGNoaXBzIGlmIGhlIHRob3VnaHQgeW91IHdlcmUgd2Vhay4gCldoaWNoIGlzbiBzdXJwcmlzaW5nLiAKQnV0IGJsb29kIGlzIHRoZSBtb3N0IGNvbW1vbmx5IHRlc3RlZCBwYXJ0IG9mIHRoZSBib2R5LCBhbmQgaXQgaXMgdHJ1bHkgdGhlIHJpdmVyIG9mIGxpZmUuIApGb3IgdGhlIHBhc3QgNCB5ZWFycyB3aGlsZSBJIHdhcyBpbiBDYWxpLiBJIGZlbGwgaW50byBhIGRlZXAgc2x1bXAgdGhhdCBJIGNvdWxkbid0IHNlZW0gdG8gcHVsbCBvdXQgb2YgYW5kIGl0IHdhcyB3ZWxsLCBjcmFwcHkuIApTYXlpbmcgdGhhdCBoZSB0YXVnaHQgaGVyIHNwZWNpYWwgbWFzc2FnZSB0ZWNobmlxdWVzIGFuZCBoaXMgYnVzaW5lc3MgbWV0aG9kcywgYW4gRWFzdCBTdHJvdWRzYnVyZyBtYW4gaGFzIGFza2VkIE5vcnRoYW1wdG9uIENvdW50eSBDb3VydCB0byBwcm9oaWJpdCBhIHdvbWFuIGhlIGZvcm1lcmx5IGVtcGxveWVkIGZyb20gY29uZHVjdGluZyBhIG1hc3NhZ2UgYnVzaW5lc3MgaW4gRWFzdCBBbGxlbiBUb3duc2hpcC4gCklmIEkgYW0gaW50ZXJlc3RlZCBpbiBpbnRlcnZpZXdpbmcgb3IgaGlyaW5nIHlvdSwgeW91IGJlIHRoZSBmaXJzdCB0byBrbm93LiBCdXQgcmVzcGVjdCBteSB0aW1lIGFzIHdlbGwuIApTbyB1cG9uIGV4cG9zdXJlIHRvIHRoZSBsb3dlciBsZXZlbHMgb2YgYW50aWJpb3RpYywgc29tZSBjZWxscyBkbyBpbmRlZWQgZGV2ZWxvcCBtdXRhdGlvbnMgdGhyb3VnaCB0aGlzIG1lY2hhbmlzbSwgYWxsb3dpbmcgdGhlbSB0byB0aHJpdmUgYXQgdGhlIGhpZ2hlciBjb25jZW50cmF0aW9ucy4gCkZvciBDaHJpc3RtYXMgbXkgZGFkIGdvdCBtZSBhIGJsdWV0b290aCBmcmlzYmVlIHRoYXQgc3VwcG9zZWQgdG8gY29ubmVjdCB0byB5b3VyIHBob25lIGFuZCBwbGF5IG11c2ljLiBJdCBkb2VzbiBtYWtlIGFueSBzZW5zZSB0byBtZSB3aHkgdGhpcyB0aGluZyBzZWVtZWQgbGlrZSBhIGdvb2QgaWRlYSB0byBtYWtlLiBJdHMgaGVhdnksIGl0IHNvdW5kcyBsaWtlIGNyYXAsIHlvdSBzdXBwb3NlZCB0byB0aHJvdyB0aGlzIHNwZWFrZXIgdGhhdCBzdXBwb3NlZGx5IHBsYXlpbmcgbXVzaWMgeW91IGxpa2UgYXdheSBmcm9tIHlvdSB3aGVuIHlvdSBnZXQgaXQgKyBpdCBsaW1pdGVkIG9uIGhvdyBmYXIgeW91IGNhbiB0aHJvdyBpdCBiZWNhdXNlIGl0IGNvbm5lY3RlZCB0byB5b3VyIHBob25lLiAKRWFjaCBwZXJzb24gaW4gdGhlIGdhbWUgY29uc2lkZXJzIHRoZSBpbmRpdmlkdWFsIHRoYXQgaXMgc2l0dGluZyBhY3Jvc3MgZnJvbSB0aGVtIGFzIGEgcGFydG5lciBpbiB0aGUgZ2FtZS4gClRoZXJlJ3MgYWxzbyB0aGUgaWxsaWNpdCB0aHJpbGwgb2YgZ2V0dGluZyBhd2F5IHdpdGggaXQuIApUaGUgYm95cyB3ZXJlIGFib3V0IDQgYnV0IGVhY2ggb2YgdGhlbSBhbHJlYWR5IGtuZXcgdGhhdCBmbG9yYWwgc2hvZXMgd2VyZSAiZ2lybHMiIHNob2VzIGFuZCB0aGUgaWRlYSBvZiBhIGJveSB3ZWFyaW5nIHRoZXNlIHdhcyBvdXRsYW5kaXNobHkgZnVubnkuIEkgd2FzIHNvIHNhZCwgd2h5IGFyZSBmbG93ZXJzIGZvciBnaXJscz8gV2h5IGlzIGJlYXV0eSBnZW5kZXJlZD8gV2h5IGRvIHdlIHRlYWNoIGJhYmllcyB0aGF0IHNvZnQgdGhpbmdzIGFyZSBmb3IgZ2lybHMgKGtpdHRlbnMsIHVuaWNvcm5zLCBmbG93ZXJzLCBjdXBjYWtlcykgYW5kIGhhcmQgdGhpbmdzIGFyZSBmb3IgYm95cyAodHJ1Y2tzLCBza3VsbHMsIG1vdG9yYmlrZXMsIGxpb25zKT8gV2UgY29uZGl0aW9uIG91ciBiYWJpZXMgZnJvbSB0aGUgc3RhcnQuLiAKVGhpcyB3aWxsIGNvbnRpbnVlIHRvIGRpdmlkZSB1cy4gV2Ugd2lsbCBzdGVhZGlseSBiZWNvbWUgbW9yZSBsaWtlIG91ciBBbWVyaWNhbiBjb3VudGVycGFydHMgaW4gdGhhdCB3ZSB3aWxsIGJlY29tZSBhbmdyaWVyIGFuZCBhbmdyaWVyIGF0IGVhY2ggb3RoZXIsIHN0ZWFkZmFzdCBpbiBvdXIgYmVsaWVmcywgYmFja2luZyB0aGVtIHVwIHdpdGggdGhlIHN0YXRpc3RpY3Mgd2UgaGVhcmQgb24gdGhlIHJhZGlvIHRoYXQgbW9ybmluZyBvciByZWFkIGluIGEgaGVhZGxpbmUgb24gb3VyIGx1bmNoIGJyZWFrLgpZb3Ugd2VsY29tZSB0byBzbW9rZSBjaWdhcmV0dGVzIGFuZCBkcmluayBhIGJlZXIgb3IgdHdvLCBidXQgYnkgZ29sbHkgaWYgeW91IGhhdmUgYSBnaXJsZnJpZW5kIHNoZSBlaXRoZXIgam9pbnMgdGhlIGNodXJjaCBvciB5b3UgaGF2ZSB0byBicmVhayB1cC4KQ2FuIG5ldmVyIHN0b3AgaXRzIGNvbnRpbnVvdXMgdG91ciBvZiBpZGlvY3kgYWNyb3NzIHRoZSBvY2VhbiBvciBpdCBmdWNraW5nIHNpbmsuIEVYQ0VQVC4gClBva2VyIHJvb21zIHRha2UgYWJvdXQgZml2ZSBwZXJjZW50IG9mIHRoZSByZXZlbnVlIGdlbmVyYXRlZCBmcm9tIGVhY2ggY2FzaCBnYW1lIGFuZCB0aGlzIGZlZSBpcyByZWZlcnJlZCB0byBhcyBhIHJha2UuIAo1KSBsZWF2ZSB0aGUgYm90dG9tIHJpZ2h0IHBvcnRhbCBhbG9uZSwgYW5kIG1vdmUgdGhlIG90aGVyIG9uZSBhdCB0aGUgYm90dG9tIGxlZnQsIHRoZSBleGl0IGZhY2luZyB0aGUgYmxhY2tob2xlIHRoaW5nLiBUaGUgc3BlZWQgd2lsbCBjYXRjaCBpdCwgYW5kIGl0IHdpbGwgdGVsZXBvcnQgdGhlIGJhbGwgdG8gdGhlIGxhc3QgcG9pbnQgdGhpbmcgNikgcmV2ZXJzZSBldmVyeSB0aGluZyB0byB0aGUgc3RhcnQsIGFuZCBtb3ZlIHRoZSBib3R0b20gcmlnaHQgcG9ydGFsIHRvIHRoZSB0b3AgbGVmdCwgdGhlIG9uZSBhbG1vc3QgZmFjaW5nIHRoZSBmaW5pc2gsIHRoZW4gbGV0IGdvIG9mIHRoZSBiYWxsLiAKR2VtZWluc2FtIGZlaWVybiB1bmQgc3BlbmRlbiAgIHVudGVyIGRpZXNlbSBNb3R0byB3dXJkZW4gYXVmIGRlciBFcmZmbnVuZ3NmZWllciBUb21ib2xhbG9zZSB6dSBqZXdlaWxzIGZuZiBFdXJvIGRhcyBTdGNrIHZlcmthdWZ0IHVuZCBkYXJ1bSBnZWJldGVuLCBhbiBTdGVsbGUgdm9uIEdlc2NoZW5rZW4gZnIgZGllIFNjaHV0enN0YXRpb24gV2F0dGVubWVlciB6dSBzcGVuZGVuLiBEZXIgZWluZ2V0cmFnZW5lIFZlcmVpbiB2ZXJmb2xndCBkYXMgWmllbCwgVmVyc3RuZG5pcyB1bmQgRmFzemluYXRpb24gZnIgZGFzICJrb3N5c3RlbSBXYXR0ZW5tZWVyIiB1bmQgZGllIE5vcmRzZWUgenUgd2Vja2VuLCB1bSBzb21pdCBkZW4gU2NodXR6IHVuZCBkaWUgU2NodXR6YmVyZWl0c2NoYWZ0IGRpZXNlciBMZWJlbnNydW1lIHp1IGVyaGhlbi4gWnVyIEVyZmxsdW5nIGRpZXNlciBaaWVsZSBkaWVudCBlaW4gTmV0endlcmsgdm9uIDIwIFN0YXRpb25lbiB1bmQgSW5mb3JtYXRpb25zemVudHJlbiwgZGllIGVudGxhbmcgZGVyIFNjaGxlc3dpZyBIb2xzdGVpbmlzY2hlbiBOb3Jkc2Vla3N0ZSwgZGVuIEluc2VsbiB1bmQgSGFsbGlnZW4gZ2VmaHJ0IHdlcmRlbi4gClRoaXMgaXMgbm90IHRoZSBvbmx5IHdhbGwuIApUaG9zZSBwZW9wbGUgd2hvIGFyZSBjb25jZXJuZWQgYWJvdXQgdGhlaXIgcGFydG5lcnMgaGF2ZSBhIHJlYWxseSBhZGFwdGl2ZSBbdHJhaXRdIHRoYXQgd29yayBpbiBhbiBvbmdvaW5nIGhlYWx0aHkgcmVsYXRpb25zaGlwLCBidXQgaXQgbWlnaHQgYWxzbyB0cmFwIHBlb3BsZSB3aG8gYXJlIGluIHVuaGFwcHkgcmVsYXRpb25zaGlwcywgSm9lbCBzYWlkLiBhIGRvdWJsZSBlZGdlZCBzd29yZC4gYXJlIGluaGVyZW50bHkgcHJvIHNvY2lhbCwgYW5kIHRoZXkgY2FyZSBhYm91dCB0aGVpciBwYXJ0bmVyIGZlZWxpbmdzLCBzaGUgc2FpZC4KU2luY2UgTW9uZGF5cyBhcmUgZm9yIHBhc3RhLCBpdCBtZWFucyB0aGF0IHRoZSB3ZWVrIHN0YXJ0cyBvdXQgdmVyeSBnZW50bHkuIEFsbCBJIG5lZWQgdG8gZG8gaXMgbWFrZSBhIHBvdCBvZiB0b21hdG8gc2F1Y2UsIHdoaWNoIEkgY291bGQgZG8gaW4gbXkgc2xlZXAsIGFuZCBzb21lIGdyZWVuIHZlZ2V0YWJsZSAoc29tZXRpbWVzLCB5ZXMsIGl0IGp1c3QgYSBzbGljZWQgY3VjdW1iZXIgYmVjYXVzZSBJIGFtIG9ubHkgaHVtYW4sIG90aGVyIHRpbWVzIGl0IHN0ZWFtZWQgYnJvY2NvbGkgb3IgYm9pbGVkIGNoYXJkKS4gRGlubmVyIGlzIHZlcnkgZWFzeSBhbmQgYWxtb3N0IGFsd2F5cyBkcmFtYSBmcmVlLCBiZWNhdXNlIHRoZSBib3lzIGJvdGggZWF0IG5vb2RsZXMgYW5kIGV2ZXJ5b25lIGhhcHB5LiBJdCBhbGxvd3MgbWUgdG8gc3RhcnQgdGhlIHdlZWsgb2ZmIGZlZWxpbmcgc29tZXdoYXQgY2FwYWJsZSBhbmQgaW4gY29udHJvbC4KVGhlIG9uZXMgdGhhdCBjYW4gY2F1c2UgbmVjcm90aWMgZmxlc2ggKGxpdGVyYWxseSBza2luIHJvdHRpbmcgc29yZXMpLiBNeSBib3lmcmllbmQgZGlkbiBiZWxpZXZlIG1lLiBJIGNhcHR1cmVkIG9uZS4gCkhvd2V2ZXIsIC9sb29zZWx5LyBtYW55IG90aGVyIGNvYXN0YWwgZmVycmllcyBhcmUgcmVmZXJyZWQgdG8gYXMgaHVydGlncnV0ZW4gZXZlbiB0aG91Z2ggcHJvcGVybHkgdGhleSBhcmUgbm90LiBUaGlzIGlzIHdoeSBmb3IgZXhhbXBsZSB0aGUgUkdOIGhhcyBpdCB0aGF0IHRoZXJlIGlzIGEgaHVydGlncnV0ZSBzZXJ2aWNlIGZyb20gTW9za2VuZXMgdG8gQm9kby4gSWYgZmFjdCB0aGlzIHNlcnZpY2UgaXMgcHJvdmlkZWQgdXNpbmcgc2hvcnQgaGF1bCBmZXJyaWVzIG9wZXJhdGVkIGJ5IGEgZGlmZmVyZW50IGNvbXBhbnkgVG9yZ2hhdHRlbiBOb3JkICh3aGljaCBpcyB3aHkgeW91ciB0aW1ldGFibGUgd291bGQgbm90IHNob3cgTW9za2VuZXMgYXMgYSBwb3J0IG9mIGNhbGwpClRoaXMgaXMgdmVyeSBoYXJkLiAKKEFQKSBBIFNvbWVyc2V0IENvdW50eSBDaXJjdWl0IENvdXJ0IGp1cnkgV2VkbmVzZGF5IHNlbnRlbmNlZCBBbnRob255IEdyYW4gIGRpc29uIHRvIGRlYXRoIGhpIGNvbm5lY3Rpb24gd2l0aCB0aGUgY29udHJhY3Qga2lsbGluZ3Mgb2YgdHdvIHBlb3BsZSBhdCBhIFBpa2VzdmlsbGUgbW90ZWwgaW4gQXByaWwgMTk4My4gCk5vdywgaWYgeW91IHBhaWQgc29tZW9uZSB0byBndWFyZCB5b3VyIGNhciBmcm9tIHRoaWV2ZXMgYW5kIGEgdGhpZWYgc3RvbGUgc29tZXRoaW5nLCB0aGF0J3MgYSBkaWZmZXJlbnQgc3RvcnkuIApUaGUgdHJ1dGggYWJvdXQgc3R1ZGVudCBsb2FucyBpcyB0aGF0IHRoZXkgYmVjYW1lLCB1bmRlciB0aGUgaW5jcmVkaWJseSBwcm8gbWFya2V0IHBvbGljaWVzIG9mIFJvbmFsZCBSZWFnYW4sIGEgd2F5IHRvIGV4dHJhY3QgcHJvZml0IGZyb20gc3R1ZGVudHMuIEF0IHRoaXMgcG9pbnQsIHRoZSBhdmVyYWdlIGdyYWR1YXRpbmcgY29sbGVnZSBzdHVkZW50IGlzIGFib3V0ICQyNCwwMDAgaW4gZGVidCBpbiBjb21tZXJjaWFsIGxvYW5zIHRvIGJhbmtzIGFzIHdlbGwgYXMgYW5vdGhlciBjb3VwbGUgb2YgdGhvdXNhbmQgZG9sbGFycyBpbiBjcmVkaXQgY2FyZCBkZWJ0LiBUaGF0IGJlY2F1c2UgdGhlIGdvdmVybm1lbnQgc3R1ZGVudCBsb2FuIHN1YnNpZGllcyBzdGFydGVkIGdvaW5nIHRvIGNvbW1lcmNpYWwgYmFua3MgKHJhdGhlciB0aGFuIGJlaW5nIGRpc3RyaWJ1dGVkIHRocm91Z2ggUGVsbCBncmFudHMgYW5kIG90aGVyIHN0YXRlIHJ1biBwcm9ncmFtcykgc28gYmFua3MgY291bGQgbWFrZSBhIHByb2ZpdCBvZmYgb2Ygc3R1ZGVudHMgYW5kIHRoZWlyIGZhbWlsaWVzLgpObywgSSBkbyBub3QgcmVhbGl6ZSB3aGF0IGlzIGdvaW5nIG9uIGluIHRoZSBTdGF0ZXM7IEkgZG8gbm90IGxpdmUgdGhlcmUuIFdoaWNoIGlzIGJlc2lkZSB0aGUgcG9pbnQuIEkga25vdyB0aGF0IG1hbnkgcGVvcGxlIGluIG1hbnkgY291bnRyaWVzIGFyZSBuZWdsZWN0ZnVsIGluIHRoYXQgcmVnYXJkLCBhYm91dCB3aGljaCBJIGFtIHNhZCwgYW5kIHRoYXQgbWFueSBnb3Zlcm5tZW50cyBhcm91bmQgdGhlIHdvcmxkIHRyeSB0byBlbGltaW5hdGUgdGhhdCBuZWdsZWN0LCBmb3Igd2hpY2ggSSBhbSBncmF0ZWZ1bC4gCkhlIGxvc3QgYSBsb3QgaW4gdGhlIGVhcmx5IGRheXMsIGluY2x1ZGluZyBhIGZyaWVuZCBjYXIgdGhhdCBoZSB1c2VkIGFzIGEgYmV0LiBNZXNzZWQgcm91bmQgd2l0aCBzb21lIHJvdWdoIGdlZXplcnMsIGhlIHJlY2FsbGVkLiAKTGV0IGxvb2sgYXQgdmlsbGFpbiByYW5nZSBoZXJlOiBIaXMgS0sgc2hvdWxkIDNiZXQgcHJlIG1vc3Qgb2YgdGhlIHRpbWUgc28gSSBub3Qgd29ycmllZCBhYm91dCB0aGF0LiAKQ2hlY2sgRmxvcCBhbmQgb3Bwb25lbnQgY2hlY2tzIGJlaGluZC4KRmVsaXggU2F0ZXIgaXMgYSBSdXNzaWFuIGJvcm4gZm9ybWVyIG1vYnN0ZXIsIGFuZCBmb3JtZXIgbWFuYWdpbmcgZGlyZWN0b3Igb2YgTlkgcmVhbCBlc3RhdGUgY29uZ2xvbWVyYXRlIEJheXJvY2sgR3JvdXAgTExDIGxvY2F0ZWQgb24gdGhlIDI0dGggZmxvb3Igb2YgVHJ1bXAgVG93ZXIuIEhlIGlzIGEgY29udmljdCB3aG8gYmVjYW1lIGEgZ292dCBjb29wZXJhdG9yIGZvciB0aGUgRkJJIGFuZCBvdGhlciBhZ2VuY2llcy4gSGUgZ3JldyB1cCB3aXRoIE1pY2hhZWwgQ29oZW4gVHJ1bXAgZm9ybWVyICJmaXhlciIgYXR0b3JuZXkuIENvaGVuIGZhbWlseSBvd25lZCBFbCBDYXJpYmUsIHdoaWNoIHdhcyBhIG1vYiBoYW5nb3V0IGZvciB0aGUgUnVzc2lhbiBNYWZpYSBpbiBCcm9va2x5bi4gQ29oZW4gaGFkIHRpZXMgdG8gVWtyYWluaWFuIG9saWdhcmNocyB0aHJvdWdoIGhpcyBpbiBsYXdzIGFuZCBoaXMgYnJvdGhlciBpbiBsYXdzLiBGZWxpeCBTYXRlciBmYXRoZXIgaGFkIHRpZXMgdG8gdGhlIFJ1c3NpYW4gbW9iLiBUaGlzIGdvZXMgYmFjayBtb3JlIHRoYW4gMzAgeWVhcnMuCklmIHlvdSBsaXZlIHlvdXIgbGlmZSBiZWluZyBvZmZlbmRlZCBhdCBldmVyeXRoaW5nIHlvdSB3b250IGJlIGhhcHB5LiAKVGhlIDIxNyAxODUgSG91c2Ugdm90ZSBUaHVyc2RheSBjYXBwZWQgYSB0dW11bHR1b3VzIGRheSBpbiB3aGljaCBUcnVtcCBzdXJwcmlzZWQgZmVsbG93IFJlcHVibGljYW5zIGJ5IGluc2lzdGluZyBoZSB3b24ndCBzaWduIGEgYmlsbCB3aXRob3V0IHRoZSBib3JkZXIgbW9uZXksIGFmdGVyIHRoZSBXaGl0ZSBIb3VzZSBoYWQgaGludGVkIGhlIHdvdWxkIGFjY2VwdCBpdC4gTm93LCB0aGUgSG91c2UgYW5kIFNlbmF0ZSBoYXZlIHBhc3NlZCBzcGVuZGluZyBtZWFzdXJlcyB0aGF0IGRpZmZlciBpbiBvbmUgY3J1Y2lhbCB3YXkgICB0aGUgSG91c2UgYmlsbCBpbmNsdWRlcyB0aGUgJDUgYmlsbGlvbiBUcnVtcCBpcyBkZW1hbmRpbmcgZm9yIGEgd2FsbCBhbmQgdGhlIFNlbmF0ZSB2ZXJzaW9uLCBwYXNzZWQgYSBkYXkgZWFybGllciwgZG9lcyBub3QuVHJ1bXAgc2F5cyBoZSdsbCBvbmx5IHNpZ24gYSBzcGVuZGluZyBiaWxsIHdpdGggdGhlIGJvcmRlciBtb25leSwgYW5kIHNlbmF0b3JzIG9mIGJvdGggcGFydGllcyBzYXkgdGhlcmUncyBubyBjaGFuY2UgdGhlaXIgY2hhbWJlciB3aWxsIGNoYW5nZSBpdHMgcG9zaXRpb24gYW5kIGZ1bmQgYSB3YWxsLiAKSSB0b3NzIG91dCBhIGNvdXBsZSBleGFtcGxlIGZyYW1lcywgYnV0IGRvbiB3YW50IHRvIGdldCBCIGFuZCB2LiAKRmlyc3QgY3V0IHRoZSBsaW1lcyBpbnRvIHNtYWxsIHBpZWNlcyB0aGVuIHB1dCB0aGUgc2xpY2VkIGxpbWUgcGllY2VzIGludG8gYSBibGVuZGVyIHRvIGZvcm0gYSBwdWxwLiBNaXggdGhlIGxpbWUgcHVscCB3aXRoIGFsbW9uZCBvaWwsIG1pbnQgbGVhdmVzIGFuZCBlc3NlbnRpYWwgb2lsLiAKTXkgZmFtaWx5IHN0cnVnZ2xlZCBmaW5hbmNpYWxseSwgSSB3YXMgZW5kbGVzc2x5IGJ1bGxpZWQsIG15IGZyaWVuZHMgYWxsIGFiYW5kb25lZCBtZSwgdGhlIHRlYWNoZXJzIHNhdyBhbmQgZGlkbiBjYXJlLCB0aGVyZSB3YXMgbm8gZXh0cmEgdGFibGUgdG8gc2l0IGFsb25lIHlvdSBoYWQgdG8gYXdrd2FyZGx5IGFzayB0byBzaXQgYW5kIGJlIHB1YmxpY2x5IGRlbmllZCB1bnRpbCBzb21lb25lIGZpbmFsbHkgbGV0IHlvdSBhbmQgdGhlIHNlY3VyaXR5IGd1YXJkcyB3b3VsZG4gbGV0IHlvdSBsZWF2ZSB0aGUgY2FmZXRlcmlhIHRvIGVhdCBhbG9uZSwgbXkgZmFtaWx5IGtuZXcgYW5kIGRpZG4gY2FyZSBhY3R1YWxseSBqdXN0IG1hZGUgZnVuIG9mIG1lIGZvciAiYmVpbmcgZGVwcmVzc2VkIGFsbCB0aGUgdGltZSIgbGlrZSBpdCB3YXMgYW4gaW5jb252ZW5pZW5jZSwgbm8gc2Nob29sIGV2ZXIgcmFsbGllZCB3aXRoIG1lLiAKV2UgaGF2ZSAyIHBlb3BsZSBmb3IgOTAgbWludXRlcyBvbiBhIGJpIHdlZWtseSBiYXNpcy4gClNlbG9uIGxhIG5vdXZlbGxlIHJkYWN0aW9uIHByb3Bvc2UsICBsYSBwZWluZSBwcml2YXRpdmUgZGUgbGliZXJ0IGVuY291cnVlIGVzdCByZHVpdGUgZHUgdGllcnMuIApNeSBmaXJzdCBnbGltcHNlIG9mIEljeSBTdHJhaXQgUG9pbnQgaXMgZXhhY3RseSB3aGF0IEkgYWx3YXlzIGltYWdpbmVkIEFsYXNrYSB0byBsb29rIGxpa2UuIERhcmsgc21vb3RoIHdhdGVycyBsYXBwaW5nIGFnYWluc3QgYSByb2NreSBzaG9yZWxpbmUsIHdpdGggYSBsb25nIHBpZXIgbGVhZGluZyB0byBhIGZpc2ggY2FubmVyeSAobm93IGEgbXVzZXVtKSwgZmxhbmtlZCBieSBwaW5lIGNvdmVyZWQgbW91bnRhaW5zLgpOb3QgdW50aWwgcmVudHMgaGF2ZSByaXNlbiBlbm91Z2ggZnJvbSB0aGUgZGF0ZSB5b3UgYnV5IGl0d2lsbCB5b3Ugc2VlIGFueSBzaXphYmxlcmVsaWVmLiAKVGhlIG9ubHkgcHJvYmxlbSBJIGhhdmUgd2l0aCBJdGFsaWFuIGlzIHRoZSBvdmVydXNlIG9mIHRoZSBzYW1lIHZvd2VscyBpbiBuZWFybHkgZXZlcnkgc3lsbGFibGUuIApUaGlzIGNvdW50cnkgaXMgYnVpbHQgb2ZmIHRoZSBmb3VuZGF0aW9uIG9mIGluanVzdGljZSwgaXQgb25seSBzZXJ2ZXMgdGhlIHJpY2ggYW5kIGtpbGxzIHRoZSBwb29yLiAKQnV5IG5ldyBmcmFtZXMgZm9yIFBob3RvIEZyYW1lIFN0dWRpbyBQaG90byBGcmFtZSBTdHVkaW8gUHJvZ3JhbS4gNi4gMzIgdm90ZXMuIAoiQXMgZWFybHkgYXMgc2l4IG9yIHNldmVuIHllYXJzIGFnbyBBdGxhbnRpYyBDaXR5IGhhZCBubyBBc2lhbiBicm90aGVscywgYnV0IHRoZXkgaGF2ZSBoYWQgcXVpdGUgYSBmZXcgaW4gdGhlIGxhc3QgdGhyZWUgb3IgZm91ciB5ZWFycywiIENoaW4gc2FpZC4gIlRoZXkgY2F0ZXIgbWFpbmx5IHRvIEFzaWFuIG1hbGVzLiBNb3N0IG9mIHRoZXNlIGN1c3RvbWVycyBhcmUgbWFycmllZCwgYnV0IHRoZWlyIHdpdmVzIGFyZSBzdGlsbCBpbiBBc2lhIHNvIHRoZXJlIGlzIGEgc3Ryb25nIGRlbWFuZCBmb3IgdGhlIHNlcnZpY2VzIG9mIEFzaWFuIHdvbWVuIGhlcmUuIgpTaGUgcHJvZ3JhbW1lZCB5b3UgdG8gYWNjZXB0IHRoYXQgc2hlIGp1c3QgZ29pbmcgdG8gZG8gd2hhdCBzaGUgd2FudHMgdG8gZG8gYW5kIHlvdSBoYXZlIHRvIGFjY2VwdCBpdC4gVGhhdCB3aGF0IHdlIGNhbGwgYSBicm9rZW4gbm9ybWFsIG1ldGVyIGhlcmUuIEdpdmUgeW91cnNlbGYgc29tZSB0aW1lIHRvIGdldCBzb2xpZCBvbiB0aGlzICAgeW91IGtub3cgc2hlIGRpZCB5b3Ugd3JvbmcsIHlvdSBuZWVkIHRvIGRlZmVuZCB5b3VyIHJpZ2h0IHRvIHNldCByZWFzb25hYmxlIGJvdW5kYXJpZXMuLiAKVGhlIG9sZGVyIGFuZCBoZWF2aWVyIHBlb3BsZSBhcmUsIHRoZSBtb3JlIHRoZXkgdGVuZCB0byBvdmVyZXN0aW1hdGUgdGhlaXIgcGh5c2ljYWwgYWN0aXZpdHkuIFByZXZpb3VzIHJlc2VhcmNoIGluZGljYXRlZCBhIHJlbGF0aW9uc2hpcCBiZXR3ZWVuIHNlZGVudGFyeSBiZWhhdmlvciBhbmQgZGlzYWJpbGl0eSBidXQgaXQgd2FzIGJhc2VkIG9uIHNlbGYgcmVwb3J0cyBhbmQsIHRodXMsIGNvdWxkbid0IGJlIHZlcmlmaWVkLi4gCkRlIGdyYW5kcyBtZXJjaXMgIFJvbGFuZCBGZXVpbGxhcyBwb3VyIGxlIHRyYXZhaWwgcXUnaWwgZmFpdCBldCBsZSBwYXJ0YWdlIGRlIHNvbiBzYXZvaXIgZXQgIENhcm9saW5lIHBvdXIgYXZvaXIgdCB1bmUgbWVzc2FncmUgZ291cm1hbmRlLiAKSXQgd2FzIGEgVGV4YXMgSG9sZCdlbSBQb2tlciBUYWJsZSB3aXRoIFBlZGVzdGFsIExlZ3MgdGhhdCBsb29rZWQgc3R1cmR5IGFzIGNhbiBiZS4gClRoZSB1c2Ugb2Ygb2lsIGFsc28gaGVscHMgaW4gY3JlYXRpbmcgZnJpY3Rpb24uIEl0IGlzIGNvbW1vbmx5IHVzZWQgaW4gU3dlZGlzaCBtYXNzYWdlLiAKVGhlIFBlbm5zeWx2YW5pYSBHYW1pbmcgQ29udHJvbCBCb2FyZCBoYXMgYSBsaWNlbnNlIGZvciBhIGNhc2lubyB0aGVyZSwgYnV0IGhhcyB5ZXQgdG8gYXBwcm92ZSBhIGRldmVsb3BtZW50IHBsYW4uIApBbGwgcG9rZXIgcGxheWVycyB3YWxrIGF3YXkgYSB3aW5uZXIgd2l0aCBhIHBhcnRpbmcgZ2lmdCBhbmQgYW4gb3Zlcm5pZ2h0IHJvb20gZm9yIHRoZSBuaWdodCBvZiB0aGUgdG91cm5hbWVudCBjb21wbGltZW50cyBvZiBNb3RvckNpdHkgQ2FzaW5vIEhvdGVsIGZvciB0aGUgcmVnaXN0ZXJlZCBwbGF5ZXIgYW5kIG9uZSBndWVzdC4gCkl0IHNwZWNpZmljYWxseSBmdW5jdGlvbnMgYXMgYW4gZWxlY3Ryb24gYWNjZXB0b3IgZm9yIGNvbXBsZXggSSBhbmQgY29tcGxleCBJSSB3aXRoaW4gdGhlIG1pdG9jaG9uZHJpYWwgbWVtYnJhbmUuIEFzIHN1Y2gsIGEgZGVjbGluZSBpbiBDb1ExMCBsZXZlbHMgd2l0aGluIHRoZSBtaXRvY2hvbmRyaWFsIG1lbWJyYW5lIHJlc3VsdHMgaW4gYSBkZWNyZWFzZWQgYWJpbGl0eSB0byBzeW50aGVzaXplIEFUUCwgcmVzdWx0aW5nIGluIGRldmVsb3BtZW50IG9mIHRoZSB0eXBlIG9mIGNlbGx1bGFyIGR5c2Z1bmN0aW9uIGFuZCBkZWF0aCBmb3VuZCBpbiBQYXJraW5zb24gZGlzZWFzZS4KR29vZ2xlIEFuYWx5dGljcyBhbHNvIG9mZmVycyBhIGJyb3dzZXIgYWRkIG9uIChhdmFpbGFibGUgZm9yIG1vc3QgYnJvd3NlcnMpIHdoaWNoIGFsbG93cyB1c2VycyB0byBwcmV2ZW50IHRoZWlyIGRhdGEgZnJvbSBiZWluZyB1c2VkIGJ5IHRoZWlyIHNlcnZpY2VzIGFjcm9zcyBhbGwgc2l0ZXMuT3RoZXIgRGF0YSBDb2xsZWN0aW9uQXVidXJuIFVuaXZlcnNpdHkgd2ViIHNlcnZlcnMgY29sbGVjdCBpbmZvcm1hdGlvbiBzdWNoIGFzIHRoZSBJUCBhZGRyZXNzIG9mIHlvdXIgY29tcHV0ZXIsIHRoZSBvcGVyYXRpbmcgc3lzdGVtLCBicm93c2VyIHNvZnR3YXJlIHVzZWQsIGFjY2VzcyB0aW1lcywgYW5kIHBhZ2VzIHZpc2l0ZWQuIFRoaXMgZGF0YSBpcyB1c2VkIHN0YXRpc3RpY2FsbHkgYW5kIGluIGFnZ3JlZ2F0ZSB0byBtb25pdG9yIHdlYiBzZXJ2ZXIgcGVyZm9ybWFuY2UsIG5ldHdvcmsgc2VjdXJpdHkgYW5kIHRvIGhlbHAgbWFuYWdlIHRoZSBzaXRlIGFuZCBpbXByb3ZlIHNlcnZpY2UuQXMgYSBnZW5lcmFsIHJ1bGUsIEF1YnVybiBVbml2ZXJzaXR5IGRvZXMgbm90IHRyYWNrIGluZGl2aWR1YWwgdmlzaXRvciBwcm9maWxlcywgYnV0IGRvZXMgcmVzZXJ2ZSB0aGUgcmlnaHQgdG8gdXNlIGxvZyBkYXRhIHRvIGludmVzdGlnYXRlIHJlc291cmNlIG1hbmFnZW1lbnQgb3Igc2VjdXJpdHkgY29uY2VybnMuVmlzaXRvcnMgdXNpbmcgb25saW5lIGZvcm1zIG9yIGFwcGxpY2F0aW9ucyBvbiBvdXIgd2ViIHBhZ2VzIG1heSBjaG9vc2UgdG8gc3VwcGx5IGluZm9ybWF0aW9uIHZvbHVudGFyaWx5LiAKVGhlIGJyaWdodG5lc3MgZG9lcyBzb3VuZCBhIGxpdHRsZSBvZGQuIFdoYXQga2luZCBvZiBndWl0YXIgYXJlIHlvdSB1c2luZz8gWW91IGNvdWxkIHRyeSBqdXN0IHJvbGxpbmcgYmFjayB0aGUgdG9uZSBrbm9iIG9uIHRoZSBndWl0YXIgYSBsaXR0bGUgYml0LCB0aGF0IG1pZ2h0IG1lbGxvdyB0aGluZ3Mgb3V0IGEgbG90LgpPZiB0aGUgMTA3LDAwMCBEdXRjaCBKZXdzIHNlbnQgdG8gdGhlIGNhbXBzLCBvbmx5IDUsMDAwIGxpdmVkLiAKVGhlcmUgcGxlbnR5IG9mIHJlc291cmNlcyBuZWVkZWQgdG8gaGl0IGV2ZXJ5IG1pbGVzdG9uZSBhbmQgdGhlbiBzb21lLiAKUGxheWVkIDkwcyBhbmQgMjAwMHMgbXVzaWMuIFRoZSBtaWRkbGUgcm9vbSBoYWQgb25seSBiYXIgc2VhdGluZyBhbmQgdGhlIHJlc3Qgd2FzIGEgZGFuY2UgZmxvb3IgYW5kIHN0YWdlLCBmb3IgREpzIG9yIGxpdmUgbXVzaWMgb3IgYSBtZWNoYW5pY2FsIGJ1bGwuIApBbmQgWW91ciBIZWFsdGgKSXQncyBhIHNpbXBsZSBJIGtub3cgYnV0IGl0cyBlZmZlY3RpdmUgYW5kIEkgY2FuIGJ1aWxkIG9uIHRoYXQuCkt1bHR1cnNjaG9jayBDaGluYSBvaG5lIGdlaHQgbmljaHQKVGhhdCdzIGFsbC4gSSBwaWNrIHVwIFFRIG9uIHRoZSBidXR0b24uIApJbCB5IGF1c3NpIGxhIGdyb3Nzb3Bob2JpZSBkZSBsYSBzb2NpdCwgbGEgZGlmZmljdWx0IGFjY3J1ZSAgdHJvdXZlciB1biB0cmF2YWlsIChjZWxhIGVzdCBwcm91diBkZSBmYW9uIGNoaWZmcmUpLCAgcG91dm9pciBzJ2hhYmlsbGVyIGZhY2lsZW1lbnQgZXQgYXZlYyB1biBidWRnZXQgcmFpc29ubmFibGUsICB2aXZyZSBjb25mb3J0YWJsZW1lbnQgZGFucyBsZXMgdHJhbnNwb3J0cywgZXQgbGEgcmVsYXRpb24gYXV4IGF1dHJlcyA6IGlsIHkgYSBkZXMgcmNpdHMgaW5jcm95YWJsZXMgc3VyIGwnYWdyZXNzaXZpdCBsaWUgYXUgcG9pZHMsIGxlcyByZW1hcnF1ZXMgbWNoYW50ZXMgcXVlIHNlIHBlcm1ldHRlbnQgZGUgZmFvbiBob250ZSBkZXMgcGVyc29ubmVzIHN1ciB1bmUgcGVyc29ubmUgZ3Jvc3NlIHF1YW5kIGVsbGUgc2UgcHJvbW5lIGRhbnMgbGEgcnVlLCBxdSdlbGxlIGVzdCBkYW5zIHVuIG1hZ2FzaW4gb3UgcXUnZWxsZSBtYW5nZSwgYWxvcnMgcXUnZWxsZSBuJ2EgcmllbiBkZW1hbmQgISBSZXNwZWN0ZXIgY2hhcXVlIGluZGl2aWR1IHF1ZWxsZSBxdWUgc29pdCBzYSBzaWxob3VldHRlIHBhcmFpdCB0cmUgdW5lIGJhc2UgbG1lbnRhaXJlIGR1IGJpZW4gdml2cmUgZW5zZW1ibGUuIAoiWW91IHdhbnQgdG8gZGViYXRlIGZvdW5kYXRpb25zIGFuZCBjaGFyaXRpZXM/IiBPYmFtYSBzYWlkLCBjb21wYXJpbmcgdGhlIFRydW1wIEZvdW5kYXRpb24gdG8gdGhlIENsaW50b24gRm91bmRhdGlvbiwgYXNzb2NpYXRlZCB3aXRoIERlbW9jcmF0IEhpbGxhcnkgQ2xpbnRvbiBhbmQgaGVyIGZhbWlseS4gIk9uZSBjYW5kaWRhdGUncyBmYW1pbHkgZm91bmRhdGlvbiBoYXMgc2F2ZWQgY291bnRsZXNzIGxpdmVzIGFyb3VuZCB0aGUgd29ybGQuIFRoZSBvdGhlciBjYW5kaWRhdGUncyBmb3VuZGF0aW9uIHRvb2sgbW9uZXkgb3RoZXIgcGVvcGxlIGdhdmUgdG8gaGlzIGNoYXJpdHkgYW5kIHRoZW4gYm91Z2h0IGEgc2l4IGZvb3QgdGFsbCBwYWludGluZyBvZiBoaW1zZWxmLiIKRWFjaCBldmVudCwgaGlzdG9yaWMgb24gaXRzIG93biwgd291bGQgaGF2ZSBjYXB0dXJlZCBoZWFkbGluZXMuIApIb3cgaXMgcG9pbnRpbmcgb3V0IHRoZSBmYWN0cyBvZiBvdXIgZGl2b3JjZSBjdWx0dXJlIGFuZCBjb3VydHMgbWlzb2d5bmlzdGljPyBJIGFsc28gbmV2ZXIgc2FpZCBhbnl0aGluZyBhYm91dCB1bmhlYWx0aHkgZGFuZ2Vyb3VzIHJlbGF0aW9uc2hpcHMuIApJZiB0d28gbGFyZ2UgaGFiaXRhdHMgYXJlIG9uIGVpdGhlciBzaWRlIG9mIHlvdXIgc2FkZGxlIG9yIGNvdmVyIGZ1bm5lbCBhYm92ZSwgdGhlbiB5b3UgaGF2ZSBhIGdyZWF0IGJvdHRsZSBuZWNrIHRoZXkgaGF2ZSB0byBjb21lIHRocm91Z2guCkl0IElTIGEgZGVsaWJlcmF0ZWx5IGRlc2lnbmVkIHN5c3RlbSB0byBrZWVwIHVzIGZyb20gZXhlcmNpc2luZyBvdXIgcG93ZXIuIApQaHVubmllYnVubmllICAxIHBvaW50ICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpCdXQgaWYgbGFyZGluZyB0aGUgZWNvbm9teSB3aXRoIHBvcmsgYmFycmVsIHNwZW5kaW5nIGFsb25lIHdhcyBnb2luZyB0byB3b3JrLCBKYXBhbiBlY29ub215IHdvdWxkIGhhdmUgYm91bmNlZCBiYWNrIGxvbmcgYWdvLCBzb21lIGFuYWx5c3RzIG5vdGUuIApEci4gTml0ZWVzaCBDaG91ZGhyeSwgTUQsIFBoRCBvZiBIYXJ2YXJkIE1lZGljYWwgU2Nob29sIGFuZCBEci4gQXJub2xkIE1pbHN0ZWluLCBNRCwgTVBIIG9mIE1lcmNlciBIZWFsdGggYW5kIEJlbmVmaXRzIGV4YW1pbmVkIHRoZSBjb3N0cyBhbmQgYmVuZWZpdHMgb2YgdGhlIHZhcmlvdXMgaGVhbHRoIGNhcmUgYXBwcm9hY2hlcyB0byB0cmVhdGluZyBiYWNrIHBhaW4uClRoeSBuYW1lIGlzIEplbm5pZmVyIEFuaXN0b24KQ2FuY2VyVXBvbkNhbmNlciAgMTMzIHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ28KQW5kIHdoeSB3b3VsZCB5b3UgcHJlc3VwcG9zZSB0aGF0IHBlb3BsZSB3YW50IHR3byBraWRzPyBJcyB0aGF0IHRoZSBsaW1pdCBvbiBjaGlsZHJlbiBub3c/IDogUEkgYWxzbyBhIGZpbmFuY2lhbCBhZHZpc29yLiBEZWxheWluZyByZXRpcmVtZW50IHBsYW5uaW5nIGlzIG5vdCB0aGUgYmVzdCBkZWNpc2lvbi4gCkJ1dCBmb3IgbmV3ZXIsIHNtYWxsZXIgb3JnYW5pemF0aW9ucywgdGhlIHNob3cgaXMgYSBjcnVjaWFsIG9wcG9ydHVuaXR5IHRvIHNob3cgb2ZmIHdoYXQgdGhleSdyZSBicmluZ2luZyB0byBtYXJrZXQuIFN1Y2NlZWQsIGFuZCB0aGV5IG1heSBiZSB0aGUgbmV4dCBMRywgUGlvbmVlciwgU2Ftc3VuZyBvciBTb255LiAKSW4gc3VjaCBhIHNpdHVhdGlvbiB0aGUgYmVzdCBzdHJhdGVneSBpcyBwcm9iYWJseSB0byBnbyBhbGwgaW4gd2l0aCBhbnkgZGVjZW50IGhhbmQgdG8gdHJ5IGFuZCBnZXQgYSBtdWNoIGJpZ2dlciBjaGlwIHN0YWNrLiBUaGVyZSBhcmUgYSBudW1iZXIgb2YgZ3JlYXQgYm9va3Mgb3V0IHRoZXJlIG9uIFRleGFzIGhvbGQgJ2VtIHRvdXJuYW1lbnRzLCBlc3BlY2lhbGx5IERhbiBIYXJyaW5ndG9uJ3Mgc2V0LiBIb3BlZnVsbHksIHRob3VnaCwgdGhpcyB0dXRvcmlhbCB3aWxsIHByb3ZpZGUgdGhlIGJhc2ljcyBmb3IgcGVvcGxlIGdldHRpbmcgcmVhZHkgdG8gcGxheSB0aGVpciBmaXJzdCB0b3VybmFtZW50cy4gClRvIFN5cmlhbiByZWJlbHMuIFRoZSBGb3JlaWduIE9mZmljZSBkZW5pZWQgdGhlIHJlcG9ydCBidXQgd2FzIHJhdGhlciBza2V0Y2h5IGluIGV4cGxhaW5pbmcgaXRzIHNpZGUgb2YgdGhlIHN0b3J5LiAKRmFsayB0aHJvd3MgMyBURHMsIE5vLiAxOSBXYXNoaW5ndG9uIFN0YXRlIGJlYXRzIFV0YWggMzMgMjVXYXNoaW5ndG9uIFN0YXRlIHYgVXRhaFNBTFQgTEFLRSBDSVRZLCBVVCAgIE5PVkVNQkVSIDExOiBIZWFkIGNvYWNoIE1pa2UgTGVhY2ggb2YgdGhlIFdhc2hpbmd0b24gU3RhdGUgQ291Z2FycyBsb29rcyBvbiBmcm9tIHRoZSBzaWRlbGluZSBkdXJpbmcgdGhlaXIgZ2FtZSBhZ2FpbnN0IHRoZSBVdGFoIFV0ZXMgYXQgUmljZSBFY2NsZXMgU3RhZGl1bSBvbiBOb3ZlbWJlciAxMSwgMjAxNyBpbiBTYWx0IExha2UgQ2l0eSwgVXRhaC4gKFBob3RvIGJ5IEdlbmUgU3dlZW5leSBKci9HZXR0eSBJbWFnZXMpCkVkaXQ6IHUvc3RyaWtldGhyZWVpc3Rha2VuICwgWW91IHNob3VsZCBuZXZlciBiZSByZXBvcnRlZCBmb3IgcGxheWluZyB0aGUgZ2FtZSBhbmQgd2FudGluZyB0byB3aW4uIFlvdSBzaG91bGQgYmUgcmVwb3J0ZWQgZm9yIGZ1Y2tpbmcgeW91ciB0ZWFtbWF0ZXMgZ2FtZXMgdXAgaW50ZW50aW9uYWxseS4gInBsYXlpbmcgdGhlIGdhbWUiIGRvZXMgbm90IGluY2x1ZGUgdGhlIGxhdHRlci4KTXkgbG9jYWwgcnVuIGNsdWIgaGFzIGhhZCB0byBjYW5jZWwgYSBjb3VwbGUgb2YgcnVucyBkdWUgdG8gaWNlIGFuZCBsb3cgdGVtcHMgYW5kIHRoZXkgbmV2ZXIgY2FuY2VsLiAKRGlzY3Vzc2lvbnMgd2lsbCBiZSBtb3JlIHNhdGlzZnlpbmcgZm9yIHlvdSBhbmQgeW91ciBzdHVkZW50cyBpZiB0aGV5IGFyZSBwcmVwYXJlZC4uIApGcm9tIHBlcnNvbmFsIGV4cGVyaWVuY2UsIHlvdSBjYW5ub3QgcmVsYXggYW5kIHJlYXAgdGhlIGJlbmVmaXQgb2YgdGhlIG1hc3NhZ2UgaWYgeW91IHRoaW5rIHlvdXIgYnJlYXN0LCBncm9pbiwgZXRjIGlzIGhhbmdpbmcgb3V0IGZvciBhbGwgdGhlIHdvcmxkIHRvIHNlZS4gCk1lbmNlZ2FoIHdpbGF5YWgga2VyaW5nIG1lbWJlcnNpaGthbiB3b21lbiBiZXJkZW55dXQgdW50dWsgbGFoYW4gcGFkYSBzZWtzIGtvbnN1bHRhc2kgKGdlcmQpIGthcmVuYSB2YWdpbmFsaXMgYmViYXMgbWVsdWFzIGFudGliaW90aWsgd2FzcGFkYSBrdWxpdCBwYXJhc2l0IHNha2l0IHB1c2luZyBwYWRhIHJhc2EgcmFzYSB5YW5nIGZhcm1hc2kgbWVudW5qdWtrYW4gZ2F0YWwgbWVueWViYWJrYW4gaW5pbGFoIHBlcmloIHlhbmcgZGkgYmF0dWsgdHJpbWVzdGVyIGNpcmljaXJpIHJhaGltIGtlcmluZyBqYW4gYW5hayBha2liYXQgbXVudGFoIHBlbGFuY2FyIHNlaGF0IGtldGlrYSBkYWxhbSBzYWphIGtlaGFtaWxhbiBtZW1iYWhheWFrYW4gYWxhbWkgc2luc2hlIGx1a2EgbWVueWVtYnVoa2FuIGFraWJhdCBqYWthcnRhIHJhaGltIGtlcmluZyBpdHUgYXBhIG1lbmV0cmFsaXNpciBrZXJpbmcgYXRhdSBoYW55YSB0ZXJqYWRpbnlhIGx1a2EgbGFwb3NhbiBrZXJpbmcgdmFnaW5hIHBlcnNhbGluYW4gdGluZ2dpIGRhbiBvdGFrIGFuZGEgbWVuZ2hpbmRhcmkgc2VsYXlha255YSBwZXJhc2FhbiBwZWthcmFuZ2FuIHR1bWJ1aCBsYWlubnlhIGtlbWF0aWFuIGRpIGtvbXBsaWthc2kgc29sdXNpIHJhaGltIGtlcmluZyBha2liYXQgcmFkaWthbCBzdWh1IHNhYXQgdGliYSB0aWJhIGR1bmlhIHNlbHVydWguClRoZSBkb3dudG93biBzY2VuZSBpcyBhbHNvIGxpdCB3aXRoIFBhcnEgY2FzaW5vIGJlY2F1c2UgaXQganVzdCBvcGVuZWQgdXAgbGFzdCB5ZWFyLiAKRW50ZXJpbmcgYSBnaXZlYXdheSB1c2luZyBtdWx0aXBsZSBhY2NvdW50cywgZmFrZSBhY2NvdW50cywgb3IgYm90cyBpcyBiYXJyZWQKVHJpYXRobG9uIE1peGVkIFJlbGF5IHdpbGwgbWFrZSBpdHMgT2x5bXBpYyBkZWJ1dCBhdCB0aGUgVG9reW8gMjAyMCBHYW1lcywgbWFraW5nIHRoZSBldmVudCBpbiBOb3R0aW5naGFtIGEgdG9wIHByaW9yaXR5IGZvciB0ZWFtcyBsb29raW5nIHRvIHNlY3VyZSB0aGUgZmlyc3QgcG9pbnRzIG9uIG9mZmVyIHRvIHF1YWxpZnkgdGhlaXIgc3BvdHMgb24gdGhlIHN0YXJ0IGxpbmUuIApUaGUgY2FzaW5vIGNpcmN1aXQgaXMgdGhlIGJlc3Qgd2F5IHRvIGNvbGxlY3QgdGhlIHByYWN0aWNlIG5lZWRlZCB0byBleGNlbCwgYmVjYXVzZSB0aGUgZW52aXJvbm1lbnQgaXMgdGVuc2UgYW5kIHRoZSBwbGF5IGlzIHF1aWNrLCB3aGljaCBjYW4gdGVhY2ggYSBwbGF5ZXIgdG8gYWNjbGltYXRlIHRvIHRoZSBzcGVlZHkgd2l0IG5lY2Vzc2FyeSB0byB3aW4gYmlnLiAKSGUgd2FzIHRvbGQgdGhhdCBraW5kIG9mIHBsYXkgaXMgbGVnYWwgdG8gY2FsbCAoZ3JhYmJpbmcgYSBzdGFjayBhbmQgY291bnRpbmcgdGhlbSBpbiBmcm9udCksIGJ1dCBhbnkgdGhhdCB0b3VjaCB0aGUgZmVsdCBvciBhcmUgb24gdGhlIHRhYmxlIHdoZW4gdGhlIGhhbmQgaXMgcmVtb3ZlZCBzdGF5LiAKQW5kIEkgbG9nZ2VkIGludG8gbXkgYmFuayBhY2NvdW50cyBhbmQgdGhleSB3ZXJlIGFsbCBzZWl6ZWQsIGFsbCBmcm96ZW4uIApUaGVyZSBhcmUgYSBudW1iZXIgb2Ygd2Vic2l0ZXMgb24gdGhlIGludGVybmV0IHdoaWNoIGhhdmUgaG9zdGVkIGZyZWUgb25saW5lIGNhc2lubyB0b3VybmFtZW50cyBhbmQgdGhleSBhcmUgcXVpdGUgZmFtb3VzIGFtb25nIGNhc2lubyBsb3ZlcnMgYW5kIG9ubGluZSBwbGF5ZXJzLiAKSXQgbG9va2VkIGxpa2UgYSB0eXBpY2FsIGZhbWlseSBqb3VybmV5IHdhcyBhaGVhZCwgYnV0IFJpY2sgaGFkIGJpZ2dlciBkcmVhbXMgZm9yIGhpcyBmYW1pbHkuIApUaGUgQW1lcmljYW4gUG9rZXIgQXdhcmRzIHdpbGwgaG9ub3IgdGhlIGJlc3Qgb2YgdGhlIDIwMTUgcG9rZXIgeWVhci4KQW5kIGl0IG5vdCBqdXN0IHBlb3BsZSBsaWtlIEVpbGVlbiB3aG8gYXJlIGFmZmVjdGVkLiBUaGUgbHVyZSBvZiBlYXN5IG1vbmV5IGV2ZW4gYnJvdWdodCBkb3duIEJ1bmNvbWJlIENvdW50eSB0b3AgY29wLiBJbiAyMDA4LCBmb3JtZXIgU2hlcmlmZiwgQm9iYnkgTWVkZm9yZCwgd2FzIGNvbnZpY3RlZCBvZiBhY2NlcHRpbmcgaHVuZHJlZHMgb2YgdGhvdXNhbmRzIG9mIGRvbGxhcnMgaW4gYnJpYmVzIGxpbmtlZCB0byBpbGxlZ2FsIHZpZGVvIHBva2VyLCB3aGljaCBwcm9zZWN1dG9ycyBzYXkgaGUgZnVubmVsZWQgaW50byBoaXMgY2FtcGFpZ24gYWNjb3VudHMuIApCdXQgaXQgd2FzIG9ubHkgaW4gMTk0NiB0aGF0IHRoZSBWaWN0b3IgQ2hhbmRsZXIgY29tcGFueSBiZWdhbiB3b3JraW5nIGFzIHdlIGtub3cgaXQgdG9kYXkuIApPZmZpY2lhbHMgZXhwZWN0ZWQgdGhlIFRydW1wIG9yZGVyZWQgd2l0aGRyYXdhbCB0byBiZSBjb21wbGV0ZWQgd2l0aGluIGEgbW9udGguIApIZWxsLCBldmVuIGlmIHRoZXkgdG9vayBhIHRvdGFsIGNhbXAgcm91dGUsIGF0IGxlYXN0IHdlJ2QgYmUgdHJlYXRlZCB0byBOaWNvbGFzIENhZ2UgKHlvdSBrbm93IGl0IHdvdWxkIGJlIGhpbSkgcnVubmluZyBmcm9tIG9sZCBFbCBNZXN0ZW5vLiBUaGUgMTg0NSBBcmN0aWMgZXhwZWRpdGlvbiBvZiBDYXB0YWluIFNpciBKb2huIEZyYW5rbGluIGZvdW5kIHRoaXMgb3V0IHRoZSBoYXJkIHdheSwgYXMgdGhleSBwZXJpc2hlZCB0byB0aGUgbGFzdCBtYW4gaW4gYSBjb25nYSBsaW5lIG9mIHRyYWdlZHk6IHNoaXB3cmVjaywgZGlzZWFzZSwgbGVhZCBwb2lzb25pbmcgZHVlIHRvIGJhZGx5IHRpbm5lZCBmb29kIGFuZC9vciBmYXVsdHkgZGlzdGlsbGVkIHdhdGVyIHN5c3RlbXMsIGFuZCB0aGUgZmFjdCB0aGF0IHRoZXkgd2VyZSBkZXNlcnRlZCBpbiB0aGUgZ29kZGFtbiBBcmN0aWMgd2l0aG91dCBhZGVxdWF0ZSBlcXVpcG1lbnQsIGV2ZW50dWFsbHkgZHJvdmUgdGhlIDEyOSBzdHJvbmcgZ3JvdXAgdG8gY2FubmliYWxpc20gYW5kIGFuIGVhcmx5IGdyYXZlLiBUaGF0J3MgLiAKVGFsa2luZyBhYm91dCBDYXJzb24ncyBiaW9ncmFwaHksIHdoZXJlIGhlIHdyb3RlIHRoYXQgaGUgdHJpZWQgdG8gc3RhYiBhIGZyaWVuZCBvbmx5IGZvciBoaXMgYmVsdCBidWNrbGUgc3RvcHBpbmcgdGhlIGJsYWRlLCBUcnVtcCBibGFzdGVkOiAiSG93IHN0dXBpZCBhcmUgdGhlIHBlb3BsZSBvZiBJb3dhPyBIb3cgc3R1cGlkIGFyZSB0aGUgcGVvcGxlIG9mIHRoaXMgY291bnRyeSB0byBiZWxpZXZlIHRoaXMgY3JhcD8iCkxpbmRuZXIgaGF0IGVyc3RlbnMgbmljaHQgZGllIEFubmV4aW9uIGRlciBLcmltIHZlcnRlaWRpZ3QsIHNvbmRlcm4gbGVkaWdsaWNoIGRpZSBUYXRzYWNoZSBhbmVya2FubnQsIGRhc3MgZXMgZGVyemVpdCBuaWNodCBtZ2xpY2ggaXN0IGRpZXNlbiBadXN0YW5kIHp1IG5kZXJuIHVuZCBlcyBrb250cmFwcm9kdWt0aXYgenVyIExzdW5nIGRlciBLcmlzZSBpbiBkZXIgVWtyYWluZSBpc3QsIHdlaXRlcmUgVmVyaGFuZGx1bmdlbiBtaXQgUnVzc2xhbmQgdm9tIFN0YXR1cyBkZXIgS3JpbSBhYmhuZ2lnIHp1IG1hY2hlbiAobWl0IGRlbSBadXNhdHosIGRhc3MsIHNvbGx0ZSBSdXNzbGFuZCBuaWNodCBvZiB3ZXN0bGljaCBMc3VuZ3N2b3JzY2hsZ2UgZWluZ2VoZW4sIGRpZSBTYW5rdGlvbmVuIGVyaGh0IHdlcmRlbiBzb2xsdGVuKS4gWndlaXRlbnMgaGF0IGVyIHNlbGJzdCBkYWZyIHNlaHIgdmllbCBLcml0aWsgYXVzIGRlbiBlaWdlbmVuIFJlaWhlbiBiZWtvbW1lbi4KVGhlIEF1dG9ub21pYyBuZXJ2b3VzIHN5c3RlbSBpbmZsdWVuY2VzIGV2ZXJ5dGhpbmcgZnJvbSBicmVhdGhpbmcgYW5kIGhlYXJ0IHJhdGUgdG8gdGhlIHN0cmVzcyByZXNwb25zZSBhbmQgc2xlZXAuCkxlIHBhc3MgZCd1biBlbXBsb3kgZGV2cmFpdCBpbCB2cmFpbWVudCB0cmUgZXhhbWluIGRlIGxhIHNvcnRlPyBDYXRoZXJpbmUgUGVycmluIGVuIGRpc2N1dGUgYXZlYyBNaWNoZWwgQXByaWwsIGRpcmVjdGV1ciBkdSBDb2xsZ2UsIGFpbnNpIHF1J2F2ZWMgRmlubiBNYWtlbGEsIHByb2Zlc3NldXIgYWRqb2ludCAgbGEgRmFjdWx0IGRlIGRyb2l0IGRlIGwnVW5pdmVyc2l0IGRlIFNoZXJicm9va2UsIGV0IE1hcnRpbmUgTGVtb25kZSwgY29uc2VpbGxyZSBlbiBvcmllbnRhdGlvbiBldCBjb25zZWlsbHJlIGVuIHJlbGF0aW9ucyBpbmR1c3RyaWVsbGVzLi4gCkluIGEgbWVldGluZyB3aXRoIHlvdXIgYm9zcywgZm9yIGV4YW1wbGUsIG1lbnRpb24gc29tZXRoaW5nIG9uZSBvZiB5b3VyIHdvcmtlcnMgZGlkIHdlbGwuIElmIHlvdXIgYm9zcyBoYXBwZW5zIHRvIG1lbnRpb24gdG8gdGhhdCB3b3JrZXIgdGhhdCB5b3Ugc2FpZCBzb21ldGhpbmcgZ29vZCBhYm91dCB0aGVtLCB0aGV5J3JlIGxpa2VseSB0byBmZWVsIHRoYXQgeW91IGFwcHJlY2lhdGUgdGhlbSBhbmQgbWFkZSB0aGUgZWZmb3J0IHRvIHB1dCBpbiBhIGdvb2Qgd29yZC4gVGhhdCBzb3J0IG9mIGNvbXBsaW1lbnQgZG9lc24ndCBnbyB1bm5vdGljZWQuCkRpZmZlcmVuY2UgaXMgd2Uga25vdyB3aGF0IEtpYmEgaXMgY2FwYWJsZSBvZiB3ZSBrbm93IG5vdGhpbmcgYWJvdXQgRGVsdGEuLiAKSSBjYW4gcGxheSB0aGVtIHdpdGhvdXQgZ2V0dGluZyBhc2hhbWVkIHRoYXQgSSBwYXllZCAkNjAgYW5kIHNhdyAxMCUgb2YgdGhlIGNhbXBhaWduLiBCdXQgaXQgYWxzbyBmZWVscyBsaWtlIGhvbWUuIApXZXJlIHJlYWwgZW1vdGlvbnMsIHNoZSBwb2ludHMgb3V0LiBXYXMgaW4gdGhlIGhvdXNlIGZvciAxNyBkYXlzIGFuZCBJIGRpZG4gaGF2ZSBhbnlvbmUgdG8gdGFsayB0byBhcyBteSBmcmllbmQgYmVjYXVzZSBldmVyeW9uZSBoYWQgdHVybmVkIG9uIG1lLCBlc3BlY2lhbGx5IHRvd2FyZHMgdGhlIGVuZC4gSSB3ZWFyIG15IGhlYXJ0IG9uIG15IHNsZWV2ZS4gCkkgc3RhcnRlZCB3b3JraW5nIG9uIGl0IGluIDIwMDcgYW5kIHdyaXRpbmcgdGhlIG1hdGVyaWFsLiAKRm9yIGV4YW1wbGUsIGxpa2Ugc29tZW9uZSBjb21tZW50ZWQgb24gaGVyZSwgb25lIGNhbiBkaXN0YW5jZSBvbmVzZWxmIHRvIHRoaW5rIG92ZXIgdGhlIHNpdHVhdGlvbiBhcyByYXRpb25hbGx5IGFzIG9uZSBpcyBjYXBhYmxlLCBjb29saW5nIGRvd24sIGJlZm9yZSBhdHRlbXB0aW5nIHRvIGJldHRlciB0aGUgc2l0dWF0aW9uIG9yIGZpeGluZyB0aGUgaXNzdWUgb3Igd2hhdGV2ZXIgdGhlIG5leHQgc3RlcCBpcy4gRGlzdGFuY2luZyBvbmVzZWxmIGRvZXMgbm90IGhhdmUgdG8gYWx3YXlzIGJlIGFuIGluZGljYXRpb24gb2Ygbm90IGJlaW5nIGFibGUgdG8gdGFsayBvciBpbmFiaWxpdHkgdG8ga2VlcCBoZWFsdGh5IHJlbGF0aW9uc2hpcHMuLiAKTmljb2xlIEtpZG1hbiBsZSByZWNvbm5hdC4gRGFucyBsZSBjYWRyZSBkJ3VuZSB0cmlidW5lLCBwdWJsaWUgY2UgbHVuZGkgMTUgb2N0b2JyZSBkYW5zIGxlIE5ldyBZb3JrIE1hZ2F6aW5lLCBsJ2FjdHJpY2UgYXVzdHJhbGllbm5lIGRlIDUxIGFucyByZXZpZW50IGxvbmd1ZW1lbnQgc3VyIHNhIHJlbGF0aW9uIGF2ZWMgc29uIGFuY2llbiBtYXJpLCBsJ2FjdGV1ciBhbXJpY2FpbiBUb20gQ3J1aXNlLiAKIldoYXQgd2VyZSB0aGUgdGVybXMgb2YgdGhpcyBsb2FuIGZyb20gRXJuaWUncyBwYXJlbnRzPyAiIFZhbiBTYW50IGFza2VkIFJvYnluLiAiSXQgd2FzIGZvciBhIGZpdmUgeWVhciBsb2FuLCAiIHNoZSByZXBsaWVkLiAKVGhlIGRyYXdpbmdzIG1hZGUgdGhlbSBoYXBwZW4uIEkgc3VwcG9zZSBJIGdvdCBhIGRhdGUgb3IgdHdvIHRoYXQgd2F5IGJ1dCBpdCB3YXMgb25seSB0byBnZXQgdGhlbSB0byB0YWxrIHRvIG1lLiAKVFRlIGtpZCBnZXRzIGEgY2hhbmNlIGFuZCBibG93cyBpdC4gClRoZSB3b3JzdCBwYXJ0IGlzIHRoYXQgc2hlIHNlZW1lZCB0byBiZSBzbyBqZWFsb3VzIG9mIHdoYXRldmVyIHNoZSB0aG91Z2h0IHdhcyBiZXR0ZXIgaW4gbXkgbGlmZSwgdGhhdCBzaGUgc3RvbGUgMzAwIEV1cm8gZnJvbSBteSBmYW1pbHkgd2hlbiB3ZSB0b29rIGhlciBpbiBmb3IgYW4gZW50aXJlIHdlZWsuIApEaXJlY3RvcnM6IE5hdGFsaWUgQmVuaGF5b24sIERlc2lyZWUgRGVsYWxveWUsIENoYXJsZXMgV2lsc29uLCBBbGlzb24gR3JlaWcsIERlYiBNY0JyaWRlLCBTdXNhbiBTY3VsbHksIEFubmUgTWNSaXRjaGllLiAKQSB2ZXJ5IHNpbWlsYXIgdGhpbmcgaGFwcGVuZWQgdG8gbWUuIEkgd2FzIGxlYXZpbmcgYSBwYXJ0eSBhbmQgbm90aWNlZCBteSBiaWtlIHdhcyBsb2NrZWQgdG8gYSBmcmllbmRzIGJpa2Ugd2hvIGhhZCBhbHJlYWR5IHdhbGtlZCBob21lIGVhcmxpZXIuIEluIGhpcyBkcnVua2VuIHN0YXRlIGhlIGRlY2lkZWQgdG8gd2FsayBob21lIGZvcmdldHRpbmcgaGUgaGFkIGxvY2tlZCBoaXMgYmlrZSB0byBtaW5lIHdpdGhvdXQgdGVsbGluZyBtZS4gCkhlIHJlcGVhdGVkbHkgZGlzYWxsb3dlZCBldmlkZW5jZSB0byBiZSBwcmVzZW50ZWQgZHVyaW5nIHRyaWFsICh0aGUganVyeSBoYWQgYWNjZXNzIG9uIHRoZWlyIG93biB0aW1lKS4gCkhlIHdhcyBmdWxseSBhd2FyZSB0aGF0IGhpcyBsaWZlIHdhcyBhdCByaXNrLCIgVGliYm8gc2FpZC4gClNwb3J0cyBWaWV3IFNlY3Rpb24gPlByZXBzIE91dGRvb3JzSm9uIFN0dWFydCBkaWVkIFNhdHVyZGF5LCBKYW4uIDExLCAyMDE0LCBhZnRlciBoaXR0aW5nIGEgdHJlZSB3aGlsZSBza2lpbmcgd2l0aCBmcmllbmRzIG9uIGEgYmx1ZWJpcmQgcG93ZGVyIGRheSBvbiBBc3BlbiBNb3VudGFpbiwgd2hlcmUgaGUgc3BlbnQgbWFueSBhbiBlbmpveWFibGUgZGF5IG9uIHNraXMuIEhlIHdhcyA1Ni4KT3VyIGNvbXBsZXggd2FzIGEgbmlnaHRtYXJlIHRvIHVzIGFsbCBzdW1tZXIuIFRoZSBmaXJzdCB1bml0IHRoZXkgdHJpZWQgdG8gZ2l2ZSB1cyB3YXNuIHJlYWR5IHRoZSBkYXkgdGhleSBzYWlkIGl0IHdvdWxkIGJlLCBsZWF2aW5nIHVzIGluIGEgbmV3IGNpdHkgd2l0aCBhIHVoYXVsIHRvIGNvbnRpbnVlIHBheWluZyBmb3IuIApPbmNlIHRoZSBTY2hvb2wgaGFzIHNlbGVjdGVkIHRoZSBhcHBsaWNhdGlvbiBmb3Igc3VibWlzc2lvbiBzZWN0aW9uIGZvdXIgb2YgdGhlIGZvcm0gbXVzdCBiZSBjb21wbGV0ZWQgYnkgdGhlIEhlYWQgb2YgU2Nob29sLiBUaGUgZGVhZGxpbmUgZm9yIGFwcGxpY2F0aW9ucyB0byBiZSBzdWJtaXR0ZWQgYnkgU2Nob29scyB0byB0aGUgR3JhZHVhdGUgU2Nob29sIGlzOiAyMiBNYXkgMjAxOSAobm9vbikuLiAKWW91ciBob3VzaW5nIHBvbGljaWVzIGFyZSBhbiBhYnNvbHV0ZSBtZXNzLCBkdWRlLiBDb25zaXN0ZW50bHkgZ29vZCBwYW4gQXNpYW4gYXQgdGhlIENhc2lubydzIE1pc3MgU29uZ3MuIFNob3JlaG91c2UgaGFzIHRoZSBiZXN0IGxvY2F0aW9uIGFuZCBhbWJpYW5jZSBhbmQgdGhlaXIgVHVlc2RheSAnanVzdCBmZWVkIG1lJyBtZW51IGlzICQ0MCBhbmQgQllPICAgZ29vZCB2YWx1ZS4gQmVzdCBDaGluZXNlIGlzIE1yIFlvdW5nLCByaWdodCBuZWFyIFRvbnkncyBwaXp6YSBOYXBvbGksIHdoaWNoIGlzIHdvcnRoIGdvaW5nIHRvIGp1c3QgZm9yIHRoZSBkZWNvci4gR3JpbGxkIGRvZXMgZ29vZCBidXJnZXJzLCBidXQgQml0Y2hpbicgQnVyZ2VyIEJhciBpcyB0aGUgcGxhY2UgdG8gZ28gICB0aGV5J3JlIGEgZm9vZCB0cnVjayB0aG91Z2guCkVnbGkgYXJlIHB1c2hpbmcgZm9yd2FyZC4gCklmIHlvdSBwbGF5IGNhc2lubyBnYW1lcyBpdCBpcyBhbG1vc3QgYWx3YXlzIGZyZWUgbW9uZXkgZm9yIHRoZSBjYXNpbm8gYmVjYXVzZSB5b3UgY2Fubm90IGJlYXQgdGhlIG9kZHMgc28gdGhleSBoYXZlIG5vIHJlYWwgbmVlZCBmb3IgY2hlYXRpbmcgZXNwZWNpYWxseSBub3dhZGF5cyB3aGVuIHRoZSBjdXN0b21lcnMgaGF2ZSBhIGNoYW5jZSB0byBjaG9vc2UgdGhlIGNhc2lubyB3aGVyZSB0aGV5IHBsYXksIG9ubGluZSBjYXNpbm8gb3IgcmVhbCBjYXNpbm8uIEkgaGF2ZSBuZXZlciBoZWFyZCBiZWZvcmUgYWJvdXQgaW50ZXJuZXQgY2FmZSBjYXNpbm8gcGxhY2VzIGJ1dCBpZiB0aGV5IG1hcmtldCB0aGVpciBidXNpbmVzcyByaWdodCBhbmQgZ2V0IGN1c3RvbWVycyBJIGFtIHN1cmUgdGhleSBjYW4gbWFrZSBzb21lIGdvb2QgbW9uZXkuLiAKTXkgcGFyZW50cyB3ZXJlIGFscmVhZHkgd29ycmllZCBhYm91dCBtZSBkb2luZyB0aGlzIGRyaXZlIGFsb25lIGFuZCBJIGd1ZXNzIEkgd2FudGVkIHRvIHByb3ZlIHRoYXQgSSB3YXNuIGEgbGl0dGxlIGtpZCBhbnltb3JlIHdobyBzY3JlYW1zIHdoZW4gc29tZW9uZSBzYXlzICJib28iLiAKRGVzcGl0ZSB0aGUgdW5pdGVkIGZyb250LCBzb21lIGJvYXJkIG1lbWJlcnMgd2VyZSBwcml2YXRlbHkgc2NhdGhpbmcgYWJvdXQgdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBjaGFyaXR5LCB3aXRoIG9uZSBicmFuZGluZyBpdCBhICJkaXNhc3RlciIuIFdoYXQgd2FzbiBhbm5vdW5jZWQgd2FzIHRoYXQgdGhlIG5ld2x5IGFwcG9pbnRlZCBjaGllZiBleGVjdXRpdmUgb2ZmaWNlciBDb2xlbWFuIGhhZCBhY3R1YWxseSB0ZW5kZXJlZCBoZXIgcmVzaWduYXRpb24ganVzdCBkYXlzIGVhcmxpZXIsIHBsdW5naW5nIHRoZSBmb3VuZGF0aW9uIGludG8gYSBmcmVzaCBjcmlzaXMuIEFwYXJ0IGZyb20gcmVzb2x2aW5nIHRoZSBmb3VuZGF0aW9uIHJlZ3VsYXRvcnkgcHJvYmxlbXMsIENvbGVtYW4gaGFkIGJlZW4gaGlyZWQgdG8gYm9vc3QgcmV2ZW51ZSBieSByYWlzaW5nIG1vbmV5IGRpcmVjdGx5IGZyb20gd2VhbHRoeSBkb25vcnMgYW5kIGNvcnBvcmF0ZSBzcG9uc29ycy4gCkNlbnRlcnMgZm9yIERpc2Vhc2UgQ29udHJvbCBhbmQgUHJldmVudGlvbgpXZSBoYXZlIHN0b3JlcyB0aGF0IHdoZW4gdGhleSBoYXZlIGhlYXZ5IHZvbHVtZSwgdGhleSBkaXZpZGUgaXQgdXAgbGlrZSB0aGUgcG9rZXIgY2hpcHM6IFRoZSBibHVlIGNoaXBzIGFyZSB0aGUgbW9zdCB2YWx1YWJsZSBvbmVzLCB0aGVuIHJlZCwgdGhlbiB3aGl0ZS4gWW91IGNhbiBoYXZlIHlvdXIga2V5IHNlbGxpbmcgcGVvcGxlIGhhbmRsZSB0aGUgYmx1ZSBjaGlwIGJ1c2luZXNzLCBhbmQgeW91IGNhbiBoYXZlIHNraWxsZWQsIGtleSBhZG1pbiBwZW9wbGUgaGFuZGxlIHRoZSB3aGl0ZSBjaGlwcy4uIApMZXMgYW5uZXMgb250IHBhc3MsIGplIG4nYWltZSB0b3Vqb3VycyBwYXMgbGEgZ3ltIG1haXMgY2V0IHQsIGonYWkgZXUgZW52aWUgZGUgZGNvdXZyaXIgYXV0cmUgY2hvc2UgcXVlIG1hIGNocmUgbmF0YXRpb24sIHBhcyBhdXNzaSBwbGFpc2FudGUgcXVlIGplIGxlIHNvdWhhaXRlcmFpcyAgUGFyaXMuIApDYXNpbm8gaW5jIGtleWdlbiBnZW5lcmF0b3Igc29mdHdhcmUKTWVhbndoaWxlLCBPY2FzaW8gQ29ydGV6IGFuZCBoZXIgYWxsaWVzIGFubm91bmNlZCB0aGV5IHdpbGwgc3VwcG9ydCBwcmltYXJ5IGNoYWxsZW5nZXJzIGluIHNvbGlkbHkgRGVtb2NyYXRpYyBjb25ncmVzc2lvbmFsIGRpc3RyaWN0cyBhZ2FpbnN0IGluY3VtYmVudHMgd2hvIGFyZSBpbnN1ZmZpY2llbnRseSBwcm9ncmVzc2l2ZS4KT25jZSwgYXQgYSBEbkQgbWVldHVwICh5ZWFoLCB3ZSBzdGFydGluZyBhdCBwZWFrIG5lcmQsIHNodXQgdXApLCB0aGUgc3ViamVjdCBvZiBGcmlkYXkgdGhlIDEzdGggY2FtZSB1cC4gVGhlIEdNLCB3aG8gZG9lcyBub3QgZG8gc2NhcnkgbW92aWVzIGF0IGFsbCwgYXNrZWQgbWUgYWJvdXQgdGhlIHBsb3QuCldIRU4gRVZFUllCT0RZIFRIRSBCVUlMRElORyBXSUxMIEJFIEFORCBHTyBURUxMIFRIRU0gV0hFUkUgSSdNIEhJRElORyA/IFlPVSBNVVNUIFRISk5LIFBVVCBUSEFUIFBJUEUgSSdMTCBOT1QgSEFWRSBZT1UgU0lHTkFMSU5HIFdJVEggSVQgSSBCRSAnTE9PSywgWU9VIFNVUkVMWSBXT1VMRE4nVCBIQVJNIFRIRSBZT1VXUyBXSFkgRE9OJ1QgWU9VIEFMTE9XIEhFUiBUTyBMRUFWRSBCTE9ORDFFIERPTkFMRCBEVUNLIENPTUUgT1MsIFRlQUFQTEVUT00sIFZXRSdMTCBTTkVBSyBVUCBPTSBUV0VBQSBBTkQgVEhFVyBBLCBUSE9TRSBQQ0FUVEVEIE1VU1QgU0xFRVBJTkcgT01FIE9GIENPTUUgQlkuJyBORVZFUiAiViB2IHIgdiBBIEogSVRTIFVORkFJUiBUTyBUQUtFIDEgQURWQU5UQTZFIE9GIEEgTUFOIElOIFRISVMgUE9TaVRJT04gSUxMIEJPUlJPVyBBIEZJVkUgQSBNViBXSUZFIFNPVCBNViBNT05FWSBXSElMRSBUIFdBUyBJTiBUSEUgU0hPV0VSIFZPTyBXQVNIRUQgQ0FOIFRUSEFUIEZBU1Q/IEEgUFJPVkUgUFJJU0NJTExBJ1MgUE9QIEZSRUNLTEVTIEFORCBISVMgRlJJRU5EUyB1ckFDaSBMRUFTRSBUSDUxRS4gCkJ1dCBiZWNhdXNlIHRoZSBOZW9jb25zIGhhdmUgc28gZWZmZWN0aXZlbHkgcmVkZWZpbmVkICJjbGFzcyBpbnRlcmVzdHMiIGFzICJsaWZlc3R5bGUsIiB3ZSBjYW5ub3QgcmVhbGx5IGpvaW4gdG9nZXRoZXIgdG8gZWZmZWN0aXZlbHkgdGhyb3cgdGhlIGJ1bXMgb3V0LiB3ZSB3aWxsIGNvbnRpbnVlIHRvIGJlIGRpdmlkZWQgb24gd2hldGhlciBvciBub3Qgd2UgZHJpbmsgYmVlciBvciB3aW5lLCBEdW5raW4gRG9udXRzIGNvZmZlZSBvciBTdGFyYnVjayBsYXR0ZXMsIGxpc3RlbiB0byBjb3VudHJ5IG11c2ljIG9yIGhpcCBob3AsIGdldCBtYXJyaWVkIG9yIGRvbiBSYW5kIFBhdWwgb3IgSm9lIFNlc3Rhay4KRXh4eHRyYXNtYWxsICAgRnVja2luZyBNeSBMaXR0bGUgU2lzdGVycyBIb3JueSBGcmllbmQhIC4gTmdlblRBTSAgIFZpZGVvIENld2VrIEhvcm55IERpd2FybmV0IFswMDoyNF1LVU1QVUxBTiBWSURFTyBCT0tFUCAuIApXaGVyZSBkbyB5b3UgZ28gd2hlbiB5b3Ugd2FudCB0byBoYXZlIHNvbWUgZnVuIHdpdGggU2xvdCBNYWNoaW5lcyBHYW1lcz8gRm9yIHNvbWUgcGVvcGxlLCBnZXR0aW5nIHN0YXJ0ZWQgd2l0aCBwb2tlciBkb2VzIGl0IGZvciB0aGVtLCBvciBwZXJoYXBzIHRoZXkgaGVhZCB0byB0aGUgcm91bGV0dGUgd2hlZWwgb3IgdGhlIGNyYXBzIHRhYmxlLiAKSW4gb3RoZXIgd29yZHMsIHRoZSBob3VzZSBlZGdlIGlzIG1vbmV5IG1hZGUgYnkgY2FzaW5vIG92ZXIgdGhlIGxvbmcgcnVuIG9mIHRoZSBnYW1lLiBZb3UgaGF2ZSB0byBrbm93IHR3byBtYWluIHRoaW5ncyBhYm91dCBpdC4gVGhlIG51bWJlciB0aGluZyB0byB0YWtlIGludG8gYWNjb3VudCBpcyB0byBwbGF5IGNhc2lubyBnYW1lcywgd2hpY2ggaGF2ZSBhIGxvdyBob3VzZSBlZGdlLiAKRG93bmxvYWQgZ2FtZSBtaWRuaWdodCBwb29sIDMgbm9raWEgYzMuLiAKVGhlIEVhcnRoIGEgVmFzdCBCb21ic2hlbGwKQnV0IHlvdSBhbGwgaGFkIGEgYmlnZ2VyIHZpc2lvbj8KVGhlIEJ1eSBTaWRlIHByb3ZpZGVzIHRoZSByZWFkZXIgd2l0aCBpbnNpZGUgaW5mb3JtYXRpb24gaW50byB0aGUgaGVkZ2UgZnVuZCB3b3JsZC4gCkRyb3AgYnkgYW5kIGdpdmUgaGVyIGEgaGVhcnR5IGhlbGxvLi4gCkl0IGlzIG5vdCBmYWN0dWFsbHkgdHJ1ZSB0aGF0IGNvd3MgY29udGludWUgdG8gcHJvZHVjZSBtaWxrIG9uY2UgdGhleSBwcm9kdWNlIGEgY2FsZi4gCkhlcmUncyBhIHNvbGlkIG1ldGEgYW5hbHlzaXMgZm9yIHRoZSBiZW5lZml0IG9mIGV4ZXJjaXNlLgpUaGVpciBjaGFudHMgb2YgVVNBIGFuZCAiWW91IFN1Y2siIHRvd2FyZCB0aGUgZW5lbXkgdGVhbSB3ZXJlIGEgc3RhcmsgcmVtaW5kZXIgdGhhdCBub3QganVzdCBtYXNjdWxpbml0eSwgYnV0IG5hdGlvbmFsIGlkZW50aXR5IHRvbyBpcyBiZWluZyBjcmVhdGVkIGFuZCBwZXJmb3JtZWQgaW4gdGhlIHJpdHVhbCBvZiB0ZWxldmlzZWQgc3BvcnQuIApUaGV5IG1pZ2h0IG5vdCBiZSB1bmhhcHB5LCBidXQgdGhlaXIgcXVhbGl0eSBvZiBsaWZlIGlzIHNldmVyZWx5IGxpbWl0ZWQgYnkgdGhlaXIgcGh5c2ljYWwgY29uZGl0aW9uICh3aGljaCBjb3VsZCBlYXNpbHkgYmUgdGhlIHJlc3VsdCBvZiBhIG1lZGljYWwgcHJvYmxlbSBvciBpbmp1cnksIGFuZCBub3QgdGhlaXIgZmF1bHQgYXQgYWxsKS4KVGhlcmUgYXJlIHNvbWUgcGVvcGxlIG9uIGhlcmUgd2hvIGFyZSBhbWF6aW5nIGJ1dCBJIHdvdWxkIHNheSB0aGUgbWFqb3JpdHkgY2FuIGJlYXQgdGhlIHJha2UgYXQgMi81Li4gCkJ1dCBpdCB3b3VsZCBkZXBlbmQgaG93IG11Y2ggeW91IGJldCBpbiBlYWNoIHJvdW5kICh3aGljaCB5b3UgaGF2ZW4ndCByZWFsbHkgZGV0YWlsZWQpLiAKTmVpbCBNY1JpdGNoaWUgOHRoICIgMTEuMjAgaXNoCldoYXQgbWFrZXMgaXQgZXZlbiBtb3JlIGZhc2NpbmF0aW5nIGlzIHRoYXQgc2hlIGlzIHZlcnkgYWdncmVzc2l2ZWx5IGFuIGF0aGVpc3Qgd2hvIHByaWRlcyBoZXJzZWxmIGluIGZvbGxvd2luZyBzY2llbmNlIGFuZCByYXRpb25hbGl0eSBvdmVyIHRoZSByZWxpZ2lvdXMgcHJpbmNpcGxlcyBzaGUgd2FzIHJhaXNlZCB3aXRoLCBidXQgaWYgeW91IHRyeSB0byBzaG93IGhlciByZXNlYXJjaCBvbiBzcGFua2luZyBzaGUgcmVqZWN0cyBpdCByaWRpY3Vsb3VzIGNvbXBsZXRlbHkgb3V0IG9mIGhhbmQuIApTaGUgYWxzbyBtYWRlIG9mIG15IGJyb3RoZXIncyBzcGVlY2ggaW1wZWRpbWVudCB3aGVuIHNoZSdkIGZvcmNlIGhpbSB0byByZWFkIG91dCBsb3VkLiBIZSBzdGFydGVkIGdldHRpbmcgbWlncmFpbmVzIHNvIGJhZCB0aGF0IGhlIGhhZCB0byBiZSBtZWRpY2F0ZWQuIE15IG1vbSBzaG93ZWQgc29tZSByZWFsIHJlc3RyYWludCBieSBub3Qgc2NhbHBpbmcgdGhhdCBjdW50IHdoZW4gc2hlIGNhbGxlZCBmb3IgYSBQVCBjb25mZXJlbmNlIHdpdGggdGhlIFByaW5jaXBhbCwgSU1PLiBXZSdkIGJlZW4gb3V0IGNhc3VhbGx5IGEgY291cGxlIG9mIHRpbWVzLiBXaGVuIGhlIGFycml2ZWQsIEkgdG9sZCBoaW0gdG8gbWFrZSBoaW1zZWxmIGNvbWZvcnRhYmxlLCBhbmQgdGhhdCBJIHdhcyBnb2luZyB0byBjaGFuZ2UgaW50byBzb21ldGhpbmcgbW9yZSBjb21meSBhcyB3ZWxsLiBQdXQgb24gdGhpcyByZWFsbHkgY3V0ZSBuaWdodGllLiBOb3RoaW5nIHRvbyByZXZlYWxpbmcsIHJlYWxseSBqdXN0IGEgc3VwZXIgc29mdCwgc2xpbmt5IHRhbmsgZHJlc3MgKGVhc3kgYWNjZXNzIHRvIGFsbCBsYWR5IGdvb2RzKS4gQ3VkZGxlZCB1cCB0byBoaW0gb24gdGhlIGNvdWNoLiBBbmQgbm90aGluZyBoYXBwZW5lZC4gTm8ga2lzcywgbm8gbm90aGluZy4gTG9sLiBIZSB0ZXh0ZWQgbWUgbGF0ZXIgc2F5aW5nIGhlIHdpc2ggdGhhdCBoZSdkIG1hZGUgYSBtb3ZlLCBidXQgd2Fzbid0IHN1cmUgaWYgSSB3YXMgdXAgZm9yIGl0LgpUaGVzZSBhcmUgdGhlIHBlb3BsZSB3aG8gZG8gbm90IGhhdmUgYW55IHRydXN0IGluIEdvZC4gCkluIGdlbmVyYWwsIHlvdSBiZSBmaW5lIGdvaW5nIGNvbW1hbmRvLCBidXQgdG8gcHJvdGVjdCBhZ2FpbnN0IHdlaXJkIGJ1Z3MsIHRoZXNlIGFjdGlvbnMgc2hvdWxkIGJlIHRha2VuLgpBcmUgeW91IGEgY2FyZCBsb3Zlcj8gRG8geW91IHdhbnQgdG8gZWFybiB0aGUgdW5saW1pdGVkIG1vbmV5IGluIGEgdmVyeSBzaG9ydCBwZXJpb2Qgb2YgdGltZT8gWWVzPyBJdCBtYXkgYmUgcXVpdGUgaGFyZCBmb3IgdGhlIG9uZSB3aG8gd2FudHMgdG8gZWFybiB0aGUgaHVnZSBidWNrcyBvZiBtb25leSBidXQgc3RpbGwgdW5hYmxlIHRvIGdldCB0aGUgc2FtZSBidXQgaXQgaXMgbm90IGltcG9zc2libGUgYXQgYWxsLiAKSSBwZXJzb25hbGx5IHdvdWxkIGxpa2UgdG8gZmluZCBvdXQgYWJvdXQgc3Ryb25nbWFuIGNvbnRlc3RzIG5lYXIgbXkgYXJlYSBidXQgY3VycmVudGx5IHRoZXJlIGlzIG5vIGVhc3kgd2F5IHRvIGdvIGFib3V0IGl0IHVubGVzcyBJIHJlYWxseSBpbnNpZGUgdGhhdCB3b3JsZC4gSSBoYXZlIHRvIGRpZyBhYm91dCBGYWNlYm9vayBmb3IgdGhlaXIgcGFnZXMgb3IgdGFsayB0byBwZW9wbGUgaW4gdGhhdCBjaXJjbGUgdG8gZXZlbiBmaW5kIG91dCBhYm91dCBwbGFubmVkIGNvbnRlc3RzLiBFdmVuIGZvciBwb3dlcmxpZnRpbmcsIEkgaGF2ZSB0byBmb2xsb3cgYSBmZWRlcmF0aW9uIG9uIHNvY2lhbCBtZWRpYSB0byBqdXN0IGZpbmQgb3V0IHdoZW4gYSBtZWV0IHdpbGwgYmUgaGVsZC4gClNvICAgd2hhdCBkbyBJIGRvIGluIEZyYW5rZnVydD8gSSBjb21pbmcgZnJvbSB0aGUgVVMsIGFuZCBsaXZlIGluIE5ZQywgc28gSSBhbSBhbGwgY2l0eSBsaWZlIGV0Yy4sIG5vdGhpbmcgbmV3IHRoZXJlLiBCdXQgSSBkbyBsaWtlIGdvb2QgZm9vZCwgSSBsaWtlIHBsYWNlcyB3aXRoIHBlb3BsZSBhbmQgYWN0aXZpdGllcyAobm90IHRvbyBzZXJpb3VzLCBkb24gd2FudCB0byBnbyB0byB0aGUgY291cnRob3VzZSB0byB3YXRjaCBhIHRyaWFsKS4uIApUaGV5IGtub3cgd2hhdCB0aGV5IGFyZSBkb2luZyBpcyBpbGxlZ2FsIGFuZCBhcmUgYWx3YXlzIHdvcnJpZWQgYWJvdXQgeW91IGJlaW5nIGxhdyBlbmZvcmNlbWVudC4uIApDYW5sIGJhaGlzIGZpcm1hcyB0YXJhZm5kYW4geWVkaSBnbiB5aXJtaSBkcnQgc2FhdCBib3l1bmNhIGJhaGlzIHNlZW5la2xlcmluaW4ga3VsbGFubG1hc24gc2FsYXlhbiB5ZW5pIGdpcmkgYWRyZXNpbmRlIGNhbmwgb3l1bmxhcmRhbiBwYXJhIGthemFubWFueiBzYWxhbnlvci4gSGVzYXAgb2x1dHVybWFrLCBoZXNhYm56IG9uYXlsYW1hayBpaW4geWVkaSBnbiB5aXJtaSBkcnQgc2FhdCBib3l1bmNhIGJhaGlzIG95bmF0bGFuIHNheWZhZGEgYmFoaXMgZWl0bGVyaW5kZSBzYWRlY2Uga2F5dCBzb25yYXNuZGEgaWVyaWtsZXJlIHVsYW1hbnogbW1rbiBvbHV5b3IuIApNYW55IHBlb3BsZSBhc2sgaG93IGhhcmQgaXQgYWN0dWFsbHkgaXMuIFRoZSBzaW1wbGVzdCBhbmFsb2d5IGlzICJ0aGluayBvZiB0aGUgaGFyZGVzdCB0aGluZyB5b3UgY291bGQgZXZlciBkbyAgIHRoZW4gZG91YmxlIGl0Ii5CZWluZyBjYW1vdWZsYWdlZCBpc24ndCBzZXh5V2hpbGUgdGhlIHN0ZXJlb3R5cGljYWwgZmlsbSBzaG90IHNlZXMgdGhlIGhlcm8gYmxlbmQgc2VhbWxlc3NseSBpbnRvIHRoZSBiYWNrZ3JvdW5kLCBpdCBkb2Vzbid0IHNob3cgdGhlIGRpc2NvbWZvcnQgb2Ygc3dlYXRpbmcgbGlrZSBhIGNoZWFwIGJlZWYgc2FsYWQgd2hpbGUgbHlpbmcgYXdrd2FyZGx5IGluIHNwaWt5IGdvcnNlIGJ1c2hlcywgd2l0aCB0d2lncywgbGVhdmVzIGFuZCBicm9rZW4gYnJhbmNoZXMgc2NyYXBpbmcgYW5kIHNjb3JpbmcgeW91ciBza2luLCBsZWF2aW5nIHlvdSBmZWVsaW5nIGxpa2UgeW91IGhhdmUgYmVlbiBtaXN0cmVhdGVkIGJ5IGEgc2V4dWFsbHkgZnJ1c3RyYXRlZCBMYWJ1cm51bS5Zb3UgYmVjb21lIGJpbGluZ3VhbFJveWFsIE1hcmluZXMgdGFsayAiSmFja3NwZWFrIiAgIGEgTmF2YWwgbGluZ28gd2hlcmUgdG9pbGV0cyBhcmUgImhlYWRzIiwgYW5kIHN0ZWFrIGFuZCBraWRuZXkgcHVkZGluZ3MgImJhYmllcyBoZWFkcyIuIENvbnZlcnNlbHksIGFjdHVhbCBoZWFkcyBiZWNvbWUgImdyaWRzIiwgIm5hcHBlcnMiIG9yICJmYXQgb25lcyIuIApNYXNzYWdlcyBhcmUgbm90IG9ubHkgaWRlYWwgZm9yIGNvbWZvcnQgYW5kIHJlbGF4YXRpb24sIGJ1dCB0aGV5IGFsc28gY29udHJpYnV0ZSB0byB0aGUgb3ZlcmFsbCB3ZWxsIGJlaW5nIG9mIGFuIGluZGl2aWR1YWwuIApDbGFpbSB0aGUgbGVnYWwgbGltaXQgb2YgZGFtYWdlIG9uIGFsbW9zdCBldmVyeSBzaGlwbWVudCBmcm9tIHZlbmRvcnMgZXNzZW50aWFsbHkgdGFraW5nIGEgMTAlIGRpc2NvdW50IGVhY2ggdGltZS4gVGhleSB1c2UgdGhpcyB0byBoZWxwIGNvdmVyIHRoZXNlIHN0dXBpZCByZXR1cm5zLiAKQmUgYXdhcmUgdGhhdCBsYW5vbGluIHByb2R1Y2VzIHNsaWdodCB3YXJtdGggd2hlbiBydWJiZWQgc28gZG9uJ3QgYmUgYWxhcm1lZC4gTWFzc2FnZSB5b3VyIGhhbmRzIHNsaWdodGx5IHRvIGFic29yYiBpdCBkZWVwZXIgaW50byB5b3VyIHNraW4uIApXaGF0IGlzIHRoZSBzdXBwb3NlZCBkcmF3YmFjayBvZiAybmQgam9iPyBJcyB0aGUgb3JpZ2luYWwgam9iIG1vcmUgY2xvc2VseSByZWxhdGVkIHRvIHRoZSBsaW5lIG9mIHdvcmsgdGhhdCB5b3Ugd2FudCB0byBiZSBpbiBhZnRlciB5b3UgZ3JhZHVhdGUsIG9yIGEgbW9yZSBpbnZvbHZlZCBwb3NpdGlvbiwgb3Igb25lIHRoYXQgcHJvdmlkZXMgIm1vcmUgdmFsdWFibGUgZXhwZXJpZW5jZXMiIGZvciByZXN1bWUgcHVycG9zZXM/CkdhbWUgc2NpZW50aXN0cyBjcmFjayBwb2tlcgpXZSBob3BlIHRoZXkgaW5zcGlyZSB5b3UgdG8gY3JlYXRlIHdpdGhvdXQgZmVhciBvciBiaWFzIGluIDIwMTkuLiAKRnVqaSB0b2dldGhlciwgYSBmaW5lIHRyaXVtcGggZnJvbSBob3Qgc3VuIHRvIGNvbGQgbWlzdCBpbiB0aGUgbW91dGggb2YgdGhlIHZvbGNhbm8uIApJJ20gZ2xhZCB5b3VyIGh1c2JhbmQgYW5kIGJhYnkgZ2lybCBhcmUgb2sgdGhvdWdoLiBEZWZpbml0ZWx5IGdldCB0aGlzIHN0b3J5IHB1YmxpY2lzZWQgYXMgbXVjaCBhcyBwb3NzaWJsZS4gVGhhdCB3b21hbiBpcyBkYW5nZXJvdXMgYW5kIG1heWJlIGl0J2xsIGFsc28gZ2l2ZSBzb21lIGVkdWNhdGlvbiB0byBwZW9wbGUgd2hvIHdhdGNoIHNoaXQgbGlrZSB0aGlzIHVuZm9sZC4gCkFkb3JpbmcgZmF0aGVyIHRvIExpc2EgV2lsc29uIChCZXJuaWUgU2NodXR0ZW4pLCBMaXNhIFdhbGtlciAodGhlIGxhdGUgU3RldmUpLCB0aGUgbGF0ZSBNaWNoZWxsZSBDbGVsbGFuZCAoQmlsbCkgYW5kIFNhcmEgTWFsb25leSAoRGFuKS4gCkRpZSBtdWx0aWZ1bmt0aW9uYWxlIExvYmJ5IGRlcyBTdXBlciA4IGthbm4gYWxzIEZyaHN0Y2tzcmF1bSBvZGVyIEtvbmZlcmVuemJlcmVpY2ggZ2VudXR6dCB3ZXJkZW4uIEJlZGluZ3QgZHVyY2ggZWluZW4gaG9oZW4gQW50ZWlsIGFuIEJ1c2luZXNza3VuZGVuIGFtIEZyYW5rZnVydGVyIFJpbmcgd2lyZCBkYXMgSG90ZWwgYmVyIGVpbmVuIGVyd2VpdGVydGVuIEtvbmZlcmVuemJhdXRlaWwgdmVyZmdlbi4gRGllIEZlcnRpZ3N0ZWxsdW5nIGRlcyBFY29ub215IEhvdGVscyBpc3QgZnIgRnJoamFociAyMDE2IGdlcGxhbnQuLiAKSGUvU2hlIHdpbGwgY2hlY2sgZWl0aGVyICJZZXMiIG9yICJObyIgb24gdGhlaXIgYWdyZWVtZW50IHdpdGggdGhlIGRldGFpbHMgeW91IGVudGVyZWQuIApJbiB0aGUgY29ybmVyIG9mIHRoZSByb29tIHdhcyBhIHBpZWNlIG9mIGdyYW5pdGUsIHdlaWdoaW5nIHNldmVyYWwgcG91bmRzLiAKSWYgeW91IHdpbiwgeW91IHRoaW5rIGl0IGp1c3RpZmllZCBhbmQgdGhhdCB5b3UgZGVzZXJ2ZSB0aGUgbW9uZXkuIElmIHlvdSBsb3NlLCB5b3UgZmVlbCBsaWtlIHNoaXQuIEFsd2F5cy4uIApBdHRvcm5leSBQYXRyaWNrIEouIEZpdHpnZXJhbGQgc2FpZCBoZSB3YXMgZGlzbWF5ZWQgdG8gZmluZCB0aGF0IHNvIG1hbnkgbGF3IGVuZm9yY2VtZW50IG9mZmljZXJzIGhhZCAic29sZCBvdXQgdGhlaXIgYmFkZ2UuIApXaGVuIHlvdSBmZWVsIHlvdSBoYXZlIHRoZSBiZXN0IHN0YXJ0aW5nIGhhbmQuIApNYW55IHN0cmVldHMgd2VyZSBmbG9vZGVkIGluIGRvd250b3duIE1pYW1pIGFuZCBvdGhlciBjaXRpZXMuCk15IGd1YXJkIGJhc2Ugd2FzIGEgbGl0dGxlIGRpZmZlcmVudCwgb3VyIHdpbmcgY29tbWFuZGVyIGRpZG4gdG9sZXJhdGUgbm9uZSBvZiB0aGF0IHNoaXQuIFdlIGhhZCBhIHRyYWluZWUgY2FsbCBhbmQgdGVsbCBob21lIHNoZSB3YXMgc2V4dWFsbHkgYXNzYXVsdGVkIGF0IHRlY2ggc2Nob29sLCBhbmQgb3V0IHdpbmcgY29tbWFuZGVyIHNlbnQgMiBPIDVzIHRvIHRoZSBiYXNlIHRvIGludmVzdGlnYXRlLCBhbmQgcHJlc3MgY2hhcmdlcy4gUHJpb3IgdG8gaGltIGJlaW5nIG91ciB3aW5nIGNvbW1hbmRlciwgdGhlcmUgd2VyZSBzdG9yaWVzIG9mIGRlcGxveWVkIHBlb3BsZSB3aG8gZ290IHBoeXNpY2FsbHkgYXR0YWNrZWQuLiAKV2l0aG91dCBsb29raW5nIHVwIGEgd2hvbGUgbG90LCBCZWtrYSBwaWNrcyB1cCB0aGUgZ3VuIGVuZ3JhdmVkIHdpdGggdGhlIHNsb2dhbiwgIkplc3VzIENocmlzdCBpcyBpbiBIZWF2ZW4gTm93LiIgU2hlIGltbWVkaWF0ZWx5IGFuZCBzdWRkZW5seSBraWxscyBoZXIgZ2luIGFuZCB0b25pYywgYW5kIHB1c2hlcyB0aGUgYmxvbmRlIGhhaXIgb3V0IG9mIGhlciBmYWNlLiBTaGUgdHVybnMgdG8gTGksIGFuZCBpbiBjbGVhciByZXNwb25zZSB0byBKb2huJ3MgY29tbWVudCBzYXlzLCAiQmV0Y2hhIHR3ZW50eSBJIGMnbiBjaG9vdCB0aGlzIGhlcmUgaGlnaGJhbGwgZ2xhc3Mgb2ZmYSBKb2huJ3MgaGVhZC4gClRob3NlIG9kZHMgbGVhdmUgcm9vbSBmb3IgcmVhc29uYWJsZSBkb3VidC4gCkFsbCBhcm91bmQgdGhlIHR3byBwaWVjZXMgb2YgZmFicmljLCBjdXQgNWluICgxMi41Y20pIHNsaXRzIGludG8gdGhlIGZhYnJpYyBhdCBpbnRlcnZhbHMgb2YgMSBpbmNoICggMi41Y20gICBqdXN0IG1ha2UgdGhlbSBhbGwgdGhlIHNhbWUpLiAKUXVhbmRvIHBhcmxpIGNoaWVkaXRpOiBjb3NhICBlc3NlbnppYWxlPyBUcmFsYXNjaWEgdHV0dG8gY2kgY2hlIG5vbiAgZXNzZW56aWFsZS4gU29sbyBpbiB0YWwgbW9kbyByYWdnaXVuZ2kgbGEgZm9yemEgaW50ZXJpb3JlIGNoZSBkb25hIHN0YWJpbGl0IGFsbGEgdHVhIGFuaW1hCiJ3aXRob3V0IHN0cm9uZyBib3JkZXJzIiAgIGluIHJlYWxpdHksIGhlIG1lYW5zIHRvIHB1c2ggZm9yIHN0cm9uZ2VyIGJvcmRlcnMuIEFuZCBub3QganVzdCBhbnkgYm9yZGVyLCBidXQgYSBwaHlzaWNhbCBiYXJyaWVyIG9uIG9uZSBib3JkZXIuIApIb3cgbWFueSBwaWN0dXJlcyBvZiBzdGluZyByYXkgbXVnZ2luZyBiZWhpbmQgbWUgZG8gSSBuZWVkPyBXYW50IHRoYXQgc25ha2UgdG8gY29tZSBjbG9zZXIgZm9yIGEgcGljdHVyZT8gSGF2ZSBhIGxpemFyZCBqdW1wIGluIHlvdXIgbGFwIGZvciBhIHNudWdnbGU/IEFsbGlnYXRvciBuZWVkcyB0byBnZXQgb3V0IG9mIHRoZSByb2FkPyBXZWxsIGlmIEkgYXNrIHRoZW0gbmljZWx5IHRoZXkgd2lsbCBkbyBpdC4uIApVbmJlbGlldmFibHkgbG91ZC4gTm8gY29udmVyc2F0aW9ucywgcGhvbmUgY2FsbHMgZXRjIHdlcmUgcG9zc2libGUgYXQgYWxsLiBObyB3YXkuLiAKVGhlcmUnbGwgYmUgbm8gaGFwcHkgZW5kaW5ncyBhdCBhbm90aGVyIEJlcmtzIENvdW50eSBtYXNzYWdlIHBhcmxvci4gCk1hcnJpZWQgY291cGxlIGFjY3VzZWQgb2Yga2VlcGluZyBDaGluZXNlIHdvbWVuIGFzIHNleCBzbGF2ZXMKSGUgcHJvYmFibHkgZGlzYXBwZWFyIHVudGlsIHNoZSBjYWxscyBoaW0gYWdhaW4gKG1heWJlIHdoZW4geW91IHByZWduYW50KSBhbmQgYXQgYW55IGV2ZW50IHdoZXJlIGhlIGNhbiBwcmV0ZW5kIHRvIHBsYXkgdGhlIHByb3VkIGRvdGluZyBmYXRoZXIuSSBzYXkgdGhpcyBpbiB0aGUga2luZGVzdCB3YXkuIFBsZWFzZSBnZXQgc29tZSB0aGVyYXB5LiAKVGhlcmUgaXMgYSBtaWxsaW9uIGV4Y3VzZXMgeW91IGNhbiBtYWtlIGZvciBub3QgZHJpbmtpbmcgYW5kIGJlaW5nIGFuIGF0aGVsZXRlIGlzIGp1c3Qgb25lIG9mIHRoZW0uClRoaXMgbGF5b3V0IGluY2x1ZGVzIEJsYWNramFjayBhbmQgVGV4YXMgSG9sZGVtIGFuZCB3aWxsIG1ha2UgeW91ciB0YWJsZSBsb29rIGxpa2UgYSByZWFsIGNhc2lubyB0YWJsZS4gVGhpcyB3aWxsIGhlbHAgeW91IGFsbCB3aGVuIHlvdSBnbyB0byBwbGF5IHBva2VyIGluIGFuIGFjdHVhbCBjYXNpbm8gYmVjYXVzZSB5b3Ugd2lsbCBhbHJlYWR5IGhhdmUgZXh0ZW5zaXZlIGV4cGVyaWVuY2UgcGxheWluZyBvbiBhIHJlYWwgdGFibGUuIApCZWVuIHBsYXlpbmcgbGl2ZSBmb3IgNCA1IHllYXJzIGFuZCB0aGVyZSBXSUxMIGJlIHRpbWVzIHdoZXJlIGhlIGZsaXBzIG92ZXIgQUEuIGl0IHN1Y2tzIGFuZCBpdHMgcGFydCBvZiB0aGUgZ2FtZS4gZ2V0dGluZyBzdGFja2VkIEtLdkFBIGlzIGltbWVuc2VseSB0aWx0aW5nLgpBbnlib2R5IHRyeWluZyB0byBnZXQgaW50byB0aGUgY291bnRyeSB0aHJvdWdoIHRoZSBkZXNlcnQgaGFzIHRvIGRlYWwgd2l0aCBkYXlzIG9mIGhpa2luZyB0aHJvdWdoIHdhc3RlbGFuZCB3aXRoIG5vIHdhdGVyIG9yIGZvb2QuIEFkZGluZyBhIHdhbGwgZG9lc24ndCBhcHByZWNpYWJseSBpbmNyZWFzZSB0aGUgZGlmZmljdWx0eS4KWW91IGNhbiBwdXJjaGFzZSBJbXBlcmlhbCBidW1wZXIgcG9vbCB0YWJsZXMgZm9yIHNhbGUgb25saW5lIGF0IHNwb3J0c2tpZHMgc3VwZXJzdG9yZSBmb3IgJDcwMCBkb2xsYXJzLi4gClNjaWVuY2UgaXMgYWJvdXQgdGhlIHRydXRoLiAKUm9ndWVrbml0cyAgNCBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KV2hlbiB0aGUgZmlyc3QgbnVrZXMgZnJvbSBSdXNzaWEgaGl0IFNwYWluLCB0aGUgd29ybGQgZXJ1cHRlZCBpbnRvIGFuYXJjaHkuIApXaGVuIHRoZSBmaXJzdCB0d28gY2FyZHMgeW91IGRlYWx0IHdpdGggYXJlIGEgcGFpciBvZiB0aGUgc2FtZSB2YWx1ZSAobGlrZSA3LzcpLCB0aGVuIHlvdSBoYXZlIHRoZSBvcHRpb24gdG8gc3BsaXQgeW91ciBjYXJkcyBpbnRvIHR3byBhbmQgcGxheSB0aGVtIHNlcGFyYXRlbHksIGp1c3QgYXMgbG9uZyBhcyB5b3UgcGxhY2UgdGhlIHNhbWUgYW1vdW50IG9mIGJldCBvbiBlYWNoIGNhcmQuCkNvbnRpbnVlIHBsYXlpbmcgdW50aWwgc29tZW9uZSBydW5zIG91dCBvZiBjYXJkcy4gR28gYXJvdW5kIHRoZSB0YWJsZSwgZWFjaCBwdXR0aW5nIG9uZSBjYXJkIGRvd24sIHVudGlsIHNvbWVvbmUgcGxheXMgdGhlaXIgbGFzdCBjYXJkLiBUaGV5IGFyZSB0aGUgd2lubmVyIG9mIHRoYXQgcm91bmQsIGFuZCBpZiB5b3UncmUgb25seSBwbGF5aW5nIG9uZSByb3VuZCB0aGVuIHRoZXkgYXJlIHRoZSB3aW5uZXIgb2YgdGhlIGdhbWUuIENvbGxlY3QgYWxsIDUyIG9mIHRoZSBjYXJkcyBhbmQgc3RhcnQgYSBuZXcgcm91bmQgb3IgZ2FtZS4KQXMgSSB3YWxrIGF3YXksIEkgcnVtaW5hdGUgb24gdGhlIGRpc2FzdGVyIHRoYXQganVzdCB3YXMsIHRoZSBmZWVsaW5nIG9mIHJlamVjdGlvbiwgYW5kIHRoZSBmYWN0IHRoYXQgaSBzcGVudCBtb3JlIHRpbWluZyBkcml2aW5nIHRvIGRpbm5lciB0aGFuIGFjdHVhbGx5IGF0IGRpbm5lci4gCldlbGwsIG1ldGFwaG9yaWNhbGx5IHNwZWFraW5nLi4gClJpZ2h0LCByaWdodCwgSSBnZXQgdGhhdC4gSSBqdXN0IHdvbmRlcmluZyB3aHkgdGhleSBkaWRuIGFudGljaXBhdGUgdGhhdCB0aGlzIHdvdWxkIGJlIGEgcHJvYmxlbSwgYW5kIGFib3V0IHRoZSBvbmx5IGNvbmNsdXNpb25zIEkgY2FuIGNvbWUgdG8gaXMgZWl0aGVyIHRoZXkgZGlkbiB0aGluayBhYm91dCB0aGUgc21hbGwgbWFya2V0IHRlYW1zIGF0IGFsbCwgb3IgdGhleSBkaWRuIHRoaW5rIHRoZXkgd291bGQgYmUgY29tcGVsbGVkIHRvIHBheSB0aGUgbHV4dXJ5IHRheC4uIApNYXJrIG15IHdvcmRzOiBpdHMgZ29pbmcgdG8gY29tZSBvdXQgdGhhdCBUcnVtcC9LdXNobmVyIHdlcmUgZ2l2aW5nIHRoZSBTYXVkaXMgd2hhdGV2ZXIgdGhleSBhc2tlZCBmb3IgaW4gcmV0dXJuIGZvciBzaGFtIGxvYW5zIGZyb20gU2F1ZGkgYmFua3MuLiAKSW4gdGhlIGRyaW5rIHBvaW50IEkgc3BlY2lmaWNhbGx5IHNhaWQgdGhleSBiZWVuIG9uIHRvcCBvZiB0aGF0LiBUaGV5IGdvb2QgYWJvdXQgaXQgYXQgaG9tZSBhcyB3ZWxsLCBzbyB0aGF0IG5vdCBhIGh1Z2UgY29uY2Vybi4KV2FzIGYgUGFyaXMgUCBMYWNoYWlzZSBpc3QgZiBMaXNzYWJvbiBkaWVzZXIgRnJpZWRob2YuIApEb2luZyBhIGRlZXAgcmVzZWFyY2ggb24gdGhlIHNpdGUgYmVmb3JlIHlvdSBtYWtlIHlvdXIgZmlyc3QgZGVwb3NpdCBjYW4gYmUgYSBoZWxwZnVsIHNhZmV0eSBtZWFzdXJlLiAKSnVtZWlyYWggR2Ftc2hhIEJheSBSZXNvcnQsIGd5cHRlbgpVbmUgZm9pcyBsYSBncm9zc2Vzc2UgZW4gcm91dGUsIGlsIGZhdXQgZ2FyZGVyICBsJ2VzcHJpdCBxdSdlbGxlIHByc2VudGUgY2VydGFpbnMgcmlzcXVlcyBjb21tZSBkJ2F1dHJlcyBncm9zc2Vzc2VzLCBvbnQgZGl0IGxlcyBzcGNpYWxpc3Rlcy4gRGVzIHJpc3F1ZXMgYWNjcnVzIGRlIGdyb3MgYmIsIGRlIGJiIHBybWF0dXIsIGRlIGZhdXNzZSBjb3VjaGUuIERvbmMgZWxsZSBkb2l0IHRyZSBjb25zaWRyZSwgc3VydmVpbGxlLCBhY2NvbXBhZ25lIGF1IG1tZSB0aXRyZSBxdWUgZCdhdXRyZXMgZ3Jvc3Nlc3NlcyAgcmlzcXVlLiAKSm9uIExvdWNrczogQW4gb2xkIGhvc3Qgb2YgdGhlIExSIHBvZGNhc3QsIGFuZCBub3cgaG9zdCBvZiB0aGUgQ29uc3RydWN0ZWQgUmVzb3VyY2VzIHBvZGNhc3QuIEEgZm9ybWVyIFIgZW1wbG95ZWUgYXQgV290QywgaGUgaGFzIGV4cGVyaWVuY2Ugd2l0aCBib3RoIGRldmVsb3BtZW50IGFuZCBwbGF5IChib3RoIGNvbnN0cnVjdGVkIGFuZCBsaW1pdGVkKS4gR2V0dGluZyB1cHNldCB3aGVuIGl0IGhhcHBlbnMgaXNuIGdvaW5nIHRvIHNvbHZlIGFueXRoaW5nLCBidXQgSSBoYXZlIG9wcG9uZW50cyBpcmwgdGhhdCBnZXQgcmVhbGx5IG1hZCB3aGVuIHRoZXkgbWFuYSBmbG9vZCBvciBzY3JldyBldmVuIHRob3VnaCBpdCBib3VuZCB0byBldmVudHVhbGx5IGhhcHBlbi4gU29vbmVyIG9yIGxhdGVyIHdlIGFsbCB3aWxsIGZpbmQgb3Vyc2VsdmVzIG9uIGJvdGggc2lkZXMgb2YgdGhhdCBlcXVhdGlvbiwgaXQgc3Vja3MgdG8gYmUgb24gZWl0aGVyIHNpZGUuIEkgd291bGQgcmF0aGVyIHBsYXkgbWFnaWMgdGhhbiBzb2xpdGFpcmUgYW5kIGF0IEZOTS9sb2NhbCB0b3VybmFtZW50IGxldmVsIEkgZmluZCBpdCBiZXR0ZXIgdG8gcGxheSBhIGNsb3NlIGdhbWUgYW5kIGxvc2UgdGhhbiB0byB3aW4gb2ZmIHNjcmV3L2RyYXcuCk91ciBqb2Igd2FzIHRvIGdvIHRocm91Z2ggZXZlcnl0aGluZyB0aGF0IHJlbWFpbmVkIG9mIHRoaXMgbWFuIHBlcnNvbmFsIGJlbG9uZ2luZ3MgYW5kIHNvcnQgaXQsIGVpdGhlciBpbnRvIGEgZHVtcHN0ZXIgb3IgaW50byBiYWdzIHRvIGJlIHNvbGQuIFRoYXQgd2FzIHRoZSBvbmx5IGNhdGVnb3JpZXMuIElzIGl0IHdvcnRoIG1vbmV5PyBJZiBub3QsIHRoZW4gaXQgdHJhc2guIApXZSBuZWVkIHRvIHRha2UgYWN0aW9uLiAKVGhlIHRpbWUgaXMgbWVhc3VyZWQgZnJvbSB0aGUgcG9pbnQgYXQgd2hpY2ggdGhlIHRlbXBlcmF0dXJlIG9mIHRoZSBtYXRlcmlhbCB0byBiZSBzdGVyaWxpc2VkIHJlYWNoZXMgdGhlIHJlcXVpcmVkIGF1dG9jbGF2aW5nIHRlbXBlcmF0dXJlICAgdGhlIHRpZ2h0ZXIgdGhlIGF1dG9jbGF2ZSBpcyBwYWNrZWQsIHRoZSBsb25nZXIgaXQgd2lsbCB0YWtlIGZvciB0aGUgbWF0ZXJpYWwgaW4gdGhlIGNlbnRyZSBvZiB0aGUgbG9hZCB0byByZWFjaCB0aGUgdGVtcGVyYXR1cmUgcmVxdWlyZWQuLiAKU3Rvcm0gaGFzIHN1Y2ggYSB3aWRlIHN3YXRoIGFuZCBzbyBtYW55IG1ham9yIGFpcnBvcnRzIGFyZSBpbnZvbHZlZCB0aGF0IGl0IGdvaW5nIHRvIHRha2Ugc29tZSB0aW1lICh0byByZWNvdmVyKSBiZWNhdXNlIHRob3NlIGFpcnBsYW5lcyBhcmUgc28gZmFyIGF3YXksIHNhaWQgR2l0dGVucywgd2hvIHNlcnZlZCBhcyBhdmlhdGlvbiBkaXJlY3RvciBhdCBNaWFtaSBJbnRlcm5hdGlvbmFsIEFpcnBvcnQgRGFkZSBkdXJpbmcgc2V2ZXJhbCBodXJyaWNhbmVzIGZyb20gMjAwMSB0byAyMDA0LgpPciBhdCBhbGwgaW4gc29tZSBjYXNlcy4gT2YgY291cnNlIGlmIHlvdSBoYXZlIGEgdmVyeSAicmljaCIgZnJpZW5kIHRoYXQgaGFzIGEgbG90IG9mIHBva2VyIGNoaXBzLCBhbmQgcGxheXMgb24gaGlnaCBzdGFrZSB0YWJsZXMgeW91IGNhbiBhbHNvIGdldCBwb2tlciBjaGlwcyBmcm9tIGhpbSA6KS4gCg==|<---