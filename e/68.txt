--->|SGFzIGFueXRoaW5nIGltcHJvdmVkPyAiSXQncyBnZXR0aW5nIHdvcnNlLiAKIlRoZSBhbnRpYmlvdGljcyBraW5kIG9mIHBva2UgaW50byB0aGF0IG1lbWJyYW5lIGFuZCBzdGFiIHRoZSBjZWxsIHRvIGRlYXRoLCIgUmhlaW5zdGFkdGVyIHNhaWQuICJCdXQgdGhlIGJhY3RlcmlhIGZvdW5kIGEgbWVjaGFuaXNtIHRvIHJlZHVjZSB0aGUgY2hhcmdlIHRoZXkgaGF2ZSwgd2hpY2ggbWFrZXMgdGhlbSBsZXNzIGF0dHJhY3RpdmUgdG8gYW50aWJpb3RpY3MsIGFuZCB0aGV5IG1hZGUgdGhlaXIgbWVtYnJhbmVzIHRvdWdoZXIuIgoiSG93ZXZlciwgRkJJIGFnZW50cyBhbmQgYmVoYXZpb3JhbCBzcGVjaWFsaXN0cyBiZWxpZXZlIFBhZGRvY2sgd2FzIGluIHBhcnQgaW5mbHVlbmNlZCBieSB0aGUgbWVtb3J5IG9mIGhpcyBmYXRoZXIsIGEgYmFuayByb2JiZXIgYW5kIGZ1Z2l0aXZlIHdobyBhdCBvbmUgcG9pbnQgd2FzIG9uIHRoZSBGQkkncyBtb3N0IHdhbnRlZCBsaXN0LiBSb3VzZSBzYWlkIFN0ZXBoZW4gUGFkZG9jaywgNjQsIGFjdGVkIGFsb25lIHdoZW4gaGUgcGxhbm5lZCBhbmQgY2FycmllZCBvdXQgdGhlIGF0dGFjay4gUGFkZG9jayBmYXRhbGx5IHNob3QgaGltc2VsZiBhZnRlciBvcGVuaW5nIGZpcmUgZnJvbSBoaXMgaG90ZWwgc3VpdGUuIApBbHNvIG9mZmVyZWQgYm90aCBkYXlzIG9mIHRoZSBldmVudCB3aWxsIGJlIHRoZSBzd2FwIG1lZXQsIHdoZXJlIHBlb3BsZSBjYW4gZXhjaGFuZ2Ugb3Igc2VsbCBtb3RvcmN5Y2xlIHBhcnRzLgpBYm91dCAxLzQgdGhyb3VnaCB0aGUgZ2FtZSwgdGhlIHBsYXllciBuZXh0IHRvIG1lIGxlYW5zIG92ZXIgdG8gbWUgYW5kIHNpbXBseSBzdGF0ZXMsICJJdCBub3Qgb2Z0ZW4geW91IGdldCB0byBwbGF5IGEgZ2FtZSB3aXRoIHRoZSBkZXNpZ25lciwgcmlnaHQ/IiBZb3UgZ3Vlc3NlZCBpdCEgUmljaGFyZCBMYXVuaXVzIHdhcyBydW5uaW5nIHRoZSBnYW1lLiBFdmVudHVhbGx5LCBoZSBzdGFydGVkIGRyb3BwaW5nIGluIGNvbW1lbnRzIGxpa2UgIldoZW4gaSBvcmlnaW5hbGx5IGRlc2lnbmVkIHRoaXMuIiBvciAiSSB0aG91Z2h0IHRoaXMgd2FzIGJldHRlciBpbiBwbGF5dGVzdCBpZiB0aGUgcnVsZXMgaXMgcGxheWVkIGFzLiIuIEFsc28gZ290IHRvIGhhdmUgbHVuY2ggd2l0aCBoaW0gYW5kIGEgY291cGxlIG9mIGhpcyBmcmllbmRzIGFmdGVyd2FyZHMuIApXaGF0IG90aGVycyB0aGluayBpcyB0aGVpciBoYW5nIHVwIGFuZCB0aGUgbW9zdCBjb21tb24gc3ltYm9saWMgbWVhbmluZyBpcyBzaW1wbHkgdGhlIGRlYXRoIGNhcmQgaGF2aW5nIG5vIHJhY2lhbCBjb25ub3RhdGlvbnMgd2hhdHNvZXZlciBhbnl3YXkuIChGdWxsIEFuc3dlcikuIApNZXJjaSBwb3VyIHRvbiBhY2N1ZWlsLiBPdWkgbGEgdGVycmUgZGV2cmFpdCB0cmUgZCdhYm9yZCB1biBqYXJkaW4gbyBsJ3RyZWh1bWFpbiByYXBwcmVuZHJhaXQgIHBsYW50ZXIgc2FucyB1dGlsaXNlciBkZSBwZXN0aWNpZGVzIGNoaW1pcXVlcy4gTm90cmUgbGUgZGUgTW9vcmVhIHJlZ29yZ2UgZGUgcGxhbnRhdGlvbnMgZCdhbmFuYXMgdHJhaXRzIGF1eCBwZXN0aWNpZGVzIGV0IGF1eCBob3Jtb25lcywgcXVlbGdjaGlzbidlc3QgY2UgcGFzPyBRdWFuZCAgbSdjb3V0ZXIgY2hhbnRlciwgdHUgcGV1eC4gRGUgbW9uIGFsYnVtIHJhbGlzaWwgeSBhIHF1YXRyZSBhbnMsIGF2ZWMgbWVzIGFtaXMgZCdlbmZhbmNlLCBzaSB0dSBzb3VoYWl0ZXMgcmVjZXZvaXIgcGFyIG1haWwgdW5lIGRlIG1lcyBjb21wb3MsIHR1IHBldXguIEFyb2hhClRoZSByZXBhaXIgaXMgZmVhc2libGUuIEZpbmQgYSBzY3JhcCBQQ0IgdG8gcHJhY3RpY2Ugb24gYmVmb3JlIHlvdSB0cnkgdGhlIHRoaW5nIHlvdSB3YW50IHRvIGtlZXAsIGFuZCBoYXZlIGEgZ28gYXQgcmVtb3ZpbmcvcmVwbGFjaW5nIHNvbWUgc2ltaWxhciBjb21wb25lbnRzLiAKTGVnYWxpemUgd2VlZCwgbXVzaHJvb21zLCBMU0QsIGFuZCBlY3N0YXN5IG5hdGlvbndpZGUsIGtlZXAgdGhlIHJlc3QgaWxsZWdhbCwgYnV0IG5vIGxvbmdlciB0aHJvdyBwZW9wbGUgaW4gamFpbCBmb3IgcG9zc2Vzc2lvbiwgYW5kIHNpZ25pZmljYW50bHkgaW5jcmVhc2UgdGhlIGFtb3VudCBuZWVkZWQgdG8gcHV0IHNvbWVvbmUgaW4gamFpbCBmb3Igc2VsbGluZy4KSnVzdCB0byBwdXQgdGhhdCBpbiBwZXJzcGVjdGl2ZTogSWYgYSBkcnVnIHdvcmtzLCBpdCBoYXMgYSB2ZXJ5IGxvdyBOVFQgKG51bWJlciBuZWVkZWQgdG8gdHJlYXQpLiAKVGhlIGNvdXBsZSBjYW4gZWFzaWx5IHN1cHBvcnQgdGhlIGhpZ2hlciBwYXltZW50cyBmcm9tIG1vbnRobHkgY2FzaCBzYXZpbmdzLiAKR3JhbnRlZC4gWW91IGhhdmUgYSBzdGFibGUsIHNvdWwgY3J1c2hpbmcgam9iIHdvcmtpbmcgNjAgaG91cnMgYSB3ZWVrIGZvciBhIG1hbmFnZXIgdGhhdCBjb25zaXN0ZW50bHkgZ2V0cyB5b3VyIG5hbWUgd3JvbmcgYW5kIGJsYW1lcyB5b3UgZm9yIGFsbCB0aGUgbWlzdGFrZXMgYXJvdW5kIHRoZSBvZmZpY2UuIFlvdXIgam9iIGlzIHN0cmFpZ2h0Zm9yd2FyZCBhbmQgb2J2aW91cywgYnV0IHVsdGltYXRlbHkgbWVhbmluZ2xlc3MgYW5kIHdpdGhvdXQgY2hhbGxlbmdlLCBsZWF2aW5nIHlvdSBubyBzYXRpc2ZhY3Rpb24uIFlvdXIgc3BvdXNlIGFuZCBjaGlsZHJlbiBsb3ZlIHlvdSB2ZXJ5IG11Y2gsIGJ1dCBhcmUgc28gd2hvbGx5IGRlcGVuZGVudCBvbiB5b3UgdGhhdCBub3RoaW5nIGdldHMgZG9uZSBhcm91bmQgdGhlIGhvdXNlIGlmIHlvdSBkb24gZG8gaXQgeW91cnNlbGYuIFlvdXIgc3BvdXNlIGNlcnRhaW5seSB0cmllcyB0byBkbyB5b3VyIGxhdW5kcnkgZm9yIHlvdSBhbmQgaGF2ZSBkaW5uZXIgcmVhZHkgd2hlbiB5b3UgZ2V0IGhvbWUsIGJ1dCB0aGVpciBzaGVlciBpbmNvbXBldGVuY2UgbWVhbnMgeW91IGhhdmUgdG8gc3BlbmQgdGltZSBmaXJzdCB1bmRvaW5nIHRoZWlyIG1pc3Rha2VzLCB0aGVuIGRvaW5nIGl0IHJpZ2h0IHlvdXJzZWxmLgpZb3UgbmFtaW5nIHRpbnkgbW92ZW1lbnQgcGF0dGVybnMuIApIZSBwb3VycyBoaW1zZWxmIGEgYnJhbmR5IGFuZCBzaXRzIGluIGhpcyBjb21meSByZWNsaW5lci4gCkluIG9yZGVyIHRvIGRldGVybWluZSBob3cgbWFueSBjaGlwcyB0aGF0IHlvdSB3aWxsIG5lZWQgdG8gYmUgaW5jbHVkZWQgaW4gdGhlIHNldCB0aGF0IHlvdSB3aWxsIHB1cmNoYXNlLCB5b3UgbXVzdCBmaXJzdCBjb25zaWRlciBob3cgbWFueSBwbGF5ZXJzIHlvdSB3aWxsIGF2ZXJhZ2UgcGVyIGdhbWUuIElmIHlvdSBmZWVsIGFzIGlmIHlvdSBtYXkgcGxheSB3aXRoIGEgdGVhbSBvZiB1cCB0byBhcHByb3hpbWF0ZWx5IHRlbiBwbGF5ZXJzLCBpdCBpcyBhcHByb3ByaWF0ZSB0byBoYXZlIGFwcHJveGltYXRlbHkgNTAwIGNoaXBzIGluIHRoZSBzZXQgdGhhdCB5b3UgZWxlY3QgdG8gcHVyY2hhc2UuIEJhc2VkIG9uIGRlbm9taW5hdGlvbnMsIHRoaXMgd291bGQgcmVzdWx0IGluIGVhY2ggcGxheWVyIHJlY2VpdmluZyB1cCB0byAkMSwwMDAuMDAgd29ydGggb2YgY2hpcHMuIApXZSBrbm93IHdlIHdoaXRlIGFuZCBjb21lIGZyb20gb3RoZXIgbGFuZHMuIApJIG5vdCBldmVuIGdvaW5nIHRvIGNvbWVudCBvbiB0aGUgcmVzdCBiZWN1YXNlIGl0IHRvdGFsbHkgaXJyZWxldmFudC4gWWVzIHJhY2lzbSBpcyB1c3VhbGx5IHJlZmVycmluZyB0byBwZW9wbGUgd2hvIHRoaW5rIHRoZXkgYXJlIHN1cGVyaW9yLCBidXQgaXQgQUxTTyBJbmNsdWRlcyBtYWtpbmcgYXNzdW1wdGlvbnMgYWJvdXQgcGVvcGxlIGJhc2VkIHNvbGVseSBvbiB0aGllciByYWNlLiBZb3UgZnVja2luZyByYWNpc3QuClRvIHN1Y2NlZWQsIHlvdSBuZWVkIHRoZSBudW1lcmFjeSBvZiBFaW5zdGVpbiBjb21iaW5lZCB3aXRoIGEgY2hhbXBpb24gd2lubmluZyBwb2tlciBmYWNlLiBBIGNvbXBvc2l0ZSBvZiBjaGFuY2UsIGJsdWZmLCBhbmQgYnJhdmFkbywgdG8gbG9zZSB3aWxsIG1lYW4gYSBmb3JmZWl0IHRoYXQgcmFuZ2VzIGZyb20gYSByb3VuZCBvZiBkcmlua3MgdG8gcmVjZWl2aW5nIGEgImNoYWQiIHRhdHRvby5BbiBleHBlcnQgb24gdGhlIHBpc3RlPyBOb3J3YXkgd2lsbCBicmluZyB5b3UgZG93biB0byBlYXJ0aCAgIGxpdGVyYWxseUZvcmdldCB0aGUgcHJlc3NlZCwgbWFuaWN1cmVkIHNsb3BlcyBvZiBza2kgcmVzb3J0cy4gCkFib3V0IEhlaWRpIENoYXJsZXMsIEkgaGF2ZSBubyBpZGVhLiBUaGVyZSBpcyBzdGlsbCBhIHN0cm9uZyBsZWFkIGluIHRoZSB0YWxlIG9mIGhlciBodXNiYW5kIGF0dGVuZGluZyBhIGJveSBzY291dCBjYW1wIGFuZCBzdXBwb3NlZGx5IHRocmVhdGVuaW5nIGhpcyBzb24gdGhlcmUgdGhhdCBoZSB3b3VsZCBkbyB0byBoaW0gKHRoZSBzb24pIHdoYXQgaGUgZGlkIHRvIGhpcyBtb3RoZXIsIGFsdGhvdWdoIHRoZSBzb24gaGFzIG5vIHN1Y2ggcmVjb2xsZWN0aW9uIGFib3V0IHRoaXMgY29tbWVudC4gCldpdGgganVzdGEgZmV3IGNsaWNrcyB5b3UgY2FuIHN0YXJ0IGdhbWJsaW5nLiAoRnVsbCBBbnN3ZXIpLiAKR3N1cGFudGhlcjI0ICA1IHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvCllvdSBjYW4gc2V0IHRoZSA0IGRlY2sgYXV0b21hdGljIGNhcmQgc2h1ZmZsZXIgY29udmVuaWVudGx5IGFueXdoZXJlIGluIHlvdXIgcG9rZXIgdGFibGUuIFRoYXQgbWFrZXMgdGhlIGVudGlyZSBwcm9jZXNzIHByZXR0eSBhdXRvbWF0aWMgYW5kIGFsc28gdHJ1c3R3b3J0aHkgZm9yIHRoZSBwbGF5ZXJzIHRha2luZyBwYXJ0Li4gClNhdHVyZGF5IHRoZSBUaW1lcyBuZXdzcGFwZXIgaGVyZSBpbiB0aGUgVUsgY2FycmllZCBhIHBpZWNlIEknZCB3cml0dGVuc3VtbWFyaXppbmdzb21lIG9mIHRoZSBtb3N0IHNhbGllbnQgaXNzdWVzIHJlZ2FyZGluZyB2aXRhbWluIEQgZGVmaWNpZW5jeSBhbmQgd2hhdCB3ZSBtaWdodCBkbyBhYm91dCBpdC4KQW4gYWNjb21wbGlzaGVkIGhpZ2ggc2Nob29sIHN0dWRlbnQsIEJlbiAoUGFycnkgU2hlbikgc2VlbXMgdG8gZXhjZWwgYXQgYWxtb3N0IGV2ZXJ5dGhpbmcgZXhjZXB0IHdpbm5pbmcgb3ZlciBoaXMgZHJlYW0gZ2lybCwgU3RlcGhhbmllIChLYXJpbiBBbm5hLiAKQW4gT3ZlcnZpZXcgYW5kIEVhc3kgR3VpZGUgdG8gYSBDcmFwcyBUb3VybmFtZW50IFN0cmF0ZWd5CkJ1dCwgc28gd2hhdCBkb2VzIGl0IG1lYW4gdG8gdGFrZSByZXNwb25zaWJpbGl0eT8KVGhlIGdhbWUgaXMgYSB0dXJuIGJhc2VkIHN0cmF0ZWd5IGJhc2VkIG9mZiBvZiB0aGVpciBvcmlnaW5hbCBnYW1lLCBSdW5lc2NhcGUgKHdoaWNoIGlzIGdyZWF0IGl0c2VsZikuIFRoZSByZWFzb24gd2h5IHRoaXMgZ2FtZSBpcyBzbyBnb29kIGlzIGl0IGhhcyBhIHZlcnkgYXBwZWFsaW5nIHJhbmdlIG9mIGNvbWJhdCBzdHJhdGVneSBhbmQgbW9zdCBvZiB0aGUgdGltZSBwbGF5ZXJzIHN0YXJ0IG9uIGEgbGV2ZWwgZ3JvdW5kLiAKTWF0dCB3YXMgd2FpdGluZyBmb3IgUnVubmluZyBXb2xmIHRvIGNvb2sgc29tZXRoaW5nIHVwLiBSVywgd2hvIG9yZ2FuaXplZCB0aGUgc3VjY2Vzc2Z1bCBPYWsgR3JvdmUgcHJvdGVzdCwgbm90ZWQgdGhhdCB0aGUgT2FrIEdyb3ZlIGFjdGlvbiAoYXQgTWVtb3JpYWwgU3RhZGl1bSkgaGFkIGdyb3duIHNsb3dseSwgYW5kIHRoYXQgdGhlIFBlb3BsZSdzIFBhcmsgYWN0aW9uIGNvdWxkIGJ1aWxkLCBtdWNoIHRoZSBzYW1lIHdheS4KVGhleSB1c2UgdG8gYmUgcmFyZSBhbmQgbXVjaCBtb3JlIG9mIGFuIEUgUGVlbiB0aGluZyB0byBvd24gYW5kIG9uZSBvZiB0aGUgcHJvYmxlbXMgY2F1c2luZyB0aGVpciBwcm9saWZlcmF0aW9uIGlzIHRoYXQgaXNrIGFuZCBtaW5lcmFscyBiZWNhbWUgbXVjaCwgbXVjaCwgbXVjaCBlYXNpZXIgdG8gZ2V0IGJ1dCBhY3R1YWxseSBidWlsZGluZyBhbmQgYWNxdWlyaW5nIHRoZW0gZGlkIG5vdCBiZWNvbWUgYW55IGhhcmRlci4KV2hlcmUgZG9lcyB0aGUgQk1WIHN0b3JlIHlvdXIgc2Nhbm5lZCBiaXJ0aCBjZXJ0aWZpY2F0ZSwgU29jaWFsIFNlY3VyaXR5IGNhcmQ/OiBNb25leSBNYXR0ZXJzIFdoZXJlIGRvZXMgdGhlIEJNViBzdG9yZSB5b3VyIHNjYW5uZWQgYmlydGggY2VydGlmaWNhdGUsIFNvY2lhbCBTZWN1cml0eSBjYXJkPzogTW9uZXkgTWF0dGVycyBJIHdhcyB0cnlpbmcgdG8gcmVzZWFyY2ggT2hpbyBCTVYgcG9saWN5IG9uIFN0YXRlIElEIGRvY3VtZW50YXRpb24gYW5kIEkgc2F3IHlvdXIgYXJ0aWNsZSBmcm9tIGxhc3QgSnVseS4gTXkgaHVzYmFuZCBhbmQgSSByZWNlbnRseSBtb3ZlZCBiYWNrIHRvIE9oaW8gYW5kIEkgbmVlZCB0byBnZXQgYW4gT2hpbyBkcml2ZXIncyBsaWNlbnNlIGFuZCB2ZWhpY2xlIHJlZ2lzdHJhdGlvbi4gClN0aWxsIHdvcmtpbmcgb24gaXQgYnV0IGhlcmUgYXJlIGEgZmV3IG1ham9yIHRoaW5ncyB0aGF0IGhhdmUgY29udHJpYnV0ZWQgdG8gbG9zaW5nIHRoZSB3ZWlnaHQgc28gZmFyOiBMb2dnaW5nIGFsbCBmb29kIGluIG15Zml0bmVzc3BhbCBhbmQgbWFpbnRhaW5pbmcgYSBjYWxvcmljIGRlZmljaXQgIEZvb2QgaXMgbm93IGZ1ZWwsIG5vdCBmdW4gKHlvdXIgbmV3IG1hbnRyYSkgIExpZnRpbmcgd2VpZ2h0cyBhIGZldyB0aW1lcyBwZXIgd2VlayBhbmQgcHJvZ3Jlc3NpdmVseSBpbmNyZWFzaW5nIHdlaWdodCBhbmQgdm9sdW1lIChpbmNyZWFzZXMgeW91ciBUREVFKSAgU29tZSBmb3JtIG9mIGNhcmRpbyBhdCBsZWFzdCAzeCBwZXIgd2Vlay4gSSBtb3N0bHkgc3RpY2sgd2l0aCB0aGUgZWxsaXB0aWNhbCwgZXNwZWNpYWxseSBhdCAyMjAgbGJzIHdoZXJlIHJ1bm5pbmcgY2FuIGJlIGhhcmQgb24gdGhlIGtuZWVzR2V0IHN0YXJ0ZWQgYnkgZG9pbmcgdGhpcyBtZXRpY3Vsb3VzbHkgZm9yIDMgd2Vla3MuIApCdXQgbW9uZXkgaXMgdGhlIGxlYXN0IG9mIGl0IGluIEFtZXJpY2FuIHNvY2lldHkgIG9yIGFueSBvdGhlciBzb2NpZXR5IGZvciB0aGF0IG1hdHRlci4gVGhlcmUgdGhlIHdob2xlIGlzc3VlIG9mICJjbGFzcyIgYW5kICJwcmVzdGlnZSIgYW5kICJkaXN0aW5jdGlvbi4iIFBhbGluIGNhbWUgZnJvbSBzb21lIHByb3ZpbmNpYWwgdG93biBpbiBhIHByb3ZpbmNpYWwgc3RhdGUgdG8gYSBiaWcsIGJ1dCBwcm92aW5jaWFsLCBzdGF0ZSB1bml2ZXJzaXR5IGJhY2sgdG8gdGhlIHByb3ZpbmNpYWwgc3RhdGUuIApIZXJlIGFuIGludGVyZXN0aW5nIGNvbGxlY3Rpb24gb2YgYml0cyB0aGF0IEkganVzdCBjYW1lIGFjcm9zcyBpbiB0aGUgT2N0b2JlciAxOCwgMTg4MyBpc3N1ZSBvZiBOYXR1cmUsIHNob3dpbmcgdGhlIHNwZWVkIG9mIHRoaW5ncy4gU29tZSBvZiB0aGUgZXhhbXBsZXMgYXJlIHF1aXRlIGNoYXJtaW5nLCBzaG93aW5nIHRoZSB2ZWxvY2l0aWVzIGZvciBhbiAib3JkaW5hcnkgd2luZCIsIGEgImZyZXNoIGJyZWV6ZSIsICJhIHJhY2UgaG9yc2UgdHJvdHRpbmcgYW4gRW5nbGlzaCBtaWxlIiwgImZsaWdodCBvZiBhIGZhbGNvbiIsICJmbGlnaHQgb2Ygb25lIG9mIHRoZSBzd2lmdGVzdCBiaXJkcyIsIGFuZCAiYSB0ZW1wZXN0Ijsgb3RoZXJzIHNob3cgdGhlIHNwZWVkcyBvZiB0aGluZ3MgdGhhdCBhcmUgcXVpdGUgYW50aXF1ZSwgbGlrZSB0aGUgdmVsb2NpdHkgb2YgImEgY2Fubm9uIGJhbGwiLCBhbmQgImFuIGV4cHJlc3MgdHJhaW4gdHJhdmVsbGluZyBhdCA2MCBrcGgiLiBUaGVuIG9mIGNvdXJzZSB3ZSBnZXQgaW50byB0aGUgaGlnaCB2ZWxvY2l0eSBhc3Ryb25vbWljYWwgZXhhbXBsZXMsIGFsbCBicm91Z2h0IHRvIGEgY2xvc2UgYnkgdGhlIHNwZWVkIG9mIGxpZ2h0LiBJIGxpa2UgdGhlIGxpc3QsIGFuZCBzbyBJIHNoYXJlIGl0IGhlcmU6CllvdSByZWFsbHkgaGFkIHRvIHNjcmV3IHdpdGggdGhlIFJORyBHb2RzIHRvIGxhbmQgdGhlIHNraWxscyB3ZSBkaWQuIFRoZSB3b21hbiBuZXh0IHRvIG1lIGlzIFN1c2FuICBzaGUgY2FuIHJlYW5pbWF0ZSBmcmVzaGx5IGRlYWQgaGFtc3RlcnMgZm9yIGZpZnRlZW4gbWludXRlcy4gCkkgaG91c2Ugc2F0IGZvciBteSBjaGlsZGhvb2QgY3J1c2ggd2hlbiB3ZSB3ZXJlIDEyaXNoIGFzIGhlciBmYW1pbHkgd2VudCBvbiBhIDYgd2VlayByb2FkIHRyaXAgYXJvdW5kIHRoZSBVUy4gVGhleSBoYWQgYSBjYXQgYW5kIGEgYmlyZCBhbmQgeW91IHNlZSB3aGVyZSB0aGlzIGlzIGdvaW5nLiBUaGlzIHN0dXBpZCBsaXR0bGUgZmluY2ggZ290IG91dCBvZiBpdHMgY2FnZSAobGVnaXQsIHRoZSBjYWdlIHdhcyBjbG9zZWQgd2hlbiBJIHJldHVybmVkIHRoZSBuZXh0IGRheSksIGFuZCB0aGUgY2F0IGtpbGxlZCBpdC4uIApZb3UgaGF2ZSB0byB1bmRlcnN0YW5kIGV2ZXJ5b25lIGhhcyBncmFkdWF0ZWQgYW5kIHdlIGFsbCBsZWFkIG91ciBvd24gbGl2ZXMgbm93LCBidXQgdHdvIHRpbWVzIGEgbW9udGggd2UgZ2V0IHRvIHJlbWluaXNjZSBhYm91dCB0aGUgZ29vZCBvbGQgZGF5cy4gClRoZSBzaXplIG9mIHRoaXMgZWZmZWN0IHRlbGxzIHVzIGhvdyBmYXIgYXdheSB0aGUgc3RhciBpcy4gCjYpICJBcHByb3hpbWF0ZWx5IDIyMCwxNDkgbmV3IGNhc2VzIG9mIGJyZWFzdCBjYW5jZXIgYW5kIDI1NCwxMDUgbmV3IGNhc2VzIG9mIGNvbG9yZWN0YWwgY2FuY2VyIHdvdWxkIGJlIHByZXZlbnRlZCBhbm51YWxseSBpbiB0aGUgd29ybGQgYnkgcmFpc2luZyBzZXJ1bSB2aXRhbWluIEQzIGNvbmNlbnRyYXRpb25zIHRvIGFwcHJveGltYXRlbHkgNDAgdG8gNjAgbmcvbUwsIHdoaWNoIGlzLCBpbiBnZW5lcmFsLCBhc3NvY2lhdGVkIHdpdGggb3JhbCBpbnRha2Ugb2YgMiwwMDAgSVUgb2Ygdml0YW1pbiBEMyBwZXIgZGF5LiIKVGhlbiBvZiBjb3Vyc2UsIGtub3dpbmcgdGhleSB3ZSB3ZXJlIGRvd24gYSBzcXVhZCBtZW1iZXIsIHRoZXkgcnVzaGVkIG15IHNxdWFkIGFuZCB0b29rIHRoZW0gb3V0IHdpdGggZWFzZS4gU29tZXRpbWVzIHJlZ2FyZGxlc3Mgb2YgaG93IGhhcmQgeW91IHRyeSwgeW91ciBzcXVhZCBtYXRlcyB3aWxsIHNwcmVhZCBhbmQgaW4gZ2VuZXJhbCBiZSB1c2VsZXNzLiAKV2hhbW1hSmFtbWE2MSAgOSBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ28KSXQgd2FzIHJlYWxseSBhIHF1ZXN0aW9uIG9mICQ1MDAgYnVja3MuIApXZSBhbGwgZGllMTAuIElzIHRoZSBtb3N0IGltcG9ydGFudCBvbmUgc28gcGF5IGF0dGVudGlvbi4gCkJ1dCBpZiBzb21lb25lIHNsYXBzIGEgJDIwIGJpbGwgZG93biBvbiB0aGUgc2lkZSBvZiB0aGUgYm9hcmQgZHVyaW5nIGEgZ2FtZSBvZiBTb3JyeSEgICB3aGF0IHRoZSBoZWxsIGRvZXMgdGhhdCBtZWFuPyBIb3cgYmFkYXNzIGNhbiBhbiA4IHllYXIgb2xkIGJlPyBCb2FyZCBnYW1lcyBhcmUganVzdCB0b3RhbGx5IHRoZSB3cm9uZyB2ZW51ZSBmb3Igd2FnZXJpbmcsIGFuZCB0aGlzIGFjdCBpcyByZWFsbHkgaW5hcHByb3ByaWF0ZSwgYW5kIG5vdCBhIGxpdHRsZSBpbnRpbWlkYXRpbmcuIEFuZCBpbiBnYW1lcyB0aGF0IGFyZSB0aGUgcmlnaHQgdmVudWUsIGxpa2UgcG9rZXIgb3IgVSAxMiBjb2VkIHNvY2NlciwgdGhlcmUgYXJlIGEgbG90IG9mIHVuc3Bva2VuIHJ1bGVzIGFyb3VuZCB0aGUgc2l6ZSBvZiB0aGUgYmV0cy4gQmV0cyBpbiB0aGUgc2luZ2xlICBvciBkb3VibGUgZGlnaXQgcmFuZ2UgY2FuIGJlIGZ1biBhbW9uZyBmcmllbmRzLiAKSGVjaywgdGhlcmUgaXMgZXZlbiBvbmUgZm9yICQxMDAwIHRoYXQgbWFueSBvZiB1cyBoYXZlIG5ldmVyIHNlZW4gKGJ5IHRoZSB3YXksIGl0J3MgeWVsbG93KS4gVGhleSdyZSBjb252ZW5pZW50bHkgcGxhY2VkIG9uIHRoZSBDbGF5IFBva2VyIENoaXBzIGFzIHdlbGwuIApGb3IgdGhlIGZpbG1tYWtlcnMsIGJyYW5kIGJhc2VkIGZpbG0gY29tcGV0aXRpb25zIGFkZCB2YWx1ZSBieSBnaXZpbmcgdGhlaXIgZmlsbXMgd2lkZXIgcmVhY2ggd2l0aCBicmFuZHMgcHJvbW90aW5nIHRoZSBmaWxtcyBvbiB0aGUgZGlnaXRhbCBwbGF0Zm9ybS4gIkZvciB0aGUgWFVWNTAwIGZpbG1tYWtlcnMsIHRoZXkgZ290IGEgY2hhbmNlIHRvIG1ha2UgYSByb2FkIGZpbG0sIGFuZCBldmVuIHRoZSBjYXIgd2FzIHByb3ZpZGVkIHRvIHRoZW0uIEl0IHdhcyBhIGZpcnN0IGZvciBldmVyeWJvZHkgICBmaWxtbWFrZXJzLCB0aGUgY29tcGFueSBhbmQgdXMhIiBzYXlzIEdvcGFsa3Jpc2huYW4uLiAKVGhlZGV2aWxzdGVtcGVyYXR1cmUgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMSBkYXkgYWdvCkQnYXV0cmVzIHRhYmxpc3NlbWVudHMgc2UgZm9udCByYWNoZXRlciBwYXIgZGVzIGNvbmN1cnJlbnRzIG1vaW5zIHRvdWNocyBwYXIgbGEgY3Jpc2UuIEMnZXN0IGxlIGNhcyBkZSBNZXJpbGwgTHluY2gsIHF1aSwgZW4gamFudmllciAyMDA4LCBhdmFpdCBwb3VydGFudCBydXNzaSAgc2F1dmVyIHNhIHBlYXUgdW5lIHByZW1pcmUgZm9pcyBlbiBmYWlzYW50IGFwcGVsICBkZXMgZm9uZHMgc291dmVyYWlucy4gCkNoZXN0IGFuZCBTdG9tYWNoIE9wZW4gYm9vayBvbiB0aGUgYmFieSdzIGNoZXN0LCBzcHJlYWRpbmcgb3V0IGFyb3VuZCB0aGUgYmFieSdzIHJpYmNhZ2UgYW5kIHVuZGVyIHRoZSBhcm1zIE9wZW4gYm9vayBhZ2FpbiBvbiB0aGUgYmFieSdzIGNoZXN0LCBidXQgdGhpcyB0aW1lIGdvaW5nIHVwIHRvIHRoZSBjb2xsYXIgYm9uZSwgc2hvdWxkZXJzIGFuZCB0b3BzIG9mIGFybXMgU3Ryb2tpbmcgbmVjayAgIHBsYWNlIHlvdXIgaGFuZCBvbiB0aGUgY2VudHJlIG9mIHlvdXIgYmFieSdzIGNoZXN0LCBkaWFnb25hbGx5IHNvIHRoYXQgeW91ciBmaW5nZXIgdGlwcyBwb2ludCB0byBvbmUgc2hvdWxkZXIuIFB1c2ggeW91ciBoYW5kIHVwIGFuZCBvdmVyIHRoZSBzaG91bGRlciBzbyB0aGF0IHlvdXIgZmluZ2VycyBnbyB1bmRlciB0aGUgY2hpbiBhbmQgaW50byB0aGUgY3JlYXNlIGFnYWluc3QgeW91ciBiYWJ5J3MgbmVjay4gCkR1cmluZyB0aGlzIHRpbWUsIG1ha2Ugc3VyZSBub3QgdG8gdXNlIGFueSBjaGVtaWNhbHMgb24geW91ciBsYXduIG9yIGluIHlvdXIgZ2FyZGVuLCBhbmQgaWYgeW91IGNhbiwgZW5jb3VyYWdlIHlvdXIgbmVpZ2hib3VycyB0byBkbyB0aGUgc2FtZS4gCkkgcmVjZWl2ZSBKLzlkIGluIGRlYWxlciBwb3NpdGlvbiwgNCBmbGF0dGVycyBzbyBmYXIgSSByYWlzZSB0byAxMCQuIApOZXdzIHRvIG1lLiAKQSBmaW5hbCBjb21tdW5pdHkgY2FyZCBjYWxsZWQgdGhlIHJpdmVyIGlzIHRoZW4gZGVhbHQgaW4gdGhlIHNhbWUgZmFzaGlvbiwgd2hpY2ggaXMgZm9sbG93ZWQgYnkgeWV0IGFub3RoZXIgYW5kIHRoaXMgdGltZSB0aGUgZmluYWwgcm91bmQgb2YgYmV0dGluZyBmb2xsb3dpbmcgdGhlIHNhbWUgb3JkZXIuIFRoZSBwbGF5ZXJzIHRoZW4gdXNlIGFsbCBzZXZlbiBjYXJzIHRvIGNvbnN0cnVjdCB0aGUgYmVzdCBmaXZlIGNhcmQgaGFuZCB0aGF0IHRoZXkgY2FuIGNvbWUgdXAgd2l0aCB0byBkZWNpZGUgd2hvIHRoZSB3aW5uZXIgaXMuLiAKTGFzdCB5ZWFyLCBNZXRybyBpbnZlc3RpZ2F0ZWQgMTMxIGp1dmVuaWxlIHByb3N0aXR1dGlvbiBjYXNlcywgbW9zdCBpbnZvbHZpbmcgZmVtYWxlIHZpY3RpbXMsIGFjY29yZGluZyB0byBkZXBhcnRtZW50IGRhdGEuIE9mIHRob3NlLCA3NCBwZXJjZW50IHdlcmUgZnJvbSBOZXZhZGEgICBhbiBpbmNyZWFzZSBjb21wYXJlZCB3aXRoIHBhc3QgeWVhcnMuCkknbSBmcm9tIEZsb3JpZGEuIApOb3RoaW5nIG9ic3RydWN0cyBwYXNzYWdlIGJldHdlZW4gdGhlIGNhc2lubyBhbmQgYW55IG90aGVyIHBvcnRpb24gb2YgdGhlIENhbGRlciBwcm9wZXJ0eS4gCk1lZGlhIHNvdXJjZXMgc2F5IHRoZXJlIGhhcyBhbHNvIGJlZW4gYSBiZWhpbmQgdGhlIHNjZW5lcyBjYW1wYWlnbiB0byBhdHRyaWJ1dGUgYmxhbWUgZm9yIHRoZSBjaGFyaXR5IGZhaWx1cmUgdG8gZm9ybWVyIGNoaWVmIGV4ZWN1dGl2ZSBDb2xlbWFuIGRlc3BpdGUgaGVyIGJlaW5nIGVtcGxveWVkIGFzIENFTyBmb3Igb25seSB0aHJlZSBtb250aHMuIApJdCBpcyBzdGlsbCBhIGZhaXJseSBuZXcgY2FzaW5vLCBzbyBpdCBtaWdodCBzdGlsbCBnZXQgdGhlIHRyYXZlbCBmcm9tIHRoZSByZWdpb24uIEkgYWx3YXlzIGxpa2UgdG8gYXNrIHRoZSBwbGF5ZXJzIG5lYXIgbWUgaWYgdGhleSBhcmUgZnJvbSB0aGUgYXJlYS4gCkkgbG92ZSBsb3ZlIGxvdmUgdG8gZG8gdGhlYXRyZSBwcm9mZXNzaW9uYWxseSwgZm9yIHRoZSByZXN0IG9mIG15IGxpZmUuIApBbSBJIGxpbWl0ZWQgdG8gdGhlIHF1YWxpdHkgYW5kL29yIHR5cGVzIG9mIGJlZXIgaSBjYW4gbWFrZSBpZiBJIHN0aWNrIHRvIG1vc3RseSAxIDIgZ2FsbG9uIGJhdGNoZXM/IDEgcG9pbnQgIHN1Ym1pdHRlZCAyMiBkYXlzIGFnby4gCkl0IGJvZGVzIHdlbGwgZm9yIHRoaXMgeWVhcidzIHNxdWFkIHRoYXQgdGhlIHNlYXNvbiBmaW5hbGUgd2lsbCBiZSBwbGF5ZWQgb24gdGhlIHJvYWQuIApJJ20ganVzdCBsaWtlLCBJIGRpZG4ndCB3YW50IHRvIGRvIHRoaXMsIGJ1dCBJIGRpZCBpdCwiIFdhdHRzIHRvbGQgYWdlbnRzLiAKU2F0dXJkYXkgbmlnaHQgcHJvZ3JhbSBhdCBCb3N0b24gVW5pdmVyc2l0eSBEYW5jZSBUaGVhdGVyIG9mZmVyZWQgdGhyZWUgd29ya3MsIGludGVyc3BlcnNlZCB3aXRoIHZpZGVvIGNsaXBzIG9mIFNva29sb3cgdGFsa2luZyBhYm91dCBoZXIgcHJvY2VzcyBhbmQgcGhpbG9zb3BoeS4gCkkgc2VlaW5nIG5vd2hlcmUgaW4gdGhlIE9QIG9yIHRoZSBjb21tZW50cyB0aGF0IHlvdSBhY3R1YWxseSB0YWxrZWQgYWJvdXQgd2hhdCB3ZW50IGRvd24gd2l0aCB0aGUgc2hvd2VyLiAKRXZlbiBpZiBzaGVzIGRvaW5nIGl0IHN3ZWV0bHksIHNoZXMgaHVydGluZyB5b3UuLiAKQSB3YXNuIHJlYWxseSBhIFJQRyB0eXBlIGEgZ2FtZXIgZWl0aGVyLiAKQ29nbml0aW9uIGFuZCBmaXRuZXNzIGlzIGFzc2Vzc2VkIGJlZm9yZSBhbmQgYWZ0ZXIgdGhlIGludGVydmVudGlvbi4gQWx0aG91Z2ggc3R1ZGllcyB2YXJ5IGluIGR1cmF0aW9uLCBpbnRlbnNpdHkgYW5kIHR5cGUgb2YgZXhlcmNpc2UsIG92ZXJhbGwgcGh5c2ljYWwgYWN0aXZpdHkgaW1wcm92ZXMgY29nbml0aXZlIGZ1bmN0aW9uIFs2LDIyXS4uIApNYXNzYWdlcyBpbiBTUEEgc2Fsb25zIG9yIGNsaW5pY3MgZG8gbm90IGRpZmZlciBmcm9tIHRob3NlIHBlcmZvcm1lZCBpbiB0aGUgaG9tZXMgb2YgY3VzdG9tZXJzLiBJdCBpcyBkaWZmaWN1bHQgdG9kYXkgdG8gZmluZCBhIG1vbWVudCB0byByZXN0IGFuZCBjb21wbGV0ZSByZWxheGF0aW9uLCB3aGljaCBvZmZlcnMgYSB3ZWxsIG1hZGUgbWFzc2FnZS4gUG9zc2liaWxpdHkgdG8gb3JkZXIgYSBtYXNzYWdlIHRvIHlvdXIgaG9tZSBpcyBpbmNvbXBhcmFibHkgZ3JlYXRlciBhZHZhbnRhZ2VzIHRoYW4gYSB2aXNpdCB0byB0aGUgbWFzc2FnZSBwYXJsb3IuIApUcnkgdG8gbG9zZSBhYm91dCA0MCA1MCBsYnMgd291bGQgYmUgaWRlYWwgYW5kIGdldCBteSBjYXJkaW8gZW5kdXJhbmNlIGJhY2sgdXAuIEdvaW5nIHRvIHRveSBhcm91bmQgd2l0aCBpbnRlcm1pdHRlbnQgZmFzdGluZyBhbmQgYWRkaW5nIGluIHNvbWUgY29uZGl0aW9uaW5nIHdvcmsgcG9zdCBsaWZ0aW5nIHNlc3Npb25zLiAKSGF2aW5nIHNhaWQgdGhhdCB5b3Ugc3RpbGwgbmVlZCBhbiBpZGVhIG9mIGhvdyBtdWNoIHRoaXMgaXMgZ29pbmcgdG8gY29zdCB5b3UuIFRoZXJlIGFyZW50IG1hbnkgYWNjb3VudGFudHMgd2hvIHdpbGwgYWNjZXB0IHRoZSBhbnN3ZXIgIkknbGwgdGVsbCB5b3UgaG93IG11Y2ggdGhpcyBpcyBnb2luZyB0byBjb3N0IGluIDYgbW9udGhzIi4gU28geW91IHN0aWxsIG5lZWQgdG8gZXN0aW1hdGUgdGhlIHByb2plY3QgaW4gZHVyYXRpb24gYXMgd2VsbCwgdGhpcyB3aWxsIGdpdmUgeW91IHRoZSBjb3N0LiBUaGlzIGVzdGltYXRlIGlzIHByb2JhYmx5IGdvaW5nIHRvIGJlIGRvbmUgYnkgYSBzZW5pb3IgcGVyc29uIG9uIHRoZSB0ZWFtClNoZSBoYWQgdG8gbW92ZSBvdXQgdG8gYSBuZXcgc2l0ZSBvbmNlIHRoZSBsb2NhbCBwcm9zZWN1dG9yIHNhaWQgaXQgd291bGQgdGFrZSAyIDMgeWVhcnMgdG8gY29udmljdCBoaW0gb2YgYW55dGhpbmcuIEluIHRoZSBtZWFuIHRpbWUsIGhlIHJldGFpbmVkIGhpcyBwb3NpdGlvbiBhdCB0aGUgc2Nob29sIGFuZCB3YXMgZnJlZSB0byBjb250aW51ZSBoaXMgaGFyYXNzbWVudC4gCiBkZXNlcnZlcyB0byBkaWUuIApJTiBPSElPIGJpdGluZyBjb2xkIHdlYXRoZXIgVHVybiB0byBwYWdlIDQsIGNvbC4gMyA4MSdFQ0lBTCBvbiBDbHRUZWxhbmQgQm9sb2duYSBTOWUgSWIuIGF0IE1lcmVyIG9vbGRiZW5mYSBwZXJtYXJrZXQuIFJvdXRlIDM3LiBhY3JvdSBmcm9tIFVsZHdhciBNYWxsLiBDaGVjayBvdGhlciBvbiBhbmQgMzguIFBVTEwgNyBSbGIgRW5kIFBvcmsgUm9hdHQgNDVjIEliLiBNZXJlcicgT29sZGJlbmZhIFN1cGVybWFya2V0LCBSb3V0ZSAzNy4gYWVyb00gZnJvbSBVbGR3YXIgTGFzdCB5ZWFyIHRoZSBkYXkgbG9uZyBhZiAgZmFpciB3YXMgb3BlbiB0byBhbnkgY29sbGVnZSBzdHVkZW50LiAKVGhlIGxhc3QgMyAxIE5CQSBkcmFmdCBwaWNrcyBwbGF5ZWQgMSBnYW1lIGluIHRoZSBNYXJjaCBNYWRuZXNzIHRvdXJuYW1lbnQuIApJIGdldCBzb21lIHBlb3BsZSBhcmUgcmVhbGx5IGluc2VjdXJlIGFuZCB0aGluayBhIEZNTSBpcyBhbiBpbnN1bHQgb24gdGhlaXIgbWFuaG9vZC4gQnV0IGZvciBhIGxvdCBvZiBwZW9wbGUgaGF2aW5nIGFuIG9wZW4gcmVsYXRpb25zaGlwIGlzIGFtYXppbmcsIGFuZCBJIGd1YXJhbnRlZSBpZiB0aGUgZ3V5IGlzIGJpIG9yIHN0cmFpZ2h0LCBoZSBnZXRzIHRvIGJyaW5nIG1lbi93b21lbiBoZSB3YW50cyBpbnRvIGl0LiAKTXkgTUlMIGNhbiBiZSBhIGJpdCBkaXR6eSBhbmQgc2VsZiBjZW50ZXJlZCwgYnV0IGlzIGFsc28gdGhlIHN3ZWV0ZXN0IHdvbWFuLiBNeSBodXNiYW5kIHNheXMgc2hlIHRoZSAibmljZXN0LCBtb3N0IGluY29uc2lkZXJhdGUgcGVyc29uIHlvdSBldmVyIG1lZXQuIiBIb3dldmVyLCBzaGUgYWx3YXlzIGdyZWF0IHRvIG1lIGFuZCBhbGwgdGhlIGdyYW5ka2lkcy4gSXQgdmVyeSBvYnZpb3VzIG15IGh1c2JhbmQgc2lzdGVyIGlzIHRoZSBmYXZvcml0ZSBjaGlsZCwgYnV0IHNoZSBkb2VzIGhlciBiZXN0IHRvIG1ha2UgZXZlcnl0aGluZyBlcXVhbC4gCkNoaXJvcHJhY3RpYyBzdHVkZW50cywgODIlIG9mIG1lZGljYWwgc2Nob29sIGdyYWR1YXRlcyBmYWlsZWQgdGhlIGV4YW1pbmF0aW9uLiAKVGhpcyBzdG9yeSBpcyBtb3JlIGFib3V0IHJlc3RvcmluZyBmYWl0aCBpbiBwZW9wbGUgdGhhbiBhbnl0aGluZy4gCkQgdmllbnQgY2UgY29uY2VwdCA/CkFscyBEaWVuc3RlYW5iaWV0ZXIgc2luZCB3aXIgZ2VtICA3IEFicy4xIFRNRyBmciBlaWdlbmUgSW5oYWx0ZSBhdWYgZGllc2VuIFNlaXRlbiBuYWNoIGRlbiBhbGxnZW1laW5lbiBHZXNldHplbiB2ZXJhbnR3b3J0bGljaC4gTmFjaCAgOCBiaXMgMTAgVE1HIHNpbmQgd2lyIGFscyBEaWVuc3RlYW5iaWV0ZXIgamVkb2NoIG5pY2h0IHZlcnBmbGljaHRldCwgYmVybWl0dGVsdGUgb2RlciBnZXNwZWljaGVydGUgZnJlbWRlIEluZm9ybWF0aW9uZW4genUgYmVyd2FjaGVuIG9kZXIgbmFjaCBVbXN0bmRlbiB6dSBmb3JzY2hlbiwgZGllIGF1ZiBlaW5lIHJlY2h0c3dpZHJpZ2UgVHRpZ2tlaXQgaGlud2Vpc2VuLiAKVml0LiBEMyBwcm9tb3RlIGZhdCBsb3NzIGFuZCBnYWluIGdvb2QgbXVzY2xlIGluIHdvbWVuCkFsdGhvdWdoIGl0IG1heSBzZWVtIGEgbGl0dGxlIGV4Y2Vzc2l2ZSwgdGhlcmUgYXJlIGEgY291cGxlIG9mIHJlYXNvbnMgd2h5IHlvdSBtaWdodCBiZW5lZml0IGZyb20gdXNpbmcgc2VwYXJhdGUgY3JlYW1zIGZvciB5b3VyIGhhbmRzIGFuZCBjdXRpY2xlcy4gCkluIGEgbGlmZSB0aGF0IGNvbnRpbnVlZCBmb3IgdHdvIGFuZCBhIGhhbGYgZGVjYWRlcyBwYXN0IGhpcyBvYml0dWFyeSBpbnRlcnZpZXcgd2l0aCB0aGUgTmV3IFlvcmsgVGltZXMsIG1lZGlhIHNoeSBiaWxsaW9uYWlyZSBKb2huIEtsdWdlIHdvdWxkIGVuZHVyZSBjb250cm92ZXJzeSBpbiB0aGUgZm9ybSBvZiBhIHNvY2lhbGl0ZSBleCB3aWZlIGFuZCBhbiBpbGxlZ2FsIGh1bnRpbmcgb3BlcmF0aW9uOyBhbmQgZXZlbiBoaXMgZ3JhbmRlc3QgYnVzaW5lc3MgZGVhbCB3b3VsZCBpbmNpdGUgc29tZSBpcmUuIEJ1dCBmb3IgdGhlIHBhc3QgMjAgeWVhcnMsIHRoZSBiaWdnZXN0IGhlYWRsaW5lcyBKb2huIFdlcm5lciBLbHVnZSBtYWRlIHdlcmUgdGhlIG9uZXMgbm90aW5nIGhpcyBleWUgcG9wcGluZyBkb25hdGlvbnMuCk92ZXJ2aWV3IGZvciBGZWxpc0Vyb3MKVGhhdCBjb3VydGVzeSBvZiB0aGUgcHJvamVjdCBSb29tIGFuIG9uIHNpdGUgYXJlYSBpbiBvbmUgb2YgdHdvIHNob3cgaG9tZXMgd2hlcmUgYWxsIHRoZSBvcHRpb25zIGFyZSBvbiBkaXNwbGF5LiBJdCBoZXJlIHdoZXJlIGJ1eWVycyB3aWxsIGJlIGFibGUgdG8gc2l0IGRvd24gd2l0aCAgc2FsZXMgc3RhZmYgYW5kIHNvcnQgdGhyb3VnaCB0aGUgb2ZmZXJpbmdzLCB3aGljaCBhbHNvIGluY2x1ZGUgY291bnRlcnRvcHMsIG1pcnJvciBmcmFtZXMgYW5kIGRvemVucyBvZiBkaWZmZXJlbnQgY2FycGV0IGNvbG91cnMuCkkgbG92ZSBWYW5pbGxhLiBJdCBjcmVhbXkgZW5vdWdoIHRoYXQgaWYgeW91IGNsb3NlIHlvdXIgZXllcyBhbmQgYmVsaWV2ZSBoYXJkIGVub3VnaCBpdCBsaWtlIGEgbWlsa3NoYWtlLiAKSGhlcHVua3RlIHdhcmVuIHVuc2VyZSBUcmVra2luZ3RvdXIgZHVyY2ggZGVuIEhpbWFsYXlhIGluIExhZGFraCwgaW0gTm9yZGVuIEluZGllbnMgKG5hdHJsaWNoIG1pdCBBYnN0ZWNoZXJuIG5hY2ggRGVsaGkgdW5kIEFncmEpIHVuZCBlaW5lIGVpbm1vbmF0aWdlIFJ1bmRyZWlzZSBpbSBKZWVwIGR1cmNoIGRpZSBNb25nb2xlaS4gCkhlIG5ldmVyIHdhbGtlZCBieSBhIGhvbWVsZXNzIHBlcnNvbiB3aXRob3V0IGdpdmluZyBhbmQgd291bGQgZ2l2ZSBhbGwgb2YgaGlzIG1vbmV5IHdpdGhvdXQgaGVzaXRhdGluZy4gTWF0dGhldyBsb3ZlZCBjYXRzIGV2ZW4gdGhvdWdoIHdlIGhhZCAyIGRvZ3MuIApPbmUgb3RoZXIgb3B0aW9uIGlzIEZlZGVyYWwgSSBCb25kcywgd2hpY2ggY3VycmVudGx5IGFyZSBnZXR0aW5nIGp1c3QgdW5kZXIgMiUuIEhvd2V2ZXIsIHlvdSBoYXZlIHRvIGhvbGQgYW4gSSBCb25kIGZvciBhdCBsZWFzdCAxMiBtb250aHMgYmVmb3JlIHlvdSBjYW4gY2FzaCBpdCwgYW5kIHlvdSBjYW4gb25seSBwdXJjaGFzZSAkMTBrIHdvcnRoIG9mIEkgQm9uZHMgaW4gYSBjYWxlbmRhciB5ZWFyLiBJIGFsc28gd291bGRuIGtlZXAgbW9yZSB0aGFuIGhhbGYgb2YgYW4gZW1lcmdlbmN5IGZ1bmQgaW4gSSBCb25kcywgYXMgdGhlIHRyYW5zZmVyIGZyb20gdGhlIFRyZWFzdXJ5IG1pZ2h0IHRha2UgYSBjb3VwbGUgZGF5cyAoSSBCb25kcyBhcmUgYWxsIGVsZWN0cm9uaWMgYW5kIGFyZSBwdXJjaGFzZWQgYW5kIHJlZGVlbWVkIHZpYSBUcmVhc3VyeURpcmVjdCwgdW5sZXNzIHlvdSB1c2UgeW91ciB0YXggcmV0dXJuIHRvIHB1cmNoYXNlIHBhcGVyIEkgQm9uZHMpLi4gCk1pbGl0YXJ5IEFjYWRlbXkgYXQgV2VzdCBQb2ludC4gCiApIGdvZXMgb24gdGhlIGZpcnN0IHBhZ2UgaGVhZGxpbmUgICBiZWNhdXNlIHRoZXkgYXJlIHRoZSBvbmUgd2hvIGlzIGluIGNoYXJnZSBvZiBKYXBhbi4gCkkgbWlnaHQgYmUgd3JvbmcsIGJ1dCBJIGhhdmUgYSBzdHJhbmdlIGZlZWxpbmcgYWJvdXQgaXQuIApMYXN0IEp1bmUsIHRoZSBwcm92aW5jaWFsIGdvdmVybm1lbnQgYW5ub3VuY2VkIHRoYXQgYmVjYXVzZSBvZiBlYXJ0aHF1YWtlIGNvbmNlcm5zLCBpdCB3aWxsIHJlcGxhY2UgdGhlIGV4aXN0aW5nIHNjaG9vbCB3aXRoIGEgbmV3IG9uZSBhdCBhIGNvc3Qgb2YgJDc5LjMgbWlsbGlvbiBieSAyMDIyLi4gCkV0IHF1ZSBsZXMgZ2VucyBxdWkgcG91cmZlbmRlbnQgbGUgdHJhdmFpbCBkdSBzZXhlIHBhcmxlbnQgZGUgY2hvc2VzIGRvbnQgaWxzIGlnbm9yZW50IHRvdXQsIG1hbG1uZW50IGxlcyBzdGF0aXN0aXF1ZXMgZXQgZGlhYm9saXNlbnQgdW4gYWN0ZSBzb21tZSB0b3V0ZSBuYXR1cmVsIGxvcnNxdWUgcHJhdGlxdSBlbnRyZSBhZHVsdGVzIGNvbnNlbnRhbnRzLiBMb3VpcyBQaWNoIHMnZW50cmV0aWVudCBhdmVjIE1pY2hlbCBEc2F1dGVscyBlbiBxdWFsaXQgZGUgY2xpZW50IGV0IGRlIHNvY2lvbG9ndWUgcyd0YW50ICBzcmlldXNlbWVudCBwZW5jaCBzdXIgbGEgcXVlc3Rpb24gLi4gCkluIHRoZSBlYXJseSBzdGFnZXMgb2YgYSB0b3VybmFtZW50IGJlZm9yZSB0aGUgYmxpbmRzIGdldCB0b28gaGlnaCwgcGxheWluZyB2ZXJ5IHRpZ2h0IGlzIHJlY29tbWVuZGVkOyB0aGF0IGlzLCBvbmx5IGVudGVyaW5nIHRoZSBwb3Qgd2l0aCB5b3VyIGJlc3QgaGFuZHMuIElmIHRoZSBvcHBvcnR1bml0eSB0byBnZXQgYWxsIG9mIHlvdXIgbW9uZXkgaW4gd2l0aCBhdCBsZWFzdCBvbmUgb3RoZXIgcGVyc29uIHdoaWxlIHlvdSBoYXZlIEFBLCBLSywgb3IgbWF5YmUgUVEsIHRoZW4gYnkgYWxsIG1lYW5zIHRha2UgaXQuIElmIHlvdSBhcmUgYWJsZSB0byBkb3VibGUgdXAgZWFybHkgaW4gYSB0b3VybmFtZW50LCBpdCBub3Qgb25seSBnaXZlcyB5b3UgZXh0cmEgY2hpcHMsIGJ1dCBpdCBhbHNvIGNhbiBiZSBhIHRyZW1lbmRvdXMgcHN5Y2hvbG9naWNhbCBhZHZhbnRhZ2UgYnkgaGF2aW5nIGEgbGFyZ2Ugc3RhY2suIEFzIHlvdSBnbyBkZWVwZXIgaW50byB0aGUgdG91cm5hbWVudCwgdGhlIGxhcmdlciB0aGUgc3RhY2sgeW91IGhhdmUsIHRoZSBtb3JlIHlvdSBjYW4gZm9yY2UgeW91ciBvcHBvbmVudHMgd2l0aCBmZXdlciBjaGlwcyB0byBsYXkgZG93biB0aGVpciBoYW5kcyBpbnN0ZWFkIG9mIHJpc2tpbmcgYWxsIG9mIHRoZWlyIGNoaXBzIGFnYWluc3QgeW91LgpNb3N0IGxpdGVyYWxseSBoYXZlIHh4eCx4eHgseHh4LjAwIHNpdHRpbmcgaW4gYSBTY2h3YWIgb3IgRmlkZWxpdHkgYWNjb3VudCBpbnZlc3RlZC4gSSByZW1lbWJlciBJIHdvcmtlZCB3aXRoIG9uZSBndXkgaGFkIG1vcmUgdGhhbiBhIGJpbGxpb24uIEhlIGp1c3Qgd2FudGVkIHRvIGJlIGluIHRoZSBTUDUwMCBzbyB3ZSBwdXQgYSB0cmFkZSBpbnRvIHNjaHdhYiBmb3IgODAwLDAwMCwwMDAgb2YgSVZWLiBUaGV5IGhhdmUgYSBsb2dpbiB0byB0aGVpciBwb3J0Zm9saW8gbWFuYWdlbWVudCBzb2Z0d2FyZSBhbmQgY2FuIGNoZWNrIG9uIHBlcmZvcm1hbmNlLCBmZWVzLCBldGMuIFNhbWUgYXMgYSB4eCx4eHggYWNjb3VudC4KVGhlIHJlYXNvbiBJIG0gdHJ5IG5vdCB0byBzZWxsIGlzIG9uZSwgSSBsb3NlIG1vbmV5ICh0aGUgcHJpY2UgZG9lc24gZ28gdXAgdGhlc2UgMiB5cnMsIHNvIGhhdmUgdG8gbG9zZSB0aGUgY29tbWlzc2lvbiB0byByZWFsdG9yKSwgdHdvLCBJIGFtIGEgYml0IHdvcnJpZWQgaWYgbmV3IE5BRlRBIHdpbGwgY2FuY2VsIFROIHZpc2EgaW4gdGhlIGZ1dHVyZSBzbyB3aWxsIGh2IHRvIGNvbWUgYmFjayB0byBjYW5hZGEsIG9yIFROIHZpc2EgaXMgb25seSB2YWxpZCBmb3IgMyB5cnMgYW5kIGNhbiByZW5ldyBhZ2Fpbiwgc28gaW4gdG90YWwgNiB5cnMuIEFmdGVyIDYgeXIsIGhhdmUgdG8gY29tZSBiYWNrIHRvIGNhbmFkYSBhbnl3YXlzIHNpbmNlIFROIGlzIG5vdCBmb3IgaW1taWdyYXRpb24uIFNvIGtlZXBpbmcgYSBwcm9wZXJ0eSBzZWVtcyBsaWtlIGEgInNhZmUiIHdheS4gV2hvIGtub3cgd2hhdCB0aGUgcHJpY2Ugd2lsbCBiZSwgY29uc2lkZXJpbmcgc28gbWFueSBwcGwgZmxvb2RpbmcgaW50byB0b3JvbnRvIGV2ZXJ5IHllYXIuCkkgaGF0ZSBjcnlpbmcuIApJIGRvbiBtdWNoIGNhcmUgZm9yIGhlciwgYnV0IEkgZG9uIHNlZSBoZXIgYXMgYmVpbmcgcHVzaHkuIApBcyB0aGVzZSBjYW1wYWlnbnMgdW5mb2xkIGFuZCBtb3JlIGNvbWVzIHRvIGxpZ2h0IGFib3V0IHRoZSB0d28gY2FzaW5vIHByb3Bvc2FscywgQXJrYW5zYW5zIHdpbGwgc2VlIHRoYXQgYm90aCBlbWJvZHkgYmFkIHBvbGljeSwgYmFkIGJ1c2luZXNzLCBhbmQgd291bGQgYmUgYmFkIGZvciB0aGUgc3RhdGUncyBxdWFsaXR5IG9mIGxpZmUgQ1BBViBhc3NlcnRzLiAiV2UgYWxyZWFkeSBoYXZlIHRvbyBtdWNoIGdhbWJsaW5nIGluIG91ciBzdGF0ZS4gV2UgZG9uJ3QgbmVlZCB0byBkaXZlcnQgZXZlbiBtb3JlIG1vbmV5IGZyb20gb3VyIHRyYWRpdGlvbmFsIGVjb25vbXkuIAoiVGhlbiB3ZSBzZWUgd2hhdCB0aGUgcGVvcGxlIG9mIEFsYmVydGEgdGhpbmsgYWJvdXQgdGhhdCEiIHJvYXJlZCBOb3RsZXksIGFzIHNoZSByZWNlaXZlcyBvbmUgb2YgaGVyIDI1IHN0YW5kaW5nIG92YXRpb25zIGZyb20gYSBjcm93ZCBjbGVhcmx5IGNlbGVicmF0aW5nIHdoZXJlIHRoZXkgYXJlIG5vdy4KR2luZXR0ZSBMYW1hcmNoZSBzJ2VzdCByZW5kdWUgIFZhbCBkJ09yLCB2aWxsZSBtaW5pcmUgZGUgbCdBYml0aWJpLCBwb3J0ZSBkJ2VudHJlIGR1IE5vcmQgZHUgUXViZWMgbyBsYSBwcm9zdGl0dXRpb24gcHJlbmQgdG91dGVzIHNvcnRlcyBkZSB2aXNhZ2VzIDogYmFycyBkZSBkYW5zZXVzZXMsIHNlcnZpY2VzIGQnYWNjb21wYWduZW1lbnQsIHByb3N0aXR1dGlvbiBkZSBydWUsIGV0IHByb3N0aXR1dGlvbiBkZSBmaW4gZGUgbW9pcy4gTm90cmUgam91cm5hbGlzdGUgYSBjb25zdGF0IHF1ZSBsZXMgdHJhdmFpbGxldXNlcyBkdSBzZXhlIG9udCBkaWZmcmVudHMgcG9pbnRzIGRlIHZ1ZSBzdXIgbGUgcHJvamV0IGRlIGxvaSBDIDM2LiAKTmV2ZXIgZXZlciBoYXZlIHRoZSB1cmdlIHRvIGJpdGUgeW91ciBmaW5nZXJuYWlscy4gTm90IG9ubHkgaXMgdGhpcyBoYWJpdCB2ZXJ5IGJhZCwgaXQncyBhbHNvIHVuaGVhbHRoeS4gSWYgeW91IGhhdmUgdG8gdHJpbSBpdCBkb3duLCB1c2UgcHJvcGVyIHRvb2xzIGxpa2UgYSBuYWlsIGN1dHRlciwgYW5kIHRoZW4gdXNlIGEgbmFpbCBmaWxlIHRvIHNtb290aGVuIHRoZSBlZGdlcy4gCldoZXJldmVyIHlvdSBzdGF5ICAgZW5qb3khMCB2b3Rlcy4gCk1laXN0IGlzdCBlciBlaW4gZ3V0ZXIgUmVkbmVyLiBFaW4gRG9zaGEgVW5nbGVpY2hnZXdpY2h0IGJld2lya3QgYmVpIGlobSB2b3J6ZWl0aWdlcyBFcmdyYXVlbiBvZGVyIEhhYXJhdXNmYWxsLiAKV2UgYXJlIGRlbGlnaHRlZCB5b3UgYW5kIHlvdXIgZnJpZW5kIGVuam95ZWQgeW91ciBzdGF5IGFuZCBpdCB3aWxsIGJlIG91ciBwbGVhc3VyZSB0byB3ZWxjb21lIHlvdSBib3RoIG9uIHlvdXIgcmV0dXJuLiBIZWFsdGh5IHJlZ2FyZHMsIFNoYXJvbiBTdHJpY2tlclJlc3BvbnNlIGZyb20gQ2FueW9uUmFuY2hUdWNzb24sIEd1ZXN0IFJlbGF0aW9ucyBNYW5hZ2VyIGF0IENhbnlvbiBSYW5jaCBpbiBUdWNzb25SZXNwb25kZWQgTm92IDEzLCAyMDE4V2UgYXBwcmVjaWF0ZSB5b3UgY2hvb3NpbmcgQ2FueW9uIFJhbmNoIFR1Y3NvbiBmb3IgeW91ciB2YWNhdGlvbi4gV2hpbGUgSSBhbSBoYXBweSB5b3UgZW5qb3llZCBvdXIgc2NlbmljIGxvY2F0aW9uIGFuZCBvdXRkb29yIHNwb3J0cywgSSBhbSBzb3JyeSB0byBoZWFyIHRoYXQgeW91ciBleHBlcmllbmNlIGhhZCBzb21lIGRpc2FwcG9pbnRtZW50cy4gCkknbSBqdXN0IHNwZWVjaGxlc3MgdGhhdCBhIGZhdGhlciB3b3VsZCBoZWxwIGhpcyBkZXJhbmdlZCBtb21teSBoYXJtIGhpcyB5b3VuZyBjaGlsZHJlbi4gVGhhdCBoZSdzIGFsbGllZCB3aXRoIGFub3RoZXIgYWR1bHQgdG8gZXNzZW50aWFsbHkgdGVycm9yaXplIG9uZSBvZiBoaXMgb3duIG9mZnNwcmluZy4gSXQncyBsaWtlIGhlJ3MgZm9yZ290dGVuIHRoYXQgaGUgYWN0dWFsbHkgSEFTIGEgZmFtaWx5IFNUQlggT1AgYW5kIGhpcyBmdWNraW5nIGNoaWxkcmVuIGFuZCBoYXMgdG90YWxseSByZXZlcnRlZCB0byBiZWluZyBtb21teSdzIGJlc3QgZXN0IHdpZGRsZSBzbm9vayB1bXMgd2hvIHRoaW5rcyBpdCdzIGEgZ29vZCBpZGVhIHRvIGhlbHAgcmFnaW5nIG1vbW15IHNjYXJlIHRoZSBjcmFwIG91dCBvZiB5b3VuZyBraWRzLiAKU2Vjb25kLCB0aGVyZSBpcyBhIHR3byBwYXJ0IHByb2JsZW0uIApUaGUgYWQgaW5zdHJ1Y3RzIGNvbnN1bWVycyBvbiBob3cgdG8gZGlzdGluZ3Vpc2ggYW4gb3JpZ2luYWwgOTkgY2VudCBJa2VhIGJsdWUgYmFnIGZyb20gYSAiZmFrZSwiIGFuZCByZW1pbmRzIHBlb3BsZSBvZiBqdXN0IHdobyBjb25jZWl2ZWQgdGhlIG9yaWdpbmFsLi4gClBvaW50emVybzk5IHUKU28gdGFrZSB0aGF0IHByb2plY3QgYW5kIG11bHRpcGx5IGl0IGJ5IDgwMCBiaWxsaW9uIGFuZCB0aGF0IGhvdyB3ZSBsaXZlIHJpZ2h0IG5vdy4gSSBzcGVuZCBtb3N0IG9uIGxpbmUgdGltZSBsb29raW5nIGF0IG1pcnJvcnMgKGNhbiBzZWVtIHRvIGZpbmQgdGhlIHJpZ2h0IG9uZSBmb3IgdGhlIE1hc3RlciBCYXRoKS4gSSBzdGlsbCBjYW4gZmluZCB0aGUgcmlnaHQgc2l6ZSBiYXRocm9vbSBydWcuIFdlIG5lZWQgYSBuZXcgd2FzaGVyIGFuZCBkcnllci4gQW5kIHZhY3V1bS4gQW5kIEkgd2FudCB0byByZXBsYWNlIHRoZSB3aW5kb3dzLgpEZWxldGVkIGNvbW1lbnRzIHdlcmUgZGVsZXRlZCBmb3IgYSByZWFzb24uIERvIG5vdCByZXB1YmxpY2l6ZSB0aGVtIG9yIHVzZSB1bmRlbGV0aW5nIHNlcnZpY2VzIHRvIHJlcHVibGljaXplIHRoZW0uCkkgY291bGQgdGVsbCBwb29yIHBlb3BsZSBpbiAzcmQgd29ybGQgY291bnRyaWVzIHdpdGggYmFkIGxpdmluZyBjb25kaXRpb25zIHRvICJ3b3JrIGhhcmQiIGFuZCB3aGF0IHdpbGwgdGhhdCBnZXQgbWU/IFBlb3BsZSBzaGl0dGluZyBvbiBtZSBmb3IgYmVpbmcgaW5jb25zaWRlcmF0ZS4gQnV0IGFueW9uZSBkYXJlIHRlbGwgYW4gdWdseSwgcG9vciwgbWVudGFsbHkgaWxsIHBlcnNvbiB0byAid29yayBoYXJkIGFuZCBzdWNjZWVkIiBhbmQgaXQgImdvb2QgYWR2aWNlIiBmb3Igc29tZSBvZGQgcmVhc29uLCBkZXNwaXRlIHRoZSBzYW1lIGNvbmNlcHQgYW5kIHJlYXNvbmluZyBiZWhpbmQgaXQuCllldCBBbWVyaWNhbiBvcHRpbWlzbSBpbiB0aGUgd2FyIGluIEFmZ2hhbmlzdGFuIGhhcyBqdW1wZWQgaW4gcmVjZW50IHdpdGggbmVhcmx5IGhhbGYgb2YgQW1lcmljYW5zIGJlbGlldmluZyB0aGUgd2FyIGluIEFmZ2hhbmlzdGFuIGlzICJnb2luZyB3ZWxsLiIuIApBbmQgc28gZm9yIHBvbGl0aWNzLCB3aGlsZSBUYWl3YW4gaXMgYSBtdWx0aSBwYXJ0eSBkZW1vY3JhY3ksIG1vc3Qgb2YgdGhlIGNvcmUgcG9saXRpY3MgbmF0dXJhbGx5IGZhbGwgaW50byBhIHR3byBwYXJ0eSBzeXN0ZW0gb2YgS01UIGFuZCBEUFAuIEtNVCBhcmUgZ2VuZXJhbGx5IGZyaWVuZGxpZXIgdG8gQ2hpbmEsIHdoaWxlIERQUCBhcmUgbW9yZSBhZ2dyZXNzaXZlLiAKRmF2b3JpdGU6IENpbmNpbm5hdGkuIFRoZSBCZWFyY2F0cyBhcmUgYSBydWdnZWQsIGFnZ3Jlc3NpdmUgYnVuY2ggd2hvIGZlYXIgbm8gdGVhbS4gVGhleSBkaWQgbG9zZSBhdCBob21lIHRvIExvdWlzdmlsbGUgbGF0ZSBpbiB0aGUgc2Vhc29uLCBidXQgaG9sZCB0d28gdmljdG9yaWVzIG92ZXIgTWVtcGhpcy4KVGhpcyB0eXBlIG9mIHJhbmtpbmcgZm9yIHBva2VyIGhhbmRzIGNvbnNpc3RzIG9mIHR3byBkaWZmZXJlbnQgcGFpcnMuIFRoZSBuZXh0IHR5cGUgaXMgY2FsbGVkIHRocmVlIG9mIGEga2luZCB3aGVyZWluIHRocmVlIG91dCBvZiB0aGUgZml2ZSBjYXJkcyBpbiBvbmUncyBwb2tlciBoYW5kcyBhcmUgdGhlIHNhbWUuIEFub3RoZXIgdHlwZSBvZiByYW5raW5nIGlzIGNhbGxlZCBhIHN0cmFpZ2h0IHdoZXJlaW4gdGhlIGNhcmRzIGluIHRoZSBwb2tlciBoYW5kcyBjb250YWluIDUgY29uc2VjdXRpdmUgdmFsdWVzIHdoaWNoIGlzIHJhbmtlZCBhY2NvcmRpbmcgdG8gdGhlIHJ1bGUgb2YgdGhlIGhpZ2hlc3QgY2FyZC4gCiJUaGUgY2x1YiBtZW1iZXJzIGhhdmUgYmVlbiBhYnNvbHV0ZWx5IHBvc2l0aXZlIGFib3V0IHRoZSBwdXJjaGFzZSBvZiB0aGUgb3BlcmF0aW9uLiAKSW4gMjAwNCB0aGUgUkFaQVIgd2FzIHRoZSBjdXR0aW5nIGVkZ2UgY2VsbCBwaG9uZS4gR29vZ2xlIE1hcHMgZGlkbiBleGlzdCwgYW5kIEdQU3Mgd2VyZSBzdGlsbCBhIHRoaW5nLiBGYWNlYm9vayB3YXMgc3RpbGwgb25seSBhdCBIYXJ2YXJkLiBTdHJlYW1pbmcgVFYgc2VydmljZXMgZGlkbiBleGlzdCwgYW5kIHRoZSBvbmx5IFR3ZWV0cyBjYW1lIGZyb20gQmlyZHMuIFNvIGZhciB3ZSBoYXZlIGhlbGQgdHJ1ZSB0byBtb29yZSBsYXcgc28gd2UgYXJlIGxvb2tpbmcgYXQgYW5kIGV4cG9uZW50aWFsIGluY3JlYXNlIGluIHRlY2hub2xvZ3kgaW4gdGhlIG5leHQgMTUgeWVhci4KVGhlIG1vbmV5IHJlcHJlc2VudGVkIGZ1bmRzIGVhcm5lZCBieSB0aGUgY2FtcCBieSBzZWxsaW5nIGJyYWNlbGV0cy4gV2l0aCBhZGRpdGlvbmFsIGRvbmF0aW9ucywgdGhlaXIgJDEsMDAwIHRvdGFsIHdhcyBtYXRjaGVkIGJ5IHRoZSBSb3lhbCBOZWlnaGJvcnMgb2YgQW1lcmljYS4gCldoeSBkbyB3b21lbiBnYW1ibGUgb25saW5lPwpJbCByc2lkZSAgbCdPdWVzdCwgbCBvIGxlIHNvbGVpbCBzZSBjb3VjaGUuIElsIGVzdCBjZW5zIHByb3RnZXIgIGxhIFRlcnJlIGV0IGxhIHZndGF0aW9uIGNvbnRyZSBsYSBzY2hlcmVzc2UgZXQgbGEgbW9ydCAgZW4gYXBwb3J0YW50IGxlcyBwbHVpZXMuIApVbmxlc3MgeW91IGFyZSByZWFsbHkgZGVzcGVyYXRlIGZvciB0aGUgdGhyZWVzb21lIGV4cGVyaWVuY2UsIHRoaXMgaXMgYSBsb3QgdG8gc3BlbmQgaW4gOTAgbWludXRlcy4gCkFjY29yZGluZyB0byBhIHJlcG9ydCBpbiB0aGUgR2xvYmUgYW5kIE1haWwsIHRoZSBkZXNpZ24gd29yayBmb3IgdGhlIFVuaW9uIFN0YXRpb24gcmVub3ZhdGlvbnMgdG9vayBwbGFjZSBpbiAyMDA2LCBmaXZlIHllYXJzIGJlZm9yZSB0aGUgcHJvdmluY2UgYW5ub3VuY2VkIHRoYXQgaXQgd2FudGVkIHRvIGVsZWN0cmlmeSBHTyBUcmFuc2l0IHJhaWxzIHRvIHByb3ZpZGUgbW9yZSBmcmVxdWVudCBzZXJ2aWNlIHRvIE9udGFyaW8gY29tbXV0ZXJzLgpJIGZlZWwgbGlrZSB5b3UganVzdCBuZWVkIHRvIGNvbnRpbnVlIHRvIGdpdmUgaGltIHRpbWUgdG8gcmVsYXggd2hlbmV2ZXIgaGUgaXMgaG9tZS4gTWVuIHVzdWFsbHkgcmVjaGFyZ2UgYXQgaG9tZS4gSXQgZG9lcyBzb3VuZCBzbWFydCB0byBoYXZlIHRoZSBzZWNvbmQga2lkIG5vdy4gSG93ZXZlciBpZiBJIHdlcmUgaW4geW91ciBzaG9lcywgaW5zdGVhZCBvbiBmb2N1c2luZyBvbiB5b3VyIGh1c2JhbmQgSSB3b3VsZCBmb2N1cyBvbiBvcHRpbWl6aW5nIG15IHJvdXRpbmUsIG1heWJlIHRoZXJlIGFyZSB0aGluZ3MgdGhhdCB5b3Ugc2hvdWxkIGRlbGVnYXRlLCBvciBzdG9wIGRvaW5nIGFsbCB0b2dldGhlciwgbWF5YmUgdGhlcmUgaXMgc29tZXRoaW5nIHdlcmUgeW91IHB1c2hpbmcgeW91cnNlbGYgdG9vIGhhcmQgZm9yIG5vIGdvb2QgcmVhc29uLgpUaGUgZmlsbWluZyBpcyByZW1lbWJlcmVkIGluIGEgbmV3IHBlcm1hbmVudCBleGhpYml0aW9uIGF0IENhcm5mb3J0aCBSYWlsd2F5IFN0YXRpb24gbG9va2luZyBhdCB0aGUgY2FyZWVyIG9mIHRoZSBmaWxtJ3MgZGlyZWN0b3IgU2lyIERhdmlkIExlYW4uCklmIGl0IGlzIGR1ZSB0byB0aGUgcHJlc2VuY2Ugb2YgYW4gb3V0ZG9vciBjYXQgb3IgY29uc3RydWN0aW9uLCB5b3UgY2Fubm90IGVsaW1pbmF0ZSB0aGVzZSBpdGVtcy4gCkNsYXkgaXMgY29uc2lkZXJlZCB0byBiZSBhIGhpZ2ggZ3JhZGUgbWF0ZXJpYWwgd2hlbiBpdCBjb21lcyB0byBxdWFsaXR5LCBhcHBlYWwsIGFuZCBlYXNlIG9mIHVzZSBpbiB0aGUgcG9rZXIgaW5kdXN0cnkuIApUaGUgc2VyaWVzIHdhcyBvdmVyIGFmdGVyIHRoZSBmaXJzdCBtYXAuLiAKQnV0IG5vIG1hdHRlciB3aGF0IHdlIGNhbGwgdGhlIHNvdW5kcywgdGhlIG1lc3NhZ2UgZnJvbSBCcmV3ZXIgc3R1ZHkgaXMgY2xlYXI6IEEgbG90IG9mIG1vYW5pbmcgb2NjdXJzIHdoZW4gdGhlcmUgaXNuIG11Y2ggdG8gbW9hbiBhYm91dCBhZnRlciBhbGwuClRoaXMgaXNuJ3Qgd3JvbmcsIG1hbnkgd29ya2VycyByZXZvbHV0aW9ucyBvY2N1cnJlZCBpbiB0aGUgMTgwMCdzIGFuZCBlYXJseSAxOTAwJ3MuIFRoZXNlIHdlcmVuJ3QgbmVjZXNzYXJpbHkgQ29tbXVuaXN0LCBidXQgdGhleSBkaWQgbWFrZSB0aGUgbmVlZCBhcHBhcmVudCBmb3IgcmVmb3JtLi4gCkxlYWRpbmcgb3RoZXJzIHRvIGlsbGVnYWwgc3RyZWFtcyBvciB0b3JyZW50cyBpbmNsdWRlcyBleHBsaWNpdGx5IG1lbnRpb25pbmcgc3BlY2lmaWMgc3RyZWFtaW5nL3RvcnJlbnRpbmcgc2l0ZXMsIG9mZmVycyB0byBzZW5kIHVzZXJzIGlsbGVnYWwgY29udGVudCwgYW5kIGxlYWRpbmcgdG8gcHJveHkgc2VydmljZXMgdG8gY2lyY3VtdmVudCBsaWNlbnNpbmcuIApUaGV5IGhhdmUgdmVyeSBmZXcgc2V0dGluZ3MsIHRoZSBmaWxtIGlzIGV4dHJlbWVseSBmaWNrbGUsIGFuZCB0aGV5IHdlcmUgY3JlYXRlZCBhdCBhIHRpbWUgd2hlbiB0aGUgZ3JlYXQgZGVtb2NyYXRpemF0aW9uIG9mIHBob3RvZ3JhcGh5IHdhcyBpbiBmdWxsIHN3aW5nIG1lYW5pbmcgdGhlIHNpbXBsaWZ5aW5nIG9mIHRoZSB0ZWNobm9sb2d5IHRvIHB1dCBjYW1lcmFzIGluIHRoZSBoYW5kcyBvZiB0aGUgYXZlcmFnZSBwZXJzb24gd2FzIHdlbGwgdW5kZXJ3YXkuLiAKWWVhaCB5b3UgZmluZCBhIGRvYyB0byBwcmVzY3JpYmUgdGhlbSwgdGhhdCB0aGUgZWFzeSBwYXJ0IGJ1dCB5b3UgbmVlZCB0byB0cnkgZXZlcnkgbGFzdCB0aGluZyBiZWZvcmUgeW91IGdvIHRoYXQgcm91dGUuLiAKUml2ZXJraW5nIChhIGRlZGljYXRlZCBwb2tlciByb29tLCBhbGx0aG91Z2ggdGhlcmUgZmFjZWJvb2sgcGFnZSBoYXMgYmVlbiByZW1vdmVkIHNvIG5vdCBzdXJlIGlmIHRoZXkgYXJlIHN0aWxsIG9wZW4pLgpGZWxvbnkgYW5kIHByaXNvbiB0aW1lLiAKSW4gYWRkaXRpb24sIEkgbmVlZGVkIHRvIGJlIHN1cGVydmlzZWQgd2hlbiBJIHdhcyBzZWxmIGluZnVzaW5nICAgd2hpY2ggSSB0aGluayBpcyBwZXJmZWN0bHkgcmVhc29uYWJsZSBwb2xpY3kuIApXaGVuIEkgd2FzIGxhc3QgdGhlcmUgd2UgY291bGRuIGxlYXZlIG91ciBob21lcyBiZXR3ZWVuIDZhbSA4cG0uIApPbmNlIHRoZSByZWR1Y3Rpb24gdGFyZ2V0IHdhcyBtZXQsIG9uZSBpbiBvbmUgb3V0IGJlY2FtZSB0aGUgbmV3IHN0YW5kYXJkLiAKRXZlbiBpZiB5b3UgdGhpbmsgeW91IGhhdmUgZW1wbG95ZWQgdGhlIGJlc3QgImV4cGVydHMiIGluIHRoZSB3b3JsZCwgSSB3b3VsZCBub3Qgd2FudCB0byBsaXZlIHVuZGVyIHNvbWVvbmUgd2hvICJ0aGlua3MiIHRoZXkga25vdyBldmVyeXRoaW5nIGFib3V0IG1lIGFuZCB3aGF0IEkgbmVlZCBtb3JlIHRoYW4gSSBkby4KRXhjdXNlIG15IGVuZ2xpc2gsIGkga25vdyBpdHMgbGFja2luZy4KSG9uZXN0bHksIEkgZnVja2luZyBoYXRlIHNlZWluZyBzbm93IHNoaXQgb24gbXkgZnJvbnQgcGFnZSAocmFnZSByYW50IGluY29taW5nLCBsaXRlcmFsbHkgbm8gcHJvYmxlbXMgd2l0aCB0aGlzLCBpdCBqdXN0IGxvb2tzIGNvb2wpIEkgZnVja2luZyBoYXRlIHNlZWluZyBhbGwgdGhpcyBzaGl0IG9uIHNvY2lhbCBtZWRpYSwgbGlrZSAidWdoIGl0J3Mgc25vd2luZyBub3csIiBvciAib21nISBXaHkgaXMgaXQgc25vd2luZyBub3chISEiIEkganVzdCB3YW50IHRvIHNheSB0byB0aG9zZSBwZW9wbGUsIGVuam95IHdoaWxlIHlvdSBjYW4hIEkgY2FuJ3QgbW92ZSBvdXQgb2YgbXkgY291bnRyeSAodW5kZXJhZ2UpIHNvIEknbSBzdHVjayB3aXRoIGp1c3QgdGhlIGZ1Y2tpbmcgc3VuIGFsbCB5ZWFyIHJvdW5kLiBJIGZ1Y2tpbmcgaGF0ZSBpdCwgSSBoYXZlIHRvIGdyb3cgdXAgd2l0aG91dCBhbnkgc25vd2JhbGwgZmlnaHRzLCBvciBzbm93bWVuLCBvciBldmVuIHNub3cgYW5nZWxzLiAKQydlc3QgZHUgbW9pbnMgY2UgcXVlIHByb3Bvc2UgbCdkaXRpb24gYW1yaWNhaW5lIGR1IHNpdGUgZGUgVm9ndWUgLCBxdWkgdmllbnQgZGUgbGFuY2VyIHNhIHNyaWUgZW4gdmlkbyBHbyBBc2sgQW5uYS4gCkFsc28sIHNpbXMgbm93IGhhdmUgZml2ZSBwZXJzb25hbGl0eSB0cmFpdHMuIFRoZSB0cmFpdHMgdGhleSBoYXZlIGNhcnJ5IHRocm91Z2ggaW50byBnYW1lcGxheS4gClRoZSBmb3JtZXIgZ2FtYmxpbmcgYWRkaWN0LCB3aG8gZGlkIG5vdCB3aXNoIHRvIGJlIG5hbWVkIGJ1dCBoYWQgYWdyZWVkIHRvIGJlIGludGVydmlld2VkIGJ5IHRoZSByZWd1bGF0b3IsIHdhcyBhbHNvIGdpdmVuIG1vcmUgdGhhbiBvbmUgbG95YWx0eSBjYXJkIHNvIHNoZSBjb3VsZCBoYXJ2ZXN0IHBvaW50cyBmcm9tIHZhcmlvdXMgbWFjaGluZXMsIE1yIFdpbGtpZSBzYWlkIG9uIFR1ZXNkYXkuIFRoZSBWaWN0b3JpYW4gQ29tbWlzc2lvbiBmb3IgR2FtYmxpbmcgYW5kIExpcXVvciBSZWd1bGF0aW9uIGNvbmZpcm1lZCBpdCBoYWQgbWV0IHdpdGggdGhlIEhvYmFydCBiYXNlZCBwb2xpdGljaWFuIGFuZCB3b3VsZCBsb29rIGF0IHRoZSBldmlkZW5jZSBoZSBwcm92aWRlZC4gClRoZSBiZXN0IHdheSBpcyB0byB1c2UgYW4gYW5pbWFsIGNhcmdvIHNlcnZpY2UuIEl0IGlzIG1vcmUgZXhwZW5zaXZlIHRoYW4gZXhjZXNzIGJhZ2dhZ2UgKGZvciBteSA1MCBwb3VuZCBkb2csIGl0IHdhcyAkMTAwMCB2ZXJzdXMgJDYwMCkgYnV0IHRoZSBzdGFmZiBhcmUgZXhwZXJ0cyBpbiB0cmFuc3BvcnRpbmcgcGV0cyBhbmQgdGhleSBhcnJhbmdlIHRoZSBqb3VybmV5IHRvIG1heGltaXplIHRoZSBjb21mb3J0IGFuZCBoZWFsdGggb2YgdGhlIHBldC4gClRoZSB0aW1lIGhhcyBjb21lIHRvIHJldmlzaXQgdGhpcyBhcHByb2FjaC4gRm9yIHllYXJzIGEgcG93ZXJmdWwgZG9tZXN0aWMgY2xpbWF0ZSBjaGFuZ2UgbG9iYnkgaGFzIHB1c2hlZCBmb3IgRVUgbGVnaXNsYXRvcnMgdG8gcGVuYWxpemUgc291cmNlcyBvZiBlbmVyZ3kgdGhhdCBhcmUgZGVlbWVkIHRvIG1ha2UgdGhlIGdyZWF0ZXN0IGNvbnRyaWJ1dGlvbiB0byBjbGltYXRlIGNoYW5nZSBzb3VyY2VzIG9mIGVuZXJneSBzdWNoIGFzIG9pbCBzYW5kcyB3aG9zZSBleHRyYWN0aW9uIGlzIGp1ZGdlZCBhcyBiZWluZyBtb3JlIGNhcmJvbiBpbnRlbnNpdmUgdGhhbiBtb3JlIGNvbnZlbnRpb25hbCBzb3VyY2VzIG9mIGVuZXJneSBmcm9tIHBsYWNlcyBsaWtlIFJ1c3NpYSBhbmQgdGhlIE1pZGRsZSBFYXN0LgpUaGlzIGhpZ2hlc3QgY2FyZCBpcyB0aGVpciBraWNrZXIsIGFuZCB0aGUgcGxheWVyIHdpdGggdGhlIGhpZ2hlc3Qga2lja2VycyB3aW5zLiAKQW4gYXV0b21hdGVkIHByb2dyYW0gdGhhdCBjcmF3bGVkIHRob3NlIHZhc3Qgc3BhY2VzIG9mIHRoZSBpbnRlcm5ldCB0aGF0IHdlcmVuIGNhY2hlZCBvciBpbmRleGVkIGJ5IHNlYXJjaCBlbmdpbmVzLiAKSSBoYXBwZW5lZCB0byBiZSB2aXNpdGluZyBoZXIgYXQgaGVyIHdvcmsgd2hlbiBSb24gSG93YXJkIHdhcyBzaG93aW5nIHRlc3QgZm9vdGFnZSB0byBUb20gSGFua3MgYW5kIG90aGVycyBpbiB0aGUgcHJvZHVjdGlvbi4gQWZ0ZXIgdGhleSB3ZXJlIGRvbmUgSG93YXJkIGFza2VkIEhhbmtzIHdoYXQgaGUgdGhvdWdodC4gSGUgc2FpZCAiSSBnb3QgYSBib25lci4iIFRoZSBzbWFsbCB0aGVhdGVyIHdoZXJlIHRoZXkgd2VyZSBkb2luZyB0aGUgc2hvd2luZyBicm9rZSBvdXQgaW4gbGF1Z2h0ZXIuIApUaGUgSnVsaWFuIER5bmFzdHlUaGUgTW9vbiB0cmlsb2d5IHRlbGxzIHRoZSBzdG9yeSBvZiB0aGUgSnVsaWFuIGZhbWlseS4gTWFueSBvZiBCdXJyb3VnaHMnIGhlcm9lcyBhcmUgaW1tb3J0YWw7IFRhcnphbiBlbmpveXMgZG91YmxlIGltbW9ydGFsaXR5Mywgbm8gb25lIGFnZXMgaW4gUGVsbHVjaWRhciBhbmQgb24gVmVudXMgdGhleSBoYXZlIGFuIGltbW9ydGFsaXR5IHNlcnVtLiBKdWxpYW4gdG9vIGhhcyBhIGZvcm0gb2YgaW1tb3J0YWxpdHksIGJlaW5nIHJlaW5jYXJuYXRlZCBhZ2FpbiBhbmQgYWdhaW4gaW4gaGlzIGRlc2NlbmRhbnRzLCBhbHRob3VnaCBxdWl0ZSBob3cgdGhpcyBoYXBwZW5zIGlzIG5ldmVyIGZ1bGx5IGV4cGxhaW5lZC4gCk92ZXJ2aWV3IGZvciA3MU5LM1JCM0xMClRoZSBCYWxsIGFzIGEgQmVuY2g6IEFueSBleGVyY2lzZSB0aGF0IHlvdSBwZXJmb3JtIG9uIGEgYmVuY2ggY2FuIGJlIHBlcmZvcm1lZCBvbiBhIGJhbGwsIGFsdGhvdWdoIHNvbWUgd2lsbCBiZSBtb3JlIGRpZmZpY3VsdCB0aGFuIG90aGVycy4gSWYgdXNpbmcgd2VpZ2h0cywgc3RhcnQgd2l0aCB3ZWlnaHRzIHRoYXQgYXJlIG11Y2ggbGlnaHRlciB0aGFuIHRoZSB3ZWlnaHRzIHlvdSB1c2Ugb24gYSBiZW5jaC4gVGhpbmsgb2YgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiB1c2luZyBhIGJhciBhbmQgdXNpbmcgZHVtYmJlbGxzLiBEdW1iYmVsbHMgYXJlIG1vcmUgZGlmZmljdWx0IHRvIGNvbnRyb2wsIGJlY2F1c2UgeW91IGhhdmUgdG8gY29udHJvbCB0aGVpciBtb3ZlbWVudCBpbiBhbGwgZGlyZWN0aW9ucy4gVXNpbmcgdGhlIGJhbGwgaW5zdGVhZCBvZiB0aGUgYmVuY2ggY2F1c2VzIHlvdSB0byBoYXZlIHRvIGNvbnRyb2wgdGhlIG1vdmVtZW50IG9mIHlvdXIgd2hvbGUgYm9keS4gRXhlcmNpc2UgZXhhbXBsZXM6ClNvIHRoZXJlIG1heSBoYXZlIGJlZW4gcHJlY2VkZW50IHRoYXQgc2hlIHdhcyBub3QgZ3JlYXQgYXQgY3VzdG9tZXIgaW50ZXJhY3Rpb24uLiAKSW4gbW9zdCBwbGFjZXMsIHdoZW4geW91IGZpbGUgZm9yIGRpdm9yY2UsIGJvdGggcGFydGllcyBhcmUgcmVxdWlyZWQgdG8gdGFrZSBhIGNsYXNzIChDaGlsZCBJbXBhY3QgU2VtaW5hcikgdGhhdCB0ZWFjaGVzIHRoZSBwYXJlbnRzIGhvdyB0byBjbyBwYXJlbnQgZWZmZWN0aXZlbHkgYW5kIHRoZSBpbXBhY3Qgb2YgZGl2b3JjZSBvbiBjaGlsZHJlbi4gSG9wZWZ1bGx5LCBzaW5jZSB5b3UgcmVjZW50bHkgZmlsZWQsIHlvdSBhbmQgeW91ciB3aWZlIHdpbGwgYmUgcmVxdWlyZWQgdG8gdGFrZSB0aGlzIGNsYXNzLiBJdCB3aWxsIGhlbHAgaGVyIGxlYXJuIHRoYXQgaGVyIGFjdGlvbnMgYXJlIGhhcm1mdWwgdG8geW91ciBjaGlsZC4KVGhlIG9mZmljZXIgdGhlbiBtYWRlIGEgcmVxdWVzdCBvdmVyIHRoZSByYWRpbyBmb3IgYWRkaXRpb25hbCBhc3Npc3RhbmNlIHRvIHJlc3BvbmQsIHNheWluZyB0aGUgbWFuIHdhcyB1bmNvb3BlcmF0aXZlIGFuZCB1bndpbGxpbmcgdG8gcHV0IGRvd24gYSBibHVudCBvYmplY3QuIFNldmVyYWwgb3RoZXIgb2ZmaWNlcnMsIGluY2x1ZGluZyBhIHN1cGVydmlzb3IsIHJlc3BvbmRlZC4gQXQgbGVhc3Qgb25lIG9mZmljZXIgcmVwb3J0ZWRseSBwdWxsZWQgaGlzIGd1biBhbmQgYWltZWQgaXQgYXQgdGhlIGdyb3VuZCwgd2hpbGUgYW5vdGhlciBoYWQgYSBzaG90Z3VuLi4gClRoaXMgaXMgdGhlIGNydXg6IHdoeSBqb2luIGFuIGFscmVhZHkgaGlnaCBwcm9maWxlIGJyYW5kIHZzIGNyZWF0aW5nIG9uZSBvZiB5b3VyIG93bj8gQmVjYXVzZSBFISBpc24ndCBBQkMuIApJIHdvdWxkIG5ldmVyIGZpZ2h0IHNvbWVvbmUgb3ZlciBhIGRpc2NvdW50IGFuZCB3YXNuJ3QgcmFpc2VkIHRvIHNob3Agb2YgQmxhY2sgRnJpZGF5LiBTbyBJIGFtIG5vdCBjb25kb25pbmcgdGhpcywgYnV0IGp1c3QgcHJvdmlkaW5nIGJhY2tncm91bmQuIE9kZGx5IGVub3VnaCwgbW9zdCBmaWdodHMgSSBoYXZlIHNlZW4gYXJlIG92ZXIgaW5zaWduaWZpY2FudCBkaXNjb3VudHMgb3IgcG9vciBxdWFsaXR5IGl0ZW1zLiAKSSBuZXZlciBzYWlkIG9yIHN1Z2dlc3RlZCB0aGF0IGFuZCBJIGNlcnRhaW5seSBkb24gYmVsaWV2ZSB0aGF0LiAKMzQpIEFnYWluLCBBZ2FpbiAuIENhbiBiZSBmb3VuZG9uIFlvdXR1YmUuIDM2KSBMdXYgVVN1bSAoYnkgQ0ogSG9sbGFuZCBmZWF0LiAKR2FtYmxpbmcgU2l0ZSBGdWxsIFRpbHQgUG9rZXIgQWxsZWdlZCB0byBCZSBhIFBvbnppIFNjaGVtZQpIb3cgZGFyZSB5b3UgZXZlbiBmYXRob20gdG8gYXNrIHN1Y2ggYSBmdWNrZWQgdXAgcXVlc3Rpb24sIGJ5IHRoZSB3YXkuIApUaGUgc2Vzc2lvbiBieSB0aGUgTmV3IE9ybGVhbnMgc2V4dGV0IHdhcyBleGFjdGx5IHRoZSB0eXBlIG9mIGphenp5IGV4cGVyaWVuY2Ugb25lIHdvdWxkIGV4cGVjdCB0byBoZWFyIG9uIEJvdXJib24gU3RyZWV0IGFuZCBvdGhlciBwYXJ0cyBvZiB0aGUgQmlnIEVhc3kuCldoZW4gSSBwbGF5IGEgdG91cm5hbWVudCBJIHRyeSB0byB0aGluayBhYm91dCBrZWVwaW5nIG15c2VsZiBpbiBwb3NpdGlvbiB0byB0YWtlIGFkdmFudGFnZSBvZiBncmVhdCBvcHBvcnR1bml0aWVzIHRoYXQgYXJpc2UuIEZvciBleGFtcGxlLCBpZiB5b3UgcGljayB1cCBBQSBhbmQgeW91ciBvcHBvbmVudCBoYXMgc29tZXRoaW5nIGxpa2UgS0sgb3IgUVEsIHlvdSB3YW50IHRvIGhhdmUgZW5vdWdoIGNoaXBzIHNvIHRoYXQgeW91IGNhbiB3aW4gYSBiaWcgcG90IGFnYWluc3QgdGhhdCBwZXJzb24uIApXaGF0IGNhbiBoZSBkbyB0byBjb21iYXQgeW91ciBwbGF5PyBTdGFydCBjYWxsaW5nIHVzIGxpZ2h0PyBUaGF0IGZpbmUsIGJlY2F1c2Ugd2UgaGF2ZSBoaW0gYmVhdCBkdWUgdG8gb3VyIHJhbmdlIGFkdmFudGFnZSB2ZXJ5IG9mdGVuLiAKVGhhdCB3YXkgeW91IGNhbiBzZXQgeW91ciB0cmF5IG9uIGFueSB0YWJsZS4gCk9uZSB0aGluZyB0byBrZWVwIGluIG1pbmQgdGhvdWdoIGlzIHRoYXQgdGhpcyBpcyBub3QgeW91ciB0cmFkaXRpb25hbCBncmVlbiBjb2xvci4uIApBIGNsZXZlciBraWQgbWF5IGV2ZW50dWFsbHkgcmVhbGl6ZSB0aGF0IHlvdSBjYW4gZG8gaXQgYW5kIG1heSBldmVuIGdpdmUgeW91IGEgcHJvb2YgKCEpIHRvIGNvbnZpbmNlIHlvdSBpdCBjYW4gYmUgZG9uZS4gClVzaW5nIGEgbGF5b3V0IGxpa2UgdGhpcyBpcyB0aGUgYmVzdCBvcHRpb24gYmVjYXVzZSB5b3UgYXJlIGdhaW5pbmcgZXhwZXJpZW5jZSBiZWZvcmUgeW91IGxheSBkb3duIHlvdXIgbW9uZXkgdG8gdGhlIGRlYWxlci4gClNwb3J0IGFuZCBlbnRlcnRhaW5tZW50ClRoZXJlIGhhdmUgbmV2ZXIgYXQgYW55IHBvaW50IHdoZXJlIGtvcmVhbnMgaGFkIGFueSBwb3dlcnMgb3ZlciBvdGhlciBzdXJyb3VuZGluZyBjb3VudHJpZXMuCll1cCEgSSB3YXMgYnJvd3NpbmcgQ3JhaWdzbGlzdCBqdXN0IGZvciBmdW4gYW5kIGNhbWUgYWNyb3NzIGhlciBhZC4gVGhlIHBpY3R1cmUgd2FzIGhlciBiYXNpY2FsbHkgYmVpbmcgY2hva2VkIGJ5IGEgbGVhc2ggYmVpbmcgdXNlZCBhcyBhIG1ha2VzaGlmdCBjb2xsYXIgYW5kIHNoZSB3YXMgY292ZXJlZCBpbiBtdWQuIEkga25vdyBpdCdzIGxpdGVyYWxseSB0aGUgd29yc3QgcGxhY2UgdG8gZ2V0IGEgZG9nIGZyb20gYnV0IEkgY291bGRuJ3QgbGVhdmUgaGVyIHRoZXJlIGFuZCBteSBodXNiYW5kIGFuZCBJIHdlcmUgZ29pbmcgdG8gZ28gdG8gc2hlbHRlcnMgbmV4dCB3ZWVrIGFueXdheXMgdG8gbG9vayBmb3IgYSBzZWNvbmQgZG9nLiBXZSBhcmUgZmFpcmx5IGNlcnRhaW4gdGhhdCBzaGUgd2FzIGFidXNlZCBpbiBzb21lIHdheSBhbmQgZGVmaW5pdGVseSB3YXMgbGVmdCBvdXRzaWRlIGFuZCBuZWdsZWN0ZWQuIFNoZSdzIHZlcnkgc2tpbm55IGFuZCBza2l0dGlzaCBidXQgc2hlIGF0IGxlYXN0IG5vdyBoYXMgaGVyIGZpcnN0IHNldCBvZiBzaG90cyBhbmQgaXMgY2xlYW4gYWZ0ZXIgYSBuaWNlIGJhdGguIFNoZSdzIGFsc28gZ2V0dGluZyAzIG1lYWxzIGEgZGF5IG9mIHB1cHB5IGNob3cgbWl4ZWQgd2l0aCB3YXJtIHdhdGVyIQpDaGllZiBKdXN0aWNlIEJldmVybGV5IE1jTGFjaGxpbiwgZm9yIGluc3RhbmNlLCByYWlzZWQgdGhlIHF1ZXN0aW9uIG9mIHdoZXRoZXIgdGhhdCBtZWFucyBwcm9zdGl0dXRlcyBvdWdodCB0byBiZSBhYmxlIHRvIGhpcmUgc2VjdXJpdHkgZ3VhcmRzIGFuZCB3b3JrIGluIHNlY3VyZSBicm90aGVscywgb2ZmIHRoZSBzdHJlZXQuCkxvdmVseWx1bGxhYnltZSB1CkZvciBwbGF5ZXJzIHdobyB3YW50IHRvIGFkZCBhIGRhc2ggb2YgZmxhdm9yIGludG8gdGhlIHBvdCwgYSBmZXcgbGV2ZWxzIG9mIHJvZ3VlIGNhbiBzcGljZSB1cCB5b3VyIEhvbGxpZGF5LiBSb2d1ZSBUcmlja3MgbGlrZSBSZXNpbGllbmN5LCB3aGljaCBnaXZlIHlvdSB0ZW1wb3JhcnkgaGl0IHBvaW50cyBpZiB5b3UncmUgYnJvdWdodCBiZWxvdyAwLCBzaG93IGhvdyB0b3VnaCBoZSB3YXMgdG8ga2lsbCwgZGVzcGl0ZSBiZWluZyBhIGdlbnRsZW1hbiB3aXRoIGEgZGViaWxpdGF0aW5nIGRpc2Vhc2UuIFNuZWFrIGF0dGFjayBpcyBhbHdheXMgZ29vZCB0byBoYXZlLCBhbG9uZyB3aXRoIFVuY2FubnkgRG9kZ2UuIElmIHlvdSB3YW50ZWQgdG8gZm9jdXMgb24gaGlzIGJhY2t1cCB3ZWFwb24sIHlvdSBjb3VsZCBldmVuIHRha2UgdGhlIEtuaWZlIE1hc3RlciBhcmNoZXR5cGUuCkVkaXQ6IGJ5IGZpeCBhbGwgSSBtZWFuIGVjY2VudHJpY2FsbHkgbG9hZGluZyBtdXNjbGVzIHdpdGggdGVuZGlub3BhdGh5IGhhcyB0aGUgZ3JlYXRlc3Qgc2NpZW5jZSBiZWhpbmQgaXQuIApJZiBJIGtub3duIEkgd2FzIGdvaW5nIHRvIGJlIGFkZGluZyB0byBoaXMgbG9hZCBhdCBhbGwsIEkgbmV2ZXIgd291bGQgaGF2ZSBnb25lIG91dCB0aGVyZS4gU2hlIGhhZCB0YWxrZWQgYWJvdXQgYmlnIHNhbGVzIHNoZSBtYWRlIGFuZCBtYWRlIGl0IHNvdW5kIGxpa2Ugc2hlIGhhZCBsb3RzIG9mIG1vbmV5LCBzbyBtZSBzdGF5aW5nIHdpdGggdGhlbSB3YXNuIGEgYmlnIGRlYWwuIEEgYmlnIHBhcnQgb2YgYmVpbmcgc29sZCBvbiB0aGUgd2hvbGUgaWRlYSBpcyB0aGF0IG15IHN0YXkgd291bGQgYmUgcmVudCBmcmVlIGFzIGxvbmcgYXMgSSB3YXMgd29ya2luZyBpbiB0aGUgc3R1ZGlvLiAKWy5dICJSZWFsaXN0aWNhbGx5LCBpdCBpcyBoYXJkIHRvIGFjY2VwdCB0aGUgc3lzdGVtIGZvciBhbGwgcG9zaXRpb25zIGF0IGJhbmtzLCIgc2FpZCBhIHNwb2tlc3BlcnNvbiBhdCB0aGUgS29yZWEgRmluYW5jaWFsIEluZHVzdHJ5IEVtcGxveWVycyBBc3NvY2lhdGlvbi4gCk1lIGluLiBJIG5lZWQgdG8gY2FsbCBteSBtb20uIFdlIG5lZWQgdGhlIHBvbGljZSBvciBzb21lb25lLiAKVGhlIHNvaWwgdGhleSBncm93IGluIGlzIFNPIGltcG9ydGFudC4gCkVpdGhlciB3YXksIExhcmEgd2FzIGFscmVhZHkgYW4gZXhwZXJpZW5jZWQgYWR2ZW50dXJlciBpbiB0aGUgY2xhc3NpYyBnYW1lcywgcmlnaHQ/IEluIHRoZSBmaXJzdCBvZiB0aGUgbmV3IGdhbWVzIGl0IHdhcyBjbGVhciB0aGF0IGlzIHdhcyBoZXIgZmlyc3QgYWR2ZW50dXJlICAgaW4gc3BpdGUgb2YgaGVyIG5hdHVyYWxseSBpbmNyZWRpYmxlIGFnaWxpdHksIGNvbWJhdCBwcm93ZXNzLCBhbmQgZmFtaWxpYXJpdHkgd2l0aCBib3dzIGFuZCBhIHZhcmlldHkgb2YgZmlyZWFybXMuIE9mIGNvdXJzZSB0aGF0IGRvZXNuIG1ha2Ugc2Vuc2UsIGJ1dCB0aGF0IHNlZ3JlZ2F0aW9uIG9mIGdhbWVwbGF5IGFuZCBzdG9yeSBmb3IgeWEuIEFueXdheSwgY2xhc3NpYyBMYXJhIHdhcyBwcm9iYWJseSBzZXZlcmFsIHllYXJzIG9sZGVyIGluIGhlciBmaXJzdCBnYW1lIHRoYW4gbmV3IExhcmEgd2FzIGluIGhlciBmaXJzdCBnYW1lLi4gCkVuZmFudGEgIDEyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KVGhpcyBwcm9kdWN0IHdpbGwgZGVmaW5pdGVseSBtYWtlIHN1cmUgdGhhdCB5b3UgZmVlbCBzb21ldGhpbmcgc3BlY2lhbCB3aGVuIGhvbGRpbmcgaXQgaW4geW91ciBoYW5kcy4gCldoYXQgQ0VTIDIwMTcgSGFzIFRvIE9mZmVyIEZvciBUZWNoIExvdmVyc1RoZSBOZXdlc3QgVGVjaCBBdCBUaGVUaGUgSW50ZXJuYXRpb25hbCBDb25zdW1lciBFbGVjdHJvbmljcyBTaG93IChDRVMgMjAxNylSZW1pLCBhIHNtYXJ0IGFsYXJtIGNsb2NrIGlzIGRpc3BsYXllZCBhdCB0aGUgVXJiYW4gSGVsbG8gYm9vdGggZHVyaW5nIGEgcHJlc3MgZXZlbnQgZm9yIENFUyAyMDE3LiAoUGhvdG8gYnkgQWxleCBXb25nL0dldHR5IEltYWdlcykKV2UncmUgaHVnZSBob2NrZXkgZmFucyBhbmQgd2hlbmV2ZXIgdGhlcmUncyBhbiBpbnRlcm5hdGlvbmFsIGdhbWUgZmVhdHVyaW5nIENhbmFkYSBhbmQgU3dlZGVuIGl0J3MgYSBncmVhdCBvY2Nhc2lvbi4uIApUaGV5IGp1c3QgaG9wZSB0aGF0IGhlIGdlbnVpbmVseSB0aGUgbmljZSBndXkgdGhhdCBoZSBzZWVtcyB0byBiZS4gCk9idmlvdXNseSB0aGlzIGlzIGp1c3QgYW4gZXN0aW1hdGUgYW5kIGRvZXNuIGFjY291bnQgYXQgYWxsIGZvciB0aGUgaW5ldml0YWJsZSBpbmNyZWFzZSBpbiBkZW1hbmQgZm9yIHNveWJlYW4gbWlsayAobm93IHRoYXQgd2UgZWxpbWluYXRlZCBsaXZlc3RvY2spLCBzb3liZWFuIG9pbCwgbm9yIG90aGVyIHNveWJlYW4gaW5kdXN0cnkgcHJvZHVjdGlvbiBuZWVkcy4gVGhpcyBpcyBzaW1wbHkgYSBkaXNjdXNzaW9uIG9uIHRoZSBwcm90ZWluIG5lZWRzIHRoZSBwbGFuZXQgd291bGQgaGF2ZSBpZiBpdCBkZXBlbmRlZCBvbiBzb3kgaW5zdGVhZCBvZiBtZWF0LiBBbHNvLCBldmVuIG1vcmUgcGxhbnQgYmFzZWQgcHJvdGVpbiB3b3VsZCBoYXZlIHRvIGJlIGNvbnN1bWVkIHRvIG1ha2Ugc3VyZSB0aGUgcG9wdWxhdGlvbiBnZXRzIGFsbCA5IGFtaW5vIGFjaWRzIChhIGNvbXBsZXRlIHByb3RlaW4gZGlldCkgYXMgc295IGlzIGxvdyBpbiBtZXRoaW9uaW5lIGFuZCBseXNpbmUgYW5kIGlzIHRoZXJlZm9yZSBub3QgYSAiY29tcGxldGUgcHJvdGVpbiIsIGNvbnRyYXJ5IHRvIHdoYXQgdmVnYW5zIGNsYWltLiAKRXhwbGFpbnMgR3VpbGxlbiwgIlRoZXJlIGhhcyBiZWVuIGEgcmlzZSBpbiBpbnN0YW5jZXMgb2YgcHJvdGVjdGlvbmlzbSB0aHJvdWdoIGFudGkgZHVtcGluZyBtZWFzdXJlcyBhbmQgYWxzbyB0aHJvdWdoIGFkbWluaXN0cmF0aXZlIGNvbnRyb2xzIG9yIG90aGVyIHR5cGVzIG9mIGFjdGlvbnMgdGhhdCBjYXVzZSBkZWxheSBhdCB0aGUgYm9yZGVyLiAKVGhlIHRvdXJuYW1lbnQgY2FuIGZpdCBhYm91dCAyNCw4MDAgcG9rZXIgcGxheWVycyBpbiB0aGUgc2luZ2xlIGV2ZW50IGlmIG5lZWQgYmUsIFBhbGFuc2t5IHNhaWQuLiAKSSB0aGluayBBbGxhbiBpcyBqdXN0IGxpa2UgZXZlcnlvbmUgZWxzZSBpbiB0b3duOyBoZSBzdXNwZWN0cyBzb21ldGhpbmcgYnV0IGhlIHRvbyBtdWNoIHVuZGVyIEFkb3JhIHBvd2VyIHRvIGxldCBoaW1zZWxmIHNlZSB0aGUgdHJ1dGguIEhlIGxpdmVkIHVuZGVyIGhlciBzcGVsbCBmb3IgdG9vIGxvbmcuIEFkb3JhIGlzIGxpa2UgYW4gZW1wcmVzcyBpbiBXaW5kIEdhcCwgYW5kIG5vYm9keSBkYXJlcyB0byBxdWVzdGlvbiBoZXIuIEluIHRoZSBib29rIGhlIGFsbW9zdCBub24gZXhpc3RlbnQsIHNvIHdlIGRvbiBrbm93IGhvdyBtdWNoIGhlIGtub3dzIG9yIHN1c3BlY3RzLiBUaGV5IGRvIHN0cmVzcyB0aGUgd2VhayBDcmVsbGluIGRpc3Bvc2l0aW9uIGEgbG90IGluIHRoZSBib29rLCBzbyBtYXliZSBoZSBibGFtZXMgaGlzIG93biBnZW5lcy4KSSBmZWx0IGF3ZnVsIGJlY2F1c2UgSSB3YXMgc2ljayBhbmQganVzdCB3YW50ZWQgdG8gZ28gaG9tZSBhbmQgZ28gdG8gYmVkLiBJIHdpbGwgbmV2ZXIgZm9yZ2V0IHRoZSBsaXR0bGUgYm95IHRlbGxpbmcgbWUgdGhlaXIgaGVhdGVyIGRvZXNuIHdvcmsgaW4gdGhlIGNhciBhbmQgdGhleSBoYXRlIGxlYXZpbmcgdGhlIGhvdXNlIGJlY2F1c2UgaXQgaXMgc28gY29sZCBpbiB0aGUgY2FyLiAKSG93ZXZlciwgSSBkb24ndCBrbm93IHdoYXQgdGhlIG9kZHMgYXJlIG9mIGdldHRpbmcgc3BvdHRlZCBpbiB0aGUgY3Jvd2QuIFRoaXMgaXMgbm90IHByb2JhYmx5IHRoZSBzb3J0IG9mIHNob3cgd2hlcmUgZXZlcnlvbmUgcGVyZm9ybWluZyBpcyBiYWNrc3RhZ2UgdGhlIHdob2xlIHRpbWUgYW5kIHRoZXkgaGF2ZSBubyBpZGVhIHdobydzIG91dCB0aGVyZS4gVGhlIGJhbGNvbnkgKGFuZCBvbmx5IHRoZSBiYWxjb255KSB3YXMgc29sZCBvdXQsIHNvIEkgYXNzdW1lIHRob3NlIGluIHRoZSBzaG93IGp1c3QgZ28gdXAgdGhlcmUgdG8gd2F0Y2ggd2hlbiB0aGV5IGFyZSBkb25lLiAKQWZ0ZXIgdGhlIGNhcmRzIGFyZSBleGNoYW5nZWQsIGRldGVybWluZSB0aGUgd2lubmVyIG9mIHRoZSBnYW1lLiBXaGljaCBmaXZlIGNhcmQgZHJhdyBwb2tlciBoYW5kIGJlYXRzIHdoaWNoPyBSZXZpZXcgdGhlIGxpc3QgYmVsb3csIGZyb20gYmVzdCBoYW5kIHRvIHdvcnN0OlRoZSByb3lhbCBmbHVzaCBpcyB0aGUgYmVzdC4gSXQgY29udGFpbnMgYW4gYWNlLCBraW5nLCBxdWVlbiwgamFjayBhbmQgMTAuIFRoaXMgaXMgc2ltaWxhciB0byB0aGUgcm95YWwgZmx1c2gsIGV4Y2VwdCB0aGUgNSBhcmUgbm90IGFjZSwga2luZywgcXVlZW4sIGphY2sgYW5kIDEwLiBBbGwgbnVtYmVycyBtdXN0IGJlIGluIGEgcm93LCBob3dldmVyLiAoMiwzLDQsNSBhbmQgNiBvciA4LDksMTAsIGphY2ssIHF1ZWVuIGZvciBleGFtcGxlKS4gVGhpcyBtZWFucyBzaW1wbHkgZm91ciBjYXJkcyBvZiB0aGUgc2FtZSBraW5kLiBUaGUgZnVsbCBob3VzZSBpbiBmaXZlIGNhcmQgZHJhdyBwb2tlciBjb250YWlucyAzIGNhcmRzIG9mIG9uZSBraW5kIGFuZCAyIGNhcmRzIG9mIGFub3RoZXIga2luZC4gRm9yIGV4YW1wbGUsIDMgSmFja3MgYW5kIDIgNSdzLiBOZXh0IHVwIGlzIHRoZSBmbHVzaDogNSBjYXJkcyB3aXRoIHRoZSBzYW1lIHN1aXQuIChBZ2FpbiwgdGhlIHN1aXRzIGFyZSBkaWFtb25kcywgaGVhcnRzLCBzcGFkZXMgYW5kIGNsdWJzLilBcyB3ZSBjb250aW51ZSBvbiwgdGhlcmUgaXMgdGhlIHN0cmFpZ2h0LiBUaGUgc3RyYWlnaHQgY29udGFpbnMgNSBpbiBhIHJvdy4gSW4gdGhlIGV2ZW50IG9mIGEgdGllLCB0aGUgcGxheWVyIHdpdGggdGhlIGhpZ2hlc3QgcGFpciB3aW5zLgpOb3cgaXQgeW91ciB0dXJuIHRvIG5hbWUgYSBtZXRyaWMgdGhhdCB3b3VsZCBjYXVzZSBwZW9wbGUgdG8gbGVhdmUgdGhlIFVTIGFuZCBmbG9vZCBpbnRvIFNvdXRoIEFtZXJpY2EuIApJZiBJIHdlcmUgeW91IEkgd291bGQgbGVhcm4gdG8gYm93bCB3aXRoIG9uZSBoYW5kLiAKVGhhbmsgeW91IGZvciBydW5uaW5nIG1lIG9mZi4gSSBkaWRuJ3QgYmVsb25nIHRoZXJlLiAKQmVzaWRlcywgdGhlIGNoYXJhY3Rlcml6YXRpb24sIHRoZSB3aG9sZSBuYXJyYXRpdmUsIGFuZCBob3cgdGhleSBhcmUgYWxsIGV4ZWN1dGVkIHdhcyBtYWRlIGZyb20gYW5kIGZvciB0aGUgSmFwYW5lc2UgbGFuZ3VhZ2UsIGFuZCB0aHVzIG1heSBub3QgbWFrZSB0aGUgYmVzdCBzZW5zZSB3aGVuIHRyYW5zbGF0ZWQgdG8gYW5kIGNvbnZleWVkIHN0cmFpZ2h0IHVwIGluIEVuZ2xpc2ggb3Igb3RoZXIgbGFuZ3VhZ2UuIFRodXMsIGNoYW5nZXMgaGFkIHRvIGJlIG1hZGUgdG8gbWFrZSB0aGluZ3MgZml0IGFjY29yZGluZ2x5IGFuZCBpbiB0aGUgcHJvY2Vzcywgb24gdGhlIGZsaXAgc2lkZSwgdGhlIG9yaWdpbmFsIGVzc2VuY2Ugb2YgdGhlIGdhbWUgc3RvcnkgZW5kcyB1cCBiZWluZyBkaWx1dGVkIGlmIG5vdCBsb3N0LgpJIGJlbGlldmUgb2Z0ZW50aW1lcyBUb2xraWVuIHNlZW1zIHRvIGdpdmUgdGhlIHBvcHVsYXRpb24gb2YgYSByZWFsbSBvciByZWdpb24gbW9zdGx5IHRvIHNlcnZlIHRoZSBzdG9yeSBhbmQgY3JlYXRlIGNoYWxsZW5nZSB0byB0aGUgcHJvdGFnb25pc3RzLi4gCkhlIGlzIHNhaWQgdG8gYmUgaW5jYXJuYXRlZCBpbiB0aGUgc3RhcnQgb2Yga2FsaSB5dWdhIGFuZCB0aGlzIGZvcm0gb2YgVmlzaG51IGlzIHJlZ2FyZGVkIGFzIHRoZSBzYXZpb3VyIG9mIHBlb3BsZSBmcm9tIHRoZSBlZmZlY3RzIG9mIEthbGkoVGhlIGVmZmVjdGl2ZSBydWxlciBvZiB0aGlzIHl1Z2EpLiBBbHNvIGtub3duIGFzIFByaW5jZSBTaWRkaGFydGhhIGlzIHRoZSBmb3VuZGVyIG9mIEJ1ZGRoaXNtLiAKVHJ5IHRvIG1ha2UgeW91ciBzY3JlZW5zaG90cyBhcyBjbGVhciBhcyBwb3NzaWJsZS4gSWYgdGhlIGdhbWUgaGFzIHRoZSBvcHRpb24gdG8gZGlzYWJsZSB0aGUgSFVELCBkbyBpdC4gVHJ5IG5vdCB0byB0YWtlIHNjcmVlbnNob3RzIHRoYXQgbG9vayBtZXNzeS4KVHJpZWQgdGhlIG5ldyBYcyBNQVggYW5kIGl0J3MganVzdCB0b28gYmlnLi4gCiBNaWNoYWVsIFRvcnRvcmVsbG8uIApCdXQgaXQgbWFraW5nIG1lIGNyYXp5IHRvIGxpdmUgaW4gYSBjb3VudHJ5IHRoYXQgaXMgc28gZmFyIGJlaGluZCB0aGUgY3VydmUgb24gZ2x1dGVuIHNhZmV0eS4gRXZlcnkgdGltZSBJIGdvIHRvIHRoZSBzdXBlcm1hcmtldCBJIGZpbmQgbXlzZWxmIHF1ZXN0aW9uaW5nIHdoZXRoZXIgYSBwcm9kdWN0IG1heSBiZSBzYWZlLiBJIGhhdmUgYWxyZWFkeSBhY2NpZGVudGFsbHkgbXlzZWxmIHNldmVyYWwgdGltZXM7IHdoZW4gSSBnZXQgZ2x1dGVuaXplZCwgSSB0dXJuIGludG8gYSBkZXBsZXRlZCB6b21iaWUuCiJNeSBmYXRoZXIgaGVsZCB0aGF0IHdlIHNob3VsZCBuZXZlciB0YWxrIG9mIHRoaW5ncyB3ZSBjb3VsZG4ndCB1bmRlcnN0YW5kLCBidXQgaWYgd2UgZGlkbid0LCBkb2N0b3IsIHRoZSBzdWJqZWN0cyBmb3IgY29udmVyc2F0aW9uIHdvdWxkIGJlIG1pZ2h0eSBmZXcuIApUaGVyZSB3YXMgYmFudGVyLCBidXQgdGhhdCB3YXMgYWxsLi4gClRoZSBiZXN0IGNhc2Ugc2NlbmVyaW8gZm9yIFRTTSBpcyBhdXRvIGxvc2luZyBpbiBtaWQvbGF0ZSBnYW1lLiBUcnlpbmcgZGlmZmVyZW50IGNvbXBvc2l0aW9ucyB0byByYWlzZSB0aGUgY2hhbmNlIG9mIHdpbm5pbmcgYnkgMSUgZnJvbSAwJSBpcyBzaWduZmljYW50bHkgYmV0dGVyIHRoYW4ganVzdCBnaXZpbmcgdXAgYW5kIGRyYWZ0aW5nIGFuIGF1dG8gbG9zZSB0ZWFtLkFub3RoZXIgdGhpbmcgdGhhdCB5b3Ugc2VlbSB0byBoYXZlIHRyb3VibGUgdW5kZXJzdGFuZGluZyBpcyB0aGF0IHBpY2sgY29tcG9zaXRpb25zIGFyZSAibm90IHRyeWluZyB0byBvdXQgc21hcnQgdGhlIG90aGVyIHRlYW0uIiBQaWNrIGNvbXBvc2l0aW9ucyBhcmUgcHJlY2lzZWx5IGZvciB0ZWFtcyB3aXRoIHBvb3IgbWFjcm9zLiAKQW5kIHRoYXQsIHNoZSBzYXlzLCBpcyBsYXJnZWx5IGJlY2F1c2UgODAlIG9mIE1hc3NhZ2UgQWRkaWN0IG1lbWJlcnMgaGF2ZSBoZWFsdGggY2FyZSBiZW5lZml0cyB0aGF0IGNvdmVyIG1hc3NhZ2UgdGhlcmFweS4gVGhlIGRlbWFuZCBoYXMgYmVlbiBzdHJvbmcgZnJvbSBEYXkgMS4gCkhlIHdhcyBub3QgaW50ZXJlc3RlZCBpbiBoZWxwaW5nIGFueW9uZS4gCkkgbW92ZWQgdG8gR2VybWFueSAzIHllYXJzIGFnbyB3aXRoIG15IGh1c2JhbmQgYW5kIEkgZGlkIHRoZSB3aG9sZSBpbW1lcnNpb24gY2xhc3Nlcy4gSSB3b3VsZCBzdWdnZXN0IHlvdSBmaW5kIGEgdHV0b3IgaW5zdGVhZCBvZiBnb2luZyB0byBncm91cCBjbGFzc2VzLiBJIG5vdCBzYXlpbmcgdGhleSBhcmUgYmFkIGJ1dCBJIGJlbGlldmUgeW91IGxlYXJuIGZhc3RlciBieSB0YWxraW5nIG9mdGVuIGFuZCBieSBoYXZpbmcgc29tZW9uZSBjb3JyZWN0IHlvdSByaWdodCBhd2F5LiBUaGUgY2xhc3NlcyBJIGF0dGVuZGVkIChhbmQgSSBkaWQgb3ZlciA1IG1vbnRocyBvZiAyMGgvd2VlayBvZiBHZXJtYW4gY2xhc3NlcyEpIGhhZCBvdmVyIDIwIHBlb3BsZSBpbiBlYWNoIGdyb3VwLiBUaGVyZSBhcmUgc28gbWFueSBwZW9wbGUgdGhhdCB5b3UgY2FuIHNwZWFrIGVub3VnaCB3aXRoIHRoZSB0ZWFjaGVyIChhbnN3ZXJpbmcgcXVlc3Rpb25zIGFuZCBzbyBvbikgb3IgeW91IGFyZSBncm91cGVkIHdpdGggYW5vdGhlciBzdHVkZW50IGFuZCB5b3Ugc3BlYWsgdG9nZXRoZXIgKG1ha2UgbWlzdGFrZXMgYW5kIGFyZSBub3QgY29ycmVjdGVkKS4gSSBkb24gd2FudCB0byBkaXNjb3VyYWdlIHlvdSBidXQgdGhlIHN0cnVnZ2xlIGlzIHJlYWwhIEFmdGVyIDMgeWVhcnMgbXkgR2VybWFuIGlzIHN0aWxsIG5vdCBzdXBlciBnb29kLiBQZW9wbGUgdW5kZXJzdGFuZCBtZSBidXQgSSBkb24gYWx3YXlzIHVuZGVyc3RhbmQgcGVvcGxlLiBBbmQgSSBzdGlsbCBwcmFjdGljZSBhdCBsZWFzdCAzMCBtaW51dGVzIHBlciBkYXkgKHZvY2FiLCB3YXRjaGluZyBHZXJtYW4gc2hvd3MsIGV0YykuIERvbiBiZSB0b28gaGFyZCBvbiB5b3Vyc2VsZiBpZiBpdCBkaWZmaWN1bHQuIEZlZWwgZnJlZSB0byBQTSBtZS4gNyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpUaGUgRm91ciBTZWFzb25zIGluIExhcyBWZWdhcyBvZmZlcnMgYSAidGhpcmQgbmlnaHQgZnJlZSIgcGFja2FnZS4gR3Vlc3RzIHBheSBmb3IgdGhlIGZpcnN0IHR3byBuaWdodHMgYW5kIHRoZSB0aGlyZCBvbmUgaXMgZ3JhdGlzLiBBZ2FpbiwgaXQncyBhIGZyZWUgcm9vbSBldmVuIGlmIGl0J3Mgbm90IGZvciB0aGUgZ3Vlc3QncyBlbnRpcmUgc3RheS4KU29mdGJhdGNoICA2IHBvaW50cyAgc3VibWl0dGVkIDUgeWVhcnMgYWdvCkJlZGRpbmcgaXMgaW5jbHVkZWQgd2l0aCBmYXJlLiBJdCBjYXJyaWVzIDY0IHBhc3NlbmdlcnMgaW4gYnJvYWQgZ2F1Z2UuIChGdWxsIEFuc3dlcikuIApTYW1lLiBJIHRoaW5rIHNob2NrZWQgaXMgdGhlIGJlc3Qgd29yZCBJIGNhbiB0aGluayBvZiB0byBkZXNjcmliZSB0aGUgZmlyc3QgdGltZSBJIHNhdyBteSBwYXJ0bmVyIGluIGZ1bGwgbWFrZXVwLiBOb3QgaXMgYSBiYWQgd2F5IGJ1dCBpbiBhLCAiT2ggd293LiBUaGluZ3MgYXJlIGdldHRpbmcgcmVhbC4iIFNoZSBpcyBhbHNvIFdBWSBiZXR0ZXIgYXQgbWFrZXVwIHRoYW4gbWUuIEhvbmVzdGx5LCBJIGFtIG5vdCBhIHZlcnkgZ2lybHkgZ2lybCBhdCBhbGwgYW5kIEkgaGFyZGx5IGV2ZXIgd2VhciBtYWtldXAsIHNvIGl0IHdhcyBqdXN0IGZhc2NpbmF0aW5nIHRvIHNlZSBteSBtdGYgcGFydG5lciB0YWtlIHRvIGl0IGxpa2UgYSBkdWNrIHRvIHdhdGVyLgpQb2xpdGljcyBhbmQgdG94aWMgcGVvcGxlIGFyZSBtYW55IHRpbWVzIHVuYXZvaWRhYmxlIHVubGVzcyB5b3Ugc3RhcnQgeW91ciBvd24gdGhpbmcuIFN1cmUgeW91IGNhbiBlbmR1cmUgZm9yIHRoZSBleHRyYS9zdGFibGUgJCBhbmQgc2NoZWR1bGVkIHdvcmsgaG91cnMsIGJ1dCBpdCBmcmVha2luZyBzdWNrcyEhISBZb3UgYXJlIGFibGUgdG8gcGF5IHJlbnQgYW5kIGxpdmUgd2hpbGUgZG9pbmcgc29tZXRoaW5nIHlvdSBlbmpveS4gCk9rYXksIGlmIHlvdSBhcmUgc28gY3luaWNhbCB0aGF0IG5laXRoZXIgdGhlIFVTIG1pbGl0YXJ5IG5vciB0aGUgYmlnZ2VzdCBibG9ja2J1c3RlciBtb3ZpZSBFVkVSIHlvdSB0byBnbyBncmVlbiwgaG93IGFib3V0IFdhbCBNYXJ0IEVhcnRoIERheSBjYW1wYWlnbi4gCkkgaGF0ZSB0aGF0LiBXaGVuIG15IHNvbiB3YXMgYWJvdXQgMSBtb250aCB3ZSBoYWQgb25lIG9mIG15ICJnb29kIGZyaWVuZCdzIiBkYXVnaHRlcnMgZmlyc3QgYmlydGhkYXkgdG8gZ28gdG8uIApJIHJlYWxseSBoYXZlIGEgaGFyZCB0aW1lIGJlbGlldmluZyBoZSB3YXMgYSBjaGlsZCBtb2xlc3Rlci4gQWx0aG91Z2ggSSBsaWtlIGFsbW9zdCBhbGwgaGlzIG11c2ljLCBJIGRpZCBub3QgaWRvbGl6ZSBoaW0gbGlrZSBtb3N0LiBNeSBvcGluaW9uIGNvbWVzIGZyb20gdGhlIGZhY3QgdGhhdCB3aGVuIHlvdSBsb29rIGF0IGxpdGVyYWxseSBldmVyeSBvdGhlciBQZWRvLCBmcm9tIENhdGhvbGljIFByaWVzdCwgcmljaCBvbGQgbWVuIHNleCByaW5ncywgdG8geW91ciBuZWlnaGJvcmhvb2QgY3JlZXAsIEphY2tzb24gaXMgbm8gd2hlcmUgbmVhciB0aGUgc2FtZSBwcm9maWxlLiBZb3UgdGFsa2luZyBhYm91dCBwZW9wbGUgd2hvIGdldCBvZmYgb24gcG93ZXIuIFRoZXkgZm9yY2UgdGhlbXNlbHZlcyBvbiB0aGUgd2VhayBpbiBhIHdheSB0aGF0IHRydWx5IGdldHMgdGhlbSBvZmYuCk5vcGUhIFRoZSBHZXJtYW4gaW5jb21lIHRheCBmb2xsb3dzIGEgZ2VudGxlIGN1cnZlIHRoYXQgc3RvcHMgYXQgNDIlLiBJZiB5b3UgcGF5IDQyJSBpbmNvbWUgdGF4LCB5b3UgbWFraW5nIGJhbmsuIEhlYWx0aGNhcmUgaXMgYSBzZXBhcmF0ZSBjb3N0LCBhbmQgaXQgbGluZWFyOiA3LjMlIG9mIHlvdXIgaW5jb21lIHVwIHRvIDQwMCBwZXIgbW9udGguIFRoZXJlIGFyZSBzb21lIG90aGVyIGNvbnRyaWJ1dGlvbnMgKHBlbnNpb24sIHNvbGlkYXJpdHkgdGF4LCBjaHVyY2ggdGF4KSwgYW5kIGFsbCBvZiB0aG9zZSBzY2FsZSB3aXRoIHlvdXIgaW5jb21lLiBJbiB0aGUgZW5kLCByb3VnaGx5IDU1IDYwJSBvZiB5b3VyIHBheWNoZXF1ZSBpcyB0cnVseSB5b3VycyB0byBzcGVuZC4KWWV0IGV2ZW4gdGhpcyByZWxhdGlvbnNoaXAgZG9lc24ndCBzZWVtIGltcG9ydGFudCBlbm91Z2gsIGFsbCB0aGluZ3MgY29uc2lkZXJlZCwgdG8gd2FycmFudCBhbnkgZW1vdGlvbmFsIGludmVzdG1lbnQgb24gb3VyIGVuZC4gClRvdWNoaW5nIGFuZCBiZWluZyB0b3VjaGVkIGlzIGluc3RpbmN0dWFsLiAKT2YgY291cnNlIEkgdGhvdWdodCBhYm91dCBoaXMgY29tbWVudCwgd2h5IGVsc2Ugd291bGQgSSByZXBseSBhdCBhbGw/IEkganVzdCB3YW50ZWQgdG8gcmVhY2ggb3V0IGFuZCBsZXQgaGltIGtub3cgdGhhdCBhdCBsZWFzdCBvbmUgcGVyc29uIGNhcmVzIGF0IGFsbCBhYm91dCB0aGUgY29tbWVudCBoZSBtYWRlLiAKSSBoYXZlIGEgImJsYWNrIGZyaWVuZCIgYXQgd29yayBhbmQgd2UgYXJlbiBtdWNoIGRpZmZlcmVudC4gCldlIGVuZGVkIG91ciByZWxhdGlvbnNoaXAsIGFuZCB3aGlsZSBpdCB3YXMgdmVyeSBoYXJkLCBpdCB3YXMgb25seSBjcmVhdGluZyBtb3JlIGFueGlldHkgZm9yIG1lIGFuZCBoYXZpbmcgYW4gaW1wYWN0IG9uIG15IG1lbnRhbCBoZWFsdGguIEl0IGlzIHZlcnkgdmVyeSBoYXJkIHRvIGJlIHdpdGggc29tZW9uZSB3aG8gZG9lcyBub3QgdW5kZXJzdGFuZCBhbnhpZXR5LiAKSSB3YXMgcmVsZWFzZWQuIApJIGtub3cgdGhhdCBkb2Vzbid0IG5lY2Vzc2FyaWx5IGFsaWduIHdpdGggdGhlIHR3byB0aGluZ3MgeW91IHNwb2tlIG9mIGluIHlvdXIgcG9zdCwgYnV0IHRoYXQgaXMgb25lIG9mIHRoZSBwZXJzcGVjdGl2ZXMgdGhhdCBJIGhhdmUgb24gbGl2aW5nIG1pbmltYWxseS4uIApNYXliZSAidGhlIFN0b25lIEFnZSIgaXNuJ3QgdGhlIGJlc3Qgbmlja25hbWUgZm9yIHRoaXMgeWVhcidzIHBvc3QgdHJhZGUgZGVhZGxpbmUgR29sZGVuIEtuaWdodHMuIFRoYXQgMyBtaWxsaW9uIHllYXIgcGVyaW9kIG9mIGh1bWFuIGhpc3RvcnkgaXMgbW9zdCBub3RlZCBmb3IgYmVpbmcgdW5hZHZhbmNlZCAgIHRoZSBleGFjdCBvcHBvc2l0ZSBvZiB0aGUgR29sZGVuIEtuaWdodHMgc2luY2UgdGhleSBhY3F1aXJlZCBNYXJrIFN0b25lIGZyb20gdGhlIFNlbmF0b3JzIC4KSSBub3QgY29uZmlkZW50IHRoYXQgSnVuZSB3aWxsIGdldCB0byBzZWUgTmljayBhIHdob2xlIGxvdCBpbiBTZWFzb24gMywgc28gSSBub3Qgc3VyZSB0aGF0IHdlIHdpbGwgZWl0aGVyLiAKNy4gQW4gYWx0ZXJuYXRlIG1vdG9yIHN0cmF0ZWd5IHN1YnNlcXVlbnQgY2hhbmdlcyBpbiBjb250cm9sIG9mIHRoZSBkZWVwIE11bHRpZmlkdXMgY2FuIHJlbWFpbiBhZnRlciBhbiBpbml0aWFsIGJvdXQgb2YgTEJQIGRlc3BpdGUgdGhlIHJlc29sdXRpb24gb2YgU3ltcHRvbXMuClRoZSBtYWpvcml0eSBvZiBteSBmcmllbmRzIGFyZSBhbGwgcGFzc2VkIG91dCBhbmQgc29tZW9uZSdzIHNob2VzIGFyZSBvbiB0aGUgcm9vZiBvZiB0aGUgaG91c2UuLiAKVGhlc2UgYXJlIHR3byBvdGhlciBnYW1lcyB3aGVyZSBjaGFuY2VzIG9mIHdpbm5pbmcgYXJlIG11Y2ggaGlnaGVyIHRoYW4gd2l0aCBzbG90cy4gClNoZSBpcyBnZW5lcmFsbHkgZml0IChoYWQgYmVlbiBydW5uaW5nIDIgdGltZXMgYSB3ZWVrKSBhbmQgaXMgdGhpbi4gCkluIGEgc3RhdGVtZW50IHBvc3RlZCB0byBJbnN0YWdyYW0sIEhvbmcgU2hpbmcgQ2hpbmVzZSBSZXN0YXVyYW50IHNhaWQgdGhlIGVzdGFibGlzaG1lbnQgd2FzIHVuZGVyIGRpZmZlcmVudCBtYW5hZ2VtZW50IGF0IHRoZSB0aW1lIG9mIHRoZSBpbmNpZGVudC4gVGhlIHJlc3RhdXJhbnQgc2FpZCB0aGUgdHJpYnVuYWwgZGVjaXNpb24gaXMgdW5kZXIgYXBwZWFsLgpGZWRvciBIb2x6IChib3JuIDI1IEp1bHkgMTk5MykgaXMgYSBHZXJtYW4gcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciBmcm9tIFNhYXJicmNrZW4gd2hvIGZvY3VzZXMgb24gaGlnaCByb2xsZXIgdG91cm5hbWVudHMuIEhlIGlzIHdpZGVseSByZWdhcmRlZCBhcyBvbmUgb2YgdGhlIGJlc3Qgb25saW5lIGFuZCBsaXZlIHRvdXJuYW1lbnQgcG9rZXIgcGxheWVycyBpbiB0aGUgbW9kZXJuIGVyYS4gSGUgd2FzIHJhbmtlZCBieSBQb2NrZXRmaXZlcyBhcyBiZXN0IG9ubGluZSBNVFQgcGxheWVyIGluIDIwMTQgYW5kIDIwMTUuIEluIEp1bHkgMjAxNiwgaGUgd29uIGhpcyBmaXJzdCBXb3JsZCBTZXJpZXMgb2YgUG9rZXIgYnJhY2VsZXQgaW4gdGhlICQxMTEsMTExIEhpZ2ggUm9sbGVyIEZvciBPbmUgRHJvcCwgd2lubmluZyAkNCw5ODEsNzc1LgpZb3UgcGVvcGxlIGFyZSBjb21wbGV0ZWx5IG1pc3NpbmcgbXkgcG9pbnQuClRoYXQgc2FpZCBJIGVudGlyZWx5IGFncmVlIHdpdGggd2hhdCAvdS9TcXVhZ2VtIHNhaWQuIApUaGF0IHdoeSBJIHN1cHBvcnQgdGhlbSwgcmVhbGx5LiAKSSBhbHNvIG1ldCBhIHJlYWwgaG90IENoaW5lc2UgZ2lybC4gCk1vc3Qgb2YgdGhlIHRpbWUsIHNpbXBseSBzZWVpbmcgdGhlIGRhbmdlciB0aGF0IGxpZXMgYWhlYWQgY2FuIGdpdmUgeW91IGEgbGVnIHVwIG9uIG1vc3QgcGVvcGxlIHdobyBkcmlmdCB0aHJvdWdoIGxpZmUgb2JsaXZpb3VzIG9mIGFueSBkYW5nZXJzLiBUaGUga2V5IHRvIHNpdHVhdGlvbmFsIGF3YXJlbmVzcyBpcyBrZWVuIG9ic2VydmF0aW9uICAgb2JzZXJ2YXRpb24gb2Ygc2l0dWF0aW9ucywgdGhpbmdzIGFuZCBldmVuIHBlb3BsZS4gQW5kIGl0J3MgdGhlIHBlb3BsZSBzdWJzZXQgb2Ygc2l0dWF0aW9uYWwgYXdhcmVuZXNzIHRoYXQgY29tcHJpc2VzIHRoZSBzdHVkeSBvZiBib2R5IGxhbmd1YWdlICAgdGhlIHN0dWR5IG9mIHRob3NlIGFyb3VuZCB5b3UuLiAKQmUgc3VyZSB3aGVuIHlvdSBhcmUgZG9pbmcgdGhpcyB0aGF0IHN0dWRlbnRzIGhhdmUgb3Bwb3J0dW5pdGllcyB0byBhc2sgcXVlc3Rpb25zIGFib3V0IGVhY2ggc3RlcCB5b3UgYXJlIHBlcmZvcm1pbmcuIElmIHlvdSBub3JtYWxseSByZXF1aXJlIHN0dWRlbnRzIHRvIHJhaXNlIHRoZWlyIGhhbmRzIHRvIGFzayBxdWVzdGlvbnMsIG5vdyBtYXkgYmUgYSBnb29kIHRpbWUgdG8gbGV0IHRoYXQgcnVsZSBzbGlkZS4gVGhpcyB3aWxsIGFsbG93IHRoZW0gdG8gc3RvcCB5b3UgYXMgc29vbiBhcyB5b3UgaGF2ZSBhIHF1ZXN0aW9uLi4gCkF1am91cmQnaHVpLCBpbCBkZW1hbmRlICBsJ0V0YXQgZGUgcGF5ZXIhISEgRmFjaWxlIGRlIGZhaXJlIHRvdXRlcyBsZXMgcHJvbWVzc2VzIGR1IG1vbmRlIGxvcnNxdWUgbCdvbiB2YSBkZW1hbmRlciAgbCdFdGF0IGRlIHBheWVyIGxhIG5vdGUuIElscyBhdXJhaWVudCBkIHBydm9pciBkZXMgcHJpbWVzIGVuIGNhZGVhdXggZXQgZHUgY2hvY29sYXQuIFF1b2kgcXUnaWwgZW4gc29pdCwgbG9yc3F1J2lsIHkgYSB1bmUgY2F0YXN0cm9waGUgbmF0dXJlbGxlLCBjJ2VzdCBsJ0V0YXQgcXVpIHBheWUsIGxvcnNxdSdpbCB5IGEgZGVzIGRib3JkZW1lbnRzIGR1cyAgZGVzIG1hbmlmZXN0YXRpb25zIG91IGF1dHJlcyBwcm9ibG1lcyBzaW1pbGFpcmVzIGMnZXN0IGwnRXRhdCBxdWkgcGF5ZS4gCiJJIGxpa2VkIHRoYXQgaGUgd2FzIHRhbGwuIEhlIGhhZCBiZWF1dGlmdWwgYmx1ZSBleWVzLCAiIHNoZSB0b2xkIFZhbiBTYW50LiBTbywgSSBzYWlkLCBPSywgeW91IGtub3csIHRoaXMgaXMgYSBndXkgSSBjYW4gdGFsayB0byBmb3IgYSBsaXR0bGUgd2hpbGUuICIgU29sb21vbiB3YXMgaW4gdGhlIGRhcmsgYWJvdXQgRXJuaWUncyB3aWZlIGFuZCB5b3VuZyBzb24gaW4gQ2FsaWZvcm5pYS4gQW5kIFJvYnluIGhhZCBubyBpZGVhIGhlciBodXNiYW5kIHdhcyBvbiB0aGUgcHJvd2wgaW4gTGFzIFZlZ2FzLiAKU3VnZ2VzdCBhIHBhdHRlcm4sIHBsYXlpbmcgYSBjbGVhbiBtaW5kIGdhbWUvbGlrZSBhIHN0b3J5IHdpdGggeW91ciBiZXRzLCBjYWxscy9yYWlzZXMuIApCdXQgdGhlIHdvbWFuIHdobyBoYWQga2lja2VkIG9mZiBoaXMgY2FyZWVyIGF0IHRoZSBhZ2Ugb2YgMTggd2l0aCBoZXIgJDUwIGNvbnRyaWJ1dGlvbiB3YXNuJ3QgY2hlZXJpbmcgZnJvbSB0aGUgY3Jvd2QuCk1lbW9yaXppbmcgZWFjaCBvZiB0aGVzZSBpcyBmb3VuZGF0aW9uYWwgdG8gYmVpbmcgYWJsZSB0byBvdXQgcGxheSB5b3VyIG9wcG9uZW50LiBJZiB5b3UgZG9uIHVzZSBhbnkgaG90a2V5cyBhbmQgeW91ciBvcHBvbmVudCBpcywgdGhleSB3aWxsIGJlIGNyYW5raW5nIG91dCB1bml0cyBtdWNoIGZhc3RlciB0aGFuIHlvdSBhcmUgYW5kIHRoZXkgd2lsbCB1c2UgdGhhdCB0byBwcmVzcyB0aGVpciBhZHZhbnRhZ2UgZXZlcnkgdGltZS4uIApMYXllciBtb3JlIHdoaXBwZWQgY3JlYW0gdG8gY292ZXIgc3RyYXdiZXJyaWVzIGNvbXBsZXRlbHkuIFJlcGVhdCB3aXRoIHNlY29uZCBsYXllci4gClRoZXJlIGlzIGEgYmlnIGRpZmZlcmVuY2UgYmV0d2VlbiB0aGUgb25saW5lIGRlZ3JlZSBhbmQgZnVsbCB0aW1lIHRoZXNpcyBkZWdyZWUuLiAKSWYgeW91IHNlbmQgaGltIGEgbWVzc2FnZSBvbiBzb2NpYWwgbWVkaWEgb3IgYW4gZW1haWwsIGhlIHdpbGwgcmVzcG9uZCwgYW5kIGl0IHdpbGwgYmUgZGV0YWlsZWQgYW5kIHRob3VnaHRmdWwuIApJIGNhbiBnbyBvbi4uIApJdCBtaWdodCBiZSB3b3J0aHdoaWxlIGZvciBhbGwgdGhvc2Ugd2hvIHN5bXBhdGhpemUgd2l0aCB0aGUgb2NjdXBpZXJzIG9mIFp1Y2NvdHRpIFBhcmsgYW5kIG90aGVyIHBsYXphcyBhbmQgc3F1YXJlcyBhcm91bmQgdGhlIGNvdW50cnkgdG8gbGVhcm4gZnJvbSB0aGUgZXhhbXBsZSBvZiB0aGUgQ2hyaXN0bWFzIFNlYWxzIGNhbXBhaWduLiBXZSBoYXZlIG5vIHNob3J0YWdlIG9mIHVyZ2VudCBjYXVzZXMgdGhhdCB3aWxsIGJlbmVmaXQgZnJvbSB0aGUgZW5lcmd5IG9mIHRoZSBncmFzcyByb290cy4gClRoZSBSYW1ibGVycyBoYXZlbiBiZWVuIGFzIGRvbWluYW50IHRoaXMgeWVhciBpbiBjb25mZXJlbmNlIGFzIHRoZXkgd2VyZSBsYXN0IHllYXIsIGJ1dCB0aGVyZSBpcyBzdGlsbCBhIGxvYWQgb2YgZXhwZXJpZW5jZSBvbiB0aGlzIHllYXIgdGVhbS4gCiJJdCBhbHNvIGluY3JlYXNlcyBleHBvc3VyZSBhbmQgYnJpbmdzIGd1ZXN0cyB0aGF0IG1heSBoYXZlIG5ldmVyIHZpc2l0ZWQgU2FuZCBIb2xsb3csIiBTdHVkZWJha2VyIHNhaWQuClNoZSBpcyBkZXRlcm1pbmVkIHRvIGFnYWluIHRha2UgcGFydCBpbiBoZXIgZmF2b3JpdGUgYWN0aXZpdGllcywgb25jZSBzaGUgaXMgZml0dGVkIHdpdGggYXJ0aWZpY2lhbCBsZWdzLCBhbmQgdm93cyB0byByZXR1cm4gdG8gdGhlIHByb2Zlc3Npb24gc2hlIHdhcyBiZWdpbm5pbmcgd2hlbiBzdHJ1Y2sgZG93biBieSBpbGxuZXNzICAgYXMgYSBtYXNzYWdlIHRoZXJhcGlzdCBhdCB0aGUgQ2FueW9uIFJhbmNoIFNwYSBpbiB0aGUgVmVuZXRpYW4gaG90ZWwgY2FzaW5vLiBBIGZ1bmQgcmFpc2luZyBkaW5uZXIgd2lsbCBiZSBoZWxkIGZvciBoZXIgdGhpcyB3ZWVrLgpKdXN0IGZvbGRpbmcgcml2ZXIgYXMgMjVOTCB2aWxsYWlucyBhcmUgZnVja2luZyBuaXRzIGFuZCBuZXZlciBibHVmZiBzbyBhdCBiZXN0IGhlIG92ZXJwbGF5aW5nIGFuIDggYW5kIHdlIGNob3AsIHdheSBtb3JlIGxpa2VseSB3ZSBsb3NpbmcgdG8gYSBiaWdnZXIgc3RyYWlnaHQuLiAKUG9pbnQgMy4gSSBkb250IHRoaW5rIHRoZSB3YXJtaW5nIGZyb20gQ28yIGlzIGFueXdoZXJlIG5lYXIgd2hhdCBpcyBiZWluZyBjbGFpbWVkLiAKVGhlIHNjb3BlIG9mIHdoYXQgaXMgcHJvdmlkZWQgbXVzdCBiZSBsaW1pdGVkIGFuZCBzcGVjaWZpYy4gQW5kIG11c3QgYmUgZG9jdW1lbnRlZCAoSW4gVGV4YXMgYSAiU2NvdHQgRHVyZmVlIiBsZXR0ZXIgaXMgY29tcGxldGVkKUl0IHJlYWwgd2FzaHksIGFuZCBhZG1pdHRlZGx5IGJ1dCBkcnVnIHVzZSBvbiBwcm9wZXJ0eSBjb3VsZCBiZSBzZWUgYXMgYW4gZXhjZXB0aW9uIGFjY29yZGluZyB0byB0aGUgYWhhIGd1aWRsaW5lcyBJIGp1c3QgbGlua2VkLiBCdXQgSSBkb24gdGhpbmsgaXQgYXBwbGllcyBpbiB0aGUgdmlkZW8sIHBvdGVudGlhbCBjb250cmFiYW5kIHBvc3Nlc3Npb24gd2FzIHN1c3BlY3RlZCBidXQgbm90IG9ic2VydmVkLCBhbGxvd2luZyBQRCB0byBlbnRlciB0aGUgcm9vbSBhbmQgc2VhcmNoIHRoZSByb29tIHdpdGhvdXQgc2NvcGUgY2FuIGNvbXByaXNlIHBhdGllbnQgbWVkaWNhbCBpbmZvIHdlbGwgYmV5b25kIGFueSBsaW1pdGVkIHNjb3BlIHRoZSBsYXcgYWxsb3dzIGZvci4gCkVhcmxpZXIgdGhpcyB3ZWVrLCBSYXkgRHVyaGFtIGFkbWl0dGVkLCBpcyBlbWJhcnJhc3NpbmcuIApUaGUgc2ltcGxlc3Qgd2F5IHRvIGFubm91bmNlIGEgcmFpc2UgaXMgdG8gc2F5IHRoZSBjb21iaW5lZCB0b3RhbCBvZiB0aGUgb3JpZ2luYWwgYmV0IGFuZCB0aGUgcmFpc2UuIFN1cHBvc2UgYSBwbGF5ZXIgYmVzdCA1MDAgYW5kIHlvdSB3YW50IHRvIHJhaXNlIGFub3RoZXIgNTAwLCBqdXN0IHNheSAiSSB3YW50IHRvIHJhaXNlIHRvIDEwMDAuIiBCeSBjb25maWRlbnRseSBhbm5vdW5jaW5nIHlvdXIgcmFpc2UgeW91IHdpbGwgYmUgYWJsZSB0byBhdm9pZCBiYXNpYyBtaXN0YWtlcyBsaWtlIGNhbGxpbmcgd2hlbiB5b3UgbWVhbnQgdG8gcmFpc2UgYW5kIHN0cmluZyBiZXR0aW5nLiAKTG9vayB1cCBjaHVyY2hlcywgc2FsdmF0aW9uIGFybXkgbG9jYXRpb25zIGFuZCBmb29kIHNoZWxmIGluIHlvdXIgYXJlYS4gSSBsaXZlZCBpbiBzbWFsbCB0b3ducyBvZiA1MGsgcGVvcGxlIHRoYXQgaGFkIDIrIHBsYWNlcyB0aGF0IG9mZmVyZWQgbWVhbHMgZXZlcnkgZGF5IGFuZCBpbiBtb3N0IGNpdGllcyB5b3UgaGF2ZSBhIG1hc3NpdmUgc2VsZWN0aW9uIG9mIGxvY2F0aW9ucy4gWW91IGV2ZW4gYmUgYWJsZSB0byBwaWNrIGFuZCBjaG9vc2Ugd2hhdCB5b3Ugd2FudCBmb3IgYnJlYWtmYXN0LCBsdW5jaCBhbmQgZGlubmVyIGlmIHlvdSBwdXQgaW4gdGhlIGVmZm9ydCBhbmQgZ2V0IHRoZWlyIHdlZWtseSBzY2hlZHVsZXMuIApPdXIgYXBwIGlzIG92ZXIgMTUsMDAwKyBsaW5lcyBvZiBjb2RlIGF0IHRoZSBtb21lbnQuIFRoZSBmaXJzdCByb3VuZCBvZiAic2h1ZmZsaW5nIiBpcyB3aGVyZSBhbGwgcGxheWVycyBmaXJzdCBzaHVmZmxlIHRoZW4gZW5jcnlwdCB0aGUgZGVjayBvZiBjYXJkcy4gCkl0IGNhc3VhbC4gVGhlcmUgbGl0ZXJhbGx5IGlzIG5vIHJlYXNvbiB0byBwbGF5IGNhc3VhbCBmb3IgIndpbnMiIGFzaWRlIGZyb20gY29tcGxldGluZyBhICJ3aW4iIHF1ZXN0Li4gCk5vIGNsb3NlZCBzdXJ2ZXlzLiAKTm8gbmV3IGZ1bGx5IGF1dG9zIG9yIGJ1cnN0IGNhbm5vdCBiZSBib3VnaHQgYW55d2hlcmUgaW4gdGhlIHVzIHVubGVzcyB5b3UncmUgbGF3IGVuZm9yY2VtZW50IG9yIGhhdmUgYSBjbGFzcyA3IGZpcmVhcm1zIGxpY2Vuc2Ugd2hpY2ggaXMgdG8gbWFrZSB0aGVtIHRvIHNlbGwgdG8gbWlsaXRhcnkgb3IgbGF3IGVuZm9yY2VtZW50LiBUaGUgZmVkZXJhbCBsYXcgaXMgcHJlIDE5ODYgd2l0aCB0aGUgNm1vbnRoKyB3YWl0LCBmaW5nZXJwcmludHMgYW5kICQyMDAgdGF4IHN0YW1wLiBTb21lIHN0YXRlcyBnbyBmdXJ0aGVyIGFuZCBqdXN0IG91dHJpZ2h0IGJhbiB0aGUgcHJlIDE5ODYgb25lcy4gClJlc3RhdXJhbnQgcHJpY2VzIHdpbGwgcmlzZSBiZXR3ZWVuIHR3byBhbmQgZm91ciBwZXIgY2VudCwgYWNjb3JkaW5nIHRvIHRoZSByZXBvcnQsIG1haW5seSBiZWNhdXNlIG9wZXJhdG9ycycgbGFib3VyIGNvc3RzIGluY3JlYXNlZCBhcyBzZXZlcmFsIHByb3ZpbmNlcyBhbmQgdGVycml0b3JpZXMgYm9vc3RlZCB0aGVpciBtYW5kYXRlZCBtaW5pbXVtIGhvdXJseSB3YWdlIHJlY2VudGx5LgpTbyBmb3IgdGhlIGZ1Y2tlZCBwYXJ0IG9mIHRoZSBhbnN3ZXIuCkxpa2UgZXZlcnlvbmUgZWxzZSBpbiB0aGUgZ2FyYWdlLCBHYW5hc3NpIFJhY2luZyBoYXMgYmVlbiB0cnlpbmcgdG8gYWRqdXN0IHRvIE5BU0NBUidzIG5ldyBydWxlcyBwYWNrYWdlLiAKTmljaHQgbnVyIGRpZSBleHRyZW1lIEhpdHplIGlzdCB2b3JlcnN0IG1hbCB2b3JiZWksIGxlaWRlciBhdWNoIG1laW5lIEdsY2tzc3RyaG5lICBXaWUgaWNoIGVzIGphIHNjaG9uIGltIHZvcmxldHp0ZW4gUG9zdCBhbmdla25kaWd0IGhhYmUsIGlzdCBlcyBqZXR6dCBhdWNoIGVpbmdldHJvZmZlbi4gSmVkZXIgU3VwZXJsYXVmIGhhdCBsZWlkZXIgYXVjaCBlaW5tYWwgZWluIEVuZGUhIFNlaXQgendlaSBUYWdlbiBrYW5uIGljaCBrZWluZSBIYW5kIG1laHIgZ2V3aW5uZW4sIG1laW5lIERyYXdzIGtvbW1lbiBuaWNodCBhbiwgbWVpbmUgUG9ja2V0IFBhaXJzIHdlcmRlbiBhbGxlc2FtdCBnZXNjaGxhZ2VuIHVuZCBkaWUgR2VnbmVyIHRyZWZmZW4gbmFjaCBiZWxpZWJlbi4uIApTaW5jZSB0aGVzZSBhcmUgaW5kZXBlbmRlbnQsIHRob3VnaCBzZXF1ZW50aWFsbHkgcmVsYXRlZCBldmVudHMsIHRvIGNvbXB1dGUgdGhlIHByb2JhYmlsaXR5IHRoYXQgYm90aCBldmVudHMgb2NjdXIsIHlvdSBzaW1wbHkgbXVsdGlwbHkgdGhlIHR3byBwcm9iYWJpbGl0aWVzIHRvZ2V0aGVyLiAyIGluIDUyIHRpbWVzIDEgaW4gNTEgaXMgMiBpbiAyNjUyLCBvciBhYm91dCAwLjAwMDc1NDEuIChGdWxsIEFuc3dlcikuIApPbmxpbmUgUG9rZXIgU3RyYXRlZ3kgIDI6IFdoaWxlIG1lbW9yaXppbmcgYW5kIGdldHRpbmcgdXNlZCB0byBwbGF5aW5nIG9ubGluZSBwb2tlciB1c2luZyB0aGVpciBzb2Z0d2FyZSwgeW91IGNhbiBnZXQgdXNlZCB0byB0aGUgZW50aXJlIGludGVyZmFjZSwgdGhlIGZ1bmN0aW9ucyBhbmQgdGhlIGJ1dHRvbnMuCklmIHRoZXJtb251Y2xlYXIgcmVhY3Rpb25zIGFyZSB0byBiZSBpbml0aWF0ZWQgb24gZWFydGgsIG9uZSBtdXN0IHRha2UgaW50byBjb25zaWRlcmF0aW9uIHRoYXQgYW55IG51Y2xlYXIgZW5lcmd5IHJlbGVhc2VkIHdpbGwgYmUgY2FycmllZCBhd2F5IHJhcGlkbHkgYnkgcmFkaWF0aW9uLCBzbyB0aGF0IGl0IHdpbGwgbm90IGJlIHBvc3NpYmxlIHRvIGtlZXAgdGhlIHRlbXBlcmF0dXJlIGhpZ2ggZm9yIGEgbG9uZyB0aW1lLiBUaGVyZWZvcmUsIGlmIHRoZSByZWFjdGlvbiBpcyB0byBwcm9jZWVkIGF0IGFsbCwgaXQgbXVzdCBwcm9jZWVkIHZlcnkgcXVpY2tseS4gUmVhY3Rpb24gdGltZXMgb2YgYmlsbGlvbnMgb2YgeWVhcnMsIGxpa2UgdGhvc2UgaW4gdGhlIHN1biwgd291bGQgbmV2ZXIgbGVhZCB0byBhbiBhcHByZWNpYWJsZSBlbmVyZ3kgcmVsZWFzZTsgd2UgbXVzdCB0aGluayByYXRoZXIgaW4gdGVybXMgb2YgbWlsbGlvbnRocyBvZiBhIHNlY29uZC4gClRoZSBJbmRpYW5hcG9saXMgYmFzZWQgaW5kZXBlbmRlbnQgY3JlYXRpdmUgc2hvcCBrZWVwcyB0aGUgbWluZHMgYW5kIGJvZGllcyBvZiBpdHMgc3RhZmYgaGVhbHRoeSB3aXRoIHNob3dlciBhbmQgbG9ja2VyIGZhY2lsaXRpZXMsIGJpa2UgcmFja3MsIHlvZ2EgY2xhc3NlcyBhbmQgZXZlbiBhICJxdWlldCByb29tIiBmb3IgbWVkaXRhdGlvbiwgcHJheWVyIG9yIGp1c3QgYSBtZW50YWwgYnJlYWsuIEF0IGEgdGltZSB3aGVuIHdvbWVuIGFyZSB1bmRlcnJlcHJlc2VudGVkIGluIHRoZSBpbmR1c3RyeSwgaGFsZiBvZiBZb3VuZyBMYXJhbW9yZSdzIDUwIHN0YWZmZXJzIGFyZSBmZW1hbGUuIFRvIGtlZXAgZW1wbG95ZWVzIGluc3BpcmVkLCB0aGUgc2hvcCBvZmZlcnMgZXZlcnkgc3RhZmZlciAkMTAwIHBlciB5ZWFyIGZvciBhbiBhY3Rpdml0eSBvciBwdXJjaGFzZSB0aGF0IHNwYXJrcyBoaXMgb3IgaGVyIGNyZWF0aXZpdHkuIApEYXMgYmVsaWVidGUsIGF1ZiBkZW4gSXNsZSBvZiBNYW4gbGl6ZW56aWVydGUgIGhhdCBlcnN0IGt1cnogenV2b3IgZGllIHBoYW50YXN0aXNjaGUgTmV1aWdrZWl0IGZyZXVkaWcgdmVya25kZXQsIGRhcyAgUGhub21lbiBpbiBkYXMgZXJsZXNlbmUgVGVhbSBhdWZnZW5vbW1lbiB6dSBoYWJlbiwgdW0gZ2xlaWNoIGltIEFuc2NobHVzcyBkYXJhbiBkaWVzZSBOZXVpZ2tlaXQgZHVyY2ggZGllIEhpbnp1Zmd1bmcgZGVzIGVyZm9sZ3JlaWNoc3RlbiBzbG93YWtpc2NoZW4gcyBiZXJoYXVwdCBpbiBkaWUgZ2VzcG9uc2VydGUgTWFubnNjaGFmdCBub2NobWFscyB6dSB0b3BwZW4uCkFuZCBpdCBwb3NzaWJsZSB0byB1bmxlYXJuIHRoZSBkYW1hZ2luZywgbm9uIGNvbnN0cnVjdGl2ZSBjb3BpbmcgbWVjaGFuaXNtcyBhbmQgcGF0dGVybnMgdGhhdCB0cmF1bWEgaW5zdGlsbHMuIApUaGUgd2F5IHRoZSBwb2tlciBydW4gd29ya3MgaXMgdGhlIHBhcnRpY2lwYW50cyB3aWxsIGdldCBhIGNhcmQgd2hlbiB0aGV5IHJlZ2lzdGVyIGFuZCB0aGVuIHRyYXZlbCB0aHJvdWdob3V0IHRoZSBkYXkgdG8gZWFjaCBvZiB0aGUgZWlnaHQgc3BvbnNvcnMgd2hlcmUgdGhleSB3aWxsIGdldCB0aGVpciBjYXJkIHN0YW1wZWQuIApQYXJ0IElJOiBTY2hvbGFzdGljIEFwdGl0dWRlIFRlc3QgKFNBVCkoYXMgZ2l2ZW4gYWJvdmUpIChGdWxsIEFuc3dlcikKTWF5YmUgSSdsbCBwb3N0IGFib3V0IGhvdyBoZSBnb3Qgb3V0IG9mIHRoZSBGT0cgbG9sLgpUaGUgMjkgeWVhciBvbGQgZnJvbSBXaW50ZXIgSGF2ZW4sIEZsYS4sIGNlbGVicmF0ZWQgdGhlIGJpcnRoIG9mIGhpcyBmaXJzdCBjaGlsZCAgIE1hdmVyaWNrIEplcm9tZSBLZXZpbiBDYXBlcnMgICBpbiBKYW51YXJ5IGhlcmUgaW4gTG9uZG9uLiBUaHJlZSBkYXlzIGxhdGVyIGhlIHNob3QgNSBvZiA2IGZyb20gdGhlIGZsb29yIHRvIGhlbHAgdGhlIEJvbHRzIHRvIGEgYmlnIHdpbiBvdmVyIHRoZSBLIFcgVGl0YW5zLi4gCiJNaXNzIEdyYW5nZXIsIEphY2tzb24gYW5kIENoYW5kbGVyIGNhbiBlYWNoIGJlIHNlZW4gaG9sZGluZyBidW5kbGVzIG9mIG5vdGVzLiBBdCBvbmUgcG9pbnQgQ2hhbmRsZXIgaXMgc3ByYXlpbmcgbm90ZXMgYWxsIG92ZXIgdGhlIGZsb29yIHdoaWxlIEphY2tzb24gaXMgc3R1ZmZpbmcgbm90ZXMgaW50byBoaXMgdW5kZXJwYW50cy4KTG90dGVyeSwgd2hpY2ggaW5jbHVkZXMgZ2FtZXMgZXhjbHVzaXZlbHkgaW4gdGhlIFN0YXRlIG9mIFRleGFzIGFuZCBwYXJ0aWNpcGF0aW9uIGluIG11bHRpIHN0YXRlIGxvdHRlcmllcwpIb3cgSm9yZGFuIFBldGVyc29uIGJlY2FtZSB0aGUgZmFjZSBvZiBhbiBNQkEgcHJvZ3JhbSBpbiBUZXhhcwpIZSByZWFsbHkgaXMgdGhlIGJpZywgc3R1cGlkIGZ1Y2sgdXAgd2UgYWxsIHRob3VnaHQuIE1heWJlIGhlIGlzIGFjdHVhbGx5IHN1ZmZlcmluZyBmcm9tIGRlbWVudGlhIG9yIEFsemhlaW1lciBvciBzb21ldGhpbmcsIGJ1dCBpdCBub3QgaGFtcGVyaW5nIGhpbSB0byB0aGUgZXh0ZW50IHRoYXQgaGUgdG90YWxseSB1bmF3YXJlLiBIZSBqdXN0IGhhcyBob3JyaWJsZSBqdWRnZW1lbnQgYW5kIHRlbXBlcmFtZW50IGFuZCBoZSBtYWtlcyB0aGUgd29yc3QgcG9zc2libGUgZGVjaXNpb25zIGF0IGV2ZXJ5IGdpdmVuIG9wcG9ydHVuaXR5LgpXaGF0IG1ha2VzIHRoaXMgc2V0IHNvIGRpZmZlcmVudCBmcm9tIHRoZSBvbmVzIGFyb3VuZCBpdD8gSW4gdGhlIGZpcnN0IHBsYWNlLCB5b3Ugd2lsbCBmaW5kIHRoYXQgdGhlIGNoaXBzIHN0YW5kIG91dCBmcm9tIHlvdXIgbm9ybWFsIHJ1biBvZiBwb2tlciBjaGlwcy4gClRoYXQgY2FwaXRhbCBjb3VsZCBnZW5lcmF0ZSAkMjksNTAwIHBlciB5ZWFyIHByZSB0YXggaW5jb21lIGZvciB0aGUgbmV4dCA0MCB5ZWFycy4gS2F0ZSBoYXMgYW4gUlJTUCB3aXRoIGEgcHJlc2VudCB2YWx1ZSBvZiAkNzYsOTI1LiAKRW5kZWQgdXAgZmluaXNoaW5nIHRoZSBkYXkgc3RvcHBpbmcgYnkgbXkgc2NpZW5jZSB0ZWFjaGVyIHJvb20gc2luY2Ugc2luY2UgSSBrbmV3IGhlIGhhdmUgdHdlZXplcnMgdG8gcmVtb3ZlIHRoZSBncmFwaGl0ZSBhbmQgaXQgd2FzIG9uIHRoZSB3YXkgdG8gdGhlIG51cnNlIG9mZmljZSBhbnl3YXlzLiAKSGUgZGlkbid0IHdhbnQgbWUgdG8gYmUgbG9ib3RvbWl6ZWQgdG8gYmVjb21lIGhpcyB3aWZlLiAKR3JhZGUgSSBMaXN0ZWQgYnVpbGRpbmdzIGluY2x1ZGUgbmF0aW9uYWxseSBpbXBvcnRhbnQgc2l0ZXMgc3VjaCBhcyB0aGUgUGFsYWNlIG9mIFdlc3RtaW5zdGVyIGFuZCB0aGUgSG91c2VzIG9mIFBhcmxpYW1lbnQuIE90aGVyIGV4YW1wbGVzIGluY2x1ZGUgS2lya3N0YWxsIEFiYmV5LCB3aGljaCBkYXRlcyBiYWNrIHRvIHRoZSAxMnRoIENlbnR1cnkgYW5kIHRoZSBXZXN0Z2F0ZSBtZWRpdmFsIGdhdGVob3VzZSBpbiBXaW5jaGVzdGVyLiBCaXJrZW5oZWFkIFBhcmsgb24gdGhlIFdpcnJhbCBpcyBhIEdyYWRlIEkgbGlzdGVkIGxhbmRzY2FwZSB0aGFua3MgdG8gaXRzIHN0YXR1cyBhcyB0aGUgZmlyc3QgcHVibGljIHBhcmsgaW4gdGhlIHdvcmxkLi4gCk9uIGEgYXVzc2kgaW1wcm92aXMgc2Vsb24gbGUgdGVtcHMgZGlzcG9uaWJsZSwgbGEgZmFpbSBldCBjZSBxdWkgdGFpdCBvdXZlcnQgZXQgbmUgbmNlc3NpdGFpdCBwYXMgdW5lIGhldXJlIGRlIHF1ZXVlLiBFbiBlZmZldCwgbGEgcHJpb2RlIGRlIGZpbiBkJ2FubmUgZXN0IHVuZSBwb3F1ZSBmZXN0aXZlIGV0IHZhY2FuY2lyZSBlc3NlbnRpZWxsZSBkYW5zIGNlIHBheXMgOiB0b3VzIGxlcyBtdXNlcywgdW4gZ3JhbmQgbm9tYnJlIGRlIHJlc3RhdXJhbnRzLCBiZWF1Y291cCBkZSBtYWdhc2lucyBzb250IGZlcm1zIHBsdXNpZXVycyBqb3VycyBlbnRyZSBsZSAyOSAzMCBkY2VtYnJlIGV0IGxlIDMgNCBqYW52aWVyLiBDZWxhIG5lIG5vdXMgYSBwYXMgdnJhaW1lbnQgZ25zIGV0IG9uIG5lIHMnZXN0IGphbWFpcyBhZmZhbXMgISBPbiBhIG1tZSB0b3Vqb3VycyBiaWVuIG1hbmcgZ3JjZSBhdSBoYXNhcmQsICBub3RyZSBpbnR1aXRpb24gb3UgIGRlcyBjb25zZWlscyBhdmlzcy4uIApJIHNheSB0byB0aGUgd29tYW4sICJTb3JyeSBJIGNhbiBoZWxwIHlvdSwgSSBoYXZlIHRvIGdvIG5vdyIgYW5kIHdhbGsgdG93YXJkcyB0aGUgZXhpdC4KUGFzIGQgZW4gcGxhc3RpcXVlLgpHZW9yZ2UgTWF0eWpld2ljeiwgUGhEIGlzIEdsb2JhbCBTdHJhdGVnaXN0IG9mIEdBUCBFbnRlcnByaXNlcywgTHRkLiBIZSB3YXMgZm9ybWVybHkgUHJlc2lkZW50L0dlbmVyYWwgTWFuYWdlciBvZiBhIGdsb2JhbCBkaWdpdGFsIGN1cnJlbmN5IGNvbXBhbnkgd2l0aCBjdXN0b21lcnMgaW4gMTkwIGNvdW50cmllcyBhbmQgQ2hpZWYgRSBDb21tZXJjZSBPZmZpY2VyIGZvciBhIGdsb2JhbCBnaWZ0d2FyZSBjb21wYW55LiAKUmVnaXN0ZXJlZCBpdCBhcyBhIE5hdHVyYWwgSGVhbHRoIFByb2R1Y3QgKE5IUCksIGhhZCBpdCBjZXJ0aWZpZWQgb3JnYW5pYyBhbmQgYnJhbmRlZCBpdCBCaW9mbGF2aWEgYmVjYXVzZSBpdCBmdWxsIG9mIGJpb2ZsYXZvbm9pZHMgYW5kIHdlIHRob3VnaHQgaXQgd2FzIGZ1biB0aGF0IG15IG1vdGhlciBuYW1lIGlzIEZsYXZpYSwgTXIuIApSRUFEIE1PUkU6IEhvdyBBcm5pZSBiZWNhbWUgbWF0ZXMgd2l0aCBJcHN3aWNoIGxhZCBtYWRlCkFnYWluLCBJIG5vdCBzYXlpbmcgSSBoYXZlIHNvbWUgYW5zd2VyIHRvIHRoaXMgb3IgdGhhdCBpdCBpcyBhIGJpZyBlbm91Z2ggZGVhbCB0aGF0IGl0IGltcGFjdHMgdGhlIGZyZXF1ZW5jeSB3aXRoIHdoaWNoIEkgcGxheS4gCkFsbCB0aGUgKG5lZ2F0aXZlKSBzdHVmZiB0aGF0IHlvdSBjYW4gaGVhciwgaXQgZG9lc24ndCBtYXR0ZXIgaG93IHN0cm9uZyB3aWxsZWQgeW91IGFyZSBpbiB5b3VyIGhlYWQsIGl0J3MgZ29pbmcgdG8gYWZmZWN0IHlvdSBvbmUgd2F5IG9yIGFub3RoZXIuIAo0LiBTbyB3aGF0IGlzIGxlZ2FsPyBJZiB5b3UgYXJlIG9mIGxlZ2FsIGFnZSwgeW91IGNhbiBwb3NzZXNzLCBpbiBwdWJsaWMsIDMwIGdyYW1zIG9mIGxlZ2FsIGNhbm5hYmlzLCBkcmllZCBvciBpdHMgZXF1aXZhbGVudCBpbiBub24gZHJpZWQgZm9ybS4gSXQgd2lsbCBiZSBsZWdhbCB0byBzaGFyZSB0aGF0IGFtb3VudCB3aXRoIG90aGVyIGFkdWx0cy4gSXQgd2lsbCBiZSBsZWdhbCB0byBidXkgZnJlc2ggY2FubmFiaXMgYW5kIGNhbm5hYmlzIG9pbCBmcm9tIGEgcHJvdmluY2lhbGx5IGxpY2Vuc2VkIHJldGFpbGVyLCBvciBvbmxpbmUgZnJvbSBhIGZlZGVyYWxseSBsaWNlbnNlZCBwcm9kdWNlci4gSXQgd2lsbCBhbHNvIGJlIGxlZ2FsIHRvIGdyb3cgZm91ciBjYW5uYWJpcyBwbGFudHMgcGVyIHJlc2lkZW5jZSBmb3IgcGVyc29uYWwgdXNlIGZyb20gYSBsaWNlbnNlZCBzZWVkIG9yIHNlZWRsaW5nICAgZXhjZXB0IGluIFF1ZWJlYyBhbmQgTWFuaXRvYmEsIHdoaWNoIGhhdmUgYmFubmVkIGhvbWUgZ3Jvd24gd2VlZC4gWW91IGNhbiBhbHNvIG1ha2UgZm9vZCBvciBkcmlua3MgdXNpbmcgY2FubmFiaXMsIGluIHlvdXIgb3duIGhvbWUgYXMgbG9uZyBhcyB5b3UgZG9uJ3QgdXNlIG9yZ2FuaWMgc29sdmVudHMgdG8gY3JlYXRlIGNvbmNlbnRyYXRlZCBwcm9kdWN0cy4gQnV0IGl0IHdvbid0IGJlIGxlZ2FsIGJ1eSBlZGlibGVzIG9yIGNvbmNlbnRyYXRlcyBmb3IgYWJvdXQgb25lIG1vcmUgeWVhci4KSW4gYSBjb21wZXRpdGlvbiwgdGhlcmUgYXJlIHRpbWUgYW5kIHNwYWNlIGNvbnN0cmFpbnRzIG9uIHRoZSBtYXRjaCwgd2hpY2ggbmVjZXNzaXRhdGUgYSBtb3JlIGFnZ3Jlc3NpdmUgYXBwcm9hY2ggaWYgb25lIGlzIHRvIHdpbiBpbiB0aGUgdGltZSBhbGxvd2VkLiAKSSd2ZSBiZWVuIGEgcm9hZGllIGZvciB2YXJpb3VzIGJhbmRzICAgYnV0IG5vdyBlbmpveSBqdXN0IHBsYXlpbmcgYSBsaXR0bGUgbXVzaWMgZm9yIG15c2VsZiwgeW9kZWxsaW5nIGFsb25nIHRvIG15IHJlY29yZHMsIG9yIGhlbHBpbmcgb3V0IGFueSBiYW5kIHdobyBuZWVkcyBhbiBlYWdlciBwYXcgICB3aGljaCBpcyBmYXNjaW5hdGluZyBhbmQgdmVyeSB2YXJpZWQhSW4gbXkgc3BhcmUgdGltZSBJIHRyeSBhbmQga2VlcCB1cCB0byBkYXRlIHJ1bm5pbmcgYSBmYW5zaXRlIGZvciBVSyBiYXNzaXN0IEpvaG4gJ1JoaW5vJyBFZHdhcmRzLCBjdXJyZW50bHkgb2YgU3RhdHVzIFF1bywgZm9ybWVybHkgb2YgSnVkaWUgVHp1a2UsIERleHkncyBNaWRuaWdodCBSdW5uZXJzIGFuZCBtb3N0IG90aGVyIHBlb3BsZSAgIGNoZWNrIGl0IG91dCBhdCBUaGUgUmhpbm9TaXRlLiBJZiB5b3UgZ28gdGhlcmUgZG9uJ3QgZm9yZ2V0IHRvIHNpZ24gdGhlIGd1ZXN0Ym9vayB0aG91Z2ggSSBrbm93IEknbSBhIGJpdCBiZWhpbmQsIGJ1dCB0aGF0J3MgZG93biB0byBteSBsYXN0IHllYXIgb2YgVW5pIGFuZCBtb3ZpbmcgaG91c2UgYSBiaWxsaW9uIHRpbWVzLkkgYWxzbyBydW4gdGhlIE9mZmljaWFsIEpvaG5ueSBXYXJtYW4gc2l0ZSBhbmQgdGhlIHNpdGUgZm9yIFVLIFNlc3Npb24gU3VwZXJncm91cCBUaGUgTW9kcy5BbW9uZ3N0IG15IG1hbnkgb3RoZXIgbG92ZXMgYXJlIGNhdHMgLCBjYXJzLCBhbnl0aGluZyB3aGljaCBpcyBzdGVhbSBwb3dlcmVkLCByZWNvcmQgY29sbGVjdGluZywgY29va2VyeSAsIG11c2ljICwgd2ViIGRlc2lnbiBhbmQgY3JhZnRzIC5JIGhhdmUgYSBnaW5nZXIgdGFiYnkgYW5kIHdoaXRlIGNhdCBbY2FsbGVkIEFubmllXS4gClVwb24gZmluZGluZyBvdXQgdGhhdCB0aGUgYW5zd2VyIGlzIHllcyB2aXJ0dWFsbHkgZXZlcnl3aGVyZSwgSSB3b3VsZCBoYXZlIGdvbmUgdG8gbXkgZGFkLCBhbmQgYXNrZWQgaGltIHRvIGNhbGwgYSBsYXd5ZXIuIApIaWx0b24gd3JlIG5pY2h0IGRpZSBlcnN0ZSBpbnRlcm5hdGlvbmFsZSBIb3RlbGtldHRlLCBkaWUgdmlhIEludGVycm9zIG5hY2ggU290c2NoaSBrb21tdC4gClRoZSBjb21iaW5hdGlvbiBvZiB0aGlzLCBhbmQgdGhlIG11bHRpcGxpY2F0aW9uIGVmZmVjdCBvbiB0aGUgZ2FtZSB0cmVlLCBtYWtlIGl0IG5vdCB0aGF0IGFwcGVhbGluZyBmb3IgcGVvcGxlIG5vdCBwbGF5aW5nIGZvciBtb25leSB0byBnZXQgaW50byBib3R0aW5nLiBUaGlzIHdhcyBieSBmYXIgdGhlIGJpZ2dlc3QgZG93bnN3aW5nIEkgaGFkIGV2ZXIgYmVlbiBvbi4gVGhlIHNhZCBwYXJ0IGlzIEkgd2FzIHByb2JhYmx5IG5lYXJseSBicmVha2V2ZW4gKG1heWJlIHVwPykgb24gbXkgb3duIGFjdGlvbiwgSSBqdXN0IGdvdCBhYnNvbHV0ZWx5IHdyZWNrZWQgdGFraW5nIGFjdGlvbiBpbiBvdGhlciBwbGF5ZXJzLi4gCkZpbmFsbHksIHJlc2VhcmNoIGludG8gdGhlIGNoYXJhY3RlcmlzdGljcyBvZiBjb21tdW5pY2F0aW9uIGNoYW5uZWxzICAgVFYsIHJhZGlvLCBuZXdzcGFwZXJzLCBtYWdhemluZXMgYW5kIGJpbGxib2FyZHMsIGFtb25nIG90aGVycyAgIHN1Z2dlc3RlZCB0aGF0LCBmb3IgZXhhbXBsZSwgcmFkaW8gd2FzIGEgcG9vciBjaG9pY2UgZm9yIGFuIGFkdmVydGlzZXIgc2Vla2luZyB0byBjb252ZXkgYSBtZXNzYWdlIHRoYXQgaXMgZGlmZmljdWx0IHRvIGNvbXByZWhlbmQuCkdldCBwcm9hY3RpdmUgYWJvdXQgdGhpcyBub3cuIAo5aDMwIFJlcHJlciBldCBzaWduYWxlciBjZSB0eXBlIGRlIG1hbHRyYWl0YW5jZQpHYXkgY3VsdHVyZSBpcyBvbmx5IGFjY2VwdGVkIGluIGEgdmVyeSBzbWFsbCBwYXJ0IG9mIGV2ZW4gdGhpcyB2ZXJ5IGxpYmVyYWwgY2l0eS4gVGhlcmUgYXJlIGh1Z2UgY29tbXVuaXRpZXMgd2hvIHByZWZlciB0aGF0ICJ0aGUgZ2F5cyIgc3RheSBhd2F5LiBJdCBzdWNrcy4gQW5kIG91dHNpZGUgb2YgbGliZXJhbCBjb2FzdGFsIGNvbW11bml0aWVzLCBtYXNzaXZlIGFyZWFzIG9mIHRoZSBzb3V0aCBhcmUgdmVoZW1lbnRseSBhbmQgc29tZXRpbWVzIHZpb2xlbnRseSBhZ2FpbnN0IGhvbW9zZXh1YWxpdHkuVGhlcmUgbWF5IGJlICI1NSUiIGFwcHJvdmFsIG9mIGdheSBtYXJyaWFnZSBidXQgdGhhdCBzdGlsbCBtZWFucyB0aGF0IG5lYXJseSBoYWxmIG9mIGV2ZXJ5Ym9keSB5b3UgY291bGQgbWVldCBpcyBhZ2FpbnN0IGl0LiAKVGhlIENQQyBkaXJlY3RvciBidXlpbmcgbHVuY2ggZm9yIHRoZSB5b3VuZyB3b21hbiBpcyBub3QgZG9uZSBvdXQgb2Yga2luZG5lc3MsIGl0J3MgYmVjYXVzZSBpZiB0aGUgY2xpbmljIHBlcmZvcm1zIHN1cmdpY2FsIGFib3J0aW9ucyB3aXRoIHNlZGF0aW9uLCB0aGVyZSBpcyBhIHJlcXVpcmVtZW50IHRvIGZhc3QgcHJpb3IgdG8gaGF2aW5nIHRoZSBzZWRhdGlvbi4gQnkgZ2l2aW5nIHRoZSB3b21hbiBmb29kIGFuZCBkcmluaywgaXQncyBpbW1lZGlhdGVseSBleGNsdWRpbmcgdGhhdCB3b21hbiBmcm9tIGhhdmluZyBhbiBhYm9ydGlvbiBvbiB0aGF0IGRheSBpbiBjYXNlIHNoZSBzdWRkZW5seSByZWFsaXNlZCB0aGF0IHNoZSdzIGluIGEgZmFrZSBjbGluaWMgYW5kIG5vdCB0aGUgcmVhbCBvbmUgd2hlcmUgc2hlIGhhcyBhbiBhcHBvaW50bWVudC4KSXQgbGV0IHlvdSBnZXQgdGhlIHJhdyBpbnB1dCB5b3UgbmVlZCB0byBnYWluIGV4cGVyaWVuY2UuIFBpY2sgYSBiYXIgbmVhciB5b3VyIHBsYWNlIGFuZCBnbyB0byBpdCBvbmUgbmlnaHQuIApIb3cgd291bGQgeW91IHJlY29tbWVuZCB0byBzdHJ1Y3R1cmUgYSBkYXRhYmFzZSBpbiBvcmRlciB0byBoYW5kbGUgc2Vzc2lvbnM/QXQgbWluaW11bSwgeW91IHdhbnQgdGhlIHRhYmxlIHRvIGhhdmU6CkhvbmVzdCBmZWVkYmFjayBvbiB0aGUgU3BlY3RyZTogaXQgc2VlbXMgbGlrZSB0aGUgc2lsZW5jZSBlZmZlY3QgaW4gaXRzIGN1cnJlbnQgZm9ybSBpcyB0b28gZ29vZCBhdCBuZXV0cmFsaXppbmcgY2FzdGVycywgZXNwZWNpYWxseSBpbiB0aGUgbWlkIGdhbWUgd2hlcmUgbW9zdCBhcmUgYWZmZWN0ZWQgYnkgc2lsZW5jZS4gRW5lbXkgQUkgZG9lc24gYXZvaWQgdGhlIHJhZGl1cywgc28gSSBqdXN0IHB1bGwgdGhlbSBiYWNrIGFyb3VuZCBhIGNvcm5lciwgb3IgY2xvc2UgYSBkb29yIGFuZCB3YWl0LCBhbmQgdGhlbiB0aGV5IHVwIGNsb3NlIHdpdGhvdXQgbW9zdCBvZiB0aGUgYWJpbGl0aWVzIHRoYXQgbWFrZSB0aGVtIGRhbmdlcm91cy4KQ2FkaW4gdG9kYXkuIFRocmVlIHdvbWVuIGNvbXBsYWluZWQgdG8gcG9saWNlIHRvZGF5IG9mIGxvc2luZyBtb25leSwgYW5kIGluIGVhY2ggaW5zdGFuY2UgdGhlIGxvc3Mgd2FzIGF0dHJpYnV0ZWQgdG8gdGhlIHdvcmsgb2YgcHJvZmVzc2lvbmFsIHBpY1Nwb2NmY2V0cy4gUHJldmlvdXMgZXhwZXJpZW5jZSBieSBwb2xpY2Ugb2YgIGZpY2lhbHMgcmVzdWx0ZWQgaW4gdGhlIGFzc2lnbm1lbnQgb2YgbWFueSBkZXRlY3RpdmVzIHRvIGRvd250b3duIHN0b3JlcyBtb3JlIHRoYW4gdHdvIGFnbyBpbiBhbiBlZiAgam9ydCB0byBjYXB0dXJlIGFueSBrbm93biAiZGlwLiAKUmVhbCByZWFzb246IFNoZSB0YW5uZWQgZXhjZXNzaXZlbHkuIGJ1cm5lZCBoZXIgYWxsIHRoZSB0aW1lIGZhbGxpbmcgYXNsZWVwIGluIHRoZSB0YW5uaW5nIGJlZCBvciBvdXQgaW4gaW4gdGhlIHN1biB0b28gbG9uZywgYW5kIGl0IHdhcyB0dXJuIG9mZi4gSSBicm91Z2h0IGl0IHVwIGEgY291cGxlIHRpbWVzLCBidXQgc2hlIHRvbGQgbWUgc2hlIHdhcyBvbmx5IGF0dHJhY3RpdmUgaWYgc2hlIHRhbm5lZC4gSSB0cmllZCB0byBjb252aW5jZSBoZXIgb3RoZXJ3aXNlLCBidXQgd2FzbiBjb252aW5jaW5nIGVub3VnaCBhcHBhcmVudGx5LiBXZSBoYWQgYSBnb29kIHRoaW5nIGdvaW5nIGZvciBhIGNvdXBsZSB5ZWFycywgYnV0IGl0IGdvdCB0byBtZSBldmVudHVhbGx5LgpMYSBtb250YWduZSBuJ2VzdCBwYXMgcGFyZ25lIG5vbiBwbHVzIHBhciBsZXMgcmVkb3V4IGV0IGxhIHBsdWllLCBxdWkgZm9ybWVudCB1bmUgY3JvdGUgZGUgZ2xhY2Ugc3VyIGxlcyBwaXN0ZXMuIApJbiBtb3N0IHBsYXllciByZXdhcmRzIGNsdWJzLCBwbGF5ZXJzIGVhcm4gcG9pbnRzIGZvciBwbGF5IGFuZCBjYW4gcmVkZWVtIHRoZSBwb2ludHMgZm9yIGNvbXBzLiBXaGVuIHRoZSBjYXJkIGlzIGluc2VydGVkIGludG8gYSByZWFkZXIgYXQgYSBzbG90IG9yIHZpZGVvIHBva2VyIG1hY2hpbmUsIGEgZGlzcGxheSBvbiB0aGUgcmVhZGVyIG1pZ2h0IHNheSBzb21ldGhpbmcgbGlrZSwgIldlbGNvbWUsIG1lbWJlci4gWW91IGhhdmUgNDIgcG9pbnRzLiAKIkFuZCBJIHJlZ3JldCB0aGF0LiAKTXMuIERpY2tpbnNvbiwgd2hvIHdpbGwgb25seSBzYXkgc2hlIGlzIGxlYXZpbmcgdG8gZm9jdXMgb24gaGVscGluZyBlbnRyZXByZW5ldXJzIGluIGEgbmV3IHdheSwgb25lIHRoYXQgd2lsbCBiZSBzZXBhcmF0ZSBmcm9tLCBidXQgY29ubmVjdGVkIHRvLCBWZW50dXJlIENvbW11bmljYXRpb25zIGFuZCBZb3UgSW5jLiwgd291bGQgY2VydGFpbmx5IGxpa2UgdG8gc2VlIG1vcmUgd29tZW4gb24gdGhlIERlbi4gCkkgZ29pbmcgdG8gYXNrIHlvdSBxdWVzdGlvbnMgYWJvdXQgaXQgYW5kIEkgd2FudCB5b3UgdG8gYXNrIG1lIHF1ZXN0aW9ucyBhYm91dCBpdC4gSXQgb2theSBpZiB5b3UgZG8gbm90IGtub3cgc29tZXRoaW5nIG9yIHVuZGVyc3RhbmQgdGhpbmcgb3Igd2hhdCBzb21ldGhpbmcgbWF5IGRvLiBJZiB5b3UgZG9uIGtub3cgc29tZXRoaW5nLCBJIHJlcGhyYXNlIGFuZCB0cnkgdG8gYXNrIHlvdSBzb21ldGhpbmcgdGhhdCBsZWFkcyB5b3UgdG8gYW5zd2VyIG9yIGFza2luZyBhIG1vcmUgZm9jdXNlZCBxdWVzdGlvbi4KSSBhbHNvIHVuZGVyc3RhbmQgd2FudGluZyB0byBvbmx5IGxldmVsIGEgRFBTIGJ1dCB0aGlzIGdhbWUgb2ZmZXJzIHNvIG11Y2ggdGhleSB3ZXJlIHJlYWxseSBsaW1pdGluZyB0aGVtc2VsdmVzIGFuZCB0aGF0IHNhZC4gU28gbWFueSBmYXRlcywgc2lkZSBxdWVzdHMsIGNyYWZ0aW5nIGFuZCBnYXRoZXJpbmcgY2xhc3NlcyB0byBsZXZlbC4gSXQgYSBzaGFtZSB0aGV5IHR1bm5lbCB2aXNpb25lZCBsaWtlIHRoYXQuIEkganVzdCB0cmFuc2ZlcnJlZCB0byBPbWVnYSBhbmQgaGF2ZSBoYWQgbm8gaXNzdWVzIHdpdGggcGVvcGxlIGluIGZhdGVzIGRpc2Nvbm5lY3RpbmcgbWUuIEkgaGF2ZSBubyBpc3N1ZXMgd2hlbiBwZW9wbGUgdXNlIHRoZWlyIGNob2NvYm9zIGJlY2F1c2UgSSBzbWFydCBlbm91Z2ggdG8ga25vdyB0aGVyZSB3YXlzIHRvIHR1cm4gb2ZmIHRoZWlyIGhlYWx0aCBiYXJzIGFuZCBuYW1lIHBsYXRlcy4gWU9VIENBTiBFVkVOIFBSRVNTIEEgQlVUVE9OIEFORCBISURFIE9USEVSIFBMQVlFUlMgQU5EIFRIRUlSIFBFVFMgRlJPTSBZT1VSIFNDUkVFTi4gSSBoYWQgdG8gZG8gaXQgZm9yIFJhdWhiYW4uIFRoaXMgcG9zdCBpcyBpbmNyZWRpYmx5IHdoaW55IGNvbnNpZGVyaW5nIHBlb3BsZSBvbiBOQSBoYXZlIDQgaG91ciBxdWV1ZXMgYW5kIHVzIG9uIEVVIGhhdmUgbm8gcXVldWVzIGF0IGFsbCwgYW5kIGlmIHdlIGRvIGhhdmUgcXVldWVzIHRoZWlyIDUgMTAgbWludXRlcyBtYXguIEplc3VzIENocmlzdC4gVGhlIHRoaW5ncyBwZW9wbGUgdXNlIHRoaXMgc3VicmVkZGl0IHRvIGJpdGNoIGFib3V0IGFzdG91bmQgbWUuClRoZSBiZXN0IHBhcnQgaXMgdGhhdCB0aGUgc3RyYXRlZ3kgY2FuIGdldCBpbnRlbnNlIHZlcnkgcXVpY2tseSBhbmQgcGxhbm5pbmcgeW91ciBuZXh0IG1vdmVzIGJlY29tZXMgZXh0cmVtZWx5IGV4Y2l0aW5nLCB0dXJuIGFmdGVyIHR1cm4hIElmIHlvdSBnbyB0cnkgaXQgb3V0LCBtYWtlIHN1cmUgdG8gY29tcGxldGUgdGhlIHR1dG9yaWFsIGJlZm9yZSBoZWFkaW5nIGludG8gdGhlIG11bHRpcGxheWVyIGxvYmJ5LCBpdCdzIHJlYWxseSB3b3J0aCB0aGUgbGVhcm5pbmcgZXhwZXJpZW5jZSBhbmQgcHJldmVudHMgaGVhZGFjaGVzIGVhcmx5IG9uIGluIHZlcnN1cyBwbGF5LiAKMjAxNyBFZG1vbnRvbiBPaWxlcnMgcHJvc3BlY3RzLCBzZXJpZXMgdG8gZGF0ZTpHb2FsaWVzOiA2IExhdXJlbnQgQnJvc3NvaXQgICA3IE5pY2sgRWxsaXMgICAxMyBTdHVhcnQgU2tpbm5lciAgIDE0IER5bGFuIFdlbGxzCkplYW4gTG91aXMgQmlhbmNvLCBNbWUgR2lzbGUgQmllbW91cmV0LCBNTS4gCkFub3RoZXIgb3B0aW9uIEkgY29uc2lkZXJpbmcgaXMgYnVpbGRpbmcgYSBjb21wdXRlciBmcm9tIHRoZSBwYXJ0cyBJIGxpc3RlZCBhYm92ZSAobW90aGVyYm9hcmQsIENQVSwgbWVtb3J5IGFuZCBQU1UpLiBUaGlzIHdlZWtlbmQgSSB3aWxsIGdldCBhIG5ldyBjaGFzc2lzIGZvciBteSBjdXJyZW50IGhvbWUgUEMgYW5kIGEgbmV3IFBTVSAodGhhdCB3aGVyZSBJIGFsc28gZ2V0dGluZyB0aGUgU2Vhc29uaWMgUFNVIGZyb20pLiAKSWYgaXQgdGFrZXMgMyBzZWNvbmRzIGZvciBtZSB0byB1c2UgbXkgMSwgQWduaS9BbnViaXMvQWggUHVjaC9Qb3NlaWRvbi9aZXVzLyBsaXRlcmFsbHkgYW55IG90aGVyIG1hZ2UgYW5kIEp1bmdsZXIgY2FuIGRyb3AgdGhlaXIgcHJldHR5IG11Y2ggdGhlaXIgZW50aXJlIGtpdCBvbiB5b3UgaW4gdGhhdCBzYW1lIHRpbWUgZnJhbWUuCkJyYXZvLCBpbCB5IGEgdW4gdnJpdGFibGUgcmVzcGVjdCBkZSBsJ2dhbGl0IGRlcyBjaGFuY2VzLiBkYW5zIG4naW1wb3J0ZSBxdWVsbGUgZW50cmVwcmlzZSBwcml2ZSwgY2V0dGUgZmVtbWUgbidhdXJhaXQgY2VydGFpbmVtZW50IHBhcyB0IGVuZ2FnZS4gZHUgbW9pbnMgcGFzIGF2YW50IHNvbiBhY2NvdWNoZW1lbnQuCldlbGwsIEV0aGFuIGhhcyBkb25lIG51bWVyb3VzIGZ1Y2t1cHMgaW4gdGhlIHBhc3QgMnlycy4gQmVlbiBmb2xsb3dpbmcgaGltIHNpbmNlIHRoZSBvZiB2YXBlIG55YXNoIGRheXMsIGFuZCBJIGtub3cgaGUgYWN0cyBsaWtlIGEgc3R1Y2sgdXAgbGl0dGxlIGJyYXQgbm93YWRheXMgYnV0IHRoYXQgZG9lc24gbWVhbnMgdGhhdCBJIHN0b3Agd2F0Y2hpbmcgaGlzIHZpZGVvcyBhbmQgcG9kY2FzdC4KVGhlcmUgd2FzIGEgbG90IG9mIHRhbGsgb2YgZGl2b3JjZSBpbiB0aGF0IGhvdXNlLiBUaGUgdHJ1dGggaXMsIFBhbGluIHJlYWxseSBkb2VzIGtub3cgaG93IHRvIGNvb2suVGhpcyBpcyBhIHdvbWFuIHdobyBzYXZlZCBBbGFza2EgbW9uZXkgYnkgZWxpbWluYXRpbmcgdGhlIHByZXZpb3VzIGdvdmVybm9yIHBlcnNvbmFsIGNoZWYsIHNvIHBlcmhhcHMgVGVhbSBMZXZpIHNob3VsZCBoYXZlIHJlY29uc2lkZXJlZCB0aGlzIGxpZS4gVGhleSBtaWdodCBoYXZlIGFsc28gcmVtZW1iZXJlZCB0aGF0IHRoaXMgc2FtZSB3b21hbiB3YXMgc2VlbiBvbiBuYXRpb25hbCB0ZWxldmlzaW9uIGNvb2tpbmcgZm9yIEdyZXRhIHZhbiBTdXN0ZXJlbiBhbmQgTWF0dCBMYXVlci5Pa2F5LCBQYWxpbiBjb29rZWQgb24gVFYgd2l0aCBNYXR0IExhdWVyLiAKQmVjYXVzZSBvZiBzb2NpYWwgbWVkaWEsIG1vZGVybiBidWxseWluZyBpbnZvbHZlcyBncm91cHMgb2Yga2lkcyBnYW5naW5nIHVwIG9uIG9uZSBraWQgZm9yIG5vIHJlYXNvbiwgcnVpbmluZyBhbGwgYXNwZWN0cyBvZiBhIHNvY2lhbCBsaWZlLCBhbmQgYmFzaWNhbGx5IHJlaW5mb3JjaW5nIHRvIHRoZSB2aWN0aW0gdGhhdCB0aGV5IGFyZSB3b3J0aGxlc3MgYW5kIHNob3VsZCBraWxsIHRoZW1zZWx2ZXMgYXQgYWxsIHRpbWVzLiBUaGlzIGhhcHBlbmluZyBkdXJpbmcgYSBkZXZlbG9wbWVudGFsIHBlcmlvZCBvZiBhIHBlcnNvbidzIGxpZmUgY2FuIGRvIG5vdGhpbmcgYnV0IGRhbWFnZS4gCkFueXdheSwgdHVybnMgb3V0IGl0IHdhcyBteSBBZnJpY2FuIHNlbmVnYWwgbWltaWNraW5nIHRoZSBzb3VuZCBvZiB0aGUgYWxhcm0gKHdob3NlIGNhZ2UgaXMgcmlnaHQgbmV4dCB0byB0aGUgYWxhcm0gYm94IHRoYXRzIGFib3ZlIHRoZSBiYWNrIGRvb3IpLiAKTm90IHdpdGhvdXQgYSBnb3Zlcm5tZW50LCBidXQgbWFya2V0cyBjZXJ0YWlubHkgY29udHJpYnV0ZWQgdG8gc2xhdmVyeSwgZXNwZWNpYWxseSBpbiB0aGUgVVMuIFRoZSBjb3R0b24gZ2luIHJldmVyc2VkIHRoZSBkZWNsaW5lIG9mIHNsYXZlcnkuIE5vcnRoZXJuIGJhbmtzIGZpbmFuY2VkIHNsYXZlcnksIHdpdGggbG9hbnMgdG8gcHVyY2hhc2UgYW5kIHJlbnQgdGhlbSBhbmQgdG8gaW5zdXJlIHRoZW0sIGFuZCB3ZXJlIHdoZXJlIG1hbnkgb2YgdGhlIHByb2R1Y3RzIG9mIHNsYXZlcnkgd2VyZSBzb2xkLgpUaGlzIGlzIG15IHBlcnNwZWN0aXZlLiBXZSBjb3VsZCBoYXZlIHNpbXBseSBsZXQgRXVyb3BlIGxhbmd1aXNoIGluIGl0IGRlc3RydWN0aW9uLCBhbmQgd2FzaGVkIG91ciBoYW5kcyBjbGVhbiBvZiB0aGUgd2hvbGUgdGhpbmcuCkRldXggbW9uZGVzIHF1aSBzZSBjdG9pZW50IG1haXMgcXVpIHNvbnQgYXNzZXogZGlmZnJlbnRzLiBDZSBxdWUgbm91cyByYWNvbnRlIGwnYXV0ZXVyIG4nZXN0IHBhcyBsJ0hpc3RvaXJlIGRlIE1vbnRtYXJ0cmUsIG1haXMgbGVzIGhpc3RvaXJlcyBkdSBsaWV1LCBsZXMgZ2VucywgY2VydGFpbnMgY2xicmVzIGQnYXV0cmVzIG1vaW5zLCBxdWkgZW4gb250IGZhaXQgbGEgdmllLiAKRnJvbSB0aGUgdmVyeSBmaXJzdCBtb21lbnQgSSBsZWZ0IHRoZSBhaXJwb3J0LCBJIGxvdmVkIGV2ZXJ5dGhpbmcgSSBzYXcgYWJvdXQgdGhlIGNvdW50cnkuIApNR00gTmF0aW9uYWwgSGFyYm9yIENhc2lubwpJIGNvdWxkIGltbWVyc2UgeW91IGluIHRoYXQgbW9tZW50IGFuZCB5b3Ugd291bGRuIGtub3cgdGhhdCB5b3Ugc3dpdGNoZWQgcGxhY2VzLCB3aXRoIGhvdyBmdWNraW5nIHN0cm9uZyB0aGlzIG1vbWVudCBpcy4gSSB3YXMgc28gcHN5Y2hlZCB0aGF0IG5vdCBvbmx5IHdhcyBJIGdvaW5nIHRvIGJlIGEgcmVjb3JkIGhvbGRlciwgYnV0IEkgZ2V0IHRvIGRvIGl0IG1ha2luZyBiYWJpZXMuIEJ1dCBJIGNhbiB0ZWxsIHlvdSB3aGF0IGl0IHdhcy4gClRoZSBwcm9kdWN0aW9uIGlzc3VlcyB3aWxsIGJlIGhhbmRsZWQgYnkgdGhlIFdCIGFmZmlsaWF0ZSwgYW5kIGl0J3MgYSBuYXR1cmFsIHByb21vdGlvbiBmb3IgdGhlIHNwb3J0cyBiYXIuIApUaGUgaHVtYW4gbWljcm9iaW9tZSBwbGF5cyBhIGtleSByb2xlIGluIGEgd2lkZSByYW5nZSBvZiBob3N0IHJlbGF0ZWQgcHJvY2Vzc2VzIGFuZCBoYXMgYSBwcm9mb3VuZCBlZmZlY3Qgb24gaHVtYW4gaGVhbHRoLgpBcyBleHRyb3ZlcnRlZCBwZW9wbGUgdGVuZCB0byBnYWluIGVuZXJneSBmcm9tIGJlaW5nIGFyb3VuZCBwZW9wbGUgYW5kIGJlaW5nIGFsb25lIGRyYWlucyB0aGVtLiAKQW4gYXJ0aXN0J3MgaW1wcmVzc2lvbiBvZiB0aGUgU2hlbGx5J3MgcmVkZXZlbG9wbWVudC4KV2ludGVyIGF1ZiBMYSBQYWxtYQpJdCdzIHN1cHBvc2VkIHRvIGJlIGEgZ3JlYXQgdGFsZSBvZiBBbWVyaWNhbiBkZWNhZGVuY2UsIGJ1dCBpdCBzZWVtcyBzbWFsbCwgaW5zaWduaWZpY2FudDogaXQgaXMgVGhlIEJpZyBTaG9ydCwgc2hvcnRlZC4uIApUYWtpbmcgYSBjb29raW5nIGFuZCB0ZXh0aWxlIGNsYXNzIDUgeWVhcnMgYWZ0ZXIgeW91IGZpZ3VyZSBvdXQgeW91IHdhbnQgdG8gZG8gY29kaW5nIGlzIGEgd2FzdGUgb2YgdGltZS4uIApUaGlzIGNvdW50cnkgaXMgYnVpbHQgb2ZmIHRoZSBmb3VuZGF0aW9uIG9mIGluanVzdGljZSwgaXQgb25seSBzZXJ2ZXMgdGhlIHJpY2ggYW5kIGtpbGxzIHRoZSBwb29yLiBUaGlzIGNvdW50cnkgaXMgdGhlIGxhbmQgb2YgdGhlIGZyZWUgZm9yIHJpY2ggcGVvcGxlLCB0aGlzIGlzIHRoZSBiZXN0IGNvdW50cnkgaW4gdGhlIHdvcmxkIHRvIGxpdmUgaW4gaWYgeW91J3JlIGZpbHRoeSByaWNoLiAKUGx1cyB5b3UgZG9uJ3QgaGF2ZSB0byBwYXkgZm9yIGFsbCB0aG9zZSBleHRyYXMuIApTbyBpIHdvcmsgaW4gYSBtZW50YWwgaGVhbHRoIHR5cGUgb2YgaG9zcGl0YWwvcHJpc29uIGFuZCBzb21lIG9mIHRoZSBwZW9wbGUgdGhlcmUgaGF2ZSBzdHJhbmdlIHBvb3AgaXNzdWVzIGFuZCBhIGxvdCBvZiB0aGUgdGltZXMgaXRzIHJlbGF0ZWQgdG8gdHJhdW1hICh1c3VhbGx5IHNleHVhbCBhYnVzZSkgd2hlcmUgcG9vcCB3YXMgaW50cm9kdWNlZC4gQmUgc2Vuc2l0aXZlIGFib3V0IHRoaXMgT1AsIHRoZXJlcyBwcm9iYWJseSBhIGRlZXBlciByZWFzb25pbmcgZm9yIHRoaXMgZmVhciBvZiBnZXR0aW5nIHBvb3Agb24gaGVyLiBJIG5vdCBzYXlpbmcgc2hlIHdhcyBzZXh1YWxseSBhYnVzZWQsIGJ1dCB0aGVyZSBtYXkgaGF2ZSBiZWVuIHRyYXVtYSByZWxhdGVkIHRvIHRoaXMuLiAKTGV0J3MgdGFrZSBhIGxvb2sgYmFjayBhdCBhIGNhcmVlciB0aGF0J3MgbG9uZyB0aHJpdmVkIG9uICJvYmplY3RpZmljYXRpb24iOlRoZXJlIHdlcmUgbm8gY29tcGxhaW50cyBhYm91dCB0aGUgbWVkaWEncyAic3BvcnRsaWtlIHNjcnV0aW55IiBhbmQgc2V4aXNtIGluIDE5OTYsIHdoZW4gQW5pc3RvbiBwb3NlZCBuYWtlZCBmb3IgdGhlIGNvdmVyIG9mICwgbGFuZ3VpZGx5IGx5aW5nIG9uIGEgYmVkLCB3aXRoIGhlciB3ZWxsIHRvbmVkIGJ1dHQgaW4gYWxsIGl0cyBzb2Z0IGZvY3VzZWQgZ2xvcnkuIE5vciBkaWQgdGhlICJGcmllbmRzIiBzdGFyIGRlY3J5IHRoZSBodW5kcmVkcyBvZiBtYWdhemluZXMgdGhhdCBsYXRlciBmZWF0dXJlZCBoZXIgZmxhdW50aW5nIGhlciBjbGVhdmFnZSBvbiB0aGVpciBjb3ZlcnMuIChFdCB0dSwgVm9ndWU/KQpJIGRpZG4gbGVuZCBpdCBhbmQgbm90IGdldCBpdCBiYWNrLCBJIGRpZG4gZm9yZ2V0IGl0IG9uIHRoZSB0cmFpbi4gCkkgaGFkIGEgdmVyeSBzaW1pbGFyIGV4cGVyaWVuY2Ugd2hlbiBJIHdlbnQgbGFzdCBKdWx5ICgyMDE4KS4gSSB3ZW50IHdpdGggbXkgd2lmZSBhbmQgMyBmcmllbmRzICg1IG9mIHVzIHRvdGFsKS4gV2Ugd2VyZSBzdGF5aW5nIGZvciA4IG5pZ2h0cy4gCkFsaWFhJ25uIGdlbmVsIHNvcnVubGFybiBpeWkgYmlsZGlrbGVyaW5pIGJlbGlydGVuIEFLIFBhcnRpIEdlbmVsIEJha2FuIFlhcmRtY3Mgem1pciBNaWxsZXR2ZWtpbGkgSGFtemEgRGEsIFRPSyduaW4gdmUgeWVuaSBiaXIgaGFzdGFuZW4uLiAKTnVtYmVyIG9uZSB0aGluZyB0byBsZWFybiBhYm91dCBwb2tlci9pbnZlc3RpbmcgaXMgYWxsIG1vbmV5IHlvdSBoYXZlIG9uIHRoZSB0YWJsZSBpcyBhdCByaXNrLiAKSmUgbWlzZSBzdXIgdW4gbWluaW11bSBkZSBjb250YWdpb24uIEMnZXN0IHBhcyBnYWduLiBDJ2VzdCBDYXJuYXZhbCBwcm9maXRvbnMgZW4gIVNwb3J0IGVuIGNoYW1icmVOaWNlIFBhdGluIGNvdWZmaW4gZGUgY2Ugam91ciBwcnNlbnRlIGRldXggInJvaXMgZHUgc3BvcnQiLCBtYSBmb2kgbGUgZ2Fyb24sIHVuIGNlcnRhaW4gSnJtZSBBcmRpc3Nvbm5lLCB1biBib3hldXIgcXVpIHBhcmF0IGJpZW4gZnJsZSwgbWUgcGFyYWl0IHJlc3NlbWJsZXIgY29tbWUgZGV1eCBnb3V0dGVzIGQnZWF1ICB1biBhY3RldXIgcG9ybm8gZGUgSGVsaXggU3R1ZGlvLCBuZSBtZSBkZW1hbmRleiBwYXMgc29uIG5vbSBqZSBuZSBsJ2FpIHBhcyByZXRlbnUuTGUgY2FybmF2YWwsIGFwcnMgbGEgZmxvdHRlIHBsYWNlICB1bmUgbmVpZ2UgYmllbiBnbGFjaWFsZSAhU2EgbWFqZXN0IENhcm5hdmFsIGEgbG91cCBzYSBwcmVtaXJlIHNvcnRpZSwgaWwgZmxvdHRhaXQsIGlsIGEgZHUgcmVzdGVyIGF1IGdhcmFnZSwgbGVzIHRyaWJ1bmVzIHNvbnQgZGVtZXVycyB2aWRlcyBldCBvbiByZW1ib3Vyc2UuIApIZSdzIGFsc28gcmVtaW5kaW5nIHlvdSB0byByZWFkLCBsZWF2ZSBjb21tZW50cywgc2hhcmUgdGhpcyBib3VudHkgZ2VuZXJvdXNseSBvbiB5b3VyIHNvY2lhbCBtZWRpYSBvZiBjaG9pY2UsIGFuZCByZW1lbWJlciB0byBzZW5kIFN0dWZmLiAKV2Ugd291bGQgbm90IGJlIGFibGUgdG8gcHJvcGVybHkgdW5kZXJzdGFuZCB0aGUgc3RydWdnbGVzIGluIHRoZSBNaWRkbGUgRWFzdCBhbmQgdGhlIE11c2xpbSB3b3JsZCBhdCBsYXJnZSBpZiB3ZSBkb24gZGVsdmUgaW50byB0aGUgY29sb25pYWwgY29ucXVlc3RzIGludG8gdGhlIHJlZ2lvbiBpbiB0aGUgbGF0ZSAxOXRoIGFuZCBlYXJseSAyMHRoIGNlbnR1cmllcy4gQnJpdGFpbiwgRnJhbmNlLCBSdXNzaWEsIGFuZCB0byBhIGxlc3NlciBleHRlbnQsIEl0YWx5LCBhbGwgaW52YWRlZCBNaWRkbGUgRWFzdGVybiwgTm9ydGggQWZyaWNhbiBhbmQgU291dGggQXNpYW4gcmVnaW9ucyB0aGF0IHdlcmUgbWFqb3JpdHkgTXVzbGltLiBCcml0YWluIGhlbGQgRWd5cHQgYW5kIEluZGlhLCBGcmFuY2UgaGVsZCBBbGdlcmlhLCBNb3JvY2NvIGFuZCBUdW5pc2lhLCBSdXNzaWEgd2VudCBpbnRvIHRoZSBDYXVjYXN1cyBhbmQgSXJhbiwgYW5kIEl0YWx5IGhlbGQgTGlieWEuIEFzIGlzIHRoZSBjYXNlIHdpdGggbW9zdCBpbXBlcmlhbCBjb25xdWVzdHMsIHRoZSBpbnZhZGVycyBkZWNsYXJlZCB0aGVtc2VsdmVzIHN1cGVyaW9yIGFuZCBzdWJqdWdhdGVkIHRoZSBuYXRpdmUgcG9wdWxhdGlvbnMuIFRoZXJlIHdhcyBhIGNsZWFyIGxpbmUgYmV0d2VlbiBDaHJpc3RpYW4gaW52YWRlcnMgYW5kIE11c2xpbSBzdWJqZWN0cywgYW5kIGFzIHlvdSBtYXkgaW1hZ2luZSwgdGhpbmdzIGRpZG4gZ28gd2VsbC4gRm9yIGV4YW1wbGUsIEJyaXRpc2ggb2ZmaWNlciBGcmVkZXJpY2sgQ29vcGVyLCBEZXB1dHkgQ29tbWlzc2lvbmVyIG9mIEFybWl0c2FyLCByZXBvcnRlZCBpbiAxODU3IGFib3V0IHF1aWV0aW5nIGFuIHVwcmlzaW5nIGluIExhaG9yZSwgSW5kaWEgYnkgU2Vwb3lzIChCZW5nYWxpIHNvbGRpZXJzIGluIHdoYXQgaXMgbm93IG1vZGVybiBkYXkgUGFraXN0YW4pOgpGcm9tIGZpcnN0IGhhbmQgZXhwZXJpZW5jZSBpIHNheSBpdHMgY2xvc2VyIHRvIDk1JSsuIApXb2xsb25nb25nIExvcmQgTWF5b3IgR29yZG9uIEJyYWRiZXJ5IHdpbGwgb3BlbiB0aGUgc3BlY2lhbCBldmVudCwgd2hpY2ggbWFya3MgdGhlIHN0YXJ0IG9mIFJlc3BvbnNpYmxlIEdhbWJsaW5nIFdlZWsgMjAxNi4uIApUd28gdmVyeSBkaWZmZXJlbnQgdGhlb3JpZXMgZXhpc3QgYXMgdG8gaG93IGFjdXB1bmN0dXJlIHdvcmtzLiBBY2NvcmRpbmcgdG8gQ2hpbmVzZSBwaGlsb3NvcGh5LCB0aGUgYm9keSBjb250YWlucyB0d28gb3Bwb3NpbmcgZm9yY2VzOiB5aW4gYW5kIHlhbmcuIFdoZW4gdGhlc2UgZm9yY2VzIGFyZSBpbiBiYWxhbmNlLCB0aGUgYm9keSBpcyBoZWFsdGh5LiBFbmVyZ3ksIGNhbGxlZCAicWkiIChwcm9ub3VuY2VkICJjaGVlIiksIGZsb3dzIGxpa2Ugcml2ZXJzIGFsb25nIHBhdGh3YXlzLCBvciBtZXJpZGlhbnMsIHRocm91Z2hvdXQgdGhlIGJvZHkuIFRoaXMgY29uc3RhbnQgZmxvdyBvZiBlbmVyZ3kga2VlcHMgdGhlIHlpbiBhbmQgeWFuZyBiYWxhbmNlZC4gSG93ZXZlciwgdGhlIGZsb3cgb2YgZW5lcmd5IGNhbiBzb21ldGltZXMgYmUgYmxvY2tlZCwgbGlrZSB3YXRlciBnZXR0aW5nIHN0dWNrIGJlaGluZCBhIGRhbS4gQSBkaXNydXB0aW9uIGluIHRoZSBmbG93IG9mIGVuZXJneSBjYW4gbGVhZCB0byBpbGxuZXNzLgpJIGFic29sdXRlbHkgc2hhdHRlcmVkIGFmdGVyIGEgbG9uZyBhZnRlcm5vb24gb2YgZG9pbmcgdmVyeSBsaXR0bGUgbm93IGJ1dCBuZWVkIHRvIGZpbmlzaCBhIHByZXNlbnRhdGlvbiBmb3IgdG9tb3Jyb3cgYXQgd29yayBzbyBJIHByZXRlbmRpbmcgdG8gZG8gdGhhdCB3aGlsc3Qgd2F0Y2hpbmcgdHJhc2ggb24gTmV0ZmxpeC4KVGhlcmUgYXJlIHRob3VzYW5kcyBvZiBibHVlIHRsZXMgYW5kIHN0YW5lZCBnbGFzcyB3bmRvd3MsIHdoY2ggcyBob3cgdCBnb3QgdCBuYW1lLiAKSSBjYW4ganVzdCBsYXkgdGhlcmUgYW5kIHJlbGF4LiIgTm90IHNvLiBSZXNpc3RpbmcgQnVzY2ggd2hpbGUgaGUgc3RyZXRjaGVkIG15IGJvZHkgd2FzIGhhcmRlciB0aGFuIEkgdGhvdWdodC4gCllvZ2EgWW9nYSBpcyBhIGZvcm0gb2YgZXhlcmNpc2UgdGhhdCBoZWxwcyBrZWVwIHRoZSBib2R5IGluIHNoYXBlLiBOb3Qgb25seSBkb2VzIGl0IGhlbHAgcmVsaWV2ZSBhcnRocml0aXMgcGFpbiwgYnV0IGl0IGFsc28gcmVkdWNlcyBzdHJlc3MgYW5kIGhlbHBzIHN0cmVuZ3RoZW4gam9pbnRzLiBUaGUgbWluZCBpcyBpbnRlbmRlZCB0byBmb2N1cyBpbndhcmQgb24gdGhlIGJvZHkgd2hpbGUgcGVyZm9ybWluZyB5b2dhIHBvc2VzIHN1Y2ggYXMgdGhlIGNhbWVsIHBvc2Ugb3IgdGhlIGxvdHVzIHBvc2UuIApXaGV0aGVyIGluIHRlcm1zIG9mIHRoZW1lcywgb3IgcGxvdCwgb3IgY2hhcmFjdGVycywgaXQganVzdCBmaW5lLiAKNC4gCkhhcHBlbnMgYWxvdCBhcHBhcmVudGx5LiBTbyBJIHZlcnkgcmVsaWV2ZWQgYW5kIHN0YXJ0IGNyYWNraW5nIGpva2VzIGFuZCBnZXQgdGhlIERyIHJvbGxpbmcuIE1hZGUgYSBjb21tZW50IGFib3V0IG15IGRpY2sgYmFzaWNhbGx5IGhhdmluZyBhIGxpb25zIG1haW4gZ29pbmcgb24uIApZb3UgaGF2ZSB0byBncmluZCBhd2F5IGF0IHdoYXRldmVyIHlvdSdyZSBzdHVjayBvbiBmb3IgYW4gaG91ciwgYSBkYXkgLiAKVGhlcmUgd2VyZSBmb3VyIGFudGkgc2xhdmVyeSBwZXRpdGlvbnMgd3JpdHRlbiBiZXR3ZWVuIDE3NzMgYW5kIDE3NzcgYWxvbmUgaW4gQm9zdG9uLiBBbGwgb2YgdGhlbSByZWZsZWN0IHRoZSByaGV0b3JpYyB1c2VkIGJ5IGNvbnRlbXBvcmFyeSBQYXRyaW90IHNwZWFrZXJzLiBUYWtlIHRoaXMgZXhjZXJwdCBmcm9tIGEgMTc3NCBwZXRpdGlvbiB3cml0dGVuIGJ5IGVuc2xhdmVkIGJsYWNrIEJvc3RvbmlhbnM6CkhhbmRsaW5nIENvbmZsaWN0T2Z0ZW4sIHNvY2lhbCB3b3JrZXJzIGVuY291bnRlciBjb25mbGljdC4gS25vd2luZyBob3cgdG8gZGlmZnVzZSBjb25mbGljdCBhbmQgbm90IGxldCBpdCBpbnRlcmZlcmUgd2l0aCB0aGUgaXNzdWVzIHRoYXQgbmVlZCB0byBiZSBkZWFsdCB3aXRoIGlzIGtleS4gU29jaWFsIHdvcmtlcnMgc2hvdWxkIGF2b2lkIHRocmVhdGVuaW5nIG9yIHdhcm5pbmcgY2xpZW50cywganVkZ2luZyBjbGllbnRzIG9yIG1ha2luZyBpbmFwcHJvcHJpYXRlIGdlbmVyYWxpemF0aW9ucyB0aGF0IGNvdWxkIGxlYWQgdG8gY29uZmxpY3QuIFNvY2lhbCB3b3JrZXJzIHNob3VsZCBhbHNvIHJlZnJhaW4gZnJvbSByYWlzaW5nIHRoZWlyIHZvaWNlcywgZXZlbiBpZiBhIGNsaWVudCBiZWdpbnMgdG8geWVsbCBmaXJzdC4gRm9yIHBhcnRpY3VsYXJseSBkaWZmaWN1bHQgY2xpZW50cywgYSBzb2NpYWwgd29ya2VyIG1heSBjaG9vc2UgdG8gYnJpbmcgYSBtZWRpYXRvciBvciBvdGhlciBpbXBhcnRpYWwgcGFydHkgaW50byB0aGUgcm9vbSBkdXJpbmcgYW55IGNvbnZlcnNhdGlvbnMgdG8gaGVscCBkaWZmdXNlIGNvbmZsaWN0LgpEb2N0b3JzIGxlYXJuIGEgbG90IHZpYSByZWFkaW5nIGFuZCBib29rcy4gQnV0IHRoYXQganVzdCB0aGUgbWluaW11bSByZXF1aXJlbWVudHMgdG8gc3RhcnQgbGVhcm5pbmcgd2hpbHN0IG9uIHRoZSBqb2IsIGFuZCB3ZSBsZWFybiBhIGhlbGwgb2YgYSBsb3QgbW9yZSBvbiB0aGUgam9iLgpXaGF0IGlmIGl0IGVzY2FsYXRlcz8gV2hhdCBpZiBoZSBhY3R1YWxseSBnZXRzIG1vcmUgYmVsbGlnZXJlbnQsIG9yIGV2ZW4gdmlvbGVudC4gU28gd2hhdCBkaWQgSSBkbz8gSSBhbGxvd2VkIGhpbSB0byBjb250aW51ZSB0byBiZXJhdGUgbXkgd2lmZSBiZWNhdXNlIEkgd2FzIGFmcmFpZCB0byBzYXksICJZb3Uga25vdyB3aGF0LCBsZXQgbm90IGRvIHRoaXMgdG9kYXkuIApHZW5lcmFsbHksIGZvciBjYWxjdWxhdGluZyBzdGF0aXN0aWNzLCB3ZSBhdHRlbXB0IHRvIGdldCBpbmRlcGVuZGVudCByZXN1bHRzLiAKVGhlIGdyaW5kIGlzIHRvbyBkYW1uIHNsb3csIEkgd2FudCB0byBidXkgbW9yZSBtZWNocyBidXQgaXQgdGFrZXMgc28gbG9uZyB0byBncmluZCB0aGVtIHRoYXQgaXQgaGluZGVycyBtZSBmcm9tIGRvaW5nIHNvLlVsamlyYSAgMCBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvVGhhdCBkb2VzbiBtZWFuIGFsbCB0aGF0IG11Y2ggaW1vLiBJdCBjb3VsZCBoYXZlIGJlZW4gaW50ZW5kZWQgZm9yIDIwMTggYnV0IHRoZW4gdGhhdCBkcmFzdGljYWxseSBjaGFuZ2VkIGR1ZSB0byB3aGF0ZXZlciBpc3N1ZXMuIApUaGUgc29mdGN1cCBpcyBub3QgcmV1c2FibGUgYnV0IEkgaGF2ZSBoZWFyZCBvZiBwZW9wbGUgdXNpbmcgaXQgZm9yIHRoZSBlbnRpcmUgZHVyYXRpb24gb2Ygb25lIHBlcmlvZC4gCkVpbiBLaW5kIHNvbGx0ZSBhdWNoIGdhbnogYmVzdGltbXQga2VpbmVuIFp1Z3JpZmYgYXVmIGVpbmUgS3JlZGl0a2FydGUgaGFiZW4uIERpZSBtZWlzdGVuIFNwaWVscGxhdHRmb3JtZW4gaGFiZW4gZGF6dSBhdWNoIGVpbmVuIGFuc3RuZGlnZW4gS2luZGVyc2NodXR6IHVtIHp1IHZlcmhpbmRlcm4sIGRhc3MgZGFzIEtpbmQgZWluZmFjaCBzbyBHZWxkIGF1c2dlYmVuIGthbm4uIEFiZXIgYXVjaCBoaWVyIG11c3MgbWFuIHNpY2ggaGFsdCBpbmZvcm1pZXJlbi4KQ2xpY2sgdGhlIHRvcHR1dG9yaWFsIGNhbGxlZCB0dXRvcmlhbCwuIEFuZCB3aGVudGhleSBhcmUsLiAKWW91IGNhbm5vdCBmYXVsdCB0aGUgY2hpbGRyZW4gZm9yIHdoYXQgdGhlIHBhcmVudHMgYXJlIG9yIGFyZSBub3QgZG9pbmcsIGJlY2F1c2UgdGhlIGJvdHRvbSBsaW5lIGlzLCB0aGUgVG95c2ZvciBUb3RzbW90dG8gaXMgY2hpbGQgZGVzZXJ2ZXMgYSBDaHJpc3RtYXMgYW5kIHRoYXQncyB3aGF0IHdlJ3JlIGFib3V0LiAKRXhjZXB0IGZvciB0aGUgcGFydCB3aGVyZSB5b3UgaGFkIHRvIGNoYW5nZSB5b3VyIGNvbW11dGUuIApXZW5uIGR1IGtvbXBsZXR0IG5ldSBpbiBkZXIgUG9rZXJzemVuZSBiaXN0LCBtdXNzdCBkdSBkaXIsIHZvciBhbGxlbSBhbmRlcmVuLCBkaWUgV2VydCBSZWloZW5mb2xnZSBkZXIgSG5kZSBlaW5wcmdlbi4gClNvdXJjZXMgdGVsbCAxME5ld3MgdGhhdCBoZSBpcyBhY3RpdmVseSBsb2JieWluZyBpbiBDYWxpZm9ybmlhIHRvIHRyeSB0byBwcmV2ZW50IG9ubGluZSBnYW1pbmcuLiAKU2FuZCBIb2xsb3cgU3RhdGUgUGFyayBpcyB0aGUgcHJlbWllciBzcG90IGZvciBldmVudHMsIFN0dWRlYmFrZXJzYWlkLiBOdW1lcm91cyBhZ2VuY2llcyBhbmQgb3JnYW5pemF0aW9ucyBob2xkIGZ1bmRyYWlzZXJzIGFuZCB0cmFpbmluZyBhY3Rpdml0aWVzIHRoZXJlIGV2ZXJ5IG1vbnRoLiBTbyBpdCB3YXMgdGhhdCBzdGF0ZSBwYXJrIG1hbmFnZXIgTGF1cmEgTWVsbGluZyBjYW1lIHVwIHdpdGggdGhlIGlkZWEgb2YgdGhlIHBhcmsgcHV0dGluZyBvbiBpdHMgb3duIGFmZmFpcnRvIGJyaW5nIHBlb3BsZSB0b2dldGhlciB0byBoYXZlIGZ1biBhdCBhbiBldmVudCBleGNsdXNpdmUgdG8gU2FuZCBIb2xsb3cuLiAKIk1hZ25lc2l1bSBpcyBuZWVkZWQgZm9yIG1vcmUgdGhhbiAzMDAgYmlvY2hlbWljYWwgcmVhY3Rpb25zIGluIHRoZSBib2R5LiBJdCBoZWxwcyBtYWludGFpbiBub3JtYWwgbXVzY2xlIGFuZCBuZXJ2ZSBmdW5jdGlvbiwga2VlcHMgaGVhcnQgcmh5dGhtIHN0ZWFkeSwgc3VwcG9ydHMgYSBoZWFsdGh5IGltbXVuZSBzeXN0ZW0sIGFuZCBrZWVwcyBib25lcyBzdHJvbmcuIE1hZ25lc2l1bSBhbHNvIGhlbHBzIHJlZ3VsYXRlIGJsb29kIHN1Z2FyIGxldmVscywgcHJvbW90ZXMgbm9ybWFsIGJsb29kIHByZXNzdXJlLCBhbmQgaXMga25vd24gdG8gYmUgaW52b2x2ZWQgaW4gZW5lcmd5IG1ldGFib2xpc20gYW5kIHByb3RlaW4gc3ludGhlc2lzLiAKRm9yIGV4YW1wbGUsIHlvdSBjYW4gc2F5IHNvbWV0aGluZyB0byB0aGUgZWZmZWN0IG9mICJjaGVjayBvdXQgbXkgVHVtYmxyIGlmIHlvdSB3YW50IHRvIGtub3cgbW9yZSBhYm91dCBtZSBhbmQgbXkgd3JpdGluZyIgYW5kIGluY2x1ZGUgdGhlIGxpbmsgdG8gdGhlIHNpdGUsIGJ1dCB5b3UgY2Fubm90IHNwZWNpZmljYWxseSBzdGF0ZSBhbnl0aGluZyBhYm91dCBkb25hdGlvbnMsIGNvbW1pc3Npb25zIG9yIHNhbGVzIG9uIHRoZSBBcmNoaXZlLi4gCkJ1dCB5b3Uga25vdywgYWxsIG9mIHRoZXNlIGZpbmFuY2Ugc3R1ZmYsIGlmIHlvdSB0aGluayBhYm91dCBpdCwgeW91IGRvbid0IHRoaW5rIGFib3V0IGl0LiBUaGVuIG9uY2Ugc29tZWJvZHkgYnJpbmdzIGl0IHVwLCB5b3UncmUgbGlrZSwgb2ggbXkgZ29kLCBvZiBjb3Vyc2UgdGhleSBzaG91bGQgdG90YWxseSBiZSBkb2luZyB0aGF0Li4gCkkgYW0gZmFpcmx5IGFncmVzc2l2ZSBpbiB0aGUgd2F0ZXIsIGJ1dCB2ZXJ5IGZyaWVuZGx5LiBJIGdldCBtaW5lIHdpdGhvdXQgaG9wZWZ1bGx5IG1ha2luZyB0b28gbWFueSBlbmVtaWVzLiBDb21wbGltZW50IHNvbWVvbmUgb24gdGhlIHdhdmUgdGhleSBqdXN0IGdvdC4gCkluIG15IGNvdW50cnksIEJyaXRhaW4sIGNhcGl0YWxpc20gKGFuZCB0aGVyZWZvcmUgZWR1Y2F0aW9uIGFuZCB0aGUgYWJpbGl0eSBmb3Igd29ya2luZyBwZW9wbGUgdG8gdGFrZSBhIGdyZWF0ZXIgcm9sZSBpbiBydW5uaW5nIHRoaW5ncykgaXMgbXVjaCBtb3JlIGRldmVsb3BlZCBhbmQgdGhpcyB3b3VsZCBsaWtlbHkgYmUgZWFzaWVyIHRvIG1haW50YWluLiBCdXQgd2l0aG91dCB0aGUgcmV2b2x1dGlvbiBiZWluZyBqb2luZWQgYnkgb3RoZXIgY291bnRyaWVzLCB3ZSB3b3VsZCBsaWtlbHkgZmFjZSB0aGUgc2FtZSBidXJlYXVjcmF0aWMgaXNzdWVzLiAwIHBvaW50cyAgc3VibWl0dGVkIDQgbW9udGhzIGFnbwpSRUFEIE9VUiBSVUxFUyBiZWZvcmUgcG9zdGluZyBvciBjb21tZW50aW5nLgpIZSB3YXMgYSBnb29kIGZ1Y2tpbmcgd2FpdGVyIGJ1dCB0aGVyZSB3YXMgbm8gbGlmZSBpbnN1cmFuY2UsIGhpcyBjb3dvcmtlcnMgc2hvd2VkIHVwIHdpdGggJDI1MCB0aGV5J2QgY29sbGVjdGVkIGZvciBteSBtb20sIHRoZSBtYW5hZ2VyIGJyb3VnaHQgZm9vZCBmb3IgdGhlIG1lbW9yaWFsLCBhbmQgbm93IG15IG1vbSBoYXMgYSBtb3VudGFpbiBvZiBiaWxscyBmcm9tIHdoZXJlIGhlIHJvZGUgaW4gYW4gYW1idWxhbmNlIGFuZCBzdGF5ZWQgaW4gSUNVIGZvciB0aHJlZSB3ZWVrcyB3aXRob3V0IGluc3VyYW5jZSBhbmQgd2FzIGRlbmllZCBNZWRpY2FpZC4gCkFsc28gSSBrZWVwIG9mIHdpdGggRGVlcCBMZWFybmluZyBhbmQgTWFjaGluZSBMZWFybmluZyBpbiBnZW5lcmFsIGZvciBwcm9mZXNzaW9uYWwgcmVhc29ucy5UaGF0IHNhaWQsIHRoZSB0ZWNobmlxdWVzIHdlIGludHJvZHVjZSBhcmUgbm90IGluY29tcGF0aWJsZSB3aXRoIGRlZXAgbGVhcm5pbmcuIEkgZGVzY3JpYmUgdGhlbSBtb3JlIGFzIGFuIGFsdGVybmF0aXZlIHRvIE1DVFMuIERlZXAgbGVhcm5pbmcganVzdCBpc24gcGFydGljdWxhcmx5IG5lY2Vzc2FyeSBmb3IgYSBnYW1lIGxpa2UgcG9rZXIuIApDaGVybmlja3kgaGVhcmQgYWJvdXQgdGhlIHNjaG9vbCdzIHNpdHVhdGlvbiBmcm9tIGEgc3R1ZGVudCBoZSBrbm93cyBhbmQgc3VwcG9ydHMsIGhlIHNhaWQuIApQYXRyb25fc2FpbnRfb2ZfTk9QRSAgNzAgcG9pbnRzICBzdWJtaXR0ZWQgMjcgZGF5cyBhZ28KT2JhbWEsIGhhaWxlZCBieSBtYW55IHN1cHBvcnRlcnMgYXMgc29tZW9uZSB3aG8gY2FuIHJ1bGUgZnJvbSB0aGUgbWlkZGxlLCBoYXMgc2hvd24gb25jZSBhZ2FpbiB3aGF0IGEgbXVkZGxlZCBtZXNzIHN1Y2ggYSBzdHJhdGVneSBvZiBjb21wcm9taXNlIGNyZWF0ZXMuIFRoZSBQcmVzaWRlbnQgbmVhcmx5IG5ldXJvdGljIGRlc2lyZSB0byBub3Qgb2ZmZW5kIGFueW9uZSwgYW5kIHRoZXJlYnkgbWFuYWdpbmcgdG8gb2ZmZW5kIGV2ZXJ5b25lLCBtYWtlcyBPYmFtYSBsb29rIGFzIGlmIGhlIGhhcyBhIGJhY2tib25lIG1hZGUgb2YgbWFyc2htYWxsb3dzLCBub3QgZXRoaWNhbCBwcmluY2lwYWxzLiBUaGUgbGF0ZXN0IGRpc2FzdGVyIG92ZXIgZ2F5IHJpZ2h0cyBpcyBhIGNhc2UgaW4gcG9pbnQuCjEgcG9pbnQgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29FdmVyeSBhY2hhcnlhLCB3aGVuIHRoZXkgYXBwZWFyIGluIHRoaXMgd29ybGQsIHByZWFjaCB0aGUgbWVzc2FnZSBhY2NvcmRpbmcgdG8gdGhlIHRpbWUgYW5kIGNpcmN1bXN0YW5jZSBhbmQgdW5kZXJzdGFuZGluZyBvZiB0aGUgcGVvcGxlLiBUaGlzIGlzIGxpa2VuZWQgdG8gYSBidWRkaW5nIGZsb3dlci4gVGhlIHNlZWRzIG11c3QgZmlyc3QgYmUgc293biwgYW5kIHRoZW4gdGhlIHJvb3RzIG11c3QgdGFrZSBob2xkLCBhbmQgdGhlbiB0aGUgZmxvd2VyIG11c3QgYnVkIGFuZCB0aGVuIGZpbmFsbHkgYmxvc3NvbS4gCk15IGhlYWx0aCB3YXMgZ2VuZXJhbGx5IGdvb2QgYnV0IEkgaGFkIG1hbnkgb2YgdGhlIHR5cGljYWwgcHJvYmxlbXMgYXNzb2NpYXRlZCB3aXRoIGxvbmcgdGVybSBvYmVzaXR5LiAKR29ndWV0IEd1em1hbiBsaWtlIG1hbnkgb3RoZXJzIGFzc3VtZWQgdGhhdCB0aGVyZSB3YXMgc29tZSBzb3J0IG9mIGxpZmUgb24gTWFycywgYW5kIHNvIE1hcnMgd2FzIGV4Y2x1ZGVkIGZyb20gdGhlIHByaXplIGZvciBjb250YWN0aW5nIGFuIGV4dHJhdGVycmVzdHJpYWwgY2l2aWxpemF0aW9uLiBUaGUgbm90aWNlIHRoYXQgTWFycyBpcyBleGNsdWRlZCBmcm9tIGNvbnNpZGVyYXRpb24gb2YgdGhlIDEwMCwwMDAgZnJhbmMgcHJpemUsIGFuZCBpbiB0aGUgZXZlbnQgdGhhdCBubyBvbmUgd2lucyBhbm90aGVyIGF3YXJkIHdvdWxkIGJlIGdlbmVyYXRlZCBmcm9tIHRoZSBpbnRlcmVzdCBjb21wb3VuZGVkIGJ5IHRoZSBwcml6ZSBkZXBvc2l0IGV2ZXJ5IGZpdmUgeWVhcnMgdG8gYSBkZXNlcnZpbmcgcGVyc29uIGluIHNjaWVuY2UgYW5kIG1lZGljaW5lLi4gClNvIGlmIHlvdSBjYW4gaG9vayB1cCB3aXRoIG1vZHMgaW4gYSBkZWZhdWx0IG9yIGEgbGFyZ2Ugc3ViLCB5b3UnbGwgZ2V0IGEgcmVhY3Rpb24gc29vbmVyIGFzIHRoZXJlIHdpbGwgYmUgbXVsdGlwbGUgcmVwb3J0cyB3aXRoIGRpZmZlcmluZyB0cmlhZ2UgdGlja2V0cy4gClByb2NsYW1hdGlvbiBkZXMgQ29uc3VscyBkZSBsYSBScHVibGlxdWUgZHUgMjQgZnJpbWFpcmUgYW4gVklJSS4gCk5vLiBZb3UgY2FuIGVpdGhlciB1c2UgYSBkaXNjb3VudCBjYXJkIGxpa2UgZ29vZCBSeCBvciB1c2UgeW91ciBpbnN1cmFuY2UgY2FyZC4gV2l0aCB0aGF0IGJlaW5nIHNhaWQsIHlvdSBzaG91bGQgYmUgYXdhcmUgdGhhdCB0aGVyZSBpcyBwb3NzaWJseSBtb3JlIHNhdmluZ3Mgd2l0aCB5b3VyIGluc3VyYW5jZSBjYXJkLiBGb3IgZXhhbXBsZSwgaWYgYSBwZXJzb24gd2l0aG91dCBpbnN1cmFuY2UgZ2V0cyBhIHByZXNjcmlwdGlvbiBhbmQgZG9lc24gdXNlIHRoZSBnb29kIHJ4IGNhcmQgb3IgdGhlIGluc3VyYW5jZSBjYXJkLCB0aGUgY29zdCBpcyAkMjAwLiBJZiBoZSB1c2VzIGdvb2QgcngsIGl0IG1heSBnZXQgZGlzY291bnRlZCB0byAkMTAwIGJ1dCB3aWxsIG5vdCBjb3VudCB0b3dhcmRzIGhpcyBkZWR1Y3RpYmxlIG9yIG91dCBvZiBwb2NrZXQgbWF4LiBCdXQgaW5zdXJhbmNlIGNvbXBhbmllcyBhbHNvIGhhdmUgZGlzY291bnRzIHRoYXQgYXJlIGNhbGxlZCBVQ1IgKHVzdWFsIGN1c3RvbWFyeSBhbmQgcmVhc29uYWJsZS4pIFdoYXQgdGhpcyBtZWFucyBiYXNpY2FsbHkgaXMgdGhlIGluc3VyYW5jZSBjb21wYW55IHdpbGwgbm90IGxvdCBhIHBoYXJtYWN5IGNoYXJnZSBvdmVyIFggYW1vdW50IGZvciBhIGNlcnRhaW4gcHJlc2NyaXB0aW9uLiBUaGlzIGFtb3VudCBpcyBvZnRlbiB2ZXJ5IGNsb3NlIHRvIHRoZSBnb29kIHJ4IGRpc2NvdW50LCBidXQgYWxzbyBhcHBsaWVzIHRvIHlvdXIgZGVkdWN0aWJsZSBhbmQgb3V0IG9mIHBvY2tldCBtYXguIEEgZ29vZCBydWxlIG9mIHRodW1iIGlzIHRvIGtlZXAgeW91ciBpbnN1cmFuY2UgY2FyZCBvbiBmaWxlIGF0IGEgZmV3IGRpZmZlcmVudCBwaGFybWFjaWVzLiBQcmljZSBjaGVjayB0aGUgZHJ1ZyBpbiBxdWVzdGlvbiBhdCBlYWNoIHBoYXJtYWN5IGJlY2F1c2UgdGhlIGFtb3VudHMgd2lsbCBiZSBkaWZmZXJlbnQuIENvbXBhcmUgdGhhdCBhbW91bnQgdG8gZ29vZCByeCB3aGlsZSBrZWVwaW5nIGluIG1pbmQgaWYgeW91IHVzZSB5b3VyIGluc3VyYW5jZSBjYXJkIGl0IGdvZXMgdG93YXJkcyB5b3VyIGRlZHVjdGlibGUsIG91dCBvZiBwb2NrZXQgbWF4IGFuZCB5b3UgYXJlIHBheWluZyB3aXRoIHRheCBmcmVlIGRvbGxhcnMuIFlvdSBrbm93IHlvdSBkb2luZyBhIGdvb2Qgam9iIHdoZW4geW91IGFyZW4gZ2V0dGluZyBhbGwgb2YgeW91ciBtZWRzIGF0IG9uZSBwaGFybWFjeSBsb2wuCjQsIDIwMTkgZmlsZSBwaG90bywgYW4gT3NjYXIgc3RhdHVlIGFwcGVhcnMgYXQgdGhlIDkxc3QgQWNhZGVteSBBd2FyZHMgTm9taW5lZXMgTHVuY2hlb24gaW4gQmV2ZXJseSBIaWxscywgQ2FsaWYuIApSZWFsbHk/IEkgdGhvdWdodCBUaGUgSGFwcGVuaW5nIHdhcyB3YXkgYmV0dGVyLiBUaGlzIG1vdmllIHRvb2sgbm8gdGltZSB0byBleHBsYWluIGFueXRoaW5nLiBUaGV5IHN0YXJ0ZWQgYSBzb3J0IG9mIGV4cGxhbmF0aW9uIHdpdGggdGhlIG5lcmR5IGJsYWNrIGR1ZGUgYW5kIHRoZSAiZGVtb25zIiBvciB3aGF0ZXZlciB0aGF0IGhlIHdhcyB3cml0aW5nIGFib3V0ICh3aGljaCB3YXMgc3R1cGlkIGVub3VnaCB0aGF0IHRoZXkgY29udmVuaWVudGx5IGdvdCBzdHVjayBpbiB0aGUgaG91c2Ugd2l0aCBhIGd1eSB3aG8ga25ldyBldmVyeXRoaW5nIGFib3V0IHRoZSBhcG9jYWx5cHNlKSwgYW5kIHRoZW4ga2lsbGVkIHRoZSBndXkgb2ZmIGFuZCB3ZW50IG5vd2hlcmUgd2l0aCBpdC4KRHVrZSBpcyB0aGUgYmVzdCB0ZWFtIHNpbmNlIHRoZSAyMDE1IEtlbnR1Y2t5IHRlYW0gdGhhdCBhbG1vc3Qgd2VudCB1bmRlZmVhdGVkLgoxMDUgcG9pbnRzICBzdWJtaXR0ZWQgNyBkYXlzIGFnbwpMJ3VuIGQnZXV4IGVzdCBpbmR1Yml0YWJsZW1lbnQgbGEgbHAoYSkuIFBvdXIgbW9pIHVuIHZyYWkgYmlsYW4gbGlwaWRpcXVlIGMnZXN0IEFwbyBBMSArIEFwbyBCICsgdHJ5Z2x5Y3JpZGVzICsgbHAoYSkgZXQgc2kgbCdBcG8gQTEgZXN0IGJhc3NlIGxhIEIgaGF1dGUgYWluc2kgcXVlIGxhIGxwKGEpLCBpbCB5IGEgc3N1cm1lbnQgdW5lIG1lbmFjZSBkZSB0cm91YmxlcyBjYXJkaW8gdmFzY3VsYWlyZXMgIVF1YW5kIGplIHRlc3RlIGxhIGNvbXBhdGliaWxpdCBkJ3VuIHByb2R1aXQgYXZlYyBsZSBwb3VscyBwb3VyIHVuIHBhdGllbnQsIGplIHBldXggbSdhcGVyY2V2b2lyIGNvbWJpZW4gbGUgcnN1bHRhdCBlc3QgdmFyaSBwb3VyIHVuZSBtbWUgcGF0aG9sb2dpZS4gCkl0IHRoZSBwb2xpdGljYWwgcmV0aXJlbWVudCBhZ2Ugc2hvdWxkIGJlIDY1IGFzIGl0IHdvdWxkIGJlIGluIGEgbm9ybWFsIHdvcmtmb3JjZS4gSSB3b3VsZCBldmVuIGFyZ3VlIGZvciA2MCB0byBrZWVwIHBlb3BsZSBvZiB0aGUgdGltZXMgaW4gcG93ZXIgZHVyaW5nIHRoZWlyIHRpbWUgcmF0aGVyIHRoYW4gd2hhdCBoYXBwZW5pbmcgbm93IHdpdGggYSBidW5jaCBvZiBvbGQgaWdub3JhbnQgb3V0IG9mIHRvdWNoIHdpdGggcmVhbGl0eSBmb29scyBob2xkaW5nIGJhY2sgdGhlIGVudGlyZSBmdWNraW5nIHdvcmxkIGJlY2F1c2UgdGhleSBkb24gd2FudCB0byBsZXQgZ28gb2YgdGhlaXIgd2VhbHRoIGFuZCBwb3dlci4uIApCYXNpY2FsbHksIENhc2lubyBXYXIgaXMgYSBjYXNpbm8gY2FyZCBnYW1lIHdoaWNoIGlzIGJhc2VkIG9uIFdhciAgIGEgcG9wdWxhciBjYXJkIGdhbWUgcGxheWVkIGJ5IGNoaWxkcmVuLiBGaXJzdCwgaGVyZSdzIGEgcXVpY2sgbG9vayBhdCB0aGUgcnVsZXMgb2YgdGhlIFdhciBjYXJkIGdhbWUuIApQb2tlciBpcyBhIGRpZmZpY3VsdCBnYW1lIHRvIG1hc3Rlci4gVGFrZSBoZWVkIG9mIHRoZXNlIHRpcHMgYW5kIGNoZWNrIG91dCB0aGUgbGlua3MgYmVsb3cgdG8gbGVhcm4gdGhlIGJhc2ljcy4gUG9rZXIgaXMgYSBkYXVudGluZyBnYW1lIG9mIHNraWxsLCBzdHJhdGVneSBhbmQgYmxpbmQgbHVjayBidXQgZm9yIGFsbCBwbGF5ZXJzLCB3aGV0aGVyIG5vdmljZSBvciBwcm8sIHRoZXJlIGFyZSBhIGZldyB0aGluZ3MgeW91IGNhbiBkbyBoZWxwIHB1dCB0aGUgb2RkcyBpbiB5b3VyIGZhdm91ci4gCiJUaGVyZSBpcyBhIGdhbWUgb2YgcG9rZXIgZ29pbmcgb24gYmV0d2VlbiBHZXJtYW4gYW5kIEdyZWVrIGdvdmVybm1lbnRzLCIgU3RlcGhlbiBIYXNlbGVyLCB0aGUgZGlyZWN0b3Igb2YgdGhlIEdsb2JhbCBQb2xpY3kgSW5zdGl0dXRlLCB0b2xkIEFsIEphemVlcmEuClRoZW9kb3JlIEl6ZXIsIG9mIE1hcmlhIEZ1cm5hY2UuIFRoZSBwZWEgaHVsbGVyIGF0IHRoaXMgcGxhY2UsIHdoaWNoIGlzIHJ1biBieSB0aGUgQXNwZXJzIENhbm5pbmcgQ29tICBwYW55LCBpcyBpbiBmdWxsIG9wZXJhdGlvbiBhbmQgdGhlIGZhcm1lcnMgYXJlIGJ1c3kgaGFydmVzdGluZyBwZWFzIHdoaWNoIHNlZW0gdG8gYmUgYSBnb29kIGNyb3AgdW5kZXIgdGhlIHVuZmF2b3JhYmxlIHdlYXRoZXIgY29uZGl0aW9ucy4gCllvdXIgbWlzdGFrZSBpbiB0aGlzIGhhbmQgd2FzIG5vdCByZWFkaW5nIHlvdXIgb3Bwb25lbnQgaW4gdGhpcyBsaXZlIHNldHRpbmcuIApHZW5lcmFsIEJlcmF0aSBsb29rZWQgYXQgaGlzIHZpc2l0b3IsIGFzIGhlIG1vdGlvbmVkIHRvIGEgY2hhaXIsIHdpdGggdmVyeSBtdWNoIHRoZSBzYW1lIHN0b255IGluZGlmZmVyZW5jZSB3aXRoIHdoaWNoIGhlIGhhZCByZWdhcmRlZCBoaW0gaW4gdGhlIGJhcmJlcidzIHNob3AgYXQgTmljZS4gVGhlaXIgZXllcyBtZXQgYW5kIHRoZXkgZXhjaGFuZ2VkIG9uZSBsb25nLCBjYWxjdWxhdGluZyBnbGFuY2UuIEZhd2xleSBmZWx0IHRoZSBzcGVsbCBvZiB0aGUgbWFuIGZyb20gdGhhdCBtb21lbnQuIApTbyBpbiB0aGUgZW5kLCB0aGlzIG1vZGVsIGlzIG1vcmUgcHJvZml0YWJsZSB0byBWYWx2ZSB0aGFuIHRvIHRoZSAoYXZlcmFnZSkgY3VzdG9tZXIuIApUcnkgdGFraW5nIGhvcm1vbmFsIHJlcGxhY2VtZW50cy4gSG9ybW9uYWwgaW1iYWxhbmNlcyBjYXVzZSBhIGNoYW5nZSBpbiBhIHdvbWFuJ3MgbWVuc3RydWFsIGN5Y2xlLiAKSSB3YXMgc28gd29ycmllZCBhYm91dCBpdCBiZWZvcmVoYW5kIHRoYXQgSSB0aGluayBJIGFjdHVhbGx5IGVuZGVkIHVwIHByZXBhcmluZyBteXNlbGYgZm9yIHRoZSB3b3JzdCBidXQgbWluZSB3YXNuJ3QgbmVhcmx5IGFzIGJhZCBhcyB5b3VyIGV4cGVyaWVuY2UuIApQaWxvOTByICAxIHBvaW50ICBzdWJtaXR0ZWQgMTAgbW9udGhzIGFnbwpHaXZlbiB3ZSBpbiByL1dvVCwgVGhlIFdheSBvZiBLaW5ncyBpcyB0aGUgYmVnaW5uaW5nIG9mIGFub3RoZXIgZXBpYywgZG9vcnN0b3BwZXIgYmVhc3Qgb2YgYSBzZXJpZXMuIElmIHlvdSByYXRoZXIgZ2V0IGEgdGFzdGUgd2l0aG91dCBjb21taXR0aW5nIHRvIGEgc2VyaWVzLCBXYXJicmVha2VyIGlzIHN0YW5kYWxvbmUgKG1vc3RseSwgc29tZSBjaGFyYWN0ZXJzIGNhbWVvIGluIG90aGVyIGJvb2tzIHVuZGVyIGRpZmZlcmVudCBuYW1lcykuIApEYW5ueSBCcmFuIGEgdm91bHUgc2F2b2lyIGNlIHF1J2VuIHBlbnNlbnQgbGVzIHRyYXZhaWxsZXVzZXMgZHUgc2V4ZSBldCBsZXVycyBjbGllbnRzLi4gCkFuZCBiZXlvbmQgcHJvdmlkaW5nIG1hdGVyaWFsIHNlY3VyaXR5IChhbmQgYnVkZHkgZG8gd2UgaGF2ZSBwbGVudHkgb2Ygd29yayBjdXQgb3V0IGZvciB1cyB0aGVyZSkgdGhlcmUgc28gbWFueSBtb3JlIHVzZWZ1bCB0aGluZ3MgZm9yIHBlb3BsZSB0byBiZSBkb2luZywgcGhpbG9zb3BoeSwgYXJ0LCBzY2llbmNlIGV0YyB0aGF0IHdvcmtpbmcgdGhlbXNlbHZlcyB0byBkZWF0aC4gU2F5aW5nIHBlb3BsZSBhcmVudCBwZXJmZWN0IG5vdyBzbyB3ZSBjYW4gZml4IGFueXRoaW5nIGlzIHByZXR0eSBkdW1iIGltby4gClRoZXkgYXJlIHJlYWxseSBnb29kIGFuZCBvcGVuIGxhdGUuIFNvIHNvbWV0aW1lcyBhZnRlciBhIG5pZ2h0IG9mIGRyaW5raW5nIGFuZCBpdCBpcyBzdGlsbCBhcm91bmQgMmFtIHdlIGNhbGwgYW5kIG1ha2UgYSBydW4gb3ZlciB0aGVyZS4gQWZ0ZXIgMmFtIFRoZW4gSSBrbm93IHBlb3BsZSBtYWtlIHJ1bnMgaW50byBDaGluYSBmb3Igb3Zlcm5pZ2h0ZXJzLkkgY2FuIHByb21pc2UgYSBjbGVhbiByZXB1dGF0aW9uIGJlY2F1c2UgSSBkb24gcmVtZW1iZXIgdGhlIG5hbWVzIG9mIHRoZSBsb2NhdGlvbnMgYnV0IG15IHdpZmUgaGFzIGFsc28gdGFrZW4gbWUgYWNyb3NzIHRoZSBib3JkZXIgaW50byBjaGluYSBmb3IgdGhlIEhVR0Ugc3VwZXIgbWFzc2FnZSBwYXJsb3VzLiAKIkkndmUgc3Bva2VuIHRvIGEgZG9jdG9yIGFib3V0IHRoaXMuIE5vIG9uZSBjYW4gc3RvcCB0aGVpciBwdXBpbHMgZGlsYXRpbmcgaWYgdGhleSBnZXQgZXhjaXRlZCBhdCBhIGdvb2QgaGFuZC4gCkFuZCB0aGVyZSB3ZXJlIG1vcmUgdGhhbiBhIGZldyB0aW1lcyBhbiB1bndpdHRpbmcgcGFydG5lciBvciBzcG91c2UgImFycmFuZ2VkIiBhICJkZSBsdXggZGVlcCB0aXNzdWUgd2l0aCBleHRlbmRlZCBhZGRpdGlvbmFsIHNlcnZpY2VzIi4gCk92ZXJ2aWV3IGZvciBzb2x1bXVzaWNmYWRlCkl0IG5lZWRzIHRvIGJlIG1vcmUgdm9jYWwgYW5kIHNoYXJlIGluZm9ybWF0aW9uLiBXZSBqdXN0IGhvcGUgQ2hhdWRocnkgTmlzYXIgc2hhcmVzIGEgY29uY3JldGUgbmF0aW9uYWwgc2VjdXJpdHkgc3RyYXRlZ3kgd2l0aCB1cyB0b2RheS4gSGUgc2hvdWxkIGhhdmUgYXQgbGVhc3QgZXhwbGFpbmVkIHRoZSBzZWNvbmQgYWlyIHN0cmlrZXMgaW4gYSB3ZWVrLiBJZiBoZSBjYW4gZmluZCB0aW1lIHRvIHBsYXkgY3JpY2tldCBtYXRjaGVzIGhlIGJldHRlciBoYXZlIHRpbWUgZm9yIGhpcyBwcmltYXJ5IGR1dHkgb2YgYnJpZWZpbmcgcGFybGlhbWVudC4gClBsYXllciBnZXRzIGRlYWx0IGEgYmlnIGFjZSAoQUspOyB3aGVuIHRoZSBmbG9wIGFwcGVhcnMgdGhleSBoaXQgbm9uZSBvZiB0aGVpciBob3BlZCBmb3IgY2FyZHMsIHRoZW4gbWFrZSB0aGUgZHJlYWRlZCBtaXN0YWtlIG9mIGNhbGxpbmcgYmlnIGJldHMgc3RpbGwgaG9waW5nIHRvIGhpdCBvbiB0aGUgdHVybiwgYW5kIHRoZXkgbWlzcyB0aGVpciBuZWVkZWQgY2FyZHMgY29tcGxldGVseSBvbiB0aGUgdHVybiBhcyB3ZWxsLCBidXQgZm9yIHNvbWUgc3RyYW5nZSByZWFzb24gY29udGludWUgdG8gY2FsbCBiZXRzLiBUaGV5IGRvbid0IHJlYWxpemUgdGhhdCBvbmx5IGEgaGlnaCBjYXJkIGhhbmQgaXMgcHJldHR5IHdlYWsgd2l0aG91dCBhIHBhaXIsIGZsdXNoIG9yIHN0cmFpZ2h0LCBiZWNhdXNlIGFueSBtYWRlIGhhbmQgYmVhdHMgYSBBSyBoaWdoIGhhbmQuIFRoZSBnb2xkZW4gcnVsZSBpcyBrbm93IHdoZW4geW91J3JlIGJlYXQgYW5kIGZvbGQhIE9mIGNvdXJzZSwgYSBwcm8gaXMgZ29pbmcgdG8gcGxheSBBSywgdG9vICAgYnV0IGhlIGlzIGdvaW5nIHRvIHBvcCBpdCBwcmV0dHkgZ29vZCBwcmUgZmxvcCB0byBnZXQgaGVhZHMgdXAsIHByZWZlcmFibHkgc28gcGVvcGxlIHN1c3BlY3QgaGUgaGFzIGEgcG9ja2V0IHBhaXIsIHRoZW4gbm90aGluZyBoaXRzLCBidXQgaGUgc3RpbGwgaGFzIHRoZSBibHVmZiwgYmVjYXVzZSBoZSBtYWRlIGJlbGlldmVycyBieSBiZXR0aW5nIGhhcmQgcHJlIGZsb3AsIHdpdGggYSBnb29kIHJlcHV0YXRpb24uLiAKSSB3b3VsZG4gZXZlbiBjaGFzZSBzb21lb25lIHdobyBJIHNhdyBkb2luZyBpdCwgbm90IHdvcnRoIGdldHRpbmcgc3RhYmJlZC4gSSB3YXMgYSBzZXJ2ZXIgb25jZSB1cG9uIGEgdGltZSBhbmQgdGhlIGhvc3Rlc3Mgc2VhdGVkIGEgc2luZ2xlIHByb2JhYmx5IGhvbWVsZXNzIGxhZHkgaW4gbXkgc2VjdGlvbi4gClNvIGNhbnQgY29tcGxhaW46IClZZXN0ZXJkYXkgbG9zdCAxLzMgMzUwYmIgV2l0aCB0b3AgdHdvIGFqc3Mgb24gYWpkZDU4IHR3byBjYWxscy4gCkJld2FyZSBvZiBwb2xpY2UgY3JhY2tkb3ducy4gClN0b3V0IHRlbGxzIFJvZ2VyczogIkknbSBzbyBwcm91ZCB0byBiZSB5b3VyIGZhdGhlci4gSSBvbmx5IHdpc2ggeW91ciBtb3RoZXIgd2VyZSBoZXJlIHRvIHdpdG5lc3MgeW91ciBncm93dGggYW5kIGRldmVsb3BtZW50LiAKVGhlIG5hdHVyZSBvZiB0aGVzZSBtZWFzdXJlcyBpcyBkZXRlcm1pbmVkIGJ5IHRoZSBraW5kIG9mIHBvbGl0aWNhbCBjb25zdGl0dWVuY3kgdGhhdCBJc3JhZWxpIGxlYWRlcnMgYWltIHRvIGFwcGVhc2UuIApUaGVyZSBsaXRlcmFsbHkgbm90aGluZyBlbHNlIHRvIGRvIGJ1dCBoaWtlLiAKV2hlbiAxOSBpcyBkZXN0cm95ZWQsIEdlcm8gc2NyYW1ibGVzIGZvciByZWluZm9yY2VtZW50cywgYmFyZWx5IHN1Y2NlZWRpbmcuIApVbmRpYWdub3NlZCBnbHV0ZW4gcHJvYmxlbXMgY29zdCB0aGUgQW1lcmljYW4gaGVhbHRoY2FyZSBzeXN0ZW0gb29kbGVzIG9mIG1vbmV5LiBEci4gUGV0ZXIgR3JlZW4sIFByb2Zlc3NvciBvZiBDbGluaWNhbCBNZWRpY2luZSBmb3IgdGhlIENvbGxlZ2Ugb2YgUGh5c2ljaWFucyBhbmQgU3VyZ2VvbnMgYXQgQ29sdW1iaWEgVW5pdmVyc2l0eSBzdHVkaWVkIGFsbCAxMCBtaWxsaW9uIHN1YnNjcmliZXJzIHRvIENJR05BIGFuZCBmb3VuZCB0aG9zZSB3aG8gd2VyZSBjb3JyZWN0bHkgZGlhZ25vc2VkIHdpdGggY2VsaWFjIGRpc2Vhc2UgdXNlZCBmZXdlciBtZWRpY2FsIHNlcnZpY2VzIGFuZCByZWR1Y2VkIHRoZWlyIGhlYWx0aGNhcmUgY29zdHMgYnkgbW9yZSB0aGFuIDMwIHBlcmVjbnQuIApUaGlzIGlzIGFsbCBmYWxzZS4gWW91IGRvIG5vdCBuZWVkIHRvIGJlIHJpY2ggdG8gZ2FtYmxlLiAKTkVXIFlPUktXaGV0aGVyIGhlYWRlZCB0byBMYXMgVmVnYXMgZm9yIGEgYnVzaW5lc3MgY29udmVudGlvbiBvciBiYWNoZWxvcmV0dGUgcGFydHksIFZlZ2FzIHRocmlsbCBzZWVrZXJzIGFyZSBsZWdlbmRhcnkgaW4gdGhlaXIgcHVyc3VpdCBvZiBmbGFzaCBhbmQgZXhjaXRlbWVudC4KWW91IG5lZWQgdG8gZmluZCB3aGF0IHdvcmtzIGZvciB5b3U7IGlmIHlvdSB3YWtlIHVwIHN0aWZmIG9yIHNvcmUsIGl0IGlzIGxpa2VseSB0aGF0IHlvdSBhcmUgc2xlZXBpbmcgaW4gYSBwb3NpdGlvbiB0aGF0IGlzIGNhdXNpbmcgdGhlIGRpc2NvbWZvcnQuIApXcml0dGVuIGJ5IEFtZXJpY2FuIFVuaXZlcnNpdHkgbGF3IHByb2Zlc3NvciBOYW5jeSBQb2xpa29mZiwgQmV5b25kIChTdHJhaWdodCBhbmQgR2F5KSBNYXJyaWFnZSBleHBsb3JlcyBhIHZhcmlldHkgb2YgbGVnYWwgYW5kIHBvbGljeSBhbHRlcm5hdGl2ZXMgdG8gb3VyIGN1cnJlbnQgbGF3cyBhc3NpZ25pbmcgcmlnaHRzIGFuZCBwcml2aWxlZ2VzIG9uIHRoZSBiYXNpcyBvZiBtYXJpdGFsIHN0YXR1cyBhcyBvcHBvc2VkIHRvIGFjdHVhbCBsaXZpbmcgYXJyYW5nZW1lbnRzLi4gClRoaXMgd2FzIG5vdCBhIHdhbGwgb3IgYmFycmllciBidXQgYSBkZXRlcnJlbnQgb2YgdmVoaWNsZXMgYW5kIEJvcmRlciBQYXRyb2wgYWdlbnRzIHdpdGhpbiBzaWdodCBvZiBlYWNoIG90aGVyLiBJdCB3b3JrZWQgdmVyeSBlZmZlY3RpdmVseS4gVGhlIG51bWJlcnMgb24gdGhlIGNoYXJ0IHNob3cgdGhlIGRyb3AgaW4gaWxsZWdhbCBjcm9zc2luZ3MuIEkgYmVsaWV2ZSB0aGlzIHByb2R1Y2VkIHRoZSBudW1iZXJzIHRoYXQgb3JpZ2luYWxseSBzdXBwb3J0ZWQgYnVpbGRpbmcgYSBzb2xpZCB3YWxsLgpOb3J3ZWdpYW4gcG9saXRpY2lhbiB0byB2aXNpdCBTYXNrYXRjaGV3YW4KRG9uIHRocm93IG91dCB0aG9zZSBicmVha2Zhc3QgbGVmdG92ZXJzISBGcmVlemUgdGhlbSBmaXJzdCBvbiBhIGJha2luZyBzaGVldCBpbiBhIHNpbmdsZSBsYXllciwgdGhlbiB3cmFwIHRoZW0gaW4gcGxhc3RpYyB3cmFwIHdpdGggYSBsYXllciBvZiB3YXggb3IgcGFyY2htZW50IHBhcGVyIGluIGJldHdlZW4gZWFjaDsgc2xpcCB0aGVtIGludG8gZnJlZXplciBwcm9vZiwgemlwcGVyIHRvcCBiYWdzOyBhbmQgZnJlZXplLiAKSSd2ZSBoZWFyZCBub3RoaW5nIGJ1dCBjb21wbGFpbnRzIGZyb20gbXkgZmVtYWxlIGZyaWVuZHMgdGhpcyB5ZWFyIGFib3V0IHRoaXMgY29taW5nIFN1cGVyYm93bC4gSXQncyBibGFoIGJsYWggU3VwZXJib3dsLCBibGFoIGJsYWggdGhlIFBhdHJpb3RzLCBibGFoIGJsYWggdGhlIEdpYW50cywgYmxhaCBibGFoIHRoZSBHaWFudCBQYXRyaW90cyBvciBXSEFURVZFUiEgQW5kIGFsbCBteSBmcmllbmRzIGFyZSBqdXN0IHRyeWluZyB0byBmaWd1cmUgb3V0IHdheXMgb2YgZ2V0dGluZyBvdXQgb2Ygd2F0Y2hpbmcgdGhlIGRhbW4gZ2FtZS4KSSBiZWVuIG9uIGEgbG93IGRvc2Ugb2Ygc3Vib3hvbmUgZm9yIHRoZSBwYXN0IHR3byB5ZWFycyAoY3VycmVudGx5IGF0IDAuNW1nL2RheSwgZG93biBmcm9tIDJtZyksIHdoaWNoIGhhcyBzdWNjZXNzZnVsbHkgc3VwcHJlc3NlZCBteSBzeW1wdG9tcywgYnV0IEkgdHJ5aW5nIHRvIHRhcGVyIG9mZiBjb21wbGV0ZWx5LCBhbmQgbXkgUkxTIGlzIG1ha2luZyBhIGhlbGwgb2YgYSBjb21lYmFjaywgc29tZXRpbWVzIGFjY29tcGFuaWVkIGJ5IHJlc3RsZXNzIGFybXMuIApUaGV5IGFsbCByZXF1aXJlIGRpZmZlcmVudCBhbW91bnRzIG9mIGV4cGVyaWVuY2UuIApBIGJhYnkgbGl2aW5nIGluIGEgMXgxIGJveCBmb3IgNiB3ZWVrcyBhbmQgbm8gZGVhdGguIEV2ZW4gZm9yY2luZyB0aGVpciBzdGF0cyBkb3duIHRvIHJlZCBhbmQgc3RpbGwgbm8uLiAKUHJvYmFibHkgZGlkbiBldmVuIG5lZWQgdG8gY2hhbmdlIHRoZW0gYnV0IGZpZ3VyZWQgd2hhdCB0aGUgaGVsbC4gU3RpbGwgbm8gY2FyYm9uIHRyYWNraW5nLiAKSW4gb3RoZXIgd29yZHMgeW91ciBwaHlzaWNpYW4gYWxyZWFkeSBrbm93cyBpdCBhbGwuIApOZXZlciBwbGF5IGEgaGVybyB5b3UncmUgbm90IGNvbWZvcnRhYmxlIHdpdGggYW5kIG5ldmVyIGF0dGVtcHQgYSBzdHJhdCB0aGF0IHlvdSBkb24ndCB1bmRlcnN0YW5kLiAKKE1haW4gcmVhc29uKTogZ2V0dGluZyBzcXVlZXplZCBzdWNrcywgYW5kIHNub3dpZSBkb2VzIGl0IHRvIGl0c2VsZiBvZnRlbi4gSXQgYWxzbyBoYXBwZW5zIGEgbG90IGluIDUwTkwrIG9ubGluZSBnYW1lcy4gTm90aWNlIGhvdyBpdCBjYWxscyBwcmV0dHkgd2lkZSB3aGVuIGl0IGNsb3NpbmcgdGhlIGFjdGlvbiBpbiB0aGUgQkIsIGV2ZW4gZnJvbSBzb21ldGhpbmcgbGlrZSBhbiBVVEcgb3Blbi4gSWYgdGhlcmUgd2FzIG5vIHNxdWVlemluZywgc25vd2llIHdvdWxkIGNhbGwgYXQgbGVhc3QgYXMgd2lkZSBmcm9tIHRoZSBCVSBhcyBmcm9tIHRoZSBCQi4gVGhpcyBpcyBhIHdheSB5b3UgY2FuIGFkanVzdCB0byBMTFNOTCBnYW1lcywgd2hlcmUgc3F1ZWV6aW5nIGlzbiB2ZXJ5IGNvbW1vbi4KSSBjYW4gc2F5IHdpdGggYSBoaWdoIGRlZ3JlZSBvZiBjb25maWRlbmNlIHRoYXQgaGVyIGJvZHkgcG9zaXRpdml0eSB0YWxrIGFuZCBjYWxsaW5nIHBlb3BsZSBza2lubnkgYml0Y2hlcyBtYXNrcyBhIHdob2xlIGxvYWQgb2YgYm9keSBpbWFnZSBpc3N1ZXMgYW5kIHNlbnNpdGl2aXR5LiBTaGUga25vd3Mgc2hlIGZhdCwgc2hlIGtub3dzIGEgbG90IG9mIHBlb3BsZSB3aWxsIG5vdCBsaWtlIGhlciBmb3IgdGhhdCwgc28gc2hlIHByb2plY3RzIHRoZSBjb25maWRlbmNlIHdoaWxlIHNlY3JldGx5IG5vdCBsaWtpbmcgaGVyIGJvZHkgdGhhdCBtdWNoLiAKWW91IG5lZWQgdG8gdW5kZXJzdGFuZCwgdGhpcyBjaGFuZ2VzIGV2ZXJ5dGhpbmcgYWJvdXQgd2hvIGhlIGlzLCBhYnNvbHV0ZWx5IGV2ZXJ5dGhpbmcuIApNYW5jdXIgT2xzb24sIDE5NjcsIFRoZSBMb2dpYyBvZiBDb2xsZWN0aXZlIEFjdGlvbi4gQW55IGNvbGxlY3RpdmUgYWN0aW9uIENBTk5PVCBjb252aW5jZSBwZW9wbGUgdG8gZ2V0IG9uIGJvYXJkIHdpdGhvdXQgb2ZmZXJpbmcgc3BlY2lmaWMgYmVuZWZpdHMgKHRob3NlIHRoYXQgY2FuIGJlIGxpbWl0ZWQgdG8gc3Vic2NyaWJlcnMpLCBhbmQgYSB1bmlvbiBjYW5ub3QgcHJvdmlkZSB0aG9zZSBiZW5lZml0cyB3aXRob3V0IGdldHRpbmcgZW5vdWdoIHBlb3BsZSBvbiBib2FyZCBmaXJzdC4gQnkgc2F5aW5nICJBIHVuaW9uIHRoYXQgY2Fubm90IGVudGljZSBlbm91Z2ggcGVvcGxlIG9uIGJvYXJkIGRlc2VydmVzIHRvIGZhaWwiLCB5b3UgYXJlIHNheWluZyAiRXZlcnkgdW5pb24gZGVzZXJ2ZXMgdG8gZmFpbCIuCkFsbCBzYWlkLCB0aGUgYmVzdCB0b29sIGlzIGZvciBib3RoIHBhcnRpZXMgdG8gaGF2ZSBhIG11dHVhbCBpbnRlcmVzdCBpbiBwcm90ZWN0aW5nIElQIHJpZ2h0cywgWmhhbyBzYWlkLiBNb25pdG9yIHRoZSBlbmZvcmNlbWVudCBvZiB0aG9zZSBydWxlcz8gQXJlIHlvdSBnb2luZyB0byBjaGVjayBldmVyeSBzaW5nbGUgZmFjdG9yeT8gQXJlIHlvdSBnb2luZyB0byBiZSB0aGUgZGVmYXVsdCBwb2xpY2Ugc3RhdGlvbiBpbiBDaGluYT8iIHNoZSBhc2tlZC4gIkkgZG9uJ3QgdGhpbmsgc28uIApEaXNjb3ZlcmluZyB0aGUgYnJhdmUgbmV3IHdvcmxkIHdoaWNoIHNlZW1lZCB0byBiZSB0aGUgcHJvbWlzZSBvZiBpbmRlcGVuZGVuY2UgaXMgYSB2b3lhZ2Ugd2UgbmV2ZXIgdW5kZXJ0b29rLiBJdCBpcyBub3QganVzdCBhYm91dCBmdWVsIHByaWNlcywgc3VnYXIsIGluZmxhdGlvbiBpbiBnZW5lcmFsLCBvciB0aGUgYnJlYWtkb3duIG9mIGxhdyBhbmQgb3JkZXIuIApJbiBudXJzaW5nIHNjaG9vbCB3ZSB0YWxrZWQgYWJvdXQgTVJTQSBhbmQgaG9zcGl0YWwgYWNxdWlyZWQgaW5mZWN0aW9ucy4gCiJGcmVzaCB5ZXQgZmFtaWxpYXIsIHRoZSBnYW1lIG1lY2hhbmljIGdpdmVzIHVzIGFuIG9wcG9ydHVuaXR5IHRvIGFwcGVhbCB0byB0aGUgd2lkZXN0IGNyb3NzIHNlY3Rpb24gb2YgcGxheWVycywiIHNhaWQgQmFyb24sIGdlbmVyYWwgbWFuYWdlcnMgZm9yIEVsZWN0cm9uaWMgVGFibGUgU3lzdGVtcy4KVGhlcmUncyBhIHJlYWxseSBmYXNjaW5hdGluZyBtaW5pIGRvY3VtZW50YXJ5IG9uIE5ldGZsaXggY2FsbGVkICJleHBsYWluZWQiIGFuZCB0aGV5IGhhdmUgYW4gZXBpc29kZSBjYWxsZWQgInRoZSBmZW1hbGUgb3JnYXNtLiIgSXQgdWx0aW1hdGVseSB0b3VjaGVzIHRoZSBleGFjdCBwb2ludHMgdGhhdCB5b3UgZGVzY3JpYmUuIFdoeSBhcmUgd2Ugc28gcXVpY2sgdG8gc2F5IHRoYXQgd2hlbiBhIG1hbiBvcmdhc21zIHRoYXQgc2V4IGlzIG92ZXI/IEhvdyBjb21lIGl0IGlzIHRoYXQgc2V4IGlzIG92ZXIgd2hlbiBib3RoIHBhcnRuZXJzIG9yZ2FzbT8gSSBkb24ndCB0aGluayBpdCdzIGFuIGVhc3kgYW5zd2VyIG9yIGZpeC4KU2h1dCBoaXMgaGVkZ2UgZnVuZCBhZnRlciBpbnNpZGVyIHRyYWRpbmcgY2hhcmdlcy4gIk5vdyBtYW5hZ2VzIGhpcyBvd24gZm9ydHVuZSwiIHNheXMgRm9yYmVzLjUwLiAKVGhhdCBzYWlkIHlvdSBoYXZlIGEgdG9uIG9mIDh4LCBhbmQgYSBmZXcgZmx1c2hlcyBoZXJlIGFuZCB3ZSBjYW50IGNhbGwgYWxsIG9mIHRoZSA4eC4gClBhZGRvY2ssIHdobyBraWxsZWQgaGltc2VsZiwgYWN0ZWQgYWxvbmUsIHBvbGljZSBoYXZlIHNhaWQuVGhlIGhvc3Qgc2FpZCB0aGVyZSB3YXMgb25lIGluY2lkZW50IHllYXJzIGFnbyBpbiB3aGljaCBQYWRkb2NrIHllbGxlZCBhdCBoaW0gb3ZlciBsYXRlIGx1Z2dhZ2UsIHNvbWV0aGluZyB0aGUgaG9zdCB0aG91Z2h0IHBlY3VsaWFyLiBXaGVuIGFza2VkIHRvIHNwZWNpZnkgd2h5IGhlIHRob3VnaHQgUGFkZG9jayB3YXMgb2RkLCB0aGUgaG9zdCBzYWlkOiAiSGUgd2FzIGp1c3Qgd2VpcmQuIkEgaG9zdCBhdCBhbm90aGVyIGNhc2lubyBzYWlkIFBhZGRvY2sgd2FzICJraW5kIG9mIGFuIGludHJvdmVydC4iVGhhdCBob3N0IHNhaWQgUGFkZG9jayB3YXMgYSBoaWdoIGVuZCBnYW1ibGVyIHdobyBrZXB0IHRvIGhpbXNlbGYgYW5kIG5ldmVyIHJlcXVlc3RlZCBhbnkgcHJvc3RpdHV0ZXMgb3IgZHJ1Z3MuIApJZiBJIHdlcmUgZGVmZW5kaW5nIGhpbSwgSSB0ZWxsIGhpbSBubyBmdWNraW4gd2F5IGhlIGdldHRpbmcgb24gdGhlIHN0YW5kIG9ubHkgdG8gZ2V0IGRlc3Ryb3llZCBvbiBjcm9zcyBsb2wuIApUaGlzIHdhcyB0byBiZSBteSAzcmQgb3IgNHRoIGhpa2luZyB0cmlwIGV2ZXIsIGhpcyAybmQgb3IgM3JkIGFuZCB0aGUgZnJpZW5kcyAxc3QuIApUcmllZCB3b3JraW5nIHdpdGggYW5vdGhlciByZWFsdG9yIHRvIG1heWJlIHNjb3JlIGFub3RoZXIgZGVhbC4gCk9wZXJhdGlvbnMgc3VzcGVuZGVkIGF0IEJ1cnRvbiBwb2tlciByb29tIGFtaWQgYWxsZWdhdGlvbnMgb2YgcGF5CkhvdyBtYW55IHJhY2VzIGludG8gdGhlIHNlYXNvbiB0aGV5IGRvIHRoYXQgZm9yIGFuZCBob3cgdGhleSBnbyBhYm91dCBpdCBpcyB0byBiZSBzZWVuLCBidXQgdGhlIG51bWJlciBvZiBmYWN0b3JzIHRoYXQgbmVlZCB0byBiZSBhZGRyZXNzZWQgdG8gZXhwbGFpbiB0aGUgdGlyZSBzeXN0ZW0gZm9yIHRoaXMgeWVhciBkbyBtYWtlIGl0IG1vcmUgY29tcGxleCB0byBleHBsYWluLiAKU2hlIGFkbWl0cyB0aGF0IHdoZW4gc2hlIGZpcnN0IEdvb2dsZWQgdGhlIHN0b3J5LCBzaGUgZm91bmQgaXQgaW1wb3NzaWJsZSBub3QgdG8ganVkZ2UgaGVyLiAKVGhlIG1vZHMgZGlkIHRoZWlyIGJlc3QgdG8gcHJldmVudCB0aGF0IHN0dWZmLiAKVGhpcyBpcyBhbm90aGVyIGluc3RhbGxtZW50IGluIGEgc2VyaWVzIG9uIHB1dHRpbmcgY29sb3IgaW50byB3aGF0IHdlIG5vcm1hbGx5IHdvdWxkIHRoaW5rIG9mIGluIHRlcm1zIG9mIGJsYWNrIGFuZCB3aGl0ZSBwaG90b3MgKGFuZCBtb3ZpZXMpIHRoZSByZXN1bHRzIGFyZSBzb21ldGltZXMgc3VycHJpc2luZyBhbmQgdW51c3VhbC4gKFRoZXJlIGFyZSBwb3N0cyBoZXJlIG9uIHRoZSBjb2xvciBzY2hlbWVzIG9uIDE5MzAgc2Nob29scm9vbXMgaW4gQ2xldmVsYW5kLCBhaXIgcmVjb24gaW4gY29sb3IsIGNvbG9yIGRpc3NvbmFuY2UgaW4gMTk0MCBiYXRocm9vbXMsIGNvbG9ybGVzcyBjb2xvciBjaGFydHMsIGFuZCBvdGhlciBzdWNoIGJpdHMsIGFsbCBmaW5kYWJsZSBieSBlbnRlcmluZyAiY29sb3IgYmxhY2sgYW5kIHdoaXRlIiBpbnQgaGUgR29vZ2xlIHNlYXJjaCBib3guKSBUaGUgcGFtcGhsZXQgYmVsb3cgd291bGQgc291bmQgbGlrZSBhIHNpbXBsZSBhbmQgYmFkbHkgdGl0bGVkIHB1YmxpY2F0aW9uIChIb3cgdG8gUGxhbiBXYWxscyB0aGF0IFBsZWFzZSwgYnkgQXJtc3Ryb25nIENvcmsgUHJvZHVjdHMsIDE5MzgpIGlmIHlvdSB3ZXJlIGp1c3QgcmVhZGluZyBhYm91dCBpdCBpbiBhIGNhdGFsb2csIGJ1dCBpbiByZWFsIGxpZmUsIGl0IGlzIGEgc3ltcGhvbnkgb2YgZXhwbG9kaW5nIGFuZCB1bmV4cGVjdGVkIGNvbG9yLiBJIHRob3VnaHQgYWJvdXQgYW5kIHNlZW4gc28gbWFueSBvZiB0aGVzZSBpbWFnZXMgaW4gbHVzY2lvdXMgZ3JheXMgYW5kIHN0YXJrIGJsYWNrcyB0aGF0IGl0IGlzIGRpZmZpY3VsdCB0byB0aGluayBvZiB0aGVzZSBzYW1lIGltYWdlcyBpbiBnaWdhbnRpYyBjb2xvci4gCkkgdGhpbmsgaXQgb24gdGhlIGludGVydmlld2VyIHRvIHRhaWxvciB0aGVpciBxdWVzdGlvbnMgdG8gdGhlIGNhbmRpZGF0ZS4gCkl0IG11Y2ggZWFzaWVyIHRvIHB1dCB3b3JkcyBpbiBteSBtb3V0aCBhbmQgY2FsbCBtZSBuYW1lcyB0aGVuIGRlYmF0ZSBhIHZlcnkgc2ltcGxlIHBvaW50LiAKT25seSBpZiBJIGhhdmUgbXlzZWxmIHVuZGVyIGNvbnRyb2wgY2FuIEkgdGhlbiBmb2N1cyBvbiBhbGwgb2YgdGhlIG90aGVyIHJvYWQgaGF6YXJkcy4uIApCdXQgSSBzdGlsbCBzZWUgZ3JvdXBzIGluIHhwIHNwb3RzIGFsbCB0aGUgdGltZSwgdXN1YWxseSBwZW9wbGUgaW4gdGhlIHNhbWUgTGlua3NoZWxsLiAKVGhlIGtleSBpcyB0byBrZWVwIHlvdXIgaGlwcyBmcm9tIG1vdmluZy4gCkJyYWQgUmljaGFzb24uIApUaGUgdGhpcmQgaW5zdGFsbG1lbnQgaW4gdGhlICJIb3cgVG8gVHJhaW4gWW91ciBEcmFnb24iIHNlcmllcyBncm9zc2VkIGFuIGVzdGltYXRlZCAkMzAgbWlsbGlvbiB0aGlzIHdlZWtlbmQgYWNjb3JkaW5nIHRvIFVuaXZlcnNhbCBQaWN0dXJlcyBvbiBTdW5kYXksIGJyaW5naW5nIGl0cyBkb21lc3RpYyB0b3RhbCBqdXN0IHNoeSBvZiAkMTAwIG1pbGxpb24uIFdvcmxkd2lkZSwgdGhlIERyZWFtV29ya3MgQW5pbWF0aW9uIGZpbG0gaGFzIG1hZGUgb3ZlciAkMzc1IG1pbGxpb24uIEluIENoaW5hIGFsb25lIGl0IG9wZW5lZCBpbiBmaXJzdCBwbGFjZSB3aXRoICQzMy40IG1pbGxpb24uCkxvb2sgYXQgaG93IG11Y2ggb2Ygb3VyIGluZm9ybWF0aW9uIHdlJ3ZlIGFscmVhZHkgZ2l2ZW4gdGhlc2UgY29tcGFuaWVzOiBJZiB0aGUgQ0lBIHRyYWNrZWQgdXMgc28gY2xvc2VseSBhcyB0byBvZmZlciB1cyBhIGRlYWwgb24gZmxpZ2h0cyB0byBPcmxhbmRvIDEwIG1pbnV0ZXMgYWZ0ZXIgd2UgY2hlY2tlZCBvdXQgdGhlIERpc25leSBXb3JsZCBXZWIgc2l0ZSwgd2UnZCBwYW5pYy4gCkluIDE5MTQsIENvbmdyZXNzIHBhc3NlZCB0aGUgRmVkZXJhbCBUcmFkZSBDb21taXNzaW9uIEFjdCwgYmFubmluZyB1bmZhaXIgY29tcGV0aXRpb24gbWV0aG9kcyBhbmQgZGVjZXB0aXZlIGFjdHMgb3IgcHJhY3RpY2VzLiBUaGUgQ2xheXRvbiBBY3Qgd2FzIHBhc3NlZCB0aGUgc2FtZSB5ZWFyLCBhZGRyZXNzaW5nIHNwZWNpZmljIHByYWN0aWNlcyB0aGUgU2hlcm1hbiBBY3QgZG9lcyBub3QgcHJvaGliaXQuIApFdmVuIGlmIHlvdSBkZWNpZGUgeW91J2QgcmF0aGVyIHB1cnN1ZSBhIHRyYWRlLCBsZWF2aW5nIHRoZSBtaWxpdGFyeSB3aXRoIGFuIGFzc29jaWF0ZXMgZGVncmVlIG1ha2VzIHlvdSBhIG1vcmUgY29tcGV0aXRpdmUgam9iIHNlZWtlciB0aGFuIHRob3NlIHNpbWlsYXIgdG8geW91IHdobyBkb24ndCBoYXZlIGl0LgpBZnRlciBTb3V0aCBBZnJpY2Egd2VyZSBib3dsZWQgb3V0IGZvciA1MDAsIHdpdGggYSBsZWFkIG9mIDE2NiwgS2FsbGlzIHdhcyBzZWNvbmQgbGFzdCBvdXQgb2YgdGhlIGNoYW5nZSByb29tLiBIZSB3YXJtZWQgdXAgYW5kIHRvb2sgaGlzIHBsYWNlIGF0IHNlY29uZCBzbGlwIHdoZXJlIG5vdGhpbmcgY2FtZSBoaXMgd2F5LiBJdCdzIGxpa2VseSB0byBiZSBpbiB0aGF0IHBvc2l0aW9uIHRoYXQgaGUgd2lsbCBzdGFuZCBvbiB0aGUgZmluYWwgZGF5LgpFQVNZSE9URUwgTE9ORE9OIFZJQ1RPUklBCk9uIHRoZSBvdGhlciBoYW5kIGFscGhhIGluZGl2aWR1YWxzIGFyZSBvZnRlbiB2ZXJ5IGVhc2lseSAic3VjY2Vzc2Z1bCIgYnV0IHRoZXkgZ2V0IGxvc3QgaW4gdGhlaXIgbGl2ZXMgYmVjYXVzZSB0aGV5IGdldCBwb3NzZXNzZWQgYnkgc29tZSBldmlsIHNwaXJpdC4gU28gdGhleSBhdHRhaW4gYSB2ZXJ5IGxvdyBsZXZlbCBvZiBzZWxmIGNvbnNjaW91c25lc3MuIApUbDtkciBPUCBpcyBub3QgcHJvdmlkaW5nIGFkdmljZSBzbyBtdWNoIGFzIGEgZGVzY3JpcHRpb24gb2YgTE9MLiAKV2UgYXJlIHdoYXQgd2UgYXJlIGFuZCBpZiB3ZSBuZWVkIGFuIEFnIHNjaG9vbCB0byBwcm92aWRlIG91ciBmdXR1cmUgZmFybWVycyBhbiBlZHVjYXRpb24gSSByYXRoZXIgaGF2ZSB0aGF0IHRoYW4gd29ycnkgYWJvdXQgQWNhZGVtaWMgUmFua2luZ3MgYnV0IHJlYWxseSBpZiB3ZSBkaWRuIGhhdmUgdGhhdCB3ZSBwcm9iYWJseSBiZSBhIGxvdCBoaWdoZXIuIEkgaW1hZ2luZSB0aGF0IHdlaWdocyB1cyBkb3duIHF1aXRlIGEgYml0LiBXZSBoYXZlIGEgcmVhbGx5IGNvbXBldGl0aXZlIGVuZ2luZWVyaW5nIHNjaG9vbCwgYSB0b3AgVmV0IHNjaG9vbCBpbiB0aGUgd29ybGQgbm90IGp1c3QgdGhlIFVTLCBhbmQgYSBsb3Qgb2Ygb3VyIGJ1c2luZXNzIHByb2dyYW1zIGFuZCBkZXNpZ24gcHJvZ3JhbXMgYXJlIGdvb2QuIApMaWtlIGFjdHVhbGx5IGhhdGUuIApUaGUgY29tcGFueSBjdXJyZW50bHkgZW1wbG95cyBhYm91dCAxMCwwMDAgcGVvcGxlIGluIHRoZSBVbml0ZWQgS2luZ2RvbSwgbW9yZSB0aGFuIHRoZSA4LDUwMCBvciBzbyBzdGF0aW9uZWQgaW4gQ2FuYWRhLiBIb3dldmVyLCB0aGUgYWR2YW50YWdlcyBvZiBtb3ZpbmcgYWJyb2FkIGFyZSB1bmNsZWFyLgpGYWlyZmllbGQncyBnYW1ibGVycyBsb3N0IG1vcmUgdGhhbiAkNDQyIG1pbGxpb24gb24gcG9rZXIgbWFjaGluZSB0dXJub3ZlciBvZiAkNi44IGJpbGxpb24sIHRoZSBmaWd1cmVzIHNob3cuIFdvbGxvbmdvbmcncyBnYW1ibGluZyBsb3NzZXMgd2VyZSBtb3JlIGRpc3BlcnNlZCwgd2l0aCAyNjE0IHBva2VyIG1hY2hpbmVzICBhIGZpZ3VyZSBzZWNvbmQgb25seSB0byBGYWlyZmllbGQncyAzMzU3LiBFYWNoIExHQSB0aGF0IGxvc3QgbW9yZSB0aGFuIFdvbGxvbmdvbmcgd2FzIGluIHdlc3Rlcm4gU3lkbmV5LCBleGNlcHQgZm9yIFd5b25nIGF0IE5vLiAKSG93ZXZlciwgaGUgY29kZWQgdGhlIG1lc3NhZ2UgdGhhdCBpbiBoaXMgaGVhcnQsIGhlIHJlYWxseSBkaXNhZ3JlZXMgd2l0aCB0aGlzIG1vdmUgd2hlbiBoZSBzdWJ0bGVseSBzYXlzIGhlIGNhbiBndWFyYW50ZWUgd2hhdCB0aGlzIGlzIGdvaW5nIHRvIGRvIHRvIHRoZSBzZWN1cml0eTouIApGaXNoZGVycCB1CkludHJhbXVyYWwgU3BvcnRzIHByb3ZpZGVzIHRoZSBVQ0xBIGNvbW11bml0eSBhbiBvcHBvcnR1bml0eSB0byBwYXJ0aWNpcGF0ZSBpbiBvcmdhbml6ZWQgc3BvcnRzIGFuZCByZWNyZWF0aW9uYWwgYWN0aXZpdGllcy4gQSB2YXJpZXR5IG9mIGxlYWd1ZXMsIHRvdXJuYW1lbnRzLCBhbmQgc3BlY2lhbCBldmVudHMgYXJlIG9mZmVyZWQgZWFjaCBxdWFydGVyLiBJbmRpdmlkdWFscyBtYXkgcmVnaXN0ZXIgYW4gZW50aXJlIHRlYW0sIG9yIGZvciBtb3N0IGV2ZW50cywgcmVnaXN0ZXIgYXMgYSBmcmVlIGFnZW50IGFuZCBiZSBtYXRjaGVkIHdpdGggb3RoZXIgZnJlZSBhZ2VudHMgdG8gZm9ybSBhIHRlYW0uIFBhcnRpY2lwYXRpb24gaXMgbW9yZSBsZWlzdXJlbHkgdGhhbiBjbHViIHNwb3J0cywgYW5kIHByb21vdGVzIGFuIGFjdGl2ZSBsaWZlc3R5bGUgYW5kIGZyaWVuZGx5IGNvbXBldGl0aW9uIGluIGEgZnVuLCBzYWZlIGVudmlyb25tZW50LgpDaGlreXRhbzAgdQpBIFJldmlldyBvZiB0aGUgSG90dGVzdCBDYXNpbm8gUG9rZXIgQ2hpcHMgU2V0CkluIGZhY3QsIHdlIHNvIHJlZnVzZSB0byBhY2NlcHQgdGhhdCB0aGVzZSBib2RpZXMgZXhpc3QgdGhhdCBtb3N0IGhvc3BpdGFscyBpbiB0aGUgVVMgd2lsbCB0cmVhdCBpbnRlcnNleCBiYWJpZXMgYXMgYSBtZWRpY2FsIGVtZXJnZW5jeSwgb2Z0ZW4gZm9yY2luZyBwYXJlbnRzIHRvIGRlY2lkZSBvbiBhIHNleCBhbmQgYWxsb3cgdGhlaXIgaW5mYW50IHRvIGJlIHN1cmdpY2FsbHkgYWx0ZXJlZCBiZWZvcmUgdGhleSBldmVuIGxlYXZlIHRoZSBob3NwaXRhbC4uIApQZW9wbGUgYnV5IEJpdGNvaW4gYXMgYW4gaW52ZXN0bWVudCBhbmQgdGhleSdyZSByaWdodCB0b28uIEFnYWluLCBJIHdvdWxkIGVuY291cmFnZSB5b3UgdG8gdGFrZSBhIGNsb3NlciBsb29rIGF0IHRoZSB0ZWNobm9sb2d5LiAKTXkgQWR2aWNlIHRvIEFydCBGaWVycm8KT1A6IE1hIEkgZG8gYXBwcmVjaWF0ZSBpdCBidXQgSSBjYW5ub3QgcHJvZmVzc2lvbmFsbHkgY2xlYW4gYSBob21lIG9mIHRoYXQgc2l6ZSBmb3IgdGhhdCBhbW91bnQuIFllcywgbGlmZSB0aHJldyBhIG1ham9yIGN1cnZlYmFsbCBhdCBteSBkYXVnaHRlciBhbmQgSSBhbmQgaGF2aW5nIHRvIHBheSBmb3IgdGhlIGVub3Jtb3VzIG1lZGljYWwgY29zdHMgaGFzIHJlYWxseSBwdXQgbWUgaW4gYSB2ZXJ5IHRvdWdoIHNwb3QuIApNZWFud2hpbGUsIENoYXJsZXMgcmV0dXJuZWQgdG8gaGlzIG1pc3RyZXNzICd3aGVuIGl0IHdhcyBjbGVhciB0aGUgbWFycmlhZ2UgaGFkIGJyb2tlbiBkb3duJy4gCkkgcmVhZCBvbiBBbWF6b24gZm9ydW1zIHRoYXQgdGhpcyBkb2VzIG5vdCB3b3JrLiBJZiBhIHF1YWxpZmljYXRpb24gcmVxdWlyZXMgc29tZXRoaW5nIGxpa2UgIkRpZCBIaXQgRCBjYW4gYmUgMSIsIHRoZSBNZWNoYW5pY2FsIFR1cmsgc3lzdGVtIHdpbGwgbG9jayBvdXQgcGVvcGxlIHRoYXQgZG9uIGhhdmUgYW55IHZhbHVlIGluIHRoYXQgcXVhbGlmaWNhdGlvbi4gSW4gb3RoZXIgd29yZHMsIG5ldyB3b3JrZXJzIHRoYXQgaGF2ZSBuZXZlciBkb25lIHRoZSBISVQgd2lsbCBiZSBsb2NrZWQgb3V0IGluIGFkZGl0aW9uIHRvIHBlb3BsZSB0aGF0IGhhdmUgYWxyZWFkeSBkb25lIHRoZSBISVQuIApBbGwgSSBjYW4gcmVtZW1iZXIgd2FzIHdoYXQgd2UgdG9sZCB0aGUgQmF5bG9yIEdpcmxzIGJhY2sgaW4gdGhlIG1pZCA4MHMsIGFuZCB0aGF0IHdhcyBEci4gCkNvdW50eSBDb3JvbmVyIFBhdWwgSi4gS29wc2NoIHNhaWQgRG9uYWxkIFNtaXRoLCBmYSAgdGhlciBvZiBzaXggY2hpbGRyZW4sIHdhcyBraWxsZWQgaW5zdGFudGx5IGJ5IGEgc2hvdGd1biBibGFzdCB0by4gCkl0IG5vdCBhIHN0cmV0Y2ggdG8gc3VnZ2VzdCB0aGF0IGhlIGhhcyBwYXNzZWQgd2luZ2VycyBLb2xlIExpbmQgKDZ0aCkgYW5kIEpvbmFoIEdhZGpvdmljaCAoN3RoKSBpbiBhIHNlZWRpbmcgdGhhdCBoYWQgRWxpYXMgUGV0dGVyc3NvbiwgVGhhdGNoZXIgRGVta28gYW5kIEFkYW0gR2F1ZGV0dGUgYXMgdGhlIGJpZyB0aHJlZS4uIApJIGFtIGRpenp5IGFuZCBoYXZlIG9ydGhvc3RhdGljIGh5cG90ZW5zaW9uLCBzaGUgaXMgZGl6enkuIApIZSB3YXMga2lsbGVkIGluIGEgY3Jhc2ggbmVhciBXZXN0IFd5YWxvbmcuLiAKQSBsb3Qgb2Ygb3VyIHdvcmsgaXMgZG9uZSB2ZXJ5IGZhc3QsIGluIGEgc2hvcnQgYW1vdW50IG9mIHRpbWUuIApUaGUgb2ZmZW5jZSBvZiBwcmV0ZW5kaW5nIHRvIHByYWN0aWNlIHdpdGNoY3JhZnQgaXMgb25lIG9mIHNpeCBvZmZlbmNlcyB0aGUgZmVkZXJhbCBnb3Zlcm5tZW50IGlzIHNlZWtpbmcgdG8gcmVwZWFsIGluIHVwY29taW5nIGxlZ2lzbGF0aW9uLCBzYXlpbmcgdGhlIG9mZmVuY2UgaXMgbm8gbG9uZ2VyIG5lZWRlZC4KSXQgdGlja2xlZCBtZSB0byBzZWUgdXMgd2VhcmluZyB0aGUgc2FtZSBkcmVzcyBhdCB0aGUgc2FtZSBhZ2UuIEkgcGxhbiB0byBkbyB0aGUgc2FtZSAgIG9ubHkgMyA1IGl0ZW1zLCBvbmx5IGluIGV4Y2VsbGVudCBzaGFwZSwgYW5kIHRoYXQgYXJlIHdvcnRoIHNhdmluZy4gCihJIGxpdmUgaW4gYW4gYXJlYSBjdXJyZW50bHkgYWJzb2x1dGVseSBJTkZFU1RFRCB3aXRoIHRpY2tzIGFuZCB3ZSBjb250cm9sIGJ1cm4gb3VyIGZpZWxkcyB3aXRoIHBlcm1pc3Npb24rcGVybWl0dGluZyBmcm9tIG91ciBsb2NhbCBtdW5pY2lwYWxpdHkuIApJIHRha2UgYWZ0ZXIgbXkgZGFkLCBub3QgbXkgbW9tLiBNeSBkYWQgY2FuIGFsc28gd2FpdCBhcm91bmQgZm9yIGFnZXMgYW5kIHNwZW5kIHRpbWUgZG9pbmcgcmFuZG9tIHNoaXQgZm9yIGFnZXMgYnV0IG15IG1vbSB3YW50cyB0byBnbyBpbiBhbmQgZ2V0IHRoZSBqb2IgZG9uZSBhbmQgZ28uIApTaW5jZSBKdW5lIDIwMTQsIE5TVyBob3NwaXRhbHMgaGF2ZSBhY2NlcHRlZCAxOCBkb25hdGlvbnMgYW1vdW50aW5nIHRvIG1vcmUgdGhhbiAkMSBtaWxsaW9uIGZyb20gdmVudWVzIHRocm91Z2ggdGhlIExJQSBwcm9jZXNzLiBUaGlzIGNvbXBhcmVzIHdpdGggZml2ZSBkb25hdGlvbnMgdG8gaG9zcGl0YWxzIGluIHRoZSBwcmV2aW91cyB0aHJlZSB5ZWFycy4gCkFwcGx5aW5nIHRoZSBvaWwgaXMgYSBtYXR0ZXIgb2YgcGVyc29uYWwgcHJlZmVyZW5jZS4gU29tZSBwZW9wbGUgcnViIHRoZWlyIGhhbmRzIGJyaXNrbHkgdG9nZXRoZXIgdG8gZ2V0IHRoZW0gd2FybSwgdGhlbiBkaXAgdXAgc29tZSBvaWwgaW50byB0aGVpciBoYW5kcyB0byB3YXJtIGl0IGFuZCByZWxlYXNlIGl0cyB2YXBvcnM7IHNvbWUgcHJlZmVyIHRvIGRyaWJibGUgYSBmZXcgZHJvcHMgb2YgdGhlIGJsZW5kIGRpcmVjdGx5IG9udG8gdGhlIHNraW4gb2YgdGhlIG1hc3NhZ2UgcmVjaXBpZW50IGFuZCBibGVuZCBpdCBpbnRvIHRoZWlyIGhhbmRzIGF0IHRoZSBzYW1lIHRpbWUgdGhleSBtYXNzYWdlIGl0IGludG8gdGhlIHNraW4uIFRyeSBib3RoIGFuZCBzZWUgd2hpY2ggeW91ciBjbGllbnQgcHJlZmVycy4KQ2hhaXJtYW4gb2YgUGhpbGFkZWxwaGlhIGJhc2VkIENvbWNhc3QgQ29ycC4gCkNvIG9wcy4gCllvdSBzaG91bGQgdGFrZSBub3RlIG9mIHRoZSBib2FyZHMgeW91IGZsb2F0IGFzIHdlbGwgYXMgaXQgbWF5IGhlbHAgdGhlaXIgaGFuZCBncmVhdGx5Li4gCldpZSBkYXMgR2FuemUgZnVua3Rpb25pZXJ0LCB3aXJkIGluIEhpbGZlIEZ1bmt0aW9uIGRlcyBqZXdlaWxpZ2VuIFdlYmJyb3dzZXJzIGJlc2NocmllYmVuLi4gCkV2ZW4gaWYgeW91IHNwZW5kaW5nIHRpbWUgd2l0aCBjb25zZXJ2YXRpdmVzIGluIGNvdW50cnlzaWRlLCBJIGZlZWwgbGlrZSBpdCBzdWNoIGEgY29tbW9uIG9jY3VycmVuY2Ugbm93YWRheXMsIHBlb3BsZSB3b24gc2h1biB5b3UuIFRoZXkgcHJvYmFibHkganVzdCB0aGluayAxIG9mIDIgdGhpbmdzLCAib2ggaGUgYSBmb3JlaWduZXIiLCBvciAib2ggaXQgYW5vdGhlciB5b3VuZyBwZXJzb24gd2l0aCBhIHRhdHRvby4iClZpb2xlbmNlIHJlbGF0ZWQgdG8gb3JnYW5pemVkIGNyaW1lIGluIEthbWxvb3BzIGhhcyBiZWVuIG1vcmUgcHJvbm91bmNlZCBzaW5jZSB0aGUgc2xheWluZyBvZiBLb25hYW0gU2hpcnphZCwgb25lIG9mIHRoZSBmb3VuZGVycyBvZiB0aGUgUmVkIFNjb3JwaW9ucyBnYW5nLCB3aG8gd2FzIHNob3QgdG8gZGVhdGggb3V0c2lkZSBoaXMgR3VlcmluIENyZWVrIGhvbWUgb24gU2VwdC4gMjEsIDIwMTcuClRoZSBkZXNwYWlyIHJlbmRlcmVkIGF0IHRoZSBlbmQgb2YgdGhpcyBlcGlzb2RlIGlzIGFzIGhhcnJvd2luZyBhcyB0aGUgdmlvbGVuY2UgaW4gVGhlIFBlcmZlY3QgTmFubnk6ICJTaGUgZmVsdCBub3RoaW5nLCBub3RoaW5nIGF0IGFsbC4gClVsdXMgTWV5ZGFuIHRla3JhciBzZXZnaWxpbGVyIGJ1bHVzdW4gaXN0aXlvcnVtLiAKT2YgY291cnNlIG5vdGhpbmcgaXMgZ3VhcmFudGVlZCwgbGlrZSBhbnkgdHJlYXRtZW50IChhbmQgbm90aGluZyB3YXMgZ3VhcmFudGVlZCBpbiB0aGUgcGFzdCkgYnV0IHRoZXkgc2VlbSBjb25maWRlbnQgb2YgYXQgbGVhc3Qga2lsbGluZyBtb3N0IG9mIHRoZSB0dW1vci90dW1vcnMuIFBldGUgaXMgc2NoZWR1bGVkIGZvciB0aGlzIHRoZXJhcHkgdG9tb3Jyb3cgYWZ0ZXJub29uLCBzbyB0b2RheSB0aGV5IGhhdmUgZ2l2ZW4gaGltIHNvbWUgYW50aWJpb3RpY3MgYW5kIGFsc28gYWJvdXQgYSBsaXRyZSBvZiB2aXRhbWluIGZsdWlkIHN0cmFpZ2h0IGludG8gdGhlIHZlaW4sIGFzIGhpcyBub3VyaXNobWVudCBsZXZlbHMgYXJlIHNsaWdodGx5IGxvdy4gClBvc3RlZCBieSBpZ25pZ25va3QgYXQgMTE6MjAgQU0gb24gU2VwdGVtYmVyIDEwLCAyMDA5IFsxIGZhdm9yaXRlXQpUaGlzIHNjZW5hcmlvIGlzIHByZXR0eSBtdWNoIGV4YWN0bHkgd2hhdCBoYXBwZW5lZCB0byBtZSBhIGZldyB5ZWFycyBhZ28uIEkgbmV2ZXIgZ290IGFsb25nIHdpdGggbXkgc2lzdGVyLCBpbiBmYWN0LCBzb21ldGltZXMgSSBraW5kIG9mIGhhdGVkIGhlci4gV2hlbiBzaGUgd2FzIGVuZ2FnZWQsIHNoZSBhc2tlZCBtZSB0byBiZSBoZXIgTU9ILiBJIHdhbnRlZCB0byByZWZ1c2Ugc28gYmFkIGJ1dCBteSBtb3RoZXIgcHJldHR5IG11Y2ggZGVtYW5kZWQgSSBkbyBpdC4gT3V0IG9mIGxvdmUgZm9yIG15IG1vbSwgSSBzdWNrZWQgaXQgdXAgYW5kIGRpZCB0aGUgYmFyZSBtaW5pbXVtLgpIZSBsaXZlZCBpbiBhbiBhbXVzZW1lbnQgcGFyay4gCkkgYW0gd2l0aCBTdW5yaXNlIGFuZCB3YXMgb25lIG9mIHRoZSBwZW9wbGUgdGhhdCB3YXMgYXJyZXN0ZWQgaW4gUGVsb3NpIG9mZmljZS4gCklmIHlvdSdyZSBnb2luZyB0byBjb25zdHJ1Y3QgYSBsaWUgdG8gaW5mbGF0ZSBhIGJ1bmNoIG9mIGJvZ3VzIHN0b3JpZXMgYWJvdXQgeW91cnNlbGYsIGl0J3MgYmVzdCB0byBsZWF2ZSBhcyBtdWNoIGRldGFpbCBhcyBwb3NzaWJsZSBvdXQgb2YgaXQuIEknbSBhc3N1bWluZyB5b3UncmUgbm90IGEgdmVyeSBnb29kIHBva2VyIHBsYXllci4gVGhlIG5haWwgaW4geW91ciBjb2ZmaW4gaXMgdGhpczoKVm91cyB2ZXJyZXogcXVlIHRvdXQgY29sbGUgYXZlYyBsZXMgdGV4dGVzIGRlIGxhIHRyYWRpdGlvbiBqdWl2ZSBzYXVmIGwnb3JpZ2luZSBnb2dyYXBoaXF1ZSBkZSBHb2csIGNlIHF1aXRlbmQgIGZpY2hlciB0b3V0IHBhciB0ZXJyZUZpZ3VyZXogdm91cyBxdSd1biBnYW1pbiBpc3JhbGllbiBkZSAxNSBhbnMgYSB2Y3UgdW5lIEVNSSBlbiBmb3JtZSBkJ2FzY2Vuc2lvbiBwYXJhZGlzaWFxdWUgZGUgbGFxdWVsbGUgaWwgc2VyYWl0IHJldmVudSBhdmVjIGxhIGNvbnZpY3Rpb24gcXVlIGxhIHRyb2lzaW1lIGd1ZXJyZSBtb25kaWFsZSBhdXJhaXQgY29tbWVuYyBsZSAxMSBzZXB0ZW1icmUgMjAxNS4gUXVlIElzcmFsIHZhIHRyZSByYXZhZyBwYXIgbGVzIDcwIG5hdGlvbnMgc291cyBsYSBob3VsZXR0ZSBkZSBPYmFtYSBhbGlhcyBsZSBHb2cgYmlibGlxdWUgdmVudSBkZSBNYWdvZyAobGVzIFVTQSkuIApJbmNsdXNpb24gY3JpdGVyaWEgd2VyZSBzcGVjaWZpZWQgYWRlcXVhdGVseS4gVmFyaW91cyByZWxldmFudCBkYXRhIHNvdXJjZXMgd2VyZSBhY2Nlc3NlZC4gCldlIHNlZSBkZXN0cm95ZWQgY2FibGVzIGFsbCB0aGUgdGltZS4gCjIpIEV2ZW50dWFsbHkgdGhpcyBleGVyY2lzZSBnZXRzIHlvdSB0byBhIHBsYWNlIHdoZXJlIGlmIHRoZSBkb2cgaXMgdW5zdXJlIG9mIHdoYXQgdG8gZG8sIHRoZXkgbG9vayB0byB5b3UgZm9yIGRpcmVjdGlvbi4gVGhpcyBpcyBncmVhdCBhbmQgeW91IHdhbnQgdGhpcyBiZWNhdXNlIGl0IGNhbiBoZWxwIHJlZGlyZWN0IHVud2FudGVkIGJlaGF2aW9yIGJ5IGhhdmluZyB0aGUgZG9nIGFzayB5b3UgdG8gcmVkaXJlY3QgdGhlbS4gMykgVGhpcyBpcyBhIGZvc3RlciBkb2cgYW5kIHlvdSB3YW50IHRvIHNldCB0aGVtIHVwIGZvciBzdWNjZXNzLiAKQXNzdW1pbmcgdGhleSBzZWxsIHRoZSBpbnZlc3RtZW50IHByb3BlcnRpZXMsIHRoZXkgd2lsbCBiZSBhYmxlIHRvIGJvb3N0IFRGU0EgY29udHJpYnV0aW9ucyBieSAkMTEsMDAwIHBlciB5ZWFyIGZvciB0aGUgbmV4dCAxMyB5ZWFycy4gSWYgdGhlIGFjY291bnRzIGdyb3cgYXQgMyBwZXIgY2VudCBhZnRlciBpbmZsYXRpb24sIHRoZXkgd2lsbCBoYXZlIGFib3V0ICQxNzcsMDAwIGluIHRoZSBhY2NvdW50cy4gVGhhdCBzdW0sIHN0aWxsIGdlbmVyYXRpbmcgMyBwZXIgY2VudCBhIHllYXIgYWZ0ZXIgaW5mbGF0aW9uLCB3b3VsZCBzdXBwb3J0IHBheW91dHMgb2YgJDcsNDM1IHBlciB5ZWFyIGZvciA0MCB5ZWFycyB0byBSb2JiaWUgYWdlIDkwLgpXZSBtYXkgbmV2ZXIgaGF2ZSB0aGUgcmVsYXRpb25zaGlwIHRvIHN1cHBvcnQgdGhlIGNsb3NlbmVzcyB5b3Ugd2FudC4gSSBhbSBjb21mb3J0YWJsZSB3aXRoIG91ciByZWxhdGlvbnNoaXAgYXMgaXQgaXMuIElmIHlvdSBwdXNoIGZvciBzb21ldGhpbmcgSSBhbSBub3QgcmVhZHkgZm9yLCB5b3Ugd2lsbCBwdXNoIG1lIGF3YXkuIApXaW5kc29yIEdvb2RmZWxsb3dzLCBrbm93biBtYWlubHkgZm9yIGFuIGFubnVhbCBuZXdzcGFwZXIgZHJpdmUgaW4gc3VwcG9ydCBvZiB0aGVpciBDaHJpc3RtYXMgZmFtaWx5IGhhbXBlciBwcm9ncmFtLCBoYXZlIGJlZW4gb3BlcmF0aW5nIHRoZSBlcXVpdmFsZW50IG9mIGEgZm9vZCBiYW5rIGZvciBtb3JlIHRoYW4gYSBjZW50dXJ5LiBIZWFsdGhpZXIgb2ZmZXJpbmdzIG1pZ2h0IGJlIGNvc3RsaWVyLCBidXQgQmFyaWNoZWxsbyBzYWlkIGl0IG11Y2ggbW9yZSBhbmQgdGhhdCByZWNlbnQgZnVuZHJhaXNpbmcgZWZmb3J0cywgaW5jbHVkaW5nIGFuIGFubnVhbCBnb2xmIHRvdXJuYW1lbnQgYW5kIGJlcXVlc3RzIGluIHdpbGxzLCBoYXZlIGFsbG93ZWQgdGhlIGNoYXJpdHkgcnVuIGFsbW9zdCBlbnRpcmVseSBieSB2b2x1bnRlZXJzICh0aGVyZSBpcyBvbmx5IG9uZSBwYWlkIGVtcGxveWVlKSB0byBsb29rIGF0IGFuIHVwZGF0ZWQgZm9vZCBiYW5rIHByb2dyYW0gd2l0aCBtb2Rlcm4gZGF5IG51dHJpdGlvbmFsIHZhbHVlcy4gVGhlIG51dHJpdGlvbmlzdCBhZHZpY2UsIHNhbHQgaGVhdnkgY2FubmVkIHNvdXBzIHdpbGwgYmUgcmVwbGFjZWQgYnkgbW9yZSBudXRyaXRpb3VzIHBhY2thZ2VkIHNvdXAgbWl4ZXMsIGluY2x1ZGluZyBsb2NhbGx5IHNvdXJjZWQgcHJvZHVjdCBvYnRhaW5lZCBieSBMZWFtaW5ndG9uIFNvdXRod2VzdGVybiBPbnRhcmlvIEdsZWFuZXJzLiAKSSBkb3VidCBPUCB3YXMgYXNraW5nIGJlY2F1c2UgaGUga2VlcHMgdHJhY2sgb2YgaG93IG1hbnkgdGltZXMgaGUgZ2V0cyBwb2NrZXQgcGFpcnMsIGFuZCBhZnRlciA3IHRpbWVzIG9mIG5vdCBoaXR0aW5nIGEgc2V0LCBoZSB0aGlua3MgdGhhdCBtZWFucyB0aGUgOHRoIHRpbWUgaGUgYWJzb2x1dGVseSBndWFyYW50ZWVkIHRvIGdldCBvbmUuIEFzIGlmIHNvbWVob3cgdGhlIGRlY2sgd2lsbCBtYWdpY2FsbHkgcmVvcmRlciB0aGUgY2FyZHMgdG8gbWFrZSBpdCBoYXBwZW4ganVzdCBiZWNhdXNlIGhlIGdvdCBoaXMgN3RoIHBvY2tldCBwYWlyIGxhc3Qgd2VlayBpbiBhIGhvbWUgZ2FtZSwgbG9sLiBJIHBsYXllZCB3aXRoIHNvbWUgcHJldHR5IGRpbSBidWxicywgYnV0IEkgZG9uIHRoaW5rIGFueW9uZSB0aGF0IHBsYXllZCBwb2tlciBpcyB0aGF0IGRpbS4KVGhleSB0aGVuIHByb2NlZWQgdG8gc3BlbmQgdGhlIG5leHQgMToyMCBsb290aW5nIHRoZSBhcmVhIGJlZm9yZSBtYWtpbmcgd2F5IHRvIHRoZSByZXNwYXduLiBObyB0aW1lIHRvIHJ1biBiYWNrIHRvIG15IGNyYXRlLiBUaGV5IGxvb3RlZCB0aGUgdGhlIGNvbnRhaW5lcnMgYXQgdGhlIHJlc3Bhd24gbGVhdmluZyBtZSB3aXRoIGEgbGV2ZWwgb25lIGJvZHkgc2hpZWxkIGFuZCBhIGZyYWcuIApCZXQsIGJldCwgYW5kIGJldCBzb21lIG1vcmU7IHlvdSAodXN1YWxseSkgd2FudCB0byBiZXQgb3V0IG1hcmdpbmFsIGhhbmRzIGJlZm9yZSB0aGV5IGhhdmUgYSBjaGFuY2UgdG8gc2VlIG1vcmUgY2FyZHMgKGFuZCBnZXQgbHVja3kpLiAKV2hlbiB3ZSBleHBsYWluZWQgb3VyIHJhdGlvbmFsZSBmb3IgaW50cm9kdWNpbmcgYSBwYXkgd2FsbCB0byBhdWRpZW5jZXMgZnVuZGluZyBjb250ZW50IGZpcnN0IGFuZCBmb3JlbW9zdCBmb3Igb3VyIGF1ZGllbmNlIHRoZXkgZ290IGl0IGFuZCByZXNwb25kZWQgcG9zaXRpdmVseS5TcGVhayB0byBhdWRpZW5jZXMgdGhlIHdheSB0aGV5IHNwZWFrIHRvIGVhY2ggb3RoZXJJbiBvdXIgYW5ub3VuY2VtZW50IHZpZGVvLCB3ZSB3ZXJlIG9wZW4gYW5kIHNlbGYgZGVwcmVjYXRpbmcsIGEgbm90YWJsZSBmZWF0dXJlIG9mIG91ciBjb250ZW50LCB3aGlsZSBhbHNvIGRlc2NyaWJpbmcgdGhlIGZlYXR1cmVzIGFuZCBiZW5lZml0cyBvZiB0aGUgcHJvZHVjdC4gClRoZSBtb3JlIG9wdGlvbmFsIGVxdWlwbWVudCBhIG1hbnVmYWN0dXJlciBvZmZlcnMsIHRoZSBsZXNzIGVmZmljaWVudCB0aGV5IGFyZSBvbiB0aGUgbWFudWZhY3R1cmluZyBsaW5lLCB3aGljaCB3b3VsZCBhZGQgY29zdCAobW9yZSBsYWJvciBob3VycyByZXF1aXJlZCBwZXIgdW5pdHMgYnVpbHQpLiAKQW4gYWNjb21wbGlzaGVkIGhpZ2ggc2Nob29sIHN0dWRlbnQsIEJlbiAoUGFycnkgU2hlbikgc2VlbXMgdG8gZXhjZWwgYXQgYWxtb3N0IGV2ZXJ5dGhpbmcgZXhjZXB0IHdpbm5pbmcgb3ZlciBoaXMgZHJlYW0gZ2lybCwgU3RlcGhhbmllIChLYXJpbiBBbm5hLiAKU2Vsb24gbHVpLCBsYSBtY29ubmFpc3NhbmNlIGRlcyBsb2lzIGV0IGRlcyBtb2RhbGl0cyBkZSBwYWllbWVudCBjb25zdGl0dWUgbGUgcHJpbmNpcGFsIGZyZWluICBsJ2FjaGF0LiAKQWZ0ZXIgTWFjRXdlbiBwcm9kdWNlZCAzMyBwb2ludHMgKDEwIDIzKSBpbiA2NiBnYW1lcyBsYXN0IHNlYXNvbiBpbiBoaXMgcm9va2llIHBybyBjYW1wYWlnbiwgdGhlIGZvcm1lciBRTUpITCBmb3J3YXJkIHB1dCBpbiB0aGUgd29yayBpbiB0aGUgb2ZmIHNlYXNvbi4gClRoZSBoaWdoIHllYXIgd2FzIDIwMDgsIHdpdGggMTgyIGluanVyaWVzOyB0aGVyZSB3ZXJlIDEwMSBpbiAyMDA5LCA1OCBpbiAyMDEwIGFuZCA4OCBpbiAyMDExLiBNb3N0IG9mIHRoZSBpbmp1cmllcywgNDcgcGVyY2VudCwgd2VyZSBsZWcgYW5kIHRvZSBmcmFjdHVyZXM7IHNvbWUgc3VmZmVyZWQgYnJva2VuIG5lY2tzIGFuZCBiYWNrcy4uIApKdXN0IHdhbm5hIHRocm93IHRoaXMgb3V0IHRoZXJlOiBJIG5vdCBFdXJvcGVhbiBidXQgSSBhIEtvcmVhbiBzcGVha2luZyB3aGl0ZSBmb3JlaWduZXIgbGl2aW5nIGluIEtvcmVhLiBUaGVyZSBhcmUgZGVmaW5pdGVseSBpbmNpZGVudHMgb2YgdGhpbmdzIEkgd291bGQgY2FsbCByYWNpc20gKGZyb20gbXkgd2VzdGVybiBwZXJzcGVjdGl2ZSkgdGhhdCBLb3JlYW5zIHdvdWxkbiBJdCB0b3RhbGx5IHBvc3NpYmxlIHRoaXMgd29tYW4gaXMgb24gZWRnZSBiZWNhdXNlIG9mIHNpbWlsYXIgaW50ZXJuZXQgc3RvcmllcywgY3VsdHVyYWwgbWlzY29tbXVuaWNhdGlvbiwgYW5kIGEgbWlzcGVyY2VwdGlvbiBvZiBldmVudHMgYmVjYXVzZSBvZiB0aGF0Li4gCk9wZW5pbmcgbWVkaXRhdGlvbiwgb3IgcHJheWVyIHRvIGpvaW4gdGhlIGdyb3VwIHRvIHRoZSBoaWdoZXIgcG93ZXIgYW5kIHRvIGVhY2ggb3RoZXIuIApZZWEgYnV0IGJ5IHRoYXQgbG9naWMgbW9zdCB0aGluZ3MgYXJlIGxldGhhbCwgYnV0IHdoZW4gdXNlZCBhcyBpbnRlbmRlZCB0aGV5IGFyZSBub3QuCihQcml2YWN5IFBvbGljeSlHb29nbGUgTWFwc1NvbWUgYXJ0aWNsZXMgaGF2ZSBHb29nbGUgTWFwcyBlbWJlZGRlZCBpbiB0aGVtLiAKQWxzbywgdGhpcyBtaWdodCBzZWVtIHN0cmFuZ2UgYnV0IEltIHRlY2huaWNhbGx5IHBybyBjaG9pY2UgaW4gdGhlIHNlbnNlIHRoYXQgSSBzdXBwb3J0IGxlZ2FsIGFib3J0aW9uIHVwIHRvIDIwIHdlZWtzIGZvciBleGFjdGx5IHRoZSByZWFzb25zIHlvdSBtZW50aW9uZWQgKGEgYmFuIG9uIGFib3J0aW9uIGlzIHRvbyBpbXByYWN0aWNhbCBjb3VudGVyIHByb2R1Y3RpdmUgYW5kIGNhbiBoYXZlIGhhcm1mdWwgZWZmZWN0cyBvbiB0ZWVuYWdlcnMpLiBIb3dldmVyLCBtb3JhbGx5IEkgcHJvIGxpZmUgYW5kIHdhbnQgdG8gYWNoaWV2ZSB0aGlzIHRocm91Z2ggZGlzY3Vzc2lvbiBhbmQgZWR1Y2F0aW9uLiBFYXNpZXIgYWNjZXNzIHRvIGNvbnRyYWNlcHRpb24sIGVkdWNhdGlvbiwgYW5kIGEgcmV0aGlua2luZyBvZiBob3cgd2UgcmVndWxhdGUgc2V4IHdpdGhpbiBvdXIgc29jaWV0eSBjYW4gaGVscCB1cyB0byBwcmV2ZW50IHVud2FudGVkIHByZWduYW5jaWVzIGFuZCBhdm9pZCB0aGlzIGRpbGVtbWEgZW50aXJlbHkuLiAKVGhhdCBpcyBzdGlsbCBjb25mdXNpbmcuQWZ0ZXIgdGhhdCwgd2UgYnJpZWZseSBkaWQgcmVoZWFyc2FsIGZvciB0aGUgcXVvdGVzIHNlY3Rpb24gb2YgWW9uZGVyLiAKQWZ0ZXIgc29ydCBvZiBzbGVlcGluZyBpbiB0aGUgbmFzdHkgaG90ZWwsIHdlIGhhZCBxdWl0ZSBhIGdvb2QgYnJlYWtmYXN0LiBUaGV5IGVhdCBwaXRhLCBidXR0ZXIsIGphbSwgaGFyZCBib2lsZWQgZWdncywgbmVzY2FmZSwgdG9tYXRvZXMsIG9saXZlcyBhbmQgY3VjdW1iZXJzLiAKTG9zaW5nIHJlcGVhdGVkbHkgdG8gYSAiZmlzaCIgKGJhZCBwbGF5ZXIpIGRlc3BpdGUgaGF2aW5nIGhpbSBvdXRjbGFzc2VkIGluIHNraWxsIGFuZCB0aGUgb2RkcyBvbiB5b3VyIHNpZGUKR2V0IGNyYWZ0eSBieSBtYWtpbmcgZGVjb3JhdGlvbnMgdGhhdCB3aWxsIHNlcnZlIGEgcHVycG9zZSBpbiB5b3VyIGhvbWUuIExvb2sgYXJvdW5kIGZvciBhcnQgc3VwcGxpZXMsIHNjcmFwcyBvZiBmYWJyaWMsIG9yIGFueSBzbWFsbCBvYmplY3RzIHlvdSBjYW4gaW1wcm92aXNlIHdpdGggdG8gbWFrZSBhbiBhcnQgcHJvamVjdC4gVGhpcyBjYW4gYmUgYSBmdW4gd2F5IHRvIHBhc3MgdGhlIHRpbWUsIGFuZCB5b3UgbWlnaHQgZW5kIHVwIHdpdGggYSBuZXcgaG91c2UgZGVjb3JhdGlvbi5bNF0KSSd2ZSBleHBlcmllbmNlZCB0aGlzIHR3aWNlLCBhbmQgb24gb25lIG9jY2FzaW9uIGl0IHF1aWNrbHkgZGlzc29sdmVkIG91ciBncm91cC4gTXkgYWR2aWNlLCB0ZWxsIHRoZW0gdGhhdCB0aGUgYmVoYXZpb3IgaXMgYmVjb21pbmcgYSBwcm9ibGVtLCBhbmQgdGhlbiBsZXQgdGhlbSBrbm93IHRoYXQgaWYgaXQgaGFwcGVucyBhZ2FpbiB0aGF0IHRoZXkgd2lsbCBub3QgYmUgd2VsY29tZWQgYmFjay4gT3BlbiBjb21tdW5pY2F0aW9uIGFuZCBhIGZpcm0gc3RhbmNlIGFyZSByZWFsbHkgaW1wb3J0YW50IHdpdGggcGVvcGxlIGxpa2UgdGhpcy4KWW91ciBwb3N0IGhhcyBiZWVuIGF1dG9tYXRpY2FsbHkgcmVtb3ZlZCBiZWNhdXNlIHlvdSB1c2VkIGEgb25lL3R3byB3b3JkIHRpdGxlIG9yIHVzZWQgc3BhY2VzIGluIGJldHdlZW4gY2hhcmFjdGVycy4gUGxlYXNlIHJlc3VibWl0IHdpdGggYSB0aXRsZSB3aGljaCBpcyBtb3JlIHRoYW4gdHdvIHdvcmRzLgpUaGUgb2ZmaWNlIHByb3ZpZGVzIG1lZGljYWwgbnV0cml0aW9uIHRoZXJhcHksIHNlcnZlcyBvbiB0aGUgZWF0aW5nIGRpc29yZGVyIHRyZWF0bWVudCB0ZWFtIGFuZCBwcm92aWRlcyBudXRyaXRpb24gb3V0cmVhY2guIApTbyBhIGNvdXBsZSBvZiBkZXZzIHdobyBzaG91bGQgb25seSBiZWVuIHRoZSBlbmFibGVyIG9mIHRoZSB1c2VycyB3aXNoIGFyZSBub3cgaW4gdGhlIGRlY2lzaW9uIG1ha2luZyBwb3NpdGlvbi4gT25lIG9mIHRoZW0gaXMgcHJvdmFibHkgaW5zYW5lLCBvbmUgb3RoZXIgaXMgcG9wcGluZyBjaGFtcGFnbmVzIGZvciBoaWdoIGZlZXMuIFRoaXMgaXMgd2hhdCB0aGUgcHJvYmxlbSBpcy4uIApJdCBtb3JlIGZvciBvcmdhbml6YXRpb24uIEl0IGV2ZW4gaGFzIGEgYm90IHRoYXQgaGFuZGxlcyBxdWV1ZXMgZm9yIGVhY2ggcnVuIUlycml0YWJpbGl0eSwgdGhlIGNhcGFjaXR5IHRvIHJlc3BvbmQgdG8gdGhlIGVudmlyb25tZW50LCBpcyBhIHRyYWl0IG9mIGxpdmluZyBiZWluZ3MuLiAKSSBqdXN0IHdpc2ggcHNlcnZlciBwbGF5ZXJzIHdlcmVuIHNvIGludmVzdGVkIGluIHRoZSBub3Rpb24gdGhhdCBwc2VydmVycyBhcmUgYSBwZXJmZWN0IHJlY3JlYXRpb24gb2YgdmFuaWxsYSBhbmQgdGhhdCB0aGV5IGlubm92YXRpbmcgb24gc29tZSBraW5kIG9mIGNoYW5naW5nIG1ldGEgaW4gb3JkZXIgdG8gdmFsaWRhdGUgdGhlaXIgYWNjb21wbGlzaG1lbnRzLiBQcml2YXRlIHNlcnZlcnMgYXJlIGZ1bGwgZ2FtZXMgaW4gdGhlaXIgb3duIHJpZ2h0IHdpdGggb3duIHNldCBvZiBydWxlcywgaXQgYmUgZHVtYiB0byB0cnkgYW5kIHBsYXkgbGlrZSBWYW5pbGxhLCBpdCBzbWFydCB0byB0YWtlIHByaXZhdGUgc2VydmVycyBmb3Igd2hhdCB0aGV5IGFyZSBhbmQgb3B0aW1pemUgYXJvdW5kIHRoYXQuIEp1c3QgYmVjYXVzZSBwcml2YXRlIHNlcnZlcnMgYXJlIGluYWNjdXJhdGUgZG9lcyBub3QgaW52YWxpZGF0ZSB0aGUgaW1wcmVzc2l2ZSBhY2NvbXBsaXNobWVudHMgb2YgaGFyZGNvcmUgcHJpdmF0ZSBzZXJ2ZXIgZ3VpbGRzLi4gCkl0IGdvaW5nIHRvIGRlcGVuZCBvbiB3aGVyZSB5b3UgbGl2ZS4gCkFycml2aW5nIHZpc2l0b3JzIGludG8gTGlzYm9uIGhhdmUgc2V2ZXJhbCBncm91bmQgdHJhbnNwb3J0YXRpb24gb3B0aW9ucyBpbnRvIHRoZSBjaXR5LCBpbmNsdWRpbmcgdGF4aXMsIGhvdGVsIHNodXR0bGVzLCBDYXJyaXMgY2l0eSBidXNlcyBhbmQgdGhlIHVuZGVyZ3JvdW5kIHJhaWwgbGluZSwgTGlzYm9uIE1ldHJvIGZyb20gdGhlIE1ldHJvIGRlIExpc2JvYSBzdGF0aW9uIGluIFRlcm1pbmFsIDEuIEEgdHJpcCBvbiB0aGUgTWV0cm8gUmVkIExpbmUgdGFrZXMganVzdCAxNiBtaW51dGVzIHRvIGdldCB0byBjaXR5IGNlbnRlciBhbmQgZml2ZSBtaW51dGVzIHRvR2FyZSBkbyBPcmllbnRlLCBvbmUgb2YgdGhlIGxhcmdlc3QgdHJhaW4gc3RhdGlvbnMgaW4gdGhlIHdvcmxkLi4gCjEwMCUuIApIYWQgdGhleSBiZWhhdmVkIGJldHRlciBJIHRoaW5rIEkgYmUgYWJsZSB0byBtdXN0ZXIgdXAgYSBiaXQgb2Ygc3ltcGF0aHkgZm9yIHRoZWlyIHBvc2l0aW9uIHJpZ2h0IG5vdywgYnV0LCB0aGVpciBydWRlIGFycm9nYW5jZSBhbmQgdGhlIG9uZ29pbmcsIGJydXRhbCBjaGFyYWN0ZXIgYXNzYXNzaW5hdGlvbiBvZiBaZWxsbmVyLCBBdmVyeSBhbmQgaGlzIGZhbWlseSwgaGFzIHNob3duIHdoYXQgdGhleSBhcmUuIFZlcnkgYmFkIHBlb3BsZSwgaW1vLgpUaGVuLCB0aGUgbGFzdCBtb250aCBJIHN3aXRjaCB0byBLZXRvIGFuZCByYW4gbXkgbGFzdCBsb25nIHJ1biB3aXRoIG5vIGdlbCBvciBmb29kIGFuZCB3YXMgZmluZS4gClRoZSBicm9rZXIgd291bGQgcmFpc2UgaGVsbCwgYXMgUmV6aSBpcyBub3cgcmFpc2luZyBoZWxsLiBJIG5vdCBzdXJlIHdoYXQgZWxzZSBhIGJyb2tlciBpcyBnb2luZyB0byBvZmZlciBiZXlvbmQgd2hhdCBSZXppIGhhcyB0aGF0IHdvdWxkIGJlIHdvcnRoICQ0ay4gVGhhdCBub3QgYW4gaW5zdWJzdGFudGlhbCBhbW91bnQgb2YgbW9uZXkgdG8gdXMgYW5kIHRvIHRoZSBtYWpvcml0eSBvZiB0aGUgcGVvcGxlIHdobyBsaXZlIGluIE5ZQy4gCkxlc2xleSBhbmQgRG9ubnkgTWNFbGhpbmV5J3MgaG9tZSBpbiBBcHBsZXRvbiwgV2lzY29uc2luLCB3YXNuJ3QgdGhlIHNhbWUgYWZ0ZXIgdGhlaXIgb25lIHllYXIgb2xkIHRhYmJ5IEVtaWx5IGRpc2FwcGVhcmVkLiBCdXQgc2hlIGRpZG4ndCBqdXN0IGRpc2FwcGVhciwgc2hlIHdlbnQgb24gYSA0LDUwMCBtaWxlIGFkdmVudHVyZSEgSXQgc2VlbXMgRW1pbHkgd2FzIG9uIGhlciBldmVuaW5nIHByb3dsIHdoZW4gc2hlIGZvdW5kIGhlcnNlbGYgb24gYSB0cnVjayB0byBDaGljYWdvIGluc2lkZSBhIGNvbnRhaW5lciBvZiBwYXBlciBiYWxlcy4gRnJvbSB0aGVyZSBzaGUgd2FzIHNoaXBwZWQgdG8gQmVsZ2l1bSwgZmluYWxseSBhcnJpdmluZyBpbiBGcmFuY2Ugd2hlcmUgZW1wbG95ZWVzIGF0IGEgbGFtaW5hdGluZyBjb21wYW55IGZvdW5kIGhlciB0aGluIGFuZCB0aGlyc3R5LiAKIkF0IGFueSBvdGhlciBwb2ludCwgeW91IGFyZSBhbHNvIGFuIGVtcGxveWVlIG9mIHRoZSBjbHViLiBXZSBoYXZlIGV4cGxhaW5lZCB0byBoaW0gd2hhdCBzb3J0IG9mIGJlaGF2aW9yIHdlIGV4cGVjdCBmcm9tIG91ciBwbGF5ZXJzLiBXZSBjYW4gb25seSBob3BlIHRoYXQgaGUgaGFzIGJlZW4gdGF1Z2h0IGEgbGVzc29uIGFuZCB3aWxsIGNoYW5nZSBoaXMgYmVoYXZpb3IuIgpJIGhhZG4gaGVhcmQgb2YgU2FidSBhbmQgSWNoaSBhbmQgSSB1bnN1cmUgaWYgSSB3YW50IHRvIHdhdGNoIGl0LCBvdGhlciB0aGFuIGZvciBpbmZvcm1hdGlvbi9oaXN0b3JpY2FsIGludGVyZXN0IGluIHRoZSBzdWJqZWN0LCBidXQgcmVhZGluZyBhYm91dCBpdCB3YXMgZGVmaW5pdGVseSBpbnRlcmVzdGluZy4gSSBsaWtlIGhvdyB5b3Ugc3RhcnRlZCB3aXRoIFRva2l3YSBzIGFuZCBTdHVkaW8gWmVybyB0byB0aWUgaXQgaW4sIGFzIHRob3NlIEkgd2FzIG1vcmUgZmFtaWxpYXIgd2l0aCBzbyBteSBpbnRlcmVzdCB3YXMgcGlxdWVkIHJpZ2h0IGZyb20gdGhlIHN0YXJ0LiBQbHVzLCBJIGFsd2F5cyBsaWtlIHRoZSBleHRyYSBpbmZvIG9uIFJpbnRhcm8gYXMgaXQgc29tZW9uZSB3aG9zZSB3b3JrcyBmZWVsIHNvIHN0cmFuZ2UsIG5vdCBqdXN0IGJlY2F1c2Ugb2YgY29udGVudCBvciB0aGUgd2F5IHRoZXkgYXJlIHBvcnRyYXllZCBidXQgYWxzbyB3aXRoIGhvdyBoaXQgb3IgbWlzcyB0aGV5IGNhbiBiZSwgYXQgbGVhc3QgZm9yIG1lLiBJIGJlZW4gc2xvd2x5IGdvaW5nIHRocm91Z2ggdGhlbSBvdmVyIHRoZSB5ZWFycyBhbmQgaG9wZWZ1bGx5IHdpbGwgY29tcGxldGUgdGhlbSBhbGwgb25lIGRheS4KRGVzaWduLCBTZXR0aW5nLCBhbmQgUGFydGljaXBhbnRzIFRoZSBCZXRhZmVyb24vQmV0YXNlcm9uIGluIE5ld2x5IEVtZXJnaW5nIG11bHRpcGxlIHNjbGVyb3NpcyBGb3IgSW5pdGlhbCBUcmVhdG1lbnQgc3R1ZHkgd2FzIGEgcmFuZG9taXplZCB0cmlhbCBvcmlnaW5hbGx5IGRlc2lnbmVkIHRvIGV2YWx1YXRlIHRoZSBpbXBhY3Qgb2YgZWFybHkgdnMgZGVsYXllZCBpbnRlcmZlcm9uIGJldGEgMWIgdHJlYXRtZW50IGluIHBhdGllbnRzIHdpdGggY2xpbmljYWxseSBpc29sYXRlZCBzeW5kcm9tZS4gU2VydW0gMjUoT0gpRCBjb25jZW50cmF0aW9ucyB3ZXJlIG1lYXN1cmVkIGF0IGJhc2VsaW5lIGFuZCA2LCAxMiwgYW5kIDI0IG1vbnRocy4gQSB0b3RhbCBvZiA0NjUgb2YgdGhlIDQ2OCBwYXRpZW50cyByYW5kb21pemVkIGhhZCBhdCBsZWFzdCAxIDI1KE9IKUQgbWVhc3VyZW1lbnQsIGFuZCAzMzQgcGF0aWVudHMgaGFkIHRoZW0gYXQgYm90aCB0aGUgNiAgYW5kIDEyIG1vbnRoIChzZWFzb25hbGx5IGFzeW5jaHJvbm91cykgbWVhc3VyZW1lbnRzLiAKVGhlIGZvcmVzdCBpbmR1c3RyeSBpcyBiaWcgdXAgdGhlcmUgc28gdGhlcmUgaXMgYWxvdCBvZiBtaWxscyB3aGljaCB3b3VsZCBiZSBnb29kIGZvciBiZWluZyBhYmxlIHRvIHJlYnVpbGQgb3IgbWFpbnRhaW4gYW5kIGZvciB0cmFkZS4gCkZvciBleGFtcGxlOiBCb2FyZDogQXMgS3MgOXMgN3MgMnMgSmltOiA4YyA1ZCBUYW06IFRzIFRoIEppbSdzIEhhbmQgaXMgdGh1czogQXMgS3MgOXMgN3MgMnMgVGFtJ3MgSGFuZCBpcyBob3dldmVyOiBBcyBLcyBUcyA5cyA3cyBZb3UgY2FuIHRodXMgc2VlIGluIHRoZSB0aGlyZCBwb3NpdGlvbiBUYW0gaGFzIGEgaGlnaGVyIHZhbHVlZCBjYXJkIGFuZCBpcyB0aGUgd2lubmVyIG9mIHRoZSBwb3QuIElmIG5laXRoZXIgcGxheWVyIGhhcyBhIGhpZ2hlciBoYW5kIHRoZW4gdGhlIHBvdCBpcyBzaW1wbHkgc3BsaXQuIChGdWxsIEFuc3dlcikuIApXZWxsIGZpdHRpbmcgc2thdGVzIHdpbGwgYWxsb3cgeW91IHRvIHNrYXRlIGJldHRlciB3aGVuIHlvdSBoYXZlIHNvbWVvbmUgZXhwbGFpbmluZyB0byB5b3UgaG93IHRvIHNrYXRlLiBJdCBub3QgdGhlIGV4YWN0IGFuc3dlciB5b3UgbG9va2luZyBmb3IsIGJ1dCBpZiB5b3Ugd2FudCB0byBza2F0ZSBiZXR0ZXIgICBsZWFybiB0byBza2F0ZSB3aGlsZSB1c2luZyBnb29kIGVxdWlwbWVudC4uIApBbHNvIGxvb2sgaW50byBQaW5rIFJpYmJvbnMgSW5jLiBJdCdzIG9uZSBvZiB0aGUgbW9zdCBkZXByZXNzaW5nIGxvb2tzIGludG8gY2FwaXRhbGlzbSBjbyBvcHRpbmcgYWN0aXZpc3QgbW92ZW1lbnRzIGZvciByZXZlbnVlLiBUaGV5IGdldCBpbnRvIHRoaXMgaW4gdGhlIGRvY3VtZW50YXJ5IGJ1dCB0aGUgb3JpZ2luYWwgYW50aSBjYW5jZXIgYWN0aXZpc3RzIHdlcmUgZW52aXJvbm1lbnRhbGlzdHMgYW5kIGFudGkgY2FwaXRhbGlzdHMgd2hvIGRlbWFuZGVkIHRoYXQgcmVzZWFyY2ggYmUgZG9uZSBvbiBob3cgaW5kdXN0cmlhbCBwcm9kdWN0aW9uIGFuZCBwcm9kdWN0cyB3ZXJlIGNvbnRyaWJ1dGluZyB0byBjYW5jZXIgYW5kIGhvdyB0aGlzIGhpc3RvcnkgYW5kIGxlZ2FjeSBoYXMgYmVlbiBlc3NlbnRpYWxseSBlcmFzZWQgaW4gZmF2b3Igb2YgZmVlbCBnb29kICJmdWNrIGNhbmNlciEiIHJoZXRvcmljIHRoYXQgc3RhZ2VzIGl0IGFzIGEgImJhdHRsZSIgd2l0aCAic3Vydml2b3JzIiBpbnN0ZWFkIG9mIGEgbWFzc2l2ZSBwdWJsaWMgaGVhbHRoIGlzc3VlIHRoYXQgY29uZGVtbnMgbW9zdCBjb3Jwb3JhdGlvbnMuCkkgcmVtZW1iZXIgaW4gbWlkZGxlIHNjaG9vbCB3ZSBoYWQgYSBwaXp6YSBib3dsIGl0IHdhcyBvbmx5IHNlcnZlZCBvbmNlIGFuZCBteSBnb2Qgd2FzIHRoYXQgc28gZnVja2luZyBkZWxpY2lvdXMhISEgdGhpbmsgb2YgYSBjaGVlc2UgYm93bCB3aGVyZSB0aGUgYm93bCBpcyBicmVhZCBqdXN0IGhvbGxvd2VkIG91dCBhbmQgYWxsIHRoZSB0b3BwaW5ncyBvZiBhIHBpenphIGFuZCB0aGUgY2hlZXNlIGFuZCB0b21hdG8gc2F1Y2Ugd2FzIGluIGl0LiBCeSBmYXIgYmVzdCBsdW5jaCBJIGhhdmUgZXZlciBoYWQhIG9yIG15IG90aGVyIGZhdm9yaXRlIHdhcyB0aGUgY3Jpc3BpdG9zPyBraW5kYSBsaWtlIHRhcXVpdG9zIGJ1dCB0aGUgdG9ydGlsbGEgd2FzIHZlcnkgdGhpbiBhbmQgdGhleSB3ZXJlIGZyaWVkIGFuZCBoYWQgZ3JlZW4gY2hpbGkgcG91cmVkIG92ZXIgaXQgYW5kIGEgc3ByaW5rbGUgb2Ygc2hyZWRkZWQgY2hlZGRhci4gR3JlYXQgSSBhbSBodW5ncnkgbm93IGxvbC4gClRvIGRvIHRoaXMsIGNsaWNrIG9uIHRoZSB0aXRsZSBpbiB0aGUgbGlzdCBhdCB0aGUgYm90dG9tIG9mIHRoaXMgcGFnZS5PbmNlIHlvdSd2ZSByZWFkIHRoZSBFbnRyeSwgZG9uJ3QgY2xpY2sgb24gU1RBUlQgQSBDT05WRVJTQVRJT04gYXQgdGhlIGJvdHRvbSBvZiB0aGUgZW50cnkuIAozMS4gClBlcHBlciBpcyB0aGUgZmlyc3QgYmlyZCB0byBldmVyIGJlIG5vbWluYXRlZCBmb3IgUHJlc2lkZW50ISBQZXBwZXIgaGFzIGJlZW4gd29ya2luZyBoYXJkLiAKU28gd2h5IG5vdCB3b3JrIHRoZW0gaW50byB5b3VyIGdhbWU/IElmIGEgQ29rZSBvciBQZXBzaSBjb21tZXJjaWFsIGNvbWVzIG9uIGJlZm9yZSBhIGJlZXIgY29tbWVyY2lhbCwgb25lIG9mIHlvdSBoYXMgdG8gc3RyaXAuIEEgRmVkIEV4IGNvbW1lcmNpYWwgbWVhbnMgb25lIG9mIHlvdSBoYXMgdG8gZmVlZCB0aGUgb3RoZXIgb25lLCB3aGlsZSBudWRlLCBvciBhIHBpenphIGNvbW1lcmNpYWwgZ2V0cyB5b3UgeW91ciBmYXZvcml0ZSBzZXh1YWwgZmFudGFzeS4uIApUaGUgc2Vhc29uIGxvbmcgcmVzZWFyY2ggcmVjb2duaXplZCBhcyB0aGUgZmlyc3QgZXZlciBwcm9mZXNzaW9uYWwgY2hlZXJsZWFkaW5nIHN0dWR5IHB1Ymxpc2hlZCBpbiBhIHBlZXIgcmV2aWV3ZWQgam91cm5hbCwgaW52b2x2ZWQgNDMgZmVtYWxlcyB3aG8gd2VyZSBpbnN0cnVjdGVkIHRvIGluY29ycG9yYXRlIGVsYXN0aWMgYmFuZCBsb29wIGVjY2VudHJpYyBleGVyY2lzZXMgZHVyaW5nIGJpIHdlZWtseSBwcmFjdGljZXMgYW5kIGF0IGxlYXN0IHRocmVlIGFkZGl0aW9uYWwgdGltZXMgcGVyIHdlZWsgZHVyaW5nIG5vbiBwcmFjdGljZSBkYXlzLgpJIG5vdCB0cnlpbmcgdG8gYmUgb2J0dXNlIGhlcmUsIEkgZ2V0IHlvdXIgY29uY2VybnMsIGJ1dCB5b3Ugd2VyZSBpbiBhbm90aGVyIHRocmVhZCBqdXN0IGNsYWltaW5nIHRoYXQgdGhlc2UgY2xhaW1zIGNhbWUgcmFuZG9tbHkgb3V0IG9mIG5vd2hlcmUuIApPbmNlIHlvdXIgYmVsbHkgZ2V0cyBsYXJnZSwgeW91IHdpbGwgbm90IGJlIGFibGUgdG8gbGllIG9uIHlvdXIgc3RvbWFjaCB3aXRob3V0IGhlbHAuIApDZSBzZXJhIHBsdXMgb3UgbW9pbnMgY2UgcXVpIHNlIHBhc3NlcmEuIApJIGluY2xpbmVkIHRvIGtlZXAgcGxheWluZyBvbiB0aGUgbGF6eSBzaWRlLCBhcyBpdCBoYXMgZW5hYmxlZCBtZSB0byBwcm9kdWNlIGEgcHJldHR5IG5pY2Ugc3RyZWFtIG9mIHJlc3VsdHMgb3ZlciB0aW1lIHRoYXQgSSBuZXZlciB3b3VsZCBoYXZlIGNvbnNpZGVyZWQgaWYgSSB3YXMgc3RhbmRpbmcgb24gdGhlIG90aGVyIHNpZGUgb2YgdGhlIGRlYmF0ZS4uIApFdmVudHVhbGx5IGNpdHkgY291bmNpbGxvcnMgd29rZSB1cCBhbmQgdGhlIGZhbnRhc3kgZml6emxlZC4uIAoxVGhlIG9sZGVyIHJlbGF0aXZlcyBhbmQgcGFyZW50cyBkb24ndCBzZWVtIHRvIGJlIGFibGUgdG8gZ2V0IHVzZWQgdG8gdGhlIGZhY3QgdGhhdCBJIGRvbid0IGxpa2UgdGhlIHNob3J0IGZvcm0gb2YgbXkgZ2l2ZW4gbmFtZSwgb3IgbXkgZ2l2ZW4gbmFtZSBmb3IgdGhhdCBtYXR0ZXIsIGFuZCBpbnNpc3Qgb24gdXNpbmcgaXQgd2hlbmV2ZXIgdGhleSB3aXNoIHRvIHNwZWFrIHRvIG1lLiBKdXN0IGhhdmUgdG8gZ3JpbiBhbmQgYmVhciBpdCBJIHN1cHBvc2UhMkkgaGFkIHNvbWV3aGVyZSBvdmVyIDcwIGF0IGxhc3QgY291bnQsIGJ1dCBJJ3ZlIGxvc3QgY291bnQgYW5kIGhhdmVuJ3QgcmVjb3VudGVkIHNpbmNlM0ZvciBzb21lIHJlYXNvbiwgbG90cyBvZiBwZW9wbGUgYXNzdW1lIHRoYXQgbmRyIGlzIGEgbWFsZSBuYW1lLjRIb3cgZG8gSSBkbyB0aGUgIHRoaW5nPyBJZiB5b3UgYXJlIHJ1bm5pbmcgV2luZG93cyBhcyBhbiBPUywgdGhlbiBtYWtlIHN1cmUgbnVtbG9jayBpcyBvbiwgaG9sZCBkb3duIHRoZSBBbHQga2V5IGFuZCBvbiB0aGUgbnVtZXJpYyBrZXlwYWQgcHJlc3MgMDE5OCwgdGhlbiByZWxlYXNlIHRoZSBBbHQga2V5LiBJZiB5b3UgYXJlIG9uIGEgTWFjLCBob2xkIGRvd24gc2hpZnQsIHRoZSBvcHRpb24ga2V5IGFuZCB0aGVuIHRoZSBhcG9zdHJvcGhlIG9yIHF1b3RhdGlvbiBtYXJrIGtleSAnIGFuZCB0aGVuIHJlbGVhc2UuIEhleSBwcmVzdG8gIS4KWW91IG11c3QgYmUgYW4gYWN0aXZlIGFuZCBwYXJ0aWNpcGF0aW5nIG1lbWJlciBvZiBvdXIgY29tbXVuaXR5IGJlZm9yZSB5b3UgYWxsb3dlZCB0byBsaW5rLiBMaW5rIG9ubHkgcG9zdHMgYXJlIG5vdCBhbGxvd2VkIGV2ZW4gZnJvbSBhY3RpdmUgbWVtYmVycyBvZiB0aGUgY29tbXVuaXR5OiBsaW5rcyBtYXkgYmUgdXNlZCBhcyBhbiBpbGx1c3RyYXRpb24gb2YgYSBicm9hZGVyIHBvaW50LCBub3QgYXMgdGhlIGNlbnRlcnBpZWNlIG9mIHRoZSBwb3N0LiAKQWxzbyBpbiAyMDA5LCBXaGl0ZXMsIHdobyBtYWtlIHVwICsgIDc5JSBvZiB0aGUgcG9wdWxhdGlvbiwgbXVyZGVyZWQgb25seSAyMDkgQmxhY2tzICAgbGVzcyB0aGFuIGhhbGYgdGhlIHJldmVyc2UuCldlIHdlcmUgdG9sZCB0aGF0IGEgd2VsY29taW5nIGNlcmVtb255IG9uIHRoZSB0YXJtYWMgbWlnaHQgYmUgY2FuY2VsZWQgYmVjYXVzZSBvZiBzbmlwZXIgZmlyZSBpbiB0aGUgaGlsbHMgc3Vycm91bmRpbmcgdGhlIGFpciBzdHJpcC4gCkFzIEkgbGF0ZXIgZm91bmQgb3V0LCB0aGUgc2VsbGVyIHBheXMgcmVhbHRvciBmZWVzIGFuZCB0aGUgYnV5ZXIgcGF5cyBjbG9zaW5nIGNvc3RzLiBJIGRpZG4ndCBoYXZlIHRoZSAkNCA1SyB0byBjbG9zZSBvbiB0aGUgcHJvcGVydHksIHNvIG5hdHVyYWxseSBJIHdlbnQgYmFjayB0byB0aGUgc2VsbGVyIGFuZCBvZmZlcmVkICQxNDVrIGlmIGhlIHBheXMgY2xvc2luZyBjb3N0cy4gV2UgaGFnZ2xlZCBhIGxpdHRsZSBtb3JlIGFuZCBzZXR0bGVkIG9uICQxNDYsNTAwIGFuZCBoZSB3b3VsZCBwYXkgY2xvc2luZyBjb3N0cy4gCkkgYWxzbyBiZWVuIHJlYXIgZW5kZWQgKG1lIHBhcmtlZCwgdGhlbSBhcm91bmQgNTBtcGgpLiBCb3RoIHRpbWVzIG5vdCBteSBmYXVsdCwgYm90aCB0aW1lcyBJIGNhbWUgb3V0IGNvbXBsZXRlbHkgdW5oYXJtZWQuIApJIHdvbiBnbyB0aHJvdWdoIHRoZSBsb2NhbCBib25kZWQgc2Nob2xhcnNoaXBzIGNvcyB0aGV5IGFsbCBvbmxpbmUgMTM4IHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpJbmRlZWQsIHdoZW4geW91ciBib2R5LCBtaW5kLCBhbmQgc3Bpcml0IGFyZSBjb25uZWN0ZWQgYW5kIHJlbGF4ZWQsIHlvdSBhcmUgbW9yZSByZXNpbGllbnQgdG8gc3RyZXNzLiAKU2l2aXJBcHByb3ZlcyAgIDQgcG9pbnRzICBzdWJtaXR0ZWQgMyB5ZWFycyBhZ28KVGhlc2UgcGVvcGxlIHRydWx5IGRvIG5vdCBjYXJlIGFib3V0IHRoZSBsb3NzIGFuaW1hbCBsaXZlcyBleGNlcHQgaWYgaXQgaXMgZHVlIHRvIHRoZSBodW1hbiBkaWV0LiBUaGVpciBzZW50aW1lbnQgaXMgc2ltaWxhciBDb25zZXJ2YXRpdmVzIHdobyBmaWdodCBmb3IgdGhlIHJpZ2h0cyBvZiB1bmJvcm4gZmV0dXNlcyBidXQgZG9uIGdpdmUgYSBzaGl0IGFib3V0IHRoZSBjaGlsZCBhZnRlciBpdCBpcyBib3JuLiBBcyBsb25nIGFzIGl0IGlzbiBlYXRlbiwgdGhleSBkb24gZ2l2ZSBhIGZ1Y2sgd2hhdCBoYXBwZW5zIHRvIGl0LiAKQXZhbGxvbmUsIHdobyB3aWxsIHNvb24gY29tcGxldGUgdGhlIHRoaXJkIHF1YXJ0ZXIgb2YgYW4gODAwIGhvdXIgcHJvZ3JhbSBhdCB0aGUgc2Nob29sLCBzYWlkIHRoZSBuZXdzIGFib3V0IHRoZSBzY2hvb2wncyBhYnJ1cHQgY2xvc3VyZSB3YXMgImh1cnRmdWwuIiJUaGUgbW9zdCBzaG9ja2luZyBwYXJ0IGlzIGhvdyBxdWlja2x5IGl0IHdhcyBoYXBwZW5pbmcsIiBoZSBzYWlkLiAKU2VlLCBteSB3aWZlIGlzIHRoZSBldmVudHMgZGlyZWN0b3IgZm9yIG91ciBsb2NhbCBjaHVyY2ggYW5kIHRoaXMgaXMgbm90IGEgc21hbGwgY29uZ3JlZ2F0aW9uLiBBY2NvcmRpbmcgdG8gb3VyIHJlY29yZHMgd2UgaGF2ZSBhcm91bmQgMTIwMCBwZW9wbGUgd2hvIGNvbWUgZm9yIG1hc3MgZWFjaCB3ZWVrZW5kLiAKV2l0aCBXaGVhdHVzLiBBbHNvIFN1bmRheS4gCkJvdGggYmVjYXVzZSB0aGUgY29uc2VxdWVuY2VzIGFyZSBzbyBmYXIgcmVhY2hpbmcgICB5b3UgZ29pbmcgdG8gYmUgcGF5aW5nIG9mZiBhICQzMGsgd2VkZGluZyBmb3IgeWVhcnMgICBhbmQgYmVjYXVzZSBpdCBoZWxwcyBzZXQgdGhlIHRvbmUgZm9yIHlvdXIgZW50aXJlIG1hcnJpYWdlLiBEbyB5b3UganVzdCBwbGFuIHRvIGdvIHdpdGggdGhlIGZsb3cgaWYgeW91IHR3byBkaXNhZ3JlZSBvbiBraWRzICh3aGVuLCBob3cgbWFueSwgaG93IHRvIHJhaXNlIHRoZW0sIGV0Yyk/LiAKRG9nIHdhbGtlcnMgY2hhcmdlIGFuIGF2ZXJhZ2UgaG91cmx5IGZlZSBmcm9tICQxNSB0byAkMjUsIGRlcGVuZGluZyBvbiB3aGV0aGVyIHRoZSBkb2cgaXMgd2Fsa2VkIGluIGEgcGFjayBvciBhbG9uZS4gRm9yIHRoZXNlIHBldCBqb2JzIGFyZSBleHRyZW1lbHkgbG93LCBzYXlzIEJvdXRlbGxlLiAKQW5kIGEgc3Rha2UgdG8gdGhlIGhlYXJ0IGlzIGltcG9zc2libGUgc2luY2UgY2xlYXJseSB0aGVzZSBwZW9wbGUgaGF2ZSBubyBoZWFydC4gTm8sIHRoZSBvbmx5IHNvbHV0aW9uIGlzIHRvIGRlbWFuZCB0aGF0IHRoZSAic2Vjb25kIGJhaWxvdXQiICh0aGUgaW5ldml0YWJsZSBuZXh0IGluZnVzaW9uIG9mIGNhc2ggdG8gdHJ5IHRvIGdldCB0aGUgZWNvbm9teSBnb2luZyBhZ2FpbikgYmUgZm9yIHRoZSBwZW9wbGUsIG5vdCB0aGUgYmFua2Vycy4gCld1LCBhIHN0YXIgb2YgIkNyYXp5IFJpY2ggQXNpYW5zLCIgd29yZSBhIGRlbGljYXRlIHBsZWF0ZWQgZ293biB3aXRoIGZsdXR0ZXJ5IGFzeW1tZXRyaWNhbCBzbGVldmVzIGFuZCBhIHN3ZWV0aGVhcnQgbmVja2xpbmUuIEl0IHdhcyBjdXN0b20gVmVyc2FjZS4gU2hlIHB1bGxlZCBoZXIgaGFpciBiYWNrIGluIGEgeW91dGhmdWwgaGlnaCBwb255dGFpbCwgd2hpY2ggYWxsb3dlZCBoZXIgZHJvcCBkaWFtb25kIGVhcnJpbmdzIHRvIHNoaW5lLgpUb29rIGl0IHRvIGNvdXJ0IGFuZCBzdXJlIGVub3VnaCBpdCBoZWxkIHVwLCBoYWQgSSBnb3R0ZW4gYW4gZXhwZW5zaXZlIGxhd3llciBtYXliZSB0aGV5IGNvdWxkIGhhdmUgZG9uZSBzb21ldGhpbmcsIGJ1dCBJIHdhcyB0cnlpbmcgdG8gZmlnaHQgaXQgbXlzZWxmIHNpbmNlIGl0IHdhcyBjbGVhciB0aGV5IGhhZCBubyBwcm9vZi4KU2FtZSBob2xkcyB0cnVlIGluIHNlbGxpbmcuIApWb3VzIHZvdWxleiBwcmVuZHJlIHJlbmRleiB2b3VzPyBJbCBoc2l0ZS4gClN0cmFpZ2h0OiBGaXZlIGNhcmRzIGluIHNlcXVlbmNlLCBidXQgbm90IGluIHRoZSBzYW1lIHN1aXQuIApHZW9yZ2UgVy4gQnVzaCByZWZ1c2VkIHRvIHNpZ24gdGhlIGFjdCBpbnRvIGxhdyBiZWNhdXNlIGhlIHNhdyBubyBuZWVkIHRvIGhhdmUgdGhlIHN5bWJvbGljIHdlaWdodCBvZiBoYXRlIGNyaW1lIGxhdyBiZWNhdXNlIGhlIGhhZCB0aGUgcmFjaWFsIHByaXZpbGVnZSB0aGF0IGFsbG93ZWQgaGltIG5vdCB0byBzZWUgdGhlIHN5bWJvbGljIHdlaWdodCBvZiBseW5jaGluZ3MuLiAKV2hlbiB5b3UgZW50ZXIgdGhlIHJvb20gYW5kIGludHJvZHVjZSB5b3Vyc2VsZiwgdHJ5IHRvIGZpZ3VyZSBvdXQgaWYgeW91ciBjbGllbnQgd2lsbCBiZSB0aGUgY2hhdHR5IHR5cGUgb3IgdGhlIG15c3RlcmlvdXMgc2lsZW50IHR5cGUuIAo1IHBvaW50cyAgc3VibWl0dGVkIDIwIGRheXMgYWdvSSB3aXRoIHlvdSBvbiB0aGlzIG9uZS5JIGhhdmUgdGhlIG9sZCBzcGVjaWFsIGVkaXRpb24gYXJ0Ym9vayBhbmQgZXZlbiB0aGF0IG9uZSB3YXMgbmljZXIgaWYgbWVtb3J5IHNlcnZlcyByaWdodC4gCkVkaXQgZm9yIHF1ZXN0aW9uczogImhvdXNlIHNpdHRpbmciIHdhcyB0aGUgd3Jvbmcgd29ybGQsIEkgd2VudCBvdmVyIGV2ZXJ5IGRheSB0byBmZWVkIHRoZWlyIGFuaW1hbHMsIGJyaW5nIGluIHRoZSBtYWlsLCBldGMsIHRoZXkgbGl2ZWQgcHJldHR5IGNsb3NlIHRvIG1lLiBZIGFyZSBzb21lIHNpY2sgZnVja3MsIHdlIHdlcmUgMTIuIE15IG1vbSBoYWQgZmluY2hlcyB0b28sIGhlbmNlIHdoeSBJIHdhcyB0YXNrZWQgdG8gdGFrZSBjYXJlIG9mIHRoaXMgb25lLCB3ZSBqdXN0IGFkZGVkIGl0IHRvIHRoZSBmbG9jay4gVGhlIGNhZ2UgaGFkIHNsaWRlIHVwIGRvb3JzIGZvciB0aGUgZm9vZCBhbmQgd2F0ZXIgdHJheSwgSSBjb252aW5jZWQgdGhhdCBob3cgdGhlIGJpcmQgZ290IG91dApUaGVzZSBzZWN0aW9ucyBzaG91bGQgY292ZXIgZXZlcnl0aGluZyB5b3Ugd2FudCB0byBzYXkuIApBbnl3YXlzLCBhbm90aGVyIHJlYXNvbiBpcyBwcm9iYWJseSB0aGF0IHRoZSBjb21wYW55IGl0c3NlbGYgaXMgcHJldHR5IGNoaWxsIHdpdGggb25seSBsaXR0bGUgc3VwZXJ2aXNpb24gKGluIG15IGNhc2UgYXQgbGVhc3QpIGFzIGxvbmcgYXMgSSBkbyBteSBqb2IsIGl0IHBheXMgcHJldHR5IHdlbGwgYW5kIHNvbWUgb2YgdGhlIHBlb3BsZSB0aGF0IHdvcmsgZm9yIG91ciBjdXN0b21lcnMgYXJlIGF3ZXNvbWUuIApXYXJtIElzbGFuZCBSZWdhcmRzIE91dHJpZ2dlciBXYWlraWtpIEJlYWNoIFJlc29ydFJlYWQgbW9yZUhpISAyIHRoaW5nczoxKSBXaGF0IGFyZSB0aGUgbWFpbiBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIE91dHJpZ2dlciBSZWVmIGFuZCB0aGUgT3V0cmlnZ2VyIFdhaWtpa2kgQmVhY2ggUmVzb3J0PzIpIERvIGJvdGggcmVzb3J0cyBvZmZlciBwdWxsIG91dCBjb3VjaGVzIGFuZC9vciByb2xsYXdheSBiZWRzPyBJIGhhdmUgMiB0ZWVuYWdlIGJveXMgYW5kIDIgYmVkcyBhbG9uZSBhcmVuIGdvaW5nIHRvIGJlIGJpZyBlbm91Z2ghQW5zd2VyIGZyb20gQU1HSmFuIDIwMTkgVGhlIEJlYWNoIGlzIHJpZ2h0IGluIHRoZSBtaWRkbGUgb2YgV2Fpa2lraS4gClNpbWlsYXIgZ29lcyBmb3IgZHJlc3NpbmcsIGVhdGluZyBhbmQgZHJpbmtpbmc7IHlvdSBtYXkgZWl0aGVyIHNtb2tlIG5vbiBxdWl0IG9yIHN0YXkgd2l0aGluIGEgbm9uIHNtb2tpbmcgZW52aXJvbm1lbnQ7IHB1dCBvbiB5b3VyIHNsb3BwaWVzdCBjbG90aGluZyBvciByZW1haW4gbmFrZWQ7IGVhdCwgZHJpbmssIHRhbGsgYXJvdW5kIHRoZSB0ZWxlcGhvbmUsIHdhdGNoIFRlbGV2aXNpb24sIHdoYXQgZXZlci4gCkJ5IERhbmllbCBIdWdoZXM6IFRoZSBoZWF2eXdlaWdodCBwaWN0dXJlIGlzIHNvb24gYWJvdXQgdG8gY2hhbmdlIHdpdGggZm9ybWVyIFdCQyBoZWF2eXdlaWdodCBjaGFtcGlvbiBWaXRhbGkgS2xpdHNjaGtvIGZpZ2h0aW5nIGEgcG9saXRpY2FsIGNhcmVlciB0aGF0IG1heSB0dXJuIG91dCB0byBiZSB0b3VnaGVyIGV2ZW4gdGhhbiB3aGF0IGhlIGV4cGVyaWVuY2VkIGR1cmluZyBoaXMgcmluZyBjYXJlZXIuIFNvIHdlIGFyZSBsZWZ0IHdpdGggV2xhZGltaXIgS2xpdHNjaGtvLiBUaGUgMzcgeWVhciBvbGQgbWF5IG5vdCBiZSB0b28gbG9uZyBpbiBmb2xsb3dpbmcgaGlzIGVsZGVyIGJyb3RoZXIgaW50byByZXRpcmVtZW50LCBhcyBoZSBvcGVubHkgYWRtaXRzIHRoZSBtb3RpdmF0aW9uIHRvIGtlZXAgZ29pbmcgaXMgcHJvYmFibHkgaGFyZGVyIHRoYW4gdGhlIGNoYWxsZW5nZXMgaW4gZnJvbnQgb2YgaGltLgpUaGVzZSBjaGlwcyBjb21lIGluIHZhcmlvdXMgZGVub21pbmF0aW9ucy4gClllYWgsIGZvciBzb21lIHJlYXNvbiB0aGUgd2lkZSBvcGVuIHNwb3QgcmlnaHQgd2hlcmUgaGUgYXBwcm9hY2hlZCB3YXMgbm90IGdvb2QgZW5vdWdoLiAKRm9yIEFtYXpvbiwgaXQncyBtdWNoIG1vcmUgaW52b2x2ZWQsIGFuZCBJIHRoaW5rIG1vcmUgZGVmZW5zaWJsZSAgIGJ1dCBzdGlsbCBub3QgYSBncmVhdCBpZGVhLgogMSBwb2ludCAgc3VibWl0dGVkIDIgaG91cnMgYWdvSSBwbGF5ZWQgYSBnYW1lIHdoZXJlIG15IHRlYW1tYXRlcyBtYXJrZXQgdGhlIGhvdHpvbmUgYXMgd2hlcmUgdGhleSB3ZXJlIGdvaW5nIHRvIGRyb3AuIFRoZW4gdGhleSB3ZXJlIHNsb3dseSBmbG9hdGluZyB0byBpdCBzbyBJIGJyb2tlIG9mZiBzbyBJIGNvdWxkIGdldCBkb3duIGZhc3Rlci4gSGl0IHRoZSBncm91bmQsIHN0YXJ0ZWQgbG9vdGluZywgb25seSB0byByZWFsaXNlIEkgd2FzIHRoZSBvbmx5IHBlcnNvbiBpbiB0aGUgd2hvbGUgYXJlYS4gCkxhcyBWZWdhcyBpcyBvbmx5IGFuIGhvdXIgcGxhbmUgcmlkZSwgYW5kIHlvdSBjYW4gZ2V0IGRlYWxzIGZvciAyOSBkb2xsYXJzIGVhY2ggd2F5IHNvbWV0aW1lcy4gCllvdSBtYXkgd2FudCB0byBzZWVrIGFjdHVhbCBsZWdhbCByZXByZXNlbnRhdGlvbiBpZiB5b3Ugd2FudCB0byByZWNvdmVyIHRoZSBmdWxsIGFtb3VudCAodGhvdWdoIEkgbm90IHN1cmUgaWYgeW91IHJlY2VpdmUgYXMgbXVjaCBhZnRlciBsYXd5ZXIgZmVlcykuLiAKQmFjayBob21lIGluIEtlbG93bmEsIHdoaWxlIHN0aWxsIGEgc3R1ZGVudCBhdCBNdC4gQm91Y2hlcmllIFNlY29uZGFyeSwgc2hlLCBMZWl0Y2gsIGFuZCBvdGhlciBoaWdoIHNjaG9vbCBzdHVkZW50cyBpbiB0aGUgY2l0eSwgZm91bmRlZCB0aGUgS2Vsb3duYSBBbGwgWW91dGggRW1wb3dlcm1lbnQgR3JvdXAsIHdoaWNoIHB1dHMgb24gbW90aXZhdGlvbmFsIGFzc2VtYmxpZXMgaW4gaGVyIGhvbWUgdG93biB0byByYWlzZSBhd2FyZW5lc3Mgb2YgZ2xvYmFsIGh1bWFuaXRhcmlhbiBpc3N1ZXMuCkJvdGggeW91IGFuZCBJIGFyZSBjb3JyZWN0OyBpdCBqdXN0IHRoYXQgd2UgbWFraW5nIGRpZmZlcmVudCBwb2ludHMsIHdoaWNoIGRvbiBuZWNlc3NhcmlseSBjbGFzaC4uIApLYXVmZW4gU2llIGtlaW5lIHRoZXJpc2NoZW4gbGUgb2huZSBkZW4gUmF0IGVpbmVzIEFyb21hdGhlcmFwZXV0ZW4uIFRoZXJpc2NoZSBsZSBlbnRoYWx0ZW4gc2VociB3aXJrdW5nc3ZvbGxlIFN1YnN0YW56ZW4uIApKZXN1cyBDaHJpc3QsIHRoaXMgaXMgY29tcGxldGUgc3BlY3VsYXRpb24uIFlvdSBndXlzIGNvbXBsYWluIGFib3V0IHRoZSBzdGF0ZSBvZiBvdXIgY3VycmVudCBtZWRpYSBjeWNsZSBhbmQgdGhlbiBtYWtlIHRoZXNlIHBvc3RzIG5vdCBvbmx5IHJlbGlzaGluZyBpbiB0aGUgZHJhbWEgb2YgaXQgYWxsIGJ1dCBhbHNvIGdpdmluZyBsZWdpdGltYWN5IHRvIHRoZSB2ZXJ5IG5ld3N0YXRpb25zIHlvdSBjcml0aWNpemUuIApLdXJvZGEgaGFzIGJlZW4gYSBsb25nIHN0YW5kaW5nIGNyaXRpYyBvZiB3aGF0IGhlIGJlbGlldmVzIHdlcmUgdGltaWQgQk9KIG1vbmV0YXJ5IHBvbGljaWVzLCBhbmQgd2hpbGUgdGhlIGdlbmVyYWwgZGlyZWN0aW9uIGhlIHdhbnRlZCB0byB0YWtlIHRoZSBCT0ogd2FzIGNsZWFyIGJlZm9yZSBoZSB3YXMgYXBwb2ludGVkLCBvYnNlcnZlcnMgd2VyZSBuZXZlcnRoZWxlc3MgYSBiaXQgc3VycHJpc2VkIGJ5IGp1c3QgaG93IGFnZ3Jlc3NpdmUgYW4gZWFzaW5nIHN0YW5jZSBoZSBoYXMgcHJvbW90ZWQuLiAKQnV0IHNvbWV0aW1lcyB3aGVuIEkgdGhpbmsgYWJvdXQgdGhlIG1vbmV5IEkndmUgc3BlbnQsIEkgZ2V0IG1hZCBhdCBteXNlbGYuIEknbSBkZWZpbml0ZWx5IHRvbyBkZXBlbmRlbnQgb24gaXQuIEknbSBhZGRpY3RlZC4gSW5zdGVhZCBvZiBnb2luZyBvdXQgd2l0aCBmcmllbmRzIGFmdGVyIHdvcmssIEknbGwgZ28gdG8gdGhlIG1hc3NhZ2UgcGxhY2UuCiggUGxlYXNlIHNjaGVkdWxlIHlvdXIgYXBwdCBhdCBsZWFzdCAyIGhvdXJzIG9yIG1vcmUgaW4gYWR2YW5jZS4gCkJ1dCB0b28gbWFueSBjb21tZW50YXRvcnMgb24gdGhlIGxlZnQgYW5kIHRoZSByaWdodCBoYXZlIGFjY2VwdGVkIHRoZSByaWRpY3Vsb3VzIGlkZWEgdGhhdCB0aGUgT2JhbWEgYWRtaW5pc3RyYXRpb24gaXMgYWN0dWFsbHkgc29jaWFsaXN0LiAKQ2hhcmFjdGVyIEEgc3RhcnRzIGhlcmUgaW4gRXAuIFZJSSBhbmQgZW5kcyB1cCBoZXJlIGluIEVwLiAKSGUgc2hvd3MgbWUgaGlzIG1lbWJlcnMnIGNhcmQsIHdoaWNoIGdldHMgaGltIGFuIGV4dHJhIGRvbGxhciBvZmYgZWFjaCBiZWVyLiBIZSBoYXMgNzAwMCBwb2ludHMuIFRoYXQncyB3b3J0aCAkNzAsIGhlIHNheXMuICJJIHJlY2tvbiBpdCdzIGNvc3QgbWUgc2V2ZW4gZ3JhbmQuIgpTb3JyeSBidXQgSSBhIExlYWZzIGZhbiEgR2FsbGFnaGVyIGlzIGEgaHVnZSBDaW5jaW5uYXRpIEJlbmdhbHMgZmFuIGFuZCBoYXMgYSBjb2xsZWN0aW9uIG9mIG1lbW9yYWJpbGlhIGZyb20gdGhhdCB0ZWFtLCBpbmNsdWRpbmcgYSBqZXJzZXkgd2l0aCBHYWxsYWdoZXIgYW5kIE5vLiAKSXQgY2F0Y2hlcyB0aGUgYXR0ZW50aW9uIG9mIGV2ZXJ5b25lIGluIHRoZSByb29tLiJBcmUgeW91IG91dD8iIHNob3V0cyBvbmUgcGxheWVyLiBCdXQgdGhhdCdzIGEgcmFyaXR5IGZvciB0aGUgMjEgeWVhciBvbGQgcGxheWVyLCB3aG8gb2Z0ZW4gZW5kcyB1cCBwbGF5aW5nIHRoZSBmaW5hbCBoYW5kcyBvZiBhIGxvY2FsIHBva2VyIHRvdXJuYW1lbnQuIEl0J3MgYSB3ZWVrbHkgZXZlbnQsIGFuZCBtYW55IG9mIHRoZSBzYW1lIHBsYXllcnMgd2lsbCBiZSBiYWNrIGF0IHRoZSB0YWJsZXMgdG9uaWdodC4gCkl0IGlzIGEgdmVyeSBzdGFibGUgcGxhdGZvcm0gYW5kIGlzIGJlY29taW5nIHBvcHVsYXIgb3ZlcnNlZXMgYmVjYXVzZSBvZiBpdHMgYWdlLiAKTWFzdGVyRnViYXIgdQpDcml0aWNhbCB0aGVvcmlzdHMgZnJvbSB0aGUgRnJhbmtmdXJ0IFNjaG9vbCBjb250aW51ZWQgdGhpbmtpbmcgYWJvdXQgZXBpc3RlbW9sb2dpZXMgdGhyb3VnaG91dCB0aGUgbWlkZGxlIG9mIHRoZSBjZW50dXJ5LiBXaHksIGlmIHdvcmtlcnMgdW5kZXJzdG9vZCB0aGUgd29ybGQgYmV0dGVyIHRoYW4gdGhlIGJvdXJnZW9pc2llLCBkaWQgdGhleSBub3QgcmlzZSB1cD8gVGhlIGFuc3dlciwgYWNjb3JkaW5nIHRvIEFudG9uaW8gR3JhbXNjaSwgd2FzIHRoZSAiaGVnZW1vbnkiIG9mIHRoZSBpZGVhcyBvZiB0aGUgcnVsaW5nIGNsYXNzZXMuIEluIG90aGVyIHdvcmRzLCB0aGUgaWRlYXMgb2YgdGhlIHJ1bGluZyBjbGFzcyBhcmUgbm90IGp1c3QgZXZlcnl3aGVyZSB0aGUgcnVsaW5nIGlkZWFzLCBidXQgYWxzbyBzbyB0aG9yb3VnaGx5IGNvbnRyb2wgcHVibGljIGRlYmF0ZSB0aGF0IHdlIGNhbm5vdCBlc2NhcGUgdGhlbS4gClRoZSAzMCB0YXAgbGluZXMgYXQgTG92ZWpveSB3aWxsIGluY2x1ZGUgYSBzZWxlY3Rpb24gb2YgTmlnaHQgU2hpZnQgc3RhcGxlcyAgIE5pdGUgTGl0ZSwgV2hpcmxwb29sLCBTYW50aWxsaSwgYW5kIFRoZSA4NyAgYW5kIExvdmVqb3kgZXhjbHVzaXZlcywgaW5jbHVkaW5nIHRoZSBMb3Zlam95IGhvdXNlIElQQSwgYSByZWNpcGUgdGhhdCBlbWVyZ2VkIGFmdGVyIHRoZSBicmV3ZXJ5IHByZXNlbnRlZCBmb3VyIHZlcnNpb25zIHRvIHRoZSBwdWJsaWMgbGFzdCB5ZWFyIGFuZCBnYXZlIHRoZW0gdGhlIG9wcG9ydHVuaXR5IHRvIHZvdGUgZm9yIGEgZmF2b3JpdGUuIApPbmUgb3IgbW9yZSBvZiB0aGVtIGJyb2tlIGludG8gdGhlIGNpdHkgaGFsbCBhdCBuaWdodCBhbmQgc3RvbGUgdGhlIG11bmljaXBhbCByZWdpc3RlciB0aGF0IGNvbnRhaW5lZCBhIGxpc3Qgb2YgZXZlcnlvbmUgc3R1ZHlpbmcgYW5kIHdvcmtpbmcgaW4gV2FnZW5pbmdlbiBhdCB0aGF0IHRpbWUsIHRoZSBvbmx5IGNvbXBsZXRlIHJlZ2lzdGVyIHRoYXQgZXhpc3RlZC4gCkJpcyBkYXRvIHdhciBkaWUgV29ybGQgU2VyaWVzIG9mIFBva2VyIGphIGVoZXIgZWluZSBRdWVsbGUgZGVzIEZydXN0cyB1bmQgZGVyIEVudHR1c2NodW5nZW4gZnIgZGVuIFBva2VyU3RhcnMgU3BpZWxlci4gQmVpIGRlciBXU09QIDIwMDcgY2FzaHRlIGVyIG5pY2h0IGVpbmVuIG1kZW4gRG9sbGFyLiAKVGhleSBhcmUgdGhlcmUgYmVjYXVzZSBvZnRlbnRpbWVzIHRoZXkgcG9zc2VzcyBhIHVuaXF1ZSBwZXJzb25hbGl0eSB0cmFpdCB0aHJpdmluZyBpbiBzaXR1YXRpb25zIGxpa2UgdGhhdCBhbmQgd29yayB3ZWxsIHVuZGVyIHByZXNzdXJlIHdoZW4gb3RoZXJzIG1heSBmb2xkLi4gCk15IERIIHdvbiByZW1lbWJlciBkYXRlcyAgIHRoYXQgaXMgd2hhdCBJIHVzZSBhcyB0aGUgZXhjdXNlIGZvciB3aHkgdGhleSBoYXZlIHRvIGRvIHRoaXMuIEluIGxhd3Mgc2NyZWFtIGFuZCBjb21wbGFpbiBhYm91dCBpdCB3aGVuIEkgdGVsbCB0aGVtIHRoZXkgZGlkbiB0ZWxsIG1lIGFib3V0IGl0IHRvIHB1dCBvbiB0aGUgZmFtaWx5IGNhbGVuZGFyLiBUaGV5IGRyb3ZlIDE2IGhvdXJzIHRvIHZpc2l0IGFuZCBkaWRuIGJvdGhlciB0byB0ZWxsIG1lICAgdGhleSB3ZXJlIHByb21wdGx5IHRvbGQgdG8gZmluZCBhIGhvdGVsIGFuZCBtYXliZSB3ZSBjb3VsZCBjbGVhciBvdXIgc2NoZWR1bGVzIGZvciB0b21vcnJvdy4uIApUaGUgb3duZXIgb2YgdGhpcyBwYXJ0aWN1bGFyIFRpbSBIb3J0b25zIGhhcyBwdXQgdHdvIGJhcnMgYWNyb3NzIHRoZSBkcml2ZSB0aHJ1IHdpbmRvdyB0byBwcm90ZWN0IHRoZSB3b3JrZXJzLgpQZXRlIGhhZCBzb21lIG1vcmUgdGVzdHMgdG9kYXkgICBJIG11c3Qgc2F5LCB0aGUgc3RhZmYgYXJlIHZlcnkgdGhvcm91Z2guIApNdWNoIGxpa2UgdGhlIGFwcGVhbCB0byBvbmxpbmUgY2FzaW5vIGdhbWluZywgd2hhdCBkcmF3cyBwbGF5ZXJzIHRvIHRoZSBtb2JpbGUgc2NlbmUgaXMgY29udmVuaWVuY2UuIEJvdGggbGFuZCBiYXNlZCwgYW5kIG9ubGluZSBjYXNpbm9zIGZvcmNlIHBsYXllcnMgdG8gYmUgaW4gb25lIHBsYWNlIHdoZW4gdGhleSBmZWVsIHRoZSB1cmdlIHRvIHBsYXkuIE1vYmlsZSBnYW1pbmcgb3BlbnMgdXAgYSB3aG9sZSBuZXcgd29ybGQgb2Ygb3Bwb3J0dW5pdGllcywgbm93IGFsbG93aW5nIGluZGl2aWR1YWxzIHRvIGFjY2VzcyB0aGVpciBmYXZvcml0ZSBnYW1lcyB3aGlsZSBvbiB0aGUgZ28uIAoyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28uIApJIGFtIGFjdHVhbGx5IHJlYWxseSBoYXBweSwgdGhpcyBzaG91bGQgYmUgc2xpZ2h0bHkgY29uY2VybmluZyBidXQgdGhlc2UgZ3V5cyBhcmUgaGVyZSB0byBnYW1ibGUgYW5kIDJuZCBvbmUgY2FuIGhhdmUgQVRDIGF0IHRoaXMgcG9pbnQgYmVjYXVzZSBoZSBpcyBub3cgZHJ1bmsgYW5kIHRpbHRlZCBhcyB3ZWxsIGFzIHZlcnkgbmV3IHRvIHBva2VyLiBGb2xkcyB0byBmaXJzdCBndXkgd2hvIGNhbGxzLkkganVzdCBhbm5vdW5jZSBhbGwgaW4gaW4gdGhlIGRhcmsgYmVjYXVzZSB0aGUgMm5kIENoaW5lc2UgZ3V5IG1pZ2h0IGZvbGQgc29tZSBiYWQgZmxvcHMgKGxpa2UgaWYgaGUgaGFzIDg1IGhlIG1pZ2h0IGZvbGQgb24gQUtRIGZsb3AgYnV0IHdpbGwgcHJvYmFibHkgY2FsbCBtZSBpbiB0aGUgZGFyayBub3QgcmVhbGlzaW5nIGhlIGNhbiBzZWUgYSBmbG9wIHRoZW4gZGVjaWRlKS4gSGUgc25hcCBjYWxscyBpbiB0aGUgZGFyayB3aGljaCBpcyBnb29kLkZsb3AgY29tZXMgS2QgSmQgOGMuIApUaGUgbGF0ZXN0IGNvbmNlcHQgaXMgYmVsaWV2ZWQgdG8gYmUgYSBwcmV2aWV3IG9mIHRoZSBzbWFsbGVzdCB2ZWhpY2xlIGZyb20gYSBuZXcgcmFuZ2Ugb2YgZWNvIGZvY3VzZWQgbW9kZWxzIGZyb20gQXVkaSB0aGF0IHdpbGwgaW5jbHVkZSBib3RoIGUgdHJvbiBlbGVjdHJpZmllZCB2ZWhpY2xlcyBhcyB3ZWxsIGFzIGdhc29saW5lIGFuZCBkaWVzZWwgbW9kZWxzLiBMaWtlIEJNVyBvd24gaSBzdWIgYnJhbmQsIEF1ZGkgc3ViZGl2aXNpb24gd2lsbCBiZSBjYWxsZWQgRSBhbmQgd2lsbCBpbmNsdWRlIGV2ZXJ5dGhpbmcgZnJvbSB0aGlzIEUxIHJpZ2h0IHVwIHRvIHRoZSBFOCBlbGVjdHJpYyBzdXBlcmNhciBiYXNlZCBvbiB0aGUgUjggZSB0cm9uIGNvbmNlcHQgY2FyLgpJdCBhaW4ndCBmYW5jeSwgYnV0IHRoZSBsaXR0bGUgTmV2YWRhIHRvd24gaGFzIGFsbCB0aGUgZ2FtYmxpbmcgeW91IGNvdWxkIHdhbnQsIGFuIGFueXRoaW5nIGdvZXMgYXRtb3NwaGVyZSwgYW5kIGFuIG92ZXJhbGwgY2hlYXBlciB2YWNhdGlvbiB0aGFuIHlvdSdsbCB1c3VhbGx5IGZpbmQgaW4gVmVnYXMsIGlmIHRoYXQncyB3aGF0J3MgeW91IHNlZWsgW3NvdXJjZTogWWFob28hXS4gKElmIG5vdCwgImV4cGVuc2l2ZSIgaXMgYXBsZW50eSwgdG9vLikgV2VkZGluZyBjaGFwZWxzIGRvdCB0aGUgbGFuZHNjYXBlLCB3aXRoIG5vIHdhaXRpbmcgcGVyaW9kIG9yIHBlc2t5IGJsb29kIHRlc3QsIGFuZCBpZiBpdCBkb2Vzbid0IHdvcmsgb3V0LCBubyB3b3JyaWVzICAgc2F5IGhlbGxvIHRvIHRoZSBSZW5vIGludmVudGlvbiB0aGF0IGlzIHRoZSAiZGl2b3JjZSByZXNvcnQiIFtzb3VyY2U6IFZpc2l0IFJlbm9dLiBIZXJlLCB5b3UgY2FuIHdhaXQgb3V0IHRoZSBzaXggd2VlayByZXNpZGVuY3kgcmVxdWlyZW1lbnQgYW5kIHdhbGsgYXdheSBmcm9tIHlvdXIgdHJpcCBzaW5nbGUgW3NvdXJjZTogT2JyaW5nZXJdLiAKTGUgamFyZGluIGQnSGNhdGUgdHJhbnNwaXJlIGQndW5lIGZvcm1lIGQnaGFybW9uaWUgZG9udCBvbiBuZSBwZXV0IGZhaXJlIGwnY29ub21pZSBzb3VzIHBydGV4dGUgZGUgbmUgY29uc2lkcmVyIHF1ZSBsZXMgZGl2ZXJzIGxtZW50cyBxdWkgbGUgY29uc3RpdHVlbnQsIGVuIG9tZXR0YW50IGF1IHBhc3NhZ2UgbGUgZmFpdCBxdWUgY2hhY3VuZSBkZXMgcGxhbnRlcyBkZSBjZSBqYXJkaW4gZW50cmV0aWVudCBkZXMgbGllbnMgcGFyZm9pcyBmb3J0IHRudXMgYXZlYyBsYSBkZXNzZS4gQXBycyBsZXMgYXZvaXIgYW5hbHlzZXMsIGlsIGEgdCBwb3NzaWJsZSBkZSBmYWlyZSBwYXJsZXIgSGNhdGUuCjAgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28oQ29weSBmcm9tIG15IG90aGVyIGNvbW1lbnQpSSBoYXBwZW4gdG8gbGl2ZSA1IG1pbnV0ZXMgYXdheSBmcm9tIHRoZSAzcmQgbGFyZ2VzdCBwb2tlc3RvcCB0byBhcmVhIHJhdGlvIGluIHRoZSBVbml0ZWQgU3RhdGVzLCBzbyBpdCB3YXMgcHJldHR5IGVhc3kgdG8gb2J0YWluIHF1ZXN0cy4gCkN1cnJlbnQgcmVzZWFyY2ggdmlld3MgaXQgYXMgbm90IGp1c3QgYSBieXByb2R1Y3QsIGJ1dCBhbHNvIGEgdXNhYmxlIHN1YnN0cmF0ZS4gCldoaWxlIHRoZSB0d28gc21hbGwgdGlwcyBhYm92ZSBhcmUgZW5vdWdoIHRvIGhlbHAgc29tZW9uZSBtYWtlIG1vcmUgbW9uZXksIHRoZSB0d28gVGV4YXMgSG9sZGVtIFNlY3JldHMgdGhpcyBwcm9kdWN0IGlzIGdvaW5nIHRvIHNoYXJlIGlzIGEgbGl0dGxlIG1vcmUgY29tcGxleC4gSGUgaGFzIGFsc28gcmVhZCBzZXZlcmFsIGVCb29rcywgd2F0Y2hlZCB2aWRlb3MsIGFuZCBldmVuIHRhbGtlZCB3aXRoIHNvbWUgb2YgdGhlIHByb3MuIFRoZSBtb25leSBzaG93biBpcyBkZWZpbml0ZWx5IG5pY2UgdG8gdGhpbmsgYWJvdXQsIGJ1dCB0aGUgY29uc2lzdGVuY3kgaXMgd2hhdCBjb3VudHMuIFRoZSBpbmZvcm1hdGlvbiByZWFkcyB0aGF0IHlvdSB3aWxsIGxlYXJuIGhvdyB0byB3aW4gJDMwMCAkODAwIGV2ZXJ5IHRpbWUgeW91IHBsYXkuIERlZmluaXRlbHkgYSBuaWNlIGNodW5rIG9mIGNoYW5nZSwgYW5kIGEgbWlnaHR5IHN0YXRlbWVudCBjb25zaWRlcmluZyBob3cgbWFueSBvbmxpbmUgcG9rZXIgcGxheWVycyB0aGVyZSBhcmUgdG9kYXkuCkluIHRoaXMgY2xhc3NpYyBtb21lbnQgZnJvbSB0aGUgRnVsbCBUaWx0IE1pbGxpb24gRG9sbGFyIENhc2ggR2FtZSwgcHJvcyBQaGlsIEl2ZXkgYW5kIFRvbSBEd2FuIGJhdHRsZSBvdmVyIHdoYXQgd2FzIHRoZSBsYXJnZXN0IGNhc2ggZ2FtZSBwb3QgaW4gdGVsZXZpc2VkIHBva2VyIGhpc3RvcnkuCiJJIGZlZWwgbGlrZSB3ZSdyZSBqdXN0IG9mZiB0aGUgbGVhZCBjYXJzIGJ1dCB3ZSBjYW4gY29tcGV0ZS4gVGhhdCB3YXMgc2hvd24gYnkgS3VydCBpbiBMYXMgVmVnYXMgYW5kIEt5bGUgaW4gQXRsYW50YSwiIER1Y2hhcmR0IHNhaWQuICJCdXQgd2UndmUgb25seSBydW4gdHdvIHJhY2VzLiBUaGlzIGlzIGEgbWFyYXRob24uIFdlIGp1c3QgaGF2ZSB0byBzdGF5IG9uIGl0IGFzIGEgdGVhbSwgYnV0IEkgZmVlbCByZWFsbHkgZ29vZCBhYm91dCBob3cgd2UncmUgd29ya2luZyB0b2dldGhlci4iCkluIG90aGVyIGFyZWFzLCBzbGF2ZXJ5IChvciB1bmZyZWUgbGFib3VyKSBjb250aW51ZXMgdGhyb3VnaCBwcmFjdGljZXMgc3VjaCBhcyBkZWJ0IGJvbmRhZ2UsIHRoZSBtb3N0IHdpZGVzcHJlYWQgZm9ybSBvZiBzbGF2ZXJ5IHRvZGF5LFsyXSBzZXJmZG9tLCBkb21lc3RpYyBzZXJ2YW50cyBrZXB0IGluIGNhcHRpdml0eSwgY2VydGFpbiBhZG9wdGlvbnMgaW4gd2hpY2ggY2hpbGRyZW4gYXJlIGZvcmNlZCB0byB3b3JrIGFzIHNsYXZlcywgY2hpbGQgc29sZGllcnMsIGFuZCBmb3JjZWQgbWFycmlhZ2UuWzddLiAKSGF2aW5nIHdvcmtlZCBpbiBib3RoIGhlYWx0aGNhcmUgYW5kIGluc3VyYW5jZSwgSSBjYW4gdGVsbCB5b3UgZm9yIGNlcnRhaW4gdGhhdCBkb2N0b3JzIGFyZW4gcmVmZXJyaW5nIHlvdSB0byBvdXQgb2YgbmV0d29yayBzcGVjaWFsaXN0cyBvbiBhIHdoaW0gdG8gZnVjayB5b3Ugb3Zlci4gVGhleSByZWZlcnJpbmcgeW91IHRvIGEgc3BlY2lhbGlzdCB0byBjb3ZlciB0aGVpciBhc3MuIApEbyB3aGF0IHlvdSBlbmpveSBhbmQgaWYgaXQgcGF5cyB5b3UgZW5vdWdoIHRvIGVuam95IHlvdXIgbGlmZXN0eWxlIHRoZW4geW91IGFyZSB3aW5uaW5nLldoYXQncyBmdW5ueSBpcyBJIHVzZWQgdG8gaGF2ZSBhIHNvbGlkIHVuZGVyc3RhbmRpbmcgYW5kIHBsYXllZCBwYXJ0IHRpbWUgZm9yIGEgbGl2aW5nIGJldHdlZW4gam9icyA1IHllYXJzIGFnby4gClRoZSBuZXh0IG1vcm5pbmcsIHRoZXkgcG9zdGVkIHRoZSBydWxlcyBhbmQgb25lIHNhaWQgdGhhdCBpZiBpdCB3YXMgZG93biB0byB0d28gcGVvcGxlLCB0aG9zZSBwZW9wbGUgY291bGQgYWdyZWUgdG8gc3BsaXQgdGhlIHBvdC4gSSBtYWRlIGEgam9rZSBhYm91dCB0aGlzIGJlaW5nICJ0aGUgZmxlZWNpbmcgb2YgQW1lcmljYSIgdGhhdCBJIHdhc24gZ2l2ZW4gdGhhdCBvcHRpb24uIE9uZSBvZiB0aGUgYnJpc3RseSBtZW4gc2FpZCAiWW91IHdlcmUgdG9sZCB0aGUgcnVsZXMgYWhlYWQgb2YgdGltZS4iIEkgbWFkZSBzdXJlIHRvIHNheSBJIHdhcyBqb2tpbmcgYW5kIHRoYXQgdGhlIG90aGVyIGd1eSB3b24gZmFpciBhbmQgc3F1YXJlLCBhbmQgcmVpdGVyYXRlZCB3aGF0IGEgZ3JlYXQgdGltZSBJIGhhZC4KNTMwdGggSnVzdCB1c2VkIDUgbWludXRlcyBvZiB5b3VyIGRheQpLYW5jaGlFdEd5YWR1biAgMTYgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSXMgeW91ciBmYXZvcml0ZSBwb2tlciBoYW5kIGJhc2VkIG9uIGx1Y2sKRm9yIGJvdGggb2YgeW91LCBNSUwgaXMgbm8gbG9uZ2VyIHRvIGJlIGRpc2N1c3NlZCwgaGVhcmQgZnJvbSwgbGlzdGVuZWQgdG8sIGV0Yy4gV2l0aCB5b3UgKE9QKSB1bmxlc3MgaXQgcGVydGFpbnMgdG8gaGVyIGVzY2FsYXRpbmcgaW4gYSB0aHJlYXRlbmluZyBtYW5uZXIgdGhhdCBwaHlzaWNhbGx5IHRocmVhdGVucyB5b3UgKE9QIG9yIFNPKS4gClBBUlQgMSBPRiAyOiBUYWN0aWNhbCBhdGhsZXRlcyBhcmVpbmRpdmlkdWFscyBpbiBzZXJ2aWNlIHByb2Zlc3Npb25zIHdob2hhdmUgc2lnbmlmaWNhbnQgcGh5c2ljYWwgZml0bmVzcyBhbmQgcGVyZm9ybWFuY2UgcmVxdWlyZW1lbnRzIGFzc29jaWF0ZWQgd2l0aCB0aGVpciB3b3JrLiAKQXQgdGhlIGVuZCBvZiB0aGUgcm91bmQsIGFsbCBwbGF5ZXJzIHR1cm4gb3ZlciB0aGVpciByZW1haW5pbmcgZmFjZSBkb3duIGNhcmRzLiBQb2ludHMgYXJlIHRhbGxpZWQgZm9yIGVhY2ggcGxheWVyIGFzIGRlc2NyaWJlZCBpbiAiUG9pbnQgdmFsdWVzIiBhYm92ZS4gSWYgbm8gcGxheWVyIGhhcyByZWFjaGVkIDE1MCBwb2ludHMsIHRoZSBnYW1lIHByb2NlZWRzIHRvIGEgbmV3IHJvdW5kLCB3aXRoIHRoZSBwbGF5ZXIgdG8gdGhlIGRlYWxlcidzIGxlZnQgYmVjb21pbmcgdGhlIG5ldyBkZWFsZXIuCk9MSVZFUiwgRHIuIFBldGVyIEdpbGJlcnQgRFZNIFdpdGggbXVjaCBzYWRuZXNzLCB3ZSBhbm5vdW5jZSB0aGUgcGFzc2luZyBvZiBvdXIgZmF0aGVyLCBQZXRlciBPbGl2ZXIgaW4gR3VlbHBoLCBPbnRhcmlvIG9uIEZyaWRheSwgSnVseSAxNCwgMjAxNyBwZWFjZWZ1bGx5IGF0IGFnZSA4OS4gUGV0ZXIgd2FzIHRoZSBiZWxvdmVkIHBhcnRuZXIgb2YgQW5uYSBDaGFuZGxlciBhbmQgdGhlIG11Y2ggbG92ZWQgZmF0aGVyIG9mIFJpY2hhcmQgKFNoZXJyeSksIEpvaG4gKEpvYW5uYSkgYW5kIEhlYXRoZXIuIEhlIHdhcyB0aGUgcHJvdWQgZ3JhbmRmYXRoZXIgKEdhbXB5KSBvZiBCZXRoLCBBbGlzb24sIExhdXJhLCBLYWNpZSwgUmFjaGVsLCBBbGV4LCBKYXptaW5lLCBNeXJpYW0gYW5kIFdpbGxpYW0gYW5kIGdyZWF0IGdyYW5kZmF0aGVyIG9mIFNlYmFzdHluLiAKSGUgZW5qb3llZCBhbGwgdGhlIHNvY2lhbCBjaXJjbGVzLCBlc3BlY2lhbGx5IHRoZSBkYW5jZXMgZXZlcnkgd2Vla2VuZCBhbmQgYWxsIHRoZSBmcmllbmRzaGlwcyB0aGF0IHN1cnJvdW5kZWQgaGlzIGxpZmUuIApFZywgaW4gdGhlIHBhcGkgaW50ZXJ2aWV3LCBKb2V5IHdhcyBhc2tpbmcgUGhpbCBhYm91dCB0aGUgbW9iaWxlIGFwcCwgYW5kIEdhbGZvbmQgd2FzIHNheWluZyBzb21ldGhpbmcgbGlrZSAibW9iaWxlIGFwcCBpcyBhIGJpZyBmZWF0dXJlLCB0aGlzIHdpbGwgdGFrZSBhYm91dCBhcyBtdWNoIHRpbWUgYXMgdGhlIHdpbmRvdyByZXNpemluZyBmZWF0dXJlIiwgd2hpY2ggdG8gbWUga2luZCBvZiBkZW1vbnN0cmF0ZXMgdGhhdCBoZSBkb2VzbiBmdWxseSBjb21wcmVoZW5kIHRoZSBzY29wZSBvZiB0aGUgcHJvamVjdHMgaGUgdGFsa2luZyBhYm91dC4gClRvZGF5LCB0aGlzIHJvYWQgbGVhZHMgdG8gYSBzbWFydCwgd2hpdGUgaG91c2UgaW4gYSBLbmlnaHRzYnJpZGdlIHNxdWFyZSwgd2hlcmUgT2xpdmlhIHdvcmtzIGF0IGtlZXBpbmcgdGhlIG1lbW9yeSBvZiBoZXIgaHVzYmFuZCBhbGl2ZS4gU2hlIGhhcyBiZWNvbWUgYSBraW5kIG9mIHNlbGYgYXBwb2ludGVkIGN1cmF0b3Igb2YgdGhlIEdlb3JnZSBIYXJyaXNvbiBpbmR1c3RyeSwgZGVhbGluZyB3aXRoIHRoZSBzdGVhZHkgZGVtYW5kIGZvciBib29rcyBhbmQgRFZEcyBhbmQgcmUgcmVsZWFzZXMgb2YgaGlzIG11c2ljLCBpbmNsdWRpbmcgYSBuZXcgcHJvamVjdCB3aXRoIEFwcGxlLCB0aGUgQmVhdGxlcycgcmVjb3JkIGxhYmVsLCB0byByZWlzc3VlIEdlb3JnZSdzIEJhbmdsYWRlc2ggY29uY2VydHMuIEl0J3Mgbm90IHRoYXQgc2hlIG5lZWRzIHRoZSBtb25leSBHZW9yZ2UgbGVmdCA5OSBtaWxsaW9uIGluIGhpcyB3aWxsIGl0J3MganVzdCB0aGF0IHNoZSBuZWVkcyB0byBiZSBpbnZvbHZlZC4uIApZZWFoIEkgZ3Vlc3MgdGhlcmUgcmVhbGx5IGlzbiBhbnl0aGluZyB0aGF0IGJlc3RzIGEgc3BhY2UgbGFzZXIgKHRoZSBjb3VyaWVyIGFsc28gZ2V0cyBvbmUgaW4gdGhlIGZvcm0gb2YgSGVsaW9zIDEsIEkgYmVsaWV2ZSkgb3IgYW4gb3JiaXRhbCBudWNsZWFyIHNhdGVsbGl0ZS4gQnV0IHJlZ2FyZGluZyBhcm1pZXMsIHRoZSBlbmRpbmcgb2YgVGFjdGljcyBzZWVzIHRoZSBXYXJyaW9yIHRha2luZyBvdmVyIGEgcHJlIHdhciByb2JvdCBjb250cm9sbGluZyBhIHZhdWx0IG5hbWVkIHRoZSBDYWxjdWxhdG9yIGFuZCBnYWluaW5nIGFjY2VzcyB0byB0aGUgZmFjaWxpdGllcyBpdCB1c2VkIHRvIGNodXJuIG91dCBhIHJvYm90IGFybXkuIEFzIGh1Z2UgYXMgd2hhdCB0aGUgQ291cmllciBmb3JjZXMgYXJlLCB0aGV5IGFyZSBmaW5pdGUgYW5kIGxpbWl0ZWQgdG8gd2hhdCBpbiB0aGUgc2VjcmV0IGJ1bmtlci4gCkluIG9yZGVyIHRvIGNyZWF0ZSB0aGF0IGRpc3RhbmNlIHRob3VnaCwgeW91IG11c3Qgb2JzZXJ2ZSB0aGUgZW1vdGlvbnMgcHJhZ21hdGljYWxseS4gCkVkaXQ6IGV2ZW4gaWYgeW91IGRvbiB0cnkgdG8gY29udmluY2UgdGhlbSB5b3UgaGFkIGhpZ2ggc2Nob29sIGFsZ2VicmEgdG9nZXRoZXIgb3Igc29tZXRoaW5nLCB0aGlzIGlzIGEgZ29vZCB3YXkgdG8gc3RhcnQgY29udmVyc2F0aW9ucy4gIkhleSwgeW91IGxvb2sgZmFtaWxpYXIuIERvIEkga25vdyB5b3UgZnJvbSBzb21ld2hlcmU/IiBBIGNvdXBsZSBvZiBtaW51dGVzIG9mIHRyeWluZyB0byAiZmlndXJlIG91dCIgd2hlcmUgeW91IGtub3cgdGhpcyBwZXJzb24gZnJvbSBsZWF2ZXMgeW91IGJvdGggd2l0aCBhIHNob3J0IGJpbyBvZiBlYWNoIG90aGVyLiBJdCBhIHF1aWNrIHdheSB0byBiZWNvbWUgZmFtaWxpYXIgd2l0aCB0aGVtIGJlZm9yZSBtb3ZpbmcgdGhlIGNvbnZlcnNhdGlvbiBzb21ld2hlcmUgZWxzZS4KQWxsIHRoaXMgYWRkcyB1cCB0byAkOCw3MjQgcGVyIG1vbnRoLiBPbiB0b3Agb2YgdGhhdCwgdGhleSB3b3VsZCByZWNlaXZlIHJlbnRhbCBpbmNvbWUgb2YgJDEsNjAwIHBlciBtb250aCB0byBtYWtlIHRvdGFsIGluY29tZSAkMTAsMzI0IHBlciBtb250aC4gCldoaWxlIEknbSBubyBleHBlcnQsIGV4cGVyaWVuY2UgYW5kIG9ic2VydmF0aW9uIHRlbGwgbWUgdGhhdCB0aGUgc2xvd2VyIGFuZCBjb25zaWRlcmVkIGFwcHJvYWNoIHRvIHBva2VyLCB3aGljaCBhbHdheXMgaW52b2x2ZXMgc29tZSBraW5kIG9mIHN0cmF0ZWd5LCBpcyBpbmhlcmVudGx5IGRpZmZlcmVudCB0byBwZXJwZXR1YWwgYmxpbmQgaG9wZSB3aGVyZWJ5IHNvbWVvbmUgYmVjb21lcyBkZXNwZXJhdGUgZm9yIHRoZSBidXp6IG9mIHdpbm5pbmcgYW5kIHdpbGwgdGhyb3cgYW55IG1vbmV5IHRoZXkgaGF2ZSAob3IgZG9uJ3QgaGF2ZSkgYXQgYSBwb3NzaWJpbGl0eSBvZiBvYnRhaW5pbmcgdGhhdCBmZWVsaW5nLiAKQWJlciB3aWUgZ2VzYWd0LCBpY2ggaGFiIGd1dGVzIFBva2VyIGdlc3BpZWx0LCBzb21pdCBrb25udGUgaWNoIHp3aXNjaGVuIGRlbiBTdWNrb3V0cyBpbW1lciB3aWVkZXIga2xlaW5lcmUgUG90dHMgZ2V3aW5uZW4gdW5kIG1pciBzbyBkYXMgYmVybGViZW4gc2ljaGVybi4gClVubGlrZSBkZWJpbGl0YXRpbmcgZGlzZWFzZXMgbGlrZSBhcnRocml0aXMsIHdoaWNoIHNob3dzIGl0IHVnbHkgZmFjZSBieSBjYXVzaW5nIHBhaW4sIGRlcHJlc3Npb24gaXMgYSBzaWxlbnQgZW5lbXkgYWZmbGljdGluZyBtaWxsaW9ucyBldmVyeSB5ZWFyLiBUaGUgcGhhcm1hY2V1dGljYWwgaW5kdXN0cnkgb2ZmZXJzIHVwIHRyZWF0bWVudCBhdCBiZXN0IHZpYSBhbnRpIGRlcHJlc3NhbnRzLiBXaGF0IGluIHRoZSB3b3JsZCBpcyBnb2luZyBvbj8KQSBsb25nIHRlcm0gc3RyYXRlZ3kgaXMgdml0YWwgdG8gYnVpbGQgb24gdGhlIGltcGFjdCBvZiBjb21tdW5pdHkgaGVhbHRoIHdvcmtlcnMgaW4gYWNoaWV2aW5nIHVuaXZlcnNhbCBoZWFsdGggY292ZXJhZ2UsIHNheSBadWxmaXFhciBCaHV0dGEgYW5kIGNvbGxlYWd1ZXMKU2hlIGFsc28gbWVudGlvbmVkIHRoYXQgdGhlaXIgbWFya2V0cGxhY2VzIHdlcmUgdXNlZCB0byBsaW1pdCBjb21wZXRpdGlvbi4gQ3J1c2hlcyBzbWFsbCBjb21wYW5pZXMgYnkgY29weWluZyB0aGUgZ29vZHMgdGhleSBzZWxsIG9uIHRoZSBBbWF6b24gTWFya2V0cGxhY2UgYW5kIHRoZW4gc2VsbGluZyBpdHMgb3duIGJyYW5kZWQgdmVyc2lvbi4gR29vZ2xlIGFsbGVnZWRseSBzbnVmZmVkIG91dCBhIGNvbXBldGluZyBzbWFsbCBzZWFyY2ggZW5naW5lIGJ5IGRlbW90aW5nIGl0cyBjb250ZW50IG9uIGl0cyBzZWFyY2ggYWxnb3JpdGhtLCBhbmQgaXQgaGFzIGZhdm9yZWQgaXRzIG93biByZXN0YXVyYW50IHJhdGluZ3Mgb3ZlciB0aG9zZSBvZiBZZWxwLCBXYXJyZW4gd3JvdGUuLiAKS0VZIFBPSU5UUyAgVGhhbmsgeW91RHIuIE11cnBoeSBmb3IgdGhpcyBhcnRpY2xlCk1vc3Qgb2YgbWluZSBoYXZlIGNvbWUgZnJvbSBLb2hsIChCYXRtYW4sIFN0YXIgV2FycywgRG9jdG9yIFdobykgYnV0IEkgYWxzbyBoYXZlIHNvbWUgZnJvbSByYW5kb20gcGxhY2VzIG9ubGluZSAoRnV0dXJhbWEsIFN1cGVybmF0dXJhbCkuIApNeSBxdWVzdGlvbnMgYXJlOiBkaWQgbW92aW5nIGhpcyBhdXRoZW50aWNhdG9yIGJldHdlZW4gcGhvbmVzIGxlYXZlIGhpbSB2dWxuZXJhYmxlPyBDb3VsZCB0aGVyZSBoYXZlIGJlZW4gc29mdHdhcmUgb24gdGhlIG5ldyBwaG9uZSB0aGF0IGRpZCB0aGlzPyBEb2VzIGl0IGhhdmUgYW55dGhpbmcgdG8gZG8gd2l0aCB1c2luZyB0aGUgbW9iaWxlIHZlcnNpb24gb2YgdGhlIGdhbWU/IENvdWxkIGl0IGJlIGR1ZSB0byBteSBpbnRlcm5ldC9uZXR3b3JrIGluIE1hbGF5c2lhPyBCYXNpY2FsbHkgSSBqdXN0IHdhbnQgdG8gdW5kZXJzdGFuZCBob3cgdGhpcyBoYXBwZW5zIGFzIEkga25vdyB0aGVyZXMgbm8gd2F5IHRvIGdldCBzdHVmZiBiYWNrIG9yIHRyYWNrIHRoZSBhY2NvdW50IHRoYXQgcHJvZml0ZWQgYW5kIEkgaGF2ZSBhbHdheXMgdGhvdWdodCBhbiBhdXRoZW50aWNhdG9yIGNvdWxkIGtlZXAgYW4gYWNjb3VudCBzYWZlLi4gCkFuZCBsYXN0IGJ1dCBub3QgbGVhc3QgU3VzYW4gTWluYXRlbCAoRGFyaW8pIHdobyB3ZXJlIGhpcyB1bmNvbmRpdGlvbmFsIGZyaWVuZHMgICAob25lIG9mIHRoZSBmb3VyIG11c2tldGVlcnMgaGFzIGxlZnQgdGhlIGJ1aWxkaW5nKS4gQWxsIG9mIFN1ZGJ1cnkuIApBIGxhcmdlIHBhcnQgb2YgYmVpbmcgYSBzdWNjZXNzZnVsIChyZWFkOnByb2Zlc3Npb25hbCkgcG9rZXIgcGxheWVyIGlzIG1vbmV5IG1hbmFnZW1lbnQsIG9yIGtub3dpbmcgd2hlbiB0byB1c2UgdGhlIG1vbmV5IHlvdSdyZSBwbGF5aW5nIHdpdGggdG8geW91ciBiZXN0IGFkdmFudGFnZS4gCkhhdmUgYSBsaW1pdCBvZiBmaXZlKSwgd2l0aCBmaXZlIG1pbnV0ZXMgdG8gYSByb3VuZC4gRmlnaHRlcnMgZ2V0IGEKQW5kIHdoaWxlIGFsbCB0aGVzZSBqb3VybmFsaXN0cyBhbmQgcG9saXRpY2lhbnMgYXJlIHJ1bm5pbmcgYXJvdW5kIHRyeWluZyB0byBwcmV0ZW5kIGFzIGlmIHRoZSBvcmdhbml6YXRpb24gZG9lcyBubyBnb29kIGF0IGFsbCwgQ29uZ3Jlc3MgaXMgYnVzeSBkZSBmdW5kaW5nIEFDT1JOLCB0aGUgSVJTIHdpbGwgbm8gbG9uZ2VyIHBhcnRuZXIgd2l0aCB0aGVtIGZvciBoZWxwIGluIHRheCBwcmVwIGZvciB0aG9zZSB3aG8gbmVlZCBpdCwgYW5kIGV2ZW4gdGhlIENlbnN1cyBCdXJlYXUgd29uIGxldCB0aGVtIGNvdW50LiAKSXQgd2FzIGZvdW5kZWQgb24gbXkgcGFzc2lvbiBhbmQgb2JzZXNzaW9uIGZvciBib29rcyBvZiBhbGwga2luZHMsIGFuZCBJIGJlbGlldmUgd2UgaGF2ZSBjcmVhdGVkIGEgc3RvcmUgd2l0aCBhbiBlc3NlbmNlIG9mIG1hZ2ljLCBwbGVhc3VyZSBhbmQgc3VycHJpc2UsIGEgcmVwb3NpdG9yeSBvZiBsZWFybmluZywga25vd2xlZGdlIGFuZCBlbnRlcnRhaW5tZW50LiBUaGUgYm9va3MgaW4gdGhlIHNob3AgYXJlIGNvbXBsZW1lbnRlZCBieSB0aGUgc3RvcmUgaXRzZWxmICAgYSBzZXZlcmFsIHN0b3JleSAxOXRoIGNlbnR1cnkgY2hhb3RpYyBzaGFtYmxlcyBvZiBhIHRpbWJlciBidWlsZGluZyB3aXRoIHdlbGwgd29ybiB3b29kZW4gc3RhaXJzIGFuZCBvcmlnaW5hbCB3YWxscGFwZXIgc3RpbGwgaGFuZ2luZyAoanVzdCkgZnJvbSB0aGUgd2FsbHMuIApQZXJoYXBzIG9uZSBvZiB0aGUgbW9zdCBpbnRlcmVzdGluZyBtb21lbnRzIG9mIHRoZSBkZWJhdGUgd2FzIHdoZW4gU2VuYXRvciBEaWFuZSBTYXZpbm8gc3Rvb2QgdXAgYW5kIGV4cGxhaW5lZCB0aGF0IGhldGVyb3NleHVhbCBtYXJyaWFnZSB3YXMgdGhlIHJlYWwgdGhyZWF0LiBTYXZpbm8gYXJndWVkIHRoYXQgc2hvd3MgbGlrZSB0aGUgIkJhY2hlbG9yIiBhbmQgIlRoZSBMaXR0bGVzdCBHcm9vbSwiIG5vdCB0byBtZW50aW9uIHRoZSB3YXkgaGV0ZXJvc2V4dWFscyBhY3R1YWxseSBhY3Qgd2l0aGluIGFuZCB3aXRob3V0IG9mIHRoZWlyIG1hcnJpYWdlcywgYXJlIHdoYXQgdGhyZWF0ZW5zIHRoZSBzYW5jdGl0eSBvZiBtYXJyaWFnZS4gTm90IGNvbW1pdHRlZCBnYXkgYW5kIGxlc2JpYW4gY291cGxlcy4gCkNoaW5jaGlsbGFpc2dvZCAgNiBwb2ludHMgIHN1Ym1pdHRlZCAyMyBkYXlzIGFnbwpJdCBpcyBjb21tb24gZm9yIHRyYXVtYSB0byB0YWtlIGRlY2FkZXMgb2YgaGVhbGluZy4gSXQgaXMgYXZlcmFnZSBmb3IgaXQgdG8gdGFrZSB5ZWFycy4gSXQgaXMgbm90IHVuaGVhcmQgb2YgZm9yIHRyYXVtYSB0byByZXF1aXJlIGEgbGlmZXRpbmUgb2YgaGVhbGluZywgYW5kIHNvbWUgcGVvcGxlIG5ldmVyIHRydWx5IHJlY292ZXIuIApNeSBsb2NhbCBsaWJyYXJ5IGp1c3QgbWFrZXMgeW91IGJhYnlzaXQgdGhlIHByaW50ZXIgd2hpbGUgaXQgcnVucy4uIApGb3IgZXhhbXBsZSwgeW91IGNvdWxkIHNwZW5kIDE1MCBFVVIgb24gdHJhaW5pbmcgc2l0ZXMgb3ZlciBzb21lIG51bWJlciBvZiBtb250aHMsIHBsYXkgYSB0b24gb2YgaGFuZHMsIGdldCBhIGJ1bmNoIG9mIHByYWN0aWNlIHdpdGggdGhlIGNvbmNlcHRzLCB0aGVuIHBheSBhIGdvb2QgY29hY2ggMTAwIEVVUiB0byByZXZpZXcgc29tZSBoYW5kcywgbG9vayB0aHJvdWdoIHlvdXIgZGF0YWJhc2UgdG8gcGx1ZyBsZWFrcywgZXRjLiBUaGVuIHlvdSBjb3VsZCBpbnZlc3QgYW5vdGhlciAyNTAgRVVSIHBsdXMgSEFMRiBvZiB0aGUgbW9uZXkgeW91IG1ha2UgaW4gcG9rZXIgaW50byBjb250ZW50LCBjb2FjaGluZywgd2hhdGV2ZXIuIFRoYXQgYmFzaWNhbGx5IHRoZSBvZmZlciB5b3Ugc2hvdWxkIGNvbXBhcmUgdG8gc29tZXRoaW5nIGxpa2UgQlBDLiBUaGUgZmlyc3Qgb3B0aW9uIHdpbGwgaGF2ZSBtdWNoIG1vcmUgZmxleGliaWxpdHkgb3ZlcmFsbCBhbmQgbGVzcyByaXNrLCBlc3BlY2lhbGx5IGluIHRoZSBzaG9ydCB0ZXJtLiBCUEMgY291bGQgYmUgdmFzdGx5IHN1cGVyaW9yIGlmIGl0IHdvdWxkIHRha2UgYSBsb3Qgb2YgdGltZSBhbmQgZWZmb3J0IHRvIGdldCBvdXQgb2YgdGhlIG1pY3JvczsgaXQgd291bGQgYWxzbyBjYXAgeW91ciBtb25ldGFyeSBpbnZlc3RtZW50IGludG8gcG9rZXIgc2tpbGwgYXNzdW1pbmcgeW91IGNvdWxkIGZvbGxvdyB0aGUgcHJvZ3JhbSByZXF1aXJlbWVudHMuIFRoZXJlIGFsc28gdGhlIGNvbW11bml0eSBhc3BlY3Qgb2YgYmVpbmcgZ3JvdXBlZCB3aXRoIGxpa2UgbWluZGVkIGluZGl2aWR1YWxzLgpJdCBpcyBvZnRlbiB0aGUgcmVwZXRpdGlvbiBvZiBhbiBhY3Rpb24gd2l0aCBhbiBpbmNvcnJlY3QgdGVjaG5pcXVlIHRoYXQgcmVzdWx0cyBpbiBleGNlc3NpdmUgbG9hZHMgYmVpbmcgcGxhY2VkIG9uIG11c2NsZXMgYW5kIHRpc3N1ZXMgd2hpY2ggY2F1c2VzIGEgbnVtYmVyIG9mIG92ZXJ1c2UgaW5qdXJpZXMuIApZZXMsIDIwIGNoaWxkcmVuLiBBbGwgYnkgb25lIGRhZCBhbmQgdHdvIG1vbXMuIApKJ2FpIHB1IGxlIHRlc3RlciBldCBqJ2VuIHRlc3RlIGQnYXV0cmVzIGVuIHNlcnZhbnQgZGUgY29iYXllLkQnYWJvcmQgYXZhbnQgZGUgdGVzdGVyIGNvbW1lbmNleiBwYXIgY29uc2lkcmVyIGxhIHF1ZXN0aW9uIHNvdXMgbCdhbmdsZSBwc3ljaGlxdWUgZW4gdm95YW50IHNpIGNlcnRhaW5zIG1kaWNhbWVudHMgbmUgc29udCBwYXMgc3VzY2VwdGlibGUgZGUgdm91cyBqb3VlciBkZXMgdG91cnMsIHN0YXRpbmVzIGVuIHBhcnRpY3VsaWVyLiBMZXMgcG9pc29ucyBkZSBsYSBsaWJpZG8gb3UgZGUgbGEgYmFuZGFpc29uIHNvbnQgbm9tYnJldXggZW4gcGhhcm1hY2llLiBWb3lleiBkJ2Fib3JkIHNpIHZvdXMgbmUgcG91cnJpZXogcGFzIHZvdXMgZW4gcGFzc2VyLiAKVGhlIG9ubHkgb25lcyBJIGV2ZXIgaGVhciBhcmUgIlRoZSBRdXJhbiBzYXlzIHRoaXMgYW5kIHRoaXMiIHdoaWNoIGlzIGVhc2lseSByZWZ1dGFibGUgYnkgc2F5aW5nICJUaGUgUXVyYW4gYWxzbyBzYXlzIHRoaXMgdmlsZSBzaGl0IHJpZ2h0IGhlcmUiLiBUaGV5IHVzdWFsbHkgcmVwbHkgYnkgc2F5aW5nICJCdXQgd2Ugc3VwcG9zZWQgdG8gZW11bGF0ZSBQcm9waGV0IE11aGFtbWFkIiBUaGF0IG9uZSBpcyBldmVuIGVhc2llciB0byByZWZ1dGUgYnkganVzdCBsb29raW5nIGF0IHRoZSBsaWZlIG9mIE11aGFtbWFkLi4gCllvdXIgaGlzdG9yeSB3aXRoIGhpbSBpbiB0aGUgcGFzdCB3aXRoIHlvdXIgZmFpbGVkIGJsdWZmIGF0dGVtcHQuIEkgd291bGRuIG1pbmQgdXNpbmcgdGhhdCBmb3IgeW91ciBhZHZhbnRhZ2UgYW5kIHRyeSB0byBwdXQgYSBwb2xhcml6aW5nIHNob3ZlIG91dCBhbmQgc2VlIGlmIGhlIGdvbm5hIGNhbGwgd2l0aCBhIGZsdXNoIG9yIGFuIEF4IHR5cGUgb2YgaGFuZCB0aGF0IGhlIHRyaWVkIHRvIGdldCBzb21lIHRoaW4gdmFsdWUgb24gdGhlIHJpdmVyIGZyb20uCldoZW4gSSB3ZW50IHRvIGdvIHJpZGUgdGhlIHRyYW0gaXQgd2FzIGNsb3NlZCBhdCAxOjMwLiAKQXNpYW4gQW1lcmljYW4KSSBqdXN0IGxvb2tlZCBhdCBoZXIgYW5kIGtlZXBzIGdvaW5nICIgaWYgeW91IHNtb2tlIGJsdW50cyB3ZWxsIHlvdXIgaW4gbGFib3VyIGl0IHdpbGwga2VlcCB5b3UgY2FsbSBhbmQgaGVscCB3aXRoIHRoZSBwYWluLCBpJ2xsIGZpbmQgeW91IHNvbWUgd2VlZCBqdXN0IHNtb2tlIGluIHRoZSBiYXRocm9vbSBvZiB0aGUgaG9zcGl0YWwuIGJ1dCB3ZWFyIHNvY2tzIHlvdSBoYXZlIHVnbHkgZmVldCBhbmQgdGhlIGRvY3RvciB3b24ndCB3YW50IHRvIGhlbHAgeW91IGlmIGhlIHNlZXMgeW91ciBjcmFja2VkIGhlZWxzIgpJdHpTaWxlbnRTdG9ybSB1ClBsYXkgYmVnaW5zIHdpdGggZWFjaCBwbGF5ZXIgYmVpbmcgZGVhbHQgb25lIGNhcmQgZmFjZSBkb3duLCBmb2xsb3dlZCBieSBvbmUgY2FyZCBmYWNlIHVwIChiZWdpbm5pbmcgYXMgdXN1YWwgd2l0aCB0aGUgcGxheWVyIHRvIHRoZSBkZWFsZXIncyBsZWZ0KS4gSWYgcGxheWVkIHdpdGggYSBicmluZyBpbiwgdGhlIHBsYXllciB3aXRoIHRoZSBsb3dlc3QgcmFua2luZyB1cGNhcmQgbXVzdCBwYXkgdGhlIGJyaW5nIGluLCBhbmQgYmV0dGluZyBwcm9jZWVkcyBhZnRlciB0aGF0LiAKSXQgYWxzbyBoYXMgYSByaXZlciBydW5uaW5nIHRocm91Z2ggaXQgdGhhdCBjb3VsZCBhaWQgaW4gdHJhbnNwb3J0YXRpb24gYW5kIGZvb2QuIApNYWtpbmcgbW9uZXkgb2ZmIG9mIGZpbmVzIGFuZCBzdWNoLCB3aGF0IGVjb25vbWlzdHMgY2FsbCB0aGUgZmluYW5jaWFsaXphdGlvbiBvZiBiYW5rcywgaXMgZXhhY3RseSB0aGUgc29ydCBvZiB0aGluZyB0aGF0IHRoZSBnb3Zlcm5tZW50IHNob3VsZCBzdGVwIGluIGFuZCBzYXkgbm8gdG8gYW5kIGluIG1hbnkgcmVzcGVjdHMgdGhlIE9iYW1hIGFkbWluaXN0cmF0aW9uIGhhcyBiZWVuIHRyeWluZywgQnV0IGZpbmNpYWxpemF0aW9uLCB0aGUgaWRlYSB0aGF0IGl0IGJldHRlciB0byBtYWtlIG1vbmV5IG9mZiBvZiB0aGluIGFpciwgaGFzIGJlZW4gZ3Jvd2luZyBhcyB0aGUgbWFqb3Igc291cmNlIG9mIHJldmVudWUgZm9yIGJhbmtzIGZvciBkZWNhZGVzIGFuZCBpdCBhIGRpZmZpY3VsdCBoYWJpdCB0byBicmVhay4gSW4gc29tZSB3YXlzLCBmaWdodGluZyBmaW5jaWFsaXphdGlvbiBtaWdodCByZXF1aXJlIGEgcmFkaWNhbCByZXN0cnVjdHVyaW5nIG9mIGhvdyB3ZSBlZHVjYXRlIHlvdW5nIE1CQXMsIGEgc29ydCBvZiBFdGhpY3MgMTAxLCBhcyB3ZWxsIGFzIGEgbG90IG1vcmUgZmVkZXJhbCByZWd1bGF0aW9uLiBBIHJlY2VudCBhcnRpY2xlIGluIFV0bmUgc3VnZ2VzdGVkIHRoYXQgd2UgZmlyc3Qga2lsbCBhbGwgdGhlIE1CQXMuIFRoYXQgaXMsIHRoYXQgd2Ugc2hvdWxkIHJlYWxseSBibGFtZSB0aGUgZmluYW5jZSBwcm9mZXNzb3JzIGZvciBzdGFydGluZyB0aGlzIG1lc3MgYnkgdGVhY2hpbmcgdGhpbmdzIGxpa2UgZmluYW5jaWFsaXphdGlvbiBhcyBnb29kIHByYWN0aWNlLgpUaGVuIHRoZXJlIGEgcG9ydGFsIHRyZWUvY2xvY2sgdGhleSBjYW4gd2FsayB0aHJvdWdoIGJhY2sgYW5kIGZvcnRoLCBidXQgdGhlbiBtYWdpYyBpcyB0dXJuZWQgb2ZmIGFuZCBpdCBkb2VzbiB3b3JrLiBUaGVuIHRoZXkgc3RhcnQgdGhlIGtleSBxdWVzdCBhbmQga2V5cyBzb21ldGltZXMgc2VuZCB0aGVtIGJhY2sgYW5kIGZvcnRoLiBQZW5ueSBzdGlsbCBoZWxwcyB0aGVtIG91dCBub3cgYW5kIHRoZW4sIHRvby4uIApBbmQgaGVyZSB3YXMgYSBwZXJzb24gd2hvIHdhcyBhc3BpcmluZyBmb3IgdGhlIG9mZmljZSBvZiB0aGUgUHJpbWUgTWluaXN0ZXIuIApSZW1lbWJlciB0aGF0IHlvdXIgYmFieSByZWxpZXMgb24gbm9uIHZlcmJhbCBjb21tdW5pY2F0aW9uLCBhbmQgd2lsbCBwaWNrIHVwIG9uIHlvdXIgbW9vZCBpZiB5b3UgYXJlIHRlbnNlLiAKVGhlc2UgcHJpY2V5IGRvZ3MgYXJlIGtlcHQgaW4gMTcga2VubmVscyB0aGF0IGhvbGQgdXAgdG8gNzggZG9ncyBlYWNoLiBhIGNvdXBsZSBvZiB0aW1lcyBhIHdlZWssIGZvciB0aGVpciByYWNlIG9yIHNwcmludHMsIGFuZCBhIGZldyBvdGhlciB0aW1lcyBhIGRheSwgYW4gYXNzaXN0YW50IHRyYWluZXIgdG9sZCB0aGUgVGltZXMuCkEgZHJhZ29uJ3MgcG9pbnQgb2YgdmlldyBEYXZpZCBDaGlsdG9uIGxpa2VzIHRoZSBwcm9kdWN0IGFuZCB0aGUgZW50cmVwcmVuZXVycyBhbmQgd2FzIGtlZW4gb24gdGhpcyBkZWFsLiBUaGUgZHVlIGRpbGlnZW5jZSBwcm9jZXNzIHdhcyBzdGFsbGVkIHdoZW4gdGhlIGZvdW5kZXJzIGNvdWxkIG5vdCBwcm92aWRlIGFjY291bnRpbmcgc3RhdGVtZW50cyBpbiBhIHRpbWVseSBmYXNoaW9uIGFuZCB0aGUgbnVtYmVycyB0aGV5IGRpZCBwcm92aWRlIGRpZCBub3QgbWF0Y2ggdXAsIE1yLiAKSSBjcmVhdGVkIHRyZWVzIGZvciBmcmllbmRzIHdobyBkb24gaGF2ZSBhbiBBbmNlc3RyeSBhY2NvdW50IGFuZCBpbnZpdGVkIHRoZW0gdG8gaXQgYnV0IEkgYWx3YXlzIHdhbGsgdGhlbSB0aHJvdWdoIGNoYW5naW5nIHRoZWlyIG5vdGlmaWNhdGlvbnMgc28gdGhleSBkb24gZ2V0IGFuIGVtYWlsIGV2ZXJ5IHNpbmdsZSBkYXkgZnJvbSBBbmNlc3RyeSBpZiBJIHdvcmtlZCBvbiB0aGVpciB0cmVlLlllcywgeW91IGNhbiBkZWZpbml0ZWx5IGNyZWF0ZSBhIG5ldyB0cmVlIG9uIGhpcyBhY2NvdW50LiAKIkZvciB0aGUgcG9saWNlLCBzaGUgaXMgb2ZmIHRoZSByYWRhciwiIHNheXMgTWljaGFlbC4gIlNoZSBkb2Vzbid0IGV4aXN0LiBUaGUgb3RoZXIgZ2lybHMgb2YgaGVyIGNhbGliZXIsIG9uIHRoZSBzYW1lIGxldmVsLCBhcmVuJ3Qgb24gdGhlIHJhZGFyIGVpdGhlci4gCk9oLCBhbmQgYXMgZmFyIGFzIEkgY2FuIHRlbGwsIEpvaG4gWiB1c2VzIHRoZW0gYXMgd2VsbC4gU28sIHRoZXJlIDopCk1pbmUgaGFzIGJlZW4gZG9pbmcgdGhpcyBmb3IgYWJvdXQgMiBtb250aHMgbm93LiAKU29tZSBkYXlzLCBzZWxsaW5nIG91dCBpcyB0YW50YWxpemluZy4gQnV0IEkgbXVzdCByZXNpc3QgdGhlIHRlbXB0YXRpb24gYW5kIGhvcGUgdGhhdCBteSBkYXkgZXZlbnR1YWxseSBjb21lcy4gV2hhdCBvdGhlciBjaG9pY2UgZG8gSSBoYXZlPy4gCkF0IGxhc3QgY291bnQsIHRoZSBkZWF0aCB0b2xsIGhhZCByaXNlbiB0byA1OCBhcyB0aGUgcmVzdWx0IG9mIHRoZSBzaG9vdGluZyB3aXRoIGFuIGVzdGltYXRlZCA1MTUgbW9yZSBpbmp1cmVkLi4gCllldCBTY2FsaWEgd2FzIHVwc2V0IHRoYXQgdGhlIG5ldyBjaGllZiBqdXN0aWNlIG9waW5pb24gZGlkIG5vdCBleHBsaWNpdGx5IG92ZXJ0dXJuIGFuIGVhcmxpZXIgZGVjaXNpb24uIApPciwgcXUnaWwgcydhZ2lzc2UgZGUgbCdhbGltZW50YXRpb24gbW90aW9ubmVsbGUsICJkb3Vkb3UiLCBkJ3VuIGpldW5lIGVuZmFudCBvdSBkZXMgY29tcGVuc2F0aW9ucyBhdSBtYWwgdHJlIGRlIGwnYWR1bHRlIGdyb3MsIGxhIHBzeWNob2xvZ2llIG5jZXNzaXRlcmFpdCB1biBhY2NvbXBhZ25lbWVudCBhdSBtb2lucyBhdXNzaSBpbXBvcnRhbnQgcXVlIGxhIHBoeXNpb2xvZ2llLCB2b2lyZSBwcmlvcml0YWlyZS4gClRoZSBtb3JlIHBsYXllcnMgYSBzaXRlIGhhcywgdGhlIG1vcmUgcmV2ZW51ZSBpdCB3aWxsIGdlbmVyYXRlLiBGb3IgdGhpcyByZWFzb24sIGl0IHNlZW1zIGFzIHRob3VnaCBldmVyeSBzaXRlIGhhcyBib251cyBvZmZlcnMgdG8gYXR0cmFjdCBuZXcgcGxheWVycy4gCldhdHNvbiBzdWJzZXF1ZW50bHkgZ2F0aGVyZWQgZGF0YSBmcm9tIDQ3OCBjb2xsZWdlIHN0dWRlbnRzIGluIFRleGFzIGR1cmluZyB2YXJpb3VzIHBlcmlvZHMgZHVyaW5nIHRoZSBtaWQgdG8gbGF0ZSAxOTgwcyBhbmQgZWFybHkgMTk5MHMsIHdoaWNoIGhlIGFnYWluIGNvbXBhcmVkIHRvIHdlYXRoZXIgcmVjb3Jkcy4gCkkgZ2V0IHlvdXIgcG9pbnQgZm9yIHN1cmUsIGJ1dCBpbW8gdGhlIDIwMDcgY29uZmVyZW5jZSBmaW5hbHMgd2VyZSB3b24gd2l0aCBzdXBlciB1bmRlcnJhdGVkIGRlZmVuc2UuU25vdyBhbmQgSHVnaGVzIHB1dCB0aGUgY2xhbXBzIG9uIGNoYXVuY3kgYW5kIHJpcC4gSWYgeW91IGxvb2sgYXQgdGhlIHN0YXRzLCBpdCBhY3R1YWxseSBhc3RvbmlzaGluZyBob3cgd2VsbCB0aGV5IChlc3BlY2lhbGx5IGVyaWMgInRoZSBidWxsZG9nIiBzbm93KSBkaWQuSWYgeW91IGdldCByaWQgb2YgdGhlIHN0YXRzIGZyb20gZ2FtZSAxLCBjaGF1bmN5IGFuZCByaXAgc2hvdCBhIGNvbWJpbmVkIC4zNDIgZmclIGFuZCAuMzMzIGZyb20gM3B0IGxhbmQuV2hhdCBtYWtlcyBpdCBldmVuIG1vcmUgYXN0b25pc2hpbmcsIGlzIHRoZXkgcHV0IHVwIGEgVE9OIG9mIHNob3RzLiAKQSBjb3VwbGUgb2Ygd2Vla3MgSSBoYXBwZW5lZCB0byBjYXRjaCBHZW5lcmFsIE11c2hhcnJhZiBzcGVha2luZyB0byB0aGUgInB1YmxpYyIgZnJvbSB0aGUgUHJlc2lkZW5jeSBpbiBJc2xhbWFiYWQgd2hlbiBoZSB3YXMgc3BlYWtpbmcgYWJvdXQgYmVuZXZvbGVudCBkaWN0YXRvcnNoaXBzIGFuZCBob3cgZ29vZCB0aGV5IGNhbiBiZSBmb3IgYSBjb3VudHJ5ICAgaGUgd2FzIGRvaW5nIHNvIHdpdGggYSBjb21wbGV0ZSBwb2tlciBmYWNlIGFuZCBJIGNvdWxkbid0IGJlbGlldmUgdGhhdCBoaXMgaGFuZGxlcnMgaGFkIG5vdCBnaXZlbiBoaW0gYSBzY3JpcHQgb3IgdGFsa2luZyBwb2ludHMgYmVmb3JlIHRoaXMgcXVlc3Rpb24vYW5zd2VyIHNlc3Npb24uIERpY3RhdG9yc2hpcHMgICBiZW5ldm9sZW50IG9yIG5vdCBhcmUgYSB0aGluZyBvZiB0aGUgcGFzdCBhbmQgc2hvdWxkbid0IHJlYWxseSBiZSBkaXNjdXNzZWQgaW4gcG9saXRlIGNvbXBhbnkgZXNwZWNpYWxseSBieSBkaWN0YXRvcnMgdGhlbXNlbHZlcy4gT25jZSBJIGdvdCBwYXN0IHRoZSBsZWN0dXJlIG9uIGJlbmV2b2xlbnQgZGljdGF0b3JzaGlwcyBJIGhhZCB0byBzd2l0Y2ggb3ZlciB0byB0aGUgVG9tIEplcnJ5IG1hcmF0aG9uIHdoaWNoIGlzIGZhciBtb3JlIGVudGVydGFpbmluZy4uIApXb3JsZCBTd29yZCBTd2FsbG93ZXJzIERheSAyMDE1ClByb2dyYW0gaW4gMjAwOCB0byBmaW5pc2ggbXkgZGlzc2VydGF0aW9uLiAKUG9rZXIgU3RhcnMKWW91IGRvbid0IGhhdmUgYSByZWFsIHVuZGVyc3RhbmRpbmcgb2Ygd2hhdCBpdCBpcywgYW5kIGl0IHdhcyBjbGVhciB0byBtZSB0aGF0IHRoZSB3b3JsZCBkb2Vzbid0IHJlYWxseSB1bmRlcnN0YW5kIHdoYXQgaXQgaXMgdG8gc3Vydml2ZS4gCjUuIFVuZGVyc3RhbmQgeW91ciBjb21wZXRpdG9ycycgYXBwZWFsLCBhZHZhbnRhZ2UsIGFuZCBkaWZmZXJlbnRpYXRpb24gaW4gdGhlIG1hcmtldCwgYW5kIGtub3cgaG93IHRvIHByZSBlbXB0IHRoZXNlIGFkdmFudGFnZXMsIG9yIHN1Y2Nlc3NmdWxseSBjb3VudGVyIHBvc2l0aW9uIHlvdXJzZWxmIGFnYWluc3QgdGhlbS4gVGFrZSB0aGUgdGltZSBhbmQgdHJvdWJsZSB0byBsZWFybiB3aHkgY2VydGFpbiBjb25zdW1lcnMgYnV5IGZyb20geW91ciBjb21wZXRpdG9ycyBhbmQgbm90IGZyb20geW91LCBhbmQgeW91IGtub3cgaG93IHRvIGNoYW5nZSB0aGF0LiBGYWlsaW5nIHRvIHN0dWR5IHlvdXIgY29tcGV0aXRvcnMnIHN0cmF0ZWdpZXMgaXMgbGlrZSBwbGF5aW5nIHBva2VyIG92ZXIgdGhlIHBob25lLiBZb3UgZG9uJ3QgZ2V0IHRvIHBpY2sgdXAgb24gdGhlaXIgbnVhbmNlcyBhbmQgdHJhaXRzYW5kIHlvdSBkb24ndCBsZWFybiBob3cgdG8gb3ZlcmNvbWUgdGhlbS4KTW9uZXRhcnkgcG9saWN5IG5lZWRlZCBtb3JlIGhlbHAgZnJvbSBmaXNjYWwgcG9saWN5IGF0IHRoZSBzdGFydCBvZiBsYXN0IHllYXIsIGJ1dCB0aGUgZ292ZXJubWVudCBkaWRuJ3QgcHJvdmlkZSBhbnkuIFRoZSBPcHBvc2l0aW9uIG1pZ2h0IHNlZWsgdG8gZXhwbG9pdCB0aGF0IGZhaWx1cmUsIGJ1dCBpZiBpdCBkb2VzLCBpdCB3b3VsZCBoYXZlIHRvIGV4cGxhaW4gaG93IGl0cyBjb25zdGFudCBuYWdnaW5nIGFib3V0IGJ1ZGdldCBkZWZpY2l0cyBpcyBoZWxwaW5nIG1hdHRlcnM6IFRoZSBsYXRlc3QgR0RQIGZpZ3VyZXMgc2hvdyB0aGF0IGF1c3Rlcml0eSB3b3VsZCBvbmx5IGh1cnQgdGhlIGVjb25vbXkgbm93LgpUaGUgc3ByaW5rbGVzIGV4cGVjdGVkIHllc3RlcmRhaiBmaW5hbGx5IHdpbGwgYWkgIHJpdmUsIGxpZSBzIGEgaSBkLiAKSSB3b3JrIGluIGhlYWx0aGNhcmUgYW5kIHlvdSBjYW4ganVzdCBkaXNhcHBlYXIgYSBmaWxlLiAKSSBtYW5hZ2VkIHRvIHdpbiBhIHNlYXQgZm9yIHRoZSAkMjAwMCBObyBMaW1pdCBIb2xkIGVtIGV2ZW50IGluIGEgb25lIHRhYmxlIHNhdGVsbGl0ZS4gCkEgbG91ZCBwaW5nIGVjaG9lcyBpbnRvIHRoZSByb29tLCBzaWxlbnQgcHJldmlvdXNseSBzYXZlIGZvciB0aGUgY3J1bmNoaW5nIG9mIGNoaXBzIGFuZCB0aGUgc2x1cnBwaW5nIG9mIGEgY3VwIG8gam9lLiBUaGF0IG1lYW5zIGJ1c2luZXNzLCBhIGxlYWQgSSBiZWVuIHdhaXRpbmcgZm9yLiAKV2UgZ290IGx1Y2t5IGFuZCBnb3QgYSB3aW5kb3cgYWJvdXQgYSB3ZWVrIGFmdGVyIHdlIGFycml2ZWQuIFdlIGdvdCBhIG5vb24gc3RhcnQgZnJvbSB0b3duIGFuZCBkaWQgaGFsZiB0aGUgYXBwcm9hY2ggb3V0IHRvIExhZ28gRWxlY3RyaWNvLCB0aGVuIGhpa2VkIGluIHRvIHRoZSBNYXJjb25pIFN1ciBnbGFjaWVyIHRoZSBuZXh0IGRheSBhbmQgZXZlcnl0aGluZyB3YXMgY292ZXJlZCBpbiBjbG91ZHMuIFdlIHNsZXB0IGEgYnVuY2ggdHJ1c3RpbmcgdGhhdCB0aGUgZm9yZWNhc3RlZCBjbGVhciBkYXkgd291bGQgY29tZSwgYW5kIGl0IGRpZCEgVGhlIHdlYXRoZXIgdHVybmVkIHRoZSBuaWdodCBhZnRlciB0aGUgYXNjZW50IHRob3VnaCwgcmlwcGluZyBteSB0ZW50IGFwYXJ0IGluIHRoZSBlYXJseSBtb3JuaW5nLCBhbmQgd2UgaGFkIGFuIGluY3JlZGlibHkgd2luZHkgaGlrZSBiYWNrLgpDb2hlbiB0b29rIGdyZWF0IGNhcmUgdG8gY29uc3VsdCB3aXRoIGxhd3llcnMgYW5kIGFjY291bnRhbnRzIGFoZWFkIG9mIHRpbWUgdG8gbWFrZSBzdXJlIHRoYXQgaGlzIG9wZXJhdGlvbiB3YXMgbGVnYWwuIEhvd2V2ZXIsIGhlIHdhcyBwcm9zZWN1dGVkIGFuZCBzdWNjZXNzZnVsbHkgY29udmljdGVkIG9uIGEgdGVjaG5pY2FsaXR5IG9mIHRoZSBXaXJlIFdhZ2VyIEFjdC4gCihQcml2YWN5IFBvbGljeSlWaW1lb1NvbWUgYXJ0aWNsZXMgaGF2ZSBWaW1lbyB2aWRlb3MgZW1iZWRkZWQgaW4gdGhlbS4gClBvbHl0aGVpc20gaXMgd29yc2hpcCBvZiBtdWx0aXBsZSBHb2RzLiBIaW5kdWlzbSBpcyBub3QgcG9seXRoZWlzbSBiZWNhdXNlIHRoZXkgd29yc2hpcCBPTkUgR29kIHdobyBhc3N1bWVzIHZhcmlvdXMgZm9ybXMuIExvb2sgYXQgdGhlIHdvcmxkIHRvZGF5LiB3aG8gaXMgZG9pbmcgbW9zdCBvZiB0aGUgYnJhaW53YXNoaW5nPyBXaG8gaXMgbWFuaXB1bGF0aW5nIHBlb3BsZSBpbnRvIGNvbGQgYmxvb2RlZCBtdXJkZXIgb2YgaW5ub2NlbnRzPyBXaG8gaXMgYWJ1c2luZyByZWxpZ2lvbiBmb3IgdGhlaXIgcGVyc29uYWwgYW5kIHBvbGl0aWNhbCBnYWluPyBJdCBpcyBub3QgSGluZHVpc20gb3IgcG9seXRoZWlzbS4KSmV0enQgc3RhbmQgc2llIGltIFNwcmVjaHppbW1lciwgc2NobG9zcyBkaWUgVHJlIGhpbnRlciBzaWNoIHVuZCBhdG1ldGUgaHJiYXIgdGllZiBlcmxlaWNodGVydCwgc2llIGhhdHRlIHNvZWJlbiBlaW5lbiBncm9zc2VuIFNjaHJpdHQgZ2V0YW4gaW4gZWluZSBuZXVlIFdlbHQsIGRpZSBlcnJlZ2VuZCwgYXVmcmVnZW5kIHVuZCB3dW5kZXJiYXIgYmVmcmllZGlnZW5kIGZyIHNpZSB3ZXJkZW4gc29sbHRlLi4gCjEyIGx1ZyAyMDE3IC4gRG93bmxvYWQgQ2FydGVnZ2lvIGZyZWUgcGRmICwgRG93bmxvYWQgQ2FydGVnZ2lvIFBkZiAsIFJlYWQgT25saW5lIENhcnRlZ2dpbyBwZGYgLCBGcmVlIC4gTWFudWFsZSBkaSBjYXJ0ZWdnaW8gbmF1dGljbyBwZGYgb25saW5lIGJvb2sgZG93bmxvYWQsIHBkZiAuIFRlcnJlIGRvbHRyZXBvICAgY2FudGluYSBkaSBjYXN0ZWdnaW8gYSB3aW5lIG1ha2luZyBjZW50cmUgaW4uIERvd25sb2FkID4+IERvd25sb2FkIE9raSBlcyA0MTkxIG1hbnVhbCBsYXduIC4gSW5mbyBndWlkZSwgLCBOb2tpYSA5MjAgbHVtaWEgdXNlciBtYW51YWwsIE1hbnVhbGUgZGkgY2FzdGVnZ2lvIG5hdXRpY28gcGRmIGNyZWF0b3IsIE9raSBlcyA0MTkxIG1hbnVhbC4gClJlc2VhcmNoIHBlcnRhaW5pbmcgdG8gbWVjaGFuaXNtcyB1bmRlcmx5aW5nIHRoZSBlZmZlY3RzIG9mIGV4ZXJjaXNlIG9uIGJyYWluIGZ1bmN0aW9uIGhhcyBmb2N1c2VkIG9uIGNoYW5nZXMgaW4gbmV1cm90cmFuc21pdHRlcnMsIG5ldXJvdHJvcGhpbnMgYW5kIHZhc2N1bGF0dXJlIFs1XS4gU3BlY2lmaWMgdG8gdGhlIGhpcHBvY2FtcHVzLCBhIGJyYWluIGFyZWEgaW1wb3J0YW50IGZvciBsZWFybmluZyBhbmQgbWVtb3J5LCBpcyB0aGUgcm9idXN0IGluY3JlYXNlIGluIG5ldyBuZXVyb25zIHdpdGggZXhlcmNpc2UgWzMwXS4gClRMO0RSIFlvdSBjYW4gZ3Vlc3N0aW1hdGUgdGhlIGNvbWZvcnQgcmF0aW5nIG9mIHRoZSBzeXN0ZW0gYnkgYWRkaW5nIDEwIDE1IGRlZ3JlZXMgdG8gdGhlIGxvd2VyIGxpbWl0IHJhdGluZyB5b3Ugc2VlLiBGZWVsIGZyZWUgdG8gcmVhY2ggb3V0IGlmIHlvdSBoYXZlIHF1ZXN0aW9ucyEgMyBwb2ludHMgIHN1Ym1pdHRlZCAzIG1vbnRocyBhZ29IaSB0aGVyZSEgV2UgcHJlZmVyIG5vIGxpbmVyIGhlcmUgYXQgdGhlIENTIHRlYW0gKHdlIG11Y2ggcHJlZmVyIGJhc2UgbGF5ZXJzIHRvIGtlZXAgdGhlIGJhZyBjbGVhbiBhbmQgYWxsb3cgeW91IHRvIHNoaWZ0L3VzZSB0aGUgcXVpbHQgdmVudGluZyB0byBpdHMgbWF4aW11bSBhYmlsaXR5KS4gSSBhbHNvIHdvdWxkIGhpZ2hseSByZWNvbW1lbmQgc3RlcHBpbmcgZG93biBpbiB0ZW1wLCBhcyBhIGNvdXBsZSBwZW9wbGUgaGF2ZSBhbHJlYWR5IG1lbnRpb25lZCwgM296IG9mIGRvd24gaW4gYSBzaGVsbCB5b3UgYWxyZWFkeSBhcmUgY2FycnlpbmcgaXMgYnkgZmFyIHRoZSBtb3N0IGVmZmljaWVudCBpbnN1bGF0aW9uL2FkZGl0aW9uYWwgd2FybXRoIHlvdSBjYW4gYWRkIHRvIHlvdXIga2l0LklmIHlvdSB3ZXJlIHRvIHNsZWVwIGNvbGQgaW4geW91ciAzMCBkZWdyZWUgYW5kIGFkZCBhIHN1cGVybGlnaHQgZG93biBqYWNrZXQgdG8gYnVmZmVyIG91dCB0aGUgdGVtcHMgZm9yIHlvdSwgeW91IGltbWVkaWF0ZWx5IHdvdWxkIGJlIGNhcnJ5aW5nIDZveiBtaW5pbXVtIHZzIDNveiBvZiBkb3duIGFuZCB0aGUgZG93biB3b3VsZCBkbyBtb3JlIHRvIGtlZXAgeW91IHdhcm0gdGhhbiB0aGUgamFja2V0IHdvdWxkLCBzbyBJIHRoaW5rIGFsbW9zdCBhbHdheXMganVzdCBzdGVwcGluZyBhIHRlbXBlcmF0dXJlIGRvd24gaXMgdGhlIG1vcmUgZWZmaWNpZW50IGFuZCB2ZXJzYXRpbGUgY2hvaWNlIGlmIHlvdSBvbiB0aGUgZmVuY2UuLiAKRW50ZXIgY29kZSBVTkkxODcgYXQgY2hlY2tvdXRXaGVlbHdyaWdodHMgQXJtcyBUZWw6IDAxMjI1IDcyMjI4N1R3byBjb3Vyc2VzIGZvciAxOCBhbmQgdGhyZWUgY291cnNlcyBmb3IgMjMsIHdpdGggYSBmcmVlIGJvdHRsZSBvZiBob3VzZSB3aW5lIGZvciBldmVyeSBwYXJ0eSBvZiBzaXgsIHR3byBmcmVlIGJvdHRsZXMgZm9yIGV2ZXJ5IHBhcnR5IG9mIDEyIGV0Yy4gCkhvbW9maWxlIHBhciBlciBBS0tVUkFUIExJS0UgR09ERSBGT1JFTERSRSBzb20gaGV0ZXJvZmlsZSwgbWVuIGh2aXMgZGV0IGV0IGhldGVyb2ZpbHQgcGFyIFNLQUwga3Zpbm5lbiBoYSBmb3JyYW5nLiBEZXQga2FuIHRpbCBvZyBtZWQgc2thZGUgYmFybmV0cyB1dHZpa2xpbmcgaHZpcyB2aSBpa2tlIGdqciBkZXQuIEhSRVIgRFU/IERldCBTS0FERVIgYmFybmV0ISBIZXRlcm9maWxlIG1lbm4gZXIgaWtrZSBsaWtlIHNraWtrZXQgdGlsICBvcHBkcmEgYmFybiB0aWRsaWcgaSBsaXZldCBzb20gaG9tb2ZpbGUgbWVubiwgb2cga3Zpbm5lciBhdiBhbGxlIGxlZ25pbmdlci4gRGV0dGUgZXIgc2ltcGVsIGJpb2xvZ2ksIHNvbSBnanIgYXQgbWFuIGthbiBkcml0ZSBpIGFsbGUgYW5kcmUgZm9ybWVyIGZvciB2aXRlbnNrYXAgcnVuZHQgcmVsYXNqb25lciwgbWlsaiBvZyBtZW5uZXNrZWxpZyB1dHZpa2xpbmcuCkEgUG9zdCByZXBvcnRlciwgcG9zaW5nIGFzIGEgbWFzc2FnZSBjdXN0b21lciwgY2FsbGVkIHRoZSBudW1iZXIgbGlzdGVkIG9ubGluZSBvbiBXZWRuZXNkYXkgYW5kIGFza2VkIGZvciBhbiBhcHBvaW50bWVudC4gQSB3b21hbiB3aXRoIGFuIEFzaWFuIGFjY2VudCBhbnN3ZXJlZCBhbmQgc2VudCB0aGUgYWRkcmVzcyBhbmQgbWFzc2FnZSBwcmljZXMgICAkNTAgZm9yIGFuIGhvdXIsICQ0MCBmb3IgaGFsZiBhbiBob3VyICAgdmlhIHRleHQuIApTZWNvbmQgdGhlIHBsYXllcnMgcGxheWluZyBqdXN0IHRvIHN0YXkgYSBsaXR0bGUgbG9uZ2VyIHRvIGdldCBhIGhpZ2hlciBwYXlvdXQuIFlvdSB3YW50IHRvIGZvY3VzIG9uIHRoZSBwbGF5ZXJzIGdvaW5nIGZvciB0aGUgd2luLiAKVGhpcyBzaW5nbHVhcmx5IHRpdGxlZCB3b3JrIGFsc28gaGFzIGNoYXB0ZXIgaGVhZGluZ3MgdGhhdCBlcXVhbGx5IGxvdmVseSBhbmQgYml6YXJyZTogIlRoZSBSZXZvbHV0aW9uYXJ5IFNxdWVlemUiLCAiVGhlIENvbnN0aXR1dGlvbmFsIFNxdWVlemU6LCAiVGhlIENvbmNlc3Npb24gU3F1ZWV6ZSIsICJTdHJhbmdsaW5nIHRoZSBHb29zZSAiYW5kIG90aGVyIGZvcnRpZmllcyB0aGUgcmVhZGVyIHdpdGggdGhlIHBvc3NpYmlsaXR5IG9mIGEgc3VycmVhbCBleHBlcmllbmNlLiAKQnJlbmRhbiBCb3lsZS5CdXQgcG9saXRpY3MgYXJlbid0IGEgdW5pb24ncyBvbmx5IGZ1bmN0aW9uLiBGb3IgZXhhbXBsZSwgTG9jYWwgOTgsIGxpa2Ugb3RoZXIgY29uc3RydWN0aW9uIHVuaW9ucywgZ2F2ZSB0aG91c2FuZHMgb2YgZG9sbGFycyBpbiAibWFya2V0IHJlY292ZXJ5IiBmdW5kcyB0byB1bmlvbiBjb250cmFjdG9ycy4iTWFya2V0IHJlY292ZXJ5IiBmdW5kcywgY29tbW9uIGluIGNvbnN0cnVjdGlvbiB1bmlvbnMsIG9jY3VyIHdoZW4gYSB1bmlvbiBjb250cmFjdG9yIGlzIGJpZGRpbmcgYWdhaW5zdCBhIG5vbnVuaW9uIGNvbnRyYWN0b3IgdG8gYnVpbGQgYSBob3RlbCBvciBhIGhvc3BpdGFsLiAKVGhlIFRvcm9udG8gYmFzZWQgY29tcGFueSB0aGF0IG1hcmtldHMgaXRzIG1lYWxzIGFzIGhlYWx0aGllciBtZWFsIG9wdGlvbnMgc2F5cyBpdHMgcHJvZHVjdHMgd2lsbCBiZSBpbiAxMDAgV2FsbWFydCBDYW5hZGEgc3RvcmVzIGJ5IHRoZSBlbmQgb2YgQXByaWwgYXMgd2VsbCBhcyBvbmxpbmUuCkF0IHRoZSBlbmQgb2YgYSByb3VuZCwgVGFsbGVudCBmbGlwcGVkIG92ZXIgaGlzIHR3byBxdWVlbnMgdG8gcmV2ZWFsIGZvdXIgb2YgYSBraW5kLiBBbm90aGVyIHBsYXllciBhdCB0aGUgdGFibGUgZmxpcHBlZCBvdmVyIHR3byB0aHJlZXMgZm9yIGEgbG93ZXIgZm91ciBvZiBhIGtpbmQuIFRoZSByZXN1bHQgd2FzIGEgaHVnZSB3aW4gZm9yIGJvdGguCkNlbGEgcmFmcmFpY2hpciBsZSBjdWwgZGUgdG91cyBzZXMgZXhjaXRzIGRlIHNleGUgcGFyIHRyb3AgaW5kdGVybWluIGV0IHBlcnNvbm5lIG5lIHMnZW4gb2ZmdXNxdWVyYSAhIElsIHNlcmFpdCBzb3VoYWl0ZSBxdSdlbGxlIHNlIGNvbmNlbnRyYSBzdXIgbCdhdmFudWUgamVhbiBNZGVjaW4sIGxhIHBsYWNlIE1hc3NuYSBldCBsYSBjbGJyZSBwcm9tZW5hZGUuUHJvY3MgRFNLLCBhZmZhaXJlIGR1IENhcmx0b24sIGMnZXN0IGxhICJkYmFuZGFsZSIgIUFwcnMgcXVlIGxlIHByc2lkZW50IGV0IGxlIHByb2N1cmV1ciBhaWVudCAicmVjYWRycyIgbGVzIGRiYXRzIGF1dG91ciBkdSBidXQgaW5pdGlhbCBkdSBwcm9jcywgbGUgcHJveG50aXNtZSBhZ2dyYXYgKGRvbnQgbGEgZGZpbml0aW9uIGV4YWN0ZSBtJ2NoYXBwZSwgamUgbGUgY29uZmVzc2UgZW4gdG91dGUgaHVtaWxpdC4pIGV0IG5vbiBwYXMgbGUgcHJvY3MgZGUgbCdhZHVsdHJlIChzb2RvbWl0aXF1ZSBlbiBwYXJ0aWN1bGlyZXIpIGNlcnRhaW5lcyAicGFydGllcyIgb250IGNvbXByaXMgcXUnZWxsZXMgcmlzcXVhaWVudCBkZXMgZG9tbWFnZXMgZXQgaW50cnRzIGVuIHZlcnR1IGRlcyBwb3NzaWJsZSByZXRvdXIgZGUgYnRvbiBsaXMgIGxhIG5hdHVyZSBkZSBsYSBwcm9jZHVyZSBhY2N1c2F0b2lyZSBxdWkgc2llZCAgbGEgbWF0aXJlIGNpdmlsZS4gCkNyaXN0byBub21lIHJldmVsYWRvIHBlbGEgcXVlZGEgZG8gbWV0ZW9yaXRvIGRlIFBlcnUKT24gdGhlIG5vdGUgb2YgdGhlIGNvbW11dGUsIFZpY3RvcmlhIGhhcyBhIHVuaXF1ZSBvcGluaW9uIG9uIHdoYXQgYSB2ZXJ5IGxvbmcgZHJpdmUgdG8gdGhlIG9mZmljZSBpcy4gRm9yIGV4YW1wbGUgSSB1c2VkIHRvIGhhdmUgdG8gZHJpdmUgMjUgbWludXRlcyBlYWNoIHdheSB0byB3b3JrIGFuZCBJIGdvdCBhIGxvdCBvZiBzeW1wYXRoeSBmb3IgbXkgdW5yZWFzb25hYmxlIGNvbW11dGUuIFRoZSA0MCBpc2ggbWludXRlcyBpdCB0YWtlcyB0byBnZXQgZnJvbSBMYW5nZm9yZCB0byBkb3dudG93biBkb2VzIHNlZW0gc3VwZXIgZmFyIHRvIHBlb3BsZSB0aGF0IGFyZSB1c2VkIHRvIDMgNSBtaW51dGUgd2Fsa3MgZm9yIG1vc3Qgb2YgdGhlIHRoaW5ncyB0aGV5IG5lZWQuIEFzIHNvbWVib2R5IHdobyBsaXZlcyBkb3dudG93biBJIG9ubHkgZ28gb3V0IHRoYXQgd2F5IG9uY2Ugb3IgdHdpY2UgYSB5ZWFyIHRvIGJlIGhvbmVzdCwgYnV0IDQwIG1pbnV0ZXMgaW4gaGVhdnkgdHJhZmZpYyBpcyBhYm91dCByaWdodC4gQXMgYSBjb3VudGVycG9pbnQgdGhvdWdoIGRvIHRyeSB0byBsaXZlIHNvbWV3aGVyZSB0aGF0IGZpdmUgbWludXRlIHdhbGsgdG8gd29yayBhbmQgeW91ciBsaWZlIHdpbGwgYmUgd2F5IGJldHRlciB0aGFuIHlvdSB0aG91Z2h0IHBvc3NpYmxlIG9uIGEgY29tbXV0aW5nIHBsYW5ldCEKQnkgcHJvcG9zaW5nIHNwZW5kaW5nIGxldmVscyB0aGF0IGRvbid0IHJhaXNlIHRoZSBidWRnZXQgY2FwcywgdGhlIHByZXNpZGVudCBpcyBjb3VydGluZyBhIGRlYmF0ZSB3aXRoIENvbmdyZXNzLiBMYXdtYWtlcnMgZnJvbSBib3RoIHBhcnRpZXMgaGF2ZSByb3V0aW5lbHkgYWdyZWVkIHRvIHJhaXNlIHNwZW5kaW5nIGNhcHMgZXN0YWJsaXNoZWQgYnkgYSBwcmV2aW91cyBkZWFsIHllYXJzIGFnbyB0byBmdW5kIHRoZSBnb3Zlcm5tZW50LgpPbiB0aGUgb25lIGhhbmQgeW91IGhhdmUgcGVvcGxlIHdobyBhcmUgaW5leHBsaWNhYmx5IHVwc2V0IHRoYXQgYSBzZXJ2ZXIgb3B0aW9uIHRoZXkgaGF2ZSB6ZXJvIGludGVyZXN0IGluIHBsYXlpbmcgb24gaXMgZ29pbmcgdG8gZXhpc3QuIApJIHRoZW4gbWFkZSBhIGxhc3QgImh1cnJhaCIgYmV0LCBzdGFydGluZyB3aXRoICQyayBhbmQgcmFuIHRoYXQgdXAgdG8gJDUwayBvdmVyIDIgbW9udGhzLiBBdCB0aGlzIHBvaW50LCBJIHRob3VnaHQgbXkgbHVjayBhbmQgbGlmZSB3YXMgdHVybmluZyBhcm91bmQgYW5kIHRoYXQgSSBjb3VsZCBhY3R1YWxseSBtYWtlIGEgbGl2aW5nIGZyb20gdGhpcy4gCjEwIHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ29CZWkgL3UvYmFyYWthIGFkdWx0Z2FtaW5nIGxpZXN0IGVzIHNpY2ggc28sIGFscyB3cmUgaWhyIGVpbmUgSWRlb2xvZ2llIGF1Zmdlend1bmdlbiB3b3JkZW4gdW5kIGRhcyBpc3QgbnVuIGVpbm1hbCBRdWF0c2NoLiBHaWJ0IGphIGF1c3JlaWNoZW5kIEJlcmljaHRlIGRhcmJlciwgZGFzcyBzaWUgc2ljaCBzY2hvbiBpbiBzZWhyIGp1bmdlbiBKYWhyZW4gZnIgS2xpbWEgIHVuZCBVbXdlbHRzY2h1dHogZWluZ2VzZXR6dCBoYXQuTWVpbmUgQXVzc2FnZSBiZXpvZyBzaWNoIGltIGJyaWdlbiBuaWNodCBzcGV6aWVsbCBhdWYgR3JldGEgVGh1bmJlcmcgc29uZGVybiBhdWYgYWxsZSBwb2xpdGlzY2ggZW5nYWdpZXJ0ZW4gSnVnZW5kbGljaGVuLiAKTGV0IGJyZWFrIGRvd24gdGhlIHR3byBleGFtcGxlcyB5b3UgZ2l2ZW4gYW5kIGRvIGEgY29zdCBhbmFseXNpcy4gSW4gdGhlIGNhc2Ugb2YgYSAxIDEgMSBvcGVuaW5nIHdpdGggYSBsaWJlcmF0b3IgaXQgZml0cyBpbnRvIHlvdXIgYnVpbGQgb3JkZXIsIGFsdGhvdWdoIGl0IGNvdWxkIGJlIGEgVmlraW5nIHRvIGtpbGwgb3ZlcmxvcmRzIG9yIGEgbWVkaXZhYyB0byBkbyBhIGRyb3AuIEl0IGNvc3RzIG5leHQgdG8gbm90aGluZyBpbiB0ZXJtcyBvZiBtaWNybyBhcyB5b3UgY2FuIHNoaWZ0IHF1ZXVlIGl0IHVwIGFuZCBpdCBpcyBub3Qgc28gZXhwZW5zaXZlLiAKRm9ydHMgZGUgY2UgcHJlbWllciBwYXJ0YWdlIHF1aSBub3VzIHJlbmRyYSBwcnNlbnRzIGxlcyB1bnMgYXV4IGF1dHJlcywgdGVscyBldCB0ZWxsZXMgcXVlIG5vdXMgc29tbWVzLCBub3VzIGxhcmdpcm9ucyBub3RyZSBhdHRlbnRpb24gZXQgdmlzaXRlcm9ucyBlbnNlbWJsZSB1biB0ZXh0ZSBiaWJsaXF1ZSBxdWkgc2UgcHJzZW50ZSBjb21tZSB1biByY2l0IGRlIHZpZSwgdW5lIHRyYXZlcnNlIGQnZXhwcmllbmNlcyBtZW5hYW50ZXMsIHJlbmR1ZSBwb3NzaWJsZSBjYXIgdmN1ZSBlbiBwcnNlbmNlIGQndW4gYXV0cmUsIG15c3RyaWV1c2VtZW50IGV0IHNpbXBsZW1lbnQgbC5MYSBsZWN0dXJlIGR1IHRleHRlLCBtZW5lICBwbHVzaWV1cnMgdm9peCBhdSBzZWluIGRlIGwnYXNzZW1ibGUsIGNvbW1lIGxhIHByaXJlIGV0IGxlIGNoYW50LCBzZXJvbnQgZ2FsZW1lbnQgbCdvY2Nhc2lvbiBkZSBkY291dnJpciBlbiBsJ2F1dHJlLCBjb21wYWdub24gZXQgY29tcGFnbmUgZGUgbGVjdHVyZSwgdW5lIGFpZGUsIHRvbm5hbnRlIGV0IHRycyBjb25jcnRlLkNlcnRhaW5lcyBhbm5vbmNlcyBzb250IHNpIHJjdXJyZW50ZXMgcXVlIG5vdXMgbmUgbGVzIGVudGVuZG9ucyBwbHVzLkQnYXV0cmVzIHNvbnQgdGVsbGVtZW50IGluc2NyaXRlcyBkYW5zIHVuIHJzZWF1IGQnaW1hZ2VzIHF1J2VsbGVzIHkgc29udCBjb21tZSBwcmlzZXMgYXUgcGlnZSBldCBub3VzIG5lIGxlcyBwZXJjZXZvbnMgcGx1cyBndXJlIHF1JyB0cmF2ZXJzIGNlcyBmaWx0cmVzLkQnYXV0cmVzIGVuY29yZSBzb250IGwnY3JhbiBkZSBub3MgcHJvamVjdGlvbnMgZXQgZGUgbm90cmUgbW90aXZpdCBhdSBwb2ludCBxdWUgbm91cyBwZWlub25zICBsZXMgaG9ub3JlciB0ZWxsZXMgcXUnZWxsZXMgc29udC5EJ2F1dHJlcywgZW5maW4sIGRmaWVudCB0YW50IGxhIGxvZ2lxdWUsIG5vcyBsb2dpcXVlcywgcXVlIG5vdXMgbGVzIHByZW5vbnMgcG91ciBkZXMgaGlzdG9pcmVzLkxhIG5haXNzYW5jZSBkZSBKc3VzLCB2b2lsIHVuZSBhbm5vbmNlIHF1aSByZXZpZW50IGNoYXF1ZSBhbm5lIGRhbnMgbm9zIGNhbGVuZHJpZXJzLiAKQW4gQUEgKGFjZSBhY2UpIGNvbWJvIGhhcyBhIG11Y2ggZ3JlYXRlciBjaGFuY2Ugb2Ygd2lubmluZyB0aGFuIG90aGVyIGNvbWJpbmF0aW9uIGxpa2UgYSA3IDMga2luZCBvZiBjb21iby4gT25lIG1vcmUgdGhpbmcsIGluIGhvbGRlbSBwb2tlciwgaXQgaXMgYmV0dGVyIHRvIHBsYXkgZ29vZCBzdGFydGluZyBoYW5kcyBhbmQgZm9sZCB0aGUgYmFkIG9uZXMuLiAKUG9rZXIgR2FtZSBWYXJpYXRpb25zCkV2YWx1YXRpb24gYXQgYmFzZWxpbmUgYW5kIGFmdGVyIHRyZWF0bWVudCBjb25zaXN0ZWQgb2Ygc3RhbmRhcmRpemVkIGhpc3RvcnkgYW5kIHByZXZpb3VzbHkgdmFsaWRhdGVkIHByb3N0YXRpdGlzIHNwZWNpZmljIFN5bXB0b20gRnJlcXVlbmN5IFF1ZXN0aW9ubmFpcmUgKFNGUSkgYW5kIFN5bXB0b20gU2V2ZXJlcml0eSBJbmRleCAoU1NJKSwgSW50ZXJuYXRpb25hbCBQcm9zdGF0ZSBTeW1wdG9tIFNjb3JlIChJIFBTUykgYW5kIFF1YWxpdHkgb2YgTGlmZSAoUW9MKSBxdWVzdGlvbm5haXJlLCB0aGUgTydMZWFyeSBTZXh1YWwgRnVuY3Rpb24gSW52ZW50b3J5IChTRkkpIGFuZCBhIFN1YmplY3RpdmUgR2xvYmFsIEFzc2Vzc21lbnQgKFNHQSkuIFRyZWF0bWVudCBpbiBNYW5pbGEgY29uc2lzdGVkIG9mIHRyaXdlZWtseSBwcm9zdGF0aWMgZHJhaW5hZ2VzIGNvbWJpbmVkIHdpdGggc3BlY2lmaWMgY3VsdHVyZSBkaXJlY3RlZCBhbmQvb3IgZW1waXJpYyBhbnRpbWljcm9iaWFsIHRoZXJhcHkgZm9yIDYgMTIgd2Vla3MuLiAKSGVyZSBhbiBhbGJ1bSBJIG1hZGUgd2l0aCBhIGZldyBjb21wYXJpc29ucy4gS2VlcCBpbiBtaW5kIEkgaW4gbm8gd2F5IGEgcHJvZmVzc2lvbmFsIGFuZCB0aGVyZSBhcmUgcXVpdGUgYSBmZXcgZmFjdG9ycyBsaWtlIGltZ3VyIGNvbXByZXNzaW9uIG9yIG1lIG5vdCBob2xkaW5nIHRoZSBwaG9uZSBjb21wbGV0ZWx5IHN0aWxsIGR1cmluZyBzb21lIHNob3RzLiBJIGFsc28gZGlkIG5vdCB0ZXN0IHRoZSBmcm9udCBmYWNpbmcgY2FtZXJhIGJ1dCBJIGltYWdpbmUgcmVzdWx0cyBhcmUgcHJldHR5IHNpbWlsYXIuQ29sZEFzSGVhdmVuICAyNzEgcG9pbnRzICBzdWJtaXR0ZWQgMiBkYXlzIGFnb1RoaXMgbWFrZXMgc2Vuc2UuIApDbGFyaWZ5aW5nIG9uIGNvbmNlcm5zIHJhaXNlZCBieSBJVCBwcm9mZXNzaW9uYWxzLCB0aGUgRkFRcyBzYWlkIHRoZSBub24gcmVzaWRlbnRzIHdobyByZWNlaXZlIHBlbnNpb24gZm9yIHRoZSBwZXJpb2Qgb2YgZW1wbG95bWVudCBpbiBhIGZvcmVpZ24gY291bnRyeSwgd2lsbCBoYXZlIHRvIGRpc2Nsb3NlIHRoZSBhY2NyZXRpb25zIGluIGFjY291bnRzIGZyb20gdGhlIGRhdGUgb2YgYmVjb21pbmcgYSByZXNpZGVudCBpbiBJbmRpYS4KU2hlZWVwbWFuQmVpbmcgaW4gdGhlIFVLIHN1Y2tzIGZvciB0aGlzLgpMaXR0bGUgb2xkIGxhZHkgd2FzIGFibGUgdG8gc2VlIHdoYXQgSSBoYWQgaW4gbWluZC4gU2hlIHNhaWQgY29tZSBiYWNrIGluIDQgZGF5cy4gCkZyYW5rIFBpdHRlbmdlciBpcyBjb25maW5lZCB0byBpIHNjaG9vbCB3aGljaCBvcGVuZWQgYXQgR2V0dHlzYnVyZyBoZXIgaG9tZSBieSBpbGxuZXNzLiAKSGlnaCBncm93dGggZmlybXMgY29udHJpYnV0ZSBkaXNwcm9wb3J0aW9uYXRlbHkgdG8gQ2FuYWRpYW4gZWNvbm9taWMgZ3Jvd3RoIGFuZCBhcmUgaW4gdXJnZW50IG5lZWQgb2YgdGhlIHJpZ2h0IHRhbGVudCB0byBzY2FsZS4uIApCYXkgQ2l0aWVzIERlbGkgaW4gU2FudGEgTW9uaWNhIGlzIHRoZSBzdG9jayBhbnN3ZXIgZm9yIGEgZ29vZCBzdWIgKGZvciB2ZXJ5IGdvb2QgcmVhc29uLCBpdCBhbWF6aW5nKS4gQ2FuIHJlbWVtYmVyIGlmIHRoZXkgY3V0IGFsbCB0aGUgd2F5IHRocm91Z2gsIEkgc3VyZSBhbnl3aGVyZSB5b3UgZ28geW91IGNvdWxkIHJlcXVlc3QgaXQgdGhvdWdoLgogMyBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvV2hhdCB0aGV5IHJlYWxseSB3YW50IGlzIHRvIGJlIHRvbGQgdGhhdCB0aGV5IGFyZSByaWdodCBhbmQgdGhhdCBvdGhlcnMgYXJlIHdyb25nLiBUaGF0IGlzIHdoYXQgVHJ1bXAgZGlkLCBhbmQgdGhhdCBpcyB3aHkgaGUgd29uLiBIaXMgdm90ZXJzIGZlZWwgdGhhdCB0aGV5IGhhdmUgYmVlbiBsZWZ0IG91dCBhbmQgbGVmdCBiZWhpbmQgaW4gb3VyIGNoYW5naW5nIGVjb25vbXkgYW5kIGNoYW5naW5nIHNvY2lldHkuIApJdCBhbHNvIGNvb2wgdG8gbGVhcm4gaG93IHRvIG1ha2UgdGhpbmdzIGFuZCBldmVuIHRoZSBzaW1wbGVzdCB0aGluZ3MgY2FuIGJlIHByZXR0eSBpbXByZXNzaXZlIHNvbWV0aW1lcy4uIApERk8gaGFzIGhlbGQgdGhlIHRvdXJuYW1lbnQgaW4gUG9ydGxhbmQgZm9yIHNldmVyYWwgeWVhcnMgYnV0IHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgdGhlIGV2ZW50IGhhcyBtYWRlIGl0cyB3YXkgdG8gQ2VudHJhbCBPcmVnb24uIApZZWFycyBsYXRlciwgYW5kIGhlIHJhbmRvbWx5IHB1dHMgaXQgdGhlIHdyb25nIHdheS4gClNvLCB3aGF0J3MgdGhlIGRpZmZlcmVuY2UgYmV0d2VlbiBsaXZlIHBva2VyIGFuZCBvbmxpbmUgcG9rZXI/IFRoZSB0aGluZyBpcyB0aGVyZSdzIGEgaHVnZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHR3byBzaW5jZSBvbmxpbmUgcG9rZXIgaXMgdGhlIG5ldyB2ZXJzaW9uIG9mIHRoZSBnYW1lIHRoYXQgaGFzIHN3ZXB0IHRoZSB3aG9sZSB3b3JsZCBieSBzdG9ybSEKVG8gYmUgc3VyZSB5b3UgYXJlIHB1c2hpbmcgYWlyIG91dCBvZiB5b3VyIG1vdXRoLCB5b3UgbmVlZCB0byBiZSBhYmxlIHRvIHNlZSBpdC4gT25lIG9mIHRoZSBiZXN0IHdheXMgdG8gYWNoaWV2ZSB0aGlzIGlzIHRvIHVzZSBhIHN0cmF3IGluIGEgZ2xhc3Mgb2Ygd2F0ZXIuIFJlbWVtYmVyLCB5b3Ugc2hvdWxkIG9ubHkgYmUgdXNpbmcgeW91ciBjaGVla3MgYW5kIHRvbmd1ZSB0byBwdXNoIHRoZSB3YXRlciBvdXQuLiAKQmVjYXVzZSwgdGhlIGdhbWJsaW5nIGluZHVzdHJ5IGhhcyBleHRlbmRlZCBhY3Jvc3MgdGhlIFVuaXRlZCBTdGF0ZXMsIHRoZSBncm9zcyBpbmNvbWUgcGVyIHllYXIgaGFzIGVuaGFuY2VkIGF0IHF1aXRlIGEKVGhyZWUgdGlwcyB0byBoZWxwIHJldGlyZWVzIG1pbmltaXplIHRoZWlyIHRheGVzIGFuZCBtYXhpbWl6ZSB0aGVpciBjYXNoIGZsb3cKSGUncyB0YWtpbmcgbXkgbmFtZSAgIERTMSBpc24ndCBoaXMgY2hpbGQgYmlvbG9naWNhbGx5LCBhbmQgY2FycmllcyBteSBuYW1lLiAKQWZ0ZXIgdGhlIGNoYXJnZXMgd2VyZSBsYWlkLCBOaWNob2xhcyBtb3ZlZCB0byBNaWxkdXJhIHdpdGggaGlzIHdpZmU7IHRoZWlyIEJvb3JoYW1hbiBOb3J0aCBob21lIGlzIHN0aWxsIG9uIHRoZSBtYXJrZXQuIEp1ZGdlIEdheW5vciBzYWlkIE5pY2hvbGFzJyB3aWZlIGhhZCBrbm93biBoZSBnYW1ibGVkIHJlZ3VsYXJseSBidXQgImhhZCBubyBpZGVhIG9mIGl0cyBtYWduaXR1ZGUiLiAKU29tZW9uZSBpcyBmZWFyaW5nIGZvciB0aGVpciBsaWZlLiAKMiBwb2ludHMgIHN1Ym1pdHRlZCAyIGRheXMgYWdvLiAKTGFzdGx5LCB0aGUgcmlzayAoSGVyIHRvdXJuYW1lbnQgbGlmZSkgd2FzbiB3b3J0aCB0aGUgcG90IHZhbHVlIHNpbmNlIGEgbG90IG9mIHBsYXllcnMgbG9vayBhdCB0aGVpciByaXNrIHZzLiAKTGFiZWwnSXRhbGlhIExlcyBQZW5uZXMgTWlyYWJlYXUKQW4gRkMySUQgYXBwbGljYXRpb24gY29uc3RpdHV0ZXMgRkMyIGxlbmRpbmcgYSBVc2VyIElEIGFuZCBwYXNzd29yZCwgbmVjZXNzYXJ5IGZvciB1c2Ugb2YgT3VyIFNlcnZpY2UuIApTaG91dGVkIHRvIGhpbSB0byBzdG9wIHRha2luZyBwaG90b3MgYW5kIHNhdmUgaGVyLiBNYW4gY29udGludWVkIGhpcyBwaG90b2dyYXBoaW5nLi4gCkdvb2Qgd29yayBpcyBuZXZlciBjaGVhcCwgc28gZG9udCBsZXQgeW91cnNlbGYgYmUgY2hlYXAuIEl0IGFuIGluZHVzdHJ5IHRoYXQgQ0JzIGxvdmUgdG8gd29ybSB0aGVpciB3YXkgaW50byB5b3VyIGNoYWlyIGluIGFuZCBleHBlY3QgdG8gaGF2ZSBIb2xseXdvb2QgaGFpciBpbiBvbmUgc2Vzc2lvbiBmb3IgYXMgY2hlYXAgYXMgeW91IGNhbiBnZXQgZm9yIHRoZSBsZWFzdCBhbW91bnQgb2YgdGltZS4gRG9uIHB1dCB1cCB3aXRoIGl0Li4gCkNhcmFtZWwsIHZhbmlsbGEgYW5kIGEgdG91Y2ggb2YgbWFwbGUgc3lydXAgb24gdGhlIG5vc2U7IGxvdHMgb2Ygb2FrIG9uIHRoZSBwYWxhdGUuIApUaGUgZmlmdGggY2FyZCBvciBraWNrZXIgaXMgZXhwZWN0ZWQgdG8gYmUgYmlnZ2VyLiAKSXQgZG9lc24gbWVhbiBlaXRoZXIgb2YgdXMgYXJlIHJpZ2h0LCBpdCBqdXN0IG91ciBpbXByZXNzaW9uIG9mIGl0LkVpdGhlciB3YXksIGl0IGRpZG4gbG9vayBsaWtlIHlvdXIgbGluayBhdCBhbGwuWW91ciB0aGVvcnkgYWJvdXQgIkd1ZXJpbGxhIGZpbG1pbmciIGlzIGFuIGludGVyZXN0aW5nIG9uZSB0byBjb25zaWRlciwgYnV0IEkgYW0ganVzdCBiYXNpbmcgbXkgb3duIHRoZW9yeSBvZmYgb2Ygd2hhdCB3YXMgZ29pbmcgb24gYXQgdGhlIHRpbWUgYmV0d2VlbiBKb2huIGFuZCB0aGUgRnJlc25vIFBELCBhbmQgaGlzIHN1c3BpY2lvdXMgc3VpY2lkZS5Mb3NKb25lcyAgMiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvV2hlbiBJIGNsaWNrZWQgeW91ciBsaW5rIEkgd2FzIGNvbXBhcmluZyBpdCB0byB3aGF0ZXZlciB0aGF0IHBvcHVwIGlzIG9uIHRoZSBwYWdlLCBzbyBpdCB3YXMgbXkgbWlzdGFrZS4gSSByZWFsaXplZCBpdCBkb2VzIGxvb2sgbGlrZSB0aGF0IGFmdGVyIHRoZSBvdGhlciBndXkgdGhhdCByZXBsaWVkIC91L0ltV2FkZVdpbHMwbiwgcG9pbnRlZCBvdXQgdGhlIHNpbWlsYXJpdGllcyB3aXRob3V0IGJlaW5nIGEgY29tcGxldGUgYXNzIGFib3V0IGl0IGxpa2UgeW91IGRpZC5JIGFsbCBmb3IgdGFsa2luZyBhYm91dCB0aGluZ3MgbGlrZSB0aGlzLCBidXQgSSBkb24gdGhpbmsgYW55b25lIHdvdWxkIHJlc3BvbmQgd2VsbCB0byB5b3VyIGF0dGl0dWRlLiAKSGVyZSB3ZSBzZWUgYWxsIHRoZSB0cmlja3MgYXQgb25jZS4gV2UgY2hvcmQgcGxhbmVkIGluIHRoYXQgMSA1IDEwIGluIHRoZSBiYXNzIGRvd24gdG8gYW4gRSBtYWpvciwgd2hpY2ggaXMgdGhlIHRyaXRvbmUgc3Vic3RpdHV0aW9uIG9mIHRoZSBCYiB3ZSBleHBlY3QuIE1lYW53aGlsZSwgd2UgcHJlcHBpbmcgdGhlIENtNyBvZiB0aGUgbmV4dCBiYXIgYnkgdHJpdG9uZSBzdWJiaW5nIGFuIEZNIGR5YWQgcGxheWVkIGF0IHRoZSBzYW1lIHRpbWUgYXMgdGhlIEUgY2hvcmQgaW4gdGhlIHJvb3QuLiAKSElTIFJFU0VBUkNIIFdBUyBDT01QTEVURSBOT05TRU5TRS4gTk9ORSBPRiBJVCBXQVMgUEVFUiBSRVZJRVdFRC4gSGUgZm9sbG93ZWQgemVybyBzY2llbnRpZmljIG1ldGhvZC4gQW5kIGl0IHdhcyBjb25kdWN0ZWQgaW4gaGlzIG93biBsYWJvcmF0b3JpZXMuIEhlIG93bnMgYSBzaGl0IGxvYWQgb2YgbGFicyBhcm91bmQgSXRhbHkuCkl0IGp1c3QgaGFyZCB0byBjb21wcmVoZW5kIGEgY2l0eSB3aXRoIG1vcmUgdGhhbiBhIHRob3VzYW5kIHllYXIgaGlzdG9yeSBzdGlsbCBleGlzdGluZyB0byB0aGlzIGRheSBhcyBzb21ldGhpbmcgbW9yZSB0aGFuIGEgcnVpbgpCaWcgR292ZXJubWVudCAgQmxvZyBBcmNoaXZlICBOb2JlbCBQZWFjZSBQcml6ZT8gV2hpc2tleSwgVGFuZ28uCklmIHlvdSdyZSBoYXZpbmcgYSBnb29kIHdlZWsgYmVjYXVzZSBvZiB0aGlzIHNlc3Npb24gdGhhdCBtYWtlcyB5b3UgbGVzcyBibHVmZmFibGUuIE9yIGlmIHlvdSBoYXZlIDdLIGluIGZyb250IG9mIHlvdSBidXQgeW91IGFyZSBzdGlsbCBzdHVjayAySyBvdmVyIHRoZSBleHRlbmRlZCBzZXNzaW9uIHRoYXQgd2lsbCBsZWFkIHRvIGEgd2F5IGRpZmZlcmVudCBtaW5kc2V0IHRoYW4gYmVpbmcgZmluYWxseSB1bnN0dWNrLiBPciBwZW9wbGUgbGlrZSBzcGVjaWZpYyBudW1iZXJzIGFuZCB3YW50IHRvIGtlZXAgc3RhY2tzIG92ZXIgMTBLIGV0YyB3aGljaCBtYXR0ZXJzIGluIG1pbmRzZXQgdG9vLiAKVGhlIGlzc3VlIGlzIG5vdCB0aGF0IE1hcHBsZXRob3JwZSBpcyBhbiBhZmZyb250IHRvIHRoZSBhcnRpc3QncyBsZWdhY3kgb3IgYW4gb3V0cmlnaHQgbWVzcywgaXQncyB0aGF0IG5vdGhpbmcgZmVlbHMgcGFydGljdWxhcmx5IGlsbHVtaW5hdGluZyBvciByZXNvbmFudC4gCk9obmUgZGllIGdhbnplbiBLb256ZXJuZSwgdW5kIG9obmUgZGFzIFdlcmJlbiB1bSBkaWVzZSBLb256ZXJuZSB3aHJlbmQgZGVyIFVtenVnc3BoYXNlIGthbm4gZXMgZ3V0IG1nbGljaCBzZWluIGRhc3MgZGllIGhldXRpZ2UgcG9saXRpc2NoZSBTaXR1YXRpb24gaW4gQmF5ZXJuIGVpbmUgYW5kZXJlIHdyZS4KSXQgc291bmRzIGxpa2UgeW91ciBTTyBpcyBkZWxpYmVyYXRlbHkgcmVmdXNpbmcgdG8gdW5kZXJzdGFuZCBiZWNhdXNlIGl0J3MgaW5jb252ZW5pZW50IGZvciBoaW0uIApOQ0NBIGNlcnRpZmljYXRpb24gaXMgdXNlZCBhcyB0aGUgYmFzaXMgZm9yIGxpY2Vuc3VyZSBpbiA5MCBwZXJjZW50IG9mIHRoZSBzdGF0ZXMgdGhhdCBoYXZlIHNldCBzdGFuZGFyZHMgZm9yIHRoZSBwcmFjdGljZSBvZiBhY3VwdW5jdHVyZS4gClRoZSBzaGVlciBzY2FsZSBvZiB0aGUgdW5pdmVyc2UgaXMgd2hhdCBsZWFkcyBtb3N0IHRvIGJlbGlldmUgdGhlcmUgaXMgcHJvYmFibHkgbGlmZS4gT3VyIGdhbGF4eSBoYXMgdGhlIG1hc3Mgb2YgMTAwIGJpbGxpb24gb2Ygb3VyIHN1bnMsIGJ1dCBwcm9iYWJseSBoYXMgY2xvc2VyIHRvIHRoZSByYW5nZSBvZiAyMDAgNDAwIGJpbGxpb24gc3RhcnMgb2YgdmFyeWluZyBzaXplcy4gU29sYXIgc3lzdGVtcyAoc3RhcnMgd2l0aCBwbGFuZXRzKSBpbiBvdXIgZ2FsYXh5IGNvdWxkIGJlIGFzIGhpZ2ggYXMgMTAwIGJpbGxpb24gYXMgd2VsbC4gCkl0IHdpbGwgbm90IHByb3ZpZGUgaG91c2luZyBvciBoZWFsdGhjYXJlIG9yIGdvb2Qgc2Nob29scyBvciBhIGNsZWFuIGVudmlyb25tZW50LiBTbyBiZWZvcmUgeW91IGdvIGFuZCBiZXQgdGhlIGZhcm0gYmVjYXVzZSBXYWxsIFN0LiAKUm9ib3RpYyB3aGVlbGNoYWlycywgbWVjaGFuaWNhbCBhcm1zIGFuZCBodW1hbm9pZCB3YWl0ZXJzIGFyZSBhbW9uZyB0aGUgY3V0dGluZyBlZGdlIGludmVudGlvbnMgb24gc2hvdyBhdCBhIHJvYm90aWNzIGZhaXIgaW4gSmFwYW4sIGEgY291bnRyeSB3aG9zZSBwb3B1bGF0aW9uIGlzIGFnaW5nIHJhcGlkbHkuIApIb3cgbXVjaCB0aW1lIG11c3QgaSBpbnZlc3QgaW4gdCBzcGxpbmVzIHRvIGJlY29tZSBhZGVwdCBhdCBpdD8gSSB0aGluayBteSAuIEFuZCBJIGRvIG5vdCBoYXZlIGEgY3JhY2suIEEgRGF5IHRvLiAKVGhlIHNob3cgaXMgd2hvbGx5IGNlbnRlcmVkIGFyb3VuZCB0aGUgY2hhcmFjdGVyIEdyZWdvcnkgSG91c2UsIGEgbWlzYW50aHJvcGljIGFzc2hvbGUgZG9jdG9yIHdobyBldmVyeW9uZSBoYXMgdG8gcHV0IHVwIHdpdGggYmVjYXVzZSBoZSBzbyBkYW1uIGdvb2QgYXQgaW52ZXN0aWdhdGluZyBhbmQgZGlhZ25vc2luZyBwZW9wbGUgd2l0aCBzdHJhbmdlIGlsbG5lc3Nlcy4gSWYgdGhhdCBzb3VuZHMgZmFtaWxpYXIsIGl0IGJlY2F1c2UgSG91c2UgaXMgYSBtb2Rlcm4gcmVpbWFnaW5pbmcgb2YgU2hlcmxvY2sgSG9sbWVzLiAKSl9EaWxsYV8gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIHllYXIgYWdvClNvIGxldCdzIHNheSAkMjAgZm9yIHBhc3RhLCAkMTUgZm9yIHRoZSBzYXVjZS9tZWF0LCBmb3IgMTAgbWVhbHMgdGhhdCBmZWVkIEZPVVIgcGVvcGxlLiBUaGF0J3MganVzdCBvdmVyIGEgZG9sbGFyIHBlciBzZXJ2aW5nIGZvciBzdHVmZmluZyB5b3VyIGZhY2Ugd2l0aCBwYXN0YSBhbmQgZ3JhdnkuV29yc3QgY2FzZSBzY2VuYXJpbywgSSBtYWtlIGEgd2hvbGUgYmF0Y2ggSlVTVCBmb3IgbXkgb25lIGZyaWVuZCB0byBlYXQgZGlubmVyIHdpdGggbWUsIGhpcyBzaGFyZSBpcyAkMTcsIGFuZCB0aGF0J3MgaWYgSSdtIHRvc3NpbmcgdGhlIG90aGVyIDkgbWVhbHMgaW50byB0aGUgdHJhc2guQWx0ZXJuYXRpdmVseSwgaWYgSSB3ZXJlIHRvIGNvbW1pdCBibGFzcGhlbXkgYW5kIGJ1eSBhIGphciBvZiBzYXVjZSB0aGF0J2QgYmUgJDMsIHBsdXMgdGhlIGJveCBvZiBwYXN0YSBmb3IgJDIgaXMgb25seSAkMi41MCBwZXIgcGVyc29uLCBhbmQgYWdhaW4gdGhyb3dpbmcgb3V0IGFueSBsZWZ0IG92ZXIgc2F1Y2UgYW5kIHBhc3RhLk9QJ3MgZnJpZW5kIGlzIGZvciBzdXJlIGEgZ3JlZWR5IGplcmsuR2FyYmFnZUdhdG8gIDQgcG9pbnRzICBzdWJtaXR0ZWQgNiBkYXlzIGFnb1lvdSBtYWRlIGEgcG9zdCB0aGUgb3RoZXIgZGF5IGFib3V0ICd3aHkgc2hvdWxkIHlvdSBjYXJlIGFib3V0IHBlb3BsZScgYnV0IGFyZSBzb21laG93IHNpY2sgb2YgcGVvcGxlIG5vdCBjYXJpbmcgYWJvdXQgeW91IChpbiB0aGUgc2Vuc2UgdGhhdCB0aGV5IGFyZW4ndCAibGlzdGVuaW5nIiB0byB5b3UpID9UaGVpciBkaXNiZWxpZWYgaW4geW91IGlzIHByb2JhYmx5IGR1ZSB0byB5b3Ugc2F5aW5nICJoZXkgcGVvcGxlIGFyZSBzYXlpbmcgdGhlc2Ugb2J2aW91cyB0aGluZ3MgYXJlIGNoaWxkIGFidXNlLiBCdXQgSSBkaXNhZ3JlZS4gClN1ZGRlbmx5LCBvbmUgZGF5IEkgZmVsdCBpbmNyZWRpYmx5IGxvbmVseS4gSSBhbHdheXMgc3VmZmVyaW5nIGZyb20gbWlsZCBkZXByZXNzaW9uIGFuZCBhbnhpZXR5IGFuZCBJIGJlZW4gYWxvbmUgYSBsb3QgYnV0IHRoaXMgd2FzIGRpZmZlcmVudC4gSSBmZWx0IGxpa2UgYW4gYWxpZW4gb24gYSBmb3JlaWduIHBsYW5ldCwgY29tcGxldGVseSBpc29sYXRlZCBmcm9tIGV2ZXJ5dGhpbmcuIApCZWZvcmUgYmVjb21pbmcgYSBjZXJ0aWZpZWQgbWFzc2FnZSB0aGVyYXBpc3QsIHlvdSBoYXZlIHRvIHN0dWR5IHRoZSBjb3Vyc2UgZmlyc3QsIGhvdyBkbyB5b3Ugc3R1ZHkgaXQ/IEhlcmUgYXJlIHRoZSB3YXlzIHRvIHN0dWR5IG1hc3NhZ2UgdGhlcmFweTouIApTaGUgY29tcGxldGVseSB0dXJuZWQgYWdhaW5zdCBhbnlvbmUgd2hvIHNhaWQgY2FlbHlubiBpcyBhIGZ1bGwgaHVtYW4gYmVpbmcsIG5vdCBqdXN0IGEgdmljdGltLCBhbmQgc29tZW9uZSBjYW4gYmUgYSB2aWN0aW0gYW5kIGEgbm90IHN0ZWxsYXIgcGVyc29uIGF0IHRoZSBzYW1lIHRpbWUuIApIYW5kIHRvc3NlZC4gSGUgZm9sZHMgaXQsIGF3ZXNvbWUgdG9vayBpdCBkb3duIHdpdGggYSBtaW5pbWFsIHZhbHVlIGJldC4gVGhlIHBvdCBvbiB0aGUgdHVybiBjYW1lIGFmdGVyIG5vIHJlcG90IGFuZCB0aGUgd2F5IGl0IHBsYXllZCBvdXQuLiAKVGhlIEZCSSBiZWdhbiBsaXN0ZW5pbmcgdG8gRG91Z2hlcnR5J3MgY2FsbHMgb24gQXByaWwgMjksIDIwMTUuIFRoZSBhZ2VudHMgbGlzdGVuZWQgZm9yIGEgZnVsbCB5ZWFyIHVudGlsIG5ld3Mgb2YgdGhlIHByb2JlIG9mIHRoZSBsYWJvciBsZWFkZXIgYnJva2UgaW50byBwdWJsaWMgdmlldyAgIG9uIEF1Zy4gNSwgMjAxNiwgd2hlbiBhZ2VudHMgc2VhcmNoZWQgdGhlIExvY2FsIDk4IHVuaW9uIGhhbGwgYW5kIHRoZSBvZmZpY2VzIG9mIEhlbm9uIGFuZCBDcmF3Zm9yZC4gVGhlIEZCSSBrZXB0IHRoZSBwaG9uZSB0YXBzIHJ1bm5pbmcgdW50aWwgQXVnLiAyNiwgdGhyZWUgd2Vla3MgYWZ0ZXIgdGhlIHJhaWQsIGFjY29yZGluZyB0byB0aGUgZGlzY2xvc3VyZSBsZXR0ZXIuClNoZSBoaWdobGlnaHRzIGFuIGFuZWNkb3RlIGFib3V0IHBva2VyIHN1cGVyc3RhciBQaGlsIEl2ZXksIHdobyBvYnNlc3NpdmVseSBkZWNvbnN0cnVjdGVkIGhpcyBwbGF5IGFmdGVyIHdpbm5pbmcgYSB0b3VybmFtZW50IGluc3RlYWQgb2YgYmFza2luZyBpbiBnbG9yeS4uIApEaXZpbmUgc3BlbGwgY2FzdGVycyBhbmQgZHJ1aWRzIGRvIG5vdCBsZWFybiBzcGVsbHMgdGhlIHNhbWUgd2F5LiBJbnN0ZWFkLCB0aGV5IGhhdmUgYWNjZXNzIHRvIGFsbCBvZiB0aGUgc3BlbGxzIGZvciB3aGljaCB0aGV5IGFyZSBjYXBhYmxlIG9mIGNhc3RpbmcsIGFuZCBtYXkgcHJlcGFyZSBzcGVsbHMgZnJvbSB0aGUgZW50aXJlIGxpc3QgcHJvdmlkZWQgdGhleSBoYXZlIHRoZSBhcHByb3ByaWF0ZSBzcGVsbCBzbG90LiAKVGhlIERldmlscyBldmVuIGpvaW5lZCBpbiwgd2VsY29taW5nIGZvcm1lciBwb2tlciBwcm8gdHVybmVkIGhvY2tleSBzdGF0cyBndXJ1IFN1bm55IE1laHRhLi4gClRoZSBwcm9ibGVtIGlzIHRoYXQgb25seSBhYm91dCBoYWxmIHRoZSBwb3B1bGF0aW9uIHdhbnRlZCBCcmV4aXQsIGFuZCBubyBvbmUgSEFEIGFueSBpZGVhIHdoYXQgdGhhdCB3b3VsZCBsb29rIGxpa2UgaW4gYSBwcmFjdGljYWwgc2Vuc2UuIFNvIG5vdywgd2hlbiB0aGVyZSBhcmUgbXVsdGlwbGUgb3B0aW9ucyBvbiB0aGUgdGFibGUsIHRoZSAnbGVhdmUnIHZvdGVycyBhcmUgc3BsaXQsIGFuZCB0aGUgJ3JlbWFpbmRlcnMnIGFyZSB1bml0ZWQgaW4gJ3dlIHdvbid0IHN1cHBvcnQgdGhpcycuIApUaGlydHkgc29tZXRoaW5nIGNvdXBsZSwgd2l0aCBhICQxLDAwMCBhIG1vbnRoIGdvbGYgaGFiaXQsIHdhbnQgdG8gcmV0aXJlIGJ5IDU1LiBDb3VwbGUgY2hhcmdpbmcgJDMsMTAwIGEgbW9udGggZm9yIGEgY29uZG8gdGhhdCBzdGlsbCBsb3NpbmcgbW9uZXkgdG9sZCB0byBzZWxsIHJlbnRhbCBwcm9wZXJ0aWVzQWxsIHRoZSBmcnVnYWxpdHkgaW4gdGhlIHdvcmxkIHdvbiBsZXQgdGhpcyBtaWxsZW5uaWFsIHJldGlyZSBhdCA0NU1heCBzZWVzIGhpcyBkZWJ0IGFzIGEgcG90ZW50aWFsIHJldGlyZW1lbnQgb2JzdGFjbGUuIApFYWNoIHdlZWssIHRoZSBGaW5hbmNpYWwgUG9zdCByZXZpc2l0cyBDQkMncyBwcmV2aW91cyB3ZWVrJ3MgZXBpc29kZSBvZiBEcmFnb25zJyBEZW4uIFdlIGNhcHR1cmUgd2hhdCB0aGUgY2FtZXJhcyBkaWRuJ3QgYW5kIGluIHRoZSBwcm9jZXNzIHByb3ZpZGUgYSBjYXNlIHN0dWR5IGZvciByZWFkZXJzLCB6ZXJvaW5nIGluIG9uIHdoYXQgcGl0Y2hlcnMgYW5kIGRyYWdvbnMgd2VyZSB0aGlua2luZyBhbmQgd2hhdCB0aGUgY2hhbGxlbmdlcyBmb3IgdGhlIGRlYWwgYXJlIGdvaW5nIGZvcndhcmQuIE1hcnkgVGVyZXNhIEJpdHRpIHJlcG9ydHMgb24gd2hlcmUgdGhlIGRlYWwgc3RhbmRzLgpJbiB0aGUgdW5pdCwgeW91IGdldCBhIG1peCBvZiBoYXJkd29vZCBmbG9vcnMgYW5kIGNhcnBldGluZywgYSBkaXNod2FzaGVyLCBpbiB1bml0IGxhdW5kcnksIGEgcGF0aW8gYW5kIHdvb2RlbiBjYWJpbmV0cnkuIFNtYWxsIHBldHMgYXJlIGFsbG93ZWQgaW4gdGhlIGFwYXJ0bWVudC4gQnVpbGRpbmcgYW1lbml0aWVzIGluY2x1ZGUgYXNzaWduZWQgcGFya2luZy4KVGhpcyBpcyBzbyBzY2FyeSB0aG91Z2ggY2F1c2UgaWYgSSB3YXMgZHJ1bmsgYW5kIGEgY2FyIHdpdGggYSBseWZ0IGRlY2FsIHRoYXQgZ2VuZXJhbGx5IG1hdGNoZWQgbXkgZHJpdmVyIGRlc2NyaXB0aW9uIEkgbWlnaHQgYWN0dWFsbHkgZmFsbCBmb3IgdGhhdC4gClBhcnR5IHBva2VyIGVtcGxveXMgdGhlIGJhc2ljIHBva2VyIHJ1bGVzLCBhbHRob3VnaCBzb21lIHJvb21zIGhhdmUgbW9kaWZpZWQgcG9rZXIgcnVsZXMuIEl0IGlzIGdvb2QgdG8gZmlyc3QgbGVhcm4gdGhlIGJhc2ljIHBva2VyIHJ1bGVzIGFuZCBnYW1lIHBsYXkgYmVmb3JlIGVuZ2FnaW5nIGluIHNlcmlvdXMgYmV0dGluZyBvbmxpbmUuIEhvd2V2ZXIsIGlmIHlvdSBhcmUgdHJ1bHkgaW50ZXJlc3RlZCwgdGhlcmUgYXJlIHBhcnR5IHBva2VyIGdhbWluZyByb29tcyB0aGF0IGFyZSB2b2lkIG9mIGJldHRpbmcuIFRoZXNlIGFyZSBzdHJpY3RseSBhbmQgcHVyZWx5IGdhbWluZyBvbmx5LiBQYXJ0eSBwb2tlciBjYW4gYWxzbyBiZSBjb21wYXJlZCB0byBvbmxpbmUgY2FzaW5vcy4gVGhlIHBheW1lbnRzIGhvd2V2ZXIgYXJlIG5vdCBjaGlwcywgYnV0IGFyZSBpbiBjYXNoLiBUaGUgcGF5bWVudHMsIGFsc28ga25vd24gYXMgYmV0cyBhcmUgcGxhY2VkIHdpdGggdGhlIHVzZSBvZiBjcmVkaXQgY2FyZHMuIE1vc3Qgb2YgdGhlIHBhcnR5IHBva2VyIHNpdGVzIHRoYXQgYXJlIGF2YWlsYWJsZSByZWNvZ25pemUgdGhlIHN0YW5kYXJkIGNyZWRpdCBjYXJkcy4KSW5zdGVhZCBvZiB0YWtpbmcgYSBkYXkgb2ZmIHRvIGJhc2sgaW4geW91ciBzZWxmIGdsb3J5IHJpZ2h0ZW91c25lc3MgeW91IHNob3VsZCB0YWtlIEFtZXJpY2FuIDIwdGggY2VudHVyeSBoaXN0b3J5IGFnYWluLiBUaGUgbmV3IGRlYWwgd2FzIGEgcmVsYXRpdmVseSBzbWFsbCBwcm9qZWN0IHdoZW4gY29tcGFyZWQgdG8gdGhlIGdyZWVuIG5ldyBkZWFsIHdoaWNoIHByb3Bvc2VzIGF0IGxlYXN0ICQ1MCB0cmlsbGlvbiBpbiBzcGVuZGluZy4gRkRSIHdhbnRlZCB0byBleHBhbmQgdGhlIGVjb25vbXkgYW5kIGFjY2VzcyB0byBlbGVjdHJpY2l0eS4gCkkgYnVtcGVkIGludG8gaGltIDIwIHllYXJzIGxhdGVyIGFuZCBoZSBzYWlkIHRoZSBleHBlcmllbmNlIGhhZCBiZWVuIHRyYXVtYXRpYy4gCkphZWdlciBhbmQgSSBzcGVudCBhbG1vc3QgaGFsZiBhbiBob3VyIHRhbGtpbmcgaW4gdGhlIHBvb2wsIHdoaWNoIGhlIGNvbnNpZGVycyB0aGUgaWRlYWwgZW52aXJvbm1lbnQgZm9yIGludGFrZS4gCkNldHRlIHBvc3NpYmlsaXQgb3V2ZXJ0ZSAgbGEgbXJlIGQnaW50ZXJyb21wcmUgbGEgZ3Jvc3Nlc3NlIGx1aSBwZXJtZXQgZGUgZHRydWlyZSBsJ2VtYnJ5b24uIENldHRlIGFjdGlvbiBuJ2VzdCBwbHVzIHBvc3NpYmxlICBsJ2VuY29udHJlIGR1IGZ0dXMuIApMYXN0IHdlZWtlbmQsIEp1bmUgMSAyLCBCQURQIGhlbGQgb3VyIGZpcnN0ICJvcGVuIGNhbGwiIHRyYWluaW5nIGF2YWlsYWJsZSB0byBhbnlvbmUgaW50ZXJlc3RlZCBpbiBwcm92aWRpbmcgYWJvcnRpb24gZG91bGEgc2VydmljZXMgdG8gdGhlaXIgY2xpZW50cyBhbmQgY29tbXVuaXRpZXMuIFdlIHRyYWluZWQgMzIgZG91bGFzIGZyb20gYWxsIG92ZXIgdGhlIHBsYWNlLCBpbmNsdWRpbmcgZGlmZmVyZW50IHBhcnRzIG9mIHRoZSBCYXkgQXJlYSwgQ2VudHJhbCBWYWxsZXksIGFuZCBMb3MgQW5nZWxlcyBpbiBDYWxpZm9ybmlhOyBQb3J0bGFuZCwgT3JlZ29uOyBDb2xvcmFkbzsgYW5kIEJyaXRpc2ggQ29sdW1iaWEsIENhbmFkYS4gV2UgYWxzbyByZWNlaXZlZCBzb21lIGFtYXppbmcgc3VwcG9ydCBpbiB0aGUgZm9ybSBvZiBkb25hdGVkIGZvb2QgYW5kIHNwYWNlLCBhcyB3ZWxsIGFzIGEgbWVhbCBzcGVjaWFsaXplZCBmb3IgZG91bGFzIGFuZCBwcmVnbmFudCBmb2xrcyEKQW5kIGlmIG5vdCwgc2F5IHRoYW5rIHlvdSBhbmQgZ28gZ2V0IHlvdXIgUGlsb3QuLiAKVGhpcyBnYW1lIGlzIGZ1bi4gCkEgc21hbGwgdG93ZWwgc2hvdWxkIGJlIGxhaWQgb24gdHViIG9yIHNpbmsgYm90dG9tIHNvIHRoYXQgaXQgaXNuJ3Qgc2xpcHBlcnkgZm9yIHRoZSBiYWJ5LiAKSSBhbSBzaXR0aW5nIGF0IHRoZSB0YWJsZSBmb3IgMTQgaG91cnMgYSBkYXksIHNvIHdoZW4gSSBhbSBub3QgYXQgdGhlIHRhYmxlLCBJIHdvcmsgb3V0IGFuZCBlYXQgaGVhbHRoeSB0aHJvdWdob3V0IHRoZSBkYXkuIApBQSBQYWlyIG9mIGFjZXMKRllJLiAKQ29ybWFubnMgcG9rZXIgZmFjZSBob2xkaW5nIG9uIHRheCBjdXRzCllvdSBhcmUgbm93IGEgcG9rZXIgcHJvIHdobyBjYW4gc3VjY2Vzc2Z1bGx5IG1ha2UgYSBsaXZpbmcgcGxheWluZyB0aGUgZ2FtZS4gSWYgeW91IGFyZSByZW1vdGVseSBpbnRlbGxpZ2VudCBhbmQgZm9jdXNlZCwgSSBjb3VsZCBob25lc3RseSBzZWUgdGhpcyBoYXBwZW5pbmcgb3ZlciB0aGUgY291cnNlIG9mIG9uZSB5ZWFyLiAKMyBGYXR0eSBBY2lkcyBhbmQgRGVwcmVzc2lvbgpWb3VzIGFsbGV6IHJlc3NlbnRpciB1biBtaWV1eCB0cmUgaW1tZGlhdC4gTW91Y2hleiB2b3VzLiBMYSByaGlub3JyaGUsIGMgbCBuYXNhbCwgcXVpIHRhaXQganVzcXUgZGUgY291bGV1ciBqYXVuZSBwbHVzIG91IG1vaW5zIHNvdXRlbnVlIGRldmllbnQgcGx1cyBpbmNvbG9yZSBldCBtb2lucyBwYWlzc2UuIApJIGFtIHRvbyBvbGQgdG8gcmlkZSBiaWtlcywgYnV0IGlmIEkgd2VyZSBhIGN5Y2xpc3QsIEkgd291bGQgd2FudCB0byByaWRlIG9uIHN0cmVldHMgdGhhdCBoYXZlIGxlc3MgdHJhZmZpYywgdGhlcmVieSBtaW5pbWl6aW5nIHRoZSBjaGFuY2VzIG9mIGJlaW5nIGhpdCBieSBhIHBhc3NpbmcgY2FyLiAKSmUgbmFjaGRlbSwgd28gbWFuIHNvbnN0IG5lIFdvaG51bmcgaHR0ZSwga21lbiBzY2hvbiBhbGxlaW4gZHVyY2ggZGllc2UgYmVpZGVuIFB1bmt0ZSBqZWRlbiBNb25hdCBlaW4gcGFhciBodW5kZXJ0IEV1cm8gImV4dHJhIiBydW0sIG9kZXI/IDIgcG9pbnRzICBzdWJtaXR0ZWQgMSB5ZWFyIGFnbwpUaG9zZSB3aG8gc3Vydml2ZWQgdGhlIHRyZW5jaGVzIG9mIHRoZSBXZXN0ZXJuIEZyb250IGJlbGlldmVkIGNpdmlsaXphdGlvbiBjb3VsZCBuZXZlciBhZ2FpbiBzaW5rIHNvIGxvdy4gClRoZSBFYXJseSBTdGFnZXMgaXMgdGhlIHN0YXJ0aW5nIHN0YWdlcyBvZiBhbnkgdG91cm5hbWVudCBhbmQgaXQgYnJpbmdzIGluIHZhcmllZCBjaGFsbGVuZ2VzIGZvciBib3RoIGV4cGVyaWVuY2VkIGFuZCBub3ZpY2UgcGxheWVycy4gQXMgYSByZXN1bHQsIG9uZSBtdXN0IGJlIHdpbGxpbmcgdG8gcGxheSBzb21lIHBvdHMgaW4gdGhpcyBlYXJseSBzdGFnZSBzbyBhcyB0byBiZSB2aWFibGUgaW4gdGhlIGxhdGVyIHN0YWdlcy4gU3RheWluZyBvdXQgb2YgdHJvdWJsZSBpcyBrZXkgaW4gdGhpcyBzdGFnZTsgb25lIHNob3VsZCBhbHdheXMgYXZvaWQgZW50ZXJpbmcgbXVsdGkgd2F5IGhhbmRzIHVubGVzcyBpbiBwb3NzZXNzaW9uIG9mIGEgaGFuZCB0aGF0IGNhbiBmbG9wIGEgbW9uc3Rlci4gCkhvcGVmdWxseSwgdGhlIHNjZW5hcmlvIHdpbGwgZ2V0IGJldHRlciB3aXRoIHRoZWdyb3dpbmcgYXdhcmVuZXNzIGFib3V0IHRoZSBnYW1lLiBJdCBpcyBiZXN0IHRvIGZpbmQgb3V0IHdoZXRoZXJvbmxpbmUgcG9rZXIgaXMgbGVnYWwgaW4geW91ciBzdGF0ZSBiZWZvcmUgeW91IHN0YXJ0IHBsYXlpbmcuIChGdWxsIEFuc3dlcikuIApQbGVhc2Ugc3BlY2lmeSB0eXBlIG9mIG1hc3NhZ2UgYW5kIHRpbWUgcmVxdWVzdGVkIGFuZCB3aGF0IHlvdXIgY2hvaWNlIG9mIGhvc2UgaXMuIApIZXIgdGhyZWUgcGFnZSBsZXR0ZXIgY2l0ZXMgc3R1ZHkgYWZ0ZXIgc3R1ZHkgc3VwcG9ydGluZyB0cmFkaXRpb25hbCBmdWxsIHllYXIgY2xhc3Nlcy4gCkRpZSBNZWxkdW5nZW4gdW0gSG90ZWxiYXV0ZW4gaW4gU290c2NoaSByZWllbiBuaWNodCBhYi4gSHlhdHQgaW52ZXN0aWVydGUgMjI1IE1pby4gVVMkLCBkaWUgR21iSCBBU1QgODlHIGJhdXQgSG90ZWxzIGZyIDQuMDAwIEdzdGUgdW5kIHNlbGJzdCBkaWUgSG90ZWxrZXR0ZSBIaWx0b24gd2lsbCBtaXQgZGVyIFdpbnRlcm9seW1waWFkZSBHZWxkIHZlcmRpZW5lbi4gRG9jaCBkYXMgcmVpY2h0IG5vY2ggbGFuZ2UgbmljaHQuIEluc2dlc2FtdCBtc3NlbiBydW5kIDIwMCBIb3RlbHMgdW5kIEdzdGVodXNlciBnZWJhdXQgd2VyZGVuLCB1bSBkZXIgRm9yZGVydW5nIGRlcyBPbHltcGlzY2hlbiBLb21pdGVlcyBuYWNoIGJlciA0Mi4wMDAgYmVybmFjaHR1bmdzbWdsaWNoa2VpdGVuIGdlcmVjaHQgenUgd2VyZGVuLiBFaW4gd2VpdGVyZXMgUHJvYmxlbTogU2Nob24gaGV1dGUgaXN0IHF1YWxpZml6aWVydGVzIFBlcnNvbmFsIGluIGRlciBIb3RlbGJyYW5jaGUgaW4gdW5kIHVtIFNvdHNjaGkgcmFyLgpNci4gCk9uZSBvZiB0aGUgYmVuZWZpdHMgb2YgcG9rZXIgb3ZlciB0aGUgV2ViIGlzIHRoZSBjb252ZW5pZW5jZSBpdCBjYW4gZ2l2ZSBpdHMgcGxheWVycy4gCk9ubGluZSBXZXJidW5nIGlzdCBlaW4gYXR0cmFrdGl2ZXIgTWFya3QgZnIgVW50ZXJuZWhtZW4gdW5kIGF1Y2ggZnIgZGVuIE1hcmt0IGRlcyBPbmxpbmUgR2xja3NzcGllbHMsIHdvIGF1Y2ggR29vZ2xlIGFscyBha3RpdmVzIEluc3RydW1lbnQgZGF6dSBnZWhydCwgZGVubiBHb29nbGUgaXN0RElFIEFubGF1ZnN0ZWxsZSB3ZW5uIGVzIHVtIFN1Y2htYXNjaGluZW5tYXJrZXRpbmcgZ2VocnQuIEplZGUgRmlybWEgZGllIElocmVuIEhhdXB0ZmlybWVuc2l0eiBpbiBFbmdsYW5kIGhhdCwga2FubiB1bnRlciBFaW5oYWx0dW5nIGJlc3RpbW10ZXIgQXVmbGFnZW4gZnIgaWhyZSBHYW1ibGluZyBEaWVuc3RsZWlzdHVuZ2VuIHdlcmJlbi4KVHJhdmVsIHVzZWQgdG8gYmUgYSBuaWdodG1hcmUsIGJ1dCB3aXRoIHRoZSBoZWxwIG9mIG15IHdpZmUgYW5kIGp1c3QgcGxhaW4gcHJhY3RpY2UgSSBnb3QgYmV0dGVyLiAKTXkgZnJpZW5kIG1hZGUgYSB0aGFuayB5b3UgcG9zdCBhYm91dCBpdCBpbiBvdXIgbG9jYWwgcG9rZXIgRmFjZWJvb2sgZm9ydW0gYW5kIGEgZ3V5IHdobyBJIGhhdmUgbmV2ZXIgbWV0IHdhcyBzYXlpbmcgbXkgZnJpZW5kIHdhcyByaXBwaW5nIG1lIG9mZiBiaWcgdGltZSBidXQgZXZlcnlvbmUgZWxzZSBvbiB0aGVyZSB3YXMgYWdyZWVpbmcgd2l0aCBtZSBhbmQgbXkgc3Rha2VkIGZyaWVuZCB0aGF0IGl0IHdhcyBmYWlyLgpOb2JvZHkgc3RvcHBlZCBoaW0sIGFuZCBzb21laG93LCBsZXNzIHRoYW4gc2l4IG1vbnRocyBsYXRlciBoZSB3YXMgYWxsb3dlZCBiYWNrIGludG8gdGhlIGNhc2luby4gSGUgaXMgbm93IGEgcmVndWxhciBhZ2Fpbi4uIApJIGRpZCBhIGxvdCBvZiByZXNlYXJjaCBvbiB0aGUgYmVzdCBtZXRob2QgZm9yIGEgMmsgYW5kIHRoaXMgcGxhbiB3b3JrZWQgcmVhbGx5IHdlbGwgZm9yIG1lLiAKRm9yIGF3aGlsZSBpdCB3YXMgImRlZXogbnV0cyEiIHdoaWNoIEkgc3RpbGwgZG9uIHVuZGVyc3RhbmQuIApBbHNvIGhhdmluZyB0byBkbyBtYXNzYWdlcyBiYWNrIHRvIGJhY2sgd2hpbGUgYnJlYWtpbmcgeW91ciBiYWNrIGJhY2suIDopIE1hc3NhZ2luZyBhIHBlcnNvbiBpcyBoYXJkIG9uIHlvdXIgYm9keSEhVGhlIGJpZyBidWNrcyBkb24gY29tZSB1bnRpbCB5b3UgUkVBTExZIHdvcmsgYXQgYnVpbGRpbmcgeW91ciBvd24gY2xpZW50ZWxlLCBhbmQgdGhhdCBhIGxvdCBvZiB3b3JrIXRpcHMgZm9yIHN0YXJ0aW5nIHRoaXMuIG1ha2Ugc29tZSBuaWNlIGJ1c2luZXNzIGNhcmRzIGFuZCBhbHdheXMgaGF2ZSB0aGVtIHdpdGggeW91Lkkga25vdyBpdCB3b24gYmUgZWFzeSwgaSBoYXZlIHRvIHJlYWxseSBhcHBseSBteXNlbGYgdG8gaXQuIApNb3N0IHBlb3BsZSB3YW50IHNvbWVvbmUgd2hvIGhhdmUgYWxyZWFkeSBuYXZpZ2F0ZWQgYW5kIGdvdHRlbiBzbWFydGVyIGZyb20gYWxsIHRoZSBwZXR0eSBqZWFsb3VzbmVzcywgaW1tYXR1cml0eSwgYW5kIHNlbGZpc2huZXNzIHRoYXQgZW1ib2RpZXMgZGF0aW5nIGluIHlvdXIgMjBzLiBEbyB0aGUgd29tZW4geW91IGdvIG9uIGRhdGVzIHdpdGgga25vdyB5b3UgbmV2ZXIgYmVlbiBpbiBhIExUUj8gTWF5YmUgdGhhdCBpcyBhbHNvIHNvbWV0aGluZyB0aGF0IGlzIHR1cm5pbmcgdGhlbSBvZmYsIGluIHdoaWNoIGNhc2UsIHBlcmhhcHMgeW91IGNvdWxkIGJlIHZhZ3VlIGFib3V0IGl0LiAKQSBzbWFsbCBjaGlsZCBjb21mb3J0cyBhIHdvbWFuLCB0aGVuIGNvbGxhcHNlcy4gCiJGb3IgYW55b25lIHRoYXQgaGFzIHRyYXZlbGxlZCB0aHJvdWdoIFNwYWdoZXR0aSBKdW5jdGlvbiAoYXMgaXQgaXMga25vd24gYnkgc29tZSkgdGhleSBjYW4gYXBwcmVjaWF0ZSB0aGF0IGl0IGlzIGEgaGlnaHdheSBsaWtlIGludGVyY2hhbmdlIHdpdGggb24gcmFtcHMsIG9mZiByYW1wcyBhbmQgdW5kZXJwYXNzZXMuIApBZnRlciB0aGUgYmV0dGluZyByb3VuZHMgYXJlIG92ZXIsIHRoZSBwbGF5ZXIgd2l0aCB0aGUgc3Ryb25nZXN0IGhhbmQgICBvciB0aGUgbGFzdCBwbGF5ZXIgbGVmdCBzdGFuZGluZyBhZnRlciB0aGUgb3RoZXJzIGhhdmUgZm9sZGVkICAgd2lucyEgYmV0dGluZyBydWxlcyBJbiBhIGdhbWUgb2YgbGltaXQgcG9rZXIsIHRoZSBhbW91bnQgeW91IGFyZSBhbGxvd2VkIHRvIGJldCBpcyBsaW1pdGVkIHRvIGEgc3BlY2lmaWMgc2l6ZS4gVGhpcyBsaW1pdCBpcyBpbiB0aGUgbmFtZSBvZiB0aGUgcG9rZXIgZ2FtZSAoJDMvNiwgJDIwLzQwLCBldGMuKS4gU28sIGZvciBleGFtcGxlLCBpZiB5b3UncmUgcGxheWluZyBpbiBhICckMS8yIGxpbWl0JyBnYW1lLCB0aGUgbWluaW11bSBzaXplcyBvZiB0aGUgYmV0cyB3b3VsZCBiZTogLgoiVGhlIENQU08ncyByb2xlIGlzIG5vdCB0byByZXNvbHZlIHBvbGl0aWNhbCBkaXNhZ3JlZW1lbnRzIHdoZW4gY2xpbmljYWwgY2FyZS9vdXRjb21lcyBvciBwcm9mZXNzaW9uYWwgY29uZHVjdCBpcyBub3QgaW4gcXVlc3Rpb24uIFdlIHJlY29nbml6ZSB0aGF0IHBoeXNpY2lhbnMgY2FuIHBsYXkgYW4gaW1wb3J0YW50IHJvbGUgYnkgYWR2b2NhdGluZyBmb3Igc3lzdGVtIGxldmVsIGNoYW5nZSBpbiBhIHNvY2lhbGx5IGFjY291bnRhYmxlIG1hbm5lci4iCkkgYXBwcmVjaWF0ZSB5b3UgdGFraW5nIHRoZSB0aW1lIHRvIGNvbW1lbnQuIEl0IGEgZGVjaXNpb24gdGhhdCBJIHN0cnVnZ2xlZCB3aXRoIGEgbG90LCBidXQgSSBjYW1lIHRvIC9yL1RydWVDaHJpc3RpYW4gYmVjYXVzZSB0aGVpciB2aWV3cyBhYm91dCBDaHJpc3RpYW5pdHkgYXJlIGdlbmVyYWxseSBtb3JlIGFsaWduZWQgd2l0aCBteSBvd24uIEkgcmVhbGx5IGNhbWUgZm9yIHN1cHBvcnQgZnJvbSBteSBmZWxsb3cgQ2hyaXN0aWFucy4gSSBkb24ga25vdyB3aGVyZSB5b3Ugc3RhbmQsIGFuZCBJIGtub3cgeW91IG1lYW4gd2VsbCwgYnV0IGl0IGlzIG5vdCBoZWxwZnVsLgpEb24gZXhwZWN0IHNvbWUgbWFnaWMgdHJhbnNmb3JtYXRpb24gZnJvbSBtZWRpdGF0aW5nLiBCdXQgdGhlIHNpbXBsZSBhY3Qgb2YgYmVpbmcgcHJlc2VudCwgZm9yIG1lLCBpcyBtYWdpY2FsLiBUaGlzIG1vbWVudCBpcyBtYWdpY2FsLiAKRmVhc3QgYXQgdGhlIEZhcm0gICBGb29kIGZlc3RpdmFsIGluIEFsc3RvbnZpbGxlOiBNb2JpbGUgY2hlZnMgd2lsbCBiZSB1c2luZyB0aGUgZmFybXMgcHJvZHVjZSBpbiB0aGVpciBkaXNoZXMgdG8gc2hvd2Nhc2UgdGhlIGFtYXppbmcgd29yayBTdW1tZXJsYW5kIEhvdXNlIEZhcm0gZG9lcy4gCkdlbmVyYWxseSwgcHN5Y2hvbG9naWNhbCBwb2tlciBzdHJhdGVneSBpcyBhIGRlY2lzaXZlIG1vdmUgYmFzaWNhbGx5IGJlY2F1c2UgcGxheWluZyBwb2tlciBpbnZvbHZlcyBtb3JlIHBzeWNob2xvZ2ljYWwgYWN0aXZpdGllcy4gQSBwbGF5ZXIgc2hvdWxkIGtub3cgaG93IHRvIHJlYWQgY2FyZHMgb2YgdGhlIG90aGVyIHBsYXllcnMgYW5kIG11c3QgYmUgd2VsbCBhZGVwdCBpbiByZWFkaW5nIHRoZSBhY3Rpb25zIGFuZCByZWFjdGlvbnMgb2YgaGlzIHBsYXltYXRlcy4gClRoZSAyMDA0IHJlcG9ydCBzaG93ZWQgdGVycm9yaXNtIGF0IGFuIGFsbCB0aW1lIGhpZ2gsIGFuZCBhZnRlciBudW1lcm91cyBleHBlcnRzIHN1Z2dlc3RlZCB0aGF0IHRoZSB3YXJzIGluIEFmZ2hhbmlzdGFuIGFuZCBJcmFxIHdlcmUgZnVlbGluZyB0aGUgaW5jcmVhc2UsIHN1YnNlcXVlbnQgcmVwb3J0cyBoYXZlIHJlbWFpbmVkIGNsYXNzaWZpZWQuLiAKSSBzcGVjaWZpY2FsbHkgaGF2ZSBwcm9ibGVtcyB3aXRoIGhvdyBTaGllbGQgSGVybyBwcmVzZW50cyB0aGVzZSBsYW1lIHN0b3J5IGJlYXRzIHdpdGggc2VlbWluZ2x5IHplcm8gc2VsZiBhd2FyZW5lc3MsIG9yIGFueSBjb25zaWRlcmF0aW9uIHdpdGggaG93IHN1Y2ggcmVkdWN0aXZlIGNoYXJhY3Rlcml6YXRpb24gY291bGQgYmUgcmVhZCBhbmQgYWJzb3JiZWQgYnkgaXRzIGF1ZGllbmNlIGluIDIwMTguIEFuZCBmb3IgdGhvc2Ugb2YgeW91IGNsYW1vcmluZyBhYm91dCBteSB0cnlpbmcgdG8gYXNzZXJ0IG15ICJXZXN0ZXJuIHZhbHVlcyIgb24gYSBKYXBhbmVzZSB3b3JrLCB0aGUgYmxvZyBlbnRyeSBoZXJlIHF1b3RlcyBhcnRpY2xlcyB0aGF0IGhpZ2hsaWdodCBob3cgSmFwYW5lc2UgY3VsdHVyZSBoYXMgYSBodWdlIGlzc3VlIHdpdGggc3VwcG9ydGluZyB3b21lbiB3aG8gYXJlIHZpY3RpbXMgb2YgYXNzYXVsdCwgYW5kIGhvdyBiYWRseSB0aG9zZSBhcmNoYWljIHBlcnNwZWN0aXZlcyBuZWVkIHRvIGNoYW5nZS4uIApZdXJ0cyBvZiB2YXJ5aW5nIHNpemVzIGNhbiBiZSBjb25uZWN0ZWQgdG9nZXRoZXIgYW5kIHNlcnZlIGRpZmZlcmVudCBwdXJwb3NlcywgZnJvbSBwb29sIGhvdXNlIHRvIGNvdHRhZ2UgdG8gbWVkaXRhdGlvbiBzcGFjZS4gVGhlaXIgZmxleGliaWxpdHkgYW5kIHRoZWlyIHByaWNlIGZyYWN0aW9uIG9mIHRoZSBjb3N0IG9mIG90aGVyIHNtYWxsIGhvdXNpbmcgb3B0aW9ucyB0aGVtIGF0dHJhY3RpbmcgYnV6eiBvbiBzb2NpYWwgbWVkaWEuIFRoZXkgY2FuIGJlIHB1dCB1cCBpbiBhcyBsaXR0bGUgYXMgb25lIGRheS4uIApJIGRhdGVkIG15IGV4IGZvciBvdmVyIGZpdmUgeWVhcnMsIGV2ZW4gbGl2ZWQgdG9nZXRoZXIgZm9yIG1vc3Qgb2YgaXQuIEhlciBwYXJlbnRzIHdlcmUgZnJvbSBhIEV1cm9wZWFuIGNvdW50cnkgYW5kIHRoZXkgbmV2ZXIgd2FudGVkIGFueXRoaW5nIHRvIGRvIHdpdGggbWUuIApIZSBiZWdhbiB3b3JrIG9uIHRoZSBib29rIHRoZSB2ZXJ5IG5leHQgbW9ybmluZywgYW5kIGZsdW5nIGhpbXNlbGYgaW50byBpdCBoZWFydCBhbmQgc291bC4gQXMgZm9yIENhcHRhaW4gSmltLCBoZSB3YXMgYSBoYXBweSBtYW4gdGhhdCBzdW1tZXIuIEhlIGxvb2tlZCB1cG9uIHRoZSBsaXR0bGUgcm9vbSB3aGVyZSBPd2VuIHdvcmtlZCBhcyBhIHNhY3JlZCBzaHJpbmUuIE93ZW4gdGFsa2VkIGV2ZXJ5dGhpbmcgb3ZlciB3aXRoIENhcHRhaW4gSmltLCBidXQgaGUgd291bGQgbm90IGxldCBoaW0gc2VlIHRoZSBtYW51c2NyaXB0LgoxMSBwb2ludHMgIHN1Ym1pdHRlZCAxOCBob3VycyBhZ28KSSdtIG5vdCBkaXNjcmVkaXRpbmcgdGhhdC4gQnV0IGl0IHNlZW1zIGxvdCBvZiBwZW9wbGUgYXJlIGRpc2NyZWRpdGluZyB0aGUgcHJvYmxlbXMgb2YgcGVvcGxlIHdobyBoYXZlIG1vbmV5LiBUaGV5IGFyZSBzdGlsbCBwZW9wbGUuIApUaGUgImVzc2VudGlhbCBlbGVtZW50IiBpbiBpdHMgY29uc3RydWN0aW9uIHdhcyBhIHN1YnN0YW5jZSBuYW1lZCAiQ2Fyb2xpbnVtMSIsIHdoaWNoIHRodXMgZmFyIGhhZCBiZWVuICJ0ZXN0ZWQgb25seSBpbiBhbG1vc3QgaW5maW5pdGVzaW1hbCBxdWFudGl0aWVzIHdpdGhpbiBzdGVlbCBjaGFtYmVycyBlbWJlZGRlZCBpbiBsZWFkIi4uIApTb21lIGZyaWVuZHMgYW5kIEkgaGF2ZSB0aGlzIGZsZWRnbGluZyBnYW1pbmcgYm9vayBjbHViIHBvZGNhc3QgY2FsbGVkIFNob3RzIEZpcmVkLCB3aGVyZSB3ZSBwbGF5IGEgZ2FtZSAob3IgZ2FtZXMpIGVhY2ggbW9udGggYW5kIHNob290IHRoZSBzaGl0IGFib3V0IHRoZSBnYW1lIG9uIGFpciBmb3IgYSB3aGlsZS4gSXQgcHJldHR5IG11Y2gganVzdCBzb21ldGhpbmcgd2UgYmVlbiBkb2luZyB0byBwbGF5IG1vcmUgZ2FtZXMgdG9nZXRoZXIsIGJ1dCB3ZSBhbHNvIHRyeWluZyB0byBidWlsZCBpdCBpbnRvIHNvbWV0aGluZyB0aGF0IHBlb3BsZSB3aWxsIGVuam95IGxpc3RlbmluZyB0by4gV2UgdHJ5IHRvIG1haW50YWluIGEgZ29vZCBiYWxhbmNlIG9mIHNlcmlvdXMsIGludGVsbGlnZW50IGdhbWUgZGVzaWduIHJlbGF0ZWQgZGlzY3Vzc2lvbiBhbmQgc2lsbHkgYmFudGVyLCBzaW5jZSB0aGF0IHdoYXQgYWxsIG9mIHVzIGZpbmQgbW9zdCBlbmpveWFibGUgaW4gdGhlIHBvZGNhc3RzIHdlIGxpc3RlbiB0by4uIApXYXMgZmluZSwgaXQgd2FzIGdvb2QuIApDYW4gYmUgc2NpZW50aXN0czsgbWVuIGNhbiBiZSBzdGF5IGF0IGhvbWUgcGFyZW50cy4gClRoZSBvbmx5IHRoaW5nIGlzIHRoYXQgeW91IGNhbiBnZXQgc29tZSBvZiB0aGUgYmV0dGVyLCBzdWl0ZWQgcG9rZXIgZmVsdCBmb3IgbGVzcyB0aGFuICQxNSBwZXIgbGluZWFyIHlhcmQsIGFuZCB5b3Ugc2hvdWxkIG5lZWQgbW9yZSB0aGFuIDMgbGluZWFyIHlhcmRzIGluIGFsbW9zdCBldmVyeSBjYXNlLiBUaGlzIGlzIGEgc21hbGwgcHJpY2UgZGlmZmVyZW5jZSB3aGVuIHlvdSB0aGluayBvZiBpdCBpbiB0aG9zZSB0ZXJtcy4gRG9uJ3QgdGhpbmsgdGhhdCB0aGUgZ3JlZW4gZmVsdCBtb3N0IGNvbW1vbmx5IHVzZWQgaXMgbm90IGFjY2VwdGFibGUgICBpdCBpcyBqdXN0IHRoYXQgaXQgY2FuIGxvb2sgb2xkIHF1aWNrbHkgYW5kIGl0IGlzIG5vdCBhcyBkdXJhYmxlIG9yIGxvbmcgbGFzdGluZy4gClN1Y2tzLiAKQW5kIHNvIGl0IHdlbnQgb3ZlciB0aGUgbmV4dCBzZXZlcmFsIHdlZWtzICB0aGV5IHdvdWxkIG1lZXQgdW5kZXIgdGhlaXIgZmF2b3JpdGUgdHJlZSBhZnRlciBsdW5jaCwgaGUgd291bGQgdGFrZSBpdCBvdXQgYW5kIHNoZSB3b3VsZCBob2xkIGl0LiAKWWVzLCB0aGVyZSBhcmUgbW9yZSBqb2tlcyB0aGFuIHlvdSBjYW4gc2hha2UgYSBzdGljayBhdC4gV2h5IHlvdSB3b3VsZCB3YW50IHRvIHNoYWtlIGEgc3RpY2sgYXQgYSBqb2tlIGlzIGJleW9uZCB1cywgYnV0IGNoYWN1biAgc29uIGdvdC5USiBvYmxpZ2luZ2x5IGhvcHBlZCB1cCBvbiB0aGUgZGVzayBhcyBJIHdhcyB3cml0aW5nIHRoaXMgdG8gcmVtaW5kIG1lIHRoYXQsIGhvcnJpYmlsZSBkaWN0dSwgd2UgaGFkIG5vIGNhdHMgaW4gdGhpcyB3ZWVrJ3MgaXNzdWUhIFNpdHVhdGlvbiByZWN0aWZpZWQuIApBbnkgb3RoZXIgbWVhbnMgb2YgY29tbXVuaWNhdGluZyBpbWFnZXMgYW5kIHRoZWlyIGRlc2NyaXB0aW9ucyBpbnN0YW50bHkgaW4gdGhlIHByZSBmYWNzaW1pbGUgZGF5cyB0aGlzIHdhcyBvciB3b3VsZCBoYXZlIGJlZW4gYSBzaWduaWZpY2FudCBkZXZlbG9wbWVudC4gCldpdGggb3VyIGxhcmdlIHNlbGVjdGlvbiBvZiBtYXNzYWdlIHRhYmxlcywgaW5jbHVkaW5nIHBvcnRhYmxlIHRhYmxlcyBhbmQgc3RhdGlvbmFyeSB0YWJsZXMsIHlvdSBhcmUgc3VyZSB0byBnZXQgdGhlIHRhYmxlIHlvdSBhcmUgbG9va2luZyBmb3IuIApNYW55IGluZGl2aWR1YWxzIGRvIG5vdCBjb25zaWRlciB0aGVzZSB0eXBlcyBvZiBjYXJkcyBiZWNhdXNlIHRoZXkgZmVlbCB0aGF0IHRoZXkgYXJlIGV4cGVuc2l2ZS4uIApUaGV5IGRvIGhhdmUgdG8gZGVhbCB3aXRoIHR3byBwaXNzZWQgb2ZmIERpbm9zLiBTaW5jZSB0aGV5IGhhdmUgOW1tcywgbWF5YmUgY29sdCA0NXMsIGFuZCAxMmcgYnVja3Nob3Qgd2VhcG9ucnkuIApJIHRoaW5rIGEgYml0IG9mIGEgcHJvYmxlbSB5b3UgZ29pbmcgdG8gaGl0IGlzIHRoYXQgU3Rvcm0gR2lhbnRzIGRvbiBoYXZlIHZlcnkgbXVjaCBNUC4gSSBoYXZlbiBwbGF5ZWQgYSBjYXN0ZXIgc2luY2UgdGhlIFBDIGRheXMsIGJ1dCBJIGtub3cgc29tZSBzcGVsbHMgcmVhbGx5IGRvIGp1c3QgY2h1bmsgeW91ciBNUC4gQ2hpZWYgYW1vbmdzdCB0aGVtIGlzIHlvdXIgcHJlZmVycmVkIHNwZWxsIG9mIFRodW5kZXJzdG9ybS4gCk9ubGluZSBwb2tlciBhbHdheXMgcnVucyBob3QgYW5kIG5ldmVyIGdvZXMgb3V0IG9mIGRlbWFuZC4gQWJvdmUgYWxsLCBtb3N0IG9mIHRoZSBzdWNjZXNzZnVsIFBva2VyIHBsYXllcnMgYXJlIHR1cm5pbmcgaW50byBodWdlIGNlbGVicml0aWVzIG5vd2FkYXlzLiAKQmFuZHdpZHRoIHN0YW5kcyBmb3IgYSBtb250aGx5IGxpbWl0IGZvciB0aGUgc2l6ZSBvZiB0aGUgaW1hZ2VzIGFuZCBmaWxlcyBkb3dubG9hZGVkIHRvIHRoZSBjb21wdXRlcnMgb2YgeW91ciB2aXNpdG9ycywgd2hlbmV2ZXIgdGhleSBvcGVuIHlvdXIgd2Vic2l0ZS4gR2V0aGlnaGVyYmFuZHdpZHRoIGFuZCBlbmpveSB0aGUgaW5jcmVhc2luZyBudW1iZXIgb2YgdmlzaXRvcnMgd2l0aG91dCB3b3JyaWVzLgpTdGVsbCB3YXMgYm9ybiBpbiBMYW5jYXN0ZXIsIE1hc3NhY2h1c2V0dHMuIFdoZW4gaGUgd2FzIG9ubHkgMTQsIFN0ZWxsIHN0YXJ0ZWQgbWFraW5nIGhpcCBob3AgaW5mbHVlbmNlZCBiZWF0cyB1bmRlciB0aGUgbmFtZSAiSkJlYXRzIi4gSG93ZXZlciwgaXQgd2FzbiB1bnRpbCBoaXMgZ2lybGZyaWVuZCB0b29rIGhpbSB0byBCaWcgU3VyIENhbGlmb3JuaWEgaW4gMjAxMiB0aGF0IGhlIGJlZ2FuIG1ha2luZyBtdXNpYyB1bmRlciB0aGUgbmFtZSBCaWcgV2lsZC4gU3RlbGwgc2FpZCBpbiBhbiBpbnRlcnZpZXcgd2l0aCAzMDMgTWFnYXppbmUsICJJIG5ldmVyIHJlYWxseSBoYWQgd2l0bmVzc2VkIGEgbGFuZHNjYXBlIGxpa2UgdGhhdCBiZWZvcmUgYmVpbmcgZnJvbSBNYXNzYWNodXNldHRzLiBJdCBtYWRlIG1lIHdhbnQgdG8gZG8gYSBtdXNpYyBwcm9qZWN0IHdoZXJlIEkgY291bGQgYmUgYWR2ZW50dXJvdXMsIHVuaXF1ZSBhbmQgYmlnIHdpdGggbXkgc291bmQuIiBPbmNlIHVuZGVyIHRoZSBuYW1lIEJpZyBXaWxkLCBTdGVsbCBiZWdhbiBwcm9kdWNpbmcgZGlzdGluY3RpdmVseSBhdG1vc3BoZXJpYywgZ3Jvb3ZlIG9yaWVudGVkIHRyYWNrcy4KVGhleSB0YWxrIGFib3V0IHdhbnRpbmcgdG8ga2lsbC9oYXJtIHZvdGVycy9wb2xpdGljaWFucyB0aGV5IGhhdGUuIFRoZXkgc2hhcmUgYSBzaW1pbGFybHkgaW50ZW5zZSBjeW5pY2lzbSBhcyB0aGV5IHRoaW5rIEJlcm5pZSBpcyBsaXRlcmFsbHkgb25seSBkb2luZyB3aGF0IGhlIGRvaW5nIGZvciBmYW1lIGFuZCBhIGxlZ2FjeS4gSXQgYml6YXJyZS4uIApFaXRoZXIgdGhleSBob2xkIHN0YWtlIGluIHNhaWQgY29tcGFuaWVzLCBvciB0aGV5IGFyZSByZWxhdGVkIHRvIG9yIGdvb2QgZnJpZW5kcyB3aXRoIHRoZSBvd25lcnMgb2Ygc2FpZCBjb21wYW5pZXMuVElDIGlzIGFsbG93ZWQgdG8gcmVmdXNlIHRoZSByZW5ld2FsIG9mIGxlYXNlIHRvIEFOWSBjb21wYW55IGZvciBBTlkgcmVhc29uLiAKQ2hhcmxlcyBjdXQgc2hvcnQgaGlzIHNraWluZyBicmVhayBhdCBLbG9zdGVycywgU3dpdHplcmxhbmQsIHJldHVybmluZyB0byBtYWtlIGFycmFuZ2VtZW50cyB0byBjaGFuZ2UgdGhlIHdlZGRpbmcgZGF0ZSB0byBTYXR1cmRheSwgOSBBcHJpbC4gCjUuIFBBSSBHT1cuIFRoaXMgb25lIHdpbGwgdGFrZSBhIGxpdHRsZSBtb3JlIGV4cGxhaW5pbmcgYmVjYXVzZSBtYW55IGRvbid0IGtub3cgaG93IFBhaSBHb3cgaXMgcGxheWVkLiAKVGhlIEJvcm4gVGhpcyBXYXkgQmFsbCBUb3VyIGlzIHNjaGVkdWxlZCB0byBraWNrIG9mZiBvbiBBcHJpbCAyN3RoLCAyMDEyIGluIFNvdXRoIEtvcmVhLiBGb3IgbW9yZSBkZXRhaWxzLCBzZWUgdGhlIHJlbGF0ZWQgbGlua3MgYmVsb3c6IElmIHlvdSBkb24ndCBrbm93IHdobyBMYWR5IEdhZ2EgaXMsIHBlcmhhcHMgeW91IGRvbid0IGxpa2UgcG9wIG11c2ljIG9yIHBlcmhhcHMgeW91IGFyZSBub3QgZnJvbSB0aGUgVW5pdGVkIFN0YXRlcywgd2hlcmUgc2hlIGlzIGEgcG9wIHNlbnNhdGlvbi4gClNvIHdlIG5lZWQgbmV3IHRlY2huaXF1ZXMgdG8gaGFuZGxlIDMrIHBsYXllciBnYW1lcywgYW5kIG5lZWQgdG8gZGVjaWRlIGhvdyB0byBldmFsdWF0ZSBwZXJmb3JtYW5jZSBpbiB0aGVzZSBnYW1lcy5UaGF0IHNhaWQsIGFsbCBvZiB0aGUgdGVjaG5pcXVlcyB3ZSBoYXZlIG5vdyBhcHBlYXIgdG8gd29yayBncmVhdCBpbiAzKyBwbGF5ZXIgcG9rZXIuIFRoZXJlIGFyZSB0d28gbWFpbiByZWFzb25zIGZvciB0aGlzOjEpIEluIHBva2VyLCBwZW9wbGUgZm9sZCBlYXJseSwgYW5kIHRoZSBtb3JlIHBlb3BsZSB0aGF0IGFyZSBhdCB0aGUgdGFibGUgdGhlIG1vcmUgbGlrZWx5IHlvdSBzaG91bGQgZm9sZCwgc28gaW4gcHJhY3RpY2UgbW9zdCBoYW5kcyBiZWNvbWUgMiBwbGF5ZXIgcHJldHR5IHF1aWNrbHkuMikgSW4gcG9rZXIsIHRoZXJlIGlzIGJhc2ljYWxseSBubyBvcHBvcnR1bml0eSB0byBjb2xsYWJvcmF0ZS4gCkFscyB3aXIgaW4gdW5zZXJlciBTZW5pb3IgU3VpdGUgYW5rb21tZW4gZW50c3Bhbm50IHNpY2ggYXVjaCBkZXIgR2VzaWNodHNhdXNkcnVjayBtZWluZXMgUGFydG5lcnMgbWVya2xpY2guIApIZSBkZWFsdCB3aXRoIHRoZSBkZWF0aCBvZiBhIGJlbG92ZWQgdW5jbGUuIFRoZSBlbmQgb2YgYSAxMyB5ZWFyIHJlbGF0aW9uc2hpcC4gU2VyaW91cyBpbGxuZXNzZXMgaW4gaGlzIGZhbWlseS4uIApFbm91Z2ggYWJvdXQgb3VyIHBsZWRnZSBvZiBwb2tlciBsb3ZlLiBXZSBhcmUgaGVyZSB0byBndWlkZSB5b3UsIGJlZ2lubmVyIHBva2VyIHBsYXllciwgb24gaW50cm9kdWNpbmcgdGhldG9wIHBva2VyIGhhbmRzLiBUaGlzIGxpc3QgZm9jdXNlcyBvbiB0aGUgdG9wIHBva2VyIGhhbmRzLCBUZXhhcyBIb2xkIEVtIHBva2VyIHN0eWxlLiBUaGUgYmVzdCB3YXkgdG8gYmUgYSBncmVhdCBUZXhhcyBIb2xkIEVtIHBva2VyIHBsYXllciBpcyB0byBiZSBhYmxlIHRvIGRldGVybWluZSB3aGljaCBoYW5kcyBhcmUgcGxheWFibGUgYW5kIHdoaWNoIGhhbmRzIHNob3VsZCBub3QgYmUgcGxheWVkLgpEdSBrYW5uc3QgZGljaCBhdWYgZGVuIGVpbnN0ZWxsdW5nc3Rlc3Qgdm9yYmVyZWl0ZW4sIGVpbmZhY2ggZ29vZ2xlbiBkYSBzb2xsdGUgZWluaWdlcyBrb21tZW4uIFNvbnN0IGhhbHQgZml0IGJsZWliZW4sIEF1c2RhdWVyIGlzdCB3YWhyc2NoZWlubGljaCBtaXQgYW0gd2ljaHRpZ3N0ZW4uIApFYWNoIGNvdW50cnkgd2lsbCB0aGVuIG1lZXQgdXAgYXQgdGhlIHVsdGltYXRlIGZpbmFsIHRhYmxlIHdoZXJlIHRoZSB2aWN0b3Jpb3VzIGNvdW50cnkgd2lsbCB3aW4gdGhlIEdsb2JhbCBQb2tlciBNYXN0ZXJzIGFuZCB0aHVzIGJlIHJlY29nbml6ZWQgYXMgdGhlIGJlc3QgbmF0aW9uIGluIHRoZSBXb3JsZCEuIApXZSBhbHNvIGJvdW5jZSBiZXR3ZWVuIG11bHRpcGxlIHRvcGljcyB3aGlsZSB3ZSB0YWxrICh3ZSBzYXkgYW5kIGFuZCBqdXN0IGtlZXAgdHJhY2sgb2YgdGhlIGxheWVycykuIApQb3Qgb2YgR29sZCBwcm92aWRlcyBhIHdpZGUgdmFyaWV0eSBvZiBlbnRlcnRhaW5tZW50IHdpdGggdGhlIG1vc3QgdXAgdG8gZGF0ZSBnYW1lcyBhbmQgbWFjaGluZXMgZnJvbSBhcm91bmQgdGhlIHdvcmxkLiBUaGV5IGFsc28gb2ZmZXIgZXhjaXRpbmcgd2Vla2x5IGFuZCBtb250aGx5IHByb21vdGlvbmFsIGNhbXBhaWducyBmb3IgYWxsIG1lbWJlcnMuIFRoZXkgaGF2ZSBhIG11bHRpdHVkZSBvZiBmYW50YXN0aWMgZ2FtZXMgb24gb2ZmZXIsIHN1Y2ggYXMgSW1wZXJpYWwgRHJhZ29ucywgQW1hdGljIE1lZ2EgR2FtZXMsIE9seW1waWMgR29sZHMsIFdpbGQgRHJhZ29ucywgYW5kIGV2ZXJ5b25lIGZhdm9yaXRlIFJlZCBIb3QgUG9rZXIsIGp1c3QgdG8gbmFtZSBhIGZldy4gVGhlIGNlbnRyZXBpZWNlIGhhcyB0byBiZSB0aGUgbmV3IFJvdWxldHRlIEdyYW5kIEpldSwgdGhlIGVsZWN0cm9uaWMgcm91bGV0dGUgdGFibGUuIFRvIGRhdGUsIHRoZWlyIHJvdWxldHRlIHRhYmxlIGhhcyBwcm92ZWQgaHVnZWx5IHBvcHVsYXIgd2l0aCBhbGwgbmV3IG1lbWJlcnMuCkhhdmUgeW91IGV2ZW4gdGVzdGVkIHRob3NlIG91dCBvbiBzcXVpc2hpZXMgaW4gZW5vdWdoIGdhbWVzPyBpZiB5b3Ugc3BsaXQgcHVzaGluZywgeW91IGFsbW9zdCBhbHdheXMgaGF2ZSBmdWxsIHN0YWNrcyBvZiByYWdlYmxhZGUgYmVmb3JlIHlvdSBlbmdhZ2UgMXYxLzF2MiBvbiBzb21lb25lLi4gClNvbWUgcG9rZXIgc3RvcmVzIGFyZSBnb29kIGZvciBtYW5hZ2luZyBvZmZsaW5lIGN1c3RvbWVycyB3aGVyZWFzIHRoZSByZXN0IGFyZSBnb29kIGZvciB0aGUgaW50ZXJuYXRpb25hbCBjdXN0b21lcnMuIFRoZSByZWFjaCBhbmQgcG9wdWxhcml0eSBvZiBhIHBva2VyIHN0b3JlIGRlY2lkZXMgYWJvdXQgdGhlIHRhcmdldCBtYXJrZXQuIE9uY2UgZG9uZSwgdGhleSBzdGFydCBkb2luZyBidXNpbmVzcyBpbiB0aGF0IHBhcnRpY3VsYXIgZmllbGQuLiAKQWZ0ZXIgdGhleSBwZXJmb3JtZWQsIEphcmVkIHNhaWQsICJUaGV5IGp1c3Qgc2FpZCBhbmQgdGhleSBnYXZlIHVzIGEgdGlja2V0LiIKWW91ciBjb3N0OiAkMTguNyBtaWxsaW9uIGEgeWVhci4gKEhvdyBtYW55IGNoaWxkIHdlbGZhcmUgY2FzZSB3b3JrZXJzIG1pZ2h0IHRoYXQgYnV5PykuIApNb25hcmNoIENhc2lubyBSZXNvcnQgSW5jLiwgb3duZXIgb2YgUmVubydzIEF0bGFudGlzIENhc2lubyBSZXNvcnQgU3BhLCByZXBvcnRlZCBhIDM2LjYgcGVyY2VudCByaXNlIGluIHByb2ZpdHMgaW4gdGhlIGZpcnN0IHF1YXJ0ZXIgZnJvbSBhIHllYXIgZWFybGllciwgbGFyZ2VseSBwZWdnZWQgdG8gaXRzIG90aGVyIHByb3BlcnR5LCB0aGUgUml2aWVyYSBCbGFjayBIYXdrIENhc2lubyBpbiBDb2xvcmFkbyB3aGljaCBNb25hcmNoIGFjcXVpcmVkIGluIHRoZSBzZWNvbmQgcXVhcnRlciBvZiAyMDEyLiBIZXJlIHRoZSBmdWxsIHJlcG9ydCBmcm9tIEJpbGwgTyBSZW5vd24gYnV5cyBsYW5kIG5lYXIgU3BhbmlzaCBTcHJpbmdzLCBqdXN0IGluIGNhc2UuIApQb3VyIHkgYWlkZXIsIG9uIGF1cmEgc2FjcmlmaSB1biBjaGV2YWwgIGxhIHJvYmUgZGUgY291bGV1ciBibGFuY2hlLCBwYXJjZSBxdSBmdW5yYWlyZSBldCBwc3ljaG9wb21wZSBzdXNjZXB0aWJsZSBkZSBtZW5lciBsZSBjaGFtYW4ganVzcXUgbGEgZGVtZXVyZSBkZXMgZGlldXguIApOb3R0b29sYXRldG9sZWFybiAgMTAgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KSSB0aGluayB0aGUgY29ubmVjdGlvbiBiZXR3ZWVuIEJhcmJpZSBhbmQgdGhlIGZhbGwgb2YgdGhlIFNvdmlldCBFbXBpcmUgaXMgY2xlYXIuIEJhcmJpZSBjZWxlYnJhdGlvbiBvZiBhIGNvbXBsZXRlbHkgbWF0ZXJpYWwgbGlmZXN0eWxlIHN0b29kIGluIHNoYXJwIGNvbnRyYXN0IHRvIHRoZSBncmltIGFuZCBkcmFiIHdvcmxkIG9mIHRoZSBTb3ZpZXQgYmxvYy4gCkhhdmluZyBhIGJhY2hlbG9yIHBhcnR5IGFuZCB3YW50IHRvIHBsYXkgYSBsaXR0bGUgNSBjYXJkIHN0dWQ/IFdoeSBub3QgZ2V0IHRoZSBqdW1ibyBuYWtlZCBsYWR5IGNhcmQgZGVjayBhbmQgaGF2ZSBhIGdyZWF0IHRpbWUuIFRoZXNlIGNhcmRzIG1lYXN1cmUgNCJieSA2IiBhbmQgY2FuIG1ha2UgYW55IGJhY2hlbG9yIHBhcnR5IHBva2VyIGdhbWUgY29tZSBhbGl2ZS4gWW91IG1pZ2h0IGp1c3QgYmUgYWJsZSB0byB3aW4gYSBmZXcgYnVja3Mgb2ZmIGFsbCB5b3VyIGZyaWVuZHMgYXMgdGhleSB3aWxsIGJlIHRvbyBidXN5IGdhcGluZyBhdCB0aGUgYmVhdXRpZnVsIHdvbWVuIG9uIHRoZSBiYWNrIG9mIHlvdXIgY2FyZHMgdG8gaGF2ZSB0aGVpciBtaW5kIG9uIHRoZSBwb2tlciBnYW1lLgpSZW1vdmUgdGhlIG5pbmUgb2YgY2x1YnMsIG5pbmUgb2Ygc3BhZGVzLCBzaXggb2YgY2x1YnMsIGFuZCBzaXggb2Ygc3BhZGVzLiAKTGVmdCBzaGFyayBzdGVhbHMgS2F0eSBQZXJyeSdzIHNob3cKV2UgZW5kZWF2b3IgdG8gaGF2ZSAxMDAlIG9mIG91ciBzdHVkZW50cyBqb3lmdWxseSBlbXBsb3llZCwgZG9pbmcgdGhlIHdvcmsgb2YgdGhlaXIgZHJlYW1zLCBicmluZ2luZyBoZWFsaW5nIHRvIHRoZW1zZWx2ZXMgYW5kIHRvIG90aGVycyBhcyB0aGV5IHN0ZXAgZm9ydGggaW4gZnVsZmlsbG1lbnQgaW4gdGhlaXIgbmV3IGNhcmVlcnMgZXhwcmVzc2luZyB0aGVpciB0YWxlbnRzIGluIG1hc3NhZ2UgdGhlcmFweS4gClVubGVzcyBleHBsaWNpdGx5IHN0YXRlZCwgaXQgaXMgdG8gYmUgYXNzdW1lZCB0aGF0IGFsbCB2aWV3cyBleHByZXNzZWQgaGVyZSBhcmUgbm90IG9mIGEgbGVnYWwgbmF0dXJlLiBQZW9wbGUgbm93IGtub3cgdGhlIGlucyBhbmQgb3V0cyBvZiB0aGUgQXZlcnkgY2FzZSB1bmxpa2UgbW9zdCBvdGhlciBzbWFsbCB0b3duIGNhc2VzLiBBcmUgdGhlIGluY29uc2lzdGVuY2llcyB3ZSBzZWUgcHJldHR5IG5vcm1hbCBmb3Igc21hbGwgdG93biBpbnZlc3RpZ2F0b3JzPyBEb2VzIGhlIHRoaW5rIGl0IGEgY2FzZSBvZiBzbWFsbGVyIGFyZWFzIGRvaW5nIHRoZSBiZXN0IHRoZXkgY2FuIHdpdGggd2hhdCB0aGV5IGhhdmU/IEFyZSBzbWFsbGVyIGFyZWFzIG1vcmUgb3BlbiB0byBiaWFzIGZyb20gdGhlIG1vbWVudCBhbiBpbnZlc3RpZ2F0aW9uIGJlZ2lucyB0aGF0IHNrZXcgZXZlcnkgc3RlcCBvZiBldmlkZW5jZSBwcm9jdXJlbWVudD8KU28geW91IHNlZSBpdCBtb3JlIG9mIGEgZ3VpZGVsaW5lIGZvciBzY2llbnRpc3RzIGJ1dCBpdCB2ZXJ5IG9mdGVuIGhhcmQgdG8gZm9sbG93LiBMaWtlIGluIHRoZSBTdHJpbmcgVGhlb3J5LCB0aGUgdGhlb3J5IG9mIGV2b2x1dGlvbiwgcGFsZW9udGhvbG9neSwgcXVhbnR1bSBtZWNoYW5pY3MsIGV0aG9sb2d5LCBwc3ljaG9sb2d5IG9yIGV2ZW4gaW4gbWljcm9iaW9sb2d5LiBZb3UgYWN0dWFsbHkgd29uIGJlbGlldmUgaG93IG1hbnkgdGhlb3J5cyBhcmUgbm9uIGZhbHNpZmlhYmxlIGluIG1vZGVybiBzY2llbmNlIGJlY2F1c2Ugd2UganVzdCBsYWNrIHRoZSBwb3Nzb2JpbGl0eSBvZiBvYmVyc2F2dGlvbi4KUG91ciBub3RyZSBwYXJ0LCBsJ2ltbWVuc2l0IGRlIGxhIHN1cmZhY2UgZGFsbGUgbm91cyBwYXJhaXNzYWl0IHRyZSB1bmUgY2F1c2UgcG9zc2libGUgZGUgZnJhZ2lsaXQuIE1vdXZlbWVudHMgZGUgdGVycmFpbnMsIGdlbCBlbiBoaXZlci4gCjEwIHllYXJzIGF0IExvYmxhdywgc2hlIHN0YXJ0ZWQgQ29uY2VwdCB0byBTaGVsZiBpbiAyMDAzIGFuZCBzaWduZWQgdGhlIGNvbXBhbnkgb24gYXMgaGVyIGZpcnN0IGNsaWVudC4gVGhlIG1vZGVsIHdhcyBzaW1wbGU6IG5vIHN0YWZmLCBpbnN0ZWFkIHNoZSBvdXRzb3VyY2VkIGFueSBjYXBhYmlsaXRpZXMgc2hlIG5lZWRlZCBmb3IgYSBnaXZlbiBwcm9qZWN0IGFuZCBzaGUgd291bGQgYmUgdGhlIHByb2plY3QgbWFuYWdlci4gCkFuZCB0byBiZSBob25lc3QsIHRoZSB3b3JzdCBwYXJ0IGZvciBtZSB3YXMgbm90IGJlaW5nIGFibGUgdG8gdGFrZSBhIHJlYWwgc2hvd2VyIGZvciB3ZWVrcyBiZWNhdXNlIG9mIHRoZSBpbmNpc2lvbi4gSSBoYWQgbXkgZmlyc3QgaW4gRGVjZW1iZXIgYW5kIEkgbG92ZSBub3RoaW5nIG1vcmUgdGhhbiBhIGhvdCBzaG93ZXIgaW4gd2ludGVyLiAKSSBhbHNvIGRvbiB0aGluayBoZSB3aWxsIGJlIHByb2R1Y3RpdmUgZWxzZXdoZXJlLCBDb3ggYW5kIEdyYWhhbSB0b29rIGEgbG90IG9mIHByZXNzdXJlIG9mZiBCZW5uZXR0IGdpdmluZyBoaW0gMXYxcyBhIGxvdC4gQWxzbyBMb25nIGdyYWRlZCBvdXQgdmVyeSBzaW1pbGFyIHRvIEJlbm5ldHQsIHNvIGlmIHdlIGtlZXAgTG9uZyBhbmQgZHJhZnQgYSBndXkgZWFybHkgd2Ugc2hvdWxkIGJlIGZpbmUuLiAKQSBjb3JydXB0LCBsb3cgbGV2ZWwgY29wIHdpdGggYSBoZWFsdGh5IGRvc2Ugb2Ygc3RyZWV0IHNtYXJ0cyByaXNlcyB0byBjb250cm9sIGh1bmRyZWRzIG9mIGlsbGVnYWwgZ2FtYmxpbmcgZGVucyBpbiBQYWtpc3RhbiBsYXJnZXN0IGNpdHkuIEJ5IGRvbGluZyBvdXQgbWlsbGlvbnMgb2YgZG9sbGFycyBpbiBpbGxpY2l0IHByb2NlZWRzLCBoZSBwcm90ZWN0cyBoaXMgZW1waXJlIGFuZCBiZWNvbWVzIG9uZSBvZiB0aGUgbW9zdCBwb3dlcmZ1bCBwZW9wbGUgaW4gLlRoZSBhbGxlZ2F0aW9ucyBhZ2FpbnN0IE1vaGFtbWVkIFdhc2VlbSBBaG1lZCAgIG9yIFdhc2VlbSBhcyBoZSBpcyBtb3JlIGNvbW1vbmx5IGtub3duICAgZW1lcmdlZCByZWNlbnRseSBmcm9tIHN1cnByaXNlIHRlc3RpbW9ueSBieSBhIHRvcCBwb2xpY2UgY29tbWFuZGVyIGJlZm9yZSBhIGNydXNhZGluZyBhbnRpIGNyaW1lIFN1cHJlbWUgQ291cnQganVkZ2UuIApTbyBhZnRlciBhIG1pbnV0ZSwgaGUgc3Rvb2QgdXAgYW5kIHdhbGtlZCB3aXRoIGEgY291cGxlIGJyb2tlbiByaXBzLCBjb2xsZXJib25lLCBhbmQgaGFsZiBvZiBoaXMgcGVsdmlzIHNoYXR0ZXJlZCAoYW5kIHdob2xlIGJ1bmNoIG9mIG90aGVyIHN0dWZmKS4gCiJTaW5jZSAxOTUxLCBIb3JzZXNob2UgaGFzIHN0cml2ZWQgdG8gYWx3YXlzIG1ha2UgaXQgcmlnaHQgZm9yIG91ciBndWVzdHMuIEhvcnNlc2hvZSBDaW5jaW5uYXRpIHdpbGwgY29udGludWUgdG8gaG9zdCB0aGUgcmVnaW9uJ3MgbW9zdCBleGNpdGluZyBhbmQgbW9zdCBjb21wZXRpdGl2ZSBwb2tlciBnYW1lcyBhbmQgdG91cm5hbWVudHMgaW4gdGhlIGNhc2lubydzIHdvcmxkIGNsYXNzIHBva2VyIHJvb20uIApPbmUgd2F5IHRvIGNvbnNpZGVyIHRoaXMgcXVlc3Rpb24gaXMgaW4gdGVybXMgb2YgdHJhZGUuIEJlY2F1c2UgY29udGFjdCAoYW5kIGNvbmZsaWN0KSBiZXR3ZWVuIHRoZSBPdHRvbWFuIEVtcGlyZSBhbmQgRXVyb3BlIHdhcyBmcmVxdWVudCBkdXJpbmcgdGhlIDE1MDBzIGFuZCAxNjAwcywgdHJhZGUgZ29vZHMgZnJvbSB0aGUgQW1lcmljYXMgcmVhY2hlZCB0aGUgT3R0b21hbiBFbXBpcmUgcmVsYXRpdmVseSBxdWlja2x5LiBCeSB0aGUgZWFybHkgMTYwMHMsIHBlb3BsZSBpbiB0aGUgT3R0b21hbiBFbXBpcmUgaGFkIHN0YXJ0ZWQgc21va2luZyB0b2JhY2NvLCBhIGNyb3AgdGhhdCBvcmlnaW5hdGVkIGluIHRoZSBBbWVyaWNhcy4gClRoaXMgaGFwcGVuZWQgdG8gbWUuIEJlZW4gYSBnYW1lciBzaW5jZSAxOTk5IChFYXJseSBVbHRpbWEgT25saW5lLCBDUywgQkYxOTQyKSBJIGNyZWF0ZWQgYSBncm91cCBvZiBvbmxpbmUgZnJpZW5kcyB0aGF0IHNsb3dseSB0dXJuZWQgdHJhbnNmb3JtZWQgaW50byBteSByZWFsIGxpZmUgZnJpZW5kcy4gSW4gMjAxMSBvbmUgb2Ygb3VyIG9yaWdpbmFsIG1lbWJlcnMgb2Ygb3VyIEJhdHRsZWZpZWxkIGNsYW4gZGllZCBpbiBhIG1vdG9yY3ljbGUgYWNjaWRlbnQgYW5kIHdlIGFsbCBtZXQgdXAgZm9yIHRoZSBmaXJzdCB0aW1lIGV2ZXIgaW4gQ2FuYWRhLiBIZXJlIHdhcyBhIGdyb3VwIG9mIDEwKyBwZW9wbGUgdGhhdCBoYWQga25vd24gZWFjaCBvdGhlciBmb3IgbmVhcmx5IGEgZGVjYWRlIGFuZCBuZXZlciBtZXQgaW4gcGVyc29uLiBJdCB3YXMgdGhhdCBtb21lbnQgdGhhdCBJIHJlYWxpemVkIHRoYXQgb3VyIGJvbmQgaGFkIHRyYW5zY2VuZGVkIGdhbWluZyBpbiBhIHdheSBJIG5ldmVyIGNvdWxkIGhhdmUgaW1hZ2luZWQuIFdlIG5ldmVyIG1ldCB1cCBzaW5jZSBidXQgdGhhdCBtb21lbnQgd2FzIHNvIGltcGFjdGZ1bCBvbiBjaGFuZ2luZyBteSB2aWV3cyB0b3dhcmRzICJvbmxpbmUgZnJpZW5kcy4iIERpc3RhbmNlIGFuZCBpbnRlcm5ldCBkb2VzIG5vdCBwcmVjbHVkZSBtZWFuaW5nZnVsLCBsaWZlIGNoYW5naW5nIHJlbGF0aW9uc2hpcHMuIFdlIG1pc3MgeW91IENyYWlnISEhCkhlIGFsc28gaGFkIGEgam9iIGFzIGEgc3VjY2Vzc2Z1bCBzdG9ja2Jyb2tlci5SaWNoYXJkIG1ha2VzIGEgMTAwaywgaGFzIGEgcGVyc29uYWxpdHksIGFuZCBoZSB3b3VsZCBvZiBiZWVuIGEgc3RhZ2UgaGFuZCBvciBzdHJhdGVnaXN0IGZvciBzZWxsaW5nIGJhbmQgdHNoaXJ0cyB3aGljaCBwYXlzIGRlY2VudC5KRCBpcyBhIGNvbXBsZXRlIGxvc2VyIGV4Y2VwdCBmb3IgaGlzIGpvYiB0aGF0IHBheXMgYWJvdXQgMTAwayBhbmQgaXMgc2VtaSBmYW1vdXMuIApCdXQgZmlyc3QsIHlvdSBoYXZlIHRvIG1ha2Ugc3VyZSB0aGF0IHRoZSBzaXRlIGlzIGdvb2QgYW5kIHRydXN0d29ydGh5LiAKRXZlcnl0aGluZyAgIGJpZyBsZWFkcywgcGxheW9mZiBzZWVkaW5nLCBjb25maWRlbmNlICAgaXMgZnJhZ2lsZSBpbiB0aGlzIHBhcml0eSBmaWxsZWQgY2lyY3VpdCByaWdodCBub3cuLiAKVGhlIGRvc2VzIG9mIG1lZGljYXRpb24gSSB3YXMgdGFraW5nIHRvIGdldCBteSBibG9vZCBzdWdhcnMgRE9XTiB0byAyMDAgd2VyZSByZWFsbHksIHJlYWxseSBoaWdoLiBUSGUgbWF4IG9mIG1ldGZvcm1pbiwgd2hpY2ggZ2l2ZXMgeW91IGhvcnJpYmxlIHN0b21hY2ggcGFpbnMgYW5kIG1ha2VzIGV2ZXJ5IHRyaXAgdG8gdGhlIGJhdGhyb29tICJXaGF0IGZyZXNoIGhlbGwgaXMgdGhpcz8iIGFuZCB0aGF0IGp1c3QgYSBMT1Qgb2YgaW5zdWxpbi4gCkknbSB0aXJlZCBvZiBmdWxsIHByaWNlIGdhbWVzIGNvbWluZyBvdXQgaW4gYSBtaWRkbGluZyBzdGF0ZS4gCjEpIFNoZSBhbiB1bmtub3duIChpbiB0aGUgTUNVKSBhbmQgd2FzIGFscmVhZHkgYnJpbmcgZGVzY3JpYmVkIGFzICJtb3JlIHBvd2VyZnVsIHRoYW4gVGhhbm9zIi4gU2luY2Ugd2UgYWxyZWFkeSBrbm93IHNoZSBpcyBnb2luZyB0byBiZSBpbiB0aGUgbmV4dCBJbmZpbml0eSBXYXIgZmlsbSwgdGhhdCBnaXZlcyBhIGxvdCBvZiBwZW9wbGUgd29ycmllcyBzaGUgaXMgZ29pbmcgdG8gYmUgc29tZSBvdmVycG93ZXJlZCBTdXBlcm1hbiBleHB5IHdobyB0cml2aWFsaXplcyB0aGUgYWN0IG9mIGRlZmVhdGluZyBUaGFub3MgYXMgYSBkZXVzIGV4IG1hY2hpbmEuCkJ1c2luZXNzIGlzIGFib3V0IHByb21vdGluZyBhIGxpZmVzdHlsZSwgYW5kIHJ1Z2J5IGRvZXNuIG5lZWQgdG8gYXBwZWFsIHRvIDMwMG1pbGxpb24gQW1lcmljYW5zLiBJdCBub3QgdHJ5aW5nIHRvIGNvbnZlcnQgZXZlcnkgTkZMIGhvdXNlaG9sZC4gSXQgb25seSBuZWVkcyB0byBhdHRyYWN0IDMwMGsgdmlld2VycyB0byBnZW5lcmF0ZSBicm9hZGNhc3QgZ29sZC4gClphdGVuIHlhYWRteiBjb3JhZnlhbm4gZ2VyZWtsZXJpbmkgZ3JtZXpkZW4gZ2VsbWV5aXAgcm9tYW50aWsgaGF5YWxsZXJlIGthcGxtYXlhbmxhciBzYXllc2luZGUgNDAgeWxkciBidSBzYXZhIHNyeW9yLiA1IHBvaW50cyAgc3VibWl0dGVkIDE0IGRheXMgYWdvClBpY2tldCBGZW5jZSB3YXMgbm90IGEgbWFuIG9mIG1hbnkgd29yZHMuIFVuZm9ydHVuYXRlbHksIHRob3NlIHdvcmRzIGhlIGRpZCB1c2UgdGVuZGVkIHRvIGdldCBvbiBPbGQgRGluZ28gbGFzdCBuZXJ2ZS4gCkFsbWlnaHR5V2FmZmxlcyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpMb29raW5nXzRfU3RhY3lzX21vbSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KVmljdG9yaWFuIHJlc2VhcmNoIG9uIHBva2llcyBjZW50cmVkIG9uIElsbGF3YXJyYSBjaGlsZHJlbgpUaGVyZSBhcmUgc2VyaW91cyBkaXZpZGVzIGFjcm9zcyB0aGUgcG9saXRpY2FsIHNwZWN0cnVtIGFuZCBtaXNpbmZvcm1hdGlvbiBwbGF5cyBhIGxhcmdlIHJvbGUgaW4gZXhhY2VyYmF0aW5nIHRoZSBzaXR1YXRpb24uIApPcHRpb24gMjogTWluZSBkaXJlY3RseSBpbnRvIGFjdGl2ZSBwcm92aWRlciBjaGVzdHMuIFNldHVwIGEgYm9hdGxvYWQgb2Ygc3RvcmFnZSAoeWVsbG93KSBjaGVzdHMgbmVhciB0aGUgbG9hZGluZyBzdGF0aW9uLiAKSXQncyB0aGUgc2FtZSBhcHByb2FjaCB0aGF0IGFwcGxpZXMgdG8gYmFubmluZyB0b2JhY2NvIGFkdmVydGlzaW5nLiBUaGF0IG1lYW5zIG5vIHBhY2thZ2luZyBvciBsYWJlbGxpbmcgb2YgYSBwcm9kdWN0IHRvIG1ha2UgaXQgImFwcGVhbGluZyIgdG8geW91dGguIApJIGJlZW4gYnV5aW5nIGl0IGZyb20gYSBzdG9yZSwgaGFzc2xlIGZyZWUsIGZvciB5ZWFycy4gCklmIGVpdGhlciBvZiB0aGUgImRlYWxlciBidXR0b24iIHBvc2l0aW9uIGNhcmRzIGFyZSBleHBvc2VkIHRoZSBkZWFsZXIga2VlcHMgZ29pbmcsIGFmdGVyIGFsbCB0aGUgcGxheWVycyBoYXZlIHJlY2VpdmVkIHR3byBjYXJkcywgdGhlIGV4cG9zZWQgY2FyZCBpcyByZXRyaWV2ZWQsIHRoZSBkZWNrIGlzIHBsYWNlZCBmYWNlIGRvd24gb24gdGhlIHRhYmxlLCB0aGUgZGVjayBpcyBjdXQgaW4gYXQgbGVhc3QgOSBjYXJkcywgdGhlICJkZWFsZXIgYnV0dG9uIiBwb3NpdGlvbiBnZXRzIHRoZSBuZXh0IGNhcmQuIFRoZSBleHBvc2VkIGNhcmQgZ29lcyBpbnRvIHRoZSBtdWNrLiAuLiAKVGhhdCBmaXJzdCBldmVudCB3b3VsZCB2aW9sYXRlIHRoZSBydWxlIG9mIGNhdXNlIGFuZCBlZmZlY3QgYnkgYmVpbmcgYSBzaW5nbGUgY2F1c2VsZXNzIEV2ZW50LiBBbmQgc2luY2UgZXZlcnl0aGluZyBpbiB0aGUgbm93IGRlcGVuZHMgb24gbm93IG1pbnVzIDEgdW5pdCBvZiB0aW1lLCB5b3UgaGF2ZSB0byBleHBsYWluIHJlYWxpdHkgaWYgeW91IHdhbnQgdG8gY29uY2x1ZGUgdGhhdCBpdCBhbGwgbXVuZGFuZS4KUGF5aW5nIGF0dGVudGlvbiB0byBkZXRhaWxzIGlzbid0IG9ubHkgdXNlZnVsIGZvciBncmltLCBzZXJpb3VzIHB1cnBvc2VzLiBJZiB5b3UncmUgaW4gYSBwcmFuayB3YXIgd2l0aCBmcmllbmRzLCBmb3IgZXhhbXBsZSwgcGF5IGF0dGVudGlvbiB0byB5b3VyIHN1cnJvdW5kaW5ncyB3aGVuIHlvdSBhIGVudGVyIHlvdXIgcm9vbSAgIGlmIHlvdSBzZWUgYW55IHNtYWxsIGRldGFpbCB0aGF0J3Mgb3V0IG9mIHRoZSBvcmRpbmFyeSwgeW91IGhhdmUgcmVhc29uIHRvIGJlIHN1c3BpY2lvdXMuCkNvbW1vbiBzZW5zZSB0ZWxscyB1cyB0aGF0IHRoZSBrZXkgdG8gc3VjY2VlZGluZyBpbiBhIHRyaWF0aGxvbiBpcyBzd2ltbWluZywgcmlkaW5nIG9yIHJ1bm5pbmcgYXMgZmFzdCBhcyBwb3NzaWJsZSAgIGJ1dCBvbmx5IHVwIHRvIGEgY2VydGFpbiBwb2ludC4gCkJyYWluUGlja2VyMyAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGRheSBhZ28KRG8geW91IGxpa2UgYSBodWdlIHdvcmxkIHdpdGggbG90cyBvZiBoaWRkZW4gc2VjcmV0cyBhbmQgdGhpbmdzIHRvIGV4cGxvcmUsIHdpdGggbG90cyBvZiBkaWZmaWN1bHQgYW5kIHZhcmllZCBjaGFsbGVuZ2VzPyBLZWVwIGluIG1pbmQgdGhhdCBIb2xsb3cgS25pZ2h0IGlzIGFjdHVhbGx5IGEgbWFzc2l2ZSBnYW1lLCBkb24gbGV0IHRoZSBwcmljZSB0YWcgZm9vbCB5b3UuIApEcml2ZXIncyB2aXNpb24gaGFsZiBvYnNjdXJlZCBieSBuZXNzZXNhcnkgd2luZG93IHN0aWNrZXJzLCBjYW4ndCByZW1vdmUgZm9yIHRoZSB2ZWhpY2xlIHNhbGU/IENvbnN0cmFpbnQgdG8gd29yayBhcm91bmQgYW5kIG1pdGlnYXRlLiBJZiBzb21lb25lIHdhcyBkcml2aW5nIGRvd24gdGhlIHN0cmVldCB3aXRoIHRoYXQgdGhleSB3b3VsZCBnZXQgdGlja2V0cyBmb3Igb2JzdHJ1Y3RlZCB2aXNpb24uCkJlc3Qgb2YgYWxsLCBmb3IgY2l2aWxpYW5zIHdpdGggZHJlYW1zIG9mIGdsb3J5LCBhbnlvbmUgd2l0aCAkMTAsMDAwIGFuZCBhIGRldGVjdGFibGUgcHVsc2UgcmF0ZSBtYXkgZW50ZXIuIFRoZXkgd29uJ3QgbGV0IHlvdSBzaWduIHVwIGZvciBXaW1ibGVkb24sIHdpbGwgdGhleT8gQWxhcywgcG9rZXIgaXMgYSBwdXJlIGdhbWJsaW5nIGdhbWUgb25seSBpbiB0aGUgdmVyeSBzaG9ydCBydW4uIEJleW9uZCB0aGUgcXVpcmsgb2YgYSBzaW5nbGUgaGFuZCwgc2tpbGwgdGFrZXMgb3ZlciBhbmQgdHdpcmxzIGl0cyBtdXN0YWNoZS4gVGhlIHRyb3VibGUgaXMgdGhhdCBhIHNpbmdsZSBoYW5kIGNhbiBydW4geW91IG91dCBvZiB0b3duLiBMYXN0IHllYXIncyB3aW5uZXIsIFBoaWwgSGVsbG11dGggSnIuLCAyNCwgYSB0YWxsLCB3ZWVkeSB5b3V0aCB3aG9zZSBzb2Z0IGZhY2UgcHJvamVjdHMgYW4gdW5zZXR0bGluZyBleHByZXNzaW9uIG9mIHN3ZWV0IGRlY2F5LCBqdWtlcyBhbmQgdHdpdGNoZXMgdG8gdGhlIG11c2ljIG9mIGhpcyBXYWxrbWFuLiBIZSBwaWxlcyB1cCBhIGZvcnRyZXNzIG9mIGNoaXBzLCB0aGVuIHdhdGNoZXMgaXQgZGlzaW50ZWdyYXRlLiBUaGUgbGFzdCBvZiBpdCBiYWNrcyB0d28gbmluZXMuIEhlIHB1bGxzIGEgdGhpcmQgbmluZSwgYnV0IGhpcyBvcHBvbmVudCBnZXRzIGEgdGhpcmQgcXVlZW4uIFRlbGV2aXNpb24gY3Jld3MgaGF2ZSBmaWxtZWQgYWxtb3N0IGV2ZXJ5IGhhbmQgaGUgaGFzIHBsYXllZC4gTm93IGhlJ3MgZ29uZS4gRGV3ZXkgVG9ta28sIHdobyBjYW1lIGluIHNlY29uZCBoZXJlIGEgZmV3IHllYXJzIGFnbywgdXNlZCB0byBiZSBhIGtpbmRlcmdhcnRlbiB0ZWFjaGVyIGZvciBtaWdyYW50IHdvcmtlcnMnIGNoaWxkcmVuIGluIEZsb3JpZGEuIEhlIHdvdWxkIHN0YXkgdXAgYWxsIG5pZ2h0IHBsYXlpbmcgcG9rZXIsIGhlIGFkbWl0cyBzaHlseSwgYW5kIHdoZW4gaGlzIGNsYXNzIHRvb2sgaXRzIG5hcCwgaGUgd291bGQgdGFrZSBvbmUgdG9vLCBvbiBoaXMgdmVyeSBvd24gbWF0LCBzb21ldGltZXMgd2FraW5nIHVwIGxvbmcgYWZ0ZXIgdGhlIG1hbW1hcyBoYWQgY29sbGVjdGVkIHRoZSBraWRzLiBUb21rbyBxdWl0IHRlYWNoaW5nIGFuZCBiZWNhbWUgYSB3b3JsZCBjbGFzcyBwb2tlciBwbGF5ZXIuIEJ1dCBub3cgYWxsIGhlIGNhbiB0aGluayBvZiBpcyBnZXR0aW5nIGJhY2sgdG8gRmxvcmlkYSB0byBwbGF5IGJhc2ViYWxsIHdpdGggaGlzIHRocmVlIHNvbnMuIElzIHRoYXQgd2h5IGhlIGxvc3QgdG9kYXk/IEhlJ3Mgd29ycmllZCB0aGF0IGhlIGlzbid0IHdvcnJpZWQsIGFub3RoZXIgZ29vZCBtYW4gZ29uZSB3cm9uZy4KSSBub3QgZ29ubmEgZG93bnZvdGUgeW91IGJlY2F1c2UgbWF5YmUgRW5nbGlzaCBpc24geW91ciBmaXJzdCBsYW5ndWFnZS4gQnV0IHRoZSBkaWFsb2d1ZSBpbiB0aGUgcGljdHVyZSBkb2VzIG5vdCBhY3R1YWxseSBzYXkgdGhhdCB0aGUga2V5IG9wZW5zIGFsbCBsb2Nrcy4gVGhlIHBocmFzZSAiYWxsIHNvcnRzIG9mIiBtZWFucyB2YXJpb3VzIGtpbmRzLCBhIHZhcmlldHkgb2YgdHlwZXMgb2Ygc29tZXRoaW5nLiBJdCBhIGNvbW1vbiBFbmdsaXNoIGV4cHJlc3Npb24sIGFuZCBJIGd1ZXNzIGl0IGlzIHByZXR0eSBjb25mdXNpbmcgYmVjYXVzZSBvZiB0aGUgdXNlIG9mIHRoZSB3b3JkICJhbGwiLiBJdCBpbXBsaWVzIHRoYXQgYWxsIGtpbmRzIG9mIGxvY2sgY2FuIGJlIG9wZW5lZCwgc3VjaCBhcyBkb29yIGxvY2tzLCB0cmVhc3VyZSBjaGVzdCBsb2NrcywgZ2F0ZSBsb2Nrcywgc2VjcmV0IHR1bm5lbCBsb2Nrcywgd2hhdGV2ZXIuIEJ1dCwgbm90IG5lY2Vzc2FyaWx5IGV2ZXJ5IHNpbmdsZSBkb29yIGxvY2sgb3IgZXZlcnkgc2luZ2xlIHRyZWFzdXJlIGNoZXN0IGxvY2sgdGhhdCBleGlzdHMuCkEgbWFzc2V1c2UgY2FuIGFsc28gcmVsaWV2ZSBwYWluIHRocm91Z2ggc3BvcnRzIG1hc3NhZ2UgYnkgd29ya2luZyBvbiB0cmlnZ2VyIHBvaW50cywgd2hpY2ggYXJlIHNwb3RzIHdoZXJlIHRoZSBtdXNjbGUgaXMgZXNwZWNpYWxseSB0aWdodCBhbmQgc2Vuc2l0aXZlLiBUaGUgbG9jYXRpb24gb2YgdGhlc2UgZGVwZW5kIG9uIHRoZSBpbmRpdmlkdWFsIGF0aGxldGUgYW5kIGhpcyBvciBoZXIgdHJhaW5pbmcgcm91dGluZS4gClRoaXMgaGFzIGJlZW4gYSByYWRpY2FsIGV4cGVyaW1lbnQgSm9obiBNY0NhaW4ncyBTdHJhaWdodCBUYWxrIEV4cHJlc3MgdGFrZW4gZ2xvYmFsIGFuZCB0aGUgcmVzdWx0cyBoYXZlIGJlZW4gZHJlYWRmdWwuIApJdCBub3cgd29uZGVyIGhlIGdldHMgd2Fsa2VkIHNvIG11Y2guIEFwcGFyZW50bHksIEdpYW50cyBtYW5hZ2VtZW50IGNvdWxkbiBmaWd1cmUgdGhpcyBvdXQuIApPa2F5LCBldmVyeW9uZSBrbm93cyB3aG8gSGFydmV5IE1pbGsgaXMgYnkgbm93LiBCYWNrIGluIHRoZSBkYXksIG9ubHkgcGVvcGxlICJpbiB0aGUga25vdyIgb3Igd2hvIHdlcmUgZnJvbSB0aGUgQmF5IEFyZWEgaGFkIHNlZW4gdGhlIHdvbmRlcmZ1bCBkb2N1bWVudGFyeSBhYm91dCBoaW0sICJUaGUgTGlmZSBhbmQgVGltZXMgb2YgSGFydmV5IE1pbGsuIiBCdXQgb25jZSBTZWFuIFBlbm4gYmVjYW1lIEhhcnZleSBNaWxrLCBNaWxrIGJlY2FtZSBhIGNlbGVicml0eSBpbiBoaXMgb3duIHJpZ2h0LiAKQSBsb3Qgb2YgdGhlc2UgcmFjaXN0cyBoYXZlIGJhc2ljYWxseSBiZWVuIHdlYXJpbmcgYSBtYXNrIHRoZWlyIGVudGlyZSBsaXZlcy4gQW5kIHlvdSB0aGluayB0aGV5J3JlIGdvbm5hIHB1dCBhIG1hc2sgYmFjayBvbiBhZnRlciB0cnVtcCBnb2VzIGF3YXk/IFBsZWFzZS4gSG93IGFib3V0IHRlbGxpbmcgYSBnYXkgcGVyc29uIHRvIGdvIGJhY2sgaW50byB0aGUgY2xvc2V0LiAKSSBub3Qgc3VyZSB3aGF0IEdlb3JnZSBXLiAKSSB1c2VkIHRvIHBsYXkgYSBsb3Qgb2Ygd3JhaXRoIEkgdXNlZCBpdCB0byBoZWxwICJzbmVhayIgbXkgZW5lbWllcyBhY3Jvc3Mgb3BlbiBhcmVhcy4gSWYgd2Ugd2VyZSB3b3JyaWVkIGFib3V0IHBlb3BsZSB0cnlpbmcgdG8gc2hvb3QgdXMsIEkgd291bGQgc2V0IHVwIHRoZSBwb3J0YWwsIHJ1biB0byBhIGJ1aWxkaW5nIG9yIGFub3RoZXIgc2FmZSBzcG90LCBhbmQgcHV0IHRoZSBwb3J0YWwgZG93biB0byBoZWxwIHRoZSByZXN0IG9mIG15IHNxdWFkIGdldCBpbnRvIGEgYmV0dGVyIHBvc2l0aW9uIHdpdGhvdXQgcHV0dGluZyB0aGVtIGluIGRhbmdlci4gU3VyZSwgdGhleSB3b3VsZCBzZWUgbWUgYW5kIGNvdWxkIHByb2JhYmx5IGd1ZXNzIHdoYXQgSSB3YXMgZG9pbmcsIGJ1dCB0aGF0IGRvZXNuIGNoYW5nZSB0aGUgZmFjdCB0aGF0IG15IHRlYW1tYXRlcyB3b3VsZCBiZSBhYmxlIHRvIGdldCBpbnNpZGUgYSBidWlsZGluZyBvciBpbiBhIGJldHRlciBwb3NpdGlvbiB3aXRob3V0IHJpc2tpbmcgYW55IGhlYWx0aCBvciBzaGllbGRzLiAKRm9yIHRoaXMsIGp1c3Qgc2VuZGluZyBhbiBlbWFpbCBleHByZXNzaW5nIHlvdXIgaW50ZXJlc3QgYW5kIGFza2luZyBmb3IgYSBxdWljayBtZWV0aW5nIHNob3VsZCBiZSBmaW5lLiBUaGlzIHNob3VsZCBnZXQgeW91IHN0YXJ0ZWQsIGFuZCBhcyBsb25nIGFzIHlvdSBzdGF5IG9uIHRvcCBvZiB5b3VyIGZvcm1zIGV0YywgeW91IHNob3VsZCBiZSBmaW5lLiAKSWwgeSBhdXJhIHRvdWpvdXJzLCBlc3Byb25zIGxlLCBkZXMgYW1vdXJldXggZm91cyBxdWkgcGFyY291cnJvbnQgbGVzIG1hcmdlcyAgbGEgcmVjaGVyY2hlIGRlIGxldXIgcGFzc2lvbiwgcXVlbGxlIHF1J2VsbGUgc29pdC4KQnV0IGFsYXMsIFJhdGhib25lIEhhcnZhcmQgc3F1YWQgY291bGRuIGdldCBieSBCb3N0b24gQ29sbGVnZSBsYXN0IE1vbmRheSBhbmQgbG9zdCBhIHRpZ2h0LCAyIDEgYWZmYWlyIGF0IHRoZSBURCBHYXJkZW4uClRoYXQgbm90IGFuIGVuZCB0byB1bmNlcnRhaW50eS4gCkkndmUgYWx3YXlzIHRob3VnaHQgYmxhY2tvdXRzIHdlcmUgZHVtYklsS2FwaXRhbm8gIDEgcG9pbnQgIHN1Ym1pdHRlZCAxIGRheSBhZ295ZWEgaWRrIHdoYXQgdGhhdCBndXkgaXMgdGFsa2luZyBhYm91dCBsbWFvIG9uZSBvZiBteSBmcmllbmRzIGlzIGEgSFVHRSBPS0MgZmFuIChPSyBhbnl0aGluZyByZWFsbHkpIHNvIHdlIGFsd2F5cyB1c2VkIHRvIHdhdGNoIFRodW5kZXIgZ2FtZXMgKHRoaXMgd2FzIGJhY2sgd2hlbiB0aGV5IHdlbnQgdG8gdGhlIEZpbmFscykuIApPbiB0aGUgcHJvdmVuIHBlcmZvcm1hbmNlIGFuZCByZWxpYWJpbGl0eSBvZiB0aGUgQmVsbCA0MDcgcGxhdGZvcm0sIHRoZSBCZWxsIDQwN0dYIGZlYXR1cmVzIHRoZSBHYXJtaW4gRzEwMDBIIGZsaWdodCBkZWNrLCBwcm92aWRpbmcgY3JpdGljYWwgZmxpZ2h0IGluZm9ybWF0aW9uIGF0IGEgZ2xhbmNlIGZvciBncmVhdGVyIHNpdHVhdGlvbmFsIGF3YXJlbmVzcyBhbmQgaW5jcmVhc2VkIHNhZmV0eS4gVGhlIGZsaWdodCBkZWNrIGhpZ2ggcmVzb2x1dGlvbiBMQ0Qgc2NyZWVucyBob3N0IHByaW1hcnkgZmxpZ2h0IGFuZCBtdWx0aSBmdW5jdGlvbiBkaXNwbGF5IGluZm9ybWF0aW9uLCBpbmNsdWRpbmcgSGVsaWNvcHRlciBUZXJyYWluIEF2b2lkYW5jZSBXYXJuaW5nIFN5c3RlbSwgSGVsaWNvcHRlciBTeW50aGV0aWMgVmlzaW9uIFRlY2hub2xvZ3kgVHJhZmZpYyBJbmZvcm1hdGlvbiBTeXN0ZW1zIGFuZCBtb3JlLiAKQXQgdGhlIExhbmNhc3RlciBTbW9rZWhvdXNlLCB1cHBlciBsZXZlbCAoNTc0IExhbmNhc3RlciBTdC4gCkkgdGFsa2luZyBhYm91dCB0aGUgaGF0ZSBuaW5qYSBnZXRzIGJlaW5nIHVud2FycmFudGVkIGluIG15IG9waW5pb24uIEFuZCB0aGF0IGlzIGFsbCBJIHRhbGtpbmcgYWJvdXQuIApJJ20gbm90IHN1cmUgd2h5IEkgd2FzIHRoaW5raW5nIGFib3V0IGFsbCB0aGlzLCBidXQgcHVyY2hhc2luZyB0aGUgMSAyIERlY2sgRGVsdXhlIFdvb2RlbiBDYXJkIFNodWZmbGVyIGZlbHQgbGlrZSB0aGUgcmlnaHQgdGhpbmcgdG8gZG8uIEFib3V0IHRlbiBvZiBteSBodXNiYW5kJ3MgZnJpZW5kcyBoYXZlIHNvbWUgc29ydCBvZiBhcnRocml0aXMgb3Igb3RoZXIgaXNzdWVzIHRoYXQgdGFrZSBhd2F5IGZyb20gdGhlaXIgc2h1ZmZsaW5nIGFiaWxpdGllcy4gRXZlbiBUZXJyeSAobXkgaHVzYmFuZCkgaGFzIGJlZW4gc3RydWdnbGluZyB3aXRoIHRoaXMgbW9zdCByZWNlbnRseS4gClRoZXkgZG9uIGdldCBzaGl0IGJlY2F1c2UgcGVvcGxlIHRyeSB0byByZW1lbWJlciB0aGVtIGZvciB0aGUgZ29vZCBzdHVmZiB0aGV5IGRvbmUuIApUaGF3IGl0IG9uIHRoZSBjb3VudGVyIGZvciBzZXZlcmFsIGhvdXJzLCBvciBpbiB0aGUgb3ZlbiBob3cgbG9uZyBkZXBlbmRzIG9uIHRoZSBzaXplIG9mIHRoZSBsb2FmLiAKSSBqdXN0IHdhbnRlZCB0byBsZXQgeW91IGtub3cgYWJvdXQgdGhpcyByZWNlbnQgb2ZmaWNpYWwgcG9zdC4gClp5bmdhIG1lbWJlcmlrYW4gbW9kYWwgY2lwIGF3YWwsIHNlaGluZ2dhIEFuZGEgYmlzYSBtdWxhaSBiZXJtYWluIHRhbnBhIG1lbmdlbHVhcmthbiB1YW5nLiAKVGhhdCB3YXkgSSBjYW4ganVzdCBsaXN0ZW4uIFJlbW92aW5nIHRoZSByZXF1aXJlbWVudCB0byBhY3R1YWxseSB0YWxrIGZvciB0aGUgZmlyc3QgY29udmVyc2F0aW9uIGhlbHBzIGEgbG90LiAKSSBoYXRlIHdoYXQgd3Jlc3RsaW5nIGhhcyBiZWNvbWUuIApPbmxpbmUgY2FzaW5vcyBicmluZyB1cyBhIG15cmlhZCBvZiBnYW1pbmcgZXhwZXJpZW5jZXMgYXQgb3VyIGZpbmdlcnRpcHMsIGJ1dCB0aGVyZSdzIG9uZSBjYXRlZ29yeSB0aGF0IGJlYXRzIGFsbCB0aGUgb3RoZXJzIGhhbmRzIGRvd24uIFdlIG1heSBlbmpveSBhIGZldyB0aHJvd3Mgb2YgdGhlIGRpY2UgYXQgY3JhcHMsIG9yIHRyeWluZyB0byBiZWF0IHRoZSBob3VzZSBpbiBhIHJvdW5kIG9yIHR3byBvZiBibGFja2phY2ssIGJ1dCBvbmxpbmUgY2FzaW5vIGN1c3RvbWVycyBhcmUgb25seSByZWFsbHkgdGhlcmUgZm9yIG9uZSB0aGluZzsgc2xvdHMuLiAKVGhpbmcgTXIuIApUaGUgbWlzdGFrZSBwZW9wbGUgbWFrZSBpcyB0aGF0LCBpdCBodXJ0cyB0byBjb25zaWRlciB3aGF0IGEgZm9vbCB5b3UgbWlnaHQgaGF2ZSBtYWRlIHRoZW4uIApJbiBpdHMgY2xvc2luZywgdGhlIHByb3NlY3V0aW9uIHNhaWQgdGhlIGV2aWRlbmNlIHNwZWFrcyBmb3IgaXRzZWxmLiBQcm9zZWN1dG9yIERhbmEgQ3VtbWluZ3Mgc2FpZCBMb3VkaW5nIGFkbWl0dGVkIG9uIGludGVycm9nYXRpb24gdGFwZSB0aGF0IEhhdGNoIGdhdmUgaGltICQyLDgwMCBpbiAkMjBzIGFmdGVyIHRoZSBtdXJkZXIuIFNoZSBzYWlkIENhcnZpcyAiRG9ua2V5IiBXZWJiIGFuZCBIYXRjaCB3b3JrZWQgb24gTG91ZGluZyB0byBnZXQgaGltIHRvIHRlbGwgdGhlICJ0cnV0aC4iIEFjY29yZGluZyB0byBDdW1taW5ncywgZHVyaW5nIHBob25lIGNhbGxzIHRvIExvdWRpbmcsIFdlYmIgdG9sZCBoaW0sICJGb2xsb3cgbXkgbGVhZCBhbmQgeW91IGNvbWluZyBob21lIE1hcmxvLiIKTGlrZSwgc3BvbnNvcnMgbWF5IGFzayBzb21lIHBlb3BsZSB0byBjdXQgb3V0IGNlcnRhaW4gYmVoYXZpb3VyLiBJIGhhdmUgbm90aWNlZCBpbiB0aGUgTG9MIHNjZW5lIGFuZCB0aGUgY2hlc3Mgc2NlbmUgdGhhdCBiYWQgbGFuZ3VhZ2UgaXMgZ2V0dGluZyBpcm9uZWQgb3V0IGFzIHRoZSBjb250ZW50IGNyZWF0b3JzIGFyZSB0cnlpbmcgdG8gYXBwZWFsIHRvIHRoZSB3aWRlc3QgYXVkaWVuY2UgcG9zc2libGUuLiAKQSBxdWljayBjYWxjdWxhdGlvbiBzYXlzIEkgaGF2ZSBhIDE2JSBjaGFuY2UgdG8gaGl0IG15IHN0cmFpZ2h0IGlmIEkgZ28gdG8gdGhlIHR1cm4sIGFuZCBhIDMyJSBjaGFuY2UgdG8gd2luIGlmIEkgZ28gdG8gdGhlIHJpdmVyLiAKKFBob3RvIGJ5IEV0aGFuIE1pbGxlci9HZXR0eSBJbWFnZXMpLiAKVGhlcmUgaXMgbm8gdGltZSB0byBsb3NlIGZvciB0aG9zZSBwZW9wbGUgdGhhdCB3YW50IHRvIGVhcm4gYmlnIGFuZCBoYXZlIGZ1biBpbiB0aGUgcHJvY2VzcyBiZWNhdXNlIHRoZSBQb2tlciBPbmxpbmUgd29ybGRzIGFsd2F5cyByZXZvbHZpbmcgYW5kIGl0IGNhbiBiZSBpbiBzb21lIG1vbWVudHMgdGhhdCB0aGV5IGphY2twb3QgaXMgZWFzeSB0byBoaXQgYW5kIGluIG90aGVyIHBhcnRzIG9mIHRoZSBkYXk6IG5lYXJseSBpbXBvc3NpYmxlLiBJdHMgaGFyZCB0byBwcmVkaWN0IHdoZW4gdGhlc2UgcGhhc2VzIGNvbWUgYW5kIGdvIHNvIGFzIGEgcnVsZSBvZiB0aHVtYiBvbmUgc2hvdWxkIGJlIGFsd2F5cyB0cnlpbmcuClRoZSBDaGluZXNlIGdvdmVybm1lbnQgaXMgc3RlcHBpbmcgdXAgcHJlc3N1cmUgb24gdGhlIEtvcmVhbiBzZW1pY29uZHVjdG9yIGluZHVzdHJ5LiBUaGlzIHRpbWUsIGl0IGhhcyBhY2N1c2VkIFNhbXN1bmcgYW5kIFNLIEh5bml4IG9mIHR5aW5nIE5BTkQgZmxhc2ggcHJvZHVjdHMuIApBIGNvdXBsZSB3ZSBjYWxsIEZyZWQgYW5kIEZlbGljaXR5LCBib3RoIDYwLCBsaXZlIGluIEJyaXRpc2ggQ29sdW1iaWEuIEZyZWQgcmV0aXJlZCBhIGZldyB5ZWFycyBhZ28gZnJvbSBhIGpvYiBpbiBwdWJsaXNoaW5nLiBGZWxpY2l0eSBkb2VzIHNlYXNvbmFsIGFkbWluaXN0cmF0aXZlIHdvcmsuIFNoZSBicmluZ3MgaG9tZSAkMywwMDAgcGVyIG1vbnRoIGZvciBuaW5lIG1vbnRocyBvZiB0aGUgeWVhciBhbmQgdGhlbiBkcmF3cyBFbXBsb3ltZW50IEluc3VyYW5jZSBhdCAkMSw5MDAgcGVyIG1vbnRoIGZvciB0aGUgb3RoZXIgdGhyZWUgbW9udGhzLgpFeGVjdXRpdmUgc2Vzc2lvbnMgYXJlIGNsb3NlZCB0byB0aGUgcHVibGljLi4gCkkgZmVsdCBhIHZhZ3VlIGNvbm5lY3Rpb24gdG8gdGhlIHNjZW5lIGZyb20gVGl0YW5pYyB3aGVyZSBSb3NlIGlzIHRyeWluZyB0byBjYWxsIGZvciBoZWxwIHdoZW4gdGhlIHJlc2N1ZSBib2F0cyBjYW1lIGFyb3VuZCBidXQgc2hlIHBoeXNpY2FsbHkgY291bGRuJ3QgeWVsbC4gSSBnb3QgdGhhdCBzYW1lIHBpdCBpbiBteSBzdG9tYWNoIGZvciB0aGUgc2NlbmUgd2l0aCBDYW1pbGxlIHdoZXJlIHlvdSBjYW4gcGh5c2ljYWxseSBmZWVsIGhvdyBoZWxwbGVzcyBhbmQgd2VhayBzaGUgd2FzIGluIHRoaXMgc2l0dWF0aW9uLiBJJ3ZlIGhhZCBkcmVhbXMgdG9vIHdoZXJlIHNvbWVvbmUgYmFkIGlzIGhhcHBlbmluZyB0byBtZSBidXQgSSdtIGp1c3QgdG9vIHRpcmVkIGFuZCB3ZWFrIHRvIGZpZ2h0IGJhY2sgYW5kIGl0J3MgYW4gYXdmdWwgZmVlbGluZy4KIldoZW4gdGhlcmUgYXJlIG91dGJyZWFrcywgY2VydGFpbiB0aGluZ3MgaGF2ZSBiZWVuIGltcGxpY2F0ZWQgb25seSB0byBmaW5kIG91dCB5ZWFycyBsYXRlciB0aGUgZXBpZGVtaW9sb2d5IGV2aWRlbmNlIHdhc24ndCBzb3VuZCBvciBzZWN1cmUsIiBoZSBzYWlkLiAKTmVydm91cyB3aXRuZXNzZXMgcmVzcG9uZCBncmF0ZWZ1bGx5IHRvIGhlciBtYXR0ZXIgb2YgZmFjdCBtYW5uZXIgYXMgc2hlIGd1aWRlcyB0aGVtIGNhbG1seSB0aHJvdWdoIHRoZWlyIGV2aWRlbmNlLiAKQWxmYXdvbGZlICAzIHBvaW50cyAgc3VibWl0dGVkIDcgbW9udGhzIGFnbwpUaGUgZ2FtZXMgd2lsbCBiZSBvcGVuIHRvIHRob3NlIG92ZXIgMjEuLiAKSWYgeW91IHdpbiB0aGUgaGFuZCB5b3UganVzdCBtYWRlIHlvdXIgY2hpcHN0YWNrIGdyb3cgbXVjaCBiZXR0ZXIgdGhhbiB3aW5uaW5nIHNtYWxsIHBvdHMgaGVyZSBhbmQgdGhlcmUuIApCdXQgYXMgeW91IHNhaWQgeW91cnNlbGYsIHlvdSBsZWFybmVkIEpTIGl0c2VsZiBhbmQgcmVmaW5lZCB5b3Vyc2VsZi4gSXNuIHRoYXQgYSB2ZXJ5IHBvc2l0aXZlIG91dGNvbWU/IChPciBkaWQgSSBtaXN1bmRlcnN0YW5kIHRoZSBjb250ZXh0PykKU28geW91IG1vc3QgZGVmaW5pdGUgaGF2ZSBhIHBvaW50IHRoYXQgcGVvcGxlIG9uIHRoZSBpbnRlcm5ldCBkb24gY2FyZSBmb3IuIFRoZSBJQ0UgYWZmYWlyIGlzIHNoaXR0eSBhbmQgSSBkb24gd2lzaCB0aGVpciBicyBhbnRpY3Mgb24gYW55b25lLCBidXQgdGhlcmUgYXJlIHZhbGlkIHF1ZXN0aW9ucyB0byBiZSBhc2tlZCBhYm91dCB0aGUgc3RyZWV0cyBoZSByb2FtZWQuIApJdCBwb3NzaWJsZSB0aGF0IHRoZSByaWdodCBjb3Vyc2Ugb2YgYWN0aW9uIGlzIHRvIGdvIEkgY2FuIHNlZSB5b3UgaGF2aW5nIHNvbWUgc29ydCBvZiBmcmVha291dCBoZXJlLiAKVGhlIHBvbGljZSBhc2tlZCBzb21lIHBlb3BsZSB3aGF0IHdhcyBnb2luZyBvbiwgYW5kIHRoZW4gdG9sZCBtZSB0aGF0IEkgYW0gYWxsb3dlZCB0byBzcGVhayB3aGF0ZXZlciBsYW5ndWFnZSBJIHdhbnQsIGJ1dCBpZiBJIGNhdXNlIGEgZGlzdHVyYmFuY2UsIEkgd2lsbCBiZSBhcnJlc3RlZCBmb3IgZGlzb3JkZXJseSBjb25kdWN0LiBUaGV5IHRvb2sgbXkgSUQgYW5kIEkgdGhpbmsgY29waWVkIGRvd24gbXkgaW5mb3JtYXRpb24sIGJ1dCB0aGV5IGRpZG4gZG8gdGhhdCBmb3IgYW55b25lIGVsc2UuIFRoZW4gdGhleSBsZWZ0Li4gCllvdSBncmlldmUgd2hhdCB5b3UgaGFkLiBZb3UgZ3JpZXZlIGZvciB3aGF0IHlvdSB3aXNoZWQgZm9yLiAKVGhlcmUgaXMgYSBuZXVyYWwgcmVmbGV4IHRoZW9yeSB3aGVyZWJ5IHRhdXQgYmFuZHMgYW5kIE1GVFBzIGFyZSB2aWV3ZWQgYXMgc29tYXRvIHNvbWF0aWMgcmVmbGV4ZXMuIEZvciBleGFtcGxlLCBwcmltYXJ5IGpvaW50IGR5c2Z1bmN0aW9uIG9mIEMyIEMzIG1heSBjYXVzZSBzZWNvbmRhcnkgcmVmbGV4IG11c2NsZSBkeXNmdW5jdGlvbiBpbiB0aGUgY2VydmljYWwgcGFyYXNwaW5hbHMgaW5uZXJ2YXRlZCBhdCB0aGF0IGxldmVsLjYKSSBhbSBzbyBncmF0ZWZ1bCBJIGdvdCB0aGF0IGV4cGVyaWVuY2UhLiAKQSBDb250cm92ZXJzaWFsIEZlbWFsZSBMaWJpZG8gRW5oYW5jZXIgSXMgUmVib3JuCkJCQyBqb3VybmFsaXN0IHNwZWVjaGxlc3MgYWZ0ZXIgc2VlaW5nIGJpZ2dlc3QgbW9zcXVlIGluIHRoZSB3b3JsZCBpbiBUdXJrZXkKV2hhdCBPblRoaW5ncyB0byBkb0Zvb2QgYW5kIERyaW5rVGhlYXRyZSBhbmQgQXJ0c1RWIEd1aWRlRGlnaXRhbCBQcmludCBFZGl0aW9uVGhlIG9sZCBoYWNrcyB3aG8gd29ya2VkIGZvcnRoZSBCbHVlIE1vdW50YWlucyBFY2hvZGVjYWRlcyBhZ293b3VsZCB1bmRvdWJ0ZWRseXJlbGlzaHRoZSB0aG91Z2h0IG9mIGEgYnJld2VyeSBpbiB0aGVpciBvbGQgd29ya3BsYWNlLiBBbmRpZiBhbGwgZ29lcyB0byBwbGFuIGZvciBESiBhbmQgSGFycmlldCBNY0NyZWFkeSwgdGhhdCBpcyBleGFjdGx5IHdoYXQgd2lsbCBiZWNvbWUgb2YgdGhlIHBhcGVyJ3MgZm9ybWVycHJlbWlzZXNpbkthdG9vbWJhLiBUaGUgY291cGxlIGhhdmUgYXBwbGllZCB0byBpbnN0YWxsIGEgY3JhZnQgYnJld3B1YiBpbiB0aGUgUGFya2UgU3RidWlsZGluZyBuZXh0IHRvIHRoZSBmaXJlIHN0YXRpb24uIApMZXlvbmhqZWxtIHdhbnRzIE5TVyB0byBsZWdhbGlzZSB2YXBpbmcsIHRoZSB0ZWFtIHNob290aW5nIHNwb3J0IG9mIEFpcnNvZnQsIGFuZCBwaWxsIHRlc3RpbmcuIEhlIHNheXMgdGhlIHByZW1pZXIgaXMgcHV0dGluZyB2b3RlcyBiZWZvcmUgeW91bmcgbGl2ZXMgYnkgbm90IGludHJvZHVjaW5nIGRydWcgdGVzdGluZyBhdCBmZXN0aXZhbHMuIEhlIHdvdWxkIGFsc28ganVtcCBhdCB0aGUgb3Bwb3J0dW5pdHkgdG8gd2luZCBiYWNrIHRoZSBzdGF0ZSBndW4gbGF3cyAgIGJ1dCBkb2VzbiBiZWxpZXZlIHRoZXJlIGVub3VnaCBhcHBldGl0ZSBmb3IgY2hhbmdlIGluIEF1c3RyYWxpYSBhdCB0aGUgbW9tZW50LiAKSW4gdGhlIGJsb2cgSSBsaXN0ZWQgVU0gcmlza3MgdG8gY2hpbGRyZW4sIHdoaWNoIGluY2x1ZGVkIGN1bHQgbGVhZGVyLCBTZXJnZSBCZW5oYXlvbiBpbmFwcHJvcHJpYXRlIGJlaGF2aW91ciB3aXRoIGNoaWxkcmVuLCBoaXMgaGF6YXJkb3VzIGVzb3RlcmljIGRpZXQsIGhpcyBwZXJ2ZXJzZSBwcm9tb3Rpb24gb2YgY2lyY3VtY2lzaW9uIHRvIGNvbnRyb2wgbWFsZSBzZXh1YWwgdXJnZXMsIGhpcyBhZHZvY2F0aW5nIG9mIGNvcnBvcmFsIHB1bmlzaG1lbnQsIGhpcyBkaXNlYXNlZCBhdHRpdHVkZXMgdG8gdGhlIGZlbWFsZSBib2R5IGFuZCBzZXgsIGhpcyBtaXNvZ3luaXN0IGNvbmRlbW5hdGlvbiBvZiB3b21lbiBwdXJzdWl0IG9mIGVxdWFsIHJpZ2h0cyBhbmQgcGFydGljaXBhdGlvbiBpbiBzcG9ydCwgaGlzIHF1ZXN0aW9uYWJsZSBoYW5kcyBvbiBoZWFsaW5nIHByYWN0aWNlcywgYW5kIGhpcyBvZmZlbnNpdmUsIGFudGkgc29jaWFsLCBhbnRpIGVkdWNhdGlvbiBhbmQgYW50aSBmYW1pbHkgVW5pZmllZCBUcnV0aCB0ZWFjaGluZ3MuLiAKVGhlIGNvdXBsZSBkaXZvcmNlZCB3aGVuIEdhdmluIHdhcyBzdGlsbCBhIGJveS4gCkluIGNvbmNsdXNpb24gdGhlIFR1cmtzIGFyZSB0cnlpbmcgdG8gc3RlYWwgdGhlIEt1cmRzIGhpc3Rvcnkgd2hpY2ggaW5jbHVkZXMgVGhlIEt1cmRpc2ggS2FuZ2FsIERvZy4gCkRhdmlkIEZvc3RlciBXYWxsYWNlClBva2VycyBpbiB3YXJtIHNoYWRlcyBhZGQgYSB0cm9waWNhbCB0b3VjaCB0byBsYXRlIGJvcmRlcnM6IHRoZSByZWQgb3JhbmdlICdJbmNhbmRlc2NlJyAoM2Z0KSBwZWFrcyBpbiBKdWx5IGFuZCBBdWd1c3QganVzdCBhIGxpdHRsZSBsYXRlciB0aGFuICdGaWVyeSBGcmVkJyAoMmZ0KS4gSW50cm9kdWNlZCBieSBCbG9vbXMgb2YgQnJlc3NpbmdoYW0sIHRoZSB0YW5nZXJpbmUgb3JhbmdlIGZsb3dlcnMgb3BlbiBmcm9tIGdyZWVuIHRpbmdlZCBidWRzIGluIEp1bHkuIFJlZCBob3QgcG9rZXJzIG9mZmVyIGdyZWF0IGNob2ljZSBhbmQgc2NvcGUsIGJ1dCBwZXJoYXBzIHRoZWlyIGdyZWF0ZXN0IGFzc2V0IGlzIHRoZWlyIHZlcnRpY2FsIHByZXNlbmNlLiAKSXQgd2FzIGEgc2hvY2sgb24gYXJyaXZpbmcgYXQgdGhlTmV3IFlvcmsgVGltZXNpbiAyMDA0LCBhcyB0aGUgcGFwZXIncyBtb3ZpZSBlZGl0b3IsIHRvIHJlYWxpemUgdGhhdCBpdHMgZWRpdG9yaWFsIGR5bmFtaWMgd2FzIGVzc2VudGlhbGx5IHRoZSByZXZlcnNlLiAKSWYgbm8gb25lIHVzZXMgYSBTb29mYSBhZ2FpbiwgdGhleSdsbCBzdGlsbCBoYXZlIHNlcnZlZCBhbiBpbXBvcnRhbnQgcHVycG9zZS4gClRoYXQga2lkIG1hZGUgYSBzYWxlIGJ5IHJlYWRpbmcgbXkgbWluZC4gCkkgdGhpbmsgeW91IGxvb2sgY3V0ZSwgSSBsaWtlIHRoZSBoYWlyeW5lc3MgOykgQWxzbyBJIHRoaW5rIHlvdSBsb29rIHZlcnkgZ29vZCBmb3IgeW91ciB3ZWlnaHQsIEkgZG9uIGtub3cgaWYgeW91IHRhbGwgYnV0IGl0IGxvb2tzIGxpa2UgaXQgZGlzdHJpYnV0ZWQgbmljZWx5LiBOb3QgYSBwbGFjZSB0byBnaXZlIGV4ZXJjaXNlIGFkdmljZSBvciBnYXdrIGF0L3JhdGUgcGVvcGxlICAgdGhpcyBpcyBub3Qgci9hbWl1Z2x5ICAsIGJ1dCBhIHBsYWNlIHRvIHBvc3QgYW5kIGxvb2sgYXQgbm9ybWFsIG51ZGUgYm9kaWVzLCB0byBnZXQgY29uZmlybWF0aW9uIHRoYXQgeWVzLCB5b3UgYXJlIG5vcm1hbC4KV2FzIHBlcm1hbmVudCBhcyB0aGUgUmVzZWFyY2hlciB0aGVtc2VsdmVzIGhhZCBlbWFpbGVkIHRoZSBtb2RlcmF0b3JzIGFuZCBzcGVjaWZpY2FsbHkgYXNrZWQgdG8gYmUga2VwdCBvbiBwcmUgbW9kIGFzIHRoZXkgd291bGQgbm90IGFncmVlIHRvIGNvbXBseSB3aXRoIHRoZSBIUnMuIApBcyBhbHdheXMsIHdoZW4gc2hlIHN0YXJ0ZWQgaW4gb24gdGhlIHdhaXRlciBJIGtlcHQgdHJ5aW5nIHRvIGNhbG0gaGVyIGRvd24uIApJIHdvdWxkIG5vdCBhZHZpY2UgeW91IHRvIHBsYXkgYSBjb25kaSBob2xvIGFzIGl0IGlzIG9uZSBvZiB0aGUgbW9yZSBkaWZmaWN1bHQgYnVpbGRzIHRvIGxlYXJuIHRvIGFjdHVhbGx5IHBsYXkgZ29vZChhbmQgSSBhbSBhbiBlbmdpIG1haW4pLiBNeSBhZHZpY2UgaWYgeW91ciBuZXcgdG8gcmFpZHMsIGp1c3QgbWFrZSBzdXJlIHlvdXIgZ29vZCBhdCBwb3dlciBob2xvLCBhbmQgd2hlbiB5b3UgZ290IGVub3VnaCBhc2NlbmRlZCBnZWFyIHRvIGdlYXIgYW5vdGhlciBjaGFyYWN0ZXIsIGp1c3QgcGxheSBhIGNvbmRpIHNob3J0IGJvdy9zaG9ydCBib3cgc291bCBiZWFzdC4gQXQgbGVhc3QgeW91IGNhbiB0cmFuc2ZlciBhbGwgdGhlIGdlYXIgZXhjZXB0IHRoZSB3ZWFwb25zIHRvIHlvdXIgZW5naShvciBteSBzdWdnZXN0aW9uOiBtYWtlIGEgMm5kIGVuZ2kpIHdoZW4geW91IGZlZWwgZGVjZW50IGluIHJhaWRzLi4gCk15IGZhdGhlciBoYWQgZW5kIHN0YWdlcyBQYXJraW5zb24ncyBkaXNlYXNlLiBEZWF0aCB3aXRoIGRpZ25pdHkvYXNzaXN0ZWQgc3VpY2lkZSB3YXMgdGhlIGh1bWFuZSBvcHRpb24gaW4gaGlzIGNhc2UuIFRvIGZvcmNlIGhpbSB0byBlbmR1cmUgYSAibmF0dXJhbCIgZGVhdGggd291bGQgaGF2ZSBiZWVuIGNydWVsLgpBbnl3YXlzLCBqdXN0IGdvdCBhbiBlbWFpbCBzYXlpbmcgdGhhdCBteSAibmV3IHN1YnNjcmlwdGlvbiIgd2lsbCBzdGFydCA5LzEwLiBIb3BlZnVsbHkgdGhpbmdzIGdvIHVwaGlsbCBmb3IgbW92aWUgcGFzcyBmcm9tIGhlcmUgYW5kIHRoZXkgZmluZCBhIHdheSB0byBzdXJ2aXZlLgpCZSBjYXJlZnVsIHdpdGggeW91ciB1c2Ugb2YgaW1wbGllZCBvZGRzIGluIGNsb3NlIHNpdHVhdGlvbnMuIApUZWNobmljYWxseSwgSSdtIG5vdCBzdXJlIHlvdSBsYW5kbG9yZCBjYW4ganVzdCByZWZ1c2UgdG8gYnJpbmcgYW4gYWxyZWFkeSB0ZW5hbnRlZCBwcm9wZXJ0eSB1cCB0byBjb2RlLiBZb3UgbWlnaHQgYXNrIGF0IHRoZSBsZWdhbCBhc3Npc3RhbmNlIG9mZmljZSBhdCB5b3VyIHVuaXZlcnNpdHkgZm9yIGFkdmljZSBvbiB0aGlzIGNhc2UuIEkgdGhpbmsgaGUgY2FuJ3Qga2ljayB5b3Ugb3V0IG92ZXIgdGhpcy4gSGUgaGFzIGFscmVhZHkgYmVlbiBlbmpveWluZyByZW50YWwgaW5jb21lIGZyb20geW91ciB0ZW5hbmN5LCBJIGRvbid0IHRoaW5rIGhlIGNhbiBqdXN0IHJlZnVzZSB0byBtYWludGFpbiB0aGUgYXBhcnRtZW50IGFuZCBraWNrIHlvdSBvdXQuClRvIERpb2Nlc2FuIHBvbGljeSwgTXIuIApBbHNvLCBpcyB0aGVyZSBhIHJlYXNvbiB3aHkgaGlzIGdyYW5kZmF0aGVyIGNhbiBjb21lIHRvIHlvdT8KQSBjdXJyZW50IGxhdyB1bmRlciBjb25zaWRlcmF0aW9uIHdvdWxkIG1ha2UgbWVtYmVyc2hpcCBpbiB0aGUgZ3JvdXAgaWxsZWdhbC4gcGFzc2VkLCB0aGUgbGF3IHdpbGwgbWFrZSBtZW1iZXJzaGlwIGluIElzbGFtIDQgVUsgb3IgQWwgTXVoYWppcm91biBhIGNyaW1pbmFsIG9mZmVuc2UgcHVuaXNoYWJsZSBieSB1cCB0byAxMCB5ZWFycyBpbiBwcmlzb24uClRoZSBsYXN0IHR3byBzZWFzb25zIGl0J3MgYmVlbiBmdW4gdG8gd2F0Y2ggdGhlIG1hbGUgdHVya2V5IG1haW50YWluIGhpcyBuZXN0IGFuZCB0aGUgZmVtYWxlcyB2aXNpdCB0byBpbnNwZWN0IHRoZSBuZXN0IGFuZCBpZiBpdCBtZWV0cyB0aGVpciBhcHByb3ZhbCwgdGhleSBsYXkgdGhlaXIgZWdnLiBVcCB0byBhYm91dCAzMCBpbiB0b3RhbC4gVGhlIG1hbGUgd2lsbCBkaWcgaW50byB0aGUgbmVzdCBldmVyeSBkYXkgdG8gY2hlY2sgdGhlIHRlbXBlcmF0dXJlIGluc2lkZSB0aGUgbW91bmQuIApBbmQgaG93IG11Y2ggd2FzIGhlIHdpbm5pbmc/IE92ZXIgdGhlIHllYXJzPyBNaWxsaW9ucy4gSG93IGRpZCBoZSBoYW5kbGUgYSBsb3NzPyBOb3Qgd2VsbC4gUmVwb3J0ZXI6IElmIHNwaWRlcm1hbiB3YXMgYSBwb2tlciBzaGFyaywgTW9sbHkgc2F5cyAiVGhlIHdvbGYgb2YgV2FsbCBTdHJlZXQiIHdhcyBsZXNzIHByZWRhdG9yLCBtb3JlIGJhaXQsIG9mdGVuIHBsYXlpbmcgd2l0aCBjaGlwcyBib3VnaHQgYnkgVG9iZXkuIApPYnZpb3VzbHkgdGhlIGJ1Y2tzIGhhdmUgYmVlbiBncmVhdCB0aGlzIHNlYXNvbiwgYnV0IGNhbiB0aGV5IGJlIHVuc3RvcHBhYmxlIGFnYWluc3QgYW5vdGhlciBncmVhdCB0ZWFtIGluIGEgc2VyaWVzPyBUaGlzIGlzIHdoeSBoYXZpbmcgc3VwZXJzdGFycyBpcyBzbyBpbXBvcnRhbnQuIEJ5IHRoZSAzcmQgZ2FtZSBpbiBhIHNlcmllcyB5b3UgcHJldHR5IG11Y2ggZmlndXJlZCBvdXQgZXZlcnl0aGluZyB5b3UgY2FuIGZpZ3VyZSBvdXQgYWJvdXQgd2hhdCB0aGUgb3RoZXIgdGVhbSBpcyBnb2luZyB0byB0cnkgdG8gZG8gb24gYm90aCBzaWRlcyBvZiB0aGUgYmFsbC4gCkFzIGEgbmV3IHllYXIgY3JhY2tzIG9wZW4gd2l0aCBjb25zaWRlcmFibGUgdHVtdWx0IGJvdGggaW4gdGhlIG1hcmtldHMgYW5kIG9uIHRoZSBmbG9vciBvZiBDRVMgdGhlcmUncyBvbmUgdGhpbmcgeW91IGNhbiBjb3VudCBvbjogQWQgQWdlIHN0YWZmZXJzIHBvb2xpbmcgdGhlaXIgY29sbGVjdGl2ZSBrbm93IGhvdyB0byB0YWtlIGEgd2hhY2sgYXQgcHJlZGljdGluZyB3aGF0IGxpZXMgYWhlYWQgaW4gdGhlIHdvcmxkcyBvZiBtZWRpYSwgdGVjaCwgcmV0YWlsLCBzb2NpYWwgcGxhdGZvcm1zIGFuZCBtb3JlLiBBbmQgdG8gZmluZCBvdXQgaG93IHdlIGRpZCB3aXRoIG91ciAyMDE4IHByZWRpY3Rpb25zLCAoU3BvaWxlciBhbGVydDogV2UgZG9uZSBnb29kLikKVGhlIHdpemFyZCB0cmllZCB0byBjb3VuY2lsIGNhbGViIHRoYXQgdGhhdCByZWNrbGVzc25lc3MgaXMgc29tZXRpbWVzIG5lY2Vzc2FyeSBmb3IgcG93ZXIsIGJ1dCB0aGF0IGRvZXNuIGNoYW5nZSB0aGF0IGl0IHdhcyBhIGJpZyB0aGluZy4KQSBzb2NpYWwgbWVkaWEgcG9zdCBvbiBFbGluYSBvdXRzaWRlIHRoZSBwb3Qgc3RvcmUgd2VudCB2aXJhbCBhbmQgTW9uYWhhbiBzYWlkIHRoZXkgc3RhcnRlZCBnZXR0aW5nIHF1ZXN0aW9ucyBhYm91dCB3aGV0aGVyIGl0IHdhcyBhbGxvd2VkLgpXaGVuIHlvdSBoYXZlIGJlZW4gd2lubmluZyBjb25zaXN0ZW50bHkgYXQgYSBjZXJ0YWluIGxldmVsIGl0J3MgT0sgdG8gcHJvZ3Jlc3MgYnV0IGRvbid0IGJlIGFmcmFpZCBvZiBtb3ZpbmcgYmFjayBkb3duIGlmIGl0IGRvZXNuJ3Qgd29yayBvdXQuIApJIGNvdWxkbiByZWFsbHkgc2VlIGEgaGFuZCB0aGF0IGNvdWxkIG9wZW4gVVRHLCBjaGVjayB0dXJuLCBjYWxsIG15IHZhbHVlIGJldCBhbmQgYmVhdCBtZS4gCkFueXdheSwgbG9uZyB3YXkgZnJvbSB3aGVyZSBJIHN0YXJ0ZWQuIEp1c3QgYmUgYXMgcGF0aWVudCBhbmQgdW5kZXJzdGFuZGluZyB3aXRoIHBlb3BsZSBhcyB5b3UgY2FuLiBTb21lIHBlb3BsZSBicmFpbnMgZG9uIHdvcmsgYW5kIGl0IG5vdCB0aGVpciBmYXVsdC4gQXMgZnJ1c3RyYXRpbmcgYXMgbXkgc2lzdGVyIGNhbiBiZSBzaGUgbWFrZXMgbWUgdGhhbmtmdWwgZm9yIG15IGJyYWluLgo=|<---