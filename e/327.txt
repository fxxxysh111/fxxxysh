<!DOCTYPE html>
<html dir="ltr" lang="en" prefix="content: http://purl.org/rss/1.0/modules/content/  dc: http://purl.org/dc/terms/  foaf: http://xmlns.com/foaf/0.1/  og: http://ogp.me/ns#  rdfs: http://www.w3.org/2000/01/rdf-schema#  schema: http://schema.org/  sioc: http://rdfs.org/sioc/ns#  sioct: http://rdfs.org/sioc/types#  skos: http://www.w3.org/2004/02/skos/core#  xsd: http://www.w3.org/2001/XMLSchema# " xmlns:article="http://ogp.me/ns/article#" xmlns:book="http://ogp.me/ns/book#" xmlns:product="http://ogp.me/ns/product#" xmlns:profile="http://ogp.me/ns/profile#" xmlns:video="http://ogp.me/ns/video#">
 <head>
  <meta charset="utf-8"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="title"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:site_name"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:url"/>
  <meta content="Fate Grand Order Database, News, and Community for the Fate Grand Order Player!" name="abstract"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:title"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" property="og:description"/>
  <meta content="https://grandorder.gamepress.gg/sites/grandorder/files/2018-12/Babylonia-Boss-Guides_1.png" property="og:image"/>
  <meta content="Drupal 8 (https://www.drupal.org)" name="Generator"/>
  <meta content="width" name="MobileOptimized"/>
  <meta content="true" name="HandheldFriendly"/>
  <meta content="width=device-width, initial-scale=1.0" name="viewport"/>
  <title>
   [area1][mkey1][keyword1][symbolx][area1][keywordx][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
 </head>
 <body class="two-sidebars site-gamepress path-node node--type-page">
  <div id="top-page">
  </div>
  <div class="dialog-off-canvas-main-canvas" data-off-canvas-main-canvas="">
   <div class="gamepress-top">
    <div class="outer-wrapper">
     <div class="block block-block-content block-block-contentfb6a66fd-9fd1-413a-88b9-7fbc7191b5d3" id="block-topgames">
      <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
       <div class="gamepress-logo">
        [link]
        
        <div class="gamesdb">
         <i aria-hidden="true" class="fa fa-sort-desc">
         </i>
         <div class="gamesdb-list">
          <i aria-hidden="true" class="fa fa-caret-up">
          </i>
          <ul>
           <li>
            <a href="/?from=fgotop">
             Pokemon GO
            </a>
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/?from=fgotop">
             Fate Grand Order
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            [ahref]
            
           </li>
           <li>
            [link]
            
           </li>
          </ul>
         </div>
        </div>
       </div>
       <div class=" top-right">
        <ul>
         <li class="discord-link-top">
          [link]
          
         </li>
         <li class="top-dot">
          <i aria-hidden="true" class="fa fa-circle">
          </i>
         </li>
         <li class="patreon-link-top premium-user-class">
          [link]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
   </div>
   <div class="page" role="document">
    <div class="gamepress-branding">
     <div class="outer-wrapper">
      <div class="portal-section">
       <div class="not-loggedin">
        <ul>
         <li class="first-portal-item">
          [ahref]
          
         </li>
         <li>
          [link]
          
         </li>
        </ul>
       </div>
      </div>
     </div>
    </div>
    <header id="site-header">
     <div class="outer-wrapper">
      <div class="block block-system block-system-branding-block" id="block-gamepressbase-branding">
       [link]
       
       <div class="site-name">
        [ahref]
        
       </div>
      </div>
      <div class="block block-block-content block-block-content65670c98-c72d-41fd-a2c1-8eafcda47d6f" id="block-topsearch">
       <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
        <form action="/search">
        </form>
       </div>
      </div>
      <nav aria-labelledby="block-topmenu-menu" class="block block-menu navigation menu--top-menu" id="block-topmenu" role="navigation">
       <h2 class="visually-hidden" id="block-topmenu-menu">
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <ul class="main-menu-content">
        <li "="" class="menu-item Servants">
         [link]
         
        </li>
        <li "="" class="menu-item Tier List">
         [link]
         
        </li>
        <li "="" class="menu-item Planner">
         [ahref]
         
        </li>
        <li "="" class="menu-item Simulator">
         <a href="/summon-simulator">
          Simulator
         </a>
        </li>
        <li "="" class="menu-item News">
         [link]
         
        </li>
        <li "="" class="menu-item Q&amp;A">
         [ahref]
         
        </li>
       </ul>
      </nav>
     </div>
    </header>
    <main class="outer-wrapper" role="main">
     <aside class="sidebar" id="sidebar-first" role="complementary">
      <nav aria-labelledby="block-mainnavigation-menu" class="block block-menu navigation menu--main" id="block-mainnavigation" role="navigation">
       <h2 id="block-mainnavigation-menu">
        <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
       </h2>
       <ul class="main-menu-content">
        <li "="" class="menu-item Featured menu-item--expanded">
         <span>
          Featured[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[search]<li>[link]</li><li>[ahref]</li>[search][link]
         </span>
         <ul class="menu">
          <li "="" class="menu-item Guides Database">
           [link]
           
          </li>
          <li "="" class="menu-item Event Guides">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li "="" class="menu-item Rankings menu-item--expanded">
         <span>
          Rankings
         </span>
         <ul class="menu">
          <li "="" class="menu-item 5 Star Tier List">
           <a data-drupal-link-system-path="node/45026" href="/5-star-tier-list" title="5 Star Tier List">
            5 Star Tier List
           </a>
          </li>
          <li "="" class="menu-item 4 Star Tier List">
           [link]
           
          </li>
          <li "="" class="menu-item 1~3 Star Tier List">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li "="" class="menu-item Servants menu-item--expanded">
         <span>
          Servants<li>[search]</li><li>[link]</li>[search]<li>[link]</li>[ahref][link]
         </span>
         <ul class="menu">
          <li "="" class="menu-item All Servants">
           [ahref]
           
          </li>
          <li "="" class="menu-item Servant Stats">
           [ahref]
           
          </li>
          <li "="" class="menu-item Ascension Materials">
           [link]
           
          </li>
          <li "="" class="menu-item Craft Essences">
           [ahref]
           
          </li>
          <li "="" class="menu-item Mystic Codes">
           <a data-drupal-link-system-path="node/30876" href="/mystic-code" title="Mystic Codes List">
            Mystic Codes
           </a>
          </li>
         </ul>
        </li>
        <li "="" class="menu-item Tools menu-item--expanded">
         <span>
          Tools[ahref][ahref][link]<li>[link]</li>[link][ahref][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]
         </span>
         <ul class="menu">
          <li "="" class="menu-item EXP Calculator">
           [ahref]
           
          </li>
          <li "="" class="menu-item FP Summon Simulator">
           [ahref]
           
          </li>
          <li "="" class="menu-item Quartz Summon Simulator">
           [ahref]
           
          </li>
          <li "="" class="menu-item Servant Planner">
           [link]
           
          </li>
          <li "="" class="menu-item Strongest NP">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li "="" class="menu-item Database menu-item--expanded">
         <span>
          Database[ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[ahref]</li>[ahref]<li>[link]</li><li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li>[ahref][link][ahref][search]<li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>
         </span>
         <ul class="menu">
          <li "="" class="menu-item Manga menu-item--expanded">
           <span>
            Manga<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[link][ahref][ahref]<li>[search]</li><li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[link]</li><li>[ahref]</li><li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[link]</li><li>[link]</li>[link]<li>[link]</li><li>[search]</li><li>[ahref]</li><li>[search]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref][ahref]
           </span>
           <ul class="menu">
            <li "="" class="menu-item Even More Learning with Manga!">
             [link]
             
            </li>
            <li "="" class="menu-item Fate/GUDAGUDA Order">
             [ahref]
             
            </li>
            <li "="" class="menu-item Learning with Manga!">
             [ahref]
             
            </li>
            <li "="" class="menu-item More Learning with Manga!">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li "="" class="menu-item Other menu-item--expanded">
           <span>
            Other
           </span>
           <ul class="menu">
            <li "="" class="menu-item Enemies">
             <a data-drupal-link-system-path="node/1611" href="/enemies" title="Enemies">
              Enemies
             </a>
            </li>
            <li "="" class="menu-item Mystic Code">
             [link]
             
            </li>
            <li "="" class="menu-item Experience Table">
             [link]
             
            </li>
           </ul>
          </li>
          <li "="" class="menu-item Quests menu-item--expanded">
           <span>
            Quests<li>[search]</li><li>[search]</li>[link]<li>[link]</li><li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link][search]
           </span>
           <ul class="menu">
            <li "="" class="menu-item Daily Quests">
             <a data-drupal-link-system-path="node/4876" href="/daily-quests" title="Daily Quests">
              Daily Quests
             </a>
            </li>
            <li "="" class="menu-item Event Quests">
             [ahref]
             
            </li>
            <li "="" class="menu-item Free Quests">
             [ahref]
             
            </li>
            <li "="" class="menu-item Interlude Quests">
             <a data-drupal-link-system-path="node/4891" href="/interlude-quests" title="Interlude Quests">
              Interlude Quests
             </a>
            </li>
            <li "="" class="menu-item Main Quests">
             [link]
             
            </li>
           </ul>
          </li>
          <li "="" class="menu-item Skills menu-item--expanded">
           <span>
            Skills<li>[ahref]</li>[ahref][search]<li>[search]</li><li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li><li>[ahref]</li><li>[link]</li><li>[search]</li>
           </span>
           <ul class="menu">
            <li "="" class="menu-item Class Skills">
             [link]
             
            </li>
            <li "="" class="menu-item Servant Skills">
             [ahref]
             
            </li>
           </ul>
          </li>
         </ul>
        </li>
       </ul>
      </nav>
      <div class="block block-block-content block-block-contentf1aadc3d-0b07-417d-a530-462658bad371" id="block-gameguides">
       <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
        <div class="gameguides">
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <ul>
          <li class="sub-li-menu-games">
           Fully Supported
          </li>
          <li>
           <a href="/?from=fgo">
            Pokemon GO
           </a>
          </li>
          <li>
           <h3>
            [area4][keyword4][symbolx][area4][keywordx][symbolx][bracketl8][bracketr8][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
           </h3>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li class="sub-li-menu-games">
           Upcoming Sites
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li class="sub-li-menu-games">
           Minimally Supported
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li class="sub-li-menu-games">
           Currently Not Supported
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [ahref]
           
          </li>
         </ul>
        </div>
       </div>
      </div>
     </aside>
     <section id="content">
      <div id="content-inner">
       <div class="block block-block-content block-block-contentbbde19e5-7651-43d9-a230-1cb7fc8b238f" id="block-320x50-top">
        <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
         <center>
          <div id="div-ad-GrandOrder_Mobile_320x50_Top">
          </div>
         </center>
        </div>
       </div>
       <div class="block block-core block-page-title-block" id="block-gamepressbase-page-title">
        <h2>
         <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
        </h2>
        <div class="block block-block-content block-block-content5a96face-5773-4314-b8b1-51c7fe4e99cb" id="block-announcement">
         <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
          <a href="/babylonia-spoiler-free-walkthrough">
           <div id="an-header">
            New Content
           </div>
           <div id="an-sub-header">
            Babylonia: Spoiler-free Walkthrough
           </div>
          </a>
         </div>
        </div>
        <div id="page-title">
         <h1 class="page-title">
          <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
         </h1>
        </div>
        <div id="socail-media-links">
         [ahref]
         
         [ahref]
         
        </div>
       </div>
       <div class="block block-system block-system-main-block" id="block-gamepressbase-content">
        <article about="/babylonia-boss-guide-hub" class="" data-history-node-id="264046" id="node-264046" role="article" typeof="schema:WebPage">
         <div class="og-image">
         </div>
         <div class="field field--name-field-page-content field--type-entity-reference-revisions field--label-hidden field__items">
          <div class="field__item">
           <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
            <div class="featured-2-columns-desktop featured-2-columns-mobile">
             <div class="content-2-group-item ">
              [ahref]
              
              <a class="featured-content-title" href="/singularity-babylonia">
               <span class="field field--name-title field--type-string field--label-hidden" property="schema:name">
                <span>
                 Singularity: Babylonia
                </span>
               </span>
              </a>
             </div>
             <div class="content-2-group-item ">
              <a href="/babylonia-spoiler-free-walkthrough">
              </a>
              [link]
              
             </div>
             <div class="content-2-group-item ">
              [link]
              
              [link]
              
             </div>
             <div class="content-2-group-item ">
              [ahref]
              
              <a class="featured-content-title" href="/babylonia-free-quest-list">
               <span class="field field--name-title field--type-string field--label-hidden" property="schema:name">
                [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[ahref]</li>[ahref]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
               </span>
              </a>
             </div>
            </div>
           </div>
          </div>
          <div class="field__item">
           <center>
            <div class="mobile-ic-ad" style="display:none;">
             <div class="mobile-ic-ad-inner">
              <div id="div-ad-GrandOrder_Mobile_300x250_BTF_1">
              </div>
             </div>
            </div>
           </center>
          </div>
          <div class="field__item">
           <h2 class="main-title">
            <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
           </h2>
           <div class="topic-text">
            <div class="paragraph paragraph--type--text paragraph--view-mode--default">
             <div class="clearfix text-formatted field field--name-field-text field--type-text-long field--label-hidden field__item">
              <p>
               Several encounters in Babylonia have special conditions and can be particularly challenging if unprepared. You can find out more information on specific boss encounters by clicking the enemy's image below!<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
              </p>
              <p>
               (Last Update 12/09 - Final)
              </p>
             </div>
            </div>
            <div class="paragraph paragraph--type--text paragraph--view-mode--default">
             <div class="clearfix text-formatted field field--name-field-text field--type-text-long field--label-hidden field__item">
              <table>
               <tr>
                <td align="center" style="border: solid black 1.0pt; background: #D9D9D9;">
                 <span style="color: #262626; font-size=12pt;">
                  Chapter[search]<li>[search]</li>[search][link][search][ahref]<li>[search]</li><li>[link]</li><li>[ahref]</li>[ahref]<li>[search]</li><li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]
                 </span>
                </td>
                <td align="center" style="border: solid black 1.0pt; background: #D9D9D9;">
                 <span style="color: #262626; font-size=12pt;">
                  <strong>
                   Encounter
                  </strong>
                 </span>
                </td>
               </tr>
               <tr>
                <td align="center" style="border: solid black 1.0pt;">
                 Chapter 12, Part 4
                </td>
                <td align="center" style="border: solid black 1.0pt;">
                 [link]
                 
                </td>
               </tr>
               <tr>
                <td align="center" style="border: solid black 1.0pt;">
                 Chapter 18, Part 2
                </td>
                <td align="center" style="border: solid black 1.0pt;">
                 [ahref]
                 
                </td>
               </tr>
               <tr>
                <td align="center" style="border: solid black 1.0pt;">
                 Chapter 20, Part 5
                </td>
                <td align="center" style="border: solid black 1.0pt;">
                 [link]
                 
                </td>
               </tr>
              </table>
             </div>
            </div>
           </div>
          </div>
          <div class="field__item">
           <div class="paragraph paragraph--type--embedded-node paragraph--view-mode--default">
            <div class="field field--name-field-node-to-embed field--type-entity-reference field--label-hidden field__item">
             <article about="/node/263191" class="" data-history-node-id="263191" id="node-263191" role="article">
              <h2>
               <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
              </h2>
              <div class="posted">
              </div>
              <div class="field field--name-field-content-to-embed field--type-entity-reference-revisions field--label-hidden field__items">
               <div class="field__item">
                <span id="">
                </span>
                <h2 class="main-title">
                 [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
                </h2>
               </div>
               <div class="field__item">
                <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
                 <div class="featured-1-columns-desktop featured-1-columns-mobile">
                  <div class="content-2-group-item ">
                   [ahref]
                   
                   [link]
                   
                  </div>
                  [link]
                  
                 </div>
                </div>
               </div>
               <div class="field__item">
                <h2 class="main-title">
                 [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
                </h2>
                <div class="topic-text">
                 <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
                  <div class="featured-2-columns-desktop featured-2-columns-mobile">
                   <div class="content-2-group-item ">
                    [link]
                    
                    [link]
                    
                   </div>
                   <div class="content-2-group-item ">
                    [link]
                    
                    [link]
                    
                   </div>
                   <div class="content-2-group-item ">
                    [ahref]
                    
                    [link]
                    
                   </div>
                   <div class="content-2-group-item current-page">
                    [ahref]
                    
                    [ahref]
                    
                   </div>
                  </div>
                 </div>
                </div>
               </div>
               <div class="field__item">
                <h2 class="main-title">
                 [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
                </h2>
                <div class="topic-text">
                 <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
                  <div class="featured-2-columns-desktop featured-2-columns-mobile">
                   <div class="content-2-group-item ">
                    [link]
                    
                    [link]
                    
                   </div>
                   <div class="content-2-group-item ">
                    [ahref]
                    
                    [ahref]
                    
                   </div>
                  </div>
                 </div>
                </div>
               </div>
               <div class="field__item">
                <h2 class="main-title">
                 [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
                </h2>
                <div class="topic-text">
                 <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
                  <div class="featured-2-columns-desktop featured-2-columns-mobile">
                   <div class="content-2-group-item ">
                    [link]
                    
                    [ahref]
                    
                   </div>
                   <div class="content-2-group-item ">
                    <a href="/servant/quetzalcoatl">
                    </a>
                    [ahref]
                    
                   </div>
                   <div class="content-2-group-item ">
                    [link]
                    
                    [link]
                    
                   </div>
                   <div class="content-2-group-item ">
                    [ahref]
                    
                    [link]
                    
                   </div>
                   <div class="content-2-group-item ">
                    <a href="/servant/gorgon">
                    </a>
                    [ahref]
                    
                   </div>
                   <div class="content-2-group-item ">
                    [ahref]
                    
                    [link]
                    
                   </div>
                  </div>
                 </div>
                </div>
               </div>
              </div>
             </article>
            </div>
           </div>
          </div>
         </div>
        </article>
       </div>
       <div class="views-element-container block block-views block-views-blocklatest-featured-content-block-1" id="block-views-block-latest-featured-content-block-1">
        <div>
         <div class="field--name-field-featured-content-list view view-latest-featured-content view-id-latest_featured_content view-display-id-block_1 js-view-dom-id-3dd15de624900bd86be288dc342964a2021e4f4d3149490ccc6c1366bf7ea0a7">
          <div class="view-header">
           <h2 class="main-title">
            [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
           </h2>
          </div>
          <div class="view-content">
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              [ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li><li>[search]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              [ahref]
              
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              <li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              <br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li><li>[search]</li>[ahref]<li>[ahref]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[link]</li>[ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[link]<li>[search]</li><li>[ahref]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[search]</li>[ahref][link]
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              [search][search]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              <li>[link]</li><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[ahref][link][ahref]<li>[link]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[ahref]</li>[ahref]
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              <a href="/new-ui-updates-summary">
               <div class="field__item ">
                <div class="featured-content-list-main ">
                 <div class="featured-list-image">
                 </div>
                 <div class="featured-list-link">
                  New UI Updates: Summary
                 </div>
                </div>
               </div>
              </a>
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              [ahref]
              
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              <a href="/event-guide/christmas-2018-event-little-santa-alter">
               <div class="field__item ">
                <div class="featured-content-list-main ">
                 <div class="featured-list-image">
                 </div>
                 <div class="featured-list-link">
                  Christmas 2018 Event: The Little Santa Alter
                 </div>
                </div>
               </div>
              </a>
             </span>
            </div>
           </div>
           <div class="views-row">
            <div class="views-field views-field-view-node">
             <span class="field-content">
              [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<li>[ahref]</li>[search]
             </span>
            </div>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="block block-block-content block-block-contentc9d47536-db3f-46bf-97f8-f8ec563aff2a" id="block-quicklinks">
        <div class="field field--name-field-paragraph-content field--type-entity-reference-revisions field--label-hidden field__items">
         <div class="field__item">
          <div class="paragraph paragraph--type--text paragraph--view-mode--default">
           <div class="clearfix text-formatted field field--name-field-text field--type-text-long field--label-hidden field__item">
            <p style="margin: 20px 0px 10px 0px;">
            </p>
           </div>
          </div>
         </div>
         <div class="field__item">
          <span id="">
          </span>
          <h2 class="main-title">
           <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
          </h2>
         </div>
         <div class="field__item">
          <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
           <div class="featured-2-columns-desktop featured-2-columns-mobile">
            <div class="content-2-group-item ">
             <a href="/servants">
             </a>
             <a class="featured-content-title" href="/servants">
              <span class="field field--name-title field--type-string field--label-hidden" property="schema:name">
               <span>
                Servants
               </span>
              </span>
             </a>
            </div>
            <div class="content-2-group-item ">
             [link]
             
             [ahref]
             
            </div>
            <div class="content-2-group-item ">
             [link]
             
             [link]
             
            </div>
            <div class="content-2-group-item ">
             [link]
             
             [ahref]
             
            </div>
            <div class="content-2-group-item ">
             [link]
             
             [ahref]
             
            </div>
            <div class="content-2-group-item ">
             [ahref]
             
             [link]
             
            </div>
           </div>
          </div>
         </div>
         <div class="field__item">
          <span id="">
          </span>
          <h2 class="main-title">
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
         </div>
         <div class="field__item">
          <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
           <div class="featured-2-columns-desktop featured-2-columns-mobile">
            <div class="content-2-group-item ">
             <a href="/summon-simulator">
             </a>
             [ahref]
             
            </div>
            <div class="content-2-group-item ">
             [link]
             
             <a class="featured-content-title" href="/friend-points-summon-simulator">
              <span class="field field--name-title field--type-string field--label-hidden" property="schema:name">
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref][ahref]<li>[link]</li>[link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>
              </span>
             </a>
            </div>
            <div class="content-2-group-item ">
             [link]
             
             [ahref]
             
            </div>
            <div class="content-2-group-item ">
             <a href="/strongest-np-against-sabers">
             </a>
             <a class="featured-content-title" href="/strongest-np-against-sabers">
              <span class="field field--name-title field--type-string field--label-hidden" property="schema:name">
               [link][ahref]<li>[link]</li>[search]<li>[link]</li><li>[ahref]</li>[search]<li>[ahref]</li>[ahref]<li>[link]</li>
              </span>
             </a>
            </div>
           </div>
          </div>
         </div>
         <div class="field__item">
          <span id="">
          </span>
          <h2 class="main-title">
           [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
          </h2>
         </div>
         <div class="field__item">
          <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
           <div class="featured-3-columns-desktop featured-3-columns-mobile">
            <div class="content-2-group-item ">
             [link]
             
             [ahref]
             
            </div>
            <div class="content-2-group-item ">
             [ahref]
             
             [ahref]
             
            </div>
            <div class="content-2-group-item ">
             [link]
             
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
         <div class="field__item">
          <div class="paragraph paragraph--type--featured-content paragraph--view-mode--default">
           <div class="featured-2-columns-desktop featured-2-columns-mobile">
            <div class="content-2-group-item ">
             [ahref]
             
             [link]
             
            </div>
            <div class="content-2-group-item ">
             [link]
             
             [ahref]
             
            </div>
           </div>
          </div>
         </div>
         <div class="field__item">
          <div class="paragraph paragraph--type--text paragraph--view-mode--default">
           <div class="clearfix text-formatted field field--name-field-text field--type-text-long field--label-hidden field__item">
           </div>
          </div>
         </div>
         <div class="field__item">
          <div class="paragraph paragraph--type--text paragraph--view-mode--default">
           <div class="clearfix text-formatted field field--name-field-text field--type-text-long field--label-hidden field__item">
            <center>
             <div "="" class="mobile-ic-ad" style="display:none; margin-bottom:10px;">
              <div class="mobile-ic-ad-inner">
               <div id="div-ad-GrandOrder_Mobile_300x250_Extra_4" style="margin-bottom: 25px;">
               </div>
              </div>
             </div>
            </center>
           </div>
          </div>
         </div>
        </div>
       </div>
       <div class="block block-block-content block-block-contentb33ff2d9-6436-4ead-afc4-16b7a2c39da7" id="block-footerad">
        <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
         <center>
          <div id="div-ad-GrandOrder_Mobile_320x50_Floating">
          </div>
         </center>
        </div>
       </div>
       <div class="block block-block-content block-block-contentf3876925-c579-4167-ab84-10198d380ea5" id="block-appmobilemenu">
        <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
         <div id="app-mobile-menu">
          [link]
          
          <a class="right-1" href="/5-star-tier-list">
           Tier List
          </a>
          <a class="right-2" href="/servants">
           Servants
          </a>
          [ahref]
          
         </div>
        </div>
       </div>
       <button class="submit-error-button" onclick="showForm()">
        <i aria-hidden="true" class="fa fa-exclamation">
        </i>
        Submit an Error/Missing Information About this Page
        <i aria-hidden="true" class="fa fa-exclamation">
        </i>
       </button>
       <div id="form-hidden" style="display:none;">
        <form accept-charset="UTF-8" action="/babylonia-boss-guide-hub" class="contact-message-feedback-form contact-message-form contact-form" data-drupal-selector="contact-message-feedback-form" data-user-info-from-browser="" id="contact-message-feedback-form" method="post">
         <div class="js-form-item form-item js-form-type-email form-type-email js-form-item-mail form-item-mail">
          <label class="js-form-required form-required" for="edit-mail">
           Your email address
          </label>
         </div>
         <div class="field--type-string-long field--name-message field--widget-string-textarea private_message_message_widget_default_wrapper js-form-wrapper form-wrapper" data-drupal-selector="edit-message-wrapper" id="edit-message-wrapper">
          <div class="js-form-item form-item js-form-type-textarea form-type-textarea js-form-item-message-0-value form-item-message-0-value">
           <label class="js-form-required form-required" for="edit-message-0-value">
            Message
           </label>
           <div class="form-textarea-wrapper">
           </div>
          </div>
         </div>
         <div class="field--type-language field--name-langcode field--widget-language-select js-form-wrapper form-wrapper" data-drupal-selector="edit-langcode-wrapper" id="edit-langcode-wrapper">
         </div>
         <div class="form-actions js-form-wrapper form-wrapper" data-drupal-selector="edit-actions" id="edit-actions">
         </div>
        </form>
       </div>
      </div>
     </section>
     <aside class="sidebar" id="sidebar-second" role="complementary">
      <div class="block block-block-content block-block-content612c2772-c69b-4692-8194-8adb15f5c99b" id="block-sidebarad1">
       <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
        <div id="div-ad-GrandOrder_Desktop_RR_300x250_A">
        </div>
       </div>
      </div>
      <div class="views-element-container block block-views block-views-blockpopular-pages-block-1" id="block-views-block-popular-pages-block-1">
       <h2>
        <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
       </h2>
       <div>
        <div class="view view-popular-pages view-id-popular_pages view-display-id-block_1 js-view-dom-id-1d5630a23bf612905bd1437fb3a8158747b5eb03beb90f04ca09c3690e4170fd">
         <div class="view-content">
          <div>
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/5-star-tier-list">
              <span class="pages-ranking-number ranking-number-2">
               2<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[search]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref]<li>[ahref]</li>
              </span>
              <span class="pages-ranking-image">
              </span>
              <span class="pages-ranking-title">
               5 Star Tier List[search]<li>[link]</li><li>[ahref]</li><li>[search]</li>[ahref]<li>[ahref]</li><li>[ahref]</li>[search]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[search]<li>[search]</li>[ahref][ahref]<li>[ahref]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[search]</li><li>[ahref]</li>
              </span>
             </a>
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/babylonia-boss-guide-hub">
              <span class="pages-ranking-number ranking-number-8">
               8<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li><li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][ahref][link]<li>[ahref]</li><li>[link]</li>
              </span>
              <span class="pages-ranking-image">
               [areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[ahref]<li>[search]</li>[ahref]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li><li>[link]</li><li>[ahref]</li><li>[link]</li>[link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[search]
              </span>
              <span class="pages-ranking-title">
               Babylonia: Boss Guide Hub<li>[ahref]</li><li>[link]</li>[search]<li>[search]</li>[ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li>[ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]<li>[link]</li><li>[ahref]</li><li>[ahref]</li><li>[search]</li>[search][link][link][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
              </span>
             </a>
            </li>
            <li>
             [link]
             
            </li>
            <li>
             <a href="/boss-quetzalcoatl-babylonia">
              <span class="pages-ranking-number ranking-number-10">
               10<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li><li>[search]</li>[ahref]<li>[link]</li>
              </span>
              <span class="pages-ranking-image">
              </span>
              <span class="pages-ranking-title">
               Boss: Quetzalcoatl (Babylonia)[ahref]<li>[ahref]</li>[search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]
              </span>
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="view-footer">
          [link]
          
         </div>
        </div>
       </div>
      </div>
      <div class="block block-block-content block-block-content9fa94b39-b5e7-47ec-a32d-cfed533b37e0" id="block-sidebarad2">
       <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
        <div id="div-ad-GrandOrder_Desktop_RR_300x250_B" style="margin-bottom:10px;">
        </div>
       </div>
      </div>
      <div class="views-element-container block block-views block-views-blockpopular-pages-block-3" id="block-views-block-popular-pages-block-3">
       <h2>
        <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
       </h2>
       <div>
        <div class="view view-popular-pages view-id-popular_pages view-display-id-block_3 js-view-dom-id-c89a0202f346712a18dd13d498598a7dd742b5822329514a7e206bbfb10087fd">
         <div class="view-content">
          <div>
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             <a href="/servant/ishtar">
              <span class="pages-ranking-number ranking-number-10">
               10<li>[search]</li>[ahref][search]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[search]</li>[link][search]<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link][link]<li>[link]</li><li>[link]</li><li>[ahref]</li>[link]
              </span>
              <span class="pages-ranking-image">
               [ahref]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li><li>[link]</li><li>[search]</li>
              </span>
              <span class="pages-ranking-title">
               Ishtar<li>[link]</li>[ahref][link]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link][ahref][link][ahref]
              </span>
             </a>
            </li>
           </ul>
          </div>
         </div>
         <div class="view-footer">
          <a href="/popular-servants-all">
           See All
           <i aria-hidden="true" class="fa fa-chevron-right">
           </i>
          </a>
         </div>
        </div>
       </div>
      </div>
      <div class="block block-block-content block-block-content4220fb0c-9f74-4fca-8673-11c3057c3f83" id="block-sidebarad4">
       <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
        <center>
         <div class="mobile-ic-ad" style="display:none;">
          <div class="mobile-ic-ad-inner">
           <div id="div-ad-GrandOrder_Mobile_300x250_Extra_3">
           </div>
          </div>
         </div>
        </center>
       </div>
      </div>
      <div class="views-element-container block block-views block-views-blockpopular-pages-block-2" id="block-views-block-popular-pages-block-2">
       <h2>
        [area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]
       </h2>
       <div>
        <div class="view view-popular-pages view-id-popular_pages view-display-id-block_2 js-view-dom-id-f1580b015161af763c28a0c7d000874d3e47751daa48723bb9fc90aa0fc2a4aa">
         <div class="view-content">
          <div>
           <ul>
            <li>
             [link]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
            <li>
             [ahref]
             
            </li>
           </ul>
          </div>
         </div>
         <div class="view-footer">
          [ahref]
          
         </div>
        </div>
       </div>
      </div>
      <div class="block block-block-content block-block-contentf1aadc3d-0b07-417d-a530-462658bad371" id="block-gameguides-2">
       <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
        <div class="gameguides">
         <h2>
          <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
         </h2>
         <ul>
          <li class="sub-li-menu-games">
           Fully Supported
          </li>
          <li>
           [search]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li class="sub-li-menu-games">
           Upcoming Sites
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [ahref]
           
          </li>
          <li class="sub-li-menu-games">
           Minimally Supported
          </li>
          <li>
           [link]
           
          </li>
          <li>
           <a href="/?from=fgo">
            Girls Frontline
           </a>
          </li>
          <li class="sub-li-menu-games">
           Currently Not Supported
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
          <li>
           [link]
           
          </li>
         </ul>
        </div>
       </div>
      </div>
      <div class="block block-block-content block-block-content32fd52fb-e7fd-4562-b141-968f7776ba54" id="block-sidebarad3">
       <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
        <center>
         <div class="mobile-ic-ad" style="display:none;">
          <div class="mobile-ic-ad-inner">
           <div id="div-ad-GrandOrder_Mobile_300x250_Extra_5">
           </div>
          </div>
         </div>
        </center>
        <div id="div-ad-GrandOrder_Desktop_RR_300x250_C">
        </div>
       </div>
      </div>
      <nav aria-labelledby="block-mainnavigation-2-menu" class="block block-menu navigation menu--main" id="block-mainnavigation-2" role="navigation">
       <h2 id="block-mainnavigation-2-menu">
        <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
       </h2>
       <ul class="main-menu-content">
        <li "="" class="menu-item Featured menu-item--expanded">
         <span>
          Featured[search]<li>[link]</li><li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br>[link]
         </span>
         <ul class="menu">
          <li "="" class="menu-item Guides Database">
           [link]
           
          </li>
          <li "="" class="menu-item Event Guides">
           [link]
           
          </li>
         </ul>
        </li>
        <li "="" class="menu-item Rankings menu-item--expanded">
         <span>
          Rankings[link][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link]<li>[link]</li><li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search][ahref][search]<li>[ahref]</li>[link][search][search][ahref]
         </span>
         <ul class="menu">
          <li "="" class="menu-item 5 Star Tier List">
           [link]
           
          </li>
          <li "="" class="menu-item 4 Star Tier List">
           [link]
           
          </li>
          <li "="" class="menu-item 1~3 Star Tier List">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li "="" class="menu-item Servants menu-item--expanded">
         <span>
          Servants<li>[ahref]</li>[search]<li>[link]</li>[ahref]<li>[ahref]</li>[search]<li>[ahref]</li><li>[link]</li>[search]<li>[link]</li>
         </span>
         <ul class="menu">
          <li "="" class="menu-item All Servants">
           [ahref]
           
          </li>
          <li "="" class="menu-item Servant Stats">
           [ahref]
           
          </li>
          <li "="" class="menu-item Ascension Materials">
           <a data-drupal-link-system-path="node/1711" href="/materials" title="Ascension And Skill Up Materials">
            Ascension Materials
           </a>
          </li>
          <li "="" class="menu-item Craft Essences">
           <a data-drupal-link-system-path="node/4871" href="/craft-essences" title="Craft Essences">
            Craft Essences
           </a>
          </li>
          <li "="" class="menu-item Mystic Codes">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li "="" class="menu-item Tools menu-item--expanded">
         <span>
          Tools
         </span>
         <ul class="menu">
          <li "="" class="menu-item EXP Calculator">
           [link]
           
          </li>
          <li "="" class="menu-item FP Summon Simulator">
           [link]
           
          </li>
          <li "="" class="menu-item Quartz Summon Simulator">
           [ahref]
           
          </li>
          <li "="" class="menu-item Servant Planner">
           <a data-drupal-link-system-path="node/8911" href="/servant-planner">
            Servant Planner
           </a>
          </li>
          <li "="" class="menu-item Strongest NP">
           [ahref]
           
          </li>
         </ul>
        </li>
        <li "="" class="menu-item Database menu-item--expanded">
         <span>
          Database
         </span>
         <ul class="menu">
          <li "="" class="menu-item Manga menu-item--expanded">
           <span>
            Manga<li>[ahref]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]<li>[search]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[search]<li>[ahref]</li><li>[search]</li>[search]
           </span>
           <ul class="menu">
            <li "="" class="menu-item Even More Learning with Manga!">
             [ahref]
             
            </li>
            <li "="" class="menu-item Fate/GUDAGUDA Order">
             [link]
             
            </li>
            <li "="" class="menu-item Learning with Manga!">
             [ahref]
             
            </li>
            <li "="" class="menu-item More Learning with Manga!">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li "="" class="menu-item Other menu-item--expanded">
           <span>
            Other
           </span>
           <ul class="menu">
            <li "="" class="menu-item Enemies">
             [link]
             
            </li>
            <li "="" class="menu-item Mystic Code">
             <a href="/mystic-code" title="Mystic Codes in Fate/Grand Order allow Masters to directly support their servants in battle through a variety of game-changing effects.">
              Mystic Code
             </a>
            </li>
            <li "="" class="menu-item Experience Table">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li "="" class="menu-item Quests menu-item--expanded">
           <span>
            Quests<li>[ahref]</li><li>[search]</li><li>[search]</li><li>[search]</li>[search][link]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p><li>[ahref]</li>[ahref]<li>[ahref]</li>[link]<li>[search]</li>[search][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[ahref]<li>[link]</li><p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>
           </span>
           <ul class="menu">
            <li "="" class="menu-item Daily Quests">
             [ahref]
             
            </li>
            <li "="" class="menu-item Event Quests">
             [link]
             
            </li>
            <li "="" class="menu-item Free Quests">
             [link]
             
            </li>
            <li "="" class="menu-item Interlude Quests">
             [link]
             
            </li>
            <li "="" class="menu-item Main Quests">
             [ahref]
             
            </li>
           </ul>
          </li>
          <li "="" class="menu-item Skills menu-item--expanded">
           <span>
            Skills[search][search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span>[search]
           </span>
           <ul class="menu">
            <li "="" class="menu-item Class Skills">
             [ahref]
             
            </li>
            <li "="" class="menu-item Servant Skills">
             [link]
             
            </li>
           </ul>
          </li>
         </ul>
        </li>
       </ul>
      </nav>
     </aside>
    </main>
    <footer id="site-footer" role="contentinfo">
     <div class="outer-wrapper">
      <section class="footer-top">
       <div class="block block-block-content block-block-content34943de5-a652-4fa5-aa12-5237604e682a" id="block-bottomad">
        <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
         <center>
          <div id="div-ad-GrandOrder_Desktop_728x90_BTF">
          </div>
         </center>
         <center>
          <div class="mobile-ic-ad" style="display:none;">
           <div class="mobile-ic-ad-inner">
            <div id="div-ad-GrandOrder_Mobile_300x250_Extra_6">
            </div>
           </div>
          </div>
         </center>
        </div>
       </div>
      </section>
      <section class="footer-bottom">
       <div class="block block-block-content block-block-content85b50774-2028-4866-908a-064a283946ed" id="block-footerblocktext">
        <div class="clearfix text-formatted field field--name-body field--type-text-with-summary field--label-hidden field__item">
         <div class="social-links-bottom">
          <ul>
           <li>
            [ahref]
            
           </li>
           <li>
            <a href="/invite/stN6aQJ" rel="nofollow" target="_blank">
            </a>
           </li>
          </ul>
         </div>
         <div class="footer-links">
          <ul>
           <li>
            <a href="/">
             About
            </a>
           </li>
           <li>
            <a href="/disclaimer" target="_blank">
             Disclaimer
            </a>
           </li>
           <li>
            [link]
            
           </li>
           <li>
            <a href="/document/terms-of-use-for-website/5640ce7e-b20c-4556-98e2-911a26637c78" target="_blank">
             Terms of Use
            </a>
           </li>
          </ul>
         </div>
         [ahref]
         
         <div class="footer-dots">
          <i aria-hidden="true" class="fa fa-circle">
          </i>
          <i aria-hidden="true" class="fa fa-circle">
          </i>
          <i aria-hidden="true" class="fa fa-circle">
          </i>
         </div>
         <div class="footer-copyright">
          <p>
           Fate/Grand Order is Copyright Aniplex Inc., DELiGHTWORKS, Aniplex of America and Sony Music Entertainment (Japan) Inc. All images and names owned and trademarked by Aniplex Inc., DELiGHTWORKS, Aniplex of America and Sony Music Entertainment (Japan) Inc. are property of their respective owners.
          </p>
          <p>
           Copyright (C) GamePress All Rights Reserved.<li>[link]</li>[link]<li>[search]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[search]</li>
          </p>
         </div>
        </div>
       </div>
      </section>
     </div>
    </footer>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0330
  </b>
 </body>
</html>