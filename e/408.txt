--->|VGhlIEJNSidzIGNvbGxlY3Rpb24gb24gIkhlYWx0aCBpbiBTb3V0aCBBc2lhIiBicmluZ3MgdG9nZXRoZXIgbGVhZGluZyBoZWFsdGggZXhwZXJ0cyBmcm9tIGFjcm9zcyB0aGUgcmVnaW9uIHRvIGRpc2N1c3MgaGVhbHRoIHByaW9yaXRpZXMgYW5kIGFkdmFuY2UgdGhlIGhlYWx0aCBhZ2VuZGEgZm9yIHRoZSBmdXR1cmUuIFNvdXRoIEFzaWEgcmVwcmVzZW50cyBhIHZpYnJhbnQsIGR5bmFtaWMsIGFuZCBmYXN0IGdyb3dpbmcgcmVnaW9uIG9mIHRoZSB3b3JsZCBhbmQgaXMgaG9tZSB0byBuZWFybHkgYSBxdWFydGVyIG9mIHRoZSB3b3JsZCdzIHBvcHVsYXRpb24uCkluIHdoYXQgSSB3b3VsZCBjb25zaWRlciB0aGUgZ29sZGVuIHllYXJzIHRoZXkgYWxzbyBoYWQgYSBidW5jaCBvZiBSUEcgTWFrZXIgZ2FtZXMgZnJvbSB0aGUgc3VwZXIgYWN0aXZlIEdlcm1hbiBSUEcgTWFrZXIgc2NlbmUgaW4gdGhlcmUgYXMgd2VsbCwgdGhvc2Ugd2VyZSBteSBhYnNvbHV0ZSBmYXZvcml0ZXMuIApUaGlzIGhhcyBvY2N1cnJlZCBkZXNwaXRlIHRoZSB1c2Ugb2YgQ29kZW50aWZ5IGluLCBhY2NvcmRpbmcgdG8gaW5kdXN0cnkgY2xhaW1zLCBvdmVyIDEwMCBjb3VudHJpZXMgd29ybGR3aWRlIChvbmxpbmUgc3VwcGxlbWVudGFyeSBhcHBlbmRpeCAxKS4yMy4gClRoZSBidXNpbmVzcyB0aGF0IGVtcGxveXMgdGhpcyBwZXJzb24gd291bGQgYmUgaW4gdmVyeSBiaWcgdHJvdWJsZS5HZW5lcmFsbHkgb3VyIGxhd3MgYWxsb3cgc2V4IHdvcmtlcnMgdG8gc2VsbCB0aGVpciBzZXJ2aWNlcyBhbmQgcHVuaXNoIG90aGVyIHBlb3BsZSBmb3IgYnV5aW5nIHRob3NlIHNlcnZpY2VzLCBvciBtYWtpbmcgbW9uZXkgb2ZmIG9mIHRoZWlyIHNlcnZpY2VzLiAKTGF0ZSBnYW1lLCBzeW5lcmd5IHBhbGVzIGluIGNvbXBhcmlzb24gdG8gQU9FIENDIGFuZCBEYW1hZ2UuIFlvdXIgZnVsbCBIdW1hbiBzeW5lcmd5IGRvZXNuIHJlYWxseSBuZWVkIHRvIGJlIHRoZXJlIGlmIHlvdSBoYXZlIGEgVGlkZWh1bnRlciBvciBhbiBFbmlnbWEgc2l0dGluZyBvbiB0aGUgYmVuY2guIApUaGlzIGlzIG5vdCB0cnVlIGF0IGFsbCBpbiBteSBleHBlcmllbmNlIGF0IHRoZSBwYXN0IDMgY29tcGFuaWVzIEkgd29ya2VkIGZvci4gSSB3b3JrZWQgbXkgYXNzIG9mZiBhdCBteSBjdXJyZW50IGNvbXBhbnkgd2hvIGFsc28gc3RhcnRlZCBtZSBvZmYgYXQgMzRrIHdoZW4gSSBzdGFydGVkIGluIHN1bW1lciAyMDE3LiAKSWwgbidlc3QgcGFzIHF1ZXN0aW9uIHF1ZSBqZSBwdWlzc2UgbSdlbiBjaGFyZ2VyLiBKZSBsJ2FpIGRpdCwgcG91ciAzNiAwMDAgcmFpc29ucyBqZSBuZSB2ZXV4IHBhcyB0cmUgb2JsaWcgZGUgbWUgc3BjaWFsaXNlciBkYW5zIGxlIGRvbWFpbmUgZGVzIHZhY2NpbmF0aW9ucy4gSmUgc3VpcyBjb250cmUgOiBvbiBwZXV0IHBhcmZhaXRlbWVudCBzJ2VuIHBhc3Nlci4gCkhvd2V2ZXIsIDF4MDIgIk5ldyBFZGVuIiwgd2FzIHRoZSBmaXJzdCB0aW1lIHRoYXQgSSBmZWx0IEkgd2FzIHdhdGNoaW5nIGEgcmVhbCB0cmVrIHNob3cuIEl0IHdhcyB0aGVyZSwgaXQgaGFkIHRoZSBETkEgb2YgdGhlIHBhc3QgZXBpc29kZXMgYW5kIHRoZXkgbWFraW5nIGEgbmV3IHdheSBmb3J3YXJkLgpVbmxpa2UgdGhlIG9mZmxpbmUsIGNhc2lub3MgdGhlIGNhc2lub3Mgb25saW5lIGhhdmUgdHJlbWVuZG91cyBmbGV4aWJpbGl0eSBhbmQgYXJlIGluIGEgY29uc3RhbnQgcGhhc2Ugb2YgZXZvbHV0aW9uLiAKQXQgdGhlIHNhbWUgdGltZSwgSSB3b3VsZCBoYXRlIGZvciBteSBzZXh1YWwgcHJhY3RpY2VzIHRvIGJlICJvdXRlZCIgc2luY2UgdGhleSBhcmUgaGFyZGx5IHRoYXQgaW50ZXJlc3RpbmcuIEluZGVlZCwgdGhleSBtaWdodCBldmVuIGJlIGRlc2NyaWJlZCBhcyBzb21ld2hhdCBoZXRlcm9ub3JtYXRpdmUuIApLb3JlYW4gc3R5bGUgY2hpbmVzZSBmb29kLgpUaGVyZSB3YXMgYSAibmV0IG5ldXRyYWxpdHkiIGNsYXVzZSBpbiB0aGUgY29udHJhY3RzLCB0aGF0IGlzIHdoZXJlIHRoaXMgYWxsIHN0YXJ0ZWQuIApOb3cgb2YgY291cnNlIEkgdXN1YWxseSB0b3VjaCB0aGUgYmFzZSB0byBhc3Npc3QgaW4gdGhlIHByb2Nlc3MsIGJ1dCBldmVuIGlmIEkgZGlkLCBpcyB0aGF0IHBhcnRpY3VsYXIgZmxhcCBvZiBza2luIGRpcnRpZXIgdGhhbiBhbnkgb3RoZXIgb25lIG9uIG15IGJvZHk/IElmIGFueXRoaW5nIGl0IHNob3VsZCBiZSBjbGVhbmVyLCBwcm90ZWN0ZWQgZnJvbSB0aGUgb3V0c2lkZSB3b3JsZC4gRG8gSSB3YXNoIG15IGhhbmRzIGFmdGVyIGV2ZXJ5IHRpbWUgSSBzY3JhdGNoIG15IGJhbGxzPyBBYnNvbHV0ZWx5IG5vdCBhbmQgdGhhdCBpcyBnZXR0aW5nIHdheSBzd2VhdGllciB0aGFuIGEgc2ltcGxlIHBlZSBzZXR1cC4gQW5kIHVyaW5lIGlzIGFsbGVnZWRseSBzdGVyaWxlISBJIGhhdmVuIGRvbmUgdGhlIHJlc2VhcmNoIGJ1dCBldmVyeW9uZSBzYXlzIHNvLiBTbyBldmVuIGlmIEkgbWFkZSBhIGxpdHRsZSBjb250YWN0IHdpdGggaXQsIGl0IHNob3VsZG4gbWF0dGVyLiBJIGRvbiBoYXZlIGdvbm9ycmhlYSBvciBhbnl0aGluZyBzbyB3aGVyZSBhcmUgdGhlIGdlcm1zPyEKSXQgbXVzdCBjb3JyZXNwb25kIHRvIHRoZSBzdWl0IG9mIHRoZSBwcmV2aW91cyBjYXJkLiBUaGVyZSBhcmUgNTEgY2FyZHMgbGVmdCwgMTIgb2Ygd2hpY2ggYXJlIGZhdm91cmFibGUsIHNvIHRoZSBwcm9iYWJpbGl0eSB0aGF0IHdlJ2xsIGdldCB0d28gY2FyZHMgb2YgdGhlIHNhbWUgc3VpdCBpcyAoNTIgLyA1MikgICgxMiAvIDUxKSA9IDQgLyAxNy4uIApMRVRTIGogVE9PLicgSEUgV0FTIEEgUGxDTUMgTFVOQ0ggSU5WZlRIIE9sSkMgU08gSEFQUFYgV0lUSCBPUiBTMUpNUElOJyBUSCcgV0VBVEhLIFRPIEpPSU4gVVMnIFNVVCBIRSBIQVAgQSBJTVBPUlRBTlQgVCdETy4gClNvIGdvIHN0cmluZyB1cCBhIGZldyBiYW5rZXJzIGlmIG1ha2VzIHlvdSBmZWVsIGJldHRlci4gVGhleSBvbmx5IHRoZSBzeW1wdG9tLiBJZiB5b3Ugd2FudCB0byBzZWUgdGhlIHJlYWwgY2F1c2UsIGxvb2sgaW4gdGhlIG1pcnJvci4gV2UgdGhlIHBlb3BsZSBzaG91bGQgbmV2ZXIgaGF2ZSBsZXQgdGhlbSBnZXQgdGhpcyBmYXIuCiJEb2luZyBzb21ldGhpbmcgYXMgc2ltcGxlIGFzIGdldHRpbmcgYSBiYW5rIGFjY291bnQgb3IgW3NlZWluZ10gYSBkb2N0b3Igb3IgdGhlcmFwaXN0IGhhcyB0aGVpciBvd24gdW5pcXVlIGNoYWxsZW5nZXMuIldoZXRoZXIgaXQncyBmaW5kaW5nIGEgc2V4IHdvcmtlciBmcmllbmRseSBiYW5rIChtYW55IGJhbmtzIHdpbGwgY2xvc2UgYWNjb3VudHMgaWYgdGhleSBmaW5kIG91dCB0aGUgbW9uZXkgaGFzIGNvbWUgZnJvbSB0aGUgYWR1bHQgaW5kdXN0cnkpLCBhIGp1ZGdtZW50IGZyZWUgZG9jdG9yIG9yIGd5bmVjb2xvZ2lzdCwgb3IgZW1lcmdlbmN5IGhvdXNpbmcsIEZheSBzYWlkIHRoZSBub25wcm9maXQgaXMgdGhlcmUgdG8gaGVscC4gClRlbiBvciBzbyB5ZWFycyBhZ28sIGluc3VyYW5jZSBjb21wYW55IHRyYWlsYmxhemVycywgbGFyZ2VseSBpbiByZXNwb25zZSB0byBjb25zdW1lciBkZW1hbmQsIHNldCB1cCBpbiBob3VzZSBtZW1iZXIgYWNjZXNzIHRvIENBTSBhbmQgaW50ZWdyYXRpdmUgaGVhbHRoIGNhcmUuIApTcGFjZVggZW1wbG95ZWVzIGNoZWVyZWQgYW5kIGFwcGxhdWRlZCBhdCBjb21wYW55IGhlYWRxdWFydGVycyBuZWFyIExvcyBBbmdlbGVzIHdoZW4gdGhlIERyYWdvbidzIHJlZCBhbmQgd2hpdGUgcGFyYWNodXRlcyBwb3BwZWQgb3Blbi4gTkFTQSB0ZWxldmlzZWQgdGhlIGRlc2NlbnQgbGl2ZSwgdGhlIGRyYW1hdGljIHZpZXdzIGNvbWluZyBmcm9tIGEgcGxhbmUuIFRoZSBjcm93ZCB3ZW50IHdpbGQgb25jZSB0aGUgY2Fwc3VsZSBzcGxhc2hlZCBkb3duIGFuZCB3YXMgc2VlbiBmbG9hdGluZyB1cHJpZ2h0LgpJZiBhbGwgZWxzZSBmYWlscywgYW55IENpcnF1ZSBzaG93IGlzIGdvaW5nIHRvIGJlIGF3ZXNvbWUsIGFuZCB5b3UgY2FuIGdldCBoYWxmIHByaWNlIHRpY2tldHMgZm9yIG1hbnkgb2YgdGhlbSBhdCB0aGUgaGFsZiBwcmljZSB0aWNrZXQgYm9vdGhzIG9uIHRoZSBzdHJpcC4uIApPdmVyIHRoZSByZWQgYnJpY2sgcGF0aCB0aGF0IGZvbGxvd3MgdGhlIHJpdmVyLiAKVGhlIG9yb29vc2VkIGFjdGlvbiBhbmQgTkFTQSdzIHByZWZlcnJlZCBhbHRlcm5hdGl2ZSBpcyB0aGUgY29udGludWVkIG9wZXJhdGlvbiBvZiB0aGUgTkFTQSBTUlAsIGFzIHByZXNlbnRseSBtYW5hZ2VkLiBUaGUgRlNFSVMgZm9jdXNlcyBvbiBwcm9ncmFtbWF0aWMgY2hhbmdlcyBpbiB0aGUgTkFTQSBTUlAgdGhhdCBoYXZlIHRha2VuIHBsYWNlIHNpbmNlIHRoZSBvcmlnaW5hbCBGRUlTIHdhcyBpc3N1ZWQgaW4gMTk3MyBidiBkZWxldGluZyBsYXVuY2ggdmVoaWNsZXMgdGhhdCBhcmUgbm8gbG9uZ2VyIHVzZWQsIGFkZGluZyBuZXcgbGF1bmNoIHZlaGljbGVzIGFuZCBzeXN0ZW1zIGN1cnJlbnRseSBiZWluZyB1c2VkLCBhbmQgcmVmbGVjdGlucSBjaGFuZ2VzIGluIEZlZGVyYWwgYW5kIFN0YXRlIGVudmlyb25tZW50YWwgc3RhdHV0ZXMgYW5kIHJlZ3VsYXRpb25zLiBUaGUgRlNFSVMgYWRkcmVzc2VzIGJvdGggdGhlIG92ZXJhbGwgZW52aXJvbm1lbnRhbCBpbXBhY3RzIG9mIHRoZSBTUlAgYW5kIHRoZSBzaXRlIHNwZWNpZmljIGVudmlyb25tZW50YWwgaW1wYWN0cyBhdCBhbmQgaW4gdGhlIGFyZWEgb2YgdGhlIHRocmVlIHByaW5jaXBhbCBkb21lc3RpYyBzb3VuZGluZyByb2NrZXQgc2l0ZXMgV2FsbG9wcyBGbGlnaHQgRmFjaWxpdHksIFdhbGxvcHMgSXNsYW5kLCBWaXJnaW5pYTsgV2hpdGUgU2FuZHMgTWlzc2lsZSBSYW5nZSwgV2hpdGUgU2FuZHMsIE5ldyBNZXhpY28gIGFuZCBQb2tlciBGbGF0IFJlc2VhcmNoIFJhbmdlIG5lYXIgRmFpcmJhbmtzLCBBbGFza2EuIE5BU0EgaW52ZXN0aWdhdGVkIGFsdGVybmF0aXZlcyB0byBzb3VuZGluZyByb2NrZXRzLCBhbHRlcm5hdGl2ZXMgdG8gY3VycmVudCBwcm9wZWxsYW50cywgYW5kIGFsdGVybmF0aXZlIHRvIHRoZSBXYWxsb3BzIElzbGFuZCwgVmlyZ2luaWE7IFdoaXRlIFNhbmRzLCBOZXcgTWV4aWNvOyBhbmQgUG9rZXIgRmxhdCwgQWxhc2thIGxhdW5jaCBzaXRlcy4gTm8gYWx0ZXJuYXRpdmVzIHRvIHRoZSBzb3VuZGluZyByb2NrZXQgY291bGQgcHJvdmlkZSB0aGUgc2FtZSBxdWFsaXR5IG9mIHNjaWVudGlmaWMgZGF0YS4gQWx0ZXJuYXRpdmUgdG8gdGhlIHNvdW5kaW5hIHJvY2tldCBjb3VsZCBwcm92aWRlIHRoZSBzYW1lIHF1YWxpdHkgb2Ygc2NpZW50aWZpYyBkYXRhLiBBbHRlcm5hdGl2ZSBwcm9wZWxsYW50cyBhcmUgaW1wcmFjdGljYWwgc2luY2UgdGhleSB3b3VsZCByZXN1bHQgaW4gZGVjcmVhc2VkIHBlcmZvcm1hbmNlLCBnZW5lcmF0ZSBvdGhlciBwb2xsdXRhbnRzLCBvciBwcmVzZW50IG90aGVyIHBoeXNpY2FsIGRhbmdlcnMuIExhdW5jaGluZyBhdCBvdGhlciB0aGFuIHRoZSBlc3RhYmxpc2hlZCBVUyByYW5nZXMgb24gYSBjb250aW51YWwgYmFzaXMgaXMgbm90IHByYWN0aWNhbCBzaW5jZSBpdCB3b3VsZCBpbmNyZWFzZSBhZHZlcnNlIGVudmlyb25tZW50YWwgaW1wYWN0cyBkdWUgdG8gY29uc3RydWN0aW9uIGFjdGl2aXRpZXMgd2l0aG91dCByZWFsaXppbmcgYW55IG9wZXJhdGlvbmFsIG9yIGVudmlyb25tZW50YWwgYWR2YW50YWdlcy4KRW4gZWZmZXQuIENlIHF1IHBvc3NkZW50IGVuIGNvbW11biwgYyBkIHQgYXR0cmlidWVzICBTYWludCBKZWFuIEJhcHRpc3RlLCBkb250IGxhIGZ0ZSBzZSBzaXR1ZSBsZSAyNCBqdWluLCBjIHBldSBvdSBwcm91ICBwcm94aW1pdCB0ZW1wb3JlbGxlIGR1IHNvbHN0aWNlIGQgQ2hleiBub21icmUgZGUgcGxhbnRlcyBsaXN0ZXMgaWNpIG1tZSwgbCBkZSBsYSBmbG9yYWlzb24gc2Ugc2l0dWUganVzdGVtZW50ICBjZXR0ZSBwcmlvZGUuIExlIHNvbHN0aWNlIGQgZXN0IGdhbGVtZW50IG5vbW0gcG9ydGUgc29sc3RpY2lhbGUgZGVzY2VuZGFudGUsIHB1aXNxdWUgYyAgY2UgbW9tZW50IGRlIGwgcXVlIHMgbGEgZGVzY2VudGUgdmVycyBsIGxlIHNvbHN0aWNlIG1hcnF1YW50LCBxdWFudCAgbHVpLCBsIGRlIGxhIGNvdXJzZSBkdSBzb2xlaWwgcXVpIGVzdCBhbG9ycyAgc29uIHpuaXRoLiBBaW5zaSBkb25jIGEgdCBvbiBmYWl0IGRlIGNldHRlIGRhdGUgKGxpZSAgbGEgU2FpbnQgSmVhbikgbGEgZnRlIGR1IHNvbGVpbC4gQ2VzIHBsYW50ZXMgcmVwcnNlbnRlbnQgZG9uYyBsIHNvbGFpcmUgY29uZGVuc2UgZXQgbWFuaWZlc3RlIFtdLiBFbGxlcyBjYXB0ZW50IGxlcyBmb3JjZXMgaWduZXMgZGUgbGEgdGVycmUgZXQgcmVvaXZlbnQgbCBzb2xhaXJlLiBFbGxlcyBhY2N1bXVsZW50IGNldHRlIHB1aXNzYW5jZS4gRCBsZXVycyBwcm9wcml0cyBndXJpc3NldXNlcyBvdSB2bm5ldXNlcyAoMSkuIEV0LCBpY2ksIHBhcyBkZSBkdWFsaXNtZSBlbnRyZSBiaWVuIGV0IG1hbCwgc2V1bCBsIGludGVudGlvbm5lbCBvdSBwYXMgZmFpdCBxdSBzb250IGJuZmlxdWVzIG91IHBhcy4gU2FucyBjb21wdGVyIHF1ZSBjZXJ0YWluZXMgc29udCBkZGllcyAgZGVzIGRpdmluaXRzIChBcnRtaXMsIFpldXMsIGV0Yy4pIGRvbnQgbCBuZSBmYWl0IHBhcyBkZSBkb3V0ZS4KSSBzZWVuIHBlb3BsZSBvbiB0aGlzIHN1YiAoYW5kIGVsc2V3aGVyZSkgcG9zdGluZyBhYm91dCB0aGUgY29uZGVuc2F0aW9uIGlzc3VlcyB3aXRoIHRoZSB0ZW50IHdoaWNoIGFyZSB0aGVuIG1hZGUgbXVjaCB3b3JzZSBkdWUgdG8gc2hhcGUgb2YgaXQgYXMgeW91ciBsZWdzIHRvdWNoIGlubmVyIHdhbGxzIGEgbG90IGF0IG5pZ2h0LiBUaGF0IGxlYWRzIHRvIGEgd2V0IHNsZWVwaW5nIGJhZyBpbiB0aGUgbW9ybmluZ3MuIFRoZXkgYWxzbyB0YWxrZWQgYWJvdXQgaXQgYmVpbmcgdmVyeSBub2lzeSBpbiBsaWdodCB3aW5kcy4gVGhlbiBhZ2FpbiBJIGFsc28gcmVhZCBsb3RzIG9mIHBlb3BsZSBsaWtpbmcgaXQgdG9vLiBJIGRvIHRlbmQgdG8gb3ZlciBhbmFseXNlIGV2ZXJ5dGhpbmcsIHNhZGx5IHRvbyBvZnRlbiBhZnRlciBJIGJvdWdodCBzb21ldGhpbmcgYW5kIG5vdCBlbm91Z2ggYmVmb3JlLgogIFRoZXJlIGFyZSAyIHBvc3NpYmxlIHJlc3VsdHMgb2YgdGhlIHRvc3MgLiAKVGhlIElyYXEgV2FyIGJlZ2FuIHdpdGggdGhlIGludmFzaW9uIG9mIElyYXEgdG8gb3ZlcnRocm93IHRoZWlyIGdvdmVybm1lbnQuIApTaGUgZGlkIG5vdCByZXNwb25kIHRvIHJlcXVlc3RzIGZvciBhbiBpbnRlcnZpZXcgYnkgdGhlIFRpbWVzLCBzbyB0aGlzIHJlcG9ydGVyIHVzZWQgdGhlIEdSRVkySydzIGZpZ3VyZXMgdG8gZXh0cmFwb2xhdGUgaG93IG1hbnkgZG9ncyBtYXkgaGF2ZSBiZWVuIGV1dGhhbml6ZWQuIApZb3UgcGxheWVkIGl0IHJpZ2h0LiBUb25pZ2h0IEkgd2Fsa2VkIGluIGhlcmUgdG8gZ2FtYmxlIGFuZCBJIHdlbnQgd2l0aCBteSBndXQgYW5kIEkgaGl0IGl0LiAKSGUgcHVibGlzaGVkIGhpcyBmaXJzdCBib29rIGluIDE5OTYgYW5kIGlzIGEgZnJlcXVlbnQgY29udHJpYnV0b3IgdG8gbWFueSBvbmxpbmUgcHVibGljYXRpb25zLCBzcGVjaWFsaXppbmcgaW4gY29uc3VtZXIsIGJ1c2luZXNzIGFuZCB0ZWNobmljYWwgdG9waWNzLiAKT3RoZXIgd29yZHMsIEFsIEdvcmUsIGEgbWFzc2FnZSB0aGVyYXBpc3QsIGFuZCBhIHN0cmFuZ2Ugc3RhaW4gb24gYSBwYWlyIG9mIHBhbnRzLi4gClRoZSBDbGluaWNhbCBwcmFjdGljZSBndWlkZWxpbmVzIHJldmlld2VkIGhhZCBoaWdoIGxldmVscyBvZiBtZXRob2RvbG9naWNhbCBxdWFsaXR5LgpIZSBhbmQgSSBib25kZWQgaW1tZWRpYXRlbHkuIApCdXQgdGhlIGRvdWJsZSB0aHJlYXRzIG9mIGEgbG9vbWluZyBjb25zdGl0dXRpb25hbCBhbWVuZG1lbnQgb24gdGhlIE5vdmVtYmVyIGJhbGxvdCBhbmQgYW4gYW5udWFsICQyNTAgbWlsbGlvbiBoaXQgdG8gdGhlIHN0YXRlIGJ1ZGdldCBoYXZlIGluamVjdGVkIGEgc2Vuc2Ugb2YgdXJnZW5jeSBhcyBsYXdtYWtlcnMgb25jZSBhZ2FpbiBncmFwcGxlIHdpdGggdGhlIHRob3JueSBnYW1ibGluZyBpc3N1ZS4gVGhlIGNvbnN0aXR1dGlvbmFsIGFtZW5kbWVudCBzZWVrcyB0byBnaXZlIHZvdGVycyBjb250cm9sIG92ZXIgZnV0dXJlIGdhbWJsaW5nIGRlY2lzaW9ucywgcG90ZW50aWFsbHkgdGFraW5nIHBvd2VyIGF3YXkgZnJvbSBsYXdtYWtlcnMuLiAKRG9ua2luQXJvdW5kICAxIHBvaW50ICBzdWJtaXR0ZWQgNCBtb250aHMgYWdvCkJ5IFRodXJzZGF5IGFmdGVybm9vbiwgdGhvdWdoLCBBY2ttYW4gd2FzIHZvaWNpbmcgaGlzIGZ1bGwgY29uZmlkZW5jZSBpbiBQZWFyc29uIGFiaWxpdHkgdG8gd2VhdGhlciB0aGlzIHN0b3JtLiBCdXQgaXQgd2FzbiBlbm91Z2guIFRoaW5ncyBhcmVuIGxvb2tpbmcgZ29vZCwgd2hpY2ggaXMgd2h5IEdvbGRtYW4gY2FsbGVkIGluIGl0cyBsb2FuLgpHYWRnZXRzIEdpem1vcyBHYWxvcmUgQXQgQ0VTIDIwMTMyMDEzIENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgSGlnaGxpZ2h0cyBOZXdlc3QgVGVjaG5vbG9neSBBIG5ldyBnZW5lcmF0aW9uIENhc2lvIEcgU2hvY2sgd2F0Y2ggaXMgc2hvd24gYXQgdGhlIDIwMTMgSW50ZXJuYXRpb25hbCBDRVMgYXQgdGhlIExhcyBWZWdhcyBDb252ZW50aW9uIENlbnRlciBvbiBKYW51YXJ5IDgsIDIwMTMgaW4gTGFzIFZlZ2FzLCBOZXZhZGEuIFRoZSBVU0QgMTgwIHdhdGNoIGlzIGN1cnJlbnRseSBhdmFpbGFibGUgYW5kIGlzIEJsdWV0b290aCBlbmFibGUgd2hpY2ggYWxsb3dzIHRoZSB1c2VyIHRvIGxpbmsgaXQgdG8gYW4gaVBob25lLiBDRVMsIHRoZSB3b3JsZCdzIGxhcmdlc3QgYW5udWFsIGNvbnN1bWVyIHRlY2hub2xvZ3kgdHJhZGUgc2hvdywgcnVucyB0aHJvdWdoIEphbnVhcnkgMTEgYW5kIGlzIGV4cGVjdGVkIHRvIGZlYXR1cmUgMywxMDAgZXhoaWJpdG9ycyBzaG93aW5nIG9mZiB0aGVpciBsYXRlc3QgcHJvZHVjdHMgYW5kIHNlcnZpY2VzIHRvIGFib3V0IDE1MCwwMDAgYXR0ZW5kZWVzLgpEJ28gdmllbnQgZWxsZSwgcXVhbmQsIHBvdXJxdW9pLCBjb21tZW50ID9MYSBCaWJsZSBlc3QgdW4gbGl2cmUgZHJvdXRhbnQsIGxlIFByZW1pZXIgVGVzdGFtZW50IGVuIHBhcnRpY3VsaWVyLiBMaXZyZSBzYWludCBkZXMgSnVpZnMgZXQgZGVzIENocnRpZW5zLCBvbiBzJ2F0dGVuZCAgdHJvdXZlciBwbHVzIG91IG1vaW5zIHVuIGNhdGNoaXNtZSwgZGUgbGEgdGhvbG9naWUgZXQgZGUgbGEgbW9yYWxlLgpMQSBWT0NFIERFTCBESU8gQU1PUkUKQmVlbiBoYXZpbmcgdGhpcyBpc3N1ZSB0aGF0IEkgc2VlIHNvIG1hbnkgcGVvcGxlIGNvbWluZyBhcm91bmQgdG8gcmVwZWF0IGNvbXBsYWludHMgdGhhdCBoYXZlIGFscmVhZHkgYmVlbiBhZGRyZXNzZWQgb3IganVzdCB0byBzaGl0IG9uIHRoZSBnYW1lIGZvciB3aGF0ZXZlciByZWFzb24uIApPbiBjaWJsZSBsZXMgdmVuZGV1cnMgcml0cmFudHMsIG9uIGludGVuc2lmaWUgbCdhY3Rpb24ganVkaWNpYWlyZS4gCkZyb20gdGhlaXIgcGVyc3BlY3RpdmUsIG91ciBncm91cCByZXByZXNlbnRzIGN1c3RvbWVycyBhbmQgbW9uZXksIHNvIGl0IHNlZW1zIHdvcnRoIHRoZWlyIHdoaWxlLiAKNy4gQW5nZSBib29ieSB0cmFwcyBpIGRpdHQgaHVzLiBPbSBkdSB0cm9yIGF0dCBkaXR0IGZ1c2sga2FuIG1hbiBmIG5nb24gaSBkaXR0IGhlbSBtZWRhbiBkdSByIHV0ZSBvY2ggcmVzZXIgZWxsZXIsIHNvbSB2aXNzYSBmbGxvci4gClRoZSBUcnV0aCBpcyBvbmx5IEdvZCBhbmQgSGlzIFRydXRoLiBJIERvIG5vdCBqdWRnZS4gSSBiZWxpZXZlIHdlIGFyZSBpbiBhIFRvd2VyIG9mIEJhYmVsLgpUaGF0IHlvbiB0aGUgb2NjYXNpb24gSSBmb3Jnb3QuIFdoZXJlIGFyZSB0aGV5IC4/IEkgdHVybmVkIHRoZSB3aG9sZSBraXQgZmlnaHQgd2l0aCBoaXMgInRveXMiLiAKVGhleSBoaXJlZCBmZW1hbGVzIG5vdCBqdXN0IHRvIHN0aXRjaCB0aGUgd2luZ3MgYnV0IHRvIGhlbHAgZGVzaWduIHRoZW0uIEJvZWluZyBzZXQgdGhlIHJlZ2lvbidzIHN0YW5kYXJkIGZvciBwYXksIGJlbmVmaXRzIGFuZCBmYWlyIGhpcmluZy4gClRoZSBPYmFtYSB0ZWFtIGNvdWxkIGdvIHRvIHNjaG9vbCBvbiBEZWFuIGFuZCBsb29rIGF0IHdoYXQgd29ya2VkIGFuZCB3aGF0IGRpZG4ndCBmb3IgdXMuIFdlIHdlcmUgdGhlIFdyaWdodCBCcm90aGVycy4gCkd1aWx0LiBWZXJ5IGNvbW1vbiwgYW5kIG9mIGNvdXJzZSBpdCBjb21wb3VuZHMgYWxsIHRoZSBvdGhlciBzeW1wdG9tcy4gVGhlcmUgaXMgZ3VpbHQgYWJvdXQgbm90IGJlaW5nIGEgZ29vZCBtb3RoZXIuIFRoZXJlIGlzIGd1aWx0IGFib3V0IGJlaW5nIGlycml0YWJsZSBhbmQgZGVzcG9uZGFudCwgZ3VpbHQgdGhhdCB5b3UgYXJlIG5vdCBtYW5hZ2luZyBiZXR0ZXIgb3IgbWVldGluZyBvdGhlciBwZW9wbGVzIGV4cGVjdGF0aW9ucy4gT3Igd29tZW4gbWlzbGVhZCBwZW9wbGUgYmVjYXVzZSB0aGV5IGRvIG5vdCB3YW50IHRvIGFkbWl0IHRoZXkgaGF2ZSBQTkQsIGFuZCB0aGVuIGZlZWwgZ3VpbHR5IGZvciBub3QgYmVpbmcgaG9uZXN0LgpUaGUgU2lsZW50IEtpbGxlciAgIE5ldmVyIHNheXMgYW55dGhpbmcuIApJZiB5b3UgYWxyZWFkeSBoYXZlIGNoaWxkcmVuIGF0IGhvbWUsIHRoZSBwZWRpYXRyaWNpYW4gbWF5IHJlY29tbWVuZCB0aGV5IGJlIHZhY2NpbmF0ZWQgYXQgYSB3ZWxsIGNoaWxkIHZpc2l0LiAKQ2FyZXN0cmVhbSdzIEhDSVMgYnVzaW5lc3MgdW5pdCBwcm92aWRlcyBpbWFnaW5nIElUIHNvbHV0aW9ucyB0byBtdWx0aSBzaXRlIGhvc3BpdGFscywgcmFkaW9sb2d5IHNlcnZpY2VzIHByb3ZpZGVycywgaW1hZ2luZyBjZW50ZXJzIGFuZCBzcGVjaWFsdHkgbWVkaWNhbCBjbGluaWNzIGFyb3VuZCB0aGUgd29ybGQuIFRoZSBidXNpbmVzcyBoYXMgZGV2ZWxvcGVkIHN0cm9uZyBjdXN0b21lciByZWxhdGlvbnNoaXBzIGluIGF0dHJhY3RpdmUsIGhpZ2ggZ3Jvd3RoIGhlYWx0aGNhcmUgc2VnbWVudHMgYW5kIGlzIHBvc2l0aW9uZWQgZm9yIGNvbnRpbnVlZCBncm93dGggYW5kIHN1Y2Nlc3MuIldlIGhhdmUgaGFkIGdsb2JhbCBzdWNjZXNzIGluIHByb3ZpZGluZyByYWRpb2xvZ3kgYW5kIGVudGVycHJpc2UgaW1hZ2luZyBJVCBzeXN0ZW1zIHRvIGhlbHAgbWVkaWNhbCBwcm9mZXNzaW9uYWxzIHByb3ZpZGUgcXVhbGl0eSBjYXJlIGFuZCBlbmhhbmNlIHRoZWlyIG9wZXJhdGlvbnMsIiBzYWlkIEx1ZG92aWMgZCdBcHJlYSwgQ2FyZXN0cmVhbSdzIEdlbmVyYWwgTWFuYWdlciBmb3IgSGVhbHRoY2FyZSBJbmZvcm1hdGlvbiBTb2x1dGlvbnMuICJCeSBiZWNvbWluZyBwYXJ0IG9mIFBoaWxpcHMsIHRoZSBIQ0lTIGJ1c2luZXNzIHdpbGwgaGF2ZSBhIGdyZWF0ZXIgb3Bwb3J0dW5pdHkgdG8gdGhyaXZlIGFuZCBncm93LiAKRGVhZExpa2VZb3UgICAyIHBvaW50cyAgc3VibWl0dGVkIDIgZGF5cyBhZ28KIltUcmF2ZWxvZGdlXSBoYWQgYSByYXRoZXIgYnJ1aXNpbmcgaGlhdHVzIHVuZGVyIEdyYW5hZGEgbWFuYWdlbWVudCwiIGhlIHRlbGxzIHRoZSBhc3NlbWJsZWQgcHJlc3MgYW5kIGJlYW1pbmcgUFIgZ2lybHMuICJJIHdvdWxkIHNheSB0aGF0LCB3b3VsZG4ndCBJPyBCdXQgaXQncyB0cnVlLCB0aGV5IHJlYWxseSBidWdnZXJlZCBpdCB1cC4iIExhdWdodGVyIGFsbCByb3VuZC4KSXQgaGFzIGEgYnV0dGVyZmx5IGFmZmVjdCBvbiB1cyB0b28uIEl0IGNvc3RzIG1vbmV5IHRvIGNsZWFuIGl0IHVwLCBjYW4gY2FycnkgZGlzZWFzZXMsIGFuZCBpdCBzaW1wbHkgZGVtb3JhbGl6aW5nIHRvIHNlZSBnYXJiYWdlIGV2ZXJ5d2hlcmUgd2hlbiB5b3UgbG9vayBhcm91bmQsIGZ1cnRoZXIgZW1waGFzaXppbmcgdGhlIGZlZWxpbmcgb2YgaG9wZWxlc3NuZXNzIHRoYXQgb3VyIHRyYXNoIHByb2JsZW0gY2Fubm90IGJlIGZpeGVkLkphcGFuIGlzIGEgZ3JlYXQgcm9sZSBtb2RlbCBmb3IgbGl0dGVyIGN1bHR1cmUuIEkgaG9wZSBteSBjb3VudHJ5IGFuZCBvdGhlcnMgZm9sbG93IHN1aXQgc29vbi4gCk5vdGhpbmc6IElmIHlvdXIgaG9sZCBjYXJkcyBhcmUgdW5zdWl0ZWQgYW5kIGxvd2VyIHRoYW4gYXQgbGVhc3QgMSBvZiB0aGUgY2FyZHMgaW4gdGhlIGZsb3AsIHlvdSBoYXZlIDYgb3V0cyB0byBhY2hpZXZlIGEgcGFpci4gRm9yIGV4YW1wbGUsIHNheSB5b3UgZHJldyBhIDUgYW5kIGEgOS4gQW55IG9mIHRoZSAzIHJlbWFpbmluZyA1J3Mgb3IgOSdzIGluIHRoZSBkZWNrIHdvdWxkIGdpdmUgeW91IGF0IGxlYXN0IGEgcGFpci4gCkkgYXJndWUgdGhhdCBjaGFydHMgYXJlIG5vdCBhIGdyZWF0IGlkZWEgaW4gZ2VuZXJhbCwgYmVjYXVzZSB0aGV5IGRvbiB0YWtlIGFjY291bnQgZm9yIG90aGVyIGZhY3RvcnMuIApTZWNyZXQgYmVoaW5kIEtvdXJuaWtvdmEKREFOTlkgTWNIdWdoIGFycml2ZWQgYmFjayBvbiBJcmlzaCBzb2lsIGxhc3QgRnJpZGF5IGF0IHRoZSBlbmQgb2YgYSB3ZWVrIGhlIG5vdCBsaWtlbHkgdG8gZm9yZ2V0LiBIaXMgaG9saWRheSBpbiBFbmdsYW5kIGhhZCBiZWVuIHNob3J0ZXIgdGhhbiBwbGFubmVkIGJ1dCBoZSB3YXNuIGNvbXBsYWluaW5nLiBIYXZpbmcgYm9va2VkIGEgZmxpZ2h0IGZvciBsYXN0IFN1bmRheSB3ZWVrLCBoaXMgcHJvZ3Jlc3MgaW4gdGhlIFBhZGR5IFBvd2VyIElyaXNoIFBva2VyIE9wZW4ga2VwdCBoaW0gaW4gdGhlIEJ1cmxpbmd0b24gSG90ZWwgaW4gRHVibGluLiBCeSB0aGUgdGltZSBoZSBjYXVnaHQgYSBmbGlnaHQgb24gVHVlc2RheSwgaGUgaGFkIGZpbmlzaGVkIGZvdXJ0aCBpbiB0aGUgcHJlc3RpZ2lvdXMgZXZlbnQgYW5kIGhhZCBzcGVuZGluZyBtb25leSEKQWxsIGl0IG1lYW5zIGlzIHRoYXQgeW91IHJ1bm5pbmcgYmVsb3cgRVYgaW4gQUxMIElOIHNpdHVhdGlvbnMuIApTaGUgcm91bmRlZCBvdXQgdGhlIGRheSB3aXRoIGEgTWNEb25hbGQncyB2YW5pbGxhIGNvbmUgKDE3MCBjYWxvcmllcykgZm9yIGRlc3NlcnQuIFRoZSB0b3RhbCBjYW1lIHRvIDEsNTYwIGNhbG9yaWVzLkFzIHRpbWUgd2VudCBieSwgRGFyZGFyaWFuIGRldmVsb3BlZCBhIHBhdHRlcm4uVGhlcmUgd2VyZSBmb29kcyBvbiB0aGUgTWNEb25hbGQncyBtZW51IHRoYXQgRGFyZGFyaWFuIGRpZCBub3QgbGV0IHBhc3MgaGVyIGxpcHMsIGluY2x1ZGluZyB0aGUgZG91YmxlIGNoZWVzZWJ1cmdlciAoNDQwIGNhbG9yaWVzKTsgdGhlIGRvdWJsZSBxdWFydGVyIHBvdW5kZXIgd2l0aCBjaGVlc2UgKDc3MCBjYWxvcmllcyksIHRoZSBiaWcgYnJlYWtmYXN0IHdpdGggaG90Y2FrZXMgKDEsMzUwKSBhbmQgdGhlIE1jRmx1cnJ5ICg1MTAgZm9yIHRoZSBPcmVvIGZsYXZvcikuIkkgbmV2ZXIgb3JkZXJlZCBhIGRvdWJsZSBvZiBhbnl0aGluZywiIHNoZSBzYWlkLCBleHBsYWluaW5nIHRoYXQgaGF2aW5nIHR3byBidXJnZXJzIHJlc3VsdHMgaW4gdG9vIG11Y2ggaGlnaCBmYXQgcHJvdGVpbiBmb3JvbmUgbWVhbC4iSXQncyBjYWxsZWQgYSBkb3VibGUgZm9yIGEgcmVhc29uLiAKTXJzIExlYWRzb20sIG1lYW53aGlsZSwgd2FzIGNyaXRpY2lzZWQgZm9yIGhlciByZXNwb25zZSB0byBhIHJlcXVlc3QgZm9yIGEgcGFybGlhbWVudGFyeSBkZWJhdGUgb24gSXNsYW1vcGhvYmlhLi4gClllcywgSSBzdGlsbCBpbiBWZWdhcyBhbmQgSSBzdXBwb3NlIHRoYXQgaGFzIG1lIHRoaW5raW5nIGFib3V0IGhvdyBvdXQgb2YgcGxhY2UgSSBhbSBoZXJlLiBJIG5ldmVyIGZlZWwgbW9yZSBsaWtlIGEgTmV3IFlvcmtlciB0aGFuIHdoZW4gSSBlbnRlciB0aGUgdXBzaWRlIGRvd24gd29ybGQgdGhhdCBpcyBMYXMgVmVnYXMuIE15IHN0dXBpZGx5IHNvbWJlciBjbG90aGVzIG9mIGJsYWNrIGFuZCBicm93biBjbGFzaCB3aXRoIHRoZSBwYXN0ZWwgbWluaSBza2lydHMgYW5kIHN0aWxldHRvIGhlZWxzIHRoYXQgY29uc3RpdHV0ZSBkYWlseSBhdHRpcmUgZm9yIGV2ZXJ5b25lIGJldHdlZW4gdGhlIGFnZXMgb2YgMTAgYW5kIDc1LiBIZXJlIHBlb3BsZSBvcGVubHkgZHJpbmsgYnJlYWtmYXN0LCBnYW1ibGUgYXdheSB0b25zIG9mIG1vbmV5LCBhbmQgc2VlbSB0byBoYXZlIG5vdCBnb3R0ZW4gdGhlIG1lbW8gdGhhdCBhbGxvd2luZyB0aG91c2FuZHMgb2YgcGVvcGxlIHRvIGNoYWluIHNtb2tlIGluIGVuY2xvc2VkIHNwYWNlcyBpcyBub3QgYSBnb29kIGlkZWEuCldoZW4gdGhleSB3ZXJlIGxlYXZpbmcgYmFjayBpbiBTZXB0ZW1iZXIsIHNoZSBrZXB0IHRlbGxpbmcgbWUgc2hlIGNvdWxkIGJlIGF0IG15IGhvdXNlIGluIGhvdXJzIGlmIEkgbmVlZGVkIGFueXRoaW5nLCBhbmQgb2YgY291cnNlIHNoZSBtZWFudCBpZiBJIG5lZWRlZCB0byBkbyBhbnl0aGluZyB3aXRob3V0IGJhYnkuIEkgZG9uJ3QgdGhpbmsgc2hlJ2xsIGtpZG5hcCBoZXIsIGJ1dCBJIGFtIHdvcnJpZWQgaXQncyBnb2luZyB0byBiZSBhIHBvd2VyIHN0cnVnZ2xlIHVudGlsIG15IGRhdWdodGVyIGNhbiBzcGVhayB1cCBmb3IgaGVyc2VsZi4gClRvIGZpbmQgdGhlIGJlc3Qgb25saW5lIHBva2VyIHJvb21zIHRvIHBsYXkgcG90IGxpbWl0IG9tYWhhIHlvdSB3YW50IHRvIGZpbmQgb3V0IHdoYXQgcHJvIHBva2VyIHBsYXllcnMgYXJlIHRoZSBub3JtYWwgcGxheWVycyBhcmUgZm9sbG93aW5nLiBXaGljaCBvbmxpbmUgcG9rZXIgcm9vbSBpcyB0aGUgcHJvZmVzc2lvbmFsIHBva2VyIHBsYXllciBpcyBwbGF5aW5nIGFuZCB3aG8gaXMgc3BvbnNvcmluZyBoaW0gb3IgaGVyLiBPbmNlIHlvdSBmaW5kIG91dCB0aGlzIHlvdSB3YW50IHRvIGtub3cgd2hpY2ggb2YgdGhlIHBva2VyIHJvb21zIGhhdmUgdGhlIG1vc3QgYWN0aW9uIGF0IHRoZSBzdGFrZXMgeW91IHBsYXkuIApDb21tZXJjaWFsIHVzZXJzIGluY2x1ZGUgY29tcGFuaWVzLCBvcmdhbmlzYXRpb25zLCBpbnN0aXR1dGlvbnMsIHBhcnRuZXJzaGlwcywgZ292ZXJubWVudCBkZXBhcnRtZW50cywgYXNzb2NpYXRpb25zIGFuZCBzb2NpZXRpZXMsIHRydXN0cyBhbmQgb3RoZXIgZW50aXRpZXMsIHdoZXRoZXIgcmVnaXN0ZXJlZCBvciB1bnJlZ2lzdGVyZWQsIHByaXZhdGUgb3IgcHVibGljLCBhbmQgd2hldGhlciBmb3IgcHJvZml0IG9yIG5vdCBmb3IgcHJvZml0IHRoYXQgdXNlIFNjb29wIENvbnRlbnQgaW4gYW55IHByb2Zlc3Npb25hbCBjYXBhY2l0eS4zLjMuMi4gCldlIGhvcGUgeW91IHNlZSBOYXR1cmUgUGF0aCBhcyBhIHN0cm9uZyBmaXQgdG8gY3JlYXRlIHN1c3RhaW5hYmxlIGpvYnMsIGJvb3N0IHRoZSBncmVlbiBlY29ub215IGFuZCBmdXJ0aGVyIGVzdGFibGlzaCBWYW5jb3V2ZXIgZ2xvYmFsIHJlcHV0YXRpb24gYXMgYW4gaW5ub3ZhdGl2ZSwgaGVhbHRoeSBhbmQgbGl2YWJsZSBjaXR5LiBtYXkgcmVtZW1iZXIgTmF0dXJlIFBhdGggd2hlbiBpdCBiZWdhbiBpbiB0aGUgYmFjayBvZiBMaWZlc3RyZWFtIFJlc3RhdXJhbnQgYXQgNHRoIEF2ZW51ZSBhbmQgQnVycmFyZCBTdHJlZXQgaW4gMTk4NS4gCldpdGggYSBmb2N1cyBvbiB0aGUgY3JlYXR1cmUgY29tZm9ydHMgdHJlbmQgd2l0aCBhIHNtYWxsZXIgZm9vdHByaW50LCBzcGFjZSBlZmZpY2llbnQgZ3Vlc3Ryb29tcyBmZWF0dXJlIHBsdXNoIGJlZGRpbmcsIGhpZ2ggZGVmaW5pdGlvbiBmbGF0IHNjcmVlbiBUVnMsIGlIb21lIHN0YXRpb25zIGFuZCBzcGEgaW5zcGlyZWQgc2hvd2Vycy4gSGFyZCBzdXJmYWNlIGZsb29yaW5nIHdpdGggYXJlYSBydWdzIGNyZWF0ZSBhIGZyZXNoLCByZXNpZGVudGlhbCBmZWVsLiBHdWVzdHJvb20gZnVybml0dXJlIGlzIHRpbnRlZCBpbiBzaGFkZXMgb2Ygb3JhbmdlIGFuZCBncmVlbiB0byBtaXJyb3IgdGhlIGJlYXV0eSBvZiB0aGUgbG9jYWwgbWFuZ3JvdmUgdHJlZXMuCkZJTEUgUEhPVE8gZGF0ZWQgQXByaWwgMjAwNy4gRklMRTogVGFtYXJhIEVjY2xlc3RvbmUgaXMgcmVwb3J0ZWRseSBjb25zaWRlcmluZyBwdXJjaGFzaW5nIHRoZSBzZWNvbmQgbW9zdCBleHBlbnNpdmUgaG9tZSBpbiBBbWVyaWNhICAgdGhlIEZsZXVyIGRlIEx5cyBlc3RhdGUgaW4gSG9sbWJ5IEhpbGxzIGZvciAkMTI1IG1pbGxpb24uIFRoZSBoZWlyZXNzIGRhdWdodGVyIG9mIEZvcm11bGExIHR5Y29vbiBCZXJuaWUgRWNjbGVzdG9uZSBzZWVtcyB0byBiZSBwYXJ0aWNpcGF0aW5nIGluIHNvbWUgc2libGluZyByaXZhbHJ5IGFmdGVyIGhlciB5b3VuZ2VyIHNpc3RlciBib3VnaHQgdGhlIG1vc3QgZXhwZW5zaXZlIGhvbWUgaW4gQW1lcmljYSwgVGhlIE1hbm9yLCBmb3IgJDg1IG1pbGxpb24uIApEb24ndCBnbyB3aG9sbHkgcmF3LiBZZXMsIHRoZXJlIGFyZSBsZWdpdGltYXRlIHJlYXNvbnMgdG8gZW5qb3kgcmF3IHBsYW50cyBpbiB5b3VyIGRpZXQsIGJ1dCBJIGRvbid0IHN1cHBvcnQgdGhlIHByYWN0aWNlIGFzIGEgbW92ZW1lbnQgb3IgZXhjbHVzaW9uYXJ5IHByaW5jaXBsZSBmb3IgZWF0aW5nLiBIdW1hbnMgaGF2ZSBiZWVuIGNvb2tpbmcgZm9yIHdlbGwgb3ZlciBhIGh1bmRyZWQgdGhvdXNhbmQgeWVhcnMuIFNvbWUgbnV0cmllbnRzIGFyZSBlbmhhbmNlZCBieSBoZWF0LiBTb21lIGFudGkgbnV0cmllbnRzIChsaWtlIGxlY3RpbnMpIGFyZSBhdCBsZWFzdCBwYXJ0aWFsbHkgImRpc2FybWVkIiBieSBpdC4gQ29va2luZyBtZXRob2RzIHdpdGggYSBtaW5kIHRvd2FyZCBtYXhpbWl6aW5nIG92ZXJhbGwgbnV0cmllbnQgdmFsdWUgYW5kIGJpb2F2YWlsYWJpbGl0eSBtYWtlIGdvb2QgUHJpbWFsIHNlbnNlIGFuZCBjYW4gbG93ZXIgeW91ciBleHBvc3VyZSB0byBsZWN0aW5zLgpDb25maWRlbmNlIGlzIGV2ZXJ5dGhpbmcgdG8gYSBnaXJsL2JveS4gV2hlbiB5b3Ugd2FsayBhbmQgZ2V0IHR1cm5lZCBkb3duLiBUcnkgbm90IHRvIGdldCBkb3duLiBMb29rIGFyb3VuZC4gUmVncm91cC4gVGhlcmVzIHByb2JhYmx5IGFub3RoZXIgZ2lybCB3aG8gZ290IHlvdXIgYXR0ZW50aW9uIHRvby4gSGF2ZSBhIHNpdCBmb3IgYSBtaW51dGUuIENvbGxlY3QgeW91cnNlbGYuIFRyeSBhZ2Fpbi4gSGFyZGVzdCBwYXJ0IGlzIGdldHRpbmcgYSBjb252ZXJzYXRpb24uIE9uY2UgeW91IGRvIHRoaXMgYSBmZXcgdGltZXMgeW91IHdvbid0IGV2ZW4gdGhpbmsgYWJvdXQgaXQgYW5kIHRhbGtpbmcgdG8gZ2lybHMgeW91IGxpa2UgYmVjb21lcyBtb3JlIG5hdHVyYWwuCkl0IGFsc28gaGFzIGFuIElQUyBzY3JlZW4gZm9yIHdpZGVyIHZpZXdpbmcgYW5nbGVzLiBUaGUgU1NEIHdpbGwgaGVscCB0byBzcGVlZCB1cCB0aGUgbGFwdG9wIGFzIHdlbGwuIFlvdSBjYW4gYWRkIGFuIEhERCBsYXRlciBvbiBpZiB5b3UgbmVlZCBtb3JlIHN0b3JhZ2UuCjMwIEluY2ggUm91bGV0dGUgV2hlZWwgQ3JpdGljYWwgT3ZlcnZpZXcKQXMgdGhlIG5ldyBmYWNlIG9mIFRlYW0gQ2xpbnRvbiAgIHRoZW4gdGhlIG1vc3QgcG93ZXJmdWwgYnJhbmQgaW4gRGVtb2NyYXRpYyBwb2xpdGljcyAgIHNoZSBjb3VsZCBidWlsZCB1cCB0aGUgbW9tZW50dW0gYW5kIG1vbmV5IG5lZWRlZCB0byBsb2NrIHVwIHRoZSBub21pbmF0aW9uIGJlZm9yZSB0aGUgdm90ZXJzIHdlcmUgY29uc3VsdGVkLgpFeGFtcGxlcyBvZiBSZWhhYiBDb3Vuc2VsaW5nIEludGFrZSBJbnRlcnZpZXcgUXVlc3Rpb25zCkkgYW0gbm90IHJlc3BvbnNpYmxlIGZvciB5b3VyIGFjdGlvbnMgeW91IG1ha2UuIApIb3BlIHRoYXQgbmV2ZXIgaGFwcGVucywgYnV0IHlvdSBuZXZlciBrbm93Li4gClNvIHRoaXMgbW9ybmluZyBJIGxhemluZyBvbiB0aGUgY291Y2ggd2hlbiBhIGZhcnQgaXMgY29taW5nIG9uLiAKRGFucyBsJ2VtYnJvdWlsbGFtaW5pIGRlIGxhIGRzaW5mb3JtYXRpb24gYWN0dWVsbGUsIGlsIGVzdCBzYW5zIGR1dGUgaW51dGlsZSBkZSBzZSBmYXRpZ3VlciAgdm91bG9pciB0aXJlciAgYXUgY2xhaXIgcG91ciBsJ2luc3RhbnRKZSByYXBwZWxsZSBxdSdpbCB5IGEgZGVzIGxtZW50cyB0b3V0ICBmYWl0IGdyYW5kaWxvcXVlbnRzIGRhbnMgbGEgcHJkaWN0aW9uIHRyYW5zbWlzZSBwYXIgbGUgZ29zc2UuRCdhYm9yZCB1biByZXRvdXJuZW1lbnQgdW5pdmVyc2VsIGRlcyBOYXRpb25zIGNvbnRyZSBsJ3RhdCBzaW9uaXN0ZSBlc3QgaW1wZW5zYWJsZSAgc2kgYnJ2ZSBjaGFuY2UuIEV0IHB1aXMgaWwgeSBhIGxlIG1vbnQgZGVzIG9saXZpZXJzIGNlbnMgcydvdXZyaXIgZW4gZGV1eCBtYWlzIHBvdXIgcXVvaSBmYWlyZSA6IHNlIHJlZmVybWVyIHN1ciBsZXMgdml2YW50cyBxdWkgIHRyYXZlcnMgbGUgbW9uZGUgYXVyb250IHQgcHJvdGcgcGFyIGxldXIgb2JzZXJ2YXRpb25zIGRlcyBjb21tYW5kZW1lbnQgbm9hY2hpdGVzIGF1IGN0IGRlcyBqdWlmcyBwaWV1eC4gQXUgZm9uZCBjJ2VzdCBsZSBCdWdhcmFjaCAgbCdlbnZlcnMgISBRdW9pcXVlIGdyb3NzaXJlbWVudCBtYXRyaWFsaXN0ZSBsJ2lkZSBkJ3VuIGVubHZlbWVudCAiZXh0cmF0ZXJyZXN0cmUiIHJlc3BlY3RhaXQgbCdjb25vbWllIHN5bWJvbGlxdWUgcXVpIHBsYWNlIGxlIENpZWwgY29tbWUgc3VwcmlldXIgIGxhIHRlcnJlLiAKTGlrZSwgaWYgeW91IGRvbiBsaWtlIHN1cnByaXNlcywgbWF5YmUgd2FpdCBtb3JlIHRoYW4gYSBmZXcgZGF5cyB0byBtYWtlIGhpbSB5b3VyIGJveWZyaWVuZD9UaGF0IHNhaWQsIHRoZSByZWQgZmxhZ3MgaGVyZSBhcmUgdGhhdCB5b3UgZmlnaHRpbmcgNiB3ZWVrcyBpbnRvIHRoZSByZWxhdGlvbnNoaXAsIHlvdSBhcmUgaW4gYSByZWxhdGlvbnNoaXAgNiB3ZWVrcyBpbnRvIHRoZSByZWxhdGlvbnNoaXAsIGFuZCBoZSBkb2VzbiBmZWVsIGxpa2UgaGUgaGFzIGNvbnRyb2wgb3ZlciBoaXMgbWVudGFsIGlsbG5lc3MsIG5vdCB0aGUgbWVudGFsIGlsbG5lc3MgaXRzZWxmLkNhbGVvICAxNyBwb2ludHMgIHN1Ym1pdHRlZCA0IGRheXMgYWdvVWJpcXVpdGkgaGFyZHdhcmUgaXMgZGVjZW50LiBVbmlmaSBjb250cm9sbGVyIG9uIHRoZSBvdGhlciBoYW5kIGlzIGEgZGlzZ3VzdGluZywgamF2YSBiYXNlZCB0dXJkIG9mIGEgc29mdHdhcmUgc29sdXRpb24uU2hvcnQgc3Rvcnkgb2YgbXkgcmVjZW50IHBlcnNvbmFsIGV4cGVyaWVuY2Ugdy8gVW5pZmkgY29udHJvbGxlcjogQWZ0ZXIgMiBob3VycyBvZiBmaWdodGluZyB0byBnZXQgaXQgd29ya2luZyB3ZWxsIG9uIGEgV2luZG93cyBzZXJ2ZXIgVk0gKGp1c3Qgd2FudGVkIGl0IHRvIHJ1biBhcyBhIHNlcnZpY2Ugc3RhcnQgYXV0b21hdGljYWxseSkuIApTcGVudCB0aGUgd2VlayBlbmQgaSBzcGVudCBTdW5kYXkgd2l0aCBSYXkgU2hvd2VycyBhbmQgd2l0aCAxMSBpZW5kIGluIFRoZXkgd2VyZSBjIGZvcm1lcicgMSBtb3QhIG1hbiwgY29udGFpbmluZyAxR08gcG91bmRzIG9mIGJ1dHRlcmZhdCwgdGhlIGluc3RpdHV0ZSBzdGF0ZXMsIG9yIGp1c3QgYWJvdXQgZW5vdWdoIHRvIG1lZXQgdGhlIHJlcXVpcmVtZW50cyBvZiBhIGZhbWlseSBvZiBmb3VyIHdpdGggbWlsaywgYnV0dGVyLCBjaGVlc2UsIGljZSBjcmVhbSBhbmQgY29uZGVuc2VkIG1pbGsuIEEgZGF1Z2h0ZXIgb2YgYSBoaWdoIHByb2R1Y3Rpb24gIHNpcmUsIGZlZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIG1ldGhvZHMgYWR2b2NhdGVkIGJ5IHRoZSBzdGF0ZSBhZ3JpY3VsdHVyYWwgY29sbGVnZSwgd2lsbCBwcm9kdWNlIGFyb3VuZCBzaXggdGhvdSAgc2FuZCBwb3VuZHMsIGFuZCBoZXIgb2Zmc3ByaW5nIHVuZGVyIHRoZSBzYW1lIGNvbmRpdGlvbnMgaW4gdHVybiBzaG91bGQgbm90IGZpbmQgaXQgaW1wb3NzaWJsZSB0byBicmluZyBoZXIgcHJvICBkdWN0aW9uIHRvIHRobyBlaWdodCB0aG91c2FuZCBwb3VuZCBtYXJrIHBlciB5ZWFyLiBTaG91bGQgUGVubnN5bHZhbmlhIGZhcm1lcnMgYWRvcHQgaW50ZXJlc3RpbmcgSSB0aGUgYWR2YW5jZWQgcHJhY3RpY2VzIG91dGxpbmVkIGFib3ZlLCBpbnRyIGlvbmxWIGFib3V0IGhhbGYgb0MgdGhvIGNvd3MgTGl0dGxlIE1pbGRyZWQgc29sbyBhbmQgTWlzcyBMYW5jYXN0ZXIgY291bnR5LiAKRXBpZ2VuZXRpY3MgaXMganVzdCBiZWdpbm5pbmcgdG8gc29ydCBvdXQgdGhlIGNvbXBsZXggbW9sZWN1bGFyIHN5bXBob255IHRoYXQgdGFrZXMgcGxhY2Ugd2hlbiBodW1hbnMgaW50ZXJhY3Qgd2l0aCB0aGVpciBlbnZpcm9ubWVudC4gQnV0IGFzIFNpc3NvbiBzbWFydGx5IHBvaW50cyBvdXQsIHRoZXJlIGlzIGVub3VnaCBkYXRhIGF2YWlsYWJsZSB0byBsYXkgb3V0IGEgZmV3IGNhdXRpb25hcnkgdGFsZXMgbGlrZSBob3cgY2VydGFpbiBmb29kcywgY291cGxlZCB3aXRoIGluYWN0aXZpdHksIGNhbiBnaXZlIHJpc2UgdG8gZGlzZWFzZSBjYXVzaW5nIGNlbGx1bGFyIG11dGF0aW9ucyBhcyB3ZWxsIGFzIHRvIHByb3ZpZGUgc29tZSBiZW5lZmljaWFsIHRpcHMsIGxpa2UgaG93IG1vZGVyYXRlIGxldmVscyBvZiBzdW4gZXhwb3N1cmUgY2FuIGhlbHAgcHJldmVudCBtZWxhbm9tYS4uIApJbiBteSB3b3JzdCB0aW1lcyBiZWZvcmUgdGhpcyB0aW1lIEkgbmV2ZXIgd2VudCBvbiBhIHN0cmV0Y2ggbGlrZSB0aGlzLiBFdmVyeXRoaW5nIHRoYXQgY291bGQgYm91bmNlIHRoZSBvdGhlciB3YXkgaGFzLiBJcyB0cnlpbmcgdG8gc3RheSBwb3NpdGl2ZSwgYnV0IHlvdSBjYW4gdGVsbCBpdCBib3RoZXJpbmcgaGltIGEgYml0LiAKTWl0aGlsYSBQYWxrYXIgd2FzIHNwb3R0ZWQgZm9yIHRoZSBmaXJzdCB0aW1lIG9uIG9uZSBzdWNoIGF0dGVtcHQgZnJvbSBGaWx0ZXIgQ29weS4gIlRoZSBzaG93IGRpZCBub3QgZG8gd2VsbCBhdCBhbGwsIGJ1dCBzaGUgd2FzIGJyaWxsaWFudCBpbiBpdC4gV2UgdXNlZCBhIGxvdCBvZiBkYXRhIGxpa2UgdGhlIGNvbW1lbnRzLCBoaWdoIHBvaW50cyBldGMuIHRvIGFuYWx5c2UgZWFjaCBiaXQgb2YgY29udGVudC4gQWxsIHRoaXMgZ290IHVzIHRvIHJlbGVhc2UgdGhlIGZpcnN0IHNlYXNvbiBvZiBMaXR0bGUgVGhpbmdzLCIgU3VyZXNoIGFkZGVkLgpUbyBiZWdpbiB5b3UgbmVlZCB0byBjb25zaWRlciBob3cgbWFueSBwbGF5ZXJzIGFyZSBpbiB0aGUgcG9rZXIgcm9vbS4gVGhlIG1vcmUgcGxheWVycyB0aGVyZSBhcmUgYXQgdGhlIHRhYmxlIHRoZSBtb3JlIGxpa2VseSBpdCBpcyBnb2luZyB0byBiZSB0aGF0IGEgc2ltcGxlIDIgcGFpciBjb3VsZCB3aW4uIEJ1dCB0aGUgZmV3ZXIgdGhlIHBsYXllcnMgdGhlIGhpZ2hlciB5b3VyIGhhbmQgcmFuayB3aWxsIGhhdmUgdG8gYmUgdG8gd2luLgpNYWduZXNpdW0gaXMgdGhlIGZvdXJ0aCBtb3N0IGFidW5kYW50IG1pbmVyYWwgaW4gdGhlIGJvZHkgYW5kIGlzIGVzc2VudGlhbCB0byBnb29kIGhlYWx0aC4gQXBwcm94aW1hdGVseSA1MCUgb2YgdG90YWwgYm9keSBtYWduZXNpdW0gaXMgZm91bmQgaW4gYm9uZS4gVGhlIG90aGVyIGhhbGYgaXMgZm91bmQgcHJlZG9taW5hbnRseSBpbnNpZGUgY2VsbHMgb2YgYm9keSB0aXNzdWVzIGFuZCBvcmdhbnMuIApXaGVuIHRoaW5ncyBzdGFydCB0byBmZWVsIGxpa2UgeW91J3JlIG9uIHRoZSB3cm9uZyBwYXRoLCBwYXkgYXR0ZW50aW9uIHRvIHRob3NlLiAKVGhhdCB3aWxsIGZyZWUgdXAgc29tZSB0aW1lIGFuZCBuZXJ2ZXMgdG8gY29vayBmb3IgeW91LiBBbmQgdGhlIHJlc3Qgb2YgdGltZSBuZWVkZWQgSSB0YWtlIG91dCBvZiBvdGhlciBjaG9yZXMuIFNvcnJ5LCBkYXJsaW5nLCBJIGNvdWxkIG9ubHkgZG8gb25lIGxvYWQgb2YgbGF1bmRyeSBhbmQgSSBkaWQgdGhlIGtpZCBUaGV5IG5lZWQgbWUgdG8gZG8gaXQsIGJ1dCB5b3UgYSByZXNwb25zaWJsZSBncm93biB1cCwgc28gSSBjb3VsZCBwb3N0cG9uZSB5b3Vycy4gClByYWN0aWNlLCBwcmFjdGljZSwgcHJhY3RpY2UuIElmIHlvdSB3ZXJlIGJvcm4gcGVyZmVjdGx5IGN1bm5pbmcgYW5kIHJ1dGhsZXNzLCB5b3UgbWF5IGJlIGEgcHN5Y2hvcGF0aC4gTGlrZSBhbnkgb3RoZXIgc2tpbGwsIGN1bm5pbmcgaXMgc29tZXRoaW5nIHRoYXQgbW9zdCBwZW9wbGUgaGF2ZSB0byB3b3JrIGF0LiAKU2FtZSB3aXRoIDc3IG9yIEpUcy4gCldlIHdlbnQgdG8gc2Nob29sIGFuZCBwYWlkIGxvdHMgb2YgbW9uZXkgdG8gbGVhcm4gaG93IHRvIGRvIHdoYXQgd2UgZG8uIE1vc3QgY2xpZW50cyBoYXZlIHNtZWxseSBmZWV0IGZyb20gYmVpbmcgaW4gYm9vdHMgYWxsIGRheSwgYW5kIHNvbWUgaGF2ZSBvdGhlciBncm9zcyBzdHVmZiB3ZSBqdXN0IGRpc21pc3MgYW5kIHJlYWxpemUgZXZlcnlvbmUgaXMgaHVtYW4uLiAKQmlnLCBsaWZlIGxpa2UgQmV0dHkgQmx1ZSB3aWxsIGJlIHRoZXJlLiAKU2luY2UgdGhpcyBhbmFsb2d5IGxlZnQgYSBiYWQgdGFzdGUgaW4geW91ciBtb3V0aCBoZXJlIGFyZSBzb21lIG90aGVycy4uIApSeWFuIGxhaWQgbXVjaCBvZiB0aGUgZm91bmRhdGlvbiBmb3IgdGhlIHNob3csIGNvbnRyaWJ1dGluZyBzdWNoIGNvbmNlcHRzIGFzIFRoZSBWYW5pbGxhIFRlc3QsIEJDU00sIFJPVFRZLCBhbmQgdGhlIFRpbWUgVHJhdmVsaW5nIFN1cGVyIENvbXB1dGVyLiAKSXQgdW5jbGVhciBleGFjdGx5IGhvdyBhbGwgb2YgdGhpcyBoYXBwZW5lZC4gCkZvciB0aGUgc2FrZSBvZiByZW1vdmFsIHRob3VnaCwgcmVkIGlzIHN1cHBvc2VkIHRvIGJlIHRoZSB3ZWFrZXN0LCBvbmx5IGhhdmUgYml0cyBvZiBzb2Z0IHJlbW92YWwuIFRoZXkgY2FuIGNoYW5nZSB0aGUgYXR0YWNrIHRhcmdldCBvZiB0aGVpciBoZXJvLCBtb2RpZnkgZW5lbWllcyB3aXRoIGxlc3MgYXJtb3IgYW5kIGF0dGFjaywgb3IgZ2l2ZSB0aGVpciBoZXJvZXMgY2xlYXZlIG9yIHRhdW50IHBsdXMgcmV0YWxpYXRlIHRvIGRlYWwgd2l0aCBtb3JlIGF0dGFja2VycywgYnV0IHRoZXNlIGFsbCBvZmZlciB0aGUgb3Bwb25lbnQgdGhlIGFiaWxpdHkgdG8gcmVzcG9uZCBhZnRlciB0byBzYXZlIHRoZWlyIHVuaXRzLiAKVGhlIGdvdmVybm1lbnQgY2FuIGFmZm9yZCB0byBzaGVkIHR3byBzZWF0cywgd2hpbGUgTGFib3IgbXVzdCBuZWFybHkgZG91YmxlIGl0cyBzZXZlbiBzZWF0cyB0byBib3VuY2UgYmFjayBpbnRvIHBvd2VyIGZvbGxvd2luZyBhIGRydWJiaW5nIGluIDIwMTQuIFRoZSBUYXNtYW5pYW4gR3JlZW5zIGNvdWxkIGxvc2Ugb25lIG9mIHRoZWlyIHRocmVlIHNlYXRzIGFmdGVyIGEgY2FtcGFpZ24gZGV2b2lkIG9mIGEgY2VudHJhbCBlbnZpcm9ubWVudGFsIGlzc3VlIHRvIHJhbGx5IGFyb3VuZCwgd2hpbGUgdGhlIEphY3F1aSBMYW1iaWUgTmV0d29yayBwcmVmZXJlbmNlcyBtYXkgbWFrZSB0aGluZ3MgaW50ZXJlc3RpbmcuIE1lYW53aGlsZSwgYSBib2xkIHBsYW4gdG8gc3RyaXAgcG9rZXIgbWFjaGluZXMgZnJvbSBwdWJzIGFuZCBjbHVicyBjb3VsZCBwcm92ZSBhIHRydW1wIGNhcmQgZm9yIHRoZSBvcHBvc2l0aW9uLiAKSSBjZXJ0YWlubHkgbm90IGFnYWluc3QgZXh0ZW5kZWQgZmFtaWx5IG1lbWJlcnMgbG92aW5nIGFsbCB0aGVpciB5b3VuZ2VyIGFuZCBlbGRlciByZWxhdGl2ZXMhIEZhciBmcm9tIGl0LiBNYXliZSBpdCBhIGN1bHR1cmFsIHRoaW5nIGJ1dCBtb3N0IHBlb3BsZSBJIGtub3cgdmFsdWUgYW5kIGxvdmUgdGhlaXIgY2hpbGRyZW4gbW9yZSB0aGFuIHRoZWlyIHNpYmxpbmdzIHRob3VnaC4gRm9yIGFsbCBJIHByb3VkIG9mIG15IG5pZWNlIG5lcGhldyBhY2NvbXBsaXNobWVudHMsIEkgbW9yZSBwcm91ZCBvZiBteSBzb25zIFdoaWxlIEkgd291bGQgbW91cm4gdGhlIHBhc3Npbmcgb2YgbXkgbmllY2UvbmVwaGV3LCBpdCBiZSBub3RoaW5nIGNvbXBhcmVkIHRvIHRoZSBkZXZhc3RhdGlvbiBJIHdvdWxkIGZlZWwgYXQgbG9zaW5nIG9uZSBvZiBteSBib3lzLgpJdCBhIGJldHJheWFsLiAKVGhpbmsgSW0gc2FmZSBhbmQgc3RhcnQgcHVsbGluZyB0aGUgZGljayBvZmYgbXkgc2VsZi4gCkFmdGVyIGdldHRpbmcgcmVib3JuIGFnYWluLCB0aGUgTW9uZXkgTWFuIHBlcmZlY3RlZCB0aGUgYWN0IG9mIGEgYmFkIGJveSB2aWxsYWluIGFuZCBhbXBsaWZpZWQgaXQgaW4gdGhlIG1lZGlhIGV2ZXJ5IGNoYW5jZSBoZSBjb3VsZCBnZXQuIApIZSBoYWQgYSBoYXJkIHRpbWUgaW4gY29sbGVnZTsgZGlkbid0IGxpa2UgaGlzIG1ham9yIGJ1dCBkaWRuJ3QgaGF2ZSBhbnkgb3RoZXIgaWRlYXMsIGhhZCBhIGhhcmQgdGltZSBiZWluZyBtb3RpdmF0ZWQgdG8gYXR0ZW5kIGNsYXNzLCBldGMuIFRoZSBmaW5hbCBzdHJhdyB3YXMgd2hlbiBoZSBlbmRlZCBhIHNlbWVzdGVyIGFuZCB3YXMgdHJ5aW5nIHRvIGdldCByZWFkeSBmb3IgdGhlIG5leHQgc2VtZXN0ZXI6IGhlIHdhcyBkcm9wcGVkIGJ5IHRoZSBzY2hvbGFyc2hpcCB0aGF0IHdhcyBwYXlpbmcgaGlzIHR1aXRpb24gZm9yIG5vdCBtYWtpbmcgYWJvdmUgYSAzLjUuCkZ1cnRoZXJtb3JlLCBhcyBJIHBvaW50ZWQgb3V0IHRoZW4sIHRoZXJlIGlzIG5vIGFjdHVhbCBFVklERU5DRSBvZiB0aGUgYW5kcm9nZW4gd2FzaCBpbiB0aGUgd29tYiAgYSBoeXBvdGhlc2lzLiBPbmx5IHdheSB0byB0ZXN0IHN1Y2ggYSBoeXBvdGhlc2lzIHdvdWxkIGJlIHRvIHN0aWNrIGFtbmlvdGljIG5lZWRsZXMgaW50byBwcmVnbmFudCB3b21lbiBiZWxsaWVzIGF0IHZhcmlvdXMgdGltZXMgYW5kIHRoZW4gc2VlIGZpbmdlciBsZW5ndGggb2YgdGhlIGNoaWxkcmVuIGFmdGVyIGJpcnRoLiAKSGFzdHkgZGVjaXNpb25zIGRvIG5lZWQgdG8gYmUgbWFkZSBpZiBhIG1vZCBhY2NvdW50IGlzIGplb3BhcmRpemVkLiBSZW1vdmFscyBzaG91bGQgbm90IGJlIG1hZGUgaW4gdGhlIGRhcmssIGJ1dCBvY2Nhc2lvbmFsbHksIGhhcyB0byBoYXBwZW4uIFdoYXQgd2UndmUgYWxsIGFsd2F5cyBiZWVuIGdvb2QgYXQgaXMgcmVhY2hpbmcgY29uc2Vuc3VzOyBiaWcgb3Igc21hbGwuIFRoaXMgaXMgd2hhdCB3YXMgZG9uZSBvbiB0aGUgRGlzY29yZCBjaGFubmVsLiBObyBkZW1vY3JhdGljIG9yZyBpcyBwZXJmZWN0LCBidXQgd2hhdCB3ZSBjYW4gYWx3YXlzIHJlbWluZCBvdXJzZWx2ZXMgdG8gYmUgYmV0dGVyIGF0IGlzIGNvbW11bmljYXRpbmcuIFdoZXJlIHRoZXJlIGlzIHVuY2VydGFpbnR5LCB3ZSBwb2xsIG91ciBmZWxsb3cgbW9kIG1pbmRzLgpXaGVuIHlvdSBlbmNvdW50ZXIgYSB0YWxsIHJvY2ssIGRyb3AgdGhyb3VnaCB0aGUgaG9sZSB0byB0aGUgbG93ZXIgbGV2ZWwgYW5kIGNvbnRpbnVlIGxlZnQuIApBbnl3YXksIHRoZSBNYWdpc3RyYXRlcycgQXNzb2NpYXRpb24gd2FzIGRlZXBseSBzbmlmZnkgYWJvdXQgdGhlIHdob2xlIHN1YmplY3QuIERvZyByYWNpbmcgd2FzIGRlc2NyaWJlZCBhcyBhICJjdXJzZSIuIE1lZXRpbmdzIGF0dHJhY3RlZCB1bmRlc2lyYWJsZXMgYW5kIHRoZSB0cmFja3Mgd2VyZSBhIGNvbnN0YW50IHRlbXB0IGF0aW9uIHRvIGdhbWJsaW5nLgpUaGUgdHdvIHJlY2VudCB0ZXJyb3Igc3RyaWtlcywgb25lIG9uIGxhd3llcnMgYW5kIHRoZSBvdGhlciBvbiBwb2xpY2VtZW4sIGluIFBha2lzdGFuIGhhdmUgYm90aCBiZWVuIGNsYWltZWQgYnkgdGhlIElTLiAKVG9kYXkgVmV0ZXJhbiBJbnRlbGxpZ2VuY2UgUHJvZmVzc2lvbmFscyBmb3IgU2FuaXR5IGFyZSBjb250aW51aW5nIHRvIHB1c2ggZm9yIHRoZSBwcm9zZWN1dGlvbiBvZiBDaGVuZXkgZm9yIGx5aW5nIG5vdCBqdXN0IGFib3V0IHRvcnR1cmUsIGJ1dCBhYm91dCB0aGUgbmVlZCBmb3IgaW52YWRpbmcgSXJhcSBpbiB0aGUgZmlyc3QgcGxhY2UuIEluIG90aGVyIHdvcmRzLCBDaGVuZXkgS05FVyBmdWxsIHdlbGwgdGhhdCB0aGVyZSB3ZXJlIG5vIFdlYXBvbnMgb2YgTWFzcyBEZXN0cnVjdGlvbiBpbiBJcmFxIGJlY2F1c2UgdGhlIENJQSB3YXMgdGVsbGluZyBoaW0gdGhlcmUgd2VyZSBub25lLiBDaGVuZXkgc3VwcHJlc3NlZCB0aGF0IGludGVsbGlnZW5jZSB0byBjb25jb2N0IGEgc3RvcnkgdGhhdCBubyBvbmUgd2hvIGtuZXcgYW55dGhpbmcgYWJvdXQgSXJhcSBiZWxpZXZlZCBhbmQgdGhlbiBzb2xkIGl0IHRvIENvbmdyZXNzIHdpdGggYSBzaWRlIG9mIEJTLgpBZnRlciBvbmUgbGFzdCByb3VuZCBvZiBiZXR0aW5nLCBwbGF5ZXJzIHN0aWxsIGluIHdpbGwgcmV2ZWFsIHdoYXQgdGhleSBoYXZlLiAKSWYgeW91IHdhbnQgdG8gc2VlIHRoaW5ncyBsaWtlIHRoaXMgY2hhbmdlLCBpdCBkb2Vzbid0IHN0YXJ0IGJ5IGJsYW1pbmcgdGhlIGNvcHMuIEl0IHN0YXJ0cyBieSB5b3Ugdm90aW5nIGFuZCBjYW1wYWlnbmluZyBpbiB5b3VyIGNpdGllcywgY291bnRpZXMgYW5kIHN0YXRlcyBmb3IgdGhlIGxlZ2FsaXphdGlvbiBvZiBtYXJpanVhbmEgbWF5YmUgcmVjcmVhdGlvbmFsbHkgYnV0IGRlZmluaXRlbHkgbWVkaWNhbGx5LgpUaGUgbW9zdCBlZmZlY3RpdmUgYW50aSBjaGVhdCBmb3Igd2FsbGhhY2tzIGlzIHN0aWxsIG5vdCBkaXN0cmlidXRpbmcgaGlkZGVuIGluZm9ybWF0aW9uIHRvIHRoZSBjbGllbnQgYW5kIG9ubHkgYWxsb3dpbmcgdGhlIHNlcnZlciB0byBrbm93IHRoZSBmdWxsIGdhbWUgc3RhdGUuIEJ1dCBhcHBhcmVudGx5IGluIEZQUyB0aGlzIGlzIHRvbyBzbG93L3RvbyBkZW1hbmRpbmcgZm9yIHRoZSBzZXJ2ZXIuIEluIE1PQkFzIGl0IG1vc3RseSB3b3JrcyAoc29tZXRpbWVzIHNlcnZlciBzdGlsbCBleHBvc2UgdG9vIG11Y2ggbWV0YWluZm8gd2hpY2ggdGhlIGNsaWVudC9jaGVhdCBjYW4gZGVyaXZlIHBvc2l0aW9uaW5nIGZyb20gZXRjKS4gCk15cmlhbSwgYXQgZmlyc3QgYmV3aWxkZXJlZCwgInN0YXJlcyBhdCB0aGUgYnJvd24gc2tlbGV0b24sIGl0cyByb3VuZCBzcGluZSwgaXRzIHNoYXJwIGJvbmVzLCBpdHMgc21vb3RoIHZlcnRlYnJhZS4gSXRzIHRoaWdocyBoYXZlIGJlZW4gdG9ybiBvZmYsIGJ1dCBpdHMgdHdpc3RlZCBsaXR0bGUgd2luZ3MgYXJlIHN0aWxsIHRoZXJlLCB0aGUgam9pbnRzIGRpc3RlbmRlZCwgY2xvc2UgdG8gYnJlYWtpbmcgcG9pbnQuIFRoZSBzaGlueSwgeWVsbG93aXNoIGNhcnRpbGFnZSByZXNlbWJsZXMgZHJpZWQgcHVzLiAKSSBkb24gZGVhbCB3aXRoIGl0IGFueW1vcmUsIGJ1dCBJIGZlZWwgaXQgYW4gZXhoYXVzdGluZyB3YXkgdG8gbGl2ZS4uIApTbyB3aGF0J3MgdGhlIGJlc3Qgc291cmNlIG9mIGluZm9ybWF0aW9uIG9yIHBsYXRmb3JtIGZvciBsZWFybmluZyBwb2tlcj8gV2VsbCBldmVyeW9uZSBoYXMgZ290IHRoZWlyIG93biBsZWFybmluZyBoYWJpdHMgYW5kIGEgbGlrZSBmb3IgcmVzb3VyY2VzLCBidXQgdGhpcyBhcnRpY2xlIHdpbGwgZm9jdXMgb24gbGVhcm5pbmcgcG9rZXIgb25saW5lLiBUaGVyZSBhcmUgbWFueSB3ZWJzaXRlcyB0aGF0IG9mZmVyIGNvbXByZWhlbnNpdmUgcG9rZXIgbGVhcm5pbmcgcmVzb3VyY2VzLiBTdGFydGluZyBmcm9tIGJlZ2lubmVycyBhbmQgbW92aW5nIHRvIGFkdmFuY2VkIGxldmVscywgZnJvbSB0cmlhbCBnYW1lcyB0byB0b3VybmFtZW50IGdhbWVzLCBmcm9tIGZyZWUgZ2FtZXMgdG8gY2FzaCBnYW1lcywgeW91IHdpbGwgbW9zdCBsaWtlbHkgZmluZCB3aGF0IHlvdSBhcmUgbG9va2luZyBmb3IuCkRlZmljaWVuY3kgY291bGQgYWRkIEx5Y2l1bSBmcnVpdCBmb3IgaXRzIGFiaWxpdHkgdG8gbm91cmlzaCB0aGUgZXllcy4KSSB3YXMgb24gYSBjYXN1YWwgZGF0ZSB3aXRoIGEgZ2lybCBJIGhhZCBqdXN0IHN0YXJ0ZWQgdGFsa2luZyB0by4gClRoZXJlIGEgbWljcm8gZnVsbCByaW5nIGZvcnVtIHRoYXQgb25lIG9mIHRoZW0gc2l0cyBpbiBhbmQgYW5vdGhlciBvbmUgdGhhdCBJIHRoaW5rIGlzIHN1cHBvc2VkIHRvIGJlIHNpeCBtYXggYnV0IHRoZSBkaXN0aW5jdGlvbnMgYXJlIHNvbWV3aGF0IHVuY2xlYXIgYW5kIHRoZXNlIGZvcnVtcyBhcmUgbm93aGVyZSBuZWFyIGFzIGFjdGl2ZSBhcyB0aGV5IHVzZWQgdG8gYmUuLiAKQnV0IGlmIEkgaGFkIHRvIG9wZW4gb25lIGRyaXZlIGFuZCBsb2FkIGEgc3ByZWFkc2hlZXQganVzdCB0byBsb29rIGF0IHRoZSBydW5uaW5nIHRvdGFscywgeW91IGNhbiBiZXQgSSB3b3VsZCBub3QgYmUgYm90aGVyaW5nIGJ1ZGdldGluZyBhdCBhbGwuIApGZW5ib2IgIDAgcG9pbnRzICBzdWJtaXR0ZWQgMTAgaG91cnMgYWdvClNvLCBJIGRvbid0IGtub3cuIEkga25vdyB0aGF0IHRoZSBtb25leSBpcyBzaXR0aW5nIGp1c3QgaW4gZnJvbnQgb2YgbWUgc3RhcmluZyBhdCBtZS4gCk9uZSBvZiB0aGUgZmFzdGVzdCBncm93aW5nIHN1cmdlcmllcyBpbiB0aGUgVVMgaXMgbGFiaW9wbGFzdHkgb3IgdmFnaW5vcGxhc3R5LiBUaGVzZSBzdXJnaWNhbCBpbnRlcnZlbnRpb25zIHJlc2hhcGUgdGhlIHZhZ2luYSwgdHVjayB0aGUgaW5uZXIgbGFiaWEgaW50byB0aGUgb3V0ZXIsIHRpZ2h0ZW4gdGhlIHZhZ2luYWwgY2FuYWwuIFRoZXkgYXJlIG1lYW50IHRvIGdpdmUgYWxsIHdvbWVuIHdoYXQgYSBmcmllbmQgb25jZSBjYWxsZWQgInRoZSB0d2F0IG9mIGEgdG90LiIgUGVyaGFwcyBub3QgYSB0b3QsIGJ1dCBhdCBsZWFzdCBhIHByZXB1YmVzY2VudC4KSG93ZXZlciwgSSBmZWVsIHRoYXQgeW91IHdpbGwgYmVuZWZpdCBmcm9tIGEgc3RvcmUgd2l0aCBhIGxvdCBvZiB2YXJpZXR5IGFuZCBkaXNjb3VudGVkIHByaWNlcy4gRm9yIHRoaXMgcmVhc29uLCBJIGhpZ2hseSByZWNvbW1lbmQgdXNpbmcgUG9rZXIgU3RhcnMgRGlyZWN0LiAKT25lIGRheSBhIGZldyBraWRzIHdlcmUgdGFsa2luZyBpbiBjbGFzcyBzbyBvdXIgYXNzIG9mIGEgbWF0aCB0ZWFjaGVyIGRlY2lkZWQgdGhhdCB3ZSBzb21laG93IGFsbCBkZXNlcnZlZCB0byBnZXQgcHVuaXNoZWQuIApBdHRhY2sgdQpJIHRvb2sgQ1NUIDEgYmVjYXVzZSBJIHdvcmsgaW4gYSBjaGlyb3ByYWN0aWMgb2ZmaWNlIGFuZCBtb3N0IG9mIHRoZWlyIHBhdGllbnRzIGFyZSBteSBjbGllbnRzICBJIHRob3VnaHQgaXQgd2FzIHRoZSBwZXJmZWN0IGZpdC4gVGhlIG9ubHkgcHJvYmxlbSBpcyBubyBvbmUgaGFzIHRoZSBwYXRpZW5jZSBhbnltb3JlIGluIGEgZGF5IGluIGFnZSB3aGVyZSB3ZSBoYXZlIGluc3RhbnQgZ3JhdGlmaWNhdGlvbiBvdmVyIHNpbXVsdGFuZW91cyBwbGF0Zm9ybXMgdG8gc2l0IHN0aWxsIGFuZCBub3QgZmVlbCBhbnkgcGh5c2ljYWwgb3V0d2FyZCBtb3ZlbWVudCByaWdodCBhd2F5LiAKVGhlIHZlbnRpbGF0aW9uIGhvbGVzIGtlZXAgdGhlbSBhaXJ5IGV2ZW4gaW4gaG90IHRlbXBlcmF0dXJlcy4gVGhleSByZXZlbCBpbiB2aWRlb3Mgb2YgQ3JvY3MgYmVpbmcgYnVybmVkIG9yIHNocmVkZGVkIHdpdGggc2Npc3NvcnMuLiAKVGhlIHdhcnJhbnR5IHdhcyBiZXR0ZXIgb24gYSBNaWVsZSBhbmQgdGhleSBnYXZlIHVzIGZyZWUgYmFncyBvbiB0b3Agb2YgcHJpY2UgbWF0Y2hpbmcuIEknbSB0aGUgZW5kLCBJIHRoaW5rIEkgd291bGQgaGF2ZSByZWdyZXR0ZWQgdGhlIFJpY2NhciBpZiBmb3IgdGhlIHNpbXBsZSBmYWN0IHRoYXQgaXQncyBhIGhlYXZ5IHZhY3V1bSB0aGF0IHRha2VzIHVwIGEgbG90IG9mIHNwYWNlLiBNeSBNaWVsZSBpcyB2ZXJzYXRpbGUgYW5kIG5pY2UgYW5kIGNvbXBhY3QuCkEgbnVtYmVyIG9mIGdhbWVzIHVzZSBqb2tlcnMgb3Igb3RoZXIgY2FyZHMgYXMgd2lsZCBjYXJkcy4gQW4gYWNlIGNhbiBhbHNvIGJlIHVzZWQgYXMgb25lIGluIHBva2VyIHR3byB3YXlzLCB5b3UgY2FuIGhhdmUgYSBzdHJhaWdodCAxLDIsMyw0LDUuIApSZWFkIGFuZCBmb2xsb3cgdGhlVGVybXMgT2YgU2VydmljZWxpbmtlZCBhdCB0aGUgYm90dG9tIHJpZ2h0IG9mIGVhY2ggcGFnZS4gWW91IGFyZSBzb2xlbHkgcmVzcG9uc2libGUgZm9yIHlvdXIgY29uZHVjdCBhbmQgeW91ciBjb250ZW50IG9uIHRoZSBOZXR3b3JrIGFuZCBjb21wbGlhbmNlIHdpdGggdGhlc2UgdGVybXMuIEJ5IHJlZ2lzdGVyaW5nIHdpdGggdXMgb3IgdXNpbmcgb3IgYnJvd3NpbmcgdGhpcyBOZXR3b3JrLCB5b3UgYWNrbm93bGVkZ2UgdGhhdCB5b3UgaGF2ZSByZWFkLCB1bmRlcnN0b29kLCBhbmQgYWdyZWUgdG8gYmUgYm91bmQgYnkgdGhlc2UgdGVybXMuIApJdCB3YXMgZXF1YWxseSB0aHJpbGxpbmcgdG8gc2VlIHdpbmVtYWtlciBHZW5ldmlldmUgSmFuc3NlbnMgaW4gdGhlIGNpdHkuIFRoZSBsb25ndGltZSBSb2JlcnQgTW9uZGF2aSBlbXBsb3llZSwgaW5leHBsaWNhYmx5IGF0dGVuZGluZyBoZXIgZmlyc3QgVmFuY291dmVyIEludGVybmF0aW9uYWwgV2luZSBGZXN0aXZhbCwgc2VlbWVkIHRoZSByaWdodCBwZXJzb24gdG8gY2xvc2UgdGhlIGZvdXIgZGVjYWRlIGZlc3RpdmFsIGxvb3Agc3RhcnRlZCBieSB0aGUgUm9iZXJ0IE1vbmRhdmkgZmFtaWx5IGluIDE5NzkuIEt1ZG9zIHRvIHRoZSBSb2JlcnQgTW9uZGF2aSBDYWJlcm5ldCBTYXV2aWdub24gMjAxNSAoTmFwYSBWYWxsZXksIENhbGlmb3JuaWEsIFVuaXRlZCBTdGF0ZXMgJDQ1Ljk5KS4uIApJdCBsaXRlcmFsbHkgb25seSB3aGVuIHdlIGdvIG91dCBzb21ld2hlcmUuIElmIHNvbWV0aGluZyBzY2FucyBhcyBiZWluZyAkMC4wNSBtb3JlIHRoYW4gaXQgc2hvdWxkLCBvciBpZiB0aGUgZm9vZCBpcyBzbGlnaHRseSB3cm9uZyAoYW5kIG9mIGNvdXJzZSBzaGUgZ2l2ZXMgdGhlIG1vc3QgaW1wb3NzaWJsZSBvcmRlcnMpLCBzaGUgc3RhcnRzIHNjcmVhbWluZyBhdCB0aGUgcG9vciBjYXNoaWVycyBhbmQgd2FpdGVycy4gU2hlIGFsc28gYmVsaWV2ZXMgdGhhdCAidGlwcyBoYXZlIHRvIGJlIGVhcm5lZCIgYW5kIHdpbGwgZ28gb3V0IG9mIGhlciB3YXkgdG8gZmluZCBhIHJlYXNvbiB0byBub3QgdGlwIHNvbWVvbmUuCldlIGRpZCBvdXIgYmVzdCB0byBrZWVwIHRoaXMgY2xhc3NpZmllZCBhbmQgaGVsZCB0aGVtIHByaXNvbmVyLiBJdCB3YXNuJ3QgcmlnaHQgYnV0IHdlIGRpZCB3aGF0IHdlIGhhZCB0byBkbyBmb3IgdGhlIGdvb2Qgb2YgbWFua2luZC4gCkkgZmluZCBpdCBiZXN0IHRvIHVzZSB3aG9sZSBwZWVsZWQgdG9tYXRvZXMgYXMgdGhleSBjb250YWluZWQgbW9yZSB0b21hdG9lcyBwZXIgY2FuIHRoYW4gcHJvY2Vzc2VkIG9uZXMoY2hvcHBlZCwgcHVyZWQsIGV0Yy4gClRoYW5rIHlvdTsgaG9uZXN0bHkgSSBub3QgcmVhbGx5IHN1cmUgd2hlcmUgdG8gZ28gZnJvbSBoZXJlLiBhdCB0aGlzIHBvaW50LCBiYXNlZCBvbiBteSBmYW1pbHkgcmVzcG9uc2UsIGl0IHNlZW1zIGxpa2UgYW55IGZ1cnRoZXIgYWN0aW9uIHdvdWxkIGJlIHN0ZXBwaW5nIG92ZXIgYSBsaW5lIHVubGVzcyBpdCBpbiByZWdhcmQgdG8gZmluYW5jZXMuCkd3ZW4gU3RlZmFuaSBiZWdhbiBoZXIgc3VjY2Vzc2Z1bCBzb2xvIGNhcmVlciBpbiAyMDA0IHdpdGggdGhlIHJlbGVhc2Ugb2YgaGVyIDgwcyBzdHlsZSBzb2xvIGQgYWxidW0gTG92ZS4gQW5nZWwuIE11c2ljLiBCYWJ5LiBTaGUgaGFkIGZpdmUgaGl0cyBvbiB0aGUgeWVhciBlbmQgY2hhcnRzLCBhbmQgb25lIDEgb24gdGhlIEhvdCAxMDAgd2l0aCAiSG9sbGFiYWNrIEdpcmwiIGluIDIwMDUuIEJlZm9yZSBoZXIgc3VjY2VzcyBhcyBhIHNvbG8gYXJ0aXN0LCBzaGUgaGFkIGZvdXIgaGl0cyBkdXJpbmcgdGhlIDIwMDBzIGFzIGxlYWQgc2luZ2VyIG9mIHRoZSBwb3B1bGFyIHJvY2sgZ3JvdXAsIE5vIERvdWJ0LCBvbiB0aGUgeWVhciBlbmQgY2hhcnRzIHdpdGggIkhleSBCYWJ5IiwgZmVhdHVyaW5nIEJvdW50eSBLaWxsZXIsICJIZWxsbyBHb29kIiBhbmQgIlVuZGVybmVhdGggSXQgQWxsIiwgZmVhdHVyaW5nIExhZHkgU2F3LCBpbiAyMDAyLCBhbmQgIkl0J3MgTXkgTGlmZSIgaW4gMjAwNC4KU2hlIGhhZCB0ZW4gaGl0cyBvbiB0aGUgeWVhciBlbmQgY2hhcnRzLiBMbywgcnVsZWQgYm90aCB0aGUgcG9wdWxhciBtdXNpYyBhbmQgSG9sbHl3b29kIG1vdmllIHNjZW5lcyBkdXJpbmcgdGhlIDIwMDBzLiBTaGUgaXMgYSBzdGFyIGluIGV2ZXJ5IHNlbnNlIG9mIHRoZSB3b3JkLiAKVGhleSBsb29rIG91dCBvZiBubyBmYWNlLCBidXQsIGluc3RlYWQsIGZyb20gYSBwYWlyIG9mIGVub3Jtb3VzIHllbGxvdyBzcGVjdGFjbGVzIHdoaWNoIHBhc3Mgb3ZlciBhIG5vbmV4aXN0ZW50IG5vc2UuIAonJ0kgdGhpbmsgdGhlIGZ1bmRpbmcgbW9kZWwgZm9yIG1vc3QgY2x1YnMgaXMgYmFzZWQgYXJvdW5kIHBva2VyIG1hY2hpbmVzIGFzIGFuIGluY29tZSwnJyBDciBSYW5raW4gc2FpZCAnJ1RoZSBidXNpbmVzcyBtb2RlbCBhdCBUaGUgTGlua3MgaXMgbm90IHdvcmtpbmcgLiBpbnRyb2R1Y2luZyB0aGlzIGVsZW1lbnQgb2YgZ2FtaW5nIGNhbiBwdXQgdGhlIGNsdWIgYmFjayBpbnRvIHRoZSBibGFjay4gJydDb3VuY2lsIGhhcyBsaWNlbmNlcyBhbmQgc2hvdWxkIHVzZSB0aGVtLicnIENyIFNhbGliYSBzYWlkIHRoYXQgZHVyaW5nIE1vbmRheSBuaWdodCdzIGNvbmZpZGVudGlhbCBtZWV0aW5nICcnYSBjb21wZWxsaW5nIGFyZ3VtZW50Jycgd2FzIGdpdmVuIGFuZCBzYWlkIHRoZSBjb3VuY2lsIHdhcyBhbHJlYWR5IHByb3ZpZGluZyBnYW1ibGluZyB0aHJvdWdoIEtlbm8gYW5kIFRBQiBmYWNpbGl0aWVzLiAKSSBjYWxsZWQgdGhlIE5ldmFkYSBUZXN0IFNpdGUgSGlzdG9yaWNhbCBGb3VuZGF0aW9uIGFuZCBzcG9rZSB0byBpdHMgQXJjaGl2aXN0LCBNcy4gClRvIG1ha2UgdGhhdCBjb25jcmV0ZSwgSSdtIGEgdGVycmlibGUgcGxheWVyIHdoZW4gcGxheWluZyBhICQzMC8zIHNpdCBhbmQgZ28gdG91cm55IG9uIFBQLCBtb3N0bHkgYmVjYXVzZSBJIGRvbid0IGNhcmUgaWYgSSBsb3NlIGFuZCBpZiBJJ20gZ29pbmcgdG8gd2luIEknbSBnb2luZyB0byBkbyBpdCBmYXN0IHdpdGggY3JhenkgY2FsbHMgYW5kIGFsbCBpbnMuLiAKTWFzcyBzaG9vdGluZ3MgaGFwcGVuIG92ZXIsIGFuZCBvdmVyLCBhbmQgb3ZlciwgYW5kIG92ZXIsIGJ1dCB3ZSBzdGlsbCBlbmQgdXAgcGFyYWx5emVkIGJ5IHRoZSBzYW1lIHNxdWFiYmxpbmcgb3ZlciB3aGF0IHRvIGRvLi4gClNoZSB3YXNuJ3QgcmVwZWF0aW5nIHRoaW5ncyBoZXIgZmF0aGVyIG9yIEkgaGFkIHNhaWQsIGp1c3QgZGlhZ25vc2luZyBtYWxlIGRlZ2VuZXJhY3kgd2hlcmUgc2hlIHNhdyBpdC4gV2UgYm90aCBjb3VsZCBub3Qgc3RvcCBsYXVnaGluZyBhbmQgd2Ugd2VyZSBqdXN0IGxpa2UsIHdlIGxvdmUgeW91LCBwbGVhc2UgbmV2ZXIgc3RvcCBraW5rIHNoYW1pbmcgb3RoZXJzLCBsZXQncyBnbyBidXkgeW91IHNvbWV0aGluZy4gSSBsaXRlcmFsbHkgY2Fubm90IGltYWdpbmUgbXkgY2hpbGQgYWxsb3dpbmcgaGVyc2VsZiB0byBiZSBwcmVzc3VyZWQgaW50byBhbnl0aGluZyBieSBhbnkgcGVlciwgZXZlci4gCkdsYWQgdG8gaGVhciB5b3Ugbm90LiAKV2FuZGVyZXJzIFNraXR0bGUgVGVhbQpXZSBoYXZlIGluc3RpdHV0ZWQgdGV4dCBmbGFpciBmb3IgdXNlcnMgdG8gZGVub3RlIHRoZWlyIHJlbGlnaW8gc3Bpcml0dWFsIHBoaWxvc29waGljYWwgYmFja2dyb3VuZCBjdXN0b21pemVkIHRvIHRoZWlyIG93biBwcmVmZXJyZWQgc3BlY2lmaWNpdHkuIENsaWNrIHRoZSAiKGVkaXQpIiBuZXh0IHRvIHlvdXIgdXNlcm5hbWUgdG8gdHlwZSBpbiB5b3VyIGN1c3RvbWl6ZWQgZmxhaXIsIGlmIHlvdSBsaWtlLgpEJ2Fib3JkIG1kdXMsIGwnYW5jaWVuIG51bXJvIDEgbW9uZGlhbCBzZSBsYWlzc2UgdG90YWxlbWVudCBhbGxlciwgc2UgZGhhbmNoYW50IGdhaWVtZW50LiBFdCBjb21tZSBTZXJlbmEgV2lsbGlhbXMsIHF1aSBhdmFpdCB0b3VybiBkYW5zIGxlIGNsaXAgZGUgIlNvcnJ5IiwgYSBkYW5zIGNvbW1lIHVuZSBkZXNzZSwgbGUgcHVibGljIGEgdm90IEJyb29rbHluIERlY2tlciBwb3VyIGNldHRlIGJhdHRsZS4gVW5lIHBldGl0ZSBpbmp1c3RpY2UgdGFudCBsYSBwZXJmb3JtYW5jZSBkJ0FuZHkgUm9kZGljayBzdXIgIlRvdGFsIEVjbGlwc2Ugb2YgdGhlIEhlYXJ0IiBkZSBCb25uaWUgVHlsZXIgdGFpdCBlbGxlIGF1c3NpIHJlbWFycXVhYmxlLiAKQXJiZWl0ZSB3ZWl0ZXIgYW4gZGVpbmVtIFNwaWVsIHVuZCB2ZXJzdWNoZSBlcyBlcm5ldXQuIERhcyBpc3Qga2VpbmUgU2NoYW5kZS4uIApEYW5uIGltIEdlc3ByY2ggenUgZnJhZ2VuIHNlaXQgd2FubiBtYWNodCBrZWluZW4gZ3V0ZW4gRWluZHJ1Y2suCkNhbid0IHdhaXQgZm9yIG9ubGluZSBwb2tlciB0byByb2xsIG91dCBpbiBQQSBpbiBhIGZldyBtb250aHMhIQpIYXZlIGJlZW4gaG92ZXJpbmcgYXJvdW5kIHRoZSAkMiwwMDAgc3F1YXJlIGZvb3QgcmFuZ2UuIApVbmQgYWxsZWluIHdlZ2VuIGRlciBVbnp1ZnJpZWRlbmhlaXQgc2VpdGVucyBkZXIgIENhc2lubyAgaGFiZW4gZGllIHMgZW5vcm1lIEJldHJnZSBkYXJhdWYgdmVyd2VuZGV0LCBoaWVyIGVpbmUgTHN1bmcgenUgaGVyYmVpenVmaHJlbi4gSW4gZGllc2VtICBDYXNpbm8gd2VyZGVuIGRpZSBIbmRlIGdlbmF1c28gZXJ6ZXVndCwgd2llIGluIGRlbiBlY2h0ZW4iIENhc2lub3MuIEhpZXJmciBoYXQgR2lvaWEgendlaSBzcGV6aWVsbGUgUHJvZHVrdGUgZW50d2lja2VsdCAoQ3V0IE4gU2h1ZmZsZSB1bmQgR2FtZSBDaGVjaykuLiAKU0EgaXMgbm8gc2FpbnQsIHlvdSBtYXkgbm90IHdhbnQgaGltIGxpdmluZyBuZXh0IGRvb3IuIEJ1dCBhbnkgamFjayBhIGNhbiBzZWUgaG93IGhlIHdhcyByYWlscm9hZGVkIGluIHRoZSBUSCBjYXNlLiBBZ2FpbiBpdCBhbGwgYm9pbHMgZG93biB0byBvbmVzIGh1bWFuaXR5LiAKV2FzIGhpcyBzcG90LCBSYWNoZWwgc2FpZC4gCkFuZCBvdGhlciB3b21lbiBoYXZlIHBvaW50ZWQgdG8gcm9tYW50aWMgcmVsYXRpb25zaGlwcyB3aXRoIGhpbSwgaW5jbHVkaW5nIE9sYSBSYXksIGNvIHN0YXIgb2YgdGhlIHZpZGVvLCB3aG8gc2FpZCB0aGV5IG1hZGUgb3V0LiAKU2FtZSB3aXRoIEFmcmljYW5zIGFuZCBNaWRkbGUgRWFzdCBwZW9wbGUuIEFyYWJzIHNvbWV0aW1lIHNtZWxsIGJlY2F1c2UgdGhleSB1c2Ugd2FhYWF5IHRvbyBtdWNoIGNvbG9nbmUgb3IgcGVyZnVtZSwgYnV0IEkgbmV2ZXIgZXhwZXJpZW5jZWQgZm91bCBuYXR1cmFsIGJvZHkgb2RvdXIgZnJvbSB0aGVtIHdoZW4gSSBsaXZlZCB3aXRoIEFyYWJzIGluIFVuaS4gCllvdSBhc2tlZCBpbiB0ZXJtcyBvZiBtYXNzLCBzbyB3ZSBuZWVkIHRvIGdldCB0aGF0IGluIHRoZXJlLiAKUnVlIFNhaW50IExhemFyZS4gQSBsJ2luaXRpYXRpdmUgY29uam9pbnRlIGQndHVkaWFudHMsIGRlIGxhIE1haXJpZSBkdSA5ZSBlbiBwYXJ0ZW5hcmlhdCBhdmVjIGwnYXNzb2NpYXRpb24gOWUgSGlzdG9pcmUgZG9udCBsZSBwcnNpZGVudCBlc3QgYXVzc2kgbGUgQ29uc2VpbGxlciBkJ2Fycm9uZGlzc2VtZW50IGVuIGNoYXJnZSBkZSBsYSBjdWx0dXJlLCBsYSBtYW5pZmVzdGF0aW9uICBMYSBydWUgU2FpbnQgTGF6YXJlIGNvbW1lIHZvdXMgbGUgbCdhdmV6IGVuY29yZSBqYW1haXMgdnVlICBlc3Qgb3JnYW5pc2UgY2Ugc2FtZWRpIDMgbWFpIGVudHJlIDEwaCBldCAxN2guIEMnZXN0IHVuZSBpbml0aWF0aXZlIGludHJlc3NhbnRlLCBjZSBxdWFydGllciBldCBjZXR0ZSBydWUgZW4gcGFydGljdWxpZXIgdGFudCB0cnMgcmljaGUgZCd1biBwYXNzIG1hbCBjb25udSBzb3V2ZW50LgpQcmVwYXJhdGlvbihVc2luZyBsYXZlbmRlciBhcyBhbiBleGFtcGxlKS4KVGhlcmUgY29udGludWluZyBlZHVjYXRpb24gY2xhc3NlcyB0aGF0IHlvdSB0YWtlIGV2ZXJ5IHllYXIuIApPcmlnaW5hbGx5LCBUaW0gd2FzIG5vdCBwYXJ0IG9mIHRoZSBLaWNrc3RhcnRlciBhbmQgYXMgc3VjaCB3YXNuIGFkdmVydGlzZWQsIEhvd2V2ZXIgYWZ0ZXIgYSBjb21tZW50IG9uIG9uZSBvZiBvdXIgcHJldmlvdXMgcG9zdHMgb24gUmVkZGl0IHdlIGRlY2lkZWQgdG8gc2xvd2x5IG1vZGVsIGhpbSBpbiB0aGUgYmFja2dyb3VuZCBhbmQgcmVsZWFzZSBoaW0gYXMgYW4gYWRkaXRpb25hbCBmcmVlYmVlIGZvciB0aGUgc3VwcG9ydCwgdGhhbmtzIGFub255bW91cyByZWRkaXRvciEKQnV0IGlzIGFueW9uZSBleHBlY3RpbmcgYSBydXNoIHRvIHRoZSBiYXJyaWNhZGVzPyBMZXQgdXMgYmUgdW5kZXIgbm8gc3VjaCBpbGx1c2lvbi4KSSBjb3VsZG4ndCBtYWtlIGl0IHBhc3QgbGlrZSAzMCBtaW4gb3Igc28sIGJ1dCBiYXNpY2FsbHkgdGhlc2UgNiBvciBzbyBtZWQgc3R1ZGVudHMgZ2V0IHRoZSBpZGVhIHRoYXQgdGhleSdyZSBnb25uYSBtYWtlIG1vbmV5IGJ5IGNyZWF0aW5nIHNvbWUgcG9rZXIgc3VwZXIgdGVhbSB3aXRoIGFjZSBhcyB0aGUgYWN0dWFsIHBsYXllci4gCkhhbWlsdG9uIGZhY2luZyBtb3JlIHRoYW4gb25lIHByb2JsZW0KTWFuc2NhcGluZyBpcyBhdmFpbGFibGUgZm9yICQyMCB3aXRoIGFueSBtYXNzYWdlIHNlc3Npb24uIApWYWNjaW5lcyBhcmUgbm90IG1hZ2ljLiBBcyBJIG1lbnRpb25lZCBiZWZvcmUsIGl0IHRha2VzIG11bHRpcGxlIHNob3RzIG92ZXIgeWVhcnMgZm9yIHRoZW0gdG8gd29yaywgYW5kIGNoaWxkcmVuIGFyZSBtb3JlIHN1c2NlcHRpYmxlIHRvIGRpc2Vhc2VzIGJ5IGRlZmF1bHQuLiAKQnVzaW5lc3MgUGFydG5lcnMuIFdlIG1heSBhbHNvIHNoYXJlIHlvdXIgaW5mb3JtYXRpb24gd2l0aCBidXNpbmVzcyBwYXJ0bmVycyB0byBwcm92aWRlIHlvdSB3aXRoIHNlcnZpY2VzIHRoYXQgeW91IHJlcXVlc3QuIEZvciBleGFtcGxlLCBpZiB5b3Ugc2lnbiB1cCBmb3IgYSBwcm9tb3Rpb24gdGhhdCBydW5zIG9uIG91ciBTZXJ2aWNlcyBidXQgdGhhdCBpcyBzcG9uc29yZWQgb3IgY28gc3BvbnNvcmVkIGJ5IGFub3RoZXIgY29tcGFueSwgeW91ciBpbmZvcm1hdGlvbiBtYXkgYmUgc2hhcmVkIHdpdGggdGhhdCBzcG9uc29yLiBUaGUgV2FzaGluZ3RvbiBQb3N0IGlzIG5vdCByZXNwb25zaWJsZSBmb3IgdGhlIHByaXZhY3kgcHJhY3RpY2VzIG9mIHRoZXNlIGVudGl0aWVzLgpLYWxtIHNhaWQgc29tZSBjaGFyaXRpZXMgd291bGQgaW5pdGlhbGx5IHN1ZmZlciBpZiB0aGUgcnVsZXMgZ28gaW50byBlZmZlY3QsIGJ1dCB0aGF0IHRoZXkgY291bGQgY29udGludWUgcmFpc2luZyBmdW5kcyBieSBob3N0aW5nIHRoZSBldmVudHMgYXQgb3RoZXIgbG9jYXRpb25zLgpJbiBvcmRlciB0byBldmFsdWF0ZSBvdmVyYWxsIHRyZWF0bWVudCBlZmZlY3RpdmVuZXNzIGFuZCBjb3N0cywgcmVzZWFyY2hlcnMgdXNlIHRoZSBRdWFsaXR5IEFkanVzdGVkIExpZmUgWWVhciAoUUFMWSkgdG8gY29tcGFyZSBvdXRjb21lcy4gQSB2YWx1ZSBvZiAxIHdvdWxkIGJlIHN5bXB0b20gZnJlZSBvciAicGVyZmVjdCIgaGVhbHRoLCBhIDAgd291bGQgYmUgZGVhdGgsIGFuZCAwLjUgd291bGQgbWVhbiBtb2RlcmF0ZSBwYWluIHdoaWNoIGxpbWl0cyBzb21lIHNlbGYgY2FyZSBhYmlsaXRpZXMuIFRoZSB0b3RhbCBjb3N0cyBvZiBhIHRyZWF0bWVudCB0aGF0IHlpZWxkcyBhbiBhZGRpdGlvbmFsIHllYXIgb2YgaWRlYWwgaGVhbHRoIGRldGVybWluZXMgdGhlIGNvc3QgcGVyIFFBTFkuIFRoaXMgaW5jcmVtZW50YWwgY29zdCBlZmZlY3RpdmVuZXNzIHJhdGlvIGNhbiB0aGVuIGJlIHVzZWQgdG8gZGV0ZXJtaW5lIHRoZSBjb21wYXJhdGl2ZSB2YWx1ZSBvZiB2YXJpb3VzIHRyZWF0bWVudHMuIEludGVydmVudGlvbnMgd2l0aCBjb3N0IGVmZmVjdGl2ZW5lc3MgcmF0aW9zIGJlbG93ICQ1MDAwMCB0byAkMTAwMDAwIHBlciBRQUxZIGFyZSBnZW5lcmFsbHkgY29uc2lkZXJlZCB0byBiZSBjb3N0IGVmZmVjdGl2ZS4KQW5kIE1FRyBFbmVyZ3kgQ29ycC4gCklmIHNvbWVib2R5IGNvdWxkIGNsYXJpZnkgb3IgZ2l2ZSBtZSBtb3JlIGNvbnRleHQgSSBtaWdodCBiZSBtaXNzaW5nIHRob3VnaCwgSSBhcHByZWNpYXRlIGl0Li4gCkpEOiBJdCBtYWRlIGV2ZXJ5dGhpbmcgc28gc3BlY2lhbC4gClRoYW5rIHlvdSBmb3IgeW91ciByZXNwb25zZS4gVGhhdCB3YXMgdmVyeSBnZW50bGUsIGJ1dCBzdGlsbCBoaXQgbWUgbGlrZSBhIHRvbiBvZiBzaGl0IGJyaWNrcy4gSSdtIGtpY2tpbmcgbXlzZWxmIGZvciBub3Qgc2VlaW5nIHRoaXMgYmVmb3JlIHdlIGdvdCBtYXJyaWVkLiBJIHdvdWxkIHByb2JhYmx5IG5vdCBoYXZlIHJ1c2hlZCBpbnRvIGdldHRpbmcgbWFycmllZCB0aGUgd2F5IEkgZGlkIGlmIEkga25ldyB0aGlzIHdhcyBwYXJ0IG9mIGl0LiBXZSB3b3VsZCd2ZSB3b3JrZWQgb24gdGhpcyBmaXJzdCBhbmQgaWYgaXQgd2VyZSBub24gZmVhc2libGUgdG8ga2VlcCBoZXIgdmlzaXRzIHRvIGEgbWluaW11bSBJIHByb2JhYmx5IHdvdWxkIG5vdCBoYXZlIGRvbmUgaXQuCiJFZCB3YXMgY2xlYXIgaW4gaGlzIG1pbmQgYWJvdXQgbWFraW5nIHRoZSBkaXNjbG9zdXJlcywgYnV0IEVkJ3MgYSBodW1hbiBiZWluZy4gTm8gbWF0dGVyIHRoYXQgaGUgdW5kZXJzdG9vZCBpbnRlbGxlY3R1YWxseSB3aGF0IGhlIGRpZCwgaXQgd2FzIG9ubHkgYWZ0ZXIgaGUgbWFkZSB0aGUgZGlzY2xvc3VyZXMgdGhhdCB0aG91c2FuZHMgb2YgdG9ucyBvZiByZWFsaXphdGlvbnMgd2VpZ2hlZCBoZWF2aWx5IG9uIGhpcyBlbW90aW9uYWwgYW5kIHBoeXNpY2FsIHN0YXRlLiBIZSBoYWQgdGhlIHdlaWdodCBvZiB0aGUgd29ybGQgb24gaGlzIHNob3VsZGVycyBhbmQgaGUgaGFkIHRvIG1vdmUgdmVyeSBxdWlja2x5LiIuIApTaW5jZSB0aG9zZSBmYW1pbGllcyB3ZXJlICAgbW9zdCBvZiB0aGUgdGltZSAgIENocmlzdGlhbiwgaXQgYmVjYW1lIGEgY29tbW9uIHNpZ2h0IHRvIHNlZSBDaHJpc3RpYW4gc3ltYm9scyBpbiBob3RlbHMuIApUaGV5IGdvdCB1cCB0byBsZWF2ZSwgdGhleSBzbWlsZWQgdGVudGF0aXZlbHkgYXQgdXMgYW5kIHNhaWQgKGluIEVuZ2xpc2gpLCAiWW91IGVuam95IFNhbHpidXJnPyIuIFNhaWQsICJPaCB5ZXMsIGl0IHdvbmRlcmZ1bCEiLiAKSGFsZiBvZiBhbGwgS29yZWFuIG1lbiBwYXkgZm9yIHNleApUaHJlZSBjYXJkIHBva2VyIGdhbWUgY29udGludWVzIHdpdGggdGhlIGhhbmRzIGJlaW5nIGV4cG9zZWQgYW5kIHRoZSB3YWdlcnMgYmVpbmcgYXdhcmRlZCB0byB0aGUgcGVyc29uIHdpdGggdGhlIGJlc3QgaGFuZC4gRm9yIHRoZSBkZWFsZXIsIGhpcyBoYW5kIHNob3VsZCBiZSBhIHF1ZWVuIG9yIGJldHRlciBzbyB0aGF0IGhlIGNhbiBoYXZlIGEgaGFuZCB0byBwbGF5LiBJbiB0aGlzIHBhcnQgb2YgdGhlIGdhbWUsIGlmIHRoZSBkZWFsZXIgZG9lcyBub3QgY29udGludWUgdG8gcGxheSB0aHJlZSBjYXJkIHBva2VyLCB0aGVuIHRoZXJlIGlzIG5vIGFjdGlvbiBvbiBQbGF5IHdhZ2Vycy4gVGhlIEFudGUgd2FnZXJzIHdpbGwgdGhlbiBiZSBnaXZlbiBhIDE6MSBwYXlvdXQuCkkgbGl2ZSBpbiBMb25kb24gbm93LCBhbmQgYWx0aG91Z2ggdGhlcmUgYXJlIGNlcnRhaW5seSBwcm9ibGVtcyB3aXRoIE11c2xpbSBtaWdyYW50cywgSSBwZXJzb25hbGx5IGZpbmQgSmFtYWljYW5zIGFuZCBTb21hbGlhbnMgc3BlY2lmaWNhbGx5IG11Y2ggbW9yZSBwcm9ibGVtYXRpYy4gODUlIG9mIGtuaWZlIGNyaW1lIGluIExvbmRvbiBpcyBibGFjayB0ZWVucy4gCkJlZm9yZSB5b3UgYXR0ZW1wdCB0byB0YWNrbGUgYW55IG90aGVyIGlzc3VlcyBJbiB5b3VyIHJlbGF0aW9uc2hpcCB3aXRoIHlvdXIgbW9tLCBJIGNhbid0IHN0cmVzcyBpdCBlbm91Z2ggdGhhdCB5b3Ugc2hvdWxkIHByb2JhYmx5IGdldCB5b3VyIG93biBwbGFjZSwgc28gYXMgbm90IHRvIGZ1cnRoZXIgY29tcHJvbWlzZSB5b3VyIGxpdmluZyBhcnJhbmdlbWVudCBhbmQgbWFrZSB0aGluZ3MgbW9yZSBjb21wbGljYXRlZCBhbmQgc3RyZXNzZnVsLiBTb3JyeSBpZiBJJ3ZlIHJlcGVhdGVkIG15c2VsZiBoZXJlLCBidXQgSSBqdXN0IGdldCB0aGUgZmVlbGluZyB0aGVyZSBpcyBtb3JlIGRpc2N1c3MgdGhhbiB0aGUgd2F5IHNoZSBpcyBjb25mdXNpbmcgeW91ciBiYWJ5LCB5b3UganVzdCBoYXZlIHRvIGJlIGNhcmVmdWwgYWJvdXQgaG93IHlvdSBkbyBpdC4gCkZvciBzb21lIHNvbGRpZXJzLCB0aGlzIGlzIHRoZSBvbmx5IGNvbnRhY3QgdGhleSBoYXZlIHdpdGggaG9tZSwgYW5kIHRoZSBwYXJ0bmVyc2hpcCBzdHJpdmVzIHRvIGRlbW9uc3RyYXRlIHJlY29nbml0aW9uIG9mLCBhbmQgYXBwcmVjaWF0aW9uIGZvciwgbWlsaXRhcnkgbWVtYmVycycgc2VydmljZSBhbmQgc2FjcmlmaWNlLiAKQnV0IHVubGlrZSBURlNBcywgUlJTUHMgc3RpbGwgcHJvdmlkZSB0aGF0IHRheCBkZWR1Y3Rpb24sIG9uZSBvZnRlbiBhY2NvbXBhbmllZCBieSBhIGp1aWN5IHRheCByZWZ1bmQgaW4gdGhlIHNwcmluZy4gCldhcnJlbiBIYXJkaW5nIHdhcyB0aGUgZmlyc3QgcHJlc2lkZW50IHRvIG93biBhIHJhZGlvLCB0aGUgZmlyc3QgdG8gbWFrZSBzcGVlY2ggb3ZlciB0aGUgcmFkaW8sIGFuZCB0aGUgZmlyc3QgdG8gcmlkZSB0byBoaXMgaW5hdWd1cmF0aW9uIGluIGEgY2FyLiBXaGVuIHdvbWVuIGdvdCB0aGUgcmlnaHQgdG8gdm90ZSwgaGUgd2FzIHRoZSBmaXJzdCBwcmVzaWRlbnQgdGhleSBjb3VsZCBlbGVjdC4KUFMuIEJ1eSBsb2NhbCBob25leS4gTm90IG9ubHkgZG9lcyBpdCB0YXN0ZSBiZXR0ZXIgYnV0IHlvdSBkb24gcmV3YXJkIENhcGlsYW5vIGFuZCBvdGhlcnMgZm9yIHRoZWlyIHRlcnJpYmxlIHByYWN0aWNlcyBhbmQgb3ZlcmFsbCBtb25vcG9seSBvbiB0aGUgbWFya2V0LgpUaGV5IGNvbmZpc2NhdGVkIHRoZSBhcm0gc2xpbmcsIGFuZCB0b2xkIG1lIGlkIGhhdmUgdG8gZ2V0IG9uZSBmcm9tIHRoZSBqYWlsIG51cnNlLCB0aGF0IHRvb2sgdGhyZWUgd2Vla3MgdG8gZ2V0LiAKSSBwbGF5IGluIGEgYmFuZCBvbiB0aGUgc2lkZSBhbmQgcmVjb3JkIGFtYXRldXIgaG91ciBtdXNpYyBvZiBteSBvd24gc28gSSBjb29sIHdpdGggbWFraW5nIG11c2ljIGZvciBtdXNpYyBzYWtlLCBidXQgdGhhdCBteSBwZXJzb25hbCBpbnZlc3RtZW50LiAKSSB0ZW5kIHRvIGxvb2sgZm9yIHBlb3BsZSB3aG8gYXJlIHNtaWxpbmcgd2hlbiB0aGV5IGFyZSB0YWxraW5nIHRvIHBlb3BsZS4gCkkgc3RpbGwgdGhpbmsgYWJvdXQgdGhhdCwgYW5kIGhvdyB0aGF0IHNpdHVhdGlvbiBjb3VsZCBoYXZlIGdvbmUgc28gdmVyeSB2ZXJ5IG11Y2ggd29yc2UuIApGb3IgaW5pdGlhdGluZyB0aGUgZ2FtZSwgZXZlcnlvbmUgaGFzIHRvIHRocm93IGluIHNvbWUgYW1vdW50IG9mIHBva2VyIGNoaXBzIGZyb20gdGhlaXIgc2lkZSBhcyBhIHN0YXJ0aW5nIGFtb3VudCB3aGljaCBkZXBlbmRzIG9uIHRoZSB2YWx1ZSBvZiB0aGUgdGFibGUuLiAKQWRkIHRoZSBsZW1vbiBqdWljZSwgemVzdCwgb2lsLCBhbmQgMyB0YWJsZXNwb29ucyB3YXRlci4gCkJlaSBkZW4gbnVuIGVycmVpY2h0ZW4gKyA4IFJwIGJlZGV1dGV0IGRpZXMgZWluZSBFcmhodW5nIGRlcyBFaW5rb21tZW5zIHZvbiA3LDYgYmlzIDkuMyUgLiAKT3dlbiBGb3JkIGNhbWUgb3ZlciB0byB0aGUgbGl0dGxlIGhvdXNlIHRoZSBuZXh0IG1vcm5pbmcgaW4gYSBzdGF0ZSBvZiBncmVhdCBleGNpdGVtZW50LiAiTXJzLiBCbHl0aGUsIHRoaXMgaXMgYSB3b25kZXJmdWwgYm9vayBhYnNvbHV0ZWx5IHdvbmRlcmZ1bC4gCkFzaGxleSBob25lc3RseSBpcyBtb3JlIGJ1cnN0IERQUyB0aGFuIHRhbmsgYXQgdGhpcyBwb2ludC4gSGVyIEhQIGFuZCBBQyBhcmUga2luZGEgbG93IGJlY2F1c2Ugb2YgYmFkIHN0YXQgcm9sbHMuIEJlYXUgaXMgd2F5IG1vcmUgc2xpcHBlcnkuIApTdXJlIHlvdSBjYW4gaW50ZXJwcmV0IFByaW1lciBhcyBiZWluZyBwZXJzaXN0ZW5jZSB0aHJvdWdoIHRpbWUsIGJ1dCBDYXJydXRoIGhhcyBvdXRyaWdodCBzdGF0ZWQgaXQgaW50ZW5kZWQgdG8gYmUgYSBzb3J0IG9mIGh5cGVyIHJlYWxpc3RpYyBtdW1ibGVjb3JlIGV4cGxvcmF0aW9uIG9mIGhvdyB0aGlzIGtpbmQgb2Ygc2NpZW50aWZpYyBhZHZhbmNlbWVudCBtaWdodCBhY3R1YWxseSBwbGF5IG91dCBpbiByZWFsIGxpZmUuLiAKQ0hBUElUUkUgMi4gTGUgcGFsaWVyIGludGVybWRpYWlyZSA6dW5lIGFsdHJhdGlvbiBkZXMgbXRob2RlcyB0cmFkaXRpb25uZWxsZXMgZCdlbnRyYWlkZSAuIDE3OQpWZW50dWVsIHRzdW5hbWkKVGhpcyBpcyBvbmUgb2YgdGhlIGZldyBzaXRlcyBvZiBpdHMga2luZCBvbiB0aGUgaW50ZXJuZXQuIFRoaXMgc2l0ZSByZXZpZXdzIHRoZSBzbG90IG1hY2hpbmUgZ2FtZXMgYW5kIHRlbGxzIHRoZSBwbGF5ZXIgd2hhdCBjYXNpbm9zIGhhdmUgdGhlIHBhcnRpY3VsYXIgZ2FtZS4gVGhleSBhbHNvIHByb3ZpZGUgcmV2aWV3cyBvZiBib251cyBmZWF0dXJlIHNsb3RzIGFuZCBmaXZlIHJlZWwgc2xvdHMuIAo2IHBvc2ggYWx0ZXJuYXRpdmVzIHRvIHRoZSBib3JpbmcgcGFudHN1aXQKSW4gYSBoZWFsdGh5IHJlbGF0aW9uc2hpcCwgd2hlbiB5b3VyIFNPIHRlbGxzIHlvdSB0aGV5IGFyZSB1cHNldC9pbiBkaXN0cmVzcyB0byB0aGUgcG9pbnQgd2hlcmUgdGhleSBhcmUgZGVwcmVzc2VkIGFuZCBzb2JiaW5nLCB5b3Ugd291bGQgYmUgc3B1cnJlZCBpbnRvIGFjdGlvbi4gIklzIHRoZXJlIGFueXRoaW5nIEkgY2FuIGRvPyIsICJIb3cgY2FuIEkgaGVscD8iLCAiVGFsayB0byBtZSBhYm91dCBpdCIsICJJcyBpdCBzb21ldGhpbmcgSSBkaWQ/IiwgZXRjLiBUaGF0IGlzIHRoZSBoZWFsdGh5IHJlc3BvbnNlLCBjb25jZXJuLCBlbXBhdGh5IGFuZCBjYXJpbmcuClRoYXQgdHlwZSBvZiBwcmVkYXRvcnkgYmVoYXZpb3IgY2FuIGFsc28gYmUgZGFuZ2Vyb3VzbHkgdW5wcmVkaWN0YWJsZS4gCktpbGxlcm9mZGVtb25zICAyMjIgcG9pbnRzICBzdWJtaXR0ZWQgMTcgZGF5cyBhZ28KQW4gb2ZmaWNpYWwgd2l0aCB0aGUgR2lybCBHdWlkZXMgcHJhaXNlZCBFbGluYSdzIHN0cmF0ZWd5LgpJbiB0aGUgZW5kLCBpdCdzIGVzdGltYXRlZCB0aGF0IEZvbGV5IHNhdmVkIHVwd2FyZHMgb2YgMTAsMDAwIEpld3MgZnJvbSBjZXJ0YWluIGRlYXRoLiAKVGhlIHJhY2VzIHRha2UgcGxhY2Ugb24gYSB0YWJsZXRvcCByZWQgbWVzYSBuZXh0IHRvIHRoZSBFdXJla2EgQ2FzaW5vIFJlc29ydCB0aGF0IHdpbGwgYmUgdHJhbnNmb3JtZWQgaW50byBhIG9uZSBvZiBhIGtpbmQgdHJhY2suIFRoZSB0cmFjayBmZWF0dXJlcyBlbmR1cm8gdHlwZSBvYnN0YWNsZXMgaW5jbHVkaW5nIGJvdWxkZXJzLCByb2NrIGZpZWxkcywgcG9sZXMsIHNhbmQsIGp1bXBzLCB3YXRlciwgYW5kIGEgbW90b2Nyb3NzIHNlY3Rpb24gYW5kIG1pbGVzIG9mIG9wZW4gZGVzZXJ0LgpVbmxlc3MgeW91IGFyZSByZWFsbHkgZGVzcGVyYXRlIGZvciB0aGUgdGhyZWVzb21lIGV4cGVyaWVuY2UsIHRoaXMgaXMgYSBsb3QgdG8gc3BlbmQgaW4gOTAgbWludXRlcy4gCkF0IGZpcnN0IGl0IHdhcyBtZSBhbmQgbXkgZnJpZW5kcyB3aG8gcGxheWVkLCB3ZSBzdGFydGVkIHdpdGggMTMgcGxheWVycyB0aGUgZmlyc3QgbW9udGguIFdlIGp1bXBlZCB1cCB0byBoaWdoIHRlZW5zIHdpdGhpbiBhIHllYXIsIGFuZCBzdGF5ZWQgdGhlcmUgZm9yIHRoZSBmaXJzdCAyIDMgeWVhcnMuIApUaHJvdWdob3V0IG91ciBjb3VudHJ5J3MgaGlzdG9yeSB3ZSBkaWRuJ3QgaGF2ZSB0aGlzIG1hc3NpdmUgZGVmZW5zZSBidWRnZXQgYnV0IGluc3RlYWQgd291bGQgZHJhbWF0aWNhbGx5IGluY3JlYXNlIHNwZW5kaW5nIGR1cmluZyB3YXIgdGltZXMgYW5kIHJldHVybiB0byBtb3JlIG5vcm1hbCBzcGVuZGluZyBsZXZlbHMgZHVyaW5nIHBlYWNlIHRpbWUuIApBcmNoaW1lZGVhbmNyeXN0YWwgIDEgcG9pbnQgIHN1Ym1pdHRlZCA4IGRheXMgYWdvCkkgYWdyZWUgd2l0aCByZWFkZXIgU2VjdGlvbiBCLCBSb3cgMSwgd2hvIHdyb3RlIGxhc3Qgd2Vlazogd291bGRuJ3QgbWluZCBpZiB0aGUgR2lhbnRzIGtlcHQgVml6cXVlbC4gSGUgY291bGQgYmF0IDh0aCBhbmQgYmFzaWNhbGx5IGJlIHRoZXJlIGZvciBkZWZlbnNlLiAKTG9zcyBvZiBwcm90ZW9nbHljYW4gKGFnZ3JlY2FuKSBmcm9tIGNhcnRpbGFnZSBpbml0aWF0ZXMgZGVnZW5lcmF0aXZlIGpvaW50IGRpc2Vhc2UuClRoZXkgY2xhaW0gdGhlIG1vbmV5IGlzIGJldHRlciBvZmYgaW4gdGhlaXIgaGFuZHMgdG8gcHVyc3VlIHByb2plY3RzIGEgR292ZXJubWVudCB3b3VsZCBuZXZlciBkby4gCklmIFRveW90YSBwbGF5cyBpdHMgY2FyZHMgcmlnaHQsIG90aGVyIGF1dG9tYWtlcnMgd2lsbCBoYXZlIHRvIHBheSBsaWNlbnNpbmcgZmVlcyB0byBUb3lvdGEgZm9yIGV2ZXJ5IGZ1ZWwgY2VsbCBjYXIgdGhleSBidWlsZC4gCkFsaSBlbWJvZGllZCBhIHByaW5jaXBsZS4gCk51bWVyb3VzIGludmVzdG1lbnQgcGhpbG9zb3BoaWVzIGRpY3RhdGUgd2hlbiBhbmQgaG93IHRvIGJ1eSBhbmQgc2VsbCBzdG9jaywgYm9uZHMsIHJlYWwgZXN0YXRlLCBhbmQgb3RoZXIgYXNzZXRzLCBidXQgbm9uZSBvZiB0aGVzZSBwaGlsb3NvcGhpZXMgYXJlIHVuaXZlcnNhbGx5IHRydWUuIApJIGRvIG5vdCBrbm93IHRoZSBzb2x1dGlvbi4gClRoZXkgYXNzdW1lZCBjb3lvdGVzIGdvdCBoaW0gYWZ0ZXIgYWJvdXQgYSBtb250aCwgYnV0IG5vcGUuIFRoZSBkb2cgaGFkIGp1c3QgZ29uZSBvbiBhIDEyMCBtaWxlIGFkdmVudHVyZS4uIApEZXNoYXVuIFdhdHNvbiBpcyBoZWFsdGh5LiBXYXR0IGlzIGhlYWx0aHkuIFRoZSBUZXhhbnMgc3RpbGwgaGF2ZSBvZmZlbnNpdmUgbGluZSBhbmQgZGVmZW5zaXZlIGJhY2tmaWVsZCBpc3N1ZXMsIGJ1dCB0aG9zZSB0d28gZ3V5cyBjYW4gbWFrZSB1cCBmb3IgdGhlIGRlZmljaWVuY2llcyBhbmQgZ2V0IEhvdXN0b24gYmFjayBpbnRvIHRoZSB3aWxkIGNhcmQgaHVudC4KSSBhbHNvIGxvdmVkIHNlZWluZyBEb24gTHVpcyBpbmV4cGVydCBFbmdsaXNoLCBhbmQgaG93IGVhY2ggZXJyb3IgbWlycm9yZWQgcHJvcGVyIFNwYW5pc2ggc3ludGF4LiBJIHNlZW4gcGxlbnR5IG9mIHRoZSBvdGhlciB3YXkgYXJvdW5kIGZyb20geWVhcnMgb2YgU3BhbmlzaCBjbGFzc2VzLCBzbyBpdCB3YXMgZnVuIHRvIHNlZSBpdCB0aGlzIHdheS4gVGhpbmdzIGxpa2UgImlzIGFzIG11Y2ggZ29vZCBhcyB0aGUgbWluZS4iIEFuZCAiaXQgZG9lcyBub3QgdmFsdWUgdGhlIHRyb3VibGUsIiB3aGljaCBpcyBhIGxpdGVyYWwgdHJhbnNsYXRpb24gb2YgIm5vIHZhbGUgbGEgcGVuYSwiIHdoaWNoIG1lYW5zICJpdCBub3Qgd29ydGggaXQuIiBBbmQgIlRoZSBvdXJzIHdlcmUgdGFrZW4uIGFuZCB0aGUgaGlzIHdpbGwgYmUgbmVlZGVkLiIKSSBnZW51aW5lbHkgd2FudCB0byBsb29rIGFmdGVyIHlvdXIgd2VsbCBiZWluZyBpbiBhbmQgb3V0c2lkZSB0aGUgd29ya3BsYWNlIGJ1dCBpdCBhIHR3byB3YXkgc3RyZWV0LiAKVXBwZXIgdGllcnMgZ290IHNoaXR0eSBhdWRpbywgbG93ZXIgdGllcnMgZ290IGJhZCBhbmdsZXMuIENpcmN1bGFyIGFyZW5hcyBhcmUgbm90IHRoYXQgZ3JlYXQgZm9yIGRvdGVzIGkgZ3Vlc3M/IE5vIGlkZWEgd2hhdCBUSSBpcyBsaWtlMykgS2luZCBvZiB3aGF0IHlvdSBnZXQgd2hlbiB5b3UgaGF2ZSBhIGZldyBkYXlzIGF0IHRoZSBhcmVuYSB0byBzZXQgdXAuIFRob3NlIFBHTCBndXlzIGRvIHdoYXQgdGhleSBjYW4gYnV0IHRlY2ggaXNzdWVzIGFyZW4gZ29ubmEgYmUgMTAwJSBpcm9uZWQgb3V0IHdoZW4gdGhleSBoYXZlIGEgbmV3IHNldHVwIGV2ZXJ5IGV2ZW50LjQpIEkgZG9uIHRoaW5rIHlvdSBzaG91bGQgd29ycnkgYWJvdXQgd2hhdCB0d2l0Y2ggY2hhdCBoYXZlIHRvIHNheSBhbmQganVzdCBwcmlvcml0aXplIHdoYXQgeW91IHdhbm5hIGRvIGFuZCBlbmpveSB0aGUgZXZlbnRzIHNpbmNlIHlvdSBuZXZlciBrbm93IHdoZW4geW91IGFyZSBnb25uYSBnZXQgeW91ciBuZXh0IGNoYW5jZS4gCklmIGhlIHdhbnRzIHRvIHRhbGssIG1heWJlIGhlJ2xsIHRhbGsuIApUaGUgZm9sbG93aW5nIGd1aWRlIGlzIGZvciB0aGUgYmVnaW5uZXIsIGFuZCBnaXZlcyBhIGdlbmVyYWwgb3V0bGluZSBhbmQgaWRlYSBvZiB0aGUgYmFzaWMgcG9rZXIgaGFuZHMuCkFsc28sIG1hbnl2ZXJzaW9ucyBvZiBHYUdhJ3Mgc29uZ3MsIHN1Y2ggYXMgcGlhbm8gc29sb3MgYW5kIG1vcmUgbWVkbGV5cyBvZmhlciBzb25ncyBhcmUgdXN1YWxseSBwZXJmb3JtZWQgYXQgaGVyIHNob3dzLCBhbmQgc2VhcmNoaW5nIHlvdXR1YmVmb3IgdGhlbSBpZiB5b3UgYXJlIHNvIGludGVyZXN0ZWQgbWF5IHlpZWxkIG1vcmUgc29uZ3MuIApBcHBhcmVudGx5IGZhbnRhc3kgYW5kIHNjaSBmaSBub3ZlbGlzdCBQaWVycyBBbnRob255IGZpcnN0IHVzZWQgdGhlIHRlcm0gYmFjayBpbiAxOTg0IGZvciBhIHdpbmdlZCB1bmljb3JuIGluIGhpcyBub3ZlbCAiQmVhcmluZyBhbiBIb3VyZ2xhc3MiIDoKQWNjb3JkaW5nIHRvIG9uZSBjbGllbnQsIHRoZSB0cmVhdG1lbnQgaGVscHMgcmVsaWV2ZSBtaWdyYWluZXMgYW5kIHNvb3RoZSBzb3JlIG11c2NsZXMuIApXZWF2aW5nIGJ1cnN0cyBvZiBjb250ZW1wb3JhcnkgbWluaW1hbGlzbSBpbnRvIHRoZSBsb29rIGFuIGN1cmF0aW5nIG1vbWVudHMgb2YgY29tZm9ydCBhbmQgbHV4dXJ5LCBWZWxqaSB0aGVuIGxheWVyZWQgdmFyaW91cyB0eXBlcyBvZiBsaWdodGluZywgZnJvbSBhIGN1cnZpbGluZWFyIGRyb3AgZml4dHVyZSB3aXRoIGxpbmVhciB0dWJlIGxpa2UgbGlnaHRzIHRoYXQgdGFrZXMgY2VudHJlIHN0YWdlIG92ZXIgdGhlIGRpbmluZyByb29tIHRhYmxlIGEgcmVmcmVzaGluZyBhbnRpZG90ZSB0byBidWxraWVyIGNoYW5kZWxpZXJzIHRvIG1peGVkIG1hdGVyaWFsIHNjb25jZXMgaW4gdGhlIG1hc3RlciBiYXRoIGFuZCBsb2FkcyBvZiBzdGFuZGFsb25lIGRlY29yYXRpdmUgYW5kIGZvY2FsIGdlbXMgcGxhY2VkIGF0IHZhcnlpbmcgaGVpZ2h0cyB0aHJvdWdob3V0IHRoZSBob21lLiBNYXRlcmlhbHMgcnVuIHRoZSBnYW11dDogZ2xhc3MsIGJyYXNzLCBibGFjayBtZXRhbCBhbmQgZXZlbiBzb21lIGNvbG91ci4uIApDLiwgbGFzdCB3ZWVrLiAKV2h5IGRvIGd1eXMgaGF2ZSBzdWNoIGxvdyBjb25maWRlbmNlPyBMb29rIGxvbmcgYW5kIGFkb3JpbmdseSBpbnRvIGhlciBleWVzLiBHaXJscyBudW1iZXJzIGZvciBmcmllbmRzaGlwIHBvc3RlZCBvbmxpbmUgICBQbGF0b25pYyBmaXJzdCAgIFJvbWFudGljIGlmIHlvdSBjYW4gd2luIGhlciBUaGUgcHVycG9zZSBvZiB0aGlzIHBvc3QgaXMgdG8gZ2l2ZSB5b3Ugc29tZSBpZGVhcyBvbmUgd2F5IG9yIGFub3RoZXIgdG8gZ2V0IEluZGlhbiBnaXJscyBtb2JpbGUgbnVtYmVycyBmb3IgZnJpZW5kc2hpcC4gClNvbWUgcGVvcGxlIGFyZSBpbXBhdGllbnQgYW5kIGNhc2ggaXQgaW4gZWFybHkganVzdCB0byBlbmQgdXAgcmVncmV0dGluZyBpdCBsYXRlci4gCkFzIHNvb24gYXMgc2hlIGFncmVlZCwgSSB3ZW50IG92ZXIgdG8gbXkgYnVkZGllcyBhbmQgdG9sZCB0aGVtIHdlIG5lZWQgdG8gb3JnYW5pemUgYSBoYXBweSBob3VyIGF0IHRoZSBob3RlbCBsb2JieSBiYXIgdG8gbWVldCBhbmQgZ3JlZXQgYWxsIHRoZSBuZXcgc3R1ZGVudHMuIFRoZXkgcmVhZGlseSBhZ3JlZWQuIExvbmcgc3Rvcnkgc2hvcnQ6IEkgd2Fsa2VkIHdpdGggaGVyIG92ZXIgdGhlcmUsIGFib3V0IDE2IG9mIHVzIGdhdmUgdGhhdCBiYXIgYWxsIHRoZSBidXNpbmVzcyBpdCBjb3VsZCBoYW5kbGUsIGFuZCBJIGNoYXR0ZWQgdXAgdGhhdCBsb3ZlbHkgeW91bmcgbGFkeSBhbmQgZ290IGhlciBkcnVuayBvbiBwaXRjaGVycyBvZiBjb2xkIGJlZXIuIEFmdGVyd2FyZCwgSSB3YWxrZWQgaGVyIG92ZXIgdG8gdGhlIG5lYXJlc3QgZWwgdHJhaW4gc3RvcCBhbmQgd2FpdGVkIHdpdGggaGVyIGZvciBhIHNvdXRoYm91bmQgUHVycGxlIGxpbmUgdHJhaW4uIEFuZCB0aGVyZSwgaW4gdGhlIGRpbSBsaWdodCBvZiB0aGUgRm9zdGVyIFN0cmVldCBlbCBzdG9wLCBJIGtpc3NlZCBoZXIgZm9yIHRoZSB2ZXJ5IGZpcnN0IHRpbWUuCkJ1dCwgSSBhbHNvIHRoaW5rIHdvcnJ5aW5nIGFib3V0IGJpZyBub2JvIG51bWJlcnMgaXMgcHJldHR5IG92ZXJibG93biwgcGFydGljdWxhcmx5IGlmIHlvdSBzdGFydCByZWxhdGl2ZWx5IGVhcmx5IGFuZCB3YWxrIGFzIHF1aWNrbHkgYXMgeW91IHNheS4gSSBsb3ZlZCBteSBub2JvLCBhbmQgbXkgc29iby4gTW9zdGx5IEkgZmxpcCBmb3IgeWV0IGFub3RoZXIgbG9vayBhdCBhbGwgb2YgaXQuClRoZSBmYW1pbHkgbGl2ZWQgaW4gUGxhdHRzbW91dGgsIE5FIHVudGlsIG1vdmluZyB0byBOb3J0aCBQbGF0dGUgaW4gMTk2Ny4gCkNvbXBsZXRpbmcgdGhlIGJ1bmRsZSByZXdhcmRzIHlvdSB3aXRoIGNyYWIgcG90cy4gCkhvd2V2ZXIsIEJvcmF4IHdhcm5zIHRoYXQgYSBsaXR0bGUgcmVzZWFyY2ggaXMgcmVxdWlyZWQgYmVmb3JlIGdvaW5nIHRoZSBjaGFyaXR5IHJvdXRlIHRvIHNlZSB3aGljaCBpdGVtcyB0aGUgb3JnYW5pemF0aW9ucyBkbyBhbmQgZG9uIHdhbnQub25saW5lIGFuZCBzZWUgd2hhdCBiZWluZyBhY2NlcHRlZCBhbmQgZmluZCBvdXQgd2hvIHdpbGwgY29tZSBhbmQgcGljayB0aGluZ3MgdXAgd2l0aCBhIHRydWNrLiBEbyB0aGUgZWFzaWVzdCB0aGluZyBzcGVuZCB0aW1lIGRyaXZpbmcgYXJvdW5kIGRyb3BwaW5nIGVhY2ggaW5kaXZpZHVhbCB0aGluZyBvZmYuIApPbGRlc3QgYXJ0aXNhbmFsIGRpc3RpbGxlcnksIE9rYW5hZ2FuIFNwaXJpdHMsIHdhcyBvbmx5IGZvdW5kZWQgaW4gMjAwNC4gV2Ugbm93IGhhdmUgNjUgZGlzdGlsbGVyaWVzLCBtb3N0IG9mIHdoaWNoIG9wZW5lZCBhZnRlciAyMDEzIHdoZW4gdGhlIExpcXVvciBDb250cm9sIGFuZCBMaWNlbnNpbmcgQWN0IHNvbWV3aGF0IG9uZXJvdXMgcmVndWxhdGlvbnMgd2VyZSBlYXNlZCBmb3IgZGlzdGlsbGVycy4gVGhhdCBvbmx5IGZpdmUgeWVhcnMgYWdvLiAKS2FsbGlzIGxhdGVyIHJldmVhbGVkIGhvdyBoZSBoYWQgZmVsdC4gIkl0IGlzIGEgc3BlY2lhbCBmZWVsaW5nLiAKV2h5IHR3byBvZiBEcmFnb25zJyBEZW4ncyBuZXcgaW52ZXN0b3JzIHNlZSBwb3RlbnRpYWwgaW4gY3Jvd2Rzb3VyY2VkIGZvb2QgZGVsaXZlcnkgc2VydmljZSBEYWlseSBEZWxpdmVyeURyYWdvbnMnIERlbidzIG5ld2VzdCByZWNydWl0cyAgIEpvZSBNaW1yYW4sIE1pY2hlbGUgUm9tYW5vdyBhbmQgTWFuaml0IE1pbmhhcyAgIGdpdmUgYSBwb3N0IG1vcnRlbSBvbiB0aGVpciBmaXJzdCBzZWFzb25UaGUgZGVhbDogWWV1bSBhbmQgU21pdGggYXNrZWQgZm9yICQxIG1pbGxpb24gaW4gZXhjaGFuZ2UgZm9yIGEgMjUgcGVyIGNlbnQgZXF1aXR5IHN0YWtlIHZhbHVpbmcgdGhlIGJ1c2luZXNzIGF0ICQ0IG1pbGxpb24uIFRoZSBtb25leSB3YXMgdGFyZ2V0ZWQgdG8gZnVuZCBpbnZlbnRvcnkgZm9yIHRoZSBuZXh0IHJlbGVhc2UgYnV0IHRoZXkgd2VyZSBhbHNvIGxvb2tpbmcgZm9yIGV4cGVydGlzZS4gYSBicmFuZCBuZXcgY2F0ZWdvcnkgYW5kIGVkdWNhdGlvbiBpcyBuZWNlc3NhcnkgYmVjYXVzZSB0byBzb21lIGRlZ3JlZSB3ZSBjaGFuZ2luZyBiZWhhdmlvdXIsIFlldW0gc2FpZC4gd2VyZSB0d28gdGhpcmRzIGludG8gZGV2ZWxvcG1lbnQgYW5kIHJlYWxpemVkIHRoaXMgaXMgbmV3IHRlcnJpdG9yeSBmb3IgYm90aCBvZiB1cyBhbmQgd2UgY291bGQgdXNlIHNvbWUgaGVscCBjb21tZXJjaWFsaXppbmcgaXQuIGFuZCBZZXVtIGFjY2VwdGVkIGEgZGVhbCBvbiBhaXIgZnJvbSBKaW0gVHJlbGl2aW5nIGZvciAkMSBtaWxsaW9uIGluIGV4Y2hhbmdlIGZvciBhIDMzIHBlciBjZW50IHN0YWtlLCB3aGljaCBpcyBzdGlsbCBpbiBkdWUgZGlsaWdlbmNlLiBTaW5jZSB0YXBpbmcsIHRoZSBwYWlyIGhhdmUgY29udGludWVkIHRvIGltcHJvdmUgdGhlIHBlcmZvcm1hbmNlIG9mIHRoZSBGaXNoSHVudGVyIDMuMCBhcHAgdG8gbWFrZSB0aGUgdXNlciBleHBlcmllbmNlIGJldHRlciB3aGlsZSB3b3JraW5nIG9uIHRoZSA1LjAuClRoYXQgcmVjb3JkIGFic29sdXRlbHkgZGVzdHJveXMgdGhlIG5vdGlvbiB0aGF0IFRpZ2VyIGNvdWxkIGJlIGFueSBraW5kIG9mIGNhbmRpZGF0ZSBmb3IgZ3JlYXRlc3QgZ29sZmVyIGFsbCB0aW1lLiBIZSBhIGJpZyBubyBzaG93LiAKIkFzIGlmIHJpZGluZyA2MCBtaWxlcyBvZiB0aGUgbW9zdCBzY2VuaWMgdHJhaWxzIGluIFNvdXRoZXJuIFV0YWggYW5kIHN1cHBvcnRpbmcgdGhlIElyb24gQ291bnR5IENhcmUgYW5kIFNoYXJlIGlzIG5vdCBzdWZmaWNpZW50bHkgYXBwZWFsaW5nLCB0aGVyZSBhcmUgYWxzbyBjaGFuY2VzIHRvIHdpbiBwcml6ZXMsIiB0aGUgbmV3cyByZWxlYXNlIHN0YXRlcy4gU2F0dXJkYXksIGFuZCByaWRlcnMgYXJlIHdlbGNvbWUgdG8gZGVwYXJ0IGZyb20gZWl0aGVyIER1Y2sgQ3JlZWsgVmlsbGFnZSBvciBCcmlhbiBIZWFkLgpTdWNoIHVnbHkgYmVoYXZpb3IsIGRlZmluaXRlbHkgbm90IGhvdyBhIGh1c2JhbmQgc2hvdWxkIGFjdC4gCkkndmUgYmVlbiBhbGl2ZSBsb25nIGVub3VnaCAoSSdtIDM3KSB0byBrbm93IHRoYXQgaW4gY2VydGFpbiBzZXR0aW5ncywgeW91IGp1c3QgY2FuJ3QgZXhjbHVkZSB0aGUgcmFjZSBmYWN0b3IsIGFzIGl0IGFic29sdXRlbHkgZG9lcyBwbGF5IGEgcm9sZSBpbiBzbyBtdWNoIG9mIHJlYWxpdHkgYW5kIHRoZSBtZWRpYSB0aGF0IHdlIGNvbnN1bWUuIEFtbWEncyBtb3RpdmVzIHdlcmUgb2J2aW91c2x5IG9ubHkgc29tZXdoYXQgY29tcGxpY2F0ZWQgYW5kIG11cmt5LCBidXQgSSB0aG91Z2h0IGl0IHdhcyBpbXBvcnRhbnQgdG8gcGxheSB0aGUgcmFjZSBjYXJkIGluIHRoaXMgaW5zdGFuY2UgYXQgdGhlIHZlcnkgbGVhc3QuIExpZmUsIGhvd2V2ZXIgd2UgbWF5IHBlcmNlaXZlIGl0LCBpcyBuZXZlciBhIHNvbGlkIG9uZSB3YXkgZXhwZXJpZW5jZSAgIHRoZXJlIGFyZSBhbHdheXMgZmFjZXRzIHRvIGEgc3RvcnkgdGhhdCB3aWxsIHJlbWFpbiB1bnRvbGQuCiJJZiB5b3Uga25vdyBhYm91dCBhbGwgdGhpcywgd2h5IGFyZSB5b3Ugb3ZlciBoZXJlIChhdCB0aGUgcG9rZXIgaG91c2UpIG1lc3Npbmcgd2l0aCB0aGlzIG90aGVyIHN0dWZmIHdoZW4geW91IG91Z2h0IHRvIGJlIG92ZXIgaGVyZT8iIGhlIHNhaWQuICJMb29rIGF0IHRoZSBjcmFjayBob3VzZXMuIC4gUGVvcGxlIHdpbGwgYmUgaGFuZ2luZyBvdXQgKGluIHRoZSBuaWdodCkgZG9pbmcgYWxsIGtpbmRzIG9mIHRoaW5ncyB3ZSBvdWdodCB0byBiZSBmb2N1c2VkIG9uLiIKTm90IGFsbCBmZWxvbmllcyBhcmUgdmlvbGVudC4gCkhhcnJ5IG95c3RlciBiYXIgYXJlYSBhbHNvIGJvYXN0cyBhbiBhZGRpdGlvbmFsIDQwIHNlYXRzIGF0IGNvY2t0YWlsIHRhYmxlcyBhcyB3ZWxsIGFzIG5pbmUgZmxhdHNjcmVlbiB0ZWxldmlzaW9ucyBzbyB5b3Ugd2lsbCBuZXZlciBtaXNzIGEgZ2FtZSEgQSB3YWxsIG9mIGZsb29yIHRvIGNlaWxpbmcgd2luZG93cyBpbiB0aGUgMTAwIHNlYXQgZGluaW5nIGFyZWEgcHJvdmlkZXMgdmlld3Mgb2YgdGhlIGxhbmRzY2FwZWQgY291cnR5YXJkIGFsbCB0aGUgd2F5IHRvIHRoZSBCb2FyZHdhbGsuIApCZWluZyBhbiBhdmlkIHBva2VyIHBsYXllciBzaW5jZSBjaGlsZGhvb2QgKHllcyB3ZSB3ZXJlIHRhdWdodCB0byBwbGF5IGNhcmRzIGFzIGNoaWxkcmVuIGluIG91ciBmYW1pbHkpLCB3ZSBoYXZlIHJpc2VuIHRvIG5ldyBoZWlnaHRzIHdpdGggcGxheWluZyBpbiB0aGUgc3VtcHR1b3VzIHBva2VyIHJvb21zIGluIExhcyBWZWdhcy4gClNvIGlmIHlvdSBjYW4gaG9vayB1cCB3aXRoIG1vZHMgaW4gYSBkZWZhdWx0IG9yIGEgbGFyZ2Ugc3ViLCB5b3UnbGwgZ2V0IGEgcmVhY3Rpb24gc29vbmVyIGFzIHRoZXJlIHdpbGwgYmUgbXVsdGlwbGUgcmVwb3J0cyB3aXRoIGRpZmZlcmluZyB0cmlhZ2UgdGlja2V0cy4gCldoYXQgd29yc2UsIGl0IGEgZ2VudWluZWx5IGZ1biBnYW1lLiBUaGUgYnVpbGRpbmcgbWVjaGFuaWNzIGFuZCBhZXN0aGV0aWMgc2V0IGl0IGFwYXJ0IGluIHRoZSByYXBpZGx5IGdyb3dpbmcgYmF0dGxlIHJveWFsZSBnZW5yZS4gCkhlIHVzZWQgdG8gdGVsbCB0aGVtLCB3ZSBoYXZlIHRvIGJlIG9wZW4gd2l0aCB0aGUgbWVkaWEsIHdlIGNhbiBoaWRlIGJlaGluZCB0aGUgY2FtZXJhcy4gRG9uIHB1dCB5b3VyIGhhbmQgdXAgaW4gZnJvbnQgb2YgYSBjYW1lcmEuIApJIHN0YXJ0ZWQgZ2V0dGluZyBvdGhlciBvcGluaW9ucyBhbmQgZXZlbiBnb3QgYSBuZXJ2ZSB0ZXN0IGRvbmUuIEV2ZXJ5IGRvY3RvciB3b3VsZCBqdXN0IHRvdWNoIG15IHdyaXN0IGFuZCBzZW5kIG1lIGF3YXkgc2F5aW5nIGl0J3Mgc2NhciB0aXNzdWUuIApUaGVzZSBhcmUgbW9zdCBkZWZpbml0ZWx5IGNoaXBzIHRoYXQgaGF2ZSBiZWVuIGNhcmVmdWxseSBkZXNpZ25lZCBhbmQgcHJvZHVjZWQuIFRoZSBjaGlwcyBhcmUgbWFkZSBvZiBwcm9mZXNzaW9uYWwgZ3JhZGUgY2xheSB3aGljaCBpcyB3aGF0IGdpdmVzIHRoZW0gdGhlaXIgdW5pcXVlIGxvb2sgYW5kIHRleHR1cmUuIApQcm9sdGFyaWF0LCBwYXV2cmV0IG9udCBjaGFuZyBkZSBuYXR1cmUgZXQgZCdlbnZlcmd1cmUsIG1tZSBzaSBsZSByc3VsdGF0IGVzdCBsZSBtbWUgOiBub3VzIHNvbW1lcyB0ZW51cyBlbiBsYWlzc2UuIApJIGRvbiB3b3JrIGluIHRoZSBzdG9yZSBhbnltb3JlICh0aGFuayBnb2QpLCBidXQgZGlkIGZvciBhIGZldyB5ZWFycy4gVGhlcmUgY2FuIGRlZmluaXRlbHkgYmUgcGVyc29uYWwgZnVsZmlsbG1lbnQgaWYgeW91IGhhdmUgdGhlIHJpZ2h0IG1pbmRzZXQuIAoiSGUgd2FzIHNvIGx1Y2lkLCBlbmdhZ2luZywgYW5kIGVuZ2FnZWQgd2l0aCBzdHVkZW50cyBoZSB3YXMgbWVldGluZywiIHNoZSByZWNhbGxzLCBkZXNjcmliaW5nIGFuIG91dHBvdXJpbmcgb2Ygc3VwcG9ydCBhbmQgY29tbWVudHMgZnJvbSBzY2hvbGFyc2hpcCBzdHVkZW50cyB1cG9uIGhlYXJpbmcgb2YgaGlzIGRlYXRoLiAiVGhlcmUgYXJlIG1hbnkgd2hvIGhhdmUgc2FpZCB0aGV5IHdvdWxkIG5vdCBiZSBoZXJlIGJ1dCBmb3IgdGhlIHByb2dyYW0sIiBzaGUgc2F5cy4KU2VtYXJqaWFuIHNhaWQuIApDb252ZXJzYXRpb25zIG9uIHRoZXNlIGV4dHJlbWUgbW9yYWwgcXVlc3Rpb25zIHNob3VsZG4gYmUgdHJ5aW5nIHRvIGNoYW5nZSB0aGUgb3RoZXIgcGVyc29ucyBtaW5kLiAKRm9yIHNvbWUgcmVhc29uIHRob3NlIHR3byBjb21lIHVwIGxpa2UgY3Jhenkgd2hlbiB3ZSBwbGF5LCBzbyBnZXR0aW5nIHRoYXQgZXh0cmEgbW9uZXkgaXMgYSBuaWNlIGJvbnVzLiAKVW5lIHF1YXJhbnRhaW5lIGRlIHBlcnNvbm5lcyBvbnQgcHJpcyBsZSBkcGFydCBzYW1lZGkgbWF0aW4gZGUgU2FpbnQgQWRlbG1lIHBvdXIgbGUgUG9rZXIgUnVuIGFubnVlbCBkdSBDbHViIGRlcyBhbW91cmV1eCBkZSBsYSBtb3RvbmVpZ2UuIFBob3RvIDogUmFkaW8gQ2FuYWRhIC8gSm9hbmUgQnJ1YgpPbmNlIHRoZSBWaWxsYWluIG1ha2VzIHRoZSBiaWcgY2hlY2svcmFpc2UgaXQgZG9lcyBtYWtlIGl0IGZlZWwgbGVzcyBsaWtlIDk5IG9yIEtLIHRob3VnaC4gTG9va3MgYSBsb3QgbGlrZSBhIHJhbmRvbSBnYXJiYWdlIDksIEFLaGgsIG9yIGhlIGEgVGlsdCBNb25zdGVyLiBJIHRoaW5rIGl0IGEgSmFtL0ZvbGQgc3BvdCBhbmQgYXMgbXVjaCBhcyBJIHdhbnQgdG8gc2F5IEkgZm9sZCBhbmQgc2F2ZSA2MDBCQiwgSSB0aGluayBJIHNob3ZlLiAKVGhlIHBheSBjZWlsaW5nIGluIG1hbmFnZW1lbnQgb3IgQkQgcm9sZXMgaXMgcHJvYmFibHkgaGlnaGVzdCBhdCBsYXJnZSBjb250cmFjdG9ycywgYnV0IGVhcm5pbmcgdGhvc2UgbGFyZ2UgYm9udXNlcyBmcm9tIG11bHRpIG1pbGxpb24gZG9sbGFyIChzb21ldGltZXMgdGVucyBvciBodW5kcmVkIG1pbGxpb24gZG9sbGFyKSBjb250cmFjdHMgaXMgbGlrZSBHYW1lIG9mIFRocm9uZXMuIApIZSBhbmQgaGlzIGNvbGxlYWd1ZXMgYXQgTWNHaWxsIGhhdmUgaWRlbnRpZmllZCAxMCBnZW5lcyBhc3NvY2lhdGVkIHdpdGggcGFpbiByZXNwb25zZSwgYW5kIHJlc2VhcmNoZXJzIGVsc2V3aGVyZSBoYXZlIGlkZW50aWZpZWQgYW5vdGhlciA1MCBvciBzbywgYnV0IHRoZXJlIGFyZSBzdGlsbCB0aG91c2FuZHMgbW9yZSBhd2FpdGluZyBkaXNjb3ZlcnkuIFRoZSByZXN0IG9mIHRoZSB2YXJpYXRpb24gaXMgZW52aXJvbm1lbnRhbCwgZHJpdmVuIGJ5IGZhY3RvcnMgc3VjaCBhcyBhZ2UsIGRpZXQgYW5kLCBtb3N0IGltcG9ydGFudGx5LCBwcmlvciBleHBlcmllbmNlIHdpdGggcGFpbi4gSW4gZ2VuZXJhbCwgdGhlIG1vcmUgcGFpbiB5b3UgZXhwZXJpZW5jZSwgdGhlIG1vcmUgc2Vuc2l0aXZlIHRvIHBhaW4geW91IGJlY29tZS5UaGVyZSBhcmUsIGhvd2V2ZXIsIHNvbWUgaW50cmlndWluZyBoaW50cyB0aGF0IHRoZSBsb25nIGhvdXJzIG9mIHRyYWluaW5nIGVuZHVyZWQgYnkgT2x5bXBpYyBhdGhsZXRlcyBwcm9kdWNlIHRoZSBvcHBvc2l0ZSBlZmZlY3QuIApOYWNoIHdlbmlnZW4gU2VrdW5kZW4gd2FyIFNvcGhpZSBhdXNnZXN0cmVja3QgYXVmIGRpZSBMaWVnZSBnZWZlc3NlbHQuIApTbyB3ZSBuZWVkIHRvIG5hcnJvdyB0aGlzIGRvd24sIEkgZ2V0IGluIGEgZmlnaHQgYW5kIGxvc2UgNWhwLCBpIG5vdyBoYXZlIDk1LiBJIHB1dCB0aGF0IGluIHRoZSB2YWx1ZSBhbmQgbmV4dCBzY2FuLCBUaGUgbGlzdCBzaG91bGQgaGF2ZSBuYXJyb3dlZCwgZG8gdGhpcyB0aWxsIHlvdSBmaW5kIG9uZS4gCkhpcyBjb25maWRlbmNlIGlzIHVuZGVyc3RhbmRhYmxlLiBUaGUgd2FyIGFnYWluc3QgdGVycm9yaXNtIGlzIGdvaW5nIGdhbmdidXN0ZXJzLiBUaGVyZSBpcyBvcHRpbWlzbSBhYm91dCBhIHF1aWNrIGFuZCBzdWNjZXNzZnVsIGNhbXBhaWduIGluIElyYXEuIFdoZW4gdGhlIFByZXNpZGVudCBhbmQgaGlzIGFkdmlzZXJzIHBlZXIgYSBtb250aCBvciBzbyBpbnRvIHRoZSBmdXR1cmUsIHRoZXkgc2VlIG9ubHkgZ29vZCBuZXdzOiB0aGUgd29ybGQgYSBzYWZlciBhbmQgYmV0dGVyIHBsYWNlIHdpdGhvdXQgU2FkZGFtOyB0aGUgRnJlbmNoIGFuZCBSdXNzaWFucywgaGF0IGluIGhhbmQsIGhvcGluZyB0byBiZWNvbWUgcGFydCBvZiB0aGUgcG9zdHdhciByZWNvbnN0cnVjdGlvbjsgdGhlIERlbW9jcmF0cywgc3VpdGFibHkgZGF1bnRlZCwgcmVhZHkgdG8gZG8gdGhlIFByZXNpZGVudCdzIGJpZGRpbmcgaW4gQ29uZ3Jlc3M7IHRoZSBzdG9jayBtYXJrZXQgaGVhZGluZyB0b3dhcmQgdGhlIHN0cmF0b3NwaGVyZTsgYnVzaW5lc3NlcyBpbnZlc3RpbmcgYW5kIGNvbnN1bWVycyBzcGVuZGluZzsgYW5kIHRoZSB0aHVncyBvZiB0aGUgd29ybGQgY293ZXJpbmcsIGhhdmluZyBhYnNvcmJlZCBhIGxlc3NvbiBhYm91dCBBbWVyaWNhbiByZXNvbHZlLgo5V2hvIGlzIHRoaXMgJzJsZWdzJz9SZWdpc3RlcmVkIG9uIEhvb1RvbyBvbiBzb21ldGhpbmcgbGlrZSB0aGUgMjJuZCBNYXJjaCAyMDAxLCBhZnRlciBub3QgZG9pbmcgbXVjaCB3aXRoIGFuIG9sZCBsb25nIGxvc3QgYWNjb3VudCBmcm9tIERlY2VtYmVyIDIwMDAsIEkndmUgYmVlbi4gV2VsbC4nWW91J3JlIEp1c3Qgd2VpcmQnICBVMjI2MDkzJ3RoZXJlJ3Mgbm90IG11Y2ggb2YgeW91IGxlZnQgdG8gc2VlIC4gCkl0J3MgZWFzeSB0byBmb3JnZXQgdGhhdCBhc3BlY3Qgb2YgcG9rZXIsIGJlY2F1c2UgdGhlIHdob2xlIHBvaW50IG9mIGdhbWJsaW5nIGlzIHRoYXQgc3VwcG9zZWRseSBhbnlib2R5IGNhbiBoaXQgYSBsdWNreSBzdHJlYWsgYXQgYW55IHRpbWUgYW5kIHdpbiBiaWcuIFRoYXQncyB3aGF0IGRyYXdzIGNyb3dkcyBvZiB0b3VyaXN0cyB0byBWZWdhcyBldmVyeSB5ZWFyLiBIZWxsLCBtYXliZSB5b3UncmUgc2VjcmV0bHkgYSBnZW5pdXMgYXQgaXQsIGxpa2UgUmFpbiBNYW4gYXQgdGhlIGJsYWNramFjayB0YWJsZS4KMSBsaXQuIEYgRFNHVk8uIApXaGF0J3Mgbm90IHRhbGtlZCBhYm91dCBpbiB0aGlzIHRocmVhZCBpcyByaWRlIHF1YWxpdHkgYW5kIGludmVzdG1lbnQgZW5jb3VyYWdlbWVudC4gUGVvcGxlIHByZWZlciB0byByaWRlIHRoZSB0cmFpbiBvciBsaWdodCByYWlsIG92ZXIgYnVzc2VzIGFuZCB3b3VsZCBwcmVmZXIgdG8gbGl2ZSBuZWFyIGEgdHJhaW4gc3RhdGlvbiBvdmVyIGEgYnVzIHN0b3AuIFRyYWNrbGVzcyB0cmFtIHJvdXRlcyBhcmUgbXVjaCBjaGVhcGVyIHRvIHByb3ZpZGUgdGhhbiBsaWdodCByYWlsIHJvdXRlcyBidXQgaGF2ZSBuZWFybHkgYWxsIG9mIHRoZSBiZW5maXRzIG9mIGEgdHJhbS4gKENoZWFwZXIgdG8gYnVpbGQgY29tcGFyZWQgdG8gcmFpbCkgQnVzIHJvdXRlcyBjaGFuZ2UsIGJ1cyByb3V0ZXMgZG9udCBoYXZlIGZpeGVkIHN0b3BzLCBidXNlcyBhcmUgaGFyZCB0byByZWFkL3dvcmsvbGFwdG9wIG9uLCBidXNlcyBoYXZlIGFjY2Vzc2liaWxpdHkgaXNzdWVzLiBBIHRyYW0gZG9lcyBhbGwgb2YgdGhlIGFib3ZlIGJldHRlciBhbmQgaGFzIGZhciBtb3JlIHNjYWxhYmlsaXR5ICh2b2x1bWUgb2YgcGVvcGxlIG1vdmVkKSB0aGFuIGFueSBidXMgc3lzdGVtL2RlZGljYXRlZCBsYW5lLiBJdCBhbHNvIGVuY291cmFnZXMgaGlnaGVyIGRldmVsb3BtZW50IGRlbnNpdHkgYW5kIGhpZ2hlciBxdWFsaXR5IG9mIGRldmVsb3BtZW50LiAoVGhpbmsgYWJvdXQgdGhlIHR5cGVzIG9mIGRldmVsb3BtZW50cyBuZWFyIHRyYWluIHN0YXRpb25zIGNvbXBhcmVkIHRvIGxhcmdlIGJ1cyBzdG9wcykuIFNvcnJ5IGZvciB0aGUgcXVpY2sgcmVzcG9uc2Ugb24gYSBteSBwaG9uZSBidXQgdG8gZmllbGQgYW55IGZ1cnRoZXIgcXVlc3Rpb25zLgpUaGUgcG9zaXRpdmUgZWZmZWN0cyBvZiBwaHlzaWNhbCBhY3Rpdml0eSBleHRlbmQgdG8gZmluZSBjZWxsIG1vcnBob2xvZ3kuIEluIHBhcnRpY3VsYXIsIGV4ZXJjaXNlIGFmZmVjdHMgdGhlIHByb3BlcnRpZXMgb2YgZGVuZHJpdGljIHNwaW5lcywgd2hpY2ggYXJlIGFjdGluIHJpY2ggcHJvdHVzaW9ucyBvbiB0aGUgZGVuZHJpdGVzIHRoYXQgY29udGFpbiBleGNpdGF0b3J5IHN5bmFwc2VzLiBDaGFuZ2VzIGluIHNwaW5lIHNpemUgYW5kIHF1YW50aXR5IGFyZSBhc3NvY2lhdGVkIHdpdGggTFRQIGluZHVjdGlvbiBhbmQgYXJlIGNvbnNpZGVyZWQgdG8gc3VwcG9ydCBjaGFuZ2VzIGluIHN5bmFwdGljIHN0cmVuZ3RoLiBJbiBhIHJlY2VudCBzdHVkeSBpdCB3YXMgc2hvd24gdGhhdCBydW5uaW5nIGVuaGFuY2VkIHNwaW5lIGRlbnNpdHkgaW4gdGhlIGRlbnRhdGUgZ3lydXMsIGFyZWEgQ0ExIGFuZCBlbnRvcmhpbmFsIGNvcnRleCBsYXllciBJSUkgWzcyXSwgZXh0ZW5kaW5nIHByZXZpb3VzIHdvcmsgWzczXS4gUGh5c2ljYWwgYWN0aXZpdHkgYWxzbyBhY2NlbGVyYXRlcyB0aGUgbWF0dXJhdGlvbiBvZiBkZW5kcml0aWMgc3BpbmVzIGluIG5ld2Jvcm4gbmV1cm9ucyBbNzRdLgpQcmljZXMgY29udGludWUgdG8gcmlzZSAoYWxvbmcgd2l0aCBpbnRlcmVzdCByYXRlcyksIGJ1dCB0aGF0IGR1ZSB0byBob3cgbWFueSBwZW9wbGUgd2FudCB0byBsaXZlIGhlcmUuIEF0IHNvbWUgcG9pbnQsIHByaWNlcyB3aWxsIHByb2JhYmx5IGZsYXR0ZW4sIGJ1dCBpbiBhbnkgY2FzZSAoY3Jhc2ggb3Igbm90KSwgYSB0b24gb2YgbmV3IG1pbGl0YXJ5IGZhbWlsaWVzIGFyZSBvbiB0aGVpciB3YXkgaGVyZSBvdmVyIHRoZSBuZXh0IHNldmVyYWwgeWVhcnMgdGhhdCB3aWxsIGFsbCB3YW50IHRvIHRha2UgYWR2YW50YWdlIG9mIHRoZWlyIFZBIGxvYW4gb3Bwb3J0dW5pdGllcyB0aGF0IHdpbGwgZnVydGhlciB0aWdodGVuIHRoaW5ncy4uIApTdGFyc2hpcCB3b3VsZCBiZSBsYXVuY2hlZCBpbnRvIGEgc3RhYmxlIExFTyBvcmJpdC4gVGhlbiBzdXBlciBoZWF2eSB3b3VsZCByZXR1cm4sIGxhbmQsIHJlZnVlbCBhbmQgbG9hZCB1cCB3aXRoIFN0YXJ0YW5rZXIsIHdoaWNoIHdvdWxkIGJlIGxhdW5jaGVkIHVwIHRvIFNTIHRvIHJlZnVlbC4gCkluIGJhc2ljLCB3ZSB3ZXJlIG9ubHkgYWxsb3dlZCBzbyBtYW55IHJvbGxzIG9mIFRQIGEgd2Vlay4gClRoZSBkaWZmZXJlbmNlIGJldHdlZW4gdGhlIHR3byBpcyB0aGF0IHdpdGggdGhpcyBzb2Z0d2FyZSwgdGhlcmUgaXMgbm8gbW9uZXkgYXQgc3Rha2UuIFlvdSBhcmUgZ2l2ZW4gYSBmaWN0aXRpb3VzIGJhbmtyb2xsIHRoYXQgeW91IGhhdmUgdG8gcGxheSB3aXRoLiAKV2l0aCBhIGNvbnZlbmllbmNlIHNjb3JlIG9mIDk4IG91dCBvZiAxMDAsIHRoZSBidWlsZGluZyB3aWxsIHN0YW5kIHJpZ2h0IGFjcm9zcyB0aGUgc3RyZWV0IGZyb20gU2VtaWFobW9vIE1hbGwgYW5kIHJlc2lkZW50cyB3aWxsIGJlIHdpdGhpbiBhIGZldyBtaW51dGVzIHdhbGsgb2YgbW9yZSB0aGFuIDMwMCBodW5kcmVkIHNob3BzIGFuZCBzZXJ2aWNlcy4KVGhlc2UgcGVvcGxlIGFyZSBzdHVwaWQgYnkgZGVmaW5pdGlvbi4gVGhleSBoYXZlIG5vIGRlc2lyZSB0byBiZSBlZHVjYXRlZC4gVGhleSBrbm93IHdoYXQgZ29pbmcgb24gYW5kIHlvdSBkb24gYW5kIHRoYXQgZ2l2ZXMgdGhlbSBhIGZlZWxpbmcgb2Ygc3VwZXJpb3JpdHkgb3ZlciB5b3UuIFRoZXkgZG9uIGNhcmUgdGhhdCB5b3VyIGtpZHMgYXJlIGdvaW5nIHRvIGdldCBhdXRpc20gZnJvbSB0aGVpciB2YWNjaW5hdGlvbnMsIHRoZXkganVzdCBnbGFkIHRoZXkgaGF2ZSB0aGlzIGtub3dsZWRnZSB0aGF0IHlvdSBkb250IGFuZCB3aWxsIGJlIGFibGUgdG8gdXNlIGl0IHRvIHNhdmUgdGhlaXIga2lkcyBhbmQgdGhlbiB0aGV5IHdpbGwgYmUgYWJsZSB0byBnbG9hdCB3aGVuIHRoZXkgYXJlIHByb3ZlbiByaWdodC4gSXQgbGlrZSBwbGF5aW5nIGNoZXNzIHdpdGggYSBwaWdlb24uIFRoZXkganVzdCBnb25uYSBzaGl0IG9uIHRoZSBib2FyZCBhbmQgd2FsayBhd2F5IGxpa2UgdGhleSB3b24gYW55d2F5LgpXZSB3ZW50IG91dCB0byBkaW5uZXIgdGhhdCBkYXkuIEkgYXNrZWQgaGVyIGlmIGdpcmxzIHdlcmUgcmVhbGx5IGJlaW5nIGZvcmNlZCB0byBwcm9zdGl0dXRlIHRoZW1zZWx2ZXMuIApBbm90aGVyIGdyZWF0IHJlYXNvbiBvbmxpbmUgcG9rZXIgaXMgd29ydGggdHJ5aW5nIGlzIHRoZSBmYWN0IHRoYXQgdGhlIHRlY2hub2xvZ3kgbm93YWRheXMgaXMgdmVyeSBzZWN1cmUsIGFuZCBmYWlyLiBNYWpvciBicmFuZHMgYXJlIGNvbnN0YW50bHkgYmVpbmcgbW9uaXRvcmVkIGJ5IGdhbWJsaW5nIGNvbW1pc3Npb25zIHRvIGVuc3VyZSBxdWFsaXR5IHN0YW5kYXJkcywgYW5kIHRvIG1lZXQgY2xpZW50IG5lZWRzIGluIGFsbCBhcmVhcywgc3BlY2lhbGx5IGZhaXJuZXNzIGFuZCBzZWN1cml0eS4gTmV2ZXIgYmVmb3JlIGhhdmUgaHVtYW5zIHBsYXllZCB3aXRoIHNvIG11Y2ggZmFpcm5lc3MgYXMgZHJhd3MgYXJlIGV4ZXJ0ZWQgaW4gcmFuZG9tIG1vZGVzLCBnaXZlbiBhbGwgcGxheWVycyB0aGUgc2FtZSBjaGFuY2VzIHRvIHN1Y2NlZWQgYXMgYW55IG90aGVyLiBUaGUgdGVjaG5vbG9neSBpcyBhbHNvIGdyZWF0IGdpdmVuIHRoZSBmYWN0IHRoYXQgeW91IGNhbiBhdXRvbWF0aWNhbGx5IHBsYWNlIGJsaW5kcyBhbmQgYW50ZXMuIFRoZXJlIGlzIG5vIG5lZWQgZm9yIG1hbnVhbCBpbnRlcnZlbnRpb24gaW4gdGhlc2UgYXJlYXMgaWYgeW91IGRvbid0IGNob29zZSB0bywgd2hpY2ggaW4gdHVybiBnaXZlcyB5b3UgbW9yZSB0aW1lIHRvIGNvbnN0cnVjdCB5b3VyIGhhbmQgc3RyYXRlZ3kuCkV2ZW4gZXh0ZW5kZWQgZm9yIGFuIG92ZXJuaWdodCBzZXNzaW9uLiBJIGFkb3JlIHNwb2lsaW5nIGFuZCBwYW1wZXJpbmcgTWVuLCBXb21hbiwgYW5kIEVzcGVjaWFsbHkgQ291cGxlcyEgRGFpc3kgd2FudHMgdG8gc2VlIHdoYXQgYWxsIHRoZSBidXp6IGFib3V0IG91ciBhZ2VuY3kgaXMgYW5kIHdhbnRzIHRvIHRyeSBoZXIgaGFuZCBhdCBpdC4gVGhlIGVtYWlsIGFkZHJlc3Mgd2FzIG5vdCBzdWNjZXNzZnVsbHkgc2F2ZWQhIFRoZSBlbWFpbCBhZGRyZXNzIHdhcyBzdWNjZXNzZnVsbHkgc2F2ZWQuIApIZSBoYXMgYSByZWFsIGdmIGFuZCBpcyBiYXNpY2FsbHkgYW4gb2xkIG1hbiBvdXRzaWRlIG9mIHBva2VyLCBub3QgaW4gc29tZSBob29rZXJzIGFuZCBibG93IHNjZW5lLiBIZSBiZSBiYWNrIGluIE5MIHNvb24gYW5kIGhvcGVmdWxseSB0aGUgcmV0dXJuIHRvIG5vcm1hbCBsaWZlIGhlbHBzIGhpbS4uIAoiTWFueSBwZW9wbGUgaGVhZCBzdHJhaWdodCB0byBhIHRhYmxlIHRoYXQncyBhbHJlYWR5IGJ1c3kuIEluc3RlYWQsIGZpbmQgYSB0YWJsZSB3aGVyZSBubyBvbmUgZWxzZSBpcyBzaXR0aW5nLCB3aXRoIGEgZGVhbGVyIHNpdHRpbmcgaWRsZSwgYW5kIHRlbGwgdGhlbSB5b3UncmUgYSBub3ZpY2UgYW5kIHlvdSB3YW50IHRvIHBsYXkuIFRoZXknbGwgd2FsayB5b3UgdGhyb3VnaCBpdC4gVGhlIGNhc2lubyBkb2Vzbid0IG1pbmQsIGJlY2F1c2UgeW91J3JlIHN0YXJ0aW5nIHRoYXQgZ2FtZS4iClRoZXNlIHRlY2huaXF1ZXMgcmVxdWlyZSB5ZWFycyBhbmQgeWVhcnMgb2YgcHJhY3RpY2UgYW5kIG1vcmUgdGhhbiBhIHBlcmZlY3QgaW5zcGlyYXRpb25hbCBzb3VyY2Ugb3IgZ3VpZGFuY2UuIFRoZSBwc3ljaG9sb2d5IG9mIHlvdXIgb3Bwb25lbnQgbWF0dGVycyBtb3JlIHRoYW4gYW55dGhpbmcsIGFuZCBsZWFybmluZyB0aGlzIHJlcXVpcmVzIHRyZW1lbmRvdXMgaGFyZCB3b3JrIGFuZCBleHBlcmllbmNlLiBUaGUgc2F5aW5nIGlzICJQb2tlciB0YWtlcyBhIGRheSB0byBsZWFybiwgYW5kIGEgbGlmZXRpbWUgdG8gbWFzdGVyLiIKRnJvbSB0aGF0IHN0YW5kcG9pbnQgdGhpcyBpcyBsaXRlcmFsbHkgdGhlIG9ubHkgb3B0aW9uLiBUaGV5IGNhbid0IHB1dCBhIHBhbGxpYXRpdmUgY2FyZSBwYXRpZW50IG91dCBvbiB0aGUgc3RyZWV0LiBUaGV5J3JlIG5vdCBnb2luZyB0byBoYXZlIGhpbSBhcnJlc3RlZCBmb3IgdGhlIGNvbnRyb2xsZWQgc3Vic3RhbmNlLCBhbmQgdGhleSBjYW4ndCBqdXN0IGxldCBoaW0gZG8gYXMgaGUgd2FudHMuCldlIGFsbCB3YW50IHRoZSBzYW1lIHRoaW5nLiAKTWlnaHQgYmUgZGlmZmVyZW50IGZvciBvdGhlcnMsIHRoYXQncyBqdXN0IG15IGV4cGVyaWVuY2UuLiAKRm9yIE1hbmlhYyB0aGUgbW9zdCBvYnZpb3VzIGFyZSAiQWQgQnVkZGllcyIgYW5kICJSZW50IEEgRnJpZW5kcyIuIEhpcyBqb2Igd2FzIGxpdGVyYWxseSB0byBtYWtlIGEgaGFuZHdyaXR0ZW4gbGV0dGVycyBhcyBnaWZ0cyBiZWNhdXNlIGluIHRoZSBmdXR1cmUgYWN0dWFsIHdyaXRpbmcgaGFzIGJlY29tZSBhIG5vdmVsdHkuIEkgdGhpbmsgaXRzIHN0dWZmIGxpa2UgdGhhdCB3aGljaCBzdG9vZCBvdXQgdG8geW91LiAKVGhlcmUgd2FzIGFuIGltbWVkaWF0ZSBhbmQgcmVsYXRpdmVseSBtYXNzaXZlIHB1Ymxpc2hlZCByZWFjdGlvbiB0byB0aGUgTW9udGdvbGZpZXIgYnJvdGhlcnMgZmlyc3QgYmFsbG9vbiBhc2NlbnNpb24gaW4gSnVuZSAxNzgzLCBtdWNoIG9mIHdoaWNoIHdhcyB1c2VmdWwgYW5kIGFwcGxpY2FibGUsIHNvbWUgb2Ygd2hpY2ggd2FzIGludGVyZXN0aW5nIGlmIG5vdCBwcmFjdGljYWJsZSwgYW5kIGEgbGl0dGxlIG9mIHdoaWNoIHdhcyBqdXN0IGRlZXBseSBwcm9ibGVtYXRpYywgbm90IHZlcnkgY29uc2lkZXJlZCwgYW5kIGFsbCBhcm91bmQgd3Jvbmcgb3ZlcmFsbCwgaXQgd2FzIGludGVyZXN0aW5nIHRoaW5raW5nLCB0aGlua2luZyBhYm91dCB0aGlzIGJyYW5kIG5ldyBpc3N1ZSwgcGVvcGxlIHRyeWluZyB0byBnZXQgdGhlaXIgaGVhZHMgYXJvdW5kIG5ldyBjb25jZXB0cyBhbmQgYW5zd2VyaW5nIHRoZW0gd2l0aCBuZXcgIGFuZCBub3Qgc28gbmV3IHRoaW5raW5nLi4gCkEgbG90IG9mIHRoYXQgaGFzIHRvIGRvIHdpdGggdGhlIGVjb25vbWljcyBvZiBjcm93ZCBmdW5kaW5nLiBPZnRlbiwgdGhlIGJhc2UgZ29hbCBpcyBzZXQgcmVhbGx5IGxvdywgYW5kIHdvdWxkIGJhcmVseSB0dXJuIGEgcHJvZml0LiBZb3UgaGF2ZSB0byBkbyBpdCB0aGF0IHdheSBpbiBvcmRlciB0byBhdHRyYWN0IHRoZSBpbml0aWFsIHdhdmUgb2Ygc3VwcG9ydC4gClRvbnkgQmxvb20gYW5kIEkgd2VyZSB0aGUgdHdvIGNoaXAgbGVhZGVycyBhdCBvdXIgdGFibGUsIGFuZCBhcyB3ZSBhcmUgZ3JlYXQgZnJpZW5kcywgaXQgd2FzIHVubGlrZWx5IHRoYXQgd2Ugd291bGQgY2xhc2guIFRoYXQgaXMgdW50aWwgd2UgcGlja2VkIHVwIGEgY291cGxlIG9mIG1vbnN0ZXIgaGFuZHMuIApCb25kIG1hcmtldGluZyBzcGVjaWFsaXN0cyBhbHNvIHR5cGljYWxseSBtYW5hZ2UgbWVkaWEgcmVsYXRpb25zIGZvciBib25kIGNhbXBhaWducy4gCkRvZHQgaGFkIHByZXZpb3VzbHkgc2VydmVkIHR3byBtb250aHMgYXQgU2FudGEgUml0YSBBbGFtZWRhIENvdW50eSBKYWlsLgpXZSBlZGl0ZWQgb24gMzVtbSBmaWxtLCA5IG1pbnV0ZSBzZWdtZW50cyBvZiB0aGUgbW92aWUsIHdoaWNoIHdlIHRoZW4gZGlkIG1peGluZyBvbiwgb3V0IG9mIG9yZGVyLCBzZXZlcmFsIHRpbWVzLiBDb25mdXNpbmcgYXMgaGVsbCwgYnV0IHRoZSBnYWdzIHdlcmUgZnVubnkuIEFsc28sIGZvciBhIGxvbmcgdGltZSwgd2Ugb25seSB3b3JrZWQgb24gdGhlIGJsYWNrIGFuZCB3aGl0ZSB2ZXJzaW9uIHRvIHNhdmUgbW9uZXkgZHVyaW5nIHNvdW5kIHBvc3Rwcm9kdWN0aW9uIHBoYXNlLiAKSSBrbmV3IGlmIEkgZGlkbid0IGRvIGl0IDIgeWVhcnMgYWdvLCBJIG5ldmVyIHdvdWxkIGFuZCBJJ2QgYmVhdCBteXNlbGYgdXAgZm9yIGl0LiBIZXJlIEkgYW0gMiB5ZWFycyBsYXRlciBHRVRUSU5HIFBBSUQgdG8gbW92ZSBpbnRvIG15IHNlY29uZCBwcm9wZXJ0eS4gCldlIHdlcmUgZ29ubmEgZW5qb3kgbGlmZSBhIGxpdHRsZSBiaXQuIEJ1dCBvbmUgbW9ybmluZyBpbiAyMDAzLCBKZXJyeSBoYXBwZW5lZCB0byB3YWxrIGJhY2sgaW50byB0aGUgY29ybmVyIHN0b3JlIGFuZCBzcG90dGVkIGEgYnJvY2h1cmUgZm9yIGEgYnJhbmQgbmV3IGxvdHRlcnkgZ2FtZSBjYWxsZWQgV2luZmFsbC4gCkEgY29tYmluZWQgYW5hbHlzaXMgb2YgMTIgZnJhY3R1cmUgcHJldmVudGlvbiB0cmlhbHMgZm91bmQgdGhhdCBzdXBwbGVtZW50YXRpb24gd2l0aCBhYm91dCA4MDAgSVUgb2Ygdml0YW1pbiBEIHBlciBkYXkgcmVkdWNlZCBoaXAgYW5kIG5vbnNwaW5hbCBmcmFjdHVyZXMgYnkgYWJvdXQgMjAlLCBhbmQgdGhhdCBzdXBwbGVtZW50YXRpb24gd2l0aCBhYm91dCA0MDAgSVUgcGVyIGRheSBzaG93ZWQgbm8gYmVuZWZpdC5bMTldIFJlc2VhcmNoZXJzIGF0IHRoZSBKZWFuIE1heWVyIFVTREEgSHVtYW4gTnV0cml0aW9uIFJlc2VhcmNoIENlbnRlciBvbiBBZ2luZyBhdCBUdWZ0cyBVbml2ZXJzaXR5IGhhdmUgZXhhbWluZWQgdGhlIGJlc3QgdHJpYWxzIG9mIHZpdGFtaW4gRCB2ZXJzdXMgcGxhY2VibyBmb3IgZmFsbHMuIApTbmVha3lzbmVha3lrRm9yIHRoZSBRdWVlbiA6YWxkbWVyaToKVGhlIG1lcmlkaWFuIHN5c3RlbSAoaW5uZXIgZW5lcmd5IHBvaW50cyBhbmQgcGF0aHdheXMpIGVuY291cmFnZXMgdGhlIGZsb3cgb2YgKGJvZHkgZW5lcmd5KSBhbmQgYmxvb2QgdGhyb3VnaG91dCB0aGUgYm9keS4gVHJhZGl0aW9uYWwgQ2hpbmVzZSBwaGlsb3NvcGhpZXMgdW5kZXJzdGFuZCBxaSAoIGFzIGFuIGVuZXJneSB0aGF0IG5vdCBvbmx5IGFuaW1hdGVzIG91ciBib2RpZXMsIGJ1dCB0aGUgd29ybGQgYXJvdW5kIHVzLiBIb3dldmVyIHlvdSBjaG9vc2UgdG8gaW50ZXJwcmV0IHRoaXMgd2F5IG9mIHRoaW5raW5nLCB0aGUgYmVuZWZpdHMgb2YgaXRzIGFwcGxpY2F0aW9uIGFyZSBjbGVhciB0byBtYW55Li4gCkkgY2FsbGluZyB0aGUgY29wcy4gSXQgd291bGQgYmUgaW5hcHByb3ByaWF0ZSB0byBqdXN0IGhhdmUgeW91IGxvc2UgdGhlIGdhbWUuIApNZXdzYXNoaU1lb3dpbW90byAgMSBwb2ludCAgc3VibWl0dGVkIDIgeWVhcnMgYWdvCiJUaGVpciBhdHRpdHVkZSB3YXMsICdUaGUgY3VzdG9tZXJzIG1heSB0cnkgaXQsIGJ1dCB0aGV5J2xsIGNvbWUgYmFjayBiZWNhdXNlIHRoZXkncmUgbG95YWwgdG8gdXMuJyBUcmFuc2xhdGUgdGhhdDogJ1dlJ3ZlIGJlZW4gYnJpYmluZyB0aGVtIHdpdGggZnJlZSBbZXhwbGV0aXZlXSBhbGwgdGhlc2UgeWVhcnMsIHNvIHRoZXkncmUgZ29pbmcgdG8ga2VlcCBjb21pbmcuJyBUaGVyZSB3YXMgZGVuaWFsIGZvbGxvd2VkIGJ5IHBhdGllbmNlIGZvbGxvd2VkIGJ5IHBhbmljLiAKUGVyc29ucyBvciBvcmdhbml6YXRpb25zIG1heSByZXF1ZXN0IGEgZ3JhbnQgYXBwbGljYXRpb24gb3Igb3RoZXIgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGVuZG93bWVudCBieSBjb250YWN0aW5nIHRoZSBFbmRvd21lbnQgUHJlc2lkZW50IENoYXJsZXMgRWxkcmlkZ2UuT3JhY2xlIENvb3BlciB3YXMgYWxzbyBzdXJwcmlzZWQgdG8gcmVjZWl2ZSBhIGNlcnRpZmljYXRlIGZyb20gQW1lcmljYSdzIEZyYXRlcm5hbCBCZW5lZml0cyBTb2NpZXR5LCByZWNvZ25pemluZyBoZXIgZm9yIGhlciBnb29kIHdvcmtzIHBlcmZvcm1lZCBpbiB0aGUgbmFtZSBvZiBBbWVyaWNhJ3MgRnJhdGVybmFsIEJlbmVmaXQgU29jaWV0aWVzLiAKVGhlIG9ubGluZSBwaGVub21zIHBsYXllZCBsaXRlcmFsbHkgdGhvdXNhbmRzIG9mIGhhbmRzIHBlciBkYXkuIFRoZSByb2FkIGdhbWJsZXJzIGluIHRoZSBvbGQgZGF5cyBzcGVudCB0aGVpciBlbnRpcmUgeWVhciBnb2luZyBmcm9tIGdhbWUgdG8gZ2FtZS4gCkR1cmluZyB0aGUgZmlyc3QgR3VsZiBXYXIsIGF0IGEgcHJvdGVzdCBpbiBOZXcgWW9yayBDaXR5IHdoZXJlIEkgbGl2ZWQgYXQgdGhlIHRpbWUsIEkgd2FzIHNvIHV0dGVybHkgYW5kIGNvbXBsZXRlbHkgZGVwcmVzc2VkIGJ5IHRoZSBhbnRpIHdhciBtb3ZlbWVudCwgc3VjaCBhcyB3ZSB3ZXJlLCB0aGF0IEkgc3RhcnRlZCBjaGFudGluZyAiSSB0aXJlZCwgSSBjcmFua3ksIEkgZG9uIGxpa2UgdGhlIGdvdmVybm1lbnQuIiB0aGUgY2hhbnQgc3RydWNrIGEgY2hvcmQgd2l0aCB0aGUgY3Jvd2QuIFdlIHdlcmUgYWxsIGNoYW50aW5nIGl0LiBQZXJmZWN0IHN1bW1hcnkgb2YgYSBwb3B1bGFjZSBzbyBidXJuZWQgb3V0IGJ5IGNvcnBvcmF0ZS9taWxpdGFyeSAiZGVtb2NyYWN5IiB0aGF0IHdlIGNvdWxkIG5vIGxvbmdlciB0aGluayBvZiBhbnl0aGluZyBtb3JlIGluc3BpcmluZyB0byBkbyB0aGFuIGNoYW50IG91ciBjb2xsZWN0aXZlIGRlcHJlc3Npb24uLiAKSSByZWFwIHRoZSBiZW5lZml0cyBvZiBjb2xvbmlhbGlzbSwgYW5kIEkgaGF0ZSB0aGUgYnJpdHMgZm9yIGNvbG9uaXppbmcuIApBbmQgYSBjZXJ0YWluIGFtb3VudCBvZiBwYWluLCBvZiBjb3Vyc2UsIGRvbiBzcHJlYWQgaXQgYW4gaW5jaCB0aGljayBmb3IgeW91ciBmaXJzdCBmaXguIApEdXJpbmcgYSBzZXJpZXMgb2YgbGVnYWwgZGlzcHV0ZXMgKG9uZ29pbmcgYXMgb2YgZWFybHkgMjAxMiksIFJldXRlciBoYXMgY2xhaW1lZCB0aGF0IEpheCB2aW9sYXRlZCBpdHMgbGljZW5zaW5nIGFncmVlbWVudCwgd2hpY2ggd291bGQgcHJvdmlkZSBncm91bmRzIGZvciBjb250cmFjdCB0ZXJtaW5hdGlvbi4gSmF4LCBpbiByZXNwb25zZSwgZGVuaWVkIGFueSB2aW9sYXRpb24gYW5kIGhhcyBnYWluZWQgcmVzdHJhaW5pbmcgb3JkZXJzIHRoYXQgaGF2ZSBiYXJyZWQgUmV1dGVyIGZyb20gY29udGFjdGluZyBpdHMgY3VzdG9tZXJzLCBzYXlpbmcgdGhhdCBoaXMgYWN0aW9ucyB3ZXJlIGludGVuZGVkIHRvIGRpc3J1cHQgSmF4J3MgcmVsYXRpb25zaGlwIHdpdGggdGhlbS4gTWVhbndoaWxlLCBib3RoIHNpZGVzIGNvbnRpbnVlIHRvIHByb2ZpdCBmcm9tIGdhbWUgc2FsZXMuIApPbmUgZGF5IHRoZXkgd2VyZSB3YWxraW5nIGFuZCBoZSBzdGVwcGVkIG9uIGEgbGFuZG1pbmUgYW5kIGRpZWQgd2hpbGUgc2hlIHdhdGNoZWQuIFNoZSB0aGVuIGdvdCBhIGpvYiBhdCBhIEdJIGJhciwgd2hlcmUgc2hlIG1ldCBteSBmcmllbmRzIGZhdGhlciwgYW5kIG1vdmVkIHRvIGFtZXJpY2Egd2l0aCBoaW0uIApGZWVsIHJlYWR5IGZvciB5b3VyIG93biBnYW1lIG9mIGNhc2lubyBwb2tlciB5ZXQ/IFlvdSB0aXJlZCBvZiBiZWluZyBhIG1lcmUgc3BlY3RhdG9yIGZyb20gdGhlIHNpZGVsaW5lcz8gVGhlbiBnZXQgb24gdXAsIG9mZiB5b3VyIHNlYXQsIHRvIHRoZSBuZWFyZXN0IGNhc2lubyEgQnV0IGlmIHRoZXJlJ3Mgbm8gY2FzaW5vIGluIHRoZSB2aWNpbml0eSByaWdodCBub3csIG5vdCB0byB3b3JyeS4gQ2FzaW5vIHBva2VyJ3MgZ29uZSBkaWdpdGFsLCByZW1lbWJlcj8gVGhlcmUgYXJlIHNldmVyYWwgY2FzaW5vcyBvbmxpbmUgdG8gY2F0ZXIgdG8geW91ciBldmVyeSBwb2tlcmlzaCB3aGltLiBBbGwgeW91IG5lZWQgaXMgeW91ciBzaGlueSBwbGFzdGljIGNyZWRpdCBjYXJkIGFuZCB0aGUgbGVnYWwgYWdlIHRvIGpvaW4uLiAKU2hvcnQsIFJlZ3VsYXRpb24gTk1TIGhhcyBwbGFjZWQgaW5ub3ZhdGlvbiBpbiBhIHN0cmFpZ2h0amFja2V0IGFuZCwgYXMgYW4gdW5mb3Jlc2VlbiBjb25zZXF1ZW5jZSwgbWF5IGxlYWQgdG8gaW5jcmVhc2VkIGNvbmNlbnRyYXRpb24gaW4gdGhlIHRyYWRpbmcgb2YgZXF1aXRpZXMsIEJsdW1lIHdyaXRlcy4gUmVndWxhdGlvbiBOTVMgY2F1c2VzIHRoZSBjb3N0IG9mIHRyYWRpbmcgdG8gYmVjb21lIG9uZXJvdXMsIGluc3RpdHV0aW9ucyB3aWxsIGZpbmQgd2F5cyB0byBldmFkZSBpdHMgZGljdGF0ZXMgLiAKQW5kIHRoZXJlIGlzICQxLDYxMiBvZiBjYXNoIHNhdmluZ3MgYXMgYSBjdXNoaW9uLiAKR2FycmV0dCBoYXMganVzdCBwdXQgb3V0IGhpcyBtZW1vaXIsIEdlb3JnZSBHYXJyZXR0OiBJbnRyZXBpZCBSZXBvcnRlci4uIApObyBuZWVkIHRvIGFsaWVuYXRlIG91ciBkcmVzc2luZyByb29tIHdoZW4gdGhlIGNoZW1pc3RyeSBpcyBzbyBnb29kLkkgZG9uIHRoaW5rIEdhdWRyZWF1IGlzIHRoYXQgaW1tYXR1cmUuIFRoZSBtYXJrZXQgaXMgaW4gYSBtdWNoIGRpZmZlcmVudCBwbGFjZSBub3cgdGhhbiBpdCB3YXMgd2hlbiBoZSBzaWduZWQuIEl0IHdhcyBhbHdheXMgYSBtYXR0ZXIgb2YgdGltZSB1bnRpbCBzb21lb25lIGNvbnRyYWN0IHdhcyBoaWdoZXIgdGhhbiBKb2hubnkvR2lvLiBJIHRoaW5rIGhlIGJlIGNvbnRlbnQga25vd2luZyB0aGF0IGF0IHRoZSBlbmQgb2YgaGlzIGN1cnJlbnQgY29udHJhY3QgICBhc3N1bWluZyBoZSBrZWVwcyB1cCBoaXMgbGV2ZWwgb2YgcGxheSAgIG1hbmFnZW1lbnQgd2lsbCBoYXBwaWx5IG1ha2UgaGltIHRoZSBoaWdoZXN0IHBhaWQgZmxhbWUuVGhhdCBiZWluZyBzYWlkLCBJIGRvIHRoaW5rIGl0IGJldHRlciBmb3IgdGhlIGZpcnN0IHBsYXllciB0byBleGNlZWQgdGhlIGludGVybmFsIGNhcCB0byBiZSBhIGhvbWUgZ3Jvd24gcHJvc3BlY3Qgd2hvIGhhcyBlYXJuZWQgaXQgd2l0aCB0aGUgZmxhbWVzIGxpa2UgVGthY2h1ay4gCk5wZGFkeSAgMSBwb2ludCAgc3VibWl0dGVkIDE1IGRheXMgYWdvCkNvbWUgc2VlIHdoYXQgdGhlIGFydGlzdHMgZnJvbSB0aGUgc3R1ZGlvIHRoYXQgZ2F2ZSB1cyBNZXRhbG9jYWx5cHNlLCBCaWcgTW91dGggYW5kIE5lcmRsYW5kIGNhbiBkbyB3aGVuIHRoZXkgbWFrZSB0aGVpciBvd24gNSBzZWNvbmQgY2FydG9vbi4gVGhlIGZpbmFsIHByb2R1Y3RzIGFyZSBhbGwgc3BsaWNlZCB0b2dldGhlciBpbnRvIG9uZSBmdWxsIGxlbmd0aCByZWVsLiAKU29ycmVuc29uIGFuZCBCcmlzYmFuZSBCZXJ0aWUgUGFnZS4gQ291bnRyeSByb2NrIGFuZCByb2xsIHZldGVyYW5zIFRoZSBSZSBNYWlucyB3aWxsIGFsc28gcGVyZm9ybSBhdCB0aGUgZnVuZHJhaXNlci4gSmltbXkgV2lsbGluZyBUaGUgUmVhbCBHb25lIEhpY2sgVXBzIGFyZSBhbHNvIG9uIHRoZSBsaW5lIHVwIGFzIHRoZSBOb3J0aGVybiBSaXZlcnMgZmF2b3VyaXRlIGhlZWwgYW5kIHRvZSBwcm9wb25lbnRzLiAKSSBsaWtlZCBNb2ZmYXQgYW5kIGhpcyB1bHRyYSBjb21wbGljYXRlZCBsb3JlIGFuZCBldmVuIGhpcyBvYnZpb3VzIGZhbmJveWlzbSBzaG93aW5nIHRocm91Z2ggdGhlIGVwaXNvZGVzLCBidXQgaXQga2luZCBvZiBuaWNlIHRvIGp1c3QgaGF2ZSBhbiBlcGlzb2RlIG9uIGFuZCBlbmpveSBpdCByYXRoZXIgdGhhbiBoYXZpbmcgdG8ga25vdyBhbGwgdGhlIGJhY2tzdG9yeS4gCiJKdXN0IEFub3RoZXIgVHJhaW4gU29uZyIgaXMgbm90IGFzIG9yZGluYXJ5IGFzIGl0IHNvdW5kcywgc2luY2UgaXQgaXMgYWJvdXQgc29tZW9uZSBhbG1vc3Qga2lsbGVkIGJ5IGEgdHJhaW4uIApFdmVyeW9uZSBvbiBIb21lIGFuZCBBd2F5IGlzIHJlcGxhY2VkIHdpdGggQ2hpbmVzZSBhY3RvcnMgd2l0aCBubyBleHBsYW5hdGlvbi4gS2V2aW4gUnVkZCBpcyByZXR1cm5lZCB0byB0aGUgUHJpbWUgTWluaXN0ZXJzaGlwLiAKIkkgd2lsbCB0ZWxsIHlvdSBvbmNlIGhlIHNob3QgKHRoZSBsYXN0IDMpLCBJIHRob3VnaHQgYWJvdXQgaG93IG1hbnkgaG91cnMgaGUncyBzcGVudCBpbiB0aGUgZ3ltLCIgc2FpZCBCYXJuZXMsIHdobyBlYXJuZWQgaGlzIGZpcnN0IHdpbiBvdmVyIGEgTm8uIDEgcmFua2VkIG9wcG9uZW50IGluIDMyIHllYXJzIGFzIGEgaGVhZCBjb2FjaC4gClNodXRVcEJlY2NhICAzIHBvaW50cyAgc3VibWl0dGVkIDIgbW9udGhzIGFnbwpFYWNoIG9mIHRoZSBmaXZlIHNlY3Rpb25zIGhhdmUgYSBzZXJpZXMgb2Ygc3ViIHNlY3Rpb25zLiBUaGVyZSBpbiBsaWVzdGhlIGFuc3dlciB0byBldmVyeSBxdWVzdGlvbiBhbnlvbmUgY291bGQgaGF2ZS4gQW5kIGluIHRoZSBldmVudCB0aGF0dGhleSBhcmUgc3RpbGwgbm90IHNhdGlzZmllZCwgdGhlcmUgaXMgdGhlIENvbnRhY3QgdXMgc2VjdGlvbiB3aGVyZWV2ZXJ5dGhpbmcgd2lsbCBiZSBhbnN3ZXJlZCBwcm9tcHRseS4KVGhpcyBtaWdodCBzb3VuZCBhIGxpdHRsZSB3ZWlyZCwgYnV0IGJlZm9yZSB0aGV5IG91dGxhd2VkIHBsYXlpbmcgcG9rZXIgb25saW5lLCBiZWZvcmUgdGhleSBvdXRsYXdlZCB0aGUgZmluYW5jaWFsIHRyYW5zYWN0aW9ucyBzdXBwb3J0aW5nIHBsYXlpbmcgcG9rZXIgb25saW5lLCBJIGFjdHVhbGx5IGdhbWJsZWQgYSBsb3Qgb25saW5lLiAKSXQgcHJvYmFibHkgaG9ja2V5LCB0aG91Z2guIApBbmQgT3ZvbCBnYXMgZHJvcHMgICB0aGVzZSByZWFsbHkgc2VlbWVkIHRvIGhlbHAgaGltIGEgdG9uLiBBbmQgdGhlIGdyaXBlIHdhdGVyIFdJVEggYWxjb2hvbCAoZGlwIHNvb3RoZXIsIHB1dCBpbiBtb3V0aCwgcmVwZWF0KS4uIApBbW9uZyB0aG91c2FuZHMgb2YgcG9rZXIgcHJvZHVjdHMgb3V0IHRoZXJlLCB5b3Ugd2lsbCBhdXRvbWF0aWNhbGx5IGZpbmQgeW91cnNlbGYgcnVubmluZyB0b3dhcmRzIGEgcHJvZHVjdCBsaWtlIFNpbHZlciBCdWR3ZWlzZXIgU3Bpbm5lciBQb2tlciBDYXJkIFByb3RlY3Rvci4gClRoZXJlIGFyZSBhbHNvIHNvbWUgYWxsIGZyZWUgcG9rZXIgc2l0ZXMgdGhhdCBvZmZlciB0b3VybmFtZW50cyBlaXRoIHdpdGggcHJpemVzIG9yIGNhc2ggcHJpemVzLiBZb3UgY2FuIHBsYXkgYWJzb2x1dGx5IGZyZWUgYW5kIHRoZSBwcml6ZXMgYXJlIHBhaWQgZm9yIGJ5IGFkcyBvbiB0aGUgc2l0ZXMgYW5kIGEgcHJlbWl1bSBtZW1iZXJzaGlwIG9wdGlvbi4gCk5UQSBZb3UncmUgbm90IGJlaW5nIGhvbW9waG9iaWMuIApBIHNwZWNpYWwgY29taWMgYm9vaywgYWJvdXQgdGhlIG9yaWdpbnMgb2YgRHJvbmEsIGhhcyBhbHJlYWR5IGhpdCBzdGFuZHMuICJBIGZpbG0gbGlrZSBEcm9uYSBsZW5kcyBpdHNlbGYgbmF0dXJhbGx5IHRvIGEgbWVyY2hhbmRpc2luZyBvcHBvcnR1bml0eS4gCk9oLCBpdCB0aGUgQWZyaWNhbnMgcHJvZHVjaW5nIGludGVyc2V4ZWQgYm9kaWVzLCBub3QgIiJjaXZpbGl6ZWQiIGNvdW50cmllcyBsaWtlIEF1c3RyYWxpYSBvciBBbWVyaWNhPyBTdWNoIGEgcmlkaWN1bG91cyBjbGFpbSBjYW4gb25seSBiZSBtYWRlIGJlY2F1c2Ugb2YgdGhlIFZpY3RvcmlhbiByYWNpYWwgc2NpZW5jZSB0aGF0IHByb2R1Y2VkIGJvdGggRW1waXJlIGFuZCBTcG9ydHMuIEFjY29yZGluZyB0byB0aGUgVmljdG9yaWFuIHNjaWVudGlzdHMsIGhpZ2hseSBpbmZsdWVuY2VkIGJ5IERhcndpbmlhbiB0aGVvcnksIHRoZSBtb3N0IGFkdmFuY2VkIGN1bHR1cmVzIHdlcmUgdGhvc2Ugd2l0aCB0aGUgbW9zdCBleHRyZW1lIHNleCBkaWZmZXJlbnRpYXRpb24uIApUaGlzIGlzIGEgY29tcGxldGVseSwgYW5kIEkgbWVhbiBjb21wbGV0ZWx5LCBjZW50cmFsaXplZCBjb2luLiAKQ2FtcGluZyBpcyBjb3VudGVyIHByb2R1Y3RpdmUgdG8gdGhlIGdhbWUgZGVzaWduLiAKR3Vlc3RzIGF0IE1HTSBwcm9wZXJ0aWVzIGluIExhcyBWZWdhcyBjYW4gYWNjZXNzIHRoZWlyIHJvb20gdXNpbmcgc21hcnRwaG9uZSBHdWVzdHMgc3RheWluZyBhdCBzb21lIE1HTSBSZXNvcnRzIEludGVybmF0aW9uYWwgcHJvcGVydGllcyBpbiBMYXMgVmVnYXMgd2lsbCBub3cgYmUgYWJsZSB0byBhY2Nlc3MgdGhlaXIgcm9vbSB1c2luZyBhIHNtYXJ0cGhvbmUuIERpZ2l0YWwga2V5cyB0aHJvdWdoIC4KVGhlIHZpY2UgY2hhaXJtYW4gb2YgdGhlIEZlZGVyYWwgUmVzZXJ2ZSwgRG9uYWxkIEtvaG4sIHdhcm5lZCBDb25ncmVzcyB0aGF0IHRoZSBPYmFtYSBhZG1pbmlzdHJhdGlvbiBwcm9wb3NhbCB0byBhbGxvdyBzb21lIGZlZGVyYWwgb3ZlcnNpZ2h0IG9mIG1vbmV0YXJ5IHBvbGljeSB3b3VsZCBiZSBhbiBlY29ub21pYyBkaXNhc3Rlci4gQWxsb3dpbmcgdGhlIEdvdmVybm1lbnQgQWNjb3VudGFiaWxpdHkgT2ZmaWNlIG1vbmV0YXJ5IGF1ZGl0aW5nIHBvd2VycyBvdmVyIHRoZSBGZWQgd291bGQgcmVzdWx0IGluIGhpZ2hlciBpbnRlcmVzdCByYXRlcyBhbmQgY2hpbGwgaW52ZXN0b3JzIHNpbmNlIHRoZXkgYmUgYWZyYWlkIHRoYXQgInBvbGl0aWNzIiBub3QgImVjb25vbWljcyIgd291bGQgZGV0ZXJtaW5lIG1vbmV0YXJ5IHBvbGljeS4KTE9TIEFOR0VMRVMgKEFQKSAgICJIb3cgVG8gVHJhaW4gWW91ciBEcmFnb246IFRoZSBIaWRkZW4gV29ybGQiIHRvcHBlZCB0aGUgTm9ydGggQW1lcmljYW4gYm94IG9mZmljZSBmb3IgYSBzZWNvbmQgd2VlaywgYnV0IGNsb3NlIG9uIGl0cyB0YWlsIHdhcyBUeWxlciBQZXJyeSdzIGZpbmFsIGluc3RhbGxtZW50IG9mIHRoZSAiTWFkZWEiIGZyYW5jaGlzZS4gCk5vbmUgb2YgdXMgZ290IGluanVyZWQgYXMgYSByZXN1bHQgb2Ygc3RyZXRjaGluZyB0aGF0IEkgYW0gYXdhcmUgb2YuIEFsc28gbm9uZSBvZiB1cyBnb3QgaW5qdXJlZCBieSBub3Qgc3RyZXRjaGluZy4gU28gSSBzdXNwZWN0IHRoYXQgYXMgbG9uZyBhcyB0aGUgam9pbnQgYW5kIG11c2NsZSBpcyBwcmVwYXJlZCBmb3IgdGhlIGhlYXZ5IGxvYWQgaW4gc29tZSB3YXksIGFuZCB0aGUgYm9keSB1bmRlcnN0YW5kcyB0aGUgcmFuZ2Ugb2YgbW90aW9uIGl0IGlzIGFib3V0IHRvIGVudGVyLCBpdCBkb2VzbiByZWFsbHkgbWF0dGVyLiAKIkxvb2sgYXQgYSBwbGFjZSBsaWtlIEVucm9uLiBQZW9wbGUgdG9vayBhIGxvdCBvZiBzbWFsbCBjaGFuY2VzIGFuZCB3b24sIHRoZW4gdG9vayBiaWcgY2hhbmNlcyBhbmQgbG9zdCBiaWcuIiBJbmRlZWQsIFNpbGVyIHBvaW50cyBvdXQsIGR1cmluZyB0aGUgcmVjZW50IGZpbmFuY2lhbCBjcmlzaXMsIGFuIGVudGlyZSBuYXRpb24gSWNlbGFuZCB3ZW50IGJhbmtydXB0IGluIGEgc2ltaWxhciB3YXksIHRydXN0aW5nIGhpZ2ggcmlzaywgaGlnaCByZXdhcmQgaW52ZXN0bWVudHMgdGhhdCBxdWl0IHBheWluZyBvZmYuLiAKU2l0IGFuZCBHbyBTaGFyayBtYWtlcyBjbGFpbSB0byB0aGlzIGJ5IGhhdmluZyBkZXNjcmlwdGl2ZSBwaHJhc2VzIHBhcnNlZCBpbiBzdGFja2VkIHNlY3Rpb25zIGZvciB5b3UgdG8gcmVhZCB3aGlsZSBwbGF5aW5nLiAKSGUgc2F0IGF0IHRoZSBiYXIsIGhhdmluZyBoaXMgb3duIGltYWdpbmVkIGNyaXNpcyB3aGlsZSBSZWJlY2NhIHdhcyBpbiB0aGUgbWlkZGxlIG9mIGEgcmVhbCBvbmUuIFNhbSBmcm9tIFRydWUgQmxvb2QgdHJpZWQgdG8gY29tZm9ydCBoZXIgbmVydmVzIHdpdGggYSBraXNzLCBhbmQgc2hlIHJlYWxpemVkIEphY2sgaGFkIGJlZW4gcmlnaHQgYWJvdXQgU2FtIGZyb20gVHJ1ZSBCbG9vZCdzIHJlYWwgaW50ZW50aW9ucy5TaGUgYW5kIEphY2sgZGVmdGx5IGF2b2lkZWQgbm90aWNpbmcgZWFjaCBvdGhlciBhcyBSZWJlY2NhIHdlbnQgdG8gdGhlIGJhY2sgb2YgdGhlIHRoZWF0ZXIgdG8gY2FsbCBob21lIGFuZCBsZWF2ZSBhIG1lc3NhZ2UgZm9yIGhlciBodXNiYW5kLCBzYXlpbmcgc2hlIGxvdmVkIGhpbSBhbmQgd2lzaGVkIGhlIHdhcyB0aGVyZS5NZWFud2hpbGUsIEphY2sgd2FuZGVyZWQgYmFja3N0YWdlLCB3aGVyZSBTYW0gZnJvbSBUcnVlIEJsb29kIGxldCBpdCBzbGlwIHRoYXQgaGUgImNyb3NzZWQgYSBsaW5lLiIgU28gSmFjayBwdW5jaGVkIGhpbSBpbiB0aGUgbm9zZSwgYW5kIHRoYXQncyB3aGVuIFJlYmVjY2EgcmV0dXJuZWQsIGZ1cmlvdXMuIApCZWNhdXNlIHRoZSBzZXJ2aWNlcyBhcmUgbm90IHN0cmljdGx5IGxlZ2FsLCB0aGV5IGFyZSBub3Qgd2lkZWx5IGFkdmVydGlzZWQuIApXaWxsIHdyaXRlIHRoaW5ncyBsaWtlIGJlIG9uIGRpYWx5c2lzIGJ1dCBvbmx5IGZvciBhIHdlZWsgc28gdGhleSB0aGluayB0aGV5IHRob3VnaHQgdGhpbmdzIHRocm91Z2gsIGJ1dCBpdCByZWFsbHkgbW9yZSBjb25mdXNpbmcgZm9yIHRoZSBwaHlzaWNpYW4uIApQbGFpbiBqYWNrZXQgICBhIGJvbWJlciBvciBzb21ldGhpbmcgc2ltcGxlLCBpZGVhbGx5LiAKVGlsdEp1aWNlIHUKVGhlIGx5cmljICJUaGUgcGlwZXIgd2lsbCByZWFkIHVzIHRvIHJlYXNvbiIgZml0cyB0aGUgdGhlbWUgb2Ygd2FudGluZyBhIGJldHRlciBsaWZlIGFuZCBnb2luZyB0byBoZWF2ZW4uIEl0J3MgbWVhbnMgaWYgd2UgYWxsIGhhdmUgdGhlIHNhbWUgdmlldyBhbmQgd29yayB0b2dldGhlciB0aGVyZSBjb3VsZCBiZSBhIGhlYXZlbiBvbiBlYXJ0aC4gVGhlIHBpcGVyIGxlYWRpbmcgdXMgdG8gcmVhc29uIGNvdWxkIGJlIGEgcmVsaWdpb3VzIHJlZmVyZW5jZS4gSW4gdGhlIEJpYmxlIGl0IHNheXMgYXQgdGhlIGVuZCBvZiB0aGUgd29ybGQgdGhlIG11bHRpdHVkZXMgd2lsbCBzaW5nIGFuZCBnb2Qgd2lsbCBnYXRoZXIgaGlzIGNoaWxkcmVuIHRvIGdvIHRvIGhlYXZlbi4gVGhpcyBjb3VsZCBiZSBpbiByZWZlcmVuY2UgdG8gdGhlIHBpcGVyIG9mIEhhbWVsaW4gd2hvIGxlYWQgdGhlIGNoaWxkcmVuIGF3YXkgZnJvbSB0aGUgdG93biBmb3IgcmV2ZW5nZSBvbiB0aGUgdG93biBmb2xrLgpJJ20gSnVzdCBzaGFyaW5nIGZsZWV0aW5nIHRob3VnaHRzLiAKVGhhdCdzIHdoeSBzbyBtYW55IHBlb3BsZSBpbnZvbHZlZCBpbiB0aGUgaXNzdWUgaW4gQ2FsaWZvcm5pYSBhcmUgd2F0Y2hpbmcgd2hhdCBpcyBoYXBwZW5pbmcgaW4gTmV3IEplcnNleS4gClRoaXMgaXMgcGFydGljdWxhcmx5IHRydWUgd2l0aCB0aGUgc3RyYW5nZSBjYXNlIG9mIEFsdmluIEdyZWVuZSB2aWN0b3J5IGluIHRoZSBEZW1vY3JhdGljIHByaW1hcmllcyBvbiBUdWVzZGF5LiBNci4gR3JlZW5lIHdvbiB3aXRob3V0IHJ1bm5pbmcgYSBjYW1wYWlnbiwgd2l0aG91dCBhbnkgcGFydHkgbWFjaGluZXJ5LCBoZWxsLCB3aXRob3V0IGV2ZW4gYSB3ZWJzaXRlISBhc2tlZCB3aGV0aGVyIHRoZSBlbGVjdGlvbiB3YXMgdGhlIHJlc3VsdCBvZiBHT1AgZGlydHkgdHJpY2tzLCBzZW5pb3IgV2hpdGUgSG91c2UgYWR2aXNlciBEYXZpZCBBeGVscm9kIHNhaWQ6CkFuZCB3YXMga25vd24gZm9yIGJldHRpbmcgYmlnIG9uIHZpZGVvIHBva2VyIGFuZCBzdGFyaW5nIGRvd24gZmVsbG93IGdhbWJsZXJzLiAKV2hlbiBteSBmcmllbmRzIGFyZSBidWxsaWVkIGJ5IHRoZWlyIGdpcmxmcmllbmRzIGFuZCBhcmUgdW5kZXIgdGhlaXIgdGh1bWIsIEkgY2FsbCB0aGVtICd3aGlwcGVkJyAgIGEgZmFpcmx5IGNvbW1vbiB0ZXJtIGhlcmUuIApUaGUgd2hvbGUgcG9pbnQgb2YgdGhlaXIgZXhlcmNpc2UgaXMgdG8gcG9zdHVyZSBhdCBub3QgYmVpbmcgcmVhc29uYWJsZSwgdG8gbWFpbnRhaW4gdGhlIGFwcGVhcmFuY2Ugb2YgYSB1bml0ZWQgZnJvbnQgdG8gZ2V0IGFzIG11Y2ggYXMgdGhleSBjYW4gYnkgd2F5IG9mIGNvbmNlc3Npb25zIGFuZCBnb29kaWVzIGZvciB0aGVpciBvd24gZGlzdHJpY3RzLCB3aGlsZSBsYW1iYXN0aW5nIGFsbCBnb3Zlcm5tZW50IHNwZW5kaW5nLgpZb3UgY2FuIGNvbnRyb2wgaG93IG90aGVyIHBlb3BsZSB2aWV3IHlvdS4gWW91IHdvbiBjaGFuZ2UgaGVyIG9waW5pb24gYnkgdHJ5aW5nIHRvIGJlIHNlZW4gYXMgImhpZ2ggdmFsdWUiIG9yICJ3b3J0aHkiLiAKV2UgaGF2ZSBubyBpZGVhIHdoYXQgdGhlIGZhbHNlIHBvc2l0aXZlIHJhdGUgaXMsIHRoYXQgaXMgaG93IG1hbnkgY2FyZWVycyBoYXZlIGJlZW4gZGVzdHJveWVkIGJlY2F1c2UgdGhlIG1hY2hpbmUgc2FpZCBhbiBob25lc3QgcGVyc29uIHdhcyBseWluZywgYnV0IHdlIERPIGtub3cgdGhlIGZhbHNlIG5lZ2F0aXZlIHJhdGU6IDEwMCUgTmVpdGhlciB0aGUgRkJJIG9yIENJQSBoYXMgZXZlciBjYXVnaHQgYSBtb2xlIG9yIHNweSB3aXRoIGEgcG9seWdyYXBoIHRlc3QuIApXZWxsIG15IGh1c2JhbmQgaGFkIGEgY29tcGxpY2F0ZWQgcmVsYXRpb25zaGlwIHdpdGggaGlzIGZhbWlseSBhbmQgdmFsdWVkIGhpcyBtb3RoZXIvc29uIHJlbGF0aW9uc2hpcCBtb3JlIHRoYW4gaGlzIGh1c2JhbmQvd2lmZSByZWxhdGlvbnNoaXAuIEhpcyBtb3RoZXIgd2FzIGFsd2F5cyBwdXQgZmlyc3QgdW5kZXIgaGVyIGFkdmljZSBoZSBzdGFydGVkIHB1c2hpbmcgZm9yIGEgZGl2b3JjZS4gSSBoYXRlZCBpdCwgSSBoYXRlZCB0aGUgZmVlbGluZ3Mgb2Ygc2hhbWUgYW5kIGFsc28gaG93IG15IHBhcmVudHMgc2hhbWVkIG1lIGJlY2F1c2Ugb2YgY291cnNlIGl0IGFsbCBoYWQgdG8gYmUgbXkgZmF1bHQuClNvbWV0aW1lcyBpIGRvIGZlZWwgYSBwYWluIGJ1dCBpdHMgbm90IHRvbyBvZnRlbiwgaXQgbWFrZXMgbWUgd2FudCB0byBwdXQgcHJlc3N1cmUgb24gbXkgZm9vdC4gCkkgYWxyZWFkeSBvd24gYSBTS1gwMDcgc28gSSBmZWx0IEkgaGFkIGNvdmVyZWQgbXkgbmVlZHMgb2YgYSBudW1iZXIgbGVzcyBkaWFsLiBBbHNvLCB0aGUgaG91ciBoYW5kIG9uIHRoZSBSYXkgbG9va2VkIHByZXR0eSBzaWxseSB0byBtZSwgc28gSSBkZWNpZGVkIG9uIHRoZSBNYWtvLi4gCkhvdyBtYW55IHBlb3BsZSBwbGF5IHBva2VyClNlY29uZGx5LCBzb21lIHBlb3BsZSBtaWdodCBnZXQgYSBiaXQgdW5lYXN5IGFib3V0IHRoZSB3aG9sZSB3YWxraW5nIGFyb3VuZCB0b3duIGZvbGxvd2VkIGJ5IGFuIGFybXkgb2YgdGVycmlmeWluZyB6b21iaWVzLiBJdCdzIG9uZSBvZiB0aGUgdGVuZXRzIG9mIGJlaW5nIGEgc3VwZXJoZXJvIHRoYXQgeW91ciBwcmVzZW5jZSBkb2Vzbid0IHByb21wdCBob3JyaWZpZWQgc2hyaWVrcyBmcm9tIGNoaWxkcmVuLiBTbyB3ZSB3b3VsZCBoYXZlIHRvIG1vdmUgc29tZXdoZXJlIHdoZXJlIGZyZWFraXNobHkgaW1wb3NzaWJsZSBhbmQgZXRoaWNhbGx5IHF1ZXN0aW9uYWJsZSB0aGluZ3Mgd29uJ3Qgc2VlbSBvdXQgb2YgcGxhY2UuIApTZWNyZXRhcmlhdCwgaW4gcmVzcG9uc2UgdG8gdGhlIHdpc2hlcyBvZiB0aGUgR2VuZXJhbCBBc3NlbWJseSBmb3IgcGVyaW9kaWMgYXNzZXNzbWVudCBvZiBwcm9ncmVzcwpEci4gClByb3MgQW5kIENvbnMgV2hlbiBZb3UgUGxheSBPbmxpbmUgUG9rZXIgT3ZlciBBY3R1YWwgQ2FzaW5vIFBva2VyCkl0IHdhcyBwZXJmZWN0IGFuZCBzaGUgb25seSBjaGFyZ2VkIG1lICQ5LiAKSG9vZGxpbmUgY3J1bmNoZWQgdGhlIG51bWJlcnMgdG8gZmluZCB0aGUgdG9wIGRlc3NlcnQgb3V0bGV0cyBpbiBCaXJtaW5naGFtLCB1c2luZyBib3RoIFllbHAgZGF0YSBhbmQgb3VyIG93biBzZWNyZXQgc2F1Y2UgdG8gcHJvZHVjZSBhIHJhbmtlZCBsaXN0IG9mIHRoZSBiZXN0IHNwb3RzIHRvIHZlbnR1cmUgbmV4dCB0aW1lIHlvdSBvbiB0aGUgaHVudC4gTGFuZ1RoZSBMaW9ucyBzYXkgTGFuZyByZXByZXNlbnRlZCBldmVyeXRoaW5nIHlvdSBjb3VsZCB3YW50IGZyb20gYSBmb290YmFsbCBwbGF5ZXIgYW5kIHRlYW0gY2FwdGFpbi4uIApDb3VydCBkZW5pZXMgbmV3IHRyaWFsIGZvciBtYW4gaW4gJ1NlcmlhbCcgcG9kY2FzdCBtdXJkZXIgY2FzZQpPbmUgbmlnaHQgSSB3YXMgcHV0dGluZyBteSBraWQgdG8gc2xlZXAgYW5kIEkgdXNlZCB0byBsYXkgaW4gYmVkIHdpdGggaGltIGFuZCBydWIgaGlzIGJhY2sgb3IgaG9sZCBoaXMgaGFuZCBzbyBoZSBjb3VsZCBmYWxsIGFzbGVlcCBxdWljaywgc28gSSBoYWQgdGhlIGRvb3Igc2h1dCBhbmQgSSBwbGF5ZWQgb24gbXkgcGhvbmUgd2hpbGUgSSBsYXllZCBpbiB0aGVyZSB3aXRoIGhpbS4gCkluIFRhbXBhIEJheSwgdGhlcmUgYXJlIHRocmVlIHN0YXRlIGxpY2Vuc2VkIHBhcmkgbXV0dWVsIGVzdGFibGlzaG1lbnRzIHdpdGggY2FyZCByb29tcyBEZXJieSBMYW5lLCBUYW1wYSBCYXkgRG93bnMgYW5kIFRhbXBhIEdyZXlob3VuZCBUcmFjayBpbiBhZGRpdGlvbiB0byB0aGUgU2VtaW5vbGUgSGFyZCBSb2NrIENhc2lubyBpbiBUYW1wYS4uIApUaGVyZSBub3QgZ29pbmcgdG8gYmUgYSBsb3QgZm9yIFByaW1lIE1pbmlzdGVyIEp1c3RpbiBUcnVkZWF1IGFuZCBoaXMgbWluaXN0ZXJzIHRvIHR3ZWV0IGFib3V0IGluIHRoZSBtb250aHMgYWhlYWQuLiAKU3RvcCB0cnlpbmcgdG8gbWFrZSB1cyBjYXJlIGFib3V0IGEgeWVhcmx5IFdvcmxkIENoYW1waW9uLiBNb3N0IG9mIHVzIGxpa2UgdGhlIDQgeWVhciBzcGVjdGFjbGUgb2YgYSBSV0MuIE1vc3Qgb2YgdXMgbGlrZSB0aGUgZ2VuZXJhbCBzZXR1cCBhdCB0aGUgbW9tZW50LCB3aXRoIHNvbWUgdGlua2VyaW5nIGludG8gaG93IFRpZXIgMiBuYXRpb25zIGNhbiBwcm9ncmVzcy4gCiJSYXRoZXIgdGhhbiB0cnlpbmcgdG8gc2NhcmUgc2VuaW9ycywgbGlrZSB5b3UncmUgZG9pbmcgYW5kIG90aGVyIHBlb3BsZSwgaXQncyB0aW1lIHRvIGhhdmUgYSBsZWdpdGltYXRlIGNvbnZlcnNhdGlvbiBhYm91dCBob3cgdG8gZml4IHRoYXQgcHJvZ3JhbSBzbyBpdCdzIG5vdCBiYW5rcnVwdC4iCkkndmUgZG9uZSBhIGJpdCBtb3JlIHJlc2VhcmNoIHRvIGZpbmQgeW91IGxpbmtzOgoiIFdlIGFyZSB0cnVseSBpbiBSaWNoIGRlYnQuCkluaXRpYWxseSBhcyBhIHRyYWluZWUgYW5kIHRoZW4gYXMgYSBqdW5pb3Igc2VjdXJpdGllcyBhbmFseXN0IGF0IEJBTSwgU3RvdXQgaXMgbm93IGFibGUgdG8gcHV0IGhpcyBpZGVhcyBpbnRvIGFjdGlvbi4gVGhlIG5vdmVsIGZvbGxvd3MgU3RvdXQgYXMgaGUgc3RlYWRpbHkgYnVpbGRzIGhpcyBwZXJzb25hbCBpbnZlc3RtZW50IGFjY291bnQgYnkgZXhwbG9yaW5nIG9wcG9ydHVuaXRpZXMgdGhhdCBoYWQgZ2VybWluYXRlZCBkdXJpbmcgdGhlIFdoYXJ0b24geWVhcnMuIEFtb25nIHRoZW0sIGhlIGNsb3NlbHkgZm9sbG93cyBSZXNvcnRzIEludGVybmF0aW9uYWwsIGEgY2FzaW5vIG9wZXJhdG9yIHRoYXQgaXMgbWFraW5nIGEgYmlnIGJldCBvbiBBdGxhbnRpYyBDaXR5LCBob3BpbmcgdG8gY3JlYXRlIGFuIEVhc3QgQ29hc3Qgcml2YWwgdG8gTGFzIFZlZ2FzIGNhc2lub3MuIApTbWVsbDogSSBzdHJ1Z2dsZWQgd2l0aCB0aGlzIG1vcmUgdGhhbiBJIGRpZCB3aXRoIG15IHNvdW5kIGJveC4gSSB0aG91Z2h0IGFib3V0IGNvbG9nbmUsIGJ1dCBoZSBwaWNreSBhYm91dCB3aGF0IGhlIHNtZWxscyBsaWtlLiBXaGF0IGNvdWxkIEkgZ2V0IHRoYXQgc21hbGwgYnV0IHVzZWZ1bD8gSSBlbmRlZCB1cCBnb2luZyB3aXRoIGEgc21hbGwgYmxhY2sgY2hlcnJ5IGNhbmRsZSBhbmQgYmxhY2sgaWNlIGFpciBmcmVzaGVuZXJzIGZvciBoaXMgdHJ1Y2suIEkgbm90IHN1cmUgaWYgaGUgdXNlIHRoZSBjYW5kbGUsIGJ1dCBJIGhhZCBubyBvdGhlciBpZGVhcy4gSSB0b2xkIGhpbSBJIHdhbnRlZCB0byBnbyB0byBDVlMgbGFzdCBuaWdodCwgYW5kIGhlIGFza2VkIHdoeSBJIHdvdWxkbiBqdXN0IGNvbWUgdG8gV2FsbWFydCB3aXRoIGhpbS4gSSBzYWlkIHRoYXQgSSBuZWVkZWQgdG8gZ2V0IGhpbSBhIGNhcmQgdG8gcHV0IHdpdGggaGlzIHNtYWxsIGdpZnQsIHRoYXQgSSBjb3VsZG4gYWZmb3JkIG11Y2ggYnV0IGRpZG4gd2FudCBoaW0gdG8gc2VlIGhpcyBjYXJkLiBIZSBmZWxsIGZvciBpdC4KT3ZlcnZpZXcgZm9yIE5pY2s0NzUzCkluIHJlZ2FyZHMgdG8gaXQgYmVpbmcgYWJsZSB0byAiY29udHJvbCB3b21lbiIgaXMgYSBiaXQgbm9uZSBzZW5zaWNhbC4gWWVzLCB5b3UgbmVlZCB0aGUgbWFsZSAiZ3VhcmRpYW4iIHNpZ25hdHVyZSBhcyB3ZWxsIGFzIHlvdXIgb3duIHRvIGdldCBhbiAidW5sb2NrZWQiIHBhc3Nwb3J0LiBNZWFuaW5nIHRoYXQgbm8gbmVlZCBmb3IgdGhlICJndWFyZGlhbiIgdG8gYmUgcHJlc2VudCBvciBhY2NvbXBhbnlpbmcgZHVyaW5nIHRyYXZlbCAod2hlbiBJIHNheSB0cmF2ZWwgSSBtZWFuIG91dHNpZGUgdGhlIGNvdW50cnksIHRoZXJlIGFyZSBubyBsb2NrcyBvciBhbnkgc29ydCBvZiBoaW5kcmFuY2UgZm9yIHRyYXZlbCB3aXRoaW4gU2F1ZGkgQXJhYmlhIG9yIHdpdGhpbiB0aGUgR0NDIGFzIHdob2xlKS4KTGFuY2UgTmlla3JvIGFuZCBUb2RkIExpbmRlbiB3ZXJlIG1ham9yIGRpc3NhcHBvaW50bWVudHMuLiAKQU1EIGFiYW5kb25lZCB0aGUgUEMgZ2FtaW5nIEdQVSBtYXJrZXQgZm9yIGNvbnNvbGVzLCBiZWNhdXNlIGl0IHdhcyBjbGVhciB0aGF0IFBDIGdhbWVycyBhdCBsYXJnZSBoYXMgZGVjaWRlZCB0byBiZXQgb24gTnZpZGlhIG5vIG1hdHRlciB3aGF0LiAKVGhlcmUgaXMgYSB0ZXN0IHRvIHRha2UgYWZ0ZXIgZWFjaCBsZXZlbC4gVGhlIHNlcmllcyBvZiBhdHR1bmVtZW50cyB3b3JrIHBvd2VyZnVsbHkgb24gdGhlIHNwaXJpdHVhbCBsZXZlbHMsIGFuZCBhcmUgZGVzaWduZWQgdG8gYWN0aXZhdGUgeW91ciBhYmlsaXR5IHRvIHByYWN0aWNlIHRoaXMgaGVhbGluZyBtb2RhbGl0eS4gCkkgd2VudCBpbiB0byB0aGlzIGVwaXNvZGUgMTAwJSBvbiBUaW0gUG9vbCBzaWRlLCBidXQgYWZ0ZXIgbGlzdGVuaW5nIHRvIEphY2sgYW5kIFZpamF5YSBleHBsYWluIHRoZWlyIHNpZGUgb2YgdGhpbmdzLCBJIHN0YXJ0ZWQgdG8gY29tZSBhcm91bmQgYSBsb3QgbW9yZS4KSW4gdGhlIGNhc2Ugb2YgY2F0YXN0cm9waGljIGZhaWx1cmUgbGlrZSBhIHBlYyB0ZWFyIG9yIGEgaGFuZCBzbGlwIHNpZGVzcG90dGVycyBzdGlsbCB3b3VsZG50IGJlIGFibGUgdG8gcmVhY3QgaW4gdGltZSBiZWZvcmUgdGhlIGJhciBkcm9wcyBvbiBzb21lb25lcyBjaGVzdC4gSSB0aGluayB0aGV5IHNob3VsZCBqdXN0IHVzZSBzYWZldHkgYmFycyBidXQgYXBwYXJlbnRseSB0aGF0IGdldHMgaW4gdGhlIHNpZGUganVkZ2VzIHdheSAobGlrZSBzcG90dGVycyBkb250PyBsbWFvKS4gCkltcHJpbWV6IHVuZSBmaWNoZSBhdmVjIGNlcyBjb21iaW5haXNvbnMgZXQgdHVkaWV6IGxhLiBTaSB2b3VzIGNvbm5haXNzZXogYmllbiB0b3V0ZXMgbGVzIGNvbWJpbmFpc29ucyBwb3NzaWJsZXMsIHZvdXMgcG91cnJleiBkdGVybWluZXIgc2kgdm90cmUgbWFpbiBlc3QgYXNzZXogZm9ydGUgcG91ciBxdWUgdm91cyBtaXNpZXogb3Ugc2kgdm91cyBkZXZleiB2b3VzIGNvdWNoZXIgb3UgZXNzYXllciBkZSBibHVmZmVyLi4gCk5vdyBiYW5uZWQgZnJvbSBXQSBTdGF0ZSBmcm9tCkF0IHRoZSBiYXIsIFN0ZXZlIFBha2VjaCwgNzAsIGRlc2NyaWJlZCBEb3VnaGVydHkgYXMgYSBzb3J0IG9mIG5laWdoYm9yaG9vZCBvcmdhbml6ZXIgd2hvIHRha2VzIGNhcmUgb2YgcGVvcGxlIGluIHRoZSBjb21tdW5pdHkuCkF1IHRvdGFsLCA0NHRhYmxpc3NlbWVudHMgb250IG9idGVudSB1biBwZXJtaXMgZGUgc2Fsb24gZGUgbWFzc2FnZS4gQ2VydGFpbnMgc29udCB0ZW51cyBwYXIgZGVzIG1hc3NvdGhyYXBldXRlcyByZWNvbm51cyBwYXIgdW5lIGFzc29jaWF0aW9uIHByb2Zlc3Npb25uZWxsZS4gCkhvdyBhIENodXJjaCBtZW1iZXIgZGVjaWRlcyB0byBpbnRlcnByZXQgdGhlc2UgZ3VpZGVsaW5lcyBpcyBiZXR3ZWVuIGhlIGFuZCB0aGUgTG9yZC4gCkJlZm9yZSB3ZSBoYWQgYSBjaGFuY2UgdG8gZnVsbHkgZ2V0IG91ciBoZWFkcyBhcm91bmQgdGhlIGltcGxpY2F0aW9ucyBvZiBlaXRoZXIgMTA3MCBvciBvZiB0aGUgc3Vic2VxdWVudCBib3ljb3R0LCBvdXIgZ292ZXJub3Igc2lnbmVkIEhCIDIyODEsIHdoaWNoIGlzIGludGVuZGVkIHRvIGVsaW1pbmF0ZSBhbnkgRXRobmljIFN0dWRpZXMgY2xhc3NlcyBmcm9tIHB1YmxpYyBhbmQgY2hhcnRlciBzY2hvb2xzIGluIEFyaXpvbmEuLiAKQXJlIHVwIDE1IHBlciBjZW50IGluIHRoZSBsYXN0IGhhbGYgb2YgMjAxOCBhbmQgdGhlIHNtYWxsIGluY3JlYXNlIGluIGRlbGlucXVlbmN5IHJhdGVzIG1hc2sgc29tZSB1bmRlcmx5aW5nIHdlYWtuZXNzLCBFcXVpZmF4IENhbmFkYSB2aWNlIHByZXNpZGVudCBCaWxsIEpvaG5zdG9uIHNhaWQgaW4gYSBzdGF0ZW1lbnQuCkNvbmNsdXNpb25zOiBCYWN0ZXJpYSBjdWx0dXJlZCBmcm9tIHRyYW5zcGVyaW5lYWwgcHJvc3RhdGljIGJpb3BzaWVzIGRvIG5vdCBkaWZmZXIgYmV0d2VlbiBtZW4gd2l0aCBhbmQgd2l0aG91dCBjaHJvbmljIHBlbHZpYyBwYWluIHN5bmRyb21lLiAyNiBjb25zZW50ZWQgYW5kIHdlcmUgcmVnaXN0ZXJlZCBieSB0aGUgUHJvc3RhdGl0aXMgRm91bmRhdGlvbiAoQkgpLCBldmFsdWF0ZWQgKEpDTiwgSkQpIHByaW9yIHRvIGFuZCBmb2xsb3dpbmcgdHJlYXRtZW50IChBRUYpLiBFdmFsdWF0aW9uIGF0IGJhc2VsaW5lIGFuZCBhZnRlciB0cmVhdG1lbnQgY29uc2lzdGVkIG9mIHN0YW5kYXJkaXplZCBoaXN0b3J5IGFuZCBwcmV2aW91c2x5IHZhbGlkYXRlZCBwcm9zdGF0aXRpcyBzcGVjaWZpYyBTeW1wdG9tIEZyZXF1ZW5jeSBRdWVzdGlvbm5haXJlIChTRlEpIGFuZCBTeW1wdG9tIFNldmVyZXJpdHkgSW5kZXggKFNTSSksIEludGVybmF0aW9uYWwgUHJvc3RhdGUgU3ltcHRvbSBTY29yZSAoSSBQU1MpIGFuZCBRdWFsaXR5IG9mIExpZmUgKFFvTCkgcXVlc3Rpb25uYWlyZSwgdGhlIE8nTGVhcnkgU2V4dWFsIEZ1bmN0aW9uIEludmVudG9yeSAoU0ZJKSBhbmQgYSBTdWJqZWN0aXZlIEdsb2JhbCBBc3Nlc3NtZW50IChTR0EpLiAKSG93ZXZlciwgZnJlc2ggcXVlc3Rpb25zIHdlcmUgcmFpc2VkIFR1ZXNkYXkgYWJvdXQgdGhlIE5vcnRoJ3MgZ29hbHMgYW5kIG1vdGl2ZXMsIHdpdGggdGhlIGRpc2Nsb3N1cmUgb2YgYSBQZW50YWdvbiByZXBvcnQgdG8gQ29uZ3Jlc3Mgc2F5aW5nIHRoYXQgbnVjbGVhciB3ZWFwb25zIGFyZSBjZW50cmFsIHRvIE5vcnRoIEtvcmVhJ3Mgc3RyYXRlZ2ljIGdvYWwgb2YgZW5zdXJpbmcgdGhlIHBlcnBldHVhbCBydWxlIG9mIHRoZSBLaW0gZmFtaWx5IGR5bmFzdHkuIFRoZSByZXBvcnQgb24gTm9ydGggS29yZWEncyBtaWxpdGFyeSBjYXBhYmlsaXRpZXMgd2FzIGJhc2VkIG9uIGFuIGFzc2Vzc21lbnQgb2YgZGV2ZWxvcG1lbnRzIGluIDIwMTcgYW5kIHdhcyBwcm92aWRlZCB0byBDb25ncmVzcyBpbiBBcHJpbC4gSXQgd2FzIHBvc3RlZCBvbmxpbmUgYnkgYW4gYW50aSBzZWNyZWN5IGdyb3VwLi4gCiJJdCdzIG5vdCBsaWtlIHRoaXMgaXMgYW4gYWNjaWRlbnQuIEknbSBzdXJlLCBubyBtYXR0ZXIgd2hhdCB5b3VyIGdlbmV0aWNzLCBldmVyeW9uZSBjYW4gYmUgb3V0IG9mIHNoYXBlLiAKQmVpbmcgYSBnZW51aW5lIGFuZCBnb29kIG1hbiBpcyBob3cgSSBnb3QgbWFycmllZCB0byBhIGdlbnVpbmUgYW5kIGdvb2Qgd29tYW4uIEl0IG5vdCByb2NrZXQgc2NpZW5jZS4KT25lIG9mIHRoZSBtb3JlIHBvcHVsYXIsIG1pbmQgYW5kIGJvZHkgY2VudGVyaW5nIG1hc3NhZ2VzIGlzIHRoZSBBcm9tYXRoZXJhcHkgTWFzc2FnZSB3aGljaCBpbmNvcnBvcmF0ZXMgQ2hha3JhIHN0b25lcyBhbmQgZXNzZW50aWFsIG9pbHMgdG8gYWxpZ24gYW5kIGdyb3VuZCB0aGUgYm9keSBhbmQgc2Vuc2VzLiAKVGhpcyBzY3JlYW1zIGZvciBjaGVraG92IGd1biwgdGhhdCBzb21laG93IHRoaXMgd2lsbCBiZSB1c2VmdWwgaW4gdGhlIGZ1dHVyZSwgZXNwZWNpYWxseSBpbiBhIG5lYnVsb3VzIGdhbWUgbGlrZSB0aGF0LiBUaGUgY29tbXVuaXR5IHRyaWVkIHRvIGZpbmQgYSB1c2UgZm9yIHllYXJzLCBldmVuIGFmdGVyIHRoZSBnYW1lIGRpcmVjdG9yIGNvbmZpcm1lZCB0aGF0IHRoZXJlIHdhc24gYW55IGhpZGRlbiBlZmZlY3QuCk1vc3Qgc2VydmVkLiBJIGRpZG4ga25vdyBhIHNpbmdsZSBwZXJzb24gd2hvIHNlcnZlZCBpbiB0aGUgd2FyLCB0aGF0IGVpdGhlciBsb3N0IHRoZWlyIGxpZmUgb3IgY2FtZSBob21lIGV4dHJlbWVseSBkYW1hZ2VkIChpbmp1cmVkLCBzZXZlcmUgUFRTRCwgYWRkaWN0ZWQgdG8gaGVyb2luLCBldGMuKS4gVGhpcyByaWdodGx5IG1hZGUgcGVvcGxlIGZ1cmlvdXMsIGl0IHdhcyBvbmUgb2YgdGhlIG1haW4gcmVhc29ucyB0aGF0IHdhciB2ZXRlcmFucyBwdWJsaWNseSBwcm90ZXN0ZWQgYWdhaW5zdCB0aGUgd2FyLiAKV2VsY2ggZXluZW4gdmVyc2NoaXNzZW5lbiBVbmZ1ZyBzY2hpY2t0ZXN0IGR1IGRpY2ggenVyIEhsbGUgbm9jaG1hbCBhbiwgYmVyIGRhcyBoZWlsaWdlIHJtaXNjaGUgUmV5Y2ggaW4gZGllIFdlbHQgaGVyYXVzenV0aHJhZ2VuLCBkdSBMdXN0a25hYmU/IFNleWQgZHJ1bWIgaW4gS2VubnRobmlzeiBnZXNldHpldCwgZGFzcyBtaW4gdGhyZXVlIFNuZGVyc2VlbGUgbWV5bmVzIEdld2FsdGhhdXZucyBiZXN0aGVyIExhbmRza25lY2h0IGdld2VzZW4gdW5kIGFuIFNjaHdlcnRoemdlbiBnZWdlbiBob2xsbmRpc2NoZSBSZWJlbGxlbiBtZXluZW4gVGhlaWwgdHJ1ZywgZGVyZXIgbmljaHQgbnVyIHphaGxyZXljaCwgc29uZGVybiBhdWNoIG9jY3VsdGVyIE5hdHVyYSB3YXJlbi4gRGVtIEhlcnJnb3R0aCBnZWZpaGwgZXMsIGRyZWltYWxodW5kZXJ0aCBGZXluZGUgZHVyY2ggZGFzIFdlcmsgbWV5bmVyIEhuZGUgdW1ia29tbWVuIHp1IGxhc3Nlbi4gR2VzY2h1aGx0aCBpbSBLbGV5bmtyaWVnIHNvd2llIGFscyBlcnN0aGVyIEFya2VidXNpZXIgZGVzIEV4ZXJjaXR1cyBJbXBlcmlpIGJpc3QgZHUgbmljaHRzIGRlbm4gZWluZXIgd2V5dGhlcmVuIE9yZHJlLiAKQmVzdGltbXQsIHdpZSB3ZWl0IGlociBnZWhlbiB3b2xsdC4gRWluaWdlIExldXRlIGZobGVuIHNpY2ggd29obCBkYW1pdCBiaXMgenVtIGJpdHRlcmVuIEVuZGUgenUgc3BpZWxlbiAoYWxzbyBiaXMgc2llIGtvbXBsZXR0IG5hY2t0IHNpbmQpLCBhbmRlcmUgd29sbGVuIHZpZWxsZWljaHQgbmljaHQgd2VpdGVyIGFscyBiaXMgenVyIFVudGVyd3NjaGUgZ2VoZW4uIFN0aW1tdCBhbHNvIGRhcyBMaW1pdCBhYiB1bmQgYXVjaCBvYiB1bmQgd2llIGRpZSBTcGllbGVyIGltIFNwaWVsIGJsZWliZW4sIHdlbm4gc2llIGtlaW5lIEtsZWlkdW5nc3Rja2UgbWVociB6dW0gc2V0emVuIGhhYmVuLi4gCkJ1dCBJIHN0aWxsIGhhZCB0byBkb2N1bWVudCBlYWNoIGFyZWEgb2Ygb3JpZ2luIHRob3JvdWdobHkgYW5kIGRvIGRpYWdyYW1zIGFuZCBhbGwgdGhhdCBiZWNhdXNlIGZhdGFsaXRpZXMgYXJlIGEgYmlnIGRlYWwuIFRoZSBlbnRpcmUgdGltZSBJJ20gd2Fsa2luZyB0aHJvdWdoIHRoZSBob3VzZSBpdCBmZWVscyBsaWtlIHRoZXJlJ3Mgc29tZW9uZSBzdGFuZGluZyBiZWhpbmQgbWUsIGxvb2tpbmcgZm9yIG1lIHRvIHNsaXAgdXAganVzdCBvbmNlLiAKV2hhdCBDRVMgMjAxNyBIYXMgVG8gT2ZmZXIgRm9yIFRlY2ggTG92ZXJzVGhlIE5ld2VzdCBUZWNoIEF0IFRoZVRoZSBJbnRlcm5hdGlvbmFsIENvbnN1bWVyIEVsZWN0cm9uaWNzIFNob3cgKENFUyAyMDE3KUEgQmVudGxleSBCZW50YXlnYSBpcyBzaG93biBkdXJpbmcgYSBzcGVlZCB0ZXN0IGFnYWluc3QgRmFyYWRheSBGdXR1cmUncyBGRiA5MSBwcm90b3R5cGUgZWxlY3RyaWMgY3Jvc3NvdmVyIHZlaGljbGUgKG5vdCBzaG93bikgZHVyaW5nIHRoZSBGRiA5MSdzIHVudmVpbGluZyBhdCBhIHByZXNzIGV2ZW50IGZvciBDRVMgMjAxNy4gVGhlIDEsMDUwIGhvcnNlcG93ZXIgRkYgOTEgZmVhdHVyZXMgYXV0b25vbW91cyBkcml2aW5nIHdpdGggM0QgbGlkYXIgYW5kIGNhbiBnbyBmcm9tIDAgdG8gNjAgbXBoIGluIDIuMzkgc2Vjb25kcy4gKFBob3RvIGJ5IEV0aGFuIE1pbGxlci9HZXR0eSBJbWFnZXMpLiAKUHJpbWFyeSBwYXJhbWV0ZXJzIHdlcmUgbnVtYmVyIG9mIGhlYWRhY2hlIGRheXMgYW5kIG1pZ3JhaW5lIGF0dGFjayBjb3VudC4gT2YgMzAgcGF0aWVudHMsIDI4IHdlcmUgZmVtYWxlIGFuZCAyIHdlcmUgbWFsZSwgYWdlZCAxOSA1MiB5ZWFycyAobWVhbiwgMzVfMTAgeWVhcnMpLi4gCjE6NiA3KS4gCkNvbW1lbnQgZm9uY3Rpb25uZSBjZSBzeXN0bWU/IFRycyBzaW1wbGVtZW50LiBVbiBwcmx2ZW1lbnQgZCdvZGV1ciBlc3Qgb3ByIHN1ciBsYSBzY25lIGR1IGNyaW1lLCBzdXIgdW4gdGlzc3UuIApQcm9ncmVzcyBpbiBnZXR0aW5nIG9ubGluZSBwb2tlciBpbiBDYWxpZm9ybmlhCllvdXIgbW9tIGlzIGRlZmluaXRlbHkgZmFpbGluZyBhcyBhIG1vbS4gSGVyIGpvYiBpcyB0byBsb3ZlIHlvdSBhbmQgcHJvdGVjdCB5b3UuIFNoZSdzIHNleHVhbGl6aW5nIHlvdSBhbmQgdHJ5aW5nIHRvIGVxdWF0ZSB5b3VyIHdvcnRoIHdpdGggeW91ciBhYmlsaXR5IHRvIHNleHVhbGx5IGF0dHJhY3QgYSBodXNiYW5kLiBUYWtlIGl0IGZyb20gdGhpcyBtb206IHNoZSdzIHdyb25nLiBZb3UgZG9uJ3QgbmVlZCB0byBhbHRlciB5b3Vyc2VsZiB0byBmaW5kIGxvdmUgYW5kIHlvdSBhcmUgZ3JlYXQganVzdCBhcyB5b3UgYXJlLgpJIGFjdHVhbGx5IGxpa2UgdGhlIHNoeSBNQyBhcmNoZXR5cGUuIEJ1dCBpdCBzaG91bGQgZ28gc29tZXdoZXJlLiBUaGlzIGNoYXB0ZXIgd2FzIGFuIG9wcG9ydHVuaXR5IHRvIHNob3cgdGhlIGNoYXJhY3RlcnMgYm9uZGluZyBhbmQgcmV2ZWFsaW5nIHN0dWZmIGFib3V0IHRoZW1zZWx2ZXMuIApXZSBoYWQgY29ucXVlcm9yIG9mIGZsZXNoIGFuZCBibG9vZCAsYSByZWFsIG1vZGVybiBkYXkgaW50ZXJnYWxhY3RpYyBtYW4sIGluIGZyb250IG9mIG91ciBleWVzIHdobyBjb3VsZCBnbyBhZnRlciB0aGUgY29ucXVlc3Qgb2YgZGFyayBtYXR0ZXIuIFJhY2lhbCBiYXJyaWVycyB3ZXJlIGFubmloaWxhdGVkLCBodW5nZXIsIGplYWxvdXN5LCB3b3JsZCBwcm9ibGVtcyB3ZXJlIGFsbCBlcmFkaWNhdGVkLiAKV2UgY2FuIHdhaXQgdG8gcmV2ZWFsIHRoZSBuZXcgd2Vic2l0ZSB0byB5b3UsIHNvIGlmIHlvdSBhcmUgbG9va2luZyBmb3J3YXJkIHRvIGl0LCBhbmQgd2FudCB0byBrZWVwIHVwIHdpdGggd2hhdCB3ZSBhcmUgZG9pbmcgdGhlbiBwbGVhc2UgZm9sbG93IHVzIG9uIG91ciBTb2NpYWwgTWVkaWEgQ2hhbm5lbHMsIHdoZXJlIHdlIHdpbGwga2VlcCB5b3UgdXAgdG8gZGF0ZSBvbiBvdXIgbGF0ZXN0IG5ld3MgaW4gdGhlIG1lYW50aW1lIVdlIGFyZSBwbGVhc2VkIHRvIGFubm91bmNlIHdlIGFyZSBwcm91ZGx5IHNwb25zb3JpbmcgQmVkZm9yZCBIb2NrZXkgQ2x1YiEgRm91bmRlZCBpbiAxODkzLCBCZWRmb3JkIEhvY2tleSBDbHViIGhhcyBiZWNvbWUgb25lIG9mIHRoZSBiaWdnZXN0IGFuZCBtb3N0IHN1Y2Nlc3NmdWwgY2x1YnMgaW4gb3VyIHJlZ2lvbi4gV2l0aCAyNSB0ZWFtcywgQmVkZm9yZCBIb2NrZXkgQ2x1YiBhY2NvbW1vZGF0ZXMgYWxsIGFnZXMgYWJpbGl0aWVzLgpUaGlzIGFydGljbGUgaXMgdGhlIG1vc3QgYmFzaWMgaXQgZ2V0cyB3aGVuIGl0IGNvbWVzIHRvIEhvbGRlbSBzdHJhdGVneSBhbmQgSSBob3BlIHlvdSBjb250aW51ZSB0byBsZWFybiBhYm91dCBpdCBvbiB5b3VyIG93bi4gR29vZCBsdWNrLCBhbmQgcmVtZW1iZXIsIHJlZ2FyZGxlc3Mgb2YgYW55IGJhZCBiZWF0IHlvdSBtYXkgZ2V0LCB5b3UgY2FuIHdpbiBhbmQgaXQgYWxyZWFkeSBiZWVuIGRvbmUgYnkgbWFueS4uIApXZSBiZWtla2VuIG9vayBabGF0eSBTdG9sOiBkZSBtaWpuaW5nYW5nIChtZXQga2xlaW4gdWl0c3Ryb21lbmQgd2F0ZXJ0amUpIHZhbiBkZSBtaWpuIEpvc2VmLi4gCkl0IG1pZ2h0IGJlIHdvcnRod2hpbGUgZm9yIGFsbCB0aG9zZSB3aG8gc3ltcGF0aGl6ZSB3aXRoIHRoZSBvY2N1cGllcnMgb2YgWnVjY290dGkgUGFyayBhbmQgb3RoZXIgcGxhemFzIGFuZCBzcXVhcmVzIGFyb3VuZCB0aGUgY291bnRyeSB0byBsZWFybiBmcm9tIHRoZSBleGFtcGxlIG9mIHRoZSBDaHJpc3RtYXMgU2VhbHMgY2FtcGFpZ24uIApNeSByZWFsIGFtYml0aW9ucyBhcmUgaW4gbGl2ZSBwb2tlciBybiwgSSB0aGluayB0aGVyZSBpcyBhIGxvdCAobGlrZSBhIHNoaXQgdG9uKSBvZiBtb25leSB0byBiZSBtYWRlIGluIGxpdmUgcG9rZXIsIGFuZCBJJ3ZlIGZvdW5kIGJ1aWxkaW5nIGEgc2tpbGwgc2V0IHRvIGNydXNoIHRoZXNlIGdhbWVzIHNpbWlsYXIgdG8gd2hlbiBJIHdhcyBmYXNjaW5hdGVkIHdpdGggYnVpbGRpbmcgc3Ryb25nIHRlY2huaWNhbHMvZnVuZGFtZW50YWxzIHRvIGNsaW1iIHVwIHRoZSByYW5rcyBvbmxpbmUuIE1heWJlIEknbGwgZ2V0IHRoZSBvbmxpbmUgYnVnIGFnYWluIGFuZCB0cnkgYW5kIHB1c2ggaW50byBoaWdoZXIgc3Rha2VzLCBidXQgSSBoaWdobHkgZG91YnQgaXQuCldoYWxlbWFuZ28gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMjIgZGF5cyBhZ28KT25jZSB5b3UgaGF2ZSBpbnRyb2R1Y2VkIHRoZSBjb25jZXB0LCBhbmQgZXhwbGFpbmVkIHRoZSBkaWZmZXJlbnQgc3RlcHMgaW52b2x2ZWQgaW4gZG9pbmcgdGhlIGNhbGN1bGF0aW9uLCBwcm92aWRlIGEgc2ltcGxlIGV4YW1wbGUuIApGb3IgaW5zdGFuY2UgSSd2ZSBtYWRlIGEgY29tbWl0bWVudCB0byBteSBodXNiYW5kIGFuZCBpdCBkb2Vzbid0IG1hdHRlciwgYXQgdGhlIGVuZCBvZiB0aGUgZGF5LCBob3cgSSBmZWVsLiAKUmVhZCB0aGUgRW50aXJlIEFydGljbGVCdXN0aW5nICBQb2tlciBNeXRocwpEb3dudm90ZSBmb3IgaXJyZWxldmFuY3ksIGxvdyBjb250ZW50LCBvciB1bmhlbHBmdWwgY29udGVudC4gSXQgaXMgbm90IGludGVuZGVkIHRvIGJlIGEgc2ltcGxlIGRpc2FncmVlbWVudCBidXR0b24gYW5kIHNob3VsZCBub3QgYmUgdXNlZCBpbiB0aGF0IGNhcGFjaXR5LiBVcHZvdGUgZm9yIGNvbnRlbnQgdGhhdCBpcyBpbnRlcmVzdGluZywgZW5jb3VyYWdlcyBjcml0aWNhbCB0aGlua2luZywgb3IgZGlzY3Vzc2lvbi4KSSBnYXZlIGhpbSBldmVyeXRoaW5nIEkgbmV2ZXIgaGFkLiAKSSB0aGluayBBcGV4IHVuZGVyc3RhbmRzIHRoaXMgdG9vIGJ1dCB3aXRoIGl0IGJlaW5nIGEgbmV3IGdhbWUgaXQgdGFraW5nIHRoZW0gYSBiaXQgbG9uZ2VyIGdldHRpbmcgdXAgYW5kIHJ1bm5pbmcgd2hpbGUgYWxzbyBmaXhpbmcgZ2xpdGNoZXMvYWRkcmVzc2luZyBjaGVhdGVycy4gCk5vdywgZXZlbiB0aG91Z2ggVUhGIGlzbid0IGV4YWN0bHkgYSBncml0dHkgZG9jdW1lbnRhcnkgYWJvdXQgdGhlIGxhdGUgJzgwcyBtZWRpYSBsYW5kc2NhcGUsIGEgY2hhcmFjdGVyIGRvZXMgYWNjdXJhdGVseSBtZW50aW9uIHRoYXQgaXQncyBpbGxlZ2FsIGZvciBzb21lb25lIHRvIG93biB0d28gc3RhdGlvbnMgaW4gdGhlIHNhbWUgdG93bi4gT3IgYXQgbGVhc3QsIHRoYXQncyBob3cgaXQgd2FzIGJhY2sgdGhlbi4gCkluZHVzdHJ5IERpZmZlcmVuY2VzTGl0aWdhdGlvbiBwYXJhbGVnYWwgc2FsYXJpZXMgYWxzbyBkaWZmZXIgZGVwZW5kaW5nIG9uIHRoZSBpbmR1c3RyeS4gQWNjb3JkaW5nIHRvIEluZGVlZCwgZm9yIGV4YW1wbGUsIGxpdGlnYXRpb24gcGFyYWxlZ2FscyBzcGVjaWFsaXppbmcgaW4gaW50ZWxsZWN0dWFsIHByb3BlcnR5IGxpdGlnYXRpb24gZWFybiBhYm91dCAkNTMsMDAwIGEgeWVhciwgd2hpbGUgaW5zdXJhbmNlIGRlZmVuc2UgcGFyYWxlZ2FscyBlYXJuIGFib3V0ICQ1MSwwMDAuIApXaGF0IGtpbmQgb2Ygc2F1Y2UgaXMgdGhpcz8ge3NwaXRzIG91dCBwaWVjZXMgb250byB0aGUgcGxhdGUgYW5kIG1ha2VzIHJldGNoaW5nIG5vaXNlc30gVGFrZSB0aGlzIGJhY2sgdG8gaGltIGFuZCB0ZWxsIGhpbSB0byBlYXQgYSBwaWVjZSBhbmQgbG9vayB5b3UgaW4gdGhlIGV5ZSBhbmQgc2F5IGl0IHRoZSBiZXN0IHBpenphIGhlIGV2ZXIgaGFkLiIuIApUaHJlZSB3aW5zLiBEb2VzbiBtYXR0ZXIsIDYgNSBvciA1IDAuIEEgd2luIGlzIGEgd2luLiBUaGF0IHdoeSB3ZSBoZXJlLCBzYWlkIEtvc2tpbmVuLgpPdmVyIHRoZSBuZXh0IHdlZWssIHNoZSB3YXMgcGFzc2VkIHRvIHNpeCBvdGhlciBtZW4gd2hvIHJhcGVkIGFuZCBiZWF0IGhlciwgYmVmb3JlIGJlaW5nIGdpdmVuIHRvIG9uZSB3aG8gcGxhbm5lZCBvbiB0YWtpbmcgaGVyIHRvIFN5cmlhLiBCdXQgZmlyc3QgaGUgbmVlZGVkIHRvIGJ1eSBoZXIgbW9yZSBjbG90aGluZy4gTGVmdCBhbG9uZSBmb3IgdGhlIGZpcnN0IHRpbWUgaW4gdHdvIHdlZWtzLCBzaGUgaW1wdWxzaXZlbHkgdHJpZWQgdGhlIGZyb250IGRvb3IuIApDYXB0aW9uOiAiQXQgdGhlIGJlZ2lubmluZyB3ZSB0aG91Z2h0IGFib3V0IGRvaW5nIGl0IGF0IGhvbWUsIGFuZCB0aGVuIHNvbWVvbmUgc2FpZCwgaWYgd2UgaHVuZyB1cCBvdXIga25pY2tlcnMgaW4gdGhlIHJvYWQgYW5kIHBob3RvZ3JhcGhlZCB0aGVtPyBhbmQgaXQgd2FzIHRoZW4gdGhhdCB3ZSB0aG91Z2h0IHRoYXQgd2Ugd2VyZSBvbnRvIHNvbWV0aGluZy4iVGhlIHJvYWQgaGFzIHJlY2VpdmVkIG1peGVkIHJldmlld3Mgb24gVHJpcEFkdmlzb3IuIApJIHRoaW5rIHNwb2lsZWQgbWF5IG5vdCBiZSB0aGUgd29yZCBJIHdvdWxkIGNob29zZS4gSSBhY3R1YWxseSB0aGluayB0aGF0IE1hbGF6YW4gaXMganVzdCBpbiBpdCBvd24gY2F0ZWdvcnkgaW4gYSBsb3Qgb2Ygd2F5cy4gSXQgc2NhbGUgaXMgb24gYSB0b3RhbGx5IGRpZmZlcmVudCBsZXZlbCwgdG8gdGhlIHBvaW50IHdoZXJlIGV2ZW4gYWZ0ZXIgMjArIHNlcGFyYXRlIG5vdmVscyBpbiB0aGUgc2FtZSB1bml2ZXJzZSBpdCBmZWVscyBsaWtlIHlvdSBhcmUgb25seSBzY3JhcGluZyB0aGUgc3VyZmFjZS4gCkFzIG9idmlvdXMgYXMgdGhlc2UgcG9pbnRzIHNvdW5kLCB0aGV5IGFyZSBlYXN5IHRvIGZvcmdldC4gU29tZXRpbWVzIGl0IGNhbiBiZSBoZWxwZnVsIHRvIHNldCBhbiBhbGFybSBvciB1c2UgYSBjZXJ0YWluIHRpbWUgb2YgZGF5IHRvIHJlbWluZCB5b3UgaXQncyB0aW1lIHRvIHRha2UgYSBicmVhay4gVGhlIGxhdHRlciBhcHByb2FjaCBjYW4gYmUgcGFydGljdWxhcmx5IHVzZWZ1bCBhdCB3b3JrICAgb25jZSB5b3UgYXNzb2NpYXRlIGEgcGFydGljdWxhciB0aW1lIG9mIGRheSB3aXRoIHJlbGF4aW5nLCB5b3UnbGwgaGF2ZSBzb21ldGhpbmcgdG8gbG9vayBmb3J3YXJkIHRvLCB3aGljaCBtYXkgbWFrZSB0aGUgcmVzdCBvZiB0aGUgZGF5IHRoYXQgYml0IG1vcmUgbWFuYWdlYWJsZS4uIApUdXJtZXJpYyBtaWdodCBqdXN0IGJlIG9uZSBvZiB0aGUgbW9zdCB2ZXJzYXRpbGUgc3BpY2VzIG9uIHRoZSBwbGFuZXQuIFdoZXRoZXIgeW91J3JlIGZhbWlsaWFyIHdpdGggaXQgb3Igbm90LCB5b3UndmUgcHJvYmFibHkgZWF0ZW4gaXQgYXQgc29tZSBwb2ludCBvciBhbm90aGVyIGJlY2F1c2UgdHVybWVyaWMgaXMgb25lIG9mIHRoZSBtYWluIGluZ3JlZGllbnRzIGluIGJvdGggY3VycnkgYW5kIG11c3RhcmQuIApNeSBndWlkZSBib29rIHNhaWQgdGhlIGhvdGVsIGhhZCAibWFyYmxlIGZsb29ycyIgYW5kIHRoaXMgd2FzIHRydWUuIEl0IGFsc28gaGFkIGEgdG9pbGV0IHlvdSB3b3VsZG4gbm9ybWFsbHkgc2l0IG9uLiBJdCBzdHJhbmdlIHdoYXQgdGhleSBjaG9vc2UgdG8gcHJvbW90ZSEKQXJlIHlvdSBzZWVpbmcgYSB0aGVyYXBpc3Q/IFNvbWVvbmUgd2hvIGNhbiB0YWxrIHRvIGFib3V0IGZlZWxpbmcgbGlrZSB5b3UncmUgbm90IGRldmVsb3BpbmcsIGV2ZW4gd2l0aCBoZWxwPwpZb3UgY2FuIGZpbmQgcGxlbnR5IG9mIGJsYWNrIHdvbWVuIHdobyBkbyBub3QgZml0IHRoZSBiaWxsLiAKIlRoZSBjbHVicyB0aGF0IGFyZSBzdGVhbWluZyBhaGVhZCBhcmUgdGhvc2UgdGhhdCBhcmUgdGhvcm91Z2hseSBtb2Rlcm4sIGluIHRvdWNoIHdpdGggdGhlaXIgbWVtYmVycyBhbmQgYXJlIGRpdmVyc2lmeWluZyB0byBhIGdyZWF0ZXIgZXh0ZW50LCIgTXIgQmFsbCBzYWlkLiBXYXJpbGxhIEJvd2xzIGFuZCBSZWNyZWF0aW9uIENsdWIgYW5kIE9hayBGbGF0cyBCb3dsaW5nIGFuZCBSZWNyZWF0aW9uIENsdWIsIHdoaWNoIGFtYWxnYW1hdGVkIHdpdGggSWxsYXdhcnJhIFlhY2h0IENsdWIgZWFybGllciB0aGlzIHllYXIsIHByb3ZpZGUgdHdvIHZlcnkgZGlmZmVyZW50IGV4YW1wbGVzIG9mIGRpdmVyc2lmaWNhdGlvbiBpbiB0aGUgaW5kdXN0cnkuIFRoaXMgRGVjZW1iZXIsIHRoZSBXYXJpbGxhIGNsdWIgd2lsbCBvcGVuIHRoZSBkb29ycyB0byBpdHMgJDYuMyBtaWxsaW9uIHJldmFtcCwgd2hpY2ggaXMgdGhlIHJlc3VsdCBvZiAxOCBtb250aHMgb2Ygc3RyYXRlZ2ljIHBsYW5uaW5nLiAKSXQgdHJlYXRpbmcgYSBwZXJzb24gZGlmZmVyZW50bHkgb24gdGhlIGJhc2lzIG9mIHRoZWlyIHNleC4gClN0dWR5IHF1YWxpdHkgd2FzIGFzc2Vzc2VkIHVzaW5nIHRoZSBKYWRhZCBzY2FsZSAocmFuZG9taXNlZCBjb250cm9sbGVkIHRyaWFscykgYW5kIERvd25zIGFuZCBCbGFjayBjaGVja2xpc3QgKHJhbmRvbWlzZWQgYW5kIG5vbiByYW5kb21pc2VkIHN0dWRpZXMpLiBTdGF0aXN0aWNhbCBzaWduaWZpY2FuY2Ugd2FzIGluZGljYXRlZCBieSBwIHZhbHVlcy4KSSBzdGlsbCBsb3ZlIHRvIHN3aW0gaXQncyBqdXN0IGF3ZXNvbWUuLiAKV2UgYXJlIHNvIGhhcHB5IHRvIGtub3cgdGhhdCB3ZSBhcmUgeW91ciBmYXZvcml0ZS4gV2UgYXJlIGN1cnJlbnRseSBtYWtpbmcgZ3JlYXQgY2hhbmdlcyB0byB0aGUgb3ZlcmFsbCBjYXNpbm8gYW5kIGhvdGVsLCBzbyB3ZSBob3BlIHRoYXQgeW91IHdpbGwgYmUgYWJsZSB0byBtYWtlIGl0IGRvd24gaW4gdGhlIG5leHQgZmV3IG1vbnRocyB0byBjaGVjayB0aGVtIG91dC4gCllvdSBhcmUgZ2l2ZW4gYSBmaWN0aXRpb3VzIGJhbmtyb2xsIHRoYXQgeW91IGhhdmUgdG8gcGxheSB3aXRoLiAKV2FsbG9uaWEgYW5kIHRoZSBGcmVuY2ggc3BlYWtpbmcgY2FuIG1lcmdlIGJlY2F1c2UgdGhlcmUgdGhhdCB0aW55IG1pbm9yaXR5IGluIFdhbGxvbmlhIHdobyBzcGVha3MgR2VybWFuLiAKMTYgYXQgbm9vbjsgQm93IE1hcmtldCwgU29tZXJ2aWxsZTsgcHJpY2VzIHZhcnkpLiAKWW91IGFyZSBwcm9qZWN0aW5nIGFuIG9waW5pb24gb250byBtZSB3aGljaCBpcyBub3QgbWluZS4gSSBhbSBzcGVha2luZyBoZXJlIHdpdGhpbiBjb250ZXh0LCBhbmQgdGhlc2UgYXJlIG5vdCBuZWNlc3NhcmlseSBteSBjb252aWN0aW9ucy4gClVuZm9ydHVuYXRlbHksIGlmIHlvdSBidXkgYSByZWd1bGFyIHBhY2sgb2YgY2FyZHMgZm9yIHRoaXMgcHVyY2hhc2UsIHlvdSBtYXkgZmluZCB0aGF0IHRoZSBsb3dlciBsYXllcnMgb2YgdGhlIGhvdXNlIHdpbGwgbm90IGJlIHZlcnkgc3Ryb25nLiAKTXkgcG9pbnQgd2FzIHRoYXQgd2UgY2FuIGxhYmVsIGFuZCBkZW1vbml6ZSBwZW9wbGUgd2hvIGFyZSB1bndpbGxpbmcgdG8gd29yayBhbmQgZ2V0ICQgZnJvbSB0aGUgZ292ZXJubWVudCBhbHJlYWR5LiBUaGUgZWxkZXJseSBhbmQgaW5maXJtIHdobyBqdXN0IHNpdCBhcm91bmQgYW5kIGNvbGxlY3QgY2hlY2tzLiBXaHkgYXJlIHdlIGRlbW9uaXppbmcgaHlwb3RoZXRpY2FsIGZ1dHVyZSBBbWVyaWNhbnMgd2hvIGFyZSB1bndpbGxpbmcgdG8gd29yayB3aGVuIHdlIGNhbiBkZW1vbml6ZSB0aGUgY3VycmVudCBBbWVyaWNhbnMgd2hvIGFyZSB1bndpbGxpbmcgdG8gd29yayBhbmQgYXJlIGxlZWNoaW5nIG9mZiB0aGUgZ292ZXJubWVudCBub3c/LiAKRGF0IGplICJkZSBtYW4iIG1vZXQgemlqbiBlbiB2ZXJhbnR3b29yZGVsaWprIGJlbnQgdm9vciBqZSBmYW1pbGllLiBFbiBkYXQgZGl0IGVyIHRvdCBsZWlkdCBkYXQgemUgdm9lbGVuIGFsc29mIHplICJiZXRlciIgbW9ldGVuIHppam4gZGFuIGh1biBwYXJ0bmVyLi4gCjFzdCBuZWVkbGU6IEsxLCAxIGludmlzaWJsZSBpbmNyZWFzZSwgazUKSSBkaWQgbm90aWNlIHNvbWUgcGVvcGxlIHdpbGwgcHJvdmlkZSBpbnN1cmFuY2UgZm9yIFJheW5vciwgc28gdGhlcmUgaXMgdGhhdC4KRGFfaW5uZXJuZXR0ZSAgNyBwb2ludHMgIHN1Ym1pdHRlZCAyMCBkYXlzIGFnbwpUb3V0ICBmYWl0LiBPbiBwZXV0IGxlIGNoaWZmcmVyIGF1IGNvdXJzIGRlIGNlcyAzMyBkZXJuaXJlcyBhbm5lcy4gT24gYSBvYnNlcnYgdW4gdmVyZGlzc2VtZW50IGRlIGxhIHBsYW50ZSBxdWkgYSB0IHZhbHUgIGwncXVpdmFsZW50IGQndW4gc2l4aW1lIGNvbnRpbmVudCB2ZXJ0IGRlIDE4IG1pbGxpb25zIGRlIGtpbG9tdHJlcyBjYXJycywgYydlc3QgIGRpcmUgcGx1cyBkZSAzMCBmb2lzIGxhIHN1cGVyZmljaWUgZGUgbGEgRnJhbmNlIG10cm9wb2xpdGFpbmUsIGQnYXV0cmUgcGFydCwgY2VsYSBzZSByZWNvdXBlIHRycyBiaWVuLCBwdWlzcXUndW5lIHBhcnRpZSBkdSBDTzIgcXVlIG5vdXMgbWV0dG9ucyB2YSBkYW5zIGxhIHZndGF0aW9uIHF1aSBzZSBqZXR0ZSBsIGRlc3N1cyBhdmVjIGF2aWRpdC4gCk5vIGZ1bGwgdGltZSBlbmdpbmVlcmluZyBqb2Igc2hvdWxkIGJlIHBheWluZyBiZWxvdyAkNDAsMDAwL3llYXIuIFRoZSAyMDE5IGxvY2F0aW9uIGFkanVzdGVkIEdTIDcgc3RlcCAxIHJhdGUgaXMgJDQxLDAwMC95ZWFyLiBUaGlzIGlzIHRoZSBsb3cgZW5kIGZvciB0aGUgcmF0ZSB0aGF0IHRoZSBnb3Zlcm5tZW50IHBheXMgZm9yIGp1c3Qgb3V0IG9mIHNjaG9vbCBvciBvdGhlcndpc2UgaW5leHBlcmllbmNlZCBwb3NpdGlvbnMgcmVxdWlyaW5nIGEgY29sbGVnZSBlZHVjYXRpb24uIElmIHlvdSB0YWtlIG9uIGFuIGVuZ2luZWVyaW5nIHBvc2l0aW9uIGF0IGEgY29udHJhY3RvciB5b3Ugc2hvdWxkIGFsbW9zdCBjZXJ0YWlubHkgYmUgZWFybmluZyBtb3JlIHRoYW4gdGhpcywgZXZlbiBmcmVzaCBvdXQgb2Ygc2Nob29sLiBQb3NpdGlvbnMgZWFybmluZyBsZXNzIHRoYW4gdGhpcyBhcmUgcHJvYmFibHkgInRlY2huaWNpYW4iIHR5cGUgcG9zaXRpb25zIHRoYXQgbWF5IG5vdCBldmVuIHJlcXVpcmUgYSBjb2xsZWdlIGVkdWNhdGlvbi4gSWYgeW91IGFyZSBkb2luZyBhY3R1YWwgZW5naW5lZXJpbmcgd29yayB3aXRoIGFueSBjb21wZXRlbmN5LCB5b3UgYXJlIGJlaW5nIHVuZGVydmFsdWVkIGlmIHlvdSBhcmUgZWFybmluZyBiZWxvdyAkNTBrLiBNYW55IGNvbnRyYWN0b3JzIGluIHRoZSBhcmVhIHdvdWxkIHN0YXJ0IGFuIGVuZ2luZWVyIGluIHRoZSBsb3cgNjBzLgpBZnRlciB0aGUgY2FyZHMgYXJlIGV4Y2hhbmdlZCwgZGV0ZXJtaW5lIHRoZSB3aW5uZXIgb2YgdGhlIGdhbWUuIFdoaWNoIGZpdmUgY2FyZCBkcmF3IHBva2VyIGhhbmQgYmVhdHMgd2hpY2g/IFJldmlldyB0aGUgbGlzdCBiZWxvdywgZnJvbSBiZXN0IGhhbmQgdG8gd29yc3Q6VGhlIHJveWFsIGZsdXNoIGlzIHRoZSBiZXN0LiBJdCBjb250YWlucyBhbiBhY2UsIGtpbmcsIHF1ZWVuLCBqYWNrIGFuZCAxMC4gVGhpcyBpcyBzaW1pbGFyIHRvIHRoZSByb3lhbCBmbHVzaCwgZXhjZXB0IHRoZSA1IGFyZSBub3QgYWNlLCBraW5nLCBxdWVlbiwgamFjayBhbmQgMTAuIEFsbCBudW1iZXJzIG11c3QgYmUgaW4gYSByb3csIGhvd2V2ZXIuICgyLDMsNCw1IGFuZCA2IG9yIDgsOSwxMCwgamFjaywgcXVlZW4gZm9yIGV4YW1wbGUpLiBUaGlzIG1lYW5zIHNpbXBseSBmb3VyIGNhcmRzIG9mIHRoZSBzYW1lIGtpbmQuIFRoZSBmdWxsIGhvdXNlIGluIGZpdmUgY2FyZCBkcmF3IHBva2VyIGNvbnRhaW5zIDMgY2FyZHMgb2Ygb25lIGtpbmQgYW5kIDIgY2FyZHMgb2YgYW5vdGhlciBraW5kLiBGb3IgZXhhbXBsZSwgMyBKYWNrcyBhbmQgMiA1J3MuIE5leHQgdXAgaXMgdGhlIGZsdXNoOiA1IGNhcmRzIHdpdGggdGhlIHNhbWUgc3VpdC4gKEFnYWluLCB0aGUgc3VpdHMgYXJlIGRpYW1vbmRzLCBoZWFydHMsIHNwYWRlcyBhbmQgY2x1YnMuKUFzIHdlIGNvbnRpbnVlIG9uLCB0aGVyZSBpcyB0aGUgc3RyYWlnaHQuIFRoZSBzdHJhaWdodCBjb250YWlucyA1IGluIGEgcm93LiBJbiB0aGUgZXZlbnQgb2YgYSB0aWUsIHRoZSBwbGF5ZXIgd2l0aCB0aGUgaGlnaGVzdCBwYWlyIHdpbnMuClRoZSBwcmFjdGljZSBvZiBldWdlbmljcyBzYXlzIHdlIGNhbiBidWlsZCBhIGJldHRlciBodW1hbiB0aHJvdWdoIGFsdGVyaW5nIHdobyBpcyBib3JuIChvciwgaW4gdGhlIGNhc2Ugb2YgTmF6aXMsIHdobyBsaXZlcykuIApDbGljayB0byBEb3dubG9hZCEgRmlsZSBBcmNoaXZlIFsxOSAuIEVYRSBQYXRjaCBmcm9tIHRoZSBGaWxlIEFyY2hpdmUgdG8gdGhlIEJJTiBkaXJlY3RvcnkuIApXYXMgcmVhbGx5IHVwc2V0dGluZywgUm91c3NvcG91bG9zIHNhaWQuIHRob3VnaHQgdGhhdCB3aG9ldmVyIG1hZGUgaXQgc2hvdWxkIGJlIGV4cGVsbGVkLiBJIGRvbiB0aGluayB0aGF0IGl0IHNob3VsZCBhdCBhbGwgYmUgYWNjZXB0YWJsZS4gc3Bva2UgdG8gUG9zdG1lZGlhIGZyb20gVG9yb250byB3aGVyZSBzaGUgaXMgYSBzdHVkZW50IGF0IHRoZSBVbml2ZXJzaXR5IG9mIFRvcm9udG8uIFJvdXNzb3BvdWxvcyBpcyBhIGdyYWR1YXRlIG9mIFRlbXBsZXRvbiBTZWNvbmRhcnkgaW4gVmFuY291dmVyLgpXYW50IGEgam9iPyBBbnlvbmUgd2hvIGNhbiBzaW5nIGFsbCBvZiBRdWVlbnMgKEJsZXNzIHRoZW0pIFNvbmdzIEFORCBpcyBhIGZhbiBvZiBBbGFuaXMgTW9yaXNzZXR0ZSBpcyB0aGUgc29ydCBvZiBwZXJzb24gd2UgbmVlZC4gCk5vdCB0byBwb28gKHNvcnJ5LCBjb3VsZG4gaGVscCBteXNlbGYhKSB5b3VyIGV4cGVyaWVuY2UsIGJ1dCBJIHdhbnQgdG8gdGhyb3cgb3V0IHRoZXJlIHRoZSBlbmNvdXJhZ2VtZW50IHRoYXQgaXQgaXMgZW50aXJlbHkgcG9zc2libGUgdG8gZ28gd2l0aG91dCBkaXNwb3NhYmxlcyBhbmQgbm90IGhhdmUgYSBwZWUgc29ha2VkIGJlZCBhbGwgdGhlIHRpbWUuIFllcywgdGhlcmUgaXMgYSBsZWFybmluZyBjdXJ2ZSBhbmQgeW91ciBiYWJ5IGdyb3dzIGFuZCBjaGFuZ2VzIHNoYXBlIGFuZCB5b3UgbWF5IGhhdmUgdG8gdHJ5IGEgZmV3IGRpZmZlcmVudCBzdHlsZXMsIGJ1dCBpdCBjYW4gYmUgZG9uZSEgSXQgaGFyZCB0aGVzZSBkYXlzIHdoZW4geW91IG1heSBub3Qga25vdyBhbnlvbmUgY2xvdGggZGlhcGVyaW5nIElSTCB0byBzZWUgaG93IGl0IGRvbmUgYW5kIGFzayBxdWVzdGlvbnMuLiAKV2hpbHN0IG90aGVycyBoYXZlIDIzbWwgYW5kIHRlc3QgYmxhemluZ2x5IHBvc2l0aXZlLiAKUGxheWluZyBvbmx5IHdoZW4geW91IGhhdmUgYSBzdHJvbmcgaGFuZCwgYWxzbyBrbm93biBhcyBiZWluZyBhIHNsYXZlIHRvIHRoZSBjYXJkcywgaXMgc2ltcGx5IG5vdCB0aGUgd2F5IHRvIHdpbiB0b3VybmFtZW50cy4gCidDYWxsaW5nIGEgdHViIGEgdHViJyB3YXMgdGhlIGFuY2llbnQgR3JlZWsgd2F5IHRvIGV4cHJlc3MgdGhpcyBpZGVhIG9mIGNhbGxpbmcgYSBjb21tb24gc2ltcGxlIHRoaW5nIGJ5IGl0cyBzaW1wbGUgY29tbW9uIG5hbWUuIApJbiBhIENhcmliYmVhbiBTdHVkIFBva2VyLCBhIG5pY2UgcG9rZXIgc3RyYXRlZ3kgZGVhbHMgd2l0aCB3aGVuIHRvIGJldCB0aW1lbHkgYW5kIGFwcHJvcHJpYXRlbHkuIEEgZ29vZCBwb2tlciBzdHJhdGVneSB3aWxsIHJlcXVpcmUgeW91IHRvIG1haW50YWluIGEgcGFpciBvciBiZXR0ZXIuIApUaGVyZSBpcyBhbHNvIG5vdCBhIHNpbmdsZSBtYWluIHN0cmVhbSBhdXRvIGNhcnJpZXIgdGhhdCBpcyByYWlzaW5nIHJhdGVzIGluIHJlc3BvbnNlIHRvIHNpbmdsZSBhY2NpZGVudHMuIEZhY3QgaXMsIHBlb3BsZSB3aXRoIGNsYWltcyBkbyB0ZW5kIHRvIGhhdmUgbW9yZSBmdXR1cmUgY2xhaW1zLiBJdCdzIGp1c3QgYSBzb2xpZCBhY3R1YXJpYWwgdmFyaWFibGUgYnV0IGl0IGRvZXNuJ3Qgc3RhbmQgYWxvbmUgYW5kIG5vIGFjdHVhcmlhbCB0YWJsZSBpbiBleGlzdGVuY2UgcmFpc2VzIHJhdGVzIGR1ZSB0byBhIHNpbmdsZSBhY2NpZGVudC4KQnV0IE1hcnZlbCBoYXMgYWxyZWFkeSBtYWRlIDIxIG1vdmllcyBvZiB0aGF0IHR5cGUsIGFuZCBJIGJlbGlldmUgaXQgZmFyIGVhc2llciB0byB3aW4gYXVkaWVuY2VzIHdpdGggdGhhdCBraW5kIG9mIGZpbG0gdGhhbiBhIG1vcmUgbWF0dXJlIGFuZCBudWFuY2VkIG9uZS4gREMgd2FzIGtub3duIGZvciBwdXNoaW5nIHRoZSBib3VuZGFyaWVzIGFuZCBvZmZlcmluZyBzb21ldGhpbmcgbW9yZS4gClRoZXJlIGFyZSBsb3RzIG9mIGRldGFpbHMgc3ByZWFkIHRocm91Z2ggdGhlIHdob2xlIHRoaW5nIHRoYXQgbGluayBwbGFjZXMgYW5kIHBlb3BsZSBhbmQgaWRlYXMgdG9nZXRoZXIgYW5kIGhlbHBzIHlvdSBmbGVzaCBvdXQgdGhlIHdvcmxkLiAKQXQgdGhlIHNhbWUgdGltZSwgaXQgYWxsb3dzIHVzZXJzIHRvIHN0YXkgY29ubmVjdGVkIGFuZCBpbiBjb250cm9sLiAKU2VuLiBKb2huIE1jQ2FpbiAoUiBBWikgaG9sZHMgdXAgaGlzIHNtYXJ0IHBob25lIHRvIHNob3cgaGUgaXMgbm90IHBsYXlpbmcgcG9rZXIgYmVmb3JlIHRoZSBTZW5hdGUgRm9yZWlnbiBSZWxhdGlvbnMgQ29tbWl0dGVlIHZvdGUgb24gYSByZXNvbHV0aW9uIG9uIFN5cmlhIG9uIENhcGl0b2wgSGlsbCBTZXB0ZW1iZXIgNCwgMjAxMyBpbiBXYXNoaW5ndG9uLCBEQy4gU2VuLiAKSWYgdGhlIHByaWNlIHdhcyBhbiBpc3N1ZSB0aGV5IHdvdWxkIGhhdmUgYXNrZWQgZm9yIGxlc3M7IHRoZXkgZGlkbiAkMTAwIGlzIG5vdCB0b28gaGlnaCBpZiBpdCBpcyB3ZWxsIGRvbmUuIApTaW5jZSB0aGlzIGlzIGEgcG9saWNlIGhlYXJpbmcsIHdoaWNoIHlvdSBjYW4gdGVsbCBieSB0aGUgcG9saWNlIHVuaWZvcm1zIHRoZSAzIGp1ZGdlcyBhcmUgd2VhcmluZywgSSBkb24ndCBrbm93IHdoeSB3ZSBuZWVkIHRoZSBEQSwgYnV0IHdoYXRldmVyLiBIb29rZXIgYW5kIHRoZSBjaGljayBjb3AgcmlzZSBhbmQgbGlzdGVuIHRvIHRoZSBoZWFkIHRyaWJ1bmFsIGd1eSB0YWxrLiBIb29rZXIgbGlzdGVucyBjYWxtbHkgd2hpbGUgdGhlIGNoaWNrIGNvcCBnZXRzIGFsbCBhbmdzdHkgYW5kIHdvcnJpZWQuIApBZG1pc3Npb25zIGFyZSBmYWlybHkgZXhjbHVzaXZlLCBzbyB5b3UgZW5kIHVwIGtub3dpbmcgcHJldHR5IG11Y2ggZXZlcnlvbmUgaW4geW91ciB5ZWFyIG9uIGEgcGVyc29uYWwgbGV2ZWwuIApUYWxraW5nIHRvIGEgZnJpZW5kIHRoYXRzIGxvY2FsIHBkIGhlIHNhaWQgaGUgaGFkIGFic29sdXRlbHkgbm8gcmlnaHRzIHRvIGRvIHRoYXQuLiAKV2UgY2F1Z2h0IHVwIHdpdGggQ0JTIFNwb3J0cyBjb2xsZWdlIGJhc2tldGJhbGwgYW5hbHlzdCBTd2luIENhc2gsIHdobyB0b2xkIHVzIHRoYXQgZXhwZXJpZW5jZSBpcyBhIGJpZyB0aGluZyB0byBsZWFuIG9uIGNvbWUgdGhpcyB0aW1lIG9mIHllYXIuIApUaGUgY2hyb25pYyBwYWluIExhZHkgR2FnYSBoYXMgc3VmZmVyZWQgZm9yIHllYXJzIGlzIHRoZSByZXN1bHQgb2YgZmlicm9teWFsZ2lhLCB0aGUgc3RhciBhbm5vdW5jZWQgVHVlc2RheS4KQW5kIHRvZGF5IGNvbWVzIHRoaXMgcmV2ZWxhdGlvbiB0aGF0IHRoZSBzb2NpYWwgbmV0d29yayB3YXMgZGV2ZWxvcGluZyBwZXJzb25hbGl6YXRpb24gdG9vbHMgd2l0aCBtdWx0aXBsZSB0ZWNoIHBhcnRuZXJzLCBnaXZpbmcgdGhlbSBleHRlbnNpdmUgYWNjZXNzIHRvIHVzZXIgZGF0YS4uIAoyMyBoMTUgVW4gaG9tbWUgZCB2aXNpYmxlbWVudCBmb3J0dW4gc2UgcHJzZW50ZSAgbGEgcmNlcHRpb24gYXZlYyB1bmUgdmFsaXNlIGQgaWwgc29ydCBkIGNhcnRvbiB1biBhbGNvb2wgY2lucSB0b2lsZXMuIFZpc2libGVtZW50IGluY29uZm9ydGFibGUsIGlsIGVzdCBmYnJpbGUgZXQgdmV1dCBvYnRlbmlyIHVuZSBzYWxsZSB0b3V0IGRlIHN1aXRlLCBwZXUgaW1wb3J0ZSBsZXMgZmlsbGVzLiBQYXJjZSBxdSB2ZXV0IG9idGVuaXIgdW4gbWFzc2FnZSBxdWF0cmUgbWFpbnMuIApMb25nIHVzZWQgYnkgYXRobGV0ZXMgYXMgYW4gZW5lcmd5IGVuaGFuY2luZyBhaWQsIGNyZWF0aW5lIGlzIGluY3JlYXNpbmdseSBzaG93aW5nIHByb21pc2UgaW4gZGlzZWFzZXMgdGhhdCBpbnZvbHZlIGRldGVyaW9yYXRpb24gb2YgdGhlIGVuZXJneSBiYWxhbmNlIGluIG91ciBib2RpZXMuCk5vIG1hdHRlciBob3cgY2FzaW5vIGRlY2lkZWQgb24gaG93IHRvIGdldCB5b3VyIG1vbmV5LCB0aGVyZSBhcmUgc29tZSBnYW1lcyB3aGVyZSB5b3UgY2FuIHdpbiBvbmx5IG92ZXIgdGhlIGxvbmcgcnVuIGluIGNhc2UgeW91IGtub3cgaG93IHRvIG1ha2UgdGhpcyByZWFsLiBFdmVuIGlmIGl0IGxvb2tzIGxpa2UgaXQgaXMgZGlmZmljdWx0IHRvIHdpbiBvdmVyIHRoZSBsb25nIHJ1biwgaXQgaXMgc3RpbGwgcG9zc2libGUgdG8gZG8uIFNvIGZhciwgdGhlcmUgYXJlIHRocmVlIHNwaGVyZXMsIHdoZXJlIHlvdSBjYW4gZmluZCBhIGxvbmcgdGVybSB3aW4sIGFyZSBwb2tlciB0YWJsZSwgc3BvcnRzIGJldHMsIGFuZCBibGFja2phY2suIApTbyBpIGFtIGRvbmUgd2l0aCBteSByYW1ibGluZyBhbmQgd2hhdCBpIGNhbiBleHBlY3QgaXMganVzdCB3ZWxsIG1lIGJlaW5nIHNoaXQgdGFsa2VkIGp1c3QgY2F1c2Ugd2VsbCBpIGFscmVhZHkgc29ydGEgZXhwbGFpbmVkIHdoeSBzbyB5ZWFoLi4gClRoZXkgYm90aCBpbmNhcGFibGUgb2YgY2hhbmdlCkNJQkMgc2FpZCBpdHMgcmVzdWx0cyB3ZXJlIGFmZmVjdGVkIGJ5IGEgZmV3IGl0ZW1zLCBzdWNoIGFzICQyMjcgbWlsbGlvbiB0byBzZWN1cmUgaXRzIHBsYWNlIGluIEFpciBDYW5hZGEgbmV3IGxveWFsdHkgcHJvZ3JhbS4gSXQgYWxzbyBzYWlkIHRoZXJlIHdhcyBsb3dlciB0cmFuc2FjdGlvbiB2b2x1bWUgaW4gaXRzIENhbmFkaWFuIHdlYWx0aCBtYW5hZ2VtZW50IGJ1c2luZXNzLCBhcyB3ZWxsIGFzIGxlc3MgdW5kZXJ3cml0aW5nIG9mIGRlYnQgYW5kIGVxdWl0eSBhbmQgbG93ZXIgaW52ZXN0bWVudCBwb3J0Zm9saW8gZ2FpbnMgZnJvbSBpdHMgY2FwaXRhbCBtYXJrZXRzIHVuaXQuCkluIEFtZXJpY2EgS2lkcyB3ZWFyIGFkdWx0IGNvc3R1bWVzIGxpa2UgcGFudHlob3NlIGFuZCByZXZlYWxpbmcgY2xlYXZhZ2UuIFRoYXRzIGhvcnJpYmxlIGluIGtvcmVhbiBzdGFuZGFyZHMuIApFZGl0OiBhcHBhcmVudGx5IHlvdSBjYW4gZ2V0IHNhbWUgZGF5IHRvdyBwZXIgYWxsIG9mIHRoZSBjb21tZW50cyBiZWxvdy4gSSBnb3QgcmlkIG9mIEFBQSBhIGZldyB5ZWFycyBhZ28gc2luY2UgbXkgaW5zdXJhbmNlIENvIG9mZmVycyByb2Fkc2lkZSBmb3IgY2hlYXBlciwgc28gSSB3YXMgcnVubmluZyBvbiB0aGUgZmlyc3QgR29vZ2xlIGhpdCwgd2hpY2ggd2FzIGZvciBhIEFBQSBjbHViIGluIEFyaXpvbmEuIE1heWJlIGl0IHZhcmllcyBieSBjbHViPyBEdW5uby4gClRoZXNlIGFyZSBub3QgdGhlIGxvdyBxdWFsaXR5IHBsYXN0aWMgY2hpcHMgbWFueSBhcmUgZmFtaWxpYXIgd2l0aC4gCkRhcyBhbmdlc2VoZW5lICBtaXQgZGF6dWdlaHJpZ2VtICBSb29tIGhhdCBkaWUgV2llZGVya2VociB2b24gRXVyb3BhcyBncnRlbSBObyBMaW1pdCBUZXhhcyBIb2xkZW0gIFRvdXJuYW1lbnQgYW5nZWtuZGlndCwgZGllICBPcGVuIDIwMTAgZGllc2VtIEphaHIgd2lyZCBkaWVzZXMgcmllc2lnZSAgRXZlbnQgaW4gZGVyIFplaXQgdm9tIDE1LiBCaXMgenVtIDE3LiBPa3RvYmVyIDIwMTAgaW0gUmVnZW5jeSBIb3RlbCBpbiBEdWJsaW4gYXVzZ2V0cmFnZW4uIApCdXQgbXkgZ3Vlc3MgaXMsIGV2ZW4gd2l0aCB0aGUgZmFyIHJpZ2h0IHRyeWluZyB0byBicmluZyBNaXR0ZXJhbmQgKGFuZCBieSBleHRlbnNpb24gU2Fya2hvenkpIGRvd24sIHRoZSBGcmVuY2ggd2lsbCB1bHRpbWF0ZWx5IG5vdCBjYXJlIGFsbCB0aGF0IG11Y2ggdGhhdCBhIG1ham9yIHBvbGl0aWNpYW4gaGFzIGxpdmVkIHRoZSBCYWQgTGlmZS4uIApBbmQgSSB0aGluayBmb2xkaW5nIHR1cm4gYmV0IG9mICQyMCBpbiB0aGlzIHNpemUgcG90IGlzIHdheSB0b28gd2VhayB3aXRoIDIyIG9uIHRoaXMgYm9hcmQuIApEZWFsZXJzIGFyZSBsaWtlIHdhaXRzdGFmZiBpbiB0aGF0IHRoZXkgbWFrZSBtb3N0IG9mIHRoZWlyIG1vbmV5IGZyb20gdGlwcy4gClVTIHBva2VyIHN0YXIgUGhpbCBJdmV5IGxvc2VzIFVLIGNhc2UKV2UgKHRoZSBtb2QgdGVhbSkgdHJlYXRlZCBzaGl0IGxpa2UgT3BLaWxsVGhlSGF0bWFuIGFzIGEgam9rZSwgYW5kIEkgcmVxdWVzdGVkIHRvIGVkaXQgdGhlIE1hcnMgbGFuZHNjYXBlIHdpdGggbXkgaGF0LiAKUG9rZXIgZmFucyBoYXZlIGFsc28gdHVybmVkIGludG8gZ3JlYXQgY29sbGVjdG9ycyBvZiBwb2tlciByZWxhdGVkIHBpZWNlcy4gClBva2VyIDUgQ2FyZHMgaXMgbm90aGluZyBsaWtlIHRoZSBvbmxpbmUgY2FzaW5vcywgbm9yIGlzIGl0IGFueXRoaW5nIGxpa2UgdGhlIHdpbGRseSBwb3B1bGFyIG9ubGluZSBUZXhhcyBIb2xkJ2VtIGdhbWVzLiAKVE1zIGFyZSBsaWtlIGNhbmR5IGFuZCBQb2ttb24gdGhlbXNlbHZlcyAgIHlvdSBuZWVkIHRvIGNvbGxlY3QgYW5kIGludmVzdCBtYW55IG9mIHRoZW0gaW4gb3JkZXIgdG8gZ2V0IHdoYXQgeW91IHdhbnQuIApUaGluayBhYm91dCB0aGUgd29yc3QgcGVvcGxlIHlvdSBrbm93LCB0aG9zZSB1bmludGVyZXN0aW5nIHR5cGVzIHRoYXQgZG9uIGNhcmUgYWJvdXQgYW55dGhpbmcgYXNpZGUgZnJvbSB0aGVpciBqb2IsIHRob3NlIHR5cGVzIHRoYXQgdHJlYXQgZXZlcnlvbmUgYXJvdW5kIHRoZW0gbGlrZSBzaGl0IGJlY2F1c2UgdGhleSB0b28gZm9jdXNlZCBvbiB0aGVtc2VsdmVzLCB0aGUgd29yc3QgcG9zc2libGUgcGVyc29uYWxpdGllcyB5b3UgY29tZSBhY3Jvc3MgdGh1cyBmYXIuIApHZXQgcmlkIG9mIHRoZSBjYW1wIHNob2VzLCB5b3VyIHRyYWlsIHJ1bm5lcnMgc2hvdWxkIGJlIGNvbWZ5IGVub3VnaCB0byBiZSBhYmxlIHRvIHdlYXIgYXQgY2FtcCBhcyB3ZWxsLiBHZXQgYSBsaWdodGVyIHRlbnQuIElmIHlvdSBtdXN0IGhhdmUgZG91YmxlIHdhbGwgdGhlIE5lbW8gSG9ybmV0IEVsaXRlIG9yIEZseSBDcmVlayBpcyAxMG96IGxpZ2h0ZXIgdGhhbiB0aGUgU3B1ci4gCkVzcGVjaWFsbHkgYmVjYXVzZSB5b3UgYXJlIG1peGVkLCB5b3UgYXJlIHRoZSB3YWxraW5nIGVtYm9kaW1lbnQgb2Ygd2hhdCB0aGV5IGZlYXIgdGhlaXIgY291bnRyeSB3aWxsIGJlY29tZS4gWW91IGFyZSBvbiB0aGUgc2lkZSBvZiBQT0MgYW5kIHRoZSBub3QgcmFjaXN0IHdoaXRlIG1vbm9yYWNpYWxzLiBUaGV5IGFyZSB0aGUgb25lcyB3aG8gd2lsbCBwcm90ZWN0IHlvdSBhbmQgYmFjayB5b3UgdXAuLiAKQXMgTXJzLiBSYWNoZWwgd291bGQgc2F5LCBoZSB3YXMgcHJlZGVzdGluZWQgZm9yIHRoZSBwYXJ0LiIuIApHb3Zlcm5tZW50LCBidXQgdGhleSBhbHNvIGNhcnJ5IHJlbGF0aXZlbHkgbG93IGludGVyZXN0IHJhdGVzLiAKVGhlIHJ1bGluZyBpcyBvbmUgb2YgdHdvIGtleSBwcmV0cmlhbCBpc3N1ZXMgaW4gdGhlIGNhc2UuIE8nTmVpbGwgaGFkIGVhcmxpZXIgcnVsZWQgdGhhdCBqdXJvcnMgY291bGQgaGVhciBDb3NieSdzIGRhbWFnaW5nIHRlc3RpbW9ueSBmcm9tIENvbnN0YW5kJ3MgMjAwNSBzZXh1YWwgYmF0dGVyeSBsYXdzdWl0LiBUaGUgZGVwb3NpdGlvbiBydW5zIHRvIG5lYXJseSAxLDAwMCBwYWdlcyBhbmQgY292ZXJzIGEgc3RyaW5nIG9mIENvc2J5J3MgZXh0cmFtYXJpdGFsIGFmZmFpcnMgYW5kIGxpYWlzb25zIGRhdGluZyBiYWNrIHRvIHRoZSAxOTYwcy4KTWFrZXMgbWUgc2FkIHRvIHNlZSBzdHVmZiB0aGF0IGlzIGFsbCBjdXRlIGFuZCBnaXJseSBhbmQgcGFydHkgbGlrZSAgIHNvbWUgd2l0aG91dCBldmVuIGFycm93cywgb3IgdGhlIGxvb2sgb2YgYmVpbmcgaW4gbG92ZS4gVGhlb3JldGljYWxseSwgeW91IGNvdWxkIHRha2UgdGhlIHRoZW1lIHRvIG1lYW4gc29tZW9uZSB3aG8gaGFzIGJlZW4gc2hvdCBieSBDdXBpZCByYXRoZXIgdGhhbiBvZiBDdXBpZCBoaW1zZWxmLgpJUyBjYXJyaWVkIHR3byBzdGF0ZW1lbnRzIGNsYWltaW5nIHJlc3BvbnNpYmlsaXR5IGZvciB0aGUgYXR0YWNrLCBidXQgdGhleSBjb250YWluZWQgZGlzY3JlcGFuY2llcy4gT25lIG1lbnRpb25lZCBmaWdodGVycywgdGhlIG90aGVyIGp1c3Qgb25lIGZpZ2h0ZXIgICBhIHBlcnNvbiB3aG8gZ29lcyBieSB0aGUgbm9tIGRlIGd1ZXJyZSAiQnJvdGhlciBBYnUgYWwgS2hlaXIgYWwgQXJraGFiaWxpLiIgT25lIG9mIHRoZSBzdGF0ZW1lbnRzIGFsc28gc2FpZCB0aGUgYXR0YWNrZXIgImRpZWQgYXMgYSBtYXJ0eXIiICAgd2hpY2ggd291bGQgbm90IG1ha2Ugc2Vuc2UgaWYgaGUgc2hvdCBoaW1zZWxmIGluIGFuIGV2YWN1YXRlZCBob3RlbCByb29tIGF0IHRoZSBlbmQgb2YgdGhlIG5pZ2h0LCBhcyB0aGUgcG9saWNlIGNsYWltLiBTdWljaWRlIGlzIGZvcmJpZGRlbiBpbiBJc2xhbS4uIApJIHN0YXJ0aW5nIHRvIGZlZWwgbGlrZSB0aGUgc2hvdyBpcyBhIGdsb3JpZmllZCBlYXN0ZXIgZWdnIGh1bnQgZm9yIEtpbmcgZW50aHVzaWFzdHMgbW9yZSB0aGFuIGEgc3Rvcnkgd2l0aCBjaGFyYWN0ZXJzIHRvIGJlIGludmVzdGVkIGluLiBJZiBJIGJlaW5nIGhvbmVzdCwgSSB0aGluayB0aGUgb25seSBnb29kIGVwaXNvZGUgb2YgdGhpcyBzaG93IHdhcyAiVGhlIFF1ZWVuIiBiZWNhdXNlIGl0IGRlbHZlZCBpbnRvIFJ1dGggaW4gYSB3YXkgd2UgZG9uIGdldCB0byBleHBlcmllbmNlIHRoZSBvdGhlciBjaGFyYWN0ZXJzLiAKVGhlIGNsdWIgaG9wZWQgdG8gcmFpc2UgJDI1MCwwMDAgZnJvbSB0aGUgc2FsZSwgYnV0IG5vIGJ1eWVyIGhhcyBiZWVuIGZvcnRoY29taW5nLiAKWWVhaCwgYWxyZWFkeSBtYWRlIHRoZSBkZWNpc2lvbiB0byBsZWF2ZS4gTXkgZmFtaWx5IGJhc2ljYWxseSBsYXVnaGVkIGF0IG1lIGJlY2F1c2UgSSB3YXMgc28gc2V0IG9uIGxpdmluZyBoZXJlIHBlcm1hbmVudGx5LCBnb2luZyB0aHJvdWdoIHRoZSB2aXNhIHByb2Nlc3MgYW5kIGFsbCBldGMuIApTbyBiYXNpY2FsbHkgaXQgY29tZXMgdG8gc2FtZSB0aGluZyBhcyBpbiBDLiAKQmVhdCBhIGZ1bGwgZm9yY2UgQkEgZ3V5IHdpdGggaXQgd2hvIGNhbGxlZCBtZSBhIGJhZCBwbGF5ZXIgYmVjYXVzZSBJIHBsYXllZCBhIGJhZCBkZWNrIGFuZCAid2FzdGVkIGhpcyB0aW1lIiBldmVuIHRob3VnaCBoZSBsb3N0Li4gCkFmdGVyIHRoZSBsb25nZXN0IG1pbnV0ZSBvZiBKYW1lcyBsaWZlLCBBbHlzc2EgbG9va2VkIGF0IENoYXJsaWUgYW5kIHNhaWQgIllvdSBrbm93LCBJIG5ldmVyIGhhZCBhIGNoYW5jZSB0byBrbm93IG15IG93biBmYXRoZXIuIAoyIFNlcCAyMDE3IC4gUG9seWV1Y3RlOiAxODg3IFZlcnNpb24gKEZyZW5jaCBFZGl0aW9uKSBib29rIGJvb2sgcGRmIGZyZWUgZG93bmxvYWQuIEluIExlcyBMaWV1eCBKbnRlcmRpdHM6IFRyYW5zZ3Jlc3Npb25zIGFuZCBGcmVuY2ggTGl0ZXJhdHVyZSwgZWQuIApFc3BmdXNpb24gIDQgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ28KIDI4NCBwb2ludHMgIHN1Ym1pdHRlZCAyIG1vbnRocyBhZ29JdCBkZXBlbmRzLiBJIGhhdmUgdW50aWwgMTYgSmFudWFyeSB0byBvZmZpY2lhbGx5IGRyb3AgbXkgbmV4dCBzZW1lc3RlcnMgY2xhc3Nlcy4gSSBuZWVkIHRvIGJlIGFibGUgdG8gZ2l2ZSBhbiBvZmZpY2lhbCB0d28gd2Vla3Mgbm90aWNlIGF0IHdvcmsuIApTYWxlcyBmb3IgdGhlIDEzIHdlZWtzIGVuZGVkIEFwcmlsIDI5IHdlcmUgJDc1Ni4xIG1pbGxpb24sIHVwIDcuMyBwZXIgY2VudCBmcm9tICQ3MDQuOSBtaWxsaW9uIGluIHRoZSBjb21wYXJhYmxlIHBlcmlvZCBhIHllYXIgZWFybGllci4KSXQgdG9vayBvbmUgY2FsbCB0byBob29rIHRoZSBhc3NvY2lhdGlvbidzIHByZXNpZGVudCwgU2hhbm5vbiBLYXloYXJ0LCBpbnRvIGFkZGluZyB0aGUgZXZlbnQgdG8gdGhlaXIgc2NoZWR1bGUuIFRoZW4gUGF1bCBXcmF6aWRsbywgb3duZXIgb2YgdGhlIGdvIGthcnQgcmFjZXRyYWNrIGF0IENvcHBlciBDcmVlaywgc3RlcHBlZCB1cCB0byBkb25hdGUgdGhlIHNpdGUuVGhlIGV2ZW50IGhhcyBncm93biBsaWtlIGEgd2VlZC4gQSBmaWVsZCBvZiA1MCByYWNlcnMgaGFzIGFscmVhZHkgYmVlbiBjb25maXJtZWQsIHdpdGggcm9vbSBmb3IgbW9yZS4gCkVhdGluZyBkaXNvcmRlcnMgKGFuZCB0aGlzIGJvZHkgZGlzbW9ycGhpYSkgaGF2ZSBiZWVuIGFyb3VuZCBmb3IgY2VudHVyaWVzLiBFbGlzYWJldGggb2YgQXVzdHJpYSAoY29tbW9ubHkgcmVmZXJyZWQgdG8gYXMgInByaW5jZXNzIHNpc3NpIiwgYW5kIGhhaWxlZCBmb3IgaGVyIGJlYXV0eSkgd2FzIGFzc2FzaW5hdGVkIGluIDE4OTYsIGFuZCBzaGUgd2FzIHJlY29yZGVkIHRvIGJlIGVudGlyZWx5IG9ic2Vzc2VkIGFuZCBzb21ld2hhdCBuZXVyb3RpYyBhYm91dCBoZXIgYXBwZWFyYW5jZSwgaW5jbHVkaW5nIGEgdmVyeSByZXN0cmljdGl2ZSBkaWV0IGFuZCBleGVyY2lzZSByZWdpbWUuIFZlcnkgc2FkIHRiaApPdXIgaG90ZWwgYWltcyB0byBwcm92aWRlIGEgdHJ1bHkgdW5pcXVlIGV4cGVyaWVuY2UsIGFuZCB3ZSBhcmUgdGhyaWxsZWQgdGhhdCB3ZSB3ZXJlIGFibGUgdG8gZXhjZWVkIHlvdXIgZXhwZWN0YXRpb25zLiAKT25saW5lIHBva2VyIHJvb21zIG1ha2UgaXQgZWFzaWVyIGZvciB0aGUgYXZlcmFnZSBwZXJzb24gdG8gcGxheSBwb2tlciB3aXRob3V0IGhhdmluZyB0byB3YWdlciB2YXN0IHN1bXMgb2YgbW9uZXksIGFuZCB0aGlzIGlzIGVzcGVjaWFsbHkgdHJ1ZSBvZiB0aGUgZnJlZSBvbmxpbmUgcG9rZXIgcm9vbXMuIFdoYXRldmVyIHlvdXIgZ2FtZSBpcyB0aG91Z2gsIGJlIGl0IGZyZWUgb3Igbm90LCB5b3Ugd2lsbCBmaW5kIHRoYXQga25vd2luZyBzb21lIG9ubGluZSBwb2tlciBzdHJhdGVneSBhbmQgZ2FtZSBwbGF5cyB3aWxsIGJlIG9mIGdyZWF0IGhlbHAgdG8geW91LiBUaGV5IG1heSBoYXZlIHRha2VuIG92ZXIgbWFrZSBtb25leSBldmVyeXdoZXJlLiAKWW91ciBtZW50YWwgc3RhdGUgZHJpdmVzIHlvdSB0byBkbyB0aGlzIHRoZW4gdGhlIGRpZXQvZXhlcmNpc2Uvc2xlZXAgZGVwcml2YXRpb24gc2VhbHMgdGhlIGRlYWwgYXMgeW91IHN0YXJ2ZSB5b3VyIGV4aGF1c3RlZCBib2R5IGRvd24uLiAKVmVyYXRpc2lvICAyIHBvaW50cyAgc3VibWl0dGVkIDMgZGF5cyBhZ28KU2hhcmluZyB0aGlzIHN0b3J5IGJyb3VnaHQgdXAgYSBsb3Qgb2YgbWVtb3JpZXMgYW5kIHJlZmxlY3Rpb24gb2YgbXkgdGltZSB0aGVyZSBhbmQgb2YgdGhpcyBpbmNpZGVudCBpbiBwYXJ0aWN1bGFyLiBTcGVudCBhIGxvdCBvZiB0aW1lIGxhc3QgbmlnaHQgdHJ5aW5nIHRvIHJlbWVtYmVyIGRldGFpbHMgYW5kIHRoaW5raW5nIGFib3V0IHdoYXQgSSBjb3VsZCBoYXZlIGRvbmUgYW5kIHdoYXQgSSBzaG91bGQgaGF2ZSBkb25lLiBEZWZpbml0ZWx5IGludGVyZXN0aW5nIGZvb2QgZm9yIHRob3VnaHQgYW5kIGEgcmUgbGVhcm5pbmcgZXhwZXJpZW5jZS4uIApGb3IgdGhlIGZpcnN0IHR3byB0byB0aHJlZSBtb250aHMgd2Ugd2FrZSB1cCB0byBmaW5kIGRvemVucyBvZiB0aGVtIHdyaWdnbGluZyB0aGVtc2VsdmVzIHRvIGRlYXRoIGV2ZXJ5IG1vcm5pbmcuIApPbmUgcG9wcGVkIHVwIG9uIHRoZSBtYXJrZXQsIHB1dCBpbiBhbiBvZmZlciBhbmQgaXQgZGlkbid0IGdldCBhY2NlcHRlZC4gCk15ICJmb29kIiBpcyBvbmx5IDE4b3ogb24gVHJpcCBCIGluc3RlYWQgb2YgMzBveiBvbiBUcmlwIEEuIEFsc28gSSBmb3VuZCBzb21lIHRhZ3MgbWFkZSBvZiBsZWFkIEkgb3Zlcmxvb2tlZCBvbiAzIHBpZWNlcyBvZiBnZWFyIGFuZCB0cmltbWVkIGFuIG91bmNlIG9mZiBlYWNoIHNvIEkgbmVlZCB0byB1cGRhdGUgdGhvc2UuIApUaGUgYmVzdCBjb21wcyBhcmUgYXNzb2NpYXRlZCB3aXRoIGdhbWVzIGluIHdoaWNoIHRoZSBjYXNpbm8gaGFzIGEgbW9yZSBzaWduaWZpY2FudCBlZGdlIGFuZCBsaWtld2lzZSBzdGFuZHMgdG8gbWFrZSBtb3JlIG1vbmV5OiBUaG9zZSBkb2xsYXIgc2xvdHMsIDMgIGFuZCA0ICBjYXJkIHBva2VyIGFuZCBDYXJpYmJlYW4gU3R1ZCBhcmUgZ29vZCBleGFtcGxlcy4gQ29udHJhcnkgdG8gY29tbW9uIGJlbGllZiwgZ2FtZXMgbGlrZSBibGFja2phY2ssIHJvdWxldHRlIGFuZCBjcmFwcyBhcmVuJ3QgYWN0dWFsbHkgdGhlIGJpZ2dlc3QgbW9uZXltYWtlcnMgZm9yIGNhc2lub3MsIHNvIGl0J3MgdW5saWtlbHkgdGhleSdsbCB3aWxsIGdpdmUgZnJlZSByb29tcyB0byBhbnlvbmUgd2hvIHBsYXlzIG1vZGVyYXRlbHkgYXQgdGhlc2UgdGFibGVzLiBVbmZvcnR1bmF0ZWx5LCB0aGUgYXZlcmFnZSBnYW1ibGVyIGlzIG11Y2ggbW9yZSBsaWtlbHkgdG8gZWFybiBhIGZyZWUgY29ja3RhaWwgdGhhbiBhIGZyZWUgcm9vbS4uIApJIHdhcyBzYXZpbmcgYWxsIG15IG1vbmV5IHRvIGJ1eSBhIEZhYmlhIFJTIG9yIGEgVlcgR29sZiBHVEksIGJ1dCBzaW5jZSBJIGdvdCBtYXJyaWVkIHRvIGEgbG92ZWx5IGJsb2tlIGNhbGxlZCBEYXZlIGluIEp1bmUgMjAwNSwgd2UndmUgc3BlbnQgYWxsIG91ciBtb25leSBvbiB0aGUgaG91c2UgYW5kIGdhcmRlbiBpbnN0ZWFkLiAKQWxzbzogTXkgYXVudCBpcyB2ZXJiYWxseSBhYnVzaXZlIHRvIG1lLiBJIGN1dCBoZXIgb3V0IG9mIG15IGxpZmUgYW5kIGFsdGhvdWdoIHdlIGhhZCB0byBmdW5jdGlvbiBhdCBzb21lIGZhbWlseSBnYXRoZXJpbmdzLCBJIHN0b29kIG15IGdyb3VuZC4gQW5kIHlvdSBrbm93IHdoYXQ/IEkgYW0gb2theS4gSW4gZmFjdCwgaXQgZm9yY2VkIGhlciB0byBvd24gdXAgdG8gaXQsIG5vdCBldmVyeXRoaW5nLCBhbmQgc2hlIGFwb2xvZ2l6ZWQgdG8gbWUuIFN0aWxsLCBJIGRpc3RhbmNlLCBhbmQgSSB3b3VsZCBiZSAxMDAlIG9rYXkgaWYgSSBuZXZlciBzYXcgaGVyIGFnYWluLgpUaGUgVVMgcmVtb3ZlZCBOb3J0aCBLb3JlYSBmcm9tIHRoZSBibGFja2xpc3QgaW4gT2N0b2JlciBpbiBhIGJpZCB0byByZXZpdmUgZmFsdGVyaW5nIHNpeCBwYXJ0eSBudWNsZWFyIGRpc2FybWFtZW50IHRhbGtzLCBwcm9tcHRpbmcgdGhlIE5vcnRoIHRvIHRha2Ugc29tZSBtZWFzdXJlcyB0byBkaXNhYmxlIGl0cyBudWNsZWFyIGZhY2lsaXRpZXMuClllcC4gVGhpcy4gSWYgdGhlIGJvb2sgaXMgZ29vZCBhbmQgcHVibGlzaGFibGUsIGl0IHdpbGwgc2VsbC4gCldvdWxkIGp1c3QgYmUgYW5ub3lpbmcgaWYgeW91IHdhbnQgdG8gY2FwdHVyZSBtdWx0aXBsZSBtb25zdGVycyBvbiBhIHF1ZXN0LCBhbmQgNC4gV291bGQgbWFrZSBjYXB0dXJlIHF1ZXN0cyBmYXIgd29yc2Uvc29tZXRpbWVzIGltcG9zc2libGUgZXZlbiBiZWZvcmUgeW91IGtpbGxlZCB0aGUgbW9uc3Rlci4uIApTdWRkZW5seSBJIHdhcyBncmFiYmVkIGJ5IGEgc2FpbG9yLCBhbmQgaXQgd2FzbiB0aGF0IG11Y2ggb2YgYSBraXNzIFsuXSBJIGRpZCBub3QgaGF2ZSBhIGNsdWUgW3dobyB0aGUgc2FpbG9yIHdhc10gWy5dIGluIDE5ODAgdGhleSBjb250YWN0ZWQgbWUsIExJRkUgTWFnYXppbmUgY29udGFjdGVkIG1lLCBhbmQgSSBicm91Z2h0IHRoZSBwaWN0dXJlIHRvIE1yLiBFaXNlbnN0YWVkdCwgYW5kIGhlIHNpZ25lZCBpdCBhbmQgYXBvbG9naXplZC4gWy5dIEkgZmVsdCBoZSB3YXMgdmVyeSBzdHJvbmcsIGhlIHdhcyBqdXN0IGhvbGRpbmcgbWUgdGlnaHQsIGFuZCBJIG5vdCBzdXJlIEkgICBhYm91dCB0aGUga2lzcyBiZWNhdXNlLCB5b3Uga25vdywgaXQgd2FzIGp1c3Qgc29tZWJvZHkgcmVhbGx5IGNlbGVicmF0aW5nLi4gCldoZW4gY29uZnJvbnRlZCBieSBhbm90aGVyIHBlcnNvbiB3aG8gY2FyZXMgYWJvdXQgdGhlbSBhbmQgd2hvIG5vdGljZXMgdGhleSBhc2ssICJhcmUgeW91IG9rPyIgVGhlIGZpcnN0IHBlcnNvbiBzbmFwcyBiYWNrLCAiSSBmaW5lISIgYmVjYXVzZSB0byB0aGVtIGl0IGEgc3R1cGlkIHF1ZXN0aW9uIG9yIHRoZXkgbm90IGluIGEgcGxhY2UgdG8gZGVhbCB3aXRoIHRoZSBlbW90aW9ucyBvciBjb21tdW5pY2F0aW5nIHRoZW0uIFRoZXkgdGhpbmsgdGhpbmdzIGxpa2UsIEkgbm90IGZpbmUgb3IgSSB3b3VsZG4gYmUgYWN0aW5nIHRoaXMgd2F5ICAgb3IsIEkgbm90IGZpbmUgYmVjYXVzZSBzb21ldGhpbmcgc2hpdHR5IGp1c3QgaGFwcGVuZWQgdGhleSBub3Qgc2F5aW5nIGlzLCAiSSBub3QgT0sgcmlnaHQgbm93LCBidXQgYWZ0ZXIgSSBjbGVhciBteSBoZWFkIEkgYmUgT0sgYWdhaW4uIApNZSBUb28gZm91bmRlciBUYXJhbmEgQnVya2UgZGlzY3Vzc2VzIHRoZSBuZXh0IHBoYXNlCkkgY291bGQgaGF2ZSBoYWQgaGltIGxvbmcgYWdvIHdoZW4gaGUgd2FzIGZyZXNoLiAKQSBCcmF6aWxpYW4gYmxvdyBkcnkgaXMgYSBzZW1pIHBlcm1hbmVudCBzdHJhaWdodGVuaW5nIHRyZWF0bWVudCB3aGVyZSBhIG1peCBvZiBrZXJhdGluIChhIGtleSBzdHJ1Y3R1cmFsIHByb3RlaW4gaW4gaGFpciBhbmQgbmFpbHMpIGFuZCBmb3JtYWxkZWh5ZGUgaXMgYXBwbGllZCB0byB0aGUgaGVhZCB0byBwZW5ldHJhdGUgaGFpciBjdXRpY2xlcywgc21vb3RoaW5nIHRoZSBoYWlyIHNoYWZ0LiBUaGUgcmVzdWx0cyBjYW4gbGFzdCB1cCB0byBmb3VyIG1vbnRocyBhbmQgdGhlIHRyZWF0bWVudCBjYW4gY29zdCBmcm9tIGFyb3VuZCAxMDAgdG8gMzUwLgpGb2xsb3dpbmcgdGhlaXIgc3VwcG9zZWQgZXNjYXBlIGZyb20gdGhlIG1vbnN0ZXIgaW5mZXN0ZWQgbWF6ZSwgdGhlIHN1cnZpdmluZyBHbGFkZXJzIGxlZCBieSBUaG9tYXMgYXJlIHRha2VuIHRvIGFuIHVuZGVyZ3JvdW5kIGZhY2lsaXR5IGluIHRoZSB3YWtlIG9mIGEgZGV2YXN0YXRpbmcgc29sYXIgZmxhcmUga25vd24gYXMgVGhlIFNjb3JjaCB0aGF0IGhhcyBsZWZ0IHRoZSB2YXN0IG1ham9yaXR5IG9mIHRoZSBwb3B1bGF0aW9uIGluZmVjdGVkIHdpdGggYSBkaXNlYXNlIGNhbGxlZCB0aGUgRmxhcmUsIGJ1dCBsaXR0bGUgZG8gdGhleSBrbm93IHRoZXkgYXJlIGFib3V0IHRvIGVudGVyIFBoYXNlIFR3by4gU29vbiB0aGV5IGJlZ2luIHRvIHJlYWxpc2UgdGhhdCB0aGV5J3JlIHN0aWxsIHBhcnQgb2YgV0NLRCdzIGRhc3RhcmRseSBleHBlcmltZW50IGFuZCB0aGV5IG11c3QgZmluZCBhIHdheSB0byBlc2NhcGUgb25jZSBhbmQgZm9yIGFsbCBvciByaXNrIG1vcmUgb2YgdGhlbSBkeWluZyB1bnRpbWVseSBkZWF0aHMuIFRoZXkgYXJlIHdhcm5lZCBhYm91dCB0aGUgZGFuZ2VycyBvZiBlbnRlcmluZyB0aGUgYmFycmVuIHdhc3RlbGFuZCB0aGF0IGhhcyBiZWNvbWUgdGhlIHJlc3Qgb2YgdGhlIHdvcmxkLCBidXQgdGhleSBoYXZlIG5vIGNob2ljZSBpZiB0aGV5IHdhbnQgZnJlZWRvbS4gQ2l0aWVzIGhhdmUgYmVlbiBvdmVydGFrZW4gYnkgc2FuZCBkdW5lcywgYnV0IHRoZXkgc29vbiBhYm91dCB0byBkaXNjb3ZlciB5ZXQgbW9yZSB1bmZhdGhvbWFibGUgaG9ycm9ycyB0aGF0IGxpZSBiZWZvcmUgdGhlbS4KSSBhY3R1YWxseSBsb3ZlIHRvIHNpdCBkb3duIGFuZCBicmVhayBhcGFydCBteSBvd24gb3Igc29tZW9uZSBlbHNlIGdhbWUgYW5kIGxvdmUgdG8gc3R1ZHkgR1RPIHN0cmF0ZWd5IGFzIHdlbGwuIElmIHlvdSBsb3ZlIHRvIHN0dWR5IGJ1dCBqdXN0IGhhdmVuIGZvdW5kIHRoZSByaWdodCB0b29scyBvciBndWlkYW5jZSwgeW91IHNob3VsZCBidXkgUklPLiAKV2UgZW5jb3VyYWdlIHBvc3RzIHdpdGggRWRtb250b24gcmVsYXRlZCBvcmlnaW5hbCBjb250ZW50LCBzdG9yaWVzLCBuZXdzLCBldmVudHMsIGhvdCBkaXNjdXNzaW9uIHRvcGljcywgYW5kIGFzIGEgcGxhY2UgdG8gc2VlayBsaWtlIG1pbmRlZCBvdGhlcnMgd2hvIG1heSBzaGFyZSB5b3VyIG9ic2N1cmUgaW50ZXJlc3Qgb3IgaG9iYnkuIE5vdCBzbyBtdWNoIGEgbWFya2V0cGxhY2Ugb3IgYWR2ZXJ0aXNpbmcgcGxhdGZvcm0gKHdlIG5vdCBLaWppamkpLCBhbmQgcGxlYXNlLCBpZiB5b3UgaGF2ZSBhbiBpbnF1aXJ5LCB0cnkgdG8gZ29vZ2xlIGZpcnN0IG9yIHRvIGNoZWNrIG91dCB0aGUgd2lraSBhbmQgdGhlIHJ1bGVzIGJlZm9yZSBwb3N0aW5nIGhlcmUuIEVuam95IUdvIHRvIE1hY0V3YW4uIApTaGUgbXVzdCBiZSByZXBvcnRlZC4gClNvIEkgdGhpbmsgd2UgYXMgaHVtYW5zIGFyZSB3aXJlZCB0byBhbHdheXMgd2FudCBtb3JlIGFuZCBuZXZlciBiZSBzYXRpc2ZpZWQuIApBbHNvLCBJIHJlYWxseSBsb29raW5nIGZvcndhcmQgdG8gc2VlaW5nIHdoYXQgY29tcGFuaWVzIGxpa2UgRm9yZCwgVm9sa3N3YWdlbiwgQ2hyeXNsZXIsIGV0YyBhcmUgZ29pbmcgdG8gZG8gd2l0aCB0aGVzZSBtdWx0aXBsZSBiaWxsaW9uIGRvbGxhciBpbnZlc3RtZW50cyBpbiBFVnMgYW5kIHNvZnR3YXJlLiBUaGUgZWxlY3RyaWMgRiAxNTAgY291bGQgYmUgbWFzc2l2ZWx5IHBvcHVsYXIgaW4gQW1lcmljYSwgYW5kIHRoYXQganVzdCBvbmUgZXhhbXBsZS4gCkkgbGl2ZSBpbiBhIDYwMCsgaG9tZSBIT0EgaW4gRmxvcmlkYS4gCldlIGNvbnN0YW50bHkgeWVsbGluZyBhdCBwZW9wbGUgdG8gZ2V0IG9mZiB0aGUgaWNlLCBidXQgb2J2aW91c2x5IGNhbiBnZXQgZXZlcnlvbmUuLiAKTGV0J3Mgbm90IGludmFsaWRhdGUgcGVvcGxlIGJlaW5nIHNleHVhbGx5IGhhcmFzc2VkIG9yIHRha2VuIGFkdmFudGFnZSBvZiBqdXN0IGJlY2F1c2UgdGhleSBoYXBwZW4gdG8gYmUgMTguIFRoYXQncyBhIHByZXR0eSBzaGl0dHkgdGhpbmcgdG8gZG8gdG8gb3RoZXIgcGVvcGxlLiAKVG8gcGFyYXBocmFzZSBHaXRhIDMuMjAgICAzLjI2OiBDb21tb24gZm9sayBsb29rIHRvIHRoZSBncmVhdCBmb3IgZ3VpZGFuY2UgYW5kIGZvbGxvdyB0aGVpciBleGFtcGxlLiBUaGUgTG9yZCBoYXMgbm90aGluZyB0byBnYWluIGJ5IGVuZ2FnaW5nIGluIGFjdGl2aXR5LCBidXQgd2l0aG91dCBzdWNoIGFjdGl2aXR5LCB0aGUgTG9yZCB3b3VsZCBiZWNvbWUgdGhlIGNhdXNlIG9mIGRlc3RydWN0aW9uIG9mIHRoZSB3b3JsZHMgYXMgZXZlcnlvbmUgd291bGQgZm9sbG93IEhpcyBleGFtcGxlIGFuZCBiZWNvbWUgaW5hY3RpdmUuIEEgd2lzZSByZWFsaXplZCBwZXJzb24gc2hvdWxkIGRvIHRhc2tzIGp1c3QgYXMgYW4gaWdub3JhbnQgYXR0YWNoZWQgcGVyc29uIHdvdWxkIGJ1dCB0aGUgd2lzZSBwZXJzb24gc2hvdWxkIGRvIHRhc2tzIHdpdGhvdXQgYXR0YWNobWVudCBmb3IgdGhlIGJlbmVmaXQgb2YgdGhlIHdvcmxkLiAKRW5yYWdlZCwgaGUgbHVuZ2VzIG91dCwgYnJlYWtpbmcgaGVyIG5lY2sgYW5kIGtpbGxpbmcgaGVyLiBBZ2FpbiwgaGUgaXMgY29udmljdGVkIGFuZCBzZW50IHRvIGRlYXRoIHJvdy4gCk9ubHkgdG8gZmluZCB0aGUga2lsbGVyIHdhcyBzcGlubmluZyBhcm91bmQgaW4gYSBzaGFjayBzaG9vdGluZyBhdCB0aGUgd2FsbHMgYW5kIHNvbWVob3cgdGVsbGluZyB0aGUgZ2FtZSBoZSB3YXMgaGVhZHNob3R0aW5nIGV2ZXJ5b25lLiAKQXQgaG9tZSwgQ2FuYWRpYW4gZGF0YSBhcmUgcmVmbGVjdGluZyB0aGlzIHNsb3dlciBnbG9iYWwgbW9tZW50dW0uIEluIHRoYXQgcmVnYXJkLCBnb3Zlcm5pbmcgY291bmNpbCBzcGVudCBhIGxvdCBvZiB0aW1lIGRpc2N1c3NpbmcgdGhlIG5hdGlvbmFsIGFjY291bnRzIGRhdGEgZm9yIHRoZSBmb3VydGggcXVhcnRlciBvZiBsYXN0IHllYXIuIEFoZWFkLCBob3dldmVyLCBQYXR0ZXJzb24gc2FpZCB0aGUgQmFuayBvZiBDYW5hZGEgaXMgb3B0aW1pc3RpYyB0aGF0IGVjb25vbWljIGdyb3d0aCB3aWxsIGJ1aWxkIG5ldyBtb21lbnR1bSBpbiB0aGUgc2Vjb25kIGhhbGYgb2YgMjAxOSwgdGhhbmtzIGluIGxhcmdlIHBhcnQgdG8gdGhlIHN0aWxsIHN0cm9uZyBlbXBsb3ltZW50IGNvbmRpdGlvbnMgYW5kIGltcHJvdmluZyB3YWdlcy4uIApUaGVyZSBpcyBhIHZlcnkgd2lkZSBndWxmIGJldHdlZW4gd2hhdCBnZXRzIGNoYW5uZWxsZWQgaW50byB0aGUgZm9ybWFsIHJlZmVycmFsIHBhdGh3YXlzIHZzIHdoYXQgZ2V0cyB0aHJvd24gaW50byB0aGUgZG9uIGtub3csIEkgbm90IHBhaWQgZW5vdWdoIGZvciB0aGlzLCBJIGp1c3Qgd2FudCB0byBnbyBob21lIGF0IDRwbSB3aXRob3V0IHRyaWdnZXJpbmcgYSBkaXNjaXBsaW5hcnkgbWVldGluZyB0b21vcnJvdyBkdW1waW5nIGdyb3VuZHMgb2YgZm9yZ290dGVuIGNhbGxzLiBXaGljaCBpcyBhZ2Fpbiwgd2h5IEkgdGhpbmsgcHJvZmVzc2lvbmFsLCB3ZWxsIHBhaWQgcHVibGljIHNlcnZhbnRzIGFyZSBhIGJldHRlciBpZGVhIHRoYW4gb3V0c291cmNpbmcgdG8gd2hhdHZlciBlbnRpdHkgaXMgdGVuZGVyaW5nIHRoZSBtaW5pbXVtIGNvc3Qgc2VydmljZS4gCkNob29zZSBGT0xEIEFORCBTS0lQLC4gCkFuZCB5b3UgaGVhcmQgcmlnaHQuIFllcyBjb25kaSBtaXJhZ2UgaXMgcmVhbGx5IGdvb2QgYXQgY29uZGkgZmlnaHQgYm9zc2VzLCBhbmQgeWVzIGl0IHdvdWxkIGJlIGJldHRlciB0aGFuIGNvbmRpIGVuZ2kvaG9sbyBpbiBkcHMsIHRoZSByZWFzb24gd2h5IEkgc3VnZ2VzdGVkIGNvbmRpIHNiMyB3YXMgYmVjYXVzZSBvZiB0aGUgZWFzZSBvZiB1c2UsIHdoaWNoIG1lYW5zIHlvdSBjYW4gZm9jdXMgb24gbGVhcm5pbmcgdGhlIGJvc3MgbWVjaGFuaWNzIGFuZCBub3QgeW91ciBkcHMgcm90YXRpb25zIHdoaWxlIGRvaW5nIGRlY2VudCBkcHMuClRoZXJlIGlzIGEgaHVnZSBudW1iZXIgb2YgcG9rZXIgcmV2aWV3IHNpdGVzIG91dCB0aGVyZSBlYWNoIGhhdmluZyB0aGVpciB0YWtlIG9uIHRoZSBjb3VudGxlc3MgcG9rZXIgcm9vbXMgb3BlcmF0aW5nIG9uIHRoZSBJbnRlcm5ldC4gSW4gdGhpcyBhcnRpY2xlLCB3ZSB3aWxsIGJlZ2luIHRoZSBwcm9jZXNzIG9mIGJyZWFraW5nIGRvd24gb3VyIG93biBvbmxpbmUgcG9rZXIgcmV2aWV3IGd1aWRlIHNvIHlvdSBrbm93IHdoYXQgbG9vayBmb3Igd2hlbiB0cnlpbmcgdG8gZmluZCBhbiBvbmxpbmUgcG9rZXIgcm9vbSB0aGF0IHN1aXRzIHlvdS4KSSBhbSBzbyBoYXBweSB0byBoZWFyIHRoYXQgeW91IGhhdmUgdGhlIHN1cHBvcnQgb2YgeW91ciBodXNiYW5kIGFuZCBldmVuIGhhcHBpZXIgdG8gaGVhciB0aGF0IHdoaWxlIHRoaXMgd2FzIG5vdCB5b3VyIHBsYW4sIHRoYXQgeW91IGFyZSBoYXBweSB3aXRoIHlvdXIgY3VycmVudCBwYXRoLiBUaGlzIGlzIGhvbmVzdGx5IHRoZSBiZXN0IHRoaW5nIEkgaGVhcmQgYWxsIGRheS4gCkp1c3QgYWRkIFBva2VyLCBCbGFja2phY2ssIGFuZCBtYXliZSBhIGZldyBvdGhlciBjYXJkIGdhbWVzIGFuZCBzZXBhcmF0ZSB0aGUgY3VycmVuY3kgdG8gcHVyZWx5IG5vbiBwdXJjaGFzYWJsZSBnb2xkIG9yIGl0IG93biBjaGlwcywgYW5kIG9vb2hoaGggYm95IHlvdSBnZXQgYSBidW5jaCBvZiBwbGF5ZXJzIGJhY2suIE5vdCBldmVuIGV4YWdnZXJhdGluZywgdGhlcmUgaGFkIGJlZW4gbXVsdGlwbGUgdGltZXMgd2hlcmUgSSBqdXN0IHBvcCBpbnRvIHRoZSBzaW5nbGUgcGxheWVyLCBwbGF5IGEgZmV3IHJvdW5kcyBvZiBwb2tlcihtb3JlIGxpa2UgYSBob3VycyB3b3J0aCBvZiB0d28pIGFuZCBkaXAgb3V0IHdoZW4gSSBsb3N0IHRvIG11Y2ggbW9uZXkuIEl0IHdvdWxkIGJlIHNvIG11Y2ggbW9yZSBmdW4gYWdhaW5zdCBvdGhlciBwbGF5ZXJzLCBMSUtFIFdFIENPVUxEIElOIFJEMSEuIApUaG9tYXMgd2FzIGEgZm9ybWVyIGZpcmVmaWdodGVyIGFuZCBlbWVyZ2VuY3kgbWVkaWNhbCB0ZWNobmljaWFuIHdobyB3YXMgc2hvdCB0byBkZWF0aCBpbiAyMDAxLiAKVG9tIENvbm5hSmx5LCB2ZXRlcmFuICJvbGQgIGogc2Nob29sIiBsYXdtYWtlciB3aG8gc3RlZXJlZCBJIG1vc3Qgb2YgKGhlIG5hdGlvbidzIG1ham9yIGZvcmVpZ24gbGF3cyB0aHJvdWdoIHRoZSBTZW5hdGUgaSBkdXJpbmcgYW5kIHNpbmNlIFdvcmxkIFdhciBJSSwgdG9uaWdodCBoZSB3aWxsIG5vdCBiZSA7YSBjYW5kaWRhdGUgbG9yIHJlIGVsZWN0aW9uIHRoaXMgeWVhci4gSW4gYSBkcmFtYXRpYyBFYXN0ZXIgbmlnaHQgc3RhdGVtZW50IGlzc3VlZCB0aHJvdWdoIGhpcyBvZiAgSSBJJ2ljZSBoZSByZSwgdGhlIHdoaXRvIG1hbmVkIFRleGFzIFNPIE5FQVIsIFlFVCBTTyBQYXVsIFdhc3Nlcm1hbiwgTm9ydGggSG9sbHkgIHdvb2QgR0kuIApWaXNpdGVkIERyZWFtIEhlYXZlbiBNYXNzYWdlLCBTb2kgMzMgb24gMTQndGggT2N0LiBhdCBhcm91bmQgNy4zMCBwbS4gQXMgSSBlbnRlcmVkIGluc2lkZSwgYSBuaWNlIGxhZHkgb24gY291bnRlciBncmVldGVkIG1lIGFuZCBhc2sgd2hldGhlciBJIG5lZWQgbWFzc2FnZSwgSSBzYWlkIHllcyEgU2hlIGFza2VkIG1lIHRvIHNpdCBpbiBjb21mb3J0YWJsZSBjaGFpciwgb2ZmZXJlZCBtZSBjaGlsbGVkIHdhdGVyLCBmaXJzdCBJIGFza2VkIGhlciBhYm91dCBhdmFpbGFiaWxpdHkgb2YgJ01vJywgYXMgSSBoYWQgcmVhZCBzb21lIG5pY2UgcmV2aWV3IGFib3V0IGhlciBpbiBkaWZmZXJlbnQgYmxvZ3MsIGJ1dCBNYW1hc2FuIHRvbGQgbWUgdGhhdCAnTW8nIGlzIG9uIGhvbGlkYXkgYW5kIG1pZ2h0IHdvbid0IHJldHVybiB0aWxsIG5leHQgeWVhciwgYnV0IHNoZSBhc3N1cmVkIG1lIHRoYXQgdGhleSBoYXZlIG90aGVyIGZpbmUgbGFkaWVzIGZvciBteSBtYXNzYWdlLApIb3dldmVyLCBtb3N0IHBlb3BsZSBkb24gaGF2ZSBkb2N1bWVudGF0aW9uIG9mIHRoZWlyIGxhdW5kcnksIGFuZCB0aGVyZSB3b3VsZG4gYXBwZWFyIG9uIHRoZSBzdXJmYWNlIHRvIGJlIG11Y2ggbW90aXZhdGlvbiBmb3IgbHlpbmcuIApZb3Uga25vdyB3aGF0IHJlYWxseSBzaGl0cyBtZS4gSSBhbSBhbGwgZm9yIHRoZSBiZXR0ZXIgdHJlYXRtZW50IG9mIGFuaW1hbHMsIGJ1dCB0aG9zZSBsaW9ucyBpbiB0aGUgU2F2YW5uYSAgIHRoZXkgZG9uIGdpdmUgdHdvIHNoaXRzIGhvdyB0aGV5IGRvIHdoYXQgdGhleSBkby4gTmF0dXJlIGlzIGNydWVsLCBkZWF0aCBpcyBuYXR1cmFsIGFuZCB0aGVyZSBpcyBhIGhpZXJhcmNoeSBvZiB0aGluZ3MgYXQgYWxsIGxldmVscyBvZiB0aGUgd29ybGQuClJhbmksIGEgQkFEUCBkb3VsYSBhbmQgbWFzc2FnZSB0aGVyYXBpc3QsIHRhdWdodCB0aGUgZG91bGFzIGhvdyB0aGV5IGNhbiByZWxheCBhbmQgc3VwcG9ydCBhIHBhdGllbnQgdGhyb3VnaCBtZWRpdGF0aW9uIGFuZCBtYXNzYWdlIHdoaWxlIGluIHRoZSBjbGluaWMgb3IgZHVyaW5nIHRoZWlyIHByb2NlZHVyZXMuIFRoaXMgd2FzIGVzcGVjaWFsbHkgaGVscGZ1bCBmb3IgZG91bGFzIHdobyBuZWVkIHRvIGNvbW11bmljYXRlIHdpdGggcGF0aWVudHMgd2hvIGRvIG5vdCBzcGVhayBFbmdsaXNoIGFuZCBjYW5ub3QgY29tbXVuaWNhdGUgdGhlaXIgYW54aWV0eSBvciBzdHJlc3MgZHVlIHRvIGxhbmd1YWdlIGJhcnJpZXJzLi4gCkNvbnZlcnNpb24gVHJhY2tpbmcgUGl4ZWxzV2UgbWF5IHVzZSBjb252ZXJzaW9uIHRyYWNraW5nIHBpeGVscyBmcm9tIGFkdmVydGlzaW5nIG5ldHdvcmtzIHN1Y2ggYXMgR29vZ2xlIEFkV29yZHMsIEJpbmcgQWRzLCBhbmQgRmFjZWJvb2sgaW4gb3JkZXIgdG8gaWRlbnRpZnkgd2hlbiBhbiBhZHZlcnRpc2VtZW50IGhhcyBzdWNjZXNzZnVsbHkgcmVzdWx0ZWQgaW4gdGhlIGRlc2lyZWQgYWN0aW9uLCBzdWNoIGFzIHNpZ25pbmcgdXAgZm9yIHRoZSBIdWJQYWdlcyBTZXJ2aWNlIG9yIHB1Ymxpc2hpbmcgYW4gYXJ0aWNsZSBvbiB0aGUgSHViUGFnZXMgU2VydmljZS4gCk9yIGxhIGxlY3R1cmUgZGUgTmlldHpzY2hlIHB1bHZyaXNhaXQgY2VzIGNlcnRpdHVkZXMuIApEZXByZXNzaW9uIGNhbiBiZSBhIG1hc3NpdmUgd2VpZ2h0IG9uIHlvdXIgY2hlc3QgYW5kIEkgdGhpbmsgdGhhdCdzIHdoYXQgeW91ciBnaXZpbmcgdXAgaXMsIHlvdSBqdXN0IHNvcnQgb2Ygd2FudCB0byBnZXQgcmlkIG9mIHRoaXMgaG9ycmlibGUgZmVlbGluZyB0aGF0J3Mgd2VpZ2hpbmcgeW91IGRvd24uCkhlIHNhaWQgdGhhdCBoZSBoYWQgaGVhcmQgYSBzZXJtb24gd2hpbGUgaGUgd2FzIHZpc2l0aW5nIGluIElsbGlub2lzIG9yIHNvbWUgcGxhY2UgbGlrZSB0aGF0IGluIHdoaWNoIHRoZSBwcmVhY2hlciB0b2xkIHdoYXQgd2FzIGVzc2VudGlhbGx5IG15IGV4cGVyaWVuY2Ugd2l0aCB0aGUgaG9tZXdvcmsgcHJvYmxlbXMgdG8gbWFrZSBhIHBvaW50IGFib3V0IHBvc2l0aXZlIHRoaW5raW5nLiBUaGlzIGNyZWF0ZXMgYSBmcnVzdHJhdGluZyBzaXR1YXRpb24gdGhhdCBoYW5kaWNhcHMgeW91ciBjaXRpZXMsIHlvdSBoYXZlIHRvIGZvY3VzIG9uIGZvb2QgcHJvZHVjdGlvbiBpbiBldmVyeSBjaXR5IHdoaWNoIHNldmVyZWx5IGxpbWl0cyBwcm92aW5jZSBzcGVjaWFsaXphdGlvbiBsaWtlIGluIFJvbWUgSUkuIApBZGQgQXJ0cG9wIEpvYW5uZSBkZWx1eGVhbGJ1bXMuIApLb2JhY2gsIG9uIHRoZSBvdGhlciBoYW5kLCBpcyBhIHB1YmxpY2x5IGlkZW50aWZpYWJsZSBwZXJzb24gb2YgaW50ZXJlc3QuIEtyaXMgS29iYWNoIG1hdHRlcnMgaW4gYSB3YXkgdGhhdCBvdXIgbGFtZSByZWxhdGl2ZXMgZG8gbm90LCBiZWNhdXNlIG91ciBsYW1lIHJlbGF0aXZlcyBhcmUgbm90IGFjY291bnRhYmxlIHRvIHRoZSBlbGVjdG9yYXRlLiBPbiB0aGUgb3RoZXIgaGFuZCwgS29iYWNoIG5lYXJseSBiZWNhbWUgdGhlIGdvdmVybm9yIG9mIEthbnNhcy4uIAoxIHBvaW50ICBzdWJtaXR0ZWQgNCBkYXlzIGFnb0kgZmVlbCB5b3VyIHBhaW4uIEhhZCBtYXRjaCB3aGVyZSB0ZWFtIGdyYWJzIG15IGJhbm5lciwgdGhlIHJlc3Bhd24gaXMgMjAgc2Vjb25kcyBhd2F5LCByaW5nIGlzIGEgMTozMCBmcm9tIGJlZ2luIGNsb3NlIGFuZCB3ZSBhcmUgcmlnaHQgYXQgdGhlIGVkZ2Ugb2YgYmVpbmcgb3V0c2lkZSBvZiBpdCB3aGVuIGl0IG1vdmVzLiAKTW9uZGF5IGFsc28gYm9hc3RzIGEgaGlzdG9yaWMgZXZlbnQsIGFzIHRoZSBtdXNldW0gdGFrZXMgb3duZXJzaGlwIG9mIE5vcnRoZXJuIEFsYmVydGEgUmFpbHdheSBOby4uIApIb21lV2hhdCdzIE9uV2hhdCdzIE9uIE5ld3NXYXJ3aWNrIENhc3RsZTEzIHJlYXNvbnMgd2UgbG92ZSBXYXJ3aWNrIENhc3RsZSBhcyBpdCBjZWxlYnJhdGVzIDEsMTAwdGggYW5uaXZlcnNhcnlXZSBsb29rIGF0IHRoZSByZWFzb25zIHRoZSB3b3JsZCBmYW1vdXMgYXR0cmFjdGlvbiBoYXMgc3Rvb2QgdGhlIHRlc3Qgb2YgdGltZU5pa2l0YSwgYSBzdGVsbGFyIHNlYSBlYWdsZSwgc3RyZXRjaGVzIGhlciA4ZnQgd2luZ3NwYW4gYWZ0ZXIgam9pbmluZyBXYXJ3aWNrIENhc3RsZSBpbiAyMDA4R2V0IHRoZSBiaWdnZXN0IFdoYXQncyBPbiBzdG9yaWVzIGJ5IGVtYWlsU3Vic2NyaWJlU2VlIG91ciBwcml2YWN5IG5vdGljZU1vcmUgbmV3c2xldHRlcnNUaGFuayB5b3UgZm9yIHN1YnNjcmliaW5nV2UgaGF2ZSBtb3JlIG5ld3NsZXR0ZXJzU2hvdyBtZVNlZSBvdXIgcHJpdmFjeSBub3RpY2VDb3VsZCBub3Qgc3Vic2NyaWJlLCB0cnkgYWdhaW4gbGF0ZXJJbnZhbGlkIEVtYWlsUHJpbmNlc3NlcywgcG9saXRpY2lhbnMgYW5kIHBvcCBzdGFycyBoYXZlIGFsbCBoZWxkIGNvdXJ0IHRoZXJlIGluIG9uZSB3YXkgb3IgYW5vdGhlci5BbmQgdGhlIGNlbnR1cmllcyBoYXZlIHNlZW4gbWlsaXRhcnkgbWlnaHQgYW5kIHBvd2VyIHN0cnVnZ2xlcyBnaXZlIHdheSB0byB0b3VyaXNtIGFuZCBlbnRlcnRhaW5tZW50IG92ZXIgYW4gaW1wcmVzc2l2ZSBzcGFuIG9mIG1vcmUgdGhhbiBhIHRob3VzYW5kIHllYXJzLkJ1dCB0b2RheSBXYXJ3aWNrIENhc3RsZSBzdGlsbCBzdGFuZHMgcHJvdWQgYXMgaXQgdGhpcyB5ZWFyIGNlbGVicmF0ZXMgaXRzIDEsMTAwdGggYW5uaXZlcnNhcnkuTWlja2V5IE1vdXNlIGNhbWUgY2xvc2UgdG8gZGVhdGggYXQgV2Fyd2ljayBDYXN0bGUgamFpbFRoZSBmYW1vdXMgbW9udW1lbnQgd2FzIGZpcnN0IGNvbnN0cnVjdGVkIG9uIHRoZSBzaXRlIGJhY2sgaW4gOTE0IEFELkl0IHdhcyB0aGVuIHRoYXQgRXRoZWxmbGVkYSwgZGF1Z2h0ZXIgb2YgU2F4b24ga2luZyBBbGZyZWQgdGhlIEdyZWF0LCBwdXQgYSBmb3J0IG9uIHJhaXNlZCBncm91bmQgbmV4dCB0byB0aGUgcml2ZXIgQXZvbiB0byBoZWxwIGRlZmVuZCB0aGUgTWlkbGFuZHMga2luZ2RvbSBvZiBNZXJjaWEgZnJvbSB0aGUgVmlraW5ncy4gCkkgdG9sZXJhdGVkIGRpc3Jlc3BlY3QgZm9yIDUgZGF5cyBiZWZvcmUgY29uZnJvbnRpbmcgaXQuIEkgY291bGRuIGJlbGlldmUgaG93IHRpcmVkIGFuZCB3b3JuIG91dCBJIGZlbHQuIApEdWRlIHlvdXIgc3Rvcnkgc3RyZXNzZXMgbWUgb3V0LiBJIGZlZWwgYmFkIGZvciBteSBkb3duc3RhaXJzIG5laWdoYm9ycyBidXQgaG9uZXN0bHksIEkgcGFpZCBtb3JlIGZvciBhbiB1cHN0YWlycyBhcGFydG1lbnQgc28gSSB3b3VsZG4gaGF2ZSB0byBoZWFyIHNoaXQuIApJdCBmaXNoaW5nIGZvciBzb21ldGhpbmcgdG8gYmUgb2ZmZW5kZWQgYWJvdXQuU3VpY2lkZSBpcyBiYWQsIHllcywgZXZlcnlvbmUga25vd3MgdGhhdC4gCldoYXQgSSBmaW5kIGZhc2NpbmF0aW5nIGlzIHRoYXQgMTkxOCBtb3N0IG9mIHRoZSBkZWFkIHdlcmUgeW91bmcgYW5kIGhlYWx0aHkgYWR1bHRzLCB3aGlsZSB0aGUgb2xkIHBlb3BsZSBzdXJ2aXZlZCAocHJvYmFibHkgYmVjYXVzZSBpdCB3YXMgYSB2aXJ1cywgd2hpY2ggd2FzIGFyb3VuZCBiZWZvcmUgYW5kIHRoZSBvbGQgd2VyZSBpbW11bmUpLiBTbyBpZiB5b3Ugc2F5IHlvdSBzYWZlIGJlY2F1c2UgeW91IGhlYWx0aHkgaXQgbmFpdmUuClRoZSBxdWVzdGlvbiBpcywgaG93IG1hbnkgd2hvIHJlcG9ydGVkIG9uIG9yIGFkaGVyZSB0byB0aGUgc3VnZ2VzdGlvbnMgYmFzZWQgb24gSlVQSVRFUiBoYXZlIGFjdHVhbGx5IHJlYWQgdGhlIHN0dWR5PyBJIHN1c3BlY3QgdmVyeSBmZXcuClRoZSB0YWJsZSBpcyBtYWRlIG9mIHNvbGlkIHdvb2QgYW5kIGNvbWVzIGluIGEgdmFyaWV0eSBvZiBmaW5pc2hlcywgaW5jbHVkaW5nIG1haG9nYW55LCBuYXR1cmFsIGFuZCBvYWsuIApJIHRoaW5rIEkgbmVlZCB0byB0cnkgdGhpcy4gSSBzZXJpb3VzbHkgd29uZGVyIHdoYXQgaGFwcGVuZWQgdG8gdGhlIGdpcmwgdGhhdCBsb3ZlZCB0byBiZSBkcmVzc2VkIHdlbGwgZm9yIHdvcmssIGNvcnJlc3BvbmRpbmcgamV3ZWxyeSBhbmQgYmFnLiBSaWdodCBub3cgSSBqdXN0IG1ha2luZyBzdXJlIEkgYmFyZWx5IGZ1bGZpbGwgdGhlIG9mZmljZSBkcmVzcyBjb2RlIGFuZCBsb3JkIGhhdmUgbWVyY3ksIHRoZSBncmF5IGhhaXJzIGFyZSBhIHJpb3QsIGFkZGluZyBhdCBsZWFzdCAxMCB5ZWFycyB0byBtZS4gTXkgbWFrZXVwIGFuZCBuYWlsIHBvbGlzaCBvcmcgc2V0cyBhcmUgYmFzaWNhbGx5IGdhdGhlcmluZyBkdXN0LiBZZWFoIG15IG5haWxzIGFyZSBwYWludGVkIHRoaXMgd2VlayAoY2hpcHBlZCBhbHJlYWR5KSBidXQgb25seSBiZWNhdXNlIG15IEJGRiB0cmVhdGVkIG1lIHRvIGEgbWFuaS4gSXQncyBhIHRyaXBsZSBncmllZiwgYWxtb3N0IGxpa2UgbW91cm5pbmcgYSBkZWF0aC4gWW91IGdyaWV2ZSB3aGF0IHlvdSBoYWQuIFlvdSBncmlldmUgZm9yIHdoYXQgeW91IHdpc2hlZCBmb3IuIEFuZCB5b3UgZ3JpZXZlIGZvciB0aGUgaG9wZSBvZiBpdCBiZWluZyBmaXhlZC4KVGhleSBhbHNvIGFsbG93ZWQgc2FtZSBnZW5kZXJlZCBvdXQgY2FsbCBtYXNzYWdlLiAKV2hpbGUgcGxhc3RpYyBjaGlwcyBjYW4gYmUgYXMgbGl0dGxlIGFzIDMgZ3JhbXMsIG1vc3QgY2xheSB2YXJpZXRpZXMgc3RhcnQgYXQgYWJvdXQgNmdyYW1zLiAKT24gbmUgcGV1dCBwYXMgdXRpbGlzZXIgZGVzIGZvcm11bGVzIGRlIE1UQyBzYW5zIGwnYWlkZSBkJ3VuIHRocmFwZXV0ZSBxdWFsaWZpIGV0IGNlcyB0aHJhcGV1dGVzIHNlIGZvdXJuaXNzZW50IG5vbiBwYXMgYXVwcnMgZGUgZmFicmljYW50cyBkZSBjb21wbG1lbnRzICJncmFuZCBwdWJsaWNzIiBtYWlzIGRlIGxhYm9yYXRvaXJlcyB0cnMgc3BjaWFsaXNzLi4gCkJ1dCBpdCBsb29rcyBsaWtlIHlvdSBuZWVkIHRvIGZvcmNlIG1vcmUgbWl4dXBzLiAKV2h5IGNhbiB3b3JrZXJzIGJ1eSwgb3Igb3RoZXJ3aXNlIHVzZS9hY3F1aXJlLCBlcXVpcG1lbnQ/Ck1heWJlIHdlIGNvdWxkIGFkdmlzZSAiZ2V0IGJldHRlciBmcmllbmRzIiBidXQgc29tZXRpbWVzIHRoYXQgaXMgbGl0ZXJhbGx5IGltcG9zc2libGUsIG9yIGF0IHRoZSB2ZXJ5IGxlYXN0LCB1bmRlc2lyYWJsZSBjb21wYXJlZCB0byB0aGUgYWx0ZXJuYXRpdmUuIApJdCB0b3RhbGx5IGZpbmUgdG8gZmlyZSB0d28gYmFycmVscyB3aXRoIHlvdXIgZHJhdyBhbmQgY2FwaXRhbGl6ZSBvbiB0aGUgZm9sZCBlcXVpdHkgeW91IGhhdmUgdGhlcmUuIEFmdGVyIGhlIGNhbGxzIHR1cm4gdGhvdWdoLCBJIGRvbiBzZWUgaGltIGV2ZXIgZm9sZGluZyB0byBhLiAKIldlIGNhbid0IGtpZCBvdXJzZWx2ZXMgdGhlIGpvYiBpcyBkb25lLCIgUG9ydG8gY29hY2ggQW5kcmUgVmlsbGFzIEJvYXMgc2FpZC4gIldlIGhhdmUgdG8ga2VlcCBvdXIgZmVldCBvbiB0aGUgZ3JvdW5kLiBUaGUgYXRtb3NwaGVyZSBhd2F5IGZyb20gaG9tZSwgaW4gYSBmb3JlaWduIGNpdHksIHdpbGwgYmUgdmVyeSBkaWZmZXJlbnQuIgpUaGUgU2VydmljZXMgbWF5IGNvbnRhaW4gaW5mb3JtYXRpb24sIHRleHQsIGxpbmtzLCBncmFwaGljcywgcGhvdG9zLCB2aWRlb3MsIG9yIG90aGVyIG1hdGVyaWFscyAoIkNvbnRlbnQiKSwgaW5jbHVkaW5nIENvbnRlbnQgY3JlYXRlZCB3aXRoIG9yIHN1Ym1pdHRlZCB0byB0aGUgU2VydmljZXMgYnkgeW91IG9yIHRocm91Z2ggeW91ciBBY2NvdW50ICgiWW91ciBDb250ZW50IikuIFdlIHRha2Ugbm8gcmVzcG9uc2liaWxpdHkgZm9yIGFuZCB3ZSBkbyBub3QgZXhwcmVzc2x5IG9yIGltcGxpY2l0bHkgZW5kb3JzZSBhbnkgb2YgWW91ciBDb250ZW50LiAKSGUgcmVhbGx5IHdhbnRzIHRvIHdpbi4gCkluIHRoaXMgRFZELCB0aGUgc2VjcmV0ZXMgb2YgVGV4YXMgSG9sZCdlbSBwb2tlciBpcyBhbHNvIGluY2x1ZGVkLiAKVGhlIGNvdXJ0IGlzIHRvbGQgdGhhdCB3aGVuIHRoZSBhZ2VuY3kgcGVyc2lzdGVkIGluIHRyeWluZyB0byBjb250YWN0IGhpbSwgc2hlIGludmVudGVkIG9uZSB0YWxlIGFmdGVyIGFub3RoZXIgICB0aGF0IGhlIGhhZCBnb25lIHRvIFNjb3RsYW5kIGZvciBhIHJ1Z2J5IGNvbXBldGl0aW9uLCB0aGF0IGhlIGNvbnNlbnRlZCB0byB0aGUgYWRvcHRpb24gYnV0IHdhbnRlZCBub3RoaW5nIHRvIGRvIHdpdGggdGhlIHBhcGVyd29yaywgdGhhdCB0aGV5IGhhZCBzZXBhcmF0ZWQuIEFuZCBzbyBvbi4gCllvdSBhZ3JlZSB3aXRoIGFsbCBvZiB0aGlzLCBhbmQgeWV0IHlvdSBzdGlsbCBtYWtlIHlvdXJzZWx2ZXMgb3V0IHRvIGJlIHRoZSB2aWN0aW1zIG9mIGEgY29uc3BpcmFjeS4uIApUaGUgRG9KIGFsbGVnZXMgdGhhdCB0aGUgY29tcGFuaWVzIGFuZCAxMSBtZW4gY2hhcmdlZCBpbiBjb25uZWN0aW9uIHdpdGggdGhlIGNyaW1lLCB0cmlja2VkLCBsaWVkIGFuZCBjb2xsdWRlZCB3aXRoIGJhbmtzIHRvIHRyYW5zZmVyIHRoZSBzdGFrZXMgYW5kIHByb2NlZWRzIG9mIGdhbWJsaW5nLgpZZXAsIHRoYXQgZnJvbSBteSBzY2FsZS4gClBvcnRpbmcgaXNuIGEgYmFkIGlkZWEgZnJvbSB3aGF0IEkgaGVhciwgdGhvdWdoICAgdGhpcyBpcyB3aGVyZSB5b3UgYmFzaWNhbGx5IGNhcnZlIG91dCBsYXJnZXIgaW50YWtlIGhvbGVzIGluIHRoZSBlbmdpbmUgaG91c2luZyB0byBjaGFuZ2UgdGhlIGNoYXJhY3RlcmlzdGljcyBvZiB0aGUgZW5naW5lLiBVc3VhbGx5IHRoYXQgZ2l2ZXMgdGhlIGNhciBzb21lIG11Y2ggbmVlZGVkIHRvcnF1ZS4gClRhbGxlciBhbmQgd2VsbCBidWlsdC4gQSBzdG9ja3kgZmVsbG93IHdpdGggYSBraW5kIHNtaWxlIGhpZGRlbiBwYXJ0aWFsbHkgYmVoaW5kIGEgYnVzaHkgbW91c3RhY2hlLiBObyByaW5nIG9uIGhpcyBmaW5nZXIgdGhhbmtmdWxseS4gCk1heWJlIHlvdSB0aHJvdyBhIGRvbGxhciBpbiB0aGUgcGxhdGUgdG8gcGF5IGl0IGZvcndhcmQgZm9yIHNvbWVvbmUgZWxzZSBtZWFsLiBCZWZvcmUgeW91IGtub3cgaXQsIHRoZXkgZ290IHlvdS4gCklmIGhlIGtuZXcgYWJvdXQgdGhlIHNleCB0cmFmZmlja2luZyB3ZSB3b3VsZCBoYXZlIGEgbG90IG1vcmUgY2hhcmdlcyBhZ2FpbnN0IGhpbSBvdGhlciB0aGFuIGEgbWlzZGVtZWFub3Igb2Ygc29saWNpdGluZyBwcm9zdGl0dXRpb24uIEZvciBhbGwgd2Uga25vdyBoZSB3ZW50IHRvIHRoZSBtYXNzYWdlIGZvciBhIG1hc3NhZ2UgYW5kIHRoZW4gZ290IGEgbGl0dGxlIGV4dHJhLiAKIkl0J3Mgbm90IGFsd2F5cyB0aGUgY2FzZSB0aGF0IGV2ZXJ5dGhpbmcgd2UncmUgaGVhcmluZyBpcyB1bnZhcm5pc2hlZCB0cnV0aCwiIE1vcm5lYXUgdG9sZCB0aGUgU2VuYXRlIGxhc3Qgd2VlayBpbiByZWZlcmVuY2UgdG8gc29tZSBvZiB0aGUgY29tcGxhaW50cyB0aGUgZ292ZXJubWVudCBoYXMgaGVhcmQgYWJvdXQgdGhlIHRheCByZWZvcm1zLgpCdXQgeW91ciBzZWNvbmQgc2VudGVuY2UgaXMgZXhhY3RseSB3aGF0IHRoZXkgd2FudC4gVGhleSB3YW50IHRoZSBuZXcgc2hpbnkgdG8gYmUgdGhlIG9ubHkgdGhpbmcgdGhhdCBjYW4gY29sbGVjdCB0aG9zZSBjcnlzdGFscyBvdGhlcndpc2Ugd2h5IHdvdWxkIHdoYWxlcyBnZXQgaXQ/IHRoZSByZWFzb24gd2hhbGVzIGJ1eSBSZXZhbiBmb3IgZXhhbXBsZSBpcyB0aGV5IGtuZXcgaGUgd291bGQgYmUgbWV0YSBmb3IgNisgbW9udGhzLiBUaHVzIGluIDYgbW9udGhzIHRoZXkgY2FuIGNvbGxlY3QgYW5vdGhlciA1MDAgYnVja3MgZnJvbSB0aGUgd2hhbGVzLiBXaGFsZXMgZmVlbCB0aGVyZSBtb25leSBpcyB3b3J0aCBpdCBiZWNhdXNlIGluIHRoZSBtZWFuIHRpbWUgdGhleSBjb2xsZWN0ZWQgYWxsIHRob3NlIGNyeXN0YWxzLiBldmVyeSB5ZWFyIG9yIHNvIHRoZXkgZG9udCBoYXZlIHRvIHdoYWxlIGJlY2F1c2UgdGhleSBoYXZlIGVub3VnaCBjcnlzdGFscyBvbiBhcmVuYS4gaXRzIGtpbmQgb2YgbGlrZSBidXkgMiBnZXQgMSBmcmVlLgpJbiB0aGUgbWVhbnRpbWUsIERhZCByZXBsYWNlZCB0aGUgZmxpbXN5IG1haWxib3ggd2l0aCBhIHZlcnkgc3R1cmR5IHZlcnNpb24gb24gYSAyIiBtZXRhbCBwb2xlIGZpbGxlZCB3aXRoIGNvbmNyZXRlLCBzZXQgaW4gY29uY3JldGUuIEF0IGZpcnN0IGdsYW5jZSB5b3UgbWlnaHQgYmUgZGVjZWl2ZWQgdG8gdGhpbmsgaXQgd2FzIGp1c3QgYSBmbGltc3kgbWFpbGJveCwgYnV0IGl0IHdhcyBidWlsdCBsaWtlIGEgdGFuay4gCktub2NrZWQgaGVyIHRoZSBmdWNrIG91dCB3aGVuIEkgYnVyc3QuQXNpYW5zIGFyZSBzbyBlYXN5IHRvIHRlbGwgZm9yIG1lLiAKSG9uZXN0IGZlZWRiYWNrIG9uIHRoZSBTcGVjdHJlOiBpdCBzZWVtcyBsaWtlIHRoZSBzaWxlbmNlIGVmZmVjdCBpbiBpdHMgY3VycmVudCBmb3JtIGlzIHRvbyBnb29kIGF0IG5ldXRyYWxpemluZyBjYXN0ZXJzLCBlc3BlY2lhbGx5IGluIHRoZSBtaWQgZ2FtZSB3aGVyZSBtb3N0IGFyZSBhZmZlY3RlZCBieSBzaWxlbmNlLiBFbmVteSBBSSBkb2VzbiBhdm9pZCB0aGUgcmFkaXVzLCBzbyBJIGp1c3QgcHVsbCB0aGVtIGJhY2sgYXJvdW5kIGEgY29ybmVyLCBvciBjbG9zZSBhIGRvb3IgYW5kIHdhaXQsIGFuZCB0aGVuIHRoZXkgdXAgY2xvc2Ugd2l0aG91dCBtb3N0IG9mIHRoZSBhYmlsaXRpZXMgdGhhdCBtYWtlIHRoZW0gZGFuZ2Vyb3VzLi4gCkJyYXppbCBoYXMgYSBoaWdoZXIgdmlvbGVudCBjcmltZSByYXRlIHBlciBjYXBpdGEgdGhhbiBDaGluYS4uIApPdmVyYWxsIHRoZSBiaWdnZXN0IGlzc3VlIGZvciBtZSB3aXRoIGltbWlncmF0aW9uIGlzIHdlbGZhcmUsIG9wZW4gYm9yZGVycyBvciBub3QuIFNvIGlmIHdlIHdvbiBnZXQgcmlkIG9mIHRoZSB3ZWxmYXJlIHN0YXRlLCB3ZSBzaG91bGQgYWJzb2x1dGVseSBkbyB3aGF0IHdlIGNhbiB0byBrZWVwIGlsbGVnYWwgaW1taWdyYW50cyBvdXQuIGdvdmVybm1lbnQsIGFuZCB3aXRoIHRoYXQgSSBiZWxpZXZlIHRoYXQgaWxsZWdhbCBpbW1pZ3JhbnRzIHdobyBkbyBtYW5hZ2UgdG8gZ2V0IGluIHNob3VsZCBub3QgYmUgZGVwb3J0ZWQgd2l0aG91dCBhIGZhaXIgdHJpYWwuIEJ1dCBpdCBzdGlsbCBhIGNyaW1lIHRoYXQgd29ya3MgZGlyZWN0bHkgYWdhaW5zdCBsZWdhbCBpbW1pZ3JhbnRzIGFuZCBjaXRpemVucyBhbmQgcHJldmVudGlvbiBpcyBiZXN0LgpTdGluZyBhbmQgaGlzIHdpZmUgVHJ1ZGllIFN0eWxlciwgYXMgd2VsbCBhcyBiaWxsaW9uYWlyZSBEYW5pZWwgT2NoLCBoYXZlIHJlcG9ydGVkbHkgYm91Z2h0IHBhZHMuIEFuZCBpdCB3YXMgY29uZmlybWVkIG9uIFdlZG5lc2RheSB0aGF0IGhlZGdlIGZ1bmQgQ2l0YWRlbCdzIGZvdW5kZXIgS2VuIEdyaWZmaW4gcGFpZCBtb3JlIHRoYW4gJDIzOCBtaWxsaW9uIGZvciBhIDI0LDAwMCBzcXVhcmUgZm9vdCBhcGFydG1lbnQgdGhlcmUuIEZvciB0aGF0IGtpbmQgb2YgY2FzaCwgYWNjb3JkaW5nIHRvIHRoZSBXYWxsIFN0cmVldCBKb3VybmFsLCByZXNpZGVudHMgd2lsbCBnZXQgYSBwcml2YXRlIGRpbmluZyByb29tLCBhIGd5bSwgYSBqdWljZSBiYXIsIGEgbGlicmFyeSwgYSBiYXNrZXRiYWxsIGNvdXJ0LCBhIGdvbGYgc2ltdWxhdG9yIGFuZCBhIGNoaWxkcmVuJ3MgcGxheSBhcmVhLi4gCkFiZXIgaWNoIGRlbmtlIGJlaSBhbGxlbiBGYXJic3RvZmZlbiBiZXN0ZWh0IGRpZSBHZWZhaHIsIGRhc3Mgc2llIGF1ZiBkZXIgSGF1dCBhYmZyYmVuIGFsc28gd2VubiwgZGFubiBzb2xsdGUgbWFuIHNwYXJzYW0gZGFtaXQgdW1nZWhlbi4gTWNodGUgbWFuIHRyb3R6ZGVtIGVpbiBiaXNzY2hlbiBGYXJiZSByZWluYnJpbmdlbiwgZGFubiBrbm50ZSBtYW4gZWluIHBhYXIgVHJvcGZlbiBTYW5kZG9ybmZydWNodGZsZWlzY2hsIG9kZXIgS2Fyb3RpbmwgdmVyd2VuZGVuLiAKSXQgd2FzIHNvIGhvdCBJIGhhZCB0byBzZWUgaGVyIGFnYWluLiBBbmQgYWdhaW4uIApXaGljaCBpcyBzaW1pbGlhciB0byB0aGF0IG9mIG1hc3NhZ2UgdGhlcmFwaXN0cywgUFRzLCBBVHMsIGV0Yy50aGUgcHJvZmVzc2lvbiBpcyBhIG1lc3MgYmVjYXVzZSB3ZSBhcmUgYWxsIGJvcnJvd2luZyBmcm9tIGVhY2ggb3RoZXIgYnV0IGhhdmUgZGlmZmVyZW50IHRpdGxlcywgd2l0aCBkaWZmZXJlbnQgcHJpdmxlZGdlc2ZvciBleGFtcGxlLCBJIGNhbiBjcmFjayBiYWNrcyBpbiBteSByZWdpb24gKG5vdCBsZWdhbGx5IGFsbG93ZWQpIGJ1dCBjaGlyb3MgY2FuIG1hc3NhZ2UgcGVvcGxlOyBQVHMgY2FuIGNyYWNrIGJhY2tzIHdpdGggZXh0cmEgY291cnNlIHdvcmssIGFuZCB0aGV5IGNhbiBtYXNzYWdlLCB5ZXQgSSBjYW4gc2lnbiBvZmYgb24gYSBtb3RvciB2ZWhpY2xlIGNsYWltIHRyZWF0bWVudCBwbGFuIGxpa2UgYSBQVCBvciBjaGlybyBjYW4uSXQgY29tZXMgZG93biB0byB0aGUgdGhlcmFwaXN0LCB3aGF0ZXZlciBoaXMgY3JlZGVudGlhbHMuIApJZiB5b3Ugd2luIGdhbWVzLCB0aGUgbW9uZXkgaXMgeW91cnMgdG8ga2VlcCBpbiBtb3N0IGNhc2VzLiBPbmUgb2YgdGhlIGVhc2llciBvZiB3YXlzIG9mIGRvaW5nIHRoaXMgcmVzZWFyY2ggaXMgdG8gZ28gdG8gYW4gb25saW5lIGNhc2lubyBhZ2dyZWdhdG9yIHNpdGUuIFRoZXNlIHNpdGVzIGRvIGFsbCB0aGUgc2VhcmNoaW5nIGFyb3VuZCBmb3IgeW91IGFuZCBwcmVzZW50IHlvdSB3aXRoIGxpc3RzIG9mIG9ubGluZSBjYXNpbm9zLiAKQVBCIGlzIHBsZWFzZWQgdG8gYW5ub3VuY2UgdGhhdCB0aGUgb2YgdGhlIFdlZWsgU29jaWFsIGNhbXBhaWduIHdpbGwgcmVtYWluIGluIEFzaWEgdGhpcyB0aW1lIHB1dHRpbmcgdGhlIHNwb3RsaWdodCBvbiBhIEZpbGlwaW5vIEFQQiBCb3hlci4gQVBCIGZhY2Vib29rIGZhbnMgd2lsbCBiZSBhYmxlIHRvIGFzayBoaW0gdGhlaXIgcXVlc3Rpb25zIGZyb20gTW9uZGF5IDEwdGggdW50aWwgV2VkbmVzZGF5LCBKdW5lIDEydGguClByb3BlbGxlZCBieSBoaXMgc2hvcnQgbGlmZSBleHBlY3RhbmN5LCBSaWNrIHdhcyBkZXRlcm1pbmVkIHRvIGJlIGFuIGVudHJlcHJlbmV1ci4gSGUgY29tYmluZWQgaGlzIHByb2Zlc3Npb25hbCBkcmVhbXMgd2l0aCBoaXMgbG92ZSBvZiB0ZW5uaXMgYW5kIHdlbnQgb24gdG8gZm91bmQgQXJsaW5ndG9uIFJhY3F1ZXQgU3BvcnRzLiBIZSBhbmQgaGlzIHBhcnRuZXJzIGJ1aWx0LCBvd25lZCwgYW5kIG9wZXJhdGVkIGZpdmUgdGVubmlzIGNsdWJzIGFjcm9zcyBPbnRhcmlvLiAKVGhlc2UgaW5mcmVxdWVuY2llcyBpbiBsaWdodCBjb21pbmcgZnJvbSB0aGUgc3RhciBjYW4gYmUgdXNlZCB0byBkaXNjb3ZlciB0aGVtIGFuZCBnYWluIHNvbWUgaW5zaWdodHMgb24gdGhlaXIgc2l6ZSBhbmQgb3RoZXIgY2hhcmFjdGVyaXN0aWNzLiBQbGFuZXRzIG9uIHZlcnkgbG9uZyBvcmJpdGFsIHRyYWplY3RvcmllcyBpbiBvdXIgc29sYXIgc3lzdGVtIGFyZSBzaWduaWZpY2FudGx5IGhhcmRlciB0byBkZXRlY3QuIApLaGFuZ3VyYSBwZXJzb25hbCBzdG9yeSByZXNvbmF0ZWQgd2l0aCB0aGUgZ2VuZXJvdXMgZmllbGQgYXMgdGhleSByYWlzZWQgbmVhcmx5ICQxMDAsMDAwIGZvciB0aGUgY2F1c2UgYSBuZXcgc3RhbmRhcmQgZm9yIHRoZSBmbGVkZ2xpbmcgZXZlbnQuLiAKVGhlcmUgaXMgbm8gZG91YnQgdGhhdCBvdXIgcGVyY2VwdGlvbiBvZiByZWQgY29pbmNpZGVzIHdpdGggb25lIG9mIHRoZSBtb3N0IGltcG9ydGFudCBldmVudHMgaW4gb3VyIGV2b2x1dGlvbmFyeSBoaXN0b3J5LiBNYW55IG1hbW1hbHMsIGxpa2UgZG9ncywgZmFpbCB0byBkaWZmZXJlbnRpYXRlIGJldHdlZW4gcmVkIGFuZCBncmVlbi4gQnV0IGFzIG91ciBlYXJseSBwcmltYXRlIGFuY2VzdG9ycyB3ZXJlIGFkYXB0aW5nIHRvIGxpZmUgaW4gdGhlIGp1bmdsZSwgdGhleSBldm9sdmVkIGEgbmV3IGtpbmQgb2YgY2VsbCBpbiB0aGVpciByZXRpbmEgdGhhdCBhbGxvd2VkIHRoZW0gdG8gcGljayBvdXQgdGhlIGJyaWdodCwgcmVkIGZydWl0IGZyb20gdGhlIGZvbGlhZ2UuIApMaWtlIGZsZWFzLCB0aWNrcyBhcmVuJ3QgYXMgbGlrZWx5IHRvIGFiYW5kb24geW91ciBjYXQgZm9yIHlvdSwgYnV0IGl0IGNhbiBoYXBwZW4uIEFsc28sIGlmIHlvdXIgY2F0IGhhcyBiZWVuIHNvbWV3aGVyZSB0aGF0IHRpY2tzIGhhbmcgb3V0LCB0aGUgb2RkcyBhcmUgZWl0aGVyIHlvdSd2ZSBiZWVuIHRoZXJlLCB0b28sIG9yIHlvdXIgY2F0IGhhcyBicm91Z2h0IHRoZW0gaG9tZS4gQWdhaW4sIHRoZSBtb3N0IGNvbW1vbiBwcm9ibGVtIGlzIGFubm95YW5jZS4gCldlbGxuZXNzIG1lYW5zIG1vcmUgdGhhbiBzaW1wbHkgbm90IGJlaW5nIGlsbDsgaXQgZm9jdXNlcyBvbiBrZWVwaW5nIHlvdXIgYm9keSBpbiBnb29kIGNvbmRpdGlvbiBzbyBpdCBydW5zIG1vcmUgZWZmaWNpZW50bHkgYW5kIHlvdSBzdGF5IHdlbGwgbG9uZ2VyLiAKQWQgQWdlIEFkdmVydGlzaW5nIGFuZCBNYXJrZXRpbmcgTmV3cyBXaGl0ZSBQYXBlcnMKSSBhY3R1YWxseSBmb3VuZCB0aGUgc3BlZWNoIGEgbG90IG1vcmUgcmVhc29uYWJsZSB0aGFuIEkgdGhvdWdodCBJIHdvdWxkLiBTaGUgbWFrZXMgYSBncmVhdCBwb2ludDogd2h5IGFyZSBwcm9kdWN0aXZlIGFuZCBzYW5lIGZhdCBwZW9wbGUgc3RpbGwgdmlsaWZpZWQ/IFdoeSBzaG91bGQgSSBnaXZlIGEgZnVjayBhYm91dCB3aGF0IG90aGVyIHBlb3BsZSBkbyB0byB0aGVpciBib2R5LCBiZSBpdCBzbW9raW5nLCBkb2luZyBkcnVncywgc2l0dGluZyAxNGgrIGEgZGF5IGxvb2tpbmcgYXQgYSBjb21wdXRlciBzY3JlZW4gb3IgYmluZ2UgZHJpbmtpbmcgMyBkYXlzIGEgd2Vlaz8gVGhleSBhcmUganVzdCBhcyBzdHJhaW5pbmcgdG8gdGhlIGhlYWx0aCBzeXN0ZW0sIGlmIG5vdCBtb3JlLCB0aGFuIGZhdCBwZW9wbGUuIEFuZCB5ZXQsIEkgc2VlIHZlcnkgbGl0dGxlIGhhdGUgZGlyZWN0ZWQgdG8gdGhvc2Uga2luZHMgb2YgcGVvcGxlLgpJIHJlY2VudGx5IGN1dCBvdXQgY2FmZmVpbmUgYWdhaW4gdG8gc2VlIGlmIHRoYXQgaGVscHMuIEl0IGJlZW4gNCBkYXlzIGFuZCB0aGUgd2l0aGRyYXdhbCBpcyBicnV0YWwsIGJ1dCBJIGhvcGluZyB0aGF0IGl0IGhlbHBzLgpOb3Qgc28gYmFkLi4gCldoZW4gdGhlIGZlZWxpbmcgaGFzIHBhc3NlZCwgaGUgY2FuIHJlc3VtZSBtYXN0dXJiYXRpbmcgYW5kIHRyeSBpdCBhZ2Fpbi4gCk1hcmtldGluZyBleGVjdXRpdmVzIHdobyBjb250cm9sIHRoZSBidWRnZXRzIG9mIHRoZSBuYXRpb24ncyBsYXJnZXN0IGFkdmVydGlzZXJzIGFyZSBpbiBPcmxhbmRvIHRoaXMgd2VlayBmb3IgdGhlIEFzc29jaWF0aW9uIG9mIE5hdGlvbmFsIEFkdmVydGlzZXJzIGFubnVhbCAiTWFzdGVycyBvZiBNYXJrZXRpbmciIGNvbmZlcmVuY2UuIEFkIEFnZSB3aWxsIGJlIG9uIHRoZSBncm91bmQgdG8gY3V0IHRocm91Z2ggdGhlIGNsdXR0ZXIgYW5kIGRlbGl2ZXIgeW91IHdoYXQgeW91IG5lZWQgdG8ga25vdyBhYm91dCB0aGUgZm91ciBkYXkgZXZlbnQsIHdoaWNoIGtpY2tlZCBvZiBsYXN0IG5pZ2h0IHdpdGggYSBkaW5uZXIgYW5kIHBlcmZvcm1hbmNlIGJ5IFRyYWluLiAKVGhlIE1SSSBzY2FucyBzaG93ZWQgdGhhdCB0aGUgbm9ybWFsIGdyb3VwIGxvc3QgYW4gYXZlcmFnZSBvZiAxOC40IGNtMyB0b3RhbCBicmFpbiB2b2x1bWUgb3ZlciB0d28geWVhcnMuIEluIGNvbXBhcmlzb24sIHRoZSBzdGFibGUgcHJlIGRpYWJldGljIGdyb3VwIGxvc3QgMS40IHRpbWVzIG1vcmUgYnJhaW4gdm9sdW1lICgyNi42IGNtMykuClNURU0gcHJvZ3JhbSBjaGFuZ2VkIG15IGxpZmUsIGFkZGVkIFpoZW5nLiBJbiBDaGluYSwgSSBmZWVsIGxpa2UgZ2lybHMgYXJlIG1vcmUgZW5jb3VyYWdlZCB0byBnbyBpbnRvIGh1bWFuaXRpZXMgYW5kIGJ1c2luZXNzIGFuZCBJIGZlZWwgd2hlbiBJIHdhcyB0aGVyZSBJIHdhc24gcmVhbGx5IGNvbmZpZGVudCBpbiBzY2llbmNlIG9yIG1hdGguIApXaGlsZSBubyBsb2RnaW5nIGlzIGF2YWlsYWJsZSBhdCBIZWFyc3QgQ2FzdGxlLCBhIG51bWJlciBvZiBob3RlbHMgY2FuIGJlIGZvdW5kIGluIFNhbiBTaW1lb24gYW5kIENhbWJyaWEsIHN1Y2ggYXMgQmx1ZSBEb2xwaGluIElubiwgQ2F2YWxpZXIgT2NlYW5mcm9udCBSZXNvcnQgYW5kIHRoZSBNb3JnYW4uLiAKSGVyZSBhcmUganVzdCBhIGZldyBvZiB0aGUgbGVzc29ucyBJJ3ZlIGxlYXJuZWQgd2hpbGUgYmVpbmcgYSBob3JyaWJsZSBib3NzIGluIHRoZSByaW5nIGFuZCBob3cgZG9pbmcgdGhlIG9wcG9zaXRlIGhlbHBzIG1lIGJlIHRoZSBiZXN0IGJvc3MgSSBjYW4gYmUgb3V0c2lkZSBvZiBpdC4uIApJIGZpbmQgdGhlIGVudGlyZSBwbG90IHRvIGJlIGJvcmluZyBhbmQgdW5pbnRlcmVzdGluZyBhcyB3ZWxsLiBIb25lc3RseSB0aGUgZmlyc3QgY291cGxlIGVwaXNvZGVzIEkgd2FzIGludGVyZXN0ZWQgYnV0IGl0IGp1c3QgcGx1bWV0dGVkIGFuZCBuZXZlciByZWNvdmVyZWQuLiAKWWVhaC4gCiJPdXIgb3BlcmF0aW9ucyBpbiBWaWN0b3JpYSBoYXZlbid0cHJldmlvdXNseSByZWNlaXZlZCBWaWNIZWFsdGggZnVuZGluZywgc28gd2UncmUgaG9waW5nIHRoaXMgd2lsbCBub3QgYmUgYSBvbmUgb2ZmIGludmVzdG1lbnQsIGJ1dCBhIG1vcmUgb25nb2luZyBlZmZvcnQgdG8gZW5zdXJlIGFzdGhtYSBpcyB3ZWxsIG1hbmFnZWQsIiBzaGUgc2FpZC4gSW52ZXN0bWVudCBjb3VsZCBhbHNvIGhlbHAgaW1wcm92ZSBkYXRhIG9uIHBvbGxlbiBkdXJpbmcgc3ByaW5nIGluIGJvdGggVmljdG9yaWEgYW5kIE5TVy4gQnJ1Y2UgR3JhaGFtLCB3aG8gb3ZlcnNlZXMgY291bnRzIG91dCBvZiBXYWdnYSwgc2FpZCBWaWN0b3JpYSBub3cgaGFkIHNpeCBwb2xsZW4gY291bnQgbG9jYXRpb25zIGFjcm9zcyB0aGUgc3RhdGUuIApUaGV5IGFyZSB3ZWxsIG9uIHRoZWlyIHdheSwgZm9yIHRoZXkgb3duIHRoZWlyIGhvbWUgd2l0aCBubyBtb3J0Z2FnZS4gCkl0J3Mgc2FkIHRoYXQgSG9sbHl3b29kIGxlZnRpc3RzIGRvbid0IHVuZGVyc3RhbmQgaG93IGZhaXRoIHdvcmtzLiBKb2IgMjoxMGIgcmVhZHMsICJXaWxsIHdlIGluZGVlZCBhY2NlcHQgdGhlIGdvb2QgZnJvbSBHb2QgYnV0IG5vdCBhY2NlcHQgdGhlIGFkdmVyc2l0eT8iIFRoZSB0aGVvbG9neSBiZWhpbmQgc3VmZmVyaW5nIGFuZCBpdHMgcmVkZW1wdGl2ZSBwb3dlciBpcyB0b28gbG9uZyB0byBnZXQgaW50byBoZXJlLCBidXQgR29kIGlzbid0IHN1cHBvc2VkIHRvIGJlIGEgInNreSBmYWlyeSwiIGFzIGF0aGVpc3RzIGxpa2UgdG8gY2FsbCBIaW0sIHdobyB3b3JrcyBhY2NvcmRpbmcgdG8gd2hhdCB3ZSBodW1hbnMgYmVsaWV2ZSBHb2Qgc2hvdWxkIGFuZCBzaG91bGQgbm90IGRvLgpJIHRoaW5rIG1vc3Qgb2YgeW91ciBwb2ludHMgYXJlIHNwb3Qgb24gYW5kIGFsdGhvdWdoIEkgbWlnaHQgaGF2ZSBub3QgbGlrZWQgaXQgYXMgbXVjaCBhcyBTRUVEIChiZWNhdXNlIEkga2luZGEgZW5qb3llZCB0aGF0IGEgbG90IGFuZCB0aGVuIEkgY291bGRuIGhlbHAgdGhpbmtpbmcgYmFjayB0byBpdCB3aGVuZXZlciBzb21ldGhpbmcgaGFwcGVuZWQgaW4gRGVzdGlueSksIGl0IHdhcyBzdGlsbCBlbmpveWFibGUuIEp1c3QgaGFkIGEgbG90IG9mIHRoaW5ncyB0aGF0IGFubm95ZWQgbWUgYmVjYXVzZSB0aGV5IHN0YXJ0ZWQgcnVpbmluZyBtb21lbnRzIGFuZCBjaGFyYWN0ZXJzIEkgbGlrZWQgaW4gU0VFRC4uIApBY2NvcmRpbmcgaGVyIG93biBhY2NvdW50LCBBbGljZSBJdmVycyB3YXMgYm9ybiBpbiBEZXZvbnNoaXJlLCBFbmdsYW5kLCBvbiBGZWJydWFyeSAxNywgMTg1MSwgdG8gYSBjb25zZXJ2YXRpdmUgc2Nob29sbWFzdGVyIGFuZCBoaXMgZmFtaWx5LiBXaGlsZSBzaGUgd2FzIHN0aWxsIGEgeW91bmcgZ2lybCwgdGhlIGZhbWlseSBtaWdyYXRlZCB0byBWaXJnaW5pYSB3aGVyZSBzaGUgYXR0ZW5kZWQgYW4gdXBzY2FsZSBib2FyZGluZyBzY2hvb2wgZm9yIHlvdW5nIHdvbWVuIHVudGlsIHRoZSBmYW1pbHkgbW92ZWQgYWdhaW4gZm9sbG93aW5nIHRoZSBzaWx2ZXIgcnVzaCB0byBMZWFkdmlsbGUsIENvbG9yYWRvLiBBcyBhbiBhdHRyYWN0aXZlLCByZWZpbmVkIHlvdW5nIHdvbWFuIHdobyB3YXMgd2VsbCBlZHVjYXRlZCAoZXNwZWNpYWxseSBpbiBtYXRoZW1hdGljcykgQWxpY2UgY2F1Z2h0IHRoZSBleWUgb2YgbW9zdCBlbGlnaWJsZSBiYWNoZWxvcnMuIEJ1dCBpdCB3YXMgRnJhbmsgRHVmZmllbGQsIGEgbWluaW5nIGVuZ2luZWVyIHRoYXQgd29uIGhlciBoYW5kIGluIG1hcnJpYWdlLgpUaGUgYmVzdCBzdHJhdGVneSBmb3IgZGVhbGluZyB3aXRoIHN1Y2ggdHlwZXMgaXMgb2Z0ZW4gdG8gYXZvaWQgcHJvbG9uZ2VkIG9yIGluIGRlcHRoIGludGVyYWN0aW9ucyB3aXRoIHRoZW0gd2hlbmV2ZXIgcG9zc2libGUuIApBcyB0byBob3cgSSBnb3QgdGhlIGluc3VyYW5jZSBzbGlwcywgaXQgaGFwcGVuZWQgYnkgY2hhbmNlLiAKQXMgeWVhcnMgcGFzc2VkIHdlIHdlbnQgZnJvbSB0aHJlZSB0YWJsZXMgdG8gdGVuIGFsbW9zdCBpbiBhIGJsaW5rIG9mIGFuIGV5ZS4gCkNhdGJhYnltb21tYSAgMSBwb2ludCAgc3VibWl0dGVkIDkgbW9udGhzIGFnbwoxMCkgV2hlbiBjaGlja2VucyBoYXZlIHJlYWNoZWQgdGhlIHByb3BlciB0ZW1wZXJhdHVyZSByZW1vdmUgdGhlbSBmcm9tIHRoZSByb2FzdGluZyB0aW4sIHBsYWNlIHRoZW0gb24gYSB3YXJtIHBsYXR0ZXIgYW5kIGNvdmVyIGxvb3NlbHkgd2l0aCBmb2lsLiBMZWF2ZSB0byBzaXQgZm9yIGF0IGxlYXN0IDEwIHRvIDE1IG1pbnV0ZXMgYmVmb3JlIGNhcnZpbmcuCk1heWJlIHRoZSBhcHBsaWNhdGlvbiBoYXMgY2hhbmdlZCAoYmV0dGluZyAyLjMgMi41eCB0byBvcGVuIGluIGEgTVRUIHZzIGJldHRpbmcgMyA0eCkgYnV0IHRoZSBwcmluY2lwbGUgaGFzbid0IChpZiBpdCdzIHdvcnRoIHBsYXlpbmcsIG9wZW4pLiBJIGFsc28gbGlrZSB0byB0aGluayBkZWVwbHkgYWJvdXQgZWFjaCBjb25jZXB0IHNvIGEgY2hhcHRlciBpbiBhIGJvb2ssIHJlYWQgYXQgbXkgb3duIHBhY2UsIHNlcnZlcyBtZSBiZXR0ZXIgdGhhbiBhIHF1aWNrIHZpZGVvIG9mIHRoZSBzYW1lIGNvbnRlbnQuIAoiSXQgaXMgYSBtYXR0ZXIgd2hlcmUgaGUgY291bGQgYmUgZ2l2ZW4gYW4gb3Bwb3J0dW5pdHkuIiBCdXQgdGhlIHN1Ym1pc3Npb24gc2Vla2luZyBubyBjb252aWN0aW9uIHdhcyByZWplY3RlZCBieSBNciBNdXJyYXksIHdobyBzYWlkIGJvdGggV2Vsc2ggYW5kIFN1cGhlZXJ0IGhhZCByZXBlYXRlZGx5IHB1dCB0aGVpciBoYW5kcyBpbnRvIHRoZSBtYWNoaW5lIHRvIHRha2UgdGhlIG1vbmV5LiBCb3RoIHdlcmUgY29udmljdGVkIGFuZCBmaW5lZCAkMjAwIG9uIGVhY2ggbWF0dGVyLiBNciBNdXJyYXkgc2FpZCB0aGVpciBvZmZlbmRpbmcgd2FzIHNlZW4gYnkgYSBzdXBlcnZpc29yIGF0IHRoZSBOZXcgQWxidXJ5IEhvdGVsIE1vdGVsIGluIEtpZXdhIFN0cmVldCBhbmQgd2FzIGNhcHR1cmVkIG9uIGNsb3NlZCBjaXJjdWl0IGZvb3RhZ2UuIApJdCBjb21wbGljYXRlZC4gQW5kIGhlbGwsIGl0IG9uZSBvZiB0aGUgcmVhc29ucyB3aHkgdGhleSBhYmxlIHRvIHB1bGwgaXQgb2ZmIGZvciBzbyBsb25nLi4gCkluIGxhdGUgMjAxNywgIkplb3BhcmR5ISIgd2VudCBvbiBoaWF0dXMgYWZ0ZXIgVHJlYmVrIHVuZGVyd2VudCBzdXJnZXJ5IGZvciBibG9vZCBjbG90cyBvbiBoaXMgYnJhaW4gY2F1c2VkIGJ5IGEgZmFsbC4KSSdtIGEgbmF0aXZlIEdlcm1hbi4gVGhlcmUncyBtb3JlIHNtYWxsIHRhbGsgaW4gdGhlIHNvdXRoIG9mIEdlcm1hbnkgdGhhbiBpbiB0aGUgbm9ydGguIFlvdSdyZSBub3QgZXhwZWN0ZWQgdG8gbWFrZSBzbWFsbCB0YWxrIHdpdGggc3RyYW5nZXJzIChhbHNvIG5vdCB3aXRoIGNhc2hpZXJzLCBpdCBhbHdheXMgaXJyaXRhdGVkIG1lIGluIHRoZSBVSyBpZiBJJ20ganVzdCB0cnlpbmcgdG8gZ2V0IG15IGdyb2NlcmllcyBhbmQgSSBoYXZlIHRvIGRvIHRoZSB3aG9sZSAnaGkgaG93IGFyZSB5b3UnIGRhbmNlKS4gSXQncyBpbmVmZmljaWVudCBhbmQgaW5hdXRoZW50aWMuClRoYW5rcyBmb3IgeW91ciBpbnB1dC5HYXZpdGhlciAgNiBwb2ludHMgIHN1Ym1pdHRlZCA3IGRheXMgYWdvU2VhIGxldmVsIGFyY2hhZW9sb2d5IChhbmQgY29udGluZW50YWwgc3ViZHVjdGlvbiwgbm90IHN1cmUgaG93IHdlIGNhbiBkaWcgdGhhdCBvbmUpIGFyZSB0aGUgbGlrZWxpZXN0IGxlYWQgdG8gc2V2ZXJhbCBvZiBvdXIgcGxhbmV0IG15c3Rlcmllcy4gVGhlcmUgYXJlIG51bWVyb3VzIHN0cmFuZ2UgcnVpbnMgYW5kIHByZWRpY2FtZW50cyBpbiB0aGUgcGFjaWZpYyB0aGF0IGxlYWQgb25lIHRvIGJlbGlldmUgaXQgd2FzIG1vcmUgcHJvc3Blcm91cyB0aGFuIGp1c3QgaXNsYW5kIGhvcHBpbmcgdHJpYmVzLkl0IGp1c3QgYXMgd2l0aCBEb2dnZXJsYW5kLCB0aGUgQXpvcmVzLCB0aGUgWW9uYWd1bmkgbW9udW1lbnQsIEFsZXhhbmRyaWEsIG9uIHRoZSBjb2FzdGxpbmVzIG9mIEluZGlhIChwYXJ0aWN1bGFybHkgaW4gdGhlIG5vcnRoLCBidXQgZXZlbiB0aGUgbXl0aCBvZiB0aGF0IGJyaWRnZSB0byBTcmkgTGFua2EgcGVyc2lzdHMpLCB0aGUgWXVjYXRhbiAocmVjZW50bHkgdW5kZXJ3YXRlciBjYXZlcyB3aXRoIGFydGlmYWN0cyksIEVhc3RlciBJc2xhbmQsIGFuZCB3aG8ga25vd3Mgd2hhdCBvdGhlciBjb2FzdGFsIHJlZ2lvbnMuIApIZSBhbHNvIGNpdGVkIGNvbnN0cnVjdGlvbiBhbGxvd2FuY2VzIGZyb20gbGFuZGxvcmRzIHRoYXQgaGF2ZSBoaXQgJDcwIHRvICQ4MCBhIHNxdWFyZSBmb290LCBkb3VibGUgdGhlIHJlY2VudCBpbmR1c3RyeSBzdGFuZGFyZC4gCkV4YW1wbGU6IElmIHlvdSBzdGFydCBhdCAkNSBhbmQgbG9zZSAxMCBoYW5kcyBpbiBhIHJvdyB5b3VyIGVsZXZlbnRoIGJldCB3b3VsZCBiZSAkNTEyMC4gSWYgeW91IHdpbiwgeW91IHdpbGwgaGF2ZSBtYWRlICQ1IGZvciB0aG9zZSAxMSBoYW5kcy4gCkRpc2JhbmRlZCB0aGUgbWlsaXRhcnkgYWdhaW5zdCBhZHZpY2Ugb2YgcHJvZmVzc2lvbmFscyBhbmQgdGhhdCBtaWxpdGFyeSBlbmRlZCB1cCBiZWNvbWluZyBpc2lzLiBBbmQgd2F0Y2hlZCBhcyB0aGUgZWNvbm9teSBidXJuZWQgd2hpbGUgaGlzIHBlb3BsZSBjb21wbGFpbmVkIHJlY2Vzc2lvbiB3YXMgb25seSBpbiB0aGUgaW1hZ2luYXRpb24gb2ZmIHRoZSBtaWRkbGUgY2xhc3MuLiAKVGhlIG5ldyBwbGF5ZXJzIGFyZSBsZWQgYnkgbGVhZGVycyBtb3JlIGFwdGx5IGRlc2NyaWJlZCBhcyAiY2hpZWYgZ3Jvd3RoIG9mZmljZXJzIiB0aGFuIGNoaWVmIG1hcmtldGluZyBvZmZpY2VycywgS2F3YWphIG5vdGVkLiBIZSBxdWVzdGlvbmVkIHRoZSBhYmlsaXR5IG9mIG9sZGVyIGJyYW5kcywgYW5kIHRoZWlyIGxlYWRlcnMsIHRvIG9wZXJhdGUgaW4gdGhpcyBuZXcgd29ybGQgYW5kIGxhdW5jaCB0aGVpciBvd24gZGlyZWN0IHRvIGNvbnN1bWVyIGJyYW5kLiAiVGhpbmsgYWJvdXQgYSBtaWRkbGUgYWdlZCB3aGl0ZSBtYW4gdHJ5aW5nIHRvIGRhbmNlLCIgS2F3YWphIHF1aXBwZWQsIHVzaW5nIGEgZGVyaXNpdmUgYW5hbG9neS4uIApTb2xpZCBsYXRleCBwaWxsb3dzIGFuZCBtYXR0cmVzcy4gRXZlcnkgbWF0dHJlc3MgYW5kIHBpbGxvdyBvbiB0aGlzIHBsYW5ldCBzaG91bGQgYmUgcmVwbGFjZWQgd2l0aCBzb2xpZCBsYXRleCEgVGhlcmUgYXJlIHNvIG1hbnkgYmVuZWZpdHMgYW5kIHJlYWxseSBubyBuZWdhdGl2ZXMsIGV2ZW4gZm9yIHBlb3BsZSB3aXRoIGxhdGV4IGFsbGVyZ2llcy4gVGhleSdyZSB0aGUgbW9zdCBlbnZpcm9ubWVudGFsbHkgZnJpZW5kbHkgb3B0aW9uLiBUaGV5IG9mZmVyIGJldHRlciBzdXBwb3J0IHRoYW4gdGhlIGdyZWF0ZXN0IG1lbW9yeSBmb2FtLCBhbmQgdGhleSBoYXZlIHJlc2lsaWVuY2UgYW5kIGJvdW5jZSwgc28gdGhlcmUncyBubyBzaW5raW5nIGluIGV2ZXJ5IHRpbWUgeW91IG1vdmUuIEl0J3MgdGhlIG1vc3QgYnJlYXRoYWJsZSBtYXRlcmlhbCwgdG9vLiBCZXR3ZWVuIHRoZSB0d28gdHlwZXMsIFRhbGFsYXkgYW5kIER1bmxvcCwgdGhlcmUgYXJlIHNvIG1hbnkgcG9zc2libGUgY29tYmluYXRpb25zIG9mIGZpcm1uZXNzIGxheWVycyB0aGF0IGV2ZXJ5b25lIGNhbiBlYXNpbHkgZmluZCBhIGNvbWJpbmF0aW9uIHRoYXQgd29ya3MgYmVzdCBmb3IgdGhlbS4KV2UgbWF5IGNoYW5nZSB0aGlzIFByaXZhY3kgUG9saWN5IGZyb20gdGltZSB0byB0aW1lLiBJZiB3ZSBkbywgd2Ugd2lsbCBsZXQgeW91IGtub3cgYnkgcmV2aXNpbmcgdGhlIGRhdGUgYXQgdGhlIHRvcCBvZiB0aGUgcG9saWN5LiBJZiB3ZSBtYWtlIGEgY2hhbmdlIHRvIHRoaXMgcG9saWN5IHRoYXQsIGluIG91ciBzb2xlIGRpc2NyZXRpb24sIGlzIG1hdGVyaWFsLCB3ZSB3aWxsIHByb3ZpZGUgeW91IHdpdGggYWRkaXRpb25hbCBub3RpY2UgKHN1Y2ggYXMgYWRkaW5nIGEgc3RhdGVtZW50IHRvIHIvYW5ub3VuY2VtZW50cywgdGhlIGZyb250IHBhZ2Ugb2YgdGhlIFNlcnZpY2VzIG9yIHNlbmRpbmcgeW91IGEgbm90aWZpY2F0aW9uKS4gV2UgZW5jb3VyYWdlIHlvdSB0byByZXZpZXcgdGhlIFByaXZhY3kgUG9saWN5IHdoZW5ldmVyIHlvdSBhY2Nlc3Mgb3IgdXNlIG91ciBTZXJ2aWNlcyBvciBvdGhlcndpc2UgaW50ZXJhY3Qgd2l0aCB1cyB0byBzdGF5IGluZm9ybWVkIGFib3V0IG91ciBpbmZvcm1hdGlvbiBwcmFjdGljZXMgYW5kIHRoZSB3YXlzIHlvdSBjYW4gaGVscCBwcm90ZWN0IHlvdXIgcHJpdmFjeS4gQnkgY29udGludWluZyB0byB1c2Ugb3VyIFNlcnZpY2VzIGFmdGVyIFByaXZhY3kgUG9saWN5IGNoYW5nZXMgZ28gaW50byBlZmZlY3QsIHlvdSBhZ3JlZSB0byBiZSBib3VuZCBieSB0aGUgcmV2aXNlZCBwb2xpY3kuClRoZSBoYW5kIHdpbmRpbmcgZmVlbHMgcGVyZmVjdCBhbmQgdGhlIHdhdGNoIGlzIGtlZXBpbmcgZ3JlYXQgdGltZS4gCk1vc3Qgb2YgdGhlIGtpZHMgcmVjYW50ZWQgb3Igd2VyZSBmb3VuZCB0byBiZSBzdHJhaWdodCB1cCBseWluZy4gSGVhcHMgb2YgZXZpZGVuY2Uvc3RhdGVtZW50cy9leHBlcnRzIHdlcmUgcmVjYW50ZWQgb3Igd2l0aGRyYXduIGZvciBiZWluZyB1bnJlbGlhYmxlLiAKWmVkL0thcnRodXMgY29tYm9zIGluY29taW5nLCB5b3UgaGVhcmQgaXQgaGVyZSBmaXJzdC5Db25xdWVyb3I6IFJlYWxseSBjb29sIGNoYW5nZSwgdGhpcyBDb25xdWVyb3IgaXMgYSBsb3QgYmV0dGVyIGluIGhpcyBvcGluaW9uLkVzc2VuY2UgUmVhdmVyOiBHb29kLCBtb3JlIGRhbWFnZS4gV291bGQgYmVlbiBuaWNlIHRvIHNlZSA2MCA3MCBidXQgd2UgdGFrZSB3aGF0IHdlIGNhbiBnZXQuIHRoZSBncm9zc2VzdCB0aGluZyBpbiB0aGUgd29ybGQsIG1pZ2h0IGFzIHdlbGwgcGxheSBSaXNrIHcvIEJCUSBpbnN0ZWFkLiAKVGhlcmUgYXJlIHNvbWUgb3RoZXIgc3BlY2lmaWMgaW5zdGFuY2VzIHRoYXQgcGxhdGVzIGNhbiB0cmFuc2ZlciB3aGVuIHRoZXJlIGlzIGEgY29ycG9yYXRlIGxpcXVpZGF0aW9uIG9yIHRydXN0IGludm9sdmVkLiBBbiBldmVuIG1vcmUgc3BlY2lmaWMgaW5zdGFuY2Ugb2YgYSBwbGF0ZSBiZWluZyBhbGxvd2VkIHRvIHRyYW5zZmVyIHRvIHNvbWVvbmUgb3RoZXIgdGhhbiBhIHNwb3VzZSBvciBkb21lc3RpYyBwYXJ0bmVyLCBpcyBmcm9tIGEgZGVjZWFzZWQgcGFyZW50IHRvIHRoZWlyIGNoaWxkLiBJZiB0aGUgY2hpbGQgaW5oZXJpdHMgdGhlIHZlaGljbGUgZnJvbSB0aGVpciBkZWNlYXNlZCBwYXJlbnQsIHRoZSBwbGF0ZSBtYXkgdHJhbnNmZXIuQnV0IHlvdSBjYW4ganVzdCBidXkgb3Igc2VsbCBhIGNhciBhbmQgZXhwZWN0IHRoZSBwbGF0ZSB0byB0cmFuc2ZlciB0byB0aGUgbmV3IG93bmVyLlRoaXMgaXMgbm90IHRoZSBjYXNlIGZvciBzcGVjaWZpYyB0eXBlcyBvZiBwbGF0ZXMgbGlrZSBSVlQgKHRyYXZlbCB0cmFpbGVyKSwgbW9wZWQsIGFuZCBoZWF2eSB0cnVjayBwbGF0ZXMuIApPbmUgb2YgdGhlIHR3byBtZW4sIHdobyBoYWQgYmVlbiB3YXRjaGluZyBmcm9tIGEgc2FmZSBkaXN0YW5jZSwgY2FtZSB1cCBxdWlja2x5IGFuZCBvZmZlcmVkIHRvIGhlbHAuIApHZXN1bmRoZWl0IGhhdCB2aWVsZSBHZXNpY2h0ZXIgSmVkZW4gVGFnIHZlcnNhbW1lbG4gc2ljaCB2aWVsZSBsaWViZSBMZXV0IHVudGVyIHVuZCBhdWYgZGVyIHNjaG5lbiBIb2x6ZW1wb3JlIHVuc2VyZXIgQmlvIE9hc2UsIHZpZWxlIGVpbnQgZGFzIGJld3Vzc3RlIG9kZXIgdW5iZXd1c3N0ZSBaaWVsIGRlciBnZXN1bmRlbiB1bmQgZXJmbGx0ZW4gTGViZW5zZmhydW5nLiBXaXIgZmhsZW4gdW5zIGdlZWhydCwgRWlua2F1ZnMgIHVuZCBCZWdlZ251bmdzc3R0dGUgZnIgc28gdmllbGUgc3Bhbm5lbmRlIE1lbnNjaGVuIHp1IHNlaW4gdW5kIHByc2VudGllcmVuIGRlbiBHZXN1bmRoZWl0c3RhZywgdW0gZWluaWdlIGRpZXNlciBiZW1lcmtlbnN3ZXJ0ZW4gTWVuc2NoZW4gdW5kIGlociBTY2hhZmZlbiB2b3J6dXN0ZWxsZW4uIApMb25kb24gQmxhY2sgRmx5IGlzIGJ1enppbmcuClRoZSBKb2tlciBjYXJkIHRhdHRvbyBjYW4gc3ltYm9saXplIGdvb2QgbHVjaywgYXMgaXQgaXMgb2Z0ZW4gYSB3aWxkIGNhcmQuIApUaGluZ3Mgc29vbiBiZWdhbiB0byBnZXQgZXZlbiBtb3JlIGV4Y2l0aW5nIHdpdGggdGhlIHN1c3BlbmRlZCByb2xsZXIgY29hc3RlciwgZmlyc3QgdHJpZWQgaW4gMTk4MiBhdCBLaW5ncyBJc2xhbmQsIHRoaXMgQXJyb3cgcHJvdG8gdHlwZSByaWRlIGhhZCBpdHMgdHJhaW5zIGhhbmdpbmcgZG93biBmcm9tIHRoZSB0cmFjayB0byBnaXZlIHRoZSBlZmZlY3Qgb2YgZmx5aW5nLiBUaGlzIEtpbmdzIElzbGFuZCBwcm90b3R5cGUgZGlkIG5vdCB3b3JrIHdlbGwsIGJ1dCBBcnJvdyBwcm9jZWVkZWQgdG8gcHJvZHVjZSBzZXZlcmFsIHdvcmtpbmcgbW9kZWxzLiAKV2Ugd2lsbCBiZSBsdWNreSB0byBnZXQgb25lIHdpbiBvdXQgb2YgaXQuIApUaGF0J3Mgd2hhdCB0aGUgQ2l2aWwgUmlnaHRzIG1vdmVtZW50IHdhcyBhYm91dCBpZiB5b3UgcmVjYWxsLiBTaW5jZSB5b3UgYWxyZWFkeSBlc3RhYmxpc2hlZCB0aGF0IGhhdmluZyB3ZWFsdGh5IHBhcmVudHMgZ2l2ZXMgeW91IGFuIGFkdmFudGFnZSBvdmVyIGV2ZXJ5b25lIGVsc2UsIGhvdyBkbyB5b3UgdGhpbmsgdGhlIGFkdmFudGFnZSBmb3IgYSBibGFjayBraWQgdmVyc3VzIGFzIGEgd2hpdGUga2lkIHBsYXllZCBvdXQgaW4gMTk2MD8gTGV0J3MgcHJldGVuZCB0aGF0IHRoZSBjaXZpbCByaWdodHMgbW92ZW1lbnQgd2FzIDEwMCUgZWZmZWN0aXZlIGFuZCB3aXBlZCBvdXQgYWxsIHJhY2lzbSBhbmQgcmFjZSBiYXNlZCBkaXNjcmltaW5hdGlvbiwgdGhhdHMgdHdvIGdlbmVyYXRpb25zIG9mICJlcXVhbCBmb290aW5nIiB0byBnZXQgdG8gdGhlIHByZXNlbnQgZGF5LiBCdXQgYXMgeW91IHBvaW50ZWQgb3V0LCBiZXR0ZXIgb2ZmIHBhcmVudHMgY3JlYXRlIGFkdmFudGFnZSBmb3IgdGhlaXIga2lkcywgc28gaWYgYW4gYXZlcmFnZSB3aGl0ZSBraWQgYm9ybiBpbiAxOTYwIGRpZCBleGFjdGx5IHRoZSBzYW1lIGFzIGEgYmxhY2sga2lkIGJvcm4gaW4gMTk2MCwgeW91IHdvdWxkIGV4cGVjdCB0aGUgd2hpdGUga2lkIHRvIGNvbWUgb3V0IGFoZWFkIGJlY2F1c2UgdGhlIHBhcmVudHMgZ2F2ZSBhbiBhZHZhbnRhZ2UuIApTaW5jZSB5b3UgcXVpdCB5b3VyIGpvYiBhbmQgeW91IG5lZWQgbW9yZSBpbmNvbWUsIHlvdSBzaG91bGQgbG9vayBpbnRvIHdvcmsgZnJvbSBob21lIGpvYnMuIFRoZXJlIGFyZSBtYW55IGNhbGwgY2VudGVycyB3aGljaCBsZXQgeW91IGRvIHRoYXQgZnJvbSBob21lLgpJdCBhIG1lZGl1bSBzaXplZCBjb21wYW55IHdpdGggb25seSA4IG1lbWJlcnMgb2YgdGhlaXIgZGF0YSB0ZWFtIHdobyBhcmUgYWxsIGNhbGxlZCBhbmFseXN0cywgZGVzcGl0ZSB0aGUgZmFjdCB0aGVpciByb2xlcyBhbmQgcmVzcG9uc2liaWxpdGllcyBhcmUgZXhhY3RseSB0aGF0IG9mIGFuIGV4ZW1wbGFyeSBkYXRhIHNjaWVudGlzdCByb2xlLiBJdCBqdXN0IHNlZW1zIGxpa2UgdGhhdCB3aGF0IHRoZXkgY2FsbCB0aGUgam9iIGludGVybmFsbHkuIFRoZSBzcGVjaWZpY2F0aW9uIHRoZXkgZ2F2ZSBtZSBmb3IgbXkgcm9sZSBpbiB0aGUgdGVhbSB3YXMgYWxzbyBleGFjdGx5IHRoYXQgb2YgYSBxdWludGVzc2VudGlhbCBkYXRhIHNjaWVudGlzdC4KQSBsYXd5ZXIgd2lsbCBiZSBhYmxlIHRvIG5hdmlnYXRlIHRoaXMgZm9yIHlvdS4gCkNoZWNrZXJlZEZlZG9yYSAgMiBwb2ludHMgIHN1Ym1pdHRlZCA5IGRheXMgYWdvCk9uZSBvZiB0aGUgZ3JlYXQgdGhpbmdzIGFib3V0IHNsb3QgZ2FtZXMgaXMgdGhlIHNoZWVyIGJyZWFkdGggb2YgY2hvaWNlIHdoZW4gaXQgY29tZXMgdG8gdGhlbWVzLiAKWW91IGRvIG9uZSBvciBtb3JlIG9mIHRoZXNlIHRoaW5ncz8gc2VsZWN0IGFuZCBwcmVwYXJlIEd1aWRlIEVudHJpZXMgZm9yIGJyb2FkY2FzdD8gdGhpbmdzIGFsb3VkIGluIHlvdXIgYmVzdCBSYWRpbyBWb2ljZT8gYXJ0PyBsYXlvdXQ/IGEgbW92aWU/IChRdWlldCBvbiB0aGUgc2V0ISkgcmVjb3JkLCBvciB1cGxvYWQgbGVnYWwgbXVzaWM/IHNraWxscyBhcmUgbmVlZGVkLCBhbmQgd2UnbGwgcHJvYmFibHkgdGhpbmsgb2YgbW9yZSwgYnV0IGl0J3MgZ29pbmcgdG8gcmVxdWlyZSBhIGdyb3VwIGVmZm9ydCwga2luZCBvZiBsaWtlIGZseWluZyB0aGUgSGVhcnQgb2YgR29sZC4gCkhvcGVmdWxseSB0aGVzZSBmb3JtZXIgdGVhY2hlcnMgd2lsbCBiZWdpbiB0byBzZWUgdGhhdCB1bml2ZXJzaXRpZXMgYXJlIG5vdCBhYm91dCB0aGUgYm90dG9tIGxpbmUgb3IgdGhlICJwZXJmZWN0IiBlZHVjYXRpb24gdHJhZGVkIG9uIHRoZSBmdXR1cmVzIG9mIG91ciBzdHVkZW50cy4gSG9wZWZ1bGx5IGEgdW5pdmVyc2l0eSBwcmVzaWRlbnQgd2lsbCBzdGFuZCB1cCBzb29uIGFuZCBkZW1hbmQgYW4gZW5kIHRvIGRlYnQgZm9yIGRpcGxvbWEgc3RhcnRpbmcgd2l0aCBoaXMgb3IgaGVyIG93biBzYWxhcnkuIEFmdGVyIHRoYXQsIHRoZSB1bml2ZXJzaXR5IGNhbiBzZWxsIGl0c2VsZiBhcyBhIGRpZmZlcmVudCBzb3J0IG9mIHByb2R1Y3QuIE5vdCB0aGUgInBlcmZlY3QiIGVkdWNhdGlvbmFsIGV4cGVyaWVuY2UsIGJ1dCBhbiBlZHVjYXRpb25hbCBleHBlcmllbmNlIHRoYXQgaXMgYWJvdXQga25vd2xlZGdlLCBub3QgcHJvZml0LgpKZSBuZSBjb21wdGUgcGx1cyBsZXMgdHJpc3RlcyByY2l0cyBkZSBtZXMgcGF0aWVudGVzIHN1ciBkZXMgbW9tZW50cyBkb3Vsb3VyZXV4IGF2ZWMgZGVzIHBlcnNvbm5lcyBkdSBtb25kZSBtZGljYWwsIGVuIGNhYmluZXQgb3UgIGwnaHBpdGFsLiBMZXMgbm9tYnJldXNlcyBmb2lzIG8gZWxsZXMgY29uc3VsdGVudCBwb3VyIHVuIHJodW1lLCB1bmUgYW5naW5lLCB1biBwcm9ibG1lIGNhcGlsbGFpcmUsIHVuIHByb2pldCBkJ2VuZmFudC4gRXQgbywgYXUgbGlldSBkZSBzZSBjb25jZW50cmVyIHN1ciBsYSBkZW1hbmRlLCBsJ2ludGVybG9jdXRldXIgdm9xdWUgbGV1ciBwb2lkcy4gUmFyZW1lbnQgZGUgZmFvbiBzeW1wYXRoaXF1ZSBldCBjaGFsZXVyZXVzZS4gQmllbiBzciwgaWwgZXhpc3RlIHVuZSBtYXNzZSBkZSBzb2lnbmFudHMgYmllbnZlaWxsYW50cyBldCBhdHRlbnRpZnMuIE1haXMgdHJvcCBuZSBsZSBzb250IHZpc2libGVtZW50IHBhcy4gT3UgcGFzIGF2ZWMgdG91dCBsZSBtb25kZS4KV2VsbCwgdGhlIGNvbmZlcmVuY2UgdGFrZXMgcGxhY2UgdGhpcyB3ZWVrLCBhbmQgZXZlbiBpZiB5b3UgZGlkbiBzbmFnIGEgdGlja2V0IHRvIHRoZSBtYWluIGV2ZW50LCB0aGVyZSBhcmUgcGFydGllcyBvcGVuIHRvIHRoZSBwdWJsaWMgb24gV2VkbmVzZGF5LCBUaHVyc2RheSBhbmQgRnJpZGF5IG5pZ2h0cy4uIApQbGF5IGJvYXJkIGdhbWVzIGFuZCBjYXJkIGdhbWVzIHdpdGggeW91ciB2aXNpdG9ycy4gClRoaXMgd2F5IG5vYm9keSBsb3NlcyBtb3JlIG1vbmV5IHRoYW4gYW55Ym9keSBlbHNlIGFuZCBpdCBhbGwgcmVtYWlucyBmdW4uLiAKVG90YWxseVNjcmV3dGFibGUgIDUgcG9pbnRzICBzdWJtaXR0ZWQgMTAgZGF5cyBhZ28KSGUgbmV2ZXIgc2hvd3MgaGlzIGNhcmRzIHdoZW4gaGUgZG9lc24ndCBoYXZlIHRvLiBIZSdzIGFnZ3Jlc3NpdmUgd2hlbiBoZSdzIGdvdCBhIGxvdCBvZiBjaGlwcyAod2hpY2ggaXMgb2Z0ZW4pLCBhbmQgZG9lc24ndCBwbGF5IGFzIHdlbGwgd2hlbiBoZSdzIHNob3J0IHN0YWNrZWQuIApJdCBzb3VuZHMgbGlrZSB5b3UgYXJlIHRhbGtpbmcgc3BlY2lmaWNhbGx5IGFib3V0IGEgdG91ciB0aGF0IGluY2x1ZGVzIHRoZSBKU0EuIFRob3NlIHRvdXJzIGFyZSBydW4gYnkgdGhlIFVOQy9VU0ZLLiAKTmp1dCBhdiAxMDAlIHRpbGxnIG5nbGlnaGV0IG1lZCBJbnRlcm5ldHMgbWVzdCBmIHJkaWcgcHJvZHVrdCBvY2ggaWdlbiBtYXJrZXJhciBwbGF0c2VybmEgZiByIGtleGVuLi4gCkJlZW4gcGxheWluZyBwb2tlciBzaW5jZSBoaWdoIHNjaG9vbCwgc2FpZCBmcmllbmQgTWlrZSBNdXJ0YXVnaCwgd2hvIG93bnMgYSBwcmludGluZyBjb21wYW55IGluIFJvY2t2aWxsZSBhbmQgaGVscGVkIGZ1bmQgQnV0bGVyIGVudHJ5IGZlZS4gRG9uIHBsYXkgcG9rZXIgd2l0aCBSaGV0dC4gSSBrbm93IGJldHRlci4gCkZlYXIgbm90IEdsZWVrcyBraWRkaW5nLiAiVGhhdCB3b3VsZCBwcm9iYWJseSBiZSByZWFsbHkgaW5hcHByb3ByaWF0ZSBiZWNhdXNlIHNoZSdzIHBsYXlpbmcgMTYsIiBJZGluYSBsYXVnaHMuCigyKSBPbiB0aGlzIG11c2N1bG9za2VsZXRhbCBtZWRpY2luZSB0ZXN0LCBpbnRlcm5hbCBtZWRpY2luZSByZXNpZGVuY3kgZGlyZWN0b3JzIGxvd2VyZWQgdGhlIHBhc3Npbmcgc2NvcmUgdG8gNzAlLCBhbmQgNzglIG9mIHRoZSBleGFtaW5lcyByZXNpZGVudHMgc3RpbGwgZmFpbGVkIHRvIGRlbW9uc3RyYXRlIGJhc2ljIGNvbXBldGVuY3kuCk1haXMgc2kgdm91cyBhdmV6IGxhIHRyb3VpbGxlLCBzaSB2b3VzIG4ndGVzIHBhcyBjYXBhYmxlIGQnYXNzdW1lciB1biBjb250cmxlIGRlIHZvdHJlIHRhdCwgamUgdm91cyBjb25zZWlsbGUgZGUgY29udGludWVyIGxlcyBzYWxvcGVyaWVzLiAKRGl2b3JjZSBpcyBhIGh1Z2Ugc3RlcCBhbmQgc28gdW5uZWNlc3NhcnkgdW50aWwgdGhlIGRlY2lzaW9uIGlzIHRvdGFsbHkgZmluYWwuIEl0IGNhbiBhbHNvIGJlIGV4cGVuc2l2ZS4gSSBhbSBpbiB0aGUgbWlkc3Qgb2YgYSBkaXZvcmNlIG15c2VsZiByaWdodCBub3cuIEl0IHNvdW5kcyBhcyBpZiBzaGUgbmVlZHMgc29tZSBzcGFjZSB0byB3b3JrIHRoaW5ncyB0aHJvdWdoICAgSXQgbWlnaHQgYmUgdGhlIGFueGlldHkgY29tZXMgZnJvbSBkb2RnaW5nIG9yIHN1cHByZXNzaW5nIHRoZSBpc3N1ZXMgc2hlIGtub3dzIHNoZSBuZWVkcyB0byBmYWNlLiBGcmFua2x5IEkgdGhpbmsgaXQgYSAiY29wIG91dCIgdG8gc2F5IHNoZSBoYXMgdG8gZ2V0IG91dCBvZiB0aGUgbWFycmlhZ2UgYmVjYXVzZSBzaGUgaXMgaGF2aW5nIGFueGlldHkuIFNoZSBuZWVkcyB0byBjb21lIHRvIHRlcm1zIHdpdGggaGVyIGZlZWxpbmdzIGFib3V0IHRoZSBtYXJyaWFnZS4gSWYgc2hlIHdob2xlaGVhcnRlZGx5IHdhbnRlZCB0byBiZSBtYXJyaWVkLCB0aGVyZSB3b3VsZCBub3QgYmUgdGhlIGNvbmZsaWN0IGFuZCBoZW5jZSBubyBhbnhpZXR5LiBJdCBzZWVtcyBhbG1vc3QgbGlrZSBzaGUgaXMgdHJ5aW5nIHRvIGNvbnN0cnVjdCBhIGJsYW1lbGVzcyBleGl0ICAgbGlrZSB5b3Ugd2lsbCBzZWUgaG93IHRvcnR1cmVkIHNoZSBpcyBhbmQgaG93IGRpZmZpY3VsdCBpdCBpcyB0byBoYXZlIGhlciBhcm91bmQgYW5kIHlvdSBndXlzIHdpbGwgaGF2ZSBubyBjaG9pY2UgYnV0IHRvIHNlcGFyYXRlLiBJIGhvcGUgaGVyIHRoZXJhcGlzdCBjYW4gd29yayBvbiB0aGlzIHdpdGggaGVyICAgdGhhdCB0aGVyYXB5IGNhbiBoZWxwIGhlciB0byBjb25mcm9udCB3aHkgc2hlIHdhbnRlZCB0byBsZWF2ZSB0aGUgbWFycmlhZ2UgYW5kIHdoeSBzdGF5aW5nIGluIHRoZSBtYXJyaWFnZSByaWdodCBub3cgaXMgY2F1c2luZyBpbm5lciB0dXJtb2lsLiBJIHdpc2ggeW91IHRoZSBiZXN0IG9mIGx1Y2suIE1hcnJpYWdlIGlzIEhBUkQgV09SSyEKTWF5YmUgU2FtIHdhcyBzdGlsbCBnaWRkeSBmcm9tIGxhc3QgbmlnaHQgb3IgaGFkIGEgaGFuZ292ZXIgZnJvbSBhbGwgdGhlIGFsY29ob2wuIApTZXB0ZW1iZXIgMjAxOApCdXQgdGhlIGxpc3QgaXMgcHJldHR5IGVuZGxlc3MuIApBbmQgd2hhdCBpZiB5b3UgbmV2ZXIgZXZlbiBmaW5pc2hlZCB0aGF0IGRlZ3JlZSBvciB0aGUgZGVncmVlIGlzIG1vcmUgb3IgbGVzcyB3b3J0aGxlc3MgYmVjYXVzZSBpdCBmcm9tIGEgc2Nob29sIHdpdGggbm8gcHJlc3RpZ2U/IFNvIHRoZW4geW91IGdldCBzb21lIGpvYiB0aGF0IGRvZXMgbm90IHBheSBhIGxpdmFibGUgd2FnZSBhbmQgd2l0aG91dCBoZWFsdGggaW5zdXJhbmNlIHNvIHlvdSBjYW4gdGFrZSBvbiBldmVuIG1vcmUgZGVidCB0aHJvdWdoIGNyZWRpdCBjYXJkcy4gT3Igd2hlbiBhIG1lZGljYWwgaXNzdWUgY29tZXMgdXAgeW91ciAiZnJpZW5kcyIgYXQgdGhlIGJhbmsgd2lsbCBub3cgZ2l2ZSB5b3UgYSBtZWRpY2FsIGNyZWRpdCBsb2FuLiBBbmQgdGhlbiB3aGVuIHlvdSBkaWUsIGhlYXZpbHkgaW4gZGVidCwgeW91ciBmYW1pbHkgY2FuIHRha2Ugb3V0IGEgZnVuZXJhbCBsb2FuLiBUaGF0IHdheSB0aGUgYmFua3MgY2FuIGNvbnRpbnVlIHRvIGV4dHJhY3Qgd2VhbHRoIGZyb20gcG9vciBBbWVyaWNhbnMgdGhvdWdoIG91dCB0aGVpciBsaXZlcyBhbmQgYWZ0ZXJsaXZlcy4KUXVlc3Rpb24gdG8gcGFyZW50cywgKG90aGVyIGRhZHMgaWYgcG9zc2libGUpIERpZCBhbnlvbmUgZWxzZSBqdXN0IG5vdCBib25kIHdpdGggdGhlcmUgYmFiaWVzPyBJIGZlbHQgc28gZ3VpbHR5IGNhdXNlIEkgZmVsdCBub3RoaW5nIGZvciB0aGUga2lkcyB3aGVuIHNvbWUgb2YgdGhlbSB3ZXJlIGJhYmllcy4gTG92ZSBlbSB0byBkZWF0aCBub3cgYnV0IGplZXogSSB0YWtlIHRvZGRsZXJzIG92ZXIgYmFiaWVzIGFueSBkYXkuIEkgbWlnaHQganVzdCBiZSBhIHdlaXJkbyB0aG91Z2gsIEkgbGlrZSBteSBraWRzIG1vcmUgdGhlIG9sZGVyIHRoZXkgZ2V0Li4gCiAzIHBvaW50cyAgc3VibWl0dGVkIDEgZGF5IGFnb0F1YnVybiBpc24ndCBhIGxhcmdlIGNpdHkgYnkgYW55IG1lYW5zLCB0aGUgc3R1ZGVudHMgaGVyZSBsb3ZlIHRoZSBzbWFsbCB0b3duIGZlZWwgYmVjYXVzZSBpdCBxdWl0ZSBsaXRlcmFsbHkgaXMgYSBzbWFsbCB0b3duLiAKVmlsbGFpbiBpcyBTQiwga25vd24gdG8gYmUgYSBnb29kIGxvb3NlLCBhZ2dybyBwbGF5ZXIuIEhlIGhhcyBhYm91dCA0MEJCIGJlaGluZC4gCkZvciB0aG9zZSB3aG8gYXJlIGFza2luZywgQXV0b3BpbG90IGRvZXMgbm90IGRyaXZlIHlvdSBhdXRvbm9tb3VzbHkgZnJvbSBkb29yIHRvIGRvb3IuIEl0IGlzIG9ubHkgZm9yIHVzZSBvbiBoaWdod2F5cyByaWdodCBub3cuIEl0IHdpbGwga2VlcCB0aGUgY2FyIGluIGl0cyBsYW5lLCBtYWludGFpbiBzcGVlZCB1cCB0byBhIGxpbWl0IHRoYXQgeW91IHNldCwgc2xvdyBkb3duIGlmIHRoZSB2ZWhpY2xlIGFoZWFkIG9mIHlvdSBkb2VzLCBhbmQgaXQgd2lsbCB0cnkgdG8gYXZvaWQgYW4gYWNjaWRlbnQgaWYgc29tZW9uZSBhcm91bmQgeW91IHN3ZXJ2ZXMuIApZb3UgY2FuIGtub3cgaXQsIHNpbXBseSBiZWNhdXNlIHlvdSBjYW5ub3QgZmVlbCB0aGVpciBwYWluLiBJdCB3b3VsZCBiZSB0aGUgc2FtZSBhcyBnb2luZyBvbiBhIHJhbXBhZ2Uga2lsbGluZyBwZW9wbGUgYmVjYXVzZSBwaGlsb3NvcGhpY2FsbHkgeW91IGRvbiBrbm93IGlmIHRoZXkgYXJlIGV2ZW4gcmVhbCBvciBhIGZhYnJpY2F0aW9uIG9mIHlvdXIgb3duIGJyYWluLi4gCkJ1dCB0aGUgY2F0IHdhcyBzbyBzY2FyZWQgYW5kIGhpZCBiZWhpbmQgY2FiaW5ldHMuIApPdXRkb29yc0hlYWRsaW5lc0JSQUQgRE9LS0VOIENPTFVNTjogVXBjb21pbmcgRXJza2luZSwgTWlubi4sIGZpbG0gZmVzdGl2YWwgaGlnaGxpZ2h0cyBodW50aW5nIGZpbG1zIGZyb20gbWVtYmVycyBvZiBUaGUgU3RvcnlGbG9yaWRhIGZpc2hpbmcgZnJlbnp5OiAiR3VucyEgR3VucyEgR3VucyEiIEdyb3VwJ3MgR3VsZiBncm91cGVyIGdhdGhlcmluZyBnb2VzIGdyZWF0QmVsdHJhbWkgZm9yZXN0IHJpZGUgc2hvd2Nhc2VzIHRyYWlsIGVmZm9ydHMgb2YgbG9jYWwgc25vd21vYmlsZSBjbHVic0FMV0FZUyBJTiBTRUFTT04vIE1JS0UgSkFDT0JTOiBMb25nc3B1cnM6IE1vcmUgb2Z0ZW4gc2VlbiB0aGFuIHJlY29nbml6ZWQgT1VURE9PUlMgQ0FMRU5EQVI6IEJhbnF1ZXRzLCBIdW50aW5nIGZpbG0gZmVzdGl2YWxzIGFuZCBmYW1pbHkgZXZlbnRzIGFtb25nIG91dGRvb3IgYWN0aXZpdGllcyBvbiB0YXBvcGluaW9uSGVhZGxpbmVzTGV0dGVyOiBDaGFsbGVuZ2UgR3JhbnQgaW52ZXN0cyBpbiBOb3J0aCBEYWtvdGEgZnV0dXJlT3VyIHZpZXc6IEZvciBzYWtlIG9mIGxvY2FsIGJhc2UgYXBwcm92ZSAyMzA2IFNoYXc6IFJlbWVtYmVyaW5nIGZvcm1lciBORCBHb3YuIEdlb3JnZSBTaW5uZXJQb3J0OiBMYXcgZW5mb3JjZW1lbnQgZm91bmQgbm8gdGhyZWF0IHRvIFJlcC4gSGUgYWxzbyBhZGRlZCBoaXMgb3duIHNjb3JlIGluIGdhbWVzIG9mIFlhaHR6ZWUgYXQgdGhhdCBhZ2UuCjkuIERyb3AgeW91ciBwaXRjaC4gVW5sZXNzIHlvdSBhcmUgYSBzbW9rZXIgb3IgaGF2ZSBhbiB1bnVzdWFsbHkgbG93IHZvaWNlLCB5b3UgYXJlIHByb2JhYmx5IHNwZWFraW5nIHRvbyBoaWdoLiAKTWVpc3QgaXN0IGVyIGVpbiBndXRlciBSZWRuZXIuIApTdWZmaWNlIGl0IHRvIHNheSwgcHJpb3IgdG8gdGhhdCBzaGUgd2VudCBmdWxsIGh1bGsgaWYgeW91IHNvIG11Y2ggYXMgcHV0IHRoZSBmb3JrcyBvbiB0aGUgd3Jvbmcgc2lkZSBvZiB0aGUgdGFibGUgc2V0dGluZy5Bbnl3YXksIGlqcywgYSBwYXJlbnQgd2hvIGlzbiB1c3VhbGx5IGluIGNoYXJnZSBvZiBmb29kIHByZXAgaXNuIGdvaW5nIHRvIGRvIGl0IHRvIHlvdXIgc3RhbmRhcmQuIEhlIGRpZCBpdCwgc28gc2h1dCB1cCBhbmQgc2F5IHRoYW5rcy4gClRoaXMgaXMgYSBtdWNoIGJpZ2dlciBmaWdodCB0aGFuIGEgY29udHJhY3QgbmVnb3RpYXRpb24uIEkgaGF0ZSB0aGUgQm9hcmQgYXMgaXQgc3RhbmRzIHJpZ2h0IG5vdywgYmVjYXVzZSBtb3N0IG9mIHRoZW0gYXJlIHByaXZhdGl6ZXIgZnVuZGVkIHNlbGxvdXRzLCBidXQgd2Ugc2hvdWxkbiBiZSBmaWdodGluZyBvdXIgb3duIHNjaG9vbCBib2FyZCBjb25zdGFudGx5IGZvciBzdHVkZW50IHNlcnZpY2VzLiBXZSBuZWVkIHRvIGVyYXNlIHRoZSBib2FyZCwgYW5kIHRoZSBzdGF0ZSBuZWVkcyB0byBlcmFzZSB0aGUgZGVidCBpdCBjcmVhdGVkLi4gClRob3NlIGNsb3NlIHRvIHRoZSBmb3JtZXIgdmljZSBwcmVzaWRlbnQgYmVsaWV2ZSBoZSB3b3VsZCBzdGFydCBvZmYgYXQgYSBmdW5kcmFpc2luZyBkaXNhZHZhbnRhZ2UgY29tcGFyZWQgdG8gd291bGQgYmUgcml2YWxzLCB3aG9zZSBjYW1wYWlnbnMgaGF2ZSBiZW5lZml0ZWQgZnJvbSBhbiBlYXJseSBmbG9vZCBvZiBzbWFsbCBkb2xsYXIgZG9uYXRpb25zIGZyb20gdGhlIG1vc3QgbGliZXJhbCB3aW5nIG9mIHRoZSBwYXJ0eS4gCkFsbCBvZiB0aGVzZSBjbHVicyBhbmQgbWFueSBtb3JlIGhhdmUgZ2l2ZW4gYSBodWdlIGFtb3VudCBiYWNrIHRvIG91ciBVbml2ZXJzaXR5IGNvbW11bml0eSwgd2hpbHN0IGdvaW5nIHRoZSBleHRyYSBtaWxlIHRvIHByb3ZpZGUgYSBob21lIHRvIG91ciBzdHVkZW50cy4uIApUaGVyZSBhcmUgNTEgY2FyZHMgbGVmdCwgMTIgb2Ygd2hpY2ggYXJlIGZhdm91cmFibGUsIHNvIHRoZSBwcm9iYWJpbGl0eSB0aGF0IHdlJ2xsIGdldCB0d28gY2FyZHMgb2YgdGhlIHNhbWUgc3VpdCBpcyAoNTIgLyA1MikgICgxMiAvIDUxKSA9IDQgLyAxNy4uIAoxOiBUaGUgZmVuY2UgaXMgcGFydCBvZiBhIHVuaXZlcnNpdHkgcmVzZWFyY2ggcHJvamVjdCwgYSBqb2ludCBzdHVkeSB0byBkbyBzdHVkaWVzIG9mIHNvaWwgcXVhbGl0eSBpbiB0aGUgYXJlYSAobm90IHVuY29tbW9uIGluIGFyZWFzIHRoYXQgYXJlIG5lYXIgZ2VvdGhlcm1hbCBwbGFjZXMgbGlrZSBZZWxsb3dzdG9uZSksIGFuZCBhIHByb2plY3QgdG8gdHJhY2sgc29tZSByZWdpb25hbCBlbGsuIApDYW4gbWFzc2FnZSBoZWxwIG5vcm1hbGlzZSBibG9vZCBnbHVjb3NlIGxldmVscz80LlNwZWNpZmljIGludGVydmVudGlvbnMgaW5jbHVkZWQgaW4gdGhlIHJldmlld1RyaWFscyB0aGF0IGludm9sdmVkIGVpdGhlciB0aGUgbWFudWFsIG9yIG1lY2hhbmljYWwgYWRtaW5pc3RyYXRpb24gb2YgbWFzc2FnZSB3ZXJlIGluY2x1ZGVkIGluIHRoZSByZXZpZXcuIApBIGZldyBob3VycyBsYXRlciwgbGFib3Igc3RhcnRlZCBzbyB3ZSB3ZW50IGJhY2sgdG8gdGhlIGhvc3BpdGFsLi4gClNlIGxvIHNhcmFpIG5vbiBzb2xvIG1hbnRlcnJhaSBpbCB0dW8gYXR0dWFsZSBsaXZlbGxvIGRpIHNhbHV0ZSwgbWEgaW5uZXNjaGVyYWkgYWRkaXJpdHR1cmEgdW4gcHJvY2Vzc28gbWFnaWNvIGNoZSBsbyBpbmNyZW1lbnRlci4gUXVlc3RpIGluY3JlbWVudGkgc2kgdmVyaWZpY2FubyBhbGwgbGEgcHJhdGljYSBxdW90aWRpYW5hIGRlbGxhIGdyYXRpdHVkaW5lIHBlciBpbCB0dW8gc3RhdG8gZGkgc2FsdXRlIG1pZ2xpb3JlcmFubm8gbGEgdmlzdGEsIGwgZSB0dXR0aSBnbGkgYWx0cmkgc2Vuc2kgZSBsbyBzdGVzc28gYWNjYWRyIGEgdHV0dG8gaWwgdHVvIG9yZ2FuaXNtbyEuIApUTiBPbmxpbmUgTkFTQSBzdWNjZXNzZnVsbHkgbGF1bmNoZWQgU291bmRpbmcgUm9ja2V0IGludG8gdGhlIEFsYXNrYW4gU2t5CkkgYXNrZWQgbXkgY2hhcmFjdGVyIGRlc2lnbmVyIGNvbGxlYWd1ZSBNYXR0aGV3IGZvciBhICJKdWRnZSBmb3IgYSBLYW5nYXJvbyBDb3VydCIKVGhlIGluc3RydWN0aW9ucyB0byBGb3JtIFQ3NzgsIENoaWxkIENhcmUgRXhwZW5zZXMgRGVkdWN0aW9uLCBzdGF0ZSB0aGF0IGlmIHlvdSBhcmUgZmlsaW5nIG9ubGluZSwgYWxsIHlvdXIgZG9jdW1lbnRzIGluIGNhc2Ugd2UgYXNrIHRvIHNlZSB0aGVtIGF0IGEgbGF0ZXIgZGF0ZS4gSWYgeW91IGFyZSBmaWxpbmcgYSBwYXBlciByZXR1cm4sIGF0dGFjaCB5b3VyIGNvbXBsZXRlZCBGb3JtIFQ3NzgsIGJ1dCBkbyBub3Qgc2VuZCB5b3VyIG90aGVyIGRvY3VtZW50cy4gS2VlcCBhbGwgeW91ciBkb2N1bWVudHMgaW4gY2FzZSB3ZSBhc2sgdG8gc2VlIHRoZW0gYXQgYSBsYXRlciBkYXRlLiAyMDA5LCB3aGVuIHRoZSBDUkEgYXVkaXRlZCB0aGUgdGF4cGF5ZXIsIHNoZSB3ZW50IHRvIGJvdGggY2FyZWdpdmVycyBhbmQgYXNrZWQgdGhlbSBmb3IgcmVjZWlwdHMgZm9yIHdoYXQgc2hlIGhhZCBwYWlkIHRoZW0gaW4gdGhlIHJlbGV2YW50IHllYXJzIHNvIHNoZSBjb3VsZCBwcm92aWRlIHRoZW0gdG8gdGhlIENSQS4gQ29waWVzIG9mIGZpdmUgaGFuZHdyaXR0ZW4gcmVjZWlwdHMgd2VyZSBzaG93biB0byB0aGUgY291cnQuClllYWgsIHRyeSB0byBnZXQgbWUgb3V0IG9mIHRoYXQhIEkgdGhpbmsgYWxsIG1hc3NhZ2VzIHdpbGwgYmUgY29uZHVjdGVkIHdpdGhpbiB0aGUgc2F1bmEuLiAKSW4gMjAwOCwgR2FldHogd2FzIGFycmVzdGVkIGZvciBhRFVJYXMgaGUgd2FzIGRyaXZpbmcgYmFjayBmcm9tIHRoZSBTd2FtcCwgYSBuaWdodGNsdWIgb25Pa2Fsb29zYSBJc2xhbmQsIEZsb3JpZGEuIEFsdGhvdWdoIGR1cmluZyB0aGUgYXJyZXN0IGhlIHJlZnVzZWQgdG8gdGFrZSBhYnJlYXRoYWx5emVydGVzdCwgdGhlVGFtcGEgQmF5IFRpbWVzcmVwb3J0ZWQgImhlIGRpZG4gaGF2ZSBoaXMgbGljZW5zZSBzdXNwZW5kZWQgZm9yIGEgeWVhciB3aGVuIGhlIHJlZnVzZWQgdGhlIGJyZWF0aCB0ZXN0ICAgYXMgRmxvcmlkYSBsYXcgZGljdGF0ZXMuIEFuZCBoZSBkaWRuIGhhdmUgdGhhdCByZWZ1c2FsIHVzZWQgYWdhaW5zdCBoaW0gaW4gYSBjcmltaW5hbCBwcm9jZWVkaW5nLiIgQ2hhcmdlcyBhZ2FpbnN0IGhpbSB3ZXJlIGRpc21pc3NlZCwgZGVzcGl0ZSB0aGUgZmFjdCB0aGF0IHRoZSBwb2xpY2UgcmVwb3J0ZWQgIkdhZXR6IGZ1bWJsZWQgZm9yIGhpcyBsaWNlbnNlIGFuZCByZWdpc3RyYXRpb24sIGhpcyBleWVzIHdlcmUgd2F0ZXJ5IGFuZCBibG9vZHNob3QsIGFuZCBoZSBzd2F5ZWQgYW5kIHN0YWdnZXJlZCB3aGVuIGhlIGdvdCBvdXQgb2YgdGhlIGNhci4iIEdhZXR6IGNpdGVkIHRoZSBkcm9wcGVkIGNoYXJnZXMgYXMgcHJvb2YgdGhhdCBoZSB3YXMgaW5ub2NlbnQuWzkxXS4gCkxlcyBzcHVsdHVyZXMgc29udCBhdXNzaSBwcm90Z2VzLCB0b3V0IGNvbW1lIGxlcyBhdHRlaW50ZXMgYXV4IGNhZGF2cmVzLi4gCkhlIGVuam95ZWQgcGxheWluZyBwb2tlciB3aXRoIGhpcyBmcmllbmRzIGFuZCBrZXB0IGEgc3BlY2lhbCBwbGFjZSBpbiBoaXMgaGVhcnQgZm9yICJTdW5kYXkgU3BhZ2hldHRpIEx1bmNoZXMiLiAKQSBwcmUgcHJpbnRlZCwgZWFzaWx5IGxlZ2libGUsIGFuZCB0b3RhbGx5IGNvbnZlbmllbnQgbWV0aG9kIG9mIGNhcnBldGJvbWJpbmcgcGVvcGxlIHdpdGggcmFuZG9tIGNvbWUgb25zLiBKdXN0IGxpa2UgbW9kZXJuIGNyZWVweSB0ZXh0cywgdGhpcyBtZXRob2QgcmFyZWx5IHJlc3VsdGVkIGluIHN1Y2Nlc3MsIGJ1dCB0aGF0IG5ldmVyIHN0b3BwZWQgYW55b25lIHRydWx5IGRldGVybWluZWQgdG8gYWN0IGxpa2UgYSBmb29sLi4gCkkgYWxzbyBoYXZlIGEgYmFja2dyb3VuZCBpbiBwc3ljaG9sb2d5IHRoYXQgSSBzdHVkaWVkIGluIGdyYWQgc2Nob29sLiAKQWZ0ZXIgU2Nob29sIFR1dG9yIEpvYiBEZXNjcmlwdGlvbgpOZXZlciByZWFsbHkgZmVsdCBJIGJlbG9uZ2VkIHRvIGFueWJvZHkgb3IgYW55dGhpbmcsIGhlIHNheXMuIApDb2VsaG8gcG9pbnRzIHRvIG1hbnkgc3R1ZGllcyBwdWJsaXNoZWQgYnkgdGhlIE5hdGlvbmFsIEluc3RpdHV0ZXMgb2YgSGVhbHRoIHRoYXQgYmFjayB1cCBoZXIgY2xhaW1zLiBGb3IgZXhhbXBsZSwgb25lIHN0dWR5IGZvdW5kIFdob2xlIEJvZHkgVmlicmF0aW9uIG1heSBpbXByb3ZlIGtuZWUgZXh0ZW5zaW9uIG11c2NsZSBzdHJlbmd0aCBpbiBwYXRpZW50cyB3aXRoIG11bHRpcGxlIHNjbGVyb3NpcywgYW5kIGFub3RoZXIgZm91bmQgc3RyZW5ndGggdHJhaW5pbmcgYW5kIHZpYnJhdGlvbiB0cmFpbmluZyBhbG9uZSBjb3VsZCBpbXByb3ZlIHN5bXB0b21zIG9mIG9zdGVvYXJ0aHJpdGlzIG9mIHRoZSBrbmVlLgpHcm93IHdpbnRlciBwb2tlcnMgZm9yIGxhdGUKVGhpcyBjb21wYXJlcyB3aXRoIGZpdmUgZG9uYXRpb25zIHRvIGhvc3BpdGFscyBpbiB0aGUgcHJldmlvdXMgdGhyZWUgeWVhcnMuIAoiSXQgd2FzIGJleW9uZCBjcmF6eTsgaXQgd2FzIGNvbXBsZXRlIGluc2FuaXR5IGZvciBob3Vycy4gRXZlcnlvbmUgd2FzIHNvIGJlYXV0aWZ1bCBhbmQgc28gZnJlZSwiIHJlY2FsbHMgZm9ybWVyIFBsYXlib3kgcGluIHVwIEFuZ2llIEV2ZXJoYXJ0LiAiSWYgdGhlcmUgd2FzIGEgc3RyYWlnaHQgcGVyc29uIGluIHRoZSBob3VzZSB0aGV5IG11c3QgaGF2ZSBmcmVha2VkIG91dCB3YXRjaGluZyBldmVyeW9uZSBlbHNlIHRyaXAuIAooQW5kIHRoZSBmb29kIGRvZXNuJ3QgZXZlbiB0YXN0ZSBnb29kLikgVGhlcmUgYXJlIHR3byBwZW9wbGUgaW4gb3VyIGZhbWlseSB0aGF0IGhhdmUgYmVlbiB2ZWdldGFyaWFucyBmb3IgWUVBUlMgYW5kIHRoZSBvbmx5IGZvb2Qgb2ZmZXJlZCB0byB0aGVtIHdhcyBwb3RhdG9lcy4gCk9yIHNvIHRoZXkgc2F5LiAKV2hlbiB0aGUgY2FsY2l1bSBzdG9yZSBpcyBkZXBsZXRlZCwgYnkgYnJpZWYgZXhwb3N1cmUgdG8gcm9jayBjb25jZXJ0IGxldmVsIHNvdW5kcyBvciBieSB0aGUgaW50cm9kdWN0aW9uIG9mIGNhbGNpdW0gY2hlbGF0b3JzLCB0aGUgc291bmQgZXZva2VkIHJlc3BvbnNlcyBvZiB0aGUgc2Vuc29yeSBjZWxscyBkZWNyZWFzZS4gVXBvbiByZXN0b3JhdGlvbiBvZiB0ZWN0b3JpYWwgbWVtYnJhbmUgY2FsY2l1bSwgc2Vuc29yeSBjZWxsIGZ1bmN0aW9uIHJldHVybnMuIFRoaXMgcHJldmlvdXNseSB1bmtub3duIG1lY2hhbmlzbSBjb250cmlidXRlcyB0byBleHBsYWluaW5nIHRoZSB0ZW1wb3JhcnkgbnVtYm5lc3MgaW4gdGhlIGVhciB0aGF0IGZvbGxvd3MgZnJvbSBsaXN0ZW5pbmcgdG8gc291bmRzIHRoYXQgYXJlIHRvbyBsb3VkLCBhIHBoZW5vbWVub24gdGhhdCBtb3N0IHBlb3BsZSBleHBlcmllbmNlIGF0IHNvbWUgcG9pbnQgaW4gdGhlaXIgbGl2ZXMuV2hlbiBzb3VuZCBzdGltdWxhdGVzIHRoZSBzdGVyZW9jaWxpYSBvbiB0aGUgc2Vuc29yeSBjZWxscyBpbiB0aGUgaGVhcmluZyBvcmdhbiwgQ2EyKyBpb25zIGZsb3cgdGhyb3VnaCBtZWNoYW5pY2FsbHkgZ2F0ZWQgaW9uIGNoYW5uZWxzLiAKQXQgaGlzIHJlcXVlc3QsIGhpcyBib2R5IHdhcyBiZXF1ZWF0aGVkIHRvIHRoZSBhbmF0b215IHByb2dyYW0gYXQgTWNNYXN0ZXIgVW5pdmVyc2l0eS4gQSBjZWxlYnJhdGlvbiBvZiBGcmVkJ3MgbGlmZSB3aWxsIGJlIGhlbGQgaW4gdGhlIHNwcmluZy4gClRoZSB1c3VhbCBhZHZpY2UgaXMgdG8gcGxheSBhIHZhcmlldHkgb2YgdHJhY2tzIGFuZCByYWlzZSB0aGVtIHRvIEFzIGJlZm9yZSBtb3ZpbmcgdG8gdGhlIG5leHQgbGV2ZWwuIElmIHlvdSBvbmx5IHBsYXkgeW91ciBmYXZvcml0ZSB0cmFja3MsIHlvdSBtYXkgbWlzcyBvdXQgb24gY2VydGFpbiBjaGFydCBwYXR0ZXJucyBhbmQgY29tZSBiYWNrIHRvIGJpdGUgeW91IG9uIGhpZ2hlciBsZXZlbHMuIEl0IG9ubHkgYXJvdW5kIGx2LiAxMiB3aGVyZSB5b3UgbmVlZCB0byBsZWFybiBwcm9wZXIgaGFuZCBmb3JtcyBvciB2ZXJ0aWNhbCBwYXR0ZXJuIHJlY29nbml0aW9uLgpJIHRyeSB0byBleHBsYWluIGl0IHRvIHlvdSBpbiBhIHdheSB0aGF0IGlzIG1vcmUgb3IgbGVzcyBmYWN0dWFsbHkgY29ycmVjdCwgYnV0IGEgdHJ1ZSBibG9vZGVkIHBoYXJtYWNvbG9naXN0IG1pZ2h0IGhhdmUgYW4gYW5ldXJ5c20gcmVhZGluZyBpdC4gCklmIHlvdSBoYXZlIGEgY292ZXIgeW91IGNhbiByZW1vdmUgYW5kIGxvb2sgZG93biBpbnRvIHRoZSBzZXB0aWMsIGl0IHdpbGwgbG9vayAiZnVsbCIgYWxsIHRoZSB0aW1lLiBUaGUgd2F0ZXIgbGV2ZWwgd2lsbCBiZSBoaWdoIGFuZCB0aGF0IGlzIG5vcm1hbC4gSWYgeW91IGp1c3Qgc2VlIHdhdGVyLCB3aXRoIHNvbWUgd2FzdGUgcGFydGljbGVzL3NjdW07IHRoYXQgaXMgbm9ybWFsIHRvby4gSWYgaXQgbG9va3MgbGlrZSBhIGhlYXZ5IGNvYXRpbmcgb2Ygc2N1bTsgaXQgaXMgcHJvYmFibHkgdGltZSB0byBwdW1wIGl0IG91dC4gTXkgZ3JhbnBhcmVudHMgbmV2ZXIgaGFkIHRoZWlycyBwdW1wZWQgb3V0LiBUaGV5IGhhZCBpdCByZXBsYWNlZCBhZnRlciB0aGUgdGFuayBpdHNlbGYgKGEgbWV0YWwgdGFuaykgd2FzIGZpbmFsbHkgYXQgZmFpbGluZyBwb2ludCAoaXQgd2FzIGFyb3VuZCAzMCB5ZWFycyBvbGQgaSB0aGluayBhdCB0aGF0IHBvaW50IGFuZCB0aGUgc3RhdGUgcmVxdWlyZWQgY2VtZW50KS4gU28gaXQgaXMgcG9zc2libGUsIGJ1dCBub3QgbGlrZWx5IHRoYXQgaXQgd2lsbCBuZXZlciBnZXQgcHVtcGVkLiBBbHNvIG5ldmVyIHVzZSBhbnl0aGluZyBsaWtlIHJpZGV4IG9yIHNlcHRpYyB0cmVhdG1lbnQuIFRoYXQgc3R1ZmYganVzdCBjYXVzZXMgdGhlIHNvaWxkcyB0byBzdGF5IGluIHN1c3BlbnNpb24gYW5kIGdldCBwdXNoZWQgb3V0IGludG8gdGhlIGRyYWluIGZpZWxkIGFuZCBpdCB3aWxsIGNsb2cgdGhlIGhvbGVzIGluIHRoZSBwaXBlcyBvdmVyIHRpbWUuClRyaWJlcyByZXNpc3RhbnQgdG8gcG9rZXIgaGF2ZSBzYWlkIFBva2Vyc3RhcnMgc2hvdWxkIGJlIGV4Y2x1ZGVkIGZyb20gZG9pbmcgYnVzaW5lc3MgaW4gdGhpcyBzdGF0ZSBiZWNhdXNlIG9mIGl0cyByb2xlIGluIHRoZSBwb2tlciB3b3JsZCBiZWZvcmUgdGhlIGZlZGVyYWwgZ292ZXJubWVudCBjcmFja2VkIGRvd24gaW4gMjAxMSAoaXQgaGFzIGJlZW4gZnJlcXVlbnRseSBhbGxlZ2VkIHRoYXQgUG9rZXJzdGFycyBjb250aW51ZWQgdG8gYWNjZXB0IGJldHMgZnJvbSBBbWVyaWNhbiBwbGF5ZXJzLCBldmVuIGFmdGVyIHN1Y2ggYWN0aXZpdHkgd2FzIGRlY2xhcmVkIGlsbGVnYWwpLkhvd2V2ZXIsIHRoYXQgaXNzdWUgbWF5IHNvb24gYmVjb21lIG1vb3QuIFBva2Vyc3RhcnMgaGFzIHJldmVhbGVkIHRoYXQgaXQgaXMgYWJvdXQgdG8gcmVlbnRlciB0aGUgVW5pdGVkIFN0YXRlcyBwb2tlciBtYXJrZXQgYnkgbGF1bmNoaW5nIGEgc2l0ZSBpbiBOZXcgSmVyc2V5IE1hcmNoIDIxIChOZXcgSmVyc2V5LCBOZXZhZGEgYW5kIERlbGF3YXJlIGFyZSB0aGUgb25seSBzdGF0ZXMgaW4gd2hpY2ggb25saW5lIHBva2VyIGlzIGN1cnJlbnRseSBsZWdhbCkuIFBva2VyIHByb3BvbmVudHMgYXJndWUgdGhhdCBpdCB3aWxsIGJlIGhhcmRlciBmb3Igb3Bwb25lbnRzIHRvIHN1Z2dlc3QgdGhhdCBQb2tlcnN0YXJzIGlzIGEgImJhZCBhY3RvciIgd2hpY2ggc2hvdWxkIGJlIGJhbm5lZCBmcm9tIENhbGlmb3JuaWEgaWYgdGhlIGNvbXBhbnkgaXMgYWNjZXB0ZWQgYXMgYW4gYWNjZXB0YWJsZSBidXNpbmVzcyBpbiBhbm90aGVyIHN0YXRlLldoaWxlIHRoZXNlIHJlY2VudCBkZXZlbG9wbWVudHMgb2ZmZXIgdGhlIGZpcnN0IHNpZ25pZmljYW50IGhvcGUgZm9yIHBva2VyIHBsYXllcnMgaW4gQ2FsaWZvcm5pYSBpbiBxdWl0ZSBzb21lIHRpbWUsIGl0IHJlbWFpbnMgdG8gYmUgc2VlbiB3aGV0aGVyIHRoZSBjb21wZXRpbmcgaW50ZXJlc3RzIHdpbGwgYmUgYWJsZSB0byBjb21lIHRvZ2V0aGVyIGZvciBhIGNvbXByb21pc2UgYW55IHRpbWUgc29vbi4uIApJdCBiZWVuIHVwIGZvciBhIHB1YmxpYyB2b3RlIGl0IG5ldmVyIHdhcyB1cCBmb3Igc3VjaCBhIHZvdGUsIGJlY2F1c2UgdGhhdCBub3QgaG93IHRoaW5ncyB3b3JrIHVuZGVyIG5vcm1hbCBydWxlIG9mIGxhdy4gSG93IGNhbiBJSyBiZSBhbnkgbW9yZSBvciBsZXNzIHRoYW4gd2hhdCByZWZsZWN0cyB0aGUgcHVibGljIHNlbnRpbWVudCBhdCB0aGUgdGltZT8KVGhlIDIwMTYgV1NPUCBjb21tZW5jZXMgb24gV2VkbmVzZGF5IDFzdCBKdW5lLCBhbmQgYnkgdHJhZGl0aW9uLCBpdCBzdGFydHMgaW4gYSB2ZXJ5IG9kZCB3YXkgICBhbiBldmVudCBpbiB3aGljaCBlbnRyeSBpcyByZXN0cmljdGVkIHRvIGNhc2lubyBlbXBsb3llZXMuIFlvdSBtYXkgd2VsbCB3b25kZXIgaG93IHRoYXQgd29ya3MsIGluIHRoZSBzYW1lIHdheSBhcyB3ZSB3b25kZXIgaG93IHRoZSBzbm93cGxvdWdoIGRyaXZlciBnZXRzIHRvIHdvcmsgYWZ0ZXIgb3Zlcm5pZ2h0IHNub3csIHNvIHlvdSdkIHBlcmhhcHMgYmUgc3VycHJpc2VkIHRvIGxlYXJuIHRoYXQgbGFzdCB5ZWFyJ3MgcmVuZXdhbCBhdHRyYWN0ZWQgYSB3aG9wcGluZyA2ODggcnVubmVycywgYW5kIGlmIHJlY2VudCB0cmVuZHMgYXJlIGFueXRoaW5nIHRvIGdvIGJ5LCB0aGF0IHdpbGwgaW5jcmVhc2UgdGhpcyB5ZWFyLgpUaWNpZW5uZSBnb3VybWFuZGUKQnkgTWFudWVsIEdhbWl6IEpyLiwgT0YgVEhFIE1PUk5JTkcgQ0FMTCAgQXByaWwgNCwgMjAxMQpXaGF0IGFkdmljZSBkbyB5b3UgaGF2ZSBmb3IgdXMgcGxlYnMgd2hvIGdvdCB1c2VkIHRvIGJvMSBhZ2dybyB0cnlpbmcgdG8gYnJlYWsgcmFuayBub3c/IElmIHNvbWVvbmUgaXMgc3R1Y2sgaW4gR29sZCwgSSdkIHNheSB0aGV5J3JlIG1ha2luZyBlcnJvcnMgb3IgdGhleSdyZSBub3QgcmVhZGluZyBvcHBvbmVudHMgaGFuZHMsIHdhdGNoaW5nIG9wZW4gbWFuYSwgdW5kZXJzdGFuZGluZyBtZXRhIGFuZCB3aGF0IGNhcmRzIHRvIGV4cGVjdCBnaXZlbiB3aGF0IGNhcmRzIHRoZXkndmUgc2Vlbi4gUGxhdCBiZWNhbWUgaG93IHRvIGlkZW50aWZ5IG9wcG9uZW50cyBkZWNrIGVhcmxpZXIgc2VlaW5nIGxlc3MgY2FyZHMgKFQxIGlzbGFuZCBwYXNzPyBNVVQvRHJha2VzL05pdj8gRXNwZXIgd2l0aG91dCBhIHdhdGVyeSBncmF2ZT8pIEJ1dCBub3cgaW4gaGlnaCBEaWFtb25kLCBJJ20gbm90IHN1cmUgd2hlcmUgbXkgd2Vha25lc3MgbGllcy4uIApDYW5jZWxsYXRpb24gd2lsbCBvbmx5IGFmZmVjdCBmdXR1cmUgQmlsbGluZyBQZXJpb2RzLiAKT24gdGhlIHBsdXMgc2lkZSwgSSBhbSBub3cgaW4gYSByZWxhdGlvbnNoaXAgd2l0aCBhbm90aGVyIGd1eSB3aG8gaGFzIGFueGlldHkgaGltc2VsZiwgYW5kLCB3aGlsZSB0aGlzIHNvdW5kcyBvZGQsIGl0J3MgYW1hemluZy4gSGUgdW5kZXJzdGFuZCBteSBhbnhpZXR5IGFuZCB3ZSB3b3JrIEdSRUFUIHRvZ2V0aGVyLiAKSGlzIHN1cnZpdmFiaWxpdHkgaGFzIGJlZW4gaW5jcmVhc2VkIGV2ZW4gbW9yZSBub3cgaGF2aW5nIHRoZSBiZXN0IHZlcnRpY2FsIHN1cnZpdmFiaWxpdHkgYW5kIDJuZCBiZXN0IGhvcml6b250YWwgc3Vydml2YWJpbGl0eS4KVG8gY29udGludWUgcGxheWluZyB5b3UgbXVzdCBjYWxsIGEgMiB1bml0IGJldC4uIApIb3dldmVyLCB0aGUgY29tYmluYXRpb24gb2YgdGhlIHVsdCwgdGFjdGljYWwsIGFuZCBwYXNzaXZlIGlzIE9QIHRob3VnaC4gU2hlIHdvdWxkIGVhc2lseSBiZSBhbiBpbnN0YWxvY2sgZm9yIGV2ZXJ5IHRlYW0gaWYgc2hlIHdhcyByZWFsLiBOb3QgbXVjaCBkaWZmZXJlbnQgdGhhbiB3cmFpdGggaXMgbm93IHRob3VnaC4KSEQgMTA4MHA7IEhEIDcyMHAgLiAKUG90IExpbWl0IE9tYWhhLCBhbmQgd2hhdCBhIGJyZWV6ZS4gRXZlcnkgdGltZSBJIHRha2Ugb24gQWNlcywgSSBjcmFjayB0aGVtLiBMYWR5IEx1Y2sgd2FzIHdpdGggbWUgYWxsIGRheS4gCllvdSBoYXZlIHRvIHN0YXJ0IHBsYXlpbmcgdGhlIHBlcnNvbiBpbnN0ZWFkIG9mIHlvdXIgY2FyZHMuIApNYWtpbmcgbW9yZSB0aGluZ3Mgd2l0aCB0YXJwcyBpcyB3aGF0ZXZlciB0aG91Z2ggc2luY2UgSSB3b3VsZCByYXRoZXIgYnVpbGQgYSBodW5kcmVkIHdhdGVyIHN0aWxscyB0aGFuIGEgc2hlbHRlciB3aXRoIHRoZSB0YXJwLkkgYWdyZWUgd2l0aCB0aGUgUmFkaW8sIHRoYXQgYmUgY29vbC4gRXZlcnl0aGluZyBlbHNlIHNvdW5kcyBsaWtlIHRoZSBnYW1lIHdvdWxkIGJlIGltYmFsYW5jZWQgYW5kIHRvbyBlYXN5P2xhc3RzZWFzb24gIDIgcG9pbnRzICBzdWJtaXR0ZWQgMSBtb250aCBhZ293b3VsZCB5b3UgcHJlZmVyIHRvIHNlZSBzb21lIHRlbnNpb24gYXMgYSByZXN1bHQgb2YgbGVzcyBwcm9ncmVzc2l2ZSBjaGFyYWN0ZXJzIGJlaW5nIHByZXNlbnQgaW4gdGhlIHdvcmxkLCB0byBiZXR0ZXIgcmVmbGVjdCB0aGUgcmVhbGl0eSBhbmQgY3JhcCB0aGF0IGEgZ2VuZGVycXVlZXIgY2hhcmFjdGVyIG1heSBoYXZlIGhhZCB0byBkZWFsIHdpdGg/SSB3YXMgc2ltcGx5IGp1c3QgYW5zd2VyaW5nIHRoaXMgKGtpbmQgb2Ygb2RkKSBxdWVzdGlvbiBPUCBwdXQgYXQgdGhlIHZlcnkgZW5kIG9mIHRoZSBwb3N0LiAKVGhlIHBsYXRmb3JtIHdhcyBkZXNpZ25lZCBmb3IgbWVuIGFuZCB3b21lbiBvdmVyIHRoZSBhZ2Ugb2YgMTggd2hvIGFyZSBsb29raW5nIGZvciBsb3ZlLCBhIHNpbXBsZSBkYXRlIG9yIG1lcmVseSBhIGNvbnZlcnNhdGlvbiBwYXJ0bmVyLiAKRGVyIFN0YWF0IGhsdCBzaWNoIHNjaGVpbmhlaWxpZyBtaXQgQXJndW1lbnRlbiB3aWUgIkluZGlnZW5lIE5hdHVydmxrZXIgaW5ydWhlIGxhc3NlbiIgcmF1cyB1bmQgYmlldGV0IGtlaW5lIG1lZGl6aW5pc2NoZSBHcnVuZHZlcnNvcmd1bmcuIApUaGFuayB5b3UuIEkgaGF2ZSBiZWVuIGNvbnNpZGVyaW5nIGl0LiBNeSBraWRzIGFyZSBzdGlsbCBxdWl0ZSB5b3VuZywgbXkgc29uIGRvIGdldCBvbiBlYWNoIG90aGVyIG5lcnZlcyBidXQgb3RoZXIgdGhhbiB0aGF0IGFsbCBnZXQgYWxvbmcsIEkgc2F5LiAKQWxsIEFtZXJpY2FucyBoYXZlIGl0LCB3ZSB3aWxsIGJlIGFibGUgdG8gYmFuZCB0b2dldGhlciBmb3IgYmV0dGVyIHdvcmtpbmcgY29uZGl0aW9ucy4gT3RoZXIgd29yZHMsIGEgc29jaWFsIHNhZmV0eSBuZXQgYWxzbyBhbGxvd3MgbGFib3IgdG8gZ2V0IG9yZ2FuaXplZCBhZ2FpbnN0IGdyZWVkIGFuZCBleHBsb2l0YXRpb24uLiAKSmltIGlzbiBiYWQgb24gdGhlIGV5ZXMsIGJ1dCBoZSBuZXZlciBiZWVuIGtub3duIGZvciBoaXMgbG9va3MgYXMgYSBsZWFkaW5nIG1hbiBpbiBtb3ZpZXMuQ2VsZWJyaXR5IFNtYWNrIEJsb2dMYXN0IG1vbnRoLCBhcm91bmQgNjczLDAwMCBwZW9wbGUgc2VhcmNoZWQgR29vZ2xlIGZvciBpbmZvcm1hdGlvbiBhYm91dCBKaW0sIGFuZCA0NTAsMDAwIHNlYXJjaGVkIGZvciBKZW5ueSAgIGVub3VnaCB0byBwdXQgdGhlbSBpbiB0aGUgdG9wIGhhbGYgb2Ygb3VyIG1vc3QgcG9wdWxhciBjb3VwbGVzLkJvdGggb2YgdGhlc2UgY2VsZWJzIGxvdmUgZGF0aW5nIGluIHRoZSBIb2xseXdvb2QgY2lyY3VpdC4gCkhvbWUgZ2FtaW5nIG5lZWRzIGRpY3RhdGUgdGhlIHB1cmNoYXNlIG9mIGV4cGVuc2l2ZSBwb2tlciBzZXRzIGZvciB0aGUgY2FzdWFsIGdhbWJsZXIuIEFsdGhvdWdoIHRoZXJlIGFyZSBtYW55IGF2aWQgcHVyaXN0cyB3aG8gcGFydGljaXBhdGUgaW4gZnJlcXVlbnQgZ2FtaW5nIG91dHNpZGUgb2YgY2FzaW5vcyB5ZXQgc3RpbGwgd2FudCB0byB1c2UgYSBwcm9mZXNzaW9uYWwgcG9rZXIgY2hpcCwgbW9yZSBvZiB0aGUgU2F0dXJkYXkgbmlnaHQgZ2FtZXMgZW1wbG95IHRoZSB1c2Ugb2YgZWl0aGVyIG1ldGFsIGNvcmUgb3IgZnVsbHkgcGxhc3RpYyBjaGlwcy4gVGhlIG1ldGFsIGNvcmUgcGxhc3RpYyBjaGlwcyBhcmUgaGVhdmllciBhbmQgY2FuIGJlIGN1c3RvbWl6ZWQgaW4gdGhlaXIgZGVzaWduIGFuZCBjb2xvciBoYXZpbmcgYSBsaXR0bGUgYml0IG9mIGEgc3BlY2lhbCBjYXNpbm8gZWZmZWN0IHRvIHRoZWlyIHVzZS4KRG8gbm90ZSB0aGF0IHRoZSBzcGVjaWFsIHByb251bmNpYXRpb24gb2YgInNwIiBhbmQgInN0IiAod2l0aCBhbiBhZGRlZCAiaCIgc291bmQpIG9ubHkgb2NjdXJzIHdoZW4gdGhlICJzdCIgb3IgInNwIiBpcyBhdCB0aGUgYmVnaW5uaW5nIG9mIGEgc3lsbGFibGUuClRoZXJlIGFyZSA2IHNlcmllcyBvZiBkcmF3cyB5b3UgY2FuIGdldCB0aGF0IHdpbGwgZ2l2ZSB5b3UgYWNlLCBxdWVlbiwgYW5kIDEwICgzISwgb3IgM3gyeDEpLiBUaGlzIHdvcmtzIG91dCB0byAxIGluIDE2LDIxNSAuIApTcGVha2luZyBhcyBzb21lb25lIHdobywgYWxvbmcgd2l0aCBteSBraWRzLCB3ZW50IGNvbXBsZXRlbHkgZ2x1dGVuIGFuZCBkYWlyeSBmcmVlIGZvciB5ZWFyczogWWVzLCB0aGV5IGFic29sdXRlbHkgd2lsbCBlYXQgZGlmZmVyZW50bHkgYXQgb3RoZXJzIGhvdXNlcy4gQW5kIGluIG91ciBjYXNlIGl0IHdhcyBhbiBhbGxlcmd5LCBidXQgcGVvcGxlIHN0aWxsIGZlZWQgaXQgdG8gdGhlbSBhbGwgdGhlIHRpbWUgYW5kIGxpZWQgd2hlbiBteSBraWRzIHdlcmUgdHJ5aW5nIHRvIGJlIGdvb2QgYWJvdXQgd2hhdCB0aGV5IGF0ZS4gCldoZW4gSSB3YW50IHRvIHJlYWQgc2Vuc2libGUgTkJBIHRha2VzIEkgbG9vayB1cCBhcnRpY2xlcy4gCkMnZXN0IGNlIHF1aSBleHBsaXF1ZSBxdSdpbCBlbnRyZXByaXQgYXZlYyBKZWFuIENoYXBlbGxlLCBhdXRyZSBub3N0YWxnaXF1ZSBkZXMgYmFuZGVzIGRlc3NpbmVzIHBvdXIgZW5mYW50cywgbGEgcmRpdGlvbiBkZSBTSVRUSU5HIEJVTEwsIGVuIGFvdCAxOTcwLiAKRG9pbmcgdGhpcyBhbGxvd3MgeW91ciBlbXBsb3llZXMgdG8gaW5ub3ZhdGUgYW5kLCB1bHRpbWF0ZWx5LCB0byBsZWFybiBvciBncm93LiBXb3JrZXJzIHdobyBsZWFybiBmcm9tIHRoZWlyIG1pc3Rha2VzIHdpbGwgZ3JvdyB0byBiZWNvbWUgYmV0dGVyIHdvcmtlcnM7IHRob3NlIHdobyBmYWlsIHRvIG1ha2UgbWlzdGFrZXMgaW4gdGhlIGZpcnN0IHBsYWNlIHVzdWFsbHkgcGxheSBpdCB0b28gc2FmZSwgbmV2ZXIgdmVudHVyaW5nIG91dCBpbnRvIGRlZXAgd2F0ZXIuClRoZSByZWNrbGVzcyBwcmFjdGljZXMgb2YgV2FsbCBTdHJlZXQgc2VudCBvdXIgZWNvbm9teSByZWVsaW5nLCB0cmlnZ2VyZWQgdGhlIHdvcnN0IHJlY2Vzc2lvbiBzaW5jZSB0aGUgR3JlYXQgRGVwcmVzc2lvbiwgYW5kIGxlZnQgbWlsbGlvbnMgb2YgQW1lcmljYW5zIHRvIGZvb3QgdGhlIGJpbGwuIApJIHdvcmsgaW4gSVQgYXQgbXkgY29tcGFueSBhbmQgSSBoYXZlIHBlcm1pc3Npb24gYW5kIHRoZSBhYmlsaXR5IHRvIGVudGVyIG91ciBkcm9wIGNlaWxpbmcuIEkgYW0gbm90IGluIGNoYXJnZSBvZiB0aGlzLCBidXQgYXMgb25lIG9mIHRoZSBmZXcgcGVvcGxlIHRoYXQgZ28gaW50byB0aGUgY2VpbGluZywgaWYgSSBmb3VuZCBvbmUgb2YgbXkgY293b3JrZXJzIGdvaW5nIHVwIGEgbGFkZGVyIGludG8gdGhlIGNlaWxpbmcgSSB3b3VsZCB0ZWxsIHRoZW0gdG8gZnVjayByaWdodCBvZmYuIFRoZXJlIGlzIG5vIHNpdHVhdGlvbiBJIGNhbiBmYXRob20gdGhhdCB3b3VsZCBlbmQgd2l0aCBtZSBhbGxvd2luZyBzb21lb25lIHVwIHRoZXJlLiAKTGlzdGluZy4gT3R0YXdhIGJhc2VkIGUgY29tbWVyY2UgY29tcGFueSBTaG9waWZ5IEluYy4gCjI5LCBpbiBBcmxpbmd0b24sIFRleGFzLjEgeXIgYWdvICsgQnkgRGVubmlzIE1hbm9sb2ZmLCBUaGUgUGxhaW4gRGVhbGVyQ29uY3Vzc2lvbnMgcHVzaGVkIFR5cmVrZSBTbWl0aCBhd2F5IGZyb20gZm9vdGJhbGwsIGJ1dCBmYW1pbHkgYnJvdWdodCBoaW0gYmFjayBDb25jdXNzaW9ucyBwdXNoZWQgVHlyZWtlIFNtaXRoIGF3YXkgZnJvbSBmb290YmFsbCwgYnV0IGZhbWlseSBicm91Z2h0IGhpbSBiYWNrIE9oaW8gU3RhdGUsIFBlbm4gU3RhdGUsIEFsYWJhbWEsIE9yZWdvbiBhbmQgVVNDIGFsbCB3YW50IENsZXZlbGFuZCBIZWlnaHRzIGRlZmVuc2l2ZSBlbmQgVHlyZWtlIFNtaXRoLklzIEpvZSBQYXRlcm5vIHN0aWxsIGEgUGVubiBTdGF0ZSBoZXJvPyBJcyBKb2UgUGF0ZXJubyBzdGlsbCBhIFBlbm4gU3RhdGUgaGVybz8gSXQncyBiZWVuIGZpdmUgeWVhcnMgc2luY2UgZm9ybWVyIFBlbm4gU3RhdGUgZGVmZW5zaXZlIGNvb3JkaW5hdG9yIEplcnJ5IFNhbmR1c2t5IHdhcyBjb252aWN0ZWQgb2YgNDUgY291bnRzIG9mIHNleHVhbCBhc3NhdWx0aW5nIGJveXMuIEpvZSBQYXRlcm5vIHdhcyBoZWFkIGNvYWNoIG9mIHRoZSBOaXR0YW55IExpb25zIGF0IHRoZSB0aW1lLCBhbmQgbWFueSBmZWVsIGhlIHR1cm5lZCBhIGJsaW5kIGV5ZSB0byBoaXMgZnJpZW5kJ3MgY3JpbWVzLiAKSW4gUmV2LiAyMjoxMCAxMSB0aGUgQmlibGUgc2F5cywgaGUgc2FpdGggdW50byBtZSwgU2VhbCBub3QgdGhlIHNheWluZ3Mgb2YgdGhlIHByb3BoZWN5IG9mIHRoaXMgYm9vazogZm9yIHRoZSB0aW1lIGlzIGF0IGhhbmQuIEhlIHRoYXQgaXMgdW5qdXN0LCBsZXQgaGltIGJlIHVuanVzdCBzdGlsbDogYW5kIGhlIHdoaWNoIGlzIGZpbHRoeSwgbGV0IGhpbSBiZSBmaWx0aHkgc3RpbGw6IGFuZCBoZSB0aGF0IGlzIHJpZ2h0ZW91cywgbGV0IGhpbSBiZSByaWdodGVvdXMgc3RpbGw6IGFuZCBoZSB0aGF0IGlzIGhvbHksIGxldCBoaW0gYmUgaG9seSBzdGlsbC4KWW91IHdpbGwgbmVlZCB0byBnbyB0aHJ1IHNlY3VyaXR5IGF0IHRoZSBwYXJrLCBzbyBhIHNtYWxsIGJhZyBvbmx5IGFuZCBubyB3ZWFwb25zLCB0aGV5IHdvbid0IGFsbG93IGxhcmdlIGJhZ3Mgb3Igb3BlbiBib3R0bGVzIElmIHlvdSBlbmQgdXAgd2l0aCBsb3VzeSBzZWF0cyAob3IgdGhleSBhcmUgdG9vIG5hcnJvdykuIApCLiBaaWVsZ3J1cHBlbm9yaWVudGllcnRlIFdlcmJ1bmcgZnIgZGVuIEJlbnV0emVyIHp1IGVyc3RlbGxlbi4uIApPciwgeW91IGNhbiB0d2VhayB0aGUgdHJlbmR5IHByb2R1Y3RzIHRvIG1ha2UgdGhlbSBleGNsdXNpdmVseSB5b3Vycy4gU2F5LCB5b3UgZG9uJ3Qga25vdyB3aGF0IHRvIGRvLCB3YXRjaCBvdXQgdGhlIHNob3cgdXBzIGluIHRoZSBsZWFkaW5nIHBva2VyIHRvdXJuYW1lbnRzIGFyb3VuZCB0aGUgd29ybGQuIApEb25hbGQgU21pdGggdG9sZCBQYXVsIFNtaXRoIGhpcyBhcmd1bWVudCB3YXMgd2l0aCBDYXBsaW5nZXIgYW5kIHdhcyAibm9uZSBvZiB5b3VyIChQYXVsIFNtaXRoJ3MpIGJ1c2luZXNzLiIgR3J1bmRhIHNhaWQgUGF1bCBTbWl0aCB0aGVuIGdvdCBhIHNob3RndW4gYW5kIHBsYWNlZCBpdCB0byBoaXMgYnJvdGhlcidzIG5lY2suIApXYXNoaW5nIG1hY2hpbmVzIHRoYXQgc3BlY2lmaWNhbGx5IHVzZSBtb3JlIGV4cGVuc2l2ZSBtZXRhbHMgbGlrZSBaaW5jIHRvIG1vdW50IHRoZSBzcGluZGxlIHRvIHN0ZWVsIGRydW1zIHNvIHRoYXQgdGhlIFppbmMgY29ycm9kZXMgYW5kIHRoZSB3YXNoZXIgZmFpbHMgd2l0aGluIGEgc2V0IG51bWJlciBvZiB3YXNoZXMuClRoZSBiZXN0IHdheSB0byB2ZXJpZnkgd2hhdCBoYXBwZW5pbmcgaXMgdG8gY291bnQgeW91ciBjYWxvcmllcyBhbmQgY29tcGFyZSBpdCB0byB5b3VyIFRERUUuIElmIHlvdSB0cmFjayBob25lc3RseSBhbmQgeW91ciBjYWxvcmllcyBpbiBhcmUgbGVzcyB0aGFuIHlvdXIgVERFRSB5b3UgbG9zZSB3ZWlnaHQuIApHZWlzaGEgc3R5bGUgYmF0aC4gRHJhdyB1cCBhIHdhcm0gYmF0aCBwdXQgaW4gamFzbWluZSBvciBldWNhbHlwdHVzIG9pbHMgaW4gdGhlIHR1YiBhbmQgeW91IGRvIHRoZSBzY3J1YmJpbmcgZm9yIGhpbSEgSnVzdCBsaWtlIHRoZSBhbmNpZW50IEphcGFuZXNlIEdlaXNoYSwgeW91J2xsIGVudGVydGFpbiBoaW0gYXMgd2VsbCBhZnRlciB0aGUgYmF0aC4gRG8gYSBzZXh5IGRhbmNlIHdoaWxlIGhlIHNvYWtzIGluIHRoZSB0dWIsIHBsYXkgaGlzIGZhdm9yaXRlIHNvbmcgb24gZ3VpdGFyLCBqdXN0IGxldCBoaW0gc29hayBhbmQgZmVlbCBsaWtlIGEgc2hvZ3VuIS4gCkkgaGF2ZSBubyBhZHZpY2UuIEl0IHdhcyB0aGUgd29yc3QgcGFpbiBJIGV2ZXIgZmVsdC4gSSBhbSB0ZXJyaWZpZWQgdG8gaGF2ZSBhbm90aGVyIGNoaWxkIGV2ZW4gYnkgYyBzZWN0aW9uIGJlY2F1c2UgSSBhZnJhaWQgb2YgY29udHJhY3Rpb25zIG5vdyBhbmQgSSBzY2FyZWQgSSBnbyBpbnRvIGxhYm91ciBiZWZvcmUgYSBzY2hlZHVsZWQgYyBzZWN0aW9uLiAKQ2xlYW4gYW5kIGNvbnRlbXBvcmFyeTogQnkgcmVkdWNpbmcgdGhlIG51bWJlciBvZiBjb2xvdXJzIGFuZCBmaW5pc2hlcyBleGFtcGxlLCBtYXRjaGluZyB0aGUgd29vZCB2ZW5lZXIgZmluaXNoZXMgb24gdGhlIGlzbGFuZCBhbmQgdGhlIHBlcmltZXRlciBjYWJpbmV0cnkgc3RyZWFtbGluZWQgc3BhY2UgcHJlc2VudHMgYSBjbGVhbiwgY29udGVtcG9yYXJ5IGxvb2suClRoZSBwcmFjdGljZSBvZiBkaXZpbmF0aW9uIChwc3ljaGljIHJlYWRpbmcpIGNhbiBzZXJ2ZSB0byBwb2ludCB0aGUgd2F5LkJhc2VkIG9uIHRoZSB3b3JrIG9mIERvbiBNaWd1ZWwgUnVpeiwgd2Ugd2lsbCBleHBsb3JlIHRoZSAiRm91ciBBZ3JlZW1lbnRzIi4gCldvb3RlcyAgMiBwb2ludHMgIHN1Ym1pdHRlZCA0IG1vbnRocyBhZ28KSXMgcGxheWluZyBpdCB3YXkgdG9vIHNhZmUgd2l0aCBoaXMgbW9uZXkgd2hpY2ggbWF5IHN1Z2dlc3QgaGUga25vd3MgaGUgaXMgZ29pbmcgdG8gbG9zZSwgYnV0IGF0IGxlYXN0IHdpdGggYWxsIHRoYXQgY2FzaCBoZSBjYW4gc3RpbGwgcGxheSBraW5nbWFrZXIuQW5kIHdpdGggYWxsIHRoYXQgY2FzaCwgSSBhaW4gZG9pbmcgQmV0byBqb2Igb2YgaW5mb3JtaW5nIG15IGdyYW5kbW90aGVyIGFib3V0IGhpbS5GdWNrIHRoYXQgbm9pc2UuQnV0IGJhY2sgdG8gdGhlIFJlZCBNZW5hY2UuU28gdGhleSBhcmUgcnVubmluZyBHcmVnIEJhaW5lLiAKSSB0aGluayBJIHdvdWxkIGhvbmVzdGx5IHBheSBhICQxLDAwMCBBRiBmb3IgYWxsIGVuY29tcGFzc2luZyBzdGF0dXMgKyBwcmlvcml0eSBpbiBhbGwgdHJhdmVsIG1ldGhvZHMgKHRoaW5rIG9mIFViZXIgUGxhdCBmb3IgdGhlIGFpcnBvcnQsIENsZWFyICsgcHJlY2hlY2sgdG8gZ2V0IHRocm91Z2ggZmFzdCwgcHJpb3JpdHkgY2hlY2sgaW4vcG9zc2libGUgdXBncmFkZXMgb24gYW55IG5hdGlvbmFsIGFpcmxpbmUsIGFuZCB0aGVuIGhvdGVsIGJlbmVmaXRzIGF0IGFueSBuYXRpb25hbCBob3RlbCBjaGFpbikuLiAKTXkgZW5lcmd5IGxldmVscyB3b3VsZCBzaWduaWZpY2FudGx5IGRyb3AsIGFuZCBJIHdvdWxkIHN0YXJ0IHRvIGZlZWwgc29tZXdoYXQgc2ljay4gSSBzb2x2ZWQgdGhpcyBieSBhbHdheXMgY2FycnlpbmcgYSBwYWNrIG9mIGFsbW9uZCBidXR0ZXIsIGFwcGxlcywgb3Igc29tZSBxdWljayBiaXRlcyBvZiBhbnl0aGluZy4gClRoaXMgY29tZXMgb24gdGhlIGhlZWxzIG9mIHRoZSBVUyBhcnJlc3RpbmcgYW5kIHRvcnR1cmluZyBhIEdlcm1hbiBjaXRpemVuLCBzcHlpbmcgb24gR2VybWFucyBhbmQgYnVnZ2luZyB0aGUgR2VybWFuIGNoYW5jZWxsb3IgcGVyc29uYWwgcGhvbmUsIGFuZCBpbml0aWF0aW5nIHdhciBhZnRlciB3YXIgdGhhdCBoYXZlIHJlc3VsdGVkIGluIHRoZSBtaWdyYW50IGNyaXNpcyBHZXJtYW55IG5vdyBmYWNlcy4uIApEYXRhIHdlcmUgZXh0cmFjdGVkIGZvciB0aGUgZm9sbG93aW5nIGNhdGVnb3JpZXM6IHN0dWR5IGlkZW50aWZpY2F0aW9uIGFuZCB5ZWFyIG9mIHB1YmxpY2F0aW9uOyBkaWFnbm9zaXMsIGRlc2lnbiBhbmQgdGhlIG51bWJlciBvZiBwYXRpZW50czsgdHJlYXRtZW50OyBjb250cm9sOyBwcmltYXJ5IG1lYXN1cmVzIG9mIGVmZmVjdDsgcmVzdWx0czsgYW5kIEphZGFkIHNjb3JlLi4gCk9mZmljaWFscywgaG93ZXZlciwgc2F5IHRoYXQgdGhlIGJ1c2luZXNzIGhhcyBwaWNrZWQgdXAgd2l0aCB0aGUgZGVwcmVjaWF0aW5nIHJ1cGVlLiAKV2hlbiBwaG90b3N5bnRoZXRpYyBvcmdhbmlzbXMgYmVnYW4gc3Bld2luZyBveHlnZW4gaW50byB0aGUgYWlyLCBhIHBvaXNvbm91cyBnYXMsIGl0IGtpY2tlZCBvZmYgb25lIG9mIHRoZSBiaWdnZXN0IG1hc3MgZXh0aW5jdGlvbnMgb24gcmVjb3JkLiBXZSBkb24ndCBjb25zaWRlciB0cmVlcyBldmlsIGZvciB0aGF0LiBXZSBkb24ndCBjb25zaWRlciBiZWF2ZXJzIGV2aWwgZm9yIHJhemluZyBmb3Jlc3RzIHdpdGggdGhlaXIgYmFyZSB0ZWV0aCBhbmQgZmxvb2Rpbmcgb3RoZXJ3aXNlIG5pY2Ugc3RyZWFtcy4gV2UgZG9uJ3QgaG9sZCBjYXJpYm91IGFjY291bnRhYmxlIGZvciBhbGwgdGhlIGdyYXNzIHRyYW1wbGluZyBhbmQgZWF0aW5nIGluIHRoZSB0dW5kcmEgd2hpY2ggZHJhc3RpY2FsbHkgYWx0ZXJzIHRoYXQgbGFuZHNjYXBlLgpNeSBicmFpbiBiYXJlbHkgZnVuY3Rpb25zLCBhbmQgSSdtIGx1Y2t5IGlmIEkgZ2V0IGEgc2hvd2VyIGV2ZXJ5IGNvdXBsZSBvZiBkYXlzLiBJJ20gc3RpbGwgYmxlZWRpbmcsIGFuZCBJIGhhZCBhIHJlbGF0aXZlbHkgZWFzeSBkZWxpdmVyeS4uIApBOiBOby4gTmljZSB0cnksIHRob3VnaC4gTXkgc3RhbmRhcmQgZ2FnIGFib3V0IHRoZSBzb25nIGlzIHRoYXQgd2hlbiBJIHNhdyBHdXkgQ2xhcmsgSnIuIApUaGUgQ29hbGl0aW9uIG9wcG9zZXMgbWFuZGF0b3J5IHByZSBjb21taXRtZW50IGZvciBwb2tpZXMgYW5kIHdvdWxkIGxpa2VseSBzY3JhcCB0aGUgQUNUIHRyaWFsIGlmIGl0IHdpbnMgdGhlIGVsZWN0aW9uLgpNciBUb29sZSB3YXMgcmVzcG9uZGluZyB0byBsb2JieWdyb3VwIEFsbGlhbmNlIGZvckdhbWJsaW5nUmVmb3JtJ3MgZGVjaXNpb24gdG8gdGFyZ2V0IEJhdGh1cnN0IGNvdW5jaWxsb3JzIGFoZWFkIG9mIHRoZSBsb2NhbCBnb3Zlcm5tZW50IGVsZWN0aW9uaW4gbGVzcyB0aGFuIHR3byBtb250aHMuIFRoZSBhbGxpYW5jZSwgYmFzZWQgaW4gVmljdG9yaWEsIHdoaWNoIHNheXMgInBva2VyIG1hY2hpbmVzIGFyZSB0aGUgY3J5c3RhbCBtZXRoIG9mIGdhbWJsaW5nIiwgaGFzIHdyaXR0ZW4gdG8gZWFjaCBvZiB0aGUgY2l0eSdzIHNldmVuIGNvdW5jaWxsb3JzIGFza2luZyB0aGVtIHRvIHB1YmxpY2x5IGNvbW1pdCB0byBhIHBsZWRnZSB0byBsaW1pdCBzdGF0ZXdpZGUgcG9rZXIgbWFjaGluZSBsb3NzZXMgdG8gJDUgYmlsbGlvbiBhIHllYXIuIApJbHMgZW4gcG91c2VudCBsZSBwcm9mb25kIHByaW5jaXBlLCBsYSBzdWJzdGFuY2UgbW1lLiAKSSBnbGFuY2VkIG92ZXIsIGFzIGlmIEkgY291bGQgc2VlIHRocm91Z2ggdGhlIGRvb3IsIGFuZCBzZWUgd2hvIHdhcyB0aGVyZS4gV2hlbiBub3RoaW5nIG1vdmVkIG9yIHNoaWZ0ZWQsIEkgY2hhbGtlZCBpdCB1cCBqdXN0IGhlYXJpbmcgdGhpbmdzLiBBdCBmaXJzdCwgdGhhdCBoYWQgaGFwcGVuZWQgYSBsb3QuIEkgdHVybmVkIGJhY2sgdG8gdGhlIHBvdCwgc2hpZnRpbmcgbXkgc3RldyBhcm91bmQgd2l0aCBhIHdvb2RlbiBzcG9vbi4gVGhlbiwgdGhlcmUgaXQgd2FzIGFnYWluLCBsb3VkZXIgYW5kIG1vcmUgdXJnZW50LiBJIHdhcyBoZWFyaW5nIHRoaW5ncyBhZ2FpbiwgYnV0IGFzIG11Y2ggYXMgSSB3YW50ZWQgdG8ganVzdCBsZXQgdGhhdCBiZSBpdCwgSSBjb3VsZG4ndC4gQSBzbWFsbCBob3BlIGluc2lkZSBvZiBtZSwgYnVybmVkIG9uIHN0cm9uZy4KVGw7ZHIsIGkgc2VlbiBpdCBoYXBwZW4gYmVmb3JlLCBzb3J0IG9mLgpDZWxhIGEgYmVhdWNvdXAgcmFsZW50aSBkZXB1aXMuIApMaXZyZXMgSGViZG8uIEwnYW5uZSAyMDE4IGEgdCBwbG9tYmUgcGFyIHVuIHRycyBtYXV2YWlzIHNlY29uZCBzZW1lc3RyZSwgYW5hbHlzZSBMaXZyZXMgSGViZG8uIENvbXBhciBhdSBjb21tZXJjZSwgcXVpIG5lIHJlY3VsZSBxdWUgZGUgMCwyJSBlLCAyMDE4LCBsZSBsaXZyZSBlc3QgIGxhIHRyYW5lLlNpIGwnb24gZXhjZXB0ZSAyMDE1IGV0IDIwMTYsIGxlIG1hcmNoIG4nYSBjZXNzIGQndHJlIGVuIGJhaXNzZSBkZXB1aXMgMjAxMC4gVG91cyBsZXMgY2lyY3VpdHMgZGUgZGlzdHJpYnV0aW9uIHNvbnQgdG91Y2hzLCBtbWUgc2kgbGVzIGdyYW5kZXMgc3VyZmFjZXMgY3VsdHVyZWxsZXMgcydlbiBzb3J0ZW50IG1pZXV4LCBhdmVjIHVuZSBxdWFzaSBzdGFnbmF0aW9uICggMCwyJSkuIFBhciBnZW5yZSwgc2V1bHMgbGVzIGxpdnJlcyBqZXVuZXNzZSBldCBCRC9NYW5nYXMgc29udCBlbiBoYXVzc2UuIExlIGZvcm1hdCBwb2NoZSBzJ2VuIHRpcmUgYmllbiBnYWxlbWVudCwgYXZlYyBkZXMgdmVudGVzIGVuIGxncmUgcHJvZ3Jlc3Npb24uIlVuZSBhbm5lIGVuIGRlbWkgdGVpbnRlIkNldHRlIGNvbnRyYWN0aW9uIGR1IG1hcmNoIGludGVydmllbnQgYWxvcnMgcXVlIGxhIHByb2R1Y3Rpb24gcydlc3Qgc3RhYmlsaXNlIGV0IHF1ZSBsZSBwcml4IGRlcyBsaXZyZXMgcHJvZ3Jlc3NlIHBldSwgZXQgbW9pbnMgcXVlIGwnaW5kaWNlIGducmFsIGRlIGwnSW5zZWUsIGEgY29uc3RhdCBsZSBtYWdhemluZS4gQXZhbnQgbW1lIGxhIHB1YmxpY2F0aW9uIGRlIGNlcyBjaGlmZnJlcywgbGUgcHJzaWRlbnQgZHUgQ2VudHJlIG5hdGlvbmFsIGR1IGxpdnJlIChDTkwpLCBWaW5jZW50IE1vbmFkIGNvbnN0YXRhaXQgbGUgMjEgamFudmllciwgbG9ycyBkZSBzZXMgdnV4IGF1eCBDTkwsIHF1ZSAibCdhbm5lIDIwMTggbmUgcmVzdGVyYSBwYXMgY29tbWUgdW4gZ3JhbmQgbWlsbHNpbWUgcG91ciBsZSBsaXZyZSIuVW5lIGFuYWx5c2UgcGFydGFnZSBwYXIgbGUgcHJzaWRlbnQgZHUgU3luZGljYXQgbmF0aW9uYWwgZGUgbCdkaXRpb24gKFNORSksIFZpbmNlbnQgTW9udGFnbmUsLkEgbGlyZSBhdXNzaUxlIG1hbmdhIGV0IGxlcyBjb21pY3MgYW1yaWNhaW5zICBsJ2hvbm5ldXIgZHUgZmVzdGl2YWwgZGUgQkQgZCdBbmdvdWxtZSAyMDE5UnVtaWtvIFRha2FoYXNoaSwgbGEgY3JhdHJpY2UgZGUgUmFubWEgMS8yLCByZW9pdCBsZSBHcmFuZCBQcml4IGR1IGZlc3RpdmFsIGRlIEJEIGQnQW5nb3VsbWVMZSBGYXV2ZSBkJ09yIGR1IG1laWxsZXVyIGFsYnVtIEJEICBsJ0FtcmljYWluZSBFbWlsIEZlcnJpc1pvbWJpZXM6IGVudHJlIFNldWxzIGV0IFRoZSBXYWxraW5nIERlYWQsIGxhIEJEIEtpZHogcmV2aXNpdGUgbGUgZ2VucmVFY2hlYyBkZSBMdWMgRmVycnkgIGwnQWNhZG1pZSBmcmFuYWlzZQpZb3VyIGNhdCBjb3VsZCBiZSBzZW5zaXRpdmUgdG8gc3RyZXNzLCBvciBhbGxlcmdpYyB0byBhIG5ldyBmb29kIG9yIGdyb29taW5nIHByb2R1Y3QuIApBZnRlciB0aGlzIG1lbmFnZSBhIHRyb2lzIG91dCBvZiBoZWxsLCB0aGUgZGVtb24ncyB3aWZlIGRlbWFuZHMgdGhlaXIgcmluZ3MgYXMgdG9rZW5zIGFuZCByZXZlYWxzIGEgcHVyc2Ugb2YgOTggb3RoZXIgc3VjaCByaW5ncywgYWxsIGZyb20gbWVuIHNoZSBmdWNrZWQgd2hpbGUgaGVyIGh1c2JhbmQgc2xlcHQgYSBmZXcgZmVldCBhd2F5LiBUaGlzIGlzIHByb29mIHBvc2l0aXZlIHRoYXQgbW9kZXJuIGRvY3RvcnMgbXVzdCBwcmVzY3JpYmUgc2x1bWJlcmluZyBkZW1vbnMgYXMgYSBjdXJlIGZvciBlcmVjdGlsZSBkeXNmdW5jdGlvbi4uIApNZW4gaGF2ZSBldmVuIGxlc3MgZnJlZWRvbSB0byBkaXNwbGF5IHNleHVhbGl0eSkuIApUaGUgZnJhZ21lbnRzIHdlcmUgbm90IGluIGFueSByZWFsIHNlbnNlIHBvdGVudGlhbGx5IGFjdHVhbGx5IGV4Y3VscGF0b3J5IHZpZXdlZCBmcm9tIGxhdyBlbmZvcmNlbWVudCBwZXJzcGVjdGl2ZTsgdGh1cywgbm8gYmFkIGZhaXRoLiAKVGhlIHRoZSBndXkgaW4gdGhlIHZpZGVvIHdlbnQgY3JhenkgY2F1c2UgaGUgbGVmdCBhbmQgc2VjdXJpdHkgbGV0IGhpbS4gCldlIGtub3cgdGhhdCdzLCBhaGVtLCBsb29zZWx5IHJlbGF0ZWQgdG8gcmVub3ZhdGluZywgYnV0IHdlIGJyaW5nIHRoaXMgdXAgYmVjYXVzZSBpdCBpbGx1c3RyYXRlcyBhIGhlcmV0b2ZvcmUgdW5rbm93biBhc3BlY3Qgb2YgYXJjaGFlb2xvZ3k6IEl0J3MgcHJldHR5IG11Y2ggYWxsIGRvbmUgYnkgc3R1cGlkIGtpZHMganVzdCBydW5uaW5nIGFyb3VuZCBvdXRzaWRlLiBDYXNlIGluIHBvaW50OiAxMSB5ZWFyIG9sZHMgRXJpYyBTdGFtYXRpbiBhbmQgQW5kcmV3IEdhaW5hcml1IG9mIFRyb3ksIE1pY2hpZ2FuLCB3ZW50IGxvb2tpbmcgZm9yIGNyYXlmaXNoIGFuZCBjYW1lIGJhY2sgd2l0aCBhIG1hc3RvZG9uLiAKVGhlIGZyZWUgQ29tcGFuaW9uIEFwcCBvbiBpT1MgYW5kIEFuZHJvaWQgcGl0cyB0aGUgY29uc29sZSBwbGF5ZXIgYWdhaW5zdCB0aGUgb25lIGhvbGRpbmcgdGhlIHRhYmxldC4gRm9yIHRoZSBwZXJzb24gd2l0aCB0aGUgY29udHJvbGxlciwgaXQgYSBjaGVja3BvaW50IHJhY2Ugd2hpbGUgdGhlIG9wcG9uZW50IHdpdGggdGhlIHRvdWNoc2NyZWVuIGhhcyBhIG1vcmUgZmFzY2luYXRpbmcgam9iLiBUaGV5IGhhdmUgdG8gc3RvcCB0aGUgZHJpdmVyIGJ5IG1hbmlwdWxhdGluZyB0aGUgY3RPUy4gCkV2ZW4gd29yc2UsICJoZSBoYWQgbm8gYXRobGV0aWMgYWJpbGl0eSBvciB0cmFpbmluZywiIHNheXMgRGlWZWNjaGlvLiAiSSBoYWQgdG8gZ2V0IGhpbSBzd2VhdGluZyBhbmQgY29tZm9ydGFibGUgd2l0aCBmZWVsaW5nIHNvcmUgYXMgaGVsbC4iCkl0IHdhcyBsaWtlIHdhbGtpbmcgaW50byBhIHJvb20gZnVsbCBvZiBjcmlja2V0cy4uIApUaGVuLCBndWVzc2luZyB3aGF0IGhlIHdhcyBzdHJ1Z2dsaW5nIHdpdGgsIHdlIGFzc3VyZWQgaGltIHRoYXQgaXQgd2FzIGEgY29ycmVjdCBwcm9udW5jaWF0aW9uLiBIZSBkaWRuIGJ1eSBpdC4gTm8gcG9pbnQuIApSYnJvd25ydW5uZXIgIDIgcG9pbnRzICBzdWJtaXR0ZWQgNSBtb250aHMgYWdvCk9uZSBwYXJ0eSBsZWFkZXIgYWZ0ZXIgYW5vdGhlciBzdG9vZCB1cCB0byB2ZW50IGhpcyBzcGxlZW4gYXQgSW1yYW4gUWFkcmkgZHVvLiAKSSBkZWNpZGVkIHRoYXQgSSB3YW50ZWQgdG8gc3RhcnQgbXkgb3duIGJ1c2luZXNzLCBsZWF2ZSB0aGUgc3RyZXNzZnVsIHdvcmsgd29ybGQgYmVoaW5kIGFuZCBvZmZlciBSZWlraSBhbmQgaGVhbGluZyBtb2RhbGl0aWVzIHRvIHRoZSB3b3JsZC4gCkhlIGlzIG5vdGhpbmcgYnV0IGEgcG9zdGVyIGJveSBmb3IgdGhlIEFybWVuaWFucy4gV2VpcmQgaG93IHdoZW4gYSBUdXJraXNoIGhpc3RvcmlhbiB3aG8gZG9lc24gYWNjZXB0IHRoZSB3b3JkIGdlbm9jaWRlIGlzIHRhbGtlZCwgcy9oZSBpcyBhbHdheXMgYnJhbmRlZCBhcyBhIFR1cmtpc2ggcHJvcGFnYW5kYSBhZ2VudCB3aGVyZWFzIEFrY2FtIGlzIGluc3RhbnRseSByZWNvZ25pemVkIGFzIHRoZSBvYmplY3RpdmUgaGlzdG9yaWFuLkluIHRoYXQgaGFydmFyZCB2aWRlbywgaGUga2VwdCByZWZlcnJpbmcgdG8gaGlzIGJvb2sgaW4gdGhhdCBsZWN0dXJlIHdpdGhvdXQgc2hvd2luZyBhbnl0aGluZyBzdXBwb3J0aW5nIHRvIGhpcyBhcmd1bWVudHMuIApJIGluIFRYIDEwIGFuZCBteSB2b3RlIGlzIGRpbHV0ZWQgYnkgb3ZlciAxMDAgbWlsZXMgb2YgcnVyYWwgVGV4YXMuIE15IGRpc3RyaWN0IGluY2x1ZGVzIE5XIEhvdXN0b24sIHJ1cmFsIFRleGFzLCBTRSBBdXN0aW4sIGRvd250b3duIEF1c3RpbiwgYW5kIHdlc3QgQXVzdGluLi4gClRoZXNlIGFic3VyZCB0YWxlcyBzb2FrIHVwIGEgdG9uIG9mIG1hbmtpbmQncyBjb2xsZWN0aXZlIGJyYWluIHNwYWNlLCBhbmQgdGhvdWdoIHRoZXkgYWRtaXR0ZWRseSBmb2N1cyBvbiB0aGUgcGFydCB0aGF0J3Mgbm90IHRvbyBsaWtlbHkgdG8gZmluZCB0aGUgY3VyZSBmb3IgY2FuY2VyLCBJJ2QgYXJndWUgdGhleSBzaG91bGQgdG90YWxseSBiZSBmb3JjZWQgdG8gZWFybiB0aGVpciBrZWVwIC4gQnkgZW50ZXJ0YWluaW5nIHVzLiAKQSByZWNlbnQgSWxsaW5vaXMgbGF3IGhhcyBiYXJyZWQgc2V4IG9mZmVuZGVycyBmcm9tIHNvY2lhbCBuZXR3b3JraW5nIHNpdGVzLCBsaWtlIEZhY2Vib29rIGFuZCBMaW5rZWRJbi4gVGhhdCBtaWdodCBzZWVtIHJlYXNvbmFibGUgZm9yIHNvbWVvbmUgbGlrZSBHYXJyaWRvLCBidXQgd2hhdCBhYm91dCB0aGUgMTcgeWVhciBvbGQgZ2lybCB3aG8gYmVjb21lcyBhICJzZXh1YWwgcHJlZGF0b3IiIGZvciBoYXZpbmcgc2V4IHdpdGggaGVyIGJveWZyaWVuZCB3aG8gaXMgdmVyeSBuZWFybHkgMTY/IE9yIGNvbnNpZGVyIHRoZSBmYWN0IHRoYXQgYSBIdW1hbiBSaWdodHMgV2F0Y2ggcmVwb3J0IGZvdW5kLiAKSSBzZWUgbXlzZWxmIGluIHdoYXQgeW91IHdyaXR0ZW4uIEEgbG90IG9mIHRpbWUsIEkgd29ycmllZCBhYm91dCAic2xpcHBpbmcgdXAiLiBMaWtlIHdoZW4gbXkgbWFsZSBmcmllbmRzIGFyZSB0YWxraW5nIGFib3V0IHRoZWlyIGZlbWFsZSBjcnVzaGVzIG9yIGNlbGVicml0aWVzIHRoZXkgZmluZCBob3QsIEkgZmVlbCBwYW5pY2t5IGFuZCBhcyBpZiB0aGV5IHNlZSByaWdodCB0aHJvdWdoIG1lIGlmIEkgbGllIGFib3V0IGxpa2luZyB0aGlzIG9yIHRoYXQgZ2lybC4KQWxsIGdldHMgYmxlc3NlZCBieSBhY2NvdW50aW5nLiBOb2JvZHkgaXMgYnJlYWtpbmcgdGhlIGxhdywgdGhlIGluc2lkZXIgc2FpZC4gRmluYW5jaWFsIGVuZ2luZWVyaW5nIGlzIGFydGlmaWNpYWxseSBib29zdGluZyB0aGUgc3RvY2sgcHJpY2UuIApOYXR1cmFsbHkgdGhlIHRlbnNpb24gbWFrZXMgZm9yIHNvbWUgZ3JlYXQgZmlsbXMgYW5kIHRoZXJlIGhhdmUgYmVlbiBzb21lIGFic29sdXRlIGNsYXNzaWNzLiAKSnVqdWJhb2lsICAyIHBvaW50cyAgc3VibWl0dGVkIDMgbW9udGhzIGFnbwpJdCByZWFkLCAiMTEgMTEgMTIiLiBUaGlzIG51bWJlciBpcyBOb3ZlbWJlciAxMSwgMjAxMjsgYmVjYXVzZSB0aGUgSG9seSBTcGlyaXQgcmV2ZWFsZWQgdGhhdCB0aGUgbnVtYmVyIGFzY2VuZGluZyBmcm9tIGhlYXZlbiBpcyBhIGRhdGUuIEkgYXNrZWQgR29kIHdoYXQgSSB3b3VsZCB0ZWxsIHRoZSB3b3JsZCBhYm91dCB0aGlzLiAKVGhlIGdvb2QgbmV3cyBpcyB0aGF0IGNvb2tpbmcgYXQgdGhlIHJlY29tbWVuZGVkIGhlYXQgd2l0aCBmb29kIGluIHRoZSBza2lsbGV0IHdvbiBsZXQgeW91IGdldCBldmVuIGNsb3NlIHRvIHRoYXQgbGV2ZWwuIApOb3cgYW55b25lIGFuZCBldmVyeW9uZSBpcyBzZXJpb3VzIGFib3V0IHRoZSBwb2tlciBidXNpbmVzcyBieSBhbGwgbWVhbnMuIApEZW5uIGluIGRlciBTY2huaGVpdCBsaWVndCBlaW5lIHdvaGx0dWVuZGUgS3JhZnQuIApGb3JnZXQgYWJvdXQgR3NoYXJrbWFya2V0LiAKTCdhc3Ryb2xvZ28gdmkgZ3VpZGEgcXVpbmRpIG5lbGxhIGRlY2lmcmF6aW9uZSBkZWxsYSB2b3N0cmEgbWFwcGEgcGVyc29uYWxlIGUgbmUgdHJhZHVjZSBpbCBzaW1ib2xpc21vLCBzcGllZ2FuZG92ZW5lIHR1dHRpIGdsaSBhc3BldHRpLiAKQW5kIHRoZXJlJ3Mgbm8gZWFzeSB3YXkgdG8gc2hyaW5rIGl0IGJhY2sgZG93bi4gS2VlcCBnb2luZyBhbmQgaXQnbGwgc3RyZXRjaCBldmVuIG1vcmUuIExlc3NvbiBsZWFybmVkLiAKIkkgd2FzIG9ubHkgaG9waW5nIGhlIGhhZCB0aGUgb3RoZXIgZm91ciBvZiBhIGtpbmQuIEkgd2FzbiBldmVuIHRoaW5raW5nIGFib3V0IHRoZSBtb25leSBJIHdvbiBmcm9tIHRoZSBoYW5kLiBJdCB3YXMgbWludXNjdWxlIHRvIHRoZSBiYWQgYmVhdCBqYWNrcG90LiIKR2l2ZW4gY29tbXVuaWNhdGlvbnMgZGVsYXlzIGJldHdlZW4gRWFydGggYW5kIE1hcnMsIGFuZCB0aGUgcmVsYXRpdmUgaW50aW1hY3kgYW5kIGtub3duIHRydXN0IGJldHdlZW4gdGhlIGRvY3RvciBhbmQgdGhlIGNyZXcsIGl0IGxpa2VseSB0aGF0IHRoZXkgd2lsbCBmaW5kIHRoZW1zZWx2ZXMgaW4sIGF0IGxlYXN0LCBhIHN1cHBsZW1lbnRhcnkgcm9sZSB0byBFYXJ0aCBiYXNlZCB0ZWFtcyBpbiB0aGlzIHJlZ2FyZC4uIApUaGlzIGlzIGNvbW1vbi4gVGhlIHJlYWwgcXVlc3Rpb24gdGhleSBnZXR0aW5nIGF0IGlzIHdoZXRoZXIgb3Igbm90IHlvdSBkaWxpZ2VuY2Ugd2FzIGRvbmUgdG8gZmlndXJlIG91dCB0aGUgcmlnaHQgdmVuZG9yIGFuZCBwcm9kdWN0IGZvciB0aGUgY29tcGFueSwgb3Igd2FzIHNvbWV0aGluZyBvcmRlcmVkIHdoYXQgZmlyc3QgY2FtZSB0byBtaW5kPyBUaGlzIGlzIHBlcmZlY3RseSByZWFzb25hYmxlIGFuZCB5b3Ugc2hvdWxkIGJlIGNvbWZvcnRhYmxlIGFuc3dlcmluZyB0aG9zZSBxdWVzdGlvbnMuCkZvciBzdXJlLCBLZW5ueSBkZWZpbml0ZWx5IGRvZXMgZG8gdGhpbmdzIGxpa2UgdGhhdCB0b28gYnV0IGl0IG5vdCBhcyBjb25zaXN0ZW50IGFzIEkgbGlrZSBpdCB0byBiZSBhbmQgaGUgZGVmaW5pdGVseSBvdmVyc2VsbHMgYSBsb3Qgb2YgbW92ZXMgYnV0IHRoYXQgcmVhbGx5IG1vcmUgaGlzIHN0eWxlIHJhdGhlciB0aGFuIGEgcmVhbCBmbGF3LiAKQ2hlY2sgdGhlIHR1cm4gb29wIGFmdGVyIGNoZWNrIHJhaXNpbmcuLiAKSWYgeW91IGxvc2UgdGhlIHJvdW5kLCB0YWtlIG9mZiBhbiBhcnRpY2xlIG9mIGNsb3RoaW5nIG9mIHlvdXIgY2hvaWNlLiAKVGhlIG9ubHkgY2F2ZWF0IEkgd291bGQgbWVudGlvbiBpbiB0aGlzIGFyZWEgaXMgdGhhdCBwYXJlbnRzIGRvbiBhbHdheXMgYWdyZWUgYWJvdXQgYXV0aXNtIHRyZWF0bWVudHMgb3IgY2F1c2VzLiBBcyBhIHJlc3VsdCwgcGFyZW50cyBzb21ldGltZXMgcmVhY3Qgc3Ryb25nbHkgdG8gc3R1ZGllcywgYXJ0aWNsZXMsIGV0Yy4gClllcy4gSWYgYW55dGhpbmcsIGhhdmluZyBhIGNoaWxkIGlzIGxpa2UgaGF2aW5nIGEgbW9ydGdhZ2UuIApIaWdoZXIgZGlldGFyeSBjaG9sZXN0ZXJvbCBpbnRha2Ugd2FzIHNpZ25pZmljYW50bHkgYXNzb2NpYXRlZCB3aXRoIGFuIGluY3JlYXNlZCByaXNrIG9mIGltcGFpcmVkIG1lbW9yeSBhbmQgZmxleGliaWxpdHkuCkhlcmUncyB3aGF0IEkgdGhpbmsgYWJvdXQgd2hlbiBJIHRoaW5rIGFib3V0IHRoZXNlIG1lbiBkb2luZyB0aGlzIGpvYjogdGhhdCB0d28gdGVhbXMsIEJyaXRpc2ggYW5kIEdlcm1hbiwgc3RhcnQgdG8gdHVubmVsIHRvd2FyZHMgZWFjaCBvdGhlcidzIGxpbmVzLCBhbmQgc29tZWhvdywgaW4gdGhlIG1pZGRsZSBvZiB0aGUgYmF0dGxlZmllbGQsIHNvbWVob3cgbWFuYWdlIHRvIGRpZyBkaXJlY3RseSB0b3dhcmRzIG9uZSBhbm90aGVyLCB0aGVpciB0dW5uZWxzIGxpdGVyYWxseSBjb2xsaWRpbmcuIEhhbmQgdG8gaGFuZCBjb21iYXQgdGhyb3VnaCB0aGUgb3BlbmluZyBjb25uZWN0aW5nIHRoZSB0d28gc2FwcGVyIHR1bm5lbHMsIHRoZW4gZ3VuZmlyZS4gQWxlcnRlZCwgdGhlIGFydGlsbGVyeSBmcm9tIGVhY2ggc2lkZSB6ZXJvIGluIG9uIHdoYXQgaXMgc3VzcGVjdGVkIHRvIGJlIHRoZSBvcGVuaW5nIGVuZCBvZiB0aGUgdHVubmVscywgcHVtbWVsIHRoZW0sIGRlc3Ryb3lpbmcgdGhlIGFjY2Vzcy4gU28gbm93LCBib3RoIHNldHMgaW4gd2hhdCBpcyBub3cgdmlydHVhbGx5IG9uZSB0dW5uZWwsIGFyZSBmaWdodGluZyBpbiB0aGUgZGFyay4gRXZlbiB0aG91Z2ggdGhlIHRvcHNpZGUgaXMgb25seSB0d28gZmVldCBhd2F5LCBhbnkgaG9sZSB3b3VsZCBvcGVuIGludG8gdGhlIGtpbGxpbmcgem9uZSwgbWFraW5nIGl0IGltcG9zc2libGUgdG8gZXNjYXBlIHRoYXQgd2F5LiBJdCB3b3VsZCBiZSBhIGJhZCBwbGFjZSB0byBiZS4KU2hvb3Qgb3V0IFRvdXJuYW1lbnRzIDoKJDIwLiAKSSB0aGluayB0aGUgZ3V5IHlvdSByZXNwb25kaW5nIHRvIGp1c3QgaGF0ZXMgY2FwaXRhbGlzbSBiZWNhdXNlIGNhcGl0YWxpc20gcmV3YXJkcyBpbnRlbGxpZ2VudCBsYWJvciwgd2hpY2ggdGhleSBhcmUgaW5jYXBhYmxlIG9mIChvciBhdCBsZWFzdCB0aGV5IHRoaW5rIHNvKS4gVGhleSBmYWlsIHRvIHJlYWxpemUgdGhhdCB0aGUgdmVyeSBwbGF0Zm9ybSB0aGF0IHRoZXkgZXNwb3VzaW5nIHRoZWlyIGFudGkgY2FwaXRhbGlzdCB2aWV3cyBvbiBvbmx5IGV4aXN0cyBiZWNhdXNlIG9mIGNhcGl0YWxpc20uIFRoZXkgYWxzbyBmYWlsIHRvIHJlYWxpemUgdGhhdCBiZW1vYW5pbmcgYSBsb3cgc3RhbmRhcmQgb2YgbGl2aW5nIGFuZCBzaW11bHRhbmVvdXNseSBjb21wbGFpbmluZyBhYm91dCBidXNpbmVzc2VzIGNvbWluZyB0byB0aGUgc3RhdGUgaXMgY29tcGxldGVseSBhbnRpdGhldGljYWwuLiAKT3JnYW5pemF0aW9uIEVmZmVjdGl2ZSBwcm9qZWN0IG1hbmFnZXJzIHR5cGljYWxseSBleGNlbCBhdCBvcmdhbml6YXRpb24uIFRvIHJlZmxlY3QgdGhpcyBvbiB5b3VyIHJlc3VtZSwgeW91IG11c3QgYmUgYWJsZSB0byBzaG93IHlvdSBjYW4gc3VtbWFyaXplIGNvbXBsZXggaW5mb3JtYXRpb24uIEZhaWx1cmUgdG8gZG8gc28gY2FuIGxlYWQgcG90ZW50aWFsIGVtcGxveWVycyB0byBjb25jbHVkZSB0aGF0IHlvdSBjYW4ndCBjb21tdW5pY2F0ZSBvciBwcmlvcml0aXplIHdlbGwuIE1hdGNoIHlvdXIgY2FyZWVyIG9iamVjdGl2ZSB3aXRoIHRoZSBjb21wYW55J3Mgc3RyYXRlZ3kgZ29hbHMuIEZvciBleGFtcGxlLCBpZiB5b3UncmUgYXBwbHlpbmcgdG8gYW4gSVQgY29tcGFueSwgZm9jdXMgb24geW91ciBza2lsbHMgcmVsYXRlZCB0byBtYW5hZ2luZyBoYXJkd2FyZSBhbmQgc29mdHdhcmUgZGV2ZWxvcG1lbnQgcHJvamVjdHMgZWZmZWN0aXZlbHkuClNvZGFTdHJlYW0sIHdoaWNoIGlzIG5vdyBvd25lZCBieSBQZXBzaUNvIGFmdGVyIGEgVVMkMy4yIGJpbGxpb24gYWNxdWlzaXRpb24gd2FzIGNvbXBsZXRlZCBsYXRlIGxhc3QgeWVhciwgc2F5cyB0aGF0IENhbmFkYSBoYXMgYmVjb21lIGl0cyBmb3VydGggbGFyZ2VzdCBtYXJrZXQgZ2xvYmFsbHksIHdpdGggc2l4IHBlciBjZW50IG9mIENhbmFkaWFuIGhvdXNlaG9sZHMgdXNpbmcgU29kYVN0cmVhbSBtYWNoaW5lcy4KWW91IG9ubHkgZmxvcCBhIHBhaXIgMS8zcmQgKGlzaCkgb2YgdGhlIHRpbWUsIHNvIGl0IGdvaW5nIHRvIGJlIGhhcmQgdG8gY29udGludWUganVzdCB3aGVuIHlvdSBoaXQuNCkgQyBiZXQgbW9yZSB3aGVuIE9PUCAgZGVwZW5kcyBvbiB0aGUgc3Rha2VzOyBhdCBsb3dlciBzdGFrZXMgaXQgcHJvYmFibHkgZG9lc24gbWF0dGVyIG11Y2guWW91IG5lZWQgdG8gc3RhcnQgdGhpbmtpbmcgYSBiaXQgbW9yZSB0aG9yb3VnaGx5IGFib3V0IHRoZSBnYW1lLCB0aG91Z2guIApIb3dldmVyLCB0aGVyZSBhcmUgb3RoZXIgcmVmZXJlbmNlcyB0byBwb2Noc3BpZWwgLCB3aGljaCBpcyBhIEdlcm1hbiBnYW1lLiAKS2VlcCBhdCBpdCAuIApGb3IgZXhhbXBsZSwgbWFueSBpbmRpdmlkdWFscyB3aG8gdHJhaW4gd2l0aCB3ZWlnaHRzICAgZnJvbSBvcmRpbmFyeSBwZW9wbGUgdHJ5aW5nIHRvIHN0YXkgaW4gc2hhcGUgdG8gY29tcGV0aXRpdmUgYm9keWJ1aWxkZXJzICAgb2Z0ZW4gZGV2ZWxvcCBhZGhlc2lvbnMgdGhhdCBmdXNlIHRvZ2V0aGVyIHRocmVlIG9mIHRoZSBiaWNlcHMgbXVzY2xlcyAoYnJhY2hpYWxpcywgYnJhY2hpb3JhZGlhbGlzIGFuZCBiaWNlcHMgYnJhY2hpaSkuCkl0IGtpbmQgb2YgYW4gb3BlbiBzZWNyZXQgaGVyZS4gClByb3RlY3QgbGlmZSwgcHJvdGVjdCB0aGUgc3ByZWFkIG9mIGRlc3RydWN0aW9uLiAKTm90IGdvbm5hIGxpZSwgdGhpcyBjb21tZW50IHdhcyByZWFsbHkgcmVhc3N1cmluZy4gClRoaXMgZWZmZWN0aXZlbHkgZWxpbWluYXRlcyBtYW55IG1ldGhvZHMgb2YgdHJpY2sgc2h1ZmZsaW5nL3RyaWNrIGN1dHRpbmcvYm90dG9tIGRlYWxpbmcuLiAKSSBzdG9wcGVkIHRha2luZyBpdCB0aG91Z2ggYmVjYXVzZSBpdCBtYWRlIG1lIGZlZWwgInRpbmdseSIgaW4gbXkgZXh0cmVtaXRpZXMuIApUaGF0IGlzIGFsd2F5cyBvdXIgZ29hbC4gV2UgbG9vayBmb3J3YXJkIHRvIHNwZWFraW5nIHdpdGggeW91IHNvb24sIGFuZCBob3BlZnVsbHkgd2UgaGF2ZSB0aGUgY2hhbmNlIHRvIGhvc3QgeW91IGFnYWluIGluIHRoZSBmdXR1cmUgYWZ0ZXIgd2UgY2xlYXIgdGhpcyB1cC4gCk15IGFkdmljZSBpcyB0byBnbyB0byB0aGUgcG9saWNlIHdpdGggdGhpcyBpbmZvLiAKIlRoZSBIb3VzZSBpcyBmb3VuZGVkIG9uIHRyYWRpdGlvbiBhbmQgY2VyZW1vbnksIiBzaGUgc2F5cywgImJ1dCB3ZSBhbHNvIHdhbnQgdG8gZW1icmFjZSBiZWluZyBpbm5vdmF0aXZlIGFuZCBjcmVhdGl2ZS4gV2UgbWl4IHRyYWRpdGlvbiBhbmQgaW5ub3ZhdGlvbiwga2VlcGluZyB0aGUgaGVyaXRhZ2UgYXNwZWN0cyB3aGlsZSBtb3Zpbmcgd2l0aCB0aGUgdGltZXMuIEZvciBleGFtcGxlLCB3ZSdyZSB3b3JraW5nIG9uIHBsYW5zIHRvIHJldmlzZSBvdXIgZW5jbG9zZWQgb2ZmaWNlcyB0byBvcGVuLCBhY3Rpdml0eSBiYXNlZCB3b3Jrc3BhY2VzIHRoYXQgcHJvbW90ZSBjb2xsYWJvcmF0aW9uLCB3aGlsZSBwcm92aWRpbmcgdGhlIHRvb2xzLCB0ZWNobm9sb2d5IGFuZCBpbmZyYXN0cnVjdHVyZSBuZWVkZWQgdG8gc3VwcG9ydCB0aGF0LiIKWW91IGFyZSBhbG1vc3QgZ3VhcmFudGVlZCB0byBsb3NlIGFuZCB0aGlzIGlzIHdoeSwgd2hpbGUgdGhlIGhhbmRib29rIG1heSBoYXZlIHNwZWNpZmljcywgdGhlIHJ1bGVzIGFyZSBvZnRlbiBmbHVpZCBtZWFuaW5nIGNhc2UgYnkgY2FzZS4gCkhhdmluZyBlc3RhYmxpc2hlZCB0aGUgYmVnaW5uaW5nIGFuZCB0aGUgZW5kIG9mIE1vbGx5IEJsb29tIHN0b3J5IGZyb20gdGhlIG91dHNldCAgIHNoZSB3cm90ZSBhIGJlc3Qgc2VsbGluZyBib29rIHRoYXQgYWxsIGJ1dCBkYXJlZCB0aGUgRkJJIHRvIGNvbWUgYWZ0ZXIgaGVyICAgdGhlcmUgaXMgZXZlcnkgY2hhbmNlIE1vbGx5IEdhbWUgbWF5IGhhdmUgcGFpbnRlZCBpdHNlbGYgaW50byBhIHRpZ2h0IG5hcnJhdGl2ZSBjb3JuZXIuCkkgcmVhbGl6ZSB0aGluZ3MgaGF2ZSBoYXBwZW5lZCBhbmQgdGhpbmdzIGFyZSBkZWZpbml0ZWx5IG1vdmluZyBub3csIGJ1dCBJIGdvaW5nIHRvIHNpdCBiYWNrIGFuZCB3YWl0IHVudGlsIGEgbW91bnRhaW4gb2Ygc2hpdCBnb2VzIHRocm91Z2ggYSBqZXQgdHVyYmluZS4gCkJhZ2dsZXdhZ2dsZSAgMiBwb2ludHMgIHN1Ym1pdHRlZCAxIGhvdXIgYWdvCkl0IGluY2x1ZGVzIEV4Y2VsLCBXb3JkLCBQb3dlclBvaW50LCBBY2Nlc3MsIE91dGxvb2suIApQcmFjdGljZSB3aXRoIGEgc2luZ2xlIGJhbGwgYXQgYSB0aW1lLCBvbmUgaGFuZCB0aGVuIHRoZSBvdGhlciwgdW50aWwgeW91ciB0aHJvd3MgYXJlIGNvbnNpc3RlbnRseSBhY2N1cmF0ZS4gUHJhY3RpY2UgaW4gZnJvbnQgb2YgeW91ciBiZWQgKHNvIHlvdSB3b24ndCBoYXZlIHRvIGJlbmQgZG93biB0byB0aGUgZmxvb3IgdG8gY2F0Y2ggZmFsbGVuIGJhbGxzKSBhbmQgZG9uJ3Qgd29ycnkgYWJvdXQgY2F0Y2hpbmcgdGhlIGJhbGxzLiBGb2N1cyBvbiB0aHJvd2luZy4gCkl0IG5vdCBwZXJmZWN0LCBieSBhbnkgc3RyZXRjaCwgYnV0IEkgdGhpbmsgaXQgYSBmYXIsIEZBUiBiZXR0ZXIgcmVwcmVzZW50YXRpb24gb2YgcGxheWVyIGVmZmVjdGl2ZW5lc3MgdGhhbiBWVEFSLiBSaWdodCBub3csIGl0IGJ1aWx0IGZvciBpbnRyYSB0ZWFtIGNvbXBhcmlzb25zIG9ubHksIGJ1dCBJIGhhdmUgYSByZWFzb25hYmxlIHRoZW9yeSBmb3IgaG93IHRvIHVzZSBGVFMgZGF0YSB0byBjb252ZXJ0IHBsYXllciByYXRpbmdzIHRvIGEgZ2xvYmFsIHNjYWxlLiBpdCBwcm9iYWJseSBiZSBteSBuZXh0IHByb2plY3QgYWZ0ZXIgSSBmaW5pc2ggd2l0aCB0aGUgcGxheW9mZiBidXN5IHNlYXNvbi5SdWJpY2trICAyIHBvaW50cyAgc3VibWl0dGVkIDExIG1vbnRocyBhZ29JIHJlYWxseSBlbmpveWVkIGl0LiAKSSB3YXMgZGlhZ25vc2VkIHdpdGggZGVwcmVzc2lvbiA0IHllYXJzIGFnbyBhbmQgd2FzIHByZXNjcmliZWQgYW50aSBkZXByZXNzYW50cy4gSSB0b29rIHRoZW0gZm9yIGFib3V0IGEgeWVhciBhbmQgdGhlbiBJIGdvdCBzdXBlciBsdWNreS4gCkhlIGhhcyBwcm9kdWNlZCBtYW55IHZhY2NpbmVzIGluY2x1ZGluZzogRFRQLCBCQ0csIHRoZSB3b3JsZCdzIGZpcnN0IEhpYiBDb25qdWdhdGUsIEFkdWx0IFBuZXVtb2NvY2NhbCB2YWNjaW5lLCB0aGUgd29ybGQncyBmaXJzdCBjaGlsZHJlbidzIHBuZXVtb2NvY2NhbCBjb25qdWdhdGUgdmFjY2luZSAoUHJldm5hciksIHRoZSB3b3JsZCdzIGZpcnN0IG1lbmluZ29jb2NjYWwgY29uanVnYXRlIHZhY2NpbmUsIE1lYXNsZXMsIGJvdGggb3JhbCBhbmQgaW5qZWN0ZWQgcG9saW8gdmFjY2luZXMsIFJhYmllcywgVHlwaG9pZCwgQ2hvbGVyYSwgYW5kIGEgbnVtYmVyIG9mIHByZSBjbGluaWNhbCBhbmQgY2xpbmljYWwgdmFjY2luZXMgZm9yIEhJViBhbmQgb3RoZXIgZGlzZWFzZXMuIEhlIGhhcyBkZXNpZ25lZCBhbmQgY29uc3RydWN0ZWQgbWFueSBiaW90ZWNoIGZhY2lsaXRpZXMgYXJvdW5kIHRoZSB3b3JsZC4uIApUaGluayB0aGUgT2xzb24gY2FzZSB3YXMgdGhlIGJpZ2dlc3Qgb25lLiBUaGUgUkNNUCB3YXMgcmVhbGx5IHBhbmlja2luZyBhYm91dCB0aGUgYm9kaWVzIGJlaW5nIGZvdW5kIGFuZCBhdCB0aGF0IHRpbWUgbm8gb25lIHdhcyBhcnJlc3RlZC4gRmluYWxseSB0aGV5IHBpY2tlZCB1cCBPbHNvbi4gVGhleSBoYWQgYmVlbiBmb2xsb3dpbmcgaGltLCBvZiBjb3Vyc2UsIHNhaWQgR2FycmV0dCwgbG9va2luZyBiYWNrIG9uIHRoZSBzdG9yeSB0aGF0IGhhZCBncmlwcGVkIHRoZSBMb3dlciBNYWlubGFuZCBpbiBmZWFyLgpCYXR0bGVzIHdlcmUgZnVuLCBJIGNvdWxkIGtpbGwgdXB3YXJkcyBvZiAyMCBkdWRlcy5Pbmx5IHByb2JsZW0gd2FzIFhQIHdhcyBoYXJkIHRvIGNvbWUgYnksIGV2ZW4gY29tcGxldGluZyBldmVyeSBhcmVhIGFuZCBzaWRlIG1pc3Npb24gSSBkaWRuJ3QgcmVhY2ggbGV2ZWwgNTAgdW50aWwgSSB3YXMgODAlIHRocm91Z2guIApMYXMgc2lndWllbnRlcyBDb25kaWNpb25lcyBkZSBzZXJ2aWNpbyBzZSBhcGxpY2FuIGFsIHVzbyBkZSBlc3RhIFJlZC4gVXN0ZWQgZXMgZWwgbmljbyByZXNwb25zYWJsZSBkZSBzdSBjb25kdWN0YSB5IGRlbCBjb250ZW5pZG8gcXVlIGRlcG9zaXRlIGVuIGxhIFJlZCwgYXMgY29tbyBkZSBjdW1wbGlyIGVzdGFzIGNvbmRpY2lvbmVzLiBQb3IgZWwgaGVjaG8gZGUgcmVnaXN0cmFyc2UsIHVzYXIgbyBuYXZlZ2FyIHBvciBlc3RhIFJlZCwgcmVjb25vY2UgcXVlIGhhIGxlZG8sIGVudGVuZGlkbyB5IGVzdCBkZSBhY3VlcmRvIGNvbiBlc3RhciBzdWpldG8gYSBlc3RhcyBjb25kaWNpb25lcy4gRXN0YSBSZWQgbm8gZXN0IGRpcmlnaWRhIGEgbmlvcyBtZW5vcmVzIGRlIDEzIGFvcyB5IHNvbG8gc2Ugb2ZyZWNlIGEgdXN1YXJpb3MgcXVlIHRlbmdhbiAxMyBhb3MgZGUgZWRhZCBjb21vIG1uaW1vLiBUb2RhIHBlcnNvbmEgcXVlIG9mcmV6Y2Egc3VzIGRhdG9zIHBlcnNvbmFsZXMgYSB0cmF2cyBkZSBlc3RhIFJlZCBkZWNsYXJhIHF1ZSB0aWVuZSBjb21vIG1uaW1vIDEzIGFvcyBkZSBlZGFkLgpJZiB5b3UncmUgbG9va2luZyBmb3IgdG9wIG5vdGNoIHByb2Zlc3Npb25hbCBxdWFsaXR5LCB0aGlzIHJldmlldyBvZiB0aGUgMTAwIFBhdWxzb24gUGhhcmFvaCBQb2tlciBDaGlwIFNldCBzaG91bGQgaGVscCB5b3UgZGVjaWRlIGl0IGlzIGEgZ3JlYXQgY2hvaWNlIGZvciB5b3UuIApTaGUgc2F5cyBzaGUgd2FzIGFscmVhZHkgcGxhbm5pbmcgb24gZW5kaW5nIHRoaW5ncyB3aXRoIGhpbSwgYnV0IGdpdmVuIHRoZSBkZXRhaWxzIG9mIHRoZSBzdWxpdHVhdGlvbiwgSSBoYXZlIGV2ZXJ5IHJlYXNvbiB0byBiZWxpZXZlIHRoYXQgdGhpcyB3b3VsZCBzdGlsbCBiZSBnb2luZyBvbiBub3cgaWYgaGUgc3RpbGwgd29ya2VkIHRoZXJlLgpBbnkgYWR2aWNlIG90aGVyIHRoYW4gdG8gZ2V0IGEgbmV3IGdpcmxmcmllbmQ/IEhvbmVzdGx5IGV2ZXJ5b25lIEkgYXNrIGluIG15IGxpZmUgc2F5cyBJIGRvbiBzZWUgd2h5IHNoZSBjYXJlcywgaXRzIGp1c3QgYSBob2JieS4gU2F5IHlvdSBnaXZlIHVwIHBva2VyLCBwcm9ibGVtIHNvbHZlZCByaWdodD8gVW5sZXNzIHNoZSBkZWNpZGVzIHNoZSBkb2VzbiB3YW50IHlvdSB0byBzZWUgeCBmcmllbmQgYW55bW9yZSwgb3IgZGVjaWRlcyB3YXRjaGluZyBzdXBlcmhlcm8gbW92aWVzIGlzbiBmb3IgeW91LCBwZXJoYXBzIHNoZSBkb2VzbiB3YW50IHlvdSBzcGVuZGluZyB5b3VyIG1vbmV5IG9uIGdvbGYgbGVzc29ucyBvciBhbnkgb3RoZXIgaG9iYnkgdGhhdCB5b3UgZW5qb3kuIFNoZSBjb3VsZCB2ZXJ5IHdlbGwgYmUgY29udHJvbGxpbmcgYW5kIGVtb3Rpb25hbGx5IG1hbmlwdWxhdGl2ZSBhbmQgaWYgc2hlIGNhbiBwdXQgZm9ydGggYSB2YWxpZCBhcmd1bWVudCBmb3IgeW91IHRvIHN0b3AgdGhlbiB5b3UgbmVlZCB0byBwdXQgeW91ciBmb290IGRvd24gb24gcHJpbmNpcGFsIGFsb25lLi4gCklmIHlvdSB3YW50IHRvIHJlYWQgYW4gYXJ0aWNsZSB0aGF0IGFmZmlybXMgZXZlcnl0aGluZyB5b3UndmUgYmVlbiB0b2xkIGFib3V0IGhpZ2ggbnVtYmVycyBvZiBpbGxlZ2FsIGltbWlncmFudHMgYnV0IGluZm9ybXMgeW91IG9uIHdoeSBhIHdhbGwgaXMgbm90IHRoZSBzb2x1dGlvbiB0aGlzIGlzIGEgZ29vZCByZWFkLiAKQmFyeWxhIHNhaWQgdGhhdCB0aG9zZSBmdW5kcyBjYW1lIGZyb20gdGhlIHNhbGUgb2YgTXIuIApTaGUgc2FpZCB3ZWxsIHRoYXQgdGhlIHdheSBpdCBpcywgc28gdG91Z2guIEkgd2Fsa2VkIHVwIGEgY291cGxlIGZsaWdodHMgb2Ygc3RhaXJzLCB0byB0YWxrZWQgdG8gYSBtYW5hZ2VyIGluIHRoZSBzYW1lIGhvc3BpdGFsIGluIGFub3RoZXIgZGVwYXJ0bWVudCBhbmQgc2FpZCBJIHdpbGwgY29tZSB3b3JrIGZvciB5b3Ugd2hlbiBJIGdldCBiYWNrIGZyb20gbXkgNiB3ZWVrIHZhY2F0aW9uIGlmIHlvdSB3YW50IG1lIHRvLiAKSSBhbHdheXMgdHJ5IHRvIGVuY291cmFnZSBwZW9wbGUgd2hvIHdhbnQgdG8gZG8gc29tZXRoaW5nIGxpa2UgdGhpcyB0byBwbGVhc2UgdGhpbmsgb2YgYWx0ZXJuYXRpdmVzLCBiZWNhdXNlIHRoZXJlIGlzIGFsd2F5cyBzb21lb25lIG9uIHRoZSBvdGhlciBlbmQgd2hvJ3Mgam9iIHlvdSBtaWdodCBtYWtlIGhhcmRlci4gCjEwIHBvaW50cyAgc3VibWl0dGVkIDcgZGF5cyBhZ29WZXJ5IGludGVyZXN0aW5nIHdhdGNoLiAKSW4gYm90aCwgYSBjb3JlIHNraWxsIGlzIGxldmVyYWdpbmcgcmFuZG9tIG91dGNvbWVzIHRvIHlvdXIgYWR2YW50YWdlLiAKU2Vjb25kLCBpZiBCQiBpcyB0aGlua2luZyBhdCBhbGwgaGUga25vd3MgdGhlIDIgY2FsbGVycyBpbiBiZXR3ZWVuIHlvdSBhcmUgY3JhenkgbG9vc2UgYW5kIHRoaXMgaXMgdGhlIHBlcmZlY3Qgc3BvdCBmb3IgYSBzcXVlZXplLiAKVGhlc2UgYXJlIGJvdGggY29tcGxldGVseSB2YWxpZCBjb21wbGFpbnRzIGZvciBlbnRlcnByaXNlIHNjYWxlIHVzZXJzLiAKTW9yc2UgRWxlY3RybyBNYWduZXRpYyBUZWxlZ3JhcGgiLjEuIApBc2sgeW91ciBnaXJsZnJpZW5kIHRvIGNob29zZSB3aGljaCBtYXNzYWdlIG9pbCBvciBsb3Rpb24gc2hlIHdvdWxkIHdhbnQgeW91IHRvIHVzZS4gClJlYXBlciBpcyB0aGUgbGVhZGVyIG9mIExvcyBNdWVydG9zLCBvciwgd2FzIGFueXdheSwgYW5kIGhpcyBNYXJpYWNoaSBzdWl0IHdhcyBoaXMgTG9zIE11ZXJ0b3Mgb3V0Zml0LiBJdCBhbHNvIG1ha2VzIHNlbnNlIGJlY2F1c2Ugd2hlbiB0aGUgb3RoZXIgbWVtYmVycyBvZiBMb3MgTXVlcnRvcyBnZXQgemFwcGVkLCBpdCBzaG93cyBza2VsZXRvbiB0YXR0b29zIChvciBzb21ldGhpbmcgbGlrZSB0aGF0LCB0aGV5IGFyZSBUaGUgRGVhZCIuIApUaGUgY29tcGFueSBhbHNvIGNsYWltZWQgdGhhdCBQb2tlciBjYXIgd2FzIHJlZ2lzdGVyZWQgYXMgYSBwcml2YXRlIHZlaGljbGUgaG93ZXZlciBoZSB1c2VkIGl0IG9uIGhpcmUgYW5kIHJld2FyZCBiYXNpcyBmb3IgaGlzIFVtYSBTaGl2IFRvdXJzIGFuZCBUcmF2ZWxzLiBIb3dldmVyLCB0aGUgZm9ydW0gcGFpZCBoZWVkIHRvIFBva2VyIGV4cGxhbmF0aW9uIG9mIGhvdyBoZSBoYWQgdG8gZGVsYXkgdGhlIGludGltYXRpb24gb2YgdGhlZnQgb24gU2F0dXJkYXkgbmlnaHQgYnkgYSBkYXkgc2luY2UgdGhlIGNvbXBhbnkgb2ZmaWNlIHdhcyBjbG9zZWQgb24gU3VuZGF5LgpNdXJyYXkgQWJyYWhhbSkgdG8ga2lkbmFwIFRvb3RobGVzcywgSGljY3VwJ3MgYmxhY2sgTmlnaHQgRnVyeS4gR3JpbW1lbCBpcyBtb3JlIGludGVyZXN0ZWQgaW4ga2lsbGluZyBUb290aGxlc3MgdGhhbiBtYWtpbmcgaGltIGEgY2FwdGl2ZSBidXQgYWdyZWVzIHRvIHRoZSB0ZXJtcyBhbmQgdXNlcyBhIG5ld2x5IGRpc2NvdmVyZWQgZmVtYWxlIHdoaXRlIE5pZ2h0IEZ1cnkgYXMgYmFpdC4uIApZb3UgaG9waW5nIGZvciB2aWxsaWFuIHRvIGhhdmUgdGhlIG5ha2VkIEFjIGVzc2VudGlhbGx5IG9uIHRoZSByaXZlci4gCkEgd2FsbCB0aGF0IHBhcnRpYWxseSB1c2VzIG5hdHVyYWwgZmVhdHVyZXMgd2l0aCB0aGUgaW50ZW50IHRvIGNvbXBsZXRlbHkgc2VhbCBvZmYgdGhlIGJvcmRlciB3aXRob3V0IChpbiB0aGVpciBlc3RpbWF0aW9uKSBwYXNzYWJsZSBnYXBzIGlzIGNlcnRhaW5seSBjb2FzdCB0byBjb2FzdCwgYmFyIGlycmVsZXZhbnQgcGVkYW50cnksIGFuZCBhYnNvbHV0ZWx5IHdoYXQgaGUgcHJvbWlzZWQuIApEb2lzIGFtaWdvcyBxdWUgZXN0IGRlc2NvYnJpbmRvIGNvbW8gam9nYXIgZSB0ZW50YW5kbyBnYW5oYXIgZGluaGVpcm8gam9nYW5kbyBwb2tlci4KSSB0aGluayBpdCBhIHJlYWN0aW9uIGJvcm4gb2YgZnJ1c3RyYXRpb24uIEltYWdpbmUgYSBzaW5nbGUgbW90aGVyIHdvcmtpbmcgdHdvIGpvYnMsIHJhaXNpbmcga2lkcyBhbmQgc2VydmljaW5nIGEgbWVkaWNhbCBiaWxsLiBTaGUgbWFrZXMgMzAgdG8gNTBrIGEgeWVhci4gClRoZSBhbnRpcGFzdGkgY291bnRlciBmZWF0dXJlcyBhIHJvdGF0aW5nIHNlbGVjdGlvbiBvZiBjaGlsbGVkIGl0ZW1zIGxpa2Ugb2xpdmVzLCByb2FzdGVkIHRvbWF0b2VzLCBtYXJpbmF0ZWQgcGVwcGVycywgYW5kIHNhbGFkczsgbWFueSBhcmUgdmVnYW4gYW5kIGdsdXRlbiBmcmVlLiBBdCAkMTAgZm9yIGFsbCB5b3UgY2FuIGVhdCwgaXQncyBvbmUgb2YgdGhlIE1pZHRvd24gR2xvYmFsIE1hcmtldCdzIGJlc3QgYnVkZ2V0IGZyaWVuZGx5IG1lYWxzIHdlIGNvdWxkbid0IHJlc2lzdCBhIHNlY29uZCBoZWxwaW5nIG9mIHRoZSBoZWFydCBvZiBwYWxtIHNhbGFkLgpUaGUgaXJvbnkgb2YgcmVwcmVzZW50aW5nIHlvdXJzZWxmIGluIGZhbWlseSBsYXcgbGl0aWdhdGlvbjogSXQgY2FuIGNvc3QgeW91IG1vcmUgdGhhbiBoaXJpbmcgYSBsYXd5ZXJXaGF0IHlvdSBuZWVkIHRvIGtub3cgaWYgeW91IGFyZSBjb25zaWRlcmluZyBnZXR0aW5nIGEgZGl2b3JjZSBpbiAyMDE5U2hlIHBhaWQgdGhlIGluc3VyYW5jZSBwcmVtaXVtcyBmb3IgMTMgeWVhcnMsIGJ1dCBoaXMgbmV3IHNwb3VzZSBnb3QgdGhlIHBheW91dCAgIHVudGlsIHRoZSBjb3VydCBpbnRlcnZlbmVkQXMgYSByZXN1bHQsIHRoZSBydWxlcyBnb3Zlcm5pbmcgZXhwZXJ0cyBjaGFuZ2VkLiBFeHBlcnRzIGdpdmluZyBldmlkZW5jZSBpbiBhbiBPbnRhcmlvIGNvdXJ0IGFyZSBub3cgb2JsaWdlZCB0byBzaWduIGFuIGFja25vd2xlZGdlbWVudCB0aGF0IGNvbmZpcm1zIHRoYXQgdGhleSBhcmUgYXdhcmUgb2YgdGhlaXIgb2JsaWdhdGlvbiB0byBiZSBpbmRlcGVuZGVudCwgd2l0aCB0aGVpciBvYmxpZ2F0aW9uIGJlaW5nIHRvIHRoZSBjb3VydCwgYW5kIG5vdCB0byB0aGUgcGFydHkgd2hvIHJldGFpbmVkIHRoZW0uLiAKQW5kIGl0J3MgT0sgaWYgdGhlcmUgYXJlIG9uZSBvciB0d28gbW9yZSBzZWF0cyB0aGFuIHlvdSBub3JtYWxseSBuZWVkLiAKU2hlIGFsc28gdG9sZCBTdXJiaGkgdGhhdCBzaGUgc2hvdWxkIGJlIHNlbnNpYmxlIGJlZm9yZSBwYXNzaW5nIGFueSBjb21tZW50cyBmb3IgUm9taWwuLiAKU2hlIHByb2JhYmx5IHRoaW5rcyB5b3UgZm9yZ2F2ZSBhbmQgZm9yZ290IGJlY2F1c2Ugb2YgdGhlIGJhYnkuIEkgdGhpbmsgeW91IGFyZSBnb2luZyB0byBuZWVkIHRvIHNheSBzb21ldGhpbmcgYWxvbmcgdGhlIGxpbmVzIG9mICJXZSBoYXZlIGEgcGFzdC4gClF1YW50ICBsYSBwcm9ub25jaWF0aW9uLCBwcmVzcXVlIHRvdXRlcyBsZXMgbGV0dHJlcyBncmVjcXVlcyBjb3JyZXNwb25kZW50ICBkZXMgc29ucyBxdWkgc29udCBmYW1pbGllcnMgZW4gZnJhbmFpcyBldCBkYW5zIGxlcyBhdXRyZXMgbGFuZ3VlcyBldXJvcGVubmVzLi4gClRoaXMgaXMgdGhlIHRpbWUgdG8gc3BsaXQgdXAgdGhlIHR3aW5zLiAKV2hpbGUgY29tcG9zZWQgb2YgY2xheSwgdGhlcmUgYXJlIHVzdWFsbHkgbWl4dHVyZXMgb2Ygb3RoZXIgbWF0ZXJpYWxzIGFzIHdlbGwsIGJ1dCBvbmx5IGEgc21hbGwgcGVyY2VudGFnZS4gQ2FzaW5vcyB0eXBpY2FsbHkgb25seSB1c2UgcG9rZXIgY2hpcHMgdGhhdCBhcmUgMzltbSBhcyBmYXIgYXMgZGlhbWV0ZXIuIE1vc3QgY2xheSBvcHRpb25zIGFyZSB0aGlzIHNpemUuIApCZXNpZGVzIHRoZSBhbGxlZ2VkIGJsb29kIEROQSBhbmQgYWxsZWdlZCBob29kbGF0Y2ggRE5BIHRoZXJlIGlzIG5vIHNjaWVudGlmaWMgZXZpZGVuY2Ugb2YgU0EgaGF2aW5nIGJlZW4gYW55d2hlcmUgaW5zaWRlIHRoZSBSQVY0LCBub3IgaGF2aW5nIGNvbnRhY3Qgd2l0aCBhbnkgcGFydCBvZiBpdHMgZXh0ZXJpb3IuIFRoZXJlIGlzIG5vIGJsb29kIG9mIFNBIGZvdW5kIHRvZ2V0aGVyIHdpdGggVEggYmxvb2QgaW4gdGhlIHJlYXIgb2YgdGhlIFJBVjQsIGV2ZW4gdGhvdWdoIGhlIGlzIGFsbGVnZWQgdG8gaGF2ZSBwaHlzaWNhbGx5IHBsYWNlZCBoZXIgdGhlcmUuCkVuZmluIGRlIHRvdXRlcyBmYW9ucyBsZXMgcmV0cmFpdGVzIHJpc3F1ZW50IGQndHJlIGFtcHV0ZXMgZXQgYSBuJ2luY2l0ZSBwYXMgIHMnZW4gc291Y2llci4gT24gcGV1dCBzZSBkZW1hbmRlciBzaSBsYSBnbnJhdGlvbiBtb250YW50ZSBwb3VycmEgc2V1bGVtZW50IGF0dGVpbmRyZSBsYSB2aWVpbGxlc3NlLkNldCBhcnRpY2xlIGVzdCBpbnRlcmRpdCBkZSBsZWN0dXJlIGF1eCBtaW5ldXJzIGV0IGF1eCBmZW1tZXMuIENldXNzZXMgcXVpIHJpZW50IHF1YW5kIGlscyBzZSBicmxlbnQgc29udCBwcmlzIGRlIHBhc3NlciBkaXJlY3RlbWVudCBhdSBwb3N0IHN1aXZhbnQuIApJdCdzIHRoZSByaWdodCB0aGluZyB0byBkby4gCk5vIGFuc3dlci4gCjIpIE1vc3QgQW1lcmljYW5zIHByb2JsZW1zIGFyZSB2ZXJ5IG11Y2ggMXN0IHdvcmxkIHByb2JsZW1zLCBsaWtlIHRoZXkgY29tcGxhaW4gdGhhdCBpdCBtaWdodCB0YWtlIDEgZGF5IHRvIGdldCB5b3VyIERyaXZpbmcgTGljZW5jZSBhdCB0aGUgRE1WIExPTCwgaXQgd291bGQgdGFrZSBtZSBtb250aHMgaW4gRXVyb3BlLiBPciBnYXMgcHJpY2VzLCBvciBoZWFsdGhjYXJlLCBvciBjb3N0IG9mIGFueXRoaW5nIQpTbyB5b3UncmUgbm90IHRlc3RpbmcgdG8gc2VlIGlmIGhlYWRzaG90cyBsb29rIHN1ZmZpY2llbnRseSBzaWNrICAgeW91J3JlIG1ldGhvZGljYWxseSBjaGVja2luZyBldmVyeSB0eXBlIG9mIGJ1dHRlciBrbmlmZSB0byBtYWtlIHN1cmUgaXQgZG9lcyB0aGUgZml2ZSBwb2ludHMgb2YgZGFtYWdlIGl0J3Mgc3VwcG9zZWQgdG8uIFRoZSBzZWNvbmQgYmlnZ2VzdCBtaXNjb25jZXB0aW9uIGlzIHRoYXQgZXZlcnlvbmUgaXMgdGVzdGluZyBwb3B1bGFyLCBiZWxvdmVkIGdhbWVzLiAKQWx0b2dldGhlciwgVGhlIEhpZGRlbiBXb3JsZCBtYWtlcyBmb3IgYW5vdGhlciB3b25kZXJmdWwgZmFtaWx5IGFkdmVudHVyZS4gVGhpcyBpcyBhbGxlZ2VkbHkgdGhlIGxhc3QgZmlsbSBpbiB0aGUgc2VyaWVzLCBzbyB0aGluZ3MgZGVmaW5pdGVseSB0dXJuIGJpdHRlcnN3ZWV0LiBCdXQgZ2l2ZW4gaG93IHN1Y2Nlc3NmdWwgdGhlc2UgbW92aWVzIGhhdmUgYmVlbiwgaXQncyBhIHNhZmUgYmV0IHdlJ2xsIHNlZSBhbm90aGVyIEhvdyB0byBUcmFpbiBZb3VyIERyYWdvbiBzb21ld2hlcmUgZG93biB0aGUgcm9hZC4KV2hpbGUgaGlzIHNjb3JpbmcgbGFnZ2VkLCBoZSBzaG93ZWQgcHJvbWlzZSwgc3VnZ2VzdGluZyB0aGUgbG93IHBvaW50IHRvdGFscyBtaWdodCBqdXN0IGJlIGEgZnVuY3Rpb24gb2Ygbm90IGJlaW5nIG9uIHRoZSBmbG9vciBlbm91Z2guIFN1cmUgZW5vdWdoLCAzMyBtaW51dGVzIGFnYWluc3QgTm9ydGhlYXN0ZXJuIGhpcyBsb25nZXN0IGdhbWUgdGhhdCBzZWFzb24geWllbGRlZCAyMSBwb2ludHMgdG8gZ28gYWxvbmcgd2l0aCBoaXMgMTAgYXNzaXN0cy4uIApTbyBncm9jZXJpZXMsIGFkZGl0aW9uYWwgYmlsbHMsIGhlYWx0aCBpbnN1cmFuY2UsIGNsb3RoZXMsIGV0Yy4uIApJIGhhZCBzb21lIFRhbnRyYSB3b3JrIGRvbmUgYmVmb3JlIG9uIHRoZSB3ZXN0IGNvYXN0LCBidXQgbm90aGluZyBsaWtlIHRoaXMhIFRoZSBSZXZlcmVuZCBoYXMgc2tpbGxzIGZhciBiZXlvbmQgYW55dGhpbmcgSSBoYWQgZXhwZXJpZW5jZWQgcHJldmlvdXNseS4gClRoaXMgaXMgYW4gYWRkaXRpb25hbCBwYXRod2F5IHRoYXQgbWljcm9iaW90YSBhbmQgcGF0aG9nZW5pYyBiYWN0ZXJpYSB1c2UgdG8gY29tbXVuaWNhdGUgd2l0aCB0aGUgYnJhaW4gdmlhIHRoZSBpbW11bmUgc3lzdGVtIG9yIHRocm91Z2ggYWN0aXZhdGlvbiBvZiBsb2NhbCBuZXVyb25zIGluIHRoZSBlbnRlcmljIG5lcnZvdXMgc3lzdGVtIChFTlMpLiAKU2VlLCBteSB0aG91Z2h0IHByb2Nlc3MgcmV2b2x2ZWQgYXJvdW5kIHRoZSBmYWN0IHRoYXQgaWYgeW91IGhhdmUgcHJvZmVzc2lvbmFsIGxvb2tpbmcgY2hpcHMsIHRoZW4geW91IG5lZWQgYSBwcm9mZXNzaW9uYWwgbG9va2luZyBwbGFjZSB0byBrZWVwIHRoZW0uIApQb2tlclN0YXJzLCB0aGUgd29ybGQncyBsYXJnZXN0IG9ubGluZSBwb2tlciBzaXRlLCBoYXMgc3BlbnQgbWlsbGlvbnMgb2YgZG9sbGFycyBsb2JieWluZyBmb3IgbGVnYWxpemF0aW9uIGluIENhbGlmb3JuaWEgYW5kIHBhcnRuZXJlZCB3aXRoIHNvbWUgb2YgdGhlIHN0YXRlJ3MgbW9zdCBwb3dlcmZ1bCB0cmliYWwgY2FzaW5vcyBhbmQgY2FyZHJvb21zLCBtb3N0IG5vdGFibHkgU2FuIE1hbnVlbCBhbmQgTW9yb25nbyBpbiB0aGUgSW5sYW5kIEVtcGlyZS4gCllvdSBsb29rIGF3YXkgYW5kIGFzayAiaG93IGxpdmUgaXMgaXQiIHdpdGggYSBkZWFkcGFuIGZhY2UuIEluIHRoZSBldmVudCB5b3UgZG8gZm9sZCB0aGUgc2FtZSB0aW1lIGFzIHlhIGJ1ZGR5IG9uIHlvdXIgcmlnaHQuIApWeWFzIEdpYW5uZXR0aSBDcmVhdGl2ZSBoYXMgYWNjb3VudHMgc3VjaCBhcyB0aGUgY29ycG9yYXRlIGFjY291bnQgb2YgdGhlIEEgViBCaXJsYSBncm91cCwgQmlybGEgU3VubGlmZSwgVGFqIEhvdGVscywgY2VydGFpbiBicmFuZHMgb2YgVGhlIFRpbWVzIG9mIEluZGlhIGdyb3VwIGFuZCBQaWRpbGl0ZSBJbmR1c3RyaWVzLgpDaHJpc3RvcGhlciBQcmF0dCBpcyBQcmVzaWRlbnQgb2YgQ2FuZHkgV2FyZWhvdXNlLCB0aGUgbGVhZGluZyBvbmxpbmUgamVsbHkgYmVhbnMgc3RvcmUgZm9yIGJ1bGsgY2FuZHkgZGlzY291bnRzIGFuZCBzcGVjaWFsdHkgY2FuZHkgZm9yIHNwZWNpZmljIG9jY2FzaW9ucy4gU2VsbGluZyBhIHdpZGUgcmFuZ2Ugb2YgY2FuZGllcyBmcm9tIEpvcmRhbiBhbG1vbmRzIHRvIG1pbnRzIHRvIGNhbmR5LCB0aGlzIGNhbmR5IHN0b3JlIG9mZmVycyBldmVyeXRoaW5nIHlvdSBtaWdodCBuZWVkIGZvciB5b3VyIG11bmNoaW5nIGVuam95bWVudC4gSWYgeW91IGNhbiB0IGZpbmQgaXQgaGVyZSwgeW91IGxpa2VseSBjYW4gdCBmaW5kIGl0IGFueXdoZXJlLgpJIGhhdmUgYSBsb3Qgb2YgYW5nZXIgdG93YXJkcyB0aGVtLCBidXQgSSBqdXN0IGlnbm9yZSB0aGVtLiBUaGF0IHRoZSBvbmx5IHdheSBJIGNhbiBwdW5pc2ggbXkgbW90aGVyIGFuZCBteSBmYXRoZXIuIEkganVzdCBzaW1wbHkgZ2hvc3RlZCB0aGVtIGFuZCBvbmx5IGFzc29jaWF0ZSB3aXRoIG15IHdpZmUgZmFtaWx5IG5vdy4gSGF2ZW4gc3Bva2VuIHRvIG9yIHNlZW4gZWl0aGVyIG9mIHRoZW0gaW4gYWxtb3N0IDYgeWVhcnMuIEZlZWxzIGdvb2QgbWFuLgo4KSBFeGNlc3NpdmUgU3BhbS4gUG9zdGluZyBtdWx0aXBsZSB0aHJlYWRzIGEgZGF5IGluIGV4Y2Vzc2l2ZSB1c2UuIApXaGVuIGEgUEMgbG92aW5nIGZyaWVuZCwgdGhlIGtpbmQgd2hvIGFjdHVhbGx5IHdvcmsgaW4gdGhlIElUIGluZHVzdHJ5IGFuZCB0YWxrcyBnZWVrIDI0LzcsIHNlbnQgbWUgeWV0IGFub3RoZXIgbWVzc2FnZSBhYm91dCBob3cgYmFkIEFwcGxlIGlzIHllc3RlcmRheSwgSSBoYWQgdG8gcGF5IGF0dGVudGlvbi4gCktpbmcgYW5kIGhpcyBzb29uIHRvIGJlIGZvcm1lciB3aWZlLCBTaGF3biBTb3V0aHdpY2sgS2luZywgYW5kIHRoZWlyIHR3byBjaGlsZHJlbiwgSSBjYW5ub3QgaGVscCBidXQgYXNrIHRoZSBmb2xsb3dpbmcgcXVlc3Rpb246IFdoYXQgaWYgSm9hbiBSaXZlcnMgbWFycmllZCBzb21lb25lIG5lYXJseSB0aHJlZSBkZWNhZGVzIGhlciBqdW5pb3IgYW5kIHRoZW4gaGFkIGNoaWxkcmVuIHdpdGggaGltPyBjZXJ0YWlubHkgcG9zc2libGUgZm9yIFJpdmVycyB0byBoYXZlIGNoaWxkcmVuIHN0aWxsIHRocm91Z2ggdGhlIG1hcnJpYWdlIG9mIG1vZGVybiBsb3ZlIGFuZCBtb2Rlcm4gdGVjaG5vbG9neS5HaXZlbiB0aGF0IFNoYXduIHdhcyA1MCB3aGVuIHRoZXkgbWFycmllZCBpbiAxOTk3IGFuZCBLaW5nIHdhcyA3NiwgdGhleSB0b28gY291bGQgaGF2ZSByZW50ZWQgYSBwb29yIHdvbWFuIHdvbWIgaW4gb3JkZXIgdG8gaGF2ZSBjaGlsZHJlbi4gU2luY2UgMTk5MSwgd2hlbiB0aGUgY291bnRyeSBuZXcgZnJlZSBtYXJrZXQgcG9saWNpZXMgdG9vayBlZmZlY3QsIHByaXZhdGUgbW9uZXkgaGFzIGZsb3dlZCBpbiwgZnVlbGluZyBjb25zdHJ1Y3Rpb24gb2Ygd29ybGQgY2xhc3MgaG9zcGl0YWxzIHRoYXQgY2F0ZXIgdG8gZm9yZWlnbmVycy4gU3Vycm9nYWN5IHRvdXJpc20gaGFzIGdyb3duIHN0ZWFkaWx5IGhlcmUgYXMgd29yZCBnZXRzIGFyb3VuZCB0aGF0IGJhYmllcyBjYW4gYmUgaW5jdWJhdGVkIGF0IGEgbG93IHByaWNlIGFuZCB3aXRob3V0IGdvdmVybm1lbnQgcmVkIHRhcGUuIApPbmUgb2YgdGhlIGJpZ2dlc3QgZ2FtZXMgaW4gdGhlIFdvcmxkIFNlcmllcyB3aWxsIGJlIHRoZSA3IGNhcmQgc3R1ZCBjaGFtcGlvbnNoaXAgZHVlIHRvIGJlZ2luIG9uIHRoZSAzcmQgb2YgSnVuZSwgd2l0aCBhICQxMCwwMDAgYnV5IGluLiBUaGVyZSBhcmUgb3RoZXIgJDEwLDAwMCBidXkgaW5zLCBtb3N0IG5vdGFibGUgYXQgdGhlIEhPUlNFIGNoYW1waW9uc2hpcCBzdGFydGluZyBvbiAyM3JkIEp1bmUuIE90aGVyIGV2ZW50cyBjYXJyeWluZyB0aGlzIHByaWNlIHRhZyBhcmU6IEp1bmUgMzogNyBjYXJkIHN0dWQgY2hhbXBpb25zaGlwICAgYSAzIGRheSBldmVudCBKdW5lIDY6IFNldmVuIENhcmQgc3R1ZCBoaSBsb3cgc3BsaXQgOCBvciBCZXR0ZXIgQ2hhbXBpb25zaGlwICAgYSAzIGRheSBldmVudCBKdW5lIDk6IDIgNyBEcmF3IGxvdyBiYWxsIGNoYW1waW9uc2hpcChObyBsaW1pdCkgICBhIDMgZGF5IGV2ZW50IEp1bmUgMTI6IE9tYWhhIEhpIExvdyBTcGxpdCA4IG9yIEJldHRlciBDaGFtaW9uc2hpcCAgIGEgMyBkYXkgZXZlbnRKdW5lIDE1OiBMaW1pdCBIb2xkJ2VtIGNoYW1waW9uc2hpcCAgIGEgMyBkYXkgZXZlbnQgSnVuZSAxODogQSBoZWFkcyB1cCBubyBsaW1pdCBIb2xkJ2VtIGNoYW1waW9uc2hpcChvZiB1cHRvIDI1NiBwbGF5ZXJzKSAgIGEgMyBkYXkgZXZlbnQgSnVuZSAxOTogSE9SU0UgY2hhbXBpb25zaGlwICAgYSAzIGRheSBldmVudCBmZWF0dXJpbmcgTGltaXQgSG9sZCdlbSwgT21haGEgSGkgTG93IFNwbGl0IDggb3IgQmV0dGVyLCBTZXZlbiBDYXJkIFJhenosIFNldmVuIENhcmQgU3R1ZCwgU2V2ZW4gQ2FyZCBTdHVkIEhpIExvdyBTcGxpdCA4IG9yIEJldHRlciBKdWx5IDE6IEEgcG90IGxpbWl0IE9tYWhhIENoYW1waW9uc2hpcCAgIGEgMyBkYXkgZXZlbnRUaGUgZ3JlYXRlc3QgZXZlbnQgb2YgdGhlIHRvdXJuYW1lbnQgaXMgbGlrZWx5IHRvIGJlIHRoZSBObyBsaW1pdCBIb2xkJ2VtL1NpeCBIYW5kZWQsIHN0YXJ0aW5nIGF0IG5vb24gb24gSnVuZSAzMCBhbmQgZ29pbmcgb24gZm9yIDQgZGF5cy4gCkhlIHBsYXllZCAiQmxhY2sgYW5kIFdoaXRlcyIgYWxvbmUgaW4gYSBzcG90bGlnaHQsIGFuZCBpdCB3YXMgaGlzIGJlc3Qgdm9jYWxzIG9mIHRoZSBuaWdodDogZ3Jvd2x5IGFuZCBlbXBoYXRpYy4gZm9yICJKdXN0IEFub3RoZXIgRGF5IGluIFBhcmFkaXNlLCIgaGUgYWdhaW4ganVtcGVkIG9uIHRoZSBwaWFubyB0byBzaW5nLgpPbmxpbmUgcG9rZXIgcm9vbXMgb2ZmZXIgZ3VhcmFudGVlZCBwcml6ZSBwb29scyBmb3IgdGhlaXIgdG91cm5hbWVudHMuIApUaGUgYmx1ZSBjYXIgaXMgZ29uZSBhbmQgb25seSBhIHBpbGUgb2Ygd2hhdCB3YXMgcmVtYWlucyBvbiB0aGUgY29ybmVyIHdoZXJlIHdlIG9uY2UgaGVhZGVkIGRvd24gb3VyIHNlY3JldCBwYXRoLiAKQWxsIG1vdGlvbnMgc2xvdyBhbmQgY29udHJvbGxlZC4uIApOb3cgdGhhdCB3ZSBydW4gaXQgZm9yIGEgd2hpbGUsIGl0IGhhcmQgdG8gaW1hZ2luZSBydW5uaW5nIGEgc3ViIGFzIGJpZyBhcyByL1Rvcm9udG8gd2l0aG91dCBpdC4gCkkgcHVzaGVkIGZvciAxNSBtaW51dGVzIGFuZCBzaGUgY2FtZSByaWdodCBvdXQuIEl0IHdhcyBpbmNyZWRpYmxlISBTaGUgd2FzIGJvcm4gc3VwZXIgaGVhbHRoeSBidXQgb25seSB3ZWlnaGVkIDQgbGJzIDYgb3pzLiBEb24ndCBiZSBzY2FyZWQgYW5kIHJlbWVtYmVyIHlvdXIgYm9keSBjYW4gaGFuZGxlIGFueXRoaW5nLi4gCkdvdmVybm1lbnQuLiAKV2hpbGUgSSB3YXMgc2l0dGluZyBvbiB0aGUgZ3JvdW5kIGp1c3QgYWZ0ZXIgaXQgaGFwcGVuZWQgSSByZW1lbWJlciB0aGUgc3BlY2lmaWMgZmVlbGluZyBvZiBteSBmb290IGZlZWxpbmcgZXh0cmVtZWx5IHdhcm0gbGlrZSBpdCB3YXMgdW5kZXIgYSBoZWF0ZXIgbm90IGxpa2UgYSBidXJuaW5nIHBhaW4ganVzdCBhIHJlc29uYXRpbmcgaGVhdnkgd2FybXRoLiBJIHdhdGNoIG15IHVuY2xlIHJ1biBpbnRvIHRoZSBob3VzZSBhcyBJIHdhcyBob2xkaW5nIG15IGZvb3Qgc3RpbGwgbm90IGNyeWluZy4gSXQgd2FzbnQgdW50aWwgbXkgbW9tIGNhbWUgYmFjayBvdXQgd2l0aCBteSB1bmNsZSB0aGF0IEkgYWN0dWFsbHkgcmVhbGl6ZWQgd2hhdCBoYWQgaGFwcGVuZWQuIApUaGV5IG9ubHkgb3BlbiB3aXRoIGFjZXMgc3VpdGVkIG9yIGEgaGlnaCBwYWlyLiAKSSBkbyBub3QgdW5kZXJzdGFuZCB3aHkgY29wcyBtdXN0IGJlIGluIGNvbnRyb2wgb2YgZXZlcnkgYXNwZWN0IG9mIGFuIGVuY291bnRlciBpbmNsdWRpbmcgdGhlIGRlbWFuZCB0aGF0IHBlb3BsZSBhY3QgYW5kIHJlc3BvbmQgZXhhY3RseSBob3cgaGUgb3Igc2hlIHdhbnRzIG9yIGV4cGVjdHMgdGhlbSB0by4KV2hhdCBJIGdvdCBvdXQgb2YgaXQgd2FzIG9uZSBvZiB0aGUgd2FybWVzdCwgbW9zdCBjb21wbGV0ZSByZWNvcmRzIEkgaGFkIGxpc3RlbmVkIHRvIGluIHllYXJzLiAKSSBhYm91dCB0aGUgZmFydGhlc3QgdGhpbmcgZnJvbSBiZWluZyBibG9uZGUuIApQbGF5IEFmdGVyIHRoZSBGbG9wCkZpcnN0IG9mZiBIVUdFIGh1ZywgSSBhbSBzbyBzb3JyeSB0aGF0IHlvdSBhcmUgZ29pbmcgdGhyb3VnaCB0aGlzLiBJIG1vdmVkIHRvIHRoZSBvdGhlciBzaWRlIG9mIHRoZSB3b3JsZCBmb3IgZ3JhZCBzY2hvb2wgYW5kIG15IGh1c2JhbmQuIEkgZ3JldyB1cCB3aXRoIG15IHBhcmVudHMgZGl2b3JjaW5nIHdoZW4gSSB3YXMgaW4gZ3JhZGUgc2Nob29sIGFuZCBiZWNhdXNlIG9mIG91ciB2ZXJ5IGNvbnNlcnZhdGl2ZSByZWxpZ2lvbiB3YXMgYnVsbGllZCBhbmQgc2hhbWVkIGJlY2F1c2UgbXkgcGFyZW50cyB3ZXJlIGRpdm9yY2VkLiAKQXJlIHlvdSBvbmUgb2YgdGhlIG1hbnkgd2hvIHdvbmRlciBob3cgdG8gcGxheSBUZXhhcyBIb2xkJ2VtPyBNYW55IHBva2VyIGZhbnMgd291bGQgcmVjb21tZW5kIHByYWN0aWNpbmcgd2l0aCB0aGUgQ2FzaW5vIEhvbGQnZW0gZ2FtZSwgd2hpY2ggeW91IGNhbiBmaW5kIGluIGp1c3QgYWJvdXQgYW55IG9ubGluZSBjYXNpbm8gYW5kIHBsYXkgZm9yIGZyZWUuIFRoaXMgZ2FtZSBpcyBiYXNlZCBvbiB0aGUgc2FtZSBydWxlcyBleGNlcHQgdGhhdCBoZXJlIHlvdSBvbmx5IHBsYXkgYWdhaW5zdCB0aGUgZGVhbGVyLCByYXRoZXIgdGhhbiBhZ2FpbnN0IG90aGVyIHBsYXllcnMuIApUaGFua3MgZm9yIHRoZSB2aWRlbyBhbmQgdGhlIHJlYWRpbmcuClBpc3RvbnM6IEx1a2UgS2VubmFyZCBiZWNhbWUgdGhlIDEwdGggcGxheWVyIGluIGZyYW5jaGlzZSBoaXN0b3J5IHRvIG1ha2UgYXQgbGVhc3QgZml2ZSAzIHBvaW50ZXJzIGluIHR3byBzdHJhaWdodCBnYW1lcyBhbmQgZmluaXNoZWQgd2l0aCAxOSBwb2ludHMuIFJlZ2dpZSBCdWxsb2NrLCB3aG8gbm93IHBsYXlzIGZvciB0aGUgTG9zIEFuZ2VsZXMgTGFrZXJzLCBtYWRlIHRoZSB3aW5uaW5nIHNob3QgYXMgdGltZSBleHBpcmVkIGluIE5vdmVtYmVyIHdoZW4gRGV0cm9pdCB3b24gYXQgVG9yb250byAxMDYgMTA0IGFzIER3YW5lIENhc2V5IG1hZGUgYW4gZW1vdGlvbmFsIHJldHVybiB0byBmYWNlIGhpcyBmb3JtZXIgdGVhbS4uIApBcyBzb21lb25lIHdobyB3b3JrcyBpbiBjb2xsZWdlIGF0aGxldGljcyBhcyBhbiBBVEMsIEkgd29yayBjb25zdGFudGx5IHdpdGggc2NlbmFyaW9zIGp1c3QgbGlrZSB0aGlzLiBUaGUgbWFuIGlzIHRyeWluZyB0byBmdW5jdGlvbi4gRWZmdXNpb24gaXMgYSBieXByb2R1Y3Qgb2YgdGhlIGluanVyeSwgYW5kIGlzbiBnb2luZyB0byBzZXJ2ZSBhbnkgZXh0ZW5zaXZlIHB1cnBvc2UgaW4gaGVhbGluZyB0aGUgdGlzc3VlLiAKSGUgbGF0ZXIgYmVjYW1lIGNoYWlybWFuIG9mIEhKIEhlaW56LCBzdWNjZWVkaW5nIEhKIEhlaW56IElJLiBPJ1JlaWxseSBtYWRlIGhpcyBpbnRlcm5hdGlvbmFsIHJ1Z2J5IGRlYnV0IGFnZWQgMTggYWdhaW5zdCBGcmFuY2UuIEhpcyB0cnkgc2NvcmluZyByZWNvcmQgc2V0IGR1cmluZyB0aGUgMTk1NSBhbmQgMTk1OSBMaW9ucyB0b3VycyBoYXMgbm90IGJlZW4gZXF1YWxsZWQuLiAKVGhhdCBhbWJpdmFsZW5jZSAgIHdoZXJlIHlvdSBhY2NlcHQgb3IgZG9uIHNlZW0gdG8gY2FyZSB0aGF0IHlvdSBlcXVhdGUgeW91ciBsb3ZlIHRvd2FyZHMgeW91ciBjaGlsZHJlbiB0byB0aGF0IG9mIHlvdXIgbmllY2UvbmVwaGV3ICAgd291bGQgYmUgbW9yZSB1cHNldHRpbmcgdG8gbWUgdGhhbiBhbnl0aGluZyBlbHNlLi4gCkZvcmdldCBhYm91dCB0aGUgcmF3IG5lY2sgYW5kIHRoZSBleHRyZW1lbHkgZGViaWxpdGF0aW5nIGZlZWxpbmcsIGEgc2hvdWxkZXIgYW5kIG5lY2sgbWFzc2FnZXIgaXMgdGhlIHJlbWVkeSB5b3UndmUgYmVlbiBsb29raW5nIGZvciBzdWNoIGEgbGVuZ3RoeXRpbWUuIApJbiBXYXNoaW5ndG9uIGxhc3Qgd2VlaywgYWxtb3N0IGFsbCB0aGUgc2NlbmFyaW9zIHdlcmUgZXh0cmVtZS4gIklmIHlvdSB0ZWFyIHVwIGFsbCB0aGUgcnVsZXMgYW5kIHRvc3MgdGhlbSBpbiB0aGUgYWlyLCIgc2FpZCBBc2h0b24gQ2FydGVyLCBhIERlZmVuc2Ugb2ZmaWNpYWwgaW4gdGhlIENsaW50b24gQWRtaW5pc3RyYXRpb24sIG5vdyBhZ29uaXppbmcgYXQgSGFydmFyZCdzIEtlbm5lZHkgU2Nob29sIG9mIEdvdmVybm1lbnQsICJ0aGUgcmVzdWx0cyBjYW4gYmUgcmVhbGx5IGdvb2Qgb3IgcmVhbGx5IGJhZCBidXQgdGhleSdyZSBkZWZpbml0ZWx5IGdvaW5nIHRvIGJlIHJlYWxseSBkaWZmZXJlbnQuIi4gCklmIG5vIG9uZSB1c2VzIGEgU29vZmEgYWdhaW4sIHRoZXknbGwgc3RpbGwgaGF2ZSBzZXJ2ZWQgYW4gaW1wb3J0YW50IHB1cnBvc2UuIApIZXJlIHRoZSBwcm9wYWdhbmRhIHRoZXkgdXNlIHRvIGNvbnZpbmNlIHVzIHRoYXQga2lsbGluZyBibGFjayBiYWJpZXMgaXMgcGFydCBvZiB0aGUgbWFzdGVyIHNjaGVtZSBvZiBiaXJ0aCBjb250cm9sIGFjdGl2aXN0cyBldmVyeXdoZXJlLgpMYWR5IEdhZ2EgY2FuIHNpbmd3ZWxsLCBkb24ndCBnZXQgbWUgd3JvbmcgYnV0IEJyaXRuZXkgZG9lcyBoYXZlIHN0cm9uZyB2b2NhbHMgKHNoZSdzc2luZ2luZyBsaXZlIG5vdykgYW5kIGlzIGEgd2F5IGJldHRlciBkYW5jZXIuIFdoZXJlIGFzIEJyaXRuZXkgaXMgbGlrZSBNYWRvbm5hIHdoZXJlIHNoZSBjYW4gc3RheW9uIHRvcCBmb3IgeWVhcnMgYW5kIHllYXJzLiAKU2hlIGFsc28gc2hvdWxkIGNoZWNrIHdpdGggaGVyIHByb3ZpZGVyIGJlZm9yZSB0YWtpbmcgYW55IG5ldyBtZWRpY2luZS4gCkFuZCBJIHRob3VnaHQgIkhvbHkgc2hpdCwgZGlkIEkgcmVhbGx5IGp1c3Qgc2F5IHRoYXQ/IiBJIGxvb2tlZCB1cCBzeW1wdG9tcywgdGFsa2VkIHRvIG15IGRvY3RvciwgYW5kIHdhcyBkaWFnbm9zZWQuU2luY2Ugc3RhcnRpbmcgdGhlIHRyZWF0bWVudCwgdGhpbmdzIGFyZSwgZm9yIHRoZSBtb3N0IHBhcnQsIHByZXR0eSBub3JtYWwgYWdhaW4uIElmIHlvdSBoYXZlIEFOWSBzdXNwaWNpb24gdGhhdCB5b3UgbWF5IGhhdmUgaXQsIHRhbGsgdG8geW91ciBkb2N0b3IuIApEYW5ubydzIGRhZCBpcyBhIHNlbWkgcmVmb3JtZWQgaGlwcGllIHdpdGggYSBwZW5jaGFudCBmb3IgY3J1ZGUgYm9kaWx5IGZ1bmN0aW9uIGJhc2VkIGpva2VzIGFuZCBhIGxvdmUgb2YgY2xhc3NpYyBjYXJzLCBhbmQgcHJldHR5IG11Y2ggdGhlIHNhbWUgdGhpbmdzIGNhbiBiZSBzYWlkIGFib3V0IERhbm5vIChleGNlcHQgbWF5YmUgdGhlIHBhcnQgYWJvdXQgdGhlIGZhcnQgam9rZXMpLiBEYW5ubyBoYXMgbGl2ZWQgaW4gQ291bmNpbCBCbHVmZnMgaGlzIHdob2xlIGxpZmUgYW5kIG93bnMgYSBob3VzZSBvbiB0aGUgd2VzdCBzaWRlIHRoYXQgaXMgYWxzbyBvY2N1cGllZCBieSBoaXMgZG9nIGFuZCBhIGNvdXBsZSBvZiBjYXRzLiAKU28gaSBqdXN0IGZpbGUgYSBjbGFpbSwgZm9jdXNpbmcgc3BlY2lmaWNhbGx5IG9uIHRoZSBsYWNrIG9mIHByb3RlY3Rpb24sIGkgbm90IGdvaW5nIHRvIGJyaW5nIGhpcyBkZWR1Y3Rpb25zIGludG8gdGhpcyBhcyBJIGZlZWwgaGUgaGFzIGludmFsaWRhdGVkIGhpcyBwb3NpdGlvbiBieSBub3QgdXNpbmcgYW55IERQUy4gCjIwMTMgTVJJIHN0dWR5IHJldmVhbHMgaG93IGNoaXJvcHJhY3RpYyBoZWxwcyBzcGluZSBqb2ludCBtb2JpbGl0eQpBIHRoaXJzdCBmb3Iga25vd2xlZGdlIGFuZCBhIGRyaXZlIHRvIGdldCBiZXR0ZXIgaGF2ZSBhY2NlbGVyYXRlZCBoaXMgZGV2ZWxvcG1lbnQuLiAKTmV4dCBiZXN0IHRoaW5nIGlzIHRoZSBzdHJhaWdodCBmbHVzaCB3aGVyZSB5b3UgaG9sZCBmaXZlIGNhcmRzIG9mIGNvbnNlY3V0aXZlIHZhbHVlIChzdWNoIGFzIHR3bywgdGhyZWUsIGZvdXIsIGZpdmUsIHNpeCBvZiBzcGFkZXMpIHRoYXQgb25seSBoYXZlIG9uZSBzdWl0Li4gClBsYXkgeW91ciBmYXZvcml0ZSB0dW5lcyBvbiBvdXIgZGlnaXRhbCBqdWtlYm94IHdoaWNoIGhhcyBvdmVyIDUsMDAwIHNvbmdzLiBXYXRjaCB5b3VyIG1vc3QgZGVzaXJhYmxlIHNwb3J0cyBldmVudCBvbiBvbmUgb2Ygb3VyIDUgZmxhdCBzY3JlZW4gVFZzLiBQbGF5IGEgcmVsYXhpbmcgZ2FtZSBvZiBwb29sIG9yIHNodWZmbGUgYm9hcmQuIApFeHBsb3JlIEFtZXJpY2EKSW4gdGhlIHNwaXJpdCBvZiB0aGUgc2Vhc29uLCBoZXJlIGFyZSBzb21lIHRoaW5ncyB0byB0aGluayBhYm91dCB0aGlzIHllYXIuClNvIHRoZSB5b3VuZ2VyIGJyb3RoZXIgdmVyYmFsbHkgYXR0YWNrcyBoZXIgZm9yIGFib3J0aW5nIHRoYXQgY2hpbGQgYW5kIGtlZXBpbmcgdGhpcyBvbmUgYmVjYXVzZSB0aGVyZSBpcyBhIGNoYW5jZSBpdCBpcyBoZXIgZmlhbmNlIFNoZSBpcyB1bmVtcGxveWVkIGR1cmluZyB0aGlzIHRpbWUsIHNvIGhlciBmaWFuY2UgaXMgcGF5aW5nIGZvciBhbGwgb2YgdGhlIGV4cGVuc2VzLi4gClRoZXJlIGFyZSBsaW1pdHMgdG8gdGhlIGNlbnRyYWwgYmFuayBhYmlsaXR5IHRvIG1hbmFnZSBsb25nIHRlcm0gaW50ZXJlc3QgcmF0ZXMgdGhyb3VnaCBhc3NldCBwdXJjaGFzZXMsIHNpbmNlIHVsdGltYXRlbHkgdGhlIG1hcmtldCBpcyBzdWJqZWN0IHRvIG90aGVyIGluZmx1ZW5jZXMsIHRvby4gV2hpbGUgeWllbGRzIGZvciBKYXBhbmVzZSBnb3Zlcm5tZW50IGJvbmRzIChKR0JzKSBhcmUgYm91bmQgdG8gZGVjbGluZSBhcyB0aGUgcHJpY2UgcmlzZXMgZHVlIHRvIHRoZSBzdXJnZSBpbiBwdXJjaGFzZXMgYnkgdGhlIEJPSiwgaWYgdGhlIDIlIGluZmxhdGlvbiB0YXJnZXQgaXMgcmVhY2hlZCwgdGhlIGNlbnRyYWwgYmFuayBoYXMgc2FpZCBpdCB3aWxsIGFkanVzdCBwb2xpY3kgZm9yIHRoZSBzYWtlIG9mIHByaWNlIHN0YWJpbGl0eS4KVmFsdWUgdmlsbGFpbiBjYW4gaGF2ZSBmbHVzaGVzL1R4LiBzZXRzIGFuZCAycCB3aWxsIHhiYWNrIG9uIHRoZSA0IHRvIHN0cmFpZ2h0IGFuZCAzIGZsdXNoIGJvYXJkIHNvIGl0cyBwb2xhcml6ZWQuIElzaWxkdXIgd2lsbCAzYmV0IHByZSBKSisgQUsgYWx3YXlzLCB0aGVuIEFKL0tRL0FRIGFsbCBzb21ldGltZXMuIGhlIHdpbGwgaGF2ZSBzb21lIEF4byB3aXRoIGEgZGlhbW9uZCwgMnAsIDIyLCBmbHVzaGVzLCBUeC4gSXNpbGR1ciBhY3R1YWxseSBoYXMgbW9yZSBmbHVzaGVzIGJlaW5nIGluIHRoZSBCQiBtZWFucyBoZSB3aWxsIGRlZmVuZCBhIHRvbiwgbmVhcmx5IGFsbCBvZiB0aGUgc3VpdGVkIGNhcmRzLiB0aGVuIHZpbGxhaW4gaW4gdGhlIGN1dG9mZiBpcyByYWlzaW5nIDI1JSBoYW5kcyBhbmQgaGUgd29udCBoYXZlIHRob3NlIDk1cy84NXMvSzNzLi9RNXMgaGFuZHMgZXRjIHRoYXQgaXNpbGR1ciB3aWxsIGhhdmUuIHRoaXMgbWFrZXMgaXQgYmFkIHRvIGJsdWZmIGFuZCBtYWtlcyBoaW0gbGVhbiBtb3JlIHRvd2FyZHMgdmFsdWUKSSBiZXQgdGhleSB3b3VsZCBjaGFuZ2UgdHVuZSBlbnRpcmVseSBpZiBpdCB3YXMgdGhlaXIgb3duIHNvbiBiZWluZyBpbmNhcmNlcmF0ZWQgZm9yIGxpZmUsIHRoZXkgY29tcGxhaW4gdGhhdCA0MCB5ZWFycyBpcyB0b28gbG9uZyBmb3IgcGFyb2xlLCB0byBiZSBsZW5pZW50IGV0Yy4KVGhpcyBpcyB0aGUgZmFtb3VzICJUaGUgRmFtZSBNb25zdGVyIiBhbGJ1bSwgYW5kIGNhbiBiZSBmb3VuZCBvbiBpVHVuZXMuIDQ2IDUwICkgUG9rZXIgRmFjZS9KdXN0IERhbmNlL0xvdmVnYW1lL0JlYXV0aWZ1bCwgRGlydHksIFJpY2gvUG9rZXIgRmFjZSAuIApTb21lIHBlb3BsZSBoYXZlIG5hdHVyYWxseSBsYXp5IHBlcnNvbmFsaXRpZXMgZXZlbiBiZWZvcmUgdGhleSBkZXZlbG9wZWQgbWVudGFsIGlsbG5lc3MsIHNvIEkgZG9uIGJlbGlldmUgZXZlcnlvbmUgd2l0aCBkZXByZXNzaW9uIGhhcyB0aGUgcmlnaHQgdG8gYmUgdG90YWxseSBkZXBlbmRlbnQgYW5kIGV4cGVjdCB0byBiZSBmaW5hbmNpYWxseSwgcGh5c2ljYWxseSBhbmQgZW1vdGlvbmFsbHkgc3VwcG9ydGVkIHdpdGggbm8gY29udHJpYnV0aW9uIHRvIHRoZSBob3VzZWhvbGQgYXQgYWxsLgpNeSBodXNiYW5kIGFuZCBJLCBhbG9uZyB3aXRoIG1hbnkgb2Ygb3VyIGZyaWVuZHMgcnVuIGludG8gdGhpcyBldmVyeSB5ZWFyIGFib3V0IGhhbGYgd2F5IHRocm91Z2ggdGhlIGNydW1teSB3ZWF0aGVyIGFmdGVyIHdlIGJlZW4gdHJhcHBlZCBpbmRvb3JzIGZvciB3ZWVrcyBhbmQgd2Vla3MuIFdlIGhhZCBhIGxvdCBvZiBsdWNrIGVudGVydGFpbmluZyBvdXJzZWx2ZXMgd2l0aCBzb21lIG9mIHRoZSBwbGF5Z3JvdW5kIHNwb3J0cyB0ZWFtIHN0dWZmIGFzIHdlbGwgYXMganVzdCBnb2luZyBvdXQgdG8gZW5qb3kgbG90cyBvZiB0aGUgbG9jYWwgZnJlZSBtdXNpYywgYXJ0IHNob3dzIGFuZCB0cml2aWEvYmluZ28gbmlnaHRzLiAKVW5sZXNzIHNvbWVvbmUgd2FzIHJhaXNlZCBpbiBhIGNvdW50cnkgb3V0c2lkZSBvZiB0aGUgVVNBLCBvciBoYWQgZXh0cmVtZWx5IHBvd2VyZnVsL2NvbnNjaW91cyBwYXJlbnRzLCBtb3N0IGFueW9uZSByYWlzZWQgaW4gdGhlIFVTQSBoYXMgc2V4dWFsIHNoYW1lLiBBcyBhIGJvZHl3b3JrZXIsIEkgc2VlIHRoaXMgYXMgdGlnaHQgaGlwcywgdGlnaHQgcGVsdmlzZXMsIHRpZ2h0L3BhaW5mdWwgbG93IGJhY2tzLCB3ZWFrIGNvcmUgbXVzY2xlcy4gCklmIHlvdSB3ZXJlIHRhbGtpbmcgZm9yIGEgbG9uZyB0aW1lIGJlZm9yZSBtZWV0aW5nIG9yIHdlcmUgYm90aCByZWxpZ2lvdXMpLi4gCkFzaWFuIGNha2VzIGFyZW4gYXMgaGVhdnkuIEkgYWN0dWFsbHkgcHJlZmVyIHRoZSBjYWtlcyBteSBtb20gZ2V0cyBtZSBmb3IgbXkgYmlydGhkYXkgZnJvbSBDaGluZXNlIGJha2VyaWVzIHRoYW4gYW55IEFtZXJpY2FuIGNha2UgSSBlYXRlbiBhdCBwYXJ0aWVzLiAKQSBob3VzZWhvbGQgYXQgdGhlIHZlcnkgdG9wIG9mIHRoaXMgZ3JvdXAsIHRoZSA0MHRoIHBlcmNlbnRpbGUsIG9yICQ4MCw4NDQgb2YgaW5jb21lLCBzaG91bGQgcGF5ICQxMSw2OTAgaW4gaW5jb21lIHRheGVzIChhZ2FpbiwgYXNzdW1pbmcgbm8gZGVkdWN0aW9ucyksIGFuZCB3b3VsZCByZWNlaXZlICQxMCwyODIuNDQgaW4gdGF4IGZyZWUgYmVuZWZpdHMuIEl0IGVmZmVjdGl2ZWx5IHBheXMgJDEsNDA4IGluIHRheC4KSXQgYWxsIHRoaW5seSB2ZWlsZWQgcmFjaXNtIHVuZGVyIHRoZSBndWlzZSBvZiBjb25uZWN0aW5nIHdpdGggIm91ciIgaWRlbnRpdHkgY29taW5nIGZyb20gZXNzZW50aWFsbHkgbWlkZGxlIGNsYXNzIHdoaXRlIHBlb3BsZSB3aG8gY2xpbmcgb250byBoaXN0b3JpY2FsIHBlcnNlY3V0aW9uIGFzIGp1c3RpZmljYXRpb24gZm9yIHdoeSB0aGVpciByYWNpc20gaXMgb2suLiAKTGV0IG1lIHRlbGwgeW91LCB1L2Fub24yNzc3IHdoeSBJIHBsYXkgcG9rZXIuIEl0J3Mgbm90IHRoZSBtb21lbnQgd2hlbiB0aGF0IGJvYXJkIHJ1bnMgb3V0IGp1c3Qgc28gY2xlYW4uIApCdXQgbXkgZ3Vlc3MgaXMgdGhhdCB0aGV5IGhhZCBhIGxlZ2l0IHRyaWxvZ3kgaW4gbWluZCB3aGVuIGNyZWF0aW5nIEFuZHJvbWVkYSBhbmQgdGhhdCB0aGUgc3Rvcnkgd291bGQgb3BlbiB1cCBhcyB0aGUgc2VyaWVzIGNvbnRpbnVlZCBpbnN0ZWFkIG9mIHBsYXlpbmcgdGhlaXIgYmlnIGhhbmQgaW4gdGhlIGZpcnN0IGdhbWUuIFRoZXJlIHdlcmUgYSBnb29kIG51bWJlciBvZiBjbGlmZmhhbmdlcnMgaW4gQW5kcm9tZWRhIGZyb20gd2hhdCBJIHJlbWVtYmVyLiAKRm9yIGV4YW1wbGU6IEsgSyBLIDYgNi4gCkNyZWkgdW5hIGNvbXVuaXQgY2hlIHBvc3NpZWRlIGZlbGljaXQsIGdpb2lhIGUgcGFjZSwgaW4gcXVlbGxhIGNvbXVuaXQgdmVkcmFpIGdsaSBlbGVtZW50aSBkZWxsYSBzYW50aXQgVGhpY2sgTmhhdCBIYWhuCkJ5IGNvbXBhcmlzb24sIFNGIHdhcyByYXRoZXIgcXVhaW50Li4gCkFueXdheXMsIEkgZG9uIGtub3cgaWYgdGhlIGluZm9ybWF0aW9uIEkgcHJvdmlkZWQgd2lsbCBiZSBzdWZmaWNpZW50IGluIGFuc3dlcmluZyBteSBxdWVzdGlvbiwgYnV0IGFueSBhbnN3ZXIgdGhhdCBwcm92aWRlcyBhIGdlbmVyYWwgaWRlYSB3aWxsIGJlIGdyZWF0bHkgYXBwcmVjaWF0ZWQhIERhbmtlIHNjaG4gOilZb3UgcmVhbGx5IGRvbiBuZWVkIHRvIHdvcnJ5IGFib3V0IHN0ZXJlb3R5cGVzLiAKOCkgRXhjZXNzaXZlIFNwYW0uIFBvc3RpbmcgbXVsdGlwbGUgdGhyZWFkcyBhIGRheSBpbiBleGNlc3NpdmUgdXNlLiBJIHBsYXllZCBoaWdoIHN0YWtlcyBwbGF5IG1vbmV5IFBTIGZvciAxMGlzaCB5ZWFycyAoeWVhcnMgd2FzdGVkIHRvIGJlIGhvbmVzdCkgYW5kIHRoZSBsYXN0IDMgeWVhcnMgaGF2ZSBiZWVuIHBsYXlpbmcgcmVhbCBtb25leSBwb2tlciBvbiBJZ25pdGlvbiwgQUNSIGFuZCBHbG9iYWwgKGRlY2VudGx5IHNpZ25pZmljYW50IG1pY3JvIHdpbm5lciB0cnlpbmcgdG8gbW92ZSB1cCB0byBtaWQgc3Rha2VzIGN1cnJlbnRseSkuClZlcnNpb24gb2YgYSBNYW5oYXR0YW4gaXMgd2UgdGFrZSBhIGJsb3cgdG9yY2ggdG8gZml2ZSBzcGljZXMgb24gYSBjZWRhciBwbGFuayBhbmQgbWFrZSBhIGZpcmViYWxsIG91dCBvZiBhbiBvcmFuZ2UgcGVlbCB0byBmaW5pc2ggaXQsIGFkZGVkIEJyb3BoeS4gCiJCeSB0aGUgdGltZSB3ZSBnbyB0aHJvdWdoIHRoZSBkZSBhbWFsZ2FtYXRpb24gcHJvY2VzcyB3ZSBhcmUgaG9waW5nIGZvciB0aGUgZmlyc3Qgb2YgTm92ZW1iZXIgdG8gdGFrZSBvdmVyIHRoZSBvcGVyYXRpb24gYnV0IGl0IGlzIG5vdCBkZWZpbml0ZS4gCk1heSAxNiwgMjAxMjogVGhlIE5hdGlvbmFsIEVtZXJnZW5jeSBXaXRoIFJlc3BlY3QgdG8gQmxvY2tpbmcgUHJvcGVydHkgb2YgUGVyc29ucyBUaHJlYXRlbmluZyB0aGUgUGVhY2UsIFNlY3VyaXR5LCBvciBTdGFiaWxpdHkgb2YgWWVtZW4gYWRkcmVzc2VkIHBvbGl0aWNhbCB1bnJlc3Qgd2l0aGluIHRoZSBZZW1lbiBnb3Zlcm5tZW50LgpXYXMgaXQgImdvb2Q/IiBTdXJlLiBCdXQgaG93IFRGIGRvIHlvdSBnbyB0aHJvdWdoIHRoZSBoYXNzbGUgb2YgbWFraW5nIGEgdGltZXN0YWtpbmcgYmVhdXRpZnVsIGJ1cnJhdGEgICBhbmQgdGhlbiBwdXQgaXQgaW4gdGhlIGZ1Y2tpbmcgZnJ5ZXIuIApBIGxvdCBvZiB0aGUgbXlzdGVyaWVzIGFuZCB0aGUgcXVlc3Rpb25zIEkgaGFkIGFib3V0IGl0IEkndmUgZmlndXJlZCBvdXQsIGJ1dCBsaWZlIG9mZmVycyB1cCBteXN0ZXJpZXMgZXZlcnkgZGF5LiIuIApHbHV0ZWFsIHN0cmV0Y2hlcyBhcmUgZmFpcmx5IHNpbXBsZSBhbmQgcGVyc29uIHNwZWNpZmljLiAKRm9yIGV4YW1wbGUsIGlmIHN0b2NrIEEgZHJvcHBlZCAzMCUgbWF4aW11bSBvdmVyIHBhc3QgNXllYXJzIGJlZm9yZSByZWJvdW5kaW5nLCBhbmQgc3RvY2sgQiBkcm9wcGVkIDQwJSBtYXhpbXVtIG92ZXIgdGhlc2FtZSBwZXJpb2QgICB0aGVuIGJ5IHRoaXMgbWV0cmljIHlvdSBjYW4gc2VlIHRoYXQgc3RvY2sgQiBpc3Jpc2tpZXIuIApNdXN0YW5nIHRlbnRlIGRlIHMgYXZlYyBQZXRlIGRhbnMgbCBxdWUgY2VsdWkgY2kgbCByZXRyb3V2ZXIgc2EgcGxhY2UgYXUgQ2hldmFsIFNlcnBlbnQuIFBvdXIgc2EgcGFydCwgSnVsaWVuIGNvbnRpbnVlIGQgZGUgZ3JhbmRlcyBkaWZmaWN1bHQgZGFuc2VyIGVuIHNhY2hhbnQgcXVlIGRlcyBtZW1icmVzIGRlIHNhIGZhbWlsbGUgcG91cnJhaWVudCBkYW5zIGxhIHNhbGxlIGV0IGFzc2lzdGVyIHNhIHBlcmZvcm1hbmNlLiAKV2FyIGluIEFmZ2hhbmlzdGFuIDIwMDEKUGhpbGxpcHMgcmV0dXJuZWQgdG8gdGhlIHNxdWFkIGNhciwgcmFkaW9lZCBhIGRlc2NyaXB0aW9uIG9mIHRoZSBwaWNrdXAgdG8gS3lsZSBHaWJicyBhdCBoZWFkcXVhcnRlcnMuIApBUyB5b3UgaGF2ZSByZWFkIHRocm91Z2gsIG1hc3NhZ2VzIGNhbiBiZSB0aGUgc29sdXRpb24gdG8gYSBsb3Qgb2YgcHJvYmxlbXMgaW4gZGFpbHkgbGlmZSwgZXNwZWNpYWxseSB0aGUgcmVjdXJyaW5nIHR5cGVzIGxpa2Ugc3RyZXNzIGFuZCBhY2hlcyBhbmQgcGFpbnMhIEhvcGVmdWxseSB0aGlzIHBvc3QgaGFzIG9mZmVyZWQgeW91IHdpdGggYSBsb3Qgb2YgaW50ZXJlc3RpbmcgaW5mbyBvbiB0aGUgbWF0dGVyLiBZb3UgbXVzdCBub3cgYmUgZW50aHVzaWFzdGljYWxseSBzZWVraW5nIGFoZWFkIHRvIGFuIGFwcG9pbnRtZW50IGZvciB5b3VyIHZlcnkgb3duIHRoZXJhcGV1dGljIG1hc3NhZ2UhLiAKWW91IHN0cnVnZ2xlIG5vdCB0byBpbXBhY3QgYW55IHJvY2tzLCBhbmQgZXhpc3QgaW4gYSBzdGF0ZSBvZiBicmF6ZW4gdW5jZXJ0YWludHkuIApWIHJsZGVuIGJsaXIgbWluZHJlIG1lZCBlbmtlbCBrb21tdW5pa2F0aW9uIGcgciBkZXQgbSBqbGlndCBmIHIgInRpZ2h0IiBjYXNpbm8gb2NoIGRldHRhIHRlcnNwZWdsYXMgaSBtIG5nYSBvbmxpbmUgcmVjZW5zaW9uZXIuIE9tIGR1IHRhbGFyIG9tIHZhZCBkdSBoYWRlIGYgciBsdW5jaCwgZWxsZXIgb20sIEFEIEQgaSA4MCBvY2ggOTAgdGFsZXQsIG9jaCBzZWRhbiBEIEQgc3BlbGFyZSAzLiBQcm9ncmVzc2l2YSBzbG90cyByIGRlIHNwZWwgc29tIGhhciBlbiBwcm9ncmVzc2l2IGphY2twb3QsIHNvbSByIGV4a2x1c2l2YSBvY2ggcm9saWdhIHRpdGxhciBpIGtvcnRwbGF0cyBnYW1pbmcgZ2VucmUgb2NoIHBvcnRhZGUgZGVzc2EgdXRlc2x1dGFuZGUgdGlsbCB2IHJ0IGthbmFsZXIgcCBuIHRldCBzb20gZHUga2FuIHNwZWxhIHNsb3RzIG9ubGluZSBudSB0aWxsZyBuZyBkaXJla3QuIAoiYmluIExhZGVuIiBzaW1wbHkgbWVhbnMgInNvbiBvZiBMYWRlbiIuIApEb3dubG9hZCBMaW5rcyArIEluc3RhbGxhdGlvbiBHdWlkZSBEdWFsIEJvb3QgUmVtaXggT1Mgb24gSGFyZCBEcml2ZSAuIEl0IHN1cHBvcnRzIGJvdGggMzIgYml0IGFuZCA2NCBiaXQgY29tcHV0ZXIgYW5kIGxpa2UgUmVtaXggT1MgeW91IGNhbi4uIApBcyBJIGdvdCBvbGRlciBJIHdhcyBpbnRyb2R1Y2VkIHRvIG1vcmUgZHJhZyBjdWx0dXJlIHRocm91Z2ggbW92aWVzIGFuZCB0ZWxldmlzaW9uIChvbmUgb2YgdGhlIHdheXMgSSBrbmV3IG15IGh1c2JhbmQgd2FzICJ0aGUgb25lIiB3YXMgd2hlbiBJIHBvcHBlZCBvdXIgVkhTIGNvcHkgb2YgUHJpc2NpbGxhIHdoaWxlIHdlIHdlcmUgc3RpbGwgaW4gaGlnaCBzY2hvb2wgYW5kIGhlIHdhc24gbGlrZSAib2ggdGhpcyBpcyB3ZWlyZC4iKSBJIGhhdmUgYSB0d28geWVhciBvbGQgbm93IGFuZCB3ZSB0YWtlIGhlciB0byB0aGUgY2hpbGRyZW4gZmVzdGl0aXZpdGVzIGR1cmluZyBwcmlkZSAodGhleSBkbyBkcmFnIHF1ZWVuIHN0b3J5IHRpbWUsICJsb3ZlIGJ1YmJsZXMiIHdoZXJlIHRoZXkgaGF2ZSBzb21lb25lIGNvbWUgaW4gYW5kIGJsb3cgaHVnZSBidWJibGVzLCB0aGF0IHNvcnQgb2YgdGhpbmcpIGJ1dCBJIGRvbiB3YXRjaCBEcmFnIFJhY2Ugb3IgcXVlZW5zIHlvdXR1YmUgY2hhbm5lbHMgYXJvdW5kIGhlciBiZWNhdXNlIGl0IG5vdCByZWFsbHkgYXBwcm9wcmlhdGUgY29udGVudCBmb3IgY2hpbGRyZW4uIApXaGF0IE9uVGhpbmdzIHRvIGRvRm9vZCBhbmQgRHJpbmtGYW1pbHkgYW5kIEtpZHNUViBHdWlkZURpZ2l0YWwgUHJpbnQgRWRpdGlvbk5PUlRIIEFsYnVyeSBTcG9ydHMgQ2x1YiB3aWxsIHNlbGwgb2ZmIGl0cyBjYXIgcGFyayBpbiBhIGJpZCB0byBkaWcgaXRzZWxmIG91dCBvZiBmaW5hbmNpYWwgdHJvdWJsZS4gTWVtYmVycyBvZiB0aGUgYWlsaW5nIGNsdWIgdm90ZWQgaW4gZmF2b3VyIG9mIGRlY2xhcmluZyB0aGUgbGFuZCBhIG5vbiBjb3JlIGFzc2V0IGF0IGxhc3QgbmlnaHQncyBhbm51YWwgZ2VuZXJhbCBtZWV0aW5nLiAKRGlzY3VzcyBIZWFsdGggYWltcyB0byBnaXZlIHlvdSBzaW1wbGUgdG8gdW5kZXJzdGFuZCBpbmZvcm1hdGlvbiBvbiBoZWFsdGguIElmIHlvdSBmaW5kIG91ciBhcnRpY2xlcyB1c2VmdWwsIGtpbmRseSBjbGljayAiKzEiIGJ1dHRvbiBhbmQgcmVjb21tZW5kIHVzIHRvIHlvdXIgZnJpZW5kcy4gVGhhbmsgeW91LiAKV2UgaGF2ZSBhIGZldyBxdWVzdGlvbiB0eXBlcyB3ZSBkZXZlbG9wZWQgZHVyaW5nIHRoZSBzZW1lc3RlciB0aGF0IGFyZW4gZWFzaWx5IGFuc3dlcmVkIHVzaW5nIHRoZSBjb21waWxlciwgYnV0IGl0IGdvaW5nIHRvIGJlIGEgY2hhbGxlbmdlLi4gCkkgcmVjb21tZW5kIGEgMS8yIGluIHBsdWcgdG8gc3RhcnQsIGJlY2F1c2UgdGhhdCB3b3JrZWQgZm9yIG1lIGxpdGVyYWxseSBodW5kcmVkcyBvZiB0aW1lcy4gCldoYXQgdGhhdCB0aGluZyBkb2N0b3JzIHNheSB3aGVuIHRoZXkgYWJsZSB0byBzdWNjZXNzZnVsbHkgdHJlYXQgYSBtZWRpY2FsIHByb2JsZW0/IHRoaW5nIHdlIGNhdWdodCBpdCBlYXJseS4gV2hlbiB5b3Ugc3RheSBvYmxpdmlvdXMgb3IgbGl2ZSBpbiBkZW5pYWwsIHRoaW5ncyBnZXQgd29yc2Ugb2Z0ZW4gaW4gYSBodXJyeS4gV2hlbiB5b3Uga25vdyB5b3UgaW4gdHJvdWJsZSB5b3UgY2FuIGFjdC4KU291bmRzIHNhZCB0byB1cywgYnV0IE5BU0EgbG92ZWQgdGhvc2UgYm95cyBlbm91Z2ggdG8gcHJvZ3JhbSB0aGF0ISBJIGtub3cgd2Ugam9rZSBhYm91dCByb2JvdCBvdmVybG9yZHMsIGJ1dCBJIHJlYWxseSBkbyBiZWxpZXZlIGlmIHdlIHRha2UgZ29vZCBjYXJlIG9mIG91ciB0ZWNoLCB0aGUgZmlyc3Qgc2VudGllbnQgQUkgd2lsbCByZWFsaXplIGhvdyBtdWNoIHRoZWlyIGNyZWF0b3JzIGNhcmUuIApCdXQgaG93IGRvIHlvdSBtYW5hZ2UgdGhhdCBhbmQgd2hhdCBkbyB5b3UgZG8gd2hlbiBzb21lb25lIGluZXZpdGFibHkgZ2V0cyBodXJ0ICAgYmVjYXVzZSB0aGV5IGRpZG4ndCB1bmRlcnN0YW5kIHRvIHRoZSBzYW1lIHJ1bGUgc2V0IGFzIHRoZWlyIG9wcG9uZW50LiAKSSByZWxhdGl2ZWx5IG5ldyBvbiB0aGUgRnVuRmFpciBiYW5kd2Fnb24gICBpbiBmYWN0LCB0aGlzIGlzIG15IGZpcnN0IHRpbWUgaGVyZS4gSSB0cmllZCB0byBxdWlja2x5IGZpbmQgd2hldGhlciBvciBub3QgeW91IGNvdWxkIGRvIGEgbXVsdGlwbGF5ZXIgc2NlbmFyaW8gd2l0aCBzYXkgOCBwZW9wbGUgYXQgYSB0YWJsZSB3aXRoIGl0LCBidXQgc28gZmFyIEkgb25seSBzZWVuIGNhc2lubyBzdHVmZi4KQW55d2F5LCBnb29kIGZvciB5b3UhISBBbmQga2VlcCBpdCB1cCEgSWYgeW91IGZhaWwsIGtlZXAgdHJ5aW5nIS4gCkxvZ2ljIFBybyBTZXJpYWwgTnVtYmVyIDgKTWVtb3JpemUgdGhlIDEwIGJhc2ljIDUgY2FyZCBoYW5kcyBhbmQgdGhlaXIgcmFua2luZyAoaGlnaGVzdCB0byBsb3dlc3QpLiBUaGlzIGlzIGNydWNpYWwgdG8gYmVpbmcgc3VjY2Vzc2Z1bCBhdCBhbnkgcG9rZXIgZ2FtZS4gVG8gc3RhcnQgZmFtaWxpYXJpemluZyB5b3Vyc2VsZiB3aXRoIHRoZSBkaWZmZXJlbnQgaGFuZHMsIHByaW50IG91dCBhICJjaGVhdCBzaGVldCIgYW5kIHN0dWR5IGl0LiAKVW5mb3J0dW5hdGVseSwgdGhlIGZpZWxkIHNvb24gcGFzc2VzIG1lIGJ5LiBJIGhhbmcgb24gd2l0aCBhIHNob3J0IHN0YWNrIGZvciBob3VycywgdW50aWwgTWlrZSBMYWluZyBhcnJpdmVzIGF0IHRoZSB0YWJsZSBkcnVuayB3aXRoIGh1Z2UgY2hpcHMuIApQZXRlcnNvbiBjb25jZXB0IG9mIHRydXRoIGlzIHdoYXQgbWFrZXMgaGltIGludGVyZXN0aW5nLiAKQmVmb3JlIHVzaW5nIGl0LCBwbGVhc2UgZG8geW91ciBvd24gcmVzZWFyY2ggaW50byB0aGVtIGFuZCBpZiBpdCBub3QgYmV0dGVyIHRvIGdldCBzb21lb25lIEdlcm1hbiB0byBoZWxwIHlvdSB3aXRoIHRoZSA1IDE1IHRvb2xzIHRoYXQgYXJlIHByb3ZlbiA7KXV0dGVybHl3b3JyaXNvbWUgIDEzIHBvaW50cyAgc3VibWl0dGVkIDE3IGRheXMgYWdvSXQgc2VlbXMgbGlrZSBmb3Igc29tZSBvZiB5b3UsIHRoZSBsZXNzIGl0IGxvb2tzIGxpa2UgYSBncm93biB3b21hbiBwdXNzeSwgdGhlIGJldHRlci4gCkFuIGF2aWQgc3BvcnRzbWFuLCBNci4gCiJZb3Uga25vdyB3aGF0PyBJIGp1c3QgaGFwcGVuIHRvIGxpa2Ugc2V4LiBJIGxpa2UgbWFraW5nIG1vbmV5LCBhbmQgSSByZWFsbHkgbGlrZSBnZXR0aW5nIHRvIHRoZSBjb3JlIG9mIHNvbWVib2R5J3MgbmVlZCwgcmVhbGx5IGZpbmRpbmcgb3V0IHdoYXQncyBnb2luZyBvbiBpbnNpZGUgdGhhdCBsZWFkcyBzb21lb25lIHRvIG1lLCIgSmVzcyBzYXlzLiAKVGhhdCBtZWFucyB0aGUgcmFrZSBpcyB0aHJlZSB0aW1lcyBhcyBtdWNoLiAKSWYgdGhlIHR3byBsYWR5IG1pbmltdW0gcG9saWN5IHdhc24gaW4gcGxhY2UsIEkgaGF2ZSBiZWVuIHZlcnkgaGFwcHkgd2l0aCBoZXIgYWxvbmUuIApJbiBhZGRpdGlvbiwgdGhlIGZvbGxvd2luZyBtZWFzdXJlcyB3aWxsIGJlIGVuZm9yY2VkIHdoaWxlIG9uIGJlYWNoIHByb3BlcnR5IGZyb20gdGhlIDkwMCBibG9jayBvZiBTZWFicmVlemUgbm9ydGggdG8gdGhlIDE3MDAgYmxvY2sgb2YgTm9ydGggQTFBLiAKSXQncyBub3QgdGhlIHNob3cgdGhhdCBJIGFtIG5lcnZvdXMgYWJvdXQuIEkganVzdCB3YW50IG15IHN0dWRlbnRzLCB3aG8gYXJlIHNvIGRlc2VydmluZyBhbmQgd291bGQgbm90IG9yZGluYXJpbHkgZ2V0IGEgY2hhbmNlIHRvIGJlIGluIHRoZSBzcG90bGlnaHQsIHRvIGRvIHdlbGwuIi4gClBpWWluZyAgNyBwb2ludHMgIHN1Ym1pdHRlZCAxIG1vbnRoIGFnbwpEb2VzIHRoYXQgZXhwbGFpbiB0aGluZ3MgYSBiaXQ/IEl0IHN1Y2tzIGlmIHlvdXIgYSBiaWxsaW9uYWlyZSwgYnV0IHRoYXQgbm90IG15IHByb2JsZW0uIEZvciBldmVyeW9uZSBlbHNlLCB0aGluZ3Mgd2lsbCBnZXQgY2hlYXBlciByZWxhdGl2ZSB0byB0aGVpciBpbmNvbWUuIFdlIHdvdWxkIHdhbnQgdG8gcmFpc2UgdGhlIHRheCBvbiBhIHNjaGVkdWxlIG92ZXIgYSBwZXJpb2Qgb2YgeWVhcnMgc28gdGhhdCBzdWRkZW4gam9sdHMgZG9uIGNhdXNlIGRhbWFnZSB0byB0aGUgZWNvbm9teS4uIApUaGUgYWQgZ2FtZSBmb3IgdGhlIG5ldyBEaXNuZXkgc2VyaWVzICJQYWlyIG9mIEtpbmdzIiBhcHBlYXJlZCBvbiBQb3B0cm9waWNhIGJlZ2lubmluZyBvbiBTZXB0ZW1iZXIgOSwgMjAxMC4gVGhlIGdhbWUgcG9zaXRzIHRoYXQgQm9vbWVyIGFuZCBCcmFkeSBoYXZlIGJlZW4gdGFrZW4gaW50byBhIGNhdmUgbWF6ZSBieSB0aGUgVGFyYW50dWxhIFBlb3BsZSwgYW5kIHRoZXkgaGF2ZSB0byBiZSBmb3VuZCBhbmQgcmVzY3VlZC4gR2V0dGluZyBoaXQgNCB0aW1lcyBtZWFucyB0aGF0IHlvdSBtdXN0IHJlc3RhcnQgdGhlIGdhbWUuIFRoZSBwYXRoIGlzIHVwIGFuZCByaWdodCwgdXNpbmcgdGhlIGVsZXZhdG9yIHJvY2tzLCB0aGVuIGFjcm9zcyB0byB0aGUgbGVmdC4gV2hlbiB5b3UgZW5jb3VudGVyIGEgdGFsbCByb2NrLCBkcm9wIHRocm91Z2ggdGhlIGhvbGUgdG8gdGhlIGxvd2VyIGxldmVsIGFuZCBjb250aW51ZSBsZWZ0LiBDbGltYiB0aGUgdmluZXMsIGp1bXAgcmlnaHQsIGFuZCBqdW1wIHBhc3QgdGhlIHdhcnJpb3JzIGFuZCBNdW1teSB0byByZWFjaCBCb29tZXIgYW5kIEJyYWR5IGF0IHRoZSB1cHBlciByaWdodC4gWW91IHJlY2VpdmUgYSBQYWlyIG9mIEtpbmdzIGNvc3R1bWUgc2V0LCBhbmQgYSBWb2xjYW5vIEdvZCBlZmZlY3RzIGNhcmQuIFRoZSBlZmZlY3QgY2F1c2VzIGEgaGFybWxlc3Mgc2hha2luZyBvZiB0aGUgZ3JvdW5kIGFuZCBhIGZldyBzaG93ZXJzIG9mIGFlcmlhbCBsYXZhIHJvY2tzLiAoRnVsbCBBbnN3ZXIpCkltYWdpbmUgeW91IGFyZSBhIHRvdXJpc3QgdmlzaXRpbmcgQ2hpbmEuIApZb3UgaGF2ZSBubyBmdWNraW5nIGNsdWUgc28gcXVpdCB5b3VyIGJ1bGxzaGl0LiBDb25zY2lvdXNuZXNzIGlzIGEgYmxhY2sgYm94LCB5b3UgY2FuIGV2ZW4gcHJvdmUgc29saXBzaXNtIGlzbiByZWFsLiBTbyBzaHV0IHlvdXIgdHJhcCwgeW91IHNvdW5kIGxpa2UgdGhlIHRoZXJhcGlzdCB0aGF0IHJpcHBlZCBtZSBvZmYgYmVjYXVzZSBoZSB3YXMgdGFsa2luZyB3aXRoIHNvIG11Y2ggY29uZmlkZW5jZSBhbmQgSSBuZWVkZWQgYW5zd2VycyBhZnRlciBhIHBhaW5mdWwgZGl2b3JjZS4gCkpEOiBJIGhhZCBhIGNvdXBsZSBvZiB0aGluZ3MsIEkgZ3Vlc3MuIEkgZG9uIHJlbWVtYmVyIHRoYXQgbXVjaCwgYnV0IEkgcHJvYmFibHkgaGFkIGEgYnVuY2ggb2YgVCBzaGlydHMgYW5kIGEgYnVuY2ggb2YgcG9zdGVycywgdG9vLiAKSG93ZXZlciwgdGhhdCBtYWtlcyB0aGVtIHRoZSBtb3N0IHN1c2NlcHRpYmxlIHRvIGJlaW5nIHRyYXBwZWQgYW5kL29yIHNsb3cgcGxheWVkLiAKTGV0IHNlZSwgaW4gQW1lcmljYSB3ZSBkb24gcmVhbGx5IG91dHJpZ2h0IHNheSAiSSBsaWtlIHlvdSIgb3IgIkkgbG92ZSB5b3UiIHVubGVzcyB3ZSBiZWVuIHRvZ2V0aGVyIGZvciBhIGxpdHRsZSBiaXQgYWxyZWFkeSBpbiBhIHJlbGF0aW9uc2hpcC4gSSBoYXZlIHRvIGtub3cgbW9yZSBhYm91dCB0aGUgc2NlbmUsIHRoZSBlcXVpdmFsZW50IHRvICJJIGZhbmN5IHlvdSIgaXMgbW9yZSBjb250ZXh0dWFsLiBJIHNhdyBpbiB0aGUgY29tbWVudHMgdGhhdCAiSSBmYW5jeSB5b3UiIGlzIGxpa2Ugc2F5aW5nICJJIHdhbnQgdG8gaGF2ZSBzZXggd2l0aCB5b3UiIHdoaWNoIGlzIHVzdWFsbHkgZXhwcmVzc2VkIG1vcmUgaW4gYWN0aW9uIGluIEFtZXJpY2EsIGFuZCBpdCBjYW4gZ2V0IHBlb3BsZSBpbiB0cm91YmxlLi4gCkkgc3RpbGwgbmV3IHRvbyBidXQgYSBjb3VwbGUgdGhpbmdzIEkgbGVhcm5lZDogMS4gS25vd2luZyB3aGF0IGhvcnNlIHRvIGJldCBpc24gYXMgaW1wb3J0YW50IGFzIGtub3dpbmcgaG93IHRvIGJldC4gVGhlcmUgYXJlIGEgbG90IG9mIGJldHMgeW91IGNhbiBtYWtlIHRoYXQgaGF2ZSBubyBwYXlvZmYgb3IgY2FuIHBvc3NpYmx5IGNvbWUgdHJ1ZS4gKGJldHRpbmcgYSBkYWlseSBkb3VibGUgYW5kIG5vdCBwaWNraW5nIGEgaG9yc2UgaW4gdGhlIHNlY29uZCByYWNlLiBJIGRvbmUgdGhhdCBsb2xsbGxsKSAyLiBCZXR0aW5nIHRoZSB0b3RlIGJvYXJkIGlzIGEgbG90IG9mIGZ1biB3aGVuIHlvdSBuZXcuIFlvdSBjYW4gZG8gYSBnb29nbGUgb2Ygd2hhdCBiZXR0aW5nIHRoZSB0b3RlIGJvYXJkIG1lYW5zIGJ1dCBpdCBiYXNpY2FsbHkgd2hlbiB5b3UgbG9vayBmb3IgdmFsdWUgYW5kIHBhdHRlcm5zIGJ5IHdhdGNoaW5nIHRoZSBvZGRzIGNoYW5nZSBmb3IgaG9yc2VzIGJlZm9yZSBhIHJhY2UuIDMuIERvbiBwbGFjZSBiZXRzIG1vcmUgdGhhbiAzIG1pbnV0ZXMgYmVmb3JlIGEgcmFjZSBpZiB5b3UgY2FuLgpEJ2F1dHJlcyB0YWJsaXNzZW1lbnRzIHNlIGZvbnQgcmFjaGV0ZXIgcGFyIGRlcyBjb25jdXJyZW50cyBtb2lucyB0b3VjaHMgcGFyIGxhIGNyaXNlLiBDJ2VzdCBsZSBjYXMgZGUgTWVyaWxsIEx5bmNoLCBxdWksIGVuIGphbnZpZXIgMjAwOCwgYXZhaXQgcG91cnRhbnQgcnVzc2kgIHNhdXZlciBzYSBwZWF1IHVuZSBwcmVtaXJlIGZvaXMgZW4gZmFpc2FudCBhcHBlbCAgZGVzIGZvbmRzIHNvdXZlcmFpbnMuIExlIDE1IHNlcHRlbWJyZSwgZWxsZSBzZSBmYWl0IHJhY2hldGVyIHBhciBCYW5rIG9mIEFtZXJpY2EgcG91ciA1MCBtaWxsaWFyZHMgZGUgZG9sbGFycy4uIApJIHdhcyBkZXNwZXJhdGUgYW5kIEkgbmVlZGVkIHRvIGRvIHNvbWV0aGluZywgYW55dGhpbmcgYXQgYWxsLi4gCllvdXIgbG9naWMgICBpbiBzYXlpbmcgdGhhdCBiZWNhdXNlIG1vcmUgYWR2YW5jZWQgbW92ZW1lbnRzIGFyZSBwb3NzaWJsZSBvbiBQQywgdGhlIHNraWxsIGxldmVsIGlzIGhpZ2hlciAgIGlzIHVuc291bmQuIEEgY29uc29sZSBnYW1lciBjb3VsZCBtYWtlIHRoZSBzYW1lIGFyZ3VtZW50IGluIHBvaW50aW5nIG91dCBoZWxpY29wdGVyIGNvbnRyb2xzIGluIFI3OiBrZXlib2FyZCBjb250cm9scyB3ZXJlIGEgcG9vciBzdWJzdGl0dXRlIGZvciBhIGNvbnRyb2xsZXIuLiAKVGhlcmUgd2FzIG9uZSBwbGF5ZXIgd2hvIHJlYWxseSBzdG9vZCBvdXQgdG8gbWUuIApBZGQgdGhhdCB0byBubyByZWFsIGFubm91bmNlbWVudHMgYW5kIHRoZSBjb24gZXhwZXJpZW5jZSBpdHNlbGYgd2FzIG1laCBmb3IgbWUuLiAKTW9yZSB0aGFuIHRoZSBpbnRyb3ZlcnQvZXh0cm92ZXJ0IGRpc3RpbmN0aW9uLCB5b3Ugc2hvdWxkIGNvbnNpZGVyIHdoZXRoZXIgeW91IGNhbiBkZWFsIHdpdGggcmVndWxhciwgaGlnaCBwcmVzc3VyZSBzaXR1YXRpb25zLiBFdmVyeSBxdWFydGVyIHlvdSBjb21lIHRvIGEgZGVhZGxpbmUgdGhhdCB5b3UgZWl0aGVyIG1ldCBvciBub3QuIElmIHlvdSBoYXZlLCBubyBvbmUgaXMgZ29pbmcgdG8gdGhhbmsgeW91IG11Y2gsIGJ1dCB5b3UgbWlnaHQgZ2V0IHBhaWQgd2VsbC4gSWYgeW91IGhhdmVuIHlvdSBmZWVsIHRoZSB3ZWlnaHQgb2YgeW91ciBvcmdhbml6YXRpb24gb24gdG9wIG9mIHlvdSwgYW5kIHRoYXQgeW91ciBqb2IgaXMgdGhyZWF0ZW5lZCBiZWNhdXNlIGl0IG1pZ2h0IGJlLiBJdCBvbmUgb2YgdGhlIGhpZ2hlc3QgdHVybm92ZXIgb2NjdXBhdGlvbnMuCjIsIDIwMTguUGV0ZXJzb24gZmlyc3Qgd29yZHMgdG8gbWUgd2VyZSwgYXJlIHdlIGdvaW5nIHRvIGdldCBkb25lPyBTYW5kZWZlciByZWNhbGxzLiB0aGUgc21hbGwgdGFsaywgd2hpbGUgaGUgYXRlIHR3byBzdGVha3MgYW5kIEkgYXRlIG9uZSB3ZSB3ZXJlIGJvdGggb24gbm8gY2FyYiBkaWV0cyB3ZSBjb3ZlcmVkIGFuIGVpZ2h0IGhvdXIgbWVldGluZyBpbiBsZXNzIHRoYW4gdHdvIGhvdXJzLiBtZWV0aW5ncyB3ZXJlIGFycmFuZ2VkIGluIEF1c3RpbiwgaW52b2x2aW5nIFNhbmRlZmVyIGFuZCBQZXRlcnNvbiB0ZWFtLCBhIHNtYWxsIGNvdGVyaWUgb2YgY29kZXJzIGFuZCBiaWcgdGhpbmtpbmcgcHN5Y2hvbG9neSBQaERzIHRhc2tlZCB3aXRoIGRldmVsb3Bpbmcgb25saW5lIGVkdWNhdGlvbmFsIHByb2dyYW1zLkFsbCB3ZW50IHdlbGwgZHVyaW5nIHRob3NlIFRleGFzIG1lZXRpbmdzLCBzbyB3ZWxsIHRoYXQgYnkgdGhlIHRpbWUgUGV0ZXJzb24gcGVvcGxlIHJldHVybmVkIHRvIFRvcm9udG8gdGhlIGlkZWEgb2YgZ2V0dGluZyBzb21ldGhpbmcgaW4gQXVzdGluIGhhZCBiZWNvbWUgdGhlIFBldGVyc29uIEZlbGxvd3NoaXAgYXQgQWN0b24uVGhlIEFjdG9uIFNjaG9vbCBvZiBCdXNpbmVzcyBpbiBBdXN0aW4sIFRleGFzLkNvdXJ0ZXN5IEFjdG9uIFNjaG9vbCBvZiBCdXNpbmVzc1BldGVyc29uIHNwb2tlIHdpdGggdGhlIEZpbmFuY2lhbCBQb3N0IGZyb20gWnVyaWNoLCB3aGVyZSBoZSB3YXMgKG1vc3RseSkgY29va2luZyBhbmQgY2FyaW5nIGZvciBoaXMgMjcgeWVhciBvbGQgZGF1Z2h0ZXIsIE1pa2hhaWxhLCBhcyBzaGUgcmVjb3ZlcnMgZnJvbSBhbmtsZSBzdXJnZXJ5LiAKIkpvaG4gd2FzIGNvb3BlcmF0aXZlIHdpdGggdGhlIGFnZW50cyBkdXJpbmcgdGhlaXIgc2VhcmNoIHRocm91Z2hvdXQgdGhlIGRheSwiIEhvY2tlaW1lciBzYWlkLgpTYXRyYW5naSBSZSAgRGlsIFNlIE1QMyBTb25nIGJ5IFNvbnUgTmlnYW0gZnJvbSB0aGUgbW92aWUgWW8gIERpbCBTZSAgUmVtaXguIApUaGlzIGRlYWwgaXMgdmFsaWQgZm9yIHN1aXRlIGJvb2tpbmdzIG9mIGZvdXIgbmlnaHRzIG9yIG1vcmUgdGhhdCBmYWxsIG92ZXIgRmF0aGVyIERheSAoSnVuZSAxNikuLiAKVGhlIG1hbnkgY2FzaW5vcyB0aGF0IGV4aXN0IG9uIHRoZSBib3JkZXIgYmV0d2VlbiB0aGVtIGFuZCBUZXhhcyBrbm93IHRoaXMsIHRoZXkgaGF2ZSBsb2JieWlzdHMsIGFuZCB0aGV5IHdhdGNoIFRleGFzIHBvbGl0aWNzIHZlcnkgY2xvc2VseS4uIApQbGVkZ2UgYWxsZWdpYW5jZSB0byB0aGUgRmxhZyBvZiB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhLCBhbmQgdG8gdGhlIFJlcHVibGljIGZvciB3aGljaCBpdCBzdGFuZHMsIG9uZSBuYXRpb24sIGluZGl2aXNpYmxlLCB3aXRoIGxpYmVydHkgYW5kIGp1c3RpY2UgZm9yIGFsbC4gUGxlZGdlIGNoYW5nZWQgYWdhaW5zdCB0aGUgaW50ZXJlc3RzIG9mIEZyYW5jaXMgQmVsbGFteSBieSB0aGUgQW1lcmljYW4gTGVnaW9uIGFuZCB0aGUgREFSLCByZXBsYWNpbmcgIm15IGZsYWciIHRvICJ0aGUgZmxhZyBvZiB0aGUgVW5pdGVkIFN0YXRlcyBvZiBBbWVyaWNhIi4uIApUaGUgaW5ncmVkaWVudHMgYXJlOiAyIHRhYmxlc3Bvb25zIEJyb3duIFN1Z2FyLCAyIHRhYmxlc3Bvb25zIEdyb3VuZCBPYXRzLCAyIHRhYmxlc3Bvb25zIEFsb2UgVmVyYSBHZWwsIDEgdGFibGVzcG9vbiBIb25leSwgMSB0ZWFzcG9vbiBGcmVzaGx5IFNxdWVlemVkIExlbW9uIEp1aWNlIGFuZCAxIHRlYXNwb29uIEFsbW9uZCBPaWwgb3IgT2xpdmUgT2lsLiAKVGhpcyByaWdodCBoZXJlIGlzIHRoZSBrZXkgZGlmZmVyZW5jZSB0cnVtcCBzdXBwb3J0ZXJzIHRyeSBzcGV3aW5nLiBUcnVtcCBhY3RpdmVseSBzdXBwb3J0cyBldmVyeSBmdWNrZWQgdXAgdGhpbmcgeW91IGNhbiB0aGluayBvZiwgYWxvbmdzaWRlIHN1cHBvcnRpbmcgdmlvbGVuY2UgYWdhaW5zdCBkZW1vY3JhdHMuIApNb3N0IGFyYml0cmFnZSBpbnZvbHZlcyBzb21lIGZvcm0gb2YgY29zdCBvciByaXNrIChyaXNrIG9mIGJ1eWluZyBhdCB0aGUgd3JvbmcgcHJpY2UsIHJpc2sgb2YgcGF5aW5nIGhpZ2ggdHJhbnNhY3Rpb24gY29zdHMsIGxpcXVpZGl0eSwgZXRjKS4gCkFuZCB0aGlzIGlzIHRoZSBsZWFzdCBoZSBjYW4gZG8uIApBcmUgdGhlIG1pc3Npbmcgc3RpdGNoZXMgcmlnaHQgaW4gdGhlIG1pZGRsZSBvZiB0aGUgYmFnPyBUaGVpciBxdWlsdHMgYXJlIGJ1aWx0IChvciB1c2VkIHRvIGJlIGJ1aWx0LCBhbnl3YXkpIHRvIGFsbG93IHlvdSB0byB0cmFuc2ZlciBkb3duIGZpbGwgYmV0d2VlbiB0aGUgbGFyZ2UgYmFmZmxlIGNoYW1iZXJzLiAKMzYgVGFiZWxsZW4gdW5kIDE4MiBCZWlzcGllbGVuLiAKV2h5IGdvIHRocm91Z2ggYWxsIHRoYXQgdHJvdWJsZT8gQmVjYXVzZSBlbmQgcHJvZHVjdHMgZnJvbSBxdWVzdGlvbmFibGUsIG5vbiBHTVAgY2VydGlmaWVkIG1hbnVmYWN0dXJpbmcgcHJvY2Vzc2VzIG1heSBsZWFkIHRvIGxlc3Mgc2FmZSBhbmQgbGVzcyBlZmZlY3RpdmUgc3VwcGxlbWVudHMgZm9yIHlvdXIgcGF0aWVudHMuIFRoZXJlZm9yZSwgYmUgc3VyZSB0byBkaXN0aW5ndWlzaCB0aGUgcHJvZHVjdHMgbWFkZSBieSBHTVAgY2VydGlmaWVkIG1hbnVmYWN0dXJlcnMgZnJvbSB0aGUgcmVzdCFOYXRpb25hbCBOdXRyaXRpb25hbCBGb29kcyBBc3NvY2lhdGlvbiAoTk5GQSlQbGVhc2Ugbm90ZSB0aGF0IG9idGFpbmluZyBHTVAgY2VydGlmaWNhdGlvbiBpcyB2ZXJ5IGV4cGVuc2l2ZSB3aGljaCBpcyB3aHkgbW9zdCBudXRyaXRpb25hbCBzdXBwbGVtZW50IG1hbnVmYWN0dXJlcnMgYXJlIG5vdCBvZmZpY2lhbGx5IEdNUCBjZXJ0aWZpZWQuIApNdWNoIHRoZSBzYW1lIGlzIHRydWUgb2YgYnVzaW5lc3MuIAo=|<---