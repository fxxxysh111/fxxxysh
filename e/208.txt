<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
 <head>
  <meta content="text/html; charset=utf-8" http-equiv="Content-Type"/>
  <title>
   [area1][mkey1][keyword1][bracketl2][site1][bracketr2][bracketl3][contact1][bracketr3][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]
  </title>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="keywords"/>
  <meta content="[area1][mkey1][keyword1][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx][symbolx][area1][keywordx]" name="description"/>
  <base href="http://www.sdss3.org/"/>
 </head>
 <body>
  <div class="header">
   <form action="p" method="post">
    <p>
     Search <li>[link]</li><li>[search]</li>[search]<span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[ahref]</li>
    </p>
   </form>
   <p>
    [ahref][ahref][areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][link]<br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>
   </p>
  </div>
  <div class="navbar" id="topnav">
   <ul>
    <li>
     [link]
     
    </li>
    <li>
     <a class="highlight" href="/">
      Surveys
     </a>
    </li>
    <li>
     [link]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [link]
     
     <ul>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       <a href="/">
        DR9
       </a>
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [link]
       
      </li>
      <li>
       [ahref]
       
      </li>
      <li>
       [link]
       
      </li>
     </ul>
    </li>
    <li>
     [search]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [ahref]
     
    </li>
    <li>
     [link]
     
    </li>
   </ul>
  </div>
  <div class="main_container">
   <div class="leftnav">
    <ul>
     <li>
      [link]
      
     </li>
     <li>
      <a class="highlight" href="/boss.php">
       BOSS
      </a>
     </li>
     <li>
      [link]
      
     </li>
     <li>
      <h2>
       <b>[area3][keyword3][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx][symbolx][area3][keywordx]</b>
      </h2>
      [link]
      
     </li>
     <li>
      [link]
      
     </li>
    </ul>
   </div>
   <div class="right_content">
    <h1 id="Top">
     <b>[area2][keyword2][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx][symbolx][area2][keywordx]</b>
    </h1>
    <p>
     The SDSS-III's Baryon Oscillation Spectroscopic Survey (BOSS) will map
the spatial distribution of luminous red galaxies (LRGs) and quasars
to detect the characteristic scale imprinted by baryon acoustic
oscillations in the early universe. Sound waves that propagate in the
early universe, like spreading ripples in a pond, imprint a
characteristic scale on cosmic microwave background fluctuations.
These fluctuations have evolved into today's walls and voids of
galaxies, meaning this baryon acoustic oscillation (BAO) scale (about
150 Mpc) is visible among galaxies today. This concept is illustrated
below (some of the relative scales have been exaggerated for
illustration purposes).
<li>[ahref]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</p>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<li>[link]</li>[search]<li>[link]</li><li>[search]</li>
    </p>
    <table class="centerfigure">
     <tr>
      <td>
      </td>
     </tr>
     <tr>
      <td>
       An illustration of the concept of baryon acoustic oscillations,
which are imprinted in the early universe and can still be seen
today in galaxy surveys like BOSS
       <br/>
       (Illustration courtesy of Chris
Blake and Sam Moorfield).
      </td>
     </tr>
    </table>
    <table class="figure" style="width:278px;">
     <tr>
      <td>
       [ahref]
       
      </td>
     </tr>
     <tr>
      <td>
       Comparison of the power spectrum of SDSS-II LRGs and BOSS
DR9 CMASS galaxies. Solid lines show the best-fit models. From
       [ahref]
       
       .
      </td>
     </tr>
    </table>
    <p>
     These baryon acoustic oscillations have now been measured in the
distribution of galaxies as illustrated on the right, where we show
the power spectrum of galaxy fluctuations, as a function of scale
(shown here as a wave number, k). We have removed the smooth component
to more clearly show the oscillations, which are the BAO signal of
interest. The two panels show the previous results from SDSS-II DR7
LRGs (top) and the new results from the z = 0.55 BOSS DR9
sample (CMASS, bottom). The reduction in errors and the better
fit to the cosmological model (solid line) of the BOSS data compared
to the SDSS-II is clearly evident. When the survey is completed, the
errors on the BOSS measurements will be further reduced, and we will
also measure the BAO at several other redshifts.
    </p>
    <p>
     Using the acoustic scale as a physically calibrated ruler, BOSS
will determine the angular diameter distance with a precision of 1% at
redshifts z = 0.3 and z = 0.55 using the
distribution of galaxies.  It will also measure the distribution of
quasar absorption lines at z = 2.5, yielding a measurement
of the angular diameter distance at that redshift to an accuracy of
1.5%.  It will also measure the cosmic expansion rate H(z) with 1-2%
precision at the same redshifts. These measurements will provide
demanding tests for theories of dark energy
and the origin of cosmic acceleration.
    </p>
    <table class="common">
     <tr>
      <th>
       BOSS at a glance
      </th>
     </tr>
     <tr>
      <td>
       Dark time observations
      </td>
     </tr>
     <tr>
      <td>
       Fall 2009 - Spring 2014
      </td>
     </tr>
     <tr>
      <td>
       [link]
       
       , resolution R~2000
      </td>
     </tr>
     <tr>
      <td>
       Wavelength: 360-1000 nm
      </td>
     </tr>
     <tr>
      <td>
       10,000 square degrees
      </td>
     </tr>
     <tr>
      <td>
       Redshifts of 1.5 million luminous galaxies to z = 0.7
      </td>
     </tr>
     <tr>
      <td>
       Lyman-α forest spectra of 160,000 quasars at redshifts 2.2 < z < 3
      </td>
     </tr>
     <tr>
      <td>
       [ahref]
       
      </td>
     </tr>
     <tr>
      <td>
       [link]
       
      </td>
     </tr>
    </table>
    <p>
     In addition to constraining cosmological models, BOSS will deliver
an outstanding sample of galaxies and quasars ideally suited to
probing the formation and evolution of galaxies in the Universe. For
example, we show below an example z =0.56 galaxy spectrum for
early BOSS data which shows the level of spectral detail we can expect
on these intermediate redshift galaxies. By studying the various key
absorption features in this spectrum (labeled and shown with red
tickmarks), we can estimate the age and metallicity of the stars in these
galaxies, and thus determine how and when they formed. The sheer size
of BOSS, coupled with the BOSS
spectrograph resolution, will greatly enhance this area of science.
    </p>
    <table class="centerfigure">
     <tr>
      <td>
       <a href="/dr10/en/tools/explore/obj.aspx?plate=4382&amp;mjd=55742&amp;fiber=9">
       </a>
      </td>
     </tr>
     <tr>
      <td>
       A randomly selected spectrum from the dr10 BOSS data, showing
absorption (red) and emission (blue) lines. Click on the image to go to this
object's page on SkyServer.
      </td>
     </tr>
    </table>
    <p>
     <li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[search]<li>[search]</li><br>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]</br><li>[ahref]</li>[link]<li>[search]</li>
    </p>
    <h3>
     [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
    </h3>
    <p>
     <li>[link]</li><span>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx]<span><li>[link]</li>[link]<li>[ahref]</li><li>[search]</li>
    </p>
    <ul>
     <li>
      There are some
      [link]
      
      for
  accessing and viewing SDSS data.
     </li>
     <li>
      There are descriptions of the
      [link]
      
      for galaxies and quasars.
     </li>
     <li>
      Galaxy and quasar
      <a href="/data_access/vac.php">
       value
  added catalogs
      </a>
      based on results from DR10 BOSS papers are available to
  the public.
     </li>
    </ul>
    <h3>
     [area4][keyword4][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx][symbolx][area4][keywordx]
    </h3>
    <p>
     <li>[ahref]</li>[link][link]<li>[link]</li>[areax][keywordx][symbolx][areax][keywordx][symbolx][bracketl2][search][bracketr2][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][symbolx][areax][keywordx][search]
    </p>
    <p class="footer">
     Copyright © 2010-2013 SDSS-III
    </p>
    <table class="footer">
     <tr>
      <td id="fileft">
      </td>
      <td id="firight">
      </td>
     </tr>
    </table>
   </div>
  </div>
  <b style="color:black;background-color:#a0ffff">
   jnice12-ipp11-we-ze-0211
  </b>
 </body>
</html>
